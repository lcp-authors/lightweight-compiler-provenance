
../repos/coreutils/src/realpath:     file format elf32-littlearm


Disassembly of section .init:

00010c34 <.init>:
   10c34:	push	{r3, lr}
   10c38:	bl	11388 <strspn@plt+0x4d0>
   10c3c:	pop	{r3, pc}

Disassembly of section .plt:

00010c40 <calloc@plt-0x14>:
   10c40:	push	{lr}		; (str lr, [sp, #-4]!)
   10c44:	ldr	lr, [pc, #4]	; 10c50 <calloc@plt-0x4>
   10c48:	add	lr, pc, lr
   10c4c:	ldr	pc, [lr, #8]!
   10c50:			; <UNDEFINED> instruction: 0x000173b0

00010c54 <calloc@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #94208	; 0x17000
   10c5c:	ldr	pc, [ip, #944]!	; 0x3b0

00010c60 <fputs_unlocked@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #94208	; 0x17000
   10c68:	ldr	pc, [ip, #936]!	; 0x3a8

00010c6c <raise@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #94208	; 0x17000
   10c74:	ldr	pc, [ip, #928]!	; 0x3a0

00010c78 <strcmp@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #94208	; 0x17000
   10c80:	ldr	pc, [ip, #920]!	; 0x398

00010c84 <fflush@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #94208	; 0x17000
   10c8c:	ldr	pc, [ip, #912]!	; 0x390

00010c90 <memmove@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #94208	; 0x17000
   10c98:	ldr	pc, [ip, #904]!	; 0x388

00010c9c <free@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #94208	; 0x17000
   10ca4:	ldr	pc, [ip, #896]!	; 0x380

00010ca8 <faccessat@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #94208	; 0x17000
   10cb0:	ldr	pc, [ip, #888]!	; 0x378

00010cb4 <_exit@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #94208	; 0x17000
   10cbc:	ldr	pc, [ip, #880]!	; 0x370

00010cc0 <memcpy@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #94208	; 0x17000
   10cc8:	ldr	pc, [ip, #872]!	; 0x368

00010ccc <mbsinit@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #94208	; 0x17000
   10cd4:	ldr	pc, [ip, #864]!	; 0x360

00010cd8 <memcmp@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #94208	; 0x17000
   10ce0:	ldr	pc, [ip, #856]!	; 0x358

00010ce4 <fputc_unlocked@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #94208	; 0x17000
   10cec:	ldr	pc, [ip, #848]!	; 0x350

00010cf0 <dcgettext@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #94208	; 0x17000
   10cf8:	ldr	pc, [ip, #840]!	; 0x348

00010cfc <realloc@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #94208	; 0x17000
   10d04:	ldr	pc, [ip, #832]!	; 0x340

00010d08 <textdomain@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #94208	; 0x17000
   10d10:	ldr	pc, [ip, #824]!	; 0x338

00010d14 <rawmemchr@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #94208	; 0x17000
   10d1c:	ldr	pc, [ip, #816]!	; 0x330

00010d20 <iswprint@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #94208	; 0x17000
   10d28:	ldr	pc, [ip, #808]!	; 0x328

00010d2c <readlink@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #94208	; 0x17000
   10d34:	ldr	pc, [ip, #800]!	; 0x320

00010d38 <fwrite@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #94208	; 0x17000
   10d40:	ldr	pc, [ip, #792]!	; 0x318

00010d44 <lseek64@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #94208	; 0x17000
   10d4c:	ldr	pc, [ip, #784]!	; 0x310

00010d50 <__ctype_get_mb_cur_max@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #94208	; 0x17000
   10d58:	ldr	pc, [ip, #776]!	; 0x308

00010d5c <__fpending@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #94208	; 0x17000
   10d64:	ldr	pc, [ip, #768]!	; 0x300

00010d68 <mbrtowc@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #94208	; 0x17000
   10d70:	ldr	pc, [ip, #760]!	; 0x2f8

00010d74 <error@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #94208	; 0x17000
   10d7c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d80 <malloc@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #94208	; 0x17000
   10d88:	ldr	pc, [ip, #744]!	; 0x2e8

00010d8c <__libc_start_main@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #94208	; 0x17000
   10d94:	ldr	pc, [ip, #736]!	; 0x2e0

00010d98 <__freading@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #94208	; 0x17000
   10da0:	ldr	pc, [ip, #728]!	; 0x2d8

00010da4 <__gmon_start__@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #94208	; 0x17000
   10dac:	ldr	pc, [ip, #720]!	; 0x2d0

00010db0 <mempcpy@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #94208	; 0x17000
   10db8:	ldr	pc, [ip, #712]!	; 0x2c8

00010dbc <getopt_long@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #94208	; 0x17000
   10dc4:	ldr	pc, [ip, #704]!	; 0x2c0

00010dc8 <__ctype_b_loc@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #696]!	; 0x2b8

00010dd4 <getcwd@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #688]!	; 0x2b0

00010de0 <exit@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #680]!	; 0x2a8

00010dec <strlen@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #672]!	; 0x2a0

00010df8 <__errno_location@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #664]!	; 0x298

00010e04 <__cxa_atexit@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #656]!	; 0x290

00010e10 <memset@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #648]!	; 0x288

00010e1c <__printf_chk@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #640]!	; 0x280

00010e28 <fileno@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #632]!	; 0x278

00010e34 <__fprintf_chk@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #624]!	; 0x270

00010e40 <fclose@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #616]!	; 0x268

00010e4c <fseeko64@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #608]!	; 0x260

00010e58 <__overflow@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #600]!	; 0x258

00010e64 <setlocale@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #592]!	; 0x250

00010e70 <strrchr@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #584]!	; 0x248

00010e7c <nl_langinfo@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #576]!	; 0x240

00010e88 <bindtextdomain@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #568]!	; 0x238

00010e94 <__xstat64@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #560]!	; 0x230

00010ea0 <strncmp@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #94208	; 0x17000
   10ea8:	ldr	pc, [ip, #552]!	; 0x228

00010eac <abort@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #94208	; 0x17000
   10eb4:	ldr	pc, [ip, #544]!	; 0x220

00010eb8 <strspn@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #94208	; 0x17000
   10ec0:	ldr	pc, [ip, #536]!	; 0x218

Disassembly of section .text:

00010ec8 <.text>:
   10ec8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ecc:	mov	sl, r0
   10ed0:	sub	sp, sp, #20
   10ed4:	ldr	r0, [r1]
   10ed8:	mov	r9, r1
   10edc:	bl	134d8 <strspn@plt+0x2620>
   10ee0:	ldr	r1, [pc, #1052]	; 11304 <strspn@plt+0x44c>
   10ee4:	mov	r0, #6
   10ee8:	bl	10e64 <setlocale@plt>
   10eec:	ldr	r6, [pc, #1044]	; 11308 <strspn@plt+0x450>
   10ef0:	ldr	r1, [pc, #1044]	; 1130c <strspn@plt+0x454>
   10ef4:	ldr	r0, [pc, #1044]	; 11310 <strspn@plt+0x458>
   10ef8:	ldr	r5, [pc, #1044]	; 11314 <strspn@plt+0x45c>
   10efc:	ldr	r8, [pc, #1044]	; 11318 <strspn@plt+0x460>
   10f00:	bl	10e88 <bindtextdomain@plt>
   10f04:	mov	fp, #1
   10f08:	ldr	r0, [pc, #1024]	; 11310 <strspn@plt+0x458>
   10f0c:	bl	10d08 <textdomain@plt>
   10f10:	mov	r7, #0
   10f14:	ldr	r0, [pc, #1024]	; 1131c <strspn@plt+0x464>
   10f18:	bl	16abc <strspn@plt+0x5c04>
   10f1c:	str	r7, [sp, #12]
   10f20:	mov	r4, #0
   10f24:	str	r4, [sp]
   10f28:	mov	r3, r6
   10f2c:	mov	r2, r5
   10f30:	mov	r1, r9
   10f34:	mov	r0, sl
   10f38:	bl	10dbc <getopt_long@plt>
   10f3c:	cmn	r0, #1
   10f40:	beq	1107c <strspn@plt+0x1c4>
   10f44:	cmp	r0, #109	; 0x6d
   10f48:	beq	11070 <strspn@plt+0x1b8>
   10f4c:	bgt	10f74 <strspn@plt+0xbc>
   10f50:	cmp	r0, #76	; 0x4c
   10f54:	beq	1102c <strspn@plt+0x174>
   10f58:	bgt	10f9c <strspn@plt+0xe4>
   10f5c:	cmn	r0, #3
   10f60:	beq	10ffc <strspn@plt+0x144>
   10f64:	cmn	r0, #2
   10f68:	bne	11068 <strspn@plt+0x1b0>
   10f6c:	mov	r0, r4
   10f70:	bl	11604 <strspn@plt+0x74c>
   10f74:	cmp	r0, #122	; 0x7a
   10f78:	beq	1103c <strspn@plt+0x184>
   10f7c:	bgt	10fb4 <strspn@plt+0xfc>
   10f80:	cmp	r0, #113	; 0x71
   10f84:	beq	10ff0 <strspn@plt+0x138>
   10f88:	cmp	r0, #115	; 0x73
   10f8c:	bne	11068 <strspn@plt+0x1b0>
   10f90:	orr	fp, fp, #4
   10f94:	strb	r4, [r8]
   10f98:	b	10f20 <strspn@plt+0x68>
   10f9c:	cmp	r0, #80	; 0x50
   10fa0:	beq	10fd4 <strspn@plt+0x11c>
   10fa4:	cmp	r0, #101	; 0x65
   10fa8:	bne	11068 <strspn@plt+0x1b0>
   10fac:	bic	fp, fp, #3
   10fb0:	b	10f20 <strspn@plt+0x68>
   10fb4:	cmp	r0, #256	; 0x100
   10fb8:	beq	10fe0 <strspn@plt+0x128>
   10fbc:	ldr	r3, [pc, #860]	; 11320 <strspn@plt+0x468>
   10fc0:	cmp	r0, r3
   10fc4:	bne	11068 <strspn@plt+0x1b0>
   10fc8:	ldr	r3, [pc, #852]	; 11324 <strspn@plt+0x46c>
   10fcc:	ldr	r7, [r3]
   10fd0:	b	10f20 <strspn@plt+0x68>
   10fd4:	bic	fp, fp, #4
   10fd8:	strb	r4, [r8]
   10fdc:	b	10f20 <strspn@plt+0x68>
   10fe0:	ldr	r3, [pc, #828]	; 11324 <strspn@plt+0x46c>
   10fe4:	ldr	r3, [r3]
   10fe8:	str	r3, [sp, #12]
   10fec:	b	10f20 <strspn@plt+0x68>
   10ff0:	ldr	r3, [pc, #816]	; 11328 <strspn@plt+0x470>
   10ff4:	strb	r4, [r3]
   10ff8:	b	10f20 <strspn@plt+0x68>
   10ffc:	ldr	r1, [pc, #808]	; 1132c <strspn@plt+0x474>
   11000:	ldr	r3, [pc, #808]	; 11330 <strspn@plt+0x478>
   11004:	ldr	r2, [pc, #808]	; 11334 <strspn@plt+0x47c>
   11008:	str	r4, [sp, #4]
   1100c:	ldr	r0, [r1]
   11010:	ldr	r3, [r3]
   11014:	ldr	r1, [pc, #796]	; 11338 <strspn@plt+0x480>
   11018:	str	r2, [sp]
   1101c:	ldr	r2, [pc, #792]	; 1133c <strspn@plt+0x484>
   11020:	bl	15924 <strspn@plt+0x4a6c>
   11024:	mov	r0, r4
   11028:	bl	10de0 <exit@plt>
   1102c:	mov	r3, #1
   11030:	orr	fp, fp, #4
   11034:	strb	r3, [r8]
   11038:	b	10f20 <strspn@plt+0x68>
   1103c:	mov	r3, #1
   11040:	strb	r3, [r8, #1]
   11044:	b	10f20 <strspn@plt+0x68>
   11048:	mov	r2, #5
   1104c:	ldr	r1, [pc, #748]	; 11340 <strspn@plt+0x488>
   11050:	mov	r0, r4
   11054:	bl	10cf0 <dcgettext@plt>
   11058:	mov	r1, r4
   1105c:	mov	r2, r0
   11060:	mov	r0, r4
   11064:	bl	10d74 <error@plt>
   11068:	mov	r0, #1
   1106c:	bl	11604 <strspn@plt+0x74c>
   11070:	bic	fp, fp, #3
   11074:	orr	fp, fp, #2
   11078:	b	10f20 <strspn@plt+0x68>
   1107c:	ldr	r5, [pc, #704]	; 11344 <strspn@plt+0x48c>
   11080:	ldr	r3, [r5]
   11084:	cmp	sl, r3
   11088:	ble	11048 <strspn@plt+0x190>
   1108c:	ldr	r2, [sp, #12]
   11090:	adds	r3, r7, #0
   11094:	movne	r3, #1
   11098:	cmp	r2, #0
   1109c:	movne	r3, #0
   110a0:	cmp	r3, #0
   110a4:	bne	11220 <strspn@plt+0x368>
   110a8:	cmp	r2, #0
   110ac:	and	r4, fp, #3
   110b0:	bne	11228 <strspn@plt+0x370>
   110b4:	ldr	r3, [sp, #12]
   110b8:	cmp	r7, r3
   110bc:	beq	112bc <strspn@plt+0x404>
   110c0:	cmp	r7, #0
   110c4:	beq	11100 <strspn@plt+0x248>
   110c8:	mov	r1, fp
   110cc:	mov	r0, r7
   110d0:	bl	11538 <strspn@plt+0x680>
   110d4:	subs	r6, r0, #0
   110d8:	beq	112f8 <strspn@plt+0x440>
   110dc:	cmp	r4, #0
   110e0:	beq	112a8 <strspn@plt+0x3f0>
   110e4:	ldr	r4, [pc, #556]	; 11318 <strspn@plt+0x460>
   110e8:	mov	r0, r6
   110ec:	ldr	r1, [r4, #4]
   110f0:	bl	11474 <strspn@plt+0x5bc>
   110f4:	subs	r7, r0, #0
   110f8:	strne	r6, [r4, #8]
   110fc:	beq	11290 <strspn@plt+0x3d8>
   11100:	ldr	r3, [r5]
   11104:	mov	r6, #1
   11108:	cmp	r3, sl
   1110c:	bge	1127c <strspn@plt+0x3c4>
   11110:	ldr	r7, [pc, #512]	; 11318 <strspn@plt+0x460>
   11114:	b	111c4 <strspn@plt+0x30c>
   11118:	ldr	r8, [r7, #4]
   1111c:	cmp	r8, #0
   11120:	beq	1115c <strspn@plt+0x2a4>
   11124:	ldr	r0, [r7, #8]
   11128:	cmp	r0, #0
   1112c:	beq	11140 <strspn@plt+0x288>
   11130:	mov	r1, r4
   11134:	bl	11474 <strspn@plt+0x5bc>
   11138:	cmp	r0, #0
   1113c:	beq	1115c <strspn@plt+0x2a4>
   11140:	mov	r3, #0
   11144:	mov	r1, r8
   11148:	mov	r2, r3
   1114c:	mov	r0, r4
   11150:	bl	11968 <strspn@plt+0xab0>
   11154:	cmp	r0, #0
   11158:	bne	1116c <strspn@plt+0x2b4>
   1115c:	ldr	r3, [pc, #456]	; 1132c <strspn@plt+0x474>
   11160:	mov	r0, r4
   11164:	ldr	r1, [r3]
   11168:	bl	10c60 <fputs_unlocked@plt>
   1116c:	ldr	r3, [pc, #440]	; 1132c <strspn@plt+0x474>
   11170:	ldrb	r1, [r7, #1]
   11174:	ldr	r0, [r3]
   11178:	cmp	r1, #0
   1117c:	moveq	r1, #10
   11180:	ldr	r3, [r0, #20]
   11184:	ldr	r2, [r0, #24]
   11188:	movne	r1, #0
   1118c:	cmp	r3, r2
   11190:	addcc	r2, r3, #1
   11194:	strcc	r2, [r0, #20]
   11198:	strbcc	r1, [r3]
   1119c:	bcs	11288 <strspn@plt+0x3d0>
   111a0:	mov	r0, r4
   111a4:	bl	12424 <strspn@plt+0x156c>
   111a8:	mov	r2, #1
   111ac:	ldr	r3, [r5]
   111b0:	and	r6, r6, r2
   111b4:	add	r3, r3, #1
   111b8:	cmp	sl, r3
   111bc:	str	r3, [r5]
   111c0:	ble	1127c <strspn@plt+0x3c4>
   111c4:	ldr	r8, [r9, r3, lsl #2]
   111c8:	mov	r1, fp
   111cc:	mov	r0, r8
   111d0:	bl	11538 <strspn@plt+0x680>
   111d4:	subs	r4, r0, #0
   111d8:	bne	11118 <strspn@plt+0x260>
   111dc:	ldr	r3, [pc, #324]	; 11328 <strspn@plt+0x470>
   111e0:	ldrb	r2, [r3]
   111e4:	cmp	r2, #0
   111e8:	beq	111ac <strspn@plt+0x2f4>
   111ec:	bl	10df8 <__errno_location@plt>
   111f0:	mov	r2, r8
   111f4:	mov	r1, #3
   111f8:	ldr	r4, [r0]
   111fc:	mov	r0, #0
   11200:	bl	15214 <strspn@plt+0x435c>
   11204:	ldr	r2, [pc, #316]	; 11348 <strspn@plt+0x490>
   11208:	mov	r1, r4
   1120c:	mov	r3, r0
   11210:	mov	r0, #0
   11214:	bl	10d74 <error@plt>
   11218:	mov	r2, #0
   1121c:	b	111ac <strspn@plt+0x2f4>
   11220:	and	r4, fp, #3
   11224:	str	r7, [sp, #12]
   11228:	mov	r1, fp
   1122c:	ldr	r0, [sp, #12]
   11230:	bl	11538 <strspn@plt+0x680>
   11234:	ldr	r3, [pc, #220]	; 11318 <strspn@plt+0x460>
   11238:	cmp	r0, #0
   1123c:	mov	r6, r0
   11240:	str	r0, [r3, #4]
   11244:	beq	112cc <strspn@plt+0x414>
   11248:	cmp	r4, #0
   1124c:	bne	110b4 <strspn@plt+0x1fc>
   11250:	bl	11584 <strspn@plt+0x6cc>
   11254:	cmp	r0, #0
   11258:	ldreq	r2, [sp, #12]
   1125c:	bne	110b4 <strspn@plt+0x1fc>
   11260:	mov	r1, #3
   11264:	bl	15214 <strspn@plt+0x435c>
   11268:	ldr	r2, [pc, #216]	; 11348 <strspn@plt+0x490>
   1126c:	mov	r1, #20
   11270:	mov	r3, r0
   11274:	mov	r0, #1
   11278:	bl	10d74 <error@plt>
   1127c:	eor	r0, r6, #1
   11280:	add	sp, sp, #20
   11284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11288:	bl	10e58 <__overflow@plt>
   1128c:	b	111a0 <strspn@plt+0x2e8>
   11290:	mov	r0, r6
   11294:	bl	12424 <strspn@plt+0x156c>
   11298:	ldr	r3, [r4, #4]
   1129c:	str	r7, [r4, #4]
   112a0:	str	r3, [r4, #8]
   112a4:	b	11100 <strspn@plt+0x248>
   112a8:	bl	11584 <strspn@plt+0x6cc>
   112ac:	cmp	r0, #0
   112b0:	bne	110e4 <strspn@plt+0x22c>
   112b4:	mov	r2, r7
   112b8:	b	11260 <strspn@plt+0x3a8>
   112bc:	ldr	r3, [pc, #84]	; 11318 <strspn@plt+0x460>
   112c0:	ldr	r2, [r3, #4]
   112c4:	str	r2, [r3, #8]
   112c8:	b	11100 <strspn@plt+0x248>
   112cc:	bl	10df8 <__errno_location@plt>
   112d0:	ldr	r2, [sp, #12]
   112d4:	ldr	r4, [r0]
   112d8:	mov	r1, #3
   112dc:	mov	r0, r6
   112e0:	bl	15214 <strspn@plt+0x435c>
   112e4:	mov	r1, r4
   112e8:	ldr	r2, [pc, #88]	; 11348 <strspn@plt+0x490>
   112ec:	mov	r3, r0
   112f0:	mov	r0, #1
   112f4:	bl	10d74 <error@plt>
   112f8:	bl	10df8 <__errno_location@plt>
   112fc:	mov	r2, r7
   11300:	b	112d4 <strspn@plt+0x41c>
   11304:	andeq	r7, r1, r8, asr r2
   11308:	andeq	r6, r1, r8, lsl fp
   1130c:	andeq	r7, r1, r4, rrx
   11310:			; <UNDEFINED> instruction: 0x00016fbc
   11314:	andeq	r7, r1, ip, ror r0
   11318:	andeq	r8, r2, r8, asr r1
   1131c:	muleq	r1, r0, r2
   11320:	andeq	r0, r0, r1, lsl #2
   11324:	andeq	r8, r2, r0, asr r1
   11328:	andeq	r8, r2, r8, ror #1
   1132c:	andeq	r8, r2, ip, asr #2
   11330:	andeq	r8, r2, ip, ror #1
   11334:	andeq	r7, r1, r4, lsl #1
   11338:	strdeq	r6, [r1], -r8
   1133c:			; <UNDEFINED> instruction: 0x00016fb8
   11340:	muleq	r1, r4, r0
   11344:	andeq	r8, r2, r0, asr #2
   11348:	strdeq	r7, [r1], -r0
   1134c:	mov	fp, #0
   11350:	mov	lr, #0
   11354:	pop	{r1}		; (ldr r1, [sp], #4)
   11358:	mov	r2, sp
   1135c:	push	{r2}		; (str r2, [sp, #-4]!)
   11360:	push	{r0}		; (str r0, [sp, #-4]!)
   11364:	ldr	ip, [pc, #16]	; 1137c <strspn@plt+0x4c4>
   11368:	push	{ip}		; (str ip, [sp, #-4]!)
   1136c:	ldr	r0, [pc, #12]	; 11380 <strspn@plt+0x4c8>
   11370:	ldr	r3, [pc, #12]	; 11384 <strspn@plt+0x4cc>
   11374:	bl	10d8c <__libc_start_main@plt>
   11378:	bl	10eac <abort@plt>
   1137c:			; <UNDEFINED> instruction: 0x00016ab8
   11380:	andeq	r0, r1, r8, asr #29
   11384:	andeq	r6, r1, r8, asr sl
   11388:	ldr	r3, [pc, #20]	; 113a4 <strspn@plt+0x4ec>
   1138c:	ldr	r2, [pc, #20]	; 113a8 <strspn@plt+0x4f0>
   11390:	add	r3, pc, r3
   11394:	ldr	r2, [r3, r2]
   11398:	cmp	r2, #0
   1139c:	bxeq	lr
   113a0:	b	10da4 <__gmon_start__@plt>
   113a4:	andeq	r6, r1, r8, ror #24
   113a8:	ldrdeq	r0, [r0], -ip
   113ac:	ldr	r3, [pc, #28]	; 113d0 <strspn@plt+0x518>
   113b0:	ldr	r0, [pc, #28]	; 113d4 <strspn@plt+0x51c>
   113b4:	sub	r3, r3, r0
   113b8:	cmp	r3, #6
   113bc:	bxls	lr
   113c0:	ldr	r3, [pc, #16]	; 113d8 <strspn@plt+0x520>
   113c4:	cmp	r3, #0
   113c8:	bxeq	lr
   113cc:	bx	r3
   113d0:	andeq	r8, r2, r7, lsr r1
   113d4:	andeq	r8, r2, r4, lsr r1
   113d8:	andeq	r0, r0, r0
   113dc:	ldr	r1, [pc, #36]	; 11408 <strspn@plt+0x550>
   113e0:	ldr	r0, [pc, #36]	; 1140c <strspn@plt+0x554>
   113e4:	sub	r1, r1, r0
   113e8:	asr	r1, r1, #2
   113ec:	add	r1, r1, r1, lsr #31
   113f0:	asrs	r1, r1, #1
   113f4:	bxeq	lr
   113f8:	ldr	r3, [pc, #16]	; 11410 <strspn@plt+0x558>
   113fc:	cmp	r3, #0
   11400:	bxeq	lr
   11404:	bx	r3
   11408:	andeq	r8, r2, r4, lsr r1
   1140c:	andeq	r8, r2, r4, lsr r1
   11410:	andeq	r0, r0, r0
   11414:	push	{r4, lr}
   11418:	ldr	r4, [pc, #24]	; 11438 <strspn@plt+0x580>
   1141c:	ldrb	r3, [r4]
   11420:	cmp	r3, #0
   11424:	popne	{r4, pc}
   11428:	bl	113ac <strspn@plt+0x4f4>
   1142c:	mov	r3, #1
   11430:	strb	r3, [r4]
   11434:	pop	{r4, pc}
   11438:	andeq	r8, r2, r4, asr r1
   1143c:	ldr	r0, [pc, #40]	; 1146c <strspn@plt+0x5b4>
   11440:	ldr	r3, [r0]
   11444:	cmp	r3, #0
   11448:	bne	11450 <strspn@plt+0x598>
   1144c:	b	113dc <strspn@plt+0x524>
   11450:	ldr	r3, [pc, #24]	; 11470 <strspn@plt+0x5b8>
   11454:	cmp	r3, #0
   11458:	beq	1144c <strspn@plt+0x594>
   1145c:	push	{r4, lr}
   11460:	blx	r3
   11464:	pop	{r4, lr}
   11468:	b	113dc <strspn@plt+0x524>
   1146c:	andeq	r7, r2, r4, lsl pc
   11470:	andeq	r0, r0, r0
   11474:	ldrb	r3, [r0, #1]
   11478:	cmp	r3, #0
   1147c:	beq	114fc <strspn@plt+0x644>
   11480:	cmp	r3, #47	; 0x2f
   11484:	push	{lr}		; (str lr, [sp, #-4]!)
   11488:	mov	lr, r0
   1148c:	beq	1150c <strspn@plt+0x654>
   11490:	ldrb	r0, [r1, #1]
   11494:	subs	r3, r3, r0
   11498:	movne	r3, #1
   1149c:	cmp	r0, #0
   114a0:	movne	r0, r3
   114a4:	orreq	r0, r3, #1
   114a8:	cmp	r0, #0
   114ac:	addeq	lr, lr, #1
   114b0:	addeq	r1, r1, #2
   114b4:	beq	114d8 <strspn@plt+0x620>
   114b8:	b	11530 <strspn@plt+0x678>
   114bc:	ldrb	ip, [r1], #1
   114c0:	clz	r3, ip
   114c4:	lsr	r3, r3, #5
   114c8:	cmp	r2, ip
   114cc:	orrne	r3, r3, #1
   114d0:	cmp	r3, #0
   114d4:	bne	1152c <strspn@plt+0x674>
   114d8:	ldrb	r2, [lr, #1]!
   114dc:	cmp	r2, #0
   114e0:	bne	114bc <strspn@plt+0x604>
   114e4:	ldrb	r0, [r1]
   114e8:	cmp	r0, #0
   114ec:	cmpne	r0, #47	; 0x2f
   114f0:	moveq	r0, #1
   114f4:	movne	r0, #0
   114f8:	pop	{pc}		; (ldr pc, [sp], #4)
   114fc:	ldrb	r0, [r1, #1]
   11500:	subs	r0, r0, #47	; 0x2f
   11504:	movne	r0, #1
   11508:	bx	lr
   1150c:	ldrb	r2, [r0, #2]
   11510:	cmp	r2, #0
   11514:	bne	11490 <strspn@plt+0x5d8>
   11518:	ldrb	r0, [r1, #1]
   1151c:	sub	r0, r0, #47	; 0x2f
   11520:	clz	r0, r0
   11524:	lsr	r0, r0, #5
   11528:	pop	{pc}		; (ldr pc, [sp], #4)
   1152c:	pop	{pc}		; (ldr pc, [sp], #4)
   11530:	mov	r0, #0
   11534:	pop	{pc}		; (ldr pc, [sp], #4)
   11538:	push	{r4, r5, r6, lr}
   1153c:	mov	r5, r1
   11540:	bl	11ba4 <strspn@plt+0xcec>
   11544:	ldr	r3, [pc, #52]	; 11580 <strspn@plt+0x6c8>
   11548:	ldrb	r3, [r3]
   1154c:	cmp	r3, #0
   11550:	mov	r4, r0
   11554:	beq	11578 <strspn@plt+0x6c0>
   11558:	cmp	r0, #0
   1155c:	beq	11578 <strspn@plt+0x6c0>
   11560:	bic	r1, r5, #4
   11564:	bl	11ba4 <strspn@plt+0xcec>
   11568:	mov	r5, r0
   1156c:	mov	r0, r4
   11570:	bl	12424 <strspn@plt+0x156c>
   11574:	mov	r4, r5
   11578:	mov	r0, r4
   1157c:	pop	{r4, r5, r6, pc}
   11580:	andeq	r8, r2, r8, asr r1
   11584:	push	{r4, r5, r6, lr}
   11588:	sub	sp, sp, #104	; 0x68
   1158c:	mov	r1, r0
   11590:	mov	r4, r0
   11594:	mov	r2, sp
   11598:	mov	r0, #3
   1159c:	bl	10e94 <__xstat64@plt>
   115a0:	cmp	r0, #0
   115a4:	bne	115c4 <strspn@plt+0x70c>
   115a8:	ldr	r0, [sp, #16]
   115ac:	and	r0, r0, #61440	; 0xf000
   115b0:	sub	r0, r0, #16384	; 0x4000
   115b4:	clz	r0, r0
   115b8:	lsr	r0, r0, #5
   115bc:	add	sp, sp, #104	; 0x68
   115c0:	pop	{r4, r5, r6, pc}
   115c4:	bl	10df8 <__errno_location@plt>
   115c8:	mov	r2, #5
   115cc:	ldr	r1, [pc, #44]	; 11600 <strspn@plt+0x748>
   115d0:	ldr	r5, [r0]
   115d4:	mov	r0, #0
   115d8:	bl	10cf0 <dcgettext@plt>
   115dc:	mov	r1, r4
   115e0:	mov	r6, r0
   115e4:	mov	r0, #4
   115e8:	bl	15158 <strspn@plt+0x42a0>
   115ec:	mov	r2, r6
   115f0:	mov	r1, r5
   115f4:	mov	r3, r0
   115f8:	mov	r0, #1
   115fc:	bl	10d74 <error@plt>
   11600:	andeq	r6, r1, r8, ror #23
   11604:	subs	r6, r0, #0
   11608:	push	{r7, lr}
   1160c:	sub	sp, sp, #56	; 0x38
   11610:	beq	1164c <strspn@plt+0x794>
   11614:	ldr	r3, [pc, #636]	; 11898 <strspn@plt+0x9e0>
   11618:	mov	r2, #5
   1161c:	ldr	r1, [pc, #632]	; 1189c <strspn@plt+0x9e4>
   11620:	mov	r0, #0
   11624:	ldr	r4, [r3]
   11628:	bl	10cf0 <dcgettext@plt>
   1162c:	ldr	r3, [pc, #620]	; 118a0 <strspn@plt+0x9e8>
   11630:	mov	r1, #1
   11634:	ldr	r3, [r3]
   11638:	mov	r2, r0
   1163c:	mov	r0, r4
   11640:	bl	10e34 <__fprintf_chk@plt>
   11644:	mov	r0, r6
   11648:	bl	10de0 <exit@plt>
   1164c:	mov	r2, #5
   11650:	ldr	r1, [pc, #588]	; 118a4 <strspn@plt+0x9ec>
   11654:	bl	10cf0 <dcgettext@plt>
   11658:	ldr	r3, [pc, #576]	; 118a0 <strspn@plt+0x9e8>
   1165c:	ldr	r7, [pc, #580]	; 118a8 <strspn@plt+0x9f0>
   11660:	ldr	r4, [pc, #580]	; 118ac <strspn@plt+0x9f4>
   11664:	ldr	r2, [r3]
   11668:	mov	r1, r0
   1166c:	mov	r0, #1
   11670:	bl	10e1c <__printf_chk@plt>
   11674:	mov	r2, #5
   11678:	ldr	r1, [pc, #560]	; 118b0 <strspn@plt+0x9f8>
   1167c:	mov	r0, r6
   11680:	bl	10cf0 <dcgettext@plt>
   11684:	ldr	r1, [r7]
   11688:	bl	10c60 <fputs_unlocked@plt>
   1168c:	mov	r2, #5
   11690:	ldr	r1, [pc, #540]	; 118b4 <strspn@plt+0x9fc>
   11694:	mov	r0, r6
   11698:	bl	10cf0 <dcgettext@plt>
   1169c:	ldr	r1, [r7]
   116a0:	bl	10c60 <fputs_unlocked@plt>
   116a4:	mov	r2, #5
   116a8:	ldr	r1, [pc, #520]	; 118b8 <strspn@plt+0xa00>
   116ac:	mov	r0, r6
   116b0:	bl	10cf0 <dcgettext@plt>
   116b4:	ldr	r1, [r7]
   116b8:	bl	10c60 <fputs_unlocked@plt>
   116bc:	mov	r2, #5
   116c0:	ldr	r1, [pc, #500]	; 118bc <strspn@plt+0xa04>
   116c4:	mov	r0, r6
   116c8:	bl	10cf0 <dcgettext@plt>
   116cc:	ldr	r1, [r7]
   116d0:	bl	10c60 <fputs_unlocked@plt>
   116d4:	ldm	r4!, {r0, r1, r2, r3}
   116d8:	mov	lr, sp
   116dc:	stmia	lr!, {r0, r1, r2, r3}
   116e0:	ldm	r4!, {r0, r1, r2, r3}
   116e4:	ldr	ip, [sp]
   116e8:	stmia	lr!, {r0, r1, r2, r3}
   116ec:	cmp	ip, #0
   116f0:	ldm	r4!, {r0, r1, r2, r3}
   116f4:	stmia	lr!, {r0, r1, r2, r3}
   116f8:	ldm	r4, {r0, r1}
   116fc:	moveq	r4, sp
   11700:	stm	lr, {r0, r1}
   11704:	beq	11734 <strspn@plt+0x87c>
   11708:	ldr	r5, [pc, #432]	; 118c0 <strspn@plt+0xa08>
   1170c:	mov	r4, sp
   11710:	b	11720 <strspn@plt+0x868>
   11714:	ldr	ip, [r4, #8]!
   11718:	cmp	ip, #0
   1171c:	beq	11734 <strspn@plt+0x87c>
   11720:	mov	r1, ip
   11724:	mov	r0, r5
   11728:	bl	10c78 <strcmp@plt>
   1172c:	cmp	r0, #0
   11730:	bne	11714 <strspn@plt+0x85c>
   11734:	ldr	r4, [r4, #4]
   11738:	mov	r2, #5
   1173c:	cmp	r4, #0
   11740:	ldr	r1, [pc, #380]	; 118c4 <strspn@plt+0xa0c>
   11744:	beq	117ec <strspn@plt+0x934>
   11748:	mov	r0, #0
   1174c:	bl	10cf0 <dcgettext@plt>
   11750:	ldr	r3, [pc, #368]	; 118c8 <strspn@plt+0xa10>
   11754:	ldr	r2, [pc, #368]	; 118cc <strspn@plt+0xa14>
   11758:	mov	r1, r0
   1175c:	mov	r0, #1
   11760:	bl	10e1c <__printf_chk@plt>
   11764:	mov	r1, #0
   11768:	mov	r0, #5
   1176c:	bl	10e64 <setlocale@plt>
   11770:	cmp	r0, #0
   11774:	ldreq	r5, [pc, #324]	; 118c0 <strspn@plt+0xa08>
   11778:	beq	11794 <strspn@plt+0x8dc>
   1177c:	mov	r2, #3
   11780:	ldr	r1, [pc, #328]	; 118d0 <strspn@plt+0xa18>
   11784:	bl	10ea0 <strncmp@plt>
   11788:	ldr	r5, [pc, #304]	; 118c0 <strspn@plt+0xa08>
   1178c:	cmp	r0, #0
   11790:	bne	1187c <strspn@plt+0x9c4>
   11794:	mov	r2, #5
   11798:	ldr	r1, [pc, #308]	; 118d4 <strspn@plt+0xa1c>
   1179c:	mov	r0, #0
   117a0:	bl	10cf0 <dcgettext@plt>
   117a4:	ldr	r3, [pc, #276]	; 118c0 <strspn@plt+0xa08>
   117a8:	ldr	r2, [pc, #280]	; 118c8 <strspn@plt+0xa10>
   117ac:	mov	r1, r0
   117b0:	mov	r0, #1
   117b4:	bl	10e1c <__printf_chk@plt>
   117b8:	mov	r2, #5
   117bc:	ldr	r1, [pc, #276]	; 118d8 <strspn@plt+0xa20>
   117c0:	mov	r0, #0
   117c4:	bl	10cf0 <dcgettext@plt>
   117c8:	ldr	r2, [pc, #268]	; 118dc <strspn@plt+0xa24>
   117cc:	cmp	r4, r5
   117d0:	ldr	r3, [pc, #264]	; 118e0 <strspn@plt+0xa28>
   117d4:	movne	r3, r2
   117d8:	mov	r1, r0
   117dc:	mov	r2, r4
   117e0:	mov	r0, #1
   117e4:	bl	10e1c <__printf_chk@plt>
   117e8:	b	11644 <strspn@plt+0x78c>
   117ec:	mov	r0, r4
   117f0:	bl	10cf0 <dcgettext@plt>
   117f4:	ldr	r3, [pc, #204]	; 118c8 <strspn@plt+0xa10>
   117f8:	ldr	r2, [pc, #204]	; 118cc <strspn@plt+0xa14>
   117fc:	mov	r1, r0
   11800:	mov	r0, #1
   11804:	bl	10e1c <__printf_chk@plt>
   11808:	mov	r1, r4
   1180c:	mov	r0, #5
   11810:	bl	10e64 <setlocale@plt>
   11814:	cmp	r0, #0
   11818:	beq	11830 <strspn@plt+0x978>
   1181c:	mov	r2, #3
   11820:	ldr	r1, [pc, #168]	; 118d0 <strspn@plt+0xa18>
   11824:	bl	10ea0 <strncmp@plt>
   11828:	cmp	r0, #0
   1182c:	bne	11874 <strspn@plt+0x9bc>
   11830:	mov	r2, #5
   11834:	ldr	r1, [pc, #152]	; 118d4 <strspn@plt+0xa1c>
   11838:	mov	r0, #0
   1183c:	bl	10cf0 <dcgettext@plt>
   11840:	ldr	r3, [pc, #120]	; 118c0 <strspn@plt+0xa08>
   11844:	ldr	r2, [pc, #124]	; 118c8 <strspn@plt+0xa10>
   11848:	mov	r4, r3
   1184c:	mov	r1, r0
   11850:	mov	r0, #1
   11854:	bl	10e1c <__printf_chk@plt>
   11858:	ldr	r1, [pc, #120]	; 118d8 <strspn@plt+0xa20>
   1185c:	mov	r2, #5
   11860:	mov	r0, #0
   11864:	bl	10cf0 <dcgettext@plt>
   11868:	ldr	r3, [pc, #112]	; 118e0 <strspn@plt+0xa28>
   1186c:	mov	r1, r0
   11870:	b	117dc <strspn@plt+0x924>
   11874:	ldr	r5, [pc, #68]	; 118c0 <strspn@plt+0xa08>
   11878:	mov	r4, r5
   1187c:	mov	r2, #5
   11880:	ldr	r1, [pc, #92]	; 118e4 <strspn@plt+0xa2c>
   11884:	mov	r0, #0
   11888:	bl	10cf0 <dcgettext@plt>
   1188c:	ldr	r1, [r7]
   11890:	bl	10c60 <fputs_unlocked@plt>
   11894:	b	11794 <strspn@plt+0x8dc>
   11898:	andeq	r8, r2, r8, asr #2
   1189c:	andeq	r6, r1, r4, lsl #24
   118a0:	andeq	r8, r2, ip, ror #2
   118a4:	andeq	r6, r1, ip, lsr #24
   118a8:	andeq	r8, r2, ip, asr #2
   118ac:	andeq	r6, r1, r0, ror #21
   118b0:	andeq	r6, r1, ip, asr #24
   118b4:	muleq	r1, ip, ip
   118b8:	andeq	r6, r1, r0, lsl pc
   118bc:	andeq	r6, r1, r0, asr #30
   118c0:	strdeq	r6, [r1], -r8
   118c4:	andeq	r6, r1, r8, ror pc
   118c8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   118cc:			; <UNDEFINED> instruction: 0x00016fb8
   118d0:	andeq	r6, r1, r8, asr #31
   118d4:	andeq	r7, r1, r4, lsl r0
   118d8:	andeq	r7, r1, r0, lsr r0
   118dc:	andeq	r7, r1, r8, asr r2
   118e0:	andeq	r7, r1, ip, lsr #1
   118e4:	andeq	r6, r1, ip, asr #31
   118e8:	push	{r4, r5, r6, r7, r8, lr}
   118ec:	ldr	r4, [r1]
   118f0:	cmp	r4, #0
   118f4:	beq	11950 <strspn@plt+0xa98>
   118f8:	mov	r7, r2
   118fc:	mov	r6, r1
   11900:	mov	r8, r0
   11904:	bl	10dec <strlen@plt>
   11908:	ldr	r3, [r7]
   1190c:	cmp	r0, r3
   11910:	mov	r5, r0
   11914:	bcc	11920 <strspn@plt+0xa68>
   11918:	mov	r0, #1
   1191c:	pop	{r4, r5, r6, r7, r8, pc}
   11920:	add	r2, r5, #1
   11924:	mov	r1, r8
   11928:	mov	r0, r4
   1192c:	bl	10cc0 <memcpy@plt>
   11930:	ldr	r2, [r6]
   11934:	ldr	r3, [r7]
   11938:	add	r2, r2, r5
   1193c:	sub	r5, r3, r5
   11940:	str	r2, [r6]
   11944:	mov	r0, #0
   11948:	str	r5, [r7]
   1194c:	pop	{r4, r5, r6, r7, r8, pc}
   11950:	ldr	r3, [pc, #12]	; 11964 <strspn@plt+0xaac>
   11954:	ldr	r1, [r3]
   11958:	bl	10c60 <fputs_unlocked@plt>
   1195c:	mov	r0, r4
   11960:	pop	{r4, r5, r6, r7, r8, pc}
   11964:	andeq	r8, r2, ip, asr #2
   11968:	push	{r4, r5, r6, r7, r8, lr}
   1196c:	mov	r6, r0
   11970:	ldrb	ip, [r1, #1]
   11974:	ldrb	r0, [r0, #1]
   11978:	sub	sp, sp, #8
   1197c:	sub	r0, r0, #47	; 0x2f
   11980:	str	r2, [sp, #4]
   11984:	clz	r0, r0
   11988:	sub	r2, ip, #47	; 0x2f
   1198c:	lsr	r0, r0, #5
   11990:	clz	r2, r2
   11994:	lsr	r2, r2, #5
   11998:	cmp	r2, r0
   1199c:	str	r3, [sp]
   119a0:	beq	119b0 <strspn@plt+0xaf8>
   119a4:	mov	r0, #0
   119a8:	add	sp, sp, #8
   119ac:	pop	{r4, r5, r6, r7, r8, pc}
   119b0:	ldrb	r3, [r1]
   119b4:	cmp	r3, #0
   119b8:	beq	119a4 <strspn@plt+0xaec>
   119bc:	ldrb	r2, [r6]
   119c0:	clz	r0, r2
   119c4:	lsr	r0, r0, #5
   119c8:	cmp	r3, r2
   119cc:	orrne	r0, r0, #1
   119d0:	cmp	r0, #0
   119d4:	bne	119a4 <strspn@plt+0xaec>
   119d8:	add	r7, r1, #1
   119dc:	add	r5, r6, #1
   119e0:	mov	r2, #1
   119e4:	mov	r8, r0
   119e8:	b	11a18 <strspn@plt+0xb60>
   119ec:	ldrb	r3, [r5], #1
   119f0:	clz	lr, r3
   119f4:	lsr	lr, lr, #5
   119f8:	cmp	ip, r3
   119fc:	moveq	r3, lr
   11a00:	orrne	r3, lr, #1
   11a04:	cmp	r3, #0
   11a08:	add	r2, r2, #1
   11a0c:	bne	11aac <strspn@plt+0xbf4>
   11a10:	mov	r3, ip
   11a14:	ldrb	ip, [r7, #1]!
   11a18:	cmp	r3, #47	; 0x2f
   11a1c:	moveq	r8, r2
   11a20:	cmp	ip, #0
   11a24:	mov	r4, r2
   11a28:	bne	119ec <strspn@plt+0xb34>
   11a2c:	ldrb	r3, [r5]
   11a30:	cmp	r3, #47	; 0x2f
   11a34:	cmpne	r3, #0
   11a38:	movne	r4, r8
   11a3c:	cmp	r4, #0
   11a40:	beq	119a8 <strspn@plt+0xaf0>
   11a44:	ldrb	r3, [r1, r4]
   11a48:	add	r6, r6, r4
   11a4c:	add	r4, r1, r4
   11a50:	cmp	r3, #47	; 0x2f
   11a54:	ldrb	r2, [r6]
   11a58:	ldrbeq	r3, [r4, #1]
   11a5c:	addeq	r4, r4, #1
   11a60:	cmp	r2, #47	; 0x2f
   11a64:	addeq	r6, r6, #1
   11a68:	cmp	r3, #0
   11a6c:	bne	11ac4 <strspn@plt+0xc0c>
   11a70:	ldrb	r0, [r6]
   11a74:	ldr	r3, [pc, #272]	; 11b8c <strspn@plt+0xcd4>
   11a78:	mov	r2, sp
   11a7c:	cmp	r0, #0
   11a80:	movne	r0, r6
   11a84:	moveq	r0, r3
   11a88:	add	r1, sp, #4
   11a8c:	bl	118e8 <strspn@plt+0xa30>
   11a90:	mov	r5, r0
   11a94:	cmp	r5, #0
   11a98:	bne	11b64 <strspn@plt+0xcac>
   11a9c:	eor	r0, r5, #1
   11aa0:	uxtb	r0, r0
   11aa4:	add	sp, sp, #8
   11aa8:	pop	{r4, r5, r6, r7, r8, pc}
   11aac:	cmp	ip, #47	; 0x2f
   11ab0:	movne	ip, #0
   11ab4:	andeq	ip, lr, #1
   11ab8:	cmp	ip, #0
   11abc:	moveq	r4, r8
   11ac0:	b	11a3c <strspn@plt+0xb84>
   11ac4:	mov	r2, sp
   11ac8:	add	r1, sp, #4
   11acc:	ldr	r0, [pc, #188]	; 11b90 <strspn@plt+0xcd8>
   11ad0:	bl	118e8 <strspn@plt+0xa30>
   11ad4:	ldrb	r3, [r4]
   11ad8:	cmp	r3, #0
   11adc:	mov	r5, r0
   11ae0:	beq	11b24 <strspn@plt+0xc6c>
   11ae4:	ldr	r7, [pc, #168]	; 11b94 <strspn@plt+0xcdc>
   11ae8:	b	11af8 <strspn@plt+0xc40>
   11aec:	ldrb	r3, [r4, #1]!
   11af0:	cmp	r3, #0
   11af4:	beq	11b24 <strspn@plt+0xc6c>
   11af8:	cmp	r3, #47	; 0x2f
   11afc:	bne	11aec <strspn@plt+0xc34>
   11b00:	mov	r2, sp
   11b04:	add	r1, sp, #4
   11b08:	mov	r0, r7
   11b0c:	bl	118e8 <strspn@plt+0xa30>
   11b10:	ldrb	r3, [r4, #1]!
   11b14:	cmp	r3, #0
   11b18:	orr	r5, r0, r5
   11b1c:	uxtb	r5, r5
   11b20:	bne	11af8 <strspn@plt+0xc40>
   11b24:	ldrb	r3, [r6]
   11b28:	cmp	r3, #0
   11b2c:	beq	11a94 <strspn@plt+0xbdc>
   11b30:	mov	r2, sp
   11b34:	add	r1, sp, #4
   11b38:	ldr	r0, [pc, #88]	; 11b98 <strspn@plt+0xce0>
   11b3c:	bl	118e8 <strspn@plt+0xa30>
   11b40:	mov	r2, sp
   11b44:	add	r1, sp, #4
   11b48:	mov	r4, r0
   11b4c:	mov	r0, r6
   11b50:	bl	118e8 <strspn@plt+0xa30>
   11b54:	orr	r0, r4, r0
   11b58:	orr	r5, r5, r0
   11b5c:	uxtb	r5, r5
   11b60:	b	11a94 <strspn@plt+0xbdc>
   11b64:	mov	r2, #5
   11b68:	ldr	r1, [pc, #44]	; 11b9c <strspn@plt+0xce4>
   11b6c:	mov	r0, #0
   11b70:	bl	10cf0 <dcgettext@plt>
   11b74:	ldr	r2, [pc, #36]	; 11ba0 <strspn@plt+0xce8>
   11b78:	mov	r1, #36	; 0x24
   11b7c:	mov	r3, r0
   11b80:	mov	r0, #0
   11b84:	bl	10d74 <error@plt>
   11b88:	b	11a9c <strspn@plt+0xbe4>
   11b8c:	andeq	r7, r1, r4, lsr #3
   11b90:	andeq	r7, r1, r8, lsr #3
   11b94:	andeq	r7, r1, ip, lsr #3
   11b98:			; <UNDEFINED> instruction: 0x000171b0
   11b9c:			; <UNDEFINED> instruction: 0x000171b4
   11ba0:	strdeq	r7, [r1], -r0
   11ba4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ba8:	and	r9, r1, #3
   11bac:	sub	r3, r9, #1
   11bb0:	sub	sp, sp, #3232	; 0xca0
   11bb4:	tst	r3, r9
   11bb8:	sub	sp, sp, #12
   11bbc:	bne	11d9c <strspn@plt+0xee4>
   11bc0:	cmp	r0, #0
   11bc4:	mov	r8, r0
   11bc8:	beq	11d9c <strspn@plt+0xee4>
   11bcc:	ldrb	r6, [r0]
   11bd0:	cmp	r6, #0
   11bd4:	beq	11dd8 <strspn@plt+0xf20>
   11bd8:	add	fp, sp, #2208	; 0x8a0
   11bdc:	mov	r5, r1
   11be0:	add	r3, sp, #1184	; 0x4a0
   11be4:	mov	r1, #1024	; 0x400
   11be8:	add	fp, fp, #8
   11bec:	add	sl, sp, #152	; 0x98
   11bf0:	cmp	r6, #47	; 0x2f
   11bf4:	str	r3, [sp, #1176]	; 0x498
   11bf8:	str	r1, [sp, #1180]	; 0x49c
   11bfc:	str	r1, [sp, #2212]	; 0x8a4
   11c00:	str	r1, [sp, #148]	; 0x94
   11c04:	str	fp, [sp, #2208]	; 0x8a0
   11c08:	str	sl, [sp, #144]	; 0x90
   11c0c:	beq	11cb8 <strspn@plt+0xe00>
   11c10:	mov	r4, sl
   11c14:	sub	r6, sl, #8
   11c18:	mov	r0, r4
   11c1c:	bl	10dd4 <getcwd@plt>
   11c20:	cmp	r0, #0
   11c24:	bne	11f84 <strspn@plt+0x10cc>
   11c28:	bl	10df8 <__errno_location@plt>
   11c2c:	ldr	r3, [r0]
   11c30:	cmp	r3, #12
   11c34:	beq	11d98 <strspn@plt+0xee0>
   11c38:	cmp	r3, #34	; 0x22
   11c3c:	beq	11c9c <strspn@plt+0xde4>
   11c40:	mov	r5, r4
   11c44:	mov	r6, #1
   11c48:	ldr	r0, [sp, #1176]	; 0x498
   11c4c:	add	r3, sp, #1184	; 0x4a0
   11c50:	cmp	r0, r3
   11c54:	beq	11c5c <strspn@plt+0xda4>
   11c58:	bl	12424 <strspn@plt+0x156c>
   11c5c:	ldr	r0, [sp, #2208]	; 0x8a0
   11c60:	cmp	r0, fp
   11c64:	beq	11c6c <strspn@plt+0xdb4>
   11c68:	bl	12424 <strspn@plt+0x156c>
   11c6c:	cmp	r6, #0
   11c70:	beq	11dbc <strspn@plt+0xf04>
   11c74:	ldr	r0, [sp, #144]	; 0x90
   11c78:	cmp	r0, sl
   11c7c:	moveq	r6, #0
   11c80:	beq	11c8c <strspn@plt+0xdd4>
   11c84:	bl	12424 <strspn@plt+0x156c>
   11c88:	mov	r6, #0
   11c8c:	mov	r0, r6
   11c90:	add	sp, sp, #3232	; 0xca0
   11c94:	add	sp, sp, #12
   11c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c9c:	mov	r0, r6
   11ca0:	bl	15400 <strspn@plt+0x4548>
   11ca4:	cmp	r0, #0
   11ca8:	beq	11d98 <strspn@plt+0xee0>
   11cac:	ldr	r4, [sp, #144]	; 0x90
   11cb0:	ldr	r1, [sp, #148]	; 0x94
   11cb4:	b	11c18 <strspn@plt+0xd60>
   11cb8:	mov	r4, sl
   11cbc:	add	r0, sl, #1
   11cc0:	strb	r6, [sp, #152]	; 0x98
   11cc4:	mov	r3, #0
   11cc8:	and	r2, r5, #4
   11ccc:	str	r3, [sp, #24]
   11cd0:	str	r2, [sp, #8]
   11cd4:	str	r3, [sp, #12]
   11cd8:	str	r3, [sp, #16]
   11cdc:	str	r9, [sp, #20]
   11ce0:	cmp	r6, #0
   11ce4:	beq	120e8 <strspn@plt+0x1230>
   11ce8:	cmp	r6, #47	; 0x2f
   11cec:	bne	11d04 <strspn@plt+0xe4c>
   11cf0:	ldrb	r6, [r8, #1]!
   11cf4:	cmp	r6, #47	; 0x2f
   11cf8:	beq	11cf0 <strspn@plt+0xe38>
   11cfc:	cmp	r6, #0
   11d00:	beq	120e8 <strspn@plt+0x1230>
   11d04:	mov	r5, r8
   11d08:	ldrb	r3, [r5, #1]!
   11d0c:	cmp	r3, #0
   11d10:	cmpne	r3, #47	; 0x2f
   11d14:	bne	11d08 <strspn@plt+0xe50>
   11d18:	subs	r7, r5, r8
   11d1c:	beq	120e8 <strspn@plt+0x1230>
   11d20:	cmp	r7, #1
   11d24:	beq	11ea8 <strspn@plt+0xff0>
   11d28:	cmp	r7, #2
   11d2c:	cmpeq	r6, #46	; 0x2e
   11d30:	beq	11de8 <strspn@plt+0xf30>
   11d34:	ldrb	r3, [r0, #-1]
   11d38:	add	r6, r7, #2
   11d3c:	cmp	r3, #47	; 0x2f
   11d40:	movne	r3, #47	; 0x2f
   11d44:	strbne	r3, [r0]
   11d48:	ldr	r3, [sp, #148]	; 0x94
   11d4c:	addne	r0, r0, #1
   11d50:	add	r3, r4, r3
   11d54:	sub	r3, r3, r0
   11d58:	cmp	r3, r6
   11d5c:	bcs	11e40 <strspn@plt+0xf88>
   11d60:	mov	r9, r0
   11d64:	b	11d84 <strspn@plt+0xecc>
   11d68:	ldr	r3, [sp, #148]	; 0x94
   11d6c:	ldr	r4, [sp, #144]	; 0x90
   11d70:	sub	r3, r3, r9
   11d74:	cmp	r3, r6
   11d78:	add	r9, r4, r9
   11d7c:	mov	r0, r9
   11d80:	bcs	11e40 <strspn@plt+0xf88>
   11d84:	add	r0, sp, #144	; 0x90
   11d88:	bl	1546c <strspn@plt+0x45b4>
   11d8c:	sub	r9, r9, r4
   11d90:	cmp	r0, #0
   11d94:	bne	11d68 <strspn@plt+0xeb0>
   11d98:	bl	15f68 <strspn@plt+0x50b0>
   11d9c:	bl	10df8 <__errno_location@plt>
   11da0:	mov	r6, #0
   11da4:	mov	r3, #22
   11da8:	str	r3, [r0]
   11dac:	mov	r0, r6
   11db0:	add	sp, sp, #3232	; 0xca0
   11db4:	add	sp, sp, #12
   11db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11dbc:	strb	r6, [r4], #1
   11dc0:	sub	r0, sl, #8
   11dc4:	sub	r1, r4, r5
   11dc8:	bl	153b0 <strspn@plt+0x44f8>
   11dcc:	subs	r6, r0, #0
   11dd0:	bne	11c8c <strspn@plt+0xdd4>
   11dd4:	b	11d98 <strspn@plt+0xee0>
   11dd8:	bl	10df8 <__errno_location@plt>
   11ddc:	mov	r3, #2
   11de0:	str	r3, [r0]
   11de4:	b	11c8c <strspn@plt+0xdd4>
   11de8:	ldrb	r3, [r8, #1]
   11dec:	cmp	r3, #46	; 0x2e
   11df0:	bne	11d34 <strspn@plt+0xe7c>
   11df4:	add	r3, r4, #1
   11df8:	cmp	r0, r3
   11dfc:	bls	11e34 <strspn@plt+0xf7c>
   11e00:	sub	r3, r0, #1
   11e04:	cmp	r4, r3
   11e08:	bcs	12248 <strspn@plt+0x1390>
   11e0c:	ldrb	r2, [r0, #-2]
   11e10:	cmp	r2, #47	; 0x2f
   11e14:	beq	12248 <strspn@plt+0x1390>
   11e18:	sub	r3, r0, #2
   11e1c:	cmp	r3, r4
   11e20:	mov	r0, r3
   11e24:	beq	11e34 <strspn@plt+0xf7c>
   11e28:	ldrb	r2, [r3, #-1]!
   11e2c:	cmp	r2, #47	; 0x2f
   11e30:	bne	11e1c <strspn@plt+0xf64>
   11e34:	ldrb	r6, [r5]
   11e38:	mov	r8, r5
   11e3c:	b	11ce0 <strspn@plt+0xe28>
   11e40:	mov	r2, r7
   11e44:	mov	r1, r8
   11e48:	bl	10db0 <mempcpy@plt>
   11e4c:	ldr	r3, [sp, #8]
   11e50:	cmp	r3, #0
   11e54:	mov	r3, #0
   11e58:	str	r0, [sp, #28]
   11e5c:	strb	r3, [r0]
   11e60:	bne	11eb4 <strspn@plt+0xffc>
   11e64:	sub	r3, fp, #8
   11e68:	mov	r9, r3
   11e6c:	str	r5, [sp, #32]
   11e70:	ldr	r6, [sp, #2212]	; 0x8a4
   11e74:	ldr	r5, [sp, #2208]	; 0x8a0
   11e78:	sub	r6, r6, #1
   11e7c:	mov	r2, r6
   11e80:	mov	r1, r5
   11e84:	mov	r0, r4
   11e88:	bl	10d2c <readlink@plt>
   11e8c:	cmp	r6, r0
   11e90:	bgt	11f98 <strspn@plt+0x10e0>
   11e94:	mov	r0, r9
   11e98:	bl	15400 <strspn@plt+0x4548>
   11e9c:	cmp	r0, #0
   11ea0:	bne	11e70 <strspn@plt+0xfb8>
   11ea4:	b	11d98 <strspn@plt+0xee0>
   11ea8:	cmp	r6, #46	; 0x2e
   11eac:	bne	11d34 <strspn@plt+0xe7c>
   11eb0:	b	11e34 <strspn@plt+0xf7c>
   11eb4:	ldr	r3, [sp, #20]
   11eb8:	cmp	r3, #2
   11ebc:	beq	11f7c <strspn@plt+0x10c4>
   11ec0:	ldrb	r2, [r5]
   11ec4:	mov	r3, r5
   11ec8:	mov	r1, r2
   11ecc:	cmp	r1, #47	; 0x2f
   11ed0:	beq	11edc <strspn@plt+0x1024>
   11ed4:	b	11f24 <strspn@plt+0x106c>
   11ed8:	mov	r3, r0
   11edc:	ldrb	r1, [r3, #1]
   11ee0:	add	r0, r3, #1
   11ee4:	cmp	r1, #47	; 0x2f
   11ee8:	beq	11ed8 <strspn@plt+0x1020>
   11eec:	cmp	r1, #0
   11ef0:	add	r3, r3, #2
   11ef4:	beq	121bc <strspn@plt+0x1304>
   11ef8:	cmp	r1, #46	; 0x2e
   11efc:	bne	11f24 <strspn@plt+0x106c>
   11f00:	ldrb	r1, [r0, #1]
   11f04:	cmp	r1, #0
   11f08:	beq	121bc <strspn@plt+0x1304>
   11f0c:	cmp	r1, #46	; 0x2e
   11f10:	bne	11ecc <strspn@plt+0x1014>
   11f14:	ldrb	r3, [r0, #2]
   11f18:	cmp	r3, #47	; 0x2f
   11f1c:	cmpne	r3, #0
   11f20:	beq	121bc <strspn@plt+0x1304>
   11f24:	ldr	r3, [sp, #8]
   11f28:	cmp	r3, #0
   11f2c:	bne	121fc <strspn@plt+0x1344>
   11f30:	bl	10df8 <__errno_location@plt>
   11f34:	ldr	r6, [r0]
   11f38:	subs	r6, r6, #22
   11f3c:	movne	r6, #1
   11f40:	cmp	r6, #0
   11f44:	beq	11f7c <strspn@plt+0x10c4>
   11f48:	ldr	r3, [sp, #20]
   11f4c:	cmp	r3, #1
   11f50:	bne	12250 <strspn@plt+0x1398>
   11f54:	bl	10df8 <__errno_location@plt>
   11f58:	ldr	r3, [r0]
   11f5c:	cmp	r3, #2
   11f60:	bne	12250 <strspn@plt+0x1398>
   11f64:	ldr	r1, [pc, #752]	; 1225c <strspn@plt+0x13a4>
   11f68:	mov	r0, r5
   11f6c:	bl	10eb8 <strspn@plt>
   11f70:	ldrb	r3, [r5, r0]
   11f74:	cmp	r3, #0
   11f78:	bne	12250 <strspn@plt+0x1398>
   11f7c:	ldr	r0, [sp, #28]
   11f80:	b	11e34 <strspn@plt+0xf7c>
   11f84:	mov	r1, #0
   11f88:	mov	r0, r4
   11f8c:	bl	10d14 <rawmemchr@plt>
   11f90:	ldrb	r6, [r8]
   11f94:	b	11cc4 <strspn@plt+0xe0c>
   11f98:	cmp	r0, #0
   11f9c:	mov	r9, r5
   11fa0:	mov	r6, r0
   11fa4:	ldr	r5, [sp, #32]
   11fa8:	blt	11eb4 <strspn@plt+0xffc>
   11fac:	ldr	r3, [sp, #16]
   11fb0:	cmp	r3, #19
   11fb4:	addle	r3, r3, #1
   11fb8:	strle	r3, [sp, #16]
   11fbc:	ble	12080 <strspn@plt+0x11c8>
   11fc0:	ldrb	r3, [r8]
   11fc4:	cmp	r3, #0
   11fc8:	beq	12080 <strspn@plt+0x11c8>
   11fcc:	ldr	r2, [sp, #28]
   11fd0:	rsb	r7, r7, #0
   11fd4:	mov	r3, #0
   11fd8:	strb	r3, [r2, r7]
   11fdc:	ldrb	r1, [r4]
   11fe0:	add	r3, sp, #40	; 0x28
   11fe4:	mov	r2, r3
   11fe8:	cmp	r1, #0
   11fec:	ldr	r3, [pc, #620]	; 12260 <strspn@plt+0x13a8>
   11ff0:	movne	r3, r4
   11ff4:	mov	r1, r3
   11ff8:	mov	r0, #3
   11ffc:	bl	10e94 <__xstat64@plt>
   12000:	cmp	r0, #0
   12004:	bne	12050 <strspn@plt+0x1198>
   12008:	ldrb	r3, [r8]
   1200c:	ldr	r1, [sp, #24]
   12010:	ldr	r2, [sp, #28]
   12014:	cmp	r1, #0
   12018:	strb	r3, [r2, r7]
   1201c:	beq	1220c <strspn@plt+0x1354>
   12020:	add	r2, sp, #40	; 0x28
   12024:	mov	r1, r8
   12028:	ldr	r0, [sp, #24]
   1202c:	bl	123dc <strspn@plt+0x1524>
   12030:	cmp	r0, #0
   12034:	beq	12070 <strspn@plt+0x11b8>
   12038:	ldr	r3, [sp, #20]
   1203c:	cmp	r3, #2
   12040:	beq	11f7c <strspn@plt+0x10c4>
   12044:	bl	10df8 <__errno_location@plt>
   12048:	mov	r3, #40	; 0x28
   1204c:	str	r3, [r0]
   12050:	mov	r5, r4
   12054:	ldr	r4, [sp, #28]
   12058:	mov	r6, #1
   1205c:	ldr	r0, [sp, #24]
   12060:	cmp	r0, #0
   12064:	beq	11c48 <strspn@plt+0xd90>
   12068:	bl	12efc <strspn@plt+0x2044>
   1206c:	b	11c48 <strspn@plt+0xd90>
   12070:	add	r2, sp, #40	; 0x28
   12074:	mov	r1, r8
   12078:	ldr	r0, [sp, #24]
   1207c:	bl	12374 <strspn@plt+0x14bc>
   12080:	ldr	r2, [sp, #12]
   12084:	mov	r3, #0
   12088:	cmp	r2, r3
   1208c:	strb	r3, [r9, r6]
   12090:	ldr	r8, [sp, #1176]	; 0x498
   12094:	ldreq	r3, [sp, #12]
   12098:	subne	r3, r5, r8
   1209c:	mov	r0, r5
   120a0:	str	r3, [sp, #36]	; 0x24
   120a4:	bl	10dec <strlen@plt>
   120a8:	adds	r7, r6, r0
   120ac:	str	r0, [sp, #32]
   120b0:	bcs	11d98 <strspn@plt+0xee0>
   120b4:	ldr	r3, [sp, #1180]	; 0x49c
   120b8:	cmp	r3, r7
   120bc:	bls	120d0 <strspn@plt+0x1218>
   120c0:	b	12114 <strspn@plt+0x125c>
   120c4:	ldr	r3, [sp, #1180]	; 0x49c
   120c8:	cmp	r7, r3
   120cc:	bcc	12110 <strspn@plt+0x1258>
   120d0:	add	r0, sp, #1168	; 0x490
   120d4:	add	r0, r0, #8
   120d8:	bl	1546c <strspn@plt+0x45b4>
   120dc:	cmp	r0, #0
   120e0:	bne	120c4 <strspn@plt+0x120c>
   120e4:	b	11d98 <strspn@plt+0xee0>
   120e8:	add	r3, r4, #1
   120ec:	cmp	r0, r3
   120f0:	bls	121ac <strspn@plt+0x12f4>
   120f4:	ldrb	r3, [r0, #-1]
   120f8:	mov	r5, r4
   120fc:	mov	r6, #0
   12100:	cmp	r3, #47	; 0x2f
   12104:	subeq	r4, r0, #1
   12108:	movne	r4, r0
   1210c:	b	1205c <strspn@plt+0x11a4>
   12110:	ldr	r8, [sp, #1176]	; 0x498
   12114:	ldr	r3, [sp, #12]
   12118:	add	r0, r8, r6
   1211c:	cmp	r3, #0
   12120:	ldrne	r3, [sp, #36]	; 0x24
   12124:	addne	r5, r8, r3
   12128:	ldr	r3, [sp, #32]
   1212c:	mov	r1, r5
   12130:	add	r2, r3, #1
   12134:	bl	10c90 <memmove@plt>
   12138:	mov	r2, r6
   1213c:	mov	r1, r9
   12140:	mov	r0, r8
   12144:	bl	10cc0 <memcpy@plt>
   12148:	ldrb	r3, [r9]
   1214c:	cmp	r3, #47	; 0x2f
   12150:	mov	r5, r0
   12154:	beq	12234 <strspn@plt+0x137c>
   12158:	ldr	r2, [sp, #28]
   1215c:	add	r3, r4, #1
   12160:	cmp	r2, r3
   12164:	bls	121ec <strspn@plt+0x1334>
   12168:	sub	r0, r2, #1
   1216c:	cmp	r0, r4
   12170:	bls	121a0 <strspn@plt+0x12e8>
   12174:	ldrb	r3, [r2, #-2]
   12178:	cmp	r3, #47	; 0x2f
   1217c:	beq	121a0 <strspn@plt+0x12e8>
   12180:	sub	r3, r2, #2
   12184:	cmp	r4, r3
   12188:	mov	r0, r3
   1218c:	beq	121a0 <strspn@plt+0x12e8>
   12190:	ldrb	r2, [r3, #-1]
   12194:	sub	r3, r3, #1
   12198:	cmp	r2, #47	; 0x2f
   1219c:	bne	12184 <strspn@plt+0x12cc>
   121a0:	mov	r3, #1
   121a4:	str	r3, [sp, #12]
   121a8:	b	11e34 <strspn@plt+0xf7c>
   121ac:	mov	r5, r4
   121b0:	mov	r6, #0
   121b4:	mov	r4, r0
   121b8:	b	1205c <strspn@plt+0x11a4>
   121bc:	ldr	r3, [pc, #152]	; 1225c <strspn@plt+0x13a4>
   121c0:	ldr	r0, [sp, #28]
   121c4:	mov	r2, #0
   121c8:	ldrh	r1, [r3]
   121cc:	mov	r3, #512	; 0x200
   121d0:	strh	r1, [r0]
   121d4:	mov	r1, r4
   121d8:	mvn	r0, #99	; 0x63
   121dc:	bl	10ca8 <faccessat@plt>
   121e0:	adds	r6, r0, #0
   121e4:	movne	r6, #1
   121e8:	b	11f40 <strspn@plt+0x1088>
   121ec:	mov	r3, #1
   121f0:	ldr	r0, [sp, #28]
   121f4:	str	r3, [sp, #12]
   121f8:	b	11e34 <strspn@plt+0xf7c>
   121fc:	cmp	r2, #0
   12200:	bne	11f7c <strspn@plt+0x10c4>
   12204:	mov	r3, #512	; 0x200
   12208:	b	121d4 <strspn@plt+0x131c>
   1220c:	ldr	r3, [pc, #80]	; 12264 <strspn@plt+0x13ac>
   12210:	ldr	r2, [pc, #80]	; 12268 <strspn@plt+0x13b0>
   12214:	str	r3, [sp]
   12218:	mov	r0, #7
   1221c:	ldr	r3, [pc, #72]	; 1226c <strspn@plt+0x13b4>
   12220:	bl	12d00 <strspn@plt+0x1e48>
   12224:	subs	r3, r0, #0
   12228:	str	r3, [sp, #24]
   1222c:	bne	12020 <strspn@plt+0x1168>
   12230:	b	11d98 <strspn@plt+0xee0>
   12234:	strb	r3, [r4]
   12238:	mov	r3, #1
   1223c:	add	r0, r4, #1
   12240:	str	r3, [sp, #12]
   12244:	b	11e34 <strspn@plt+0xf7c>
   12248:	mov	r0, r3
   1224c:	b	11e34 <strspn@plt+0xf7c>
   12250:	mov	r5, r4
   12254:	ldr	r4, [sp, #28]
   12258:	b	1205c <strspn@plt+0x11a4>
   1225c:			; <UNDEFINED> instruction: 0x000171b0
   12260:	andeq	r7, r1, r4, lsr #3
   12264:			; <UNDEFINED> instruction: 0x000134bc
   12268:	andeq	r3, r1, r8, lsr r4
   1226c:	andeq	r3, r1, r0, ror r4
   12270:	ldr	r3, [pc, #4]	; 1227c <strspn@plt+0x13c4>
   12274:	str	r0, [r3]
   12278:	bx	lr
   1227c:	andeq	r8, r2, r4, ror #2
   12280:	ldr	r3, [pc, #4]	; 1228c <strspn@plt+0x13d4>
   12284:	strb	r0, [r3, #4]
   12288:	bx	lr
   1228c:	andeq	r8, r2, r4, ror #2
   12290:	ldr	r3, [pc, #192]	; 12358 <strspn@plt+0x14a0>
   12294:	push	{r4, r5, r6, lr}
   12298:	sub	sp, sp, #8
   1229c:	ldr	r0, [r3]
   122a0:	bl	16078 <strspn@plt+0x51c0>
   122a4:	cmp	r0, #0
   122a8:	beq	122cc <strspn@plt+0x1414>
   122ac:	ldr	r4, [pc, #168]	; 1235c <strspn@plt+0x14a4>
   122b0:	ldrb	r3, [r4, #4]
   122b4:	cmp	r3, #0
   122b8:	beq	122e8 <strspn@plt+0x1430>
   122bc:	bl	10df8 <__errno_location@plt>
   122c0:	ldr	r3, [r0]
   122c4:	cmp	r3, #32
   122c8:	bne	122e8 <strspn@plt+0x1430>
   122cc:	ldr	r3, [pc, #140]	; 12360 <strspn@plt+0x14a8>
   122d0:	ldr	r0, [r3]
   122d4:	bl	16078 <strspn@plt+0x51c0>
   122d8:	cmp	r0, #0
   122dc:	bne	12330 <strspn@plt+0x1478>
   122e0:	add	sp, sp, #8
   122e4:	pop	{r4, r5, r6, pc}
   122e8:	mov	r2, #5
   122ec:	ldr	r1, [pc, #112]	; 12364 <strspn@plt+0x14ac>
   122f0:	mov	r0, #0
   122f4:	bl	10cf0 <dcgettext@plt>
   122f8:	ldr	r4, [r4]
   122fc:	cmp	r4, #0
   12300:	mov	r5, r0
   12304:	beq	1233c <strspn@plt+0x1484>
   12308:	bl	10df8 <__errno_location@plt>
   1230c:	ldr	r6, [r0]
   12310:	mov	r0, r4
   12314:	bl	15200 <strspn@plt+0x4348>
   12318:	mov	r1, r6
   1231c:	str	r5, [sp]
   12320:	ldr	r2, [pc, #64]	; 12368 <strspn@plt+0x14b0>
   12324:	mov	r3, r0
   12328:	mov	r0, #0
   1232c:	bl	10d74 <error@plt>
   12330:	ldr	r3, [pc, #52]	; 1236c <strspn@plt+0x14b4>
   12334:	ldr	r0, [r3]
   12338:	bl	10cb4 <_exit@plt>
   1233c:	bl	10df8 <__errno_location@plt>
   12340:	mov	r3, r5
   12344:	ldr	r2, [pc, #36]	; 12370 <strspn@plt+0x14b8>
   12348:	ldr	r1, [r0]
   1234c:	mov	r0, r4
   12350:	bl	10d74 <error@plt>
   12354:	b	12330 <strspn@plt+0x1478>
   12358:	andeq	r8, r2, ip, asr #2
   1235c:	andeq	r8, r2, r4, ror #2
   12360:	andeq	r8, r2, r8, asr #2
   12364:	andeq	r7, r1, r0, ror #3
   12368:	andeq	r7, r1, ip, ror #3
   1236c:	strdeq	r8, [r2], -r0
   12370:	strdeq	r7, [r1], -r0
   12374:	push	{r4, r5, r6, r7, r8, lr}
   12378:	subs	r8, r0, #0
   1237c:	popeq	{r4, r5, r6, r7, r8, pc}
   12380:	mov	r0, #24
   12384:	mov	r4, r1
   12388:	mov	r7, r2
   1238c:	bl	15a20 <strspn@plt+0x4b68>
   12390:	mov	r6, r0
   12394:	mov	r0, r4
   12398:	bl	15f4c <strspn@plt+0x5094>
   1239c:	ldrd	r4, [r7, #96]	; 0x60
   123a0:	ldrd	r2, [r7]
   123a4:	mov	r1, r6
   123a8:	strd	r4, [r6, #8]
   123ac:	strd	r2, [r6, #16]
   123b0:	str	r0, [r6]
   123b4:	mov	r0, r8
   123b8:	bl	132f4 <strspn@plt+0x243c>
   123bc:	cmp	r0, #0
   123c0:	beq	123d8 <strspn@plt+0x1520>
   123c4:	cmp	r6, r0
   123c8:	popeq	{r4, r5, r6, r7, r8, pc}
   123cc:	mov	r0, r6
   123d0:	pop	{r4, r5, r6, r7, r8, lr}
   123d4:	b	134bc <strspn@plt+0x2604>
   123d8:	bl	15f68 <strspn@plt+0x50b0>
   123dc:	subs	r3, r0, #0
   123e0:	beq	1241c <strspn@plt+0x1564>
   123e4:	push	{r4, r5, lr}
   123e8:	sub	sp, sp, #28
   123ec:	ldrd	r4, [r2, #96]	; 0x60
   123f0:	ldrd	r2, [r2]
   123f4:	mov	ip, r1
   123f8:	mov	r1, sp
   123fc:	str	ip, [sp]
   12400:	strd	r4, [sp, #8]
   12404:	strd	r2, [sp, #16]
   12408:	bl	12a60 <strspn@plt+0x1ba8>
   1240c:	adds	r0, r0, #0
   12410:	movne	r0, #1
   12414:	add	sp, sp, #28
   12418:	pop	{r4, r5, pc}
   1241c:	mov	r0, r3
   12420:	bx	lr
   12424:	push	{r4, r5, lr}
   12428:	sub	sp, sp, #12
   1242c:	mov	r5, r0
   12430:	bl	10df8 <__errno_location@plt>
   12434:	mov	r2, #0
   12438:	mov	r4, r0
   1243c:	ldr	r3, [r0]
   12440:	str	r2, [r4]
   12444:	mov	r0, r5
   12448:	str	r3, [sp]
   1244c:	str	r3, [sp, #4]
   12450:	bl	10c9c <free@plt>
   12454:	ldr	r3, [r4]
   12458:	add	r2, sp, #8
   1245c:	cmp	r3, #0
   12460:	moveq	r3, #4
   12464:	movne	r3, #0
   12468:	add	r3, r2, r3
   1246c:	ldr	r3, [r3, #-8]
   12470:	str	r3, [r4]
   12474:	add	sp, sp, #12
   12478:	pop	{r4, r5, pc}
   1247c:	andeq	r0, r0, r0
   12480:	cmp	r0, #10
   12484:	movcc	r0, #10
   12488:	push	{r4, r5, r6, r7, r8, lr}
   1248c:	orr	r7, r0, #1
   12490:	cmn	r7, #1
   12494:	ldrne	r8, [pc, #132]	; 12520 <strspn@plt+0x1668>
   12498:	beq	12510 <strspn@plt+0x1658>
   1249c:	cmp	r7, #9
   124a0:	bls	12518 <strspn@plt+0x1660>
   124a4:	umull	r2, r3, r8, r7
   124a8:	lsr	r3, r3, #1
   124ac:	add	r3, r3, r3, lsl #1
   124b0:	cmp	r7, r3
   124b4:	beq	12504 <strspn@plt+0x164c>
   124b8:	mov	r6, #16
   124bc:	mov	r5, #9
   124c0:	mov	r4, #3
   124c4:	b	124d8 <strspn@plt+0x1620>
   124c8:	bl	16684 <strspn@plt+0x57cc>
   124cc:	add	r6, r6, #8
   124d0:	cmp	r1, #0
   124d4:	beq	12504 <strspn@plt+0x164c>
   124d8:	add	r5, r5, r6
   124dc:	add	r4, r4, #2
   124e0:	cmp	r5, r7
   124e4:	mov	r0, r7
   124e8:	mov	r1, r4
   124ec:	bcc	124c8 <strspn@plt+0x1610>
   124f0:	mov	r1, r4
   124f4:	mov	r0, r7
   124f8:	bl	16684 <strspn@plt+0x57cc>
   124fc:	cmp	r1, #0
   12500:	bne	12510 <strspn@plt+0x1658>
   12504:	add	r7, r7, #2
   12508:	cmn	r7, #1
   1250c:	bne	1249c <strspn@plt+0x15e4>
   12510:	mov	r0, r7
   12514:	pop	{r4, r5, r6, r7, r8, pc}
   12518:	mov	r4, #3
   1251c:	b	124f0 <strspn@plt+0x1638>
   12520:	bge	feabcfd4 <optarg@@GLIBC_2.4+0xfea94e84>
   12524:	push	{r4, lr}
   12528:	ror	r0, r0, #3
   1252c:	bl	16684 <strspn@plt+0x57cc>
   12530:	mov	r0, r1
   12534:	pop	{r4, pc}
   12538:	sub	r0, r1, r0
   1253c:	clz	r0, r0
   12540:	lsr	r0, r0, #5
   12544:	bx	lr
   12548:	push	{r4, lr}
   1254c:	mov	r4, r0
   12550:	mov	r0, r1
   12554:	ldr	r3, [r4, #24]
   12558:	ldr	r1, [r4, #8]
   1255c:	blx	r3
   12560:	ldr	r3, [r4, #8]
   12564:	cmp	r0, r3
   12568:	bcs	12578 <strspn@plt+0x16c0>
   1256c:	ldr	r3, [r4]
   12570:	add	r0, r3, r0, lsl #3
   12574:	pop	{r4, pc}
   12578:	bl	10eac <abort@plt>
   1257c:	push	{r4, r5, r6, r7, r8, lr}
   12580:	mov	r7, r2
   12584:	mov	r8, r3
   12588:	mov	r6, r0
   1258c:	mov	r5, r1
   12590:	bl	12548 <strspn@plt+0x1690>
   12594:	str	r0, [r7]
   12598:	ldr	r3, [r0]
   1259c:	cmp	r3, #0
   125a0:	beq	12638 <strspn@plt+0x1780>
   125a4:	cmp	r5, r3
   125a8:	mov	r4, r0
   125ac:	beq	125cc <strspn@plt+0x1714>
   125b0:	mov	r1, r3
   125b4:	mov	r0, r5
   125b8:	ldr	r3, [r6, #28]
   125bc:	blx	r3
   125c0:	cmp	r0, #0
   125c4:	beq	1262c <strspn@plt+0x1774>
   125c8:	ldr	r3, [r4]
   125cc:	cmp	r8, #0
   125d0:	beq	125fc <strspn@plt+0x1744>
   125d4:	ldr	r2, [r4, #4]
   125d8:	cmp	r2, #0
   125dc:	movne	ip, #0
   125e0:	ldmne	r2, {r0, r1}
   125e4:	streq	r2, [r4]
   125e8:	stmne	r4, {r0, r1}
   125ec:	strne	ip, [r2]
   125f0:	ldrne	r1, [r6, #36]	; 0x24
   125f4:	strne	r1, [r2, #4]
   125f8:	strne	r2, [r6, #36]	; 0x24
   125fc:	mov	r0, r3
   12600:	pop	{r4, r5, r6, r7, r8, pc}
   12604:	ldr	r3, [r2]
   12608:	cmp	r5, r3
   1260c:	beq	1264c <strspn@plt+0x1794>
   12610:	mov	r1, r3
   12614:	mov	r0, r5
   12618:	ldr	r3, [r6, #28]
   1261c:	blx	r3
   12620:	cmp	r0, #0
   12624:	bne	12644 <strspn@plt+0x178c>
   12628:	ldr	r4, [r4, #4]
   1262c:	ldr	r2, [r4, #4]
   12630:	cmp	r2, #0
   12634:	bne	12604 <strspn@plt+0x174c>
   12638:	mov	r3, #0
   1263c:	mov	r0, r3
   12640:	pop	{r4, r5, r6, r7, r8, pc}
   12644:	ldr	r2, [r4, #4]
   12648:	ldr	r3, [r2]
   1264c:	cmp	r8, #0
   12650:	beq	125fc <strspn@plt+0x1744>
   12654:	ldr	r0, [r2, #4]
   12658:	mov	r1, #0
   1265c:	str	r0, [r4, #4]
   12660:	str	r1, [r2]
   12664:	ldr	r1, [r6, #36]	; 0x24
   12668:	mov	r0, r3
   1266c:	str	r1, [r2, #4]
   12670:	str	r2, [r6, #36]	; 0x24
   12674:	pop	{r4, r5, r6, r7, r8, pc}
   12678:	ldr	r2, [pc, #164]	; 12724 <strspn@plt+0x186c>
   1267c:	ldr	r3, [r0]
   12680:	cmp	r3, r2
   12684:	beq	1270c <strspn@plt+0x1854>
   12688:	vldr	s15, [r3, #8]
   1268c:	vldr	s14, [pc, #128]	; 12714 <strspn@plt+0x185c>
   12690:	vcmpe.f32	s15, s14
   12694:	vmrs	APSR_nzcv, fpscr
   12698:	ble	12700 <strspn@plt+0x1848>
   1269c:	vldr	s13, [pc, #116]	; 12718 <strspn@plt+0x1860>
   126a0:	vcmpe.f32	s15, s13
   126a4:	vmrs	APSR_nzcv, fpscr
   126a8:	bpl	12700 <strspn@plt+0x1848>
   126ac:	vldr	s13, [pc, #104]	; 1271c <strspn@plt+0x1864>
   126b0:	vldr	s12, [r3, #12]
   126b4:	vcmpe.f32	s12, s13
   126b8:	vmrs	APSR_nzcv, fpscr
   126bc:	ble	12700 <strspn@plt+0x1848>
   126c0:	vldr	s13, [r3]
   126c4:	vcmpe.f32	s13, #0.0
   126c8:	vmrs	APSR_nzcv, fpscr
   126cc:	blt	12700 <strspn@plt+0x1848>
   126d0:	vadd.f32	s14, s13, s14
   126d4:	vldr	s13, [r3, #4]
   126d8:	vcmpe.f32	s14, s13
   126dc:	vmrs	APSR_nzcv, fpscr
   126e0:	bpl	12700 <strspn@plt+0x1848>
   126e4:	vldr	s12, [pc, #52]	; 12720 <strspn@plt+0x1868>
   126e8:	vcmpe.f32	s13, s12
   126ec:	vmrs	APSR_nzcv, fpscr
   126f0:	bhi	12700 <strspn@plt+0x1848>
   126f4:	vcmpe.f32	s15, s14
   126f8:	vmrs	APSR_nzcv, fpscr
   126fc:	bgt	1270c <strspn@plt+0x1854>
   12700:	str	r2, [r0]
   12704:	mov	r0, #0
   12708:	bx	lr
   1270c:	mov	r0, #1
   12710:	bx	lr
   12714:	stclcc	12, cr12, [ip, #820]	; 0x334
   12718:	svccc	0x00666666
   1271c:	svccc	0x008ccccd
   12720:	svccc	0x00800000
   12724:	strdeq	r7, [r1], -r4
   12728:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1272c:	ldm	r1, {r6, ip}
   12730:	cmp	r6, ip
   12734:	bcs	127f0 <strspn@plt+0x1938>
   12738:	mov	sl, r2
   1273c:	mov	r5, r0
   12740:	mov	r8, r1
   12744:	add	r6, r6, #8
   12748:	mov	r9, #0
   1274c:	ldr	fp, [r6, #-8]
   12750:	mov	r7, r6
   12754:	cmp	fp, #0
   12758:	beq	127e4 <strspn@plt+0x192c>
   1275c:	ldr	r4, [r6, #-4]
   12760:	cmp	r4, #0
   12764:	bne	12784 <strspn@plt+0x18cc>
   12768:	b	127d4 <strspn@plt+0x191c>
   1276c:	ldr	r3, [r0, #4]
   12770:	cmp	r2, #0
   12774:	str	r3, [r4, #4]
   12778:	str	r4, [r0, #4]
   1277c:	mov	r4, r2
   12780:	beq	127d0 <strspn@plt+0x1918>
   12784:	ldr	fp, [r4]
   12788:	mov	r0, r5
   1278c:	mov	r1, fp
   12790:	bl	12548 <strspn@plt+0x1690>
   12794:	ldr	r2, [r4, #4]
   12798:	ldr	r1, [r0]
   1279c:	cmp	r1, #0
   127a0:	bne	1276c <strspn@plt+0x18b4>
   127a4:	ldr	ip, [r5, #12]
   127a8:	str	fp, [r0]
   127ac:	add	r3, ip, #1
   127b0:	str	r3, [r5, #12]
   127b4:	str	r1, [r4]
   127b8:	ldr	r3, [r5, #36]	; 0x24
   127bc:	cmp	r2, #0
   127c0:	str	r3, [r4, #4]
   127c4:	str	r4, [r5, #36]	; 0x24
   127c8:	mov	r4, r2
   127cc:	bne	12784 <strspn@plt+0x18cc>
   127d0:	ldr	fp, [r6, #-8]
   127d4:	cmp	sl, #0
   127d8:	str	r9, [r6, #-4]
   127dc:	beq	127f8 <strspn@plt+0x1940>
   127e0:	ldr	ip, [r8, #4]
   127e4:	cmp	ip, r7
   127e8:	add	r6, r6, #8
   127ec:	bhi	1274c <strspn@plt+0x1894>
   127f0:	mov	r0, #1
   127f4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127f8:	mov	r1, fp
   127fc:	mov	r0, r5
   12800:	bl	12548 <strspn@plt+0x1690>
   12804:	ldr	r2, [r0]
   12808:	mov	r4, r0
   1280c:	cmp	r2, #0
   12810:	beq	1285c <strspn@plt+0x19a4>
   12814:	ldr	r0, [r5, #36]	; 0x24
   12818:	cmp	r0, #0
   1281c:	beq	12870 <strspn@plt+0x19b8>
   12820:	ldr	r2, [r0, #4]
   12824:	str	r2, [r5, #36]	; 0x24
   12828:	ldr	r2, [r4, #4]
   1282c:	str	fp, [r0]
   12830:	str	r2, [r0, #4]
   12834:	str	r0, [r4, #4]
   12838:	str	r9, [r6, #-8]
   1283c:	ldr	r3, [r8, #12]
   12840:	ldr	ip, [r8, #4]
   12844:	sub	r3, r3, #1
   12848:	cmp	ip, r7
   1284c:	str	r3, [r8, #12]
   12850:	add	r6, r6, #8
   12854:	bhi	1274c <strspn@plt+0x1894>
   12858:	b	127f0 <strspn@plt+0x1938>
   1285c:	ldr	r2, [r5, #12]
   12860:	str	fp, [r0]
   12864:	add	r3, r2, #1
   12868:	str	r3, [r5, #12]
   1286c:	b	12838 <strspn@plt+0x1980>
   12870:	mov	r0, #8
   12874:	bl	15ff0 <strspn@plt+0x5138>
   12878:	cmp	r0, #0
   1287c:	bne	12828 <strspn@plt+0x1970>
   12880:	mov	r0, sl
   12884:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12888:	ldr	r0, [r0, #8]
   1288c:	bx	lr
   12890:	ldr	r0, [r0, #12]
   12894:	bx	lr
   12898:	ldr	r0, [r0, #16]
   1289c:	bx	lr
   128a0:	ldm	r0, {r1, ip}
   128a4:	mov	r0, #0
   128a8:	cmp	r1, ip
   128ac:	bcs	128f4 <strspn@plt+0x1a3c>
   128b0:	ldr	r3, [r1]
   128b4:	cmp	r3, #0
   128b8:	beq	128e4 <strspn@plt+0x1a2c>
   128bc:	ldr	r3, [r1, #4]
   128c0:	mov	r2, #1
   128c4:	cmp	r3, #0
   128c8:	beq	128dc <strspn@plt+0x1a24>
   128cc:	ldr	r3, [r3, #4]
   128d0:	add	r2, r2, #1
   128d4:	cmp	r3, #0
   128d8:	bne	128cc <strspn@plt+0x1a14>
   128dc:	cmp	r0, r2
   128e0:	movcc	r0, r2
   128e4:	add	r1, r1, #8
   128e8:	cmp	r1, ip
   128ec:	bcc	128b0 <strspn@plt+0x19f8>
   128f0:	bx	lr
   128f4:	bx	lr
   128f8:	push	{lr}		; (str lr, [sp, #-4]!)
   128fc:	mov	r2, #0
   12900:	ldm	r0, {r1, lr}
   12904:	mov	ip, r2
   12908:	cmp	r1, lr
   1290c:	bcs	1294c <strspn@plt+0x1a94>
   12910:	ldr	r3, [r1]
   12914:	cmp	r3, #0
   12918:	beq	12940 <strspn@plt+0x1a88>
   1291c:	ldr	r3, [r1, #4]
   12920:	add	ip, ip, #1
   12924:	cmp	r3, #0
   12928:	add	r2, r2, #1
   1292c:	beq	12940 <strspn@plt+0x1a88>
   12930:	ldr	r3, [r3, #4]
   12934:	add	r2, r2, #1
   12938:	cmp	r3, #0
   1293c:	bne	12930 <strspn@plt+0x1a78>
   12940:	add	r1, r1, #8
   12944:	cmp	r1, lr
   12948:	bcc	12910 <strspn@plt+0x1a58>
   1294c:	ldr	r3, [r0, #12]
   12950:	cmp	r3, ip
   12954:	ldreq	r0, [r0, #16]
   12958:	subeq	r0, r0, r2
   1295c:	clzeq	r0, r0
   12960:	lsreq	r0, r0, #5
   12964:	movne	r0, #0
   12968:	pop	{pc}		; (ldr pc, [sp], #4)
   1296c:	push	{r4, r5, r6, r7, lr}
   12970:	mov	r5, r1
   12974:	ldm	r0, {ip, lr}
   12978:	sub	sp, sp, #12
   1297c:	ldr	r3, [r0, #16]
   12980:	cmp	ip, lr
   12984:	mov	r4, #0
   12988:	ldr	r6, [r0, #8]
   1298c:	ldr	r7, [r0, #12]
   12990:	bcs	129d4 <strspn@plt+0x1b1c>
   12994:	ldr	r2, [ip]
   12998:	cmp	r2, #0
   1299c:	beq	129c8 <strspn@plt+0x1b10>
   129a0:	ldr	r2, [ip, #4]
   129a4:	mov	r1, #1
   129a8:	cmp	r2, #0
   129ac:	beq	129c0 <strspn@plt+0x1b08>
   129b0:	ldr	r2, [r2, #4]
   129b4:	add	r1, r1, #1
   129b8:	cmp	r2, #0
   129bc:	bne	129b0 <strspn@plt+0x1af8>
   129c0:	cmp	r4, r1
   129c4:	movcc	r4, r1
   129c8:	add	ip, ip, #8
   129cc:	cmp	ip, lr
   129d0:	bcc	12994 <strspn@plt+0x1adc>
   129d4:	ldr	r2, [pc, #116]	; 12a50 <strspn@plt+0x1b98>
   129d8:	mov	r1, #1
   129dc:	mov	r0, r5
   129e0:	bl	10e34 <__fprintf_chk@plt>
   129e4:	mov	r3, r6
   129e8:	ldr	r2, [pc, #100]	; 12a54 <strspn@plt+0x1b9c>
   129ec:	mov	r1, #1
   129f0:	mov	r0, r5
   129f4:	bl	10e34 <__fprintf_chk@plt>
   129f8:	vmov	s15, r7
   129fc:	vldr	d5, [pc, #68]	; 12a48 <strspn@plt+0x1b90>
   12a00:	mov	r3, r7
   12a04:	ldr	r2, [pc, #76]	; 12a58 <strspn@plt+0x1ba0>
   12a08:	vcvt.f64.u32	d6, s15
   12a0c:	vmov	s15, r6
   12a10:	mov	r1, #1
   12a14:	mov	r0, r5
   12a18:	vcvt.f64.u32	d7, s15
   12a1c:	vmul.f64	d6, d6, d5
   12a20:	vdiv.f64	d5, d6, d7
   12a24:	vstr	d5, [sp]
   12a28:	bl	10e34 <__fprintf_chk@plt>
   12a2c:	mov	r3, r4
   12a30:	mov	r0, r5
   12a34:	ldr	r2, [pc, #32]	; 12a5c <strspn@plt+0x1ba4>
   12a38:	mov	r1, #1
   12a3c:	add	sp, sp, #12
   12a40:	pop	{r4, r5, r6, r7, lr}
   12a44:	b	10e34 <__fprintf_chk@plt>
   12a48:	andeq	r0, r0, r0
   12a4c:	subsmi	r0, r9, r0
   12a50:	andeq	r7, r1, r8, lsl #4
   12a54:	andeq	r7, r1, r0, lsr #4
   12a58:	andeq	r7, r1, r8, lsr r2
   12a5c:	andeq	r7, r1, ip, asr r2
   12a60:	push	{r4, r5, r6, lr}
   12a64:	mov	r6, r0
   12a68:	mov	r5, r1
   12a6c:	bl	12548 <strspn@plt+0x1690>
   12a70:	ldr	r3, [r0]
   12a74:	cmp	r3, #0
   12a78:	movne	r4, r0
   12a7c:	bne	12a88 <strspn@plt+0x1bd0>
   12a80:	b	12ab4 <strspn@plt+0x1bfc>
   12a84:	ldr	r3, [r4]
   12a88:	cmp	r5, r3
   12a8c:	mov	r1, r3
   12a90:	mov	r0, r5
   12a94:	beq	12abc <strspn@plt+0x1c04>
   12a98:	ldr	r3, [r6, #28]
   12a9c:	blx	r3
   12aa0:	cmp	r0, #0
   12aa4:	bne	12ac4 <strspn@plt+0x1c0c>
   12aa8:	ldr	r4, [r4, #4]
   12aac:	cmp	r4, #0
   12ab0:	bne	12a84 <strspn@plt+0x1bcc>
   12ab4:	mov	r0, #0
   12ab8:	pop	{r4, r5, r6, pc}
   12abc:	mov	r0, r5
   12ac0:	pop	{r4, r5, r6, pc}
   12ac4:	ldr	r0, [r4]
   12ac8:	pop	{r4, r5, r6, pc}
   12acc:	ldr	r3, [r0, #16]
   12ad0:	cmp	r3, #0
   12ad4:	beq	12b08 <strspn@plt+0x1c50>
   12ad8:	ldr	r3, [r0]
   12adc:	ldr	r2, [r0, #4]
   12ae0:	cmp	r3, r2
   12ae4:	bcc	12af8 <strspn@plt+0x1c40>
   12ae8:	b	12b10 <strspn@plt+0x1c58>
   12aec:	add	r3, r3, #8
   12af0:	cmp	r3, r2
   12af4:	bcs	12b10 <strspn@plt+0x1c58>
   12af8:	ldr	r0, [r3]
   12afc:	cmp	r0, #0
   12b00:	beq	12aec <strspn@plt+0x1c34>
   12b04:	bx	lr
   12b08:	mov	r0, r3
   12b0c:	bx	lr
   12b10:	push	{r4, lr}
   12b14:	bl	10eac <abort@plt>
   12b18:	push	{r4, r5, r6, lr}
   12b1c:	mov	r5, r0
   12b20:	mov	r4, r1
   12b24:	bl	12548 <strspn@plt+0x1690>
   12b28:	mov	r2, r0
   12b2c:	mov	r3, r0
   12b30:	b	12b3c <strspn@plt+0x1c84>
   12b34:	cmp	r3, #0
   12b38:	beq	12b50 <strspn@plt+0x1c98>
   12b3c:	ldm	r3, {r1, r3}
   12b40:	cmp	r4, r1
   12b44:	bne	12b34 <strspn@plt+0x1c7c>
   12b48:	cmp	r3, #0
   12b4c:	bne	12b78 <strspn@plt+0x1cc0>
   12b50:	ldr	r3, [r5, #4]
   12b54:	b	12b64 <strspn@plt+0x1cac>
   12b58:	ldr	r0, [r2]
   12b5c:	cmp	r0, #0
   12b60:	popne	{r4, r5, r6, pc}
   12b64:	add	r2, r2, #8
   12b68:	cmp	r2, r3
   12b6c:	bcc	12b58 <strspn@plt+0x1ca0>
   12b70:	mov	r0, #0
   12b74:	pop	{r4, r5, r6, pc}
   12b78:	ldr	r0, [r3]
   12b7c:	pop	{r4, r5, r6, pc}
   12b80:	push	{r4, r5, r6, lr}
   12b84:	ldm	r0, {r5, lr}
   12b88:	cmp	r5, lr
   12b8c:	bcs	12c10 <strspn@plt+0x1d58>
   12b90:	add	r5, r5, #8
   12b94:	mov	ip, #0
   12b98:	ldr	r3, [r5, #-8]
   12b9c:	mov	r6, r5
   12ba0:	cmp	r3, #0
   12ba4:	beq	12bf0 <strspn@plt+0x1d38>
   12ba8:	cmp	r2, ip
   12bac:	bls	12bfc <strspn@plt+0x1d44>
   12bb0:	str	r3, [r1, ip, lsl #2]
   12bb4:	ldr	r3, [r5, #-4]
   12bb8:	add	r4, ip, #1
   12bbc:	cmp	r3, #0
   12bc0:	add	lr, r1, ip, lsl #2
   12bc4:	beq	12c04 <strspn@plt+0x1d4c>
   12bc8:	mov	ip, r4
   12bcc:	cmp	r2, ip
   12bd0:	beq	12bfc <strspn@plt+0x1d44>
   12bd4:	ldr	r4, [r3]
   12bd8:	add	ip, ip, #1
   12bdc:	str	r4, [lr, #4]!
   12be0:	ldr	r3, [r3, #4]
   12be4:	cmp	r3, #0
   12be8:	bne	12bcc <strspn@plt+0x1d14>
   12bec:	ldr	lr, [r0, #4]
   12bf0:	cmp	lr, r6
   12bf4:	add	r5, r5, #8
   12bf8:	bhi	12b98 <strspn@plt+0x1ce0>
   12bfc:	mov	r0, ip
   12c00:	pop	{r4, r5, r6, pc}
   12c04:	ldr	lr, [r0, #4]
   12c08:	mov	ip, r4
   12c0c:	b	12bf0 <strspn@plt+0x1d38>
   12c10:	mov	ip, #0
   12c14:	b	12bfc <strspn@plt+0x1d44>
   12c18:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c1c:	ldr	r3, [r0, #4]
   12c20:	ldr	r8, [r0]
   12c24:	cmp	r8, r3
   12c28:	bcs	12c8c <strspn@plt+0x1dd4>
   12c2c:	mov	r7, r2
   12c30:	mov	r6, r1
   12c34:	mov	r9, r0
   12c38:	mov	r5, #0
   12c3c:	ldr	r0, [r8]
   12c40:	cmp	r0, #0
   12c44:	beq	12c78 <strspn@plt+0x1dc0>
   12c48:	mov	r4, r8
   12c4c:	b	12c54 <strspn@plt+0x1d9c>
   12c50:	ldr	r0, [r4]
   12c54:	mov	r1, r7
   12c58:	blx	r6
   12c5c:	cmp	r0, #0
   12c60:	beq	12c84 <strspn@plt+0x1dcc>
   12c64:	ldr	r4, [r4, #4]
   12c68:	add	r5, r5, #1
   12c6c:	cmp	r4, #0
   12c70:	bne	12c50 <strspn@plt+0x1d98>
   12c74:	ldr	r3, [r9, #4]
   12c78:	add	r8, r8, #8
   12c7c:	cmp	r3, r8
   12c80:	bhi	12c3c <strspn@plt+0x1d84>
   12c84:	mov	r0, r5
   12c88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c8c:	mov	r5, #0
   12c90:	b	12c84 <strspn@plt+0x1dcc>
   12c94:	push	{r4, r5, r6, lr}
   12c98:	mov	r4, r0
   12c9c:	ldrb	r0, [r0]
   12ca0:	cmp	r0, #0
   12ca4:	beq	12cd4 <strspn@plt+0x1e1c>
   12ca8:	mov	r5, r1
   12cac:	mov	r1, #0
   12cb0:	rsb	r1, r1, r1, lsl #5
   12cb4:	add	r0, r1, r0
   12cb8:	mov	r1, r5
   12cbc:	bl	16684 <strspn@plt+0x57cc>
   12cc0:	ldrb	r0, [r4, #1]!
   12cc4:	cmp	r0, #0
   12cc8:	bne	12cb0 <strspn@plt+0x1df8>
   12ccc:	mov	r0, r1
   12cd0:	pop	{r4, r5, r6, pc}
   12cd4:	mov	r1, r0
   12cd8:	b	12ccc <strspn@plt+0x1e14>
   12cdc:	push	{lr}		; (str lr, [sp, #-4]!)
   12ce0:	mov	ip, r0
   12ce4:	ldr	lr, [pc, #16]	; 12cfc <strspn@plt+0x1e44>
   12ce8:	ldm	lr!, {r0, r1, r2, r3}
   12cec:	ldr	lr, [lr]
   12cf0:	stmia	ip!, {r0, r1, r2, r3}
   12cf4:	str	lr, [ip]
   12cf8:	pop	{pc}		; (ldr pc, [sp], #4)
   12cfc:	strdeq	r7, [r1], -r4
   12d00:	push	{r4, r5, r6, r7, lr}
   12d04:	sub	sp, sp, #12
   12d08:	cmp	r2, #0
   12d0c:	str	r0, [sp, #4]
   12d10:	ldr	r6, [pc, #304]	; 12e48 <strspn@plt+0x1f90>
   12d14:	mov	r0, #40	; 0x28
   12d18:	movne	r6, r2
   12d1c:	cmp	r3, #0
   12d20:	ldr	r7, [pc, #292]	; 12e4c <strspn@plt+0x1f94>
   12d24:	mov	r5, r1
   12d28:	movne	r7, r3
   12d2c:	bl	15ff0 <strspn@plt+0x5138>
   12d30:	subs	r4, r0, #0
   12d34:	beq	12dcc <strspn@plt+0x1f14>
   12d38:	cmp	r5, #0
   12d3c:	beq	12e20 <strspn@plt+0x1f68>
   12d40:	mov	r0, r4
   12d44:	str	r5, [r0, #20]!
   12d48:	bl	12678 <strspn@plt+0x17c0>
   12d4c:	cmp	r0, #0
   12d50:	beq	12e08 <strspn@plt+0x1f50>
   12d54:	ldrb	r3, [r5, #16]
   12d58:	cmp	r3, #0
   12d5c:	beq	12dd8 <strspn@plt+0x1f20>
   12d60:	ldr	r0, [sp, #4]
   12d64:	bl	12480 <strspn@plt+0x15c8>
   12d68:	lsrs	r2, r0, #30
   12d6c:	movne	r5, #1
   12d70:	moveq	r5, #0
   12d74:	tst	r0, #536870912	; 0x20000000
   12d78:	bne	12e00 <strspn@plt+0x1f48>
   12d7c:	cmp	r5, #0
   12d80:	bne	12e00 <strspn@plt+0x1f48>
   12d84:	cmp	r0, #0
   12d88:	str	r0, [r4, #8]
   12d8c:	beq	12e08 <strspn@plt+0x1f50>
   12d90:	mov	r1, #8
   12d94:	bl	15fa8 <strspn@plt+0x50f0>
   12d98:	cmp	r0, #0
   12d9c:	str	r0, [r4]
   12da0:	beq	12e08 <strspn@plt+0x1f50>
   12da4:	ldr	r3, [r4, #8]
   12da8:	str	r5, [r4, #12]
   12dac:	str	r5, [r4, #16]
   12db0:	add	r0, r0, r3, lsl #3
   12db4:	ldr	r3, [sp, #32]
   12db8:	str	r6, [r4, #24]
   12dbc:	str	r7, [r4, #28]
   12dc0:	str	r3, [r4, #32]
   12dc4:	str	r5, [r4, #36]	; 0x24
   12dc8:	str	r0, [r4, #4]
   12dcc:	mov	r0, r4
   12dd0:	add	sp, sp, #12
   12dd4:	pop	{r4, r5, r6, r7, pc}
   12dd8:	vldr	s12, [r5, #8]
   12ddc:	vldr	s15, [sp, #4]
   12de0:	vldr	s14, [pc, #88]	; 12e40 <strspn@plt+0x1f88>
   12de4:	vcvt.f32.u32	s13, s15
   12de8:	vdiv.f32	s15, s13, s12
   12dec:	vcmpe.f32	s15, s14
   12df0:	vmrs	APSR_nzcv, fpscr
   12df4:	vcvtlt.u32.f32	s15, s15
   12df8:	vstrlt	s15, [sp, #4]
   12dfc:	blt	12d60 <strspn@plt+0x1ea8>
   12e00:	mov	r3, #0
   12e04:	str	r3, [r4, #8]
   12e08:	mov	r0, r4
   12e0c:	bl	12424 <strspn@plt+0x156c>
   12e10:	mov	r4, #0
   12e14:	mov	r0, r4
   12e18:	add	sp, sp, #12
   12e1c:	pop	{r4, r5, r6, r7, pc}
   12e20:	ldr	r3, [pc, #40]	; 12e50 <strspn@plt+0x1f98>
   12e24:	mov	r0, r4
   12e28:	str	r3, [r0, #20]!
   12e2c:	bl	12678 <strspn@plt+0x17c0>
   12e30:	cmp	r0, #0
   12e34:	vldrne	s12, [pc, #8]	; 12e44 <strspn@plt+0x1f8c>
   12e38:	bne	12ddc <strspn@plt+0x1f24>
   12e3c:	b	12e08 <strspn@plt+0x1f50>
   12e40:	svcmi	0x00800000
   12e44:	svccc	0x004ccccd
   12e48:	andeq	r2, r1, r4, lsr #10
   12e4c:	andeq	r2, r1, r8, lsr r5
   12e50:	strdeq	r7, [r1], -r4
   12e54:	push	{r4, r5, r6, r7, r8, lr}
   12e58:	mov	r5, r0
   12e5c:	ldr	r7, [r0]
   12e60:	ldr	r3, [r0, #4]
   12e64:	cmp	r7, r3
   12e68:	addcc	r7, r7, #8
   12e6c:	movcc	r6, #0
   12e70:	bcs	12eec <strspn@plt+0x2034>
   12e74:	ldr	r2, [r7, #-8]
   12e78:	mov	r8, r7
   12e7c:	cmp	r2, #0
   12e80:	beq	12ee0 <strspn@plt+0x2028>
   12e84:	ldr	r4, [r7, #-4]
   12e88:	ldr	r2, [r5, #32]
   12e8c:	cmp	r4, #0
   12e90:	beq	12ec4 <strspn@plt+0x200c>
   12e94:	cmp	r2, #0
   12e98:	beq	12ea8 <strspn@plt+0x1ff0>
   12e9c:	ldr	r0, [r4]
   12ea0:	blx	r2
   12ea4:	ldr	r2, [r5, #32]
   12ea8:	ldr	r3, [r4, #4]
   12eac:	ldr	r1, [r5, #36]	; 0x24
   12eb0:	str	r6, [r4]
   12eb4:	str	r1, [r4, #4]
   12eb8:	str	r4, [r5, #36]	; 0x24
   12ebc:	subs	r4, r3, #0
   12ec0:	bne	12e94 <strspn@plt+0x1fdc>
   12ec4:	cmp	r2, #0
   12ec8:	beq	12ed4 <strspn@plt+0x201c>
   12ecc:	ldr	r0, [r7, #-8]
   12ed0:	blx	r2
   12ed4:	str	r6, [r7, #-8]
   12ed8:	str	r6, [r7, #-4]
   12edc:	ldr	r3, [r5, #4]
   12ee0:	cmp	r3, r8
   12ee4:	add	r7, r7, #8
   12ee8:	bhi	12e74 <strspn@plt+0x1fbc>
   12eec:	mov	r3, #0
   12ef0:	str	r3, [r5, #12]
   12ef4:	str	r3, [r5, #16]
   12ef8:	pop	{r4, r5, r6, r7, r8, pc}
   12efc:	ldr	r3, [r0, #32]
   12f00:	push	{r4, r5, r6, lr}
   12f04:	cmp	r3, #0
   12f08:	mov	r5, r0
   12f0c:	beq	12f6c <strspn@plt+0x20b4>
   12f10:	ldr	r3, [r0, #16]
   12f14:	cmp	r3, #0
   12f18:	beq	12f6c <strspn@plt+0x20b4>
   12f1c:	ldr	r6, [r0]
   12f20:	ldr	r3, [r0, #4]
   12f24:	cmp	r6, r3
   12f28:	bcs	12fa8 <strspn@plt+0x20f0>
   12f2c:	ldr	r0, [r6]
   12f30:	cmp	r0, #0
   12f34:	movne	r4, r6
   12f38:	bne	12f44 <strspn@plt+0x208c>
   12f3c:	b	12f5c <strspn@plt+0x20a4>
   12f40:	ldr	r0, [r4]
   12f44:	ldr	r3, [r5, #32]
   12f48:	blx	r3
   12f4c:	ldr	r4, [r4, #4]
   12f50:	cmp	r4, #0
   12f54:	bne	12f40 <strspn@plt+0x2088>
   12f58:	ldr	r3, [r5, #4]
   12f5c:	add	r6, r6, #8
   12f60:	cmp	r3, r6
   12f64:	bhi	12f2c <strspn@plt+0x2074>
   12f68:	b	12f70 <strspn@plt+0x20b8>
   12f6c:	ldr	r3, [r5, #4]
   12f70:	ldr	r6, [r5]
   12f74:	cmp	r3, r6
   12f78:	bls	12fa8 <strspn@plt+0x20f0>
   12f7c:	ldr	r0, [r6, #4]
   12f80:	cmp	r0, #0
   12f84:	beq	12f9c <strspn@plt+0x20e4>
   12f88:	ldr	r4, [r0, #4]
   12f8c:	bl	12424 <strspn@plt+0x156c>
   12f90:	subs	r0, r4, #0
   12f94:	bne	12f88 <strspn@plt+0x20d0>
   12f98:	ldr	r3, [r5, #4]
   12f9c:	add	r6, r6, #8
   12fa0:	cmp	r3, r6
   12fa4:	bhi	12f7c <strspn@plt+0x20c4>
   12fa8:	ldr	r0, [r5, #36]	; 0x24
   12fac:	cmp	r0, #0
   12fb0:	beq	12fc4 <strspn@plt+0x210c>
   12fb4:	ldr	r4, [r0, #4]
   12fb8:	bl	12424 <strspn@plt+0x156c>
   12fbc:	subs	r0, r4, #0
   12fc0:	bne	12fb4 <strspn@plt+0x20fc>
   12fc4:	ldr	r0, [r5]
   12fc8:	bl	12424 <strspn@plt+0x156c>
   12fcc:	mov	r0, r5
   12fd0:	pop	{r4, r5, r6, lr}
   12fd4:	b	12424 <strspn@plt+0x156c>
   12fd8:	ldr	r3, [r0, #20]
   12fdc:	push	{r4, r5, r6, r7, lr}
   12fe0:	sub	sp, sp, #52	; 0x34
   12fe4:	ldrb	r2, [r3, #16]
   12fe8:	mov	r5, r0
   12fec:	str	r1, [sp, #4]
   12ff0:	cmp	r2, #0
   12ff4:	bne	13020 <strspn@plt+0x2168>
   12ff8:	vmov	s15, r1
   12ffc:	vldr	s13, [r3, #8]
   13000:	vldr	s14, [pc, #352]	; 13168 <strspn@plt+0x22b0>
   13004:	vcvt.f32.u32	s12, s15
   13008:	vdiv.f32	s15, s12, s13
   1300c:	vcmpe.f32	s15, s14
   13010:	vmrs	APSR_nzcv, fpscr
   13014:	bge	13124 <strspn@plt+0x226c>
   13018:	vcvt.u32.f32	s15, s15
   1301c:	vstr	s15, [sp, #4]
   13020:	ldr	r0, [sp, #4]
   13024:	bl	12480 <strspn@plt+0x15c8>
   13028:	lsrs	r3, r0, #30
   1302c:	movne	r2, #1
   13030:	moveq	r2, #0
   13034:	tst	r0, #536870912	; 0x20000000
   13038:	movne	r2, #1
   1303c:	cmp	r0, #0
   13040:	movne	r4, r2
   13044:	orreq	r4, r2, #1
   13048:	cmp	r4, #0
   1304c:	mov	r6, r0
   13050:	bne	13124 <strspn@plt+0x226c>
   13054:	ldr	r3, [r5, #8]
   13058:	cmp	r3, r0
   1305c:	beq	13114 <strspn@plt+0x225c>
   13060:	mov	r1, #8
   13064:	bl	15fa8 <strspn@plt+0x50f0>
   13068:	cmp	r0, #0
   1306c:	str	r0, [sp, #8]
   13070:	beq	13124 <strspn@plt+0x226c>
   13074:	ldr	r1, [r5, #24]
   13078:	ldr	r7, [r5, #20]
   1307c:	ldr	lr, [r5, #28]
   13080:	ldr	ip, [r5, #32]
   13084:	add	r0, r0, r6, lsl #3
   13088:	ldr	r3, [r5, #36]	; 0x24
   1308c:	str	r0, [sp, #12]
   13090:	mov	r2, r4
   13094:	str	r1, [sp, #32]
   13098:	add	r0, sp, #8
   1309c:	mov	r1, r5
   130a0:	str	r4, [sp, #20]
   130a4:	str	r4, [sp, #24]
   130a8:	str	r6, [sp, #16]
   130ac:	str	r7, [sp, #28]
   130b0:	str	lr, [sp, #36]	; 0x24
   130b4:	str	ip, [sp, #40]	; 0x28
   130b8:	str	r3, [sp, #44]	; 0x2c
   130bc:	bl	12728 <strspn@plt+0x1870>
   130c0:	subs	r4, r0, #0
   130c4:	bne	13134 <strspn@plt+0x227c>
   130c8:	ldr	r3, [sp, #44]	; 0x2c
   130cc:	mov	r2, #1
   130d0:	str	r3, [r5, #36]	; 0x24
   130d4:	add	r1, sp, #8
   130d8:	mov	r0, r5
   130dc:	bl	12728 <strspn@plt+0x1870>
   130e0:	cmp	r0, #0
   130e4:	beq	13164 <strspn@plt+0x22ac>
   130e8:	add	r1, sp, #8
   130ec:	mov	r0, r5
   130f0:	mov	r2, r4
   130f4:	bl	12728 <strspn@plt+0x1870>
   130f8:	cmp	r0, #0
   130fc:	beq	13164 <strspn@plt+0x22ac>
   13100:	ldr	r0, [sp, #8]
   13104:	bl	12424 <strspn@plt+0x156c>
   13108:	mov	r0, r4
   1310c:	add	sp, sp, #52	; 0x34
   13110:	pop	{r4, r5, r6, r7, pc}
   13114:	mov	r4, #1
   13118:	mov	r0, r4
   1311c:	add	sp, sp, #52	; 0x34
   13120:	pop	{r4, r5, r6, r7, pc}
   13124:	mov	r4, #0
   13128:	mov	r0, r4
   1312c:	add	sp, sp, #52	; 0x34
   13130:	pop	{r4, r5, r6, r7, pc}
   13134:	ldr	r0, [r5]
   13138:	bl	12424 <strspn@plt+0x156c>
   1313c:	add	r0, sp, #12
   13140:	ldr	ip, [sp, #8]
   13144:	ldm	r0, {r0, r1, r2}
   13148:	ldr	r3, [sp, #44]	; 0x2c
   1314c:	str	ip, [r5]
   13150:	stmib	r5, {r0, r1, r2}
   13154:	mov	r0, r4
   13158:	str	r3, [r5, #36]	; 0x24
   1315c:	add	sp, sp, #52	; 0x34
   13160:	pop	{r4, r5, r6, r7, pc}
   13164:	bl	10eac <abort@plt>
   13168:	svcmi	0x00800000
   1316c:	push	{r4, r5, r6, lr}
   13170:	subs	r6, r1, #0
   13174:	sub	sp, sp, #8
   13178:	beq	132ac <strspn@plt+0x23f4>
   1317c:	mov	r4, r2
   13180:	mov	r3, #0
   13184:	add	r2, sp, #4
   13188:	mov	r5, r0
   1318c:	bl	1257c <strspn@plt+0x16c4>
   13190:	cmp	r0, #0
   13194:	beq	131b0 <strspn@plt+0x22f8>
   13198:	cmp	r4, #0
   1319c:	moveq	r0, r4
   131a0:	strne	r0, [r4]
   131a4:	movne	r0, #0
   131a8:	add	sp, sp, #8
   131ac:	pop	{r4, r5, r6, pc}
   131b0:	vldr	s15, [r5, #8]
   131b4:	ldr	r3, [r5, #20]
   131b8:	vldr	s14, [r5, #12]
   131bc:	vcvt.f32.u32	s15, s15
   131c0:	vldr	s13, [r3, #8]
   131c4:	vcvt.f32.u32	s14, s14
   131c8:	vmul.f32	s15, s15, s13
   131cc:	vcmpe.f32	s14, s15
   131d0:	vmrs	APSR_nzcv, fpscr
   131d4:	bgt	13224 <strspn@plt+0x236c>
   131d8:	ldr	r2, [sp, #4]
   131dc:	ldr	r3, [r2]
   131e0:	cmp	r3, #0
   131e4:	beq	132b0 <strspn@plt+0x23f8>
   131e8:	ldr	r3, [r5, #36]	; 0x24
   131ec:	cmp	r3, #0
   131f0:	beq	132d4 <strspn@plt+0x241c>
   131f4:	ldr	r1, [r3, #4]
   131f8:	str	r1, [r5, #36]	; 0x24
   131fc:	ldr	r1, [r5, #16]
   13200:	ldr	r0, [r2, #4]
   13204:	add	r1, r1, #1
   13208:	str	r0, [r3, #4]
   1320c:	str	r6, [r3]
   13210:	mov	r0, #1
   13214:	str	r3, [r2, #4]
   13218:	str	r1, [r5, #16]
   1321c:	add	sp, sp, #8
   13220:	pop	{r4, r5, r6, pc}
   13224:	add	r0, r5, #20
   13228:	bl	12678 <strspn@plt+0x17c0>
   1322c:	vldr	s15, [r5, #8]
   13230:	ldr	r3, [r5, #20]
   13234:	vldr	s14, [r5, #12]
   13238:	vcvt.f32.u32	s15, s15
   1323c:	vldr	s13, [r3, #8]
   13240:	vcvt.f32.u32	s14, s14
   13244:	vmul.f32	s12, s13, s15
   13248:	vcmpe.f32	s14, s12
   1324c:	vmrs	APSR_nzcv, fpscr
   13250:	ble	131d8 <strspn@plt+0x2320>
   13254:	vldr	s14, [r3, #12]
   13258:	ldrb	r2, [r3, #16]
   1325c:	vmul.f32	s15, s15, s14
   13260:	cmp	r2, #0
   13264:	vldr	s14, [pc, #132]	; 132f0 <strspn@plt+0x2438>
   13268:	vmuleq.f32	s15, s15, s13
   1326c:	vcmpe.f32	s15, s14
   13270:	vmrs	APSR_nzcv, fpscr
   13274:	bge	132e8 <strspn@plt+0x2430>
   13278:	vcvt.u32.f32	s15, s15
   1327c:	mov	r0, r5
   13280:	vmov	r1, s15
   13284:	bl	12fd8 <strspn@plt+0x2120>
   13288:	cmp	r0, #0
   1328c:	beq	132e8 <strspn@plt+0x2430>
   13290:	add	r2, sp, #4
   13294:	mov	r3, #0
   13298:	mov	r1, r6
   1329c:	mov	r0, r5
   132a0:	bl	1257c <strspn@plt+0x16c4>
   132a4:	cmp	r0, #0
   132a8:	beq	131d8 <strspn@plt+0x2320>
   132ac:	bl	10eac <abort@plt>
   132b0:	ldr	r1, [r5, #16]
   132b4:	ldr	r3, [r5, #12]
   132b8:	add	r1, r1, #1
   132bc:	add	r3, r3, #1
   132c0:	str	r6, [r2]
   132c4:	mov	r0, #1
   132c8:	str	r1, [r5, #16]
   132cc:	str	r3, [r5, #12]
   132d0:	b	131a8 <strspn@plt+0x22f0>
   132d4:	mov	r0, #8
   132d8:	bl	15ff0 <strspn@plt+0x5138>
   132dc:	subs	r3, r0, #0
   132e0:	ldrne	r2, [sp, #4]
   132e4:	bne	131fc <strspn@plt+0x2344>
   132e8:	mvn	r0, #0
   132ec:	b	131a8 <strspn@plt+0x22f0>
   132f0:	svcmi	0x00800000
   132f4:	push	{r4, lr}
   132f8:	sub	sp, sp, #8
   132fc:	add	r2, sp, #4
   13300:	mov	r4, r1
   13304:	bl	1316c <strspn@plt+0x22b4>
   13308:	cmn	r0, #1
   1330c:	beq	13324 <strspn@plt+0x246c>
   13310:	cmp	r0, #0
   13314:	movne	r0, r4
   13318:	ldreq	r0, [sp, #4]
   1331c:	add	sp, sp, #8
   13320:	pop	{r4, pc}
   13324:	mov	r0, #0
   13328:	b	1331c <strspn@plt+0x2464>
   1332c:	push	{r4, r5, r6, lr}
   13330:	sub	sp, sp, #8
   13334:	mov	r3, #1
   13338:	add	r2, sp, #4
   1333c:	mov	r4, r0
   13340:	bl	1257c <strspn@plt+0x16c4>
   13344:	subs	r5, r0, #0
   13348:	beq	13368 <strspn@plt+0x24b0>
   1334c:	ldr	r2, [sp, #4]
   13350:	ldr	r3, [r4, #16]
   13354:	ldr	r2, [r2]
   13358:	sub	r3, r3, #1
   1335c:	cmp	r2, #0
   13360:	str	r3, [r4, #16]
   13364:	beq	13374 <strspn@plt+0x24bc>
   13368:	mov	r0, r5
   1336c:	add	sp, sp, #8
   13370:	pop	{r4, r5, r6, pc}
   13374:	vldr	s15, [r4, #8]
   13378:	ldr	r3, [r4, #12]
   1337c:	ldr	r2, [r4, #20]
   13380:	sub	r3, r3, #1
   13384:	vcvt.f32.u32	s14, s15
   13388:	vldr	s13, [r2]
   1338c:	vmov	s15, r3
   13390:	str	r3, [r4, #12]
   13394:	vcvt.f32.u32	s15, s15
   13398:	vmul.f32	s14, s14, s13
   1339c:	vcmpe.f32	s15, s14
   133a0:	vmrs	APSR_nzcv, fpscr
   133a4:	bpl	13368 <strspn@plt+0x24b0>
   133a8:	add	r0, r4, #20
   133ac:	bl	12678 <strspn@plt+0x17c0>
   133b0:	vldr	s15, [r4, #8]
   133b4:	ldr	r3, [r4, #20]
   133b8:	vldr	s13, [r4, #12]
   133bc:	vcvt.f32.u32	s15, s15
   133c0:	vldr	s14, [r3]
   133c4:	vcvt.f32.u32	s13, s13
   133c8:	vmul.f32	s14, s15, s14
   133cc:	vcmpe.f32	s13, s14
   133d0:	vmrs	APSR_nzcv, fpscr
   133d4:	bpl	13368 <strspn@plt+0x24b0>
   133d8:	ldrb	r2, [r3, #16]
   133dc:	mov	r0, r4
   133e0:	cmp	r2, #0
   133e4:	vldreq	s13, [r3, #4]
   133e8:	vldrne	s14, [r3, #4]
   133ec:	vldreq	s14, [r3, #8]
   133f0:	vmuleq.f32	s15, s15, s13
   133f4:	vmul.f32	s15, s15, s14
   133f8:	vcvt.u32.f32	s15, s15
   133fc:	vmov	r1, s15
   13400:	bl	12fd8 <strspn@plt+0x2120>
   13404:	cmp	r0, #0
   13408:	bne	13368 <strspn@plt+0x24b0>
   1340c:	ldr	r0, [r4, #36]	; 0x24
   13410:	cmp	r0, #0
   13414:	beq	13428 <strspn@plt+0x2570>
   13418:	ldr	r6, [r0, #4]
   1341c:	bl	12424 <strspn@plt+0x156c>
   13420:	subs	r0, r6, #0
   13424:	bne	13418 <strspn@plt+0x2560>
   13428:	mov	r3, #0
   1342c:	str	r3, [r4, #36]	; 0x24
   13430:	b	13368 <strspn@plt+0x24b0>
   13434:	b	1332c <strspn@plt+0x2474>
   13438:	push	{r4, r5, r6, lr}
   1343c:	mov	r4, r0
   13440:	ldr	r0, [r0]
   13444:	mov	r6, r1
   13448:	bl	16294 <strspn@plt+0x53dc>
   1344c:	ldrd	r4, [r4, #8]
   13450:	mov	r2, r6
   13454:	mov	r3, #0
   13458:	eor	r4, r4, r0
   1345c:	mov	r0, r4
   13460:	mov	r1, r5
   13464:	bl	168e4 <strspn@plt+0x5a2c>
   13468:	mov	r0, r2
   1346c:	pop	{r4, r5, r6, pc}
   13470:	ldrd	r2, [r1, #8]
   13474:	push	{r4, r5, r6, lr}
   13478:	ldrd	r4, [r0, #8]
   1347c:	cmp	r5, r3
   13480:	cmpeq	r4, r2
   13484:	beq	13490 <strspn@plt+0x25d8>
   13488:	mov	r0, #0
   1348c:	pop	{r4, r5, r6, pc}
   13490:	ldrd	r4, [r0, #16]
   13494:	ldrd	r2, [r1, #16]
   13498:	cmp	r5, r3
   1349c:	cmpeq	r4, r2
   134a0:	bne	13488 <strspn@plt+0x25d0>
   134a4:	ldr	r1, [r1]
   134a8:	ldr	r0, [r0]
   134ac:	bl	10c78 <strcmp@plt>
   134b0:	clz	r0, r0
   134b4:	lsr	r0, r0, #5
   134b8:	pop	{r4, r5, r6, pc}
   134bc:	push	{r4, lr}
   134c0:	mov	r4, r0
   134c4:	ldr	r0, [r0]
   134c8:	bl	12424 <strspn@plt+0x156c>
   134cc:	mov	r0, r4
   134d0:	pop	{r4, lr}
   134d4:	b	12424 <strspn@plt+0x156c>
   134d8:	push	{r4, r5, r6, lr}
   134dc:	subs	r4, r0, #0
   134e0:	beq	13554 <strspn@plt+0x269c>
   134e4:	mov	r1, #47	; 0x2f
   134e8:	bl	10e70 <strrchr@plt>
   134ec:	subs	r5, r0, #0
   134f0:	beq	13540 <strspn@plt+0x2688>
   134f4:	add	r6, r5, #1
   134f8:	sub	r3, r6, r4
   134fc:	cmp	r3, #6
   13500:	ble	13540 <strspn@plt+0x2688>
   13504:	mov	r2, #7
   13508:	ldr	r1, [pc, #96]	; 13570 <strspn@plt+0x26b8>
   1350c:	sub	r0, r5, #6
   13510:	bl	10ea0 <strncmp@plt>
   13514:	cmp	r0, #0
   13518:	bne	13540 <strspn@plt+0x2688>
   1351c:	mov	r2, #3
   13520:	ldr	r1, [pc, #76]	; 13574 <strspn@plt+0x26bc>
   13524:	mov	r0, r6
   13528:	bl	10ea0 <strncmp@plt>
   1352c:	cmp	r0, #0
   13530:	movne	r4, r6
   13534:	ldreq	r3, [pc, #60]	; 13578 <strspn@plt+0x26c0>
   13538:	addeq	r4, r5, #4
   1353c:	streq	r4, [r3]
   13540:	ldr	r2, [pc, #52]	; 1357c <strspn@plt+0x26c4>
   13544:	ldr	r3, [pc, #52]	; 13580 <strspn@plt+0x26c8>
   13548:	str	r4, [r2]
   1354c:	str	r4, [r3]
   13550:	pop	{r4, r5, r6, pc}
   13554:	ldr	r3, [pc, #40]	; 13584 <strspn@plt+0x26cc>
   13558:	mov	r2, #55	; 0x37
   1355c:	mov	r1, #1
   13560:	ldr	r3, [r3]
   13564:	ldr	r0, [pc, #28]	; 13588 <strspn@plt+0x26d0>
   13568:	bl	10d38 <fwrite@plt>
   1356c:	bl	10eac <abort@plt>
   13570:	andeq	r7, r1, ip, lsr #5
   13574:			; <UNDEFINED> instruction: 0x000172b4
   13578:	andeq	r8, r2, r8, lsr r1
   1357c:	andeq	r8, r2, ip, ror #2
   13580:	andeq	r8, r2, ip, lsr r1
   13584:	andeq	r8, r2, r8, asr #2
   13588:	andeq	r7, r1, r4, ror r2
   1358c:	push	{r4, r5, r6, lr}
   13590:	mov	r2, #48	; 0x30
   13594:	mov	r4, r1
   13598:	mov	r1, #0
   1359c:	mov	r5, r0
   135a0:	bl	10e10 <memset@plt>
   135a4:	cmp	r4, #10
   135a8:	beq	135b8 <strspn@plt+0x2700>
   135ac:	str	r4, [r5]
   135b0:	mov	r0, r5
   135b4:	pop	{r4, r5, r6, pc}
   135b8:	bl	10eac <abort@plt>
   135bc:	push	{r4, r5, r6, lr}
   135c0:	mov	r4, r0
   135c4:	mov	r5, r1
   135c8:	bl	162d0 <strspn@plt+0x5418>
   135cc:	ldrb	r3, [r0]
   135d0:	bic	r3, r3, #32
   135d4:	cmp	r3, #85	; 0x55
   135d8:	bne	13638 <strspn@plt+0x2780>
   135dc:	ldrb	r3, [r0, #1]
   135e0:	bic	r3, r3, #32
   135e4:	cmp	r3, #84	; 0x54
   135e8:	bne	13674 <strspn@plt+0x27bc>
   135ec:	ldrb	r3, [r0, #2]
   135f0:	bic	r3, r3, #32
   135f4:	cmp	r3, #70	; 0x46
   135f8:	bne	13674 <strspn@plt+0x27bc>
   135fc:	ldrb	r3, [r0, #3]
   13600:	cmp	r3, #45	; 0x2d
   13604:	bne	13674 <strspn@plt+0x27bc>
   13608:	ldrb	r3, [r0, #4]
   1360c:	cmp	r3, #56	; 0x38
   13610:	bne	13674 <strspn@plt+0x27bc>
   13614:	ldrb	r3, [r0, #5]
   13618:	cmp	r3, #0
   1361c:	bne	13674 <strspn@plt+0x27bc>
   13620:	ldrb	r2, [r4]
   13624:	ldr	r3, [pc, #152]	; 136c4 <strspn@plt+0x280c>
   13628:	ldr	r0, [pc, #152]	; 136c8 <strspn@plt+0x2810>
   1362c:	cmp	r2, #96	; 0x60
   13630:	movne	r0, r3
   13634:	pop	{r4, r5, r6, pc}
   13638:	cmp	r3, #71	; 0x47
   1363c:	bne	13674 <strspn@plt+0x27bc>
   13640:	ldrb	r3, [r0, #1]
   13644:	bic	r3, r3, #32
   13648:	cmp	r3, #66	; 0x42
   1364c:	bne	13674 <strspn@plt+0x27bc>
   13650:	ldrb	r3, [r0, #2]
   13654:	cmp	r3, #49	; 0x31
   13658:	bne	13674 <strspn@plt+0x27bc>
   1365c:	ldrb	r3, [r0, #3]
   13660:	cmp	r3, #56	; 0x38
   13664:	bne	13674 <strspn@plt+0x27bc>
   13668:	ldrb	r3, [r0, #4]
   1366c:	cmp	r3, #48	; 0x30
   13670:	beq	13688 <strspn@plt+0x27d0>
   13674:	ldr	r3, [pc, #80]	; 136cc <strspn@plt+0x2814>
   13678:	cmp	r5, #9
   1367c:	ldr	r0, [pc, #76]	; 136d0 <strspn@plt+0x2818>
   13680:	movne	r0, r3
   13684:	pop	{r4, r5, r6, pc}
   13688:	ldrb	r3, [r0, #5]
   1368c:	cmp	r3, #51	; 0x33
   13690:	bne	13674 <strspn@plt+0x27bc>
   13694:	ldrb	r3, [r0, #6]
   13698:	cmp	r3, #48	; 0x30
   1369c:	bne	13674 <strspn@plt+0x27bc>
   136a0:	ldrb	r3, [r0, #7]
   136a4:	cmp	r3, #0
   136a8:	bne	13674 <strspn@plt+0x27bc>
   136ac:	ldrb	r2, [r4]
   136b0:	ldr	r3, [pc, #28]	; 136d4 <strspn@plt+0x281c>
   136b4:	ldr	r0, [pc, #28]	; 136d8 <strspn@plt+0x2820>
   136b8:	cmp	r2, #96	; 0x60
   136bc:	movne	r0, r3
   136c0:	pop	{r4, r5, r6, pc}
   136c4:	andeq	r7, r1, r0, lsl r3
   136c8:	andeq	r7, r1, ip, lsl #6
   136cc:	andeq	r7, r1, r0, lsr #6
   136d0:	andeq	r7, r1, ip, lsl r3
   136d4:	andeq	r7, r1, r8, lsl r3
   136d8:	andeq	r7, r1, r4, lsl r3
   136dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136e0:	sub	sp, sp, #116	; 0x74
   136e4:	mov	sl, r0
   136e8:	str	r3, [sp, #24]
   136ec:	mov	r3, #1
   136f0:	mov	r8, r1
   136f4:	str	r2, [sp, #56]	; 0x38
   136f8:	str	r3, [sp, #36]	; 0x24
   136fc:	bl	10d50 <__ctype_get_mb_cur_max@plt>
   13700:	ldr	r3, [sp, #156]	; 0x9c
   13704:	mov	fp, r8
   13708:	mov	r2, #0
   1370c:	lsr	r3, r3, #1
   13710:	and	r3, r3, #1
   13714:	str	r2, [sp, #68]	; 0x44
   13718:	str	r3, [sp, #28]
   1371c:	str	r2, [sp, #40]	; 0x28
   13720:	str	r2, [sp, #44]	; 0x2c
   13724:	str	r2, [sp, #52]	; 0x34
   13728:	str	r2, [sp, #64]	; 0x40
   1372c:	str	r2, [sp, #72]	; 0x48
   13730:	str	sl, [sp, #32]
   13734:	str	r0, [sp, #76]	; 0x4c
   13738:	ldr	r3, [sp, #152]	; 0x98
   1373c:	cmp	r3, #10
   13740:	ldrls	pc, [pc, r3, lsl #2]
   13744:	b	14904 <strspn@plt+0x3a4c>
   13748:	andeq	r3, r1, r4, ror r7
   1374c:	andeq	r3, r1, ip, asr sl
   13750:	andeq	r3, r1, r0, lsl #21
   13754:	andeq	r3, r1, r4, lsr #21
   13758:	ldrdeq	r3, [r1], -r0
   1375c:	andeq	r3, r1, r4, lsr #23
   13760:	andeq	r3, r1, ip, ror fp
   13764:			; <UNDEFINED> instruction: 0x00013ab8
   13768:	ldrdeq	r3, [r1], -r0
   1376c:	ldrdeq	r3, [r1], -r0
   13770:	ldrdeq	r3, [r1], -r0
   13774:	mov	r3, #0
   13778:	mov	r7, r3
   1377c:	str	r3, [sp, #28]
   13780:	ldr	r3, [sp, #44]	; 0x2c
   13784:	mov	sl, #0
   13788:	eor	r3, r3, #1
   1378c:	str	r3, [sp, #60]	; 0x3c
   13790:	ldr	r3, [sp, #24]
   13794:	cmn	r3, #1
   13798:	beq	13cfc <strspn@plt+0x2e44>
   1379c:	ldr	r3, [sp, #24]
   137a0:	subs	r5, r3, sl
   137a4:	movne	r5, #1
   137a8:	cmp	r5, #0
   137ac:	beq	13d14 <strspn@plt+0x2e5c>
   137b0:	ldr	r3, [sp, #152]	; 0x98
   137b4:	ldr	r8, [sp, #44]	; 0x2c
   137b8:	cmp	r3, #2
   137bc:	moveq	r8, #0
   137c0:	andne	r8, r8, #1
   137c4:	ldr	r3, [sp, #52]	; 0x34
   137c8:	adds	r9, r3, #0
   137cc:	movne	r9, #1
   137d0:	ands	r6, r9, r8
   137d4:	beq	1417c <strspn@plt+0x32c4>
   137d8:	ldr	r2, [sp, #52]	; 0x34
   137dc:	ldr	r1, [sp, #24]
   137e0:	cmp	r2, #1
   137e4:	mov	r3, r2
   137e8:	movls	r3, #0
   137ec:	movhi	r3, #1
   137f0:	cmn	r1, #1
   137f4:	movne	r3, #0
   137f8:	cmp	r3, #0
   137fc:	add	r4, sl, r2
   13800:	beq	13810 <strspn@plt+0x2958>
   13804:	ldr	r0, [sp, #56]	; 0x38
   13808:	bl	10dec <strlen@plt>
   1380c:	str	r0, [sp, #24]
   13810:	ldr	r3, [sp, #24]
   13814:	cmp	r3, r4
   13818:	ldr	r3, [sp, #56]	; 0x38
   1381c:	add	r3, r3, sl
   13820:	str	r3, [sp, #48]	; 0x30
   13824:	bcc	14188 <strspn@plt+0x32d0>
   13828:	mov	r0, r3
   1382c:	ldr	r2, [sp, #52]	; 0x34
   13830:	ldr	r1, [sp, #64]	; 0x40
   13834:	bl	10cd8 <memcmp@plt>
   13838:	cmp	r0, #0
   1383c:	bne	14188 <strspn@plt+0x32d0>
   13840:	ldr	r3, [sp, #28]
   13844:	cmp	r3, #0
   13848:	bne	14a04 <strspn@plt+0x3b4c>
   1384c:	ldr	r3, [sp, #48]	; 0x30
   13850:	ldrb	r4, [r3]
   13854:	cmp	r4, #126	; 0x7e
   13858:	ldrls	pc, [pc, r4, lsl #2]
   1385c:	b	1411c <strspn@plt+0x3264>
   13860:	andeq	r3, r1, r0, asr #30
   13864:	andeq	r4, r1, ip, lsl r1
   13868:	andeq	r4, r1, ip, lsl r1
   1386c:	andeq	r4, r1, ip, lsl r1
   13870:	andeq	r4, r1, ip, lsl r1
   13874:	andeq	r4, r1, ip, lsl r1
   13878:	andeq	r4, r1, ip, lsl r1
   1387c:	andeq	r3, r1, r4, lsr #30
   13880:	andeq	r3, r1, r8, lsl #30
   13884:	andeq	r4, r1, r4, lsl #2
   13888:	andeq	r3, r1, r8, ror #28
   1388c:	andeq	r3, r1, ip, asr #28
   13890:	andeq	r4, r1, r0, ror #1
   13894:	strheq	r4, [r1], -ip
   13898:	andeq	r4, r1, ip, lsl r1
   1389c:	andeq	r4, r1, ip, lsl r1
   138a0:	andeq	r4, r1, ip, lsl r1
   138a4:	andeq	r4, r1, ip, lsl r1
   138a8:	andeq	r4, r1, ip, lsl r1
   138ac:	andeq	r4, r1, ip, lsl r1
   138b0:	andeq	r4, r1, ip, lsl r1
   138b4:	andeq	r4, r1, ip, lsl r1
   138b8:	andeq	r4, r1, ip, lsl r1
   138bc:	andeq	r4, r1, ip, lsl r1
   138c0:	andeq	r4, r1, ip, lsl r1
   138c4:	andeq	r4, r1, ip, lsl r1
   138c8:	andeq	r4, r1, ip, lsl r1
   138cc:	andeq	r4, r1, ip, lsl r1
   138d0:	andeq	r4, r1, ip, lsl r1
   138d4:	andeq	r4, r1, ip, lsl r1
   138d8:	andeq	r4, r1, ip, lsl r1
   138dc:	andeq	r4, r1, ip, lsl r1
   138e0:	strdeq	r4, [r1], -ip
   138e4:	andeq	r4, r1, r0, lsr r0
   138e8:	andeq	r4, r1, r0, lsr r0
   138ec:	andeq	r3, r1, r0, asr #24
   138f0:	andeq	r4, r1, r0, lsr r0
   138f4:	andeq	r4, r1, r8, asr #1
   138f8:	andeq	r4, r1, r0, lsr r0
   138fc:	muleq	r1, ip, r0
   13900:	andeq	r4, r1, r0, lsr r0
   13904:	andeq	r4, r1, r0, lsr r0
   13908:	andeq	r4, r1, r0, lsr r0
   1390c:	andeq	r4, r1, r8, asr #1
   13910:	andeq	r4, r1, r8, asr #1
   13914:	andeq	r4, r1, r8, asr #1
   13918:	andeq	r4, r1, r8, asr #1
   1391c:	andeq	r4, r1, r8, asr #1
   13920:	andeq	r4, r1, r8, asr #1
   13924:	andeq	r4, r1, r8, asr #1
   13928:	andeq	r4, r1, r8, asr #1
   1392c:	andeq	r4, r1, r8, asr #1
   13930:	andeq	r4, r1, r8, asr #1
   13934:	andeq	r4, r1, r8, asr #1
   13938:	andeq	r4, r1, r8, asr #1
   1393c:	andeq	r4, r1, r8, asr #1
   13940:	andeq	r4, r1, r8, asr #1
   13944:	andeq	r4, r1, r8, asr #1
   13948:	andeq	r4, r1, r8, asr #1
   1394c:	andeq	r4, r1, r0, lsr r0
   13950:	andeq	r4, r1, r0, lsr r0
   13954:	andeq	r4, r1, r0, lsr r0
   13958:	andeq	r4, r1, r0, lsr r0
   1395c:	andeq	r4, r1, ip, rrx
   13960:	andeq	r4, r1, ip, lsl r1
   13964:	andeq	r4, r1, r8, asr #1
   13968:	andeq	r4, r1, r8, asr #1
   1396c:	andeq	r4, r1, r8, asr #1
   13970:	andeq	r4, r1, r8, asr #1
   13974:	andeq	r4, r1, r8, asr #1
   13978:	andeq	r4, r1, r8, asr #1
   1397c:	andeq	r4, r1, r8, asr #1
   13980:	andeq	r4, r1, r8, asr #1
   13984:	andeq	r4, r1, r8, asr #1
   13988:	andeq	r4, r1, r8, asr #1
   1398c:	andeq	r4, r1, r8, asr #1
   13990:	andeq	r4, r1, r8, asr #1
   13994:	andeq	r4, r1, r8, asr #1
   13998:	andeq	r4, r1, r8, asr #1
   1399c:	andeq	r4, r1, r8, asr #1
   139a0:	andeq	r4, r1, r8, asr #1
   139a4:	andeq	r4, r1, r8, asr #1
   139a8:	andeq	r4, r1, r8, asr #1
   139ac:	andeq	r4, r1, r8, asr #1
   139b0:	andeq	r4, r1, r8, asr #1
   139b4:	andeq	r4, r1, r8, asr #1
   139b8:	andeq	r4, r1, r8, asr #1
   139bc:	andeq	r4, r1, r8, asr #1
   139c0:	andeq	r4, r1, r8, asr #1
   139c4:	andeq	r4, r1, r8, asr #1
   139c8:	andeq	r4, r1, r8, asr #1
   139cc:	andeq	r4, r1, r0, lsr r0
   139d0:	andeq	r3, r1, ip, lsl #27
   139d4:	andeq	r4, r1, r8, asr #1
   139d8:	andeq	r4, r1, r0, lsr r0
   139dc:	andeq	r4, r1, r8, asr #1
   139e0:	andeq	r4, r1, r0, lsr r0
   139e4:	andeq	r4, r1, r8, asr #1
   139e8:	andeq	r4, r1, r8, asr #1
   139ec:	andeq	r4, r1, r8, asr #1
   139f0:	andeq	r4, r1, r8, asr #1
   139f4:	andeq	r4, r1, r8, asr #1
   139f8:	andeq	r4, r1, r8, asr #1
   139fc:	andeq	r4, r1, r8, asr #1
   13a00:	andeq	r4, r1, r8, asr #1
   13a04:	andeq	r4, r1, r8, asr #1
   13a08:	andeq	r4, r1, r8, asr #1
   13a0c:	andeq	r4, r1, r8, asr #1
   13a10:	andeq	r4, r1, r8, asr #1
   13a14:	andeq	r4, r1, r8, asr #1
   13a18:	andeq	r4, r1, r8, asr #1
   13a1c:	andeq	r4, r1, r8, asr #1
   13a20:	andeq	r4, r1, r8, asr #1
   13a24:	andeq	r4, r1, r8, asr #1
   13a28:	andeq	r4, r1, r8, asr #1
   13a2c:	andeq	r4, r1, r8, asr #1
   13a30:	andeq	r4, r1, r8, asr #1
   13a34:	andeq	r4, r1, r8, asr #1
   13a38:	andeq	r4, r1, r8, asr #1
   13a3c:	andeq	r4, r1, r8, asr #1
   13a40:	andeq	r4, r1, r8, asr #1
   13a44:	andeq	r4, r1, r8, asr #1
   13a48:	andeq	r4, r1, r8, asr #1
   13a4c:	andeq	r3, r1, r0, lsr #24
   13a50:	andeq	r4, r1, r0, lsr r0
   13a54:	andeq	r3, r1, r0, lsr #24
   13a58:	andeq	r3, r1, r0, asr #24
   13a5c:	mov	r3, #1
   13a60:	str	r3, [sp, #28]
   13a64:	str	r3, [sp, #52]	; 0x34
   13a68:	ldr	r3, [pc, #4000]	; 14a10 <strspn@plt+0x3b58>
   13a6c:	mov	r7, #0
   13a70:	str	r3, [sp, #64]	; 0x40
   13a74:	mov	r3, #2
   13a78:	str	r3, [sp, #152]	; 0x98
   13a7c:	b	13780 <strspn@plt+0x28c8>
   13a80:	ldr	r3, [sp, #28]
   13a84:	cmp	r3, #0
   13a88:	beq	13be4 <strspn@plt+0x2d2c>
   13a8c:	mov	r3, #1
   13a90:	str	r3, [sp, #52]	; 0x34
   13a94:	ldr	r3, [pc, #3956]	; 14a10 <strspn@plt+0x3b58>
   13a98:	mov	r7, #0
   13a9c:	str	r3, [sp, #64]	; 0x40
   13aa0:	b	13780 <strspn@plt+0x28c8>
   13aa4:	mov	r3, #1
   13aa8:	str	r3, [sp, #44]	; 0x2c
   13aac:	str	r3, [sp, #52]	; 0x34
   13ab0:	str	r3, [sp, #28]
   13ab4:	b	13a68 <strspn@plt+0x2bb0>
   13ab8:	mov	r3, #0
   13abc:	str	r3, [sp, #28]
   13ac0:	mov	r3, #1
   13ac4:	str	r3, [sp, #44]	; 0x2c
   13ac8:	mov	r7, #0
   13acc:	b	13780 <strspn@plt+0x28c8>
   13ad0:	ldr	r3, [sp, #152]	; 0x98
   13ad4:	cmp	r3, #10
   13ad8:	beq	13b1c <strspn@plt+0x2c64>
   13adc:	mov	r2, #5
   13ae0:	ldr	r1, [pc, #3884]	; 14a14 <strspn@plt+0x3b5c>
   13ae4:	mov	r0, #0
   13ae8:	bl	10cf0 <dcgettext@plt>
   13aec:	ldr	r2, [pc, #3872]	; 14a14 <strspn@plt+0x3b5c>
   13af0:	cmp	r0, r2
   13af4:	str	r0, [sp, #164]	; 0xa4
   13af8:	beq	14b00 <strspn@plt+0x3c48>
   13afc:	mov	r2, #5
   13b00:	ldr	r1, [pc, #3848]	; 14a10 <strspn@plt+0x3b58>
   13b04:	mov	r0, #0
   13b08:	bl	10cf0 <dcgettext@plt>
   13b0c:	ldr	r2, [pc, #3836]	; 14a10 <strspn@plt+0x3b58>
   13b10:	cmp	r0, r2
   13b14:	str	r0, [sp, #168]	; 0xa8
   13b18:	beq	14af0 <strspn@plt+0x3c38>
   13b1c:	ldr	r7, [sp, #28]
   13b20:	cmp	r7, #0
   13b24:	movne	r7, #0
   13b28:	bne	13b5c <strspn@plt+0x2ca4>
   13b2c:	ldr	r3, [sp, #164]	; 0xa4
   13b30:	ldrb	r3, [r3]
   13b34:	cmp	r3, #0
   13b38:	beq	14b10 <strspn@plt+0x3c58>
   13b3c:	ldr	r2, [sp, #164]	; 0xa4
   13b40:	ldr	r1, [sp, #32]
   13b44:	cmp	fp, r7
   13b48:	strbhi	r3, [r1, r7]
   13b4c:	ldrb	r3, [r2, #1]!
   13b50:	add	r7, r7, #1
   13b54:	cmp	r3, #0
   13b58:	bne	13b44 <strspn@plt+0x2c8c>
   13b5c:	ldr	r0, [sp, #168]	; 0xa8
   13b60:	bl	10dec <strlen@plt>
   13b64:	ldr	r3, [sp, #168]	; 0xa8
   13b68:	str	r3, [sp, #64]	; 0x40
   13b6c:	mov	r3, #1
   13b70:	str	r3, [sp, #44]	; 0x2c
   13b74:	str	r0, [sp, #52]	; 0x34
   13b78:	b	13780 <strspn@plt+0x28c8>
   13b7c:	mov	r3, #1
   13b80:	str	r3, [sp, #44]	; 0x2c
   13b84:	str	r3, [sp, #52]	; 0x34
   13b88:	str	r3, [sp, #28]
   13b8c:	ldr	r3, [pc, #3716]	; 14a18 <strspn@plt+0x3b60>
   13b90:	mov	r7, #0
   13b94:	str	r3, [sp, #64]	; 0x40
   13b98:	mov	r3, #5
   13b9c:	str	r3, [sp, #152]	; 0x98
   13ba0:	b	13780 <strspn@plt+0x28c8>
   13ba4:	ldr	r3, [sp, #28]
   13ba8:	cmp	r3, #0
   13bac:	beq	148ac <strspn@plt+0x39f4>
   13bb0:	ldr	r3, [sp, #28]
   13bb4:	mov	r7, #0
   13bb8:	str	r3, [sp, #44]	; 0x2c
   13bbc:	mov	r3, #1
   13bc0:	str	r3, [sp, #52]	; 0x34
   13bc4:	ldr	r3, [pc, #3660]	; 14a18 <strspn@plt+0x3b60>
   13bc8:	str	r3, [sp, #64]	; 0x40
   13bcc:	b	13780 <strspn@plt+0x28c8>
   13bd0:	ldr	r3, [sp, #28]
   13bd4:	cmp	r3, #0
   13bd8:	mov	r3, #1
   13bdc:	streq	r3, [sp, #44]	; 0x2c
   13be0:	bne	13a64 <strspn@plt+0x2bac>
   13be4:	cmp	fp, #0
   13be8:	beq	148dc <strspn@plt+0x3a24>
   13bec:	ldr	r3, [sp, #32]
   13bf0:	mov	r2, #39	; 0x27
   13bf4:	mov	r7, #1
   13bf8:	strb	r2, [r3]
   13bfc:	mov	r3, #0
   13c00:	str	r3, [sp, #28]
   13c04:	mov	r3, #1
   13c08:	str	r3, [sp, #52]	; 0x34
   13c0c:	ldr	r3, [pc, #3580]	; 14a10 <strspn@plt+0x3b58>
   13c10:	str	r3, [sp, #64]	; 0x40
   13c14:	mov	r3, #2
   13c18:	str	r3, [sp, #152]	; 0x98
   13c1c:	b	13780 <strspn@plt+0x28c8>
   13c20:	ldr	r3, [sp, #24]
   13c24:	cmn	r3, #1
   13c28:	beq	14840 <strspn@plt+0x3988>
   13c2c:	ldr	r3, [sp, #24]
   13c30:	subs	r3, r3, #1
   13c34:	movne	r3, #1
   13c38:	cmp	r3, #0
   13c3c:	bne	13c48 <strspn@plt+0x2d90>
   13c40:	cmp	sl, #0
   13c44:	beq	14034 <strspn@plt+0x317c>
   13c48:	ldr	r3, [sp, #152]	; 0x98
   13c4c:	mov	r5, #0
   13c50:	sub	r2, r3, #2
   13c54:	mov	r8, r5
   13c58:	clz	r2, r2
   13c5c:	lsr	r2, r2, #5
   13c60:	ldr	r3, [sp, #60]	; 0x3c
   13c64:	ldr	r1, [sp, #28]
   13c68:	orr	r3, r2, r3
   13c6c:	eor	r3, r3, #1
   13c70:	orr	r3, r1, r3
   13c74:	tst	r3, #255	; 0xff
   13c78:	bne	143a4 <strspn@plt+0x34ec>
   13c7c:	cmp	r6, #0
   13c80:	bne	13dd0 <strspn@plt+0x2f18>
   13c84:	ldr	r3, [sp, #40]	; 0x28
   13c88:	eor	r8, r8, #1
   13c8c:	and	r8, r8, r3
   13c90:	add	sl, sl, #1
   13c94:	uxtb	r6, r8
   13c98:	cmp	r6, #0
   13c9c:	beq	13cd0 <strspn@plt+0x2e18>
   13ca0:	cmp	fp, r7
   13ca4:	movhi	r2, #39	; 0x27
   13ca8:	ldrhi	r3, [sp, #32]
   13cac:	strbhi	r2, [r3, r7]
   13cb0:	add	r3, r7, #1
   13cb4:	cmp	fp, r3
   13cb8:	movhi	r1, #39	; 0x27
   13cbc:	ldrhi	r2, [sp, #32]
   13cc0:	add	r7, r7, #2
   13cc4:	strbhi	r1, [r2, r3]
   13cc8:	mov	r3, #0
   13ccc:	str	r3, [sp, #40]	; 0x28
   13cd0:	cmp	r7, fp
   13cd4:	ldrcc	r3, [sp, #32]
   13cd8:	strbcc	r4, [r3, r7]
   13cdc:	ldr	r3, [sp, #36]	; 0x24
   13ce0:	cmp	r5, #0
   13ce4:	moveq	r3, #0
   13ce8:	str	r3, [sp, #36]	; 0x24
   13cec:	ldr	r3, [sp, #24]
   13cf0:	add	r7, r7, #1
   13cf4:	cmn	r3, #1
   13cf8:	bne	1379c <strspn@plt+0x28e4>
   13cfc:	ldr	r3, [sp, #56]	; 0x38
   13d00:	ldrb	r5, [r3, sl]
   13d04:	adds	r5, r5, #0
   13d08:	movne	r5, #1
   13d0c:	cmp	r5, #0
   13d10:	bne	137b0 <strspn@plt+0x28f8>
   13d14:	ldr	r3, [sp, #152]	; 0x98
   13d18:	ldr	r1, [sp, #28]
   13d1c:	sub	r3, r3, #2
   13d20:	clz	r3, r3
   13d24:	lsr	r3, r3, #5
   13d28:	and	r9, r1, r3
   13d2c:	cmp	r7, #0
   13d30:	movne	r2, #0
   13d34:	andeq	r2, r9, #1
   13d38:	cmp	r2, #0
   13d3c:	bne	14718 <strspn@plt+0x3860>
   13d40:	eor	r2, r1, #1
   13d44:	ands	r3, r3, r2
   13d48:	beq	14bd4 <strspn@plt+0x3d1c>
   13d4c:	ldr	r2, [sp, #68]	; 0x44
   13d50:	cmp	r2, #0
   13d54:	beq	14bc0 <strspn@plt+0x3d08>
   13d58:	ldr	r3, [sp, #36]	; 0x24
   13d5c:	cmp	r3, #0
   13d60:	bne	14b78 <strspn@plt+0x3cc0>
   13d64:	ldr	r2, [sp, #72]	; 0x48
   13d68:	clz	r3, fp
   13d6c:	cmp	r2, #0
   13d70:	lsr	r3, r3, #5
   13d74:	moveq	r3, #0
   13d78:	cmp	r3, #0
   13d7c:	beq	14b18 <strspn@plt+0x3c60>
   13d80:	str	r3, [sp, #68]	; 0x44
   13d84:	ldr	fp, [sp, #72]	; 0x48
   13d88:	b	13738 <strspn@plt+0x2880>
   13d8c:	ldr	r3, [sp, #152]	; 0x98
   13d90:	cmp	r3, #2
   13d94:	beq	143e8 <strspn@plt+0x3530>
   13d98:	ldr	r3, [sp, #44]	; 0x2c
   13d9c:	ldr	r2, [sp, #28]
   13da0:	and	r2, r3, r2
   13da4:	ands	r2, r9, r2
   13da8:	bne	143f4 <strspn@plt+0x353c>
   13dac:	mov	r4, #92	; 0x5c
   13db0:	mov	r3, r4
   13db4:	ldr	r1, [sp, #44]	; 0x2c
   13db8:	cmp	r1, #0
   13dbc:	moveq	r5, #0
   13dc0:	moveq	r8, r1
   13dc4:	beq	13c60 <strspn@plt+0x2da8>
   13dc8:	mov	r4, r3
   13dcc:	mov	r5, #0
   13dd0:	ldr	r3, [sp, #28]
   13dd4:	cmp	r3, #0
   13dd8:	bne	143dc <strspn@plt+0x3524>
   13ddc:	ldr	r3, [sp, #40]	; 0x28
   13de0:	eor	r9, r3, #1
   13de4:	and	r9, r9, r2
   13de8:	ands	r9, r9, #255	; 0xff
   13dec:	beq	13e30 <strspn@plt+0x2f78>
   13df0:	cmp	fp, r7
   13df4:	movhi	r2, #39	; 0x27
   13df8:	ldrhi	r3, [sp, #32]
   13dfc:	str	r9, [sp, #40]	; 0x28
   13e00:	strbhi	r2, [r3, r7]
   13e04:	add	r3, r7, #1
   13e08:	cmp	fp, r3
   13e0c:	movhi	r1, #36	; 0x24
   13e10:	ldrhi	r2, [sp, #32]
   13e14:	strbhi	r1, [r2, r3]
   13e18:	add	r3, r7, #2
   13e1c:	cmp	fp, r3
   13e20:	add	r7, r7, #3
   13e24:	ldrhi	r2, [sp, #32]
   13e28:	movhi	r1, #39	; 0x27
   13e2c:	strbhi	r1, [r2, r3]
   13e30:	cmp	fp, r7
   13e34:	movhi	r2, #92	; 0x5c
   13e38:	ldrhi	r3, [sp, #32]
   13e3c:	add	sl, sl, #1
   13e40:	strbhi	r2, [r3, r7]
   13e44:	add	r7, r7, #1
   13e48:	b	13cd0 <strspn@plt+0x2e18>
   13e4c:	ldr	r3, [sp, #152]	; 0x98
   13e50:	mov	r4, #11
   13e54:	sub	r2, r3, #2
   13e58:	mov	r3, #118	; 0x76
   13e5c:	clz	r2, r2
   13e60:	lsr	r2, r2, #5
   13e64:	b	13db4 <strspn@plt+0x2efc>
   13e68:	mov	r4, #10
   13e6c:	mov	r3, #110	; 0x6e
   13e70:	ldr	r2, [sp, #152]	; 0x98
   13e74:	ldr	r1, [sp, #28]
   13e78:	sub	r2, r2, #2
   13e7c:	clz	r2, r2
   13e80:	lsr	r2, r2, #5
   13e84:	ands	r1, r1, r2
   13e88:	beq	13db4 <strspn@plt+0x2efc>
   13e8c:	ldr	sl, [sp, #32]
   13e90:	mov	r8, fp
   13e94:	mov	r2, r1
   13e98:	mov	r3, #2
   13e9c:	str	r3, [sp, #152]	; 0x98
   13ea0:	ldr	r9, [sp, #44]	; 0x2c
   13ea4:	ldr	r3, [sp, #152]	; 0x98
   13ea8:	and	r9, r9, r2
   13eac:	tst	r9, #255	; 0xff
   13eb0:	movne	r3, #4
   13eb4:	str	r3, [sp, #152]	; 0x98
   13eb8:	ldr	r3, [sp, #156]	; 0x9c
   13ebc:	mov	ip, #0
   13ec0:	bic	r3, r3, #2
   13ec4:	str	r3, [sp, #4]
   13ec8:	ldr	r3, [sp, #168]	; 0xa8
   13ecc:	ldr	r2, [sp, #56]	; 0x38
   13ed0:	str	r3, [sp, #16]
   13ed4:	ldr	r3, [sp, #164]	; 0xa4
   13ed8:	mov	r1, r8
   13edc:	str	r3, [sp, #12]
   13ee0:	ldr	r3, [sp, #152]	; 0x98
   13ee4:	mov	r0, sl
   13ee8:	str	r3, [sp]
   13eec:	str	ip, [sp, #8]
   13ef0:	ldr	r3, [sp, #24]
   13ef4:	bl	136dc <strspn@plt+0x2824>
   13ef8:	mov	fp, r0
   13efc:	mov	r0, fp
   13f00:	add	sp, sp, #116	; 0x74
   13f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f08:	ldr	r3, [sp, #152]	; 0x98
   13f0c:	mov	r4, #8
   13f10:	sub	r2, r3, #2
   13f14:	mov	r3, #98	; 0x62
   13f18:	clz	r2, r2
   13f1c:	lsr	r2, r2, #5
   13f20:	b	13db4 <strspn@plt+0x2efc>
   13f24:	ldr	r3, [sp, #152]	; 0x98
   13f28:	mov	r4, #7
   13f2c:	sub	r2, r3, #2
   13f30:	mov	r3, #97	; 0x61
   13f34:	clz	r2, r2
   13f38:	lsr	r2, r2, #5
   13f3c:	b	13db4 <strspn@plt+0x2efc>
   13f40:	ldr	r3, [sp, #44]	; 0x2c
   13f44:	cmp	r3, #0
   13f48:	beq	1472c <strspn@plt+0x3874>
   13f4c:	ldr	r3, [sp, #28]
   13f50:	cmp	r3, #0
   13f54:	bne	14a04 <strspn@plt+0x3b4c>
   13f58:	ldr	r3, [sp, #152]	; 0x98
   13f5c:	sub	r2, r3, #2
   13f60:	ldr	r3, [sp, #40]	; 0x28
   13f64:	clz	r2, r2
   13f68:	eor	r3, r3, #1
   13f6c:	lsr	r2, r2, #5
   13f70:	ands	r3, r2, r3
   13f74:	moveq	r1, r7
   13f78:	beq	13fbc <strspn@plt+0x3104>
   13f7c:	cmp	fp, r7
   13f80:	movhi	r0, #39	; 0x27
   13f84:	ldrhi	r1, [sp, #32]
   13f88:	str	r3, [sp, #40]	; 0x28
   13f8c:	strbhi	r0, [r1, r7]
   13f90:	add	r1, r7, #1
   13f94:	cmp	fp, r1
   13f98:	movhi	ip, #36	; 0x24
   13f9c:	ldrhi	r0, [sp, #32]
   13fa0:	strbhi	ip, [r0, r1]
   13fa4:	add	r1, r7, #2
   13fa8:	cmp	fp, r1
   13fac:	movhi	ip, #39	; 0x27
   13fb0:	ldrhi	r0, [sp, #32]
   13fb4:	strbhi	ip, [r0, r1]
   13fb8:	add	r1, r7, #3
   13fbc:	cmp	fp, r1
   13fc0:	movhi	r0, #92	; 0x5c
   13fc4:	ldrhi	r3, [sp, #32]
   13fc8:	add	r7, r1, #1
   13fcc:	strbhi	r0, [r3, r1]
   13fd0:	cmp	r8, #0
   13fd4:	beq	14918 <strspn@plt+0x3a60>
   13fd8:	ldr	r0, [sp, #24]
   13fdc:	add	r3, sl, #1
   13fe0:	cmp	r3, r0
   13fe4:	bcs	14854 <strspn@plt+0x399c>
   13fe8:	ldr	r0, [sp, #56]	; 0x38
   13fec:	ldrb	r3, [r0, r3]
   13ff0:	sub	r3, r3, #48	; 0x30
   13ff4:	cmp	r3, #9
   13ff8:	bhi	14854 <strspn@plt+0x399c>
   13ffc:	cmp	fp, r7
   14000:	movhi	r3, #48	; 0x30
   14004:	ldrhi	r0, [sp, #32]
   14008:	ldr	r5, [sp, #28]
   1400c:	mov	r4, #48	; 0x30
   14010:	strbhi	r3, [r0, r7]
   14014:	add	r3, r1, #2
   14018:	cmp	fp, r3
   1401c:	movhi	r0, #48	; 0x30
   14020:	ldrhi	ip, [sp, #32]
   14024:	add	r7, r1, #3
   14028:	strbhi	r0, [ip, r3]
   1402c:	b	13c60 <strspn@plt+0x2da8>
   14030:	mov	r5, #0
   14034:	ldr	r3, [sp, #152]	; 0x98
   14038:	sub	r2, r3, #2
   1403c:	ldr	r3, [sp, #28]
   14040:	clz	r2, r2
   14044:	lsr	r2, r2, #5
   14048:	ands	r8, r3, r2
   1404c:	beq	13c60 <strspn@plt+0x2da8>
   14050:	mov	r3, r8
   14054:	mov	r2, r3
   14058:	mov	r3, #2
   1405c:	ldr	sl, [sp, #32]
   14060:	mov	r8, fp
   14064:	str	r3, [sp, #152]	; 0x98
   14068:	b	13ea0 <strspn@plt+0x2fe8>
   1406c:	ldr	r3, [sp, #152]	; 0x98
   14070:	cmp	r3, #2
   14074:	beq	14798 <strspn@plt+0x38e0>
   14078:	cmp	r3, #5
   1407c:	beq	14758 <strspn@plt+0x38a0>
   14080:	mov	r5, #0
   14084:	sub	r2, r3, #2
   14088:	mov	r8, r5
   1408c:	clz	r2, r2
   14090:	mov	r4, #63	; 0x3f
   14094:	lsr	r2, r2, #5
   14098:	b	13c60 <strspn@plt+0x2da8>
   1409c:	ldr	r3, [sp, #152]	; 0x98
   140a0:	cmp	r3, #2
   140a4:	beq	147b8 <strspn@plt+0x3900>
   140a8:	mov	r2, #0
   140ac:	str	r5, [sp, #68]	; 0x44
   140b0:	mov	r8, r2
   140b4:	mov	r4, #39	; 0x27
   140b8:	b	13c60 <strspn@plt+0x2da8>
   140bc:	mov	r4, #13
   140c0:	mov	r3, #114	; 0x72
   140c4:	b	13e70 <strspn@plt+0x2fb8>
   140c8:	ldr	r3, [sp, #152]	; 0x98
   140cc:	mov	r8, #0
   140d0:	sub	r2, r3, #2
   140d4:	clz	r2, r2
   140d8:	lsr	r2, r2, #5
   140dc:	b	13c60 <strspn@plt+0x2da8>
   140e0:	ldr	r3, [sp, #152]	; 0x98
   140e4:	mov	r4, #12
   140e8:	sub	r2, r3, #2
   140ec:	mov	r3, #102	; 0x66
   140f0:	clz	r2, r2
   140f4:	lsr	r2, r2, #5
   140f8:	b	13db4 <strspn@plt+0x2efc>
   140fc:	mov	r5, r6
   14100:	b	14034 <strspn@plt+0x317c>
   14104:	ldr	r3, [sp, #152]	; 0x98
   14108:	sub	r2, r3, #2
   1410c:	mov	r3, #116	; 0x74
   14110:	clz	r2, r2
   14114:	lsr	r2, r2, #5
   14118:	b	13db4 <strspn@plt+0x2efc>
   1411c:	ldr	r8, [sp, #76]	; 0x4c
   14120:	cmp	r8, #1
   14124:	bne	145d4 <strspn@plt+0x371c>
   14128:	bl	10dc8 <__ctype_b_loc@plt>
   1412c:	sxth	r3, r4
   14130:	mov	ip, r8
   14134:	lsl	r3, r3, #1
   14138:	ldr	r2, [r0]
   1413c:	ldrh	r3, [r2, r3]
   14140:	and	r3, r3, #16384	; 0x4000
   14144:	cmp	r3, #0
   14148:	movne	r5, #1
   1414c:	moveq	r5, #0
   14150:	moveq	r3, #1
   14154:	movne	r3, #0
   14158:	ldr	r2, [sp, #44]	; 0x2c
   1415c:	and	r3, r3, r2
   14160:	ands	r8, r3, #255	; 0xff
   14164:	bne	14468 <strspn@plt+0x35b0>
   14168:	ldr	r3, [sp, #152]	; 0x98
   1416c:	sub	r2, r3, #2
   14170:	clz	r2, r2
   14174:	lsr	r2, r2, #5
   14178:	b	13c60 <strspn@plt+0x2da8>
   1417c:	ldr	r3, [sp, #56]	; 0x38
   14180:	add	r3, r3, sl
   14184:	str	r3, [sp, #48]	; 0x30
   14188:	ldr	r3, [sp, #48]	; 0x30
   1418c:	mov	r6, #0
   14190:	ldrb	r4, [r3]
   14194:	cmp	r4, #126	; 0x7e
   14198:	ldrls	pc, [pc, r4, lsl #2]
   1419c:	b	1411c <strspn@plt+0x3264>
   141a0:	andeq	r3, r1, r0, asr #30
   141a4:	andeq	r4, r1, ip, lsl r1
   141a8:	andeq	r4, r1, ip, lsl r1
   141ac:	andeq	r4, r1, ip, lsl r1
   141b0:	andeq	r4, r1, ip, lsl r1
   141b4:	andeq	r4, r1, ip, lsl r1
   141b8:	andeq	r4, r1, ip, lsl r1
   141bc:	andeq	r3, r1, r4, lsr #30
   141c0:	andeq	r3, r1, r8, lsl #30
   141c4:	muleq	r1, ip, r3
   141c8:	andeq	r3, r1, r8, ror #28
   141cc:	andeq	r3, r1, ip, asr #28
   141d0:	andeq	r4, r1, r0, ror #1
   141d4:	strheq	r4, [r1], -ip
   141d8:	andeq	r4, r1, ip, lsl r1
   141dc:	andeq	r4, r1, ip, lsl r1
   141e0:	andeq	r4, r1, ip, lsl r1
   141e4:	andeq	r4, r1, ip, lsl r1
   141e8:	andeq	r4, r1, ip, lsl r1
   141ec:	andeq	r4, r1, ip, lsl r1
   141f0:	andeq	r4, r1, ip, lsl r1
   141f4:	andeq	r4, r1, ip, lsl r1
   141f8:	andeq	r4, r1, ip, lsl r1
   141fc:	andeq	r4, r1, ip, lsl r1
   14200:	andeq	r4, r1, ip, lsl r1
   14204:	andeq	r4, r1, ip, lsl r1
   14208:	andeq	r4, r1, ip, lsl r1
   1420c:	andeq	r4, r1, ip, lsl r1
   14210:	andeq	r4, r1, ip, lsl r1
   14214:	andeq	r4, r1, ip, lsl r1
   14218:	andeq	r4, r1, ip, lsl r1
   1421c:	andeq	r4, r1, ip, lsl r1
   14220:	andeq	r4, r1, r4, lsr r0
   14224:	andeq	r4, r1, r0, lsr r0
   14228:	andeq	r4, r1, r0, lsr r0
   1422c:	andeq	r3, r1, r0, asr #24
   14230:	andeq	r4, r1, r0, lsr r0
   14234:	andeq	r4, r1, r8, asr #1
   14238:	andeq	r4, r1, r0, lsr r0
   1423c:	muleq	r1, ip, r0
   14240:	andeq	r4, r1, r0, lsr r0
   14244:	andeq	r4, r1, r0, lsr r0
   14248:	andeq	r4, r1, r0, lsr r0
   1424c:	andeq	r4, r1, r8, asr #1
   14250:	andeq	r4, r1, r8, asr #1
   14254:	andeq	r4, r1, r8, asr #1
   14258:	andeq	r4, r1, r8, asr #1
   1425c:	andeq	r4, r1, r8, asr #1
   14260:	andeq	r4, r1, r8, asr #1
   14264:	andeq	r4, r1, r8, asr #1
   14268:	andeq	r4, r1, r8, asr #1
   1426c:	andeq	r4, r1, r8, asr #1
   14270:	andeq	r4, r1, r8, asr #1
   14274:	andeq	r4, r1, r8, asr #1
   14278:	andeq	r4, r1, r8, asr #1
   1427c:	andeq	r4, r1, r8, asr #1
   14280:	andeq	r4, r1, r8, asr #1
   14284:	andeq	r4, r1, r8, asr #1
   14288:	andeq	r4, r1, r8, asr #1
   1428c:	andeq	r4, r1, r0, lsr r0
   14290:	andeq	r4, r1, r0, lsr r0
   14294:	andeq	r4, r1, r0, lsr r0
   14298:	andeq	r4, r1, r0, lsr r0
   1429c:	andeq	r4, r1, ip, rrx
   142a0:	andeq	r4, r1, ip, lsl r1
   142a4:	andeq	r4, r1, r8, asr #1
   142a8:	andeq	r4, r1, r8, asr #1
   142ac:	andeq	r4, r1, r8, asr #1
   142b0:	andeq	r4, r1, r8, asr #1
   142b4:	andeq	r4, r1, r8, asr #1
   142b8:	andeq	r4, r1, r8, asr #1
   142bc:	andeq	r4, r1, r8, asr #1
   142c0:	andeq	r4, r1, r8, asr #1
   142c4:	andeq	r4, r1, r8, asr #1
   142c8:	andeq	r4, r1, r8, asr #1
   142cc:	andeq	r4, r1, r8, asr #1
   142d0:	andeq	r4, r1, r8, asr #1
   142d4:	andeq	r4, r1, r8, asr #1
   142d8:	andeq	r4, r1, r8, asr #1
   142dc:	andeq	r4, r1, r8, asr #1
   142e0:	andeq	r4, r1, r8, asr #1
   142e4:	andeq	r4, r1, r8, asr #1
   142e8:	andeq	r4, r1, r8, asr #1
   142ec:	andeq	r4, r1, r8, asr #1
   142f0:	andeq	r4, r1, r8, asr #1
   142f4:	andeq	r4, r1, r8, asr #1
   142f8:	andeq	r4, r1, r8, asr #1
   142fc:	andeq	r4, r1, r8, asr #1
   14300:	andeq	r4, r1, r8, asr #1
   14304:	andeq	r4, r1, r8, asr #1
   14308:	andeq	r4, r1, r8, asr #1
   1430c:	andeq	r4, r1, r0, lsr r0
   14310:	andeq	r3, r1, ip, lsl #27
   14314:	andeq	r4, r1, r8, asr #1
   14318:	andeq	r4, r1, r0, lsr r0
   1431c:	andeq	r4, r1, r8, asr #1
   14320:	andeq	r4, r1, r0, lsr r0
   14324:	andeq	r4, r1, r8, asr #1
   14328:	andeq	r4, r1, r8, asr #1
   1432c:	andeq	r4, r1, r8, asr #1
   14330:	andeq	r4, r1, r8, asr #1
   14334:	andeq	r4, r1, r8, asr #1
   14338:	andeq	r4, r1, r8, asr #1
   1433c:	andeq	r4, r1, r8, asr #1
   14340:	andeq	r4, r1, r8, asr #1
   14344:	andeq	r4, r1, r8, asr #1
   14348:	andeq	r4, r1, r8, asr #1
   1434c:	andeq	r4, r1, r8, asr #1
   14350:	andeq	r4, r1, r8, asr #1
   14354:	andeq	r4, r1, r8, asr #1
   14358:	andeq	r4, r1, r8, asr #1
   1435c:	andeq	r4, r1, r8, asr #1
   14360:	andeq	r4, r1, r8, asr #1
   14364:	andeq	r4, r1, r8, asr #1
   14368:	andeq	r4, r1, r8, asr #1
   1436c:	andeq	r4, r1, r8, asr #1
   14370:	andeq	r4, r1, r8, asr #1
   14374:	andeq	r4, r1, r8, asr #1
   14378:	andeq	r4, r1, r8, asr #1
   1437c:	andeq	r4, r1, r8, asr #1
   14380:	andeq	r4, r1, r8, asr #1
   14384:	andeq	r4, r1, r8, asr #1
   14388:	andeq	r4, r1, r8, asr #1
   1438c:	andeq	r3, r1, r0, lsr #24
   14390:	andeq	r4, r1, r0, lsr r0
   14394:	andeq	r3, r1, r0, lsr #24
   14398:	andeq	r3, r1, r0, asr #24
   1439c:	mov	r3, #116	; 0x74
   143a0:	b	13e70 <strspn@plt+0x2fb8>
   143a4:	ldr	r3, [sp, #160]	; 0xa0
   143a8:	cmp	r3, #0
   143ac:	beq	13c7c <strspn@plt+0x2dc4>
   143b0:	lsr	r3, r4, #5
   143b4:	ldr	r0, [sp, #160]	; 0xa0
   143b8:	uxtb	r3, r3
   143bc:	and	r1, r4, #31
   143c0:	ldr	r0, [r0, r3, lsl #2]
   143c4:	lsr	r3, r0, r1
   143c8:	tst	r3, #1
   143cc:	beq	13c7c <strspn@plt+0x2dc4>
   143d0:	ldr	r3, [sp, #28]
   143d4:	cmp	r3, #0
   143d8:	beq	13ddc <strspn@plt+0x2f24>
   143dc:	ldr	sl, [sp, #32]
   143e0:	mov	r8, fp
   143e4:	b	13ea0 <strspn@plt+0x2fe8>
   143e8:	ldr	r3, [sp, #28]
   143ec:	cmp	r3, #0
   143f0:	bne	14944 <strspn@plt+0x3a8c>
   143f4:	add	sl, sl, #1
   143f8:	ldr	r6, [sp, #40]	; 0x28
   143fc:	mov	r5, #0
   14400:	mov	r4, #92	; 0x5c
   14404:	b	13c98 <strspn@plt+0x2de0>
   14408:	cmp	r9, r8
   1440c:	bne	1467c <strspn@plt+0x37c4>
   14410:	ldr	r0, [sp, #100]	; 0x64
   14414:	bl	10d20 <iswprint@plt>
   14418:	add	r5, r5, r4
   1441c:	cmp	r0, #0
   14420:	add	r0, sp, #104	; 0x68
   14424:	moveq	r6, #0
   14428:	bl	10ccc <mbsinit@plt>
   1442c:	cmp	r0, #0
   14430:	beq	14610 <strspn@plt+0x3758>
   14434:	mov	r2, r6
   14438:	mov	ip, r5
   1443c:	eor	r5, r2, #1
   14440:	ldr	r4, [sp, #80]	; 0x50
   14444:	ldr	r6, [sp, #84]	; 0x54
   14448:	ldr	r7, [sp, #88]	; 0x58
   1444c:	uxtb	r5, r5
   14450:	cmp	ip, #1
   14454:	bls	14954 <strspn@plt+0x3a9c>
   14458:	ldr	r3, [sp, #44]	; 0x2c
   1445c:	and	r8, r3, r5
   14460:	mov	r5, r2
   14464:	uxtb	r8, r8
   14468:	add	r2, sl, ip
   1446c:	ldr	r0, [sp, #48]	; 0x30
   14470:	mov	r1, #0
   14474:	str	r5, [sp, #48]	; 0x30
   14478:	ldr	r9, [sp, #28]
   1447c:	ldr	ip, [sp, #40]	; 0x28
   14480:	ldr	r3, [sp, #32]
   14484:	ldr	r5, [sp, #152]	; 0x98
   14488:	b	14544 <strspn@plt+0x368c>
   1448c:	cmp	r9, #0
   14490:	bne	14868 <strspn@plt+0x39b0>
   14494:	eor	r1, ip, #1
   14498:	cmp	r5, #2
   1449c:	movne	r1, #0
   144a0:	andeq	r1, r1, #1
   144a4:	cmp	r1, #0
   144a8:	beq	144e0 <strspn@plt+0x3628>
   144ac:	cmp	fp, r7
   144b0:	movhi	ip, #39	; 0x27
   144b4:	strbhi	ip, [r3, r7]
   144b8:	add	ip, r7, #1
   144bc:	cmp	fp, ip
   144c0:	movhi	lr, #36	; 0x24
   144c4:	strbhi	lr, [r3, ip]
   144c8:	add	ip, r7, #2
   144cc:	cmp	fp, ip
   144d0:	movhi	lr, #39	; 0x27
   144d4:	strbhi	lr, [r3, ip]
   144d8:	add	r7, r7, #3
   144dc:	mov	ip, r1
   144e0:	cmp	fp, r7
   144e4:	movhi	r1, #92	; 0x5c
   144e8:	strbhi	r1, [r3, r7]
   144ec:	add	r1, r7, #1
   144f0:	cmp	fp, r1
   144f4:	lsrhi	lr, r4, #6
   144f8:	addhi	lr, lr, #48	; 0x30
   144fc:	strbhi	lr, [r3, r1]
   14500:	add	lr, r7, #2
   14504:	cmp	fp, lr
   14508:	lsrhi	r1, r4, #3
   1450c:	andhi	r1, r1, #7
   14510:	addhi	r1, r1, #48	; 0x30
   14514:	add	sl, sl, #1
   14518:	strbhi	r1, [r3, lr]
   1451c:	and	r4, r4, #7
   14520:	cmp	r2, sl
   14524:	add	r4, r4, #48	; 0x30
   14528:	add	r7, r7, #3
   1452c:	bls	1488c <strspn@plt+0x39d4>
   14530:	mov	r1, r8
   14534:	cmp	fp, r7
   14538:	strbhi	r4, [r3, r7]
   1453c:	ldrb	r4, [r0, #1]!
   14540:	add	r7, r7, #1
   14544:	cmp	r8, #0
   14548:	bne	1448c <strspn@plt+0x35d4>
   1454c:	cmp	r6, #0
   14550:	bne	145a0 <strspn@plt+0x36e8>
   14554:	eor	r6, r1, #1
   14558:	and	r6, r6, ip
   1455c:	add	sl, sl, #1
   14560:	cmp	r2, sl
   14564:	uxtb	r6, r6
   14568:	bls	145c8 <strspn@plt+0x3710>
   1456c:	cmp	r6, #0
   14570:	beq	14534 <strspn@plt+0x367c>
   14574:	cmp	fp, r7
   14578:	movhi	ip, #39	; 0x27
   1457c:	strbhi	ip, [r3, r7]
   14580:	add	ip, r7, #1
   14584:	cmp	fp, ip
   14588:	movhi	lr, #39	; 0x27
   1458c:	strbhi	lr, [r3, ip]
   14590:	add	r7, r7, #2
   14594:	mov	r6, r8
   14598:	mov	ip, r8
   1459c:	b	14534 <strspn@plt+0x367c>
   145a0:	cmp	fp, r7
   145a4:	eor	r6, r1, #1
   145a8:	movhi	lr, #92	; 0x5c
   145ac:	and	r6, r6, ip
   145b0:	add	sl, sl, #1
   145b4:	strbhi	lr, [r3, r7]
   145b8:	cmp	r2, sl
   145bc:	add	r7, r7, #1
   145c0:	uxtb	r6, r6
   145c4:	bhi	1456c <strspn@plt+0x36b4>
   145c8:	str	ip, [sp, #40]	; 0x28
   145cc:	ldr	r5, [sp, #48]	; 0x30
   145d0:	b	13c98 <strspn@plt+0x2de0>
   145d4:	ldr	r3, [sp, #24]
   145d8:	cmn	r3, #1
   145dc:	mov	r3, #0
   145e0:	str	r3, [sp, #104]	; 0x68
   145e4:	str	r3, [sp, #108]	; 0x6c
   145e8:	beq	14908 <strspn@plt+0x3a50>
   145ec:	mov	r2, r5
   145f0:	mov	r3, #0
   145f4:	str	r7, [sp, #88]	; 0x58
   145f8:	ldr	r7, [sp, #152]	; 0x98
   145fc:	str	r5, [sp, #92]	; 0x5c
   14600:	str	r6, [sp, #84]	; 0x54
   14604:	mov	r5, r3
   14608:	mov	r6, r2
   1460c:	str	r4, [sp, #80]	; 0x50
   14610:	ldr	r3, [sp, #56]	; 0x38
   14614:	add	r9, sl, r5
   14618:	add	r8, r3, r9
   1461c:	ldr	r3, [sp, #24]
   14620:	mov	r1, r8
   14624:	sub	r2, r3, r9
   14628:	add	r0, sp, #100	; 0x64
   1462c:	add	r3, sp, #104	; 0x68
   14630:	bl	16304 <strspn@plt+0x544c>
   14634:	subs	r4, r0, #0
   14638:	beq	149e0 <strspn@plt+0x3b28>
   1463c:	cmn	r4, #1
   14640:	beq	149c0 <strspn@plt+0x3b08>
   14644:	cmn	r4, #2
   14648:	beq	14960 <strspn@plt+0x3aa8>
   1464c:	ldr	r2, [sp, #28]
   14650:	cmp	r7, #2
   14654:	movne	r2, #0
   14658:	andeq	r2, r2, #1
   1465c:	cmp	r2, #0
   14660:	beq	14410 <strspn@plt+0x3558>
   14664:	cmp	r4, #1
   14668:	beq	14410 <strspn@plt+0x3558>
   1466c:	sub	r3, r4, #1
   14670:	add	r9, r3, r9
   14674:	ldr	r3, [sp, #56]	; 0x38
   14678:	add	r9, r3, r9
   1467c:	ldrb	r3, [r8, #1]!
   14680:	sub	r3, r3, #91	; 0x5b
   14684:	cmp	r3, #33	; 0x21
   14688:	ldrls	pc, [pc, r3, lsl #2]
   1468c:	b	14408 <strspn@plt+0x3550>
   14690:	andeq	r4, r1, r8, lsl r7
   14694:	andeq	r4, r1, r8, lsl r7
   14698:	andeq	r4, r1, r8, lsl #8
   1469c:	andeq	r4, r1, r8, lsl r7
   146a0:	andeq	r4, r1, r8, lsl #8
   146a4:	andeq	r4, r1, r8, lsl r7
   146a8:	andeq	r4, r1, r8, lsl #8
   146ac:	andeq	r4, r1, r8, lsl #8
   146b0:	andeq	r4, r1, r8, lsl #8
   146b4:	andeq	r4, r1, r8, lsl #8
   146b8:	andeq	r4, r1, r8, lsl #8
   146bc:	andeq	r4, r1, r8, lsl #8
   146c0:	andeq	r4, r1, r8, lsl #8
   146c4:	andeq	r4, r1, r8, lsl #8
   146c8:	andeq	r4, r1, r8, lsl #8
   146cc:	andeq	r4, r1, r8, lsl #8
   146d0:	andeq	r4, r1, r8, lsl #8
   146d4:	andeq	r4, r1, r8, lsl #8
   146d8:	andeq	r4, r1, r8, lsl #8
   146dc:	andeq	r4, r1, r8, lsl #8
   146e0:	andeq	r4, r1, r8, lsl #8
   146e4:	andeq	r4, r1, r8, lsl #8
   146e8:	andeq	r4, r1, r8, lsl #8
   146ec:	andeq	r4, r1, r8, lsl #8
   146f0:	andeq	r4, r1, r8, lsl #8
   146f4:	andeq	r4, r1, r8, lsl #8
   146f8:	andeq	r4, r1, r8, lsl #8
   146fc:	andeq	r4, r1, r8, lsl #8
   14700:	andeq	r4, r1, r8, lsl #8
   14704:	andeq	r4, r1, r8, lsl #8
   14708:	andeq	r4, r1, r8, lsl #8
   1470c:	andeq	r4, r1, r8, lsl #8
   14710:	andeq	r4, r1, r8, lsl #8
   14714:	andeq	r4, r1, r8, lsl r7
   14718:	mov	r3, #2
   1471c:	ldr	sl, [sp, #32]
   14720:	mov	r8, fp
   14724:	str	r3, [sp, #152]	; 0x98
   14728:	b	13ea0 <strspn@plt+0x2fe8>
   1472c:	ldr	r3, [sp, #156]	; 0x9c
   14730:	tst	r3, #1
   14734:	bne	14860 <strspn@plt+0x39a8>
   14738:	ldr	r3, [sp, #152]	; 0x98
   1473c:	ldr	r4, [sp, #44]	; 0x2c
   14740:	sub	r2, r3, #2
   14744:	mov	r5, #0
   14748:	clz	r2, r2
   1474c:	mov	r8, r4
   14750:	lsr	r2, r2, #5
   14754:	b	13c60 <strspn@plt+0x2da8>
   14758:	ldr	r3, [sp, #156]	; 0x9c
   1475c:	ands	r9, r3, #4
   14760:	beq	14898 <strspn@plt+0x39e0>
   14764:	ldr	r2, [sp, #24]
   14768:	add	r3, sl, #2
   1476c:	cmp	r3, r2
   14770:	bcs	14784 <strspn@plt+0x38cc>
   14774:	ldr	r2, [sp, #48]	; 0x30
   14778:	ldrb	r4, [r2, #1]
   1477c:	cmp	r4, #63	; 0x3f
   14780:	beq	14a20 <strspn@plt+0x3b68>
   14784:	mov	r2, #0
   14788:	mov	r8, r2
   1478c:	mov	r5, r2
   14790:	mov	r4, #63	; 0x3f
   14794:	b	13c60 <strspn@plt+0x2da8>
   14798:	ldr	r3, [sp, #28]
   1479c:	cmp	r3, #0
   147a0:	bne	14ac4 <strspn@plt+0x3c0c>
   147a4:	mov	r2, r5
   147a8:	mov	r8, r3
   147ac:	mov	r5, #0
   147b0:	mov	r4, #63	; 0x3f
   147b4:	b	13c60 <strspn@plt+0x2da8>
   147b8:	ldr	r3, [sp, #28]
   147bc:	cmp	r3, #0
   147c0:	bne	14ac4 <strspn@plt+0x3c0c>
   147c4:	ldr	r2, [sp, #72]	; 0x48
   147c8:	adds	r3, fp, #0
   147cc:	movne	r3, #1
   147d0:	cmp	r2, #0
   147d4:	movne	r3, #0
   147d8:	cmp	r3, #0
   147dc:	strne	fp, [sp, #72]	; 0x48
   147e0:	movne	fp, #0
   147e4:	bne	14820 <strspn@plt+0x3968>
   147e8:	cmp	fp, r7
   147ec:	movhi	r2, #39	; 0x27
   147f0:	ldrhi	r3, [sp, #32]
   147f4:	strbhi	r2, [r3, r7]
   147f8:	add	r3, r7, #1
   147fc:	cmp	fp, r3
   14800:	movhi	r1, #92	; 0x5c
   14804:	ldrhi	r2, [sp, #32]
   14808:	strbhi	r1, [r2, r3]
   1480c:	add	r3, r7, #2
   14810:	cmp	fp, r3
   14814:	movhi	r1, #39	; 0x27
   14818:	ldrhi	r2, [sp, #32]
   1481c:	strbhi	r1, [r2, r3]
   14820:	ldr	r3, [sp, #28]
   14824:	add	r7, r7, #3
   14828:	mov	r2, r5
   1482c:	mov	r8, r3
   14830:	str	r5, [sp, #68]	; 0x44
   14834:	str	r3, [sp, #40]	; 0x28
   14838:	mov	r4, #39	; 0x27
   1483c:	b	13c60 <strspn@plt+0x2da8>
   14840:	ldr	r3, [sp, #56]	; 0x38
   14844:	ldrb	r3, [r3, #1]
   14848:	adds	r3, r3, #0
   1484c:	movne	r3, #1
   14850:	b	13c38 <strspn@plt+0x2d80>
   14854:	ldr	r5, [sp, #28]
   14858:	mov	r4, #48	; 0x30
   1485c:	b	13c60 <strspn@plt+0x2da8>
   14860:	add	sl, sl, #1
   14864:	b	13790 <strspn@plt+0x28d8>
   14868:	mov	sl, r3
   1486c:	ldr	r3, [sp, #28]
   14870:	mov	r8, fp
   14874:	str	r3, [sp, #44]	; 0x2c
   14878:	ldr	r3, [sp, #152]	; 0x98
   1487c:	sub	r2, r3, #2
   14880:	clz	r2, r2
   14884:	lsr	r2, r2, #5
   14888:	b	13ea0 <strspn@plt+0x2fe8>
   1488c:	str	ip, [sp, #40]	; 0x28
   14890:	ldr	r5, [sp, #48]	; 0x30
   14894:	b	13cd0 <strspn@plt+0x2e18>
   14898:	mov	r2, r9
   1489c:	mov	r8, r9
   148a0:	mov	r5, #0
   148a4:	mov	r4, #63	; 0x3f
   148a8:	b	13c60 <strspn@plt+0x2da8>
   148ac:	cmp	fp, #0
   148b0:	beq	14928 <strspn@plt+0x3a70>
   148b4:	ldr	r1, [sp, #32]
   148b8:	mov	r3, #34	; 0x22
   148bc:	mov	r2, #1
   148c0:	strb	r3, [r1]
   148c4:	ldr	r3, [pc, #332]	; 14a18 <strspn@plt+0x3b60>
   148c8:	str	r2, [sp, #52]	; 0x34
   148cc:	mov	r7, r2
   148d0:	str	r2, [sp, #44]	; 0x2c
   148d4:	str	r3, [sp, #64]	; 0x40
   148d8:	b	13780 <strspn@plt+0x28c8>
   148dc:	ldr	r3, [pc, #300]	; 14a10 <strspn@plt+0x3b58>
   148e0:	str	r3, [sp, #64]	; 0x40
   148e4:	mov	r3, #0
   148e8:	str	r3, [sp, #28]
   148ec:	mov	r3, #1
   148f0:	str	r3, [sp, #52]	; 0x34
   148f4:	mov	r7, r3
   148f8:	mov	r3, #2
   148fc:	str	r3, [sp, #152]	; 0x98
   14900:	b	13780 <strspn@plt+0x28c8>
   14904:	bl	10eac <abort@plt>
   14908:	ldr	r0, [sp, #56]	; 0x38
   1490c:	bl	10dec <strlen@plt>
   14910:	str	r0, [sp, #24]
   14914:	b	145ec <strspn@plt+0x3734>
   14918:	mov	r5, r8
   1491c:	mov	r4, #48	; 0x30
   14920:	ldr	r8, [sp, #44]	; 0x2c
   14924:	b	13c60 <strspn@plt+0x2da8>
   14928:	mov	r3, #1
   1492c:	str	r3, [sp, #52]	; 0x34
   14930:	mov	r7, r3
   14934:	str	r3, [sp, #44]	; 0x2c
   14938:	ldr	r3, [pc, #216]	; 14a18 <strspn@plt+0x3b60>
   1493c:	str	r3, [sp, #64]	; 0x40
   14940:	b	13780 <strspn@plt+0x28c8>
   14944:	ldr	sl, [sp, #32]
   14948:	mov	r8, fp
   1494c:	mov	r2, r3
   14950:	b	13ea0 <strspn@plt+0x2fe8>
   14954:	mov	r3, r5
   14958:	mov	r5, r2
   1495c:	b	14158 <strspn@plt+0x32a0>
   14960:	ldr	r1, [sp, #24]
   14964:	mov	r2, r5
   14968:	cmp	r1, r9
   1496c:	mov	ip, r5
   14970:	ldr	r4, [sp, #80]	; 0x50
   14974:	ldr	r5, [sp, #92]	; 0x5c
   14978:	ldr	r6, [sp, #84]	; 0x54
   1497c:	ldr	r7, [sp, #88]	; 0x58
   14980:	bls	149b4 <strspn@plt+0x3afc>
   14984:	ldrb	r3, [r8]
   14988:	cmp	r3, #0
   1498c:	bne	149a0 <strspn@plt+0x3ae8>
   14990:	b	149b8 <strspn@plt+0x3b00>
   14994:	ldrb	r3, [r8, #1]!
   14998:	cmp	r3, #0
   1499c:	beq	14ab8 <strspn@plt+0x3c00>
   149a0:	add	r2, r2, #1
   149a4:	add	r3, sl, r2
   149a8:	cmp	r1, r3
   149ac:	bhi	14994 <strspn@plt+0x3adc>
   149b0:	mov	ip, r2
   149b4:	mov	r3, #0
   149b8:	mov	r2, r3
   149bc:	b	14450 <strspn@plt+0x3598>
   149c0:	mov	r3, #0
   149c4:	mov	ip, r5
   149c8:	ldr	r4, [sp, #80]	; 0x50
   149cc:	ldr	r5, [sp, #92]	; 0x5c
   149d0:	ldr	r6, [sp, #84]	; 0x54
   149d4:	ldr	r7, [sp, #88]	; 0x58
   149d8:	mov	r2, r3
   149dc:	b	14450 <strspn@plt+0x3598>
   149e0:	mov	r3, r6
   149e4:	mov	ip, r5
   149e8:	eor	r5, r3, #1
   149ec:	mov	r2, r6
   149f0:	ldr	r4, [sp, #80]	; 0x50
   149f4:	ldr	r6, [sp, #84]	; 0x54
   149f8:	ldr	r7, [sp, #88]	; 0x58
   149fc:	uxtb	r5, r5
   14a00:	b	14450 <strspn@plt+0x3598>
   14a04:	ldr	sl, [sp, #32]
   14a08:	mov	r8, fp
   14a0c:	b	14874 <strspn@plt+0x39bc>
   14a10:	andeq	r7, r1, r0, lsr #6
   14a14:	andeq	r7, r1, r4, lsr #6
   14a18:	andeq	r7, r1, ip, lsl r3
   14a1c:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   14a20:	ldr	r2, [sp, #56]	; 0x38
   14a24:	ldrb	r1, [r2, r3]
   14a28:	sub	r2, r1, #33	; 0x21
   14a2c:	uxtb	r2, r2
   14a30:	cmp	r2, #29
   14a34:	bhi	14ad4 <strspn@plt+0x3c1c>
   14a38:	ldr	r0, [pc, #-36]	; 14a1c <strspn@plt+0x3b64>
   14a3c:	mov	ip, #1
   14a40:	ands	r2, r0, ip, lsl r2
   14a44:	beq	14ae4 <strspn@plt+0x3c2c>
   14a48:	ldr	r2, [sp, #28]
   14a4c:	cmp	r2, #0
   14a50:	bne	14be4 <strspn@plt+0x3d2c>
   14a54:	cmp	fp, r7
   14a58:	ldr	r8, [sp, #28]
   14a5c:	ldrhi	r2, [sp, #32]
   14a60:	mov	sl, r3
   14a64:	mov	r5, r8
   14a68:	strbhi	r4, [r2, r7]
   14a6c:	add	r2, r7, #1
   14a70:	cmp	fp, r2
   14a74:	movhi	r0, #34	; 0x22
   14a78:	ldrhi	ip, [sp, #32]
   14a7c:	mov	r4, r1
   14a80:	strbhi	r0, [ip, r2]
   14a84:	add	r2, r7, #2
   14a88:	cmp	fp, r2
   14a8c:	movhi	r0, #34	; 0x22
   14a90:	ldrhi	ip, [sp, #32]
   14a94:	strbhi	r0, [ip, r2]
   14a98:	add	r2, r7, #3
   14a9c:	cmp	fp, r2
   14aa0:	movhi	r0, #63	; 0x3f
   14aa4:	ldrhi	ip, [sp, #32]
   14aa8:	add	r7, r7, #4
   14aac:	strbhi	r0, [ip, r2]
   14ab0:	mov	r2, r8
   14ab4:	b	13c60 <strspn@plt+0x2da8>
   14ab8:	mov	ip, r2
   14abc:	mov	r2, r3
   14ac0:	b	14450 <strspn@plt+0x3598>
   14ac4:	ldr	sl, [sp, #32]
   14ac8:	mov	r8, fp
   14acc:	ldr	r2, [sp, #28]
   14ad0:	b	13ea0 <strspn@plt+0x2fe8>
   14ad4:	mov	r2, #0
   14ad8:	mov	r8, r2
   14adc:	mov	r5, r2
   14ae0:	b	13c60 <strspn@plt+0x2da8>
   14ae4:	mov	r8, r2
   14ae8:	mov	r5, #0
   14aec:	b	13c60 <strspn@plt+0x2da8>
   14af0:	ldr	r1, [sp, #152]	; 0x98
   14af4:	bl	135bc <strspn@plt+0x2704>
   14af8:	str	r0, [sp, #168]	; 0xa8
   14afc:	b	13b1c <strspn@plt+0x2c64>
   14b00:	ldr	r1, [sp, #152]	; 0x98
   14b04:	bl	135bc <strspn@plt+0x2704>
   14b08:	str	r0, [sp, #164]	; 0xa4
   14b0c:	b	13afc <strspn@plt+0x2c44>
   14b10:	ldr	r7, [sp, #28]
   14b14:	b	13b5c <strspn@plt+0x2ca4>
   14b18:	ldr	sl, [sp, #32]
   14b1c:	ldr	r2, [sp, #68]	; 0x44
   14b20:	mov	r8, fp
   14b24:	mov	fp, r7
   14b28:	ldr	r3, [sp, #64]	; 0x40
   14b2c:	cmp	r3, #0
   14b30:	moveq	r2, #0
   14b34:	andne	r2, r2, #1
   14b38:	cmp	r2, #0
   14b3c:	beq	14b68 <strspn@plt+0x3cb0>
   14b40:	mov	r2, r3
   14b44:	ldrb	r3, [r3]
   14b48:	cmp	r3, #0
   14b4c:	beq	14b68 <strspn@plt+0x3cb0>
   14b50:	cmp	r8, fp
   14b54:	strbhi	r3, [sl, fp]
   14b58:	ldrb	r3, [r2, #1]!
   14b5c:	add	fp, fp, #1
   14b60:	cmp	r3, #0
   14b64:	bne	14b50 <strspn@plt+0x3c98>
   14b68:	cmp	r8, fp
   14b6c:	movhi	r3, #0
   14b70:	strbhi	r3, [sl, fp]
   14b74:	b	13efc <strspn@plt+0x3044>
   14b78:	ldr	r3, [sp, #168]	; 0xa8
   14b7c:	ldr	sl, [sp, #32]
   14b80:	str	r3, [sp, #16]
   14b84:	ldr	r3, [sp, #164]	; 0xa4
   14b88:	mov	ip, #5
   14b8c:	str	r3, [sp, #12]
   14b90:	ldr	r3, [sp, #160]	; 0xa0
   14b94:	ldr	r2, [sp, #56]	; 0x38
   14b98:	str	r3, [sp, #8]
   14b9c:	ldr	r3, [sp, #156]	; 0x9c
   14ba0:	ldr	r1, [sp, #72]	; 0x48
   14ba4:	str	r3, [sp, #4]
   14ba8:	mov	r0, sl
   14bac:	ldr	r3, [sp, #24]
   14bb0:	str	ip, [sp]
   14bb4:	bl	136dc <strspn@plt+0x2824>
   14bb8:	mov	fp, r0
   14bbc:	b	13efc <strspn@plt+0x3044>
   14bc0:	mov	r8, fp
   14bc4:	ldr	sl, [sp, #32]
   14bc8:	mov	fp, r7
   14bcc:	mov	r2, r3
   14bd0:	b	14b28 <strspn@plt+0x3c70>
   14bd4:	mov	r8, fp
   14bd8:	ldr	sl, [sp, #32]
   14bdc:	mov	fp, r7
   14be0:	b	14b28 <strspn@plt+0x3c70>
   14be4:	ldr	sl, [sp, #32]
   14be8:	mov	r8, fp
   14bec:	b	13eb8 <strspn@plt+0x3000>
   14bf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14bf4:	sub	sp, sp, #52	; 0x34
   14bf8:	mov	r4, r0
   14bfc:	mov	r5, r3
   14c00:	mov	sl, r1
   14c04:	mov	fp, r2
   14c08:	bl	10df8 <__errno_location@plt>
   14c0c:	ldr	r7, [pc, #412]	; 14db0 <strspn@plt+0x3ef8>
   14c10:	cmn	r4, #-2147483647	; 0x80000001
   14c14:	ldr	r6, [r7]
   14c18:	mov	r8, r0
   14c1c:	movne	r0, #0
   14c20:	moveq	r0, #1
   14c24:	ldr	r3, [r8]
   14c28:	orrs	r0, r0, r4, lsr #31
   14c2c:	str	r3, [sp, #24]
   14c30:	bne	14dac <strspn@plt+0x3ef4>
   14c34:	ldr	r2, [r7, #4]
   14c38:	cmp	r4, r2
   14c3c:	blt	14c9c <strspn@plt+0x3de4>
   14c40:	add	r9, r7, #8
   14c44:	cmp	r6, r9
   14c48:	str	r2, [sp, #44]	; 0x2c
   14c4c:	beq	14d7c <strspn@plt+0x3ec4>
   14c50:	mov	r3, #8
   14c54:	sub	r2, r4, r2
   14c58:	mov	r0, r6
   14c5c:	str	r3, [sp]
   14c60:	add	r2, r2, #1
   14c64:	mvn	r3, #-2147483648	; 0x80000000
   14c68:	add	r1, sp, #44	; 0x2c
   14c6c:	bl	15bac <strspn@plt+0x4cf4>
   14c70:	mov	r6, r0
   14c74:	str	r0, [r7]
   14c78:	ldr	r0, [r7, #4]
   14c7c:	ldr	r2, [sp, #44]	; 0x2c
   14c80:	mov	r1, #0
   14c84:	sub	r2, r2, r0
   14c88:	add	r0, r6, r0, lsl #3
   14c8c:	lsl	r2, r2, #3
   14c90:	bl	10e10 <memset@plt>
   14c94:	ldr	r3, [sp, #44]	; 0x2c
   14c98:	str	r3, [r7, #4]
   14c9c:	add	r3, r6, r4, lsl #3
   14ca0:	ldr	r1, [r5, #4]
   14ca4:	ldr	r7, [r3, #4]
   14ca8:	ldr	r9, [r6, r4, lsl #3]
   14cac:	ldr	r2, [r5, #40]	; 0x28
   14cb0:	ldr	ip, [r5, #44]	; 0x2c
   14cb4:	add	r0, r5, #8
   14cb8:	str	r3, [sp, #28]
   14cbc:	ldr	r3, [r5]
   14cc0:	orr	r1, r1, #1
   14cc4:	mov	lr, r0
   14cc8:	str	r1, [sp, #32]
   14ccc:	str	r0, [sp, #36]	; 0x24
   14cd0:	str	r1, [sp, #4]
   14cd4:	str	r2, [sp, #12]
   14cd8:	str	r3, [sp]
   14cdc:	mov	r0, r7
   14ce0:	mov	r1, r9
   14ce4:	str	ip, [sp, #16]
   14ce8:	str	lr, [sp, #8]
   14cec:	mov	r3, fp
   14cf0:	mov	r2, sl
   14cf4:	bl	136dc <strspn@plt+0x2824>
   14cf8:	cmp	r9, r0
   14cfc:	bhi	14d68 <strspn@plt+0x3eb0>
   14d00:	ldr	r3, [pc, #172]	; 14db4 <strspn@plt+0x3efc>
   14d04:	add	r9, r0, #1
   14d08:	cmp	r7, r3
   14d0c:	str	r9, [r6, r4, lsl #3]
   14d10:	beq	14d1c <strspn@plt+0x3e64>
   14d14:	mov	r0, r7
   14d18:	bl	12424 <strspn@plt+0x156c>
   14d1c:	mov	r0, r9
   14d20:	bl	15a48 <strspn@plt+0x4b90>
   14d24:	ldr	lr, [sp, #28]
   14d28:	ldr	ip, [r5, #44]	; 0x2c
   14d2c:	ldr	r4, [r5, #40]	; 0x28
   14d30:	mov	r3, fp
   14d34:	mov	r2, sl
   14d38:	mov	r1, r9
   14d3c:	str	r0, [lr, #4]
   14d40:	ldr	lr, [r5]
   14d44:	ldr	r5, [sp, #36]	; 0x24
   14d48:	str	ip, [sp, #16]
   14d4c:	str	r5, [sp, #8]
   14d50:	ldr	r5, [sp, #32]
   14d54:	str	r4, [sp, #12]
   14d58:	str	r5, [sp, #4]
   14d5c:	str	lr, [sp]
   14d60:	mov	r7, r0
   14d64:	bl	136dc <strspn@plt+0x2824>
   14d68:	ldr	r3, [sp, #24]
   14d6c:	mov	r0, r7
   14d70:	str	r3, [r8]
   14d74:	add	sp, sp, #52	; 0x34
   14d78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d7c:	mov	r3, #8
   14d80:	sub	r2, r4, r2
   14d84:	str	r3, [sp]
   14d88:	add	r1, sp, #44	; 0x2c
   14d8c:	add	r2, r2, #1
   14d90:	mvn	r3, #-2147483648	; 0x80000000
   14d94:	bl	15bac <strspn@plt+0x4cf4>
   14d98:	mov	r6, r0
   14d9c:	ldm	r9, {r0, r1}
   14da0:	str	r6, [r7]
   14da4:	stm	r6, {r0, r1}
   14da8:	b	14c78 <strspn@plt+0x3dc0>
   14dac:	bl	10eac <abort@plt>
   14db0:	strdeq	r8, [r2], -r4
   14db4:	andeq	r8, r2, r0, ror r1
   14db8:	push	{r4, r5, r6, lr}
   14dbc:	mov	r5, r0
   14dc0:	bl	10df8 <__errno_location@plt>
   14dc4:	cmp	r5, #0
   14dc8:	mov	r1, #48	; 0x30
   14dcc:	mov	r4, r0
   14dd0:	ldr	r0, [pc, #16]	; 14de8 <strspn@plt+0x3f30>
   14dd4:	ldr	r6, [r4]
   14dd8:	movne	r0, r5
   14ddc:	bl	15ea8 <strspn@plt+0x4ff0>
   14de0:	str	r6, [r4]
   14de4:	pop	{r4, r5, r6, pc}
   14de8:	andeq	r8, r2, r0, ror r2
   14dec:	ldr	r3, [pc, #12]	; 14e00 <strspn@plt+0x3f48>
   14df0:	cmp	r0, #0
   14df4:	moveq	r0, r3
   14df8:	ldr	r0, [r0]
   14dfc:	bx	lr
   14e00:	andeq	r8, r2, r0, ror r2
   14e04:	ldr	r3, [pc, #12]	; 14e18 <strspn@plt+0x3f60>
   14e08:	cmp	r0, #0
   14e0c:	moveq	r0, r3
   14e10:	str	r1, [r0]
   14e14:	bx	lr
   14e18:	andeq	r8, r2, r0, ror r2
   14e1c:	ldr	r3, [pc, #52]	; 14e58 <strspn@plt+0x3fa0>
   14e20:	cmp	r0, #0
   14e24:	moveq	r0, r3
   14e28:	add	r3, r0, #8
   14e2c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e30:	lsr	lr, r1, #5
   14e34:	and	r1, r1, #31
   14e38:	ldr	ip, [r3, lr, lsl #2]
   14e3c:	lsr	r0, ip, r1
   14e40:	eor	r2, r2, r0
   14e44:	and	r2, r2, #1
   14e48:	and	r0, r0, #1
   14e4c:	eor	r1, ip, r2, lsl r1
   14e50:	str	r1, [r3, lr, lsl #2]
   14e54:	pop	{pc}		; (ldr pc, [sp], #4)
   14e58:	andeq	r8, r2, r0, ror r2
   14e5c:	ldr	r3, [pc, #16]	; 14e74 <strspn@plt+0x3fbc>
   14e60:	cmp	r0, #0
   14e64:	movne	r3, r0
   14e68:	ldr	r0, [r3, #4]
   14e6c:	str	r1, [r3, #4]
   14e70:	bx	lr
   14e74:	andeq	r8, r2, r0, ror r2
   14e78:	ldr	r3, [pc, #44]	; 14eac <strspn@plt+0x3ff4>
   14e7c:	cmp	r0, #0
   14e80:	moveq	r0, r3
   14e84:	mov	ip, #10
   14e88:	cmp	r2, #0
   14e8c:	cmpne	r1, #0
   14e90:	str	ip, [r0]
   14e94:	beq	14ea4 <strspn@plt+0x3fec>
   14e98:	str	r1, [r0, #40]	; 0x28
   14e9c:	str	r2, [r0, #44]	; 0x2c
   14ea0:	bx	lr
   14ea4:	push	{r4, lr}
   14ea8:	bl	10eac <abort@plt>
   14eac:	andeq	r8, r2, r0, ror r2
   14eb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14eb4:	sub	sp, sp, #24
   14eb8:	ldr	ip, [pc, #108]	; 14f2c <strspn@plt+0x4074>
   14ebc:	ldr	r4, [sp, #56]	; 0x38
   14ec0:	mov	r9, r2
   14ec4:	cmp	r4, #0
   14ec8:	moveq	r4, ip
   14ecc:	mov	sl, r3
   14ed0:	mov	r7, r0
   14ed4:	mov	r8, r1
   14ed8:	bl	10df8 <__errno_location@plt>
   14edc:	ldr	r3, [r4, #44]	; 0x2c
   14ee0:	mov	r1, r8
   14ee4:	ldr	r6, [r0]
   14ee8:	str	r3, [sp, #16]
   14eec:	ldr	r2, [r4, #40]	; 0x28
   14ef0:	add	r3, r4, #8
   14ef4:	str	r3, [sp, #8]
   14ef8:	str	r2, [sp, #12]
   14efc:	ldr	r2, [r4, #4]
   14f00:	mov	r5, r0
   14f04:	str	r2, [sp, #4]
   14f08:	ldr	ip, [r4]
   14f0c:	mov	r3, sl
   14f10:	mov	r2, r9
   14f14:	mov	r0, r7
   14f18:	str	ip, [sp]
   14f1c:	bl	136dc <strspn@plt+0x2824>
   14f20:	str	r6, [r5]
   14f24:	add	sp, sp, #24
   14f28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f2c:	andeq	r8, r2, r0, ror r2
   14f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f34:	cmp	r3, #0
   14f38:	sub	sp, sp, #44	; 0x2c
   14f3c:	ldr	r4, [pc, #192]	; 15004 <strspn@plt+0x414c>
   14f40:	mov	r6, r2
   14f44:	movne	r4, r3
   14f48:	mov	r9, r1
   14f4c:	mov	r8, r0
   14f50:	bl	10df8 <__errno_location@plt>
   14f54:	ldr	r3, [r4, #44]	; 0x2c
   14f58:	ldr	r5, [r4, #4]
   14f5c:	add	sl, r4, #8
   14f60:	cmp	r6, #0
   14f64:	orreq	r5, r5, #1
   14f68:	mov	r1, #0
   14f6c:	ldr	r2, [r0]
   14f70:	str	r3, [sp, #16]
   14f74:	ldr	r3, [r4, #40]	; 0x28
   14f78:	stmib	sp, {r5, sl}
   14f7c:	str	r3, [sp, #12]
   14f80:	ldr	r3, [r4]
   14f84:	mov	r7, r0
   14f88:	str	r2, [sp, #28]
   14f8c:	str	r3, [sp]
   14f90:	mov	r2, r8
   14f94:	mov	r3, r9
   14f98:	mov	r0, r1
   14f9c:	bl	136dc <strspn@plt+0x2824>
   14fa0:	add	r1, r0, #1
   14fa4:	mov	fp, r0
   14fa8:	mov	r0, r1
   14fac:	str	r1, [sp, #36]	; 0x24
   14fb0:	bl	15a48 <strspn@plt+0x4b90>
   14fb4:	ldr	r3, [r4, #44]	; 0x2c
   14fb8:	mov	r2, r8
   14fbc:	str	r3, [sp, #16]
   14fc0:	ldr	r3, [r4, #40]	; 0x28
   14fc4:	str	r5, [sp, #4]
   14fc8:	str	r3, [sp, #12]
   14fcc:	str	sl, [sp, #8]
   14fd0:	ldr	ip, [r4]
   14fd4:	ldr	r1, [sp, #36]	; 0x24
   14fd8:	mov	r3, r9
   14fdc:	str	ip, [sp]
   14fe0:	str	r0, [sp, #32]
   14fe4:	bl	136dc <strspn@plt+0x2824>
   14fe8:	ldr	r2, [sp, #28]
   14fec:	cmp	r6, #0
   14ff0:	str	r2, [r7]
   14ff4:	ldr	r0, [sp, #32]
   14ff8:	strne	fp, [r6]
   14ffc:	add	sp, sp, #44	; 0x2c
   15000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15004:	andeq	r8, r2, r0, ror r2
   15008:	mov	r3, r2
   1500c:	mov	r2, #0
   15010:	b	14f30 <strspn@plt+0x4078>
   15014:	push	{r4, r5, r6, r7, r8, lr}
   15018:	ldr	r6, [pc, #116]	; 15094 <strspn@plt+0x41dc>
   1501c:	ldr	r3, [r6, #4]
   15020:	ldr	r7, [r6]
   15024:	cmp	r3, #1
   15028:	movgt	r5, r7
   1502c:	movgt	r4, #1
   15030:	ble	15050 <strspn@plt+0x4198>
   15034:	ldr	r0, [r5, #12]
   15038:	bl	12424 <strspn@plt+0x156c>
   1503c:	ldr	r3, [r6, #4]
   15040:	add	r4, r4, #1
   15044:	cmp	r3, r4
   15048:	add	r5, r5, #8
   1504c:	bgt	15034 <strspn@plt+0x417c>
   15050:	ldr	r0, [r7, #4]
   15054:	ldr	r4, [pc, #60]	; 15098 <strspn@plt+0x41e0>
   15058:	cmp	r0, r4
   1505c:	beq	15070 <strspn@plt+0x41b8>
   15060:	bl	12424 <strspn@plt+0x156c>
   15064:	mov	r3, #256	; 0x100
   15068:	str	r4, [r6, #12]
   1506c:	str	r3, [r6, #8]
   15070:	ldr	r4, [pc, #36]	; 1509c <strspn@plt+0x41e4>
   15074:	cmp	r7, r4
   15078:	beq	15088 <strspn@plt+0x41d0>
   1507c:	mov	r0, r7
   15080:	bl	12424 <strspn@plt+0x156c>
   15084:	str	r4, [r6]
   15088:	mov	r3, #1
   1508c:	str	r3, [r6, #4]
   15090:	pop	{r4, r5, r6, r7, r8, pc}
   15094:	strdeq	r8, [r2], -r4
   15098:	andeq	r8, r2, r0, ror r1
   1509c:	strdeq	r8, [r2], -ip
   150a0:	ldr	r3, [pc, #4]	; 150ac <strspn@plt+0x41f4>
   150a4:	mvn	r2, #0
   150a8:	b	14bf0 <strspn@plt+0x3d38>
   150ac:	andeq	r8, r2, r0, ror r2
   150b0:	ldr	r3, [pc]	; 150b8 <strspn@plt+0x4200>
   150b4:	b	14bf0 <strspn@plt+0x3d38>
   150b8:	andeq	r8, r2, r0, ror r2
   150bc:	mov	r1, r0
   150c0:	ldr	r3, [pc, #8]	; 150d0 <strspn@plt+0x4218>
   150c4:	mvn	r2, #0
   150c8:	mov	r0, #0
   150cc:	b	14bf0 <strspn@plt+0x3d38>
   150d0:	andeq	r8, r2, r0, ror r2
   150d4:	mov	r2, r1
   150d8:	ldr	r3, [pc, #8]	; 150e8 <strspn@plt+0x4230>
   150dc:	mov	r1, r0
   150e0:	mov	r0, #0
   150e4:	b	14bf0 <strspn@plt+0x3d38>
   150e8:	andeq	r8, r2, r0, ror r2
   150ec:	push	{r4, r5, lr}
   150f0:	sub	sp, sp, #52	; 0x34
   150f4:	mov	r5, r2
   150f8:	mov	r4, r0
   150fc:	mov	r0, sp
   15100:	bl	1358c <strspn@plt+0x26d4>
   15104:	mov	r3, sp
   15108:	mov	r1, r5
   1510c:	mov	r0, r4
   15110:	mvn	r2, #0
   15114:	bl	14bf0 <strspn@plt+0x3d38>
   15118:	add	sp, sp, #52	; 0x34
   1511c:	pop	{r4, r5, pc}
   15120:	push	{r4, r5, r6, lr}
   15124:	sub	sp, sp, #48	; 0x30
   15128:	mov	r5, r2
   1512c:	mov	r6, r3
   15130:	mov	r4, r0
   15134:	mov	r0, sp
   15138:	bl	1358c <strspn@plt+0x26d4>
   1513c:	mov	r3, sp
   15140:	mov	r2, r6
   15144:	mov	r1, r5
   15148:	mov	r0, r4
   1514c:	bl	14bf0 <strspn@plt+0x3d38>
   15150:	add	sp, sp, #48	; 0x30
   15154:	pop	{r4, r5, r6, pc}
   15158:	mov	r2, r1
   1515c:	mov	r1, r0
   15160:	mov	r0, #0
   15164:	b	150ec <strspn@plt+0x4234>
   15168:	mov	r3, r2
   1516c:	mov	r2, r1
   15170:	mov	r1, r0
   15174:	mov	r0, #0
   15178:	b	15120 <strspn@plt+0x4268>
   1517c:	push	{r4, r5, r6, r7, r8, lr}
   15180:	mov	r7, r0
   15184:	ldr	lr, [pc, #100]	; 151f0 <strspn@plt+0x4338>
   15188:	mov	r8, r1
   1518c:	mov	r4, r2
   15190:	ldm	lr!, {r0, r1, r2, r3}
   15194:	sub	sp, sp, #48	; 0x30
   15198:	mov	ip, sp
   1519c:	lsr	r5, r4, #5
   151a0:	stmia	ip!, {r0, r1, r2, r3}
   151a4:	add	r6, sp, #8
   151a8:	ldm	lr!, {r0, r1, r2, r3}
   151ac:	and	r4, r4, #31
   151b0:	stmia	ip!, {r0, r1, r2, r3}
   151b4:	ldm	lr, {r0, r1, r2, r3}
   151b8:	stm	ip, {r0, r1, r2, r3}
   151bc:	mov	r2, r8
   151c0:	ldr	lr, [r6, r5, lsl #2]
   151c4:	mov	r1, r7
   151c8:	mov	r3, sp
   151cc:	lsr	ip, lr, r4
   151d0:	eor	ip, ip, #1
   151d4:	and	ip, ip, #1
   151d8:	mov	r0, #0
   151dc:	eor	r4, lr, ip, lsl r4
   151e0:	str	r4, [r6, r5, lsl #2]
   151e4:	bl	14bf0 <strspn@plt+0x3d38>
   151e8:	add	sp, sp, #48	; 0x30
   151ec:	pop	{r4, r5, r6, r7, r8, pc}
   151f0:	andeq	r8, r2, r0, ror r2
   151f4:	mov	r2, r1
   151f8:	mvn	r1, #0
   151fc:	b	1517c <strspn@plt+0x42c4>
   15200:	mov	r2, #58	; 0x3a
   15204:	mvn	r1, #0
   15208:	b	1517c <strspn@plt+0x42c4>
   1520c:	mov	r2, #58	; 0x3a
   15210:	b	1517c <strspn@plt+0x42c4>
   15214:	push	{r4, r5, r6, r7, lr}
   15218:	sub	sp, sp, #100	; 0x64
   1521c:	mov	r6, r0
   15220:	mov	r0, sp
   15224:	mov	r7, r2
   15228:	bl	1358c <strspn@plt+0x26d4>
   1522c:	mov	ip, sp
   15230:	add	lr, sp, #48	; 0x30
   15234:	ldm	ip!, {r0, r1, r2, r3}
   15238:	stmia	lr!, {r0, r1, r2, r3}
   1523c:	ldm	ip!, {r0, r1, r2, r3}
   15240:	ldr	r5, [sp, #60]	; 0x3c
   15244:	stmia	lr!, {r0, r1, r2, r3}
   15248:	mvn	r4, r5
   1524c:	ldm	ip, {r0, r1, r2, r3}
   15250:	and	ip, r4, #67108864	; 0x4000000
   15254:	eor	ip, ip, r5
   15258:	str	ip, [sp, #60]	; 0x3c
   1525c:	stm	lr, {r0, r1, r2, r3}
   15260:	mov	r1, r7
   15264:	mov	r0, r6
   15268:	add	r3, sp, #48	; 0x30
   1526c:	mvn	r2, #0
   15270:	bl	14bf0 <strspn@plt+0x3d38>
   15274:	add	sp, sp, #100	; 0x64
   15278:	pop	{r4, r5, r6, r7, pc}
   1527c:	push	{r4, r5, r6, r7, r8, lr}
   15280:	mov	r5, r1
   15284:	ldr	lr, [pc, #100]	; 152f0 <strspn@plt+0x4438>
   15288:	mov	r4, r2
   1528c:	mov	r7, r0
   15290:	mov	r8, r3
   15294:	ldm	lr!, {r0, r1, r2, r3}
   15298:	sub	sp, sp, #48	; 0x30
   1529c:	mov	ip, sp
   152a0:	mov	r6, #10
   152a4:	stmia	ip!, {r0, r1, r2, r3}
   152a8:	cmp	r4, #0
   152ac:	cmpne	r5, #0
   152b0:	ldm	lr!, {r0, r1, r2, r3}
   152b4:	str	r6, [sp]
   152b8:	stmia	ip!, {r0, r1, r2, r3}
   152bc:	ldm	lr, {r0, r1, r2, r3}
   152c0:	stm	ip, {r0, r1, r2, r3}
   152c4:	beq	152ec <strspn@plt+0x4434>
   152c8:	mov	r3, sp
   152cc:	mov	r1, r8
   152d0:	mov	r0, r7
   152d4:	ldr	r2, [sp, #72]	; 0x48
   152d8:	str	r5, [sp, #40]	; 0x28
   152dc:	str	r4, [sp, #44]	; 0x2c
   152e0:	bl	14bf0 <strspn@plt+0x3d38>
   152e4:	add	sp, sp, #48	; 0x30
   152e8:	pop	{r4, r5, r6, r7, r8, pc}
   152ec:	bl	10eac <abort@plt>
   152f0:	andeq	r8, r2, r0, ror r2
   152f4:	push	{lr}		; (str lr, [sp, #-4]!)
   152f8:	sub	sp, sp, #12
   152fc:	mvn	ip, #0
   15300:	str	ip, [sp]
   15304:	bl	1527c <strspn@plt+0x43c4>
   15308:	add	sp, sp, #12
   1530c:	pop	{pc}		; (ldr pc, [sp], #4)
   15310:	push	{lr}		; (str lr, [sp, #-4]!)
   15314:	sub	sp, sp, #12
   15318:	mvn	ip, #0
   1531c:	mov	r3, r2
   15320:	str	ip, [sp]
   15324:	mov	r2, r1
   15328:	mov	r1, r0
   1532c:	mov	r0, #0
   15330:	bl	1527c <strspn@plt+0x43c4>
   15334:	add	sp, sp, #12
   15338:	pop	{pc}		; (ldr pc, [sp], #4)
   1533c:	push	{lr}		; (str lr, [sp, #-4]!)
   15340:	sub	sp, sp, #12
   15344:	str	r3, [sp]
   15348:	mov	r3, r2
   1534c:	mov	r2, r1
   15350:	mov	r1, r0
   15354:	mov	r0, #0
   15358:	bl	1527c <strspn@plt+0x43c4>
   1535c:	add	sp, sp, #12
   15360:	pop	{pc}		; (ldr pc, [sp], #4)
   15364:	ldr	r3, [pc]	; 1536c <strspn@plt+0x44b4>
   15368:	b	14bf0 <strspn@plt+0x3d38>
   1536c:	andeq	r8, r2, r4, lsl #2
   15370:	mov	r2, r1
   15374:	ldr	r3, [pc, #8]	; 15384 <strspn@plt+0x44cc>
   15378:	mov	r1, r0
   1537c:	mov	r0, #0
   15380:	b	14bf0 <strspn@plt+0x3d38>
   15384:	andeq	r8, r2, r4, lsl #2
   15388:	ldr	r3, [pc, #4]	; 15394 <strspn@plt+0x44dc>
   1538c:	mvn	r2, #0
   15390:	b	14bf0 <strspn@plt+0x3d38>
   15394:	andeq	r8, r2, r4, lsl #2
   15398:	mov	r1, r0
   1539c:	ldr	r3, [pc, #8]	; 153ac <strspn@plt+0x44f4>
   153a0:	mvn	r2, #0
   153a4:	mov	r0, #0
   153a8:	b	14bf0 <strspn@plt+0x3d38>
   153ac:	andeq	r8, r2, r4, lsl #2
   153b0:	push	{r4, r5, r6, lr}
   153b4:	ldr	r4, [r0], #8
   153b8:	cmp	r4, r0
   153bc:	beq	153dc <strspn@plt+0x4524>
   153c0:	mov	r0, r4
   153c4:	bl	1601c <strspn@plt+0x5164>
   153c8:	cmp	r0, #0
   153cc:	movne	r3, r0
   153d0:	moveq	r3, r4
   153d4:	mov	r0, r3
   153d8:	pop	{r4, r5, r6, pc}
   153dc:	mov	r0, r1
   153e0:	mov	r5, r1
   153e4:	bl	15ff0 <strspn@plt+0x5138>
   153e8:	subs	r3, r0, #0
   153ec:	beq	153d4 <strspn@plt+0x451c>
   153f0:	mov	r2, r5
   153f4:	mov	r1, r4
   153f8:	pop	{r4, r5, r6, lr}
   153fc:	b	10cc0 <memcpy@plt>
   15400:	push	{r4, r5, r6, lr}
   15404:	mov	r5, r0
   15408:	ldr	r3, [r0, #4]
   1540c:	mov	r4, r0
   15410:	ldr	r0, [r5], #8
   15414:	lsl	r6, r3, #1
   15418:	cmp	r0, r5
   1541c:	beq	15428 <strspn@plt+0x4570>
   15420:	bl	12424 <strspn@plt+0x156c>
   15424:	ldr	r3, [r4, #4]
   15428:	cmp	r6, r3
   1542c:	bcc	1544c <strspn@plt+0x4594>
   15430:	mov	r0, r6
   15434:	bl	15ff0 <strspn@plt+0x5138>
   15438:	subs	r3, r0, #0
   1543c:	beq	15458 <strspn@plt+0x45a0>
   15440:	mov	r0, #1
   15444:	stm	r4, {r3, r6}
   15448:	pop	{r4, r5, r6, pc}
   1544c:	bl	10df8 <__errno_location@plt>
   15450:	mov	r3, #12
   15454:	str	r3, [r0]
   15458:	mov	r3, #1024	; 0x400
   1545c:	str	r5, [r4]
   15460:	str	r3, [r4, #4]
   15464:	mov	r0, #0
   15468:	pop	{r4, r5, r6, pc}
   1546c:	push	{r4, r5, r6, r7, r8, lr}
   15470:	mov	r5, r0
   15474:	ldr	r3, [r0, #4]
   15478:	ldr	r8, [r5], #8
   1547c:	mov	r4, r0
   15480:	cmp	r8, r5
   15484:	lsl	r7, r3, #1
   15488:	beq	154e0 <strspn@plt+0x4628>
   1548c:	cmp	r3, r7
   15490:	bhi	154b8 <strspn@plt+0x4600>
   15494:	mov	r0, r8
   15498:	mov	r1, r7
   1549c:	bl	1601c <strspn@plt+0x5164>
   154a0:	subs	r6, r0, #0
   154a4:	ldreq	r8, [r4]
   154a8:	beq	154c4 <strspn@plt+0x460c>
   154ac:	stm	r4, {r6, r7}
   154b0:	mov	r0, #1
   154b4:	pop	{r4, r5, r6, r7, r8, pc}
   154b8:	bl	10df8 <__errno_location@plt>
   154bc:	mov	r3, #12
   154c0:	str	r3, [r0]
   154c4:	mov	r0, r8
   154c8:	bl	12424 <strspn@plt+0x156c>
   154cc:	mov	r3, #1024	; 0x400
   154d0:	str	r5, [r4]
   154d4:	str	r3, [r4, #4]
   154d8:	mov	r0, #0
   154dc:	pop	{r4, r5, r6, r7, r8, pc}
   154e0:	mov	r0, r7
   154e4:	bl	15ff0 <strspn@plt+0x5138>
   154e8:	subs	r6, r0, #0
   154ec:	beq	154d8 <strspn@plt+0x4620>
   154f0:	mov	r1, r8
   154f4:	ldr	r2, [r4, #4]
   154f8:	bl	10cc0 <memcpy@plt>
   154fc:	b	154ac <strspn@plt+0x45f4>
   15500:	push	{r4, r5, r6, lr}
   15504:	sub	sp, sp, #32
   15508:	cmp	r1, #0
   1550c:	mov	r4, r0
   15510:	ldr	r5, [sp, #48]	; 0x30
   15514:	ldr	r6, [sp, #52]	; 0x34
   15518:	beq	15830 <strspn@plt+0x4978>
   1551c:	stm	sp, {r2, r3}
   15520:	mov	r3, r1
   15524:	ldr	r2, [pc, #808]	; 15854 <strspn@plt+0x499c>
   15528:	mov	r1, #1
   1552c:	bl	10e34 <__fprintf_chk@plt>
   15530:	mov	r2, #5
   15534:	ldr	r1, [pc, #796]	; 15858 <strspn@plt+0x49a0>
   15538:	mov	r0, #0
   1553c:	bl	10cf0 <dcgettext@plt>
   15540:	ldr	r3, [pc, #788]	; 1585c <strspn@plt+0x49a4>
   15544:	ldr	r2, [pc, #788]	; 15860 <strspn@plt+0x49a8>
   15548:	str	r3, [sp]
   1554c:	mov	r1, #1
   15550:	mov	r3, r0
   15554:	mov	r0, r4
   15558:	bl	10e34 <__fprintf_chk@plt>
   1555c:	mov	r1, r4
   15560:	mov	r0, #10
   15564:	bl	10ce4 <fputc_unlocked@plt>
   15568:	mov	r2, #5
   1556c:	ldr	r1, [pc, #752]	; 15864 <strspn@plt+0x49ac>
   15570:	mov	r0, #0
   15574:	bl	10cf0 <dcgettext@plt>
   15578:	mov	r1, #1
   1557c:	ldr	r3, [pc, #740]	; 15868 <strspn@plt+0x49b0>
   15580:	mov	r2, r0
   15584:	mov	r0, r4
   15588:	bl	10e34 <__fprintf_chk@plt>
   1558c:	mov	r1, r4
   15590:	mov	r0, #10
   15594:	bl	10ce4 <fputc_unlocked@plt>
   15598:	cmp	r6, #9
   1559c:	ldrls	pc, [pc, r6, lsl #2]
   155a0:	b	15848 <strspn@plt+0x4990>
   155a4:	andeq	r5, r1, r8, lsr #12
   155a8:	andeq	r5, r1, r0, lsr r6
   155ac:	andeq	r5, r1, ip, asr r6
   155b0:	muleq	r1, r0, r6
   155b4:	andeq	r5, r1, ip, asr #13
   155b8:	andeq	r5, r1, r8, lsl #14
   155bc:	andeq	r5, r1, r4, asr #14
   155c0:	andeq	r5, r1, r8, lsl #15
   155c4:	ldrdeq	r5, [r1], -r8
   155c8:	andeq	r5, r1, ip, asr #11
   155cc:	ldr	r1, [pc, #664]	; 1586c <strspn@plt+0x49b4>
   155d0:	mov	r2, #5
   155d4:	mov	r0, #0
   155d8:	bl	10cf0 <dcgettext@plt>
   155dc:	ldr	ip, [r5, #32]
   155e0:	ldr	r1, [r5, #28]
   155e4:	ldr	r2, [r5, #24]
   155e8:	ldr	r3, [r5]
   155ec:	ldr	r6, [r5, #20]
   155f0:	str	ip, [sp, #28]
   155f4:	ldr	lr, [r5, #16]
   155f8:	str	r1, [sp, #24]
   155fc:	ldr	ip, [r5, #12]
   15600:	str	r2, [sp, #20]
   15604:	ldr	r1, [r5, #8]
   15608:	ldr	r2, [r5, #4]
   1560c:	str	r6, [sp, #16]
   15610:	stmib	sp, {r1, ip, lr}
   15614:	mov	r1, #1
   15618:	str	r2, [sp]
   1561c:	mov	r2, r0
   15620:	mov	r0, r4
   15624:	bl	10e34 <__fprintf_chk@plt>
   15628:	add	sp, sp, #32
   1562c:	pop	{r4, r5, r6, pc}
   15630:	mov	r2, #5
   15634:	ldr	r1, [pc, #564]	; 15870 <strspn@plt+0x49b8>
   15638:	mov	r0, #0
   1563c:	bl	10cf0 <dcgettext@plt>
   15640:	ldr	r3, [r5]
   15644:	mov	r1, #1
   15648:	mov	r2, r0
   1564c:	mov	r0, r4
   15650:	add	sp, sp, #32
   15654:	pop	{r4, r5, r6, lr}
   15658:	b	10e34 <__fprintf_chk@plt>
   1565c:	mov	r2, #5
   15660:	ldr	r1, [pc, #524]	; 15874 <strspn@plt+0x49bc>
   15664:	mov	r0, #0
   15668:	bl	10cf0 <dcgettext@plt>
   1566c:	ldr	r2, [r5, #4]
   15670:	ldr	r3, [r5]
   15674:	mov	r1, #1
   15678:	str	r2, [sp, #48]	; 0x30
   1567c:	mov	r2, r0
   15680:	mov	r0, r4
   15684:	add	sp, sp, #32
   15688:	pop	{r4, r5, r6, lr}
   1568c:	b	10e34 <__fprintf_chk@plt>
   15690:	mov	r2, #5
   15694:	ldr	r1, [pc, #476]	; 15878 <strspn@plt+0x49c0>
   15698:	mov	r0, #0
   1569c:	bl	10cf0 <dcgettext@plt>
   156a0:	ldr	r1, [r5, #8]
   156a4:	ldr	r2, [r5, #4]
   156a8:	ldr	r3, [r5]
   156ac:	str	r1, [sp, #52]	; 0x34
   156b0:	str	r2, [sp, #48]	; 0x30
   156b4:	mov	r1, #1
   156b8:	mov	r2, r0
   156bc:	mov	r0, r4
   156c0:	add	sp, sp, #32
   156c4:	pop	{r4, r5, r6, lr}
   156c8:	b	10e34 <__fprintf_chk@plt>
   156cc:	mov	r2, #5
   156d0:	ldr	r1, [pc, #420]	; 1587c <strspn@plt+0x49c4>
   156d4:	mov	r0, #0
   156d8:	bl	10cf0 <dcgettext@plt>
   156dc:	ldr	r1, [r5, #8]
   156e0:	ldr	ip, [r5, #12]
   156e4:	ldr	r2, [r5, #4]
   156e8:	ldr	r3, [r5]
   156ec:	stmib	sp, {r1, ip}
   156f0:	str	r2, [sp]
   156f4:	mov	r1, #1
   156f8:	mov	r2, r0
   156fc:	mov	r0, r4
   15700:	bl	10e34 <__fprintf_chk@plt>
   15704:	b	15628 <strspn@plt+0x4770>
   15708:	mov	r2, #5
   1570c:	ldr	r1, [pc, #364]	; 15880 <strspn@plt+0x49c8>
   15710:	mov	r0, #0
   15714:	bl	10cf0 <dcgettext@plt>
   15718:	add	r1, r5, #8
   1571c:	ldr	r2, [r5, #4]
   15720:	ldm	r1, {r1, ip, lr}
   15724:	ldr	r3, [r5]
   15728:	str	r2, [sp]
   1572c:	stmib	sp, {r1, ip, lr}
   15730:	mov	r1, #1
   15734:	mov	r2, r0
   15738:	mov	r0, r4
   1573c:	bl	10e34 <__fprintf_chk@plt>
   15740:	b	15628 <strspn@plt+0x4770>
   15744:	mov	r2, #5
   15748:	ldr	r1, [pc, #308]	; 15884 <strspn@plt+0x49cc>
   1574c:	mov	r0, #0
   15750:	bl	10cf0 <dcgettext@plt>
   15754:	add	r1, r5, #8
   15758:	ldr	r2, [r5, #4]
   1575c:	ldm	r1, {r1, ip, lr}
   15760:	ldr	r6, [r5, #20]
   15764:	ldr	r3, [r5]
   15768:	stmib	sp, {r1, ip, lr}
   1576c:	mov	r1, #1
   15770:	str	r2, [sp]
   15774:	str	r6, [sp, #16]
   15778:	mov	r2, r0
   1577c:	mov	r0, r4
   15780:	bl	10e34 <__fprintf_chk@plt>
   15784:	b	15628 <strspn@plt+0x4770>
   15788:	mov	r2, #5
   1578c:	ldr	r1, [pc, #244]	; 15888 <strspn@plt+0x49d0>
   15790:	mov	r0, #0
   15794:	bl	10cf0 <dcgettext@plt>
   15798:	ldr	r2, [r5, #24]
   1579c:	ldr	r3, [r5]
   157a0:	ldr	r6, [r5, #20]
   157a4:	ldr	lr, [r5, #16]
   157a8:	ldr	ip, [r5, #12]
   157ac:	str	r2, [sp, #20]
   157b0:	ldr	r1, [r5, #8]
   157b4:	ldr	r2, [r5, #4]
   157b8:	str	r6, [sp, #16]
   157bc:	stmib	sp, {r1, ip, lr}
   157c0:	mov	r1, #1
   157c4:	str	r2, [sp]
   157c8:	mov	r2, r0
   157cc:	mov	r0, r4
   157d0:	bl	10e34 <__fprintf_chk@plt>
   157d4:	b	15628 <strspn@plt+0x4770>
   157d8:	mov	r2, #5
   157dc:	ldr	r1, [pc, #168]	; 1588c <strspn@plt+0x49d4>
   157e0:	mov	r0, #0
   157e4:	bl	10cf0 <dcgettext@plt>
   157e8:	ldr	r1, [r5, #28]
   157ec:	ldr	r2, [r5, #24]
   157f0:	ldr	r3, [r5]
   157f4:	ldr	r6, [r5, #20]
   157f8:	ldr	lr, [r5, #16]
   157fc:	str	r1, [sp, #24]
   15800:	ldr	ip, [r5, #12]
   15804:	str	r2, [sp, #20]
   15808:	ldr	r1, [r5, #8]
   1580c:	ldr	r2, [r5, #4]
   15810:	str	r6, [sp, #16]
   15814:	stmib	sp, {r1, ip, lr}
   15818:	mov	r1, #1
   1581c:	str	r2, [sp]
   15820:	mov	r2, r0
   15824:	mov	r0, r4
   15828:	bl	10e34 <__fprintf_chk@plt>
   1582c:	b	15628 <strspn@plt+0x4770>
   15830:	str	r3, [sp]
   15834:	mov	r1, #1
   15838:	mov	r3, r2
   1583c:	ldr	r2, [pc, #76]	; 15890 <strspn@plt+0x49d8>
   15840:	bl	10e34 <__fprintf_chk@plt>
   15844:	b	15530 <strspn@plt+0x4678>
   15848:	mov	r2, #5
   1584c:	ldr	r1, [pc, #64]	; 15894 <strspn@plt+0x49dc>
   15850:	b	155d4 <strspn@plt+0x471c>
   15854:	muleq	r1, r0, r3
   15858:	andeq	r7, r1, r4, lsr #7
   1585c:	andeq	r0, r0, r6, ror #15
   15860:	andeq	r7, r1, ip, ror r6
   15864:	andeq	r7, r1, r8, lsr #7
   15868:	andeq	r7, r1, r4, asr r4
   1586c:	andeq	r7, r1, r4, lsl #11
   15870:	andeq	r7, r1, r8, ror r4
   15874:	andeq	r7, r1, r8, lsl #9
   15878:	andeq	r7, r1, r0, lsr #9
   1587c:			; <UNDEFINED> instruction: 0x000174bc
   15880:	ldrdeq	r7, [r1], -ip
   15884:	andeq	r7, r1, r0, lsl #10
   15888:	andeq	r7, r1, r8, lsr #10
   1588c:	andeq	r7, r1, r4, asr r5
   15890:	muleq	r1, ip, r3
   15894:			; <UNDEFINED> instruction: 0x000175b8
   15898:	push	{r4, r5, lr}
   1589c:	sub	sp, sp, #12
   158a0:	ldr	r5, [sp, #24]
   158a4:	ldr	ip, [r5]
   158a8:	cmp	ip, #0
   158ac:	beq	158c8 <strspn@plt+0x4a10>
   158b0:	mov	lr, r5
   158b4:	mov	ip, #0
   158b8:	ldr	r4, [lr, #4]!
   158bc:	add	ip, ip, #1
   158c0:	cmp	r4, #0
   158c4:	bne	158b8 <strspn@plt+0x4a00>
   158c8:	stm	sp, {r5, ip}
   158cc:	bl	15500 <strspn@plt+0x4648>
   158d0:	add	sp, sp, #12
   158d4:	pop	{r4, r5, pc}
   158d8:	push	{r4, r5, lr}
   158dc:	sub	sp, sp, #52	; 0x34
   158e0:	add	r5, sp, #4
   158e4:	ldr	r4, [sp, #64]	; 0x40
   158e8:	mov	ip, #0
   158ec:	sub	r4, r4, #4
   158f0:	ldr	lr, [r4, #4]!
   158f4:	cmp	lr, #0
   158f8:	str	lr, [r5, #4]!
   158fc:	beq	1590c <strspn@plt+0x4a54>
   15900:	add	ip, ip, #1
   15904:	cmp	ip, #10
   15908:	bne	158f0 <strspn@plt+0x4a38>
   1590c:	add	lr, sp, #8
   15910:	str	ip, [sp, #4]
   15914:	str	lr, [sp]
   15918:	bl	15500 <strspn@plt+0x4648>
   1591c:	add	sp, sp, #52	; 0x34
   15920:	pop	{r4, r5, pc}
   15924:	push	{r3}		; (str r3, [sp, #-4]!)
   15928:	push	{r4, lr}
   1592c:	sub	sp, sp, #60	; 0x3c
   15930:	add	lr, sp, #56	; 0x38
   15934:	add	r3, sp, #72	; 0x48
   15938:	str	r3, [lr, #-44]!	; 0xffffffd4
   1593c:	add	r4, sp, #68	; 0x44
   15940:	mov	r3, #0
   15944:	ldr	ip, [r4, #4]!
   15948:	cmp	ip, #0
   1594c:	str	ip, [lr, #4]!
   15950:	beq	15960 <strspn@plt+0x4aa8>
   15954:	add	r3, r3, #1
   15958:	cmp	r3, #10
   1595c:	bne	15944 <strspn@plt+0x4a8c>
   15960:	add	ip, sp, #16
   15964:	str	r3, [sp, #4]
   15968:	str	ip, [sp]
   1596c:	ldr	r3, [sp, #68]	; 0x44
   15970:	bl	15500 <strspn@plt+0x4648>
   15974:	add	sp, sp, #60	; 0x3c
   15978:	pop	{r4, lr}
   1597c:	add	sp, sp, #4
   15980:	bx	lr
   15984:	ldr	r3, [pc, #116]	; 15a00 <strspn@plt+0x4b48>
   15988:	push	{r4, lr}
   1598c:	mov	r0, #10
   15990:	ldr	r1, [r3]
   15994:	bl	10ce4 <fputc_unlocked@plt>
   15998:	mov	r2, #5
   1599c:	ldr	r1, [pc, #96]	; 15a04 <strspn@plt+0x4b4c>
   159a0:	mov	r0, #0
   159a4:	bl	10cf0 <dcgettext@plt>
   159a8:	ldr	r2, [pc, #88]	; 15a08 <strspn@plt+0x4b50>
   159ac:	mov	r1, r0
   159b0:	mov	r0, #1
   159b4:	bl	10e1c <__printf_chk@plt>
   159b8:	mov	r2, #5
   159bc:	ldr	r1, [pc, #72]	; 15a0c <strspn@plt+0x4b54>
   159c0:	mov	r0, #0
   159c4:	bl	10cf0 <dcgettext@plt>
   159c8:	ldr	r3, [pc, #64]	; 15a10 <strspn@plt+0x4b58>
   159cc:	ldr	r2, [pc, #64]	; 15a14 <strspn@plt+0x4b5c>
   159d0:	mov	r1, r0
   159d4:	mov	r0, #1
   159d8:	bl	10e1c <__printf_chk@plt>
   159dc:	mov	r2, #5
   159e0:	ldr	r1, [pc, #48]	; 15a18 <strspn@plt+0x4b60>
   159e4:	mov	r0, #0
   159e8:	bl	10cf0 <dcgettext@plt>
   159ec:	ldr	r2, [pc, #40]	; 15a1c <strspn@plt+0x4b64>
   159f0:	pop	{r4, lr}
   159f4:	mov	r1, r0
   159f8:	mov	r0, #1
   159fc:	b	10e1c <__printf_chk@plt>
   15a00:	andeq	r8, r2, ip, asr #2
   15a04:	strdeq	r7, [r1], -r4
   15a08:	andeq	r7, r1, r8, lsl #12
   15a0c:	andeq	r7, r1, r0, lsr #12
   15a10:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   15a14:			; <UNDEFINED> instruction: 0x00016fb8
   15a18:	andeq	r7, r1, r4, lsr r6
   15a1c:	andeq	r7, r1, ip, asr r6
   15a20:	push	{r4, lr}
   15a24:	bl	15ff0 <strspn@plt+0x5138>
   15a28:	cmp	r0, #0
   15a2c:	popne	{r4, pc}
   15a30:	bl	15f68 <strspn@plt+0x50b0>
   15a34:	push	{r4, lr}
   15a38:	bl	15ff0 <strspn@plt+0x5138>
   15a3c:	cmp	r0, #0
   15a40:	popne	{r4, pc}
   15a44:	bl	15f68 <strspn@plt+0x50b0>
   15a48:	push	{r4, lr}
   15a4c:	bl	15ff0 <strspn@plt+0x5138>
   15a50:	cmp	r0, #0
   15a54:	popne	{r4, pc}
   15a58:	bl	15f68 <strspn@plt+0x50b0>
   15a5c:	push	{r4, r5, r6, lr}
   15a60:	mov	r5, r0
   15a64:	mov	r4, r1
   15a68:	bl	1601c <strspn@plt+0x5164>
   15a6c:	cmp	r0, #0
   15a70:	popne	{r4, r5, r6, pc}
   15a74:	adds	r4, r4, #0
   15a78:	movne	r4, #1
   15a7c:	cmp	r5, #0
   15a80:	orreq	r4, r4, #1
   15a84:	cmp	r4, #0
   15a88:	popeq	{r4, r5, r6, pc}
   15a8c:	bl	15f68 <strspn@plt+0x50b0>
   15a90:	push	{r4, lr}
   15a94:	cmp	r1, #0
   15a98:	orreq	r1, r1, #1
   15a9c:	bl	1601c <strspn@plt+0x5164>
   15aa0:	cmp	r0, #0
   15aa4:	popne	{r4, pc}
   15aa8:	bl	15f68 <strspn@plt+0x50b0>
   15aac:	push	{r4, r5, r6, lr}
   15ab0:	mov	r6, r0
   15ab4:	mov	r5, r1
   15ab8:	mov	r4, r2
   15abc:	bl	16358 <strspn@plt+0x54a0>
   15ac0:	cmp	r0, #0
   15ac4:	popne	{r4, r5, r6, pc}
   15ac8:	cmp	r6, #0
   15acc:	beq	15adc <strspn@plt+0x4c24>
   15ad0:	cmp	r5, #0
   15ad4:	cmpne	r4, #0
   15ad8:	popeq	{r4, r5, r6, pc}
   15adc:	bl	15f68 <strspn@plt+0x50b0>
   15ae0:	b	15aac <strspn@plt+0x4bf4>
   15ae4:	cmp	r2, #0
   15ae8:	cmpne	r1, #0
   15aec:	moveq	r2, #1
   15af0:	moveq	r1, r2
   15af4:	push	{r4, lr}
   15af8:	bl	16358 <strspn@plt+0x54a0>
   15afc:	cmp	r0, #0
   15b00:	popne	{r4, pc}
   15b04:	bl	15f68 <strspn@plt+0x50b0>
   15b08:	mov	r2, r1
   15b0c:	mov	r1, r0
   15b10:	mov	r0, #0
   15b14:	b	15aac <strspn@plt+0x4bf4>
   15b18:	mov	r2, r1
   15b1c:	mov	r1, r0
   15b20:	mov	r0, #0
   15b24:	b	15ae4 <strspn@plt+0x4c2c>
   15b28:	push	{r4, r5, r6, lr}
   15b2c:	subs	r6, r0, #0
   15b30:	sub	sp, sp, #8
   15b34:	mov	r5, r1
   15b38:	ldr	r4, [r1]
   15b3c:	beq	15b78 <strspn@plt+0x4cc0>
   15b40:	lsr	r1, r4, #1
   15b44:	add	r3, r1, #1
   15b48:	mvn	r3, r3
   15b4c:	cmp	r4, r3
   15b50:	bhi	15b74 <strspn@plt+0x4cbc>
   15b54:	add	r4, r4, #1
   15b58:	add	r4, r4, r1
   15b5c:	mov	r0, r6
   15b60:	mov	r1, r4
   15b64:	bl	15aac <strspn@plt+0x4bf4>
   15b68:	str	r4, [r5]
   15b6c:	add	sp, sp, #8
   15b70:	pop	{r4, r5, r6, pc}
   15b74:	bl	15f68 <strspn@plt+0x50b0>
   15b78:	cmp	r4, #0
   15b7c:	bne	15b5c <strspn@plt+0x4ca4>
   15b80:	mov	r1, r2
   15b84:	mov	r0, #64	; 0x40
   15b88:	str	r2, [sp, #4]
   15b8c:	bl	16498 <strspn@plt+0x55e0>
   15b90:	ldr	r2, [sp, #4]
   15b94:	cmp	r0, #0
   15b98:	movne	r4, r0
   15b9c:	addeq	r4, r0, #1
   15ba0:	b	15b5c <strspn@plt+0x4ca4>
   15ba4:	mov	r2, #1
   15ba8:	b	15b28 <strspn@plt+0x4c70>
   15bac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bb0:	sub	sp, sp, #12
   15bb4:	ldr	r6, [r1]
   15bb8:	mov	sl, r1
   15bbc:	mov	r9, r0
   15bc0:	asrs	r4, r6, #1
   15bc4:	mov	r5, r2
   15bc8:	mov	fp, r3
   15bcc:	ldr	r7, [sp, #48]	; 0x30
   15bd0:	bmi	15d3c <strspn@plt+0x4e84>
   15bd4:	mvn	r3, #-2147483648	; 0x80000000
   15bd8:	sub	r3, r3, r4
   15bdc:	cmp	r6, r3
   15be0:	movle	r3, #0
   15be4:	movgt	r3, #1
   15be8:	mvn	r8, fp
   15bec:	cmp	r3, #0
   15bf0:	addeq	r4, r4, r6
   15bf4:	mvnne	r4, #-2147483648	; 0x80000000
   15bf8:	lsr	r8, r8, #31
   15bfc:	cmp	fp, r4
   15c00:	movge	r3, #0
   15c04:	andlt	r3, r8, #1
   15c08:	cmp	r3, #0
   15c0c:	beq	15cf4 <strspn@plt+0x4e3c>
   15c10:	cmp	r7, #0
   15c14:	blt	15dc4 <strspn@plt+0x4f0c>
   15c18:	bne	15dbc <strspn@plt+0x4f04>
   15c1c:	mov	r2, #64	; 0x40
   15c20:	mov	r1, r7
   15c24:	mov	r0, r2
   15c28:	str	r2, [sp, #4]
   15c2c:	bl	166a4 <strspn@plt+0x57ec>
   15c30:	ldr	r2, [sp, #4]
   15c34:	mov	r1, r7
   15c38:	mov	r4, r0
   15c3c:	mov	r0, r2
   15c40:	bl	168c4 <strspn@plt+0x5a0c>
   15c44:	ldr	r2, [sp, #4]
   15c48:	sub	r1, r2, r1
   15c4c:	cmp	r9, #0
   15c50:	sub	r3, r4, r6
   15c54:	streq	r9, [sl]
   15c58:	cmp	r3, r5
   15c5c:	bge	15ce0 <strspn@plt+0x4e28>
   15c60:	cmp	r5, #0
   15c64:	blt	15d50 <strspn@plt+0x4e98>
   15c68:	cmp	r6, #0
   15c6c:	blt	15c8c <strspn@plt+0x4dd4>
   15c70:	mvn	r3, #-2147483648	; 0x80000000
   15c74:	sub	r3, r3, r5
   15c78:	cmp	r6, r3
   15c7c:	movle	r3, #0
   15c80:	movgt	r3, #1
   15c84:	cmp	r3, #0
   15c88:	bne	15e4c <strspn@plt+0x4f94>
   15c8c:	add	r5, r6, r5
   15c90:	cmp	fp, r5
   15c94:	movge	r8, #0
   15c98:	andlt	r8, r8, #1
   15c9c:	cmp	r8, #0
   15ca0:	mov	r4, r5
   15ca4:	bne	15e4c <strspn@plt+0x4f94>
   15ca8:	cmp	r7, #0
   15cac:	blt	15d64 <strspn@plt+0x4eac>
   15cb0:	beq	15cdc <strspn@plt+0x4e24>
   15cb4:	cmp	r5, #0
   15cb8:	blt	15e0c <strspn@plt+0x4f54>
   15cbc:	mov	r1, r7
   15cc0:	mvn	r0, #-2147483648	; 0x80000000
   15cc4:	bl	166a4 <strspn@plt+0x57ec>
   15cc8:	cmp	r5, r0
   15ccc:	movle	r0, #0
   15cd0:	movgt	r0, #1
   15cd4:	cmp	r0, #0
   15cd8:	bne	15e4c <strspn@plt+0x4f94>
   15cdc:	mul	r1, r5, r7
   15ce0:	mov	r0, r9
   15ce4:	bl	15a5c <strspn@plt+0x4ba4>
   15ce8:	str	r4, [sl]
   15cec:	add	sp, sp, #12
   15cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15cf4:	cmp	r7, #0
   15cf8:	blt	15d90 <strspn@plt+0x4ed8>
   15cfc:	beq	15c1c <strspn@plt+0x4d64>
   15d00:	cmp	r4, #0
   15d04:	blt	15dcc <strspn@plt+0x4f14>
   15d08:	mov	r1, r7
   15d0c:	mvn	r0, #-2147483648	; 0x80000000
   15d10:	bl	166a4 <strspn@plt+0x57ec>
   15d14:	cmp	r0, r4
   15d18:	movge	r0, #0
   15d1c:	movlt	r0, #1
   15d20:	cmp	r0, #0
   15d24:	mvnne	r2, #-2147483648	; 0x80000000
   15d28:	bne	15c20 <strspn@plt+0x4d68>
   15d2c:	mul	r1, r7, r4
   15d30:	cmp	r1, #63	; 0x3f
   15d34:	bgt	15c4c <strspn@plt+0x4d94>
   15d38:	b	15c1c <strspn@plt+0x4d64>
   15d3c:	rsb	r3, r4, #-2147483648	; 0x80000000
   15d40:	cmp	r6, r3
   15d44:	movge	r3, #0
   15d48:	movlt	r3, #1
   15d4c:	b	15be8 <strspn@plt+0x4d30>
   15d50:	rsb	r3, r5, #-2147483648	; 0x80000000
   15d54:	cmp	r6, r3
   15d58:	movge	r3, #0
   15d5c:	movlt	r3, #1
   15d60:	b	15c84 <strspn@plt+0x4dcc>
   15d64:	cmp	r5, #0
   15d68:	blt	15df0 <strspn@plt+0x4f38>
   15d6c:	cmn	r7, #1
   15d70:	beq	15cdc <strspn@plt+0x4e24>
   15d74:	mov	r1, r7
   15d78:	mov	r0, #-2147483648	; 0x80000000
   15d7c:	bl	166a4 <strspn@plt+0x57ec>
   15d80:	cmp	r5, r0
   15d84:	movle	r0, #0
   15d88:	movgt	r0, #1
   15d8c:	b	15cd4 <strspn@plt+0x4e1c>
   15d90:	cmp	r4, #0
   15d94:	blt	15e30 <strspn@plt+0x4f78>
   15d98:	cmn	r7, #1
   15d9c:	beq	15d2c <strspn@plt+0x4e74>
   15da0:	mov	r1, r7
   15da4:	mov	r0, #-2147483648	; 0x80000000
   15da8:	bl	166a4 <strspn@plt+0x57ec>
   15dac:	cmp	r0, r4
   15db0:	movge	r0, #0
   15db4:	movlt	r0, #1
   15db8:	b	15d20 <strspn@plt+0x4e68>
   15dbc:	mov	r4, fp
   15dc0:	b	15d08 <strspn@plt+0x4e50>
   15dc4:	mov	r4, fp
   15dc8:	b	15d98 <strspn@plt+0x4ee0>
   15dcc:	cmn	r4, #1
   15dd0:	beq	15d2c <strspn@plt+0x4e74>
   15dd4:	mov	r1, r4
   15dd8:	mov	r0, #-2147483648	; 0x80000000
   15ddc:	bl	166a4 <strspn@plt+0x57ec>
   15de0:	cmp	r7, r0
   15de4:	movle	r0, #0
   15de8:	movgt	r0, #1
   15dec:	b	15d20 <strspn@plt+0x4e68>
   15df0:	mov	r1, r7
   15df4:	mvn	r0, #-2147483648	; 0x80000000
   15df8:	bl	166a4 <strspn@plt+0x57ec>
   15dfc:	cmp	r5, r0
   15e00:	movge	r0, #0
   15e04:	movlt	r0, #1
   15e08:	b	15cd4 <strspn@plt+0x4e1c>
   15e0c:	cmn	r5, #1
   15e10:	beq	15cdc <strspn@plt+0x4e24>
   15e14:	mov	r1, r5
   15e18:	mov	r0, #-2147483648	; 0x80000000
   15e1c:	bl	166a4 <strspn@plt+0x57ec>
   15e20:	cmp	r7, r0
   15e24:	movle	r0, #0
   15e28:	movgt	r0, #1
   15e2c:	b	15cd4 <strspn@plt+0x4e1c>
   15e30:	mov	r1, r7
   15e34:	mvn	r0, #-2147483648	; 0x80000000
   15e38:	bl	166a4 <strspn@plt+0x57ec>
   15e3c:	cmp	r0, r4
   15e40:	movle	r0, #0
   15e44:	movgt	r0, #1
   15e48:	b	15d20 <strspn@plt+0x4e68>
   15e4c:	bl	15f68 <strspn@plt+0x50b0>
   15e50:	push	{r4, lr}
   15e54:	mov	r1, #1
   15e58:	bl	15fa8 <strspn@plt+0x50f0>
   15e5c:	cmp	r0, #0
   15e60:	popne	{r4, pc}
   15e64:	bl	15f68 <strspn@plt+0x50b0>
   15e68:	push	{r4, lr}
   15e6c:	mov	r1, #1
   15e70:	bl	15fa8 <strspn@plt+0x50f0>
   15e74:	cmp	r0, #0
   15e78:	popne	{r4, pc}
   15e7c:	bl	15f68 <strspn@plt+0x50b0>
   15e80:	push	{r4, lr}
   15e84:	bl	15fa8 <strspn@plt+0x50f0>
   15e88:	cmp	r0, #0
   15e8c:	popne	{r4, pc}
   15e90:	bl	15f68 <strspn@plt+0x50b0>
   15e94:	push	{r4, lr}
   15e98:	bl	15fa8 <strspn@plt+0x50f0>
   15e9c:	cmp	r0, #0
   15ea0:	popne	{r4, pc}
   15ea4:	bl	15f68 <strspn@plt+0x50b0>
   15ea8:	push	{r4, r5, r6, lr}
   15eac:	mov	r6, r0
   15eb0:	mov	r0, r1
   15eb4:	mov	r4, r1
   15eb8:	bl	15ff0 <strspn@plt+0x5138>
   15ebc:	subs	r5, r0, #0
   15ec0:	beq	15ed8 <strspn@plt+0x5020>
   15ec4:	mov	r2, r4
   15ec8:	mov	r1, r6
   15ecc:	bl	10cc0 <memcpy@plt>
   15ed0:	mov	r0, r5
   15ed4:	pop	{r4, r5, r6, pc}
   15ed8:	bl	15f68 <strspn@plt+0x50b0>
   15edc:	push	{r4, r5, r6, lr}
   15ee0:	mov	r6, r0
   15ee4:	mov	r0, r1
   15ee8:	mov	r4, r1
   15eec:	bl	15ff0 <strspn@plt+0x5138>
   15ef0:	subs	r5, r0, #0
   15ef4:	beq	15f0c <strspn@plt+0x5054>
   15ef8:	mov	r2, r4
   15efc:	mov	r1, r6
   15f00:	bl	10cc0 <memcpy@plt>
   15f04:	mov	r0, r5
   15f08:	pop	{r4, r5, r6, pc}
   15f0c:	bl	15f68 <strspn@plt+0x50b0>
   15f10:	push	{r4, r5, r6, lr}
   15f14:	mov	r6, r0
   15f18:	add	r0, r1, #1
   15f1c:	mov	r4, r1
   15f20:	bl	15ff0 <strspn@plt+0x5138>
   15f24:	subs	r5, r0, #0
   15f28:	beq	15f48 <strspn@plt+0x5090>
   15f2c:	mov	r3, #0
   15f30:	mov	r1, r6
   15f34:	strb	r3, [r5, r4]
   15f38:	mov	r2, r4
   15f3c:	bl	10cc0 <memcpy@plt>
   15f40:	mov	r0, r5
   15f44:	pop	{r4, r5, r6, pc}
   15f48:	bl	15f68 <strspn@plt+0x50b0>
   15f4c:	push	{r4, lr}
   15f50:	mov	r4, r0
   15f54:	bl	10dec <strlen@plt>
   15f58:	add	r1, r0, #1
   15f5c:	mov	r0, r4
   15f60:	pop	{r4, lr}
   15f64:	b	15ea8 <strspn@plt+0x4ff0>
   15f68:	ldr	r3, [pc, #44]	; 15f9c <strspn@plt+0x50e4>
   15f6c:	push	{r4, lr}
   15f70:	mov	r2, #5
   15f74:	ldr	r1, [pc, #36]	; 15fa0 <strspn@plt+0x50e8>
   15f78:	mov	r0, #0
   15f7c:	ldr	r4, [r3]
   15f80:	bl	10cf0 <dcgettext@plt>
   15f84:	ldr	r2, [pc, #24]	; 15fa4 <strspn@plt+0x50ec>
   15f88:	mov	r1, #0
   15f8c:	mov	r3, r0
   15f90:	mov	r0, r4
   15f94:	bl	10d74 <error@plt>
   15f98:	bl	10eac <abort@plt>
   15f9c:	strdeq	r8, [r2], -r0
   15fa0:	andeq	r7, r1, ip, lsr #13
   15fa4:	strdeq	r7, [r1], -r0
   15fa8:	cmp	r1, #0
   15fac:	cmpne	r0, #0
   15fb0:	moveq	r1, #1
   15fb4:	moveq	r0, r1
   15fb8:	umull	r2, r3, r0, r1
   15fbc:	adds	r3, r3, #0
   15fc0:	movne	r3, #1
   15fc4:	cmp	r2, #0
   15fc8:	blt	15fd8 <strspn@plt+0x5120>
   15fcc:	cmp	r3, #0
   15fd0:	bne	15fd8 <strspn@plt+0x5120>
   15fd4:	b	10c54 <calloc@plt>
   15fd8:	push	{r4, lr}
   15fdc:	bl	10df8 <__errno_location@plt>
   15fe0:	mov	r3, #12
   15fe4:	str	r3, [r0]
   15fe8:	mov	r0, #0
   15fec:	pop	{r4, pc}
   15ff0:	cmp	r0, #0
   15ff4:	moveq	r0, #1
   15ff8:	cmp	r0, #0
   15ffc:	blt	16004 <strspn@plt+0x514c>
   16000:	b	10d80 <malloc@plt>
   16004:	push	{r4, lr}
   16008:	bl	10df8 <__errno_location@plt>
   1600c:	mov	r3, #12
   16010:	str	r3, [r0]
   16014:	mov	r0, #0
   16018:	pop	{r4, pc}
   1601c:	cmp	r0, #0
   16020:	beq	16044 <strspn@plt+0x518c>
   16024:	cmp	r1, #0
   16028:	push	{lr}		; (str lr, [sp, #-4]!)
   1602c:	sub	sp, sp, #12
   16030:	beq	1604c <strspn@plt+0x5194>
   16034:	blt	16064 <strspn@plt+0x51ac>
   16038:	add	sp, sp, #12
   1603c:	pop	{lr}		; (ldr lr, [sp], #4)
   16040:	b	10cfc <realloc@plt>
   16044:	mov	r0, r1
   16048:	b	15ff0 <strspn@plt+0x5138>
   1604c:	str	r1, [sp, #4]
   16050:	bl	12424 <strspn@plt+0x156c>
   16054:	ldr	r3, [sp, #4]
   16058:	mov	r0, r3
   1605c:	add	sp, sp, #12
   16060:	pop	{pc}		; (ldr pc, [sp], #4)
   16064:	bl	10df8 <__errno_location@plt>
   16068:	mov	r2, #12
   1606c:	mov	r3, #0
   16070:	str	r2, [r0]
   16074:	b	16058 <strspn@plt+0x51a0>
   16078:	push	{r4, r5, r6, lr}
   1607c:	mov	r4, r0
   16080:	bl	10d5c <__fpending@plt>
   16084:	ldr	r5, [r4]
   16088:	and	r5, r5, #32
   1608c:	mov	r6, r0
   16090:	mov	r0, r4
   16094:	bl	160f4 <strspn@plt+0x523c>
   16098:	cmp	r5, #0
   1609c:	mov	r4, r0
   160a0:	bne	160c0 <strspn@plt+0x5208>
   160a4:	cmp	r0, #0
   160a8:	beq	160b8 <strspn@plt+0x5200>
   160ac:	cmp	r6, #0
   160b0:	beq	160dc <strspn@plt+0x5224>
   160b4:	mvn	r4, #0
   160b8:	mov	r0, r4
   160bc:	pop	{r4, r5, r6, pc}
   160c0:	cmp	r0, #0
   160c4:	bne	160b4 <strspn@plt+0x51fc>
   160c8:	bl	10df8 <__errno_location@plt>
   160cc:	str	r4, [r0]
   160d0:	mvn	r4, #0
   160d4:	mov	r0, r4
   160d8:	pop	{r4, r5, r6, pc}
   160dc:	bl	10df8 <__errno_location@plt>
   160e0:	ldr	r4, [r0]
   160e4:	subs	r4, r4, #9
   160e8:	mvnne	r4, #0
   160ec:	mov	r0, r4
   160f0:	pop	{r4, r5, r6, pc}
   160f4:	push	{r4, r5, lr}
   160f8:	sub	sp, sp, #12
   160fc:	mov	r4, r0
   16100:	bl	10e28 <fileno@plt>
   16104:	cmp	r0, #0
   16108:	mov	r0, r4
   1610c:	blt	16188 <strspn@plt+0x52d0>
   16110:	bl	10d98 <__freading@plt>
   16114:	cmp	r0, #0
   16118:	bne	16154 <strspn@plt+0x529c>
   1611c:	mov	r0, r4
   16120:	bl	16194 <strspn@plt+0x52dc>
   16124:	cmp	r0, #0
   16128:	beq	16184 <strspn@plt+0x52cc>
   1612c:	bl	10df8 <__errno_location@plt>
   16130:	mov	r5, r0
   16134:	mov	r0, r4
   16138:	ldr	r4, [r5]
   1613c:	bl	10e40 <fclose@plt>
   16140:	cmp	r4, #0
   16144:	mvnne	r0, #0
   16148:	strne	r4, [r5]
   1614c:	add	sp, sp, #12
   16150:	pop	{r4, r5, pc}
   16154:	mov	r0, r4
   16158:	bl	10e28 <fileno@plt>
   1615c:	mov	r3, #1
   16160:	str	r3, [sp]
   16164:	mov	r2, #0
   16168:	mov	r3, #0
   1616c:	bl	10d44 <lseek64@plt>
   16170:	mvn	r3, #0
   16174:	mvn	r2, #0
   16178:	cmp	r1, r3
   1617c:	cmpeq	r0, r2
   16180:	bne	1611c <strspn@plt+0x5264>
   16184:	mov	r0, r4
   16188:	add	sp, sp, #12
   1618c:	pop	{r4, r5, lr}
   16190:	b	10e40 <fclose@plt>
   16194:	push	{r4, lr}
   16198:	subs	r4, r0, #0
   1619c:	sub	sp, sp, #8
   161a0:	beq	161bc <strspn@plt+0x5304>
   161a4:	bl	10d98 <__freading@plt>
   161a8:	cmp	r0, #0
   161ac:	beq	161bc <strspn@plt+0x5304>
   161b0:	ldr	r3, [r4]
   161b4:	tst	r3, #256	; 0x100
   161b8:	bne	161cc <strspn@plt+0x5314>
   161bc:	mov	r0, r4
   161c0:	add	sp, sp, #8
   161c4:	pop	{r4, lr}
   161c8:	b	10c84 <fflush@plt>
   161cc:	mov	r3, #1
   161d0:	str	r3, [sp]
   161d4:	mov	r2, #0
   161d8:	mov	r3, #0
   161dc:	mov	r0, r4
   161e0:	bl	161f4 <strspn@plt+0x533c>
   161e4:	mov	r0, r4
   161e8:	add	sp, sp, #8
   161ec:	pop	{r4, lr}
   161f0:	b	10c84 <fflush@plt>
   161f4:	push	{r4, r5, r6, r7, r8, lr}
   161f8:	sub	sp, sp, #8
   161fc:	ldmib	r0, {ip, lr}
   16200:	mov	r4, r0
   16204:	ldr	r5, [sp, #32]
   16208:	cmp	lr, ip
   1620c:	beq	16224 <strspn@plt+0x536c>
   16210:	str	r5, [sp, #32]
   16214:	mov	r0, r4
   16218:	add	sp, sp, #8
   1621c:	pop	{r4, r5, r6, r7, r8, lr}
   16220:	b	10e4c <fseeko64@plt>
   16224:	ldr	lr, [r0, #20]
   16228:	ldr	ip, [r0, #16]
   1622c:	cmp	lr, ip
   16230:	bne	16210 <strspn@plt+0x5358>
   16234:	ldr	r8, [r0, #36]	; 0x24
   16238:	cmp	r8, #0
   1623c:	bne	16210 <strspn@plt+0x5358>
   16240:	mov	r6, r2
   16244:	mov	r7, r3
   16248:	bl	10e28 <fileno@plt>
   1624c:	mov	r2, r6
   16250:	mov	r3, r7
   16254:	str	r5, [sp]
   16258:	bl	10d44 <lseek64@plt>
   1625c:	mvn	r3, #0
   16260:	mvn	r2, #0
   16264:	cmp	r1, r3
   16268:	cmpeq	r0, r2
   1626c:	beq	1628c <strspn@plt+0x53d4>
   16270:	ldr	r3, [r4]
   16274:	strd	r0, [r4, #80]	; 0x50
   16278:	mov	r0, r8
   1627c:	bic	r3, r3, #16
   16280:	str	r3, [r4]
   16284:	add	sp, sp, #8
   16288:	pop	{r4, r5, r6, r7, r8, pc}
   1628c:	mvn	r0, #0
   16290:	b	16284 <strspn@plt+0x53cc>
   16294:	ldrb	r3, [r0]
   16298:	cmp	r3, #0
   1629c:	beq	162c8 <strspn@plt+0x5410>
   162a0:	mov	r2, r0
   162a4:	mov	r0, #0
   162a8:	push	{r4, lr}
   162ac:	add	r0, r3, r0, ror #23
   162b0:	ldrb	r3, [r2, #1]!
   162b4:	cmp	r3, #0
   162b8:	bne	162ac <strspn@plt+0x53f4>
   162bc:	bl	16684 <strspn@plt+0x57cc>
   162c0:	mov	r0, r1
   162c4:	pop	{r4, pc}
   162c8:	mov	r0, r3
   162cc:	bx	lr
   162d0:	push	{r4, lr}
   162d4:	mov	r0, #14
   162d8:	bl	10e7c <nl_langinfo@plt>
   162dc:	cmp	r0, #0
   162e0:	beq	162f8 <strspn@plt+0x5440>
   162e4:	ldrb	r2, [r0]
   162e8:	ldr	r3, [pc, #16]	; 16300 <strspn@plt+0x5448>
   162ec:	cmp	r2, #0
   162f0:	moveq	r0, r3
   162f4:	pop	{r4, pc}
   162f8:	ldr	r0, [pc]	; 16300 <strspn@plt+0x5448>
   162fc:	pop	{r4, pc}
   16300:	andeq	r7, r1, r0, asr #13
   16304:	push	{r4, r5, r6, r7, lr}
   16308:	subs	r6, r0, #0
   1630c:	sub	sp, sp, #12
   16310:	addeq	r6, sp, #4
   16314:	mov	r0, r6
   16318:	mov	r5, r2
   1631c:	mov	r7, r1
   16320:	bl	10d68 <mbrtowc@plt>
   16324:	cmp	r5, #0
   16328:	cmnne	r0, #3
   1632c:	mov	r4, r0
   16330:	bls	1634c <strspn@plt+0x5494>
   16334:	mov	r0, #0
   16338:	bl	163a4 <strspn@plt+0x54ec>
   1633c:	cmp	r0, #0
   16340:	moveq	r4, #1
   16344:	ldrbeq	r3, [r7]
   16348:	streq	r3, [r6]
   1634c:	mov	r0, r4
   16350:	add	sp, sp, #12
   16354:	pop	{r4, r5, r6, r7, pc}
   16358:	push	{r4, r5, r6, lr}
   1635c:	subs	r4, r2, #0
   16360:	mov	r6, r0
   16364:	mov	r5, r1
   16368:	beq	16394 <strspn@plt+0x54dc>
   1636c:	mov	r1, r4
   16370:	mvn	r0, #0
   16374:	bl	16498 <strspn@plt+0x55e0>
   16378:	cmp	r0, r5
   1637c:	bcs	16394 <strspn@plt+0x54dc>
   16380:	bl	10df8 <__errno_location@plt>
   16384:	mov	r3, #12
   16388:	str	r3, [r0]
   1638c:	mov	r0, #0
   16390:	pop	{r4, r5, r6, pc}
   16394:	mul	r1, r5, r4
   16398:	mov	r0, r6
   1639c:	pop	{r4, r5, r6, lr}
   163a0:	b	1601c <strspn@plt+0x5164>
   163a4:	push	{lr}		; (str lr, [sp, #-4]!)
   163a8:	sub	sp, sp, #268	; 0x10c
   163ac:	add	r1, sp, #4
   163b0:	ldr	r2, [pc, #60]	; 163f4 <strspn@plt+0x553c>
   163b4:	bl	16400 <strspn@plt+0x5548>
   163b8:	cmp	r0, #0
   163bc:	movne	r0, #0
   163c0:	bne	163ec <strspn@plt+0x5534>
   163c4:	ldr	r1, [pc, #44]	; 163f8 <strspn@plt+0x5540>
   163c8:	add	r0, sp, #4
   163cc:	bl	10c78 <strcmp@plt>
   163d0:	cmp	r0, #0
   163d4:	beq	163ec <strspn@plt+0x5534>
   163d8:	add	r0, sp, #4
   163dc:	ldr	r1, [pc, #24]	; 163fc <strspn@plt+0x5544>
   163e0:	bl	10c78 <strcmp@plt>
   163e4:	adds	r0, r0, #0
   163e8:	movne	r0, #1
   163ec:	add	sp, sp, #268	; 0x10c
   163f0:	pop	{pc}		; (ldr pc, [sp], #4)
   163f4:	andeq	r0, r0, r1, lsl #2
   163f8:	andeq	r7, r1, r8, asr #13
   163fc:	andeq	r7, r1, ip, asr #13
   16400:	push	{r4, r5, r6, lr}
   16404:	mov	r5, r1
   16408:	mov	r1, #0
   1640c:	mov	r4, r2
   16410:	bl	10e64 <setlocale@plt>
   16414:	subs	r6, r0, #0
   16418:	beq	16474 <strspn@plt+0x55bc>
   1641c:	bl	10dec <strlen@plt>
   16420:	cmp	r4, r0
   16424:	bhi	1645c <strspn@plt+0x55a4>
   16428:	cmp	r4, #0
   1642c:	bne	16438 <strspn@plt+0x5580>
   16430:	mov	r0, #34	; 0x22
   16434:	pop	{r4, r5, r6, pc}
   16438:	sub	r4, r4, #1
   1643c:	mov	r1, r6
   16440:	mov	r2, r4
   16444:	mov	r0, r5
   16448:	bl	10cc0 <memcpy@plt>
   1644c:	mov	r3, #0
   16450:	strb	r3, [r5, r4]
   16454:	mov	r0, #34	; 0x22
   16458:	pop	{r4, r5, r6, pc}
   1645c:	add	r2, r0, #1
   16460:	mov	r1, r6
   16464:	mov	r0, r5
   16468:	bl	10cc0 <memcpy@plt>
   1646c:	mov	r0, #0
   16470:	pop	{r4, r5, r6, pc}
   16474:	cmp	r4, #0
   16478:	beq	16488 <strspn@plt+0x55d0>
   1647c:	strb	r6, [r5]
   16480:	mov	r0, #22
   16484:	pop	{r4, r5, r6, pc}
   16488:	mov	r0, #22
   1648c:	pop	{r4, r5, r6, pc}
   16490:	mov	r1, #0
   16494:	b	10e64 <setlocale@plt>
   16498:	subs	r2, r1, #1
   1649c:	bxeq	lr
   164a0:	bcc	16678 <strspn@plt+0x57c0>
   164a4:	cmp	r0, r1
   164a8:	bls	1665c <strspn@plt+0x57a4>
   164ac:	tst	r1, r2
   164b0:	beq	16668 <strspn@plt+0x57b0>
   164b4:	clz	r3, r0
   164b8:	clz	r2, r1
   164bc:	sub	r3, r2, r3
   164c0:	rsbs	r3, r3, #31
   164c4:	addne	r3, r3, r3, lsl #1
   164c8:	mov	r2, #0
   164cc:	addne	pc, pc, r3, lsl #2
   164d0:	nop			; (mov r0, r0)
   164d4:	cmp	r0, r1, lsl #31
   164d8:	adc	r2, r2, r2
   164dc:	subcs	r0, r0, r1, lsl #31
   164e0:	cmp	r0, r1, lsl #30
   164e4:	adc	r2, r2, r2
   164e8:	subcs	r0, r0, r1, lsl #30
   164ec:	cmp	r0, r1, lsl #29
   164f0:	adc	r2, r2, r2
   164f4:	subcs	r0, r0, r1, lsl #29
   164f8:	cmp	r0, r1, lsl #28
   164fc:	adc	r2, r2, r2
   16500:	subcs	r0, r0, r1, lsl #28
   16504:	cmp	r0, r1, lsl #27
   16508:	adc	r2, r2, r2
   1650c:	subcs	r0, r0, r1, lsl #27
   16510:	cmp	r0, r1, lsl #26
   16514:	adc	r2, r2, r2
   16518:	subcs	r0, r0, r1, lsl #26
   1651c:	cmp	r0, r1, lsl #25
   16520:	adc	r2, r2, r2
   16524:	subcs	r0, r0, r1, lsl #25
   16528:	cmp	r0, r1, lsl #24
   1652c:	adc	r2, r2, r2
   16530:	subcs	r0, r0, r1, lsl #24
   16534:	cmp	r0, r1, lsl #23
   16538:	adc	r2, r2, r2
   1653c:	subcs	r0, r0, r1, lsl #23
   16540:	cmp	r0, r1, lsl #22
   16544:	adc	r2, r2, r2
   16548:	subcs	r0, r0, r1, lsl #22
   1654c:	cmp	r0, r1, lsl #21
   16550:	adc	r2, r2, r2
   16554:	subcs	r0, r0, r1, lsl #21
   16558:	cmp	r0, r1, lsl #20
   1655c:	adc	r2, r2, r2
   16560:	subcs	r0, r0, r1, lsl #20
   16564:	cmp	r0, r1, lsl #19
   16568:	adc	r2, r2, r2
   1656c:	subcs	r0, r0, r1, lsl #19
   16570:	cmp	r0, r1, lsl #18
   16574:	adc	r2, r2, r2
   16578:	subcs	r0, r0, r1, lsl #18
   1657c:	cmp	r0, r1, lsl #17
   16580:	adc	r2, r2, r2
   16584:	subcs	r0, r0, r1, lsl #17
   16588:	cmp	r0, r1, lsl #16
   1658c:	adc	r2, r2, r2
   16590:	subcs	r0, r0, r1, lsl #16
   16594:	cmp	r0, r1, lsl #15
   16598:	adc	r2, r2, r2
   1659c:	subcs	r0, r0, r1, lsl #15
   165a0:	cmp	r0, r1, lsl #14
   165a4:	adc	r2, r2, r2
   165a8:	subcs	r0, r0, r1, lsl #14
   165ac:	cmp	r0, r1, lsl #13
   165b0:	adc	r2, r2, r2
   165b4:	subcs	r0, r0, r1, lsl #13
   165b8:	cmp	r0, r1, lsl #12
   165bc:	adc	r2, r2, r2
   165c0:	subcs	r0, r0, r1, lsl #12
   165c4:	cmp	r0, r1, lsl #11
   165c8:	adc	r2, r2, r2
   165cc:	subcs	r0, r0, r1, lsl #11
   165d0:	cmp	r0, r1, lsl #10
   165d4:	adc	r2, r2, r2
   165d8:	subcs	r0, r0, r1, lsl #10
   165dc:	cmp	r0, r1, lsl #9
   165e0:	adc	r2, r2, r2
   165e4:	subcs	r0, r0, r1, lsl #9
   165e8:	cmp	r0, r1, lsl #8
   165ec:	adc	r2, r2, r2
   165f0:	subcs	r0, r0, r1, lsl #8
   165f4:	cmp	r0, r1, lsl #7
   165f8:	adc	r2, r2, r2
   165fc:	subcs	r0, r0, r1, lsl #7
   16600:	cmp	r0, r1, lsl #6
   16604:	adc	r2, r2, r2
   16608:	subcs	r0, r0, r1, lsl #6
   1660c:	cmp	r0, r1, lsl #5
   16610:	adc	r2, r2, r2
   16614:	subcs	r0, r0, r1, lsl #5
   16618:	cmp	r0, r1, lsl #4
   1661c:	adc	r2, r2, r2
   16620:	subcs	r0, r0, r1, lsl #4
   16624:	cmp	r0, r1, lsl #3
   16628:	adc	r2, r2, r2
   1662c:	subcs	r0, r0, r1, lsl #3
   16630:	cmp	r0, r1, lsl #2
   16634:	adc	r2, r2, r2
   16638:	subcs	r0, r0, r1, lsl #2
   1663c:	cmp	r0, r1, lsl #1
   16640:	adc	r2, r2, r2
   16644:	subcs	r0, r0, r1, lsl #1
   16648:	cmp	r0, r1
   1664c:	adc	r2, r2, r2
   16650:	subcs	r0, r0, r1
   16654:	mov	r0, r2
   16658:	bx	lr
   1665c:	moveq	r0, #1
   16660:	movne	r0, #0
   16664:	bx	lr
   16668:	clz	r2, r1
   1666c:	rsb	r2, r2, #31
   16670:	lsr	r0, r0, r2
   16674:	bx	lr
   16678:	cmp	r0, #0
   1667c:	mvnne	r0, #0
   16680:	b	16920 <strspn@plt+0x5a68>
   16684:	cmp	r1, #0
   16688:	beq	16678 <strspn@plt+0x57c0>
   1668c:	push	{r0, r1, lr}
   16690:	bl	16498 <strspn@plt+0x55e0>
   16694:	pop	{r1, r2, lr}
   16698:	mul	r3, r2, r0
   1669c:	sub	r1, r1, r3
   166a0:	bx	lr
   166a4:	cmp	r1, #0
   166a8:	beq	168b4 <strspn@plt+0x59fc>
   166ac:	eor	ip, r0, r1
   166b0:	rsbmi	r1, r1, #0
   166b4:	subs	r2, r1, #1
   166b8:	beq	16880 <strspn@plt+0x59c8>
   166bc:	movs	r3, r0
   166c0:	rsbmi	r3, r0, #0
   166c4:	cmp	r3, r1
   166c8:	bls	1688c <strspn@plt+0x59d4>
   166cc:	tst	r1, r2
   166d0:	beq	1689c <strspn@plt+0x59e4>
   166d4:	clz	r2, r3
   166d8:	clz	r0, r1
   166dc:	sub	r2, r0, r2
   166e0:	rsbs	r2, r2, #31
   166e4:	addne	r2, r2, r2, lsl #1
   166e8:	mov	r0, #0
   166ec:	addne	pc, pc, r2, lsl #2
   166f0:	nop			; (mov r0, r0)
   166f4:	cmp	r3, r1, lsl #31
   166f8:	adc	r0, r0, r0
   166fc:	subcs	r3, r3, r1, lsl #31
   16700:	cmp	r3, r1, lsl #30
   16704:	adc	r0, r0, r0
   16708:	subcs	r3, r3, r1, lsl #30
   1670c:	cmp	r3, r1, lsl #29
   16710:	adc	r0, r0, r0
   16714:	subcs	r3, r3, r1, lsl #29
   16718:	cmp	r3, r1, lsl #28
   1671c:	adc	r0, r0, r0
   16720:	subcs	r3, r3, r1, lsl #28
   16724:	cmp	r3, r1, lsl #27
   16728:	adc	r0, r0, r0
   1672c:	subcs	r3, r3, r1, lsl #27
   16730:	cmp	r3, r1, lsl #26
   16734:	adc	r0, r0, r0
   16738:	subcs	r3, r3, r1, lsl #26
   1673c:	cmp	r3, r1, lsl #25
   16740:	adc	r0, r0, r0
   16744:	subcs	r3, r3, r1, lsl #25
   16748:	cmp	r3, r1, lsl #24
   1674c:	adc	r0, r0, r0
   16750:	subcs	r3, r3, r1, lsl #24
   16754:	cmp	r3, r1, lsl #23
   16758:	adc	r0, r0, r0
   1675c:	subcs	r3, r3, r1, lsl #23
   16760:	cmp	r3, r1, lsl #22
   16764:	adc	r0, r0, r0
   16768:	subcs	r3, r3, r1, lsl #22
   1676c:	cmp	r3, r1, lsl #21
   16770:	adc	r0, r0, r0
   16774:	subcs	r3, r3, r1, lsl #21
   16778:	cmp	r3, r1, lsl #20
   1677c:	adc	r0, r0, r0
   16780:	subcs	r3, r3, r1, lsl #20
   16784:	cmp	r3, r1, lsl #19
   16788:	adc	r0, r0, r0
   1678c:	subcs	r3, r3, r1, lsl #19
   16790:	cmp	r3, r1, lsl #18
   16794:	adc	r0, r0, r0
   16798:	subcs	r3, r3, r1, lsl #18
   1679c:	cmp	r3, r1, lsl #17
   167a0:	adc	r0, r0, r0
   167a4:	subcs	r3, r3, r1, lsl #17
   167a8:	cmp	r3, r1, lsl #16
   167ac:	adc	r0, r0, r0
   167b0:	subcs	r3, r3, r1, lsl #16
   167b4:	cmp	r3, r1, lsl #15
   167b8:	adc	r0, r0, r0
   167bc:	subcs	r3, r3, r1, lsl #15
   167c0:	cmp	r3, r1, lsl #14
   167c4:	adc	r0, r0, r0
   167c8:	subcs	r3, r3, r1, lsl #14
   167cc:	cmp	r3, r1, lsl #13
   167d0:	adc	r0, r0, r0
   167d4:	subcs	r3, r3, r1, lsl #13
   167d8:	cmp	r3, r1, lsl #12
   167dc:	adc	r0, r0, r0
   167e0:	subcs	r3, r3, r1, lsl #12
   167e4:	cmp	r3, r1, lsl #11
   167e8:	adc	r0, r0, r0
   167ec:	subcs	r3, r3, r1, lsl #11
   167f0:	cmp	r3, r1, lsl #10
   167f4:	adc	r0, r0, r0
   167f8:	subcs	r3, r3, r1, lsl #10
   167fc:	cmp	r3, r1, lsl #9
   16800:	adc	r0, r0, r0
   16804:	subcs	r3, r3, r1, lsl #9
   16808:	cmp	r3, r1, lsl #8
   1680c:	adc	r0, r0, r0
   16810:	subcs	r3, r3, r1, lsl #8
   16814:	cmp	r3, r1, lsl #7
   16818:	adc	r0, r0, r0
   1681c:	subcs	r3, r3, r1, lsl #7
   16820:	cmp	r3, r1, lsl #6
   16824:	adc	r0, r0, r0
   16828:	subcs	r3, r3, r1, lsl #6
   1682c:	cmp	r3, r1, lsl #5
   16830:	adc	r0, r0, r0
   16834:	subcs	r3, r3, r1, lsl #5
   16838:	cmp	r3, r1, lsl #4
   1683c:	adc	r0, r0, r0
   16840:	subcs	r3, r3, r1, lsl #4
   16844:	cmp	r3, r1, lsl #3
   16848:	adc	r0, r0, r0
   1684c:	subcs	r3, r3, r1, lsl #3
   16850:	cmp	r3, r1, lsl #2
   16854:	adc	r0, r0, r0
   16858:	subcs	r3, r3, r1, lsl #2
   1685c:	cmp	r3, r1, lsl #1
   16860:	adc	r0, r0, r0
   16864:	subcs	r3, r3, r1, lsl #1
   16868:	cmp	r3, r1
   1686c:	adc	r0, r0, r0
   16870:	subcs	r3, r3, r1
   16874:	cmp	ip, #0
   16878:	rsbmi	r0, r0, #0
   1687c:	bx	lr
   16880:	teq	ip, r0
   16884:	rsbmi	r0, r0, #0
   16888:	bx	lr
   1688c:	movcc	r0, #0
   16890:	asreq	r0, ip, #31
   16894:	orreq	r0, r0, #1
   16898:	bx	lr
   1689c:	clz	r2, r1
   168a0:	rsb	r2, r2, #31
   168a4:	cmp	ip, #0
   168a8:	lsr	r0, r3, r2
   168ac:	rsbmi	r0, r0, #0
   168b0:	bx	lr
   168b4:	cmp	r0, #0
   168b8:	mvngt	r0, #-2147483648	; 0x80000000
   168bc:	movlt	r0, #-2147483648	; 0x80000000
   168c0:	b	16920 <strspn@plt+0x5a68>
   168c4:	cmp	r1, #0
   168c8:	beq	168b4 <strspn@plt+0x59fc>
   168cc:	push	{r0, r1, lr}
   168d0:	bl	166ac <strspn@plt+0x57f4>
   168d4:	pop	{r1, r2, lr}
   168d8:	mul	r3, r2, r0
   168dc:	sub	r1, r1, r3
   168e0:	bx	lr
   168e4:	cmp	r3, #0
   168e8:	cmpeq	r2, #0
   168ec:	bne	16904 <strspn@plt+0x5a4c>
   168f0:	cmp	r1, #0
   168f4:	cmpeq	r0, #0
   168f8:	mvnne	r1, #0
   168fc:	mvnne	r0, #0
   16900:	b	16920 <strspn@plt+0x5a68>
   16904:	sub	sp, sp, #8
   16908:	push	{sp, lr}
   1690c:	bl	16930 <strspn@plt+0x5a78>
   16910:	ldr	lr, [sp, #4]
   16914:	add	sp, sp, #8
   16918:	pop	{r2, r3}
   1691c:	bx	lr
   16920:	push	{r1, lr}
   16924:	mov	r0, #8
   16928:	bl	10c6c <raise@plt>
   1692c:	pop	{r1, pc}
   16930:	cmp	r1, r3
   16934:	push	{r4, r5, r6, r7, r8, r9, lr}
   16938:	cmpeq	r0, r2
   1693c:	mov	r4, r0
   16940:	mov	r5, r1
   16944:	ldr	r9, [sp, #28]
   16948:	movcc	r0, #0
   1694c:	movcc	r1, #0
   16950:	bcc	16a48 <strspn@plt+0x5b90>
   16954:	cmp	r3, #0
   16958:	clzeq	ip, r2
   1695c:	clzne	ip, r3
   16960:	addeq	ip, ip, #32
   16964:	cmp	r5, #0
   16968:	clzeq	r1, r4
   1696c:	addeq	r1, r1, #32
   16970:	clzne	r1, r5
   16974:	sub	ip, ip, r1
   16978:	sub	lr, ip, #32
   1697c:	lsl	r7, r3, ip
   16980:	rsb	r8, ip, #32
   16984:	orr	r7, r7, r2, lsl lr
   16988:	orr	r7, r7, r2, lsr r8
   1698c:	lsl	r6, r2, ip
   16990:	cmp	r5, r7
   16994:	cmpeq	r4, r6
   16998:	movcc	r0, #0
   1699c:	movcc	r1, #0
   169a0:	bcc	169bc <strspn@plt+0x5b04>
   169a4:	mov	r3, #1
   169a8:	subs	r4, r4, r6
   169ac:	lsl	r1, r3, lr
   169b0:	lsl	r0, r3, ip
   169b4:	orr	r1, r1, r3, lsr r8
   169b8:	sbc	r5, r5, r7
   169bc:	cmp	ip, #0
   169c0:	beq	16a48 <strspn@plt+0x5b90>
   169c4:	lsrs	r3, r7, #1
   169c8:	rrx	r2, r6
   169cc:	mov	r6, ip
   169d0:	b	169f4 <strspn@plt+0x5b3c>
   169d4:	subs	r4, r4, r2
   169d8:	sbc	r5, r5, r3
   169dc:	adds	r4, r4, r4
   169e0:	adc	r5, r5, r5
   169e4:	adds	r4, r4, #1
   169e8:	adc	r5, r5, #0
   169ec:	subs	r6, r6, #1
   169f0:	beq	16a10 <strspn@plt+0x5b58>
   169f4:	cmp	r5, r3
   169f8:	cmpeq	r4, r2
   169fc:	bcs	169d4 <strspn@plt+0x5b1c>
   16a00:	adds	r4, r4, r4
   16a04:	adc	r5, r5, r5
   16a08:	subs	r6, r6, #1
   16a0c:	bne	169f4 <strspn@plt+0x5b3c>
   16a10:	lsr	r6, r4, ip
   16a14:	lsr	r7, r5, ip
   16a18:	orr	r6, r6, r5, lsl r8
   16a1c:	adds	r2, r0, r4
   16a20:	orr	r6, r6, r5, lsr lr
   16a24:	adc	r3, r1, r5
   16a28:	lsl	r1, r7, ip
   16a2c:	orr	r1, r1, r6, lsl lr
   16a30:	lsl	r0, r6, ip
   16a34:	orr	r1, r1, r6, lsr r8
   16a38:	subs	r0, r2, r0
   16a3c:	mov	r4, r6
   16a40:	mov	r5, r7
   16a44:	sbc	r1, r3, r1
   16a48:	cmp	r9, #0
   16a4c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   16a50:	strd	r4, [r9]
   16a54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16a58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16a5c:	mov	r7, r0
   16a60:	ldr	r6, [pc, #72]	; 16ab0 <strspn@plt+0x5bf8>
   16a64:	ldr	r5, [pc, #72]	; 16ab4 <strspn@plt+0x5bfc>
   16a68:	add	r6, pc, r6
   16a6c:	add	r5, pc, r5
   16a70:	sub	r6, r6, r5
   16a74:	mov	r8, r1
   16a78:	mov	r9, r2
   16a7c:	bl	10c34 <calloc@plt-0x20>
   16a80:	asrs	r6, r6, #2
   16a84:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16a88:	mov	r4, #0
   16a8c:	add	r4, r4, #1
   16a90:	ldr	r3, [r5], #4
   16a94:	mov	r2, r9
   16a98:	mov	r1, r8
   16a9c:	mov	r0, r7
   16aa0:	blx	r3
   16aa4:	cmp	r6, r4
   16aa8:	bne	16a8c <strspn@plt+0x5bd4>
   16aac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16ab0:	andeq	r1, r1, r0, lsr #9
   16ab4:	muleq	r1, r8, r4
   16ab8:	bx	lr
   16abc:	ldr	r3, [pc, #12]	; 16ad0 <strspn@plt+0x5c18>
   16ac0:	mov	r1, #0
   16ac4:	add	r3, pc, r3
   16ac8:	ldr	r2, [r3]
   16acc:	b	10e04 <__cxa_atexit@plt>
   16ad0:	andeq	r1, r1, r8, lsl r6

Disassembly of section .fini:

00016ad4 <.fini>:
   16ad4:	push	{r3, lr}
   16ad8:	pop	{r3, pc}
