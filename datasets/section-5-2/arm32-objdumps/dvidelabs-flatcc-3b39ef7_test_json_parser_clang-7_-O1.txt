
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

00012a78 <.init>:
   12a78:	push	{r3, lr}
   12a7c:	bl	12c0c <_start@@Base+0x3c>
   12a80:	pop	{r3, pc}

Disassembly of section .plt:

00012a84 <fopen@plt-0x14>:
   12a84:	push	{lr}		; (str lr, [sp, #-4]!)
   12a88:	ldr	lr, [pc, #4]	; 12a94 <fopen@plt-0x4>
   12a8c:	add	lr, pc, lr
   12a90:	ldr	pc, [lr, #8]!
   12a94:	andeq	r4, r2, ip, ror #10

00012a98 <fopen@plt>:
   12a98:	add	ip, pc, #0, 12
   12a9c:	add	ip, ip, #36, 20	; 0x24000
   12aa0:	ldr	pc, [ip, #1388]!	; 0x56c

00012aa4 <free@plt>:
   12aa4:	add	ip, pc, #0, 12
   12aa8:	add	ip, ip, #36, 20	; 0x24000
   12aac:	ldr	pc, [ip, #1380]!	; 0x564

00012ab0 <memcpy@plt>:
   12ab0:	add	ip, pc, #0, 12
   12ab4:	add	ip, ip, #36, 20	; 0x24000
   12ab8:	ldr	pc, [ip, #1372]!	; 0x55c

00012abc <ftell@plt>:
   12abc:	add	ip, pc, #0, 12
   12ac0:	add	ip, ip, #36, 20	; 0x24000
   12ac4:	ldr	pc, [ip, #1364]!	; 0x554

00012ac8 <memcmp@plt>:
   12ac8:	add	ip, pc, #0, 12
   12acc:	add	ip, ip, #36, 20	; 0x24000
   12ad0:	ldr	pc, [ip, #1356]!	; 0x54c

00012ad4 <rewind@plt>:
   12ad4:	add	ip, pc, #0, 12
   12ad8:	add	ip, ip, #36, 20	; 0x24000
   12adc:	ldr	pc, [ip, #1348]!	; 0x544

00012ae0 <__isinff@plt>:
   12ae0:	add	ip, pc, #0, 12
   12ae4:	add	ip, ip, #36, 20	; 0x24000
   12ae8:	ldr	pc, [ip, #1340]!	; 0x53c

00012aec <__isinf@plt>:
   12aec:	add	ip, pc, #0, 12
   12af0:	add	ip, ip, #36, 20	; 0x24000
   12af4:	ldr	pc, [ip, #1332]!	; 0x534

00012af8 <realloc@plt>:
   12af8:	add	ip, pc, #0, 12
   12afc:	add	ip, ip, #36, 20	; 0x24000
   12b00:	ldr	pc, [ip, #1324]!	; 0x52c

00012b04 <fwrite@plt>:
   12b04:	add	ip, pc, #0, 12
   12b08:	add	ip, ip, #36, 20	; 0x24000
   12b0c:	ldr	pc, [ip, #1316]!	; 0x524

00012b10 <malloc@plt>:
   12b10:	add	ip, pc, #0, 12
   12b14:	add	ip, ip, #36, 20	; 0x24000
   12b18:	ldr	pc, [ip, #1308]!	; 0x51c

00012b1c <__libc_start_main@plt>:
   12b1c:	add	ip, pc, #0, 12
   12b20:	add	ip, ip, #36, 20	; 0x24000
   12b24:	ldr	pc, [ip, #1300]!	; 0x514

00012b28 <__gmon_start__@plt>:
   12b28:	add	ip, pc, #0, 12
   12b2c:	add	ip, ip, #36, 20	; 0x24000
   12b30:	ldr	pc, [ip, #1292]!	; 0x50c

00012b34 <exit@plt>:
   12b34:	add	ip, pc, #0, 12
   12b38:	add	ip, ip, #36, 20	; 0x24000
   12b3c:	ldr	pc, [ip, #1284]!	; 0x504

00012b40 <strlen@plt>:
   12b40:	add	ip, pc, #0, 12
   12b44:	add	ip, ip, #36, 20	; 0x24000
   12b48:	ldr	pc, [ip, #1276]!	; 0x4fc

00012b4c <fprintf@plt>:
   12b4c:	add	ip, pc, #0, 12
   12b50:	add	ip, ip, #36, 20	; 0x24000
   12b54:	ldr	pc, [ip, #1268]!	; 0x4f4

00012b58 <posix_memalign@plt>:
   12b58:	add	ip, pc, #0, 12
   12b5c:	add	ip, ip, #36, 20	; 0x24000
   12b60:	ldr	pc, [ip, #1260]!	; 0x4ec

00012b64 <memset@plt>:
   12b64:	add	ip, pc, #0, 12
   12b68:	add	ip, ip, #36, 20	; 0x24000
   12b6c:	ldr	pc, [ip, #1252]!	; 0x4e4

00012b70 <strtod@plt>:
   12b70:	add	ip, pc, #0, 12
   12b74:	add	ip, ip, #36, 20	; 0x24000
   12b78:	ldr	pc, [ip, #1244]!	; 0x4dc

00012b7c <memchr@plt>:
   12b7c:	add	ip, pc, #0, 12
   12b80:	add	ip, ip, #36, 20	; 0x24000
   12b84:	ldr	pc, [ip, #1236]!	; 0x4d4

00012b88 <fclose@plt>:
   12b88:	add	ip, pc, #0, 12
   12b8c:	add	ip, ip, #36, 20	; 0x24000
   12b90:	ldr	pc, [ip, #1228]!	; 0x4cc

00012b94 <fputc@plt>:
   12b94:	add	ip, pc, #0, 12
   12b98:	add	ip, ip, #36, 20	; 0x24000
   12b9c:	ldr	pc, [ip, #1220]!	; 0x4c4

00012ba0 <fread_unlocked@plt>:
   12ba0:	add	ip, pc, #0, 12
   12ba4:	add	ip, ip, #36, 20	; 0x24000
   12ba8:	ldr	pc, [ip, #1212]!	; 0x4bc

00012bac <fseek@plt>:
   12bac:	add	ip, pc, #0, 12
   12bb0:	add	ip, ip, #36, 20	; 0x24000
   12bb4:	ldr	pc, [ip, #1204]!	; 0x4b4

00012bb8 <abort@plt>:
   12bb8:	add	ip, pc, #0, 12
   12bbc:	add	ip, ip, #36, 20	; 0x24000
   12bc0:	ldr	pc, [ip, #1196]!	; 0x4ac

00012bc4 <__assert_fail@plt>:
   12bc4:	add	ip, pc, #0, 12
   12bc8:	add	ip, ip, #36, 20	; 0x24000
   12bcc:	ldr	pc, [ip, #1188]!	; 0x4a4

Disassembly of section .text:

00012bd0 <_start@@Base>:
   12bd0:	mov	fp, #0
   12bd4:	mov	lr, #0
   12bd8:	pop	{r1}		; (ldr r1, [sp], #4)
   12bdc:	mov	r2, sp
   12be0:	push	{r2}		; (str r2, [sp, #-4]!)
   12be4:	push	{r0}		; (str r0, [sp, #-4]!)
   12be8:	ldr	ip, [pc, #16]	; 12c00 <_start@@Base+0x30>
   12bec:	push	{ip}		; (str ip, [sp, #-4]!)
   12bf0:	ldr	r0, [pc, #12]	; 12c04 <_start@@Base+0x34>
   12bf4:	ldr	r3, [pc, #12]	; 12c08 <_start@@Base+0x38>
   12bf8:	bl	12b1c <__libc_start_main@plt>
   12bfc:	bl	12bb8 <abort@plt>
   12c00:	strdeq	r3, [r2], -ip
   12c04:	ldrdeq	r3, [r1], -r8
   12c08:	muleq	r2, ip, sp
   12c0c:	ldr	r3, [pc, #20]	; 12c28 <_start@@Base+0x58>
   12c10:	ldr	r2, [pc, #20]	; 12c2c <_start@@Base+0x5c>
   12c14:	add	r3, pc, r3
   12c18:	ldr	r2, [r3, r2]
   12c1c:	cmp	r2, #0
   12c20:	bxeq	lr
   12c24:	b	12b28 <__gmon_start__@plt>
   12c28:	andeq	r4, r2, r4, ror #7
   12c2c:	andeq	r0, r0, r4, ror r0
   12c30:	ldr	r0, [pc, #24]	; 12c50 <_start@@Base+0x80>
   12c34:	ldr	r3, [pc, #24]	; 12c54 <_start@@Base+0x84>
   12c38:	cmp	r3, r0
   12c3c:	bxeq	lr
   12c40:	ldr	r3, [pc, #16]	; 12c58 <_start@@Base+0x88>
   12c44:	cmp	r3, #0
   12c48:	bxeq	lr
   12c4c:	bx	r3
   12c50:	andeq	r7, r3, r0, asr r3
   12c54:	andeq	r7, r3, r0, asr r3
   12c58:	andeq	r0, r0, r0
   12c5c:	ldr	r0, [pc, #36]	; 12c88 <_start@@Base+0xb8>
   12c60:	ldr	r1, [pc, #36]	; 12c8c <_start@@Base+0xbc>
   12c64:	sub	r1, r1, r0
   12c68:	asr	r1, r1, #2
   12c6c:	add	r1, r1, r1, lsr #31
   12c70:	asrs	r1, r1, #1
   12c74:	bxeq	lr
   12c78:	ldr	r3, [pc, #16]	; 12c90 <_start@@Base+0xc0>
   12c7c:	cmp	r3, #0
   12c80:	bxeq	lr
   12c84:	bx	r3
   12c88:	andeq	r7, r3, r0, asr r3
   12c8c:	andeq	r7, r3, r0, asr r3
   12c90:	andeq	r0, r0, r0
   12c94:	push	{r4, lr}
   12c98:	ldr	r4, [pc, #24]	; 12cb8 <_start@@Base+0xe8>
   12c9c:	ldrb	r3, [r4]
   12ca0:	cmp	r3, #0
   12ca4:	popne	{r4, pc}
   12ca8:	bl	12c30 <_start@@Base+0x60>
   12cac:	mov	r3, #1
   12cb0:	strb	r3, [r4]
   12cb4:	pop	{r4, pc}
   12cb8:	andeq	r7, r3, r8, asr r3
   12cbc:	b	12c5c <_start@@Base+0x8c>

00012cc0 <verify_parse@@Base>:
   12cc0:	push	{r4, sl, fp, lr}
   12cc4:	add	fp, sp, #8
   12cc8:	bl	12e9c <verify_parse@@Base+0x1dc>
   12ccc:	bl	12ed4 <verify_parse@@Base+0x214>
   12cd0:	cmp	r0, #0
   12cd4:	beq	12d9c <verify_parse@@Base+0xdc>
   12cd8:	mov	r4, r0
   12cdc:	bl	12f3c <verify_parse@@Base+0x27c>
   12ce0:	vmov.f32	s2, #112	; 0x3f800000  1.0
   12ce4:	vcmp.f32	s0, s2
   12ce8:	vmrs	APSR_nzcv, fpscr
   12cec:	bne	12dbc <verify_parse@@Base+0xfc>
   12cf0:	mov	r0, r4
   12cf4:	bl	12f50 <verify_parse@@Base+0x290>
   12cf8:	vmov.f32	s2, #0	; 0x40000000  2.0
   12cfc:	vcmp.f32	s0, s2
   12d00:	vmrs	APSR_nzcv, fpscr
   12d04:	bne	12ddc <verify_parse@@Base+0x11c>
   12d08:	mov	r0, r4
   12d0c:	bl	12f68 <verify_parse@@Base+0x2a8>
   12d10:	vmov.f32	s2, #8	; 0x40400000  3.0
   12d14:	vcmp.f32	s0, s2
   12d18:	vmrs	APSR_nzcv, fpscr
   12d1c:	bne	12dfc <verify_parse@@Base+0x13c>
   12d20:	mov	r0, r4
   12d24:	bl	12f80 <verify_parse@@Base+0x2c0>
   12d28:	vmov.f64	d16, #8	; 0x40400000  3.0
   12d2c:	vcmp.f64	d0, d16
   12d30:	vmrs	APSR_nzcv, fpscr
   12d34:	bne	12e1c <verify_parse@@Base+0x15c>
   12d38:	mov	r0, r4
   12d3c:	bl	12f98 <verify_parse@@Base+0x2d8>
   12d40:	cmp	r0, #2
   12d44:	bne	12e3c <verify_parse@@Base+0x17c>
   12d48:	mov	r0, r4
   12d4c:	bl	12fac <verify_parse@@Base+0x2ec>
   12d50:	cmp	r0, #0
   12d54:	beq	12e5c <verify_parse@@Base+0x19c>
   12d58:	mov	r4, r0
   12d5c:	bl	12fb8 <verify_parse@@Base+0x2f8>
   12d60:	cmp	r0, #5
   12d64:	bne	12e7c <verify_parse@@Base+0x1bc>
   12d68:	mov	r0, r4
   12d6c:	bl	12fc8 <verify_parse@@Base+0x308>
   12d70:	cmp	r0, #6
   12d74:	moveq	r0, #0
   12d78:	popeq	{r4, sl, fp, pc}
   12d7c:	movw	r0, #21644	; 0x548c
   12d80:	movt	r0, #2
   12d84:	movw	r1, #15897	; 0x3e19
   12d88:	movt	r1, #2
   12d8c:	movw	r3, #15979	; 0x3e6b
   12d90:	movt	r3, #2
   12d94:	mov	r2, #54	; 0x36
   12d98:	bl	12bc4 <__assert_fail@plt>
   12d9c:	movw	r0, #21644	; 0x548c
   12da0:	movt	r0, #2
   12da4:	movw	r1, #15897	; 0x3e19
   12da8:	movt	r1, #2
   12dac:	movw	r3, #15979	; 0x3e6b
   12db0:	movt	r3, #2
   12db4:	mov	r2, #45	; 0x2d
   12db8:	bl	12bc4 <__assert_fail@plt>
   12dbc:	movw	r0, #21644	; 0x548c
   12dc0:	movt	r0, #2
   12dc4:	movw	r1, #15897	; 0x3e19
   12dc8:	movt	r1, #2
   12dcc:	movw	r3, #15979	; 0x3e6b
   12dd0:	movt	r3, #2
   12dd4:	mov	r2, #46	; 0x2e
   12dd8:	bl	12bc4 <__assert_fail@plt>
   12ddc:	movw	r0, #21644	; 0x548c
   12de0:	movt	r0, #2
   12de4:	movw	r1, #15897	; 0x3e19
   12de8:	movt	r1, #2
   12dec:	movw	r3, #15979	; 0x3e6b
   12df0:	movt	r3, #2
   12df4:	mov	r2, #47	; 0x2f
   12df8:	bl	12bc4 <__assert_fail@plt>
   12dfc:	movw	r0, #21644	; 0x548c
   12e00:	movt	r0, #2
   12e04:	movw	r1, #15897	; 0x3e19
   12e08:	movt	r1, #2
   12e0c:	movw	r3, #15979	; 0x3e6b
   12e10:	movt	r3, #2
   12e14:	mov	r2, #48	; 0x30
   12e18:	bl	12bc4 <__assert_fail@plt>
   12e1c:	movw	r0, #21644	; 0x548c
   12e20:	movt	r0, #2
   12e24:	movw	r1, #15897	; 0x3e19
   12e28:	movt	r1, #2
   12e2c:	movw	r3, #15979	; 0x3e6b
   12e30:	movt	r3, #2
   12e34:	mov	r2, #49	; 0x31
   12e38:	bl	12bc4 <__assert_fail@plt>
   12e3c:	movw	r0, #21644	; 0x548c
   12e40:	movt	r0, #2
   12e44:	movw	r1, #15897	; 0x3e19
   12e48:	movt	r1, #2
   12e4c:	movw	r3, #15979	; 0x3e6b
   12e50:	movt	r3, #2
   12e54:	mov	r2, #50	; 0x32
   12e58:	bl	12bc4 <__assert_fail@plt>
   12e5c:	movw	r0, #21644	; 0x548c
   12e60:	movt	r0, #2
   12e64:	movw	r1, #15897	; 0x3e19
   12e68:	movt	r1, #2
   12e6c:	movw	r3, #15979	; 0x3e6b
   12e70:	movt	r3, #2
   12e74:	mov	r2, #52	; 0x34
   12e78:	bl	12bc4 <__assert_fail@plt>
   12e7c:	movw	r0, #21644	; 0x548c
   12e80:	movt	r0, #2
   12e84:	movw	r1, #15897	; 0x3e19
   12e88:	movt	r1, #2
   12e8c:	movw	r3, #15979	; 0x3e6b
   12e90:	movt	r3, #2
   12e94:	mov	r2, #53	; 0x35
   12e98:	bl	12bc4 <__assert_fail@plt>
   12e9c:	push	{r4, r5, fp, lr}
   12ea0:	add	fp, sp, #8
   12ea4:	mov	r5, #0
   12ea8:	cmp	r0, #0
   12eac:	beq	12ecc <verify_parse@@Base+0x20c>
   12eb0:	mov	r4, r0
   12eb4:	bl	13550 <main@@Base+0x78>
   12eb8:	cmp	r0, #0
   12ebc:	beq	12ecc <verify_parse@@Base+0x20c>
   12ec0:	mov	r0, r4
   12ec4:	bl	13578 <main@@Base+0xa0>
   12ec8:	add	r5, r4, r0
   12ecc:	mov	r0, r5
   12ed0:	pop	{r4, r5, fp, pc}
   12ed4:	push	{r4, r5, fp, lr}
   12ed8:	add	fp, sp, #8
   12edc:	cmp	r0, #0
   12ee0:	beq	12f1c <verify_parse@@Base+0x25c>
   12ee4:	mov	r4, r0
   12ee8:	bl	13590 <main@@Base+0xb8>
   12eec:	sub	r5, r4, r0
   12ef0:	mov	r0, r5
   12ef4:	bl	13598 <main@@Base+0xc0>
   12ef8:	cmp	r0, #6
   12efc:	bcc	12f14 <verify_parse@@Base+0x254>
   12f00:	add	r0, r5, #4
   12f04:	bl	13598 <main@@Base+0xc0>
   12f08:	cmp	r0, #0
   12f0c:	addne	r0, r4, r0
   12f10:	popne	{r4, r5, fp, pc}
   12f14:	mov	r0, #0
   12f18:	pop	{r4, r5, fp, pc}
   12f1c:	movw	r0, #16235	; 0x3f6b
   12f20:	movt	r0, #2
   12f24:	movw	r1, #16273	; 0x3f91
   12f28:	movt	r1, #2
   12f2c:	movw	r3, #16368	; 0x3ff0
   12f30:	movt	r3, #2
   12f34:	mov	r2, #696	; 0x2b8
   12f38:	bl	12bc4 <__assert_fail@plt>
   12f3c:	cmp	r0, #0
   12f40:	vldreq	s0, [pc, #4]	; 12f4c <verify_parse@@Base+0x28c>
   12f44:	bxeq	lr
   12f48:	b	135a8 <main@@Base+0xd0>
   12f4c:	andeq	r0, r0, r0
   12f50:	cmp	r0, #0
   12f54:	vldreq	s0, [pc, #8]	; 12f64 <verify_parse@@Base+0x2a4>
   12f58:	bxeq	lr
   12f5c:	add	r0, r0, #4
   12f60:	b	135a8 <main@@Base+0xd0>
   12f64:	andeq	r0, r0, r0
   12f68:	cmp	r0, #0
   12f6c:	vldreq	s0, [pc, #8]	; 12f7c <verify_parse@@Base+0x2bc>
   12f70:	bxeq	lr
   12f74:	add	r0, r0, #8
   12f78:	b	135a8 <main@@Base+0xd0>
   12f7c:	andeq	r0, r0, r0
   12f80:	cmp	r0, #0
   12f84:	beq	12f90 <verify_parse@@Base+0x2d0>
   12f88:	add	r0, r0, #16
   12f8c:	b	135b4 <main@@Base+0xdc>
   12f90:	vmov.i32	d0, #0	; 0x00000000
   12f94:	bx	lr
   12f98:	cmp	r0, #0
   12f9c:	moveq	r0, #0
   12fa0:	bxeq	lr
   12fa4:	add	r0, r0, #24
   12fa8:	b	135c0 <main@@Base+0xe8>
   12fac:	cmp	r0, #0
   12fb0:	addne	r0, r0, #26
   12fb4:	bx	lr
   12fb8:	cmp	r0, #0
   12fbc:	moveq	r0, #0
   12fc0:	bxeq	lr
   12fc4:	b	135cc <main@@Base+0xf4>
   12fc8:	cmp	r0, #0
   12fcc:	moveq	r0, #0
   12fd0:	bxeq	lr
   12fd4:	add	r0, r0, #2
   12fd8:	b	135d8 <main@@Base+0x100>

00012fdc <test_parse@@Base>:
   12fdc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12fe0:	add	fp, sp, #24
   12fe4:	sub	sp, sp, #296	; 0x128
   12fe8:	add	r0, sp, #8
   12fec:	bl	1ca24 <flatcc_builder_init@@Base>
   12ff0:	movw	r5, #28800	; 0x7080
   12ff4:	movt	r5, #3
   12ff8:	ldr	r0, [r5]
   12ffc:	sub	r1, fp, #32
   13000:	bl	1314c <test_parse@@Base+0x170>
   13004:	cmp	r0, #0
   13008:	bne	13030 <test_parse@@Base+0x54>
   1300c:	ldr	r2, [r5]
   13010:	movw	r0, #29520	; 0x7350
   13014:	movt	r0, #3
   13018:	ldr	r0, [r0]
   1301c:	movw	r1, #16004	; 0x3e84
   13020:	movt	r1, #2
   13024:	bl	12b4c <fprintf@plt>
   13028:	mvn	r6, #0
   1302c:	b	13140 <test_parse@@Base+0x164>
   13030:	mov	r4, r0
   13034:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13038:	add	r0, sp, #8
   1303c:	sub	r1, fp, #80	; 0x50
   13040:	mov	r2, r4
   13044:	bl	13244 <test_parse@@Base+0x268>
   13048:	ldr	r5, [r5]
   1304c:	movw	r8, #29520	; 0x7350
   13050:	movt	r8, #3
   13054:	ldr	r7, [r8]
   13058:	ldr	r6, [fp, #-64]	; 0xffffffc0
   1305c:	cmp	r0, #0
   13060:	bne	130f4 <test_parse@@Base+0x118>
   13064:	movw	r1, #16040	; 0x3ea8
   13068:	movt	r1, #2
   1306c:	mov	r0, r7
   13070:	mov	r2, r5
   13074:	mov	r3, r6
   13078:	bl	12b4c <fprintf@plt>
   1307c:	add	r6, sp, #8
   13080:	sub	r1, fp, #36	; 0x24
   13084:	mov	r0, r6
   13088:	bl	1f9d8 <flatcc_builder_finalize_aligned_buffer@@Base>
   1308c:	mov	r5, r0
   13090:	movw	r7, #29524	; 0x7354
   13094:	movt	r7, #3
   13098:	ldr	r2, [r7]
   1309c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   130a0:	bl	132ec <test_parse@@Base+0x310>
   130a4:	ldr	r0, [r8]
   130a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   130ac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   130b0:	movw	r1, #16105	; 0x3ee9
   130b4:	movt	r1, #2
   130b8:	bl	12b4c <fprintf@plt>
   130bc:	mov	r0, r5
   130c0:	bl	12cc0 <verify_parse@@Base>
   130c4:	ldr	r2, [r7]
   130c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   130cc:	mov	r0, r5
   130d0:	bl	13418 <test_parse@@Base+0x43c>
   130d4:	mov	r0, r6
   130d8:	bl	1cb90 <flatcc_builder_reset@@Base>
   130dc:	mov	r6, #0
   130e0:	cmp	r5, #0
   130e4:	beq	13130 <test_parse@@Base+0x154>
   130e8:	mov	r0, r5
   130ec:	bl	1fab8 <flatcc_builder_aligned_free@@Base>
   130f0:	b	13130 <test_parse@@Base+0x154>
   130f4:	ldr	r8, [fp, #-76]	; 0xffffffb4
   130f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   130fc:	ldr	r9, [fp, #-44]	; 0xffffffd4
   13100:	bl	207e0 <flatcc_json_parser_error_string@@Base>
   13104:	add	r1, r9, #1
   13108:	sub	r1, r1, r8
   1310c:	str	r1, [sp]
   13110:	str	r0, [sp, #4]
   13114:	movw	r1, #16140	; 0x3f0c
   13118:	movt	r1, #2
   1311c:	mov	r0, r7
   13120:	mov	r2, r5
   13124:	mov	r3, r6
   13128:	bl	12b4c <fprintf@plt>
   1312c:	mvn	r6, #0
   13130:	mov	r0, r4
   13134:	bl	12aa4 <free@plt>
   13138:	add	r0, sp, #8
   1313c:	bl	1cb9c <flatcc_builder_clear@@Base>
   13140:	mov	r0, r6
   13144:	sub	sp, fp, #24
   13148:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1314c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13150:	add	fp, sp, #24
   13154:	sub	sp, sp, #8
   13158:	add	r9, sp, #4
   1315c:	cmp	r1, #0
   13160:	movne	r9, r1
   13164:	movw	r1, #16456	; 0x4048
   13168:	movt	r1, #2
   1316c:	bl	12a98 <fopen@plt>
   13170:	cmp	r0, #0
   13174:	beq	13208 <test_parse@@Base+0x22c>
   13178:	mov	r6, r0
   1317c:	mov	r8, #0
   13180:	mov	r1, #0
   13184:	mov	r2, #2
   13188:	bl	12bac <fseek@plt>
   1318c:	mov	r0, r6
   13190:	bl	12abc <ftell@plt>
   13194:	mov	r5, r0
   13198:	str	r0, [r9]
   1319c:	cmp	r0, #10240	; 0x2800
   131a0:	bhi	13218 <test_parse@@Base+0x23c>
   131a4:	mov	r0, r6
   131a8:	bl	12ad4 <rewind@plt>
   131ac:	cmp	r5, #0
   131b0:	mov	r0, r5
   131b4:	movweq	r0, #1
   131b8:	bl	12b10 <malloc@plt>
   131bc:	cmp	r0, #0
   131c0:	beq	13218 <test_parse@@Base+0x23c>
   131c4:	mov	r7, r0
   131c8:	mov	r8, r0
   131cc:	mov	r1, #0
   131d0:	mov	r4, r1
   131d4:	add	r0, r7, r1
   131d8:	sub	r2, r5, r1
   131dc:	mov	r1, #1
   131e0:	mov	r3, r6
   131e4:	bl	12ba0 <fread_unlocked@plt>
   131e8:	add	r1, r0, r4
   131ec:	cmp	r0, #0
   131f0:	bne	131d0 <test_parse@@Base+0x1f4>
   131f4:	cmp	r5, r4
   131f8:	bne	13210 <test_parse@@Base+0x234>
   131fc:	mov	r0, r6
   13200:	bl	12b88 <fclose@plt>
   13204:	b	13234 <test_parse@@Base+0x258>
   13208:	mov	r5, #0
   1320c:	b	13230 <test_parse@@Base+0x254>
   13210:	cmp	r6, #0
   13214:	beq	13220 <test_parse@@Base+0x244>
   13218:	mov	r0, r6
   1321c:	bl	12b88 <fclose@plt>
   13220:	cmp	r8, #0
   13224:	beq	13230 <test_parse@@Base+0x254>
   13228:	mov	r0, r8
   1322c:	bl	12aa4 <free@plt>
   13230:	mov	r8, #0
   13234:	str	r5, [r9]
   13238:	mov	r0, r8
   1323c:	sub	sp, fp, #24
   13240:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13244:	push	{r4, r5, r6, r7, fp, lr}
   13248:	add	fp, sp, #16
   1324c:	sub	sp, sp, #48	; 0x30
   13250:	mov	r4, r2
   13254:	mov	r6, r0
   13258:	add	r5, sp, #4
   1325c:	cmp	r1, #0
   13260:	movne	r5, r1
   13264:	add	r7, r2, r3
   13268:	mov	r0, r5
   1326c:	mov	r1, r6
   13270:	mov	r3, r7
   13274:	bl	135e4 <main@@Base+0x10c>
   13278:	movw	r1, #15892	; 0x3e14
   1327c:	movt	r1, #2
   13280:	mov	r0, r6
   13284:	mov	r2, #0
   13288:	mov	r3, #0
   1328c:	bl	1d334 <flatcc_builder_start_buffer@@Base>
   13290:	mov	r1, r0
   13294:	mvn	r0, #0
   13298:	cmp	r1, #0
   1329c:	bne	132c0 <test_parse@@Base+0x2e4>
   132a0:	mov	r3, sp
   132a4:	mov	r0, r5
   132a8:	mov	r1, r4
   132ac:	mov	r2, r7
   132b0:	bl	13618 <main@@Base+0x140>
   132b4:	ldr	r0, [r5, #24]
   132b8:	cmp	r0, #0
   132bc:	beq	132c8 <test_parse@@Base+0x2ec>
   132c0:	sub	sp, fp, #16
   132c4:	pop	{r4, r5, r6, r7, fp, pc}
   132c8:	ldr	r1, [sp]
   132cc:	mov	r0, r6
   132d0:	bl	1d4e8 <flatcc_builder_end_buffer@@Base>
   132d4:	cmp	r0, #0
   132d8:	mvn	r0, #0
   132dc:	strne	r4, [r5, #40]	; 0x28
   132e0:	movne	r0, #0
   132e4:	sub	sp, fp, #16
   132e8:	pop	{r4, r5, r6, r7, fp, pc}
   132ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132f0:	add	fp, sp, #28
   132f4:	sub	sp, sp, #20
   132f8:	mov	r4, r2
   132fc:	mov	r5, r1
   13300:	mov	r6, r0
   13304:	movw	r1, #16470	; 0x4056
   13308:	movt	r1, #2
   1330c:	movw	r2, #16074	; 0x3eca
   13310:	movt	r2, #2
   13314:	mov	r0, r4
   13318:	bl	12b4c <fprintf@plt>
   1331c:	cmp	r5, #0
   13320:	beq	133fc <test_parse@@Base+0x420>
   13324:	add	r7, sp, #3
   13328:	movw	sl, #16489	; 0x4069
   1332c:	movt	sl, #2
   13330:	mov	r8, #0
   13334:	ands	r9, r8, #15
   13338:	beq	13354 <test_parse@@Base+0x378>
   1333c:	tst	r8, #7
   13340:	bne	13384 <test_parse@@Base+0x3a8>
   13344:	mov	r0, #32
   13348:	mov	r1, r4
   1334c:	bl	12b94 <fputc@plt>
   13350:	b	13384 <test_parse@@Base+0x3a8>
   13354:	cmp	r8, #0
   13358:	beq	13370 <test_parse@@Base+0x394>
   1335c:	mov	r0, r4
   13360:	movw	r1, #16475	; 0x405b
   13364:	movt	r1, #2
   13368:	mov	r2, r7
   1336c:	bl	12b4c <fprintf@plt>
   13370:	mov	r0, r4
   13374:	movw	r1, #16481	; 0x4061
   13378:	movt	r1, #2
   1337c:	mov	r2, r8
   13380:	bl	12b4c <fprintf@plt>
   13384:	ldrb	r2, [r6, r8]
   13388:	mov	r0, r4
   1338c:	mov	r1, sl
   13390:	bl	12b4c <fprintf@plt>
   13394:	ldrb	r0, [r6, r8]
   13398:	sub	r1, r0, #32
   1339c:	uxtb	r1, r1
   133a0:	cmp	r1, #94	; 0x5e
   133a4:	movwhi	r0, #46	; 0x2e
   133a8:	strb	r0, [r7, r9]
   133ac:	add	r0, r7, r9
   133b0:	mov	r1, #0
   133b4:	strb	r1, [r0, #1]
   133b8:	add	r8, r8, #1
   133bc:	cmp	r5, r8
   133c0:	bne	13334 <test_parse@@Base+0x358>
   133c4:	tst	r5, #15
   133c8:	beq	133fc <test_parse@@Base+0x420>
   133cc:	add	r6, r5, #1
   133d0:	movw	r5, #16525	; 0x408d
   133d4:	movt	r5, #2
   133d8:	mov	r0, r5
   133dc:	mov	r1, #3
   133e0:	mov	r2, #1
   133e4:	mov	r3, r4
   133e8:	bl	12b04 <fwrite@plt>
   133ec:	add	r0, r6, #1
   133f0:	tst	r6, #15
   133f4:	mov	r6, r0
   133f8:	bne	133d8 <test_parse@@Base+0x3fc>
   133fc:	movw	r1, #16475	; 0x405b
   13400:	movt	r1, #2
   13404:	add	r2, sp, #3
   13408:	mov	r0, r4
   1340c:	bl	12b4c <fprintf@plt>
   13410:	sub	sp, fp, #28
   13414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13418:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1341c:	add	fp, sp, #28
   13420:	sub	sp, sp, #4
   13424:	mov	r4, r2
   13428:	mov	r5, r1
   1342c:	mov	r6, r0
   13430:	movw	r1, #16495	; 0x406f
   13434:	movt	r1, #2
   13438:	movw	r2, #16098	; 0x3ee2
   1343c:	movt	r2, #2
   13440:	mov	r0, r4
   13444:	bl	12b4c <fprintf@plt>
   13448:	cmp	r5, #0
   1344c:	beq	134b8 <test_parse@@Base+0x4dc>
   13450:	mov	r7, #0
   13454:	movw	r8, #16524	; 0x408c
   13458:	movt	r8, #2
   1345c:	movw	sl, #16529	; 0x4091
   13460:	movt	sl, #2
   13464:	movw	r9, #16525	; 0x408d
   13468:	movt	r9, #2
   1346c:	tst	r7, #15
   13470:	beq	13488 <test_parse@@Base+0x4ac>
   13474:	tst	r7, #7
   13478:	bne	1349c <test_parse@@Base+0x4c0>
   1347c:	mov	r0, r9
   13480:	mov	r1, #3
   13484:	b	13490 <test_parse@@Base+0x4b4>
   13488:	mov	r0, r8
   1348c:	mov	r1, #4
   13490:	mov	r2, #1
   13494:	mov	r3, r4
   13498:	bl	12b04 <fwrite@plt>
   1349c:	ldrb	r2, [r6, r7]
   134a0:	mov	r0, r4
   134a4:	mov	r1, sl
   134a8:	bl	12b4c <fprintf@plt>
   134ac:	add	r7, r7, #1
   134b0:	cmp	r5, r7
   134b4:	bne	1346c <test_parse@@Base+0x490>
   134b8:	movw	r0, #16538	; 0x409a
   134bc:	movt	r0, #2
   134c0:	mov	r1, #4
   134c4:	mov	r2, #1
   134c8:	mov	r3, r4
   134cc:	sub	sp, fp, #28
   134d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134d4:	b	12b04 <fwrite@plt>

000134d8 <main@@Base>:
   134d8:	push	{r4, r5, r6, sl, fp, lr}
   134dc:	add	fp, sp, #16
   134e0:	mov	r4, r1
   134e4:	mov	r5, r0
   134e8:	movw	r6, #29520	; 0x7350
   134ec:	movt	r6, #3
   134f0:	ldr	r3, [r6]
   134f4:	movw	r0, #16154	; 0x3f1a
   134f8:	movt	r0, #2
   134fc:	mov	r1, #16
   13500:	mov	r2, #1
   13504:	bl	12b04 <fwrite@plt>
   13508:	sub	r0, r5, #1
   1350c:	cmp	r0, #2
   13510:	bcs	13530 <main@@Base+0x58>
   13514:	cmp	r5, #2
   13518:	ldreq	r0, [r4, #4]
   1351c:	movweq	r1, #28800	; 0x7080
   13520:	movteq	r1, #3
   13524:	streq	r0, [r1]
   13528:	pop	{r4, r5, r6, sl, fp, lr}
   1352c:	b	12fdc <test_parse@@Base>
   13530:	ldr	r3, [r6]
   13534:	movw	r0, #16171	; 0x3f2b
   13538:	movt	r0, #2
   1353c:	mov	r1, #63	; 0x3f
   13540:	mov	r2, #1
   13544:	bl	12b04 <fwrite@plt>
   13548:	mov	r0, #1
   1354c:	bl	12b34 <exit@plt>
   13550:	push	{fp, lr}
   13554:	mov	fp, sp
   13558:	add	r0, r0, #4
   1355c:	bl	13580 <main@@Base+0xa8>
   13560:	movw	r1, #45235	; 0xb0b3
   13564:	movt	r1, #44209	; 0xacb1
   13568:	add	r0, r0, r1
   1356c:	clz	r0, r0
   13570:	lsr	r0, r0, #5
   13574:	pop	{fp, pc}
   13578:	ldr	r0, [r0]
   1357c:	b	1358c <main@@Base+0xb4>
   13580:	ldr	r0, [r0]
   13584:	b	13588 <main@@Base+0xb0>
   13588:	bx	lr
   1358c:	bx	lr
   13590:	ldr	r0, [r0]
   13594:	b	135a0 <main@@Base+0xc8>
   13598:	ldrh	r0, [r0]
   1359c:	b	135a4 <main@@Base+0xcc>
   135a0:	bx	lr
   135a4:	bx	lr
   135a8:	vldr	s0, [r0]
   135ac:	b	135b0 <main@@Base+0xd8>
   135b0:	bx	lr
   135b4:	vldr	d0, [r0]
   135b8:	b	135bc <main@@Base+0xe4>
   135bc:	bx	lr
   135c0:	ldrsb	r0, [r0]
   135c4:	b	135c8 <main@@Base+0xf0>
   135c8:	bx	lr
   135cc:	ldrsh	r0, [r0]
   135d0:	b	135d4 <main@@Base+0xfc>
   135d4:	bx	lr
   135d8:	ldrsb	r0, [r0]
   135dc:	b	135e0 <main@@Base+0x108>
   135e0:	bx	lr
   135e4:	vmov.i32	q8, #0	; 0x00000000
   135e8:	add	ip, r0, #12
   135ec:	vst1.32	{d16-d17}, [ip]
   135f0:	add	ip, r0, #28
   135f4:	vst1.32	{d16-d17}, [ip]
   135f8:	mov	ip, #0
   135fc:	stm	r0, {r1, r2, ip}
   13600:	mov	r1, #1
   13604:	str	r1, [r0, #16]
   13608:	str	r2, [r0, #28]
   1360c:	str	r3, [r0, #32]
   13610:	str	r2, [r0, #36]	; 0x24
   13614:	bx	lr
   13618:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1361c:	add	fp, sp, #28
   13620:	sub	sp, sp, #4
   13624:	vpush	{d8-d9}
   13628:	sub	sp, sp, #56	; 0x38
   1362c:	mov	r6, r3
   13630:	mov	r4, r2
   13634:	mov	r9, r1
   13638:	mov	r1, #0
   1363c:	str	r1, [r3]
   13640:	str	r0, [sp, #28]
   13644:	ldr	r0, [r0]
   13648:	mov	r1, #36	; 0x24
   1364c:	bl	1e01c <flatcc_builder_start_table@@Base>
   13650:	cmp	r0, #0
   13654:	beq	13684 <main@@Base+0x1ac>
   13658:	ldr	r0, [sp, #28]
   1365c:	mov	r1, r9
   13660:	mov	r2, r4
   13664:	mov	r3, #33	; 0x21
   13668:	bl	20800 <flatcc_json_parser_set_error@@Base>
   1366c:	mov	r9, r0
   13670:	mov	r0, r9
   13674:	sub	sp, fp, #48	; 0x30
   13678:	vpop	{d8-d9}
   1367c:	add	sp, sp, #4
   13680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13684:	add	r0, sp, #44	; 0x2c
   13688:	str	r0, [sp]
   1368c:	ldr	r0, [sp, #28]
   13690:	mov	r1, r9
   13694:	mov	r2, r4
   13698:	mov	r3, #1
   1369c:	bl	220e8 <flatcc_json_parser_prepare_unions@@Base>
   136a0:	cmp	r0, r4
   136a4:	beq	13658 <main@@Base+0x180>
   136a8:	add	r3, sp, #52	; 0x34
   136ac:	ldr	r0, [sp, #28]
   136b0:	mov	r1, r9
   136b4:	mov	r2, r4
   136b8:	bl	15c28 <main@@Base+0x2750>
   136bc:	mov	r9, r0
   136c0:	ldr	r0, [sp, #52]	; 0x34
   136c4:	cmp	r0, #0
   136c8:	beq	15ba8 <main@@Base+0x26d0>
   136cc:	vmov.f32	s16, #8	; 0x40400000  3.0
   136d0:	vldr	s18, [pc, #1016]	; 13ad0 <main@@Base+0x5f8>
   136d4:	movw	r0, #13407	; 0x345f
   136d8:	movt	r0, #29494	; 0x7336
   136dc:	sub	r0, r0, #512	; 0x200
   136e0:	sub	r0, r0, #196608	; 0x30000
   136e4:	add	r1, sp, #16
   136e8:	stm	r1, {r0, r4, r6}
   136ec:	b	14470 <main@@Base+0xf98>
   136f0:	ldr	r0, [sp, #28]
   136f4:	mov	r1, r8
   136f8:	b	15b70 <main@@Base+0x2698>
   136fc:	ldr	r0, [sp, #28]
   13700:	b	13f88 <main@@Base+0xab0>
   13704:	and	r0, r1, #-16777216	; 0xff000000
   13708:	teq	r0, #1728053248	; 0x67000000
   1370c:	add	r8, sp, #52	; 0x34
   13710:	bne	139e4 <main@@Base+0x50c>
   13714:	ldr	r0, [sp, #28]
   13718:	mov	r1, r7
   1371c:	mov	r2, r4
   13720:	mov	r3, #1
   13724:	bl	15d04 <main@@Base+0x282c>
   13728:	mov	r9, r0
   1372c:	cmp	r7, r0
   13730:	beq	139fc <main@@Base+0x524>
   13734:	ldr	r0, [sp, #28]
   13738:	ldr	r0, [r0]
   1373c:	bl	1ddd8 <flatcc_builder_start_offset_vector@@Base>
   13740:	cmp	r0, #0
   13744:	bne	13658 <main@@Base+0x180>
   13748:	ldr	r0, [sp, #28]
   1374c:	mov	r1, r9
   13750:	mov	r2, r4
   13754:	mov	r3, r8
   13758:	bl	16900 <main@@Base+0x3428>
   1375c:	b	1377c <main@@Base+0x2a4>
   13760:	ldr	r1, [sp, #48]	; 0x30
   13764:	str	r1, [r0]
   13768:	ldr	r0, [sp, #28]
   1376c:	mov	r1, r9
   13770:	mov	r2, r4
   13774:	mov	r3, r8
   13778:	bl	16ba0 <main@@Base+0x36c8>
   1377c:	mov	r9, r0
   13780:	ldr	r0, [sp, #52]	; 0x34
   13784:	cmp	r0, #0
   13788:	beq	14124 <main@@Base+0xc4c>
   1378c:	ldr	r0, [sp, #28]
   13790:	mov	r1, r9
   13794:	mov	r2, r4
   13798:	add	r3, sp, #48	; 0x30
   1379c:	bl	21f9c <flatcc_json_parser_build_string@@Base>
   137a0:	mov	r9, r0
   137a4:	ldr	r0, [sp, #48]	; 0x30
   137a8:	cmp	r0, #0
   137ac:	beq	13658 <main@@Base+0x180>
   137b0:	ldr	r0, [sp, #28]
   137b4:	ldr	r0, [r0]
   137b8:	mov	r1, #1
   137bc:	bl	1d924 <flatcc_builder_extend_offset_vector@@Base>
   137c0:	cmp	r0, #0
   137c4:	bne	13760 <main@@Base+0x288>
   137c8:	b	13658 <main@@Base+0x180>
   137cc:	str	r8, [sp]
   137d0:	ldr	r0, [sp, #28]
   137d4:	mov	r1, r7
   137d8:	mov	r2, r4
   137dc:	movw	r3, #28804	; 0x7084
   137e0:	movt	r3, #3
   137e4:	bl	16780 <main@@Base+0x32a8>
   137e8:	mov	r9, r0
   137ec:	cmp	r0, r7
   137f0:	ldr	r6, [sp, #24]
   137f4:	cmpne	r9, r4
   137f8:	beq	13658 <main@@Base+0x180>
   137fc:	ldrb	r4, [sp, #32]
   13800:	cmp	r4, #8
   13804:	add	r8, sp, #52	; 0x34
   13808:	bne	1381c <main@@Base+0x344>
   1380c:	ldr	r0, [sp, #28]
   13810:	ldrb	r0, [r0, #8]
   13814:	tst	r0, #2
   13818:	beq	14094 <main@@Base+0xbbc>
   1381c:	ldr	r0, [sp, #28]
   13820:	ldr	r0, [r0]
   13824:	mov	r1, #6
   13828:	mov	r2, #1
   1382c:	mov	r3, #1
   13830:	bl	1ee30 <flatcc_builder_table_add@@Base>
   13834:	cmp	r0, #0
   13838:	beq	15c20 <main@@Base+0x2748>
   1383c:	sxtb	r1, r4
   13840:	bl	168e0 <main@@Base+0x3408>
   13844:	b	14094 <main@@Base+0xbbc>
   13848:	ldr	r0, [sp, #28]
   1384c:	mov	r1, r9
   13850:	b	13f88 <main@@Base+0xab0>
   13854:	mov	r7, r9
   13858:	b	139e4 <main@@Base+0x50c>
   1385c:	ldr	r0, [sp, #28]
   13860:	mov	r1, r7
   13864:	b	15b70 <main@@Base+0x2698>
   13868:	movw	r2, #24428	; 0x5f6c
   1386c:	movt	r2, #102	; 0x66
   13870:	eor	r2, r2, r1, lsr #8
   13874:	lsr	r0, r0, #8
   13878:	orr	r0, r0, r1, lsl #24
   1387c:	movw	r1, #26483	; 0x6773
   13880:	movt	r1, #28526	; 0x6f6e
   13884:	eor	r0, r0, r1
   13888:	orrs	r0, r0, r2
   1388c:	add	r8, sp, #52	; 0x34
   13890:	bne	139e4 <main@@Base+0x50c>
   13894:	ldr	r0, [sp, #28]
   13898:	mov	r1, r7
   1389c:	mov	r2, r4
   138a0:	mov	r3, #7
   138a4:	bl	15d04 <main@@Base+0x282c>
   138a8:	mov	r9, r0
   138ac:	cmp	r7, r0
   138b0:	beq	139fc <main@@Base+0x524>
   138b4:	ldr	r0, [sp, #28]
   138b8:	ldr	r0, [r0]
   138bc:	mov	r1, #8
   138c0:	mov	r2, #8
   138c4:	mvn	r3, #-536870912	; 0xe0000000
   138c8:	bl	1dd48 <flatcc_builder_start_vector@@Base>
   138cc:	cmp	r0, #0
   138d0:	bne	13658 <main@@Base+0x180>
   138d4:	ldr	r0, [sp, #28]
   138d8:	mov	r1, r9
   138dc:	mov	r2, r4
   138e0:	mov	r3, r8
   138e4:	bl	16900 <main@@Base+0x3428>
   138e8:	mov	r9, r0
   138ec:	ldr	r0, [sp, #52]	; 0x34
   138f0:	cmp	r0, #0
   138f4:	beq	139bc <main@@Base+0x4e4>
   138f8:	mov	r0, #0
   138fc:	str	r0, [sp, #36]	; 0x24
   13900:	str	r0, [sp, #32]
   13904:	ldr	r0, [sp, #28]
   13908:	ldr	r0, [r0]
   1390c:	mov	r1, #1
   13910:	bl	1d760 <flatcc_builder_extend_vector@@Base>
   13914:	cmp	r0, #0
   13918:	beq	13658 <main@@Base+0x180>
   1391c:	mov	r7, r0
   13920:	ldr	r0, [sp, #28]
   13924:	mov	r1, r9
   13928:	mov	r2, r4
   1392c:	mov	r5, r4
   13930:	add	r4, sp, #32
   13934:	mov	r3, r4
   13938:	bl	186f8 <main@@Base+0x5220>
   1393c:	mov	r6, r0
   13940:	cmp	r9, r0
   13944:	beq	13954 <main@@Base+0x47c>
   13948:	mov	r9, r6
   1394c:	mov	r4, r5
   13950:	b	13984 <main@@Base+0x4ac>
   13954:	str	r4, [sp]
   13958:	ldr	r0, [sp, #28]
   1395c:	mov	r1, r6
   13960:	mov	r2, r5
   13964:	movw	r3, #29064	; 0x7188
   13968:	movt	r3, #3
   1396c:	bl	1878c <main@@Base+0x52b4>
   13970:	mov	r9, r0
   13974:	cmp	r0, r6
   13978:	mov	r4, r5
   1397c:	cmpne	r9, r4
   13980:	beq	13658 <main@@Base+0x180>
   13984:	ldr	r2, [sp, #32]
   13988:	ldr	r3, [sp, #36]	; 0x24
   1398c:	mov	r0, r7
   13990:	bl	188f0 <main@@Base+0x5418>
   13994:	ldr	r0, [sp, #28]
   13998:	mov	r1, r9
   1399c:	mov	r2, r4
   139a0:	mov	r3, r8
   139a4:	bl	16ba0 <main@@Base+0x36c8>
   139a8:	mov	r9, r0
   139ac:	ldr	r0, [sp, #52]	; 0x34
   139b0:	cmp	r0, #0
   139b4:	ldr	r6, [sp, #24]
   139b8:	bne	138f8 <main@@Base+0x420>
   139bc:	ldr	r0, [sp, #28]
   139c0:	ldr	r0, [r0]
   139c4:	bl	1e998 <flatcc_builder_end_vector@@Base>
   139c8:	str	r0, [sp, #48]	; 0x30
   139cc:	cmp	r0, #0
   139d0:	beq	13658 <main@@Base+0x180>
   139d4:	ldr	r0, [sp, #28]
   139d8:	ldr	r0, [r0]
   139dc:	mov	r1, #32
   139e0:	b	1431c <main@@Base+0xe44>
   139e4:	ldr	r0, [sp, #28]
   139e8:	mov	r1, r7
   139ec:	mov	r2, r4
   139f0:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   139f4:	mov	r9, r0
   139f8:	b	15b84 <main@@Base+0x26ac>
   139fc:	ldr	r0, [sp, #28]
   13a00:	mov	r1, r9
   13a04:	b	139ec <main@@Base+0x514>
   13a08:	ldrb	r1, [sp, #32]
   13a0c:	mov	r0, r7
   13a10:	bl	16b80 <main@@Base+0x36a8>
   13a14:	ldr	r0, [sp, #28]
   13a18:	mov	r1, r9
   13a1c:	mov	r2, r4
   13a20:	mov	r3, r8
   13a24:	bl	16ba0 <main@@Base+0x36c8>
   13a28:	mov	r9, r0
   13a2c:	ldr	r0, [sp, #52]	; 0x34
   13a30:	cmp	r0, #0
   13a34:	beq	142f8 <main@@Base+0xe20>
   13a38:	mov	r0, #0
   13a3c:	strb	r0, [sp, #32]
   13a40:	ldr	r0, [sp, #28]
   13a44:	ldr	r0, [r0]
   13a48:	mov	r1, #1
   13a4c:	bl	1d760 <flatcc_builder_extend_vector@@Base>
   13a50:	cmp	r0, #0
   13a54:	beq	13658 <main@@Base+0x180>
   13a58:	mov	r7, r0
   13a5c:	ldr	r0, [sp, #28]
   13a60:	mov	r1, r9
   13a64:	mov	r2, r4
   13a68:	mov	r5, r4
   13a6c:	add	r4, sp, #32
   13a70:	mov	r3, r4
   13a74:	bl	16990 <main@@Base+0x34b8>
   13a78:	mov	r6, r0
   13a7c:	cmp	r9, r0
   13a80:	beq	13a94 <main@@Base+0x5bc>
   13a84:	mov	r9, r6
   13a88:	ldr	r6, [sp, #24]
   13a8c:	mov	r4, r5
   13a90:	b	13a08 <main@@Base+0x530>
   13a94:	str	r4, [sp]
   13a98:	ldr	r0, [sp, #28]
   13a9c:	mov	r1, r6
   13aa0:	mov	r2, r5
   13aa4:	movw	r3, #29040	; 0x7170
   13aa8:	movt	r3, #3
   13aac:	bl	16a20 <main@@Base+0x3548>
   13ab0:	mov	r9, r0
   13ab4:	cmp	r0, r6
   13ab8:	mov	r4, r5
   13abc:	beq	13658 <main@@Base+0x180>
   13ac0:	cmp	r9, r4
   13ac4:	ldr	r6, [sp, #24]
   13ac8:	bne	13a08 <main@@Base+0x530>
   13acc:	b	13658 <main@@Base+0x180>
   13ad0:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   13ad4:	add	r6, r6, #8
   13ad8:	mov	r0, r6
   13adc:	mov	r1, r4
   13ae0:	bl	15d00 <main@@Base+0x2828>
   13ae4:	and	r0, r1, #-16777216	; 0xff000000
   13ae8:	teq	r0, #1627389952	; 0x61000000
   13aec:	bne	13f74 <main@@Base+0xa9c>
   13af0:	ldr	r0, [sp, #28]
   13af4:	mov	r1, r6
   13af8:	mov	r2, r4
   13afc:	mov	r3, #1
   13b00:	bl	15d04 <main@@Base+0x282c>
   13b04:	mov	r7, r0
   13b08:	cmp	r6, r0
   13b0c:	beq	13f80 <main@@Base+0xaa8>
   13b10:	mov	r0, #0
   13b14:	str	r0, [sp, #32]
   13b18:	ldr	r0, [sp, #28]
   13b1c:	mov	r1, r7
   13b20:	mov	r2, r4
   13b24:	mov	r5, r4
   13b28:	add	r4, sp, #32
   13b2c:	mov	r3, r4
   13b30:	bl	184e8 <main@@Base+0x5010>
   13b34:	mov	r6, r0
   13b38:	cmp	r7, r0
   13b3c:	beq	1429c <main@@Base+0xdc4>
   13b40:	mov	r9, r6
   13b44:	mov	r4, r5
   13b48:	b	142cc <main@@Base+0xdf4>
   13b4c:	ldr	r0, [sp, #28]
   13b50:	mov	r1, r7
   13b54:	mov	r2, r4
   13b58:	mov	r3, #8
   13b5c:	bl	15d04 <main@@Base+0x282c>
   13b60:	mov	r6, r0
   13b64:	cmp	r7, r0
   13b68:	beq	13ef8 <main@@Base+0xa20>
   13b6c:	mov	r0, #0
   13b70:	str	r0, [sp, #36]	; 0x24
   13b74:	str	r0, [sp, #32]
   13b78:	ldr	r0, [sp, #28]
   13b7c:	mov	r1, r6
   13b80:	mov	r2, r4
   13b84:	mov	r5, r4
   13b88:	add	r4, sp, #32
   13b8c:	mov	r3, r4
   13b90:	bl	18b28 <main@@Base+0x5650>
   13b94:	mov	r7, r0
   13b98:	cmp	r6, r0
   13b9c:	beq	14218 <main@@Base+0xd40>
   13ba0:	mov	r9, r7
   13ba4:	mov	r4, r5
   13ba8:	b	14248 <main@@Base+0xd70>
   13bac:	str	r4, [sp]
   13bb0:	ldr	r0, [sp, #28]
   13bb4:	mov	r1, r7
   13bb8:	mov	r2, r5
   13bbc:	movw	r3, #28896	; 0x70e0
   13bc0:	movt	r3, #3
   13bc4:	bl	179fc <main@@Base+0x4524>
   13bc8:	mov	r9, r0
   13bcc:	cmp	r0, r7
   13bd0:	mov	r4, r5
   13bd4:	cmpne	r9, r4
   13bd8:	beq	13658 <main@@Base+0x180>
   13bdc:	ldrb	r6, [sp, #32]
   13be0:	cmp	r6, #1
   13be4:	bne	13bf8 <main@@Base+0x720>
   13be8:	ldr	r0, [sp, #28]
   13bec:	ldrb	r0, [r0, #8]
   13bf0:	tst	r0, #2
   13bf4:	beq	14294 <main@@Base+0xdbc>
   13bf8:	ldr	r0, [sp, #28]
   13bfc:	ldr	r0, [r0]
   13c00:	mov	r1, #15
   13c04:	mov	r2, #1
   13c08:	mov	r3, #1
   13c0c:	bl	1ee30 <flatcc_builder_table_add@@Base>
   13c10:	cmp	r0, #0
   13c14:	beq	13658 <main@@Base+0x180>
   13c18:	mov	r1, r6
   13c1c:	bl	17b5c <main@@Base+0x4684>
   13c20:	b	14294 <main@@Base+0xdbc>
   13c24:	ldr	r6, [sp, #24]
   13c28:	bl	1e998 <flatcc_builder_end_vector@@Base>
   13c2c:	str	r0, [sp, #48]	; 0x30
   13c30:	cmp	r0, #0
   13c34:	beq	13658 <main@@Base+0x180>
   13c38:	ldr	r0, [sp, #28]
   13c3c:	ldr	r0, [r0]
   13c40:	mov	r1, #31
   13c44:	b	1431c <main@@Base+0xe44>
   13c48:	bl	1e998 <flatcc_builder_end_vector@@Base>
   13c4c:	str	r0, [sp, #48]	; 0x30
   13c50:	cmp	r0, #0
   13c54:	beq	13658 <main@@Base+0x180>
   13c58:	ldr	r0, [sp, #28]
   13c5c:	ldr	r0, [r0]
   13c60:	mov	r1, #29
   13c64:	b	1431c <main@@Base+0xe44>
   13c68:	str	r4, [sp]
   13c6c:	ldr	r0, [sp, #28]
   13c70:	mov	r1, r7
   13c74:	mov	r2, r5
   13c78:	movw	r3, #28944	; 0x7110
   13c7c:	movt	r3, #3
   13c80:	bl	18578 <main@@Base+0x50a0>
   13c84:	mov	r9, r0
   13c88:	cmp	r0, r7
   13c8c:	mov	r4, r5
   13c90:	cmpne	r9, r4
   13c94:	beq	13658 <main@@Base+0x180>
   13c98:	ldr	r6, [sp, #32]
   13c9c:	cmp	r6, #0
   13ca0:	bne	13cb4 <main@@Base+0x7dc>
   13ca4:	ldr	r0, [sp, #28]
   13ca8:	ldrb	r0, [r0, #8]
   13cac:	tst	r0, #2
   13cb0:	beq	14294 <main@@Base+0xdbc>
   13cb4:	ldr	r0, [sp, #28]
   13cb8:	ldr	r0, [r0]
   13cbc:	mov	r1, #16
   13cc0:	mov	r2, #4
   13cc4:	mov	r3, #4
   13cc8:	bl	1ee30 <flatcc_builder_table_add@@Base>
   13ccc:	cmp	r0, #0
   13cd0:	beq	13658 <main@@Base+0x180>
   13cd4:	mov	r1, r6
   13cd8:	bl	186d8 <main@@Base+0x5200>
   13cdc:	b	14294 <main@@Base+0xdbc>
   13ce0:	str	r4, [sp]
   13ce4:	ldr	r0, [sp, #28]
   13ce8:	mov	r1, r7
   13cec:	mov	r2, r5
   13cf0:	movw	r3, #28832	; 0x70a0
   13cf4:	movt	r3, #3
   13cf8:	bl	16cf0 <main@@Base+0x3818>
   13cfc:	mov	r9, r0
   13d00:	cmp	r0, r7
   13d04:	ldr	r6, [sp, #24]
   13d08:	mov	r4, r5
   13d0c:	cmpne	r9, r4
   13d10:	beq	13658 <main@@Base+0x180>
   13d14:	ldrh	r4, [sp, #32]
   13d18:	cmp	r4, #100	; 0x64
   13d1c:	bne	13d30 <main@@Base+0x858>
   13d20:	ldr	r0, [sp, #28]
   13d24:	ldrb	r0, [r0, #8]
   13d28:	tst	r0, #2
   13d2c:	beq	14094 <main@@Base+0xbbc>
   13d30:	ldr	r0, [sp, #28]
   13d34:	ldr	r0, [r0]
   13d38:	mov	r1, #2
   13d3c:	b	14078 <main@@Base+0xba0>
   13d40:	str	r4, [sp]
   13d44:	ldr	r0, [sp, #28]
   13d48:	mov	r1, r7
   13d4c:	mov	r2, r8
   13d50:	movw	r3, #28908	; 0x70ec
   13d54:	movt	r3, #3
   13d58:	bl	18384 <main@@Base+0x4eac>
   13d5c:	mov	r9, r0
   13d60:	cmp	r0, r7
   13d64:	ldr	r6, [sp, #24]
   13d68:	mov	r4, r8
   13d6c:	beq	13658 <main@@Base+0x180>
   13d70:	cmp	r9, r4
   13d74:	add	r8, sp, #52	; 0x34
   13d78:	beq	13658 <main@@Base+0x180>
   13d7c:	vldr	s0, [sp, #32]
   13d80:	vcmp.f32	s0, s16
   13d84:	vmrs	APSR_nzcv, fpscr
   13d88:	bne	13d9c <main@@Base+0x8c4>
   13d8c:	ldr	r0, [sp, #28]
   13d90:	ldrb	r0, [r0, #8]
   13d94:	tst	r0, #2
   13d98:	beq	15b84 <main@@Base+0x26ac>
   13d9c:	ldr	r0, [sp, #28]
   13da0:	ldr	r0, [r0]
   13da4:	mov	r1, #26
   13da8:	b	14104 <main@@Base+0xc2c>
   13dac:	ldr	r0, [sp, #28]
   13db0:	ldr	r0, [r0]
   13db4:	bl	1de8c <flatcc_builder_end_offset_vector@@Base>
   13db8:	str	r0, [sp, #48]	; 0x30
   13dbc:	cmp	r0, #0
   13dc0:	beq	13658 <main@@Base+0x180>
   13dc4:	ldr	r0, [sp, #28]
   13dc8:	ldr	r0, [r0]
   13dcc:	mov	r1, #28
   13dd0:	b	1431c <main@@Base+0xe44>
   13dd4:	ldr	r0, [sp, #28]
   13dd8:	ldr	r0, [r0]
   13ddc:	bl	1de8c <flatcc_builder_end_offset_vector@@Base>
   13de0:	str	r0, [sp, #48]	; 0x30
   13de4:	cmp	r0, #0
   13de8:	beq	13658 <main@@Base+0x180>
   13dec:	ldr	r0, [sp, #28]
   13df0:	ldr	r0, [r0]
   13df4:	mov	r1, #11
   13df8:	b	1431c <main@@Base+0xe44>
   13dfc:	ldr	r0, [sp, #28]
   13e00:	b	139ec <main@@Base+0x514>
   13e04:	add	r6, r6, #8
   13e08:	mov	r0, r6
   13e0c:	mov	r1, r4
   13e10:	bl	15d00 <main@@Base+0x2828>
   13e14:	and	r0, r1, #-16777216	; 0xff000000
   13e18:	teq	r0, #1627389952	; 0x61000000
   13e1c:	bne	13f74 <main@@Base+0xa9c>
   13e20:	ldr	r0, [sp, #28]
   13e24:	mov	r1, r6
   13e28:	mov	r2, r4
   13e2c:	mov	r3, #1
   13e30:	bl	15d04 <main@@Base+0x282c>
   13e34:	mov	r7, r0
   13e38:	cmp	r6, r0
   13e3c:	beq	13f80 <main@@Base+0xaa8>
   13e40:	mov	r0, #0
   13e44:	str	r0, [sp, #36]	; 0x24
   13e48:	str	r0, [sp, #32]
   13e4c:	ldr	r0, [sp, #28]
   13e50:	mov	r1, r7
   13e54:	mov	r2, r4
   13e58:	mov	r5, r4
   13e5c:	add	r4, sp, #32
   13e60:	mov	r3, r4
   13e64:	bl	186f8 <main@@Base+0x5220>
   13e68:	mov	r6, r0
   13e6c:	cmp	r7, r0
   13e70:	beq	14334 <main@@Base+0xe5c>
   13e74:	mov	r9, r6
   13e78:	mov	r4, r5
   13e7c:	b	14364 <main@@Base+0xe8c>
   13e80:	add	r6, r6, #8
   13e84:	mov	r0, r6
   13e88:	mov	r1, r4
   13e8c:	bl	15d00 <main@@Base+0x2828>
   13e90:	and	r0, r1, #-16777216	; 0xff000000
   13e94:	teq	r0, #1627389952	; 0x61000000
   13e98:	bne	13f74 <main@@Base+0xa9c>
   13e9c:	ldr	r0, [sp, #28]
   13ea0:	mov	r1, r6
   13ea4:	mov	r2, r4
   13ea8:	mov	r3, #1
   13eac:	bl	15d04 <main@@Base+0x282c>
   13eb0:	mov	r7, r0
   13eb4:	cmp	r6, r0
   13eb8:	beq	13f80 <main@@Base+0xaa8>
   13ebc:	mov	r0, #0
   13ec0:	str	r0, [sp, #32]
   13ec4:	ldr	r0, [sp, #28]
   13ec8:	mov	r1, r7
   13ecc:	mov	r2, r4
   13ed0:	mov	r5, r4
   13ed4:	add	r4, sp, #32
   13ed8:	mov	r3, r4
   13edc:	bl	18918 <main@@Base+0x5440>
   13ee0:	mov	r6, r0
   13ee4:	cmp	r7, r0
   13ee8:	beq	143b4 <main@@Base+0xedc>
   13eec:	mov	r9, r6
   13ef0:	mov	r4, r5
   13ef4:	b	143e4 <main@@Base+0xf0c>
   13ef8:	add	r6, r6, #8
   13efc:	mov	r0, r6
   13f00:	mov	r1, r4
   13f04:	bl	15d00 <main@@Base+0x2828>
   13f08:	and	r0, r1, #-16777216	; 0xff000000
   13f0c:	teq	r0, #1627389952	; 0x61000000
   13f10:	bne	13f74 <main@@Base+0xa9c>
   13f14:	ldr	r0, [sp, #28]
   13f18:	mov	r1, r6
   13f1c:	mov	r2, r4
   13f20:	mov	r3, #1
   13f24:	bl	15d04 <main@@Base+0x282c>
   13f28:	mov	r7, r0
   13f2c:	cmp	r6, r0
   13f30:	beq	13f80 <main@@Base+0xaa8>
   13f34:	mov	r0, #0
   13f38:	str	r0, [sp, #36]	; 0x24
   13f3c:	str	r0, [sp, #32]
   13f40:	ldr	r0, [sp, #28]
   13f44:	mov	r1, r7
   13f48:	mov	r2, r4
   13f4c:	mov	r5, r4
   13f50:	add	r4, sp, #32
   13f54:	mov	r3, r4
   13f58:	bl	18b28 <main@@Base+0x5650>
   13f5c:	mov	r6, r0
   13f60:	cmp	r7, r0
   13f64:	beq	14410 <main@@Base+0xf38>
   13f68:	mov	r9, r6
   13f6c:	mov	r4, r5
   13f70:	b	14440 <main@@Base+0xf68>
   13f74:	ldr	r0, [sp, #28]
   13f78:	mov	r1, r6
   13f7c:	b	13f88 <main@@Base+0xab0>
   13f80:	ldr	r0, [sp, #28]
   13f84:	mov	r1, r7
   13f88:	mov	r2, r4
   13f8c:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   13f90:	mov	r9, r0
   13f94:	ldr	r6, [sp, #24]
   13f98:	b	15b84 <main@@Base+0x26ac>
   13f9c:	str	r4, [sp]
   13fa0:	ldr	r0, [sp, #28]
   13fa4:	mov	r1, r7
   13fa8:	mov	r2, r5
   13fac:	movw	r3, #28968	; 0x7128
   13fb0:	movt	r3, #3
   13fb4:	bl	1878c <main@@Base+0x52b4>
   13fb8:	mov	r9, r0
   13fbc:	cmp	r0, r7
   13fc0:	mov	r4, r5
   13fc4:	cmpne	r9, r4
   13fc8:	beq	13658 <main@@Base+0x180>
   13fcc:	ldr	r7, [sp, #32]
   13fd0:	ldr	r6, [sp, #36]	; 0x24
   13fd4:	orrs	r0, r7, r6
   13fd8:	bne	13fec <main@@Base+0xb14>
   13fdc:	ldr	r0, [sp, #28]
   13fe0:	ldrb	r0, [r0, #8]
   13fe4:	tst	r0, #2
   13fe8:	beq	14294 <main@@Base+0xdbc>
   13fec:	ldr	r0, [sp, #28]
   13ff0:	ldr	r0, [r0]
   13ff4:	mov	r1, #18
   13ff8:	mov	r2, #8
   13ffc:	mov	r3, #8
   14000:	bl	1ee30 <flatcc_builder_table_add@@Base>
   14004:	cmp	r0, #0
   14008:	beq	13658 <main@@Base+0x180>
   1400c:	mov	r2, r7
   14010:	mov	r3, r6
   14014:	bl	188f0 <main@@Base+0x5418>
   14018:	b	14294 <main@@Base+0xdbc>
   1401c:	str	r4, [sp]
   14020:	ldr	r0, [sp, #28]
   14024:	mov	r1, r7
   14028:	mov	r2, r5
   1402c:	movw	r3, #28856	; 0x70b8
   14030:	movt	r3, #3
   14034:	bl	16cf0 <main@@Base+0x3818>
   14038:	mov	r9, r0
   1403c:	cmp	r0, r7
   14040:	ldr	r6, [sp, #24]
   14044:	mov	r4, r5
   14048:	cmpne	r9, r4
   1404c:	beq	13658 <main@@Base+0x180>
   14050:	ldrh	r4, [sp, #32]
   14054:	cmp	r4, #150	; 0x96
   14058:	bne	1406c <main@@Base+0xb94>
   1405c:	ldr	r0, [sp, #28]
   14060:	ldrb	r0, [r0, #8]
   14064:	tst	r0, #2
   14068:	beq	14094 <main@@Base+0xbbc>
   1406c:	ldr	r0, [sp, #28]
   14070:	ldr	r0, [r0]
   14074:	mov	r1, #1
   14078:	mov	r2, #2
   1407c:	mov	r3, #2
   14080:	bl	1ee30 <flatcc_builder_table_add@@Base>
   14084:	cmp	r0, #0
   14088:	beq	15c20 <main@@Base+0x2748>
   1408c:	sxth	r1, r4
   14090:	bl	16e50 <main@@Base+0x3978>
   14094:	ldr	r4, [sp, #20]
   14098:	b	15b84 <main@@Base+0x26ac>
   1409c:	str	r4, [sp]
   140a0:	ldr	r0, [sp, #28]
   140a4:	mov	r1, r7
   140a8:	mov	r2, r8
   140ac:	movw	r3, #28920	; 0x70f8
   140b0:	movt	r3, #3
   140b4:	bl	18384 <main@@Base+0x4eac>
   140b8:	mov	r9, r0
   140bc:	cmp	r0, r7
   140c0:	ldr	r6, [sp, #24]
   140c4:	mov	r4, r8
   140c8:	beq	13658 <main@@Base+0x180>
   140cc:	cmp	r9, r4
   140d0:	add	r8, sp, #52	; 0x34
   140d4:	beq	13658 <main@@Base+0x180>
   140d8:	vldr	s0, [sp, #32]
   140dc:	vcmp.f32	s0, s18
   140e0:	vmrs	APSR_nzcv, fpscr
   140e4:	bne	140f8 <main@@Base+0xc20>
   140e8:	ldr	r0, [sp, #28]
   140ec:	ldrb	r0, [r0, #8]
   140f0:	tst	r0, #2
   140f4:	beq	15b84 <main@@Base+0x26ac>
   140f8:	ldr	r0, [sp, #28]
   140fc:	ldr	r0, [r0]
   14100:	mov	r1, #25
   14104:	mov	r2, #4
   14108:	mov	r3, #4
   1410c:	bl	1ee30 <flatcc_builder_table_add@@Base>
   14110:	cmp	r0, #0
   14114:	beq	13658 <main@@Base+0x180>
   14118:	vldr	s0, [sp, #32]
   1411c:	bl	184d0 <main@@Base+0x4ff8>
   14120:	b	15b84 <main@@Base+0x26ac>
   14124:	ldr	r0, [sp, #28]
   14128:	ldr	r0, [r0]
   1412c:	bl	1de8c <flatcc_builder_end_offset_vector@@Base>
   14130:	str	r0, [sp, #48]	; 0x30
   14134:	cmp	r0, #0
   14138:	beq	13658 <main@@Base+0x180>
   1413c:	ldr	r0, [sp, #28]
   14140:	ldr	r0, [r0]
   14144:	mov	r1, #10
   14148:	b	1431c <main@@Base+0xe44>
   1414c:	ldr	r0, [sp, #28]
   14150:	ldr	r0, [r0]
   14154:	mov	r1, #0
   14158:	mov	r2, #0
   1415c:	mov	r3, #0
   14160:	bl	1d334 <flatcc_builder_start_buffer@@Base>
   14164:	cmp	r0, #0
   14168:	bne	13658 <main@@Base+0x180>
   1416c:	ldr	r0, [sp, #28]
   14170:	mov	r1, r9
   14174:	mov	r2, r4
   14178:	add	r3, sp, #48	; 0x30
   1417c:	bl	13618 <main@@Base+0x140>
   14180:	mov	r9, r0
   14184:	ldr	r1, [sp, #48]	; 0x30
   14188:	cmp	r1, #0
   1418c:	beq	13658 <main@@Base+0x180>
   14190:	ldr	r0, [sp, #28]
   14194:	ldr	r0, [r0]
   14198:	bl	1d4e8 <flatcc_builder_end_buffer@@Base>
   1419c:	b	14304 <main@@Base+0xe2c>
   141a0:	str	r4, [sp]
   141a4:	ldr	r0, [sp, #28]
   141a8:	mov	r1, r7
   141ac:	mov	r2, r5
   141b0:	movw	r3, #28992	; 0x7140
   141b4:	movt	r3, #3
   141b8:	bl	189a8 <main@@Base+0x54d0>
   141bc:	mov	r9, r0
   141c0:	cmp	r0, r7
   141c4:	mov	r4, r5
   141c8:	cmpne	r9, r4
   141cc:	beq	13658 <main@@Base+0x180>
   141d0:	ldr	r6, [sp, #32]
   141d4:	cmp	r6, #0
   141d8:	bne	141ec <main@@Base+0xd14>
   141dc:	ldr	r0, [sp, #28]
   141e0:	ldrb	r0, [r0, #8]
   141e4:	tst	r0, #2
   141e8:	beq	14294 <main@@Base+0xdbc>
   141ec:	ldr	r0, [sp, #28]
   141f0:	ldr	r0, [r0]
   141f4:	mov	r1, #17
   141f8:	mov	r2, #4
   141fc:	mov	r3, #4
   14200:	bl	1ee30 <flatcc_builder_table_add@@Base>
   14204:	cmp	r0, #0
   14208:	beq	13658 <main@@Base+0x180>
   1420c:	mov	r1, r6
   14210:	bl	18b08 <main@@Base+0x5630>
   14214:	b	14294 <main@@Base+0xdbc>
   14218:	str	r4, [sp]
   1421c:	ldr	r0, [sp, #28]
   14220:	mov	r1, r7
   14224:	mov	r2, r5
   14228:	movw	r3, #29016	; 0x7158
   1422c:	movt	r3, #3
   14230:	bl	18bbc <main@@Base+0x56e4>
   14234:	mov	r9, r0
   14238:	cmp	r0, r7
   1423c:	mov	r4, r5
   14240:	cmpne	r9, r4
   14244:	beq	13658 <main@@Base+0x180>
   14248:	ldr	r6, [sp, #32]
   1424c:	ldr	r7, [sp, #36]	; 0x24
   14250:	orrs	r0, r6, r7
   14254:	bne	14268 <main@@Base+0xd90>
   14258:	ldr	r0, [sp, #28]
   1425c:	ldrb	r0, [r0, #8]
   14260:	tst	r0, #2
   14264:	beq	14294 <main@@Base+0xdbc>
   14268:	ldr	r0, [sp, #28]
   1426c:	ldr	r0, [r0]
   14270:	mov	r1, #19
   14274:	mov	r2, #8
   14278:	mov	r3, #8
   1427c:	bl	1ee30 <flatcc_builder_table_add@@Base>
   14280:	cmp	r0, #0
   14284:	beq	13658 <main@@Base+0x180>
   14288:	mov	r2, r6
   1428c:	mov	r3, r7
   14290:	bl	18d20 <main@@Base+0x5848>
   14294:	ldr	r6, [sp, #24]
   14298:	b	15b84 <main@@Base+0x26ac>
   1429c:	str	r4, [sp]
   142a0:	ldr	r0, [sp, #28]
   142a4:	mov	r1, r6
   142a8:	mov	r2, r5
   142ac:	movw	r3, #28956	; 0x711c
   142b0:	movt	r3, #3
   142b4:	bl	18578 <main@@Base+0x50a0>
   142b8:	mov	r9, r0
   142bc:	cmp	r0, r6
   142c0:	mov	r4, r5
   142c4:	cmpne	r9, r4
   142c8:	beq	13658 <main@@Base+0x180>
   142cc:	ldr	r6, [sp, #32]
   142d0:	cmp	r6, #0
   142d4:	bne	142e8 <main@@Base+0xe10>
   142d8:	ldr	r0, [sp, #28]
   142dc:	ldrb	r0, [r0, #8]
   142e0:	tst	r0, #2
   142e4:	beq	14294 <main@@Base+0xdbc>
   142e8:	ldr	r0, [sp, #28]
   142ec:	ldr	r0, [r0]
   142f0:	mov	r1, #20
   142f4:	b	13cc0 <main@@Base+0x7e8>
   142f8:	ldr	r0, [sp, #28]
   142fc:	ldr	r0, [r0]
   14300:	bl	1e998 <flatcc_builder_end_vector@@Base>
   14304:	str	r0, [sp, #48]	; 0x30
   14308:	cmp	r0, #0
   1430c:	beq	13658 <main@@Base+0x180>
   14310:	ldr	r0, [sp, #28]
   14314:	ldr	r0, [r0]
   14318:	mov	r1, #13
   1431c:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   14320:	cmp	r0, #0
   14324:	beq	13658 <main@@Base+0x180>
   14328:	ldr	r1, [sp, #48]	; 0x30
   1432c:	str	r1, [r0]
   14330:	b	15b84 <main@@Base+0x26ac>
   14334:	str	r4, [sp]
   14338:	ldr	r0, [sp, #28]
   1433c:	mov	r1, r6
   14340:	mov	r2, r5
   14344:	movw	r3, #28980	; 0x7134
   14348:	movt	r3, #3
   1434c:	bl	1878c <main@@Base+0x52b4>
   14350:	mov	r9, r0
   14354:	cmp	r0, r6
   14358:	mov	r4, r5
   1435c:	cmpne	r9, r4
   14360:	beq	13658 <main@@Base+0x180>
   14364:	ldr	r6, [sp, #32]
   14368:	ldr	r7, [sp, #36]	; 0x24
   1436c:	orrs	r0, r6, r7
   14370:	bne	14384 <main@@Base+0xeac>
   14374:	ldr	r0, [sp, #28]
   14378:	ldrb	r0, [r0, #8]
   1437c:	tst	r0, #2
   14380:	beq	14294 <main@@Base+0xdbc>
   14384:	ldr	r0, [sp, #28]
   14388:	ldr	r0, [r0]
   1438c:	mov	r1, #22
   14390:	mov	r2, #8
   14394:	mov	r3, #8
   14398:	bl	1ee30 <flatcc_builder_table_add@@Base>
   1439c:	cmp	r0, #0
   143a0:	beq	13658 <main@@Base+0x180>
   143a4:	mov	r2, r6
   143a8:	mov	r3, r7
   143ac:	bl	188f0 <main@@Base+0x5418>
   143b0:	b	14294 <main@@Base+0xdbc>
   143b4:	str	r4, [sp]
   143b8:	ldr	r0, [sp, #28]
   143bc:	mov	r1, r6
   143c0:	mov	r2, r5
   143c4:	movw	r3, #29004	; 0x714c
   143c8:	movt	r3, #3
   143cc:	bl	189a8 <main@@Base+0x54d0>
   143d0:	mov	r9, r0
   143d4:	cmp	r0, r6
   143d8:	mov	r4, r5
   143dc:	cmpne	r9, r4
   143e0:	beq	13658 <main@@Base+0x180>
   143e4:	ldr	r6, [sp, #32]
   143e8:	cmp	r6, #0
   143ec:	bne	14400 <main@@Base+0xf28>
   143f0:	ldr	r0, [sp, #28]
   143f4:	ldrb	r0, [r0, #8]
   143f8:	tst	r0, #2
   143fc:	beq	14294 <main@@Base+0xdbc>
   14400:	ldr	r0, [sp, #28]
   14404:	ldr	r0, [r0]
   14408:	mov	r1, #21
   1440c:	b	141f8 <main@@Base+0xd20>
   14410:	str	r4, [sp]
   14414:	ldr	r0, [sp, #28]
   14418:	mov	r1, r6
   1441c:	mov	r2, r5
   14420:	movw	r3, #29028	; 0x7164
   14424:	movt	r3, #3
   14428:	bl	18bbc <main@@Base+0x56e4>
   1442c:	mov	r9, r0
   14430:	cmp	r0, r6
   14434:	mov	r4, r5
   14438:	cmpne	r9, r4
   1443c:	beq	13658 <main@@Base+0x180>
   14440:	ldr	r6, [sp, #32]
   14444:	ldr	r7, [sp, #36]	; 0x24
   14448:	orrs	r0, r6, r7
   1444c:	bne	14460 <main@@Base+0xf88>
   14450:	ldr	r0, [sp, #28]
   14454:	ldrb	r0, [r0, #8]
   14458:	tst	r0, #2
   1445c:	beq	14294 <main@@Base+0xdbc>
   14460:	ldr	r0, [sp, #28]
   14464:	ldr	r0, [r0]
   14468:	mov	r1, #23
   1446c:	b	14274 <main@@Base+0xd9c>
   14470:	ldr	r0, [sp, #28]
   14474:	mov	r1, r9
   14478:	mov	r2, r4
   1447c:	bl	15cb8 <main@@Base+0x27e0>
   14480:	mov	r8, r0
   14484:	mov	r1, r4
   14488:	bl	15d00 <main@@Base+0x2828>
   1448c:	mov	sl, r0
   14490:	mov	r7, r1
   14494:	movw	r0, #29281	; 0x7261
   14498:	movt	r0, #24946	; 0x6172
   1449c:	subs	r0, sl, r0
   144a0:	movw	r3, #29556	; 0x7374
   144a4:	movt	r3, #29797	; 0x7465
   144a8:	sbcs	r0, r1, r3
   144ac:	bcs	14558 <main@@Base+0x1080>
   144b0:	movw	r0, #28004	; 0x6d64
   144b4:	movt	r0, #28257	; 0x6e61
   144b8:	cmp	r7, r0
   144bc:	bhi	14734 <main@@Base+0x125c>
   144c0:	movw	r0, #25975	; 0x6577
   144c4:	movt	r0, #26220	; 0x666c
   144c8:	cmp	r7, r0
   144cc:	bhi	14858 <main@@Base+0x1380>
   144d0:	movw	r0, #27759	; 0x6c6f
   144d4:	movt	r0, #25455	; 0x636f
   144d8:	eor	r1, r7, r0
   144dc:	and	r0, sl, #-16777216	; 0xff000000
   144e0:	eor	r2, r0, #1912602624	; 0x72000000
   144e4:	orrs	r1, r2, r1
   144e8:	beq	15004 <main@@Base+0x1b2c>
   144ec:	movw	r1, #25965	; 0x656d
   144f0:	movt	r1, #25966	; 0x656e
   144f4:	eor	r1, r7, r1
   144f8:	eor	r0, r0, #2030043136	; 0x79000000
   144fc:	orrs	r0, r0, r1
   14500:	bne	15944 <main@@Base+0x246c>
   14504:	ldr	r0, [sp, #28]
   14508:	mov	r1, r8
   1450c:	mov	r2, r4
   14510:	mov	r3, #5
   14514:	bl	15d04 <main@@Base+0x282c>
   14518:	mov	r1, r0
   1451c:	cmp	r8, r0
   14520:	beq	1558c <main@@Base+0x20b4>
   14524:	ldr	r0, [sp, #28]
   14528:	mov	r2, r4
   1452c:	add	r3, sp, #48	; 0x30
   14530:	bl	13618 <main@@Base+0x140>
   14534:	mov	r9, r0
   14538:	ldr	r0, [sp, #48]	; 0x30
   1453c:	cmp	r0, #0
   14540:	add	r8, sp, #52	; 0x34
   14544:	beq	13658 <main@@Base+0x180>
   14548:	ldr	r0, [sp, #28]
   1454c:	ldr	r0, [r0]
   14550:	mov	r1, #12
   14554:	b	1431c <main@@Base+0xe44>
   14558:	movw	r0, #0
   1455c:	movt	r0, #26163	; 0x6633
   14560:	subs	r0, sl, r0
   14564:	sbcs	r0, r7, r3
   14568:	bcs	147c4 <main@@Base+0x12ec>
   1456c:	movw	r0, #29281	; 0x7261
   14570:	movt	r0, #24946	; 0x6172
   14574:	eor	r1, sl, r0
   14578:	eor	r0, r7, r3
   1457c:	orrs	r1, r1, r0
   14580:	bne	149c4 <main@@Base+0x14ec>
   14584:	add	r7, r8, #8
   14588:	mov	r0, r7
   1458c:	mov	r1, r4
   14590:	bl	15d00 <main@@Base+0x2828>
   14594:	movw	r2, #26989	; 0x696d
   14598:	movt	r2, #29810	; 0x7472
   1459c:	subs	r2, r2, r0
   145a0:	movw	r5, #26227	; 0x6673
   145a4:	movt	r5, #31087	; 0x796f
   145a8:	sbcs	r2, r5, r1
   145ac:	bcc	14c0c <main@@Base+0x1734>
   145b0:	movw	r2, #29797	; 0x7465
   145b4:	movt	r2, #28530	; 0x6f72
   145b8:	eor	r2, r0, r2
   145bc:	eor	r3, r1, r5
   145c0:	orrs	r2, r2, r3
   145c4:	beq	15594 <main@@Base+0x20bc>
   145c8:	movw	r2, #27763	; 0x6c73
   145cc:	movt	r2, #28527	; 0x6f6f
   145d0:	eor	r0, r0, r2
   145d4:	movw	r2, #26210	; 0x6662
   145d8:	movt	r2, #31087	; 0x796f
   145dc:	eor	r1, r1, r2
   145e0:	orrs	r0, r0, r1
   145e4:	bne	1568c <main@@Base+0x21b4>
   145e8:	ldr	r0, [sp, #28]
   145ec:	mov	r1, r7
   145f0:	mov	r2, r4
   145f4:	mov	r3, #8
   145f8:	bl	15d04 <main@@Base+0x282c>
   145fc:	mov	r9, r0
   14600:	cmp	r7, r0
   14604:	add	r8, sp, #52	; 0x34
   14608:	beq	13854 <main@@Base+0x37c>
   1460c:	ldr	r0, [sp, #28]
   14610:	ldr	r0, [r0]
   14614:	mov	r1, #1
   14618:	mov	r2, #1
   1461c:	mvn	r3, #0
   14620:	bl	1dd48 <flatcc_builder_start_vector@@Base>
   14624:	cmp	r0, #0
   14628:	bne	13658 <main@@Base+0x180>
   1462c:	ldr	r0, [sp, #28]
   14630:	mov	r1, r9
   14634:	mov	r2, r4
   14638:	mov	r3, r8
   1463c:	bl	16900 <main@@Base+0x3428>
   14640:	mov	r9, r0
   14644:	ldr	r0, [sp, #52]	; 0x34
   14648:	cmp	r0, #0
   1464c:	beq	1470c <main@@Base+0x1234>
   14650:	mov	r0, #0
   14654:	strb	r0, [sp, #32]
   14658:	ldr	r0, [sp, #28]
   1465c:	ldr	r0, [r0]
   14660:	mov	r1, #1
   14664:	bl	1d760 <flatcc_builder_extend_vector@@Base>
   14668:	cmp	r0, #0
   1466c:	beq	13658 <main@@Base+0x180>
   14670:	mov	r7, r0
   14674:	ldr	r0, [sp, #28]
   14678:	mov	r1, r9
   1467c:	mov	r2, r4
   14680:	mov	r5, r4
   14684:	add	r4, sp, #32
   14688:	mov	r3, r4
   1468c:	bl	17948 <main@@Base+0x4470>
   14690:	mov	r6, r0
   14694:	cmp	r9, r0
   14698:	beq	146a8 <main@@Base+0x11d0>
   1469c:	mov	r9, r6
   146a0:	mov	r4, r5
   146a4:	b	146d8 <main@@Base+0x1200>
   146a8:	str	r4, [sp]
   146ac:	ldr	r0, [sp, #28]
   146b0:	mov	r1, r6
   146b4:	mov	r2, r5
   146b8:	movw	r3, #28884	; 0x70d4
   146bc:	movt	r3, #3
   146c0:	bl	179fc <main@@Base+0x4524>
   146c4:	mov	r9, r0
   146c8:	cmp	r0, r6
   146cc:	mov	r4, r5
   146d0:	cmpne	r9, r4
   146d4:	beq	13658 <main@@Base+0x180>
   146d8:	ldrb	r1, [sp, #32]
   146dc:	mov	r0, r7
   146e0:	bl	17b5c <main@@Base+0x4684>
   146e4:	ldr	r0, [sp, #28]
   146e8:	mov	r1, r9
   146ec:	mov	r2, r4
   146f0:	mov	r3, r8
   146f4:	bl	16ba0 <main@@Base+0x36c8>
   146f8:	mov	r9, r0
   146fc:	ldr	r0, [sp, #52]	; 0x34
   14700:	cmp	r0, #0
   14704:	ldr	r6, [sp, #24]
   14708:	bne	14650 <main@@Base+0x1178>
   1470c:	ldr	r0, [sp, #28]
   14710:	ldr	r0, [r0]
   14714:	bl	1e998 <flatcc_builder_end_vector@@Base>
   14718:	str	r0, [sp, #48]	; 0x30
   1471c:	cmp	r0, #0
   14720:	beq	13658 <main@@Base+0x180>
   14724:	ldr	r0, [sp, #28]
   14728:	ldr	r0, [r0]
   1472c:	mov	r1, #24
   14730:	b	1431c <main@@Base+0xe44>
   14734:	movw	r0, #29555	; 0x7373
   14738:	movt	r0, #29797	; 0x7465
   1473c:	cmp	r7, r0
   14740:	movw	r1, #29285	; 0x7265
   14744:	movt	r1, #28769	; 0x7061
   14748:	movw	r2, #24430	; 0x5f6e
   1474c:	movt	r2, #28276	; 0x6e74
   14750:	bhi	14a7c <main@@Base+0x15a4>
   14754:	subs	r0, sl, r2
   14758:	sbcs	r0, r7, r1
   1475c:	bcs	14cbc <main@@Base+0x17e4>
   14760:	movw	r0, #28005	; 0x6d65
   14764:	movt	r0, #28257	; 0x6e61
   14768:	teq	r7, r0
   1476c:	bne	15944 <main@@Base+0x246c>
   14770:	ldr	r0, [sp, #28]
   14774:	mov	r1, r8
   14778:	mov	r2, r4
   1477c:	mov	r3, #4
   14780:	bl	15d04 <main@@Base+0x282c>
   14784:	mov	r1, r0
   14788:	cmp	r8, r0
   1478c:	beq	1558c <main@@Base+0x20b4>
   14790:	ldr	r0, [sp, #28]
   14794:	mov	r2, r4
   14798:	add	r3, sp, #48	; 0x30
   1479c:	bl	21f9c <flatcc_json_parser_build_string@@Base>
   147a0:	mov	r9, r0
   147a4:	ldr	r0, [sp, #48]	; 0x30
   147a8:	cmp	r0, #0
   147ac:	add	r8, sp, #52	; 0x34
   147b0:	beq	13658 <main@@Base+0x180>
   147b4:	ldr	r0, [sp, #28]
   147b8:	ldr	r0, [r0]
   147bc:	mov	r1, #3
   147c0:	b	1431c <main@@Base+0xe44>
   147c4:	movw	r1, #29544	; 0x7368
   147c8:	movt	r1, #26721	; 0x6861
   147cc:	subs	r0, sl, r1
   147d0:	sbcs	r0, r7, r3
   147d4:	bcs	14b5c <main@@Base+0x1684>
   147d8:	eor	r0, r7, r3
   147dc:	bfc	sl, #0, #16
   147e0:	movw	r1, #0
   147e4:	movt	r1, #26163	; 0x6633
   147e8:	eor	r1, sl, r1
   147ec:	orrs	r0, r1, r0
   147f0:	bne	15944 <main@@Base+0x246c>
   147f4:	ldr	r0, [sp, #28]
   147f8:	mov	r1, r8
   147fc:	mov	r2, r4
   14800:	mov	r3, #6
   14804:	bl	15d04 <main@@Base+0x282c>
   14808:	mov	r6, r0
   1480c:	cmp	r8, r0
   14810:	beq	15b68 <main@@Base+0x2690>
   14814:	mov	r0, #0
   14818:	str	r0, [sp, #32]
   1481c:	ldr	r0, [sp, #28]
   14820:	mov	r1, r6
   14824:	mov	r2, r4
   14828:	mov	r5, r4
   1482c:	add	r4, sp, #32
   14830:	mov	r3, r4
   14834:	bl	21510 <flatcc_json_parser_float@@Base>
   14838:	mov	r7, r0
   1483c:	cmp	r6, r0
   14840:	add	r8, sp, #52	; 0x34
   14844:	beq	1595c <main@@Base+0x2484>
   14848:	mov	r9, r7
   1484c:	ldr	r6, [sp, #24]
   14850:	mov	r4, r5
   14854:	b	15990 <main@@Base+0x24b8>
   14858:	movw	r0, #65535	; 0xffff
   1485c:	movt	r0, #26735	; 0x686f
   14860:	cmp	r7, r0
   14864:	bhi	14d80 <main@@Base+0x18a8>
   14868:	movw	r0, #25976	; 0x6578
   1486c:	movt	r0, #26220	; 0x666c
   14870:	teq	r7, r0
   14874:	bne	15944 <main@@Base+0x246c>
   14878:	ldr	r0, [sp, #28]
   1487c:	mov	r1, r8
   14880:	mov	r2, r4
   14884:	mov	r3, #4
   14888:	bl	15d04 <main@@Base+0x282c>
   1488c:	mov	r9, r0
   14890:	cmp	r8, r0
   14894:	beq	157d0 <main@@Base+0x22f8>
   14898:	ldr	r0, [sp, #28]
   1489c:	ldr	r0, [r0]
   148a0:	mov	r1, #1
   148a4:	mov	r2, #1
   148a8:	mvn	r3, #0
   148ac:	bl	1dd48 <flatcc_builder_start_vector@@Base>
   148b0:	cmp	r0, #0
   148b4:	add	r8, sp, #52	; 0x34
   148b8:	bne	13658 <main@@Base+0x180>
   148bc:	ldr	r0, [sp, #28]
   148c0:	mov	r1, r9
   148c4:	mov	r2, r4
   148c8:	mov	r3, r8
   148cc:	bl	16900 <main@@Base+0x3428>
   148d0:	mov	r9, r0
   148d4:	ldr	r0, [sp, #52]	; 0x34
   148d8:	cmp	r0, #0
   148dc:	beq	1499c <main@@Base+0x14c4>
   148e0:	mov	r0, #0
   148e4:	strb	r0, [sp, #32]
   148e8:	ldr	r0, [sp, #28]
   148ec:	ldr	r0, [r0]
   148f0:	mov	r1, #1
   148f4:	bl	1d760 <flatcc_builder_extend_vector@@Base>
   148f8:	cmp	r0, #0
   148fc:	beq	13658 <main@@Base+0x180>
   14900:	mov	r7, r0
   14904:	ldr	r0, [sp, #28]
   14908:	mov	r1, r9
   1490c:	mov	r2, r4
   14910:	mov	r5, r4
   14914:	add	r4, sp, #32
   14918:	mov	r3, r4
   1491c:	bl	16990 <main@@Base+0x34b8>
   14920:	mov	r6, r0
   14924:	cmp	r9, r0
   14928:	beq	14938 <main@@Base+0x1460>
   1492c:	mov	r9, r6
   14930:	mov	r4, r5
   14934:	b	14968 <main@@Base+0x1490>
   14938:	str	r4, [sp]
   1493c:	ldr	r0, [sp, #28]
   14940:	mov	r1, r6
   14944:	mov	r2, r5
   14948:	movw	r3, #28820	; 0x7094
   1494c:	movt	r3, #3
   14950:	bl	16a20 <main@@Base+0x3548>
   14954:	mov	r9, r0
   14958:	cmp	r0, r6
   1495c:	mov	r4, r5
   14960:	cmpne	r9, r4
   14964:	beq	13658 <main@@Base+0x180>
   14968:	ldrb	r1, [sp, #32]
   1496c:	mov	r0, r7
   14970:	bl	16b80 <main@@Base+0x36a8>
   14974:	ldr	r0, [sp, #28]
   14978:	mov	r1, r9
   1497c:	mov	r2, r4
   14980:	mov	r3, r8
   14984:	bl	16ba0 <main@@Base+0x36c8>
   14988:	mov	r9, r0
   1498c:	ldr	r0, [sp, #52]	; 0x34
   14990:	cmp	r0, #0
   14994:	ldr	r6, [sp, #24]
   14998:	bne	148e0 <main@@Base+0x1408>
   1499c:	ldr	r0, [sp, #28]
   149a0:	ldr	r0, [r0]
   149a4:	bl	1e998 <flatcc_builder_end_vector@@Base>
   149a8:	str	r0, [sp, #48]	; 0x30
   149ac:	cmp	r0, #0
   149b0:	beq	13658 <main@@Base+0x180>
   149b4:	ldr	r0, [sp, #28]
   149b8:	ldr	r0, [r0]
   149bc:	mov	r1, #30
   149c0:	b	1431c <main@@Base+0xe44>
   149c4:	movw	r1, #28788	; 0x7074
   149c8:	movt	r1, #25965	; 0x656d
   149cc:	subs	r1, sl, r1
   149d0:	sbcs	r1, r7, r3
   149d4:	bcs	14e10 <main@@Base+0x1938>
   149d8:	movw	r1, #28524	; 0x6f6c
   149dc:	movt	r1, #25199	; 0x626f
   149e0:	eor	r1, sl, r1
   149e4:	orrs	r1, r1, r0
   149e8:	beq	15694 <main@@Base+0x21bc>
   149ec:	movw	r1, #29541	; 0x7365
   149f0:	movt	r1, #25185	; 0x6261
   149f4:	eor	r1, sl, r1
   149f8:	orrs	r0, r1, r0
   149fc:	bne	15944 <main@@Base+0x246c>
   14a00:	add	r6, r8, #8
   14a04:	mov	r0, r6
   14a08:	mov	r1, r4
   14a0c:	bl	15d00 <main@@Base+0x2828>
   14a10:	bfc	r1, #0, #16
   14a14:	movw	r0, #0
   14a18:	movt	r0, #13876	; 0x3634
   14a1c:	teq	r1, r0
   14a20:	bne	15b68 <main@@Base+0x2690>
   14a24:	ldr	r0, [sp, #28]
   14a28:	mov	r1, r6
   14a2c:	mov	r2, r4
   14a30:	mov	r3, #2
   14a34:	bl	15d04 <main@@Base+0x282c>
   14a38:	mov	r1, r0
   14a3c:	cmp	r6, r0
   14a40:	add	r8, sp, #52	; 0x34
   14a44:	beq	136fc <main@@Base+0x224>
   14a48:	ldr	r0, [sp, #28]
   14a4c:	mov	r2, r4
   14a50:	add	r3, sp, #48	; 0x30
   14a54:	bl	17da8 <main@@Base+0x48d0>
   14a58:	mov	r9, r0
   14a5c:	ldr	r0, [sp, #48]	; 0x30
   14a60:	cmp	r0, #0
   14a64:	ldr	r6, [sp, #24]
   14a68:	beq	13658 <main@@Base+0x180>
   14a6c:	ldr	r0, [sp, #28]
   14a70:	ldr	r0, [r0]
   14a74:	mov	r1, #35	; 0x23
   14a78:	b	1431c <main@@Base+0xe44>
   14a7c:	eor	r6, r7, r3
   14a80:	and	r4, sl, #-16777216	; 0xff000000
   14a84:	eor	r0, r4, #872415232	; 0x34000000
   14a88:	orrs	r0, r0, r6
   14a8c:	bne	14ea8 <main@@Base+0x19d0>
   14a90:	ldr	r0, [sp, #28]
   14a94:	mov	r1, r8
   14a98:	ldr	r4, [sp, #20]
   14a9c:	mov	r2, r4
   14aa0:	mov	r3, #5
   14aa4:	bl	15d04 <main@@Base+0x282c>
   14aa8:	mov	r9, r0
   14aac:	cmp	r8, r0
   14ab0:	beq	15acc <main@@Base+0x25f4>
   14ab4:	ldr	r0, [sp, #28]
   14ab8:	ldr	r0, [r0]
   14abc:	mov	r1, #4
   14ac0:	mov	r2, #2
   14ac4:	mvn	r3, #-1073741824	; 0xc0000000
   14ac8:	bl	1dd48 <flatcc_builder_start_vector@@Base>
   14acc:	cmp	r0, #0
   14ad0:	bne	13658 <main@@Base+0x180>
   14ad4:	ldr	r5, [sp, #28]
   14ad8:	mov	r0, r5
   14adc:	mov	r1, r9
   14ae0:	mov	r2, r4
   14ae4:	add	r8, sp, #52	; 0x34
   14ae8:	mov	r3, r8
   14aec:	bl	16900 <main@@Base+0x3428>
   14af0:	mov	r9, r0
   14af4:	ldr	r0, [r5]
   14af8:	ldr	r1, [sp, #52]	; 0x34
   14afc:	cmp	r1, #0
   14b00:	beq	159c0 <main@@Base+0x24e8>
   14b04:	ldr	r6, [sp, #24]
   14b08:	mov	r1, #1
   14b0c:	bl	1d760 <flatcc_builder_extend_vector@@Base>
   14b10:	cmp	r0, #0
   14b14:	beq	13658 <main@@Base+0x180>
   14b18:	mov	r3, r0
   14b1c:	ldr	r5, [sp, #28]
   14b20:	mov	r0, r5
   14b24:	mov	r1, r9
   14b28:	mov	r2, r4
   14b2c:	bl	173e4 <main@@Base+0x3f0c>
   14b30:	mov	r1, r0
   14b34:	mov	r0, r5
   14b38:	mov	r2, r4
   14b3c:	mov	r3, r8
   14b40:	bl	16ba0 <main@@Base+0x36c8>
   14b44:	mov	r9, r0
   14b48:	ldr	r0, [r5]
   14b4c:	ldr	r1, [sp, #52]	; 0x34
   14b50:	cmp	r1, #0
   14b54:	bne	14b08 <main@@Base+0x1630>
   14b58:	b	159c4 <main@@Base+0x24ec>
   14b5c:	eor	r1, sl, r1
   14b60:	eor	r0, r7, r3
   14b64:	orrs	r1, r1, r0
   14b68:	bne	14f10 <main@@Base+0x1a38>
   14b6c:	add	r7, r8, #8
   14b70:	mov	r0, r7
   14b74:	mov	r1, r4
   14b78:	bl	15d00 <main@@Base+0x2828>
   14b7c:	movw	r3, #30257	; 0x7631
   14b80:	movt	r3, #26222	; 0x666e
   14b84:	subs	r2, r0, r3
   14b88:	movw	r2, #13407	; 0x345f
   14b8c:	movt	r2, #29494	; 0x7336
   14b90:	sbcs	r2, r1, r2
   14b94:	bcs	150c8 <main@@Base+0x1bf0>
   14b98:	eor	r0, r0, r3
   14b9c:	ldr	r2, [sp, #16]
   14ba0:	eor	r1, r1, r2
   14ba4:	orrs	r0, r0, r1
   14ba8:	add	r8, sp, #52	; 0x34
   14bac:	bne	139e4 <main@@Base+0x50c>
   14bb0:	ldr	r0, [sp, #28]
   14bb4:	mov	r1, r7
   14bb8:	mov	r2, r4
   14bbc:	mov	r3, #8
   14bc0:	bl	15d04 <main@@Base+0x282c>
   14bc4:	mov	r6, r0
   14bc8:	cmp	r7, r0
   14bcc:	beq	13ad4 <main@@Base+0x5fc>
   14bd0:	mov	r0, #0
   14bd4:	str	r0, [sp, #32]
   14bd8:	ldr	r0, [sp, #28]
   14bdc:	mov	r1, r6
   14be0:	mov	r2, r4
   14be4:	mov	r5, r4
   14be8:	add	r4, sp, #32
   14bec:	mov	r3, r4
   14bf0:	bl	184e8 <main@@Base+0x5010>
   14bf4:	mov	r7, r0
   14bf8:	cmp	r6, r0
   14bfc:	beq	13c68 <main@@Base+0x790>
   14c00:	mov	r9, r7
   14c04:	mov	r4, r5
   14c08:	b	13c98 <main@@Base+0x7c0>
   14c0c:	movw	r2, #27749	; 0x6c65
   14c10:	movt	r2, #24930	; 0x6162
   14c14:	eor	r2, r0, r2
   14c18:	movw	r3, #26228	; 0x6674
   14c1c:	movt	r3, #31087	; 0x796f
   14c20:	eor	r3, r1, r3
   14c24:	orrs	r2, r2, r3
   14c28:	beq	156f4 <main@@Base+0x221c>
   14c2c:	movw	r2, #26990	; 0x696e
   14c30:	movt	r2, #29810	; 0x7472
   14c34:	eor	r0, r0, r2
   14c38:	eor	r1, r1, r5
   14c3c:	orrs	r0, r0, r1
   14c40:	bne	15680 <main@@Base+0x21a8>
   14c44:	add	r7, r8, #16
   14c48:	mov	r0, r7
   14c4c:	mov	r1, r4
   14c50:	bl	15d00 <main@@Base+0x2828>
   14c54:	mov	r0, r1
   14c58:	bfc	r0, #0, #16
   14c5c:	movw	r2, #0
   14c60:	movt	r2, #26418	; 0x6732
   14c64:	teq	r0, r2
   14c68:	bne	13704 <main@@Base+0x22c>
   14c6c:	ldr	r0, [sp, #28]
   14c70:	mov	r1, r7
   14c74:	mov	r2, r4
   14c78:	mov	r3, #2
   14c7c:	bl	15d04 <main@@Base+0x282c>
   14c80:	mov	r9, r0
   14c84:	cmp	r7, r0
   14c88:	add	r8, sp, #52	; 0x34
   14c8c:	beq	139fc <main@@Base+0x524>
   14c90:	ldr	r0, [sp, #28]
   14c94:	ldr	r0, [r0]
   14c98:	bl	1ddd8 <flatcc_builder_start_offset_vector@@Base>
   14c9c:	cmp	r0, #0
   14ca0:	bne	13658 <main@@Base+0x180>
   14ca4:	ldr	r0, [sp, #28]
   14ca8:	mov	r1, r9
   14cac:	mov	r2, r4
   14cb0:	mov	r3, r8
   14cb4:	bl	16900 <main@@Base+0x3428>
   14cb8:	b	15078 <main@@Base+0x1ba0>
   14cbc:	eor	r0, sl, r2
   14cc0:	eor	r1, r7, r1
   14cc4:	orrs	r0, r0, r1
   14cc8:	bne	15160 <main@@Base+0x1c88>
   14ccc:	add	r6, r8, #8
   14cd0:	mov	r0, r6
   14cd4:	mov	r1, r4
   14cd8:	bl	15d00 <main@@Base+0x2828>
   14cdc:	movw	r2, #25971	; 0x6573
   14ce0:	movt	r2, #24941	; 0x616d
   14ce4:	eor	r1, r1, r2
   14ce8:	movw	r2, #25445	; 0x6365
   14cec:	movt	r2, #28769	; 0x7061
   14cf0:	eor	r0, r0, r2
   14cf4:	orrs	r0, r0, r1
   14cf8:	bne	15b68 <main@@Base+0x2690>
   14cfc:	add	r7, r8, #16
   14d00:	mov	r0, r7
   14d04:	mov	r1, r4
   14d08:	bl	15d00 <main@@Base+0x2828>
   14d0c:	movw	r2, #25971	; 0x6573
   14d10:	movt	r2, #24436	; 0x5f74
   14d14:	eor	r1, r1, r2
   14d18:	and	r0, r0, #-16777216	; 0xff000000
   14d1c:	eor	r0, r0, #1946157056	; 0x74000000
   14d20:	orrs	r0, r0, r1
   14d24:	bne	1385c <main@@Base+0x384>
   14d28:	ldr	r0, [sp, #28]
   14d2c:	mov	r1, r7
   14d30:	mov	r2, r4
   14d34:	mov	r3, #5
   14d38:	bl	15d04 <main@@Base+0x282c>
   14d3c:	mov	r1, r0
   14d40:	cmp	r7, r0
   14d44:	ldr	r6, [sp, #24]
   14d48:	add	r8, sp, #52	; 0x34
   14d4c:	beq	13dfc <main@@Base+0x924>
   14d50:	ldr	r0, [sp, #28]
   14d54:	mov	r2, r4
   14d58:	add	r3, sp, #48	; 0x30
   14d5c:	bl	16e70 <main@@Base+0x3998>
   14d60:	mov	r9, r0
   14d64:	ldr	r0, [sp, #48]	; 0x30
   14d68:	cmp	r0, #0
   14d6c:	beq	13658 <main@@Base+0x180>
   14d70:	ldr	r0, [sp, #28]
   14d74:	ldr	r0, [r0]
   14d78:	mov	r1, #34	; 0x22
   14d7c:	b	1431c <main@@Base+0xe44>
   14d80:	movw	r2, #28530	; 0x6f72
   14d84:	movt	r2, #28276	; 0x6e74
   14d88:	subs	r0, sl, r2
   14d8c:	movw	r1, #30309	; 0x7665
   14d90:	movt	r1, #26990	; 0x696e
   14d94:	sbcs	r0, r7, r1
   14d98:	bcs	151d4 <main@@Base+0x1cfc>
   14d9c:	bfc	r7, #0, #16
   14da0:	movw	r0, #0
   14da4:	movt	r0, #26736	; 0x6870
   14da8:	teq	r7, r0
   14dac:	bne	15944 <main@@Base+0x246c>
   14db0:	ldr	r0, [sp, #28]
   14db4:	mov	r1, r8
   14db8:	mov	r2, r4
   14dbc:	mov	r3, #2
   14dc0:	bl	15d04 <main@@Base+0x282c>
   14dc4:	mov	r6, r0
   14dc8:	cmp	r8, r0
   14dcc:	beq	15b68 <main@@Base+0x2690>
   14dd0:	mov	r0, #0
   14dd4:	strh	r0, [sp, #32]
   14dd8:	ldr	r0, [sp, #28]
   14ddc:	mov	r1, r6
   14de0:	mov	r2, r4
   14de4:	mov	r5, r4
   14de8:	add	r4, sp, #32
   14dec:	mov	r3, r4
   14df0:	bl	16c60 <main@@Base+0x3788>
   14df4:	mov	r7, r0
   14df8:	cmp	r6, r0
   14dfc:	add	r8, sp, #52	; 0x34
   14e00:	beq	13ce0 <main@@Base+0x808>
   14e04:	mov	r9, r7
   14e08:	ldr	r6, [sp, #24]
   14e0c:	b	13d14 <main@@Base+0x83c>
   14e10:	mvn	r1, #-1711276032	; 0x9a000000
   14e14:	subs	r1, r1, sl
   14e18:	sbcs	r1, r3, r7
   14e1c:	bcc	15350 <main@@Base+0x1e78>
   14e20:	movw	r1, #28788	; 0x7074
   14e24:	movt	r1, #25965	; 0x656d
   14e28:	eor	r1, sl, r1
   14e2c:	orrs	r0, r1, r0
   14e30:	bne	15944 <main@@Base+0x246c>
   14e34:	add	r6, r8, #8
   14e38:	mov	r0, r6
   14e3c:	mov	r1, r4
   14e40:	bl	15d00 <main@@Base+0x2828>
   14e44:	and	r0, r1, #-16777216	; 0xff000000
   14e48:	teq	r0, #2030043136	; 0x79000000
   14e4c:	bne	15b68 <main@@Base+0x2690>
   14e50:	ldr	r0, [sp, #28]
   14e54:	mov	r1, r6
   14e58:	mov	r2, r4
   14e5c:	mov	r3, #1
   14e60:	bl	15d04 <main@@Base+0x282c>
   14e64:	mov	r1, r0
   14e68:	cmp	r6, r0
   14e6c:	add	r8, sp, #52	; 0x34
   14e70:	beq	136fc <main@@Base+0x224>
   14e74:	ldr	r0, [sp, #28]
   14e78:	mov	r2, r4
   14e7c:	add	r3, sp, #48	; 0x30
   14e80:	bl	18024 <main@@Base+0x4b4c>
   14e84:	mov	r9, r0
   14e88:	ldr	r0, [sp, #48]	; 0x30
   14e8c:	cmp	r0, #0
   14e90:	ldr	r6, [sp, #24]
   14e94:	beq	13658 <main@@Base+0x180>
   14e98:	ldr	r0, [sp, #28]
   14e9c:	ldr	r0, [r0]
   14ea0:	mov	r1, #14
   14ea4:	b	1431c <main@@Base+0xe44>
   14ea8:	teq	r7, r3
   14eac:	bne	159f0 <main@@Base+0x2518>
   14eb0:	ldr	r9, [sp, #28]
   14eb4:	mov	r0, r9
   14eb8:	mov	r1, r8
   14ebc:	ldr	r5, [sp, #20]
   14ec0:	mov	r2, r5
   14ec4:	mov	r3, #4
   14ec8:	bl	15d04 <main@@Base+0x282c>
   14ecc:	mov	r1, r0
   14ed0:	cmp	r8, r0
   14ed4:	beq	159e4 <main@@Base+0x250c>
   14ed8:	ldr	r0, [sp, #44]	; 0x2c
   14edc:	mov	r2, #8
   14ee0:	str	r2, [sp]
   14ee4:	str	r0, [sp, #4]
   14ee8:	movw	r0, #30196	; 0x75f4
   14eec:	movt	r0, #1
   14ef0:	str	r0, [sp, #8]
   14ef4:	mov	r0, r9
   14ef8:	mov	r2, r5
   14efc:	mov	r3, #0
   14f00:	bl	221b0 <flatcc_json_parser_union@@Base>
   14f04:	mov	r9, r0
   14f08:	mov	r4, r5
   14f0c:	b	15b7c <main@@Base+0x26a4>
   14f10:	movw	r3, #24431	; 0x5f6f
   14f14:	movt	r3, #28530	; 0x6f72
   14f18:	subs	r1, sl, r3
   14f1c:	movw	r2, #25460	; 0x6374
   14f20:	movt	r2, #30309	; 0x7665
   14f24:	sbcs	r1, r7, r2
   14f28:	bcs	153dc <main@@Base+0x1f04>
   14f2c:	movw	r1, #29556	; 0x7374
   14f30:	movt	r1, #28261	; 0x6e65
   14f34:	eor	r1, sl, r1
   14f38:	orrs	r0, r1, r0
   14f3c:	bne	15944 <main@@Base+0x246c>
   14f40:	add	r6, r8, #8
   14f44:	mov	r0, r6
   14f48:	mov	r1, r4
   14f4c:	bl	15d00 <main@@Base+0x2828>
   14f50:	movw	r2, #26220	; 0x666c
   14f54:	movt	r2, #25956	; 0x6564
   14f58:	eor	r1, r1, r2
   14f5c:	movw	r2, #25205	; 0x6275
   14f60:	movt	r2, #24948	; 0x6174
   14f64:	eor	r0, r0, r2
   14f68:	orrs	r0, r0, r1
   14f6c:	bne	15b68 <main@@Base+0x2690>
   14f70:	add	r6, r8, #16
   14f74:	mov	r0, r6
   14f78:	mov	r1, r4
   14f7c:	bl	15d00 <main@@Base+0x2828>
   14f80:	movw	r0, #25970	; 0x6572
   14f84:	movt	r0, #26214	; 0x6666
   14f88:	teq	r1, r0
   14f8c:	bne	15b68 <main@@Base+0x2690>
   14f90:	ldr	r0, [sp, #28]
   14f94:	mov	r1, r6
   14f98:	mov	r2, r4
   14f9c:	mov	r3, #4
   14fa0:	bl	15d04 <main@@Base+0x282c>
   14fa4:	mov	r9, r0
   14fa8:	cmp	r6, r0
   14fac:	add	r8, sp, #52	; 0x34
   14fb0:	beq	13848 <main@@Base+0x370>
   14fb4:	cmp	r9, r4
   14fb8:	ldr	r6, [sp, #24]
   14fbc:	beq	1414c <main@@Base+0xc74>
   14fc0:	ldrb	r0, [r9]
   14fc4:	cmp	r0, #91	; 0x5b
   14fc8:	bne	1414c <main@@Base+0xc74>
   14fcc:	ldr	r0, [sp, #28]
   14fd0:	ldr	r0, [r0]
   14fd4:	mov	r1, #1
   14fd8:	mov	r2, #1
   14fdc:	mvn	r3, #0
   14fe0:	bl	1dd48 <flatcc_builder_start_vector@@Base>
   14fe4:	cmp	r0, #0
   14fe8:	bne	13658 <main@@Base+0x180>
   14fec:	ldr	r0, [sp, #28]
   14ff0:	mov	r1, r9
   14ff4:	mov	r2, r4
   14ff8:	mov	r3, r8
   14ffc:	bl	16900 <main@@Base+0x3428>
   15000:	b	13a28 <main@@Base+0x550>
   15004:	ldr	r0, [sp, #28]
   15008:	mov	r1, r8
   1500c:	mov	r2, r4
   15010:	mov	r3, #5
   15014:	bl	15d04 <main@@Base+0x282c>
   15018:	mov	r6, r0
   1501c:	cmp	r8, r0
   15020:	beq	15b68 <main@@Base+0x2690>
   15024:	mov	r0, #0
   15028:	strb	r0, [sp, #32]
   1502c:	ldr	r0, [sp, #28]
   15030:	mov	r1, r6
   15034:	mov	r2, r4
   15038:	add	r8, sp, #32
   1503c:	mov	r3, r8
   15040:	bl	166f0 <main@@Base+0x3218>
   15044:	mov	r7, r0
   15048:	cmp	r6, r0
   1504c:	beq	137cc <main@@Base+0x2f4>
   15050:	mov	r9, r7
   15054:	ldr	r6, [sp, #24]
   15058:	b	137fc <main@@Base+0x324>
   1505c:	ldr	r1, [sp, #48]	; 0x30
   15060:	str	r1, [r0]
   15064:	ldr	r0, [sp, #28]
   15068:	mov	r1, r9
   1506c:	mov	r2, r4
   15070:	mov	r3, r8
   15074:	bl	16ba0 <main@@Base+0x36c8>
   15078:	mov	r9, r0
   1507c:	ldr	r0, [sp, #52]	; 0x34
   15080:	cmp	r0, #0
   15084:	beq	13dac <main@@Base+0x8d4>
   15088:	ldr	r0, [sp, #28]
   1508c:	mov	r1, r9
   15090:	mov	r2, r4
   15094:	add	r3, sp, #48	; 0x30
   15098:	bl	21f9c <flatcc_json_parser_build_string@@Base>
   1509c:	mov	r9, r0
   150a0:	ldr	r0, [sp, #48]	; 0x30
   150a4:	cmp	r0, #0
   150a8:	beq	13658 <main@@Base+0x180>
   150ac:	ldr	r0, [sp, #28]
   150b0:	ldr	r0, [r0]
   150b4:	mov	r1, #1
   150b8:	bl	1d924 <flatcc_builder_extend_offset_vector@@Base>
   150bc:	cmp	r0, #0
   150c0:	bne	1505c <main@@Base+0x1b84>
   150c4:	b	13658 <main@@Base+0x180>
   150c8:	movw	r2, #30256	; 0x7630
   150cc:	movt	r2, #26222	; 0x666e
   150d0:	subs	r2, r2, r0
   150d4:	movw	r2, #12895	; 0x325f
   150d8:	movt	r2, #30003	; 0x7533
   150dc:	sbcs	r2, r2, r1
   150e0:	add	r8, sp, #52	; 0x34
   150e4:	eor	r0, r0, r3
   150e8:	bcc	157dc <main@@Base+0x2304>
   150ec:	movw	r2, #13407	; 0x345f
   150f0:	movt	r2, #29494	; 0x7336
   150f4:	eor	r1, r1, r2
   150f8:	orrs	r0, r0, r1
   150fc:	bne	139e4 <main@@Base+0x50c>
   15100:	ldr	r0, [sp, #28]
   15104:	mov	r1, r7
   15108:	mov	r2, r4
   1510c:	mov	r3, #8
   15110:	bl	15d04 <main@@Base+0x282c>
   15114:	mov	r6, r0
   15118:	cmp	r7, r0
   1511c:	beq	13e04 <main@@Base+0x92c>
   15120:	mov	r0, #0
   15124:	str	r0, [sp, #36]	; 0x24
   15128:	str	r0, [sp, #32]
   1512c:	ldr	r0, [sp, #28]
   15130:	mov	r1, r6
   15134:	mov	r2, r4
   15138:	mov	r5, r4
   1513c:	add	r4, sp, #32
   15140:	mov	r3, r4
   15144:	bl	186f8 <main@@Base+0x5220>
   15148:	mov	r7, r0
   1514c:	cmp	r6, r0
   15150:	beq	13f9c <main@@Base+0xac4>
   15154:	mov	r9, r7
   15158:	mov	r4, r5
   1515c:	b	13fcc <main@@Base+0xaf4>
   15160:	bic	r0, r7, #255	; 0xff
   15164:	movw	r1, #29440	; 0x7300
   15168:	movt	r1, #28783	; 0x706f
   1516c:	teq	r0, r1
   15170:	bne	15944 <main@@Base+0x246c>
   15174:	ldr	r0, [sp, #28]
   15178:	mov	r1, r8
   1517c:	mov	r2, r4
   15180:	mov	r3, #3
   15184:	bl	15d04 <main@@Base+0x282c>
   15188:	mov	r9, r0
   1518c:	cmp	r8, r0
   15190:	beq	157d0 <main@@Base+0x22f8>
   15194:	ldr	r0, [sp, #28]
   15198:	ldr	r0, [r0]
   1519c:	mov	r1, #0
   151a0:	mov	r2, #32
   151a4:	mov	r3, #16
   151a8:	bl	1ee30 <flatcc_builder_table_add@@Base>
   151ac:	cmp	r0, #0
   151b0:	add	r8, sp, #52	; 0x34
   151b4:	beq	13658 <main@@Base+0x180>
   151b8:	mov	r3, r0
   151bc:	ldr	r0, [sp, #28]
   151c0:	mov	r1, r9
   151c4:	mov	r2, r4
   151c8:	bl	16f58 <main@@Base+0x3a80>
   151cc:	mov	r9, r0
   151d0:	b	15b84 <main@@Base+0x26ac>
   151d4:	eor	r0, sl, r2
   151d8:	eor	r1, r7, r1
   151dc:	orrs	r0, r0, r1
   151e0:	bne	15860 <main@@Base+0x2388>
   151e4:	add	r6, r8, #8
   151e8:	mov	r0, r6
   151ec:	mov	r1, r4
   151f0:	bl	15d00 <main@@Base+0x2828>
   151f4:	and	r0, r1, #-16777216	; 0xff000000
   151f8:	teq	r0, #2030043136	; 0x79000000
   151fc:	bne	15b68 <main@@Base+0x2690>
   15200:	ldr	r0, [sp, #28]
   15204:	mov	r1, r6
   15208:	mov	r2, r4
   1520c:	mov	r3, #1
   15210:	bl	15d04 <main@@Base+0x282c>
   15214:	mov	r9, r0
   15218:	cmp	r6, r0
   1521c:	add	r8, sp, #52	; 0x34
   15220:	beq	13848 <main@@Base+0x370>
   15224:	ldr	r0, [sp, #28]
   15228:	ldr	r0, [r0]
   1522c:	mov	r1, #1
   15230:	mov	r2, #1
   15234:	mvn	r3, #0
   15238:	bl	1dd48 <flatcc_builder_start_vector@@Base>
   1523c:	cmp	r0, #0
   15240:	ldr	r6, [sp, #24]
   15244:	bne	13658 <main@@Base+0x180>
   15248:	ldr	r0, [sp, #28]
   1524c:	mov	r1, r9
   15250:	mov	r2, r4
   15254:	mov	r3, r8
   15258:	bl	16900 <main@@Base+0x3428>
   1525c:	mov	r9, r0
   15260:	ldr	r0, [sp, #52]	; 0x34
   15264:	cmp	r0, #0
   15268:	beq	15328 <main@@Base+0x1e50>
   1526c:	mov	r0, #0
   15270:	strb	r0, [sp, #32]
   15274:	ldr	r0, [sp, #28]
   15278:	ldr	r0, [r0]
   1527c:	mov	r1, #1
   15280:	bl	1d760 <flatcc_builder_extend_vector@@Base>
   15284:	cmp	r0, #0
   15288:	beq	13658 <main@@Base+0x180>
   1528c:	mov	r7, r0
   15290:	ldr	r0, [sp, #28]
   15294:	mov	r1, r9
   15298:	mov	r2, r4
   1529c:	mov	r5, r4
   152a0:	add	r4, sp, #32
   152a4:	mov	r3, r4
   152a8:	bl	16990 <main@@Base+0x34b8>
   152ac:	mov	r6, r0
   152b0:	cmp	r9, r0
   152b4:	beq	152c4 <main@@Base+0x1dec>
   152b8:	mov	r9, r6
   152bc:	mov	r4, r5
   152c0:	b	152f4 <main@@Base+0x1e1c>
   152c4:	str	r4, [sp]
   152c8:	ldr	r0, [sp, #28]
   152cc:	mov	r1, r6
   152d0:	mov	r2, r5
   152d4:	movw	r3, #28844	; 0x70ac
   152d8:	movt	r3, #3
   152dc:	bl	16a20 <main@@Base+0x3548>
   152e0:	mov	r9, r0
   152e4:	cmp	r0, r6
   152e8:	mov	r4, r5
   152ec:	cmpne	r9, r4
   152f0:	beq	13658 <main@@Base+0x180>
   152f4:	ldrb	r1, [sp, #32]
   152f8:	mov	r0, r7
   152fc:	bl	16b80 <main@@Base+0x36a8>
   15300:	ldr	r0, [sp, #28]
   15304:	mov	r1, r9
   15308:	mov	r2, r4
   1530c:	mov	r3, r8
   15310:	bl	16ba0 <main@@Base+0x36c8>
   15314:	mov	r9, r0
   15318:	ldr	r0, [sp, #52]	; 0x34
   1531c:	cmp	r0, #0
   15320:	ldr	r6, [sp, #24]
   15324:	bne	1526c <main@@Base+0x1d94>
   15328:	ldr	r0, [sp, #28]
   1532c:	ldr	r0, [r0]
   15330:	bl	1e998 <flatcc_builder_end_vector@@Base>
   15334:	str	r0, [sp, #48]	; 0x30
   15338:	cmp	r0, #0
   1533c:	beq	13658 <main@@Base+0x180>
   15340:	ldr	r0, [sp, #28]
   15344:	ldr	r0, [r0]
   15348:	mov	r1, #5
   1534c:	b	1431c <main@@Base+0xe44>
   15350:	mov	r1, sl
   15354:	bfc	r1, #0, #16
   15358:	movw	r2, #0
   1535c:	movt	r2, #26163	; 0x6633
   15360:	subs	r2, r2, #65536	; 0x10000
   15364:	eor	r1, r1, r2
   15368:	sbc	r2, r3, #0
   1536c:	eor	r2, r7, r2
   15370:	orrs	r1, r1, r2
   15374:	bne	158d0 <main@@Base+0x23f8>
   15378:	ldr	r0, [sp, #28]
   1537c:	mov	r1, r8
   15380:	mov	r2, r4
   15384:	mov	r3, #6
   15388:	bl	15d04 <main@@Base+0x282c>
   1538c:	mov	r6, r0
   15390:	cmp	r8, r0
   15394:	beq	15b68 <main@@Base+0x2690>
   15398:	mov	r0, #0
   1539c:	str	r0, [sp, #32]
   153a0:	ldr	r0, [sp, #28]
   153a4:	mov	r1, r6
   153a8:	mov	r2, r4
   153ac:	mov	r8, r4
   153b0:	add	r4, sp, #32
   153b4:	mov	r3, r4
   153b8:	bl	21510 <flatcc_json_parser_float@@Base>
   153bc:	mov	r7, r0
   153c0:	cmp	r6, r0
   153c4:	beq	13d40 <main@@Base+0x868>
   153c8:	mov	r9, r7
   153cc:	ldr	r6, [sp, #24]
   153d0:	mov	r4, r8
   153d4:	add	r8, sp, #52	; 0x34
   153d8:	b	13d7c <main@@Base+0x8a4>
   153dc:	eor	r0, sl, r3
   153e0:	eor	r1, r7, r2
   153e4:	orrs	r0, r0, r1
   153e8:	bne	15944 <main@@Base+0x246c>
   153ec:	add	r7, r8, #8
   153f0:	mov	r0, r7
   153f4:	mov	r1, r4
   153f8:	bl	15d00 <main@@Base+0x2828>
   153fc:	movw	r2, #25711	; 0x646f
   15400:	movt	r2, #26207	; 0x665f
   15404:	eor	r2, r1, r2
   15408:	movw	r3, #27749	; 0x6c65
   1540c:	movt	r3, #30050	; 0x7562
   15410:	eor	r3, r0, r3
   15414:	orrs	r2, r3, r2
   15418:	bne	13868 <main@@Base+0x390>
   1541c:	add	r6, r8, #16
   15420:	mov	r0, r6
   15424:	mov	r1, r4
   15428:	bl	15d00 <main@@Base+0x2828>
   1542c:	and	r0, r1, #-16777216	; 0xff000000
   15430:	teq	r0, #1929379840	; 0x73000000
   15434:	bne	15b68 <main@@Base+0x2690>
   15438:	ldr	r0, [sp, #28]
   1543c:	mov	r1, r6
   15440:	mov	r2, r4
   15444:	mov	r3, #1
   15448:	bl	15d04 <main@@Base+0x282c>
   1544c:	mov	r9, r0
   15450:	cmp	r6, r0
   15454:	add	r8, sp, #52	; 0x34
   15458:	beq	13848 <main@@Base+0x370>
   1545c:	ldr	r0, [sp, #28]
   15460:	ldr	r0, [r0]
   15464:	mov	r1, #8
   15468:	mov	r2, #8
   1546c:	mvn	r3, #-536870912	; 0xe0000000
   15470:	bl	1dd48 <flatcc_builder_start_vector@@Base>
   15474:	cmp	r0, #0
   15478:	ldr	r6, [sp, #24]
   1547c:	bne	13658 <main@@Base+0x180>
   15480:	ldr	r0, [sp, #28]
   15484:	mov	r1, r9
   15488:	mov	r2, r4
   1548c:	mov	r3, r8
   15490:	bl	16900 <main@@Base+0x3428>
   15494:	mov	r9, r0
   15498:	ldr	r0, [sp, #52]	; 0x34
   1549c:	cmp	r0, #0
   154a0:	beq	15564 <main@@Base+0x208c>
   154a4:	mov	r0, #0
   154a8:	str	r0, [sp, #36]	; 0x24
   154ac:	str	r0, [sp, #32]
   154b0:	ldr	r0, [sp, #28]
   154b4:	ldr	r0, [r0]
   154b8:	mov	r1, #1
   154bc:	bl	1d760 <flatcc_builder_extend_vector@@Base>
   154c0:	cmp	r0, #0
   154c4:	beq	13658 <main@@Base+0x180>
   154c8:	mov	r7, r0
   154cc:	ldr	r0, [sp, #28]
   154d0:	mov	r1, r9
   154d4:	mov	r2, r4
   154d8:	mov	r5, r4
   154dc:	add	r4, sp, #32
   154e0:	mov	r3, r4
   154e4:	bl	21438 <flatcc_json_parser_double@@Base>
   154e8:	mov	r6, r0
   154ec:	cmp	r9, r0
   154f0:	beq	15500 <main@@Base+0x2028>
   154f4:	mov	r9, r6
   154f8:	mov	r4, r5
   154fc:	b	15530 <main@@Base+0x2058>
   15500:	str	r4, [sp]
   15504:	ldr	r0, [sp, #28]
   15508:	mov	r1, r6
   1550c:	mov	r2, r5
   15510:	movw	r3, #29052	; 0x717c
   15514:	movt	r3, #3
   15518:	bl	18d48 <main@@Base+0x5870>
   1551c:	mov	r9, r0
   15520:	cmp	r0, r6
   15524:	mov	r4, r5
   15528:	cmpne	r9, r4
   1552c:	beq	13658 <main@@Base+0x180>
   15530:	vldr	d0, [sp, #32]
   15534:	mov	r0, r7
   15538:	bl	18e90 <main@@Base+0x59b8>
   1553c:	ldr	r0, [sp, #28]
   15540:	mov	r1, r9
   15544:	mov	r2, r4
   15548:	mov	r3, r8
   1554c:	bl	16ba0 <main@@Base+0x36c8>
   15550:	mov	r9, r0
   15554:	ldr	r0, [sp, #52]	; 0x34
   15558:	cmp	r0, #0
   1555c:	ldr	r6, [sp, #24]
   15560:	bne	154a4 <main@@Base+0x1fcc>
   15564:	ldr	r0, [sp, #28]
   15568:	ldr	r0, [r0]
   1556c:	bl	1e998 <flatcc_builder_end_vector@@Base>
   15570:	str	r0, [sp, #48]	; 0x30
   15574:	cmp	r0, #0
   15578:	beq	13658 <main@@Base+0x180>
   1557c:	ldr	r0, [sp, #28]
   15580:	ldr	r0, [r0]
   15584:	mov	r1, #33	; 0x21
   15588:	b	1431c <main@@Base+0xe44>
   1558c:	ldr	r0, [sp, #28]
   15590:	b	1594c <main@@Base+0x2474>
   15594:	add	r7, r8, #16
   15598:	mov	r0, r7
   1559c:	mov	r1, r4
   155a0:	bl	15d00 <main@@Base+0x2828>
   155a4:	lsr	r0, r0, #8
   155a8:	orr	r0, r0, r1, lsl #24
   155ac:	movw	r2, #25460	; 0x6374
   155b0:	movt	r2, #29301	; 0x7275
   155b4:	eor	r0, r0, r2
   155b8:	movw	r2, #29556	; 0x7374
   155bc:	movt	r2, #100	; 0x64
   155c0:	eor	r1, r2, r1, lsr #8
   155c4:	orrs	r0, r0, r1
   155c8:	bne	15680 <main@@Base+0x21a8>
   155cc:	ldr	r0, [sp, #28]
   155d0:	mov	r1, r7
   155d4:	mov	r2, r4
   155d8:	mov	r3, #7
   155dc:	bl	15d04 <main@@Base+0x282c>
   155e0:	mov	r9, r0
   155e4:	cmp	r7, r0
   155e8:	add	r8, sp, #52	; 0x34
   155ec:	beq	139fc <main@@Base+0x524>
   155f0:	ldr	r0, [sp, #28]
   155f4:	ldr	r0, [r0]
   155f8:	mov	r1, #8
   155fc:	mov	r2, #4
   15600:	mvn	r3, #-536870912	; 0xe0000000
   15604:	bl	1dd48 <flatcc_builder_start_vector@@Base>
   15608:	cmp	r0, #0
   1560c:	bne	13658 <main@@Base+0x180>
   15610:	ldr	r5, [sp, #28]
   15614:	mov	r0, r5
   15618:	mov	r1, r9
   1561c:	mov	r2, r4
   15620:	mov	r3, r8
   15624:	bl	16900 <main@@Base+0x3428>
   15628:	b	15658 <main@@Base+0x2180>
   1562c:	mov	r3, r0
   15630:	ldr	r5, [sp, #28]
   15634:	mov	r0, r5
   15638:	mov	r1, r9
   1563c:	mov	r2, r4
   15640:	bl	17b7c <main@@Base+0x46a4>
   15644:	mov	r1, r0
   15648:	mov	r0, r5
   1564c:	mov	r2, r4
   15650:	mov	r3, r8
   15654:	bl	16ba0 <main@@Base+0x36c8>
   15658:	mov	r9, r0
   1565c:	ldr	r0, [r5]
   15660:	ldr	r1, [sp, #52]	; 0x34
   15664:	cmp	r1, #0
   15668:	beq	13c48 <main@@Base+0x770>
   1566c:	mov	r1, #1
   15670:	bl	1d760 <flatcc_builder_extend_vector@@Base>
   15674:	cmp	r0, #0
   15678:	bne	1562c <main@@Base+0x2154>
   1567c:	b	13658 <main@@Base+0x180>
   15680:	ldr	r0, [sp, #28]
   15684:	mov	r1, r7
   15688:	b	1594c <main@@Base+0x2474>
   1568c:	add	r8, sp, #52	; 0x34
   15690:	b	139e4 <main@@Base+0x50c>
   15694:	ldr	r0, [sp, #28]
   15698:	mov	r1, r8
   1569c:	mov	r2, r4
   156a0:	mov	r3, #8
   156a4:	bl	15d04 <main@@Base+0x282c>
   156a8:	mov	r6, r0
   156ac:	cmp	r8, r0
   156b0:	beq	15b68 <main@@Base+0x2690>
   156b4:	mov	r0, #0
   156b8:	strb	r0, [sp, #32]
   156bc:	ldr	r0, [sp, #28]
   156c0:	mov	r1, r6
   156c4:	mov	r2, r4
   156c8:	mov	r5, r4
   156cc:	add	r4, sp, #32
   156d0:	mov	r3, r4
   156d4:	bl	17948 <main@@Base+0x4470>
   156d8:	mov	r7, r0
   156dc:	cmp	r6, r0
   156e0:	add	r8, sp, #52	; 0x34
   156e4:	beq	13bac <main@@Base+0x6d4>
   156e8:	mov	r9, r7
   156ec:	mov	r4, r5
   156f0:	b	13bdc <main@@Base+0x704>
   156f4:	add	r6, r8, #16
   156f8:	mov	r0, r6
   156fc:	mov	r1, r4
   15700:	bl	15d00 <main@@Base+0x2828>
   15704:	and	r0, r1, #-16777216	; 0xff000000
   15708:	teq	r0, #1929379840	; 0x73000000
   1570c:	bne	15b68 <main@@Base+0x2690>
   15710:	ldr	r0, [sp, #28]
   15714:	mov	r1, r6
   15718:	mov	r2, r4
   1571c:	mov	r3, #1
   15720:	bl	15d04 <main@@Base+0x282c>
   15724:	mov	r9, r0
   15728:	cmp	r6, r0
   1572c:	add	r8, sp, #52	; 0x34
   15730:	beq	13848 <main@@Base+0x370>
   15734:	ldr	r0, [sp, #28]
   15738:	ldr	r0, [r0]
   1573c:	bl	1ddd8 <flatcc_builder_start_offset_vector@@Base>
   15740:	cmp	r0, #0
   15744:	ldr	r6, [sp, #24]
   15748:	bne	13658 <main@@Base+0x180>
   1574c:	ldr	r0, [sp, #28]
   15750:	mov	r1, r9
   15754:	mov	r2, r4
   15758:	mov	r3, r8
   1575c:	bl	16900 <main@@Base+0x3428>
   15760:	b	15780 <main@@Base+0x22a8>
   15764:	ldr	r1, [sp, #48]	; 0x30
   15768:	str	r1, [r0]
   1576c:	ldr	r0, [sp, #28]
   15770:	mov	r1, r9
   15774:	mov	r2, r4
   15778:	mov	r3, r8
   1577c:	bl	16ba0 <main@@Base+0x36c8>
   15780:	mov	r9, r0
   15784:	ldr	r0, [sp, #52]	; 0x34
   15788:	cmp	r0, #0
   1578c:	beq	13dd4 <main@@Base+0x8fc>
   15790:	ldr	r0, [sp, #28]
   15794:	mov	r1, r9
   15798:	mov	r2, r4
   1579c:	add	r3, sp, #48	; 0x30
   157a0:	bl	13618 <main@@Base+0x140>
   157a4:	mov	r9, r0
   157a8:	ldr	r0, [sp, #48]	; 0x30
   157ac:	cmp	r0, #0
   157b0:	beq	13658 <main@@Base+0x180>
   157b4:	ldr	r0, [sp, #28]
   157b8:	ldr	r0, [r0]
   157bc:	mov	r1, #1
   157c0:	bl	1d924 <flatcc_builder_extend_offset_vector@@Base>
   157c4:	cmp	r0, #0
   157c8:	bne	15764 <main@@Base+0x228c>
   157cc:	b	13658 <main@@Base+0x180>
   157d0:	ldr	r0, [sp, #28]
   157d4:	mov	r1, r9
   157d8:	b	1594c <main@@Base+0x2474>
   157dc:	movw	r2, #13407	; 0x345f
   157e0:	movt	r2, #30006	; 0x7536
   157e4:	eor	r2, r1, r2
   157e8:	orrs	r2, r0, r2
   157ec:	beq	13b4c <main@@Base+0x674>
   157f0:	movw	r2, #12895	; 0x325f
   157f4:	movt	r2, #30003	; 0x7533
   157f8:	eor	r1, r1, r2
   157fc:	orrs	r0, r0, r1
   15800:	bne	139e4 <main@@Base+0x50c>
   15804:	ldr	r0, [sp, #28]
   15808:	mov	r1, r7
   1580c:	mov	r2, r4
   15810:	mov	r3, #8
   15814:	bl	15d04 <main@@Base+0x282c>
   15818:	mov	r6, r0
   1581c:	cmp	r7, r0
   15820:	beq	13e80 <main@@Base+0x9a8>
   15824:	mov	r0, #0
   15828:	str	r0, [sp, #32]
   1582c:	ldr	r0, [sp, #28]
   15830:	mov	r1, r6
   15834:	mov	r2, r4
   15838:	mov	r5, r4
   1583c:	add	r4, sp, #32
   15840:	mov	r3, r4
   15844:	bl	18918 <main@@Base+0x5440>
   15848:	mov	r7, r0
   1584c:	cmp	r6, r0
   15850:	beq	141a0 <main@@Base+0xcc8>
   15854:	mov	r9, r7
   15858:	mov	r4, r5
   1585c:	b	141d0 <main@@Base+0xcf8>
   15860:	movw	r0, #28257	; 0x6e61
   15864:	movt	r0, #28001	; 0x6d61
   15868:	teq	r7, r0
   1586c:	bne	15944 <main@@Base+0x246c>
   15870:	ldr	r0, [sp, #28]
   15874:	mov	r1, r8
   15878:	mov	r2, r4
   1587c:	mov	r3, #4
   15880:	bl	15d04 <main@@Base+0x282c>
   15884:	mov	r6, r0
   15888:	cmp	r8, r0
   1588c:	beq	15b68 <main@@Base+0x2690>
   15890:	mov	r0, #0
   15894:	strh	r0, [sp, #32]
   15898:	ldr	r0, [sp, #28]
   1589c:	mov	r1, r6
   158a0:	mov	r2, r4
   158a4:	mov	r5, r4
   158a8:	add	r4, sp, #32
   158ac:	mov	r3, r4
   158b0:	bl	16c60 <main@@Base+0x3788>
   158b4:	mov	r7, r0
   158b8:	cmp	r6, r0
   158bc:	add	r8, sp, #52	; 0x34
   158c0:	beq	1401c <main@@Base+0xb44>
   158c4:	mov	r9, r7
   158c8:	ldr	r6, [sp, #24]
   158cc:	b	14050 <main@@Base+0xb78>
   158d0:	and	r1, sl, #-16777216	; 0xff000000
   158d4:	eor	r1, r1, #1711276032	; 0x66000000
   158d8:	orrs	r0, r1, r0
   158dc:	bne	15944 <main@@Base+0x246c>
   158e0:	ldr	r0, [sp, #28]
   158e4:	mov	r1, r8
   158e8:	mov	r2, r4
   158ec:	mov	r3, #5
   158f0:	bl	15d04 <main@@Base+0x282c>
   158f4:	mov	r6, r0
   158f8:	cmp	r8, r0
   158fc:	beq	15b68 <main@@Base+0x2690>
   15900:	mov	r0, #0
   15904:	str	r0, [sp, #32]
   15908:	ldr	r0, [sp, #28]
   1590c:	mov	r1, r6
   15910:	mov	r2, r4
   15914:	mov	r8, r4
   15918:	add	r4, sp, #32
   1591c:	mov	r3, r4
   15920:	bl	21510 <flatcc_json_parser_float@@Base>
   15924:	mov	r7, r0
   15928:	cmp	r6, r0
   1592c:	beq	1409c <main@@Base+0xbc4>
   15930:	mov	r9, r7
   15934:	ldr	r6, [sp, #24]
   15938:	mov	r4, r8
   1593c:	add	r8, sp, #52	; 0x34
   15940:	b	140d8 <main@@Base+0xc00>
   15944:	ldr	r0, [sp, #28]
   15948:	mov	r1, r8
   1594c:	mov	r2, r4
   15950:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   15954:	mov	r9, r0
   15958:	b	15b80 <main@@Base+0x26a8>
   1595c:	str	r4, [sp]
   15960:	ldr	r0, [sp, #28]
   15964:	mov	r1, r7
   15968:	mov	r2, r5
   1596c:	movw	r3, #28932	; 0x7104
   15970:	movt	r3, #3
   15974:	bl	18384 <main@@Base+0x4eac>
   15978:	mov	r9, r0
   1597c:	cmp	r0, r7
   15980:	ldr	r6, [sp, #24]
   15984:	mov	r4, r5
   15988:	cmpne	r9, r4
   1598c:	beq	13658 <main@@Base+0x180>
   15990:	vldr	s0, [sp, #32]
   15994:	vcmp.f32	s0, #0.0
   15998:	vmrs	APSR_nzcv, fpscr
   1599c:	bne	159b0 <main@@Base+0x24d8>
   159a0:	ldr	r0, [sp, #28]
   159a4:	ldrb	r0, [r0, #8]
   159a8:	tst	r0, #2
   159ac:	beq	15b84 <main@@Base+0x26ac>
   159b0:	ldr	r0, [sp, #28]
   159b4:	ldr	r0, [r0]
   159b8:	mov	r1, #27
   159bc:	b	14104 <main@@Base+0xc2c>
   159c0:	ldr	r6, [sp, #24]
   159c4:	bl	1e998 <flatcc_builder_end_vector@@Base>
   159c8:	str	r0, [sp, #48]	; 0x30
   159cc:	cmp	r0, #0
   159d0:	beq	13658 <main@@Base+0x180>
   159d4:	ldr	r0, [sp, #28]
   159d8:	ldr	r0, [r0]
   159dc:	mov	r1, #9
   159e0:	b	1431c <main@@Base+0xe44>
   159e4:	mov	r8, r1
   159e8:	movw	r3, #29556	; 0x7374
   159ec:	movt	r3, #29797	; 0x7465
   159f0:	eor	r0, r7, r3
   159f4:	eor	r1, r4, #889192448	; 0x35000000
   159f8:	orrs	r0, r1, r0
   159fc:	bne	15ad4 <main@@Base+0x25fc>
   15a00:	ldr	r0, [sp, #28]
   15a04:	mov	r1, r8
   15a08:	ldr	r4, [sp, #20]
   15a0c:	mov	r2, r4
   15a10:	mov	r3, #5
   15a14:	bl	15d04 <main@@Base+0x282c>
   15a18:	mov	r9, r0
   15a1c:	cmp	r8, r0
   15a20:	beq	15acc <main@@Base+0x25f4>
   15a24:	ldr	r0, [sp, #28]
   15a28:	ldr	r0, [r0]
   15a2c:	mov	r1, #4
   15a30:	mov	r2, #2
   15a34:	mvn	r3, #-1073741824	; 0xc0000000
   15a38:	bl	1dd48 <flatcc_builder_start_vector@@Base>
   15a3c:	cmp	r0, #0
   15a40:	bne	13658 <main@@Base+0x180>
   15a44:	ldr	r5, [sp, #28]
   15a48:	mov	r0, r5
   15a4c:	mov	r1, r9
   15a50:	mov	r2, r4
   15a54:	add	r8, sp, #52	; 0x34
   15a58:	mov	r3, r8
   15a5c:	bl	16900 <main@@Base+0x3428>
   15a60:	mov	r9, r0
   15a64:	ldr	r0, [r5]
   15a68:	ldr	r1, [sp, #52]	; 0x34
   15a6c:	cmp	r1, #0
   15a70:	beq	13c24 <main@@Base+0x74c>
   15a74:	ldr	r6, [sp, #24]
   15a78:	mov	r1, #1
   15a7c:	bl	1d760 <flatcc_builder_extend_vector@@Base>
   15a80:	cmp	r0, #0
   15a84:	beq	13658 <main@@Base+0x180>
   15a88:	mov	r3, r0
   15a8c:	ldr	r5, [sp, #28]
   15a90:	mov	r0, r5
   15a94:	mov	r1, r9
   15a98:	mov	r2, r4
   15a9c:	bl	173e4 <main@@Base+0x3f0c>
   15aa0:	mov	r1, r0
   15aa4:	mov	r0, r5
   15aa8:	mov	r2, r4
   15aac:	mov	r3, r8
   15ab0:	bl	16ba0 <main@@Base+0x36c8>
   15ab4:	mov	r9, r0
   15ab8:	ldr	r0, [r5]
   15abc:	ldr	r1, [sp, #52]	; 0x34
   15ac0:	cmp	r1, #0
   15ac4:	bne	15a78 <main@@Base+0x25a0>
   15ac8:	b	13c28 <main@@Base+0x750>
   15acc:	mov	r8, r9
   15ad0:	b	15ad8 <main@@Base+0x2600>
   15ad4:	ldr	r4, [sp, #20]
   15ad8:	movw	r0, #31088	; 0x7970
   15adc:	movt	r0, #24436	; 0x5f74
   15ae0:	eor	r0, sl, r0
   15ae4:	orrs	r0, r0, r6
   15ae8:	bne	136f0 <main@@Base+0x218>
   15aec:	add	r6, r8, #8
   15af0:	mov	r0, r6
   15af4:	mov	r1, r4
   15af8:	bl	15d00 <main@@Base+0x2828>
   15afc:	and	r0, r1, #-16777216	; 0xff000000
   15b00:	teq	r0, #1694498816	; 0x65000000
   15b04:	bne	15b68 <main@@Base+0x2690>
   15b08:	ldr	r0, [sp, #28]
   15b0c:	mov	r1, r6
   15b10:	mov	r2, r4
   15b14:	mov	r3, #1
   15b18:	bl	15d04 <main@@Base+0x282c>
   15b1c:	mov	r1, r0
   15b20:	cmp	r6, r0
   15b24:	add	r8, sp, #52	; 0x34
   15b28:	beq	136fc <main@@Base+0x224>
   15b2c:	ldr	r0, [sp, #44]	; 0x2c
   15b30:	mov	r2, #8
   15b34:	str	r2, [sp]
   15b38:	str	r0, [sp, #4]
   15b3c:	movw	r0, #28868	; 0x70c4
   15b40:	movt	r0, #3
   15b44:	str	r0, [sp, #8]
   15b48:	movw	r0, #30196	; 0x75f4
   15b4c:	movt	r0, #1
   15b50:	str	r0, [sp, #12]
   15b54:	ldr	r0, [sp, #28]
   15b58:	mov	r2, r4
   15b5c:	mov	r3, #0
   15b60:	bl	222d4 <flatcc_json_parser_union_type@@Base>
   15b64:	b	13f90 <main@@Base+0xab8>
   15b68:	ldr	r0, [sp, #28]
   15b6c:	mov	r1, r6
   15b70:	mov	r2, r4
   15b74:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   15b78:	mov	r9, r0
   15b7c:	ldr	r6, [sp, #24]
   15b80:	add	r8, sp, #52	; 0x34
   15b84:	ldr	r0, [sp, #28]
   15b88:	mov	r1, r9
   15b8c:	mov	r2, r4
   15b90:	mov	r3, r8
   15b94:	bl	18ea8 <main@@Base+0x59d0>
   15b98:	mov	r9, r0
   15b9c:	ldr	r0, [sp, #52]	; 0x34
   15ba0:	cmp	r0, #0
   15ba4:	bne	14470 <main@@Base+0xf98>
   15ba8:	ldr	r0, [sp, #28]
   15bac:	ldr	r0, [r0, #24]
   15bb0:	cmp	r0, #0
   15bb4:	bne	13658 <main@@Base+0x180>
   15bb8:	ldr	r0, [sp, #28]
   15bbc:	ldr	r0, [r0]
   15bc0:	mov	r1, #3
   15bc4:	bl	1e5b0 <flatcc_builder_check_required_field@@Base>
   15bc8:	cmp	r0, #0
   15bcc:	beq	15c04 <main@@Base+0x272c>
   15bd0:	ldr	r3, [sp, #44]	; 0x2c
   15bd4:	ldr	r5, [sp, #28]
   15bd8:	mov	r0, r5
   15bdc:	mov	r1, r9
   15be0:	mov	r2, r4
   15be4:	bl	22154 <flatcc_json_parser_finalize_unions@@Base>
   15be8:	mov	r9, r0
   15bec:	ldr	r0, [r5]
   15bf0:	bl	1e73c <flatcc_builder_end_table@@Base>
   15bf4:	str	r0, [r6]
   15bf8:	cmp	r0, #0
   15bfc:	bne	13670 <main@@Base+0x198>
   15c00:	b	13658 <main@@Base+0x180>
   15c04:	ldr	r0, [sp, #28]
   15c08:	mov	r1, r9
   15c0c:	mov	r2, r4
   15c10:	mov	r3, #29
   15c14:	bl	20800 <flatcc_json_parser_set_error@@Base>
   15c18:	mov	r9, r0
   15c1c:	b	13658 <main@@Base+0x180>
   15c20:	ldr	r4, [sp, #20]
   15c24:	b	13658 <main@@Base+0x180>
   15c28:	push	{r4, r5, r6, sl, fp, lr}
   15c2c:	add	fp, sp, #16
   15c30:	mov	r5, r3
   15c34:	mov	r4, r2
   15c38:	mov	r6, r0
   15c3c:	cmp	r1, r2
   15c40:	beq	15c90 <main@@Base+0x27b8>
   15c44:	ldrb	r0, [r1]
   15c48:	cmp	r0, #123	; 0x7b
   15c4c:	bne	15c90 <main@@Base+0x27b8>
   15c50:	add	r1, r1, #1
   15c54:	mov	r0, r6
   15c58:	mov	r2, r4
   15c5c:	bl	18f68 <main@@Base+0x5a90>
   15c60:	cmp	r0, r4
   15c64:	beq	15cac <main@@Base+0x27d4>
   15c68:	ldrb	r1, [r0]
   15c6c:	cmp	r1, #125	; 0x7d
   15c70:	bne	15cac <main@@Base+0x27d4>
   15c74:	mov	r1, #0
   15c78:	str	r1, [r5]
   15c7c:	add	r1, r0, #1
   15c80:	mov	r0, r6
   15c84:	mov	r2, r4
   15c88:	pop	{r4, r5, r6, sl, fp, lr}
   15c8c:	b	18f68 <main@@Base+0x5a90>
   15c90:	mov	r0, #0
   15c94:	str	r0, [r5]
   15c98:	mov	r0, r6
   15c9c:	mov	r2, r4
   15ca0:	mov	r3, #21
   15ca4:	pop	{r4, r5, r6, sl, fp, lr}
   15ca8:	b	20800 <flatcc_json_parser_set_error@@Base>
   15cac:	mov	r1, #1
   15cb0:	str	r1, [r5]
   15cb4:	pop	{r4, r5, r6, sl, fp, pc}
   15cb8:	cmp	r1, r2
   15cbc:	beq	15cf8 <main@@Base+0x2820>
   15cc0:	ldrb	r3, [r1]
   15cc4:	cmp	r3, #46	; 0x2e
   15cc8:	beq	15ce8 <main@@Base+0x2810>
   15ccc:	cmp	r3, #34	; 0x22
   15cd0:	bne	15cf0 <main@@Base+0x2818>
   15cd4:	mov	r2, #0
   15cd8:	str	r2, [r0, #12]
   15cdc:	add	r1, r1, #1
   15ce0:	mov	r0, r1
   15ce4:	bx	lr
   15ce8:	mov	r3, #5
   15cec:	b	20800 <flatcc_json_parser_set_error@@Base>
   15cf0:	mov	r2, #1
   15cf4:	str	r2, [r0, #12]
   15cf8:	mov	r0, r1
   15cfc:	bx	lr
   15d00:	b	18fa0 <main@@Base+0x5ac8>
   15d04:	push	{r4, r5, r6, sl, fp, lr}
   15d08:	add	fp, sp, #16
   15d0c:	mov	r6, r0
   15d10:	sub	r0, r2, r1
   15d14:	cmp	r0, r3
   15d18:	ble	15d9c <main@@Base+0x28c4>
   15d1c:	mov	r4, r2
   15d20:	mov	r2, r1
   15d24:	ldrb	r0, [r2, r3]!
   15d28:	ldr	r5, [r6, #12]
   15d2c:	cmp	r5, #0
   15d30:	beq	15d50 <main@@Base+0x2878>
   15d34:	cmp	r0, #33	; 0x21
   15d38:	bcc	15d44 <main@@Base+0x286c>
   15d3c:	cmp	r0, #58	; 0x3a
   15d40:	bne	15d9c <main@@Base+0x28c4>
   15d44:	mov	r0, #0
   15d48:	str	r0, [r6, #12]
   15d4c:	b	15d60 <main@@Base+0x2888>
   15d50:	cmp	r0, #34	; 0x22
   15d54:	bne	15d9c <main@@Base+0x28c4>
   15d58:	add	r0, r1, r3
   15d5c:	add	r2, r0, #1
   15d60:	mov	r0, r6
   15d64:	mov	r1, r2
   15d68:	mov	r2, r4
   15d6c:	bl	18f68 <main@@Base+0x5a90>
   15d70:	mov	r1, r0
   15d74:	cmp	r0, r4
   15d78:	beq	15da4 <main@@Base+0x28cc>
   15d7c:	ldrb	r0, [r1]
   15d80:	cmp	r0, #58	; 0x3a
   15d84:	bne	15da4 <main@@Base+0x28cc>
   15d88:	add	r1, r1, #1
   15d8c:	mov	r0, r6
   15d90:	mov	r2, r4
   15d94:	pop	{r4, r5, r6, sl, fp, lr}
   15d98:	b	18f68 <main@@Base+0x5a90>
   15d9c:	mov	r0, r1
   15da0:	pop	{r4, r5, r6, sl, fp, pc}
   15da4:	mov	r0, r6
   15da8:	mov	r2, r4
   15dac:	mov	r3, #4
   15db0:	pop	{r4, r5, r6, sl, fp, lr}
   15db4:	b	20800 <flatcc_json_parser_set_error@@Base>
   15db8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15dbc:	add	fp, sp, #24
   15dc0:	sub	sp, sp, #8
   15dc4:	mov	r9, r3
   15dc8:	mov	r6, r2
   15dcc:	mov	r5, r1
   15dd0:	mov	r7, r0
   15dd4:	mov	r0, r1
   15dd8:	mov	r1, r2
   15ddc:	bl	15d00 <main@@Base+0x2828>
   15de0:	ldr	ip, [fp, #12]
   15de4:	ldr	r8, [fp, #8]
   15de8:	movw	r3, #25957	; 0x6565
   15dec:	movt	r3, #18290	; 0x4772
   15df0:	mvn	r4, #-1845493760	; 0x92000000
   15df4:	subs	r4, r4, r0
   15df8:	sbcs	r4, r3, r1
   15dfc:	bcc	15e3c <main@@Base+0x2964>
   15e00:	movw	r0, #30053	; 0x7565
   15e04:	movt	r0, #17004	; 0x426c
   15e08:	teq	r1, r0
   15e0c:	bne	15ec8 <main@@Base+0x29f0>
   15e10:	str	ip, [sp]
   15e14:	mov	r0, r7
   15e18:	mov	r1, r5
   15e1c:	mov	r2, r6
   15e20:	mov	r3, #4
   15e24:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   15e28:	cmp	r0, r5
   15e2c:	beq	15ec8 <main@@Base+0x29f0>
   15e30:	mov	r1, #0
   15e34:	mov	r2, #8
   15e38:	b	15eb8 <main@@Base+0x29e0>
   15e3c:	bic	r4, r1, #255	; 0xff
   15e40:	movw	r2, #25600	; 0x6400
   15e44:	movt	r2, #21093	; 0x5265
   15e48:	teq	r4, r2
   15e4c:	bne	15e7c <main@@Base+0x29a4>
   15e50:	str	ip, [sp]
   15e54:	mov	r0, r7
   15e58:	mov	r1, r5
   15e5c:	mov	r2, r6
   15e60:	mov	r3, #3
   15e64:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   15e68:	cmp	r0, r5
   15e6c:	beq	15ec8 <main@@Base+0x29f0>
   15e70:	mov	r1, #0
   15e74:	mov	r2, #1
   15e78:	b	15eb8 <main@@Base+0x29e0>
   15e7c:	eor	r1, r1, r3
   15e80:	and	r0, r0, #-16777216	; 0xff000000
   15e84:	eor	r0, r0, #1845493760	; 0x6e000000
   15e88:	orrs	r0, r0, r1
   15e8c:	bne	15ec8 <main@@Base+0x29f0>
   15e90:	str	ip, [sp]
   15e94:	mov	r0, r7
   15e98:	mov	r1, r5
   15e9c:	mov	r2, r6
   15ea0:	mov	r3, #5
   15ea4:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   15ea8:	cmp	r0, r5
   15eac:	beq	15ec8 <main@@Base+0x29f0>
   15eb0:	mov	r1, #0
   15eb4:	mov	r2, #2
   15eb8:	str	r2, [r8]
   15ebc:	str	r1, [r8, #4]
   15ec0:	str	r1, [r9]
   15ec4:	mov	r5, r0
   15ec8:	mov	r0, r5
   15ecc:	sub	sp, fp, #24
   15ed0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ed8:	add	fp, sp, #28
   15edc:	sub	sp, sp, #4
   15ee0:	mov	r9, r3
   15ee4:	mov	r5, r2
   15ee8:	mov	r7, r1
   15eec:	mov	sl, r0
   15ef0:	mov	r0, r1
   15ef4:	mov	r1, r2
   15ef8:	bl	15d00 <main@@Base+0x2828>
   15efc:	movw	r2, #30815	; 0x785f
   15f00:	movt	r2, #26725	; 0x6865
   15f04:	movw	r4, #30061	; 0x756d
   15f08:	movt	r4, #25966	; 0x656e
   15f0c:	subs	r3, r0, r4
   15f10:	sbcs	r3, r1, r2
   15f14:	bcs	15f78 <main@@Base+0x2aa0>
   15f18:	bic	r3, r1, #255	; 0xff
   15f1c:	movw	r2, #27759	; 0x6c6f
   15f20:	movt	r2, #17263	; 0x436f
   15f24:	mvn	r4, #-1912602624	; 0x8e000000
   15f28:	subs	r4, r4, r0
   15f2c:	sbcs	r4, r2, r1
   15f30:	bcc	15fd0 <main@@Base+0x2af8>
   15f34:	movw	r0, #30976	; 0x7900
   15f38:	movt	r0, #16750	; 0x416e
   15f3c:	teq	r3, r0
   15f40:	bne	1616c <main@@Base+0x2c94>
   15f44:	mov	r0, r7
   15f48:	mov	r1, r5
   15f4c:	mov	r2, #3
   15f50:	bl	19030 <main@@Base+0x5b58>
   15f54:	cmp	r0, r7
   15f58:	beq	1616c <main@@Base+0x2c94>
   15f5c:	mov	r1, r0
   15f60:	mov	r0, sl
   15f64:	mov	r2, r5
   15f68:	mov	r3, r9
   15f6c:	sub	sp, fp, #28
   15f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f74:	b	176f8 <main@@Base+0x4220>
   15f78:	add	r3, r2, #64512	; 0xfc00
   15f7c:	add	r3, r3, #17301504	; 0x1080000
   15f80:	subs	r6, r0, r4
   15f84:	sbcs	r6, r1, r3
   15f88:	bcs	16014 <main@@Base+0x2b3c>
   15f8c:	eor	r0, r0, r4
   15f90:	eor	r1, r1, r2
   15f94:	orrs	r0, r0, r1
   15f98:	bne	1616c <main@@Base+0x2c94>
   15f9c:	mov	r0, r7
   15fa0:	mov	r1, r5
   15fa4:	mov	r2, #8
   15fa8:	bl	19030 <main@@Base+0x5b58>
   15fac:	cmp	r0, r7
   15fb0:	beq	1616c <main@@Base+0x2c94>
   15fb4:	mov	r1, r0
   15fb8:	mov	r0, sl
   15fbc:	mov	r2, r5
   15fc0:	mov	r3, r9
   15fc4:	sub	sp, fp, #28
   15fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fcc:	b	19168 <main@@Base+0x5c90>
   15fd0:	movw	r4, #28416	; 0x6f00
   15fd4:	movt	r4, #18031	; 0x466f
   15fd8:	teq	r3, r4
   15fdc:	bne	1606c <main@@Base+0x2b94>
   15fe0:	mov	r0, r7
   15fe4:	mov	r1, r5
   15fe8:	mov	r2, #3
   15fec:	bl	19030 <main@@Base+0x5b58>
   15ff0:	cmp	r0, r7
   15ff4:	beq	1616c <main@@Base+0x2c94>
   15ff8:	mov	r1, r0
   15ffc:	mov	r0, sl
   16000:	mov	r2, r5
   16004:	mov	r3, r9
   16008:	sub	sp, fp, #28
   1600c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16010:	b	19050 <main@@Base+0x5b78>
   16014:	sub	r2, r2, #4352	; 0x1100
   16018:	sub	r2, r2, #-100663296	; 0xfa000000
   1601c:	subs	r6, r0, r4
   16020:	sbcs	r2, r1, r2
   16024:	bcs	160b4 <main@@Base+0x2bdc>
   16028:	eor	r0, r0, r4
   1602c:	eor	r1, r1, r3
   16030:	orrs	r0, r0, r1
   16034:	bne	1616c <main@@Base+0x2c94>
   16038:	mov	r0, r7
   1603c:	mov	r1, r5
   16040:	mov	r2, #8
   16044:	bl	19030 <main@@Base+0x5b58>
   16048:	cmp	r0, r7
   1604c:	beq	1616c <main@@Base+0x2c94>
   16050:	mov	r1, r0
   16054:	mov	r0, sl
   16058:	mov	r2, r5
   1605c:	mov	r3, r9
   16060:	sub	sp, fp, #28
   16064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16068:	b	19290 <main@@Base+0x5db8>
   1606c:	eor	r1, r1, r2
   16070:	and	r0, r0, #-16777216	; 0xff000000
   16074:	eor	r0, r0, #1912602624	; 0x72000000
   16078:	orrs	r0, r0, r1
   1607c:	bne	1616c <main@@Base+0x2c94>
   16080:	mov	r0, r7
   16084:	mov	r1, r5
   16088:	mov	r2, #5
   1608c:	bl	19030 <main@@Base+0x5b58>
   16090:	cmp	r0, r7
   16094:	beq	1616c <main@@Base+0x2c94>
   16098:	mov	r1, r0
   1609c:	mov	r0, sl
   160a0:	mov	r2, r5
   160a4:	mov	r3, r9
   160a8:	sub	sp, fp, #28
   160ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160b0:	b	15db8 <main@@Base+0x28e0>
   160b4:	movw	r2, #29817	; 0x7479
   160b8:	movt	r2, #28016	; 0x6d70
   160bc:	eor	r2, r0, r2
   160c0:	movw	r3, #29797	; 0x7465
   160c4:	movt	r3, #28271	; 0x6e6f
   160c8:	eor	r3, r1, r3
   160cc:	orrs	r2, r2, r3
   160d0:	beq	16120 <main@@Base+0x2c48>
   160d4:	eor	r0, r0, r4
   160d8:	movw	r2, #26463	; 0x675f
   160dc:	movt	r2, #28261	; 0x6e65
   160e0:	eor	r1, r1, r2
   160e4:	orrs	r0, r0, r1
   160e8:	bne	1616c <main@@Base+0x2c94>
   160ec:	mov	r0, r7
   160f0:	mov	r1, r5
   160f4:	mov	r2, #8
   160f8:	bl	19030 <main@@Base+0x5b58>
   160fc:	cmp	r0, r7
   16100:	beq	1616c <main@@Base+0x2c94>
   16104:	mov	r1, r0
   16108:	mov	r0, sl
   1610c:	mov	r2, r5
   16110:	mov	r3, r9
   16114:	sub	sp, fp, #28
   16118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1611c:	b	19404 <main@@Base+0x5f2c>
   16120:	add	r8, r7, #8
   16124:	mov	r0, r8
   16128:	mov	r1, r5
   1612c:	bl	15d00 <main@@Base+0x2828>
   16130:	teq	r1, r4
   16134:	bne	1616c <main@@Base+0x2c94>
   16138:	mov	r0, r8
   1613c:	mov	r1, r5
   16140:	mov	r2, #4
   16144:	bl	19030 <main@@Base+0x5b58>
   16148:	cmp	r0, r8
   1614c:	beq	1616c <main@@Base+0x2c94>
   16150:	mov	r1, r0
   16154:	mov	r0, sl
   16158:	mov	r2, r5
   1615c:	mov	r3, r9
   16160:	sub	sp, fp, #28
   16164:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16168:	b	19514 <main@@Base+0x603c>
   1616c:	mov	r0, r7
   16170:	sub	sp, fp, #28
   16174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1617c:	add	fp, sp, #28
   16180:	sub	sp, sp, #4
   16184:	mov	sl, r3
   16188:	mov	r5, r2
   1618c:	mov	r7, r1
   16190:	mov	r8, r0
   16194:	mov	r0, r1
   16198:	mov	r1, r2
   1619c:	bl	15d00 <main@@Base+0x2828>
   161a0:	movw	r2, #18273	; 0x4761
   161a4:	movt	r2, #19833	; 0x4d79
   161a8:	movw	r3, #11844	; 0x2e44
   161ac:	movt	r3, #28005	; 0x6d65
   161b0:	subs	r3, r3, r0
   161b4:	sbcs	r3, r2, r1
   161b8:	bcc	16258 <main@@Base+0x2d80>
   161bc:	movw	r2, #31022	; 0x792e
   161c0:	movt	r2, #24947	; 0x6173
   161c4:	eor	r0, r0, r2
   161c8:	movw	r2, #28276	; 0x6e74
   161cc:	movt	r2, #18017	; 0x4661
   161d0:	eor	r1, r1, r2
   161d4:	orrs	r0, r0, r1
   161d8:	bne	166e4 <main@@Base+0x320c>
   161dc:	add	r0, r7, #8
   161e0:	mov	r1, r5
   161e4:	bl	15d00 <main@@Base+0x2828>
   161e8:	movw	r2, #24946	; 0x6172
   161ec:	movt	r2, #17256	; 0x4368
   161f0:	eor	r1, r1, r2
   161f4:	movw	r2, #29797	; 0x7465
   161f8:	movt	r2, #24931	; 0x6163
   161fc:	eor	r0, r0, r2
   16200:	orrs	r0, r0, r1
   16204:	bne	166e4 <main@@Base+0x320c>
   16208:	add	r4, r7, #16
   1620c:	mov	r0, r4
   16210:	mov	r1, r5
   16214:	bl	15d00 <main@@Base+0x2828>
   16218:	and	r0, r1, #-16777216	; 0xff000000
   1621c:	teq	r0, #1912602624	; 0x72000000
   16220:	bne	166e4 <main@@Base+0x320c>
   16224:	mov	r0, r4
   16228:	mov	r1, r5
   1622c:	mov	r2, #1
   16230:	bl	19030 <main@@Base+0x5b58>
   16234:	cmp	r0, r4
   16238:	beq	166e4 <main@@Base+0x320c>
   1623c:	mov	r1, r0
   16240:	mov	r0, r8
   16244:	mov	r2, r5
   16248:	mov	r3, sl
   1624c:	sub	sp, fp, #28
   16250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16254:	b	19590 <main@@Base+0x60b8>
   16258:	movw	r3, #11855	; 0x2e4f
   1625c:	movt	r3, #28005	; 0x6d65
   16260:	eor	r3, r0, r3
   16264:	eor	r1, r1, r2
   16268:	orrs	r2, r3, r1
   1626c:	beq	16330 <main@@Base+0x2e58>
   16270:	movw	r2, #11845	; 0x2e45
   16274:	movt	r2, #28005	; 0x6d65
   16278:	eor	r0, r0, r2
   1627c:	orrs	r0, r0, r1
   16280:	bne	166e4 <main@@Base+0x320c>
   16284:	add	r0, r7, #8
   16288:	mov	r1, r5
   1628c:	bl	15d00 <main@@Base+0x2828>
   16290:	movw	r2, #28016	; 0x6d70
   16294:	movt	r2, #30817	; 0x7861
   16298:	movw	r3, #11880	; 0x2e68
   1629c:	movt	r3, #27749	; 0x6c65
   162a0:	subs	r6, r0, r3
   162a4:	sbcs	r6, r1, r2
   162a8:	bcs	16404 <main@@Base+0x2f2c>
   162ac:	subs	r6, r3, #37	; 0x25
   162b0:	sbc	r4, r2, #0
   162b4:	subs	r6, r0, r6
   162b8:	sbcs	r6, r1, r4
   162bc:	bcs	16480 <main@@Base+0x2fa8>
   162c0:	subs	r3, r3, #39	; 0x27
   162c4:	eor	r0, r0, r3
   162c8:	sbc	r2, r2, #0
   162cc:	eor	r1, r1, r2
   162d0:	orrs	r0, r0, r1
   162d4:	bne	166e4 <main@@Base+0x320c>
   162d8:	add	r4, r7, #16
   162dc:	mov	r0, r4
   162e0:	mov	r1, r5
   162e4:	bl	15d00 <main@@Base+0x2828>
   162e8:	bfc	r1, #0, #16
   162ec:	movw	r0, #0
   162f0:	movt	r0, #28281	; 0x6e79
   162f4:	teq	r1, r0
   162f8:	bne	166e4 <main@@Base+0x320c>
   162fc:	mov	r0, r4
   16300:	mov	r1, r5
   16304:	mov	r2, #2
   16308:	bl	19030 <main@@Base+0x5b58>
   1630c:	cmp	r0, r4
   16310:	beq	166e4 <main@@Base+0x320c>
   16314:	mov	r1, r0
   16318:	mov	r0, r8
   1631c:	mov	r2, r5
   16320:	mov	r3, sl
   16324:	sub	sp, fp, #28
   16328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1632c:	b	176f8 <main@@Base+0x4220>
   16330:	add	r0, r7, #8
   16334:	mov	r1, r5
   16338:	bl	15d00 <main@@Base+0x2828>
   1633c:	movw	r2, #25970	; 0x6572
   16340:	movt	r2, #29800	; 0x7468
   16344:	eor	r1, r1, r2
   16348:	movw	r2, #28005	; 0x6d65
   1634c:	movt	r2, #20065	; 0x4e61
   16350:	eor	r0, r0, r2
   16354:	orrs	r0, r0, r1
   16358:	bne	166e4 <main@@Base+0x320c>
   1635c:	add	r0, r7, #16
   16360:	mov	r1, r5
   16364:	bl	15d00 <main@@Base+0x2828>
   16368:	movw	r2, #24931	; 0x6163
   1636c:	movt	r2, #21360	; 0x5370
   16370:	eor	r1, r1, r2
   16374:	movw	r2, #18034	; 0x4672
   16378:	movt	r2, #25902	; 0x652e
   1637c:	eor	r0, r0, r2
   16380:	orrs	r0, r0, r1
   16384:	bne	166e4 <main@@Base+0x320c>
   16388:	add	r0, r7, #24
   1638c:	mov	r1, r5
   16390:	bl	15d00 <main@@Base+0x2828>
   16394:	movw	r2, #18798	; 0x496e
   16398:	movt	r2, #28525	; 0x6f6d
   1639c:	eor	r1, r1, r2
   163a0:	movw	r2, #30052	; 0x7564
   163a4:	movt	r2, #25452	; 0x636c
   163a8:	eor	r0, r0, r2
   163ac:	orrs	r0, r0, r1
   163b0:	bne	166e4 <main@@Base+0x320c>
   163b4:	add	r4, r7, #32
   163b8:	mov	r0, r4
   163bc:	mov	r1, r5
   163c0:	bl	15d00 <main@@Base+0x2828>
   163c4:	and	r0, r1, #-16777216	; 0xff000000
   163c8:	teq	r0, #1694498816	; 0x65000000
   163cc:	bne	166e4 <main@@Base+0x320c>
   163d0:	mov	r0, r4
   163d4:	mov	r1, r5
   163d8:	mov	r2, #1
   163dc:	bl	19030 <main@@Base+0x5b58>
   163e0:	cmp	r0, r4
   163e4:	beq	166e4 <main@@Base+0x320c>
   163e8:	mov	r1, r0
   163ec:	mov	r0, r8
   163f0:	mov	r2, r5
   163f4:	mov	r3, sl
   163f8:	sub	sp, fp, #28
   163fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16400:	b	19814 <main@@Base+0x633c>
   16404:	eor	r6, r0, r3
   16408:	eor	r4, r1, r2
   1640c:	orrs	r6, r6, r4
   16410:	bne	16500 <main@@Base+0x3028>
   16414:	add	r4, r7, #16
   16418:	mov	r0, r4
   1641c:	mov	r1, r5
   16420:	bl	15d00 <main@@Base+0x2828>
   16424:	movw	r2, #24421	; 0x5f65
   16428:	movt	r2, #25959	; 0x6567
   1642c:	add	r2, r2, #1114112	; 0x110000
   16430:	eor	r1, r1, r2
   16434:	bic	r0, r0, #255	; 0xff
   16438:	movw	r2, #27904	; 0x6d00
   1643c:	movt	r2, #28277	; 0x6e75
   16440:	eor	r0, r0, r2
   16444:	orrs	r0, r0, r1
   16448:	bne	166e4 <main@@Base+0x320c>
   1644c:	mov	r0, r4
   16450:	mov	r1, r5
   16454:	mov	r2, #7
   16458:	bl	19030 <main@@Base+0x5b58>
   1645c:	cmp	r0, r4
   16460:	beq	166e4 <main@@Base+0x320c>
   16464:	mov	r1, r0
   16468:	mov	r0, r8
   1646c:	mov	r2, r5
   16470:	mov	r3, sl
   16474:	sub	sp, fp, #28
   16478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1647c:	b	19168 <main@@Base+0x5c90>
   16480:	movw	r3, #11846	; 0x2e46
   16484:	movt	r3, #27749	; 0x6c65
   16488:	eor	r3, r0, r3
   1648c:	eor	r1, r1, r2
   16490:	orrs	r2, r3, r1
   16494:	beq	16610 <main@@Base+0x3138>
   16498:	movw	r2, #11843	; 0x2e43
   1649c:	movt	r2, #27749	; 0x6c65
   164a0:	eor	r0, r0, r2
   164a4:	orrs	r0, r0, r1
   164a8:	bne	166e4 <main@@Base+0x320c>
   164ac:	add	r4, r7, #16
   164b0:	mov	r0, r4
   164b4:	mov	r1, r5
   164b8:	bl	15d00 <main@@Base+0x2828>
   164bc:	movw	r0, #28530	; 0x6f72
   164c0:	movt	r0, #28524	; 0x6f6c
   164c4:	teq	r1, r0
   164c8:	bne	166e4 <main@@Base+0x320c>
   164cc:	mov	r0, r4
   164d0:	mov	r1, r5
   164d4:	mov	r2, #4
   164d8:	bl	19030 <main@@Base+0x5b58>
   164dc:	cmp	r0, r4
   164e0:	beq	166e4 <main@@Base+0x320c>
   164e4:	mov	r1, r0
   164e8:	mov	r0, r8
   164ec:	mov	r2, r5
   164f0:	mov	r3, sl
   164f4:	sub	sp, fp, #28
   164f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164fc:	b	15db8 <main@@Base+0x28e0>
   16500:	add	ip, r3, #6
   16504:	subs	r6, r0, ip
   16508:	sbcs	r1, r1, r2
   1650c:	bcs	16590 <main@@Base+0x30b8>
   16510:	add	r1, r3, #1
   16514:	eor	r0, r0, r1
   16518:	orrs	r0, r0, r4
   1651c:	bne	166e4 <main@@Base+0x320c>
   16520:	add	r4, r7, #16
   16524:	mov	r0, r4
   16528:	mov	r1, r5
   1652c:	bl	15d00 <main@@Base+0x2828>
   16530:	movw	r2, #24421	; 0x5f65
   16534:	movt	r2, #25959	; 0x6567
   16538:	add	r2, r2, #851968	; 0xd0000
   1653c:	add	r2, r2, #150994944	; 0x9000000
   16540:	eor	r1, r1, r2
   16544:	bic	r0, r0, #255	; 0xff
   16548:	movw	r2, #27904	; 0x6d00
   1654c:	movt	r2, #28277	; 0x6e75
   16550:	eor	r0, r0, r2
   16554:	orrs	r0, r0, r1
   16558:	bne	166e4 <main@@Base+0x320c>
   1655c:	mov	r0, r4
   16560:	mov	r1, r5
   16564:	mov	r2, #7
   16568:	bl	19030 <main@@Base+0x5b58>
   1656c:	cmp	r0, r4
   16570:	beq	166e4 <main@@Base+0x320c>
   16574:	mov	r1, r0
   16578:	mov	r0, r8
   1657c:	mov	r2, r5
   16580:	mov	r3, sl
   16584:	sub	sp, fp, #28
   16588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1658c:	b	19290 <main@@Base+0x5db8>
   16590:	eor	r0, r0, ip
   16594:	orrs	r0, r0, r4
   16598:	bne	166e4 <main@@Base+0x320c>
   1659c:	add	r6, r7, #16
   165a0:	mov	r0, r6
   165a4:	mov	r1, r5
   165a8:	bl	15d00 <main@@Base+0x2828>
   165ac:	mov	r4, r0
   165b0:	mov	r9, r1
   165b4:	lsr	r0, r0, #8
   165b8:	orr	r0, r0, r1, lsl #24
   165bc:	movw	r1, #30061	; 0x756d
   165c0:	movt	r1, #25966	; 0x656e
   165c4:	eor	r0, r0, r1
   165c8:	movw	r1, #26463	; 0x675f
   165cc:	movt	r1, #101	; 0x65
   165d0:	eor	r1, r1, r9, lsr #8
   165d4:	orrs	r0, r0, r1
   165d8:	bne	1666c <main@@Base+0x3194>
   165dc:	mov	r0, r6
   165e0:	mov	r1, r5
   165e4:	mov	r2, #7
   165e8:	bl	19030 <main@@Base+0x5b58>
   165ec:	mov	r1, r0
   165f0:	cmp	r0, r6
   165f4:	beq	16668 <main@@Base+0x3190>
   165f8:	mov	r0, r8
   165fc:	mov	r2, r5
   16600:	mov	r3, sl
   16604:	sub	sp, fp, #28
   16608:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1660c:	b	19404 <main@@Base+0x5f2c>
   16610:	add	r4, r7, #16
   16614:	mov	r0, r4
   16618:	mov	r1, r5
   1661c:	bl	15d00 <main@@Base+0x2828>
   16620:	bfc	r1, #0, #16
   16624:	movw	r0, #0
   16628:	movt	r0, #28527	; 0x6f6f
   1662c:	teq	r1, r0
   16630:	bne	166e4 <main@@Base+0x320c>
   16634:	mov	r0, r4
   16638:	mov	r1, r5
   1663c:	mov	r2, #2
   16640:	bl	19030 <main@@Base+0x5b58>
   16644:	cmp	r0, r4
   16648:	beq	166e4 <main@@Base+0x320c>
   1664c:	mov	r1, r0
   16650:	mov	r0, r8
   16654:	mov	r2, r5
   16658:	mov	r3, sl
   1665c:	sub	sp, fp, #28
   16660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16664:	b	19050 <main@@Base+0x5b78>
   16668:	mov	r6, r1
   1666c:	movw	r0, #31077	; 0x7965
   16670:	movt	r0, #28788	; 0x7074
   16674:	eor	r0, r4, r0
   16678:	movw	r1, #25965	; 0x656d
   1667c:	movt	r1, #28532	; 0x6f74
   16680:	eor	r1, r9, r1
   16684:	orrs	r0, r0, r1
   16688:	bne	166e4 <main@@Base+0x320c>
   1668c:	add	r4, r6, #8
   16690:	mov	r0, r4
   16694:	mov	r1, r5
   16698:	bl	15d00 <main@@Base+0x2828>
   1669c:	bic	r0, r1, #255	; 0xff
   166a0:	movw	r1, #27904	; 0x6d00
   166a4:	movt	r1, #28277	; 0x6e75
   166a8:	teq	r0, r1
   166ac:	bne	166e4 <main@@Base+0x320c>
   166b0:	mov	r0, r4
   166b4:	mov	r1, r5
   166b8:	mov	r2, #3
   166bc:	bl	19030 <main@@Base+0x5b58>
   166c0:	cmp	r0, r4
   166c4:	beq	166e4 <main@@Base+0x320c>
   166c8:	mov	r1, r0
   166cc:	mov	r0, r8
   166d0:	mov	r2, r5
   166d4:	mov	r3, sl
   166d8:	sub	sp, fp, #28
   166dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   166e0:	b	19514 <main@@Base+0x603c>
   166e4:	mov	r0, r7
   166e8:	sub	sp, fp, #28
   166ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166f0:	push	{r4, r5, r6, r7, fp, lr}
   166f4:	add	fp, sp, #16
   166f8:	sub	sp, sp, #24
   166fc:	mov	r7, r1
   16700:	mov	r6, r0
   16704:	mov	r0, #0
   16708:	str	r0, [sp, #20]
   1670c:	str	r0, [sp, #16]
   16710:	str	r0, [sp, #12]
   16714:	strb	r0, [r3]
   16718:	cmp	r1, r2
   1671c:	beq	16774 <main@@Base+0x329c>
   16720:	mov	r5, r3
   16724:	mov	r4, r2
   16728:	add	r0, sp, #16
   1672c:	str	r0, [sp]
   16730:	add	r3, sp, #12
   16734:	mov	r0, r6
   16738:	mov	r1, r7
   1673c:	bl	21abc <flatcc_json_parser_integer@@Base>
   16740:	mov	r1, r0
   16744:	cmp	r0, r7
   16748:	beq	16770 <main@@Base+0x3298>
   1674c:	ldr	r3, [sp, #12]
   16750:	ldr	r0, [sp, #16]
   16754:	ldr	r2, [sp, #20]
   16758:	stm	sp, {r0, r2, r5}
   1675c:	mov	r0, r6
   16760:	mov	r2, r4
   16764:	bl	19918 <main@@Base+0x6440>
   16768:	mov	r7, r0
   1676c:	b	16774 <main@@Base+0x329c>
   16770:	mov	r7, r1
   16774:	mov	r0, r7
   16778:	sub	sp, fp, #16
   1677c:	pop	{r4, r5, r6, r7, fp, pc}
   16780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16784:	add	fp, sp, #28
   16788:	sub	sp, sp, #44	; 0x2c
   1678c:	mov	r4, r3
   16790:	mov	r7, r2
   16794:	mov	r5, r0
   16798:	mov	sl, #0
   1679c:	strb	sl, [fp, #-29]	; 0xffffffe3
   167a0:	ldr	r0, [fp, #8]
   167a4:	strb	sl, [r0]
   167a8:	mov	r0, r5
   167ac:	bl	19974 <main@@Base+0x649c>
   167b0:	mov	r6, r0
   167b4:	cmp	r0, r7
   167b8:	beq	16898 <main@@Base+0x33c0>
   167bc:	add	r0, r4, #4
   167c0:	add	r9, sp, #32
   167c4:	add	r8, sp, #28
   167c8:	str	r0, [sp, #16]
   167cc:	str	sl, [sp, #20]
   167d0:	mov	sl, r0
   167d4:	ldr	r4, [sl, #-4]
   167d8:	str	r9, [sp]
   167dc:	add	r0, sp, #24
   167e0:	str	r0, [sp, #4]
   167e4:	mov	r0, r5
   167e8:	mov	r1, r6
   167ec:	mov	r2, r7
   167f0:	mov	r3, r8
   167f4:	blx	r4
   167f8:	mov	r4, r0
   167fc:	cmp	r0, r7
   16800:	beq	168b8 <main@@Base+0x33e0>
   16804:	cmp	r4, r6
   16808:	bne	16820 <main@@Base+0x3348>
   1680c:	ldr	r0, [sl], #4
   16810:	cmp	r0, #0
   16814:	mov	r6, r4
   16818:	bne	167d4 <main@@Base+0x32fc>
   1681c:	b	168a0 <main@@Base+0x33c8>
   16820:	ldr	sl, [sp, #20]
   16824:	cmp	sl, #0
   16828:	ldrne	r0, [r5, #12]
   1682c:	cmpne	r0, #0
   16830:	bne	168cc <main@@Base+0x33f4>
   16834:	ldr	r3, [sp, #28]
   16838:	ldr	r0, [sp, #32]
   1683c:	ldr	r1, [sp, #36]	; 0x24
   16840:	stm	sp, {r0, r1}
   16844:	sub	r0, fp, #29
   16848:	str	r0, [sp, #8]
   1684c:	mov	r0, r5
   16850:	mov	r1, r4
   16854:	mov	r2, r7
   16858:	bl	19918 <main@@Base+0x6440>
   1685c:	cmp	r0, r7
   16860:	beq	168c4 <main@@Base+0x33ec>
   16864:	add	sl, sl, #1
   16868:	ldr	r0, [fp, #8]
   1686c:	mov	r2, r0
   16870:	ldrb	r0, [r0]
   16874:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   16878:	add	r0, r0, r1
   1687c:	strb	r0, [r2]
   16880:	ldr	r0, [sp, #24]
   16884:	cmp	r0, #0
   16888:	mov	r6, r4
   1688c:	ldr	r0, [sp, #16]
   16890:	bne	167cc <main@@Base+0x32f4>
   16894:	b	168b8 <main@@Base+0x33e0>
   16898:	mov	r4, r6
   1689c:	b	168b8 <main@@Base+0x33e0>
   168a0:	mov	r0, r5
   168a4:	mov	r1, r4
   168a8:	mov	r2, r7
   168ac:	mov	r3, #23
   168b0:	bl	20800 <flatcc_json_parser_set_error@@Base>
   168b4:	mov	r4, r0
   168b8:	mov	r0, r4
   168bc:	sub	sp, fp, #28
   168c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168c4:	mov	r4, r7
   168c8:	b	168b8 <main@@Base+0x33e0>
   168cc:	mov	r0, r5
   168d0:	mov	r1, r4
   168d4:	mov	r2, r7
   168d8:	mov	r3, #14
   168dc:	b	168b0 <main@@Base+0x33d8>
   168e0:	push	{r4, r5, fp, lr}
   168e4:	add	fp, sp, #8
   168e8:	mov	r4, r1
   168ec:	mov	r5, r0
   168f0:	mov	r0, r1
   168f4:	bl	199ac <main@@Base+0x64d4>
   168f8:	strb	r4, [r5]
   168fc:	pop	{r4, r5, fp, pc}
   16900:	push	{r4, r5, r6, sl, fp, lr}
   16904:	add	fp, sp, #16
   16908:	mov	r5, r3
   1690c:	mov	r4, r2
   16910:	mov	r6, r0
   16914:	cmp	r1, r2
   16918:	beq	16968 <main@@Base+0x3490>
   1691c:	ldrb	r0, [r1]
   16920:	cmp	r0, #91	; 0x5b
   16924:	bne	16968 <main@@Base+0x3490>
   16928:	add	r1, r1, #1
   1692c:	mov	r0, r6
   16930:	mov	r2, r4
   16934:	bl	18f68 <main@@Base+0x5a90>
   16938:	cmp	r0, r4
   1693c:	beq	16984 <main@@Base+0x34ac>
   16940:	ldrb	r1, [r0]
   16944:	cmp	r1, #93	; 0x5d
   16948:	bne	16984 <main@@Base+0x34ac>
   1694c:	mov	r1, #0
   16950:	str	r1, [r5]
   16954:	add	r1, r0, #1
   16958:	mov	r0, r6
   1695c:	mov	r2, r4
   16960:	pop	{r4, r5, r6, sl, fp, lr}
   16964:	b	18f68 <main@@Base+0x5a90>
   16968:	mov	r0, #0
   1696c:	str	r0, [r5]
   16970:	mov	r0, r6
   16974:	mov	r2, r4
   16978:	mov	r3, #22
   1697c:	pop	{r4, r5, r6, sl, fp, lr}
   16980:	b	20800 <flatcc_json_parser_set_error@@Base>
   16984:	mov	r1, #1
   16988:	str	r1, [r5]
   1698c:	pop	{r4, r5, r6, sl, fp, pc}
   16990:	push	{r4, r5, r6, r7, fp, lr}
   16994:	add	fp, sp, #16
   16998:	sub	sp, sp, #24
   1699c:	mov	r7, r1
   169a0:	mov	r6, r0
   169a4:	mov	r0, #0
   169a8:	str	r0, [sp, #20]
   169ac:	str	r0, [sp, #16]
   169b0:	str	r0, [sp, #12]
   169b4:	strb	r0, [r3]
   169b8:	cmp	r1, r2
   169bc:	beq	16a14 <main@@Base+0x353c>
   169c0:	mov	r5, r3
   169c4:	mov	r4, r2
   169c8:	add	r0, sp, #16
   169cc:	str	r0, [sp]
   169d0:	add	r3, sp, #12
   169d4:	mov	r0, r6
   169d8:	mov	r1, r7
   169dc:	bl	21abc <flatcc_json_parser_integer@@Base>
   169e0:	mov	r1, r0
   169e4:	cmp	r0, r7
   169e8:	beq	16a10 <main@@Base+0x3538>
   169ec:	ldr	r3, [sp, #12]
   169f0:	ldr	r0, [sp, #16]
   169f4:	ldr	r2, [sp, #20]
   169f8:	stm	sp, {r0, r2, r5}
   169fc:	mov	r0, r6
   16a00:	mov	r2, r4
   16a04:	bl	199b0 <main@@Base+0x64d8>
   16a08:	mov	r7, r0
   16a0c:	b	16a14 <main@@Base+0x353c>
   16a10:	mov	r7, r1
   16a14:	mov	r0, r7
   16a18:	sub	sp, fp, #16
   16a1c:	pop	{r4, r5, r6, r7, fp, pc}
   16a20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16a24:	add	fp, sp, #28
   16a28:	sub	sp, sp, #44	; 0x2c
   16a2c:	mov	r4, r3
   16a30:	mov	r7, r2
   16a34:	mov	r5, r0
   16a38:	mov	sl, #0
   16a3c:	strb	sl, [fp, #-29]	; 0xffffffe3
   16a40:	ldr	r0, [fp, #8]
   16a44:	strb	sl, [r0]
   16a48:	mov	r0, r5
   16a4c:	bl	19974 <main@@Base+0x649c>
   16a50:	mov	r6, r0
   16a54:	cmp	r0, r7
   16a58:	beq	16b38 <main@@Base+0x3660>
   16a5c:	add	r0, r4, #4
   16a60:	add	r9, sp, #32
   16a64:	add	r8, sp, #28
   16a68:	str	r0, [sp, #16]
   16a6c:	str	sl, [sp, #20]
   16a70:	mov	sl, r0
   16a74:	ldr	r4, [sl, #-4]
   16a78:	str	r9, [sp]
   16a7c:	add	r0, sp, #24
   16a80:	str	r0, [sp, #4]
   16a84:	mov	r0, r5
   16a88:	mov	r1, r6
   16a8c:	mov	r2, r7
   16a90:	mov	r3, r8
   16a94:	blx	r4
   16a98:	mov	r4, r0
   16a9c:	cmp	r0, r7
   16aa0:	beq	16b58 <main@@Base+0x3680>
   16aa4:	cmp	r4, r6
   16aa8:	bne	16ac0 <main@@Base+0x35e8>
   16aac:	ldr	r0, [sl], #4
   16ab0:	cmp	r0, #0
   16ab4:	mov	r6, r4
   16ab8:	bne	16a74 <main@@Base+0x359c>
   16abc:	b	16b40 <main@@Base+0x3668>
   16ac0:	ldr	sl, [sp, #20]
   16ac4:	cmp	sl, #0
   16ac8:	ldrne	r0, [r5, #12]
   16acc:	cmpne	r0, #0
   16ad0:	bne	16b6c <main@@Base+0x3694>
   16ad4:	ldr	r3, [sp, #28]
   16ad8:	ldr	r0, [sp, #32]
   16adc:	ldr	r1, [sp, #36]	; 0x24
   16ae0:	stm	sp, {r0, r1}
   16ae4:	sub	r0, fp, #29
   16ae8:	str	r0, [sp, #8]
   16aec:	mov	r0, r5
   16af0:	mov	r1, r4
   16af4:	mov	r2, r7
   16af8:	bl	199b0 <main@@Base+0x64d8>
   16afc:	cmp	r0, r7
   16b00:	beq	16b64 <main@@Base+0x368c>
   16b04:	add	sl, sl, #1
   16b08:	ldr	r0, [fp, #8]
   16b0c:	mov	r2, r0
   16b10:	ldrb	r0, [r0]
   16b14:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   16b18:	add	r0, r0, r1
   16b1c:	strb	r0, [r2]
   16b20:	ldr	r0, [sp, #24]
   16b24:	cmp	r0, #0
   16b28:	mov	r6, r4
   16b2c:	ldr	r0, [sp, #16]
   16b30:	bne	16a6c <main@@Base+0x3594>
   16b34:	b	16b58 <main@@Base+0x3680>
   16b38:	mov	r4, r6
   16b3c:	b	16b58 <main@@Base+0x3680>
   16b40:	mov	r0, r5
   16b44:	mov	r1, r4
   16b48:	mov	r2, r7
   16b4c:	mov	r3, #23
   16b50:	bl	20800 <flatcc_json_parser_set_error@@Base>
   16b54:	mov	r4, r0
   16b58:	mov	r0, r4
   16b5c:	sub	sp, fp, #28
   16b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16b64:	mov	r4, r7
   16b68:	b	16b58 <main@@Base+0x3680>
   16b6c:	mov	r0, r5
   16b70:	mov	r1, r4
   16b74:	mov	r2, r7
   16b78:	mov	r3, #14
   16b7c:	b	16b50 <main@@Base+0x3678>
   16b80:	push	{r4, r5, fp, lr}
   16b84:	add	fp, sp, #8
   16b88:	mov	r4, r1
   16b8c:	mov	r5, r0
   16b90:	mov	r0, r1
   16b94:	bl	199f8 <main@@Base+0x6520>
   16b98:	strb	r4, [r5]
   16b9c:	pop	{r4, r5, fp, pc}
   16ba0:	push	{r4, r5, r6, sl, fp, lr}
   16ba4:	add	fp, sp, #16
   16ba8:	mov	r6, r3
   16bac:	mov	r4, r2
   16bb0:	mov	r5, r0
   16bb4:	bl	18f68 <main@@Base+0x5a90>
   16bb8:	mov	r1, r0
   16bbc:	cmp	r0, r4
   16bc0:	beq	16c04 <main@@Base+0x372c>
   16bc4:	ldrb	r0, [r1]
   16bc8:	cmp	r0, #44	; 0x2c
   16bcc:	bne	16c0c <main@@Base+0x3734>
   16bd0:	add	r1, r1, #1
   16bd4:	mov	r0, r5
   16bd8:	mov	r2, r4
   16bdc:	bl	18f68 <main@@Base+0x5a90>
   16be0:	mov	r1, r0
   16be4:	cmp	r0, r4
   16be8:	beq	16c34 <main@@Base+0x375c>
   16bec:	ldrb	r0, [r1]
   16bf0:	cmp	r0, #93	; 0x5d
   16bf4:	bne	16c50 <main@@Base+0x3778>
   16bf8:	mov	r0, #0
   16bfc:	str	r0, [r6]
   16c00:	b	16c20 <main@@Base+0x3748>
   16c04:	mov	r0, #0
   16c08:	b	16c54 <main@@Base+0x377c>
   16c0c:	mov	r0, #0
   16c10:	str	r0, [r6]
   16c14:	ldrb	r0, [r1]
   16c18:	cmp	r0, #93	; 0x5d
   16c1c:	bne	16c3c <main@@Base+0x3764>
   16c20:	add	r1, r1, #1
   16c24:	mov	r0, r5
   16c28:	mov	r2, r4
   16c2c:	pop	{r4, r5, r6, sl, fp, lr}
   16c30:	b	18f68 <main@@Base+0x5a90>
   16c34:	mov	r0, #0
   16c38:	str	r0, [r6]
   16c3c:	mov	r0, r5
   16c40:	mov	r2, r4
   16c44:	mov	r3, #9
   16c48:	pop	{r4, r5, r6, sl, fp, lr}
   16c4c:	b	20800 <flatcc_json_parser_set_error@@Base>
   16c50:	mov	r0, #1
   16c54:	str	r0, [r6]
   16c58:	mov	r0, r1
   16c5c:	pop	{r4, r5, r6, sl, fp, pc}
   16c60:	push	{r4, r5, r6, r7, fp, lr}
   16c64:	add	fp, sp, #16
   16c68:	sub	sp, sp, #24
   16c6c:	mov	r7, r1
   16c70:	mov	r6, r0
   16c74:	mov	r0, #0
   16c78:	str	r0, [sp, #20]
   16c7c:	str	r0, [sp, #16]
   16c80:	str	r0, [sp, #12]
   16c84:	strh	r0, [r3]
   16c88:	cmp	r1, r2
   16c8c:	beq	16ce4 <main@@Base+0x380c>
   16c90:	mov	r5, r3
   16c94:	mov	r4, r2
   16c98:	add	r0, sp, #16
   16c9c:	str	r0, [sp]
   16ca0:	add	r3, sp, #12
   16ca4:	mov	r0, r6
   16ca8:	mov	r1, r7
   16cac:	bl	21abc <flatcc_json_parser_integer@@Base>
   16cb0:	mov	r1, r0
   16cb4:	cmp	r0, r7
   16cb8:	beq	16ce0 <main@@Base+0x3808>
   16cbc:	ldr	r3, [sp, #12]
   16cc0:	ldr	r0, [sp, #16]
   16cc4:	ldr	r2, [sp, #20]
   16cc8:	stm	sp, {r0, r2, r5}
   16ccc:	mov	r0, r6
   16cd0:	mov	r2, r4
   16cd4:	bl	199fc <main@@Base+0x6524>
   16cd8:	mov	r7, r0
   16cdc:	b	16ce4 <main@@Base+0x380c>
   16ce0:	mov	r7, r1
   16ce4:	mov	r0, r7
   16ce8:	sub	sp, fp, #16
   16cec:	pop	{r4, r5, r6, r7, fp, pc}
   16cf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16cf4:	add	fp, sp, #28
   16cf8:	sub	sp, sp, #44	; 0x2c
   16cfc:	mov	r4, r3
   16d00:	mov	r7, r2
   16d04:	mov	r5, r0
   16d08:	mov	sl, #0
   16d0c:	strh	sl, [fp, #-30]	; 0xffffffe2
   16d10:	ldr	r0, [fp, #8]
   16d14:	strh	sl, [r0]
   16d18:	mov	r0, r5
   16d1c:	bl	19974 <main@@Base+0x649c>
   16d20:	mov	r6, r0
   16d24:	cmp	r0, r7
   16d28:	beq	16e08 <main@@Base+0x3930>
   16d2c:	add	r0, r4, #4
   16d30:	add	r9, sp, #32
   16d34:	add	r8, sp, #28
   16d38:	str	r0, [sp, #16]
   16d3c:	str	sl, [sp, #20]
   16d40:	mov	sl, r0
   16d44:	ldr	r4, [sl, #-4]
   16d48:	str	r9, [sp]
   16d4c:	add	r0, sp, #24
   16d50:	str	r0, [sp, #4]
   16d54:	mov	r0, r5
   16d58:	mov	r1, r6
   16d5c:	mov	r2, r7
   16d60:	mov	r3, r8
   16d64:	blx	r4
   16d68:	mov	r4, r0
   16d6c:	cmp	r0, r7
   16d70:	beq	16e28 <main@@Base+0x3950>
   16d74:	cmp	r4, r6
   16d78:	bne	16d90 <main@@Base+0x38b8>
   16d7c:	ldr	r0, [sl], #4
   16d80:	cmp	r0, #0
   16d84:	mov	r6, r4
   16d88:	bne	16d44 <main@@Base+0x386c>
   16d8c:	b	16e10 <main@@Base+0x3938>
   16d90:	ldr	sl, [sp, #20]
   16d94:	cmp	sl, #0
   16d98:	ldrne	r0, [r5, #12]
   16d9c:	cmpne	r0, #0
   16da0:	bne	16e3c <main@@Base+0x3964>
   16da4:	ldr	r3, [sp, #28]
   16da8:	ldr	r0, [sp, #32]
   16dac:	ldr	r1, [sp, #36]	; 0x24
   16db0:	stm	sp, {r0, r1}
   16db4:	sub	r0, fp, #30
   16db8:	str	r0, [sp, #8]
   16dbc:	mov	r0, r5
   16dc0:	mov	r1, r4
   16dc4:	mov	r2, r7
   16dc8:	bl	199fc <main@@Base+0x6524>
   16dcc:	cmp	r0, r7
   16dd0:	beq	16e34 <main@@Base+0x395c>
   16dd4:	add	sl, sl, #1
   16dd8:	ldr	r0, [fp, #8]
   16ddc:	mov	r2, r0
   16de0:	ldrh	r0, [r0]
   16de4:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   16de8:	add	r0, r0, r1
   16dec:	strh	r0, [r2]
   16df0:	ldr	r0, [sp, #24]
   16df4:	cmp	r0, #0
   16df8:	mov	r6, r4
   16dfc:	ldr	r0, [sp, #16]
   16e00:	bne	16d3c <main@@Base+0x3864>
   16e04:	b	16e28 <main@@Base+0x3950>
   16e08:	mov	r4, r6
   16e0c:	b	16e28 <main@@Base+0x3950>
   16e10:	mov	r0, r5
   16e14:	mov	r1, r4
   16e18:	mov	r2, r7
   16e1c:	mov	r3, #23
   16e20:	bl	20800 <flatcc_json_parser_set_error@@Base>
   16e24:	mov	r4, r0
   16e28:	mov	r0, r4
   16e2c:	sub	sp, fp, #28
   16e30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16e34:	mov	r4, r7
   16e38:	b	16e28 <main@@Base+0x3950>
   16e3c:	mov	r0, r5
   16e40:	mov	r1, r4
   16e44:	mov	r2, r7
   16e48:	mov	r3, #14
   16e4c:	b	16e20 <main@@Base+0x3948>
   16e50:	push	{r4, r5, fp, lr}
   16e54:	add	fp, sp, #8
   16e58:	mov	r4, r1
   16e5c:	mov	r5, r0
   16e60:	mov	r0, r1
   16e64:	bl	19a5c <main@@Base+0x6584>
   16e68:	strh	r4, [r5]
   16e6c:	pop	{r4, r5, fp, pc}
   16e70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16e74:	add	fp, sp, #24
   16e78:	sub	sp, sp, #8
   16e7c:	mov	r8, r3
   16e80:	mov	r4, r2
   16e84:	mov	r7, r1
   16e88:	mov	r5, r0
   16e8c:	mov	r0, #0
   16e90:	str	r0, [r3]
   16e94:	ldr	r0, [r5]
   16e98:	mov	r1, #0
   16e9c:	bl	1e01c <flatcc_builder_start_table@@Base>
   16ea0:	cmp	r0, #0
   16ea4:	bne	16f34 <main@@Base+0x3a5c>
   16ea8:	add	r3, sp, #4
   16eac:	mov	r0, r5
   16eb0:	mov	r1, r7
   16eb4:	mov	r2, r4
   16eb8:	bl	15c28 <main@@Base+0x2750>
   16ebc:	mov	r7, r0
   16ec0:	ldr	r0, [sp, #4]
   16ec4:	cmp	r0, #0
   16ec8:	beq	16f14 <main@@Base+0x3a3c>
   16ecc:	add	r6, sp, #4
   16ed0:	mov	r0, r5
   16ed4:	mov	r1, r7
   16ed8:	mov	r2, r4
   16edc:	bl	15cb8 <main@@Base+0x27e0>
   16ee0:	mov	r1, r0
   16ee4:	mov	r0, r5
   16ee8:	mov	r2, r4
   16eec:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   16ef0:	mov	r1, r0
   16ef4:	mov	r0, r5
   16ef8:	mov	r2, r4
   16efc:	mov	r3, r6
   16f00:	bl	18ea8 <main@@Base+0x59d0>
   16f04:	mov	r7, r0
   16f08:	ldr	r0, [sp, #4]
   16f0c:	cmp	r0, #0
   16f10:	bne	16ed0 <main@@Base+0x39f8>
   16f14:	ldr	r0, [r5, #24]
   16f18:	cmp	r0, #0
   16f1c:	bne	16f34 <main@@Base+0x3a5c>
   16f20:	ldr	r0, [r5]
   16f24:	bl	1e73c <flatcc_builder_end_table@@Base>
   16f28:	str	r0, [r8]
   16f2c:	cmp	r0, #0
   16f30:	bne	16f4c <main@@Base+0x3a74>
   16f34:	mov	r0, r5
   16f38:	mov	r1, r7
   16f3c:	mov	r2, r4
   16f40:	mov	r3, #33	; 0x21
   16f44:	bl	20800 <flatcc_json_parser_set_error@@Base>
   16f48:	mov	r7, r0
   16f4c:	mov	r0, r7
   16f50:	sub	sp, fp, #24
   16f54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16f58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f5c:	add	fp, sp, #28
   16f60:	sub	sp, sp, #44	; 0x2c
   16f64:	mov	r6, r3
   16f68:	mov	r4, r2
   16f6c:	mov	r5, r0
   16f70:	sub	r3, fp, #32
   16f74:	bl	15c28 <main@@Base+0x2750>
   16f78:	mov	r1, r0
   16f7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f80:	cmp	r0, #0
   16f84:	beq	173d8 <main@@Base+0x3f00>
   16f88:	add	r0, r6, #4
   16f8c:	str	r0, [sp, #12]
   16f90:	add	r0, r6, #8
   16f94:	str	r0, [sp, #8]
   16f98:	add	r0, r6, #26
   16f9c:	str	r0, [sp, #20]
   16fa0:	add	r0, r6, #16
   16fa4:	str	r0, [sp, #28]
   16fa8:	str	r6, [sp, #16]
   16fac:	add	r0, r6, #24
   16fb0:	str	r0, [sp, #24]
   16fb4:	movw	r9, #29556	; 0x7374
   16fb8:	movt	r9, #29797	; 0x7465
   16fbc:	mvn	r8, #-855638016	; 0xcd000000
   16fc0:	sub	sl, fp, #32
   16fc4:	mov	r0, r5
   16fc8:	mov	r2, r4
   16fcc:	bl	15cb8 <main@@Base+0x27e0>
   16fd0:	mov	r7, r0
   16fd4:	mov	r1, r4
   16fd8:	bl	15d00 <main@@Base+0x2828>
   16fdc:	subs	r2, r8, r0
   16fe0:	sbcs	r2, r9, r1
   16fe4:	bcc	1709c <main@@Base+0x3bc4>
   16fe8:	eor	r2, r1, r9
   16fec:	and	r0, r0, #-16777216	; 0xff000000
   16ff0:	eor	r3, r0, #822083584	; 0x31000000
   16ff4:	orrs	r2, r3, r2
   16ff8:	beq	17194 <main@@Base+0x3cbc>
   16ffc:	eor	r1, r1, r9
   17000:	eor	r0, r0, #838860800	; 0x32000000
   17004:	orrs	r0, r0, r1
   17008:	bne	172c8 <main@@Base+0x3df0>
   1700c:	mov	r0, r5
   17010:	mov	r1, r7
   17014:	mov	r2, r4
   17018:	mov	r3, #5
   1701c:	bl	15d04 <main@@Base+0x282c>
   17020:	mov	r6, r0
   17024:	cmp	r7, r0
   17028:	beq	17388 <main@@Base+0x3eb0>
   1702c:	mov	r0, #0
   17030:	strb	r0, [sp, #32]
   17034:	mov	r0, r5
   17038:	mov	r1, r6
   1703c:	mov	r2, r4
   17040:	add	sl, sp, #32
   17044:	mov	r3, sl
   17048:	bl	166f0 <main@@Base+0x3218>
   1704c:	mov	r7, r0
   17050:	cmp	r6, r0
   17054:	bne	17088 <main@@Base+0x3bb0>
   17058:	str	sl, [sp]
   1705c:	mov	r0, r5
   17060:	mov	r1, r7
   17064:	mov	r2, r4
   17068:	movw	r3, #29076	; 0x7194
   1706c:	movt	r3, #3
   17070:	bl	16780 <main@@Base+0x32a8>
   17074:	mov	r1, r0
   17078:	cmp	r0, r7
   1707c:	cmpne	r1, r4
   17080:	beq	173c4 <main@@Base+0x3eec>
   17084:	mov	r7, r1
   17088:	sub	sl, fp, #32
   1708c:	ldrsb	r1, [sp, #32]
   17090:	ldr	r0, [sp, #24]
   17094:	bl	168e0 <main@@Base+0x3408>
   17098:	b	1739c <main@@Base+0x3ec4>
   1709c:	cmn	r1, #-2013265919	; 0x88000001
   170a0:	bhi	170ec <main@@Base+0x3c14>
   170a4:	eor	r1, r1, r9
   170a8:	and	r0, r0, #-16777216	; 0xff000000
   170ac:	eor	r0, r0, #855638016	; 0x33000000
   170b0:	orrs	r0, r0, r1
   170b4:	bne	172c8 <main@@Base+0x3df0>
   170b8:	mov	r0, r5
   170bc:	mov	r1, r7
   170c0:	mov	r2, r4
   170c4:	mov	r3, #5
   170c8:	bl	15d04 <main@@Base+0x282c>
   170cc:	mov	r1, r0
   170d0:	cmp	r7, r0
   170d4:	beq	172f0 <main@@Base+0x3e18>
   170d8:	mov	r0, r5
   170dc:	mov	r2, r4
   170e0:	ldr	r3, [sp, #20]
   170e4:	bl	173e4 <main@@Base+0x3f0c>
   170e8:	b	17398 <main@@Base+0x3ec0>
   170ec:	and	r0, r1, #-16777216	; 0xff000000
   170f0:	lsr	r1, r1, #24
   170f4:	cmp	r1, #120	; 0x78
   170f8:	bhi	17228 <main@@Base+0x3d50>
   170fc:	teq	r0, #2013265920	; 0x78000000
   17100:	bne	172c8 <main@@Base+0x3df0>
   17104:	mov	r0, r5
   17108:	mov	r1, r7
   1710c:	mov	r2, r4
   17110:	mov	r3, #1
   17114:	bl	15d04 <main@@Base+0x282c>
   17118:	mov	r6, r0
   1711c:	cmp	r7, r0
   17120:	beq	17388 <main@@Base+0x3eb0>
   17124:	mov	r0, #0
   17128:	str	r0, [sp, #32]
   1712c:	mov	r0, r5
   17130:	mov	r1, r6
   17134:	mov	r2, r4
   17138:	add	sl, sp, #32
   1713c:	mov	r3, sl
   17140:	bl	21510 <flatcc_json_parser_float@@Base>
   17144:	mov	r7, r0
   17148:	cmp	r6, r0
   1714c:	bne	17180 <main@@Base+0x3ca8>
   17150:	str	sl, [sp]
   17154:	mov	r0, r5
   17158:	mov	r1, r7
   1715c:	mov	r2, r4
   17160:	movw	r3, #29104	; 0x71b0
   17164:	movt	r3, #3
   17168:	bl	18384 <main@@Base+0x4eac>
   1716c:	mov	r1, r0
   17170:	cmp	r0, r7
   17174:	cmpne	r1, r4
   17178:	beq	173c4 <main@@Base+0x3eec>
   1717c:	mov	r7, r1
   17180:	sub	sl, fp, #32
   17184:	vldr	s0, [sp, #32]
   17188:	ldr	r0, [sp, #16]
   1718c:	bl	184d0 <main@@Base+0x4ff8>
   17190:	b	1739c <main@@Base+0x3ec4>
   17194:	mov	r0, r5
   17198:	mov	r1, r7
   1719c:	mov	r2, r4
   171a0:	mov	r3, #5
   171a4:	bl	15d04 <main@@Base+0x282c>
   171a8:	mov	r8, r0
   171ac:	cmp	r7, r0
   171b0:	beq	172d4 <main@@Base+0x3dfc>
   171b4:	mov	r0, #0
   171b8:	str	r0, [sp, #36]	; 0x24
   171bc:	str	r0, [sp, #32]
   171c0:	mov	r0, r5
   171c4:	mov	r1, r8
   171c8:	mov	r2, r4
   171cc:	add	r6, sp, #32
   171d0:	mov	r3, r6
   171d4:	bl	21438 <flatcc_json_parser_double@@Base>
   171d8:	mov	r7, r0
   171dc:	cmp	r8, r0
   171e0:	bne	17214 <main@@Base+0x3d3c>
   171e4:	str	r6, [sp]
   171e8:	mov	r0, r5
   171ec:	mov	r1, r7
   171f0:	mov	r2, r4
   171f4:	movw	r3, #29092	; 0x71a4
   171f8:	movt	r3, #3
   171fc:	bl	18d48 <main@@Base+0x5870>
   17200:	mov	r1, r0
   17204:	cmp	r0, r7
   17208:	cmpne	r1, r4
   1720c:	beq	173c4 <main@@Base+0x3eec>
   17210:	mov	r7, r1
   17214:	mvn	r8, #-855638016	; 0xcd000000
   17218:	vldr	d0, [sp, #32]
   1721c:	ldr	r0, [sp, #28]
   17220:	bl	18e90 <main@@Base+0x59b8>
   17224:	b	1739c <main@@Base+0x3ec4>
   17228:	teq	r0, #2030043136	; 0x79000000
   1722c:	beq	172f8 <main@@Base+0x3e20>
   17230:	teq	r0, #2046820352	; 0x7a000000
   17234:	bne	172c8 <main@@Base+0x3df0>
   17238:	mov	r0, r5
   1723c:	mov	r1, r7
   17240:	mov	r2, r4
   17244:	mov	r3, #1
   17248:	bl	15d04 <main@@Base+0x282c>
   1724c:	mov	r6, r0
   17250:	cmp	r7, r0
   17254:	beq	17388 <main@@Base+0x3eb0>
   17258:	mov	r0, #0
   1725c:	str	r0, [sp, #32]
   17260:	mov	r0, r5
   17264:	mov	r1, r6
   17268:	mov	r2, r4
   1726c:	add	sl, sp, #32
   17270:	mov	r3, sl
   17274:	bl	21510 <flatcc_json_parser_float@@Base>
   17278:	mov	r7, r0
   1727c:	cmp	r6, r0
   17280:	bne	172b4 <main@@Base+0x3ddc>
   17284:	str	sl, [sp]
   17288:	mov	r0, r5
   1728c:	mov	r1, r7
   17290:	mov	r2, r4
   17294:	movw	r3, #29116	; 0x71bc
   17298:	movt	r3, #3
   1729c:	bl	18384 <main@@Base+0x4eac>
   172a0:	mov	r1, r0
   172a4:	cmp	r0, r7
   172a8:	cmpne	r1, r4
   172ac:	beq	173c4 <main@@Base+0x3eec>
   172b0:	mov	r7, r1
   172b4:	sub	sl, fp, #32
   172b8:	vldr	s0, [sp, #32]
   172bc:	ldr	r0, [sp, #8]
   172c0:	bl	184d0 <main@@Base+0x4ff8>
   172c4:	b	1739c <main@@Base+0x3ec4>
   172c8:	mov	r0, r5
   172cc:	mov	r1, r7
   172d0:	b	17390 <main@@Base+0x3eb8>
   172d4:	mov	r0, r5
   172d8:	mov	r1, r8
   172dc:	mov	r2, r4
   172e0:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   172e4:	mov	r7, r0
   172e8:	mvn	r8, #-855638016	; 0xcd000000
   172ec:	b	1739c <main@@Base+0x3ec4>
   172f0:	mov	r0, r5
   172f4:	b	17390 <main@@Base+0x3eb8>
   172f8:	mov	r0, r5
   172fc:	mov	r1, r7
   17300:	mov	r2, r4
   17304:	mov	r3, #1
   17308:	bl	15d04 <main@@Base+0x282c>
   1730c:	mov	r6, r0
   17310:	cmp	r7, r0
   17314:	beq	17388 <main@@Base+0x3eb0>
   17318:	mov	r0, #0
   1731c:	str	r0, [sp, #32]
   17320:	mov	r0, r5
   17324:	mov	r1, r6
   17328:	mov	r2, r4
   1732c:	add	sl, sp, #32
   17330:	mov	r3, sl
   17334:	bl	21510 <flatcc_json_parser_float@@Base>
   17338:	mov	r7, r0
   1733c:	cmp	r6, r0
   17340:	bne	17374 <main@@Base+0x3e9c>
   17344:	str	sl, [sp]
   17348:	mov	r0, r5
   1734c:	mov	r1, r7
   17350:	mov	r2, r4
   17354:	movw	r3, #29128	; 0x71c8
   17358:	movt	r3, #3
   1735c:	bl	18384 <main@@Base+0x4eac>
   17360:	mov	r1, r0
   17364:	cmp	r0, r7
   17368:	cmpne	r1, r4
   1736c:	beq	173c4 <main@@Base+0x3eec>
   17370:	mov	r7, r1
   17374:	sub	sl, fp, #32
   17378:	vldr	s0, [sp, #32]
   1737c:	ldr	r0, [sp, #12]
   17380:	bl	184d0 <main@@Base+0x4ff8>
   17384:	b	1739c <main@@Base+0x3ec4>
   17388:	mov	r0, r5
   1738c:	mov	r1, r6
   17390:	mov	r2, r4
   17394:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   17398:	mov	r7, r0
   1739c:	mov	r0, r5
   173a0:	mov	r1, r7
   173a4:	mov	r2, r4
   173a8:	mov	r3, sl
   173ac:	bl	18ea8 <main@@Base+0x59d0>
   173b0:	mov	r1, r0
   173b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   173b8:	cmp	r0, #0
   173bc:	bne	16fc4 <main@@Base+0x3aec>
   173c0:	b	173d8 <main@@Base+0x3f00>
   173c4:	mov	r0, r5
   173c8:	mov	r2, r4
   173cc:	mov	r3, #33	; 0x21
   173d0:	bl	20800 <flatcc_json_parser_set_error@@Base>
   173d4:	mov	r1, r0
   173d8:	mov	r0, r1
   173dc:	sub	sp, fp, #28
   173e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   173e8:	add	fp, sp, #28
   173ec:	sub	sp, sp, #20
   173f0:	mov	r6, r3
   173f4:	mov	r4, r2
   173f8:	mov	r5, r0
   173fc:	add	r3, sp, #16
   17400:	bl	15c28 <main@@Base+0x2750>
   17404:	mov	r1, r0
   17408:	ldr	r0, [sp, #16]
   1740c:	cmp	r0, #0
   17410:	beq	175e8 <main@@Base+0x4110>
   17414:	str	r6, [sp, #8]
   17418:	add	r0, r6, #2
   1741c:	str	r0, [sp, #4]
   17420:	add	sl, sp, #12
   17424:	add	r9, sp, #16
   17428:	mov	r0, r5
   1742c:	mov	r2, r4
   17430:	bl	15cb8 <main@@Base+0x27e0>
   17434:	mov	r6, r0
   17438:	mov	r1, r4
   1743c:	bl	15d00 <main@@Base+0x2828>
   17440:	and	r0, r1, #-16777216	; 0xff000000
   17444:	teq	r0, #1627389952	; 0x61000000
   17448:	beq	174e8 <main@@Base+0x4010>
   1744c:	teq	r0, #1644167168	; 0x62000000
   17450:	bne	17570 <main@@Base+0x4098>
   17454:	mov	r7, sl
   17458:	mov	r0, r5
   1745c:	mov	r1, r6
   17460:	mov	r2, r4
   17464:	mov	r3, #1
   17468:	bl	15d04 <main@@Base+0x282c>
   1746c:	mov	sl, r0
   17470:	cmp	r6, r0
   17474:	beq	1757c <main@@Base+0x40a4>
   17478:	mov	r0, #0
   1747c:	strb	r0, [sp, #15]
   17480:	mov	r0, r5
   17484:	mov	r1, sl
   17488:	mov	r2, r4
   1748c:	add	r6, sp, #15
   17490:	mov	r3, r6
   17494:	bl	166f0 <main@@Base+0x3218>
   17498:	mov	r8, r0
   1749c:	cmp	sl, r0
   174a0:	bne	174d4 <main@@Base+0x3ffc>
   174a4:	str	r6, [sp]
   174a8:	mov	r0, r5
   174ac:	mov	r1, r8
   174b0:	mov	r2, r4
   174b4:	movw	r3, #29140	; 0x71d4
   174b8:	movt	r3, #3
   174bc:	bl	16780 <main@@Base+0x32a8>
   174c0:	mov	r1, r0
   174c4:	cmp	r0, r8
   174c8:	cmpne	r1, r4
   174cc:	beq	175d4 <main@@Base+0x40fc>
   174d0:	mov	r8, r1
   174d4:	mov	sl, r7
   174d8:	ldrsb	r1, [sp, #15]
   174dc:	ldr	r0, [sp, #4]
   174e0:	bl	168e0 <main@@Base+0x3408>
   174e4:	b	175ac <main@@Base+0x40d4>
   174e8:	mov	r0, r5
   174ec:	mov	r1, r6
   174f0:	mov	r2, r4
   174f4:	mov	r3, #1
   174f8:	bl	15d04 <main@@Base+0x282c>
   174fc:	mov	r7, r0
   17500:	cmp	r6, r0
   17504:	beq	17598 <main@@Base+0x40c0>
   17508:	mov	r0, #0
   1750c:	strh	r0, [sp, #12]
   17510:	mov	r0, r5
   17514:	mov	r1, r7
   17518:	mov	r2, r4
   1751c:	mov	r3, sl
   17520:	bl	16c60 <main@@Base+0x3788>
   17524:	mov	r8, r0
   17528:	cmp	r7, r0
   1752c:	bne	17560 <main@@Base+0x4088>
   17530:	str	sl, [sp]
   17534:	mov	r0, r5
   17538:	mov	r1, r8
   1753c:	mov	r2, r4
   17540:	movw	r3, #29152	; 0x71e0
   17544:	movt	r3, #3
   17548:	bl	16cf0 <main@@Base+0x3818>
   1754c:	mov	r1, r0
   17550:	cmp	r0, r8
   17554:	cmpne	r1, r4
   17558:	beq	175d4 <main@@Base+0x40fc>
   1755c:	mov	r8, r1
   17560:	ldrsh	r1, [sp, #12]
   17564:	ldr	r0, [sp, #8]
   17568:	bl	16e50 <main@@Base+0x3978>
   1756c:	b	175ac <main@@Base+0x40d4>
   17570:	mov	r0, r5
   17574:	mov	r1, r6
   17578:	b	175a0 <main@@Base+0x40c8>
   1757c:	mov	r0, r5
   17580:	mov	r1, sl
   17584:	mov	r2, r4
   17588:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1758c:	mov	r8, r0
   17590:	mov	sl, r7
   17594:	b	175ac <main@@Base+0x40d4>
   17598:	mov	r0, r5
   1759c:	mov	r1, r7
   175a0:	mov	r2, r4
   175a4:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   175a8:	mov	r8, r0
   175ac:	mov	r0, r5
   175b0:	mov	r1, r8
   175b4:	mov	r2, r4
   175b8:	mov	r3, r9
   175bc:	bl	18ea8 <main@@Base+0x59d0>
   175c0:	mov	r1, r0
   175c4:	ldr	r0, [sp, #16]
   175c8:	cmp	r0, #0
   175cc:	bne	17428 <main@@Base+0x3f50>
   175d0:	b	175e8 <main@@Base+0x4110>
   175d4:	mov	r0, r5
   175d8:	mov	r2, r4
   175dc:	mov	r3, #33	; 0x21
   175e0:	bl	20800 <flatcc_json_parser_set_error@@Base>
   175e4:	mov	r1, r0
   175e8:	mov	r0, r1
   175ec:	sub	sp, fp, #28
   175f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   175f4:	push	{r4, r5, r6, sl, fp, lr}
   175f8:	add	fp, sp, #16
   175fc:	mov	r4, r2
   17600:	mov	r5, r0
   17604:	ldr	r6, [fp, #8]
   17608:	mov	r0, #0
   1760c:	str	r0, [r6]
   17610:	cmp	r3, #4
   17614:	bhi	176b4 <main@@Base+0x41dc>
   17618:	add	r0, pc, #0
   1761c:	ldr	pc, [r0, r3, lsl #2]
   17620:	andeq	r7, r1, r4, lsr r6
   17624:	andeq	r7, r1, r4, asr #12
   17628:	andeq	r7, r1, r8, asr r6
   1762c:	andeq	r7, r1, ip, ror #12
   17630:	andeq	r7, r1, r0, lsl #13
   17634:	mov	r0, r5
   17638:	mov	r2, r4
   1763c:	pop	{r4, r5, r6, sl, fp, lr}
   17640:	b	19a60 <main@@Base+0x6588>
   17644:	mov	r0, r5
   17648:	mov	r2, r4
   1764c:	mov	r3, r6
   17650:	bl	13618 <main@@Base+0x140>
   17654:	b	17690 <main@@Base+0x41b8>
   17658:	mov	r0, r5
   1765c:	mov	r2, r4
   17660:	mov	r3, r6
   17664:	bl	19a8c <main@@Base+0x65b4>
   17668:	b	17690 <main@@Base+0x41b8>
   1766c:	mov	r0, r5
   17670:	mov	r2, r4
   17674:	mov	r3, r6
   17678:	bl	19ed8 <main@@Base+0x6a00>
   1767c:	b	17690 <main@@Base+0x41b8>
   17680:	mov	r0, r5
   17684:	mov	r2, r4
   17688:	mov	r3, r6
   1768c:	bl	19fc0 <main@@Base+0x6ae8>
   17690:	mov	r1, r0
   17694:	ldr	r0, [r5, #24]
   17698:	cmp	r0, #0
   1769c:	bne	176ac <main@@Base+0x41d4>
   176a0:	ldr	r0, [r6]
   176a4:	cmp	r0, #0
   176a8:	beq	176d4 <main@@Base+0x41fc>
   176ac:	mov	r0, r1
   176b0:	pop	{r4, r5, r6, sl, fp, pc}
   176b4:	ldrb	r0, [r5, #8]
   176b8:	tst	r0, #1
   176bc:	bne	176e8 <main@@Base+0x4210>
   176c0:	mov	r0, r5
   176c4:	mov	r2, r4
   176c8:	mov	r3, #15
   176cc:	pop	{r4, r5, r6, sl, fp, lr}
   176d0:	b	20800 <flatcc_json_parser_set_error@@Base>
   176d4:	mov	r0, r5
   176d8:	mov	r2, r4
   176dc:	mov	r3, #33	; 0x21
   176e0:	pop	{r4, r5, r6, sl, fp, lr}
   176e4:	b	20800 <flatcc_json_parser_set_error@@Base>
   176e8:	mov	r0, r5
   176ec:	mov	r2, r4
   176f0:	pop	{r4, r5, r6, sl, fp, lr}
   176f4:	b	21124 <flatcc_json_parser_generic_json@@Base>
   176f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176fc:	add	fp, sp, #28
   17700:	sub	sp, sp, #4
   17704:	mov	r8, r3
   17708:	mov	r6, r2
   1770c:	mov	r5, r1
   17710:	mov	r9, r0
   17714:	mov	r0, r1
   17718:	mov	r1, r2
   1771c:	bl	15d00 <main@@Base+0x2828>
   17720:	mov	r7, r0
   17724:	mov	r4, r1
   17728:	movw	r1, #28275	; 0x6e73
   1772c:	movt	r1, #19823	; 0x4d6f
   17730:	movw	r0, #29184	; 0x7200
   17734:	movt	r0, #29797	; 0x7465
   17738:	ldr	r3, [fp, #12]
   1773c:	ldr	sl, [fp, #8]
   17740:	subs	r2, r7, r0
   17744:	sbcs	r2, r4, r1
   17748:	bcs	1778c <main@@Base+0x42b4>
   1774c:	bic	r0, r4, #255	; 0xff
   17750:	movw	r1, #29696	; 0x7400
   17754:	movt	r1, #16748	; 0x416c
   17758:	teq	r0, r1
   1775c:	bne	177d8 <main@@Base+0x4300>
   17760:	str	r3, [sp]
   17764:	mov	r0, r9
   17768:	mov	r1, r5
   1776c:	mov	r2, r6
   17770:	mov	r3, #3
   17774:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   17778:	cmp	r0, r5
   1777c:	beq	177d8 <main@@Base+0x4300>
   17780:	mov	r1, #0
   17784:	mov	r2, #4
   17788:	b	177c8 <main@@Base+0x42f0>
   1778c:	eor	r1, r4, r1
   17790:	add	r2, r0, #50	; 0x32
   17794:	eor	r2, r7, r2
   17798:	orrs	r2, r2, r1
   1779c:	bne	177e4 <main@@Base+0x430c>
   177a0:	str	r3, [sp]
   177a4:	mov	r0, r9
   177a8:	mov	r1, r5
   177ac:	mov	r2, r6
   177b0:	mov	r3, #8
   177b4:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   177b8:	cmp	r0, r5
   177bc:	beq	177d8 <main@@Base+0x4300>
   177c0:	mov	r1, #0
   177c4:	mov	r2, #3
   177c8:	str	r2, [sl]
   177cc:	str	r1, [sl, #4]
   177d0:	str	r1, [r8]
   177d4:	mov	r5, r0
   177d8:	mov	r0, r5
   177dc:	sub	sp, fp, #28
   177e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177e4:	bic	r2, r7, #255	; 0xff
   177e8:	eor	r0, r2, r0
   177ec:	orrs	r0, r0, r1
   177f0:	mov	sl, r5
   177f4:	bne	1783c <main@@Base+0x4364>
   177f8:	str	r3, [sp]
   177fc:	mov	r0, r9
   17800:	mov	r1, r5
   17804:	mov	r2, r6
   17808:	mov	r3, #7
   1780c:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   17810:	mov	sl, r0
   17814:	cmp	r0, r5
   17818:	beq	17838 <main@@Base+0x4360>
   1781c:	mov	r1, #0
   17820:	mov	r0, #1
   17824:	ldr	r2, [fp, #8]
   17828:	strd	r0, [r2]
   1782c:	str	r1, [r8]
   17830:	mov	r5, sl
   17834:	b	177d8 <main@@Base+0x4300>
   17838:	ldr	r3, [fp, #12]
   1783c:	movw	r0, #20037	; 0x4e45
   17840:	movt	r0, #20047	; 0x4e4f
   17844:	teq	r4, r0
   17848:	bne	17888 <main@@Base+0x43b0>
   1784c:	str	r3, [sp]
   17850:	mov	r0, r9
   17854:	mov	r1, sl
   17858:	mov	r2, r6
   1785c:	mov	r3, #4
   17860:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   17864:	cmp	r0, sl
   17868:	beq	17880 <main@@Base+0x43a8>
   1786c:	mov	r1, #0
   17870:	ldr	r2, [fp, #8]
   17874:	str	r1, [r2]
   17878:	str	r1, [r2, #4]
   1787c:	b	177d0 <main@@Base+0x42f8>
   17880:	mov	sl, r0
   17884:	ldr	r3, [fp, #12]
   17888:	movw	r0, #28016	; 0x6d70
   1788c:	movt	r0, #21353	; 0x5369
   17890:	eor	r0, r7, r0
   17894:	movw	r1, #29556	; 0x7374
   17898:	movt	r1, #21605	; 0x5465
   1789c:	eor	r1, r4, r1
   178a0:	orrs	r0, r0, r1
   178a4:	bne	177d8 <main@@Base+0x4300>
   178a8:	mov	r7, r3
   178ac:	add	r0, sl, #8
   178b0:	mov	r1, r6
   178b4:	bl	15d00 <main@@Base+0x2828>
   178b8:	movw	r2, #21601	; 0x5461
   178bc:	movt	r2, #27749	; 0x6c65
   178c0:	eor	r1, r1, r2
   178c4:	movw	r2, #25943	; 0x6557
   178c8:	movt	r2, #25196	; 0x626c
   178cc:	eor	r0, r0, r2
   178d0:	orrs	r0, r0, r1
   178d4:	bne	177d8 <main@@Base+0x4300>
   178d8:	add	r4, sl, #16
   178dc:	mov	r0, r4
   178e0:	mov	r1, r6
   178e4:	bl	15d00 <main@@Base+0x2828>
   178e8:	lsr	r0, r0, #8
   178ec:	orr	r0, r0, r1, lsl #24
   178f0:	movw	r2, #30061	; 0x756d
   178f4:	movt	r2, #17774	; 0x456e
   178f8:	eor	r0, r0, r2
   178fc:	movw	r2, #29800	; 0x7468
   17900:	movt	r2, #105	; 0x69
   17904:	eor	r1, r2, r1, lsr #8
   17908:	orrs	r0, r0, r1
   1790c:	bne	177d8 <main@@Base+0x4300>
   17910:	str	r7, [sp]
   17914:	mov	r0, r9
   17918:	mov	r1, r4
   1791c:	mov	r2, r6
   17920:	mov	r3, #7
   17924:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   17928:	cmp	r0, r4
   1792c:	ldr	r3, [fp, #8]
   17930:	beq	177d8 <main@@Base+0x4300>
   17934:	mov	r1, #0
   17938:	mov	r2, #2
   1793c:	str	r2, [r3]
   17940:	str	r1, [r3, #4]
   17944:	b	177d0 <main@@Base+0x42f8>
   17948:	push	{r4, r5, r6, r7, fp, lr}
   1794c:	add	fp, sp, #16
   17950:	sub	sp, sp, #8
   17954:	mov	r4, r3
   17958:	mov	r6, r2
   1795c:	mov	r5, r1
   17960:	mov	r7, r0
   17964:	sub	r0, r2, r1
   17968:	cmp	r0, #4
   1796c:	blt	179a8 <main@@Base+0x44d0>
   17970:	ldr	r1, [r5]
   17974:	movw	r2, #29300	; 0x7274
   17978:	movt	r2, #25973	; 0x6575
   1797c:	cmp	r1, r2
   17980:	beq	179d4 <main@@Base+0x44fc>
   17984:	cmp	r0, #5
   17988:	blt	179a8 <main@@Base+0x44d0>
   1798c:	movw	r1, #16464	; 0x4050
   17990:	movt	r1, #2
   17994:	mov	r0, r5
   17998:	mov	r2, #5
   1799c:	bl	12ac8 <memcmp@plt>
   179a0:	cmp	r0, #0
   179a4:	beq	179e8 <main@@Base+0x4510>
   179a8:	add	r3, sp, #7
   179ac:	mov	r0, r7
   179b0:	mov	r1, r5
   179b4:	mov	r2, r6
   179b8:	bl	16990 <main@@Base+0x34b8>
   179bc:	ldrb	r1, [sp, #7]
   179c0:	cmp	r1, #0
   179c4:	movwne	r1, #1
   179c8:	strb	r1, [r4]
   179cc:	sub	sp, fp, #16
   179d0:	pop	{r4, r5, r6, r7, fp, pc}
   179d4:	mov	r0, #1
   179d8:	strb	r0, [r4]
   179dc:	add	r0, r5, #4
   179e0:	sub	sp, fp, #16
   179e4:	pop	{r4, r5, r6, r7, fp, pc}
   179e8:	mov	r0, #0
   179ec:	strb	r0, [r4]
   179f0:	add	r0, r5, #5
   179f4:	sub	sp, fp, #16
   179f8:	pop	{r4, r5, r6, r7, fp, pc}
   179fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a00:	add	fp, sp, #28
   17a04:	sub	sp, sp, #44	; 0x2c
   17a08:	mov	r4, r3
   17a0c:	mov	r7, r2
   17a10:	mov	r5, r0
   17a14:	mov	sl, #0
   17a18:	strb	sl, [fp, #-29]	; 0xffffffe3
   17a1c:	ldr	r0, [fp, #8]
   17a20:	strb	sl, [r0]
   17a24:	mov	r0, r5
   17a28:	bl	19974 <main@@Base+0x649c>
   17a2c:	mov	r6, r0
   17a30:	cmp	r0, r7
   17a34:	beq	17b14 <main@@Base+0x463c>
   17a38:	add	r0, r4, #4
   17a3c:	add	r9, sp, #32
   17a40:	add	r8, sp, #28
   17a44:	str	r0, [sp, #16]
   17a48:	str	sl, [sp, #20]
   17a4c:	mov	sl, r0
   17a50:	ldr	r4, [sl, #-4]
   17a54:	str	r9, [sp]
   17a58:	add	r0, sp, #24
   17a5c:	str	r0, [sp, #4]
   17a60:	mov	r0, r5
   17a64:	mov	r1, r6
   17a68:	mov	r2, r7
   17a6c:	mov	r3, r8
   17a70:	blx	r4
   17a74:	mov	r4, r0
   17a78:	cmp	r0, r7
   17a7c:	beq	17b34 <main@@Base+0x465c>
   17a80:	cmp	r4, r6
   17a84:	bne	17a9c <main@@Base+0x45c4>
   17a88:	ldr	r0, [sl], #4
   17a8c:	cmp	r0, #0
   17a90:	mov	r6, r4
   17a94:	bne	17a50 <main@@Base+0x4578>
   17a98:	b	17b1c <main@@Base+0x4644>
   17a9c:	ldr	sl, [sp, #20]
   17aa0:	cmp	sl, #0
   17aa4:	ldrne	r0, [r5, #12]
   17aa8:	cmpne	r0, #0
   17aac:	bne	17b48 <main@@Base+0x4670>
   17ab0:	ldr	r3, [sp, #28]
   17ab4:	ldr	r0, [sp, #32]
   17ab8:	ldr	r1, [sp, #36]	; 0x24
   17abc:	stm	sp, {r0, r1}
   17ac0:	sub	r0, fp, #29
   17ac4:	str	r0, [sp, #8]
   17ac8:	mov	r0, r5
   17acc:	mov	r1, r4
   17ad0:	mov	r2, r7
   17ad4:	bl	1c698 <main@@Base+0x91c0>
   17ad8:	cmp	r0, r7
   17adc:	beq	17b40 <main@@Base+0x4668>
   17ae0:	add	sl, sl, #1
   17ae4:	ldr	r0, [fp, #8]
   17ae8:	mov	r2, r0
   17aec:	ldrb	r0, [r0]
   17af0:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   17af4:	add	r0, r0, r1
   17af8:	strb	r0, [r2]
   17afc:	ldr	r0, [sp, #24]
   17b00:	cmp	r0, #0
   17b04:	mov	r6, r4
   17b08:	ldr	r0, [sp, #16]
   17b0c:	bne	17a48 <main@@Base+0x4570>
   17b10:	b	17b34 <main@@Base+0x465c>
   17b14:	mov	r4, r6
   17b18:	b	17b34 <main@@Base+0x465c>
   17b1c:	mov	r0, r5
   17b20:	mov	r1, r4
   17b24:	mov	r2, r7
   17b28:	mov	r3, #23
   17b2c:	bl	20800 <flatcc_json_parser_set_error@@Base>
   17b30:	mov	r4, r0
   17b34:	mov	r0, r4
   17b38:	sub	sp, fp, #28
   17b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b40:	mov	r4, r7
   17b44:	b	17b34 <main@@Base+0x465c>
   17b48:	mov	r0, r5
   17b4c:	mov	r1, r4
   17b50:	mov	r2, r7
   17b54:	mov	r3, #14
   17b58:	b	17b2c <main@@Base+0x4654>
   17b5c:	push	{r4, r5, fp, lr}
   17b60:	add	fp, sp, #8
   17b64:	mov	r4, r1
   17b68:	mov	r5, r0
   17b6c:	mov	r0, r1
   17b70:	bl	1c6c4 <main@@Base+0x91ec>
   17b74:	strb	r4, [r5]
   17b78:	pop	{r4, r5, fp, pc}
   17b7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b80:	add	fp, sp, #28
   17b84:	sub	sp, sp, #20
   17b88:	mov	r7, r3
   17b8c:	mov	r4, r2
   17b90:	mov	r5, r0
   17b94:	add	r3, sp, #16
   17b98:	bl	15c28 <main@@Base+0x2750>
   17b9c:	mov	r1, r0
   17ba0:	ldr	r0, [sp, #16]
   17ba4:	cmp	r0, #0
   17ba8:	beq	17d9c <main@@Base+0x48c4>
   17bac:	add	r0, r7, #4
   17bb0:	str	r0, [sp, #4]
   17bb4:	add	r8, sp, #12
   17bb8:	mov	r0, r5
   17bbc:	mov	r2, r4
   17bc0:	bl	15cb8 <main@@Base+0x27e0>
   17bc4:	mov	r6, r0
   17bc8:	mov	r1, r4
   17bcc:	bl	15d00 <main@@Base+0x2828>
   17bd0:	mov	r2, r1
   17bd4:	bfc	r2, #0, #16
   17bd8:	movw	r3, #0
   17bdc:	movt	r3, #26980	; 0x6964
   17be0:	teq	r2, r3
   17be4:	bne	17c6c <main@@Base+0x4794>
   17be8:	mov	r0, r5
   17bec:	mov	r1, r6
   17bf0:	mov	r2, r4
   17bf4:	mov	r3, #2
   17bf8:	bl	15d04 <main@@Base+0x282c>
   17bfc:	mov	sl, r0
   17c00:	cmp	r6, r0
   17c04:	beq	17cf0 <main@@Base+0x4818>
   17c08:	mov	r0, #0
   17c0c:	str	r0, [sp, #12]
   17c10:	mov	r0, r5
   17c14:	mov	r1, sl
   17c18:	mov	r2, r4
   17c1c:	mov	r3, r8
   17c20:	bl	18918 <main@@Base+0x5440>
   17c24:	mov	r9, r0
   17c28:	cmp	sl, r0
   17c2c:	bne	17c60 <main@@Base+0x4788>
   17c30:	str	r8, [sp]
   17c34:	mov	r0, r5
   17c38:	mov	r1, r9
   17c3c:	mov	r2, r4
   17c40:	movw	r3, #29472	; 0x7320
   17c44:	movt	r3, #3
   17c48:	bl	189a8 <main@@Base+0x54d0>
   17c4c:	mov	r1, r0
   17c50:	cmp	r0, r9
   17c54:	cmpne	r1, r4
   17c58:	beq	17d88 <main@@Base+0x48b0>
   17c5c:	mov	r9, r1
   17c60:	ldr	r1, [sp, #12]
   17c64:	mov	r0, r7
   17c68:	b	17d5c <main@@Base+0x4884>
   17c6c:	movw	r2, #25445	; 0x6365
   17c70:	movt	r2, #24942	; 0x616e
   17c74:	eor	r0, r0, r2
   17c78:	movw	r2, #29556	; 0x7374
   17c7c:	movt	r2, #25705	; 0x6469
   17c80:	eor	r1, r1, r2
   17c84:	orrs	r0, r0, r1
   17c88:	bne	17ce4 <main@@Base+0x480c>
   17c8c:	mov	sl, r7
   17c90:	mov	r0, r5
   17c94:	mov	r1, r6
   17c98:	mov	r2, r4
   17c9c:	mov	r3, #8
   17ca0:	bl	15d04 <main@@Base+0x282c>
   17ca4:	mov	r7, r0
   17ca8:	cmp	r6, r0
   17cac:	beq	17d08 <main@@Base+0x4830>
   17cb0:	mov	r0, #0
   17cb4:	str	r0, [sp, #8]
   17cb8:	mov	r0, r5
   17cbc:	mov	r1, r7
   17cc0:	mov	r2, r4
   17cc4:	add	r6, sp, #8
   17cc8:	mov	r3, r6
   17ccc:	bl	18918 <main@@Base+0x5440>
   17cd0:	mov	r9, r0
   17cd4:	cmp	r7, r0
   17cd8:	beq	17d24 <main@@Base+0x484c>
   17cdc:	mov	r7, sl
   17ce0:	b	17d58 <main@@Base+0x4880>
   17ce4:	mov	r0, r5
   17ce8:	mov	r1, r6
   17cec:	b	17cf8 <main@@Base+0x4820>
   17cf0:	mov	r0, r5
   17cf4:	mov	r1, sl
   17cf8:	mov	r2, r4
   17cfc:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   17d00:	mov	r9, r0
   17d04:	b	17d60 <main@@Base+0x4888>
   17d08:	mov	r0, r5
   17d0c:	mov	r1, r7
   17d10:	mov	r2, r4
   17d14:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   17d18:	mov	r9, r0
   17d1c:	mov	r7, sl
   17d20:	b	17d60 <main@@Base+0x4888>
   17d24:	str	r6, [sp]
   17d28:	mov	r0, r5
   17d2c:	mov	r1, r9
   17d30:	mov	r2, r4
   17d34:	movw	r3, #29484	; 0x732c
   17d38:	movt	r3, #3
   17d3c:	bl	189a8 <main@@Base+0x54d0>
   17d40:	mov	r1, r0
   17d44:	cmp	r0, r9
   17d48:	cmpne	r1, r4
   17d4c:	beq	17d88 <main@@Base+0x48b0>
   17d50:	mov	r7, sl
   17d54:	mov	r9, r1
   17d58:	ldmib	sp, {r0, r1}
   17d5c:	bl	18b08 <main@@Base+0x5630>
   17d60:	mov	r0, r5
   17d64:	mov	r1, r9
   17d68:	mov	r2, r4
   17d6c:	add	r3, sp, #16
   17d70:	bl	18ea8 <main@@Base+0x59d0>
   17d74:	mov	r1, r0
   17d78:	ldr	r0, [sp, #16]
   17d7c:	cmp	r0, #0
   17d80:	bne	17bb8 <main@@Base+0x46e0>
   17d84:	b	17d9c <main@@Base+0x48c4>
   17d88:	mov	r0, r5
   17d8c:	mov	r2, r4
   17d90:	mov	r3, #33	; 0x21
   17d94:	bl	20800 <flatcc_json_parser_set_error@@Base>
   17d98:	mov	r1, r0
   17d9c:	mov	r0, r1
   17da0:	sub	sp, fp, #28
   17da4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17da8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17dac:	add	fp, sp, #28
   17db0:	sub	sp, sp, #20
   17db4:	mov	r7, r3
   17db8:	mov	r4, r2
   17dbc:	mov	r6, r1
   17dc0:	mov	r5, r0
   17dc4:	mov	r0, #0
   17dc8:	str	r0, [r3]
   17dcc:	ldr	r0, [r5]
   17dd0:	mov	r1, #3
   17dd4:	bl	1e01c <flatcc_builder_start_table@@Base>
   17dd8:	cmp	r0, #0
   17ddc:	bne	17fe4 <main@@Base+0x4b0c>
   17de0:	add	r3, sp, #16
   17de4:	mov	r0, r5
   17de8:	mov	r1, r6
   17dec:	mov	r2, r4
   17df0:	bl	15c28 <main@@Base+0x2750>
   17df4:	mov	r6, r0
   17df8:	ldr	r0, [sp, #16]
   17dfc:	cmp	r0, #0
   17e00:	str	r7, [sp, #8]
   17e04:	beq	17fd8 <main@@Base+0x4b00>
   17e08:	movw	r7, #29556	; 0x7374
   17e0c:	movt	r7, #28261	; 0x6e65
   17e10:	movw	r8, #0
   17e14:	movt	r8, #25956	; 0x6564
   17e18:	movw	r9, #29793	; 0x7461
   17e1c:	movt	r9, #25697	; 0x6461
   17e20:	add	sl, sp, #16
   17e24:	mov	r0, r5
   17e28:	mov	r1, r6
   17e2c:	mov	r2, r4
   17e30:	bl	15cb8 <main@@Base+0x27e0>
   17e34:	mov	r6, r0
   17e38:	mov	r1, r4
   17e3c:	bl	15d00 <main@@Base+0x2828>
   17e40:	subs	r2, r0, r8
   17e44:	sbcs	r2, r1, r7
   17e48:	bcs	17ea8 <main@@Base+0x49d0>
   17e4c:	teq	r1, r9
   17e50:	bne	17f98 <main@@Base+0x4ac0>
   17e54:	mov	r0, r5
   17e58:	mov	r1, r6
   17e5c:	mov	r2, r4
   17e60:	mov	r3, #4
   17e64:	bl	15d04 <main@@Base+0x282c>
   17e68:	mov	r1, r0
   17e6c:	cmp	r6, r0
   17e70:	beq	17fa4 <main@@Base+0x4acc>
   17e74:	mov	r0, #0
   17e78:	str	r0, [sp]
   17e7c:	mov	r0, r5
   17e80:	mov	r2, r4
   17e84:	add	r3, sp, #12
   17e88:	bl	21bdc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   17e8c:	mov	r6, r0
   17e90:	ldr	r0, [sp, #12]
   17e94:	cmp	r0, #0
   17e98:	beq	17fe4 <main@@Base+0x4b0c>
   17e9c:	ldr	r0, [r5]
   17ea0:	mov	r1, #0
   17ea4:	b	17f80 <main@@Base+0x4aa8>
   17ea8:	movw	r2, #29292	; 0x726c
   17eac:	movt	r2, #117	; 0x75
   17eb0:	eor	r2, r2, r1, lsr #8
   17eb4:	lsr	r3, r0, #8
   17eb8:	orr	r3, r3, r1, lsl #24
   17ebc:	eor	r3, r3, r9
   17ec0:	orrs	r2, r3, r2
   17ec4:	bne	17f1c <main@@Base+0x4a44>
   17ec8:	mov	r0, r5
   17ecc:	mov	r1, r6
   17ed0:	mov	r2, r4
   17ed4:	mov	r3, #7
   17ed8:	bl	15d04 <main@@Base+0x282c>
   17edc:	mov	r1, r0
   17ee0:	cmp	r6, r0
   17ee4:	beq	17fa4 <main@@Base+0x4acc>
   17ee8:	mov	r0, #1
   17eec:	str	r0, [sp]
   17ef0:	mov	r0, r5
   17ef4:	mov	r2, r4
   17ef8:	add	r3, sp, #12
   17efc:	bl	21bdc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   17f00:	mov	r6, r0
   17f04:	ldr	r0, [sp, #12]
   17f08:	cmp	r0, #0
   17f0c:	beq	17fe4 <main@@Base+0x4b0c>
   17f10:	ldr	r0, [r5]
   17f14:	mov	r1, #1
   17f18:	b	17f80 <main@@Base+0x4aa8>
   17f1c:	eor	r1, r1, r7
   17f20:	bfc	r0, #0, #16
   17f24:	eor	r0, r0, r8
   17f28:	orrs	r0, r0, r1
   17f2c:	bne	17f98 <main@@Base+0x4ac0>
   17f30:	mov	r0, r5
   17f34:	mov	r1, r6
   17f38:	mov	r2, r4
   17f3c:	mov	r3, #6
   17f40:	bl	15d04 <main@@Base+0x282c>
   17f44:	mov	r1, r0
   17f48:	cmp	r6, r0
   17f4c:	beq	17fa4 <main@@Base+0x4acc>
   17f50:	mov	r0, #0
   17f54:	str	r0, [sp]
   17f58:	mov	r0, r5
   17f5c:	mov	r2, r4
   17f60:	add	r3, sp, #12
   17f64:	bl	21bdc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   17f68:	mov	r6, r0
   17f6c:	ldr	r0, [sp, #12]
   17f70:	cmp	r0, #0
   17f74:	beq	17fe4 <main@@Base+0x4b0c>
   17f78:	ldr	r0, [r5]
   17f7c:	mov	r1, #2
   17f80:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   17f84:	cmp	r0, #0
   17f88:	beq	17fe4 <main@@Base+0x4b0c>
   17f8c:	ldr	r1, [sp, #12]
   17f90:	str	r1, [r0]
   17f94:	b	17fb4 <main@@Base+0x4adc>
   17f98:	mov	r0, r5
   17f9c:	mov	r1, r6
   17fa0:	b	17fa8 <main@@Base+0x4ad0>
   17fa4:	mov	r0, r5
   17fa8:	mov	r2, r4
   17fac:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   17fb0:	mov	r6, r0
   17fb4:	mov	r0, r5
   17fb8:	mov	r1, r6
   17fbc:	mov	r2, r4
   17fc0:	mov	r3, sl
   17fc4:	bl	18ea8 <main@@Base+0x59d0>
   17fc8:	mov	r6, r0
   17fcc:	ldr	r0, [sp, #16]
   17fd0:	cmp	r0, #0
   17fd4:	bne	17e24 <main@@Base+0x494c>
   17fd8:	ldr	r0, [r5, #24]
   17fdc:	cmp	r0, #0
   17fe0:	beq	18008 <main@@Base+0x4b30>
   17fe4:	mov	r0, r5
   17fe8:	mov	r1, r6
   17fec:	mov	r2, r4
   17ff0:	mov	r3, #33	; 0x21
   17ff4:	bl	20800 <flatcc_json_parser_set_error@@Base>
   17ff8:	mov	r6, r0
   17ffc:	mov	r0, r6
   18000:	sub	sp, fp, #28
   18004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18008:	ldr	r0, [r5]
   1800c:	bl	1e73c <flatcc_builder_end_table@@Base>
   18010:	ldr	r1, [sp, #8]
   18014:	str	r0, [r1]
   18018:	cmp	r0, #0
   1801c:	bne	17ffc <main@@Base+0x4b24>
   18020:	b	17fe4 <main@@Base+0x4b0c>
   18024:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18028:	add	fp, sp, #28
   1802c:	sub	sp, sp, #28
   18030:	mov	r6, r3
   18034:	mov	r4, r2
   18038:	mov	sl, r1
   1803c:	mov	r5, r0
   18040:	mov	r0, #0
   18044:	str	r0, [r3]
   18048:	ldr	r0, [r5]
   1804c:	mov	r1, #3
   18050:	bl	1e01c <flatcc_builder_start_table@@Base>
   18054:	cmp	r0, #0
   18058:	beq	18080 <main@@Base+0x4ba8>
   1805c:	mov	r0, r5
   18060:	mov	r1, sl
   18064:	mov	r2, r4
   18068:	mov	r3, #33	; 0x21
   1806c:	bl	20800 <flatcc_json_parser_set_error@@Base>
   18070:	mov	sl, r0
   18074:	mov	r0, sl
   18078:	sub	sp, fp, #28
   1807c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18080:	str	r6, [sp, #4]
   18084:	add	r3, sp, #24
   18088:	mov	r0, r5
   1808c:	mov	r1, sl
   18090:	mov	r2, r4
   18094:	bl	15c28 <main@@Base+0x2750>
   18098:	mov	sl, r0
   1809c:	ldr	r0, [sp, #24]
   180a0:	cmp	r0, #0
   180a4:	beq	1835c <main@@Base+0x4e84>
   180a8:	movw	r9, #65535	; 0xffff
   180ac:	movt	r9, #26979	; 0x6963
   180b0:	add	r8, sp, #24
   180b4:	mov	r0, r5
   180b8:	mov	r1, sl
   180bc:	mov	r2, r4
   180c0:	bl	15cb8 <main@@Base+0x27e0>
   180c4:	mov	r6, r0
   180c8:	mov	r1, r4
   180cc:	bl	15d00 <main@@Base+0x2828>
   180d0:	cmp	r1, r9
   180d4:	bhi	18148 <main@@Base+0x4c70>
   180d8:	movw	r2, #30062	; 0x756e
   180dc:	movt	r2, #25455	; 0x636f
   180e0:	eor	r1, r1, r2
   180e4:	and	r0, r0, #-16777216	; 0xff000000
   180e8:	eor	r0, r0, #1946157056	; 0x74000000
   180ec:	orrs	r0, r0, r1
   180f0:	bne	18228 <main@@Base+0x4d50>
   180f4:	mov	r0, r5
   180f8:	mov	r1, r6
   180fc:	mov	r2, r4
   18100:	mov	r3, #5
   18104:	bl	15d04 <main@@Base+0x282c>
   18108:	mov	r7, r0
   1810c:	cmp	r6, r0
   18110:	add	sl, sp, #8
   18114:	beq	18234 <main@@Base+0x4d5c>
   18118:	mov	r0, #0
   1811c:	strh	r0, [sp, #8]
   18120:	mov	r0, r5
   18124:	mov	r1, r7
   18128:	mov	r2, r4
   1812c:	mov	r3, sl
   18130:	bl	1c288 <main@@Base+0x8db0>
   18134:	mov	r6, r0
   18138:	cmp	r7, r0
   1813c:	beq	18240 <main@@Base+0x4d68>
   18140:	mov	sl, r6
   18144:	b	1826c <main@@Base+0x4d94>
   18148:	bic	r0, r1, #255	; 0xff
   1814c:	movw	r2, #27648	; 0x6c00
   18150:	movt	r2, #30305	; 0x7661
   18154:	teq	r0, r2
   18158:	add	sl, sp, #8
   1815c:	bne	181b4 <main@@Base+0x4cdc>
   18160:	mov	r0, r5
   18164:	mov	r1, r6
   18168:	mov	r2, r4
   1816c:	mov	r3, #3
   18170:	bl	15d04 <main@@Base+0x282c>
   18174:	mov	r7, r0
   18178:	cmp	r6, r0
   1817c:	beq	18234 <main@@Base+0x4d5c>
   18180:	mov	r0, #0
   18184:	str	r0, [sp, #12]
   18188:	str	r0, [sp, #8]
   1818c:	mov	r0, r5
   18190:	mov	r1, r7
   18194:	mov	r2, r4
   18198:	mov	r3, sl
   1819c:	bl	186f8 <main@@Base+0x5220>
   181a0:	mov	r6, r0
   181a4:	cmp	r7, r0
   181a8:	beq	182ac <main@@Base+0x4dd4>
   181ac:	mov	sl, r6
   181b0:	b	182d8 <main@@Base+0x4e00>
   181b4:	bfc	r1, #0, #16
   181b8:	movw	r0, #0
   181bc:	movt	r0, #26980	; 0x6964
   181c0:	teq	r1, r0
   181c4:	bne	18228 <main@@Base+0x4d50>
   181c8:	mov	r0, r5
   181cc:	mov	r1, r6
   181d0:	mov	r2, r4
   181d4:	mov	r3, #2
   181d8:	bl	15d04 <main@@Base+0x282c>
   181dc:	mov	r1, r0
   181e0:	cmp	r6, r0
   181e4:	beq	18328 <main@@Base+0x4e50>
   181e8:	mov	r0, r5
   181ec:	mov	r2, r4
   181f0:	add	r3, sp, #20
   181f4:	bl	21f9c <flatcc_json_parser_build_string@@Base>
   181f8:	mov	sl, r0
   181fc:	ldr	r0, [sp, #20]
   18200:	cmp	r0, #0
   18204:	beq	1805c <main@@Base+0x4b84>
   18208:	ldr	r0, [r5]
   1820c:	mov	r1, #0
   18210:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   18214:	cmp	r0, #0
   18218:	beq	1805c <main@@Base+0x4b84>
   1821c:	ldr	r1, [sp, #20]
   18220:	str	r1, [r0]
   18224:	b	18338 <main@@Base+0x4e60>
   18228:	mov	r0, r5
   1822c:	mov	r1, r6
   18230:	b	1832c <main@@Base+0x4e54>
   18234:	mov	r0, r5
   18238:	mov	r1, r7
   1823c:	b	1832c <main@@Base+0x4e54>
   18240:	str	sl, [sp]
   18244:	mov	r0, r5
   18248:	mov	r1, r6
   1824c:	mov	r2, r4
   18250:	movw	r3, #29496	; 0x7338
   18254:	movt	r3, #3
   18258:	bl	1c318 <main@@Base+0x8e40>
   1825c:	mov	sl, r0
   18260:	cmp	r0, r6
   18264:	cmpne	sl, r4
   18268:	beq	1805c <main@@Base+0x4b84>
   1826c:	ldrh	r6, [sp, #8]
   18270:	cmp	r6, #0
   18274:	bne	18284 <main@@Base+0x4dac>
   18278:	ldrb	r0, [r5, #8]
   1827c:	tst	r0, #2
   18280:	beq	18338 <main@@Base+0x4e60>
   18284:	ldr	r0, [r5]
   18288:	mov	r1, #2
   1828c:	mov	r2, #2
   18290:	mov	r3, #2
   18294:	bl	1ee30 <flatcc_builder_table_add@@Base>
   18298:	cmp	r0, #0
   1829c:	beq	1805c <main@@Base+0x4b84>
   182a0:	mov	r1, r6
   182a4:	bl	1c478 <main@@Base+0x8fa0>
   182a8:	b	18338 <main@@Base+0x4e60>
   182ac:	str	sl, [sp]
   182b0:	mov	r0, r5
   182b4:	mov	r1, r6
   182b8:	mov	r2, r4
   182bc:	movw	r3, #29508	; 0x7344
   182c0:	movt	r3, #3
   182c4:	bl	1878c <main@@Base+0x52b4>
   182c8:	mov	sl, r0
   182cc:	cmp	r0, r6
   182d0:	cmpne	sl, r4
   182d4:	beq	1805c <main@@Base+0x4b84>
   182d8:	mov	r7, r9
   182dc:	ldr	r6, [sp, #8]
   182e0:	ldr	r9, [sp, #12]
   182e4:	orrs	r0, r6, r9
   182e8:	bne	182f8 <main@@Base+0x4e20>
   182ec:	ldrb	r0, [r5, #8]
   182f0:	tst	r0, #2
   182f4:	beq	18320 <main@@Base+0x4e48>
   182f8:	ldr	r0, [r5]
   182fc:	mov	r1, #1
   18300:	mov	r2, #8
   18304:	mov	r3, #8
   18308:	bl	1ee30 <flatcc_builder_table_add@@Base>
   1830c:	cmp	r0, #0
   18310:	beq	1805c <main@@Base+0x4b84>
   18314:	mov	r2, r6
   18318:	mov	r3, r9
   1831c:	bl	188f0 <main@@Base+0x5418>
   18320:	mov	r9, r7
   18324:	b	18338 <main@@Base+0x4e60>
   18328:	mov	r0, r5
   1832c:	mov	r2, r4
   18330:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   18334:	mov	sl, r0
   18338:	mov	r0, r5
   1833c:	mov	r1, sl
   18340:	mov	r2, r4
   18344:	mov	r3, r8
   18348:	bl	18ea8 <main@@Base+0x59d0>
   1834c:	mov	sl, r0
   18350:	ldr	r0, [sp, #24]
   18354:	cmp	r0, #0
   18358:	bne	180b4 <main@@Base+0x4bdc>
   1835c:	ldr	r0, [r5, #24]
   18360:	cmp	r0, #0
   18364:	bne	1805c <main@@Base+0x4b84>
   18368:	ldr	r0, [r5]
   1836c:	bl	1e73c <flatcc_builder_end_table@@Base>
   18370:	ldr	r1, [sp, #4]
   18374:	str	r0, [r1]
   18378:	cmp	r0, #0
   1837c:	bne	18074 <main@@Base+0x4b9c>
   18380:	b	1805c <main@@Base+0x4b84>
   18384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18388:	add	fp, sp, #28
   1838c:	sub	sp, sp, #36	; 0x24
   18390:	mov	r4, r3
   18394:	mov	r7, r2
   18398:	mov	r5, r0
   1839c:	mov	sl, #0
   183a0:	str	sl, [sp, #32]
   183a4:	ldr	r0, [fp, #8]
   183a8:	str	sl, [r0]
   183ac:	mov	r0, r5
   183b0:	bl	19974 <main@@Base+0x649c>
   183b4:	mov	r6, r0
   183b8:	cmp	r0, r7
   183bc:	beq	18488 <main@@Base+0x4fb0>
   183c0:	add	r0, r4, #4
   183c4:	add	r9, sp, #24
   183c8:	add	r8, sp, #20
   183cc:	str	r0, [sp, #8]
   183d0:	str	sl, [sp, #12]
   183d4:	mov	sl, r0
   183d8:	ldr	r4, [sl, #-4]
   183dc:	str	r9, [sp]
   183e0:	add	r0, sp, #16
   183e4:	str	r0, [sp, #4]
   183e8:	mov	r0, r5
   183ec:	mov	r1, r6
   183f0:	mov	r2, r7
   183f4:	mov	r3, r8
   183f8:	blx	r4
   183fc:	mov	r4, r0
   18400:	cmp	r0, r7
   18404:	beq	184a8 <main@@Base+0x4fd0>
   18408:	cmp	r4, r6
   1840c:	bne	18424 <main@@Base+0x4f4c>
   18410:	ldr	r0, [sl], #4
   18414:	cmp	r0, #0
   18418:	mov	r6, r4
   1841c:	bne	183d8 <main@@Base+0x4f00>
   18420:	b	18490 <main@@Base+0x4fb8>
   18424:	ldr	sl, [sp, #12]
   18428:	cmp	sl, #0
   1842c:	ldrne	r0, [r5, #12]
   18430:	cmpne	r0, #0
   18434:	bne	184bc <main@@Base+0x4fe4>
   18438:	add	r3, sp, #20
   1843c:	ldm	r3, {r1, r2, r3}
   18440:	add	r0, sp, #32
   18444:	str	r0, [sp]
   18448:	mov	r0, r4
   1844c:	bl	1c6c8 <main@@Base+0x91f0>
   18450:	cmp	r4, r7
   18454:	beq	184b4 <main@@Base+0x4fdc>
   18458:	add	sl, sl, #1
   1845c:	vldr	s0, [sp, #32]
   18460:	ldr	r0, [fp, #8]
   18464:	vldr	s2, [r0]
   18468:	vadd.f32	s0, s0, s2
   1846c:	vstr	s0, [r0]
   18470:	ldr	r0, [sp, #16]
   18474:	cmp	r0, #0
   18478:	mov	r6, r4
   1847c:	ldr	r0, [sp, #8]
   18480:	bne	183d0 <main@@Base+0x4ef8>
   18484:	b	184a8 <main@@Base+0x4fd0>
   18488:	mov	r4, r6
   1848c:	b	184a8 <main@@Base+0x4fd0>
   18490:	mov	r0, r5
   18494:	mov	r1, r4
   18498:	mov	r2, r7
   1849c:	mov	r3, #23
   184a0:	bl	20800 <flatcc_json_parser_set_error@@Base>
   184a4:	mov	r4, r0
   184a8:	mov	r0, r4
   184ac:	sub	sp, fp, #28
   184b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   184b4:	mov	r4, r7
   184b8:	b	184a8 <main@@Base+0x4fd0>
   184bc:	mov	r0, r5
   184c0:	mov	r1, r4
   184c4:	mov	r2, r7
   184c8:	mov	r3, #14
   184cc:	b	184a0 <main@@Base+0x4fc8>
   184d0:	push	{r4, sl, fp, lr}
   184d4:	add	fp, sp, #8
   184d8:	mov	r4, r0
   184dc:	bl	1c704 <main@@Base+0x922c>
   184e0:	vstr	s0, [r4]
   184e4:	pop	{r4, sl, fp, pc}
   184e8:	push	{r4, r5, r6, r7, fp, lr}
   184ec:	add	fp, sp, #16
   184f0:	sub	sp, sp, #24
   184f4:	mov	r7, r1
   184f8:	mov	r6, r0
   184fc:	mov	r0, #0
   18500:	str	r0, [sp, #20]
   18504:	str	r0, [sp, #16]
   18508:	str	r0, [sp, #12]
   1850c:	str	r0, [r3]
   18510:	cmp	r1, r2
   18514:	beq	1856c <main@@Base+0x5094>
   18518:	mov	r5, r3
   1851c:	mov	r4, r2
   18520:	add	r0, sp, #16
   18524:	str	r0, [sp]
   18528:	add	r3, sp, #12
   1852c:	mov	r0, r6
   18530:	mov	r1, r7
   18534:	bl	21abc <flatcc_json_parser_integer@@Base>
   18538:	mov	r1, r0
   1853c:	cmp	r0, r7
   18540:	beq	18568 <main@@Base+0x5090>
   18544:	ldr	r3, [sp, #12]
   18548:	ldr	r0, [sp, #16]
   1854c:	ldr	r2, [sp, #20]
   18550:	stm	sp, {r0, r2, r5}
   18554:	mov	r0, r6
   18558:	mov	r2, r4
   1855c:	bl	1c708 <main@@Base+0x9230>
   18560:	mov	r7, r0
   18564:	b	1856c <main@@Base+0x5094>
   18568:	mov	r7, r1
   1856c:	mov	r0, r7
   18570:	sub	sp, fp, #16
   18574:	pop	{r4, r5, r6, r7, fp, pc}
   18578:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1857c:	add	fp, sp, #28
   18580:	sub	sp, sp, #44	; 0x2c
   18584:	mov	r4, r3
   18588:	mov	r7, r2
   1858c:	mov	r5, r0
   18590:	mov	sl, #0
   18594:	str	sl, [fp, #-32]	; 0xffffffe0
   18598:	ldr	r0, [fp, #8]
   1859c:	str	sl, [r0]
   185a0:	mov	r0, r5
   185a4:	bl	19974 <main@@Base+0x649c>
   185a8:	mov	r6, r0
   185ac:	cmp	r0, r7
   185b0:	beq	18690 <main@@Base+0x51b8>
   185b4:	add	r0, r4, #4
   185b8:	add	r9, sp, #32
   185bc:	add	r8, sp, #28
   185c0:	str	r0, [sp, #16]
   185c4:	str	sl, [sp, #20]
   185c8:	mov	sl, r0
   185cc:	ldr	r4, [sl, #-4]
   185d0:	str	r9, [sp]
   185d4:	add	r0, sp, #24
   185d8:	str	r0, [sp, #4]
   185dc:	mov	r0, r5
   185e0:	mov	r1, r6
   185e4:	mov	r2, r7
   185e8:	mov	r3, r8
   185ec:	blx	r4
   185f0:	mov	r4, r0
   185f4:	cmp	r0, r7
   185f8:	beq	186b0 <main@@Base+0x51d8>
   185fc:	cmp	r4, r6
   18600:	bne	18618 <main@@Base+0x5140>
   18604:	ldr	r0, [sl], #4
   18608:	cmp	r0, #0
   1860c:	mov	r6, r4
   18610:	bne	185cc <main@@Base+0x50f4>
   18614:	b	18698 <main@@Base+0x51c0>
   18618:	ldr	sl, [sp, #20]
   1861c:	cmp	sl, #0
   18620:	ldrne	r0, [r5, #12]
   18624:	cmpne	r0, #0
   18628:	bne	186c4 <main@@Base+0x51ec>
   1862c:	ldr	r3, [sp, #28]
   18630:	ldr	r0, [sp, #32]
   18634:	ldr	r1, [sp, #36]	; 0x24
   18638:	stm	sp, {r0, r1}
   1863c:	sub	r0, fp, #32
   18640:	str	r0, [sp, #8]
   18644:	mov	r0, r5
   18648:	mov	r1, r4
   1864c:	mov	r2, r7
   18650:	bl	1c708 <main@@Base+0x9230>
   18654:	cmp	r0, r7
   18658:	beq	186bc <main@@Base+0x51e4>
   1865c:	add	sl, sl, #1
   18660:	ldr	r0, [fp, #8]
   18664:	mov	r2, r0
   18668:	ldr	r0, [r0]
   1866c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18670:	add	r0, r0, r1
   18674:	str	r0, [r2]
   18678:	ldr	r0, [sp, #24]
   1867c:	cmp	r0, #0
   18680:	mov	r6, r4
   18684:	ldr	r0, [sp, #16]
   18688:	bne	185c4 <main@@Base+0x50ec>
   1868c:	b	186b0 <main@@Base+0x51d8>
   18690:	mov	r4, r6
   18694:	b	186b0 <main@@Base+0x51d8>
   18698:	mov	r0, r5
   1869c:	mov	r1, r4
   186a0:	mov	r2, r7
   186a4:	mov	r3, #23
   186a8:	bl	20800 <flatcc_json_parser_set_error@@Base>
   186ac:	mov	r4, r0
   186b0:	mov	r0, r4
   186b4:	sub	sp, fp, #28
   186b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   186bc:	mov	r4, r7
   186c0:	b	186b0 <main@@Base+0x51d8>
   186c4:	mov	r0, r5
   186c8:	mov	r1, r4
   186cc:	mov	r2, r7
   186d0:	mov	r3, #14
   186d4:	b	186a8 <main@@Base+0x51d0>
   186d8:	push	{r4, r5, fp, lr}
   186dc:	add	fp, sp, #8
   186e0:	mov	r4, r1
   186e4:	mov	r5, r0
   186e8:	mov	r0, r1
   186ec:	bl	1c764 <main@@Base+0x928c>
   186f0:	str	r4, [r5]
   186f4:	pop	{r4, r5, fp, pc}
   186f8:	push	{r4, r5, r6, r7, fp, lr}
   186fc:	add	fp, sp, #16
   18700:	sub	sp, sp, #24
   18704:	mov	r7, r1
   18708:	mov	r6, r0
   1870c:	mov	r0, #0
   18710:	str	r0, [sp, #20]
   18714:	str	r0, [sp, #16]
   18718:	str	r0, [sp, #12]
   1871c:	str	r0, [r3]
   18720:	str	r0, [r3, #4]
   18724:	cmp	r1, r2
   18728:	beq	18780 <main@@Base+0x52a8>
   1872c:	mov	r5, r3
   18730:	mov	r4, r2
   18734:	add	r0, sp, #16
   18738:	str	r0, [sp]
   1873c:	add	r3, sp, #12
   18740:	mov	r0, r6
   18744:	mov	r1, r7
   18748:	bl	21abc <flatcc_json_parser_integer@@Base>
   1874c:	mov	r1, r0
   18750:	cmp	r0, r7
   18754:	beq	1877c <main@@Base+0x52a4>
   18758:	ldr	r3, [sp, #12]
   1875c:	ldr	r0, [sp, #16]
   18760:	ldr	r2, [sp, #20]
   18764:	stm	sp, {r0, r2, r5}
   18768:	mov	r0, r6
   1876c:	mov	r2, r4
   18770:	bl	1c768 <main@@Base+0x9290>
   18774:	mov	r7, r0
   18778:	b	18780 <main@@Base+0x52a8>
   1877c:	mov	r7, r1
   18780:	mov	r0, r7
   18784:	sub	sp, fp, #16
   18788:	pop	{r4, r5, r6, r7, fp, pc}
   1878c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18790:	add	fp, sp, #28
   18794:	sub	sp, sp, #44	; 0x2c
   18798:	mov	r4, r3
   1879c:	mov	r7, r2
   187a0:	mov	r5, r0
   187a4:	mov	r9, #0
   187a8:	str	r9, [sp, #36]	; 0x24
   187ac:	str	r9, [sp, #32]
   187b0:	ldr	r0, [fp, #8]
   187b4:	str	r9, [r0]
   187b8:	str	r9, [r0, #4]
   187bc:	mov	r0, r5
   187c0:	bl	19974 <main@@Base+0x649c>
   187c4:	mov	r6, r0
   187c8:	cmp	r0, r7
   187cc:	beq	188a8 <main@@Base+0x53d0>
   187d0:	add	sl, r4, #4
   187d4:	add	r8, sp, #20
   187d8:	str	sl, [sp, #12]
   187dc:	ldr	r4, [sl, #-4]
   187e0:	add	r0, sp, #24
   187e4:	str	r0, [sp]
   187e8:	add	r0, sp, #16
   187ec:	str	r0, [sp, #4]
   187f0:	mov	r0, r5
   187f4:	mov	r1, r6
   187f8:	mov	r2, r7
   187fc:	mov	r3, r8
   18800:	blx	r4
   18804:	mov	r4, r0
   18808:	cmp	r0, r7
   1880c:	beq	188c8 <main@@Base+0x53f0>
   18810:	cmp	r4, r6
   18814:	bne	1882c <main@@Base+0x5354>
   18818:	ldr	r0, [sl], #4
   1881c:	cmp	r0, #0
   18820:	mov	r6, r4
   18824:	bne	187dc <main@@Base+0x5304>
   18828:	b	188b0 <main@@Base+0x53d8>
   1882c:	cmp	r9, #0
   18830:	ldrne	r0, [r5, #12]
   18834:	cmpne	r0, #0
   18838:	bne	188dc <main@@Base+0x5404>
   1883c:	ldr	r3, [sp, #20]
   18840:	ldr	r0, [sp, #24]
   18844:	ldr	r1, [sp, #28]
   18848:	stm	sp, {r0, r1}
   1884c:	add	r0, sp, #32
   18850:	str	r0, [sp, #8]
   18854:	mov	r0, r5
   18858:	mov	r1, r4
   1885c:	mov	r2, r7
   18860:	bl	1c768 <main@@Base+0x9290>
   18864:	cmp	r0, r7
   18868:	beq	188d4 <main@@Base+0x53fc>
   1886c:	add	r9, r9, #1
   18870:	ldr	r0, [fp, #8]
   18874:	mov	r6, r0
   18878:	ldrd	r0, [r0]
   1887c:	ldr	r2, [sp, #32]
   18880:	ldr	r3, [sp, #36]	; 0x24
   18884:	adds	r0, r0, r2
   18888:	adc	r1, r1, r3
   1888c:	strd	r0, [r6]
   18890:	ldr	r0, [sp, #16]
   18894:	cmp	r0, #0
   18898:	mov	r6, r4
   1889c:	ldr	sl, [sp, #12]
   188a0:	bne	187dc <main@@Base+0x5304>
   188a4:	b	188c8 <main@@Base+0x53f0>
   188a8:	mov	r4, r6
   188ac:	b	188c8 <main@@Base+0x53f0>
   188b0:	mov	r0, r5
   188b4:	mov	r1, r4
   188b8:	mov	r2, r7
   188bc:	mov	r3, #23
   188c0:	bl	20800 <flatcc_json_parser_set_error@@Base>
   188c4:	mov	r4, r0
   188c8:	mov	r0, r4
   188cc:	sub	sp, fp, #28
   188d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   188d4:	mov	r4, r7
   188d8:	b	188c8 <main@@Base+0x53f0>
   188dc:	mov	r0, r5
   188e0:	mov	r1, r4
   188e4:	mov	r2, r7
   188e8:	mov	r3, #14
   188ec:	b	188c0 <main@@Base+0x53e8>
   188f0:	push	{r4, r6, r7, sl, fp, lr}
   188f4:	add	fp, sp, #16
   188f8:	mov	r1, r3
   188fc:	mov	r6, r2
   18900:	mov	r4, r0
   18904:	mov	r0, r2
   18908:	bl	1c7c0 <main@@Base+0x92e8>
   1890c:	mov	r7, r1
   18910:	strd	r6, [r4]
   18914:	pop	{r4, r6, r7, sl, fp, pc}
   18918:	push	{r4, r5, r6, r7, fp, lr}
   1891c:	add	fp, sp, #16
   18920:	sub	sp, sp, #24
   18924:	mov	r7, r1
   18928:	mov	r6, r0
   1892c:	mov	r0, #0
   18930:	str	r0, [sp, #20]
   18934:	str	r0, [sp, #16]
   18938:	str	r0, [sp, #12]
   1893c:	str	r0, [r3]
   18940:	cmp	r1, r2
   18944:	beq	1899c <main@@Base+0x54c4>
   18948:	mov	r5, r3
   1894c:	mov	r4, r2
   18950:	add	r0, sp, #16
   18954:	str	r0, [sp]
   18958:	add	r3, sp, #12
   1895c:	mov	r0, r6
   18960:	mov	r1, r7
   18964:	bl	21abc <flatcc_json_parser_integer@@Base>
   18968:	mov	r1, r0
   1896c:	cmp	r0, r7
   18970:	beq	18998 <main@@Base+0x54c0>
   18974:	ldr	r3, [sp, #12]
   18978:	ldr	r0, [sp, #16]
   1897c:	ldr	r2, [sp, #20]
   18980:	stm	sp, {r0, r2, r5}
   18984:	mov	r0, r6
   18988:	mov	r2, r4
   1898c:	bl	1c7c4 <main@@Base+0x92ec>
   18990:	mov	r7, r0
   18994:	b	1899c <main@@Base+0x54c4>
   18998:	mov	r7, r1
   1899c:	mov	r0, r7
   189a0:	sub	sp, fp, #16
   189a4:	pop	{r4, r5, r6, r7, fp, pc}
   189a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189ac:	add	fp, sp, #28
   189b0:	sub	sp, sp, #44	; 0x2c
   189b4:	mov	r4, r3
   189b8:	mov	r7, r2
   189bc:	mov	r5, r0
   189c0:	mov	sl, #0
   189c4:	str	sl, [fp, #-32]	; 0xffffffe0
   189c8:	ldr	r0, [fp, #8]
   189cc:	str	sl, [r0]
   189d0:	mov	r0, r5
   189d4:	bl	19974 <main@@Base+0x649c>
   189d8:	mov	r6, r0
   189dc:	cmp	r0, r7
   189e0:	beq	18ac0 <main@@Base+0x55e8>
   189e4:	add	r0, r4, #4
   189e8:	add	r9, sp, #32
   189ec:	add	r8, sp, #28
   189f0:	str	r0, [sp, #16]
   189f4:	str	sl, [sp, #20]
   189f8:	mov	sl, r0
   189fc:	ldr	r4, [sl, #-4]
   18a00:	str	r9, [sp]
   18a04:	add	r0, sp, #24
   18a08:	str	r0, [sp, #4]
   18a0c:	mov	r0, r5
   18a10:	mov	r1, r6
   18a14:	mov	r2, r7
   18a18:	mov	r3, r8
   18a1c:	blx	r4
   18a20:	mov	r4, r0
   18a24:	cmp	r0, r7
   18a28:	beq	18ae0 <main@@Base+0x5608>
   18a2c:	cmp	r4, r6
   18a30:	bne	18a48 <main@@Base+0x5570>
   18a34:	ldr	r0, [sl], #4
   18a38:	cmp	r0, #0
   18a3c:	mov	r6, r4
   18a40:	bne	189fc <main@@Base+0x5524>
   18a44:	b	18ac8 <main@@Base+0x55f0>
   18a48:	ldr	sl, [sp, #20]
   18a4c:	cmp	sl, #0
   18a50:	ldrne	r0, [r5, #12]
   18a54:	cmpne	r0, #0
   18a58:	bne	18af4 <main@@Base+0x561c>
   18a5c:	ldr	r3, [sp, #28]
   18a60:	ldr	r0, [sp, #32]
   18a64:	ldr	r1, [sp, #36]	; 0x24
   18a68:	stm	sp, {r0, r1}
   18a6c:	sub	r0, fp, #32
   18a70:	str	r0, [sp, #8]
   18a74:	mov	r0, r5
   18a78:	mov	r1, r4
   18a7c:	mov	r2, r7
   18a80:	bl	1c7c4 <main@@Base+0x92ec>
   18a84:	cmp	r0, r7
   18a88:	beq	18aec <main@@Base+0x5614>
   18a8c:	add	sl, sl, #1
   18a90:	ldr	r0, [fp, #8]
   18a94:	mov	r2, r0
   18a98:	ldr	r0, [r0]
   18a9c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18aa0:	add	r0, r0, r1
   18aa4:	str	r0, [r2]
   18aa8:	ldr	r0, [sp, #24]
   18aac:	cmp	r0, #0
   18ab0:	mov	r6, r4
   18ab4:	ldr	r0, [sp, #16]
   18ab8:	bne	189f4 <main@@Base+0x551c>
   18abc:	b	18ae0 <main@@Base+0x5608>
   18ac0:	mov	r4, r6
   18ac4:	b	18ae0 <main@@Base+0x5608>
   18ac8:	mov	r0, r5
   18acc:	mov	r1, r4
   18ad0:	mov	r2, r7
   18ad4:	mov	r3, #23
   18ad8:	bl	20800 <flatcc_json_parser_set_error@@Base>
   18adc:	mov	r4, r0
   18ae0:	mov	r0, r4
   18ae4:	sub	sp, fp, #28
   18ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18aec:	mov	r4, r7
   18af0:	b	18ae0 <main@@Base+0x5608>
   18af4:	mov	r0, r5
   18af8:	mov	r1, r4
   18afc:	mov	r2, r7
   18b00:	mov	r3, #14
   18b04:	b	18ad8 <main@@Base+0x5600>
   18b08:	push	{r4, r5, fp, lr}
   18b0c:	add	fp, sp, #8
   18b10:	mov	r4, r1
   18b14:	mov	r5, r0
   18b18:	mov	r0, r1
   18b1c:	bl	1c7fc <main@@Base+0x9324>
   18b20:	str	r4, [r5]
   18b24:	pop	{r4, r5, fp, pc}
   18b28:	push	{r4, r5, r6, r7, fp, lr}
   18b2c:	add	fp, sp, #16
   18b30:	sub	sp, sp, #24
   18b34:	mov	r7, r1
   18b38:	mov	r6, r0
   18b3c:	mov	r0, #0
   18b40:	str	r0, [sp, #20]
   18b44:	str	r0, [sp, #16]
   18b48:	str	r0, [sp, #12]
   18b4c:	str	r0, [r3]
   18b50:	str	r0, [r3, #4]
   18b54:	cmp	r1, r2
   18b58:	beq	18bb0 <main@@Base+0x56d8>
   18b5c:	mov	r5, r3
   18b60:	mov	r4, r2
   18b64:	add	r0, sp, #16
   18b68:	str	r0, [sp]
   18b6c:	add	r3, sp, #12
   18b70:	mov	r0, r6
   18b74:	mov	r1, r7
   18b78:	bl	21abc <flatcc_json_parser_integer@@Base>
   18b7c:	mov	r1, r0
   18b80:	cmp	r0, r7
   18b84:	beq	18bac <main@@Base+0x56d4>
   18b88:	ldr	r3, [sp, #12]
   18b8c:	ldr	r0, [sp, #16]
   18b90:	ldr	r2, [sp, #20]
   18b94:	stm	sp, {r0, r2, r5}
   18b98:	mov	r0, r6
   18b9c:	mov	r2, r4
   18ba0:	bl	1c800 <main@@Base+0x9328>
   18ba4:	mov	r7, r0
   18ba8:	b	18bb0 <main@@Base+0x56d8>
   18bac:	mov	r7, r1
   18bb0:	mov	r0, r7
   18bb4:	sub	sp, fp, #16
   18bb8:	pop	{r4, r5, r6, r7, fp, pc}
   18bbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bc0:	add	fp, sp, #28
   18bc4:	sub	sp, sp, #44	; 0x2c
   18bc8:	mov	r4, r3
   18bcc:	mov	r7, r2
   18bd0:	mov	r5, r0
   18bd4:	mov	r9, #0
   18bd8:	str	r9, [sp, #36]	; 0x24
   18bdc:	str	r9, [sp, #32]
   18be0:	ldr	r0, [fp, #8]
   18be4:	str	r9, [r0]
   18be8:	str	r9, [r0, #4]
   18bec:	mov	r0, r5
   18bf0:	bl	19974 <main@@Base+0x649c>
   18bf4:	mov	r6, r0
   18bf8:	cmp	r0, r7
   18bfc:	beq	18cd8 <main@@Base+0x5800>
   18c00:	add	sl, r4, #4
   18c04:	add	r8, sp, #20
   18c08:	str	sl, [sp, #12]
   18c0c:	ldr	r4, [sl, #-4]
   18c10:	add	r0, sp, #24
   18c14:	str	r0, [sp]
   18c18:	add	r0, sp, #16
   18c1c:	str	r0, [sp, #4]
   18c20:	mov	r0, r5
   18c24:	mov	r1, r6
   18c28:	mov	r2, r7
   18c2c:	mov	r3, r8
   18c30:	blx	r4
   18c34:	mov	r4, r0
   18c38:	cmp	r0, r7
   18c3c:	beq	18cf8 <main@@Base+0x5820>
   18c40:	cmp	r4, r6
   18c44:	bne	18c5c <main@@Base+0x5784>
   18c48:	ldr	r0, [sl], #4
   18c4c:	cmp	r0, #0
   18c50:	mov	r6, r4
   18c54:	bne	18c0c <main@@Base+0x5734>
   18c58:	b	18ce0 <main@@Base+0x5808>
   18c5c:	cmp	r9, #0
   18c60:	ldrne	r0, [r5, #12]
   18c64:	cmpne	r0, #0
   18c68:	bne	18d0c <main@@Base+0x5834>
   18c6c:	ldr	r3, [sp, #20]
   18c70:	ldr	r0, [sp, #24]
   18c74:	ldr	r1, [sp, #28]
   18c78:	stm	sp, {r0, r1}
   18c7c:	add	r0, sp, #32
   18c80:	str	r0, [sp, #8]
   18c84:	mov	r0, r5
   18c88:	mov	r1, r4
   18c8c:	mov	r2, r7
   18c90:	bl	1c800 <main@@Base+0x9328>
   18c94:	cmp	r0, r7
   18c98:	beq	18d04 <main@@Base+0x582c>
   18c9c:	add	r9, r9, #1
   18ca0:	ldr	r0, [fp, #8]
   18ca4:	mov	r6, r0
   18ca8:	ldrd	r0, [r0]
   18cac:	ldr	r2, [sp, #32]
   18cb0:	ldr	r3, [sp, #36]	; 0x24
   18cb4:	adds	r0, r0, r2
   18cb8:	adc	r1, r1, r3
   18cbc:	strd	r0, [r6]
   18cc0:	ldr	r0, [sp, #16]
   18cc4:	cmp	r0, #0
   18cc8:	mov	r6, r4
   18ccc:	ldr	sl, [sp, #12]
   18cd0:	bne	18c0c <main@@Base+0x5734>
   18cd4:	b	18cf8 <main@@Base+0x5820>
   18cd8:	mov	r4, r6
   18cdc:	b	18cf8 <main@@Base+0x5820>
   18ce0:	mov	r0, r5
   18ce4:	mov	r1, r4
   18ce8:	mov	r2, r7
   18cec:	mov	r3, #23
   18cf0:	bl	20800 <flatcc_json_parser_set_error@@Base>
   18cf4:	mov	r4, r0
   18cf8:	mov	r0, r4
   18cfc:	sub	sp, fp, #28
   18d00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18d04:	mov	r4, r7
   18d08:	b	18cf8 <main@@Base+0x5820>
   18d0c:	mov	r0, r5
   18d10:	mov	r1, r4
   18d14:	mov	r2, r7
   18d18:	mov	r3, #14
   18d1c:	b	18cf0 <main@@Base+0x5818>
   18d20:	push	{r4, r6, r7, sl, fp, lr}
   18d24:	add	fp, sp, #16
   18d28:	mov	r1, r3
   18d2c:	mov	r6, r2
   18d30:	mov	r4, r0
   18d34:	mov	r0, r2
   18d38:	bl	1c824 <main@@Base+0x934c>
   18d3c:	mov	r7, r1
   18d40:	strd	r6, [r4]
   18d44:	pop	{r4, r6, r7, sl, fp, pc}
   18d48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18d4c:	add	fp, sp, #28
   18d50:	sub	sp, sp, #44	; 0x2c
   18d54:	mov	r4, r3
   18d58:	mov	r7, r2
   18d5c:	mov	r5, r0
   18d60:	mov	r9, #0
   18d64:	str	r9, [sp, #36]	; 0x24
   18d68:	str	r9, [sp, #32]
   18d6c:	ldr	r0, [fp, #8]
   18d70:	str	r9, [r0]
   18d74:	str	r9, [r0, #4]
   18d78:	mov	r0, r5
   18d7c:	bl	19974 <main@@Base+0x649c>
   18d80:	mov	r6, r0
   18d84:	cmp	r0, r7
   18d88:	beq	18e48 <main@@Base+0x5970>
   18d8c:	add	sl, r4, #4
   18d90:	add	r8, sp, #20
   18d94:	str	sl, [sp, #12]
   18d98:	ldr	r4, [sl, #-4]
   18d9c:	add	r0, sp, #24
   18da0:	str	r0, [sp]
   18da4:	add	r0, sp, #16
   18da8:	str	r0, [sp, #4]
   18dac:	mov	r0, r5
   18db0:	mov	r1, r6
   18db4:	mov	r2, r7
   18db8:	mov	r3, r8
   18dbc:	blx	r4
   18dc0:	mov	r4, r0
   18dc4:	cmp	r0, r7
   18dc8:	beq	18e68 <main@@Base+0x5990>
   18dcc:	cmp	r4, r6
   18dd0:	bne	18de8 <main@@Base+0x5910>
   18dd4:	ldr	r0, [sl], #4
   18dd8:	cmp	r0, #0
   18ddc:	mov	r6, r4
   18de0:	bne	18d98 <main@@Base+0x58c0>
   18de4:	b	18e50 <main@@Base+0x5978>
   18de8:	cmp	r9, #0
   18dec:	ldrne	r0, [r5, #12]
   18df0:	cmpne	r0, #0
   18df4:	bne	18e7c <main@@Base+0x59a4>
   18df8:	add	r3, sp, #20
   18dfc:	ldm	r3, {r1, r2, r3}
   18e00:	add	r0, sp, #32
   18e04:	str	r0, [sp]
   18e08:	mov	r0, r4
   18e0c:	bl	1c828 <main@@Base+0x9350>
   18e10:	cmp	r4, r7
   18e14:	beq	18e74 <main@@Base+0x599c>
   18e18:	add	r9, r9, #1
   18e1c:	vldr	d16, [sp, #32]
   18e20:	ldr	r0, [fp, #8]
   18e24:	vldr	d17, [r0]
   18e28:	vadd.f64	d16, d16, d17
   18e2c:	vstr	d16, [r0]
   18e30:	ldr	r0, [sp, #16]
   18e34:	cmp	r0, #0
   18e38:	mov	r6, r4
   18e3c:	ldr	sl, [sp, #12]
   18e40:	bne	18d98 <main@@Base+0x58c0>
   18e44:	b	18e68 <main@@Base+0x5990>
   18e48:	mov	r4, r6
   18e4c:	b	18e68 <main@@Base+0x5990>
   18e50:	mov	r0, r5
   18e54:	mov	r1, r4
   18e58:	mov	r2, r7
   18e5c:	mov	r3, #23
   18e60:	bl	20800 <flatcc_json_parser_set_error@@Base>
   18e64:	mov	r4, r0
   18e68:	mov	r0, r4
   18e6c:	sub	sp, fp, #28
   18e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e74:	mov	r4, r7
   18e78:	b	18e68 <main@@Base+0x5990>
   18e7c:	mov	r0, r5
   18e80:	mov	r1, r4
   18e84:	mov	r2, r7
   18e88:	mov	r3, #14
   18e8c:	b	18e60 <main@@Base+0x5988>
   18e90:	push	{r4, sl, fp, lr}
   18e94:	add	fp, sp, #8
   18e98:	mov	r4, r0
   18e9c:	bl	1c868 <main@@Base+0x9390>
   18ea0:	vstr	d0, [r4]
   18ea4:	pop	{r4, sl, fp, pc}
   18ea8:	push	{r4, r5, r6, sl, fp, lr}
   18eac:	add	fp, sp, #16
   18eb0:	mov	r6, r3
   18eb4:	mov	r4, r2
   18eb8:	mov	r5, r0
   18ebc:	bl	18f68 <main@@Base+0x5a90>
   18ec0:	mov	r1, r0
   18ec4:	cmp	r0, r4
   18ec8:	beq	18f0c <main@@Base+0x5a34>
   18ecc:	ldrb	r0, [r1]
   18ed0:	cmp	r0, #44	; 0x2c
   18ed4:	bne	18f14 <main@@Base+0x5a3c>
   18ed8:	add	r1, r1, #1
   18edc:	mov	r0, r5
   18ee0:	mov	r2, r4
   18ee4:	bl	18f68 <main@@Base+0x5a90>
   18ee8:	mov	r1, r0
   18eec:	cmp	r0, r4
   18ef0:	beq	18f3c <main@@Base+0x5a64>
   18ef4:	ldrb	r0, [r1]
   18ef8:	cmp	r0, #125	; 0x7d
   18efc:	bne	18f58 <main@@Base+0x5a80>
   18f00:	mov	r0, #0
   18f04:	str	r0, [r6]
   18f08:	b	18f28 <main@@Base+0x5a50>
   18f0c:	mov	r0, #0
   18f10:	b	18f5c <main@@Base+0x5a84>
   18f14:	mov	r0, #0
   18f18:	str	r0, [r6]
   18f1c:	ldrb	r0, [r1]
   18f20:	cmp	r0, #125	; 0x7d
   18f24:	bne	18f44 <main@@Base+0x5a6c>
   18f28:	add	r1, r1, #1
   18f2c:	mov	r0, r5
   18f30:	mov	r2, r4
   18f34:	pop	{r4, r5, r6, sl, fp, lr}
   18f38:	b	18f68 <main@@Base+0x5a90>
   18f3c:	mov	r0, #0
   18f40:	str	r0, [r6]
   18f44:	mov	r0, r5
   18f48:	mov	r2, r4
   18f4c:	mov	r3, #10
   18f50:	pop	{r4, r5, r6, sl, fp, lr}
   18f54:	b	20800 <flatcc_json_parser_set_error@@Base>
   18f58:	mov	r0, #1
   18f5c:	str	r0, [r6]
   18f60:	mov	r0, r1
   18f64:	pop	{r4, r5, r6, sl, fp, pc}
   18f68:	sub	r3, r2, r1
   18f6c:	cmp	r3, #2
   18f70:	blt	18f9c <main@@Base+0x5ac4>
   18f74:	ldrb	r3, [r1]
   18f78:	cmp	r3, #32
   18f7c:	movhi	r0, r1
   18f80:	bxhi	lr
   18f84:	bne	18f9c <main@@Base+0x5ac4>
   18f88:	mov	ip, r1
   18f8c:	ldrb	r3, [ip, #1]!
   18f90:	cmp	r3, #32
   18f94:	movhi	r0, ip
   18f98:	bxhi	lr
   18f9c:	b	2087c <flatcc_json_parser_space_ext@@Base>
   18fa0:	mov	ip, r0
   18fa4:	sub	r0, r1, r0
   18fa8:	cmp	r0, #8
   18fac:	movcs	r0, #8
   18fb0:	and	r0, r0, #15
   18fb4:	sub	r3, r0, #1
   18fb8:	mov	r1, #0
   18fbc:	mov	r0, #0
   18fc0:	cmp	r3, #7
   18fc4:	bxhi	lr
   18fc8:	add	r2, pc, #0
   18fcc:	ldr	pc, [r2, r3, lsl #2]
   18fd0:	andeq	r9, r1, r4, lsr #32
   18fd4:	andeq	r9, r1, ip, lsl r0
   18fd8:	andeq	r9, r1, r4, lsl r0
   18fdc:	andeq	r9, r1, ip
   18fe0:	andeq	r9, r1, r4
   18fe4:	strdeq	r8, [r1], -ip
   18fe8:	strdeq	r8, [r1], -r4
   18fec:	strdeq	r8, [r1], -r0
   18ff0:	ldrb	r0, [ip, #7]
   18ff4:	ldrb	r2, [ip, #6]
   18ff8:	orr	r0, r0, r2, lsl #8
   18ffc:	ldrb	r2, [ip, #5]
   19000:	orr	r0, r0, r2, lsl #16
   19004:	ldrb	r2, [ip, #4]
   19008:	orr	r0, r0, r2, lsl #24
   1900c:	ldrb	r2, [ip, #3]
   19010:	orr	r1, r2, r1
   19014:	ldrb	r2, [ip, #2]
   19018:	orr	r1, r1, r2, lsl #8
   1901c:	ldrb	r2, [ip, #1]
   19020:	orr	r1, r1, r2, lsl #16
   19024:	ldrb	r2, [ip]
   19028:	orr	r1, r1, r2, lsl #24
   1902c:	bx	lr
   19030:	sub	r1, r1, r0
   19034:	cmp	r1, r2
   19038:	bxle	lr
   1903c:	mov	r1, r0
   19040:	ldrb	r2, [r1, r2]!
   19044:	cmp	r2, #46	; 0x2e
   19048:	addeq	r0, r1, #1
   1904c:	bx	lr
   19050:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19054:	add	fp, sp, #24
   19058:	sub	sp, sp, #8
   1905c:	mov	r8, r3
   19060:	mov	r6, r2
   19064:	mov	r5, r1
   19068:	mov	r7, r0
   1906c:	mov	r0, r1
   19070:	mov	r1, r2
   19074:	bl	15d00 <main@@Base+0x2828>
   19078:	movw	r2, #20577	; 0x5061
   1907c:	movt	r2, #18798	; 0x496e
   19080:	eor	r2, r1, r2
   19084:	movw	r3, #28276	; 0x6e74
   19088:	movt	r3, #29285	; 0x7265
   1908c:	eor	r0, r0, r3
   19090:	orrs	r0, r0, r2
   19094:	ldr	r9, [fp, #12]
   19098:	bne	1910c <main@@Base+0x5c34>
   1909c:	add	r0, r5, #8
   190a0:	mov	r1, r6
   190a4:	bl	15d00 <main@@Base+0x2828>
   190a8:	movw	r2, #28005	; 0x6d65
   190ac:	movt	r2, #20065	; 0x4e61
   190b0:	eor	r1, r1, r2
   190b4:	movw	r2, #24931	; 0x6163
   190b8:	movt	r2, #29552	; 0x7370
   190bc:	eor	r0, r0, r2
   190c0:	orrs	r0, r0, r1
   190c4:	bne	1915c <main@@Base+0x5c84>
   190c8:	add	r4, r5, #16
   190cc:	mov	r0, r4
   190d0:	mov	r1, r6
   190d4:	bl	15d00 <main@@Base+0x2828>
   190d8:	and	r0, r1, #-16777216	; 0xff000000
   190dc:	teq	r0, #1694498816	; 0x65000000
   190e0:	bne	1915c <main@@Base+0x5c84>
   190e4:	str	r9, [sp]
   190e8:	mov	r9, #1
   190ec:	mov	r0, r7
   190f0:	mov	r1, r4
   190f4:	mov	r2, r6
   190f8:	mov	r3, #1
   190fc:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19100:	cmp	r0, r4
   19104:	bne	19140 <main@@Base+0x5c68>
   19108:	b	1915c <main@@Base+0x5c84>
   1910c:	movw	r0, #20037	; 0x4e45
   19110:	movt	r0, #20047	; 0x4e4f
   19114:	teq	r1, r0
   19118:	bne	1915c <main@@Base+0x5c84>
   1911c:	str	r9, [sp]
   19120:	mov	r0, r7
   19124:	mov	r1, r5
   19128:	mov	r2, r6
   1912c:	mov	r3, #4
   19130:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19134:	cmp	r0, r5
   19138:	beq	1915c <main@@Base+0x5c84>
   1913c:	mov	r9, #0
   19140:	mov	r1, #0
   19144:	mov	r5, r0
   19148:	ldr	r0, [fp, #8]
   1914c:	str	r9, [r0]
   19150:	str	r1, [r0, #4]
   19154:	mov	r0, #0
   19158:	str	r0, [r8]
   1915c:	mov	r0, r5
   19160:	sub	sp, fp, #24
   19164:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19168:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1916c:	add	fp, sp, #24
   19170:	sub	sp, sp, #8
   19174:	mov	r9, r3
   19178:	mov	r6, r2
   1917c:	mov	r5, r1
   19180:	mov	r7, r0
   19184:	mov	r0, r1
   19188:	mov	r1, r2
   1918c:	bl	15d00 <main@@Base+0x2828>
   19190:	ldr	r2, [fp, #12]
   19194:	ldr	r8, [fp, #8]
   19198:	movw	r3, #30769	; 0x7831
   1919c:	movt	r3, #26725	; 0x6865
   191a0:	cmp	r1, r3
   191a4:	bhi	191dc <main@@Base+0x5d04>
   191a8:	teq	r1, r3
   191ac:	bne	19284 <main@@Base+0x5dac>
   191b0:	str	r2, [sp]
   191b4:	mov	r0, r7
   191b8:	mov	r1, r5
   191bc:	mov	r2, r6
   191c0:	mov	r3, #4
   191c4:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   191c8:	cmp	r0, r5
   191cc:	beq	19284 <main@@Base+0x5dac>
   191d0:	mov	r1, #0
   191d4:	mov	r2, #3
   191d8:	b	19274 <main@@Base+0x5d9c>
   191dc:	movw	r3, #26725	; 0x6865
   191e0:	eor	r3, r3, r1, lsr #16
   191e4:	lsr	r0, r0, #16
   191e8:	orr	r0, r0, r1, lsl #16
   191ec:	movw	r4, #25959	; 0x6567
   191f0:	movt	r4, #30830	; 0x786e
   191f4:	eor	r0, r0, r4
   191f8:	orrs	r0, r0, r3
   191fc:	bne	19238 <main@@Base+0x5d60>
   19200:	str	r2, [sp]
   19204:	mov	r0, r7
   19208:	mov	r1, r5
   1920c:	mov	r2, r6
   19210:	mov	r3, #6
   19214:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19218:	cmp	r0, r5
   1921c:	beq	19284 <main@@Base+0x5dac>
   19220:	mvn	r1, #0
   19224:	mvn	r2, #1
   19228:	str	r2, [r8]
   1922c:	str	r1, [r8, #4]
   19230:	mov	r1, #1
   19234:	b	1927c <main@@Base+0x5da4>
   19238:	movw	r0, #30770	; 0x7832
   1923c:	movt	r0, #26725	; 0x6865
   19240:	teq	r1, r0
   19244:	bne	19284 <main@@Base+0x5dac>
   19248:	str	r2, [sp]
   1924c:	mov	r0, r7
   19250:	mov	r1, r5
   19254:	mov	r2, r6
   19258:	mov	r3, #4
   1925c:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19260:	cmp	r0, r5
   19264:	beq	19284 <main@@Base+0x5dac>
   19268:	mov	r1, #0
   1926c:	movw	r2, #48815	; 0xbeaf
   19270:	movt	r2, #32431	; 0x7eaf
   19274:	str	r2, [r8]
   19278:	str	r1, [r8, #4]
   1927c:	str	r1, [r9]
   19280:	mov	r5, r0
   19284:	mov	r0, r5
   19288:	sub	sp, fp, #24
   1928c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19290:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19294:	add	fp, sp, #24
   19298:	sub	sp, sp, #8
   1929c:	mov	r9, r3
   192a0:	mov	r6, r2
   192a4:	mov	r5, r1
   192a8:	mov	r7, r0
   192ac:	mov	r0, r1
   192b0:	mov	r1, r2
   192b4:	bl	15d00 <main@@Base+0x2828>
   192b8:	ldr	ip, [fp, #12]
   192bc:	ldr	r8, [fp, #8]
   192c0:	movw	r3, #29745	; 0x7431
   192c4:	movt	r3, #26990	; 0x696e
   192c8:	cmp	r1, r3
   192cc:	bhi	19304 <main@@Base+0x5e2c>
   192d0:	teq	r1, r3
   192d4:	bne	193f8 <main@@Base+0x5f20>
   192d8:	str	ip, [sp]
   192dc:	mov	r0, r7
   192e0:	mov	r1, r5
   192e4:	mov	r2, r6
   192e8:	mov	r3, #4
   192ec:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   192f0:	cmp	r0, r5
   192f4:	beq	193f8 <main@@Base+0x5f20>
   192f8:	mov	r1, #0
   192fc:	mov	r2, #2
   19300:	b	19358 <main@@Base+0x5e80>
   19304:	movw	r4, #29806	; 0x746e
   19308:	movt	r4, #26990	; 0x696e
   1930c:	movw	r3, #0
   19310:	movt	r3, #25959	; 0x6567
   19314:	subs	r2, r0, r3
   19318:	sbcs	r2, r1, r4
   1931c:	bcs	19364 <main@@Base+0x5e8c>
   19320:	movw	r0, #29746	; 0x7432
   19324:	movt	r0, #26990	; 0x696e
   19328:	teq	r1, r0
   1932c:	bne	193f8 <main@@Base+0x5f20>
   19330:	str	ip, [sp]
   19334:	mov	r0, r7
   19338:	mov	r1, r5
   1933c:	mov	r2, r6
   19340:	mov	r3, #4
   19344:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19348:	cmp	r0, r5
   1934c:	beq	193f8 <main@@Base+0x5f20>
   19350:	mov	r1, #0
   19354:	mov	r2, #42	; 0x2a
   19358:	str	r2, [r8]
   1935c:	str	r1, [r8, #4]
   19360:	b	193f0 <main@@Base+0x5f18>
   19364:	eor	r1, r1, r4
   19368:	add	r2, r3, #12800	; 0x3200
   1936c:	bic	r4, r0, #255	; 0xff
   19370:	eor	r2, r4, r2
   19374:	orrs	r2, r2, r1
   19378:	bne	193ac <main@@Base+0x5ed4>
   1937c:	str	ip, [sp]
   19380:	mov	r0, r7
   19384:	mov	r1, r5
   19388:	mov	r2, r6
   1938c:	mov	r3, #7
   19390:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19394:	cmp	r0, r5
   19398:	beq	193f8 <main@@Base+0x5f20>
   1939c:	mvn	r1, #0
   193a0:	mvn	r2, #1
   193a4:	add	r2, r2, #1
   193a8:	b	193e4 <main@@Base+0x5f0c>
   193ac:	bfc	r0, #0, #16
   193b0:	eor	r0, r0, r3
   193b4:	orrs	r0, r0, r1
   193b8:	bne	193f8 <main@@Base+0x5f20>
   193bc:	str	ip, [sp]
   193c0:	mov	r0, r7
   193c4:	mov	r1, r5
   193c8:	mov	r2, r6
   193cc:	mov	r3, #6
   193d0:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   193d4:	cmp	r0, r5
   193d8:	beq	193f8 <main@@Base+0x5f20>
   193dc:	mvn	r1, #0
   193e0:	mvn	r2, #1
   193e4:	str	r2, [r8]
   193e8:	str	r1, [r8, #4]
   193ec:	mov	r1, #1
   193f0:	str	r1, [r9]
   193f4:	mov	r5, r0
   193f8:	mov	r0, r5
   193fc:	sub	sp, fp, #24
   19400:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19404:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19408:	add	fp, sp, #24
   1940c:	sub	sp, sp, #8
   19410:	mov	r4, r3
   19414:	mov	r6, r2
   19418:	mov	r5, r1
   1941c:	mov	r7, r0
   19420:	mov	r0, r1
   19424:	mov	r1, r2
   19428:	bl	15d00 <main@@Base+0x2828>
   1942c:	ldr	r0, [fp, #12]
   19430:	ldr	r8, [fp, #8]
   19434:	movw	r2, #26417	; 0x6731
   19438:	movt	r2, #28261	; 0x6e65
   1943c:	cmp	r1, r2
   19440:	bhi	19478 <main@@Base+0x5fa0>
   19444:	teq	r1, r2
   19448:	bne	19508 <main@@Base+0x6030>
   1944c:	str	r0, [sp]
   19450:	mov	r0, r7
   19454:	mov	r1, r5
   19458:	mov	r2, r6
   1945c:	mov	r3, #4
   19460:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19464:	cmp	r0, r5
   19468:	beq	19508 <main@@Base+0x6030>
   1946c:	mvn	r1, #0
   19470:	mvn	r2, #11
   19474:	b	194f4 <main@@Base+0x601c>
   19478:	movw	r2, #26418	; 0x6732
   1947c:	movt	r2, #28261	; 0x6e65
   19480:	teq	r1, r2
   19484:	beq	194c8 <main@@Base+0x5ff0>
   19488:	movw	r2, #26419	; 0x6733
   1948c:	movt	r2, #28261	; 0x6e65
   19490:	teq	r1, r2
   19494:	bne	19508 <main@@Base+0x6030>
   19498:	str	r0, [sp]
   1949c:	mov	r0, r7
   194a0:	mov	r1, r5
   194a4:	mov	r2, r6
   194a8:	mov	r3, #4
   194ac:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   194b0:	cmp	r0, r5
   194b4:	beq	19508 <main@@Base+0x6030>
   194b8:	mvn	r1, #0
   194bc:	mvn	r2, #11
   194c0:	add	r2, r2, #2
   194c4:	b	194f4 <main@@Base+0x601c>
   194c8:	str	r0, [sp]
   194cc:	mov	r0, r7
   194d0:	mov	r1, r5
   194d4:	mov	r2, r6
   194d8:	mov	r3, #4
   194dc:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   194e0:	cmp	r0, r5
   194e4:	beq	19508 <main@@Base+0x6030>
   194e8:	mvn	r1, #0
   194ec:	mvn	r2, #11
   194f0:	add	r2, r2, #1
   194f4:	str	r2, [r8]
   194f8:	str	r1, [r8, #4]
   194fc:	mov	r1, #1
   19500:	str	r1, [r4]
   19504:	mov	r5, r0
   19508:	mov	r0, r5
   1950c:	sub	sp, fp, #24
   19510:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19514:	push	{r4, r5, r6, r7, fp, lr}
   19518:	add	fp, sp, #16
   1951c:	sub	sp, sp, #8
   19520:	mov	r4, r3
   19524:	mov	r6, r2
   19528:	mov	r5, r1
   1952c:	mov	r7, r0
   19530:	mov	r0, r1
   19534:	mov	r1, r2
   19538:	bl	15d00 <main@@Base+0x2828>
   1953c:	and	r0, r1, #-16777216	; 0xff000000
   19540:	teq	r0, #2013265920	; 0x78000000
   19544:	bne	19584 <main@@Base+0x60ac>
   19548:	ldr	r0, [fp, #12]
   1954c:	str	r0, [sp]
   19550:	mov	r0, r7
   19554:	mov	r1, r5
   19558:	mov	r2, r6
   1955c:	mov	r3, #1
   19560:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19564:	cmp	r0, r5
   19568:	beq	19584 <main@@Base+0x60ac>
   1956c:	ldr	r1, [fp, #8]
   19570:	mov	r2, #0
   19574:	str	r2, [r1]
   19578:	str	r2, [r1, #4]
   1957c:	str	r2, [r4]
   19580:	mov	r5, r0
   19584:	mov	r0, r5
   19588:	sub	sp, fp, #16
   1958c:	pop	{r4, r5, r6, r7, fp, pc}
   19590:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19594:	add	fp, sp, #28
   19598:	sub	sp, sp, #4
   1959c:	mov	r9, r3
   195a0:	mov	r6, r2
   195a4:	mov	r5, r1
   195a8:	mov	sl, r0
   195ac:	mov	r0, r1
   195b0:	mov	r1, r2
   195b4:	bl	15d00 <main@@Base+0x2828>
   195b8:	ldr	lr, [fp, #12]
   195bc:	ldr	r8, [fp, #8]
   195c0:	movw	r2, #20036	; 0x4e44
   195c4:	movt	r2, #20047	; 0x4e4f
   195c8:	cmp	r1, r2
   195cc:	bhi	19634 <main@@Base+0x615c>
   195d0:	and	r2, r0, #-16777216	; 0xff000000
   195d4:	movw	r4, #28523	; 0x6f6b
   195d8:	movt	r4, #17007	; 0x426f
   195dc:	movw	r3, #28160	; 0x6e00
   195e0:	movt	r3, #18017	; 0x4661
   195e4:	subs	r7, r0, r3
   195e8:	sbcs	r7, r1, r4
   195ec:	bcs	19688 <main@@Base+0x61b0>
   195f0:	movw	r0, #27756	; 0x6c6c
   195f4:	movt	r0, #16997	; 0x4265
   195f8:	eor	r0, r1, r0
   195fc:	eor	r1, r2, #1694498816	; 0x65000000
   19600:	orrs	r0, r1, r0
   19604:	bne	197c4 <main@@Base+0x62ec>
   19608:	str	lr, [sp]
   1960c:	mov	r0, sl
   19610:	mov	r1, r5
   19614:	mov	r2, r6
   19618:	mov	r3, #5
   1961c:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19620:	cmp	r0, r5
   19624:	beq	197c4 <main@@Base+0x62ec>
   19628:	mov	r1, #0
   1962c:	mov	r2, #9
   19630:	b	197b4 <main@@Base+0x62dc>
   19634:	movw	r3, #26725	; 0x6865
   19638:	movt	r3, #20340	; 0x4f74
   1963c:	mvn	r2, #-1912602624	; 0x8e000000
   19640:	subs	r2, r2, r0
   19644:	sbcs	r2, r3, r1
   19648:	bcc	196cc <main@@Base+0x61f4>
   1964c:	movw	r0, #20037	; 0x4e45
   19650:	movt	r0, #20047	; 0x4e4f
   19654:	teq	r1, r0
   19658:	bne	197c4 <main@@Base+0x62ec>
   1965c:	str	lr, [sp]
   19660:	mov	r0, sl
   19664:	mov	r1, r5
   19668:	mov	r2, r6
   1966c:	mov	r3, #4
   19670:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19674:	cmp	r0, r5
   19678:	beq	197c4 <main@@Base+0x62ec>
   1967c:	mov	r1, #0
   19680:	str	r1, [r8]
   19684:	b	197b8 <main@@Base+0x62e0>
   19688:	movw	r7, #19553	; 0x4c61
   1968c:	movt	r7, #19829	; 0x4d75
   19690:	eor	r7, r1, r7
   19694:	eor	r2, r2, #1845493760	; 0x6e000000
   19698:	orrs	r2, r2, r7
   1969c:	bne	19728 <main@@Base+0x6250>
   196a0:	str	lr, [sp]
   196a4:	mov	r0, sl
   196a8:	mov	r1, r5
   196ac:	mov	r2, r6
   196b0:	mov	r3, #5
   196b4:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   196b8:	cmp	r0, r5
   196bc:	beq	197c4 <main@@Base+0x62ec>
   196c0:	mov	r1, #0
   196c4:	mov	r2, #2
   196c8:	b	197b4 <main@@Base+0x62dc>
   196cc:	movw	ip, #28789	; 0x7075
   196d0:	movt	ip, #21089	; 0x5261
   196d4:	movw	r4, #25964	; 0x656c
   196d8:	movt	r4, #28282	; 0x6e7a
   196dc:	subs	r2, r0, r4
   196e0:	sbcs	r2, r1, ip
   196e4:	bcs	19768 <main@@Base+0x6290>
   196e8:	eor	r1, r1, r3
   196ec:	and	r0, r0, #-16777216	; 0xff000000
   196f0:	eor	r0, r0, #1912602624	; 0x72000000
   196f4:	orrs	r0, r0, r1
   196f8:	bne	197c4 <main@@Base+0x62ec>
   196fc:	str	lr, [sp]
   19700:	mov	r0, sl
   19704:	mov	r1, r5
   19708:	mov	r2, r6
   1970c:	mov	r3, #5
   19710:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19714:	cmp	r0, r5
   19718:	beq	197c4 <main@@Base+0x62ec>
   1971c:	mov	r1, #0
   19720:	mov	r2, #11
   19724:	b	197b4 <main@@Base+0x62dc>
   19728:	eor	r1, r1, r4
   1972c:	bic	r0, r0, #255	; 0xff
   19730:	eor	r0, r0, r3
   19734:	orrs	r0, r0, r1
   19738:	bne	197c4 <main@@Base+0x62ec>
   1973c:	str	lr, [sp]
   19740:	mov	r0, sl
   19744:	mov	r1, r5
   19748:	mov	r2, r6
   1974c:	mov	r3, #7
   19750:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19754:	cmp	r0, r5
   19758:	beq	197c4 <main@@Base+0x62ec>
   1975c:	mov	r1, #0
   19760:	mov	r2, #10
   19764:	b	197b4 <main@@Base+0x62dc>
   19768:	movw	r2, #21870	; 0x556e
   1976c:	eor	r2, r2, r1, lsr #16
   19770:	lsr	r3, r0, #16
   19774:	orr	r3, r3, r1, lsl #16
   19778:	movw	r7, #25956	; 0x6564
   1977c:	movt	r7, #30067	; 0x7573
   19780:	eor	r3, r3, r7
   19784:	orrs	r2, r3, r2
   19788:	bne	197d0 <main@@Base+0x62f8>
   1978c:	str	lr, [sp]
   19790:	mov	r0, sl
   19794:	mov	r1, r5
   19798:	mov	r2, r6
   1979c:	mov	r3, #6
   197a0:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   197a4:	cmp	r0, r5
   197a8:	beq	197c4 <main@@Base+0x62ec>
   197ac:	mov	r1, #0
   197b0:	mov	r2, #255	; 0xff
   197b4:	str	r2, [r8]
   197b8:	str	r1, [r8, #4]
   197bc:	str	r1, [r9]
   197c0:	mov	r5, r0
   197c4:	mov	r0, r5
   197c8:	sub	sp, fp, #28
   197cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   197d0:	eor	r0, r0, r4
   197d4:	eor	r1, r1, ip
   197d8:	orrs	r0, r0, r1
   197dc:	bne	197c4 <main@@Base+0x62ec>
   197e0:	str	lr, [sp]
   197e4:	mov	r4, #8
   197e8:	mov	r0, sl
   197ec:	mov	r1, r5
   197f0:	mov	r2, r6
   197f4:	mov	r3, #8
   197f8:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   197fc:	cmp	r0, r5
   19800:	beq	197c4 <main@@Base+0x62ec>
   19804:	mov	r5, #0
   19808:	strd	r4, [r8]
   1980c:	str	r5, [r9]
   19810:	b	197c0 <main@@Base+0x62e8>
   19814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19818:	add	fp, sp, #28
   1981c:	sub	sp, sp, #4
   19820:	mov	r8, r3
   19824:	mov	r6, r2
   19828:	mov	r5, r1
   1982c:	mov	r9, r0
   19830:	mov	r0, r1
   19834:	mov	r1, r2
   19838:	bl	15d00 <main@@Base+0x2828>
   1983c:	mov	r7, r0
   19840:	mov	r4, r1
   19844:	bic	r0, r1, #255	; 0xff
   19848:	ldr	sl, [fp, #12]
   1984c:	movw	r1, #28416	; 0x6f00
   19850:	movt	r1, #18031	; 0x466f
   19854:	teq	r0, r1
   19858:	mov	r0, r5
   1985c:	bne	1988c <main@@Base+0x63b4>
   19860:	str	sl, [sp]
   19864:	mov	r0, r9
   19868:	mov	r1, r5
   1986c:	mov	r2, r6
   19870:	mov	r3, #3
   19874:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   19878:	cmp	r0, r5
   1987c:	beq	1988c <main@@Base+0x63b4>
   19880:	mov	r3, #0
   19884:	mov	r2, #17
   19888:	b	198f8 <main@@Base+0x6420>
   1988c:	movw	r1, #25942	; 0x6556
   19890:	movt	r1, #30052	; 0x7564
   19894:	eor	r1, r7, r1
   19898:	movw	r2, #25452	; 0x636c
   1989c:	movt	r2, #18798	; 0x496e
   198a0:	eor	r2, r4, r2
   198a4:	orrs	r1, r1, r2
   198a8:	bne	1990c <main@@Base+0x6434>
   198ac:	add	r4, r0, #8
   198b0:	mov	r0, r4
   198b4:	mov	r1, r6
   198b8:	bl	15d00 <main@@Base+0x2828>
   198bc:	bfc	r1, #0, #16
   198c0:	movw	r0, #0
   198c4:	movt	r0, #24940	; 0x616c
   198c8:	teq	r1, r0
   198cc:	bne	1990c <main@@Base+0x6434>
   198d0:	str	sl, [sp]
   198d4:	mov	r0, r9
   198d8:	mov	r1, r4
   198dc:	mov	r2, r6
   198e0:	mov	r3, #2
   198e4:	bl	20e2c <flatcc_json_parser_match_constant@@Base>
   198e8:	cmp	r0, r4
   198ec:	beq	1990c <main@@Base+0x6434>
   198f0:	mov	r2, #0
   198f4:	mov	r3, #0
   198f8:	mov	r5, r0
   198fc:	ldr	r0, [fp, #8]
   19900:	strd	r2, [r0]
   19904:	mov	r0, #0
   19908:	str	r0, [r8]
   1990c:	mov	r0, r5
   19910:	sub	sp, fp, #28
   19914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19918:	push	{r4, sl, fp, lr}
   1991c:	add	fp, sp, #8
   19920:	ldr	r4, [fp, #12]
   19924:	ldr	ip, [fp, #8]
   19928:	ldr	lr, [fp, #16]
   1992c:	cmp	r3, #0
   19930:	beq	1994c <main@@Base+0x6474>
   19934:	subs	r3, ip, #129	; 0x81
   19938:	sbcs	r3, r4, #0
   1993c:	bcc	19964 <main@@Base+0x648c>
   19940:	mov	r3, #8
   19944:	pop	{r4, sl, fp, lr}
   19948:	b	20800 <flatcc_json_parser_set_error@@Base>
   1994c:	subs	r3, ip, #128	; 0x80
   19950:	sbcs	r3, r4, #0
   19954:	bcc	19968 <main@@Base+0x6490>
   19958:	mov	r3, #7
   1995c:	pop	{r4, sl, fp, lr}
   19960:	b	20800 <flatcc_json_parser_set_error@@Base>
   19964:	rsb	ip, ip, #0
   19968:	strb	ip, [lr]
   1996c:	mov	r0, r1
   19970:	pop	{r4, sl, fp, pc}
   19974:	push	{r4, r5, fp, lr}
   19978:	add	fp, sp, #8
   1997c:	mov	r4, r2
   19980:	mov	r5, r0
   19984:	bl	15cb8 <main@@Base+0x27e0>
   19988:	mov	r1, r0
   1998c:	ldr	r0, [r5, #12]
   19990:	cmp	r0, #0
   19994:	movne	r0, r1
   19998:	popne	{r4, r5, fp, pc}
   1999c:	mov	r0, r5
   199a0:	mov	r2, r4
   199a4:	pop	{r4, r5, fp, lr}
   199a8:	b	18f68 <main@@Base+0x5a90>
   199ac:	bx	lr
   199b0:	push	{fp, lr}
   199b4:	mov	fp, sp
   199b8:	cmp	r3, #0
   199bc:	beq	199cc <main@@Base+0x64f4>
   199c0:	mov	r3, #8
   199c4:	pop	{fp, lr}
   199c8:	b	20800 <flatcc_json_parser_set_error@@Base>
   199cc:	ldr	ip, [fp, #12]
   199d0:	ldr	lr, [fp, #8]
   199d4:	subs	r3, lr, #256	; 0x100
   199d8:	sbcs	r3, ip, #0
   199dc:	ldrcc	r0, [fp, #16]
   199e0:	strbcc	lr, [r0]
   199e4:	movcc	r0, r1
   199e8:	popcc	{fp, pc}
   199ec:	mov	r3, #7
   199f0:	pop	{fp, lr}
   199f4:	b	20800 <flatcc_json_parser_set_error@@Base>
   199f8:	bx	lr
   199fc:	push	{r4, sl, fp, lr}
   19a00:	add	fp, sp, #8
   19a04:	ldr	r4, [fp, #12]
   19a08:	ldr	ip, [fp, #8]
   19a0c:	ldr	lr, [fp, #16]
   19a10:	cmp	r3, #0
   19a14:	beq	19a34 <main@@Base+0x655c>
   19a18:	movw	r3, #32769	; 0x8001
   19a1c:	subs	r3, ip, r3
   19a20:	sbcs	r3, r4, #0
   19a24:	bcc	19a4c <main@@Base+0x6574>
   19a28:	mov	r3, #8
   19a2c:	pop	{r4, sl, fp, lr}
   19a30:	b	20800 <flatcc_json_parser_set_error@@Base>
   19a34:	subs	r3, ip, #32768	; 0x8000
   19a38:	sbcs	r3, r4, #0
   19a3c:	bcc	19a50 <main@@Base+0x6578>
   19a40:	mov	r3, #7
   19a44:	pop	{r4, sl, fp, lr}
   19a48:	b	20800 <flatcc_json_parser_set_error@@Base>
   19a4c:	rsb	ip, ip, #0
   19a50:	strh	ip, [lr]
   19a54:	mov	r0, r1
   19a58:	pop	{r4, sl, fp, pc}
   19a5c:	bx	lr
   19a60:	sub	r3, r2, r1
   19a64:	cmp	r3, #4
   19a68:	blt	19a84 <main@@Base+0x65ac>
   19a6c:	ldr	ip, [r1]
   19a70:	movw	r3, #30062	; 0x756e
   19a74:	movt	r3, #27756	; 0x6c6c
   19a78:	cmp	ip, r3
   19a7c:	addeq	r0, r1, #4
   19a80:	bxeq	lr
   19a84:	mov	r3, #26
   19a88:	b	20800 <flatcc_json_parser_set_error@@Base>
   19a8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a90:	add	fp, sp, #28
   19a94:	sub	sp, sp, #20
   19a98:	mov	r5, r3
   19a9c:	mov	r4, r2
   19aa0:	mov	r8, r1
   19aa4:	mov	r9, r0
   19aa8:	mov	r0, #0
   19aac:	str	r0, [r3]
   19ab0:	ldr	r0, [r9]
   19ab4:	mov	r1, #4
   19ab8:	bl	1e01c <flatcc_builder_start_table@@Base>
   19abc:	cmp	r0, #0
   19ac0:	beq	19ae8 <main@@Base+0x6610>
   19ac4:	mov	r0, r9
   19ac8:	mov	r1, r8
   19acc:	mov	r2, r4
   19ad0:	mov	r3, #33	; 0x21
   19ad4:	bl	20800 <flatcc_json_parser_set_error@@Base>
   19ad8:	mov	r8, r0
   19adc:	mov	r0, r8
   19ae0:	sub	sp, fp, #28
   19ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ae8:	add	r3, sp, #16
   19aec:	mov	r0, r9
   19af0:	mov	r1, r8
   19af4:	mov	r2, r4
   19af8:	bl	15c28 <main@@Base+0x2750>
   19afc:	mov	r8, r0
   19b00:	ldr	r0, [sp, #16]
   19b04:	cmp	r0, #0
   19b08:	str	r5, [sp, #8]
   19b0c:	beq	19eb0 <main@@Base+0x69d8>
   19b10:	add	sl, sp, #13
   19b14:	add	r7, sp, #12
   19b18:	mov	r0, r9
   19b1c:	mov	r1, r8
   19b20:	mov	r2, r4
   19b24:	bl	15cb8 <main@@Base+0x27e0>
   19b28:	mov	r5, r0
   19b2c:	mov	r1, r4
   19b30:	bl	15d00 <main@@Base+0x2828>
   19b34:	mov	r6, r1
   19b38:	lsr	r1, r0, #16
   19b3c:	orr	r1, r1, r6, lsl #16
   19b40:	movw	r2, #29234	; 0x7232
   19b44:	movt	r2, #27759	; 0x6c6f
   19b48:	eor	r1, r1, r2
   19b4c:	movw	r2, #25455	; 0x636f
   19b50:	eor	r2, r2, r6, lsr #16
   19b54:	orrs	r1, r1, r2
   19b58:	bne	19bb0 <main@@Base+0x66d8>
   19b5c:	mov	r0, r9
   19b60:	mov	r1, r5
   19b64:	mov	r2, r4
   19b68:	mov	r3, #6
   19b6c:	bl	15d04 <main@@Base+0x282c>
   19b70:	mov	r7, r0
   19b74:	cmp	r5, r0
   19b78:	add	r5, sp, #15
   19b7c:	beq	19c20 <main@@Base+0x6748>
   19b80:	mov	r0, #0
   19b84:	strb	r0, [sp, #15]
   19b88:	mov	r0, r9
   19b8c:	mov	r1, r7
   19b90:	mov	r2, r4
   19b94:	mov	r3, r5
   19b98:	bl	166f0 <main@@Base+0x3218>
   19b9c:	mov	r6, r0
   19ba0:	cmp	r7, r0
   19ba4:	beq	19d18 <main@@Base+0x6840>
   19ba8:	mov	r8, r6
   19bac:	b	19d44 <main@@Base+0x686c>
   19bb0:	movw	r1, #27759	; 0x6c6f
   19bb4:	movt	r1, #25455	; 0x636f
   19bb8:	eor	r1, r6, r1
   19bbc:	and	r0, r0, #-16777216	; 0xff000000
   19bc0:	eor	r0, r0, #1912602624	; 0x72000000
   19bc4:	orrs	r0, r0, r1
   19bc8:	bne	19c28 <main@@Base+0x6750>
   19bcc:	mov	r0, r9
   19bd0:	mov	r1, r5
   19bd4:	mov	r2, r4
   19bd8:	mov	r3, #5
   19bdc:	bl	15d04 <main@@Base+0x282c>
   19be0:	mov	r7, r0
   19be4:	cmp	r5, r0
   19be8:	beq	19c20 <main@@Base+0x6748>
   19bec:	mov	r0, #0
   19bf0:	strb	r0, [sp, #14]
   19bf4:	mov	r0, r9
   19bf8:	mov	r1, r7
   19bfc:	mov	r2, r4
   19c00:	add	r5, sp, #14
   19c04:	mov	r3, r5
   19c08:	bl	166f0 <main@@Base+0x3218>
   19c0c:	mov	r6, r0
   19c10:	cmp	r7, r0
   19c14:	beq	19d68 <main@@Base+0x6890>
   19c18:	mov	r8, r6
   19c1c:	b	19d94 <main@@Base+0x68bc>
   19c20:	mov	r5, r7
   19c24:	add	r7, sp, #12
   19c28:	bic	r0, r6, #255	; 0xff
   19c2c:	movw	r1, #12800	; 0x3200
   19c30:	movt	r1, #30051	; 0x7563
   19c34:	teq	r0, r1
   19c38:	bne	19c8c <main@@Base+0x67b4>
   19c3c:	mov	r0, r9
   19c40:	mov	r1, r5
   19c44:	mov	r2, r4
   19c48:	mov	r3, #3
   19c4c:	bl	15d04 <main@@Base+0x282c>
   19c50:	mov	r6, r0
   19c54:	cmp	r5, r0
   19c58:	beq	19cf4 <main@@Base+0x681c>
   19c5c:	mov	r0, #0
   19c60:	strb	r0, [sp, #13]
   19c64:	mov	r0, r9
   19c68:	mov	r1, r6
   19c6c:	mov	r2, r4
   19c70:	mov	r3, sl
   19c74:	bl	16990 <main@@Base+0x34b8>
   19c78:	mov	r7, r0
   19c7c:	cmp	r6, r0
   19c80:	beq	19dd4 <main@@Base+0x68fc>
   19c84:	mov	r8, r7
   19c88:	b	19e00 <main@@Base+0x6928>
   19c8c:	bfc	r6, #0, #16
   19c90:	movw	r0, #0
   19c94:	movt	r0, #30051	; 0x7563
   19c98:	teq	r6, r0
   19c9c:	bne	19d00 <main@@Base+0x6828>
   19ca0:	mov	r0, r9
   19ca4:	mov	r1, r5
   19ca8:	mov	r2, r4
   19cac:	mov	r3, #2
   19cb0:	bl	15d04 <main@@Base+0x282c>
   19cb4:	mov	r6, r0
   19cb8:	cmp	r5, r0
   19cbc:	beq	19cf4 <main@@Base+0x681c>
   19cc0:	mov	r0, #0
   19cc4:	strb	r0, [sp, #12]
   19cc8:	mov	r0, r9
   19ccc:	mov	r1, r6
   19cd0:	mov	r2, r4
   19cd4:	mov	r3, r7
   19cd8:	bl	16990 <main@@Base+0x34b8>
   19cdc:	mov	r1, r7
   19ce0:	mov	r7, r0
   19ce4:	cmp	r6, r0
   19ce8:	beq	19e24 <main@@Base+0x694c>
   19cec:	mov	r8, r7
   19cf0:	b	19e50 <main@@Base+0x6978>
   19cf4:	mov	r0, r9
   19cf8:	mov	r1, r6
   19cfc:	b	19d08 <main@@Base+0x6830>
   19d00:	mov	r0, r9
   19d04:	mov	r1, r5
   19d08:	mov	r2, r4
   19d0c:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   19d10:	mov	r8, r0
   19d14:	b	19e8c <main@@Base+0x69b4>
   19d18:	str	r5, [sp]
   19d1c:	mov	r0, r9
   19d20:	mov	r1, r6
   19d24:	mov	r2, r4
   19d28:	movw	r3, #29164	; 0x71ec
   19d2c:	movt	r3, #3
   19d30:	bl	16780 <main@@Base+0x32a8>
   19d34:	mov	r8, r0
   19d38:	cmp	r0, r6
   19d3c:	cmpne	r8, r4
   19d40:	beq	19ac4 <main@@Base+0x65ec>
   19d44:	ldrb	r5, [sp, #15]
   19d48:	cmp	r5, #2
   19d4c:	add	r7, sp, #12
   19d50:	ldrbeq	r0, [r9, #8]
   19d54:	tsteq	r0, #2
   19d58:	beq	19e8c <main@@Base+0x69b4>
   19d5c:	ldr	r0, [r9]
   19d60:	mov	r1, #1
   19d64:	b	19db4 <main@@Base+0x68dc>
   19d68:	str	r5, [sp]
   19d6c:	mov	r0, r9
   19d70:	mov	r1, r6
   19d74:	mov	r2, r4
   19d78:	movw	r3, #29180	; 0x71fc
   19d7c:	movt	r3, #3
   19d80:	bl	16780 <main@@Base+0x32a8>
   19d84:	mov	r8, r0
   19d88:	cmp	r0, r6
   19d8c:	cmpne	r8, r4
   19d90:	beq	19ac4 <main@@Base+0x65ec>
   19d94:	ldrb	r5, [sp, #14]
   19d98:	cmp	r5, #2
   19d9c:	add	r7, sp, #12
   19da0:	ldrbeq	r0, [r9, #8]
   19da4:	tsteq	r0, #2
   19da8:	beq	19e8c <main@@Base+0x69b4>
   19dac:	ldr	r0, [r9]
   19db0:	mov	r1, #0
   19db4:	mov	r2, #1
   19db8:	mov	r3, #1
   19dbc:	bl	1ee30 <flatcc_builder_table_add@@Base>
   19dc0:	cmp	r0, #0
   19dc4:	beq	19ac4 <main@@Base+0x65ec>
   19dc8:	sxtb	r1, r5
   19dcc:	bl	168e0 <main@@Base+0x3408>
   19dd0:	b	19e8c <main@@Base+0x69b4>
   19dd4:	str	sl, [sp]
   19dd8:	mov	r0, r9
   19ddc:	mov	r1, r7
   19de0:	mov	r2, r4
   19de4:	movw	r3, #29196	; 0x720c
   19de8:	movt	r3, #3
   19dec:	bl	16a20 <main@@Base+0x3548>
   19df0:	mov	r8, r0
   19df4:	cmp	r0, r7
   19df8:	cmpne	r8, r4
   19dfc:	beq	19ac4 <main@@Base+0x65ec>
   19e00:	ldrb	r6, [sp, #13]
   19e04:	cmp	r6, #2
   19e08:	add	r7, sp, #12
   19e0c:	ldrbeq	r0, [r9, #8]
   19e10:	tsteq	r0, #2
   19e14:	beq	19e8c <main@@Base+0x69b4>
   19e18:	ldr	r0, [r9]
   19e1c:	mov	r1, #3
   19e20:	b	19e70 <main@@Base+0x6998>
   19e24:	str	r1, [sp]
   19e28:	mov	r0, r9
   19e2c:	mov	r1, r7
   19e30:	mov	r2, r4
   19e34:	movw	r3, #29208	; 0x7218
   19e38:	movt	r3, #3
   19e3c:	bl	16a20 <main@@Base+0x3548>
   19e40:	mov	r8, r0
   19e44:	cmp	r0, r7
   19e48:	cmpne	r8, r4
   19e4c:	beq	19ac4 <main@@Base+0x65ec>
   19e50:	ldrb	r6, [sp, #12]
   19e54:	cmp	r6, #2
   19e58:	add	r7, sp, #12
   19e5c:	ldrbeq	r0, [r9, #8]
   19e60:	tsteq	r0, #2
   19e64:	beq	19e8c <main@@Base+0x69b4>
   19e68:	ldr	r0, [r9]
   19e6c:	mov	r1, #2
   19e70:	mov	r2, #1
   19e74:	mov	r3, #1
   19e78:	bl	1ee30 <flatcc_builder_table_add@@Base>
   19e7c:	cmp	r0, #0
   19e80:	beq	19ac4 <main@@Base+0x65ec>
   19e84:	mov	r1, r6
   19e88:	bl	16b80 <main@@Base+0x36a8>
   19e8c:	mov	r0, r9
   19e90:	mov	r1, r8
   19e94:	mov	r2, r4
   19e98:	add	r3, sp, #16
   19e9c:	bl	18ea8 <main@@Base+0x59d0>
   19ea0:	mov	r8, r0
   19ea4:	ldr	r0, [sp, #16]
   19ea8:	cmp	r0, #0
   19eac:	bne	19b18 <main@@Base+0x6640>
   19eb0:	ldr	r0, [r9, #24]
   19eb4:	cmp	r0, #0
   19eb8:	bne	19ac4 <main@@Base+0x65ec>
   19ebc:	ldr	r0, [r9]
   19ec0:	bl	1e73c <flatcc_builder_end_table@@Base>
   19ec4:	ldr	r1, [sp, #8]
   19ec8:	str	r0, [r1]
   19ecc:	cmp	r0, #0
   19ed0:	bne	19adc <main@@Base+0x6604>
   19ed4:	b	19ac4 <main@@Base+0x65ec>
   19ed8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19edc:	add	fp, sp, #24
   19ee0:	sub	sp, sp, #8
   19ee4:	mov	r8, r3
   19ee8:	mov	r4, r2
   19eec:	mov	r7, r1
   19ef0:	mov	r5, r0
   19ef4:	mov	r0, #0
   19ef8:	str	r0, [r3]
   19efc:	ldr	r0, [r5]
   19f00:	mov	r1, #0
   19f04:	bl	1e01c <flatcc_builder_start_table@@Base>
   19f08:	cmp	r0, #0
   19f0c:	bne	19f9c <main@@Base+0x6ac4>
   19f10:	add	r3, sp, #4
   19f14:	mov	r0, r5
   19f18:	mov	r1, r7
   19f1c:	mov	r2, r4
   19f20:	bl	15c28 <main@@Base+0x2750>
   19f24:	mov	r7, r0
   19f28:	ldr	r0, [sp, #4]
   19f2c:	cmp	r0, #0
   19f30:	beq	19f7c <main@@Base+0x6aa4>
   19f34:	add	r6, sp, #4
   19f38:	mov	r0, r5
   19f3c:	mov	r1, r7
   19f40:	mov	r2, r4
   19f44:	bl	15cb8 <main@@Base+0x27e0>
   19f48:	mov	r1, r0
   19f4c:	mov	r0, r5
   19f50:	mov	r2, r4
   19f54:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   19f58:	mov	r1, r0
   19f5c:	mov	r0, r5
   19f60:	mov	r2, r4
   19f64:	mov	r3, r6
   19f68:	bl	18ea8 <main@@Base+0x59d0>
   19f6c:	mov	r7, r0
   19f70:	ldr	r0, [sp, #4]
   19f74:	cmp	r0, #0
   19f78:	bne	19f38 <main@@Base+0x6a60>
   19f7c:	ldr	r0, [r5, #24]
   19f80:	cmp	r0, #0
   19f84:	bne	19f9c <main@@Base+0x6ac4>
   19f88:	ldr	r0, [r5]
   19f8c:	bl	1e73c <flatcc_builder_end_table@@Base>
   19f90:	str	r0, [r8]
   19f94:	cmp	r0, #0
   19f98:	bne	19fb4 <main@@Base+0x6adc>
   19f9c:	mov	r0, r5
   19fa0:	mov	r1, r7
   19fa4:	mov	r2, r4
   19fa8:	mov	r3, #33	; 0x21
   19fac:	bl	20800 <flatcc_json_parser_set_error@@Base>
   19fb0:	mov	r7, r0
   19fb4:	mov	r0, r7
   19fb8:	sub	sp, fp, #24
   19fbc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19fc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19fc4:	add	fp, sp, #28
   19fc8:	sub	sp, sp, #36	; 0x24
   19fcc:	mov	r7, r3
   19fd0:	mov	r4, r2
   19fd4:	mov	r6, r1
   19fd8:	mov	r5, r0
   19fdc:	mov	r0, #0
   19fe0:	str	r0, [r3]
   19fe4:	ldr	r0, [r5]
   19fe8:	mov	r1, #4
   19fec:	bl	1e01c <flatcc_builder_start_table@@Base>
   19ff0:	cmp	r0, #0
   19ff4:	beq	1a01c <main@@Base+0x6b44>
   19ff8:	mov	r0, r5
   19ffc:	mov	r1, r6
   1a000:	mov	r2, r4
   1a004:	mov	r3, #33	; 0x21
   1a008:	bl	20800 <flatcc_json_parser_set_error@@Base>
   1a00c:	mov	r6, r0
   1a010:	mov	r0, r6
   1a014:	sub	sp, fp, #28
   1a018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a01c:	add	r0, sp, #24
   1a020:	str	r0, [sp]
   1a024:	mov	r0, r5
   1a028:	mov	r1, r6
   1a02c:	mov	r2, r4
   1a030:	mov	r3, #1
   1a034:	bl	220e8 <flatcc_json_parser_prepare_unions@@Base>
   1a038:	cmp	r0, r4
   1a03c:	beq	19ff8 <main@@Base+0x6b20>
   1a040:	str	r7, [sp, #20]
   1a044:	add	r3, sp, #32
   1a048:	mov	r0, r5
   1a04c:	mov	r1, r6
   1a050:	mov	r2, r4
   1a054:	bl	15c28 <main@@Base+0x2750>
   1a058:	mov	r6, r0
   1a05c:	ldr	r0, [sp, #32]
   1a060:	cmp	r0, #0
   1a064:	beq	1a2d0 <main@@Base+0x6df8>
   1a068:	movw	r0, #30976	; 0x7900
   1a06c:	movt	r0, #24942	; 0x616e
   1a070:	add	r9, r0, #95	; 0x5f
   1a074:	add	sl, sp, #32
   1a078:	mov	r0, r5
   1a07c:	mov	r1, r6
   1a080:	mov	r2, r4
   1a084:	bl	15cb8 <main@@Base+0x27e0>
   1a088:	mov	r6, r0
   1a08c:	mov	r1, r4
   1a090:	bl	15d00 <main@@Base+0x2828>
   1a094:	mov	r7, r0
   1a098:	mov	r8, r1
   1a09c:	movw	r0, #28281	; 0x6e79
   1a0a0:	movt	r0, #28001	; 0x6d61
   1a0a4:	eor	r0, r1, r0
   1a0a8:	eor	r1, r7, r9
   1a0ac:	orrs	r1, r1, r0
   1a0b0:	bne	1a13c <main@@Base+0x6c64>
   1a0b4:	add	r6, r6, #8
   1a0b8:	mov	r0, r6
   1a0bc:	mov	r1, r4
   1a0c0:	bl	15d00 <main@@Base+0x2828>
   1a0c4:	movw	r0, #28773	; 0x7065
   1a0c8:	movt	r0, #29817	; 0x7479
   1a0cc:	teq	r1, r0
   1a0d0:	bne	1a290 <main@@Base+0x6db8>
   1a0d4:	mov	r0, r5
   1a0d8:	mov	r1, r6
   1a0dc:	mov	r2, r4
   1a0e0:	mov	r3, #4
   1a0e4:	bl	15d04 <main@@Base+0x282c>
   1a0e8:	mov	r1, r0
   1a0ec:	cmp	r6, r0
   1a0f0:	beq	1a29c <main@@Base+0x6dc4>
   1a0f4:	ldr	r0, [sp, #24]
   1a0f8:	mov	r2, #3
   1a0fc:	str	r2, [sp]
   1a100:	str	r0, [sp, #4]
   1a104:	movw	r0, #29220	; 0x7224
   1a108:	movt	r0, #3
   1a10c:	str	r0, [sp, #8]
   1a110:	movw	r0, #30196	; 0x75f4
   1a114:	movt	r0, #1
   1a118:	str	r0, [sp, #12]
   1a11c:	movw	r0, #41744	; 0xa310
   1a120:	movt	r0, #1
   1a124:	str	r0, [sp, #16]
   1a128:	mov	r0, r5
   1a12c:	mov	r2, r4
   1a130:	mov	r3, #0
   1a134:	bl	228c8 <flatcc_json_parser_union_type_vector@@Base>
   1a138:	b	1a2a8 <main@@Base+0x6dd0>
   1a13c:	bic	r1, r7, #255	; 0xff
   1a140:	movw	r2, #30976	; 0x7900
   1a144:	movt	r2, #24942	; 0x616e
   1a148:	eor	r1, r1, r2
   1a14c:	orrs	r0, r1, r0
   1a150:	bne	1a1a8 <main@@Base+0x6cd0>
   1a154:	mov	r0, r5
   1a158:	mov	r1, r6
   1a15c:	mov	r2, r4
   1a160:	mov	r3, #7
   1a164:	bl	15d04 <main@@Base+0x282c>
   1a168:	mov	r1, r0
   1a16c:	cmp	r6, r0
   1a170:	beq	1a1a4 <main@@Base+0x6ccc>
   1a174:	ldr	r0, [sp, #24]
   1a178:	mov	r2, #3
   1a17c:	str	r2, [sp]
   1a180:	str	r0, [sp, #4]
   1a184:	movw	r0, #30196	; 0x75f4
   1a188:	movt	r0, #1
   1a18c:	str	r0, [sp, #8]
   1a190:	mov	r0, r5
   1a194:	mov	r2, r4
   1a198:	mov	r3, #0
   1a19c:	bl	2266c <flatcc_json_parser_union_vector@@Base>
   1a1a0:	b	1a2a8 <main@@Base+0x6dd0>
   1a1a4:	mov	r6, r1
   1a1a8:	movw	r0, #28786	; 0x7072
   1a1ac:	eor	r0, r0, r8, lsr #16
   1a1b0:	lsr	r1, r7, #16
   1a1b4:	orr	r1, r1, r8, lsl #16
   1a1b8:	movw	r2, #27000	; 0x6978
   1a1bc:	movt	r2, #25958	; 0x6566
   1a1c0:	eor	r1, r1, r2
   1a1c4:	orrs	r0, r1, r0
   1a1c8:	bne	1a218 <main@@Base+0x6d40>
   1a1cc:	mov	r0, r5
   1a1d0:	mov	r1, r6
   1a1d4:	mov	r2, r4
   1a1d8:	mov	r3, #6
   1a1dc:	bl	15d04 <main@@Base+0x282c>
   1a1e0:	mov	r1, r0
   1a1e4:	cmp	r6, r0
   1a1e8:	beq	1a29c <main@@Base+0x6dc4>
   1a1ec:	mov	r0, r5
   1a1f0:	mov	r2, r4
   1a1f4:	add	r3, sp, #28
   1a1f8:	bl	1a324 <main@@Base+0x6e4c>
   1a1fc:	mov	r6, r0
   1a200:	ldr	r7, [sp, #28]
   1a204:	cmp	r7, #0
   1a208:	beq	19ff8 <main@@Base+0x6b20>
   1a20c:	ldr	r0, [r5]
   1a210:	mov	r1, #0
   1a214:	b	1a27c <main@@Base+0x6da4>
   1a218:	movw	r0, #30313	; 0x7669
   1a21c:	movt	r0, #28015	; 0x6d6f
   1a220:	eor	r0, r8, r0
   1a224:	and	r1, r7, #-16777216	; 0xff000000
   1a228:	eor	r1, r1, #1694498816	; 0x65000000
   1a22c:	orrs	r0, r1, r0
   1a230:	bne	1a290 <main@@Base+0x6db8>
   1a234:	mov	r0, r5
   1a238:	mov	r1, r6
   1a23c:	mov	r2, r4
   1a240:	mov	r3, #5
   1a244:	bl	15d04 <main@@Base+0x282c>
   1a248:	mov	r1, r0
   1a24c:	cmp	r6, r0
   1a250:	beq	1a29c <main@@Base+0x6dc4>
   1a254:	mov	r0, r5
   1a258:	mov	r2, r4
   1a25c:	add	r3, sp, #28
   1a260:	bl	1a638 <main@@Base+0x7160>
   1a264:	mov	r6, r0
   1a268:	ldr	r7, [sp, #28]
   1a26c:	cmp	r7, #0
   1a270:	beq	19ff8 <main@@Base+0x6b20>
   1a274:	ldr	r0, [r5]
   1a278:	mov	r1, #1
   1a27c:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   1a280:	cmp	r0, #0
   1a284:	beq	19ff8 <main@@Base+0x6b20>
   1a288:	str	r7, [r0]
   1a28c:	b	1a2ac <main@@Base+0x6dd4>
   1a290:	mov	r0, r5
   1a294:	mov	r1, r6
   1a298:	b	1a2a0 <main@@Base+0x6dc8>
   1a29c:	mov	r0, r5
   1a2a0:	mov	r2, r4
   1a2a4:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1a2a8:	mov	r6, r0
   1a2ac:	mov	r0, r5
   1a2b0:	mov	r1, r6
   1a2b4:	mov	r2, r4
   1a2b8:	mov	r3, sl
   1a2bc:	bl	18ea8 <main@@Base+0x59d0>
   1a2c0:	mov	r6, r0
   1a2c4:	ldr	r0, [sp, #32]
   1a2c8:	cmp	r0, #0
   1a2cc:	bne	1a078 <main@@Base+0x6ba0>
   1a2d0:	ldr	r0, [r5, #24]
   1a2d4:	cmp	r0, #0
   1a2d8:	bne	19ff8 <main@@Base+0x6b20>
   1a2dc:	ldr	r3, [sp, #24]
   1a2e0:	mov	r0, r5
   1a2e4:	mov	r1, r6
   1a2e8:	mov	r2, r4
   1a2ec:	bl	22154 <flatcc_json_parser_finalize_unions@@Base>
   1a2f0:	mov	r6, r0
   1a2f4:	ldr	r0, [r5]
   1a2f8:	bl	1e73c <flatcc_builder_end_table@@Base>
   1a2fc:	ldr	r1, [sp, #20]
   1a300:	str	r0, [r1]
   1a304:	cmp	r0, #0
   1a308:	bne	1a010 <main@@Base+0x6b38>
   1a30c:	b	19ff8 <main@@Base+0x6b20>
   1a310:	mov	r1, #0
   1a314:	cmp	r0, #5
   1a318:	movwcc	r1, #1
   1a31c:	mov	r0, r1
   1a320:	bx	lr
   1a324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a328:	add	fp, sp, #28
   1a32c:	sub	sp, sp, #12
   1a330:	mov	r7, r3
   1a334:	mov	r4, r2
   1a338:	mov	r6, r1
   1a33c:	mov	r5, r0
   1a340:	mov	r0, #0
   1a344:	str	r0, [r3]
   1a348:	ldr	r0, [r5]
   1a34c:	mov	r1, #3
   1a350:	bl	1e01c <flatcc_builder_start_table@@Base>
   1a354:	cmp	r0, #0
   1a358:	bne	1a5f8 <main@@Base+0x7120>
   1a35c:	add	r3, sp, #8
   1a360:	mov	r0, r5
   1a364:	mov	r1, r6
   1a368:	mov	r2, r4
   1a36c:	bl	15c28 <main@@Base+0x2750>
   1a370:	mov	r6, r0
   1a374:	ldr	r0, [sp, #8]
   1a378:	cmp	r0, #0
   1a37c:	str	r7, [sp]
   1a380:	beq	1a5ec <main@@Base+0x7114>
   1a384:	movw	r9, #29556	; 0x7374
   1a388:	movt	r9, #29797	; 0x7465
   1a38c:	movw	sl, #28526	; 0x6f6e
   1a390:	movt	sl, #27251	; 0x6a73
   1a394:	movw	r8, #25958	; 0x6566
   1a398:	movt	r8, #28786	; 0x7072
   1a39c:	add	r7, sp, #8
   1a3a0:	b	1a3b8 <main@@Base+0x6ee0>
   1a3a4:	mov	r0, r5
   1a3a8:	mov	r2, r4
   1a3ac:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1a3b0:	mov	r6, r0
   1a3b4:	b	1a510 <main@@Base+0x7038>
   1a3b8:	mov	r0, r5
   1a3bc:	mov	r1, r6
   1a3c0:	mov	r2, r4
   1a3c4:	bl	15cb8 <main@@Base+0x27e0>
   1a3c8:	mov	r6, r0
   1a3cc:	mov	r1, r4
   1a3d0:	bl	15d00 <main@@Base+0x2828>
   1a3d4:	eor	r1, r1, r9
   1a3d8:	eor	r0, r0, sl
   1a3dc:	orrs	r0, r0, r1
   1a3e0:	bne	1a5b4 <main@@Base+0x70dc>
   1a3e4:	add	r7, r6, #8
   1a3e8:	mov	r0, r7
   1a3ec:	mov	r1, r4
   1a3f0:	bl	15d00 <main@@Base+0x2828>
   1a3f4:	eor	r1, r1, r8
   1a3f8:	movw	r2, #28769	; 0x7061
   1a3fc:	movt	r2, #27000	; 0x6978
   1a400:	eor	r0, r0, r2
   1a404:	orrs	r0, r0, r1
   1a408:	bne	1a490 <main@@Base+0x6fb8>
   1a40c:	add	r6, r6, #16
   1a410:	mov	r0, r6
   1a414:	mov	r1, r4
   1a418:	bl	15d00 <main@@Base+0x2828>
   1a41c:	movw	r2, #26990	; 0x696e
   1a420:	movt	r2, #29299	; 0x7273
   1a424:	eor	r7, r1, r2
   1a428:	mov	r8, r0
   1a42c:	bfc	r8, #0, #16
   1a430:	movw	r1, #0
   1a434:	movt	r1, #26418	; 0x6732
   1a438:	eor	r1, r8, r1
   1a43c:	orrs	r1, r1, r7
   1a440:	bne	1a4a8 <main@@Base+0x6fd0>
   1a444:	mov	r0, r5
   1a448:	mov	r1, r6
   1a44c:	mov	r2, r4
   1a450:	mov	r3, #6
   1a454:	bl	15d04 <main@@Base+0x282c>
   1a458:	mov	r1, r0
   1a45c:	cmp	r6, r0
   1a460:	beq	1a520 <main@@Base+0x7048>
   1a464:	mov	r0, r5
   1a468:	mov	r2, r4
   1a46c:	add	r3, sp, #4
   1a470:	bl	1ad9c <main@@Base+0x78c4>
   1a474:	mov	r6, r0
   1a478:	ldr	r7, [sp, #4]
   1a47c:	cmp	r7, #0
   1a480:	beq	1a5f8 <main@@Base+0x7120>
   1a484:	ldr	r0, [r5]
   1a488:	mov	r1, #1
   1a48c:	b	1a500 <main@@Base+0x7028>
   1a490:	mov	r0, r5
   1a494:	mov	r1, r7
   1a498:	mov	r2, r4
   1a49c:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1a4a0:	mov	r6, r0
   1a4a4:	b	1a518 <main@@Base+0x7040>
   1a4a8:	and	r0, r0, #-16777216	; 0xff000000
   1a4ac:	eor	r0, r0, #1728053248	; 0x67000000
   1a4b0:	orrs	r0, r0, r7
   1a4b4:	bne	1a52c <main@@Base+0x7054>
   1a4b8:	mov	r0, r5
   1a4bc:	mov	r1, r6
   1a4c0:	mov	r2, r4
   1a4c4:	mov	r3, #5
   1a4c8:	bl	15d04 <main@@Base+0x282c>
   1a4cc:	mov	r1, r0
   1a4d0:	cmp	r6, r0
   1a4d4:	beq	1a528 <main@@Base+0x7050>
   1a4d8:	mov	r0, r5
   1a4dc:	mov	r2, r4
   1a4e0:	add	r3, sp, #4
   1a4e4:	bl	1b0e0 <main@@Base+0x7c08>
   1a4e8:	mov	r6, r0
   1a4ec:	ldr	r7, [sp, #4]
   1a4f0:	cmp	r7, #0
   1a4f4:	beq	1a5f8 <main@@Base+0x7120>
   1a4f8:	ldr	r0, [r5]
   1a4fc:	mov	r1, #0
   1a500:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   1a504:	cmp	r0, #0
   1a508:	beq	1a5f8 <main@@Base+0x7120>
   1a50c:	str	r7, [r0]
   1a510:	movw	r8, #25958	; 0x6566
   1a514:	movt	r8, #28786	; 0x7072
   1a518:	add	r7, sp, #8
   1a51c:	b	1a5c8 <main@@Base+0x70f0>
   1a520:	mov	r6, r1
   1a524:	b	1a5a8 <main@@Base+0x70d0>
   1a528:	mov	r6, r1
   1a52c:	movw	r0, #0
   1a530:	movt	r0, #26418	; 0x6732
   1a534:	add	r0, r0, #65536	; 0x10000
   1a538:	eor	r0, r8, r0
   1a53c:	orrs	r0, r0, r7
   1a540:	bne	1a5a8 <main@@Base+0x70d0>
   1a544:	mov	r0, r5
   1a548:	mov	r1, r6
   1a54c:	mov	r2, r4
   1a550:	mov	r3, #6
   1a554:	bl	15d04 <main@@Base+0x282c>
   1a558:	mov	r1, r0
   1a55c:	cmp	r6, r0
   1a560:	beq	1a3a4 <main@@Base+0x6ecc>
   1a564:	mov	r0, r5
   1a568:	mov	r2, r4
   1a56c:	add	r3, sp, #4
   1a570:	bl	1b830 <main@@Base+0x8358>
   1a574:	mov	r6, r0
   1a578:	ldr	r7, [sp, #4]
   1a57c:	cmp	r7, #0
   1a580:	movw	r8, #25958	; 0x6566
   1a584:	movt	r8, #28786	; 0x7072
   1a588:	beq	1a5f8 <main@@Base+0x7120>
   1a58c:	ldr	r0, [r5]
   1a590:	mov	r1, #2
   1a594:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   1a598:	cmp	r0, #0
   1a59c:	beq	1a5f8 <main@@Base+0x7120>
   1a5a0:	str	r7, [r0]
   1a5a4:	b	1a518 <main@@Base+0x7040>
   1a5a8:	movw	r8, #25958	; 0x6566
   1a5ac:	movt	r8, #28786	; 0x7072
   1a5b0:	add	r7, sp, #8
   1a5b4:	mov	r0, r5
   1a5b8:	mov	r1, r6
   1a5bc:	mov	r2, r4
   1a5c0:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1a5c4:	mov	r6, r0
   1a5c8:	mov	r0, r5
   1a5cc:	mov	r1, r6
   1a5d0:	mov	r2, r4
   1a5d4:	mov	r3, r7
   1a5d8:	bl	18ea8 <main@@Base+0x59d0>
   1a5dc:	mov	r6, r0
   1a5e0:	ldr	r0, [sp, #8]
   1a5e4:	cmp	r0, #0
   1a5e8:	bne	1a3b8 <main@@Base+0x6ee0>
   1a5ec:	ldr	r0, [r5, #24]
   1a5f0:	cmp	r0, #0
   1a5f4:	beq	1a61c <main@@Base+0x7144>
   1a5f8:	mov	r0, r5
   1a5fc:	mov	r1, r6
   1a600:	mov	r2, r4
   1a604:	mov	r3, #33	; 0x21
   1a608:	bl	20800 <flatcc_json_parser_set_error@@Base>
   1a60c:	mov	r6, r0
   1a610:	mov	r0, r6
   1a614:	sub	sp, fp, #28
   1a618:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a61c:	ldr	r0, [r5]
   1a620:	bl	1e73c <flatcc_builder_end_table@@Base>
   1a624:	ldr	r1, [sp]
   1a628:	str	r0, [r1]
   1a62c:	cmp	r0, #0
   1a630:	bne	1a610 <main@@Base+0x7138>
   1a634:	b	1a5f8 <main@@Base+0x7120>
   1a638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a63c:	add	fp, sp, #28
   1a640:	sub	sp, sp, #36	; 0x24
   1a644:	mov	r7, r3
   1a648:	mov	r4, r2
   1a64c:	mov	r6, r1
   1a650:	mov	r5, r0
   1a654:	mov	r0, #0
   1a658:	str	r0, [r3]
   1a65c:	ldr	r0, [r5]
   1a660:	mov	r1, #10
   1a664:	bl	1e01c <flatcc_builder_start_table@@Base>
   1a668:	cmp	r0, #0
   1a66c:	beq	1a694 <main@@Base+0x71bc>
   1a670:	mov	r0, r5
   1a674:	mov	r1, r6
   1a678:	mov	r2, r4
   1a67c:	mov	r3, #33	; 0x21
   1a680:	bl	20800 <flatcc_json_parser_set_error@@Base>
   1a684:	mov	r6, r0
   1a688:	mov	r0, r6
   1a68c:	sub	sp, fp, #28
   1a690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a694:	add	r0, sp, #28
   1a698:	str	r0, [sp]
   1a69c:	mov	r0, r5
   1a6a0:	mov	r1, r6
   1a6a4:	mov	r2, r4
   1a6a8:	mov	r3, #5
   1a6ac:	bl	220e8 <flatcc_json_parser_prepare_unions@@Base>
   1a6b0:	cmp	r0, r4
   1a6b4:	beq	1a670 <main@@Base+0x7198>
   1a6b8:	add	r3, sp, #32
   1a6bc:	mov	r0, r5
   1a6c0:	mov	r1, r6
   1a6c4:	mov	r2, r4
   1a6c8:	bl	15c28 <main@@Base+0x2750>
   1a6cc:	mov	r6, r0
   1a6d0:	ldr	r0, [sp, #32]
   1a6d4:	cmp	r0, #0
   1a6d8:	str	r7, [sp, #20]
   1a6dc:	beq	1ad5c <main@@Base+0x7884>
   1a6e0:	movw	r8, #24946	; 0x6172
   1a6e4:	movt	r8, #25448	; 0x6368
   1a6e8:	movw	r9, #29797	; 0x7465
   1a6ec:	movt	r9, #24931	; 0x6163
   1a6f0:	movw	r0, #24436	; 0x5f74
   1a6f4:	movt	r0, #29299	; 0x7273
   1a6f8:	movw	sl, #29817	; 0x7479
   1a6fc:	movt	sl, #28511	; 0x6f5f
   1a700:	add	r0, r0, #65536	; 0x10000
   1a704:	add	r0, r0, #16777216	; 0x1000000
   1a708:	str	r0, [sp, #24]
   1a70c:	add	r7, sp, #32
   1a710:	b	1a74c <main@@Base+0x7274>
   1a714:	mov	r0, r5
   1a718:	mov	r1, r6
   1a71c:	b	1a730 <main@@Base+0x7258>
   1a720:	mov	r0, r5
   1a724:	mov	r1, r7
   1a728:	b	1a730 <main@@Base+0x7258>
   1a72c:	mov	r0, r5
   1a730:	mov	r2, r4
   1a734:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1a738:	mov	r1, r0
   1a73c:	movw	r9, #29797	; 0x7465
   1a740:	movt	r9, #24931	; 0x6163
   1a744:	add	r7, sp, #32
   1a748:	b	1ad3c <main@@Base+0x7864>
   1a74c:	mov	r0, r5
   1a750:	mov	r1, r6
   1a754:	mov	r2, r4
   1a758:	bl	15cb8 <main@@Base+0x27e0>
   1a75c:	mov	r6, r0
   1a760:	mov	r1, r4
   1a764:	bl	15d00 <main@@Base+0x2828>
   1a768:	subs	r2, r0, r9
   1a76c:	sbcs	r2, r1, r8
   1a770:	bcs	1a83c <main@@Base+0x7364>
   1a774:	eor	r3, r0, sl
   1a778:	movw	r2, #28005	; 0x6d65
   1a77c:	movt	r2, #25441	; 0x6361
   1a780:	eor	r2, r1, r2
   1a784:	orrs	r3, r3, r2
   1a788:	beq	1a9f4 <main@@Base+0x751c>
   1a78c:	movw	r3, #28265	; 0x6e69
   1a790:	movt	r3, #26479	; 0x676f
   1a794:	eor	r3, r0, r3
   1a798:	movw	r7, #29793	; 0x7461
   1a79c:	movt	r7, #24942	; 0x616e
   1a7a0:	eor	r1, r1, r7
   1a7a4:	orrs	r1, r3, r1
   1a7a8:	bne	1aa74 <main@@Base+0x759c>
   1a7ac:	add	r6, r6, #8
   1a7b0:	mov	r0, r6
   1a7b4:	mov	r1, r4
   1a7b8:	bl	15d00 <main@@Base+0x2828>
   1a7bc:	ldr	r2, [sp, #24]
   1a7c0:	eor	r2, r1, r2
   1a7c4:	bic	r0, r0, #255	; 0xff
   1a7c8:	movw	r3, #25856	; 0x6500
   1a7cc:	movt	r3, #31088	; 0x7970
   1a7d0:	eor	r0, r0, r3
   1a7d4:	orrs	r0, r0, r2
   1a7d8:	bne	1aad8 <main@@Base+0x7600>
   1a7dc:	mov	r0, r5
   1a7e0:	mov	r1, r6
   1a7e4:	mov	r2, r4
   1a7e8:	mov	r3, #7
   1a7ec:	bl	15d04 <main@@Base+0x282c>
   1a7f0:	mov	r1, r0
   1a7f4:	cmp	r6, r0
   1a7f8:	add	r7, sp, #32
   1a7fc:	beq	1ad2c <main@@Base+0x7854>
   1a800:	ldr	r0, [sp, #28]
   1a804:	mov	r2, #3
   1a808:	str	r2, [sp]
   1a80c:	str	r0, [sp, #4]
   1a810:	movw	r0, #29356	; 0x72ac
   1a814:	movt	r0, #3
   1a818:	str	r0, [sp, #8]
   1a81c:	movw	r0, #48168	; 0xbc28
   1a820:	movt	r0, #1
   1a824:	str	r0, [sp, #12]
   1a828:	mov	r0, r5
   1a82c:	mov	r2, r4
   1a830:	mov	r3, #1
   1a834:	bl	222d4 <flatcc_json_parser_union_type@@Base>
   1a838:	b	1ad38 <main@@Base+0x7860>
   1a83c:	movw	r2, #26720	; 0x6860
   1a840:	movt	r2, #24419	; 0x5f63
   1a844:	subs	r2, r2, r0
   1a848:	movw	r2, #26990	; 0x696e
   1a84c:	movt	r2, #28001	; 0x6d61
   1a850:	sbcs	r2, r2, r1
   1a854:	bcc	1a904 <main@@Base+0x742c>
   1a858:	eor	r0, r0, r9
   1a85c:	eor	r1, r1, r8
   1a860:	orrs	r0, r0, r1
   1a864:	bne	1ad20 <main@@Base+0x7848>
   1a868:	add	r6, r6, #8
   1a86c:	mov	r0, r6
   1a870:	mov	r1, r4
   1a874:	bl	15d00 <main@@Base+0x2828>
   1a878:	movw	r2, #24436	; 0x5f74
   1a87c:	movt	r2, #29299	; 0x7273
   1a880:	eor	r2, r1, r2
   1a884:	bic	r0, r0, #255	; 0xff
   1a888:	movw	r3, #25856	; 0x6500
   1a88c:	movt	r3, #31088	; 0x7970
   1a890:	eor	r0, r0, r3
   1a894:	orrs	r0, r0, r2
   1a898:	bne	1abec <main@@Base+0x7714>
   1a89c:	mov	r0, r5
   1a8a0:	mov	r1, r6
   1a8a4:	mov	r2, r4
   1a8a8:	mov	r3, #7
   1a8ac:	bl	15d04 <main@@Base+0x282c>
   1a8b0:	mov	r1, r0
   1a8b4:	cmp	r6, r0
   1a8b8:	beq	1ad2c <main@@Base+0x7854>
   1a8bc:	ldr	r0, [sp, #28]
   1a8c0:	mov	r2, #9
   1a8c4:	str	r2, [sp]
   1a8c8:	str	r0, [sp, #4]
   1a8cc:	movw	r0, #29388	; 0x72cc
   1a8d0:	movt	r0, #3
   1a8d4:	str	r0, [sp, #8]
   1a8d8:	movw	r0, #48168	; 0xbc28
   1a8dc:	movt	r0, #1
   1a8e0:	str	r0, [sp, #12]
   1a8e4:	movw	r0, #48464	; 0xbd50
   1a8e8:	movt	r0, #1
   1a8ec:	str	r0, [sp, #16]
   1a8f0:	mov	r0, r5
   1a8f4:	mov	r2, r4
   1a8f8:	mov	r3, #4
   1a8fc:	bl	228c8 <flatcc_json_parser_union_type_vector@@Base>
   1a900:	b	1ad38 <main@@Base+0x7860>
   1a904:	movw	r2, #26979	; 0x6963
   1a908:	movt	r2, #24427	; 0x5f6b
   1a90c:	eor	r2, r0, r2
   1a910:	movw	r3, #25701	; 0x6465
   1a914:	movt	r3, #29545	; 0x7369
   1a918:	eor	r3, r1, r3
   1a91c:	orrs	r2, r2, r3
   1a920:	beq	1ab40 <main@@Base+0x7668>
   1a924:	movw	r2, #26721	; 0x6861
   1a928:	movt	r2, #24419	; 0x5f63
   1a92c:	eor	r0, r0, r2
   1a930:	movw	r2, #26990	; 0x696e
   1a934:	movt	r2, #28001	; 0x6d61
   1a938:	eor	r1, r1, r2
   1a93c:	orrs	r0, r0, r1
   1a940:	bne	1ad20 <main@@Base+0x7848>
   1a944:	movw	r9, #25856	; 0x6500
   1a948:	movt	r9, #31088	; 0x7970
   1a94c:	add	r7, r6, #8
   1a950:	mov	r0, r7
   1a954:	mov	r1, r4
   1a958:	bl	15d00 <main@@Base+0x2828>
   1a95c:	movw	r2, #25460	; 0x6374
   1a960:	movt	r2, #29281	; 0x7261
   1a964:	eor	r2, r1, r2
   1a968:	movw	r3, #24436	; 0x5f74
   1a96c:	movt	r3, #25970	; 0x6572
   1a970:	eor	r3, r0, r3
   1a974:	orrs	r2, r3, r2
   1a978:	bne	1ac50 <main@@Base+0x7778>
   1a97c:	add	r6, r6, #16
   1a980:	mov	r0, r6
   1a984:	mov	r1, r4
   1a988:	bl	15d00 <main@@Base+0x2828>
   1a98c:	bic	r0, r1, #255	; 0xff
   1a990:	teq	r0, r9
   1a994:	bne	1a714 <main@@Base+0x723c>
   1a998:	mov	r0, r5
   1a99c:	mov	r1, r6
   1a9a0:	mov	r2, r4
   1a9a4:	mov	r3, #3
   1a9a8:	bl	15d04 <main@@Base+0x282c>
   1a9ac:	mov	r1, r0
   1a9b0:	cmp	r6, r0
   1a9b4:	beq	1a72c <main@@Base+0x7254>
   1a9b8:	ldr	r0, [sp, #28]
   1a9bc:	mov	r2, #1
   1a9c0:	str	r2, [sp]
   1a9c4:	str	r0, [sp, #4]
   1a9c8:	movw	r0, #29404	; 0x72dc
   1a9cc:	movt	r0, #3
   1a9d0:	str	r0, [sp, #8]
   1a9d4:	movw	r0, #48168	; 0xbc28
   1a9d8:	movt	r0, #1
   1a9dc:	str	r0, [sp, #12]
   1a9e0:	mov	r0, r5
   1a9e4:	mov	r2, r4
   1a9e8:	mov	r3, #0
   1a9ec:	bl	222d4 <flatcc_json_parser_union_type@@Base>
   1a9f0:	b	1a738 <main@@Base+0x7260>
   1a9f4:	add	r6, r6, #8
   1a9f8:	mov	r0, r6
   1a9fc:	mov	r1, r4
   1aa00:	bl	15d00 <main@@Base+0x2828>
   1aa04:	bfc	r1, #0, #16
   1aa08:	movw	r0, #0
   1aa0c:	movt	r0, #28773	; 0x7065
   1aa10:	teq	r1, r0
   1aa14:	bne	1ad20 <main@@Base+0x7848>
   1aa18:	mov	r0, r5
   1aa1c:	mov	r1, r6
   1aa20:	mov	r2, r4
   1aa24:	mov	r3, #2
   1aa28:	bl	15d04 <main@@Base+0x282c>
   1aa2c:	mov	r1, r0
   1aa30:	cmp	r6, r0
   1aa34:	beq	1ad2c <main@@Base+0x7854>
   1aa38:	ldr	r0, [sp, #28]
   1aa3c:	mov	r2, #7
   1aa40:	str	r2, [sp]
   1aa44:	str	r0, [sp, #4]
   1aa48:	movw	r0, #29372	; 0x72bc
   1aa4c:	movt	r0, #3
   1aa50:	str	r0, [sp, #8]
   1aa54:	movw	r0, #48168	; 0xbc28
   1aa58:	movt	r0, #1
   1aa5c:	str	r0, [sp, #12]
   1aa60:	mov	r0, r5
   1aa64:	mov	r2, r4
   1aa68:	mov	r3, #3
   1aa6c:	bl	222d4 <flatcc_json_parser_union_type@@Base>
   1aa70:	b	1ad38 <main@@Base+0x7860>
   1aa74:	and	r0, r0, #-16777216	; 0xff000000
   1aa78:	eor	r0, r0, #1862270976	; 0x6f000000
   1aa7c:	orrs	r0, r0, r2
   1aa80:	bne	1abd0 <main@@Base+0x76f8>
   1aa84:	mov	r0, r5
   1aa88:	mov	r1, r6
   1aa8c:	mov	r2, r4
   1aa90:	mov	r3, #5
   1aa94:	bl	15d04 <main@@Base+0x282c>
   1aa98:	mov	r1, r0
   1aa9c:	cmp	r6, r0
   1aaa0:	add	r7, sp, #32
   1aaa4:	beq	1ad2c <main@@Base+0x7854>
   1aaa8:	ldr	r0, [sp, #28]
   1aaac:	mov	r2, #7
   1aab0:	str	r2, [sp]
   1aab4:	str	r0, [sp, #4]
   1aab8:	movw	r0, #48168	; 0xbc28
   1aabc:	movt	r0, #1
   1aac0:	str	r0, [sp, #8]
   1aac4:	mov	r0, r5
   1aac8:	mov	r2, r4
   1aacc:	mov	r3, #3
   1aad0:	bl	221b0 <flatcc_json_parser_union@@Base>
   1aad4:	b	1ad38 <main@@Base+0x7860>
   1aad8:	bfc	r1, #0, #16
   1aadc:	movw	r0, #0
   1aae0:	movt	r0, #29556	; 0x7374
   1aae4:	teq	r1, r0
   1aae8:	add	r7, sp, #32
   1aaec:	bne	1ad20 <main@@Base+0x7848>
   1aaf0:	mov	r0, r5
   1aaf4:	mov	r1, r6
   1aaf8:	mov	r2, r4
   1aafc:	mov	r3, #2
   1ab00:	bl	15d04 <main@@Base+0x282c>
   1ab04:	mov	r1, r0
   1ab08:	cmp	r6, r0
   1ab0c:	beq	1ad2c <main@@Base+0x7854>
   1ab10:	ldr	r0, [sp, #28]
   1ab14:	mov	r2, #3
   1ab18:	str	r2, [sp]
   1ab1c:	str	r0, [sp, #4]
   1ab20:	movw	r0, #48168	; 0xbc28
   1ab24:	movt	r0, #1
   1ab28:	str	r0, [sp, #8]
   1ab2c:	mov	r0, r5
   1ab30:	mov	r2, r4
   1ab34:	mov	r3, #1
   1ab38:	bl	221b0 <flatcc_json_parser_union@@Base>
   1ab3c:	b	1ad38 <main@@Base+0x7860>
   1ab40:	add	r6, r6, #8
   1ab44:	mov	r0, r6
   1ab48:	mov	r1, r4
   1ab4c:	bl	15d00 <main@@Base+0x2828>
   1ab50:	lsr	r0, r0, #16
   1ab54:	orr	r0, r0, r1, lsl #16
   1ab58:	movw	r2, #28773	; 0x7065
   1ab5c:	movt	r2, #29817	; 0x7479
   1ab60:	eor	r0, r0, r2
   1ab64:	movw	r2, #27487	; 0x6b5f
   1ab68:	eor	r2, r2, r1, lsr #16
   1ab6c:	orrs	r0, r0, r2
   1ab70:	bne	1acc4 <main@@Base+0x77ec>
   1ab74:	mov	r0, r5
   1ab78:	mov	r1, r6
   1ab7c:	mov	r2, r4
   1ab80:	mov	r3, #6
   1ab84:	bl	15d04 <main@@Base+0x282c>
   1ab88:	mov	r1, r0
   1ab8c:	cmp	r6, r0
   1ab90:	beq	1ad2c <main@@Base+0x7854>
   1ab94:	ldr	r0, [sp, #28]
   1ab98:	mov	r2, #5
   1ab9c:	str	r2, [sp]
   1aba0:	str	r0, [sp, #4]
   1aba4:	movw	r0, #29420	; 0x72ec
   1aba8:	movt	r0, #3
   1abac:	str	r0, [sp, #8]
   1abb0:	movw	r0, #48168	; 0xbc28
   1abb4:	movt	r0, #1
   1abb8:	str	r0, [sp, #12]
   1abbc:	mov	r0, r5
   1abc0:	mov	r2, r4
   1abc4:	mov	r3, #2
   1abc8:	bl	222d4 <flatcc_json_parser_union_type@@Base>
   1abcc:	b	1ad38 <main@@Base+0x7860>
   1abd0:	mov	r0, r5
   1abd4:	mov	r1, r6
   1abd8:	mov	r2, r4
   1abdc:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1abe0:	mov	r1, r0
   1abe4:	add	r7, sp, #32
   1abe8:	b	1ad3c <main@@Base+0x7864>
   1abec:	bfc	r1, #0, #16
   1abf0:	movw	r0, #0
   1abf4:	movt	r0, #29299	; 0x7273
   1abf8:	teq	r1, r0
   1abfc:	bne	1ad20 <main@@Base+0x7848>
   1ac00:	mov	r0, r5
   1ac04:	mov	r1, r6
   1ac08:	mov	r2, r4
   1ac0c:	mov	r3, #2
   1ac10:	bl	15d04 <main@@Base+0x282c>
   1ac14:	mov	r1, r0
   1ac18:	cmp	r6, r0
   1ac1c:	beq	1ad2c <main@@Base+0x7854>
   1ac20:	ldr	r0, [sp, #28]
   1ac24:	mov	r2, #9
   1ac28:	str	r2, [sp]
   1ac2c:	str	r0, [sp, #4]
   1ac30:	movw	r0, #48168	; 0xbc28
   1ac34:	movt	r0, #1
   1ac38:	str	r0, [sp, #8]
   1ac3c:	mov	r0, r5
   1ac40:	mov	r2, r4
   1ac44:	mov	r3, #4
   1ac48:	bl	2266c <flatcc_json_parser_union_vector@@Base>
   1ac4c:	b	1ad38 <main@@Base+0x7860>
   1ac50:	movw	r2, #29281	; 0x7261
   1ac54:	eor	r2, r2, r1, lsr #16
   1ac58:	lsr	r0, r0, #16
   1ac5c:	orr	r0, r0, r1, lsl #16
   1ac60:	movw	r1, #25970	; 0x6572
   1ac64:	movt	r1, #25460	; 0x6374
   1ac68:	eor	r0, r0, r1
   1ac6c:	orrs	r0, r0, r2
   1ac70:	bne	1a720 <main@@Base+0x7248>
   1ac74:	mov	r0, r5
   1ac78:	mov	r1, r7
   1ac7c:	mov	r2, r4
   1ac80:	mov	r3, #6
   1ac84:	bl	15d04 <main@@Base+0x282c>
   1ac88:	mov	r1, r0
   1ac8c:	cmp	r7, r0
   1ac90:	beq	1a72c <main@@Base+0x7254>
   1ac94:	ldr	r0, [sp, #28]
   1ac98:	mov	r2, #1
   1ac9c:	str	r2, [sp]
   1aca0:	str	r0, [sp, #4]
   1aca4:	movw	r0, #48168	; 0xbc28
   1aca8:	movt	r0, #1
   1acac:	str	r0, [sp, #8]
   1acb0:	mov	r0, r5
   1acb4:	mov	r2, r4
   1acb8:	mov	r3, #0
   1acbc:	bl	221b0 <flatcc_json_parser_union@@Base>
   1acc0:	b	1a738 <main@@Base+0x7260>
   1acc4:	and	r0, r1, #-16777216	; 0xff000000
   1acc8:	teq	r0, #1795162112	; 0x6b000000
   1accc:	bne	1ad20 <main@@Base+0x7848>
   1acd0:	mov	r0, r5
   1acd4:	mov	r1, r6
   1acd8:	mov	r2, r4
   1acdc:	mov	r3, #1
   1ace0:	bl	15d04 <main@@Base+0x282c>
   1ace4:	mov	r1, r0
   1ace8:	cmp	r6, r0
   1acec:	beq	1ad2c <main@@Base+0x7854>
   1acf0:	ldr	r0, [sp, #28]
   1acf4:	mov	r2, #5
   1acf8:	str	r2, [sp]
   1acfc:	str	r0, [sp, #4]
   1ad00:	movw	r0, #48168	; 0xbc28
   1ad04:	movt	r0, #1
   1ad08:	str	r0, [sp, #8]
   1ad0c:	mov	r0, r5
   1ad10:	mov	r2, r4
   1ad14:	mov	r3, #2
   1ad18:	bl	221b0 <flatcc_json_parser_union@@Base>
   1ad1c:	b	1ad38 <main@@Base+0x7860>
   1ad20:	mov	r0, r5
   1ad24:	mov	r1, r6
   1ad28:	b	1ad30 <main@@Base+0x7858>
   1ad2c:	mov	r0, r5
   1ad30:	mov	r2, r4
   1ad34:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1ad38:	mov	r1, r0
   1ad3c:	mov	r0, r5
   1ad40:	mov	r2, r4
   1ad44:	mov	r3, r7
   1ad48:	bl	18ea8 <main@@Base+0x59d0>
   1ad4c:	mov	r6, r0
   1ad50:	ldr	r0, [sp, #32]
   1ad54:	cmp	r0, #0
   1ad58:	bne	1a74c <main@@Base+0x7274>
   1ad5c:	ldr	r0, [r5, #24]
   1ad60:	cmp	r0, #0
   1ad64:	bne	1a670 <main@@Base+0x7198>
   1ad68:	ldr	r3, [sp, #28]
   1ad6c:	mov	r0, r5
   1ad70:	mov	r1, r6
   1ad74:	mov	r2, r4
   1ad78:	bl	22154 <flatcc_json_parser_finalize_unions@@Base>
   1ad7c:	mov	r6, r0
   1ad80:	ldr	r0, [r5]
   1ad84:	bl	1e73c <flatcc_builder_end_table@@Base>
   1ad88:	ldr	r1, [sp, #20]
   1ad8c:	str	r0, [r1]
   1ad90:	cmp	r0, #0
   1ad94:	bne	1a688 <main@@Base+0x71b0>
   1ad98:	b	1a670 <main@@Base+0x7198>
   1ad9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ada0:	add	fp, sp, #28
   1ada4:	sub	sp, sp, #20
   1ada8:	mov	r6, r3
   1adac:	mov	r4, r2
   1adb0:	mov	r9, r1
   1adb4:	mov	r5, r0
   1adb8:	mov	r0, #0
   1adbc:	str	r0, [r3]
   1adc0:	ldr	r0, [r5]
   1adc4:	mov	r1, #2
   1adc8:	bl	1e01c <flatcc_builder_start_table@@Base>
   1adcc:	cmp	r0, #0
   1add0:	bne	1b0a0 <main@@Base+0x7bc8>
   1add4:	str	r6, [sp, #4]
   1add8:	add	r3, sp, #16
   1addc:	mov	r0, r5
   1ade0:	mov	r1, r9
   1ade4:	mov	r2, r4
   1ade8:	bl	15c28 <main@@Base+0x2750>
   1adec:	mov	r9, r0
   1adf0:	ldr	r0, [sp, #16]
   1adf4:	cmp	r0, #0
   1adf8:	beq	1b094 <main@@Base+0x7bbc>
   1adfc:	movw	sl, #24929	; 0x6161
   1ae00:	movt	sl, #24929	; 0x6161
   1ae04:	movw	r7, #25186	; 0x6262
   1ae08:	movt	r7, #24418	; 0x5f62
   1ae0c:	add	r8, sp, #16
   1ae10:	mov	r0, r5
   1ae14:	mov	r1, r9
   1ae18:	mov	r2, r4
   1ae1c:	bl	15cb8 <main@@Base+0x27e0>
   1ae20:	mov	r6, r0
   1ae24:	mov	r1, r4
   1ae28:	bl	15d00 <main@@Base+0x2828>
   1ae2c:	eor	r1, r1, sl
   1ae30:	eor	r0, r0, r7
   1ae34:	orrs	r0, r0, r1
   1ae38:	bne	1af48 <main@@Base+0x7a70>
   1ae3c:	add	r6, r6, #8
   1ae40:	mov	r0, r6
   1ae44:	mov	r1, r4
   1ae48:	bl	15d00 <main@@Base+0x2828>
   1ae4c:	lsr	r2, r0, #8
   1ae50:	orr	r2, r2, r1, lsl #24
   1ae54:	movw	r3, #28787	; 0x7073
   1ae58:	movt	r3, #29797	; 0x7465
   1ae5c:	eor	r2, r2, r3
   1ae60:	movw	r3, #24435	; 0x5f73
   1ae64:	movt	r3, #98	; 0x62
   1ae68:	eor	r3, r3, r1, lsr #8
   1ae6c:	orrs	r2, r2, r3
   1ae70:	bne	1aecc <main@@Base+0x79f4>
   1ae74:	mov	r0, r5
   1ae78:	mov	r1, r6
   1ae7c:	mov	r2, r4
   1ae80:	mov	r3, #7
   1ae84:	bl	15d04 <main@@Base+0x282c>
   1ae88:	mov	r7, r0
   1ae8c:	cmp	r6, r0
   1ae90:	beq	1af60 <main@@Base+0x7a88>
   1ae94:	mov	r0, #0
   1ae98:	str	r0, [sp, #12]
   1ae9c:	str	r0, [sp, #8]
   1aea0:	mov	r0, r5
   1aea4:	mov	r1, r7
   1aea8:	mov	r2, r4
   1aeac:	add	r9, sp, #8
   1aeb0:	mov	r3, r9
   1aeb4:	bl	186f8 <main@@Base+0x5220>
   1aeb8:	mov	r6, r0
   1aebc:	cmp	r7, r0
   1aec0:	beq	1af78 <main@@Base+0x7aa0>
   1aec4:	mov	r9, r6
   1aec8:	b	1afa4 <main@@Base+0x7acc>
   1aecc:	movw	r2, #29791	; 0x745f
   1aed0:	movt	r2, #24946	; 0x6172
   1aed4:	eor	r0, r0, r2
   1aed8:	movw	r2, #29556	; 0x7374
   1aedc:	movt	r2, #25183	; 0x625f
   1aee0:	eor	r1, r1, r2
   1aee4:	orrs	r0, r0, r1
   1aee8:	bne	1af48 <main@@Base+0x7a70>
   1aeec:	mov	r0, r5
   1aef0:	mov	r1, r6
   1aef4:	mov	r2, r4
   1aef8:	mov	r3, #8
   1aefc:	bl	15d04 <main@@Base+0x282c>
   1af00:	mov	r7, r0
   1af04:	cmp	r6, r0
   1af08:	beq	1af60 <main@@Base+0x7a88>
   1af0c:	mov	r0, #0
   1af10:	str	r0, [sp, #8]
   1af14:	mov	r0, r5
   1af18:	mov	r1, r7
   1af1c:	mov	r2, r4
   1af20:	add	r9, sp, #8
   1af24:	mov	r3, r9
   1af28:	bl	18918 <main@@Base+0x5440>
   1af2c:	mov	r6, r0
   1af30:	cmp	r7, r0
   1af34:	beq	1b020 <main@@Base+0x7b48>
   1af38:	mov	r9, r6
   1af3c:	movw	r7, #25186	; 0x6262
   1af40:	movt	r7, #24418	; 0x5f62
   1af44:	b	1b054 <main@@Base+0x7b7c>
   1af48:	mov	r0, r5
   1af4c:	mov	r1, r6
   1af50:	mov	r2, r4
   1af54:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1af58:	mov	r9, r0
   1af5c:	b	1aff8 <main@@Base+0x7b20>
   1af60:	mov	r0, r5
   1af64:	mov	r1, r7
   1af68:	mov	r2, r4
   1af6c:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1af70:	mov	r9, r0
   1af74:	b	1aff0 <main@@Base+0x7b18>
   1af78:	str	r9, [sp]
   1af7c:	mov	r0, r5
   1af80:	mov	r1, r6
   1af84:	mov	r2, r4
   1af88:	movw	r3, #29236	; 0x7234
   1af8c:	movt	r3, #3
   1af90:	bl	1878c <main@@Base+0x52b4>
   1af94:	mov	r9, r0
   1af98:	cmp	r0, r6
   1af9c:	cmpne	r9, r4
   1afa0:	beq	1b0a0 <main@@Base+0x7bc8>
   1afa4:	mov	r7, sl
   1afa8:	ldr	r6, [sp, #8]
   1afac:	ldr	sl, [sp, #12]
   1afb0:	orrs	r0, r6, sl
   1afb4:	bne	1afc4 <main@@Base+0x7aec>
   1afb8:	ldrb	r0, [r5, #8]
   1afbc:	tst	r0, #2
   1afc0:	beq	1afec <main@@Base+0x7b14>
   1afc4:	ldr	r0, [r5]
   1afc8:	mov	r1, #0
   1afcc:	mov	r2, #8
   1afd0:	mov	r3, #8
   1afd4:	bl	1ee30 <flatcc_builder_table_add@@Base>
   1afd8:	cmp	r0, #0
   1afdc:	beq	1b0a0 <main@@Base+0x7bc8>
   1afe0:	mov	r2, r6
   1afe4:	mov	r3, sl
   1afe8:	bl	188f0 <main@@Base+0x5418>
   1afec:	mov	sl, r7
   1aff0:	movw	r7, #25186	; 0x6262
   1aff4:	movt	r7, #24418	; 0x5f62
   1aff8:	mov	r0, r5
   1affc:	mov	r1, r9
   1b000:	mov	r2, r4
   1b004:	mov	r3, r8
   1b008:	bl	18ea8 <main@@Base+0x59d0>
   1b00c:	mov	r9, r0
   1b010:	ldr	r0, [sp, #16]
   1b014:	cmp	r0, #0
   1b018:	bne	1ae10 <main@@Base+0x7938>
   1b01c:	b	1b094 <main@@Base+0x7bbc>
   1b020:	str	r9, [sp]
   1b024:	mov	r0, r5
   1b028:	mov	r1, r6
   1b02c:	mov	r2, r4
   1b030:	movw	r3, #29248	; 0x7240
   1b034:	movt	r3, #3
   1b038:	bl	189a8 <main@@Base+0x54d0>
   1b03c:	mov	r9, r0
   1b040:	cmp	r0, r6
   1b044:	movw	r7, #25186	; 0x6262
   1b048:	movt	r7, #24418	; 0x5f62
   1b04c:	cmpne	r9, r4
   1b050:	beq	1b0a0 <main@@Base+0x7bc8>
   1b054:	ldr	r6, [sp, #8]
   1b058:	cmp	r6, #0
   1b05c:	bne	1b06c <main@@Base+0x7b94>
   1b060:	ldrb	r0, [r5, #8]
   1b064:	tst	r0, #2
   1b068:	beq	1aff8 <main@@Base+0x7b20>
   1b06c:	ldr	r0, [r5]
   1b070:	mov	r1, #1
   1b074:	mov	r2, #4
   1b078:	mov	r3, #4
   1b07c:	bl	1ee30 <flatcc_builder_table_add@@Base>
   1b080:	cmp	r0, #0
   1b084:	beq	1b0a0 <main@@Base+0x7bc8>
   1b088:	mov	r1, r6
   1b08c:	bl	18b08 <main@@Base+0x5630>
   1b090:	b	1aff8 <main@@Base+0x7b20>
   1b094:	ldr	r0, [r5, #24]
   1b098:	cmp	r0, #0
   1b09c:	beq	1b0c4 <main@@Base+0x7bec>
   1b0a0:	mov	r0, r5
   1b0a4:	mov	r1, r9
   1b0a8:	mov	r2, r4
   1b0ac:	mov	r3, #33	; 0x21
   1b0b0:	bl	20800 <flatcc_json_parser_set_error@@Base>
   1b0b4:	mov	r9, r0
   1b0b8:	mov	r0, r9
   1b0bc:	sub	sp, fp, #28
   1b0c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0c4:	ldr	r0, [r5]
   1b0c8:	bl	1e73c <flatcc_builder_end_table@@Base>
   1b0cc:	ldr	r1, [sp, #4]
   1b0d0:	str	r0, [r1]
   1b0d4:	cmp	r0, #0
   1b0d8:	bne	1b0b8 <main@@Base+0x7be0>
   1b0dc:	b	1b0a0 <main@@Base+0x7bc8>
   1b0e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b0e4:	add	fp, sp, #28
   1b0e8:	sub	sp, sp, #44	; 0x2c
   1b0ec:	mov	r5, r3
   1b0f0:	mov	r4, r2
   1b0f4:	mov	r8, r1
   1b0f8:	mov	sl, r0
   1b0fc:	mov	r0, #0
   1b100:	str	r0, [r3]
   1b104:	ldr	r0, [sl]
   1b108:	mov	r1, #9
   1b10c:	bl	1e01c <flatcc_builder_start_table@@Base>
   1b110:	cmp	r0, #0
   1b114:	beq	1b13c <main@@Base+0x7c64>
   1b118:	mov	r0, sl
   1b11c:	mov	r1, r8
   1b120:	mov	r2, r4
   1b124:	mov	r3, #33	; 0x21
   1b128:	bl	20800 <flatcc_json_parser_set_error@@Base>
   1b12c:	mov	r8, r0
   1b130:	mov	r0, r8
   1b134:	sub	sp, fp, #28
   1b138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b13c:	str	r5, [sp, #8]
   1b140:	sub	r3, fp, #32
   1b144:	mov	r0, sl
   1b148:	mov	r1, r8
   1b14c:	mov	r2, r4
   1b150:	bl	15c28 <main@@Base+0x2750>
   1b154:	mov	r8, r0
   1b158:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b15c:	cmp	r0, #0
   1b160:	beq	1b808 <main@@Base+0x8330>
   1b164:	movw	r1, #24929	; 0x6161
   1b168:	movt	r1, #24929	; 0x6161
   1b16c:	add	r9, sp, #24
   1b170:	movw	r0, #257	; 0x101
   1b174:	movt	r0, #257	; 0x101
   1b178:	add	r0, r1, r0
   1b17c:	str	r0, [sp, #16]
   1b180:	movw	r0, #514	; 0x202
   1b184:	movt	r0, #514	; 0x202
   1b188:	add	r0, r1, r0
   1b18c:	str	r0, [sp, #20]
   1b190:	movw	r0, #771	; 0x303
   1b194:	movt	r0, #771	; 0x303
   1b198:	add	r0, r1, r0
   1b19c:	str	r0, [sp, #12]
   1b1a0:	mov	r0, sl
   1b1a4:	mov	r1, r8
   1b1a8:	mov	r2, r4
   1b1ac:	bl	15cb8 <main@@Base+0x27e0>
   1b1b0:	mov	r7, r0
   1b1b4:	mov	r1, r4
   1b1b8:	bl	15d00 <main@@Base+0x2828>
   1b1bc:	mov	r6, r1
   1b1c0:	movw	r1, #25442	; 0x6362
   1b1c4:	movt	r1, #25443	; 0x6363
   1b1c8:	cmp	r6, r1
   1b1cc:	bhi	1b25c <main@@Base+0x7d84>
   1b1d0:	movw	r1, #13108	; 0x3334
   1b1d4:	movt	r1, #12594	; 0x3132
   1b1d8:	eor	r5, r0, r1
   1b1dc:	movw	r1, #24929	; 0x6161
   1b1e0:	movt	r1, #24929	; 0x6161
   1b1e4:	eor	r0, r6, r1
   1b1e8:	orrs	r0, r5, r0
   1b1ec:	bne	1b2cc <main@@Base+0x7df4>
   1b1f0:	add	r6, r7, #8
   1b1f4:	mov	r0, r6
   1b1f8:	mov	r1, r4
   1b1fc:	bl	15d00 <main@@Base+0x2828>
   1b200:	and	r0, r1, #-16777216	; 0xff000000
   1b204:	teq	r0, #889192448	; 0x35000000
   1b208:	bne	1b5e8 <main@@Base+0x8110>
   1b20c:	mov	r0, sl
   1b210:	mov	r1, r6
   1b214:	mov	r2, r4
   1b218:	mov	r3, #1
   1b21c:	bl	15d04 <main@@Base+0x282c>
   1b220:	mov	r7, r0
   1b224:	cmp	r6, r0
   1b228:	beq	1b5f4 <main@@Base+0x811c>
   1b22c:	mov	r0, #0
   1b230:	str	r0, [sp, #24]
   1b234:	mov	r0, sl
   1b238:	mov	r1, r7
   1b23c:	mov	r2, r4
   1b240:	mov	r3, r9
   1b244:	bl	18918 <main@@Base+0x5440>
   1b248:	mov	r6, r0
   1b24c:	cmp	r7, r0
   1b250:	beq	1b60c <main@@Base+0x8134>
   1b254:	mov	r8, r6
   1b258:	b	1b638 <main@@Base+0x8160>
   1b25c:	movw	r1, #13108	; 0x3334
   1b260:	movt	r1, #12594	; 0x3132
   1b264:	eor	r5, r0, r1
   1b268:	ldr	r0, [sp, #20]
   1b26c:	eor	r0, r6, r0
   1b270:	orrs	r0, r5, r0
   1b274:	bne	1b320 <main@@Base+0x7e48>
   1b278:	mov	r0, sl
   1b27c:	mov	r1, r7
   1b280:	mov	r2, r4
   1b284:	mov	r3, #8
   1b288:	bl	15d04 <main@@Base+0x282c>
   1b28c:	mov	r6, r0
   1b290:	cmp	r7, r0
   1b294:	beq	1b37c <main@@Base+0x7ea4>
   1b298:	mov	r0, #0
   1b29c:	str	r0, [sp, #28]
   1b2a0:	str	r0, [sp, #24]
   1b2a4:	mov	r0, sl
   1b2a8:	mov	r1, r6
   1b2ac:	mov	r2, r4
   1b2b0:	mov	r3, r9
   1b2b4:	bl	186f8 <main@@Base+0x5220>
   1b2b8:	mov	r7, r0
   1b2bc:	cmp	r6, r0
   1b2c0:	beq	1b3e8 <main@@Base+0x7f10>
   1b2c4:	mov	r8, r7
   1b2c8:	b	1b414 <main@@Base+0x7f3c>
   1b2cc:	teq	r6, r1
   1b2d0:	bne	1b440 <main@@Base+0x7f68>
   1b2d4:	mov	r0, sl
   1b2d8:	mov	r1, r7
   1b2dc:	mov	r2, r4
   1b2e0:	mov	r3, #4
   1b2e4:	bl	15d04 <main@@Base+0x282c>
   1b2e8:	mov	r1, r0
   1b2ec:	cmp	r7, r0
   1b2f0:	beq	1b43c <main@@Base+0x7f64>
   1b2f4:	mov	r0, sl
   1b2f8:	mov	r2, r4
   1b2fc:	add	r3, sp, #36	; 0x24
   1b300:	bl	21f9c <flatcc_json_parser_build_string@@Base>
   1b304:	mov	r8, r0
   1b308:	ldr	r0, [sp, #36]	; 0x24
   1b30c:	cmp	r0, #0
   1b310:	beq	1b118 <main@@Base+0x7c40>
   1b314:	ldr	r0, [sl]
   1b318:	mov	r1, #0
   1b31c:	b	1b4fc <main@@Base+0x8024>
   1b320:	movw	r0, #25443	; 0x6363
   1b324:	movt	r0, #25443	; 0x6363
   1b328:	teq	r6, r0
   1b32c:	bne	1b518 <main@@Base+0x8040>
   1b330:	mov	r0, sl
   1b334:	mov	r1, r7
   1b338:	mov	r2, r4
   1b33c:	mov	r3, #4
   1b340:	bl	15d04 <main@@Base+0x282c>
   1b344:	mov	r1, r0
   1b348:	cmp	r7, r0
   1b34c:	beq	1b514 <main@@Base+0x803c>
   1b350:	mov	r0, sl
   1b354:	mov	r2, r4
   1b358:	add	r3, sp, #36	; 0x24
   1b35c:	bl	21f9c <flatcc_json_parser_build_string@@Base>
   1b360:	mov	r8, r0
   1b364:	ldr	r0, [sp, #36]	; 0x24
   1b368:	cmp	r0, #0
   1b36c:	beq	1b118 <main@@Base+0x7c40>
   1b370:	ldr	r0, [sl]
   1b374:	mov	r1, #4
   1b378:	b	1b4fc <main@@Base+0x8024>
   1b37c:	add	r6, r6, #8
   1b380:	mov	r0, r6
   1b384:	mov	r1, r4
   1b388:	bl	15d00 <main@@Base+0x2828>
   1b38c:	and	r0, r1, #-16777216	; 0xff000000
   1b390:	teq	r0, #889192448	; 0x35000000
   1b394:	bne	1b5e8 <main@@Base+0x8110>
   1b398:	mov	r0, sl
   1b39c:	mov	r1, r6
   1b3a0:	mov	r2, r4
   1b3a4:	mov	r3, #1
   1b3a8:	bl	15d04 <main@@Base+0x282c>
   1b3ac:	mov	r7, r0
   1b3b0:	cmp	r6, r0
   1b3b4:	beq	1b5f4 <main@@Base+0x811c>
   1b3b8:	mov	r0, #0
   1b3bc:	str	r0, [sp, #24]
   1b3c0:	mov	r0, sl
   1b3c4:	mov	r1, r7
   1b3c8:	mov	r2, r4
   1b3cc:	mov	r3, r9
   1b3d0:	bl	18918 <main@@Base+0x5440>
   1b3d4:	mov	r6, r0
   1b3d8:	cmp	r7, r0
   1b3dc:	beq	1b72c <main@@Base+0x8254>
   1b3e0:	mov	r8, r6
   1b3e4:	b	1b758 <main@@Base+0x8280>
   1b3e8:	str	r9, [sp]
   1b3ec:	mov	r0, sl
   1b3f0:	mov	r1, r7
   1b3f4:	mov	r2, r4
   1b3f8:	movw	r3, #29284	; 0x7264
   1b3fc:	movt	r3, #3
   1b400:	bl	1878c <main@@Base+0x52b4>
   1b404:	mov	r8, r0
   1b408:	cmp	r0, r7
   1b40c:	cmpne	r8, r4
   1b410:	beq	1b118 <main@@Base+0x7c40>
   1b414:	ldr	r6, [sp, #24]
   1b418:	ldr	r7, [sp, #28]
   1b41c:	orrs	r0, r6, r7
   1b420:	bne	1b430 <main@@Base+0x7f58>
   1b424:	ldrb	r0, [sl, #8]
   1b428:	tst	r0, #2
   1b42c:	beq	1b7e4 <main@@Base+0x830c>
   1b430:	ldr	r0, [sl]
   1b434:	mov	r1, #5
   1b438:	b	1b700 <main@@Base+0x8228>
   1b43c:	mov	r7, r1
   1b440:	ldr	r0, [sp, #16]
   1b444:	eor	r0, r6, r0
   1b448:	orrs	r0, r5, r0
   1b44c:	bne	1b4a4 <main@@Base+0x7fcc>
   1b450:	mov	r0, sl
   1b454:	mov	r1, r7
   1b458:	mov	r2, r4
   1b45c:	mov	r3, #8
   1b460:	bl	15d04 <main@@Base+0x282c>
   1b464:	mov	r6, r0
   1b468:	cmp	r7, r0
   1b46c:	beq	1b5e8 <main@@Base+0x8110>
   1b470:	mov	r0, #0
   1b474:	str	r0, [sp, #28]
   1b478:	str	r0, [sp, #24]
   1b47c:	mov	r0, sl
   1b480:	mov	r1, r6
   1b484:	mov	r2, r4
   1b488:	mov	r3, r9
   1b48c:	bl	186f8 <main@@Base+0x5220>
   1b490:	mov	r7, r0
   1b494:	cmp	r6, r0
   1b498:	beq	1b65c <main@@Base+0x8184>
   1b49c:	mov	r8, r7
   1b4a0:	b	1b688 <main@@Base+0x81b0>
   1b4a4:	movw	r0, #25186	; 0x6262
   1b4a8:	movt	r0, #25186	; 0x6262
   1b4ac:	teq	r6, r0
   1b4b0:	bne	1b5f4 <main@@Base+0x811c>
   1b4b4:	mov	r0, sl
   1b4b8:	mov	r1, r7
   1b4bc:	mov	r2, r4
   1b4c0:	mov	r3, #4
   1b4c4:	bl	15d04 <main@@Base+0x282c>
   1b4c8:	mov	r1, r0
   1b4cc:	cmp	r7, r0
   1b4d0:	beq	1b724 <main@@Base+0x824c>
   1b4d4:	mov	r0, sl
   1b4d8:	mov	r2, r4
   1b4dc:	add	r3, sp, #36	; 0x24
   1b4e0:	bl	21f9c <flatcc_json_parser_build_string@@Base>
   1b4e4:	mov	r8, r0
   1b4e8:	ldr	r0, [sp, #36]	; 0x24
   1b4ec:	cmp	r0, #0
   1b4f0:	beq	1b118 <main@@Base+0x7c40>
   1b4f4:	ldr	r0, [sl]
   1b4f8:	mov	r1, #2
   1b4fc:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   1b500:	cmp	r0, #0
   1b504:	beq	1b118 <main@@Base+0x7c40>
   1b508:	ldr	r1, [sp, #36]	; 0x24
   1b50c:	str	r1, [r0]
   1b510:	b	1b7e4 <main@@Base+0x830c>
   1b514:	mov	r7, r1
   1b518:	ldr	r0, [sp, #12]
   1b51c:	eor	r0, r6, r0
   1b520:	orrs	r0, r5, r0
   1b524:	bne	1b5f4 <main@@Base+0x811c>
   1b528:	mov	r0, sl
   1b52c:	mov	r1, r7
   1b530:	mov	r2, r4
   1b534:	mov	r3, #8
   1b538:	bl	15d04 <main@@Base+0x282c>
   1b53c:	mov	r6, r0
   1b540:	cmp	r7, r0
   1b544:	beq	1b57c <main@@Base+0x80a4>
   1b548:	mov	r0, #0
   1b54c:	str	r0, [sp, #28]
   1b550:	str	r0, [sp, #24]
   1b554:	mov	r0, sl
   1b558:	mov	r1, r6
   1b55c:	mov	r2, r4
   1b560:	mov	r3, r9
   1b564:	bl	186f8 <main@@Base+0x5220>
   1b568:	mov	r7, r0
   1b56c:	cmp	r6, r0
   1b570:	beq	1b6b0 <main@@Base+0x81d8>
   1b574:	mov	r8, r7
   1b578:	b	1b6dc <main@@Base+0x8204>
   1b57c:	add	r6, r6, #8
   1b580:	mov	r0, r6
   1b584:	mov	r1, r4
   1b588:	bl	15d00 <main@@Base+0x2828>
   1b58c:	and	r0, r1, #-16777216	; 0xff000000
   1b590:	teq	r0, #889192448	; 0x35000000
   1b594:	bne	1b5e8 <main@@Base+0x8110>
   1b598:	mov	r0, sl
   1b59c:	mov	r1, r6
   1b5a0:	mov	r2, r4
   1b5a4:	mov	r3, #1
   1b5a8:	bl	15d04 <main@@Base+0x282c>
   1b5ac:	mov	r7, r0
   1b5b0:	cmp	r6, r0
   1b5b4:	beq	1b5f4 <main@@Base+0x811c>
   1b5b8:	mov	r0, #0
   1b5bc:	str	r0, [sp, #24]
   1b5c0:	mov	r0, sl
   1b5c4:	mov	r1, r7
   1b5c8:	mov	r2, r4
   1b5cc:	mov	r3, r9
   1b5d0:	bl	18918 <main@@Base+0x5440>
   1b5d4:	mov	r6, r0
   1b5d8:	cmp	r7, r0
   1b5dc:	beq	1b77c <main@@Base+0x82a4>
   1b5e0:	mov	r8, r6
   1b5e4:	b	1b7a8 <main@@Base+0x82d0>
   1b5e8:	mov	r0, sl
   1b5ec:	mov	r1, r6
   1b5f0:	b	1b5fc <main@@Base+0x8124>
   1b5f4:	mov	r0, sl
   1b5f8:	mov	r1, r7
   1b5fc:	mov	r2, r4
   1b600:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1b604:	mov	r8, r0
   1b608:	b	1b7e4 <main@@Base+0x830c>
   1b60c:	str	r9, [sp]
   1b610:	mov	r0, sl
   1b614:	mov	r1, r6
   1b618:	mov	r2, r4
   1b61c:	movw	r3, #29260	; 0x724c
   1b620:	movt	r3, #3
   1b624:	bl	189a8 <main@@Base+0x54d0>
   1b628:	mov	r8, r0
   1b62c:	cmp	r0, r6
   1b630:	cmpne	r8, r4
   1b634:	beq	1b118 <main@@Base+0x7c40>
   1b638:	ldr	r6, [sp, #24]
   1b63c:	cmp	r6, #0
   1b640:	bne	1b650 <main@@Base+0x8178>
   1b644:	ldrb	r0, [sl, #8]
   1b648:	tst	r0, #2
   1b64c:	beq	1b7e4 <main@@Base+0x830c>
   1b650:	ldr	r0, [sl]
   1b654:	mov	r1, #1
   1b658:	b	1b7c8 <main@@Base+0x82f0>
   1b65c:	str	r9, [sp]
   1b660:	mov	r0, sl
   1b664:	mov	r1, r7
   1b668:	mov	r2, r4
   1b66c:	movw	r3, #29272	; 0x7258
   1b670:	movt	r3, #3
   1b674:	bl	1878c <main@@Base+0x52b4>
   1b678:	mov	r8, r0
   1b67c:	cmp	r0, r7
   1b680:	cmpne	r8, r4
   1b684:	beq	1b118 <main@@Base+0x7c40>
   1b688:	ldr	r6, [sp, #24]
   1b68c:	ldr	r7, [sp, #28]
   1b690:	orrs	r0, r6, r7
   1b694:	bne	1b6a4 <main@@Base+0x81cc>
   1b698:	ldrb	r0, [sl, #8]
   1b69c:	tst	r0, #2
   1b6a0:	beq	1b7e4 <main@@Base+0x830c>
   1b6a4:	ldr	r0, [sl]
   1b6a8:	mov	r1, #3
   1b6ac:	b	1b700 <main@@Base+0x8228>
   1b6b0:	str	r9, [sp]
   1b6b4:	mov	r0, sl
   1b6b8:	mov	r1, r7
   1b6bc:	mov	r2, r4
   1b6c0:	movw	r3, #29308	; 0x727c
   1b6c4:	movt	r3, #3
   1b6c8:	bl	1878c <main@@Base+0x52b4>
   1b6cc:	mov	r8, r0
   1b6d0:	cmp	r0, r7
   1b6d4:	cmpne	r8, r4
   1b6d8:	beq	1b118 <main@@Base+0x7c40>
   1b6dc:	ldr	r6, [sp, #24]
   1b6e0:	ldr	r7, [sp, #28]
   1b6e4:	orrs	r0, r6, r7
   1b6e8:	bne	1b6f8 <main@@Base+0x8220>
   1b6ec:	ldrb	r0, [sl, #8]
   1b6f0:	tst	r0, #2
   1b6f4:	beq	1b7e4 <main@@Base+0x830c>
   1b6f8:	ldr	r0, [sl]
   1b6fc:	mov	r1, #7
   1b700:	mov	r2, #8
   1b704:	mov	r3, #8
   1b708:	bl	1ee30 <flatcc_builder_table_add@@Base>
   1b70c:	cmp	r0, #0
   1b710:	beq	1b118 <main@@Base+0x7c40>
   1b714:	mov	r2, r6
   1b718:	mov	r3, r7
   1b71c:	bl	188f0 <main@@Base+0x5418>
   1b720:	b	1b7e4 <main@@Base+0x830c>
   1b724:	mov	r0, sl
   1b728:	b	1b5fc <main@@Base+0x8124>
   1b72c:	str	r9, [sp]
   1b730:	mov	r0, sl
   1b734:	mov	r1, r6
   1b738:	mov	r2, r4
   1b73c:	movw	r3, #29296	; 0x7270
   1b740:	movt	r3, #3
   1b744:	bl	189a8 <main@@Base+0x54d0>
   1b748:	mov	r8, r0
   1b74c:	cmp	r0, r6
   1b750:	cmpne	r8, r4
   1b754:	beq	1b118 <main@@Base+0x7c40>
   1b758:	ldr	r6, [sp, #24]
   1b75c:	cmp	r6, #0
   1b760:	bne	1b770 <main@@Base+0x8298>
   1b764:	ldrb	r0, [sl, #8]
   1b768:	tst	r0, #2
   1b76c:	beq	1b7e4 <main@@Base+0x830c>
   1b770:	ldr	r0, [sl]
   1b774:	mov	r1, #6
   1b778:	b	1b7c8 <main@@Base+0x82f0>
   1b77c:	str	r9, [sp]
   1b780:	mov	r0, sl
   1b784:	mov	r1, r6
   1b788:	mov	r2, r4
   1b78c:	movw	r3, #29320	; 0x7288
   1b790:	movt	r3, #3
   1b794:	bl	189a8 <main@@Base+0x54d0>
   1b798:	mov	r8, r0
   1b79c:	cmp	r0, r6
   1b7a0:	cmpne	r8, r4
   1b7a4:	beq	1b118 <main@@Base+0x7c40>
   1b7a8:	ldr	r6, [sp, #24]
   1b7ac:	cmp	r6, #0
   1b7b0:	bne	1b7c0 <main@@Base+0x82e8>
   1b7b4:	ldrb	r0, [sl, #8]
   1b7b8:	tst	r0, #2
   1b7bc:	beq	1b7e4 <main@@Base+0x830c>
   1b7c0:	ldr	r0, [sl]
   1b7c4:	mov	r1, #8
   1b7c8:	mov	r2, #4
   1b7cc:	mov	r3, #4
   1b7d0:	bl	1ee30 <flatcc_builder_table_add@@Base>
   1b7d4:	cmp	r0, #0
   1b7d8:	beq	1b118 <main@@Base+0x7c40>
   1b7dc:	mov	r1, r6
   1b7e0:	bl	18b08 <main@@Base+0x5630>
   1b7e4:	mov	r0, sl
   1b7e8:	mov	r1, r8
   1b7ec:	mov	r2, r4
   1b7f0:	sub	r3, fp, #32
   1b7f4:	bl	18ea8 <main@@Base+0x59d0>
   1b7f8:	mov	r8, r0
   1b7fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b800:	cmp	r0, #0
   1b804:	bne	1b1a0 <main@@Base+0x7cc8>
   1b808:	ldr	r0, [sl, #24]
   1b80c:	cmp	r0, #0
   1b810:	bne	1b118 <main@@Base+0x7c40>
   1b814:	ldr	r0, [sl]
   1b818:	bl	1e73c <flatcc_builder_end_table@@Base>
   1b81c:	ldr	r1, [sp, #8]
   1b820:	str	r0, [r1]
   1b824:	cmp	r0, #0
   1b828:	bne	1b130 <main@@Base+0x7c58>
   1b82c:	b	1b118 <main@@Base+0x7c40>
   1b830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b834:	add	fp, sp, #28
   1b838:	sub	sp, sp, #20
   1b83c:	mov	r6, r3
   1b840:	mov	r4, r2
   1b844:	mov	r8, r1
   1b848:	mov	r5, r0
   1b84c:	mov	r0, #0
   1b850:	str	r0, [r3]
   1b854:	ldr	r0, [r5]
   1b858:	mov	r1, #2
   1b85c:	bl	1e01c <flatcc_builder_start_table@@Base>
   1b860:	cmp	r0, #0
   1b864:	beq	1b88c <main@@Base+0x83b4>
   1b868:	mov	r0, r5
   1b86c:	mov	r1, r8
   1b870:	mov	r2, r4
   1b874:	mov	r3, #33	; 0x21
   1b878:	bl	20800 <flatcc_json_parser_set_error@@Base>
   1b87c:	mov	r8, r0
   1b880:	mov	r0, r8
   1b884:	sub	sp, fp, #28
   1b888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b88c:	str	r6, [sp, #4]
   1b890:	add	r3, sp, #16
   1b894:	mov	r0, r5
   1b898:	mov	r1, r8
   1b89c:	mov	r2, r4
   1b8a0:	bl	15c28 <main@@Base+0x2750>
   1b8a4:	mov	r8, r0
   1b8a8:	ldr	r0, [sp, #16]
   1b8ac:	cmp	r0, #0
   1b8b0:	beq	1bb68 <main@@Base+0x8690>
   1b8b4:	movw	r9, #24929	; 0x6161
   1b8b8:	movt	r9, #24929	; 0x6161
   1b8bc:	movw	sl, #25186	; 0x6262
   1b8c0:	movt	sl, #24418	; 0x5f62
   1b8c4:	add	r6, sp, #16
   1b8c8:	b	1b9ac <main@@Base+0x84d4>
   1b8cc:	str	r8, [sp]
   1b8d0:	mov	r0, r5
   1b8d4:	mov	r1, r6
   1b8d8:	mov	r2, r4
   1b8dc:	movw	r3, #29332	; 0x7294
   1b8e0:	movt	r3, #3
   1b8e4:	bl	189a8 <main@@Base+0x54d0>
   1b8e8:	mov	r8, r0
   1b8ec:	cmp	r0, r6
   1b8f0:	cmpne	r8, r4
   1b8f4:	beq	1b868 <main@@Base+0x8390>
   1b8f8:	ldr	r6, [sp, #8]
   1b8fc:	cmp	r6, #0
   1b900:	bne	1b910 <main@@Base+0x8438>
   1b904:	ldrb	r0, [r5, #8]
   1b908:	tst	r0, #2
   1b90c:	beq	1bb40 <main@@Base+0x8668>
   1b910:	ldr	r0, [r5]
   1b914:	mov	r1, #1
   1b918:	mov	r2, #4
   1b91c:	mov	r3, #4
   1b920:	bl	1ee30 <flatcc_builder_table_add@@Base>
   1b924:	cmp	r0, #0
   1b928:	beq	1b868 <main@@Base+0x8390>
   1b92c:	mov	r1, r6
   1b930:	bl	18b08 <main@@Base+0x5630>
   1b934:	b	1bb40 <main@@Base+0x8668>
   1b938:	str	r8, [sp]
   1b93c:	mov	r0, r5
   1b940:	mov	r1, r6
   1b944:	mov	r2, r4
   1b948:	movw	r3, #29344	; 0x72a0
   1b94c:	movt	r3, #3
   1b950:	bl	1878c <main@@Base+0x52b4>
   1b954:	mov	r8, r0
   1b958:	cmp	r0, r6
   1b95c:	cmpne	r8, r4
   1b960:	beq	1b868 <main@@Base+0x8390>
   1b964:	ldr	r6, [sp, #8]
   1b968:	ldr	r7, [sp, #12]
   1b96c:	orrs	r0, r6, r7
   1b970:	bne	1b980 <main@@Base+0x84a8>
   1b974:	ldrb	r0, [r5, #8]
   1b978:	tst	r0, #2
   1b97c:	beq	1bb40 <main@@Base+0x8668>
   1b980:	ldr	r0, [r5]
   1b984:	mov	r1, #0
   1b988:	mov	r2, #8
   1b98c:	mov	r3, #8
   1b990:	bl	1ee30 <flatcc_builder_table_add@@Base>
   1b994:	cmp	r0, #0
   1b998:	beq	1b868 <main@@Base+0x8390>
   1b99c:	mov	r2, r6
   1b9a0:	mov	r3, r7
   1b9a4:	bl	188f0 <main@@Base+0x5418>
   1b9a8:	b	1bb40 <main@@Base+0x8668>
   1b9ac:	mov	r0, r5
   1b9b0:	mov	r1, r8
   1b9b4:	mov	r2, r4
   1b9b8:	bl	15cb8 <main@@Base+0x27e0>
   1b9bc:	mov	r7, r0
   1b9c0:	mov	r1, r4
   1b9c4:	bl	15d00 <main@@Base+0x2828>
   1b9c8:	eor	r1, r1, r9
   1b9cc:	eor	r0, r0, sl
   1b9d0:	orrs	r0, r0, r1
   1b9d4:	bne	1ba88 <main@@Base+0x85b0>
   1b9d8:	add	r6, r7, #8
   1b9dc:	mov	r0, r6
   1b9e0:	mov	r1, r4
   1b9e4:	bl	15d00 <main@@Base+0x2828>
   1b9e8:	movw	r2, #29556	; 0x7374
   1b9ec:	movt	r2, #25183	; 0x625f
   1b9f0:	eor	r2, r1, r2
   1b9f4:	movw	r3, #29791	; 0x745f
   1b9f8:	movt	r3, #24946	; 0x6172
   1b9fc:	eor	r3, r0, r3
   1ba00:	orrs	r2, r3, r2
   1ba04:	bne	1baa0 <main@@Base+0x85c8>
   1ba08:	add	r6, r7, #16
   1ba0c:	mov	r0, r6
   1ba10:	mov	r1, r4
   1ba14:	bl	15d00 <main@@Base+0x2828>
   1ba18:	movw	r2, #25968	; 0x6570
   1ba1c:	movt	r2, #29556	; 0x7374
   1ba20:	eor	r1, r1, r2
   1ba24:	and	r0, r0, #-16777216	; 0xff000000
   1ba28:	eor	r0, r0, #1929379840	; 0x73000000
   1ba2c:	orrs	r0, r0, r1
   1ba30:	bne	1bb20 <main@@Base+0x8648>
   1ba34:	mov	r0, r5
   1ba38:	mov	r1, r6
   1ba3c:	mov	r2, r4
   1ba40:	mov	r3, #5
   1ba44:	bl	15d04 <main@@Base+0x282c>
   1ba48:	mov	r7, r0
   1ba4c:	cmp	r6, r0
   1ba50:	add	r8, sp, #8
   1ba54:	beq	1bb2c <main@@Base+0x8654>
   1ba58:	mov	r0, #0
   1ba5c:	str	r0, [sp, #8]
   1ba60:	mov	r0, r5
   1ba64:	mov	r1, r7
   1ba68:	mov	r2, r4
   1ba6c:	mov	r3, r8
   1ba70:	bl	18918 <main@@Base+0x5440>
   1ba74:	mov	r6, r0
   1ba78:	cmp	r7, r0
   1ba7c:	beq	1b8cc <main@@Base+0x83f4>
   1ba80:	mov	r8, r6
   1ba84:	b	1b8f8 <main@@Base+0x8420>
   1ba88:	mov	r0, r5
   1ba8c:	mov	r1, r7
   1ba90:	mov	r2, r4
   1ba94:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1ba98:	mov	r8, r0
   1ba9c:	b	1bb44 <main@@Base+0x866c>
   1baa0:	movw	r2, #24435	; 0x5f73
   1baa4:	movt	r2, #98	; 0x62
   1baa8:	eor	r2, r2, r1, lsr #8
   1baac:	lsr	r0, r0, #8
   1bab0:	orr	r0, r0, r1, lsl #24
   1bab4:	movw	r1, #28787	; 0x7073
   1bab8:	movt	r1, #29797	; 0x7465
   1babc:	eor	r0, r0, r1
   1bac0:	orrs	r0, r0, r2
   1bac4:	bne	1bb20 <main@@Base+0x8648>
   1bac8:	mov	r0, r5
   1bacc:	mov	r1, r6
   1bad0:	mov	r2, r4
   1bad4:	mov	r3, #7
   1bad8:	bl	15d04 <main@@Base+0x282c>
   1badc:	mov	r7, r0
   1bae0:	cmp	r6, r0
   1bae4:	add	r8, sp, #8
   1bae8:	beq	1bb2c <main@@Base+0x8654>
   1baec:	mov	r0, #0
   1baf0:	str	r0, [sp, #12]
   1baf4:	str	r0, [sp, #8]
   1baf8:	mov	r0, r5
   1bafc:	mov	r1, r7
   1bb00:	mov	r2, r4
   1bb04:	mov	r3, r8
   1bb08:	bl	186f8 <main@@Base+0x5220>
   1bb0c:	mov	r6, r0
   1bb10:	cmp	r7, r0
   1bb14:	beq	1b938 <main@@Base+0x8460>
   1bb18:	mov	r8, r6
   1bb1c:	b	1b964 <main@@Base+0x848c>
   1bb20:	mov	r0, r5
   1bb24:	mov	r1, r6
   1bb28:	b	1bb34 <main@@Base+0x865c>
   1bb2c:	mov	r0, r5
   1bb30:	mov	r1, r7
   1bb34:	mov	r2, r4
   1bb38:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1bb3c:	mov	r8, r0
   1bb40:	add	r6, sp, #16
   1bb44:	mov	r0, r5
   1bb48:	mov	r1, r8
   1bb4c:	mov	r2, r4
   1bb50:	mov	r3, r6
   1bb54:	bl	18ea8 <main@@Base+0x59d0>
   1bb58:	mov	r8, r0
   1bb5c:	ldr	r0, [sp, #16]
   1bb60:	cmp	r0, #0
   1bb64:	bne	1b9ac <main@@Base+0x84d4>
   1bb68:	ldr	r0, [r5, #24]
   1bb6c:	cmp	r0, #0
   1bb70:	bne	1b868 <main@@Base+0x8390>
   1bb74:	ldr	r0, [r5]
   1bb78:	bl	1e73c <flatcc_builder_end_table@@Base>
   1bb7c:	ldr	r1, [sp, #4]
   1bb80:	str	r0, [r1]
   1bb84:	cmp	r0, #0
   1bb88:	bne	1b880 <main@@Base+0x83a8>
   1bb8c:	b	1b868 <main@@Base+0x8390>
   1bb90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bb94:	add	fp, sp, #24
   1bb98:	mov	r8, r3
   1bb9c:	mov	r5, r2
   1bba0:	mov	r7, r1
   1bba4:	mov	r6, r0
   1bba8:	mov	r0, r1
   1bbac:	mov	r1, r2
   1bbb0:	bl	15d00 <main@@Base+0x2828>
   1bbb4:	movw	r2, #24946	; 0x6172
   1bbb8:	movt	r2, #17256	; 0x4368
   1bbbc:	eor	r1, r1, r2
   1bbc0:	movw	r2, #29797	; 0x7465
   1bbc4:	movt	r2, #24931	; 0x6163
   1bbc8:	eor	r0, r0, r2
   1bbcc:	orrs	r0, r0, r1
   1bbd0:	bne	1bc20 <main@@Base+0x8748>
   1bbd4:	add	r4, r7, #8
   1bbd8:	mov	r0, r4
   1bbdc:	mov	r1, r5
   1bbe0:	bl	15d00 <main@@Base+0x2828>
   1bbe4:	and	r0, r1, #-16777216	; 0xff000000
   1bbe8:	teq	r0, #1912602624	; 0x72000000
   1bbec:	bne	1bc20 <main@@Base+0x8748>
   1bbf0:	mov	r0, r4
   1bbf4:	mov	r1, r5
   1bbf8:	mov	r2, #1
   1bbfc:	bl	19030 <main@@Base+0x5b58>
   1bc00:	cmp	r0, r4
   1bc04:	beq	1bc20 <main@@Base+0x8748>
   1bc08:	mov	r1, r0
   1bc0c:	mov	r0, r6
   1bc10:	mov	r2, r5
   1bc14:	mov	r3, r8
   1bc18:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1bc1c:	b	19590 <main@@Base+0x60b8>
   1bc20:	mov	r0, r7
   1bc24:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1bc28:	push	{r4, r5, r6, sl, fp, lr}
   1bc2c:	add	fp, sp, #16
   1bc30:	mov	r4, r2
   1bc34:	mov	r5, r0
   1bc38:	ldr	r6, [fp, #8]
   1bc3c:	mov	r0, #0
   1bc40:	str	r0, [r6]
   1bc44:	cmp	r3, #11
   1bc48:	bhi	1bc98 <main@@Base+0x87c0>
   1bc4c:	add	r0, pc, #0
   1bc50:	ldr	pc, [r0, r3, lsl #2]
   1bc54:	ldrdeq	fp, [r1], -r4
   1bc58:			; <UNDEFINED> instruction: 0x0001bcb4
   1bc5c:	andeq	fp, r1, r4, ror #25
   1bc60:			; <UNDEFINED> instruction: 0x0001bcb4
   1bc64:			; <UNDEFINED> instruction: 0x0001bcb4
   1bc68:			; <UNDEFINED> instruction: 0x0001bcb4
   1bc6c:			; <UNDEFINED> instruction: 0x0001bcb4
   1bc70:			; <UNDEFINED> instruction: 0x0001bcb4
   1bc74:	strdeq	fp, [r1], -r8
   1bc78:	andeq	fp, r1, r4, lsl #25
   1bc7c:	andeq	fp, r1, r4, lsl #25
   1bc80:	andeq	fp, r1, r0, lsr #25
   1bc84:	mov	r0, r5
   1bc88:	mov	r2, r4
   1bc8c:	mov	r3, r6
   1bc90:	bl	1c04c <main@@Base+0x8b74>
   1bc94:	b	1bd08 <main@@Base+0x8830>
   1bc98:	cmp	r3, #255	; 0xff
   1bc9c:	bne	1bcb4 <main@@Base+0x87dc>
   1bca0:	mov	r0, r5
   1bca4:	mov	r2, r4
   1bca8:	mov	r3, r6
   1bcac:	bl	21f9c <flatcc_json_parser_build_string@@Base>
   1bcb0:	b	1bd08 <main@@Base+0x8830>
   1bcb4:	ldrb	r0, [r5, #8]
   1bcb8:	tst	r0, #1
   1bcbc:	bne	1bd40 <main@@Base+0x8868>
   1bcc0:	mov	r0, r5
   1bcc4:	mov	r2, r4
   1bcc8:	mov	r3, #15
   1bccc:	pop	{r4, r5, r6, sl, fp, lr}
   1bcd0:	b	20800 <flatcc_json_parser_set_error@@Base>
   1bcd4:	mov	r0, r5
   1bcd8:	mov	r2, r4
   1bcdc:	pop	{r4, r5, r6, sl, fp, lr}
   1bce0:	b	19a60 <main@@Base+0x6588>
   1bce4:	mov	r0, r5
   1bce8:	mov	r2, r4
   1bcec:	mov	r3, r6
   1bcf0:	bl	1bd78 <main@@Base+0x88a0>
   1bcf4:	b	1bd08 <main@@Base+0x8830>
   1bcf8:	mov	r0, r5
   1bcfc:	mov	r2, r4
   1bd00:	mov	r3, r6
   1bd04:	bl	1bfc4 <main@@Base+0x8aec>
   1bd08:	mov	r1, r0
   1bd0c:	ldr	r0, [r5, #24]
   1bd10:	cmp	r0, #0
   1bd14:	bne	1bd24 <main@@Base+0x884c>
   1bd18:	ldr	r0, [r6]
   1bd1c:	cmp	r0, #0
   1bd20:	beq	1bd2c <main@@Base+0x8854>
   1bd24:	mov	r0, r1
   1bd28:	pop	{r4, r5, r6, sl, fp, pc}
   1bd2c:	mov	r0, r5
   1bd30:	mov	r2, r4
   1bd34:	mov	r3, #33	; 0x21
   1bd38:	pop	{r4, r5, r6, sl, fp, lr}
   1bd3c:	b	20800 <flatcc_json_parser_set_error@@Base>
   1bd40:	mov	r0, r5
   1bd44:	mov	r2, r4
   1bd48:	pop	{r4, r5, r6, sl, fp, lr}
   1bd4c:	b	21124 <flatcc_json_parser_generic_json@@Base>
   1bd50:	add	r0, r0, #1
   1bd54:	uxtb	r1, r0
   1bd58:	cmp	r1, #12
   1bd5c:	movhi	r0, #0
   1bd60:	bxhi	lr
   1bd64:	sxtb	r0, r0
   1bd68:	movw	r1, #16544	; 0x40a0
   1bd6c:	movt	r1, #2
   1bd70:	ldr	r0, [r1, r0, lsl #2]
   1bd74:	bx	lr
   1bd78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd7c:	add	fp, sp, #28
   1bd80:	sub	sp, sp, #20
   1bd84:	mov	r7, r3
   1bd88:	mov	r4, r2
   1bd8c:	mov	r6, r1
   1bd90:	mov	r5, r0
   1bd94:	mov	r0, #0
   1bd98:	str	r0, [r3]
   1bd9c:	ldr	r0, [r5]
   1bda0:	mov	r1, #1
   1bda4:	bl	1e01c <flatcc_builder_start_table@@Base>
   1bda8:	cmp	r0, #0
   1bdac:	bne	1bfa0 <main@@Base+0x8ac8>
   1bdb0:	add	r3, sp, #16
   1bdb4:	mov	r0, r5
   1bdb8:	mov	r1, r6
   1bdbc:	mov	r2, r4
   1bdc0:	bl	15c28 <main@@Base+0x2750>
   1bdc4:	mov	r6, r0
   1bdc8:	ldr	r0, [sp, #16]
   1bdcc:	cmp	r0, #0
   1bdd0:	str	r7, [sp, #8]
   1bdd4:	beq	1bf7c <main@@Base+0x8aa4>
   1bdd8:	movw	r8, #28530	; 0x6f72
   1bddc:	movt	r8, #29559	; 0x7377
   1bde0:	movw	sl, #24948	; 0x6174
   1bde4:	movt	sl, #25695	; 0x645f
   1bde8:	add	r9, sp, #16
   1bdec:	b	1be64 <main@@Base+0x898c>
   1bdf0:	str	r6, [sp]
   1bdf4:	mov	r0, r5
   1bdf8:	mov	r1, r8
   1bdfc:	mov	r2, r4
   1be00:	movw	r3, #29436	; 0x72fc
   1be04:	movt	r3, #3
   1be08:	bl	18578 <main@@Base+0x50a0>
   1be0c:	mov	r6, r0
   1be10:	cmp	r0, r8
   1be14:	cmpne	r6, r4
   1be18:	beq	1bfa0 <main@@Base+0x8ac8>
   1be1c:	ldr	r8, [sp, #12]
   1be20:	cmp	r8, #0
   1be24:	bne	1be34 <main@@Base+0x895c>
   1be28:	ldrb	r0, [r5, #8]
   1be2c:	tst	r0, #2
   1be30:	beq	1be58 <main@@Base+0x8980>
   1be34:	ldr	r0, [r5]
   1be38:	mov	r1, #0
   1be3c:	mov	r2, #4
   1be40:	mov	r3, #4
   1be44:	bl	1ee30 <flatcc_builder_table_add@@Base>
   1be48:	cmp	r0, #0
   1be4c:	beq	1bfa0 <main@@Base+0x8ac8>
   1be50:	mov	r1, r8
   1be54:	bl	186d8 <main@@Base+0x5200>
   1be58:	movw	r8, #28530	; 0x6f72
   1be5c:	movt	r8, #29559	; 0x7377
   1be60:	b	1bf58 <main@@Base+0x8a80>
   1be64:	mov	r0, r5
   1be68:	mov	r1, r6
   1be6c:	mov	r2, r4
   1be70:	bl	15cb8 <main@@Base+0x27e0>
   1be74:	mov	r6, r0
   1be78:	mov	r1, r4
   1be7c:	bl	15d00 <main@@Base+0x2828>
   1be80:	eor	r1, r1, r8
   1be84:	eor	r0, r0, sl
   1be88:	orrs	r0, r0, r1
   1be8c:	bne	1bf38 <main@@Base+0x8a60>
   1be90:	add	r7, r6, #8
   1be94:	mov	r0, r7
   1be98:	mov	r1, r4
   1be9c:	bl	15d00 <main@@Base+0x2828>
   1bea0:	movw	r2, #25451	; 0x636b
   1bea4:	movt	r2, #29793	; 0x7461
   1bea8:	eor	r1, r1, r2
   1beac:	movw	r2, #24941	; 0x616d
   1beb0:	movt	r2, #24420	; 0x5f64
   1beb4:	eor	r0, r0, r2
   1beb8:	orrs	r0, r0, r1
   1bebc:	bne	1bf44 <main@@Base+0x8a6c>
   1bec0:	add	r6, r6, #16
   1bec4:	mov	r0, r6
   1bec8:	mov	r1, r4
   1becc:	bl	15d00 <main@@Base+0x2828>
   1bed0:	bic	r0, r1, #255	; 0xff
   1bed4:	movw	r1, #25856	; 0x6500
   1bed8:	movt	r1, #24935	; 0x6167
   1bedc:	teq	r0, r1
   1bee0:	bne	1bf38 <main@@Base+0x8a60>
   1bee4:	mov	r0, r5
   1bee8:	mov	r1, r6
   1beec:	mov	r2, r4
   1bef0:	mov	r3, #3
   1bef4:	bl	15d04 <main@@Base+0x282c>
   1bef8:	mov	r7, r0
   1befc:	cmp	r6, r0
   1bf00:	beq	1bf44 <main@@Base+0x8a6c>
   1bf04:	mov	r0, #0
   1bf08:	str	r0, [sp, #12]
   1bf0c:	mov	r0, r5
   1bf10:	mov	r1, r7
   1bf14:	mov	r2, r4
   1bf18:	add	r6, sp, #12
   1bf1c:	mov	r3, r6
   1bf20:	bl	184e8 <main@@Base+0x5010>
   1bf24:	mov	r8, r0
   1bf28:	cmp	r7, r0
   1bf2c:	beq	1bdf0 <main@@Base+0x8918>
   1bf30:	mov	r6, r8
   1bf34:	b	1be1c <main@@Base+0x8944>
   1bf38:	mov	r0, r5
   1bf3c:	mov	r1, r6
   1bf40:	b	1bf4c <main@@Base+0x8a74>
   1bf44:	mov	r0, r5
   1bf48:	mov	r1, r7
   1bf4c:	mov	r2, r4
   1bf50:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1bf54:	mov	r6, r0
   1bf58:	mov	r0, r5
   1bf5c:	mov	r1, r6
   1bf60:	mov	r2, r4
   1bf64:	mov	r3, r9
   1bf68:	bl	18ea8 <main@@Base+0x59d0>
   1bf6c:	mov	r6, r0
   1bf70:	ldr	r0, [sp, #16]
   1bf74:	cmp	r0, #0
   1bf78:	bne	1be64 <main@@Base+0x898c>
   1bf7c:	ldr	r0, [r5, #24]
   1bf80:	cmp	r0, #0
   1bf84:	bne	1bfa0 <main@@Base+0x8ac8>
   1bf88:	ldr	r0, [r5]
   1bf8c:	bl	1e73c <flatcc_builder_end_table@@Base>
   1bf90:	ldr	r1, [sp, #8]
   1bf94:	str	r0, [r1]
   1bf98:	cmp	r0, #0
   1bf9c:	bne	1bfb8 <main@@Base+0x8ae0>
   1bfa0:	mov	r0, r5
   1bfa4:	mov	r1, r6
   1bfa8:	mov	r2, r4
   1bfac:	mov	r3, #33	; 0x21
   1bfb0:	bl	20800 <flatcc_json_parser_set_error@@Base>
   1bfb4:	mov	r6, r0
   1bfb8:	mov	r0, r6
   1bfbc:	sub	sp, fp, #28
   1bfc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bfc4:	push	{r4, r5, r6, r7, fp, lr}
   1bfc8:	add	fp, sp, #16
   1bfcc:	mov	r7, r3
   1bfd0:	mov	r4, r2
   1bfd4:	mov	r6, r1
   1bfd8:	mov	r5, r0
   1bfdc:	mov	r0, #0
   1bfe0:	str	r0, [r3]
   1bfe4:	ldr	r0, [r5]
   1bfe8:	mov	r1, #2
   1bfec:	mov	r2, #2
   1bff0:	bl	1d61c <flatcc_builder_start_struct@@Base>
   1bff4:	cmp	r0, #0
   1bff8:	beq	1c034 <main@@Base+0x8b5c>
   1bffc:	mov	r3, r0
   1c000:	mov	r0, r5
   1c004:	mov	r1, r6
   1c008:	mov	r2, r4
   1c00c:	bl	1c0d4 <main@@Base+0x8bfc>
   1c010:	mov	r6, r0
   1c014:	cmp	r0, r4
   1c018:	beq	1c034 <main@@Base+0x8b5c>
   1c01c:	ldr	r0, [r5]
   1c020:	bl	1d6f8 <flatcc_builder_end_struct@@Base>
   1c024:	str	r0, [r7]
   1c028:	cmp	r0, #0
   1c02c:	movne	r0, r6
   1c030:	popne	{r4, r5, r6, r7, fp, pc}
   1c034:	mov	r0, r5
   1c038:	mov	r1, r6
   1c03c:	mov	r2, r4
   1c040:	mov	r3, #33	; 0x21
   1c044:	pop	{r4, r5, r6, r7, fp, lr}
   1c048:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c04c:	push	{r4, r5, r6, r7, fp, lr}
   1c050:	add	fp, sp, #16
   1c054:	mov	r7, r3
   1c058:	mov	r4, r2
   1c05c:	mov	r6, r1
   1c060:	mov	r5, r0
   1c064:	mov	r0, #0
   1c068:	str	r0, [r3]
   1c06c:	ldr	r0, [r5]
   1c070:	mov	r1, #4
   1c074:	mov	r2, #4
   1c078:	bl	1d61c <flatcc_builder_start_struct@@Base>
   1c07c:	cmp	r0, #0
   1c080:	beq	1c0bc <main@@Base+0x8be4>
   1c084:	mov	r3, r0
   1c088:	mov	r0, r5
   1c08c:	mov	r1, r6
   1c090:	mov	r2, r4
   1c094:	bl	1c4e4 <main@@Base+0x900c>
   1c098:	mov	r6, r0
   1c09c:	cmp	r0, r4
   1c0a0:	beq	1c0bc <main@@Base+0x8be4>
   1c0a4:	ldr	r0, [r5]
   1c0a8:	bl	1d6f8 <flatcc_builder_end_struct@@Base>
   1c0ac:	str	r0, [r7]
   1c0b0:	cmp	r0, #0
   1c0b4:	movne	r0, r6
   1c0b8:	popne	{r4, r5, r6, r7, fp, pc}
   1c0bc:	mov	r0, r5
   1c0c0:	mov	r1, r6
   1c0c4:	mov	r2, r4
   1c0c8:	mov	r3, #33	; 0x21
   1c0cc:	pop	{r4, r5, r6, r7, fp, lr}
   1c0d0:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c0d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c0d8:	add	fp, sp, #28
   1c0dc:	sub	sp, sp, #20
   1c0e0:	str	r3, [sp, #8]
   1c0e4:	mov	r4, r2
   1c0e8:	mov	r5, r0
   1c0ec:	add	r3, sp, #16
   1c0f0:	bl	15c28 <main@@Base+0x2750>
   1c0f4:	mov	r1, r0
   1c0f8:	ldr	r0, [sp, #16]
   1c0fc:	cmp	r0, #0
   1c100:	beq	1c27c <main@@Base+0x8da4>
   1c104:	movw	r8, #26994	; 0x6972
   1c108:	movt	r8, #26721	; 0x6861
   1c10c:	movw	r9, #25966	; 0x656e
   1c110:	movt	r9, #24428	; 0x5f6c
   1c114:	movw	r7, #26624	; 0x6800
   1c118:	movt	r7, #26484	; 0x6774
   1c11c:	add	sl, sp, #14
   1c120:	mov	r0, r5
   1c124:	mov	r2, r4
   1c128:	bl	15cb8 <main@@Base+0x27e0>
   1c12c:	mov	r6, r0
   1c130:	mov	r1, r4
   1c134:	bl	15d00 <main@@Base+0x2828>
   1c138:	eor	r1, r1, r8
   1c13c:	eor	r0, r0, r9
   1c140:	orrs	r0, r0, r1
   1c144:	bne	1c1bc <main@@Base+0x8ce4>
   1c148:	add	r6, r6, #8
   1c14c:	mov	r0, r6
   1c150:	mov	r1, r4
   1c154:	bl	15d00 <main@@Base+0x2828>
   1c158:	bic	r0, r1, #255	; 0xff
   1c15c:	teq	r0, r7
   1c160:	bne	1c1bc <main@@Base+0x8ce4>
   1c164:	mov	r0, r5
   1c168:	mov	r1, r6
   1c16c:	mov	r2, r4
   1c170:	mov	r3, #3
   1c174:	bl	15d04 <main@@Base+0x282c>
   1c178:	mov	r8, r0
   1c17c:	cmp	r6, r0
   1c180:	beq	1c1d4 <main@@Base+0x8cfc>
   1c184:	mov	r0, #0
   1c188:	strh	r0, [sp, #14]
   1c18c:	mov	r0, r5
   1c190:	mov	r1, r8
   1c194:	mov	r2, r4
   1c198:	mov	r9, sl
   1c19c:	mov	r3, sl
   1c1a0:	bl	1c288 <main@@Base+0x8db0>
   1c1a4:	mov	r6, r0
   1c1a8:	cmp	r8, r0
   1c1ac:	beq	1c1f4 <main@@Base+0x8d1c>
   1c1b0:	movw	r8, #26994	; 0x6972
   1c1b4:	movt	r8, #26721	; 0x6861
   1c1b8:	b	1c22c <main@@Base+0x8d54>
   1c1bc:	mov	r0, r5
   1c1c0:	mov	r1, r6
   1c1c4:	mov	r2, r4
   1c1c8:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1c1cc:	mov	r6, r0
   1c1d0:	b	1c240 <main@@Base+0x8d68>
   1c1d4:	mov	r0, r5
   1c1d8:	mov	r1, r8
   1c1dc:	mov	r2, r4
   1c1e0:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1c1e4:	mov	r6, r0
   1c1e8:	movw	r8, #26994	; 0x6972
   1c1ec:	movt	r8, #26721	; 0x6861
   1c1f0:	b	1c238 <main@@Base+0x8d60>
   1c1f4:	str	r9, [sp]
   1c1f8:	mov	r0, r5
   1c1fc:	mov	r1, r6
   1c200:	mov	r2, r4
   1c204:	movw	r3, #29448	; 0x7308
   1c208:	movt	r3, #3
   1c20c:	bl	1c318 <main@@Base+0x8e40>
   1c210:	mov	r1, r0
   1c214:	cmp	r0, r6
   1c218:	movw	r8, #26994	; 0x6972
   1c21c:	movt	r8, #26721	; 0x6861
   1c220:	cmpne	r1, r4
   1c224:	beq	1c268 <main@@Base+0x8d90>
   1c228:	mov	r6, r1
   1c22c:	ldrh	r1, [sp, #14]
   1c230:	ldr	r0, [sp, #8]
   1c234:	bl	1c478 <main@@Base+0x8fa0>
   1c238:	movw	r9, #25966	; 0x656e
   1c23c:	movt	r9, #24428	; 0x5f6c
   1c240:	mov	r0, r5
   1c244:	mov	r1, r6
   1c248:	mov	r2, r4
   1c24c:	add	r3, sp, #16
   1c250:	bl	18ea8 <main@@Base+0x59d0>
   1c254:	mov	r1, r0
   1c258:	ldr	r0, [sp, #16]
   1c25c:	cmp	r0, #0
   1c260:	bne	1c120 <main@@Base+0x8c48>
   1c264:	b	1c27c <main@@Base+0x8da4>
   1c268:	mov	r0, r5
   1c26c:	mov	r2, r4
   1c270:	mov	r3, #33	; 0x21
   1c274:	bl	20800 <flatcc_json_parser_set_error@@Base>
   1c278:	mov	r1, r0
   1c27c:	mov	r0, r1
   1c280:	sub	sp, fp, #28
   1c284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c288:	push	{r4, r5, r6, r7, fp, lr}
   1c28c:	add	fp, sp, #16
   1c290:	sub	sp, sp, #24
   1c294:	mov	r7, r1
   1c298:	mov	r6, r0
   1c29c:	mov	r0, #0
   1c2a0:	str	r0, [sp, #20]
   1c2a4:	str	r0, [sp, #16]
   1c2a8:	str	r0, [sp, #12]
   1c2ac:	strh	r0, [r3]
   1c2b0:	cmp	r1, r2
   1c2b4:	beq	1c30c <main@@Base+0x8e34>
   1c2b8:	mov	r5, r3
   1c2bc:	mov	r4, r2
   1c2c0:	add	r0, sp, #16
   1c2c4:	str	r0, [sp]
   1c2c8:	add	r3, sp, #12
   1c2cc:	mov	r0, r6
   1c2d0:	mov	r1, r7
   1c2d4:	bl	21abc <flatcc_json_parser_integer@@Base>
   1c2d8:	mov	r1, r0
   1c2dc:	cmp	r0, r7
   1c2e0:	beq	1c308 <main@@Base+0x8e30>
   1c2e4:	ldr	r3, [sp, #12]
   1c2e8:	ldr	r0, [sp, #16]
   1c2ec:	ldr	r2, [sp, #20]
   1c2f0:	stm	sp, {r0, r2, r5}
   1c2f4:	mov	r0, r6
   1c2f8:	mov	r2, r4
   1c2fc:	bl	1c498 <main@@Base+0x8fc0>
   1c300:	mov	r7, r0
   1c304:	b	1c30c <main@@Base+0x8e34>
   1c308:	mov	r7, r1
   1c30c:	mov	r0, r7
   1c310:	sub	sp, fp, #16
   1c314:	pop	{r4, r5, r6, r7, fp, pc}
   1c318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c31c:	add	fp, sp, #28
   1c320:	sub	sp, sp, #44	; 0x2c
   1c324:	mov	r4, r3
   1c328:	mov	r7, r2
   1c32c:	mov	r5, r0
   1c330:	mov	sl, #0
   1c334:	strh	sl, [fp, #-30]	; 0xffffffe2
   1c338:	ldr	r0, [fp, #8]
   1c33c:	strh	sl, [r0]
   1c340:	mov	r0, r5
   1c344:	bl	19974 <main@@Base+0x649c>
   1c348:	mov	r6, r0
   1c34c:	cmp	r0, r7
   1c350:	beq	1c430 <main@@Base+0x8f58>
   1c354:	add	r0, r4, #4
   1c358:	add	r9, sp, #32
   1c35c:	add	r8, sp, #28
   1c360:	str	r0, [sp, #16]
   1c364:	str	sl, [sp, #20]
   1c368:	mov	sl, r0
   1c36c:	ldr	r4, [sl, #-4]
   1c370:	str	r9, [sp]
   1c374:	add	r0, sp, #24
   1c378:	str	r0, [sp, #4]
   1c37c:	mov	r0, r5
   1c380:	mov	r1, r6
   1c384:	mov	r2, r7
   1c388:	mov	r3, r8
   1c38c:	blx	r4
   1c390:	mov	r4, r0
   1c394:	cmp	r0, r7
   1c398:	beq	1c450 <main@@Base+0x8f78>
   1c39c:	cmp	r4, r6
   1c3a0:	bne	1c3b8 <main@@Base+0x8ee0>
   1c3a4:	ldr	r0, [sl], #4
   1c3a8:	cmp	r0, #0
   1c3ac:	mov	r6, r4
   1c3b0:	bne	1c36c <main@@Base+0x8e94>
   1c3b4:	b	1c438 <main@@Base+0x8f60>
   1c3b8:	ldr	sl, [sp, #20]
   1c3bc:	cmp	sl, #0
   1c3c0:	ldrne	r0, [r5, #12]
   1c3c4:	cmpne	r0, #0
   1c3c8:	bne	1c464 <main@@Base+0x8f8c>
   1c3cc:	ldr	r3, [sp, #28]
   1c3d0:	ldr	r0, [sp, #32]
   1c3d4:	ldr	r1, [sp, #36]	; 0x24
   1c3d8:	stm	sp, {r0, r1}
   1c3dc:	sub	r0, fp, #30
   1c3e0:	str	r0, [sp, #8]
   1c3e4:	mov	r0, r5
   1c3e8:	mov	r1, r4
   1c3ec:	mov	r2, r7
   1c3f0:	bl	1c498 <main@@Base+0x8fc0>
   1c3f4:	cmp	r0, r7
   1c3f8:	beq	1c45c <main@@Base+0x8f84>
   1c3fc:	add	sl, sl, #1
   1c400:	ldr	r0, [fp, #8]
   1c404:	mov	r2, r0
   1c408:	ldrh	r0, [r0]
   1c40c:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   1c410:	add	r0, r0, r1
   1c414:	strh	r0, [r2]
   1c418:	ldr	r0, [sp, #24]
   1c41c:	cmp	r0, #0
   1c420:	mov	r6, r4
   1c424:	ldr	r0, [sp, #16]
   1c428:	bne	1c364 <main@@Base+0x8e8c>
   1c42c:	b	1c450 <main@@Base+0x8f78>
   1c430:	mov	r4, r6
   1c434:	b	1c450 <main@@Base+0x8f78>
   1c438:	mov	r0, r5
   1c43c:	mov	r1, r4
   1c440:	mov	r2, r7
   1c444:	mov	r3, #23
   1c448:	bl	20800 <flatcc_json_parser_set_error@@Base>
   1c44c:	mov	r4, r0
   1c450:	mov	r0, r4
   1c454:	sub	sp, fp, #28
   1c458:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c45c:	mov	r4, r7
   1c460:	b	1c450 <main@@Base+0x8f78>
   1c464:	mov	r0, r5
   1c468:	mov	r1, r4
   1c46c:	mov	r2, r7
   1c470:	mov	r3, #14
   1c474:	b	1c448 <main@@Base+0x8f70>
   1c478:	push	{r4, r5, fp, lr}
   1c47c:	add	fp, sp, #8
   1c480:	mov	r4, r1
   1c484:	mov	r5, r0
   1c488:	mov	r0, r1
   1c48c:	bl	1c4e0 <main@@Base+0x9008>
   1c490:	strh	r4, [r5]
   1c494:	pop	{r4, r5, fp, pc}
   1c498:	push	{fp, lr}
   1c49c:	mov	fp, sp
   1c4a0:	cmp	r3, #0
   1c4a4:	beq	1c4b4 <main@@Base+0x8fdc>
   1c4a8:	mov	r3, #8
   1c4ac:	pop	{fp, lr}
   1c4b0:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c4b4:	ldr	ip, [fp, #12]
   1c4b8:	ldr	lr, [fp, #8]
   1c4bc:	subs	r3, lr, #65536	; 0x10000
   1c4c0:	sbcs	r3, ip, #0
   1c4c4:	ldrcc	r0, [fp, #16]
   1c4c8:	strhcc	lr, [r0]
   1c4cc:	movcc	r0, r1
   1c4d0:	popcc	{fp, pc}
   1c4d4:	mov	r3, #7
   1c4d8:	pop	{fp, lr}
   1c4dc:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c4e0:	bx	lr
   1c4e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4e8:	add	fp, sp, #28
   1c4ec:	sub	sp, sp, #20
   1c4f0:	str	r3, [sp, #8]
   1c4f4:	mov	r4, r2
   1c4f8:	mov	r5, r0
   1c4fc:	add	r3, sp, #16
   1c500:	bl	15c28 <main@@Base+0x2750>
   1c504:	mov	r1, r0
   1c508:	ldr	r0, [sp, #16]
   1c50c:	cmp	r0, #0
   1c510:	beq	1c68c <main@@Base+0x91b4>
   1c514:	movw	r8, #28523	; 0x6f6b
   1c518:	movt	r8, #25199	; 0x626f
   1c51c:	movw	r9, #29285	; 0x7265
   1c520:	movt	r9, #29535	; 0x735f
   1c524:	movw	r7, #0
   1c528:	movt	r7, #24932	; 0x6164
   1c52c:	add	sl, sp, #12
   1c530:	mov	r0, r5
   1c534:	mov	r2, r4
   1c538:	bl	15cb8 <main@@Base+0x27e0>
   1c53c:	mov	r6, r0
   1c540:	mov	r1, r4
   1c544:	bl	15d00 <main@@Base+0x2828>
   1c548:	eor	r1, r1, r8
   1c54c:	eor	r0, r0, r9
   1c550:	orrs	r0, r0, r1
   1c554:	bne	1c5cc <main@@Base+0x90f4>
   1c558:	add	r6, r6, #8
   1c55c:	mov	r0, r6
   1c560:	mov	r1, r4
   1c564:	bl	15d00 <main@@Base+0x2828>
   1c568:	bfc	r1, #0, #16
   1c56c:	teq	r1, r7
   1c570:	bne	1c5cc <main@@Base+0x90f4>
   1c574:	mov	r0, r5
   1c578:	mov	r1, r6
   1c57c:	mov	r2, r4
   1c580:	mov	r3, #2
   1c584:	bl	15d04 <main@@Base+0x282c>
   1c588:	mov	r8, r0
   1c58c:	cmp	r6, r0
   1c590:	beq	1c5e4 <main@@Base+0x910c>
   1c594:	mov	r0, #0
   1c598:	str	r0, [sp, #12]
   1c59c:	mov	r0, r5
   1c5a0:	mov	r1, r8
   1c5a4:	mov	r2, r4
   1c5a8:	mov	r9, sl
   1c5ac:	mov	r3, sl
   1c5b0:	bl	184e8 <main@@Base+0x5010>
   1c5b4:	mov	r6, r0
   1c5b8:	cmp	r8, r0
   1c5bc:	beq	1c604 <main@@Base+0x912c>
   1c5c0:	movw	r8, #28523	; 0x6f6b
   1c5c4:	movt	r8, #25199	; 0x626f
   1c5c8:	b	1c63c <main@@Base+0x9164>
   1c5cc:	mov	r0, r5
   1c5d0:	mov	r1, r6
   1c5d4:	mov	r2, r4
   1c5d8:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1c5dc:	mov	r6, r0
   1c5e0:	b	1c650 <main@@Base+0x9178>
   1c5e4:	mov	r0, r5
   1c5e8:	mov	r1, r8
   1c5ec:	mov	r2, r4
   1c5f0:	bl	20f80 <flatcc_json_parser_unmatched_symbol@@Base>
   1c5f4:	mov	r6, r0
   1c5f8:	movw	r8, #28523	; 0x6f6b
   1c5fc:	movt	r8, #25199	; 0x626f
   1c600:	b	1c648 <main@@Base+0x9170>
   1c604:	str	r9, [sp]
   1c608:	mov	r0, r5
   1c60c:	mov	r1, r6
   1c610:	mov	r2, r4
   1c614:	movw	r3, #29460	; 0x7314
   1c618:	movt	r3, #3
   1c61c:	bl	18578 <main@@Base+0x50a0>
   1c620:	mov	r1, r0
   1c624:	cmp	r0, r6
   1c628:	movw	r8, #28523	; 0x6f6b
   1c62c:	movt	r8, #25199	; 0x626f
   1c630:	cmpne	r1, r4
   1c634:	beq	1c678 <main@@Base+0x91a0>
   1c638:	mov	r6, r1
   1c63c:	ldr	r1, [sp, #12]
   1c640:	ldr	r0, [sp, #8]
   1c644:	bl	186d8 <main@@Base+0x5200>
   1c648:	movw	r9, #29285	; 0x7265
   1c64c:	movt	r9, #29535	; 0x735f
   1c650:	mov	r0, r5
   1c654:	mov	r1, r6
   1c658:	mov	r2, r4
   1c65c:	add	r3, sp, #16
   1c660:	bl	18ea8 <main@@Base+0x59d0>
   1c664:	mov	r1, r0
   1c668:	ldr	r0, [sp, #16]
   1c66c:	cmp	r0, #0
   1c670:	bne	1c530 <main@@Base+0x9058>
   1c674:	b	1c68c <main@@Base+0x91b4>
   1c678:	mov	r0, r5
   1c67c:	mov	r2, r4
   1c680:	mov	r3, #33	; 0x21
   1c684:	bl	20800 <flatcc_json_parser_set_error@@Base>
   1c688:	mov	r1, r0
   1c68c:	mov	r0, r1
   1c690:	sub	sp, fp, #28
   1c694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c698:	cmp	r3, #0
   1c69c:	beq	1c6a8 <main@@Base+0x91d0>
   1c6a0:	mov	r3, #8
   1c6a4:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c6a8:	ldr	r2, [sp]
   1c6ac:	ldmib	sp, {r0, r3}
   1c6b0:	orrs	r0, r2, r0
   1c6b4:	movwne	r0, #1
   1c6b8:	strb	r0, [r3]
   1c6bc:	mov	r0, r1
   1c6c0:	bx	lr
   1c6c4:	bx	lr
   1c6c8:	push	{r4, r5, fp, lr}
   1c6cc:	add	fp, sp, #8
   1c6d0:	mov	r4, r1
   1c6d4:	mov	r5, r0
   1c6d8:	mov	r0, r2
   1c6dc:	mov	r1, r3
   1c6e0:	bl	23d10 <flatcc_json_parser_struct_as_root@@Base+0xfdc>
   1c6e4:	ldr	r1, [fp, #8]
   1c6e8:	vmov	s0, r0
   1c6ec:	vneg.f32	s2, s0
   1c6f0:	cmp	r4, #0
   1c6f4:	vseleq.f32	s0, s0, s2
   1c6f8:	vstr	s0, [r1]
   1c6fc:	mov	r0, r5
   1c700:	pop	{r4, r5, fp, pc}
   1c704:	bx	lr
   1c708:	push	{r4, sl, fp, lr}
   1c70c:	add	fp, sp, #8
   1c710:	ldr	r4, [fp, #12]
   1c714:	ldr	ip, [fp, #8]
   1c718:	ldr	lr, [fp, #16]
   1c71c:	cmp	r3, #0
   1c720:	beq	1c73c <main@@Base+0x9264>
   1c724:	subs	r3, ip, #-2147483647	; 0x80000001
   1c728:	sbcs	r3, r4, #0
   1c72c:	bcc	1c754 <main@@Base+0x927c>
   1c730:	mov	r3, #8
   1c734:	pop	{r4, sl, fp, lr}
   1c738:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c73c:	subs	r3, ip, #-2147483648	; 0x80000000
   1c740:	sbcs	r3, r4, #0
   1c744:	bcc	1c758 <main@@Base+0x9280>
   1c748:	mov	r3, #7
   1c74c:	pop	{r4, sl, fp, lr}
   1c750:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c754:	rsb	ip, ip, #0
   1c758:	str	ip, [lr]
   1c75c:	mov	r0, r1
   1c760:	pop	{r4, sl, fp, pc}
   1c764:	bx	lr
   1c768:	push	{r4, r5, fp, lr}
   1c76c:	add	fp, sp, #8
   1c770:	add	ip, fp, #8
   1c774:	ldm	ip, {r4, r5, ip}
   1c778:	cmp	r3, #0
   1c77c:	beq	1c798 <main@@Base+0x92c0>
   1c780:	subs	r3, r4, #1
   1c784:	sbcs	r3, r5, #-2147483648	; 0x80000000
   1c788:	bcc	1c7ac <main@@Base+0x92d4>
   1c78c:	mov	r3, #8
   1c790:	pop	{r4, r5, fp, lr}
   1c794:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c798:	cmn	r5, #1
   1c79c:	bgt	1c7b4 <main@@Base+0x92dc>
   1c7a0:	mov	r3, #7
   1c7a4:	pop	{r4, r5, fp, lr}
   1c7a8:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c7ac:	rsbs	r4, r4, #0
   1c7b0:	rsc	r5, r5, #0
   1c7b4:	strd	r4, [ip]
   1c7b8:	mov	r0, r1
   1c7bc:	pop	{r4, r5, fp, pc}
   1c7c0:	bx	lr
   1c7c4:	cmp	r3, #0
   1c7c8:	beq	1c7d4 <main@@Base+0x92fc>
   1c7cc:	mov	r3, #8
   1c7d0:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c7d4:	ldr	r3, [sp, #4]
   1c7d8:	cmp	r3, #0
   1c7dc:	beq	1c7e8 <main@@Base+0x9310>
   1c7e0:	mov	r3, #7
   1c7e4:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c7e8:	ldr	r0, [sp]
   1c7ec:	ldr	r2, [sp, #8]
   1c7f0:	str	r0, [r2]
   1c7f4:	mov	r0, r1
   1c7f8:	bx	lr
   1c7fc:	bx	lr
   1c800:	cmp	r3, #0
   1c804:	beq	1c810 <main@@Base+0x9338>
   1c808:	mov	r3, #8
   1c80c:	b	20800 <flatcc_json_parser_set_error@@Base>
   1c810:	ldm	sp, {r2, r3}
   1c814:	ldr	r0, [sp, #8]
   1c818:	strd	r2, [r0]
   1c81c:	mov	r0, r1
   1c820:	bx	lr
   1c824:	bx	lr
   1c828:	push	{r4, r5, fp, lr}
   1c82c:	add	fp, sp, #8
   1c830:	mov	r4, r1
   1c834:	mov	r5, r0
   1c838:	mov	r0, r2
   1c83c:	mov	r1, r3
   1c840:	bl	23ad8 <flatcc_json_parser_struct_as_root@@Base+0xda4>
   1c844:	eor	r2, r1, #-2147483648	; 0x80000000
   1c848:	ldr	r3, [fp, #8]
   1c84c:	vmov	d16, r0, r1
   1c850:	vmov	d17, r0, r2
   1c854:	cmp	r4, #0
   1c858:	vseleq.f64	d16, d16, d17
   1c85c:	vstr	d16, [r3]
   1c860:	mov	r0, r5
   1c864:	pop	{r4, r5, fp, pc}
   1c868:	bx	lr

0001c86c <flatcc_builder_default_alloc@@Base>:
   1c86c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c870:	add	fp, sp, #24
   1c874:	mov	r4, r1
   1c878:	cmp	r2, #0
   1c87c:	beq	1c8c4 <flatcc_builder_default_alloc@@Base+0x58>
   1c880:	mov	r8, r3
   1c884:	ldr	r0, [fp, #8]
   1c888:	sub	r1, r0, #1
   1c88c:	cmp	r1, #6
   1c890:	bhi	1c8f0 <flatcc_builder_default_alloc@@Base+0x84>
   1c894:	mov	r0, #256	; 0x100
   1c898:	add	r3, pc, #0
   1c89c:	ldr	pc, [r3, r1, lsl #2]
   1c8a0:	andeq	ip, r1, r4, lsl #18
   1c8a4:	strdeq	ip, [r1], -r0
   1c8a8:	strdeq	ip, [r1], -r0
   1c8ac:			; <UNDEFINED> instruction: 0x0001c8bc
   1c8b0:	strdeq	ip, [r1], -r8
   1c8b4:	strdeq	ip, [r1], -r0
   1c8b8:	andeq	ip, r1, r0, lsl #18
   1c8bc:	mov	r0, #288	; 0x120
   1c8c0:	b	1c904 <flatcc_builder_default_alloc@@Base+0x98>
   1c8c4:	ldr	r0, [r4]
   1c8c8:	cmp	r0, #0
   1c8cc:	moveq	r6, #0
   1c8d0:	moveq	r0, r6
   1c8d4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c8d8:	bl	12aa4 <free@plt>
   1c8dc:	mov	r6, #0
   1c8e0:	str	r6, [r4]
   1c8e4:	str	r6, [r4, #4]
   1c8e8:	mov	r0, r6
   1c8ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c8f0:	mov	r0, #32
   1c8f4:	b	1c904 <flatcc_builder_default_alloc@@Base+0x98>
   1c8f8:	mov	r0, r2
   1c8fc:	b	1c904 <flatcc_builder_default_alloc@@Base+0x98>
   1c900:	mov	r0, #64	; 0x40
   1c904:	mov	r7, r0
   1c908:	lsl	r0, r0, #1
   1c90c:	cmp	r7, r2
   1c910:	bcc	1c904 <flatcc_builder_default_alloc@@Base+0x98>
   1c914:	ldr	r0, [r4, #4]
   1c918:	mov	r6, #0
   1c91c:	cmp	r0, r2
   1c920:	lsrcs	r0, r0, #1
   1c924:	cmpcs	r0, r7
   1c928:	bcs	1c960 <flatcc_builder_default_alloc@@Base+0xf4>
   1c92c:	ldr	r0, [r4]
   1c930:	mov	r1, r7
   1c934:	bl	12af8 <realloc@plt>
   1c938:	cmp	r0, #0
   1c93c:	mvneq	r6, #0
   1c940:	moveq	r0, r6
   1c944:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c948:	mov	r5, r0
   1c94c:	cmp	r8, #0
   1c950:	ldrne	r1, [r4, #4]
   1c954:	cmpne	r7, r1
   1c958:	bhi	1c968 <flatcc_builder_default_alloc@@Base+0xfc>
   1c95c:	stm	r4, {r5, r7}
   1c960:	mov	r0, r6
   1c964:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c968:	add	r0, r5, r1
   1c96c:	sub	r2, r7, r1
   1c970:	mov	r1, #0
   1c974:	bl	12b64 <memset@plt>
   1c978:	b	1c95c <flatcc_builder_default_alloc@@Base+0xf0>

0001c97c <flatcc_builder_flush_vtable_cache@@Base>:
   1c97c:	push	{r4, r5, fp, lr}
   1c980:	add	fp, sp, #8
   1c984:	mov	r4, r0
   1c988:	ldr	r0, [r0, #116]	; 0x74
   1c98c:	cmp	r0, #0
   1c990:	popeq	{r4, r5, fp, pc}
   1c994:	ldr	r0, [r4, #92]	; 0x5c
   1c998:	ldr	r2, [r4, #96]	; 0x60
   1c99c:	mov	r5, #0
   1c9a0:	mov	r1, #0
   1c9a4:	bl	12b64 <memset@plt>
   1c9a8:	mov	r0, #16
   1c9ac:	str	r5, [r4, #120]	; 0x78
   1c9b0:	str	r0, [r4, #124]	; 0x7c
   1c9b4:	pop	{r4, r5, fp, pc}

0001c9b8 <flatcc_builder_custom_init@@Base>:
   1c9b8:	push	{r4, r5, r6, r7, fp, lr}
   1c9bc:	add	fp, sp, #16
   1c9c0:	mov	r5, r3
   1c9c4:	mov	r6, r2
   1c9c8:	mov	r7, r1
   1c9cc:	mov	r4, r0
   1c9d0:	mov	r1, #0
   1c9d4:	mov	r2, #232	; 0xe8
   1c9d8:	bl	12b64 <memset@plt>
   1c9dc:	ldr	r0, [fp, #8]
   1c9e0:	cmp	r7, #0
   1c9e4:	bne	1c9fc <flatcc_builder_custom_init@@Base+0x44>
   1c9e8:	mov	r1, #1
   1c9ec:	str	r1, [r4, #184]	; 0xb8
   1c9f0:	add	r6, r4, #188	; 0xbc
   1c9f4:	movw	r7, #64912	; 0xfd90
   1c9f8:	movt	r7, #1
   1c9fc:	movw	r1, #51308	; 0xc86c
   1ca00:	movt	r1, #1
   1ca04:	cmp	r5, #0
   1ca08:	movne	r1, r5
   1ca0c:	str	r6, [r4, #36]	; 0x24
   1ca10:	str	r0, [r4, #40]	; 0x28
   1ca14:	str	r7, [r4, #44]	; 0x2c
   1ca18:	str	r1, [r4, #48]	; 0x30
   1ca1c:	mov	r0, #0
   1ca20:	pop	{r4, r5, r6, r7, fp, pc}

0001ca24 <flatcc_builder_init@@Base>:
   1ca24:	push	{fp, lr}
   1ca28:	mov	fp, sp
   1ca2c:	sub	sp, sp, #8
   1ca30:	mov	r1, #0
   1ca34:	str	r1, [sp]
   1ca38:	mov	r1, #0
   1ca3c:	mov	r2, #0
   1ca40:	mov	r3, #0
   1ca44:	bl	1c9b8 <flatcc_builder_custom_init@@Base>
   1ca48:	mov	r0, #0
   1ca4c:	mov	sp, fp
   1ca50:	pop	{fp, pc}

0001ca54 <flatcc_builder_custom_reset@@Base>:
   1ca54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ca58:	add	fp, sp, #24
   1ca5c:	sub	sp, sp, #8
   1ca60:	mov	r9, r2
   1ca64:	mov	r8, r1
   1ca68:	mov	r4, r0
   1ca6c:	add	r7, r0, #52	; 0x34
   1ca70:	mov	r5, #0
   1ca74:	ldr	r0, [r7]
   1ca78:	cmp	r0, #0
   1ca7c:	beq	1cac0 <flatcc_builder_custom_reset@@Base+0x6c>
   1ca80:	cmp	r9, #0
   1ca84:	cmpne	r5, #5
   1ca88:	beq	1cab0 <flatcc_builder_custom_reset@@Base+0x5c>
   1ca8c:	ldr	r0, [r4, #40]	; 0x28
   1ca90:	ldr	r6, [r4, #48]	; 0x30
   1ca94:	str	r5, [sp]
   1ca98:	mov	r1, r7
   1ca9c:	mov	r2, #1
   1caa0:	mov	r3, #1
   1caa4:	blx	r6
   1caa8:	cmp	r0, #0
   1caac:	bne	1cb60 <flatcc_builder_custom_reset@@Base+0x10c>
   1cab0:	ldm	r7, {r0, r2}
   1cab4:	mov	r1, #0
   1cab8:	bl	12b64 <memset@plt>
   1cabc:	b	1cacc <flatcc_builder_custom_reset@@Base+0x78>
   1cac0:	ldr	r0, [r7, #4]
   1cac4:	cmp	r0, #0
   1cac8:	bne	1cb70 <flatcc_builder_custom_reset@@Base+0x11c>
   1cacc:	add	r7, r7, #8
   1cad0:	add	r5, r5, #1
   1cad4:	cmp	r5, #8
   1cad8:	bcc	1ca74 <flatcc_builder_custom_reset@@Base+0x20>
   1cadc:	mov	r0, #0
   1cae0:	str	r0, [r4, #120]	; 0x78
   1cae4:	ldr	r1, [r4, #124]	; 0x7c
   1cae8:	cmp	r1, #0
   1caec:	movne	r1, #16
   1caf0:	strne	r1, [r4, #124]	; 0x7c
   1caf4:	vmov.i32	q8, #0	; 0x00000000
   1caf8:	strh	r0, [r4, #128]	; 0x80
   1cafc:	str	r0, [r4, #136]	; 0x88
   1cb00:	str	r0, [r4, #140]	; 0x8c
   1cb04:	str	r0, [r4, #32]
   1cb08:	add	r1, r4, #148	; 0x94
   1cb0c:	vst1.32	{d16-d17}, [r1]
   1cb10:	ldr	r1, [r4, #52]	; 0x34
   1cb14:	ldr	r2, [r4, #60]	; 0x3c
   1cb18:	ldr	r3, [r4, #76]	; 0x4c
   1cb1c:	str	r2, [r4, #16]
   1cb20:	str	r0, [r4, #20]
   1cb24:	str	r0, [r4, #24]
   1cb28:	str	r3, [r4]
   1cb2c:	str	r1, [r4, #4]
   1cb30:	cmp	r8, #0
   1cb34:	movne	r0, #0
   1cb38:	strne	r0, [r4, #172]	; 0xac
   1cb3c:	strne	r0, [r4, #176]	; 0xb0
   1cb40:	strne	r0, [r4, #180]	; 0xb4
   1cb44:	ldr	r0, [r4, #184]	; 0xb8
   1cb48:	mov	r5, #0
   1cb4c:	cmp	r0, #0
   1cb50:	beq	1cb64 <flatcc_builder_custom_reset@@Base+0x110>
   1cb54:	add	r0, r4, #188	; 0xbc
   1cb58:	bl	1fc70 <flatcc_emitter_reset@@Base>
   1cb5c:	b	1cb64 <flatcc_builder_custom_reset@@Base+0x110>
   1cb60:	mvn	r5, #0
   1cb64:	mov	r0, r5
   1cb68:	sub	sp, fp, #24
   1cb6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cb70:	movw	r0, #17108	; 0x42d4
   1cb74:	movt	r0, #2
   1cb78:	movw	r1, #17126	; 0x42e6
   1cb7c:	movt	r1, #2
   1cb80:	movw	r3, #17196	; 0x432c
   1cb84:	movt	r3, #2
   1cb88:	movw	r2, #434	; 0x1b2
   1cb8c:	bl	12bc4 <__assert_fail@plt>

0001cb90 <flatcc_builder_reset@@Base>:
   1cb90:	mov	r1, #0
   1cb94:	mov	r2, #0
   1cb98:	b	1ca54 <flatcc_builder_custom_reset@@Base>

0001cb9c <flatcc_builder_clear@@Base>:
   1cb9c:	push	{r4, r5, r6, r7, fp, lr}
   1cba0:	add	fp, sp, #16
   1cba4:	sub	sp, sp, #8
   1cba8:	mov	r7, r0
   1cbac:	add	r5, r0, #52	; 0x34
   1cbb0:	mov	r6, #0
   1cbb4:	ldr	r0, [r7, #40]	; 0x28
   1cbb8:	ldr	r4, [r7, #48]	; 0x30
   1cbbc:	str	r6, [sp]
   1cbc0:	mov	r1, r5
   1cbc4:	mov	r2, #0
   1cbc8:	mov	r3, #0
   1cbcc:	blx	r4
   1cbd0:	add	r5, r5, #8
   1cbd4:	add	r6, r6, #1
   1cbd8:	cmp	r6, #8
   1cbdc:	bne	1cbb4 <flatcc_builder_clear@@Base+0x18>
   1cbe0:	ldr	r0, [r7, #184]	; 0xb8
   1cbe4:	cmp	r0, #0
   1cbe8:	beq	1cbf4 <flatcc_builder_clear@@Base+0x58>
   1cbec:	add	r0, r7, #188	; 0xbc
   1cbf0:	bl	1fd2c <flatcc_emitter_clear@@Base>
   1cbf4:	mov	r0, r7
   1cbf8:	mov	r1, #0
   1cbfc:	mov	r2, #232	; 0xe8
   1cc00:	sub	sp, fp, #16
   1cc04:	pop	{r4, r5, r6, r7, fp, lr}
   1cc08:	b	12b64 <memset@plt>

0001cc0c <flatcc_builder_enter_user_frame_ptr@@Base>:
   1cc0c:	push	{r4, r5, r6, r7, fp, lr}
   1cc10:	add	fp, sp, #16
   1cc14:	sub	sp, sp, #8
   1cc18:	mov	r4, r0
   1cc1c:	ldr	r2, [r0, #228]	; 0xe4
   1cc20:	mov	r7, #0
   1cc24:	str	r7, [sp]
   1cc28:	add	r0, r1, #7
   1cc2c:	bic	r5, r0, #3
   1cc30:	mov	r0, r4
   1cc34:	mov	r1, #7
   1cc38:	mov	r3, r5
   1cc3c:	bl	1cc84 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1cc40:	cmp	r0, #0
   1cc44:	beq	1cc78 <flatcc_builder_enter_user_frame_ptr@@Base+0x6c>
   1cc48:	mov	r6, r0
   1cc4c:	mov	r1, #0
   1cc50:	mov	r2, r5
   1cc54:	bl	12b64 <memset@plt>
   1cc58:	ldr	r0, [r4, #224]	; 0xe0
   1cc5c:	str	r0, [r6], #4
   1cc60:	ldr	r0, [r4, #228]	; 0xe4
   1cc64:	add	r1, r0, #4
   1cc68:	add	r0, r0, r5
   1cc6c:	str	r1, [r4, #224]	; 0xe0
   1cc70:	str	r0, [r4, #228]	; 0xe4
   1cc74:	mov	r7, r6
   1cc78:	mov	r0, r7
   1cc7c:	sub	sp, fp, #16
   1cc80:	pop	{r4, r5, r6, r7, fp, pc}
   1cc84:	push	{r4, r5, fp, lr}
   1cc88:	add	fp, sp, #8
   1cc8c:	sub	sp, sp, #8
   1cc90:	mov	r4, r2
   1cc94:	add	r2, r3, r2
   1cc98:	add	r3, r0, r1, lsl #3
   1cc9c:	add	r5, r3, #52	; 0x34
   1cca0:	ldr	r3, [r3, #56]	; 0x38
   1cca4:	cmp	r2, r3
   1cca8:	bls	1ccd0 <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   1ccac:	ldr	r3, [fp, #8]
   1ccb0:	ldr	ip, [r0, #40]	; 0x28
   1ccb4:	ldr	lr, [r0, #48]	; 0x30
   1ccb8:	str	r1, [sp]
   1ccbc:	mov	r0, ip
   1ccc0:	mov	r1, r5
   1ccc4:	blx	lr
   1ccc8:	cmp	r0, #0
   1cccc:	bne	1cce0 <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   1ccd0:	ldr	r0, [r5]
   1ccd4:	add	r0, r0, r4
   1ccd8:	sub	sp, fp, #8
   1ccdc:	pop	{r4, r5, fp, pc}
   1cce0:	movw	r0, #21644	; 0x548c
   1cce4:	movt	r0, #2
   1cce8:	movw	r1, #17126	; 0x42e6
   1ccec:	movt	r1, #2
   1ccf0:	movw	r3, #21190	; 0x52c6
   1ccf4:	movt	r3, #2
   1ccf8:	mov	r2, #308	; 0x134
   1ccfc:	bl	12bc4 <__assert_fail@plt>

0001cd00 <flatcc_builder_enter_user_frame@@Base>:
   1cd00:	push	{r4, r5, r6, r7, fp, lr}
   1cd04:	add	fp, sp, #16
   1cd08:	sub	sp, sp, #8
   1cd0c:	mov	r4, r0
   1cd10:	ldr	r2, [r0, #228]	; 0xe4
   1cd14:	mov	r6, #0
   1cd18:	str	r6, [sp]
   1cd1c:	add	r0, r1, #7
   1cd20:	bic	r5, r0, #3
   1cd24:	mov	r0, r4
   1cd28:	mov	r1, #7
   1cd2c:	mov	r3, r5
   1cd30:	bl	1cc84 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1cd34:	cmp	r0, #0
   1cd38:	beq	1cd68 <flatcc_builder_enter_user_frame@@Base+0x68>
   1cd3c:	mov	r7, r0
   1cd40:	mov	r1, #0
   1cd44:	mov	r2, r5
   1cd48:	bl	12b64 <memset@plt>
   1cd4c:	ldr	r0, [r4, #224]	; 0xe0
   1cd50:	str	r0, [r7]
   1cd54:	ldr	r0, [r4, #228]	; 0xe4
   1cd58:	add	r6, r0, #4
   1cd5c:	add	r0, r0, r5
   1cd60:	str	r6, [r4, #224]	; 0xe0
   1cd64:	str	r0, [r4, #228]	; 0xe4
   1cd68:	mov	r0, r6
   1cd6c:	sub	sp, fp, #16
   1cd70:	pop	{r4, r5, r6, r7, fp, pc}

0001cd74 <flatcc_builder_exit_user_frame@@Base>:
   1cd74:	ldr	r1, [r0, #224]	; 0xe0
   1cd78:	cmp	r1, #0
   1cd7c:	subne	r2, r1, #4
   1cd80:	strne	r2, [r0, #228]	; 0xe4
   1cd84:	ldrne	r2, [r0, #108]	; 0x6c
   1cd88:	addne	r1, r2, r1
   1cd8c:	ldrne	r1, [r1, #-4]
   1cd90:	strne	r1, [r0, #224]	; 0xe0
   1cd94:	movne	r0, r1
   1cd98:	bxne	lr
   1cd9c:	push	{fp, lr}
   1cda0:	mov	fp, sp
   1cda4:	movw	r0, #17258	; 0x436a
   1cda8:	movt	r0, #2
   1cdac:	movw	r1, #17126	; 0x42e6
   1cdb0:	movt	r1, #2
   1cdb4:	movw	r3, #17283	; 0x4383
   1cdb8:	movt	r3, #2
   1cdbc:	movw	r2, #542	; 0x21e
   1cdc0:	bl	12bc4 <__assert_fail@plt>

0001cdc4 <flatcc_builder_exit_user_frame_at@@Base>:
   1cdc4:	ldr	r2, [r0, #224]	; 0xe0
   1cdc8:	cmp	r2, r1
   1cdcc:	bcc	1cdd8 <flatcc_builder_exit_user_frame_at@@Base+0x14>
   1cdd0:	str	r1, [r0, #224]	; 0xe0
   1cdd4:	b	1cd74 <flatcc_builder_exit_user_frame@@Base>
   1cdd8:	push	{fp, lr}
   1cddc:	mov	fp, sp
   1cde0:	movw	r0, #17341	; 0x43bd
   1cde4:	movt	r0, #2
   1cde8:	movw	r1, #17126	; 0x42e6
   1cdec:	movt	r1, #2
   1cdf0:	movw	r3, #17372	; 0x43dc
   1cdf4:	movt	r3, #2
   1cdf8:	movw	r2, #551	; 0x227
   1cdfc:	bl	12bc4 <__assert_fail@plt>

0001ce00 <flatcc_builder_get_current_user_frame@@Base>:
   1ce00:	ldr	r0, [r0, #224]	; 0xe0
   1ce04:	bx	lr

0001ce08 <flatcc_builder_get_user_frame_ptr@@Base>:
   1ce08:	ldr	r0, [r0, #108]	; 0x6c
   1ce0c:	add	r0, r0, r1
   1ce10:	bx	lr

0001ce14 <flatcc_builder_embed_buffer@@Base>:
   1ce14:	push	{r4, r5, r6, r7, fp, lr}
   1ce18:	add	fp, sp, #16
   1ce1c:	sub	sp, sp, #80	; 0x50
   1ce20:	mov	r5, r3
   1ce24:	mov	r6, r2
   1ce28:	mov	r2, r1
   1ce2c:	mov	r4, r0
   1ce30:	ldr	r0, [fp, #8]
   1ce34:	strh	r0, [fp, #-18]	; 0xffffffee
   1ce38:	ldr	r3, [r4, #152]	; 0x98
   1ce3c:	cmp	r3, #0
   1ce40:	movwne	r3, #1
   1ce44:	sub	r1, fp, #18
   1ce48:	mov	r0, r4
   1ce4c:	bl	1cf20 <flatcc_builder_embed_buffer@@Base+0x10c>
   1ce50:	ldr	r0, [fp, #12]
   1ce54:	and	r0, r0, #2
   1ce58:	add	r1, r5, r0, lsl #1
   1ce5c:	ldrh	r2, [fp, #-18]	; 0xffffffee
   1ce60:	mov	r0, r4
   1ce64:	bl	1cfdc <flatcc_builder_embed_buffer@@Base+0x1c8>
   1ce68:	mov	r7, r0
   1ce6c:	add	r0, r0, r5
   1ce70:	bl	1cff0 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1ce74:	mov	r1, #0
   1ce78:	str	r1, [sp]
   1ce7c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ce80:	str	r1, [sp, #4]
   1ce84:	ldr	r0, [r4, #152]	; 0x98
   1ce88:	cmp	r0, #0
   1ce8c:	beq	1ceac <flatcc_builder_embed_buffer@@Base+0x98>
   1ce90:	sub	r0, fp, #24
   1ce94:	str	r0, [sp, #8]
   1ce98:	mov	r0, #4
   1ce9c:	str	r0, [sp]
   1cea0:	str	r0, [sp, #12]
   1cea4:	mov	r0, #1
   1cea8:	str	r0, [sp, #4]
   1ceac:	cmp	r5, #0
   1ceb0:	beq	1ced8 <flatcc_builder_embed_buffer@@Base+0xc4>
   1ceb4:	ldm	sp, {r0, r1}
   1ceb8:	add	r0, r0, r5
   1cebc:	str	r0, [sp]
   1cec0:	mov	r0, sp
   1cec4:	add	r0, r0, r1, lsl #3
   1cec8:	str	r6, [r0, #8]
   1cecc:	str	r5, [r0, #12]
   1ced0:	add	r0, r1, #1
   1ced4:	str	r0, [sp, #4]
   1ced8:	cmp	r7, #0
   1cedc:	beq	1cf0c <flatcc_builder_embed_buffer@@Base+0xf8>
   1cee0:	ldm	sp, {r0, r1}
   1cee4:	add	r0, r0, r7
   1cee8:	str	r0, [sp]
   1ceec:	mov	r0, sp
   1cef0:	add	r0, r0, r1, lsl #3
   1cef4:	movw	r2, #16596	; 0x40d4
   1cef8:	movt	r2, #2
   1cefc:	str	r2, [r0, #8]
   1cf00:	str	r7, [r0, #12]
   1cf04:	add	r0, r1, #1
   1cf08:	str	r0, [sp, #4]
   1cf0c:	mov	r1, sp
   1cf10:	mov	r0, r4
   1cf14:	bl	1cff4 <flatcc_builder_embed_buffer@@Base+0x1e0>
   1cf18:	sub	sp, fp, #16
   1cf1c:	pop	{r4, r5, r6, r7, fp, pc}
   1cf20:	push	{r4, r5, r6, r7, fp, lr}
   1cf24:	add	fp, sp, #16
   1cf28:	sub	sp, sp, #72	; 0x48
   1cf2c:	mov	r6, r3
   1cf30:	mov	r5, r2
   1cf34:	mov	r7, r1
   1cf38:	mov	r4, r0
   1cf3c:	cmp	r2, #0
   1cf40:	bne	1cf50 <flatcc_builder_embed_buffer@@Base+0x13c>
   1cf44:	ldrh	r5, [r4, #132]	; 0x84
   1cf48:	cmp	r5, #0
   1cf4c:	movweq	r5, #1
   1cf50:	mov	r0, r7
   1cf54:	mov	r1, #4
   1cf58:	bl	1ddc8 <flatcc_builder_start_vector@@Base+0x80>
   1cf5c:	mov	r0, r7
   1cf60:	mov	r1, r5
   1cf64:	bl	1ddc8 <flatcc_builder_start_vector@@Base+0x80>
   1cf68:	cmp	r6, #0
   1cf6c:	bne	1cfb4 <flatcc_builder_embed_buffer@@Base+0x1a0>
   1cf70:	mov	r0, r4
   1cf74:	mov	r1, r5
   1cf78:	bl	1fac4 <flatcc_builder_get_emit_context@@Base+0x8>
   1cf7c:	cmp	r0, #0
   1cf80:	beq	1cfb4 <flatcc_builder_embed_buffer@@Base+0x1a0>
   1cf84:	movw	r1, #16596	; 0x40d4
   1cf88:	movt	r1, #2
   1cf8c:	str	r1, [sp, #8]
   1cf90:	str	r0, [sp]
   1cf94:	str	r0, [sp, #12]
   1cf98:	mov	r0, #1
   1cf9c:	str	r0, [sp, #4]
   1cfa0:	mov	r1, sp
   1cfa4:	mov	r0, r4
   1cfa8:	bl	1e154 <flatcc_builder_create_vtable@@Base+0x80>
   1cfac:	cmp	r0, #0
   1cfb0:	beq	1cfbc <flatcc_builder_embed_buffer@@Base+0x1a8>
   1cfb4:	sub	sp, fp, #16
   1cfb8:	pop	{r4, r5, r6, r7, fp, pc}
   1cfbc:	movw	r0, #21644	; 0x548c
   1cfc0:	movt	r0, #2
   1cfc4:	movw	r1, #17126	; 0x42e6
   1cfc8:	movt	r1, #2
   1cfcc:	movw	r3, #21257	; 0x5309
   1cfd0:	movt	r3, #2
   1cfd4:	movw	r2, #702	; 0x2be
   1cfd8:	bl	12bc4 <__assert_fail@plt>
   1cfdc:	ldr	r0, [r0, #136]	; 0x88
   1cfe0:	sub	r0, r0, r1
   1cfe4:	sub	r1, r2, #1
   1cfe8:	and	r0, r0, r1
   1cfec:	bx	lr
   1cff0:	bx	lr
   1cff4:	push	{r4, r5, fp, lr}
   1cff8:	add	fp, sp, #8
   1cffc:	sub	sp, sp, #8
   1d000:	ldr	r3, [r1]
   1d004:	cmp	r3, #0
   1d008:	ble	1d068 <flatcc_builder_embed_buffer@@Base+0x254>
   1d00c:	mov	r4, r0
   1d010:	ldr	r0, [r0, #136]	; 0x88
   1d014:	sub	r5, r0, r3
   1d018:	ldr	r2, [r1, #4]
   1d01c:	ldr	r0, [r4, #36]	; 0x24
   1d020:	ldr	ip, [r4, #44]	; 0x2c
   1d024:	str	r3, [sp]
   1d028:	add	r1, r1, #8
   1d02c:	mov	r3, r5
   1d030:	blx	ip
   1d034:	cmp	r0, #0
   1d038:	streq	r5, [r4, #136]	; 0x88
   1d03c:	moveq	r0, r5
   1d040:	subeq	sp, fp, #8
   1d044:	popeq	{r4, r5, fp, pc}
   1d048:	movw	r0, #21644	; 0x548c
   1d04c:	movt	r0, #2
   1d050:	movw	r1, #17126	; 0x42e6
   1d054:	movt	r1, #2
   1d058:	movw	r3, #21323	; 0x534b
   1d05c:	movt	r3, #2
   1d060:	movw	r2, #651	; 0x28b
   1d064:	bl	12bc4 <__assert_fail@plt>
   1d068:	movw	r0, #21644	; 0x548c
   1d06c:	movt	r0, #2
   1d070:	movw	r1, #17126	; 0x42e6
   1d074:	movt	r1, #2
   1d078:	movw	r3, #21323	; 0x534b
   1d07c:	movt	r3, #2
   1d080:	movw	r2, #647	; 0x287
   1d084:	bl	12bc4 <__assert_fail@plt>

0001d088 <flatcc_builder_create_buffer@@Base>:
   1d088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d08c:	add	fp, sp, #28
   1d090:	sub	sp, sp, #92	; 0x5c
   1d094:	mov	r6, r3
   1d098:	mov	r7, r1
   1d09c:	mov	r4, r0
   1d0a0:	ldr	r0, [fp, #8]
   1d0a4:	strh	r0, [fp, #-30]	; 0xffffffe2
   1d0a8:	mov	r0, #0
   1d0ac:	str	r0, [sp, #4]
   1d0b0:	ldr	sl, [fp, #12]
   1d0b4:	and	r9, sl, #1
   1d0b8:	sub	r1, fp, #30
   1d0bc:	mov	r0, r4
   1d0c0:	mov	r3, r9
   1d0c4:	bl	1cf20 <flatcc_builder_embed_buffer@@Base+0x10c>
   1d0c8:	ldrh	r5, [fp, #-30]	; 0xffffffe2
   1d0cc:	mov	r0, r4
   1d0d0:	mov	r1, r5
   1d0d4:	bl	1d258 <flatcc_builder_create_buffer@@Base+0x1d0>
   1d0d8:	cmp	r7, #0
   1d0dc:	str	r6, [sp]
   1d0e0:	beq	1d0fc <flatcc_builder_create_buffer@@Base+0x74>
   1d0e4:	ldr	r7, [r7]
   1d0e8:	mov	r0, r7
   1d0ec:	bl	1d268 <flatcc_builder_create_buffer@@Base+0x1e0>
   1d0f0:	bl	1cff0 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1d0f4:	str	r7, [sp, #4]
   1d0f8:	b	1d100 <flatcc_builder_create_buffer@@Base+0x78>
   1d0fc:	ldr	r7, [sp, #4]
   1d100:	mov	r8, #4
   1d104:	and	r0, r8, sl, lsl #1
   1d108:	cmp	r7, #0
   1d10c:	mov	r6, r7
   1d110:	movwne	r6, #1
   1d114:	add	r0, r0, r6, lsl #2
   1d118:	add	r1, r0, #4
   1d11c:	mov	r0, r4
   1d120:	mov	r2, r5
   1d124:	bl	1cfdc <flatcc_builder_embed_buffer@@Base+0x1c8>
   1d128:	mov	r1, #0
   1d12c:	str	r1, [sp, #8]
   1d130:	str	r1, [sp, #12]
   1d134:	ands	ip, sl, #3
   1d138:	beq	1d154 <flatcc_builder_create_buffer@@Base+0xcc>
   1d13c:	sub	r1, fp, #40	; 0x28
   1d140:	str	r1, [sp, #16]
   1d144:	str	r8, [sp, #8]
   1d148:	str	r8, [sp, #20]
   1d14c:	mov	r1, #1
   1d150:	str	r1, [sp, #12]
   1d154:	ldr	r1, [sp, #8]
   1d158:	ldr	r3, [sp, #12]
   1d15c:	add	r5, r1, #4
   1d160:	str	r5, [sp, #8]
   1d164:	add	lr, sp, #8
   1d168:	add	r1, lr, r3, lsl #3
   1d16c:	sub	r2, fp, #36	; 0x24
   1d170:	str	r2, [r1, #8]
   1d174:	str	r8, [r1, #12]
   1d178:	add	r1, r3, #1
   1d17c:	str	r1, [sp, #12]
   1d180:	cmp	r7, #0
   1d184:	beq	1d1ac <flatcc_builder_create_buffer@@Base+0x124>
   1d188:	lsl	r2, r6, #2
   1d18c:	add	r5, r5, r2
   1d190:	str	r5, [sp, #8]
   1d194:	add	r1, lr, r1, lsl #3
   1d198:	add	r5, sp, #4
   1d19c:	str	r5, [r1, #8]
   1d1a0:	str	r2, [r1, #12]
   1d1a4:	add	r1, r3, #2
   1d1a8:	str	r1, [sp, #12]
   1d1ac:	cmp	r0, #0
   1d1b0:	beq	1d1e0 <flatcc_builder_create_buffer@@Base+0x158>
   1d1b4:	ldr	r1, [sp, #8]
   1d1b8:	ldr	r2, [sp, #12]
   1d1bc:	add	r1, r1, r0
   1d1c0:	str	r1, [sp, #8]
   1d1c4:	add	r1, lr, r2, lsl #3
   1d1c8:	movw	r3, #16596	; 0x40d4
   1d1cc:	movt	r3, #2
   1d1d0:	str	r3, [r1, #8]
   1d1d4:	str	r0, [r1, #12]
   1d1d8:	add	r0, r2, #1
   1d1dc:	str	r0, [sp, #12]
   1d1e0:	ldr	r0, [r4, #136]	; 0x88
   1d1e4:	ldr	r1, [sp, #8]
   1d1e8:	sub	r5, r0, r1
   1d1ec:	cmp	ip, #0
   1d1f0:	addne	r5, r5, #4
   1d1f4:	mov	r0, #144	; 0x90
   1d1f8:	cmp	r9, #0
   1d1fc:	movweq	r0, #140	; 0x8c
   1d200:	ldr	r0, [r4, r0]
   1d204:	sub	r0, r0, r5
   1d208:	bl	1cff0 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1d20c:	str	r0, [fp, #-40]	; 0xffffffd8
   1d210:	ldr	r0, [sp]
   1d214:	sub	r0, r0, r5
   1d218:	bl	1cff0 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1d21c:	str	r0, [fp, #-36]	; 0xffffffdc
   1d220:	add	r1, sp, #8
   1d224:	mov	r0, r4
   1d228:	bl	1cff4 <flatcc_builder_embed_buffer@@Base+0x1e0>
   1d22c:	cmp	r0, #0
   1d230:	subne	sp, fp, #28
   1d234:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d238:	movw	r0, #21644	; 0x548c
   1d23c:	movt	r0, #2
   1d240:	movw	r1, #17126	; 0x42e6
   1d244:	movt	r1, #2
   1d248:	movw	r3, #17441	; 0x4421
   1d24c:	movt	r3, #2
   1d250:	mov	r2, #772	; 0x304
   1d254:	bl	12bc4 <__assert_fail@plt>
   1d258:	ldrh	r2, [r0, #128]	; 0x80
   1d25c:	cmp	r2, r1
   1d260:	strhcc	r1, [r0, #128]	; 0x80
   1d264:	bx	lr
   1d268:	bx	lr

0001d26c <flatcc_builder_create_struct@@Base>:
   1d26c:	push	{r4, r5, r6, r7, fp, lr}
   1d270:	add	fp, sp, #16
   1d274:	sub	sp, sp, #72	; 0x48
   1d278:	cmp	r3, #0
   1d27c:	beq	1d314 <flatcc_builder_create_struct@@Base+0xa8>
   1d280:	mov	r7, r3
   1d284:	mov	r5, r2
   1d288:	mov	r6, r1
   1d28c:	mov	r4, r0
   1d290:	mov	r1, r3
   1d294:	bl	1d258 <flatcc_builder_create_buffer@@Base+0x1d0>
   1d298:	mov	r0, r4
   1d29c:	mov	r1, r5
   1d2a0:	mov	r2, r7
   1d2a4:	bl	1cfdc <flatcc_builder_embed_buffer@@Base+0x1c8>
   1d2a8:	mov	r1, #0
   1d2ac:	str	r1, [sp]
   1d2b0:	str	r1, [sp, #4]
   1d2b4:	cmp	r5, #0
   1d2b8:	strne	r6, [sp, #8]
   1d2bc:	strne	r5, [sp]
   1d2c0:	strne	r5, [sp, #12]
   1d2c4:	movne	r1, #1
   1d2c8:	strne	r1, [sp, #4]
   1d2cc:	cmp	r0, #0
   1d2d0:	beq	1d300 <flatcc_builder_create_struct@@Base+0x94>
   1d2d4:	ldm	sp, {r1, r2}
   1d2d8:	add	r1, r1, r0
   1d2dc:	str	r1, [sp]
   1d2e0:	mov	r1, sp
   1d2e4:	add	r1, r1, r2, lsl #3
   1d2e8:	movw	r3, #16596	; 0x40d4
   1d2ec:	movt	r3, #2
   1d2f0:	str	r3, [r1, #8]
   1d2f4:	str	r0, [r1, #12]
   1d2f8:	add	r0, r2, #1
   1d2fc:	str	r0, [sp, #4]
   1d300:	mov	r1, sp
   1d304:	mov	r0, r4
   1d308:	bl	1cff4 <flatcc_builder_embed_buffer@@Base+0x1e0>
   1d30c:	sub	sp, fp, #16
   1d310:	pop	{r4, r5, r6, r7, fp, pc}
   1d314:	movw	r0, #17572	; 0x44a4
   1d318:	movt	r0, #2
   1d31c:	movw	r1, #17126	; 0x42e6
   1d320:	movt	r1, #2
   1d324:	movw	r3, #17583	; 0x44af
   1d328:	movt	r3, #2
   1d32c:	movw	r2, #783	; 0x30f
   1d330:	bl	12bc4 <__assert_fail@plt>

0001d334 <flatcc_builder_start_buffer@@Base>:
   1d334:	push	{r4, r5, r6, r7, fp, lr}
   1d338:	add	fp, sp, #16
   1d33c:	mov	r6, r3
   1d340:	mov	r7, r2
   1d344:	mov	r5, r1
   1d348:	mov	r4, r0
   1d34c:	ldrh	r1, [r0, #128]	; 0x80
   1d350:	bl	1d3f0 <flatcc_builder_start_buffer@@Base+0xbc>
   1d354:	mov	r1, r0
   1d358:	mvn	r0, #0
   1d35c:	cmp	r1, #0
   1d360:	popne	{r4, r5, r6, r7, fp, pc}
   1d364:	mov	r0, #1
   1d368:	strh	r0, [r4, #128]	; 0x80
   1d36c:	ldrh	r1, [r4, #132]	; 0x84
   1d370:	ldr	r2, [r4, #32]
   1d374:	strh	r1, [r2, #34]	; 0x22
   1d378:	strh	r7, [r4, #132]	; 0x84
   1d37c:	ldrh	r1, [r4, #164]	; 0xa4
   1d380:	ldr	r2, [r4, #32]
   1d384:	strh	r1, [r2, #32]
   1d388:	strh	r6, [r4, #164]	; 0xa4
   1d38c:	ldr	r1, [r4, #32]
   1d390:	ldr	r2, [r4, #144]	; 0x90
   1d394:	str	r2, [r1, #20]
   1d398:	ldr	r1, [r4, #32]
   1d39c:	ldr	r2, [r4, #152]	; 0x98
   1d3a0:	str	r2, [r1, #28]
   1d3a4:	ldr	r1, [r4, #32]
   1d3a8:	ldr	r2, [r4, #136]	; 0x88
   1d3ac:	ldr	r3, [r4, #148]	; 0x94
   1d3b0:	ldr	r7, [r4, #168]	; 0xa8
   1d3b4:	add	r6, r3, #1
   1d3b8:	str	r2, [r4, #144]	; 0x90
   1d3bc:	str	r6, [r4, #148]	; 0x94
   1d3c0:	str	r3, [r4, #152]	; 0x98
   1d3c4:	str	r7, [r1, #16]
   1d3c8:	movw	r1, #16596	; 0x40d4
   1d3cc:	movt	r1, #2
   1d3d0:	cmp	r5, #0
   1d3d4:	movne	r1, r5
   1d3d8:	ldr	r1, [r1]
   1d3dc:	str	r1, [r4, #168]	; 0xa8
   1d3e0:	ldr	r1, [r4, #32]
   1d3e4:	strh	r0, [r1, #14]
   1d3e8:	mov	r0, #0
   1d3ec:	pop	{r4, r5, r6, r7, fp, pc}
   1d3f0:	push	{r4, r5, r6, sl, fp, lr}
   1d3f4:	add	fp, sp, #16
   1d3f8:	sub	sp, sp, #8
   1d3fc:	mov	r5, r1
   1d400:	mov	r4, r0
   1d404:	ldr	r1, [r0, #156]	; 0x9c
   1d408:	ldr	r2, [r0, #160]	; 0xa0
   1d40c:	add	r0, r1, #1
   1d410:	str	r0, [r4, #156]	; 0x9c
   1d414:	cmp	r1, r2
   1d418:	bge	1d42c <flatcc_builder_start_buffer@@Base+0xf8>
   1d41c:	ldr	r0, [r4, #32]
   1d420:	add	r0, r0, #36	; 0x24
   1d424:	str	r0, [r4, #32]
   1d428:	b	1d4a0 <flatcc_builder_start_buffer@@Base+0x16c>
   1d42c:	ldr	r2, [r4, #176]	; 0xb0
   1d430:	mvn	r6, #0
   1d434:	cmp	r2, #1
   1d438:	cmpge	r1, r2
   1d43c:	bge	1d4dc <flatcc_builder_start_buffer@@Base+0x1a8>
   1d440:	mov	r1, #0
   1d444:	str	r1, [sp]
   1d448:	add	r0, r0, r0, lsl #3
   1d44c:	mvn	r1, #35	; 0x23
   1d450:	add	r2, r1, r0, lsl #2
   1d454:	mov	r0, r4
   1d458:	mov	r1, #4
   1d45c:	mov	r3, #36	; 0x24
   1d460:	bl	1cc84 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1d464:	str	r0, [r4, #32]
   1d468:	cmp	r0, #0
   1d46c:	beq	1d4dc <flatcc_builder_start_buffer@@Base+0x1a8>
   1d470:	ldr	r0, [r4, #88]	; 0x58
   1d474:	ldr	r1, [r4, #176]	; 0xb0
   1d478:	movw	r2, #36409	; 0x8e39
   1d47c:	movt	r2, #14563	; 0x38e3
   1d480:	umull	r0, r2, r0, r2
   1d484:	lsr	r0, r2, #3
   1d488:	cmp	r1, r2, lsr #3
   1d48c:	mov	r2, r0
   1d490:	movlt	r2, r1
   1d494:	cmp	r1, #0
   1d498:	movle	r2, r0
   1d49c:	str	r2, [r4, #160]	; 0xa0
   1d4a0:	ldr	r0, [r4, #20]
   1d4a4:	ldr	r1, [r4, #32]
   1d4a8:	str	r0, [r1, #8]
   1d4ac:	ldrh	r2, [r4, #130]	; 0x82
   1d4b0:	strh	r2, [r1, #12]
   1d4b4:	strh	r5, [r4, #130]	; 0x82
   1d4b8:	ldr	r2, [r4, #28]
   1d4bc:	mvn	r3, #3
   1d4c0:	stm	r1, {r2, r3}
   1d4c4:	mov	r6, #0
   1d4c8:	str	r6, [r4, #20]
   1d4cc:	add	r0, r0, r2
   1d4d0:	add	r0, r0, #7
   1d4d4:	bic	r0, r0, #7
   1d4d8:	str	r0, [r4, #28]
   1d4dc:	mov	r0, r6
   1d4e0:	sub	sp, fp, #16
   1d4e4:	pop	{r4, r5, r6, sl, fp, pc}

0001d4e8 <flatcc_builder_end_buffer@@Base>:
   1d4e8:	push	{r4, r5, r6, r7, fp, lr}
   1d4ec:	add	fp, sp, #16
   1d4f0:	sub	sp, sp, #8
   1d4f4:	mov	r4, r0
   1d4f8:	ldr	r0, [r0, #32]
   1d4fc:	ldrh	r0, [r0, #14]
   1d500:	cmp	r0, #1
   1d504:	bne	1d590 <flatcc_builder_end_buffer@@Base+0xa8>
   1d508:	mov	r5, r1
   1d50c:	ldr	r6, [r4, #152]	; 0x98
   1d510:	ldrh	r7, [r4, #164]	; 0xa4
   1d514:	ldrh	r1, [r4, #132]	; 0x84
   1d518:	mov	r0, r4
   1d51c:	bl	1d258 <flatcc_builder_create_buffer@@Base+0x1d0>
   1d520:	and	r0, r7, #2
   1d524:	cmp	r6, #0
   1d528:	orrne	r0, r0, #1
   1d52c:	ldrh	r2, [r4, #132]	; 0x84
   1d530:	ldrh	r1, [r4, #128]	; 0x80
   1d534:	str	r1, [sp]
   1d538:	str	r0, [sp, #4]
   1d53c:	add	r1, r4, #168	; 0xa8
   1d540:	mov	r0, r4
   1d544:	mov	r3, r5
   1d548:	bl	1d088 <flatcc_builder_create_buffer@@Base>
   1d54c:	mov	r5, r0
   1d550:	cmp	r0, #0
   1d554:	beq	1d584 <flatcc_builder_end_buffer@@Base+0x9c>
   1d558:	ldr	r0, [r4, #32]
   1d55c:	ldr	r1, [r0, #20]
   1d560:	str	r1, [r4, #144]	; 0x90
   1d564:	ldr	r1, [r0, #28]
   1d568:	str	r1, [r4, #152]	; 0x98
   1d56c:	ldr	r1, [r0, #16]
   1d570:	str	r1, [r4, #168]	; 0xa8
   1d574:	ldrh	r0, [r0, #32]
   1d578:	strh	r0, [r4, #164]	; 0xa4
   1d57c:	mov	r0, r4
   1d580:	bl	1d5b0 <flatcc_builder_end_buffer@@Base+0xc8>
   1d584:	mov	r0, r5
   1d588:	sub	sp, fp, #16
   1d58c:	pop	{r4, r5, r6, r7, fp, pc}
   1d590:	movw	r0, #17685	; 0x4515
   1d594:	movt	r0, #2
   1d598:	movw	r1, #17126	; 0x42e6
   1d59c:	movt	r1, #2
   1d5a0:	movw	r3, #17729	; 0x4541
   1d5a4:	movt	r3, #2
   1d5a8:	movw	r2, #838	; 0x346
   1d5ac:	bl	12bc4 <__assert_fail@plt>
   1d5b0:	push	{r4, sl, fp, lr}
   1d5b4:	add	fp, sp, #8
   1d5b8:	mov	r4, r0
   1d5bc:	ldr	r0, [r0, #16]
   1d5c0:	ldr	r2, [r4, #20]
   1d5c4:	mov	r1, #0
   1d5c8:	bl	12b64 <memset@plt>
   1d5cc:	ldr	r0, [r4, #32]
   1d5d0:	ldr	r1, [r0, #8]
   1d5d4:	str	r1, [r4, #20]
   1d5d8:	ldr	r1, [r0]
   1d5dc:	str	r1, [r4, #28]
   1d5e0:	ldr	r1, [r0, #4]
   1d5e4:	mov	r0, r4
   1d5e8:	bl	1d668 <flatcc_builder_start_struct@@Base+0x4c>
   1d5ec:	ldrh	r1, [r4, #130]	; 0x82
   1d5f0:	mov	r0, r4
   1d5f4:	bl	1d258 <flatcc_builder_create_buffer@@Base+0x1d0>
   1d5f8:	ldr	r0, [r4, #32]
   1d5fc:	ldr	r1, [r4, #156]	; 0x9c
   1d600:	ldrh	r2, [r0, #12]
   1d604:	sub	r0, r0, #36	; 0x24
   1d608:	str	r0, [r4, #32]
   1d60c:	sub	r0, r1, #1
   1d610:	str	r0, [r4, #156]	; 0x9c
   1d614:	strh	r2, [r4, #130]	; 0x82
   1d618:	pop	{r4, sl, fp, pc}

0001d61c <flatcc_builder_start_struct@@Base>:
   1d61c:	push	{r4, r5, fp, lr}
   1d620:	add	fp, sp, #8
   1d624:	mov	r4, r1
   1d628:	mov	r5, r0
   1d62c:	mov	r1, r2
   1d630:	bl	1d3f0 <flatcc_builder_start_buffer@@Base+0xbc>
   1d634:	cmp	r0, #0
   1d638:	movne	r0, #0
   1d63c:	popne	{r4, r5, fp, pc}
   1d640:	ldr	r0, [r5, #32]
   1d644:	mov	r1, #2
   1d648:	strh	r1, [r0, #14]
   1d64c:	mov	r0, r5
   1d650:	mvn	r1, #3
   1d654:	bl	1d668 <flatcc_builder_start_struct@@Base+0x4c>
   1d658:	mov	r0, r5
   1d65c:	mov	r1, r4
   1d660:	pop	{r4, r5, fp, lr}
   1d664:	b	1d6a0 <flatcc_builder_start_struct@@Base+0x84>
   1d668:	push	{fp, lr}
   1d66c:	mov	fp, sp
   1d670:	ldr	r2, [r0, #28]
   1d674:	ldr	ip, [r0, #32]
   1d678:	ldr	r3, [r0, #60]	; 0x3c
   1d67c:	ldr	lr, [r0, #64]	; 0x40
   1d680:	add	r3, r3, r2
   1d684:	str	r3, [r0, #16]
   1d688:	sub	r2, lr, r2
   1d68c:	cmp	r2, r1
   1d690:	movhi	r2, r1
   1d694:	str	r2, [r0, #24]
   1d698:	str	r1, [ip, #4]
   1d69c:	pop	{fp, pc}
   1d6a0:	push	{r4, r5, fp, lr}
   1d6a4:	add	fp, sp, #8
   1d6a8:	mov	r4, r0
   1d6ac:	ldr	r5, [r0, #20]
   1d6b0:	ldr	r2, [r0, #24]
   1d6b4:	add	r0, r5, r1
   1d6b8:	str	r0, [r4, #20]
   1d6bc:	cmp	r0, r2
   1d6c0:	bcc	1d6e4 <flatcc_builder_start_struct@@Base+0xc8>
   1d6c4:	add	r1, r0, #1
   1d6c8:	mov	r0, r4
   1d6cc:	mvn	r2, #3
   1d6d0:	bl	1fad4 <flatcc_builder_get_emit_context@@Base+0x18>
   1d6d4:	mov	r1, r0
   1d6d8:	mov	r0, #0
   1d6dc:	cmp	r1, #0
   1d6e0:	popne	{r4, r5, fp, pc}
   1d6e4:	ldr	r0, [r4, #16]
   1d6e8:	add	r0, r0, r5
   1d6ec:	pop	{r4, r5, fp, pc}

0001d6f0 <flatcc_builder_struct_edit@@Base>:
   1d6f0:	ldr	r0, [r0, #16]
   1d6f4:	bx	lr

0001d6f8 <flatcc_builder_end_struct@@Base>:
   1d6f8:	push	{r4, r5, fp, lr}
   1d6fc:	add	fp, sp, #8
   1d700:	mov	r4, r0
   1d704:	ldr	r0, [r0, #32]
   1d708:	ldrh	r0, [r0, #14]
   1d70c:	cmp	r0, #2
   1d710:	bne	1d740 <flatcc_builder_end_struct@@Base+0x48>
   1d714:	ldrh	r3, [r4, #130]	; 0x82
   1d718:	ldr	r1, [r4, #16]
   1d71c:	ldr	r2, [r4, #20]
   1d720:	mov	r0, r4
   1d724:	bl	1d26c <flatcc_builder_create_struct@@Base>
   1d728:	mov	r5, r0
   1d72c:	cmp	r0, #0
   1d730:	movne	r0, r4
   1d734:	blne	1d5b0 <flatcc_builder_end_buffer@@Base+0xc8>
   1d738:	mov	r0, r5
   1d73c:	pop	{r4, r5, fp, pc}
   1d740:	movw	r0, #17818	; 0x459a
   1d744:	movt	r0, #2
   1d748:	movw	r1, #17126	; 0x42e6
   1d74c:	movt	r1, #2
   1d750:	movw	r3, #17862	; 0x45c6
   1d754:	movt	r3, #2
   1d758:	mov	r2, #872	; 0x368
   1d75c:	bl	12bc4 <__assert_fail@plt>

0001d760 <flatcc_builder_extend_vector@@Base>:
   1d760:	push	{r4, r5, fp, lr}
   1d764:	add	fp, sp, #8
   1d768:	mov	r5, r1
   1d76c:	mov	r4, r0
   1d770:	ldr	r0, [r0, #32]
   1d774:	ldr	r2, [r0, #24]
   1d778:	mov	r0, r4
   1d77c:	bl	1d7a4 <flatcc_builder_extend_vector@@Base+0x44>
   1d780:	cmp	r0, #0
   1d784:	movne	r0, #0
   1d788:	popne	{r4, r5, fp, pc}
   1d78c:	ldr	r0, [r4, #32]
   1d790:	ldr	r0, [r0, #16]
   1d794:	mul	r1, r0, r5
   1d798:	mov	r0, r4
   1d79c:	pop	{r4, r5, fp, lr}
   1d7a0:	b	1d6a0 <flatcc_builder_start_struct@@Base+0x84>
   1d7a4:	ldr	r0, [r0, #32]
   1d7a8:	ldr	r3, [r0, #20]
   1d7ac:	adds	r1, r3, r1
   1d7b0:	bcs	1d7c4 <flatcc_builder_extend_vector@@Base+0x64>
   1d7b4:	cmp	r1, r2
   1d7b8:	strls	r1, [r0, #20]
   1d7bc:	movls	r0, #0
   1d7c0:	bxls	lr
   1d7c4:	push	{fp, lr}
   1d7c8:	mov	fp, sp
   1d7cc:	movw	r0, #21397	; 0x5395
   1d7d0:	movt	r0, #2
   1d7d4:	movw	r1, #17126	; 0x42e6
   1d7d8:	movt	r1, #2
   1d7dc:	movw	r3, #21424	; 0x53b0
   1d7e0:	movt	r3, #2
   1d7e4:	mov	r2, #892	; 0x37c
   1d7e8:	bl	12bc4 <__assert_fail@plt>

0001d7ec <flatcc_builder_vector_push@@Base>:
   1d7ec:	push	{fp, lr}
   1d7f0:	mov	fp, sp
   1d7f4:	ldr	r2, [r0, #32]
   1d7f8:	ldrh	r3, [r2, #14]
   1d7fc:	cmp	r3, #4
   1d800:	bne	1d82c <flatcc_builder_vector_push@@Base+0x40>
   1d804:	ldr	ip, [r2, #20]
   1d808:	ldr	r3, [r2, #24]
   1d80c:	cmp	ip, r3
   1d810:	bhi	1d84c <flatcc_builder_vector_push@@Base+0x60>
   1d814:	add	r3, ip, #1
   1d818:	str	r3, [r2, #20]
   1d81c:	ldr	r2, [r0, #32]
   1d820:	ldr	r2, [r2, #16]
   1d824:	pop	{fp, lr}
   1d828:	b	1d86c <flatcc_builder_vector_push@@Base+0x80>
   1d82c:	movw	r0, #17929	; 0x4609
   1d830:	movt	r0, #2
   1d834:	movw	r1, #17126	; 0x42e6
   1d838:	movt	r1, #2
   1d83c:	movw	r3, #17973	; 0x4635
   1d840:	movt	r3, #2
   1d844:	movw	r2, #907	; 0x38b
   1d848:	bl	12bc4 <__assert_fail@plt>
   1d84c:	movw	r0, #18040	; 0x4678
   1d850:	movt	r0, #2
   1d854:	movw	r1, #17126	; 0x42e6
   1d858:	movt	r1, #2
   1d85c:	movw	r3, #17973	; 0x4635
   1d860:	movt	r3, #2
   1d864:	mov	r2, #908	; 0x38c
   1d868:	bl	12bc4 <__assert_fail@plt>
   1d86c:	push	{r4, r5, r6, sl, fp, lr}
   1d870:	add	fp, sp, #16
   1d874:	mov	r4, r2
   1d878:	mov	r5, r1
   1d87c:	mov	r1, r2
   1d880:	bl	1d6a0 <flatcc_builder_start_struct@@Base+0x84>
   1d884:	mov	r6, r0
   1d888:	cmp	r0, #0
   1d88c:	beq	1d8a0 <flatcc_builder_vector_push@@Base+0xb4>
   1d890:	mov	r0, r6
   1d894:	mov	r1, r5
   1d898:	mov	r2, r4
   1d89c:	bl	12ab0 <memcpy@plt>
   1d8a0:	mov	r0, r6
   1d8a4:	pop	{r4, r5, r6, sl, fp, pc}

0001d8a8 <flatcc_builder_append_vector@@Base>:
   1d8a8:	push	{r4, r5, r6, sl, fp, lr}
   1d8ac:	add	fp, sp, #16
   1d8b0:	mov	r4, r1
   1d8b4:	mov	r6, r0
   1d8b8:	ldr	r0, [r0, #32]
   1d8bc:	ldrh	r1, [r0, #14]
   1d8c0:	cmp	r1, #4
   1d8c4:	bne	1d904 <flatcc_builder_append_vector@@Base+0x5c>
   1d8c8:	mov	r5, r2
   1d8cc:	ldr	r2, [r0, #24]
   1d8d0:	mov	r0, r6
   1d8d4:	mov	r1, r5
   1d8d8:	bl	1d7a4 <flatcc_builder_extend_vector@@Base+0x44>
   1d8dc:	cmp	r0, #0
   1d8e0:	movne	r0, #0
   1d8e4:	popne	{r4, r5, r6, sl, fp, pc}
   1d8e8:	ldr	r0, [r6, #32]
   1d8ec:	ldr	r0, [r0, #16]
   1d8f0:	mul	r2, r0, r5
   1d8f4:	mov	r0, r6
   1d8f8:	mov	r1, r4
   1d8fc:	pop	{r4, r5, r6, sl, fp, lr}
   1d900:	b	1d86c <flatcc_builder_vector_push@@Base+0x80>
   1d904:	movw	r0, #17929	; 0x4609
   1d908:	movt	r0, #2
   1d90c:	movw	r1, #17126	; 0x42e6
   1d910:	movt	r1, #2
   1d914:	movw	r3, #18101	; 0x46b5
   1d918:	movt	r3, #2
   1d91c:	movw	r2, #915	; 0x393
   1d920:	bl	12bc4 <__assert_fail@plt>

0001d924 <flatcc_builder_extend_offset_vector@@Base>:
   1d924:	push	{r4, r5, fp, lr}
   1d928:	add	fp, sp, #8
   1d92c:	mov	r5, r1
   1d930:	mov	r4, r0
   1d934:	mvn	r2, #-1073741824	; 0xc0000000
   1d938:	bl	1d7a4 <flatcc_builder_extend_vector@@Base+0x44>
   1d93c:	mov	r1, r0
   1d940:	mov	r0, #0
   1d944:	cmp	r1, #0
   1d948:	popne	{r4, r5, fp, pc}
   1d94c:	lsl	r1, r5, #2
   1d950:	mov	r0, r4
   1d954:	bl	1d6a0 <flatcc_builder_start_struct@@Base+0x84>
   1d958:	pop	{r4, r5, fp, pc}

0001d95c <flatcc_builder_offset_vector_push@@Base>:
   1d95c:	push	{r4, r5, fp, lr}
   1d960:	add	fp, sp, #8
   1d964:	mov	r4, r1
   1d968:	ldr	r1, [r0, #32]
   1d96c:	ldrh	r2, [r1, #14]
   1d970:	cmp	r2, #5
   1d974:	bne	1d9ac <flatcc_builder_offset_vector_push@@Base+0x50>
   1d978:	ldr	r2, [r1, #20]
   1d97c:	mov	r5, #0
   1d980:	cmn	r2, #-1073741823	; 0xc0000001
   1d984:	beq	1d9a4 <flatcc_builder_offset_vector_push@@Base+0x48>
   1d988:	add	r2, r2, #1
   1d98c:	str	r2, [r1, #20]
   1d990:	mov	r1, #4
   1d994:	bl	1d6a0 <flatcc_builder_start_struct@@Base+0x84>
   1d998:	cmp	r0, #0
   1d99c:	strne	r4, [r0]
   1d9a0:	movne	r5, r0
   1d9a4:	mov	r0, r5
   1d9a8:	pop	{r4, r5, fp, pc}
   1d9ac:	movw	r0, #18178	; 0x4702
   1d9b0:	movt	r0, #2
   1d9b4:	movw	r1, #17126	; 0x42e6
   1d9b8:	movt	r1, #2
   1d9bc:	movw	r3, #18229	; 0x4735
   1d9c0:	movt	r3, #2
   1d9c4:	movw	r2, #934	; 0x3a6
   1d9c8:	bl	12bc4 <__assert_fail@plt>

0001d9cc <flatcc_builder_append_offset_vector@@Base>:
   1d9cc:	push	{r4, r5, r6, sl, fp, lr}
   1d9d0:	add	fp, sp, #16
   1d9d4:	mov	r6, r0
   1d9d8:	ldr	r0, [r0, #32]
   1d9dc:	ldrh	r0, [r0, #14]
   1d9e0:	cmp	r0, #5
   1d9e4:	bne	1da24 <flatcc_builder_append_offset_vector@@Base+0x58>
   1d9e8:	mov	r5, r2
   1d9ec:	mov	r4, r1
   1d9f0:	mov	r0, r6
   1d9f4:	mov	r1, r2
   1d9f8:	mvn	r2, #-1073741824	; 0xc0000000
   1d9fc:	bl	1d7a4 <flatcc_builder_extend_vector@@Base+0x44>
   1da00:	mov	r1, r0
   1da04:	mov	r0, #0
   1da08:	cmp	r1, #0
   1da0c:	popne	{r4, r5, r6, sl, fp, pc}
   1da10:	lsl	r2, r5, #2
   1da14:	mov	r0, r6
   1da18:	mov	r1, r4
   1da1c:	bl	1d86c <flatcc_builder_vector_push@@Base+0x80>
   1da20:	pop	{r4, r5, r6, sl, fp, pc}
   1da24:	movw	r0, #18178	; 0x4702
   1da28:	movt	r0, #2
   1da2c:	movw	r1, #17126	; 0x42e6
   1da30:	movt	r1, #2
   1da34:	movw	r3, #18327	; 0x4797
   1da38:	movt	r3, #2
   1da3c:	mov	r2, #948	; 0x3b4
   1da40:	bl	12bc4 <__assert_fail@plt>

0001da44 <flatcc_builder_extend_string@@Base>:
   1da44:	push	{r4, r5, fp, lr}
   1da48:	add	fp, sp, #8
   1da4c:	mov	r5, r0
   1da50:	ldr	r0, [r0, #32]
   1da54:	ldrh	r0, [r0, #14]
   1da58:	cmp	r0, #6
   1da5c:	bne	1da8c <flatcc_builder_extend_string@@Base+0x48>
   1da60:	mov	r4, r1
   1da64:	mov	r0, r5
   1da68:	mvn	r2, #0
   1da6c:	bl	1d7a4 <flatcc_builder_extend_vector@@Base+0x44>
   1da70:	cmp	r0, #0
   1da74:	movne	r0, #0
   1da78:	popne	{r4, r5, fp, pc}
   1da7c:	mov	r0, r5
   1da80:	mov	r1, r4
   1da84:	pop	{r4, r5, fp, lr}
   1da88:	b	1d6a0 <flatcc_builder_start_struct@@Base+0x84>
   1da8c:	movw	r0, #18443	; 0x480b
   1da90:	movt	r0, #2
   1da94:	movw	r1, #17126	; 0x42e6
   1da98:	movt	r1, #2
   1da9c:	movw	r3, #18487	; 0x4837
   1daa0:	movt	r3, #2
   1daa4:	movw	r2, #957	; 0x3bd
   1daa8:	bl	12bc4 <__assert_fail@plt>

0001daac <flatcc_builder_append_string@@Base>:
   1daac:	push	{r4, r5, r6, sl, fp, lr}
   1dab0:	add	fp, sp, #16
   1dab4:	mov	r6, r0
   1dab8:	ldr	r0, [r0, #32]
   1dabc:	ldrh	r0, [r0, #14]
   1dac0:	cmp	r0, #6
   1dac4:	bne	1db00 <flatcc_builder_append_string@@Base+0x54>
   1dac8:	mov	r4, r2
   1dacc:	mov	r5, r1
   1dad0:	mov	r0, r6
   1dad4:	mov	r1, r2
   1dad8:	mvn	r2, #0
   1dadc:	bl	1d7a4 <flatcc_builder_extend_vector@@Base+0x44>
   1dae0:	cmp	r0, #0
   1dae4:	movne	r0, #0
   1dae8:	popne	{r4, r5, r6, sl, fp, pc}
   1daec:	mov	r0, r6
   1daf0:	mov	r1, r5
   1daf4:	mov	r2, r4
   1daf8:	pop	{r4, r5, r6, sl, fp, lr}
   1dafc:	b	1d86c <flatcc_builder_vector_push@@Base+0x80>
   1db00:	movw	r0, #18443	; 0x480b
   1db04:	movt	r0, #2
   1db08:	movw	r1, #17126	; 0x42e6
   1db0c:	movt	r1, #2
   1db10:	movw	r3, #18550	; 0x4876
   1db14:	movt	r3, #2
   1db18:	movw	r2, #966	; 0x3c6
   1db1c:	bl	12bc4 <__assert_fail@plt>

0001db20 <flatcc_builder_append_string_str@@Base>:
   1db20:	push	{r4, r5, fp, lr}
   1db24:	add	fp, sp, #8
   1db28:	mov	r4, r1
   1db2c:	mov	r5, r0
   1db30:	mov	r0, r1
   1db34:	bl	12b40 <strlen@plt>
   1db38:	mov	r2, r0
   1db3c:	mov	r0, r5
   1db40:	mov	r1, r4
   1db44:	pop	{r4, r5, fp, lr}
   1db48:	b	1daac <flatcc_builder_append_string@@Base>

0001db4c <flatcc_builder_append_string_strn@@Base>:
   1db4c:	push	{r4, r5, fp, lr}
   1db50:	add	fp, sp, #8
   1db54:	mov	r4, r1
   1db58:	mov	r5, r0
   1db5c:	mov	r0, r1
   1db60:	mov	r1, r2
   1db64:	bl	1db7c <flatcc_builder_append_string_strn@@Base+0x30>
   1db68:	mov	r2, r0
   1db6c:	mov	r0, r5
   1db70:	mov	r1, r4
   1db74:	pop	{r4, r5, fp, lr}
   1db78:	b	1daac <flatcc_builder_append_string@@Base>
   1db7c:	push	{r4, r5, fp, lr}
   1db80:	add	fp, sp, #8
   1db84:	mov	r4, r1
   1db88:	mov	r5, r0
   1db8c:	mov	r1, #0
   1db90:	mov	r2, r4
   1db94:	bl	12b7c <memchr@plt>
   1db98:	cmp	r0, #0
   1db9c:	subne	r4, r0, r5
   1dba0:	mov	r0, r4
   1dba4:	pop	{r4, r5, fp, pc}

0001dba8 <flatcc_builder_truncate_vector@@Base>:
   1dba8:	push	{fp, lr}
   1dbac:	mov	fp, sp
   1dbb0:	ldr	r2, [r0, #32]
   1dbb4:	ldrh	r3, [r2, #14]
   1dbb8:	cmp	r3, #4
   1dbbc:	bne	1dbec <flatcc_builder_truncate_vector@@Base+0x44>
   1dbc0:	ldr	r3, [r2, #20]
   1dbc4:	cmp	r3, r1
   1dbc8:	bcc	1dc0c <flatcc_builder_truncate_vector@@Base+0x64>
   1dbcc:	sub	r3, r3, r1
   1dbd0:	str	r3, [r2, #20]
   1dbd4:	ldr	r2, [r0, #32]
   1dbd8:	ldr	r2, [r2, #16]
   1dbdc:	mul	r1, r2, r1
   1dbe0:	bl	1dc2c <flatcc_builder_truncate_vector@@Base+0x84>
   1dbe4:	mov	r0, #0
   1dbe8:	pop	{fp, pc}
   1dbec:	movw	r0, #17929	; 0x4609
   1dbf0:	movt	r0, #2
   1dbf4:	movw	r1, #17126	; 0x42e6
   1dbf8:	movt	r1, #2
   1dbfc:	movw	r3, #18627	; 0x48c3
   1dc00:	movt	r3, #2
   1dc04:	movw	r2, #985	; 0x3d9
   1dc08:	bl	12bc4 <__assert_fail@plt>
   1dc0c:	movw	r0, #18690	; 0x4902
   1dc10:	movt	r0, #2
   1dc14:	movw	r1, #17126	; 0x42e6
   1dc18:	movt	r1, #2
   1dc1c:	movw	r3, #18627	; 0x48c3
   1dc20:	movt	r3, #2
   1dc24:	movw	r2, #986	; 0x3da
   1dc28:	bl	12bc4 <__assert_fail@plt>
   1dc2c:	mov	r2, r1
   1dc30:	ldr	r1, [r0, #16]
   1dc34:	ldr	r3, [r0, #20]
   1dc38:	sub	r3, r3, r2
   1dc3c:	str	r3, [r0, #20]
   1dc40:	add	r0, r1, r3
   1dc44:	mov	r1, #0
   1dc48:	b	12b64 <memset@plt>

0001dc4c <flatcc_builder_truncate_offset_vector@@Base>:
   1dc4c:	push	{fp, lr}
   1dc50:	mov	fp, sp
   1dc54:	ldr	r2, [r0, #32]
   1dc58:	ldrh	r3, [r2, #14]
   1dc5c:	cmp	r3, #5
   1dc60:	bne	1dc90 <flatcc_builder_truncate_offset_vector@@Base+0x44>
   1dc64:	ldr	r3, [r2, #20]
   1dc68:	cmp	r3, r1
   1dc6c:	bcc	1dcb0 <flatcc_builder_truncate_offset_vector@@Base+0x64>
   1dc70:	sub	r3, r3, r1
   1dc74:	str	r3, [r2, #20]
   1dc78:	ldr	r2, [r0, #32]
   1dc7c:	ldr	r2, [r2, #16]
   1dc80:	mul	r1, r2, r1
   1dc84:	bl	1dc2c <flatcc_builder_truncate_vector@@Base+0x84>
   1dc88:	mov	r0, #0
   1dc8c:	pop	{fp, pc}
   1dc90:	movw	r0, #18178	; 0x4702
   1dc94:	movt	r0, #2
   1dc98:	movw	r1, #17126	; 0x42e6
   1dc9c:	movt	r1, #2
   1dca0:	movw	r3, #18726	; 0x4926
   1dca4:	movt	r3, #2
   1dca8:	movw	r2, #994	; 0x3e2
   1dcac:	bl	12bc4 <__assert_fail@plt>
   1dcb0:	movw	r0, #18796	; 0x496c
   1dcb4:	movt	r0, #2
   1dcb8:	movw	r1, #17126	; 0x42e6
   1dcbc:	movt	r1, #2
   1dcc0:	movw	r3, #18726	; 0x4926
   1dcc4:	movt	r3, #2
   1dcc8:	movw	r2, #995	; 0x3e3
   1dccc:	bl	12bc4 <__assert_fail@plt>

0001dcd0 <flatcc_builder_truncate_string@@Base>:
   1dcd0:	push	{fp, lr}
   1dcd4:	mov	fp, sp
   1dcd8:	ldr	r2, [r0, #32]
   1dcdc:	ldrh	r3, [r2, #14]
   1dce0:	cmp	r3, #6
   1dce4:	bne	1dd08 <flatcc_builder_truncate_string@@Base+0x38>
   1dce8:	ldr	r3, [r2, #20]
   1dcec:	cmp	r3, r1
   1dcf0:	bcc	1dd28 <flatcc_builder_truncate_string@@Base+0x58>
   1dcf4:	sub	r3, r3, r1
   1dcf8:	str	r3, [r2, #20]
   1dcfc:	bl	1dc2c <flatcc_builder_truncate_vector@@Base+0x84>
   1dd00:	mov	r0, #0
   1dd04:	pop	{fp, pc}
   1dd08:	movw	r0, #18443	; 0x480b
   1dd0c:	movt	r0, #2
   1dd10:	movw	r1, #17126	; 0x42e6
   1dd14:	movt	r1, #2
   1dd18:	movw	r3, #18855	; 0x49a7
   1dd1c:	movt	r3, #2
   1dd20:	movw	r2, #1003	; 0x3eb
   1dd24:	bl	12bc4 <__assert_fail@plt>
   1dd28:	movw	r0, #18918	; 0x49e6
   1dd2c:	movt	r0, #2
   1dd30:	movw	r1, #17126	; 0x42e6
   1dd34:	movt	r1, #2
   1dd38:	movw	r3, #18855	; 0x49a7
   1dd3c:	movt	r3, #2
   1dd40:	mov	r2, #1004	; 0x3ec
   1dd44:	bl	12bc4 <__assert_fail@plt>

0001dd48 <flatcc_builder_start_vector@@Base>:
   1dd48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dd4c:	add	fp, sp, #24
   1dd50:	sub	sp, sp, #8
   1dd54:	mov	r5, r3
   1dd58:	mov	r6, r1
   1dd5c:	mov	r4, r0
   1dd60:	strh	r2, [sp, #6]
   1dd64:	add	r0, sp, #6
   1dd68:	mov	r8, #4
   1dd6c:	mov	r1, #4
   1dd70:	bl	1ddc8 <flatcc_builder_start_vector@@Base+0x80>
   1dd74:	ldrh	r1, [sp, #6]
   1dd78:	mov	r0, r4
   1dd7c:	bl	1d3f0 <flatcc_builder_start_buffer@@Base+0xbc>
   1dd80:	mvn	r7, #0
   1dd84:	cmp	r0, #0
   1dd88:	bne	1ddbc <flatcc_builder_start_vector@@Base+0x74>
   1dd8c:	ldr	r0, [r4, #32]
   1dd90:	str	r6, [r0, #16]
   1dd94:	ldr	r0, [r4, #32]
   1dd98:	mov	r7, #0
   1dd9c:	str	r7, [r0, #20]
   1dda0:	ldr	r0, [r4, #32]
   1dda4:	str	r5, [r0, #24]
   1dda8:	ldr	r0, [r4, #32]
   1ddac:	strh	r8, [r0, #14]
   1ddb0:	mov	r0, r4
   1ddb4:	mvn	r1, #3
   1ddb8:	bl	1d668 <flatcc_builder_start_struct@@Base+0x4c>
   1ddbc:	mov	r0, r7
   1ddc0:	sub	sp, fp, #24
   1ddc4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ddc8:	ldrh	r2, [r0]
   1ddcc:	cmp	r2, r1
   1ddd0:	strhcc	r1, [r0]
   1ddd4:	bx	lr

0001ddd8 <flatcc_builder_start_offset_vector@@Base>:
   1ddd8:	push	{r4, r5, r6, sl, fp, lr}
   1dddc:	add	fp, sp, #16
   1dde0:	mov	r4, r0
   1dde4:	mov	r6, #4
   1dde8:	mov	r1, #4
   1ddec:	bl	1d3f0 <flatcc_builder_start_buffer@@Base+0xbc>
   1ddf0:	mvn	r5, #0
   1ddf4:	cmp	r0, #0
   1ddf8:	beq	1de04 <flatcc_builder_start_offset_vector@@Base+0x2c>
   1ddfc:	mov	r0, r5
   1de00:	pop	{r4, r5, r6, sl, fp, pc}
   1de04:	ldr	r0, [r4, #32]
   1de08:	str	r6, [r0, #16]
   1de0c:	ldr	r0, [r4, #32]
   1de10:	mov	r5, #0
   1de14:	str	r5, [r0, #20]
   1de18:	ldr	r0, [r4, #32]
   1de1c:	mov	r1, #5
   1de20:	strh	r1, [r0, #14]
   1de24:	mov	r0, r4
   1de28:	mvn	r1, #3
   1de2c:	bl	1d668 <flatcc_builder_start_struct@@Base+0x4c>
   1de30:	mov	r0, r5
   1de34:	pop	{r4, r5, r6, sl, fp, pc}

0001de38 <flatcc_builder_create_offset_vector@@Base>:
   1de38:	push	{r4, r5, r6, sl, fp, lr}
   1de3c:	add	fp, sp, #16
   1de40:	mov	r6, r2
   1de44:	mov	r5, r1
   1de48:	mov	r4, r0
   1de4c:	bl	1ddd8 <flatcc_builder_start_offset_vector@@Base>
   1de50:	cmp	r0, #0
   1de54:	beq	1de60 <flatcc_builder_create_offset_vector@@Base+0x28>
   1de58:	mov	r0, #0
   1de5c:	pop	{r4, r5, r6, sl, fp, pc}
   1de60:	mov	r0, r4
   1de64:	mov	r1, r6
   1de68:	bl	1d924 <flatcc_builder_extend_offset_vector@@Base>
   1de6c:	cmp	r0, #0
   1de70:	beq	1de58 <flatcc_builder_create_offset_vector@@Base+0x20>
   1de74:	lsl	r2, r6, #2
   1de78:	mov	r1, r5
   1de7c:	bl	12ab0 <memcpy@plt>
   1de80:	mov	r0, r4
   1de84:	pop	{r4, r5, r6, sl, fp, lr}
   1de88:	b	1de8c <flatcc_builder_end_offset_vector@@Base>

0001de8c <flatcc_builder_end_offset_vector@@Base>:
   1de8c:	push	{r4, r5, fp, lr}
   1de90:	add	fp, sp, #8
   1de94:	mov	r4, r0
   1de98:	ldr	r0, [r0, #32]
   1de9c:	ldrh	r1, [r0, #14]
   1dea0:	cmp	r1, #5
   1dea4:	bne	1ded0 <flatcc_builder_end_offset_vector@@Base+0x44>
   1dea8:	ldr	r2, [r0, #20]
   1deac:	ldr	r1, [r4, #16]
   1deb0:	mov	r0, r4
   1deb4:	bl	1ea2c <flatcc_builder_create_offset_vector_direct@@Base>
   1deb8:	mov	r5, r0
   1debc:	cmp	r0, #0
   1dec0:	movne	r0, r4
   1dec4:	blne	1d5b0 <flatcc_builder_end_buffer@@Base+0xc8>
   1dec8:	mov	r0, r5
   1decc:	pop	{r4, r5, fp, pc}
   1ded0:	movw	r0, #18178	; 0x4702
   1ded4:	movt	r0, #2
   1ded8:	movw	r1, #17126	; 0x42e6
   1dedc:	movt	r1, #2
   1dee0:	movw	r3, #19761	; 0x4d31
   1dee4:	movt	r3, #2
   1dee8:	movw	r2, #1480	; 0x5c8
   1deec:	bl	12bc4 <__assert_fail@plt>

0001def0 <flatcc_builder_start_string@@Base>:
   1def0:	push	{r4, r5, r6, sl, fp, lr}
   1def4:	add	fp, sp, #16
   1def8:	mov	r4, r0
   1defc:	mov	r6, #1
   1df00:	mov	r1, #1
   1df04:	bl	1d3f0 <flatcc_builder_start_buffer@@Base+0xbc>
   1df08:	mvn	r5, #0
   1df0c:	cmp	r0, #0
   1df10:	beq	1df1c <flatcc_builder_start_string@@Base+0x2c>
   1df14:	mov	r0, r5
   1df18:	pop	{r4, r5, r6, sl, fp, pc}
   1df1c:	ldr	r0, [r4, #32]
   1df20:	str	r6, [r0, #16]
   1df24:	ldr	r0, [r4, #32]
   1df28:	mov	r5, #0
   1df2c:	str	r5, [r0, #20]
   1df30:	ldr	r0, [r4, #32]
   1df34:	mov	r1, #6
   1df38:	strh	r1, [r0, #14]
   1df3c:	mov	r0, r4
   1df40:	mvn	r1, #3
   1df44:	bl	1d668 <flatcc_builder_start_struct@@Base+0x4c>
   1df48:	mov	r0, r5
   1df4c:	pop	{r4, r5, r6, sl, fp, pc}

0001df50 <flatcc_builder_reserve_table@@Base>:
   1df50:	cmn	r1, #1
   1df54:	ble	1df5c <flatcc_builder_reserve_table@@Base+0xc>
   1df58:	b	1df84 <flatcc_builder_reserve_table@@Base+0x34>
   1df5c:	push	{fp, lr}
   1df60:	mov	fp, sp
   1df64:	movw	r0, #19017	; 0x4a49
   1df68:	movt	r0, #2
   1df6c:	movw	r1, #17126	; 0x42e6
   1df70:	movt	r1, #2
   1df74:	movw	r3, #18952	; 0x4a08
   1df78:	movt	r3, #2
   1df7c:	movw	r2, #1065	; 0x429
   1df80:	bl	12bc4 <__assert_fail@plt>
   1df84:	push	{r4, r5, r6, sl, fp, lr}
   1df88:	add	fp, sp, #16
   1df8c:	sub	sp, sp, #8
   1df90:	mov	r6, r1
   1df94:	mov	r4, r0
   1df98:	ldr	r0, [r0, #32]
   1df9c:	ldrh	r1, [r0, #28]
   1dfa0:	ldr	r0, [r0, #16]
   1dfa4:	mov	r2, #1
   1dfa8:	str	r2, [sp]
   1dfac:	mov	r2, #4
   1dfb0:	add	r3, r2, r6, lsl #1
   1dfb4:	add	r2, r0, r1, lsl #1
   1dfb8:	mov	r5, #0
   1dfbc:	mov	r0, r4
   1dfc0:	mov	r1, #0
   1dfc4:	bl	1cc84 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1dfc8:	str	r0, [r4, #4]
   1dfcc:	cmp	r0, #0
   1dfd0:	beq	1e00c <flatcc_builder_reserve_table@@Base+0xbc>
   1dfd4:	lsl	r1, r6, #1
   1dfd8:	add	r0, r0, #4
   1dfdc:	str	r0, [r4, #4]
   1dfe0:	ldr	r0, [r4, #32]
   1dfe4:	ldr	r2, [r0, #20]
   1dfe8:	str	r5, [sp]
   1dfec:	orr	r3, r1, #1
   1dff0:	mov	r0, r4
   1dff4:	mov	r1, #3
   1dff8:	bl	1cc84 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1dffc:	str	r0, [r4]
   1e000:	cmp	r0, #0
   1e004:	mvneq	r5, #0
   1e008:	b	1e010 <flatcc_builder_reserve_table@@Base+0xc0>
   1e00c:	mvn	r5, #0
   1e010:	mov	r0, r5
   1e014:	sub	sp, fp, #16
   1e018:	pop	{r4, r5, r6, sl, fp, pc}

0001e01c <flatcc_builder_start_table@@Base>:
   1e01c:	push	{r4, r5, r6, sl, fp, lr}
   1e020:	add	fp, sp, #16
   1e024:	mov	r6, r1
   1e028:	mov	r4, r0
   1e02c:	mov	r1, #4
   1e030:	bl	1d3f0 <flatcc_builder_start_buffer@@Base+0xbc>
   1e034:	mvn	r5, #0
   1e038:	cmp	r0, #0
   1e03c:	bne	1e0b4 <flatcc_builder_start_table@@Base+0x98>
   1e040:	ldr	r0, [r4, #4]
   1e044:	ldr	r1, [r4, #32]
   1e048:	ldr	r2, [r4, #52]	; 0x34
   1e04c:	sub	r0, r0, r2
   1e050:	str	r0, [r1, #16]
   1e054:	ldr	r0, [r4]
   1e058:	ldr	r1, [r4, #32]
   1e05c:	ldr	r2, [r4, #76]	; 0x4c
   1e060:	sub	r0, r0, r2
   1e064:	str	r0, [r1, #20]
   1e068:	ldr	r0, [r4, #12]
   1e06c:	ldr	r1, [r4, #32]
   1e070:	str	r0, [r1, #24]
   1e074:	ldr	r0, [r4, #32]
   1e078:	ldrh	r1, [r4, #8]
   1e07c:	strh	r1, [r0, #28]
   1e080:	mov	r0, #0
   1e084:	strh	r0, [r4, #8]
   1e088:	movw	r0, #15186	; 0x3b52
   1e08c:	movt	r0, #12137	; 0x2f69
   1e090:	str	r0, [r4, #12]
   1e094:	ldr	r0, [r4, #32]
   1e098:	mov	r1, #3
   1e09c:	strh	r1, [r0, #14]
   1e0a0:	mov	r0, r4
   1e0a4:	mov	r1, r6
   1e0a8:	bl	1df84 <flatcc_builder_reserve_table@@Base+0x34>
   1e0ac:	cmp	r0, #0
   1e0b0:	beq	1e0bc <flatcc_builder_start_table@@Base+0xa0>
   1e0b4:	mov	r0, r5
   1e0b8:	pop	{r4, r5, r6, sl, fp, pc}
   1e0bc:	mov	r0, r4
   1e0c0:	movw	r1, #65532	; 0xfffc
   1e0c4:	bl	1d668 <flatcc_builder_start_struct@@Base+0x4c>
   1e0c8:	mov	r5, #0
   1e0cc:	mov	r0, r5
   1e0d0:	pop	{r4, r5, r6, sl, fp, pc}

0001e0d4 <flatcc_builder_create_vtable@@Base>:
   1e0d4:	push	{fp, lr}
   1e0d8:	mov	fp, sp
   1e0dc:	sub	sp, sp, #72	; 0x48
   1e0e0:	mov	r3, #0
   1e0e4:	str	r3, [sp, #4]
   1e0e8:	str	r3, [sp]
   1e0ec:	cmp	r2, #0
   1e0f0:	strne	r1, [sp, #8]
   1e0f4:	strne	r2, [sp]
   1e0f8:	strne	r2, [sp, #12]
   1e0fc:	movne	r1, #1
   1e100:	strne	r1, [sp, #4]
   1e104:	ldr	r1, [r0, #152]	; 0x98
   1e108:	cmp	r1, #0
   1e10c:	bne	1e11c <flatcc_builder_create_vtable@@Base+0x48>
   1e110:	ldr	r1, [r0, #180]	; 0xb4
   1e114:	cmp	r1, #0
   1e118:	beq	1e138 <flatcc_builder_create_vtable@@Base+0x64>
   1e11c:	mov	r1, sp
   1e120:	bl	1cff4 <flatcc_builder_embed_buffer@@Base+0x1e0>
   1e124:	cmp	r0, #0
   1e128:	beq	1e148 <flatcc_builder_create_vtable@@Base+0x74>
   1e12c:	add	r0, r0, #1
   1e130:	mov	sp, fp
   1e134:	pop	{fp, pc}
   1e138:	mov	r1, sp
   1e13c:	bl	1e154 <flatcc_builder_create_vtable@@Base+0x80>
   1e140:	cmp	r0, #0
   1e144:	bne	1e130 <flatcc_builder_create_vtable@@Base+0x5c>
   1e148:	mov	r0, #0
   1e14c:	mov	sp, fp
   1e150:	pop	{fp, pc}
   1e154:	push	{r4, sl, fp, lr}
   1e158:	add	fp, sp, #8
   1e15c:	sub	sp, sp, #8
   1e160:	ldr	r4, [r0, #140]	; 0x8c
   1e164:	ldr	r3, [r1]
   1e168:	add	r2, r3, r4
   1e16c:	str	r2, [r0, #140]	; 0x8c
   1e170:	cmn	r3, #1
   1e174:	ble	1e1c8 <flatcc_builder_create_vtable@@Base+0xf4>
   1e178:	ldr	r2, [r1, #4]
   1e17c:	ldr	ip, [r0, #36]	; 0x24
   1e180:	ldr	lr, [r0, #44]	; 0x2c
   1e184:	str	r3, [sp]
   1e188:	add	r1, r1, #8
   1e18c:	mov	r0, ip
   1e190:	mov	r3, r4
   1e194:	blx	lr
   1e198:	cmp	r0, #0
   1e19c:	addeq	r0, r4, #1
   1e1a0:	subeq	sp, fp, #8
   1e1a4:	popeq	{r4, sl, fp, pc}
   1e1a8:	movw	r0, #21644	; 0x548c
   1e1ac:	movt	r0, #2
   1e1b0:	movw	r1, #17126	; 0x42e6
   1e1b4:	movt	r1, #2
   1e1b8:	movw	r3, #21511	; 0x5407
   1e1bc:	movt	r3, #2
   1e1c0:	movw	r2, #677	; 0x2a5
   1e1c4:	bl	12bc4 <__assert_fail@plt>
   1e1c8:	movw	r0, #21644	; 0x548c
   1e1cc:	movt	r0, #2
   1e1d0:	movw	r1, #17126	; 0x42e6
   1e1d4:	movt	r1, #2
   1e1d8:	movw	r3, #21511	; 0x5407
   1e1dc:	movt	r3, #2
   1e1e0:	movw	r2, #673	; 0x2a1
   1e1e4:	bl	12bc4 <__assert_fail@plt>

0001e1e8 <flatcc_builder_create_cached_vtable@@Base>:
   1e1e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e1ec:	add	fp, sp, #28
   1e1f0:	sub	sp, sp, #20
   1e1f4:	mov	r4, r2
   1e1f8:	mov	r9, r1
   1e1fc:	mov	sl, r0
   1e200:	mov	r1, r3
   1e204:	bl	1e3dc <flatcc_builder_create_cached_vtable@@Base+0x1f4>
   1e208:	cmp	r0, #0
   1e20c:	beq	1e330 <flatcc_builder_create_cached_vtable@@Base+0x148>
   1e210:	mov	r7, r0
   1e214:	ldr	r6, [r0]
   1e218:	mov	r5, #0
   1e21c:	cmp	r6, #0
   1e220:	mov	r8, #0
   1e224:	beq	1e2bc <flatcc_builder_create_cached_vtable@@Base+0xd4>
   1e228:	ldr	r5, [sl, #68]	; 0x44
   1e22c:	str	sl, [sp, #16]
   1e230:	ldr	sl, [sl, #100]	; 0x64
   1e234:	mov	r0, #0
   1e238:	str	r7, [sp, #8]
   1e23c:	str	r0, [sp, #12]
   1e240:	add	r8, sl, r6
   1e244:	ldr	r0, [r8, #8]
   1e248:	mov	r1, r5
   1e24c:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   1e250:	cmp	r0, r4
   1e254:	bne	1e26c <flatcc_builder_create_cached_vtable@@Base+0x84>
   1e258:	mov	r0, r9
   1e25c:	mov	r2, r4
   1e260:	bl	12ac8 <memcmp@plt>
   1e264:	cmp	r0, #0
   1e268:	beq	1e280 <flatcc_builder_create_cached_vtable@@Base+0x98>
   1e26c:	ldr	r6, [r8, #12]!
   1e270:	cmp	r6, #0
   1e274:	mov	r7, r8
   1e278:	bne	1e240 <flatcc_builder_create_cached_vtable@@Base+0x58>
   1e27c:	b	1e2ac <flatcc_builder_create_cached_vtable@@Base+0xc4>
   1e280:	ldr	r0, [sp, #16]
   1e284:	ldr	r0, [r0, #152]	; 0x98
   1e288:	ldr	r1, [r8, #4]
   1e28c:	cmp	r1, r0
   1e290:	beq	1e3b8 <flatcc_builder_create_cached_vtable@@Base+0x1d0>
   1e294:	mov	r7, r8
   1e298:	ldr	r6, [r7, #12]!
   1e29c:	cmp	r6, #0
   1e2a0:	mov	r0, r8
   1e2a4:	bne	1e23c <flatcc_builder_create_cached_vtable@@Base+0x54>
   1e2a8:	b	1e2b0 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   1e2ac:	ldr	r8, [sp, #12]
   1e2b0:	ldr	sl, [sp, #16]
   1e2b4:	mov	r5, #0
   1e2b8:	ldr	r7, [sp, #8]
   1e2bc:	ldr	r2, [sl, #124]	; 0x7c
   1e2c0:	str	r5, [sp]
   1e2c4:	mov	r0, sl
   1e2c8:	mov	r1, #6
   1e2cc:	mov	r3, #16
   1e2d0:	bl	1cc84 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1e2d4:	cmp	r0, #0
   1e2d8:	beq	1e3a4 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   1e2dc:	mov	r6, r0
   1e2e0:	ldr	r0, [sl, #124]	; 0x7c
   1e2e4:	ldr	r1, [sl, #152]	; 0x98
   1e2e8:	add	r2, r0, #16
   1e2ec:	str	r2, [sl, #124]	; 0x7c
   1e2f0:	str	r1, [r6, #4]
   1e2f4:	ldr	r1, [r7]
   1e2f8:	str	r1, [r6, #12]
   1e2fc:	str	r0, [r7]
   1e300:	mov	r0, sl
   1e304:	mov	r1, r9
   1e308:	mov	r2, r4
   1e30c:	bl	1e0d4 <flatcc_builder_create_vtable@@Base>
   1e310:	str	r0, [r6]
   1e314:	cmp	r0, #0
   1e318:	beq	1e3a4 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   1e31c:	cmp	r8, #0
   1e320:	beq	1e338 <flatcc_builder_create_cached_vtable@@Base+0x150>
   1e324:	ldr	r0, [r8, #8]
   1e328:	str	r0, [r6, #8]
   1e32c:	b	1e3a0 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   1e330:	mov	r5, #0
   1e334:	b	1e3a4 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   1e338:	ldr	r0, [sl, #172]	; 0xac
   1e33c:	cmp	r0, #0
   1e340:	beq	1e360 <flatcc_builder_create_cached_vtable@@Base+0x178>
   1e344:	ldr	r1, [sl, #120]	; 0x78
   1e348:	add	r1, r1, r4
   1e34c:	cmp	r0, r1
   1e350:	bcs	1e360 <flatcc_builder_create_cached_vtable@@Base+0x178>
   1e354:	mov	r0, sl
   1e358:	bl	1c97c <flatcc_builder_flush_vtable_cache@@Base>
   1e35c:	b	1e3a0 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
   1e360:	ldr	r2, [sl, #120]	; 0x78
   1e364:	mov	r0, #0
   1e368:	str	r0, [sp]
   1e36c:	mov	r0, sl
   1e370:	mov	r1, #2
   1e374:	mov	r3, r4
   1e378:	bl	1cc84 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1e37c:	cmp	r0, #0
   1e380:	beq	1e3b0 <flatcc_builder_create_cached_vtable@@Base+0x1c8>
   1e384:	ldr	r1, [sl, #120]	; 0x78
   1e388:	str	r1, [r6, #8]
   1e38c:	add	r1, r1, r4
   1e390:	str	r1, [sl, #120]	; 0x78
   1e394:	mov	r1, r9
   1e398:	mov	r2, r4
   1e39c:	bl	12ab0 <memcpy@plt>
   1e3a0:	ldr	r5, [r6]
   1e3a4:	mov	r0, r5
   1e3a8:	sub	sp, fp, #28
   1e3ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3b0:	mvn	r5, #0
   1e3b4:	b	1e3a4 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   1e3b8:	ldr	r1, [sp, #8]
   1e3bc:	cmp	r7, r1
   1e3c0:	ldrne	r0, [r8, #12]
   1e3c4:	strne	r0, [r7]
   1e3c8:	ldrne	r0, [r1]
   1e3cc:	strne	r0, [r8, #12]
   1e3d0:	strne	r6, [r1]
   1e3d4:	ldr	r5, [r8]
   1e3d8:	b	1e3a4 <flatcc_builder_create_cached_vtable@@Base+0x1bc>
   1e3dc:	push	{r4, r5, fp, lr}
   1e3e0:	add	fp, sp, #8
   1e3e4:	mov	r4, r1
   1e3e8:	mov	r5, r0
   1e3ec:	ldr	r0, [r0, #116]	; 0x74
   1e3f0:	cmp	r0, #0
   1e3f4:	bne	1e410 <flatcc_builder_create_cached_vtable@@Base+0x228>
   1e3f8:	mov	r0, r5
   1e3fc:	bl	1fb3c <flatcc_builder_get_emit_context@@Base+0x80>
   1e400:	mov	r1, r0
   1e404:	mov	r0, #0
   1e408:	cmp	r1, #0
   1e40c:	popne	{r4, r5, fp, pc}
   1e410:	ldr	r0, [r5, #92]	; 0x5c
   1e414:	ldr	r1, [r5, #116]	; 0x74
   1e418:	rsb	r1, r1, #32
   1e41c:	lsr	r1, r4, r1
   1e420:	add	r0, r0, r1, lsl #2
   1e424:	pop	{r4, r5, fp, pc}

0001e428 <flatcc_builder_create_table@@Base>:
   1e428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e42c:	add	fp, sp, #28
   1e430:	sub	sp, sp, #84	; 0x54
   1e434:	strh	r3, [fp, #-30]	; 0xffffffe2
   1e438:	ldr	r4, [fp, #12]
   1e43c:	cmn	r4, #1
   1e440:	ble	1e570 <flatcc_builder_create_table@@Base+0x148>
   1e444:	ldr	r8, [fp, #16]
   1e448:	tst	r8, #1
   1e44c:	beq	1e590 <flatcc_builder_create_table@@Base+0x168>
   1e450:	mov	sl, r2
   1e454:	mov	r6, r1
   1e458:	mov	r5, r0
   1e45c:	sub	r0, fp, #30
   1e460:	mov	r1, #4
   1e464:	bl	1ddc8 <flatcc_builder_start_vector@@Base+0x80>
   1e468:	ldrh	r7, [fp, #-30]	; 0xffffffe2
   1e46c:	mov	r0, r5
   1e470:	mov	r1, r7
   1e474:	bl	1d258 <flatcc_builder_create_buffer@@Base+0x1d0>
   1e478:	mov	r0, r5
   1e47c:	mov	r1, sl
   1e480:	mov	r2, r7
   1e484:	bl	1cfdc <flatcc_builder_embed_buffer@@Base+0x1c8>
   1e488:	mov	r9, r0
   1e48c:	mvn	r0, #3
   1e490:	sub	r0, r0, sl
   1e494:	sub	r0, r0, r9
   1e498:	str	r5, [sp]
   1e49c:	ldr	r1, [r5, #136]	; 0x88
   1e4a0:	add	r5, r0, r1
   1e4a4:	rsb	r0, r8, #1
   1e4a8:	add	r0, r0, r5
   1e4ac:	bl	1cff0 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1e4b0:	str	r0, [fp, #-36]	; 0xffffffdc
   1e4b4:	cmp	r4, #1
   1e4b8:	blt	1e4e8 <flatcc_builder_create_table@@Base+0xc0>
   1e4bc:	mvn	r0, #3
   1e4c0:	ldr	r7, [fp, #8]
   1e4c4:	sub	r5, r0, r5
   1e4c8:	ldrh	r8, [r7], #2
   1e4cc:	ldr	r0, [r8, r6]
   1e4d0:	add	r0, r5, r0
   1e4d4:	sub	r0, r0, r8
   1e4d8:	bl	1cff0 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1e4dc:	str	r0, [r8, r6]
   1e4e0:	subs	r4, r4, #1
   1e4e4:	bne	1e4c8 <flatcc_builder_create_table@@Base+0xa0>
   1e4e8:	sub	r0, fp, #36	; 0x24
   1e4ec:	str	r0, [sp, #12]
   1e4f0:	mov	r0, #4
   1e4f4:	str	r0, [sp, #4]
   1e4f8:	str	r0, [sp, #16]
   1e4fc:	mov	r0, #1
   1e500:	str	r0, [sp, #8]
   1e504:	cmp	sl, #0
   1e508:	beq	1e524 <flatcc_builder_create_table@@Base+0xfc>
   1e50c:	str	r6, [sp, #20]
   1e510:	str	sl, [sp, #24]
   1e514:	mov	r0, #2
   1e518:	str	r0, [sp, #8]
   1e51c:	add	r0, sl, #4
   1e520:	str	r0, [sp, #4]
   1e524:	cmp	r9, #0
   1e528:	ldr	r0, [sp]
   1e52c:	beq	1e560 <flatcc_builder_create_table@@Base+0x138>
   1e530:	ldr	r2, [sp, #4]
   1e534:	ldr	r1, [sp, #8]
   1e538:	add	r2, r2, r9
   1e53c:	str	r2, [sp, #4]
   1e540:	add	r2, sp, #4
   1e544:	add	r3, r2, r1, lsl #3
   1e548:	movw	r2, #16596	; 0x40d4
   1e54c:	movt	r2, #2
   1e550:	str	r2, [r3, #8]
   1e554:	str	r9, [r3, #12]
   1e558:	add	r1, r1, #1
   1e55c:	str	r1, [sp, #8]
   1e560:	add	r1, sp, #4
   1e564:	bl	1cff4 <flatcc_builder_embed_buffer@@Base+0x1e0>
   1e568:	sub	sp, fp, #28
   1e56c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e570:	movw	r0, #19010	; 0x4a42
   1e574:	movt	r0, #2
   1e578:	movw	r1, #17126	; 0x42e6
   1e57c:	movt	r1, #2
   1e580:	movw	r3, #19028	; 0x4a54
   1e584:	movt	r3, #2
   1e588:	movw	r2, #1237	; 0x4d5
   1e58c:	bl	12bc4 <__assert_fail@plt>
   1e590:	movw	r0, #19184	; 0x4af0
   1e594:	movt	r0, #2
   1e598:	movw	r1, #17126	; 0x42e6
   1e59c:	movt	r1, #2
   1e5a0:	movw	r3, #19028	; 0x4a54
   1e5a4:	movt	r3, #2
   1e5a8:	movw	r2, #1243	; 0x4db
   1e5ac:	bl	12bc4 <__assert_fail@plt>

0001e5b0 <flatcc_builder_check_required_field@@Base>:
   1e5b0:	ldr	r2, [r0, #32]
   1e5b4:	ldrh	r2, [r2, #14]
   1e5b8:	cmp	r2, #3
   1e5bc:	bne	1e5ec <flatcc_builder_check_required_field@@Base+0x3c>
   1e5c0:	ldrh	r3, [r0, #8]
   1e5c4:	mov	r2, #0
   1e5c8:	cmp	r3, r1
   1e5cc:	bls	1e5e4 <flatcc_builder_check_required_field@@Base+0x34>
   1e5d0:	ldr	r0, [r0, #4]
   1e5d4:	add	r0, r0, r1, lsl #1
   1e5d8:	ldrh	r2, [r0]
   1e5dc:	cmp	r2, #0
   1e5e0:	movwne	r2, #1
   1e5e4:	mov	r0, r2
   1e5e8:	bx	lr
   1e5ec:	push	{fp, lr}
   1e5f0:	mov	fp, sp
   1e5f4:	movw	r0, #19195	; 0x4afb
   1e5f8:	movt	r0, #2
   1e5fc:	movw	r1, #17126	; 0x42e6
   1e600:	movt	r1, #2
   1e604:	movw	r3, #19238	; 0x4b26
   1e608:	movt	r3, #2
   1e60c:	movw	r2, #1272	; 0x4f8
   1e610:	bl	12bc4 <__assert_fail@plt>

0001e614 <flatcc_builder_check_union_field@@Base>:
   1e614:	mov	r2, r0
   1e618:	ldr	r0, [r0, #32]
   1e61c:	ldrh	r0, [r0, #14]
   1e620:	cmp	r0, #3
   1e624:	bne	1e684 <flatcc_builder_check_union_field@@Base+0x70>
   1e628:	mov	r0, #0
   1e62c:	cmp	r1, #0
   1e630:	ldrhne	r3, [r2, #8]
   1e634:	cmpne	r3, r1
   1e638:	bhi	1e640 <flatcc_builder_check_union_field@@Base+0x2c>
   1e63c:	bx	lr
   1e640:	ldr	r0, [r2, #4]
   1e644:	add	r0, r0, r1, lsl #1
   1e648:	ldrh	r1, [r0, #-2]
   1e64c:	cmp	r1, #0
   1e650:	beq	1e674 <flatcc_builder_check_union_field@@Base+0x60>
   1e654:	ldr	r2, [r2, #16]
   1e658:	ldrb	r1, [r2, r1]
   1e65c:	ldrh	r0, [r0]
   1e660:	cmp	r1, #0
   1e664:	beq	1e678 <flatcc_builder_check_union_field@@Base+0x64>
   1e668:	cmp	r0, #0
   1e66c:	movwne	r0, #1
   1e670:	bx	lr
   1e674:	ldrh	r0, [r0]
   1e678:	clz	r0, r0
   1e67c:	lsr	r0, r0, #5
   1e680:	bx	lr
   1e684:	push	{fp, lr}
   1e688:	mov	fp, sp
   1e68c:	movw	r0, #19195	; 0x4afb
   1e690:	movt	r0, #2
   1e694:	movw	r1, #17126	; 0x42e6
   1e698:	movt	r1, #2
   1e69c:	movw	r3, #19321	; 0x4b79
   1e6a0:	movt	r3, #2
   1e6a4:	movw	r2, #1279	; 0x4ff
   1e6a8:	bl	12bc4 <__assert_fail@plt>

0001e6ac <flatcc_builder_check_required@@Base>:
   1e6ac:	push	{fp, lr}
   1e6b0:	mov	fp, sp
   1e6b4:	mov	r3, r0
   1e6b8:	ldr	r0, [r0, #32]
   1e6bc:	ldrh	r0, [r0, #14]
   1e6c0:	cmp	r0, #3
   1e6c4:	bne	1e71c <flatcc_builder_check_required@@Base+0x70>
   1e6c8:	ldrh	ip, [r3, #8]
   1e6cc:	mov	r0, #0
   1e6d0:	cmp	ip, r2
   1e6d4:	movge	r0, #1
   1e6d8:	cmpge	r2, #1
   1e6dc:	bge	1e6e4 <flatcc_builder_check_required@@Base+0x38>
   1e6e0:	pop	{fp, pc}
   1e6e4:	ldr	ip, [r3, #4]
   1e6e8:	mov	lr, #0
   1e6ec:	b	1e700 <flatcc_builder_check_required@@Base+0x54>
   1e6f0:	add	lr, lr, #1
   1e6f4:	add	r1, r1, #2
   1e6f8:	cmp	lr, r2
   1e6fc:	popge	{fp, pc}
   1e700:	ldrh	r3, [r1]
   1e704:	add	r3, ip, r3, lsl #1
   1e708:	ldrh	r3, [r3]
   1e70c:	cmp	r3, #0
   1e710:	bne	1e6f0 <flatcc_builder_check_required@@Base+0x44>
   1e714:	mov	r0, #0
   1e718:	pop	{fp, pc}
   1e71c:	movw	r0, #19195	; 0x4afb
   1e720:	movt	r0, #2
   1e724:	movw	r1, #17126	; 0x42e6
   1e728:	movt	r1, #2
   1e72c:	movw	r3, #19401	; 0x4bc9
   1e730:	movt	r3, #2
   1e734:	movw	r2, #1297	; 0x511
   1e738:	bl	12bc4 <__assert_fail@plt>

0001e73c <flatcc_builder_end_table@@Base>:
   1e73c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1e740:	add	fp, sp, #24
   1e744:	sub	sp, sp, #16
   1e748:	mov	r4, r0
   1e74c:	ldr	r0, [r0, #32]
   1e750:	ldrh	r0, [r0, #14]
   1e754:	cmp	r0, #3
   1e758:	bne	1e868 <flatcc_builder_end_table@@Base+0x12c>
   1e75c:	ldrh	r0, [r4, #8]
   1e760:	mov	r1, #4
   1e764:	add	r0, r1, r0, lsl #1
   1e768:	ldr	r6, [r4, #4]
   1e76c:	strh	r0, [r6, #-4]!
   1e770:	ldrh	r1, [r4, #20]
   1e774:	add	r1, r1, #4
   1e778:	strh	r1, [r6, #2]
   1e77c:	uxth	r5, r0
   1e780:	ldr	r0, [r4, #12]
   1e784:	eor	r0, r0, r5
   1e788:	movw	r2, #31153	; 0x79b1
   1e78c:	movt	r2, #40503	; 0x9e37
   1e790:	mul	r0, r0, r2
   1e794:	uxth	r1, r1
   1e798:	eor	r0, r0, r1
   1e79c:	mul	r3, r0, r2
   1e7a0:	str	r3, [r4, #12]
   1e7a4:	mov	r0, r4
   1e7a8:	mov	r1, r6
   1e7ac:	mov	r2, r5
   1e7b0:	bl	1e1e8 <flatcc_builder_create_cached_vtable@@Base>
   1e7b4:	cmp	r0, #0
   1e7b8:	beq	1e858 <flatcc_builder_end_table@@Base+0x11c>
   1e7bc:	mov	r7, r0
   1e7c0:	mov	r8, #0
   1e7c4:	mov	r0, r6
   1e7c8:	mov	r1, #0
   1e7cc:	mov	r2, r5
   1e7d0:	bl	12b64 <memset@plt>
   1e7d4:	ldrh	r3, [r4, #130]	; 0x82
   1e7d8:	ldr	r0, [r4, #76]	; 0x4c
   1e7dc:	ldr	r6, [r4]
   1e7e0:	ldr	r1, [r4, #16]
   1e7e4:	ldr	r2, [r4, #20]
   1e7e8:	ldr	r5, [r4, #32]
   1e7ec:	ldr	r5, [r5, #20]
   1e7f0:	add	r0, r0, r5
   1e7f4:	sub	r6, r6, r0
   1e7f8:	asr	r6, r6, #1
   1e7fc:	stm	sp, {r0, r6, r7}
   1e800:	mov	r0, r4
   1e804:	bl	1e428 <flatcc_builder_create_table@@Base>
   1e808:	cmp	r0, #0
   1e80c:	beq	1e85c <flatcc_builder_end_table@@Base+0x120>
   1e810:	mov	r5, r0
   1e814:	ldr	r0, [r4, #32]
   1e818:	ldr	r1, [r4, #52]	; 0x34
   1e81c:	ldr	r2, [r4, #76]	; 0x4c
   1e820:	ldr	r3, [r0, #24]
   1e824:	str	r3, [r4, #12]
   1e828:	ldrh	r3, [r0, #28]
   1e82c:	strh	r3, [r4, #8]
   1e830:	ldr	r3, [r0, #16]
   1e834:	add	r1, r1, r3
   1e838:	str	r1, [r4, #4]
   1e83c:	ldr	r0, [r0, #20]
   1e840:	add	r0, r2, r0
   1e844:	str	r0, [r4]
   1e848:	mov	r0, r4
   1e84c:	bl	1d5b0 <flatcc_builder_end_buffer@@Base+0xc8>
   1e850:	mov	r8, r5
   1e854:	b	1e85c <flatcc_builder_end_table@@Base+0x120>
   1e858:	mov	r8, #0
   1e85c:	mov	r0, r8
   1e860:	sub	sp, fp, #24
   1e864:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e868:	movw	r0, #19195	; 0x4afb
   1e86c:	movt	r0, #2
   1e870:	movw	r1, #17126	; 0x42e6
   1e874:	movt	r1, #2
   1e878:	movw	r3, #19491	; 0x4c23
   1e87c:	movt	r3, #2
   1e880:	movw	r2, #1317	; 0x525
   1e884:	bl	12bc4 <__assert_fail@plt>

0001e888 <flatcc_builder_create_vector@@Base>:
   1e888:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1e88c:	add	fp, sp, #24
   1e890:	sub	sp, sp, #80	; 0x50
   1e894:	mov	r4, r0
   1e898:	ldr	r0, [fp, #8]
   1e89c:	strh	r0, [fp, #-26]	; 0xffffffe6
   1e8a0:	ldr	r0, [fp, #12]
   1e8a4:	cmp	r2, r0
   1e8a8:	bhi	1e978 <flatcc_builder_create_vector@@Base+0xf0>
   1e8ac:	mov	r6, r3
   1e8b0:	mov	r7, r2
   1e8b4:	mov	r8, r1
   1e8b8:	sub	r0, fp, #26
   1e8bc:	mov	r9, #4
   1e8c0:	mov	r1, #4
   1e8c4:	bl	1ddc8 <flatcc_builder_start_vector@@Base+0x80>
   1e8c8:	ldrh	r5, [fp, #-26]	; 0xffffffe6
   1e8cc:	mov	r0, r4
   1e8d0:	mov	r1, r5
   1e8d4:	bl	1d258 <flatcc_builder_create_buffer@@Base+0x1d0>
   1e8d8:	mov	r0, r7
   1e8dc:	bl	1cff0 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1e8e0:	str	r7, [fp, #-32]	; 0xffffffe0
   1e8e4:	mul	r6, r6, r7
   1e8e8:	mov	r0, r4
   1e8ec:	mov	r1, r6
   1e8f0:	mov	r2, r5
   1e8f4:	bl	1cfdc <flatcc_builder_embed_buffer@@Base+0x1c8>
   1e8f8:	str	r9, [sp]
   1e8fc:	sub	r1, fp, #32
   1e900:	str	r1, [sp, #8]
   1e904:	str	r9, [sp, #12]
   1e908:	mov	r1, #1
   1e90c:	str	r1, [sp, #4]
   1e910:	cmp	r6, #0
   1e914:	beq	1e930 <flatcc_builder_create_vector@@Base+0xa8>
   1e918:	str	r8, [sp, #16]
   1e91c:	str	r6, [sp, #20]
   1e920:	mov	r1, #2
   1e924:	str	r1, [sp, #4]
   1e928:	add	r1, r6, #4
   1e92c:	str	r1, [sp]
   1e930:	cmp	r0, #0
   1e934:	beq	1e964 <flatcc_builder_create_vector@@Base+0xdc>
   1e938:	ldm	sp, {r1, r2}
   1e93c:	add	r1, r1, r0
   1e940:	str	r1, [sp]
   1e944:	mov	r1, sp
   1e948:	add	r1, r1, r2, lsl #3
   1e94c:	movw	r3, #16596	; 0x40d4
   1e950:	movt	r3, #2
   1e954:	str	r3, [r1, #8]
   1e958:	str	r0, [r1, #12]
   1e95c:	add	r0, r2, #1
   1e960:	str	r0, [sp, #4]
   1e964:	mov	r1, sp
   1e968:	mov	r0, r4
   1e96c:	bl	1cff4 <flatcc_builder_embed_buffer@@Base+0x1e0>
   1e970:	sub	sp, fp, #24
   1e974:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1e978:	movw	r0, #19557	; 0x4c65
   1e97c:	movt	r0, #2
   1e980:	movw	r1, #17126	; 0x42e6
   1e984:	movt	r1, #2
   1e988:	movw	r3, #19576	; 0x4c78
   1e98c:	movt	r3, #2
   1e990:	movw	r2, #1365	; 0x555
   1e994:	bl	12bc4 <__assert_fail@plt>

0001e998 <flatcc_builder_end_vector@@Base>:
   1e998:	push	{r4, r5, fp, lr}
   1e99c:	add	fp, sp, #8
   1e9a0:	sub	sp, sp, #8
   1e9a4:	mov	r4, r0
   1e9a8:	ldr	r0, [r0, #32]
   1e9ac:	ldrh	r1, [r0, #14]
   1e9b0:	cmp	r1, #4
   1e9b4:	bne	1e9f8 <flatcc_builder_end_vector@@Base+0x60>
   1e9b8:	ldr	r1, [r4, #16]
   1e9bc:	ldrh	r5, [r4, #130]	; 0x82
   1e9c0:	ldr	r3, [r0, #16]
   1e9c4:	ldr	r2, [r0, #20]
   1e9c8:	ldr	r0, [r0, #24]
   1e9cc:	str	r5, [sp]
   1e9d0:	str	r0, [sp, #4]
   1e9d4:	mov	r0, r4
   1e9d8:	bl	1e888 <flatcc_builder_create_vector@@Base>
   1e9dc:	mov	r5, r0
   1e9e0:	cmp	r0, #0
   1e9e4:	movne	r0, r4
   1e9e8:	blne	1d5b0 <flatcc_builder_end_buffer@@Base+0xc8>
   1e9ec:	mov	r0, r5
   1e9f0:	sub	sp, fp, #8
   1e9f4:	pop	{r4, r5, fp, pc}
   1e9f8:	movw	r0, #17929	; 0x4609
   1e9fc:	movt	r0, #2
   1ea00:	movw	r1, #17126	; 0x42e6
   1ea04:	movt	r1, #2
   1ea08:	movw	r3, #19694	; 0x4cee
   1ea0c:	movt	r3, #2
   1ea10:	movw	r2, #1400	; 0x578
   1ea14:	bl	12bc4 <__assert_fail@plt>

0001ea18 <flatcc_builder_vector_count@@Base>:
   1ea18:	ldr	r0, [r0, #32]
   1ea1c:	ldr	r0, [r0, #20]
   1ea20:	bx	lr

0001ea24 <flatcc_builder_vector_edit@@Base>:
   1ea24:	ldr	r0, [r0, #16]
   1ea28:	bx	lr

0001ea2c <flatcc_builder_create_offset_vector_direct@@Base>:
   1ea2c:	mov	r3, #0
   1ea30:	b	1ea34 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   1ea34:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1ea38:	add	fp, sp, #24
   1ea3c:	sub	sp, sp, #80	; 0x50
   1ea40:	mov	r8, r0
   1ea44:	mov	r0, #0
   1ea48:	cmn	r2, #-1073741823	; 0xc0000001
   1ea4c:	bhi	1eb7c <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   1ea50:	mov	r5, r3
   1ea54:	mov	r9, r2
   1ea58:	mov	r7, r1
   1ea5c:	mov	r6, #4
   1ea60:	mov	r0, r8
   1ea64:	mov	r1, #4
   1ea68:	bl	1d258 <flatcc_builder_create_buffer@@Base+0x1d0>
   1ea6c:	mov	r0, r9
   1ea70:	bl	1cff0 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1ea74:	str	r9, [fp, #-28]	; 0xffffffe4
   1ea78:	lsl	r4, r9, #2
   1ea7c:	mov	r0, r8
   1ea80:	mov	r1, r4
   1ea84:	mov	r2, #4
   1ea88:	bl	1cfdc <flatcc_builder_embed_buffer@@Base+0x1c8>
   1ea8c:	str	r6, [sp, #4]
   1ea90:	sub	r1, fp, #28
   1ea94:	str	r1, [sp, #12]
   1ea98:	str	r6, [sp, #16]
   1ea9c:	mov	r1, #1
   1eaa0:	str	r1, [sp, #8]
   1eaa4:	mov	r1, #0
   1eaa8:	cmp	r1, r9, lsl #2
   1eaac:	beq	1eac8 <flatcc_builder_create_offset_vector_direct@@Base+0x9c>
   1eab0:	str	r7, [sp, #20]
   1eab4:	str	r4, [sp, #24]
   1eab8:	mov	r1, #2
   1eabc:	str	r1, [sp, #8]
   1eac0:	add	r1, r4, #4
   1eac4:	str	r1, [sp, #4]
   1eac8:	cmp	r0, #0
   1eacc:	beq	1eafc <flatcc_builder_create_offset_vector_direct@@Base+0xd0>
   1ead0:	ldmib	sp, {r1, r2}
   1ead4:	add	r1, r1, r0
   1ead8:	str	r1, [sp, #4]
   1eadc:	add	r1, sp, #4
   1eae0:	add	r1, r1, r2, lsl #3
   1eae4:	movw	r3, #16596	; 0x40d4
   1eae8:	movt	r3, #2
   1eaec:	str	r3, [r1, #8]
   1eaf0:	str	r0, [r1, #12]
   1eaf4:	add	r0, r2, #1
   1eaf8:	str	r0, [sp, #8]
   1eafc:	cmp	r9, #0
   1eb00:	beq	1eb70 <flatcc_builder_create_offset_vector_direct@@Base+0x144>
   1eb04:	ldr	r0, [r8, #136]	; 0x88
   1eb08:	mvn	r1, #3
   1eb0c:	sub	r0, r1, r0
   1eb10:	ldr	r1, [sp, #4]
   1eb14:	add	r4, r0, r1
   1eb18:	mov	r6, #0
   1eb1c:	ldr	r0, [r7, r6, lsl #2]
   1eb20:	cmp	r0, #0
   1eb24:	beq	1eb4c <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   1eb28:	add	r0, r4, r0
   1eb2c:	bl	1cff0 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1eb30:	str	r0, [r7, r6, lsl #2]
   1eb34:	cmp	r5, #0
   1eb38:	beq	1eb60 <flatcc_builder_create_offset_vector_direct@@Base+0x134>
   1eb3c:	ldrb	r0, [r5, r6]
   1eb40:	cmp	r0, #0
   1eb44:	bne	1eb60 <flatcc_builder_create_offset_vector_direct@@Base+0x134>
   1eb48:	b	1eb84 <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   1eb4c:	cmp	r5, #0
   1eb50:	beq	1eba4 <flatcc_builder_create_offset_vector_direct@@Base+0x178>
   1eb54:	ldrb	r0, [r5, r6]
   1eb58:	cmp	r0, #0
   1eb5c:	bne	1ebc4 <flatcc_builder_create_offset_vector_direct@@Base+0x198>
   1eb60:	sub	r4, r4, #4
   1eb64:	add	r6, r6, #1
   1eb68:	cmp	r6, r9
   1eb6c:	bcc	1eb1c <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
   1eb70:	add	r1, sp, #4
   1eb74:	mov	r0, r8
   1eb78:	bl	1cff4 <flatcc_builder_embed_buffer@@Base+0x1e0>
   1eb7c:	sub	sp, fp, #24
   1eb80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1eb84:	movw	r0, #21632	; 0x5480
   1eb88:	movt	r0, #2
   1eb8c:	movw	r1, #17126	; 0x42e6
   1eb90:	movt	r1, #2
   1eb94:	movw	r3, #21646	; 0x548e
   1eb98:	movt	r3, #2
   1eb9c:	movw	r2, #1457	; 0x5b1
   1eba0:	bl	12bc4 <__assert_fail@plt>
   1eba4:	movw	r0, #21644	; 0x548c
   1eba8:	movt	r0, #2
   1ebac:	movw	r1, #17126	; 0x42e6
   1ebb0:	movt	r1, #2
   1ebb4:	movw	r3, #21646	; 0x548e
   1ebb8:	movt	r3, #2
   1ebbc:	movw	r2, #1463	; 0x5b7
   1ebc0:	bl	12bc4 <__assert_fail@plt>
   1ebc4:	movw	r0, #21777	; 0x5511
   1ebc8:	movt	r0, #2
   1ebcc:	movw	r1, #17126	; 0x42e6
   1ebd0:	movt	r1, #2
   1ebd4:	movw	r3, #21646	; 0x548e
   1ebd8:	movt	r3, #2
   1ebdc:	movw	r2, #1461	; 0x5b5
   1ebe0:	bl	12bc4 <__assert_fail@plt>

0001ebe4 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   1ebe4:	push	{r4, r5, fp, lr}
   1ebe8:	add	fp, sp, #8
   1ebec:	mov	r3, r1
   1ebf0:	mov	r4, r0
   1ebf4:	ldr	r0, [r0, #32]
   1ebf8:	ldrh	r1, [r0, #14]
   1ebfc:	cmp	r1, #5
   1ec00:	bne	1ec2c <flatcc_builder_end_offset_vector_for_unions@@Base+0x48>
   1ec04:	ldr	r2, [r0, #20]
   1ec08:	ldr	r1, [r4, #16]
   1ec0c:	mov	r0, r4
   1ec10:	bl	1ea34 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   1ec14:	mov	r5, r0
   1ec18:	cmp	r0, #0
   1ec1c:	movne	r0, r4
   1ec20:	blne	1d5b0 <flatcc_builder_end_buffer@@Base+0xc8>
   1ec24:	mov	r0, r5
   1ec28:	pop	{r4, r5, fp, pc}
   1ec2c:	movw	r0, #18178	; 0x4702
   1ec30:	movt	r0, #2
   1ec34:	movw	r1, #17126	; 0x42e6
   1ec38:	movt	r1, #2
   1ec3c:	movw	r3, #19835	; 0x4d7b
   1ec40:	movt	r3, #2
   1ec44:	movw	r2, #1493	; 0x5d5
   1ec48:	bl	12bc4 <__assert_fail@plt>

0001ec4c <flatcc_builder_offset_vector_edit@@Base>:
   1ec4c:	ldr	r0, [r0, #16]
   1ec50:	bx	lr

0001ec54 <flatcc_builder_offset_vector_count@@Base>:
   1ec54:	ldr	r0, [r0, #32]
   1ec58:	ldr	r0, [r0, #20]
   1ec5c:	bx	lr

0001ec60 <flatcc_builder_table_add_union@@Base>:
   1ec60:	push	{r4, r5, r6, r7, fp, lr}
   1ec64:	add	fp, sp, #16
   1ec68:	mov	r5, r0
   1ec6c:	ldr	r0, [r0, #32]
   1ec70:	ldrh	r0, [r0, #14]
   1ec74:	cmp	r0, #3
   1ec78:	bne	1ecec <flatcc_builder_table_add_union@@Base+0x8c>
   1ec7c:	mov	r7, r3
   1ec80:	mov	r6, r1
   1ec84:	uxtb	r4, r2
   1ec88:	cmp	r3, #0
   1ec8c:	beq	1ec98 <flatcc_builder_table_add_union@@Base+0x38>
   1ec90:	cmp	r4, #0
   1ec94:	beq	1ed0c <flatcc_builder_table_add_union@@Base+0xac>
   1ec98:	cmp	r7, #0
   1ec9c:	beq	1ecb8 <flatcc_builder_table_add_union@@Base+0x58>
   1eca0:	mov	r0, r5
   1eca4:	mov	r1, r6
   1eca8:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   1ecac:	cmp	r0, #0
   1ecb0:	beq	1ed4c <flatcc_builder_table_add_union@@Base+0xec>
   1ecb4:	str	r7, [r0]
   1ecb8:	sub	r1, r6, #1
   1ecbc:	mov	r0, r5
   1ecc0:	mov	r2, #1
   1ecc4:	mov	r3, #1
   1ecc8:	bl	1ee30 <flatcc_builder_table_add@@Base>
   1eccc:	cmp	r0, #0
   1ecd0:	beq	1ed2c <flatcc_builder_table_add_union@@Base+0xcc>
   1ecd4:	mov	r5, r0
   1ecd8:	mov	r0, r4
   1ecdc:	bl	1ef10 <flatcc_builder_table_add@@Base+0xe0>
   1ece0:	strb	r4, [r5]
   1ece4:	mov	r0, #0
   1ece8:	pop	{r4, r5, r6, r7, fp, pc}
   1ecec:	movw	r0, #19195	; 0x4afb
   1ecf0:	movt	r0, #2
   1ecf4:	movw	r1, #17126	; 0x42e6
   1ecf8:	movt	r1, #2
   1ecfc:	movw	r3, #19949	; 0x4ded
   1ed00:	movt	r3, #2
   1ed04:	movw	r2, #1518	; 0x5ee
   1ed08:	bl	12bc4 <__assert_fail@plt>
   1ed0c:	movw	r0, #20037	; 0x4e45
   1ed10:	movt	r0, #2
   1ed14:	movw	r1, #17126	; 0x42e6
   1ed18:	movt	r1, #2
   1ed1c:	movw	r3, #19949	; 0x4ded
   1ed20:	movt	r3, #2
   1ed24:	movw	r2, #1519	; 0x5ef
   1ed28:	bl	12bc4 <__assert_fail@plt>
   1ed2c:	movw	r0, #20081	; 0x4e71
   1ed30:	movt	r0, #2
   1ed34:	movw	r1, #17126	; 0x42e6
   1ed38:	movt	r1, #2
   1ed3c:	movw	r3, #19949	; 0x4ded
   1ed40:	movt	r3, #2
   1ed44:	movw	r2, #1526	; 0x5f6
   1ed48:	bl	12bc4 <__assert_fail@plt>
   1ed4c:	movw	r0, #20071	; 0x4e67
   1ed50:	movt	r0, #2
   1ed54:	movw	r1, #17126	; 0x42e6
   1ed58:	movt	r1, #2
   1ed5c:	movw	r3, #19949	; 0x4ded
   1ed60:	movt	r3, #2
   1ed64:	movw	r2, #1522	; 0x5f2
   1ed68:	bl	12bc4 <__assert_fail@plt>

0001ed6c <flatcc_builder_table_add_offset@@Base>:
   1ed6c:	push	{fp, lr}
   1ed70:	mov	fp, sp
   1ed74:	ldr	r2, [r0, #32]
   1ed78:	ldrh	r2, [r2, #14]
   1ed7c:	cmp	r2, #3
   1ed80:	bne	1edd0 <flatcc_builder_table_add_offset@@Base+0x64>
   1ed84:	movw	r2, #32765	; 0x7ffd
   1ed88:	cmp	r1, r2
   1ed8c:	bcs	1edf0 <flatcc_builder_table_add_offset@@Base+0x84>
   1ed90:	ldr	r2, [r0, #4]
   1ed94:	add	r2, r2, r1, lsl #1
   1ed98:	ldrh	r2, [r2]
   1ed9c:	cmp	r2, #0
   1eda0:	bne	1ee10 <flatcc_builder_table_add_offset@@Base+0xa4>
   1eda4:	ldr	r2, [r0, #12]
   1eda8:	eor	r2, r2, r1
   1edac:	movw	r3, #31153	; 0x79b1
   1edb0:	movt	r3, #40503	; 0x9e37
   1edb4:	mul	r2, r2, r3
   1edb8:	eor	r2, r2, #4
   1edbc:	mul	r2, r2, r3
   1edc0:	str	r2, [r0, #12]
   1edc4:	uxth	r1, r1
   1edc8:	pop	{fp, lr}
   1edcc:	b	1f73c <flatcc_builder_table_add_copy@@Base+0x40>
   1edd0:	movw	r0, #19195	; 0x4afb
   1edd4:	movt	r0, #2
   1edd8:	movw	r1, #17126	; 0x42e6
   1eddc:	movt	r1, #2
   1ede0:	movw	r3, #20975	; 0x51ef
   1ede4:	movt	r3, #2
   1ede8:	movw	r2, #1811	; 0x713
   1edec:	bl	12bc4 <__assert_fail@plt>
   1edf0:	movw	r0, #20847	; 0x516f
   1edf4:	movt	r0, #2
   1edf8:	movw	r1, #17126	; 0x42e6
   1edfc:	movt	r1, #2
   1ee00:	movw	r3, #20975	; 0x51ef
   1ee04:	movt	r3, #2
   1ee08:	movw	r2, #1812	; 0x714
   1ee0c:	bl	12bc4 <__assert_fail@plt>
   1ee10:	movw	r0, #21644	; 0x548c
   1ee14:	movt	r0, #2
   1ee18:	movw	r1, #17126	; 0x42e6
   1ee1c:	movt	r1, #2
   1ee20:	movw	r3, #20975	; 0x51ef
   1ee24:	movt	r3, #2
   1ee28:	movw	r2, #1819	; 0x71b
   1ee2c:	bl	12bc4 <__assert_fail@plt>

0001ee30 <flatcc_builder_table_add@@Base>:
   1ee30:	push	{fp, lr}
   1ee34:	mov	fp, sp
   1ee38:	mov	ip, r3
   1ee3c:	ldr	r3, [r0, #32]
   1ee40:	ldrh	r3, [r3, #14]
   1ee44:	cmp	r3, #3
   1ee48:	bne	1eeb0 <flatcc_builder_table_add@@Base+0x80>
   1ee4c:	movw	r3, #32765	; 0x7ffd
   1ee50:	cmp	r1, r3
   1ee54:	bcs	1eed0 <flatcc_builder_table_add@@Base+0xa0>
   1ee58:	mov	lr, r2
   1ee5c:	ldrh	r3, [r0, #130]	; 0x82
   1ee60:	cmp	r3, ip
   1ee64:	strhcc	ip, [r0, #130]	; 0x82
   1ee68:	ldr	r3, [r0, #4]
   1ee6c:	add	r3, r3, r1, lsl #1
   1ee70:	ldrh	r3, [r3]
   1ee74:	cmp	r3, #0
   1ee78:	bne	1eef0 <flatcc_builder_table_add@@Base+0xc0>
   1ee7c:	ldr	r3, [r0, #12]
   1ee80:	eor	r3, r3, r1
   1ee84:	movw	r2, #31153	; 0x79b1
   1ee88:	movt	r2, #40503	; 0x9e37
   1ee8c:	mul	r3, r3, r2
   1ee90:	eor	r3, r3, lr
   1ee94:	mul	r2, r3, r2
   1ee98:	str	r2, [r0, #12]
   1ee9c:	uxth	r3, r1
   1eea0:	mov	r1, lr
   1eea4:	mov	r2, ip
   1eea8:	pop	{fp, lr}
   1eeac:	b	1f630 <flatcc_builder_string_len@@Base+0xc>
   1eeb0:	movw	r0, #19195	; 0x4afb
   1eeb4:	movt	r0, #2
   1eeb8:	movw	r1, #17126	; 0x42e6
   1eebc:	movt	r1, #2
   1eec0:	movw	r3, #20773	; 0x5125
   1eec4:	movt	r3, #2
   1eec8:	movw	r2, #1773	; 0x6ed
   1eecc:	bl	12bc4 <__assert_fail@plt>
   1eed0:	movw	r0, #20847	; 0x516f
   1eed4:	movt	r0, #2
   1eed8:	movw	r1, #17126	; 0x42e6
   1eedc:	movt	r1, #2
   1eee0:	movw	r3, #20773	; 0x5125
   1eee4:	movt	r3, #2
   1eee8:	movw	r2, #1774	; 0x6ee
   1eeec:	bl	12bc4 <__assert_fail@plt>
   1eef0:	movw	r0, #21644	; 0x548c
   1eef4:	movt	r0, #2
   1eef8:	movw	r1, #17126	; 0x42e6
   1eefc:	movt	r1, #2
   1ef00:	movw	r3, #20773	; 0x5125
   1ef04:	movt	r3, #2
   1ef08:	movw	r2, #1784	; 0x6f8
   1ef0c:	bl	12bc4 <__assert_fail@plt>
   1ef10:	bx	lr

0001ef14 <flatcc_builder_table_add_union_vector@@Base>:
   1ef14:	push	{r4, r5, r6, r7, fp, lr}
   1ef18:	add	fp, sp, #16
   1ef1c:	mov	r6, r0
   1ef20:	ldr	r0, [r0, #32]
   1ef24:	ldrh	r0, [r0, #14]
   1ef28:	cmp	r0, #3
   1ef2c:	bne	1ef94 <flatcc_builder_table_add_union_vector@@Base+0x80>
   1ef30:	mov	r4, r3
   1ef34:	mov	r7, r2
   1ef38:	mov	r5, r1
   1ef3c:	clz	r0, r3
   1ef40:	lsr	r0, r0, #5
   1ef44:	clz	r1, r2
   1ef48:	lsr	r1, r1, #5
   1ef4c:	cmp	r1, r0
   1ef50:	bne	1efb4 <flatcc_builder_table_add_union_vector@@Base+0xa0>
   1ef54:	cmp	r7, #0
   1ef58:	beq	1ef8c <flatcc_builder_table_add_union_vector@@Base+0x78>
   1ef5c:	sub	r1, r5, #1
   1ef60:	mov	r0, r6
   1ef64:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   1ef68:	cmp	r0, #0
   1ef6c:	beq	1efd4 <flatcc_builder_table_add_union_vector@@Base+0xc0>
   1ef70:	str	r7, [r0]
   1ef74:	mov	r0, r6
   1ef78:	mov	r1, r5
   1ef7c:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   1ef80:	cmp	r0, #0
   1ef84:	beq	1eff4 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   1ef88:	str	r4, [r0]
   1ef8c:	mov	r0, #0
   1ef90:	pop	{r4, r5, r6, r7, fp, pc}
   1ef94:	movw	r0, #19195	; 0x4afb
   1ef98:	movt	r0, #2
   1ef9c:	movw	r1, #17126	; 0x42e6
   1efa0:	movt	r1, #2
   1efa4:	movw	r3, #20093	; 0x4e7d
   1efa8:	movt	r3, #2
   1efac:	mov	r2, #1536	; 0x600
   1efb0:	bl	12bc4 <__assert_fail@plt>
   1efb4:	movw	r0, #20192	; 0x4ee0
   1efb8:	movt	r0, #2
   1efbc:	movw	r1, #17126	; 0x42e6
   1efc0:	movt	r1, #2
   1efc4:	movw	r3, #20093	; 0x4e7d
   1efc8:	movt	r3, #2
   1efcc:	movw	r2, #1537	; 0x601
   1efd0:	bl	12bc4 <__assert_fail@plt>
   1efd4:	movw	r0, #20071	; 0x4e67
   1efd8:	movt	r0, #2
   1efdc:	movw	r1, #17126	; 0x42e6
   1efe0:	movt	r1, #2
   1efe4:	movw	r3, #20093	; 0x4e7d
   1efe8:	movt	r3, #2
   1efec:	movw	r2, #1540	; 0x604
   1eff0:	bl	12bc4 <__assert_fail@plt>
   1eff4:	movw	r0, #20071	; 0x4e67
   1eff8:	movt	r0, #2
   1effc:	movw	r1, #17126	; 0x42e6
   1f000:	movt	r1, #2
   1f004:	movw	r3, #20093	; 0x4e7d
   1f008:	movt	r3, #2
   1f00c:	movw	r2, #1544	; 0x608
   1f010:	bl	12bc4 <__assert_fail@plt>

0001f014 <flatcc_builder_create_union_vector@@Base>:
   1f014:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f018:	add	fp, sp, #24
   1f01c:	sub	sp, sp, #16
   1f020:	mov	r6, r3
   1f024:	mov	r7, r2
   1f028:	mov	r4, r1
   1f02c:	mov	r5, r0
   1f030:	mov	r0, #0
   1f034:	str	r0, [r5]
   1f038:	str	r0, [r5, #4]
   1f03c:	mov	r0, r1
   1f040:	bl	1ddd8 <flatcc_builder_start_offset_vector@@Base>
   1f044:	cmp	r0, #0
   1f048:	beq	1f054 <flatcc_builder_create_union_vector@@Base+0x40>
   1f04c:	sub	sp, fp, #24
   1f050:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f054:	mov	r0, r4
   1f058:	mov	r1, r6
   1f05c:	bl	1d924 <flatcc_builder_extend_offset_vector@@Base>
   1f060:	cmp	r0, #0
   1f064:	beq	1f04c <flatcc_builder_create_union_vector@@Base+0x38>
   1f068:	mov	r0, r4
   1f06c:	mov	r1, r6
   1f070:	bl	1d6a0 <flatcc_builder_start_struct@@Base+0x84>
   1f074:	cmp	r0, #0
   1f078:	beq	1f04c <flatcc_builder_create_union_vector@@Base+0x38>
   1f07c:	mov	r8, r0
   1f080:	mov	r0, r4
   1f084:	bl	1ec4c <flatcc_builder_offset_vector_edit@@Base>
   1f088:	mov	ip, r0
   1f08c:	cmp	r6, #0
   1f090:	beq	1f0c0 <flatcc_builder_create_union_vector@@Base+0xac>
   1f094:	add	r0, r7, #4
   1f098:	mov	r1, r6
   1f09c:	mov	r2, ip
   1f0a0:	mov	r7, r8
   1f0a4:	ldrb	r3, [r0, #-4]
   1f0a8:	strb	r3, [r7], #1
   1f0ac:	ldr	r3, [r0]
   1f0b0:	str	r3, [r2], #4
   1f0b4:	add	r0, r0, #8
   1f0b8:	subs	r1, r1, #1
   1f0bc:	bne	1f0a4 <flatcc_builder_create_union_vector@@Base+0x90>
   1f0c0:	str	r6, [sp]
   1f0c4:	add	r0, sp, #8
   1f0c8:	mov	r1, r4
   1f0cc:	mov	r2, r8
   1f0d0:	mov	r3, ip
   1f0d4:	bl	1f0f4 <flatcc_builder_create_union_vector_direct@@Base>
   1f0d8:	ldr	r0, [sp, #8]
   1f0dc:	ldr	r1, [sp, #12]
   1f0e0:	stm	r5, {r0, r1}
   1f0e4:	mov	r0, r4
   1f0e8:	bl	1d5b0 <flatcc_builder_end_buffer@@Base+0xc8>
   1f0ec:	sub	sp, fp, #24
   1f0f0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001f0f4 <flatcc_builder_create_union_vector_direct@@Base>:
   1f0f4:	push	{r4, r5, r6, r7, fp, lr}
   1f0f8:	add	fp, sp, #16
   1f0fc:	sub	sp, sp, #8
   1f100:	mov	r5, r2
   1f104:	mov	r6, r1
   1f108:	mov	r4, r0
   1f10c:	mov	r0, #0
   1f110:	str	r0, [r4]
   1f114:	str	r0, [r4, #4]
   1f118:	ldr	r7, [fp, #8]
   1f11c:	mov	r0, r1
   1f120:	mov	r1, r3
   1f124:	mov	r2, r7
   1f128:	mov	r3, r5
   1f12c:	bl	1ea34 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   1f130:	str	r0, [r4, #4]
   1f134:	cmp	r0, #0
   1f138:	beq	1f164 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   1f13c:	mvn	r0, #0
   1f140:	mov	r1, #1
   1f144:	str	r1, [sp]
   1f148:	str	r0, [sp, #4]
   1f14c:	mov	r0, r6
   1f150:	mov	r1, r5
   1f154:	mov	r2, r7
   1f158:	mov	r3, #1
   1f15c:	bl	1e888 <flatcc_builder_create_vector@@Base>
   1f160:	str	r0, [r4]
   1f164:	sub	sp, fp, #16
   1f168:	pop	{r4, r5, r6, r7, fp, pc}

0001f16c <flatcc_builder_start_union_vector@@Base>:
   1f16c:	push	{r4, r5, fp, lr}
   1f170:	add	fp, sp, #8
   1f174:	mov	r4, r0
   1f178:	mov	r1, #4
   1f17c:	bl	1d3f0 <flatcc_builder_start_buffer@@Base+0xbc>
   1f180:	mvn	r5, #0
   1f184:	cmp	r0, #0
   1f188:	beq	1f194 <flatcc_builder_start_union_vector@@Base+0x28>
   1f18c:	mov	r0, r5
   1f190:	pop	{r4, r5, fp, pc}
   1f194:	ldr	r0, [r4, #32]
   1f198:	mov	r1, #8
   1f19c:	str	r1, [r0, #16]
   1f1a0:	ldr	r0, [r4, #32]
   1f1a4:	mov	r5, #0
   1f1a8:	str	r5, [r0, #20]
   1f1ac:	ldr	r0, [r4, #32]
   1f1b0:	mov	r1, #7
   1f1b4:	strh	r1, [r0, #14]
   1f1b8:	mov	r0, r4
   1f1bc:	mvn	r1, #3
   1f1c0:	bl	1d668 <flatcc_builder_start_struct@@Base+0x4c>
   1f1c4:	mov	r0, r5
   1f1c8:	pop	{r4, r5, fp, pc}

0001f1cc <flatcc_builder_end_union_vector@@Base>:
   1f1cc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1f1d0:	add	fp, sp, #24
   1f1d4:	sub	sp, sp, #16
   1f1d8:	mov	r9, r0
   1f1dc:	mov	r0, #0
   1f1e0:	str	r0, [r9]
   1f1e4:	str	r0, [r9, #4]
   1f1e8:	ldr	r0, [r1, #32]
   1f1ec:	ldrh	r0, [r0, #14]
   1f1f0:	cmp	r0, #7
   1f1f4:	bne	1f294 <flatcc_builder_end_union_vector@@Base+0xc8>
   1f1f8:	mov	r4, r1
   1f1fc:	mov	r0, r1
   1f200:	bl	1f2b4 <flatcc_builder_union_vector_count@@Base>
   1f204:	mov	r6, r0
   1f208:	add	r1, r0, r0, lsl #2
   1f20c:	mov	r0, r4
   1f210:	bl	1d6a0 <flatcc_builder_start_struct@@Base+0x84>
   1f214:	cmp	r0, #0
   1f218:	beq	1f28c <flatcc_builder_end_union_vector@@Base+0xc0>
   1f21c:	mov	r7, r0
   1f220:	add	r8, r0, r6, lsl #2
   1f224:	mov	r0, r4
   1f228:	bl	1f2c0 <flatcc_builder_union_vector_edit@@Base>
   1f22c:	cmp	r6, #0
   1f230:	beq	1f260 <flatcc_builder_end_union_vector@@Base+0x94>
   1f234:	add	r0, r0, #4
   1f238:	mov	r1, r6
   1f23c:	mov	r2, r7
   1f240:	mov	r3, r8
   1f244:	ldrb	r5, [r0, #-4]
   1f248:	strb	r5, [r3], #1
   1f24c:	ldr	r5, [r0]
   1f250:	str	r5, [r2], #4
   1f254:	add	r0, r0, #8
   1f258:	subs	r1, r1, #1
   1f25c:	bne	1f244 <flatcc_builder_end_union_vector@@Base+0x78>
   1f260:	str	r6, [sp]
   1f264:	add	r0, sp, #8
   1f268:	mov	r1, r4
   1f26c:	mov	r2, r8
   1f270:	mov	r3, r7
   1f274:	bl	1f0f4 <flatcc_builder_create_union_vector_direct@@Base>
   1f278:	ldr	r0, [sp, #8]
   1f27c:	ldr	r1, [sp, #12]
   1f280:	stm	r9, {r0, r1}
   1f284:	mov	r0, r4
   1f288:	bl	1d5b0 <flatcc_builder_end_buffer@@Base+0xc8>
   1f28c:	sub	sp, fp, #24
   1f290:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1f294:	movw	r0, #20232	; 0x4f08
   1f298:	movt	r0, #2
   1f29c:	movw	r1, #17126	; 0x42e6
   1f2a0:	movt	r1, #2
   1f2a4:	movw	r3, #20282	; 0x4f3a
   1f2a8:	movt	r3, #2
   1f2ac:	movw	r2, #1617	; 0x651
   1f2b0:	bl	12bc4 <__assert_fail@plt>

0001f2b4 <flatcc_builder_union_vector_count@@Base>:
   1f2b4:	ldr	r0, [r0, #32]
   1f2b8:	ldr	r0, [r0, #20]
   1f2bc:	bx	lr

0001f2c0 <flatcc_builder_union_vector_edit@@Base>:
   1f2c0:	ldr	r0, [r0, #16]
   1f2c4:	bx	lr

0001f2c8 <flatcc_builder_extend_union_vector@@Base>:
   1f2c8:	push	{r4, r5, fp, lr}
   1f2cc:	add	fp, sp, #8
   1f2d0:	mov	r5, r1
   1f2d4:	mov	r4, r0
   1f2d8:	mvn	r2, #-536870912	; 0xe0000000
   1f2dc:	bl	1d7a4 <flatcc_builder_extend_vector@@Base+0x44>
   1f2e0:	mov	r1, r0
   1f2e4:	mov	r0, #0
   1f2e8:	cmp	r1, #0
   1f2ec:	popne	{r4, r5, fp, pc}
   1f2f0:	lsl	r1, r5, #3
   1f2f4:	mov	r0, r4
   1f2f8:	bl	1d6a0 <flatcc_builder_start_struct@@Base+0x84>
   1f2fc:	pop	{r4, r5, fp, pc}

0001f300 <flatcc_builder_truncate_union_vector@@Base>:
   1f300:	push	{fp, lr}
   1f304:	mov	fp, sp
   1f308:	ldr	r2, [r0, #32]
   1f30c:	ldrh	r3, [r2, #14]
   1f310:	cmp	r3, #7
   1f314:	bne	1f344 <flatcc_builder_truncate_union_vector@@Base+0x44>
   1f318:	ldr	r3, [r2, #20]
   1f31c:	cmp	r3, r1
   1f320:	bcc	1f364 <flatcc_builder_truncate_union_vector@@Base+0x64>
   1f324:	sub	r3, r3, r1
   1f328:	str	r3, [r2, #20]
   1f32c:	ldr	r2, [r0, #32]
   1f330:	ldr	r2, [r2, #16]
   1f334:	mul	r1, r2, r1
   1f338:	bl	1dc2c <flatcc_builder_truncate_vector@@Base+0x84>
   1f33c:	mov	r0, #0
   1f340:	pop	{fp, pc}
   1f344:	movw	r0, #20232	; 0x4f08
   1f348:	movt	r0, #2
   1f34c:	movw	r1, #17126	; 0x42e6
   1f350:	movt	r1, #2
   1f354:	movw	r3, #20365	; 0x4f8d
   1f358:	movt	r3, #2
   1f35c:	movw	r2, #1665	; 0x681
   1f360:	bl	12bc4 <__assert_fail@plt>
   1f364:	movw	r0, #18796	; 0x496c
   1f368:	movt	r0, #2
   1f36c:	movw	r1, #17126	; 0x42e6
   1f370:	movt	r1, #2
   1f374:	movw	r3, #20365	; 0x4f8d
   1f378:	movt	r3, #2
   1f37c:	movw	r2, #1666	; 0x682
   1f380:	bl	12bc4 <__assert_fail@plt>

0001f384 <flatcc_builder_union_vector_push@@Base>:
   1f384:	push	{r4, r5, r6, sl, fp, lr}
   1f388:	add	fp, sp, #16
   1f38c:	mov	r4, r2
   1f390:	mov	r5, r1
   1f394:	ldr	r1, [r0, #32]
   1f398:	ldrh	r2, [r1, #14]
   1f39c:	cmp	r2, #7
   1f3a0:	bne	1f3dc <flatcc_builder_union_vector_push@@Base+0x58>
   1f3a4:	ldr	r2, [r1, #20]
   1f3a8:	mov	r6, #0
   1f3ac:	cmn	r2, #-536870911	; 0xe0000001
   1f3b0:	beq	1f3d4 <flatcc_builder_union_vector_push@@Base+0x50>
   1f3b4:	add	r2, r2, #1
   1f3b8:	str	r2, [r1, #20]
   1f3bc:	mov	r1, #8
   1f3c0:	bl	1d6a0 <flatcc_builder_start_struct@@Base+0x84>
   1f3c4:	cmp	r0, #0
   1f3c8:	strne	r5, [r0]
   1f3cc:	strne	r4, [r0, #4]
   1f3d0:	movne	r6, r0
   1f3d4:	mov	r0, r6
   1f3d8:	pop	{r4, r5, r6, sl, fp, pc}
   1f3dc:	movw	r0, #20232	; 0x4f08
   1f3e0:	movt	r0, #2
   1f3e4:	movw	r1, #17126	; 0x42e6
   1f3e8:	movt	r1, #2
   1f3ec:	movw	r3, #20434	; 0x4fd2
   1f3f0:	movt	r3, #2
   1f3f4:	movw	r2, #1677	; 0x68d
   1f3f8:	bl	12bc4 <__assert_fail@plt>

0001f3fc <flatcc_builder_append_union_vector@@Base>:
   1f3fc:	push	{r4, r5, r6, sl, fp, lr}
   1f400:	add	fp, sp, #16
   1f404:	mov	r6, r0
   1f408:	ldr	r0, [r0, #32]
   1f40c:	ldrh	r0, [r0, #14]
   1f410:	cmp	r0, #7
   1f414:	bne	1f454 <flatcc_builder_append_union_vector@@Base+0x58>
   1f418:	mov	r5, r2
   1f41c:	mov	r4, r1
   1f420:	mov	r0, r6
   1f424:	mov	r1, r2
   1f428:	mvn	r2, #-536870912	; 0xe0000000
   1f42c:	bl	1d7a4 <flatcc_builder_extend_vector@@Base+0x44>
   1f430:	mov	r1, r0
   1f434:	mov	r0, #0
   1f438:	cmp	r1, #0
   1f43c:	popne	{r4, r5, r6, sl, fp, pc}
   1f440:	lsl	r2, r5, #3
   1f444:	mov	r0, r6
   1f448:	mov	r1, r4
   1f44c:	bl	1d86c <flatcc_builder_vector_push@@Base+0x80>
   1f450:	pop	{r4, r5, r6, sl, fp, pc}
   1f454:	movw	r0, #20232	; 0x4f08
   1f458:	movt	r0, #2
   1f45c:	movw	r1, #17126	; 0x42e6
   1f460:	movt	r1, #2
   1f464:	movw	r3, #20543	; 0x503f
   1f468:	movt	r3, #2
   1f46c:	movw	r2, #1692	; 0x69c
   1f470:	bl	12bc4 <__assert_fail@plt>

0001f474 <flatcc_builder_create_string@@Base>:
   1f474:	push	{r4, r5, r6, r7, fp, lr}
   1f478:	add	fp, sp, #16
   1f47c:	sub	sp, sp, #80	; 0x50
   1f480:	mov	r5, r2
   1f484:	mov	r6, r1
   1f488:	mov	r4, r0
   1f48c:	mov	r0, r2
   1f490:	bl	1cff0 <flatcc_builder_embed_buffer@@Base+0x1dc>
   1f494:	str	r5, [fp, #-20]	; 0xffffffec
   1f498:	add	r1, r5, #1
   1f49c:	mov	r7, #4
   1f4a0:	mov	r0, r4
   1f4a4:	mov	r2, #4
   1f4a8:	bl	1cfdc <flatcc_builder_embed_buffer@@Base+0x1c8>
   1f4ac:	str	r7, [sp, #4]
   1f4b0:	sub	r1, fp, #20
   1f4b4:	str	r1, [sp, #12]
   1f4b8:	str	r7, [sp, #16]
   1f4bc:	mov	r1, #1
   1f4c0:	str	r1, [sp, #8]
   1f4c4:	add	r0, r0, #1
   1f4c8:	cmp	r5, #0
   1f4cc:	beq	1f4e8 <flatcc_builder_create_string@@Base+0x74>
   1f4d0:	str	r6, [sp, #20]
   1f4d4:	str	r5, [sp, #24]
   1f4d8:	mov	r1, #2
   1f4dc:	str	r1, [sp, #8]
   1f4e0:	add	r1, r5, #4
   1f4e4:	str	r1, [sp, #4]
   1f4e8:	cmp	r0, #0
   1f4ec:	beq	1f51c <flatcc_builder_create_string@@Base+0xa8>
   1f4f0:	ldmib	sp, {r1, r2}
   1f4f4:	add	r1, r1, r0
   1f4f8:	str	r1, [sp, #4]
   1f4fc:	add	r1, sp, #4
   1f500:	add	r1, r1, r2, lsl #3
   1f504:	movw	r3, #16596	; 0x40d4
   1f508:	movt	r3, #2
   1f50c:	str	r3, [r1, #8]
   1f510:	str	r0, [r1, #12]
   1f514:	add	r0, r2, #1
   1f518:	str	r0, [sp, #8]
   1f51c:	add	r1, sp, #4
   1f520:	mov	r0, r4
   1f524:	bl	1cff4 <flatcc_builder_embed_buffer@@Base+0x1e0>
   1f528:	sub	sp, fp, #16
   1f52c:	pop	{r4, r5, r6, r7, fp, pc}

0001f530 <flatcc_builder_create_string_str@@Base>:
   1f530:	push	{r4, r5, fp, lr}
   1f534:	add	fp, sp, #8
   1f538:	mov	r4, r1
   1f53c:	mov	r5, r0
   1f540:	mov	r0, r1
   1f544:	bl	12b40 <strlen@plt>
   1f548:	mov	r2, r0
   1f54c:	mov	r0, r5
   1f550:	mov	r1, r4
   1f554:	pop	{r4, r5, fp, lr}
   1f558:	b	1f474 <flatcc_builder_create_string@@Base>

0001f55c <flatcc_builder_create_string_strn@@Base>:
   1f55c:	push	{r4, r5, fp, lr}
   1f560:	add	fp, sp, #8
   1f564:	mov	r4, r1
   1f568:	mov	r5, r0
   1f56c:	mov	r0, r1
   1f570:	mov	r1, r2
   1f574:	bl	1db7c <flatcc_builder_append_string_strn@@Base+0x30>
   1f578:	mov	r2, r0
   1f57c:	mov	r0, r5
   1f580:	mov	r1, r4
   1f584:	pop	{r4, r5, fp, lr}
   1f588:	b	1f474 <flatcc_builder_create_string@@Base>

0001f58c <flatcc_builder_end_string@@Base>:
   1f58c:	push	{r4, r5, fp, lr}
   1f590:	add	fp, sp, #8
   1f594:	mov	r4, r0
   1f598:	ldr	r0, [r0, #32]
   1f59c:	ldrh	r1, [r0, #14]
   1f5a0:	cmp	r1, #6
   1f5a4:	bne	1f5dc <flatcc_builder_end_string@@Base+0x50>
   1f5a8:	ldr	r2, [r4, #20]
   1f5ac:	ldr	r0, [r0, #20]
   1f5b0:	cmp	r0, r2
   1f5b4:	bne	1f5fc <flatcc_builder_end_string@@Base+0x70>
   1f5b8:	ldr	r1, [r4, #16]
   1f5bc:	mov	r0, r4
   1f5c0:	bl	1f474 <flatcc_builder_create_string@@Base>
   1f5c4:	mov	r5, r0
   1f5c8:	cmp	r0, #0
   1f5cc:	movne	r0, r4
   1f5d0:	blne	1d5b0 <flatcc_builder_end_buffer@@Base+0xc8>
   1f5d4:	mov	r0, r5
   1f5d8:	pop	{r4, r5, fp, pc}
   1f5dc:	movw	r0, #18443	; 0x480b
   1f5e0:	movt	r0, #2
   1f5e4:	movw	r1, #17126	; 0x42e6
   1f5e8:	movt	r1, #2
   1f5ec:	movw	r3, #20670	; 0x50be
   1f5f0:	movt	r3, #2
   1f5f4:	movw	r2, #1732	; 0x6c4
   1f5f8:	bl	12bc4 <__assert_fail@plt>
   1f5fc:	movw	r0, #20737	; 0x5101
   1f600:	movt	r0, #2
   1f604:	movw	r1, #17126	; 0x42e6
   1f608:	movt	r1, #2
   1f60c:	movw	r3, #20670	; 0x50be
   1f610:	movt	r3, #2
   1f614:	movw	r2, #1733	; 0x6c5
   1f618:	bl	12bc4 <__assert_fail@plt>

0001f61c <flatcc_builder_string_edit@@Base>:
   1f61c:	ldr	r0, [r0, #16]
   1f620:	bx	lr

0001f624 <flatcc_builder_string_len@@Base>:
   1f624:	ldr	r0, [r0, #32]
   1f628:	ldr	r0, [r0, #20]
   1f62c:	bx	lr
   1f630:	push	{r4, r5, r6, sl, fp, lr}
   1f634:	add	fp, sp, #16
   1f638:	mov	r5, r3
   1f63c:	mov	r4, r0
   1f640:	ldr	r0, [r0, #20]
   1f644:	ldr	r3, [r4, #24]
   1f648:	add	r0, r2, r0
   1f64c:	sub	r0, r0, #1
   1f650:	rsb	r2, r2, #0
   1f654:	and	r6, r0, r2
   1f658:	add	r0, r6, r1
   1f65c:	str	r0, [r4, #20]
   1f660:	cmp	r0, r3
   1f664:	bcc	1f688 <flatcc_builder_string_len@@Base+0x64>
   1f668:	add	r1, r0, #1
   1f66c:	mov	r0, r4
   1f670:	movw	r2, #65532	; 0xfffc
   1f674:	bl	1fad4 <flatcc_builder_get_emit_context@@Base+0x18>
   1f678:	mov	r1, r0
   1f67c:	mov	r0, #0
   1f680:	cmp	r1, #0
   1f684:	popne	{r4, r5, r6, sl, fp, pc}
   1f688:	ldr	r0, [r4, #4]
   1f68c:	add	r0, r0, r5, lsl #1
   1f690:	add	r1, r6, #4
   1f694:	strh	r1, [r0]
   1f698:	ldrh	r0, [r4, #8]
   1f69c:	cmp	r0, r5
   1f6a0:	addls	r0, r5, #1
   1f6a4:	strhls	r0, [r4, #8]
   1f6a8:	ldr	r0, [r4, #16]
   1f6ac:	add	r0, r0, r6
   1f6b0:	pop	{r4, r5, r6, sl, fp, pc}

0001f6b4 <flatcc_builder_table_edit@@Base>:
   1f6b4:	ldr	r2, [r0, #32]
   1f6b8:	ldrh	r2, [r2, #14]
   1f6bc:	cmp	r2, #3
   1f6c0:	ldreq	r2, [r0, #16]
   1f6c4:	ldreq	r0, [r0, #20]
   1f6c8:	addeq	r0, r2, r0
   1f6cc:	subeq	r0, r0, r1
   1f6d0:	bxeq	lr
   1f6d4:	push	{fp, lr}
   1f6d8:	mov	fp, sp
   1f6dc:	movw	r0, #19195	; 0x4afb
   1f6e0:	movt	r0, #2
   1f6e4:	movw	r1, #17126	; 0x42e6
   1f6e8:	movt	r1, #2
   1f6ec:	movw	r3, #20915	; 0x51b3
   1f6f0:	movt	r3, #2
   1f6f4:	movw	r2, #1794	; 0x702
   1f6f8:	bl	12bc4 <__assert_fail@plt>

0001f6fc <flatcc_builder_table_add_copy@@Base>:
   1f6fc:	push	{r4, r5, r6, sl, fp, lr}
   1f700:	add	fp, sp, #16
   1f704:	mov	r4, r3
   1f708:	mov	r5, r2
   1f70c:	ldr	r3, [fp, #8]
   1f710:	mov	r2, r4
   1f714:	bl	1ee30 <flatcc_builder_table_add@@Base>
   1f718:	mov	r6, r0
   1f71c:	cmp	r0, #0
   1f720:	beq	1f734 <flatcc_builder_table_add_copy@@Base+0x38>
   1f724:	mov	r0, r6
   1f728:	mov	r1, r5
   1f72c:	mov	r2, r4
   1f730:	bl	12ab0 <memcpy@plt>
   1f734:	mov	r0, r6
   1f738:	pop	{r4, r5, r6, sl, fp, pc}
   1f73c:	push	{r4, r5, r6, r7, fp, lr}
   1f740:	add	fp, sp, #16
   1f744:	mov	r5, r1
   1f748:	mov	r4, r0
   1f74c:	ldr	r0, [r0, #20]
   1f750:	ldr	r1, [r4, #24]
   1f754:	add	r0, r0, #3
   1f758:	bic	r7, r0, #3
   1f75c:	add	r6, r7, #4
   1f760:	str	r6, [r4, #20]
   1f764:	cmp	r6, r1
   1f768:	bls	1f78c <flatcc_builder_table_add_copy@@Base+0x90>
   1f76c:	mov	r0, r4
   1f770:	mov	r1, r6
   1f774:	movw	r2, #65532	; 0xfffc
   1f778:	bl	1fad4 <flatcc_builder_get_emit_context@@Base+0x18>
   1f77c:	mov	r1, r0
   1f780:	mov	r0, #0
   1f784:	cmp	r1, #0
   1f788:	popne	{r4, r5, r6, r7, fp, pc}
   1f78c:	ldr	r0, [r4, #4]
   1f790:	add	r0, r0, r5, lsl #1
   1f794:	strh	r6, [r0]
   1f798:	ldrh	r0, [r4, #8]
   1f79c:	cmp	r0, r5
   1f7a0:	addls	r0, r5, #1
   1f7a4:	strhls	r0, [r4, #8]
   1f7a8:	ldr	r0, [r4]
   1f7ac:	add	r1, r0, #2
   1f7b0:	str	r1, [r4]
   1f7b4:	strh	r7, [r0]
   1f7b8:	ldr	r0, [r4, #16]
   1f7bc:	add	r0, r0, r7
   1f7c0:	pop	{r4, r5, r6, r7, fp, pc}

0001f7c4 <flatcc_builder_push_buffer_alignment@@Base>:
   1f7c4:	ldrh	r1, [r0, #128]	; 0x80
   1f7c8:	mov	r2, #4
   1f7cc:	strh	r2, [r0, #128]	; 0x80
   1f7d0:	mov	r0, r1
   1f7d4:	bx	lr

0001f7d8 <flatcc_builder_pop_buffer_alignment@@Base>:
   1f7d8:	b	1d258 <flatcc_builder_create_buffer@@Base+0x1d0>

0001f7dc <flatcc_builder_get_buffer_alignment@@Base>:
   1f7dc:	ldrh	r0, [r0, #128]	; 0x80
   1f7e0:	bx	lr

0001f7e4 <flatcc_builder_set_vtable_clustering@@Base>:
   1f7e4:	clz	r1, r1
   1f7e8:	lsr	r1, r1, #5
   1f7ec:	str	r1, [r0, #180]	; 0xb4
   1f7f0:	bx	lr

0001f7f4 <flatcc_builder_set_block_align@@Base>:
   1f7f4:	strh	r1, [r0, #132]	; 0x84
   1f7f8:	bx	lr

0001f7fc <flatcc_builder_get_level@@Base>:
   1f7fc:	ldr	r0, [r0, #156]	; 0x9c
   1f800:	bx	lr

0001f804 <flatcc_builder_set_max_level@@Base>:
   1f804:	str	r1, [r0, #176]	; 0xb0
   1f808:	ldr	r2, [r0, #160]	; 0xa0
   1f80c:	cmp	r2, r1
   1f810:	strlt	r1, [r0, #160]	; 0xa0
   1f814:	bx	lr

0001f818 <flatcc_builder_get_buffer_size@@Base>:
   1f818:	ldr	r1, [r0, #136]	; 0x88
   1f81c:	ldr	r0, [r0, #140]	; 0x8c
   1f820:	sub	r0, r0, r1
   1f824:	bx	lr

0001f828 <flatcc_builder_get_buffer_start@@Base>:
   1f828:	ldr	r0, [r0, #136]	; 0x88
   1f82c:	bx	lr

0001f830 <flatcc_builder_get_buffer_end@@Base>:
   1f830:	ldr	r0, [r0, #140]	; 0x8c
   1f834:	bx	lr

0001f838 <flatcc_builder_set_vtable_cache_limit@@Base>:
   1f838:	str	r1, [r0, #172]	; 0xac
   1f83c:	bx	lr

0001f840 <flatcc_builder_set_identifier@@Base>:
   1f840:	movw	r2, #16596	; 0x40d4
   1f844:	movt	r2, #2
   1f848:	cmp	r1, #0
   1f84c:	movne	r2, r1
   1f850:	ldr	r1, [r2]
   1f854:	str	r1, [r0, #168]	; 0xa8
   1f858:	bx	lr

0001f85c <flatcc_builder_get_type@@Base>:
   1f85c:	ldr	r0, [r0, #32]
   1f860:	cmp	r0, #0
   1f864:	ldrhne	r0, [r0, #14]
   1f868:	moveq	r0, #0
   1f86c:	bx	lr

0001f870 <flatcc_builder_get_type_at@@Base>:
   1f870:	mov	r2, r0
   1f874:	mov	r0, #0
   1f878:	cmp	r1, #1
   1f87c:	ldrge	r3, [r2, #156]	; 0x9c
   1f880:	cmpge	r3, r1
   1f884:	bge	1f88c <flatcc_builder_get_type_at@@Base+0x1c>
   1f888:	bx	lr
   1f88c:	sub	r0, r1, r3
   1f890:	add	r0, r0, r0, lsl #3
   1f894:	ldr	r1, [r2, #32]
   1f898:	add	r0, r1, r0, lsl #2
   1f89c:	ldrh	r0, [r0, #14]
   1f8a0:	bx	lr

0001f8a4 <flatcc_builder_get_direct_buffer@@Base>:
   1f8a4:	ldr	r2, [r0, #184]	; 0xb8
   1f8a8:	cmp	r2, #0
   1f8ac:	beq	1f8b8 <flatcc_builder_get_direct_buffer@@Base+0x14>
   1f8b0:	add	r0, r0, #188	; 0xbc
   1f8b4:	b	1f8cc <flatcc_builder_get_direct_buffer@@Base+0x28>
   1f8b8:	cmp	r1, #0
   1f8bc:	movne	r0, #0
   1f8c0:	strne	r0, [r1]
   1f8c4:	mov	r0, #0
   1f8c8:	bx	lr
   1f8cc:	ldm	r0, {r2, r3}
   1f8d0:	cmp	r2, r3
   1f8d4:	beq	1f8e8 <flatcc_builder_get_direct_buffer@@Base+0x44>
   1f8d8:	mov	r0, #0
   1f8dc:	cmp	r1, #0
   1f8e0:	strne	r0, [r1]
   1f8e4:	bx	lr
   1f8e8:	cmp	r1, #0
   1f8ec:	ldrne	r2, [r0, #24]
   1f8f0:	strne	r2, [r1]
   1f8f4:	ldr	r0, [r0, #8]
   1f8f8:	bx	lr

0001f8fc <flatcc_builder_copy_buffer@@Base>:
   1f8fc:	push	{fp, lr}
   1f900:	mov	fp, sp
   1f904:	ldr	r3, [r0, #184]	; 0xb8
   1f908:	cmp	r3, #0
   1f90c:	beq	1f940 <flatcc_builder_copy_buffer@@Base+0x44>
   1f910:	add	r0, r0, #188	; 0xbc
   1f914:	bl	20018 <flatcc_emitter_copy_buffer@@Base>
   1f918:	cmp	r0, #0
   1f91c:	popne	{fp, pc}
   1f920:	movw	r0, #17722	; 0x453a
   1f924:	movt	r0, #2
   1f928:	movw	r1, #17126	; 0x42e6
   1f92c:	movt	r1, #2
   1f930:	movw	r3, #21054	; 0x523e
   1f934:	movt	r3, #2
   1f938:	movw	r2, #1926	; 0x786
   1f93c:	bl	12bc4 <__assert_fail@plt>
   1f940:	mov	r0, #0
   1f944:	pop	{fp, pc}

0001f948 <flatcc_builder_finalize_buffer@@Base>:
   1f948:	push	{r4, r5, r6, sl, fp, lr}
   1f94c:	add	fp, sp, #16
   1f950:	mov	r6, r1
   1f954:	mov	r4, r0
   1f958:	bl	1f818 <flatcc_builder_get_buffer_size@@Base>
   1f95c:	mov	r5, r0
   1f960:	cmp	r6, #0
   1f964:	strne	r5, [r6]
   1f968:	mov	r0, r5
   1f96c:	bl	12b10 <malloc@plt>
   1f970:	cmp	r0, #0
   1f974:	beq	1f9b8 <flatcc_builder_finalize_buffer@@Base+0x70>
   1f978:	mov	r6, r0
   1f97c:	mov	r0, r4
   1f980:	mov	r1, r6
   1f984:	mov	r2, r5
   1f988:	bl	1f8fc <flatcc_builder_copy_buffer@@Base>
   1f98c:	cmp	r0, #0
   1f990:	movne	r0, r6
   1f994:	popne	{r4, r5, r6, sl, fp, pc}
   1f998:	movw	r0, #21644	; 0x548c
   1f99c:	movt	r0, #2
   1f9a0:	movw	r1, #17126	; 0x42e6
   1f9a4:	movt	r1, #2
   1f9a8:	movw	r3, #21123	; 0x5283
   1f9ac:	movt	r3, #2
   1f9b0:	movw	r2, #1948	; 0x79c
   1f9b4:	bl	12bc4 <__assert_fail@plt>
   1f9b8:	movw	r0, #21644	; 0x548c
   1f9bc:	movt	r0, #2
   1f9c0:	movw	r1, #17126	; 0x42e6
   1f9c4:	movt	r1, #2
   1f9c8:	movw	r3, #21123	; 0x5283
   1f9cc:	movt	r3, #2
   1f9d0:	movw	r2, #1944	; 0x798
   1f9d4:	bl	12bc4 <__assert_fail@plt>

0001f9d8 <flatcc_builder_finalize_aligned_buffer@@Base>:
   1f9d8:	push	{r4, r5, r6, r7, fp, lr}
   1f9dc:	add	fp, sp, #16
   1f9e0:	mov	r4, r1
   1f9e4:	mov	r5, r0
   1f9e8:	bl	1f818 <flatcc_builder_get_buffer_size@@Base>
   1f9ec:	mov	r6, r0
   1f9f0:	cmp	r4, #0
   1f9f4:	strne	r6, [r4]
   1f9f8:	mov	r0, r5
   1f9fc:	bl	1f7dc <flatcc_builder_get_buffer_alignment@@Base>
   1fa00:	add	r1, r6, r0
   1fa04:	sub	r1, r1, #1
   1fa08:	rsb	r2, r0, #0
   1fa0c:	and	r7, r1, r2
   1fa10:	mov	r1, r7
   1fa14:	bl	1fa60 <flatcc_builder_finalize_aligned_buffer@@Base+0x88>
   1fa18:	cmp	r0, #0
   1fa1c:	beq	1fa4c <flatcc_builder_finalize_aligned_buffer@@Base+0x74>
   1fa20:	mov	r6, r0
   1fa24:	mov	r0, r5
   1fa28:	mov	r1, r6
   1fa2c:	mov	r2, r7
   1fa30:	bl	1f8fc <flatcc_builder_copy_buffer@@Base>
   1fa34:	cmp	r0, #0
   1fa38:	beq	1fa44 <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
   1fa3c:	mov	r0, r6
   1fa40:	pop	{r4, r5, r6, r7, fp, pc}
   1fa44:	mov	r0, r6
   1fa48:	bl	12aa4 <free@plt>
   1fa4c:	mov	r6, #0
   1fa50:	cmp	r4, #0
   1fa54:	strne	r6, [r4]
   1fa58:	mov	r0, r6
   1fa5c:	pop	{r4, r5, r6, r7, fp, pc}
   1fa60:	push	{fp, lr}
   1fa64:	mov	fp, sp
   1fa68:	sub	sp, sp, #8
   1fa6c:	mov	r2, r1
   1fa70:	mov	r1, r0
   1fa74:	mov	r0, #0
   1fa78:	str	r0, [sp, #4]
   1fa7c:	cmp	r1, #4
   1fa80:	movls	r1, #4
   1fa84:	add	r0, sp, #4
   1fa88:	bl	12b58 <posix_memalign@plt>
   1fa8c:	cmp	r0, #0
   1fa90:	ldrne	r0, [sp, #4]
   1fa94:	cmpne	r0, #0
   1fa98:	beq	1faa8 <flatcc_builder_finalize_aligned_buffer@@Base+0xd0>
   1fa9c:	bl	12aa4 <free@plt>
   1faa0:	mov	r0, #0
   1faa4:	str	r0, [sp, #4]
   1faa8:	ldr	r0, [sp, #4]
   1faac:	mov	sp, fp
   1fab0:	pop	{fp, pc}

0001fab4 <flatcc_builder_aligned_alloc@@Base>:
   1fab4:	b	1fa60 <flatcc_builder_finalize_aligned_buffer@@Base+0x88>

0001fab8 <flatcc_builder_aligned_free@@Base>:
   1fab8:	b	12aa4 <free@plt>

0001fabc <flatcc_builder_get_emit_context@@Base>:
   1fabc:	ldr	r0, [r0, #36]	; 0x24
   1fac0:	bx	lr
   1fac4:	ldr	r0, [r0, #140]	; 0x8c
   1fac8:	sub	r1, r1, #1
   1facc:	and	r0, r0, r1
   1fad0:	bx	lr
   1fad4:	push	{r4, r5, r6, sl, fp, lr}
   1fad8:	add	fp, sp, #16
   1fadc:	sub	sp, sp, #8
   1fae0:	mov	r6, r2
   1fae4:	mov	r5, r0
   1fae8:	ldr	r2, [r0, #28]
   1faec:	ldr	r0, [r0, #40]	; 0x28
   1faf0:	ldr	r4, [r5, #48]	; 0x30
   1faf4:	mov	r3, #1
   1faf8:	str	r3, [sp]
   1fafc:	add	r2, r2, r1
   1fb00:	add	r1, r5, #60	; 0x3c
   1fb04:	mov	r3, #1
   1fb08:	blx	r4
   1fb0c:	mov	r1, r0
   1fb10:	mvn	r0, #0
   1fb14:	cmp	r1, #0
   1fb18:	beq	1fb24 <flatcc_builder_get_emit_context@@Base+0x68>
   1fb1c:	sub	sp, fp, #16
   1fb20:	pop	{r4, r5, r6, sl, fp, pc}
   1fb24:	mov	r0, r5
   1fb28:	mov	r1, r6
   1fb2c:	bl	1d668 <flatcc_builder_start_struct@@Base+0x4c>
   1fb30:	mov	r0, #0
   1fb34:	sub	sp, fp, #16
   1fb38:	pop	{r4, r5, r6, sl, fp, pc}
   1fb3c:	push	{r4, r5, r6, sl, fp, lr}
   1fb40:	add	fp, sp, #16
   1fb44:	sub	sp, sp, #8
   1fb48:	ldr	r2, [r0, #124]	; 0x7c
   1fb4c:	cmp	r2, #0
   1fb50:	bne	1fbf0 <flatcc_builder_get_emit_context@@Base+0x134>
   1fb54:	mov	r4, r0
   1fb58:	mov	r0, #0
   1fb5c:	str	r0, [sp]
   1fb60:	mov	r6, #16
   1fb64:	mov	r0, r4
   1fb68:	mov	r1, #6
   1fb6c:	mov	r3, #16
   1fb70:	bl	1cc84 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
   1fb74:	mvn	r5, #0
   1fb78:	cmp	r0, #0
   1fb7c:	beq	1fbe4 <flatcc_builder_get_emit_context@@Base+0x128>
   1fb80:	add	r1, r4, #92	; 0x5c
   1fb84:	str	r6, [r4, #124]	; 0x7c
   1fb88:	ldr	r0, [r4, #40]	; 0x28
   1fb8c:	ldr	ip, [r4, #48]	; 0x30
   1fb90:	mov	r2, #5
   1fb94:	str	r2, [sp]
   1fb98:	mov	r6, #256	; 0x100
   1fb9c:	mov	r2, #256	; 0x100
   1fba0:	mov	r3, #1
   1fba4:	blx	ip
   1fba8:	cmp	r0, #0
   1fbac:	bne	1fbe4 <flatcc_builder_get_emit_context@@Base+0x128>
   1fbb0:	ldr	r0, [r4, #96]	; 0x60
   1fbb4:	mov	r1, r6
   1fbb8:	lsl	r6, r6, #1
   1fbbc:	cmp	r0, r1, lsl #1
   1fbc0:	bcs	1fbb4 <flatcc_builder_get_emit_context@@Base+0xf8>
   1fbc4:	lsr	r1, r1, #2
   1fbc8:	mvn	r0, #0
   1fbcc:	mov	r2, #1
   1fbd0:	add	r0, r0, #1
   1fbd4:	cmp	r1, r2, lsl r0
   1fbd8:	bhi	1fbd0 <flatcc_builder_get_emit_context@@Base+0x114>
   1fbdc:	str	r0, [r4, #116]	; 0x74
   1fbe0:	mov	r5, #0
   1fbe4:	mov	r0, r5
   1fbe8:	sub	sp, fp, #16
   1fbec:	pop	{r4, r5, r6, sl, fp, pc}
   1fbf0:	movw	r0, #21584	; 0x5450
   1fbf4:	movt	r0, #2
   1fbf8:	movw	r1, #17126	; 0x42e6
   1fbfc:	movt	r1, #2
   1fc00:	movw	r3, #21599	; 0x545f
   1fc04:	movt	r3, #2
   1fc08:	movw	r2, #342	; 0x156
   1fc0c:	bl	12bc4 <__assert_fail@plt>

0001fc10 <flatcc_emitter_recycle_page@@Base>:
   1fc10:	ldr	ip, [r0]
   1fc14:	mvn	r2, #0
   1fc18:	cmp	ip, r1
   1fc1c:	ldrne	r3, [r0, #4]
   1fc20:	cmpne	r3, r1
   1fc24:	bne	1fc30 <flatcc_emitter_recycle_page@@Base+0x20>
   1fc28:	mov	r0, r2
   1fc2c:	bx	lr
   1fc30:	ldr	r2, [r1, #2944]	; 0xb80
   1fc34:	ldr	r3, [r1, #2948]	; 0xb84
   1fc38:	str	r3, [r2, #2948]	; 0xb84
   1fc3c:	ldr	r2, [r1, #2944]	; 0xb80
   1fc40:	ldr	r3, [r1, #2948]	; 0xb84
   1fc44:	str	r2, [r3, #2944]	; 0xb80
   1fc48:	ldr	r2, [ip, #2948]	; 0xb84
   1fc4c:	str	r2, [r1, #2948]	; 0xb84
   1fc50:	ldr	r0, [r0]
   1fc54:	str	r0, [r1, #2944]	; 0xb80
   1fc58:	str	r1, [r2, #2944]	; 0xb80
   1fc5c:	ldr	r0, [r1, #2944]	; 0xb80
   1fc60:	str	r1, [r0, #2948]	; 0xb84
   1fc64:	mov	r2, #0
   1fc68:	mov	r0, r2
   1fc6c:	bx	lr

0001fc70 <flatcc_emitter_reset@@Base>:
   1fc70:	push	{r4, sl, fp, lr}
   1fc74:	add	fp, sp, #8
   1fc78:	mov	r4, r0
   1fc7c:	ldr	r0, [r0]
   1fc80:	cmp	r0, #0
   1fc84:	beq	1fd28 <flatcc_emitter_reset@@Base+0xb8>
   1fc88:	mov	r1, #1472	; 0x5c0
   1fc8c:	add	r2, r0, #1472	; 0x5c0
   1fc90:	stmib	r4, {r0, r2}
   1fc94:	str	r1, [r4, #12]
   1fc98:	str	r2, [r4, #16]
   1fc9c:	str	r1, [r4, #20]
   1fca0:	movw	r1, #64064	; 0xfa40
   1fca4:	movt	r1, #65535	; 0xffff
   1fca8:	str	r1, [r0, #2952]	; 0xb88
   1fcac:	ldr	r0, [r4, #32]
   1fcb0:	cmp	r0, #0
   1fcb4:	ldreq	r0, [r4, #24]
   1fcb8:	streq	r0, [r4, #32]
   1fcbc:	add	r2, r4, #24
   1fcc0:	ldm	r2, {r0, r1, r2}
   1fcc4:	mov	r3, #0
   1fcc8:	str	r3, [r4, #24]
   1fccc:	add	r2, r2, r2, lsl #1
   1fcd0:	lsr	r2, r2, #2
   1fcd4:	add	r0, r2, r0, lsr #2
   1fcd8:	str	r0, [r4, #32]
   1fcdc:	cmp	r1, r0, lsl #1
   1fce0:	bls	1fd28 <flatcc_emitter_reset@@Base+0xb8>
   1fce4:	ldr	r2, [r4]
   1fce8:	ldr	r1, [r4, #4]
   1fcec:	ldr	r0, [r1, #2944]	; 0xb80
   1fcf0:	cmp	r0, r2
   1fcf4:	popeq	{r4, sl, fp, pc}
   1fcf8:	ldr	r2, [r0, #2944]	; 0xb80
   1fcfc:	str	r2, [r1, #2944]	; 0xb80
   1fd00:	ldr	r1, [r0, #2944]	; 0xb80
   1fd04:	ldr	r2, [r4, #4]
   1fd08:	str	r2, [r1, #2948]	; 0xb84
   1fd0c:	bl	12aa4 <free@plt>
   1fd10:	ldr	r0, [r4, #28]
   1fd14:	ldr	r1, [r4, #32]
   1fd18:	sub	r0, r0, #2944	; 0xb80
   1fd1c:	str	r0, [r4, #28]
   1fd20:	cmp	r0, r1, lsl #1
   1fd24:	bhi	1fce4 <flatcc_emitter_reset@@Base+0x74>
   1fd28:	pop	{r4, sl, fp, pc}

0001fd2c <flatcc_emitter_clear@@Base>:
   1fd2c:	push	{r4, r5, r6, sl, fp, lr}
   1fd30:	add	fp, sp, #16
   1fd34:	ldr	r5, [r0]
   1fd38:	cmp	r5, #0
   1fd3c:	popeq	{r4, r5, r6, sl, fp, pc}
   1fd40:	mov	r4, r0
   1fd44:	ldr	r0, [r5, #2948]	; 0xb84
   1fd48:	mov	r6, #0
   1fd4c:	str	r6, [r0, #2944]	; 0xb80
   1fd50:	b	1fd60 <flatcc_emitter_clear@@Base+0x34>
   1fd54:	mov	r5, r0
   1fd58:	ldr	r0, [r0, #2948]	; 0xb84
   1fd5c:	bl	12aa4 <free@plt>
   1fd60:	ldr	r0, [r5, #2944]	; 0xb80
   1fd64:	cmp	r0, #0
   1fd68:	bne	1fd54 <flatcc_emitter_clear@@Base+0x28>
   1fd6c:	mov	r0, r5
   1fd70:	bl	12aa4 <free@plt>
   1fd74:	vmov.i32	q8, #0	; 0x00000000
   1fd78:	add	r0, r4, #16
   1fd7c:	vst1.32	{d16-d17}, [r0]
   1fd80:	mov	r0, #32
   1fd84:	vst1.32	{d16-d17}, [r4], r0
   1fd88:	str	r6, [r4]
   1fd8c:	pop	{r4, r5, r6, sl, fp, pc}

0001fd90 <flatcc_emitter@@Base>:
   1fd90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1fd94:	add	fp, sp, #24
   1fd98:	mov	r4, r2
   1fd9c:	mov	r5, r1
   1fda0:	mov	r6, r0
   1fda4:	ldr	r1, [r0, #24]
   1fda8:	ldr	r0, [fp, #8]
   1fdac:	add	r1, r1, r0
   1fdb0:	str	r1, [r6, #24]
   1fdb4:	mov	r1, r6
   1fdb8:	cmn	r3, #1
   1fdbc:	ble	1fdfc <flatcc_emitter@@Base+0x6c>
   1fdc0:	ldr	r2, [r1, #20]!
   1fdc4:	cmp	r2, r0
   1fdc8:	bcs	1fe44 <flatcc_emitter@@Base+0xb4>
   1fdcc:	mov	r8, #0
   1fdd0:	cmp	r4, #0
   1fdd4:	beq	1fe94 <flatcc_emitter@@Base+0x104>
   1fdd8:	ldm	r5, {r1, r2}
   1fddc:	mov	r0, r6
   1fde0:	bl	1ff60 <flatcc_emitter@@Base+0x1d0>
   1fde4:	cmp	r0, #0
   1fde8:	bne	1fe38 <flatcc_emitter@@Base+0xa8>
   1fdec:	subs	r4, r4, #1
   1fdf0:	add	r5, r5, #8
   1fdf4:	bne	1fdd8 <flatcc_emitter@@Base+0x48>
   1fdf8:	b	1fe94 <flatcc_emitter@@Base+0x104>
   1fdfc:	ldr	r2, [r1, #12]!
   1fe00:	cmp	r2, r0
   1fe04:	bcs	1fe54 <flatcc_emitter@@Base+0xc4>
   1fe08:	add	r0, r5, r4, lsl #3
   1fe0c:	sub	r5, r0, #4
   1fe10:	rsb	r4, r4, #1
   1fe14:	cmp	r4, #1
   1fe18:	beq	1fe9c <flatcc_emitter@@Base+0x10c>
   1fe1c:	ldmda	r5, {r1, r2}
   1fe20:	mov	r0, r6
   1fe24:	bl	1fea8 <flatcc_emitter@@Base+0x118>
   1fe28:	sub	r5, r5, #8
   1fe2c:	add	r4, r4, #1
   1fe30:	cmp	r0, #0
   1fe34:	beq	1fe14 <flatcc_emitter@@Base+0x84>
   1fe38:	mvn	r8, #0
   1fe3c:	mov	r0, r8
   1fe40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1fe44:	ldr	r7, [r6, #16]
   1fe48:	add	r3, r7, r0
   1fe4c:	str	r3, [r6, #16]
   1fe50:	b	1fe60 <flatcc_emitter@@Base+0xd0>
   1fe54:	ldr	r3, [r6, #8]
   1fe58:	sub	r7, r3, r0
   1fe5c:	str	r7, [r6, #8]
   1fe60:	sub	r0, r2, r0
   1fe64:	str	r0, [r1]
   1fe68:	mov	r8, #0
   1fe6c:	cmp	r4, #0
   1fe70:	beq	1fe94 <flatcc_emitter@@Base+0x104>
   1fe74:	ldm	r5, {r1, r2}
   1fe78:	mov	r0, r7
   1fe7c:	bl	12ab0 <memcpy@plt>
   1fe80:	ldr	r0, [r5, #4]
   1fe84:	add	r7, r7, r0
   1fe88:	add	r5, r5, #8
   1fe8c:	subs	r4, r4, #1
   1fe90:	bne	1fe74 <flatcc_emitter@@Base+0xe4>
   1fe94:	mov	r0, r8
   1fe98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1fe9c:	mov	r8, #0
   1fea0:	mov	r0, r8
   1fea4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1fea8:	push	{r4, r5, r6, r7, fp, lr}
   1feac:	add	fp, sp, #16
   1feb0:	cmp	r2, #0
   1feb4:	moveq	r0, #0
   1feb8:	popeq	{r4, r5, r6, r7, fp, pc}
   1febc:	mov	r4, r2
   1fec0:	mov	r5, r0
   1fec4:	clz	r0, r2
   1fec8:	lsr	r7, r0, #5
   1fecc:	add	r6, r1, r2
   1fed0:	b	1ff0c <flatcc_emitter@@Base+0x17c>
   1fed4:	sub	r0, r0, r7
   1fed8:	str	r0, [r5, #12]
   1fedc:	ldr	r0, [r5, #8]
   1fee0:	sub	r0, r0, r7
   1fee4:	str	r0, [r5, #8]
   1fee8:	sub	r6, r6, r7
   1feec:	mov	r1, r6
   1fef0:	mov	r2, r7
   1fef4:	bl	12ab0 <memcpy@plt>
   1fef8:	subs	r4, r4, r7
   1fefc:	clz	r0, r4
   1ff00:	lsr	r7, r0, #5
   1ff04:	moveq	r0, #0
   1ff08:	popeq	{r4, r5, r6, r7, fp, pc}
   1ff0c:	ldr	r0, [r5, #12]
   1ff10:	cmp	r4, r0
   1ff14:	bls	1ff44 <flatcc_emitter@@Base+0x1b4>
   1ff18:	cmp	r0, #0
   1ff1c:	bne	1ff4c <flatcc_emitter@@Base+0x1bc>
   1ff20:	mov	r0, r5
   1ff24:	bl	200d4 <flatcc_emitter_copy_buffer@@Base+0xbc>
   1ff28:	cmp	r0, #0
   1ff2c:	mov	r1, r0
   1ff30:	movwne	r1, #1
   1ff34:	orr	r1, r1, r7
   1ff38:	tst	r1, #1
   1ff3c:	beq	1ff0c <flatcc_emitter@@Base+0x17c>
   1ff40:	b	1ff54 <flatcc_emitter@@Base+0x1c4>
   1ff44:	mov	r7, r4
   1ff48:	b	1fed4 <flatcc_emitter@@Base+0x144>
   1ff4c:	mov	r7, r0
   1ff50:	b	1fed4 <flatcc_emitter@@Base+0x144>
   1ff54:	cmp	r0, #0
   1ff58:	mvnne	r0, #0
   1ff5c:	pop	{r4, r5, r6, r7, fp, pc}
   1ff60:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1ff64:	add	fp, sp, #24
   1ff68:	cmp	r2, #0
   1ff6c:	moveq	r0, #0
   1ff70:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ff74:	mov	r4, r2
   1ff78:	mov	r8, r1
   1ff7c:	mov	r6, r0
   1ff80:	clz	r0, r2
   1ff84:	lsr	r5, r0, #5
   1ff88:	b	1ffcc <flatcc_emitter@@Base+0x23c>
   1ff8c:	ldr	r0, [r6, #16]
   1ff90:	mov	r1, r8
   1ff94:	mov	r2, r7
   1ff98:	bl	12ab0 <memcpy@plt>
   1ff9c:	ldr	r0, [r6, #16]
   1ffa0:	ldr	r1, [r6, #20]
   1ffa4:	add	r0, r0, r7
   1ffa8:	sub	r1, r1, r7
   1ffac:	str	r0, [r6, #16]
   1ffb0:	str	r1, [r6, #20]
   1ffb4:	add	r8, r8, r7
   1ffb8:	subs	r4, r4, r7
   1ffbc:	clz	r0, r4
   1ffc0:	lsr	r5, r0, #5
   1ffc4:	moveq	r0, #0
   1ffc8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1ffcc:	ldr	r7, [r6, #20]
   1ffd0:	cmp	r4, r7
   1ffd4:	bls	20004 <flatcc_emitter@@Base+0x274>
   1ffd8:	cmp	r7, #0
   1ffdc:	bne	1ff8c <flatcc_emitter@@Base+0x1fc>
   1ffe0:	mov	r0, r6
   1ffe4:	bl	201c0 <flatcc_emitter_copy_buffer@@Base+0x1a8>
   1ffe8:	cmp	r0, #0
   1ffec:	mov	r1, r0
   1fff0:	movwne	r1, #1
   1fff4:	orr	r1, r1, r5
   1fff8:	tst	r1, #1
   1fffc:	beq	1ffcc <flatcc_emitter@@Base+0x23c>
   20000:	b	2000c <flatcc_emitter@@Base+0x27c>
   20004:	mov	r7, r4
   20008:	b	1ff8c <flatcc_emitter@@Base+0x1fc>
   2000c:	cmp	r0, #0
   20010:	mvnne	r0, #0
   20014:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00020018 <flatcc_emitter_copy_buffer@@Base>:
   20018:	push	{r4, r5, r6, sl, fp, lr}
   2001c:	add	fp, sp, #16
   20020:	mov	r3, r2
   20024:	ldr	r2, [r0, #24]
   20028:	mov	r5, #0
   2002c:	cmp	r2, r3
   20030:	bhi	200b8 <flatcc_emitter_copy_buffer@@Base+0xa0>
   20034:	mov	r4, r0
   20038:	ldr	r0, [r0]
   2003c:	cmp	r0, #0
   20040:	beq	200b8 <flatcc_emitter_copy_buffer@@Base+0xa0>
   20044:	mov	r6, r1
   20048:	ldr	r1, [r4, #4]
   2004c:	cmp	r0, r1
   20050:	beq	200c0 <flatcc_emitter_copy_buffer@@Base+0xa8>
   20054:	ldr	r1, [r4, #8]
   20058:	ldr	r0, [r4, #12]
   2005c:	rsb	r5, r0, #2944	; 0xb80
   20060:	mov	r0, r6
   20064:	mov	r2, r5
   20068:	bl	12ab0 <memcpy@plt>
   2006c:	add	r5, r6, r5
   20070:	ldm	r4, {r0, r1}
   20074:	ldr	r6, [r0, #2944]	; 0xb80
   20078:	cmp	r6, r1
   2007c:	beq	200a4 <flatcc_emitter_copy_buffer@@Base+0x8c>
   20080:	mov	r0, r5
   20084:	mov	r1, r6
   20088:	mov	r2, #2944	; 0xb80
   2008c:	bl	12ab0 <memcpy@plt>
   20090:	add	r5, r5, #2944	; 0xb80
   20094:	ldr	r6, [r6, #2944]	; 0xb80
   20098:	ldr	r0, [r4, #4]
   2009c:	cmp	r6, r0
   200a0:	bne	20080 <flatcc_emitter_copy_buffer@@Base+0x68>
   200a4:	ldr	r0, [r4, #20]
   200a8:	rsb	r2, r0, #2944	; 0xb80
   200ac:	mov	r0, r5
   200b0:	mov	r1, r6
   200b4:	bl	12ab0 <memcpy@plt>
   200b8:	mov	r0, r5
   200bc:	pop	{r4, r5, r6, sl, fp, pc}
   200c0:	ldr	r1, [r4, #8]
   200c4:	mov	r0, r6
   200c8:	bl	12ab0 <memcpy@plt>
   200cc:	mov	r0, r6
   200d0:	pop	{r4, r5, r6, sl, fp, pc}
   200d4:	push	{r4, r5, fp, lr}
   200d8:	add	fp, sp, #8
   200dc:	mov	r4, r0
   200e0:	ldr	r5, [r0]
   200e4:	cmp	r5, #0
   200e8:	beq	20110 <flatcc_emitter_copy_buffer@@Base+0xf8>
   200ec:	ldr	r0, [r5, #2948]	; 0xb84
   200f0:	ldr	r1, [r4, #4]
   200f4:	cmp	r0, r1
   200f8:	beq	20110 <flatcc_emitter_copy_buffer@@Base+0xf8>
   200fc:	ldr	r1, [r5, #2952]	; 0xb88
   20100:	sub	r1, r1, #2944	; 0xb80
   20104:	str	r1, [r0, #2952]	; 0xb88
   20108:	ldr	r0, [r5, #2948]	; 0xb84
   2010c:	b	20150 <flatcc_emitter_copy_buffer@@Base+0x138>
   20110:	movw	r0, #2956	; 0xb8c
   20114:	bl	12b10 <malloc@plt>
   20118:	cmp	r0, #0
   2011c:	mvneq	r0, #0
   20120:	popeq	{r4, r5, fp, pc}
   20124:	ldr	r1, [r4, #28]
   20128:	add	r1, r1, #2944	; 0xb80
   2012c:	str	r1, [r4, #28]
   20130:	cmp	r5, #0
   20134:	beq	20180 <flatcc_emitter_copy_buffer@@Base+0x168>
   20138:	ldm	r4, {r1, r2}
   2013c:	str	r1, [r0, #2944]	; 0xb80
   20140:	str	r2, [r0, #2948]	; 0xb84
   20144:	str	r0, [r1, #2948]	; 0xb84
   20148:	ldr	r1, [r4, #4]
   2014c:	str	r0, [r1, #2944]	; 0xb80
   20150:	str	r0, [r4]
   20154:	mov	r0, #2944	; 0xb80
   20158:	ldr	r1, [r4]
   2015c:	add	r2, r1, #2944	; 0xb80
   20160:	str	r2, [r4, #8]
   20164:	str	r0, [r4, #12]
   20168:	ldr	r0, [r1, #2944]	; 0xb80
   2016c:	ldr	r0, [r0, #2952]	; 0xb88
   20170:	sub	r0, r0, #2944	; 0xb80
   20174:	str	r0, [r1, #2952]	; 0xb88
   20178:	mov	r0, #0
   2017c:	pop	{r4, r5, fp, pc}
   20180:	str	r0, [r4, #4]
   20184:	str	r0, [r4]
   20188:	mov	r1, #1472	; 0x5c0
   2018c:	str	r1, [r4, #12]
   20190:	str	r1, [r4, #20]
   20194:	ldr	r1, [r4]
   20198:	add	r1, r1, #1472	; 0x5c0
   2019c:	str	r1, [r4, #8]
   201a0:	str	r1, [r4, #16]
   201a4:	movw	r1, #64064	; 0xfa40
   201a8:	movt	r1, #65535	; 0xffff
   201ac:	str	r0, [r0, #2944]	; 0xb80
   201b0:	str	r0, [r0, #2948]	; 0xb84
   201b4:	str	r1, [r0, #2952]	; 0xb88
   201b8:	mov	r0, #0
   201bc:	pop	{r4, r5, fp, pc}
   201c0:	push	{r4, r5, fp, lr}
   201c4:	add	fp, sp, #8
   201c8:	mov	r4, r0
   201cc:	ldr	r5, [r0, #4]
   201d0:	cmp	r5, #0
   201d4:	beq	201e8 <flatcc_emitter_copy_buffer@@Base+0x1d0>
   201d8:	ldr	r0, [r5, #2944]	; 0xb80
   201dc:	ldr	r1, [r4]
   201e0:	cmp	r0, r1
   201e4:	bne	20224 <flatcc_emitter_copy_buffer@@Base+0x20c>
   201e8:	movw	r0, #2956	; 0xb8c
   201ec:	bl	12b10 <malloc@plt>
   201f0:	cmp	r0, #0
   201f4:	mvneq	r0, #0
   201f8:	popeq	{r4, r5, fp, pc}
   201fc:	ldr	r1, [r4, #28]
   20200:	add	r1, r1, #2944	; 0xb80
   20204:	str	r1, [r4, #28]
   20208:	cmp	r5, #0
   2020c:	beq	20250 <flatcc_emitter_copy_buffer@@Base+0x238>
   20210:	ldr	r1, [r4]
   20214:	str	r1, [r0, #2944]	; 0xb80
   20218:	str	r5, [r0, #2948]	; 0xb84
   2021c:	str	r0, [r1, #2948]	; 0xb84
   20220:	str	r0, [r5, #2944]	; 0xb80
   20224:	str	r0, [r4, #4]
   20228:	mov	r0, #2944	; 0xb80
   2022c:	ldr	r1, [r4, #4]
   20230:	str	r1, [r4, #16]
   20234:	str	r0, [r4, #20]
   20238:	ldr	r0, [r1, #2948]	; 0xb84
   2023c:	ldr	r0, [r0, #2952]	; 0xb88
   20240:	add	r0, r0, #2944	; 0xb80
   20244:	str	r0, [r1, #2952]	; 0xb88
   20248:	mov	r0, #0
   2024c:	pop	{r4, r5, fp, pc}
   20250:	str	r0, [r4, #4]
   20254:	str	r0, [r4]
   20258:	mov	r1, #1472	; 0x5c0
   2025c:	str	r1, [r4, #12]
   20260:	str	r1, [r4, #20]
   20264:	ldr	r1, [r4]
   20268:	add	r1, r1, #1472	; 0x5c0
   2026c:	str	r1, [r4, #8]
   20270:	str	r1, [r4, #16]
   20274:	movw	r1, #64064	; 0xfa40
   20278:	movt	r1, #65535	; 0xffff
   2027c:	str	r0, [r0, #2944]	; 0xb80
   20280:	str	r0, [r0, #2948]	; 0xb84
   20284:	str	r1, [r0, #2952]	; 0xb88
   20288:	mov	r0, #0
   2028c:	pop	{r4, r5, fp, pc}

00020290 <grisu3_diy_fp_encode_double@@Base>:
   20290:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20294:	add	fp, sp, #28
   20298:	sub	sp, sp, #68	; 0x44
   2029c:	mov	r9, r3
   202a0:	mov	r7, r2
   202a4:	mov	r2, r0
   202a8:	mov	r6, #0
   202ac:	str	r6, [sp]
   202b0:	str	r6, [sp, #4]
   202b4:	add	r0, sp, #48	; 0x30
   202b8:	mov	r3, r1
   202bc:	bl	2050c <grisu3_diy_fp_encode_double@@Base+0x27c>
   202c0:	ldr	r0, [fp, #8]
   202c4:	cmp	r0, #0
   202c8:	movwne	r0, #4
   202cc:	ldr	r1, [sp, #48]	; 0x30
   202d0:	str	r1, [sp, #28]
   202d4:	ldr	sl, [sp, #52]	; 0x34
   202d8:	ldr	r5, [sp, #56]	; 0x38
   202dc:	ldr	r8, [sp, #60]	; 0x3c
   202e0:	rsb	r1, r5, #0
   202e4:	lsl	r4, r0, r1
   202e8:	str	r9, [sp, #24]
   202ec:	sub	r7, r7, r9
   202f0:	add	r1, sp, #48	; 0x30
   202f4:	mov	r0, r7
   202f8:	bl	205b0 <grisu3_diy_fp_encode_double@@Base+0x320>
   202fc:	cmp	r7, r0
   20300:	bne	2030c <grisu3_diy_fp_encode_double@@Base+0x7c>
   20304:	ldr	r2, [sp, #28]
   20308:	b	20378 <grisu3_diy_fp_encode_double@@Base+0xe8>
   2030c:	mvn	r0, r0
   20310:	add	r7, r7, r0
   20314:	cmp	r7, #7
   20318:	bcs	204ec <grisu3_diy_fp_encode_double@@Base+0x25c>
   2031c:	stm	sp, {r5, r8}
   20320:	movw	r0, #21792	; 0x5520
   20324:	movt	r0, #2
   20328:	ldr	r1, [r0, r7, lsl #4]!
   2032c:	str	r1, [sp, #8]
   20330:	ldmib	r0, {r1, r2}
   20334:	ldr	r0, [r0, #12]
   20338:	str	r0, [sp, #20]
   2033c:	str	r2, [sp, #16]
   20340:	str	r1, [sp, #12]
   20344:	add	r0, sp, #32
   20348:	ldr	r2, [sp, #28]
   2034c:	mov	r3, sl
   20350:	bl	20698 <grisu3_diy_fp_encode_double@@Base+0x408>
   20354:	ldr	r0, [sp, #24]
   20358:	add	r0, r0, r7
   2035c:	add	r0, r0, #1
   20360:	cmp	r0, #19
   20364:	addgt	r4, r4, #4
   20368:	ldr	r2, [sp, #32]
   2036c:	ldr	sl, [sp, #36]	; 0x24
   20370:	ldr	r5, [sp, #40]	; 0x28
   20374:	ldr	r8, [sp, #44]	; 0x2c
   20378:	add	r7, sp, #48	; 0x30
   2037c:	ldm	r7, {r0, r1, r7}
   20380:	ldr	r3, [sp, #60]	; 0x3c
   20384:	stm	sp, {r5, r8}
   20388:	add	ip, sp, #8
   2038c:	stm	ip, {r0, r1, r7}
   20390:	str	r3, [sp, #20]
   20394:	add	r0, sp, #32
   20398:	mov	r3, sl
   2039c:	bl	20698 <grisu3_diy_fp_encode_double@@Base+0x408>
   203a0:	add	r5, sp, #32
   203a4:	ldm	r5, {r2, r3, r5}
   203a8:	ldr	r0, [sp, #44]	; 0x2c
   203ac:	str	r5, [sp]
   203b0:	str	r0, [sp, #4]
   203b4:	add	r0, sp, #32
   203b8:	bl	2050c <grisu3_diy_fp_encode_double@@Base+0x27c>
   203bc:	mov	r0, #9
   203c0:	cmp	r4, #0
   203c4:	movweq	r0, #8
   203c8:	add	r0, r0, r4
   203cc:	ldr	r3, [sp, #32]
   203d0:	ldr	r1, [sp, #36]	; 0x24
   203d4:	ldr	r2, [sp, #40]	; 0x28
   203d8:	sub	r7, r5, r2
   203dc:	lsl	r9, r0, r7
   203e0:	movw	r0, #64461	; 0xfbcd
   203e4:	movt	r0, #65535	; 0xffff
   203e8:	cmp	r2, r0
   203ec:	bgt	20444 <grisu3_diy_fp_encode_double@@Base+0x1b4>
   203f0:	mov	r6, #64	; 0x40
   203f4:	mvn	r7, #1136	; 0x470
   203f8:	cmp	r2, r7
   203fc:	blt	20410 <grisu3_diy_fp_encode_double@@Base+0x180>
   20400:	add	r0, r0, #1
   20404:	sub	r6, r0, r2
   20408:	cmp	r6, #61	; 0x3d
   2040c:	blt	20444 <grisu3_diy_fp_encode_double@@Base+0x1b4>
   20410:	sub	r0, r6, #62	; 0x3e
   20414:	mov	r7, #9
   20418:	add	r9, r7, r9, asr r0
   2041c:	lsr	r3, r3, r0
   20420:	rsb	r7, r6, #94	; 0x5e
   20424:	orr	r3, r3, r1, lsl r7
   20428:	sub	r7, r6, #94	; 0x5e
   2042c:	cmp	r7, #0
   20430:	lsrge	r3, r1, r7
   20434:	add	r2, r0, r2
   20438:	lsr	r1, r1, r0
   2043c:	movwge	r1, #0
   20440:	mov	r6, #62	; 0x3e
   20444:	ldr	r8, [fp, #12]
   20448:	lsr	r0, r3, r6
   2044c:	rsb	r7, r6, #32
   20450:	orr	r0, r0, r1, lsl r7
   20454:	sub	r7, r6, #32
   20458:	cmp	r7, #0
   2045c:	lsrge	r0, r1, r7
   20460:	add	r2, r2, r6
   20464:	lsr	r1, r1, r6
   20468:	movwge	r1, #0
   2046c:	sub	r7, r6, #1
   20470:	mov	r5, #1
   20474:	lsl	r5, r5, r7
   20478:	sub	r7, r6, #33	; 0x21
   2047c:	cmp	r7, #0
   20480:	movwge	r5, #0
   20484:	add	r7, r9, r5, lsl #3
   20488:	lsl	sl, r5, #3
   2048c:	and	r3, r5, r3
   20490:	lsl	r5, r3, #3
   20494:	mov	r4, #0
   20498:	cmp	r6, r7
   2049c:	blt	204bc <grisu3_diy_fp_encode_double@@Base+0x22c>
   204a0:	adds	r0, r0, #1
   204a4:	adc	r1, r1, #0
   204a8:	tst	r1, #2097152	; 0x200000
   204ac:	beq	204bc <grisu3_diy_fp_encode_double@@Base+0x22c>
   204b0:	lsrs	r1, r1, #1
   204b4:	rrx	r0, r0
   204b8:	add	r2, r2, #1
   204bc:	mov	r3, r4
   204c0:	bl	206fc <grisu3_diy_fp_encode_double@@Base+0x46c>
   204c4:	vstr	d0, [r8]
   204c8:	cmp	r5, r7
   204cc:	mov	r0, #0
   204d0:	movwge	r0, #1
   204d4:	sub	r1, sl, r9
   204d8:	cmp	r1, r5
   204dc:	movwge	r4, #1
   204e0:	orr	r0, r0, r4
   204e4:	sub	sp, fp, #28
   204e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   204ec:	movw	r0, #24460	; 0x5f8c
   204f0:	movt	r0, #2
   204f4:	movw	r1, #24488	; 0x5fa8
   204f8:	movt	r1, #2
   204fc:	movw	r3, #24575	; 0x5fff
   20500:	movt	r3, #2
   20504:	mov	r2, #185	; 0xb9
   20508:	bl	12bc4 <__assert_fail@plt>
   2050c:	push	{r4, sl, fp, lr}
   20510:	add	fp, sp, #8
   20514:	orrs	r1, r2, r3
   20518:	beq	20590 <grisu3_diy_fp_encode_double@@Base+0x300>
   2051c:	ldr	ip, [fp, #12]
   20520:	ldr	r1, [fp, #8]
   20524:	mov	r4, #0
   20528:	cmp	r4, r3, lsr #22
   2052c:	bne	20548 <grisu3_diy_fp_encode_double@@Base+0x2b8>
   20530:	lsl	r3, r3, #10
   20534:	orr	r3, r3, r2, lsr #22
   20538:	sub	r1, r1, #10
   2053c:	lsl	r2, r2, #10
   20540:	cmp	r3, #4194304	; 0x400000
   20544:	bcc	20530 <grisu3_diy_fp_encode_double@@Base+0x2a0>
   20548:	cmp	r3, #0
   2054c:	blt	20578 <grisu3_diy_fp_encode_double@@Base+0x2e8>
   20550:	mvn	lr, #0
   20554:	lsl	r3, r3, #1
   20558:	orr	r3, r3, r2, lsr #31
   2055c:	sub	r1, r1, #1
   20560:	lsl	r4, r2, #1
   20564:	subs	r2, lr, r2, lsl #1
   20568:	sbcs	r2, lr, r3
   2056c:	mov	r2, r4
   20570:	blt	20554 <grisu3_diy_fp_encode_double@@Base+0x2c4>
   20574:	b	2057c <grisu3_diy_fp_encode_double@@Base+0x2ec>
   20578:	mov	r4, r2
   2057c:	str	r4, [r0]
   20580:	str	r3, [r0, #4]
   20584:	str	r1, [r0, #8]
   20588:	str	ip, [r0, #12]
   2058c:	pop	{r4, sl, fp, pc}
   20590:	movw	r0, #25835	; 0x64eb
   20594:	movt	r0, #2
   20598:	movw	r1, #25844	; 0x64f4
   2059c:	movt	r1, #2
   205a0:	movw	r3, #25930	; 0x654a
   205a4:	movt	r3, #2
   205a8:	mov	r2, #260	; 0x104
   205ac:	bl	12bc4 <__assert_fail@plt>
   205b0:	push	{fp, lr}
   205b4:	mov	fp, sp
   205b8:	cmn	r0, #348	; 0x15c
   205bc:	blt	20638 <grisu3_diy_fp_encode_double@@Base+0x3a8>
   205c0:	cmp	r0, #348	; 0x15c
   205c4:	bge	20658 <grisu3_diy_fp_encode_double@@Base+0x3c8>
   205c8:	add	r2, r0, #348	; 0x15c
   205cc:	asr	r3, r2, #31
   205d0:	add	r2, r2, r3, lsr #29
   205d4:	mvn	r3, #15
   205d8:	and	r2, r3, r2, lsl #1
   205dc:	movw	r3, #21904	; 0x5590
   205e0:	movt	r3, #2
   205e4:	ldr	r2, [r3, r2]!
   205e8:	str	r2, [r1]
   205ec:	ldr	r2, [r3, #4]
   205f0:	str	r2, [r1, #4]
   205f4:	ldrsh	r2, [r3, #8]
   205f8:	str	r2, [r1, #8]
   205fc:	ldrsh	r1, [r3, #10]
   20600:	cmp	r1, r0
   20604:	bgt	20678 <grisu3_diy_fp_encode_double@@Base+0x3e8>
   20608:	add	r2, r1, #8
   2060c:	cmp	r2, r0
   20610:	movgt	r0, r1
   20614:	popgt	{fp, pc}
   20618:	movw	r0, #26133	; 0x6615
   2061c:	movt	r0, #2
   20620:	movw	r1, #24488	; 0x5fa8
   20624:	movt	r1, #2
   20628:	movw	r3, #26018	; 0x65a2
   2062c:	movt	r3, #2
   20630:	mov	r2, #89	; 0x59
   20634:	bl	12bc4 <__assert_fail@plt>
   20638:	movw	r0, #25987	; 0x6583
   2063c:	movt	r0, #2
   20640:	movw	r1, #24488	; 0x5fa8
   20644:	movt	r1, #2
   20648:	movw	r3, #26018	; 0x65a2
   2064c:	movt	r3, #2
   20650:	mov	r2, #80	; 0x50
   20654:	bl	12bc4 <__assert_fail@plt>
   20658:	movw	r0, #26075	; 0x65db
   2065c:	movt	r0, #2
   20660:	movw	r1, #24488	; 0x5fa8
   20664:	movt	r1, #2
   20668:	movw	r3, #26018	; 0x65a2
   2066c:	movt	r3, #2
   20670:	mov	r2, #81	; 0x51
   20674:	bl	12bc4 <__assert_fail@plt>
   20678:	movw	r0, #26118	; 0x6606
   2067c:	movt	r0, #2
   20680:	movw	r1, #24488	; 0x5fa8
   20684:	movt	r1, #2
   20688:	movw	r3, #26018	; 0x65a2
   2068c:	movt	r3, #2
   20690:	mov	r2, #88	; 0x58
   20694:	bl	12bc4 <__assert_fail@plt>
   20698:	push	{r4, r5, fp, lr}
   2069c:	add	fp, sp, #8
   206a0:	ldr	ip, [fp, #24]
   206a4:	ldr	r1, [fp, #8]
   206a8:	add	r1, r1, ip
   206ac:	add	r1, r1, #64	; 0x40
   206b0:	str	r1, [r0, #8]
   206b4:	ldr	ip, [fp, #16]
   206b8:	umull	r1, lr, ip, r2
   206bc:	umull	ip, r1, ip, r3
   206c0:	mov	r5, #0
   206c4:	adds	lr, ip, lr
   206c8:	adc	r5, r5, #0
   206cc:	ldr	ip, [fp, #20]
   206d0:	umull	r2, r4, ip, r2
   206d4:	adds	r2, lr, r2
   206d8:	adc	r5, r5, #0
   206dc:	adds	r2, r2, #-2147483648	; 0x80000000
   206e0:	adc	r2, r5, #0
   206e4:	umaal	r1, r4, ip, r3
   206e8:	adds	r1, r1, r2
   206ec:	str	r1, [r0]
   206f0:	adc	r1, r4, #0
   206f4:	str	r1, [r0, #4]
   206f8:	pop	{r4, r5, fp, pc}
   206fc:	push	{r4, r5, fp, lr}
   20700:	add	fp, sp, #8
   20704:	cmp	r1, #2097152	; 0x200000
   20708:	bcc	2072c <grisu3_diy_fp_encode_double@@Base+0x49c>
   2070c:	mov	r5, #0
   20710:	lsrs	r3, r1, #1
   20714:	rrx	r0, r0
   20718:	add	r2, r2, #1
   2071c:	cmp	r5, r1, lsr #22
   20720:	mov	r1, r3
   20724:	bne	20710 <grisu3_diy_fp_encode_double@@Base+0x480>
   20728:	b	20730 <grisu3_diy_fp_encode_double@@Base+0x4a0>
   2072c:	mov	r3, r1
   20730:	movw	ip, #64462	; 0xfbce
   20734:	movt	ip, #65535	; 0xffff
   20738:	cmp	r2, ip
   2073c:	bge	20748 <grisu3_diy_fp_encode_double@@Base+0x4b8>
   20740:	vmov.i32	d0, #0	; 0x00000000
   20744:	pop	{r4, r5, fp, pc}
   20748:	and	r1, r3, #1048576	; 0x100000
   2074c:	mov	r5, #1
   20750:	eor	lr, r5, r1, lsr #20
   20754:	cmp	r2, ip
   20758:	beq	2079c <grisu3_diy_fp_encode_double@@Base+0x50c>
   2075c:	cmp	r1, #0
   20760:	bne	2079c <grisu3_diy_fp_encode_double@@Base+0x50c>
   20764:	mov	r5, #1
   20768:	lsl	r1, r3, #1
   2076c:	orr	r1, r1, r0, lsr #31
   20770:	and	r3, r3, #524288	; 0x80000
   20774:	eor	lr, r5, r3, lsr #19
   20778:	lsl	r0, r0, #1
   2077c:	sub	r4, r2, #1
   20780:	cmn	r2, #1072	; 0x430
   20784:	blt	207a4 <grisu3_diy_fp_encode_double@@Base+0x514>
   20788:	cmp	r3, #0
   2078c:	mov	r3, r1
   20790:	mov	r2, r4
   20794:	beq	20768 <grisu3_diy_fp_encode_double@@Base+0x4d8>
   20798:	b	207a4 <grisu3_diy_fp_encode_double@@Base+0x514>
   2079c:	mov	r4, r2
   207a0:	mov	r1, r3
   207a4:	cmp	r4, ip
   207a8:	bne	207bc <grisu3_diy_fp_encode_double@@Base+0x52c>
   207ac:	mov	r2, #0
   207b0:	cmp	lr, #0
   207b4:	mov	r3, #0
   207b8:	bne	207cc <grisu3_diy_fp_encode_double@@Base+0x53c>
   207bc:	movw	r2, #0
   207c0:	movt	r2, #17200	; 0x4330
   207c4:	add	r3, r2, r4, lsl #20
   207c8:	mov	r2, #0
   207cc:	orr	r0, r2, r0
   207d0:	bfc	r1, #20, #12
   207d4:	orr	r1, r3, r1
   207d8:	pop	{r4, r5, fp, lr}
   207dc:	b	22de8 <flatcc_json_parser_struct_as_root@@Base+0xb4>

000207e0 <flatcc_json_parser_error_string@@Base>:
   207e0:	cmp	r0, #34	; 0x22
   207e4:	movwhi	r0, #25285	; 0x62c5
   207e8:	movthi	r0, #2
   207ec:	bxhi	lr
   207f0:	movw	r1, #24320	; 0x5f00
   207f4:	movt	r1, #2
   207f8:	ldr	r0, [r1, r0, lsl #2]
   207fc:	bx	lr

00020800 <flatcc_json_parser_set_error@@Base>:
   20800:	mov	ip, r2
   20804:	ldr	r2, [r0, #24]
   20808:	cmp	r2, #0
   2080c:	beq	20818 <flatcc_json_parser_set_error@@Base+0x18>
   20810:	mov	r0, ip
   20814:	bx	lr
   20818:	str	r1, [r0, #36]	; 0x24
   2081c:	ldr	r2, [r0, #4]
   20820:	add	r1, r1, #1
   20824:	sub	r1, r1, r2
   20828:	str	r1, [r0, #20]
   2082c:	str	r3, [r0, #24]
   20830:	mov	r0, ip
   20834:	bx	lr

00020838 <flatcc_json_parser_string_part@@Base>:
   20838:	cmp	r1, r2
   2083c:	beq	20864 <flatcc_json_parser_string_part@@Base+0x2c>
   20840:	ldrb	r3, [r1]
   20844:	cmp	r3, #32
   20848:	bcc	20874 <flatcc_json_parser_string_part@@Base+0x3c>
   2084c:	cmp	r3, #34	; 0x22
   20850:	cmpne	r3, #92	; 0x5c
   20854:	beq	2086c <flatcc_json_parser_string_part@@Base+0x34>
   20858:	add	r1, r1, #1
   2085c:	cmp	r2, r1
   20860:	bne	20840 <flatcc_json_parser_string_part@@Base+0x8>
   20864:	mov	r3, #20
   20868:	b	20800 <flatcc_json_parser_set_error@@Base>
   2086c:	mov	r0, r1
   20870:	bx	lr
   20874:	mov	r3, #17
   20878:	b	20800 <flatcc_json_parser_set_error@@Base>

0002087c <flatcc_json_parser_space_ext@@Base>:
   2087c:	cmp	r1, r2
   20880:	beq	208b4 <flatcc_json_parser_space_ext@@Base+0x38>
   20884:	ldrb	r3, [r1]
   20888:	cmp	r3, #32
   2088c:	bne	208b4 <flatcc_json_parser_space_ext@@Base+0x38>
   20890:	add	r1, r1, #1
   20894:	cmp	r2, r1
   20898:	bne	20884 <flatcc_json_parser_space_ext@@Base+0x8>
   2089c:	b	208b4 <flatcc_json_parser_space_ext@@Base+0x38>
   208a0:	add	r1, r1, #1
   208a4:	str	r1, [r0, #4]
   208a8:	ldr	r3, [r0, #16]
   208ac:	add	r3, r3, #1
   208b0:	str	r3, [r0, #16]
   208b4:	cmp	r1, r2
   208b8:	beq	20970 <flatcc_json_parser_space_ext@@Base+0xf4>
   208bc:	ldrb	r3, [r1]
   208c0:	cmp	r3, #32
   208c4:	bhi	20970 <flatcc_json_parser_space_ext@@Base+0xf4>
   208c8:	sub	ip, r3, #9
   208cc:	cmp	ip, #23
   208d0:	bhi	20978 <flatcc_json_parser_space_ext@@Base+0xfc>
   208d4:	add	r3, pc, #0
   208d8:	ldr	pc, [r3, ip, lsl #2]
   208dc:	andeq	r0, r2, ip, lsr r9
   208e0:	andeq	r0, r2, r0, lsr #17
   208e4:	andeq	r0, r2, r8, ror r9
   208e8:	andeq	r0, r2, r8, ror r9
   208ec:	andeq	r0, r2, ip, asr #18
   208f0:	andeq	r0, r2, r8, ror r9
   208f4:	andeq	r0, r2, r8, ror r9
   208f8:	andeq	r0, r2, r8, ror r9
   208fc:	andeq	r0, r2, r8, ror r9
   20900:	andeq	r0, r2, r8, ror r9
   20904:	andeq	r0, r2, r8, ror r9
   20908:	andeq	r0, r2, r8, ror r9
   2090c:	andeq	r0, r2, r8, ror r9
   20910:	andeq	r0, r2, r8, ror r9
   20914:	andeq	r0, r2, r8, ror r9
   20918:	andeq	r0, r2, r8, ror r9
   2091c:	andeq	r0, r2, r8, ror r9
   20920:	andeq	r0, r2, r8, ror r9
   20924:	andeq	r0, r2, r8, ror r9
   20928:	andeq	r0, r2, r8, ror r9
   2092c:	andeq	r0, r2, r8, ror r9
   20930:	andeq	r0, r2, r8, ror r9
   20934:	andeq	r0, r2, r8, ror r9
   20938:	andeq	r0, r2, ip, ror r8
   2093c:	add	r1, r1, #1
   20940:	cmp	r1, r2
   20944:	bne	208bc <flatcc_json_parser_space_ext@@Base+0x40>
   20948:	b	20970 <flatcc_json_parser_space_ext@@Base+0xf4>
   2094c:	sub	r3, r2, r1
   20950:	mov	ip, #0
   20954:	cmp	r3, #2
   20958:	ldrbge	r3, [r1, #1]
   2095c:	subge	r3, r3, #10
   20960:	clzge	r3, r3
   20964:	lsrge	ip, r3, #5
   20968:	add	r1, r1, ip
   2096c:	b	208a0 <flatcc_json_parser_space_ext@@Base+0x24>
   20970:	mov	r0, r1
   20974:	bx	lr
   20978:	mov	r3, #5
   2097c:	b	20800 <flatcc_json_parser_set_error@@Base>

00020980 <flatcc_json_parser_string_escape@@Base>:
   20980:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   20984:	add	fp, sp, #24
   20988:	sub	r7, r2, r1
   2098c:	cmp	r7, #2
   20990:	blt	20b90 <flatcc_json_parser_string_escape@@Base+0x210>
   20994:	ldrb	r6, [r1]
   20998:	cmp	r6, #92	; 0x5c
   2099c:	bne	20b90 <flatcc_json_parser_string_escape@@Base+0x210>
   209a0:	ldrb	r6, [r1, #1]
   209a4:	sub	r6, r6, #34	; 0x22
   209a8:	cmp	r6, #86	; 0x56
   209ac:	bhi	20b90 <flatcc_json_parser_string_escape@@Base+0x210>
   209b0:	add	r5, pc, #0
   209b4:	ldr	pc, [r5, r6, lsl #2]
   209b8:	andeq	r0, r2, r4, lsl fp
   209bc:	muleq	r2, r0, fp
   209c0:	muleq	r2, r0, fp
   209c4:	muleq	r2, r0, fp
   209c8:	muleq	r2, r0, fp
   209cc:	muleq	r2, r0, fp
   209d0:	muleq	r2, r0, fp
   209d4:	muleq	r2, r0, fp
   209d8:	muleq	r2, r0, fp
   209dc:	muleq	r2, r0, fp
   209e0:	muleq	r2, r0, fp
   209e4:	muleq	r2, r0, fp
   209e8:	muleq	r2, r0, fp
   209ec:	andeq	r0, r2, ip, lsl fp
   209f0:	muleq	r2, r0, fp
   209f4:	muleq	r2, r0, fp
   209f8:	muleq	r2, r0, fp
   209fc:	muleq	r2, r0, fp
   20a00:	muleq	r2, r0, fp
   20a04:	muleq	r2, r0, fp
   20a08:	muleq	r2, r0, fp
   20a0c:	muleq	r2, r0, fp
   20a10:	muleq	r2, r0, fp
   20a14:	muleq	r2, r0, fp
   20a18:	muleq	r2, r0, fp
   20a1c:	muleq	r2, r0, fp
   20a20:	muleq	r2, r0, fp
   20a24:	muleq	r2, r0, fp
   20a28:	muleq	r2, r0, fp
   20a2c:	muleq	r2, r0, fp
   20a30:	muleq	r2, r0, fp
   20a34:	muleq	r2, r0, fp
   20a38:	muleq	r2, r0, fp
   20a3c:	muleq	r2, r0, fp
   20a40:	muleq	r2, r0, fp
   20a44:	muleq	r2, r0, fp
   20a48:	muleq	r2, r0, fp
   20a4c:	muleq	r2, r0, fp
   20a50:	muleq	r2, r0, fp
   20a54:	muleq	r2, r0, fp
   20a58:	muleq	r2, r0, fp
   20a5c:	muleq	r2, r0, fp
   20a60:	muleq	r2, r0, fp
   20a64:	muleq	r2, r0, fp
   20a68:	muleq	r2, r0, fp
   20a6c:	muleq	r2, r0, fp
   20a70:	muleq	r2, r0, fp
   20a74:	muleq	r2, r0, fp
   20a78:	muleq	r2, r0, fp
   20a7c:	muleq	r2, r0, fp
   20a80:	muleq	r2, r0, fp
   20a84:	muleq	r2, r0, fp
   20a88:	muleq	r2, r0, fp
   20a8c:	muleq	r2, r0, fp
   20a90:	muleq	r2, r0, fp
   20a94:	muleq	r2, r0, fp
   20a98:	muleq	r2, r0, fp
   20a9c:	muleq	r2, r0, fp
   20aa0:	andeq	r0, r2, r4, lsr #22
   20aa4:	muleq	r2, r0, fp
   20aa8:	muleq	r2, r0, fp
   20aac:	muleq	r2, r0, fp
   20ab0:	muleq	r2, r0, fp
   20ab4:	muleq	r2, r0, fp
   20ab8:	andeq	r0, r2, ip, lsr #22
   20abc:	muleq	r2, r0, fp
   20ac0:	muleq	r2, r0, fp
   20ac4:	muleq	r2, r0, fp
   20ac8:	andeq	r0, r2, r4, lsr fp
   20acc:	muleq	r2, r0, fp
   20ad0:	muleq	r2, r0, fp
   20ad4:	muleq	r2, r0, fp
   20ad8:	muleq	r2, r0, fp
   20adc:	muleq	r2, r0, fp
   20ae0:	muleq	r2, r0, fp
   20ae4:	muleq	r2, r0, fp
   20ae8:	andeq	r0, r2, ip, lsr fp
   20aec:	muleq	r2, r0, fp
   20af0:	muleq	r2, r0, fp
   20af4:	muleq	r2, r0, fp
   20af8:	andeq	r0, r2, r4, asr #22
   20afc:	muleq	r2, r0, fp
   20b00:	andeq	r0, r2, ip, asr #22
   20b04:	andeq	r0, r2, ip, asr fp
   20b08:	muleq	r2, r0, fp
   20b0c:	muleq	r2, r0, fp
   20b10:	andeq	r0, r2, r0, lsl #23
   20b14:	movw	r0, #8705	; 0x2201
   20b18:	b	20b50 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20b1c:	movw	r0, #12033	; 0x2f01
   20b20:	b	20b50 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20b24:	movw	r0, #23553	; 0x5c01
   20b28:	b	20b50 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20b2c:	movw	r0, #2049	; 0x801
   20b30:	b	20b50 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20b34:	movw	r0, #3073	; 0xc01
   20b38:	b	20b50 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20b3c:	movw	r0, #2561	; 0xa01
   20b40:	b	20b50 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20b44:	movw	r0, #3329	; 0xd01
   20b48:	b	20b50 <flatcc_json_parser_string_escape@@Base+0x1d0>
   20b4c:	movw	r0, #2305	; 0x901
   20b50:	strh	r0, [r3]
   20b54:	add	r0, r1, #2
   20b58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20b5c:	cmp	r7, #5
   20b60:	ble	20b90 <flatcc_json_parser_string_escape@@Base+0x210>
   20b64:	ldrb	r7, [r1, #2]
   20b68:	sub	r6, r7, #48	; 0x30
   20b6c:	uxtb	r6, r6
   20b70:	cmp	r6, #9
   20b74:	bhi	20bc0 <flatcc_json_parser_string_escape@@Base+0x240>
   20b78:	lsl	ip, r7, #12
   20b7c:	b	20be0 <flatcc_json_parser_string_escape@@Base+0x260>
   20b80:	mov	r6, #1
   20b84:	strb	r6, [r3]
   20b88:	cmp	r7, #3
   20b8c:	bgt	20ba4 <flatcc_json_parser_string_escape@@Base+0x224>
   20b90:	mov	r7, #0
   20b94:	strb	r7, [r3]
   20b98:	mov	r3, #18
   20b9c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   20ba0:	b	20800 <flatcc_json_parser_set_error@@Base>
   20ba4:	ldrb	r7, [r1, #2]
   20ba8:	sub	r6, r7, #48	; 0x30
   20bac:	uxtb	r6, r6
   20bb0:	cmp	r6, #9
   20bb4:	bhi	20bfc <flatcc_json_parser_string_escape@@Base+0x27c>
   20bb8:	lsl	r6, r7, #4
   20bbc:	b	20c18 <flatcc_json_parser_string_escape@@Base+0x298>
   20bc0:	orr	r6, r7, #32
   20bc4:	sub	r6, r6, #97	; 0x61
   20bc8:	uxtb	r6, r6
   20bcc:	cmp	r6, #5
   20bd0:	bhi	20b90 <flatcc_json_parser_string_escape@@Base+0x210>
   20bd4:	movw	r6, #36864	; 0x9000
   20bd8:	movt	r6, #65535	; 0xffff
   20bdc:	add	ip, r6, r7, lsl #12
   20be0:	ldrb	lr, [r1, #3]
   20be4:	sub	r4, lr, #48	; 0x30
   20be8:	uxtb	r4, r4
   20bec:	cmp	r4, #10
   20bf0:	bcs	20c54 <flatcc_json_parser_string_escape@@Base+0x2d4>
   20bf4:	mov	r8, #53248	; 0xd000
   20bf8:	b	20c6c <flatcc_json_parser_string_escape@@Base+0x2ec>
   20bfc:	orr	r6, r7, #32
   20c00:	sub	r6, r6, #97	; 0x61
   20c04:	uxtb	r6, r6
   20c08:	cmp	r6, #5
   20c0c:	bhi	20b90 <flatcc_json_parser_string_escape@@Base+0x210>
   20c10:	mvn	r6, #111	; 0x6f
   20c14:	add	r6, r6, r7, lsl #4
   20c18:	ldrb	r5, [r1, #3]
   20c1c:	sub	r7, r5, #48	; 0x30
   20c20:	uxtb	r4, r7
   20c24:	cmp	r4, #9
   20c28:	bls	20c44 <flatcc_json_parser_string_escape@@Base+0x2c4>
   20c2c:	orr	r7, r5, #32
   20c30:	sub	r5, r7, #97	; 0x61
   20c34:	uxtb	r5, r5
   20c38:	cmp	r5, #5
   20c3c:	bhi	20b90 <flatcc_json_parser_string_escape@@Base+0x210>
   20c40:	sub	r7, r7, #87	; 0x57
   20c44:	orr	r0, r7, r6
   20c48:	strb	r0, [r3, #1]
   20c4c:	add	r0, r1, #4
   20c50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20c54:	orr	lr, lr, #32
   20c58:	sub	r4, lr, #97	; 0x61
   20c5c:	uxtb	r4, r4
   20c60:	mov	r8, #43264	; 0xa900
   20c64:	cmp	r4, #6
   20c68:	bcs	20b90 <flatcc_json_parser_string_escape@@Base+0x210>
   20c6c:	ldrb	r5, [r1, #4]
   20c70:	sub	r4, r5, #48	; 0x30
   20c74:	uxtb	r4, r4
   20c78:	cmp	r4, #10
   20c7c:	bcs	20c88 <flatcc_json_parser_string_escape@@Base+0x308>
   20c80:	mov	r9, #64768	; 0xfd00
   20c84:	b	20ca0 <flatcc_json_parser_string_escape@@Base+0x320>
   20c88:	orr	r5, r5, #32
   20c8c:	sub	r4, r5, #97	; 0x61
   20c90:	uxtb	r4, r4
   20c94:	movw	r9, #64144	; 0xfa90
   20c98:	cmp	r4, #6
   20c9c:	bcs	20b90 <flatcc_json_parser_string_escape@@Base+0x210>
   20ca0:	ldrb	r7, [r1, #5]
   20ca4:	sub	r4, r7, #48	; 0x30
   20ca8:	uxtb	r4, r4
   20cac:	cmp	r4, #10
   20cb0:	bcs	20cc0 <flatcc_json_parser_string_escape@@Base+0x340>
   20cb4:	mvn	r0, #86	; 0x56
   20cb8:	add	r4, r0, #39	; 0x27
   20cbc:	b	20cd8 <flatcc_json_parser_string_escape@@Base+0x358>
   20cc0:	movw	r4, #65449	; 0xffa9
   20cc4:	orr	r7, r7, #32
   20cc8:	sub	r6, r7, #97	; 0x61
   20ccc:	uxtb	r6, r6
   20cd0:	cmp	r6, #6
   20cd4:	bcs	20b90 <flatcc_json_parser_string_escape@@Base+0x210>
   20cd8:	add	r0, r8, lr, lsl #8
   20cdc:	orr	r0, r0, ip
   20ce0:	add	r2, r9, r5, lsl #4
   20ce4:	orr	r0, r0, r2
   20ce8:	add	r2, r4, r7
   20cec:	orr	r0, r0, r2
   20cf0:	uxth	r7, r0
   20cf4:	cmp	r7, #127	; 0x7f
   20cf8:	bhi	20d08 <flatcc_json_parser_string_escape@@Base+0x388>
   20cfc:	mov	r2, #1
   20d00:	strb	r2, [r3]
   20d04:	b	20d5c <flatcc_json_parser_string_escape@@Base+0x3dc>
   20d08:	and	r2, r0, #63488	; 0xf800
   20d0c:	mov	r6, #0
   20d10:	cmp	r6, r2, lsr #11
   20d14:	bne	20d30 <flatcc_json_parser_string_escape@@Base+0x3b0>
   20d18:	mov	r2, #2
   20d1c:	strb	r2, [r3]
   20d20:	mov	r7, #192	; 0xc0
   20d24:	orr	r7, r7, r0, lsr #6
   20d28:	strb	r7, [r3, #1]
   20d2c:	b	20d54 <flatcc_json_parser_string_escape@@Base+0x3d4>
   20d30:	mov	r2, #3
   20d34:	strb	r2, [r3]
   20d38:	mov	r6, #224	; 0xe0
   20d3c:	orr	r6, r6, r7, lsr #12
   20d40:	strb	r6, [r3, #1]
   20d44:	lsr	r7, r7, #6
   20d48:	mov	r6, #2
   20d4c:	bfi	r7, r6, #6, #26
   20d50:	strb	r7, [r3, #2]
   20d54:	mvn	r7, #-67108863	; 0xfc000001
   20d58:	bfi	r0, r7, #6, #26
   20d5c:	strb	r0, [r3, r2]
   20d60:	add	r0, r1, #6
   20d64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00020d68 <flatcc_json_parser_skip_constant@@Base>:
   20d68:	push	{r4, r5, r6, sl, fp, lr}
   20d6c:	add	fp, sp, #16
   20d70:	mov	r4, r1
   20d74:	cmp	r1, r2
   20d78:	beq	20dec <flatcc_json_parser_skip_constant@@Base+0x84>
   20d7c:	mov	r5, r2
   20d80:	mov	r6, r0
   20d84:	ldrsb	r0, [r4]
   20d88:	cmp	r0, #0
   20d8c:	blt	20d9c <flatcc_json_parser_skip_constant@@Base+0x34>
   20d90:	cmp	r0, #95	; 0x5f
   20d94:	cmpne	r0, #46	; 0x2e
   20d98:	bne	20dac <flatcc_json_parser_skip_constant@@Base+0x44>
   20d9c:	add	r4, r4, #1
   20da0:	cmp	r4, r5
   20da4:	bne	20d84 <flatcc_json_parser_skip_constant@@Base+0x1c>
   20da8:	b	20dec <flatcc_json_parser_skip_constant@@Base+0x84>
   20dac:	sub	r1, r0, #48	; 0x30
   20db0:	uxtb	r1, r1
   20db4:	cmp	r1, #9
   20db8:	bls	20d9c <flatcc_json_parser_skip_constant@@Base+0x34>
   20dbc:	orr	r0, r0, #32
   20dc0:	sub	r0, r0, #97	; 0x61
   20dc4:	uxtb	r0, r0
   20dc8:	cmp	r0, #25
   20dcc:	bls	20d9c <flatcc_json_parser_skip_constant@@Base+0x34>
   20dd0:	mov	r0, r6
   20dd4:	mov	r1, r4
   20dd8:	mov	r2, r5
   20ddc:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   20de0:	cmp	r0, r4
   20de4:	mov	r4, r0
   20de8:	bne	20da0 <flatcc_json_parser_skip_constant@@Base+0x38>
   20dec:	mov	r0, r4
   20df0:	pop	{r4, r5, r6, sl, fp, pc}
   20df4:	sub	r3, r2, r1
   20df8:	cmp	r3, #2
   20dfc:	blt	20e28 <flatcc_json_parser_skip_constant@@Base+0xc0>
   20e00:	ldrb	r3, [r1]
   20e04:	cmp	r3, #32
   20e08:	movhi	r0, r1
   20e0c:	bxhi	lr
   20e10:	bne	20e28 <flatcc_json_parser_skip_constant@@Base+0xc0>
   20e14:	mov	ip, r1
   20e18:	ldrb	r3, [ip, #1]!
   20e1c:	cmp	r3, #32
   20e20:	movhi	r0, ip
   20e24:	bxhi	lr
   20e28:	b	2087c <flatcc_json_parser_space_ext@@Base>

00020e2c <flatcc_json_parser_match_constant@@Base>:
   20e2c:	push	{r4, r5, r6, r7, fp, lr}
   20e30:	add	fp, sp, #16
   20e34:	mov	r5, r2
   20e38:	mov	r4, r1
   20e3c:	mov	r2, r0
   20e40:	sub	r0, r5, r1
   20e44:	ldr	r7, [fp, #8]
   20e48:	cmp	r0, r3
   20e4c:	ble	20f2c <flatcc_json_parser_match_constant@@Base+0x100>
   20e50:	add	r6, r4, r3
   20e54:	ldr	r0, [r2, #12]
   20e58:	cmp	r0, #0
   20e5c:	beq	20ec4 <flatcc_json_parser_match_constant@@Base+0x98>
   20e60:	mov	r0, r2
   20e64:	mov	r1, r6
   20e68:	mov	r2, r5
   20e6c:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   20e70:	cmp	r0, r5
   20e74:	beq	20f3c <flatcc_json_parser_match_constant@@Base+0x110>
   20e78:	cmp	r0, r6
   20e7c:	beq	20ea8 <flatcc_json_parser_match_constant@@Base+0x7c>
   20e80:	ldrsb	r1, [r0]
   20e84:	cmp	r1, #95	; 0x5f
   20e88:	beq	20f48 <flatcc_json_parser_match_constant@@Base+0x11c>
   20e8c:	cmn	r1, #1
   20e90:	ble	20f48 <flatcc_json_parser_match_constant@@Base+0x11c>
   20e94:	orr	r1, r1, #32
   20e98:	sub	r1, r1, #97	; 0x61
   20e9c:	uxtb	r1, r1
   20ea0:	cmp	r1, #25
   20ea4:	bls	20f48 <flatcc_json_parser_match_constant@@Base+0x11c>
   20ea8:	mov	r1, #0
   20eac:	str	r1, [r7]
   20eb0:	ldrb	r1, [r0]
   20eb4:	cmp	r1, #44	; 0x2c
   20eb8:	cmpne	r1, #93	; 0x5d
   20ebc:	bne	20f74 <flatcc_json_parser_match_constant@@Base+0x148>
   20ec0:	pop	{r4, r5, r6, r7, fp, pc}
   20ec4:	ldrb	r0, [r6]
   20ec8:	cmp	r0, #92	; 0x5c
   20ecc:	beq	20f54 <flatcc_json_parser_match_constant@@Base+0x128>
   20ed0:	cmp	r0, #34	; 0x22
   20ed4:	beq	20f10 <flatcc_json_parser_match_constant@@Base+0xe4>
   20ed8:	cmp	r0, #32
   20edc:	bne	20f2c <flatcc_json_parser_match_constant@@Base+0x100>
   20ee0:	add	r0, r4, r3
   20ee4:	add	r6, r0, #1
   20ee8:	mov	r0, r6
   20eec:	cmp	r5, r6
   20ef0:	beq	20f3c <flatcc_json_parser_match_constant@@Base+0x110>
   20ef4:	mov	r6, r0
   20ef8:	ldrb	r1, [r6], #1
   20efc:	cmp	r1, #32
   20f00:	beq	20ee8 <flatcc_json_parser_match_constant@@Base+0xbc>
   20f04:	ldrb	r1, [r6, #-1]!
   20f08:	cmp	r1, #34	; 0x22
   20f0c:	bne	20f48 <flatcc_json_parser_match_constant@@Base+0x11c>
   20f10:	add	r1, r6, #1
   20f14:	mov	r4, #0
   20f18:	mov	r0, r2
   20f1c:	mov	r2, #0
   20f20:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   20f24:	str	r4, [r7]
   20f28:	pop	{r4, r5, r6, r7, fp, pc}
   20f2c:	mov	r0, #0
   20f30:	str	r0, [r7]
   20f34:	mov	r0, r4
   20f38:	pop	{r4, r5, r6, r7, fp, pc}
   20f3c:	mov	r1, #0
   20f40:	str	r1, [r7]
   20f44:	pop	{r4, r5, r6, r7, fp, pc}
   20f48:	mov	r1, #1
   20f4c:	str	r1, [r7]
   20f50:	pop	{r4, r5, r6, r7, fp, pc}
   20f54:	mov	r0, #0
   20f58:	str	r0, [r7]
   20f5c:	mov	r0, r2
   20f60:	mov	r1, r6
   20f64:	mov	r2, r5
   20f68:	mov	r3, #18
   20f6c:	pop	{r4, r5, r6, r7, fp, lr}
   20f70:	b	20800 <flatcc_json_parser_set_error@@Base>
   20f74:	cmp	r1, #125	; 0x7d
   20f78:	movne	r0, r4
   20f7c:	pop	{r4, r5, r6, r7, fp, pc}

00020f80 <flatcc_json_parser_unmatched_symbol@@Base>:
   20f80:	push	{r4, r5, fp, lr}
   20f84:	add	fp, sp, #8
   20f88:	mov	r4, r2
   20f8c:	mov	r5, r0
   20f90:	ldrb	r0, [r0, #8]
   20f94:	tst	r0, #1
   20f98:	bne	20fb0 <flatcc_json_parser_unmatched_symbol@@Base+0x30>
   20f9c:	mov	r0, r5
   20fa0:	mov	r2, r4
   20fa4:	mov	r3, #13
   20fa8:	pop	{r4, r5, fp, lr}
   20fac:	b	20800 <flatcc_json_parser_set_error@@Base>
   20fb0:	mov	r0, r5
   20fb4:	mov	r2, r4
   20fb8:	bl	2101c <flatcc_json_parser_unmatched_symbol@@Base+0x9c>
   20fbc:	mov	r1, r0
   20fc0:	mov	r0, r5
   20fc4:	mov	r2, r4
   20fc8:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   20fcc:	mov	r1, r0
   20fd0:	cmp	r0, r4
   20fd4:	beq	21008 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   20fd8:	ldrb	r0, [r1]
   20fdc:	cmp	r0, #58	; 0x3a
   20fe0:	bne	21008 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   20fe4:	add	r1, r1, #1
   20fe8:	mov	r0, r5
   20fec:	mov	r2, r4
   20ff0:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   20ff4:	mov	r1, r0
   20ff8:	mov	r0, r5
   20ffc:	mov	r2, r4
   21000:	pop	{r4, r5, fp, lr}
   21004:	b	21124 <flatcc_json_parser_generic_json@@Base>
   21008:	mov	r0, r5
   2100c:	mov	r2, r4
   21010:	mov	r3, #4
   21014:	pop	{r4, r5, fp, lr}
   21018:	b	20800 <flatcc_json_parser_set_error@@Base>
   2101c:	ldr	r3, [r0, #12]
   21020:	cmp	r3, #0
   21024:	beq	210d0 <flatcc_json_parser_unmatched_symbol@@Base+0x150>
   21028:	cmp	r1, r2
   2102c:	beq	21114 <flatcc_json_parser_unmatched_symbol@@Base+0x194>
   21030:	push	{fp, lr}
   21034:	mov	fp, sp
   21038:	ldrb	lr, [r1]
   2103c:	mov	ip, #0
   21040:	cmp	lr, #33	; 0x21
   21044:	bcc	210b4 <flatcc_json_parser_unmatched_symbol@@Base+0x134>
   21048:	add	r3, r1, #1
   2104c:	mov	ip, lr
   21050:	mov	r1, r3
   21054:	uxtb	r3, lr
   21058:	cmp	r3, #46	; 0x2e
   2105c:	cmpne	r3, #95	; 0x5f
   21060:	bne	21080 <flatcc_json_parser_unmatched_symbol@@Base+0x100>
   21064:	cmp	r2, r1
   21068:	beq	210b4 <flatcc_json_parser_unmatched_symbol@@Base+0x134>
   2106c:	mov	r3, r1
   21070:	ldrb	lr, [r3], #1
   21074:	cmp	lr, #33	; 0x21
   21078:	bcs	2104c <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   2107c:	b	210b4 <flatcc_json_parser_unmatched_symbol@@Base+0x134>
   21080:	sxtb	r3, ip
   21084:	cmp	r3, #0
   21088:	blt	21064 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   2108c:	sub	r3, ip, #48	; 0x30
   21090:	uxtb	r3, r3
   21094:	cmp	r3, #9
   21098:	bls	21064 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   2109c:	orr	r3, ip, #32
   210a0:	sub	r3, r3, #97	; 0x61
   210a4:	uxtb	r3, r3
   210a8:	cmp	r3, #26
   210ac:	bcc	21064 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   210b0:	sub	r1, r1, #1
   210b4:	uxtb	r3, ip
   210b8:	cmp	r3, #46	; 0x2e
   210bc:	pop	{fp, lr}
   210c0:	bne	21114 <flatcc_json_parser_unmatched_symbol@@Base+0x194>
   210c4:	mov	r3, #5
   210c8:	b	20800 <flatcc_json_parser_set_error@@Base>
   210cc:	add	r1, r1, #1
   210d0:	cmp	r1, r2
   210d4:	beq	2111c <flatcc_json_parser_unmatched_symbol@@Base+0x19c>
   210d8:	ldrb	r3, [r1]
   210dc:	cmp	r3, #92	; 0x5c
   210e0:	beq	210f0 <flatcc_json_parser_unmatched_symbol@@Base+0x170>
   210e4:	cmp	r3, #34	; 0x22
   210e8:	bne	210cc <flatcc_json_parser_unmatched_symbol@@Base+0x14c>
   210ec:	b	21110 <flatcc_json_parser_unmatched_symbol@@Base+0x190>
   210f0:	sub	r3, r2, r1
   210f4:	cmp	r3, #2
   210f8:	blt	21104 <flatcc_json_parser_unmatched_symbol@@Base+0x184>
   210fc:	add	r1, r1, #1
   21100:	b	210cc <flatcc_json_parser_unmatched_symbol@@Base+0x14c>
   21104:	ldrb	r3, [r1]
   21108:	cmp	r3, #34	; 0x22
   2110c:	bne	2111c <flatcc_json_parser_unmatched_symbol@@Base+0x19c>
   21110:	add	r1, r1, #1
   21114:	mov	r0, r1
   21118:	bx	lr
   2111c:	mov	r3, #20
   21120:	b	20800 <flatcc_json_parser_set_error@@Base>

00021124 <flatcc_json_parser_generic_json@@Base>:
   21124:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21128:	add	fp, sp, #28
   2112c:	sub	sp, sp, #524	; 0x20c
   21130:	mov	r7, r1
   21134:	mov	r6, #0
   21138:	str	r6, [sp]
   2113c:	cmp	r1, r2
   21140:	beq	213e8 <flatcc_json_parser_generic_json@@Base+0x2c4>
   21144:	mov	r4, r2
   21148:	mov	r5, r0
   2114c:	add	sl, sp, #8
   21150:	sub	r8, sl, #1
   21154:	mov	r9, sp
   21158:	mov	r0, sl
   2115c:	cmp	r6, #0
   21160:	beq	211cc <flatcc_json_parser_generic_json@@Base+0xa8>
   21164:	ldrb	r0, [r0, #-1]
   21168:	cmp	r0, #125	; 0x7d
   2116c:	bne	211cc <flatcc_json_parser_generic_json@@Base+0xa8>
   21170:	mov	r0, r5
   21174:	mov	r1, r7
   21178:	mov	r2, r4
   2117c:	bl	21650 <flatcc_json_parser_float@@Base+0x140>
   21180:	mov	r1, r0
   21184:	mov	r0, r5
   21188:	mov	r2, r4
   2118c:	bl	2101c <flatcc_json_parser_unmatched_symbol@@Base+0x9c>
   21190:	mov	r1, r0
   21194:	mov	r0, r5
   21198:	mov	r2, r4
   2119c:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   211a0:	mov	r1, r0
   211a4:	cmp	r0, r4
   211a8:	beq	213f4 <flatcc_json_parser_generic_json@@Base+0x2d0>
   211ac:	ldrb	r0, [r1]
   211b0:	cmp	r0, #58	; 0x3a
   211b4:	bne	21404 <flatcc_json_parser_generic_json@@Base+0x2e0>
   211b8:	add	r1, r1, #1
   211bc:	mov	r0, r5
   211c0:	mov	r2, r4
   211c4:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   211c8:	mov	r7, r0
   211cc:	ldrb	r0, [r7]
   211d0:	sub	r1, r0, #48	; 0x30
   211d4:	cmp	r1, #10
   211d8:	bcs	21250 <flatcc_json_parser_generic_json@@Base+0x12c>
   211dc:	mov	r0, r5
   211e0:	mov	r1, r7
   211e4:	mov	r2, r4
   211e8:	bl	216d8 <flatcc_json_parser_float@@Base+0x1c8>
   211ec:	mov	r7, r0
   211f0:	cmp	r6, #0
   211f4:	cmpne	r7, r4
   211f8:	beq	213ac <flatcc_json_parser_generic_json@@Base+0x288>
   211fc:	ldrb	r0, [r8, r6]
   21200:	cmp	r0, #93	; 0x5d
   21204:	bne	21220 <flatcc_json_parser_generic_json@@Base+0xfc>
   21208:	mov	r0, r5
   2120c:	mov	r1, r7
   21210:	mov	r2, r4
   21214:	mov	r3, r9
   21218:	bl	2193c <flatcc_json_parser_float@@Base+0x42c>
   2121c:	b	21234 <flatcc_json_parser_generic_json@@Base+0x110>
   21220:	mov	r0, r5
   21224:	mov	r1, r7
   21228:	mov	r2, r4
   2122c:	mov	r3, r9
   21230:	bl	219fc <flatcc_json_parser_float@@Base+0x4ec>
   21234:	mov	r7, r0
   21238:	sub	r6, r6, #1
   2123c:	ldr	r0, [sp]
   21240:	cmp	r0, #0
   21244:	beq	211f0 <flatcc_json_parser_generic_json@@Base+0xcc>
   21248:	add	r6, r6, #1
   2124c:	b	21378 <flatcc_json_parser_generic_json@@Base+0x254>
   21250:	cmp	r0, #90	; 0x5a
   21254:	bgt	2126c <flatcc_json_parser_generic_json@@Base+0x148>
   21258:	cmp	r0, #34	; 0x22
   2125c:	beq	212bc <flatcc_json_parser_generic_json@@Base+0x198>
   21260:	cmp	r0, #45	; 0x2d
   21264:	beq	211dc <flatcc_json_parser_generic_json@@Base+0xb8>
   21268:	b	21388 <flatcc_json_parser_generic_json@@Base+0x264>
   2126c:	cmp	r0, #91	; 0x5b
   21270:	beq	2133c <flatcc_json_parser_generic_json@@Base+0x218>
   21274:	cmp	r0, #123	; 0x7b
   21278:	bne	21388 <flatcc_json_parser_generic_json@@Base+0x264>
   2127c:	cmp	r6, #512	; 0x200
   21280:	beq	21414 <flatcc_json_parser_generic_json@@Base+0x2f0>
   21284:	mov	r0, #125	; 0x7d
   21288:	strb	r0, [sl, r6]
   2128c:	add	r1, r7, #1
   21290:	mov	r0, r5
   21294:	mov	r2, r4
   21298:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   2129c:	mov	r7, r0
   212a0:	add	r6, r6, #1
   212a4:	cmp	r0, r4
   212a8:	beq	21378 <flatcc_json_parser_generic_json@@Base+0x254>
   212ac:	ldrb	r0, [r7]
   212b0:	cmp	r0, #125	; 0x7d
   212b4:	beq	211f0 <flatcc_json_parser_generic_json@@Base+0xcc>
   212b8:	b	21378 <flatcc_json_parser_generic_json@@Base+0x254>
   212bc:	mov	r0, r5
   212c0:	mov	r1, r7
   212c4:	mov	r2, r4
   212c8:	bl	21698 <flatcc_json_parser_float@@Base+0x188>
   212cc:	mov	r1, r0
   212d0:	cmp	r0, r4
   212d4:	beq	21328 <flatcc_json_parser_generic_json@@Base+0x204>
   212d8:	add	r7, sp, #4
   212dc:	ldrb	r0, [r1]
   212e0:	cmp	r0, #34	; 0x22
   212e4:	beq	21328 <flatcc_json_parser_generic_json@@Base+0x204>
   212e8:	mov	r0, r5
   212ec:	mov	r2, r4
   212f0:	bl	20838 <flatcc_json_parser_string_part@@Base>
   212f4:	mov	r1, r0
   212f8:	cmp	r0, r4
   212fc:	beq	2130c <flatcc_json_parser_generic_json@@Base+0x1e8>
   21300:	ldrb	r0, [r1]
   21304:	cmp	r0, #34	; 0x22
   21308:	beq	21328 <flatcc_json_parser_generic_json@@Base+0x204>
   2130c:	mov	r0, r5
   21310:	mov	r2, r4
   21314:	mov	r3, r7
   21318:	bl	20980 <flatcc_json_parser_string_escape@@Base>
   2131c:	mov	r1, r0
   21320:	cmp	r0, r4
   21324:	bne	212dc <flatcc_json_parser_generic_json@@Base+0x1b8>
   21328:	mov	r0, r5
   2132c:	mov	r2, r4
   21330:	bl	216b8 <flatcc_json_parser_float@@Base+0x1a8>
   21334:	mov	r7, r0
   21338:	b	211f0 <flatcc_json_parser_generic_json@@Base+0xcc>
   2133c:	cmp	r6, #512	; 0x200
   21340:	beq	21414 <flatcc_json_parser_generic_json@@Base+0x2f0>
   21344:	mov	r0, #93	; 0x5d
   21348:	strb	r0, [sl, r6]
   2134c:	add	r1, r7, #1
   21350:	mov	r0, r5
   21354:	mov	r2, r4
   21358:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   2135c:	mov	r7, r0
   21360:	add	r6, r6, #1
   21364:	cmp	r0, r4
   21368:	beq	21378 <flatcc_json_parser_generic_json@@Base+0x254>
   2136c:	ldrb	r0, [r7]
   21370:	cmp	r0, #93	; 0x5d
   21374:	beq	211f0 <flatcc_json_parser_generic_json@@Base+0xcc>
   21378:	add	r0, sl, r6
   2137c:	cmp	r7, r4
   21380:	bne	2115c <flatcc_json_parser_generic_json@@Base+0x38>
   21384:	b	213e8 <flatcc_json_parser_generic_json@@Base+0x2c4>
   21388:	mov	r0, r5
   2138c:	mov	r1, r7
   21390:	mov	r2, r4
   21394:	bl	20d68 <flatcc_json_parser_skip_constant@@Base>
   21398:	mov	r1, r0
   2139c:	cmp	r7, r0
   213a0:	beq	21428 <flatcc_json_parser_generic_json@@Base+0x304>
   213a4:	mov	r7, r1
   213a8:	b	211f0 <flatcc_json_parser_generic_json@@Base+0xcc>
   213ac:	cmp	r7, r4
   213b0:	bne	213e8 <flatcc_json_parser_generic_json@@Base+0x2c4>
   213b4:	cmp	r6, #0
   213b8:	beq	213e8 <flatcc_json_parser_generic_json@@Base+0x2c4>
   213bc:	add	r0, sp, #8
   213c0:	add	r0, r0, r6
   213c4:	ldrb	r0, [r0, #-1]
   213c8:	mov	r3, #10
   213cc:	cmp	r0, #93	; 0x5d
   213d0:	movweq	r3, #9
   213d4:	mov	r0, r5
   213d8:	mov	r1, r7
   213dc:	mov	r2, r4
   213e0:	bl	20800 <flatcc_json_parser_set_error@@Base>
   213e4:	mov	r7, r0
   213e8:	mov	r0, r7
   213ec:	sub	sp, fp, #28
   213f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   213f4:	mov	r0, r5
   213f8:	mov	r2, r4
   213fc:	mov	r3, #10
   21400:	b	213e0 <flatcc_json_parser_generic_json@@Base+0x2bc>
   21404:	mov	r0, r5
   21408:	mov	r2, r4
   2140c:	mov	r3, #4
   21410:	b	213e0 <flatcc_json_parser_generic_json@@Base+0x2bc>
   21414:	mov	r0, r5
   21418:	mov	r1, r7
   2141c:	mov	r2, r4
   21420:	mov	r3, #2
   21424:	b	213e0 <flatcc_json_parser_generic_json@@Base+0x2bc>
   21428:	mov	r0, r5
   2142c:	mov	r2, r4
   21430:	mov	r3, #5
   21434:	b	213e0 <flatcc_json_parser_generic_json@@Base+0x2bc>

00021438 <flatcc_json_parser_double@@Base>:
   21438:	push	{r4, r5, r6, r7, fp, lr}
   2143c:	add	fp, sp, #16
   21440:	mov	r5, r1
   21444:	mov	r6, r0
   21448:	mov	r0, #0
   2144c:	str	r0, [r3]
   21450:	str	r0, [r3, #4]
   21454:	cmp	r1, r2
   21458:	beq	214ec <flatcc_json_parser_double@@Base+0xb4>
   2145c:	mov	r7, r3
   21460:	mov	r4, r2
   21464:	mov	r0, r5
   21468:	ldrb	r1, [r0], #1
   2146c:	cmp	r1, #45	; 0x2d
   21470:	movne	r0, r5
   21474:	sub	r2, r2, r0
   21478:	cmp	r2, #2
   2147c:	blt	214a8 <flatcc_json_parser_double@@Base+0x70>
   21480:	sub	r1, r1, #45	; 0x2d
   21484:	clz	r1, r1
   21488:	lsr	r1, r1, #5
   2148c:	ldrb	r1, [r5, r1]
   21490:	cmp	r1, #46	; 0x2e
   21494:	beq	214f4 <flatcc_json_parser_double@@Base+0xbc>
   21498:	cmp	r1, #48	; 0x30
   2149c:	ldrbeq	r0, [r0, #1]
   214a0:	cmpeq	r0, #48	; 0x30
   214a4:	beq	214f4 <flatcc_json_parser_double@@Base+0xbc>
   214a8:	sub	r1, r4, r5
   214ac:	mov	r0, r5
   214b0:	mov	r2, r7
   214b4:	bl	2150c <flatcc_json_parser_double@@Base+0xd4>
   214b8:	cmp	r0, #0
   214bc:	cmpne	r0, r5
   214c0:	popne	{r4, r5, r6, r7, fp, pc}
   214c4:	vldr	d0, [r7]
   214c8:	bl	12aec <__isinf@plt>
   214cc:	cmp	r0, #0
   214d0:	beq	214f4 <flatcc_json_parser_double@@Base+0xbc>
   214d4:	mov	r0, r6
   214d8:	mov	r1, r5
   214dc:	mov	r2, r4
   214e0:	mov	r3, #7
   214e4:	pop	{r4, r5, r6, r7, fp, lr}
   214e8:	b	20800 <flatcc_json_parser_set_error@@Base>
   214ec:	mov	r0, r5
   214f0:	pop	{r4, r5, r6, r7, fp, pc}
   214f4:	mov	r0, r6
   214f8:	mov	r1, r5
   214fc:	mov	r2, r4
   21500:	mov	r3, #6
   21504:	pop	{r4, r5, r6, r7, fp, lr}
   21508:	b	20800 <flatcc_json_parser_set_error@@Base>
   2150c:	b	22df0 <flatcc_json_parser_struct_as_root@@Base+0xbc>

00021510 <flatcc_json_parser_float@@Base>:
   21510:	push	{r4, r5, r6, r7, fp, lr}
   21514:	add	fp, sp, #16
   21518:	mov	r5, r1
   2151c:	mov	r6, r0
   21520:	mov	r0, #0
   21524:	str	r0, [r3]
   21528:	cmp	r1, r2
   2152c:	beq	215c0 <flatcc_json_parser_float@@Base+0xb0>
   21530:	mov	r7, r3
   21534:	mov	r4, r2
   21538:	mov	r0, r5
   2153c:	ldrb	r1, [r0], #1
   21540:	cmp	r1, #45	; 0x2d
   21544:	movne	r0, r5
   21548:	sub	r2, r2, r0
   2154c:	cmp	r2, #2
   21550:	blt	2157c <flatcc_json_parser_float@@Base+0x6c>
   21554:	sub	r1, r1, #45	; 0x2d
   21558:	clz	r1, r1
   2155c:	lsr	r1, r1, #5
   21560:	ldrb	r1, [r5, r1]
   21564:	cmp	r1, #46	; 0x2e
   21568:	beq	215c8 <flatcc_json_parser_float@@Base+0xb8>
   2156c:	cmp	r1, #48	; 0x30
   21570:	ldrbeq	r0, [r0, #1]
   21574:	cmpeq	r0, #48	; 0x30
   21578:	beq	215c8 <flatcc_json_parser_float@@Base+0xb8>
   2157c:	sub	r1, r4, r5
   21580:	mov	r0, r5
   21584:	mov	r2, r7
   21588:	bl	215e0 <flatcc_json_parser_float@@Base+0xd0>
   2158c:	cmp	r0, #0
   21590:	cmpne	r0, r5
   21594:	popne	{r4, r5, r6, r7, fp, pc}
   21598:	vldr	s0, [r7]
   2159c:	bl	12ae0 <__isinff@plt>
   215a0:	cmp	r0, #0
   215a4:	beq	215c8 <flatcc_json_parser_float@@Base+0xb8>
   215a8:	mov	r0, r6
   215ac:	mov	r1, r5
   215b0:	mov	r2, r4
   215b4:	mov	r3, #7
   215b8:	pop	{r4, r5, r6, r7, fp, lr}
   215bc:	b	20800 <flatcc_json_parser_set_error@@Base>
   215c0:	mov	r0, r5
   215c4:	pop	{r4, r5, r6, r7, fp, pc}
   215c8:	mov	r0, r6
   215cc:	mov	r1, r5
   215d0:	mov	r2, r4
   215d4:	mov	r3, #6
   215d8:	pop	{r4, r5, r6, r7, fp, lr}
   215dc:	b	20800 <flatcc_json_parser_set_error@@Base>
   215e0:	push	{r4, r5, r6, sl, fp, lr}
   215e4:	add	fp, sp, #16
   215e8:	vpush	{d8-d9}
   215ec:	sub	sp, sp, #8
   215f0:	mov	r4, r2
   215f4:	mov	r5, r0
   215f8:	mov	r2, sp
   215fc:	bl	2150c <flatcc_json_parser_double@@Base+0xd4>
   21600:	mov	r6, r0
   21604:	vldr	d16, [sp]
   21608:	add	r0, pc, #56	; 0x38
   2160c:	vcmpe.f64	d16, #0.0
   21610:	vmrs	APSR_nzcv, fpscr
   21614:	addmi	r0, r0, #4
   21618:	vcvt.f32.f64	s16, d16
   2161c:	vldr	s18, [r0]
   21620:	vmov.f32	s0, s16
   21624:	bl	12ae0 <__isinff@plt>
   21628:	cmp	r0, #0
   2162c:	vseleq.f32	s0, s16, s18
   21630:	vstr	s0, [r4]
   21634:	movne	r6, r5
   21638:	mov	r0, r6
   2163c:	sub	sp, fp, #32
   21640:	vpop	{d8-d9}
   21644:	pop	{r4, r5, r6, sl, fp, pc}
   21648:	svcvc	0x00800000
   2164c:			; <UNDEFINED> instruction: 0xff800000
   21650:	cmp	r1, r2
   21654:	beq	21690 <flatcc_json_parser_float@@Base+0x180>
   21658:	ldrb	r3, [r1]
   2165c:	cmp	r3, #46	; 0x2e
   21660:	beq	21680 <flatcc_json_parser_float@@Base+0x170>
   21664:	cmp	r3, #34	; 0x22
   21668:	bne	21688 <flatcc_json_parser_float@@Base+0x178>
   2166c:	mov	r2, #0
   21670:	str	r2, [r0, #12]
   21674:	add	r1, r1, #1
   21678:	mov	r0, r1
   2167c:	bx	lr
   21680:	mov	r3, #5
   21684:	b	20800 <flatcc_json_parser_set_error@@Base>
   21688:	mov	r2, #1
   2168c:	str	r2, [r0, #12]
   21690:	mov	r0, r1
   21694:	bx	lr
   21698:	cmp	r1, r2
   2169c:	beq	216b0 <flatcc_json_parser_float@@Base+0x1a0>
   216a0:	ldrb	r3, [r1]
   216a4:	cmp	r3, #34	; 0x22
   216a8:	addeq	r0, r1, #1
   216ac:	bxeq	lr
   216b0:	mov	r3, #16
   216b4:	b	20800 <flatcc_json_parser_set_error@@Base>
   216b8:	cmp	r1, r2
   216bc:	beq	216d0 <flatcc_json_parser_float@@Base+0x1c0>
   216c0:	ldrb	r3, [r1]
   216c4:	cmp	r3, #34	; 0x22
   216c8:	addeq	r0, r1, #1
   216cc:	bxeq	lr
   216d0:	mov	r3, #20
   216d4:	b	20800 <flatcc_json_parser_set_error@@Base>
   216d8:	push	{fp, lr}
   216dc:	mov	fp, sp
   216e0:	cmp	r1, r2
   216e4:	beq	2191c <flatcc_json_parser_float@@Base+0x40c>
   216e8:	ldrb	r3, [r1]
   216ec:	cmp	r3, #45	; 0x2d
   216f0:	bne	21704 <flatcc_json_parser_float@@Base+0x1f4>
   216f4:	add	r1, r1, #1
   216f8:	cmp	r1, r2
   216fc:	beq	21930 <flatcc_json_parser_float@@Base+0x420>
   21700:	ldrb	r3, [r1]
   21704:	cmp	r3, #48	; 0x30
   21708:	bne	2171c <flatcc_json_parser_float@@Base+0x20c>
   2170c:	add	r1, r1, #1
   21710:	cmp	r1, r2
   21714:	bne	2175c <flatcc_json_parser_float@@Base+0x24c>
   21718:	b	217b4 <flatcc_json_parser_float@@Base+0x2a4>
   2171c:	sub	r3, r3, #49	; 0x31
   21720:	uxtb	r3, r3
   21724:	cmp	r3, #8
   21728:	bhi	21930 <flatcc_json_parser_float@@Base+0x420>
   2172c:	add	ip, r1, #1
   21730:	mov	r1, ip
   21734:	cmp	r2, ip
   21738:	beq	21754 <flatcc_json_parser_float@@Base+0x244>
   2173c:	mov	ip, r1
   21740:	ldrb	r3, [ip], #1
   21744:	sub	r3, r3, #48	; 0x30
   21748:	uxtb	r3, r3
   2174c:	cmp	r3, #10
   21750:	bcc	21730 <flatcc_json_parser_float@@Base+0x220>
   21754:	cmp	r1, r2
   21758:	beq	217b4 <flatcc_json_parser_float@@Base+0x2a4>
   2175c:	ldrb	r3, [r1]
   21760:	cmp	r3, #46	; 0x2e
   21764:	bne	217b4 <flatcc_json_parser_float@@Base+0x2a4>
   21768:	mov	ip, r1
   2176c:	ldrb	r3, [ip, #1]!
   21770:	sub	r3, r3, #48	; 0x30
   21774:	uxtb	r3, r3
   21778:	cmp	r3, #10
   2177c:	bcc	21788 <flatcc_json_parser_float@@Base+0x278>
   21780:	mov	r1, ip
   21784:	b	21930 <flatcc_json_parser_float@@Base+0x420>
   21788:	add	r1, r1, #2
   2178c:	cmp	r1, r2
   21790:	beq	217b4 <flatcc_json_parser_float@@Base+0x2a4>
   21794:	ldrb	r3, [r1]
   21798:	sub	r3, r3, #48	; 0x30
   2179c:	uxtb	r3, r3
   217a0:	cmp	r3, #9
   217a4:	bhi	217b4 <flatcc_json_parser_float@@Base+0x2a4>
   217a8:	add	r1, r1, #1
   217ac:	cmp	r2, r1
   217b0:	bne	21794 <flatcc_json_parser_float@@Base+0x284>
   217b4:	cmp	r1, r2
   217b8:	beq	21834 <flatcc_json_parser_float@@Base+0x324>
   217bc:	ldrb	r3, [r1]
   217c0:	orr	r3, r3, #32
   217c4:	cmp	r3, #101	; 0x65
   217c8:	bne	21834 <flatcc_json_parser_float@@Base+0x324>
   217cc:	add	r3, r1, #1
   217d0:	cmp	r3, r2
   217d4:	beq	21804 <flatcc_json_parser_float@@Base+0x2f4>
   217d8:	ldrb	ip, [r3]
   217dc:	cmp	ip, #45	; 0x2d
   217e0:	cmpne	ip, #43	; 0x2b
   217e4:	addeq	r3, r1, #2
   217e8:	cmp	r3, r2
   217ec:	beq	21804 <flatcc_json_parser_float@@Base+0x2f4>
   217f0:	ldrb	r1, [r3]
   217f4:	sub	r1, r1, #48	; 0x30
   217f8:	uxtb	r1, r1
   217fc:	cmp	r1, #9
   21800:	bls	2180c <flatcc_json_parser_float@@Base+0x2fc>
   21804:	mov	r1, r3
   21808:	b	21930 <flatcc_json_parser_float@@Base+0x420>
   2180c:	add	ip, r3, #1
   21810:	mov	r1, ip
   21814:	cmp	r2, ip
   21818:	beq	21834 <flatcc_json_parser_float@@Base+0x324>
   2181c:	mov	ip, r1
   21820:	ldrb	r3, [ip], #1
   21824:	sub	r3, r3, #48	; 0x30
   21828:	uxtb	r3, r3
   2182c:	cmp	r3, #10
   21830:	bcc	21810 <flatcc_json_parser_float@@Base+0x300>
   21834:	cmp	r1, r2
   21838:	beq	21930 <flatcc_json_parser_float@@Base+0x420>
   2183c:	ldrb	ip, [r1]
   21840:	sub	lr, ip, #9
   21844:	cmp	lr, #49	; 0x31
   21848:	bhi	21924 <flatcc_json_parser_float@@Base+0x414>
   2184c:	add	r3, pc, #0
   21850:	ldr	pc, [r3, lr, lsl #2]
   21854:	andeq	r1, r2, ip, lsl r9
   21858:	andeq	r1, r2, ip, lsl r9
   2185c:	andeq	r1, r2, ip, lsl r9
   21860:	andeq	r1, r2, r0, lsr r9
   21864:	andeq	r1, r2, ip, lsl r9
   21868:	andeq	r1, r2, r0, lsr r9
   2186c:	andeq	r1, r2, r0, lsr r9
   21870:	andeq	r1, r2, r0, lsr r9
   21874:	andeq	r1, r2, r0, lsr r9
   21878:	andeq	r1, r2, r0, lsr r9
   2187c:	andeq	r1, r2, r0, lsr r9
   21880:	andeq	r1, r2, r0, lsr r9
   21884:	andeq	r1, r2, r0, lsr r9
   21888:	andeq	r1, r2, r0, lsr r9
   2188c:	andeq	r1, r2, r0, lsr r9
   21890:	andeq	r1, r2, r0, lsr r9
   21894:	andeq	r1, r2, r0, lsr r9
   21898:	andeq	r1, r2, r0, lsr r9
   2189c:	andeq	r1, r2, r0, lsr r9
   218a0:	andeq	r1, r2, r0, lsr r9
   218a4:	andeq	r1, r2, r0, lsr r9
   218a8:	andeq	r1, r2, r0, lsr r9
   218ac:	andeq	r1, r2, r0, lsr r9
   218b0:	andeq	r1, r2, ip, lsl r9
   218b4:	andeq	r1, r2, r0, lsr r9
   218b8:	andeq	r1, r2, r0, lsr r9
   218bc:	andeq	r1, r2, r0, lsr r9
   218c0:	andeq	r1, r2, r0, lsr r9
   218c4:	andeq	r1, r2, r0, lsr r9
   218c8:	andeq	r1, r2, r0, lsr r9
   218cc:	andeq	r1, r2, r0, lsr r9
   218d0:	andeq	r1, r2, r0, lsr r9
   218d4:	andeq	r1, r2, r0, lsr r9
   218d8:	andeq	r1, r2, r0, lsr r9
   218dc:	andeq	r1, r2, r0, lsr r9
   218e0:	andeq	r1, r2, ip, lsl r9
   218e4:	andeq	r1, r2, r0, lsr r9
   218e8:	andeq	r1, r2, r0, lsr r9
   218ec:	andeq	r1, r2, r0, lsr r9
   218f0:	andeq	r1, r2, r0, lsr r9
   218f4:	andeq	r1, r2, r0, lsr r9
   218f8:	andeq	r1, r2, r0, lsr r9
   218fc:	andeq	r1, r2, r0, lsr r9
   21900:	andeq	r1, r2, r0, lsr r9
   21904:	andeq	r1, r2, r0, lsr r9
   21908:	andeq	r1, r2, r0, lsr r9
   2190c:	andeq	r1, r2, r0, lsr r9
   21910:	andeq	r1, r2, r0, lsr r9
   21914:	andeq	r1, r2, r0, lsr r9
   21918:	andeq	r1, r2, ip, lsl r9
   2191c:	mov	r0, r1
   21920:	pop	{fp, pc}
   21924:	cmp	ip, #93	; 0x5d
   21928:	cmpne	ip, #125	; 0x7d
   2192c:	beq	2191c <flatcc_json_parser_float@@Base+0x40c>
   21930:	mov	r3, #6
   21934:	pop	{fp, lr}
   21938:	b	20800 <flatcc_json_parser_set_error@@Base>
   2193c:	push	{r4, r5, r6, sl, fp, lr}
   21940:	add	fp, sp, #16
   21944:	mov	r6, r3
   21948:	mov	r4, r2
   2194c:	mov	r5, r0
   21950:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21954:	mov	r1, r0
   21958:	cmp	r0, r4
   2195c:	beq	219a0 <flatcc_json_parser_float@@Base+0x490>
   21960:	ldrb	r0, [r1]
   21964:	cmp	r0, #44	; 0x2c
   21968:	bne	219a8 <flatcc_json_parser_float@@Base+0x498>
   2196c:	add	r1, r1, #1
   21970:	mov	r0, r5
   21974:	mov	r2, r4
   21978:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   2197c:	mov	r1, r0
   21980:	cmp	r0, r4
   21984:	beq	219d0 <flatcc_json_parser_float@@Base+0x4c0>
   21988:	ldrb	r0, [r1]
   2198c:	cmp	r0, #93	; 0x5d
   21990:	bne	219ec <flatcc_json_parser_float@@Base+0x4dc>
   21994:	mov	r0, #0
   21998:	str	r0, [r6]
   2199c:	b	219bc <flatcc_json_parser_float@@Base+0x4ac>
   219a0:	mov	r0, #0
   219a4:	b	219f0 <flatcc_json_parser_float@@Base+0x4e0>
   219a8:	mov	r0, #0
   219ac:	str	r0, [r6]
   219b0:	ldrb	r0, [r1]
   219b4:	cmp	r0, #93	; 0x5d
   219b8:	bne	219d8 <flatcc_json_parser_float@@Base+0x4c8>
   219bc:	add	r1, r1, #1
   219c0:	mov	r0, r5
   219c4:	mov	r2, r4
   219c8:	pop	{r4, r5, r6, sl, fp, lr}
   219cc:	b	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   219d0:	mov	r0, #0
   219d4:	str	r0, [r6]
   219d8:	mov	r0, r5
   219dc:	mov	r2, r4
   219e0:	mov	r3, #9
   219e4:	pop	{r4, r5, r6, sl, fp, lr}
   219e8:	b	20800 <flatcc_json_parser_set_error@@Base>
   219ec:	mov	r0, #1
   219f0:	str	r0, [r6]
   219f4:	mov	r0, r1
   219f8:	pop	{r4, r5, r6, sl, fp, pc}
   219fc:	push	{r4, r5, r6, sl, fp, lr}
   21a00:	add	fp, sp, #16
   21a04:	mov	r6, r3
   21a08:	mov	r4, r2
   21a0c:	mov	r5, r0
   21a10:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21a14:	mov	r1, r0
   21a18:	cmp	r0, r4
   21a1c:	beq	21a60 <flatcc_json_parser_float@@Base+0x550>
   21a20:	ldrb	r0, [r1]
   21a24:	cmp	r0, #44	; 0x2c
   21a28:	bne	21a68 <flatcc_json_parser_float@@Base+0x558>
   21a2c:	add	r1, r1, #1
   21a30:	mov	r0, r5
   21a34:	mov	r2, r4
   21a38:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21a3c:	mov	r1, r0
   21a40:	cmp	r0, r4
   21a44:	beq	21a90 <flatcc_json_parser_float@@Base+0x580>
   21a48:	ldrb	r0, [r1]
   21a4c:	cmp	r0, #125	; 0x7d
   21a50:	bne	21aac <flatcc_json_parser_float@@Base+0x59c>
   21a54:	mov	r0, #0
   21a58:	str	r0, [r6]
   21a5c:	b	21a7c <flatcc_json_parser_float@@Base+0x56c>
   21a60:	mov	r0, #0
   21a64:	b	21ab0 <flatcc_json_parser_float@@Base+0x5a0>
   21a68:	mov	r0, #0
   21a6c:	str	r0, [r6]
   21a70:	ldrb	r0, [r1]
   21a74:	cmp	r0, #125	; 0x7d
   21a78:	bne	21a98 <flatcc_json_parser_float@@Base+0x588>
   21a7c:	add	r1, r1, #1
   21a80:	mov	r0, r5
   21a84:	mov	r2, r4
   21a88:	pop	{r4, r5, r6, sl, fp, lr}
   21a8c:	b	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   21a90:	mov	r0, #0
   21a94:	str	r0, [r6]
   21a98:	mov	r0, r5
   21a9c:	mov	r2, r4
   21aa0:	mov	r3, #10
   21aa4:	pop	{r4, r5, r6, sl, fp, lr}
   21aa8:	b	20800 <flatcc_json_parser_set_error@@Base>
   21aac:	mov	r0, #1
   21ab0:	str	r0, [r6]
   21ab4:	mov	r0, r1
   21ab8:	pop	{r4, r5, r6, sl, fp, pc}

00021abc <flatcc_json_parser_integer@@Base>:
   21abc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21ac0:	add	fp, sp, #24
   21ac4:	cmp	r1, r2
   21ac8:	moveq	r0, r1
   21acc:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   21ad0:	ldr	lr, [fp, #8]
   21ad4:	ldrb	r7, [r1]
   21ad8:	sub	r7, r7, #45	; 0x2d
   21adc:	clz	r7, r7
   21ae0:	lsr	r7, r7, #5
   21ae4:	str	r7, [r3]
   21ae8:	add	ip, r1, r7
   21aec:	mov	r4, #0
   21af0:	cmp	ip, r2
   21af4:	beq	21b8c <flatcc_json_parser_integer@@Base+0xd0>
   21af8:	mov	r8, #10
   21afc:	mov	r9, #0
   21b00:	ldrb	r5, [ip]
   21b04:	sub	r7, r5, #48	; 0x30
   21b08:	uxtb	r7, r7
   21b0c:	cmp	r7, #9
   21b10:	bhi	21bb0 <flatcc_json_parser_integer@@Base+0xf4>
   21b14:	add	r7, r9, r9, lsl #2
   21b18:	lsl	r6, r7, #1
   21b1c:	umlal	r5, r6, r4, r8
   21b20:	subs	r7, r5, #48	; 0x30
   21b24:	sbc	r5, r6, #0
   21b28:	subs	r4, r7, r4
   21b2c:	sbcs	r4, r5, r9
   21b30:	bcc	21bc0 <flatcc_json_parser_integer@@Base+0x104>
   21b34:	add	ip, ip, #1
   21b38:	cmp	r2, ip
   21b3c:	mov	r4, r7
   21b40:	mov	r9, r5
   21b44:	bne	21b00 <flatcc_json_parser_integer@@Base+0x44>
   21b48:	mov	r3, #0
   21b4c:	mov	r4, r7
   21b50:	mov	r9, r5
   21b54:	cmp	ip, r1
   21b58:	beq	21b9c <flatcc_json_parser_integer@@Base+0xe0>
   21b5c:	cmp	r3, #0
   21b60:	beq	21ba4 <flatcc_json_parser_integer@@Base+0xe8>
   21b64:	ldrb	r1, [ip]
   21b68:	cmp	r1, #46	; 0x2e
   21b6c:	beq	21b7c <flatcc_json_parser_integer@@Base+0xc0>
   21b70:	cmp	r1, #101	; 0x65
   21b74:	cmpne	r1, #69	; 0x45
   21b78:	bne	21ba4 <flatcc_json_parser_integer@@Base+0xe8>
   21b7c:	mov	r1, ip
   21b80:	mov	r3, #12
   21b84:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   21b88:	b	20800 <flatcc_json_parser_set_error@@Base>
   21b8c:	mov	r9, #0
   21b90:	mov	r3, #0
   21b94:	cmp	ip, r1
   21b98:	bne	21b5c <flatcc_json_parser_integer@@Base+0xa0>
   21b9c:	mov	r0, ip
   21ba0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21ba4:	stm	lr, {r4, r9}
   21ba8:	mov	r0, ip
   21bac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21bb0:	mov	r3, #1
   21bb4:	cmp	ip, r1
   21bb8:	bne	21b5c <flatcc_json_parser_integer@@Base+0xa0>
   21bbc:	b	21b9c <flatcc_json_parser_integer@@Base+0xe0>
   21bc0:	mov	lr, #8
   21bc4:	cmp	r3, #0
   21bc8:	movweq	lr, #7
   21bcc:	mov	r1, ip
   21bd0:	mov	r3, lr
   21bd4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   21bd8:	b	20800 <flatcc_json_parser_set_error@@Base>

00021bdc <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   21bdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21be0:	add	fp, sp, #28
   21be4:	sub	sp, sp, #20
   21be8:	mov	r8, r3
   21bec:	mov	r4, r2
   21bf0:	mov	r5, r0
   21bf4:	bl	21698 <flatcc_json_parser_float@@Base+0x188>
   21bf8:	mov	r6, r0
   21bfc:	mov	r0, r5
   21c00:	mov	r1, r6
   21c04:	mov	r2, r4
   21c08:	bl	20838 <flatcc_json_parser_string_part@@Base>
   21c0c:	mov	r7, r0
   21c10:	ldr	sl, [fp, #8]
   21c14:	cmp	sl, #0
   21c18:	mov	r9, sl
   21c1c:	movwne	r9, #1
   21c20:	cmp	r0, r4
   21c24:	beq	21d1c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   21c28:	ldrb	r0, [r7]
   21c2c:	cmp	r0, #34	; 0x22
   21c30:	bne	21d1c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   21c34:	sub	r0, r7, r6
   21c38:	str	r0, [sp, #4]
   21c3c:	bl	21d48 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16c>
   21c40:	str	r0, [sp, #8]
   21c44:	ldr	r0, [r5]
   21c48:	mov	r1, #1
   21c4c:	mov	r2, #1
   21c50:	mvn	r3, #0
   21c54:	bl	1dd48 <flatcc_builder_start_vector@@Base>
   21c58:	cmp	r0, #0
   21c5c:	beq	21c7c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xa0>
   21c60:	mov	r0, #0
   21c64:	str	r0, [r8]
   21c68:	mov	r0, r5
   21c6c:	mov	r1, r7
   21c70:	mov	r2, r4
   21c74:	mov	r3, #33	; 0x21
   21c78:	b	21d3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x160>
   21c7c:	ldr	r0, [r5]
   21c80:	ldr	r1, [sp, #8]
   21c84:	bl	1d760 <flatcc_builder_extend_vector@@Base>
   21c88:	cmp	r0, #0
   21c8c:	beq	21c60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x84>
   21c90:	ldr	r1, [sp, #8]
   21c94:	str	r1, [sp, #16]
   21c98:	ldr	r1, [sp, #4]
   21c9c:	str	r1, [sp, #12]
   21ca0:	str	r9, [sp]
   21ca4:	add	r2, sp, #16
   21ca8:	add	r3, sp, #12
   21cac:	mov	r1, r6
   21cb0:	bl	21d74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x198>
   21cb4:	ldr	r1, [sp, #12]
   21cb8:	cmp	r0, #0
   21cbc:	bne	21d18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x13c>
   21cc0:	ldmib	sp, {r0, r2}
   21cc4:	cmp	r1, r0
   21cc8:	bne	21d18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x13c>
   21ccc:	ldr	r0, [sp, #16]
   21cd0:	cmp	r2, r0
   21cd4:	bls	21cec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x110>
   21cd8:	sub	r1, r2, r0
   21cdc:	ldr	r0, [r5]
   21ce0:	bl	1dba8 <flatcc_builder_truncate_vector@@Base>
   21ce4:	cmp	r0, #0
   21ce8:	bne	21c60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x84>
   21cec:	ldr	r0, [r5]
   21cf0:	bl	1e998 <flatcc_builder_end_vector@@Base>
   21cf4:	str	r0, [r8]
   21cf8:	cmp	r0, #0
   21cfc:	beq	21c60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x84>
   21d00:	mov	r0, r5
   21d04:	mov	r1, r7
   21d08:	mov	r2, r4
   21d0c:	bl	216b8 <flatcc_json_parser_float@@Base+0x1a8>
   21d10:	sub	sp, fp, #28
   21d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d18:	add	r7, r6, r1
   21d1c:	mov	r0, #0
   21d20:	str	r0, [r8]
   21d24:	mov	r3, #31
   21d28:	cmp	sl, #0
   21d2c:	movwne	r3, #32
   21d30:	mov	r0, r5
   21d34:	mov	r1, r7
   21d38:	mov	r2, r4
   21d3c:	bl	20800 <flatcc_json_parser_set_error@@Base>
   21d40:	sub	sp, fp, #28
   21d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d48:	and	r1, r0, #3
   21d4c:	lsr	r0, r0, #2
   21d50:	add	r0, r0, r0, lsl #1
   21d54:	cmp	r1, #2
   21d58:	beq	21d6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x190>
   21d5c:	cmp	r1, #3
   21d60:	addeq	r0, r0, #2
   21d64:	bxeq	lr
   21d68:	bx	lr
   21d6c:	add	r0, r0, #1
   21d70:	bx	lr
   21d74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d78:	add	fp, sp, #28
   21d7c:	sub	sp, sp, #4
   21d80:	ldr	r7, [fp, #8]
   21d84:	cmp	r3, #0
   21d88:	ldrne	lr, [r3]
   21d8c:	mvneq	lr, #0
   21d90:	and	r5, r7, #32
   21d94:	bic	r4, r7, #224	; 0xe0
   21d98:	cmp	r4, #1
   21d9c:	beq	21dc0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e4>
   21da0:	mov	ip, #3
   21da4:	cmp	r4, #0
   21da8:	bne	21df0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x214>
   21dac:	movw	r4, #23296	; 0x5b00
   21db0:	movt	r4, #2
   21db4:	movw	ip, #23808	; 0x5d00
   21db8:	movt	ip, #2
   21dbc:	b	21dd0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f4>
   21dc0:	movw	r4, #23552	; 0x5c00
   21dc4:	movt	r4, #2
   21dc8:	movw	ip, #24064	; 0x5e00
   21dcc:	movt	ip, #2
   21dd0:	cmp	r5, #0
   21dd4:	moveq	ip, r4
   21dd8:	cmp	r2, #0
   21ddc:	beq	21df8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x21c>
   21de0:	ldr	r9, [r2]
   21de4:	cmp	r9, #0
   21de8:	mvneq	r9, #0
   21dec:	b	21dfc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x220>
   21df0:	mov	r8, r0
   21df4:	b	21f6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x390>
   21df8:	mvn	r9, #0
   21dfc:	mov	r6, sp
   21e00:	mov	r8, r0
   21e04:	mov	r7, #0
   21e08:	mov	r5, lr
   21e0c:	cmp	r5, r7
   21e10:	beq	21e9c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c0>
   21e14:	ldrb	r4, [r1, r7]
   21e18:	ldrb	r4, [ip, r4]
   21e1c:	strb	r4, [r6, r7]
   21e20:	cmp	r4, #64	; 0x40
   21e24:	bcc	21e3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x260>
   21e28:	cmp	r4, #65	; 0x41
   21e2c:	bne	21ee4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x308>
   21e30:	sub	r7, r7, #1
   21e34:	sub	r5, r5, #1
   21e38:	add	r1, r1, #1
   21e3c:	add	r7, r7, #1
   21e40:	cmp	r7, #4
   21e44:	bcc	21e0c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   21e48:	cmp	r9, #3
   21e4c:	bcc	21f94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   21e50:	ldrb	lr, [sp]
   21e54:	ldrb	r4, [sp, #1]
   21e58:	lsr	r7, r4, #4
   21e5c:	orr	r7, r7, lr, lsl #2
   21e60:	strb	r7, [r8]
   21e64:	ldrb	r7, [sp, #2]
   21e68:	lsr	r7, r7, #2
   21e6c:	orr	r7, r7, r4, lsl #4
   21e70:	strb	r7, [r8, #1]
   21e74:	ldrb	r7, [sp, #2]
   21e78:	ldrb	r4, [sp, #3]
   21e7c:	orr	r7, r4, r7, lsl #6
   21e80:	strb	r7, [r8, #2]
   21e84:	sub	lr, r5, #4
   21e88:	subs	r9, r9, #3
   21e8c:	add	r1, r1, #4
   21e90:	add	r8, r8, #3
   21e94:	bne	21e04 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x228>
   21e98:	b	21f68 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x38c>
   21e9c:	mov	r4, r7
   21ea0:	cmp	r7, #0
   21ea4:	beq	21f64 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x388>
   21ea8:	cmp	r7, #3
   21eac:	beq	21f24 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x348>
   21eb0:	mov	ip, #4
   21eb4:	cmp	r7, #2
   21eb8:	bne	21f6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x390>
   21ebc:	ldrb	r1, [sp, #1]
   21ec0:	ands	r7, r1, #15
   21ec4:	mov	ip, #1
   21ec8:	movwne	ip, #5
   21ecc:	bne	21f6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x390>
   21ed0:	ldrb	r7, [sp]
   21ed4:	lsl	r7, r7, #2
   21ed8:	orr	r1, r7, r1, lsr #4
   21edc:	strb	r1, [r8], #1
   21ee0:	b	21f64 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x388>
   21ee4:	cmp	r4, #66	; 0x42
   21ee8:	mov	r4, r7
   21eec:	bne	21ea0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   21ef0:	add	r6, r7, #1
   21ef4:	mov	r4, r6
   21ef8:	cmp	r6, r5
   21efc:	bcs	21ea0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   21f00:	cmp	r4, #7
   21f04:	ldrbls	r6, [r1, r4]
   21f08:	ldrbls	r6, [ip, r6]
   21f0c:	subls	r6, r6, #65	; 0x41
   21f10:	uxtbls	sl, r6
   21f14:	addls	r6, r4, #1
   21f18:	cmpls	sl, #2
   21f1c:	bcc	21ef4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x318>
   21f20:	b	21ea0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c4>
   21f24:	mov	ip, #5
   21f28:	ldrb	r1, [sp, #2]
   21f2c:	tst	r1, #3
   21f30:	bne	21f6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x390>
   21f34:	mov	ip, #1
   21f38:	cmp	r9, #2
   21f3c:	bcc	21f6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x390>
   21f40:	ldrb	ip, [sp]
   21f44:	ldrb	r6, [sp, #1]
   21f48:	lsl	r7, r6, #4
   21f4c:	orr	r1, r7, r1, lsr #2
   21f50:	strb	r1, [r8, #1]
   21f54:	lsr	r1, r6, #4
   21f58:	orr	r1, r1, ip, lsl #2
   21f5c:	strb	r1, [r8]
   21f60:	add	r8, r8, #2
   21f64:	sub	lr, r5, r4
   21f68:	mov	ip, #0
   21f6c:	cmp	r2, #0
   21f70:	subne	r0, r8, r0
   21f74:	strne	r0, [r2]
   21f78:	cmp	r3, #0
   21f7c:	ldrne	r0, [r3]
   21f80:	subne	r0, r0, lr
   21f84:	strne	r0, [r3]
   21f88:	mov	r0, ip
   21f8c:	sub	sp, fp, #28
   21f90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f94:	mov	ip, #1
   21f98:	b	21f6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x390>

00021f9c <flatcc_json_parser_build_string@@Base>:
   21f9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21fa0:	add	fp, sp, #28
   21fa4:	sub	sp, sp, #4
   21fa8:	mov	r9, r3
   21fac:	mov	sl, r2
   21fb0:	mov	r6, r0
   21fb4:	bl	21698 <flatcc_json_parser_float@@Base+0x188>
   21fb8:	mov	r4, r0
   21fbc:	mov	r0, r6
   21fc0:	mov	r1, r4
   21fc4:	mov	r2, sl
   21fc8:	bl	20838 <flatcc_json_parser_string_part@@Base>
   21fcc:	mov	r5, r0
   21fd0:	cmp	r0, sl
   21fd4:	beq	21ff8 <flatcc_json_parser_build_string@@Base+0x5c>
   21fd8:	ldrb	r0, [r5]
   21fdc:	cmp	r0, #34	; 0x22
   21fe0:	bne	21ff8 <flatcc_json_parser_build_string@@Base+0x5c>
   21fe4:	sub	r2, r5, r4
   21fe8:	ldr	r0, [r6]
   21fec:	mov	r1, r4
   21ff0:	bl	1f474 <flatcc_builder_create_string@@Base>
   21ff4:	b	220bc <flatcc_json_parser_build_string@@Base+0x120>
   21ff8:	ldr	r0, [r6]
   21ffc:	bl	1def0 <flatcc_builder_start_string@@Base>
   22000:	cmp	r0, #0
   22004:	beq	22014 <flatcc_json_parser_build_string@@Base+0x78>
   22008:	mov	r0, #0
   2200c:	str	r0, [r9]
   22010:	b	220d4 <flatcc_json_parser_build_string@@Base+0x138>
   22014:	sub	r2, r5, r4
   22018:	ldr	r0, [r6]
   2201c:	mov	r1, r4
   22020:	bl	1daac <flatcc_builder_append_string@@Base>
   22024:	cmp	r0, #0
   22028:	beq	22008 <flatcc_json_parser_build_string@@Base+0x6c>
   2202c:	cmp	r5, sl
   22030:	beq	220b4 <flatcc_json_parser_build_string@@Base+0x118>
   22034:	mov	r8, sp
   22038:	add	r4, r8, #1
   2203c:	ldrb	r0, [r5]
   22040:	cmp	r0, #34	; 0x22
   22044:	beq	220b4 <flatcc_json_parser_build_string@@Base+0x118>
   22048:	mov	r0, r6
   2204c:	mov	r1, r5
   22050:	mov	r2, sl
   22054:	mov	r3, r8
   22058:	bl	20980 <flatcc_json_parser_string_escape@@Base>
   2205c:	mov	r7, r0
   22060:	ldr	r0, [r6]
   22064:	ldrb	r2, [sp]
   22068:	mov	r1, r4
   2206c:	bl	1daac <flatcc_builder_append_string@@Base>
   22070:	cmp	r0, #0
   22074:	beq	220e0 <flatcc_json_parser_build_string@@Base+0x144>
   22078:	mov	r0, r6
   2207c:	mov	r1, r7
   22080:	mov	r2, sl
   22084:	bl	20838 <flatcc_json_parser_string_part@@Base>
   22088:	mov	r5, r0
   2208c:	cmp	r0, sl
   22090:	beq	220ac <flatcc_json_parser_build_string@@Base+0x110>
   22094:	sub	r2, r5, r7
   22098:	ldr	r0, [r6]
   2209c:	mov	r1, r7
   220a0:	bl	1daac <flatcc_builder_append_string@@Base>
   220a4:	cmp	r0, #0
   220a8:	beq	22008 <flatcc_json_parser_build_string@@Base+0x6c>
   220ac:	cmp	r5, sl
   220b0:	bne	2203c <flatcc_json_parser_build_string@@Base+0xa0>
   220b4:	ldr	r0, [r6]
   220b8:	bl	1f58c <flatcc_builder_end_string@@Base>
   220bc:	str	r0, [r9]
   220c0:	mov	r0, r6
   220c4:	mov	r1, r5
   220c8:	mov	r2, sl
   220cc:	bl	216b8 <flatcc_json_parser_float@@Base+0x1a8>
   220d0:	mov	r5, r0
   220d4:	mov	r0, r5
   220d8:	sub	sp, fp, #28
   220dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   220e0:	mov	r5, r7
   220e4:	b	22008 <flatcc_json_parser_build_string@@Base+0x6c>

000220e8 <flatcc_json_parser_prepare_unions@@Base>:
   220e8:	push	{r4, r5, r6, r7, fp, lr}
   220ec:	add	fp, sp, #16
   220f0:	mov	r5, r3
   220f4:	mov	r6, r2
   220f8:	mov	r4, r1
   220fc:	mov	r7, r0
   22100:	add	r0, r3, r3, lsl #1
   22104:	mov	r1, #8
   22108:	add	r1, r1, r0, lsl #3
   2210c:	ldr	r0, [r7]
   22110:	bl	1cd00 <flatcc_builder_enter_user_frame@@Base>
   22114:	mov	r1, r0
   22118:	ldr	r0, [fp, #8]
   2211c:	str	r1, [r0]
   22120:	cmp	r1, #0
   22124:	beq	2213c <flatcc_json_parser_prepare_unions@@Base+0x54>
   22128:	ldr	r0, [r7]
   2212c:	bl	1ce08 <flatcc_builder_get_user_frame_ptr@@Base>
   22130:	str	r5, [r0]
   22134:	mov	r0, r4
   22138:	pop	{r4, r5, r6, r7, fp, pc}
   2213c:	mov	r0, r7
   22140:	mov	r1, r4
   22144:	mov	r2, r6
   22148:	mov	r3, #33	; 0x21
   2214c:	pop	{r4, r5, r6, r7, fp, lr}
   22150:	b	20800 <flatcc_json_parser_set_error@@Base>

00022154 <flatcc_json_parser_finalize_unions@@Base>:
   22154:	push	{r4, r5, r6, r7, fp, lr}
   22158:	add	fp, sp, #16
   2215c:	mov	r4, r3
   22160:	mov	r7, r2
   22164:	mov	r5, r1
   22168:	mov	r6, r0
   2216c:	ldr	r0, [r0]
   22170:	mov	r1, r3
   22174:	bl	1ce08 <flatcc_builder_get_user_frame_ptr@@Base>
   22178:	ldr	r0, [r0, #4]
   2217c:	cmp	r0, #0
   22180:	beq	2219c <flatcc_json_parser_finalize_unions@@Base+0x48>
   22184:	mov	r0, r6
   22188:	mov	r1, r5
   2218c:	mov	r2, r7
   22190:	mov	r3, #27
   22194:	bl	20800 <flatcc_json_parser_set_error@@Base>
   22198:	mov	r5, r0
   2219c:	ldr	r0, [r6]
   221a0:	mov	r1, r4
   221a4:	bl	1cdc4 <flatcc_builder_exit_user_frame_at@@Base>
   221a8:	mov	r0, r5
   221ac:	pop	{r4, r5, r6, r7, fp, pc}

000221b0 <flatcc_json_parser_union@@Base>:
   221b0:	push	{r4, r5, r6, r7, fp, lr}
   221b4:	add	fp, sp, #16
   221b8:	sub	sp, sp, #16
   221bc:	mov	r7, r3
   221c0:	mov	r4, r2
   221c4:	mov	r6, r1
   221c8:	mov	r5, r0
   221cc:	ldr	r0, [r0]
   221d0:	ldr	r1, [fp, #12]
   221d4:	bl	1ce08 <flatcc_builder_get_user_frame_ptr@@Base>
   221d8:	add	r2, r0, #8
   221dc:	add	r3, r7, r7, lsl #1
   221e0:	mov	r1, r2
   221e4:	ldr	r7, [r1, r3, lsl #3]!
   221e8:	cmp	r7, #0
   221ec:	beq	22214 <flatcc_json_parser_union@@Base+0x64>
   221f0:	mov	r0, r5
   221f4:	mov	r1, r6
   221f8:	mov	r2, r4
   221fc:	mov	r3, #28
   22200:	bl	20800 <flatcc_json_parser_set_error@@Base>
   22204:	mov	r6, r0
   22208:	mov	r0, r6
   2220c:	sub	sp, fp, #16
   22210:	pop	{r4, r5, r6, r7, fp, pc}
   22214:	add	r2, r2, r3, lsl #3
   22218:	ldrb	r3, [r2, #12]
   2221c:	cmp	r3, #0
   22220:	beq	2228c <flatcc_json_parser_union@@Base+0xdc>
   22224:	ldrb	r3, [r2, #13]
   22228:	strb	r3, [sp, #8]
   2222c:	cmp	r3, #0
   22230:	beq	222c0 <flatcc_json_parser_union@@Base+0x110>
   22234:	ldr	r7, [fp, #16]
   22238:	ldr	r1, [r0, #4]
   2223c:	sub	r1, r1, #1
   22240:	str	r1, [r0, #4]
   22244:	add	r0, sp, #8
   22248:	add	r0, r0, #4
   2224c:	str	r0, [sp]
   22250:	mov	r0, r5
   22254:	mov	r1, r6
   22258:	mov	r2, r4
   2225c:	blx	r7
   22260:	mov	r6, r0
   22264:	cmp	r0, r4
   22268:	beq	22208 <flatcc_json_parser_union@@Base+0x58>
   2226c:	ldr	r1, [fp, #8]
   22270:	ldr	r0, [r5]
   22274:	ldr	r2, [sp, #8]
   22278:	ldr	r3, [sp, #12]
   2227c:	bl	1ec60 <flatcc_builder_table_add_union@@Base>
   22280:	cmp	r0, #0
   22284:	bne	221f0 <flatcc_json_parser_union@@Base+0x40>
   22288:	b	22208 <flatcc_json_parser_union@@Base+0x58>
   2228c:	ldr	r3, [r0, #4]
   22290:	add	r3, r3, #1
   22294:	str	r3, [r0, #4]
   22298:	ldr	r0, [r5, #16]
   2229c:	str	r0, [r2, #8]
   222a0:	ldr	r0, [r5, #4]
   222a4:	str	r0, [r2, #4]
   222a8:	str	r6, [r1]
   222ac:	mov	r0, r5
   222b0:	mov	r1, r6
   222b4:	mov	r2, r4
   222b8:	bl	21124 <flatcc_json_parser_generic_json@@Base>
   222bc:	b	22204 <flatcc_json_parser_union@@Base+0x54>
   222c0:	mov	r0, r5
   222c4:	mov	r1, r6
   222c8:	mov	r2, r4
   222cc:	mov	r3, #25
   222d0:	b	22200 <flatcc_json_parser_union@@Base+0x50>

000222d4 <flatcc_json_parser_union_type@@Base>:
   222d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   222d8:	add	fp, sp, #28
   222dc:	sub	sp, sp, #20
   222e0:	mov	r6, r3
   222e4:	mov	r7, r2
   222e8:	mov	r4, r1
   222ec:	mov	r5, r0
   222f0:	ldr	r0, [r0]
   222f4:	ldr	r1, [fp, #12]
   222f8:	bl	1ce08 <flatcc_builder_get_user_frame_ptr@@Base>
   222fc:	mov	sl, r0
   22300:	add	r8, r0, #8
   22304:	add	r9, r6, r6, lsl #1
   22308:	add	r6, r8, r9, lsl #3
   2230c:	mov	r0, r6
   22310:	ldrb	r1, [r0, #12]!
   22314:	cmp	r1, #0
   22318:	beq	22340 <flatcc_json_parser_union_type@@Base+0x6c>
   2231c:	mov	r0, r5
   22320:	mov	r1, r4
   22324:	mov	r2, r7
   22328:	mov	r3, #28
   2232c:	bl	20800 <flatcc_json_parser_set_error@@Base>
   22330:	mov	r7, r0
   22334:	mov	r0, r7
   22338:	sub	sp, fp, #28
   2233c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22340:	mov	r1, #1
   22344:	strb	r1, [r0]
   22348:	add	r3, r6, #13
   2234c:	mov	r0, r5
   22350:	mov	r1, r4
   22354:	mov	r2, r7
   22358:	str	r3, [sp, #8]
   2235c:	bl	2247c <flatcc_json_parser_union_type@@Base+0x1a8>
   22360:	mov	r2, r7
   22364:	mov	r7, r0
   22368:	cmp	r0, r4
   2236c:	str	r2, [sp, #4]
   22370:	beq	2237c <flatcc_json_parser_union_type@@Base+0xa8>
   22374:	ldr	r4, [sp, #8]
   22378:	b	2239c <flatcc_json_parser_union_type@@Base+0xc8>
   2237c:	ldr	r3, [fp, #16]
   22380:	ldr	r0, [sp, #8]
   22384:	mov	r4, r0
   22388:	str	r0, [sp]
   2238c:	mov	r0, r5
   22390:	mov	r1, r7
   22394:	bl	2250c <flatcc_json_parser_union_type@@Base+0x238>
   22398:	mov	r7, r0
   2239c:	ldr	r1, [r8, r9, lsl #3]
   223a0:	cmp	r1, #0
   223a4:	beq	22430 <flatcc_json_parser_union_type@@Base+0x15c>
   223a8:	ldr	r0, [sl, #4]
   223ac:	cmp	r0, #0
   223b0:	beq	2245c <flatcc_json_parser_union_type@@Base+0x188>
   223b4:	ldr	ip, [fp, #20]
   223b8:	sub	r0, r0, #1
   223bc:	str	r0, [sl, #4]
   223c0:	ldr	r0, [r6, #8]
   223c4:	ldr	r9, [r5, #4]
   223c8:	ldr	r8, [r5, #16]
   223cc:	str	r0, [r5, #16]
   223d0:	ldr	r0, [r6, #4]
   223d4:	str	r0, [r5, #4]
   223d8:	ldrb	r3, [r4]
   223dc:	strb	r3, [sp, #12]
   223e0:	add	r0, sp, #12
   223e4:	add	r0, r0, #4
   223e8:	str	r0, [sp]
   223ec:	mov	r0, r5
   223f0:	ldr	r6, [sp, #4]
   223f4:	mov	r2, r6
   223f8:	blx	ip
   223fc:	cmp	r0, r6
   22400:	beq	22448 <flatcc_json_parser_union_type@@Base+0x174>
   22404:	ldr	r1, [fp, #8]
   22408:	ldr	r0, [r5]
   2240c:	ldr	r2, [sp, #12]
   22410:	ldr	r3, [sp, #16]
   22414:	bl	1ec60 <flatcc_builder_table_add_union@@Base>
   22418:	cmp	r0, #0
   2241c:	beq	22450 <flatcc_json_parser_union_type@@Base+0x17c>
   22420:	mov	r0, r5
   22424:	mov	r1, r7
   22428:	ldr	r2, [sp, #4]
   2242c:	b	22328 <flatcc_json_parser_union_type@@Base+0x54>
   22430:	ldrb	r0, [r4]
   22434:	ldr	r1, [sl, #4]
   22438:	cmp	r0, #0
   2243c:	addne	r1, r1, #1
   22440:	str	r1, [sl, #4]
   22444:	b	22334 <flatcc_json_parser_union_type@@Base+0x60>
   22448:	mov	r7, r6
   2244c:	b	22334 <flatcc_json_parser_union_type@@Base+0x60>
   22450:	str	r9, [r5, #4]
   22454:	str	r8, [r5, #16]
   22458:	b	22334 <flatcc_json_parser_union_type@@Base+0x60>
   2245c:	movw	r0, #25293	; 0x62cd
   22460:	movt	r0, #2
   22464:	movw	r1, #25308	; 0x62dc
   22468:	movt	r1, #2
   2246c:	movw	r3, #25382	; 0x6326
   22470:	movt	r3, #2
   22474:	movw	r2, #965	; 0x3c5
   22478:	bl	12bc4 <__assert_fail@plt>
   2247c:	push	{r4, r5, r6, r7, fp, lr}
   22480:	add	fp, sp, #16
   22484:	sub	sp, sp, #24
   22488:	mov	r7, r1
   2248c:	mov	r6, r0
   22490:	mov	r0, #0
   22494:	str	r0, [sp, #20]
   22498:	str	r0, [sp, #16]
   2249c:	str	r0, [sp, #12]
   224a0:	strb	r0, [r3]
   224a4:	cmp	r1, r2
   224a8:	beq	22500 <flatcc_json_parser_union_type@@Base+0x22c>
   224ac:	mov	r5, r3
   224b0:	mov	r4, r2
   224b4:	add	r0, sp, #16
   224b8:	str	r0, [sp]
   224bc:	add	r3, sp, #12
   224c0:	mov	r0, r6
   224c4:	mov	r1, r7
   224c8:	bl	21abc <flatcc_json_parser_integer@@Base>
   224cc:	mov	r1, r0
   224d0:	cmp	r0, r7
   224d4:	beq	224fc <flatcc_json_parser_union_type@@Base+0x228>
   224d8:	ldr	r3, [sp, #12]
   224dc:	ldr	r0, [sp, #16]
   224e0:	ldr	r2, [sp, #20]
   224e4:	stm	sp, {r0, r2, r5}
   224e8:	mov	r0, r6
   224ec:	mov	r2, r4
   224f0:	bl	23708 <flatcc_json_parser_struct_as_root@@Base+0x9d4>
   224f4:	mov	r7, r0
   224f8:	b	22500 <flatcc_json_parser_union_type@@Base+0x22c>
   224fc:	mov	r7, r1
   22500:	mov	r0, r7
   22504:	sub	sp, fp, #16
   22508:	pop	{r4, r5, r6, r7, fp, pc}
   2250c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22510:	add	fp, sp, #28
   22514:	sub	sp, sp, #44	; 0x2c
   22518:	mov	r4, r3
   2251c:	mov	r7, r2
   22520:	mov	r5, r0
   22524:	mov	sl, #0
   22528:	strb	sl, [fp, #-29]	; 0xffffffe3
   2252c:	ldr	r0, [fp, #8]
   22530:	strb	sl, [r0]
   22534:	mov	r0, r5
   22538:	bl	23750 <flatcc_json_parser_struct_as_root@@Base+0xa1c>
   2253c:	mov	r6, r0
   22540:	cmp	r0, r7
   22544:	beq	22624 <flatcc_json_parser_union_type@@Base+0x350>
   22548:	add	r0, r4, #4
   2254c:	add	r9, sp, #32
   22550:	add	r8, sp, #28
   22554:	str	r0, [sp, #16]
   22558:	str	sl, [sp, #20]
   2255c:	mov	sl, r0
   22560:	ldr	r4, [sl, #-4]
   22564:	str	r9, [sp]
   22568:	add	r0, sp, #24
   2256c:	str	r0, [sp, #4]
   22570:	mov	r0, r5
   22574:	mov	r1, r6
   22578:	mov	r2, r7
   2257c:	mov	r3, r8
   22580:	blx	r4
   22584:	mov	r4, r0
   22588:	cmp	r0, r7
   2258c:	beq	22644 <flatcc_json_parser_union_type@@Base+0x370>
   22590:	cmp	r4, r6
   22594:	bne	225ac <flatcc_json_parser_union_type@@Base+0x2d8>
   22598:	ldr	r0, [sl], #4
   2259c:	cmp	r0, #0
   225a0:	mov	r6, r4
   225a4:	bne	22560 <flatcc_json_parser_union_type@@Base+0x28c>
   225a8:	b	2262c <flatcc_json_parser_union_type@@Base+0x358>
   225ac:	ldr	sl, [sp, #20]
   225b0:	cmp	sl, #0
   225b4:	ldrne	r0, [r5, #12]
   225b8:	cmpne	r0, #0
   225bc:	bne	22658 <flatcc_json_parser_union_type@@Base+0x384>
   225c0:	ldr	r3, [sp, #28]
   225c4:	ldr	r0, [sp, #32]
   225c8:	ldr	r1, [sp, #36]	; 0x24
   225cc:	stm	sp, {r0, r1}
   225d0:	sub	r0, fp, #29
   225d4:	str	r0, [sp, #8]
   225d8:	mov	r0, r5
   225dc:	mov	r1, r4
   225e0:	mov	r2, r7
   225e4:	bl	23708 <flatcc_json_parser_struct_as_root@@Base+0x9d4>
   225e8:	cmp	r0, r7
   225ec:	beq	22650 <flatcc_json_parser_union_type@@Base+0x37c>
   225f0:	add	sl, sl, #1
   225f4:	ldr	r0, [fp, #8]
   225f8:	mov	r2, r0
   225fc:	ldrb	r0, [r0]
   22600:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   22604:	add	r0, r0, r1
   22608:	strb	r0, [r2]
   2260c:	ldr	r0, [sp, #24]
   22610:	cmp	r0, #0
   22614:	mov	r6, r4
   22618:	ldr	r0, [sp, #16]
   2261c:	bne	22558 <flatcc_json_parser_union_type@@Base+0x284>
   22620:	b	22644 <flatcc_json_parser_union_type@@Base+0x370>
   22624:	mov	r4, r6
   22628:	b	22644 <flatcc_json_parser_union_type@@Base+0x370>
   2262c:	mov	r0, r5
   22630:	mov	r1, r4
   22634:	mov	r2, r7
   22638:	mov	r3, #23
   2263c:	bl	20800 <flatcc_json_parser_set_error@@Base>
   22640:	mov	r4, r0
   22644:	mov	r0, r4
   22648:	sub	sp, fp, #28
   2264c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22650:	mov	r4, r7
   22654:	b	22644 <flatcc_json_parser_union_type@@Base+0x370>
   22658:	mov	r0, r5
   2265c:	mov	r1, r4
   22660:	mov	r2, r7
   22664:	mov	r3, #14
   22668:	b	2263c <flatcc_json_parser_union_type@@Base+0x368>

0002266c <flatcc_json_parser_union_vector@@Base>:
   2266c:	push	{r4, r5, r6, r7, fp, lr}
   22670:	add	fp, sp, #16
   22674:	sub	sp, sp, #16
   22678:	mov	r7, r3
   2267c:	mov	r4, r2
   22680:	mov	r5, r1
   22684:	mov	r6, r0
   22688:	ldr	r0, [r0]
   2268c:	ldr	r1, [fp, #12]
   22690:	bl	1ce08 <flatcc_builder_get_user_frame_ptr@@Base>
   22694:	add	r2, r0, #8
   22698:	add	r3, r7, r7, lsl #1
   2269c:	mov	r1, r2
   226a0:	ldr	r7, [r1, r3, lsl #3]!
   226a4:	cmp	r7, #0
   226a8:	beq	226c8 <flatcc_json_parser_union_vector@@Base+0x5c>
   226ac:	mov	r0, r6
   226b0:	mov	r1, r5
   226b4:	mov	r2, r4
   226b8:	mov	r3, #28
   226bc:	sub	sp, fp, #16
   226c0:	pop	{r4, r5, r6, r7, fp, lr}
   226c4:	b	20800 <flatcc_json_parser_set_error@@Base>
   226c8:	add	r2, r2, r3, lsl #3
   226cc:	ldrb	r7, [r2, #12]
   226d0:	ldr	r3, [r0, #4]
   226d4:	cmp	r7, #0
   226d8:	beq	22714 <flatcc_json_parser_union_vector@@Base+0xa8>
   226dc:	ldr	r1, [fp, #16]
   226e0:	ldr	r7, [fp, #8]
   226e4:	sub	r3, r3, #1
   226e8:	str	r3, [r0, #4]
   226ec:	ldr	r0, [r2, #16]
   226f0:	ldr	r3, [r2, #20]
   226f4:	stm	sp, {r0, r7}
   226f8:	str	r1, [sp, #8]
   226fc:	mov	r0, r6
   22700:	mov	r1, r5
   22704:	mov	r2, r4
   22708:	bl	22748 <flatcc_json_parser_union_vector@@Base+0xdc>
   2270c:	sub	sp, fp, #16
   22710:	pop	{r4, r5, r6, r7, fp, pc}
   22714:	add	r3, r3, #1
   22718:	str	r3, [r0, #4]
   2271c:	ldr	r0, [r6, #16]
   22720:	str	r0, [r2, #8]
   22724:	ldr	r0, [r6, #4]
   22728:	str	r0, [r2, #4]
   2272c:	str	r5, [r1]
   22730:	mov	r0, r6
   22734:	mov	r1, r5
   22738:	mov	r2, r4
   2273c:	sub	sp, fp, #16
   22740:	pop	{r4, r5, r6, r7, fp, lr}
   22744:	b	21124 <flatcc_json_parser_generic_json@@Base>
   22748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2274c:	add	fp, sp, #28
   22750:	sub	sp, sp, #12
   22754:	mov	r7, r3
   22758:	mov	r5, r2
   2275c:	mov	r4, r1
   22760:	mov	r6, r0
   22764:	mov	r0, #0
   22768:	str	r0, [sp, #8]
   2276c:	ldr	r0, [r6]
   22770:	bl	1ddd8 <flatcc_builder_start_offset_vector@@Base>
   22774:	cmp	r0, #0
   22778:	beq	227a0 <flatcc_json_parser_union_vector@@Base+0x134>
   2277c:	mov	r0, r6
   22780:	mov	r1, r4
   22784:	mov	r2, r5
   22788:	mov	r3, #33	; 0x21
   2278c:	bl	20800 <flatcc_json_parser_set_error@@Base>
   22790:	mov	r4, r0
   22794:	mov	r0, r4
   22798:	sub	sp, fp, #28
   2279c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   227a0:	ldr	r8, [fp, #8]
   227a4:	add	r3, sp, #4
   227a8:	mov	r0, r6
   227ac:	mov	r1, r4
   227b0:	mov	r2, r5
   227b4:	bl	22b98 <flatcc_json_parser_union_type_vector@@Base+0x2d0>
   227b8:	mov	r4, r0
   227bc:	clz	r0, r8
   227c0:	lsr	r0, r0, #5
   227c4:	ldr	r1, [sp, #4]
   227c8:	cmp	r1, #0
   227cc:	beq	22868 <flatcc_json_parser_union_vector@@Base+0x1fc>
   227d0:	sub	sl, r8, #1
   227d4:	mov	r9, #0
   227d8:	add	r8, sp, #8
   227dc:	tst	r0, #1
   227e0:	bne	228b4 <flatcc_json_parser_union_vector@@Base+0x248>
   227e4:	ldr	r0, [r6]
   227e8:	mov	r1, r7
   227ec:	bl	1ce08 <flatcc_builder_get_user_frame_ptr@@Base>
   227f0:	ldrb	r3, [r0, r9]
   227f4:	str	r8, [sp]
   227f8:	mov	r0, r6
   227fc:	mov	r1, r4
   22800:	mov	r2, r5
   22804:	ldr	r4, [fp, #16]
   22808:	blx	r4
   2280c:	mov	r4, r0
   22810:	cmp	r0, r5
   22814:	beq	22794 <flatcc_json_parser_union_vector@@Base+0x128>
   22818:	ldr	r0, [r6]
   2281c:	mov	r1, #1
   22820:	bl	1d924 <flatcc_builder_extend_offset_vector@@Base>
   22824:	cmp	r0, #0
   22828:	beq	2277c <flatcc_json_parser_union_vector@@Base+0x110>
   2282c:	ldr	r1, [sp, #8]
   22830:	str	r1, [r0]
   22834:	mov	r0, r6
   22838:	mov	r1, r4
   2283c:	mov	r2, r5
   22840:	add	r3, sp, #4
   22844:	bl	2193c <flatcc_json_parser_float@@Base+0x42c>
   22848:	mov	r4, r0
   2284c:	sub	r0, sl, r9
   22850:	clz	r0, r0
   22854:	lsr	r0, r0, #5
   22858:	add	r9, r9, #1
   2285c:	ldr	r1, [sp, #4]
   22860:	cmp	r1, #0
   22864:	bne	227dc <flatcc_json_parser_union_vector@@Base+0x170>
   22868:	cmp	r0, #0
   2286c:	beq	228b4 <flatcc_json_parser_union_vector@@Base+0x248>
   22870:	ldr	r0, [r6]
   22874:	mov	r1, r7
   22878:	bl	1ce08 <flatcc_builder_get_user_frame_ptr@@Base>
   2287c:	mov	r1, r0
   22880:	ldr	r0, [r6]
   22884:	bl	1ebe4 <flatcc_builder_end_offset_vector_for_unions@@Base>
   22888:	str	r0, [sp, #8]
   2288c:	cmp	r0, #0
   22890:	beq	2277c <flatcc_json_parser_union_vector@@Base+0x110>
   22894:	ldr	r1, [fp, #12]
   22898:	ldr	r0, [r6]
   2289c:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   228a0:	cmp	r0, #0
   228a4:	beq	2277c <flatcc_json_parser_union_vector@@Base+0x110>
   228a8:	ldr	r1, [sp, #8]
   228ac:	str	r1, [r0]
   228b0:	b	22794 <flatcc_json_parser_union_vector@@Base+0x128>
   228b4:	mov	r0, r6
   228b8:	mov	r1, r4
   228bc:	mov	r2, r5
   228c0:	mov	r3, #30
   228c4:	b	2278c <flatcc_json_parser_union_vector@@Base+0x120>

000228c8 <flatcc_json_parser_union_type_vector@@Base>:
   228c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   228cc:	add	fp, sp, #28
   228d0:	sub	sp, sp, #28
   228d4:	mov	r6, r3
   228d8:	mov	r9, r2
   228dc:	mov	r4, r1
   228e0:	mov	r5, r0
   228e4:	ldr	r0, [r0]
   228e8:	ldr	r1, [fp, #12]
   228ec:	bl	1ce08 <flatcc_builder_get_user_frame_ptr@@Base>
   228f0:	add	r0, r0, #8
   228f4:	add	sl, r6, r6, lsl #1
   228f8:	add	r7, r0, sl, lsl #3
   228fc:	mov	r0, r7
   22900:	ldrb	r1, [r0, #12]!
   22904:	cmp	r1, #0
   22908:	beq	22920 <flatcc_json_parser_union_type_vector@@Base+0x58>
   2290c:	mov	r0, r5
   22910:	mov	r1, r4
   22914:	mov	r2, r9
   22918:	mov	r3, #28
   2291c:	b	22b40 <flatcc_json_parser_union_type_vector@@Base+0x278>
   22920:	mov	r1, #1
   22924:	strb	r1, [r0]
   22928:	ldr	r0, [r5]
   2292c:	mov	r1, #1
   22930:	mov	r2, #1
   22934:	mvn	r3, #0
   22938:	bl	1dd48 <flatcc_builder_start_vector@@Base>
   2293c:	cmp	r0, #0
   22940:	bne	22b30 <flatcc_json_parser_union_type_vector@@Base+0x268>
   22944:	add	r3, sp, #24
   22948:	mov	r0, r5
   2294c:	mov	r1, r4
   22950:	mov	r2, r9
   22954:	bl	22b98 <flatcc_json_parser_union_type_vector@@Base+0x2d0>
   22958:	mov	r4, r0
   2295c:	ldr	r0, [r5]
   22960:	ldr	r1, [sp, #24]
   22964:	cmp	r1, #0
   22968:	beq	22a38 <flatcc_json_parser_union_type_vector@@Base+0x170>
   2296c:	add	r6, sp, #23
   22970:	mov	r1, #1
   22974:	bl	1d760 <flatcc_builder_extend_vector@@Base>
   22978:	cmp	r0, #0
   2297c:	beq	22b30 <flatcc_json_parser_union_type_vector@@Base+0x268>
   22980:	mov	r8, r0
   22984:	mov	r0, r5
   22988:	mov	r1, r4
   2298c:	mov	r2, r9
   22990:	mov	r3, r6
   22994:	bl	2247c <flatcc_json_parser_union_type@@Base+0x1a8>
   22998:	mov	r1, r6
   2299c:	mov	r6, r0
   229a0:	cmp	r4, r0
   229a4:	beq	229b0 <flatcc_json_parser_union_type_vector@@Base+0xe8>
   229a8:	mov	r4, r6
   229ac:	b	229d8 <flatcc_json_parser_union_type_vector@@Base+0x110>
   229b0:	str	r1, [sp]
   229b4:	mov	r0, r5
   229b8:	mov	r1, r6
   229bc:	mov	r2, r9
   229c0:	ldr	r3, [fp, #16]
   229c4:	bl	2250c <flatcc_json_parser_union_type@@Base+0x238>
   229c8:	mov	r4, r0
   229cc:	cmp	r0, r6
   229d0:	cmpne	r4, r9
   229d4:	beq	22b30 <flatcc_json_parser_union_type_vector@@Base+0x268>
   229d8:	ldrb	r0, [sp, #23]
   229dc:	ldr	r1, [fp, #24]
   229e0:	blx	r1
   229e4:	cmp	r0, #0
   229e8:	add	r6, sp, #23
   229ec:	bne	22a04 <flatcc_json_parser_union_type_vector@@Base+0x13c>
   229f0:	ldrb	r0, [r5, #8]
   229f4:	tst	r0, #1
   229f8:	beq	22b64 <flatcc_json_parser_union_type_vector@@Base+0x29c>
   229fc:	mov	r0, #0
   22a00:	strb	r0, [sp, #23]
   22a04:	ldrb	r1, [sp, #23]
   22a08:	mov	r0, r8
   22a0c:	bl	22c28 <flatcc_json_parser_union_type_vector@@Base+0x360>
   22a10:	mov	r0, r5
   22a14:	mov	r1, r4
   22a18:	mov	r2, r9
   22a1c:	add	r3, sp, #24
   22a20:	bl	2193c <flatcc_json_parser_float@@Base+0x42c>
   22a24:	mov	r4, r0
   22a28:	ldr	r0, [r5]
   22a2c:	ldr	r1, [sp, #24]
   22a30:	cmp	r1, #0
   22a34:	bne	22970 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   22a38:	bl	1ea18 <flatcc_builder_vector_count@@Base>
   22a3c:	mov	r8, r0
   22a40:	str	r0, [r7, #16]
   22a44:	ldr	r0, [r5]
   22a48:	mov	r1, r8
   22a4c:	bl	1cd00 <flatcc_builder_enter_user_frame@@Base>
   22a50:	mov	r1, r0
   22a54:	ldr	r0, [r5]
   22a58:	str	r1, [sp, #16]
   22a5c:	bl	1ce08 <flatcc_builder_get_user_frame_ptr@@Base>
   22a60:	mov	r6, r0
   22a64:	ldr	r0, [r5]
   22a68:	bl	1ea24 <flatcc_builder_vector_edit@@Base>
   22a6c:	mov	r1, r0
   22a70:	mov	r0, r6
   22a74:	mov	r2, r8
   22a78:	bl	12ab0 <memcpy@plt>
   22a7c:	ldr	r0, [r5]
   22a80:	bl	1e998 <flatcc_builder_end_vector@@Base>
   22a84:	cmp	r0, #0
   22a88:	beq	22b30 <flatcc_json_parser_union_type_vector@@Base+0x268>
   22a8c:	mov	r7, r0
   22a90:	ldr	r6, [fp, #8]
   22a94:	ldr	r0, [r5]
   22a98:	sub	r1, r6, #1
   22a9c:	bl	1ed6c <flatcc_builder_table_add_offset@@Base>
   22aa0:	cmp	r0, #0
   22aa4:	beq	22b30 <flatcc_json_parser_union_type_vector@@Base+0x268>
   22aa8:	str	r7, [r0]
   22aac:	ldr	r0, [r5]
   22ab0:	ldr	r1, [fp, #12]
   22ab4:	bl	1ce08 <flatcc_builder_get_user_frame_ptr@@Base>
   22ab8:	add	r7, r0, #8
   22abc:	mov	r2, r7
   22ac0:	ldr	r1, [r2, sl, lsl #3]!
   22ac4:	ldr	r3, [sp, #16]
   22ac8:	str	r3, [r2, #20]
   22acc:	ldr	r2, [r0, #4]
   22ad0:	cmp	r1, #0
   22ad4:	beq	22b54 <flatcc_json_parser_union_type_vector@@Base+0x28c>
   22ad8:	cmp	r2, #0
   22adc:	beq	22b78 <flatcc_json_parser_union_type_vector@@Base+0x2b0>
   22ae0:	ldr	ip, [fp, #20]
   22ae4:	sub	r2, r2, #1
   22ae8:	str	r2, [r0, #4]
   22aec:	add	r0, r7, sl, lsl #3
   22af0:	ldr	r2, [r0, #8]
   22af4:	ldr	sl, [r5, #4]
   22af8:	ldr	r7, [r5, #16]
   22afc:	str	r2, [r5, #16]
   22b00:	ldr	r0, [r0, #4]
   22b04:	str	r0, [r5, #4]
   22b08:	str	r8, [sp]
   22b0c:	stmib	sp, {r6, ip}
   22b10:	mov	r0, r5
   22b14:	mov	r2, r9
   22b18:	bl	22748 <flatcc_json_parser_union_vector@@Base+0xdc>
   22b1c:	cmp	r0, r9
   22b20:	strne	sl, [r5, #4]
   22b24:	strne	r7, [r5, #16]
   22b28:	movne	r9, r4
   22b2c:	b	22b48 <flatcc_json_parser_union_type_vector@@Base+0x280>
   22b30:	mov	r0, r5
   22b34:	mov	r1, r4
   22b38:	mov	r2, r9
   22b3c:	mov	r3, #33	; 0x21
   22b40:	bl	20800 <flatcc_json_parser_set_error@@Base>
   22b44:	mov	r9, r0
   22b48:	mov	r0, r9
   22b4c:	sub	sp, fp, #28
   22b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b54:	add	r1, r2, #1
   22b58:	str	r1, [r0, #4]
   22b5c:	mov	r9, r4
   22b60:	b	22b48 <flatcc_json_parser_union_type_vector@@Base+0x280>
   22b64:	mov	r0, r5
   22b68:	mov	r1, r4
   22b6c:	mov	r2, r9
   22b70:	mov	r3, #15
   22b74:	b	22b40 <flatcc_json_parser_union_type_vector@@Base+0x278>
   22b78:	movw	r0, #25293	; 0x62cd
   22b7c:	movt	r0, #2
   22b80:	movw	r1, #25308	; 0x62dc
   22b84:	movt	r1, #2
   22b88:	movw	r3, #25586	; 0x63f2
   22b8c:	movt	r3, #2
   22b90:	movw	r2, #1122	; 0x462
   22b94:	bl	12bc4 <__assert_fail@plt>
   22b98:	push	{r4, r5, r6, sl, fp, lr}
   22b9c:	add	fp, sp, #16
   22ba0:	mov	r5, r3
   22ba4:	mov	r4, r2
   22ba8:	mov	r6, r0
   22bac:	cmp	r1, r2
   22bb0:	beq	22c00 <flatcc_json_parser_union_type_vector@@Base+0x338>
   22bb4:	ldrb	r0, [r1]
   22bb8:	cmp	r0, #91	; 0x5b
   22bbc:	bne	22c00 <flatcc_json_parser_union_type_vector@@Base+0x338>
   22bc0:	add	r1, r1, #1
   22bc4:	mov	r0, r6
   22bc8:	mov	r2, r4
   22bcc:	bl	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   22bd0:	cmp	r0, r4
   22bd4:	beq	22c1c <flatcc_json_parser_union_type_vector@@Base+0x354>
   22bd8:	ldrb	r1, [r0]
   22bdc:	cmp	r1, #93	; 0x5d
   22be0:	bne	22c1c <flatcc_json_parser_union_type_vector@@Base+0x354>
   22be4:	mov	r1, #0
   22be8:	str	r1, [r5]
   22bec:	add	r1, r0, #1
   22bf0:	mov	r0, r6
   22bf4:	mov	r2, r4
   22bf8:	pop	{r4, r5, r6, sl, fp, lr}
   22bfc:	b	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   22c00:	mov	r0, #0
   22c04:	str	r0, [r5]
   22c08:	mov	r0, r6
   22c0c:	mov	r2, r4
   22c10:	mov	r3, #22
   22c14:	pop	{r4, r5, r6, sl, fp, lr}
   22c18:	b	20800 <flatcc_json_parser_set_error@@Base>
   22c1c:	mov	r1, #1
   22c20:	str	r1, [r5]
   22c24:	pop	{r4, r5, r6, sl, fp, pc}
   22c28:	push	{r4, r5, fp, lr}
   22c2c:	add	fp, sp, #8
   22c30:	mov	r4, r1
   22c34:	mov	r5, r0
   22c38:	mov	r0, r1
   22c3c:	bl	23788 <flatcc_json_parser_struct_as_root@@Base+0xa54>
   22c40:	strb	r4, [r5]
   22c44:	pop	{r4, r5, fp, pc}

00022c48 <flatcc_json_parser_table_as_root@@Base>:
   22c48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22c4c:	add	fp, sp, #24
   22c50:	sub	sp, sp, #56	; 0x38
   22c54:	mov	r4, r2
   22c58:	mov	r6, r0
   22c5c:	ldr	r8, [fp, #8]
   22c60:	str	r8, [sp]
   22c64:	add	r5, sp, #12
   22c68:	cmp	r1, #0
   22c6c:	movne	r5, r1
   22c70:	add	r7, r2, r3
   22c74:	mov	r0, r5
   22c78:	mov	r1, r6
   22c7c:	mov	r3, r7
   22c80:	bl	22cfc <flatcc_json_parser_table_as_root@@Base+0xb4>
   22c84:	mov	r0, #2
   22c88:	and	r3, r0, r8, lsr #1
   22c8c:	ldr	r1, [fp, #12]
   22c90:	mov	r0, r6
   22c94:	mov	r2, #0
   22c98:	bl	1d334 <flatcc_builder_start_buffer@@Base>
   22c9c:	mov	r1, r0
   22ca0:	mvn	r0, #0
   22ca4:	cmp	r1, #0
   22ca8:	bne	22cd0 <flatcc_json_parser_table_as_root@@Base+0x88>
   22cac:	ldr	ip, [fp, #16]
   22cb0:	add	r3, sp, #8
   22cb4:	mov	r0, r5
   22cb8:	mov	r1, r4
   22cbc:	mov	r2, r7
   22cc0:	blx	ip
   22cc4:	ldr	r0, [r5, #24]
   22cc8:	cmp	r0, #0
   22ccc:	beq	22cd8 <flatcc_json_parser_table_as_root@@Base+0x90>
   22cd0:	sub	sp, fp, #24
   22cd4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22cd8:	ldr	r1, [sp, #8]
   22cdc:	mov	r0, r6
   22ce0:	bl	1d4e8 <flatcc_builder_end_buffer@@Base>
   22ce4:	cmp	r0, #0
   22ce8:	mvn	r0, #0
   22cec:	strne	r4, [r5, #40]	; 0x28
   22cf0:	movne	r0, #0
   22cf4:	sub	sp, fp, #24
   22cf8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22cfc:	vmov.i32	q8, #0	; 0x00000000
   22d00:	add	ip, r0, #12
   22d04:	vst1.32	{d16-d17}, [ip]
   22d08:	add	ip, r0, #28
   22d0c:	vst1.32	{d16-d17}, [ip]
   22d10:	stm	r0, {r1, r2}
   22d14:	mov	r1, #1
   22d18:	str	r1, [r0, #16]
   22d1c:	ldr	r1, [sp]
   22d20:	str	r1, [r0, #8]
   22d24:	str	r2, [r0, #28]
   22d28:	str	r3, [r0, #32]
   22d2c:	str	r2, [r0, #36]	; 0x24
   22d30:	bx	lr

00022d34 <flatcc_json_parser_struct_as_root@@Base>:
   22d34:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   22d38:	add	fp, sp, #24
   22d3c:	sub	sp, sp, #56	; 0x38
   22d40:	mov	r4, r2
   22d44:	mov	r6, r0
   22d48:	ldr	r8, [fp, #8]
   22d4c:	str	r8, [sp]
   22d50:	add	r5, sp, #12
   22d54:	cmp	r1, #0
   22d58:	movne	r5, r1
   22d5c:	add	r7, r2, r3
   22d60:	mov	r0, r5
   22d64:	mov	r1, r6
   22d68:	mov	r3, r7
   22d6c:	bl	22cfc <flatcc_json_parser_table_as_root@@Base+0xb4>
   22d70:	mov	r0, #2
   22d74:	and	r3, r0, r8, lsr #1
   22d78:	ldr	r1, [fp, #12]
   22d7c:	mov	r0, r6
   22d80:	mov	r2, #0
   22d84:	bl	1d334 <flatcc_builder_start_buffer@@Base>
   22d88:	mov	r1, r0
   22d8c:	mvn	r0, #0
   22d90:	cmp	r1, #0
   22d94:	bne	22dbc <flatcc_json_parser_struct_as_root@@Base+0x88>
   22d98:	ldr	ip, [fp, #16]
   22d9c:	add	r3, sp, #8
   22da0:	mov	r0, r5
   22da4:	mov	r1, r4
   22da8:	mov	r2, r7
   22dac:	blx	ip
   22db0:	ldr	r0, [r5, #24]
   22db4:	cmp	r0, #0
   22db8:	beq	22dc4 <flatcc_json_parser_struct_as_root@@Base+0x90>
   22dbc:	sub	sp, fp, #24
   22dc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22dc4:	ldr	r1, [sp, #8]
   22dc8:	mov	r0, r6
   22dcc:	bl	1d4e8 <flatcc_builder_end_buffer@@Base>
   22dd0:	cmp	r0, #0
   22dd4:	mvn	r0, #0
   22dd8:	strne	r4, [r5, #40]	; 0x28
   22ddc:	movne	r0, #0
   22de0:	sub	sp, fp, #24
   22de4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   22de8:	vmov	d0, r0, r1
   22dec:	bx	lr
   22df0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22df4:	add	fp, sp, #28
   22df8:	sub	sp, sp, #44	; 0x2c
   22dfc:	mov	lr, r2
   22e00:	mov	r9, r0
   22e04:	mov	r2, #0
   22e08:	str	r2, [lr]
   22e0c:	str	r2, [lr, #4]
   22e10:	cmp	r1, #1000	; 0x3e8
   22e14:	mov	r0, r1
   22e18:	movge	r0, #1000	; 0x3e8
   22e1c:	add	r3, r9, r0
   22e20:	add	ip, r3, #1
   22e24:	cmp	ip, r9
   22e28:	beq	22ea0 <flatcc_json_parser_struct_as_root@@Base+0x16c>
   22e2c:	str	r3, [fp, #-32]	; 0xffffffe0
   22e30:	ldrb	r3, [r9]
   22e34:	cmp	r3, #45	; 0x2d
   22e38:	mov	r4, r9
   22e3c:	bne	22e54 <flatcc_json_parser_struct_as_root@@Base+0x120>
   22e40:	cmp	r0, #0
   22e44:	beq	232c4 <flatcc_json_parser_struct_as_root@@Base+0x590>
   22e48:	add	r4, r9, #1
   22e4c:	ldrb	r3, [r4]
   22e50:	mov	r2, #1
   22e54:	cmp	r3, #48	; 0x30
   22e58:	bne	22e88 <flatcc_json_parser_struct_as_root@@Base+0x154>
   22e5c:	add	r0, r4, #1
   22e60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22e64:	cmp	r4, r3
   22e68:	beq	22eac <flatcc_json_parser_struct_as_root@@Base+0x178>
   22e6c:	ldrb	r3, [r0]
   22e70:	orr	r3, r3, #32
   22e74:	cmp	r3, #120	; 0x78
   22e78:	bne	22eac <flatcc_json_parser_struct_as_root@@Base+0x178>
   22e7c:	mov	r1, lr
   22e80:	bl	232f0 <flatcc_json_parser_struct_as_root@@Base+0x5bc>
   22e84:	b	22ea0 <flatcc_json_parser_struct_as_root@@Base+0x16c>
   22e88:	sub	r0, r3, #49	; 0x31
   22e8c:	uxtb	r0, r0
   22e90:	cmp	r0, #9
   22e94:	bcc	22ee0 <flatcc_json_parser_struct_as_root@@Base+0x1ac>
   22e98:	cmp	r2, #0
   22e9c:	movne	r9, #0
   22ea0:	mov	r0, r9
   22ea4:	sub	sp, fp, #28
   22ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22eac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22eb0:	cmp	r4, r3
   22eb4:	str	r2, [sp, #32]
   22eb8:	beq	22ed4 <flatcc_json_parser_struct_as_root@@Base+0x1a0>
   22ebc:	ldrb	r3, [r0]
   22ec0:	cmp	r3, #48	; 0x30
   22ec4:	bne	22ed4 <flatcc_json_parser_struct_as_root@@Base+0x1a0>
   22ec8:	add	r0, r0, #1
   22ecc:	cmp	ip, r0
   22ed0:	bne	22ebc <flatcc_json_parser_struct_as_root@@Base+0x188>
   22ed4:	mov	r6, #0
   22ed8:	mov	r4, #0
   22edc:	b	22ef0 <flatcc_json_parser_struct_as_root@@Base+0x1bc>
   22ee0:	str	r2, [sp, #32]
   22ee4:	add	r0, r4, #1
   22ee8:	sub	r6, r3, #48	; 0x30
   22eec:	asr	r4, r6, #31
   22ef0:	mov	r5, #0
   22ef4:	cmp	r0, ip
   22ef8:	beq	22f6c <flatcc_json_parser_struct_as_root@@Base+0x238>
   22efc:	str	lr, [sp, #24]
   22f00:	str	r9, [sp, #28]
   22f04:	movw	r8, #39321	; 0x9999
   22f08:	movt	r8, #6553	; 0x1999
   22f0c:	movw	r3, #39320	; 0x9998
   22f10:	movt	r3, #39321	; 0x9999
   22f14:	mov	sl, #10
   22f18:	mov	r7, r0
   22f1c:	ldrb	r9, [r7]
   22f20:	sub	lr, r9, #48	; 0x30
   22f24:	uxtb	r2, lr
   22f28:	cmp	r2, #9
   22f2c:	bhi	22f5c <flatcc_json_parser_struct_as_root@@Base+0x228>
   22f30:	subs	r2, r3, r6
   22f34:	sbcs	r2, r8, r4
   22f38:	bcc	22f84 <flatcc_json_parser_struct_as_root@@Base+0x250>
   22f3c:	add	r2, r4, r4, lsl #2
   22f40:	lsl	r2, r2, #1
   22f44:	umlal	r9, r2, r6, sl
   22f48:	subs	r6, r9, #48	; 0x30
   22f4c:	sbc	r4, r2, #0
   22f50:	add	r7, r7, #1
   22f54:	cmp	ip, r7
   22f58:	bne	22f1c <flatcc_json_parser_struct_as_root@@Base+0x1e8>
   22f5c:	mov	r8, r6
   22f60:	mov	sl, r4
   22f64:	mov	r2, #0
   22f68:	b	22f9c <flatcc_json_parser_struct_as_root@@Base+0x268>
   22f6c:	mov	r7, r0
   22f70:	mov	r8, r6
   22f74:	mov	sl, r4
   22f78:	mov	r2, #0
   22f7c:	str	r2, [sp, #36]	; 0x24
   22f80:	b	22fa8 <flatcc_json_parser_struct_as_root@@Base+0x274>
   22f84:	adds	r8, r6, #1
   22f88:	adc	sl, r4, #0
   22f8c:	cmp	r9, #52	; 0x34
   22f90:	movls	r8, r6
   22f94:	movls	sl, r4
   22f98:	mov	r2, #1
   22f9c:	str	r2, [sp, #36]	; 0x24
   22fa0:	ldr	r9, [sp, #28]
   22fa4:	ldr	lr, [sp, #24]
   22fa8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22fac:	cmp	r7, ip
   22fb0:	beq	23000 <flatcc_json_parser_struct_as_root@@Base+0x2cc>
   22fb4:	mvn	r1, r1
   22fb8:	cmn	r1, #1000	; 0x3e8
   22fbc:	mvnlt	r1, #1000	; 0x3e8
   22fc0:	mvn	r1, r1
   22fc4:	sub	r1, r1, r7
   22fc8:	add	r6, r9, r1
   22fcc:	mov	r5, #0
   22fd0:	mov	r1, r7
   22fd4:	ldrb	r3, [r1]
   22fd8:	cmp	r3, #48	; 0x30
   22fdc:	bne	23008 <flatcc_json_parser_struct_as_root@@Base+0x2d4>
   22fe0:	sub	r6, r6, #1
   22fe4:	add	r3, r1, #1
   22fe8:	add	r5, r5, #1
   22fec:	cmp	r1, r2
   22ff0:	mov	r1, r3
   22ff4:	bne	22fd4 <flatcc_json_parser_struct_as_root@@Base+0x2a0>
   22ff8:	mov	r1, r3
   22ffc:	b	23054 <flatcc_json_parser_struct_as_root@@Base+0x320>
   23000:	mov	r1, r7
   23004:	b	23054 <flatcc_json_parser_struct_as_root@@Base+0x320>
   23008:	sub	r2, r3, #49	; 0x31
   2300c:	uxtb	r2, r2
   23010:	cmp	r2, #8
   23014:	bhi	23054 <flatcc_json_parser_struct_as_root@@Base+0x320>
   23018:	mvn	r4, #0
   2301c:	mov	r3, r4
   23020:	cmp	r6, #0
   23024:	beq	23044 <flatcc_json_parser_struct_as_root@@Base+0x310>
   23028:	ldrb	r2, [r1, -r3]
   2302c:	sub	r2, r2, #48	; 0x30
   23030:	uxtb	r2, r2
   23034:	sub	r4, r3, #1
   23038:	sub	r6, r6, #1
   2303c:	cmp	r2, #10
   23040:	bcc	2301c <flatcc_json_parser_struct_as_root@@Base+0x2e8>
   23044:	sub	r5, r5, r3
   23048:	sub	r1, r1, r3
   2304c:	mov	r2, #1
   23050:	str	r2, [sp, #36]	; 0x24
   23054:	sub	r3, r7, r0
   23058:	cmp	r1, ip
   2305c:	beq	231ac <flatcc_json_parser_struct_as_root@@Base+0x478>
   23060:	ldrb	r0, [r1]
   23064:	cmp	r0, #46	; 0x2e
   23068:	bne	231ac <flatcc_json_parser_struct_as_root@@Base+0x478>
   2306c:	mov	r7, r1
   23070:	ldrb	r0, [r7, #1]!
   23074:	sub	r0, r0, #48	; 0x30
   23078:	uxtb	r2, r0
   2307c:	mov	r0, #0
   23080:	cmp	r2, #9
   23084:	bhi	232c8 <flatcc_json_parser_struct_as_root@@Base+0x594>
   23088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2308c:	cmp	r1, r0
   23090:	beq	230f8 <flatcc_json_parser_struct_as_root@@Base+0x3c4>
   23094:	str	r3, [sp, #28]
   23098:	movw	r0, #39321	; 0x9999
   2309c:	movt	r0, #6553	; 0x1999
   230a0:	movw	r4, #39320	; 0x9998
   230a4:	movt	r4, #39321	; 0x9999
   230a8:	mov	r6, #10
   230ac:	mov	r1, r7
   230b0:	ldrb	r3, [r1]
   230b4:	sub	r2, r3, #48	; 0x30
   230b8:	uxtb	r2, r2
   230bc:	cmp	r2, #9
   230c0:	bhi	23114 <flatcc_json_parser_struct_as_root@@Base+0x3e0>
   230c4:	subs	r2, r4, r8
   230c8:	sbcs	r2, r0, sl
   230cc:	bcc	23108 <flatcc_json_parser_struct_as_root@@Base+0x3d4>
   230d0:	add	r2, sl, sl, lsl #2
   230d4:	lsl	r2, r2, #1
   230d8:	umlal	r3, r2, r8, r6
   230dc:	subs	r8, r3, #48	; 0x30
   230e0:	sbc	sl, r2, #0
   230e4:	sub	r5, r5, #1
   230e8:	add	r1, r1, #1
   230ec:	cmp	ip, r1
   230f0:	bne	230b0 <flatcc_json_parser_struct_as_root@@Base+0x37c>
   230f4:	b	23114 <flatcc_json_parser_struct_as_root@@Base+0x3e0>
   230f8:	mov	r1, r7
   230fc:	mov	r0, r8
   23100:	mov	r6, sl
   23104:	b	23120 <flatcc_json_parser_struct_as_root@@Base+0x3ec>
   23108:	ldr	r0, [sp, #36]	; 0x24
   2310c:	cmp	r0, #0
   23110:	beq	232d0 <flatcc_json_parser_struct_as_root@@Base+0x59c>
   23114:	mov	r0, r8
   23118:	mov	r6, sl
   2311c:	ldr	r3, [sp, #28]
   23120:	sub	r2, r1, r7
   23124:	add	r3, r2, r3
   23128:	cmp	r1, ip
   2312c:	beq	23154 <flatcc_json_parser_struct_as_root@@Base+0x420>
   23130:	mov	r4, r3
   23134:	ldrb	r3, [r1]
   23138:	cmp	r3, #48	; 0x30
   2313c:	bne	23160 <flatcc_json_parser_struct_as_root@@Base+0x42c>
   23140:	add	r1, r1, #1
   23144:	add	r5, r5, #1
   23148:	cmp	ip, r1
   2314c:	bne	23134 <flatcc_json_parser_struct_as_root@@Base+0x400>
   23150:	b	231a0 <flatcc_json_parser_struct_as_root@@Base+0x46c>
   23154:	mov	r8, r0
   23158:	mov	sl, r6
   2315c:	b	231ac <flatcc_json_parser_struct_as_root@@Base+0x478>
   23160:	sub	r2, r3, #49	; 0x31
   23164:	uxtb	r2, r2
   23168:	cmp	r2, #8
   2316c:	bhi	231a0 <flatcc_json_parser_struct_as_root@@Base+0x46c>
   23170:	add	r3, r1, #1
   23174:	mov	r1, r3
   23178:	cmp	ip, r3
   2317c:	beq	23198 <flatcc_json_parser_struct_as_root@@Base+0x464>
   23180:	mov	r3, r1
   23184:	ldrb	r2, [r3], #1
   23188:	sub	r2, r2, #48	; 0x30
   2318c:	uxtb	r2, r2
   23190:	cmp	r2, #10
   23194:	bcc	23174 <flatcc_json_parser_struct_as_root@@Base+0x440>
   23198:	mov	r2, #1
   2319c:	str	r2, [sp, #36]	; 0x24
   231a0:	mov	r8, r0
   231a4:	mov	sl, r6
   231a8:	mov	r3, r4
   231ac:	mov	r7, #0
   231b0:	cmp	r1, ip
   231b4:	beq	2320c <flatcc_json_parser_struct_as_root@@Base+0x4d8>
   231b8:	ldrb	r0, [r1]
   231bc:	orr	r0, r0, #32
   231c0:	cmp	r0, #101	; 0x65
   231c4:	bne	2320c <flatcc_json_parser_struct_as_root@@Base+0x4d8>
   231c8:	sub	r2, ip, r1
   231cc:	mov	r0, #0
   231d0:	cmp	r2, #2
   231d4:	blt	232c8 <flatcc_json_parser_struct_as_root@@Base+0x594>
   231d8:	mov	r4, r1
   231dc:	ldrb	r0, [r4, #1]!
   231e0:	cmp	r0, #45	; 0x2d
   231e4:	beq	23258 <flatcc_json_parser_struct_as_root@@Base+0x524>
   231e8:	mov	r7, #0
   231ec:	cmp	r0, #43	; 0x2b
   231f0:	bne	23268 <flatcc_json_parser_struct_as_root@@Base+0x534>
   231f4:	add	r4, r1, #2
   231f8:	mov	r0, #0
   231fc:	cmp	r4, ip
   23200:	beq	232c8 <flatcc_json_parser_struct_as_root@@Base+0x594>
   23204:	mov	r7, #0
   23208:	b	23268 <flatcc_json_parser_struct_as_root@@Base+0x534>
   2320c:	mov	r6, #0
   23210:	cmp	r1, ip
   23214:	mov	r0, #0
   23218:	beq	232c8 <flatcc_json_parser_struct_as_root@@Base+0x594>
   2321c:	add	r0, r3, r5
   23220:	cmp	r7, #0
   23224:	rsbne	r6, r6, #0
   23228:	add	r0, r0, r6
   2322c:	stm	sp, {r8, sl}
   23230:	str	r0, [sp, #8]
   23234:	str	r3, [sp, #12]
   23238:	ldr	r0, [sp, #36]	; 0x24
   2323c:	str	r0, [sp, #16]
   23240:	str	lr, [sp, #20]
   23244:	mov	r0, r9
   23248:	ldr	r2, [sp, #32]
   2324c:	bl	23300 <flatcc_json_parser_struct_as_root@@Base+0x5cc>
   23250:	sub	sp, fp, #28
   23254:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23258:	add	r4, r1, #2
   2325c:	mov	r7, #1
   23260:	cmp	r4, ip
   23264:	beq	232c4 <flatcc_json_parser_struct_as_root@@Base+0x590>
   23268:	ldrb	r0, [r4]
   2326c:	sub	r6, r0, #48	; 0x30
   23270:	uxtb	r1, r6
   23274:	mov	r0, #0
   23278:	cmp	r1, #9
   2327c:	bhi	232c8 <flatcc_json_parser_struct_as_root@@Base+0x594>
   23280:	add	r1, r4, #1
   23284:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23288:	cmp	r4, r0
   2328c:	beq	23210 <flatcc_json_parser_struct_as_root@@Base+0x4dc>
   23290:	ldrb	r0, [r1]
   23294:	sub	r2, r0, #48	; 0x30
   23298:	uxtb	r2, r2
   2329c:	cmp	r2, #9
   232a0:	bhi	23210 <flatcc_json_parser_struct_as_root@@Base+0x4dc>
   232a4:	cmp	r6, #32768	; 0x8000
   232a8:	addlt	r2, r6, r6, lsl #2
   232ac:	addlt	r0, r0, r2, lsl #1
   232b0:	sublt	r6, r0, #48	; 0x30
   232b4:	add	r1, r1, #1
   232b8:	cmp	ip, r1
   232bc:	bne	23290 <flatcc_json_parser_struct_as_root@@Base+0x55c>
   232c0:	b	23210 <flatcc_json_parser_struct_as_root@@Base+0x4dc>
   232c4:	mov	r0, #0
   232c8:	sub	sp, fp, #28
   232cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   232d0:	adds	r0, r8, #1
   232d4:	adc	r6, sl, #0
   232d8:	cmp	r3, #52	; 0x34
   232dc:	movls	r0, r8
   232e0:	movls	r6, sl
   232e4:	mov	r2, #1
   232e8:	str	r2, [sp, #36]	; 0x24
   232ec:	b	2311c <flatcc_json_parser_struct_as_root@@Base+0x3e8>
   232f0:	mov	r2, #0
   232f4:	str	r2, [r1]
   232f8:	str	r2, [r1, #4]
   232fc:	bx	lr
   23300:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   23304:	add	fp, sp, #24
   23308:	sub	sp, sp, #16
   2330c:	mov	r5, r2
   23310:	mov	r4, r1
   23314:	mov	r6, r0
   23318:	ldr	r1, [fp, #12]
   2331c:	ldr	r0, [fp, #8]
   23320:	vmov.i32	d0, #0	; 0x00000000
   23324:	orrs	r2, r0, r1
   23328:	ldr	r9, [fp, #28]
   2332c:	beq	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23330:	ldr	r7, [fp, #16]
   23334:	cmn	r7, #324	; 0x144
   23338:	blt	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   2333c:	movw	r2, #311	; 0x137
   23340:	cmp	r7, r2
   23344:	blt	23378 <flatcc_json_parser_struct_as_root@@Base+0x644>
   23348:	movw	r1, #0
   2334c:	movt	r1, #32752	; 0x7ff0
   23350:	mov	r0, #0
   23354:	bl	22de8 <flatcc_json_parser_struct_as_root@@Base+0xb4>
   23358:	vstr	d0, [r9]
   2335c:	cmp	r5, #0
   23360:	vldrne	d16, [r9]
   23364:	vnegne.f64	d16, d16
   23368:	vstrne	d16, [r9]
   2336c:	mov	r0, r4
   23370:	sub	sp, fp, #24
   23374:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   23378:	ldr	r8, [fp, #20]
   2337c:	mov	r2, #0
   23380:	cmp	r2, r1, lsr #21
   23384:	bne	2346c <flatcc_json_parser_struct_as_root@@Base+0x738>
   23388:	cmp	r7, #22
   2338c:	bhi	2346c <flatcc_json_parser_struct_as_root@@Base+0x738>
   23390:	bl	23ad8 <flatcc_json_parser_struct_as_root@@Base+0xda4>
   23394:	sub	r2, r7, r8
   23398:	vmov	d0, r0, r1
   2339c:	add	r0, r2, #22
   233a0:	cmp	r0, #44	; 0x2c
   233a4:	bhi	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   233a8:	add	r1, pc, #0
   233ac:	ldr	pc, [r1, r0, lsl #2]
   233b0:	andeq	r3, r2, r4, ror #8
   233b4:	andeq	r3, r2, r8, lsr #9
   233b8:			; <UNDEFINED> instruction: 0x000234b0
   233bc:			; <UNDEFINED> instruction: 0x000234b8
   233c0:	andeq	r3, r2, r0, asr #9
   233c4:	andeq	r3, r2, r8, asr #9
   233c8:	ldrdeq	r3, [r2], -r0
   233cc:	ldrdeq	r3, [r2], -r8
   233d0:	andeq	r3, r2, r0, ror #9
   233d4:	andeq	r3, r2, r8, ror #9
   233d8:	strdeq	r3, [r2], -r0
   233dc:	strdeq	r3, [r2], -r8
   233e0:	andeq	r3, r2, r0, lsl #10
   233e4:	andeq	r3, r2, r8, lsl #10
   233e8:	andeq	r3, r2, r0, lsl r5
   233ec:	andeq	r3, r2, r8, lsl r5
   233f0:	andeq	r3, r2, r0, lsr #10
   233f4:	andeq	r3, r2, r8, lsr #10
   233f8:	andeq	r3, r2, r0, lsr r5
   233fc:	andeq	r3, r2, r8, lsr r5
   23400:	andeq	r3, r2, r0, asr #10
   23404:	andeq	r3, r2, r8, asr #10
   23408:	andeq	r3, r2, r8, asr r3
   2340c:	andeq	r3, r2, r4, asr r5
   23410:	andeq	r3, r2, r0, ror #10
   23414:	andeq	r3, r2, ip, ror #10
   23418:	andeq	r3, r2, r8, ror r5
   2341c:	andeq	r3, r2, r4, lsl #11
   23420:	muleq	r2, r0, r5
   23424:	muleq	r2, ip, r5
   23428:	andeq	r3, r2, r8, lsr #11
   2342c:			; <UNDEFINED> instruction: 0x000235b4
   23430:	andeq	r3, r2, r0, asr #11
   23434:	andeq	r3, r2, ip, asr #11
   23438:	ldrdeq	r3, [r2], -r8
   2343c:	andeq	r3, r2, r4, ror #11
   23440:	strdeq	r3, [r2], -r0
   23444:	strdeq	r3, [r2], -ip
   23448:	andeq	r3, r2, r8, lsl #12
   2344c:	andeq	r3, r2, r4, lsl r6
   23450:	andeq	r3, r2, r0, lsr #12
   23454:	andeq	r3, r2, ip, lsr #12
   23458:	andeq	r3, r2, r8, lsr r6
   2345c:	andeq	r3, r2, r4, asr #12
   23460:	andeq	r3, r2, r0, asr r6
   23464:	vldr	d16, [pc, #660]	; 23700 <flatcc_json_parser_struct_as_root@@Base+0x9cc>
   23468:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   2346c:	ldr	r2, [fp, #24]
   23470:	stm	sp, {r2, r9}
   23474:	mov	r2, r7
   23478:	mov	r3, r8
   2347c:	bl	20290 <grisu3_diy_fp_encode_double@@Base>
   23480:	cmp	r0, #0
   23484:	bne	2335c <flatcc_json_parser_struct_as_root@@Base+0x628>
   23488:	add	r1, sp, #12
   2348c:	mov	r0, r6
   23490:	bl	12b70 <strtod@plt>
   23494:	vstr	d0, [r9]
   23498:	ldr	r0, [sp, #12]
   2349c:	cmp	r0, r4
   234a0:	movcc	r4, r0
   234a4:	b	2336c <flatcc_json_parser_struct_as_root@@Base+0x638>
   234a8:	vldr	d16, [pc, #432]	; 23660 <flatcc_json_parser_struct_as_root@@Base+0x92c>
   234ac:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   234b0:	vldr	d16, [pc, #432]	; 23668 <flatcc_json_parser_struct_as_root@@Base+0x934>
   234b4:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   234b8:	vldr	d16, [pc, #432]	; 23670 <flatcc_json_parser_struct_as_root@@Base+0x93c>
   234bc:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   234c0:	vldr	d16, [pc, #432]	; 23678 <flatcc_json_parser_struct_as_root@@Base+0x944>
   234c4:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   234c8:	vldr	d16, [pc, #432]	; 23680 <flatcc_json_parser_struct_as_root@@Base+0x94c>
   234cc:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   234d0:	vldr	d16, [pc, #432]	; 23688 <flatcc_json_parser_struct_as_root@@Base+0x954>
   234d4:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   234d8:	vldr	d16, [pc, #432]	; 23690 <flatcc_json_parser_struct_as_root@@Base+0x95c>
   234dc:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   234e0:	vldr	d16, [pc, #432]	; 23698 <flatcc_json_parser_struct_as_root@@Base+0x964>
   234e4:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   234e8:	vldr	d16, [pc, #432]	; 236a0 <flatcc_json_parser_struct_as_root@@Base+0x96c>
   234ec:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   234f0:	vldr	d16, [pc, #432]	; 236a8 <flatcc_json_parser_struct_as_root@@Base+0x974>
   234f4:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   234f8:	vldr	d16, [pc, #432]	; 236b0 <flatcc_json_parser_struct_as_root@@Base+0x97c>
   234fc:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   23500:	vldr	d16, [pc, #432]	; 236b8 <flatcc_json_parser_struct_as_root@@Base+0x984>
   23504:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   23508:	vldr	d16, [pc, #432]	; 236c0 <flatcc_json_parser_struct_as_root@@Base+0x98c>
   2350c:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   23510:	vldr	d16, [pc, #432]	; 236c8 <flatcc_json_parser_struct_as_root@@Base+0x994>
   23514:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   23518:	vldr	d16, [pc, #432]	; 236d0 <flatcc_json_parser_struct_as_root@@Base+0x99c>
   2351c:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   23520:	vldr	d16, [pc, #432]	; 236d8 <flatcc_json_parser_struct_as_root@@Base+0x9a4>
   23524:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   23528:	vldr	d16, [pc, #432]	; 236e0 <flatcc_json_parser_struct_as_root@@Base+0x9ac>
   2352c:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   23530:	vldr	d16, [pc, #432]	; 236e8 <flatcc_json_parser_struct_as_root@@Base+0x9b4>
   23534:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   23538:	vldr	d16, [pc, #432]	; 236f0 <flatcc_json_parser_struct_as_root@@Base+0x9bc>
   2353c:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   23540:	vldr	d16, [pc, #432]	; 236f8 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   23544:	b	2354c <flatcc_json_parser_struct_as_root@@Base+0x818>
   23548:	vmov.f64	d16, #36	; 0x41200000  10.0
   2354c:	vdiv.f64	d0, d0, d16
   23550:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23554:	vmov.f64	d16, #36	; 0x41200000  10.0
   23558:	vmul.f64	d0, d0, d16
   2355c:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23560:	vldr	d16, [pc, #400]	; 236f8 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   23564:	vmul.f64	d0, d0, d16
   23568:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   2356c:	vldr	d16, [pc, #380]	; 236f0 <flatcc_json_parser_struct_as_root@@Base+0x9bc>
   23570:	vmul.f64	d0, d0, d16
   23574:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23578:	vldr	d16, [pc, #360]	; 236e8 <flatcc_json_parser_struct_as_root@@Base+0x9b4>
   2357c:	vmul.f64	d0, d0, d16
   23580:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23584:	vldr	d16, [pc, #340]	; 236e0 <flatcc_json_parser_struct_as_root@@Base+0x9ac>
   23588:	vmul.f64	d0, d0, d16
   2358c:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23590:	vldr	d16, [pc, #320]	; 236d8 <flatcc_json_parser_struct_as_root@@Base+0x9a4>
   23594:	vmul.f64	d0, d0, d16
   23598:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   2359c:	vldr	d16, [pc, #300]	; 236d0 <flatcc_json_parser_struct_as_root@@Base+0x99c>
   235a0:	vmul.f64	d0, d0, d16
   235a4:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   235a8:	vldr	d16, [pc, #280]	; 236c8 <flatcc_json_parser_struct_as_root@@Base+0x994>
   235ac:	vmul.f64	d0, d0, d16
   235b0:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   235b4:	vldr	d16, [pc, #260]	; 236c0 <flatcc_json_parser_struct_as_root@@Base+0x98c>
   235b8:	vmul.f64	d0, d0, d16
   235bc:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   235c0:	vldr	d16, [pc, #240]	; 236b8 <flatcc_json_parser_struct_as_root@@Base+0x984>
   235c4:	vmul.f64	d0, d0, d16
   235c8:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   235cc:	vldr	d16, [pc, #220]	; 236b0 <flatcc_json_parser_struct_as_root@@Base+0x97c>
   235d0:	vmul.f64	d0, d0, d16
   235d4:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   235d8:	vldr	d16, [pc, #200]	; 236a8 <flatcc_json_parser_struct_as_root@@Base+0x974>
   235dc:	vmul.f64	d0, d0, d16
   235e0:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   235e4:	vldr	d16, [pc, #180]	; 236a0 <flatcc_json_parser_struct_as_root@@Base+0x96c>
   235e8:	vmul.f64	d0, d0, d16
   235ec:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   235f0:	vldr	d16, [pc, #160]	; 23698 <flatcc_json_parser_struct_as_root@@Base+0x964>
   235f4:	vmul.f64	d0, d0, d16
   235f8:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   235fc:	vldr	d16, [pc, #140]	; 23690 <flatcc_json_parser_struct_as_root@@Base+0x95c>
   23600:	vmul.f64	d0, d0, d16
   23604:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23608:	vldr	d16, [pc, #120]	; 23688 <flatcc_json_parser_struct_as_root@@Base+0x954>
   2360c:	vmul.f64	d0, d0, d16
   23610:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23614:	vldr	d16, [pc, #100]	; 23680 <flatcc_json_parser_struct_as_root@@Base+0x94c>
   23618:	vmul.f64	d0, d0, d16
   2361c:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23620:	vldr	d16, [pc, #80]	; 23678 <flatcc_json_parser_struct_as_root@@Base+0x944>
   23624:	vmul.f64	d0, d0, d16
   23628:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   2362c:	vldr	d16, [pc, #60]	; 23670 <flatcc_json_parser_struct_as_root@@Base+0x93c>
   23630:	vmul.f64	d0, d0, d16
   23634:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23638:	vldr	d16, [pc, #40]	; 23668 <flatcc_json_parser_struct_as_root@@Base+0x934>
   2363c:	vmul.f64	d0, d0, d16
   23640:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23644:	vldr	d16, [pc, #20]	; 23660 <flatcc_json_parser_struct_as_root@@Base+0x92c>
   23648:	vmul.f64	d0, d0, d16
   2364c:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   23650:	vldr	d16, [pc, #168]	; 23700 <flatcc_json_parser_struct_as_root@@Base+0x9cc>
   23654:	vmul.f64	d0, d0, d16
   23658:	b	23358 <flatcc_json_parser_struct_as_root@@Base+0x624>
   2365c:	nop	{0}
   23660:	usatle	lr, #2, r0, asr #30
   23664:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   23668:	ldmvc	r5!, {r6, sl, fp, pc}
   2366c:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   23670:	addsvs	r3, r1, r0, lsl #26
   23674:	mvnmi	r5, #228, 16	; 0xe40000
   23678:	strbvs	ip, [lr, -r0, lsl #16]
   2367c:			; <UNDEFINED> instruction: 0x43abc16d
   23680:	ldrbhi	sl, [r8]
   23684:	cmnmi	r6, #1459617792	; 0x57000000
   23688:	strbcc	r8, [r0, r0]!
   2368c:	movtmi	ip, #4985	; 0x1379
   23690:	ldrtcs	r0, [r4], -r0
   23694:	movwmi	r6, #52213	; 0xcbf5
   23698:	cdpne	0, 9, cr0, cr0, cr0, {0}
   2369c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   236a0:	strb	r0, [r0, #-0]
   236a4:	adcmi	r3, r2, #156	; 0x9c
   236a8:	andge	r0, r0, #0
   236ac:	rsbmi	r1, sp, #148, 20	; 0x94000
   236b0:	stmda	r0, {}	; <UNPREDICTABLE>
   236b4:	eorsmi	r4, r7, #7733248	; 0x760000
   236b8:	andcs	r0, r0, r0
   236bc:	andmi	sl, r2, #95	; 0x5f
   236c0:	andeq	r0, r0, r0
   236c4:	bicmi	ip, sp, r5, ror #26
   236c8:	andeq	r0, r0, r0
   236cc:	orrsmi	sp, r7, r4, lsl #15
   236d0:	andeq	r0, r0, r0
   236d4:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   236d8:	andeq	r0, r0, r0
   236dc:	smlawbmi	lr, r0, r4, r8
   236e0:	andeq	r0, r0, r0
   236e4:	rscsmi	r6, r8, r0, lsl #20
   236e8:	andeq	r0, r0, r0
   236ec:	sbcmi	r8, r3, r0, lsl #16
   236f0:	andeq	r0, r0, r0
   236f4:	addmi	r4, pc, r0
   236f8:	andeq	r0, r0, r0
   236fc:	subsmi	r0, r9, r0
   23700:			; <UNDEFINED> instruction: 0x064dd592
   23704:	strmi	pc, [r0], #207	; 0xcf
   23708:	push	{fp, lr}
   2370c:	mov	fp, sp
   23710:	cmp	r3, #0
   23714:	beq	23724 <flatcc_json_parser_struct_as_root@@Base+0x9f0>
   23718:	mov	r3, #8
   2371c:	pop	{fp, lr}
   23720:	b	20800 <flatcc_json_parser_set_error@@Base>
   23724:	ldr	ip, [fp, #12]
   23728:	ldr	lr, [fp, #8]
   2372c:	subs	r3, lr, #256	; 0x100
   23730:	sbcs	r3, ip, #0
   23734:	ldrcc	r0, [fp, #16]
   23738:	strbcc	lr, [r0]
   2373c:	movcc	r0, r1
   23740:	popcc	{fp, pc}
   23744:	mov	r3, #7
   23748:	pop	{fp, lr}
   2374c:	b	20800 <flatcc_json_parser_set_error@@Base>
   23750:	push	{r4, r5, fp, lr}
   23754:	add	fp, sp, #8
   23758:	mov	r4, r2
   2375c:	mov	r5, r0
   23760:	bl	21650 <flatcc_json_parser_float@@Base+0x140>
   23764:	mov	r1, r0
   23768:	ldr	r0, [r5, #12]
   2376c:	cmp	r0, #0
   23770:	movne	r0, r1
   23774:	popne	{r4, r5, fp, pc}
   23778:	mov	r0, r5
   2377c:	mov	r2, r4
   23780:	pop	{r4, r5, fp, lr}
   23784:	b	20df4 <flatcc_json_parser_skip_constant@@Base+0x8c>
   23788:	bx	lr
   2378c:	eor	r1, r1, #-2147483648	; 0x80000000
   23790:	b	23798 <flatcc_json_parser_struct_as_root@@Base+0xa64>
   23794:	eor	r3, r3, #-2147483648	; 0x80000000
   23798:	push	{r4, r5, lr}
   2379c:	lsl	r4, r1, #1
   237a0:	lsl	r5, r3, #1
   237a4:	teq	r4, r5
   237a8:	teqeq	r0, r2
   237ac:	orrsne	ip, r4, r0
   237b0:	orrsne	ip, r5, r2
   237b4:	mvnsne	ip, r4, asr #21
   237b8:	mvnsne	ip, r5, asr #21
   237bc:	beq	239a8 <flatcc_json_parser_struct_as_root@@Base+0xc74>
   237c0:	lsr	r4, r4, #21
   237c4:	rsbs	r5, r4, r5, lsr #21
   237c8:	rsblt	r5, r5, #0
   237cc:	ble	237ec <flatcc_json_parser_struct_as_root@@Base+0xab8>
   237d0:	add	r4, r4, r5
   237d4:	eor	r2, r0, r2
   237d8:	eor	r3, r1, r3
   237dc:	eor	r0, r2, r0
   237e0:	eor	r1, r3, r1
   237e4:	eor	r2, r0, r2
   237e8:	eor	r3, r1, r3
   237ec:	cmp	r5, #54	; 0x36
   237f0:	pophi	{r4, r5, pc}
   237f4:	tst	r1, #-2147483648	; 0x80000000
   237f8:	lsl	r1, r1, #12
   237fc:	mov	ip, #1048576	; 0x100000
   23800:	orr	r1, ip, r1, lsr #12
   23804:	beq	23810 <flatcc_json_parser_struct_as_root@@Base+0xadc>
   23808:	rsbs	r0, r0, #0
   2380c:	rsc	r1, r1, #0
   23810:	tst	r3, #-2147483648	; 0x80000000
   23814:	lsl	r3, r3, #12
   23818:	orr	r3, ip, r3, lsr #12
   2381c:	beq	23828 <flatcc_json_parser_struct_as_root@@Base+0xaf4>
   23820:	rsbs	r2, r2, #0
   23824:	rsc	r3, r3, #0
   23828:	teq	r4, r5
   2382c:	beq	23990 <flatcc_json_parser_struct_as_root@@Base+0xc5c>
   23830:	sub	r4, r4, #1
   23834:	rsbs	lr, r5, #32
   23838:	blt	23854 <flatcc_json_parser_struct_as_root@@Base+0xb20>
   2383c:	lsl	ip, r2, lr
   23840:	adds	r0, r0, r2, lsr r5
   23844:	adc	r1, r1, #0
   23848:	adds	r0, r0, r3, lsl lr
   2384c:	adcs	r1, r1, r3, asr r5
   23850:	b	23870 <flatcc_json_parser_struct_as_root@@Base+0xb3c>
   23854:	sub	r5, r5, #32
   23858:	add	lr, lr, #32
   2385c:	cmp	r2, #1
   23860:	lsl	ip, r3, lr
   23864:	orrcs	ip, ip, #2
   23868:	adds	r0, r0, r3, asr r5
   2386c:	adcs	r1, r1, r3, asr #31
   23870:	and	r5, r1, #-2147483648	; 0x80000000
   23874:	bpl	23884 <flatcc_json_parser_struct_as_root@@Base+0xb50>
   23878:	rsbs	ip, ip, #0
   2387c:	rscs	r0, r0, #0
   23880:	rsc	r1, r1, #0
   23884:	cmp	r1, #1048576	; 0x100000
   23888:	bcc	238c8 <flatcc_json_parser_struct_as_root@@Base+0xb94>
   2388c:	cmp	r1, #2097152	; 0x200000
   23890:	bcc	238b0 <flatcc_json_parser_struct_as_root@@Base+0xb7c>
   23894:	lsrs	r1, r1, #1
   23898:	rrxs	r0, r0
   2389c:	rrx	ip, ip
   238a0:	add	r4, r4, #1
   238a4:	lsl	r2, r4, #21
   238a8:	cmn	r2, #4194304	; 0x400000
   238ac:	bcs	23a08 <flatcc_json_parser_struct_as_root@@Base+0xcd4>
   238b0:	cmp	ip, #-2147483648	; 0x80000000
   238b4:	lsrseq	ip, r0, #1
   238b8:	adcs	r0, r0, #0
   238bc:	adc	r1, r1, r4, lsl #20
   238c0:	orr	r1, r1, r5
   238c4:	pop	{r4, r5, pc}
   238c8:	lsls	ip, ip, #1
   238cc:	adcs	r0, r0, r0
   238d0:	adc	r1, r1, r1
   238d4:	tst	r1, #1048576	; 0x100000
   238d8:	sub	r4, r4, #1
   238dc:	bne	238b0 <flatcc_json_parser_struct_as_root@@Base+0xb7c>
   238e0:	teq	r1, #0
   238e4:	moveq	r1, r0
   238e8:	moveq	r0, #0
   238ec:	clz	r3, r1
   238f0:	addeq	r3, r3, #32
   238f4:	sub	r3, r3, #11
   238f8:	subs	r2, r3, #32
   238fc:	bge	23920 <flatcc_json_parser_struct_as_root@@Base+0xbec>
   23900:	adds	r2, r2, #12
   23904:	ble	2391c <flatcc_json_parser_struct_as_root@@Base+0xbe8>
   23908:	add	ip, r2, #20
   2390c:	rsb	r2, r2, #12
   23910:	lsl	r0, r1, ip
   23914:	lsr	r1, r1, r2
   23918:	b	23930 <flatcc_json_parser_struct_as_root@@Base+0xbfc>
   2391c:	add	r2, r2, #20
   23920:	rsble	ip, r2, #32
   23924:	lsl	r1, r1, r2
   23928:	orrle	r1, r1, r0, lsr ip
   2392c:	lslle	r0, r0, r2
   23930:	subs	r4, r4, r3
   23934:	addge	r1, r1, r4, lsl #20
   23938:	orrge	r1, r1, r5
   2393c:	popge	{r4, r5, pc}
   23940:	mvn	r4, r4
   23944:	subs	r4, r4, #31
   23948:	bge	23984 <flatcc_json_parser_struct_as_root@@Base+0xc50>
   2394c:	adds	r4, r4, #12
   23950:	bgt	2396c <flatcc_json_parser_struct_as_root@@Base+0xc38>
   23954:	add	r4, r4, #20
   23958:	rsb	r2, r4, #32
   2395c:	lsr	r0, r0, r4
   23960:	orr	r0, r0, r1, lsl r2
   23964:	orr	r1, r5, r1, lsr r4
   23968:	pop	{r4, r5, pc}
   2396c:	rsb	r4, r4, #12
   23970:	rsb	r2, r4, #32
   23974:	lsr	r0, r0, r2
   23978:	orr	r0, r0, r1, lsl r4
   2397c:	mov	r1, r5
   23980:	pop	{r4, r5, pc}
   23984:	lsr	r0, r1, r4
   23988:	mov	r1, r5
   2398c:	pop	{r4, r5, pc}
   23990:	teq	r4, #0
   23994:	eor	r3, r3, #1048576	; 0x100000
   23998:	eoreq	r1, r1, #1048576	; 0x100000
   2399c:	addeq	r4, r4, #1
   239a0:	subne	r5, r5, #1
   239a4:	b	23830 <flatcc_json_parser_struct_as_root@@Base+0xafc>
   239a8:	mvns	ip, r4, asr #21
   239ac:	mvnsne	ip, r5, asr #21
   239b0:	beq	23a18 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   239b4:	teq	r4, r5
   239b8:	teqeq	r0, r2
   239bc:	beq	239d0 <flatcc_json_parser_struct_as_root@@Base+0xc9c>
   239c0:	orrs	ip, r4, r0
   239c4:	moveq	r1, r3
   239c8:	moveq	r0, r2
   239cc:	pop	{r4, r5, pc}
   239d0:	teq	r1, r3
   239d4:	movne	r1, #0
   239d8:	movne	r0, #0
   239dc:	popne	{r4, r5, pc}
   239e0:	lsrs	ip, r4, #21
   239e4:	bne	239f8 <flatcc_json_parser_struct_as_root@@Base+0xcc4>
   239e8:	lsls	r0, r0, #1
   239ec:	adcs	r1, r1, r1
   239f0:	orrcs	r1, r1, #-2147483648	; 0x80000000
   239f4:	pop	{r4, r5, pc}
   239f8:	adds	r4, r4, #4194304	; 0x400000
   239fc:	addcc	r1, r1, #1048576	; 0x100000
   23a00:	popcc	{r4, r5, pc}
   23a04:	and	r5, r1, #-2147483648	; 0x80000000
   23a08:	orr	r1, r5, #2130706432	; 0x7f000000
   23a0c:	orr	r1, r1, #15728640	; 0xf00000
   23a10:	mov	r0, #0
   23a14:	pop	{r4, r5, pc}
   23a18:	mvns	ip, r4, asr #21
   23a1c:	movne	r1, r3
   23a20:	movne	r0, r2
   23a24:	mvnseq	ip, r5, asr #21
   23a28:	movne	r3, r1
   23a2c:	movne	r2, r0
   23a30:	orrs	r4, r0, r1, lsl #12
   23a34:	orrseq	r5, r2, r3, lsl #12
   23a38:	teqeq	r1, r3
   23a3c:	orrne	r1, r1, #524288	; 0x80000
   23a40:	pop	{r4, r5, pc}
   23a44:	teq	r0, #0
   23a48:	moveq	r1, #0
   23a4c:	bxeq	lr
   23a50:	push	{r4, r5, lr}
   23a54:	mov	r4, #1024	; 0x400
   23a58:	add	r4, r4, #50	; 0x32
   23a5c:	mov	r5, #0
   23a60:	mov	r1, #0
   23a64:	b	238e0 <flatcc_json_parser_struct_as_root@@Base+0xbac>
   23a68:	teq	r0, #0
   23a6c:	moveq	r1, #0
   23a70:	bxeq	lr
   23a74:	push	{r4, r5, lr}
   23a78:	mov	r4, #1024	; 0x400
   23a7c:	add	r4, r4, #50	; 0x32
   23a80:	ands	r5, r0, #-2147483648	; 0x80000000
   23a84:	rsbmi	r0, r0, #0
   23a88:	mov	r1, #0
   23a8c:	b	238e0 <flatcc_json_parser_struct_as_root@@Base+0xbac>
   23a90:	lsls	r2, r0, #1
   23a94:	asr	r1, r2, #3
   23a98:	rrx	r1, r1
   23a9c:	lsl	r0, r2, #28
   23aa0:	andsne	r3, r2, #-16777216	; 0xff000000
   23aa4:	teqne	r3, #-16777216	; 0xff000000
   23aa8:	eorne	r1, r1, #939524096	; 0x38000000
   23aac:	bxne	lr
   23ab0:	bics	r2, r2, #-16777216	; 0xff000000
   23ab4:	bxeq	lr
   23ab8:	teq	r3, #-16777216	; 0xff000000
   23abc:	orreq	r1, r1, #524288	; 0x80000
   23ac0:	bxeq	lr
   23ac4:	push	{r4, r5, lr}
   23ac8:	mov	r4, #896	; 0x380
   23acc:	and	r5, r1, #-2147483648	; 0x80000000
   23ad0:	bic	r1, r1, #-2147483648	; 0x80000000
   23ad4:	b	238e0 <flatcc_json_parser_struct_as_root@@Base+0xbac>
   23ad8:	orrs	r2, r0, r1
   23adc:	bxeq	lr
   23ae0:	push	{r4, r5, lr}
   23ae4:	mov	r5, #0
   23ae8:	b	23b08 <flatcc_json_parser_struct_as_root@@Base+0xdd4>
   23aec:	orrs	r2, r0, r1
   23af0:	bxeq	lr
   23af4:	push	{r4, r5, lr}
   23af8:	ands	r5, r1, #-2147483648	; 0x80000000
   23afc:	bpl	23b08 <flatcc_json_parser_struct_as_root@@Base+0xdd4>
   23b00:	rsbs	r0, r0, #0
   23b04:	rsc	r1, r1, #0
   23b08:	mov	r4, #1024	; 0x400
   23b0c:	add	r4, r4, #50	; 0x32
   23b10:	lsrs	ip, r1, #22
   23b14:	beq	23884 <flatcc_json_parser_struct_as_root@@Base+0xb50>
   23b18:	mov	r2, #3
   23b1c:	lsrs	ip, ip, #3
   23b20:	addne	r2, r2, #3
   23b24:	lsrs	ip, ip, #3
   23b28:	addne	r2, r2, #3
   23b2c:	add	r2, r2, ip, lsr #3
   23b30:	rsb	r3, r2, #32
   23b34:	lsl	ip, r0, r3
   23b38:	lsr	r0, r0, r2
   23b3c:	orr	r0, r0, r1, lsl r3
   23b40:	lsr	r1, r1, r2
   23b44:	add	r4, r4, r2
   23b48:	b	23884 <flatcc_json_parser_struct_as_root@@Base+0xb50>
   23b4c:	eor	r0, r0, #-2147483648	; 0x80000000
   23b50:	b	23b58 <flatcc_json_parser_struct_as_root@@Base+0xe24>
   23b54:	eor	r1, r1, #-2147483648	; 0x80000000
   23b58:	lsls	r2, r0, #1
   23b5c:	lslsne	r3, r1, #1
   23b60:	teqne	r2, r3
   23b64:	mvnsne	ip, r2, asr #24
   23b68:	mvnsne	ip, r3, asr #24
   23b6c:	beq	23c64 <flatcc_json_parser_struct_as_root@@Base+0xf30>
   23b70:	lsr	r2, r2, #24
   23b74:	rsbs	r3, r2, r3, lsr #24
   23b78:	addgt	r2, r2, r3
   23b7c:	eorgt	r1, r0, r1
   23b80:	eorgt	r0, r1, r0
   23b84:	eorgt	r1, r0, r1
   23b88:	rsblt	r3, r3, #0
   23b8c:	cmp	r3, #25
   23b90:	bxhi	lr
   23b94:	tst	r0, #-2147483648	; 0x80000000
   23b98:	orr	r0, r0, #8388608	; 0x800000
   23b9c:	bic	r0, r0, #-16777216	; 0xff000000
   23ba0:	rsbne	r0, r0, #0
   23ba4:	tst	r1, #-2147483648	; 0x80000000
   23ba8:	orr	r1, r1, #8388608	; 0x800000
   23bac:	bic	r1, r1, #-16777216	; 0xff000000
   23bb0:	rsbne	r1, r1, #0
   23bb4:	teq	r2, r3
   23bb8:	beq	23c4c <flatcc_json_parser_struct_as_root@@Base+0xf18>
   23bbc:	sub	r2, r2, #1
   23bc0:	adds	r0, r0, r1, asr r3
   23bc4:	rsb	r3, r3, #32
   23bc8:	lsl	r1, r1, r3
   23bcc:	and	r3, r0, #-2147483648	; 0x80000000
   23bd0:	bpl	23bdc <flatcc_json_parser_struct_as_root@@Base+0xea8>
   23bd4:	rsbs	r1, r1, #0
   23bd8:	rsc	r0, r0, #0
   23bdc:	cmp	r0, #8388608	; 0x800000
   23be0:	bcc	23c14 <flatcc_json_parser_struct_as_root@@Base+0xee0>
   23be4:	cmp	r0, #16777216	; 0x1000000
   23be8:	bcc	23c00 <flatcc_json_parser_struct_as_root@@Base+0xecc>
   23bec:	lsrs	r0, r0, #1
   23bf0:	rrx	r1, r1
   23bf4:	add	r2, r2, #1
   23bf8:	cmp	r2, #254	; 0xfe
   23bfc:	bcs	23cb8 <flatcc_json_parser_struct_as_root@@Base+0xf84>
   23c00:	cmp	r1, #-2147483648	; 0x80000000
   23c04:	adc	r0, r0, r2, lsl #23
   23c08:	biceq	r0, r0, #1
   23c0c:	orr	r0, r0, r3
   23c10:	bx	lr
   23c14:	lsls	r1, r1, #1
   23c18:	adc	r0, r0, r0
   23c1c:	tst	r0, #8388608	; 0x800000
   23c20:	sub	r2, r2, #1
   23c24:	bne	23c00 <flatcc_json_parser_struct_as_root@@Base+0xecc>
   23c28:	clz	ip, r0
   23c2c:	sub	ip, ip, #8
   23c30:	subs	r2, r2, ip
   23c34:	lsl	r0, r0, ip
   23c38:	addge	r0, r0, r2, lsl #23
   23c3c:	rsblt	r2, r2, #0
   23c40:	orrge	r0, r0, r3
   23c44:	orrlt	r0, r3, r0, lsr r2
   23c48:	bx	lr
   23c4c:	teq	r2, #0
   23c50:	eor	r1, r1, #8388608	; 0x800000
   23c54:	eoreq	r0, r0, #8388608	; 0x800000
   23c58:	addeq	r2, r2, #1
   23c5c:	subne	r3, r3, #1
   23c60:	b	23bbc <flatcc_json_parser_struct_as_root@@Base+0xe88>
   23c64:	lsl	r3, r1, #1
   23c68:	mvns	ip, r2, asr #24
   23c6c:	mvnsne	ip, r3, asr #24
   23c70:	beq	23cc4 <flatcc_json_parser_struct_as_root@@Base+0xf90>
   23c74:	teq	r2, r3
   23c78:	beq	23c88 <flatcc_json_parser_struct_as_root@@Base+0xf54>
   23c7c:	teq	r2, #0
   23c80:	moveq	r0, r1
   23c84:	bx	lr
   23c88:	teq	r0, r1
   23c8c:	movne	r0, #0
   23c90:	bxne	lr
   23c94:	tst	r2, #-16777216	; 0xff000000
   23c98:	bne	23ca8 <flatcc_json_parser_struct_as_root@@Base+0xf74>
   23c9c:	lsls	r0, r0, #1
   23ca0:	orrcs	r0, r0, #-2147483648	; 0x80000000
   23ca4:	bx	lr
   23ca8:	adds	r2, r2, #33554432	; 0x2000000
   23cac:	addcc	r0, r0, #8388608	; 0x800000
   23cb0:	bxcc	lr
   23cb4:	and	r3, r0, #-2147483648	; 0x80000000
   23cb8:	orr	r0, r3, #2130706432	; 0x7f000000
   23cbc:	orr	r0, r0, #8388608	; 0x800000
   23cc0:	bx	lr
   23cc4:	mvns	r2, r2, asr #24
   23cc8:	movne	r0, r1
   23ccc:	mvnseq	r3, r3, asr #24
   23cd0:	movne	r1, r0
   23cd4:	lsls	r2, r0, #9
   23cd8:	lslseq	r3, r1, #9
   23cdc:	teqeq	r0, r1
   23ce0:	orrne	r0, r0, #4194304	; 0x400000
   23ce4:	bx	lr
   23ce8:	mov	r3, #0
   23cec:	b	23cf8 <flatcc_json_parser_struct_as_root@@Base+0xfc4>
   23cf0:	ands	r3, r0, #-2147483648	; 0x80000000
   23cf4:	rsbmi	r0, r0, #0
   23cf8:	movs	ip, r0
   23cfc:	bxeq	lr
   23d00:	orr	r3, r3, #1258291200	; 0x4b000000
   23d04:	mov	r1, r0
   23d08:	mov	r0, #0
   23d0c:	b	23d50 <flatcc_json_parser_struct_as_root@@Base+0x101c>
   23d10:	orrs	r2, r0, r1
   23d14:	bxeq	lr
   23d18:	mov	r3, #0
   23d1c:	b	23d38 <flatcc_json_parser_struct_as_root@@Base+0x1004>
   23d20:	orrs	r2, r0, r1
   23d24:	bxeq	lr
   23d28:	ands	r3, r1, #-2147483648	; 0x80000000
   23d2c:	bpl	23d38 <flatcc_json_parser_struct_as_root@@Base+0x1004>
   23d30:	rsbs	r0, r0, #0
   23d34:	rsc	r1, r1, #0
   23d38:	movs	ip, r1
   23d3c:	moveq	ip, r0
   23d40:	moveq	r1, r0
   23d44:	moveq	r0, #0
   23d48:	orr	r3, r3, #1526726656	; 0x5b000000
   23d4c:	subeq	r3, r3, #268435456	; 0x10000000
   23d50:	sub	r3, r3, #8388608	; 0x800000
   23d54:	clz	r2, ip
   23d58:	subs	r2, r2, #8
   23d5c:	sub	r3, r3, r2, lsl #23
   23d60:	blt	23d80 <flatcc_json_parser_struct_as_root@@Base+0x104c>
   23d64:	add	r3, r3, r1, lsl r2
   23d68:	lsl	ip, r0, r2
   23d6c:	rsb	r2, r2, #32
   23d70:	cmp	ip, #-2147483648	; 0x80000000
   23d74:	adc	r0, r3, r0, lsr r2
   23d78:	biceq	r0, r0, #1
   23d7c:	bx	lr
   23d80:	add	r2, r2, #32
   23d84:	lsl	ip, r1, r2
   23d88:	rsb	r2, r2, #32
   23d8c:	orrs	r0, r0, ip, lsl #1
   23d90:	adc	r0, r3, r1, lsr r2
   23d94:	biceq	r0, r0, ip, lsr #31
   23d98:	bx	lr

00023d9c <__libc_csu_init@@Base>:
   23d9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23da0:	mov	r7, r0
   23da4:	ldr	r6, [pc, #72]	; 23df4 <__libc_csu_init@@Base+0x58>
   23da8:	ldr	r5, [pc, #72]	; 23df8 <__libc_csu_init@@Base+0x5c>
   23dac:	add	r6, pc, r6
   23db0:	add	r5, pc, r5
   23db4:	sub	r6, r6, r5
   23db8:	mov	r8, r1
   23dbc:	mov	r9, r2
   23dc0:	bl	12a78 <fopen@plt-0x20>
   23dc4:	asrs	r6, r6, #2
   23dc8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   23dcc:	mov	r4, #0
   23dd0:	add	r4, r4, #1
   23dd4:	ldr	r3, [r5], #4
   23dd8:	mov	r2, r9
   23ddc:	mov	r1, r8
   23de0:	mov	r0, r7
   23de4:	blx	r3
   23de8:	cmp	r6, r4
   23dec:	bne	23dd0 <__libc_csu_init@@Base+0x34>
   23df0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23df4:	andeq	r3, r1, r8, asr r1
   23df8:	andeq	r3, r1, r0, asr r1

00023dfc <__libc_csu_fini@@Base>:
   23dfc:	bx	lr

Disassembly of section .fini:

00023e00 <.fini>:
   23e00:	push	{r3, lr}
   23e04:	pop	{r3, pc}
