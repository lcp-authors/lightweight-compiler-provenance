
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010b14 <.init>:
   10b14:	push	{r3, lr}
   10b18:	bl	10c48 <_start@@Base+0x3c>
   10b1c:	pop	{r3, pc}

Disassembly of section .plt:

00010b20 <calloc@plt-0x14>:
   10b20:	push	{lr}		; (str lr, [sp, #-4]!)
   10b24:	ldr	lr, [pc, #4]	; 10b30 <calloc@plt-0x4>
   10b28:	add	lr, pc, lr
   10b2c:	ldr	pc, [lr, #8]!
   10b30:	ldrdeq	r1, [r1], -r0

00010b34 <calloc@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b40 <strcmp@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b4c <strtol@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b58 <printf@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b64 <fopen@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b70 <free@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b7c <fgets@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b88 <realloc@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1176]!	; 0x498

00010b94 <strcpy@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1168]!	; 0x490

00010ba0 <puts@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1160]!	; 0x488

00010bac <malloc@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1152]!	; 0x480

00010bb8 <__libc_start_main@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1144]!	; 0x478

00010bc4 <__gmon_start__@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1136]!	; 0x470

00010bd0 <feof@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1128]!	; 0x468

00010bdc <strlen@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1120]!	; 0x460

00010be8 <strchr@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1112]!	; 0x458

00010bf4 <fclose@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #1104]!	; 0x450

00010c00 <abort@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #69632	; 0x11000
   10c08:	ldr	pc, [ip, #1096]!	; 0x448

Disassembly of section .text:

00010c0c <_start@@Base>:
   10c0c:	mov	fp, #0
   10c10:	mov	lr, #0
   10c14:	pop	{r1}		; (ldr r1, [sp], #4)
   10c18:	mov	r2, sp
   10c1c:	push	{r2}		; (str r2, [sp, #-4]!)
   10c20:	push	{r0}		; (str r0, [sp, #-4]!)
   10c24:	ldr	ip, [pc, #16]	; 10c3c <_start@@Base+0x30>
   10c28:	push	{ip}		; (str ip, [sp, #-4]!)
   10c2c:	ldr	r0, [pc, #12]	; 10c40 <_start@@Base+0x34>
   10c30:	ldr	r3, [pc, #12]	; 10c44 <_start@@Base+0x38>
   10c34:	bl	10bb8 <__libc_start_main@plt>
   10c38:	bl	10c00 <abort@plt>
   10c3c:	andeq	r1, r1, ip, lsl #19
   10c40:	andeq	r0, r1, ip, ror #31
   10c44:	andeq	r1, r1, ip, lsr #18
   10c48:	ldr	r3, [pc, #20]	; 10c64 <_start@@Base+0x58>
   10c4c:	ldr	r2, [pc, #20]	; 10c68 <_start@@Base+0x5c>
   10c50:	add	r3, pc, r3
   10c54:	ldr	r2, [r3, r2]
   10c58:	cmp	r2, #0
   10c5c:	bxeq	lr
   10c60:	b	10bc4 <__gmon_start__@plt>
   10c64:	andeq	r1, r1, r8, lsr #7
   10c68:	andeq	r0, r0, r4, asr r0
   10c6c:	ldr	r3, [pc, #28]	; 10c90 <_start@@Base+0x84>
   10c70:	ldr	r0, [pc, #28]	; 10c94 <_start@@Base+0x88>
   10c74:	sub	r3, r3, r0
   10c78:	cmp	r3, #6
   10c7c:	bxls	lr
   10c80:	ldr	r3, [pc, #16]	; 10c98 <_start@@Base+0x8c>
   10c84:	cmp	r3, #0
   10c88:	bxeq	lr
   10c8c:	bx	r3
   10c90:	andeq	r2, r2, r3, rrx
   10c94:	andeq	r2, r2, r0, rrx
   10c98:	andeq	r0, r0, r0
   10c9c:	ldr	r1, [pc, #36]	; 10cc8 <_start@@Base+0xbc>
   10ca0:	ldr	r0, [pc, #36]	; 10ccc <_start@@Base+0xc0>
   10ca4:	sub	r1, r1, r0
   10ca8:	asr	r1, r1, #2
   10cac:	add	r1, r1, r1, lsr #31
   10cb0:	asrs	r1, r1, #1
   10cb4:	bxeq	lr
   10cb8:	ldr	r3, [pc, #16]	; 10cd0 <_start@@Base+0xc4>
   10cbc:	cmp	r3, #0
   10cc0:	bxeq	lr
   10cc4:	bx	r3
   10cc8:	andeq	r2, r2, r0, rrx
   10ccc:	andeq	r2, r2, r0, rrx
   10cd0:	andeq	r0, r0, r0
   10cd4:	push	{r4, lr}
   10cd8:	ldr	r4, [pc, #24]	; 10cf8 <_start@@Base+0xec>
   10cdc:	ldrb	r3, [r4]
   10ce0:	cmp	r3, #0
   10ce4:	popne	{r4, pc}
   10ce8:	bl	10c6c <_start@@Base+0x60>
   10cec:	mov	r3, #1
   10cf0:	strb	r3, [r4]
   10cf4:	pop	{r4, pc}
   10cf8:	andeq	r2, r2, r0, rrx
   10cfc:	ldr	r0, [pc, #40]	; 10d2c <_start@@Base+0x120>
   10d00:	ldr	r3, [r0]
   10d04:	cmp	r3, #0
   10d08:	bne	10d10 <_start@@Base+0x104>
   10d0c:	b	10c9c <_start@@Base+0x90>
   10d10:	ldr	r3, [pc, #24]	; 10d30 <_start@@Base+0x124>
   10d14:	cmp	r3, #0
   10d18:	beq	10d0c <_start@@Base+0x100>
   10d1c:	push	{r4, lr}
   10d20:	blx	r3
   10d24:	pop	{r4, lr}
   10d28:	b	10c9c <_start@@Base+0x90>
   10d2c:	andeq	r1, r2, r4, lsl pc
   10d30:	andeq	r0, r0, r0

00010d34 <retira_duplicados@@Base>:
   10d34:	push	{r4, r5, r6, r7, r8, lr}
   10d38:	mov	r5, r0
   10d3c:	mov	r7, #0
   10d40:	b	10da0 <retira_duplicados@@Base+0x6c>
   10d44:	add	r4, r4, #1
   10d48:	mov	r0, r5
   10d4c:	bl	11260 <vetor_tamanho@@Base>
   10d50:	cmp	r4, r0
   10d54:	bge	10d9c <retira_duplicados@@Base+0x68>
   10d58:	mov	r1, r7
   10d5c:	mov	r0, r5
   10d60:	bl	11270 <vetor_elemento@@Base>
   10d64:	mov	r6, r0
   10d68:	mov	r1, r4
   10d6c:	mov	r0, r5
   10d70:	bl	11270 <vetor_elemento@@Base>
   10d74:	mov	r1, r0
   10d78:	mov	r0, r6
   10d7c:	bl	10b40 <strcmp@plt>
   10d80:	cmp	r0, #0
   10d84:	bne	10d44 <retira_duplicados@@Base+0x10>
   10d88:	mov	r1, r4
   10d8c:	mov	r0, r5
   10d90:	bl	113ac <vetor_remove@@Base>
   10d94:	sub	r4, r4, #1
   10d98:	b	10d44 <retira_duplicados@@Base+0x10>
   10d9c:	mov	r7, r8
   10da0:	mov	r0, r5
   10da4:	bl	11260 <vetor_tamanho@@Base>
   10da8:	sub	r0, r0, #1
   10dac:	cmp	r7, r0
   10db0:	addlt	r8, r7, #1
   10db4:	movlt	r4, r8
   10db8:	blt	10d48 <retira_duplicados@@Base+0x14>
   10dbc:	pop	{r4, r5, r6, r7, r8, pc}

00010dc0 <interseta@@Base>:
   10dc0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10dc4:	mov	r9, r0
   10dc8:	mov	r7, r1
   10dcc:	bl	11150 <vetor_novo@@Base>
   10dd0:	mov	fp, r0
   10dd4:	ldr	r4, [r9]
   10dd8:	ldr	r3, [r9, #8]
   10ddc:	cmp	r3, #0
   10de0:	cmple	r4, #0
   10de4:	beq	10e68 <interseta@@Base+0xa8>
   10de8:	mov	sl, #0
   10dec:	mov	r5, sl
   10df0:	mov	r8, sl
   10df4:	b	10e10 <interseta@@Base+0x50>
   10df8:	ldr	r4, [r4, #4]
   10dfc:	add	r5, r5, #1
   10e00:	ldr	r3, [r9, #8]
   10e04:	cmp	r3, r5
   10e08:	cmple	r4, #0
   10e0c:	beq	10e68 <interseta@@Base+0xa8>
   10e10:	mov	r2, r8
   10e14:	ldr	r1, [r4]
   10e18:	mov	r0, r7
   10e1c:	bl	11758 <lista_pesquisa@@Base>
   10e20:	cmp	r0, #0
   10e24:	beq	10df8 <interseta@@Base+0x38>
   10e28:	ldr	r6, [r4]
   10e2c:	mov	r2, r8
   10e30:	mov	r1, r6
   10e34:	mov	r0, r7
   10e38:	bl	11758 <lista_pesquisa@@Base>
   10e3c:	ldr	r1, [r0]
   10e40:	mov	r0, r6
   10e44:	bl	10b40 <strcmp@plt>
   10e48:	cmp	r0, #0
   10e4c:	bne	10df8 <interseta@@Base+0x38>
   10e50:	mov	r2, sl
   10e54:	ldr	r1, [r4]
   10e58:	mov	r0, fp
   10e5c:	bl	112ac <vetor_insere@@Base>
   10e60:	add	sl, sl, #1
   10e64:	b	10df8 <interseta@@Base+0x38>
   10e68:	mov	r0, fp
   10e6c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010e70 <anteriores@@Base>:
   10e70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e74:	mov	r4, r0
   10e78:	mov	r6, r1
   10e7c:	bl	11150 <vetor_novo@@Base>
   10e80:	mov	r9, r0
   10e84:	ldr	r4, [r4]
   10e88:	cmp	r4, #0
   10e8c:	beq	10ee4 <anteriores@@Base+0x74>
   10e90:	mov	r8, #10
   10e94:	mov	r7, #0
   10e98:	b	10ea8 <anteriores@@Base+0x38>
   10e9c:	ldr	r4, [r4, #4]
   10ea0:	cmp	r4, #0
   10ea4:	beq	10ee4 <anteriores@@Base+0x74>
   10ea8:	ldr	r5, [r4]
   10eac:	mov	r0, r5
   10eb0:	bl	10bdc <strlen@plt>
   10eb4:	sub	r0, r0, #5
   10eb8:	mov	r2, r8
   10ebc:	mov	r1, r7
   10ec0:	add	r0, r5, r0
   10ec4:	bl	10b4c <strtol@plt>
   10ec8:	cmp	r6, r0
   10ecc:	ble	10e9c <anteriores@@Base+0x2c>
   10ed0:	ldr	r2, [r9]
   10ed4:	ldr	r1, [r4]
   10ed8:	mov	r0, r9
   10edc:	bl	112ac <vetor_insere@@Base>
   10ee0:	b	10e9c <anteriores@@Base+0x2c>
   10ee4:	mov	r0, r9
   10ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00010eec <lerAtores@@Base>:
   10eec:	push	{r4, r5, r6, r7, r8, lr}
   10ef0:	sub	sp, sp, #256	; 0x100
   10ef4:	subs	r4, r0, #0
   10ef8:	beq	10f64 <lerAtores@@Base+0x78>
   10efc:	bl	11150 <vetor_novo@@Base>
   10f00:	mov	r5, r0
   10f04:	mov	r7, #255	; 0xff
   10f08:	mov	r6, #10
   10f0c:	mov	r8, #0
   10f10:	b	10f48 <lerAtores@@Base+0x5c>
   10f14:	mov	r2, r4
   10f18:	mov	r1, r7
   10f1c:	mov	r0, sp
   10f20:	bl	10b7c <fgets@plt>
   10f24:	mov	r1, r6
   10f28:	mov	r0, sp
   10f2c:	bl	10be8 <strchr@plt>
   10f30:	cmp	r0, #0
   10f34:	strbne	r8, [r0]
   10f38:	ldr	r2, [r5]
   10f3c:	mov	r1, sp
   10f40:	mov	r0, r5
   10f44:	bl	112ac <vetor_insere@@Base>
   10f48:	mov	r0, r4
   10f4c:	bl	10bd0 <feof@plt>
   10f50:	cmp	r0, #0
   10f54:	beq	10f14 <lerAtores@@Base+0x28>
   10f58:	mov	r0, r5
   10f5c:	add	sp, sp, #256	; 0x100
   10f60:	pop	{r4, r5, r6, r7, r8, pc}
   10f64:	mov	r5, #0
   10f68:	b	10f58 <lerAtores@@Base+0x6c>

00010f6c <lerFilmes@@Base>:
   10f6c:	push	{r4, r5, r6, r7, r8, lr}
   10f70:	sub	sp, sp, #256	; 0x100
   10f74:	subs	r4, r0, #0
   10f78:	beq	10fe4 <lerFilmes@@Base+0x78>
   10f7c:	bl	115a8 <lista_nova@@Base>
   10f80:	mov	r6, r0
   10f84:	mov	r8, #255	; 0xff
   10f88:	mov	r7, #10
   10f8c:	mov	r5, #0
   10f90:	b	10fc8 <lerFilmes@@Base+0x5c>
   10f94:	mov	r2, r4
   10f98:	mov	r1, r8
   10f9c:	mov	r0, sp
   10fa0:	bl	10b7c <fgets@plt>
   10fa4:	mov	r1, r7
   10fa8:	mov	r0, sp
   10fac:	bl	10be8 <strchr@plt>
   10fb0:	cmp	r0, #0
   10fb4:	strbne	r5, [r0]
   10fb8:	mov	r2, r5
   10fbc:	mov	r1, sp
   10fc0:	mov	r0, r6
   10fc4:	bl	11644 <lista_insere@@Base>
   10fc8:	mov	r0, r4
   10fcc:	bl	10bd0 <feof@plt>
   10fd0:	cmp	r0, #0
   10fd4:	beq	10f94 <lerFilmes@@Base+0x28>
   10fd8:	mov	r0, r6
   10fdc:	add	sp, sp, #256	; 0x100
   10fe0:	pop	{r4, r5, r6, r7, r8, pc}
   10fe4:	mov	r6, #0
   10fe8:	b	10fd8 <lerFilmes@@Base+0x6c>

00010fec <main@@Base>:
   10fec:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10ff0:	ldr	r4, [pc, #304]	; 11128 <main@@Base+0x13c>
   10ff4:	mov	r1, r4
   10ff8:	ldr	r0, [pc, #300]	; 1112c <main@@Base+0x140>
   10ffc:	bl	10b64 <fopen@plt>
   11000:	mov	r8, r0
   11004:	mov	r1, r4
   11008:	ldr	r0, [pc, #288]	; 11130 <main@@Base+0x144>
   1100c:	bl	10b64 <fopen@plt>
   11010:	mov	r7, r0
   11014:	mov	r1, r4
   11018:	ldr	r0, [pc, #276]	; 11134 <main@@Base+0x148>
   1101c:	bl	10b64 <fopen@plt>
   11020:	mov	r6, r0
   11024:	mov	r0, r8
   11028:	bl	10eec <lerAtores@@Base>
   1102c:	mov	r4, r0
   11030:	mov	r0, r7
   11034:	bl	10f6c <lerFilmes@@Base>
   11038:	mov	r5, r0
   1103c:	mov	r0, r6
   11040:	bl	10f6c <lerFilmes@@Base>
   11044:	mov	r9, r0
   11048:	mov	r0, r4
   1104c:	bl	11260 <vetor_tamanho@@Base>
   11050:	mov	r1, r0
   11054:	ldr	r0, [pc, #220]	; 11138 <main@@Base+0x14c>
   11058:	bl	10b58 <printf@plt>
   1105c:	mov	r0, r4
   11060:	bl	10d34 <retira_duplicados@@Base>
   11064:	mov	r0, r4
   11068:	bl	11260 <vetor_tamanho@@Base>
   1106c:	mov	r1, r0
   11070:	ldr	r0, [pc, #196]	; 1113c <main@@Base+0x150>
   11074:	bl	10b58 <printf@plt>
   11078:	mov	r1, r9
   1107c:	mov	r0, r5
   11080:	bl	10dc0 <interseta@@Base>
   11084:	subs	sl, r0, #0
   11088:	beq	11110 <main@@Base+0x124>
   1108c:	mov	r0, sl
   11090:	bl	11260 <vetor_tamanho@@Base>
   11094:	mov	r1, r0
   11098:	ldr	r0, [pc, #160]	; 11140 <main@@Base+0x154>
   1109c:	bl	10b58 <printf@plt>
   110a0:	mov	r1, #2000	; 0x7d0
   110a4:	mov	r0, r5
   110a8:	bl	10e70 <anteriores@@Base>
   110ac:	subs	fp, r0, #0
   110b0:	beq	1111c <main@@Base+0x130>
   110b4:	mov	r0, fp
   110b8:	bl	11260 <vetor_tamanho@@Base>
   110bc:	mov	r1, r0
   110c0:	ldr	r0, [pc, #124]	; 11144 <main@@Base+0x158>
   110c4:	bl	10b58 <printf@plt>
   110c8:	mov	r0, r4
   110cc:	bl	11174 <vetor_apaga@@Base>
   110d0:	mov	r0, sl
   110d4:	bl	11174 <vetor_apaga@@Base>
   110d8:	mov	r0, fp
   110dc:	bl	11174 <vetor_apaga@@Base>
   110e0:	mov	r0, r5
   110e4:	bl	115cc <lista_apaga@@Base>
   110e8:	mov	r0, r9
   110ec:	bl	115cc <lista_apaga@@Base>
   110f0:	mov	r0, r8
   110f4:	bl	10bf4 <fclose@plt>
   110f8:	mov	r0, r7
   110fc:	bl	10bf4 <fclose@plt>
   11100:	mov	r0, r6
   11104:	bl	10bf4 <fclose@plt>
   11108:	mov	r0, #0
   1110c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11110:	ldr	r0, [pc, #48]	; 11148 <main@@Base+0x15c>
   11114:	bl	10ba0 <puts@plt>
   11118:	b	110a0 <main@@Base+0xb4>
   1111c:	ldr	r0, [pc, #40]	; 1114c <main@@Base+0x160>
   11120:	bl	10ba0 <puts@plt>
   11124:	b	110c8 <main@@Base+0xdc>
   11128:	muleq	r1, ip, r9
   1112c:	andeq	r1, r1, r0, lsr #19
   11130:	andeq	r1, r1, ip, lsr #19
   11134:			; <UNDEFINED> instruction: 0x000119b8
   11138:	andeq	r1, r1, r4, asr #19
   1113c:	ldrdeq	r1, [r1], -r8
   11140:	strdeq	r1, [r1], -r4
   11144:	andeq	r1, r1, ip, lsr #20
   11148:	andeq	r1, r1, r4, lsl sl
   1114c:	andeq	r1, r1, r0, asr sl

00011150 <vetor_novo@@Base>:
   11150:	push	{r4, lr}
   11154:	mov	r0, #12
   11158:	bl	10bac <malloc@plt>
   1115c:	cmp	r0, #0
   11160:	movne	r3, #0
   11164:	strne	r3, [r0]
   11168:	strne	r3, [r0, #4]
   1116c:	strne	r3, [r0, #8]
   11170:	pop	{r4, pc}

00011174 <vetor_apaga@@Base>:
   11174:	push	{r4, r5, r6, lr}
   11178:	subs	r5, r0, #0
   1117c:	popeq	{r4, r5, r6, pc}
   11180:	ldr	r3, [r5]
   11184:	cmp	r3, #0
   11188:	ble	111ac <vetor_apaga@@Base+0x38>
   1118c:	mov	r4, #0
   11190:	ldr	r3, [r5, #8]
   11194:	ldr	r0, [r3, r4, lsl #2]
   11198:	bl	10b70 <free@plt>
   1119c:	add	r4, r4, #1
   111a0:	ldr	r3, [r5]
   111a4:	cmp	r3, r4
   111a8:	bgt	11190 <vetor_apaga@@Base+0x1c>
   111ac:	ldr	r0, [r5, #8]
   111b0:	bl	10b70 <free@plt>
   111b4:	mov	r0, r5
   111b8:	bl	10b70 <free@plt>
   111bc:	pop	{r4, r5, r6, pc}

000111c0 <vetor_atribui@@Base>:
   111c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   111c4:	mov	r5, r0
   111c8:	clz	r0, r0
   111cc:	lsr	r0, r0, #5
   111d0:	orrs	r3, r0, r1, lsr #31
   111d4:	bne	11248 <vetor_atribui@@Base+0x88>
   111d8:	ldr	r3, [r5]
   111dc:	cmp	r1, r3
   111e0:	bge	11250 <vetor_atribui@@Base+0x90>
   111e4:	mov	r6, r2
   111e8:	mov	r4, r1
   111ec:	mov	r0, r2
   111f0:	bl	10bdc <strlen@plt>
   111f4:	mov	r9, r0
   111f8:	ldr	r7, [r5, #8]
   111fc:	ldr	r8, [r7, r4, lsl #2]
   11200:	mov	r0, r8
   11204:	bl	10bdc <strlen@plt>
   11208:	cmp	r9, r0
   1120c:	bls	11230 <vetor_atribui@@Base+0x70>
   11210:	add	r1, r9, #1
   11214:	mov	r0, r8
   11218:	bl	10b88 <realloc@plt>
   1121c:	str	r0, [r7, r4, lsl #2]
   11220:	ldr	r3, [r5, #8]
   11224:	ldr	r3, [r3, r4, lsl #2]
   11228:	cmp	r3, #0
   1122c:	beq	11258 <vetor_atribui@@Base+0x98>
   11230:	ldr	r3, [r5, #8]
   11234:	mov	r1, r6
   11238:	ldr	r0, [r3, r4, lsl #2]
   1123c:	bl	10b94 <strcpy@plt>
   11240:	mov	r0, r4
   11244:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11248:	mvn	r0, #0
   1124c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11250:	mvn	r0, #0
   11254:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11258:	mvn	r0, #0
   1125c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011260 <vetor_tamanho@@Base>:
   11260:	cmp	r0, #0
   11264:	ldrne	r0, [r0]
   11268:	mvneq	r0, #0
   1126c:	bx	lr

00011270 <vetor_elemento@@Base>:
   11270:	mov	r3, r0
   11274:	clz	r0, r0
   11278:	lsr	r0, r0, #5
   1127c:	orrs	r2, r0, r1, lsr #31
   11280:	bne	1129c <vetor_elemento@@Base+0x2c>
   11284:	ldr	r2, [r3]
   11288:	cmp	r1, r2
   1128c:	bge	112a4 <vetor_elemento@@Base+0x34>
   11290:	ldr	r3, [r3, #8]
   11294:	ldr	r0, [r3, r1, lsl #2]
   11298:	bx	lr
   1129c:	mov	r0, #0
   112a0:	bx	lr
   112a4:	mov	r0, #0
   112a8:	bx	lr

000112ac <vetor_insere@@Base>:
   112ac:	push	{r4, r5, r6, r7, r8, lr}
   112b0:	mov	r5, r0
   112b4:	clz	r0, r0
   112b8:	lsr	r0, r0, #5
   112bc:	orrs	r3, r0, r2, lsr #31
   112c0:	bne	11394 <vetor_insere@@Base+0xe8>
   112c4:	ldr	r3, [r5]
   112c8:	cmp	r2, r3
   112cc:	bgt	1139c <vetor_insere@@Base+0xf0>
   112d0:	mov	r4, r2
   112d4:	mov	r6, r1
   112d8:	ldr	r2, [r5, #4]
   112dc:	cmp	r3, r2
   112e0:	beq	11360 <vetor_insere@@Base+0xb4>
   112e4:	ldr	r3, [r5]
   112e8:	sub	ip, r3, #1
   112ec:	cmp	r4, ip
   112f0:	bgt	11318 <vetor_insere@@Base+0x6c>
   112f4:	lsl	r3, r3, #2
   112f8:	ldr	lr, [r5, #8]
   112fc:	add	r2, lr, r3
   11300:	ldr	r2, [r2, #-4]
   11304:	str	r2, [lr, r3]
   11308:	sub	ip, ip, #1
   1130c:	sub	r3, r3, #4
   11310:	cmp	r4, ip
   11314:	ble	112f8 <vetor_insere@@Base+0x4c>
   11318:	ldr	r7, [r5, #8]
   1131c:	mov	r0, r6
   11320:	bl	10bdc <strlen@plt>
   11324:	mov	r1, #1
   11328:	add	r0, r0, r1
   1132c:	bl	10b34 <calloc@plt>
   11330:	str	r0, [r7, r4, lsl #2]
   11334:	ldr	r3, [r5, #8]
   11338:	ldr	r0, [r3, r4, lsl #2]
   1133c:	cmp	r0, #0
   11340:	beq	113a4 <vetor_insere@@Base+0xf8>
   11344:	mov	r1, r6
   11348:	bl	10b94 <strcpy@plt>
   1134c:	ldr	r3, [r5]
   11350:	add	r3, r3, #1
   11354:	str	r3, [r5]
   11358:	mov	r0, r4
   1135c:	pop	{r4, r5, r6, r7, r8, pc}
   11360:	cmp	r3, #0
   11364:	moveq	r3, #1
   11368:	lslne	r3, r3, #1
   1136c:	str	r3, [r5, #4]
   11370:	ldr	r1, [r5, #4]
   11374:	lsl	r1, r1, #2
   11378:	ldr	r0, [r5, #8]
   1137c:	bl	10b88 <realloc@plt>
   11380:	str	r0, [r5, #8]
   11384:	cmp	r0, #0
   11388:	bne	112e4 <vetor_insere@@Base+0x38>
   1138c:	mvn	r0, #0
   11390:	pop	{r4, r5, r6, r7, r8, pc}
   11394:	mvn	r0, #0
   11398:	pop	{r4, r5, r6, r7, r8, pc}
   1139c:	mvn	r0, #0
   113a0:	pop	{r4, r5, r6, r7, r8, pc}
   113a4:	mvn	r0, #0
   113a8:	pop	{r4, r5, r6, r7, r8, pc}

000113ac <vetor_remove@@Base>:
   113ac:	push	{r4, r5, r6, lr}
   113b0:	mov	r6, r0
   113b4:	clz	r0, r0
   113b8:	lsr	r0, r0, #5
   113bc:	orrs	r3, r0, r1, lsr #31
   113c0:	bne	1142c <vetor_remove@@Base+0x80>
   113c4:	ldr	r3, [r6]
   113c8:	cmp	r1, r3
   113cc:	bge	11434 <vetor_remove@@Base+0x88>
   113d0:	mov	r4, r1
   113d4:	lsl	r5, r1, #2
   113d8:	ldr	r3, [r6, #8]
   113dc:	ldr	r0, [r3, r1, lsl #2]
   113e0:	bl	10b70 <free@plt>
   113e4:	add	r1, r4, #1
   113e8:	ldr	r0, [r6]
   113ec:	cmp	r1, r0
   113f0:	bge	1141c <vetor_remove@@Base+0x70>
   113f4:	mov	r3, r5
   113f8:	ldr	ip, [r6, #8]
   113fc:	add	r2, r3, #4
   11400:	ldr	r0, [ip, r2]
   11404:	str	r0, [ip, r3]
   11408:	add	r1, r1, #1
   1140c:	ldr	r0, [r6]
   11410:	mov	r3, r2
   11414:	cmp	r0, r1
   11418:	bgt	113f8 <vetor_remove@@Base+0x4c>
   1141c:	sub	r0, r0, #1
   11420:	str	r0, [r6]
   11424:	mov	r0, #0
   11428:	pop	{r4, r5, r6, pc}
   1142c:	mvn	r0, #0
   11430:	pop	{r4, r5, r6, pc}
   11434:	mvn	r0, #0
   11438:	pop	{r4, r5, r6, pc}

0001143c <vetor_pesquisa@@Base>:
   1143c:	push	{r4, r5, r6, r7, r8, lr}
   11440:	cmp	r0, #0
   11444:	beq	11490 <vetor_pesquisa@@Base+0x54>
   11448:	ldr	r7, [r0]
   1144c:	cmp	r7, #0
   11450:	ble	11498 <vetor_pesquisa@@Base+0x5c>
   11454:	mov	r6, r1
   11458:	ldr	r5, [r0, #8]
   1145c:	sub	r5, r5, #4
   11460:	mov	r4, #0
   11464:	mov	r1, r6
   11468:	ldr	r0, [r5, #4]!
   1146c:	bl	10b40 <strcmp@plt>
   11470:	cmp	r0, #0
   11474:	beq	11488 <vetor_pesquisa@@Base+0x4c>
   11478:	add	r4, r4, #1
   1147c:	cmp	r4, r7
   11480:	bne	11464 <vetor_pesquisa@@Base+0x28>
   11484:	mvn	r4, #0
   11488:	mov	r0, r4
   1148c:	pop	{r4, r5, r6, r7, r8, pc}
   11490:	mvn	r4, #0
   11494:	b	11488 <vetor_pesquisa@@Base+0x4c>
   11498:	mvn	r4, #0
   1149c:	b	11488 <vetor_pesquisa@@Base+0x4c>

000114a0 <vetor_ordena@@Base>:
   114a0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   114a4:	subs	r8, r0, #0
   114a8:	beq	11538 <vetor_ordena@@Base+0x98>
   114ac:	ldr	r3, [r8]
   114b0:	cmp	r3, #1
   114b4:	ble	11540 <vetor_ordena@@Base+0xa0>
   114b8:	mov	fp, #4
   114bc:	mov	sl, #1
   114c0:	b	114e4 <vetor_ordena@@Base+0x44>
   114c4:	mov	r6, sl
   114c8:	ldr	r3, [r8, #8]
   114cc:	str	r9, [r3, r6, lsl #2]
   114d0:	add	sl, sl, #1
   114d4:	add	fp, fp, #4
   114d8:	ldr	r3, [r8]
   114dc:	cmp	r3, sl
   114e0:	ble	11530 <vetor_ordena@@Base+0x90>
   114e4:	ldr	r3, [r8, #8]
   114e8:	ldr	r9, [r3, fp]
   114ec:	cmp	sl, #0
   114f0:	ble	114c4 <vetor_ordena@@Base+0x24>
   114f4:	mov	r4, fp
   114f8:	mov	r6, sl
   114fc:	ldr	r5, [r8, #8]
   11500:	sub	r7, r4, #4
   11504:	ldr	r1, [r5, r7]
   11508:	mov	r0, r9
   1150c:	bl	10b40 <strcmp@plt>
   11510:	cmp	r0, #0
   11514:	bge	114c8 <vetor_ordena@@Base+0x28>
   11518:	ldr	r3, [r5, r7]
   1151c:	str	r3, [r5, r4]
   11520:	sub	r4, r4, #4
   11524:	subs	r6, r6, #1
   11528:	bne	114fc <vetor_ordena@@Base+0x5c>
   1152c:	b	114c8 <vetor_ordena@@Base+0x28>
   11530:	mov	r0, #0
   11534:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11538:	mvn	r0, #0
   1153c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11540:	mov	r0, #0
   11544:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011548 <novo_str@@Base>:
   11548:	push	{r4, r5, r6, lr}
   1154c:	mov	r5, r0
   11550:	mov	r0, #12
   11554:	bl	10bac <malloc@plt>
   11558:	subs	r4, r0, #0
   1155c:	beq	11590 <novo_str@@Base+0x48>
   11560:	mov	r0, r5
   11564:	bl	10bdc <strlen@plt>
   11568:	add	r0, r0, #1
   1156c:	bl	10bac <malloc@plt>
   11570:	str	r0, [r4]
   11574:	cmp	r0, #0
   11578:	beq	11598 <novo_str@@Base+0x50>
   1157c:	mov	r1, r5
   11580:	bl	10b94 <strcpy@plt>
   11584:	mov	r3, #0
   11588:	str	r3, [r4, #4]
   1158c:	str	r3, [r4, #8]
   11590:	mov	r0, r4
   11594:	pop	{r4, r5, r6, pc}
   11598:	mov	r0, r4
   1159c:	bl	10b70 <free@plt>
   115a0:	mov	r4, #0
   115a4:	b	11590 <novo_str@@Base+0x48>

000115a8 <lista_nova@@Base>:
   115a8:	push	{r4, lr}
   115ac:	mov	r0, #12
   115b0:	bl	10bac <malloc@plt>
   115b4:	cmp	r0, #0
   115b8:	movne	r3, #0
   115bc:	strne	r3, [r0]
   115c0:	strne	r3, [r0, #4]
   115c4:	strne	r3, [r0, #8]
   115c8:	pop	{r4, pc}

000115cc <lista_apaga@@Base>:
   115cc:	push	{r4, r5, r6, lr}
   115d0:	subs	r5, r0, #0
   115d4:	popeq	{r4, r5, r6, pc}
   115d8:	ldr	r4, [r5]
   115dc:	cmp	r4, #0
   115e0:	beq	11608 <lista_apaga@@Base+0x3c>
   115e4:	ldr	r3, [r4, #4]
   115e8:	str	r3, [r5]
   115ec:	ldr	r0, [r4]
   115f0:	bl	10b70 <free@plt>
   115f4:	mov	r0, r4
   115f8:	bl	10b70 <free@plt>
   115fc:	ldr	r4, [r5]
   11600:	cmp	r4, #0
   11604:	bne	115e4 <lista_apaga@@Base+0x18>
   11608:	mov	r0, r5
   1160c:	bl	10b70 <free@plt>
   11610:	pop	{r4, r5, r6, pc}

00011614 <lista_tamanho@@Base>:
   11614:	cmp	r0, #0
   11618:	ldrne	r0, [r0, #8]
   1161c:	mvneq	r0, #0
   11620:	bx	lr

00011624 <lista_inicio@@Base>:
   11624:	cmp	r0, #0
   11628:	ldrne	r0, [r0]
   1162c:	moveq	r0, #0
   11630:	bx	lr

00011634 <lista_fim@@Base>:
   11634:	cmp	r0, #0
   11638:	ldrne	r0, [r0, #4]
   1163c:	moveq	r0, #0
   11640:	bx	lr

00011644 <lista_insere@@Base>:
   11644:	cmp	r1, #0
   11648:	cmpne	r0, #0
   1164c:	beq	116dc <lista_insere@@Base+0x98>
   11650:	push	{r4, r5, r6, lr}
   11654:	mov	r5, r0
   11658:	mov	r0, r1
   1165c:	mov	r4, r2
   11660:	bl	11548 <novo_str@@Base>
   11664:	cmp	r0, #0
   11668:	popeq	{r4, r5, r6, pc}
   1166c:	ldr	r3, [r5, #8]
   11670:	add	r3, r3, #1
   11674:	str	r3, [r5, #8]
   11678:	cmp	r4, #0
   1167c:	beq	116b4 <lista_insere@@Base+0x70>
   11680:	ldr	r3, [r5]
   11684:	cmp	r4, r3
   11688:	streq	r4, [r0, #4]
   1168c:	ldreq	r3, [r5]
   11690:	streq	r0, [r3, #8]
   11694:	streq	r0, [r5]
   11698:	ldrne	r3, [r4, #8]
   1169c:	strne	r3, [r0, #8]
   116a0:	strne	r4, [r0, #4]
   116a4:	ldrne	r3, [r4, #8]
   116a8:	strne	r0, [r3, #4]
   116ac:	strne	r0, [r4, #8]
   116b0:	pop	{r4, r5, r6, pc}
   116b4:	ldr	r3, [r5]
   116b8:	cmp	r3, #0
   116bc:	streq	r0, [r5, #4]
   116c0:	streq	r0, [r5]
   116c4:	ldrne	r3, [r5, #4]
   116c8:	strne	r3, [r0, #8]
   116cc:	ldrne	r3, [r5, #4]
   116d0:	strne	r0, [r3, #4]
   116d4:	strne	r0, [r5, #4]
   116d8:	pop	{r4, r5, r6, pc}
   116dc:	mov	r0, #0
   116e0:	bx	lr

000116e4 <lista_remove@@Base>:
   116e4:	push	{r4, r5, r6, lr}
   116e8:	cmp	r1, #0
   116ec:	cmpne	r0, #0
   116f0:	beq	11750 <lista_remove@@Base+0x6c>
   116f4:	mov	r4, r1
   116f8:	ldr	r2, [r0, #8]
   116fc:	sub	r2, r2, #1
   11700:	str	r2, [r0, #8]
   11704:	ldr	r2, [r1, #8]
   11708:	cmp	r2, #0
   1170c:	ldrne	r1, [r1, #4]
   11710:	strne	r1, [r2, #4]
   11714:	ldreq	r2, [r4, #4]
   11718:	streq	r2, [r0]
   1171c:	ldr	r2, [r4, #4]
   11720:	cmp	r2, #0
   11724:	ldrne	r1, [r4, #8]
   11728:	strne	r1, [r2, #8]
   1172c:	ldreq	r2, [r4, #8]
   11730:	streq	r2, [r0, #4]
   11734:	ldr	r5, [r4, #4]
   11738:	ldr	r0, [r4]
   1173c:	bl	10b70 <free@plt>
   11740:	mov	r0, r4
   11744:	bl	10b70 <free@plt>
   11748:	mov	r0, r5
   1174c:	pop	{r4, r5, r6, pc}
   11750:	mov	r5, #0
   11754:	b	11748 <lista_remove@@Base+0x64>

00011758 <lista_pesquisa@@Base>:
   11758:	push	{r4, r5, r6, lr}
   1175c:	cmp	r1, #0
   11760:	cmpne	r0, #0
   11764:	beq	117e4 <lista_pesquisa@@Base+0x8c>
   11768:	mov	r5, r1
   1176c:	cmp	r2, #1
   11770:	movhi	r4, #0
   11774:	bhi	117ac <lista_pesquisa@@Base+0x54>
   11778:	cmp	r2, #0
   1177c:	bne	117b4 <lista_pesquisa@@Base+0x5c>
   11780:	ldr	r4, [r0]
   11784:	cmp	r4, #0
   11788:	beq	117ac <lista_pesquisa@@Base+0x54>
   1178c:	mov	r1, r5
   11790:	ldr	r0, [r4]
   11794:	bl	10b40 <strcmp@plt>
   11798:	cmp	r0, #0
   1179c:	beq	117ac <lista_pesquisa@@Base+0x54>
   117a0:	ldr	r4, [r4, #4]
   117a4:	cmp	r4, #0
   117a8:	bne	1178c <lista_pesquisa@@Base+0x34>
   117ac:	mov	r0, r4
   117b0:	pop	{r4, r5, r6, pc}
   117b4:	ldr	r4, [r0, #4]
   117b8:	cmp	r4, #0
   117bc:	beq	117ac <lista_pesquisa@@Base+0x54>
   117c0:	mov	r1, r5
   117c4:	ldr	r0, [r4]
   117c8:	bl	10b40 <strcmp@plt>
   117cc:	cmp	r0, #0
   117d0:	beq	117ac <lista_pesquisa@@Base+0x54>
   117d4:	ldr	r4, [r4, #8]
   117d8:	cmp	r4, #0
   117dc:	bne	117c0 <lista_pesquisa@@Base+0x68>
   117e0:	b	117ac <lista_pesquisa@@Base+0x54>
   117e4:	mov	r4, #0
   117e8:	b	117ac <lista_pesquisa@@Base+0x54>

000117ec <lista_ordena@@Base>:
   117ec:	cmp	r0, #0
   117f0:	beq	11868 <lista_ordena@@Base+0x7c>
   117f4:	push	{r4, r5, r6, lr}
   117f8:	ldr	r5, [r0]
   117fc:	ldr	r4, [r5, #4]
   11800:	cmp	r4, #0
   11804:	movne	r6, r5
   11808:	bne	1185c <lista_ordena@@Base+0x70>
   1180c:	mov	r0, #0
   11810:	pop	{r4, r5, r6, pc}
   11814:	ldr	r1, [r5]
   11818:	ldr	r0, [r4]
   1181c:	bl	10b40 <strcmp@plt>
   11820:	cmp	r0, #0
   11824:	movlt	r5, r4
   11828:	ldr	r4, [r4, #4]
   1182c:	cmp	r4, #0
   11830:	bne	11814 <lista_ordena@@Base+0x28>
   11834:	cmp	r5, r6
   11838:	ldrne	r3, [r6]
   1183c:	ldrne	r2, [r5]
   11840:	strne	r2, [r6]
   11844:	strne	r3, [r5]
   11848:	ldr	r6, [r6, #4]
   1184c:	ldr	r4, [r6, #4]
   11850:	mov	r5, r6
   11854:	cmp	r4, #0
   11858:	beq	11870 <lista_ordena@@Base+0x84>
   1185c:	cmp	r4, #0
   11860:	bne	11814 <lista_ordena@@Base+0x28>
   11864:	b	11848 <lista_ordena@@Base+0x5c>
   11868:	mvn	r0, #0
   1186c:	bx	lr
   11870:	mov	r0, #0
   11874:	pop	{r4, r5, r6, pc}

00011878 <lista_inverte@@Base>:
   11878:	subs	r2, r0, #0
   1187c:	beq	1191c <lista_inverte@@Base+0xa4>
   11880:	ldr	r1, [r2, #8]
   11884:	cmp	r1, #1
   11888:	ble	11924 <lista_inverte@@Base+0xac>
   1188c:	ldr	r3, [r2]
   11890:	ldr	r3, [r3, #4]
   11894:	sub	r1, r1, #2
   11898:	cmp	r1, #0
   1189c:	ble	118ec <lista_inverte@@Base+0x74>
   118a0:	mov	r0, #0
   118a4:	ldr	r1, [r3, #8]
   118a8:	ldr	ip, [r3, #4]
   118ac:	str	ip, [r1, #4]
   118b0:	ldr	r1, [r3, #4]
   118b4:	ldr	ip, [r3, #8]
   118b8:	str	ip, [r1, #8]
   118bc:	ldr	r1, [r3, #4]
   118c0:	ldr	ip, [r2]
   118c4:	str	ip, [r3, #4]
   118c8:	ldr	ip, [r2]
   118cc:	str	r3, [ip, #8]
   118d0:	str	r3, [r2]
   118d4:	add	r0, r0, #1
   118d8:	mov	r3, r1
   118dc:	ldr	r1, [r2, #8]
   118e0:	sub	r1, r1, #2
   118e4:	cmp	r1, r0
   118e8:	bgt	118a4 <lista_inverte@@Base+0x2c>
   118ec:	ldr	r3, [r2, #4]
   118f0:	ldr	r1, [r3, #8]
   118f4:	str	r1, [r2, #4]
   118f8:	mov	r0, #0
   118fc:	str	r0, [r1, #4]
   11900:	str	r0, [r3, #8]
   11904:	ldr	r1, [r2]
   11908:	str	r1, [r3, #4]
   1190c:	ldr	r1, [r2]
   11910:	str	r3, [r1, #8]
   11914:	str	r3, [r2]
   11918:	bx	lr
   1191c:	mvn	r0, #0
   11920:	bx	lr
   11924:	mov	r0, #0
   11928:	bx	lr

0001192c <__libc_csu_init@@Base>:
   1192c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11930:	mov	r7, r0
   11934:	ldr	r6, [pc, #72]	; 11984 <__libc_csu_init@@Base+0x58>
   11938:	ldr	r5, [pc, #72]	; 11988 <__libc_csu_init@@Base+0x5c>
   1193c:	add	r6, pc, r6
   11940:	add	r5, pc, r5
   11944:	sub	r6, r6, r5
   11948:	mov	r8, r1
   1194c:	mov	r9, r2
   11950:	bl	10b14 <calloc@plt-0x20>
   11954:	asrs	r6, r6, #2
   11958:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1195c:	mov	r4, #0
   11960:	add	r4, r4, #1
   11964:	ldr	r3, [r5], #4
   11968:	mov	r2, r9
   1196c:	mov	r1, r8
   11970:	mov	r0, r7
   11974:	blx	r3
   11978:	cmp	r6, r4
   1197c:	bne	11960 <__libc_csu_init@@Base+0x34>
   11980:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11984:	andeq	r0, r1, ip, asr #11
   11988:	andeq	r0, r1, r4, asr #11

0001198c <__libc_csu_fini@@Base>:
   1198c:	bx	lr

Disassembly of section .fini:

00011990 <.fini>:
   11990:	push	{r3, lr}
   11994:	pop	{r3, pc}
