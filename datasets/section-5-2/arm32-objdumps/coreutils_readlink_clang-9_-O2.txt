
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010d6c <.init>:
   10d6c:	push	{r3, lr}
   10d70:	bl	1102c <__mempcpy_chk@plt+0x48>
   10d74:	pop	{r3, pc}

Disassembly of section .plt:

00010d78 <calloc@plt-0x14>:
   10d78:	push	{lr}		; (str lr, [sp, #-4]!)
   10d7c:	ldr	lr, [pc, #4]	; 10d88 <calloc@plt-0x4>
   10d80:	add	lr, pc, lr
   10d84:	ldr	pc, [lr, #8]!
   10d88:	andeq	r7, r1, r8, ror r2

00010d8c <calloc@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #94208	; 0x17000
   10d94:	ldr	pc, [ip, #632]!	; 0x278

00010d98 <fputs_unlocked@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #94208	; 0x17000
   10da0:	ldr	pc, [ip, #624]!	; 0x270

00010da4 <raise@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #94208	; 0x17000
   10dac:	ldr	pc, [ip, #616]!	; 0x268

00010db0 <strcmp@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #94208	; 0x17000
   10db8:	ldr	pc, [ip, #608]!	; 0x260

00010dbc <fflush@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #94208	; 0x17000
   10dc4:	ldr	pc, [ip, #600]!	; 0x258

00010dc8 <memmove@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #94208	; 0x17000
   10dd0:	ldr	pc, [ip, #592]!	; 0x250

00010dd4 <free@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #94208	; 0x17000
   10ddc:	ldr	pc, [ip, #584]!	; 0x248

00010de0 <faccessat@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #94208	; 0x17000
   10de8:	ldr	pc, [ip, #576]!	; 0x240

00010dec <_exit@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #94208	; 0x17000
   10df4:	ldr	pc, [ip, #568]!	; 0x238

00010df8 <memcpy@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #94208	; 0x17000
   10e00:	ldr	pc, [ip, #560]!	; 0x230

00010e04 <mbsinit@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #94208	; 0x17000
   10e0c:	ldr	pc, [ip, #552]!	; 0x228

00010e10 <dcgettext@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #94208	; 0x17000
   10e18:	ldr	pc, [ip, #544]!	; 0x220

00010e1c <realloc@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #94208	; 0x17000
   10e24:	ldr	pc, [ip, #536]!	; 0x218

00010e28 <textdomain@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #94208	; 0x17000
   10e30:	ldr	pc, [ip, #528]!	; 0x210

00010e34 <rawmemchr@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #94208	; 0x17000
   10e3c:	ldr	pc, [ip, #520]!	; 0x208

00010e40 <iswprint@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #94208	; 0x17000
   10e48:	ldr	pc, [ip, #512]!	; 0x200

00010e4c <readlink@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #504]!	; 0x1f8

00010e58 <fwrite@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #496]!	; 0x1f0

00010e64 <lseek64@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #488]!	; 0x1e8

00010e70 <__ctype_get_mb_cur_max@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #480]!	; 0x1e0

00010e7c <__fpending@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #472]!	; 0x1d8

00010e88 <mbrtowc@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #464]!	; 0x1d0

00010e94 <error@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #456]!	; 0x1c8

00010ea0 <malloc@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #94208	; 0x17000
   10ea8:	ldr	pc, [ip, #448]!	; 0x1c0

00010eac <__libc_start_main@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #94208	; 0x17000
   10eb4:	ldr	pc, [ip, #440]!	; 0x1b8

00010eb8 <__freading@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #94208	; 0x17000
   10ec0:	ldr	pc, [ip, #432]!	; 0x1b0

00010ec4 <__gmon_start__@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #94208	; 0x17000
   10ecc:	ldr	pc, [ip, #424]!	; 0x1a8

00010ed0 <getopt_long@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #94208	; 0x17000
   10ed8:	ldr	pc, [ip, #416]!	; 0x1a0

00010edc <__ctype_b_loc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #94208	; 0x17000
   10ee4:	ldr	pc, [ip, #408]!	; 0x198

00010ee8 <getcwd@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #94208	; 0x17000
   10ef0:	ldr	pc, [ip, #400]!	; 0x190

00010ef4 <exit@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #94208	; 0x17000
   10efc:	ldr	pc, [ip, #392]!	; 0x188

00010f00 <bcmp@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #94208	; 0x17000
   10f08:	ldr	pc, [ip, #384]!	; 0x180

00010f0c <strlen@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #94208	; 0x17000
   10f14:	ldr	pc, [ip, #376]!	; 0x178

00010f18 <__errno_location@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #94208	; 0x17000
   10f20:	ldr	pc, [ip, #368]!	; 0x170

00010f24 <__cxa_atexit@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #94208	; 0x17000
   10f2c:	ldr	pc, [ip, #360]!	; 0x168

00010f30 <memset@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #94208	; 0x17000
   10f38:	ldr	pc, [ip, #352]!	; 0x160

00010f3c <__printf_chk@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #94208	; 0x17000
   10f44:	ldr	pc, [ip, #344]!	; 0x158

00010f48 <fileno@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #94208	; 0x17000
   10f50:	ldr	pc, [ip, #336]!	; 0x150

00010f54 <__fprintf_chk@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #94208	; 0x17000
   10f5c:	ldr	pc, [ip, #328]!	; 0x148

00010f60 <fclose@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #94208	; 0x17000
   10f68:	ldr	pc, [ip, #320]!	; 0x140

00010f6c <fseeko64@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #94208	; 0x17000
   10f74:	ldr	pc, [ip, #312]!	; 0x138

00010f78 <__overflow@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #94208	; 0x17000
   10f80:	ldr	pc, [ip, #304]!	; 0x130

00010f84 <setlocale@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #94208	; 0x17000
   10f8c:	ldr	pc, [ip, #296]!	; 0x128

00010f90 <strrchr@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #94208	; 0x17000
   10f98:	ldr	pc, [ip, #288]!	; 0x120

00010f9c <nl_langinfo@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #94208	; 0x17000
   10fa4:	ldr	pc, [ip, #280]!	; 0x118

00010fa8 <bindtextdomain@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #94208	; 0x17000
   10fb0:	ldr	pc, [ip, #272]!	; 0x110

00010fb4 <__xstat64@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #94208	; 0x17000
   10fbc:	ldr	pc, [ip, #264]!	; 0x108

00010fc0 <strncmp@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #94208	; 0x17000
   10fc8:	ldr	pc, [ip, #256]!	; 0x100

00010fcc <abort@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #94208	; 0x17000
   10fd4:	ldr	pc, [ip, #248]!	; 0xf8

00010fd8 <strspn@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #94208	; 0x17000
   10fe0:	ldr	pc, [ip, #240]!	; 0xf0

00010fe4 <__mempcpy_chk@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #94208	; 0x17000
   10fec:	ldr	pc, [ip, #232]!	; 0xe8

Disassembly of section .text:

00010ff0 <.text>:
   10ff0:	mov	fp, #0
   10ff4:	mov	lr, #0
   10ff8:	pop	{r1}		; (ldr r1, [sp], #4)
   10ffc:	mov	r2, sp
   11000:	push	{r2}		; (str r2, [sp, #-4]!)
   11004:	push	{r0}		; (str r0, [sp, #-4]!)
   11008:	ldr	ip, [pc, #16]	; 11020 <__mempcpy_chk@plt+0x3c>
   1100c:	push	{ip}		; (str ip, [sp, #-4]!)
   11010:	ldr	r0, [pc, #12]	; 11024 <__mempcpy_chk@plt+0x40>
   11014:	ldr	r3, [pc, #12]	; 11028 <__mempcpy_chk@plt+0x44>
   11018:	bl	10eac <__libc_start_main@plt>
   1101c:	bl	10fcc <abort@plt>
   11020:	strdeq	r6, [r1], -r4
   11024:	andeq	r1, r1, ip, asr r3
   11028:	muleq	r1, r4, r6
   1102c:	ldr	r3, [pc, #20]	; 11048 <__mempcpy_chk@plt+0x64>
   11030:	ldr	r2, [pc, #20]	; 1104c <__mempcpy_chk@plt+0x68>
   11034:	add	r3, pc, r3
   11038:	ldr	r2, [r3, r2]
   1103c:	cmp	r2, #0
   11040:	bxeq	lr
   11044:	b	10ec4 <__gmon_start__@plt>
   11048:	andeq	r6, r1, r4, asr #31
   1104c:	ldrdeq	r0, [r0], -r8
   11050:	ldr	r0, [pc, #24]	; 11070 <__mempcpy_chk@plt+0x8c>
   11054:	ldr	r3, [pc, #24]	; 11074 <__mempcpy_chk@plt+0x90>
   11058:	cmp	r3, r0
   1105c:	bxeq	lr
   11060:	ldr	r3, [pc, #16]	; 11078 <__mempcpy_chk@plt+0x94>
   11064:	cmp	r3, #0
   11068:	bxeq	lr
   1106c:	bx	r3
   11070:	andeq	r8, r2, r0, lsr r1
   11074:	andeq	r8, r2, r0, lsr r1
   11078:	andeq	r0, r0, r0
   1107c:	ldr	r0, [pc, #36]	; 110a8 <__mempcpy_chk@plt+0xc4>
   11080:	ldr	r1, [pc, #36]	; 110ac <__mempcpy_chk@plt+0xc8>
   11084:	sub	r1, r1, r0
   11088:	asr	r1, r1, #2
   1108c:	add	r1, r1, r1, lsr #31
   11090:	asrs	r1, r1, #1
   11094:	bxeq	lr
   11098:	ldr	r3, [pc, #16]	; 110b0 <__mempcpy_chk@plt+0xcc>
   1109c:	cmp	r3, #0
   110a0:	bxeq	lr
   110a4:	bx	r3
   110a8:	andeq	r8, r2, r0, lsr r1
   110ac:	andeq	r8, r2, r0, lsr r1
   110b0:	andeq	r0, r0, r0
   110b4:	push	{r4, lr}
   110b8:	ldr	r4, [pc, #24]	; 110d8 <__mempcpy_chk@plt+0xf4>
   110bc:	ldrb	r3, [r4]
   110c0:	cmp	r3, #0
   110c4:	popne	{r4, pc}
   110c8:	bl	11050 <__mempcpy_chk@plt+0x6c>
   110cc:	mov	r3, #1
   110d0:	strb	r3, [r4]
   110d4:	pop	{r4, pc}
   110d8:	andeq	r8, r2, r8, asr #2
   110dc:	b	1107c <__mempcpy_chk@plt+0x98>
   110e0:	push	{fp, lr}
   110e4:	mov	fp, sp
   110e8:	sub	sp, sp, #56	; 0x38
   110ec:	mov	r4, r0
   110f0:	cmp	r0, #0
   110f4:	bne	11318 <__mempcpy_chk@plt+0x334>
   110f8:	movw	r1, #26435	; 0x6743
   110fc:	mov	r0, #0
   11100:	mov	r2, #5
   11104:	movt	r1, #1
   11108:	bl	10e10 <dcgettext@plt>
   1110c:	mov	r1, r0
   11110:	movw	r0, #33108	; 0x8154
   11114:	movt	r0, #2
   11118:	ldr	r2, [r0]
   1111c:	mov	r0, #1
   11120:	bl	10f3c <__printf_chk@plt>
   11124:	movw	r1, #26466	; 0x6762
   11128:	mov	r0, #0
   1112c:	mov	r2, #5
   11130:	movt	r1, #1
   11134:	bl	10e10 <dcgettext@plt>
   11138:	movw	r7, #33092	; 0x8144
   1113c:	movt	r7, #2
   11140:	ldr	r1, [r7]
   11144:	bl	10d98 <fputs_unlocked@plt>
   11148:	movw	r1, #26522	; 0x679a
   1114c:	mov	r0, #0
   11150:	mov	r2, #5
   11154:	movt	r1, #1
   11158:	bl	10e10 <dcgettext@plt>
   1115c:	ldr	r1, [r7]
   11160:	bl	10d98 <fputs_unlocked@plt>
   11164:	movw	r1, #26959	; 0x694f
   11168:	mov	r0, #0
   1116c:	mov	r2, #5
   11170:	movt	r1, #1
   11174:	bl	10e10 <dcgettext@plt>
   11178:	ldr	r1, [r7]
   1117c:	bl	10d98 <fputs_unlocked@plt>
   11180:	movw	r1, #27480	; 0x6b58
   11184:	mov	r0, #0
   11188:	mov	r2, #5
   1118c:	movt	r1, #1
   11190:	bl	10e10 <dcgettext@plt>
   11194:	ldr	r1, [r7]
   11198:	bl	10d98 <fputs_unlocked@plt>
   1119c:	movw	r1, #27525	; 0x6b85
   111a0:	mov	r0, #0
   111a4:	mov	r2, #5
   111a8:	movt	r1, #1
   111ac:	bl	10e10 <dcgettext@plt>
   111b0:	ldr	r1, [r7]
   111b4:	bl	10d98 <fputs_unlocked@plt>
   111b8:	movw	r0, #28312	; 0x6e98
   111bc:	mov	r2, #48	; 0x30
   111c0:	mov	r6, sp
   111c4:	movw	r5, #27579	; 0x6bbb
   111c8:	movt	r0, #1
   111cc:	movt	r5, #1
   111d0:	add	r1, r0, #32
   111d4:	add	r3, r0, #16
   111d8:	vld1.64	{d18-d19}, [r0], r2
   111dc:	vld1.64	{d16-d17}, [r1]
   111e0:	vld1.64	{d20-d21}, [r3]
   111e4:	vldr	d22, [r0]
   111e8:	add	r1, r6, #32
   111ec:	add	r0, r6, #16
   111f0:	vst1.64	{d16-d17}, [r1]
   111f4:	movw	r1, #27713	; 0x6c41
   111f8:	vst1.64	{d20-d21}, [r0]
   111fc:	mov	r0, r6
   11200:	movt	r1, #1
   11204:	vst1.64	{d18-d19}, [r0], r2
   11208:	vstr	d22, [r0]
   1120c:	mov	r0, r5
   11210:	bl	10db0 <strcmp@plt>
   11214:	cmp	r0, #0
   11218:	ldrne	r1, [r6, #8]!
   1121c:	cmpne	r1, #0
   11220:	bne	1120c <__mempcpy_chk@plt+0x228>
   11224:	movw	r1, #27808	; 0x6ca0
   11228:	ldr	r6, [r6, #4]
   1122c:	mov	r0, #0
   11230:	mov	r2, #5
   11234:	movt	r1, #1
   11238:	bl	10e10 <dcgettext@plt>
   1123c:	movw	r2, #27621	; 0x6be5
   11240:	movw	r3, #27831	; 0x6cb7
   11244:	mov	r1, r0
   11248:	mov	r0, #1
   1124c:	movt	r2, #1
   11250:	movt	r3, #1
   11254:	bl	10f3c <__printf_chk@plt>
   11258:	cmp	r6, #0
   1125c:	mov	r0, #5
   11260:	mov	r1, #0
   11264:	moveq	r6, r5
   11268:	bl	10f84 <setlocale@plt>
   1126c:	cmp	r0, #0
   11270:	beq	112a8 <__mempcpy_chk@plt+0x2c4>
   11274:	movw	r1, #27871	; 0x6cdf
   11278:	mov	r2, #3
   1127c:	movt	r1, #1
   11280:	bl	10fc0 <strncmp@plt>
   11284:	cmp	r0, #0
   11288:	beq	112a8 <__mempcpy_chk@plt+0x2c4>
   1128c:	movw	r1, #27875	; 0x6ce3
   11290:	mov	r0, #0
   11294:	mov	r2, #5
   11298:	movt	r1, #1
   1129c:	bl	10e10 <dcgettext@plt>
   112a0:	ldr	r1, [r7]
   112a4:	bl	10d98 <fputs_unlocked@plt>
   112a8:	movw	r1, #27946	; 0x6d2a
   112ac:	mov	r0, #0
   112b0:	mov	r2, #5
   112b4:	movt	r1, #1
   112b8:	bl	10e10 <dcgettext@plt>
   112bc:	movw	r2, #27831	; 0x6cb7
   112c0:	mov	r1, r0
   112c4:	mov	r0, #1
   112c8:	mov	r3, r5
   112cc:	movt	r2, #1
   112d0:	bl	10f3c <__printf_chk@plt>
   112d4:	movw	r1, #27973	; 0x6d45
   112d8:	mov	r0, #0
   112dc:	mov	r2, #5
   112e0:	movt	r1, #1
   112e4:	bl	10e10 <dcgettext@plt>
   112e8:	mov	r1, r0
   112ec:	movw	r0, #27741	; 0x6c5d
   112f0:	movw	r3, #26521	; 0x6799
   112f4:	cmp	r6, r5
   112f8:	mov	r2, r6
   112fc:	movt	r0, #1
   11300:	movt	r3, #1
   11304:	moveq	r3, r0
   11308:	mov	r0, #1
   1130c:	bl	10f3c <__printf_chk@plt>
   11310:	mov	r0, r4
   11314:	bl	10ef4 <exit@plt>
   11318:	movw	r0, #33088	; 0x8140
   1131c:	movw	r1, #26396	; 0x671c
   11320:	mov	r2, #5
   11324:	movt	r0, #2
   11328:	movt	r1, #1
   1132c:	ldr	r5, [r0]
   11330:	mov	r0, #0
   11334:	bl	10e10 <dcgettext@plt>
   11338:	mov	r2, r0
   1133c:	movw	r0, #33108	; 0x8154
   11340:	mov	r1, #1
   11344:	movt	r0, #2
   11348:	ldr	r3, [r0]
   1134c:	mov	r0, r5
   11350:	bl	10f54 <__fprintf_chk@plt>
   11354:	mov	r0, r4
   11358:	bl	10ef4 <exit@plt>
   1135c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11360:	add	fp, sp, #28
   11364:	sub	sp, sp, #12
   11368:	mov	r5, r0
   1136c:	ldr	r0, [r1]
   11370:	mov	r4, r1
   11374:	bl	134a8 <__mempcpy_chk@plt+0x24c4>
   11378:	movw	r1, #26521	; 0x6799
   1137c:	mov	r0, #6
   11380:	movt	r1, #1
   11384:	bl	10f84 <setlocale@plt>
   11388:	movw	r6, #27625	; 0x6be9
   1138c:	movw	r1, #27588	; 0x6bc4
   11390:	movt	r6, #1
   11394:	movt	r1, #1
   11398:	mov	r0, r6
   1139c:	bl	10fa8 <bindtextdomain@plt>
   113a0:	mov	r0, r6
   113a4:	bl	10e28 <textdomain@plt>
   113a8:	movw	r0, #7976	; 0x1f28
   113ac:	movt	r0, #1
   113b0:	bl	166f8 <__mempcpy_chk@plt+0x5714>
   113b4:	movw	r9, #27612	; 0x6bdc
   113b8:	movw	r8, #28136	; 0x6de8
   113bc:	mov	r0, #10
   113c0:	mvn	r7, #0
   113c4:	mov	r6, #0
   113c8:	mov	sl, #1
   113cc:	str	r0, [sp, #8]
   113d0:	movt	r9, #1
   113d4:	movt	r8, #1
   113d8:	mov	r0, r5
   113dc:	mov	r1, r4
   113e0:	mov	r2, r9
   113e4:	mov	r3, r8
   113e8:	str	r6, [sp]
   113ec:	bl	10ed0 <getopt_long@plt>
   113f0:	cmp	r0, #100	; 0x64
   113f4:	ble	114b8 <__mempcpy_chk@plt+0x4d4>
   113f8:	sub	r0, r0, #101	; 0x65
   113fc:	cmp	r0, #21
   11400:	bhi	116a4 <__mempcpy_chk@plt+0x6c0>
   11404:	add	r1, pc, #0
   11408:	ldr	pc, [r1, r0, lsl #2]
   1140c:	muleq	r1, r8, r4
   11410:	andeq	r1, r1, r0, lsr #9
   11414:	andeq	r1, r1, r4, lsr #13
   11418:	andeq	r1, r1, r4, lsr #13
   1141c:	andeq	r1, r1, r4, lsr #13
   11420:	andeq	r1, r1, r4, lsr #13
   11424:	andeq	r1, r1, r4, lsr #13
   11428:	andeq	r1, r1, r4, lsr #13
   1142c:	muleq	r1, r0, r4
   11430:	andeq	r1, r1, r4, ror r4
   11434:	andeq	r1, r1, r4, lsr #13
   11438:	andeq	r1, r1, r4, lsr #13
   1143c:	andeq	r1, r1, r4, ror #8
   11440:	andeq	r1, r1, r4, lsr #13
   11444:	andeq	r1, r1, r4, ror #8
   11448:	andeq	r1, r1, r4, lsr #13
   1144c:	andeq	r1, r1, r4, lsr #13
   11450:	andeq	r1, r1, r8, lsr #9
   11454:	andeq	r1, r1, r4, lsr #13
   11458:	andeq	r1, r1, r4, lsr #13
   1145c:	andeq	r1, r1, r4, lsr #13
   11460:	andeq	r1, r1, r4, lsl #9
   11464:	movw	r0, #33098	; 0x814a
   11468:	movt	r0, #2
   1146c:	strb	r6, [r0]
   11470:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   11474:	movw	r0, #33097	; 0x8149
   11478:	movt	r0, #2
   1147c:	strb	sl, [r0]
   11480:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   11484:	mov	r0, #0
   11488:	str	r0, [sp, #8]
   1148c:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   11490:	mov	r7, #2
   11494:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   11498:	mov	r7, #0
   1149c:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   114a0:	mov	r7, #1
   114a4:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   114a8:	movw	r0, #33098	; 0x814a
   114ac:	movt	r0, #2
   114b0:	strb	sl, [r0]
   114b4:	b	113d8 <__mempcpy_chk@plt+0x3f4>
   114b8:	cmn	r0, #1
   114bc:	bne	11644 <__mempcpy_chk@plt+0x660>
   114c0:	movw	r8, #33080	; 0x8138
   114c4:	movt	r8, #2
   114c8:	ldr	r0, [r8]
   114cc:	cmp	r0, r5
   114d0:	bge	116ac <__mempcpy_chk@plt+0x6c8>
   114d4:	sub	r1, r5, r0
   114d8:	cmp	r1, #2
   114dc:	blt	1152c <__mempcpy_chk@plt+0x548>
   114e0:	movw	r1, #33097	; 0x8149
   114e4:	movt	r1, #2
   114e8:	ldrb	r1, [r1]
   114ec:	cmp	r1, #1
   114f0:	bne	1151c <__mempcpy_chk@plt+0x538>
   114f4:	movw	r1, #27667	; 0x6c13
   114f8:	mov	r0, #0
   114fc:	mov	r2, #5
   11500:	movt	r1, #1
   11504:	bl	10e10 <dcgettext@plt>
   11508:	mov	r2, r0
   1150c:	mov	r0, #0
   11510:	mov	r1, #0
   11514:	bl	10e94 <error@plt>
   11518:	ldr	r0, [r8]
   1151c:	movw	r2, #33097	; 0x8149
   11520:	mov	r1, #0
   11524:	movt	r2, #2
   11528:	strb	r1, [r2]
   1152c:	mov	sl, #0
   11530:	cmp	r0, r5
   11534:	bge	11638 <__mempcpy_chk@plt+0x654>
   11538:	mov	sl, #0
   1153c:	b	1156c <__mempcpy_chk@plt+0x588>
   11540:	add	r2, r1, #1
   11544:	str	r2, [r0, #20]
   11548:	ldr	r0, [sp, #8]
   1154c:	strb	r0, [r1]
   11550:	mov	r0, r6
   11554:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   11558:	ldr	r0, [r8]
   1155c:	add	r0, r0, #1
   11560:	cmp	r0, r5
   11564:	str	r0, [r8]
   11568:	bge	11638 <__mempcpy_chk@plt+0x654>
   1156c:	ldr	r9, [r4, r0, lsl #2]
   11570:	cmn	r7, #1
   11574:	mov	r0, r9
   11578:	beq	11588 <__mempcpy_chk@plt+0x5a4>
   1157c:	mov	r1, r7
   11580:	bl	1181c <__mempcpy_chk@plt+0x838>
   11584:	b	11590 <__mempcpy_chk@plt+0x5ac>
   11588:	mov	r1, #63	; 0x3f
   1158c:	bl	116d8 <__mempcpy_chk@plt+0x6f4>
   11590:	mov	r6, r0
   11594:	cmp	r0, #0
   11598:	beq	115ec <__mempcpy_chk@plt+0x608>
   1159c:	movw	r0, #33092	; 0x8144
   115a0:	movt	r0, #2
   115a4:	ldr	r1, [r0]
   115a8:	mov	r0, r6
   115ac:	bl	10d98 <fputs_unlocked@plt>
   115b0:	movw	r0, #33097	; 0x8149
   115b4:	movt	r0, #2
   115b8:	ldrb	r0, [r0]
   115bc:	cmp	r0, #0
   115c0:	bne	11550 <__mempcpy_chk@plt+0x56c>
   115c4:	movw	r0, #33092	; 0x8144
   115c8:	movt	r0, #2
   115cc:	ldr	r0, [r0]
   115d0:	ldr	r1, [r0, #20]
   115d4:	ldr	r2, [r0, #24]
   115d8:	cmp	r1, r2
   115dc:	bcc	11540 <__mempcpy_chk@plt+0x55c>
   115e0:	ldr	r1, [sp, #8]
   115e4:	bl	10f78 <__overflow@plt>
   115e8:	b	11550 <__mempcpy_chk@plt+0x56c>
   115ec:	movw	r0, #33098	; 0x814a
   115f0:	mov	sl, #1
   115f4:	movt	r0, #2
   115f8:	ldrb	r0, [r0]
   115fc:	cmp	r0, #1
   11600:	bne	11558 <__mempcpy_chk@plt+0x574>
   11604:	bl	10f18 <__errno_location@plt>
   11608:	ldr	r6, [r0]
   1160c:	mov	r0, #0
   11610:	mov	r1, #3
   11614:	mov	r2, r9
   11618:	bl	14e50 <__mempcpy_chk@plt+0x3e6c>
   1161c:	movw	r2, #28401	; 0x6ef1
   11620:	mov	r3, r0
   11624:	mov	r0, #0
   11628:	mov	r1, r6
   1162c:	movt	r2, #1
   11630:	bl	10e94 <error@plt>
   11634:	b	11558 <__mempcpy_chk@plt+0x574>
   11638:	mov	r0, sl
   1163c:	sub	sp, fp, #28
   11640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11644:	cmn	r0, #3
   11648:	bne	11694 <__mempcpy_chk@plt+0x6b0>
   1164c:	movw	r0, #33000	; 0x80e8
   11650:	movw	r2, #27635	; 0x6bf3
   11654:	mov	r1, #0
   11658:	movt	r0, #2
   1165c:	movt	r2, #1
   11660:	str	r1, [sp, #4]
   11664:	movw	r1, #27579	; 0x6bbb
   11668:	movt	r1, #1
   1166c:	ldr	r3, [r0]
   11670:	movw	r0, #33092	; 0x8144
   11674:	str	r2, [sp]
   11678:	movw	r2, #27621	; 0x6be5
   1167c:	movt	r0, #2
   11680:	movt	r2, #1
   11684:	ldr	r0, [r0]
   11688:	bl	15850 <__mempcpy_chk@plt+0x486c>
   1168c:	mov	r0, #0
   11690:	bl	10ef4 <exit@plt>
   11694:	cmn	r0, #2
   11698:	bne	116a4 <__mempcpy_chk@plt+0x6c0>
   1169c:	mov	r0, #0
   116a0:	bl	110e0 <__mempcpy_chk@plt+0xfc>
   116a4:	mov	r0, #1
   116a8:	bl	110e0 <__mempcpy_chk@plt+0xfc>
   116ac:	movw	r1, #27651	; 0x6c03
   116b0:	mov	r0, #0
   116b4:	mov	r2, #5
   116b8:	movt	r1, #1
   116bc:	bl	10e10 <dcgettext@plt>
   116c0:	mov	r2, r0
   116c4:	mov	r0, #0
   116c8:	mov	r1, #0
   116cc:	bl	10e94 <error@plt>
   116d0:	mov	r0, #1
   116d4:	bl	110e0 <__mempcpy_chk@plt+0xfc>
   116d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   116dc:	add	fp, sp, #24
   116e0:	sub	sp, sp, #128	; 0x80
   116e4:	mov	r4, r1
   116e8:	mov	r8, r0
   116ec:	cmp	r1, #0
   116f0:	beq	11704 <__mempcpy_chk@plt+0x720>
   116f4:	cmp	r4, #1024	; 0x400
   116f8:	movw	r6, #1025	; 0x401
   116fc:	addls	r6, r4, #1
   11700:	b	11708 <__mempcpy_chk@plt+0x724>
   11704:	mov	r6, #128	; 0x80
   11708:	mov	r9, sp
   1170c:	cmp	r4, #0
   11710:	bne	11724 <__mempcpy_chk@plt+0x740>
   11714:	mov	r5, #0
   11718:	cmp	r6, #128	; 0x80
   1171c:	mov	r7, r9
   11720:	beq	1173c <__mempcpy_chk@plt+0x758>
   11724:	mov	r0, r6
   11728:	bl	16058 <__mempcpy_chk@plt+0x5074>
   1172c:	mov	r7, r0
   11730:	cmp	r0, #0
   11734:	mov	r5, r0
   11738:	beq	117d8 <__mempcpy_chk@plt+0x7f4>
   1173c:	mov	r0, r8
   11740:	mov	r1, r7
   11744:	mov	r2, r6
   11748:	bl	10e4c <readlink@plt>
   1174c:	cmn	r0, #1
   11750:	ble	11790 <__mempcpy_chk@plt+0x7ac>
   11754:	cmp	r0, r6
   11758:	bcc	117a0 <__mempcpy_chk@plt+0x7bc>
   1175c:	mov	r0, r5
   11760:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   11764:	cmn	r6, #-1073741823	; 0xc0000001
   11768:	bhi	11774 <__mempcpy_chk@plt+0x790>
   1176c:	lsl	r0, r6, #1
   11770:	b	11780 <__mempcpy_chk@plt+0x79c>
   11774:	mvn	r0, #-2147483648	; 0x80000000
   11778:	cmn	r6, #-2147483647	; 0x80000001
   1177c:	bcs	117d8 <__mempcpy_chk@plt+0x7f4>
   11780:	mov	r6, r0
   11784:	cmp	r4, #0
   11788:	beq	11714 <__mempcpy_chk@plt+0x730>
   1178c:	b	11724 <__mempcpy_chk@plt+0x740>
   11790:	mov	r0, r5
   11794:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   11798:	mov	r4, #0
   1179c:	b	11810 <__mempcpy_chk@plt+0x82c>
   117a0:	mov	r4, #0
   117a4:	add	r8, r0, #1
   117a8:	cmp	r5, #0
   117ac:	strb	r4, [r7, r0]
   117b0:	beq	117ec <__mempcpy_chk@plt+0x808>
   117b4:	cmp	r8, r6
   117b8:	bcs	1180c <__mempcpy_chk@plt+0x828>
   117bc:	mov	r0, r5
   117c0:	mov	r1, r8
   117c4:	bl	16088 <__mempcpy_chk@plt+0x50a4>
   117c8:	cmp	r0, #0
   117cc:	mov	r4, r0
   117d0:	moveq	r4, r5
   117d4:	b	11810 <__mempcpy_chk@plt+0x82c>
   117d8:	bl	10f18 <__errno_location@plt>
   117dc:	mov	r1, #12
   117e0:	mov	r4, #0
   117e4:	str	r1, [r0]
   117e8:	b	11810 <__mempcpy_chk@plt+0x82c>
   117ec:	mov	r0, r8
   117f0:	bl	16058 <__mempcpy_chk@plt+0x5074>
   117f4:	cmp	r0, #0
   117f8:	beq	11810 <__mempcpy_chk@plt+0x82c>
   117fc:	mov	r1, r7
   11800:	mov	r2, r8
   11804:	mov	r5, r0
   11808:	bl	10df8 <memcpy@plt>
   1180c:	mov	r4, r5
   11810:	mov	r0, r4
   11814:	sub	sp, fp, #24
   11818:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1181c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11820:	add	fp, sp, #28
   11824:	sub	sp, sp, #180	; 0xb4
   11828:	sub	sp, sp, #3072	; 0xc00
   1182c:	and	r7, r1, #3
   11830:	mov	r8, r0
   11834:	sub	r0, r7, #1
   11838:	tst	r7, r0
   1183c:	bne	118c8 <__mempcpy_chk@plt+0x8e4>
   11840:	cmp	r8, #0
   11844:	beq	118c8 <__mempcpy_chk@plt+0x8e4>
   11848:	ldrb	r0, [r8]
   1184c:	cmp	r0, #0
   11850:	beq	118e4 <__mempcpy_chk@plt+0x900>
   11854:	mov	r4, r1
   11858:	mov	r1, #1024	; 0x400
   1185c:	sub	lr, fp, #1024	; 0x400
   11860:	cmp	r0, #47	; 0x2f
   11864:	str	r1, [fp, #-1060]	; 0xfffffbdc
   11868:	str	r1, [sp, #52]	; 0x34
   1186c:	str	r1, [sp, #1188]	; 0x4a4
   11870:	add	r1, sp, #1184	; 0x4a0
   11874:	sub	r2, lr, #40	; 0x28
   11878:	add	r1, r1, #8
   1187c:	add	r2, r2, #8
   11880:	str	r1, [sp, #16]
   11884:	str	r1, [sp, #1184]	; 0x4a0
   11888:	add	r1, sp, #48	; 0x30
   1188c:	str	r2, [sp, #12]
   11890:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11894:	add	r5, r1, #8
   11898:	mov	r0, r5
   1189c:	str	r5, [sp, #48]	; 0x30
   118a0:	str	r5, [sp, #8]
   118a4:	bne	118f0 <__mempcpy_chk@plt+0x90c>
   118a8:	mov	r1, r8
   118ac:	mov	r2, #0
   118b0:	mov	r3, #1024	; 0x400
   118b4:	bl	10fe4 <__mempcpy_chk@plt>
   118b8:	mov	r6, r0
   118bc:	mov	r0, #47	; 0x2f
   118c0:	strb	r0, [r6], #1
   118c4:	b	11910 <__mempcpy_chk@plt+0x92c>
   118c8:	bl	10f18 <__errno_location@plt>
   118cc:	mov	r1, #22
   118d0:	mov	r4, #0
   118d4:	str	r1, [r0]
   118d8:	mov	r0, r4
   118dc:	sub	sp, fp, #28
   118e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118e4:	bl	10f18 <__errno_location@plt>
   118e8:	mov	r1, #2
   118ec:	b	118d0 <__mempcpy_chk@plt+0x8ec>
   118f0:	mov	r1, #1024	; 0x400
   118f4:	bl	10ee8 <getcwd@plt>
   118f8:	cmp	r0, #0
   118fc:	beq	11e2c <__mempcpy_chk@plt+0xe48>
   11900:	mov	r0, r5
   11904:	mov	r1, #0
   11908:	bl	10e34 <rawmemchr@plt>
   1190c:	mov	r6, r0
   11910:	ldrb	r0, [r8]
   11914:	cmp	r0, #0
   11918:	beq	11df0 <__mempcpy_chk@plt+0xe0c>
   1191c:	and	r1, r4, #4
   11920:	add	r9, sp, #48	; 0x30
   11924:	str	r7, [sp, #32]
   11928:	str	r1, [sp, #40]	; 0x28
   1192c:	mov	r1, #0
   11930:	str	r1, [sp, #24]
   11934:	mov	r1, #0
   11938:	str	r1, [sp, #36]	; 0x24
   1193c:	mov	r1, #0
   11940:	str	r1, [sp, #20]
   11944:	b	11960 <__mempcpy_chk@plt+0x97c>
   11948:	cmp	r0, #0
   1194c:	beq	11c68 <__mempcpy_chk@plt+0xc84>
   11950:	mov	r8, sl
   11954:	ldrb	r0, [r8]
   11958:	cmp	r0, #0
   1195c:	beq	11df8 <__mempcpy_chk@plt+0xe14>
   11960:	uxtb	r1, r0
   11964:	cmp	r1, #47	; 0x2f
   11968:	bne	11978 <__mempcpy_chk@plt+0x994>
   1196c:	ldrb	r0, [r8, #1]!
   11970:	cmp	r0, #47	; 0x2f
   11974:	beq	1196c <__mempcpy_chk@plt+0x988>
   11978:	mov	r1, r0
   1197c:	mov	sl, r8
   11980:	b	11988 <__mempcpy_chk@plt+0x9a4>
   11984:	ldrb	r1, [sl, #1]!
   11988:	uxtb	r1, r1
   1198c:	cmp	r1, #0
   11990:	cmpne	r1, #47	; 0x2f
   11994:	bne	11984 <__mempcpy_chk@plt+0x9a0>
   11998:	sub	r2, sl, r8
   1199c:	cmp	r2, #1
   119a0:	beq	119b8 <__mempcpy_chk@plt+0x9d4>
   119a4:	cmp	r2, #2
   119a8:	beq	119c8 <__mempcpy_chk@plt+0x9e4>
   119ac:	cmp	r2, #0
   119b0:	bne	11a10 <__mempcpy_chk@plt+0xa2c>
   119b4:	b	11df8 <__mempcpy_chk@plt+0xe14>
   119b8:	uxtb	r0, r0
   119bc:	cmp	r0, #46	; 0x2e
   119c0:	bne	11a10 <__mempcpy_chk@plt+0xa2c>
   119c4:	b	11950 <__mempcpy_chk@plt+0x96c>
   119c8:	uxtb	r0, r0
   119cc:	cmp	r0, #46	; 0x2e
   119d0:	bne	11a10 <__mempcpy_chk@plt+0xa2c>
   119d4:	ldrb	r0, [r8, #1]
   119d8:	cmp	r0, #46	; 0x2e
   119dc:	bne	11a10 <__mempcpy_chk@plt+0xa2c>
   119e0:	add	r0, r5, #1
   119e4:	cmp	r6, r0
   119e8:	bls	11950 <__mempcpy_chk@plt+0x96c>
   119ec:	sub	r0, r6, #1
   119f0:	mov	r6, r0
   119f4:	cmp	r0, r5
   119f8:	bls	11950 <__mempcpy_chk@plt+0x96c>
   119fc:	mov	r0, r6
   11a00:	ldrb	r1, [r0, #-1]!
   11a04:	cmp	r1, #47	; 0x2f
   11a08:	bne	119f0 <__mempcpy_chk@plt+0xa0c>
   11a0c:	b	11950 <__mempcpy_chk@plt+0x96c>
   11a10:	ldrb	r0, [r6, #-1]
   11a14:	add	r4, r2, #2
   11a18:	str	r2, [sp, #44]	; 0x2c
   11a1c:	cmp	r0, #47	; 0x2f
   11a20:	movne	r0, #47	; 0x2f
   11a24:	strbne	r0, [r6], #1
   11a28:	ldr	r0, [sp, #52]	; 0x34
   11a2c:	add	r0, r5, r0
   11a30:	sub	r0, r0, r6
   11a34:	cmp	r0, r4
   11a38:	bcs	11a70 <__mempcpy_chk@plt+0xa8c>
   11a3c:	mov	r0, r9
   11a40:	bl	15324 <__mempcpy_chk@plt+0x4340>
   11a44:	cmp	r0, #0
   11a48:	beq	11ef0 <__mempcpy_chk@plt+0xf0c>
   11a4c:	sub	r0, r6, r5
   11a50:	ldr	r5, [sp, #48]	; 0x30
   11a54:	ldr	r1, [sp, #52]	; 0x34
   11a58:	add	r6, r5, r0
   11a5c:	add	r0, r5, r1
   11a60:	sub	r0, r0, r6
   11a64:	cmp	r0, r4
   11a68:	bcc	11a3c <__mempcpy_chk@plt+0xa58>
   11a6c:	ldr	r2, [sp, #44]	; 0x2c
   11a70:	mov	r0, r6
   11a74:	mov	r1, r8
   11a78:	mvn	r3, #0
   11a7c:	bl	10fe4 <__mempcpy_chk@plt>
   11a80:	mov	r6, r0
   11a84:	mov	r0, #0
   11a88:	strb	r0, [r6]
   11a8c:	ldr	r0, [sp, #40]	; 0x28
   11a90:	cmp	r0, #0
   11a94:	bne	11af8 <__mempcpy_chk@plt+0xb14>
   11a98:	ldr	r0, [sp, #1188]	; 0x4a4
   11a9c:	ldr	r7, [sp, #1184]	; 0x4a0
   11aa0:	sub	r9, r0, #1
   11aa4:	mov	r0, r5
   11aa8:	mov	r1, r7
   11aac:	mov	r2, r9
   11ab0:	bl	10e4c <readlink@plt>
   11ab4:	cmp	r0, r9
   11ab8:	blt	11ad0 <__mempcpy_chk@plt+0xaec>
   11abc:	add	r0, sp, #1184	; 0x4a0
   11ac0:	bl	152b4 <__mempcpy_chk@plt+0x42d0>
   11ac4:	cmp	r0, #0
   11ac8:	bne	11a98 <__mempcpy_chk@plt+0xab4>
   11acc:	b	11ef0 <__mempcpy_chk@plt+0xf0c>
   11ad0:	mov	r4, r0
   11ad4:	cmp	r0, #0
   11ad8:	add	r9, sp, #48	; 0x30
   11adc:	bmi	11af8 <__mempcpy_chk@plt+0xb14>
   11ae0:	ldr	r0, [sp, #24]
   11ae4:	cmp	r0, #19
   11ae8:	bgt	11b78 <__mempcpy_chk@plt+0xb94>
   11aec:	add	r0, r0, #1
   11af0:	str	r0, [sp, #24]
   11af4:	b	11cd8 <__mempcpy_chk@plt+0xcf4>
   11af8:	ldr	r7, [sp, #32]
   11afc:	cmp	r7, #2
   11b00:	beq	11950 <__mempcpy_chk@plt+0x96c>
   11b04:	ldrb	r0, [sl]
   11b08:	cmp	r0, #47	; 0x2f
   11b0c:	bne	11c48 <__mempcpy_chk@plt+0xc64>
   11b10:	mov	r2, sl
   11b14:	mov	r1, r2
   11b18:	ldrb	r3, [r2, #1]!
   11b1c:	cmp	r3, #47	; 0x2f
   11b20:	beq	11b14 <__mempcpy_chk@plt+0xb30>
   11b24:	cmp	r3, #46	; 0x2e
   11b28:	bne	11c40 <__mempcpy_chk@plt+0xc5c>
   11b2c:	add	r2, r1, #2
   11b30:	ldrb	r3, [r2]
   11b34:	cmp	r3, #47	; 0x2f
   11b38:	beq	11b14 <__mempcpy_chk@plt+0xb30>
   11b3c:	cmp	r3, #0
   11b40:	beq	11b5c <__mempcpy_chk@plt+0xb78>
   11b44:	cmp	r3, #46	; 0x2e
   11b48:	bne	11c48 <__mempcpy_chk@plt+0xc64>
   11b4c:	ldrb	r1, [r1, #3]
   11b50:	cmp	r1, #47	; 0x2f
   11b54:	cmpne	r1, #0
   11b58:	bne	11c48 <__mempcpy_chk@plt+0xc64>
   11b5c:	mov	r0, #47	; 0x2f
   11b60:	mov	r1, r5
   11b64:	mov	r2, #0
   11b68:	mov	r3, #512	; 0x200
   11b6c:	strh	r0, [r6]
   11b70:	mvn	r0, #99	; 0x63
   11b74:	b	11c78 <__mempcpy_chk@plt+0xc94>
   11b78:	ldrb	r0, [r8]
   11b7c:	add	lr, sp, #1024	; 0x400
   11b80:	add	r2, lr, #56	; 0x38
   11b84:	cmp	r0, #0
   11b88:	beq	11cd8 <__mempcpy_chk@plt+0xcf4>
   11b8c:	ldr	r9, [sp, #44]	; 0x2c
   11b90:	mov	r0, #0
   11b94:	mov	r1, r5
   11b98:	strb	r0, [r6, -r9]
   11b9c:	ldrb	r0, [r5]
   11ba0:	cmp	r0, #0
   11ba4:	movw	r0, #28383	; 0x6edf
   11ba8:	movt	r0, #1
   11bac:	moveq	r1, r0
   11bb0:	mov	r0, #3
   11bb4:	bl	10fb4 <__xstat64@plt>
   11bb8:	cmp	r0, #0
   11bbc:	bne	11f00 <__mempcpy_chk@plt+0xf1c>
   11bc0:	rsb	r0, r9, #0
   11bc4:	ldr	r9, [sp, #20]
   11bc8:	ldrb	r1, [r8]
   11bcc:	cmp	r9, #0
   11bd0:	strb	r1, [r6, r0]
   11bd4:	bne	11c0c <__mempcpy_chk@plt+0xc28>
   11bd8:	movw	r0, #13448	; 0x3488
   11bdc:	movw	r2, #13288	; 0x33e8
   11be0:	movw	r3, #13344	; 0x3420
   11be4:	mov	r1, #0
   11be8:	movt	r0, #1
   11bec:	movt	r2, #1
   11bf0:	movt	r3, #1
   11bf4:	str	r0, [sp]
   11bf8:	mov	r0, #7
   11bfc:	bl	125ac <__mempcpy_chk@plt+0x15c8>
   11c00:	mov	r9, r0
   11c04:	cmp	r0, #0
   11c08:	beq	11ef0 <__mempcpy_chk@plt+0xf0c>
   11c0c:	add	lr, sp, #1024	; 0x400
   11c10:	mov	r0, r9
   11c14:	mov	r1, r8
   11c18:	add	r2, lr, #56	; 0x38
   11c1c:	bl	1208c <__mempcpy_chk@plt+0x10a8>
   11c20:	cmp	r0, #0
   11c24:	str	r9, [sp, #20]
   11c28:	beq	11cc4 <__mempcpy_chk@plt+0xce0>
   11c2c:	ldr	r7, [sp, #32]
   11c30:	cmp	r7, #2
   11c34:	bne	11ef4 <__mempcpy_chk@plt+0xf10>
   11c38:	mov	r8, sl
   11c3c:	b	11dac <__mempcpy_chk@plt+0xdc8>
   11c40:	cmp	r3, #0
   11c44:	beq	11b5c <__mempcpy_chk@plt+0xb78>
   11c48:	ldr	r1, [sp, #40]	; 0x28
   11c4c:	cmp	r1, #0
   11c50:	bne	11948 <__mempcpy_chk@plt+0x964>
   11c54:	bl	10f18 <__errno_location@plt>
   11c58:	ldr	r0, [r0]
   11c5c:	cmp	r0, #22
   11c60:	beq	11950 <__mempcpy_chk@plt+0x96c>
   11c64:	b	11c84 <__mempcpy_chk@plt+0xca0>
   11c68:	mvn	r0, #99	; 0x63
   11c6c:	mov	r1, r5
   11c70:	mov	r2, #0
   11c74:	mov	r3, #512	; 0x200
   11c78:	bl	10de0 <faccessat@plt>
   11c7c:	cmp	r0, #0
   11c80:	beq	11950 <__mempcpy_chk@plt+0x96c>
   11c84:	mov	r4, #1
   11c88:	cmp	r7, #1
   11c8c:	bne	11e18 <__mempcpy_chk@plt+0xe34>
   11c90:	bl	10f18 <__errno_location@plt>
   11c94:	ldr	r0, [r0]
   11c98:	cmp	r0, #2
   11c9c:	bne	11e18 <__mempcpy_chk@plt+0xe34>
   11ca0:	movw	r1, #29519	; 0x734f
   11ca4:	mov	r0, sl
   11ca8:	movt	r1, #1
   11cac:	bl	10fd8 <strspn@plt>
   11cb0:	ldrb	r0, [sl, r0]
   11cb4:	mov	r8, sl
   11cb8:	cmp	r0, #0
   11cbc:	beq	11954 <__mempcpy_chk@plt+0x970>
   11cc0:	b	11e18 <__mempcpy_chk@plt+0xe34>
   11cc4:	add	lr, sp, #1024	; 0x400
   11cc8:	mov	r0, r9
   11ccc:	mov	r1, r8
   11cd0:	add	r2, lr, #56	; 0x38
   11cd4:	bl	12010 <__mempcpy_chk@plt+0x102c>
   11cd8:	mov	r0, #0
   11cdc:	strb	r0, [r7, r4]
   11ce0:	ldr	r0, [sp, #36]	; 0x24
   11ce4:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11ce8:	tst	r0, #1
   11cec:	ldr	r0, [sp, #28]
   11cf0:	subne	r0, sl, r8
   11cf4:	str	r0, [sp, #28]
   11cf8:	mov	r0, sl
   11cfc:	bl	10f0c <strlen@plt>
   11d00:	mvn	r1, r4
   11d04:	cmp	r0, r1
   11d08:	bhi	11ef0 <__mempcpy_chk@plt+0xf0c>
   11d0c:	str	r0, [sp, #44]	; 0x2c
   11d10:	add	r9, r0, r4
   11d14:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11d18:	cmp	r0, r9
   11d1c:	bhi	11d44 <__mempcpy_chk@plt+0xd60>
   11d20:	sub	lr, fp, #1024	; 0x400
   11d24:	sub	r0, lr, #40	; 0x28
   11d28:	bl	15324 <__mempcpy_chk@plt+0x4340>
   11d2c:	cmp	r0, #0
   11d30:	beq	11ef0 <__mempcpy_chk@plt+0xf0c>
   11d34:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11d38:	cmp	r0, r9
   11d3c:	bls	11d20 <__mempcpy_chk@plt+0xd3c>
   11d40:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11d44:	ldr	r0, [sp, #36]	; 0x24
   11d48:	ldr	r1, [sp, #44]	; 0x2c
   11d4c:	tst	r0, #1
   11d50:	ldr	r0, [sp, #28]
   11d54:	add	r2, r1, #1
   11d58:	addne	sl, r8, r0
   11d5c:	add	r0, r8, r4
   11d60:	mov	r1, sl
   11d64:	bl	10dc8 <memmove@plt>
   11d68:	mov	r0, r8
   11d6c:	mov	r1, r7
   11d70:	mov	r2, r4
   11d74:	bl	10df8 <memcpy@plt>
   11d78:	ldrb	r0, [r7]
   11d7c:	cmp	r0, #47	; 0x2f
   11d80:	bne	11db4 <__mempcpy_chk@plt+0xdd0>
   11d84:	mov	r0, r5
   11d88:	mov	r1, r7
   11d8c:	mov	r2, #0
   11d90:	mvn	r3, #0
   11d94:	bl	10fe4 <__mempcpy_chk@plt>
   11d98:	mov	r6, r0
   11d9c:	mov	r0, #47	; 0x2f
   11da0:	strb	r0, [r6], #1
   11da4:	mov	r0, #1
   11da8:	str	r0, [sp, #36]	; 0x24
   11dac:	add	r9, sp, #48	; 0x30
   11db0:	b	11954 <__mempcpy_chk@plt+0x970>
   11db4:	add	r0, r5, #1
   11db8:	mov	r1, #1
   11dbc:	add	r9, sp, #48	; 0x30
   11dc0:	cmp	r6, r0
   11dc4:	str	r1, [sp, #36]	; 0x24
   11dc8:	bls	11954 <__mempcpy_chk@plt+0x970>
   11dcc:	sub	r0, r6, #1
   11dd0:	mov	r6, r0
   11dd4:	cmp	r0, r5
   11dd8:	bls	11954 <__mempcpy_chk@plt+0x970>
   11ddc:	mov	r0, r6
   11de0:	ldrb	r1, [r0, #-1]!
   11de4:	cmp	r1, #47	; 0x2f
   11de8:	bne	11dd0 <__mempcpy_chk@plt+0xdec>
   11dec:	b	11954 <__mempcpy_chk@plt+0x970>
   11df0:	mov	r0, #0
   11df4:	str	r0, [sp, #20]
   11df8:	add	r0, r5, #1
   11dfc:	cmp	r6, r0
   11e00:	bls	11e14 <__mempcpy_chk@plt+0xe30>
   11e04:	mov	r0, r6
   11e08:	ldrb	r1, [r0, #-1]!
   11e0c:	cmp	r1, #47	; 0x2f
   11e10:	moveq	r6, r0
   11e14:	mov	r4, #0
   11e18:	ldr	r0, [sp, #20]
   11e1c:	cmp	r0, #0
   11e20:	beq	11e84 <__mempcpy_chk@plt+0xea0>
   11e24:	bl	128b0 <__mempcpy_chk@plt+0x18cc>
   11e28:	b	11e84 <__mempcpy_chk@plt+0xea0>
   11e2c:	bl	10f18 <__errno_location@plt>
   11e30:	ldr	r5, [sp, #8]
   11e34:	mov	r6, r0
   11e38:	add	r9, sp, #48	; 0x30
   11e3c:	ldr	r0, [r6]
   11e40:	cmp	r0, #34	; 0x22
   11e44:	bne	11e74 <__mempcpy_chk@plt+0xe90>
   11e48:	mov	r0, r9
   11e4c:	bl	152b4 <__mempcpy_chk@plt+0x42d0>
   11e50:	cmp	r0, #0
   11e54:	beq	11ef0 <__mempcpy_chk@plt+0xf0c>
   11e58:	ldr	r5, [sp, #48]	; 0x30
   11e5c:	ldr	r1, [sp, #52]	; 0x34
   11e60:	mov	r0, r5
   11e64:	bl	10ee8 <getcwd@plt>
   11e68:	cmp	r0, #0
   11e6c:	beq	11e3c <__mempcpy_chk@plt+0xe58>
   11e70:	b	11900 <__mempcpy_chk@plt+0x91c>
   11e74:	cmp	r0, #12
   11e78:	beq	11ef0 <__mempcpy_chk@plt+0xf0c>
   11e7c:	mov	r4, #1
   11e80:	mov	r6, r5
   11e84:	ldr	r1, [sp, #12]
   11e88:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   11e8c:	ldr	r7, [sp, #16]
   11e90:	cmp	r0, r1
   11e94:	beq	11e9c <__mempcpy_chk@plt+0xeb8>
   11e98:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   11e9c:	ldr	r0, [sp, #1184]	; 0x4a0
   11ea0:	cmp	r0, r7
   11ea4:	beq	11eac <__mempcpy_chk@plt+0xec8>
   11ea8:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   11eac:	cmp	r4, #0
   11eb0:	beq	11ed0 <__mempcpy_chk@plt+0xeec>
   11eb4:	ldr	r0, [sp, #48]	; 0x30
   11eb8:	ldr	r1, [sp, #8]
   11ebc:	mov	r4, #0
   11ec0:	cmp	r0, r1
   11ec4:	beq	118d8 <__mempcpy_chk@plt+0x8f4>
   11ec8:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   11ecc:	b	118d8 <__mempcpy_chk@plt+0x8f4>
   11ed0:	mov	r0, #0
   11ed4:	strb	r0, [r6], -r5
   11ed8:	add	r0, sp, #48	; 0x30
   11edc:	add	r1, r6, #1
   11ee0:	bl	15248 <__mempcpy_chk@plt+0x4264>
   11ee4:	mov	r4, r0
   11ee8:	cmp	r0, #0
   11eec:	bne	118d8 <__mempcpy_chk@plt+0x8f4>
   11ef0:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   11ef4:	bl	10f18 <__errno_location@plt>
   11ef8:	mov	r1, #40	; 0x28
   11efc:	str	r1, [r0]
   11f00:	mov	r4, #1
   11f04:	b	11e18 <__mempcpy_chk@plt+0xe34>
   11f08:	movw	r1, #33100	; 0x814c
   11f0c:	movt	r1, #2
   11f10:	str	r0, [r1]
   11f14:	bx	lr
   11f18:	movw	r1, #33104	; 0x8150
   11f1c:	movt	r1, #2
   11f20:	strb	r0, [r1]
   11f24:	bx	lr
   11f28:	push	{r4, r5, r6, sl, fp, lr}
   11f2c:	add	fp, sp, #16
   11f30:	sub	sp, sp, #8
   11f34:	movw	r0, #33092	; 0x8144
   11f38:	movt	r0, #2
   11f3c:	ldr	r0, [r0]
   11f40:	bl	160dc <__mempcpy_chk@plt+0x50f8>
   11f44:	cmp	r0, #0
   11f48:	beq	11f70 <__mempcpy_chk@plt+0xf8c>
   11f4c:	movw	r0, #33104	; 0x8150
   11f50:	movt	r0, #2
   11f54:	ldrb	r0, [r0]
   11f58:	cmp	r0, #0
   11f5c:	beq	11f90 <__mempcpy_chk@plt+0xfac>
   11f60:	bl	10f18 <__errno_location@plt>
   11f64:	ldr	r0, [r0]
   11f68:	cmp	r0, #32
   11f6c:	bne	11f90 <__mempcpy_chk@plt+0xfac>
   11f70:	movw	r0, #33088	; 0x8140
   11f74:	movt	r0, #2
   11f78:	ldr	r0, [r0]
   11f7c:	bl	160dc <__mempcpy_chk@plt+0x50f8>
   11f80:	cmp	r0, #0
   11f84:	subeq	sp, fp, #16
   11f88:	popeq	{r4, r5, r6, sl, fp, pc}
   11f8c:	b	12000 <__mempcpy_chk@plt+0x101c>
   11f90:	movw	r1, #28385	; 0x6ee1
   11f94:	mov	r0, #0
   11f98:	mov	r2, #5
   11f9c:	movt	r1, #1
   11fa0:	bl	10e10 <dcgettext@plt>
   11fa4:	mov	r4, r0
   11fa8:	movw	r0, #33100	; 0x814c
   11fac:	movt	r0, #2
   11fb0:	ldr	r6, [r0]
   11fb4:	bl	10f18 <__errno_location@plt>
   11fb8:	ldr	r5, [r0]
   11fbc:	cmp	r6, #0
   11fc0:	bne	11fdc <__mempcpy_chk@plt+0xff8>
   11fc4:	movw	r2, #28401	; 0x6ef1
   11fc8:	mov	r0, #0
   11fcc:	mov	r1, r5
   11fd0:	mov	r3, r4
   11fd4:	movt	r2, #1
   11fd8:	b	11ffc <__mempcpy_chk@plt+0x1018>
   11fdc:	mov	r0, r6
   11fe0:	bl	14d74 <__mempcpy_chk@plt+0x3d90>
   11fe4:	movw	r2, #28397	; 0x6eed
   11fe8:	mov	r3, r0
   11fec:	str	r4, [sp]
   11ff0:	mov	r0, #0
   11ff4:	mov	r1, r5
   11ff8:	movt	r2, #1
   11ffc:	bl	10e94 <error@plt>
   12000:	movw	r0, #33004	; 0x80ec
   12004:	movt	r0, #2
   12008:	ldr	r0, [r0]
   1200c:	bl	10dec <_exit@plt>
   12010:	push	{r4, r5, r6, r7, fp, lr}
   12014:	add	fp, sp, #16
   12018:	cmp	r0, #0
   1201c:	beq	12084 <__mempcpy_chk@plt+0x10a0>
   12020:	mov	r5, r0
   12024:	mov	r0, #24
   12028:	mov	r6, r2
   1202c:	mov	r7, r1
   12030:	bl	15a84 <__mempcpy_chk@plt+0x4aa0>
   12034:	mov	r4, r0
   12038:	mov	r0, r7
   1203c:	bl	15f88 <__mempcpy_chk@plt+0x4fa4>
   12040:	str	r0, [r4]
   12044:	ldrd	r0, [r6, #96]	; 0x60
   12048:	str	r0, [r4, #8]
   1204c:	str	r1, [r4, #12]
   12050:	ldrd	r0, [r6]
   12054:	str	r1, [r4, #20]
   12058:	str	r0, [r4, #16]
   1205c:	mov	r0, r5
   12060:	mov	r1, r4
   12064:	bl	13100 <__mempcpy_chk@plt+0x211c>
   12068:	cmp	r0, #0
   1206c:	beq	12088 <__mempcpy_chk@plt+0x10a4>
   12070:	cmp	r0, r4
   12074:	beq	12084 <__mempcpy_chk@plt+0x10a0>
   12078:	mov	r0, r4
   1207c:	pop	{r4, r5, r6, r7, fp, lr}
   12080:	b	13488 <__mempcpy_chk@plt+0x24a4>
   12084:	pop	{r4, r5, r6, r7, fp, pc}
   12088:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   1208c:	cmp	r0, #0
   12090:	moveq	r0, #0
   12094:	bxeq	lr
   12098:	push	{r4, r5, fp, lr}
   1209c:	add	fp, sp, #8
   120a0:	sub	sp, sp, #24
   120a4:	str	r1, [sp]
   120a8:	mov	ip, sp
   120ac:	mov	r1, sp
   120b0:	ldrd	r4, [r2, #96]	; 0x60
   120b4:	add	r3, ip, #8
   120b8:	add	ip, ip, #16
   120bc:	strd	r4, [r3]
   120c0:	ldrd	r2, [r2]
   120c4:	strd	r2, [ip]
   120c8:	bl	122f8 <__mempcpy_chk@plt+0x1314>
   120cc:	cmp	r0, #0
   120d0:	movwne	r0, #1
   120d4:	sub	sp, fp, #8
   120d8:	pop	{r4, r5, fp, pc}
   120dc:	push	{r4, r5, r6, sl, fp, lr}
   120e0:	add	fp, sp, #16
   120e4:	mov	r4, r0
   120e8:	bl	10f18 <__errno_location@plt>
   120ec:	ldr	r6, [r0]
   120f0:	mov	r5, r0
   120f4:	mov	r0, r4
   120f8:	bl	10dd4 <free@plt>
   120fc:	str	r6, [r5]
   12100:	pop	{r4, r5, r6, sl, fp, pc}
   12104:	andeq	r0, r0, r0
   12108:	ldr	r0, [r0, #8]
   1210c:	bx	lr
   12110:	ldr	r0, [r0, #12]
   12114:	bx	lr
   12118:	ldr	r0, [r0, #16]
   1211c:	bx	lr
   12120:	ldm	r0, {r2, ip}
   12124:	mov	r0, #0
   12128:	cmp	r2, ip
   1212c:	bxcs	lr
   12130:	mov	r0, #0
   12134:	b	12144 <__mempcpy_chk@plt+0x1160>
   12138:	add	r2, r2, #8
   1213c:	cmp	r2, ip
   12140:	bcs	12174 <__mempcpy_chk@plt+0x1190>
   12144:	ldr	r1, [r2]
   12148:	cmp	r1, #0
   1214c:	beq	12138 <__mempcpy_chk@plt+0x1154>
   12150:	mov	r3, #0
   12154:	mov	r1, r2
   12158:	ldr	r1, [r1, #4]
   1215c:	add	r3, r3, #1
   12160:	cmp	r1, #0
   12164:	bne	12158 <__mempcpy_chk@plt+0x1174>
   12168:	cmp	r3, r0
   1216c:	movhi	r0, r3
   12170:	b	12138 <__mempcpy_chk@plt+0x1154>
   12174:	bx	lr
   12178:	push	{fp, lr}
   1217c:	mov	fp, sp
   12180:	ldm	r0, {r3, ip}
   12184:	mov	lr, #0
   12188:	mov	r1, #0
   1218c:	cmp	r3, ip
   12190:	bcs	121d4 <__mempcpy_chk@plt+0x11f0>
   12194:	mov	r1, #0
   12198:	mov	lr, #0
   1219c:	b	121ac <__mempcpy_chk@plt+0x11c8>
   121a0:	add	r3, r3, #8
   121a4:	cmp	r3, ip
   121a8:	bcs	121d4 <__mempcpy_chk@plt+0x11f0>
   121ac:	ldr	r2, [r3]
   121b0:	cmp	r2, #0
   121b4:	beq	121a0 <__mempcpy_chk@plt+0x11bc>
   121b8:	mov	r2, r3
   121bc:	ldr	r2, [r2, #4]
   121c0:	add	r1, r1, #1
   121c4:	cmp	r2, #0
   121c8:	bne	121bc <__mempcpy_chk@plt+0x11d8>
   121cc:	add	lr, lr, #1
   121d0:	b	121a0 <__mempcpy_chk@plt+0x11bc>
   121d4:	ldr	r2, [r0, #12]
   121d8:	cmp	lr, r2
   121dc:	bne	121f4 <__mempcpy_chk@plt+0x1210>
   121e0:	ldr	r2, [r0, #16]
   121e4:	mov	r0, #1
   121e8:	cmp	r1, r2
   121ec:	movne	r0, #0
   121f0:	pop	{fp, pc}
   121f4:	mov	r0, #0
   121f8:	pop	{fp, pc}
   121fc:	nop	{0}
   12200:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12204:	add	fp, sp, #24
   12208:	sub	sp, sp, #8
   1220c:	ldr	r6, [r0]
   12210:	ldmib	r0, {r2, r7, r8}
   12214:	ldr	r3, [r0, #16]
   12218:	mov	r4, r1
   1221c:	mov	r5, #0
   12220:	cmp	r6, r2
   12224:	bcs	1226c <__mempcpy_chk@plt+0x1288>
   12228:	mov	r5, #0
   1222c:	b	1223c <__mempcpy_chk@plt+0x1258>
   12230:	add	r6, r6, #8
   12234:	cmp	r6, r2
   12238:	bcs	1226c <__mempcpy_chk@plt+0x1288>
   1223c:	ldr	r0, [r6]
   12240:	cmp	r0, #0
   12244:	beq	12230 <__mempcpy_chk@plt+0x124c>
   12248:	mov	r0, #0
   1224c:	mov	r1, r6
   12250:	ldr	r1, [r1, #4]
   12254:	add	r0, r0, #1
   12258:	cmp	r1, #0
   1225c:	bne	12250 <__mempcpy_chk@plt+0x126c>
   12260:	cmp	r0, r5
   12264:	movhi	r5, r0
   12268:	b	12230 <__mempcpy_chk@plt+0x124c>
   1226c:	movw	r2, #28404	; 0x6ef4
   12270:	mov	r0, r4
   12274:	mov	r1, #1
   12278:	movt	r2, #1
   1227c:	bl	10f54 <__fprintf_chk@plt>
   12280:	movw	r2, #28428	; 0x6f0c
   12284:	mov	r0, r4
   12288:	mov	r1, #1
   1228c:	mov	r3, r7
   12290:	movt	r2, #1
   12294:	bl	10f54 <__fprintf_chk@plt>
   12298:	vmov	s0, r8
   1229c:	vldr	d16, [pc, #76]	; 122f0 <__mempcpy_chk@plt+0x130c>
   122a0:	movw	r2, #28452	; 0x6f24
   122a4:	mov	r0, r4
   122a8:	mov	r1, #1
   122ac:	mov	r3, r8
   122b0:	movt	r2, #1
   122b4:	vcvt.f64.u32	d17, s0
   122b8:	vmov	s0, r7
   122bc:	vcvt.f64.u32	d18, s0
   122c0:	vmul.f64	d16, d17, d16
   122c4:	vdiv.f64	d16, d16, d18
   122c8:	vstr	d16, [sp]
   122cc:	bl	10f54 <__fprintf_chk@plt>
   122d0:	movw	r2, #28485	; 0x6f45
   122d4:	mov	r0, r4
   122d8:	mov	r1, #1
   122dc:	mov	r3, r5
   122e0:	movt	r2, #1
   122e4:	sub	sp, fp, #24
   122e8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   122ec:	b	10f54 <__fprintf_chk@plt>
   122f0:	andeq	r0, r0, r0
   122f4:	subsmi	r0, r9, r0
   122f8:	push	{r4, r5, r6, r7, fp, lr}
   122fc:	add	fp, sp, #16
   12300:	mov	r4, r1
   12304:	ldr	r1, [r0, #8]
   12308:	ldr	r2, [r0, #24]
   1230c:	mov	r5, r0
   12310:	mov	r0, r4
   12314:	blx	r2
   12318:	ldr	r1, [r5, #8]
   1231c:	cmp	r0, r1
   12320:	bcs	12388 <__mempcpy_chk@plt+0x13a4>
   12324:	ldr	r7, [r5]
   12328:	mov	r6, #0
   1232c:	ldr	r1, [r7, r0, lsl #3]!
   12330:	cmp	r1, #0
   12334:	cmpne	r7, #0
   12338:	bne	12368 <__mempcpy_chk@plt+0x1384>
   1233c:	mov	r0, r6
   12340:	pop	{r4, r5, r6, r7, fp, pc}
   12344:	ldr	r2, [r5, #28]
   12348:	mov	r0, r4
   1234c:	blx	r2
   12350:	cmp	r0, #0
   12354:	bne	1237c <__mempcpy_chk@plt+0x1398>
   12358:	ldr	r7, [r7, #4]
   1235c:	cmp	r7, #0
   12360:	beq	1233c <__mempcpy_chk@plt+0x1358>
   12364:	ldr	r1, [r7]
   12368:	cmp	r1, r4
   1236c:	bne	12344 <__mempcpy_chk@plt+0x1360>
   12370:	mov	r6, r4
   12374:	mov	r0, r6
   12378:	pop	{r4, r5, r6, r7, fp, pc}
   1237c:	ldr	r6, [r7]
   12380:	mov	r0, r6
   12384:	pop	{r4, r5, r6, r7, fp, pc}
   12388:	bl	10fcc <abort@plt>
   1238c:	push	{fp, lr}
   12390:	mov	fp, sp
   12394:	ldr	r1, [r0, #16]
   12398:	cmp	r1, #0
   1239c:	beq	123bc <__mempcpy_chk@plt+0x13d8>
   123a0:	ldm	r0, {r1, r2}
   123a4:	cmp	r1, r2
   123a8:	bcs	123c4 <__mempcpy_chk@plt+0x13e0>
   123ac:	ldr	r0, [r1], #8
   123b0:	cmp	r0, #0
   123b4:	beq	123a4 <__mempcpy_chk@plt+0x13c0>
   123b8:	pop	{fp, pc}
   123bc:	mov	r0, #0
   123c0:	pop	{fp, pc}
   123c4:	bl	10fcc <abort@plt>
   123c8:	push	{r4, r5, fp, lr}
   123cc:	add	fp, sp, #8
   123d0:	mov	r5, r1
   123d4:	ldr	r1, [r0, #8]
   123d8:	ldr	r2, [r0, #24]
   123dc:	mov	r4, r0
   123e0:	mov	r0, r5
   123e4:	blx	r2
   123e8:	ldr	r1, [r4, #8]
   123ec:	cmp	r0, r1
   123f0:	bcs	12454 <__mempcpy_chk@plt+0x1470>
   123f4:	ldr	r1, [r4]
   123f8:	add	r2, r1, r0, lsl #3
   123fc:	ldr	r3, [r2]
   12400:	ldr	r2, [r2, #4]
   12404:	cmp	r3, r5
   12408:	beq	12418 <__mempcpy_chk@plt+0x1434>
   1240c:	cmp	r2, #0
   12410:	bne	123fc <__mempcpy_chk@plt+0x1418>
   12414:	b	12428 <__mempcpy_chk@plt+0x1444>
   12418:	cmp	r2, #0
   1241c:	beq	12428 <__mempcpy_chk@plt+0x1444>
   12420:	ldr	r0, [r2]
   12424:	pop	{r4, r5, fp, pc}
   12428:	ldr	r2, [r4, #4]
   1242c:	add	r0, r1, r0, lsl #3
   12430:	add	r1, r0, #8
   12434:	cmp	r1, r2
   12438:	bcs	1244c <__mempcpy_chk@plt+0x1468>
   1243c:	ldr	r0, [r1], #8
   12440:	cmp	r0, #0
   12444:	beq	12434 <__mempcpy_chk@plt+0x1450>
   12448:	pop	{r4, r5, fp, pc}
   1244c:	mov	r0, #0
   12450:	pop	{r4, r5, fp, pc}
   12454:	bl	10fcc <abort@plt>
   12458:	push	{r4, r5, fp, lr}
   1245c:	add	fp, sp, #8
   12460:	ldm	r0, {r5, lr}
   12464:	mov	ip, r0
   12468:	mov	r0, #0
   1246c:	cmp	r5, lr
   12470:	popcs	{r4, r5, fp, pc}
   12474:	mov	r0, #0
   12478:	b	1248c <__mempcpy_chk@plt+0x14a8>
   1247c:	ldr	lr, [ip, #4]
   12480:	add	r5, r5, #8
   12484:	cmp	r5, lr
   12488:	bcs	124c4 <__mempcpy_chk@plt+0x14e0>
   1248c:	ldr	r3, [r5]
   12490:	cmp	r3, #0
   12494:	cmpne	r5, #0
   12498:	beq	12480 <__mempcpy_chk@plt+0x149c>
   1249c:	mov	r3, r5
   124a0:	cmp	r0, r2
   124a4:	bcs	124c4 <__mempcpy_chk@plt+0x14e0>
   124a8:	ldr	r4, [r3]
   124ac:	str	r4, [r1, r0, lsl #2]
   124b0:	add	r0, r0, #1
   124b4:	ldr	r3, [r3, #4]
   124b8:	cmp	r3, #0
   124bc:	bne	124a0 <__mempcpy_chk@plt+0x14bc>
   124c0:	b	1247c <__mempcpy_chk@plt+0x1498>
   124c4:	pop	{r4, r5, fp, pc}
   124c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   124cc:	add	fp, sp, #24
   124d0:	mov	r5, r1
   124d4:	ldr	r4, [r0]
   124d8:	ldr	r1, [r0, #4]
   124dc:	mov	r6, #0
   124e0:	cmp	r4, r1
   124e4:	bcs	12550 <__mempcpy_chk@plt+0x156c>
   124e8:	mov	r9, r2
   124ec:	mov	r8, r0
   124f0:	mov	r6, #0
   124f4:	b	12508 <__mempcpy_chk@plt+0x1524>
   124f8:	ldr	r1, [r8, #4]
   124fc:	add	r4, r4, #8
   12500:	cmp	r4, r1
   12504:	bcs	12550 <__mempcpy_chk@plt+0x156c>
   12508:	ldr	r0, [r4]
   1250c:	cmp	r0, #0
   12510:	cmpne	r4, #0
   12514:	beq	124fc <__mempcpy_chk@plt+0x1518>
   12518:	mov	r1, r9
   1251c:	blx	r5
   12520:	cmp	r0, #0
   12524:	beq	12550 <__mempcpy_chk@plt+0x156c>
   12528:	mov	r7, r4
   1252c:	ldr	r7, [r7, #4]
   12530:	add	r6, r6, #1
   12534:	cmp	r7, #0
   12538:	beq	124f8 <__mempcpy_chk@plt+0x1514>
   1253c:	ldr	r0, [r7]
   12540:	mov	r1, r9
   12544:	blx	r5
   12548:	cmp	r0, #0
   1254c:	bne	1252c <__mempcpy_chk@plt+0x1548>
   12550:	mov	r0, r6
   12554:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12558:	ldrb	r2, [r0]
   1255c:	cmp	r2, #0
   12560:	moveq	r0, #0
   12564:	bxeq	lr
   12568:	add	r3, r0, #1
   1256c:	mov	r0, #0
   12570:	rsb	r0, r0, r0, lsl #5
   12574:	uxtab	r0, r0, r2
   12578:	udiv	r2, r0, r1
   1257c:	mls	r0, r2, r1, r0
   12580:	ldrb	r2, [r3], #1
   12584:	cmp	r2, #0
   12588:	bne	12570 <__mempcpy_chk@plt+0x158c>
   1258c:	bx	lr
   12590:	movw	r1, #28512	; 0x6f60
   12594:	movt	r1, #1
   12598:	vld1.32	{d16-d17}, [r1]!
   1259c:	ldr	r1, [r1]
   125a0:	vst1.32	{d16-d17}, [r0]!
   125a4:	str	r1, [r0]
   125a8:	bx	lr
   125ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   125b0:	add	fp, sp, #24
   125b4:	movw	r9, #10196	; 0x27d4
   125b8:	cmp	r3, #0
   125bc:	movw	r5, #10176	; 0x27c0
   125c0:	mov	r6, r0
   125c4:	mov	r0, #40	; 0x28
   125c8:	mov	r7, r1
   125cc:	movt	r9, #1
   125d0:	movne	r9, r3
   125d4:	cmp	r2, #0
   125d8:	movt	r5, #1
   125dc:	movne	r5, r2
   125e0:	bl	16058 <__mempcpy_chk@plt+0x5074>
   125e4:	mov	r8, #0
   125e8:	cmp	r0, #0
   125ec:	beq	127a8 <__mempcpy_chk@plt+0x17c4>
   125f0:	mov	r4, r0
   125f4:	movw	r0, #28512	; 0x6f60
   125f8:	cmp	r7, #0
   125fc:	movt	r0, #1
   12600:	moveq	r7, r0
   12604:	cmp	r7, r0
   12608:	str	r7, [r4, #20]
   1260c:	beq	12688 <__mempcpy_chk@plt+0x16a4>
   12610:	vldr	s2, [pc, #408]	; 127b0 <__mempcpy_chk@plt+0x17cc>
   12614:	vldr	s0, [r7, #8]
   12618:	vcmpe.f32	s0, s2
   1261c:	vmrs	APSR_nzcv, fpscr
   12620:	ble	12734 <__mempcpy_chk@plt+0x1750>
   12624:	vldr	s4, [pc, #392]	; 127b4 <__mempcpy_chk@plt+0x17d0>
   12628:	vcmpe.f32	s0, s4
   1262c:	vmrs	APSR_nzcv, fpscr
   12630:	bpl	12734 <__mempcpy_chk@plt+0x1750>
   12634:	vldr	s4, [pc, #380]	; 127b8 <__mempcpy_chk@plt+0x17d4>
   12638:	vldr	s6, [r7, #12]
   1263c:	vcmpe.f32	s6, s4
   12640:	vmrs	APSR_nzcv, fpscr
   12644:	ble	12734 <__mempcpy_chk@plt+0x1750>
   12648:	vldr	s4, [r7]
   1264c:	vcmpe.f32	s4, #0.0
   12650:	vmrs	APSR_nzcv, fpscr
   12654:	blt	12734 <__mempcpy_chk@plt+0x1750>
   12658:	vadd.f32	s2, s4, s2
   1265c:	vcmpe.f32	s2, s0
   12660:	vmrs	APSR_nzcv, fpscr
   12664:	bpl	12734 <__mempcpy_chk@plt+0x1750>
   12668:	vldr	s0, [r7, #4]
   1266c:	vmov.f32	s4, #112	; 0x3f800000  1.0
   12670:	vcmpe.f32	s0, s4
   12674:	vmrs	APSR_nzcv, fpscr
   12678:	bhi	12734 <__mempcpy_chk@plt+0x1750>
   1267c:	vcmpe.f32	s2, s0
   12680:	vmrs	APSR_nzcv, fpscr
   12684:	bpl	12734 <__mempcpy_chk@plt+0x1750>
   12688:	ldrb	r0, [r7, #16]
   1268c:	cmp	r0, #0
   12690:	bne	126bc <__mempcpy_chk@plt+0x16d8>
   12694:	vmov	s2, r6
   12698:	vldr	s0, [r7, #8]
   1269c:	vldr	s4, [pc, #280]	; 127bc <__mempcpy_chk@plt+0x17d8>
   126a0:	vcvt.f32.u32	s2, s2
   126a4:	vdiv.f32	s2, s2, s0
   126a8:	vcvt.u32.f32	s0, s2
   126ac:	vcmpe.f32	s2, s4
   126b0:	vmrs	APSR_nzcv, fpscr
   126b4:	bge	12744 <__mempcpy_chk@plt+0x1760>
   126b8:	vmov	r6, s0
   126bc:	cmp	r6, #10
   126c0:	movls	r6, #10
   126c4:	orr	r0, r6, #1
   126c8:	cmn	r0, #1
   126cc:	beq	12744 <__mempcpy_chk@plt+0x1760>
   126d0:	ldr	r6, [fp, #8]
   126d4:	mov	r1, #3
   126d8:	cmp	r0, #10
   126dc:	bcc	12714 <__mempcpy_chk@plt+0x1730>
   126e0:	mov	r1, #3
   126e4:	mov	r3, #9
   126e8:	mov	r2, #12
   126ec:	udiv	r7, r0, r1
   126f0:	mls	r7, r7, r1, r0
   126f4:	cmp	r7, #0
   126f8:	beq	12714 <__mempcpy_chk@plt+0x1730>
   126fc:	add	r3, r3, r2
   12700:	add	r2, r2, #8
   12704:	add	r1, r1, #2
   12708:	add	r3, r3, #4
   1270c:	cmp	r3, r0
   12710:	bcc	126ec <__mempcpy_chk@plt+0x1708>
   12714:	udiv	r2, r0, r1
   12718:	mls	r1, r2, r1, r0
   1271c:	cmp	r1, #0
   12720:	bne	1273c <__mempcpy_chk@plt+0x1758>
   12724:	add	r0, r0, #2
   12728:	cmn	r0, #1
   1272c:	bne	126d4 <__mempcpy_chk@plt+0x16f0>
   12730:	b	12744 <__mempcpy_chk@plt+0x1760>
   12734:	str	r0, [r4, #20]
   12738:	b	1274c <__mempcpy_chk@plt+0x1768>
   1273c:	cmp	r0, #536870912	; 0x20000000
   12740:	bcc	1275c <__mempcpy_chk@plt+0x1778>
   12744:	mov	r0, #0
   12748:	str	r0, [r4, #8]
   1274c:	mov	r0, r4
   12750:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   12754:	mov	r0, r8
   12758:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1275c:	cmp	r0, #0
   12760:	str	r0, [r4, #8]
   12764:	beq	1274c <__mempcpy_chk@plt+0x1768>
   12768:	mov	r1, #8
   1276c:	bl	16004 <__mempcpy_chk@plt+0x5020>
   12770:	cmp	r0, #0
   12774:	str	r0, [r4]
   12778:	beq	1274c <__mempcpy_chk@plt+0x1768>
   1277c:	mov	r1, #0
   12780:	str	r5, [r4, #24]
   12784:	str	r9, [r4, #28]
   12788:	str	r6, [r4, #32]
   1278c:	mov	r8, r4
   12790:	str	r1, [r4, #36]	; 0x24
   12794:	str	r1, [r4, #12]
   12798:	str	r1, [r4, #16]
   1279c:	ldr	r1, [r4, #8]
   127a0:	add	r0, r0, r1, lsl #3
   127a4:	str	r0, [r4, #4]
   127a8:	mov	r0, r8
   127ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   127b0:	stclcc	12, cr12, [ip, #820]	; 0x334
   127b4:	svccc	0x00666666
   127b8:	svccc	0x008ccccd
   127bc:	svcmi	0x00800000
   127c0:	ror	r2, r0, #3
   127c4:	udiv	r2, r2, r1
   127c8:	mul	r1, r2, r1
   127cc:	rsb	r0, r1, r0, ror #3
   127d0:	bx	lr
   127d4:	sub	r0, r0, r1
   127d8:	clz	r0, r0
   127dc:	lsr	r0, r0, #5
   127e0:	bx	lr
   127e4:	push	{r4, r5, r6, r7, fp, lr}
   127e8:	add	fp, sp, #16
   127ec:	mov	r4, r0
   127f0:	ldr	r5, [r0]
   127f4:	ldr	r0, [r0, #4]
   127f8:	cmp	r5, r0
   127fc:	bcs	128a0 <__mempcpy_chk@plt+0x18bc>
   12800:	mov	r6, #0
   12804:	b	12820 <__mempcpy_chk@plt+0x183c>
   12808:	str	r6, [r5]
   1280c:	str	r6, [r5, #4]
   12810:	ldr	r0, [r4, #4]
   12814:	add	r5, r5, #8
   12818:	cmp	r5, r0
   1281c:	bcs	128a0 <__mempcpy_chk@plt+0x18bc>
   12820:	ldr	r1, [r5]
   12824:	cmp	r1, #0
   12828:	beq	12814 <__mempcpy_chk@plt+0x1830>
   1282c:	ldr	r1, [r4, #32]
   12830:	ldr	r7, [r5, #4]
   12834:	cmp	r1, #0
   12838:	mov	r0, r1
   1283c:	movwne	r0, #1
   12840:	cmp	r7, #0
   12844:	bne	12888 <__mempcpy_chk@plt+0x18a4>
   12848:	cmp	r0, #0
   1284c:	beq	12808 <__mempcpy_chk@plt+0x1824>
   12850:	ldr	r0, [r5]
   12854:	blx	r1
   12858:	b	12808 <__mempcpy_chk@plt+0x1824>
   1285c:	str	r6, [r7]
   12860:	cmp	r1, #0
   12864:	ldr	r2, [r7, #4]
   12868:	ldr	r0, [r4, #36]	; 0x24
   1286c:	str	r0, [r7, #4]
   12870:	mov	r0, r1
   12874:	str	r7, [r4, #36]	; 0x24
   12878:	movwne	r0, #1
   1287c:	cmp	r2, #0
   12880:	mov	r7, r2
   12884:	beq	12848 <__mempcpy_chk@plt+0x1864>
   12888:	tst	r0, #1
   1288c:	beq	1285c <__mempcpy_chk@plt+0x1878>
   12890:	ldr	r0, [r7]
   12894:	blx	r1
   12898:	ldr	r1, [r4, #32]
   1289c:	b	1285c <__mempcpy_chk@plt+0x1878>
   128a0:	mov	r0, #0
   128a4:	str	r0, [r4, #12]
   128a8:	str	r0, [r4, #16]
   128ac:	pop	{r4, r5, r6, r7, fp, pc}
   128b0:	push	{r4, r5, r6, sl, fp, lr}
   128b4:	add	fp, sp, #16
   128b8:	mov	r4, r0
   128bc:	ldr	r0, [r0, #32]
   128c0:	cmp	r0, #0
   128c4:	beq	12938 <__mempcpy_chk@plt+0x1954>
   128c8:	ldr	r0, [r4, #16]
   128cc:	cmp	r0, #0
   128d0:	beq	12938 <__mempcpy_chk@plt+0x1954>
   128d4:	ldr	r5, [r4]
   128d8:	ldr	r1, [r4, #4]
   128dc:	cmp	r5, r1
   128e0:	bcc	128f8 <__mempcpy_chk@plt+0x1914>
   128e4:	b	12938 <__mempcpy_chk@plt+0x1954>
   128e8:	ldr	r1, [r4, #4]
   128ec:	add	r5, r5, #8
   128f0:	cmp	r5, r1
   128f4:	bcs	12938 <__mempcpy_chk@plt+0x1954>
   128f8:	ldr	r0, [r5]
   128fc:	cmp	r0, #0
   12900:	cmpne	r5, #0
   12904:	beq	128ec <__mempcpy_chk@plt+0x1908>
   12908:	ldr	r1, [r4, #32]
   1290c:	blx	r1
   12910:	ldr	r6, [r5, #4]
   12914:	cmp	r6, #0
   12918:	beq	128e8 <__mempcpy_chk@plt+0x1904>
   1291c:	ldr	r1, [r4, #32]
   12920:	ldr	r0, [r6]
   12924:	blx	r1
   12928:	ldr	r6, [r6, #4]
   1292c:	cmp	r6, #0
   12930:	bne	1291c <__mempcpy_chk@plt+0x1938>
   12934:	b	128e8 <__mempcpy_chk@plt+0x1904>
   12938:	ldr	r5, [r4]
   1293c:	ldr	r1, [r4, #4]
   12940:	cmp	r5, r1
   12944:	bcc	12958 <__mempcpy_chk@plt+0x1974>
   12948:	b	12980 <__mempcpy_chk@plt+0x199c>
   1294c:	add	r5, r5, #8
   12950:	cmp	r5, r1
   12954:	bcs	12980 <__mempcpy_chk@plt+0x199c>
   12958:	ldr	r0, [r5, #4]
   1295c:	cmp	r0, #0
   12960:	beq	1294c <__mempcpy_chk@plt+0x1968>
   12964:	ldr	r6, [r0, #4]
   12968:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   1296c:	cmp	r6, #0
   12970:	mov	r0, r6
   12974:	bne	12964 <__mempcpy_chk@plt+0x1980>
   12978:	ldr	r1, [r4, #4]
   1297c:	b	1294c <__mempcpy_chk@plt+0x1968>
   12980:	ldr	r0, [r4, #36]	; 0x24
   12984:	cmp	r0, #0
   12988:	beq	129a0 <__mempcpy_chk@plt+0x19bc>
   1298c:	ldr	r5, [r0, #4]
   12990:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   12994:	cmp	r5, #0
   12998:	mov	r0, r5
   1299c:	bne	1298c <__mempcpy_chk@plt+0x19a8>
   129a0:	ldr	r0, [r4]
   129a4:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   129a8:	mov	r0, r4
   129ac:	pop	{r4, r5, r6, sl, fp, lr}
   129b0:	b	120dc <__mempcpy_chk@plt+0x10f8>
   129b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129b8:	add	fp, sp, #28
   129bc:	sub	sp, sp, #44	; 0x2c
   129c0:	mov	r7, r0
   129c4:	mov	r4, r0
   129c8:	ldr	r0, [r7, #20]!
   129cc:	ldrb	r2, [r0, #16]
   129d0:	cmp	r2, #0
   129d4:	bne	12a04 <__mempcpy_chk@plt+0x1a20>
   129d8:	vmov	s2, r1
   129dc:	vldr	s0, [r0, #8]
   129e0:	vldr	s4, [pc, #564]	; 12c1c <__mempcpy_chk@plt+0x1c38>
   129e4:	mov	r5, #0
   129e8:	vcvt.f32.u32	s2, s2
   129ec:	vdiv.f32	s2, s2, s0
   129f0:	vcvt.u32.f32	s0, s2
   129f4:	vcmpe.f32	s2, s4
   129f8:	vmrs	APSR_nzcv, fpscr
   129fc:	bge	12c0c <__mempcpy_chk@plt+0x1c28>
   12a00:	vmov	r1, s0
   12a04:	cmp	r1, #10
   12a08:	mov	r5, #0
   12a0c:	movls	r1, #10
   12a10:	orr	r6, r1, #1
   12a14:	cmn	r6, #1
   12a18:	beq	12c0c <__mempcpy_chk@plt+0x1c28>
   12a1c:	mov	r0, #3
   12a20:	cmp	r6, #10
   12a24:	bcc	12a5c <__mempcpy_chk@plt+0x1a78>
   12a28:	mov	r0, #3
   12a2c:	mov	r2, #9
   12a30:	mov	r1, #12
   12a34:	udiv	r3, r6, r0
   12a38:	mls	r3, r3, r0, r6
   12a3c:	cmp	r3, #0
   12a40:	beq	12a5c <__mempcpy_chk@plt+0x1a78>
   12a44:	add	r2, r2, r1
   12a48:	add	r1, r1, #8
   12a4c:	add	r0, r0, #2
   12a50:	add	r2, r2, #4
   12a54:	cmp	r2, r6
   12a58:	bcc	12a34 <__mempcpy_chk@plt+0x1a50>
   12a5c:	udiv	r1, r6, r0
   12a60:	mls	r0, r1, r0, r6
   12a64:	cmp	r0, #0
   12a68:	bne	12a7c <__mempcpy_chk@plt+0x1a98>
   12a6c:	add	r6, r6, #2
   12a70:	cmn	r6, #1
   12a74:	bne	12a1c <__mempcpy_chk@plt+0x1a38>
   12a78:	b	12c0c <__mempcpy_chk@plt+0x1c28>
   12a7c:	sub	r0, r6, #1
   12a80:	cmn	r0, #-536870910	; 0xe0000002
   12a84:	bhi	12c0c <__mempcpy_chk@plt+0x1c28>
   12a88:	ldr	r0, [r4, #8]
   12a8c:	cmp	r6, r0
   12a90:	bne	12a9c <__mempcpy_chk@plt+0x1ab8>
   12a94:	mov	r5, #1
   12a98:	b	12c0c <__mempcpy_chk@plt+0x1c28>
   12a9c:	mov	r0, r6
   12aa0:	mov	r1, #8
   12aa4:	bl	16004 <__mempcpy_chk@plt+0x5020>
   12aa8:	cmp	r0, #0
   12aac:	str	r0, [sp, #4]
   12ab0:	beq	12c0c <__mempcpy_chk@plt+0x1c28>
   12ab4:	add	r0, r0, r6, lsl #3
   12ab8:	mov	r1, #0
   12abc:	add	r5, sp, #4
   12ac0:	mov	sl, r4
   12ac4:	mov	r2, #0
   12ac8:	str	r1, [sp, #20]
   12acc:	str	r1, [sp, #16]
   12ad0:	str	r6, [sp, #12]
   12ad4:	mov	r1, r4
   12ad8:	str	r0, [sp, #8]
   12adc:	add	r0, r5, #20
   12ae0:	vld1.32	{d16-d17}, [r7]
   12ae4:	vst1.32	{d16-d17}, [r0]
   12ae8:	ldr	r0, [sl, #36]!	; 0x24
   12aec:	str	r0, [sp, #40]	; 0x28
   12af0:	mov	r0, r5
   12af4:	bl	12c20 <__mempcpy_chk@plt+0x1c3c>
   12af8:	cmp	r0, #0
   12afc:	beq	12b24 <__mempcpy_chk@plt+0x1b40>
   12b00:	ldr	r0, [r4]
   12b04:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   12b08:	mov	r0, #36	; 0x24
   12b0c:	vld1.32	{d16-d17}, [r5], r0
   12b10:	vst1.32	{d16-d17}, [r4], r0
   12b14:	ldr	r0, [r5]
   12b18:	mov	r5, #1
   12b1c:	str	r0, [r4]
   12b20:	b	12c0c <__mempcpy_chk@plt+0x1c28>
   12b24:	ldr	r0, [sp, #40]	; 0x28
   12b28:	str	r0, [sl]
   12b2c:	ldr	r0, [sp, #8]
   12b30:	ldr	r8, [sp, #4]
   12b34:	cmp	r8, r0
   12b38:	str	r0, [sp]
   12b3c:	bcs	12be8 <__mempcpy_chk@plt+0x1c04>
   12b40:	mov	r9, #0
   12b44:	b	12b5c <__mempcpy_chk@plt+0x1b78>
   12b48:	str	r9, [r8, #4]
   12b4c:	ldr	r0, [sp]
   12b50:	add	r8, r8, #8
   12b54:	cmp	r8, r0
   12b58:	bcs	12be8 <__mempcpy_chk@plt+0x1c04>
   12b5c:	ldr	r0, [r8]
   12b60:	cmp	r0, #0
   12b64:	beq	12b4c <__mempcpy_chk@plt+0x1b68>
   12b68:	ldr	r6, [r8, #4]
   12b6c:	cmp	r6, #0
   12b70:	beq	12b48 <__mempcpy_chk@plt+0x1b64>
   12b74:	ldr	r1, [r4, #8]
   12b78:	b	12b9c <__mempcpy_chk@plt+0x1bb8>
   12b7c:	add	r0, r3, r0, lsl #3
   12b80:	add	r0, r0, #4
   12b84:	ldr	r3, [r0]
   12b88:	cmp	r2, #0
   12b8c:	str	r3, [r6, #4]
   12b90:	str	r6, [r0]
   12b94:	mov	r6, r2
   12b98:	beq	12b48 <__mempcpy_chk@plt+0x1b64>
   12b9c:	ldr	r5, [r6]
   12ba0:	ldr	r2, [r4, #24]
   12ba4:	mov	r0, r5
   12ba8:	blx	r2
   12bac:	ldr	r1, [r4, #8]
   12bb0:	cmp	r0, r1
   12bb4:	bcs	12c18 <__mempcpy_chk@plt+0x1c34>
   12bb8:	ldr	r3, [r4]
   12bbc:	ldr	r2, [r6, #4]
   12bc0:	ldr	r7, [r3, r0, lsl #3]
   12bc4:	cmp	r7, #0
   12bc8:	bne	12b7c <__mempcpy_chk@plt+0x1b98>
   12bcc:	str	r5, [r3, r0, lsl #3]
   12bd0:	ldr	r0, [r4, #12]
   12bd4:	add	r0, r0, #1
   12bd8:	str	r0, [r4, #12]
   12bdc:	mov	r0, sl
   12be0:	str	r9, [r6]
   12be4:	b	12b84 <__mempcpy_chk@plt+0x1ba0>
   12be8:	add	r1, sp, #4
   12bec:	mov	r0, r4
   12bf0:	mov	r2, #0
   12bf4:	mov	r5, #0
   12bf8:	bl	12c20 <__mempcpy_chk@plt+0x1c3c>
   12bfc:	cmp	r0, #0
   12c00:	beq	12c18 <__mempcpy_chk@plt+0x1c34>
   12c04:	ldr	r0, [sp, #4]
   12c08:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   12c0c:	mov	r0, r5
   12c10:	sub	sp, fp, #28
   12c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c18:	bl	10fcc <abort@plt>
   12c1c:	svcmi	0x00800000
   12c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c24:	add	fp, sp, #28
   12c28:	sub	sp, sp, #12
   12c2c:	ldr	sl, [r1]
   12c30:	str	r1, [sp, #8]
   12c34:	ldr	r1, [r1, #4]
   12c38:	mov	r7, r0
   12c3c:	mov	r0, #1
   12c40:	str	r2, [sp, #4]
   12c44:	cmp	sl, r1
   12c48:	bcs	12da4 <__mempcpy_chk@plt+0x1dc0>
   12c4c:	add	r8, r7, #36	; 0x24
   12c50:	mov	r9, #0
   12c54:	b	12c90 <__mempcpy_chk@plt+0x1cac>
   12c58:	str	r4, [r6, r5, lsl #3]
   12c5c:	ldr	r0, [r7, #12]
   12c60:	add	r0, r0, #1
   12c64:	str	r0, [r7, #12]
   12c68:	ldr	r1, [sp, #8]
   12c6c:	str	r9, [sl]
   12c70:	ldr	r0, [r1, #12]
   12c74:	sub	r0, r0, #1
   12c78:	str	r0, [r1, #12]
   12c7c:	ldr	r0, [sp, #8]
   12c80:	add	sl, sl, #8
   12c84:	ldr	r0, [r0, #4]
   12c88:	cmp	sl, r0
   12c8c:	bcs	12da0 <__mempcpy_chk@plt+0x1dbc>
   12c90:	ldr	r4, [sl]
   12c94:	cmp	r4, #0
   12c98:	beq	12c7c <__mempcpy_chk@plt+0x1c98>
   12c9c:	ldr	r5, [sl, #4]
   12ca0:	cmp	r5, #0
   12ca4:	beq	12d20 <__mempcpy_chk@plt+0x1d3c>
   12ca8:	ldr	r1, [r7, #8]
   12cac:	b	12ce0 <__mempcpy_chk@plt+0x1cfc>
   12cb0:	str	r4, [r3, r0, lsl #3]
   12cb4:	ldr	r0, [r7, #12]
   12cb8:	add	r0, r0, #1
   12cbc:	str	r0, [r7, #12]
   12cc0:	mov	r0, r8
   12cc4:	str	r9, [r5]
   12cc8:	ldr	r3, [r0]
   12ccc:	cmp	r2, #0
   12cd0:	str	r3, [r5, #4]
   12cd4:	str	r5, [r0]
   12cd8:	mov	r5, r2
   12cdc:	beq	12d1c <__mempcpy_chk@plt+0x1d38>
   12ce0:	ldr	r4, [r5]
   12ce4:	ldr	r2, [r7, #24]
   12ce8:	mov	r0, r4
   12cec:	blx	r2
   12cf0:	ldr	r1, [r7, #8]
   12cf4:	cmp	r0, r1
   12cf8:	bcs	12db8 <__mempcpy_chk@plt+0x1dd4>
   12cfc:	ldr	r3, [r7]
   12d00:	ldr	r2, [r5, #4]
   12d04:	ldr	r6, [r3, r0, lsl #3]
   12d08:	cmp	r6, #0
   12d0c:	beq	12cb0 <__mempcpy_chk@plt+0x1ccc>
   12d10:	add	r0, r3, r0, lsl #3
   12d14:	add	r0, r0, #4
   12d18:	b	12cc8 <__mempcpy_chk@plt+0x1ce4>
   12d1c:	ldr	r4, [sl]
   12d20:	ldr	r0, [sp, #4]
   12d24:	str	r9, [sl, #4]
   12d28:	cmp	r0, #0
   12d2c:	bne	12c7c <__mempcpy_chk@plt+0x1c98>
   12d30:	ldr	r1, [r7, #8]
   12d34:	ldr	r2, [r7, #24]
   12d38:	mov	r0, r4
   12d3c:	blx	r2
   12d40:	mov	r5, r0
   12d44:	ldr	r0, [r7, #8]
   12d48:	cmp	r5, r0
   12d4c:	bcs	12db8 <__mempcpy_chk@plt+0x1dd4>
   12d50:	ldr	r6, [r7]
   12d54:	ldr	r0, [r6, r5, lsl #3]
   12d58:	cmp	r0, #0
   12d5c:	beq	12c58 <__mempcpy_chk@plt+0x1c74>
   12d60:	ldr	r0, [r8]
   12d64:	cmp	r0, #0
   12d68:	beq	12d78 <__mempcpy_chk@plt+0x1d94>
   12d6c:	ldr	r1, [r0, #4]
   12d70:	str	r1, [r8]
   12d74:	b	12d88 <__mempcpy_chk@plt+0x1da4>
   12d78:	mov	r0, #8
   12d7c:	bl	16058 <__mempcpy_chk@plt+0x5074>
   12d80:	cmp	r0, #0
   12d84:	beq	12dac <__mempcpy_chk@plt+0x1dc8>
   12d88:	add	r1, r6, r5, lsl #3
   12d8c:	str	r4, [r0]
   12d90:	ldr	r2, [r1, #4]
   12d94:	str	r2, [r0, #4]
   12d98:	str	r0, [r1, #4]
   12d9c:	b	12c68 <__mempcpy_chk@plt+0x1c84>
   12da0:	mov	r0, #1
   12da4:	sub	sp, fp, #28
   12da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12dac:	mov	r0, #0
   12db0:	sub	sp, fp, #28
   12db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12db8:	bl	10fcc <abort@plt>
   12dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12dc0:	add	fp, sp, #28
   12dc4:	sub	sp, sp, #4
   12dc8:	cmp	r1, #0
   12dcc:	beq	130e8 <__mempcpy_chk@plt+0x2104>
   12dd0:	mov	r8, r2
   12dd4:	mov	sl, r1
   12dd8:	ldr	r1, [r0, #8]
   12ddc:	ldr	r2, [r0, #24]
   12de0:	mov	r4, r0
   12de4:	mov	r0, sl
   12de8:	blx	r2
   12dec:	mov	r7, r0
   12df0:	ldr	r0, [r4, #8]
   12df4:	cmp	r7, r0
   12df8:	bcs	130e8 <__mempcpy_chk@plt+0x2104>
   12dfc:	ldr	r5, [r4]
   12e00:	mov	r9, r5
   12e04:	ldr	r1, [r9, r7, lsl #3]!
   12e08:	cmp	r1, #0
   12e0c:	beq	12e98 <__mempcpy_chk@plt+0x1eb4>
   12e10:	cmp	r1, sl
   12e14:	beq	12e40 <__mempcpy_chk@plt+0x1e5c>
   12e18:	ldr	r2, [r4, #28]
   12e1c:	mov	r0, sl
   12e20:	blx	r2
   12e24:	cmp	r0, #0
   12e28:	mov	r6, r9
   12e2c:	beq	12e54 <__mempcpy_chk@plt+0x1e70>
   12e30:	ldr	r0, [r6]
   12e34:	cmp	r0, #0
   12e38:	bne	12e44 <__mempcpy_chk@plt+0x1e60>
   12e3c:	b	12e98 <__mempcpy_chk@plt+0x1eb4>
   12e40:	mov	r0, sl
   12e44:	cmp	r8, #0
   12e48:	mov	r7, #0
   12e4c:	strne	r0, [r8]
   12e50:	b	13084 <__mempcpy_chk@plt+0x20a0>
   12e54:	add	r6, r5, r7, lsl #3
   12e58:	ldr	r0, [r6, #4]!
   12e5c:	cmp	r0, #0
   12e60:	beq	12e98 <__mempcpy_chk@plt+0x1eb4>
   12e64:	ldr	r1, [r0]
   12e68:	cmp	r1, sl
   12e6c:	beq	12e8c <__mempcpy_chk@plt+0x1ea8>
   12e70:	ldr	r2, [r4, #28]
   12e74:	mov	r0, sl
   12e78:	blx	r2
   12e7c:	ldr	r6, [r6]
   12e80:	cmp	r0, #0
   12e84:	beq	12e58 <__mempcpy_chk@plt+0x1e74>
   12e88:	b	12e30 <__mempcpy_chk@plt+0x1e4c>
   12e8c:	mov	r0, sl
   12e90:	cmp	r0, #0
   12e94:	bne	12e44 <__mempcpy_chk@plt+0x1e60>
   12e98:	vldr	s0, [r4, #8]
   12e9c:	vldr	s2, [r4, #12]
   12ea0:	ldr	r0, [r4, #20]
   12ea4:	vcvt.f32.u32	s0, s0
   12ea8:	vcvt.f32.u32	s4, s2
   12eac:	vldr	s2, [r0, #8]
   12eb0:	vmul.f32	s6, s2, s0
   12eb4:	vcmpe.f32	s6, s4
   12eb8:	vmrs	APSR_nzcv, fpscr
   12ebc:	bpl	13010 <__mempcpy_chk@plt+0x202c>
   12ec0:	movw	r1, #28512	; 0x6f60
   12ec4:	movt	r1, #1
   12ec8:	cmp	r0, r1
   12ecc:	beq	12f58 <__mempcpy_chk@plt+0x1f74>
   12ed0:	vldr	s6, [pc, #532]	; 130ec <__mempcpy_chk@plt+0x2108>
   12ed4:	vcmpe.f32	s2, s6
   12ed8:	vmrs	APSR_nzcv, fpscr
   12edc:	ble	12f44 <__mempcpy_chk@plt+0x1f60>
   12ee0:	vldr	s8, [pc, #520]	; 130f0 <__mempcpy_chk@plt+0x210c>
   12ee4:	vcmpe.f32	s2, s8
   12ee8:	vmrs	APSR_nzcv, fpscr
   12eec:	bpl	12f44 <__mempcpy_chk@plt+0x1f60>
   12ef0:	vldr	s8, [pc, #508]	; 130f4 <__mempcpy_chk@plt+0x2110>
   12ef4:	vldr	s10, [r0, #12]
   12ef8:	vcmpe.f32	s10, s8
   12efc:	vmrs	APSR_nzcv, fpscr
   12f00:	ble	12f44 <__mempcpy_chk@plt+0x1f60>
   12f04:	vldr	s8, [r0]
   12f08:	vcmpe.f32	s8, #0.0
   12f0c:	vmrs	APSR_nzcv, fpscr
   12f10:	blt	12f44 <__mempcpy_chk@plt+0x1f60>
   12f14:	vadd.f32	s6, s8, s6
   12f18:	vcmpe.f32	s6, s2
   12f1c:	vmrs	APSR_nzcv, fpscr
   12f20:	bpl	12f44 <__mempcpy_chk@plt+0x1f60>
   12f24:	vldr	s8, [r0, #4]
   12f28:	vmov.f32	s10, #112	; 0x3f800000  1.0
   12f2c:	vcmpe.f32	s8, s10
   12f30:	vmrs	APSR_nzcv, fpscr
   12f34:	bhi	12f44 <__mempcpy_chk@plt+0x1f60>
   12f38:	vcmpe.f32	s6, s8
   12f3c:	vmrs	APSR_nzcv, fpscr
   12f40:	bmi	12f5c <__mempcpy_chk@plt+0x1f78>
   12f44:	vldr	s2, [pc, #428]	; 130f8 <__mempcpy_chk@plt+0x2114>
   12f48:	movw	r0, #28512	; 0x6f60
   12f4c:	movt	r0, #1
   12f50:	str	r0, [r4, #20]
   12f54:	b	12f5c <__mempcpy_chk@plt+0x1f78>
   12f58:	mov	r0, r1
   12f5c:	vmul.f32	s6, s2, s0
   12f60:	vcmpe.f32	s6, s4
   12f64:	vmrs	APSR_nzcv, fpscr
   12f68:	bpl	13010 <__mempcpy_chk@plt+0x202c>
   12f6c:	vldr	s4, [r0, #12]
   12f70:	ldrb	r0, [r0, #16]
   12f74:	mvn	r7, #0
   12f78:	cmp	r0, #0
   12f7c:	vmul.f32	s0, s4, s0
   12f80:	vldr	s4, [pc, #372]	; 130fc <__mempcpy_chk@plt+0x2118>
   12f84:	vmul.f32	s2, s2, s0
   12f88:	vseleq.f32	s0, s2, s0
   12f8c:	vcmpe.f32	s0, s4
   12f90:	vmrs	APSR_nzcv, fpscr
   12f94:	bge	13084 <__mempcpy_chk@plt+0x20a0>
   12f98:	vcvt.u32.f32	s0, s0
   12f9c:	mov	r0, r4
   12fa0:	vmov	r1, s0
   12fa4:	bl	129b4 <__mempcpy_chk@plt+0x19d0>
   12fa8:	cmp	r0, #0
   12fac:	beq	13084 <__mempcpy_chk@plt+0x20a0>
   12fb0:	ldr	r1, [r4, #8]
   12fb4:	ldr	r2, [r4, #24]
   12fb8:	mov	r0, sl
   12fbc:	blx	r2
   12fc0:	mov	r7, r0
   12fc4:	ldr	r0, [r4, #8]
   12fc8:	cmp	r7, r0
   12fcc:	bcs	130e8 <__mempcpy_chk@plt+0x2104>
   12fd0:	ldr	r5, [r4]
   12fd4:	mov	r9, r5
   12fd8:	ldr	r1, [r9, r7, lsl #3]!
   12fdc:	cmp	r1, #0
   12fe0:	beq	13010 <__mempcpy_chk@plt+0x202c>
   12fe4:	cmp	r1, sl
   12fe8:	mov	r0, sl
   12fec:	beq	13008 <__mempcpy_chk@plt+0x2024>
   12ff0:	ldr	r2, [r4, #28]
   12ff4:	mov	r0, sl
   12ff8:	blx	r2
   12ffc:	cmp	r0, #0
   13000:	beq	13098 <__mempcpy_chk@plt+0x20b4>
   13004:	ldr	r0, [r9]
   13008:	cmp	r0, #0
   1300c:	bne	130e8 <__mempcpy_chk@plt+0x2104>
   13010:	ldr	r0, [r9]
   13014:	cmp	r0, #0
   13018:	beq	13034 <__mempcpy_chk@plt+0x2050>
   1301c:	ldr	r0, [r4, #36]	; 0x24
   13020:	cmp	r0, #0
   13024:	beq	13054 <__mempcpy_chk@plt+0x2070>
   13028:	ldr	r1, [r0, #4]
   1302c:	str	r1, [r4, #36]	; 0x24
   13030:	b	13064 <__mempcpy_chk@plt+0x2080>
   13034:	str	sl, [r9]
   13038:	ldr	r0, [r4, #12]
   1303c:	ldr	r1, [r4, #16]
   13040:	add	r0, r0, #1
   13044:	add	r1, r1, #1
   13048:	str	r0, [r4, #12]
   1304c:	str	r1, [r4, #16]
   13050:	b	13080 <__mempcpy_chk@plt+0x209c>
   13054:	mov	r0, #8
   13058:	bl	16058 <__mempcpy_chk@plt+0x5074>
   1305c:	cmp	r0, #0
   13060:	beq	13090 <__mempcpy_chk@plt+0x20ac>
   13064:	str	sl, [r0]
   13068:	ldr	r1, [r9, #4]
   1306c:	str	r1, [r0, #4]
   13070:	str	r0, [r9, #4]
   13074:	ldr	r0, [r4, #16]
   13078:	add	r0, r0, #1
   1307c:	str	r0, [r4, #16]
   13080:	mov	r7, #1
   13084:	mov	r0, r7
   13088:	sub	sp, fp, #28
   1308c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13090:	mvn	r7, #0
   13094:	b	13084 <__mempcpy_chk@plt+0x20a0>
   13098:	add	r6, r5, r7, lsl #3
   1309c:	ldr	r0, [r6, #4]!
   130a0:	cmp	r0, #0
   130a4:	beq	13010 <__mempcpy_chk@plt+0x202c>
   130a8:	ldr	r1, [r0]
   130ac:	cmp	r1, sl
   130b0:	beq	130dc <__mempcpy_chk@plt+0x20f8>
   130b4:	ldr	r2, [r4, #28]
   130b8:	mov	r0, sl
   130bc:	blx	r2
   130c0:	ldr	r6, [r6]
   130c4:	cmp	r0, #0
   130c8:	beq	1309c <__mempcpy_chk@plt+0x20b8>
   130cc:	ldr	r0, [r6]
   130d0:	cmp	r0, #0
   130d4:	beq	13010 <__mempcpy_chk@plt+0x202c>
   130d8:	b	130e8 <__mempcpy_chk@plt+0x2104>
   130dc:	mov	r0, sl
   130e0:	cmp	r0, #0
   130e4:	beq	13010 <__mempcpy_chk@plt+0x202c>
   130e8:	bl	10fcc <abort@plt>
   130ec:	stclcc	12, cr12, [ip, #820]	; 0x334
   130f0:	svccc	0x00666666
   130f4:	svccc	0x008ccccd
   130f8:	svccc	0x004ccccd
   130fc:	svcmi	0x00800000
   13100:	push	{r4, sl, fp, lr}
   13104:	add	fp, sp, #8
   13108:	sub	sp, sp, #8
   1310c:	add	r2, sp, #4
   13110:	mov	r4, r1
   13114:	bl	12dbc <__mempcpy_chk@plt+0x1dd8>
   13118:	cmn	r0, #1
   1311c:	beq	13130 <__mempcpy_chk@plt+0x214c>
   13120:	ldr	r1, [sp, #4]
   13124:	cmp	r0, #0
   13128:	moveq	r4, r1
   1312c:	b	13134 <__mempcpy_chk@plt+0x2150>
   13130:	mov	r4, #0
   13134:	mov	r0, r4
   13138:	sub	sp, fp, #8
   1313c:	pop	{r4, sl, fp, pc}
   13140:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13144:	add	fp, sp, #24
   13148:	mov	r9, r1
   1314c:	ldr	r1, [r0, #8]
   13150:	ldr	r2, [r0, #24]
   13154:	mov	r5, r0
   13158:	mov	r0, r9
   1315c:	blx	r2
   13160:	mov	r7, r0
   13164:	ldr	r0, [r5, #8]
   13168:	cmp	r7, r0
   1316c:	bcs	133d0 <__mempcpy_chk@plt+0x23ec>
   13170:	ldr	r6, [r5]
   13174:	mov	r8, #0
   13178:	mov	r4, r6
   1317c:	ldr	r1, [r4, r7, lsl #3]!
   13180:	cmp	r1, #0
   13184:	beq	13238 <__mempcpy_chk@plt+0x2254>
   13188:	cmp	r1, r9
   1318c:	beq	131a8 <__mempcpy_chk@plt+0x21c4>
   13190:	ldr	r2, [r5, #28]
   13194:	mov	r0, r9
   13198:	blx	r2
   1319c:	cmp	r0, #0
   131a0:	beq	131e0 <__mempcpy_chk@plt+0x21fc>
   131a4:	ldr	r9, [r4]
   131a8:	add	r0, r6, r7, lsl #3
   131ac:	ldr	r0, [r0, #4]
   131b0:	cmp	r0, #0
   131b4:	beq	13228 <__mempcpy_chk@plt+0x2244>
   131b8:	ldm	r0, {r1, r2}
   131bc:	stm	r4, {r1, r2}
   131c0:	mov	r1, #0
   131c4:	str	r1, [r0]
   131c8:	ldr	r1, [r5, #36]	; 0x24
   131cc:	str	r1, [r0, #4]
   131d0:	str	r0, [r5, #36]	; 0x24
   131d4:	cmp	r9, #0
   131d8:	bne	13270 <__mempcpy_chk@plt+0x228c>
   131dc:	b	13238 <__mempcpy_chk@plt+0x2254>
   131e0:	add	r7, r6, r7, lsl #3
   131e4:	ldr	r0, [r7, #4]!
   131e8:	cmp	r0, #0
   131ec:	beq	13238 <__mempcpy_chk@plt+0x2254>
   131f0:	ldr	r1, [r0]
   131f4:	cmp	r1, r9
   131f8:	beq	13240 <__mempcpy_chk@plt+0x225c>
   131fc:	ldr	r2, [r5, #28]
   13200:	mov	r0, r9
   13204:	blx	r2
   13208:	ldr	r1, [r7]
   1320c:	cmp	r0, #0
   13210:	bne	13248 <__mempcpy_chk@plt+0x2264>
   13214:	ldr	r0, [r1, #4]!
   13218:	mov	r7, r1
   1321c:	cmp	r0, #0
   13220:	bne	131f0 <__mempcpy_chk@plt+0x220c>
   13224:	b	13238 <__mempcpy_chk@plt+0x2254>
   13228:	mov	r0, #0
   1322c:	str	r0, [r4]
   13230:	cmp	r9, #0
   13234:	bne	13270 <__mempcpy_chk@plt+0x228c>
   13238:	mov	r0, r8
   1323c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13240:	mov	r1, r0
   13244:	b	1324c <__mempcpy_chk@plt+0x2268>
   13248:	ldr	r9, [r1]
   1324c:	ldr	r0, [r1, #4]
   13250:	str	r0, [r7]
   13254:	mov	r0, #0
   13258:	str	r0, [r1]
   1325c:	ldr	r0, [r5, #36]	; 0x24
   13260:	str	r0, [r1, #4]
   13264:	str	r1, [r5, #36]	; 0x24
   13268:	cmp	r9, #0
   1326c:	beq	13238 <__mempcpy_chk@plt+0x2254>
   13270:	ldr	r0, [r5, #16]
   13274:	sub	r0, r0, #1
   13278:	str	r0, [r5, #16]
   1327c:	ldr	r0, [r4]
   13280:	cmp	r0, #0
   13284:	bne	133c4 <__mempcpy_chk@plt+0x23e0>
   13288:	ldr	r0, [r5, #12]
   1328c:	vldr	s0, [r5, #8]
   13290:	sub	r1, r0, #1
   13294:	str	r1, [r5, #12]
   13298:	vmov	s2, r1
   1329c:	ldr	r0, [r5, #20]
   132a0:	vcvt.f32.u32	s0, s0
   132a4:	vcvt.f32.u32	s2, s2
   132a8:	vldr	s4, [r0]
   132ac:	vmul.f32	s6, s4, s0
   132b0:	vcmpe.f32	s6, s2
   132b4:	vmrs	APSR_nzcv, fpscr
   132b8:	ble	133c4 <__mempcpy_chk@plt+0x23e0>
   132bc:	movw	r1, #28512	; 0x6f60
   132c0:	movt	r1, #1
   132c4:	cmp	r0, r1
   132c8:	beq	13354 <__mempcpy_chk@plt+0x2370>
   132cc:	vldr	s8, [pc, #256]	; 133d4 <__mempcpy_chk@plt+0x23f0>
   132d0:	vldr	s6, [r0, #8]
   132d4:	vcmpe.f32	s6, s8
   132d8:	vmrs	APSR_nzcv, fpscr
   132dc:	ble	13340 <__mempcpy_chk@plt+0x235c>
   132e0:	vldr	s10, [pc, #240]	; 133d8 <__mempcpy_chk@plt+0x23f4>
   132e4:	vcmpe.f32	s6, s10
   132e8:	vmrs	APSR_nzcv, fpscr
   132ec:	bpl	13340 <__mempcpy_chk@plt+0x235c>
   132f0:	vcmpe.f32	s4, #0.0
   132f4:	vmrs	APSR_nzcv, fpscr
   132f8:	blt	13340 <__mempcpy_chk@plt+0x235c>
   132fc:	vldr	s10, [r0, #12]
   13300:	vldr	s12, [pc, #212]	; 133dc <__mempcpy_chk@plt+0x23f8>
   13304:	vcmpe.f32	s10, s12
   13308:	vmrs	APSR_nzcv, fpscr
   1330c:	ble	13340 <__mempcpy_chk@plt+0x235c>
   13310:	vadd.f32	s8, s4, s8
   13314:	vcmpe.f32	s8, s6
   13318:	vmrs	APSR_nzcv, fpscr
   1331c:	bpl	13340 <__mempcpy_chk@plt+0x235c>
   13320:	vldr	s6, [r0, #4]
   13324:	vmov.f32	s10, #112	; 0x3f800000  1.0
   13328:	vcmpe.f32	s6, s10
   1332c:	vmrs	APSR_nzcv, fpscr
   13330:	bhi	13340 <__mempcpy_chk@plt+0x235c>
   13334:	vcmpe.f32	s8, s6
   13338:	vmrs	APSR_nzcv, fpscr
   1333c:	bmi	13358 <__mempcpy_chk@plt+0x2374>
   13340:	vldr	s4, [pc, #152]	; 133e0 <__mempcpy_chk@plt+0x23fc>
   13344:	movw	r0, #28512	; 0x6f60
   13348:	movt	r0, #1
   1334c:	str	r0, [r5, #20]
   13350:	b	13358 <__mempcpy_chk@plt+0x2374>
   13354:	mov	r0, r1
   13358:	vmul.f32	s4, s4, s0
   1335c:	vcmpe.f32	s4, s2
   13360:	vmrs	APSR_nzcv, fpscr
   13364:	ble	133c4 <__mempcpy_chk@plt+0x23e0>
   13368:	vldr	s2, [r0, #4]
   1336c:	ldrb	r1, [r0, #16]
   13370:	cmp	r1, #0
   13374:	vmul.f32	s0, s2, s0
   13378:	bne	13384 <__mempcpy_chk@plt+0x23a0>
   1337c:	vldr	s2, [r0, #8]
   13380:	vmul.f32	s0, s0, s2
   13384:	vcvt.u32.f32	s0, s0
   13388:	mov	r0, r5
   1338c:	vmov	r1, s0
   13390:	bl	129b4 <__mempcpy_chk@plt+0x19d0>
   13394:	cmp	r0, #0
   13398:	bne	133c4 <__mempcpy_chk@plt+0x23e0>
   1339c:	ldr	r0, [r5, #36]	; 0x24
   133a0:	cmp	r0, #0
   133a4:	beq	133bc <__mempcpy_chk@plt+0x23d8>
   133a8:	ldr	r4, [r0, #4]
   133ac:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   133b0:	cmp	r4, #0
   133b4:	mov	r0, r4
   133b8:	bne	133a8 <__mempcpy_chk@plt+0x23c4>
   133bc:	mov	r0, #0
   133c0:	str	r0, [r5, #36]	; 0x24
   133c4:	mov	r8, r9
   133c8:	mov	r0, r8
   133cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   133d0:	bl	10fcc <abort@plt>
   133d4:	stclcc	12, cr12, [ip, #820]	; 0x334
   133d8:	svccc	0x00666666
   133dc:	svccc	0x008ccccd
   133e0:	andeq	r0, r0, r0
   133e4:	b	13140 <__mempcpy_chk@plt+0x215c>
   133e8:	push	{r4, r5, fp, lr}
   133ec:	add	fp, sp, #8
   133f0:	mov	r5, r0
   133f4:	ldr	r0, [r0]
   133f8:	mov	r4, r1
   133fc:	bl	16300 <__mempcpy_chk@plt+0x531c>
   13400:	ldrd	r2, [r5, #8]
   13404:	eor	r0, r2, r0
   13408:	mov	r1, r3
   1340c:	mov	r2, r4
   13410:	mov	r3, #0
   13414:	bl	16520 <__mempcpy_chk@plt+0x553c>
   13418:	mov	r0, r2
   1341c:	pop	{r4, r5, fp, pc}
   13420:	push	{r4, r5, fp, lr}
   13424:	add	fp, sp, #8
   13428:	mov	lr, r1
   1342c:	mov	r2, r0
   13430:	ldr	r3, [r2, #8]!
   13434:	ldr	ip, [lr, #8]!
   13438:	ldr	r4, [r2, #4]
   1343c:	eor	ip, r3, ip
   13440:	ldr	r3, [lr, #4]
   13444:	eor	r3, r4, r3
   13448:	orrs	r3, ip, r3
   1344c:	mov	ip, #0
   13450:	bne	13480 <__mempcpy_chk@plt+0x249c>
   13454:	ldrd	r4, [lr, #8]
   13458:	ldrd	r2, [r2, #8]
   1345c:	eor	r3, r3, r5
   13460:	eor	r2, r2, r4
   13464:	orrs	r2, r2, r3
   13468:	bne	13480 <__mempcpy_chk@plt+0x249c>
   1346c:	ldr	r1, [r1]
   13470:	ldr	r0, [r0]
   13474:	bl	10db0 <strcmp@plt>
   13478:	clz	r0, r0
   1347c:	lsr	ip, r0, #5
   13480:	mov	r0, ip
   13484:	pop	{r4, r5, fp, pc}
   13488:	push	{r4, sl, fp, lr}
   1348c:	add	fp, sp, #8
   13490:	mov	r4, r0
   13494:	ldr	r0, [r0]
   13498:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   1349c:	mov	r0, r4
   134a0:	pop	{r4, sl, fp, lr}
   134a4:	b	120dc <__mempcpy_chk@plt+0x10f8>
   134a8:	push	{r4, r5, fp, lr}
   134ac:	add	fp, sp, #8
   134b0:	cmp	r0, #0
   134b4:	beq	13548 <__mempcpy_chk@plt+0x2564>
   134b8:	mov	r1, #47	; 0x2f
   134bc:	mov	r4, r0
   134c0:	bl	10f90 <strrchr@plt>
   134c4:	cmp	r0, #0
   134c8:	mov	r5, r4
   134cc:	addne	r5, r0, #1
   134d0:	sub	r0, r5, r4
   134d4:	cmp	r0, #7
   134d8:	blt	1352c <__mempcpy_chk@plt+0x2548>
   134dc:	movw	r1, #28588	; 0x6fac
   134e0:	sub	r0, r5, #7
   134e4:	mov	r2, #7
   134e8:	movt	r1, #1
   134ec:	bl	10fc0 <strncmp@plt>
   134f0:	cmp	r0, #0
   134f4:	bne	1352c <__mempcpy_chk@plt+0x2548>
   134f8:	movw	r1, #28596	; 0x6fb4
   134fc:	mov	r0, r5
   13500:	mov	r2, #3
   13504:	movt	r1, #1
   13508:	bl	10fc0 <strncmp@plt>
   1350c:	cmp	r0, #0
   13510:	beq	1351c <__mempcpy_chk@plt+0x2538>
   13514:	mov	r4, r5
   13518:	b	1352c <__mempcpy_chk@plt+0x2548>
   1351c:	movw	r0, #33072	; 0x8130
   13520:	add	r4, r5, #3
   13524:	movt	r0, #2
   13528:	str	r4, [r0]
   1352c:	movw	r0, #33076	; 0x8134
   13530:	movt	r0, #2
   13534:	str	r4, [r0]
   13538:	movw	r0, #33108	; 0x8154
   1353c:	movt	r0, #2
   13540:	str	r4, [r0]
   13544:	pop	{r4, r5, fp, pc}
   13548:	movw	r0, #33088	; 0x8140
   1354c:	mov	r1, #55	; 0x37
   13550:	mov	r2, #1
   13554:	movt	r0, #2
   13558:	ldr	r3, [r0]
   1355c:	movw	r0, #28532	; 0x6f74
   13560:	movt	r0, #1
   13564:	bl	10e58 <fwrite@plt>
   13568:	bl	10fcc <abort@plt>
   1356c:	push	{r4, r5, r6, sl, fp, lr}
   13570:	add	fp, sp, #16
   13574:	mov	r4, r0
   13578:	movw	r0, #33112	; 0x8158
   1357c:	movt	r0, #2
   13580:	cmp	r4, #0
   13584:	moveq	r4, r0
   13588:	bl	10f18 <__errno_location@plt>
   1358c:	ldr	r6, [r0]
   13590:	mov	r5, r0
   13594:	mov	r0, r4
   13598:	mov	r1, #48	; 0x30
   1359c:	bl	15ee4 <__mempcpy_chk@plt+0x4f00>
   135a0:	str	r6, [r5]
   135a4:	pop	{r4, r5, r6, sl, fp, pc}
   135a8:	movw	r1, #33112	; 0x8158
   135ac:	cmp	r0, #0
   135b0:	movt	r1, #2
   135b4:	movne	r1, r0
   135b8:	ldr	r0, [r1]
   135bc:	bx	lr
   135c0:	movw	r2, #33112	; 0x8158
   135c4:	cmp	r0, #0
   135c8:	movt	r2, #2
   135cc:	movne	r2, r0
   135d0:	str	r1, [r2]
   135d4:	bx	lr
   135d8:	movw	r3, #33112	; 0x8158
   135dc:	cmp	r0, #0
   135e0:	and	r2, r2, #1
   135e4:	movt	r3, #2
   135e8:	movne	r3, r0
   135ec:	ubfx	r0, r1, #5, #3
   135f0:	and	r1, r1, #31
   135f4:	add	ip, r3, r0, lsl #2
   135f8:	mov	r0, #1
   135fc:	ldr	r3, [ip, #8]
   13600:	and	r0, r0, r3, lsr r1
   13604:	eor	r2, r0, r2
   13608:	eor	r1, r3, r2, lsl r1
   1360c:	str	r1, [ip, #8]
   13610:	bx	lr
   13614:	movw	r2, #33112	; 0x8158
   13618:	cmp	r0, #0
   1361c:	movt	r2, #2
   13620:	movne	r2, r0
   13624:	ldr	r0, [r2, #4]
   13628:	str	r1, [r2, #4]
   1362c:	bx	lr
   13630:	push	{fp, lr}
   13634:	mov	fp, sp
   13638:	movw	r3, #33112	; 0x8158
   1363c:	cmp	r0, #0
   13640:	movt	r3, #2
   13644:	movne	r3, r0
   13648:	cmp	r1, #0
   1364c:	mov	r0, #10
   13650:	cmpne	r2, #0
   13654:	str	r0, [r3]
   13658:	bne	13660 <__mempcpy_chk@plt+0x267c>
   1365c:	bl	10fcc <abort@plt>
   13660:	str	r1, [r3, #40]	; 0x28
   13664:	str	r2, [r3, #44]	; 0x2c
   13668:	pop	{fp, pc}
   1366c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13670:	add	fp, sp, #28
   13674:	sub	sp, sp, #20
   13678:	mov	r7, r0
   1367c:	ldr	r0, [fp, #8]
   13680:	movw	r5, #33112	; 0x8158
   13684:	mov	r8, r3
   13688:	mov	r9, r2
   1368c:	mov	sl, r1
   13690:	movt	r5, #2
   13694:	cmp	r0, #0
   13698:	movne	r5, r0
   1369c:	bl	10f18 <__errno_location@plt>
   136a0:	ldr	r2, [r5, #40]	; 0x28
   136a4:	ldr	r3, [r5, #44]	; 0x2c
   136a8:	mov	r4, r0
   136ac:	ldm	r5, {r0, r1}
   136b0:	add	r5, r5, #8
   136b4:	ldr	r6, [r4]
   136b8:	stm	sp, {r0, r1, r5}
   136bc:	mov	r0, r7
   136c0:	mov	r1, sl
   136c4:	str	r2, [sp, #12]
   136c8:	str	r3, [sp, #16]
   136cc:	mov	r2, r9
   136d0:	mov	r3, r8
   136d4:	bl	136e4 <__mempcpy_chk@plt+0x2700>
   136d8:	str	r6, [r4]
   136dc:	sub	sp, fp, #28
   136e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136e8:	add	fp, sp, #28
   136ec:	sub	sp, sp, #156	; 0x9c
   136f0:	mov	r5, r0
   136f4:	add	r0, r2, #1
   136f8:	mov	r6, r1
   136fc:	mov	sl, r3
   13700:	str	r2, [fp, #-80]	; 0xffffffb0
   13704:	str	r0, [sp, #72]	; 0x48
   13708:	ldr	r0, [fp, #12]
   1370c:	and	r1, r0, #1
   13710:	str	r1, [sp, #36]	; 0x24
   13714:	and	r1, r0, #4
   13718:	str	r1, [sp, #32]
   1371c:	ubfx	r9, r0, #1, #1
   13720:	bl	10e70 <__ctype_get_mb_cur_max@plt>
   13724:	str	r0, [sp, #40]	; 0x28
   13728:	ldr	r0, [fp, #24]
   1372c:	ldr	r7, [fp, #8]
   13730:	mov	r1, #0
   13734:	str	r5, [fp, #-84]	; 0xffffffac
   13738:	str	r1, [fp, #-56]	; 0xffffffc8
   1373c:	mov	r1, #0
   13740:	str	r1, [sp, #60]	; 0x3c
   13744:	mov	r1, #1
   13748:	str	r1, [fp, #-48]	; 0xffffffd0
   1374c:	str	r0, [sp, #80]	; 0x50
   13750:	ldr	r0, [fp, #20]
   13754:	str	r0, [sp, #76]	; 0x4c
   13758:	mov	r0, #0
   1375c:	str	r0, [sp, #56]	; 0x38
   13760:	mov	r0, #0
   13764:	str	r0, [fp, #-88]	; 0xffffffa8
   13768:	mov	r0, #0
   1376c:	str	r0, [fp, #-72]	; 0xffffffb8
   13770:	mov	r0, #0
   13774:	cmp	r7, #10
   13778:	bhi	1470c <__mempcpy_chk@plt+0x3728>
   1377c:	add	r1, pc, #24
   13780:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13784:	mov	r4, r6
   13788:	mov	r8, #0
   1378c:	mov	r2, #1
   13790:	mov	r3, #0
   13794:	mov	lr, sl
   13798:	ldr	pc, [r1, r7, lsl #2]
   1379c:	andeq	r3, r1, r0, ror #16
   137a0:			; <UNDEFINED> instruction: 0x000138b4
   137a4:	andeq	r3, r1, r4, ror r8
   137a8:	andeq	r3, r1, r8, asr r8
   137ac:	andeq	r3, r1, r8, lsr #17
   137b0:	ldrdeq	r3, [r1], -ip
   137b4:	andeq	r3, r1, r4, lsl #17
   137b8:	andeq	r3, r1, r0, ror #18
   137bc:	andeq	r3, r1, r8, asr #15
   137c0:	andeq	r3, r1, r8, asr #15
   137c4:	strdeq	r3, [r1], -r0
   137c8:	movw	r0, #28680	; 0x7008
   137cc:	mov	r1, r7
   137d0:	movt	r0, #1
   137d4:	bl	15114 <__mempcpy_chk@plt+0x4130>
   137d8:	str	r0, [sp, #76]	; 0x4c
   137dc:	movw	r0, #28682	; 0x700a
   137e0:	mov	r1, r7
   137e4:	movt	r0, #1
   137e8:	bl	15114 <__mempcpy_chk@plt+0x4130>
   137ec:	str	r0, [sp, #80]	; 0x50
   137f0:	mov	r8, #0
   137f4:	tst	r9, #1
   137f8:	bne	13830 <__mempcpy_chk@plt+0x284c>
   137fc:	ldr	r0, [sp, #76]	; 0x4c
   13800:	ldrb	r0, [r0]
   13804:	cmp	r0, #0
   13808:	beq	13830 <__mempcpy_chk@plt+0x284c>
   1380c:	ldr	r1, [sp, #76]	; 0x4c
   13810:	mov	r8, #0
   13814:	add	r1, r1, #1
   13818:	cmp	r8, r4
   1381c:	strbcc	r0, [r5, r8]
   13820:	ldrb	r0, [r1, r8]
   13824:	add	r8, r8, #1
   13828:	cmp	r0, #0
   1382c:	bne	13818 <__mempcpy_chk@plt+0x2834>
   13830:	ldr	r6, [sp, #80]	; 0x50
   13834:	mov	r0, r6
   13838:	bl	10f0c <strlen@plt>
   1383c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13840:	str	r0, [fp, #-72]	; 0xffffffb8
   13844:	str	r6, [fp, #-88]	; 0xffffffa8
   13848:	mov	r2, #1
   1384c:	mov	r3, r9
   13850:	mov	lr, sl
   13854:	b	13960 <__mempcpy_chk@plt+0x297c>
   13858:	mov	r0, #1
   1385c:	b	138b4 <__mempcpy_chk@plt+0x28d0>
   13860:	mov	r7, #0
   13864:	mov	r8, #0
   13868:	mov	r2, r0
   1386c:	mov	r3, #0
   13870:	b	13960 <__mempcpy_chk@plt+0x297c>
   13874:	tst	r9, #1
   13878:	bne	138b4 <__mempcpy_chk@plt+0x28d0>
   1387c:	mov	r2, r0
   13880:	b	1390c <__mempcpy_chk@plt+0x2928>
   13884:	mov	r0, #1
   13888:	mov	r8, #0
   1388c:	mov	r7, #5
   13890:	mov	r2, #1
   13894:	str	r0, [fp, #-72]	; 0xffffffb8
   13898:	movw	r0, #28678	; 0x7006
   1389c:	movt	r0, #1
   138a0:	str	r0, [fp, #-88]	; 0xffffffa8
   138a4:	b	138d4 <__mempcpy_chk@plt+0x28f0>
   138a8:	mov	r2, #1
   138ac:	tst	r9, #1
   138b0:	beq	1390c <__mempcpy_chk@plt+0x2928>
   138b4:	mov	r1, #1
   138b8:	mov	r8, #0
   138bc:	mov	r7, #2
   138c0:	mov	r2, r0
   138c4:	str	r1, [fp, #-72]	; 0xffffffb8
   138c8:	movw	r1, #28682	; 0x700a
   138cc:	movt	r1, #1
   138d0:	str	r1, [fp, #-88]	; 0xffffffa8
   138d4:	mov	r3, #1
   138d8:	b	13960 <__mempcpy_chk@plt+0x297c>
   138dc:	tst	r9, #1
   138e0:	beq	13930 <__mempcpy_chk@plt+0x294c>
   138e4:	mov	r0, #1
   138e8:	mov	r8, #0
   138ec:	mov	r2, #1
   138f0:	mov	r3, #1
   138f4:	mov	r7, #5
   138f8:	str	r0, [fp, #-72]	; 0xffffffb8
   138fc:	movw	r0, #28678	; 0x7006
   13900:	movt	r0, #1
   13904:	str	r0, [fp, #-88]	; 0xffffffa8
   13908:	b	13960 <__mempcpy_chk@plt+0x297c>
   1390c:	cmp	r4, #0
   13910:	mov	r8, #1
   13914:	mov	r3, #0
   13918:	mov	r7, #2
   1391c:	movne	r0, #39	; 0x27
   13920:	strbne	r0, [r5]
   13924:	movw	r0, #28682	; 0x700a
   13928:	movt	r0, #1
   1392c:	b	13954 <__mempcpy_chk@plt+0x2970>
   13930:	cmp	r4, #0
   13934:	mov	r8, #1
   13938:	mov	r2, #1
   1393c:	mov	r7, #5
   13940:	mov	r3, #0
   13944:	movne	r0, #34	; 0x22
   13948:	strbne	r0, [r5]
   1394c:	movw	r0, #28678	; 0x7006
   13950:	movt	r0, #1
   13954:	str	r0, [fp, #-88]	; 0xffffffa8
   13958:	mov	r0, #1
   1395c:	str	r0, [fp, #-72]	; 0xffffffb8
   13960:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13964:	eor	r6, r3, #1
   13968:	str	r7, [fp, #-68]	; 0xffffffbc
   1396c:	str	r3, [fp, #-76]	; 0xffffffb4
   13970:	str	r2, [sp, #84]	; 0x54
   13974:	str	r6, [sp, #92]	; 0x5c
   13978:	cmp	r0, #0
   1397c:	movwne	r0, #1
   13980:	and	r1, r0, r3
   13984:	and	r1, r2, r1
   13988:	str	r1, [sp, #48]	; 0x30
   1398c:	sub	r1, r7, #2
   13990:	clz	r1, r1
   13994:	lsr	r1, r1, #5
   13998:	and	r1, r1, r3
   1399c:	str	r1, [sp, #64]	; 0x40
   139a0:	subs	r1, r7, #2
   139a4:	mov	r7, #0
   139a8:	movwne	r1, #1
   139ac:	orr	r6, r1, r6
   139b0:	and	r1, r1, r2
   139b4:	and	r0, r0, r1
   139b8:	str	r6, [sp, #68]	; 0x44
   139bc:	str	r0, [fp, #-60]	; 0xffffffc4
   139c0:	orr	r0, r1, r3
   139c4:	ldr	r1, [fp, #16]
   139c8:	eor	r0, r0, #1
   139cc:	clz	r1, r1
   139d0:	lsr	r1, r1, #5
   139d4:	orr	r0, r1, r0
   139d8:	str	r0, [fp, #-64]	; 0xffffffc0
   139dc:	eor	r0, r2, #1
   139e0:	str	r0, [sp, #52]	; 0x34
   139e4:	cmn	lr, #1
   139e8:	beq	139f8 <__mempcpy_chk@plt+0x2a14>
   139ec:	cmp	r7, lr
   139f0:	bne	13a04 <__mempcpy_chk@plt+0x2a20>
   139f4:	b	1454c <__mempcpy_chk@plt+0x3568>
   139f8:	ldrb	r0, [ip, r7]
   139fc:	cmp	r0, #0
   13a00:	beq	14554 <__mempcpy_chk@plt+0x3570>
   13a04:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13a08:	mov	sl, #0
   13a0c:	cmp	r0, #0
   13a10:	beq	13a48 <__mempcpy_chk@plt+0x2a64>
   13a14:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13a18:	add	r5, r7, r0
   13a1c:	cmp	r0, #2
   13a20:	bcc	13a3c <__mempcpy_chk@plt+0x2a58>
   13a24:	cmn	lr, #1
   13a28:	bne	13a3c <__mempcpy_chk@plt+0x2a58>
   13a2c:	mov	r0, ip
   13a30:	bl	10f0c <strlen@plt>
   13a34:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13a38:	mov	lr, r0
   13a3c:	cmp	r5, lr
   13a40:	bls	13a50 <__mempcpy_chk@plt+0x2a6c>
   13a44:	ldr	r5, [fp, #-84]	; 0xffffffac
   13a48:	mov	r0, #0
   13a4c:	b	13a9c <__mempcpy_chk@plt+0x2ab8>
   13a50:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13a54:	ldr	r2, [fp, #-72]	; 0xffffffb8
   13a58:	add	r0, ip, r7
   13a5c:	mov	r6, r4
   13a60:	mov	r4, lr
   13a64:	bl	10f00 <bcmp@plt>
   13a68:	ldr	r2, [sp, #92]	; 0x5c
   13a6c:	cmp	r0, #0
   13a70:	ldr	r5, [fp, #-84]	; 0xffffffac
   13a74:	mov	r1, r0
   13a78:	movwne	r1, #1
   13a7c:	orr	r1, r1, r2
   13a80:	tst	r1, #1
   13a84:	beq	145dc <__mempcpy_chk@plt+0x35f8>
   13a88:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13a8c:	clz	r0, r0
   13a90:	mov	lr, r4
   13a94:	mov	r4, r6
   13a98:	lsr	r0, r0, #5
   13a9c:	str	r0, [fp, #-52]	; 0xffffffcc
   13aa0:	ldrb	r6, [ip, r7]
   13aa4:	cmp	r6, #126	; 0x7e
   13aa8:	bhi	13fd8 <__mempcpy_chk@plt+0x2ff4>
   13aac:	add	r3, pc, #16
   13ab0:	mov	r9, #1
   13ab4:	mov	r2, #110	; 0x6e
   13ab8:	mov	r0, #97	; 0x61
   13abc:	mov	r1, #0
   13ac0:	ldr	pc, [r3, r6, lsl #2]
   13ac4:	andeq	r3, r1, r8, lsr lr
   13ac8:	ldrdeq	r3, [r1], -r8
   13acc:	ldrdeq	r3, [r1], -r8
   13ad0:	ldrdeq	r3, [r1], -r8
   13ad4:	ldrdeq	r3, [r1], -r8
   13ad8:	ldrdeq	r3, [r1], -r8
   13adc:	ldrdeq	r3, [r1], -r8
   13ae0:	strheq	r4, [r1], -r4	; <UNPREDICTABLE>
   13ae4:	andeq	r3, r1, r8, lsl lr
   13ae8:	andeq	r3, r1, r0, lsl lr
   13aec:	andeq	r3, r1, r4, lsr #28
   13af0:	andeq	r3, r1, r0, asr #30
   13af4:	andeq	r3, r1, r8, lsl #28
   13af8:	andeq	r3, r1, r0, lsr #28
   13afc:	ldrdeq	r3, [r1], -r8
   13b00:	ldrdeq	r3, [r1], -r8
   13b04:	ldrdeq	r3, [r1], -r8
   13b08:	ldrdeq	r3, [r1], -r8
   13b0c:	ldrdeq	r3, [r1], -r8
   13b10:	ldrdeq	r3, [r1], -r8
   13b14:	ldrdeq	r3, [r1], -r8
   13b18:	ldrdeq	r3, [r1], -r8
   13b1c:	ldrdeq	r3, [r1], -r8
   13b20:	ldrdeq	r3, [r1], -r8
   13b24:	ldrdeq	r3, [r1], -r8
   13b28:	ldrdeq	r3, [r1], -r8
   13b2c:	ldrdeq	r3, [r1], -r8
   13b30:	ldrdeq	r3, [r1], -r8
   13b34:	ldrdeq	r3, [r1], -r8
   13b38:	ldrdeq	r3, [r1], -r8
   13b3c:	ldrdeq	r3, [r1], -r8
   13b40:	ldrdeq	r3, [r1], -r8
   13b44:			; <UNDEFINED> instruction: 0x00013dbc
   13b48:	andeq	r3, r1, r0, asr #27
   13b4c:	andeq	r3, r1, r0, asr #27
   13b50:	andeq	r3, r1, r8, lsr #27
   13b54:	andeq	r3, r1, r0, asr #27
   13b58:	andeq	r3, r1, r0, asr #25
   13b5c:	andeq	r3, r1, r0, asr #27
   13b60:	andeq	r3, r1, r8, asr #30
   13b64:	andeq	r3, r1, r0, asr #27
   13b68:	andeq	r3, r1, r0, asr #27
   13b6c:	andeq	r3, r1, r0, asr #27
   13b70:	andeq	r3, r1, r0, asr #25
   13b74:	andeq	r3, r1, r0, asr #25
   13b78:	andeq	r3, r1, r0, asr #25
   13b7c:	andeq	r3, r1, r0, asr #25
   13b80:	andeq	r3, r1, r0, asr #25
   13b84:	andeq	r3, r1, r0, asr #25
   13b88:	andeq	r3, r1, r0, asr #25
   13b8c:	andeq	r3, r1, r0, asr #25
   13b90:	andeq	r3, r1, r0, asr #25
   13b94:	andeq	r3, r1, r0, asr #25
   13b98:	andeq	r3, r1, r0, asr #25
   13b9c:	andeq	r3, r1, r0, asr #25
   13ba0:	andeq	r3, r1, r0, asr #25
   13ba4:	andeq	r3, r1, r0, asr #25
   13ba8:	andeq	r3, r1, r0, asr #25
   13bac:	andeq	r3, r1, r0, asr #25
   13bb0:	andeq	r3, r1, r0, asr #27
   13bb4:	andeq	r3, r1, r0, asr #27
   13bb8:	andeq	r3, r1, r0, asr #27
   13bbc:	andeq	r3, r1, r0, asr #27
   13bc0:	andeq	r3, r1, r0, lsl pc
   13bc4:	ldrdeq	r3, [r1], -r8
   13bc8:	andeq	r3, r1, r0, asr #25
   13bcc:	andeq	r3, r1, r0, asr #25
   13bd0:	andeq	r3, r1, r0, asr #25
   13bd4:	andeq	r3, r1, r0, asr #25
   13bd8:	andeq	r3, r1, r0, asr #25
   13bdc:	andeq	r3, r1, r0, asr #25
   13be0:	andeq	r3, r1, r0, asr #25
   13be4:	andeq	r3, r1, r0, asr #25
   13be8:	andeq	r3, r1, r0, asr #25
   13bec:	andeq	r3, r1, r0, asr #25
   13bf0:	andeq	r3, r1, r0, asr #25
   13bf4:	andeq	r3, r1, r0, asr #25
   13bf8:	andeq	r3, r1, r0, asr #25
   13bfc:	andeq	r3, r1, r0, asr #25
   13c00:	andeq	r3, r1, r0, asr #25
   13c04:	andeq	r3, r1, r0, asr #25
   13c08:	andeq	r3, r1, r0, asr #25
   13c0c:	andeq	r3, r1, r0, asr #25
   13c10:	andeq	r3, r1, r0, asr #25
   13c14:	andeq	r3, r1, r0, asr #25
   13c18:	andeq	r3, r1, r0, asr #25
   13c1c:	andeq	r3, r1, r0, asr #25
   13c20:	andeq	r3, r1, r0, asr #25
   13c24:	andeq	r3, r1, r0, asr #25
   13c28:	andeq	r3, r1, r0, asr #25
   13c2c:	andeq	r3, r1, r0, asr #25
   13c30:	andeq	r3, r1, r0, asr #27
   13c34:	andeq	r3, r1, r8, ror #27
   13c38:	andeq	r3, r1, r0, asr #25
   13c3c:	andeq	r3, r1, r0, asr #27
   13c40:	andeq	r3, r1, r0, asr #25
   13c44:	andeq	r3, r1, r0, asr #27
   13c48:	andeq	r3, r1, r0, asr #25
   13c4c:	andeq	r3, r1, r0, asr #25
   13c50:	andeq	r3, r1, r0, asr #25
   13c54:	andeq	r3, r1, r0, asr #25
   13c58:	andeq	r3, r1, r0, asr #25
   13c5c:	andeq	r3, r1, r0, asr #25
   13c60:	andeq	r3, r1, r0, asr #25
   13c64:	andeq	r3, r1, r0, asr #25
   13c68:	andeq	r3, r1, r0, asr #25
   13c6c:	andeq	r3, r1, r0, asr #25
   13c70:	andeq	r3, r1, r0, asr #25
   13c74:	andeq	r3, r1, r0, asr #25
   13c78:	andeq	r3, r1, r0, asr #25
   13c7c:	andeq	r3, r1, r0, asr #25
   13c80:	andeq	r3, r1, r0, asr #25
   13c84:	andeq	r3, r1, r0, asr #25
   13c88:	andeq	r3, r1, r0, asr #25
   13c8c:	andeq	r3, r1, r0, asr #25
   13c90:	andeq	r3, r1, r0, asr #25
   13c94:	andeq	r3, r1, r0, asr #25
   13c98:	andeq	r3, r1, r0, asr #25
   13c9c:	andeq	r3, r1, r0, asr #25
   13ca0:	andeq	r3, r1, r0, asr #25
   13ca4:	andeq	r3, r1, r0, asr #25
   13ca8:	andeq	r3, r1, r0, asr #25
   13cac:	andeq	r3, r1, r0, asr #25
   13cb0:	andeq	r3, r1, ip, ror sp
   13cb4:	andeq	r3, r1, r0, asr #27
   13cb8:	andeq	r3, r1, ip, ror sp
   13cbc:	andeq	r3, r1, r8, lsr #27
   13cc0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13cc4:	tst	r0, #1
   13cc8:	bne	13cf4 <__mempcpy_chk@plt+0x2d10>
   13ccc:	ldr	r1, [fp, #16]
   13cd0:	ubfx	r0, r6, #5, #3
   13cd4:	mov	r2, #1
   13cd8:	ldr	r0, [r1, r0, lsl #2]
   13cdc:	and	r1, r6, #31
   13ce0:	tst	r0, r2, lsl r1
   13ce4:	beq	13cf4 <__mempcpy_chk@plt+0x2d10>
   13ce8:	mov	r0, r6
   13cec:	mov	r1, r9
   13cf0:	b	13d08 <__mempcpy_chk@plt+0x2d24>
   13cf4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13cf8:	mov	r1, r9
   13cfc:	cmp	r0, #0
   13d00:	mov	r0, r6
   13d04:	beq	14048 <__mempcpy_chk@plt+0x3064>
   13d08:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13d0c:	tst	r2, #1
   13d10:	bne	14618 <__mempcpy_chk@plt+0x3634>
   13d14:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13d18:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13d1c:	subs	r2, r2, #2
   13d20:	movwne	r2, #1
   13d24:	orr	r2, r2, r3
   13d28:	tst	r2, #1
   13d2c:	bne	13d68 <__mempcpy_chk@plt+0x2d84>
   13d30:	cmp	r8, r4
   13d34:	movcc	r2, #39	; 0x27
   13d38:	strbcc	r2, [r5, r8]
   13d3c:	add	r2, r8, #1
   13d40:	cmp	r2, r4
   13d44:	movcc	r3, #36	; 0x24
   13d48:	strbcc	r3, [r5, r2]
   13d4c:	add	r2, r8, #2
   13d50:	add	r8, r8, #3
   13d54:	cmp	r2, r4
   13d58:	movcc	r3, #39	; 0x27
   13d5c:	strbcc	r3, [r5, r2]
   13d60:	mov	r2, #1
   13d64:	str	r2, [fp, #-56]	; 0xffffffc8
   13d68:	cmp	r8, r4
   13d6c:	movcc	r2, #92	; 0x5c
   13d70:	strbcc	r2, [r5, r8]
   13d74:	add	r8, r8, #1
   13d78:	b	1408c <__mempcpy_chk@plt+0x30a8>
   13d7c:	cmp	lr, #1
   13d80:	beq	13da8 <__mempcpy_chk@plt+0x2dc4>
   13d84:	mov	r9, #0
   13d88:	cmn	lr, #1
   13d8c:	bne	13db4 <__mempcpy_chk@plt+0x2dd0>
   13d90:	ldrb	r0, [ip, #1]
   13d94:	cmp	r0, #0
   13d98:	beq	13da8 <__mempcpy_chk@plt+0x2dc4>
   13d9c:	mvn	lr, #0
   13da0:	mov	sl, #0
   13da4:	b	13cc0 <__mempcpy_chk@plt+0x2cdc>
   13da8:	mov	r9, #0
   13dac:	cmp	r7, #0
   13db0:	beq	13dbc <__mempcpy_chk@plt+0x2dd8>
   13db4:	mov	sl, #0
   13db8:	b	13cc0 <__mempcpy_chk@plt+0x2cdc>
   13dbc:	mov	r1, #1
   13dc0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13dc4:	cmp	r0, #2
   13dc8:	bne	13de0 <__mempcpy_chk@plt+0x2dfc>
   13dcc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13dd0:	mov	r9, r1
   13dd4:	tst	r0, #1
   13dd8:	beq	13cc0 <__mempcpy_chk@plt+0x2cdc>
   13ddc:	b	14618 <__mempcpy_chk@plt+0x3634>
   13de0:	mov	r9, r1
   13de4:	b	13cc0 <__mempcpy_chk@plt+0x2cdc>
   13de8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13dec:	cmp	r0, #2
   13df0:	bne	1402c <__mempcpy_chk@plt+0x3048>
   13df4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13df8:	tst	r0, #1
   13dfc:	bne	14618 <__mempcpy_chk@plt+0x3634>
   13e00:	mov	sl, #0
   13e04:	b	14040 <__mempcpy_chk@plt+0x305c>
   13e08:	mov	r0, #102	; 0x66
   13e0c:	b	140b4 <__mempcpy_chk@plt+0x30d0>
   13e10:	mov	r2, #116	; 0x74
   13e14:	b	13e24 <__mempcpy_chk@plt+0x2e40>
   13e18:	mov	r0, #98	; 0x62
   13e1c:	b	140b4 <__mempcpy_chk@plt+0x30d0>
   13e20:	mov	r2, #114	; 0x72
   13e24:	ldr	r0, [sp, #68]	; 0x44
   13e28:	tst	r0, #1
   13e2c:	mov	r0, r2
   13e30:	bne	140b4 <__mempcpy_chk@plt+0x30d0>
   13e34:	b	14618 <__mempcpy_chk@plt+0x3634>
   13e38:	ldr	r0, [sp, #84]	; 0x54
   13e3c:	tst	r0, #1
   13e40:	beq	140d0 <__mempcpy_chk@plt+0x30ec>
   13e44:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13e48:	tst	r0, #1
   13e4c:	bne	14704 <__mempcpy_chk@plt+0x3720>
   13e50:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13e54:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13e58:	subs	r0, r0, #2
   13e5c:	movwne	r0, #1
   13e60:	orr	r0, r0, r1
   13e64:	tst	r0, #1
   13e68:	bne	13ea4 <__mempcpy_chk@plt+0x2ec0>
   13e6c:	cmp	r8, r4
   13e70:	movcc	r0, #39	; 0x27
   13e74:	strbcc	r0, [r5, r8]
   13e78:	add	r0, r8, #1
   13e7c:	cmp	r0, r4
   13e80:	movcc	r1, #36	; 0x24
   13e84:	strbcc	r1, [r5, r0]
   13e88:	add	r0, r8, #2
   13e8c:	add	r8, r8, #3
   13e90:	cmp	r0, r4
   13e94:	movcc	r1, #39	; 0x27
   13e98:	strbcc	r1, [r5, r0]
   13e9c:	mov	r0, #1
   13ea0:	str	r0, [fp, #-56]	; 0xffffffc8
   13ea4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13ea8:	cmp	r8, r4
   13eac:	mov	r9, #0
   13eb0:	mov	sl, #1
   13eb4:	mov	r6, #48	; 0x30
   13eb8:	movcc	r0, #92	; 0x5c
   13ebc:	strbcc	r0, [r5, r8]
   13ec0:	add	r0, r8, #1
   13ec4:	cmp	r1, #2
   13ec8:	beq	14298 <__mempcpy_chk@plt+0x32b4>
   13ecc:	add	r1, r7, #1
   13ed0:	cmp	r1, lr
   13ed4:	bcs	14298 <__mempcpy_chk@plt+0x32b4>
   13ed8:	ldrb	r1, [ip, r1]
   13edc:	sub	r1, r1, #48	; 0x30
   13ee0:	uxtb	r1, r1
   13ee4:	cmp	r1, #9
   13ee8:	bhi	14298 <__mempcpy_chk@plt+0x32b4>
   13eec:	cmp	r0, r4
   13ef0:	movcc	r1, #48	; 0x30
   13ef4:	strbcc	r1, [r5, r0]
   13ef8:	add	r0, r8, #2
   13efc:	add	r8, r8, #3
   13f00:	cmp	r0, r4
   13f04:	movcc	r1, #48	; 0x30
   13f08:	strbcc	r1, [r5, r0]
   13f0c:	b	13cc0 <__mempcpy_chk@plt+0x2cdc>
   13f10:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13f14:	mov	sl, #0
   13f18:	mov	r6, #63	; 0x3f
   13f1c:	cmp	r0, #5
   13f20:	beq	142a0 <__mempcpy_chk@plt+0x32bc>
   13f24:	cmp	r0, #2
   13f28:	bne	14348 <__mempcpy_chk@plt+0x3364>
   13f2c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13f30:	mov	r9, #0
   13f34:	tst	r0, #1
   13f38:	beq	13cc0 <__mempcpy_chk@plt+0x2cdc>
   13f3c:	b	14618 <__mempcpy_chk@plt+0x3634>
   13f40:	mov	r0, #118	; 0x76
   13f44:	b	140b4 <__mempcpy_chk@plt+0x30d0>
   13f48:	mov	r0, #1
   13f4c:	mov	r6, #39	; 0x27
   13f50:	str	r0, [sp, #60]	; 0x3c
   13f54:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13f58:	cmp	r0, #2
   13f5c:	bne	140ec <__mempcpy_chk@plt+0x3108>
   13f60:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13f64:	tst	r0, #1
   13f68:	bne	14618 <__mempcpy_chk@plt+0x3634>
   13f6c:	ldr	r2, [sp, #56]	; 0x38
   13f70:	clz	r1, r4
   13f74:	mov	sl, #0
   13f78:	mov	r9, #1
   13f7c:	lsr	r1, r1, #5
   13f80:	cmp	r2, #0
   13f84:	mov	r0, r2
   13f88:	movwne	r0, #1
   13f8c:	orrs	r0, r0, r1
   13f90:	moveq	r2, r4
   13f94:	moveq	r4, r0
   13f98:	cmp	r8, r4
   13f9c:	str	r2, [sp, #56]	; 0x38
   13fa0:	movcc	r0, #39	; 0x27
   13fa4:	strbcc	r0, [r5, r8]
   13fa8:	add	r0, r8, #1
   13fac:	cmp	r0, r4
   13fb0:	movcc	r1, #92	; 0x5c
   13fb4:	strbcc	r1, [r5, r0]
   13fb8:	add	r0, r8, #2
   13fbc:	add	r8, r8, #3
   13fc0:	cmp	r0, r4
   13fc4:	movcc	r1, #39	; 0x27
   13fc8:	strbcc	r1, [r5, r0]
   13fcc:	mov	r0, #0
   13fd0:	str	r0, [fp, #-56]	; 0xffffffc8
   13fd4:	b	13cc0 <__mempcpy_chk@plt+0x2cdc>
   13fd8:	ldr	r0, [sp, #40]	; 0x28
   13fdc:	str	r4, [sp, #88]	; 0x58
   13fe0:	cmp	r0, #1
   13fe4:	bne	140f4 <__mempcpy_chk@plt+0x3110>
   13fe8:	str	lr, [sp, #28]
   13fec:	bl	10edc <__ctype_b_loc@plt>
   13ff0:	ldr	r0, [r0]
   13ff4:	ldr	ip, [fp, #-80]	; 0xffffffb0
   13ff8:	mov	r2, #1
   13ffc:	add	r0, r0, r6, lsl #1
   14000:	ldrb	r0, [r0, #1]
   14004:	ubfx	r9, r0, #6, #1
   14008:	ldr	r0, [sp, #52]	; 0x34
   1400c:	cmp	r2, #1
   14010:	orr	r0, r9, r0
   14014:	bhi	14350 <__mempcpy_chk@plt+0x336c>
   14018:	tst	r0, #1
   1401c:	beq	14350 <__mempcpy_chk@plt+0x336c>
   14020:	ldr	lr, [sp, #28]
   14024:	ldr	r4, [sp, #88]	; 0x58
   14028:	b	13cc0 <__mempcpy_chk@plt+0x2cdc>
   1402c:	ldr	r1, [sp, #48]	; 0x30
   14030:	mov	sl, #0
   14034:	mov	r0, #92	; 0x5c
   14038:	cmp	r1, #0
   1403c:	beq	140b4 <__mempcpy_chk@plt+0x30d0>
   14040:	mov	r6, #92	; 0x5c
   14044:	mov	r9, #0
   14048:	cmp	sl, #0
   1404c:	bne	14084 <__mempcpy_chk@plt+0x30a0>
   14050:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14054:	tst	r0, #1
   14058:	beq	14084 <__mempcpy_chk@plt+0x30a0>
   1405c:	cmp	r8, r4
   14060:	movcc	r0, #39	; 0x27
   14064:	strbcc	r0, [r5, r8]
   14068:	add	r0, r8, #1
   1406c:	add	r8, r8, #2
   14070:	cmp	r0, r4
   14074:	movcc	r1, #39	; 0x27
   14078:	strbcc	r1, [r5, r0]
   1407c:	mov	r0, #0
   14080:	str	r0, [fp, #-56]	; 0xffffffc8
   14084:	mov	r1, r9
   14088:	mov	r0, r6
   1408c:	cmp	r8, r4
   14090:	strbcc	r0, [r5, r8]
   14094:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14098:	add	r8, r8, #1
   1409c:	and	r0, r0, r1
   140a0:	str	r0, [fp, #-48]	; 0xffffffd0
   140a4:	add	r7, r7, #1
   140a8:	cmn	lr, #1
   140ac:	bne	139ec <__mempcpy_chk@plt+0x2a08>
   140b0:	b	139f8 <__mempcpy_chk@plt+0x2a14>
   140b4:	ldr	r1, [sp, #84]	; 0x54
   140b8:	mov	sl, #0
   140bc:	mov	r9, #0
   140c0:	tst	r1, #1
   140c4:	mov	r1, #0
   140c8:	beq	13cc0 <__mempcpy_chk@plt+0x2cdc>
   140cc:	b	13d08 <__mempcpy_chk@plt+0x2d24>
   140d0:	ldr	r0, [sp, #36]	; 0x24
   140d4:	mov	r6, #0
   140d8:	mov	sl, #0
   140dc:	mov	r9, #0
   140e0:	cmp	r0, #0
   140e4:	beq	13cc0 <__mempcpy_chk@plt+0x2cdc>
   140e8:	b	140a4 <__mempcpy_chk@plt+0x30c0>
   140ec:	mov	r9, #1
   140f0:	b	13cc0 <__mempcpy_chk@plt+0x2cdc>
   140f4:	mov	r0, #0
   140f8:	cmn	lr, #1
   140fc:	sub	r4, fp, #40	; 0x28
   14100:	str	r0, [fp, #-36]	; 0xffffffdc
   14104:	str	r0, [fp, #-40]	; 0xffffffd8
   14108:	bne	1411c <__mempcpy_chk@plt+0x3138>
   1410c:	mov	r0, ip
   14110:	bl	10f0c <strlen@plt>
   14114:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14118:	mov	lr, r0
   1411c:	ldr	r0, [sp, #72]	; 0x48
   14120:	mov	r9, #1
   14124:	mov	r2, #0
   14128:	str	lr, [sp, #28]
   1412c:	add	r0, r0, r7
   14130:	str	r0, [sp, #20]
   14134:	b	14178 <__mempcpy_chk@plt+0x3194>
   14138:	ldr	r5, [sp, #44]	; 0x2c
   1413c:	add	r5, r0, r5
   14140:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14144:	bl	10e40 <iswprint@plt>
   14148:	cmp	r0, #0
   1414c:	sub	r4, fp, #40	; 0x28
   14150:	movwne	r0, #1
   14154:	and	r9, r9, r0
   14158:	mov	r0, r4
   1415c:	bl	10e04 <mbsinit@plt>
   14160:	mov	r2, r5
   14164:	ldr	lr, [sp, #28]
   14168:	ldr	r5, [fp, #-84]	; 0xffffffac
   1416c:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14170:	cmp	r0, #0
   14174:	bne	14008 <__mempcpy_chk@plt+0x3024>
   14178:	add	r0, r2, r7
   1417c:	str	r2, [sp, #44]	; 0x2c
   14180:	mov	r3, r4
   14184:	add	r1, ip, r0
   14188:	str	r0, [sp, #24]
   1418c:	sub	r2, lr, r0
   14190:	sub	r0, fp, #44	; 0x2c
   14194:	bl	16374 <__mempcpy_chk@plt+0x5390>
   14198:	cmp	r0, #0
   1419c:	beq	14540 <__mempcpy_chk@plt+0x355c>
   141a0:	cmn	r0, #1
   141a4:	beq	144fc <__mempcpy_chk@plt+0x3518>
   141a8:	ldr	lr, [sp, #28]
   141ac:	cmn	r0, #2
   141b0:	beq	14504 <__mempcpy_chk@plt+0x3520>
   141b4:	ldr	r2, [sp, #64]	; 0x40
   141b8:	ldr	r4, [sp, #88]	; 0x58
   141bc:	ldr	ip, [sp, #84]	; 0x54
   141c0:	cmp	r0, #2
   141c4:	mov	r1, #0
   141c8:	movwcc	r1, #1
   141cc:	eor	r2, r2, #1
   141d0:	orrs	r1, r2, r1
   141d4:	bne	14138 <__mempcpy_chk@plt+0x3154>
   141d8:	ldr	r1, [sp, #44]	; 0x2c
   141dc:	ldr	r2, [sp, #20]
   141e0:	add	r1, r2, r1
   141e4:	sub	r2, r0, #1
   141e8:	b	141f8 <__mempcpy_chk@plt+0x3214>
   141ec:	add	r1, r1, #1
   141f0:	subs	r2, r2, #1
   141f4:	beq	14138 <__mempcpy_chk@plt+0x3154>
   141f8:	ldrb	r3, [r1]
   141fc:	sub	r3, r3, #91	; 0x5b
   14200:	cmp	r3, #33	; 0x21
   14204:	bhi	141ec <__mempcpy_chk@plt+0x3208>
   14208:	add	r5, pc, #0
   1420c:	ldr	pc, [r5, r3, lsl #2]
   14210:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14214:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14218:	andeq	r4, r1, ip, ror #3
   1421c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14220:	andeq	r4, r1, ip, ror #3
   14224:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14228:	andeq	r4, r1, ip, ror #3
   1422c:	andeq	r4, r1, ip, ror #3
   14230:	andeq	r4, r1, ip, ror #3
   14234:	andeq	r4, r1, ip, ror #3
   14238:	andeq	r4, r1, ip, ror #3
   1423c:	andeq	r4, r1, ip, ror #3
   14240:	andeq	r4, r1, ip, ror #3
   14244:	andeq	r4, r1, ip, ror #3
   14248:	andeq	r4, r1, ip, ror #3
   1424c:	andeq	r4, r1, ip, ror #3
   14250:	andeq	r4, r1, ip, ror #3
   14254:	andeq	r4, r1, ip, ror #3
   14258:	andeq	r4, r1, ip, ror #3
   1425c:	andeq	r4, r1, ip, ror #3
   14260:	andeq	r4, r1, ip, ror #3
   14264:	andeq	r4, r1, ip, ror #3
   14268:	andeq	r4, r1, ip, ror #3
   1426c:	andeq	r4, r1, ip, ror #3
   14270:	andeq	r4, r1, ip, ror #3
   14274:	andeq	r4, r1, ip, ror #3
   14278:	andeq	r4, r1, ip, ror #3
   1427c:	andeq	r4, r1, ip, ror #3
   14280:	andeq	r4, r1, ip, ror #3
   14284:	andeq	r4, r1, ip, ror #3
   14288:	andeq	r4, r1, ip, ror #3
   1428c:	andeq	r4, r1, ip, ror #3
   14290:	andeq	r4, r1, ip, ror #3
   14294:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14298:	mov	r8, r0
   1429c:	b	13cc0 <__mempcpy_chk@plt+0x2cdc>
   142a0:	ldr	r0, [sp, #32]
   142a4:	cmp	r0, #0
   142a8:	beq	14348 <__mempcpy_chk@plt+0x3364>
   142ac:	add	r0, r7, #2
   142b0:	cmp	r0, lr
   142b4:	bcs	14348 <__mempcpy_chk@plt+0x3364>
   142b8:	add	r1, r7, ip
   142bc:	ldrb	r1, [r1, #1]
   142c0:	cmp	r1, #63	; 0x3f
   142c4:	bne	14348 <__mempcpy_chk@plt+0x3364>
   142c8:	ldrb	r9, [ip, r0]
   142cc:	sub	r2, r9, #33	; 0x21
   142d0:	cmp	r2, #29
   142d4:	bhi	14348 <__mempcpy_chk@plt+0x3364>
   142d8:	movw	r1, #20929	; 0x51c1
   142dc:	mov	r3, #1
   142e0:	movt	r1, #14336	; 0x3800
   142e4:	tst	r1, r3, lsl r2
   142e8:	beq	14348 <__mempcpy_chk@plt+0x3364>
   142ec:	ldr	r1, [fp, #-76]	; 0xffffffb4
   142f0:	tst	r1, #1
   142f4:	bne	14618 <__mempcpy_chk@plt+0x3634>
   142f8:	cmp	r8, r4
   142fc:	add	r2, r8, #1
   14300:	mov	r6, r9
   14304:	mov	r7, r0
   14308:	mov	r9, #0
   1430c:	movcc	r1, #63	; 0x3f
   14310:	strbcc	r1, [r5, r8]
   14314:	cmp	r2, r4
   14318:	movcc	r1, #34	; 0x22
   1431c:	strbcc	r1, [r5, r2]
   14320:	add	r2, r8, #2
   14324:	cmp	r2, r4
   14328:	movcc	r1, #34	; 0x22
   1432c:	strbcc	r1, [r5, r2]
   14330:	add	r2, r8, #3
   14334:	add	r8, r8, #4
   14338:	cmp	r2, r4
   1433c:	movcc	r1, #63	; 0x3f
   14340:	strbcc	r1, [r5, r2]
   14344:	b	13cc0 <__mempcpy_chk@plt+0x2cdc>
   14348:	mov	r9, #0
   1434c:	b	13cc0 <__mempcpy_chk@plt+0x2cdc>
   14350:	ldr	lr, [sp, #28]
   14354:	ldr	r4, [fp, #-56]	; 0xffffffc8
   14358:	add	r1, r2, r7
   1435c:	mov	r2, #0
   14360:	str	r1, [sp, #44]	; 0x2c
   14364:	tst	r0, #1
   14368:	bne	14484 <__mempcpy_chk@plt+0x34a0>
   1436c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   14370:	tst	r1, #1
   14374:	bne	14614 <__mempcpy_chk@plt+0x3630>
   14378:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1437c:	subs	r2, r1, #2
   14380:	movwne	r2, #1
   14384:	orr	r2, r2, r4
   14388:	tst	r2, #1
   1438c:	bne	143d0 <__mempcpy_chk@plt+0x33ec>
   14390:	ldr	r1, [sp, #88]	; 0x58
   14394:	add	r2, r8, #1
   14398:	mov	r4, #1
   1439c:	cmp	r8, r1
   143a0:	movcc	r1, #39	; 0x27
   143a4:	strbcc	r1, [r5, r8]
   143a8:	ldr	r1, [sp, #88]	; 0x58
   143ac:	cmp	r2, r1
   143b0:	movcc	r1, #36	; 0x24
   143b4:	strbcc	r1, [r5, r2]
   143b8:	ldr	r1, [sp, #88]	; 0x58
   143bc:	add	r2, r8, #2
   143c0:	add	r8, r8, #3
   143c4:	cmp	r2, r1
   143c8:	movcc	r1, #39	; 0x27
   143cc:	strbcc	r1, [r5, r2]
   143d0:	ldr	r1, [sp, #88]	; 0x58
   143d4:	add	r2, r8, #1
   143d8:	cmp	r8, r1
   143dc:	movcc	r1, #92	; 0x5c
   143e0:	strbcc	r1, [r5, r8]
   143e4:	ldr	r1, [sp, #88]	; 0x58
   143e8:	cmp	r2, r1
   143ec:	bcs	14400 <__mempcpy_chk@plt+0x341c>
   143f0:	uxtb	r3, r6
   143f4:	mov	r1, #48	; 0x30
   143f8:	orr	r3, r1, r3, lsr #6
   143fc:	strb	r3, [r5, r2]
   14400:	ldr	r1, [sp, #88]	; 0x58
   14404:	add	r2, r8, #2
   14408:	add	r8, r8, #3
   1440c:	cmp	r2, r1
   14410:	lsrcc	r3, r6, #3
   14414:	movcc	r1, #6
   14418:	bficc	r3, r1, #3, #29
   1441c:	mov	r1, #6
   14420:	bfi	r6, r1, #3, #29
   14424:	strbcc	r3, [r5, r2]
   14428:	mov	r2, #1
   1442c:	b	144ac <__mempcpy_chk@plt+0x34c8>
   14430:	ldr	r1, [sp, #88]	; 0x58
   14434:	ldr	r5, [fp, #-84]	; 0xffffffac
   14438:	ldr	r4, [sp, #88]	; 0x58
   1443c:	cmp	r8, r1
   14440:	movcc	r1, #39	; 0x27
   14444:	strbcc	r1, [r5, r8]
   14448:	add	r1, r8, #1
   1444c:	add	r8, r8, #2
   14450:	cmp	r1, r4
   14454:	movcc	r4, #39	; 0x27
   14458:	strbcc	r4, [r5, r1]
   1445c:	mov	r4, #0
   14460:	ldr	r1, [sp, #88]	; 0x58
   14464:	cmp	r8, r1
   14468:	ldr	r1, [sp, #72]	; 0x48
   1446c:	strbcc	r6, [r5, r8]
   14470:	add	r8, r8, #1
   14474:	ldrb	r6, [r1, r7]
   14478:	mov	r7, r3
   1447c:	tst	r0, #1
   14480:	beq	1436c <__mempcpy_chk@plt+0x3388>
   14484:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14488:	tst	r1, #1
   1448c:	beq	144a4 <__mempcpy_chk@plt+0x34c0>
   14490:	ldr	r1, [sp, #88]	; 0x58
   14494:	cmp	r8, r1
   14498:	movcc	r1, #92	; 0x5c
   1449c:	strbcc	r1, [r5, r8]
   144a0:	add	r8, r8, #1
   144a4:	mov	r1, #0
   144a8:	str	r1, [fp, #-52]	; 0xffffffcc
   144ac:	ldr	r1, [sp, #44]	; 0x2c
   144b0:	add	r3, r7, #1
   144b4:	and	sl, r2, #1
   144b8:	cmp	r1, r3
   144bc:	bls	144e0 <__mempcpy_chk@plt+0x34fc>
   144c0:	cmp	sl, #0
   144c4:	mvn	r5, r4
   144c8:	movwne	sl, #1
   144cc:	orr	r5, r5, sl
   144d0:	tst	r5, #1
   144d4:	beq	14430 <__mempcpy_chk@plt+0x344c>
   144d8:	ldr	r5, [fp, #-84]	; 0xffffffac
   144dc:	b	14460 <__mempcpy_chk@plt+0x347c>
   144e0:	str	r4, [fp, #-56]	; 0xffffffc8
   144e4:	ldr	r4, [sp, #88]	; 0x58
   144e8:	cmp	sl, #0
   144ec:	movwne	sl, #1
   144f0:	cmp	sl, #0
   144f4:	beq	14050 <__mempcpy_chk@plt+0x306c>
   144f8:	b	14084 <__mempcpy_chk@plt+0x30a0>
   144fc:	mov	r9, #0
   14500:	b	14540 <__mempcpy_chk@plt+0x355c>
   14504:	ldr	r0, [sp, #24]
   14508:	mov	r9, #0
   1450c:	cmp	lr, r0
   14510:	bls	14540 <__mempcpy_chk@plt+0x355c>
   14514:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14518:	ldr	r2, [sp, #44]	; 0x2c
   1451c:	add	r0, ip, r7
   14520:	ldrb	r1, [r0, r2]
   14524:	cmp	r1, #0
   14528:	beq	14008 <__mempcpy_chk@plt+0x3024>
   1452c:	add	r2, r2, #1
   14530:	add	r1, r7, r2
   14534:	cmp	r1, lr
   14538:	bcc	14520 <__mempcpy_chk@plt+0x353c>
   1453c:	b	14008 <__mempcpy_chk@plt+0x3024>
   14540:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14544:	ldr	r2, [sp, #44]	; 0x2c
   14548:	b	14008 <__mempcpy_chk@plt+0x3024>
   1454c:	mov	lr, r7
   14550:	b	14558 <__mempcpy_chk@plt+0x3574>
   14554:	mvn	lr, #0
   14558:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1455c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   14560:	eor	r0, r1, #2
   14564:	orr	r0, r0, r8
   14568:	clz	r0, r0
   1456c:	lsr	r0, r0, #5
   14570:	tst	r2, r0
   14574:	bne	14618 <__mempcpy_chk@plt+0x3634>
   14578:	subs	r0, r1, #2
   1457c:	movwne	r0, #1
   14580:	orr	r0, r2, r0
   14584:	tst	r0, #1
   14588:	ldreq	r0, [sp, #60]	; 0x3c
   1458c:	eoreq	r0, r0, #1
   14590:	tsteq	r0, #1
   14594:	bne	146ac <__mempcpy_chk@plt+0x36c8>
   14598:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1459c:	mov	sl, lr
   145a0:	tst	r0, #1
   145a4:	bne	14678 <__mempcpy_chk@plt+0x3694>
   145a8:	ldr	r6, [sp, #56]	; 0x38
   145ac:	mov	r9, #0
   145b0:	cmp	r6, #0
   145b4:	beq	146a4 <__mempcpy_chk@plt+0x36c0>
   145b8:	ldr	r0, [sp, #84]	; 0x54
   145bc:	mov	r1, #0
   145c0:	mov	r7, #2
   145c4:	cmp	r4, #0
   145c8:	str	r1, [fp, #-48]	; 0xffffffd0
   145cc:	mov	r1, #0
   145d0:	str	r1, [fp, #-76]	; 0xffffffb4
   145d4:	beq	13774 <__mempcpy_chk@plt+0x2790>
   145d8:	b	146ac <__mempcpy_chk@plt+0x36c8>
   145dc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   145e0:	ldr	r1, [fp, #12]
   145e4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   145e8:	mov	lr, r4
   145ec:	mov	r4, r6
   145f0:	b	14638 <__mempcpy_chk@plt+0x3654>
   145f4:	tst	ip, #1
   145f8:	ldr	r5, [fp, #-84]	; 0xffffffac
   145fc:	ldr	ip, [fp, #-80]	; 0xffffffb0
   14600:	ldr	r1, [fp, #12]
   14604:	mov	r0, #2
   14608:	movwne	r0, #4
   1460c:	mov	r2, r0
   14610:	b	14638 <__mempcpy_chk@plt+0x3654>
   14614:	ldr	r4, [sp, #88]	; 0x58
   14618:	ldr	r1, [sp, #84]	; 0x54
   1461c:	mov	r0, #2
   14620:	tst	r1, #1
   14624:	movwne	r0, #4
   14628:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1462c:	ldr	r1, [fp, #12]
   14630:	cmp	r2, #2
   14634:	moveq	r2, r0
   14638:	mov	r0, #0
   1463c:	bic	r1, r1, #2
   14640:	str	r2, [sp]
   14644:	mov	r2, ip
   14648:	mov	r3, lr
   1464c:	str	r0, [sp, #8]
   14650:	ldr	r0, [sp, #76]	; 0x4c
   14654:	str	r1, [sp, #4]
   14658:	mov	r1, r4
   1465c:	str	r0, [sp, #12]
   14660:	ldr	r0, [sp, #80]	; 0x50
   14664:	str	r0, [sp, #16]
   14668:	mov	r0, r5
   1466c:	bl	136e4 <__mempcpy_chk@plt+0x2700>
   14670:	mov	r8, r0
   14674:	b	146f8 <__mempcpy_chk@plt+0x3714>
   14678:	mov	r0, #5
   1467c:	ldr	r1, [sp, #56]	; 0x38
   14680:	ldr	r2, [fp, #-80]	; 0xffffffb0
   14684:	mov	r3, sl
   14688:	str	r0, [sp]
   1468c:	ldr	r0, [fp, #12]
   14690:	str	r0, [sp, #4]
   14694:	ldr	r0, [fp, #16]
   14698:	str	r0, [sp, #8]
   1469c:	ldr	r0, [sp, #76]	; 0x4c
   146a0:	b	1465c <__mempcpy_chk@plt+0x3678>
   146a4:	mov	r0, #0
   146a8:	str	r0, [fp, #-76]	; 0xffffffb4
   146ac:	ldr	r1, [fp, #-88]	; 0xffffffa8
   146b0:	cmp	r1, #0
   146b4:	beq	146ec <__mempcpy_chk@plt+0x3708>
   146b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   146bc:	tst	r0, #1
   146c0:	bne	146ec <__mempcpy_chk@plt+0x3708>
   146c4:	ldrb	r0, [r1]
   146c8:	cmp	r0, #0
   146cc:	beq	146ec <__mempcpy_chk@plt+0x3708>
   146d0:	add	r1, r1, #1
   146d4:	cmp	r8, r4
   146d8:	strbcc	r0, [r5, r8]
   146dc:	add	r8, r8, #1
   146e0:	ldrb	r0, [r1], #1
   146e4:	cmp	r0, #0
   146e8:	bne	146d4 <__mempcpy_chk@plt+0x36f0>
   146ec:	cmp	r8, r4
   146f0:	movcc	r0, #0
   146f4:	strbcc	r0, [r5, r8]
   146f8:	mov	r0, r8
   146fc:	sub	sp, fp, #28
   14700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14704:	mov	r0, #4
   14708:	b	14628 <__mempcpy_chk@plt+0x3644>
   1470c:	bl	10fcc <abort@plt>
   14710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14714:	add	fp, sp, #28
   14718:	sub	sp, sp, #28
   1471c:	movw	r5, #33112	; 0x8158
   14720:	cmp	r2, #0
   14724:	mov	r4, r1
   14728:	mov	r7, r0
   1472c:	str	r0, [sp, #20]
   14730:	movt	r5, #2
   14734:	movne	r5, r2
   14738:	bl	10f18 <__errno_location@plt>
   1473c:	mov	sl, r0
   14740:	ldr	r2, [r5, #40]	; 0x28
   14744:	ldr	r3, [r5, #44]	; 0x2c
   14748:	ldm	r5, {r0, r1}
   1474c:	orr	r8, r1, #1
   14750:	add	r9, r5, #8
   14754:	mov	r1, #0
   14758:	ldr	r6, [sl]
   1475c:	stm	sp, {r0, r8, r9}
   14760:	mov	r0, #0
   14764:	str	r2, [sp, #12]
   14768:	str	r3, [sp, #16]
   1476c:	mov	r2, r7
   14770:	mov	r3, r4
   14774:	str	r6, [sp, #24]
   14778:	mov	r6, r4
   1477c:	bl	136e4 <__mempcpy_chk@plt+0x2700>
   14780:	add	r7, r0, #1
   14784:	mov	r0, r7
   14788:	bl	15ab4 <__mempcpy_chk@plt+0x4ad0>
   1478c:	mov	r4, r0
   14790:	ldr	r0, [r5]
   14794:	ldr	r2, [r5, #44]	; 0x2c
   14798:	ldr	r1, [r5, #40]	; 0x28
   1479c:	mov	r3, r6
   147a0:	stm	sp, {r0, r8, r9}
   147a4:	str	r2, [sp, #16]
   147a8:	ldr	r2, [sp, #20]
   147ac:	str	r1, [sp, #12]
   147b0:	mov	r0, r4
   147b4:	mov	r1, r7
   147b8:	bl	136e4 <__mempcpy_chk@plt+0x2700>
   147bc:	ldr	r0, [sp, #24]
   147c0:	str	r0, [sl]
   147c4:	mov	r0, r4
   147c8:	sub	sp, fp, #28
   147cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   147d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147d4:	add	fp, sp, #28
   147d8:	sub	sp, sp, #36	; 0x24
   147dc:	movw	r8, #33112	; 0x8158
   147e0:	cmp	r3, #0
   147e4:	mov	r4, r2
   147e8:	str	r2, [sp, #24]
   147ec:	mov	r5, r1
   147f0:	mov	r6, r0
   147f4:	str	r0, [sp, #20]
   147f8:	movt	r8, #2
   147fc:	movne	r8, r3
   14800:	bl	10f18 <__errno_location@plt>
   14804:	str	r0, [sp, #28]
   14808:	ldr	r1, [r8, #40]	; 0x28
   1480c:	ldr	r2, [r8, #44]	; 0x2c
   14810:	ldr	r7, [r0]
   14814:	cmp	r4, #0
   14818:	add	sl, r8, #8
   1481c:	mov	r0, #0
   14820:	ldm	r8, {r3, r9}
   14824:	orreq	r9, r9, #1
   14828:	stm	sp, {r3, r9, sl}
   1482c:	str	r1, [sp, #12]
   14830:	str	r2, [sp, #16]
   14834:	mov	r1, #0
   14838:	mov	r2, r6
   1483c:	mov	r3, r5
   14840:	str	r7, [sp, #32]
   14844:	mov	r7, r5
   14848:	bl	136e4 <__mempcpy_chk@plt+0x2700>
   1484c:	add	r4, r0, #1
   14850:	mov	r5, r0
   14854:	mov	r0, r4
   14858:	bl	15ab4 <__mempcpy_chk@plt+0x4ad0>
   1485c:	mov	r6, r0
   14860:	ldr	r0, [r8]
   14864:	ldr	r2, [r8, #44]	; 0x2c
   14868:	ldr	r1, [r8, #40]	; 0x28
   1486c:	mov	r3, r7
   14870:	stm	sp, {r0, r9, sl}
   14874:	str	r2, [sp, #16]
   14878:	ldr	r2, [sp, #20]
   1487c:	str	r1, [sp, #12]
   14880:	mov	r0, r6
   14884:	mov	r1, r4
   14888:	bl	136e4 <__mempcpy_chk@plt+0x2700>
   1488c:	ldr	r0, [sp, #24]
   14890:	ldr	r1, [sp, #32]
   14894:	ldr	r2, [sp, #28]
   14898:	cmp	r0, #0
   1489c:	str	r1, [r2]
   148a0:	strne	r5, [r0]
   148a4:	mov	r0, r6
   148a8:	sub	sp, fp, #28
   148ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148b4:	add	fp, sp, #24
   148b8:	movw	r5, #33012	; 0x80f4
   148bc:	movw	r8, #33008	; 0x80f0
   148c0:	movt	r5, #2
   148c4:	movt	r8, #2
   148c8:	ldr	r0, [r5]
   148cc:	ldr	r4, [r8]
   148d0:	cmp	r0, #2
   148d4:	blt	14900 <__mempcpy_chk@plt+0x391c>
   148d8:	add	r7, r4, #12
   148dc:	mov	r6, #0
   148e0:	ldr	r0, [r7, r6, lsl #3]
   148e4:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   148e8:	ldr	r1, [r5]
   148ec:	add	r2, r6, #2
   148f0:	add	r0, r6, #1
   148f4:	mov	r6, r0
   148f8:	cmp	r2, r1
   148fc:	blt	148e0 <__mempcpy_chk@plt+0x38fc>
   14900:	ldr	r0, [r4, #4]
   14904:	movw	r9, #33160	; 0x8188
   14908:	movw	r7, #33016	; 0x80f8
   1490c:	movt	r9, #2
   14910:	movt	r7, #2
   14914:	cmp	r0, r9
   14918:	beq	14928 <__mempcpy_chk@plt+0x3944>
   1491c:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   14920:	mov	r0, #256	; 0x100
   14924:	stm	r7, {r0, r9}
   14928:	cmp	r4, r7
   1492c:	beq	1493c <__mempcpy_chk@plt+0x3958>
   14930:	mov	r0, r4
   14934:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   14938:	str	r7, [r8]
   1493c:	mov	r0, #1
   14940:	str	r0, [r5]
   14944:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14948:	movw	r3, #33112	; 0x8158
   1494c:	mvn	r2, #0
   14950:	movt	r3, #2
   14954:	b	14958 <__mempcpy_chk@plt+0x3974>
   14958:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1495c:	add	fp, sp, #28
   14960:	sub	sp, sp, #44	; 0x2c
   14964:	mov	r7, r3
   14968:	str	r2, [sp, #36]	; 0x24
   1496c:	str	r1, [sp, #32]
   14970:	mov	r5, r0
   14974:	bl	10f18 <__errno_location@plt>
   14978:	cmp	r5, #0
   1497c:	bmi	14aec <__mempcpy_chk@plt+0x3b08>
   14980:	cmn	r5, #-2147483647	; 0x80000001
   14984:	beq	14aec <__mempcpy_chk@plt+0x3b08>
   14988:	movw	r8, #33012	; 0x80f4
   1498c:	movw	r4, #33008	; 0x80f0
   14990:	str	r0, [sp, #28]
   14994:	ldr	r0, [r0]
   14998:	movt	r8, #2
   1499c:	movt	r4, #2
   149a0:	ldr	r1, [r8]
   149a4:	ldr	r6, [r4]
   149a8:	str	r0, [sp, #24]
   149ac:	cmp	r1, r5
   149b0:	ble	149bc <__mempcpy_chk@plt+0x39d8>
   149b4:	mov	sl, r6
   149b8:	b	14a28 <__mempcpy_chk@plt+0x3a44>
   149bc:	movw	r9, #33016	; 0x80f8
   149c0:	mov	r0, #8
   149c4:	str	r1, [fp, #-32]	; 0xffffffe0
   149c8:	sub	r1, r5, r1
   149cc:	mvn	r3, #-2147483648	; 0x80000000
   149d0:	movt	r9, #2
   149d4:	str	r0, [sp]
   149d8:	add	r2, r1, #1
   149dc:	sub	r1, fp, #32
   149e0:	subs	r0, r6, r9
   149e4:	movne	r0, r6
   149e8:	bl	15cb4 <__mempcpy_chk@plt+0x4cd0>
   149ec:	mov	sl, r0
   149f0:	cmp	r6, r9
   149f4:	str	r0, [r4]
   149f8:	bne	14a04 <__mempcpy_chk@plt+0x3a20>
   149fc:	ldrd	r0, [r9]
   14a00:	stm	sl, {r0, r1}
   14a04:	ldr	r1, [r8]
   14a08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14a0c:	add	r0, sl, r1, lsl #3
   14a10:	sub	r1, r2, r1
   14a14:	lsl	r2, r1, #3
   14a18:	mov	r1, #0
   14a1c:	bl	10f30 <memset@plt>
   14a20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a24:	str	r0, [r8]
   14a28:	mov	r9, sl
   14a2c:	ldm	r7, {r0, r1}
   14a30:	orr	r8, r1, #1
   14a34:	add	r1, r7, #8
   14a38:	ldr	r2, [r7, #40]	; 0x28
   14a3c:	ldr	r3, [r7, #44]	; 0x2c
   14a40:	ldr	r6, [r9, r5, lsl #3]!
   14a44:	str	r1, [sp, #20]
   14a48:	ldr	r4, [r9, #4]!
   14a4c:	stm	sp, {r0, r8}
   14a50:	add	r0, sp, #8
   14a54:	stm	r0, {r1, r2, r3}
   14a58:	ldr	r2, [sp, #32]
   14a5c:	ldr	r3, [sp, #36]	; 0x24
   14a60:	mov	r1, r6
   14a64:	mov	r0, r4
   14a68:	bl	136e4 <__mempcpy_chk@plt+0x2700>
   14a6c:	cmp	r6, r0
   14a70:	bhi	14ad4 <__mempcpy_chk@plt+0x3af0>
   14a74:	add	r6, r0, #1
   14a78:	movw	r0, #33160	; 0x8188
   14a7c:	movt	r0, #2
   14a80:	str	r6, [sl, r5, lsl #3]
   14a84:	cmp	r4, r0
   14a88:	beq	14a94 <__mempcpy_chk@plt+0x3ab0>
   14a8c:	mov	r0, r4
   14a90:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   14a94:	mov	r0, r6
   14a98:	bl	15ab4 <__mempcpy_chk@plt+0x4ad0>
   14a9c:	str	r0, [r9]
   14aa0:	mov	r4, r0
   14aa4:	add	r3, sp, #8
   14aa8:	ldr	r0, [r7]
   14aac:	ldr	r1, [r7, #40]	; 0x28
   14ab0:	ldr	r2, [r7, #44]	; 0x2c
   14ab4:	stm	sp, {r0, r8}
   14ab8:	ldr	r0, [sp, #20]
   14abc:	stm	r3, {r0, r1, r2}
   14ac0:	ldr	r2, [sp, #32]
   14ac4:	ldr	r3, [sp, #36]	; 0x24
   14ac8:	mov	r0, r4
   14acc:	mov	r1, r6
   14ad0:	bl	136e4 <__mempcpy_chk@plt+0x2700>
   14ad4:	ldr	r0, [sp, #28]
   14ad8:	ldr	r1, [sp, #24]
   14adc:	str	r1, [r0]
   14ae0:	mov	r0, r4
   14ae4:	sub	sp, fp, #28
   14ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14aec:	bl	10fcc <abort@plt>
   14af0:	movw	r3, #33112	; 0x8158
   14af4:	movt	r3, #2
   14af8:	b	14958 <__mempcpy_chk@plt+0x3974>
   14afc:	movw	r3, #33112	; 0x8158
   14b00:	mov	r1, r0
   14b04:	mov	r0, #0
   14b08:	mvn	r2, #0
   14b0c:	movt	r3, #2
   14b10:	b	14958 <__mempcpy_chk@plt+0x3974>
   14b14:	movw	r3, #33112	; 0x8158
   14b18:	mov	r2, r1
   14b1c:	mov	r1, r0
   14b20:	mov	r0, #0
   14b24:	movt	r3, #2
   14b28:	b	14958 <__mempcpy_chk@plt+0x3974>
   14b2c:	push	{fp, lr}
   14b30:	mov	fp, sp
   14b34:	sub	sp, sp, #48	; 0x30
   14b38:	vmov.i32	q8, #0	; 0x00000000
   14b3c:	mov	ip, #32
   14b40:	mov	r3, sp
   14b44:	mov	lr, r2
   14b48:	cmp	r1, #10
   14b4c:	add	r2, r3, #16
   14b50:	vst1.64	{d16-d17}, [r3], ip
   14b54:	vst1.64	{d16-d17}, [r2]
   14b58:	vst1.64	{d16-d17}, [r3]
   14b5c:	beq	14b7c <__mempcpy_chk@plt+0x3b98>
   14b60:	str	r1, [sp]
   14b64:	mov	r3, sp
   14b68:	mov	r1, lr
   14b6c:	mvn	r2, #0
   14b70:	bl	14958 <__mempcpy_chk@plt+0x3974>
   14b74:	mov	sp, fp
   14b78:	pop	{fp, pc}
   14b7c:	bl	10fcc <abort@plt>
   14b80:	push	{r4, sl, fp, lr}
   14b84:	add	fp, sp, #8
   14b88:	sub	sp, sp, #48	; 0x30
   14b8c:	vmov.i32	q8, #0	; 0x00000000
   14b90:	mov	ip, r3
   14b94:	mov	r3, sp
   14b98:	mov	lr, #32
   14b9c:	cmp	r1, #10
   14ba0:	add	r4, r3, #16
   14ba4:	vst1.64	{d16-d17}, [r3], lr
   14ba8:	vst1.64	{d16-d17}, [r4]
   14bac:	vst1.64	{d16-d17}, [r3]
   14bb0:	beq	14bd0 <__mempcpy_chk@plt+0x3bec>
   14bb4:	str	r1, [sp]
   14bb8:	mov	r1, r2
   14bbc:	mov	r3, sp
   14bc0:	mov	r2, ip
   14bc4:	bl	14958 <__mempcpy_chk@plt+0x3974>
   14bc8:	sub	sp, fp, #8
   14bcc:	pop	{r4, sl, fp, pc}
   14bd0:	bl	10fcc <abort@plt>
   14bd4:	push	{fp, lr}
   14bd8:	mov	fp, sp
   14bdc:	sub	sp, sp, #48	; 0x30
   14be0:	vmov.i32	q8, #0	; 0x00000000
   14be4:	mov	r3, sp
   14be8:	mov	ip, #32
   14bec:	cmp	r0, #10
   14bf0:	add	r2, r3, #16
   14bf4:	vst1.64	{d16-d17}, [r3], ip
   14bf8:	vst1.64	{d16-d17}, [r2]
   14bfc:	vst1.64	{d16-d17}, [r3]
   14c00:	beq	14c20 <__mempcpy_chk@plt+0x3c3c>
   14c04:	str	r0, [sp]
   14c08:	mov	r3, sp
   14c0c:	mov	r0, #0
   14c10:	mvn	r2, #0
   14c14:	bl	14958 <__mempcpy_chk@plt+0x3974>
   14c18:	mov	sp, fp
   14c1c:	pop	{fp, pc}
   14c20:	bl	10fcc <abort@plt>
   14c24:	push	{fp, lr}
   14c28:	mov	fp, sp
   14c2c:	sub	sp, sp, #48	; 0x30
   14c30:	vmov.i32	q8, #0	; 0x00000000
   14c34:	mov	r3, sp
   14c38:	mov	ip, #32
   14c3c:	cmp	r0, #10
   14c40:	add	lr, r3, #16
   14c44:	vst1.64	{d16-d17}, [r3], ip
   14c48:	vst1.64	{d16-d17}, [lr]
   14c4c:	vst1.64	{d16-d17}, [r3]
   14c50:	beq	14c6c <__mempcpy_chk@plt+0x3c88>
   14c54:	str	r0, [sp]
   14c58:	mov	r3, sp
   14c5c:	mov	r0, #0
   14c60:	bl	14958 <__mempcpy_chk@plt+0x3974>
   14c64:	mov	sp, fp
   14c68:	pop	{fp, pc}
   14c6c:	bl	10fcc <abort@plt>
   14c70:	push	{r4, sl, fp, lr}
   14c74:	add	fp, sp, #8
   14c78:	sub	sp, sp, #48	; 0x30
   14c7c:	mov	lr, r0
   14c80:	movw	r0, #33112	; 0x8158
   14c84:	mov	ip, r1
   14c88:	mov	r1, #32
   14c8c:	mov	r4, #1
   14c90:	movt	r0, #2
   14c94:	add	r3, r0, #16
   14c98:	vld1.64	{d16-d17}, [r0], r1
   14c9c:	vld1.64	{d20-d21}, [r0]
   14ca0:	vld1.64	{d18-d19}, [r3]
   14ca4:	mov	r3, sp
   14ca8:	add	r0, r3, #32
   14cac:	add	r1, r3, #16
   14cb0:	vst1.64	{d20-d21}, [r0]
   14cb4:	mov	r0, #28
   14cb8:	vst1.64	{d18-d19}, [r1]
   14cbc:	mov	r1, r3
   14cc0:	and	r0, r0, r2, lsr #3
   14cc4:	and	r2, r2, #31
   14cc8:	vst1.64	{d16-d17}, [r1], r0
   14ccc:	ldr	r0, [r1, #8]
   14cd0:	bic	r4, r4, r0, lsr r2
   14cd4:	eor	r0, r0, r4, lsl r2
   14cd8:	mov	r2, ip
   14cdc:	str	r0, [r1, #8]
   14ce0:	mov	r0, #0
   14ce4:	mov	r1, lr
   14ce8:	bl	14958 <__mempcpy_chk@plt+0x3974>
   14cec:	sub	sp, fp, #8
   14cf0:	pop	{r4, sl, fp, pc}
   14cf4:	push	{fp, lr}
   14cf8:	mov	fp, sp
   14cfc:	sub	sp, sp, #48	; 0x30
   14d00:	mov	ip, r0
   14d04:	movw	r0, #33112	; 0x8158
   14d08:	mov	r2, #32
   14d0c:	movt	r0, #2
   14d10:	add	r3, r0, #16
   14d14:	vld1.64	{d16-d17}, [r0], r2
   14d18:	vld1.64	{d20-d21}, [r0]
   14d1c:	vld1.64	{d18-d19}, [r3]
   14d20:	mov	r3, sp
   14d24:	add	r0, r3, #32
   14d28:	add	r2, r3, #16
   14d2c:	vst1.64	{d20-d21}, [r0]
   14d30:	mov	r0, #28
   14d34:	vst1.64	{d18-d19}, [r2]
   14d38:	mov	r2, r3
   14d3c:	and	r0, r0, r1, lsr #3
   14d40:	and	r1, r1, #31
   14d44:	vst1.64	{d16-d17}, [r2], r0
   14d48:	mov	r0, #1
   14d4c:	ldr	lr, [r2, #8]
   14d50:	bic	r0, r0, lr, lsr r1
   14d54:	eor	r0, lr, r0, lsl r1
   14d58:	mov	r1, ip
   14d5c:	str	r0, [r2, #8]
   14d60:	mov	r0, #0
   14d64:	mvn	r2, #0
   14d68:	bl	14958 <__mempcpy_chk@plt+0x3974>
   14d6c:	mov	sp, fp
   14d70:	pop	{fp, pc}
   14d74:	push	{fp, lr}
   14d78:	mov	fp, sp
   14d7c:	sub	sp, sp, #48	; 0x30
   14d80:	mov	r1, r0
   14d84:	movw	r0, #33112	; 0x8158
   14d88:	mov	r3, #32
   14d8c:	movt	r0, #2
   14d90:	add	r2, r0, #16
   14d94:	vld1.64	{d16-d17}, [r0], r3
   14d98:	mov	r3, sp
   14d9c:	vld1.64	{d18-d19}, [r2]
   14da0:	vld1.64	{d20-d21}, [r0]
   14da4:	add	r2, r3, #16
   14da8:	add	r0, r3, #32
   14dac:	vst1.64	{d18-d19}, [r2]
   14db0:	vst1.64	{d20-d21}, [r0]
   14db4:	mov	r0, #12
   14db8:	mov	r2, r3
   14dbc:	vst1.64	{d16-d17}, [r2], r0
   14dc0:	ldr	r0, [r2]
   14dc4:	orr	r0, r0, #67108864	; 0x4000000
   14dc8:	str	r0, [r2]
   14dcc:	mov	r0, #0
   14dd0:	mvn	r2, #0
   14dd4:	bl	14958 <__mempcpy_chk@plt+0x3974>
   14dd8:	mov	sp, fp
   14ddc:	pop	{fp, pc}
   14de0:	push	{fp, lr}
   14de4:	mov	fp, sp
   14de8:	sub	sp, sp, #48	; 0x30
   14dec:	mov	ip, r1
   14df0:	mov	r1, r0
   14df4:	movw	r0, #33112	; 0x8158
   14df8:	mov	r2, #32
   14dfc:	movt	r0, #2
   14e00:	add	r3, r0, #16
   14e04:	vld1.64	{d16-d17}, [r0], r2
   14e08:	vld1.64	{d18-d19}, [r3]
   14e0c:	vld1.64	{d20-d21}, [r0]
   14e10:	mov	r3, sp
   14e14:	add	r2, r3, #16
   14e18:	add	r0, r3, #32
   14e1c:	vst1.64	{d18-d19}, [r2]
   14e20:	vst1.64	{d20-d21}, [r0]
   14e24:	mov	r0, #12
   14e28:	mov	r2, r3
   14e2c:	vst1.64	{d16-d17}, [r2], r0
   14e30:	ldr	r0, [r2]
   14e34:	orr	r0, r0, #67108864	; 0x4000000
   14e38:	str	r0, [r2]
   14e3c:	mov	r0, #0
   14e40:	mov	r2, ip
   14e44:	bl	14958 <__mempcpy_chk@plt+0x3974>
   14e48:	mov	sp, fp
   14e4c:	pop	{fp, pc}
   14e50:	push	{r4, sl, fp, lr}
   14e54:	add	fp, sp, #8
   14e58:	sub	sp, sp, #96	; 0x60
   14e5c:	vmov.i32	q8, #0	; 0x00000000
   14e60:	mov	ip, r2
   14e64:	mov	r2, sp
   14e68:	mov	r4, #28
   14e6c:	cmp	r1, #10
   14e70:	mov	r3, r2
   14e74:	add	lr, r2, #16
   14e78:	vst1.64	{d16-d17}, [r3], r4
   14e7c:	vst1.64	{d16-d17}, [lr]
   14e80:	vst1.32	{d16-d17}, [r3]
   14e84:	beq	14ed4 <__mempcpy_chk@plt+0x3ef0>
   14e88:	vld1.64	{d16-d17}, [r2], r4
   14e8c:	vld1.64	{d18-d19}, [lr]
   14e90:	add	r3, sp, #48	; 0x30
   14e94:	vld1.32	{d20-d21}, [r2]
   14e98:	add	r2, r3, #20
   14e9c:	add	r4, r3, #4
   14ea0:	vst1.32	{d18-d19}, [r2]
   14ea4:	add	r2, r3, #32
   14ea8:	vst1.32	{d16-d17}, [r4]
   14eac:	vst1.32	{d20-d21}, [r2]
   14eb0:	str	r1, [sp, #48]	; 0x30
   14eb4:	mvn	r2, #0
   14eb8:	ldr	r1, [sp, #60]	; 0x3c
   14ebc:	orr	r1, r1, #67108864	; 0x4000000
   14ec0:	str	r1, [sp, #60]	; 0x3c
   14ec4:	mov	r1, ip
   14ec8:	bl	14958 <__mempcpy_chk@plt+0x3974>
   14ecc:	sub	sp, fp, #8
   14ed0:	pop	{r4, sl, fp, pc}
   14ed4:	bl	10fcc <abort@plt>
   14ed8:	push	{r4, r5, r6, sl, fp, lr}
   14edc:	add	fp, sp, #16
   14ee0:	sub	sp, sp, #48	; 0x30
   14ee4:	mov	ip, r3
   14ee8:	movw	r3, #33112	; 0x8158
   14eec:	mov	r6, #32
   14ef0:	cmp	r1, #0
   14ef4:	mov	r4, sp
   14ef8:	movt	r3, #2
   14efc:	cmpne	r2, #0
   14f00:	add	r5, r4, #16
   14f04:	add	lr, r3, #16
   14f08:	vld1.64	{d16-d17}, [r3], r6
   14f0c:	vld1.64	{d18-d19}, [lr]
   14f10:	vld1.64	{d20-d21}, [r3]
   14f14:	mov	r3, #10
   14f18:	vst1.64	{d16-d17}, [r4], r6
   14f1c:	vst1.64	{d18-d19}, [r5]
   14f20:	vst1.64	{d20-d21}, [r4]
   14f24:	str	r3, [sp]
   14f28:	bne	14f30 <__mempcpy_chk@plt+0x3f4c>
   14f2c:	bl	10fcc <abort@plt>
   14f30:	str	r2, [sp, #44]	; 0x2c
   14f34:	str	r1, [sp, #40]	; 0x28
   14f38:	mov	r3, sp
   14f3c:	mov	r1, ip
   14f40:	mvn	r2, #0
   14f44:	bl	14958 <__mempcpy_chk@plt+0x3974>
   14f48:	sub	sp, fp, #16
   14f4c:	pop	{r4, r5, r6, sl, fp, pc}
   14f50:	push	{r4, r5, r6, sl, fp, lr}
   14f54:	add	fp, sp, #16
   14f58:	sub	sp, sp, #48	; 0x30
   14f5c:	mov	lr, r3
   14f60:	movw	r3, #33112	; 0x8158
   14f64:	mov	r6, #32
   14f68:	cmp	r1, #0
   14f6c:	mov	r4, sp
   14f70:	movt	r3, #2
   14f74:	cmpne	r2, #0
   14f78:	add	r5, r4, #16
   14f7c:	add	ip, r3, #16
   14f80:	vld1.64	{d16-d17}, [r3], r6
   14f84:	vld1.64	{d18-d19}, [ip]
   14f88:	vld1.64	{d20-d21}, [r3]
   14f8c:	mov	r3, #10
   14f90:	vst1.64	{d16-d17}, [r4], r6
   14f94:	vst1.64	{d18-d19}, [r5]
   14f98:	vst1.64	{d20-d21}, [r4]
   14f9c:	str	r3, [sp]
   14fa0:	bne	14fa8 <__mempcpy_chk@plt+0x3fc4>
   14fa4:	bl	10fcc <abort@plt>
   14fa8:	ldr	ip, [fp, #8]
   14fac:	str	r2, [sp, #44]	; 0x2c
   14fb0:	str	r1, [sp, #40]	; 0x28
   14fb4:	mov	r3, sp
   14fb8:	mov	r1, lr
   14fbc:	mov	r2, ip
   14fc0:	bl	14958 <__mempcpy_chk@plt+0x3974>
   14fc4:	sub	sp, fp, #16
   14fc8:	pop	{r4, r5, r6, sl, fp, pc}
   14fcc:	push	{r4, sl, fp, lr}
   14fd0:	add	fp, sp, #8
   14fd4:	sub	sp, sp, #48	; 0x30
   14fd8:	movw	r3, #33112	; 0x8158
   14fdc:	mov	lr, #32
   14fe0:	mov	ip, r2
   14fe4:	cmp	r0, #0
   14fe8:	movt	r3, #2
   14fec:	cmpne	r1, #0
   14ff0:	add	r2, r3, #16
   14ff4:	vld1.64	{d16-d17}, [r3], lr
   14ff8:	vld1.64	{d20-d21}, [r3]
   14ffc:	vld1.64	{d18-d19}, [r2]
   15000:	mov	r2, sp
   15004:	add	r4, r2, #16
   15008:	vst1.64	{d16-d17}, [r2], lr
   1500c:	vst1.64	{d20-d21}, [r2]
   15010:	mov	r2, #10
   15014:	vst1.64	{d18-d19}, [r4]
   15018:	str	r2, [sp]
   1501c:	bne	15024 <__mempcpy_chk@plt+0x4040>
   15020:	bl	10fcc <abort@plt>
   15024:	str	r1, [sp, #44]	; 0x2c
   15028:	str	r0, [sp, #40]	; 0x28
   1502c:	mov	r3, sp
   15030:	mov	r0, #0
   15034:	mov	r1, ip
   15038:	mvn	r2, #0
   1503c:	bl	14958 <__mempcpy_chk@plt+0x3974>
   15040:	sub	sp, fp, #8
   15044:	pop	{r4, sl, fp, pc}
   15048:	push	{r4, r5, fp, lr}
   1504c:	add	fp, sp, #8
   15050:	sub	sp, sp, #48	; 0x30
   15054:	mov	ip, r3
   15058:	movw	r3, #33112	; 0x8158
   1505c:	mov	r4, #32
   15060:	mov	lr, r2
   15064:	cmp	r0, #0
   15068:	movt	r3, #2
   1506c:	cmpne	r1, #0
   15070:	add	r2, r3, #16
   15074:	vld1.64	{d16-d17}, [r3], r4
   15078:	vld1.64	{d20-d21}, [r3]
   1507c:	vld1.64	{d18-d19}, [r2]
   15080:	mov	r2, sp
   15084:	add	r5, r2, #16
   15088:	vst1.64	{d16-d17}, [r2], r4
   1508c:	vst1.64	{d20-d21}, [r2]
   15090:	mov	r2, #10
   15094:	vst1.64	{d18-d19}, [r5]
   15098:	str	r2, [sp]
   1509c:	bne	150a4 <__mempcpy_chk@plt+0x40c0>
   150a0:	bl	10fcc <abort@plt>
   150a4:	str	r1, [sp, #44]	; 0x2c
   150a8:	str	r0, [sp, #40]	; 0x28
   150ac:	mov	r3, sp
   150b0:	mov	r0, #0
   150b4:	mov	r1, lr
   150b8:	mov	r2, ip
   150bc:	bl	14958 <__mempcpy_chk@plt+0x3974>
   150c0:	sub	sp, fp, #8
   150c4:	pop	{r4, r5, fp, pc}
   150c8:	movw	r3, #33024	; 0x8100
   150cc:	movt	r3, #2
   150d0:	b	14958 <__mempcpy_chk@plt+0x3974>
   150d4:	movw	r3, #33024	; 0x8100
   150d8:	mov	r2, r1
   150dc:	mov	r1, r0
   150e0:	mov	r0, #0
   150e4:	movt	r3, #2
   150e8:	b	14958 <__mempcpy_chk@plt+0x3974>
   150ec:	movw	r3, #33024	; 0x8100
   150f0:	mvn	r2, #0
   150f4:	movt	r3, #2
   150f8:	b	14958 <__mempcpy_chk@plt+0x3974>
   150fc:	movw	r3, #33024	; 0x8100
   15100:	mov	r1, r0
   15104:	mov	r0, #0
   15108:	mvn	r2, #0
   1510c:	movt	r3, #2
   15110:	b	14958 <__mempcpy_chk@plt+0x3974>
   15114:	push	{r4, r5, fp, lr}
   15118:	add	fp, sp, #8
   1511c:	mov	r5, r0
   15120:	mov	r4, r1
   15124:	mov	r0, #0
   15128:	mov	r2, #5
   1512c:	mov	r1, r5
   15130:	bl	10e10 <dcgettext@plt>
   15134:	cmp	r0, r5
   15138:	popne	{r4, r5, fp, pc}
   1513c:	bl	1633c <__mempcpy_chk@plt+0x5358>
   15140:	ldrb	r1, [r0]
   15144:	and	r1, r1, #223	; 0xdf
   15148:	cmp	r1, #71	; 0x47
   1514c:	beq	151b4 <__mempcpy_chk@plt+0x41d0>
   15150:	cmp	r1, #85	; 0x55
   15154:	bne	1520c <__mempcpy_chk@plt+0x4228>
   15158:	ldrb	r1, [r0, #1]
   1515c:	and	r1, r1, #223	; 0xdf
   15160:	cmp	r1, #84	; 0x54
   15164:	bne	1520c <__mempcpy_chk@plt+0x4228>
   15168:	ldrb	r1, [r0, #2]
   1516c:	and	r1, r1, #223	; 0xdf
   15170:	cmp	r1, #70	; 0x46
   15174:	bne	1520c <__mempcpy_chk@plt+0x4228>
   15178:	ldrb	r1, [r0, #3]
   1517c:	cmp	r1, #45	; 0x2d
   15180:	bne	1520c <__mempcpy_chk@plt+0x4228>
   15184:	ldrb	r1, [r0, #4]
   15188:	cmp	r1, #56	; 0x38
   1518c:	bne	1520c <__mempcpy_chk@plt+0x4228>
   15190:	ldrb	r0, [r0, #5]
   15194:	cmp	r0, #0
   15198:	bne	1520c <__mempcpy_chk@plt+0x4228>
   1519c:	ldrb	r1, [r5]
   151a0:	movw	r2, #28684	; 0x700c
   151a4:	movw	r0, #28688	; 0x7010
   151a8:	movt	r2, #1
   151ac:	movt	r0, #1
   151b0:	b	1523c <__mempcpy_chk@plt+0x4258>
   151b4:	ldrb	r1, [r0, #1]
   151b8:	and	r1, r1, #223	; 0xdf
   151bc:	cmp	r1, #66	; 0x42
   151c0:	bne	1520c <__mempcpy_chk@plt+0x4228>
   151c4:	ldrb	r1, [r0, #2]
   151c8:	cmp	r1, #49	; 0x31
   151cc:	bne	1520c <__mempcpy_chk@plt+0x4228>
   151d0:	ldrb	r1, [r0, #3]
   151d4:	cmp	r1, #56	; 0x38
   151d8:	bne	1520c <__mempcpy_chk@plt+0x4228>
   151dc:	ldrb	r1, [r0, #4]
   151e0:	cmp	r1, #48	; 0x30
   151e4:	bne	1520c <__mempcpy_chk@plt+0x4228>
   151e8:	ldrb	r1, [r0, #5]
   151ec:	cmp	r1, #51	; 0x33
   151f0:	bne	1520c <__mempcpy_chk@plt+0x4228>
   151f4:	ldrb	r1, [r0, #6]
   151f8:	cmp	r1, #48	; 0x30
   151fc:	bne	1520c <__mempcpy_chk@plt+0x4228>
   15200:	ldrb	r0, [r0, #7]
   15204:	cmp	r0, #0
   15208:	beq	15228 <__mempcpy_chk@plt+0x4244>
   1520c:	movw	r1, #28678	; 0x7006
   15210:	movw	r0, #28682	; 0x700a
   15214:	cmp	r4, #9
   15218:	movt	r1, #1
   1521c:	movt	r0, #1
   15220:	moveq	r0, r1
   15224:	pop	{r4, r5, fp, pc}
   15228:	ldrb	r1, [r5]
   1522c:	movw	r2, #28692	; 0x7014
   15230:	movw	r0, #28696	; 0x7018
   15234:	movt	r2, #1
   15238:	movt	r0, #1
   1523c:	cmp	r1, #96	; 0x60
   15240:	moveq	r0, r2
   15244:	pop	{r4, r5, fp, pc}
   15248:	push	{r4, r5, r6, sl, fp, lr}
   1524c:	add	fp, sp, #16
   15250:	ldr	r4, [r0], #8
   15254:	mov	r5, r1
   15258:	cmp	r4, r0
   1525c:	beq	15280 <__mempcpy_chk@plt+0x429c>
   15260:	mov	r0, r4
   15264:	mov	r1, r5
   15268:	bl	16088 <__mempcpy_chk@plt+0x50a4>
   1526c:	cmp	r0, #0
   15270:	mov	r6, r0
   15274:	moveq	r6, r4
   15278:	mov	r0, r6
   1527c:	pop	{r4, r5, r6, sl, fp, pc}
   15280:	mov	r0, r5
   15284:	bl	16058 <__mempcpy_chk@plt+0x5074>
   15288:	cmp	r0, #0
   1528c:	beq	152a8 <__mempcpy_chk@plt+0x42c4>
   15290:	mov	r1, r4
   15294:	mov	r2, r5
   15298:	mov	r6, r0
   1529c:	bl	10df8 <memcpy@plt>
   152a0:	mov	r0, r6
   152a4:	pop	{r4, r5, r6, sl, fp, pc}
   152a8:	mov	r6, #0
   152ac:	mov	r0, r6
   152b0:	pop	{r4, r5, r6, sl, fp, pc}
   152b4:	push	{r4, r5, r6, sl, fp, lr}
   152b8:	add	fp, sp, #16
   152bc:	mov	r4, r0
   152c0:	add	r6, r0, #8
   152c4:	ldrd	r0, [r0]
   152c8:	lsl	r5, r1, #1
   152cc:	cmp	r0, r6
   152d0:	beq	152dc <__mempcpy_chk@plt+0x42f8>
   152d4:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   152d8:	ldr	r1, [r4, #4]
   152dc:	cmp	r5, r1
   152e0:	bcc	15304 <__mempcpy_chk@plt+0x4320>
   152e4:	mov	r0, r5
   152e8:	bl	16058 <__mempcpy_chk@plt+0x5074>
   152ec:	cmp	r0, #0
   152f0:	strne	r0, [r4]
   152f4:	movne	r0, #1
   152f8:	strne	r5, [r4, #4]
   152fc:	popne	{r4, r5, r6, sl, fp, pc}
   15300:	b	15310 <__mempcpy_chk@plt+0x432c>
   15304:	bl	10f18 <__errno_location@plt>
   15308:	mov	r1, #12
   1530c:	str	r1, [r0]
   15310:	mov	r0, #0
   15314:	mov	r5, #1024	; 0x400
   15318:	str	r6, [r4]
   1531c:	str	r5, [r4, #4]
   15320:	pop	{r4, r5, r6, sl, fp, pc}
   15324:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15328:	add	fp, sp, #24
   1532c:	ldrd	r8, [r0]
   15330:	add	r7, r0, #8
   15334:	mov	r4, r0
   15338:	lsl	r5, r9, #1
   1533c:	cmp	r8, r7
   15340:	beq	1536c <__mempcpy_chk@plt+0x4388>
   15344:	cmp	r5, r9
   15348:	bcc	153a4 <__mempcpy_chk@plt+0x43c0>
   1534c:	mov	r0, r8
   15350:	mov	r1, r5
   15354:	bl	16088 <__mempcpy_chk@plt+0x50a4>
   15358:	mov	r6, r0
   1535c:	cmp	r0, #0
   15360:	bne	1538c <__mempcpy_chk@plt+0x43a8>
   15364:	ldr	r8, [r4]
   15368:	b	153b0 <__mempcpy_chk@plt+0x43cc>
   1536c:	mov	r0, r5
   15370:	bl	16058 <__mempcpy_chk@plt+0x5074>
   15374:	cmp	r0, #0
   15378:	beq	1539c <__mempcpy_chk@plt+0x43b8>
   1537c:	ldr	r2, [r4, #4]
   15380:	mov	r1, r8
   15384:	mov	r6, r0
   15388:	bl	10df8 <memcpy@plt>
   1538c:	mov	r0, #1
   15390:	str	r6, [r4]
   15394:	str	r5, [r4, #4]
   15398:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1539c:	mov	r0, #0
   153a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   153a4:	bl	10f18 <__errno_location@plt>
   153a8:	mov	r1, #12
   153ac:	str	r1, [r0]
   153b0:	mov	r0, r8
   153b4:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   153b8:	mov	r0, #0
   153bc:	mov	r5, #1024	; 0x400
   153c0:	str	r7, [r4]
   153c4:	str	r5, [r4, #4]
   153c8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   153cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   153d0:	add	fp, sp, #24
   153d4:	sub	sp, sp, #32
   153d8:	ldr	r6, [fp, #12]
   153dc:	ldr	r7, [fp, #8]
   153e0:	mov	r4, r2
   153e4:	mov	r8, r0
   153e8:	cmp	r1, #0
   153ec:	beq	15414 <__mempcpy_chk@plt+0x4430>
   153f0:	movw	r2, #28784	; 0x7070
   153f4:	mov	r5, r1
   153f8:	str	r3, [sp, #4]
   153fc:	str	r4, [sp]
   15400:	mov	r0, r8
   15404:	mov	r1, #1
   15408:	movt	r2, #1
   1540c:	mov	r3, r5
   15410:	b	1542c <__mempcpy_chk@plt+0x4448>
   15414:	movw	r2, #28796	; 0x707c
   15418:	str	r3, [sp]
   1541c:	mov	r0, r8
   15420:	mov	r1, #1
   15424:	mov	r3, r4
   15428:	movt	r2, #1
   1542c:	bl	10f54 <__fprintf_chk@plt>
   15430:	movw	r1, #28803	; 0x7083
   15434:	mov	r0, #0
   15438:	mov	r2, #5
   1543c:	movt	r1, #1
   15440:	bl	10e10 <dcgettext@plt>
   15444:	movw	r2, #29521	; 0x7351
   15448:	mov	r3, r0
   1544c:	movw	r0, #2022	; 0x7e6
   15450:	mov	r1, #1
   15454:	movt	r2, #1
   15458:	str	r0, [sp]
   1545c:	mov	r0, r8
   15460:	bl	10f54 <__fprintf_chk@plt>
   15464:	movw	r4, #26520	; 0x6798
   15468:	mov	r1, r8
   1546c:	movt	r4, #1
   15470:	mov	r0, r4
   15474:	bl	10d98 <fputs_unlocked@plt>
   15478:	movw	r1, #28807	; 0x7087
   1547c:	mov	r0, #0
   15480:	mov	r2, #5
   15484:	movt	r1, #1
   15488:	bl	10e10 <dcgettext@plt>
   1548c:	movw	r3, #28978	; 0x7132
   15490:	mov	r2, r0
   15494:	mov	r0, r8
   15498:	mov	r1, #1
   1549c:	movt	r3, #1
   154a0:	bl	10f54 <__fprintf_chk@plt>
   154a4:	mov	r0, r4
   154a8:	mov	r1, r8
   154ac:	bl	10d98 <fputs_unlocked@plt>
   154b0:	cmp	r6, #9
   154b4:	bhi	154f0 <__mempcpy_chk@plt+0x450c>
   154b8:	add	r0, pc, #0
   154bc:	ldr	pc, [r0, r6, lsl #2]
   154c0:	andeq	r5, r1, r8, ror #9
   154c4:	strdeq	r5, [r1], -ip
   154c8:	andeq	r5, r1, ip, lsr #10
   154cc:	andeq	r5, r1, r4, asr r5
   154d0:	andeq	r5, r1, ip, ror r5
   154d4:	andeq	r5, r1, r4, lsr #11
   154d8:	andeq	r5, r1, ip, asr #11
   154dc:	andeq	r5, r1, r4, lsl #12
   154e0:	andeq	r5, r1, r4, lsr #13
   154e4:	andeq	r5, r1, ip, asr #12
   154e8:	sub	sp, fp, #24
   154ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   154f0:	movw	r1, #29331	; 0x7293
   154f4:	movt	r1, #1
   154f8:	b	15654 <__mempcpy_chk@plt+0x4670>
   154fc:	movw	r1, #29012	; 0x7154
   15500:	mov	r0, #0
   15504:	mov	r2, #5
   15508:	movt	r1, #1
   1550c:	bl	10e10 <dcgettext@plt>
   15510:	ldr	r3, [r7]
   15514:	mov	r2, r0
   15518:	mov	r0, r8
   1551c:	mov	r1, #1
   15520:	sub	sp, fp, #24
   15524:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   15528:	b	10f54 <__fprintf_chk@plt>
   1552c:	movw	r1, #29028	; 0x7164
   15530:	mov	r0, #0
   15534:	mov	r2, #5
   15538:	movt	r1, #1
   1553c:	bl	10e10 <dcgettext@plt>
   15540:	mov	r2, r0
   15544:	ldr	r3, [r7]
   15548:	ldr	r0, [r7, #4]
   1554c:	str	r0, [sp]
   15550:	b	15640 <__mempcpy_chk@plt+0x465c>
   15554:	movw	r1, #29051	; 0x717b
   15558:	mov	r0, #0
   1555c:	mov	r2, #5
   15560:	movt	r1, #1
   15564:	bl	10e10 <dcgettext@plt>
   15568:	mov	r2, r0
   1556c:	ldr	r3, [r7]
   15570:	ldmib	r7, {r0, r1}
   15574:	stm	sp, {r0, r1}
   15578:	b	15640 <__mempcpy_chk@plt+0x465c>
   1557c:	movw	r1, #29079	; 0x7197
   15580:	mov	r0, #0
   15584:	mov	r2, #5
   15588:	movt	r1, #1
   1558c:	bl	10e10 <dcgettext@plt>
   15590:	ldr	r3, [r7]
   15594:	mov	r2, r0
   15598:	ldmib	r7, {r0, r1, r7}
   1559c:	stm	sp, {r0, r1, r7}
   155a0:	b	15640 <__mempcpy_chk@plt+0x465c>
   155a4:	movw	r1, #29111	; 0x71b7
   155a8:	mov	r0, #0
   155ac:	mov	r2, #5
   155b0:	movt	r1, #1
   155b4:	bl	10e10 <dcgettext@plt>
   155b8:	ldr	r3, [r7]
   155bc:	mov	r2, r0
   155c0:	ldmib	r7, {r0, r1, r6, r7}
   155c4:	stm	sp, {r0, r1, r6, r7}
   155c8:	b	15640 <__mempcpy_chk@plt+0x465c>
   155cc:	movw	r1, #29147	; 0x71db
   155d0:	mov	r0, #0
   155d4:	mov	r2, #5
   155d8:	movt	r1, #1
   155dc:	bl	10e10 <dcgettext@plt>
   155e0:	mov	r2, r0
   155e4:	ldr	r3, [r7]
   155e8:	ldmib	r7, {r0, r1, r6}
   155ec:	ldr	r5, [r7, #16]
   155f0:	ldr	r7, [r7, #20]
   155f4:	stm	sp, {r0, r1, r6}
   155f8:	str	r5, [sp, #12]
   155fc:	str	r7, [sp, #16]
   15600:	b	15640 <__mempcpy_chk@plt+0x465c>
   15604:	movw	r1, #29187	; 0x7203
   15608:	mov	r0, #0
   1560c:	mov	r2, #5
   15610:	movt	r1, #1
   15614:	bl	10e10 <dcgettext@plt>
   15618:	mov	r2, r0
   1561c:	ldr	r3, [r7]
   15620:	ldmib	r7, {r0, r1, r6}
   15624:	ldr	r5, [r7, #16]
   15628:	ldr	r4, [r7, #20]
   1562c:	ldr	r7, [r7, #24]
   15630:	stm	sp, {r0, r1, r6}
   15634:	str	r5, [sp, #12]
   15638:	str	r4, [sp, #16]
   1563c:	str	r7, [sp, #20]
   15640:	mov	r0, r8
   15644:	mov	r1, #1
   15648:	b	156f4 <__mempcpy_chk@plt+0x4710>
   1564c:	movw	r1, #29279	; 0x725f
   15650:	movt	r1, #1
   15654:	mov	r0, #0
   15658:	mov	r2, #5
   1565c:	bl	10e10 <dcgettext@plt>
   15660:	mov	ip, r0
   15664:	ldr	r3, [r7]
   15668:	ldr	r0, [r7, #4]
   1566c:	ldr	r1, [r7, #8]
   15670:	ldr	r6, [r7, #12]
   15674:	ldr	r5, [r7, #16]
   15678:	ldr	r4, [r7, #20]
   1567c:	ldr	r2, [r7, #24]
   15680:	ldr	lr, [r7, #28]
   15684:	ldr	r7, [r7, #32]
   15688:	stm	sp, {r0, r1, r6}
   1568c:	str	r5, [sp, #12]
   15690:	str	r4, [sp, #16]
   15694:	str	r2, [sp, #20]
   15698:	str	lr, [sp, #24]
   1569c:	str	r7, [sp, #28]
   156a0:	b	156e8 <__mempcpy_chk@plt+0x4704>
   156a4:	movw	r1, #29231	; 0x722f
   156a8:	mov	r0, #0
   156ac:	mov	r2, #5
   156b0:	movt	r1, #1
   156b4:	bl	10e10 <dcgettext@plt>
   156b8:	mov	ip, r0
   156bc:	ldr	r3, [r7]
   156c0:	ldmib	r7, {r0, r1, r6}
   156c4:	ldr	r5, [r7, #16]
   156c8:	ldr	r4, [r7, #20]
   156cc:	ldr	r2, [r7, #24]
   156d0:	ldr	r7, [r7, #28]
   156d4:	stm	sp, {r0, r1, r6}
   156d8:	str	r5, [sp, #12]
   156dc:	str	r4, [sp, #16]
   156e0:	str	r2, [sp, #20]
   156e4:	str	r7, [sp, #24]
   156e8:	mov	r0, r8
   156ec:	mov	r1, #1
   156f0:	mov	r2, ip
   156f4:	bl	10f54 <__fprintf_chk@plt>
   156f8:	sub	sp, fp, #24
   156fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15700:	push	{r4, sl, fp, lr}
   15704:	add	fp, sp, #8
   15708:	sub	sp, sp, #8
   1570c:	ldr	ip, [fp, #8]
   15710:	mov	lr, #0
   15714:	ldr	r4, [ip, lr, lsl #2]
   15718:	add	lr, lr, #1
   1571c:	cmp	r4, #0
   15720:	bne	15714 <__mempcpy_chk@plt+0x4730>
   15724:	sub	r4, lr, #1
   15728:	str	ip, [sp]
   1572c:	str	r4, [sp, #4]
   15730:	bl	153cc <__mempcpy_chk@plt+0x43e8>
   15734:	sub	sp, fp, #8
   15738:	pop	{r4, sl, fp, pc}
   1573c:	push	{fp, lr}
   15740:	mov	fp, sp
   15744:	sub	sp, sp, #48	; 0x30
   15748:	ldr	ip, [fp, #8]
   1574c:	ldr	lr, [ip]
   15750:	cmp	lr, #0
   15754:	str	lr, [sp, #8]
   15758:	beq	157f4 <__mempcpy_chk@plt+0x4810>
   1575c:	ldr	lr, [ip, #4]
   15760:	cmp	lr, #0
   15764:	str	lr, [sp, #12]
   15768:	beq	157fc <__mempcpy_chk@plt+0x4818>
   1576c:	ldr	lr, [ip, #8]
   15770:	cmp	lr, #0
   15774:	str	lr, [sp, #16]
   15778:	beq	15804 <__mempcpy_chk@plt+0x4820>
   1577c:	ldr	lr, [ip, #12]
   15780:	cmp	lr, #0
   15784:	str	lr, [sp, #20]
   15788:	beq	1580c <__mempcpy_chk@plt+0x4828>
   1578c:	ldr	lr, [ip, #16]
   15790:	cmp	lr, #0
   15794:	str	lr, [sp, #24]
   15798:	beq	15814 <__mempcpy_chk@plt+0x4830>
   1579c:	ldr	lr, [ip, #20]
   157a0:	cmp	lr, #0
   157a4:	str	lr, [sp, #28]
   157a8:	beq	1581c <__mempcpy_chk@plt+0x4838>
   157ac:	ldr	lr, [ip, #24]
   157b0:	cmp	lr, #0
   157b4:	str	lr, [sp, #32]
   157b8:	beq	15824 <__mempcpy_chk@plt+0x4840>
   157bc:	ldr	lr, [ip, #28]
   157c0:	cmp	lr, #0
   157c4:	str	lr, [sp, #36]	; 0x24
   157c8:	beq	1582c <__mempcpy_chk@plt+0x4848>
   157cc:	ldr	lr, [ip, #32]
   157d0:	cmp	lr, #0
   157d4:	str	lr, [sp, #40]	; 0x28
   157d8:	beq	15834 <__mempcpy_chk@plt+0x4850>
   157dc:	ldr	lr, [ip, #36]	; 0x24
   157e0:	mov	ip, #10
   157e4:	cmp	lr, #0
   157e8:	str	lr, [sp, #44]	; 0x2c
   157ec:	movweq	ip, #9
   157f0:	b	15838 <__mempcpy_chk@plt+0x4854>
   157f4:	mov	ip, #0
   157f8:	b	15838 <__mempcpy_chk@plt+0x4854>
   157fc:	mov	ip, #1
   15800:	b	15838 <__mempcpy_chk@plt+0x4854>
   15804:	mov	ip, #2
   15808:	b	15838 <__mempcpy_chk@plt+0x4854>
   1580c:	mov	ip, #3
   15810:	b	15838 <__mempcpy_chk@plt+0x4854>
   15814:	mov	ip, #4
   15818:	b	15838 <__mempcpy_chk@plt+0x4854>
   1581c:	mov	ip, #5
   15820:	b	15838 <__mempcpy_chk@plt+0x4854>
   15824:	mov	ip, #6
   15828:	b	15838 <__mempcpy_chk@plt+0x4854>
   1582c:	mov	ip, #7
   15830:	b	15838 <__mempcpy_chk@plt+0x4854>
   15834:	mov	ip, #8
   15838:	add	lr, sp, #8
   1583c:	str	ip, [sp, #4]
   15840:	str	lr, [sp]
   15844:	bl	153cc <__mempcpy_chk@plt+0x43e8>
   15848:	mov	sp, fp
   1584c:	pop	{fp, pc}
   15850:	push	{fp, lr}
   15854:	mov	fp, sp
   15858:	sub	sp, sp, #56	; 0x38
   1585c:	add	ip, fp, #8
   15860:	str	ip, [sp, #12]
   15864:	ldr	lr, [fp, #8]
   15868:	cmp	lr, #0
   1586c:	str	lr, [sp, #16]
   15870:	beq	1590c <__mempcpy_chk@plt+0x4928>
   15874:	ldr	lr, [ip, #4]
   15878:	cmp	lr, #0
   1587c:	str	lr, [sp, #20]
   15880:	beq	15914 <__mempcpy_chk@plt+0x4930>
   15884:	ldr	lr, [ip, #8]
   15888:	cmp	lr, #0
   1588c:	str	lr, [sp, #24]
   15890:	beq	1591c <__mempcpy_chk@plt+0x4938>
   15894:	ldr	lr, [ip, #12]
   15898:	cmp	lr, #0
   1589c:	str	lr, [sp, #28]
   158a0:	beq	15924 <__mempcpy_chk@plt+0x4940>
   158a4:	ldr	lr, [ip, #16]
   158a8:	cmp	lr, #0
   158ac:	str	lr, [sp, #32]
   158b0:	beq	1592c <__mempcpy_chk@plt+0x4948>
   158b4:	ldr	lr, [ip, #20]
   158b8:	cmp	lr, #0
   158bc:	str	lr, [sp, #36]	; 0x24
   158c0:	beq	15934 <__mempcpy_chk@plt+0x4950>
   158c4:	ldr	lr, [ip, #24]
   158c8:	cmp	lr, #0
   158cc:	str	lr, [sp, #40]	; 0x28
   158d0:	beq	1593c <__mempcpy_chk@plt+0x4958>
   158d4:	ldr	lr, [ip, #28]
   158d8:	cmp	lr, #0
   158dc:	str	lr, [sp, #44]	; 0x2c
   158e0:	beq	15944 <__mempcpy_chk@plt+0x4960>
   158e4:	ldr	lr, [ip, #32]
   158e8:	cmp	lr, #0
   158ec:	str	lr, [sp, #48]	; 0x30
   158f0:	beq	1594c <__mempcpy_chk@plt+0x4968>
   158f4:	ldr	lr, [ip, #36]	; 0x24
   158f8:	mov	ip, #10
   158fc:	cmp	lr, #0
   15900:	str	lr, [sp, #52]	; 0x34
   15904:	movweq	ip, #9
   15908:	b	15950 <__mempcpy_chk@plt+0x496c>
   1590c:	mov	ip, #0
   15910:	b	15950 <__mempcpy_chk@plt+0x496c>
   15914:	mov	ip, #1
   15918:	b	15950 <__mempcpy_chk@plt+0x496c>
   1591c:	mov	ip, #2
   15920:	b	15950 <__mempcpy_chk@plt+0x496c>
   15924:	mov	ip, #3
   15928:	b	15950 <__mempcpy_chk@plt+0x496c>
   1592c:	mov	ip, #4
   15930:	b	15950 <__mempcpy_chk@plt+0x496c>
   15934:	mov	ip, #5
   15938:	b	15950 <__mempcpy_chk@plt+0x496c>
   1593c:	mov	ip, #6
   15940:	b	15950 <__mempcpy_chk@plt+0x496c>
   15944:	mov	ip, #7
   15948:	b	15950 <__mempcpy_chk@plt+0x496c>
   1594c:	mov	ip, #8
   15950:	add	lr, sp, #16
   15954:	str	ip, [sp, #4]
   15958:	str	lr, [sp]
   1595c:	bl	153cc <__mempcpy_chk@plt+0x43e8>
   15960:	mov	sp, fp
   15964:	pop	{fp, pc}
   15968:	push	{fp, lr}
   1596c:	mov	fp, sp
   15970:	movw	r0, #33092	; 0x8144
   15974:	movt	r0, #2
   15978:	ldr	r1, [r0]
   1597c:	movw	r0, #26520	; 0x6798
   15980:	movt	r0, #1
   15984:	bl	10d98 <fputs_unlocked@plt>
   15988:	movw	r1, #29391	; 0x72cf
   1598c:	mov	r0, #0
   15990:	mov	r2, #5
   15994:	movt	r1, #1
   15998:	bl	10e10 <dcgettext@plt>
   1599c:	movw	r2, #29411	; 0x72e3
   159a0:	mov	r1, r0
   159a4:	mov	r0, #1
   159a8:	movt	r2, #1
   159ac:	bl	10f3c <__printf_chk@plt>
   159b0:	movw	r1, #29433	; 0x72f9
   159b4:	mov	r0, #0
   159b8:	mov	r2, #5
   159bc:	movt	r1, #1
   159c0:	bl	10e10 <dcgettext@plt>
   159c4:	movw	r2, #27621	; 0x6be5
   159c8:	movw	r3, #27831	; 0x6cb7
   159cc:	mov	r1, r0
   159d0:	mov	r0, #1
   159d4:	movt	r2, #1
   159d8:	movt	r3, #1
   159dc:	bl	10f3c <__printf_chk@plt>
   159e0:	movw	r1, #29453	; 0x730d
   159e4:	mov	r0, #0
   159e8:	mov	r2, #5
   159ec:	movt	r1, #1
   159f0:	bl	10e10 <dcgettext@plt>
   159f4:	movw	r2, #29492	; 0x7334
   159f8:	mov	r1, r0
   159fc:	mov	r0, #1
   15a00:	movt	r2, #1
   15a04:	pop	{fp, lr}
   15a08:	b	10f3c <__printf_chk@plt>
   15a0c:	push	{r4, r5, r6, sl, fp, lr}
   15a10:	add	fp, sp, #16
   15a14:	mov	r4, r2
   15a18:	mov	r5, r1
   15a1c:	mov	r6, r0
   15a20:	bl	163d8 <__mempcpy_chk@plt+0x53f4>
   15a24:	cmp	r0, #0
   15a28:	popne	{r4, r5, r6, sl, fp, pc}
   15a2c:	cmp	r6, #0
   15a30:	beq	15a44 <__mempcpy_chk@plt+0x4a60>
   15a34:	cmp	r5, #0
   15a38:	cmpne	r4, #0
   15a3c:	bne	15a44 <__mempcpy_chk@plt+0x4a60>
   15a40:	pop	{r4, r5, r6, sl, fp, pc}
   15a44:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15a48:	push	{r4, r5, r6, sl, fp, lr}
   15a4c:	add	fp, sp, #16
   15a50:	mov	r4, r2
   15a54:	mov	r5, r1
   15a58:	mov	r6, r0
   15a5c:	bl	163d8 <__mempcpy_chk@plt+0x53f4>
   15a60:	cmp	r0, #0
   15a64:	popne	{r4, r5, r6, sl, fp, pc}
   15a68:	cmp	r6, #0
   15a6c:	beq	15a80 <__mempcpy_chk@plt+0x4a9c>
   15a70:	cmp	r5, #0
   15a74:	cmpne	r4, #0
   15a78:	bne	15a80 <__mempcpy_chk@plt+0x4a9c>
   15a7c:	pop	{r4, r5, r6, sl, fp, pc}
   15a80:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15a84:	push	{fp, lr}
   15a88:	mov	fp, sp
   15a8c:	bl	16058 <__mempcpy_chk@plt+0x5074>
   15a90:	cmp	r0, #0
   15a94:	popne	{fp, pc}
   15a98:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15a9c:	push	{fp, lr}
   15aa0:	mov	fp, sp
   15aa4:	bl	16058 <__mempcpy_chk@plt+0x5074>
   15aa8:	cmp	r0, #0
   15aac:	popne	{fp, pc}
   15ab0:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15ab4:	push	{fp, lr}
   15ab8:	mov	fp, sp
   15abc:	bl	16058 <__mempcpy_chk@plt+0x5074>
   15ac0:	cmp	r0, #0
   15ac4:	popne	{fp, pc}
   15ac8:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15acc:	push	{r4, r5, fp, lr}
   15ad0:	add	fp, sp, #8
   15ad4:	mov	r4, r1
   15ad8:	mov	r5, r0
   15adc:	bl	16088 <__mempcpy_chk@plt+0x50a4>
   15ae0:	cmp	r0, #0
   15ae4:	popne	{r4, r5, fp, pc}
   15ae8:	cmp	r5, #0
   15aec:	beq	15afc <__mempcpy_chk@plt+0x4b18>
   15af0:	cmp	r4, #0
   15af4:	bne	15afc <__mempcpy_chk@plt+0x4b18>
   15af8:	pop	{r4, r5, fp, pc}
   15afc:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15b00:	push	{fp, lr}
   15b04:	mov	fp, sp
   15b08:	cmp	r1, #0
   15b0c:	orreq	r1, r1, #1
   15b10:	bl	16088 <__mempcpy_chk@plt+0x50a4>
   15b14:	cmp	r0, #0
   15b18:	popne	{fp, pc}
   15b1c:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15b20:	push	{fp, lr}
   15b24:	mov	fp, sp
   15b28:	clz	r3, r2
   15b2c:	lsr	ip, r3, #5
   15b30:	clz	r3, r1
   15b34:	lsr	r3, r3, #5
   15b38:	orrs	r3, r3, ip
   15b3c:	movwne	r1, #1
   15b40:	movwne	r2, #1
   15b44:	bl	163d8 <__mempcpy_chk@plt+0x53f4>
   15b48:	cmp	r0, #0
   15b4c:	popne	{fp, pc}
   15b50:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15b54:	push	{fp, lr}
   15b58:	mov	fp, sp
   15b5c:	mov	r2, r1
   15b60:	mov	r1, r0
   15b64:	mov	r0, #0
   15b68:	bl	163d8 <__mempcpy_chk@plt+0x53f4>
   15b6c:	cmp	r0, #0
   15b70:	popne	{fp, pc}
   15b74:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15b78:	push	{fp, lr}
   15b7c:	mov	fp, sp
   15b80:	mov	r2, r1
   15b84:	mov	r1, r0
   15b88:	clz	r0, r2
   15b8c:	clz	r3, r1
   15b90:	lsr	r0, r0, #5
   15b94:	lsr	r3, r3, #5
   15b98:	orrs	r0, r3, r0
   15b9c:	mov	r0, #0
   15ba0:	movwne	r1, #1
   15ba4:	movwne	r2, #1
   15ba8:	bl	163d8 <__mempcpy_chk@plt+0x53f4>
   15bac:	cmp	r0, #0
   15bb0:	popne	{fp, pc}
   15bb4:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15bb8:	push	{r4, r5, r6, sl, fp, lr}
   15bbc:	add	fp, sp, #16
   15bc0:	ldr	r5, [r1]
   15bc4:	mov	r4, r1
   15bc8:	mov	r6, r0
   15bcc:	cmp	r0, #0
   15bd0:	beq	15be8 <__mempcpy_chk@plt+0x4c04>
   15bd4:	mov	r0, #1
   15bd8:	add	r0, r0, r5, lsr #1
   15bdc:	adds	r5, r5, r0
   15be0:	bcc	15bf0 <__mempcpy_chk@plt+0x4c0c>
   15be4:	b	15c2c <__mempcpy_chk@plt+0x4c48>
   15be8:	cmp	r5, #0
   15bec:	movweq	r5, #64	; 0x40
   15bf0:	mov	r0, r6
   15bf4:	mov	r1, r5
   15bf8:	mov	r2, #1
   15bfc:	bl	163d8 <__mempcpy_chk@plt+0x53f4>
   15c00:	cmp	r5, #0
   15c04:	mov	r1, r5
   15c08:	movwne	r1, #1
   15c0c:	cmp	r0, #0
   15c10:	bne	15c24 <__mempcpy_chk@plt+0x4c40>
   15c14:	clz	r2, r6
   15c18:	lsr	r2, r2, #5
   15c1c:	orrs	r1, r2, r1
   15c20:	bne	15c2c <__mempcpy_chk@plt+0x4c48>
   15c24:	str	r5, [r4]
   15c28:	pop	{r4, r5, r6, sl, fp, pc}
   15c2c:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15c30:	push	{r4, r5, r6, r7, fp, lr}
   15c34:	add	fp, sp, #16
   15c38:	ldr	r5, [r1]
   15c3c:	mov	r6, r2
   15c40:	mov	r4, r1
   15c44:	mov	r7, r0
   15c48:	cmp	r0, #0
   15c4c:	beq	15c64 <__mempcpy_chk@plt+0x4c80>
   15c50:	mov	r0, #1
   15c54:	add	r0, r0, r5, lsr #1
   15c58:	adds	r5, r5, r0
   15c5c:	bcc	15c7c <__mempcpy_chk@plt+0x4c98>
   15c60:	b	15cb0 <__mempcpy_chk@plt+0x4ccc>
   15c64:	cmp	r5, #0
   15c68:	bne	15c7c <__mempcpy_chk@plt+0x4c98>
   15c6c:	mov	r0, #64	; 0x40
   15c70:	cmp	r6, #64	; 0x40
   15c74:	udiv	r5, r0, r6
   15c78:	addhi	r5, r5, #1
   15c7c:	mov	r0, r7
   15c80:	mov	r1, r5
   15c84:	mov	r2, r6
   15c88:	bl	163d8 <__mempcpy_chk@plt+0x53f4>
   15c8c:	cmp	r0, #0
   15c90:	bne	15ca8 <__mempcpy_chk@plt+0x4cc4>
   15c94:	cmp	r7, #0
   15c98:	beq	15cb0 <__mempcpy_chk@plt+0x4ccc>
   15c9c:	cmp	r6, #0
   15ca0:	cmpne	r5, #0
   15ca4:	bne	15cb0 <__mempcpy_chk@plt+0x4ccc>
   15ca8:	str	r5, [r4]
   15cac:	pop	{r4, r5, r6, r7, fp, pc}
   15cb0:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15cb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15cb8:	add	fp, sp, #24
   15cbc:	mov	r8, r1
   15cc0:	ldr	r1, [r1]
   15cc4:	mov	r5, r0
   15cc8:	add	r0, r1, r1, asr #1
   15ccc:	cmp	r0, r1
   15cd0:	mvnvs	r0, #-2147483648	; 0x80000000
   15cd4:	cmp	r0, r3
   15cd8:	mov	r7, r0
   15cdc:	movgt	r7, r3
   15ce0:	cmn	r3, #1
   15ce4:	movle	r7, r0
   15ce8:	ldr	r0, [fp, #8]
   15cec:	cmn	r0, #1
   15cf0:	ble	15d18 <__mempcpy_chk@plt+0x4d34>
   15cf4:	cmp	r0, #0
   15cf8:	beq	15d6c <__mempcpy_chk@plt+0x4d88>
   15cfc:	cmn	r7, #1
   15d00:	ble	15d40 <__mempcpy_chk@plt+0x4d5c>
   15d04:	mvn	r4, #-2147483648	; 0x80000000
   15d08:	udiv	r6, r4, r0
   15d0c:	cmp	r6, r7
   15d10:	bge	15d6c <__mempcpy_chk@plt+0x4d88>
   15d14:	b	15d7c <__mempcpy_chk@plt+0x4d98>
   15d18:	cmn	r7, #1
   15d1c:	ble	15d5c <__mempcpy_chk@plt+0x4d78>
   15d20:	cmn	r0, #1
   15d24:	beq	15d6c <__mempcpy_chk@plt+0x4d88>
   15d28:	mov	r6, #-2147483648	; 0x80000000
   15d2c:	mvn	r4, #-2147483648	; 0x80000000
   15d30:	sdiv	r6, r6, r0
   15d34:	cmp	r6, r7
   15d38:	bge	15d6c <__mempcpy_chk@plt+0x4d88>
   15d3c:	b	15d7c <__mempcpy_chk@plt+0x4d98>
   15d40:	beq	15d6c <__mempcpy_chk@plt+0x4d88>
   15d44:	mov	r6, #-2147483648	; 0x80000000
   15d48:	mvn	r4, #-2147483648	; 0x80000000
   15d4c:	sdiv	r6, r6, r7
   15d50:	cmp	r6, r0
   15d54:	bge	15d6c <__mempcpy_chk@plt+0x4d88>
   15d58:	b	15d7c <__mempcpy_chk@plt+0x4d98>
   15d5c:	mvn	r4, #-2147483648	; 0x80000000
   15d60:	sdiv	r6, r4, r0
   15d64:	cmp	r7, r6
   15d68:	blt	15d7c <__mempcpy_chk@plt+0x4d98>
   15d6c:	mul	r6, r7, r0
   15d70:	mov	r4, #64	; 0x40
   15d74:	cmp	r6, #63	; 0x3f
   15d78:	bgt	15d84 <__mempcpy_chk@plt+0x4da0>
   15d7c:	sdiv	r7, r4, r0
   15d80:	mul	r6, r7, r0
   15d84:	cmp	r5, #0
   15d88:	moveq	r4, #0
   15d8c:	streq	r4, [r8]
   15d90:	sub	r4, r7, r1
   15d94:	cmp	r4, r2
   15d98:	bge	15e44 <__mempcpy_chk@plt+0x4e60>
   15d9c:	add	r7, r1, r2
   15da0:	mov	r6, #0
   15da4:	mov	r2, #0
   15da8:	cmp	r7, r3
   15dac:	movwgt	r6, #1
   15db0:	cmn	r3, #1
   15db4:	movwgt	r2, #1
   15db8:	cmp	r7, r1
   15dbc:	bvs	15e78 <__mempcpy_chk@plt+0x4e94>
   15dc0:	ands	r1, r2, r6
   15dc4:	bne	15e78 <__mempcpy_chk@plt+0x4e94>
   15dc8:	cmn	r0, #1
   15dcc:	ble	15df4 <__mempcpy_chk@plt+0x4e10>
   15dd0:	cmp	r0, #0
   15dd4:	beq	15e40 <__mempcpy_chk@plt+0x4e5c>
   15dd8:	cmn	r7, #1
   15ddc:	ble	15e18 <__mempcpy_chk@plt+0x4e34>
   15de0:	mvn	r1, #-2147483648	; 0x80000000
   15de4:	udiv	r1, r1, r0
   15de8:	cmp	r1, r7
   15dec:	bge	15e40 <__mempcpy_chk@plt+0x4e5c>
   15df0:	b	15e78 <__mempcpy_chk@plt+0x4e94>
   15df4:	cmn	r7, #1
   15df8:	ble	15e30 <__mempcpy_chk@plt+0x4e4c>
   15dfc:	cmn	r0, #1
   15e00:	beq	15e40 <__mempcpy_chk@plt+0x4e5c>
   15e04:	mov	r1, #-2147483648	; 0x80000000
   15e08:	sdiv	r1, r1, r0
   15e0c:	cmp	r1, r7
   15e10:	bge	15e40 <__mempcpy_chk@plt+0x4e5c>
   15e14:	b	15e78 <__mempcpy_chk@plt+0x4e94>
   15e18:	beq	15e40 <__mempcpy_chk@plt+0x4e5c>
   15e1c:	mov	r1, #-2147483648	; 0x80000000
   15e20:	sdiv	r1, r1, r7
   15e24:	cmp	r1, r0
   15e28:	bge	15e40 <__mempcpy_chk@plt+0x4e5c>
   15e2c:	b	15e78 <__mempcpy_chk@plt+0x4e94>
   15e30:	mvn	r1, #-2147483648	; 0x80000000
   15e34:	sdiv	r1, r1, r0
   15e38:	cmp	r7, r1
   15e3c:	blt	15e78 <__mempcpy_chk@plt+0x4e94>
   15e40:	mul	r6, r7, r0
   15e44:	mov	r0, r5
   15e48:	mov	r1, r6
   15e4c:	bl	16088 <__mempcpy_chk@plt+0x50a4>
   15e50:	cmp	r6, #0
   15e54:	movwne	r6, #1
   15e58:	cmp	r0, #0
   15e5c:	bne	15e70 <__mempcpy_chk@plt+0x4e8c>
   15e60:	clz	r1, r5
   15e64:	lsr	r1, r1, #5
   15e68:	orrs	r1, r1, r6
   15e6c:	bne	15e78 <__mempcpy_chk@plt+0x4e94>
   15e70:	str	r7, [r8]
   15e74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15e78:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15e7c:	push	{fp, lr}
   15e80:	mov	fp, sp
   15e84:	mov	r1, #1
   15e88:	bl	16004 <__mempcpy_chk@plt+0x5020>
   15e8c:	cmp	r0, #0
   15e90:	popne	{fp, pc}
   15e94:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15e98:	push	{fp, lr}
   15e9c:	mov	fp, sp
   15ea0:	bl	16004 <__mempcpy_chk@plt+0x5020>
   15ea4:	cmp	r0, #0
   15ea8:	popne	{fp, pc}
   15eac:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15eb0:	push	{fp, lr}
   15eb4:	mov	fp, sp
   15eb8:	mov	r1, #1
   15ebc:	bl	16004 <__mempcpy_chk@plt+0x5020>
   15ec0:	cmp	r0, #0
   15ec4:	popne	{fp, pc}
   15ec8:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15ecc:	push	{fp, lr}
   15ed0:	mov	fp, sp
   15ed4:	bl	16004 <__mempcpy_chk@plt+0x5020>
   15ed8:	cmp	r0, #0
   15edc:	popne	{fp, pc}
   15ee0:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15ee4:	push	{r4, r5, fp, lr}
   15ee8:	add	fp, sp, #8
   15eec:	mov	r5, r0
   15ef0:	mov	r0, r1
   15ef4:	mov	r4, r1
   15ef8:	bl	16058 <__mempcpy_chk@plt+0x5074>
   15efc:	cmp	r0, #0
   15f00:	beq	15f14 <__mempcpy_chk@plt+0x4f30>
   15f04:	mov	r1, r5
   15f08:	mov	r2, r4
   15f0c:	pop	{r4, r5, fp, lr}
   15f10:	b	10df8 <memcpy@plt>
   15f14:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15f18:	push	{r4, r5, fp, lr}
   15f1c:	add	fp, sp, #8
   15f20:	mov	r5, r0
   15f24:	mov	r0, r1
   15f28:	mov	r4, r1
   15f2c:	bl	16058 <__mempcpy_chk@plt+0x5074>
   15f30:	cmp	r0, #0
   15f34:	beq	15f48 <__mempcpy_chk@plt+0x4f64>
   15f38:	mov	r1, r5
   15f3c:	mov	r2, r4
   15f40:	pop	{r4, r5, fp, lr}
   15f44:	b	10df8 <memcpy@plt>
   15f48:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15f4c:	push	{r4, r5, fp, lr}
   15f50:	add	fp, sp, #8
   15f54:	mov	r5, r0
   15f58:	add	r0, r1, #1
   15f5c:	mov	r4, r1
   15f60:	bl	16058 <__mempcpy_chk@plt+0x5074>
   15f64:	cmp	r0, #0
   15f68:	beq	15f84 <__mempcpy_chk@plt+0x4fa0>
   15f6c:	mov	r1, #0
   15f70:	mov	r2, r4
   15f74:	strb	r1, [r0, r4]
   15f78:	mov	r1, r5
   15f7c:	pop	{r4, r5, fp, lr}
   15f80:	b	10df8 <memcpy@plt>
   15f84:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15f88:	push	{r4, r5, fp, lr}
   15f8c:	add	fp, sp, #8
   15f90:	mov	r4, r0
   15f94:	bl	10f0c <strlen@plt>
   15f98:	add	r5, r0, #1
   15f9c:	mov	r0, r5
   15fa0:	bl	16058 <__mempcpy_chk@plt+0x5074>
   15fa4:	cmp	r0, #0
   15fa8:	beq	15fbc <__mempcpy_chk@plt+0x4fd8>
   15fac:	mov	r1, r4
   15fb0:	mov	r2, r5
   15fb4:	pop	{r4, r5, fp, lr}
   15fb8:	b	10df8 <memcpy@plt>
   15fbc:	bl	15fc0 <__mempcpy_chk@plt+0x4fdc>
   15fc0:	push	{fp, lr}
   15fc4:	mov	fp, sp
   15fc8:	movw	r0, #33004	; 0x80ec
   15fcc:	movw	r1, #29568	; 0x7380
   15fd0:	mov	r2, #5
   15fd4:	movt	r0, #2
   15fd8:	movt	r1, #1
   15fdc:	ldr	r4, [r0]
   15fe0:	mov	r0, #0
   15fe4:	bl	10e10 <dcgettext@plt>
   15fe8:	movw	r2, #28401	; 0x6ef1
   15fec:	mov	r3, r0
   15ff0:	mov	r0, r4
   15ff4:	mov	r1, #0
   15ff8:	movt	r2, #1
   15ffc:	bl	10e94 <error@plt>
   16000:	bl	10fcc <abort@plt>
   16004:	clz	r2, r1
   16008:	clz	r3, r0
   1600c:	lsr	r2, r2, #5
   16010:	lsr	r3, r3, #5
   16014:	orrs	r2, r3, r2
   16018:	movwne	r1, #1
   1601c:	movwne	r0, #1
   16020:	cmp	r1, #0
   16024:	beq	16054 <__mempcpy_chk@plt+0x5070>
   16028:	mvn	r2, #-2147483648	; 0x80000000
   1602c:	udiv	r2, r2, r1
   16030:	cmp	r2, r0
   16034:	bcs	16054 <__mempcpy_chk@plt+0x5070>
   16038:	push	{fp, lr}
   1603c:	mov	fp, sp
   16040:	bl	10f18 <__errno_location@plt>
   16044:	mov	r1, #12
   16048:	str	r1, [r0]
   1604c:	mov	r0, #0
   16050:	pop	{fp, pc}
   16054:	b	10d8c <calloc@plt>
   16058:	cmp	r0, #0
   1605c:	movweq	r0, #1
   16060:	cmn	r0, #1
   16064:	ble	1606c <__mempcpy_chk@plt+0x5088>
   16068:	b	10ea0 <malloc@plt>
   1606c:	push	{fp, lr}
   16070:	mov	fp, sp
   16074:	bl	10f18 <__errno_location@plt>
   16078:	mov	r1, #12
   1607c:	str	r1, [r0]
   16080:	mov	r0, #0
   16084:	pop	{fp, pc}
   16088:	push	{fp, lr}
   1608c:	mov	fp, sp
   16090:	cmp	r0, #0
   16094:	beq	160b0 <__mempcpy_chk@plt+0x50cc>
   16098:	cmp	r1, #0
   1609c:	beq	160bc <__mempcpy_chk@plt+0x50d8>
   160a0:	cmn	r1, #1
   160a4:	ble	160c8 <__mempcpy_chk@plt+0x50e4>
   160a8:	pop	{fp, lr}
   160ac:	b	10e1c <realloc@plt>
   160b0:	mov	r0, r1
   160b4:	pop	{fp, lr}
   160b8:	b	16058 <__mempcpy_chk@plt+0x5074>
   160bc:	bl	120dc <__mempcpy_chk@plt+0x10f8>
   160c0:	mov	r0, #0
   160c4:	pop	{fp, pc}
   160c8:	bl	10f18 <__errno_location@plt>
   160cc:	mov	r1, #12
   160d0:	str	r1, [r0]
   160d4:	mov	r0, #0
   160d8:	pop	{fp, pc}
   160dc:	push	{r4, r5, r6, sl, fp, lr}
   160e0:	add	fp, sp, #16
   160e4:	mov	r4, r0
   160e8:	bl	10e7c <__fpending@plt>
   160ec:	ldr	r6, [r4]
   160f0:	mov	r5, r0
   160f4:	mov	r0, r4
   160f8:	bl	16160 <__mempcpy_chk@plt+0x517c>
   160fc:	tst	r6, #32
   16100:	bne	16138 <__mempcpy_chk@plt+0x5154>
   16104:	cmp	r0, #0
   16108:	mov	r4, r0
   1610c:	mvnne	r4, #0
   16110:	cmp	r5, #0
   16114:	bne	16144 <__mempcpy_chk@plt+0x5160>
   16118:	cmp	r0, #0
   1611c:	beq	16144 <__mempcpy_chk@plt+0x5160>
   16120:	bl	10f18 <__errno_location@plt>
   16124:	ldr	r0, [r0]
   16128:	subs	r4, r0, #9
   1612c:	mvnne	r4, #0
   16130:	mov	r0, r4
   16134:	pop	{r4, r5, r6, sl, fp, pc}
   16138:	mvn	r4, #0
   1613c:	cmp	r0, #0
   16140:	beq	1614c <__mempcpy_chk@plt+0x5168>
   16144:	mov	r0, r4
   16148:	pop	{r4, r5, r6, sl, fp, pc}
   1614c:	bl	10f18 <__errno_location@plt>
   16150:	mov	r1, #0
   16154:	str	r1, [r0]
   16158:	mov	r0, r4
   1615c:	pop	{r4, r5, r6, sl, fp, pc}
   16160:	push	{r4, r5, r6, sl, fp, lr}
   16164:	add	fp, sp, #16
   16168:	sub	sp, sp, #8
   1616c:	mov	r4, r0
   16170:	bl	10f48 <fileno@plt>
   16174:	cmn	r0, #1
   16178:	ble	161ec <__mempcpy_chk@plt+0x5208>
   1617c:	mov	r0, r4
   16180:	bl	10eb8 <__freading@plt>
   16184:	cmp	r0, #0
   16188:	beq	161b4 <__mempcpy_chk@plt+0x51d0>
   1618c:	mov	r0, r4
   16190:	bl	10f48 <fileno@plt>
   16194:	mov	r1, #1
   16198:	mov	r2, #0
   1619c:	mov	r3, #0
   161a0:	str	r1, [sp]
   161a4:	bl	10e64 <lseek64@plt>
   161a8:	and	r0, r0, r1
   161ac:	cmn	r0, #1
   161b0:	beq	161ec <__mempcpy_chk@plt+0x5208>
   161b4:	mov	r0, r4
   161b8:	bl	161fc <__mempcpy_chk@plt+0x5218>
   161bc:	cmp	r0, #0
   161c0:	beq	161ec <__mempcpy_chk@plt+0x5208>
   161c4:	bl	10f18 <__errno_location@plt>
   161c8:	ldr	r6, [r0]
   161cc:	mov	r5, r0
   161d0:	mov	r0, r4
   161d4:	bl	10f60 <fclose@plt>
   161d8:	cmp	r6, #0
   161dc:	strne	r6, [r5]
   161e0:	mvnne	r0, #0
   161e4:	sub	sp, fp, #16
   161e8:	pop	{r4, r5, r6, sl, fp, pc}
   161ec:	mov	r0, r4
   161f0:	sub	sp, fp, #16
   161f4:	pop	{r4, r5, r6, sl, fp, lr}
   161f8:	b	10f60 <fclose@plt>
   161fc:	push	{r4, sl, fp, lr}
   16200:	add	fp, sp, #8
   16204:	sub	sp, sp, #8
   16208:	mov	r4, r0
   1620c:	cmp	r0, #0
   16210:	beq	16248 <__mempcpy_chk@plt+0x5264>
   16214:	mov	r0, r4
   16218:	bl	10eb8 <__freading@plt>
   1621c:	cmp	r0, #0
   16220:	beq	16248 <__mempcpy_chk@plt+0x5264>
   16224:	ldrb	r0, [r4, #1]
   16228:	tst	r0, #1
   1622c:	beq	16248 <__mempcpy_chk@plt+0x5264>
   16230:	mov	r0, #1
   16234:	mov	r2, #0
   16238:	mov	r3, #0
   1623c:	str	r0, [sp]
   16240:	mov	r0, r4
   16244:	bl	16258 <__mempcpy_chk@plt+0x5274>
   16248:	mov	r0, r4
   1624c:	sub	sp, fp, #8
   16250:	pop	{r4, sl, fp, lr}
   16254:	b	10dbc <fflush@plt>
   16258:	push	{r4, r5, r6, r7, fp, lr}
   1625c:	add	fp, sp, #16
   16260:	sub	sp, sp, #8
   16264:	mov	r4, r0
   16268:	ldr	r0, [r0, #4]
   1626c:	mov	r5, r3
   16270:	mov	r6, r2
   16274:	ldr	r1, [r4, #8]
   16278:	cmp	r1, r0
   1627c:	bne	16298 <__mempcpy_chk@plt+0x52b4>
   16280:	ldrd	r0, [r4, #16]
   16284:	cmp	r1, r0
   16288:	bne	16298 <__mempcpy_chk@plt+0x52b4>
   1628c:	ldr	r0, [r4, #36]	; 0x24
   16290:	cmp	r0, #0
   16294:	beq	162b0 <__mempcpy_chk@plt+0x52cc>
   16298:	mov	r0, r4
   1629c:	mov	r2, r6
   162a0:	mov	r3, r5
   162a4:	sub	sp, fp, #16
   162a8:	pop	{r4, r5, r6, r7, fp, lr}
   162ac:	b	10f6c <fseeko64@plt>
   162b0:	ldr	r7, [fp, #8]
   162b4:	mov	r0, r4
   162b8:	bl	10f48 <fileno@plt>
   162bc:	mov	r2, r6
   162c0:	mov	r3, r5
   162c4:	str	r7, [sp]
   162c8:	bl	10e64 <lseek64@plt>
   162cc:	and	r2, r0, r1
   162d0:	cmn	r2, #1
   162d4:	beq	162f4 <__mempcpy_chk@plt+0x5310>
   162d8:	strd	r0, [r4, #80]	; 0x50
   162dc:	ldr	r0, [r4]
   162e0:	bic	r0, r0, #16
   162e4:	str	r0, [r4]
   162e8:	mov	r0, #0
   162ec:	sub	sp, fp, #16
   162f0:	pop	{r4, r5, r6, r7, fp, pc}
   162f4:	mvn	r0, #0
   162f8:	sub	sp, fp, #16
   162fc:	pop	{r4, r5, r6, r7, fp, pc}
   16300:	ldrb	r2, [r0]
   16304:	cmp	r2, #0
   16308:	beq	1632c <__mempcpy_chk@plt+0x5348>
   1630c:	add	r3, r0, #1
   16310:	mov	r0, #0
   16314:	ror	r0, r0, #23
   16318:	uxtab	r0, r0, r2
   1631c:	ldrb	r2, [r3], #1
   16320:	cmp	r2, #0
   16324:	bne	16314 <__mempcpy_chk@plt+0x5330>
   16328:	b	16330 <__mempcpy_chk@plt+0x534c>
   1632c:	mov	r0, #0
   16330:	udiv	r2, r0, r1
   16334:	mls	r0, r2, r1, r0
   16338:	bx	lr
   1633c:	push	{fp, lr}
   16340:	mov	fp, sp
   16344:	mov	r0, #14
   16348:	bl	10f9c <nl_langinfo@plt>
   1634c:	movw	r1, #26521	; 0x6799
   16350:	cmp	r0, #0
   16354:	movt	r1, #1
   16358:	movne	r1, r0
   1635c:	movw	r0, #29585	; 0x7391
   16360:	ldrb	r2, [r1]
   16364:	movt	r0, #1
   16368:	cmp	r2, #0
   1636c:	movne	r0, r1
   16370:	pop	{fp, pc}
   16374:	push	{r4, r5, r6, r7, fp, lr}
   16378:	add	fp, sp, #16
   1637c:	sub	sp, sp, #8
   16380:	cmp	r0, #0
   16384:	add	r5, sp, #4
   16388:	mov	r7, r2
   1638c:	mov	r4, r1
   16390:	movne	r5, r0
   16394:	mov	r0, r5
   16398:	bl	10e88 <mbrtowc@plt>
   1639c:	mov	r6, r0
   163a0:	cmp	r7, #0
   163a4:	beq	163cc <__mempcpy_chk@plt+0x53e8>
   163a8:	cmn	r6, #2
   163ac:	bcc	163cc <__mempcpy_chk@plt+0x53e8>
   163b0:	mov	r0, #0
   163b4:	bl	16414 <__mempcpy_chk@plt+0x5430>
   163b8:	cmp	r0, #0
   163bc:	bne	163cc <__mempcpy_chk@plt+0x53e8>
   163c0:	ldrb	r0, [r4]
   163c4:	mov	r6, #1
   163c8:	str	r0, [r5]
   163cc:	mov	r0, r6
   163d0:	sub	sp, fp, #16
   163d4:	pop	{r4, r5, r6, r7, fp, pc}
   163d8:	cmp	r2, #0
   163dc:	beq	1640c <__mempcpy_chk@plt+0x5428>
   163e0:	mvn	r3, #0
   163e4:	udiv	r3, r3, r2
   163e8:	cmp	r3, r1
   163ec:	bcs	1640c <__mempcpy_chk@plt+0x5428>
   163f0:	push	{fp, lr}
   163f4:	mov	fp, sp
   163f8:	bl	10f18 <__errno_location@plt>
   163fc:	mov	r1, #12
   16400:	str	r1, [r0]
   16404:	mov	r0, #0
   16408:	pop	{fp, pc}
   1640c:	mul	r1, r2, r1
   16410:	b	16088 <__mempcpy_chk@plt+0x50a4>
   16414:	push	{r4, sl, fp, lr}
   16418:	add	fp, sp, #8
   1641c:	sub	sp, sp, #264	; 0x108
   16420:	add	r1, sp, #7
   16424:	movw	r2, #257	; 0x101
   16428:	bl	16480 <__mempcpy_chk@plt+0x549c>
   1642c:	mov	r4, #0
   16430:	cmp	r0, #0
   16434:	bne	16474 <__mempcpy_chk@plt+0x5490>
   16438:	movw	r1, #29591	; 0x7397
   1643c:	add	r0, sp, #7
   16440:	mov	r2, #2
   16444:	movt	r1, #1
   16448:	bl	10f00 <bcmp@plt>
   1644c:	cmp	r0, #0
   16450:	beq	16474 <__mempcpy_chk@plt+0x5490>
   16454:	movw	r1, #29593	; 0x7399
   16458:	add	r0, sp, #7
   1645c:	mov	r2, #6
   16460:	movt	r1, #1
   16464:	bl	10f00 <bcmp@plt>
   16468:	cmp	r0, #0
   1646c:	mov	r4, r0
   16470:	movwne	r4, #1
   16474:	mov	r0, r4
   16478:	sub	sp, fp, #8
   1647c:	pop	{r4, sl, fp, pc}
   16480:	push	{r4, r5, r6, r7, fp, lr}
   16484:	add	fp, sp, #16
   16488:	mov	r4, r1
   1648c:	mov	r1, #0
   16490:	mov	r6, r2
   16494:	bl	10f84 <setlocale@plt>
   16498:	cmp	r0, #0
   1649c:	beq	164cc <__mempcpy_chk@plt+0x54e8>
   164a0:	mov	r7, r0
   164a4:	bl	10f0c <strlen@plt>
   164a8:	cmp	r0, r6
   164ac:	bcs	164e8 <__mempcpy_chk@plt+0x5504>
   164b0:	add	r2, r0, #1
   164b4:	mov	r0, r4
   164b8:	mov	r1, r7
   164bc:	bl	10df8 <memcpy@plt>
   164c0:	mov	r5, #0
   164c4:	mov	r0, r5
   164c8:	pop	{r4, r5, r6, r7, fp, pc}
   164cc:	mov	r5, #22
   164d0:	cmp	r6, #0
   164d4:	beq	16510 <__mempcpy_chk@plt+0x552c>
   164d8:	mov	r0, #0
   164dc:	strb	r0, [r4]
   164e0:	mov	r0, r5
   164e4:	pop	{r4, r5, r6, r7, fp, pc}
   164e8:	mov	r5, #34	; 0x22
   164ec:	cmp	r6, #0
   164f0:	beq	16510 <__mempcpy_chk@plt+0x552c>
   164f4:	sub	r6, r6, #1
   164f8:	mov	r0, r4
   164fc:	mov	r1, r7
   16500:	mov	r2, r6
   16504:	bl	10df8 <memcpy@plt>
   16508:	mov	r0, #0
   1650c:	strb	r0, [r4, r6]
   16510:	mov	r0, r5
   16514:	pop	{r4, r5, r6, r7, fp, pc}
   16518:	mov	r1, #0
   1651c:	b	10f84 <setlocale@plt>
   16520:	cmp	r3, #0
   16524:	cmpeq	r2, #0
   16528:	bne	16540 <__mempcpy_chk@plt+0x555c>
   1652c:	cmp	r1, #0
   16530:	cmpeq	r0, #0
   16534:	mvnne	r1, #0
   16538:	mvnne	r0, #0
   1653c:	b	1655c <__mempcpy_chk@plt+0x5578>
   16540:	sub	sp, sp, #8
   16544:	push	{sp, lr}
   16548:	bl	1656c <__mempcpy_chk@plt+0x5588>
   1654c:	ldr	lr, [sp, #4]
   16550:	add	sp, sp, #8
   16554:	pop	{r2, r3}
   16558:	bx	lr
   1655c:	push	{r1, lr}
   16560:	mov	r0, #8
   16564:	bl	10da4 <raise@plt>
   16568:	pop	{r1, pc}
   1656c:	cmp	r1, r3
   16570:	cmpeq	r0, r2
   16574:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16578:	mov	r4, r0
   1657c:	movcc	r0, #0
   16580:	mov	r5, r1
   16584:	ldr	lr, [sp, #36]	; 0x24
   16588:	movcc	r1, r0
   1658c:	bcc	16688 <__mempcpy_chk@plt+0x56a4>
   16590:	cmp	r3, #0
   16594:	clzeq	ip, r2
   16598:	clzne	ip, r3
   1659c:	addeq	ip, ip, #32
   165a0:	cmp	r5, #0
   165a4:	clzeq	r1, r4
   165a8:	addeq	r1, r1, #32
   165ac:	clzne	r1, r5
   165b0:	sub	ip, ip, r1
   165b4:	sub	sl, ip, #32
   165b8:	lsl	r9, r3, ip
   165bc:	rsb	fp, ip, #32
   165c0:	orr	r9, r9, r2, lsl sl
   165c4:	orr	r9, r9, r2, lsr fp
   165c8:	lsl	r8, r2, ip
   165cc:	cmp	r5, r9
   165d0:	cmpeq	r4, r8
   165d4:	movcc	r0, #0
   165d8:	movcc	r1, r0
   165dc:	bcc	165f8 <__mempcpy_chk@plt+0x5614>
   165e0:	mov	r0, #1
   165e4:	subs	r4, r4, r8
   165e8:	lsl	r1, r0, sl
   165ec:	orr	r1, r1, r0, lsr fp
   165f0:	lsl	r0, r0, ip
   165f4:	sbc	r5, r5, r9
   165f8:	cmp	ip, #0
   165fc:	beq	16688 <__mempcpy_chk@plt+0x56a4>
   16600:	lsr	r6, r8, #1
   16604:	orr	r6, r6, r9, lsl #31
   16608:	lsr	r7, r9, #1
   1660c:	mov	r2, ip
   16610:	b	16634 <__mempcpy_chk@plt+0x5650>
   16614:	subs	r3, r4, r6
   16618:	sbc	r8, r5, r7
   1661c:	adds	r3, r3, r3
   16620:	adc	r8, r8, r8
   16624:	adds	r4, r3, #1
   16628:	adc	r5, r8, #0
   1662c:	subs	r2, r2, #1
   16630:	beq	16650 <__mempcpy_chk@plt+0x566c>
   16634:	cmp	r5, r7
   16638:	cmpeq	r4, r6
   1663c:	bcs	16614 <__mempcpy_chk@plt+0x5630>
   16640:	adds	r4, r4, r4
   16644:	adc	r5, r5, r5
   16648:	subs	r2, r2, #1
   1664c:	bne	16634 <__mempcpy_chk@plt+0x5650>
   16650:	lsr	r3, r4, ip
   16654:	orr	r3, r3, r5, lsl fp
   16658:	lsr	r2, r5, ip
   1665c:	orr	r3, r3, r5, lsr sl
   16660:	adds	r0, r0, r4
   16664:	mov	r4, r3
   16668:	lsl	r3, r2, ip
   1666c:	orr	r3, r3, r4, lsl sl
   16670:	lsl	ip, r4, ip
   16674:	orr	r3, r3, r4, lsr fp
   16678:	adc	r1, r1, r5
   1667c:	subs	r0, r0, ip
   16680:	mov	r5, r2
   16684:	sbc	r1, r1, r3
   16688:	cmp	lr, #0
   1668c:	strdne	r4, [lr]
   16690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16694:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16698:	mov	r7, r0
   1669c:	ldr	r6, [pc, #72]	; 166ec <__mempcpy_chk@plt+0x5708>
   166a0:	ldr	r5, [pc, #72]	; 166f0 <__mempcpy_chk@plt+0x570c>
   166a4:	add	r6, pc, r6
   166a8:	add	r5, pc, r5
   166ac:	sub	r6, r6, r5
   166b0:	mov	r8, r1
   166b4:	mov	r9, r2
   166b8:	bl	10d6c <calloc@plt-0x20>
   166bc:	asrs	r6, r6, #2
   166c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   166c4:	mov	r4, #0
   166c8:	add	r4, r4, #1
   166cc:	ldr	r3, [r5], #4
   166d0:	mov	r2, r9
   166d4:	mov	r1, r8
   166d8:	mov	r0, r7
   166dc:	blx	r3
   166e0:	cmp	r6, r4
   166e4:	bne	166c8 <__mempcpy_chk@plt+0x56e4>
   166e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   166ec:	andeq	r1, r1, r0, ror #16
   166f0:	andeq	r1, r1, r8, asr r8
   166f4:	bx	lr
   166f8:	ldr	r3, [pc, #12]	; 1670c <__mempcpy_chk@plt+0x5728>
   166fc:	mov	r1, #0
   16700:	add	r3, pc, r3
   16704:	ldr	r2, [r3]
   16708:	b	10f24 <__cxa_atexit@plt>
   1670c:	ldrdeq	r1, [r1], -ip

Disassembly of section .fini:

00016710 <.fini>:
   16710:	push	{r3, lr}
   16714:	pop	{r3, pc}
