
../repos/coreutils/src/sync:     file format elf32-littlearm


Disassembly of section .init:

00010d3c <.init>:
   10d3c:	push	{r3, lr}
   10d40:	bl	10fe4 <close@plt+0x48>
   10d44:	pop	{r3, pc}

Disassembly of section .plt:

00010d48 <calloc@plt-0x14>:
   10d48:	push	{lr}		; (str lr, [sp, #-4]!)
   10d4c:	ldr	lr, [pc, #4]	; 10d58 <calloc@plt-0x4>
   10d50:	add	lr, pc, lr
   10d54:	ldr	pc, [lr, #8]!
   10d58:	andeq	r5, r1, r8, lsr #5

00010d5c <calloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #86016	; 0x15000
   10d64:	ldr	pc, [ip, #680]!	; 0x2a8

00010d68 <fputs_unlocked@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #86016	; 0x15000
   10d70:	ldr	pc, [ip, #672]!	; 0x2a0

00010d74 <fsync@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #86016	; 0x15000
   10d7c:	ldr	pc, [ip, #664]!	; 0x298

00010d80 <strcmp@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #86016	; 0x15000
   10d88:	ldr	pc, [ip, #656]!	; 0x290

00010d8c <fflush@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #86016	; 0x15000
   10d94:	ldr	pc, [ip, #648]!	; 0x288

00010d98 <free@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #86016	; 0x15000
   10da0:	ldr	pc, [ip, #640]!	; 0x280

00010da4 <_exit@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #86016	; 0x15000
   10dac:	ldr	pc, [ip, #632]!	; 0x278

00010db0 <memcpy@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #86016	; 0x15000
   10db8:	ldr	pc, [ip, #624]!	; 0x270

00010dbc <mbsinit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #86016	; 0x15000
   10dc4:	ldr	pc, [ip, #616]!	; 0x268

00010dc8 <memcmp@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #86016	; 0x15000
   10dd0:	ldr	pc, [ip, #608]!	; 0x260

00010dd4 <dcgettext@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #86016	; 0x15000
   10ddc:	ldr	pc, [ip, #600]!	; 0x258

00010de0 <syncfs@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #86016	; 0x15000
   10de8:	ldr	pc, [ip, #592]!	; 0x250

00010dec <realloc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #86016	; 0x15000
   10df4:	ldr	pc, [ip, #584]!	; 0x248

00010df8 <textdomain@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #86016	; 0x15000
   10e00:	ldr	pc, [ip, #576]!	; 0x240

00010e04 <iswprint@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #86016	; 0x15000
   10e0c:	ldr	pc, [ip, #568]!	; 0x238

00010e10 <fwrite@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #86016	; 0x15000
   10e18:	ldr	pc, [ip, #560]!	; 0x230

00010e1c <lseek64@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #86016	; 0x15000
   10e24:	ldr	pc, [ip, #552]!	; 0x228

00010e28 <__ctype_get_mb_cur_max@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #86016	; 0x15000
   10e30:	ldr	pc, [ip, #544]!	; 0x220

00010e34 <__fpending@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #86016	; 0x15000
   10e3c:	ldr	pc, [ip, #536]!	; 0x218

00010e40 <ferror_unlocked@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #86016	; 0x15000
   10e48:	ldr	pc, [ip, #528]!	; 0x210

00010e4c <mbrtowc@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #86016	; 0x15000
   10e54:	ldr	pc, [ip, #520]!	; 0x208

00010e58 <error@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #86016	; 0x15000
   10e60:	ldr	pc, [ip, #512]!	; 0x200

00010e64 <open64@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #86016	; 0x15000
   10e6c:	ldr	pc, [ip, #504]!	; 0x1f8

00010e70 <malloc@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #86016	; 0x15000
   10e78:	ldr	pc, [ip, #496]!	; 0x1f0

00010e7c <__libc_start_main@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #86016	; 0x15000
   10e84:	ldr	pc, [ip, #488]!	; 0x1e8

00010e88 <__freading@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #86016	; 0x15000
   10e90:	ldr	pc, [ip, #480]!	; 0x1e0

00010e94 <__gmon_start__@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #86016	; 0x15000
   10e9c:	ldr	pc, [ip, #472]!	; 0x1d8

00010ea0 <getopt_long@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #86016	; 0x15000
   10ea8:	ldr	pc, [ip, #464]!	; 0x1d0

00010eac <__ctype_b_loc@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #456]!	; 0x1c8

00010eb8 <exit@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #448]!	; 0x1c0

00010ec4 <strlen@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #440]!	; 0x1b8

00010ed0 <__errno_location@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #432]!	; 0x1b0

00010edc <__cxa_atexit@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #424]!	; 0x1a8

00010ee8 <memset@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #416]!	; 0x1a0

00010ef4 <__printf_chk@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #408]!	; 0x198

00010f00 <fileno@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #400]!	; 0x190

00010f0c <__fprintf_chk@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #392]!	; 0x188

00010f18 <fclose@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #384]!	; 0x180

00010f24 <fseeko64@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #376]!	; 0x178

00010f30 <fcntl64@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #368]!	; 0x170

00010f3c <setlocale@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #360]!	; 0x168

00010f48 <strrchr@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #352]!	; 0x160

00010f54 <nl_langinfo@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #344]!	; 0x158

00010f60 <bindtextdomain@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #336]!	; 0x150

00010f6c <sync@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #328]!	; 0x148

00010f78 <strncmp@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #320]!	; 0x140

00010f84 <fdatasync@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #312]!	; 0x138

00010f90 <abort@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #304]!	; 0x130

00010f9c <close@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #296]!	; 0x128

Disassembly of section .text:

00010fa8 <.text>:
   10fa8:	mov	fp, #0
   10fac:	mov	lr, #0
   10fb0:	pop	{r1}		; (ldr r1, [sp], #4)
   10fb4:	mov	r2, sp
   10fb8:	push	{r2}		; (str r2, [sp, #-4]!)
   10fbc:	push	{r0}		; (str r0, [sp, #-4]!)
   10fc0:	ldr	ip, [pc, #16]	; 10fd8 <close@plt+0x3c>
   10fc4:	push	{ip}		; (str ip, [sp, #-4]!)
   10fc8:	ldr	r0, [pc, #12]	; 10fdc <close@plt+0x40>
   10fcc:	ldr	r3, [pc, #12]	; 10fe0 <close@plt+0x44>
   10fd0:	bl	10e7c <__libc_start_main@plt>
   10fd4:	bl	10f90 <abort@plt>
   10fd8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   10fdc:	andeq	r1, r1, r0, asr #6
   10fe0:	muleq	r1, r4, r7
   10fe4:	ldr	r3, [pc, #20]	; 11000 <close@plt+0x64>
   10fe8:	ldr	r2, [pc, #20]	; 11004 <close@plt+0x68>
   10fec:	add	r3, pc, r3
   10ff0:	ldr	r2, [r3, r2]
   10ff4:	cmp	r2, #0
   10ff8:	bxeq	lr
   10ffc:	b	10e94 <__gmon_start__@plt>
   11000:	andeq	r5, r1, ip
   11004:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11008:	ldr	r0, [pc, #24]	; 11028 <close@plt+0x8c>
   1100c:	ldr	r3, [pc, #24]	; 1102c <close@plt+0x90>
   11010:	cmp	r3, r0
   11014:	bxeq	lr
   11018:	ldr	r3, [pc, #16]	; 11030 <close@plt+0x94>
   1101c:	cmp	r3, #0
   11020:	bxeq	lr
   11024:	bx	r3
   11028:	andeq	r6, r2, r8, lsr #2
   1102c:	andeq	r6, r2, r8, lsr #2
   11030:	andeq	r0, r0, r0
   11034:	ldr	r0, [pc, #36]	; 11060 <close@plt+0xc4>
   11038:	ldr	r1, [pc, #36]	; 11064 <close@plt+0xc8>
   1103c:	sub	r1, r1, r0
   11040:	asr	r1, r1, #2
   11044:	add	r1, r1, r1, lsr #31
   11048:	asrs	r1, r1, #1
   1104c:	bxeq	lr
   11050:	ldr	r3, [pc, #16]	; 11068 <close@plt+0xcc>
   11054:	cmp	r3, #0
   11058:	bxeq	lr
   1105c:	bx	r3
   11060:	andeq	r6, r2, r8, lsr #2
   11064:	andeq	r6, r2, r8, lsr #2
   11068:	andeq	r0, r0, r0
   1106c:	push	{r4, lr}
   11070:	ldr	r4, [pc, #24]	; 11090 <close@plt+0xf4>
   11074:	ldrb	r3, [r4]
   11078:	cmp	r3, #0
   1107c:	popne	{r4, pc}
   11080:	bl	11008 <close@plt+0x6c>
   11084:	mov	r3, #1
   11088:	strb	r3, [r4]
   1108c:	pop	{r4, pc}
   11090:	andeq	r6, r2, r0, asr #2
   11094:	b	11034 <close@plt+0x98>
   11098:	push	{fp, lr}
   1109c:	mov	fp, sp
   110a0:	mov	r4, r0
   110a4:	cmp	r0, #0
   110a8:	bne	11178 <close@plt+0x1dc>
   110ac:	movw	r1, #18499	; 0x4843
   110b0:	movt	r1, #1
   110b4:	mov	r0, #0
   110b8:	mov	r2, #5
   110bc:	bl	10dd4 <dcgettext@plt>
   110c0:	mov	r1, r0
   110c4:	movw	r0, #24912	; 0x6150
   110c8:	movt	r0, #2
   110cc:	ldr	r2, [r0]
   110d0:	mov	r0, #1
   110d4:	bl	10ef4 <__printf_chk@plt>
   110d8:	movw	r1, #18529	; 0x4861
   110dc:	movt	r1, #1
   110e0:	mov	r0, #0
   110e4:	mov	r2, #5
   110e8:	bl	10dd4 <dcgettext@plt>
   110ec:	movw	r5, #24892	; 0x613c
   110f0:	movt	r5, #2
   110f4:	ldr	r1, [r5]
   110f8:	bl	10d68 <fputs_unlocked@plt>
   110fc:	movw	r1, #18666	; 0x48ea
   11100:	movt	r1, #1
   11104:	mov	r0, #0
   11108:	mov	r2, #5
   1110c:	bl	10dd4 <dcgettext@plt>
   11110:	ldr	r1, [r5]
   11114:	bl	10d68 <fputs_unlocked@plt>
   11118:	movw	r1, #18734	; 0x492e
   1111c:	movt	r1, #1
   11120:	mov	r0, #0
   11124:	mov	r2, #5
   11128:	bl	10dd4 <dcgettext@plt>
   1112c:	ldr	r1, [r5]
   11130:	bl	10d68 <fputs_unlocked@plt>
   11134:	movw	r1, #18805	; 0x4975
   11138:	movt	r1, #1
   1113c:	mov	r0, #0
   11140:	mov	r2, #5
   11144:	bl	10dd4 <dcgettext@plt>
   11148:	ldr	r1, [r5]
   1114c:	bl	10d68 <fputs_unlocked@plt>
   11150:	movw	r1, #18850	; 0x49a2
   11154:	movt	r1, #1
   11158:	mov	r0, #0
   1115c:	mov	r2, #5
   11160:	bl	10dd4 <dcgettext@plt>
   11164:	ldr	r1, [r5]
   11168:	bl	10d68 <fputs_unlocked@plt>
   1116c:	bl	111bc <close@plt+0x220>
   11170:	mov	r0, r4
   11174:	bl	10eb8 <exit@plt>
   11178:	movw	r0, #24888	; 0x6138
   1117c:	movt	r0, #2
   11180:	ldr	r5, [r0]
   11184:	movw	r1, #18460	; 0x481c
   11188:	movt	r1, #1
   1118c:	mov	r0, #0
   11190:	mov	r2, #5
   11194:	bl	10dd4 <dcgettext@plt>
   11198:	mov	r2, r0
   1119c:	movw	r0, #24912	; 0x6150
   111a0:	movt	r0, #2
   111a4:	ldr	r3, [r0]
   111a8:	mov	r0, r5
   111ac:	mov	r1, #1
   111b0:	bl	10f0c <__fprintf_chk@plt>
   111b4:	mov	r0, r4
   111b8:	bl	10eb8 <exit@plt>
   111bc:	push	{r4, r5, fp, lr}
   111c0:	add	fp, sp, #8
   111c4:	sub	sp, sp, #56	; 0x38
   111c8:	movw	r0, #19560	; 0x4c68
   111cc:	movt	r0, #1
   111d0:	add	r1, r0, #32
   111d4:	mov	r5, sp
   111d8:	mov	r2, #48	; 0x30
   111dc:	vld1.64	{d16-d17}, [r1]
   111e0:	add	r1, r5, #32
   111e4:	add	r3, r0, #16
   111e8:	vld1.64	{d18-d19}, [r0], r2
   111ec:	vld1.64	{d20-d21}, [r3]
   111f0:	vldr	d22, [r0]
   111f4:	vst1.64	{d16-d17}, [r1]
   111f8:	add	r0, r5, #16
   111fc:	vst1.64	{d20-d21}, [r0]
   11200:	mov	r0, r5
   11204:	vst1.64	{d18-d19}, [r0], r2
   11208:	vstr	d22, [r0]
   1120c:	ldr	r1, [sp]
   11210:	cmp	r1, #0
   11214:	beq	1123c <close@plt+0x2a0>
   11218:	mov	r5, sp
   1121c:	movw	r4, #18904	; 0x49d8
   11220:	movt	r4, #1
   11224:	mov	r0, r4
   11228:	bl	10d80 <strcmp@plt>
   1122c:	cmp	r0, #0
   11230:	ldrne	r1, [r5, #8]!
   11234:	cmpne	r1, #0
   11238:	bne	11224 <close@plt+0x288>
   1123c:	ldr	r4, [r5, #4]
   11240:	movw	r1, #19156	; 0x4ad4
   11244:	movt	r1, #1
   11248:	mov	r0, #0
   1124c:	mov	r2, #5
   11250:	bl	10dd4 <dcgettext@plt>
   11254:	mov	r1, r0
   11258:	movw	r2, #18936	; 0x49f8
   1125c:	movt	r2, #1
   11260:	movw	r3, #19179	; 0x4aeb
   11264:	movt	r3, #1
   11268:	mov	r0, #1
   1126c:	bl	10ef4 <__printf_chk@plt>
   11270:	movw	r5, #18904	; 0x49d8
   11274:	movt	r5, #1
   11278:	cmp	r4, #0
   1127c:	moveq	r4, r5
   11280:	mov	r0, #5
   11284:	mov	r1, #0
   11288:	bl	10f3c <setlocale@plt>
   1128c:	cmp	r0, #0
   11290:	beq	112d0 <close@plt+0x334>
   11294:	movw	r1, #19219	; 0x4b13
   11298:	movt	r1, #1
   1129c:	mov	r2, #3
   112a0:	bl	10f78 <strncmp@plt>
   112a4:	cmp	r0, #0
   112a8:	beq	112d0 <close@plt+0x334>
   112ac:	movw	r1, #19223	; 0x4b17
   112b0:	movt	r1, #1
   112b4:	mov	r0, #0
   112b8:	mov	r2, #5
   112bc:	bl	10dd4 <dcgettext@plt>
   112c0:	movw	r1, #24892	; 0x613c
   112c4:	movt	r1, #2
   112c8:	ldr	r1, [r1]
   112cc:	bl	10d68 <fputs_unlocked@plt>
   112d0:	movw	r1, #19294	; 0x4b5e
   112d4:	movt	r1, #1
   112d8:	mov	r0, #0
   112dc:	mov	r2, #5
   112e0:	bl	10dd4 <dcgettext@plt>
   112e4:	mov	r1, r0
   112e8:	movw	r2, #19179	; 0x4aeb
   112ec:	movt	r2, #1
   112f0:	mov	r0, #1
   112f4:	mov	r3, r5
   112f8:	bl	10ef4 <__printf_chk@plt>
   112fc:	movw	r1, #19321	; 0x4b79
   11300:	movt	r1, #1
   11304:	mov	r0, #0
   11308:	mov	r2, #5
   1130c:	bl	10dd4 <dcgettext@plt>
   11310:	mov	r1, r0
   11314:	movw	r0, #19089	; 0x4a91
   11318:	movt	r0, #1
   1131c:	movw	r3, #18665	; 0x48e9
   11320:	movt	r3, #1
   11324:	cmp	r4, r5
   11328:	moveq	r3, r0
   1132c:	mov	r0, #1
   11330:	mov	r2, r4
   11334:	bl	10ef4 <__printf_chk@plt>
   11338:	sub	sp, fp, #8
   1133c:	pop	{r4, r5, fp, pc}
   11340:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11344:	add	fp, sp, #28
   11348:	sub	sp, sp, #12
   1134c:	mov	r8, r1
   11350:	mov	r5, r0
   11354:	ldr	r0, [r1]
   11358:	bl	11a08 <close@plt+0xa6c>
   1135c:	movw	r1, #18665	; 0x48e9
   11360:	movt	r1, #1
   11364:	mov	r0, #6
   11368:	bl	10f3c <setlocale@plt>
   1136c:	movw	r6, #18940	; 0x49fc
   11370:	movt	r6, #1
   11374:	movw	r1, #18909	; 0x49dd
   11378:	movt	r1, #1
   1137c:	mov	r0, r6
   11380:	bl	10f60 <bindtextdomain@plt>
   11384:	mov	r0, r6
   11388:	bl	10df8 <textdomain@plt>
   1138c:	movw	r0, #5948	; 0x173c
   11390:	movt	r0, #1
   11394:	bl	147f8 <close@plt+0x385c>
   11398:	mov	r7, #0
   1139c:	movw	r4, #18933	; 0x49f5
   113a0:	movt	r4, #1
   113a4:	movw	r9, #19480	; 0x4c18
   113a8:	movt	r9, #1
   113ac:	mov	r6, #0
   113b0:	mov	sl, #0
   113b4:	b	113bc <close@plt+0x420>
   113b8:	mov	r6, #1
   113bc:	str	r7, [sp]
   113c0:	mov	r0, r5
   113c4:	mov	r1, r8
   113c8:	mov	r2, r4
   113cc:	mov	r3, r9
   113d0:	bl	10ea0 <getopt_long@plt>
   113d4:	cmp	r0, #99	; 0x63
   113d8:	ble	113f4 <close@plt+0x458>
   113dc:	cmp	r0, #100	; 0x64
   113e0:	beq	113b8 <close@plt+0x41c>
   113e4:	mov	sl, #1
   113e8:	cmp	r0, #102	; 0x66
   113ec:	beq	113bc <close@plt+0x420>
   113f0:	b	11538 <close@plt+0x59c>
   113f4:	cmn	r0, #1
   113f8:	bne	1149c <close@plt+0x500>
   113fc:	eor	r1, r6, #1
   11400:	movw	r7, #24880	; 0x6130
   11404:	movt	r7, #2
   11408:	ldr	r0, [r7]
   1140c:	tst	r1, #1
   11410:	eoreq	r2, sl, #1
   11414:	tsteq	r2, #1
   11418:	beq	11508 <close@plt+0x56c>
   1141c:	mov	r2, #0
   11420:	cmp	r0, r5
   11424:	movwlt	r2, #1
   11428:	orr	r1, r2, r1
   1142c:	tst	r1, #1
   11430:	beq	11514 <close@plt+0x578>
   11434:	and	r6, r6, #1
   11438:	tst	sl, #1
   1143c:	movwne	r6, #2
   11440:	cmp	r0, r5
   11444:	bge	1148c <close@plt+0x4f0>
   11448:	ldr	r1, [r7]
   1144c:	mov	r0, #0
   11450:	cmp	r1, r5
   11454:	bge	11484 <close@plt+0x4e8>
   11458:	mov	r4, #1
   1145c:	ldr	r1, [r8, r1, lsl #2]
   11460:	mov	r0, r6
   11464:	bl	11540 <close@plt+0x5a4>
   11468:	ldr	r1, [r7]
   1146c:	add	r1, r1, #1
   11470:	str	r1, [r7]
   11474:	and	r4, r4, r0
   11478:	cmp	r1, r5
   1147c:	blt	1145c <close@plt+0x4c0>
   11480:	eor	r0, r4, #1
   11484:	sub	sp, fp, #28
   11488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1148c:	bl	10f6c <sync@plt>
   11490:	mov	r0, #0
   11494:	sub	sp, fp, #28
   11498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1149c:	cmn	r0, #3
   114a0:	bne	114f8 <close@plt+0x55c>
   114a4:	movw	r0, #24800	; 0x60e0
   114a8:	movt	r0, #2
   114ac:	ldr	r3, [r0]
   114b0:	movw	r0, #24892	; 0x613c
   114b4:	movt	r0, #2
   114b8:	ldr	r0, [r0]
   114bc:	mov	r1, #0
   114c0:	movw	r2, #18963	; 0x4a13
   114c4:	movt	r2, #1
   114c8:	movw	r7, #18950	; 0x4a06
   114cc:	movt	r7, #1
   114d0:	str	r7, [sp]
   114d4:	str	r2, [sp, #4]
   114d8:	str	r1, [sp, #8]
   114dc:	movw	r1, #18904	; 0x49d8
   114e0:	movt	r1, #1
   114e4:	movw	r2, #18936	; 0x49f8
   114e8:	movt	r2, #1
   114ec:	bl	13a10 <close@plt+0x2a74>
   114f0:	mov	r0, #0
   114f4:	bl	10eb8 <exit@plt>
   114f8:	cmn	r0, #2
   114fc:	bne	11538 <close@plt+0x59c>
   11500:	mov	r0, #0
   11504:	bl	11098 <close@plt+0xfc>
   11508:	movw	r1, #18981	; 0x4a25
   1150c:	movt	r1, #1
   11510:	b	1151c <close@plt+0x580>
   11514:	movw	r1, #19026	; 0x4a52
   11518:	movt	r1, #1
   1151c:	mov	r0, #0
   11520:	mov	r2, #5
   11524:	bl	10dd4 <dcgettext@plt>
   11528:	mov	r2, r0
   1152c:	mov	r0, #1
   11530:	mov	r1, #0
   11534:	bl	10e58 <error@plt>
   11538:	mov	r0, #1
   1153c:	bl	11098 <close@plt+0xfc>
   11540:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11544:	add	fp, sp, #24
   11548:	mov	r8, r1
   1154c:	mov	r6, r0
   11550:	mov	r0, r1
   11554:	mov	r1, #2048	; 0x800
   11558:	bl	10e64 <open64@plt>
   1155c:	mov	r5, r0
   11560:	cmn	r0, #1
   11564:	bgt	11588 <close@plt+0x5ec>
   11568:	bl	10ed0 <__errno_location@plt>
   1156c:	ldr	r7, [r0]
   11570:	mov	r0, r8
   11574:	movw	r1, #2049	; 0x801
   11578:	bl	10e64 <open64@plt>
   1157c:	mov	r5, r0
   11580:	cmn	r0, #1
   11584:	ble	1161c <close@plt+0x680>
   11588:	mov	r0, r5
   1158c:	mov	r1, #3
   11590:	bl	11824 <close@plt+0x888>
   11594:	cmn	r0, #1
   11598:	beq	115d8 <close@plt+0x63c>
   1159c:	bic	r2, r0, #2048	; 0x800
   115a0:	mov	r0, r5
   115a4:	mov	r1, #4
   115a8:	bl	11824 <close@plt+0x888>
   115ac:	cmn	r0, #1
   115b0:	ble	115d8 <close@plt+0x63c>
   115b4:	cmp	r6, #0
   115b8:	beq	11654 <close@plt+0x6b8>
   115bc:	cmp	r6, #2
   115c0:	beq	11660 <close@plt+0x6c4>
   115c4:	cmp	r6, #1
   115c8:	bne	11674 <close@plt+0x6d8>
   115cc:	mov	r0, r5
   115d0:	bl	10f84 <fdatasync@plt>
   115d4:	b	11668 <close@plt+0x6cc>
   115d8:	bl	10ed0 <__errno_location@plt>
   115dc:	ldr	r7, [r0]
   115e0:	mov	r6, #0
   115e4:	movw	r1, #19407	; 0x4bcf
   115e8:	movt	r1, #1
   115ec:	mov	r0, #0
   115f0:	mov	r2, #5
   115f4:	bl	10dd4 <dcgettext@plt>
   115f8:	mov	r4, r0
   115fc:	mov	r0, #4
   11600:	mov	r1, r8
   11604:	bl	1304c <close@plt+0x20b0>
   11608:	mov	r3, r0
   1160c:	mov	r0, #0
   11610:	mov	r1, r7
   11614:	mov	r2, r4
   11618:	b	116b4 <close@plt+0x718>
   1161c:	mov	r6, #0
   11620:	movw	r1, #19390	; 0x4bbe
   11624:	movt	r1, #1
   11628:	mov	r0, #0
   1162c:	mov	r2, #5
   11630:	bl	10dd4 <dcgettext@plt>
   11634:	mov	r5, r0
   11638:	mov	r0, #4
   1163c:	mov	r1, r8
   11640:	bl	1304c <close@plt+0x20b0>
   11644:	mov	r3, r0
   11648:	mov	r0, #0
   1164c:	mov	r1, r7
   11650:	b	1170c <close@plt+0x770>
   11654:	mov	r0, r5
   11658:	bl	10d74 <fsync@plt>
   1165c:	b	11668 <close@plt+0x6cc>
   11660:	mov	r0, r5
   11664:	bl	10de0 <syncfs@plt>
   11668:	mov	r6, #1
   1166c:	cmn	r0, #1
   11670:	bgt	116b8 <close@plt+0x71c>
   11674:	bl	10ed0 <__errno_location@plt>
   11678:	ldr	r4, [r0]
   1167c:	mov	r6, #0
   11680:	movw	r1, #19443	; 0x4bf3
   11684:	movt	r1, #1
   11688:	mov	r0, #0
   1168c:	mov	r2, #5
   11690:	bl	10dd4 <dcgettext@plt>
   11694:	mov	r7, r0
   11698:	mov	r0, #4
   1169c:	mov	r1, r8
   116a0:	bl	1304c <close@plt+0x20b0>
   116a4:	mov	r3, r0
   116a8:	mov	r0, #0
   116ac:	mov	r1, r4
   116b0:	mov	r2, r7
   116b4:	bl	10e58 <error@plt>
   116b8:	mov	r0, r5
   116bc:	bl	10f9c <close@plt>
   116c0:	cmn	r0, #1
   116c4:	ble	116d0 <close@plt+0x734>
   116c8:	mov	r0, r6
   116cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   116d0:	bl	10ed0 <__errno_location@plt>
   116d4:	ldr	r4, [r0]
   116d8:	mov	r6, #0
   116dc:	movw	r1, #19460	; 0x4c04
   116e0:	movt	r1, #1
   116e4:	mov	r0, #0
   116e8:	mov	r2, #5
   116ec:	bl	10dd4 <dcgettext@plt>
   116f0:	mov	r5, r0
   116f4:	mov	r0, #4
   116f8:	mov	r1, r8
   116fc:	bl	1304c <close@plt+0x20b0>
   11700:	mov	r3, r0
   11704:	mov	r0, #0
   11708:	mov	r1, r4
   1170c:	mov	r2, r5
   11710:	bl	10e58 <error@plt>
   11714:	mov	r0, r6
   11718:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1171c:	movw	r1, #24900	; 0x6144
   11720:	movt	r1, #2
   11724:	str	r0, [r1]
   11728:	bx	lr
   1172c:	movw	r1, #24904	; 0x6148
   11730:	movt	r1, #2
   11734:	strb	r0, [r1]
   11738:	bx	lr
   1173c:	push	{r4, r5, r6, sl, fp, lr}
   11740:	add	fp, sp, #16
   11744:	sub	sp, sp, #8
   11748:	movw	r0, #24892	; 0x613c
   1174c:	movt	r0, #2
   11750:	ldr	r0, [r0]
   11754:	bl	14308 <close@plt+0x336c>
   11758:	cmp	r0, #0
   1175c:	beq	11784 <close@plt+0x7e8>
   11760:	movw	r0, #24904	; 0x6148
   11764:	movt	r0, #2
   11768:	ldrb	r0, [r0]
   1176c:	cmp	r0, #0
   11770:	beq	117a4 <close@plt+0x808>
   11774:	bl	10ed0 <__errno_location@plt>
   11778:	ldr	r0, [r0]
   1177c:	cmp	r0, #32
   11780:	bne	117a4 <close@plt+0x808>
   11784:	movw	r0, #24888	; 0x6138
   11788:	movt	r0, #2
   1178c:	ldr	r0, [r0]
   11790:	bl	14308 <close@plt+0x336c>
   11794:	cmp	r0, #0
   11798:	subeq	sp, fp, #16
   1179c:	popeq	{r4, r5, r6, sl, fp, pc}
   117a0:	b	11814 <close@plt+0x878>
   117a4:	movw	r1, #19631	; 0x4caf
   117a8:	movt	r1, #1
   117ac:	mov	r0, #0
   117b0:	mov	r2, #5
   117b4:	bl	10dd4 <dcgettext@plt>
   117b8:	mov	r4, r0
   117bc:	movw	r0, #24900	; 0x6144
   117c0:	movt	r0, #2
   117c4:	ldr	r6, [r0]
   117c8:	bl	10ed0 <__errno_location@plt>
   117cc:	ldr	r5, [r0]
   117d0:	cmp	r6, #0
   117d4:	bne	117f0 <close@plt+0x854>
   117d8:	movw	r2, #19647	; 0x4cbf
   117dc:	movt	r2, #1
   117e0:	mov	r0, #0
   117e4:	mov	r1, r5
   117e8:	mov	r3, r4
   117ec:	b	11810 <close@plt+0x874>
   117f0:	mov	r0, r6
   117f4:	bl	130f0 <close@plt+0x2154>
   117f8:	mov	r3, r0
   117fc:	str	r4, [sp]
   11800:	movw	r2, #19643	; 0x4cbb
   11804:	movt	r2, #1
   11808:	mov	r0, #0
   1180c:	mov	r1, r5
   11810:	bl	10e58 <error@plt>
   11814:	movw	r0, #24804	; 0x60e4
   11818:	movt	r0, #2
   1181c:	ldr	r0, [r0]
   11820:	bl	10da4 <_exit@plt>
   11824:	sub	sp, sp, #8
   11828:	push	{fp, lr}
   1182c:	mov	fp, sp
   11830:	sub	sp, sp, #8
   11834:	str	r3, [fp, #12]
   11838:	str	r2, [fp, #8]
   1183c:	add	r2, fp, #8
   11840:	str	r2, [sp, #4]
   11844:	cmp	r1, #11
   11848:	bhi	11888 <close@plt+0x8ec>
   1184c:	mov	r2, #1
   11850:	movw	r3, #1300	; 0x514
   11854:	tst	r3, r2, lsl r1
   11858:	bne	118d8 <close@plt+0x93c>
   1185c:	movw	r3, #2570	; 0xa0a
   11860:	tst	r3, r2, lsl r1
   11864:	bne	118b0 <close@plt+0x914>
   11868:	cmp	r1, #0
   1186c:	bne	11888 <close@plt+0x8ec>
   11870:	ldr	r1, [sp, #4]
   11874:	add	r2, r1, #4
   11878:	str	r2, [sp, #4]
   1187c:	ldr	r1, [r1]
   11880:	bl	118fc <close@plt+0x960>
   11884:	b	118ec <close@plt+0x950>
   11888:	sub	r2, r1, #1024	; 0x400
   1188c:	cmp	r2, #10
   11890:	bhi	118d8 <close@plt+0x93c>
   11894:	mov	ip, #1
   11898:	movw	r3, #645	; 0x285
   1189c:	tst	r3, ip, lsl r2
   118a0:	bne	118d8 <close@plt+0x93c>
   118a4:	movw	r3, #1282	; 0x502
   118a8:	tst	r3, ip, lsl r2
   118ac:	beq	118b8 <close@plt+0x91c>
   118b0:	bl	10f30 <fcntl64@plt>
   118b4:	b	118ec <close@plt+0x950>
   118b8:	cmp	r2, #6
   118bc:	bne	118d8 <close@plt+0x93c>
   118c0:	ldr	r1, [sp, #4]
   118c4:	add	r2, r1, #4
   118c8:	str	r2, [sp, #4]
   118cc:	ldr	r1, [r1]
   118d0:	bl	11908 <close@plt+0x96c>
   118d4:	b	118ec <close@plt+0x950>
   118d8:	ldr	r2, [sp, #4]
   118dc:	add	r3, r2, #4
   118e0:	str	r3, [sp, #4]
   118e4:	ldr	r2, [r2]
   118e8:	bl	10f30 <fcntl64@plt>
   118ec:	mov	sp, fp
   118f0:	pop	{fp, lr}
   118f4:	add	sp, sp, #8
   118f8:	bx	lr
   118fc:	mov	r2, r1
   11900:	mov	r1, #0
   11904:	b	10f30 <fcntl64@plt>
   11908:	push	{r4, r5, r6, r7, fp, lr}
   1190c:	add	fp, sp, #16
   11910:	mov	r5, r1
   11914:	mov	r6, r0
   11918:	movw	r7, #24908	; 0x614c
   1191c:	movt	r7, #2
   11920:	ldr	r0, [r7]
   11924:	cmp	r0, #0
   11928:	blt	1198c <close@plt+0x9f0>
   1192c:	mov	r0, r6
   11930:	movw	r1, #1030	; 0x406
   11934:	mov	r2, r5
   11938:	bl	10f30 <fcntl64@plt>
   1193c:	mov	r4, r0
   11940:	cmn	r0, #1
   11944:	bgt	11978 <close@plt+0x9dc>
   11948:	bl	10ed0 <__errno_location@plt>
   1194c:	ldr	r0, [r0]
   11950:	cmp	r0, #22
   11954:	bne	11978 <close@plt+0x9dc>
   11958:	mov	r0, r6
   1195c:	mov	r1, r5
   11960:	bl	118fc <close@plt+0x960>
   11964:	mov	r4, r0
   11968:	cmp	r0, #0
   1196c:	blt	119dc <close@plt+0xa40>
   11970:	mvn	r0, #0
   11974:	b	1197c <close@plt+0x9e0>
   11978:	mov	r0, #1
   1197c:	str	r0, [r7]
   11980:	cmp	r4, #0
   11984:	bge	119a4 <close@plt+0xa08>
   11988:	b	119dc <close@plt+0xa40>
   1198c:	mov	r0, r6
   11990:	mov	r1, r5
   11994:	bl	118fc <close@plt+0x960>
   11998:	mov	r4, r0
   1199c:	cmp	r4, #0
   119a0:	blt	119dc <close@plt+0xa40>
   119a4:	ldr	r0, [r7]
   119a8:	cmn	r0, #1
   119ac:	bne	119dc <close@plt+0xa40>
   119b0:	mov	r0, r4
   119b4:	mov	r1, #1
   119b8:	bl	10f30 <fcntl64@plt>
   119bc:	cmp	r0, #0
   119c0:	blt	119e4 <close@plt+0xa48>
   119c4:	orr	r2, r0, #1
   119c8:	mov	r0, r4
   119cc:	mov	r1, #2
   119d0:	bl	10f30 <fcntl64@plt>
   119d4:	cmn	r0, #1
   119d8:	beq	119e4 <close@plt+0xa48>
   119dc:	mov	r0, r4
   119e0:	pop	{r4, r5, r6, r7, fp, pc}
   119e4:	bl	10ed0 <__errno_location@plt>
   119e8:	mov	r5, r0
   119ec:	ldr	r6, [r0]
   119f0:	mov	r0, r4
   119f4:	bl	10f9c <close@plt>
   119f8:	str	r6, [r5]
   119fc:	mvn	r4, #0
   11a00:	mov	r0, r4
   11a04:	pop	{r4, r5, r6, r7, fp, pc}
   11a08:	push	{r4, r5, fp, lr}
   11a0c:	add	fp, sp, #8
   11a10:	cmp	r0, #0
   11a14:	beq	11aa8 <close@plt+0xb0c>
   11a18:	mov	r4, r0
   11a1c:	mov	r1, #47	; 0x2f
   11a20:	bl	10f48 <strrchr@plt>
   11a24:	cmp	r0, #0
   11a28:	mov	r5, r4
   11a2c:	addne	r5, r0, #1
   11a30:	sub	r0, r5, r4
   11a34:	cmp	r0, #7
   11a38:	blt	11a8c <close@plt+0xaf0>
   11a3c:	sub	r0, r5, #7
   11a40:	movw	r1, #19706	; 0x4cfa
   11a44:	movt	r1, #1
   11a48:	mov	r2, #7
   11a4c:	bl	10f78 <strncmp@plt>
   11a50:	cmp	r0, #0
   11a54:	bne	11a8c <close@plt+0xaf0>
   11a58:	movw	r1, #19714	; 0x4d02
   11a5c:	movt	r1, #1
   11a60:	mov	r0, r5
   11a64:	mov	r2, #3
   11a68:	bl	10f78 <strncmp@plt>
   11a6c:	cmp	r0, #0
   11a70:	beq	11a7c <close@plt+0xae0>
   11a74:	mov	r4, r5
   11a78:	b	11a8c <close@plt+0xaf0>
   11a7c:	add	r4, r5, #3
   11a80:	movw	r0, #24872	; 0x6128
   11a84:	movt	r0, #2
   11a88:	str	r4, [r0]
   11a8c:	movw	r0, #24876	; 0x612c
   11a90:	movt	r0, #2
   11a94:	str	r4, [r0]
   11a98:	movw	r0, #24912	; 0x6150
   11a9c:	movt	r0, #2
   11aa0:	str	r4, [r0]
   11aa4:	pop	{r4, r5, fp, pc}
   11aa8:	movw	r0, #24888	; 0x6138
   11aac:	movt	r0, #2
   11ab0:	ldr	r3, [r0]
   11ab4:	movw	r0, #19650	; 0x4cc2
   11ab8:	movt	r0, #1
   11abc:	mov	r1, #55	; 0x37
   11ac0:	mov	r2, #1
   11ac4:	bl	10e10 <fwrite@plt>
   11ac8:	bl	10f90 <abort@plt>
   11acc:	push	{r4, r5, r6, sl, fp, lr}
   11ad0:	add	fp, sp, #16
   11ad4:	mov	r4, r0
   11ad8:	movw	r0, #24920	; 0x6158
   11adc:	movt	r0, #2
   11ae0:	cmp	r4, #0
   11ae4:	moveq	r4, r0
   11ae8:	bl	10ed0 <__errno_location@plt>
   11aec:	mov	r5, r0
   11af0:	ldr	r6, [r0]
   11af4:	mov	r0, r4
   11af8:	mov	r1, #48	; 0x30
   11afc:	bl	13e0c <close@plt+0x2e70>
   11b00:	str	r6, [r5]
   11b04:	pop	{r4, r5, r6, sl, fp, pc}
   11b08:	movw	r1, #24920	; 0x6158
   11b0c:	movt	r1, #2
   11b10:	cmp	r0, #0
   11b14:	movne	r1, r0
   11b18:	ldr	r0, [r1]
   11b1c:	bx	lr
   11b20:	movw	r2, #24920	; 0x6158
   11b24:	movt	r2, #2
   11b28:	cmp	r0, #0
   11b2c:	movne	r2, r0
   11b30:	str	r1, [r2]
   11b34:	bx	lr
   11b38:	movw	r3, #24920	; 0x6158
   11b3c:	movt	r3, #2
   11b40:	cmp	r0, #0
   11b44:	movne	r3, r0
   11b48:	ubfx	r0, r1, #5, #3
   11b4c:	add	r0, r3, r0, lsl #2
   11b50:	ldr	r3, [r0, #8]
   11b54:	and	r1, r1, #31
   11b58:	eor	r2, r2, r3, lsr r1
   11b5c:	and	r2, r2, #1
   11b60:	eor	r2, r3, r2, lsl r1
   11b64:	str	r2, [r0, #8]
   11b68:	mov	r0, #1
   11b6c:	and	r0, r0, r3, lsr r1
   11b70:	bx	lr
   11b74:	movw	r2, #24920	; 0x6158
   11b78:	movt	r2, #2
   11b7c:	cmp	r0, #0
   11b80:	movne	r2, r0
   11b84:	ldr	r0, [r2, #4]
   11b88:	str	r1, [r2, #4]
   11b8c:	bx	lr
   11b90:	movw	r3, #24920	; 0x6158
   11b94:	movt	r3, #2
   11b98:	cmp	r0, #0
   11b9c:	movne	r3, r0
   11ba0:	mov	r0, #10
   11ba4:	str	r0, [r3]
   11ba8:	cmp	r1, #0
   11bac:	cmpne	r2, #0
   11bb0:	bne	11bc0 <close@plt+0xc24>
   11bb4:	push	{fp, lr}
   11bb8:	mov	fp, sp
   11bbc:	bl	10f90 <abort@plt>
   11bc0:	str	r1, [r3, #40]	; 0x28
   11bc4:	str	r2, [r3, #44]	; 0x2c
   11bc8:	bx	lr
   11bcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11bd0:	add	fp, sp, #28
   11bd4:	sub	sp, sp, #20
   11bd8:	mov	r8, r3
   11bdc:	mov	r9, r2
   11be0:	mov	sl, r1
   11be4:	mov	r7, r0
   11be8:	ldr	r0, [fp, #8]
   11bec:	movw	r5, #24920	; 0x6158
   11bf0:	movt	r5, #2
   11bf4:	cmp	r0, #0
   11bf8:	movne	r5, r0
   11bfc:	bl	10ed0 <__errno_location@plt>
   11c00:	mov	r4, r0
   11c04:	ldm	r5, {r0, r1}
   11c08:	ldr	r2, [r5, #40]	; 0x28
   11c0c:	ldr	r3, [r5, #44]	; 0x2c
   11c10:	ldr	r6, [r4]
   11c14:	add	r5, r5, #8
   11c18:	stm	sp, {r0, r1, r5}
   11c1c:	str	r2, [sp, #12]
   11c20:	str	r3, [sp, #16]
   11c24:	mov	r0, r7
   11c28:	mov	r1, sl
   11c2c:	mov	r2, r9
   11c30:	mov	r3, r8
   11c34:	bl	11c44 <close@plt+0xca8>
   11c38:	str	r6, [r4]
   11c3c:	sub	sp, fp, #28
   11c40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c48:	add	fp, sp, #28
   11c4c:	sub	sp, sp, #156	; 0x9c
   11c50:	mov	r9, r3
   11c54:	str	r2, [fp, #-84]	; 0xffffffac
   11c58:	mov	r6, r1
   11c5c:	mov	r7, r0
   11c60:	ldr	r0, [fp, #12]
   11c64:	and	r1, r0, #4
   11c68:	str	r1, [sp, #32]
   11c6c:	and	r1, r0, #1
   11c70:	str	r1, [sp, #36]	; 0x24
   11c74:	ubfx	sl, r0, #1, #1
   11c78:	bl	10e28 <__ctype_get_mb_cur_max@plt>
   11c7c:	str	r0, [sp, #40]	; 0x28
   11c80:	ldr	r0, [fp, #24]
   11c84:	str	r0, [sp, #76]	; 0x4c
   11c88:	ldr	r0, [fp, #20]
   11c8c:	str	r0, [sp, #68]	; 0x44
   11c90:	ldr	r0, [fp, #8]
   11c94:	str	r0, [fp, #-60]	; 0xffffffc4
   11c98:	mov	r0, #0
   11c9c:	str	r0, [sp, #72]	; 0x48
   11ca0:	mov	r0, #0
   11ca4:	str	r0, [sp, #92]	; 0x5c
   11ca8:	mov	r0, #0
   11cac:	str	r0, [fp, #-72]	; 0xffffffb8
   11cb0:	mov	r0, #0
   11cb4:	mov	r1, #0
   11cb8:	str	r1, [fp, #-56]	; 0xffffffc8
   11cbc:	mov	r1, #0
   11cc0:	str	r1, [sp, #56]	; 0x38
   11cc4:	mov	r5, #1
   11cc8:	str	r7, [sp, #80]	; 0x50
   11ccc:	mov	r4, r6
   11cd0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11cd4:	cmp	r6, #10
   11cd8:	bhi	12c40 <close@plt+0x1ca4>
   11cdc:	add	r1, pc, #20
   11ce0:	mov	r8, #0
   11ce4:	mov	r2, #1
   11ce8:	mov	r3, #0
   11cec:	ldr	ip, [fp, #-84]	; 0xffffffac
   11cf0:	mov	lr, r9
   11cf4:	ldr	pc, [r1, r6, lsl #2]
   11cf8:	ldrdeq	r1, [r1], -r0
   11cfc:	andeq	r1, r1, r0, lsl #28
   11d00:	andeq	r1, r1, r0, asr #27
   11d04:			; <UNDEFINED> instruction: 0x00011db8
   11d08:	strdeq	r1, [r1], -r4
   11d0c:	andeq	r1, r1, r4, asr lr
   11d10:	andeq	r1, r1, r0, ror #27
   11d14:			; <UNDEFINED> instruction: 0x00011eb0
   11d18:	andeq	r1, r1, r4, lsr #26
   11d1c:	andeq	r1, r1, r4, lsr #26
   11d20:	andeq	r1, r1, ip, asr #26
   11d24:	movw	r0, #19796	; 0x4d54
   11d28:	movt	r0, #1
   11d2c:	mov	r1, r6
   11d30:	bl	1324c <close@plt+0x22b0>
   11d34:	str	r0, [sp, #68]	; 0x44
   11d38:	movw	r0, #19798	; 0x4d56
   11d3c:	movt	r0, #1
   11d40:	mov	r1, r6
   11d44:	bl	1324c <close@plt+0x22b0>
   11d48:	str	r0, [sp, #76]	; 0x4c
   11d4c:	mov	r8, #0
   11d50:	tst	sl, #1
   11d54:	bne	11d8c <close@plt+0xdf0>
   11d58:	ldr	r0, [sp, #68]	; 0x44
   11d5c:	ldrb	r0, [r0]
   11d60:	cmp	r0, #0
   11d64:	beq	11d8c <close@plt+0xdf0>
   11d68:	ldr	r1, [sp, #68]	; 0x44
   11d6c:	add	r1, r1, #1
   11d70:	mov	r8, #0
   11d74:	cmp	r8, r4
   11d78:	strbcc	r0, [r7, r8]
   11d7c:	ldrb	r0, [r1, r8]
   11d80:	add	r8, r8, #1
   11d84:	cmp	r0, #0
   11d88:	bne	11d74 <close@plt+0xdd8>
   11d8c:	ldr	r6, [sp, #76]	; 0x4c
   11d90:	mov	r0, r6
   11d94:	bl	10ec4 <strlen@plt>
   11d98:	str	r0, [fp, #-72]	; 0xffffffb8
   11d9c:	str	r6, [sp, #92]	; 0x5c
   11da0:	mov	r2, #1
   11da4:	mov	r3, sl
   11da8:	ldr	ip, [fp, #-84]	; 0xffffffac
   11dac:	mov	lr, r9
   11db0:	ldr	r6, [fp, #-60]	; 0xffffffc4
   11db4:	b	11eb0 <close@plt+0xf14>
   11db8:	mov	r0, #1
   11dbc:	b	11e00 <close@plt+0xe64>
   11dc0:	tst	sl, #1
   11dc4:	bne	11e00 <close@plt+0xe64>
   11dc8:	mov	r2, r0
   11dcc:	b	11e28 <close@plt+0xe8c>
   11dd0:	mov	r6, #0
   11dd4:	mov	r8, #0
   11dd8:	mov	r2, r0
   11ddc:	b	11eac <close@plt+0xf10>
   11de0:	mov	r0, #1
   11de4:	str	r0, [fp, #-72]	; 0xffffffb8
   11de8:	mov	r8, #0
   11dec:	mov	r6, #5
   11df0:	b	11e6c <close@plt+0xed0>
   11df4:	mov	r2, #1
   11df8:	tst	sl, #1
   11dfc:	beq	11e28 <close@plt+0xe8c>
   11e00:	mov	r1, #1
   11e04:	str	r1, [fp, #-72]	; 0xffffffb8
   11e08:	mov	r8, #0
   11e0c:	mov	r6, #2
   11e10:	movw	r1, #19798	; 0x4d56
   11e14:	movt	r1, #1
   11e18:	str	r1, [sp, #92]	; 0x5c
   11e1c:	mov	r2, r0
   11e20:	mov	r3, #1
   11e24:	b	11eb0 <close@plt+0xf14>
   11e28:	mov	r8, #1
   11e2c:	mov	r6, #2
   11e30:	cmp	r4, #0
   11e34:	movne	r0, #39	; 0x27
   11e38:	strbne	r0, [r7]
   11e3c:	movw	r0, #19798	; 0x4d56
   11e40:	movt	r0, #1
   11e44:	str	r0, [sp, #92]	; 0x5c
   11e48:	mov	r0, #1
   11e4c:	str	r0, [fp, #-72]	; 0xffffffb8
   11e50:	b	11eac <close@plt+0xf10>
   11e54:	mov	r6, #5
   11e58:	tst	sl, #1
   11e5c:	beq	11e84 <close@plt+0xee8>
   11e60:	mov	r0, #1
   11e64:	str	r0, [fp, #-72]	; 0xffffffb8
   11e68:	mov	r8, #0
   11e6c:	movw	r0, #19794	; 0x4d52
   11e70:	movt	r0, #1
   11e74:	str	r0, [sp, #92]	; 0x5c
   11e78:	mov	r2, #1
   11e7c:	mov	r3, #1
   11e80:	b	11eb0 <close@plt+0xf14>
   11e84:	cmp	r4, #0
   11e88:	movne	r0, #34	; 0x22
   11e8c:	strbne	r0, [r7]
   11e90:	mov	r8, #1
   11e94:	movw	r0, #19794	; 0x4d52
   11e98:	movt	r0, #1
   11e9c:	str	r0, [sp, #92]	; 0x5c
   11ea0:	mov	r0, #1
   11ea4:	str	r0, [fp, #-72]	; 0xffffffb8
   11ea8:	mov	r2, #1
   11eac:	mov	r3, #0
   11eb0:	ldr	r0, [fp, #16]
   11eb4:	cmp	r0, #0
   11eb8:	movwne	r0, #1
   11ebc:	and	r0, r0, r3
   11ec0:	str	r0, [fp, #-88]	; 0xffffffa8
   11ec4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11ec8:	cmp	r0, #0
   11ecc:	movwne	r0, #1
   11ed0:	and	r1, r0, r3
   11ed4:	and	r1, r2, r1
   11ed8:	str	r1, [sp, #48]	; 0x30
   11edc:	str	r6, [fp, #-60]	; 0xffffffc4
   11ee0:	subs	r6, r6, #2
   11ee4:	clz	r1, r6
   11ee8:	lsr	r1, r1, #5
   11eec:	and	r1, r1, r3
   11ef0:	str	r1, [sp, #60]	; 0x3c
   11ef4:	str	r6, [fp, #-80]	; 0xffffffb0
   11ef8:	mov	r1, r6
   11efc:	movwne	r1, #1
   11f00:	str	r3, [fp, #-76]	; 0xffffffb4
   11f04:	eor	r3, r3, #1
   11f08:	str	r3, [sp, #88]	; 0x58
   11f0c:	orr	r3, r1, r3
   11f10:	str	r3, [sp, #64]	; 0x40
   11f14:	and	r1, r1, r2
   11f18:	str	r1, [fp, #-68]	; 0xffffffbc
   11f1c:	and	r0, r0, r1
   11f20:	str	r0, [fp, #-64]	; 0xffffffc0
   11f24:	str	r2, [sp, #84]	; 0x54
   11f28:	eor	r0, r2, #1
   11f2c:	str	r0, [sp, #52]	; 0x34
   11f30:	mov	r6, #0
   11f34:	cmn	lr, #1
   11f38:	beq	11f48 <close@plt+0xfac>
   11f3c:	cmp	r6, lr
   11f40:	bne	11f54 <close@plt+0xfb8>
   11f44:	b	12ac0 <close@plt+0x1b24>
   11f48:	ldrb	r0, [ip, r6]
   11f4c:	cmp	r0, #0
   11f50:	beq	12ac0 <close@plt+0x1b24>
   11f54:	str	r5, [fp, #-48]	; 0xffffffd0
   11f58:	mov	sl, #0
   11f5c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11f60:	cmp	r0, #0
   11f64:	beq	11f98 <close@plt+0xffc>
   11f68:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11f6c:	add	r5, r6, r0
   11f70:	cmp	r0, #2
   11f74:	bcc	11f90 <close@plt+0xff4>
   11f78:	cmn	lr, #1
   11f7c:	bne	11f90 <close@plt+0xff4>
   11f80:	mov	r0, ip
   11f84:	bl	10ec4 <strlen@plt>
   11f88:	ldr	ip, [fp, #-84]	; 0xffffffac
   11f8c:	mov	lr, r0
   11f90:	cmp	r5, lr
   11f94:	bls	11fa4 <close@plt+0x1008>
   11f98:	mov	r0, #0
   11f9c:	str	r0, [fp, #-52]	; 0xffffffcc
   11fa0:	b	11ff0 <close@plt+0x1054>
   11fa4:	mov	r5, r4
   11fa8:	mov	r4, lr
   11fac:	add	r0, ip, r6
   11fb0:	ldr	r1, [sp, #92]	; 0x5c
   11fb4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11fb8:	bl	10dc8 <memcmp@plt>
   11fbc:	cmp	r0, #0
   11fc0:	mov	r1, r0
   11fc4:	movwne	r1, #1
   11fc8:	ldr	r2, [sp, #88]	; 0x58
   11fcc:	orr	r1, r1, r2
   11fd0:	tst	r1, #1
   11fd4:	beq	12b84 <close@plt+0x1be8>
   11fd8:	clz	r0, r0
   11fdc:	lsr	r0, r0, #5
   11fe0:	str	r0, [fp, #-52]	; 0xffffffcc
   11fe4:	ldr	ip, [fp, #-84]	; 0xffffffac
   11fe8:	mov	lr, r4
   11fec:	mov	r4, r5
   11ff0:	ldrb	r5, [ip, r6]
   11ff4:	cmp	r5, #126	; 0x7e
   11ff8:	bhi	123b4 <close@plt+0x1418>
   11ffc:	mov	r9, #1
   12000:	mov	r2, #110	; 0x6e
   12004:	mov	r0, #97	; 0x61
   12008:	add	r3, pc, #4
   1200c:	mov	r1, #0
   12010:	ldr	pc, [r3, r5, lsl #2]
   12014:	andeq	r2, r1, ip, lsr #5
   12018:			; <UNDEFINED> instruction: 0x000123b4
   1201c:			; <UNDEFINED> instruction: 0x000123b4
   12020:			; <UNDEFINED> instruction: 0x000123b4
   12024:			; <UNDEFINED> instruction: 0x000123b4
   12028:			; <UNDEFINED> instruction: 0x000123b4
   1202c:			; <UNDEFINED> instruction: 0x000123b4
   12030:	andeq	r2, r1, r8, ror r4
   12034:	andeq	r2, r1, ip, lsl #5
   12038:	andeq	r2, r1, r4, lsl #5
   1203c:	muleq	r1, r8, r2
   12040:	andeq	r2, r1, ip, lsl r3
   12044:	andeq	r2, r1, ip, ror r2
   12048:	muleq	r1, r4, r2
   1204c:			; <UNDEFINED> instruction: 0x000123b4
   12050:			; <UNDEFINED> instruction: 0x000123b4
   12054:			; <UNDEFINED> instruction: 0x000123b4
   12058:			; <UNDEFINED> instruction: 0x000123b4
   1205c:			; <UNDEFINED> instruction: 0x000123b4
   12060:			; <UNDEFINED> instruction: 0x000123b4
   12064:			; <UNDEFINED> instruction: 0x000123b4
   12068:			; <UNDEFINED> instruction: 0x000123b4
   1206c:			; <UNDEFINED> instruction: 0x000123b4
   12070:			; <UNDEFINED> instruction: 0x000123b4
   12074:			; <UNDEFINED> instruction: 0x000123b4
   12078:			; <UNDEFINED> instruction: 0x000123b4
   1207c:			; <UNDEFINED> instruction: 0x000123b4
   12080:			; <UNDEFINED> instruction: 0x000123b4
   12084:			; <UNDEFINED> instruction: 0x000123b4
   12088:			; <UNDEFINED> instruction: 0x000123b4
   1208c:			; <UNDEFINED> instruction: 0x000123b4
   12090:			; <UNDEFINED> instruction: 0x000123b4
   12094:	andeq	r2, r1, r8, lsr #8
   12098:	andeq	r2, r1, ip, lsr #8
   1209c:	andeq	r2, r1, ip, lsr #8
   120a0:	andeq	r2, r1, r4, lsr #4
   120a4:	andeq	r2, r1, ip, lsr #8
   120a8:	andeq	r2, r1, r0, lsl r2
   120ac:	andeq	r2, r1, ip, lsr #8
   120b0:	andeq	r2, r1, r4, lsr #6
   120b4:	andeq	r2, r1, ip, lsr #8
   120b8:	andeq	r2, r1, ip, lsr #8
   120bc:	andeq	r2, r1, ip, lsr #8
   120c0:	andeq	r2, r1, r0, lsl r2
   120c4:	andeq	r2, r1, r0, lsl r2
   120c8:	andeq	r2, r1, r0, lsl r2
   120cc:	andeq	r2, r1, r0, lsl r2
   120d0:	andeq	r2, r1, r0, lsl r2
   120d4:	andeq	r2, r1, r0, lsl r2
   120d8:	andeq	r2, r1, r0, lsl r2
   120dc:	andeq	r2, r1, r0, lsl r2
   120e0:	andeq	r2, r1, r0, lsl r2
   120e4:	andeq	r2, r1, r0, lsl r2
   120e8:	andeq	r2, r1, r0, lsl r2
   120ec:	andeq	r2, r1, r0, lsl r2
   120f0:	andeq	r2, r1, r0, lsl r2
   120f4:	andeq	r2, r1, r0, lsl r2
   120f8:	andeq	r2, r1, r0, lsl r2
   120fc:	andeq	r2, r1, r0, lsl r2
   12100:	andeq	r2, r1, ip, lsr #8
   12104:	andeq	r2, r1, ip, lsr #8
   12108:	andeq	r2, r1, ip, lsr #8
   1210c:	andeq	r2, r1, ip, lsr #8
   12110:	andeq	r2, r1, ip, ror #5
   12114:			; <UNDEFINED> instruction: 0x000123b4
   12118:	andeq	r2, r1, r0, lsl r2
   1211c:	andeq	r2, r1, r0, lsl r2
   12120:	andeq	r2, r1, r0, lsl r2
   12124:	andeq	r2, r1, r0, lsl r2
   12128:	andeq	r2, r1, r0, lsl r2
   1212c:	andeq	r2, r1, r0, lsl r2
   12130:	andeq	r2, r1, r0, lsl r2
   12134:	andeq	r2, r1, r0, lsl r2
   12138:	andeq	r2, r1, r0, lsl r2
   1213c:	andeq	r2, r1, r0, lsl r2
   12140:	andeq	r2, r1, r0, lsl r2
   12144:	andeq	r2, r1, r0, lsl r2
   12148:	andeq	r2, r1, r0, lsl r2
   1214c:	andeq	r2, r1, r0, lsl r2
   12150:	andeq	r2, r1, r0, lsl r2
   12154:	andeq	r2, r1, r0, lsl r2
   12158:	andeq	r2, r1, r0, lsl r2
   1215c:	andeq	r2, r1, r0, lsl r2
   12160:	andeq	r2, r1, r0, lsl r2
   12164:	andeq	r2, r1, r0, lsl r2
   12168:	andeq	r2, r1, r0, lsl r2
   1216c:	andeq	r2, r1, r0, lsl r2
   12170:	andeq	r2, r1, r0, lsl r2
   12174:	andeq	r2, r1, r0, lsl r2
   12178:	andeq	r2, r1, r0, lsl r2
   1217c:	andeq	r2, r1, r0, lsl r2
   12180:	andeq	r2, r1, ip, lsr #8
   12184:	andeq	r2, r1, r8, asr r2
   12188:	andeq	r2, r1, r0, lsl r2
   1218c:	andeq	r2, r1, ip, lsr #8
   12190:	andeq	r2, r1, r0, lsl r2
   12194:	andeq	r2, r1, ip, lsr #8
   12198:	andeq	r2, r1, r0, lsl r2
   1219c:	andeq	r2, r1, r0, lsl r2
   121a0:	andeq	r2, r1, r0, lsl r2
   121a4:	andeq	r2, r1, r0, lsl r2
   121a8:	andeq	r2, r1, r0, lsl r2
   121ac:	andeq	r2, r1, r0, lsl r2
   121b0:	andeq	r2, r1, r0, lsl r2
   121b4:	andeq	r2, r1, r0, lsl r2
   121b8:	andeq	r2, r1, r0, lsl r2
   121bc:	andeq	r2, r1, r0, lsl r2
   121c0:	andeq	r2, r1, r0, lsl r2
   121c4:	andeq	r2, r1, r0, lsl r2
   121c8:	andeq	r2, r1, r0, lsl r2
   121cc:	andeq	r2, r1, r0, lsl r2
   121d0:	andeq	r2, r1, r0, lsl r2
   121d4:	andeq	r2, r1, r0, lsl r2
   121d8:	andeq	r2, r1, r0, lsl r2
   121dc:	andeq	r2, r1, r0, lsl r2
   121e0:	andeq	r2, r1, r0, lsl r2
   121e4:	andeq	r2, r1, r0, lsl r2
   121e8:	andeq	r2, r1, r0, lsl r2
   121ec:	andeq	r2, r1, r0, lsl r2
   121f0:	andeq	r2, r1, r0, lsl r2
   121f4:	andeq	r2, r1, r0, lsl r2
   121f8:	andeq	r2, r1, r0, lsl r2
   121fc:	andeq	r2, r1, r0, lsl r2
   12200:	andeq	r2, r1, r8, lsr r2
   12204:	andeq	r2, r1, ip, lsr #8
   12208:	andeq	r2, r1, r8, lsr r2
   1220c:	andeq	r2, r1, r4, lsr #4
   12210:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12214:	cmp	r0, #0
   12218:	beq	1248c <close@plt+0x14f0>
   1221c:	ldr	r0, [fp, #16]
   12220:	b	12490 <close@plt+0x14f4>
   12224:	mov	r9, #0
   12228:	cmp	r6, #0
   1222c:	beq	12428 <close@plt+0x148c>
   12230:	mov	sl, #0
   12234:	b	12210 <close@plt+0x1274>
   12238:	mov	r9, #0
   1223c:	cmn	lr, #1
   12240:	beq	1240c <close@plt+0x1470>
   12244:	cmp	r6, #0
   12248:	bne	12230 <close@plt+0x1294>
   1224c:	cmp	lr, #1
   12250:	beq	12428 <close@plt+0x148c>
   12254:	b	12230 <close@plt+0x1294>
   12258:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1225c:	cmp	r0, #2
   12260:	bne	12454 <close@plt+0x14b8>
   12264:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12268:	tst	r0, #1
   1226c:	bne	12b9c <close@plt+0x1c00>
   12270:	mov	sl, #0
   12274:	mov	r0, #92	; 0x5c
   12278:	b	12468 <close@plt+0x14cc>
   1227c:	mov	r0, #102	; 0x66
   12280:	b	12478 <close@plt+0x14dc>
   12284:	mov	r2, #116	; 0x74
   12288:	b	12298 <close@plt+0x12fc>
   1228c:	mov	r0, #98	; 0x62
   12290:	b	12478 <close@plt+0x14dc>
   12294:	mov	r2, #114	; 0x72
   12298:	ldr	r0, [sp, #64]	; 0x40
   1229c:	tst	r0, #1
   122a0:	mov	r0, r2
   122a4:	bne	12478 <close@plt+0x14dc>
   122a8:	b	12b9c <close@plt+0x1c00>
   122ac:	ldr	r0, [sp, #84]	; 0x54
   122b0:	tst	r0, #1
   122b4:	beq	12568 <close@plt+0x15cc>
   122b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   122bc:	tst	r0, #1
   122c0:	bne	12b9c <close@plt+0x1c00>
   122c4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   122c8:	cmp	r0, #2
   122cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   122d0:	movwne	r0, #1
   122d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   122d8:	orr	r0, r0, r2
   122dc:	tst	r0, #1
   122e0:	beq	1295c <close@plt+0x19c0>
   122e4:	mov	r0, r8
   122e8:	b	12990 <close@plt+0x19f4>
   122ec:	mov	sl, #0
   122f0:	mov	r5, #63	; 0x3f
   122f4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   122f8:	cmp	r0, #5
   122fc:	beq	1271c <close@plt+0x1780>
   12300:	cmp	r0, #2
   12304:	bne	127bc <close@plt+0x1820>
   12308:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1230c:	tst	r0, #1
   12310:	mov	r9, #0
   12314:	beq	12210 <close@plt+0x1274>
   12318:	b	12b9c <close@plt+0x1c00>
   1231c:	mov	r0, #118	; 0x76
   12320:	b	12478 <close@plt+0x14dc>
   12324:	mov	r5, #39	; 0x27
   12328:	mov	r0, #1
   1232c:	str	r0, [sp, #56]	; 0x38
   12330:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12334:	cmp	r0, #2
   12338:	bne	12588 <close@plt+0x15ec>
   1233c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12340:	tst	r0, #1
   12344:	bne	12b9c <close@plt+0x1c00>
   12348:	ldr	r2, [sp, #72]	; 0x48
   1234c:	cmp	r2, #0
   12350:	mov	r0, r2
   12354:	movwne	r0, #1
   12358:	clz	r1, r4
   1235c:	lsr	r1, r1, #5
   12360:	orrs	r0, r0, r1
   12364:	moveq	r2, r4
   12368:	str	r2, [sp, #72]	; 0x48
   1236c:	moveq	r4, r0
   12370:	cmp	r8, r4
   12374:	movcc	r0, #39	; 0x27
   12378:	strbcc	r0, [r7, r8]
   1237c:	add	r0, r8, #1
   12380:	cmp	r0, r4
   12384:	movcc	r1, #92	; 0x5c
   12388:	strbcc	r1, [r7, r0]
   1238c:	add	r0, r8, #2
   12390:	cmp	r0, r4
   12394:	movcc	r1, #39	; 0x27
   12398:	strbcc	r1, [r7, r0]
   1239c:	add	r8, r8, #3
   123a0:	mov	r0, #0
   123a4:	str	r0, [fp, #-56]	; 0xffffffc8
   123a8:	mov	sl, #0
   123ac:	mov	r9, #1
   123b0:	b	12210 <close@plt+0x1274>
   123b4:	str	r4, [sp, #24]
   123b8:	ldr	r0, [sp, #40]	; 0x28
   123bc:	cmp	r0, #1
   123c0:	bne	12590 <close@plt+0x15f4>
   123c4:	str	lr, [sp, #28]
   123c8:	bl	10eac <__ctype_b_loc@plt>
   123cc:	ldr	ip, [fp, #-84]	; 0xffffffac
   123d0:	ldr	r0, [r0]
   123d4:	add	r0, r0, r5, lsl #1
   123d8:	ldrb	r0, [r0, #1]
   123dc:	ubfx	r9, r0, #6, #1
   123e0:	mov	r1, #1
   123e4:	ldr	r4, [sp, #24]
   123e8:	ldr	r0, [sp, #52]	; 0x34
   123ec:	orr	r0, r9, r0
   123f0:	mov	r2, r1
   123f4:	cmp	r1, #1
   123f8:	bhi	127c4 <close@plt+0x1828>
   123fc:	tst	r0, #1
   12400:	beq	127c4 <close@plt+0x1828>
   12404:	ldr	lr, [sp, #28]
   12408:	b	12210 <close@plt+0x1274>
   1240c:	cmp	r6, #0
   12410:	ldrbeq	r0, [ip, #1]
   12414:	cmpeq	r0, #0
   12418:	beq	12428 <close@plt+0x148c>
   1241c:	mvn	lr, #0
   12420:	mov	sl, #0
   12424:	b	12210 <close@plt+0x1274>
   12428:	mov	r1, #1
   1242c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12430:	cmp	r0, #2
   12434:	bne	1244c <close@plt+0x14b0>
   12438:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1243c:	tst	r0, #1
   12440:	mov	r9, r1
   12444:	beq	12210 <close@plt+0x1274>
   12448:	b	12b9c <close@plt+0x1c00>
   1244c:	mov	r9, r1
   12450:	b	12210 <close@plt+0x1274>
   12454:	mov	sl, #0
   12458:	mov	r0, #92	; 0x5c
   1245c:	ldr	r1, [sp, #48]	; 0x30
   12460:	cmp	r1, #0
   12464:	beq	12478 <close@plt+0x14dc>
   12468:	mov	r9, #0
   1246c:	cmp	sl, #0
   12470:	beq	12a28 <close@plt+0x1a8c>
   12474:	b	12a64 <close@plt+0x1ac8>
   12478:	mov	r9, #0
   1247c:	ldr	r1, [sp, #84]	; 0x54
   12480:	tst	r1, #1
   12484:	mov	sl, #0
   12488:	bne	124c8 <close@plt+0x152c>
   1248c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12490:	cmp	r0, #0
   12494:	mov	r0, r5
   12498:	beq	124bc <close@plt+0x1520>
   1249c:	ubfx	r0, r5, #5, #3
   124a0:	ldr	r1, [fp, #16]
   124a4:	ldr	r0, [r1, r0, lsl #2]
   124a8:	and	r1, r5, #31
   124ac:	mov	r2, #1
   124b0:	tst	r0, r2, lsl r1
   124b4:	mov	r0, r5
   124b8:	bne	124c8 <close@plt+0x152c>
   124bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   124c0:	cmp	r1, #0
   124c4:	beq	12a20 <close@plt+0x1a84>
   124c8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   124cc:	tst	r1, #1
   124d0:	bne	12b9c <close@plt+0x1c00>
   124d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   124d8:	cmp	r1, #2
   124dc:	ldr	r1, [fp, #-80]	; 0xffffffb0
   124e0:	movwne	r1, #1
   124e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   124e8:	orr	r1, r1, r2
   124ec:	tst	r1, #1
   124f0:	beq	124fc <close@plt+0x1560>
   124f4:	ldr	r5, [fp, #-48]	; 0xffffffd0
   124f8:	b	12538 <close@plt+0x159c>
   124fc:	cmp	r8, r4
   12500:	movcc	r1, #39	; 0x27
   12504:	strbcc	r1, [r7, r8]
   12508:	add	r1, r8, #1
   1250c:	cmp	r1, r4
   12510:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12514:	movcc	r2, #36	; 0x24
   12518:	strbcc	r2, [r7, r1]
   1251c:	add	r1, r8, #2
   12520:	cmp	r1, r4
   12524:	movcc	r2, #39	; 0x27
   12528:	strbcc	r2, [r7, r1]
   1252c:	add	r8, r8, #3
   12530:	mov	r1, #1
   12534:	str	r1, [fp, #-56]	; 0xffffffc8
   12538:	cmp	r8, r4
   1253c:	movcc	r1, #92	; 0x5c
   12540:	strbcc	r1, [r7, r8]
   12544:	add	r8, r8, #1
   12548:	cmp	r8, r4
   1254c:	strbcc	r0, [r7, r8]
   12550:	and	r5, r5, r9
   12554:	add	r8, r8, #1
   12558:	add	r6, r6, #1
   1255c:	cmn	lr, #1
   12560:	bne	11f3c <close@plt+0xfa0>
   12564:	b	11f48 <close@plt+0xfac>
   12568:	mov	r9, #0
   1256c:	ldr	r0, [sp, #36]	; 0x24
   12570:	cmp	r0, #0
   12574:	mov	sl, #0
   12578:	mov	r5, #0
   1257c:	beq	1248c <close@plt+0x14f0>
   12580:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12584:	b	12558 <close@plt+0x15bc>
   12588:	mov	r9, #1
   1258c:	b	12210 <close@plt+0x1274>
   12590:	mov	r0, #0
   12594:	str	r0, [fp, #-36]	; 0xffffffdc
   12598:	str	r0, [fp, #-40]	; 0xffffffd8
   1259c:	cmn	lr, #1
   125a0:	bne	125b4 <close@plt+0x1618>
   125a4:	mov	r0, ip
   125a8:	bl	10ec4 <strlen@plt>
   125ac:	ldr	ip, [fp, #-84]	; 0xffffffac
   125b0:	mov	lr, r0
   125b4:	add	r0, ip, r6
   125b8:	str	r0, [sp, #20]
   125bc:	mov	r9, #1
   125c0:	mov	r7, #0
   125c4:	sub	r4, fp, #40	; 0x28
   125c8:	str	lr, [sp, #28]
   125cc:	str	r7, [sp, #44]	; 0x2c
   125d0:	add	r7, r7, r6
   125d4:	add	r1, ip, r7
   125d8:	sub	r2, lr, r7
   125dc:	sub	r0, fp, #44	; 0x2c
   125e0:	mov	r3, r4
   125e4:	bl	145ec <close@plt+0x3650>
   125e8:	cmp	r0, #0
   125ec:	beq	12aac <close@plt+0x1b10>
   125f0:	cmn	r0, #1
   125f4:	beq	12a6c <close@plt+0x1ad0>
   125f8:	cmn	r0, #2
   125fc:	ldr	lr, [sp, #28]
   12600:	beq	12a74 <close@plt+0x1ad8>
   12604:	cmp	r0, #2
   12608:	mov	r1, #0
   1260c:	movwcc	r1, #1
   12610:	ldr	r2, [sp, #60]	; 0x3c
   12614:	eor	r2, r2, #1
   12618:	orrs	r1, r2, r1
   1261c:	ldr	r4, [sp, #24]
   12620:	bne	126e0 <close@plt+0x1744>
   12624:	ldr	r1, [sp, #44]	; 0x2c
   12628:	ldr	r2, [sp, #20]
   1262c:	add	r1, r2, r1
   12630:	mov	r2, #1
   12634:	ldrb	r3, [r1, r2]
   12638:	sub	r3, r3, #91	; 0x5b
   1263c:	cmp	r3, #33	; 0x21
   12640:	bhi	126d4 <close@plt+0x1738>
   12644:	add	r7, pc, #0
   12648:	ldr	pc, [r7, r3, lsl #2]
   1264c:	muleq	r1, r4, fp
   12650:	muleq	r1, r4, fp
   12654:	ldrdeq	r2, [r1], -r4
   12658:	muleq	r1, r4, fp
   1265c:	ldrdeq	r2, [r1], -r4
   12660:	muleq	r1, r4, fp
   12664:	ldrdeq	r2, [r1], -r4
   12668:	ldrdeq	r2, [r1], -r4
   1266c:	ldrdeq	r2, [r1], -r4
   12670:	ldrdeq	r2, [r1], -r4
   12674:	ldrdeq	r2, [r1], -r4
   12678:	ldrdeq	r2, [r1], -r4
   1267c:	ldrdeq	r2, [r1], -r4
   12680:	ldrdeq	r2, [r1], -r4
   12684:	ldrdeq	r2, [r1], -r4
   12688:	ldrdeq	r2, [r1], -r4
   1268c:	ldrdeq	r2, [r1], -r4
   12690:	ldrdeq	r2, [r1], -r4
   12694:	ldrdeq	r2, [r1], -r4
   12698:	ldrdeq	r2, [r1], -r4
   1269c:	ldrdeq	r2, [r1], -r4
   126a0:	ldrdeq	r2, [r1], -r4
   126a4:	ldrdeq	r2, [r1], -r4
   126a8:	ldrdeq	r2, [r1], -r4
   126ac:	ldrdeq	r2, [r1], -r4
   126b0:	ldrdeq	r2, [r1], -r4
   126b4:	ldrdeq	r2, [r1], -r4
   126b8:	ldrdeq	r2, [r1], -r4
   126bc:	ldrdeq	r2, [r1], -r4
   126c0:	ldrdeq	r2, [r1], -r4
   126c4:	ldrdeq	r2, [r1], -r4
   126c8:	ldrdeq	r2, [r1], -r4
   126cc:	ldrdeq	r2, [r1], -r4
   126d0:	muleq	r1, r4, fp
   126d4:	add	r2, r2, #1
   126d8:	cmp	r2, r0
   126dc:	bcc	12634 <close@plt+0x1698>
   126e0:	ldr	r7, [sp, #44]	; 0x2c
   126e4:	add	r7, r0, r7
   126e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   126ec:	bl	10e04 <iswprint@plt>
   126f0:	cmp	r0, #0
   126f4:	movwne	r0, #1
   126f8:	and	r9, r9, r0
   126fc:	sub	r4, fp, #40	; 0x28
   12700:	mov	r0, r4
   12704:	bl	10dbc <mbsinit@plt>
   12708:	ldr	lr, [sp, #28]
   1270c:	cmp	r0, #0
   12710:	ldr	ip, [fp, #-84]	; 0xffffffac
   12714:	beq	125cc <close@plt+0x1630>
   12718:	b	12ab4 <close@plt+0x1b18>
   1271c:	ldr	r0, [sp, #32]
   12720:	cmp	r0, #0
   12724:	beq	127bc <close@plt+0x1820>
   12728:	add	r0, r6, #2
   1272c:	cmp	r0, lr
   12730:	bcs	127bc <close@plt+0x1820>
   12734:	add	r1, ip, r6
   12738:	ldrb	r1, [r1, #1]
   1273c:	cmp	r1, #63	; 0x3f
   12740:	bne	127bc <close@plt+0x1820>
   12744:	ldrb	r9, [ip, r0]
   12748:	sub	r2, r9, #33	; 0x21
   1274c:	cmp	r2, #29
   12750:	bhi	127bc <close@plt+0x1820>
   12754:	mov	r3, #1
   12758:	movw	r1, #20929	; 0x51c1
   1275c:	movt	r1, #14336	; 0x3800
   12760:	tst	r1, r3, lsl r2
   12764:	beq	127bc <close@plt+0x1820>
   12768:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1276c:	tst	r1, #1
   12770:	bne	12b9c <close@plt+0x1c00>
   12774:	cmp	r8, r4
   12778:	movcc	r1, #63	; 0x3f
   1277c:	strbcc	r1, [r7, r8]
   12780:	add	r2, r8, #1
   12784:	cmp	r2, r4
   12788:	movcc	r1, #34	; 0x22
   1278c:	strbcc	r1, [r7, r2]
   12790:	add	r2, r8, #2
   12794:	cmp	r2, r4
   12798:	movcc	r1, #34	; 0x22
   1279c:	strbcc	r1, [r7, r2]
   127a0:	add	r2, r8, #3
   127a4:	cmp	r2, r4
   127a8:	movcc	r1, #63	; 0x3f
   127ac:	strbcc	r1, [r7, r2]
   127b0:	add	r8, r8, #4
   127b4:	mov	r6, r0
   127b8:	mov	r5, r9
   127bc:	mov	r9, #0
   127c0:	b	12210 <close@plt+0x1274>
   127c4:	add	r1, r2, r6
   127c8:	str	r1, [sp, #44]	; 0x2c
   127cc:	add	r1, r6, #1
   127d0:	mov	r3, #0
   127d4:	ldr	lr, [sp, #28]
   127d8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   127dc:	tst	r0, #1
   127e0:	bne	128d4 <close@plt+0x1938>
   127e4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   127e8:	tst	r2, #1
   127ec:	bne	12b9c <close@plt+0x1c00>
   127f0:	cmp	r6, #2
   127f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   127f8:	movwne	r3, #1
   127fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12800:	orr	r3, r3, r2
   12804:	tst	r3, #1
   12808:	bne	12844 <close@plt+0x18a8>
   1280c:	cmp	r8, r4
   12810:	movcc	r2, #39	; 0x27
   12814:	strbcc	r2, [r7, r8]
   12818:	add	r3, r8, #1
   1281c:	cmp	r3, r4
   12820:	movcc	r2, #36	; 0x24
   12824:	strbcc	r2, [r7, r3]
   12828:	add	r3, r8, #2
   1282c:	cmp	r3, r4
   12830:	movcc	r2, #39	; 0x27
   12834:	strbcc	r2, [r7, r3]
   12838:	add	r8, r8, #3
   1283c:	mov	r2, #1
   12840:	str	r2, [fp, #-56]	; 0xffffffc8
   12844:	cmp	r8, r4
   12848:	movcc	r2, #92	; 0x5c
   1284c:	strbcc	r2, [r7, r8]
   12850:	add	r3, r8, #1
   12854:	cmp	r3, r4
   12858:	bcs	12878 <close@plt+0x18dc>
   1285c:	and	r7, r5, #192	; 0xc0
   12860:	mov	r2, #48	; 0x30
   12864:	orr	r7, r2, r7, lsr #6
   12868:	ldr	r6, [sp, #80]	; 0x50
   1286c:	strb	r7, [r6, r3]
   12870:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12874:	ldr	r7, [sp, #80]	; 0x50
   12878:	add	r3, r8, #2
   1287c:	cmp	r3, r4
   12880:	bcs	128a0 <close@plt+0x1904>
   12884:	lsr	r7, r5, #3
   12888:	mov	r2, #6
   1288c:	bfi	r7, r2, #3, #29
   12890:	ldr	r6, [sp, #80]	; 0x50
   12894:	strb	r7, [r6, r3]
   12898:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1289c:	ldr	r7, [sp, #80]	; 0x50
   128a0:	mov	r2, #6
   128a4:	bfi	r5, r2, #3, #29
   128a8:	add	r8, r8, #3
   128ac:	mov	r3, #1
   128b0:	b	128f8 <close@plt+0x195c>
   128b4:	ldr	r7, [sp, #80]	; 0x50
   128b8:	cmp	r8, r4
   128bc:	strbcc	r5, [r7, r8]
   128c0:	ldrb	r5, [ip, r1]
   128c4:	add	r1, r1, #1
   128c8:	add	r8, r8, #1
   128cc:	tst	r0, #1
   128d0:	beq	127e4 <close@plt+0x1848>
   128d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   128d8:	tst	r2, #1
   128dc:	beq	128f0 <close@plt+0x1954>
   128e0:	cmp	r8, r4
   128e4:	movcc	r2, #92	; 0x5c
   128e8:	strbcc	r2, [r7, r8]
   128ec:	add	r8, r8, #1
   128f0:	mov	r2, #0
   128f4:	str	r2, [fp, #-52]	; 0xffffffcc
   128f8:	and	sl, r3, #1
   128fc:	ldr	r2, [sp, #44]	; 0x2c
   12900:	cmp	r2, r1
   12904:	bls	12a10 <close@plt+0x1a74>
   12908:	cmp	sl, #0
   1290c:	movwne	sl, #1
   12910:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12914:	mvn	r7, r2
   12918:	orr	r7, r7, sl
   1291c:	tst	r7, #1
   12920:	bne	128b4 <close@plt+0x1918>
   12924:	cmp	r8, r4
   12928:	ldrcc	r7, [sp, #80]	; 0x50
   1292c:	movcc	r2, #39	; 0x27
   12930:	strbcc	r2, [r7, r8]
   12934:	add	r7, r8, #1
   12938:	cmp	r7, r4
   1293c:	ldrcc	r6, [sp, #80]	; 0x50
   12940:	movcc	r2, #39	; 0x27
   12944:	strbcc	r2, [r6, r7]
   12948:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   1294c:	add	r8, r8, #2
   12950:	mov	r2, #0
   12954:	str	r2, [fp, #-56]	; 0xffffffc8
   12958:	b	128b4 <close@plt+0x1918>
   1295c:	cmp	r8, r4
   12960:	movcc	r0, #39	; 0x27
   12964:	strbcc	r0, [r7, r8]
   12968:	add	r0, r8, #1
   1296c:	cmp	r0, r4
   12970:	movcc	r1, #36	; 0x24
   12974:	strbcc	r1, [r7, r0]
   12978:	add	r0, r8, #2
   1297c:	cmp	r0, r4
   12980:	movcc	r1, #39	; 0x27
   12984:	strbcc	r1, [r7, r0]
   12988:	add	r0, r8, #3
   1298c:	mov	r2, #1
   12990:	cmp	r0, r4
   12994:	movcc	r1, #92	; 0x5c
   12998:	strbcc	r1, [r7, r0]
   1299c:	str	r2, [fp, #-56]	; 0xffffffc8
   129a0:	add	r8, r0, #1
   129a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   129a8:	cmp	r1, #2
   129ac:	beq	12a00 <close@plt+0x1a64>
   129b0:	add	r1, r6, #1
   129b4:	mov	r9, #0
   129b8:	mov	sl, #1
   129bc:	mov	r5, #48	; 0x30
   129c0:	cmp	r1, lr
   129c4:	bcs	12210 <close@plt+0x1274>
   129c8:	ldrb	r1, [ip, r1]
   129cc:	sub	r1, r1, #48	; 0x30
   129d0:	uxtb	r1, r1
   129d4:	cmp	r1, #9
   129d8:	bhi	12210 <close@plt+0x1274>
   129dc:	cmp	r8, r4
   129e0:	movcc	r1, #48	; 0x30
   129e4:	strbcc	r1, [r7, r8]
   129e8:	add	r1, r0, #2
   129ec:	cmp	r1, r4
   129f0:	movcc	r2, #48	; 0x30
   129f4:	strbcc	r2, [r7, r1]
   129f8:	add	r8, r0, #3
   129fc:	b	12210 <close@plt+0x1274>
   12a00:	mov	r0, #48	; 0x30
   12a04:	mov	sl, #1
   12a08:	mov	r9, #0
   12a0c:	b	124bc <close@plt+0x1520>
   12a10:	sub	r6, r1, #1
   12a14:	cmp	sl, #0
   12a18:	movwne	sl, #1
   12a1c:	mov	r0, r5
   12a20:	cmp	sl, #0
   12a24:	bne	12a64 <close@plt+0x1ac8>
   12a28:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12a2c:	tst	r1, #1
   12a30:	beq	12a64 <close@plt+0x1ac8>
   12a34:	cmp	r8, r4
   12a38:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12a3c:	movcc	r1, #39	; 0x27
   12a40:	strbcc	r1, [r7, r8]
   12a44:	add	r1, r8, #1
   12a48:	cmp	r1, r4
   12a4c:	movcc	r2, #39	; 0x27
   12a50:	strbcc	r2, [r7, r1]
   12a54:	add	r8, r8, #2
   12a58:	mov	r1, #0
   12a5c:	str	r1, [fp, #-56]	; 0xffffffc8
   12a60:	b	12548 <close@plt+0x15ac>
   12a64:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12a68:	b	12548 <close@plt+0x15ac>
   12a6c:	mov	r9, #0
   12a70:	b	12aac <close@plt+0x1b10>
   12a74:	mov	r9, #0
   12a78:	cmp	r7, lr
   12a7c:	bcs	12aac <close@plt+0x1b10>
   12a80:	ldr	ip, [fp, #-84]	; 0xffffffac
   12a84:	ldr	r7, [sp, #44]	; 0x2c
   12a88:	ldr	r0, [sp, #20]
   12a8c:	ldrb	r0, [r0, r7]
   12a90:	cmp	r0, #0
   12a94:	beq	12ab4 <close@plt+0x1b18>
   12a98:	add	r7, r7, #1
   12a9c:	add	r0, r6, r7
   12aa0:	cmp	r0, lr
   12aa4:	bcc	12a88 <close@plt+0x1aec>
   12aa8:	b	12ab4 <close@plt+0x1b18>
   12aac:	ldr	ip, [fp, #-84]	; 0xffffffac
   12ab0:	ldr	r7, [sp, #44]	; 0x2c
   12ab4:	mov	r1, r7
   12ab8:	ldr	r7, [sp, #80]	; 0x50
   12abc:	b	123e4 <close@plt+0x1448>
   12ac0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12ac4:	eor	r0, r1, #2
   12ac8:	orr	r0, r0, r8
   12acc:	clz	r0, r0
   12ad0:	lsr	r0, r0, #5
   12ad4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12ad8:	tst	r2, r0
   12adc:	bne	12b9c <close@plt+0x1c00>
   12ae0:	cmp	r1, #2
   12ae4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12ae8:	movwne	r0, #1
   12aec:	orr	r0, r2, r0
   12af0:	tst	r0, #1
   12af4:	ldreq	r0, [sp, #56]	; 0x38
   12af8:	eoreq	r0, r0, #1
   12afc:	tsteq	r0, #1
   12b00:	bne	12b34 <close@plt+0x1b98>
   12b04:	mov	r9, lr
   12b08:	tst	r5, #1
   12b0c:	bne	12c04 <close@plt+0x1c68>
   12b10:	ldr	r0, [sp, #72]	; 0x48
   12b14:	cmp	r0, #0
   12b18:	beq	12b34 <close@plt+0x1b98>
   12b1c:	mov	r5, #0
   12b20:	cmp	r4, #0
   12b24:	ldr	r0, [sp, #84]	; 0x54
   12b28:	mov	sl, r2
   12b2c:	ldr	r6, [sp, #72]	; 0x48
   12b30:	beq	11ccc <close@plt+0xd30>
   12b34:	ldr	r1, [sp, #92]	; 0x5c
   12b38:	clz	r0, r1
   12b3c:	lsr	r0, r0, #5
   12b40:	orr	r0, r0, r2
   12b44:	tst	r0, #1
   12b48:	bne	12b74 <close@plt+0x1bd8>
   12b4c:	ldrb	r0, [r1]
   12b50:	cmp	r0, #0
   12b54:	beq	12b74 <close@plt+0x1bd8>
   12b58:	add	r1, r1, #1
   12b5c:	cmp	r8, r4
   12b60:	strbcc	r0, [r7, r8]
   12b64:	add	r8, r8, #1
   12b68:	ldrb	r0, [r1], #1
   12b6c:	cmp	r0, #0
   12b70:	bne	12b5c <close@plt+0x1bc0>
   12b74:	cmp	r8, r4
   12b78:	movcc	r0, #0
   12b7c:	strbcc	r0, [r7, r8]
   12b80:	b	12bf8 <close@plt+0x1c5c>
   12b84:	ldr	ip, [fp, #-84]	; 0xffffffac
   12b88:	mov	lr, r4
   12b8c:	mov	r4, r5
   12b90:	b	12b9c <close@plt+0x1c00>
   12b94:	ldr	r7, [sp, #80]	; 0x50
   12b98:	ldr	ip, [fp, #-84]	; 0xffffffac
   12b9c:	mov	r0, #0
   12ba0:	ldr	r1, [fp, #12]
   12ba4:	bic	r1, r1, #2
   12ba8:	ldr	r2, [sp, #84]	; 0x54
   12bac:	tst	r2, #1
   12bb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12bb4:	mov	r2, r3
   12bb8:	movwne	r2, #4
   12bbc:	cmp	r3, #2
   12bc0:	movne	r2, r3
   12bc4:	str	r2, [sp]
   12bc8:	str	r1, [sp, #4]
   12bcc:	str	r0, [sp, #8]
   12bd0:	ldr	r0, [sp, #68]	; 0x44
   12bd4:	str	r0, [sp, #12]
   12bd8:	ldr	r0, [sp, #76]	; 0x4c
   12bdc:	str	r0, [sp, #16]
   12be0:	mov	r0, r7
   12be4:	mov	r1, r4
   12be8:	mov	r2, ip
   12bec:	mov	r3, lr
   12bf0:	bl	11c44 <close@plt+0xca8>
   12bf4:	mov	r8, r0
   12bf8:	mov	r0, r8
   12bfc:	sub	sp, fp, #28
   12c00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c04:	mov	r0, #5
   12c08:	str	r0, [sp]
   12c0c:	ldr	r0, [fp, #12]
   12c10:	str	r0, [sp, #4]
   12c14:	ldr	r0, [fp, #16]
   12c18:	str	r0, [sp, #8]
   12c1c:	ldr	r0, [sp, #68]	; 0x44
   12c20:	str	r0, [sp, #12]
   12c24:	ldr	r0, [sp, #76]	; 0x4c
   12c28:	str	r0, [sp, #16]
   12c2c:	mov	r0, r7
   12c30:	ldr	r1, [sp, #72]	; 0x48
   12c34:	ldr	r2, [fp, #-84]	; 0xffffffac
   12c38:	mov	r3, r9
   12c3c:	b	12bf0 <close@plt+0x1c54>
   12c40:	bl	10f90 <abort@plt>
   12c44:	mov	r3, r2
   12c48:	mov	r2, #0
   12c4c:	b	12c50 <close@plt+0x1cb4>
   12c50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c54:	add	fp, sp, #28
   12c58:	sub	sp, sp, #36	; 0x24
   12c5c:	mov	r4, r2
   12c60:	str	r2, [sp, #24]
   12c64:	mov	r5, r1
   12c68:	mov	r6, r0
   12c6c:	str	r0, [sp, #20]
   12c70:	movw	r8, #24920	; 0x6158
   12c74:	movt	r8, #2
   12c78:	cmp	r3, #0
   12c7c:	movne	r8, r3
   12c80:	bl	10ed0 <__errno_location@plt>
   12c84:	str	r0, [sp, #28]
   12c88:	ldm	r8, {r3, r9}
   12c8c:	ldr	r1, [r8, #40]	; 0x28
   12c90:	ldr	r2, [r8, #44]	; 0x2c
   12c94:	ldr	r7, [r0]
   12c98:	str	r7, [sp, #32]
   12c9c:	add	sl, r8, #8
   12ca0:	cmp	r4, #0
   12ca4:	orreq	r9, r9, #1
   12ca8:	stm	sp, {r3, r9, sl}
   12cac:	str	r1, [sp, #12]
   12cb0:	str	r2, [sp, #16]
   12cb4:	mov	r0, #0
   12cb8:	mov	r1, #0
   12cbc:	mov	r2, r6
   12cc0:	mov	r3, r5
   12cc4:	mov	r7, r5
   12cc8:	bl	11c44 <close@plt+0xca8>
   12ccc:	mov	r5, r0
   12cd0:	add	r4, r0, #1
   12cd4:	mov	r0, r4
   12cd8:	bl	13b54 <close@plt+0x2bb8>
   12cdc:	mov	r6, r0
   12ce0:	ldr	r0, [r8]
   12ce4:	ldr	r1, [r8, #40]	; 0x28
   12ce8:	ldr	r2, [r8, #44]	; 0x2c
   12cec:	stm	sp, {r0, r9, sl}
   12cf0:	str	r1, [sp, #12]
   12cf4:	str	r2, [sp, #16]
   12cf8:	mov	r0, r6
   12cfc:	mov	r1, r4
   12d00:	ldr	r2, [sp, #20]
   12d04:	mov	r3, r7
   12d08:	bl	11c44 <close@plt+0xca8>
   12d0c:	ldr	r0, [sp, #24]
   12d10:	ldr	r1, [sp, #32]
   12d14:	ldr	r2, [sp, #28]
   12d18:	str	r1, [r2]
   12d1c:	cmp	r0, #0
   12d20:	strne	r5, [r0]
   12d24:	mov	r0, r6
   12d28:	sub	sp, fp, #28
   12d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d34:	add	fp, sp, #24
   12d38:	movw	r8, #24808	; 0x60e8
   12d3c:	movt	r8, #2
   12d40:	ldr	r4, [r8]
   12d44:	movw	r5, #24812	; 0x60ec
   12d48:	movt	r5, #2
   12d4c:	ldr	r0, [r5]
   12d50:	cmp	r0, #2
   12d54:	blt	12d80 <close@plt+0x1de4>
   12d58:	add	r7, r4, #12
   12d5c:	mov	r6, #0
   12d60:	ldr	r0, [r7, r6, lsl #3]
   12d64:	bl	14498 <close@plt+0x34fc>
   12d68:	add	r0, r6, #1
   12d6c:	ldr	r1, [r5]
   12d70:	add	r2, r6, #2
   12d74:	cmp	r2, r1
   12d78:	mov	r6, r0
   12d7c:	blt	12d60 <close@plt+0x1dc4>
   12d80:	ldr	r0, [r4, #4]
   12d84:	movw	r7, #24968	; 0x6188
   12d88:	movt	r7, #2
   12d8c:	cmp	r0, r7
   12d90:	beq	12da8 <close@plt+0x1e0c>
   12d94:	bl	14498 <close@plt+0x34fc>
   12d98:	movw	r0, #24816	; 0x60f0
   12d9c:	movt	r0, #2
   12da0:	mov	r6, #256	; 0x100
   12da4:	strd	r6, [r0]
   12da8:	movw	r6, #24816	; 0x60f0
   12dac:	movt	r6, #2
   12db0:	cmp	r4, r6
   12db4:	beq	12dc4 <close@plt+0x1e28>
   12db8:	mov	r0, r4
   12dbc:	bl	14498 <close@plt+0x34fc>
   12dc0:	str	r6, [r8]
   12dc4:	mov	r0, #1
   12dc8:	str	r0, [r5]
   12dcc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12dd0:	movw	r3, #24920	; 0x6158
   12dd4:	movt	r3, #2
   12dd8:	mvn	r2, #0
   12ddc:	b	12de0 <close@plt+0x1e44>
   12de0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12de4:	add	fp, sp, #28
   12de8:	sub	sp, sp, #44	; 0x2c
   12dec:	mov	r7, r3
   12df0:	str	r2, [sp, #36]	; 0x24
   12df4:	str	r1, [sp, #32]
   12df8:	mov	r5, r0
   12dfc:	bl	10ed0 <__errno_location@plt>
   12e00:	cmp	r5, #0
   12e04:	blt	12f70 <close@plt+0x1fd4>
   12e08:	cmn	r5, #-2147483647	; 0x80000001
   12e0c:	beq	12f70 <close@plt+0x1fd4>
   12e10:	movw	r4, #24808	; 0x60e8
   12e14:	movt	r4, #2
   12e18:	ldr	r6, [r4]
   12e1c:	str	r0, [sp, #28]
   12e20:	ldr	r0, [r0]
   12e24:	str	r0, [sp, #24]
   12e28:	movw	r8, #24812	; 0x60ec
   12e2c:	movt	r8, #2
   12e30:	ldr	r1, [r8]
   12e34:	cmp	r1, r5
   12e38:	ble	12e44 <close@plt+0x1ea8>
   12e3c:	mov	sl, r6
   12e40:	b	12eac <close@plt+0x1f10>
   12e44:	str	r1, [fp, #-32]	; 0xffffffe0
   12e48:	mov	r0, #8
   12e4c:	str	r0, [sp]
   12e50:	movw	r9, #24816	; 0x60f0
   12e54:	movt	r9, #2
   12e58:	subs	r0, r6, r9
   12e5c:	movne	r0, r6
   12e60:	add	r2, r5, #1
   12e64:	sub	r2, r2, r1
   12e68:	sub	r1, fp, #32
   12e6c:	mvn	r3, #-2147483648	; 0x80000000
   12e70:	bl	13c3c <close@plt+0x2ca0>
   12e74:	mov	sl, r0
   12e78:	str	r0, [r4]
   12e7c:	cmp	r6, r9
   12e80:	ldrdeq	r0, [r9]
   12e84:	stmeq	sl, {r0, r1}
   12e88:	ldr	r1, [r8]
   12e8c:	add	r0, sl, r1, lsl #3
   12e90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12e94:	sub	r1, r2, r1
   12e98:	lsl	r2, r1, #3
   12e9c:	mov	r1, #0
   12ea0:	bl	10ee8 <memset@plt>
   12ea4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ea8:	str	r0, [r8]
   12eac:	mov	r9, sl
   12eb0:	ldr	r6, [r9, r5, lsl #3]!
   12eb4:	ldr	r4, [r9, #4]!
   12eb8:	ldm	r7, {r0, r1}
   12ebc:	ldr	r2, [r7, #40]	; 0x28
   12ec0:	ldr	r3, [r7, #44]	; 0x2c
   12ec4:	orr	r8, r1, #1
   12ec8:	add	r1, r7, #8
   12ecc:	stm	sp, {r0, r8}
   12ed0:	str	r1, [sp, #20]
   12ed4:	add	r0, sp, #8
   12ed8:	stm	r0, {r1, r2, r3}
   12edc:	mov	r0, r4
   12ee0:	mov	r1, r6
   12ee4:	ldr	r2, [sp, #32]
   12ee8:	ldr	r3, [sp, #36]	; 0x24
   12eec:	bl	11c44 <close@plt+0xca8>
   12ef0:	cmp	r6, r0
   12ef4:	bhi	12f58 <close@plt+0x1fbc>
   12ef8:	add	r6, r0, #1
   12efc:	str	r6, [sl, r5, lsl #3]
   12f00:	movw	r0, #24968	; 0x6188
   12f04:	movt	r0, #2
   12f08:	cmp	r4, r0
   12f0c:	beq	12f18 <close@plt+0x1f7c>
   12f10:	mov	r0, r4
   12f14:	bl	14498 <close@plt+0x34fc>
   12f18:	mov	r0, r6
   12f1c:	bl	13b54 <close@plt+0x2bb8>
   12f20:	mov	r4, r0
   12f24:	str	r0, [r9]
   12f28:	ldr	r0, [r7]
   12f2c:	ldr	r1, [r7, #40]	; 0x28
   12f30:	ldr	r2, [r7, #44]	; 0x2c
   12f34:	stm	sp, {r0, r8}
   12f38:	ldr	r0, [sp, #20]
   12f3c:	add	r3, sp, #8
   12f40:	stm	r3, {r0, r1, r2}
   12f44:	mov	r0, r4
   12f48:	mov	r1, r6
   12f4c:	ldr	r2, [sp, #32]
   12f50:	ldr	r3, [sp, #36]	; 0x24
   12f54:	bl	11c44 <close@plt+0xca8>
   12f58:	ldr	r0, [sp, #28]
   12f5c:	ldr	r1, [sp, #24]
   12f60:	str	r1, [r0]
   12f64:	mov	r0, r4
   12f68:	sub	sp, fp, #28
   12f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f70:	bl	10f90 <abort@plt>
   12f74:	movw	r3, #24920	; 0x6158
   12f78:	movt	r3, #2
   12f7c:	b	12de0 <close@plt+0x1e44>
   12f80:	mov	r1, r0
   12f84:	mov	r0, #0
   12f88:	b	12dd0 <close@plt+0x1e34>
   12f8c:	mov	r2, r1
   12f90:	mov	r1, r0
   12f94:	mov	r0, #0
   12f98:	b	12f74 <close@plt+0x1fd8>
   12f9c:	push	{r4, r5, r6, sl, fp, lr}
   12fa0:	add	fp, sp, #16
   12fa4:	sub	sp, sp, #48	; 0x30
   12fa8:	mov	r4, r2
   12fac:	mov	r5, r0
   12fb0:	mov	r6, sp
   12fb4:	mov	r0, r6
   12fb8:	bl	12fd8 <close@plt+0x203c>
   12fbc:	mov	r0, r5
   12fc0:	mov	r1, r4
   12fc4:	mvn	r2, #0
   12fc8:	mov	r3, r6
   12fcc:	bl	12de0 <close@plt+0x1e44>
   12fd0:	sub	sp, fp, #16
   12fd4:	pop	{r4, r5, r6, sl, fp, pc}
   12fd8:	vmov.i32	q8, #0	; 0x00000000
   12fdc:	mov	r2, #32
   12fe0:	mov	r3, r0
   12fe4:	vst1.32	{d16-d17}, [r3], r2
   12fe8:	vst1.32	{d16-d17}, [r3]
   12fec:	add	r2, r0, #16
   12ff0:	vst1.32	{d16-d17}, [r2]
   12ff4:	cmp	r1, #10
   12ff8:	strne	r1, [r0]
   12ffc:	bxne	lr
   13000:	push	{fp, lr}
   13004:	mov	fp, sp
   13008:	bl	10f90 <abort@plt>
   1300c:	push	{r4, r5, r6, r7, fp, lr}
   13010:	add	fp, sp, #16
   13014:	sub	sp, sp, #48	; 0x30
   13018:	mov	r4, r3
   1301c:	mov	r5, r2
   13020:	mov	r6, r0
   13024:	mov	r7, sp
   13028:	mov	r0, r7
   1302c:	bl	12fd8 <close@plt+0x203c>
   13030:	mov	r0, r6
   13034:	mov	r1, r5
   13038:	mov	r2, r4
   1303c:	mov	r3, r7
   13040:	bl	12de0 <close@plt+0x1e44>
   13044:	sub	sp, fp, #16
   13048:	pop	{r4, r5, r6, r7, fp, pc}
   1304c:	mov	r2, r1
   13050:	mov	r1, r0
   13054:	mov	r0, #0
   13058:	b	12f9c <close@plt+0x2000>
   1305c:	mov	r3, r2
   13060:	mov	r2, r1
   13064:	mov	r1, r0
   13068:	mov	r0, #0
   1306c:	b	1300c <close@plt+0x2070>
   13070:	push	{r4, r5, r6, sl, fp, lr}
   13074:	add	fp, sp, #16
   13078:	sub	sp, sp, #48	; 0x30
   1307c:	mov	r4, r1
   13080:	mov	r5, r0
   13084:	mov	r0, #32
   13088:	movw	r1, #24920	; 0x6158
   1308c:	movt	r1, #2
   13090:	add	r3, r1, #16
   13094:	vld1.64	{d16-d17}, [r1], r0
   13098:	mov	r6, sp
   1309c:	vld1.64	{d18-d19}, [r3]
   130a0:	add	r3, r6, #16
   130a4:	vld1.64	{d20-d21}, [r1]
   130a8:	vst1.64	{d18-d19}, [r3]
   130ac:	mov	r1, r6
   130b0:	vst1.64	{d16-d17}, [r1], r0
   130b4:	vst1.64	{d20-d21}, [r1]
   130b8:	mov	r0, r6
   130bc:	mov	r1, r2
   130c0:	mov	r2, #1
   130c4:	bl	11b38 <close@plt+0xb9c>
   130c8:	mov	r0, #0
   130cc:	mov	r1, r5
   130d0:	mov	r2, r4
   130d4:	mov	r3, r6
   130d8:	bl	12de0 <close@plt+0x1e44>
   130dc:	sub	sp, fp, #16
   130e0:	pop	{r4, r5, r6, sl, fp, pc}
   130e4:	mov	r2, r1
   130e8:	mvn	r1, #0
   130ec:	b	13070 <close@plt+0x20d4>
   130f0:	mov	r1, #58	; 0x3a
   130f4:	b	130e4 <close@plt+0x2148>
   130f8:	mov	r2, #58	; 0x3a
   130fc:	b	13070 <close@plt+0x20d4>
   13100:	push	{r4, r5, r6, sl, fp, lr}
   13104:	add	fp, sp, #16
   13108:	sub	sp, sp, #48	; 0x30
   1310c:	mov	r4, r2
   13110:	mov	r5, r0
   13114:	mov	r6, sp
   13118:	mov	r0, r6
   1311c:	bl	12fd8 <close@plt+0x203c>
   13120:	mov	r0, r6
   13124:	mov	r1, #58	; 0x3a
   13128:	mov	r2, #1
   1312c:	bl	11b38 <close@plt+0xb9c>
   13130:	mov	r0, r5
   13134:	mov	r1, r4
   13138:	mvn	r2, #0
   1313c:	mov	r3, r6
   13140:	bl	12de0 <close@plt+0x1e44>
   13144:	sub	sp, fp, #16
   13148:	pop	{r4, r5, r6, sl, fp, pc}
   1314c:	push	{fp, lr}
   13150:	mov	fp, sp
   13154:	sub	sp, sp, #8
   13158:	mvn	ip, #0
   1315c:	str	ip, [sp]
   13160:	bl	1316c <close@plt+0x21d0>
   13164:	mov	sp, fp
   13168:	pop	{fp, pc}
   1316c:	push	{r4, r5, r6, r7, fp, lr}
   13170:	add	fp, sp, #16
   13174:	sub	sp, sp, #48	; 0x30
   13178:	mov	r7, r3
   1317c:	mov	r5, r0
   13180:	mov	r0, #32
   13184:	movw	r3, #24920	; 0x6158
   13188:	movt	r3, #2
   1318c:	add	r4, r3, #16
   13190:	vld1.64	{d16-d17}, [r3], r0
   13194:	mov	r6, sp
   13198:	vld1.64	{d18-d19}, [r4]
   1319c:	add	r4, r6, #16
   131a0:	vld1.64	{d20-d21}, [r3]
   131a4:	vst1.64	{d18-d19}, [r4]
   131a8:	mov	r3, r6
   131ac:	vst1.64	{d16-d17}, [r3], r0
   131b0:	vst1.64	{d20-d21}, [r3]
   131b4:	mov	r0, r6
   131b8:	bl	11b90 <close@plt+0xbf4>
   131bc:	ldr	r2, [fp, #8]
   131c0:	mov	r0, r5
   131c4:	mov	r1, r7
   131c8:	mov	r3, r6
   131cc:	bl	12de0 <close@plt+0x1e44>
   131d0:	sub	sp, fp, #16
   131d4:	pop	{r4, r5, r6, r7, fp, pc}
   131d8:	mov	r3, r2
   131dc:	mov	r2, r1
   131e0:	mov	r1, r0
   131e4:	mov	r0, #0
   131e8:	b	1314c <close@plt+0x21b0>
   131ec:	push	{fp, lr}
   131f0:	mov	fp, sp
   131f4:	sub	sp, sp, #8
   131f8:	mov	ip, r2
   131fc:	mov	r2, r1
   13200:	mov	r1, r0
   13204:	str	r3, [sp]
   13208:	mov	r0, #0
   1320c:	mov	r3, ip
   13210:	bl	1316c <close@plt+0x21d0>
   13214:	mov	sp, fp
   13218:	pop	{fp, pc}
   1321c:	movw	r3, #24824	; 0x60f8
   13220:	movt	r3, #2
   13224:	b	12de0 <close@plt+0x1e44>
   13228:	mov	r2, r1
   1322c:	mov	r1, r0
   13230:	mov	r0, #0
   13234:	b	1321c <close@plt+0x2280>
   13238:	mvn	r2, #0
   1323c:	b	1321c <close@plt+0x2280>
   13240:	mov	r1, r0
   13244:	mov	r0, #0
   13248:	b	13238 <close@plt+0x229c>
   1324c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13250:	add	fp, sp, #24
   13254:	sub	sp, sp, #16
   13258:	mov	r4, r1
   1325c:	mov	r5, r0
   13260:	mov	r7, #0
   13264:	mov	r0, #0
   13268:	mov	r1, r5
   1326c:	mov	r2, #5
   13270:	bl	10dd4 <dcgettext@plt>
   13274:	cmp	r0, r5
   13278:	beq	13284 <close@plt+0x22e8>
   1327c:	sub	sp, fp, #24
   13280:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13284:	bl	145b4 <close@plt+0x3618>
   13288:	mov	r6, r0
   1328c:	mov	r8, #56	; 0x38
   13290:	mov	r0, #45	; 0x2d
   13294:	stm	sp, {r0, r8}
   13298:	str	r7, [sp, #8]
   1329c:	str	r7, [sp, #12]
   132a0:	mov	r0, r6
   132a4:	mov	r1, #85	; 0x55
   132a8:	mov	r2, #84	; 0x54
   132ac:	mov	r3, #70	; 0x46
   132b0:	bl	13348 <close@plt+0x23ac>
   132b4:	cmp	r0, #0
   132b8:	beq	132d4 <close@plt+0x2338>
   132bc:	ldrb	r1, [r5]
   132c0:	movw	r2, #19800	; 0x4d58
   132c4:	movt	r2, #1
   132c8:	movw	r0, #19804	; 0x4d5c
   132cc:	movt	r0, #1
   132d0:	b	13318 <close@plt+0x237c>
   132d4:	mov	r0, #48	; 0x30
   132d8:	mov	r1, #51	; 0x33
   132dc:	str	r8, [sp]
   132e0:	stmib	sp, {r0, r1}
   132e4:	str	r0, [sp, #12]
   132e8:	mov	r0, r6
   132ec:	mov	r1, #71	; 0x47
   132f0:	mov	r2, #66	; 0x42
   132f4:	mov	r3, #49	; 0x31
   132f8:	bl	13348 <close@plt+0x23ac>
   132fc:	cmp	r0, #0
   13300:	beq	13328 <close@plt+0x238c>
   13304:	ldrb	r1, [r5]
   13308:	movw	r2, #19808	; 0x4d60
   1330c:	movt	r2, #1
   13310:	movw	r0, #19812	; 0x4d64
   13314:	movt	r0, #1
   13318:	cmp	r1, #96	; 0x60
   1331c:	moveq	r0, r2
   13320:	sub	sp, fp, #24
   13324:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13328:	movw	r1, #19794	; 0x4d52
   1332c:	movt	r1, #1
   13330:	movw	r0, #19798	; 0x4d56
   13334:	movt	r0, #1
   13338:	cmp	r4, #9
   1333c:	moveq	r0, r1
   13340:	sub	sp, fp, #24
   13344:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13348:	push	{r4, r5, r6, r7, fp, lr}
   1334c:	add	fp, sp, #16
   13350:	sub	sp, sp, #16
   13354:	mov	r4, r3
   13358:	mov	r5, r2
   1335c:	mov	r7, r1
   13360:	mov	r6, r0
   13364:	mov	r0, r1
   13368:	bl	14298 <close@plt+0x32fc>
   1336c:	ldrb	r1, [r6]
   13370:	cmp	r0, #0
   13374:	andne	r1, r1, #223	; 0xdf
   13378:	mov	r0, #0
   1337c:	cmp	r1, r7
   13380:	bne	133c0 <close@plt+0x2424>
   13384:	cmp	r7, #0
   13388:	moveq	r0, #1
   1338c:	subeq	sp, fp, #16
   13390:	popeq	{r4, r5, r6, r7, fp, pc}
   13394:	ldr	r0, [fp, #20]
   13398:	ldr	r1, [fp, #16]
   1339c:	ldr	r2, [fp, #12]
   133a0:	ldr	r3, [fp, #8]
   133a4:	str	r2, [sp]
   133a8:	str	r1, [sp, #4]
   133ac:	str	r0, [sp, #8]
   133b0:	mov	r0, r6
   133b4:	mov	r1, r5
   133b8:	mov	r2, r4
   133bc:	bl	133c8 <close@plt+0x242c>
   133c0:	sub	sp, fp, #16
   133c4:	pop	{r4, r5, r6, r7, fp, pc}
   133c8:	push	{r4, r5, r6, r7, fp, lr}
   133cc:	add	fp, sp, #16
   133d0:	sub	sp, sp, #8
   133d4:	mov	r4, r3
   133d8:	mov	r5, r2
   133dc:	mov	r7, r1
   133e0:	mov	r6, r0
   133e4:	mov	r0, r1
   133e8:	bl	14298 <close@plt+0x32fc>
   133ec:	ldrb	r1, [r6, #1]
   133f0:	cmp	r0, #0
   133f4:	andne	r1, r1, #223	; 0xdf
   133f8:	mov	r0, #0
   133fc:	cmp	r1, r7
   13400:	bne	13438 <close@plt+0x249c>
   13404:	cmp	r7, #0
   13408:	moveq	r0, #1
   1340c:	subeq	sp, fp, #16
   13410:	popeq	{r4, r5, r6, r7, fp, pc}
   13414:	ldr	r0, [fp, #16]
   13418:	ldr	r1, [fp, #12]
   1341c:	ldr	r3, [fp, #8]
   13420:	str	r1, [sp]
   13424:	str	r0, [sp, #4]
   13428:	mov	r0, r6
   1342c:	mov	r1, r5
   13430:	mov	r2, r4
   13434:	bl	13440 <close@plt+0x24a4>
   13438:	sub	sp, fp, #16
   1343c:	pop	{r4, r5, r6, r7, fp, pc}
   13440:	push	{r4, r5, r6, r7, fp, lr}
   13444:	add	fp, sp, #16
   13448:	sub	sp, sp, #8
   1344c:	mov	r4, r3
   13450:	mov	r5, r2
   13454:	mov	r7, r1
   13458:	mov	r6, r0
   1345c:	mov	r0, r1
   13460:	bl	14298 <close@plt+0x32fc>
   13464:	ldrb	r1, [r6, #2]
   13468:	cmp	r0, #0
   1346c:	andne	r1, r1, #223	; 0xdf
   13470:	mov	r0, #0
   13474:	cmp	r1, r7
   13478:	bne	134a8 <close@plt+0x250c>
   1347c:	cmp	r7, #0
   13480:	moveq	r0, #1
   13484:	subeq	sp, fp, #16
   13488:	popeq	{r4, r5, r6, r7, fp, pc}
   1348c:	ldr	r0, [fp, #12]
   13490:	ldr	r3, [fp, #8]
   13494:	str	r0, [sp]
   13498:	mov	r0, r6
   1349c:	mov	r1, r5
   134a0:	mov	r2, r4
   134a4:	bl	134b0 <close@plt+0x2514>
   134a8:	sub	sp, fp, #16
   134ac:	pop	{r4, r5, r6, r7, fp, pc}
   134b0:	push	{r4, r5, r6, r7, fp, lr}
   134b4:	add	fp, sp, #16
   134b8:	mov	r4, r3
   134bc:	mov	r5, r2
   134c0:	mov	r7, r1
   134c4:	mov	r6, r0
   134c8:	mov	r0, r1
   134cc:	bl	14298 <close@plt+0x32fc>
   134d0:	ldrb	r1, [r6, #3]
   134d4:	ldr	r3, [fp, #8]
   134d8:	cmp	r0, #0
   134dc:	andne	r1, r1, #223	; 0xdf
   134e0:	mov	r0, #0
   134e4:	cmp	r1, r7
   134e8:	popne	{r4, r5, r6, r7, fp, pc}
   134ec:	cmp	r7, #0
   134f0:	beq	13508 <close@plt+0x256c>
   134f4:	mov	r0, r6
   134f8:	mov	r1, r5
   134fc:	mov	r2, r4
   13500:	pop	{r4, r5, r6, r7, fp, lr}
   13504:	b	13510 <close@plt+0x2574>
   13508:	mov	r0, #1
   1350c:	pop	{r4, r5, r6, r7, fp, pc}
   13510:	push	{r4, r5, r6, r7, fp, lr}
   13514:	add	fp, sp, #16
   13518:	mov	r4, r3
   1351c:	mov	r5, r2
   13520:	mov	r7, r1
   13524:	mov	r6, r0
   13528:	mov	r0, r1
   1352c:	bl	14298 <close@plt+0x32fc>
   13530:	ldrb	r1, [r6, #4]
   13534:	cmp	r0, #0
   13538:	andne	r1, r1, #223	; 0xdf
   1353c:	mov	r0, #0
   13540:	cmp	r1, r7
   13544:	popne	{r4, r5, r6, r7, fp, pc}
   13548:	cmp	r7, #0
   1354c:	beq	13564 <close@plt+0x25c8>
   13550:	mov	r0, r6
   13554:	mov	r1, r5
   13558:	mov	r2, r4
   1355c:	pop	{r4, r5, r6, r7, fp, lr}
   13560:	b	1356c <close@plt+0x25d0>
   13564:	mov	r0, #1
   13568:	pop	{r4, r5, r6, r7, fp, pc}
   1356c:	push	{r4, r5, r6, sl, fp, lr}
   13570:	add	fp, sp, #16
   13574:	mov	r4, r2
   13578:	mov	r6, r1
   1357c:	mov	r5, r0
   13580:	mov	r0, r1
   13584:	bl	14298 <close@plt+0x32fc>
   13588:	ldrb	r1, [r5, #5]
   1358c:	cmp	r0, #0
   13590:	andne	r1, r1, #223	; 0xdf
   13594:	mov	r0, #0
   13598:	cmp	r1, r6
   1359c:	popne	{r4, r5, r6, sl, fp, pc}
   135a0:	cmp	r6, #0
   135a4:	beq	135b8 <close@plt+0x261c>
   135a8:	mov	r0, r5
   135ac:	mov	r1, r4
   135b0:	pop	{r4, r5, r6, sl, fp, lr}
   135b4:	b	135c0 <close@plt+0x2624>
   135b8:	mov	r0, #1
   135bc:	pop	{r4, r5, r6, sl, fp, pc}
   135c0:	push	{r4, r5, fp, lr}
   135c4:	add	fp, sp, #8
   135c8:	mov	r5, r1
   135cc:	mov	r4, r0
   135d0:	mov	r0, r1
   135d4:	bl	14298 <close@plt+0x32fc>
   135d8:	ldrb	r1, [r4, #6]
   135dc:	cmp	r0, #0
   135e0:	andne	r1, r1, #223	; 0xdf
   135e4:	mov	r0, #0
   135e8:	cmp	r1, r5
   135ec:	popne	{r4, r5, fp, pc}
   135f0:	cmp	r5, #0
   135f4:	beq	13604 <close@plt+0x2668>
   135f8:	mov	r0, r4
   135fc:	pop	{r4, r5, fp, lr}
   13600:	b	1360c <close@plt+0x2670>
   13604:	mov	r0, #1
   13608:	pop	{r4, r5, fp, pc}
   1360c:	push	{r4, sl, fp, lr}
   13610:	add	fp, sp, #8
   13614:	mov	r4, r0
   13618:	mov	r0, #0
   1361c:	bl	14298 <close@plt+0x32fc>
   13620:	ldrb	r1, [r4, #7]
   13624:	cmp	r0, #0
   13628:	beq	13640 <close@plt+0x26a4>
   1362c:	tst	r1, #223	; 0xdf
   13630:	moveq	r0, #1
   13634:	popeq	{r4, sl, fp, pc}
   13638:	mov	r0, #0
   1363c:	pop	{r4, sl, fp, pc}
   13640:	cmp	r1, #0
   13644:	moveq	r0, #1
   13648:	popeq	{r4, sl, fp, pc}
   1364c:	mov	r0, #0
   13650:	pop	{r4, sl, fp, pc}
   13654:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13658:	add	fp, sp, #24
   1365c:	sub	sp, sp, #32
   13660:	mov	r4, r2
   13664:	mov	r8, r0
   13668:	ldr	r6, [fp, #12]
   1366c:	ldr	r7, [fp, #8]
   13670:	cmp	r1, #0
   13674:	beq	1369c <close@plt+0x2700>
   13678:	mov	r5, r1
   1367c:	str	r4, [sp]
   13680:	str	r3, [sp, #4]
   13684:	movw	r2, #19900	; 0x4dbc
   13688:	movt	r2, #1
   1368c:	mov	r0, r8
   13690:	mov	r1, #1
   13694:	mov	r3, r5
   13698:	b	136b4 <close@plt+0x2718>
   1369c:	str	r3, [sp]
   136a0:	movw	r2, #19912	; 0x4dc8
   136a4:	movt	r2, #1
   136a8:	mov	r0, r8
   136ac:	mov	r1, #1
   136b0:	mov	r3, r4
   136b4:	bl	10f0c <__fprintf_chk@plt>
   136b8:	movw	r1, #19919	; 0x4dcf
   136bc:	movt	r1, #1
   136c0:	mov	r0, #0
   136c4:	mov	r2, #5
   136c8:	bl	10dd4 <dcgettext@plt>
   136cc:	mov	r3, r0
   136d0:	movw	r0, #2022	; 0x7e6
   136d4:	str	r0, [sp]
   136d8:	movw	r2, #20637	; 0x509d
   136dc:	movt	r2, #1
   136e0:	mov	r0, r8
   136e4:	mov	r1, #1
   136e8:	bl	10f0c <__fprintf_chk@plt>
   136ec:	movw	r4, #18664	; 0x48e8
   136f0:	movt	r4, #1
   136f4:	mov	r0, r4
   136f8:	mov	r1, r8
   136fc:	bl	10d68 <fputs_unlocked@plt>
   13700:	movw	r1, #19923	; 0x4dd3
   13704:	movt	r1, #1
   13708:	mov	r0, #0
   1370c:	mov	r2, #5
   13710:	bl	10dd4 <dcgettext@plt>
   13714:	mov	r2, r0
   13718:	movw	r3, #20094	; 0x4e7e
   1371c:	movt	r3, #1
   13720:	mov	r0, r8
   13724:	mov	r1, #1
   13728:	bl	10f0c <__fprintf_chk@plt>
   1372c:	mov	r0, r4
   13730:	mov	r1, r8
   13734:	bl	10d68 <fputs_unlocked@plt>
   13738:	cmp	r6, #9
   1373c:	bhi	13778 <close@plt+0x27dc>
   13740:	add	r0, pc, #0
   13744:	ldr	pc, [r0, r6, lsl #2]
   13748:	andeq	r3, r1, r0, ror r7
   1374c:	andeq	r3, r1, r4, lsl #15
   13750:			; <UNDEFINED> instruction: 0x000137b4
   13754:	ldrdeq	r3, [r1], -ip
   13758:	andeq	r3, r1, r4, lsl #16
   1375c:	andeq	r3, r1, ip, lsr #16
   13760:	andeq	r3, r1, r4, asr r8
   13764:	andeq	r3, r1, ip, lsl #17
   13768:	andeq	r3, r1, ip, lsr #18
   1376c:	ldrdeq	r3, [r1], -r4
   13770:	sub	sp, fp, #24
   13774:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13778:	movw	r1, #20447	; 0x4fdf
   1377c:	movt	r1, #1
   13780:	b	138dc <close@plt+0x2940>
   13784:	movw	r1, #20128	; 0x4ea0
   13788:	movt	r1, #1
   1378c:	mov	r0, #0
   13790:	mov	r2, #5
   13794:	bl	10dd4 <dcgettext@plt>
   13798:	mov	r2, r0
   1379c:	ldr	r3, [r7]
   137a0:	mov	r0, r8
   137a4:	mov	r1, #1
   137a8:	sub	sp, fp, #24
   137ac:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   137b0:	b	10f0c <__fprintf_chk@plt>
   137b4:	movw	r1, #20144	; 0x4eb0
   137b8:	movt	r1, #1
   137bc:	mov	r0, #0
   137c0:	mov	r2, #5
   137c4:	bl	10dd4 <dcgettext@plt>
   137c8:	mov	r2, r0
   137cc:	ldr	r3, [r7]
   137d0:	ldr	r0, [r7, #4]
   137d4:	str	r0, [sp]
   137d8:	b	138c8 <close@plt+0x292c>
   137dc:	movw	r1, #20167	; 0x4ec7
   137e0:	movt	r1, #1
   137e4:	mov	r0, #0
   137e8:	mov	r2, #5
   137ec:	bl	10dd4 <dcgettext@plt>
   137f0:	mov	r2, r0
   137f4:	ldr	r3, [r7]
   137f8:	ldmib	r7, {r0, r1}
   137fc:	stm	sp, {r0, r1}
   13800:	b	138c8 <close@plt+0x292c>
   13804:	movw	r1, #20195	; 0x4ee3
   13808:	movt	r1, #1
   1380c:	mov	r0, #0
   13810:	mov	r2, #5
   13814:	bl	10dd4 <dcgettext@plt>
   13818:	mov	r2, r0
   1381c:	ldr	r3, [r7]
   13820:	ldmib	r7, {r0, r1, r7}
   13824:	stm	sp, {r0, r1, r7}
   13828:	b	138c8 <close@plt+0x292c>
   1382c:	movw	r1, #20227	; 0x4f03
   13830:	movt	r1, #1
   13834:	mov	r0, #0
   13838:	mov	r2, #5
   1383c:	bl	10dd4 <dcgettext@plt>
   13840:	mov	r2, r0
   13844:	ldr	r3, [r7]
   13848:	ldmib	r7, {r0, r1, r6, r7}
   1384c:	stm	sp, {r0, r1, r6, r7}
   13850:	b	138c8 <close@plt+0x292c>
   13854:	movw	r1, #20263	; 0x4f27
   13858:	movt	r1, #1
   1385c:	mov	r0, #0
   13860:	mov	r2, #5
   13864:	bl	10dd4 <dcgettext@plt>
   13868:	mov	r2, r0
   1386c:	ldr	r3, [r7]
   13870:	ldmib	r7, {r0, r1, r6}
   13874:	ldr	r5, [r7, #16]
   13878:	ldr	r7, [r7, #20]
   1387c:	stm	sp, {r0, r1, r6}
   13880:	str	r5, [sp, #12]
   13884:	str	r7, [sp, #16]
   13888:	b	138c8 <close@plt+0x292c>
   1388c:	movw	r1, #20303	; 0x4f4f
   13890:	movt	r1, #1
   13894:	mov	r0, #0
   13898:	mov	r2, #5
   1389c:	bl	10dd4 <dcgettext@plt>
   138a0:	mov	r2, r0
   138a4:	ldr	r3, [r7]
   138a8:	ldmib	r7, {r0, r1, r6}
   138ac:	ldr	r5, [r7, #16]
   138b0:	ldr	r4, [r7, #20]
   138b4:	ldr	r7, [r7, #24]
   138b8:	stm	sp, {r0, r1, r6}
   138bc:	str	r5, [sp, #12]
   138c0:	str	r4, [sp, #16]
   138c4:	str	r7, [sp, #20]
   138c8:	mov	r0, r8
   138cc:	mov	r1, #1
   138d0:	b	1397c <close@plt+0x29e0>
   138d4:	movw	r1, #20395	; 0x4fab
   138d8:	movt	r1, #1
   138dc:	mov	r0, #0
   138e0:	mov	r2, #5
   138e4:	bl	10dd4 <dcgettext@plt>
   138e8:	mov	ip, r0
   138ec:	ldr	r3, [r7]
   138f0:	ldr	r0, [r7, #4]
   138f4:	ldr	r1, [r7, #8]
   138f8:	ldr	r6, [r7, #12]
   138fc:	ldr	r5, [r7, #16]
   13900:	ldr	r4, [r7, #20]
   13904:	ldr	r2, [r7, #24]
   13908:	ldr	lr, [r7, #28]
   1390c:	ldr	r7, [r7, #32]
   13910:	stm	sp, {r0, r1, r6}
   13914:	str	r5, [sp, #12]
   13918:	str	r4, [sp, #16]
   1391c:	str	r2, [sp, #20]
   13920:	str	lr, [sp, #24]
   13924:	str	r7, [sp, #28]
   13928:	b	13970 <close@plt+0x29d4>
   1392c:	movw	r1, #20347	; 0x4f7b
   13930:	movt	r1, #1
   13934:	mov	r0, #0
   13938:	mov	r2, #5
   1393c:	bl	10dd4 <dcgettext@plt>
   13940:	mov	ip, r0
   13944:	ldr	r3, [r7]
   13948:	ldmib	r7, {r0, r1, r6}
   1394c:	ldr	r5, [r7, #16]
   13950:	ldr	r4, [r7, #20]
   13954:	ldr	r2, [r7, #24]
   13958:	ldr	r7, [r7, #28]
   1395c:	stm	sp, {r0, r1, r6}
   13960:	str	r5, [sp, #12]
   13964:	str	r4, [sp, #16]
   13968:	str	r2, [sp, #20]
   1396c:	str	r7, [sp, #24]
   13970:	mov	r0, r8
   13974:	mov	r1, #1
   13978:	mov	r2, ip
   1397c:	bl	10f0c <__fprintf_chk@plt>
   13980:	sub	sp, fp, #24
   13984:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13988:	push	{r4, sl, fp, lr}
   1398c:	add	fp, sp, #8
   13990:	sub	sp, sp, #8
   13994:	mov	lr, #0
   13998:	ldr	ip, [fp, #8]
   1399c:	ldr	r4, [ip, lr, lsl #2]
   139a0:	add	lr, lr, #1
   139a4:	cmp	r4, #0
   139a8:	bne	1399c <close@plt+0x2a00>
   139ac:	sub	r4, lr, #1
   139b0:	str	ip, [sp]
   139b4:	str	r4, [sp, #4]
   139b8:	bl	13654 <close@plt+0x26b8>
   139bc:	sub	sp, fp, #8
   139c0:	pop	{r4, sl, fp, pc}
   139c4:	push	{r4, r5, fp, lr}
   139c8:	add	fp, sp, #8
   139cc:	sub	sp, sp, #48	; 0x30
   139d0:	mov	ip, #0
   139d4:	ldr	r4, [fp, #8]
   139d8:	add	lr, sp, #8
   139dc:	ldr	r5, [r4]
   139e0:	str	r5, [lr, ip, lsl #2]
   139e4:	cmp	r5, #0
   139e8:	beq	139fc <close@plt+0x2a60>
   139ec:	add	ip, ip, #1
   139f0:	add	r4, r4, #4
   139f4:	cmp	ip, #10
   139f8:	bcc	139dc <close@plt+0x2a40>
   139fc:	str	lr, [sp]
   13a00:	str	ip, [sp, #4]
   13a04:	bl	13654 <close@plt+0x26b8>
   13a08:	sub	sp, fp, #8
   13a0c:	pop	{r4, r5, fp, pc}
   13a10:	push	{fp, lr}
   13a14:	mov	fp, sp
   13a18:	sub	sp, sp, #8
   13a1c:	add	ip, fp, #8
   13a20:	str	ip, [sp, #4]
   13a24:	str	ip, [sp]
   13a28:	bl	139c4 <close@plt+0x2a28>
   13a2c:	mov	sp, fp
   13a30:	pop	{fp, pc}
   13a34:	push	{fp, lr}
   13a38:	mov	fp, sp
   13a3c:	movw	r0, #24892	; 0x613c
   13a40:	movt	r0, #2
   13a44:	ldr	r1, [r0]
   13a48:	movw	r0, #18664	; 0x48e8
   13a4c:	movt	r0, #1
   13a50:	bl	10d68 <fputs_unlocked@plt>
   13a54:	movw	r1, #20507	; 0x501b
   13a58:	movt	r1, #1
   13a5c:	mov	r0, #0
   13a60:	mov	r2, #5
   13a64:	bl	10dd4 <dcgettext@plt>
   13a68:	mov	r1, r0
   13a6c:	movw	r2, #20527	; 0x502f
   13a70:	movt	r2, #1
   13a74:	mov	r0, #1
   13a78:	bl	10ef4 <__printf_chk@plt>
   13a7c:	movw	r1, #20549	; 0x5045
   13a80:	movt	r1, #1
   13a84:	mov	r0, #0
   13a88:	mov	r2, #5
   13a8c:	bl	10dd4 <dcgettext@plt>
   13a90:	mov	r1, r0
   13a94:	movw	r2, #18936	; 0x49f8
   13a98:	movt	r2, #1
   13a9c:	movw	r3, #19179	; 0x4aeb
   13aa0:	movt	r3, #1
   13aa4:	mov	r0, #1
   13aa8:	bl	10ef4 <__printf_chk@plt>
   13aac:	movw	r1, #20569	; 0x5059
   13ab0:	movt	r1, #1
   13ab4:	mov	r0, #0
   13ab8:	mov	r2, #5
   13abc:	bl	10dd4 <dcgettext@plt>
   13ac0:	mov	r1, r0
   13ac4:	movw	r2, #20608	; 0x5080
   13ac8:	movt	r2, #1
   13acc:	mov	r0, #1
   13ad0:	pop	{fp, lr}
   13ad4:	b	10ef4 <__printf_chk@plt>
   13ad8:	b	13adc <close@plt+0x2b40>
   13adc:	push	{r4, r5, r6, sl, fp, lr}
   13ae0:	add	fp, sp, #16
   13ae4:	mov	r4, r2
   13ae8:	mov	r5, r1
   13aec:	mov	r6, r0
   13af0:	bl	1464c <close@plt+0x36b0>
   13af4:	cmp	r0, #0
   13af8:	popne	{r4, r5, r6, sl, fp, pc}
   13afc:	cmp	r6, #0
   13b00:	beq	13b14 <close@plt+0x2b78>
   13b04:	cmp	r5, #0
   13b08:	cmpne	r4, #0
   13b0c:	bne	13b14 <close@plt+0x2b78>
   13b10:	pop	{r4, r5, r6, sl, fp, pc}
   13b14:	bl	13ec8 <close@plt+0x2f2c>
   13b18:	push	{fp, lr}
   13b1c:	mov	fp, sp
   13b20:	bl	13f60 <close@plt+0x2fc4>
   13b24:	bl	13b2c <close@plt+0x2b90>
   13b28:	pop	{fp, pc}
   13b2c:	cmp	r0, #0
   13b30:	bxne	lr
   13b34:	push	{fp, lr}
   13b38:	mov	fp, sp
   13b3c:	bl	13ec8 <close@plt+0x2f2c>
   13b40:	push	{fp, lr}
   13b44:	mov	fp, sp
   13b48:	bl	14580 <close@plt+0x35e4>
   13b4c:	bl	13b2c <close@plt+0x2b90>
   13b50:	pop	{fp, pc}
   13b54:	b	13b18 <close@plt+0x2b7c>
   13b58:	push	{r4, r5, fp, lr}
   13b5c:	add	fp, sp, #8
   13b60:	mov	r4, r1
   13b64:	mov	r5, r0
   13b68:	bl	13f90 <close@plt+0x2ff4>
   13b6c:	cmp	r0, #0
   13b70:	popne	{r4, r5, fp, pc}
   13b74:	cmp	r5, #0
   13b78:	beq	13b88 <close@plt+0x2bec>
   13b7c:	cmp	r4, #0
   13b80:	bne	13b88 <close@plt+0x2bec>
   13b84:	pop	{r4, r5, fp, pc}
   13b88:	bl	13ec8 <close@plt+0x2f2c>
   13b8c:	push	{fp, lr}
   13b90:	mov	fp, sp
   13b94:	bl	14584 <close@plt+0x35e8>
   13b98:	bl	13b2c <close@plt+0x2b90>
   13b9c:	pop	{fp, pc}
   13ba0:	push	{fp, lr}
   13ba4:	mov	fp, sp
   13ba8:	bl	14594 <close@plt+0x35f8>
   13bac:	bl	13b2c <close@plt+0x2b90>
   13bb0:	pop	{fp, pc}
   13bb4:	push	{fp, lr}
   13bb8:	mov	fp, sp
   13bbc:	mov	r2, r1
   13bc0:	mov	r1, r0
   13bc4:	mov	r0, #0
   13bc8:	bl	13adc <close@plt+0x2b40>
   13bcc:	pop	{fp, pc}
   13bd0:	mov	r2, r1
   13bd4:	mov	r1, r0
   13bd8:	mov	r0, #0
   13bdc:	b	13ba0 <close@plt+0x2c04>
   13be0:	mov	r2, #1
   13be4:	b	13be8 <close@plt+0x2c4c>
   13be8:	push	{r4, r5, fp, lr}
   13bec:	add	fp, sp, #8
   13bf0:	mov	r4, r1
   13bf4:	ldr	r5, [r1]
   13bf8:	cmp	r0, #0
   13bfc:	beq	13c14 <close@plt+0x2c78>
   13c00:	mov	r1, #1
   13c04:	add	r1, r1, r5, lsr #1
   13c08:	adds	r5, r5, r1
   13c0c:	bcc	13c2c <close@plt+0x2c90>
   13c10:	bl	13ec8 <close@plt+0x2f2c>
   13c14:	cmp	r5, #0
   13c18:	bne	13c2c <close@plt+0x2c90>
   13c1c:	mov	r1, #64	; 0x40
   13c20:	udiv	r5, r1, r2
   13c24:	cmp	r2, #64	; 0x40
   13c28:	addhi	r5, r5, #1
   13c2c:	mov	r1, r5
   13c30:	bl	13adc <close@plt+0x2b40>
   13c34:	str	r5, [r4]
   13c38:	pop	{r4, r5, fp, pc}
   13c3c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13c40:	add	fp, sp, #24
   13c44:	mov	r8, r1
   13c48:	ldr	r6, [r1]
   13c4c:	add	r1, r6, r6, asr #1
   13c50:	cmp	r1, r6
   13c54:	mvnvs	r1, #-2147483648	; 0x80000000
   13c58:	cmp	r1, r3
   13c5c:	mov	r5, r1
   13c60:	movgt	r5, r3
   13c64:	cmn	r3, #1
   13c68:	movle	r5, r1
   13c6c:	ldr	r4, [fp, #8]
   13c70:	cmn	r4, #1
   13c74:	ble	13c9c <close@plt+0x2d00>
   13c78:	cmp	r4, #0
   13c7c:	beq	13cf0 <close@plt+0x2d54>
   13c80:	cmn	r5, #1
   13c84:	ble	13cc4 <close@plt+0x2d28>
   13c88:	mvn	r7, #-2147483648	; 0x80000000
   13c8c:	udiv	r1, r7, r4
   13c90:	cmp	r1, r5
   13c94:	bge	13cf0 <close@plt+0x2d54>
   13c98:	b	13d00 <close@plt+0x2d64>
   13c9c:	cmn	r5, #1
   13ca0:	ble	13ce0 <close@plt+0x2d44>
   13ca4:	cmn	r4, #1
   13ca8:	beq	13cf0 <close@plt+0x2d54>
   13cac:	mov	r1, #-2147483648	; 0x80000000
   13cb0:	sdiv	r1, r1, r4
   13cb4:	mvn	r7, #-2147483648	; 0x80000000
   13cb8:	cmp	r1, r5
   13cbc:	bge	13cf0 <close@plt+0x2d54>
   13cc0:	b	13d00 <close@plt+0x2d64>
   13cc4:	beq	13cf0 <close@plt+0x2d54>
   13cc8:	mov	r1, #-2147483648	; 0x80000000
   13ccc:	sdiv	r1, r1, r5
   13cd0:	mvn	r7, #-2147483648	; 0x80000000
   13cd4:	cmp	r1, r4
   13cd8:	bge	13cf0 <close@plt+0x2d54>
   13cdc:	b	13d00 <close@plt+0x2d64>
   13ce0:	mvn	r7, #-2147483648	; 0x80000000
   13ce4:	sdiv	r1, r7, r4
   13ce8:	cmp	r5, r1
   13cec:	blt	13d00 <close@plt+0x2d64>
   13cf0:	mul	r1, r5, r4
   13cf4:	mov	r7, #64	; 0x40
   13cf8:	cmp	r1, #63	; 0x3f
   13cfc:	bgt	13d08 <close@plt+0x2d6c>
   13d00:	sdiv	r5, r7, r4
   13d04:	mul	r1, r5, r4
   13d08:	cmp	r0, #0
   13d0c:	moveq	r7, #0
   13d10:	streq	r7, [r8]
   13d14:	sub	r7, r5, r6
   13d18:	cmp	r7, r2
   13d1c:	bge	13dc8 <close@plt+0x2e2c>
   13d20:	add	r5, r6, r2
   13d24:	mov	r1, #0
   13d28:	cmp	r5, r3
   13d2c:	mov	r2, #0
   13d30:	movwgt	r2, #1
   13d34:	cmn	r3, #1
   13d38:	movwgt	r1, #1
   13d3c:	cmp	r5, r6
   13d40:	bvs	13db0 <close@plt+0x2e14>
   13d44:	ands	r1, r1, r2
   13d48:	bne	13db0 <close@plt+0x2e14>
   13d4c:	cmn	r4, #1
   13d50:	ble	13d78 <close@plt+0x2ddc>
   13d54:	cmp	r4, #0
   13d58:	beq	13dc4 <close@plt+0x2e28>
   13d5c:	cmn	r5, #1
   13d60:	ble	13d9c <close@plt+0x2e00>
   13d64:	mvn	r1, #-2147483648	; 0x80000000
   13d68:	udiv	r1, r1, r4
   13d6c:	cmp	r1, r5
   13d70:	bge	13dc4 <close@plt+0x2e28>
   13d74:	b	13db0 <close@plt+0x2e14>
   13d78:	cmn	r5, #1
   13d7c:	ble	13db4 <close@plt+0x2e18>
   13d80:	cmn	r4, #1
   13d84:	beq	13dc4 <close@plt+0x2e28>
   13d88:	mov	r1, #-2147483648	; 0x80000000
   13d8c:	sdiv	r1, r1, r4
   13d90:	cmp	r1, r5
   13d94:	bge	13dc4 <close@plt+0x2e28>
   13d98:	b	13db0 <close@plt+0x2e14>
   13d9c:	beq	13dc4 <close@plt+0x2e28>
   13da0:	mov	r1, #-2147483648	; 0x80000000
   13da4:	sdiv	r1, r1, r5
   13da8:	cmp	r1, r4
   13dac:	bge	13dc4 <close@plt+0x2e28>
   13db0:	bl	13ec8 <close@plt+0x2f2c>
   13db4:	mvn	r1, #-2147483648	; 0x80000000
   13db8:	sdiv	r1, r1, r4
   13dbc:	cmp	r5, r1
   13dc0:	blt	13db0 <close@plt+0x2e14>
   13dc4:	mul	r1, r5, r4
   13dc8:	bl	13b58 <close@plt+0x2bbc>
   13dcc:	str	r5, [r8]
   13dd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13dd4:	mov	r1, #1
   13dd8:	b	13ddc <close@plt+0x2e40>
   13ddc:	push	{fp, lr}
   13de0:	mov	fp, sp
   13de4:	bl	13f0c <close@plt+0x2f70>
   13de8:	bl	13b2c <close@plt+0x2b90>
   13dec:	pop	{fp, pc}
   13df0:	mov	r1, #1
   13df4:	b	13df8 <close@plt+0x2e5c>
   13df8:	push	{fp, lr}
   13dfc:	mov	fp, sp
   13e00:	bl	14590 <close@plt+0x35f4>
   13e04:	bl	13b2c <close@plt+0x2b90>
   13e08:	pop	{fp, pc}
   13e0c:	push	{r4, r5, r6, sl, fp, lr}
   13e10:	add	fp, sp, #16
   13e14:	mov	r4, r1
   13e18:	mov	r5, r0
   13e1c:	mov	r0, r1
   13e20:	bl	13b18 <close@plt+0x2b7c>
   13e24:	mov	r6, r0
   13e28:	mov	r1, r5
   13e2c:	mov	r2, r4
   13e30:	bl	10db0 <memcpy@plt>
   13e34:	mov	r0, r6
   13e38:	pop	{r4, r5, r6, sl, fp, pc}
   13e3c:	push	{r4, r5, r6, sl, fp, lr}
   13e40:	add	fp, sp, #16
   13e44:	mov	r4, r1
   13e48:	mov	r5, r0
   13e4c:	mov	r0, r1
   13e50:	bl	13b40 <close@plt+0x2ba4>
   13e54:	mov	r6, r0
   13e58:	mov	r1, r5
   13e5c:	mov	r2, r4
   13e60:	bl	10db0 <memcpy@plt>
   13e64:	mov	r0, r6
   13e68:	pop	{r4, r5, r6, sl, fp, pc}
   13e6c:	push	{r4, r5, r6, sl, fp, lr}
   13e70:	add	fp, sp, #16
   13e74:	mov	r4, r1
   13e78:	mov	r5, r0
   13e7c:	add	r0, r1, #1
   13e80:	bl	13b40 <close@plt+0x2ba4>
   13e84:	mov	r6, r0
   13e88:	mov	r0, #0
   13e8c:	strb	r0, [r6, r4]
   13e90:	mov	r0, r6
   13e94:	mov	r1, r5
   13e98:	mov	r2, r4
   13e9c:	bl	10db0 <memcpy@plt>
   13ea0:	mov	r0, r6
   13ea4:	pop	{r4, r5, r6, sl, fp, pc}
   13ea8:	push	{r4, sl, fp, lr}
   13eac:	add	fp, sp, #8
   13eb0:	mov	r4, r0
   13eb4:	bl	10ec4 <strlen@plt>
   13eb8:	add	r1, r0, #1
   13ebc:	mov	r0, r4
   13ec0:	pop	{r4, sl, fp, lr}
   13ec4:	b	13e0c <close@plt+0x2e70>
   13ec8:	push	{fp, lr}
   13ecc:	mov	fp, sp
   13ed0:	movw	r0, #24804	; 0x60e4
   13ed4:	movt	r0, #2
   13ed8:	ldr	r4, [r0]
   13edc:	movw	r1, #20684	; 0x50cc
   13ee0:	movt	r1, #1
   13ee4:	mov	r0, #0
   13ee8:	mov	r2, #5
   13eec:	bl	10dd4 <dcgettext@plt>
   13ef0:	mov	r3, r0
   13ef4:	movw	r2, #19647	; 0x4cbf
   13ef8:	movt	r2, #1
   13efc:	mov	r0, r4
   13f00:	mov	r1, #0
   13f04:	bl	10e58 <error@plt>
   13f08:	bl	10f90 <abort@plt>
   13f0c:	clz	r2, r1
   13f10:	lsr	r2, r2, #5
   13f14:	clz	r3, r0
   13f18:	lsr	r3, r3, #5
   13f1c:	orrs	r2, r3, r2
   13f20:	movwne	r1, #1
   13f24:	movwne	r0, #1
   13f28:	cmp	r1, #0
   13f2c:	beq	13f5c <close@plt+0x2fc0>
   13f30:	mvn	r2, #-2147483648	; 0x80000000
   13f34:	udiv	r2, r2, r1
   13f38:	cmp	r2, r0
   13f3c:	bcs	13f5c <close@plt+0x2fc0>
   13f40:	push	{fp, lr}
   13f44:	mov	fp, sp
   13f48:	bl	10ed0 <__errno_location@plt>
   13f4c:	mov	r1, #12
   13f50:	str	r1, [r0]
   13f54:	mov	r0, #0
   13f58:	pop	{fp, pc}
   13f5c:	b	10d5c <calloc@plt>
   13f60:	cmp	r0, #0
   13f64:	movweq	r0, #1
   13f68:	cmn	r0, #1
   13f6c:	ble	13f74 <close@plt+0x2fd8>
   13f70:	b	10e70 <malloc@plt>
   13f74:	push	{fp, lr}
   13f78:	mov	fp, sp
   13f7c:	bl	10ed0 <__errno_location@plt>
   13f80:	mov	r1, #12
   13f84:	str	r1, [r0]
   13f88:	mov	r0, #0
   13f8c:	pop	{fp, pc}
   13f90:	push	{fp, lr}
   13f94:	mov	fp, sp
   13f98:	cmp	r0, #0
   13f9c:	beq	13fb8 <close@plt+0x301c>
   13fa0:	cmp	r1, #0
   13fa4:	beq	13fc4 <close@plt+0x3028>
   13fa8:	cmn	r1, #1
   13fac:	ble	13fd0 <close@plt+0x3034>
   13fb0:	pop	{fp, lr}
   13fb4:	b	10dec <realloc@plt>
   13fb8:	mov	r0, r1
   13fbc:	pop	{fp, lr}
   13fc0:	b	13f60 <close@plt+0x2fc4>
   13fc4:	bl	14498 <close@plt+0x34fc>
   13fc8:	mov	r0, #0
   13fcc:	pop	{fp, pc}
   13fd0:	bl	10ed0 <__errno_location@plt>
   13fd4:	mov	r1, #12
   13fd8:	str	r1, [r0]
   13fdc:	mov	r0, #0
   13fe0:	pop	{fp, pc}
   13fe4:	mov	r1, r0
   13fe8:	sub	r2, r0, #65	; 0x41
   13fec:	mov	r0, #1
   13ff0:	cmp	r2, #26
   13ff4:	subcs	r2, r1, #97	; 0x61
   13ff8:	cmpcs	r2, #26
   13ffc:	bcs	14004 <close@plt+0x3068>
   14000:	bx	lr
   14004:	sub	r1, r1, #48	; 0x30
   14008:	cmp	r1, #10
   1400c:	movcs	r0, #0
   14010:	bx	lr
   14014:	mov	r1, r0
   14018:	sub	r2, r0, #65	; 0x41
   1401c:	mov	r0, #1
   14020:	cmp	r2, #26
   14024:	subcs	r1, r1, #97	; 0x61
   14028:	cmpcs	r1, #26
   1402c:	movcs	r0, #0
   14030:	bx	lr
   14034:	mov	r1, #0
   14038:	cmp	r0, #128	; 0x80
   1403c:	movwcc	r1, #1
   14040:	mov	r0, r1
   14044:	bx	lr
   14048:	sub	r1, r0, #9
   1404c:	clz	r1, r1
   14050:	lsr	r1, r1, #5
   14054:	sub	r0, r0, #32
   14058:	clz	r0, r0
   1405c:	lsr	r0, r0, #5
   14060:	orr	r0, r0, r1
   14064:	bx	lr
   14068:	mov	r1, r0
   1406c:	mov	r0, #1
   14070:	cmp	r1, #32
   14074:	bxcc	lr
   14078:	cmp	r1, #127	; 0x7f
   1407c:	movne	r0, #0
   14080:	bx	lr
   14084:	sub	r1, r0, #48	; 0x30
   14088:	mov	r0, #0
   1408c:	cmp	r1, #10
   14090:	movwcc	r0, #1
   14094:	bx	lr
   14098:	sub	r1, r0, #33	; 0x21
   1409c:	mov	r0, #0
   140a0:	cmp	r1, #94	; 0x5e
   140a4:	movwcc	r0, #1
   140a8:	bx	lr
   140ac:	sub	r1, r0, #97	; 0x61
   140b0:	mov	r0, #0
   140b4:	cmp	r1, #26
   140b8:	movwcc	r0, #1
   140bc:	bx	lr
   140c0:	sub	r1, r0, #32
   140c4:	mov	r0, #0
   140c8:	cmp	r1, #95	; 0x5f
   140cc:	movwcc	r0, #1
   140d0:	bx	lr
   140d4:	sub	r1, r0, #33	; 0x21
   140d8:	cmp	r1, #93	; 0x5d
   140dc:	bhi	14268 <close@plt+0x32cc>
   140e0:	mov	r0, #1
   140e4:	add	r2, pc, #0
   140e8:	ldr	pc, [r2, r1, lsl #2]
   140ec:	andeq	r4, r1, r4, ror #4
   140f0:	andeq	r4, r1, r4, ror #4
   140f4:	andeq	r4, r1, r4, ror #4
   140f8:	andeq	r4, r1, r4, ror #4
   140fc:	andeq	r4, r1, r4, ror #4
   14100:	andeq	r4, r1, r4, ror #4
   14104:	andeq	r4, r1, r4, ror #4
   14108:	andeq	r4, r1, r4, ror #4
   1410c:	andeq	r4, r1, r4, ror #4
   14110:	andeq	r4, r1, r4, ror #4
   14114:	andeq	r4, r1, r4, ror #4
   14118:	andeq	r4, r1, r4, ror #4
   1411c:	andeq	r4, r1, r4, ror #4
   14120:	andeq	r4, r1, r4, ror #4
   14124:	andeq	r4, r1, r4, ror #4
   14128:	andeq	r4, r1, r8, ror #4
   1412c:	andeq	r4, r1, r8, ror #4
   14130:	andeq	r4, r1, r8, ror #4
   14134:	andeq	r4, r1, r8, ror #4
   14138:	andeq	r4, r1, r8, ror #4
   1413c:	andeq	r4, r1, r8, ror #4
   14140:	andeq	r4, r1, r8, ror #4
   14144:	andeq	r4, r1, r8, ror #4
   14148:	andeq	r4, r1, r8, ror #4
   1414c:	andeq	r4, r1, r8, ror #4
   14150:	andeq	r4, r1, r4, ror #4
   14154:	andeq	r4, r1, r4, ror #4
   14158:	andeq	r4, r1, r4, ror #4
   1415c:	andeq	r4, r1, r4, ror #4
   14160:	andeq	r4, r1, r4, ror #4
   14164:	andeq	r4, r1, r4, ror #4
   14168:	andeq	r4, r1, r4, ror #4
   1416c:	andeq	r4, r1, r8, ror #4
   14170:	andeq	r4, r1, r8, ror #4
   14174:	andeq	r4, r1, r8, ror #4
   14178:	andeq	r4, r1, r8, ror #4
   1417c:	andeq	r4, r1, r8, ror #4
   14180:	andeq	r4, r1, r8, ror #4
   14184:	andeq	r4, r1, r8, ror #4
   14188:	andeq	r4, r1, r8, ror #4
   1418c:	andeq	r4, r1, r8, ror #4
   14190:	andeq	r4, r1, r8, ror #4
   14194:	andeq	r4, r1, r8, ror #4
   14198:	andeq	r4, r1, r8, ror #4
   1419c:	andeq	r4, r1, r8, ror #4
   141a0:	andeq	r4, r1, r8, ror #4
   141a4:	andeq	r4, r1, r8, ror #4
   141a8:	andeq	r4, r1, r8, ror #4
   141ac:	andeq	r4, r1, r8, ror #4
   141b0:	andeq	r4, r1, r8, ror #4
   141b4:	andeq	r4, r1, r8, ror #4
   141b8:	andeq	r4, r1, r8, ror #4
   141bc:	andeq	r4, r1, r8, ror #4
   141c0:	andeq	r4, r1, r8, ror #4
   141c4:	andeq	r4, r1, r8, ror #4
   141c8:	andeq	r4, r1, r8, ror #4
   141cc:	andeq	r4, r1, r8, ror #4
   141d0:	andeq	r4, r1, r8, ror #4
   141d4:	andeq	r4, r1, r4, ror #4
   141d8:	andeq	r4, r1, r4, ror #4
   141dc:	andeq	r4, r1, r4, ror #4
   141e0:	andeq	r4, r1, r4, ror #4
   141e4:	andeq	r4, r1, r4, ror #4
   141e8:	andeq	r4, r1, r4, ror #4
   141ec:	andeq	r4, r1, r8, ror #4
   141f0:	andeq	r4, r1, r8, ror #4
   141f4:	andeq	r4, r1, r8, ror #4
   141f8:	andeq	r4, r1, r8, ror #4
   141fc:	andeq	r4, r1, r8, ror #4
   14200:	andeq	r4, r1, r8, ror #4
   14204:	andeq	r4, r1, r8, ror #4
   14208:	andeq	r4, r1, r8, ror #4
   1420c:	andeq	r4, r1, r8, ror #4
   14210:	andeq	r4, r1, r8, ror #4
   14214:	andeq	r4, r1, r8, ror #4
   14218:	andeq	r4, r1, r8, ror #4
   1421c:	andeq	r4, r1, r8, ror #4
   14220:	andeq	r4, r1, r8, ror #4
   14224:	andeq	r4, r1, r8, ror #4
   14228:	andeq	r4, r1, r8, ror #4
   1422c:	andeq	r4, r1, r8, ror #4
   14230:	andeq	r4, r1, r8, ror #4
   14234:	andeq	r4, r1, r8, ror #4
   14238:	andeq	r4, r1, r8, ror #4
   1423c:	andeq	r4, r1, r8, ror #4
   14240:	andeq	r4, r1, r8, ror #4
   14244:	andeq	r4, r1, r8, ror #4
   14248:	andeq	r4, r1, r8, ror #4
   1424c:	andeq	r4, r1, r8, ror #4
   14250:	andeq	r4, r1, r8, ror #4
   14254:	andeq	r4, r1, r4, ror #4
   14258:	andeq	r4, r1, r4, ror #4
   1425c:	andeq	r4, r1, r4, ror #4
   14260:	andeq	r4, r1, r4, ror #4
   14264:	bx	lr
   14268:	mov	r0, #0
   1426c:	bx	lr
   14270:	sub	r0, r0, #9
   14274:	cmp	r0, #23
   14278:	movhi	r0, #0
   1427c:	bxhi	lr
   14280:	bic	r0, r0, #-16777216	; 0xff000000
   14284:	movw	r1, #31
   14288:	movt	r1, #128	; 0x80
   1428c:	mov	r2, #1
   14290:	and	r0, r2, r1, lsr r0
   14294:	bx	lr
   14298:	sub	r1, r0, #65	; 0x41
   1429c:	mov	r0, #0
   142a0:	cmp	r1, #26
   142a4:	movwcc	r0, #1
   142a8:	bx	lr
   142ac:	mov	r1, r0
   142b0:	sub	r2, r0, #48	; 0x30
   142b4:	mov	r0, #1
   142b8:	cmp	r2, #22
   142bc:	bhi	142d4 <close@plt+0x3338>
   142c0:	mov	ip, #1
   142c4:	movw	r3, #1023	; 0x3ff
   142c8:	movt	r3, #126	; 0x7e
   142cc:	tst	r3, ip, lsl r2
   142d0:	bxne	lr
   142d4:	sub	r1, r1, #97	; 0x61
   142d8:	cmp	r1, #6
   142dc:	movcs	r0, #0
   142e0:	bxcs	lr
   142e4:	bx	lr
   142e8:	sub	r1, r0, #65	; 0x41
   142ec:	cmp	r1, #26
   142f0:	addcc	r0, r0, #32
   142f4:	bx	lr
   142f8:	sub	r1, r0, #97	; 0x61
   142fc:	cmp	r1, #26
   14300:	subcc	r0, r0, #32
   14304:	bx	lr
   14308:	push	{r4, r5, r6, sl, fp, lr}
   1430c:	add	fp, sp, #16
   14310:	mov	r4, r0
   14314:	bl	10e34 <__fpending@plt>
   14318:	mov	r5, r0
   1431c:	mov	r0, r4
   14320:	bl	10e40 <ferror_unlocked@plt>
   14324:	mov	r6, r0
   14328:	mov	r0, r4
   1432c:	bl	14390 <close@plt+0x33f4>
   14330:	cmp	r6, #0
   14334:	beq	14354 <close@plt+0x33b8>
   14338:	mvn	r4, #0
   1433c:	cmp	r0, #0
   14340:	bne	14388 <close@plt+0x33ec>
   14344:	bl	10ed0 <__errno_location@plt>
   14348:	mov	r1, #0
   1434c:	str	r1, [r0]
   14350:	b	14388 <close@plt+0x33ec>
   14354:	cmp	r0, #0
   14358:	mov	r4, r0
   1435c:	mvnne	r4, #0
   14360:	cmp	r5, #0
   14364:	bne	14388 <close@plt+0x33ec>
   14368:	cmp	r0, #0
   1436c:	beq	14388 <close@plt+0x33ec>
   14370:	bl	10ed0 <__errno_location@plt>
   14374:	ldr	r0, [r0]
   14378:	subs	r4, r0, #9
   1437c:	mvnne	r4, #0
   14380:	mov	r0, r4
   14384:	pop	{r4, r5, r6, sl, fp, pc}
   14388:	mov	r0, r4
   1438c:	pop	{r4, r5, r6, sl, fp, pc}
   14390:	push	{r4, r5, fp, lr}
   14394:	add	fp, sp, #8
   14398:	sub	sp, sp, #8
   1439c:	mov	r4, r0
   143a0:	bl	10f00 <fileno@plt>
   143a4:	cmn	r0, #1
   143a8:	ble	14420 <close@plt+0x3484>
   143ac:	mov	r0, r4
   143b0:	bl	10e88 <__freading@plt>
   143b4:	cmp	r0, #0
   143b8:	beq	143e4 <close@plt+0x3448>
   143bc:	mov	r0, r4
   143c0:	bl	10f00 <fileno@plt>
   143c4:	mov	r1, #1
   143c8:	str	r1, [sp]
   143cc:	mov	r2, #0
   143d0:	mov	r3, #0
   143d4:	bl	10e1c <lseek64@plt>
   143d8:	and	r0, r0, r1
   143dc:	cmn	r0, #1
   143e0:	beq	14420 <close@plt+0x3484>
   143e4:	mov	r0, r4
   143e8:	bl	14430 <close@plt+0x3494>
   143ec:	cmp	r0, #0
   143f0:	beq	14420 <close@plt+0x3484>
   143f4:	bl	10ed0 <__errno_location@plt>
   143f8:	ldr	r5, [r0]
   143fc:	mov	r0, r4
   14400:	bl	10f18 <fclose@plt>
   14404:	cmp	r5, #0
   14408:	beq	14418 <close@plt+0x347c>
   1440c:	bl	10ed0 <__errno_location@plt>
   14410:	str	r5, [r0]
   14414:	mvn	r0, #0
   14418:	sub	sp, fp, #8
   1441c:	pop	{r4, r5, fp, pc}
   14420:	mov	r0, r4
   14424:	sub	sp, fp, #8
   14428:	pop	{r4, r5, fp, lr}
   1442c:	b	10f18 <fclose@plt>
   14430:	push	{r4, sl, fp, lr}
   14434:	add	fp, sp, #8
   14438:	mov	r4, r0
   1443c:	cmp	r0, #0
   14440:	beq	14458 <close@plt+0x34bc>
   14444:	mov	r0, r4
   14448:	bl	10e88 <__freading@plt>
   1444c:	cmp	r0, #0
   14450:	movne	r0, r4
   14454:	blne	14464 <close@plt+0x34c8>
   14458:	mov	r0, r4
   1445c:	pop	{r4, sl, fp, lr}
   14460:	b	10d8c <fflush@plt>
   14464:	ldrb	r1, [r0, #1]
   14468:	tst	r1, #1
   1446c:	bxeq	lr
   14470:	push	{fp, lr}
   14474:	mov	fp, sp
   14478:	sub	sp, sp, #8
   1447c:	mov	r1, #1
   14480:	str	r1, [sp]
   14484:	mov	r2, #0
   14488:	mov	r3, #0
   1448c:	bl	144c0 <close@plt+0x3524>
   14490:	mov	sp, fp
   14494:	pop	{fp, pc}
   14498:	push	{r4, r5, r6, sl, fp, lr}
   1449c:	add	fp, sp, #16
   144a0:	mov	r4, r0
   144a4:	bl	10ed0 <__errno_location@plt>
   144a8:	mov	r5, r0
   144ac:	ldr	r6, [r0]
   144b0:	mov	r0, r4
   144b4:	bl	10d98 <free@plt>
   144b8:	str	r6, [r5]
   144bc:	pop	{r4, r5, r6, sl, fp, pc}
   144c0:	push	{r4, r5, r6, r7, fp, lr}
   144c4:	add	fp, sp, #16
   144c8:	sub	sp, sp, #8
   144cc:	mov	r5, r3
   144d0:	mov	r6, r2
   144d4:	mov	r4, r0
   144d8:	ldr	r0, [r0, #4]
   144dc:	ldr	r1, [r4, #8]
   144e0:	cmp	r1, r0
   144e4:	bne	14500 <close@plt+0x3564>
   144e8:	ldrd	r0, [r4, #16]
   144ec:	cmp	r1, r0
   144f0:	bne	14500 <close@plt+0x3564>
   144f4:	ldr	r0, [r4, #36]	; 0x24
   144f8:	cmp	r0, #0
   144fc:	beq	14518 <close@plt+0x357c>
   14500:	mov	r0, r4
   14504:	mov	r2, r6
   14508:	mov	r3, r5
   1450c:	sub	sp, fp, #16
   14510:	pop	{r4, r5, r6, r7, fp, lr}
   14514:	b	10f24 <fseeko64@plt>
   14518:	ldr	r7, [fp, #8]
   1451c:	mov	r0, r4
   14520:	bl	10f00 <fileno@plt>
   14524:	str	r7, [sp]
   14528:	mov	r2, r6
   1452c:	mov	r3, r5
   14530:	bl	10e1c <lseek64@plt>
   14534:	and	r2, r0, r1
   14538:	cmn	r2, #1
   1453c:	mvneq	r0, #0
   14540:	subeq	sp, fp, #16
   14544:	popeq	{r4, r5, r6, r7, fp, pc}
   14548:	strd	r0, [r4, #80]	; 0x50
   1454c:	ldr	r0, [r4]
   14550:	bic	r0, r0, #16
   14554:	str	r0, [r4]
   14558:	mov	r0, #0
   1455c:	sub	sp, fp, #16
   14560:	pop	{r4, r5, r6, r7, fp, pc}
   14564:	push	{fp, lr}
   14568:	mov	fp, sp
   1456c:	bl	10ed0 <__errno_location@plt>
   14570:	mov	r1, #12
   14574:	str	r1, [r0]
   14578:	mov	r0, #0
   1457c:	pop	{fp, pc}
   14580:	b	13f60 <close@plt+0x2fc4>
   14584:	cmp	r1, #0
   14588:	orreq	r1, r1, #1
   1458c:	b	13f90 <close@plt+0x2ff4>
   14590:	b	13f0c <close@plt+0x2f70>
   14594:	clz	r3, r2
   14598:	lsr	ip, r3, #5
   1459c:	clz	r3, r1
   145a0:	lsr	r3, r3, #5
   145a4:	orrs	r3, r3, ip
   145a8:	movwne	r1, #1
   145ac:	movwne	r2, #1
   145b0:	b	1464c <close@plt+0x36b0>
   145b4:	push	{fp, lr}
   145b8:	mov	fp, sp
   145bc:	mov	r0, #14
   145c0:	bl	10f54 <nl_langinfo@plt>
   145c4:	movw	r1, #18665	; 0x48e9
   145c8:	movt	r1, #1
   145cc:	cmp	r0, #0
   145d0:	movne	r1, r0
   145d4:	ldrb	r2, [r1]
   145d8:	movw	r0, #20701	; 0x50dd
   145dc:	movt	r0, #1
   145e0:	cmp	r2, #0
   145e4:	movne	r0, r1
   145e8:	pop	{fp, pc}
   145ec:	push	{r4, r5, r6, r7, fp, lr}
   145f0:	add	fp, sp, #16
   145f4:	sub	sp, sp, #8
   145f8:	mov	r7, r2
   145fc:	mov	r4, r1
   14600:	add	r5, sp, #4
   14604:	cmp	r0, #0
   14608:	movne	r5, r0
   1460c:	mov	r0, r5
   14610:	bl	10e4c <mbrtowc@plt>
   14614:	mov	r6, r0
   14618:	cmp	r7, #0
   1461c:	beq	14640 <close@plt+0x36a4>
   14620:	cmn	r6, #2
   14624:	bcc	14640 <close@plt+0x36a4>
   14628:	mov	r0, #0
   1462c:	bl	14688 <close@plt+0x36ec>
   14630:	cmp	r0, #0
   14634:	ldrbeq	r0, [r4]
   14638:	streq	r0, [r5]
   1463c:	moveq	r6, #1
   14640:	mov	r0, r6
   14644:	sub	sp, fp, #16
   14648:	pop	{r4, r5, r6, r7, fp, pc}
   1464c:	cmp	r2, #0
   14650:	beq	14680 <close@plt+0x36e4>
   14654:	mvn	r3, #0
   14658:	udiv	r3, r3, r2
   1465c:	cmp	r3, r1
   14660:	bcs	14680 <close@plt+0x36e4>
   14664:	push	{fp, lr}
   14668:	mov	fp, sp
   1466c:	bl	10ed0 <__errno_location@plt>
   14670:	mov	r1, #12
   14674:	str	r1, [r0]
   14678:	mov	r0, #0
   1467c:	pop	{fp, pc}
   14680:	mul	r1, r2, r1
   14684:	b	13f90 <close@plt+0x2ff4>
   14688:	push	{r4, sl, fp, lr}
   1468c:	add	fp, sp, #8
   14690:	sub	sp, sp, #264	; 0x108
   14694:	add	r1, sp, #7
   14698:	movw	r2, #257	; 0x101
   1469c:	bl	146ec <close@plt+0x3750>
   146a0:	mov	r4, #0
   146a4:	cmp	r0, #0
   146a8:	bne	146e0 <close@plt+0x3744>
   146ac:	add	r0, sp, #7
   146b0:	movw	r1, #20707	; 0x50e3
   146b4:	movt	r1, #1
   146b8:	bl	10d80 <strcmp@plt>
   146bc:	cmp	r0, #0
   146c0:	beq	146e0 <close@plt+0x3744>
   146c4:	add	r0, sp, #7
   146c8:	movw	r1, #20709	; 0x50e5
   146cc:	movt	r1, #1
   146d0:	bl	10d80 <strcmp@plt>
   146d4:	mov	r4, r0
   146d8:	cmp	r0, #0
   146dc:	movwne	r4, #1
   146e0:	mov	r0, r4
   146e4:	sub	sp, fp, #8
   146e8:	pop	{r4, sl, fp, pc}
   146ec:	b	146f0 <close@plt+0x3754>
   146f0:	push	{r4, r5, r6, r7, fp, lr}
   146f4:	add	fp, sp, #16
   146f8:	mov	r6, r2
   146fc:	mov	r4, r1
   14700:	bl	1478c <close@plt+0x37f0>
   14704:	cmp	r0, #0
   14708:	beq	14738 <close@plt+0x379c>
   1470c:	mov	r7, r0
   14710:	bl	10ec4 <strlen@plt>
   14714:	cmp	r0, r6
   14718:	bcs	14758 <close@plt+0x37bc>
   1471c:	add	r2, r0, #1
   14720:	mov	r0, r4
   14724:	mov	r1, r7
   14728:	bl	10db0 <memcpy@plt>
   1472c:	mov	r5, #0
   14730:	mov	r0, r5
   14734:	pop	{r4, r5, r6, r7, fp, pc}
   14738:	mov	r5, #22
   1473c:	cmp	r6, #0
   14740:	movne	r0, #0
   14744:	strbne	r0, [r4]
   14748:	movne	r0, r5
   1474c:	popne	{r4, r5, r6, r7, fp, pc}
   14750:	mov	r0, r5
   14754:	pop	{r4, r5, r6, r7, fp, pc}
   14758:	mov	r5, #34	; 0x22
   1475c:	cmp	r6, #0
   14760:	beq	14780 <close@plt+0x37e4>
   14764:	sub	r6, r6, #1
   14768:	mov	r0, r4
   1476c:	mov	r1, r7
   14770:	mov	r2, r6
   14774:	bl	10db0 <memcpy@plt>
   14778:	mov	r0, #0
   1477c:	strb	r0, [r4, r6]
   14780:	mov	r0, r5
   14784:	pop	{r4, r5, r6, r7, fp, pc}
   14788:	b	1478c <close@plt+0x37f0>
   1478c:	mov	r1, #0
   14790:	b	10f3c <setlocale@plt>
   14794:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14798:	mov	r7, r0
   1479c:	ldr	r6, [pc, #72]	; 147ec <close@plt+0x3850>
   147a0:	ldr	r5, [pc, #72]	; 147f0 <close@plt+0x3854>
   147a4:	add	r6, pc, r6
   147a8:	add	r5, pc, r5
   147ac:	sub	r6, r6, r5
   147b0:	mov	r8, r1
   147b4:	mov	r9, r2
   147b8:	bl	10d3c <calloc@plt-0x20>
   147bc:	asrs	r6, r6, #2
   147c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   147c4:	mov	r4, #0
   147c8:	add	r4, r4, #1
   147cc:	ldr	r3, [r5], #4
   147d0:	mov	r2, r9
   147d4:	mov	r1, r8
   147d8:	mov	r0, r7
   147dc:	blx	r3
   147e0:	cmp	r6, r4
   147e4:	bne	147c8 <close@plt+0x382c>
   147e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   147ec:	andeq	r1, r1, r0, ror #14
   147f0:	andeq	r1, r1, r8, asr r7
   147f4:	bx	lr
   147f8:	ldr	r3, [pc, #12]	; 1480c <close@plt+0x3870>
   147fc:	mov	r1, #0
   14800:	add	r3, pc, r3
   14804:	ldr	r2, [r3]
   14808:	b	10edc <__cxa_atexit@plt>
   1480c:	ldrdeq	r1, [r1], -r4

Disassembly of section .fini:

00014810 <.fini>:
   14810:	push	{r3, lr}
   14814:	pop	{r3, pc}
