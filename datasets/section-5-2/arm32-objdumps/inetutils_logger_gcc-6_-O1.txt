
../repos/inetutils/src/logger:     file format elf32-littlearm


Disassembly of section .init:

00010fe0 <.init>:
   10fe0:	push	{r3, lr}
   10fe4:	bl	1133c <__assert_fail@plt+0x48>
   10fe8:	pop	{r3, pc}

Disassembly of section .plt:

00010fec <calloc@plt-0x14>:
   10fec:	push	{lr}		; (str lr, [sp, #-4]!)
   10ff0:	ldr	lr, [pc, #4]	; 10ffc <calloc@plt-0x4>
   10ff4:	add	lr, pc, lr
   10ff8:	ldr	pc, [lr, #8]!
   10ffc:	andeq	r9, r1, r4

00011000 <calloc@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #102400	; 0x19000
   11008:	ldr	pc, [ip, #4]!

0001100c <fputs_unlocked@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #24, 20	; 0x18000
   11014:	ldr	pc, [ip, #4092]!	; 0xffc

00011018 <raise@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #24, 20	; 0x18000
   11020:	ldr	pc, [ip, #4084]!	; 0xff4

00011024 <__getdelim@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #24, 20	; 0x18000
   1102c:	ldr	pc, [ip, #4076]!	; 0xfec

00011030 <strcmp@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #24, 20	; 0x18000
   11038:	ldr	pc, [ip, #4068]!	; 0xfe4

0001103c <strtol@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #24, 20	; 0x18000
   11044:	ldr	pc, [ip, #4060]!	; 0xfdc

00011048 <getpwuid@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #24, 20	; 0x18000
   11050:	ldr	pc, [ip, #4052]!	; 0xfd4

00011054 <printf@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #24, 20	; 0x18000
   1105c:	ldr	pc, [ip, #4044]!	; 0xfcc

00011060 <getuid@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #24, 20	; 0x18000
   11068:	ldr	pc, [ip, #4036]!	; 0xfc4

0001106c <memmove@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #24, 20	; 0x18000
   11074:	ldr	pc, [ip, #4028]!	; 0xfbc

00011078 <strchrnul@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #24, 20	; 0x18000
   11080:	ldr	pc, [ip, #4020]!	; 0xfb4

00011084 <free@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #24, 20	; 0x18000
   1108c:	ldr	pc, [ip, #4012]!	; 0xfac

00011090 <gai_strerror@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #24, 20	; 0x18000
   11098:	ldr	pc, [ip, #4004]!	; 0xfa4

0001109c <strndup@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #24, 20	; 0x18000
   110a4:	ldr	pc, [ip, #3996]!	; 0xf9c

000110a8 <memcpy@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #24, 20	; 0x18000
   110b0:	ldr	pc, [ip, #3988]!	; 0xf94

000110b4 <time@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #24, 20	; 0x18000
   110bc:	ldr	pc, [ip, #3980]!	; 0xf8c

000110c0 <fwrite_unlocked@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #24, 20	; 0x18000
   110c8:	ldr	pc, [ip, #3972]!	; 0xf84

000110cc <sleep@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #24, 20	; 0x18000
   110d4:	ldr	pc, [ip, #3964]!	; 0xf7c

000110d8 <ctime@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #24, 20	; 0x18000
   110e0:	ldr	pc, [ip, #3956]!	; 0xf74

000110e4 <realloc@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #24, 20	; 0x18000
   110ec:	ldr	pc, [ip, #3948]!	; 0xf6c

000110f0 <strcasecmp@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #24, 20	; 0x18000
   110f8:	ldr	pc, [ip, #3940]!	; 0xf64

000110fc <funlockfile@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #24, 20	; 0x18000
   11104:	ldr	pc, [ip, #3932]!	; 0xf5c

00011108 <fwrite@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #24, 20	; 0x18000
   11110:	ldr	pc, [ip, #3924]!	; 0xf54

00011114 <strcpy@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #24, 20	; 0x18000
   1111c:	ldr	pc, [ip, #3916]!	; 0xf4c

00011120 <error@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #24, 20	; 0x18000
   11128:	ldr	pc, [ip, #3908]!	; 0xf44

0001112c <getenv@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #24, 20	; 0x18000
   11134:	ldr	pc, [ip, #3900]!	; 0xf3c

00011138 <malloc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #24, 20	; 0x18000
   11140:	ldr	pc, [ip, #3892]!	; 0xf34

00011144 <__libc_start_main@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #24, 20	; 0x18000
   1114c:	ldr	pc, [ip, #3884]!	; 0xf2c

00011150 <strerror@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #24, 20	; 0x18000
   11158:	ldr	pc, [ip, #3876]!	; 0xf24

0001115c <__ctype_tolower_loc@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #24, 20	; 0x18000
   11164:	ldr	pc, [ip, #3868]!	; 0xf1c

00011168 <__gmon_start__@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #24, 20	; 0x18000
   11170:	ldr	pc, [ip, #3860]!	; 0xf14

00011174 <freopen64@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #24, 20	; 0x18000
   1117c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011180 <mempcpy@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #24, 20	; 0x18000
   11188:	ldr	pc, [ip, #3844]!	; 0xf04

0001118c <__ctype_b_loc@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #24, 20	; 0x18000
   11194:	ldr	pc, [ip, #3836]!	; 0xefc

00011198 <getpid@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #24, 20	; 0x18000
   111a0:	ldr	pc, [ip, #3828]!	; 0xef4

000111a4 <exit@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #24, 20	; 0x18000
   111ac:	ldr	pc, [ip, #3820]!	; 0xeec

000111b0 <strtoul@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #24, 20	; 0x18000
   111b8:	ldr	pc, [ip, #3812]!	; 0xee4

000111bc <strlen@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #24, 20	; 0x18000
   111c4:	ldr	pc, [ip, #3804]!	; 0xedc

000111c8 <strchr@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #24, 20	; 0x18000
   111d0:	ldr	pc, [ip, #3796]!	; 0xed4

000111d4 <fprintf@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #24, 20	; 0x18000
   111dc:	ldr	pc, [ip, #3788]!	; 0xecc

000111e0 <__errno_location@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #24, 20	; 0x18000
   111e8:	ldr	pc, [ip, #3780]!	; 0xec4

000111ec <strerror_r@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #24, 20	; 0x18000
   111f4:	ldr	pc, [ip, #3772]!	; 0xebc

000111f8 <bind@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #24, 20	; 0x18000
   11200:	ldr	pc, [ip, #3764]!	; 0xeb4

00011204 <memset@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #24, 20	; 0x18000
   1120c:	ldr	pc, [ip, #3756]!	; 0xeac

00011210 <fileno@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #24, 20	; 0x18000
   11218:	ldr	pc, [ip, #3748]!	; 0xea4

0001121c <asprintf@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #24, 20	; 0x18000
   11224:	ldr	pc, [ip, #3740]!	; 0xe9c

00011228 <memchr@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #24, 20	; 0x18000
   11230:	ldr	pc, [ip, #3732]!	; 0xe94

00011234 <writev@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #24, 20	; 0x18000
   1123c:	ldr	pc, [ip, #3724]!	; 0xe8c

00011240 <__overflow@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #24, 20	; 0x18000
   11248:	ldr	pc, [ip, #3716]!	; 0xe84

0001124c <strrchr@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #24, 20	; 0x18000
   11254:	ldr	pc, [ip, #3708]!	; 0xe7c

00011258 <vfprintf@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #24, 20	; 0x18000
   11260:	ldr	pc, [ip, #3700]!	; 0xe74

00011264 <fputc@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #24, 20	; 0x18000
   1126c:	ldr	pc, [ip, #3692]!	; 0xe6c

00011270 <flockfile@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #24, 20	; 0x18000
   11278:	ldr	pc, [ip, #3684]!	; 0xe64

0001127c <vsnprintf@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #24, 20	; 0x18000
   11284:	ldr	pc, [ip, #3676]!	; 0xe5c

00011288 <qsort@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #24, 20	; 0x18000
   11290:	ldr	pc, [ip, #3668]!	; 0xe54

00011294 <freeaddrinfo@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #24, 20	; 0x18000
   1129c:	ldr	pc, [ip, #3660]!	; 0xe4c

000112a0 <getaddrinfo@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #24, 20	; 0x18000
   112a8:	ldr	pc, [ip, #3652]!	; 0xe44

000112ac <socket@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #24, 20	; 0x18000
   112b4:	ldr	pc, [ip, #3644]!	; 0xe3c

000112b8 <strncmp@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #24, 20	; 0x18000
   112c0:	ldr	pc, [ip, #3636]!	; 0xe34

000112c4 <abort@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #24, 20	; 0x18000
   112cc:	ldr	pc, [ip, #3628]!	; 0xe2c

000112d0 <close@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #24, 20	; 0x18000
   112d8:	ldr	pc, [ip, #3620]!	; 0xe24

000112dc <send@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #24, 20	; 0x18000
   112e4:	ldr	pc, [ip, #3612]!	; 0xe1c

000112e8 <connect@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #24, 20	; 0x18000
   112f0:	ldr	pc, [ip, #3604]!	; 0xe14

000112f4 <__assert_fail@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #24, 20	; 0x18000
   112fc:	ldr	pc, [ip, #3596]!	; 0xe0c

Disassembly of section .text:

00011300 <argp_parse@@Base-0x1198>:
   11300:	mov	fp, #0
   11304:	mov	lr, #0
   11308:	pop	{r1}		; (ldr r1, [sp], #4)
   1130c:	mov	r2, sp
   11310:	push	{r2}		; (str r2, [sp, #-4]!)
   11314:	push	{r0}		; (str r0, [sp, #-4]!)
   11318:	ldr	ip, [pc, #16]	; 11330 <__assert_fail@plt+0x3c>
   1131c:	push	{ip}		; (str ip, [sp, #-4]!)
   11320:	ldr	r0, [pc, #12]	; 11334 <__assert_fail@plt+0x40>
   11324:	ldr	r3, [pc, #12]	; 11338 <__assert_fail@plt+0x44>
   11328:	bl	11144 <__libc_start_main@plt>
   1132c:	bl	112c4 <abort@plt>
   11330:	andeq	r8, r1, r8, lsl #18
   11334:	andeq	r1, r1, r4, ror #19
   11338:	andeq	r8, r1, r8, lsr #17
   1133c:	ldr	r3, [pc, #20]	; 11358 <__assert_fail@plt+0x64>
   11340:	ldr	r2, [pc, #20]	; 1135c <__assert_fail@plt+0x68>
   11344:	add	r3, pc, r3
   11348:	ldr	r2, [r3, r2]
   1134c:	cmp	r2, #0
   11350:	bxeq	lr
   11354:	b	11168 <__gmon_start__@plt>
   11358:			; <UNDEFINED> instruction: 0x00018cb4
   1135c:	andeq	r0, r0, ip, lsl #2
   11360:	ldr	r3, [pc, #28]	; 11384 <__assert_fail@plt+0x90>
   11364:	ldr	r0, [pc, #28]	; 11388 <__assert_fail@plt+0x94>
   11368:	sub	r3, r3, r0
   1136c:	cmp	r3, #6
   11370:	bxls	lr
   11374:	ldr	r3, [pc, #16]	; 1138c <__assert_fail@plt+0x98>
   11378:	cmp	r3, #0
   1137c:	bxeq	lr
   11380:	bx	r3
   11384:	andeq	sl, r2, fp, lsr #7
   11388:	andeq	sl, r2, r8, lsr #7
   1138c:	andeq	r0, r0, r0
   11390:	ldr	r1, [pc, #36]	; 113bc <__assert_fail@plt+0xc8>
   11394:	ldr	r0, [pc, #36]	; 113c0 <__assert_fail@plt+0xcc>
   11398:	sub	r1, r1, r0
   1139c:	asr	r1, r1, #2
   113a0:	add	r1, r1, r1, lsr #31
   113a4:	asrs	r1, r1, #1
   113a8:	bxeq	lr
   113ac:	ldr	r3, [pc, #16]	; 113c4 <__assert_fail@plt+0xd0>
   113b0:	cmp	r3, #0
   113b4:	bxeq	lr
   113b8:	bx	r3
   113bc:	andeq	sl, r2, r8, lsr #7
   113c0:	andeq	sl, r2, r8, lsr #7
   113c4:	andeq	r0, r0, r0
   113c8:	push	{r4, lr}
   113cc:	ldr	r4, [pc, #24]	; 113ec <__assert_fail@plt+0xf8>
   113d0:	ldrb	r3, [r4]
   113d4:	cmp	r3, #0
   113d8:	popne	{r4, pc}
   113dc:	bl	11360 <__assert_fail@plt+0x6c>
   113e0:	mov	r3, #1
   113e4:	strb	r3, [r4]
   113e8:	pop	{r4, pc}
   113ec:	andeq	sl, r2, r0, asr #7
   113f0:	ldr	r0, [pc, #40]	; 11420 <__assert_fail@plt+0x12c>
   113f4:	ldr	r3, [r0]
   113f8:	cmp	r3, #0
   113fc:	bne	11404 <__assert_fail@plt+0x110>
   11400:	b	11390 <__assert_fail@plt+0x9c>
   11404:	ldr	r3, [pc, #24]	; 11424 <__assert_fail@plt+0x130>
   11408:	cmp	r3, #0
   1140c:	beq	11400 <__assert_fail@plt+0x10c>
   11410:	push	{r4, lr}
   11414:	blx	r3
   11418:	pop	{r4, lr}
   1141c:	b	11390 <__assert_fail@plt+0x9c>
   11420:	andeq	r9, r2, ip, lsl #30
   11424:	andeq	r0, r0, r0
   11428:	push	{r4, r5, lr}
   1142c:	sub	sp, sp, #44	; 0x2c
   11430:	mov	r4, r0
   11434:	mov	r0, #0
   11438:	bl	110b4 <time@plt>
   1143c:	str	r0, [sp, #32]
   11440:	ldr	r3, [pc, #380]	; 115c4 <__assert_fail@plt+0x2d0>
   11444:	ldr	r3, [r3]
   11448:	tst	r3, #1
   1144c:	beq	1155c <__assert_fail@plt+0x268>
   11450:	ldr	r3, [pc, #368]	; 115c8 <__assert_fail@plt+0x2d4>
   11454:	ldr	r5, [r3]
   11458:	add	r0, sp, #32
   1145c:	bl	110d8 <ctime@plt>
   11460:	str	r4, [sp, #8]
   11464:	ldr	r3, [pc, #344]	; 115c4 <__assert_fail@plt+0x2d0>
   11468:	ldr	r2, [r3, #4]
   1146c:	str	r2, [sp, #4]
   11470:	ldr	r3, [r3, #8]
   11474:	str	r3, [sp]
   11478:	add	r3, r0, #4
   1147c:	mov	r2, r5
   11480:	ldr	r1, [pc, #324]	; 115cc <__assert_fail@plt+0x2d8>
   11484:	add	r0, sp, #36	; 0x24
   11488:	bl	1121c <asprintf@plt>
   1148c:	cmn	r0, #1
   11490:	beq	11594 <__assert_fail@plt+0x2a0>
   11494:	ldr	r0, [sp, #36]	; 0x24
   11498:	bl	111bc <strlen@plt>
   1149c:	mov	r5, r0
   114a0:	ldr	r3, [pc, #284]	; 115c4 <__assert_fail@plt+0x2d0>
   114a4:	ldr	r3, [r3]
   114a8:	tst	r3, #32
   114ac:	beq	11504 <__assert_fail@plt+0x210>
   114b0:	mov	r0, r4
   114b4:	bl	111bc <strlen@plt>
   114b8:	str	r4, [sp, #16]
   114bc:	str	r0, [sp, #20]
   114c0:	add	r4, r4, r0
   114c4:	ldrb	r3, [r4, #-1]
   114c8:	cmp	r3, #10
   114cc:	ldrne	r3, [pc, #252]	; 115d0 <__assert_fail@plt+0x2dc>
   114d0:	strne	r3, [sp, #24]
   114d4:	movne	r3, #1
   114d8:	strne	r3, [sp, #28]
   114dc:	addne	r4, sp, #24
   114e0:	addeq	r4, sp, #16
   114e4:	ldr	r3, [pc, #232]	; 115d4 <__assert_fail@plt+0x2e0>
   114e8:	ldr	r0, [r3]
   114ec:	bl	11210 <fileno@plt>
   114f0:	add	r1, sp, #16
   114f4:	sub	r2, r4, r1
   114f8:	asr	r2, r2, #3
   114fc:	add	r2, r2, #1
   11500:	bl	11234 <writev@plt>
   11504:	mov	r3, #0
   11508:	mov	r2, r5
   1150c:	ldr	r1, [sp, #36]	; 0x24
   11510:	ldr	r0, [pc, #192]	; 115d8 <__assert_fail@plt+0x2e4>
   11514:	ldr	r0, [r0]
   11518:	bl	112dc <send@plt>
   1151c:	mov	r4, r0
   11520:	ldr	r0, [sp, #36]	; 0x24
   11524:	bl	1308c <argp_parse@@Base+0xbf4>
   11528:	cmn	r4, #1
   1152c:	beq	115ac <__assert_fail@plt+0x2b8>
   11530:	cmp	r4, r5
   11534:	beq	11554 <__assert_fail@plt+0x260>
   11538:	bl	111e0 <__errno_location@plt>
   1153c:	ldr	r1, [r0]
   11540:	str	r5, [sp]
   11544:	mov	r3, r4
   11548:	ldr	r2, [pc, #140]	; 115dc <__assert_fail@plt+0x2e8>
   1154c:	mov	r0, #0
   11550:	bl	11120 <error@plt>
   11554:	add	sp, sp, #44	; 0x2c
   11558:	pop	{r4, r5, pc}
   1155c:	ldr	r3, [pc, #100]	; 115c8 <__assert_fail@plt+0x2d4>
   11560:	ldr	r5, [r3]
   11564:	add	r0, sp, #32
   11568:	bl	110d8 <ctime@plt>
   1156c:	str	r4, [sp, #4]
   11570:	ldr	r3, [pc, #76]	; 115c4 <__assert_fail@plt+0x2d0>
   11574:	ldr	r3, [r3, #8]
   11578:	str	r3, [sp]
   1157c:	add	r3, r0, #4
   11580:	mov	r2, r5
   11584:	ldr	r1, [pc, #84]	; 115e0 <__assert_fail@plt+0x2ec>
   11588:	add	r0, sp, #36	; 0x24
   1158c:	bl	1121c <asprintf@plt>
   11590:	b	1148c <__assert_fail@plt+0x198>
   11594:	bl	111e0 <__errno_location@plt>
   11598:	ldr	r2, [pc, #68]	; 115e4 <__assert_fail@plt+0x2f0>
   1159c:	ldr	r1, [r0]
   115a0:	mov	r0, #1
   115a4:	bl	11120 <error@plt>
   115a8:	b	11494 <__assert_fail@plt+0x1a0>
   115ac:	bl	111e0 <__errno_location@plt>
   115b0:	ldr	r2, [pc, #48]	; 115e8 <__assert_fail@plt+0x2f4>
   115b4:	ldr	r1, [r0]
   115b8:	mov	r0, #0
   115bc:	bl	11120 <error@plt>
   115c0:	b	11554 <__assert_fail@plt+0x260>
   115c4:	andeq	sl, r2, r4, asr #7
   115c8:	andeq	sl, r2, r8, lsl r1
   115cc:	andeq	r8, r1, ip, lsr r9
   115d0:	andeq	r8, r1, r0, lsl #19
   115d4:			; <UNDEFINED> instruction: 0x0002a3b0
   115d8:	andeq	sl, r2, r4, lsl r4
   115dc:	muleq	r1, r0, r9
   115e0:	andeq	r8, r1, r4, asr r9
   115e4:	andeq	r8, r1, r8, ror #18
   115e8:	andeq	r8, r1, r4, lsl #19
   115ec:	push	{r4, r5, r6, r7, lr}
   115f0:	sub	sp, sp, #20
   115f4:	mov	r5, r0
   115f8:	mov	r4, r1
   115fc:	mov	r7, r2
   11600:	bl	1118c <__ctype_b_loc@plt>
   11604:	ldrb	r3, [r5]
   11608:	ldr	r2, [r0]
   1160c:	lsl	r3, r3, #1
   11610:	ldrh	r3, [r2, r3]
   11614:	tst	r3, #2048	; 0x800
   11618:	bne	11668 <__assert_fail@plt+0x374>
   1161c:	ldr	r1, [r4]
   11620:	cmp	r1, #0
   11624:	beq	11644 <__assert_fail@plt+0x350>
   11628:	mov	r0, r5
   1162c:	bl	110f0 <strcasecmp@plt>
   11630:	cmp	r0, #0
   11634:	beq	116b0 <__assert_fail@plt+0x3bc>
   11638:	ldr	r1, [r4, #8]!
   1163c:	cmp	r1, #0
   11640:	bne	11628 <__assert_fail@plt+0x334>
   11644:	str	r5, [sp]
   11648:	mov	r3, r7
   1164c:	ldr	r2, [pc, #100]	; 116b8 <__assert_fail@plt+0x3c4>
   11650:	mov	r1, #0
   11654:	mov	r0, #1
   11658:	bl	11120 <error@plt>
   1165c:	mvn	r0, #0
   11660:	add	sp, sp, #20
   11664:	pop	{r4, r5, r6, r7, pc}
   11668:	mov	r2, #0
   1166c:	add	r1, sp, #12
   11670:	mov	r0, r5
   11674:	bl	111b0 <strtoul@plt>
   11678:	mov	r4, r0
   1167c:	ldr	r3, [sp, #12]
   11680:	ldrb	r3, [r3]
   11684:	cmp	r0, #1016	; 0x3f8
   11688:	cmpls	r3, #0
   1168c:	beq	116a8 <__assert_fail@plt+0x3b4>
   11690:	str	r5, [sp]
   11694:	mov	r3, r7
   11698:	ldr	r2, [pc, #28]	; 116bc <__assert_fail@plt+0x3c8>
   1169c:	mov	r1, #0
   116a0:	mov	r0, #1
   116a4:	bl	11120 <error@plt>
   116a8:	mov	r0, r4
   116ac:	b	11660 <__assert_fail@plt+0x36c>
   116b0:	ldr	r0, [r4, #4]
   116b4:	b	11660 <__assert_fail@plt+0x36c>
   116b8:	ldrdeq	r8, [r1], -r4
   116bc:			; <UNDEFINED> instruction: 0x000189bc
   116c0:	push	{r4, r5, r6, lr}
   116c4:	mov	r4, r0
   116c8:	mov	r1, #46	; 0x2e
   116cc:	bl	111c8 <strchr@plt>
   116d0:	cmp	r0, #0
   116d4:	beq	11728 <__assert_fail@plt+0x434>
   116d8:	add	r5, r0, #1
   116dc:	mov	r3, #0
   116e0:	strb	r3, [r0]
   116e4:	ldr	r2, [pc, #88]	; 11744 <__assert_fail@plt+0x450>
   116e8:	ldr	r1, [pc, #88]	; 11748 <__assert_fail@plt+0x454>
   116ec:	mov	r0, r4
   116f0:	bl	115ec <__assert_fail@plt+0x2f8>
   116f4:	mov	r4, r0
   116f8:	cmp	r5, #0
   116fc:	beq	11720 <__assert_fail@plt+0x42c>
   11700:	ldr	r2, [pc, #68]	; 1174c <__assert_fail@plt+0x458>
   11704:	ldr	r1, [pc, #68]	; 11750 <__assert_fail@plt+0x45c>
   11708:	mov	r0, r5
   1170c:	bl	115ec <__assert_fail@plt+0x2f8>
   11710:	and	r4, r4, #1016	; 0x3f8
   11714:	and	r0, r0, #7
   11718:	orr	r0, r4, r0
   1171c:	pop	{r4, r5, r6, pc}
   11720:	mov	r0, #5
   11724:	b	11710 <__assert_fail@plt+0x41c>
   11728:	ldr	r2, [pc, #20]	; 11744 <__assert_fail@plt+0x450>
   1172c:	ldr	r1, [pc, #20]	; 11748 <__assert_fail@plt+0x454>
   11730:	mov	r0, r4
   11734:	bl	115ec <__assert_fail@plt+0x2f8>
   11738:	mov	r4, r0
   1173c:	mov	r0, #5
   11740:	b	11710 <__assert_fail@plt+0x41c>
   11744:	andeq	r8, r1, r8, ror #19
   11748:	andeq	sl, r2, ip, lsl r1
   1174c:	strdeq	r8, [r1], -r4
   11750:	ldrdeq	sl, [r2], -r4
   11754:	push	{r4, lr}
   11758:	sub	sp, sp, #24
   1175c:	mov	r4, r1
   11760:	sub	r0, r0, #52	; 0x34
   11764:	cmp	r0, #65	; 0x41
   11768:	ldrls	pc, [pc, r0, lsl #2]
   1176c:	b	119c4 <__assert_fail@plt+0x6d0>
   11770:	andeq	r1, r1, r8, ror r8
   11774:	andeq	r1, r1, r4, asr #19
   11778:	muleq	r1, r0, r8
   1177c:	andeq	r1, r1, r4, asr #19
   11780:	andeq	r1, r1, r4, asr #19
   11784:	andeq	r1, r1, r4, asr #19
   11788:	andeq	r1, r1, r4, asr #19
   1178c:	andeq	r1, r1, r4, asr #19
   11790:	andeq	r1, r1, r4, asr #19
   11794:	andeq	r1, r1, r4, asr #19
   11798:	andeq	r1, r1, r4, asr #19
   1179c:	andeq	r1, r1, r4, asr #19
   117a0:	andeq	r1, r1, r4, asr #19
   117a4:	andeq	r1, r1, r4, asr #19
   117a8:	andeq	r1, r1, r4, asr #19
   117ac:	andeq	r1, r1, r4, asr #19
   117b0:	andeq	r1, r1, r4, asr #19
   117b4:	andeq	r1, r1, r4, asr #19
   117b8:	andeq	r1, r1, r4, asr #19
   117bc:	andeq	r1, r1, r4, asr #19
   117c0:	andeq	r1, r1, r4, asr #19
   117c4:	andeq	r1, r1, r4, asr #19
   117c8:	andeq	r1, r1, r4, asr #19
   117cc:	andeq	r1, r1, r4, asr #19
   117d0:	andeq	r1, r1, r4, asr #19
   117d4:	andeq	r1, r1, r4, asr #19
   117d8:	andeq	r1, r1, r4, asr #19
   117dc:	andeq	r1, r1, r4, asr #19
   117e0:	andeq	r1, r1, r4, asr #19
   117e4:	andeq	r1, r1, r4, asr #19
   117e8:	andeq	r1, r1, r4, asr #19
   117ec:	ldrdeq	r1, [r1], -r4
   117f0:	andeq	r1, r1, r4, asr #19
   117f4:	andeq	r1, r1, r4, asr #19
   117f8:	andeq	r1, r1, r4, asr #19
   117fc:	andeq	r1, r1, r4, asr #19
   11800:	andeq	r1, r1, r4, asr #19
   11804:	andeq	r1, r1, r4, asr #19
   11808:	andeq	r1, r1, r4, asr #19
   1180c:	andeq	r1, r1, r4, asr #19
   11810:	andeq	r1, r1, r4, asr #19
   11814:	andeq	r1, r1, r4, asr #19
   11818:	andeq	r1, r1, r4, asr #19
   1181c:	andeq	r1, r1, r4, asr #19
   11820:	andeq	r1, r1, r4, asr #19
   11824:	andeq	r1, r1, r4, asr #19
   11828:	andeq	r1, r1, r4, asr #19
   1182c:	andeq	r1, r1, r4, asr #19
   11830:	andeq	r1, r1, r4, asr #19
   11834:	andeq	r1, r1, r4, asr #19
   11838:	andeq	r1, r1, r4, asr #18
   1183c:	andeq	r1, r1, r4, asr #19
   11840:	andeq	r1, r1, r4, lsr #17
   11844:	andeq	r1, r1, r4, ror #17
   11848:	andeq	r1, r1, r4, asr #19
   1184c:	andeq	r1, r1, r4, asr #19
   11850:	andeq	r1, r1, r4, asr #19
   11854:	andeq	r1, r1, r4, asr #19
   11858:	andeq	r1, r1, r4, asr #19
   1185c:	andeq	r1, r1, r4, asr #19
   11860:	muleq	r1, ip, r9
   11864:	andeq	r1, r1, r4, asr #19
   11868:	andeq	r1, r1, r4, asr #19
   1186c:	andeq	r1, r1, ip, lsr #18
   11870:			; <UNDEFINED> instruction: 0x000119b4
   11874:			; <UNDEFINED> instruction: 0x000118bc
   11878:	mov	r2, #2
   1187c:	ldr	r3, [pc, #328]	; 119cc <__assert_fail@plt+0x6d8>
   11880:	str	r2, [r3, #12]
   11884:	mov	r0, #0
   11888:	add	sp, sp, #24
   1188c:	pop	{r4, pc}
   11890:	mov	r2, #10
   11894:	ldr	r3, [pc, #304]	; 119cc <__assert_fail@plt+0x6d8>
   11898:	str	r2, [r3, #12]
   1189c:	mov	r0, #0
   118a0:	b	11888 <__assert_fail@plt+0x594>
   118a4:	ldr	r3, [pc, #292]	; 119d0 <__assert_fail@plt+0x6dc>
   118a8:	str	r1, [r3, #292]	; 0x124
   118ac:	mov	r0, #0
   118b0:	ldr	r3, [pc, #276]	; 119cc <__assert_fail@plt+0x6d8>
   118b4:	str	r0, [r3, #16]
   118b8:	b	11888 <__assert_fail@plt+0x594>
   118bc:	ldr	r3, [pc, #264]	; 119cc <__assert_fail@plt+0x6d8>
   118c0:	str	r1, [r3, #16]
   118c4:	mov	r0, #0
   118c8:	ldr	r3, [pc, #256]	; 119d0 <__assert_fail@plt+0x6dc>
   118cc:	str	r0, [r3, #292]	; 0x124
   118d0:	b	11888 <__assert_fail@plt+0x594>
   118d4:	ldr	r3, [pc, #240]	; 119cc <__assert_fail@plt+0x6d8>
   118d8:	str	r1, [r3, #20]
   118dc:	mov	r0, #0
   118e0:	b	11888 <__assert_fail@plt+0x594>
   118e4:	ldr	r2, [pc, #224]	; 119cc <__assert_fail@plt+0x6d8>
   118e8:	ldr	r3, [r2]
   118ec:	orr	r3, r3, #1
   118f0:	str	r3, [r2]
   118f4:	cmp	r1, #0
   118f8:	movne	r3, r2
   118fc:	strne	r1, [r3, #4]
   11900:	movne	r0, #0
   11904:	bne	11888 <__assert_fail@plt+0x594>
   11908:	bl	11198 <getpid@plt>
   1190c:	mov	r2, sp
   11910:	asr	r1, r0, #31
   11914:	bl	1319c <argp_parse@@Base+0xd04>
   11918:	bl	13c64 <argp_parse@@Base+0x17cc>
   1191c:	ldr	r3, [pc, #168]	; 119cc <__assert_fail@plt+0x6d8>
   11920:	str	r0, [r3, #4]
   11924:	mov	r0, #0
   11928:	b	11888 <__assert_fail@plt+0x594>
   1192c:	ldr	r2, [pc, #152]	; 119cc <__assert_fail@plt+0x6d8>
   11930:	ldr	r3, [r2]
   11934:	orr	r3, r3, #32
   11938:	str	r3, [r2]
   1193c:	mov	r0, #0
   11940:	b	11888 <__assert_fail@plt+0x594>
   11944:	ldr	r1, [pc, #136]	; 119d4 <__assert_fail@plt+0x6e0>
   11948:	mov	r0, r4
   1194c:	bl	11030 <strcmp@plt>
   11950:	cmp	r0, #0
   11954:	moveq	r0, #0
   11958:	beq	11888 <__assert_fail@plt+0x594>
   1195c:	ldr	r3, [pc, #116]	; 119d8 <__assert_fail@plt+0x6e4>
   11960:	ldr	r2, [r3]
   11964:	ldr	r1, [pc, #112]	; 119dc <__assert_fail@plt+0x6e8>
   11968:	mov	r0, r4
   1196c:	bl	11174 <freopen64@plt>
   11970:	cmp	r0, #0
   11974:	movne	r0, #0
   11978:	bne	11888 <__assert_fail@plt+0x594>
   1197c:	bl	111e0 <__errno_location@plt>
   11980:	mov	r3, r4
   11984:	ldr	r2, [pc, #84]	; 119e0 <__assert_fail@plt+0x6ec>
   11988:	ldr	r1, [r0]
   1198c:	mov	r0, #1
   11990:	bl	11120 <error@plt>
   11994:	mov	r0, #0
   11998:	b	11888 <__assert_fail@plt+0x594>
   1199c:	mov	r0, r1
   119a0:	bl	116c0 <__assert_fail@plt+0x3cc>
   119a4:	ldr	r3, [pc, #36]	; 119d0 <__assert_fail@plt+0x6dc>
   119a8:	str	r0, [r3]
   119ac:	mov	r0, #0
   119b0:	b	11888 <__assert_fail@plt+0x594>
   119b4:	ldr	r3, [pc, #16]	; 119cc <__assert_fail@plt+0x6d8>
   119b8:	str	r1, [r3, #8]
   119bc:	mov	r0, #0
   119c0:	b	11888 <__assert_fail@plt+0x594>
   119c4:	mov	r0, #7
   119c8:	b	11888 <__assert_fail@plt+0x594>
   119cc:	andeq	sl, r2, r4, asr #7
   119d0:	andeq	sl, r2, r8, lsl r1
   119d4:	andeq	r8, r1, r0, lsl #20
   119d8:			; <UNDEFINED> instruction: 0x0002a3b8
   119dc:	andeq	r9, r1, r4, lsl #11
   119e0:	andeq	r8, r1, r4, lsl #20
   119e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119e8:	sub	sp, sp, #172	; 0xac
   119ec:	mov	r5, r0
   119f0:	mov	r6, r1
   119f4:	mov	r4, #0
   119f8:	str	r4, [sp, #160]	; 0xa0
   119fc:	ldr	r0, [r1]
   11a00:	bl	13204 <argp_parse@@Base+0xd6c>
   11a04:	ldr	r2, [pc, #1128]	; 11e74 <__assert_fail@plt+0xb80>
   11a08:	ldr	r3, [pc, #1128]	; 11e78 <__assert_fail@plt+0xb84>
   11a0c:	str	r2, [r3]
   11a10:	ldr	r7, [pc, #1124]	; 11e7c <__assert_fail@plt+0xb88>
   11a14:	add	r1, r7, #296	; 0x128
   11a18:	ldr	r0, [pc, #1120]	; 11e80 <__assert_fail@plt+0xb8c>
   11a1c:	bl	12fa4 <argp_parse@@Base+0xb0c>
   11a20:	str	r4, [sp, #4]
   11a24:	add	r3, sp, #164	; 0xa4
   11a28:	str	r3, [sp]
   11a2c:	mov	r3, r4
   11a30:	mov	r2, r6
   11a34:	mov	r1, r5
   11a38:	add	r0, r7, #304	; 0x130
   11a3c:	bl	12498 <argp_parse@@Base>
   11a40:	ldr	r4, [sp, #164]	; 0xa4
   11a44:	sub	r5, r5, r4
   11a48:	ldr	r3, [pc, #1076]	; 11e84 <__assert_fail@plt+0xb90>
   11a4c:	ldr	r3, [r3, #8]
   11a50:	cmp	r3, #0
   11a54:	beq	11ba0 <__assert_fail@plt+0x8ac>
   11a58:	ldr	r3, [pc, #1052]	; 11e7c <__assert_fail@plt+0xb88>
   11a5c:	ldr	r7, [r3, #292]	; 0x124
   11a60:	cmp	r7, #0
   11a64:	beq	11bdc <__assert_fail@plt+0x8e8>
   11a68:	mov	r1, #47	; 0x2f
   11a6c:	mov	r0, r7
   11a70:	bl	111c8 <strchr@plt>
   11a74:	cmp	r0, #0
   11a78:	beq	11bdc <__assert_fail@plt+0x8e8>
   11a7c:	ldr	r3, [pc, #1024]	; 11e84 <__assert_fail@plt+0xb90>
   11a80:	ldr	r3, [r3, #16]
   11a84:	cmp	r3, #0
   11a88:	beq	11a94 <__assert_fail@plt+0x7a0>
   11a8c:	ldr	r2, [pc, #1000]	; 11e7c <__assert_fail@plt+0xb88>
   11a90:	str	r3, [r2, #292]	; 0x124
   11a94:	ldr	r3, [pc, #992]	; 11e7c <__assert_fail@plt+0xb88>
   11a98:	ldr	r0, [r3, #292]	; 0x124
   11a9c:	bl	111bc <strlen@plt>
   11aa0:	cmp	r0, #107	; 0x6b
   11aa4:	bhi	11c78 <__assert_fail@plt+0x984>
   11aa8:	ldr	r3, [pc, #972]	; 11e7c <__assert_fail@plt+0xb88>
   11aac:	ldr	r1, [r3, #292]	; 0x124
   11ab0:	add	r0, sp, #50	; 0x32
   11ab4:	bl	11114 <strcpy@plt>
   11ab8:	mov	r0, #1
   11abc:	strh	r0, [sp, #48]	; 0x30
   11ac0:	mov	r2, #0
   11ac4:	mov	r1, #2
   11ac8:	bl	112ac <socket@plt>
   11acc:	ldr	r3, [pc, #948]	; 11e88 <__assert_fail@plt+0xb94>
   11ad0:	str	r0, [r3]
   11ad4:	cmp	r0, #0
   11ad8:	blt	11dd4 <__assert_fail@plt+0xae0>
   11adc:	mov	r2, #110	; 0x6e
   11ae0:	add	r1, sp, #48	; 0x30
   11ae4:	ldr	r3, [pc, #924]	; 11e88 <__assert_fail@plt+0xb94>
   11ae8:	ldr	r0, [r3]
   11aec:	bl	112e8 <connect@plt>
   11af0:	cmp	r0, #0
   11af4:	bne	11dec <__assert_fail@plt+0xaf8>
   11af8:	cmp	r5, #0
   11afc:	ble	11e04 <__assert_fail@plt+0xb10>
   11b00:	add	r4, r6, r4, lsl #2
   11b04:	mov	r7, r4
   11b08:	add	r9, r4, r5, lsl #2
   11b0c:	mov	r8, #0
   11b10:	ldr	r0, [r7], #4
   11b14:	bl	111bc <strlen@plt>
   11b18:	add	r0, r0, #1
   11b1c:	add	r8, r8, r0
   11b20:	cmp	r7, r9
   11b24:	bne	11b10 <__assert_fail@plt+0x81c>
   11b28:	mov	r0, r8
   11b2c:	bl	136dc <argp_parse@@Base+0x1244>
   11b30:	mov	sl, r0
   11b34:	str	r0, [sp, #160]	; 0xa0
   11b38:	sub	r4, r4, #4
   11b3c:	mov	r9, r0
   11b40:	mov	r8, #0
   11b44:	mov	r6, #32
   11b48:	ldr	fp, [r4, #4]!
   11b4c:	mov	r0, fp
   11b50:	bl	111bc <strlen@plt>
   11b54:	mov	r7, r0
   11b58:	mov	r2, r0
   11b5c:	mov	r1, fp
   11b60:	mov	r0, r9
   11b64:	bl	110a8 <memcpy@plt>
   11b68:	add	r7, r9, r7
   11b6c:	add	r9, r7, #1
   11b70:	strb	r6, [r7]
   11b74:	add	r8, r8, #1
   11b78:	cmp	r5, r8
   11b7c:	bne	11b48 <__assert_fail@plt+0x854>
   11b80:	mov	r3, #0
   11b84:	strb	r3, [r7]
   11b88:	mov	r0, sl
   11b8c:	bl	11428 <__assert_fail@plt+0x134>
   11b90:	ldr	r0, [sp, #160]	; 0xa0
   11b94:	bl	1308c <argp_parse@@Base+0xbf4>
   11b98:	mov	r0, #0
   11b9c:	bl	111a4 <exit@plt>
   11ba0:	ldr	r0, [pc, #740]	; 11e8c <__assert_fail@plt+0xb98>
   11ba4:	bl	1112c <getenv@plt>
   11ba8:	ldr	r3, [pc, #724]	; 11e84 <__assert_fail@plt+0xb90>
   11bac:	str	r0, [r3, #8]
   11bb0:	cmp	r0, #0
   11bb4:	bne	11a58 <__assert_fail@plt+0x764>
   11bb8:	bl	11060 <getuid@plt>
   11bbc:	bl	11048 <getpwuid@plt>
   11bc0:	cmp	r0, #0
   11bc4:	ldrne	r0, [r0]
   11bc8:	ldreq	r0, [pc, #704]	; 11e90 <__assert_fail@plt+0xb9c>
   11bcc:	bl	13c64 <argp_parse@@Base+0x17cc>
   11bd0:	ldr	r3, [pc, #684]	; 11e84 <__assert_fail@plt+0xb90>
   11bd4:	str	r0, [r3, #8]
   11bd8:	b	11a58 <__assert_fail@plt+0x764>
   11bdc:	ldr	r3, [pc, #672]	; 11e84 <__assert_fail@plt+0xb90>
   11be0:	ldr	r3, [r3, #16]
   11be4:	cmp	r3, #0
   11be8:	bne	11a8c <__assert_fail@plt+0x798>
   11bec:	ldrb	r3, [r7]
   11bf0:	cmp	r3, #91	; 0x5b
   11bf4:	beq	11c8c <__assert_fail@plt+0x998>
   11bf8:	mov	r1, #58	; 0x3a
   11bfc:	mov	r0, r7
   11c00:	bl	1124c <strrchr@plt>
   11c04:	cmp	r0, #0
   11c08:	beq	11cc0 <__assert_fail@plt+0x9cc>
   11c0c:	add	sl, r0, #1
   11c10:	mov	r3, #0
   11c14:	strb	r3, [r0]
   11c18:	ldr	r3, [pc, #628]	; 11e94 <__assert_fail@plt+0xba0>
   11c1c:	cmp	sl, #0
   11c20:	moveq	sl, r3
   11c24:	mov	r2, #32
   11c28:	mov	r1, #0
   11c2c:	add	r0, sp, #16
   11c30:	bl	11204 <memset@plt>
   11c34:	mov	r3, #2
   11c38:	str	r3, [sp, #24]
   11c3c:	ldr	r3, [pc, #576]	; 11e84 <__assert_fail@plt+0xb90>
   11c40:	ldr	r3, [r3, #12]
   11c44:	str	r3, [sp, #20]
   11c48:	add	r3, sp, #8
   11c4c:	add	r2, sp, #16
   11c50:	mov	r1, sl
   11c54:	ldr	r0, [pc, #544]	; 11e7c <__assert_fail@plt+0xb88>
   11c58:	ldr	r0, [r0, #292]	; 0x124
   11c5c:	bl	112a0 <getaddrinfo@plt>
   11c60:	cmp	r0, #0
   11c64:	blt	11cc8 <__assert_fail@plt+0x9d4>
   11c68:	ldr	r7, [sp, #8]
   11c6c:	ldr	r8, [pc, #532]	; 11e88 <__assert_fail@plt+0xb94>
   11c70:	ldr	fp, [pc, #524]	; 11e84 <__assert_fail@plt+0xb90>
   11c74:	b	11d24 <__assert_fail@plt+0xa30>
   11c78:	ldr	r2, [pc, #536]	; 11e98 <__assert_fail@plt+0xba4>
   11c7c:	mov	r1, #0
   11c80:	mov	r0, #1
   11c84:	bl	11120 <error@plt>
   11c88:	b	11aa8 <__assert_fail@plt+0x7b4>
   11c8c:	add	r0, r7, #1
   11c90:	ldr	r3, [pc, #484]	; 11e7c <__assert_fail@plt+0xb88>
   11c94:	str	r0, [r3, #292]	; 0x124
   11c98:	mov	r1, #93	; 0x5d
   11c9c:	bl	111c8 <strchr@plt>
   11ca0:	cmp	r0, #0
   11ca4:	beq	11cc0 <__assert_fail@plt+0x9cc>
   11ca8:	mov	r3, #0
   11cac:	strb	r3, [r0]
   11cb0:	ldrb	r3, [r0, #1]
   11cb4:	cmp	r3, #58	; 0x3a
   11cb8:	addeq	sl, r0, #2
   11cbc:	beq	11c18 <__assert_fail@plt+0x924>
   11cc0:	ldr	sl, [pc, #460]	; 11e94 <__assert_fail@plt+0xba0>
   11cc4:	b	11c24 <__assert_fail@plt+0x930>
   11cc8:	ldr	r3, [pc, #428]	; 11e7c <__assert_fail@plt+0xb88>
   11ccc:	ldr	r7, [r3, #292]	; 0x124
   11cd0:	bl	11090 <gai_strerror@plt>
   11cd4:	str	r0, [sp, #4]
   11cd8:	str	sl, [sp]
   11cdc:	mov	r3, r7
   11ce0:	ldr	r2, [pc, #436]	; 11e9c <__assert_fail@plt+0xba8>
   11ce4:	mov	r1, #0
   11ce8:	mov	r0, #1
   11cec:	bl	11120 <error@plt>
   11cf0:	b	11c68 <__assert_fail@plt+0x974>
   11cf4:	ldr	r3, [sp, #12]
   11cf8:	ldr	r2, [r3, #16]
   11cfc:	ldr	r1, [r3, #20]
   11d00:	ldr	r0, [r8]
   11d04:	bl	111f8 <bind@plt>
   11d08:	cmp	r0, #0
   11d0c:	beq	11d94 <__assert_fail@plt+0xaa0>
   11d10:	ldr	r0, [sp, #12]
   11d14:	bl	11294 <freeaddrinfo@plt>
   11d18:	ldr	r0, [r8]
   11d1c:	bl	112d0 <close@plt>
   11d20:	ldr	r7, [r7, #28]
   11d24:	cmp	r7, #0
   11d28:	beq	11e44 <__assert_fail@plt+0xb50>
   11d2c:	ldr	r2, [r7, #12]
   11d30:	ldr	r1, [r7, #8]
   11d34:	ldr	r0, [r7, #4]
   11d38:	bl	112ac <socket@plt>
   11d3c:	str	r0, [r8]
   11d40:	cmp	r0, #0
   11d44:	blt	11d20 <__assert_fail@plt+0xa2c>
   11d48:	ldr	r9, [fp, #20]
   11d4c:	cmp	r9, #0
   11d50:	beq	11d9c <__assert_fail@plt+0xaa8>
   11d54:	mov	r2, #32
   11d58:	mov	r1, #0
   11d5c:	add	r0, sp, #48	; 0x30
   11d60:	bl	11204 <memset@plt>
   11d64:	ldr	r3, [r7, #4]
   11d68:	str	r3, [sp, #52]	; 0x34
   11d6c:	add	r3, sp, #12
   11d70:	add	r2, sp, #48	; 0x30
   11d74:	mov	r1, #0
   11d78:	mov	r0, r9
   11d7c:	bl	112a0 <getaddrinfo@plt>
   11d80:	cmp	r0, #0
   11d84:	beq	11cf4 <__assert_fail@plt+0xa00>
   11d88:	ldr	r0, [r8]
   11d8c:	bl	112d0 <close@plt>
   11d90:	b	11d20 <__assert_fail@plt+0xa2c>
   11d94:	ldr	r0, [sp, #12]
   11d98:	bl	11294 <freeaddrinfo@plt>
   11d9c:	ldr	r2, [r7, #16]
   11da0:	ldr	r1, [r7, #20]
   11da4:	ldr	r0, [r8]
   11da8:	bl	112e8 <connect@plt>
   11dac:	cmp	r0, #0
   11db0:	bne	11dc8 <__assert_fail@plt+0xad4>
   11db4:	ldr	r0, [sp, #8]
   11db8:	cmp	r0, #0
   11dbc:	beq	11af8 <__assert_fail@plt+0x804>
   11dc0:	bl	11294 <freeaddrinfo@plt>
   11dc4:	b	11af8 <__assert_fail@plt+0x804>
   11dc8:	ldr	r0, [r8]
   11dcc:	bl	112d0 <close@plt>
   11dd0:	b	11d20 <__assert_fail@plt+0xa2c>
   11dd4:	bl	111e0 <__errno_location@plt>
   11dd8:	ldr	r2, [pc, #192]	; 11ea0 <__assert_fail@plt+0xbac>
   11ddc:	ldr	r1, [r0]
   11de0:	mov	r0, #1
   11de4:	bl	11120 <error@plt>
   11de8:	b	11adc <__assert_fail@plt+0x7e8>
   11dec:	bl	111e0 <__errno_location@plt>
   11df0:	ldr	r2, [pc, #172]	; 11ea4 <__assert_fail@plt+0xbb0>
   11df4:	ldr	r1, [r0]
   11df8:	mov	r0, #1
   11dfc:	bl	11120 <error@plt>
   11e00:	b	11af8 <__assert_fail@plt+0x804>
   11e04:	add	r4, sp, #168	; 0xa8
   11e08:	mov	r3, #0
   11e0c:	str	r3, [r4, #-120]!	; 0xffffff88
   11e10:	ldr	r6, [pc, #144]	; 11ea8 <__assert_fail@plt+0xbb4>
   11e14:	mov	r5, #10
   11e18:	b	11e24 <__assert_fail@plt+0xb30>
   11e1c:	ldr	r0, [sp, #160]	; 0xa0
   11e20:	bl	11428 <__assert_fail@plt+0x134>
   11e24:	ldr	r3, [r6]
   11e28:	mov	r2, r5
   11e2c:	mov	r1, r4
   11e30:	add	r0, sp, #160	; 0xa0
   11e34:	bl	11024 <__getdelim@plt>
   11e38:	cmp	r0, #0
   11e3c:	bgt	11e1c <__assert_fail@plt+0xb28>
   11e40:	b	11b90 <__assert_fail@plt+0x89c>
   11e44:	ldr	r0, [sp, #8]
   11e48:	cmp	r0, #0
   11e4c:	beq	11e54 <__assert_fail@plt+0xb60>
   11e50:	bl	11294 <freeaddrinfo@plt>
   11e54:	str	sl, [sp]
   11e58:	ldr	r3, [pc, #28]	; 11e7c <__assert_fail@plt+0xb88>
   11e5c:	ldr	r3, [r3, #292]	; 0x124
   11e60:	ldr	r2, [pc, #68]	; 11eac <__assert_fail@plt+0xbb8>
   11e64:	mov	r1, #99	; 0x63
   11e68:	mov	r0, #1
   11e6c:	bl	11120 <error@plt>
   11e70:	b	11af8 <__assert_fail@plt+0x804>
   11e74:	andeq	r8, r1, r0, lsl sl
   11e78:	andeq	sl, r2, r8, lsl r4
   11e7c:	andeq	sl, r2, r8, lsl r1
   11e80:	andeq	r8, r1, r8, lsr #20
   11e84:	andeq	sl, r2, r4, asr #7
   11e88:	andeq	sl, r2, r4, lsl r4
   11e8c:	andeq	r8, r1, r0, lsr sl
   11e90:	andeq	r8, r1, r8, lsr sl
   11e94:	andeq	r8, r1, r8, lsl #20
   11e98:	andeq	r8, r1, r0, asr #20
   11e9c:	andeq	r8, r1, ip, asr sl
   11ea0:	andeq	r8, r1, r0, ror sl
   11ea4:	andeq	r8, r1, r8, lsl #21
   11ea8:			; <UNDEFINED> instruction: 0x0002a3b8
   11eac:	andeq	r8, r1, r8, ror #20
   11eb0:	ldr	ip, [r0]
   11eb4:	cmp	ip, #0
   11eb8:	beq	11f0c <__assert_fail@plt+0xc18>
   11ebc:	push	{r4, r5, r6, lr}
   11ec0:	mov	ip, r2
   11ec4:	mov	r5, r1
   11ec8:	mov	r4, r0
   11ecc:	ldr	r2, [r0, #32]
   11ed0:	str	r2, [r1, #36]	; 0x24
   11ed4:	ldr	r2, [r0, #24]
   11ed8:	str	r2, [r1, #28]
   11edc:	ldr	r2, [r0, #28]
   11ee0:	str	r2, [r1, #32]
   11ee4:	ldr	r2, [r0, #12]
   11ee8:	str	r2, [r1, #20]
   11eec:	ldr	r6, [r0]
   11ef0:	mov	r2, r1
   11ef4:	mov	r1, r3
   11ef8:	mov	r0, ip
   11efc:	blx	r6
   11f00:	ldr	r3, [r5, #36]	; 0x24
   11f04:	str	r3, [r4, #32]
   11f08:	pop	{r4, r5, r6, pc}
   11f0c:	mov	r0, #7
   11f10:	bx	lr
   11f14:	push	{r4, r5, r6, lr}
   11f18:	ldr	r5, [r0, #16]
   11f1c:	ldr	r3, [r0]
   11f20:	cmp	r3, #0
   11f24:	beq	11f3c <__assert_fail@plt+0xc48>
   11f28:	ldr	r2, [r1, #8]
   11f2c:	add	r2, r2, #1
   11f30:	str	r2, [r1, #8]
   11f34:	mov	r2, #0
   11f38:	b	11f90 <__assert_fail@plt+0xc9c>
   11f3c:	ldr	r3, [r0, #4]
   11f40:	cmp	r3, #0
   11f44:	ldrne	r3, [r1, #8]
   11f48:	addne	r3, r3, #1
   11f4c:	strne	r3, [r1, #8]
   11f50:	cmp	r5, #0
   11f54:	popeq	{r4, r5, r6, pc}
   11f58:	ldr	r0, [r5]
   11f5c:	cmp	r0, #0
   11f60:	popeq	{r4, r5, r6, pc}
   11f64:	mov	r4, r1
   11f68:	mov	r1, r4
   11f6c:	bl	11f14 <__assert_fail@plt+0xc20>
   11f70:	ldr	r3, [r4, #12]
   11f74:	add	r3, r3, #1
   11f78:	str	r3, [r4, #12]
   11f7c:	ldr	r0, [r5, #16]!
   11f80:	cmp	r0, #0
   11f84:	bne	11f68 <__assert_fail@plt+0xc74>
   11f88:	pop	{r4, r5, r6, pc}
   11f8c:	add	r2, r2, #1
   11f90:	add	r3, r3, #24
   11f94:	ldr	r0, [r3, #-20]	; 0xffffffec
   11f98:	cmp	r0, #0
   11f9c:	bne	11f8c <__assert_fail@plt+0xc98>
   11fa0:	ldr	r0, [r3, #-24]	; 0xffffffe8
   11fa4:	cmp	r0, #0
   11fa8:	bne	11f8c <__assert_fail@plt+0xc98>
   11fac:	ldr	r0, [r3, #-8]
   11fb0:	cmp	r0, #0
   11fb4:	bne	11f8c <__assert_fail@plt+0xc98>
   11fb8:	ldr	r0, [r3, #-4]
   11fbc:	cmp	r0, #0
   11fc0:	bne	11f8c <__assert_fail@plt+0xc98>
   11fc4:	add	r0, r2, r2, lsl #1
   11fc8:	ldr	r3, [r1]
   11fcc:	add	r3, r3, r0
   11fd0:	str	r3, [r1]
   11fd4:	ldr	r3, [r1, #4]
   11fd8:	add	r2, r3, r2
   11fdc:	str	r2, [r1, #4]
   11fe0:	b	11f50 <__assert_fail@plt+0xc5c>
   11fe4:	cmp	r0, #86	; 0x56
   11fe8:	beq	11ff4 <__assert_fail@plt+0xd00>
   11fec:	mov	r0, #7
   11ff0:	bx	lr
   11ff4:	push	{r4, lr}
   11ff8:	mov	r4, r2
   11ffc:	ldr	r3, [pc, #100]	; 12068 <__assert_fail@plt+0xd74>
   12000:	ldr	r3, [r3]
   12004:	cmp	r3, #0
   12008:	beq	1202c <__assert_fail@plt+0xd38>
   1200c:	mov	r1, r2
   12010:	ldr	r0, [r2, #48]	; 0x30
   12014:	blx	r3
   12018:	ldr	r3, [r4, #16]
   1201c:	tst	r3, #32
   12020:	beq	12060 <__assert_fail@plt+0xd6c>
   12024:	mov	r0, #0
   12028:	pop	{r4, pc}
   1202c:	ldr	r3, [pc, #56]	; 1206c <__assert_fail@plt+0xd78>
   12030:	ldr	r2, [r3]
   12034:	cmp	r2, #0
   12038:	beq	1204c <__assert_fail@plt+0xd58>
   1203c:	ldr	r1, [pc, #44]	; 12070 <__assert_fail@plt+0xd7c>
   12040:	ldr	r0, [r4, #48]	; 0x30
   12044:	bl	111d4 <fprintf@plt>
   12048:	b	12018 <__assert_fail@plt+0xd24>
   1204c:	ldr	r2, [pc, #32]	; 12074 <__assert_fail@plt+0xd80>
   12050:	ldr	r1, [pc, #32]	; 12078 <__assert_fail@plt+0xd84>
   12054:	mov	r0, r4
   12058:	bl	16dfc <argp_error@@Base>
   1205c:	b	12018 <__assert_fail@plt+0xd24>
   12060:	mov	r0, #0
   12064:	bl	111a4 <exit@plt>
   12068:	andeq	sl, r2, r0, ror #7
   1206c:	andeq	sl, r2, ip, lsl r4
   12070:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   12074:	andeq	r8, r1, ip, asr lr
   12078:	andeq	r8, r1, r4, lsl #20
   1207c:	push	{r4, r5, r6, lr}
   12080:	mov	r4, r2
   12084:	cmn	r0, #3
   12088:	beq	12124 <__assert_fail@plt+0xe30>
   1208c:	mov	r5, r1
   12090:	ble	120bc <__assert_fail@plt+0xdc8>
   12094:	cmn	r0, #2
   12098:	beq	1213c <__assert_fail@plt+0xe48>
   1209c:	cmp	r0, #63	; 0x3f
   120a0:	bne	12180 <__assert_fail@plt+0xe8c>
   120a4:	ldr	r2, [pc, #228]	; 12190 <__assert_fail@plt+0xe9c>
   120a8:	ldr	r1, [r4, #48]	; 0x30
   120ac:	mov	r0, r4
   120b0:	bl	16d40 <argp_state_help@@Base>
   120b4:	mov	r0, #0
   120b8:	pop	{r4, r5, r6, pc}
   120bc:	cmn	r0, #4
   120c0:	bne	12180 <__assert_fail@plt+0xe8c>
   120c4:	mov	r2, #10
   120c8:	mov	r1, #0
   120cc:	ldr	r0, [pc, #192]	; 12194 <__assert_fail@plt+0xea0>
   120d0:	cmp	r5, r1
   120d4:	movne	r0, r5
   120d8:	bl	1103c <strtol@plt>
   120dc:	ldr	r3, [pc, #180]	; 12198 <__assert_fail@plt+0xea4>
   120e0:	str	r0, [r3]
   120e4:	ldr	r2, [r3]
   120e8:	sub	r1, r2, #1
   120ec:	str	r1, [r3]
   120f0:	cmp	r2, #0
   120f4:	ble	12188 <__assert_fail@plt+0xe94>
   120f8:	mov	r5, #1
   120fc:	mov	r4, r3
   12100:	mov	r0, r5
   12104:	bl	110cc <sleep@plt>
   12108:	ldr	r3, [r4]
   1210c:	sub	r2, r3, #1
   12110:	str	r2, [r4]
   12114:	cmp	r3, #0
   12118:	bgt	12100 <__assert_fail@plt+0xe0c>
   1211c:	mov	r0, #0
   12120:	pop	{r4, r5, r6, pc}
   12124:	ldr	r2, [pc, #112]	; 1219c <__assert_fail@plt+0xea8>
   12128:	ldr	r1, [r4, #48]	; 0x30
   1212c:	mov	r0, r4
   12130:	bl	16d40 <argp_state_help@@Base>
   12134:	mov	r0, #0
   12138:	pop	{r4, r5, r6, pc}
   1213c:	ldr	r3, [pc, #92]	; 121a0 <__assert_fail@plt+0xeac>
   12140:	str	r1, [r3]
   12144:	mov	r0, r1
   12148:	bl	12fcc <argp_parse@@Base+0xb34>
   1214c:	str	r0, [r4, #40]	; 0x28
   12150:	ldr	r3, [pc, #76]	; 121a4 <__assert_fail@plt+0xeb0>
   12154:	str	r0, [r3]
   12158:	ldr	r3, [r4, #16]
   1215c:	and	r3, r3, #3
   12160:	cmp	r3, #1
   12164:	beq	12170 <__assert_fail@plt+0xe7c>
   12168:	mov	r0, #0
   1216c:	pop	{r4, r5, r6, pc}
   12170:	ldr	r3, [r4, #8]
   12174:	str	r5, [r3]
   12178:	mov	r0, #0
   1217c:	pop	{r4, r5, r6, pc}
   12180:	mov	r0, #7
   12184:	pop	{r4, r5, r6, pc}
   12188:	mov	r0, #0
   1218c:	pop	{r4, r5, r6, pc}
   12190:	andeq	r0, r0, sl, ror r2
   12194:	andeq	r8, r1, r0, lsl #29
   12198:	ldrdeq	sl, [r2], -ip
   1219c:	andeq	r0, r0, r1, lsl #4
   121a0:	andeq	sl, r2, ip, lsr #7
   121a4:	andeq	sl, r2, r8, lsr #7
   121a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121ac:	sub	sp, sp, #36	; 0x24
   121b0:	str	r0, [sp, #12]
   121b4:	str	r1, [sp, #16]
   121b8:	str	r2, [sp, #20]
   121bc:	mov	r8, r3
   121c0:	ldr	sl, [sp, #72]	; 0x48
   121c4:	ldr	r9, [r0]
   121c8:	ldr	r5, [r0, #16]
   121cc:	cmp	r9, #0
   121d0:	addne	r6, r9, #24
   121d4:	strne	r5, [sp, #28]
   121d8:	strne	r8, [sp, #24]
   121dc:	bne	122e8 <__assert_fail@plt+0xff4>
   121e0:	ldr	r3, [sp, #12]
   121e4:	ldr	r3, [r3, #4]
   121e8:	cmp	r3, #0
   121ec:	moveq	r0, r8
   121f0:	moveq	r8, #0
   121f4:	beq	12274 <__assert_fail@plt+0xf80>
   121f8:	ldr	r2, [sp, #12]
   121fc:	ldr	r3, [r2, #4]
   12200:	str	r3, [r8]
   12204:	str	r2, [r8, #4]
   12208:	ldr	r3, [sl, #4]
   1220c:	str	r3, [r8, #8]
   12210:	mov	r3, #0
   12214:	str	r3, [r8, #12]
   12218:	ldr	r2, [sp, #16]
   1221c:	str	r2, [r8, #16]
   12220:	ldr	r2, [sp, #20]
   12224:	str	r2, [r8, #20]
   12228:	str	r3, [r8, #24]
   1222c:	str	r3, [r8, #32]
   12230:	str	r3, [r8, #28]
   12234:	cmp	r5, r3
   12238:	beq	12270 <__assert_fail@plt+0xf7c>
   1223c:	ldr	r3, [r5]
   12240:	cmp	r3, #0
   12244:	beq	12490 <__assert_fail@plt+0x119c>
   12248:	mov	r3, #0
   1224c:	add	r3, r3, #1
   12250:	ldr	r2, [r5, r3, lsl #4]
   12254:	cmp	r2, #0
   12258:	bne	1224c <__assert_fail@plt+0xf58>
   1225c:	ldr	r2, [sl, #12]
   12260:	str	r2, [r8, #28]
   12264:	ldr	r2, [sl, #12]
   12268:	add	r3, r2, r3, lsl #2
   1226c:	str	r3, [sl, #12]
   12270:	add	r0, r8, #36	; 0x24
   12274:	cmp	r5, #0
   12278:	beq	122b4 <__assert_fail@plt+0xfc0>
   1227c:	ldr	ip, [r5]
   12280:	cmp	ip, #0
   12284:	beq	122b4 <__assert_fail@plt+0xfc0>
   12288:	mov	r2, #0
   1228c:	add	r4, r2, #1
   12290:	str	sl, [sp]
   12294:	mov	r3, r0
   12298:	mov	r1, r8
   1229c:	mov	r0, ip
   122a0:	bl	121a8 <__assert_fail@plt+0xeb4>
   122a4:	ldr	ip, [r5, r4, lsl #4]
   122a8:	mov	r2, r4
   122ac:	cmp	ip, #0
   122b0:	bne	1228c <__assert_fail@plt+0xf98>
   122b4:	add	sp, sp, #36	; 0x24
   122b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122bc:	ldr	r0, [r4, #16]!
   122c0:	cmp	r0, #0
   122c4:	beq	123d0 <__assert_fail@plt+0x10dc>
   122c8:	mov	r1, r7
   122cc:	bl	11030 <strcmp@plt>
   122d0:	cmp	r0, #0
   122d4:	bne	122bc <__assert_fail@plt+0xfc8>
   122d8:	sub	r4, r4, fp
   122dc:	cmn	r4, #15
   122e0:	blt	123d0 <__assert_fail@plt+0x10dc>
   122e4:	add	r6, r6, #24
   122e8:	sub	r2, r6, #24
   122ec:	mov	r8, r6
   122f0:	ldr	r4, [r6, #-20]	; 0xffffffec
   122f4:	cmp	r4, #0
   122f8:	bne	12308 <__assert_fail@plt+0x1014>
   122fc:	ldr	r3, [r6, #-24]	; 0xffffffe8
   12300:	cmp	r3, #0
   12304:	beq	1246c <__assert_fail@plt+0x1178>
   12308:	ldr	r3, [r8, #-12]
   1230c:	and	r1, r3, #4
   12310:	cmp	r1, #0
   12314:	moveq	r9, r2
   12318:	ldr	r5, [r9, #12]
   1231c:	ands	r5, r5, #8
   12320:	bne	122e4 <__assert_fail@plt+0xff0>
   12324:	tst	r3, #8
   12328:	bne	123ac <__assert_fail@plt+0x10b8>
   1232c:	sub	r3, r4, #1
   12330:	cmp	r3, #254	; 0xfe
   12334:	bhi	123ac <__assert_fail@plt+0x10b8>
   12338:	bl	1118c <__ctype_b_loc@plt>
   1233c:	ldr	r3, [r0]
   12340:	lsl	r4, r4, #1
   12344:	ldrh	r3, [r3, r4]
   12348:	tst	r3, #16384	; 0x4000
   1234c:	beq	123ac <__assert_fail@plt+0x10b8>
   12350:	ldr	r3, [sl, #4]
   12354:	add	r2, r3, #1
   12358:	str	r2, [sl, #4]
   1235c:	ldr	r2, [r8, #-20]	; 0xffffffec
   12360:	strb	r2, [r3]
   12364:	ldr	r3, [r9, #8]
   12368:	cmp	r3, #0
   1236c:	beq	123a0 <__assert_fail@plt+0x10ac>
   12370:	ldr	r3, [sl, #4]
   12374:	add	r2, r3, #1
   12378:	str	r2, [sl, #4]
   1237c:	mov	r2, #58	; 0x3a
   12380:	strb	r2, [r3]
   12384:	ldr	r3, [r9, #12]
   12388:	tst	r3, #1
   1238c:	ldrne	r3, [sl, #4]
   12390:	addne	r2, r3, #1
   12394:	strne	r2, [sl, #4]
   12398:	movne	r2, #58	; 0x3a
   1239c:	strbne	r2, [r3]
   123a0:	ldr	r3, [sl, #4]
   123a4:	mov	r2, #0
   123a8:	strb	r2, [r3]
   123ac:	ldr	r7, [r8, #-24]	; 0xffffffe8
   123b0:	cmp	r7, #0
   123b4:	beq	122e4 <__assert_fail@plt+0xff0>
   123b8:	ldr	r3, [sl]
   123bc:	ldr	fp, [r3, #8]
   123c0:	ldr	r0, [fp]
   123c4:	cmp	r0, #0
   123c8:	movne	r4, fp
   123cc:	bne	122c8 <__assert_fail@plt+0xfd4>
   123d0:	ldr	r3, [sl, #8]
   123d4:	str	r7, [r3]
   123d8:	ldr	r3, [sl, #8]
   123dc:	ldr	r2, [r9, #8]
   123e0:	cmp	r2, #0
   123e4:	beq	123fc <__assert_fail@plt+0x1108>
   123e8:	ldr	r5, [r9, #12]
   123ec:	and	r5, r5, #1
   123f0:	cmp	r5, #0
   123f4:	movne	r5, #2
   123f8:	moveq	r5, #1
   123fc:	str	r5, [r3, #4]
   12400:	ldr	r3, [sl, #8]
   12404:	mov	r2, #0
   12408:	str	r2, [r3, #8]
   1240c:	ldr	r1, [sl, #8]
   12410:	ldr	r0, [r8, #-20]	; 0xffffffec
   12414:	cmp	r0, r2
   12418:	ldreq	r0, [r9, #4]
   1241c:	bic	r0, r0, #-16777216	; 0xff000000
   12420:	ldr	r3, [sl]
   12424:	ldr	r3, [r3, #48]	; 0x30
   12428:	ldr	r2, [sp, #24]
   1242c:	sub	r3, r2, r3
   12430:	asr	r3, r3, #2
   12434:	rsb	r2, r3, r3, lsl #3
   12438:	add	r2, r2, r2, lsl #6
   1243c:	add	r2, r3, r2, lsl #3
   12440:	rsb	r2, r2, r2, lsl #15
   12444:	add	r3, r3, r2, lsl #3
   12448:	add	r3, r3, #1
   1244c:	add	r3, r0, r3, lsl #24
   12450:	str	r3, [r1, #12]
   12454:	ldr	r3, [sl, #8]
   12458:	add	r2, r3, #16
   1245c:	str	r2, [sl, #8]
   12460:	mov	r2, #0
   12464:	str	r2, [r3, #16]
   12468:	b	122e4 <__assert_fail@plt+0xff0>
   1246c:	ldr	r3, [r6, #-8]
   12470:	cmp	r3, #0
   12474:	bne	12308 <__assert_fail@plt+0x1014>
   12478:	ldr	r3, [r6, #-4]
   1247c:	cmp	r3, #0
   12480:	bne	12308 <__assert_fail@plt+0x1014>
   12484:	ldr	r5, [sp, #28]
   12488:	ldr	r8, [sp, #24]
   1248c:	b	121f8 <__assert_fail@plt+0xf04>
   12490:	mov	r3, #0
   12494:	b	1225c <__assert_fail@plt+0xf68>

00012498 <argp_parse@@Base>:
   12498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1249c:	add	fp, sp, #32
   124a0:	sub	sp, sp, #220	; 0xdc
   124a4:	mov	r8, r0
   124a8:	str	r1, [fp, #-236]	; 0xffffff14
   124ac:	str	r2, [fp, #-232]	; 0xffffff18
   124b0:	mov	r6, r3
   124b4:	tst	r3, #1
   124b8:	bne	124e8 <argp_parse@@Base+0x50>
   124bc:	ldr	r3, [pc, #2548]	; 12eb8 <argp_parse@@Base+0xa20>
   124c0:	ldr	r3, [r3]
   124c4:	cmp	r3, #0
   124c8:	moveq	r3, r2
   124cc:	ldreq	r2, [r3]
   124d0:	ldreq	r3, [pc, #2528]	; 12eb8 <argp_parse@@Base+0xa20>
   124d4:	streq	r2, [r3]
   124d8:	ldr	r3, [pc, #2524]	; 12ebc <argp_parse@@Base+0xa24>
   124dc:	ldr	r3, [r3]
   124e0:	cmp	r3, #0
   124e4:	beq	126d8 <argp_parse@@Base+0x240>
   124e8:	tst	r6, #16
   124ec:	beq	126f0 <argp_parse@@Base+0x258>
   124f0:	mov	r2, #36	; 0x24
   124f4:	mov	r1, #0
   124f8:	sub	r0, fp, #196	; 0xc4
   124fc:	bl	11204 <memset@plt>
   12500:	ands	r3, r6, #4
   12504:	str	r3, [fp, #-240]	; 0xffffff10
   12508:	moveq	r3, #1
   1250c:	movne	r3, #0
   12510:	str	r3, [fp, #-228]	; 0xffffff1c
   12514:	mov	r3, #0
   12518:	str	r3, [fp, #-224]	; 0xffffff20
   1251c:	str	r3, [fp, #-220]	; 0xffffff24
   12520:	str	r3, [fp, #-216]	; 0xffffff28
   12524:	cmp	r8, r3
   12528:	beq	12538 <argp_parse@@Base+0xa0>
   1252c:	sub	r1, fp, #228	; 0xe4
   12530:	mov	r0, r8
   12534:	bl	11f14 <__assert_fail@plt+0xc20>
   12538:	ldr	r4, [fp, #-220]	; 0xffffff24
   1253c:	add	r4, r4, #1
   12540:	add	r4, r4, r4, lsl #3
   12544:	lsl	r4, r4, #2
   12548:	ldr	r9, [fp, #-216]	; 0xffffff28
   1254c:	lsl	r9, r9, #2
   12550:	add	sl, r9, r4
   12554:	ldr	r5, [fp, #-224]	; 0xffffff20
   12558:	add	r5, r5, #1
   1255c:	add	r5, sl, r5, lsl #4
   12560:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12564:	add	r0, r0, #1
   12568:	add	r0, r0, r5
   1256c:	bl	13cfc <argp_parse@@Base+0x1864>
   12570:	mov	r7, r0
   12574:	str	r0, [fp, #-40]	; 0xffffffd8
   12578:	cmp	r0, #0
   1257c:	moveq	r4, #12
   12580:	beq	12d08 <argp_parse@@Base+0x870>
   12584:	str	r0, [fp, #-112]	; 0xffffff90
   12588:	add	r4, r0, r4
   1258c:	str	r4, [fp, #-104]	; 0xffffff98
   12590:	add	r3, r0, sl
   12594:	str	r3, [fp, #-244]	; 0xffffff0c
   12598:	str	r3, [fp, #-152]	; 0xffffff68
   1259c:	add	sl, r0, r5
   125a0:	str	sl, [fp, #-156]	; 0xffffff64
   125a4:	mov	r3, #1
   125a8:	str	r3, [fp, #-196]	; 0xffffff3c
   125ac:	str	r3, [fp, #-192]	; 0xffffff40
   125b0:	sub	ip, fp, #148	; 0x94
   125b4:	sub	lr, fp, #196	; 0xc4
   125b8:	ldm	lr!, {r0, r1, r2, r3}
   125bc:	stmia	ip!, {r0, r1, r2, r3}
   125c0:	ldm	lr!, {r0, r1, r2, r3}
   125c4:	stmia	ip!, {r0, r1, r2, r3}
   125c8:	ldr	r3, [lr]
   125cc:	str	r3, [ip]
   125d0:	mov	r2, r9
   125d4:	mov	r1, #0
   125d8:	mov	r0, r4
   125dc:	bl	11204 <memset@plt>
   125e0:	sub	r3, fp, #160	; 0xa0
   125e4:	str	r3, [fp, #-212]	; 0xffffff2c
   125e8:	str	sl, [fp, #-208]	; 0xffffff30
   125ec:	ldr	r3, [fp, #-244]	; 0xffffff0c
   125f0:	str	r3, [fp, #-204]	; 0xffffff34
   125f4:	str	r4, [fp, #-200]	; 0xffffff38
   125f8:	tst	r6, #8
   125fc:	beq	12788 <argp_parse@@Base+0x2f0>
   12600:	add	sl, sl, #1
   12604:	str	sl, [fp, #-208]	; 0xffffff30
   12608:	mov	r3, #45	; 0x2d
   1260c:	strb	r3, [r7, r5]
   12610:	mov	r3, #0
   12614:	ldr	r2, [fp, #-208]	; 0xffffff30
   12618:	strb	r3, [r2]
   1261c:	ldr	r2, [fp, #-204]	; 0xffffff34
   12620:	str	r3, [r2]
   12624:	str	r8, [fp, #-160]	; 0xffffff60
   12628:	cmp	r8, r3
   1262c:	beq	127a4 <argp_parse@@Base+0x30c>
   12630:	sub	r3, fp, #212	; 0xd4
   12634:	str	r3, [sp]
   12638:	ldr	r3, [fp, #-112]	; 0xffffff90
   1263c:	mov	r2, #0
   12640:	mov	r1, r2
   12644:	mov	r0, r8
   12648:	bl	121a8 <__assert_fail@plt+0xeb4>
   1264c:	str	r0, [fp, #-108]	; 0xffffff94
   12650:	mov	r2, #56	; 0x38
   12654:	mov	r1, #0
   12658:	sub	r0, fp, #96	; 0x60
   1265c:	bl	11204 <memset@plt>
   12660:	ldr	r3, [fp, #-160]	; 0xffffff60
   12664:	str	r3, [fp, #-96]	; 0xffffffa0
   12668:	ldr	r3, [fp, #-236]	; 0xffffff14
   1266c:	str	r3, [fp, #-92]	; 0xffffffa4
   12670:	ldr	r3, [fp, #-232]	; 0xffffff18
   12674:	str	r3, [fp, #-88]	; 0xffffffa8
   12678:	str	r6, [fp, #-80]	; 0xffffffb0
   1267c:	ldr	r3, [pc, #2108]	; 12ec0 <argp_parse@@Base+0xa28>
   12680:	ldr	r3, [r3]
   12684:	str	r3, [fp, #-52]	; 0xffffffcc
   12688:	ldr	r3, [pc, #2100]	; 12ec4 <argp_parse@@Base+0xa2c>
   1268c:	ldr	r3, [r3]
   12690:	str	r3, [fp, #-48]	; 0xffffffd0
   12694:	sub	r3, fp, #160	; 0xa0
   12698:	str	r3, [fp, #-44]	; 0xffffffd4
   1269c:	mov	r3, #1
   126a0:	str	r3, [fp, #-100]	; 0xffffff9c
   126a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   126a8:	ldr	r2, [fp, #-108]	; 0xffffff94
   126ac:	cmp	r3, r2
   126b0:	bcs	1283c <argp_parse@@Base+0x3a4>
   126b4:	ldr	r2, [fp, #8]
   126b8:	str	r2, [r3, #24]
   126bc:	ldr	r5, [fp, #-112]	; 0xffffff90
   126c0:	ldr	r3, [fp, #-108]	; 0xffffff94
   126c4:	cmp	r5, r3
   126c8:	bcs	12848 <argp_parse@@Base+0x3b0>
   126cc:	ldr	r7, [pc, #2036]	; 12ec8 <argp_parse@@Base+0xa30>
   126d0:	mov	r6, #0
   126d4:	b	127e0 <argp_parse@@Base+0x348>
   126d8:	ldr	r3, [fp, #-232]	; 0xffffff18
   126dc:	ldr	r0, [r3]
   126e0:	bl	12fcc <argp_parse@@Base+0xb34>
   126e4:	ldr	r3, [pc, #2000]	; 12ebc <argp_parse@@Base+0xa24>
   126e8:	str	r0, [r3]
   126ec:	b	124e8 <argp_parse@@Base+0x50>
   126f0:	sub	sp, sp, #72	; 0x48
   126f4:	add	r5, sp, #8
   126f8:	sub	sp, sp, #40	; 0x28
   126fc:	add	r4, sp, #8
   12700:	mov	r1, #0
   12704:	str	r1, [r4]
   12708:	str	r1, [r4, #4]
   1270c:	str	r1, [r4, #8]
   12710:	str	r1, [r4, #12]
   12714:	str	r1, [r4, #20]
   12718:	str	r1, [r4, #24]
   1271c:	str	r5, [r4, #16]
   12720:	mov	r2, #64	; 0x40
   12724:	mov	r0, r5
   12728:	bl	11204 <memset@plt>
   1272c:	cmp	r8, #0
   12730:	addne	r3, r5, #16
   12734:	strne	r8, [r5]
   12738:	moveq	r3, r5
   1273c:	ldr	r2, [pc, #1928]	; 12ecc <argp_parse@@Base+0xa34>
   12740:	str	r2, [r3]
   12744:	ldr	r2, [pc, #1924]	; 12ed0 <argp_parse@@Base+0xa38>
   12748:	ldr	r2, [r2]
   1274c:	cmp	r2, #0
   12750:	beq	12770 <argp_parse@@Base+0x2d8>
   12754:	add	r2, r3, #32
   12758:	ldr	r1, [pc, #1908]	; 12ed4 <argp_parse@@Base+0xa3c>
   1275c:	str	r1, [r3, #16]
   12760:	mov	r3, #0
   12764:	str	r3, [r2]
   12768:	mov	r8, r4
   1276c:	b	124f0 <argp_parse@@Base+0x58>
   12770:	ldr	r2, [pc, #1888]	; 12ed8 <argp_parse@@Base+0xa40>
   12774:	ldr	r2, [r2]
   12778:	cmp	r2, #0
   1277c:	addeq	r2, r3, #16
   12780:	bne	12754 <argp_parse@@Base+0x2bc>
   12784:	b	12760 <argp_parse@@Base+0x2c8>
   12788:	ldr	r3, [fp, #-240]	; 0xffffff10
   1278c:	cmp	r3, #0
   12790:	addne	sl, sl, #1
   12794:	strne	sl, [fp, #-208]	; 0xffffff30
   12798:	movne	r3, #43	; 0x2b
   1279c:	strbne	r3, [r7, r5]
   127a0:	b	12610 <argp_parse@@Base+0x178>
   127a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   127a8:	str	r3, [fp, #-108]	; 0xffffff94
   127ac:	b	12650 <argp_parse@@Base+0x1b8>
   127b0:	mov	r3, r6
   127b4:	mov	r2, r7
   127b8:	sub	r1, fp, #96	; 0x60
   127bc:	mov	r0, r5
   127c0:	bl	11eb0 <__assert_fail@plt+0xbbc>
   127c4:	add	r5, r5, #36	; 0x24
   127c8:	ldr	r3, [fp, #-108]	; 0xffffff94
   127cc:	cmp	r5, r3
   127d0:	bcs	1282c <argp_parse@@Base+0x394>
   127d4:	cmp	r0, #7
   127d8:	cmpne	r0, #0
   127dc:	bne	1282c <argp_parse@@Base+0x394>
   127e0:	ldr	r3, [r5, #16]
   127e4:	cmp	r3, #0
   127e8:	ldrne	r2, [r5, #20]
   127ec:	ldrne	r3, [r3, #28]
   127f0:	ldrne	r3, [r3, r2, lsl #2]
   127f4:	strne	r3, [r5, #24]
   127f8:	ldr	r3, [r5]
   127fc:	cmp	r3, #0
   12800:	bne	127b0 <argp_parse@@Base+0x318>
   12804:	ldr	r3, [r5, #4]
   12808:	ldr	r3, [r3, #16]
   1280c:	cmp	r3, #0
   12810:	beq	127b0 <argp_parse@@Base+0x318>
   12814:	ldr	r3, [r3]
   12818:	cmp	r3, #0
   1281c:	ldrne	r3, [r5, #28]
   12820:	ldrne	r2, [r5, #24]
   12824:	strne	r2, [r3]
   12828:	b	127b0 <argp_parse@@Base+0x318>
   1282c:	mov	r4, r0
   12830:	cmp	r0, #7
   12834:	beq	12848 <argp_parse@@Base+0x3b0>
   12838:	b	12840 <argp_parse@@Base+0x3a8>
   1283c:	mov	r4, #0
   12840:	cmp	r4, #0
   12844:	bne	12d08 <argp_parse@@Base+0x870>
   12848:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1284c:	tst	r3, #2
   12850:	moveq	r3, #1
   12854:	streq	r3, [fp, #-144]	; 0xffffff70
   12858:	beq	12884 <argp_parse@@Base+0x3ec>
   1285c:	mov	r2, #0
   12860:	str	r2, [fp, #-144]	; 0xffffff70
   12864:	tst	r3, #1
   12868:	beq	12884 <argp_parse@@Base+0x3ec>
   1286c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12870:	sub	r3, r3, #4
   12874:	str	r3, [fp, #-88]	; 0xffffffa8
   12878:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1287c:	add	r3, r3, #1
   12880:	str	r3, [fp, #-92]	; 0xffffffa4
   12884:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12888:	ldr	r2, [fp, #-232]	; 0xffffff18
   1288c:	cmp	r2, r3
   12890:	beq	128b0 <argp_parse@@Base+0x418>
   12894:	ldr	r3, [pc, #1568]	; 12ebc <argp_parse@@Base+0xa24>
   12898:	ldr	r3, [r3]
   1289c:	str	r3, [fp, #-56]	; 0xffffffc8
   128a0:	mov	r6, #0
   128a4:	mov	sl, #1
   128a8:	mvn	r9, #0
   128ac:	b	12b20 <argp_parse@@Base+0x688>
   128b0:	ldr	r0, [r2]
   128b4:	cmp	r0, #0
   128b8:	beq	12894 <argp_parse@@Base+0x3fc>
   128bc:	bl	12fcc <argp_parse@@Base+0xb34>
   128c0:	str	r0, [fp, #-56]	; 0xffffffc8
   128c4:	b	128a0 <argp_parse@@Base+0x408>
   128c8:	ldr	r3, [fp, #-84]	; 0xffffffac
   128cc:	str	r3, [fp, #-148]	; 0xffffff6c
   128d0:	str	r9, [fp, #-140]	; 0xffffff74
   128d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   128d8:	tst	r3, #64	; 0x40
   128dc:	beq	129a8 <argp_parse@@Base+0x510>
   128e0:	sub	r3, fp, #148	; 0x94
   128e4:	str	r3, [sp, #4]
   128e8:	str	r6, [sp]
   128ec:	ldr	r3, [fp, #-152]	; 0xffffff68
   128f0:	ldr	r2, [fp, #-156]	; 0xffffff64
   128f4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   128f8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   128fc:	bl	13168 <argp_parse@@Base+0xcd0>
   12900:	mov	r5, r0
   12904:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12908:	str	r4, [fp, #-84]	; 0xffffffac
   1290c:	cmn	r5, #1
   12910:	beq	129d0 <argp_parse@@Base+0x538>
   12914:	cmp	r5, #63	; 0x3f
   12918:	beq	129fc <argp_parse@@Base+0x564>
   1291c:	cmp	r5, #1
   12920:	beq	12a34 <argp_parse@@Base+0x59c>
   12924:	ldr	r4, [fp, #-136]	; 0xffffff78
   12928:	asrs	r3, r5, #24
   1292c:	bne	12ae0 <argp_parse@@Base+0x648>
   12930:	mov	r1, r5
   12934:	ldr	r0, [fp, #-156]	; 0xffffff64
   12938:	bl	111c8 <strchr@plt>
   1293c:	subs	r1, r0, #0
   12940:	beq	12990 <argp_parse@@Base+0x4f8>
   12944:	ldr	r0, [fp, #-112]	; 0xffffff90
   12948:	ldr	r2, [fp, #-108]	; 0xffffff94
   1294c:	cmp	r2, r0
   12950:	bls	12990 <argp_parse@@Base+0x4f8>
   12954:	ldr	r3, [r0, #8]
   12958:	cmp	r1, r3
   1295c:	bcc	12978 <argp_parse@@Base+0x4e0>
   12960:	add	r0, r0, #36	; 0x24
   12964:	cmp	r2, r0
   12968:	bls	12990 <argp_parse@@Base+0x4f8>
   1296c:	ldr	r3, [r0, #8]
   12970:	cmp	r1, r3
   12974:	bcs	12960 <argp_parse@@Base+0x4c8>
   12978:	mov	r3, r4
   1297c:	mov	r2, r5
   12980:	sub	r1, fp, #96	; 0x60
   12984:	bl	11eb0 <__assert_fail@plt+0xbbc>
   12988:	cmp	r0, #7
   1298c:	bne	12b18 <argp_parse@@Base+0x680>
   12990:	ldr	r3, [pc, #1348]	; 12edc <argp_parse@@Base+0xa44>
   12994:	mov	r2, r5
   12998:	ldr	r1, [pc, #1344]	; 12ee0 <argp_parse@@Base+0xa48>
   1299c:	sub	r0, fp, #96	; 0x60
   129a0:	bl	16dfc <argp_error@@Base>
   129a4:	b	12bc0 <argp_parse@@Base+0x728>
   129a8:	sub	r3, fp, #148	; 0x94
   129ac:	str	r3, [sp, #4]
   129b0:	str	r6, [sp]
   129b4:	ldr	r3, [fp, #-152]	; 0xffffff68
   129b8:	ldr	r2, [fp, #-156]	; 0xffffff64
   129bc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   129c0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   129c4:	bl	1310c <argp_parse@@Base+0xc74>
   129c8:	mov	r5, r0
   129cc:	b	12904 <argp_parse@@Base+0x46c>
   129d0:	str	r6, [fp, #-100]	; 0xffffff9c
   129d4:	cmp	r4, #1
   129d8:	ble	12b48 <argp_parse@@Base+0x6b0>
   129dc:	sub	r3, r4, #-1073741823	; 0xc0000001
   129e0:	ldr	r1, [pc, #1276]	; 12ee4 <argp_parse@@Base+0xa4c>
   129e4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   129e8:	ldr	r0, [r2, r3, lsl #2]
   129ec:	bl	11030 <strcmp@plt>
   129f0:	cmp	r0, #0
   129f4:	streq	r4, [fp, #-72]	; 0xffffffb8
   129f8:	b	12b48 <argp_parse@@Base+0x6b0>
   129fc:	ldr	r3, [fp, #-140]	; 0xffffff74
   12a00:	cmn	r3, #1
   12a04:	beq	12924 <argp_parse@@Base+0x48c>
   12a08:	mov	r3, #0
   12a0c:	b	12bd0 <argp_parse@@Base+0x738>
   12a10:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12a14:	tst	r2, #4
   12a18:	movne	r3, #1
   12a1c:	bne	12bd0 <argp_parse@@Base+0x738>
   12a20:	add	r2, r3, #1
   12a24:	str	r2, [fp, #-84]	; 0xffffffac
   12a28:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12a2c:	ldr	r3, [r2, r3, lsl #2]
   12a30:	str	r3, [fp, #-136]	; 0xffffff78
   12a34:	ldr	r7, [fp, #-136]	; 0xffffff78
   12a38:	ldr	r8, [fp, #-84]	; 0xffffffac
   12a3c:	sub	r8, r8, #1
   12a40:	str	r8, [fp, #-84]	; 0xffffffac
   12a44:	ldr	r5, [fp, #-112]	; 0xffffff90
   12a48:	ldr	r3, [fp, #-108]	; 0xffffff94
   12a4c:	cmp	r3, r5
   12a50:	bhi	12a9c <argp_parse@@Base+0x604>
   12a54:	b	12ad8 <argp_parse@@Base+0x640>
   12a58:	ldr	r3, [fp, #-84]	; 0xffffffac
   12a5c:	sub	r3, r3, #1
   12a60:	str	r3, [fp, #-84]	; 0xffffffac
   12a64:	mov	r3, r6
   12a68:	ldr	r2, [pc, #1144]	; 12ee8 <argp_parse@@Base+0xa50>
   12a6c:	sub	r1, fp, #96	; 0x60
   12a70:	mov	r0, r5
   12a74:	bl	11eb0 <__assert_fail@plt+0xbbc>
   12a78:	add	r5, r5, #36	; 0x24
   12a7c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12a80:	cmp	r5, r3
   12a84:	movcs	r3, #0
   12a88:	movcc	r3, #1
   12a8c:	cmp	r0, #7
   12a90:	movne	r3, #0
   12a94:	cmp	r3, #0
   12a98:	beq	12e7c <argp_parse@@Base+0x9e4>
   12a9c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12aa0:	add	r3, r3, #1
   12aa4:	str	r3, [fp, #-84]	; 0xffffffac
   12aa8:	mov	r3, r7
   12aac:	mov	r2, r6
   12ab0:	sub	r1, fp, #96	; 0x60
   12ab4:	mov	r0, r5
   12ab8:	bl	11eb0 <__assert_fail@plt+0xbbc>
   12abc:	cmp	r0, #7
   12ac0:	beq	12a58 <argp_parse@@Base+0x5c0>
   12ac4:	add	r5, r5, #36	; 0x24
   12ac8:	cmp	r0, #0
   12acc:	beq	12e8c <argp_parse@@Base+0x9f4>
   12ad0:	cmp	r0, #7
   12ad4:	bne	12b18 <argp_parse@@Base+0x680>
   12ad8:	mov	r5, #1
   12adc:	b	12bc0 <argp_parse@@Base+0x728>
   12ae0:	ands	r1, r5, #8388608	; 0x800000
   12ae4:	movne	r1, #-16777216	; 0xff000000
   12ae8:	bic	r2, r5, #-16777216	; 0xff000000
   12aec:	add	r0, r3, r3, lsl #3
   12af0:	lsl	r0, r0, #2
   12af4:	sub	r0, r0, #36	; 0x24
   12af8:	mov	r3, r4
   12afc:	orr	r2, r2, r1
   12b00:	sub	r1, fp, #96	; 0x60
   12b04:	ldr	ip, [fp, #-112]	; 0xffffff90
   12b08:	add	r0, ip, r0
   12b0c:	bl	11eb0 <__assert_fail@plt+0xbbc>
   12b10:	cmp	r0, #7
   12b14:	beq	12b60 <argp_parse@@Base+0x6c8>
   12b18:	cmp	r0, #0
   12b1c:	bne	12c70 <argp_parse@@Base+0x7d8>
   12b20:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12b24:	cmp	r3, #0
   12b28:	beq	12b3c <argp_parse@@Base+0x6a4>
   12b2c:	ldr	r2, [fp, #-84]	; 0xffffffac
   12b30:	cmp	r3, r2
   12b34:	strgt	r6, [fp, #-72]	; 0xffffffb8
   12b38:	ble	12b48 <argp_parse@@Base+0x6b0>
   12b3c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12b40:	cmp	r3, #0
   12b44:	bne	128c8 <argp_parse@@Base+0x430>
   12b48:	ldr	r3, [fp, #-84]	; 0xffffffac
   12b4c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12b50:	cmp	r3, r2
   12b54:	blt	12a10 <argp_parse@@Base+0x578>
   12b58:	mov	r3, #1
   12b5c:	b	12bd0 <argp_parse@@Base+0x738>
   12b60:	ldr	r3, [fp, #-152]	; 0xffffff68
   12b64:	ldr	r2, [r3, #12]
   12b68:	cmp	r2, r5
   12b6c:	beq	12ba0 <argp_parse@@Base+0x708>
   12b70:	ldr	r2, [r3]
   12b74:	cmp	r2, #0
   12b78:	beq	12c68 <argp_parse@@Base+0x7d0>
   12b7c:	add	r3, r3, #16
   12b80:	ldr	r2, [r3, #12]
   12b84:	cmp	r2, r5
   12b88:	beq	12ba0 <argp_parse@@Base+0x708>
   12b8c:	ldr	r2, [r3]
   12b90:	cmp	r2, #0
   12b94:	bne	12b7c <argp_parse@@Base+0x6e4>
   12b98:	ldr	r2, [pc, #844]	; 12eec <argp_parse@@Base+0xa54>
   12b9c:	b	12bb0 <argp_parse@@Base+0x718>
   12ba0:	ldr	r2, [r3]
   12ba4:	ldr	r3, [pc, #832]	; 12eec <argp_parse@@Base+0xa54>
   12ba8:	cmp	r2, #0
   12bac:	moveq	r2, r3
   12bb0:	ldr	r3, [pc, #804]	; 12edc <argp_parse@@Base+0xa44>
   12bb4:	ldr	r1, [pc, #820]	; 12ef0 <argp_parse@@Base+0xa58>
   12bb8:	sub	r0, fp, #96	; 0x60
   12bbc:	bl	16dfc <argp_error@@Base>
   12bc0:	add	r5, r5, #1
   12bc4:	bics	r3, r5, #2
   12bc8:	moveq	r3, #1
   12bcc:	movne	r3, #0
   12bd0:	cmp	r3, #0
   12bd4:	moveq	r4, #7
   12bd8:	beq	12c74 <argp_parse@@Base+0x7dc>
   12bdc:	ldr	r3, [fp, #-84]	; 0xffffffac
   12be0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12be4:	cmp	r3, r2
   12be8:	beq	12d14 <argp_parse@@Base+0x87c>
   12bec:	ldr	r2, [fp, #4]
   12bf0:	cmp	r2, #0
   12bf4:	strne	r3, [r2]
   12bf8:	beq	12e10 <argp_parse@@Base+0x978>
   12bfc:	ldr	r5, [fp, #-108]	; 0xffffff94
   12c00:	sub	r5, r5, #36	; 0x24
   12c04:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c08:	cmp	r5, r3
   12c0c:	bcc	12e4c <argp_parse@@Base+0x9b4>
   12c10:	ldr	r7, [pc, #732]	; 12ef4 <argp_parse@@Base+0xa5c>
   12c14:	mov	r6, #0
   12c18:	mov	r3, r6
   12c1c:	mov	r2, r7
   12c20:	sub	r1, fp, #96	; 0x60
   12c24:	mov	r0, r5
   12c28:	bl	11eb0 <__assert_fail@plt+0xbbc>
   12c2c:	sub	r5, r5, #36	; 0x24
   12c30:	ldr	r3, [fp, #-112]	; 0xffffff90
   12c34:	cmp	r5, r3
   12c38:	bcc	12c48 <argp_parse@@Base+0x7b0>
   12c3c:	cmp	r0, #7
   12c40:	cmpne	r0, #0
   12c44:	beq	12c18 <argp_parse@@Base+0x780>
   12c48:	mov	r4, r0
   12c4c:	cmp	r0, #7
   12c50:	moveq	r4, #0
   12c54:	ldr	r5, [fp, #-108]	; 0xffffff94
   12c58:	sub	r5, r5, #36	; 0x24
   12c5c:	cmp	r3, r5
   12c60:	bls	12ccc <argp_parse@@Base+0x834>
   12c64:	b	12d00 <argp_parse@@Base+0x868>
   12c68:	ldr	r2, [pc, #636]	; 12eec <argp_parse@@Base+0xa54>
   12c6c:	b	12bb0 <argp_parse@@Base+0x718>
   12c70:	mov	r4, r0
   12c74:	cmp	r4, #7
   12c78:	beq	12e34 <argp_parse@@Base+0x99c>
   12c7c:	ldr	r5, [fp, #-112]	; 0xffffff90
   12c80:	ldr	r3, [fp, #-108]	; 0xffffff94
   12c84:	cmp	r3, r5
   12c88:	bls	12cb8 <argp_parse@@Base+0x820>
   12c8c:	ldr	r7, [pc, #612]	; 12ef8 <argp_parse@@Base+0xa60>
   12c90:	mov	r6, #0
   12c94:	mov	r3, r6
   12c98:	mov	r2, r7
   12c9c:	sub	r1, fp, #96	; 0x60
   12ca0:	mov	r0, r5
   12ca4:	bl	11eb0 <__assert_fail@plt+0xbbc>
   12ca8:	add	r5, r5, #36	; 0x24
   12cac:	ldr	r3, [fp, #-108]	; 0xffffff94
   12cb0:	cmp	r5, r3
   12cb4:	bcc	12c94 <argp_parse@@Base+0x7fc>
   12cb8:	ldr	r5, [fp, #-108]	; 0xffffff94
   12cbc:	sub	r5, r5, #36	; 0x24
   12cc0:	ldr	r3, [fp, #-112]	; 0xffffff90
   12cc4:	cmp	r3, r5
   12cc8:	bhi	12cf8 <argp_parse@@Base+0x860>
   12ccc:	ldr	r7, [pc, #552]	; 12efc <argp_parse@@Base+0xa64>
   12cd0:	mov	r6, #0
   12cd4:	mov	r3, r6
   12cd8:	mov	r2, r7
   12cdc:	sub	r1, fp, #96	; 0x60
   12ce0:	mov	r0, r5
   12ce4:	bl	11eb0 <__assert_fail@plt+0xbbc>
   12ce8:	sub	r5, r5, #36	; 0x24
   12cec:	ldr	r3, [fp, #-112]	; 0xffffff90
   12cf0:	cmp	r5, r3
   12cf4:	bcs	12cd4 <argp_parse@@Base+0x83c>
   12cf8:	cmp	r4, #7
   12cfc:	moveq	r4, #22
   12d00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12d04:	bl	1308c <argp_parse@@Base+0xbf4>
   12d08:	mov	r0, r4
   12d0c:	sub	sp, fp, #32
   12d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d14:	ldr	r6, [fp, #-112]	; 0xffffff90
   12d18:	ldr	r5, [fp, #-108]	; 0xffffff94
   12d1c:	cmp	r6, r5
   12d20:	bcs	12e54 <argp_parse@@Base+0x9bc>
   12d24:	mov	r4, #0
   12d28:	ldr	r8, [pc, #464]	; 12f00 <argp_parse@@Base+0xa68>
   12d2c:	mov	r7, r4
   12d30:	mov	r0, r4
   12d34:	b	12d54 <argp_parse@@Base+0x8bc>
   12d38:	add	r6, r6, #36	; 0x24
   12d3c:	ldr	r5, [fp, #-108]	; 0xffffff94
   12d40:	cmp	r6, r5
   12d44:	bcs	12d80 <argp_parse@@Base+0x8e8>
   12d48:	cmp	r0, #7
   12d4c:	cmpne	r0, #0
   12d50:	bne	12d78 <argp_parse@@Base+0x8e0>
   12d54:	ldr	r3, [r6, #12]
   12d58:	cmp	r3, #0
   12d5c:	bne	12d38 <argp_parse@@Base+0x8a0>
   12d60:	mov	r3, r7
   12d64:	mov	r2, r8
   12d68:	sub	r1, fp, #96	; 0x60
   12d6c:	mov	r0, r6
   12d70:	bl	11eb0 <__assert_fail@plt+0xbbc>
   12d74:	b	12d38 <argp_parse@@Base+0x8a0>
   12d78:	mov	r4, r0
   12d7c:	b	12de4 <argp_parse@@Base+0x94c>
   12d80:	mov	r4, r0
   12d84:	sub	r5, r5, #36	; 0x24
   12d88:	ldr	r3, [fp, #-112]	; 0xffffff90
   12d8c:	cmp	r3, r5
   12d90:	bhi	12de4 <argp_parse@@Base+0x94c>
   12d94:	cmp	r0, #0
   12d98:	cmpne	r0, #7
   12d9c:	bne	12de4 <argp_parse@@Base+0x94c>
   12da0:	ldr	r7, [pc, #348]	; 12f04 <argp_parse@@Base+0xa6c>
   12da4:	mov	r6, #0
   12da8:	mov	r3, r6
   12dac:	mov	r2, r7
   12db0:	sub	r1, fp, #96	; 0x60
   12db4:	mov	r0, r5
   12db8:	bl	11eb0 <__assert_fail@plt+0xbbc>
   12dbc:	sub	r5, r5, #36	; 0x24
   12dc0:	ldr	r3, [fp, #-112]	; 0xffffff90
   12dc4:	cmp	r5, r3
   12dc8:	bcc	12de0 <argp_parse@@Base+0x948>
   12dcc:	cmp	r0, #7
   12dd0:	cmpne	r0, #0
   12dd4:	beq	12da8 <argp_parse@@Base+0x910>
   12dd8:	mov	r4, r0
   12ddc:	b	12de4 <argp_parse@@Base+0x94c>
   12de0:	mov	r4, r0
   12de4:	cmp	r4, #7
   12de8:	beq	12e68 <argp_parse@@Base+0x9d0>
   12dec:	ldr	r3, [fp, #4]
   12df0:	cmp	r3, #0
   12df4:	beq	12eac <argp_parse@@Base+0xa14>
   12df8:	ldr	r3, [fp, #-84]	; 0xffffffac
   12dfc:	ldr	r2, [fp, #4]
   12e00:	str	r3, [r2]
   12e04:	cmp	r4, #0
   12e08:	beq	12bfc <argp_parse@@Base+0x764>
   12e0c:	b	12c74 <argp_parse@@Base+0x7dc>
   12e10:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12e14:	tst	r3, #2
   12e18:	bne	12e34 <argp_parse@@Base+0x99c>
   12e1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12e20:	cmp	r0, #0
   12e24:	beq	12e34 <argp_parse@@Base+0x99c>
   12e28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12e2c:	ldr	r1, [pc, #212]	; 12f08 <argp_parse@@Base+0xa70>
   12e30:	bl	111d4 <fprintf@plt>
   12e34:	mov	r2, #260	; 0x104
   12e38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12e3c:	sub	r0, fp, #96	; 0x60
   12e40:	bl	16d40 <argp_state_help@@Base>
   12e44:	mov	r4, #7
   12e48:	b	12c7c <argp_parse@@Base+0x7e4>
   12e4c:	mov	r4, #0
   12e50:	b	12cf8 <argp_parse@@Base+0x860>
   12e54:	sub	r5, r5, #36	; 0x24
   12e58:	cmp	r6, r5
   12e5c:	movhi	r4, #0
   12e60:	bls	12da0 <argp_parse@@Base+0x908>
   12e64:	b	12dec <argp_parse@@Base+0x954>
   12e68:	ldr	r3, [fp, #4]
   12e6c:	cmp	r3, #0
   12e70:	movne	r4, #0
   12e74:	bne	12df8 <argp_parse@@Base+0x960>
   12e78:	b	12bfc <argp_parse@@Base+0x764>
   12e7c:	cmp	r0, #0
   12e80:	bne	12ad0 <argp_parse@@Base+0x638>
   12e84:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12e88:	str	r3, [fp, #-84]	; 0xffffffac
   12e8c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12e90:	cmp	r8, r3
   12e94:	sublt	r8, r3, r8
   12e98:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   12e9c:	addlt	r8, r3, r8
   12ea0:	strlt	r8, [r5, #-24]	; 0xffffffe8
   12ea4:	strge	sl, [fp, #-100]	; 0xffffff9c
   12ea8:	b	12b20 <argp_parse@@Base+0x688>
   12eac:	cmp	r4, #0
   12eb0:	beq	12bfc <argp_parse@@Base+0x764>
   12eb4:	b	12c7c <argp_parse@@Base+0x7e4>
   12eb8:	andeq	sl, r2, ip, lsr #7
   12ebc:	andeq	sl, r2, r8, lsr #7
   12ec0:			; <UNDEFINED> instruction: 0x0002a3b0
   12ec4:			; <UNDEFINED> instruction: 0x0002a3bc
   12ec8:	tsteq	r0, r3
   12ecc:	andeq	r8, r1, r4, asr #26
   12ed0:	andeq	sl, r2, ip, lsl r4
   12ed4:	andeq	r8, r1, r0, ror #26
   12ed8:	andeq	sl, r2, r0, ror #7
   12edc:	andeq	r8, r1, ip, ror sp
   12ee0:	muleq	r1, r0, lr
   12ee4:	andeq	r8, r1, ip, lsl #29
   12ee8:	tsteq	r0, r6
   12eec:	andeq	r8, r1, r8, lsl #29
   12ef0:	muleq	r1, r8, lr
   12ef4:	tsteq	r0, r4
   12ef8:	tsteq	r0, r5
   12efc:	tsteq	r0, r7
   12f00:	tsteq	r0, r2
   12f04:	tsteq	r0, r1
   12f08:	andeq	r8, r1, r4, lsr #29
   12f0c:	cmp	r1, #0
   12f10:	beq	12f5c <argp_parse@@Base+0xac4>
   12f14:	ldr	r2, [r1, #52]	; 0x34
   12f18:	ldr	r3, [r2, #48]	; 0x30
   12f1c:	ldr	r1, [r2, #52]	; 0x34
   12f20:	cmp	r3, r1
   12f24:	bcs	12f64 <argp_parse@@Base+0xacc>
   12f28:	ldr	r2, [r3, #4]
   12f2c:	cmp	r0, r2
   12f30:	beq	12f4c <argp_parse@@Base+0xab4>
   12f34:	add	r3, r3, #36	; 0x24
   12f38:	cmp	r3, r1
   12f3c:	bcs	12f54 <argp_parse@@Base+0xabc>
   12f40:	ldr	r2, [r3, #4]
   12f44:	cmp	r2, r0
   12f48:	bne	12f34 <argp_parse@@Base+0xa9c>
   12f4c:	ldr	r0, [r3, #24]
   12f50:	bx	lr
   12f54:	mov	r0, #0
   12f58:	bx	lr
   12f5c:	mov	r0, #0
   12f60:	bx	lr
   12f64:	mov	r0, #0
   12f68:	bx	lr
   12f6c:	push	{lr}		; (str lr, [sp, #-4]!)
   12f70:	sub	sp, sp, #12
   12f74:	ldr	r3, [pc, #28]	; 12f98 <argp_parse@@Base+0xb00>
   12f78:	ldr	r1, [r3]
   12f7c:	ldr	r3, [r3, #4]
   12f80:	str	r3, [sp]
   12f84:	ldr	r3, [pc, #16]	; 12f9c <argp_parse@@Base+0xb04>
   12f88:	ldr	r2, [pc, #16]	; 12fa0 <argp_parse@@Base+0xb08>
   12f8c:	bl	135b4 <argp_parse@@Base+0x111c>
   12f90:	add	sp, sp, #12
   12f94:	pop	{pc}		; (ldr pc, [sp], #4)
   12f98:	andeq	sl, r2, r4, ror #7
   12f9c:	andeq	r8, r1, ip, lsl #31
   12fa0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   12fa4:	ldr	r2, [pc, #20]	; 12fc0 <argp_parse@@Base+0xb28>
   12fa8:	ldr	r3, [pc, #20]	; 12fc4 <argp_parse@@Base+0xb2c>
   12fac:	str	r2, [r3]
   12fb0:	ldr	r3, [pc, #16]	; 12fc8 <argp_parse@@Base+0xb30>
   12fb4:	str	r0, [r3]
   12fb8:	str	r1, [r3, #4]
   12fbc:	bx	lr
   12fc0:	andeq	r2, r1, ip, ror #30
   12fc4:	andeq	sl, r2, r0, ror #7
   12fc8:	andeq	sl, r2, r4, ror #7
   12fcc:	ldrb	r3, [r0]
   12fd0:	cmp	r3, #47	; 0x2f
   12fd4:	bne	12fe4 <argp_parse@@Base+0xb4c>
   12fd8:	ldrb	r3, [r0, #1]!
   12fdc:	cmp	r3, #47	; 0x2f
   12fe0:	beq	12fd8 <argp_parse@@Base+0xb40>
   12fe4:	ldrb	r2, [r0]
   12fe8:	cmp	r2, #0
   12fec:	bxeq	lr
   12ff0:	push	{lr}		; (str lr, [sp, #-4]!)
   12ff4:	mov	r1, r0
   12ff8:	mov	r3, #0
   12ffc:	mov	lr, #1
   13000:	mov	ip, r3
   13004:	b	13014 <argp_parse@@Base+0xb7c>
   13008:	ldrb	r2, [r1, #1]!
   1300c:	cmp	r2, #0
   13010:	beq	13030 <argp_parse@@Base+0xb98>
   13014:	cmp	r2, #47	; 0x2f
   13018:	moveq	r3, lr
   1301c:	beq	13008 <argp_parse@@Base+0xb70>
   13020:	cmp	r3, #0
   13024:	movne	r0, r1
   13028:	movne	r3, ip
   1302c:	b	13008 <argp_parse@@Base+0xb70>
   13030:	pop	{pc}		; (ldr pc, [sp], #4)
   13034:	push	{r4, lr}
   13038:	mov	r4, r0
   1303c:	bl	111bc <strlen@plt>
   13040:	cmp	r0, #1
   13044:	popls	{r4, pc}
   13048:	sub	r3, r0, #1
   1304c:	add	r2, r4, r3
   13050:	ldrb	r1, [r4, r3]
   13054:	cmp	r1, #47	; 0x2f
   13058:	popne	{r4, pc}
   1305c:	cmp	r3, #1
   13060:	beq	13084 <argp_parse@@Base+0xbec>
   13064:	sub	r0, r3, #1
   13068:	ldrb	r1, [r2, #-1]!
   1306c:	cmp	r1, #47	; 0x2f
   13070:	beq	1307c <argp_parse@@Base+0xbe4>
   13074:	mov	r0, r3
   13078:	pop	{r4, pc}
   1307c:	mov	r3, r0
   13080:	b	1305c <argp_parse@@Base+0xbc4>
   13084:	mov	r0, #1
   13088:	pop	{r4, pc}
   1308c:	push	{r4, r5, lr}
   13090:	sub	sp, sp, #12
   13094:	mov	r5, r0
   13098:	bl	111e0 <__errno_location@plt>
   1309c:	mov	r4, r0
   130a0:	ldr	r3, [r0]
   130a4:	str	r3, [sp]
   130a8:	str	r3, [sp, #4]
   130ac:	mov	r3, #0
   130b0:	str	r3, [r0]
   130b4:	mov	r0, r5
   130b8:	bl	11084 <free@plt>
   130bc:	ldr	r3, [r4]
   130c0:	cmp	r3, #0
   130c4:	moveq	r3, #4
   130c8:	movne	r3, #0
   130cc:	add	r2, sp, #8
   130d0:	add	r3, r2, r3
   130d4:	ldr	r3, [r3, #-8]
   130d8:	str	r3, [r4]
   130dc:	add	sp, sp, #12
   130e0:	pop	{r4, r5, pc}
   130e4:	push	{lr}		; (str lr, [sp, #-4]!)
   130e8:	sub	sp, sp, #20
   130ec:	mov	ip, #0
   130f0:	str	ip, [sp, #8]
   130f4:	str	ip, [sp, #4]
   130f8:	ldr	ip, [sp, #24]
   130fc:	str	ip, [sp]
   13100:	bl	17a78 <argp_error@@Base+0xc7c>
   13104:	add	sp, sp, #20
   13108:	pop	{pc}		; (ldr pc, [sp], #4)
   1310c:	push	{lr}		; (str lr, [sp, #-4]!)
   13110:	sub	sp, sp, #20
   13114:	mov	ip, #0
   13118:	str	ip, [sp, #12]
   1311c:	ldr	lr, [sp, #28]
   13120:	str	lr, [sp, #8]
   13124:	str	ip, [sp, #4]
   13128:	ldr	ip, [sp, #24]
   1312c:	str	ip, [sp]
   13130:	bl	174fc <argp_error@@Base+0x700>
   13134:	add	sp, sp, #20
   13138:	pop	{pc}		; (ldr pc, [sp], #4)
   1313c:	push	{lr}		; (str lr, [sp, #-4]!)
   13140:	sub	sp, sp, #20
   13144:	mov	ip, #0
   13148:	str	ip, [sp, #8]
   1314c:	mov	ip, #1
   13150:	str	ip, [sp, #4]
   13154:	ldr	ip, [sp, #24]
   13158:	str	ip, [sp]
   1315c:	bl	17a78 <argp_error@@Base+0xc7c>
   13160:	add	sp, sp, #20
   13164:	pop	{pc}		; (ldr pc, [sp], #4)
   13168:	push	{lr}		; (str lr, [sp, #-4]!)
   1316c:	sub	sp, sp, #20
   13170:	mov	ip, #0
   13174:	str	ip, [sp, #12]
   13178:	ldr	ip, [sp, #28]
   1317c:	str	ip, [sp, #8]
   13180:	mov	ip, #1
   13184:	str	ip, [sp, #4]
   13188:	ldr	ip, [sp, #24]
   1318c:	str	ip, [sp]
   13190:	bl	174fc <argp_error@@Base+0x700>
   13194:	add	sp, sp, #20
   13198:	pop	{pc}		; (ldr pc, [sp], #4)
   1319c:	push	{r4, r5, r6, r8, r9, lr}
   131a0:	mov	r4, r0
   131a4:	mov	r5, r1
   131a8:	add	r6, r2, #20
   131ac:	mov	r3, #0
   131b0:	strb	r3, [r2, #20]
   131b4:	mov	r8, #10
   131b8:	mov	r9, #0
   131bc:	mov	r2, r8
   131c0:	mov	r3, r9
   131c4:	mov	r0, r4
   131c8:	mov	r1, r5
   131cc:	bl	18734 <argp_error@@Base+0x1938>
   131d0:	add	r2, r2, #48	; 0x30
   131d4:	strb	r2, [r6, #-1]!
   131d8:	mov	r2, r8
   131dc:	mov	r3, r9
   131e0:	mov	r0, r4
   131e4:	mov	r1, r5
   131e8:	bl	18734 <argp_error@@Base+0x1938>
   131ec:	mov	r4, r0
   131f0:	mov	r5, r1
   131f4:	orrs	r3, r4, r5
   131f8:	bne	131bc <argp_parse@@Base+0xd24>
   131fc:	mov	r0, r6
   13200:	pop	{r4, r5, r6, r8, r9, pc}
   13204:	push	{r4, r5, r6, lr}
   13208:	subs	r4, r0, #0
   1320c:	beq	13284 <argp_parse@@Base+0xdec>
   13210:	mov	r1, #47	; 0x2f
   13214:	mov	r0, r4
   13218:	bl	1124c <strrchr@plt>
   1321c:	cmp	r0, #0
   13220:	addne	r5, r0, #1
   13224:	moveq	r5, r4
   13228:	sub	r3, r5, r4
   1322c:	cmp	r3, #6
   13230:	ble	13270 <argp_parse@@Base+0xdd8>
   13234:	mov	r2, #7
   13238:	ldr	r1, [pc, #96]	; 132a0 <argp_parse@@Base+0xe08>
   1323c:	sub	r0, r5, #7
   13240:	bl	112b8 <strncmp@plt>
   13244:	cmp	r0, #0
   13248:	bne	13270 <argp_parse@@Base+0xdd8>
   1324c:	mov	r2, #3
   13250:	ldr	r1, [pc, #76]	; 132a4 <argp_parse@@Base+0xe0c>
   13254:	mov	r0, r5
   13258:	bl	112b8 <strncmp@plt>
   1325c:	cmp	r0, #0
   13260:	addeq	r4, r5, #3
   13264:	ldreq	r3, [pc, #60]	; 132a8 <argp_parse@@Base+0xe10>
   13268:	streq	r4, [r3]
   1326c:	movne	r4, r5
   13270:	ldr	r3, [pc, #52]	; 132ac <argp_parse@@Base+0xe14>
   13274:	str	r4, [r3]
   13278:	ldr	r3, [pc, #48]	; 132b0 <argp_parse@@Base+0xe18>
   1327c:	str	r4, [r3]
   13280:	pop	{r4, r5, r6, pc}
   13284:	ldr	r3, [pc, #40]	; 132b4 <argp_parse@@Base+0xe1c>
   13288:	ldr	r3, [r3]
   1328c:	mov	r2, #55	; 0x37
   13290:	mov	r1, #1
   13294:	ldr	r0, [pc, #28]	; 132b8 <argp_parse@@Base+0xe20>
   13298:	bl	11108 <fwrite@plt>
   1329c:	bl	112c4 <abort@plt>
   132a0:	andeq	r8, r1, r4, ror #31
   132a4:	andeq	r8, r1, ip, ror #31
   132a8:	andeq	sl, r2, r8, lsr #7
   132ac:	andeq	sl, r2, ip, ror #7
   132b0:	andeq	sl, r2, ip, lsr #7
   132b4:			; <UNDEFINED> instruction: 0x0002a3b0
   132b8:	andeq	r8, r1, ip, lsr #31
   132bc:	push	{r4, r5, r6, lr}
   132c0:	sub	sp, sp, #32
   132c4:	mov	r4, r0
   132c8:	ldr	r5, [sp, #48]	; 0x30
   132cc:	ldr	r6, [sp, #52]	; 0x34
   132d0:	cmp	r1, #0
   132d4:	beq	1335c <argp_parse@@Base+0xec4>
   132d8:	str	r3, [sp]
   132dc:	mov	r3, r2
   132e0:	mov	r2, r1
   132e4:	ldr	r1, [pc, #644]	; 13570 <argp_parse@@Base+0x10d8>
   132e8:	bl	111d4 <fprintf@plt>
   132ec:	ldr	r3, [pc, #640]	; 13574 <argp_parse@@Base+0x10dc>
   132f0:	ldr	r2, [pc, #640]	; 13578 <argp_parse@@Base+0x10e0>
   132f4:	ldr	r1, [pc, #640]	; 1357c <argp_parse@@Base+0x10e4>
   132f8:	mov	r0, r4
   132fc:	bl	111d4 <fprintf@plt>
   13300:	mov	r1, r4
   13304:	mov	r0, #10
   13308:	bl	11264 <fputc@plt>
   1330c:	ldr	r2, [pc, #620]	; 13580 <argp_parse@@Base+0x10e8>
   13310:	ldr	r1, [pc, #620]	; 13584 <argp_parse@@Base+0x10ec>
   13314:	mov	r0, r4
   13318:	bl	111d4 <fprintf@plt>
   1331c:	mov	r1, r4
   13320:	mov	r0, #10
   13324:	bl	11264 <fputc@plt>
   13328:	cmp	r6, #9
   1332c:	ldrls	pc, [pc, r6, lsl #2]
   13330:	b	13520 <argp_parse@@Base+0x1088>
   13334:	andeq	r3, r1, r8, ror r3
   13338:	andeq	r3, r1, r8, ror #6
   1333c:	andeq	r3, r1, r0, lsl #7
   13340:	muleq	r1, r8, r3
   13344:			; <UNDEFINED> instruction: 0x000133b8
   13348:	andeq	r3, r1, r0, ror #7
   1334c:	andeq	r3, r1, r0, lsl r4
   13350:	andeq	r3, r1, r8, asr #8
   13354:	andeq	r3, r1, r8, lsl #9
   13358:	ldrdeq	r3, [r1], -r0
   1335c:	ldr	r1, [pc, #548]	; 13588 <argp_parse@@Base+0x10f0>
   13360:	bl	111d4 <fprintf@plt>
   13364:	b	132ec <argp_parse@@Base+0xe54>
   13368:	ldr	r2, [r5]
   1336c:	ldr	r1, [pc, #536]	; 1358c <argp_parse@@Base+0x10f4>
   13370:	mov	r0, r4
   13374:	bl	111d4 <fprintf@plt>
   13378:	add	sp, sp, #32
   1337c:	pop	{r4, r5, r6, pc}
   13380:	ldr	r3, [r5, #4]
   13384:	ldr	r2, [r5]
   13388:	ldr	r1, [pc, #512]	; 13590 <argp_parse@@Base+0x10f8>
   1338c:	mov	r0, r4
   13390:	bl	111d4 <fprintf@plt>
   13394:	b	13378 <argp_parse@@Base+0xee0>
   13398:	ldr	r3, [r5, #4]
   1339c:	ldr	r2, [r5]
   133a0:	ldr	r1, [r5, #8]
   133a4:	str	r1, [sp]
   133a8:	ldr	r1, [pc, #484]	; 13594 <argp_parse@@Base+0x10fc>
   133ac:	mov	r0, r4
   133b0:	bl	111d4 <fprintf@plt>
   133b4:	b	13378 <argp_parse@@Base+0xee0>
   133b8:	ldr	r3, [r5, #4]
   133bc:	ldr	r2, [r5]
   133c0:	ldr	r1, [r5, #12]
   133c4:	str	r1, [sp, #4]
   133c8:	ldr	r1, [r5, #8]
   133cc:	str	r1, [sp]
   133d0:	ldr	r1, [pc, #448]	; 13598 <argp_parse@@Base+0x1100>
   133d4:	mov	r0, r4
   133d8:	bl	111d4 <fprintf@plt>
   133dc:	b	13378 <argp_parse@@Base+0xee0>
   133e0:	ldr	r3, [r5, #4]
   133e4:	ldr	r2, [r5]
   133e8:	ldr	r1, [r5, #16]
   133ec:	str	r1, [sp, #8]
   133f0:	ldr	r1, [r5, #12]
   133f4:	str	r1, [sp, #4]
   133f8:	ldr	r1, [r5, #8]
   133fc:	str	r1, [sp]
   13400:	ldr	r1, [pc, #404]	; 1359c <argp_parse@@Base+0x1104>
   13404:	mov	r0, r4
   13408:	bl	111d4 <fprintf@plt>
   1340c:	b	13378 <argp_parse@@Base+0xee0>
   13410:	ldr	r3, [r5, #4]
   13414:	ldr	r2, [r5]
   13418:	ldr	r1, [r5, #20]
   1341c:	str	r1, [sp, #12]
   13420:	ldr	r1, [r5, #16]
   13424:	str	r1, [sp, #8]
   13428:	ldr	r1, [r5, #12]
   1342c:	str	r1, [sp, #4]
   13430:	ldr	r1, [r5, #8]
   13434:	str	r1, [sp]
   13438:	ldr	r1, [pc, #352]	; 135a0 <argp_parse@@Base+0x1108>
   1343c:	mov	r0, r4
   13440:	bl	111d4 <fprintf@plt>
   13444:	b	13378 <argp_parse@@Base+0xee0>
   13448:	ldr	r3, [r5, #4]
   1344c:	ldr	r2, [r5]
   13450:	ldr	r1, [r5, #24]
   13454:	str	r1, [sp, #16]
   13458:	ldr	r1, [r5, #20]
   1345c:	str	r1, [sp, #12]
   13460:	ldr	r1, [r5, #16]
   13464:	str	r1, [sp, #8]
   13468:	ldr	r1, [r5, #12]
   1346c:	str	r1, [sp, #4]
   13470:	ldr	r1, [r5, #8]
   13474:	str	r1, [sp]
   13478:	ldr	r1, [pc, #292]	; 135a4 <argp_parse@@Base+0x110c>
   1347c:	mov	r0, r4
   13480:	bl	111d4 <fprintf@plt>
   13484:	b	13378 <argp_parse@@Base+0xee0>
   13488:	ldr	r3, [r5, #4]
   1348c:	ldr	r2, [r5]
   13490:	ldr	r1, [r5, #28]
   13494:	str	r1, [sp, #20]
   13498:	ldr	r1, [r5, #24]
   1349c:	str	r1, [sp, #16]
   134a0:	ldr	r1, [r5, #20]
   134a4:	str	r1, [sp, #12]
   134a8:	ldr	r1, [r5, #16]
   134ac:	str	r1, [sp, #8]
   134b0:	ldr	r1, [r5, #12]
   134b4:	str	r1, [sp, #4]
   134b8:	ldr	r1, [r5, #8]
   134bc:	str	r1, [sp]
   134c0:	ldr	r1, [pc, #224]	; 135a8 <argp_parse@@Base+0x1110>
   134c4:	mov	r0, r4
   134c8:	bl	111d4 <fprintf@plt>
   134cc:	b	13378 <argp_parse@@Base+0xee0>
   134d0:	ldr	r3, [r5, #4]
   134d4:	ldr	r2, [r5]
   134d8:	ldr	r1, [r5, #32]
   134dc:	str	r1, [sp, #24]
   134e0:	ldr	r1, [r5, #28]
   134e4:	str	r1, [sp, #20]
   134e8:	ldr	r1, [r5, #24]
   134ec:	str	r1, [sp, #16]
   134f0:	ldr	r1, [r5, #20]
   134f4:	str	r1, [sp, #12]
   134f8:	ldr	r1, [r5, #16]
   134fc:	str	r1, [sp, #8]
   13500:	ldr	r1, [r5, #12]
   13504:	str	r1, [sp, #4]
   13508:	ldr	r1, [r5, #8]
   1350c:	str	r1, [sp]
   13510:	ldr	r1, [pc, #148]	; 135ac <argp_parse@@Base+0x1114>
   13514:	mov	r0, r4
   13518:	bl	111d4 <fprintf@plt>
   1351c:	b	13378 <argp_parse@@Base+0xee0>
   13520:	ldr	r3, [r5, #4]
   13524:	ldr	r2, [r5]
   13528:	ldr	r1, [r5, #32]
   1352c:	str	r1, [sp, #24]
   13530:	ldr	r1, [r5, #28]
   13534:	str	r1, [sp, #20]
   13538:	ldr	r1, [r5, #24]
   1353c:	str	r1, [sp, #16]
   13540:	ldr	r1, [r5, #20]
   13544:	str	r1, [sp, #12]
   13548:	ldr	r1, [r5, #16]
   1354c:	str	r1, [sp, #8]
   13550:	ldr	r1, [r5, #12]
   13554:	str	r1, [sp, #4]
   13558:	ldr	r1, [r5, #8]
   1355c:	str	r1, [sp]
   13560:	ldr	r1, [pc, #72]	; 135b0 <argp_parse@@Base+0x1118>
   13564:	mov	r0, r4
   13568:	bl	111d4 <fprintf@plt>
   1356c:	b	13378 <argp_parse@@Base+0xee0>
   13570:	strdeq	r8, [r1], -r0
   13574:	andeq	r0, r0, r6, ror #15
   13578:	andeq	r9, r1, r4
   1357c:	andeq	r9, r1, r4, lsl #6
   13580:	andeq	r9, r1, r8
   13584:	andeq	r9, r1, ip, lsr #32
   13588:	strdeq	r8, [r1], -ip
   1358c:	ldrdeq	r9, [r1], -r8
   13590:	andeq	r9, r1, r8, ror #1
   13594:	andeq	r9, r1, r0, lsl #2
   13598:	andeq	r9, r1, ip, lsl r1
   1359c:	andeq	r9, r1, ip, lsr r1
   135a0:	andeq	r9, r1, r0, ror #2
   135a4:	andeq	r9, r1, r8, lsl #3
   135a8:			; <UNDEFINED> instruction: 0x000191b4
   135ac:	andeq	r9, r1, r4, ror #3
   135b0:	andeq	r9, r1, r8, lsl r2
   135b4:	push	{r4, r5, lr}
   135b8:	sub	sp, sp, #12
   135bc:	ldr	r5, [sp, #24]
   135c0:	ldr	ip, [r5]
   135c4:	cmp	ip, #0
   135c8:	beq	135f8 <argp_parse@@Base+0x1160>
   135cc:	mov	lr, r5
   135d0:	mov	ip, #0
   135d4:	add	ip, ip, #1
   135d8:	ldr	r4, [lr, #4]!
   135dc:	cmp	r4, #0
   135e0:	bne	135d4 <argp_parse@@Base+0x113c>
   135e4:	str	ip, [sp, #4]
   135e8:	str	r5, [sp]
   135ec:	bl	132bc <argp_parse@@Base+0xe24>
   135f0:	add	sp, sp, #12
   135f4:	pop	{r4, r5, pc}
   135f8:	mov	ip, #0
   135fc:	b	135e4 <argp_parse@@Base+0x114c>
   13600:	push	{r4, r5, lr}
   13604:	sub	sp, sp, #52	; 0x34
   13608:	ldr	r4, [sp, #64]	; 0x40
   1360c:	sub	r4, r4, #4
   13610:	add	r5, sp, #4
   13614:	mov	ip, #0
   13618:	ldr	lr, [r4, #4]!
   1361c:	str	lr, [r5, #4]!
   13620:	cmp	lr, #0
   13624:	beq	13634 <argp_parse@@Base+0x119c>
   13628:	add	ip, ip, #1
   1362c:	cmp	ip, #10
   13630:	bne	13618 <argp_parse@@Base+0x1180>
   13634:	str	ip, [sp, #4]
   13638:	add	ip, sp, #8
   1363c:	str	ip, [sp]
   13640:	bl	132bc <argp_parse@@Base+0xe24>
   13644:	add	sp, sp, #52	; 0x34
   13648:	pop	{r4, r5, pc}
   1364c:	push	{r3}		; (str r3, [sp, #-4]!)
   13650:	push	{lr}		; (str lr, [sp, #-4]!)
   13654:	sub	sp, sp, #16
   13658:	add	r3, sp, #24
   1365c:	str	r3, [sp, #12]
   13660:	str	r3, [sp]
   13664:	ldr	r3, [sp, #20]
   13668:	bl	13600 <argp_parse@@Base+0x1168>
   1366c:	add	sp, sp, #16
   13670:	pop	{lr}		; (ldr lr, [sp], #4)
   13674:	add	sp, sp, #4
   13678:	bx	lr
   1367c:	push	{r4, lr}
   13680:	ldr	r3, [pc, #52]	; 136bc <argp_parse@@Base+0x1224>
   13684:	ldr	r1, [r3]
   13688:	mov	r0, #10
   1368c:	bl	11264 <fputc@plt>
   13690:	ldr	r1, [pc, #40]	; 136c0 <argp_parse@@Base+0x1228>
   13694:	ldr	r0, [pc, #40]	; 136c4 <argp_parse@@Base+0x122c>
   13698:	bl	11054 <printf@plt>
   1369c:	ldr	r2, [pc, #36]	; 136c8 <argp_parse@@Base+0x1230>
   136a0:	ldr	r1, [pc, #36]	; 136cc <argp_parse@@Base+0x1234>
   136a4:	ldr	r0, [pc, #36]	; 136d0 <argp_parse@@Base+0x1238>
   136a8:	bl	11054 <printf@plt>
   136ac:	ldr	r1, [pc, #32]	; 136d4 <argp_parse@@Base+0x123c>
   136b0:	ldr	r0, [pc, #32]	; 136d8 <argp_parse@@Base+0x1240>
   136b4:	bl	11054 <printf@plt>
   136b8:	pop	{r4, pc}
   136bc:			; <UNDEFINED> instruction: 0x0002a3bc
   136c0:	andeq	r9, r1, r4, asr r2
   136c4:	andeq	r9, r1, ip, ror #4
   136c8:	andeq	r9, r1, r0, lsl #5
   136cc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   136d0:	andeq	r9, r1, r8, lsr #5
   136d4:			; <UNDEFINED> instruction: 0x000192bc
   136d8:	ldrdeq	r9, [r1], -ip
   136dc:	push	{r4, lr}
   136e0:	bl	13cfc <argp_parse@@Base+0x1864>
   136e4:	cmp	r0, #0
   136e8:	popne	{r4, pc}
   136ec:	bl	13c80 <argp_parse@@Base+0x17e8>
   136f0:	push	{r4, lr}
   136f4:	bl	13cfc <argp_parse@@Base+0x1864>
   136f8:	cmp	r0, #0
   136fc:	popne	{r4, pc}
   13700:	bl	13c80 <argp_parse@@Base+0x17e8>
   13704:	push	{r4, lr}
   13708:	bl	136dc <argp_parse@@Base+0x1244>
   1370c:	pop	{r4, pc}
   13710:	push	{r4, r5, r6, lr}
   13714:	mov	r5, r0
   13718:	mov	r4, r1
   1371c:	bl	13d2c <argp_parse@@Base+0x1894>
   13720:	cmp	r0, #0
   13724:	popne	{r4, r5, r6, pc}
   13728:	adds	r4, r4, #0
   1372c:	movne	r4, #1
   13730:	cmp	r5, #0
   13734:	orreq	r4, r4, #1
   13738:	cmp	r4, #0
   1373c:	popeq	{r4, r5, r6, pc}
   13740:	bl	13c80 <argp_parse@@Base+0x17e8>
   13744:	push	{r4, lr}
   13748:	cmp	r1, #0
   1374c:	orreq	r1, r1, #1
   13750:	bl	13d2c <argp_parse@@Base+0x1894>
   13754:	cmp	r0, #0
   13758:	popne	{r4, pc}
   1375c:	bl	13c80 <argp_parse@@Base+0x17e8>
   13760:	push	{r4, r5, r6, lr}
   13764:	mov	r6, r0
   13768:	mov	r5, r1
   1376c:	mov	r4, r2
   13770:	bl	17b10 <argp_error@@Base+0xd14>
   13774:	cmp	r0, #0
   13778:	popne	{r4, r5, r6, pc}
   1377c:	cmp	r6, #0
   13780:	beq	13790 <argp_parse@@Base+0x12f8>
   13784:	cmp	r5, #0
   13788:	cmpne	r4, #0
   1378c:	popeq	{r4, r5, r6, pc}
   13790:	bl	13c80 <argp_parse@@Base+0x17e8>
   13794:	push	{r4, lr}
   13798:	bl	13760 <argp_parse@@Base+0x12c8>
   1379c:	pop	{r4, pc}
   137a0:	push	{r4, lr}
   137a4:	mov	ip, r1
   137a8:	mov	r3, r2
   137ac:	cmp	r2, #0
   137b0:	cmpne	r1, #0
   137b4:	moveq	r3, #1
   137b8:	moveq	ip, r3
   137bc:	mov	r2, r3
   137c0:	mov	r1, ip
   137c4:	bl	17b10 <argp_error@@Base+0xd14>
   137c8:	cmp	r0, #0
   137cc:	popne	{r4, pc}
   137d0:	bl	13c80 <argp_parse@@Base+0x17e8>
   137d4:	push	{r4, lr}
   137d8:	mov	r2, r1
   137dc:	mov	r1, r0
   137e0:	mov	r0, #0
   137e4:	bl	13760 <argp_parse@@Base+0x12c8>
   137e8:	pop	{r4, pc}
   137ec:	push	{r4, lr}
   137f0:	mov	r2, r1
   137f4:	mov	r1, r0
   137f8:	mov	r0, #0
   137fc:	bl	137a0 <argp_parse@@Base+0x1308>
   13800:	pop	{r4, pc}
   13804:	push	{r4, r5, r6, r7, r8, lr}
   13808:	mov	r5, r1
   1380c:	mov	r6, r2
   13810:	ldr	r4, [r1]
   13814:	subs	r7, r0, #0
   13818:	beq	13834 <argp_parse@@Base+0x139c>
   1381c:	lsr	r2, r4, #1
   13820:	add	r3, r2, #1
   13824:	mvn	r3, r3
   13828:	cmp	r4, r3
   1382c:	bls	13858 <argp_parse@@Base+0x13c0>
   13830:	bl	13c80 <argp_parse@@Base+0x17e8>
   13834:	cmp	r4, #0
   13838:	bne	13860 <argp_parse@@Base+0x13c8>
   1383c:	mov	r1, r2
   13840:	mov	r0, #64	; 0x40
   13844:	bl	182e8 <argp_error@@Base+0x14ec>
   13848:	cmp	r0, #0
   1384c:	movne	r4, r0
   13850:	addeq	r4, r0, #1
   13854:	b	13860 <argp_parse@@Base+0x13c8>
   13858:	add	r4, r4, #1
   1385c:	add	r4, r4, r2
   13860:	mov	r2, r6
   13864:	mov	r1, r4
   13868:	mov	r0, r7
   1386c:	bl	13760 <argp_parse@@Base+0x12c8>
   13870:	str	r4, [r5]
   13874:	pop	{r4, r5, r6, r7, r8, pc}
   13878:	push	{r4, lr}
   1387c:	mov	r2, #1
   13880:	bl	13804 <argp_parse@@Base+0x136c>
   13884:	pop	{r4, pc}
   13888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1388c:	sub	sp, sp, #12
   13890:	mov	fp, r0
   13894:	mov	sl, r1
   13898:	mov	r9, r2
   1389c:	mov	r7, r3
   138a0:	ldr	r6, [sp, #48]	; 0x30
   138a4:	ldr	r5, [r1]
   138a8:	asrs	r4, r5, #1
   138ac:	bmi	13a08 <argp_parse@@Base+0x1570>
   138b0:	cmp	r5, #0
   138b4:	blt	13a1c <argp_parse@@Base+0x1584>
   138b8:	mvn	r3, #-2147483648	; 0x80000000
   138bc:	sub	r3, r3, r4
   138c0:	cmp	r5, r3
   138c4:	movle	r3, #0
   138c8:	movgt	r3, #1
   138cc:	cmp	r3, #0
   138d0:	addeq	r4, r4, r5
   138d4:	mvnne	r4, #-2147483648	; 0x80000000
   138d8:	mvn	r8, r7
   138dc:	lsr	r8, r8, #31
   138e0:	cmp	r7, r4
   138e4:	movge	r3, #0
   138e8:	andlt	r3, r8, #1
   138ec:	cmp	r3, #0
   138f0:	movne	r4, r7
   138f4:	cmp	r6, #0
   138f8:	blt	13a30 <argp_parse@@Base+0x1598>
   138fc:	cmp	r6, #0
   13900:	beq	13adc <argp_parse@@Base+0x1644>
   13904:	cmp	r4, #0
   13908:	blt	13a8c <argp_parse@@Base+0x15f4>
   1390c:	mov	r1, r6
   13910:	mvn	r0, #-2147483648	; 0x80000000
   13914:	bl	184f4 <argp_error@@Base+0x16f8>
   13918:	cmp	r0, r4
   1391c:	movge	r0, #0
   13920:	movlt	r0, #1
   13924:	cmp	r0, #0
   13928:	mvnne	r3, #-2147483648	; 0x80000000
   1392c:	strne	r3, [sp, #4]
   13930:	beq	13ac4 <argp_parse@@Base+0x162c>
   13934:	mov	r1, r6
   13938:	ldr	r0, [sp, #4]
   1393c:	bl	184f4 <argp_error@@Base+0x16f8>
   13940:	mov	r4, r0
   13944:	mov	r1, r6
   13948:	ldr	r0, [sp, #4]
   1394c:	bl	18714 <argp_error@@Base+0x1918>
   13950:	ldr	r3, [sp, #4]
   13954:	sub	r1, r3, r1
   13958:	cmp	fp, #0
   1395c:	moveq	r3, #0
   13960:	streq	r3, [sl]
   13964:	sub	r3, r4, r5
   13968:	cmp	r3, r9
   1396c:	bge	139f4 <argp_parse@@Base+0x155c>
   13970:	cmp	r9, #0
   13974:	blt	13ae8 <argp_parse@@Base+0x1650>
   13978:	cmp	r5, #0
   1397c:	blt	13afc <argp_parse@@Base+0x1664>
   13980:	mvn	r3, #-2147483648	; 0x80000000
   13984:	sub	r3, r3, r9
   13988:	cmp	r5, r3
   1398c:	movle	r3, #0
   13990:	movgt	r3, #1
   13994:	cmp	r3, #0
   13998:	bne	13ba4 <argp_parse@@Base+0x170c>
   1399c:	add	r5, r5, r9
   139a0:	mov	r4, r5
   139a4:	cmp	r7, r5
   139a8:	movge	r7, #0
   139ac:	andlt	r7, r8, #1
   139b0:	cmp	r7, #0
   139b4:	bne	13ba4 <argp_parse@@Base+0x170c>
   139b8:	cmp	r6, #0
   139bc:	blt	13b10 <argp_parse@@Base+0x1678>
   139c0:	cmp	r6, #0
   139c4:	beq	139f0 <argp_parse@@Base+0x1558>
   139c8:	cmp	r5, #0
   139cc:	blt	13b6c <argp_parse@@Base+0x16d4>
   139d0:	mov	r1, r6
   139d4:	mvn	r0, #-2147483648	; 0x80000000
   139d8:	bl	184f4 <argp_error@@Base+0x16f8>
   139dc:	cmp	r5, r0
   139e0:	movle	r0, #0
   139e4:	movgt	r0, #1
   139e8:	cmp	r0, #0
   139ec:	bne	13ba4 <argp_parse@@Base+0x170c>
   139f0:	mul	r1, r5, r6
   139f4:	mov	r0, fp
   139f8:	bl	13710 <argp_parse@@Base+0x1278>
   139fc:	str	r4, [sl]
   13a00:	add	sp, sp, #12
   13a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a08:	rsb	r3, r4, #-2147483648	; 0x80000000
   13a0c:	cmp	r5, r3
   13a10:	movge	r3, #0
   13a14:	movlt	r3, #1
   13a18:	b	138cc <argp_parse@@Base+0x1434>
   13a1c:	rsb	r3, r5, #-2147483648	; 0x80000000
   13a20:	cmp	r4, r3
   13a24:	movge	r3, #0
   13a28:	movlt	r3, #1
   13a2c:	b	138cc <argp_parse@@Base+0x1434>
   13a30:	cmp	r4, #0
   13a34:	blt	13a5c <argp_parse@@Base+0x15c4>
   13a38:	cmn	r6, #1
   13a3c:	beq	13a78 <argp_parse@@Base+0x15e0>
   13a40:	mov	r1, r6
   13a44:	mov	r0, #-2147483648	; 0x80000000
   13a48:	bl	184f4 <argp_error@@Base+0x16f8>
   13a4c:	cmp	r0, r4
   13a50:	movge	r0, #0
   13a54:	movlt	r0, #1
   13a58:	b	13924 <argp_parse@@Base+0x148c>
   13a5c:	mov	r1, r6
   13a60:	mvn	r0, #-2147483648	; 0x80000000
   13a64:	bl	184f4 <argp_error@@Base+0x16f8>
   13a68:	cmp	r0, r4
   13a6c:	movle	r0, #0
   13a70:	movgt	r0, #1
   13a74:	b	13924 <argp_parse@@Base+0x148c>
   13a78:	add	r0, r4, #-2147483648	; 0x80000000
   13a7c:	cmp	r0, #0
   13a80:	movle	r0, #0
   13a84:	movgt	r0, #1
   13a88:	b	13924 <argp_parse@@Base+0x148c>
   13a8c:	cmn	r4, #1
   13a90:	beq	13ab0 <argp_parse@@Base+0x1618>
   13a94:	mov	r1, r4
   13a98:	mov	r0, #-2147483648	; 0x80000000
   13a9c:	bl	184f4 <argp_error@@Base+0x16f8>
   13aa0:	cmp	r6, r0
   13aa4:	movle	r0, #0
   13aa8:	movgt	r0, #1
   13aac:	b	13924 <argp_parse@@Base+0x148c>
   13ab0:	add	r0, r6, #-2147483648	; 0x80000000
   13ab4:	cmp	r0, #0
   13ab8:	movle	r0, #0
   13abc:	movgt	r0, #1
   13ac0:	b	13924 <argp_parse@@Base+0x148c>
   13ac4:	mul	r1, r6, r4
   13ac8:	cmp	r1, #63	; 0x3f
   13acc:	movle	r3, #64	; 0x40
   13ad0:	strle	r3, [sp, #4]
   13ad4:	bgt	13958 <argp_parse@@Base+0x14c0>
   13ad8:	b	13934 <argp_parse@@Base+0x149c>
   13adc:	mov	r3, #64	; 0x40
   13ae0:	str	r3, [sp, #4]
   13ae4:	b	13934 <argp_parse@@Base+0x149c>
   13ae8:	rsb	r3, r9, #-2147483648	; 0x80000000
   13aec:	cmp	r5, r3
   13af0:	movge	r3, #0
   13af4:	movlt	r3, #1
   13af8:	b	13994 <argp_parse@@Base+0x14fc>
   13afc:	rsb	r3, r5, #-2147483648	; 0x80000000
   13b00:	cmp	r9, r3
   13b04:	movge	r3, #0
   13b08:	movlt	r3, #1
   13b0c:	b	13994 <argp_parse@@Base+0x14fc>
   13b10:	cmp	r5, #0
   13b14:	blt	13b3c <argp_parse@@Base+0x16a4>
   13b18:	cmn	r6, #1
   13b1c:	beq	13b58 <argp_parse@@Base+0x16c0>
   13b20:	mov	r1, r6
   13b24:	mov	r0, #-2147483648	; 0x80000000
   13b28:	bl	184f4 <argp_error@@Base+0x16f8>
   13b2c:	cmp	r5, r0
   13b30:	movle	r0, #0
   13b34:	movgt	r0, #1
   13b38:	b	139e8 <argp_parse@@Base+0x1550>
   13b3c:	mov	r1, r6
   13b40:	mvn	r0, #-2147483648	; 0x80000000
   13b44:	bl	184f4 <argp_error@@Base+0x16f8>
   13b48:	cmp	r5, r0
   13b4c:	movge	r0, #0
   13b50:	movlt	r0, #1
   13b54:	b	139e8 <argp_parse@@Base+0x1550>
   13b58:	add	r0, r5, #-2147483648	; 0x80000000
   13b5c:	cmp	r0, #0
   13b60:	movle	r0, #0
   13b64:	movgt	r0, #1
   13b68:	b	139e8 <argp_parse@@Base+0x1550>
   13b6c:	cmn	r5, #1
   13b70:	beq	13b90 <argp_parse@@Base+0x16f8>
   13b74:	mov	r1, r5
   13b78:	mov	r0, #-2147483648	; 0x80000000
   13b7c:	bl	184f4 <argp_error@@Base+0x16f8>
   13b80:	cmp	r6, r0
   13b84:	movle	r0, #0
   13b88:	movgt	r0, #1
   13b8c:	b	139e8 <argp_parse@@Base+0x1550>
   13b90:	add	r0, r6, #-2147483648	; 0x80000000
   13b94:	cmp	r0, #0
   13b98:	movle	r0, #0
   13b9c:	movgt	r0, #1
   13ba0:	b	139e8 <argp_parse@@Base+0x1550>
   13ba4:	bl	13c80 <argp_parse@@Base+0x17e8>
   13ba8:	push	{r4, lr}
   13bac:	bl	13cac <argp_parse@@Base+0x1814>
   13bb0:	cmp	r0, #0
   13bb4:	popne	{r4, pc}
   13bb8:	bl	13c80 <argp_parse@@Base+0x17e8>
   13bbc:	push	{r4, lr}
   13bc0:	mov	r1, #1
   13bc4:	bl	13ba8 <argp_parse@@Base+0x1710>
   13bc8:	pop	{r4, pc}
   13bcc:	push	{r4, lr}
   13bd0:	bl	13cac <argp_parse@@Base+0x1814>
   13bd4:	cmp	r0, #0
   13bd8:	popne	{r4, pc}
   13bdc:	bl	13c80 <argp_parse@@Base+0x17e8>
   13be0:	push	{r4, lr}
   13be4:	mov	r1, #1
   13be8:	bl	13bcc <argp_parse@@Base+0x1734>
   13bec:	pop	{r4, pc}
   13bf0:	push	{r4, r5, r6, lr}
   13bf4:	mov	r5, r0
   13bf8:	mov	r4, r1
   13bfc:	mov	r0, r1
   13c00:	bl	136dc <argp_parse@@Base+0x1244>
   13c04:	mov	r2, r4
   13c08:	mov	r1, r5
   13c0c:	bl	110a8 <memcpy@plt>
   13c10:	pop	{r4, r5, r6, pc}
   13c14:	push	{r4, r5, r6, lr}
   13c18:	mov	r5, r0
   13c1c:	mov	r4, r1
   13c20:	mov	r0, r1
   13c24:	bl	136f0 <argp_parse@@Base+0x1258>
   13c28:	mov	r2, r4
   13c2c:	mov	r1, r5
   13c30:	bl	110a8 <memcpy@plt>
   13c34:	pop	{r4, r5, r6, pc}
   13c38:	push	{r4, r5, r6, lr}
   13c3c:	mov	r5, r0
   13c40:	mov	r4, r1
   13c44:	add	r0, r1, #1
   13c48:	bl	136f0 <argp_parse@@Base+0x1258>
   13c4c:	mov	r2, #0
   13c50:	strb	r2, [r0, r4]
   13c54:	mov	r2, r4
   13c58:	mov	r1, r5
   13c5c:	bl	110a8 <memcpy@plt>
   13c60:	pop	{r4, r5, r6, pc}
   13c64:	push	{r4, lr}
   13c68:	mov	r4, r0
   13c6c:	bl	111bc <strlen@plt>
   13c70:	add	r1, r0, #1
   13c74:	mov	r0, r4
   13c78:	bl	13bf0 <argp_parse@@Base+0x1758>
   13c7c:	pop	{r4, pc}
   13c80:	push	{r4, lr}
   13c84:	ldr	r3, [pc, #20]	; 13ca0 <argp_parse@@Base+0x1808>
   13c88:	ldr	r0, [r3]
   13c8c:	ldr	r3, [pc, #16]	; 13ca4 <argp_parse@@Base+0x180c>
   13c90:	ldr	r2, [pc, #16]	; 13ca8 <argp_parse@@Base+0x1810>
   13c94:	mov	r1, #0
   13c98:	bl	11120 <error@plt>
   13c9c:	bl	112c4 <abort@plt>
   13ca0:	muleq	r2, r4, r3
   13ca4:	andeq	r9, r1, r4, lsr r3
   13ca8:	andeq	r8, r1, r4, lsl #20
   13cac:	push	{r4, lr}
   13cb0:	mov	r2, r0
   13cb4:	mov	r3, r1
   13cb8:	cmp	r1, #0
   13cbc:	cmpne	r0, #0
   13cc0:	moveq	r3, #1
   13cc4:	moveq	r2, r3
   13cc8:	umull	r0, r1, r2, r3
   13ccc:	cmp	r0, #0
   13cd0:	cmpge	r1, #0
   13cd4:	bne	13ce8 <argp_parse@@Base+0x1850>
   13cd8:	mov	r1, r3
   13cdc:	mov	r0, r2
   13ce0:	bl	11000 <calloc@plt>
   13ce4:	pop	{r4, pc}
   13ce8:	bl	111e0 <__errno_location@plt>
   13cec:	mov	r3, #12
   13cf0:	str	r3, [r0]
   13cf4:	mov	r0, #0
   13cf8:	pop	{r4, pc}
   13cfc:	push	{r4, lr}
   13d00:	cmp	r0, #0
   13d04:	moveq	r0, #1
   13d08:	cmp	r0, #0
   13d0c:	blt	13d18 <argp_parse@@Base+0x1880>
   13d10:	bl	11138 <malloc@plt>
   13d14:	pop	{r4, pc}
   13d18:	bl	111e0 <__errno_location@plt>
   13d1c:	mov	r3, #12
   13d20:	str	r3, [r0]
   13d24:	mov	r0, #0
   13d28:	pop	{r4, pc}
   13d2c:	push	{r4, lr}
   13d30:	cmp	r0, #0
   13d34:	beq	13d50 <argp_parse@@Base+0x18b8>
   13d38:	cmp	r1, #0
   13d3c:	beq	13d5c <argp_parse@@Base+0x18c4>
   13d40:	cmp	r1, #0
   13d44:	blt	13d68 <argp_parse@@Base+0x18d0>
   13d48:	bl	110e4 <realloc@plt>
   13d4c:	pop	{r4, pc}
   13d50:	mov	r0, r1
   13d54:	bl	13cfc <argp_parse@@Base+0x1864>
   13d58:	pop	{r4, pc}
   13d5c:	bl	1308c <argp_parse@@Base+0xbf4>
   13d60:	mov	r0, #0
   13d64:	pop	{r4, pc}
   13d68:	bl	111e0 <__errno_location@plt>
   13d6c:	mov	r3, #12
   13d70:	str	r3, [r0]
   13d74:	mov	r0, #0
   13d78:	pop	{r4, pc}
   13d7c:	ldr	r3, [r0]
   13d80:	ldr	r2, [r0, #4]
   13d84:	cmp	r2, #0
   13d88:	beq	13dc4 <argp_parse@@Base+0x192c>
   13d8c:	add	r3, r3, #24
   13d90:	b	13da0 <argp_parse@@Base+0x1908>
   13d94:	add	r3, r3, #24
   13d98:	subs	r2, r2, #1
   13d9c:	beq	13dbc <argp_parse@@Base+0x1924>
   13da0:	ldr	r0, [r3, #-24]	; 0xffffffe8
   13da4:	cmp	r0, #0
   13da8:	beq	13d94 <argp_parse@@Base+0x18fc>
   13dac:	ldr	r1, [r3, #-12]
   13db0:	tst	r1, #2
   13db4:	bne	13d94 <argp_parse@@Base+0x18fc>
   13db8:	bx	lr
   13dbc:	mov	r0, #0
   13dc0:	bx	lr
   13dc4:	mov	r0, #0
   13dc8:	bx	lr
   13dcc:	ldr	r2, [r0, #8]
   13dd0:	cmp	r2, #0
   13dd4:	beq	13de0 <argp_parse@@Base+0x1948>
   13dd8:	mov	r0, #0
   13ddc:	bx	lr
   13de0:	ldr	r2, [r1, #8]
   13de4:	cmp	r2, #0
   13de8:	bne	13dd8 <argp_parse@@Base+0x1940>
   13dec:	ldr	r2, [r0, #12]
   13df0:	ldr	r1, [r1, #12]
   13df4:	orr	r2, r2, r1
   13df8:	tst	r2, #16
   13dfc:	ldreq	r2, [r3]
   13e00:	addeq	r1, r2, #1
   13e04:	streq	r1, [r3]
   13e08:	ldreq	r3, [r0, #4]
   13e0c:	strbeq	r3, [r2]
   13e10:	b	13dd8 <argp_parse@@Base+0x1940>
   13e14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e18:	sub	sp, sp, #12
   13e1c:	ldr	r4, [r0]
   13e20:	ldr	r9, [r0, #8]
   13e24:	ldr	r5, [r0, #4]
   13e28:	cmp	r5, #0
   13e2c:	beq	13e80 <argp_parse@@Base+0x19e8>
   13e30:	str	r3, [sp, #4]
   13e34:	str	r2, [sp]
   13e38:	mov	fp, r1
   13e3c:	mov	sl, r4
   13e40:	mov	r8, #0
   13e44:	b	13ec0 <argp_parse@@Base+0x1a28>
   13e48:	and	r3, r6, #4
   13e4c:	cmp	r3, #0
   13e50:	moveq	sl, r4
   13e54:	tst	r6, #2
   13e58:	beq	13e64 <argp_parse@@Base+0x19cc>
   13e5c:	add	r9, r9, #1
   13e60:	b	13e9c <argp_parse@@Base+0x1a04>
   13e64:	ldr	r3, [sp, #4]
   13e68:	ldr	r2, [sp]
   13e6c:	mov	r1, sl
   13e70:	mov	r0, r4
   13e74:	blx	fp
   13e78:	mov	r8, r0
   13e7c:	b	13e5c <argp_parse@@Base+0x19c4>
   13e80:	mov	r8, #0
   13e84:	mov	r0, r8
   13e88:	add	sp, sp, #12
   13e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e90:	ldrb	r3, [r9]
   13e94:	cmp	r3, r7
   13e98:	beq	13e48 <argp_parse@@Base+0x19b0>
   13e9c:	add	r4, r4, #24
   13ea0:	subs	r5, r5, #1
   13ea4:	movne	r3, #1
   13ea8:	moveq	r3, #0
   13eac:	cmp	r8, #0
   13eb0:	movne	r3, #0
   13eb4:	andeq	r3, r3, #1
   13eb8:	cmp	r3, #0
   13ebc:	beq	13e84 <argp_parse@@Base+0x19ec>
   13ec0:	ldr	r6, [r4, #12]
   13ec4:	tst	r6, #8
   13ec8:	bne	13e9c <argp_parse@@Base+0x1a04>
   13ecc:	ldr	r7, [r4, #4]
   13ed0:	sub	r3, r7, #1
   13ed4:	cmp	r3, #254	; 0xfe
   13ed8:	bhi	13e9c <argp_parse@@Base+0x1a04>
   13edc:	bl	1118c <__ctype_b_loc@plt>
   13ee0:	ldr	r2, [r0]
   13ee4:	lsl	r3, r7, #1
   13ee8:	ldrh	r3, [r2, r3]
   13eec:	tst	r3, #16384	; 0x4000
   13ef0:	bne	13e90 <argp_parse@@Base+0x19f8>
   13ef4:	b	13e9c <argp_parse@@Base+0x1a04>
   13ef8:	push	{r4, r5, r6, lr}
   13efc:	ldr	r4, [r0, #12]
   13f00:	ands	r4, r4, #8
   13f04:	movne	r4, #0
   13f08:	bne	13f38 <argp_parse@@Base+0x1aa0>
   13f0c:	ldr	r5, [r0, #4]
   13f10:	sub	r3, r5, #1
   13f14:	cmp	r3, #254	; 0xfe
   13f18:	bhi	13f38 <argp_parse@@Base+0x1aa0>
   13f1c:	bl	1118c <__ctype_b_loc@plt>
   13f20:	ldr	r2, [r0]
   13f24:	lsl	r3, r5, #1
   13f28:	ldrh	r3, [r2, r3]
   13f2c:	and	r3, r3, #16384	; 0x4000
   13f30:	cmp	r3, #0
   13f34:	movne	r4, r5
   13f38:	mov	r0, r4
   13f3c:	pop	{r4, r5, r6, pc}
   13f40:	push	{r4, lr}
   13f44:	mov	r4, r0
   13f48:	bl	1118c <__ctype_b_loc@plt>
   13f4c:	b	13f58 <argp_parse@@Base+0x1ac0>
   13f50:	add	r3, r3, #1
   13f54:	str	r3, [r4]
   13f58:	ldr	r3, [r4]
   13f5c:	ldrb	r2, [r3]
   13f60:	ldr	ip, [r0]
   13f64:	lsl	r1, r2, #1
   13f68:	ldrh	r1, [ip, r1]
   13f6c:	tst	r1, #8192	; 0x2000
   13f70:	bne	13f50 <argp_parse@@Base+0x1ab8>
   13f74:	subs	ip, r2, #45	; 0x2d
   13f78:	movne	ip, #1
   13f7c:	cmp	r2, #0
   13f80:	beq	13fb4 <argp_parse@@Base+0x1b1c>
   13f84:	tst	r1, #8
   13f88:	bne	13fb4 <argp_parse@@Base+0x1b1c>
   13f8c:	add	r3, r3, #1
   13f90:	str	r3, [r4]
   13f94:	ldrb	r2, [r3]
   13f98:	cmp	r2, #0
   13f9c:	beq	13fb4 <argp_parse@@Base+0x1b1c>
   13fa0:	ldr	r1, [r0]
   13fa4:	lsl	r2, r2, #1
   13fa8:	ldrh	r2, [r1, r2]
   13fac:	tst	r2, #8
   13fb0:	beq	13f8c <argp_parse@@Base+0x1af4>
   13fb4:	mov	r0, ip
   13fb8:	pop	{r4, pc}
   13fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fc0:	add	fp, sp, #32
   13fc4:	sub	sp, sp, #12
   13fc8:	ldr	r5, [r0, #4]
   13fcc:	cmp	r5, #0
   13fd0:	bne	13fdc <argp_parse@@Base+0x1b44>
   13fd4:	sub	sp, fp, #32
   13fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fdc:	mov	r9, r1
   13fe0:	mov	r6, r0
   13fe4:	ldr	r0, [r0, #8]
   13fe8:	bl	111bc <strlen@plt>
   13fec:	add	r3, r0, #15
   13ff0:	bic	r3, r3, #7
   13ff4:	sub	sp, sp, r3
   13ff8:	mov	sl, sp
   13ffc:	sub	r7, fp, #36	; 0x24
   14000:	str	sp, [r7, #-4]!
   14004:	ldr	r4, [r6]
   14008:	ldr	r8, [pc, #336]	; 14160 <argp_parse@@Base+0x1cc8>
   1400c:	ldr	r2, [r4, #20]
   14010:	mov	r3, r7
   14014:	ldr	r2, [r2, #24]
   14018:	mov	r1, r8
   1401c:	mov	r0, r4
   14020:	bl	13e14 <argp_parse@@Base+0x197c>
   14024:	add	r4, r4, #28
   14028:	subs	r5, r5, #1
   1402c:	bne	1400c <argp_parse@@Base+0x1b74>
   14030:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14034:	cmp	sl, r3
   14038:	bcc	14090 <argp_parse@@Base+0x1bf8>
   1403c:	ldr	r4, [r6]
   14040:	ldr	r5, [r6, #4]
   14044:	cmp	r5, #0
   14048:	beq	13fd4 <argp_parse@@Base+0x1b3c>
   1404c:	ldr	r7, [pc, #272]	; 14164 <argp_parse@@Base+0x1ccc>
   14050:	ldr	r2, [r4, #20]
   14054:	mov	r3, r9
   14058:	ldr	r2, [r2, #24]
   1405c:	mov	r1, r7
   14060:	mov	r0, r4
   14064:	bl	13e14 <argp_parse@@Base+0x197c>
   14068:	add	r4, r4, #28
   1406c:	subs	r5, r5, #1
   14070:	bne	14050 <argp_parse@@Base+0x1bb8>
   14074:	ldr	r7, [r6]
   14078:	ldr	r8, [r6, #4]
   1407c:	cmp	r8, #0
   14080:	beq	13fd4 <argp_parse@@Base+0x1b3c>
   14084:	add	r7, r7, #28
   14088:	ldr	sl, [pc, #216]	; 14168 <argp_parse@@Base+0x1cd0>
   1408c:	b	14148 <argp_parse@@Base+0x1cb0>
   14090:	add	r2, r3, #1
   14094:	str	r2, [fp, #-40]	; 0xffffffd8
   14098:	mov	r2, #0
   1409c:	strb	r2, [r3]
   140a0:	mov	r2, sl
   140a4:	ldr	r1, [pc, #192]	; 1416c <argp_parse@@Base+0x1cd4>
   140a8:	mov	r0, r9
   140ac:	bl	18268 <argp_error@@Base+0x146c>
   140b0:	b	1403c <argp_parse@@Base+0x1ba4>
   140b4:	tst	r1, #16
   140b8:	bne	140dc <argp_parse@@Base+0x1c44>
   140bc:	ldr	r3, [r6, #8]
   140c0:	cmp	r3, #0
   140c4:	beq	1412c <argp_parse@@Base+0x1c94>
   140c8:	tst	r1, #1
   140cc:	ldrne	r1, [pc, #156]	; 14170 <argp_parse@@Base+0x1cd8>
   140d0:	moveq	r1, sl
   140d4:	mov	r0, r9
   140d8:	bl	18268 <argp_error@@Base+0x146c>
   140dc:	add	r4, r4, #24
   140e0:	subs	r5, r5, #1
   140e4:	beq	1413c <argp_parse@@Base+0x1ca4>
   140e8:	ldr	r2, [r4]
   140ec:	cmp	r2, #0
   140f0:	beq	140dc <argp_parse@@Base+0x1c44>
   140f4:	ldr	r1, [r4, #12]
   140f8:	and	r3, r1, #4
   140fc:	cmp	r3, #0
   14100:	moveq	r6, r4
   14104:	tst	r1, #2
   14108:	bne	140dc <argp_parse@@Base+0x1c44>
   1410c:	ldr	r3, [r4, #8]
   14110:	ldr	r0, [r6, #12]
   14114:	orr	r1, r1, r0
   14118:	cmp	r3, #0
   1411c:	beq	140b4 <argp_parse@@Base+0x1c1c>
   14120:	tst	r1, #16
   14124:	beq	140c8 <argp_parse@@Base+0x1c30>
   14128:	b	140dc <argp_parse@@Base+0x1c44>
   1412c:	ldr	r1, [pc, #64]	; 14174 <argp_parse@@Base+0x1cdc>
   14130:	mov	r0, r9
   14134:	bl	18268 <argp_error@@Base+0x146c>
   14138:	b	140dc <argp_parse@@Base+0x1c44>
   1413c:	add	r7, r7, #28
   14140:	subs	r8, r8, #1
   14144:	beq	13fd4 <argp_parse@@Base+0x1b3c>
   14148:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1414c:	ldr	r5, [r7, #-24]	; 0xffffffe8
   14150:	cmp	r5, #0
   14154:	beq	1413c <argp_parse@@Base+0x1ca4>
   14158:	mov	r6, r4
   1415c:	b	140e8 <argp_parse@@Base+0x1c50>
   14160:	andeq	r3, r1, ip, asr #27
   14164:	andeq	r4, r1, ip, lsl #8
   14168:	andeq	r9, r1, r8, lsl #8
   1416c:	strdeq	r9, [r1], -r0
   14170:	strdeq	r9, [r1], -r8
   14174:	andeq	r9, r1, r4, lsl r4
   14178:	push	{r4, r5, r6, lr}
   1417c:	mov	r5, r0
   14180:	ldr	r0, [r0, #12]
   14184:	cmp	r0, #0
   14188:	beq	141a0 <argp_parse@@Base+0x1d08>
   1418c:	ldr	r4, [r0, #24]
   14190:	bl	1308c <argp_parse@@Base+0xbf4>
   14194:	mov	r0, r4
   14198:	cmp	r4, #0
   1419c:	bne	1418c <argp_parse@@Base+0x1cf4>
   141a0:	ldr	r3, [r5, #4]
   141a4:	cmp	r3, #0
   141a8:	bne	141b8 <argp_parse@@Base+0x1d20>
   141ac:	mov	r0, r5
   141b0:	bl	1308c <argp_parse@@Base+0xbf4>
   141b4:	pop	{r4, r5, r6, pc}
   141b8:	ldr	r0, [r5]
   141bc:	bl	1308c <argp_parse@@Base+0xbf4>
   141c0:	ldr	r0, [r5, #8]
   141c4:	bl	1308c <argp_parse@@Base+0xbf4>
   141c8:	b	141ac <argp_parse@@Base+0x1d14>
   141cc:	push	{r4, r5, r6, r7, r8, lr}
   141d0:	mov	r6, r1
   141d4:	ldr	r7, [r0]
   141d8:	ldr	r3, [r0, #4]
   141dc:	sub	r8, r3, #1
   141e0:	cmp	r3, #0
   141e4:	bne	14240 <argp_parse@@Base+0x1da8>
   141e8:	mov	r7, #0
   141ec:	b	14228 <argp_parse@@Base+0x1d90>
   141f0:	sub	r5, r5, #1
   141f4:	add	r4, r4, #24
   141f8:	cmn	r5, #1
   141fc:	beq	14230 <argp_parse@@Base+0x1d98>
   14200:	ldr	r0, [r4, #-24]	; 0xffffffe8
   14204:	cmp	r0, #0
   14208:	beq	141f0 <argp_parse@@Base+0x1d58>
   1420c:	ldr	r3, [r4, #-12]
   14210:	tst	r3, #2
   14214:	bne	141f0 <argp_parse@@Base+0x1d58>
   14218:	mov	r1, r6
   1421c:	bl	11030 <strcmp@plt>
   14220:	cmp	r0, #0
   14224:	bne	141f0 <argp_parse@@Base+0x1d58>
   14228:	mov	r0, r7
   1422c:	pop	{r4, r5, r6, r7, r8, pc}
   14230:	add	r7, r7, #28
   14234:	sub	r8, r8, #1
   14238:	cmn	r8, #1
   1423c:	beq	1425c <argp_parse@@Base+0x1dc4>
   14240:	ldr	r4, [r7]
   14244:	ldr	r3, [r7, #4]
   14248:	sub	r5, r3, #1
   1424c:	cmp	r3, #0
   14250:	beq	14230 <argp_parse@@Base+0x1d98>
   14254:	add	r4, r4, #24
   14258:	b	14200 <argp_parse@@Base+0x1d68>
   1425c:	mov	r7, #0
   14260:	b	14228 <argp_parse@@Base+0x1d90>
   14264:	push	{r4, r5, r6, lr}
   14268:	ldr	r4, [r0, #16]
   1426c:	ldr	r0, [r0, #8]
   14270:	cmp	r0, #0
   14274:	moveq	r5, #0
   14278:	beq	1428c <argp_parse@@Base+0x1df4>
   1427c:	mov	r1, #10
   14280:	bl	111c8 <strchr@plt>
   14284:	adds	r5, r0, #0
   14288:	movne	r5, #1
   1428c:	cmp	r4, #0
   14290:	beq	142b4 <argp_parse@@Base+0x1e1c>
   14294:	ldr	r0, [r4]
   14298:	cmp	r0, #0
   1429c:	beq	142b4 <argp_parse@@Base+0x1e1c>
   142a0:	bl	14264 <argp_parse@@Base+0x1dcc>
   142a4:	add	r5, r5, r0
   142a8:	ldr	r0, [r4, #16]!
   142ac:	cmp	r0, #0
   142b0:	bne	142a0 <argp_parse@@Base+0x1e08>
   142b4:	mov	r0, r5
   142b8:	pop	{r4, r5, r6, pc}
   142bc:	push	{r4, r5, r6, r7, r8, lr}
   142c0:	mov	r4, r0
   142c4:	mov	r5, r1
   142c8:	ldr	r3, [r0, #28]
   142cc:	ldr	r2, [r0, #24]
   142d0:	sub	r3, r3, r2
   142d4:	ldr	r2, [r0, #16]
   142d8:	cmp	r3, r2
   142dc:	bhi	142f8 <argp_parse@@Base+0x1e60>
   142e0:	ldr	r3, [r4, #20]
   142e4:	cmp	r3, #0
   142e8:	subge	r5, r5, r3
   142ec:	mov	r6, #32
   142f0:	mov	r7, #1
   142f4:	b	14314 <argp_parse@@Base+0x1e7c>
   142f8:	bl	17bd4 <argp_error@@Base+0xdd8>
   142fc:	b	142e0 <argp_parse@@Base+0x1e48>
   14300:	ldr	r3, [r4, #28]
   14304:	add	r2, r3, #1
   14308:	str	r2, [r4, #28]
   1430c:	strb	r6, [r3]
   14310:	sub	r5, r5, #1
   14314:	cmp	r5, #0
   14318:	ble	14344 <argp_parse@@Base+0x1eac>
   1431c:	ldr	r2, [r4, #28]
   14320:	ldr	r3, [r4, #32]
   14324:	cmp	r2, r3
   14328:	bcc	14300 <argp_parse@@Base+0x1e68>
   1432c:	mov	r1, r7
   14330:	mov	r0, r4
   14334:	bl	18178 <argp_error@@Base+0x137c>
   14338:	cmp	r0, #0
   1433c:	beq	14310 <argp_parse@@Base+0x1e78>
   14340:	b	14300 <argp_parse@@Base+0x1e68>
   14344:	pop	{r4, r5, r6, r7, r8, pc}
   14348:	push	{r4, r5, r6, lr}
   1434c:	mov	r4, r0
   14350:	mov	r5, r1
   14354:	ldr	r3, [r0, #28]
   14358:	ldr	r2, [r0, #24]
   1435c:	sub	r3, r3, r2
   14360:	ldr	r2, [r0, #16]
   14364:	cmp	r3, r2
   14368:	bhi	143ac <argp_parse@@Base+0x1f14>
   1436c:	ldr	r3, [r4, #20]
   14370:	cmp	r3, #0
   14374:	addge	r5, r5, r3
   14378:	ldr	r3, [r4, #8]
   1437c:	cmp	r5, r3
   14380:	bcc	143cc <argp_parse@@Base+0x1f34>
   14384:	ldr	r2, [r4, #28]
   14388:	ldr	r3, [r4, #32]
   1438c:	cmp	r2, r3
   14390:	bcs	143b4 <argp_parse@@Base+0x1f1c>
   14394:	ldr	r3, [r4, #28]
   14398:	add	r2, r3, #1
   1439c:	str	r2, [r4, #28]
   143a0:	mov	r2, #10
   143a4:	strb	r2, [r3]
   143a8:	pop	{r4, r5, r6, pc}
   143ac:	bl	17bd4 <argp_error@@Base+0xdd8>
   143b0:	b	1436c <argp_parse@@Base+0x1ed4>
   143b4:	mov	r1, #1
   143b8:	mov	r0, r4
   143bc:	bl	18178 <argp_error@@Base+0x137c>
   143c0:	cmp	r0, #0
   143c4:	popeq	{r4, r5, r6, pc}
   143c8:	b	14394 <argp_parse@@Base+0x1efc>
   143cc:	ldr	r2, [r4, #28]
   143d0:	ldr	r3, [r4, #32]
   143d4:	cmp	r2, r3
   143d8:	bcs	143f4 <argp_parse@@Base+0x1f5c>
   143dc:	ldr	r3, [r4, #28]
   143e0:	add	r2, r3, #1
   143e4:	str	r2, [r4, #28]
   143e8:	mov	r2, #32
   143ec:	strb	r2, [r3]
   143f0:	pop	{r4, r5, r6, pc}
   143f4:	mov	r1, #1
   143f8:	mov	r0, r4
   143fc:	bl	18178 <argp_error@@Base+0x137c>
   14400:	cmp	r0, #0
   14404:	bne	143dc <argp_parse@@Base+0x1f44>
   14408:	pop	{r4, r5, r6, pc}
   1440c:	push	{r4, r5, r6, lr}
   14410:	ldr	r5, [r0, #8]
   14414:	ldr	r2, [r0, #12]
   14418:	ldr	ip, [r1, #12]
   1441c:	orr	r2, r2, ip
   14420:	cmp	r5, #0
   14424:	beq	14470 <argp_parse@@Base+0x1fd8>
   14428:	tst	r2, #16
   1442c:	bne	14468 <argp_parse@@Base+0x1fd0>
   14430:	mov	r6, r3
   14434:	mov	r4, r0
   14438:	tst	r2, #1
   1443c:	bne	14480 <argp_parse@@Base+0x1fe8>
   14440:	mov	r0, r5
   14444:	bl	111bc <strlen@plt>
   14448:	add	r1, r0, #6
   1444c:	mov	r0, r6
   14450:	bl	14348 <argp_parse@@Base+0x1eb0>
   14454:	mov	r3, r5
   14458:	ldr	r2, [r4, #4]
   1445c:	ldr	r1, [pc, #52]	; 14498 <argp_parse@@Base+0x2000>
   14460:	mov	r0, r6
   14464:	bl	18268 <argp_error@@Base+0x146c>
   14468:	mov	r0, #0
   1446c:	pop	{r4, r5, r6, pc}
   14470:	ldr	r5, [r1, #8]
   14474:	cmp	r5, #0
   14478:	beq	14468 <argp_parse@@Base+0x1fd0>
   1447c:	b	14428 <argp_parse@@Base+0x1f90>
   14480:	mov	r3, r5
   14484:	ldr	r2, [r0, #4]
   14488:	ldr	r1, [pc, #12]	; 1449c <argp_parse@@Base+0x2004>
   1448c:	mov	r0, r6
   14490:	bl	18268 <argp_error@@Base+0x146c>
   14494:	b	14468 <argp_parse@@Base+0x1fd0>
   14498:	andeq	r9, r1, r8, lsr #8
   1449c:	andeq	r9, r1, ip, lsl r4
   144a0:	push	{r4, r5, r6, lr}
   144a4:	subs	r5, r2, #0
   144a8:	popeq	{r4, r5, r6, pc}
   144ac:	ldr	ip, [r5, #20]
   144b0:	cmp	ip, #0
   144b4:	popeq	{r4, r5, r6, pc}
   144b8:	mov	r6, r1
   144bc:	mov	r4, r0
   144c0:	mov	r1, r3
   144c4:	mov	r0, r5
   144c8:	bl	12f0c <argp_parse@@Base+0xa74>
   144cc:	ldr	r3, [r5, #20]
   144d0:	mov	r2, r0
   144d4:	mov	r1, r4
   144d8:	mov	r0, r6
   144dc:	blx	r3
   144e0:	pop	{r4, r5, r6, pc}
   144e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   144e8:	sub	sp, sp, #28
   144ec:	str	r1, [sp, #16]
   144f0:	mov	r8, r2
   144f4:	mov	r4, r3
   144f8:	ldr	r5, [sp, #64]	; 0x40
   144fc:	ldr	r3, [r2]
   14500:	mov	r6, r3
   14504:	str	r3, [sp, #20]
   14508:	ldr	sl, [r0, #16]
   1450c:	ldr	r2, [r0, #8]
   14510:	mov	ip, r2
   14514:	str	r2, [sp, #12]
   14518:	mov	r3, r1
   1451c:	mov	r2, r0
   14520:	ldr	r1, [pc, #424]	; 146d0 <argp_parse@@Base+0x2238>
   14524:	mov	r0, ip
   14528:	bl	144a0 <argp_parse@@Base+0x2008>
   1452c:	subs	r3, r0, #0
   14530:	str	r3, [sp, #8]
   14534:	beq	146bc <argp_parse@@Base+0x2224>
   14538:	mov	r1, #10
   1453c:	mov	r0, r3
   14540:	bl	11078 <strchrnul@plt>
   14544:	mov	r7, r0
   14548:	ldrb	r3, [r0]
   1454c:	cmp	r3, #0
   14550:	beq	1468c <argp_parse@@Base+0x21f4>
   14554:	ldrb	fp, [r6]
   14558:	cmp	fp, #0
   1455c:	ble	14684 <argp_parse@@Base+0x21ec>
   14560:	mov	r6, #0
   14564:	add	r9, r0, #1
   14568:	mov	r1, #10
   1456c:	mov	r0, r9
   14570:	bl	11078 <strchrnul@plt>
   14574:	add	r6, r6, #1
   14578:	cmp	r6, fp
   1457c:	bne	14564 <argp_parse@@Base+0x20cc>
   14580:	mov	r7, r0
   14584:	ldr	r3, [r8]
   14588:	add	r3, r3, #1
   1458c:	str	r3, [r8]
   14590:	mov	fp, #1
   14594:	add	r1, r7, #1
   14598:	sub	r1, r1, r9
   1459c:	mov	r0, r5
   145a0:	bl	14348 <argp_parse@@Base+0x1eb0>
   145a4:	sub	r6, r7, r9
   145a8:	ldr	r3, [r5, #28]
   145ac:	add	r3, r3, r6
   145b0:	ldr	r2, [r5, #32]
   145b4:	cmp	r2, r3
   145b8:	bcs	145d0 <argp_parse@@Base+0x2138>
   145bc:	mov	r1, r6
   145c0:	mov	r0, r5
   145c4:	bl	18178 <argp_error@@Base+0x137c>
   145c8:	cmp	r0, #0
   145cc:	beq	145ec <argp_parse@@Base+0x2154>
   145d0:	mov	r2, r6
   145d4:	mov	r1, r9
   145d8:	ldr	r0, [r5, #28]
   145dc:	bl	110a8 <memcpy@plt>
   145e0:	ldr	r3, [r5, #28]
   145e4:	add	r6, r3, r6
   145e8:	str	r6, [r5, #28]
   145ec:	ldr	r3, [sp, #12]
   145f0:	ldr	r2, [sp, #8]
   145f4:	cmp	r3, r2
   145f8:	bne	14698 <argp_parse@@Base+0x2200>
   145fc:	cmp	sl, #0
   14600:	beq	14640 <argp_parse@@Base+0x21a8>
   14604:	ldr	r0, [sl]
   14608:	cmp	r0, #0
   1460c:	beq	14640 <argp_parse@@Base+0x21a8>
   14610:	mov	r3, r4
   14614:	ldr	r4, [sp, #16]
   14618:	str	r5, [sp]
   1461c:	mov	r2, r8
   14620:	mov	r1, r4
   14624:	bl	144e4 <argp_parse@@Base+0x204c>
   14628:	clz	r3, r0
   1462c:	lsr	r3, r3, #5
   14630:	ldr	r0, [sl, #16]!
   14634:	cmp	r0, #0
   14638:	bne	14618 <argp_parse@@Base+0x2180>
   1463c:	mov	r4, r3
   14640:	cmp	r4, #0
   14644:	moveq	fp, #0
   14648:	andne	fp, fp, #1
   1464c:	cmp	fp, #0
   14650:	beq	14674 <argp_parse@@Base+0x21dc>
   14654:	ldrb	r3, [r7]
   14658:	cmp	r3, #0
   1465c:	bne	146a4 <argp_parse@@Base+0x220c>
   14660:	ldr	r2, [sp, #20]
   14664:	ldrb	r3, [r2]
   14668:	cmp	r3, #0
   1466c:	movne	r3, #0
   14670:	strbne	r3, [r2]
   14674:	clz	r0, r4
   14678:	lsr	r0, r0, #5
   1467c:	add	sp, sp, #28
   14680:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14684:	ldr	r9, [sp, #8]
   14688:	b	14584 <argp_parse@@Base+0x20ec>
   1468c:	ldr	r9, [sp, #8]
   14690:	mov	fp, #0
   14694:	b	14594 <argp_parse@@Base+0x20fc>
   14698:	mov	r0, r2
   1469c:	bl	1308c <argp_parse@@Base+0xbf4>
   146a0:	b	145fc <argp_parse@@Base+0x2164>
   146a4:	ldr	r2, [sp, #20]
   146a8:	ldrb	r3, [r2]
   146ac:	add	r3, r3, #1
   146b0:	strb	r3, [r2]
   146b4:	mov	r4, #0
   146b8:	b	14674 <argp_parse@@Base+0x21dc>
   146bc:	cmp	sl, #0
   146c0:	beq	14674 <argp_parse@@Base+0x21dc>
   146c4:	ldr	r7, [sp, #8]
   146c8:	mov	fp, #0
   146cc:	b	14604 <argp_parse@@Base+0x216c>
   146d0:	andeq	r0, r0, #6
   146d4:	push	{r4, r5, r6, r7, r8, lr}
   146d8:	mov	r7, r0
   146dc:	mov	r4, r2
   146e0:	ldr	r3, [r2, #16]
   146e4:	mov	r2, r1
   146e8:	ldr	r1, [pc, #448]	; 148b0 <argp_parse@@Base+0x2418>
   146ec:	bl	144a0 <argp_parse@@Base+0x2008>
   146f0:	subs	r5, r0, #0
   146f4:	beq	14848 <argp_parse@@Base+0x23b0>
   146f8:	ldrb	r3, [r5]
   146fc:	cmp	r3, #0
   14700:	beq	1483c <argp_parse@@Base+0x23a4>
   14704:	ldr	r3, [r4, #8]
   14708:	ldr	r3, [r3]
   1470c:	cmp	r3, #0
   14710:	beq	1473c <argp_parse@@Base+0x22a4>
   14714:	ldr	r6, [r4, #4]
   14718:	ldr	r2, [r6, #28]
   1471c:	ldr	r3, [r6, #32]
   14720:	cmp	r2, r3
   14724:	bcs	1485c <argp_parse@@Base+0x23c4>
   14728:	ldr	r3, [r6, #28]
   1472c:	add	r2, r3, #1
   14730:	str	r2, [r6, #28]
   14734:	mov	r2, #10
   14738:	strb	r2, [r3]
   1473c:	ldr	r8, [pc, #368]	; 148b4 <argp_parse@@Base+0x241c>
   14740:	ldr	r1, [r8, #24]
   14744:	ldr	r0, [r4, #4]
   14748:	bl	142bc <argp_parse@@Base+0x1e24>
   1474c:	ldr	r6, [r4, #4]
   14750:	ldr	r8, [r8, #24]
   14754:	ldr	r3, [r6, #28]
   14758:	ldr	r2, [r6, #24]
   1475c:	sub	r3, r3, r2
   14760:	ldr	r2, [r6, #16]
   14764:	cmp	r3, r2
   14768:	bhi	14874 <argp_parse@@Base+0x23dc>
   1476c:	str	r8, [r6, #4]
   14770:	ldr	r6, [r4, #4]
   14774:	ldr	r3, [pc, #312]	; 148b4 <argp_parse@@Base+0x241c>
   14778:	ldr	r8, [r3, #24]
   1477c:	ldr	r3, [r6, #28]
   14780:	ldr	r2, [r6, #24]
   14784:	sub	r3, r3, r2
   14788:	ldr	r2, [r6, #16]
   1478c:	cmp	r3, r2
   14790:	bhi	14880 <argp_parse@@Base+0x23e8>
   14794:	str	r8, [r6, #12]
   14798:	mov	r0, r5
   1479c:	bl	111bc <strlen@plt>
   147a0:	subs	r8, r0, #0
   147a4:	beq	147f0 <argp_parse@@Base+0x2358>
   147a8:	ldr	r6, [r4, #4]
   147ac:	ldr	r3, [r6, #28]
   147b0:	add	r3, r3, r8
   147b4:	ldr	r2, [r6, #32]
   147b8:	cmp	r2, r3
   147bc:	bcs	147d4 <argp_parse@@Base+0x233c>
   147c0:	mov	r1, r8
   147c4:	mov	r0, r6
   147c8:	bl	18178 <argp_error@@Base+0x137c>
   147cc:	cmp	r0, #0
   147d0:	beq	147f0 <argp_parse@@Base+0x2358>
   147d4:	mov	r2, r8
   147d8:	mov	r1, r5
   147dc:	ldr	r0, [r6, #28]
   147e0:	bl	110a8 <memcpy@plt>
   147e4:	ldr	r3, [r6, #28]
   147e8:	add	r8, r3, r8
   147ec:	str	r8, [r6, #28]
   147f0:	ldr	r6, [r4, #4]
   147f4:	ldr	r3, [r6, #28]
   147f8:	ldr	r2, [r6, #24]
   147fc:	sub	r3, r3, r2
   14800:	ldr	r2, [r6, #16]
   14804:	cmp	r3, r2
   14808:	bhi	1488c <argp_parse@@Base+0x23f4>
   1480c:	mov	r3, #0
   14810:	str	r3, [r6, #4]
   14814:	ldr	r6, [r4, #4]
   14818:	ldr	r2, [r6, #28]
   1481c:	ldr	r3, [r6, #32]
   14820:	cmp	r2, r3
   14824:	bcs	14898 <argp_parse@@Base+0x2400>
   14828:	ldr	r3, [r6, #28]
   1482c:	add	r2, r3, #1
   14830:	str	r2, [r6, #28]
   14834:	mov	r2, #10
   14838:	strb	r2, [r3]
   1483c:	ldr	r3, [r4, #8]
   14840:	mov	r2, #1
   14844:	str	r2, [r3, #4]
   14848:	cmp	r7, r5
   1484c:	popeq	{r4, r5, r6, r7, r8, pc}
   14850:	mov	r0, r5
   14854:	bl	1308c <argp_parse@@Base+0xbf4>
   14858:	pop	{r4, r5, r6, r7, r8, pc}
   1485c:	mov	r1, #1
   14860:	mov	r0, r6
   14864:	bl	18178 <argp_error@@Base+0x137c>
   14868:	cmp	r0, #0
   1486c:	beq	1473c <argp_parse@@Base+0x22a4>
   14870:	b	14728 <argp_parse@@Base+0x2290>
   14874:	mov	r0, r6
   14878:	bl	17bd4 <argp_error@@Base+0xdd8>
   1487c:	b	1476c <argp_parse@@Base+0x22d4>
   14880:	mov	r0, r6
   14884:	bl	17bd4 <argp_error@@Base+0xdd8>
   14888:	b	14794 <argp_parse@@Base+0x22fc>
   1488c:	mov	r0, r6
   14890:	bl	17bd4 <argp_error@@Base+0xdd8>
   14894:	b	1480c <argp_parse@@Base+0x2374>
   14898:	mov	r1, #1
   1489c:	mov	r0, r6
   148a0:	bl	18178 <argp_error@@Base+0x137c>
   148a4:	cmp	r0, #0
   148a8:	beq	1483c <argp_parse@@Base+0x23a4>
   148ac:	b	14828 <argp_parse@@Base+0x2390>
   148b0:	andeq	r0, r0, #3
   148b4:	andeq	sl, r2, ip, ror #6
   148b8:	push	{r4, r5, r6, r7, r8, lr}
   148bc:	mov	r6, r0
   148c0:	mov	r4, r1
   148c4:	ldr	r3, [r1, #12]
   148c8:	cmp	r3, #0
   148cc:	beq	149ec <argp_parse@@Base+0x2554>
   148d0:	ldr	r3, [r1, #8]
   148d4:	ldr	r7, [r3]
   148d8:	ldr	r2, [r1]
   148dc:	ldr	r5, [r2, #16]
   148e0:	ldr	r3, [r3, #4]
   148e4:	cmp	r3, #0
   148e8:	cmpne	r7, #0
   148ec:	beq	14928 <argp_parse@@Base+0x2490>
   148f0:	ldr	r2, [r2, #12]
   148f4:	ldr	r3, [r7, #12]
   148f8:	cmp	r2, r3
   148fc:	beq	14928 <argp_parse@@Base+0x2490>
   14900:	ldr	r8, [r1, #4]
   14904:	ldr	r2, [r8, #28]
   14908:	ldr	r3, [r8, #32]
   1490c:	cmp	r2, r3
   14910:	bcs	149c8 <argp_parse@@Base+0x2530>
   14914:	ldr	r3, [r8, #28]
   14918:	add	r2, r3, #1
   1491c:	str	r2, [r8, #28]
   14920:	mov	r2, #10
   14924:	strb	r2, [r3]
   14928:	cmp	r5, #0
   1492c:	beq	149b0 <argp_parse@@Base+0x2518>
   14930:	ldr	r0, [r5]
   14934:	cmp	r0, #0
   14938:	beq	149b0 <argp_parse@@Base+0x2518>
   1493c:	ldrb	r3, [r0]
   14940:	cmp	r3, #0
   14944:	beq	149b0 <argp_parse@@Base+0x2518>
   14948:	cmp	r7, #0
   1494c:	beq	1497c <argp_parse@@Base+0x24e4>
   14950:	ldr	r3, [r7, #16]
   14954:	cmp	r5, r3
   14958:	beq	149b0 <argp_parse@@Base+0x2518>
   1495c:	cmp	r3, #0
   14960:	beq	1497c <argp_parse@@Base+0x24e4>
   14964:	ldr	r3, [r3, #12]
   14968:	cmp	r3, #0
   1496c:	cmpne	r5, r3
   14970:	bne	14964 <argp_parse@@Base+0x24cc>
   14974:	cmp	r5, r3
   14978:	beq	149b0 <argp_parse@@Base+0x2518>
   1497c:	ldr	r3, [r4, #4]
   14980:	ldr	r7, [r3, #12]
   14984:	mov	r2, r4
   14988:	ldr	r1, [r5, #16]
   1498c:	bl	146d4 <argp_parse@@Base+0x223c>
   14990:	ldr	r5, [r4, #4]
   14994:	ldr	r3, [r5, #28]
   14998:	ldr	r2, [r5, #24]
   1499c:	sub	r3, r3, r2
   149a0:	ldr	r2, [r5, #16]
   149a4:	cmp	r3, r2
   149a8:	bhi	149e0 <argp_parse@@Base+0x2548>
   149ac:	str	r7, [r5, #12]
   149b0:	mov	r3, #0
   149b4:	str	r3, [r4, #12]
   149b8:	mov	r1, r6
   149bc:	ldr	r0, [r4, #4]
   149c0:	bl	142bc <argp_parse@@Base+0x1e24>
   149c4:	pop	{r4, r5, r6, r7, r8, pc}
   149c8:	mov	r1, #1
   149cc:	mov	r0, r8
   149d0:	bl	18178 <argp_error@@Base+0x137c>
   149d4:	cmp	r0, #0
   149d8:	beq	14928 <argp_parse@@Base+0x2490>
   149dc:	b	14914 <argp_parse@@Base+0x247c>
   149e0:	mov	r0, r5
   149e4:	bl	17bd4 <argp_error@@Base+0xdd8>
   149e8:	b	149ac <argp_parse@@Base+0x2514>
   149ec:	ldr	r5, [r1, #4]
   149f0:	ldr	r3, [r5, #28]
   149f4:	add	r3, r3, #2
   149f8:	ldr	r2, [r5, #32]
   149fc:	cmp	r2, r3
   14a00:	bcs	14a18 <argp_parse@@Base+0x2580>
   14a04:	mov	r1, #2
   14a08:	mov	r0, r5
   14a0c:	bl	18178 <argp_error@@Base+0x137c>
   14a10:	cmp	r0, #0
   14a14:	beq	149b8 <argp_parse@@Base+0x2520>
   14a18:	ldr	r3, [r5, #28]
   14a1c:	ldr	r2, [pc, #20]	; 14a38 <argp_parse@@Base+0x25a0>
   14a20:	ldrh	r2, [r2]
   14a24:	strh	r2, [r3]
   14a28:	ldr	r3, [r5, #28]
   14a2c:	add	r3, r3, #2
   14a30:	str	r3, [r5, #28]
   14a34:	b	149b8 <argp_parse@@Base+0x2520>
   14a38:	andeq	r9, r1, r4, lsr r4
   14a3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a40:	sub	sp, sp, #28
   14a44:	mov	fp, r0
   14a48:	str	r1, [sp, #8]
   14a4c:	mov	r6, r2
   14a50:	mov	r8, r3
   14a54:	ldr	r7, [sp, #64]	; 0x40
   14a58:	ldr	r5, [sp, #68]	; 0x44
   14a5c:	ldr	r9, [r0, #12]
   14a60:	ldr	r3, [r0, #16]
   14a64:	str	r3, [sp, #16]
   14a68:	cmp	r9, #0
   14a6c:	beq	14ec8 <argp_parse@@Base+0x2a30>
   14a70:	mov	r1, #11
   14a74:	mov	r0, r9
   14a78:	bl	111c8 <strchr@plt>
   14a7c:	cmp	r6, #0
   14a80:	beq	14d78 <argp_parse@@Base+0x28e0>
   14a84:	cmp	r0, #0
   14a88:	addne	r9, r0, #1
   14a8c:	beq	14eb0 <argp_parse@@Base+0x2a18>
   14a90:	ldr	r3, [fp, #20]
   14a94:	cmp	r3, #0
   14a98:	movne	sl, #0
   14a9c:	beq	14eb8 <argp_parse@@Base+0x2a20>
   14aa0:	ldr	r1, [sp, #8]
   14aa4:	mov	r0, fp
   14aa8:	bl	12f0c <argp_parse@@Base+0xa74>
   14aac:	str	r0, [sp, #12]
   14ab0:	ldr	r3, [fp, #20]
   14ab4:	ldr	r2, [pc, #1140]	; 14f30 <argp_parse@@Base+0x2a98>
   14ab8:	ldr	r0, [pc, #1140]	; 14f34 <argp_parse@@Base+0x2a9c>
   14abc:	cmp	r6, #0
   14ac0:	moveq	r0, r2
   14ac4:	ldr	r2, [sp, #12]
   14ac8:	mov	r1, r9
   14acc:	blx	r3
   14ad0:	mov	r4, r0
   14ad4:	cmp	r4, #0
   14ad8:	beq	14e68 <argp_parse@@Base+0x29d0>
   14adc:	cmp	r8, #0
   14ae0:	beq	14b08 <argp_parse@@Base+0x2670>
   14ae4:	ldr	r2, [r5, #28]
   14ae8:	ldr	r3, [r5, #32]
   14aec:	cmp	r2, r3
   14af0:	bcs	14dbc <argp_parse@@Base+0x2924>
   14af4:	ldr	r3, [r5, #28]
   14af8:	add	r2, r3, #1
   14afc:	str	r2, [r5, #28]
   14b00:	mov	r2, #10
   14b04:	strb	r2, [r3]
   14b08:	cmp	r4, r9
   14b0c:	movne	r3, #0
   14b10:	moveq	r3, #1
   14b14:	cmp	sl, #0
   14b18:	moveq	r3, #0
   14b1c:	cmp	r3, #0
   14b20:	beq	14dd4 <argp_parse@@Base+0x293c>
   14b24:	ldr	r3, [r5, #28]
   14b28:	add	r3, r3, sl
   14b2c:	ldr	r2, [r5, #32]
   14b30:	cmp	r2, r3
   14b34:	bcs	14b4c <argp_parse@@Base+0x26b4>
   14b38:	mov	r1, sl
   14b3c:	mov	r0, r5
   14b40:	bl	18178 <argp_error@@Base+0x137c>
   14b44:	cmp	r0, #0
   14b48:	beq	14b68 <argp_parse@@Base+0x26d0>
   14b4c:	mov	r2, sl
   14b50:	mov	r1, r9
   14b54:	ldr	r0, [r5, #28]
   14b58:	bl	110a8 <memcpy@plt>
   14b5c:	ldr	r3, [r5, #28]
   14b60:	add	r3, r3, sl
   14b64:	str	r3, [r5, #28]
   14b68:	ldr	r3, [r5, #28]
   14b6c:	ldr	r2, [r5, #24]
   14b70:	sub	r3, r3, r2
   14b74:	ldr	r2, [r5, #16]
   14b78:	cmp	r3, r2
   14b7c:	bhi	14e34 <argp_parse@@Base+0x299c>
   14b80:	ldr	r3, [r5, #20]
   14b84:	bic	r3, r3, r3, asr #31
   14b88:	ldr	r2, [r5, #4]
   14b8c:	cmp	r2, r3
   14b90:	bcs	14bb8 <argp_parse@@Base+0x2720>
   14b94:	ldr	r2, [r5, #28]
   14b98:	ldr	r3, [r5, #32]
   14b9c:	cmp	r2, r3
   14ba0:	bcs	14e40 <argp_parse@@Base+0x29a8>
   14ba4:	ldr	r3, [r5, #28]
   14ba8:	add	r2, r3, #1
   14bac:	str	r2, [r5, #28]
   14bb0:	mov	r2, #10
   14bb4:	strb	r2, [r3]
   14bb8:	cmp	r4, r9
   14bbc:	moveq	r4, #1
   14bc0:	bne	14e58 <argp_parse@@Base+0x29c0>
   14bc4:	cmp	r9, #0
   14bc8:	cmpne	sl, #0
   14bcc:	beq	14be4 <argp_parse@@Base+0x274c>
   14bd0:	ldr	r3, [fp, #20]
   14bd4:	cmp	r3, #0
   14bd8:	beq	14cf0 <argp_parse@@Base+0x2858>
   14bdc:	mov	r0, r9
   14be0:	bl	1308c <argp_parse@@Base+0xbf4>
   14be4:	cmp	r6, #0
   14be8:	beq	14cf0 <argp_parse@@Base+0x2858>
   14bec:	ldr	r3, [fp, #20]
   14bf0:	cmp	r3, #0
   14bf4:	beq	14cf0 <argp_parse@@Base+0x2858>
   14bf8:	ldr	r2, [sp, #12]
   14bfc:	mov	r1, #0
   14c00:	ldr	r0, [pc, #816]	; 14f38 <argp_parse@@Base+0x2aa0>
   14c04:	blx	r3
   14c08:	subs	r9, r0, #0
   14c0c:	beq	14cf0 <argp_parse@@Base+0x2858>
   14c10:	orrs	r3, r8, r4
   14c14:	beq	14c3c <argp_parse@@Base+0x27a4>
   14c18:	ldr	r2, [r5, #28]
   14c1c:	ldr	r3, [r5, #32]
   14c20:	cmp	r2, r3
   14c24:	bcs	14e70 <argp_parse@@Base+0x29d8>
   14c28:	ldr	r3, [r5, #28]
   14c2c:	add	r2, r3, #1
   14c30:	str	r2, [r5, #28]
   14c34:	mov	r2, #10
   14c38:	strb	r2, [r3]
   14c3c:	mov	r0, r9
   14c40:	bl	111bc <strlen@plt>
   14c44:	subs	r4, r0, #0
   14c48:	beq	14c90 <argp_parse@@Base+0x27f8>
   14c4c:	ldr	r3, [r5, #28]
   14c50:	add	r3, r3, r4
   14c54:	ldr	r2, [r5, #32]
   14c58:	cmp	r2, r3
   14c5c:	bcs	14c74 <argp_parse@@Base+0x27dc>
   14c60:	mov	r1, r4
   14c64:	mov	r0, r5
   14c68:	bl	18178 <argp_error@@Base+0x137c>
   14c6c:	cmp	r0, #0
   14c70:	beq	14c90 <argp_parse@@Base+0x27f8>
   14c74:	mov	r2, r4
   14c78:	mov	r1, r9
   14c7c:	ldr	r0, [r5, #28]
   14c80:	bl	110a8 <memcpy@plt>
   14c84:	ldr	r3, [r5, #28]
   14c88:	add	r4, r3, r4
   14c8c:	str	r4, [r5, #28]
   14c90:	mov	r0, r9
   14c94:	bl	1308c <argp_parse@@Base+0xbf4>
   14c98:	ldr	r3, [r5, #28]
   14c9c:	ldr	r2, [r5, #24]
   14ca0:	sub	r3, r3, r2
   14ca4:	ldr	r2, [r5, #16]
   14ca8:	cmp	r3, r2
   14cac:	bhi	14e88 <argp_parse@@Base+0x29f0>
   14cb0:	ldr	r3, [r5, #20]
   14cb4:	bic	r3, r3, r3, asr #31
   14cb8:	ldr	r2, [r5, #4]
   14cbc:	cmp	r2, r3
   14cc0:	movcs	r4, #1
   14cc4:	bcs	14cf0 <argp_parse@@Base+0x2858>
   14cc8:	ldr	r2, [r5, #28]
   14ccc:	ldr	r3, [r5, #32]
   14cd0:	cmp	r2, r3
   14cd4:	bcs	14e94 <argp_parse@@Base+0x29fc>
   14cd8:	ldr	r3, [r5, #28]
   14cdc:	add	r2, r3, #1
   14ce0:	str	r2, [r5, #28]
   14ce4:	mov	r2, #10
   14ce8:	strb	r2, [r3]
   14cec:	mov	r4, #1
   14cf0:	ldr	r3, [sp, #16]
   14cf4:	cmp	r3, #0
   14cf8:	beq	14d6c <argp_parse@@Base+0x28d4>
   14cfc:	ldr	r0, [r3]
   14d00:	cmp	r0, #0
   14d04:	beq	14d6c <argp_parse@@Base+0x28d4>
   14d08:	clz	r9, r7
   14d0c:	lsr	r9, r9, #5
   14d10:	cmp	r7, #0
   14d14:	cmpne	r4, #0
   14d18:	bne	14d6c <argp_parse@@Base+0x28d4>
   14d1c:	mov	sl, r3
   14d20:	ldr	fp, [sp, #8]
   14d24:	orrs	r3, r8, r4
   14d28:	str	r5, [sp, #4]
   14d2c:	str	r7, [sp]
   14d30:	movne	r3, #1
   14d34:	moveq	r3, #0
   14d38:	mov	r2, r6
   14d3c:	mov	r1, fp
   14d40:	bl	14a3c <argp_parse@@Base+0x25a4>
   14d44:	orr	r4, r4, r0
   14d48:	ldr	r0, [sl, #16]
   14d4c:	cmp	r0, #0
   14d50:	beq	14d6c <argp_parse@@Base+0x28d4>
   14d54:	add	sl, sl, #16
   14d58:	cmp	r4, #0
   14d5c:	movne	r3, r9
   14d60:	orreq	r3, r9, #1
   14d64:	cmp	r3, #0
   14d68:	bne	14d24 <argp_parse@@Base+0x288c>
   14d6c:	mov	r0, r4
   14d70:	add	sp, sp, #28
   14d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d78:	cmp	r0, #0
   14d7c:	beq	14f00 <argp_parse@@Base+0x2a68>
   14d80:	sub	sl, r0, r9
   14d84:	ldr	r3, [fp, #20]
   14d88:	cmp	r3, #0
   14d8c:	beq	14dac <argp_parse@@Base+0x2914>
   14d90:	cmp	sl, #0
   14d94:	beq	14aa0 <argp_parse@@Base+0x2608>
   14d98:	mov	r1, sl
   14d9c:	mov	r0, r9
   14da0:	bl	1109c <strndup@plt>
   14da4:	mov	r9, r0
   14da8:	b	14aa0 <argp_parse@@Base+0x2608>
   14dac:	mov	r4, r9
   14db0:	mov	r3, #0
   14db4:	str	r3, [sp, #12]
   14db8:	b	14adc <argp_parse@@Base+0x2644>
   14dbc:	mov	r1, #1
   14dc0:	mov	r0, r5
   14dc4:	bl	18178 <argp_error@@Base+0x137c>
   14dc8:	cmp	r0, #0
   14dcc:	beq	14b08 <argp_parse@@Base+0x2670>
   14dd0:	b	14af4 <argp_parse@@Base+0x265c>
   14dd4:	mov	r0, r4
   14dd8:	bl	111bc <strlen@plt>
   14ddc:	subs	r3, r0, #0
   14de0:	mov	r1, r3
   14de4:	str	r3, [sp, #20]
   14de8:	beq	14b68 <argp_parse@@Base+0x26d0>
   14dec:	ldr	r3, [r5, #28]
   14df0:	add	r3, r3, r1
   14df4:	ldr	r2, [r5, #32]
   14df8:	cmp	r2, r3
   14dfc:	bcs	14e10 <argp_parse@@Base+0x2978>
   14e00:	mov	r0, r5
   14e04:	bl	18178 <argp_error@@Base+0x137c>
   14e08:	cmp	r0, #0
   14e0c:	beq	14b68 <argp_parse@@Base+0x26d0>
   14e10:	ldr	r2, [sp, #20]
   14e14:	mov	r1, r4
   14e18:	ldr	r0, [r5, #28]
   14e1c:	bl	110a8 <memcpy@plt>
   14e20:	ldr	r3, [r5, #28]
   14e24:	ldr	r2, [sp, #20]
   14e28:	add	r3, r3, r2
   14e2c:	str	r3, [r5, #28]
   14e30:	b	14b68 <argp_parse@@Base+0x26d0>
   14e34:	mov	r0, r5
   14e38:	bl	17bd4 <argp_error@@Base+0xdd8>
   14e3c:	b	14b80 <argp_parse@@Base+0x26e8>
   14e40:	mov	r1, #1
   14e44:	mov	r0, r5
   14e48:	bl	18178 <argp_error@@Base+0x137c>
   14e4c:	cmp	r0, #0
   14e50:	beq	14bb8 <argp_parse@@Base+0x2720>
   14e54:	b	14ba4 <argp_parse@@Base+0x270c>
   14e58:	mov	r0, r4
   14e5c:	bl	1308c <argp_parse@@Base+0xbf4>
   14e60:	mov	r4, #1
   14e64:	b	14bc4 <argp_parse@@Base+0x272c>
   14e68:	mov	r4, #0
   14e6c:	b	14bc4 <argp_parse@@Base+0x272c>
   14e70:	mov	r1, #1
   14e74:	mov	r0, r5
   14e78:	bl	18178 <argp_error@@Base+0x137c>
   14e7c:	cmp	r0, #0
   14e80:	beq	14c3c <argp_parse@@Base+0x27a4>
   14e84:	b	14c28 <argp_parse@@Base+0x2790>
   14e88:	mov	r0, r5
   14e8c:	bl	17bd4 <argp_error@@Base+0xdd8>
   14e90:	b	14cb0 <argp_parse@@Base+0x2818>
   14e94:	mov	r1, #1
   14e98:	mov	r0, r5
   14e9c:	bl	18178 <argp_error@@Base+0x137c>
   14ea0:	cmp	r0, #0
   14ea4:	moveq	r4, #1
   14ea8:	beq	14cf0 <argp_parse@@Base+0x2858>
   14eac:	b	14cd8 <argp_parse@@Base+0x2840>
   14eb0:	mov	r9, #0
   14eb4:	b	14a90 <argp_parse@@Base+0x25f8>
   14eb8:	mov	r4, r9
   14ebc:	mov	sl, #0
   14ec0:	str	sl, [sp, #12]
   14ec4:	b	14ad4 <argp_parse@@Base+0x263c>
   14ec8:	ldr	r3, [r0, #20]
   14ecc:	cmp	r3, #0
   14ed0:	movne	sl, #0
   14ed4:	bne	14aa0 <argp_parse@@Base+0x2608>
   14ed8:	mov	r3, r9
   14edc:	cmp	r9, #0
   14ee0:	moveq	r4, #0
   14ee4:	streq	r4, [sp, #12]
   14ee8:	beq	14be4 <argp_parse@@Base+0x274c>
   14eec:	mov	r4, r9
   14ef0:	mov	r9, r3
   14ef4:	mov	sl, #0
   14ef8:	str	sl, [sp, #12]
   14efc:	b	14adc <argp_parse@@Base+0x2644>
   14f00:	ldr	r3, [fp, #20]
   14f04:	cmp	r3, #0
   14f08:	moveq	r3, r9
   14f0c:	beq	14edc <argp_parse@@Base+0x2a44>
   14f10:	ldr	r1, [sp, #8]
   14f14:	mov	r0, fp
   14f18:	bl	12f0c <argp_parse@@Base+0xa74>
   14f1c:	str	r0, [sp, #12]
   14f20:	ldr	r3, [fp, #20]
   14f24:	mov	sl, #0
   14f28:	ldr	r0, [pc]	; 14f30 <argp_parse@@Base+0x2a98>
   14f2c:	b	14ac4 <argp_parse@@Base+0x262c>
   14f30:	andeq	r0, r0, #1
   14f34:	andeq	r0, r0, #2
   14f38:	andeq	r0, r0, #4
   14f3c:	ldr	r3, [r0, #12]
   14f40:	ldr	r2, [r1, #12]
   14f44:	cmp	r3, r2
   14f48:	beq	14fa0 <argp_parse@@Base+0x2b08>
   14f4c:	push	{r4, r5, r6, lr}
   14f50:	mov	r5, r1
   14f54:	mov	r4, r0
   14f58:	mov	r1, r2
   14f5c:	mov	r0, r3
   14f60:	bl	14f3c <argp_parse@@Base+0x2aa4>
   14f64:	subs	r3, r0, #0
   14f68:	bne	14f98 <argp_parse@@Base+0x2b00>
   14f6c:	ldr	r0, [r4, #8]
   14f70:	ldr	r3, [r5, #8]
   14f74:	mvn	r2, r3
   14f78:	lsr	r2, r2, #31
   14f7c:	cmp	r2, r0, lsr #31
   14f80:	subne	r3, r0, r3
   14f84:	subeq	r3, r3, r0
   14f88:	cmp	r3, #0
   14f8c:	ldreq	r3, [r5, #4]
   14f90:	ldreq	r0, [r4, #4]
   14f94:	subeq	r3, r3, r0
   14f98:	mov	r0, r3
   14f9c:	pop	{r4, r5, r6, pc}
   14fa0:	ldr	r2, [r0, #8]
   14fa4:	ldr	r3, [r1, #8]
   14fa8:	mvn	ip, r3
   14fac:	lsr	ip, ip, #31
   14fb0:	cmp	ip, r2, lsr #31
   14fb4:	subne	r3, r2, r3
   14fb8:	subeq	r3, r3, r2
   14fbc:	cmp	r3, #0
   14fc0:	ldreq	r3, [r1, #4]
   14fc4:	ldreq	r0, [r0, #4]
   14fc8:	subeq	r3, r3, r0
   14fcc:	mov	r0, r3
   14fd0:	bx	lr
   14fd4:	push	{r4, r5, r6, r7, r8, lr}
   14fd8:	sub	sp, sp, #8
   14fdc:	ldr	lr, [r0, #16]
   14fe0:	cmp	lr, #0
   14fe4:	movne	r2, lr
   14fe8:	bne	14ff8 <argp_parse@@Base+0x2b60>
   14fec:	ldr	ip, [r0, #12]
   14ff0:	b	15008 <argp_parse@@Base+0x2b70>
   14ff4:	mov	r2, r3
   14ff8:	ldr	r3, [r2, #12]
   14ffc:	cmp	r3, #0
   15000:	bne	14ff4 <argp_parse@@Base+0x2b5c>
   15004:	ldr	ip, [r2, #8]
   15008:	ldr	r5, [r1, #16]
   1500c:	cmp	r5, #0
   15010:	movne	r2, r5
   15014:	bne	15024 <argp_parse@@Base+0x2b8c>
   15018:	ldr	r4, [r1, #12]
   1501c:	b	15034 <argp_parse@@Base+0x2b9c>
   15020:	mov	r2, r3
   15024:	ldr	r3, [r2, #12]
   15028:	cmp	r3, #0
   1502c:	bne	15020 <argp_parse@@Base+0x2b88>
   15030:	ldr	r4, [r2, #8]
   15034:	mvn	r3, r4
   15038:	lsr	r3, r3, #31
   1503c:	cmp	r3, ip, lsr #31
   15040:	subne	r4, ip, r4
   15044:	subeq	r4, r4, ip
   15048:	cmp	r4, #0
   1504c:	bne	150b4 <argp_parse@@Base+0x2c1c>
   15050:	adds	r4, r5, #0
   15054:	movne	r4, #1
   15058:	cmp	lr, #0
   1505c:	rsbeq	r4, r4, #0
   15060:	rsbne	r4, r4, #1
   15064:	cmp	r4, #0
   15068:	bne	150b4 <argp_parse@@Base+0x2c1c>
   1506c:	mov	r6, r1
   15070:	mov	r7, r0
   15074:	cmp	lr, #0
   15078:	beq	15104 <argp_parse@@Base+0x2c6c>
   1507c:	ldr	ip, [lr, #20]
   15080:	ldr	r2, [r5, #20]
   15084:	cmp	ip, r2
   15088:	ble	150c0 <argp_parse@@Base+0x2c28>
   1508c:	mov	r0, lr
   15090:	ldr	r0, [r0, #12]
   15094:	ldr	r3, [r0, #20]
   15098:	cmp	r2, r3
   1509c:	blt	15090 <argp_parse@@Base+0x2bf8>
   150a0:	mov	r1, r5
   150a4:	bl	14f3c <argp_parse@@Base+0x2aa4>
   150a8:	subs	r4, r0, #0
   150ac:	cmp	r0, #0
   150b0:	moveq	r4, #1
   150b4:	mov	r0, r4
   150b8:	add	sp, sp, #8
   150bc:	pop	{r4, r5, r6, r7, r8, pc}
   150c0:	cmp	ip, r2
   150c4:	bge	150f0 <argp_parse@@Base+0x2c58>
   150c8:	mov	r1, r5
   150cc:	ldr	r1, [r1, #12]
   150d0:	ldr	r3, [r1, #20]
   150d4:	cmp	ip, r3
   150d8:	blt	150cc <argp_parse@@Base+0x2c34>
   150dc:	mov	r0, lr
   150e0:	bl	14f3c <argp_parse@@Base+0x2aa4>
   150e4:	subs	r4, r0, #0
   150e8:	mvneq	r4, #0
   150ec:	b	150b4 <argp_parse@@Base+0x2c1c>
   150f0:	mov	r1, r5
   150f4:	mov	r0, lr
   150f8:	bl	14f3c <argp_parse@@Base+0x2aa4>
   150fc:	subs	r4, r0, #0
   15100:	bne	150b4 <argp_parse@@Base+0x2c1c>
   15104:	ldr	r3, [r7, #12]
   15108:	ldr	r4, [r6, #12]
   1510c:	mvn	r2, r4
   15110:	lsr	r2, r2, #31
   15114:	cmp	r2, r3, lsr #31
   15118:	subne	r4, r3, r4
   1511c:	subeq	r4, r4, r3
   15120:	cmp	r4, #0
   15124:	bne	150b4 <argp_parse@@Base+0x2c1c>
   15128:	mov	r0, r7
   1512c:	bl	13d7c <argp_parse@@Base+0x18e4>
   15130:	mov	r5, r0
   15134:	str	r0, [sp]
   15138:	mov	r0, r6
   1513c:	bl	13d7c <argp_parse@@Base+0x18e4>
   15140:	str	r0, [sp, #4]
   15144:	ldr	r3, [r7]
   15148:	ldr	r3, [r3, #12]
   1514c:	adds	r5, r5, #0
   15150:	movne	r5, #1
   15154:	ands	r3, r5, r3, lsr #3
   15158:	beq	1529c <argp_parse@@Base+0x2e04>
   1515c:	mov	r0, sp
   15160:	bl	13f40 <argp_parse@@Base+0x1aa8>
   15164:	adds	r5, r0, #0
   15168:	movne	r5, #1
   1516c:	ldr	r3, [r6]
   15170:	ldr	r0, [r3, #12]
   15174:	ands	r0, r0, #8
   15178:	beq	15198 <argp_parse@@Base+0x2d00>
   1517c:	ldr	r3, [sp, #4]
   15180:	cmp	r3, #0
   15184:	beq	15294 <argp_parse@@Base+0x2dfc>
   15188:	add	r0, sp, #4
   1518c:	bl	13f40 <argp_parse@@Base+0x1aa8>
   15190:	adds	r0, r0, #0
   15194:	movne	r0, #1
   15198:	subs	r4, r5, r0
   1519c:	bne	150b4 <argp_parse@@Base+0x2c1c>
   151a0:	ldr	r2, [r7, #20]
   151a4:	ldr	r4, [pc, #276]	; 152c0 <argp_parse@@Base+0x2e28>
   151a8:	mov	r3, #0
   151ac:	ldr	r2, [r2, #24]
   151b0:	mov	r1, r4
   151b4:	mov	r0, r7
   151b8:	bl	13e14 <argp_parse@@Base+0x197c>
   151bc:	mov	r5, r0
   151c0:	uxtb	r8, r0
   151c4:	ldr	r2, [r6, #20]
   151c8:	mov	r3, #0
   151cc:	ldr	r2, [r2, #24]
   151d0:	mov	r1, r4
   151d4:	mov	r0, r6
   151d8:	bl	13e14 <argp_parse@@Base+0x197c>
   151dc:	uxtb	r7, r0
   151e0:	cmp	r8, #0
   151e4:	movne	r5, r8
   151e8:	bne	151fc <argp_parse@@Base+0x2d64>
   151ec:	ldr	r3, [sp]
   151f0:	cmp	r3, #0
   151f4:	ldrbne	r5, [r3]
   151f8:	moveq	r5, #0
   151fc:	cmp	r7, #0
   15200:	uxtbne	r6, r0
   15204:	bne	15218 <argp_parse@@Base+0x2d80>
   15208:	ldr	r3, [sp, #4]
   1520c:	cmp	r3, #0
   15210:	ldrbne	r6, [r3]
   15214:	moveq	r6, #0
   15218:	bl	1115c <__ctype_tolower_loc@plt>
   1521c:	ldr	r3, [r0]
   15220:	ldr	r4, [r3, r5, lsl #2]
   15224:	ldr	r3, [r3, r6, lsl #2]
   15228:	subs	r4, r4, r3
   1522c:	bne	150b4 <argp_parse@@Base+0x2c1c>
   15230:	subs	r4, r6, r5
   15234:	bne	150b4 <argp_parse@@Base+0x2c1c>
   15238:	adds	r4, r7, #0
   1523c:	movne	r4, #1
   15240:	cmp	r8, #0
   15244:	rsbeq	r4, r4, #0
   15248:	rsbne	r4, r4, #1
   1524c:	cmp	r4, #0
   15250:	bne	150b4 <argp_parse@@Base+0x2c1c>
   15254:	cmp	r8, #0
   15258:	bne	150b4 <argp_parse@@Base+0x2c1c>
   1525c:	ldr	r0, [sp]
   15260:	ldr	r1, [sp, #4]
   15264:	adds	r4, r1, #0
   15268:	movne	r4, #1
   1526c:	cmp	r0, #0
   15270:	rsbeq	r4, r4, #0
   15274:	rsbne	r4, r4, #1
   15278:	cmp	r4, #0
   1527c:	bne	150b4 <argp_parse@@Base+0x2c1c>
   15280:	cmp	r0, #0
   15284:	beq	150b4 <argp_parse@@Base+0x2c1c>
   15288:	bl	110f0 <strcasecmp@plt>
   1528c:	mov	r4, r0
   15290:	b	150b4 <argp_parse@@Base+0x2c1c>
   15294:	mov	r0, r4
   15298:	b	15198 <argp_parse@@Base+0x2d00>
   1529c:	ldr	r3, [r6]
   152a0:	ldr	r3, [r3, #12]
   152a4:	tst	r3, #8
   152a8:	beq	151a0 <argp_parse@@Base+0x2d08>
   152ac:	ldr	r3, [sp, #4]
   152b0:	cmp	r3, #0
   152b4:	movne	r5, r4
   152b8:	bne	15188 <argp_parse@@Base+0x2cf0>
   152bc:	b	151a0 <argp_parse@@Base+0x2d08>
   152c0:	strdeq	r3, [r1], -r8
   152c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152c8:	sub	sp, sp, #52	; 0x34
   152cc:	str	r0, [sp, #24]
   152d0:	str	r1, [sp, #28]
   152d4:	ldr	r2, [r0, #16]
   152d8:	str	r2, [sp, #8]
   152dc:	ldr	r5, [r0]
   152e0:	mov	r0, #16
   152e4:	bl	13cfc <argp_parse@@Base+0x1864>
   152e8:	subs	fp, r0, #0
   152ec:	beq	1531c <argp_parse@@Base+0x2e84>
   152f0:	mov	r3, #0
   152f4:	str	r3, [fp, #4]
   152f8:	str	r3, [fp, #12]
   152fc:	cmp	r5, r3
   15300:	beq	154f4 <argp_parse@@Base+0x305c>
   15304:	ldr	r4, [r5, #12]
   15308:	ands	r4, r4, #4
   1530c:	bne	15330 <argp_parse@@Base+0x2e98>
   15310:	add	r6, r5, #24
   15314:	mov	r8, r3
   15318:	b	15358 <argp_parse@@Base+0x2ec0>
   1531c:	ldr	r3, [pc, #1576]	; 1594c <argp_parse@@Base+0x34b4>
   15320:	ldr	r2, [pc, #1576]	; 15950 <argp_parse@@Base+0x34b8>
   15324:	ldr	r1, [pc, #1576]	; 15954 <argp_parse@@Base+0x34bc>
   15328:	ldr	r0, [pc, #1576]	; 15958 <argp_parse@@Base+0x34c0>
   1532c:	bl	112f4 <__assert_fail@plt>
   15330:	ldr	r3, [pc, #1556]	; 1594c <argp_parse@@Base+0x34b4>
   15334:	mov	r2, #460	; 0x1cc
   15338:	ldr	r1, [pc, #1556]	; 15954 <argp_parse@@Base+0x34bc>
   1533c:	ldr	r0, [pc, #1560]	; 1595c <argp_parse@@Base+0x34c4>
   15340:	bl	112f4 <__assert_fail@plt>
   15344:	ldr	r2, [fp, #4]
   15348:	add	r2, r2, #1
   1534c:	str	r2, [fp, #4]
   15350:	b	15380 <argp_parse@@Base+0x2ee8>
   15354:	add	r6, r6, #24
   15358:	mov	r3, r6
   1535c:	ldr	r2, [r6, #-20]	; 0xffffffec
   15360:	cmp	r2, #0
   15364:	bne	15374 <argp_parse@@Base+0x2edc>
   15368:	ldr	r2, [r6, #-24]	; 0xffffffe8
   1536c:	cmp	r2, #0
   15370:	beq	153b8 <argp_parse@@Base+0x2f20>
   15374:	ldr	r2, [r3, #-12]
   15378:	tst	r2, #4
   1537c:	beq	15344 <argp_parse@@Base+0x2eac>
   15380:	ldr	r2, [r3, #-12]
   15384:	tst	r2, #8
   15388:	bne	15354 <argp_parse@@Base+0x2ebc>
   1538c:	ldr	r7, [r3, #-20]	; 0xffffffec
   15390:	sub	r3, r7, #1
   15394:	cmp	r3, #254	; 0xfe
   15398:	bhi	15354 <argp_parse@@Base+0x2ebc>
   1539c:	bl	1118c <__ctype_b_loc@plt>
   153a0:	ldr	r3, [r0]
   153a4:	lsl	r7, r7, #1
   153a8:	ldrh	r3, [r3, r7]
   153ac:	tst	r3, #16384	; 0x4000
   153b0:	addne	r8, r8, #1
   153b4:	b	15354 <argp_parse@@Base+0x2ebc>
   153b8:	ldr	r2, [r6, #-8]
   153bc:	cmp	r2, #0
   153c0:	bne	15374 <argp_parse@@Base+0x2edc>
   153c4:	ldr	r2, [r6, #-4]
   153c8:	cmp	r2, #0
   153cc:	bne	15374 <argp_parse@@Base+0x2edc>
   153d0:	ldr	r0, [fp, #4]
   153d4:	rsb	r0, r0, r0, lsl #3
   153d8:	lsl	r0, r0, #2
   153dc:	bl	13cfc <argp_parse@@Base+0x1864>
   153e0:	str	r0, [fp]
   153e4:	add	r0, r8, #1
   153e8:	bl	13cfc <argp_parse@@Base+0x1864>
   153ec:	str	r0, [fp, #8]
   153f0:	ldr	r8, [fp]
   153f4:	cmp	r0, #0
   153f8:	cmpne	r8, #0
   153fc:	bne	15414 <argp_parse@@Base+0x2f7c>
   15400:	ldr	r3, [pc, #1348]	; 1594c <argp_parse@@Base+0x34b4>
   15404:	ldr	r2, [pc, #1364]	; 15960 <argp_parse@@Base+0x34c8>
   15408:	ldr	r1, [pc, #1348]	; 15954 <argp_parse@@Base+0x34bc>
   1540c:	ldr	r0, [pc, #1360]	; 15964 <argp_parse@@Base+0x34cc>
   15410:	bl	112f4 <__assert_fail@plt>
   15414:	ldr	r2, [fp, #4]
   15418:	ldr	r3, [pc, #1352]	; 15968 <argp_parse@@Base+0x34d0>
   1541c:	cmp	r2, r3
   15420:	addls	r8, r8, #28
   15424:	movls	r7, r0
   15428:	movls	sl, #0
   1542c:	bls	15478 <argp_parse@@Base+0x2fe0>
   15430:	ldr	r3, [pc, #1300]	; 1594c <argp_parse@@Base+0x34b4>
   15434:	mov	r2, #476	; 0x1dc
   15438:	ldr	r1, [pc, #1300]	; 15954 <argp_parse@@Base+0x34bc>
   1543c:	ldr	r0, [pc, #1320]	; 1596c <argp_parse@@Base+0x34d4>
   15440:	bl	112f4 <__assert_fail@plt>
   15444:	ldr	r3, [r5, #4]
   15448:	cmp	r3, #0
   1544c:	addeq	r9, r4, #1
   15450:	movne	r9, r4
   15454:	b	154bc <argp_parse@@Base+0x3024>
   15458:	ldr	r3, [r5, #16]
   1545c:	cmp	r3, #0
   15460:	bne	15868 <argp_parse@@Base+0x33d0>
   15464:	ldr	r3, [r5, #20]
   15468:	cmp	r3, #0
   1546c:	bne	15868 <argp_parse@@Base+0x33d0>
   15470:	add	r8, r8, #28
   15474:	mov	r4, r9
   15478:	ldr	r3, [r5, #4]
   1547c:	cmp	r3, #0
   15480:	bne	15490 <argp_parse@@Base+0x2ff8>
   15484:	ldr	r3, [r5]
   15488:	cmp	r3, #0
   1548c:	beq	154d4 <argp_parse@@Base+0x303c>
   15490:	mov	r6, r8
   15494:	str	r5, [r8, #-28]	; 0xffffffe4
   15498:	str	sl, [r8, #-24]	; 0xffffffe8
   1549c:	str	r7, [r8, #-20]	; 0xffffffec
   154a0:	ldr	r9, [r5, #20]
   154a4:	cmp	r9, #0
   154a8:	bne	154bc <argp_parse@@Base+0x3024>
   154ac:	ldr	r3, [r5]
   154b0:	cmp	r3, #0
   154b4:	movne	r9, r4
   154b8:	beq	15444 <argp_parse@@Base+0x2fac>
   154bc:	str	r9, [r6, #-16]
   154c0:	ldr	r3, [sp, #28]
   154c4:	str	r3, [r6, #-12]
   154c8:	ldr	r3, [sp, #24]
   154cc:	str	r3, [r6, #-8]
   154d0:	b	15874 <argp_parse@@Base+0x33dc>
   154d4:	ldr	r3, [r5, #16]
   154d8:	cmp	r3, #0
   154dc:	bne	15490 <argp_parse@@Base+0x2ff8>
   154e0:	ldr	r3, [r5, #20]
   154e4:	cmp	r3, #0
   154e8:	bne	15490 <argp_parse@@Base+0x2ff8>
   154ec:	mov	r3, #0
   154f0:	strb	r3, [r7]
   154f4:	ldr	r3, [sp, #8]
   154f8:	cmp	r3, #0
   154fc:	beq	15838 <argp_parse@@Base+0x33a0>
   15500:	ldr	r3, [r3]
   15504:	cmp	r3, #0
   15508:	beq	15838 <argp_parse@@Base+0x33a0>
   1550c:	add	r3, fp, #12
   15510:	str	r3, [sp, #44]	; 0x2c
   15514:	str	fp, [sp, #20]
   15518:	b	155a8 <argp_parse@@Base+0x3110>
   1551c:	ldr	r1, [sp, #28]
   15520:	b	15628 <argp_parse@@Base+0x3190>
   15524:	mov	r2, r3
   15528:	ldr	r3, [r2, #24]
   1552c:	cmp	r3, #0
   15530:	bne	15524 <argp_parse@@Base+0x308c>
   15534:	add	r2, r2, #24
   15538:	ldr	r1, [sp, #16]
   1553c:	ldr	r3, [r1, #12]
   15540:	str	r3, [r2]
   15544:	mov	r2, #0
   15548:	str	r2, [r1, #12]
   1554c:	ldr	r3, [r1, #4]
   15550:	cmp	r3, r2
   15554:	beq	1558c <argp_parse@@Base+0x30f4>
   15558:	ldr	r0, [sp, #20]
   1555c:	ldr	r2, [r0, #4]
   15560:	cmp	r2, #0
   15564:	bne	15650 <argp_parse@@Base+0x31b8>
   15568:	str	r3, [r0, #4]
   1556c:	mov	r2, r1
   15570:	ldr	r3, [r1]
   15574:	str	r3, [r0]
   15578:	ldr	r3, [r2, #8]
   1557c:	str	r3, [r0, #8]
   15580:	mov	r3, r2
   15584:	mov	r2, #0
   15588:	str	r2, [r3, #4]
   1558c:	ldr	r0, [sp, #16]
   15590:	bl	14178 <argp_parse@@Base+0x1ce0>
   15594:	ldr	r2, [sp, #8]
   15598:	ldr	r3, [r2, #16]!
   1559c:	str	r2, [sp, #8]
   155a0:	cmp	r3, #0
   155a4:	beq	15834 <argp_parse@@Base+0x339c>
   155a8:	ldr	r3, [sp, #8]
   155ac:	ldr	r4, [r3, #12]
   155b0:	cmp	r4, #0
   155b4:	bne	155c4 <argp_parse@@Base+0x312c>
   155b8:	ldr	r3, [r3, #8]
   155bc:	cmp	r3, #0
   155c0:	beq	1551c <argp_parse@@Base+0x3084>
   155c4:	ldr	r2, [sp, #8]
   155c8:	ldr	r5, [r2, #8]
   155cc:	ldr	r7, [sp, #24]
   155d0:	ldr	r3, [r7, #16]
   155d4:	sub	r3, r2, r3
   155d8:	asr	r6, r3, #4
   155dc:	mov	r0, #28
   155e0:	bl	13cfc <argp_parse@@Base+0x1864>
   155e4:	subs	r1, r0, #0
   155e8:	beq	15628 <argp_parse@@Base+0x3190>
   155ec:	str	r4, [r1, #8]
   155f0:	str	r5, [r1]
   155f4:	str	r6, [r1, #4]
   155f8:	ldr	r3, [sp, #28]
   155fc:	str	r3, [r1, #12]
   15600:	str	r7, [r1, #16]
   15604:	cmp	r3, #0
   15608:	ldrne	r3, [r3, #20]
   1560c:	addne	r3, r3, #1
   15610:	moveq	r3, #0
   15614:	str	r3, [r1, #20]
   15618:	ldr	r2, [sp, #20]
   1561c:	ldr	r3, [r2, #12]
   15620:	str	r3, [r1, #24]
   15624:	str	r1, [r2, #12]
   15628:	ldr	r3, [sp, #8]
   1562c:	ldr	r0, [r3]
   15630:	bl	152c4 <argp_parse@@Base+0x2e2c>
   15634:	str	r0, [sp, #16]
   15638:	ldr	r3, [sp, #20]
   1563c:	ldr	r2, [r3, #12]
   15640:	cmp	r2, #0
   15644:	ldreq	r2, [sp, #44]	; 0x2c
   15648:	bne	15528 <argp_parse@@Base+0x3090>
   1564c:	b	15538 <argp_parse@@Base+0x30a0>
   15650:	add	r3, r3, r2
   15654:	str	r3, [sp, #36]	; 0x24
   15658:	rsb	r0, r3, r3, lsl #3
   1565c:	lsl	r0, r0, #2
   15660:	bl	13cfc <argp_parse@@Base+0x1864>
   15664:	mov	r4, r0
   15668:	str	r0, [sp, #32]
   1566c:	ldr	r3, [sp, #20]
   15670:	ldr	r0, [r3, #8]
   15674:	bl	111bc <strlen@plt>
   15678:	mov	r6, r0
   1567c:	ldr	r3, [sp, #16]
   15680:	ldr	r0, [r3, #8]
   15684:	bl	111bc <strlen@plt>
   15688:	add	r0, r6, r0
   1568c:	add	r0, r0, #1
   15690:	bl	13cfc <argp_parse@@Base+0x1864>
   15694:	mov	sl, r0
   15698:	cmp	r4, #0
   1569c:	cmpne	r0, #0
   156a0:	beq	1576c <argp_parse@@Base+0x32d4>
   156a4:	ldr	r3, [sp, #36]	; 0x24
   156a8:	ldr	r2, [pc, #696]	; 15968 <argp_parse@@Base+0x34d0>
   156ac:	cmp	r3, r2
   156b0:	bhi	15780 <argp_parse@@Base+0x32e8>
   156b4:	ldr	r5, [sp, #20]
   156b8:	ldr	r2, [r5]
   156bc:	mov	r1, r2
   156c0:	str	r2, [sp, #40]	; 0x28
   156c4:	ldr	r4, [r5, #4]
   156c8:	rsb	r7, r4, r4, lsl #3
   156cc:	lsl	r7, r7, #2
   156d0:	mov	r2, r7
   156d4:	ldr	r8, [sp, #32]
   156d8:	mov	r0, r8
   156dc:	bl	11180 <mempcpy@plt>
   156e0:	ldr	r3, [sp, #16]
   156e4:	ldr	r1, [r3, #4]
   156e8:	str	r1, [sp, #4]
   156ec:	rsb	r2, r1, r1, lsl #3
   156f0:	lsl	r2, r2, #2
   156f4:	ldr	r1, [r3]
   156f8:	bl	110a8 <memcpy@plt>
   156fc:	ldr	r5, [r5, #8]
   15700:	mov	r2, r6
   15704:	mov	r1, r5
   15708:	mov	r0, sl
   1570c:	bl	110a8 <memcpy@plt>
   15710:	cmp	r4, #0
   15714:	beq	15794 <argp_parse@@Base+0x32fc>
   15718:	mov	r2, r8
   1571c:	ldr	r3, [r2, #8]
   15720:	sub	r3, r3, r5
   15724:	add	r3, sl, r3
   15728:	str	r3, [r2, #8]
   1572c:	add	r2, r2, #28
   15730:	subs	r4, r4, #1
   15734:	bne	1571c <argp_parse@@Base+0x3284>
   15738:	ldr	r3, [sp, #32]
   1573c:	add	r7, r3, r7
   15740:	add	r3, sl, r6
   15744:	str	r3, [sp, #12]
   15748:	ldr	r2, [sp, #16]
   1574c:	ldr	r8, [r2, #8]
   15750:	ldr	r2, [sp, #4]
   15754:	cmp	r2, #0
   15758:	beq	157fc <argp_parse@@Base+0x3364>
   1575c:	add	r9, r7, #28
   15760:	mov	fp, r3
   15764:	sub	r7, r3, #1
   15768:	b	157e4 <argp_parse@@Base+0x334c>
   1576c:	ldr	r3, [pc, #508]	; 15970 <argp_parse@@Base+0x34d8>
   15770:	ldr	r2, [pc, #508]	; 15974 <argp_parse@@Base+0x34dc>
   15774:	ldr	r1, [pc, #472]	; 15954 <argp_parse@@Base+0x34bc>
   15778:	ldr	r0, [pc, #504]	; 15978 <argp_parse@@Base+0x34e0>
   1577c:	bl	112f4 <__assert_fail@plt>
   15780:	ldr	r3, [pc, #488]	; 15970 <argp_parse@@Base+0x34d8>
   15784:	mov	r2, #972	; 0x3cc
   15788:	ldr	r1, [pc, #452]	; 15954 <argp_parse@@Base+0x34bc>
   1578c:	ldr	r0, [pc, #488]	; 1597c <argp_parse@@Base+0x34e4>
   15790:	bl	112f4 <__assert_fail@plt>
   15794:	ldr	r7, [sp, #32]
   15798:	b	15740 <argp_parse@@Base+0x32a8>
   1579c:	ldr	r3, [sp, #12]
   157a0:	cmp	sl, r3
   157a4:	bcs	1593c <argp_parse@@Base+0x34a4>
   157a8:	ldrb	r3, [sl]
   157ac:	cmp	r3, r1
   157b0:	beq	15944 <argp_parse@@Base+0x34ac>
   157b4:	mov	r3, sl
   157b8:	cmp	r7, r3
   157bc:	beq	1593c <argp_parse@@Base+0x34a4>
   157c0:	ldrb	r2, [r3, #1]!
   157c4:	cmp	r2, r1
   157c8:	bne	157b8 <argp_parse@@Base+0x3320>
   157cc:	b	15944 <argp_parse@@Base+0x34ac>
   157d0:	add	r9, r9, #28
   157d4:	ldr	r3, [sp, #4]
   157d8:	subs	r3, r3, #1
   157dc:	str	r3, [sp, #4]
   157e0:	beq	15800 <argp_parse@@Base+0x3368>
   157e4:	str	fp, [r9, #-20]	; 0xffffffec
   157e8:	ldr	r5, [r9, #-24]	; 0xffffffe8
   157ec:	ldr	r4, [r9, #-28]	; 0xffffffe4
   157f0:	cmp	r5, #0
   157f4:	bne	15904 <argp_parse@@Base+0x346c>
   157f8:	b	157d0 <argp_parse@@Base+0x3338>
   157fc:	ldr	fp, [sp, #12]
   15800:	mov	r3, #0
   15804:	strb	r3, [fp]
   15808:	ldr	r0, [sp, #40]	; 0x28
   1580c:	bl	1308c <argp_parse@@Base+0xbf4>
   15810:	ldr	r4, [sp, #20]
   15814:	ldr	r0, [r4, #8]
   15818:	bl	1308c <argp_parse@@Base+0xbf4>
   1581c:	ldr	r2, [sp, #32]
   15820:	str	r2, [r4]
   15824:	ldr	r2, [sp, #36]	; 0x24
   15828:	str	r2, [r4, #4]
   1582c:	str	sl, [r4, #8]
   15830:	b	1558c <argp_parse@@Base+0x30f4>
   15834:	ldr	fp, [sp, #20]
   15838:	mov	r0, fp
   1583c:	add	sp, sp, #52	; 0x34
   15840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15844:	strb	r4, [r7]
   15848:	add	r7, r7, #1
   1584c:	add	r5, r5, #24
   15850:	ldr	r3, [r5, #4]
   15854:	cmp	r3, #0
   15858:	bne	15868 <argp_parse@@Base+0x33d0>
   1585c:	ldr	r3, [r5]
   15860:	cmp	r3, #0
   15864:	beq	15458 <argp_parse@@Base+0x2fc0>
   15868:	ldr	r3, [r5, #12]
   1586c:	tst	r3, #4
   15870:	beq	15470 <argp_parse@@Base+0x2fd8>
   15874:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15878:	add	r3, r3, #1
   1587c:	str	r3, [r6, #-24]	; 0xffffffe8
   15880:	ldr	r3, [r5, #12]
   15884:	tst	r3, #8
   15888:	bne	1584c <argp_parse@@Base+0x33b4>
   1588c:	ldr	r4, [r5, #4]
   15890:	sub	r3, r4, #1
   15894:	cmp	r3, #254	; 0xfe
   15898:	bhi	1584c <argp_parse@@Base+0x33b4>
   1589c:	bl	1118c <__ctype_b_loc@plt>
   158a0:	ldr	r2, [r0]
   158a4:	lsl	r3, r4, #1
   158a8:	ldrh	r3, [r2, r3]
   158ac:	tst	r3, #16384	; 0x4000
   158b0:	beq	1584c <argp_parse@@Base+0x33b4>
   158b4:	uxtb	r4, r4
   158b8:	ldr	r3, [fp, #8]
   158bc:	cmp	r3, r7
   158c0:	bcs	15844 <argp_parse@@Base+0x33ac>
   158c4:	ldrb	r2, [r3]
   158c8:	cmp	r2, r4
   158cc:	beq	1584c <argp_parse@@Base+0x33b4>
   158d0:	sub	r1, r7, #1
   158d4:	cmp	r3, r1
   158d8:	beq	15844 <argp_parse@@Base+0x33ac>
   158dc:	ldrb	r2, [r3, #1]!
   158e0:	cmp	r2, r4
   158e4:	bne	158d4 <argp_parse@@Base+0x343c>
   158e8:	b	1584c <argp_parse@@Base+0x33b4>
   158ec:	ldrb	r1, [r8]
   158f0:	cmp	r1, r6
   158f4:	beq	1579c <argp_parse@@Base+0x3304>
   158f8:	add	r4, r4, #24
   158fc:	subs	r5, r5, #1
   15900:	beq	157d0 <argp_parse@@Base+0x3338>
   15904:	ldr	r3, [r4, #12]
   15908:	tst	r3, #8
   1590c:	bne	158f8 <argp_parse@@Base+0x3460>
   15910:	ldr	r6, [r4, #4]
   15914:	sub	r3, r6, #1
   15918:	cmp	r3, #254	; 0xfe
   1591c:	bhi	158f8 <argp_parse@@Base+0x3460>
   15920:	bl	1118c <__ctype_b_loc@plt>
   15924:	ldr	r2, [r0]
   15928:	lsl	r3, r6, #1
   1592c:	ldrh	r3, [r2, r3]
   15930:	tst	r3, #16384	; 0x4000
   15934:	bne	158ec <argp_parse@@Base+0x3454>
   15938:	b	158f8 <argp_parse@@Base+0x3460>
   1593c:	strb	r1, [fp]
   15940:	add	fp, fp, #1
   15944:	add	r8, r8, #1
   15948:	b	158f8 <argp_parse@@Base+0x3460>
   1594c:	andeq	r9, r1, r8, asr #6
   15950:	andeq	r0, r0, r2, asr #3
   15954:	andeq	r9, r1, r8, lsr r4
   15958:	andeq	r9, r1, r4, asr #8
   1595c:	andeq	r9, r1, r8, asr #8
   15960:	ldrdeq	r0, [r0], -sl
   15964:	andeq	r9, r1, r8, asr r4
   15968:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   1596c:	andeq	r9, r1, ip, ror r4
   15970:	andeq	r9, r1, r4, asr r3
   15974:	andeq	r0, r0, sl, asr #7
   15978:			; <UNDEFINED> instruction: 0x000194b8
   1597c:	ldrdeq	r9, [r1], -r4

00015980 <argp_failure@@Base>:
   15980:	push	{r3}		; (str r3, [sp, #-4]!)
   15984:	push	{r4, r5, r6, r7, lr}
   15988:	sub	sp, sp, #200	; 0xc8
   1598c:	mov	r7, r1
   15990:	mov	r6, r2
   15994:	subs	r5, r0, #0
   15998:	beq	15ae8 <argp_failure@@Base+0x168>
   1599c:	ldr	r3, [r5, #16]
   159a0:	tst	r3, #2
   159a4:	bne	15ad8 <argp_failure@@Base+0x158>
   159a8:	ldr	r4, [r5, #44]	; 0x2c
   159ac:	cmp	r4, #0
   159b0:	beq	15ad8 <argp_failure@@Base+0x158>
   159b4:	mov	r0, r4
   159b8:	bl	11270 <flockfile@plt>
   159bc:	ldr	r0, [r5, #40]	; 0x28
   159c0:	mov	r1, r4
   159c4:	bl	1100c <fputs_unlocked@plt>
   159c8:	ldr	r3, [sp, #220]	; 0xdc
   159cc:	cmp	r3, #0
   159d0:	beq	15a2c <argp_failure@@Base+0xac>
   159d4:	add	r3, sp, #224	; 0xe0
   159d8:	str	r3, [sp]
   159dc:	ldr	r3, [r4, #20]
   159e0:	ldr	r2, [r4, #24]
   159e4:	cmp	r3, r2
   159e8:	addcc	r2, r3, #1
   159ec:	strcc	r2, [r4, #20]
   159f0:	movcc	r2, #58	; 0x3a
   159f4:	strbcc	r2, [r3]
   159f8:	bcs	15b0c <argp_failure@@Base+0x18c>
   159fc:	ldr	r3, [r4, #20]
   15a00:	ldr	r2, [r4, #24]
   15a04:	cmp	r3, r2
   15a08:	addcc	r2, r3, #1
   15a0c:	strcc	r2, [r4, #20]
   15a10:	movcc	r2, #32
   15a14:	strbcc	r2, [r3]
   15a18:	bcs	15b1c <argp_failure@@Base+0x19c>
   15a1c:	ldr	r2, [sp]
   15a20:	ldr	r1, [sp, #220]	; 0xdc
   15a24:	mov	r0, r4
   15a28:	bl	11258 <vfprintf@plt>
   15a2c:	cmp	r6, #0
   15a30:	beq	15a94 <argp_failure@@Base+0x114>
   15a34:	ldr	r3, [r4, #20]
   15a38:	ldr	r2, [r4, #24]
   15a3c:	cmp	r3, r2
   15a40:	addcc	r2, r3, #1
   15a44:	strcc	r2, [r4, #20]
   15a48:	movcc	r2, #58	; 0x3a
   15a4c:	strbcc	r2, [r3]
   15a50:	bcs	15b2c <argp_failure@@Base+0x1ac>
   15a54:	ldr	r3, [r4, #20]
   15a58:	ldr	r2, [r4, #24]
   15a5c:	cmp	r3, r2
   15a60:	addcc	r2, r3, #1
   15a64:	strcc	r2, [r4, #20]
   15a68:	movcc	r2, #32
   15a6c:	strbcc	r2, [r3]
   15a70:	bcs	15b3c <argp_failure@@Base+0x1bc>
   15a74:	mov	r2, #200	; 0xc8
   15a78:	mov	r1, sp
   15a7c:	mov	r0, r6
   15a80:	bl	111ec <strerror_r@plt>
   15a84:	cmp	r0, #0
   15a88:	beq	15b4c <argp_failure@@Base+0x1cc>
   15a8c:	mov	r1, r4
   15a90:	bl	1100c <fputs_unlocked@plt>
   15a94:	ldr	r3, [r4, #20]
   15a98:	ldr	r2, [r4, #24]
   15a9c:	cmp	r3, r2
   15aa0:	addcc	r2, r3, #1
   15aa4:	strcc	r2, [r4, #20]
   15aa8:	movcc	r2, #10
   15aac:	strbcc	r2, [r3]
   15ab0:	bcs	15b64 <argp_failure@@Base+0x1e4>
   15ab4:	mov	r0, r4
   15ab8:	bl	110fc <funlockfile@plt>
   15abc:	cmp	r7, #0
   15ac0:	beq	15ad8 <argp_failure@@Base+0x158>
   15ac4:	cmp	r5, #0
   15ac8:	beq	15b74 <argp_failure@@Base+0x1f4>
   15acc:	ldr	r3, [r5, #16]
   15ad0:	tst	r3, #32
   15ad4:	beq	15b74 <argp_failure@@Base+0x1f4>
   15ad8:	add	sp, sp, #200	; 0xc8
   15adc:	pop	{r4, r5, r6, r7, lr}
   15ae0:	add	sp, sp, #4
   15ae4:	bx	lr
   15ae8:	ldr	r3, [pc, #140]	; 15b7c <argp_failure@@Base+0x1fc>
   15aec:	ldr	r4, [r3]
   15af0:	cmp	r4, #0
   15af4:	beq	15ad8 <argp_failure@@Base+0x158>
   15af8:	mov	r0, r4
   15afc:	bl	11270 <flockfile@plt>
   15b00:	ldr	r3, [pc, #120]	; 15b80 <argp_failure@@Base+0x200>
   15b04:	ldr	r0, [r3]
   15b08:	b	159c0 <argp_failure@@Base+0x40>
   15b0c:	mov	r1, #58	; 0x3a
   15b10:	mov	r0, r4
   15b14:	bl	11240 <__overflow@plt>
   15b18:	b	159fc <argp_failure@@Base+0x7c>
   15b1c:	mov	r1, #32
   15b20:	mov	r0, r4
   15b24:	bl	11240 <__overflow@plt>
   15b28:	b	15a1c <argp_failure@@Base+0x9c>
   15b2c:	mov	r1, #58	; 0x3a
   15b30:	mov	r0, r4
   15b34:	bl	11240 <__overflow@plt>
   15b38:	b	15a54 <argp_failure@@Base+0xd4>
   15b3c:	mov	r1, #32
   15b40:	mov	r0, r4
   15b44:	bl	11240 <__overflow@plt>
   15b48:	b	15a74 <argp_failure@@Base+0xf4>
   15b4c:	mov	r0, r6
   15b50:	bl	11150 <strerror@plt>
   15b54:	ldr	r3, [pc, #40]	; 15b84 <argp_failure@@Base+0x204>
   15b58:	cmp	r0, #0
   15b5c:	moveq	r0, r3
   15b60:	b	15a8c <argp_failure@@Base+0x10c>
   15b64:	mov	r1, #10
   15b68:	mov	r0, r4
   15b6c:	bl	11240 <__overflow@plt>
   15b70:	b	15ab4 <argp_failure@@Base+0x134>
   15b74:	mov	r0, r7
   15b78:	bl	111a4 <exit@plt>
   15b7c:			; <UNDEFINED> instruction: 0x0002a3b0
   15b80:	andeq	sl, r2, r8, lsr #7
   15b84:	andeq	r9, r1, r8, lsl #10
   15b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b8c:	add	fp, sp, #32
   15b90:	sub	sp, sp, #108	; 0x6c
   15b94:	str	r0, [fp, #-112]	; 0xffffff90
   15b98:	str	r1, [fp, #-100]	; 0xffffff9c
   15b9c:	str	r3, [fp, #-104]	; 0xffffff98
   15ba0:	subs	r3, r2, #0
   15ba4:	str	r3, [fp, #-132]	; 0xffffff7c
   15ba8:	beq	16c14 <argp_failure@@Base+0x1294>
   15bac:	mov	r0, r3
   15bb0:	bl	11270 <flockfile@plt>
   15bb4:	ldr	r3, [pc, #3772]	; 16a78 <argp_failure@@Base+0x10f8>
   15bb8:	ldr	r3, [r3, #36]	; 0x24
   15bbc:	str	r3, [fp, #-108]	; 0xffffff94
   15bc0:	cmp	r3, #0
   15bc4:	beq	15c9c <argp_failure@@Base+0x31c>
   15bc8:	mov	r3, #0
   15bcc:	ldr	r2, [pc, #3748]	; 16a78 <argp_failure@@Base+0x10f8>
   15bd0:	ldr	r2, [r2, #32]
   15bd4:	mov	r1, r3
   15bd8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15bdc:	bl	17b5c <argp_error@@Base+0xd60>
   15be0:	subs	sl, r0, #0
   15be4:	beq	16048 <argp_failure@@Base+0x6c8>
   15be8:	ldr	r3, [fp, #-104]	; 0xffffff98
   15bec:	tst	r3, #11
   15bf0:	moveq	r3, #0
   15bf4:	streq	r3, [fp, #-108]	; 0xffffff94
   15bf8:	bne	16054 <argp_failure@@Base+0x6d4>
   15bfc:	ldr	r3, [fp, #-104]	; 0xffffff98
   15c00:	tst	r3, #3
   15c04:	moveq	r4, #0
   15c08:	bne	160d8 <argp_failure@@Base+0x758>
   15c0c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15c10:	tst	r3, #16
   15c14:	bne	162d4 <argp_failure@@Base+0x954>
   15c18:	ldr	r3, [fp, #-104]	; 0xffffff98
   15c1c:	tst	r3, #4
   15c20:	bne	162fc <argp_failure@@Base+0x97c>
   15c24:	ldr	r3, [fp, #-104]	; 0xffffff98
   15c28:	tst	r3, #8
   15c2c:	beq	16b88 <argp_failure@@Base+0x1208>
   15c30:	ldr	r3, [fp, #-108]	; 0xffffff94
   15c34:	ldr	r3, [r3, #4]
   15c38:	cmp	r3, #0
   15c3c:	beq	16b88 <argp_failure@@Base+0x1208>
   15c40:	cmp	r4, #0
   15c44:	beq	15c6c <argp_failure@@Base+0x2ec>
   15c48:	ldr	r2, [sl, #28]
   15c4c:	ldr	r3, [sl, #32]
   15c50:	cmp	r2, r3
   15c54:	bcs	16318 <argp_failure@@Base+0x998>
   15c58:	ldr	r3, [sl, #28]
   15c5c:	add	r2, r3, #1
   15c60:	str	r2, [sl, #28]
   15c64:	mov	r2, #10
   15c68:	strb	r2, [r3]
   15c6c:	mov	r3, #0
   15c70:	str	r3, [fp, #-88]	; 0xffffffa8
   15c74:	str	r3, [fp, #-84]	; 0xffffffac
   15c78:	str	r3, [fp, #-80]	; 0xffffffb0
   15c7c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15c80:	ldr	r2, [r3]
   15c84:	str	r2, [fp, #-96]	; 0xffffffa0
   15c88:	ldr	r3, [r3, #4]
   15c8c:	str	r3, [fp, #-120]	; 0xffffff88
   15c90:	cmp	r3, #0
   15c94:	bne	16700 <argp_failure@@Base+0xd80>
   15c98:	b	16b84 <argp_failure@@Base+0x1204>
   15c9c:	ldr	r0, [pc, #3452]	; 16a20 <argp_failure@@Base+0x10a0>
   15ca0:	bl	1112c <getenv@plt>
   15ca4:	mov	r9, r0
   15ca8:	sub	ip, fp, #76	; 0x4c
   15cac:	ldr	lr, [pc, #3524]	; 16a78 <argp_failure@@Base+0x10f8>
   15cb0:	ldm	lr!, {r0, r1, r2, r3}
   15cb4:	stmia	ip!, {r0, r1, r2, r3}
   15cb8:	ldm	lr!, {r0, r1, r2, r3}
   15cbc:	stmia	ip!, {r0, r1, r2, r3}
   15cc0:	ldm	lr, {r0, r1}
   15cc4:	stm	ip, {r0, r1}
   15cc8:	cmp	r9, #0
   15ccc:	ldrne	sl, [pc, #3408]	; 16a24 <argp_failure@@Base+0x10a4>
   15cd0:	addne	r8, sl, #168	; 0xa8
   15cd4:	bne	15f78 <argp_failure@@Base+0x5f8>
   15cd8:	b	15bc8 <argp_failure@@Base+0x248>
   15cdc:	mov	r5, r3
   15ce0:	mov	r9, r5
   15ce4:	mov	r3, r5
   15ce8:	ldrb	r0, [r3], #1
   15cec:	lsl	r2, r0, #1
   15cf0:	ldrh	r2, [r1, r2]
   15cf4:	tst	r2, #8192	; 0x2000
   15cf8:	bne	15cdc <argp_failure@@Base+0x35c>
   15cfc:	tst	r2, #1024	; 0x400
   15d00:	beq	15f70 <argp_failure@@Base+0x5f0>
   15d04:	cmp	r0, #95	; 0x5f
   15d08:	cmpne	r0, #45	; 0x2d
   15d0c:	moveq	r3, #1
   15d10:	movne	r3, #0
   15d14:	lsl	r2, r2, #28
   15d18:	orrs	r3, r3, r2, lsr #31
   15d1c:	beq	16c98 <argp_failure@@Base+0x1318>
   15d20:	mov	r4, r5
   15d24:	ldrb	r3, [r4, #1]!
   15d28:	lsl	r2, r3, #1
   15d2c:	ldrh	r2, [r1, r2]
   15d30:	lsl	r2, r2, #28
   15d34:	cmp	r3, #95	; 0x5f
   15d38:	cmpne	r3, #45	; 0x2d
   15d3c:	moveq	r3, #1
   15d40:	movne	r3, #0
   15d44:	orrs	r3, r3, r2, lsr #31
   15d48:	bne	15d24 <argp_failure@@Base+0x3a4>
   15d4c:	sub	r5, r4, r5
   15d50:	ldrb	r3, [r4]
   15d54:	lsl	r2, r3, #1
   15d58:	ldrh	r2, [r1, r2]
   15d5c:	tst	r2, #8192	; 0x2000
   15d60:	beq	15d78 <argp_failure@@Base+0x3f8>
   15d64:	ldrb	r3, [r4, #1]!
   15d68:	lsl	r2, r3, #1
   15d6c:	ldrh	r2, [r1, r2]
   15d70:	tst	r2, #8192	; 0x2000
   15d74:	bne	15d64 <argp_failure@@Base+0x3e4>
   15d78:	cmp	r3, #44	; 0x2c
   15d7c:	cmpne	r3, #0
   15d80:	beq	16cb0 <argp_failure@@Base+0x1330>
   15d84:	cmp	r3, #61	; 0x3d
   15d88:	beq	15db0 <argp_failure@@Base+0x430>
   15d8c:	ldrb	r3, [r4]
   15d90:	lsl	r3, r3, #1
   15d94:	ldrh	r3, [r1, r3]
   15d98:	tst	r3, #2048	; 0x800
   15d9c:	bne	15e30 <argp_failure@@Base+0x4b0>
   15da0:	ldr	r3, [fp, #-108]	; 0xffffff94
   15da4:	str	r3, [fp, #-96]	; 0xffffffa0
   15da8:	str	r3, [fp, #-116]	; 0xffffff8c
   15dac:	b	16cc4 <argp_failure@@Base+0x1344>
   15db0:	add	r2, r4, #1
   15db4:	ldrb	r3, [r4, #1]
   15db8:	lsl	r3, r3, #1
   15dbc:	ldrh	r3, [r1, r3]
   15dc0:	tst	r3, #8192	; 0x2000
   15dc4:	beq	16ca8 <argp_failure@@Base+0x1328>
   15dc8:	ldrb	r3, [r2, #1]!
   15dcc:	lsl	r3, r3, #1
   15dd0:	ldrh	r3, [r1, r3]
   15dd4:	tst	r3, #8192	; 0x2000
   15dd8:	bne	15dc8 <argp_failure@@Base+0x448>
   15ddc:	mov	r4, r2
   15de0:	b	15d8c <argp_failure@@Base+0x40c>
   15de4:	ldrb	r3, [r9, #1]
   15de8:	cmp	r3, #111	; 0x6f
   15dec:	movne	r3, #1
   15df0:	strne	r3, [fp, #-96]	; 0xffffffa0
   15df4:	strne	r3, [fp, #-116]	; 0xffffff8c
   15df8:	bne	16cc4 <argp_failure@@Base+0x1344>
   15dfc:	ldrb	r3, [r9, #2]
   15e00:	cmp	r3, #45	; 0x2d
   15e04:	movne	r3, #1
   15e08:	strne	r3, [fp, #-96]	; 0xffffffa0
   15e0c:	strne	r3, [fp, #-116]	; 0xffffff8c
   15e10:	bne	16cc4 <argp_failure@@Base+0x1344>
   15e14:	add	r9, r9, #3
   15e18:	sub	r5, r5, #3
   15e1c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15e20:	str	r3, [fp, #-116]	; 0xffffff8c
   15e24:	mov	r3, #1
   15e28:	str	r3, [fp, #-96]	; 0xffffffa0
   15e2c:	b	16cc4 <argp_failure@@Base+0x1344>
   15e30:	mov	r2, #10
   15e34:	mov	r1, #0
   15e38:	mov	r0, r4
   15e3c:	bl	1103c <strtol@plt>
   15e40:	str	r0, [fp, #-116]	; 0xffffff8c
   15e44:	ldr	r2, [r6]
   15e48:	ldrb	r3, [r4]
   15e4c:	lsl	r3, r3, #1
   15e50:	ldrh	r3, [r2, r3]
   15e54:	tst	r3, #2048	; 0x800
   15e58:	beq	15e70 <argp_failure@@Base+0x4f0>
   15e5c:	ldrb	r3, [r4, #1]!
   15e60:	lsl	r3, r3, #1
   15e64:	ldrh	r3, [r2, r3]
   15e68:	tst	r3, #2048	; 0x800
   15e6c:	bne	15e5c <argp_failure@@Base+0x4dc>
   15e70:	ldrb	r3, [r4]
   15e74:	lsl	r3, r3, #1
   15e78:	ldrh	r3, [r2, r3]
   15e7c:	tst	r3, #8192	; 0x2000
   15e80:	beq	15ea4 <argp_failure@@Base+0x524>
   15e84:	ldrb	r3, [r4, #1]!
   15e88:	lsl	r3, r3, #1
   15e8c:	ldrh	r3, [r2, r3]
   15e90:	tst	r3, #8192	; 0x2000
   15e94:	bne	15e84 <argp_failure@@Base+0x504>
   15e98:	ldr	r3, [fp, #-108]	; 0xffffff94
   15e9c:	str	r3, [fp, #-96]	; 0xffffffa0
   15ea0:	b	16cc4 <argp_failure@@Base+0x1344>
   15ea4:	ldr	r3, [fp, #-108]	; 0xffffff94
   15ea8:	str	r3, [fp, #-96]	; 0xffffffa0
   15eac:	b	16cc4 <argp_failure@@Base+0x1344>
   15eb0:	str	r9, [sp, #4]
   15eb4:	str	r7, [sp]
   15eb8:	ldr	r3, [pc, #2920]	; 16a28 <argp_failure@@Base+0x10a8>
   15ebc:	mov	r2, #0
   15ec0:	mov	r1, r2
   15ec4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15ec8:	bl	15980 <argp_failure@@Base>
   15ecc:	b	15f34 <argp_failure@@Base+0x5b4>
   15ed0:	add	r6, r6, #16
   15ed4:	cmp	r6, r8
   15ed8:	beq	15f50 <argp_failure@@Base+0x5d0>
   15edc:	mov	r0, r6
   15ee0:	bl	111bc <strlen@plt>
   15ee4:	mov	r7, r0
   15ee8:	cmp	r0, r5
   15eec:	bne	15ed0 <argp_failure@@Base+0x550>
   15ef0:	mov	r2, r5
   15ef4:	mov	r1, r6
   15ef8:	mov	r0, r9
   15efc:	bl	112b8 <strncmp@plt>
   15f00:	cmp	r0, #0
   15f04:	bne	15ed0 <argp_failure@@Base+0x550>
   15f08:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15f0c:	cmp	r3, #0
   15f10:	beq	15f20 <argp_failure@@Base+0x5a0>
   15f14:	ldrb	r3, [r6, #14]
   15f18:	cmp	r3, #0
   15f1c:	beq	15eb0 <argp_failure@@Base+0x530>
   15f20:	ldrb	r3, [r6, #15]
   15f24:	sub	r2, fp, #36	; 0x24
   15f28:	add	r3, r2, r3
   15f2c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   15f30:	str	r2, [r3, #-40]	; 0xffffffd8
   15f34:	cmp	r6, r8
   15f38:	beq	15f50 <argp_failure@@Base+0x5d0>
   15f3c:	ldrb	r3, [r4]
   15f40:	cmp	r3, #44	; 0x2c
   15f44:	addeq	r9, r4, #1
   15f48:	movne	r9, r4
   15f4c:	b	15f78 <argp_failure@@Base+0x5f8>
   15f50:	str	r9, [sp, #4]
   15f54:	str	r5, [sp]
   15f58:	ldr	r3, [pc, #2764]	; 16a2c <argp_failure@@Base+0x10ac>
   15f5c:	mov	r2, #0
   15f60:	mov	r1, r2
   15f64:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15f68:	bl	15980 <argp_failure@@Base>
   15f6c:	b	15f3c <argp_failure@@Base+0x5bc>
   15f70:	cmp	r0, #0
   15f74:	bne	15f98 <argp_failure@@Base+0x618>
   15f78:	ldrb	r3, [r9]
   15f7c:	cmp	r3, #0
   15f80:	beq	15fb0 <argp_failure@@Base+0x630>
   15f84:	bl	1118c <__ctype_b_loc@plt>
   15f88:	mov	r6, r0
   15f8c:	ldr	r1, [r0]
   15f90:	mov	r5, r9
   15f94:	b	15ce0 <argp_failure@@Base+0x360>
   15f98:	str	r5, [sp]
   15f9c:	ldr	r3, [pc, #2700]	; 16a30 <argp_failure@@Base+0x10b0>
   15fa0:	mov	r2, #0
   15fa4:	mov	r1, r2
   15fa8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15fac:	bl	15980 <argp_failure@@Base>
   15fb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15fb4:	ldr	r3, [pc, #2680]	; 16a34 <argp_failure@@Base+0x10b4>
   15fb8:	add	r1, r3, #144	; 0x90
   15fbc:	add	r3, r3, #16
   15fc0:	cmp	r3, r1
   15fc4:	beq	16018 <argp_failure@@Base+0x698>
   15fc8:	ldrb	r2, [r3, #14]
   15fcc:	cmp	r2, #0
   15fd0:	bne	15fbc <argp_failure@@Base+0x63c>
   15fd4:	ldrb	r2, [r3, #15]
   15fd8:	cmp	r2, #32
   15fdc:	beq	15fbc <argp_failure@@Base+0x63c>
   15fe0:	sub	ip, fp, #36	; 0x24
   15fe4:	add	r2, ip, r2
   15fe8:	ldr	r2, [r2, #-40]	; 0xffffffd8
   15fec:	cmp	r2, r0
   15ff0:	blt	15fbc <argp_failure@@Base+0x63c>
   15ff4:	str	r3, [sp, #4]
   15ff8:	ldr	r3, [pc, #2616]	; 16a38 <argp_failure@@Base+0x10b8>
   15ffc:	str	r3, [sp]
   16000:	ldr	r3, [pc, #2612]	; 16a3c <argp_failure@@Base+0x10bc>
   16004:	mov	r2, #0
   16008:	mov	r1, r2
   1600c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16010:	bl	15980 <argp_failure@@Base>
   16014:	b	15bc8 <argp_failure@@Base+0x248>
   16018:	ldr	r4, [pc, #2648]	; 16a78 <argp_failure@@Base+0x10f8>
   1601c:	mov	ip, r4
   16020:	sub	lr, fp, #76	; 0x4c
   16024:	ldm	lr!, {r0, r1, r2, r3}
   16028:	stmia	ip!, {r0, r1, r2, r3}
   1602c:	ldm	lr!, {r0, r1, r2, r3}
   16030:	stmia	ip!, {r0, r1, r2, r3}
   16034:	ldm	lr, {r0, r1}
   16038:	stm	ip, {r0, r1}
   1603c:	mov	r3, #1
   16040:	str	r3, [r4, #36]	; 0x24
   16044:	b	15bc8 <argp_failure@@Base+0x248>
   16048:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1604c:	bl	110fc <funlockfile@plt>
   16050:	b	16c14 <argp_failure@@Base+0x1294>
   16054:	mov	r1, #0
   16058:	ldr	r0, [fp, #-112]	; 0xffffff90
   1605c:	bl	152c4 <argp_parse@@Base+0x2e2c>
   16060:	str	r0, [fp, #-108]	; 0xffffff94
   16064:	ldr	r1, [pc, #2516]	; 16a40 <argp_failure@@Base+0x10c0>
   16068:	bl	141cc <argp_parse@@Base+0x1d34>
   1606c:	cmp	r0, #0
   16070:	mvnne	r3, #0
   16074:	strne	r3, [r0, #12]
   16078:	ldr	r1, [pc, #2500]	; 16a44 <argp_failure@@Base+0x10c4>
   1607c:	ldr	r0, [fp, #-108]	; 0xffffff94
   16080:	bl	141cc <argp_parse@@Base+0x1d34>
   16084:	cmp	r0, #0
   16088:	mvnne	r3, #0
   1608c:	strne	r3, [r0, #12]
   16090:	ldr	r0, [fp, #-108]	; 0xffffff94
   16094:	ldr	r3, [r0, #4]
   16098:	cmp	r3, #0
   1609c:	beq	15bfc <argp_failure@@Base+0x27c>
   160a0:	ldr	r2, [r0]
   160a4:	mov	r3, #0
   160a8:	str	r3, [r2, #24]
   160ac:	add	r3, r3, #1
   160b0:	add	r2, r2, #28
   160b4:	ldr	r1, [r0, #4]
   160b8:	cmp	r3, r1
   160bc:	bcc	160a8 <argp_failure@@Base+0x728>
   160c0:	ldr	r3, [pc, #2432]	; 16a48 <argp_failure@@Base+0x10c8>
   160c4:	mov	r2, #28
   160c8:	ldr	r0, [fp, #-108]	; 0xffffff94
   160cc:	ldr	r0, [r0]
   160d0:	bl	11288 <qsort@plt>
   160d4:	b	15bfc <argp_failure@@Base+0x27c>
   160d8:	ldr	r0, [fp, #-112]	; 0xffffff90
   160dc:	bl	14264 <argp_parse@@Base+0x1dcc>
   160e0:	mov	r2, r0
   160e4:	add	r3, r0, #14
   160e8:	bic	r3, r3, #7
   160ec:	sub	sp, sp, r3
   160f0:	add	r8, sp, #8
   160f4:	mov	r1, #0
   160f8:	mov	r0, r8
   160fc:	bl	11204 <memset@plt>
   16100:	mov	r5, #1
   16104:	ldr	r4, [pc, #2412]	; 16a78 <argp_failure@@Base+0x10f8>
   16108:	ldr	r9, [pc, #2364]	; 16a4c <argp_failure@@Base+0x10cc>
   1610c:	str	r8, [fp, #-96]	; 0xffffffa0
   16110:	ldr	r8, [fp, #-104]	; 0xffffff98
   16114:	b	161c4 <argp_failure@@Base+0x844>
   16118:	mov	r0, sl
   1611c:	bl	17bd4 <argp_error@@Base+0xdd8>
   16120:	b	161e0 <argp_failure@@Base+0x860>
   16124:	mov	r0, sl
   16128:	bl	17bd4 <argp_error@@Base+0xdd8>
   1612c:	b	16228 <argp_failure@@Base+0x8a8>
   16130:	mov	r1, sl
   16134:	ldr	r0, [fp, #-108]	; 0xffffff94
   16138:	bl	13fbc <argp_parse@@Base+0x1b24>
   1613c:	orr	r8, r8, #2
   16140:	str	sl, [sp]
   16144:	mov	r3, #1
   16148:	sub	r2, fp, #76	; 0x4c
   1614c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16150:	ldr	r0, [fp, #-112]	; 0xffffff90
   16154:	bl	144e4 <argp_parse@@Base+0x204c>
   16158:	mov	r6, r0
   1615c:	ldr	r3, [sl, #28]
   16160:	ldr	r2, [sl, #24]
   16164:	sub	r3, r3, r2
   16168:	ldr	r2, [sl, #16]
   1616c:	cmp	r3, r2
   16170:	bhi	16298 <argp_failure@@Base+0x918>
   16174:	str	r7, [sl, #12]
   16178:	ldr	r3, [sl, #28]
   1617c:	ldr	r2, [sl, #24]
   16180:	sub	r3, r3, r2
   16184:	ldr	r2, [sl, #16]
   16188:	cmp	r3, r2
   1618c:	bhi	162a4 <argp_failure@@Base+0x924>
   16190:	str	r5, [sl, #4]
   16194:	ldr	r2, [sl, #28]
   16198:	ldr	r3, [sl, #32]
   1619c:	cmp	r2, r3
   161a0:	bcs	162b0 <argp_failure@@Base+0x930>
   161a4:	ldr	r3, [sl, #28]
   161a8:	add	r2, r3, #1
   161ac:	str	r2, [sl, #28]
   161b0:	mov	r2, #10
   161b4:	strb	r2, [r3]
   161b8:	mov	r5, #0
   161bc:	cmp	r6, r5
   161c0:	beq	162c8 <argp_failure@@Base+0x948>
   161c4:	ldr	r6, [r4, #28]
   161c8:	ldr	r3, [sl, #28]
   161cc:	ldr	r2, [sl, #24]
   161d0:	sub	r3, r3, r2
   161d4:	ldr	r2, [sl, #16]
   161d8:	cmp	r3, r2
   161dc:	bhi	16118 <argp_failure@@Base+0x798>
   161e0:	ldr	r7, [sl, #12]
   161e4:	str	r6, [sl, #12]
   161e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   161ec:	str	r3, [fp, #-76]	; 0xffffffb4
   161f0:	cmp	r5, #0
   161f4:	ldr	r3, [fp, #4]
   161f8:	ldrne	r2, [pc, #2128]	; 16a50 <argp_failure@@Base+0x10d0>
   161fc:	ldreq	r2, [pc, #2128]	; 16a54 <argp_failure@@Base+0x10d4>
   16200:	mov	r1, r9
   16204:	mov	r0, sl
   16208:	bl	18268 <argp_error@@Base+0x146c>
   1620c:	ldr	r6, [r4, #28]
   16210:	ldr	r3, [sl, #28]
   16214:	ldr	r2, [sl, #24]
   16218:	sub	r3, r3, r2
   1621c:	ldr	r2, [sl, #16]
   16220:	cmp	r3, r2
   16224:	bhi	16124 <argp_failure@@Base+0x7a4>
   16228:	ldr	r5, [sl, #4]
   1622c:	str	r6, [sl, #4]
   16230:	tst	r8, #2
   16234:	beq	16130 <argp_failure@@Base+0x7b0>
   16238:	ldr	r3, [fp, #-108]	; 0xffffff94
   1623c:	ldr	r3, [r3, #4]
   16240:	cmp	r3, #0
   16244:	beq	16140 <argp_failure@@Base+0x7c0>
   16248:	ldr	r3, [sl, #28]
   1624c:	add	r3, r3, #12
   16250:	ldr	r2, [sl, #32]
   16254:	cmp	r2, r3
   16258:	bcs	16270 <argp_failure@@Base+0x8f0>
   1625c:	mov	r1, #12
   16260:	mov	r0, sl
   16264:	bl	18178 <argp_error@@Base+0x137c>
   16268:	cmp	r0, #0
   1626c:	beq	16140 <argp_failure@@Base+0x7c0>
   16270:	ldr	ip, [sl, #28]
   16274:	ldr	r3, [pc, #2012]	; 16a58 <argp_failure@@Base+0x10d8>
   16278:	ldm	r3!, {r0, r1, r2}
   1627c:	str	r0, [ip]
   16280:	str	r1, [ip, #4]
   16284:	str	r2, [ip, #8]
   16288:	ldr	r3, [sl, #28]
   1628c:	add	r3, r3, #12
   16290:	str	r3, [sl, #28]
   16294:	b	16140 <argp_failure@@Base+0x7c0>
   16298:	mov	r0, sl
   1629c:	bl	17bd4 <argp_error@@Base+0xdd8>
   162a0:	b	16174 <argp_failure@@Base+0x7f4>
   162a4:	mov	r0, sl
   162a8:	bl	17bd4 <argp_error@@Base+0xdd8>
   162ac:	b	16190 <argp_failure@@Base+0x810>
   162b0:	mov	r1, #1
   162b4:	mov	r0, sl
   162b8:	bl	18178 <argp_error@@Base+0x137c>
   162bc:	cmp	r0, #0
   162c0:	beq	161b8 <argp_failure@@Base+0x838>
   162c4:	b	161a4 <argp_failure@@Base+0x824>
   162c8:	str	r8, [fp, #-104]	; 0xffffff98
   162cc:	mov	r4, #1
   162d0:	b	15c0c <argp_failure@@Base+0x28c>
   162d4:	str	sl, [sp, #4]
   162d8:	mov	r3, #1
   162dc:	str	r3, [sp]
   162e0:	mov	r3, #0
   162e4:	mov	r2, r3
   162e8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   162ec:	ldr	r0, [fp, #-112]	; 0xffffff90
   162f0:	bl	14a3c <argp_parse@@Base+0x25a4>
   162f4:	orr	r4, r4, r0
   162f8:	b	15c18 <argp_failure@@Base+0x298>
   162fc:	ldr	r3, [fp, #4]
   16300:	mov	r2, r3
   16304:	ldr	r1, [pc, #1872]	; 16a5c <argp_failure@@Base+0x10dc>
   16308:	mov	r0, sl
   1630c:	bl	18268 <argp_error@@Base+0x146c>
   16310:	mov	r4, #1
   16314:	b	15c24 <argp_failure@@Base+0x2a4>
   16318:	mov	r1, #1
   1631c:	mov	r0, sl
   16320:	bl	18178 <argp_error@@Base+0x137c>
   16324:	cmp	r0, #0
   16328:	beq	15c6c <argp_failure@@Base+0x2ec>
   1632c:	b	15c58 <argp_failure@@Base+0x2d8>
   16330:	mov	r0, sl
   16334:	bl	17bd4 <argp_error@@Base+0xdd8>
   16338:	b	16724 <argp_failure@@Base+0xda4>
   1633c:	add	r3, r3, #24
   16340:	subs	r2, r2, #1
   16344:	beq	16368 <argp_failure@@Base+0x9e8>
   16348:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1634c:	cmp	r1, #0
   16350:	beq	1633c <argp_failure@@Base+0x9bc>
   16354:	ldr	r1, [r3, #-12]
   16358:	tst	r1, #2
   1635c:	bne	1633c <argp_failure@@Base+0x9bc>
   16360:	mov	r3, #1
   16364:	str	r3, [fp, #-116]	; 0xffffff8c
   16368:	ldr	r3, [pc, #1800]	; 16a78 <argp_failure@@Base+0x10f8>
   1636c:	ldr	r4, [r3, #8]
   16370:	ldr	r3, [sl, #28]
   16374:	ldr	r2, [sl, #24]
   16378:	sub	r3, r3, r2
   1637c:	ldr	r2, [sl, #16]
   16380:	cmp	r3, r2
   16384:	bhi	163a4 <argp_failure@@Base+0xa24>
   16388:	str	r4, [sl, #12]
   1638c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16390:	ldr	r5, [r3, #4]
   16394:	cmp	r5, #0
   16398:	beq	164a0 <argp_failure@@Base+0xb20>
   1639c:	mov	r4, r8
   163a0:	b	16ce4 <argp_failure@@Base+0x1364>
   163a4:	mov	r0, sl
   163a8:	bl	17bd4 <argp_error@@Base+0xdd8>
   163ac:	b	16388 <argp_failure@@Base+0xa08>
   163b0:	tst	r6, #2
   163b4:	beq	163c0 <argp_failure@@Base+0xa40>
   163b8:	add	r9, r9, #1
   163bc:	b	16cd8 <argp_failure@@Base+0x1358>
   163c0:	sub	r1, fp, #76	; 0x4c
   163c4:	ldr	r3, [pc, #1708]	; 16a78 <argp_failure@@Base+0x10f8>
   163c8:	ldr	r0, [r3, #8]
   163cc:	bl	148b8 <argp_parse@@Base+0x2420>
   163d0:	ldr	r2, [sl, #28]
   163d4:	ldr	r3, [sl, #32]
   163d8:	cmp	r2, r3
   163dc:	bcs	1645c <argp_failure@@Base+0xadc>
   163e0:	ldr	r3, [sl, #28]
   163e4:	add	r2, r3, #1
   163e8:	str	r2, [sl, #28]
   163ec:	mov	r2, #45	; 0x2d
   163f0:	strb	r2, [r3]
   163f4:	ldrb	r6, [r9]
   163f8:	ldr	r2, [sl, #28]
   163fc:	ldr	r3, [sl, #32]
   16400:	cmp	r2, r3
   16404:	bcs	16474 <argp_failure@@Base+0xaf4>
   16408:	ldr	r3, [sl, #28]
   1640c:	add	r2, r3, #1
   16410:	str	r2, [sl, #28]
   16414:	strb	r6, [r3]
   16418:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1641c:	cmp	r3, #0
   16420:	beq	16434 <argp_failure@@Base+0xab4>
   16424:	ldr	r3, [pc, #1612]	; 16a78 <argp_failure@@Base+0x10f8>
   16428:	ldr	r3, [r3]
   1642c:	cmp	r3, #0
   16430:	beq	1648c <argp_failure@@Base+0xb0c>
   16434:	ldr	r2, [r8, #8]
   16438:	cmp	r2, #0
   1643c:	beq	163b8 <argp_failure@@Base+0xa38>
   16440:	ldr	r3, [r8, #12]
   16444:	tst	r3, #1
   16448:	ldrne	r1, [pc, #1552]	; 16a60 <argp_failure@@Base+0x10e0>
   1644c:	ldreq	r1, [pc, #1552]	; 16a64 <argp_failure@@Base+0x10e4>
   16450:	mov	r0, sl
   16454:	bl	18268 <argp_error@@Base+0x146c>
   16458:	b	163b8 <argp_failure@@Base+0xa38>
   1645c:	mov	r1, #1
   16460:	mov	r0, sl
   16464:	bl	18178 <argp_error@@Base+0x137c>
   16468:	cmp	r0, #0
   1646c:	beq	163f4 <argp_failure@@Base+0xa74>
   16470:	b	163e0 <argp_failure@@Base+0xa60>
   16474:	mov	r1, #1
   16478:	mov	r0, sl
   1647c:	bl	18178 <argp_error@@Base+0x137c>
   16480:	cmp	r0, #0
   16484:	beq	16418 <argp_failure@@Base+0xa98>
   16488:	b	16408 <argp_failure@@Base+0xa88>
   1648c:	ldr	r3, [r8, #8]
   16490:	cmp	r3, #0
   16494:	movne	r3, #1
   16498:	strne	r3, [fp, #-80]	; 0xffffffb0
   1649c:	b	163b8 <argp_failure@@Base+0xa38>
   164a0:	ldr	r3, [r8, #12]
   164a4:	tst	r3, #8
   164a8:	beq	16584 <argp_failure@@Base+0xc04>
   164ac:	ldr	r3, [pc, #1476]	; 16a78 <argp_failure@@Base+0x10f8>
   164b0:	ldr	r4, [r3, #16]
   164b4:	ldr	r3, [sl, #28]
   164b8:	ldr	r2, [sl, #24]
   164bc:	sub	r3, r3, r2
   164c0:	ldr	r2, [sl, #16]
   164c4:	cmp	r3, r2
   164c8:	bhi	164e8 <argp_failure@@Base+0xb68>
   164cc:	str	r4, [sl, #12]
   164d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   164d4:	ldr	r5, [r3, #4]
   164d8:	cmp	r5, #0
   164dc:	beq	16638 <argp_failure@@Base+0xcb8>
   164e0:	add	r4, r8, #24
   164e4:	b	1651c <argp_failure@@Base+0xb9c>
   164e8:	mov	r0, sl
   164ec:	bl	17bd4 <argp_error@@Base+0xdd8>
   164f0:	b	164cc <argp_failure@@Base+0xb4c>
   164f4:	mov	r2, r6
   164f8:	mov	r1, r7
   164fc:	ldr	r0, [sl, #28]
   16500:	bl	110a8 <memcpy@plt>
   16504:	ldr	r3, [sl, #28]
   16508:	add	r6, r3, r6
   1650c:	str	r6, [sl, #28]
   16510:	add	r4, r4, #24
   16514:	subs	r5, r5, #1
   16518:	beq	16638 <argp_failure@@Base+0xcb8>
   1651c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16520:	cmp	r3, #0
   16524:	beq	16510 <argp_failure@@Base+0xb90>
   16528:	ldr	r3, [r4, #-12]
   1652c:	tst	r3, #2
   16530:	bne	16510 <argp_failure@@Base+0xb90>
   16534:	sub	r1, fp, #76	; 0x4c
   16538:	ldr	r3, [pc, #1336]	; 16a78 <argp_failure@@Base+0x10f8>
   1653c:	ldr	r0, [r3, #16]
   16540:	bl	148b8 <argp_parse@@Base+0x2420>
   16544:	ldr	r7, [r4, #-24]	; 0xffffffe8
   16548:	mov	r0, r7
   1654c:	bl	111bc <strlen@plt>
   16550:	subs	r6, r0, #0
   16554:	beq	16510 <argp_failure@@Base+0xb90>
   16558:	ldr	r3, [sl, #28]
   1655c:	add	r3, r3, r6
   16560:	ldr	r2, [sl, #32]
   16564:	cmp	r2, r3
   16568:	bcs	164f4 <argp_failure@@Base+0xb74>
   1656c:	mov	r1, r6
   16570:	mov	r0, sl
   16574:	bl	18178 <argp_error@@Base+0x137c>
   16578:	cmp	r0, #0
   1657c:	beq	16510 <argp_failure@@Base+0xb90>
   16580:	b	164f4 <argp_failure@@Base+0xb74>
   16584:	ldr	r3, [pc, #1260]	; 16a78 <argp_failure@@Base+0x10f8>
   16588:	ldr	r4, [r3, #12]
   1658c:	ldr	r3, [sl, #28]
   16590:	ldr	r2, [sl, #24]
   16594:	sub	r3, r3, r2
   16598:	ldr	r2, [sl, #16]
   1659c:	cmp	r3, r2
   165a0:	bhi	165c0 <argp_failure@@Base+0xc40>
   165a4:	str	r4, [sl, #12]
   165a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   165ac:	ldr	r5, [r3, #4]
   165b0:	cmp	r5, #0
   165b4:	beq	16638 <argp_failure@@Base+0xcb8>
   165b8:	add	r4, r8, #24
   165bc:	b	165d8 <argp_failure@@Base+0xc58>
   165c0:	mov	r0, sl
   165c4:	bl	17bd4 <argp_error@@Base+0xdd8>
   165c8:	b	165a4 <argp_failure@@Base+0xc24>
   165cc:	add	r4, r4, #24
   165d0:	subs	r5, r5, #1
   165d4:	beq	16638 <argp_failure@@Base+0xcb8>
   165d8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   165dc:	cmp	r3, #0
   165e0:	beq	165cc <argp_failure@@Base+0xc4c>
   165e4:	ldr	r3, [r4, #-12]
   165e8:	tst	r3, #2
   165ec:	bne	165cc <argp_failure@@Base+0xc4c>
   165f0:	sub	r1, fp, #76	; 0x4c
   165f4:	ldr	r3, [pc, #1148]	; 16a78 <argp_failure@@Base+0x10f8>
   165f8:	ldr	r0, [r3, #12]
   165fc:	bl	148b8 <argp_parse@@Base+0x2420>
   16600:	ldr	r2, [r4, #-24]	; 0xffffffe8
   16604:	ldr	r1, [pc, #1116]	; 16a68 <argp_failure@@Base+0x10e8>
   16608:	mov	r0, sl
   1660c:	bl	18268 <argp_error@@Base+0x146c>
   16610:	ldr	r2, [r8, #8]
   16614:	cmp	r2, #0
   16618:	beq	165cc <argp_failure@@Base+0xc4c>
   1661c:	ldr	r3, [r8, #12]
   16620:	tst	r3, #1
   16624:	ldrne	r1, [pc, #1088]	; 16a6c <argp_failure@@Base+0x10ec>
   16628:	ldreq	r1, [pc, #1088]	; 16a70 <argp_failure@@Base+0x10f0>
   1662c:	mov	r0, sl
   16630:	bl	18268 <argp_error@@Base+0x146c>
   16634:	b	165cc <argp_failure@@Base+0xc4c>
   16638:	ldr	r3, [sl, #28]
   1663c:	ldr	r2, [sl, #24]
   16640:	sub	r3, r3, r2
   16644:	ldr	r2, [sl, #16]
   16648:	cmp	r3, r2
   1664c:	bhi	1678c <argp_failure@@Base+0xe0c>
   16650:	mov	r3, #0
   16654:	str	r3, [sl, #4]
   16658:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1665c:	cmp	r3, #0
   16660:	beq	167b0 <argp_failure@@Base+0xe30>
   16664:	ldr	r3, [r8, #12]
   16668:	tst	r3, #8
   1666c:	bne	16698 <argp_failure@@Base+0xd18>
   16670:	ldr	r4, [r8, #4]
   16674:	sub	r3, r4, #1
   16678:	cmp	r3, #254	; 0xfe
   1667c:	bhi	16698 <argp_failure@@Base+0xd18>
   16680:	bl	1118c <__ctype_b_loc@plt>
   16684:	ldr	r3, [r0]
   16688:	lsl	r4, r4, #1
   1668c:	ldrh	r3, [r3, r4]
   16690:	tst	r3, #16384	; 0x4000
   16694:	bne	166a4 <argp_failure@@Base+0xd24>
   16698:	ldr	r3, [r8]
   1669c:	cmp	r3, #0
   166a0:	beq	16798 <argp_failure@@Base+0xe18>
   166a4:	ldr	r3, [sl, #28]
   166a8:	ldr	r2, [sl, #24]
   166ac:	sub	r3, r3, r2
   166b0:	ldr	r2, [sl, #16]
   166b4:	cmp	r3, r2
   166b8:	bhi	16a08 <argp_failure@@Base+0x1088>
   166bc:	ldr	r3, [fp, #-124]	; 0xffffff84
   166c0:	str	r3, [sl, #4]
   166c4:	ldr	r3, [sl, #28]
   166c8:	ldr	r2, [sl, #24]
   166cc:	sub	r3, r3, r2
   166d0:	ldr	r2, [sl, #16]
   166d4:	cmp	r3, r2
   166d8:	bhi	16a14 <argp_failure@@Base+0x1094>
   166dc:	ldr	r3, [fp, #-128]	; 0xffffff80
   166e0:	str	r3, [sl, #12]
   166e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   166e8:	add	r3, r3, #28
   166ec:	str	r3, [fp, #-96]	; 0xffffffa0
   166f0:	ldr	r3, [fp, #-120]	; 0xffffff88
   166f4:	subs	r3, r3, #1
   166f8:	str	r3, [fp, #-120]	; 0xffffff88
   166fc:	beq	16a8c <argp_failure@@Base+0x110c>
   16700:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16704:	ldr	r8, [r3]
   16708:	ldr	r9, [r3, #8]
   1670c:	ldr	r3, [sl, #28]
   16710:	ldr	r2, [sl, #24]
   16714:	sub	r3, r3, r2
   16718:	ldr	r2, [sl, #16]
   1671c:	cmp	r3, r2
   16720:	bhi	16330 <argp_failure@@Base+0x9b0>
   16724:	ldr	r3, [sl, #4]
   16728:	str	r3, [fp, #-124]	; 0xffffff84
   1672c:	mov	r3, #0
   16730:	str	r3, [sl, #4]
   16734:	ldr	r3, [sl, #12]
   16738:	str	r3, [fp, #-128]	; 0xffffff80
   1673c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16740:	str	r2, [fp, #-76]	; 0xffffffb4
   16744:	str	sl, [fp, #-72]	; 0xffffffb8
   16748:	sub	r3, fp, #88	; 0x58
   1674c:	str	r3, [fp, #-68]	; 0xffffffbc
   16750:	mov	r3, #1
   16754:	str	r3, [fp, #-64]	; 0xffffffc0
   16758:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1675c:	str	r3, [fp, #-60]	; 0xffffffc4
   16760:	ldr	r3, [r8, #12]
   16764:	ands	r3, r3, #8
   16768:	str	r3, [fp, #-116]	; 0xffffff8c
   1676c:	movne	r3, #0
   16770:	strne	r3, [fp, #-116]	; 0xffffff8c
   16774:	bne	16368 <argp_failure@@Base+0x9e8>
   16778:	ldr	r2, [r2, #4]
   1677c:	cmp	r2, #0
   16780:	beq	16368 <argp_failure@@Base+0x9e8>
   16784:	add	r3, r8, #24
   16788:	b	16348 <argp_failure@@Base+0x9c8>
   1678c:	mov	r0, sl
   16790:	bl	17bd4 <argp_error@@Base+0xdd8>
   16794:	b	16650 <argp_failure@@Base+0xcd0>
   16798:	sub	r2, fp, #76	; 0x4c
   1679c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   167a0:	ldr	r1, [r3, #20]
   167a4:	ldr	r0, [r8, #16]
   167a8:	bl	146d4 <argp_parse@@Base+0x223c>
   167ac:	b	16908 <argp_failure@@Base+0xf88>
   167b0:	ldr	r7, [r8, #16]
   167b4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   167b8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   167bc:	ldr	r2, [r2, #20]
   167c0:	ldr	r1, [r8, #4]
   167c4:	mov	r0, r7
   167c8:	bl	144a0 <argp_parse@@Base+0x2008>
   167cc:	subs	r4, r0, #0
   167d0:	beq	168c4 <argp_failure@@Base+0xf44>
   167d4:	ldrb	r3, [r4]
   167d8:	cmp	r3, #0
   167dc:	beq	168bc <argp_failure@@Base+0xf3c>
   167e0:	ldr	r3, [sl, #28]
   167e4:	ldr	r2, [sl, #24]
   167e8:	sub	r3, r3, r2
   167ec:	ldr	r2, [sl, #16]
   167f0:	cmp	r3, r2
   167f4:	bhi	16914 <argp_failure@@Base+0xf94>
   167f8:	ldr	r5, [sl, #20]
   167fc:	bic	r5, r5, r5, asr #31
   16800:	ldr	r3, [pc, #624]	; 16a78 <argp_failure@@Base+0x10f8>
   16804:	ldr	r6, [r3, #20]
   16808:	str	r6, [sl, #4]
   1680c:	ldr	r3, [pc, #612]	; 16a78 <argp_failure@@Base+0x10f8>
   16810:	ldr	r6, [r3, #20]
   16814:	ldr	r3, [sl, #28]
   16818:	ldr	r2, [sl, #24]
   1681c:	sub	r3, r3, r2
   16820:	ldr	r2, [sl, #16]
   16824:	cmp	r3, r2
   16828:	bhi	16950 <argp_failure@@Base+0xfd0>
   1682c:	str	r6, [sl, #12]
   16830:	ldr	r3, [pc, #576]	; 16a78 <argp_failure@@Base+0x10f8>
   16834:	ldr	r1, [r3, #20]
   16838:	add	r3, r1, #3
   1683c:	cmp	r3, r5
   16840:	bcs	16974 <argp_failure@@Base+0xff4>
   16844:	ldr	r2, [sl, #28]
   16848:	ldr	r3, [sl, #32]
   1684c:	cmp	r2, r3
   16850:	bcs	1695c <argp_failure@@Base+0xfdc>
   16854:	ldr	r3, [sl, #28]
   16858:	add	r2, r3, #1
   1685c:	str	r2, [sl, #28]
   16860:	mov	r2, #10
   16864:	strb	r2, [r3]
   16868:	mov	r0, r4
   1686c:	bl	111bc <strlen@plt>
   16870:	subs	r5, r0, #0
   16874:	beq	168bc <argp_failure@@Base+0xf3c>
   16878:	ldr	r3, [sl, #28]
   1687c:	add	r3, r3, r5
   16880:	ldr	r2, [sl, #32]
   16884:	cmp	r2, r3
   16888:	bcs	168a0 <argp_failure@@Base+0xf20>
   1688c:	mov	r1, r5
   16890:	mov	r0, sl
   16894:	bl	18178 <argp_error@@Base+0x137c>
   16898:	cmp	r0, #0
   1689c:	beq	168bc <argp_failure@@Base+0xf3c>
   168a0:	mov	r2, r5
   168a4:	mov	r1, r4
   168a8:	ldr	r0, [sl, #28]
   168ac:	bl	110a8 <memcpy@plt>
   168b0:	ldr	r3, [sl, #28]
   168b4:	add	r5, r3, r5
   168b8:	str	r5, [sl, #28]
   168bc:	cmp	r7, r4
   168c0:	bne	169d8 <argp_failure@@Base+0x1058>
   168c4:	ldr	r3, [sl, #28]
   168c8:	ldr	r2, [sl, #24]
   168cc:	sub	r3, r3, r2
   168d0:	ldr	r2, [sl, #16]
   168d4:	cmp	r3, r2
   168d8:	bhi	169e4 <argp_failure@@Base+0x1064>
   168dc:	mov	r3, #0
   168e0:	str	r3, [sl, #4]
   168e4:	ldr	r2, [sl, #28]
   168e8:	ldr	r3, [sl, #32]
   168ec:	cmp	r2, r3
   168f0:	bcs	169f0 <argp_failure@@Base+0x1070>
   168f4:	ldr	r3, [sl, #28]
   168f8:	add	r2, r3, #1
   168fc:	str	r2, [sl, #28]
   16900:	mov	r2, #10
   16904:	strb	r2, [r3]
   16908:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1690c:	str	r3, [fp, #-88]	; 0xffffffa8
   16910:	b	166a4 <argp_failure@@Base+0xd24>
   16914:	mov	r0, sl
   16918:	bl	17bd4 <argp_error@@Base+0xdd8>
   1691c:	ldr	r5, [sl, #20]
   16920:	bic	r5, r5, r5, asr #31
   16924:	ldr	r3, [pc, #332]	; 16a78 <argp_failure@@Base+0x10f8>
   16928:	ldr	r6, [r3, #20]
   1692c:	ldr	r3, [sl, #28]
   16930:	ldr	r2, [sl, #24]
   16934:	sub	r3, r3, r2
   16938:	ldr	r2, [sl, #16]
   1693c:	cmp	r3, r2
   16940:	bls	16808 <argp_failure@@Base+0xe88>
   16944:	mov	r0, sl
   16948:	bl	17bd4 <argp_error@@Base+0xdd8>
   1694c:	b	16808 <argp_failure@@Base+0xe88>
   16950:	mov	r0, sl
   16954:	bl	17bd4 <argp_error@@Base+0xdd8>
   16958:	b	1682c <argp_failure@@Base+0xeac>
   1695c:	mov	r1, #1
   16960:	mov	r0, sl
   16964:	bl	18178 <argp_error@@Base+0x137c>
   16968:	cmp	r0, #0
   1696c:	beq	16868 <argp_failure@@Base+0xee8>
   16970:	b	16854 <argp_failure@@Base+0xed4>
   16974:	cmp	r1, r5
   16978:	bhi	169cc <argp_failure@@Base+0x104c>
   1697c:	ldr	r3, [sl, #28]
   16980:	add	r3, r3, #3
   16984:	ldr	r2, [sl, #32]
   16988:	cmp	r2, r3
   1698c:	bcs	169a4 <argp_failure@@Base+0x1024>
   16990:	mov	r1, #3
   16994:	mov	r0, sl
   16998:	bl	18178 <argp_error@@Base+0x137c>
   1699c:	cmp	r0, #0
   169a0:	beq	16868 <argp_failure@@Base+0xee8>
   169a4:	ldr	r3, [sl, #28]
   169a8:	ldr	r2, [pc, #196]	; 16a74 <argp_failure@@Base+0x10f4>
   169ac:	ldrh	r1, [r2]
   169b0:	ldrb	r2, [r2, #2]
   169b4:	strh	r1, [r3]
   169b8:	strb	r2, [r3, #2]
   169bc:	ldr	r3, [sl, #28]
   169c0:	add	r3, r3, #3
   169c4:	str	r3, [sl, #28]
   169c8:	b	16868 <argp_failure@@Base+0xee8>
   169cc:	mov	r0, sl
   169d0:	bl	142bc <argp_parse@@Base+0x1e24>
   169d4:	b	16868 <argp_failure@@Base+0xee8>
   169d8:	mov	r0, r4
   169dc:	bl	1308c <argp_parse@@Base+0xbf4>
   169e0:	b	168c4 <argp_failure@@Base+0xf44>
   169e4:	mov	r0, sl
   169e8:	bl	17bd4 <argp_error@@Base+0xdd8>
   169ec:	b	168dc <argp_failure@@Base+0xf5c>
   169f0:	mov	r1, #1
   169f4:	mov	r0, sl
   169f8:	bl	18178 <argp_error@@Base+0x137c>
   169fc:	cmp	r0, #0
   16a00:	beq	16908 <argp_failure@@Base+0xf88>
   16a04:	b	168f4 <argp_failure@@Base+0xf74>
   16a08:	mov	r0, sl
   16a0c:	bl	17bd4 <argp_error@@Base+0xdd8>
   16a10:	b	166bc <argp_failure@@Base+0xd3c>
   16a14:	mov	r0, sl
   16a18:	bl	17bd4 <argp_error@@Base+0xdd8>
   16a1c:	b	166dc <argp_failure@@Base+0xd5c>
   16a20:	andeq	r9, r1, r0, lsr #10
   16a24:	andeq	r9, r1, r8, asr #6
   16a28:	andeq	r9, r1, r0, lsr r5
   16a2c:	andeq	r9, r1, r0, ror #10
   16a30:	andeq	r9, r1, r8, lsl #11
   16a34:	andeq	r9, r1, r0, ror #6
   16a38:	ldrdeq	r9, [r1], -ip
   16a3c:	andeq	r9, r1, r8, lsr #11
   16a40:	andeq	r8, r1, r4, ror #29
   16a44:	andeq	r8, r1, r4, asr #29
   16a48:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   16a4c:	andeq	r9, r1, ip, ror #11
   16a50:	andeq	r9, r1, r4, ror #11
   16a54:	strdeq	r9, [r1], -r4
   16a58:	strdeq	r9, [r1], -ip
   16a5c:	andeq	r9, r1, ip, lsl #12
   16a60:	andeq	r9, r1, r4, asr #12
   16a64:	muleq	r1, r4, lr
   16a68:	andeq	r9, r1, ip, asr #12
   16a6c:	andeq	r9, r1, r4, asr r6
   16a70:	andeq	r9, r1, ip, asr r6
   16a74:	andeq	r9, r1, r0, ror #12
   16a78:	andeq	sl, r2, ip, ror #6
   16a7c:	andeq	r0, r0, #5
   16a80:	andeq	r9, r1, r4, ror #12
   16a84:	andeq	sl, r2, r8, lsl r4
   16a88:	ldrdeq	r9, [r1], -r8
   16a8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16a90:	cmp	r3, #0
   16a94:	beq	16b84 <argp_failure@@Base+0x1204>
   16a98:	ldr	r3, [pc, #-40]	; 16a78 <argp_failure@@Base+0x10f8>
   16a9c:	ldr	r3, [r3, #4]
   16aa0:	cmp	r3, #0
   16aa4:	beq	16b84 <argp_failure@@Base+0x1204>
   16aa8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16aac:	cmp	r3, #0
   16ab0:	ldrne	r2, [r3]
   16ab4:	moveq	r2, #0
   16ab8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16abc:	ldr	r1, [pc, #-72]	; 16a7c <argp_failure@@Base+0x10fc>
   16ac0:	ldr	r0, [pc, #-72]	; 16a80 <argp_failure@@Base+0x1100>
   16ac4:	bl	144a0 <argp_parse@@Base+0x2008>
   16ac8:	subs	r4, r0, #0
   16acc:	beq	16b84 <argp_failure@@Base+0x1204>
   16ad0:	ldrb	r3, [r4]
   16ad4:	cmp	r3, #0
   16ad8:	beq	16b78 <argp_failure@@Base+0x11f8>
   16adc:	ldr	r2, [sl, #28]
   16ae0:	ldr	r3, [sl, #32]
   16ae4:	cmp	r2, r3
   16ae8:	bcs	16c1c <argp_failure@@Base+0x129c>
   16aec:	ldr	r3, [sl, #28]
   16af0:	add	r2, r3, #1
   16af4:	str	r2, [sl, #28]
   16af8:	mov	r2, #10
   16afc:	strb	r2, [r3]
   16b00:	mov	r0, r4
   16b04:	bl	111bc <strlen@plt>
   16b08:	subs	r5, r0, #0
   16b0c:	beq	16b54 <argp_failure@@Base+0x11d4>
   16b10:	ldr	r3, [sl, #28]
   16b14:	add	r3, r3, r5
   16b18:	ldr	r2, [sl, #32]
   16b1c:	cmp	r2, r3
   16b20:	bcs	16b38 <argp_failure@@Base+0x11b8>
   16b24:	mov	r1, r5
   16b28:	mov	r0, sl
   16b2c:	bl	18178 <argp_error@@Base+0x137c>
   16b30:	cmp	r0, #0
   16b34:	beq	16b54 <argp_failure@@Base+0x11d4>
   16b38:	mov	r2, r5
   16b3c:	mov	r1, r4
   16b40:	ldr	r0, [sl, #28]
   16b44:	bl	110a8 <memcpy@plt>
   16b48:	ldr	r3, [sl, #28]
   16b4c:	add	r5, r3, r5
   16b50:	str	r5, [sl, #28]
   16b54:	ldr	r2, [sl, #28]
   16b58:	ldr	r3, [sl, #32]
   16b5c:	cmp	r2, r3
   16b60:	bcs	16c34 <argp_failure@@Base+0x12b4>
   16b64:	ldr	r3, [sl, #28]
   16b68:	add	r2, r3, #1
   16b6c:	str	r2, [sl, #28]
   16b70:	mov	r2, #10
   16b74:	strb	r2, [r3]
   16b78:	ldr	r3, [pc, #-256]	; 16a80 <argp_failure@@Base+0x1100>
   16b7c:	cmp	r4, r3
   16b80:	bne	16c4c <argp_failure@@Base+0x12cc>
   16b84:	mov	r4, #1
   16b88:	ldr	r3, [fp, #-104]	; 0xffffff98
   16b8c:	tst	r3, #32
   16b90:	bne	16c58 <argp_failure@@Base+0x12d8>
   16b94:	ldr	r3, [fp, #-104]	; 0xffffff98
   16b98:	tst	r3, #64	; 0x40
   16b9c:	beq	16bf0 <argp_failure@@Base+0x1270>
   16ba0:	ldr	r3, [pc, #-292]	; 16a84 <argp_failure@@Base+0x1104>
   16ba4:	ldr	r3, [r3]
   16ba8:	cmp	r3, #0
   16bac:	beq	16bf0 <argp_failure@@Base+0x1270>
   16bb0:	cmp	r4, #0
   16bb4:	beq	16bdc <argp_failure@@Base+0x125c>
   16bb8:	ldr	r2, [sl, #28]
   16bbc:	ldr	r3, [sl, #32]
   16bc0:	cmp	r2, r3
   16bc4:	bcs	16c80 <argp_failure@@Base+0x1300>
   16bc8:	ldr	r3, [sl, #28]
   16bcc:	add	r2, r3, #1
   16bd0:	str	r2, [sl, #28]
   16bd4:	mov	r2, #10
   16bd8:	strb	r2, [r3]
   16bdc:	ldr	r3, [pc, #-352]	; 16a84 <argp_failure@@Base+0x1104>
   16be0:	ldr	r2, [r3]
   16be4:	ldr	r1, [pc, #-356]	; 16a88 <argp_failure@@Base+0x1108>
   16be8:	mov	r0, sl
   16bec:	bl	18268 <argp_error@@Base+0x146c>
   16bf0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16bf4:	bl	110fc <funlockfile@plt>
   16bf8:	ldr	r3, [fp, #-108]	; 0xffffff94
   16bfc:	cmp	r3, #0
   16c00:	beq	16c0c <argp_failure@@Base+0x128c>
   16c04:	mov	r0, r3
   16c08:	bl	14178 <argp_parse@@Base+0x1ce0>
   16c0c:	mov	r0, sl
   16c10:	bl	18138 <argp_error@@Base+0x133c>
   16c14:	sub	sp, fp, #32
   16c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16c1c:	mov	r1, #1
   16c20:	mov	r0, sl
   16c24:	bl	18178 <argp_error@@Base+0x137c>
   16c28:	cmp	r0, #0
   16c2c:	beq	16b00 <argp_failure@@Base+0x1180>
   16c30:	b	16aec <argp_failure@@Base+0x116c>
   16c34:	mov	r1, #1
   16c38:	mov	r0, sl
   16c3c:	bl	18178 <argp_error@@Base+0x137c>
   16c40:	cmp	r0, #0
   16c44:	beq	16b78 <argp_failure@@Base+0x11f8>
   16c48:	b	16b64 <argp_failure@@Base+0x11e4>
   16c4c:	mov	r0, r4
   16c50:	bl	1308c <argp_parse@@Base+0xbf4>
   16c54:	b	16b84 <argp_failure@@Base+0x1204>
   16c58:	str	sl, [sp, #4]
   16c5c:	mov	r3, #0
   16c60:	str	r3, [sp]
   16c64:	mov	r3, r4
   16c68:	mov	r2, #1
   16c6c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16c70:	ldr	r0, [fp, #-112]	; 0xffffff90
   16c74:	bl	14a3c <argp_parse@@Base+0x25a4>
   16c78:	orr	r4, r4, r0
   16c7c:	b	16b94 <argp_failure@@Base+0x1214>
   16c80:	mov	r1, #1
   16c84:	mov	r0, sl
   16c88:	bl	18178 <argp_error@@Base+0x137c>
   16c8c:	cmp	r0, #0
   16c90:	beq	16bdc <argp_failure@@Base+0x125c>
   16c94:	b	16bc8 <argp_failure@@Base+0x1248>
   16c98:	ldrb	r3, [r5]
   16c9c:	mov	r4, r5
   16ca0:	mov	r5, #0
   16ca4:	b	15d78 <argp_failure@@Base+0x3f8>
   16ca8:	mov	r4, r2
   16cac:	b	15d8c <argp_failure@@Base+0x40c>
   16cb0:	cmp	r0, #110	; 0x6e
   16cb4:	beq	15de4 <argp_failure@@Base+0x464>
   16cb8:	mov	r3, #1
   16cbc:	str	r3, [fp, #-96]	; 0xffffffa0
   16cc0:	str	r3, [fp, #-116]	; 0xffffff8c
   16cc4:	add	r6, sl, #24
   16cc8:	b	15edc <argp_failure@@Base+0x55c>
   16ccc:	ldrb	r3, [r9]
   16cd0:	cmp	r7, r3
   16cd4:	beq	163b0 <argp_failure@@Base+0xa30>
   16cd8:	add	r4, r4, #24
   16cdc:	subs	r5, r5, #1
   16ce0:	beq	164a0 <argp_failure@@Base+0xb20>
   16ce4:	ldr	r6, [r4, #12]
   16ce8:	tst	r6, #8
   16cec:	bne	16cd8 <argp_failure@@Base+0x1358>
   16cf0:	ldr	r7, [r4, #4]
   16cf4:	sub	r3, r7, #1
   16cf8:	cmp	r3, #254	; 0xfe
   16cfc:	bhi	16cd8 <argp_failure@@Base+0x1358>
   16d00:	bl	1118c <__ctype_b_loc@plt>
   16d04:	ldr	r2, [r0]
   16d08:	lsl	r3, r7, #1
   16d0c:	ldrh	r3, [r2, r3]
   16d10:	tst	r3, #16384	; 0x4000
   16d14:	bne	16ccc <argp_failure@@Base+0x134c>
   16d18:	b	16cd8 <argp_failure@@Base+0x1358>

00016d1c <argp_help@@Base>:
   16d1c:	push	{lr}		; (str lr, [sp, #-4]!)
   16d20:	sub	sp, sp, #12
   16d24:	str	r3, [sp]
   16d28:	mov	r3, r2
   16d2c:	mov	r2, r1
   16d30:	mov	r1, #0
   16d34:	bl	15b88 <argp_failure@@Base+0x208>
   16d38:	add	sp, sp, #12
   16d3c:	pop	{pc}		; (ldr pc, [sp], #4)

00016d40 <argp_state_help@@Base>:
   16d40:	push	{r4, r5, lr}
   16d44:	sub	sp, sp, #12
   16d48:	mov	r5, r2
   16d4c:	subs	r4, r0, #0
   16d50:	beq	16db4 <argp_state_help@@Base+0x74>
   16d54:	ldr	r3, [r4, #16]
   16d58:	tst	r3, #2
   16d5c:	bne	16dac <argp_state_help@@Base+0x6c>
   16d60:	cmp	r1, #0
   16d64:	beq	16dac <argp_state_help@@Base+0x6c>
   16d68:	ldr	r3, [r4, #16]
   16d6c:	tst	r3, #64	; 0x40
   16d70:	orrne	r5, r5, #128	; 0x80
   16d74:	ldr	r0, [r4]
   16d78:	ldr	r3, [r4, #40]	; 0x28
   16d7c:	str	r3, [sp]
   16d80:	mov	r3, r5
   16d84:	mov	r2, r1
   16d88:	mov	r1, r4
   16d8c:	bl	15b88 <argp_failure@@Base+0x208>
   16d90:	ldr	r3, [r4, #16]
   16d94:	tst	r3, #32
   16d98:	bne	16dac <argp_state_help@@Base+0x6c>
   16d9c:	tst	r5, #256	; 0x100
   16da0:	bne	16de0 <argp_state_help@@Base+0xa0>
   16da4:	tst	r5, #512	; 0x200
   16da8:	bne	16dec <argp_state_help@@Base+0xac>
   16dac:	add	sp, sp, #12
   16db0:	pop	{r4, r5, pc}
   16db4:	cmp	r1, #0
   16db8:	beq	16dac <argp_state_help@@Base+0x6c>
   16dbc:	ldr	r3, [pc, #48]	; 16df4 <argp_state_help@@Base+0xb4>
   16dc0:	ldr	r3, [r3]
   16dc4:	str	r3, [sp]
   16dc8:	mov	r3, r2
   16dcc:	mov	r2, r1
   16dd0:	mov	r1, #0
   16dd4:	mov	r0, r1
   16dd8:	bl	15b88 <argp_failure@@Base+0x208>
   16ddc:	b	16d9c <argp_state_help@@Base+0x5c>
   16de0:	ldr	r3, [pc, #16]	; 16df8 <argp_state_help@@Base+0xb8>
   16de4:	ldr	r0, [r3]
   16de8:	bl	111a4 <exit@plt>
   16dec:	mov	r0, #0
   16df0:	bl	111a4 <exit@plt>
   16df4:	andeq	sl, r2, r8, lsr #7
   16df8:	andeq	sl, r2, r4, lsr #7

00016dfc <argp_error@@Base>:
   16dfc:	push	{r1, r2, r3}
   16e00:	push	{r4, r5, lr}
   16e04:	sub	sp, sp, #8
   16e08:	subs	r5, r0, #0
   16e0c:	beq	16edc <argp_error@@Base+0xe0>
   16e10:	ldr	r3, [r5, #16]
   16e14:	tst	r3, #2
   16e18:	bne	16ecc <argp_error@@Base+0xd0>
   16e1c:	ldr	r4, [r5, #44]	; 0x2c
   16e20:	cmp	r4, #0
   16e24:	beq	16ecc <argp_error@@Base+0xd0>
   16e28:	mov	r0, r4
   16e2c:	bl	11270 <flockfile@plt>
   16e30:	add	r3, sp, #24
   16e34:	str	r3, [sp, #4]
   16e38:	ldr	r0, [r5, #40]	; 0x28
   16e3c:	mov	r1, r4
   16e40:	bl	1100c <fputs_unlocked@plt>
   16e44:	ldr	r3, [r4, #20]
   16e48:	ldr	r2, [r4, #24]
   16e4c:	cmp	r3, r2
   16e50:	addcc	r2, r3, #1
   16e54:	strcc	r2, [r4, #20]
   16e58:	movcc	r2, #58	; 0x3a
   16e5c:	strbcc	r2, [r3]
   16e60:	bcs	16f08 <argp_error@@Base+0x10c>
   16e64:	ldr	r3, [r4, #20]
   16e68:	ldr	r2, [r4, #24]
   16e6c:	cmp	r3, r2
   16e70:	addcc	r2, r3, #1
   16e74:	strcc	r2, [r4, #20]
   16e78:	movcc	r2, #32
   16e7c:	strbcc	r2, [r3]
   16e80:	bcs	16f18 <argp_error@@Base+0x11c>
   16e84:	ldr	r2, [sp, #4]
   16e88:	ldr	r1, [sp, #20]
   16e8c:	mov	r0, r4
   16e90:	bl	11258 <vfprintf@plt>
   16e94:	ldr	r3, [r4, #20]
   16e98:	ldr	r2, [r4, #24]
   16e9c:	cmp	r3, r2
   16ea0:	addcc	r2, r3, #1
   16ea4:	strcc	r2, [r4, #20]
   16ea8:	movcc	r2, #10
   16eac:	strbcc	r2, [r3]
   16eb0:	bcs	16f28 <argp_error@@Base+0x12c>
   16eb4:	mov	r2, #260	; 0x104
   16eb8:	mov	r1, r4
   16ebc:	mov	r0, r5
   16ec0:	bl	16d40 <argp_state_help@@Base>
   16ec4:	mov	r0, r4
   16ec8:	bl	110fc <funlockfile@plt>
   16ecc:	add	sp, sp, #8
   16ed0:	pop	{r4, r5, lr}
   16ed4:	add	sp, sp, #12
   16ed8:	bx	lr
   16edc:	ldr	r3, [pc, #84]	; 16f38 <argp_error@@Base+0x13c>
   16ee0:	ldr	r4, [r3]
   16ee4:	cmp	r4, #0
   16ee8:	beq	16ecc <argp_error@@Base+0xd0>
   16eec:	mov	r0, r4
   16ef0:	bl	11270 <flockfile@plt>
   16ef4:	add	r3, sp, #24
   16ef8:	str	r3, [sp, #4]
   16efc:	ldr	r3, [pc, #56]	; 16f3c <argp_error@@Base+0x140>
   16f00:	ldr	r0, [r3]
   16f04:	b	16e3c <argp_error@@Base+0x40>
   16f08:	mov	r1, #58	; 0x3a
   16f0c:	mov	r0, r4
   16f10:	bl	11240 <__overflow@plt>
   16f14:	b	16e64 <argp_error@@Base+0x68>
   16f18:	mov	r1, #32
   16f1c:	mov	r0, r4
   16f20:	bl	11240 <__overflow@plt>
   16f24:	b	16e84 <argp_error@@Base+0x88>
   16f28:	mov	r1, #10
   16f2c:	mov	r0, r4
   16f30:	bl	11240 <__overflow@plt>
   16f34:	b	16eb4 <argp_error@@Base+0xb8>
   16f38:			; <UNDEFINED> instruction: 0x0002a3b0
   16f3c:	andeq	sl, r2, r8, lsr #7
   16f40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16f44:	ldr	r4, [r1, #28]
   16f48:	ldr	r5, [r1, #32]
   16f4c:	ldr	r6, [r1]
   16f50:	add	r7, r0, r5, lsl #2
   16f54:	b	16f8c <argp_error@@Base+0x190>
   16f58:	cmp	sl, #0
   16f5c:	ble	16f88 <argp_error@@Base+0x18c>
   16f60:	add	r2, r0, r4, lsl #2
   16f64:	sub	r3, r6, sl
   16f68:	add	r3, r0, r3, lsl #2
   16f6c:	add	r8, r0, r6, lsl #2
   16f70:	ldr	ip, [r2]
   16f74:	ldr	lr, [r3]
   16f78:	str	lr, [r2], #4
   16f7c:	str	ip, [r3], #4
   16f80:	cmp	r3, r8
   16f84:	bne	16f70 <argp_error@@Base+0x174>
   16f88:	sub	r6, r6, sl
   16f8c:	cmp	r6, r5
   16f90:	movle	r3, #0
   16f94:	movgt	r3, #1
   16f98:	cmp	r4, r5
   16f9c:	movge	r3, #0
   16fa0:	cmp	r3, #0
   16fa4:	beq	16ff0 <argp_error@@Base+0x1f4>
   16fa8:	sub	r9, r6, r5
   16fac:	sub	sl, r5, r4
   16fb0:	cmp	r9, sl
   16fb4:	bgt	16f58 <argp_error@@Base+0x15c>
   16fb8:	cmp	r9, #0
   16fbc:	addgt	r3, r0, r4, lsl #2
   16fc0:	addgt	r8, r9, r4
   16fc4:	addgt	r8, r0, r8, lsl #2
   16fc8:	movgt	r2, r7
   16fcc:	ble	16fe8 <argp_error@@Base+0x1ec>
   16fd0:	ldr	ip, [r3]
   16fd4:	ldr	lr, [r2]
   16fd8:	str	lr, [r3], #4
   16fdc:	str	ip, [r2], #4
   16fe0:	cmp	r3, r8
   16fe4:	bne	16fd0 <argp_error@@Base+0x1d4>
   16fe8:	add	r4, r4, r9
   16fec:	b	16f8c <argp_error@@Base+0x190>
   16ff0:	ldr	r0, [r1]
   16ff4:	ldr	r3, [r1, #32]
   16ff8:	sub	r2, r0, r3
   16ffc:	ldr	r3, [r1, #28]
   17000:	add	r3, r3, r2
   17004:	str	r3, [r1, #28]
   17008:	str	r0, [r1, #32]
   1700c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17010:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17014:	sub	sp, sp, #44	; 0x2c
   17018:	str	r0, [sp, #20]
   1701c:	str	r1, [sp, #12]
   17020:	str	r2, [sp, #24]
   17024:	str	r3, [sp, #8]
   17028:	ldr	fp, [sp, #88]	; 0x58
   1702c:	ldr	sl, [fp, #20]
   17030:	ldrb	r3, [sl]
   17034:	cmp	r3, #0
   17038:	cmpne	r3, #61	; 0x3d
   1703c:	beq	17078 <argp_error@@Base+0x27c>
   17040:	mov	r8, sl
   17044:	ldrb	r3, [r8, #1]!
   17048:	cmp	r3, #0
   1704c:	cmpne	r3, #61	; 0x3d
   17050:	bne	17044 <argp_error@@Base+0x248>
   17054:	sub	r7, r8, sl
   17058:	ldr	r5, [sp, #8]
   1705c:	ldr	r3, [r5]
   17060:	str	r3, [sp, #16]
   17064:	cmp	r3, #0
   17068:	beq	1736c <argp_error@@Base+0x570>
   1706c:	mov	r4, r3
   17070:	mov	r6, #0
   17074:	b	17090 <argp_error@@Base+0x294>
   17078:	mov	r8, sl
   1707c:	b	17054 <argp_error@@Base+0x258>
   17080:	add	r6, r6, #1
   17084:	ldr	r4, [r5, #16]!
   17088:	cmp	r4, #0
   1708c:	beq	170c8 <argp_error@@Base+0x2cc>
   17090:	mov	r9, r5
   17094:	mov	r2, r7
   17098:	mov	r1, sl
   1709c:	mov	r0, r4
   170a0:	bl	112b8 <strncmp@plt>
   170a4:	cmp	r0, #0
   170a8:	bne	17080 <argp_error@@Base+0x284>
   170ac:	mov	r0, r4
   170b0:	bl	111bc <strlen@plt>
   170b4:	cmp	r7, r0
   170b8:	bne	17080 <argp_error@@Base+0x284>
   170bc:	cmp	r5, #0
   170c0:	strne	r6, [sp, #28]
   170c4:	bne	1731c <argp_error@@Base+0x520>
   170c8:	ldr	r4, [sp, #8]
   170cc:	mvn	r3, #0
   170d0:	str	r3, [sp, #28]
   170d4:	mov	sl, #0
   170d8:	str	sl, [sp, #36]	; 0x24
   170dc:	mov	r5, sl
   170e0:	mov	r9, sl
   170e4:	str	r8, [sp, #32]
   170e8:	mov	r8, sl
   170ec:	ldr	r0, [sp, #16]
   170f0:	b	17140 <argp_error@@Base+0x344>
   170f4:	ldr	r2, [r9, #8]
   170f8:	ldr	r3, [r4, #8]
   170fc:	cmp	r2, r3
   17100:	bne	17178 <argp_error@@Base+0x37c>
   17104:	ldr	r2, [r9, #12]
   17108:	ldr	r3, [r4, #12]
   1710c:	cmp	r2, r3
   17110:	bne	17178 <argp_error@@Base+0x37c>
   17114:	b	17130 <argp_error@@Base+0x334>
   17118:	cmp	r8, #0
   1711c:	moveq	sl, #1
   17120:	beq	17130 <argp_error@@Base+0x334>
   17124:	mov	sl, #1
   17128:	mov	r3, #1
   1712c:	strb	r3, [r8, r5]
   17130:	add	r5, r5, #1
   17134:	ldr	r0, [r4, #16]!
   17138:	cmp	r0, #0
   1713c:	beq	171e0 <argp_error@@Base+0x3e4>
   17140:	mov	r2, r7
   17144:	ldr	r1, [fp, #20]
   17148:	bl	112b8 <strncmp@plt>
   1714c:	cmp	r0, #0
   17150:	bne	17130 <argp_error@@Base+0x334>
   17154:	cmp	r9, #0
   17158:	beq	171cc <argp_error@@Base+0x3d0>
   1715c:	ldr	r3, [sp, #84]	; 0x54
   17160:	cmp	r3, #0
   17164:	bne	17178 <argp_error@@Base+0x37c>
   17168:	ldr	r2, [r9, #4]
   1716c:	ldr	r3, [r4, #4]
   17170:	cmp	r2, r3
   17174:	beq	170f4 <argp_error@@Base+0x2f8>
   17178:	cmp	sl, #0
   1717c:	bne	17130 <argp_error@@Base+0x334>
   17180:	ldr	r3, [sp, #92]	; 0x5c
   17184:	cmp	r3, #0
   17188:	beq	17118 <argp_error@@Base+0x31c>
   1718c:	cmp	r8, #0
   17190:	bne	17128 <argp_error@@Base+0x32c>
   17194:	mov	r0, r6
   17198:	bl	13cfc <argp_parse@@Base+0x1864>
   1719c:	subs	r8, r0, #0
   171a0:	beq	171d8 <argp_error@@Base+0x3dc>
   171a4:	mov	r2, r6
   171a8:	mov	r1, #0
   171ac:	mov	r0, r8
   171b0:	bl	11204 <memset@plt>
   171b4:	ldr	r3, [sp, #28]
   171b8:	mov	r2, #1
   171bc:	strb	r2, [r8, r3]
   171c0:	mov	r3, #1
   171c4:	str	r3, [sp, #36]	; 0x24
   171c8:	b	17128 <argp_error@@Base+0x32c>
   171cc:	str	r5, [sp, #28]
   171d0:	mov	r9, r4
   171d4:	b	17130 <argp_error@@Base+0x334>
   171d8:	mov	sl, #1
   171dc:	b	17130 <argp_error@@Base+0x334>
   171e0:	mov	r3, r8
   171e4:	str	r8, [sp, #16]
   171e8:	ldr	r8, [sp, #32]
   171ec:	cmp	sl, #0
   171f0:	cmpeq	r3, #0
   171f4:	beq	17314 <argp_error@@Base+0x518>
   171f8:	ldr	r3, [sp, #92]	; 0x5c
   171fc:	cmp	r3, #0
   17200:	beq	17230 <argp_error@@Base+0x434>
   17204:	cmp	sl, #0
   17208:	beq	1726c <argp_error@@Base+0x470>
   1720c:	ldr	r3, [sp, #12]
   17210:	ldr	r2, [r3]
   17214:	ldr	r3, [pc, #708]	; 174e0 <argp_error@@Base+0x6e4>
   17218:	ldr	r0, [r3]
   1721c:	ldr	r3, [fp, #20]
   17220:	str	r3, [sp]
   17224:	ldr	r3, [sp, #96]	; 0x60
   17228:	ldr	r1, [pc, #692]	; 174e4 <argp_error@@Base+0x6e8>
   1722c:	bl	111d4 <fprintf@plt>
   17230:	ldr	r3, [sp, #36]	; 0x24
   17234:	cmp	r3, #0
   17238:	bne	17308 <argp_error@@Base+0x50c>
   1723c:	ldr	r4, [fp, #20]
   17240:	mov	r0, r4
   17244:	bl	111bc <strlen@plt>
   17248:	add	r0, r4, r0
   1724c:	str	r0, [fp, #20]
   17250:	ldr	r3, [fp]
   17254:	add	r3, r3, #1
   17258:	str	r3, [fp]
   1725c:	mov	r3, #0
   17260:	str	r3, [fp, #8]
   17264:	mov	r0, #63	; 0x3f
   17268:	b	17460 <argp_error@@Base+0x664>
   1726c:	ldr	r4, [pc, #620]	; 174e0 <argp_error@@Base+0x6e4>
   17270:	ldr	r0, [r4]
   17274:	bl	11270 <flockfile@plt>
   17278:	ldr	r3, [sp, #12]
   1727c:	ldr	r2, [r3]
   17280:	ldr	r0, [r4]
   17284:	ldr	r3, [fp, #20]
   17288:	str	r3, [sp]
   1728c:	ldr	r3, [sp, #96]	; 0x60
   17290:	ldr	r1, [pc, #592]	; 174e8 <argp_error@@Base+0x6ec>
   17294:	bl	111d4 <fprintf@plt>
   17298:	cmp	r6, #0
   1729c:	ble	172ec <argp_error@@Base+0x4f0>
   172a0:	ldr	r3, [sp, #16]
   172a4:	mov	r4, r3
   172a8:	add	r6, r3, r6
   172ac:	ldr	r7, [pc, #568]	; 174ec <argp_error@@Base+0x6f0>
   172b0:	ldr	r5, [pc, #552]	; 174e0 <argp_error@@Base+0x6e4>
   172b4:	ldr	r8, [sp, #8]
   172b8:	b	172c8 <argp_error@@Base+0x4cc>
   172bc:	add	sl, sl, #1
   172c0:	cmp	r4, r6
   172c4:	beq	172ec <argp_error@@Base+0x4f0>
   172c8:	ldrb	r3, [r4], #1
   172cc:	cmp	r3, #0
   172d0:	beq	172bc <argp_error@@Base+0x4c0>
   172d4:	ldr	r3, [r8, sl, lsl #4]
   172d8:	ldr	r2, [sp, #96]	; 0x60
   172dc:	mov	r1, r7
   172e0:	ldr	r0, [r5]
   172e4:	bl	111d4 <fprintf@plt>
   172e8:	b	172bc <argp_error@@Base+0x4c0>
   172ec:	ldr	r4, [pc, #492]	; 174e0 <argp_error@@Base+0x6e4>
   172f0:	ldr	r1, [r4]
   172f4:	mov	r0, #10
   172f8:	bl	11264 <fputc@plt>
   172fc:	ldr	r0, [r4]
   17300:	bl	110fc <funlockfile@plt>
   17304:	b	17230 <argp_error@@Base+0x434>
   17308:	ldr	r0, [sp, #16]
   1730c:	bl	1308c <argp_parse@@Base+0xbf4>
   17310:	b	1723c <argp_error@@Base+0x440>
   17314:	cmp	r9, #0
   17318:	beq	1736c <argp_error@@Base+0x570>
   1731c:	ldr	r2, [fp]
   17320:	add	r3, r2, #1
   17324:	str	r3, [fp]
   17328:	mov	r1, #0
   1732c:	str	r1, [fp, #20]
   17330:	ldrb	r1, [r8]
   17334:	cmp	r1, #0
   17338:	beq	1742c <argp_error@@Base+0x630>
   1733c:	ldr	r3, [r9, #4]
   17340:	cmp	r3, #0
   17344:	addne	r8, r8, #1
   17348:	strne	r8, [fp, #12]
   1734c:	bne	17438 <argp_error@@Base+0x63c>
   17350:	ldr	r3, [sp, #92]	; 0x5c
   17354:	cmp	r3, #0
   17358:	bne	17404 <argp_error@@Base+0x608>
   1735c:	ldr	r3, [r9, #12]
   17360:	str	r3, [fp, #8]
   17364:	mov	r0, #63	; 0x3f
   17368:	b	17460 <argp_error@@Base+0x664>
   1736c:	ldr	r3, [sp, #84]	; 0x54
   17370:	cmp	r3, #0
   17374:	bne	173a4 <argp_error@@Base+0x5a8>
   17378:	ldr	r3, [sp, #92]	; 0x5c
   1737c:	cmp	r3, #0
   17380:	bne	173dc <argp_error@@Base+0x5e0>
   17384:	mov	r2, #0
   17388:	str	r2, [fp, #20]
   1738c:	ldr	r3, [fp]
   17390:	add	r3, r3, #1
   17394:	str	r3, [fp]
   17398:	str	r2, [fp, #8]
   1739c:	mov	r0, #63	; 0x3f
   173a0:	b	17460 <argp_error@@Base+0x664>
   173a4:	ldr	r3, [fp]
   173a8:	ldr	r2, [sp, #12]
   173ac:	ldr	r3, [r2, r3, lsl #2]
   173b0:	ldrb	r3, [r3, #1]
   173b4:	cmp	r3, #45	; 0x2d
   173b8:	beq	17378 <argp_error@@Base+0x57c>
   173bc:	ldr	r3, [fp, #20]
   173c0:	ldrb	r1, [r3]
   173c4:	ldr	r0, [sp, #24]
   173c8:	bl	111c8 <strchr@plt>
   173cc:	cmp	r0, #0
   173d0:	beq	17378 <argp_error@@Base+0x57c>
   173d4:	mvn	r0, #0
   173d8:	b	17460 <argp_error@@Base+0x664>
   173dc:	ldr	r3, [sp, #12]
   173e0:	ldr	r2, [r3]
   173e4:	ldr	r3, [pc, #244]	; 174e0 <argp_error@@Base+0x6e4>
   173e8:	ldr	r0, [r3]
   173ec:	ldr	r3, [fp, #20]
   173f0:	str	r3, [sp]
   173f4:	ldr	r3, [sp, #96]	; 0x60
   173f8:	ldr	r1, [pc, #240]	; 174f0 <argp_error@@Base+0x6f4>
   173fc:	bl	111d4 <fprintf@plt>
   17400:	b	17384 <argp_error@@Base+0x588>
   17404:	ldr	r3, [sp, #12]
   17408:	ldr	r2, [r3]
   1740c:	ldr	r3, [pc, #204]	; 174e0 <argp_error@@Base+0x6e4>
   17410:	ldr	r0, [r3]
   17414:	ldr	r3, [r9]
   17418:	str	r3, [sp]
   1741c:	ldr	r3, [sp, #96]	; 0x60
   17420:	ldr	r1, [pc, #204]	; 174f4 <argp_error@@Base+0x6f8>
   17424:	bl	111d4 <fprintf@plt>
   17428:	b	1735c <argp_error@@Base+0x560>
   1742c:	ldr	r1, [r9, #4]
   17430:	cmp	r1, #1
   17434:	beq	17468 <argp_error@@Base+0x66c>
   17438:	ldr	r3, [sp, #80]	; 0x50
   1743c:	cmp	r3, #0
   17440:	ldrne	r2, [sp, #28]
   17444:	strne	r2, [r3]
   17448:	ldr	r3, [r9, #8]
   1744c:	cmp	r3, #0
   17450:	ldrne	r2, [r9, #12]
   17454:	strne	r2, [r3]
   17458:	movne	r0, #0
   1745c:	ldreq	r0, [r9, #12]
   17460:	add	sp, sp, #44	; 0x2c
   17464:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17468:	ldr	r1, [sp, #20]
   1746c:	cmp	r3, r1
   17470:	bge	1748c <argp_error@@Base+0x690>
   17474:	add	r2, r2, #2
   17478:	str	r2, [fp]
   1747c:	ldr	r2, [sp, #12]
   17480:	ldr	r3, [r2, r3, lsl #2]
   17484:	str	r3, [fp, #12]
   17488:	b	17438 <argp_error@@Base+0x63c>
   1748c:	ldr	r3, [sp, #92]	; 0x5c
   17490:	cmp	r3, #0
   17494:	bne	174b8 <argp_error@@Base+0x6bc>
   17498:	ldr	r3, [r9, #12]
   1749c:	str	r3, [fp, #8]
   174a0:	ldr	r3, [sp, #24]
   174a4:	ldrb	r0, [r3]
   174a8:	cmp	r0, #58	; 0x3a
   174ac:	moveq	r0, #58	; 0x3a
   174b0:	movne	r0, #63	; 0x3f
   174b4:	b	17460 <argp_error@@Base+0x664>
   174b8:	ldr	r3, [sp, #12]
   174bc:	ldr	r2, [r3]
   174c0:	ldr	r3, [pc, #24]	; 174e0 <argp_error@@Base+0x6e4>
   174c4:	ldr	r0, [r3]
   174c8:	ldr	r3, [r9]
   174cc:	str	r3, [sp]
   174d0:	ldr	r3, [sp, #96]	; 0x60
   174d4:	ldr	r1, [pc, #28]	; 174f8 <argp_error@@Base+0x6fc>
   174d8:	bl	111d4 <fprintf@plt>
   174dc:	b	17498 <argp_error@@Base+0x69c>
   174e0:			; <UNDEFINED> instruction: 0x0002a3b0
   174e4:	andeq	r9, r1, ip, ror #13
   174e8:	andeq	r9, r1, ip, lsl #14
   174ec:	andeq	r9, r1, ip, lsr r7
   174f0:	andeq	r9, r1, r4, asr #14
   174f4:	andeq	r9, r1, r4, ror #14
   174f8:	muleq	r1, r4, r7
   174fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17500:	sub	sp, sp, #36	; 0x24
   17504:	str	r3, [sp, #24]
   17508:	ldr	r4, [sp, #80]	; 0x50
   1750c:	ldr	r8, [r4, #4]
   17510:	subs	r5, r0, #0
   17514:	ble	17a1c <argp_error@@Base+0xc20>
   17518:	mov	r9, r1
   1751c:	mov	r6, r2
   17520:	mov	r3, #0
   17524:	str	r3, [r4, #12]
   17528:	ldr	r3, [r4]
   1752c:	cmp	r3, #0
   17530:	beq	17554 <argp_error@@Base+0x758>
   17534:	ldr	r3, [r4, #16]
   17538:	cmp	r3, #0
   1753c:	beq	1755c <argp_error@@Base+0x760>
   17540:	ldrb	r3, [r2]
   17544:	sub	r3, r3, #43	; 0x2b
   17548:	tst	r3, #253	; 0xfd
   1754c:	addeq	r6, r2, #1
   17550:	b	175b8 <argp_error@@Base+0x7bc>
   17554:	mov	r3, #1
   17558:	str	r3, [r4]
   1755c:	ldr	r3, [r4]
   17560:	str	r3, [r4, #32]
   17564:	str	r3, [r4, #28]
   17568:	mov	r3, #0
   1756c:	str	r3, [r4, #20]
   17570:	ldrb	r3, [r6]
   17574:	cmp	r3, #45	; 0x2d
   17578:	moveq	r3, #2
   1757c:	streq	r3, [r4, #24]
   17580:	addeq	r6, r6, #1
   17584:	beq	175b0 <argp_error@@Base+0x7b4>
   17588:	cmp	r3, #43	; 0x2b
   1758c:	moveq	r3, #0
   17590:	streq	r3, [r4, #24]
   17594:	addeq	r6, r6, #1
   17598:	beq	175b0 <argp_error@@Base+0x7b4>
   1759c:	ldr	r3, [sp, #84]	; 0x54
   175a0:	cmp	r3, #0
   175a4:	beq	17654 <argp_error@@Base+0x858>
   175a8:	mov	r3, #0
   175ac:	str	r3, [r4, #24]
   175b0:	mov	r3, #1
   175b4:	str	r3, [r4, #16]
   175b8:	ldrb	r3, [r6]
   175bc:	cmp	r3, #58	; 0x3a
   175c0:	moveq	r8, #0
   175c4:	ldr	r3, [r4, #20]
   175c8:	cmp	r3, #0
   175cc:	beq	175dc <argp_error@@Base+0x7e0>
   175d0:	ldrb	r3, [r3]
   175d4:	cmp	r3, #0
   175d8:	bne	17768 <argp_error@@Base+0x96c>
   175dc:	ldr	r3, [r4]
   175e0:	ldr	r2, [r4, #32]
   175e4:	cmp	r2, r3
   175e8:	strgt	r3, [r4, #32]
   175ec:	ldr	r2, [r4, #28]
   175f0:	cmp	r3, r2
   175f4:	strlt	r3, [r4, #28]
   175f8:	ldr	r2, [r4, #24]
   175fc:	cmp	r2, #1
   17600:	beq	17670 <argp_error@@Base+0x874>
   17604:	ldr	r7, [r4]
   17608:	cmp	r5, r7
   1760c:	beq	176f4 <argp_error@@Base+0x8f8>
   17610:	ldr	sl, [r9, r7, lsl #2]
   17614:	ldr	r1, [pc, #1088]	; 17a5c <argp_error@@Base+0xc60>
   17618:	mov	r0, sl
   1761c:	bl	11030 <strcmp@plt>
   17620:	cmp	r0, #0
   17624:	bne	17a2c <argp_error@@Base+0xc30>
   17628:	add	r7, r7, #1
   1762c:	str	r7, [r4]
   17630:	ldr	r2, [r4, #28]
   17634:	ldr	r3, [r4, #32]
   17638:	cmp	r7, r3
   1763c:	cmpne	r2, r3
   17640:	beq	176e4 <argp_error@@Base+0x8e8>
   17644:	mov	r1, r4
   17648:	mov	r0, r9
   1764c:	bl	16f40 <argp_error@@Base+0x144>
   17650:	b	176ec <argp_error@@Base+0x8f0>
   17654:	ldr	r0, [pc, #1028]	; 17a60 <argp_error@@Base+0xc64>
   17658:	bl	1112c <getenv@plt>
   1765c:	cmp	r0, #0
   17660:	bne	175a8 <argp_error@@Base+0x7ac>
   17664:	mov	r3, #1
   17668:	str	r3, [r4, #24]
   1766c:	b	175b0 <argp_error@@Base+0x7b4>
   17670:	ldr	r2, [r4, #32]
   17674:	ldr	r1, [r4, #28]
   17678:	cmp	r1, r2
   1767c:	cmpne	r3, r2
   17680:	beq	17694 <argp_error@@Base+0x898>
   17684:	mov	r1, r4
   17688:	mov	r0, r9
   1768c:	bl	16f40 <argp_error@@Base+0x144>
   17690:	b	1769c <argp_error@@Base+0x8a0>
   17694:	cmp	r3, r2
   17698:	strne	r3, [r4, #28]
   1769c:	ldr	r3, [r4]
   176a0:	cmp	r5, r3
   176a4:	ble	176dc <argp_error@@Base+0x8e0>
   176a8:	add	r1, r9, r3, lsl #2
   176ac:	b	176c0 <argp_error@@Base+0x8c4>
   176b0:	add	r3, r3, #1
   176b4:	str	r3, [r4]
   176b8:	cmp	r5, r3
   176bc:	beq	176dc <argp_error@@Base+0x8e0>
   176c0:	ldr	r2, [r1], #4
   176c4:	ldrb	r0, [r2]
   176c8:	cmp	r0, #45	; 0x2d
   176cc:	bne	176b0 <argp_error@@Base+0x8b4>
   176d0:	ldrb	r2, [r2, #1]
   176d4:	cmp	r2, #0
   176d8:	beq	176b0 <argp_error@@Base+0x8b4>
   176dc:	str	r3, [r4, #32]
   176e0:	b	17604 <argp_error@@Base+0x808>
   176e4:	cmp	r2, r3
   176e8:	streq	r7, [r4, #28]
   176ec:	str	r5, [r4, #32]
   176f0:	str	r5, [r4]
   176f4:	ldr	r3, [r4, #28]
   176f8:	ldr	r2, [r4, #32]
   176fc:	cmp	r3, r2
   17700:	mvneq	r0, #0
   17704:	strne	r3, [r4]
   17708:	mvnne	r0, #0
   1770c:	b	1786c <argp_error@@Base+0xa70>
   17710:	ldrb	r1, [sl, #1]
   17714:	cmp	r1, #0
   17718:	beq	17a38 <argp_error@@Base+0xc3c>
   1771c:	ldr	r3, [sp, #24]
   17720:	cmp	r3, #0
   17724:	beq	17758 <argp_error@@Base+0x95c>
   17728:	cmp	r1, #45	; 0x2d
   1772c:	beq	177d0 <argp_error@@Base+0x9d4>
   17730:	ldr	r3, [sp, #76]	; 0x4c
   17734:	cmp	r3, #0
   17738:	beq	17758 <argp_error@@Base+0x95c>
   1773c:	ldrb	r3, [sl, #2]
   17740:	cmp	r3, #0
   17744:	bne	17810 <argp_error@@Base+0xa14>
   17748:	mov	r0, r6
   1774c:	bl	111c8 <strchr@plt>
   17750:	cmp	r0, #0
   17754:	beq	17810 <argp_error@@Base+0xa14>
   17758:	ldr	r3, [r4]
   1775c:	ldr	r3, [r9, r3, lsl #2]
   17760:	add	r3, r3, #1
   17764:	str	r3, [r4, #20]
   17768:	ldr	sl, [r4, #20]
   1776c:	add	fp, sl, #1
   17770:	str	fp, [r4, #20]
   17774:	ldrb	r7, [sl]
   17778:	str	r7, [sp, #28]
   1777c:	mov	r1, r7
   17780:	mov	r0, r6
   17784:	bl	111c8 <strchr@plt>
   17788:	ldrb	r3, [sl, #1]
   1778c:	cmp	r3, #0
   17790:	ldreq	r3, [r4]
   17794:	addeq	r3, r3, #1
   17798:	streq	r3, [r4]
   1779c:	sub	r3, r7, #58	; 0x3a
   177a0:	uxtb	r3, r3
   177a4:	cmp	r0, #0
   177a8:	cmpne	r3, #1
   177ac:	bls	17858 <argp_error@@Base+0xa5c>
   177b0:	ldrb	r3, [r0]
   177b4:	cmp	r3, #87	; 0x57
   177b8:	beq	17890 <argp_error@@Base+0xa94>
   177bc:	ldrb	r3, [r0, #1]
   177c0:	cmp	r3, #58	; 0x3a
   177c4:	beq	1795c <argp_error@@Base+0xb60>
   177c8:	mov	r0, r7
   177cc:	b	1786c <argp_error@@Base+0xa70>
   177d0:	add	sl, sl, #2
   177d4:	str	sl, [r4, #20]
   177d8:	ldr	r3, [pc, #636]	; 17a5c <argp_error@@Base+0xc60>
   177dc:	str	r3, [sp, #16]
   177e0:	str	r8, [sp, #12]
   177e4:	str	r4, [sp, #8]
   177e8:	ldr	r3, [sp, #76]	; 0x4c
   177ec:	str	r3, [sp, #4]
   177f0:	ldr	r3, [sp, #72]	; 0x48
   177f4:	str	r3, [sp]
   177f8:	ldr	r3, [sp, #24]
   177fc:	mov	r2, r6
   17800:	mov	r1, r9
   17804:	mov	r0, r5
   17808:	bl	17010 <argp_error@@Base+0x214>
   1780c:	b	1786c <argp_error@@Base+0xa70>
   17810:	add	sl, sl, #1
   17814:	str	sl, [r4, #20]
   17818:	ldr	r3, [pc, #580]	; 17a64 <argp_error@@Base+0xc68>
   1781c:	str	r3, [sp, #16]
   17820:	str	r8, [sp, #12]
   17824:	str	r4, [sp, #8]
   17828:	ldr	r3, [sp, #76]	; 0x4c
   1782c:	str	r3, [sp, #4]
   17830:	ldr	r3, [sp, #72]	; 0x48
   17834:	str	r3, [sp]
   17838:	ldr	r3, [sp, #24]
   1783c:	mov	r2, r6
   17840:	mov	r1, r9
   17844:	mov	r0, r5
   17848:	bl	17010 <argp_error@@Base+0x214>
   1784c:	cmn	r0, #1
   17850:	bne	1786c <argp_error@@Base+0xa70>
   17854:	b	17758 <argp_error@@Base+0x95c>
   17858:	cmp	r8, #0
   1785c:	bne	17874 <argp_error@@Base+0xa78>
   17860:	ldr	r3, [sp, #28]
   17864:	str	r3, [r4, #8]
   17868:	mov	r0, #63	; 0x3f
   1786c:	add	sp, sp, #36	; 0x24
   17870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17874:	ldr	r3, [sp, #28]
   17878:	ldr	r2, [r9]
   1787c:	ldr	r1, [pc, #484]	; 17a68 <argp_error@@Base+0xc6c>
   17880:	ldr	r0, [pc, #484]	; 17a6c <argp_error@@Base+0xc70>
   17884:	ldr	r0, [r0]
   17888:	bl	111d4 <fprintf@plt>
   1788c:	b	17860 <argp_error@@Base+0xa64>
   17890:	ldrb	r3, [r0, #1]
   17894:	ldr	r2, [sp, #24]
   17898:	cmp	r3, #59	; 0x3b
   1789c:	movne	r3, #0
   178a0:	moveq	r3, #1
   178a4:	cmp	r2, #0
   178a8:	moveq	r3, #0
   178ac:	cmp	r3, #0
   178b0:	beq	177bc <argp_error@@Base+0x9c0>
   178b4:	ldrb	r3, [sl, #1]
   178b8:	cmp	r3, #0
   178bc:	strne	fp, [r4, #12]
   178c0:	bne	178d8 <argp_error@@Base+0xadc>
   178c4:	ldr	r3, [r4]
   178c8:	cmp	r5, r3
   178cc:	beq	1791c <argp_error@@Base+0xb20>
   178d0:	ldr	r3, [r9, r3, lsl #2]
   178d4:	str	r3, [r4, #12]
   178d8:	ldr	r3, [r4, #12]
   178dc:	str	r3, [r4, #20]
   178e0:	mov	r3, #0
   178e4:	str	r3, [r4, #12]
   178e8:	ldr	r2, [pc, #384]	; 17a70 <argp_error@@Base+0xc74>
   178ec:	str	r2, [sp, #16]
   178f0:	str	r8, [sp, #12]
   178f4:	str	r4, [sp, #8]
   178f8:	str	r3, [sp, #4]
   178fc:	ldr	r3, [sp, #72]	; 0x48
   17900:	str	r3, [sp]
   17904:	ldr	r3, [sp, #24]
   17908:	mov	r2, r6
   1790c:	mov	r1, r9
   17910:	mov	r0, r5
   17914:	bl	17010 <argp_error@@Base+0x214>
   17918:	b	1786c <argp_error@@Base+0xa70>
   1791c:	cmp	r8, #0
   17920:	bne	17940 <argp_error@@Base+0xb44>
   17924:	ldr	r3, [sp, #28]
   17928:	str	r3, [r4, #8]
   1792c:	ldrb	r0, [r6]
   17930:	cmp	r0, #58	; 0x3a
   17934:	moveq	r0, #58	; 0x3a
   17938:	movne	r0, #63	; 0x3f
   1793c:	b	1786c <argp_error@@Base+0xa70>
   17940:	ldr	r3, [sp, #28]
   17944:	ldr	r2, [r9]
   17948:	ldr	r1, [pc, #292]	; 17a74 <argp_error@@Base+0xc78>
   1794c:	ldr	r0, [pc, #280]	; 17a6c <argp_error@@Base+0xc70>
   17950:	ldr	r0, [r0]
   17954:	bl	111d4 <fprintf@plt>
   17958:	b	17924 <argp_error@@Base+0xb28>
   1795c:	ldrb	r3, [r0, #2]
   17960:	cmp	r3, #58	; 0x3a
   17964:	beq	17990 <argp_error@@Base+0xb94>
   17968:	ldrb	r3, [sl, #1]
   1796c:	cmp	r3, #0
   17970:	beq	179bc <argp_error@@Base+0xbc0>
   17974:	str	fp, [r4, #12]
   17978:	ldr	r3, [r4]
   1797c:	add	r3, r3, #1
   17980:	str	r3, [r4]
   17984:	mov	r3, #0
   17988:	str	r3, [r4, #20]
   1798c:	b	177c8 <argp_error@@Base+0x9cc>
   17990:	ldrb	r3, [sl, #1]
   17994:	cmp	r3, #0
   17998:	strne	fp, [r4, #12]
   1799c:	ldrne	r3, [r4]
   179a0:	addne	r3, r3, #1
   179a4:	strne	r3, [r4]
   179a8:	moveq	r3, #0
   179ac:	streq	r3, [r4, #12]
   179b0:	mov	r3, #0
   179b4:	str	r3, [r4, #20]
   179b8:	b	177c8 <argp_error@@Base+0x9cc>
   179bc:	ldr	r3, [r4]
   179c0:	cmp	r5, r3
   179c4:	beq	179dc <argp_error@@Base+0xbe0>
   179c8:	add	r2, r3, #1
   179cc:	str	r2, [r4]
   179d0:	ldr	r3, [r9, r3, lsl #2]
   179d4:	str	r3, [r4, #12]
   179d8:	b	17984 <argp_error@@Base+0xb88>
   179dc:	cmp	r8, #0
   179e0:	bne	17a00 <argp_error@@Base+0xc04>
   179e4:	ldr	r3, [sp, #28]
   179e8:	str	r3, [r4, #8]
   179ec:	ldrb	r7, [r6]
   179f0:	cmp	r7, #58	; 0x3a
   179f4:	moveq	r7, #58	; 0x3a
   179f8:	movne	r7, #63	; 0x3f
   179fc:	b	17984 <argp_error@@Base+0xb88>
   17a00:	ldr	r3, [sp, #28]
   17a04:	ldr	r2, [r9]
   17a08:	ldr	r1, [pc, #100]	; 17a74 <argp_error@@Base+0xc78>
   17a0c:	ldr	r0, [pc, #88]	; 17a6c <argp_error@@Base+0xc70>
   17a10:	ldr	r0, [r0]
   17a14:	bl	111d4 <fprintf@plt>
   17a18:	b	179e4 <argp_error@@Base+0xbe8>
   17a1c:	mvn	r0, #0
   17a20:	b	1786c <argp_error@@Base+0xa70>
   17a24:	mvn	r0, #0
   17a28:	b	1786c <argp_error@@Base+0xa70>
   17a2c:	ldrb	r3, [sl]
   17a30:	cmp	r3, #45	; 0x2d
   17a34:	beq	17710 <argp_error@@Base+0x914>
   17a38:	ldr	r3, [r4, #24]
   17a3c:	cmp	r3, #0
   17a40:	beq	17a24 <argp_error@@Base+0xc28>
   17a44:	add	r3, r7, #1
   17a48:	str	r3, [r4]
   17a4c:	ldr	r3, [r9, r7, lsl #2]
   17a50:	str	r3, [r4, #12]
   17a54:	mov	r0, #1
   17a58:	b	1786c <argp_error@@Base+0xa70>
   17a5c:	andeq	r8, r1, ip, lsl #29
   17a60:			; <UNDEFINED> instruction: 0x000197bc
   17a64:	andeq	r8, r1, r0, lsl #20
   17a68:	andeq	r9, r1, ip, asr #15
   17a6c:			; <UNDEFINED> instruction: 0x0002a3b0
   17a70:	andeq	r9, r1, r4, lsl r8
   17a74:	andeq	r9, r1, r8, ror #15
   17a78:	push	{r4, r5, lr}
   17a7c:	sub	sp, sp, #20
   17a80:	ldr	r4, [pc, #84]	; 17adc <argp_error@@Base+0xce0>
   17a84:	ldr	r5, [pc, #84]	; 17ae0 <argp_error@@Base+0xce4>
   17a88:	ldr	ip, [r5]
   17a8c:	str	ip, [r4]
   17a90:	ldr	ip, [r5, #4]
   17a94:	str	ip, [r4, #4]
   17a98:	ldr	ip, [sp, #40]	; 0x28
   17a9c:	str	ip, [sp, #12]
   17aa0:	str	r4, [sp, #8]
   17aa4:	ldr	ip, [sp, #36]	; 0x24
   17aa8:	str	ip, [sp, #4]
   17aac:	ldr	ip, [sp, #32]
   17ab0:	str	ip, [sp]
   17ab4:	bl	174fc <argp_error@@Base+0x700>
   17ab8:	ldr	r3, [r4]
   17abc:	str	r3, [r5]
   17ac0:	ldr	r2, [r4, #12]
   17ac4:	ldr	r3, [pc, #24]	; 17ae4 <argp_error@@Base+0xce8>
   17ac8:	str	r2, [r3]
   17acc:	ldr	r3, [r4, #8]
   17ad0:	str	r3, [r5, #8]
   17ad4:	add	sp, sp, #20
   17ad8:	pop	{r4, r5, pc}
   17adc:	strdeq	sl, [r2], -r0
   17ae0:	muleq	r2, r8, r3
   17ae4:	andeq	sl, r2, r0, lsr #8
   17ae8:	push	{lr}		; (str lr, [sp, #-4]!)
   17aec:	sub	sp, sp, #20
   17af0:	mov	r3, #1
   17af4:	str	r3, [sp, #8]
   17af8:	mov	r3, #0
   17afc:	str	r3, [sp, #4]
   17b00:	str	r3, [sp]
   17b04:	bl	17a78 <argp_error@@Base+0xc7c>
   17b08:	add	sp, sp, #20
   17b0c:	pop	{pc}		; (ldr pc, [sp], #4)
   17b10:	push	{r4, r5, r6, lr}
   17b14:	mov	r6, r0
   17b18:	mov	r5, r1
   17b1c:	subs	r4, r2, #0
   17b20:	beq	17b4c <argp_error@@Base+0xd50>
   17b24:	mov	r1, r4
   17b28:	mvn	r0, #0
   17b2c:	bl	182e8 <argp_error@@Base+0x14ec>
   17b30:	cmp	r0, r5
   17b34:	bcs	17b4c <argp_error@@Base+0xd50>
   17b38:	bl	111e0 <__errno_location@plt>
   17b3c:	mov	r3, #12
   17b40:	str	r3, [r0]
   17b44:	mov	r0, #0
   17b48:	pop	{r4, r5, r6, pc}
   17b4c:	mul	r1, r5, r4
   17b50:	mov	r0, r6
   17b54:	bl	13d2c <argp_parse@@Base+0x1894>
   17b58:	pop	{r4, r5, r6, pc}
   17b5c:	push	{r4, r5, r6, r7, r8, lr}
   17b60:	mov	r8, r0
   17b64:	mov	r7, r1
   17b68:	mov	r6, r2
   17b6c:	mov	r5, r3
   17b70:	mov	r0, #36	; 0x24
   17b74:	bl	13cfc <argp_parse@@Base+0x1864>
   17b78:	subs	r4, r0, #0
   17b7c:	beq	17bbc <argp_error@@Base+0xdc0>
   17b80:	str	r8, [r4]
   17b84:	str	r7, [r4, #4]
   17b88:	str	r6, [r4, #8]
   17b8c:	str	r5, [r4, #12]
   17b90:	mov	r3, #0
   17b94:	str	r3, [r4, #20]
   17b98:	str	r3, [r4, #16]
   17b9c:	mov	r0, #200	; 0xc8
   17ba0:	bl	13cfc <argp_parse@@Base+0x1864>
   17ba4:	str	r0, [r4, #24]
   17ba8:	cmp	r0, #0
   17bac:	strne	r0, [r4, #28]
   17bb0:	addne	r0, r0, #200	; 0xc8
   17bb4:	strne	r0, [r4, #32]
   17bb8:	beq	17bc4 <argp_error@@Base+0xdc8>
   17bbc:	mov	r0, r4
   17bc0:	pop	{r4, r5, r6, r7, r8, pc}
   17bc4:	mov	r0, r4
   17bc8:	bl	1308c <argp_parse@@Base+0xbf4>
   17bcc:	mov	r4, #0
   17bd0:	b	17bbc <argp_error@@Base+0xdc0>
   17bd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bd8:	sub	sp, sp, #20
   17bdc:	mov	r4, r0
   17be0:	ldr	r2, [r0, #24]
   17be4:	ldr	r3, [r0, #16]
   17be8:	add	r9, r2, r3
   17bec:	mov	sl, #32
   17bf0:	b	17c9c <argp_error@@Base+0xea0>
   17bf4:	add	r5, r5, #1
   17bf8:	cmp	r6, r5
   17bfc:	beq	17c2c <argp_error@@Base+0xe30>
   17c00:	ldr	r0, [r4]
   17c04:	ldr	r3, [r0, #20]
   17c08:	ldr	r2, [r0, #24]
   17c0c:	cmp	r3, r2
   17c10:	addcc	r2, r3, #1
   17c14:	strcc	r2, [r0, #20]
   17c18:	strbcc	sl, [r3]
   17c1c:	bcc	17bf4 <argp_error@@Base+0xdf8>
   17c20:	mov	r1, sl
   17c24:	bl	11240 <__overflow@plt>
   17c28:	b	17bf4 <argp_error@@Base+0xdf8>
   17c2c:	str	r6, [r4, #20]
   17c30:	ldr	fp, [r4, #28]
   17c34:	str	fp, [sp, #8]
   17c38:	str	r9, [sp, #4]
   17c3c:	sub	r3, fp, r9
   17c40:	str	r3, [sp]
   17c44:	mov	r2, r3
   17c48:	mov	r1, #10
   17c4c:	mov	r0, r9
   17c50:	bl	11228 <memchr@plt>
   17c54:	mov	r7, r0
   17c58:	ldr	r3, [r4, #20]
   17c5c:	cmp	r3, #0
   17c60:	movlt	r3, #0
   17c64:	strlt	r3, [r4, #20]
   17c68:	cmp	r7, #0
   17c6c:	beq	17d0c <argp_error@@Base+0xf10>
   17c70:	ldr	r0, [r4, #20]
   17c74:	mov	r5, r7
   17c78:	ldr	r8, [r4, #8]
   17c7c:	ldr	r3, [sp, #4]
   17c80:	sub	r3, r7, r3
   17c84:	add	r3, r3, r0
   17c88:	cmp	r3, r8
   17c8c:	bge	17d5c <argp_error@@Base+0xf60>
   17c90:	mov	r3, #0
   17c94:	str	r3, [r4, #20]
   17c98:	add	r9, r7, #1
   17c9c:	ldr	fp, [r4, #28]
   17ca0:	cmp	r9, fp
   17ca4:	bcs	17d44 <argp_error@@Base+0xf48>
   17ca8:	ldr	r3, [r4, #20]
   17cac:	cmp	r3, #0
   17cb0:	bne	17c30 <argp_error@@Base+0xe34>
   17cb4:	ldr	r6, [r4, #4]
   17cb8:	cmp	r6, #0
   17cbc:	beq	18108 <argp_error@@Base+0x130c>
   17cc0:	add	r3, fp, r6
   17cc4:	ldr	r2, [r4, #32]
   17cc8:	cmp	r2, r3
   17ccc:	movls	r5, #0
   17cd0:	bls	17c00 <argp_error@@Base+0xe04>
   17cd4:	add	r5, r9, r6
   17cd8:	sub	r2, fp, r9
   17cdc:	mov	r1, r9
   17ce0:	mov	r0, r5
   17ce4:	bl	1106c <memmove@plt>
   17ce8:	ldr	r3, [r4, #28]
   17cec:	add	r3, r3, r6
   17cf0:	str	r3, [r4, #28]
   17cf4:	mov	r2, r6
   17cf8:	mov	r1, sl
   17cfc:	mov	r0, r9
   17d00:	bl	11204 <memset@plt>
   17d04:	mov	r9, r5
   17d08:	b	17c2c <argp_error@@Base+0xe30>
   17d0c:	ldr	r3, [r4, #20]
   17d10:	ldr	r2, [sp]
   17d14:	add	r3, r2, r3
   17d18:	ldr	r6, [r4, #8]
   17d1c:	cmp	r3, r6
   17d20:	bcc	17d40 <argp_error@@Base+0xf44>
   17d24:	sub	r6, r6, #1
   17d28:	ldr	r3, [r4, #12]
   17d2c:	str	r3, [sp, #12]
   17d30:	cmp	r3, #0
   17d34:	blt	17e50 <argp_error@@Base+0x1054>
   17d38:	mov	r7, fp
   17d3c:	b	17d70 <argp_error@@Base+0xf74>
   17d40:	str	r3, [r4, #20]
   17d44:	ldr	r3, [r4, #28]
   17d48:	ldr	r2, [r4, #24]
   17d4c:	sub	r3, r3, r2
   17d50:	str	r3, [r4, #16]
   17d54:	add	sp, sp, #20
   17d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d5c:	sub	r6, r8, #1
   17d60:	ldr	r3, [r4, #12]
   17d64:	str	r3, [sp, #12]
   17d68:	cmp	r3, #0
   17d6c:	blt	17e04 <argp_error@@Base+0x1008>
   17d70:	ldr	r5, [r4, #20]
   17d74:	rsb	r5, r5, #1
   17d78:	add	r5, r5, r6
   17d7c:	adds	r5, r9, r5
   17d80:	bcs	18130 <argp_error@@Base+0x1334>
   17d84:	bl	1118c <__ctype_b_loc@plt>
   17d88:	ldr	r0, [r0]
   17d8c:	mov	r3, r5
   17d90:	mov	r1, r3
   17d94:	sub	r3, r3, #1
   17d98:	ldrb	r2, [r1]
   17d9c:	lsl	r2, r2, #1
   17da0:	ldrh	r2, [r0, r2]
   17da4:	tst	r2, #1
   17da8:	bne	17e70 <argp_error@@Base+0x1074>
   17dac:	mov	r1, r3
   17db0:	cmp	r3, r9
   17db4:	bcs	17d90 <argp_error@@Base+0xf94>
   17db8:	add	r6, r1, #1
   17dbc:	cmp	r6, r9
   17dc0:	bhi	17eac <argp_error@@Base+0x10b0>
   17dc4:	cmp	r5, r7
   17dc8:	bcs	17f5c <argp_error@@Base+0x1160>
   17dcc:	add	r6, r5, #1
   17dd0:	mov	r8, r7
   17dd4:	mov	r5, r6
   17dd8:	cmp	r8, r6
   17ddc:	beq	17f5c <argp_error@@Base+0x1160>
   17de0:	bl	1118c <__ctype_b_loc@plt>
   17de4:	add	r6, r6, #1
   17de8:	ldrb	r3, [r5]
   17dec:	ldr	r2, [r0]
   17df0:	lsl	r3, r3, #1
   17df4:	ldrh	r3, [r2, r3]
   17df8:	tst	r3, #1
   17dfc:	beq	17dd4 <argp_error@@Base+0xfd8>
   17e00:	b	17f70 <argp_error@@Base+0x1174>
   17e04:	cmp	fp, r7
   17e08:	bls	17e50 <argp_error@@Base+0x1054>
   17e0c:	sub	r0, r6, r0
   17e10:	ldr	r3, [sp, #8]
   17e14:	sub	r2, r3, r7
   17e18:	mov	r1, r7
   17e1c:	add	r0, r9, r0
   17e20:	bl	1106c <memmove@plt>
   17e24:	ldr	r3, [r4, #20]
   17e28:	sub	r6, r6, r3
   17e2c:	add	r6, r9, r6
   17e30:	sub	r5, r6, r7
   17e34:	ldr	r3, [r4, #28]
   17e38:	sub	r5, r3, r5
   17e3c:	str	r5, [r4, #28]
   17e40:	mov	r3, #0
   17e44:	str	r3, [r4, #20]
   17e48:	add	r9, r9, r8
   17e4c:	b	17c9c <argp_error@@Base+0xea0>
   17e50:	ldr	r3, [r4, #20]
   17e54:	ldr	r2, [sp]
   17e58:	add	r3, r2, r3
   17e5c:	str	r3, [r4, #20]
   17e60:	sub	r3, r6, r3
   17e64:	add	r3, fp, r3
   17e68:	str	r3, [r4, #28]
   17e6c:	b	17d44 <argp_error@@Base+0xf48>
   17e70:	add	r6, r1, #1
   17e74:	cmp	r6, r9
   17e78:	bls	17dc4 <argp_error@@Base+0xfc8>
   17e7c:	cmp	r1, r9
   17e80:	bcc	17eac <argp_error@@Base+0x10b0>
   17e84:	sub	ip, r9, #1
   17e88:	mov	r1, r3
   17e8c:	cmp	ip, r3
   17e90:	beq	17eac <argp_error@@Base+0x10b0>
   17e94:	sub	r3, r3, #1
   17e98:	ldrb	r2, [r1]
   17e9c:	lsl	r2, r2, #1
   17ea0:	ldrh	r2, [r0, r2]
   17ea4:	tst	r2, #1
   17ea8:	bne	17e88 <argp_error@@Base+0x108c>
   17eac:	add	r5, r1, #1
   17eb0:	ldr	r3, [sp]
   17eb4:	add	r3, r3, #1
   17eb8:	add	r3, r9, r3
   17ebc:	cmp	r6, r3
   17ec0:	beq	17f94 <argp_error@@Base+0x1198>
   17ec4:	add	r3, r5, #1
   17ec8:	sub	r3, r6, r3
   17ecc:	ldr	r2, [sp, #12]
   17ed0:	cmp	r3, r2
   17ed4:	bge	17fac <argp_error@@Base+0x11b0>
   17ed8:	cmp	r6, fp
   17edc:	bcs	17fac <argp_error@@Base+0x11b0>
   17ee0:	ldr	r3, [r4, #32]
   17ee4:	ldr	r2, [sp, #8]
   17ee8:	sub	r3, r3, r2
   17eec:	ldr	r2, [sp, #12]
   17ef0:	add	r2, r2, #1
   17ef4:	cmp	r3, r2
   17ef8:	bgt	17ff4 <argp_error@@Base+0x11f8>
   17efc:	ldr	r0, [r4, #24]
   17f00:	cmp	r5, r0
   17f04:	bls	17f18 <argp_error@@Base+0x111c>
   17f08:	ldr	r3, [r4]
   17f0c:	sub	r2, r5, r0
   17f10:	mov	r1, #1
   17f14:	bl	110c0 <fwrite_unlocked@plt>
   17f18:	ldr	r0, [r4]
   17f1c:	ldr	r3, [r0, #20]
   17f20:	ldr	r2, [r0, #24]
   17f24:	cmp	r3, r2
   17f28:	addcc	r2, r3, #1
   17f2c:	strcc	r2, [r0, #20]
   17f30:	movcc	r2, #10
   17f34:	strbcc	r2, [r3]
   17f38:	bcs	18040 <argp_error@@Base+0x1244>
   17f3c:	ldr	r7, [r4, #24]
   17f40:	ldr	r3, [sp, #4]
   17f44:	sub	r3, r3, r7
   17f48:	ldr	r2, [sp]
   17f4c:	add	r3, r2, r3
   17f50:	str	r3, [sp]
   17f54:	mov	r9, r7
   17f58:	b	17fbc <argp_error@@Base+0x11c0>
   17f5c:	cmp	r5, r7
   17f60:	moveq	r3, #0
   17f64:	streq	r3, [r4, #20]
   17f68:	addeq	r9, r7, #1
   17f6c:	beq	17c9c <argp_error@@Base+0xea0>
   17f70:	bl	1118c <__ctype_b_loc@plt>
   17f74:	ldr	r2, [r0]
   17f78:	mov	r6, r5
   17f7c:	ldrb	r3, [r6, #1]!
   17f80:	lsl	r3, r3, #1
   17f84:	ldrh	r3, [r2, r3]
   17f88:	tst	r3, #1
   17f8c:	bne	17f7c <argp_error@@Base+0x1180>
   17f90:	b	17eb0 <argp_error@@Base+0x10b4>
   17f94:	ldr	r3, [r4, #32]
   17f98:	sub	r3, r3, r5
   17f9c:	ldr	r2, [sp, #12]
   17fa0:	add	r2, r2, #1
   17fa4:	cmp	r3, r2
   17fa8:	blt	17ed8 <argp_error@@Base+0x10dc>
   17fac:	mov	r3, #10
   17fb0:	strb	r3, [r5]
   17fb4:	mov	r7, r9
   17fb8:	add	r9, r5, #1
   17fbc:	mov	r8, r6
   17fc0:	ldr	r3, [r4, #12]
   17fc4:	sub	r2, r6, r9
   17fc8:	cmp	r2, r3
   17fcc:	bge	1805c <argp_error@@Base+0x1260>
   17fd0:	ldr	r2, [sp]
   17fd4:	add	r2, r2, #1
   17fd8:	add	r2, r7, r2
   17fdc:	cmp	r6, r2
   17fe0:	beq	1804c <argp_error@@Base+0x1250>
   17fe4:	cmp	r3, #0
   17fe8:	movgt	r5, #0
   17fec:	bgt	180c0 <argp_error@@Base+0x12c4>
   17ff0:	b	18080 <argp_error@@Base+0x1284>
   17ff4:	ldr	r3, [sp, #8]
   17ff8:	sub	r7, r3, r6
   17ffc:	mov	r0, r2
   18000:	mov	r2, r7
   18004:	mov	r1, r6
   18008:	add	r0, r5, r0
   1800c:	bl	1106c <memmove@plt>
   18010:	ldr	r6, [r4, #12]
   18014:	add	r6, r6, #1
   18018:	add	r6, r5, r6
   1801c:	add	r7, r6, r7
   18020:	ldr	r3, [sp, #4]
   18024:	sub	r3, r7, r3
   18028:	str	r3, [sp]
   1802c:	mov	r3, #10
   18030:	strb	r3, [r5]
   18034:	mov	r7, r9
   18038:	add	r9, r5, #1
   1803c:	b	17fbc <argp_error@@Base+0x11c0>
   18040:	mov	r1, #10
   18044:	bl	11240 <__overflow@plt>
   18048:	b	17f3c <argp_error@@Base+0x1140>
   1804c:	ldr	r2, [r4, #32]
   18050:	sub	r2, r2, r6
   18054:	cmp	r3, r2
   18058:	bgt	17fe4 <argp_error@@Base+0x11e8>
   1805c:	cmp	r3, #0
   18060:	ble	18080 <argp_error@@Base+0x1284>
   18064:	mov	r3, r9
   18068:	strb	sl, [r3], #1
   1806c:	sub	r1, r3, r9
   18070:	ldr	r2, [r4, #12]
   18074:	cmp	r1, r2
   18078:	blt	18068 <argp_error@@Base+0x126c>
   1807c:	mov	r9, r3
   18080:	cmp	r9, r6
   18084:	bcc	180ec <argp_error@@Base+0x12f0>
   18088:	sub	r7, r8, r7
   1808c:	ldr	r3, [sp]
   18090:	sub	r7, r3, r7
   18094:	add	r7, r9, r7
   18098:	str	r7, [r4, #28]
   1809c:	ldr	r3, [r4, #12]
   180a0:	cmp	r3, #0
   180a4:	mvneq	r3, #0
   180a8:	str	r3, [r4, #20]
   180ac:	b	17c9c <argp_error@@Base+0xea0>
   180b0:	add	r5, r5, #1
   180b4:	ldr	r3, [r4, #12]
   180b8:	cmp	r3, r5
   180bc:	ble	18080 <argp_error@@Base+0x1284>
   180c0:	ldr	r0, [r4]
   180c4:	ldr	r3, [r0, #20]
   180c8:	ldr	r2, [r0, #24]
   180cc:	cmp	r3, r2
   180d0:	addcc	r2, r3, #1
   180d4:	strcc	r2, [r0, #20]
   180d8:	strbcc	sl, [r3]
   180dc:	bcc	180b0 <argp_error@@Base+0x12b4>
   180e0:	mov	r1, sl
   180e4:	bl	11240 <__overflow@plt>
   180e8:	b	180b0 <argp_error@@Base+0x12b4>
   180ec:	ldr	r3, [sp]
   180f0:	add	r2, r7, r3
   180f4:	sub	r2, r2, r8
   180f8:	mov	r1, r6
   180fc:	mov	r0, r9
   18100:	bl	1106c <memmove@plt>
   18104:	b	18088 <argp_error@@Base+0x128c>
   18108:	str	fp, [sp, #8]
   1810c:	str	r9, [sp, #4]
   18110:	sub	r3, fp, r9
   18114:	str	r3, [sp]
   18118:	mov	r2, r3
   1811c:	mov	r1, #10
   18120:	mov	r0, r9
   18124:	bl	11228 <memchr@plt>
   18128:	mov	r7, r0
   1812c:	b	17c68 <argp_error@@Base+0xe6c>
   18130:	mov	r1, r5
   18134:	b	17db8 <argp_error@@Base+0xfbc>
   18138:	push	{r4, lr}
   1813c:	mov	r4, r0
   18140:	bl	17bd4 <argp_error@@Base+0xdd8>
   18144:	ldr	r2, [r4, #28]
   18148:	ldr	r0, [r4, #24]
   1814c:	cmp	r2, r0
   18150:	bls	18164 <argp_error@@Base+0x1368>
   18154:	ldr	r3, [r4]
   18158:	sub	r2, r2, r0
   1815c:	mov	r1, #1
   18160:	bl	110c0 <fwrite_unlocked@plt>
   18164:	ldr	r0, [r4, #24]
   18168:	bl	1308c <argp_parse@@Base+0xbf4>
   1816c:	mov	r0, r4
   18170:	bl	1308c <argp_parse@@Base+0xbf4>
   18174:	pop	{r4, pc}
   18178:	ldr	r3, [r0, #32]
   1817c:	ldr	r2, [r0, #28]
   18180:	sub	r3, r3, r2
   18184:	cmp	r3, r1
   18188:	bcc	18194 <argp_error@@Base+0x1398>
   1818c:	mov	r0, #1
   18190:	bx	lr
   18194:	push	{r4, r5, r6, lr}
   18198:	mov	r5, r1
   1819c:	mov	r4, r0
   181a0:	bl	17bd4 <argp_error@@Base+0xdd8>
   181a4:	ldr	r0, [r4, #24]
   181a8:	ldr	r2, [r4, #28]
   181ac:	ldr	r3, [r4]
   181b0:	sub	r2, r2, r0
   181b4:	mov	r1, #1
   181b8:	bl	110c0 <fwrite_unlocked@plt>
   181bc:	ldr	r2, [r4, #28]
   181c0:	ldr	r3, [r4, #24]
   181c4:	sub	r1, r2, r3
   181c8:	cmp	r0, r1
   181cc:	bne	18210 <argp_error@@Base+0x1414>
   181d0:	str	r3, [r4, #28]
   181d4:	mov	r2, #0
   181d8:	str	r2, [r4, #16]
   181dc:	ldr	r1, [r4, #32]
   181e0:	sub	r1, r1, r3
   181e4:	cmp	r5, r1
   181e8:	bls	18208 <argp_error@@Base+0x140c>
   181ec:	adds	r5, r5, r1
   181f0:	bcc	1823c <argp_error@@Base+0x1440>
   181f4:	bl	111e0 <__errno_location@plt>
   181f8:	mov	r3, #12
   181fc:	str	r3, [r0]
   18200:	mov	r0, #0
   18204:	pop	{r4, r5, r6, pc}
   18208:	mov	r0, #1
   1820c:	pop	{r4, r5, r6, pc}
   18210:	sub	r2, r2, r0
   18214:	str	r2, [r4, #28]
   18218:	ldr	r1, [r4, #16]
   1821c:	sub	r1, r1, r0
   18220:	str	r1, [r4, #16]
   18224:	sub	r2, r2, r3
   18228:	add	r1, r3, r0
   1822c:	mov	r0, r3
   18230:	bl	1106c <memmove@plt>
   18234:	mov	r0, #0
   18238:	pop	{r4, r5, r6, pc}
   1823c:	mov	r1, r5
   18240:	mov	r0, r3
   18244:	bl	13d2c <argp_parse@@Base+0x1894>
   18248:	cmp	r0, #0
   1824c:	beq	181f4 <argp_error@@Base+0x13f8>
   18250:	str	r0, [r4, #24]
   18254:	add	r5, r0, r5
   18258:	str	r5, [r4, #32]
   1825c:	str	r0, [r4, #28]
   18260:	mov	r0, #1
   18264:	pop	{r4, r5, r6, pc}
   18268:	push	{r1, r2, r3}
   1826c:	push	{r4, r5, r6, r7, lr}
   18270:	sub	sp, sp, #8
   18274:	mov	r5, r0
   18278:	ldr	r7, [sp, #28]
   1827c:	mov	r1, #150	; 0x96
   18280:	add	r6, sp, #32
   18284:	mov	r0, r5
   18288:	bl	18178 <argp_error@@Base+0x137c>
   1828c:	cmp	r0, #0
   18290:	beq	182c4 <argp_error@@Base+0x14c8>
   18294:	str	r6, [sp, #4]
   18298:	ldr	r0, [r5, #28]
   1829c:	ldr	r4, [r5, #32]
   182a0:	sub	r4, r4, r0
   182a4:	mov	r3, r6
   182a8:	mov	r2, r7
   182ac:	mov	r1, r4
   182b0:	bl	1127c <vsnprintf@plt>
   182b4:	cmp	r4, r0
   182b8:	bhi	182cc <argp_error@@Base+0x14d0>
   182bc:	add	r1, r0, #1
   182c0:	b	18284 <argp_error@@Base+0x1488>
   182c4:	mvn	r0, #0
   182c8:	b	182d8 <argp_error@@Base+0x14dc>
   182cc:	ldr	r3, [r5, #28]
   182d0:	add	r3, r3, r0
   182d4:	str	r3, [r5, #28]
   182d8:	add	sp, sp, #8
   182dc:	pop	{r4, r5, r6, r7, lr}
   182e0:	add	sp, sp, #12
   182e4:	bx	lr
   182e8:	subs	r2, r1, #1
   182ec:	bxeq	lr
   182f0:	bcc	184c8 <argp_error@@Base+0x16cc>
   182f4:	cmp	r0, r1
   182f8:	bls	184ac <argp_error@@Base+0x16b0>
   182fc:	tst	r1, r2
   18300:	beq	184b8 <argp_error@@Base+0x16bc>
   18304:	clz	r3, r0
   18308:	clz	r2, r1
   1830c:	sub	r3, r2, r3
   18310:	rsbs	r3, r3, #31
   18314:	addne	r3, r3, r3, lsl #1
   18318:	mov	r2, #0
   1831c:	addne	pc, pc, r3, lsl #2
   18320:	nop			; (mov r0, r0)
   18324:	cmp	r0, r1, lsl #31
   18328:	adc	r2, r2, r2
   1832c:	subcs	r0, r0, r1, lsl #31
   18330:	cmp	r0, r1, lsl #30
   18334:	adc	r2, r2, r2
   18338:	subcs	r0, r0, r1, lsl #30
   1833c:	cmp	r0, r1, lsl #29
   18340:	adc	r2, r2, r2
   18344:	subcs	r0, r0, r1, lsl #29
   18348:	cmp	r0, r1, lsl #28
   1834c:	adc	r2, r2, r2
   18350:	subcs	r0, r0, r1, lsl #28
   18354:	cmp	r0, r1, lsl #27
   18358:	adc	r2, r2, r2
   1835c:	subcs	r0, r0, r1, lsl #27
   18360:	cmp	r0, r1, lsl #26
   18364:	adc	r2, r2, r2
   18368:	subcs	r0, r0, r1, lsl #26
   1836c:	cmp	r0, r1, lsl #25
   18370:	adc	r2, r2, r2
   18374:	subcs	r0, r0, r1, lsl #25
   18378:	cmp	r0, r1, lsl #24
   1837c:	adc	r2, r2, r2
   18380:	subcs	r0, r0, r1, lsl #24
   18384:	cmp	r0, r1, lsl #23
   18388:	adc	r2, r2, r2
   1838c:	subcs	r0, r0, r1, lsl #23
   18390:	cmp	r0, r1, lsl #22
   18394:	adc	r2, r2, r2
   18398:	subcs	r0, r0, r1, lsl #22
   1839c:	cmp	r0, r1, lsl #21
   183a0:	adc	r2, r2, r2
   183a4:	subcs	r0, r0, r1, lsl #21
   183a8:	cmp	r0, r1, lsl #20
   183ac:	adc	r2, r2, r2
   183b0:	subcs	r0, r0, r1, lsl #20
   183b4:	cmp	r0, r1, lsl #19
   183b8:	adc	r2, r2, r2
   183bc:	subcs	r0, r0, r1, lsl #19
   183c0:	cmp	r0, r1, lsl #18
   183c4:	adc	r2, r2, r2
   183c8:	subcs	r0, r0, r1, lsl #18
   183cc:	cmp	r0, r1, lsl #17
   183d0:	adc	r2, r2, r2
   183d4:	subcs	r0, r0, r1, lsl #17
   183d8:	cmp	r0, r1, lsl #16
   183dc:	adc	r2, r2, r2
   183e0:	subcs	r0, r0, r1, lsl #16
   183e4:	cmp	r0, r1, lsl #15
   183e8:	adc	r2, r2, r2
   183ec:	subcs	r0, r0, r1, lsl #15
   183f0:	cmp	r0, r1, lsl #14
   183f4:	adc	r2, r2, r2
   183f8:	subcs	r0, r0, r1, lsl #14
   183fc:	cmp	r0, r1, lsl #13
   18400:	adc	r2, r2, r2
   18404:	subcs	r0, r0, r1, lsl #13
   18408:	cmp	r0, r1, lsl #12
   1840c:	adc	r2, r2, r2
   18410:	subcs	r0, r0, r1, lsl #12
   18414:	cmp	r0, r1, lsl #11
   18418:	adc	r2, r2, r2
   1841c:	subcs	r0, r0, r1, lsl #11
   18420:	cmp	r0, r1, lsl #10
   18424:	adc	r2, r2, r2
   18428:	subcs	r0, r0, r1, lsl #10
   1842c:	cmp	r0, r1, lsl #9
   18430:	adc	r2, r2, r2
   18434:	subcs	r0, r0, r1, lsl #9
   18438:	cmp	r0, r1, lsl #8
   1843c:	adc	r2, r2, r2
   18440:	subcs	r0, r0, r1, lsl #8
   18444:	cmp	r0, r1, lsl #7
   18448:	adc	r2, r2, r2
   1844c:	subcs	r0, r0, r1, lsl #7
   18450:	cmp	r0, r1, lsl #6
   18454:	adc	r2, r2, r2
   18458:	subcs	r0, r0, r1, lsl #6
   1845c:	cmp	r0, r1, lsl #5
   18460:	adc	r2, r2, r2
   18464:	subcs	r0, r0, r1, lsl #5
   18468:	cmp	r0, r1, lsl #4
   1846c:	adc	r2, r2, r2
   18470:	subcs	r0, r0, r1, lsl #4
   18474:	cmp	r0, r1, lsl #3
   18478:	adc	r2, r2, r2
   1847c:	subcs	r0, r0, r1, lsl #3
   18480:	cmp	r0, r1, lsl #2
   18484:	adc	r2, r2, r2
   18488:	subcs	r0, r0, r1, lsl #2
   1848c:	cmp	r0, r1, lsl #1
   18490:	adc	r2, r2, r2
   18494:	subcs	r0, r0, r1, lsl #1
   18498:	cmp	r0, r1
   1849c:	adc	r2, r2, r2
   184a0:	subcs	r0, r0, r1
   184a4:	mov	r0, r2
   184a8:	bx	lr
   184ac:	moveq	r0, #1
   184b0:	movne	r0, #0
   184b4:	bx	lr
   184b8:	clz	r2, r1
   184bc:	rsb	r2, r2, #31
   184c0:	lsr	r0, r0, r2
   184c4:	bx	lr
   184c8:	cmp	r0, #0
   184cc:	mvnne	r0, #0
   184d0:	b	18770 <argp_error@@Base+0x1974>
   184d4:	cmp	r1, #0
   184d8:	beq	184c8 <argp_error@@Base+0x16cc>
   184dc:	push	{r0, r1, lr}
   184e0:	bl	182e8 <argp_error@@Base+0x14ec>
   184e4:	pop	{r1, r2, lr}
   184e8:	mul	r3, r2, r0
   184ec:	sub	r1, r1, r3
   184f0:	bx	lr
   184f4:	cmp	r1, #0
   184f8:	beq	18704 <argp_error@@Base+0x1908>
   184fc:	eor	ip, r0, r1
   18500:	rsbmi	r1, r1, #0
   18504:	subs	r2, r1, #1
   18508:	beq	186d0 <argp_error@@Base+0x18d4>
   1850c:	movs	r3, r0
   18510:	rsbmi	r3, r0, #0
   18514:	cmp	r3, r1
   18518:	bls	186dc <argp_error@@Base+0x18e0>
   1851c:	tst	r1, r2
   18520:	beq	186ec <argp_error@@Base+0x18f0>
   18524:	clz	r2, r3
   18528:	clz	r0, r1
   1852c:	sub	r2, r0, r2
   18530:	rsbs	r2, r2, #31
   18534:	addne	r2, r2, r2, lsl #1
   18538:	mov	r0, #0
   1853c:	addne	pc, pc, r2, lsl #2
   18540:	nop			; (mov r0, r0)
   18544:	cmp	r3, r1, lsl #31
   18548:	adc	r0, r0, r0
   1854c:	subcs	r3, r3, r1, lsl #31
   18550:	cmp	r3, r1, lsl #30
   18554:	adc	r0, r0, r0
   18558:	subcs	r3, r3, r1, lsl #30
   1855c:	cmp	r3, r1, lsl #29
   18560:	adc	r0, r0, r0
   18564:	subcs	r3, r3, r1, lsl #29
   18568:	cmp	r3, r1, lsl #28
   1856c:	adc	r0, r0, r0
   18570:	subcs	r3, r3, r1, lsl #28
   18574:	cmp	r3, r1, lsl #27
   18578:	adc	r0, r0, r0
   1857c:	subcs	r3, r3, r1, lsl #27
   18580:	cmp	r3, r1, lsl #26
   18584:	adc	r0, r0, r0
   18588:	subcs	r3, r3, r1, lsl #26
   1858c:	cmp	r3, r1, lsl #25
   18590:	adc	r0, r0, r0
   18594:	subcs	r3, r3, r1, lsl #25
   18598:	cmp	r3, r1, lsl #24
   1859c:	adc	r0, r0, r0
   185a0:	subcs	r3, r3, r1, lsl #24
   185a4:	cmp	r3, r1, lsl #23
   185a8:	adc	r0, r0, r0
   185ac:	subcs	r3, r3, r1, lsl #23
   185b0:	cmp	r3, r1, lsl #22
   185b4:	adc	r0, r0, r0
   185b8:	subcs	r3, r3, r1, lsl #22
   185bc:	cmp	r3, r1, lsl #21
   185c0:	adc	r0, r0, r0
   185c4:	subcs	r3, r3, r1, lsl #21
   185c8:	cmp	r3, r1, lsl #20
   185cc:	adc	r0, r0, r0
   185d0:	subcs	r3, r3, r1, lsl #20
   185d4:	cmp	r3, r1, lsl #19
   185d8:	adc	r0, r0, r0
   185dc:	subcs	r3, r3, r1, lsl #19
   185e0:	cmp	r3, r1, lsl #18
   185e4:	adc	r0, r0, r0
   185e8:	subcs	r3, r3, r1, lsl #18
   185ec:	cmp	r3, r1, lsl #17
   185f0:	adc	r0, r0, r0
   185f4:	subcs	r3, r3, r1, lsl #17
   185f8:	cmp	r3, r1, lsl #16
   185fc:	adc	r0, r0, r0
   18600:	subcs	r3, r3, r1, lsl #16
   18604:	cmp	r3, r1, lsl #15
   18608:	adc	r0, r0, r0
   1860c:	subcs	r3, r3, r1, lsl #15
   18610:	cmp	r3, r1, lsl #14
   18614:	adc	r0, r0, r0
   18618:	subcs	r3, r3, r1, lsl #14
   1861c:	cmp	r3, r1, lsl #13
   18620:	adc	r0, r0, r0
   18624:	subcs	r3, r3, r1, lsl #13
   18628:	cmp	r3, r1, lsl #12
   1862c:	adc	r0, r0, r0
   18630:	subcs	r3, r3, r1, lsl #12
   18634:	cmp	r3, r1, lsl #11
   18638:	adc	r0, r0, r0
   1863c:	subcs	r3, r3, r1, lsl #11
   18640:	cmp	r3, r1, lsl #10
   18644:	adc	r0, r0, r0
   18648:	subcs	r3, r3, r1, lsl #10
   1864c:	cmp	r3, r1, lsl #9
   18650:	adc	r0, r0, r0
   18654:	subcs	r3, r3, r1, lsl #9
   18658:	cmp	r3, r1, lsl #8
   1865c:	adc	r0, r0, r0
   18660:	subcs	r3, r3, r1, lsl #8
   18664:	cmp	r3, r1, lsl #7
   18668:	adc	r0, r0, r0
   1866c:	subcs	r3, r3, r1, lsl #7
   18670:	cmp	r3, r1, lsl #6
   18674:	adc	r0, r0, r0
   18678:	subcs	r3, r3, r1, lsl #6
   1867c:	cmp	r3, r1, lsl #5
   18680:	adc	r0, r0, r0
   18684:	subcs	r3, r3, r1, lsl #5
   18688:	cmp	r3, r1, lsl #4
   1868c:	adc	r0, r0, r0
   18690:	subcs	r3, r3, r1, lsl #4
   18694:	cmp	r3, r1, lsl #3
   18698:	adc	r0, r0, r0
   1869c:	subcs	r3, r3, r1, lsl #3
   186a0:	cmp	r3, r1, lsl #2
   186a4:	adc	r0, r0, r0
   186a8:	subcs	r3, r3, r1, lsl #2
   186ac:	cmp	r3, r1, lsl #1
   186b0:	adc	r0, r0, r0
   186b4:	subcs	r3, r3, r1, lsl #1
   186b8:	cmp	r3, r1
   186bc:	adc	r0, r0, r0
   186c0:	subcs	r3, r3, r1
   186c4:	cmp	ip, #0
   186c8:	rsbmi	r0, r0, #0
   186cc:	bx	lr
   186d0:	teq	ip, r0
   186d4:	rsbmi	r0, r0, #0
   186d8:	bx	lr
   186dc:	movcc	r0, #0
   186e0:	asreq	r0, ip, #31
   186e4:	orreq	r0, r0, #1
   186e8:	bx	lr
   186ec:	clz	r2, r1
   186f0:	rsb	r2, r2, #31
   186f4:	cmp	ip, #0
   186f8:	lsr	r0, r3, r2
   186fc:	rsbmi	r0, r0, #0
   18700:	bx	lr
   18704:	cmp	r0, #0
   18708:	mvngt	r0, #-2147483648	; 0x80000000
   1870c:	movlt	r0, #-2147483648	; 0x80000000
   18710:	b	18770 <argp_error@@Base+0x1974>
   18714:	cmp	r1, #0
   18718:	beq	18704 <argp_error@@Base+0x1908>
   1871c:	push	{r0, r1, lr}
   18720:	bl	184fc <argp_error@@Base+0x1700>
   18724:	pop	{r1, r2, lr}
   18728:	mul	r3, r2, r0
   1872c:	sub	r1, r1, r3
   18730:	bx	lr
   18734:	cmp	r3, #0
   18738:	cmpeq	r2, #0
   1873c:	bne	18754 <argp_error@@Base+0x1958>
   18740:	cmp	r1, #0
   18744:	cmpeq	r0, #0
   18748:	mvnne	r1, #0
   1874c:	mvnne	r0, #0
   18750:	b	18770 <argp_error@@Base+0x1974>
   18754:	sub	sp, sp, #8
   18758:	push	{sp, lr}
   1875c:	bl	18780 <argp_error@@Base+0x1984>
   18760:	ldr	lr, [sp, #4]
   18764:	add	sp, sp, #8
   18768:	pop	{r2, r3}
   1876c:	bx	lr
   18770:	push	{r1, lr}
   18774:	mov	r0, #8
   18778:	bl	11018 <raise@plt>
   1877c:	pop	{r1, pc}
   18780:	cmp	r1, r3
   18784:	push	{r4, r5, r6, r7, r8, r9, lr}
   18788:	cmpeq	r0, r2
   1878c:	mov	r4, r0
   18790:	mov	r5, r1
   18794:	ldr	r9, [sp, #28]
   18798:	movcc	r0, #0
   1879c:	movcc	r1, #0
   187a0:	bcc	18898 <argp_error@@Base+0x1a9c>
   187a4:	cmp	r3, #0
   187a8:	clzeq	ip, r2
   187ac:	clzne	ip, r3
   187b0:	addeq	ip, ip, #32
   187b4:	cmp	r5, #0
   187b8:	clzeq	r1, r4
   187bc:	addeq	r1, r1, #32
   187c0:	clzne	r1, r5
   187c4:	sub	ip, ip, r1
   187c8:	sub	lr, ip, #32
   187cc:	lsl	r7, r3, ip
   187d0:	rsb	r8, ip, #32
   187d4:	orr	r7, r7, r2, lsl lr
   187d8:	orr	r7, r7, r2, lsr r8
   187dc:	lsl	r6, r2, ip
   187e0:	cmp	r5, r7
   187e4:	cmpeq	r4, r6
   187e8:	movcc	r0, #0
   187ec:	movcc	r1, #0
   187f0:	bcc	1880c <argp_error@@Base+0x1a10>
   187f4:	mov	r3, #1
   187f8:	subs	r4, r4, r6
   187fc:	lsl	r1, r3, lr
   18800:	lsl	r0, r3, ip
   18804:	orr	r1, r1, r3, lsr r8
   18808:	sbc	r5, r5, r7
   1880c:	cmp	ip, #0
   18810:	beq	18898 <argp_error@@Base+0x1a9c>
   18814:	lsrs	r3, r7, #1
   18818:	rrx	r2, r6
   1881c:	mov	r6, ip
   18820:	b	18844 <argp_error@@Base+0x1a48>
   18824:	subs	r4, r4, r2
   18828:	sbc	r5, r5, r3
   1882c:	adds	r4, r4, r4
   18830:	adc	r5, r5, r5
   18834:	adds	r4, r4, #1
   18838:	adc	r5, r5, #0
   1883c:	subs	r6, r6, #1
   18840:	beq	18860 <argp_error@@Base+0x1a64>
   18844:	cmp	r5, r3
   18848:	cmpeq	r4, r2
   1884c:	bcs	18824 <argp_error@@Base+0x1a28>
   18850:	adds	r4, r4, r4
   18854:	adc	r5, r5, r5
   18858:	subs	r6, r6, #1
   1885c:	bne	18844 <argp_error@@Base+0x1a48>
   18860:	lsr	r6, r4, ip
   18864:	lsr	r7, r5, ip
   18868:	orr	r6, r6, r5, lsl r8
   1886c:	adds	r2, r0, r4
   18870:	orr	r6, r6, r5, lsr lr
   18874:	adc	r3, r1, r5
   18878:	lsl	r1, r7, ip
   1887c:	orr	r1, r1, r6, lsl lr
   18880:	lsl	r0, r6, ip
   18884:	orr	r1, r1, r6, lsr r8
   18888:	subs	r0, r2, r0
   1888c:	mov	r4, r6
   18890:	mov	r5, r7
   18894:	sbc	r1, r3, r1
   18898:	cmp	r9, #0
   1889c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   188a0:	strd	r4, [r9]
   188a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   188a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   188ac:	mov	r7, r0
   188b0:	ldr	r6, [pc, #72]	; 18900 <argp_error@@Base+0x1b04>
   188b4:	ldr	r5, [pc, #72]	; 18904 <argp_error@@Base+0x1b08>
   188b8:	add	r6, pc, r6
   188bc:	add	r5, pc, r5
   188c0:	sub	r6, r6, r5
   188c4:	mov	r8, r1
   188c8:	mov	r9, r2
   188cc:	bl	10fe0 <calloc@plt-0x20>
   188d0:	asrs	r6, r6, #2
   188d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   188d8:	mov	r4, #0
   188dc:	add	r4, r4, #1
   188e0:	ldr	r3, [r5], #4
   188e4:	mov	r2, r9
   188e8:	mov	r1, r8
   188ec:	mov	r0, r7
   188f0:	blx	r3
   188f4:	cmp	r6, r4
   188f8:	bne	188dc <argp_error@@Base+0x1ae0>
   188fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18900:	andeq	r1, r1, r8, asr #12
   18904:	andeq	r1, r1, r0, asr #12
   18908:	bx	lr

Disassembly of section .fini:

0001890c <.fini>:
   1890c:	push	{r3, lr}
   18910:	pop	{r3, pc}
