
../repos/inetutils/src/syslogd:     file format elf32-littlearm


Disassembly of section .init:

00011954 <.init>:
   11954:	push	{r3, lr}
   11958:	bl	11e60 <__assert_fail@plt+0x48>
   1195c:	pop	{r3, pc}

Disassembly of section .plt:

00011960 <calloc@plt-0x14>:
   11960:	push	{lr}		; (str lr, [sp, #-4]!)
   11964:	ldr	lr, [pc, #4]	; 11970 <calloc@plt-0x4>
   11968:	add	lr, pc, lr
   1196c:	ldr	pc, [lr, #8]!
   11970:	muleq	r1, r0, r6

00011974 <calloc@plt>:
   11974:	add	ip, pc, #0, 12
   11978:	add	ip, ip, #122880	; 0x1e000
   1197c:	ldr	pc, [ip, #1680]!	; 0x690

00011980 <fputs_unlocked@plt>:
   11980:	add	ip, pc, #0, 12
   11984:	add	ip, ip, #122880	; 0x1e000
   11988:	ldr	pc, [ip, #1672]!	; 0x688

0001198c <fsync@plt>:
   1198c:	add	ip, pc, #0, 12
   11990:	add	ip, ip, #122880	; 0x1e000
   11994:	ldr	pc, [ip, #1664]!	; 0x680

00011998 <strcmp@plt>:
   11998:	add	ip, pc, #0, 12
   1199c:	add	ip, ip, #122880	; 0x1e000
   119a0:	ldr	pc, [ip, #1656]!	; 0x678

000119a4 <strtol@plt>:
   119a4:	add	ip, pc, #0, 12
   119a8:	add	ip, ip, #122880	; 0x1e000
   119ac:	ldr	pc, [ip, #1648]!	; 0x670

000119b0 <setsockopt@plt>:
   119b0:	add	ip, pc, #0, 12
   119b4:	add	ip, ip, #122880	; 0x1e000
   119b8:	ldr	pc, [ip, #1640]!	; 0x668

000119bc <pause@plt>:
   119bc:	add	ip, pc, #0, 12
   119c0:	add	ip, ip, #122880	; 0x1e000
   119c4:	ldr	pc, [ip, #1632]!	; 0x660

000119c8 <printf@plt>:
   119c8:	add	ip, pc, #0, 12
   119cc:	add	ip, ip, #122880	; 0x1e000
   119d0:	ldr	pc, [ip, #1624]!	; 0x658

000119d4 <read@plt>:
   119d4:	add	ip, pc, #0, 12
   119d8:	add	ip, ip, #122880	; 0x1e000
   119dc:	ldr	pc, [ip, #1616]!	; 0x650

000119e0 <fflush@plt>:
   119e0:	add	ip, pc, #0, 12
   119e4:	add	ip, ip, #122880	; 0x1e000
   119e8:	ldr	pc, [ip, #1608]!	; 0x648

000119ec <utmpxname@plt>:
   119ec:	add	ip, pc, #0, 12
   119f0:	add	ip, ip, #122880	; 0x1e000
   119f4:	ldr	pc, [ip, #1600]!	; 0x640

000119f8 <sigprocmask@plt>:
   119f8:	add	ip, pc, #0, 12
   119fc:	add	ip, ip, #122880	; 0x1e000
   11a00:	ldr	pc, [ip, #1592]!	; 0x638

00011a04 <memmove@plt>:
   11a04:	add	ip, pc, #0, 12
   11a08:	add	ip, ip, #122880	; 0x1e000
   11a0c:	ldr	pc, [ip, #1584]!	; 0x630

00011a10 <strchrnul@plt>:
   11a10:	add	ip, pc, #0, 12
   11a14:	add	ip, ip, #122880	; 0x1e000
   11a18:	ldr	pc, [ip, #1576]!	; 0x628

00011a1c <free@plt>:
   11a1c:	add	ip, pc, #0, 12
   11a20:	add	ip, ip, #122880	; 0x1e000
   11a24:	ldr	pc, [ip, #1568]!	; 0x620

00011a28 <gai_strerror@plt>:
   11a28:	add	ip, pc, #0, 12
   11a2c:	add	ip, ip, #122880	; 0x1e000
   11a30:	ldr	pc, [ip, #1560]!	; 0x618

00011a34 <fgets@plt>:
   11a34:	add	ip, pc, #0, 12
   11a38:	add	ip, ip, #122880	; 0x1e000
   11a3c:	ldr	pc, [ip, #1552]!	; 0x610

00011a40 <strndup@plt>:
   11a40:	add	ip, pc, #0, 12
   11a44:	add	ip, ip, #122880	; 0x1e000
   11a48:	ldr	pc, [ip, #1544]!	; 0x608

00011a4c <_exit@plt>:
   11a4c:	add	ip, pc, #0, 12
   11a50:	add	ip, ip, #122880	; 0x1e000
   11a54:	ldr	pc, [ip, #1536]!	; 0x600

00011a58 <memcpy@plt>:
   11a58:	add	ip, pc, #0, 12
   11a5c:	add	ip, ip, #122880	; 0x1e000
   11a60:	ldr	pc, [ip, #1528]!	; 0x5f8

00011a64 <signal@plt>:
   11a64:	add	ip, pc, #0, 12
   11a68:	add	ip, ip, #122880	; 0x1e000
   11a6c:	ldr	pc, [ip, #1520]!	; 0x5f0

00011a70 <time@plt>:
   11a70:	add	ip, pc, #0, 12
   11a74:	add	ip, ip, #122880	; 0x1e000
   11a78:	ldr	pc, [ip, #1512]!	; 0x5e8

00011a7c <fwrite_unlocked@plt>:
   11a7c:	add	ip, pc, #0, 12
   11a80:	add	ip, ip, #122880	; 0x1e000
   11a84:	ldr	pc, [ip, #1504]!	; 0x5e0

00011a88 <sleep@plt>:
   11a88:	add	ip, pc, #0, 12
   11a8c:	add	ip, ip, #122880	; 0x1e000
   11a90:	ldr	pc, [ip, #1496]!	; 0x5d8

00011a94 <ctime@plt>:
   11a94:	add	ip, pc, #0, 12
   11a98:	add	ip, ip, #122880	; 0x1e000
   11a9c:	ldr	pc, [ip, #1488]!	; 0x5d0

00011aa0 <recvfrom@plt>:
   11aa0:	add	ip, pc, #0, 12
   11aa4:	add	ip, ip, #122880	; 0x1e000
   11aa8:	ldr	pc, [ip, #1480]!	; 0x5c8

00011aac <strdup@plt>:
   11aac:	add	ip, pc, #0, 12
   11ab0:	add	ip, ip, #122880	; 0x1e000
   11ab4:	ldr	pc, [ip, #1472]!	; 0x5c0

00011ab8 <setutxent@plt>:
   11ab8:	add	ip, pc, #0, 12
   11abc:	add	ip, ip, #122880	; 0x1e000
   11ac0:	ldr	pc, [ip, #1464]!	; 0x5b8

00011ac4 <alarm@plt>:
   11ac4:	add	ip, pc, #0, 12
   11ac8:	add	ip, ip, #122880	; 0x1e000
   11acc:	ldr	pc, [ip, #1456]!	; 0x5b0

00011ad0 <sysconf@plt>:
   11ad0:	add	ip, pc, #0, 12
   11ad4:	add	ip, ip, #122880	; 0x1e000
   11ad8:	ldr	pc, [ip, #1448]!	; 0x5a8

00011adc <unlink@plt>:
   11adc:	add	ip, pc, #0, 12
   11ae0:	add	ip, ip, #122880	; 0x1e000
   11ae4:	ldr	pc, [ip, #1440]!	; 0x5a0

00011ae8 <dup2@plt>:
   11ae8:	add	ip, pc, #0, 12
   11aec:	add	ip, ip, #122880	; 0x1e000
   11af0:	ldr	pc, [ip, #1432]!	; 0x598

00011af4 <realloc@plt>:
   11af4:	add	ip, pc, #0, 12
   11af8:	add	ip, ip, #122880	; 0x1e000
   11afc:	ldr	pc, [ip, #1424]!	; 0x590

00011b00 <chdir@plt>:
   11b00:	add	ip, pc, #0, 12
   11b04:	add	ip, ip, #122880	; 0x1e000
   11b08:	ldr	pc, [ip, #1416]!	; 0x588

00011b0c <strcasecmp@plt>:
   11b0c:	add	ip, pc, #0, 12
   11b10:	add	ip, ip, #122880	; 0x1e000
   11b14:	ldr	pc, [ip, #1408]!	; 0x580

00011b18 <funlockfile@plt>:
   11b18:	add	ip, pc, #0, 12
   11b1c:	add	ip, ip, #122880	; 0x1e000
   11b20:	ldr	pc, [ip, #1400]!	; 0x578

00011b24 <poll@plt>:
   11b24:	add	ip, pc, #0, 12
   11b28:	add	ip, ip, #122880	; 0x1e000
   11b2c:	ldr	pc, [ip, #1392]!	; 0x570

00011b30 <sigaction@plt>:
   11b30:	add	ip, pc, #0, 12
   11b34:	add	ip, ip, #122880	; 0x1e000
   11b38:	ldr	pc, [ip, #1384]!	; 0x568

00011b3c <fwrite@plt>:
   11b3c:	add	ip, pc, #0, 12
   11b40:	add	ip, ip, #122880	; 0x1e000
   11b44:	ldr	pc, [ip, #1376]!	; 0x560

00011b48 <strcat@plt>:
   11b48:	add	ip, pc, #0, 12
   11b4c:	add	ip, ip, #122880	; 0x1e000
   11b50:	ldr	pc, [ip, #1368]!	; 0x558

00011b54 <waitpid@plt>:
   11b54:	add	ip, pc, #0, 12
   11b58:	add	ip, ip, #122880	; 0x1e000
   11b5c:	ldr	pc, [ip, #1360]!	; 0x550

00011b60 <strcpy@plt>:
   11b60:	add	ip, pc, #0, 12
   11b64:	add	ip, ip, #122880	; 0x1e000
   11b68:	ldr	pc, [ip, #1352]!	; 0x548

00011b6c <error@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #122880	; 0x1e000
   11b74:	ldr	pc, [ip, #1344]!	; 0x540

00011b78 <gethostname@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #122880	; 0x1e000
   11b80:	ldr	pc, [ip, #1336]!	; 0x538

00011b84 <opendir@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #122880	; 0x1e000
   11b8c:	ldr	pc, [ip, #1328]!	; 0x530

00011b90 <open64@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #122880	; 0x1e000
   11b98:	ldr	pc, [ip, #1320]!	; 0x528

00011b9c <getenv@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #122880	; 0x1e000
   11ba4:	ldr	pc, [ip, #1312]!	; 0x520

00011ba8 <malloc@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #122880	; 0x1e000
   11bb0:	ldr	pc, [ip, #1304]!	; 0x518

00011bb4 <sigaddset@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #122880	; 0x1e000
   11bbc:	ldr	pc, [ip, #1296]!	; 0x510

00011bc0 <__libc_start_main@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #122880	; 0x1e000
   11bc8:	ldr	pc, [ip, #1288]!	; 0x508

00011bcc <strerror@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #122880	; 0x1e000
   11bd4:	ldr	pc, [ip, #1280]!	; 0x500

00011bd8 <__ctype_tolower_loc@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #122880	; 0x1e000
   11be0:	ldr	pc, [ip, #1272]!	; 0x4f8

00011be4 <__gmon_start__@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #122880	; 0x1e000
   11bec:	ldr	pc, [ip, #1264]!	; 0x4f0

00011bf0 <kill@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #122880	; 0x1e000
   11bf8:	ldr	pc, [ip, #1256]!	; 0x4e8

00011bfc <__ctype_b_loc@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #122880	; 0x1e000
   11c04:	ldr	pc, [ip, #1248]!	; 0x4e0

00011c08 <getpid@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #122880	; 0x1e000
   11c10:	ldr	pc, [ip, #1240]!	; 0x4d8

00011c14 <exit@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #122880	; 0x1e000
   11c1c:	ldr	pc, [ip, #1232]!	; 0x4d0

00011c20 <strlen@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #122880	; 0x1e000
   11c28:	ldr	pc, [ip, #1224]!	; 0x4c8

00011c2c <setsid@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #122880	; 0x1e000
   11c34:	ldr	pc, [ip, #1216]!	; 0x4c0

00011c38 <strchr@plt>:
   11c38:	add	ip, pc, #0, 12
   11c3c:	add	ip, ip, #122880	; 0x1e000
   11c40:	ldr	pc, [ip, #1208]!	; 0x4b8

00011c44 <fprintf@plt>:
   11c44:	add	ip, pc, #0, 12
   11c48:	add	ip, ip, #122880	; 0x1e000
   11c4c:	ldr	pc, [ip, #1200]!	; 0x4b0

00011c50 <__errno_location@plt>:
   11c50:	add	ip, pc, #0, 12
   11c54:	add	ip, ip, #122880	; 0x1e000
   11c58:	ldr	pc, [ip, #1192]!	; 0x4a8

00011c5c <snprintf@plt>:
   11c5c:	add	ip, pc, #0, 12
   11c60:	add	ip, ip, #122880	; 0x1e000
   11c64:	ldr	pc, [ip, #1184]!	; 0x4a0

00011c68 <strerror_r@plt>:
   11c68:	add	ip, pc, #0, 12
   11c6c:	add	ip, ip, #122880	; 0x1e000
   11c70:	ldr	pc, [ip, #1176]!	; 0x498

00011c74 <bind@plt>:
   11c74:	add	ip, pc, #0, 12
   11c78:	add	ip, ip, #122880	; 0x1e000
   11c7c:	ldr	pc, [ip, #1168]!	; 0x490

00011c80 <setvbuf@plt>:
   11c80:	add	ip, pc, #0, 12
   11c84:	add	ip, ip, #122880	; 0x1e000
   11c88:	ldr	pc, [ip, #1160]!	; 0x488

00011c8c <memset@plt>:
   11c8c:	add	ip, pc, #0, 12
   11c90:	add	ip, ip, #122880	; 0x1e000
   11c94:	ldr	pc, [ip, #1152]!	; 0x480

00011c98 <strncpy@plt>:
   11c98:	add	ip, pc, #0, 12
   11c9c:	add	ip, ip, #122880	; 0x1e000
   11ca0:	ldr	pc, [ip, #1144]!	; 0x478

00011ca4 <asprintf@plt>:
   11ca4:	add	ip, pc, #0, 12
   11ca8:	add	ip, ip, #122880	; 0x1e000
   11cac:	ldr	pc, [ip, #1136]!	; 0x470

00011cb0 <memchr@plt>:
   11cb0:	add	ip, pc, #0, 12
   11cb4:	add	ip, ip, #122880	; 0x1e000
   11cb8:	ldr	pc, [ip, #1128]!	; 0x468

00011cbc <writev@plt>:
   11cbc:	add	ip, pc, #0, 12
   11cc0:	add	ip, ip, #122880	; 0x1e000
   11cc4:	ldr	pc, [ip, #1120]!	; 0x460

00011cc8 <fclose@plt>:
   11cc8:	add	ip, pc, #0, 12
   11ccc:	add	ip, ip, #122880	; 0x1e000
   11cd0:	ldr	pc, [ip, #1112]!	; 0x458

00011cd4 <fcntl64@plt>:
   11cd4:	add	ip, pc, #0, 12
   11cd8:	add	ip, ip, #122880	; 0x1e000
   11cdc:	ldr	pc, [ip, #1104]!	; 0x450

00011ce0 <sendto@plt>:
   11ce0:	add	ip, pc, #0, 12
   11ce4:	add	ip, ip, #122880	; 0x1e000
   11ce8:	ldr	pc, [ip, #1096]!	; 0x448

00011cec <endutxent@plt>:
   11cec:	add	ip, pc, #0, 12
   11cf0:	add	ip, ip, #122880	; 0x1e000
   11cf4:	ldr	pc, [ip, #1088]!	; 0x440

00011cf8 <__overflow@plt>:
   11cf8:	add	ip, pc, #0, 12
   11cfc:	add	ip, ip, #122880	; 0x1e000
   11d00:	ldr	pc, [ip, #1080]!	; 0x438

00011d04 <sigemptyset@plt>:
   11d04:	add	ip, pc, #0, 12
   11d08:	add	ip, ip, #122880	; 0x1e000
   11d0c:	ldr	pc, [ip, #1072]!	; 0x430

00011d10 <fork@plt>:
   11d10:	add	ip, pc, #0, 12
   11d14:	add	ip, ip, #122880	; 0x1e000
   11d18:	ldr	pc, [ip, #1064]!	; 0x428

00011d1c <getnameinfo@plt>:
   11d1c:	add	ip, pc, #0, 12
   11d20:	add	ip, ip, #122880	; 0x1e000
   11d24:	ldr	pc, [ip, #1056]!	; 0x420

00011d28 <strrchr@plt>:
   11d28:	add	ip, pc, #0, 12
   11d2c:	add	ip, ip, #122880	; 0x1e000
   11d30:	ldr	pc, [ip, #1048]!	; 0x418

00011d34 <vfprintf@plt>:
   11d34:	add	ip, pc, #0, 12
   11d38:	add	ip, ip, #122880	; 0x1e000
   11d3c:	ldr	pc, [ip, #1040]!	; 0x410

00011d40 <fputc@plt>:
   11d40:	add	ip, pc, #0, 12
   11d44:	add	ip, ip, #122880	; 0x1e000
   11d48:	ldr	pc, [ip, #1032]!	; 0x408

00011d4c <readdir64@plt>:
   11d4c:	add	ip, pc, #0, 12
   11d50:	add	ip, ip, #122880	; 0x1e000
   11d54:	ldr	pc, [ip, #1024]!	; 0x400

00011d58 <flockfile@plt>:
   11d58:	add	ip, pc, #0, 12
   11d5c:	add	ip, ip, #122880	; 0x1e000
   11d60:	ldr	pc, [ip, #1016]!	; 0x3f8

00011d64 <vsnprintf@plt>:
   11d64:	add	ip, pc, #0, 12
   11d68:	add	ip, ip, #122880	; 0x1e000
   11d6c:	ldr	pc, [ip, #1008]!	; 0x3f0

00011d70 <fopen64@plt>:
   11d70:	add	ip, pc, #0, 12
   11d74:	add	ip, ip, #122880	; 0x1e000
   11d78:	ldr	pc, [ip, #1000]!	; 0x3e8

00011d7c <qsort@plt>:
   11d7c:	add	ip, pc, #0, 12
   11d80:	add	ip, ip, #122880	; 0x1e000
   11d84:	ldr	pc, [ip, #992]!	; 0x3e0

00011d88 <strpbrk@plt>:
   11d88:	add	ip, pc, #0, 12
   11d8c:	add	ip, ip, #122880	; 0x1e000
   11d90:	ldr	pc, [ip, #984]!	; 0x3d8

00011d94 <freeaddrinfo@plt>:
   11d94:	add	ip, pc, #0, 12
   11d98:	add	ip, ip, #122880	; 0x1e000
   11d9c:	ldr	pc, [ip, #976]!	; 0x3d0

00011da0 <getaddrinfo@plt>:
   11da0:	add	ip, pc, #0, 12
   11da4:	add	ip, ip, #122880	; 0x1e000
   11da8:	ldr	pc, [ip, #968]!	; 0x3c8

00011dac <socket@plt>:
   11dac:	add	ip, pc, #0, 12
   11db0:	add	ip, ip, #122880	; 0x1e000
   11db4:	ldr	pc, [ip, #960]!	; 0x3c0

00011db8 <chmod@plt>:
   11db8:	add	ip, pc, #0, 12
   11dbc:	add	ip, ip, #122880	; 0x1e000
   11dc0:	ldr	pc, [ip, #952]!	; 0x3b8

00011dc4 <__xstat64@plt>:
   11dc4:	add	ip, pc, #0, 12
   11dc8:	add	ip, ip, #122880	; 0x1e000
   11dcc:	ldr	pc, [ip, #944]!	; 0x3b0

00011dd0 <isatty@plt>:
   11dd0:	add	ip, pc, #0, 12
   11dd4:	add	ip, ip, #122880	; 0x1e000
   11dd8:	ldr	pc, [ip, #936]!	; 0x3a8

00011ddc <strncmp@plt>:
   11ddc:	add	ip, pc, #0, 12
   11de0:	add	ip, ip, #122880	; 0x1e000
   11de4:	ldr	pc, [ip, #928]!	; 0x3a0

00011de8 <abort@plt>:
   11de8:	add	ip, pc, #0, 12
   11dec:	add	ip, ip, #122880	; 0x1e000
   11df0:	ldr	pc, [ip, #920]!	; 0x398

00011df4 <getutxent@plt>:
   11df4:	add	ip, pc, #0, 12
   11df8:	add	ip, ip, #122880	; 0x1e000
   11dfc:	ldr	pc, [ip, #912]!	; 0x390

00011e00 <close@plt>:
   11e00:	add	ip, pc, #0, 12
   11e04:	add	ip, ip, #122880	; 0x1e000
   11e08:	ldr	pc, [ip, #904]!	; 0x388

00011e0c <closedir@plt>:
   11e0c:	add	ip, pc, #0, 12
   11e10:	add	ip, ip, #122880	; 0x1e000
   11e14:	ldr	pc, [ip, #896]!	; 0x380

00011e18 <__assert_fail@plt>:
   11e18:	add	ip, pc, #0, 12
   11e1c:	add	ip, ip, #122880	; 0x1e000
   11e20:	ldr	pc, [ip, #888]!	; 0x378

Disassembly of section .text:

00011e24 <daemon@@Base-0x43c8>:
   11e24:	mov	fp, #0
   11e28:	mov	lr, #0
   11e2c:	pop	{r1}		; (ldr r1, [sp], #4)
   11e30:	mov	r2, sp
   11e34:	push	{r2}		; (str r2, [sp, #-4]!)
   11e38:	push	{r0}		; (str r0, [sp, #-4]!)
   11e3c:	ldr	ip, [pc, #16]	; 11e54 <__assert_fail@plt+0x3c>
   11e40:	push	{ip}		; (str ip, [sp, #-4]!)
   11e44:	ldr	r0, [pc, #12]	; 11e58 <__assert_fail@plt+0x40>
   11e48:	ldr	r3, [pc, #12]	; 11e5c <__assert_fail@plt+0x44>
   11e4c:	bl	11bc0 <__libc_start_main@plt>
   11e50:	bl	11de8 <abort@plt>
   11e54:	andeq	lr, r1, r0, lsl #7
   11e58:	andeq	r1, r1, r4, lsl pc
   11e5c:	andeq	lr, r1, r0, lsr #6
   11e60:	ldr	r3, [pc, #20]	; 11e7c <__assert_fail@plt+0x64>
   11e64:	ldr	r2, [pc, #20]	; 11e80 <__assert_fail@plt+0x68>
   11e68:	add	r3, pc, r3
   11e6c:	ldr	r2, [r3, r2]
   11e70:	cmp	r2, #0
   11e74:	bxeq	lr
   11e78:	b	11be4 <__gmon_start__@plt>
   11e7c:	muleq	r1, r0, r1
   11e80:	muleq	r0, ip, r1
   11e84:	ldr	r0, [pc, #24]	; 11ea4 <__assert_fail@plt+0x8c>
   11e88:	ldr	r3, [pc, #24]	; 11ea8 <__assert_fail@plt+0x90>
   11e8c:	cmp	r3, r0
   11e90:	bxeq	lr
   11e94:	ldr	r3, [pc, #16]	; 11eac <__assert_fail@plt+0x94>
   11e98:	cmp	r3, #0
   11e9c:	bxeq	lr
   11ea0:	bx	r3
   11ea4:	andeq	r0, r3, ip, asr #11
   11ea8:	andeq	r0, r3, ip, asr #11
   11eac:	andeq	r0, r0, r0
   11eb0:	ldr	r0, [pc, #36]	; 11edc <__assert_fail@plt+0xc4>
   11eb4:	ldr	r1, [pc, #36]	; 11ee0 <__assert_fail@plt+0xc8>
   11eb8:	sub	r1, r1, r0
   11ebc:	asr	r1, r1, #2
   11ec0:	add	r1, r1, r1, lsr #31
   11ec4:	asrs	r1, r1, #1
   11ec8:	bxeq	lr
   11ecc:	ldr	r3, [pc, #16]	; 11ee4 <__assert_fail@plt+0xcc>
   11ed0:	cmp	r3, #0
   11ed4:	bxeq	lr
   11ed8:	bx	r3
   11edc:	andeq	r0, r3, ip, asr #11
   11ee0:	andeq	r0, r3, ip, asr #11
   11ee4:	andeq	r0, r0, r0
   11ee8:	push	{r4, lr}
   11eec:	ldr	r4, [pc, #24]	; 11f0c <__assert_fail@plt+0xf4>
   11ef0:	ldrb	r3, [r4]
   11ef4:	cmp	r3, #0
   11ef8:	popne	{r4, pc}
   11efc:	bl	11e84 <__assert_fail@plt+0x6c>
   11f00:	mov	r3, #1
   11f04:	strb	r3, [r4]
   11f08:	pop	{r4, pc}
   11f0c:	andeq	r0, r3, r0, ror #11
   11f10:	b	11eb0 <__assert_fail@plt+0x98>
   11f14:	push	{r4, r5, fp, lr}
   11f18:	add	fp, sp, #8
   11f1c:	sub	sp, sp, #312	; 0x138
   11f20:	sub	sp, sp, #2048	; 0x800
   11f24:	mov	r5, r0
   11f28:	ldr	r0, [r1]
   11f2c:	mov	r4, r1
   11f30:	bl	1b8c4 <argp_parse@@Base+0x1680>
   11f34:	movw	r6, #3112	; 0xc28
   11f38:	movw	r7, #3208	; 0xc88
   11f3c:	mov	r1, #8
   11f40:	movt	r6, #3
   11f44:	movt	r7, #3
   11f48:	ldr	r0, [r6]
   11f4c:	add	r1, r1, r0, lsl #3
   11f50:	ldr	r0, [r7]
   11f54:	bl	1c83c <argp_parse@@Base+0x25f8>
   11f58:	cmp	r0, #0
   11f5c:	str	r0, [r7]
   11f60:	bne	11f80 <__assert_fail@plt+0x168>
   11f64:	bl	11c50 <__errno_location@plt>
   11f68:	ldr	r1, [r0]
   11f6c:	movw	r2, #61491	; 0xf033
   11f70:	mov	r0, #1
   11f74:	movt	r2, #1
   11f78:	bl	11b6c <error@plt>
   11f7c:	ldr	r0, [r7]
   11f80:	ldr	r1, [r6]
   11f84:	movw	r2, #61367	; 0xefb7
   11f88:	movt	r2, #1
   11f8c:	str	r2, [r0, r1, lsl #3]
   11f90:	ldr	r0, [r7]
   11f94:	add	r0, r0, r1, lsl #3
   11f98:	mvn	r1, #0
   11f9c:	str	r1, [r0, #4]
   11fa0:	movw	r0, #4244	; 0x1094
   11fa4:	movw	r1, #58608	; 0xe4f0
   11fa8:	movt	r0, #3
   11fac:	movt	r1, #1
   11fb0:	str	r1, [r0]
   11fb4:	ldr	r0, [r6]
   11fb8:	movw	r1, #1412	; 0x584
   11fbc:	movt	r1, #3
   11fc0:	add	r0, r0, #1
   11fc4:	str	r0, [r6]
   11fc8:	movw	r0, #58632	; 0xe508
   11fcc:	movt	r0, #1
   11fd0:	bl	1b500 <argp_parse@@Base+0x12bc>
   11fd4:	movw	r7, #1304	; 0x518
   11fd8:	mov	r0, #0
   11fdc:	mov	r1, r5
   11fe0:	mov	r2, r4
   11fe4:	mov	r3, #0
   11fe8:	movt	r7, #3
   11fec:	str	r0, [sp]
   11ff0:	str	r0, [sp, #4]
   11ff4:	add	r0, r7, #80	; 0x50
   11ff8:	bl	1a244 <argp_parse@@Base>
   11ffc:	movw	r0, #60297	; 0xeb89
   12000:	sub	r2, fp, #1040	; 0x410
   12004:	movw	r5, #58379	; 0xe40b
   12008:	ldr	r4, [r7, #16]
   1200c:	vmov.i32	q8, #0	; 0x00000000
   12010:	add	r9, sp, #296	; 0x128
   12014:	movt	r0, #1
   12018:	add	r6, r2, #4
   1201c:	add	sl, r2, #16
   12020:	movt	r5, #1
   12024:	mov	r3, r9
   12028:	str	r0, [r7, #32]
   1202c:	mov	r0, #1
   12030:	vst1.32	{d16-d17}, [r6]
   12034:	vst1.32	{d16-d17}, [sl]
   12038:	mov	r1, r5
   1203c:	str	r0, [fp, #-1040]	; 0xfffffbf0
   12040:	mov	r0, #2
   12044:	str	r0, [fp, #-1032]	; 0xfffffbf8
   12048:	mov	r0, #0
   1204c:	bl	11da0 <getaddrinfo@plt>
   12050:	cmp	r0, #0
   12054:	beq	120b8 <__assert_fail@plt+0x2a0>
   12058:	cmp	r4, #0
   1205c:	mov	r8, r7
   12060:	str	r4, [r7, #28]
   12064:	beq	120d4 <__assert_fail@plt+0x2bc>
   12068:	vmov.i32	q8, #0	; 0x00000000
   1206c:	mov	r0, #12
   12070:	mov	r1, r6
   12074:	sub	r2, fp, #1040	; 0x410
   12078:	add	r3, sp, #296	; 0x128
   1207c:	mov	r5, #0
   12080:	vst1.32	{d16-d17}, [r1], r0
   12084:	mov	r0, #1
   12088:	vst1.32	{d16-d17}, [r1]
   1208c:	str	r0, [fp, #-1040]	; 0xfffffbf0
   12090:	mov	r0, #2
   12094:	mov	r1, r4
   12098:	str	r0, [fp, #-1032]	; 0xfffffbf8
   1209c:	mov	r0, #0
   120a0:	bl	11da0 <getaddrinfo@plt>
   120a4:	cmp	r0, #0
   120a8:	beq	120e0 <__assert_fail@plt+0x2c8>
   120ac:	mov	r0, r8
   120b0:	str	r5, [r8, #28]
   120b4:	b	120e8 <__assert_fail@plt+0x2d0>
   120b8:	ldr	r0, [sp, #296]	; 0x128
   120bc:	str	r5, [r7, #32]
   120c0:	bl	11d94 <freeaddrinfo@plt>
   120c4:	cmp	r4, #0
   120c8:	mov	r8, r7
   120cc:	str	r4, [r7, #28]
   120d0:	bne	12068 <__assert_fail@plt+0x250>
   120d4:	ldr	r0, [r7, #32]
   120d8:	str	r0, [r7, #28]
   120dc:	b	120e8 <__assert_fail@plt+0x2d0>
   120e0:	ldr	r0, [sp, #296]	; 0x128
   120e4:	bl	11d94 <freeaddrinfo@plt>
   120e8:	movw	r7, #3140	; 0xc44
   120ec:	movt	r7, #3
   120f0:	ldr	r0, [r7]
   120f4:	cmp	r0, #0
   120f8:	beq	12144 <__assert_fail@plt+0x32c>
   120fc:	movw	r0, #3116	; 0xc2c
   12100:	mov	r2, #1
   12104:	mov	r3, #0
   12108:	movt	r0, #3
   1210c:	ldr	r0, [r0]
   12110:	cmp	r0, #0
   12114:	movwne	r0, #1532	; 0x5fc
   12118:	movne	r1, #1
   1211c:	movtne	r0, #3
   12120:	strne	r1, [r0, #4]
   12124:	movw	r0, #1500	; 0x5dc
   12128:	mov	r1, #0
   1212c:	movt	r0, #3
   12130:	str	r1, [sp, #8]
   12134:	mov	r1, #0
   12138:	ldr	r0, [r0]
   1213c:	bl	11c80 <setvbuf@plt>
   12140:	b	12188 <__assert_fail@plt+0x370>
   12144:	movw	r1, #11984	; 0x2ed0
   12148:	mov	r0, #15
   1214c:	movt	r1, #1
   12150:	bl	11a64 <signal@plt>
   12154:	mov	r0, #0
   12158:	mov	r1, #0
   1215c:	mov	r2, #30
   12160:	bl	1609c <__assert_fail@plt+0x4284>
   12164:	cmn	r0, #1
   12168:	str	r0, [sp, #8]
   1216c:	bgt	12188 <__assert_fail@plt+0x370>
   12170:	bl	11c50 <__errno_location@plt>
   12174:	ldr	r1, [r0]
   12178:	movw	r2, #58640	; 0xe510
   1217c:	mov	r0, #1
   12180:	movt	r2, #1
   12184:	bl	11b6c <error@plt>
   12188:	bl	16208 <daemon@@Base+0x1c>
   1218c:	mov	r4, r0
   12190:	movw	r0, #3136	; 0xc40
   12194:	movt	r0, #3
   12198:	cmp	r4, #0
   1219c:	str	r4, [r0]
   121a0:	bne	121c8 <__assert_fail@plt+0x3b0>
   121a4:	bl	11c50 <__errno_location@plt>
   121a8:	ldr	r1, [r0]
   121ac:	movw	r2, #58664	; 0xe528
   121b0:	mov	r0, #1
   121b4:	movt	r2, #1
   121b8:	bl	11b6c <error@plt>
   121bc:	movw	r0, #3136	; 0xc40
   121c0:	movt	r0, #3
   121c4:	ldr	r4, [r0]
   121c8:	mov	r0, r4
   121cc:	mov	r1, #46	; 0x2e
   121d0:	bl	11c38 <strchr@plt>
   121d4:	cmp	r0, #0
   121d8:	beq	12200 <__assert_fail@plt+0x3e8>
   121dc:	mov	r1, #0
   121e0:	movw	r5, #3112	; 0xc28
   121e4:	strb	r1, [r0], #1
   121e8:	movw	r1, #3132	; 0xc3c
   121ec:	movt	r5, #3
   121f0:	movt	r1, #3
   121f4:	str	r0, [r1]
   121f8:	mov	r1, r8
   121fc:	b	122b0 <__assert_fail@plt+0x498>
   12200:	vmov.i32	q8, #0	; 0x00000000
   12204:	mov	r0, #2
   12208:	add	r3, sp, #296	; 0x128
   1220c:	mov	r1, #0
   12210:	sub	r2, fp, #1040	; 0x410
   12214:	vst1.32	{d16-d17}, [sl]
   12218:	vst1.32	{d16-d17}, [r6]
   1221c:	str	r0, [fp, #-1040]	; 0xfffffbf0
   12220:	mov	r0, r4
   12224:	bl	11da0 <getaddrinfo@plt>
   12228:	cmp	r0, #0
   1222c:	bne	1227c <__assert_fail@plt+0x464>
   12230:	movw	r0, #3136	; 0xc40
   12234:	movt	r0, #3
   12238:	mov	r4, r0
   1223c:	ldr	r0, [r0]
   12240:	bl	1b7d4 <argp_parse@@Base+0x1590>
   12244:	ldr	r0, [sp, #296]	; 0x128
   12248:	ldr	r0, [r0, #24]
   1224c:	bl	11aac <strdup@plt>
   12250:	mov	r1, #46	; 0x2e
   12254:	str	r0, [r4]
   12258:	bl	11c38 <strchr@plt>
   1225c:	cmp	r0, #0
   12260:	movne	r1, #0
   12264:	strbne	r1, [r0], #1
   12268:	movwne	r1, #3132	; 0xc3c
   1226c:	movtne	r1, #3
   12270:	strne	r0, [r1]
   12274:	ldr	r0, [sp, #296]	; 0x128
   12278:	bl	11d94 <freeaddrinfo@plt>
   1227c:	movw	r4, #3132	; 0xc3c
   12280:	movw	r5, #3112	; 0xc28
   12284:	mov	r1, r8
   12288:	movt	r4, #3
   1228c:	movt	r5, #3
   12290:	ldr	r0, [r4]
   12294:	cmp	r0, #0
   12298:	bne	122b0 <__assert_fail@plt+0x498>
   1229c:	movw	r0, #61949	; 0xf1fd
   122a0:	movt	r0, #1
   122a4:	bl	11aac <strdup@plt>
   122a8:	mov	r1, r8
   122ac:	str	r0, [r4]
   122b0:	movw	r4, #2644	; 0xa54
   122b4:	mov	r0, #3
   122b8:	movt	r4, #3
   122bc:	strh	r0, [r4, #4]
   122c0:	add	r0, r1, #64	; 0x40
   122c4:	bl	11aac <strdup@plt>
   122c8:	str	r0, [r4, #40]	; 0x28
   122cc:	movw	r4, #12000	; 0x2ee0
   122d0:	mov	r0, #15
   122d4:	movt	r4, #1
   122d8:	mov	r1, r4
   122dc:	bl	11a64 <signal@plt>
   122e0:	ldr	r0, [r7]
   122e4:	mov	r1, r4
   122e8:	cmp	r0, #0
   122ec:	mov	r0, #2
   122f0:	movweq	r1, #1
   122f4:	bl	11a64 <signal@plt>
   122f8:	ldr	r0, [r7]
   122fc:	cmp	r0, #0
   12300:	mov	r0, #3
   12304:	movweq	r4, #1
   12308:	mov	r1, r4
   1230c:	bl	11a64 <signal@plt>
   12310:	mov	r0, #268435456	; 0x10000000
   12314:	add	r4, sp, #156	; 0x9c
   12318:	str	r0, [sp, #288]	; 0x120
   1231c:	add	r0, r4, #4
   12320:	bl	11d04 <sigemptyset@plt>
   12324:	movw	r0, #12372	; 0x3054
   12328:	mov	r1, r4
   1232c:	mov	r2, #0
   12330:	mov	r6, #0
   12334:	movt	r0, #1
   12338:	str	r0, [sp, #156]	; 0x9c
   1233c:	mov	r0, #14
   12340:	bl	11b30 <sigaction@plt>
   12344:	ldr	r0, [r7]
   12348:	movw	r1, #12656	; 0x3170
   1234c:	mov	r2, #0
   12350:	movt	r1, #1
   12354:	cmp	r0, #0
   12358:	mov	r0, #10
   1235c:	movweq	r1, #1
   12360:	str	r1, [sp, #156]	; 0x9c
   12364:	mov	r1, r4
   12368:	bl	11b30 <sigaction@plt>
   1236c:	mov	r0, #30
   12370:	bl	11ac4 <alarm@plt>
   12374:	ldr	r0, [r5]
   12378:	mov	r1, #24
   1237c:	add	r0, r1, r0, lsl #3
   12380:	bl	1c80c <argp_parse@@Base+0x25c8>
   12384:	mov	r7, r0
   12388:	cmp	r0, #0
   1238c:	bne	123a8 <__assert_fail@plt+0x590>
   12390:	bl	11c50 <__errno_location@plt>
   12394:	ldr	r1, [r0]
   12398:	movw	r2, #58690	; 0xe542
   1239c:	mov	r0, #1
   123a0:	movt	r2, #1
   123a4:	bl	11b6c <error@plt>
   123a8:	bl	131c0 <__assert_fail@plt+0x13a8>
   123ac:	movw	r0, #2628	; 0xa44
   123b0:	movt	r0, #3
   123b4:	ldr	r0, [r0]
   123b8:	cmp	r0, #0
   123bc:	bne	12430 <__assert_fail@plt+0x618>
   123c0:	movw	r0, #61034	; 0xee6a
   123c4:	mov	r1, #0
   123c8:	mov	r2, #0
   123cc:	mov	r6, #0
   123d0:	movt	r0, #1
   123d4:	bl	11b90 <open64@plt>
   123d8:	cmp	r0, #0
   123dc:	str	r0, [r8, #24]
   123e0:	blt	1240c <__assert_fail@plt+0x5f4>
   123e4:	mov	r1, #3
   123e8:	strh	r1, [r7, #4]
   123ec:	movw	r1, #61034	; 0xee6a
   123f0:	str	r0, [r7]
   123f4:	movw	r0, #58714	; 0xe55a
   123f8:	movt	r0, #1
   123fc:	movt	r1, #1
   12400:	bl	135c4 <__assert_fail@plt+0x17ac>
   12404:	mov	r6, #1
   12408:	b	12430 <__assert_fail@plt+0x618>
   1240c:	bl	11c50 <__errno_location@plt>
   12410:	ldr	r0, [r0]
   12414:	bl	11bcc <strerror@plt>
   12418:	movw	r1, #61034	; 0xee6a
   1241c:	mov	r2, r0
   12420:	movw	r0, #58728	; 0xe568
   12424:	movt	r0, #1
   12428:	movt	r1, #1
   1242c:	bl	135c4 <__assert_fail@plt+0x17ac>
   12430:	movw	r0, #3120	; 0xc30
   12434:	movt	r0, #3
   12438:	ldr	r0, [r0]
   1243c:	cmp	r0, #0
   12440:	bne	12690 <__assert_fail@plt+0x878>
   12444:	ldr	r0, [r5]
   12448:	mov	ip, r8
   1244c:	cmp	r0, #0
   12450:	beq	12694 <__assert_fail@plt+0x87c>
   12454:	add	r0, sp, #296	; 0x128
   12458:	movw	r8, #3208	; 0xc88
   1245c:	mov	r4, #0
   12460:	vmov.i32	q4, #0	; 0x00000000
   12464:	orr	r0, r0, #2
   12468:	movt	r8, #3
   1246c:	add	r1, r0, #80	; 0x50
   12470:	str	r0, [sp, #20]
   12474:	add	r0, r0, #64	; 0x40
   12478:	str	r1, [sp, #16]
   1247c:	str	r0, [sp, #12]
   12480:	ldr	r0, [r8]
   12484:	mvn	sl, #0
   12488:	ldr	r5, [r0, r4, lsl #3]
   1248c:	ldrb	r0, [r5]
   12490:	cmp	r0, #0
   12494:	beq	125f4 <__assert_fail@plt+0x7dc>
   12498:	mov	r0, r5
   1249c:	mov	r8, r9
   124a0:	mov	r9, ip
   124a4:	bl	11c20 <strlen@plt>
   124a8:	cmp	r0, #108	; 0x6c
   124ac:	bcc	124dc <__assert_fail@plt+0x6c4>
   124b0:	movw	r2, #61530	; 0xf05a
   124b4:	sub	r0, fp, #1040	; 0x410
   124b8:	movw	r1, #1025	; 0x401
   124bc:	mov	r3, r5
   124c0:	movt	r2, #1
   124c4:	bl	11c5c <snprintf@plt>
   124c8:	sub	r0, fp, #1040	; 0x410
   124cc:	bl	1365c <__assert_fail@plt+0x1844>
   124d0:	mov	ip, r9
   124d4:	mov	r9, r8
   124d8:	b	125ec <__assert_fail@plt+0x7d4>
   124dc:	mov	r0, r5
   124e0:	bl	11adc <unlink@plt>
   124e4:	ldr	r0, [sp, #16]
   124e8:	mov	r2, #92	; 0x5c
   124ec:	add	lr, sp, #256	; 0x100
   124f0:	vst1.16	{d8-d9}, [r0]
   124f4:	ldr	r0, [sp, #12]
   124f8:	vst1.16	{d8-d9}, [r0]
   124fc:	ldr	r0, [sp, #20]
   12500:	add	r1, r0, #48	; 0x30
   12504:	vst1.16	{d8-d9}, [r1]
   12508:	add	r1, r0, #32
   1250c:	vst1.16	{d8-d9}, [r1]
   12510:	add	r1, r0, #16
   12514:	vst1.16	{d8-d9}, [r1]
   12518:	mov	r1, r0
   1251c:	vst1.16	{d8-d9}, [r1], r2
   12520:	mov	r2, #107	; 0x6b
   12524:	vst1.16	{d8-d9}, [r1]
   12528:	mov	r1, #1
   1252c:	strh	r1, [lr, #40]	; 0x28
   12530:	mov	r1, r5
   12534:	bl	11c98 <strncpy@plt>
   12538:	mov	r0, #1
   1253c:	mov	r1, #2
   12540:	mov	r2, #0
   12544:	bl	11dac <socket@plt>
   12548:	mov	r9, r0
   1254c:	cmp	r0, #0
   12550:	blt	12590 <__assert_fail@plt+0x778>
   12554:	ldr	r0, [sp, #20]
   12558:	bl	11c20 <strlen@plt>
   1255c:	add	r2, r0, #2
   12560:	mov	r0, r9
   12564:	add	r1, sp, #296	; 0x128
   12568:	bl	11c74 <bind@plt>
   1256c:	cmp	r0, #0
   12570:	blt	12590 <__assert_fail@plt+0x778>
   12574:	mov	r0, r5
   12578:	movw	r1, #438	; 0x1b6
   1257c:	bl	11db8 <chmod@plt>
   12580:	cmn	r0, #1
   12584:	ble	12590 <__assert_fail@plt+0x778>
   12588:	mov	sl, r9
   1258c:	b	125dc <__assert_fail@plt+0x7c4>
   12590:	movw	r2, #61560	; 0xf078
   12594:	sub	r8, fp, #1040	; 0x410
   12598:	movw	r1, #1025	; 0x401
   1259c:	mov	r3, r5
   125a0:	mov	r0, r8
   125a4:	movt	r2, #1
   125a8:	bl	11c5c <snprintf@plt>
   125ac:	mov	r0, r8
   125b0:	bl	1365c <__assert_fail@plt+0x1844>
   125b4:	bl	11c50 <__errno_location@plt>
   125b8:	ldr	r0, [r0]
   125bc:	bl	11bcc <strerror@plt>
   125c0:	mov	r2, r0
   125c4:	movw	r0, #61577	; 0xf089
   125c8:	mov	r1, r5
   125cc:	movt	r0, #1
   125d0:	bl	135c4 <__assert_fail@plt+0x17ac>
   125d4:	mov	r0, r9
   125d8:	bl	11e00 <close@plt>
   125dc:	movw	r9, #1304	; 0x518
   125e0:	movt	r9, #3
   125e4:	mov	ip, r9
   125e8:	add	r9, sp, #296	; 0x128
   125ec:	movw	r8, #3208	; 0xc88
   125f0:	movt	r8, #3
   125f4:	ldr	r0, [r8]
   125f8:	cmp	sl, #0
   125fc:	add	r1, r0, r4, lsl #3
   12600:	str	sl, [r1, #4]
   12604:	blt	12638 <__assert_fail@plt+0x820>
   12608:	mov	r1, r7
   1260c:	mov	r2, #3
   12610:	mov	r5, ip
   12614:	str	sl, [r1, r6, lsl #3]!
   12618:	strh	r2, [r1, #4]
   1261c:	ldr	r1, [r0, r4, lsl #3]
   12620:	movw	r0, #58747	; 0xe57b
   12624:	movt	r0, #1
   12628:	bl	135c4 <__assert_fail@plt+0x17ac>
   1262c:	mov	ip, r5
   12630:	add	r6, r6, #1
   12634:	b	12674 <__assert_fail@plt+0x85c>
   12638:	ldr	r5, [r0, r4, lsl #3]
   1263c:	mov	r8, r9
   12640:	mov	r9, ip
   12644:	bl	11c50 <__errno_location@plt>
   12648:	ldr	r0, [r0]
   1264c:	bl	11bcc <strerror@plt>
   12650:	mov	r2, r0
   12654:	movw	r0, #58728	; 0xe568
   12658:	mov	r1, r5
   1265c:	movt	r0, #1
   12660:	bl	135c4 <__assert_fail@plt+0x17ac>
   12664:	mov	ip, r9
   12668:	mov	r9, r8
   1266c:	movw	r8, #3208	; 0xc88
   12670:	movt	r8, #3
   12674:	movw	r0, #3112	; 0xc28
   12678:	add	r4, r4, #1
   1267c:	movt	r0, #3
   12680:	ldr	r0, [r0]
   12684:	cmp	r4, r0
   12688:	bcc	12480 <__assert_fail@plt+0x668>
   1268c:	b	12694 <__assert_fail@plt+0x87c>
   12690:	mov	ip, r8
   12694:	movw	r0, #2632	; 0xa48
   12698:	movt	r0, #3
   1269c:	ldr	r0, [r0]
   126a0:	cmp	r0, #0
   126a4:	beq	127cc <__assert_fail@plt+0x9b4>
   126a8:	mvn	r1, #0
   126ac:	ldr	r0, [ip, #20]
   126b0:	str	r1, [ip, #56]	; 0x38
   126b4:	str	r1, [ip, #60]	; 0x3c
   126b8:	ldr	r1, [ip, #28]
   126bc:	cmp	r1, #0
   126c0:	beq	12718 <__assert_fail@plt+0x900>
   126c4:	sub	r2, fp, #1040	; 0x410
   126c8:	mov	r4, #0
   126cc:	vmov.i32	q8, #0	; 0x00000000
   126d0:	mov	r8, ip
   126d4:	add	r3, r2, #12
   126d8:	str	r4, [fp, #-1012]	; 0xfffffc0c
   126dc:	vst1.32	{d16-d17}, [r3]
   126e0:	str	r0, [fp, #-1036]	; 0xfffffbf4
   126e4:	mov	r0, #2
   126e8:	add	r3, sp, #296	; 0x128
   126ec:	str	r0, [fp, #-1032]	; 0xfffffbf8
   126f0:	mov	r0, #1
   126f4:	str	r0, [fp, #-1040]	; 0xfffffbf0
   126f8:	ldr	r0, [ip, #12]
   126fc:	bl	11da0 <getaddrinfo@plt>
   12700:	cmp	r0, #0
   12704:	beq	12c70 <__assert_fail@plt+0xe58>
   12708:	movw	r0, #61634	; 0xf0c2
   1270c:	movt	r0, #1
   12710:	bl	1365c <__assert_fail@plt+0x1844>
   12714:	b	12728 <__assert_fail@plt+0x910>
   12718:	movw	r0, #61599	; 0xf09f
   1271c:	mov	r8, ip
   12720:	movt	r0, #1
   12724:	bl	135c4 <__assert_fail@plt+0x17ac>
   12728:	ldr	r0, [r8, #56]	; 0x38
   1272c:	mov	ip, r8
   12730:	cmp	r0, #0
   12734:	blt	12760 <__assert_fail@plt+0x948>
   12738:	mov	r1, r7
   1273c:	mov	r4, ip
   12740:	str	r0, [r1, r6, lsl #3]!
   12744:	mov	r0, #3
   12748:	strh	r0, [r1, #4]
   1274c:	movw	r0, #58773	; 0xe595
   12750:	movt	r0, #1
   12754:	bl	135c4 <__assert_fail@plt+0x17ac>
   12758:	mov	ip, r4
   1275c:	add	r6, r6, #1
   12760:	ldr	r0, [ip, #60]	; 0x3c
   12764:	cmp	r0, #0
   12768:	blt	12798 <__assert_fail@plt+0x980>
   1276c:	mov	r1, r7
   12770:	mov	r4, ip
   12774:	str	r0, [r1, r6, lsl #3]!
   12778:	mov	r0, #3
   1277c:	strh	r0, [r1, #4]
   12780:	movw	r0, #58803	; 0xe5b3
   12784:	movt	r0, #1
   12788:	bl	135c4 <__assert_fail@plt+0x17ac>
   1278c:	ldr	r0, [r4, #60]	; 0x3c
   12790:	mov	ip, r4
   12794:	add	r6, r6, #1
   12798:	ldr	r1, [ip, #56]	; 0x38
   1279c:	and	r0, r0, r1
   127a0:	cmn	r0, #1
   127a4:	bgt	127cc <__assert_fail@plt+0x9b4>
   127a8:	mov	r4, ip
   127ac:	bl	11c50 <__errno_location@plt>
   127b0:	ldr	r0, [r0]
   127b4:	bl	11bcc <strerror@plt>
   127b8:	mov	r1, r0
   127bc:	movw	r0, #58833	; 0xe5d1
   127c0:	movt	r0, #1
   127c4:	bl	135c4 <__assert_fail@plt+0x17ac>
   127c8:	mov	ip, r4
   127cc:	ldr	r0, [ip, #8]
   127d0:	movw	r1, #58858	; 0xe5ea
   127d4:	movt	r1, #1
   127d8:	bl	11d70 <fopen64@plt>
   127dc:	cmp	r0, #0
   127e0:	beq	12808 <__assert_fail@plt+0x9f0>
   127e4:	mov	r4, r0
   127e8:	bl	11c08 <getpid@plt>
   127ec:	movw	r1, #59373	; 0xe7ed
   127f0:	mov	r2, r0
   127f4:	mov	r0, r4
   127f8:	movt	r1, #1
   127fc:	bl	11c44 <fprintf@plt>
   12800:	mov	r0, r4
   12804:	bl	11cc8 <fclose@plt>
   12808:	movw	r0, #58860	; 0xe5ec
   1280c:	movt	r0, #1
   12810:	bl	135c4 <__assert_fail@plt+0x17ac>
   12814:	movw	r0, #13896	; 0x3648
   12818:	add	r1, sp, #156	; 0x9c
   1281c:	mov	r2, #0
   12820:	mov	r5, #1
   12824:	mov	r8, #0
   12828:	movt	r0, #1
   1282c:	str	r0, [sp, #156]	; 0x9c
   12830:	mov	r0, #1
   12834:	bl	11b30 <sigaction@plt>
   12838:	movw	r0, #3140	; 0xc44
   1283c:	movt	r0, #3
   12840:	ldr	r0, [r0]
   12844:	cmp	r0, #0
   12848:	beq	12870 <__assert_fail@plt+0xa58>
   1284c:	movw	r4, #1532	; 0x5fc
   12850:	movt	r4, #3
   12854:	str	r5, [r4, #4]
   12858:	bl	11c08 <getpid@plt>
   1285c:	mov	r1, r0
   12860:	movw	r0, #58879	; 0xe5ff
   12864:	movt	r0, #1
   12868:	bl	135c4 <__assert_fail@plt+0x17ac>
   1286c:	str	r8, [r4, #4]
   12870:	ldr	r0, [sp, #8]
   12874:	cmp	r0, #0
   12878:	beq	12884 <__assert_fail@plt+0xa6c>
   1287c:	mov	r1, #15
   12880:	bl	11bf0 <kill@plt>
   12884:	movw	r2, #1304	; 0x518
   12888:	mov	r8, #0
   1288c:	mov	sl, #0
   12890:	movt	r2, #3
   12894:	movw	r4, #1532	; 0x5fc
   12898:	mov	r5, r2
   1289c:	movt	r4, #3
   128a0:	b	128b8 <__assert_fail@plt+0xaa0>
   128a4:	movw	r0, #58948	; 0xe644
   128a8:	movt	r0, #1
   128ac:	bl	135c4 <__assert_fail@plt+0x17ac>
   128b0:	bl	131c0 <__assert_fail@plt+0x13a8>
   128b4:	strb	r8, [r4]
   128b8:	mov	r0, r7
   128bc:	mov	r1, r6
   128c0:	mvn	r2, #0
   128c4:	bl	11b24 <poll@plt>
   128c8:	cmp	r0, #0
   128cc:	beq	128b8 <__assert_fail@plt+0xaa0>
   128d0:	ldrb	r1, [r4]
   128d4:	cmp	r1, #1
   128d8:	beq	128a4 <__assert_fail@plt+0xa8c>
   128dc:	cmp	r0, #0
   128e0:	blt	128f0 <__assert_fail@plt+0xad8>
   128e4:	cmp	r6, #0
   128e8:	beq	128b8 <__assert_fail@plt+0xaa0>
   128ec:	b	12910 <__assert_fail@plt+0xaf8>
   128f0:	bl	11c50 <__errno_location@plt>
   128f4:	ldr	r0, [r0]
   128f8:	cmp	r0, #4
   128fc:	beq	128b8 <__assert_fail@plt+0xaa0>
   12900:	movw	r0, #58987	; 0xe66b
   12904:	movt	r0, #1
   12908:	bl	1365c <__assert_fail@plt+0x1844>
   1290c:	b	128b8 <__assert_fail@plt+0xaa0>
   12910:	mov	r4, #0
   12914:	mov	r2, r5
   12918:	add	r3, sp, #24
   1291c:	add	r0, r7, r4, lsl #3
   12920:	ldrsh	r0, [r0, #6]
   12924:	tst	r0, #3
   12928:	beq	12964 <__assert_fail@plt+0xb4c>
   1292c:	ldr	r5, [r7, r4, lsl #3]
   12930:	cmn	r5, #1
   12934:	beq	12be4 <__assert_fail@plt+0xdcc>
   12938:	ldr	r0, [r2, #24]
   1293c:	cmp	r5, r0
   12940:	bne	12988 <__assert_fail@plt+0xb70>
   12944:	add	r1, r9, sl
   12948:	rsb	r2, sl, #1024	; 0x400
   1294c:	mov	r0, r5
   12950:	bl	119d4 <read@plt>
   12954:	cmp	r0, #1
   12958:	blt	12ab0 <__assert_fail@plt+0xc98>
   1295c:	add	sl, r0, sl
   12960:	b	12afc <__assert_fail@plt+0xce4>
   12964:	tst	r0, #32
   12968:	bne	12a08 <__assert_fail@plt+0xbf0>
   1296c:	tst	r0, #8
   12970:	bne	12a88 <__assert_fail@plt+0xc70>
   12974:	tst	r0, #16
   12978:	beq	12be4 <__assert_fail@plt+0xdcc>
   1297c:	movw	r0, #59041	; 0xe6a1
   12980:	movt	r0, #1
   12984:	b	12a90 <__assert_fail@plt+0xc78>
   12988:	ldr	r1, [r2, #56]	; 0x38
   1298c:	ldr	r0, [r2, #60]	; 0x3c
   12990:	cmp	r5, r1
   12994:	cmpne	r5, r0
   12998:	bne	12a38 <__assert_fail@plt+0xc20>
   1299c:	mov	r0, #128	; 0x80
   129a0:	sub	r9, fp, #1040	; 0x410
   129a4:	mov	r1, #0
   129a8:	movw	r2, #1025	; 0x401
   129ac:	str	r0, [sp, #152]	; 0x98
   129b0:	mov	r0, r9
   129b4:	mov	r9, r3
   129b8:	bl	11c8c <memset@plt>
   129bc:	add	r0, sp, #152	; 0x98
   129c0:	mov	r2, #1024	; 0x400
   129c4:	mov	r3, #0
   129c8:	str	r9, [sp]
   129cc:	str	r0, [sp, #4]
   129d0:	mov	r0, r5
   129d4:	sub	r5, fp, #1040	; 0x410
   129d8:	mov	r1, r5
   129dc:	bl	11aa0 <recvfrom@plt>
   129e0:	cmp	r0, #1
   129e4:	blt	12bf4 <__assert_fail@plt+0xddc>
   129e8:	ldr	r1, [sp, #152]	; 0x98
   129ec:	strb	r8, [r5, r0]
   129f0:	mov	r0, r9
   129f4:	bl	139f4 <__assert_fail@plt+0x1bdc>
   129f8:	mov	r1, r5
   129fc:	bl	13848 <__assert_fail@plt+0x1a30>
   12a00:	add	r9, sp, #296	; 0x128
   12a04:	b	12c40 <__assert_fail@plt+0xe28>
   12a08:	movw	r0, #59020	; 0xe68c
   12a0c:	mov	r5, r2
   12a10:	movt	r0, #1
   12a14:	bl	1365c <__assert_fail@plt+0x1844>
   12a18:	mvn	r0, #0
   12a1c:	add	r3, sp, #24
   12a20:	mov	r2, r5
   12a24:	str	r0, [r7, r4, lsl #3]
   12a28:	add	r4, r4, #1
   12a2c:	cmp	r4, r6
   12a30:	bne	1291c <__assert_fail@plt+0xb04>
   12a34:	b	12894 <__assert_fail@plt+0xa7c>
   12a38:	mov	r0, #110	; 0x6e
   12a3c:	str	r3, [sp]
   12a40:	mov	r2, #1024	; 0x400
   12a44:	mov	r3, #0
   12a48:	str	r0, [sp, #152]	; 0x98
   12a4c:	add	r0, sp, #152	; 0x98
   12a50:	str	r0, [sp, #4]
   12a54:	mov	r0, r5
   12a58:	sub	r5, fp, #1040	; 0x410
   12a5c:	mov	r1, r5
   12a60:	bl	11aa0 <recvfrom@plt>
   12a64:	cmp	r0, #1
   12a68:	blt	12c1c <__assert_fail@plt+0xe04>
   12a6c:	strb	r8, [r5, r0]
   12a70:	movw	r0, #3136	; 0xc40
   12a74:	mov	r1, r5
   12a78:	movt	r0, #3
   12a7c:	ldr	r0, [r0]
   12a80:	bl	13848 <__assert_fail@plt+0x1a30>
   12a84:	b	12c40 <__assert_fail@plt+0xe28>
   12a88:	movw	r0, #59031	; 0xe697
   12a8c:	movt	r0, #1
   12a90:	mov	r5, r2
   12a94:	bl	1365c <__assert_fail@plt+0x1844>
   12a98:	add	r3, sp, #24
   12a9c:	mov	r2, r5
   12aa0:	add	r4, r4, #1
   12aa4:	cmp	r4, r6
   12aa8:	bne	1291c <__assert_fail@plt+0xb04>
   12aac:	b	12894 <__assert_fail@plt+0xa7c>
   12ab0:	cmn	r0, #1
   12ab4:	bgt	12afc <__assert_fail@plt+0xce4>
   12ab8:	bl	11c50 <__errno_location@plt>
   12abc:	ldr	r0, [r0]
   12ac0:	cmp	r0, #4
   12ac4:	beq	12afc <__assert_fail@plt+0xce4>
   12ac8:	movw	r0, #60994	; 0xee42
   12acc:	movt	r0, #1
   12ad0:	bl	1365c <__assert_fail@plt+0x1844>
   12ad4:	movw	r0, #1304	; 0x518
   12ad8:	mvn	r1, #0
   12adc:	movt	r0, #3
   12ae0:	str	r1, [r7, r4, lsl #3]
   12ae4:	str	r1, [r0, #24]
   12ae8:	b	12afc <__assert_fail@plt+0xce4>
   12aec:	mov	r0, r9
   12af0:	mov	r1, r5
   12af4:	mov	r2, sl
   12af8:	bl	11a04 <memmove@plt>
   12afc:	mov	r0, r9
   12b00:	mov	r1, #10
   12b04:	strb	r8, [r9, sl]
   12b08:	bl	11c38 <strchr@plt>
   12b0c:	cmp	r0, #0
   12b10:	beq	12b48 <__assert_fail@plt+0xd30>
   12b14:	mov	r5, r0
   12b18:	mov	r0, r9
   12b1c:	strb	r8, [r5], #1
   12b20:	bl	136f0 <__assert_fail@plt+0x18d8>
   12b24:	add	r0, sl, r9
   12b28:	mov	r1, #10
   12b2c:	sub	sl, r0, r5
   12b30:	mov	r0, r5
   12b34:	bl	11c38 <strchr@plt>
   12b38:	cmp	r0, #0
   12b3c:	mov	r9, r5
   12b40:	bne	12b14 <__assert_fail@plt+0xcfc>
   12b44:	b	12b4c <__assert_fail@plt+0xd34>
   12b48:	mov	r5, r9
   12b4c:	movw	r9, #1304	; 0x518
   12b50:	cmp	sl, #0
   12b54:	add	r3, sp, #24
   12b58:	movt	r9, #3
   12b5c:	mov	r2, r9
   12b60:	add	r9, sp, #296	; 0x128
   12b64:	beq	12c5c <__assert_fail@plt+0xe44>
   12b68:	ldrb	r0, [r5]
   12b6c:	cmp	r0, #0
   12b70:	bne	12b84 <__assert_fail@plt+0xd6c>
   12b74:	subs	sl, sl, #1
   12b78:	add	r5, r5, #1
   12b7c:	bne	12b68 <__assert_fail@plt+0xd50>
   12b80:	b	12be0 <__assert_fail@plt+0xdc8>
   12b84:	cmp	r9, r5
   12b88:	bne	12aec <__assert_fail@plt+0xcd4>
   12b8c:	cmp	sl, #1024	; 0x400
   12b90:	blt	12be4 <__assert_fail@plt+0xdcc>
   12b94:	mov	r0, r9
   12b98:	bl	136f0 <__assert_fail@plt+0x18d8>
   12b9c:	ldrb	r0, [sp, #296]	; 0x128
   12ba0:	cmp	r0, #60	; 0x3c
   12ba4:	bne	12bd8 <__assert_fail@plt+0xdc0>
   12ba8:	bl	11bfc <__ctype_b_loc@plt>
   12bac:	ldr	r0, [r0]
   12bb0:	ldrb	r1, [sp, #297]	; 0x129
   12bb4:	add	r0, r0, r1, lsl #1
   12bb8:	ldrh	r0, [r0]
   12bbc:	tst	r0, #2048	; 0x800
   12bc0:	beq	12bd8 <__assert_fail@plt+0xdc0>
   12bc4:	ldrb	r0, [sp, #298]	; 0x12a
   12bc8:	mov	sl, #3
   12bcc:	cmp	r0, #62	; 0x3e
   12bd0:	movne	sl, #0
   12bd4:	b	12afc <__assert_fail@plt+0xce4>
   12bd8:	mov	sl, #0
   12bdc:	b	12afc <__assert_fail@plt+0xce4>
   12be0:	mov	sl, #0
   12be4:	add	r4, r4, #1
   12be8:	cmp	r4, r6
   12bec:	bne	1291c <__assert_fail@plt+0xb04>
   12bf0:	b	12894 <__assert_fail@plt+0xa7c>
   12bf4:	cmn	r0, #1
   12bf8:	add	r9, sp, #296	; 0x128
   12bfc:	bgt	12c40 <__assert_fail@plt+0xe28>
   12c00:	bl	11c50 <__errno_location@plt>
   12c04:	ldr	r0, [r0]
   12c08:	cmp	r0, #4
   12c0c:	beq	12c40 <__assert_fail@plt+0xe28>
   12c10:	movw	r0, #58992	; 0xe670
   12c14:	movt	r0, #1
   12c18:	b	12c3c <__assert_fail@plt+0xe24>
   12c1c:	cmn	r0, #1
   12c20:	bgt	12c40 <__assert_fail@plt+0xe28>
   12c24:	bl	11c50 <__errno_location@plt>
   12c28:	ldr	r0, [r0]
   12c2c:	cmp	r0, #4
   12c30:	beq	12c40 <__assert_fail@plt+0xe28>
   12c34:	movw	r0, #59006	; 0xe67e
   12c38:	movt	r0, #1
   12c3c:	bl	1365c <__assert_fail@plt+0x1844>
   12c40:	movw	r2, #1304	; 0x518
   12c44:	add	r3, sp, #24
   12c48:	movt	r2, #3
   12c4c:	add	r4, r4, #1
   12c50:	cmp	r4, r6
   12c54:	bne	1291c <__assert_fail@plt+0xb04>
   12c58:	b	12894 <__assert_fail@plt+0xa7c>
   12c5c:	mov	sl, #0
   12c60:	add	r4, r4, #1
   12c64:	cmp	r4, r6
   12c68:	bne	1291c <__assert_fail@plt+0xb04>
   12c6c:	b	12894 <__assert_fail@plt+0xa7c>
   12c70:	ldr	r5, [sp, #296]	; 0x128
   12c74:	cmp	r5, #0
   12c78:	beq	12dac <__assert_fail@plt+0xf94>
   12c7c:	mov	sl, #1
   12c80:	mov	r9, #4
   12c84:	add	r8, sp, #24
   12c88:	str	sl, [sp, #24]
   12c8c:	ldmib	r5, {r0, r1, r2}
   12c90:	bl	11dac <socket@plt>
   12c94:	cmp	r0, #0
   12c98:	blt	12d8c <__assert_fail@plt+0xf74>
   12c9c:	mov	r1, #1
   12ca0:	mov	r2, #2
   12ca4:	mov	r3, r8
   12ca8:	mov	r4, r0
   12cac:	str	r9, [sp]
   12cb0:	bl	119b0 <setsockopt@plt>
   12cb4:	cmn	r0, #1
   12cb8:	ble	12d34 <__assert_fail@plt+0xf1c>
   12cbc:	ldr	r0, [r5, #4]
   12cc0:	cmp	r0, #10
   12cc4:	bne	12ce0 <__assert_fail@plt+0xec8>
   12cc8:	mov	r0, r4
   12ccc:	mov	r1, #41	; 0x29
   12cd0:	mov	r2, #26
   12cd4:	mov	r3, r8
   12cd8:	str	r9, [sp]
   12cdc:	bl	119b0 <setsockopt@plt>
   12ce0:	ldr	r2, [r5, #16]
   12ce4:	ldr	r1, [r5, #20]
   12ce8:	mov	r0, r4
   12cec:	bl	11c74 <bind@plt>
   12cf0:	cmn	r0, #1
   12cf4:	ble	12d50 <__assert_fail@plt+0xf38>
   12cf8:	ldr	r0, [r5, #4]
   12cfc:	cmp	r0, #2
   12d00:	bne	12d68 <__assert_fail@plt+0xf50>
   12d04:	movw	r1, #1304	; 0x518
   12d08:	movt	r1, #3
   12d0c:	ldr	r1, [r1, #56]	; 0x38
   12d10:	cmn	r1, #1
   12d14:	bgt	12d68 <__assert_fail@plt+0xf50>
   12d18:	movw	r0, #1304	; 0x518
   12d1c:	movt	r0, #3
   12d20:	str	r4, [r0, #56]	; 0x38
   12d24:	ldr	r5, [r5, #28]
   12d28:	cmp	r5, #0
   12d2c:	bne	12c88 <__assert_fail@plt+0xe70>
   12d30:	b	12d98 <__assert_fail@plt+0xf80>
   12d34:	movw	r0, #61672	; 0xf0e8
   12d38:	movt	r0, #1
   12d3c:	bl	1365c <__assert_fail@plt+0x1844>
   12d40:	ldr	r0, [r5, #4]
   12d44:	cmp	r0, #10
   12d48:	beq	12cc8 <__assert_fail@plt+0xeb0>
   12d4c:	b	12ce0 <__assert_fail@plt+0xec8>
   12d50:	mov	r0, r4
   12d54:	bl	11e00 <close@plt>
   12d58:	ldr	r5, [r5, #28]
   12d5c:	cmp	r5, #0
   12d60:	bne	12c88 <__assert_fail@plt+0xe70>
   12d64:	b	12d98 <__assert_fail@plt+0xf80>
   12d68:	cmp	r0, #10
   12d6c:	bne	12d8c <__assert_fail@plt+0xf74>
   12d70:	movw	r0, #1304	; 0x518
   12d74:	movt	r0, #3
   12d78:	ldr	r0, [r0, #60]	; 0x3c
   12d7c:	cmn	r0, #1
   12d80:	movwle	r0, #1304	; 0x518
   12d84:	movtle	r0, #3
   12d88:	strle	r4, [r0, #60]	; 0x3c
   12d8c:	ldr	r5, [r5, #28]
   12d90:	cmp	r5, #0
   12d94:	bne	12c88 <__assert_fail@plt+0xe70>
   12d98:	ldr	r4, [sp, #296]	; 0x128
   12d9c:	movw	r9, #1304	; 0x518
   12da0:	movt	r9, #3
   12da4:	mov	r8, r9
   12da8:	add	r9, sp, #296	; 0x128
   12dac:	mov	r0, r4
   12db0:	bl	11d94 <freeaddrinfo@plt>
   12db4:	ldr	r0, [r8, #56]	; 0x38
   12db8:	ldr	r1, [r8, #60]	; 0x3c
   12dbc:	mov	ip, r8
   12dc0:	and	r1, r1, r0
   12dc4:	cmn	r1, #1
   12dc8:	bgt	12730 <__assert_fail@plt+0x918>
   12dcc:	movw	r0, #61699	; 0xf103
   12dd0:	movt	r0, #1
   12dd4:	b	12710 <__assert_fail@plt+0x8f8>
   12dd8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ddc:	add	fp, sp, #24
   12de0:	sub	sp, sp, #40	; 0x28
   12de4:	movw	r8, #1304	; 0x518
   12de8:	mov	r4, r0
   12dec:	movw	r0, #60297	; 0xeb89
   12df0:	add	r9, sp, #8
   12df4:	movw	r6, #58379	; 0xe40b
   12df8:	vmov.i32	q8, #0	; 0x00000000
   12dfc:	add	r3, sp, #4
   12e00:	movt	r8, #3
   12e04:	movt	r0, #1
   12e08:	add	r7, r9, #4
   12e0c:	add	r5, r9, #16
   12e10:	movt	r6, #1
   12e14:	mov	r2, r9
   12e18:	str	r0, [r8, #32]
   12e1c:	mov	r0, #1
   12e20:	vst1.32	{d16-d17}, [r7]
   12e24:	vst1.32	{d16-d17}, [r5]
   12e28:	mov	r1, r6
   12e2c:	str	r0, [sp, #8]
   12e30:	mov	r0, #2
   12e34:	str	r0, [sp, #16]
   12e38:	mov	r0, #0
   12e3c:	bl	11da0 <getaddrinfo@plt>
   12e40:	cmp	r0, #0
   12e44:	beq	12ea8 <__assert_fail@plt+0x1090>
   12e48:	cmp	r4, #0
   12e4c:	str	r4, [r8, #28]
   12e50:	beq	12ec0 <__assert_fail@plt+0x10a8>
   12e54:	vmov.i32	q8, #0	; 0x00000000
   12e58:	mov	r0, #1
   12e5c:	add	r3, sp, #4
   12e60:	mov	r1, r4
   12e64:	mov	r2, r9
   12e68:	vst1.32	{d16-d17}, [r7]
   12e6c:	vst1.32	{d16-d17}, [r5]
   12e70:	str	r0, [sp, #8]
   12e74:	mov	r0, #2
   12e78:	mov	r5, #0
   12e7c:	str	r0, [sp, #16]
   12e80:	mov	r0, #0
   12e84:	bl	11da0 <getaddrinfo@plt>
   12e88:	cmp	r0, #0
   12e8c:	strne	r5, [r8, #28]
   12e90:	subne	sp, fp, #24
   12e94:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e98:	ldr	r0, [sp, #4]
   12e9c:	bl	11d94 <freeaddrinfo@plt>
   12ea0:	sub	sp, fp, #24
   12ea4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12ea8:	ldr	r0, [sp, #4]
   12eac:	str	r6, [r8, #32]
   12eb0:	bl	11d94 <freeaddrinfo@plt>
   12eb4:	cmp	r4, #0
   12eb8:	str	r4, [r8, #28]
   12ebc:	bne	12e54 <__assert_fail@plt+0x103c>
   12ec0:	ldr	r0, [r8, #32]
   12ec4:	str	r0, [r8, #28]
   12ec8:	sub	sp, fp, #24
   12ecc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12ed0:	push	{fp, lr}
   12ed4:	mov	fp, sp
   12ed8:	mov	r0, #0
   12edc:	bl	11a4c <_exit@plt>
   12ee0:	push	{fp, lr}
   12ee4:	mov	fp, sp
   12ee8:	sub	sp, sp, #104	; 0x68
   12eec:	movw	r8, #3128	; 0xc38
   12ef0:	mov	r4, r0
   12ef4:	mov	r0, #0
   12ef8:	movt	r8, #3
   12efc:	ldr	r7, [r8]
   12f00:	str	r0, [r8]
   12f04:	movw	r0, #2640	; 0xa50
   12f08:	movt	r0, #3
   12f0c:	ldr	r5, [r0]
   12f10:	cmp	r5, #0
   12f14:	beq	12f4c <__assert_fail@plt+0x1134>
   12f18:	movw	r6, #3136	; 0xc40
   12f1c:	movt	r6, #3
   12f20:	ldr	r0, [r5, #452]	; 0x1c4
   12f24:	cmp	r0, #0
   12f28:	beq	12f40 <__assert_fail@plt+0x1128>
   12f2c:	ldr	r1, [r6]
   12f30:	mov	r0, r5
   12f34:	mov	r2, #0
   12f38:	mov	r3, #0
   12f3c:	bl	143c4 <__assert_fail@plt+0x25ac>
   12f40:	ldr	r5, [r5]
   12f44:	cmp	r5, #0
   12f48:	bne	12f20 <__assert_fail@plt+0x1108>
   12f4c:	cmp	r4, #0
   12f50:	str	r7, [r8]
   12f54:	beq	12fa4 <__assert_fail@plt+0x118c>
   12f58:	movw	r0, #1492	; 0x5d4
   12f5c:	mov	r2, r4
   12f60:	movt	r0, #3
   12f64:	ldr	r1, [r0]
   12f68:	movw	r0, #59905	; 0xea01
   12f6c:	movt	r0, #1
   12f70:	bl	135c4 <__assert_fail@plt+0x17ac>
   12f74:	movw	r2, #59931	; 0xea1b
   12f78:	add	r5, sp, #4
   12f7c:	mov	r1, #100	; 0x64
   12f80:	mov	r3, r4
   12f84:	movt	r2, #1
   12f88:	mov	r0, r5
   12f8c:	bl	11c5c <snprintf@plt>
   12f90:	bl	11c50 <__errno_location@plt>
   12f94:	mov	r1, #0
   12f98:	str	r1, [r0]
   12f9c:	mov	r0, r5
   12fa0:	bl	1365c <__assert_fail@plt+0x1844>
   12fa4:	movw	r4, #1304	; 0x518
   12fa8:	movt	r4, #3
   12fac:	ldr	r0, [r4, #24]
   12fb0:	cmp	r0, #0
   12fb4:	blt	12fbc <__assert_fail@plt+0x11a4>
   12fb8:	bl	11e00 <close@plt>
   12fbc:	movw	r5, #3112	; 0xc28
   12fc0:	movt	r5, #3
   12fc4:	ldr	r0, [r5]
   12fc8:	cmp	r0, #0
   12fcc:	beq	13018 <__assert_fail@plt+0x1200>
   12fd0:	movw	r7, #3208	; 0xc88
   12fd4:	mov	r6, #0
   12fd8:	movt	r7, #3
   12fdc:	ldr	r0, [r7]
   12fe0:	add	r0, r0, r6, lsl #3
   12fe4:	ldr	r0, [r0, #4]
   12fe8:	cmp	r0, #0
   12fec:	blt	13008 <__assert_fail@plt+0x11f0>
   12ff0:	bl	11e00 <close@plt>
   12ff4:	ldr	r0, [r7]
   12ff8:	ldr	r0, [r0, r6, lsl #3]
   12ffc:	cmp	r0, #0
   13000:	beq	13008 <__assert_fail@plt+0x11f0>
   13004:	bl	11adc <unlink@plt>
   13008:	ldr	r0, [r5]
   1300c:	add	r6, r6, #1
   13010:	cmp	r6, r0
   13014:	bcc	12fdc <__assert_fail@plt+0x11c4>
   13018:	ldr	r0, [r4, #56]	; 0x38
   1301c:	cmp	r0, #0
   13020:	bge	13038 <__assert_fail@plt+0x1220>
   13024:	ldr	r0, [r4, #60]	; 0x3c
   13028:	cmp	r0, #0
   1302c:	bge	13048 <__assert_fail@plt+0x1230>
   13030:	mov	r0, #0
   13034:	bl	11c14 <exit@plt>
   13038:	bl	11e00 <close@plt>
   1303c:	ldr	r0, [r4, #60]	; 0x3c
   13040:	cmp	r0, #0
   13044:	blt	13030 <__assert_fail@plt+0x1218>
   13048:	bl	11e00 <close@plt>
   1304c:	mov	r0, #0
   13050:	bl	11c14 <exit@plt>
   13054:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13058:	add	fp, sp, #24
   1305c:	mov	r0, #0
   13060:	bl	11a70 <time@plt>
   13064:	movw	r6, #3200	; 0xc80
   13068:	movw	r7, #1304	; 0x518
   1306c:	movt	r6, #3
   13070:	movt	r7, #3
   13074:	str	r0, [r6]
   13078:	ldr	r0, [r7, #36]	; 0x24
   1307c:	cmp	r0, #1
   13080:	blt	130c8 <__assert_fail@plt+0x12b0>
   13084:	movw	r4, #3212	; 0xc8c
   13088:	movt	r4, #3
   1308c:	ldr	r1, [r4]
   13090:	add	r1, r1, #30
   13094:	cmp	r1, r0
   13098:	str	r1, [r4]
   1309c:	blt	130c8 <__assert_fail@plt+0x12b0>
   130a0:	movw	r0, #3136	; 0xc40
   130a4:	movw	r1, #59828	; 0xe9b4
   130a8:	mov	r3, #12
   130ac:	movt	r0, #3
   130b0:	movt	r1, #1
   130b4:	ldr	r2, [r0]
   130b8:	mov	r0, #6
   130bc:	bl	13dac <__assert_fail@plt+0x1f94>
   130c0:	mov	r0, #0
   130c4:	str	r0, [r4]
   130c8:	movw	r0, #2640	; 0xa50
   130cc:	movt	r0, #3
   130d0:	ldr	r4, [r0]
   130d4:	cmp	r4, #0
   130d8:	beq	13164 <__assert_fail@plt+0x134c>
   130dc:	movw	r8, #712	; 0x2c8
   130e0:	movw	r9, #59839	; 0xe9bf
   130e4:	movw	r5, #3136	; 0xc40
   130e8:	movt	r8, #3
   130ec:	movt	r9, #1
   130f0:	movt	r5, #3
   130f4:	ldr	r2, [r4, #452]	; 0x1c4
   130f8:	cmp	r2, #0
   130fc:	beq	13158 <__assert_fail@plt+0x1340>
   13100:	ldr	r1, [r4, #456]	; 0x1c8
   13104:	ldr	r0, [r4, #8]
   13108:	add	r1, r7, r1, lsl #2
   1310c:	ldr	r3, [r1, #48]	; 0x30
   13110:	ldr	r1, [r6]
   13114:	add	r0, r3, r0
   13118:	cmp	r1, r0
   1311c:	blt	13158 <__assert_fail@plt+0x1340>
   13120:	ldrsh	r0, [r4, #4]
   13124:	ldr	r1, [r8, r0, lsl #2]
   13128:	mov	r0, r9
   1312c:	bl	135c4 <__assert_fail@plt+0x17ac>
   13130:	ldr	r1, [r5]
   13134:	mov	r0, r4
   13138:	mov	r2, #0
   1313c:	mov	r3, #0
   13140:	bl	143c4 <__assert_fail@plt+0x25ac>
   13144:	ldr	r0, [r4, #456]	; 0x1c8
   13148:	add	r1, r0, #1
   1314c:	cmn	r0, #1
   13150:	movwne	r1, #1
   13154:	str	r1, [r4, #456]	; 0x1c8
   13158:	ldr	r4, [r4]
   1315c:	cmp	r4, #0
   13160:	bne	130f4 <__assert_fail@plt+0x12dc>
   13164:	mov	r0, #30
   13168:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1316c:	b	11ac4 <alarm@plt>
   13170:	push	{r4, r5, fp, lr}
   13174:	add	fp, sp, #8
   13178:	movw	r4, #1532	; 0x5fc
   1317c:	mov	r0, #1
   13180:	movw	r1, #60291	; 0xeb83
   13184:	movt	r4, #3
   13188:	movt	r1, #1
   1318c:	ldr	r5, [r4, #4]
   13190:	str	r0, [r4, #4]
   13194:	movw	r0, #60286	; 0xeb7e
   13198:	movt	r0, #1
   1319c:	cmp	r5, #0
   131a0:	moveq	r1, r0
   131a4:	movw	r0, #60257	; 0xeb61
   131a8:	movt	r0, #1
   131ac:	bl	135c4 <__assert_fail@plt+0x17ac>
   131b0:	clz	r0, r5
   131b4:	lsr	r0, r0, #5
   131b8:	str	r0, [r4, #4]
   131bc:	pop	{r4, r5, fp, pc}
   131c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131c4:	add	fp, sp, #28
   131c8:	sub	sp, sp, #116	; 0x74
   131cc:	movw	r0, #59952	; 0xea30
   131d0:	movt	r0, #1
   131d4:	bl	135c4 <__assert_fail@plt+0x17ac>
   131d8:	movw	r0, #3128	; 0xc38
   131dc:	mov	r8, #0
   131e0:	movt	r0, #3
   131e4:	str	r8, [r0]
   131e8:	movw	r0, #2640	; 0xa50
   131ec:	movt	r0, #3
   131f0:	ldr	r5, [r0]
   131f4:	cmp	r5, #0
   131f8:	beq	132d0 <__assert_fail@plt+0x14b8>
   131fc:	movw	sl, #3136	; 0xc40
   13200:	mov	r6, #1
   13204:	movw	r7, #526	; 0x20e
   13208:	mov	r9, #400	; 0x190
   1320c:	movt	sl, #3
   13210:	b	13250 <__assert_fail@plt+0x1438>
   13214:	cmp	r0, #5
   13218:	bne	132ac <__assert_fail@plt+0x1494>
   1321c:	ldr	r1, [r4, #40]	; 0x28
   13220:	ldr	r0, [r4, #44]	; 0x2c
   13224:	cmp	r1, #1
   13228:	blt	13294 <__assert_fail@plt+0x147c>
   1322c:	mov	r5, #0
   13230:	ldr	r0, [r0, r5, lsl #2]
   13234:	bl	1b7d4 <argp_parse@@Base+0x1590>
   13238:	ldr	r1, [r4, #40]	; 0x28
   1323c:	ldr	r0, [r4, #44]	; 0x2c
   13240:	add	r5, r5, #1
   13244:	cmp	r5, r1
   13248:	blt	13230 <__assert_fail@plt+0x1418>
   1324c:	b	13294 <__assert_fail@plt+0x147c>
   13250:	ldr	r0, [r5, #452]	; 0x1c4
   13254:	mov	r4, r5
   13258:	cmp	r0, #0
   1325c:	beq	13274 <__assert_fail@plt+0x145c>
   13260:	ldr	r1, [sl]
   13264:	mov	r0, r4
   13268:	mov	r2, #0
   1326c:	mov	r3, #0
   13270:	bl	143c4 <__assert_fail@plt+0x25ac>
   13274:	ldrsh	r0, [r4, #4]
   13278:	cmp	r0, #9
   1327c:	bhi	132ac <__assert_fail@plt+0x1494>
   13280:	tst	r7, r6, lsl r0
   13284:	bne	1329c <__assert_fail@plt+0x1484>
   13288:	tst	r9, r6, lsl r0
   1328c:	beq	13214 <__assert_fail@plt+0x13fc>
   13290:	ldr	r0, [r4, #40]	; 0x28
   13294:	bl	1b7d4 <argp_parse@@Base+0x1590>
   13298:	b	132ac <__assert_fail@plt+0x1494>
   1329c:	ldr	r0, [r4, #40]	; 0x28
   132a0:	bl	1b7d4 <argp_parse@@Base+0x1590>
   132a4:	ldrsh	r0, [r4, #6]
   132a8:	bl	11e00 <close@plt>
   132ac:	ldr	r0, [r4, #436]	; 0x1b4
   132b0:	bl	1b7d4 <argp_parse@@Base+0x1590>
   132b4:	ldr	r0, [r4, #432]	; 0x1b0
   132b8:	bl	1b7d4 <argp_parse@@Base+0x1590>
   132bc:	ldr	r5, [r4]
   132c0:	mov	r0, r4
   132c4:	bl	1b7d4 <argp_parse@@Base+0x1590>
   132c8:	cmp	r5, #0
   132cc:	bne	13250 <__assert_fail@plt+0x1438>
   132d0:	movw	r0, #2636	; 0xa4c
   132d4:	movw	r4, #1304	; 0x518
   132d8:	movt	r0, #3
   132dc:	movt	r4, #3
   132e0:	str	r8, [r0]
   132e4:	movw	r0, #2640	; 0xa50
   132e8:	movt	r0, #3
   132ec:	str	r8, [r0]
   132f0:	ldr	r0, [r4]
   132f4:	bl	14cd8 <__assert_fail@plt+0x2ec0>
   132f8:	ldr	r5, [r4, #4]
   132fc:	str	r0, [sp]
   13300:	mov	r0, r5
   13304:	bl	11b84 <opendir@plt>
   13308:	cmp	r0, #0
   1330c:	beq	133e0 <__assert_fail@plt+0x15c8>
   13310:	mov	r6, r0
   13314:	bl	11d4c <readdir64@plt>
   13318:	cmp	r0, #0
   1331c:	beq	133f4 <__assert_fail@plt+0x15dc>
   13320:	movw	r7, #61856	; 0xf1a0
   13324:	mov	r8, #0
   13328:	add	r4, sp, #4
   1332c:	add	r9, sp, #8
   13330:	mov	sl, #0
   13334:	movt	r7, #1
   13338:	add	r3, r0, #19
   1333c:	mov	r0, r4
   13340:	mov	r1, r7
   13344:	mov	r2, r5
   13348:	bl	11ca4 <asprintf@plt>
   1334c:	cmn	r0, #1
   13350:	ble	13400 <__assert_fail@plt+0x15e8>
   13354:	ldr	r1, [sp, #4]
   13358:	mov	r0, #3
   1335c:	mov	r2, r9
   13360:	bl	11dc4 <__xstat64@plt>
   13364:	cmp	r0, #0
   13368:	beq	1338c <__assert_fail@plt+0x1574>
   1336c:	movw	r0, #61912	; 0xf1d8
   13370:	movt	r0, #1
   13374:	bl	135c4 <__assert_fail@plt+0x17ac>
   13378:	mov	r0, r6
   1337c:	bl	11d4c <readdir64@plt>
   13380:	cmp	r0, #0
   13384:	bne	13338 <__assert_fail@plt+0x1520>
   13388:	b	133c4 <__assert_fail@plt+0x15ac>
   1338c:	ldr	r0, [sp, #24]
   13390:	and	r0, r0, #61440	; 0xf000
   13394:	cmp	r0, #32768	; 0x8000
   13398:	bne	133ac <__assert_fail@plt+0x1594>
   1339c:	ldr	r0, [sp, #4]
   133a0:	bl	14cd8 <__assert_fail@plt+0x2ec0>
   133a4:	add	r8, r0, r8
   133a8:	add	sl, sl, #1
   133ac:	ldr	r0, [sp, #4]
   133b0:	bl	1b7d4 <argp_parse@@Base+0x1590>
   133b4:	mov	r0, r6
   133b8:	bl	11d4c <readdir64@plt>
   133bc:	cmp	r0, #0
   133c0:	bne	13338 <__assert_fail@plt+0x1520>
   133c4:	mov	r0, r6
   133c8:	bl	11e0c <closedir@plt>
   133cc:	cmp	sl, #0
   133d0:	beq	13414 <__assert_fail@plt+0x15fc>
   133d4:	cmp	r8, #0
   133d8:	beq	1340c <__assert_fail@plt+0x15f4>
   133dc:	b	13414 <__assert_fail@plt+0x15fc>
   133e0:	movw	r0, #61728	; 0xf120
   133e4:	mov	r1, r5
   133e8:	movt	r0, #1
   133ec:	bl	135c4 <__assert_fail@plt+0x17ac>
   133f0:	b	13414 <__assert_fail@plt+0x15fc>
   133f4:	mov	r0, r6
   133f8:	bl	11e0c <closedir@plt>
   133fc:	b	13414 <__assert_fail@plt+0x15fc>
   13400:	movw	r0, #61862	; 0xf1a6
   13404:	movt	r0, #1
   13408:	bl	135c4 <__assert_fail@plt+0x17ac>
   1340c:	mov	r0, #0
   13410:	str	r0, [sp]
   13414:	movw	r1, #3128	; 0xc38
   13418:	mov	r0, #1
   1341c:	movt	r1, #3
   13420:	str	r0, [r1]
   13424:	movw	r0, #3116	; 0xc2c
   13428:	movt	r0, #3
   1342c:	ldr	r0, [r0]
   13430:	cmp	r0, #0
   13434:	beq	1354c <__assert_fail@plt+0x1734>
   13438:	movw	r0, #2640	; 0xa50
   1343c:	movt	r0, #3
   13440:	ldr	r8, [r0]
   13444:	cmp	r8, #0
   13448:	beq	1354c <__assert_fail@plt+0x1734>
   1344c:	movw	r5, #59958	; 0xea36
   13450:	movw	r4, #59972	; 0xea44
   13454:	movw	r6, #59962	; 0xea3a
   13458:	mov	r9, #1
   1345c:	movt	r5, #1
   13460:	movt	r4, #1
   13464:	movt	r6, #1
   13468:	b	134a8 <__assert_fail@plt+0x1690>
   1346c:	cmp	r0, #5
   13470:	bne	13534 <__assert_fail@plt+0x171c>
   13474:	ldr	r0, [r8, #40]	; 0x28
   13478:	cmp	r0, #1
   1347c:	blt	13534 <__assert_fail@plt+0x171c>
   13480:	mov	r7, #0
   13484:	ldr	r0, [r8, #44]	; 0x2c
   13488:	ldr	r1, [r0, r7, lsl #2]
   1348c:	mov	r0, r4
   13490:	bl	135c4 <__assert_fail@plt+0x17ac>
   13494:	ldr	r0, [r8, #40]	; 0x28
   13498:	add	r7, r7, #1
   1349c:	cmp	r7, r0
   134a0:	blt	13484 <__assert_fail@plt+0x166c>
   134a4:	b	13534 <__assert_fail@plt+0x171c>
   134a8:	add	sl, r8, #12
   134ac:	mov	r7, #0
   134b0:	ldrb	r1, [sl, -r7]
   134b4:	cmp	r1, #0
   134b8:	beq	134d4 <__assert_fail@plt+0x16bc>
   134bc:	mov	r0, r6
   134c0:	bl	135c4 <__assert_fail@plt+0x17ac>
   134c4:	sub	r7, r7, #1
   134c8:	cmn	r7, #25
   134cc:	bne	134b0 <__assert_fail@plt+0x1698>
   134d0:	b	134e8 <__assert_fail@plt+0x16d0>
   134d4:	mov	r0, r5
   134d8:	bl	135c4 <__assert_fail@plt+0x17ac>
   134dc:	sub	r7, r7, #1
   134e0:	cmn	r7, #25
   134e4:	bne	134b0 <__assert_fail@plt+0x1698>
   134e8:	ldrsh	r0, [r8, #4]
   134ec:	movw	r1, #712	; 0x2c8
   134f0:	movt	r1, #3
   134f4:	ldr	r1, [r1, r0, lsl #2]
   134f8:	movw	r0, #59967	; 0xea3f
   134fc:	movt	r0, #1
   13500:	bl	135c4 <__assert_fail@plt+0x17ac>
   13504:	ldrsh	r0, [r8, #4]
   13508:	cmp	r0, #9
   1350c:	bhi	13534 <__assert_fail@plt+0x171c>
   13510:	movw	r1, #526	; 0x20e
   13514:	tst	r1, r9, lsl r0
   13518:	moveq	r1, #400	; 0x190
   1351c:	tsteq	r1, r9, lsl r0
   13520:	beq	1346c <__assert_fail@plt+0x1654>
   13524:	ldr	r1, [r8, #40]	; 0x28
   13528:	movw	r0, #62404	; 0xf3c4
   1352c:	movt	r0, #1
   13530:	bl	135c4 <__assert_fail@plt+0x17ac>
   13534:	movw	r0, #59212	; 0xe74c
   13538:	movt	r0, #1
   1353c:	bl	135c4 <__assert_fail@plt+0x17ac>
   13540:	ldr	r8, [r8]
   13544:	cmp	r8, #0
   13548:	bne	134a8 <__assert_fail@plt+0x1690>
   1354c:	movw	r0, #2632	; 0xa48
   13550:	movw	r4, #3136	; 0xc40
   13554:	movt	r0, #3
   13558:	movt	r4, #3
   1355c:	ldr	r0, [r0]
   13560:	ldr	r2, [r4]
   13564:	cmp	r0, #0
   13568:	beq	13578 <__assert_fail@plt+0x1760>
   1356c:	movw	r1, #59977	; 0xea49
   13570:	movt	r1, #1
   13574:	b	13580 <__assert_fail@plt+0x1768>
   13578:	movw	r1, #60042	; 0xea8a
   1357c:	movt	r1, #1
   13580:	mov	r0, #46	; 0x2e
   13584:	mov	r3, #4
   13588:	bl	13dac <__assert_fail@plt+0x1f94>
   1358c:	ldr	r0, [sp]
   13590:	cmp	r0, #0
   13594:	bne	135b0 <__assert_fail@plt+0x1798>
   13598:	ldr	r2, [r4]
   1359c:	movw	r1, #60088	; 0xeab8
   135a0:	mov	r0, #43	; 0x2b
   135a4:	mov	r3, #4
   135a8:	movt	r1, #1
   135ac:	bl	13dac <__assert_fail@plt+0x1f94>
   135b0:	movw	r0, #60123	; 0xeadb
   135b4:	movt	r0, #1
   135b8:	bl	135c4 <__assert_fail@plt+0x17ac>
   135bc:	sub	sp, fp, #28
   135c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135c4:	sub	sp, sp, #12
   135c8:	push	{r4, sl, fp, lr}
   135cc:	add	fp, sp, #8
   135d0:	sub	sp, sp, #4
   135d4:	mov	ip, r0
   135d8:	add	r0, fp, #8
   135dc:	stm	r0, {r1, r2, r3}
   135e0:	movw	r0, #3140	; 0xc44
   135e4:	movt	r0, #3
   135e8:	ldr	r0, [r0]
   135ec:	cmp	r0, #0
   135f0:	movwne	r0, #1532	; 0x5fc
   135f4:	movtne	r0, #3
   135f8:	ldrne	r0, [r0, #4]
   135fc:	cmpne	r0, #0
   13600:	bne	13614 <__assert_fail@plt+0x17fc>
   13604:	sub	sp, fp, #8
   13608:	pop	{r4, sl, fp, lr}
   1360c:	add	sp, sp, #12
   13610:	bx	lr
   13614:	movw	r4, #1500	; 0x5dc
   13618:	add	r2, fp, #8
   1361c:	mov	r1, ip
   13620:	movt	r4, #3
   13624:	str	r2, [sp]
   13628:	ldr	r0, [r4]
   1362c:	bl	11d34 <vfprintf@plt>
   13630:	ldr	r0, [r4]
   13634:	bl	119e0 <fflush@plt>
   13638:	sub	sp, fp, #8
   1363c:	pop	{r4, sl, fp, lr}
   13640:	add	sp, sp, #12
   13644:	bx	lr
   13648:	movw	r0, #1532	; 0x5fc
   1364c:	mov	r1, #1
   13650:	movt	r0, #3
   13654:	strb	r1, [r0]
   13658:	bx	lr
   1365c:	push	{r4, r5, fp, lr}
   13660:	add	fp, sp, #8
   13664:	sub	sp, sp, #104	; 0x68
   13668:	mov	r5, r0
   1366c:	bl	11c50 <__errno_location@plt>
   13670:	mov	r4, r0
   13674:	ldr	r0, [r0]
   13678:	cmp	r0, #0
   1367c:	beq	13698 <__assert_fail@plt+0x1880>
   13680:	bl	11bcc <strerror@plt>
   13684:	movw	r2, #59877	; 0xe9e5
   13688:	str	r0, [sp]
   1368c:	add	r0, sp, #4
   13690:	movt	r2, #1
   13694:	b	136a4 <__assert_fail@plt+0x188c>
   13698:	movw	r2, #59893	; 0xe9f5
   1369c:	add	r0, sp, #4
   136a0:	movt	r2, #1
   136a4:	mov	r1, #100	; 0x64
   136a8:	mov	r3, r5
   136ac:	bl	11c5c <snprintf@plt>
   136b0:	mov	r0, #0
   136b4:	str	r0, [r4]
   136b8:	movw	r0, #63715	; 0xf8e3
   136bc:	add	r4, sp, #4
   136c0:	movt	r0, #1
   136c4:	mov	r1, r4
   136c8:	bl	135c4 <__assert_fail@plt+0x17ac>
   136cc:	movw	r0, #3136	; 0xc40
   136d0:	mov	r1, r4
   136d4:	mov	r3, #4
   136d8:	movt	r0, #3
   136dc:	ldr	r2, [r0]
   136e0:	mov	r0, #43	; 0x2b
   136e4:	bl	13dac <__assert_fail@plt+0x1f94>
   136e8:	sub	sp, fp, #8
   136ec:	pop	{r4, r5, fp, pc}
   136f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136f4:	add	fp, sp, #28
   136f8:	sub	sp, sp, #12
   136fc:	sub	sp, sp, #1024	; 0x400
   13700:	mov	r6, r0
   13704:	movw	r0, #61976	; 0xf218
   13708:	mov	r8, sp
   1370c:	mov	sl, #0
   13710:	movt	r0, #1
   13714:	strb	sl, [sp, #8]
   13718:	vldr	d16, [r0]
   1371c:	mov	r0, r8
   13720:	vstr	d16, [sp]
   13724:	bl	11c20 <strlen@plt>
   13728:	movw	r9, #3136	; 0xc40
   1372c:	add	r7, r8, r0
   13730:	add	r4, r8, #1024	; 0x400
   13734:	movt	r9, #3
   13738:	ldrb	r1, [r6]
   1373c:	cmp	r1, #60	; 0x3c
   13740:	bne	13764 <__assert_fail@plt+0x194c>
   13744:	b	137b4 <__assert_fail@plt+0x199c>
   13748:	strb	sl, [r2]
   1374c:	ldr	r2, [r9]
   13750:	mov	r1, r8
   13754:	bl	13dac <__assert_fail@plt+0x1f94>
   13758:	ldrb	r1, [r6]
   1375c:	cmp	r1, #60	; 0x3c
   13760:	beq	137b4 <__assert_fail@plt+0x199c>
   13764:	cmp	r1, #0
   13768:	subeq	sp, fp, #28
   1376c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13770:	mov	r0, #2
   13774:	mov	r3, #7
   13778:	cmp	r1, #0
   1377c:	beq	13840 <__assert_fail@plt+0x1a28>
   13780:	add	r5, r6, #1
   13784:	mov	r2, r7
   13788:	mov	r6, r5
   1378c:	cmp	r2, r4
   13790:	bcs	13748 <__assert_fail@plt+0x1930>
   13794:	uxtb	r5, r1
   13798:	cmp	r5, #10
   1379c:	strbne	r1, [r2], #1
   137a0:	movne	r5, r6
   137a4:	ldrbne	r1, [r5], #1
   137a8:	cmpne	r1, #0
   137ac:	bne	13788 <__assert_fail@plt+0x1970>
   137b0:	b	13748 <__assert_fail@plt+0x1930>
   137b4:	bl	11bfc <__ctype_b_loc@plt>
   137b8:	mov	r3, r6
   137bc:	ldr	r2, [r0]
   137c0:	ldrb	r1, [r3, #1]!
   137c4:	add	r0, r2, r1, lsl #1
   137c8:	ldrb	r0, [r0, #1]
   137cc:	tst	r0, #8
   137d0:	bne	137f8 <__assert_fail@plt+0x19e0>
   137d4:	cmp	r1, #62	; 0x3e
   137d8:	mov	r0, #0
   137dc:	addeq	r3, r6, #2
   137e0:	mov	r6, r3
   137e4:	ldrb	r1, [r6]
   137e8:	mov	r3, #6
   137ec:	cmp	r1, #0
   137f0:	bne	13780 <__assert_fail@plt+0x1968>
   137f4:	b	13840 <__assert_fail@plt+0x1a28>
   137f8:	add	r6, r6, #2
   137fc:	mov	r0, #0
   13800:	add	r0, r0, r0, lsl #2
   13804:	add	r0, r1, r0, lsl #1
   13808:	ldrb	r1, [r6], #1
   1380c:	sub	r0, r0, #48	; 0x30
   13810:	add	r3, r2, r1, lsl #1
   13814:	ldrb	r3, [r3, #1]
   13818:	tst	r3, #8
   1381c:	bne	13800 <__assert_fail@plt+0x19e8>
   13820:	cmp	r1, #62	; 0x3e
   13824:	subne	r6, r6, #1
   13828:	cmp	sl, r0, lsr #10
   1382c:	movwne	r0, #2
   13830:	ldrb	r1, [r6]
   13834:	mov	r3, #6
   13838:	cmp	r1, #0
   1383c:	bne	13780 <__assert_fail@plt+0x1968>
   13840:	mov	r2, r7
   13844:	b	13748 <__assert_fail@plt+0x1930>
   13848:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1384c:	add	fp, sp, #24
   13850:	sub	sp, sp, #8
   13854:	sub	sp, sp, #1024	; 0x400
   13858:	ldrb	r4, [r1]
   1385c:	mov	r6, r1
   13860:	mov	r8, r0
   13864:	cmp	r4, #60	; 0x3c
   13868:	bne	138a0 <__assert_fail@plt+0x1a88>
   1386c:	bl	11bfc <__ctype_b_loc@plt>
   13870:	mov	r3, r6
   13874:	ldr	r2, [r0]
   13878:	ldrb	r1, [r3, #1]!
   1387c:	add	r0, r2, r1, lsl #1
   13880:	ldrb	r0, [r0, #1]
   13884:	tst	r0, #8
   13888:	bne	138a8 <__assert_fail@plt+0x1a90>
   1388c:	cmp	r1, #62	; 0x3e
   13890:	mov	r0, #0
   13894:	addeq	r3, r6, #2
   13898:	mov	r6, r3
   1389c:	b	138e4 <__assert_fail@plt+0x1acc>
   138a0:	mov	r0, #13
   138a4:	b	138e8 <__assert_fail@plt+0x1ad0>
   138a8:	add	r6, r6, #2
   138ac:	mov	r0, #0
   138b0:	add	r0, r0, r0, lsl #2
   138b4:	add	r0, r1, r0, lsl #1
   138b8:	ldrb	r1, [r6], #1
   138bc:	sub	r0, r0, #48	; 0x30
   138c0:	add	r3, r2, r1, lsl #1
   138c4:	ldrb	r3, [r3, #1]
   138c8:	tst	r3, #8
   138cc:	bne	138b0 <__assert_fail@plt+0x1a98>
   138d0:	cmp	r1, #62	; 0x3e
   138d4:	mov	r1, #0
   138d8:	subne	r6, r6, #1
   138dc:	cmp	r1, r0, lsr #10
   138e0:	movwne	r0, #13
   138e4:	ldrb	r4, [r6]
   138e8:	and	r1, r0, #1016	; 0x3f8
   138ec:	add	r7, sp, #3
   138f0:	cmp	r1, #192	; 0xc0
   138f4:	mov	r1, #1
   138f8:	movwhi	r0, #13
   138fc:	mov	r9, r0
   13900:	tst	r0, #1016	; 0x3f8
   13904:	bfi	r9, r1, #3, #29
   13908:	movne	r9, r0
   1390c:	cmp	r4, #0
   13910:	beq	139bc <__assert_fail@plt+0x1ba4>
   13914:	add	r5, r7, #1024	; 0x400
   13918:	add	r6, r6, #1
   1391c:	add	r7, sp, #3
   13920:	bl	11bfc <__ctype_b_loc@plt>
   13924:	mov	lr, #9
   13928:	mov	r2, #32
   1392c:	mov	ip, #94	; 0x5e
   13930:	ldr	r1, [r0]
   13934:	uxtb	r3, r4
   13938:	ldrb	r1, [r1, r3, lsl #1]
   1393c:	tst	r1, #2
   13940:	bne	13964 <__assert_fail@plt+0x1b4c>
   13944:	strb	r4, [r7]
   13948:	add	r7, r7, #1
   1394c:	cmp	r7, r5
   13950:	bcs	139bc <__assert_fail@plt+0x1ba4>
   13954:	ldrb	r4, [r6], #1
   13958:	cmp	r4, #0
   1395c:	bne	13930 <__assert_fail@plt+0x1b18>
   13960:	b	139bc <__assert_fail@plt+0x1ba4>
   13964:	cmp	r3, #9
   13968:	beq	13988 <__assert_fail@plt+0x1b70>
   1396c:	cmp	r3, #10
   13970:	bne	1399c <__assert_fail@plt+0x1b84>
   13974:	strb	r2, [r7]
   13978:	add	r7, r7, #1
   1397c:	cmp	r7, r5
   13980:	bcc	13954 <__assert_fail@plt+0x1b3c>
   13984:	b	139bc <__assert_fail@plt+0x1ba4>
   13988:	strb	lr, [r7]
   1398c:	add	r7, r7, #1
   13990:	cmp	r7, r5
   13994:	bcc	13954 <__assert_fail@plt+0x1b3c>
   13998:	b	139bc <__assert_fail@plt+0x1ba4>
   1399c:	cmp	r3, #127	; 0x7f
   139a0:	bcs	13944 <__assert_fail@plt+0x1b2c>
   139a4:	eor	r1, r4, #64	; 0x40
   139a8:	strb	ip, [r7]
   139ac:	strb	r1, [r7, #1]!
   139b0:	add	r7, r7, #1
   139b4:	cmp	r7, r5
   139b8:	bcc	13954 <__assert_fail@plt+0x1b3c>
   139bc:	mov	r0, #0
   139c0:	add	r1, sp, #3
   139c4:	mov	r2, r8
   139c8:	strb	r0, [r7]
   139cc:	movw	r0, #3124	; 0xc34
   139d0:	movt	r0, #3
   139d4:	ldr	r0, [r0]
   139d8:	cmp	r0, #0
   139dc:	mov	r0, r9
   139e0:	moveq	r3, #0
   139e4:	movne	r3, #2
   139e8:	bl	13dac <__assert_fail@plt+0x1f94>
   139ec:	sub	sp, fp, #24
   139f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   139f4:	push	{r4, r5, r6, r7, fp, lr}
   139f8:	add	fp, sp, #16
   139fc:	sub	sp, sp, #16
   13a00:	movw	r2, #3152	; 0xc50
   13a04:	mov	r6, r0
   13a08:	mov	r0, #1
   13a0c:	mov	r4, #0
   13a10:	mov	r3, #46	; 0x2e
   13a14:	mov	r5, r1
   13a18:	str	r0, [sp, #8]
   13a1c:	movt	r2, #3
   13a20:	mov	r0, r6
   13a24:	str	r4, [sp]
   13a28:	str	r4, [sp, #4]
   13a2c:	bl	11d1c <getnameinfo@plt>
   13a30:	cmp	r0, #0
   13a34:	beq	13a60 <__assert_fail@plt+0x1c48>
   13a38:	bl	11a28 <gai_strerror@plt>
   13a3c:	mov	r1, r0
   13a40:	movw	r0, #59739	; 0xe95b
   13a44:	movt	r0, #1
   13a48:	bl	135c4 <__assert_fail@plt+0x17ac>
   13a4c:	movw	r4, #59768	; 0xe978
   13a50:	movt	r4, #1
   13a54:	mov	r0, r4
   13a58:	sub	sp, fp, #16
   13a5c:	pop	{r4, r5, r6, r7, fp, pc}
   13a60:	movw	r7, #3152	; 0xc50
   13a64:	movw	r0, #59772	; 0xe97c
   13a68:	movt	r7, #3
   13a6c:	movt	r0, #1
   13a70:	mov	r1, r7
   13a74:	bl	135c4 <__assert_fail@plt+0x17ac>
   13a78:	str	r4, [sp]
   13a7c:	str	r4, [sp, #4]
   13a80:	movw	r4, #3216	; 0xc90
   13a84:	mov	r0, #8
   13a88:	mov	r1, r5
   13a8c:	movw	r3, #1025	; 0x401
   13a90:	movt	r4, #3
   13a94:	str	r0, [sp, #8]
   13a98:	mov	r0, r6
   13a9c:	mov	r2, r4
   13aa0:	bl	11d1c <getnameinfo@plt>
   13aa4:	cmp	r0, #0
   13aa8:	beq	13acc <__assert_fail@plt+0x1cb4>
   13aac:	movw	r0, #59786	; 0xe98a
   13ab0:	mov	r1, r7
   13ab4:	movt	r0, #1
   13ab8:	bl	135c4 <__assert_fail@plt+0x17ac>
   13abc:	mov	r4, r7
   13ac0:	mov	r0, r4
   13ac4:	sub	sp, fp, #16
   13ac8:	pop	{r4, r5, r6, r7, fp, pc}
   13acc:	mov	r0, r4
   13ad0:	mov	r1, #46	; 0x2e
   13ad4:	bl	11c38 <strchr@plt>
   13ad8:	cmp	r0, #0
   13adc:	beq	13ac0 <__assert_fail@plt+0x1ca8>
   13ae0:	mov	r5, r0
   13ae4:	movw	r0, #3132	; 0xc3c
   13ae8:	movt	r0, #3
   13aec:	add	r6, r5, #1
   13af0:	ldr	r1, [r0]
   13af4:	mov	r0, r6
   13af8:	bl	11b0c <strcasecmp@plt>
   13afc:	cmp	r0, #0
   13b00:	beq	13b8c <__assert_fail@plt+0x1d74>
   13b04:	movw	r0, #3108	; 0xc24
   13b08:	movt	r0, #3
   13b0c:	ldr	r0, [r0]
   13b10:	cmp	r0, #0
   13b14:	ldrne	r1, [r0]
   13b18:	cmpne	r1, #0
   13b1c:	bne	13b68 <__assert_fail@plt+0x1d50>
   13b20:	movw	r0, #3148	; 0xc4c
   13b24:	movt	r0, #3
   13b28:	ldr	r0, [r0]
   13b2c:	cmp	r0, #0
   13b30:	ldrne	r1, [r0]
   13b34:	cmpne	r1, #0
   13b38:	beq	13ac0 <__assert_fail@plt+0x1ca8>
   13b3c:	movw	r4, #3216	; 0xc90
   13b40:	add	r6, r0, #4
   13b44:	movt	r4, #3
   13b48:	mov	r0, r4
   13b4c:	bl	11b0c <strcasecmp@plt>
   13b50:	cmp	r0, #0
   13b54:	beq	13b8c <__assert_fail@plt+0x1d74>
   13b58:	ldr	r1, [r6], #4
   13b5c:	cmp	r1, #0
   13b60:	bne	13b48 <__assert_fail@plt+0x1d30>
   13b64:	b	13ac0 <__assert_fail@plt+0x1ca8>
   13b68:	add	r7, r0, #4
   13b6c:	mov	r0, r6
   13b70:	bl	11b0c <strcasecmp@plt>
   13b74:	cmp	r0, #0
   13b78:	beq	13b8c <__assert_fail@plt+0x1d74>
   13b7c:	ldr	r1, [r7], #4
   13b80:	cmp	r1, #0
   13b84:	bne	13b6c <__assert_fail@plt+0x1d54>
   13b88:	b	13b20 <__assert_fail@plt+0x1d08>
   13b8c:	mov	r0, #0
   13b90:	strb	r0, [r5]
   13b94:	mov	r0, r4
   13b98:	sub	sp, fp, #16
   13b9c:	pop	{r4, r5, r6, r7, fp, pc}
   13ba0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ba4:	add	fp, sp, #28
   13ba8:	sub	sp, sp, #4
   13bac:	mov	r9, r0
   13bb0:	mov	r0, r1
   13bb4:	mov	r5, r1
   13bb8:	bl	11c20 <strlen@plt>
   13bbc:	add	r0, r5, r0
   13bc0:	ldrb	r1, [r0, #-1]!
   13bc4:	cmp	r1, #58	; 0x3a
   13bc8:	bne	13bf4 <__assert_fail@plt+0x1ddc>
   13bcc:	mov	r4, #0
   13bd0:	strb	r4, [r0]
   13bd4:	mov	r0, r5
   13bd8:	bl	11c20 <strlen@plt>
   13bdc:	add	r0, r5, r0
   13be0:	ldrb	r1, [r0, #-1]!
   13be4:	cmp	r1, #58	; 0x3a
   13be8:	beq	13bd0 <__assert_fail@plt+0x1db8>
   13bec:	b	13bf4 <__assert_fail@plt+0x1ddc>
   13bf0:	add	r5, r5, #1
   13bf4:	ldrb	r2, [r5]
   13bf8:	cmp	r2, #58	; 0x3a
   13bfc:	beq	13bf0 <__assert_fail@plt+0x1dd8>
   13c00:	cmp	r2, #0
   13c04:	beq	13da0 <__assert_fail@plt+0x1f88>
   13c08:	mov	r1, #1
   13c0c:	mov	r0, #1
   13c10:	uxtb	r2, r2
   13c14:	cmp	r2, #58	; 0x3a
   13c18:	bne	13c34 <__assert_fail@plt+0x1e1c>
   13c1c:	b	13c40 <__assert_fail@plt+0x1e28>
   13c20:	ldrb	r2, [r5, r1]
   13c24:	add	r1, r1, #1
   13c28:	uxtb	r2, r2
   13c2c:	cmp	r2, #58	; 0x3a
   13c30:	beq	13c40 <__assert_fail@plt+0x1e28>
   13c34:	cmp	r2, #0
   13c38:	bne	13c20 <__assert_fail@plt+0x1e08>
   13c3c:	b	13c48 <__assert_fail@plt+0x1e30>
   13c40:	add	r0, r0, #1
   13c44:	b	13c20 <__assert_fail@plt+0x1e08>
   13c48:	cmp	r9, #0
   13c4c:	beq	13c6c <__assert_fail@plt+0x1e54>
   13c50:	mov	r1, #0
   13c54:	ldr	r2, [r9, r1, lsl #2]
   13c58:	add	r1, r1, #1
   13c5c:	cmp	r2, #0
   13c60:	bne	13c54 <__assert_fail@plt+0x1e3c>
   13c64:	sub	r4, r1, #1
   13c68:	b	13c70 <__assert_fail@plt+0x1e58>
   13c6c:	mov	r4, #0
   13c70:	add	r0, r4, r0
   13c74:	mov	r1, #4
   13c78:	add	r1, r1, r0, lsl #2
   13c7c:	mov	r0, r9
   13c80:	bl	1c83c <argp_parse@@Base+0x25f8>
   13c84:	mov	r9, r0
   13c88:	cmp	r0, #0
   13c8c:	bne	13ca8 <__assert_fail@plt+0x1e90>
   13c90:	bl	11c50 <__errno_location@plt>
   13c94:	ldr	r1, [r0]
   13c98:	movw	r2, #59051	; 0xe6ab
   13c9c:	mov	r0, #1
   13ca0:	movt	r2, #1
   13ca4:	bl	11b6c <error@plt>
   13ca8:	mov	r0, r5
   13cac:	mov	r1, #58	; 0x3a
   13cb0:	bl	11c38 <strchr@plt>
   13cb4:	cmp	r0, #0
   13cb8:	beq	13d30 <__assert_fail@plt+0x1f18>
   13cbc:	movw	r8, #59051	; 0xe6ab
   13cc0:	mov	r6, r0
   13cc4:	mov	sl, #0
   13cc8:	movt	r8, #1
   13ccc:	sub	r7, r6, r5
   13cd0:	add	r0, r7, #1
   13cd4:	bl	1c80c <argp_parse@@Base+0x25c8>
   13cd8:	cmp	r0, #0
   13cdc:	str	r0, [r9, r4, lsl #2]
   13ce0:	bne	13cfc <__assert_fail@plt+0x1ee4>
   13ce4:	bl	11c50 <__errno_location@plt>
   13ce8:	ldr	r1, [r0]
   13cec:	mov	r0, #1
   13cf0:	mov	r2, r8
   13cf4:	bl	11b6c <error@plt>
   13cf8:	ldr	r0, [r9, r4, lsl #2]
   13cfc:	mov	r1, r5
   13d00:	mov	r2, r7
   13d04:	bl	11c98 <strncpy@plt>
   13d08:	ldr	r0, [r9, r4, lsl #2]
   13d0c:	add	r5, r6, #1
   13d10:	mov	r1, #58	; 0x3a
   13d14:	strb	sl, [r0, r7]
   13d18:	mov	r0, r5
   13d1c:	bl	11c38 <strchr@plt>
   13d20:	mov	r6, r0
   13d24:	add	r4, r4, #1
   13d28:	cmp	r0, #0
   13d2c:	bne	13ccc <__assert_fail@plt+0x1eb4>
   13d30:	mov	r0, r5
   13d34:	bl	11c20 <strlen@plt>
   13d38:	add	r0, r0, #1
   13d3c:	bl	1c228 <argp_parse@@Base+0x1fe4>
   13d40:	mov	r6, r9
   13d44:	mov	r1, r5
   13d48:	str	r0, [r6, r4, lsl #2]!
   13d4c:	bl	11b60 <strcpy@plt>
   13d50:	mov	r0, #0
   13d54:	str	r0, [r6, #4]
   13d58:	movw	r0, #3116	; 0xc2c
   13d5c:	movt	r0, #3
   13d60:	ldr	r0, [r0]
   13d64:	cmp	r0, #0
   13d68:	ldrne	r2, [r9]
   13d6c:	cmpne	r2, #0
   13d70:	beq	13da0 <__assert_fail@plt+0x1f88>
   13d74:	movw	r6, #59073	; 0xe6c1
   13d78:	add	r4, r9, #4
   13d7c:	mov	r5, #0
   13d80:	movt	r6, #1
   13d84:	mov	r0, r6
   13d88:	mov	r1, r5
   13d8c:	bl	119c8 <printf@plt>
   13d90:	ldr	r2, [r4, r5, lsl #2]
   13d94:	add	r5, r5, #1
   13d98:	cmp	r2, #0
   13d9c:	bne	13d84 <__assert_fail@plt+0x1f6c>
   13da0:	mov	r0, r9
   13da4:	sub	sp, fp, #28
   13da8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13db0:	add	fp, sp, #28
   13db4:	sub	sp, sp, #300	; 0x12c
   13db8:	mov	r5, r1
   13dbc:	movw	r1, #528	; 0x210
   13dc0:	mov	r9, r2
   13dc4:	mov	r4, r3
   13dc8:	mov	sl, r0
   13dcc:	mov	r3, #0
   13dd0:	movt	r1, #3
   13dd4:	ldr	r2, [r1]
   13dd8:	cmp	r2, #0
   13ddc:	beq	13e20 <__assert_fail@plt+0x2008>
   13de0:	ldr	r3, [r1, #4]
   13de4:	and	r0, sl, #1016	; 0x3f8
   13de8:	cmp	r3, r0
   13dec:	mov	r3, r2
   13df0:	beq	13e20 <__assert_fail@plt+0x2008>
   13df4:	add	r1, r1, #8
   13df8:	ldr	r3, [r1]
   13dfc:	cmp	r3, #0
   13e00:	beq	13e1c <__assert_fail@plt+0x2004>
   13e04:	add	r2, r1, #8
   13e08:	ldr	r1, [r1, #4]
   13e0c:	cmp	r1, r0
   13e10:	mov	r1, r2
   13e14:	bne	13df8 <__assert_fail@plt+0x1fe0>
   13e18:	b	13e20 <__assert_fail@plt+0x2008>
   13e1c:	mov	r3, #0
   13e20:	movw	r2, #424	; 0x1a8
   13e24:	movt	r2, #3
   13e28:	ldr	r0, [r2]
   13e2c:	cmp	r0, #0
   13e30:	beq	13e6c <__assert_fail@plt+0x2054>
   13e34:	ldr	r7, [r2, #4]
   13e38:	and	r1, sl, #7
   13e3c:	cmp	r7, r1
   13e40:	beq	13e70 <__assert_fail@plt+0x2058>
   13e44:	add	r2, r2, #8
   13e48:	ldr	r0, [r2]
   13e4c:	cmp	r0, #0
   13e50:	beq	13e6c <__assert_fail@plt+0x2054>
   13e54:	add	r7, r2, #8
   13e58:	ldr	r2, [r2, #4]
   13e5c:	cmp	r2, r1
   13e60:	mov	r2, r7
   13e64:	bne	13e48 <__assert_fail@plt+0x2030>
   13e68:	b	13e70 <__assert_fail@plt+0x2058>
   13e6c:	mov	r0, #0
   13e70:	movw	r6, #1508	; 0x5e4
   13e74:	movw	r2, #59082	; 0xe6ca
   13e78:	str	r0, [sp]
   13e7c:	mov	r1, #20
   13e80:	movt	r6, #3
   13e84:	movt	r2, #1
   13e88:	mov	r0, r6
   13e8c:	bl	11c5c <snprintf@plt>
   13e90:	movw	r0, #59088	; 0xe6d0
   13e94:	mov	r1, r6
   13e98:	mov	r2, sl
   13e9c:	mov	r3, r4
   13ea0:	str	r9, [sp]
   13ea4:	str	r5, [sp, #4]
   13ea8:	movt	r0, #1
   13eac:	bl	135c4 <__assert_fail@plt+0x17ac>
   13eb0:	sub	r6, fp, #160	; 0xa0
   13eb4:	mov	r0, r6
   13eb8:	bl	11d04 <sigemptyset@plt>
   13ebc:	mov	r0, r6
   13ec0:	mov	r1, #1
   13ec4:	bl	11bb4 <sigaddset@plt>
   13ec8:	mov	r0, r6
   13ecc:	mov	r1, #14
   13ed0:	bl	11bb4 <sigaddset@plt>
   13ed4:	add	r2, sp, #40	; 0x28
   13ed8:	mov	r0, #0
   13edc:	mov	r1, r6
   13ee0:	bl	119f8 <sigprocmask@plt>
   13ee4:	mov	r0, r5
   13ee8:	bl	11c20 <strlen@plt>
   13eec:	mov	r7, r0
   13ef0:	cmp	r0, #16
   13ef4:	blt	13f0c <__assert_fail@plt+0x20f4>
   13ef8:	ldrb	r0, [r5, #3]
   13efc:	cmp	r0, #32
   13f00:	ldrbeq	r0, [r5, #6]
   13f04:	cmpeq	r0, #32
   13f08:	beq	142c0 <__assert_fail@plt+0x24a8>
   13f0c:	orr	r4, r4, #4
   13f10:	movw	r0, #3200	; 0xc80
   13f14:	movt	r0, #3
   13f18:	bl	11a70 <time@plt>
   13f1c:	tst	r4, #4
   13f20:	bne	13f5c <__assert_fail@plt+0x2144>
   13f24:	movw	r0, #1304	; 0x518
   13f28:	str	r5, [sp, #32]
   13f2c:	movt	r0, #3
   13f30:	ldr	r0, [r0, #44]	; 0x2c
   13f34:	cmp	r0, #0
   13f38:	beq	13f50 <__assert_fail@plt+0x2138>
   13f3c:	movw	r0, #3200	; 0xc80
   13f40:	movt	r0, #3
   13f44:	bl	11a94 <ctime@plt>
   13f48:	add	r0, r0, #4
   13f4c:	str	r0, [sp, #32]
   13f50:	sub	r7, r7, #16
   13f54:	add	r5, r5, #16
   13f58:	b	13f70 <__assert_fail@plt+0x2158>
   13f5c:	movw	r0, #3200	; 0xc80
   13f60:	movt	r0, #3
   13f64:	bl	11a94 <ctime@plt>
   13f68:	add	r0, r0, #4
   13f6c:	str	r0, [sp, #32]
   13f70:	movw	r0, #3128	; 0xc38
   13f74:	ubfx	r6, sl, #3, #7
   13f78:	ands	r8, r4, #8
   13f7c:	movt	r0, #3
   13f80:	movwne	r6, #24
   13f84:	ldr	r0, [r0]
   13f88:	cmp	r0, #0
   13f8c:	beq	14248 <__assert_fail@plt+0x2430>
   13f90:	movw	r0, #2640	; 0xa50
   13f94:	str	r9, [sp, #20]
   13f98:	str	r7, [sp, #28]
   13f9c:	str	r5, [sp, #36]	; 0x24
   13fa0:	str	sl, [sp, #16]
   13fa4:	str	r4, [sp, #24]
   13fa8:	movt	r0, #3
   13fac:	ldr	r9, [r0]
   13fb0:	cmp	r9, #0
   13fb4:	beq	142a8 <__assert_fail@plt+0x2490>
   13fb8:	ldr	r0, [sp, #16]
   13fbc:	mov	r1, #1
   13fc0:	mov	r2, #0
   13fc4:	and	r0, r0, #7
   13fc8:	lsl	r4, r1, r0
   13fcc:	ldr	r0, [sp, #24]
   13fd0:	and	sl, r0, #1
   13fd4:	movw	r0, #1304	; 0x518
   13fd8:	movt	r0, #3
   13fdc:	add	r0, r0, #48	; 0x30
   13fe0:	str	r0, [sp, #12]
   13fe4:	add	r0, r9, r6
   13fe8:	ldrb	r0, [r0, #12]
   13fec:	tst	r4, r0
   13ff0:	beq	14190 <__assert_fail@plt+0x2378>
   13ff4:	cmp	sl, #0
   13ff8:	beq	14008 <__assert_fail@plt+0x21f0>
   13ffc:	ldrh	r0, [r9, #4]
   14000:	cmp	r0, #3
   14004:	beq	14190 <__assert_fail@plt+0x2378>
   14008:	cmp	r8, #0
   1400c:	beq	1403c <__assert_fail@plt+0x2224>
   14010:	movw	r1, #3200	; 0xc80
   14014:	ldr	r0, [r9, #8]
   14018:	movt	r1, #3
   1401c:	ldr	r1, [r1]
   14020:	sub	r0, r1, r0
   14024:	movw	r1, #1304	; 0x518
   14028:	movt	r1, #3
   1402c:	ldr	r1, [r1, #36]	; 0x24
   14030:	add	r1, r1, r1, lsr #31
   14034:	cmp	r0, r1, asr #1
   14038:	blt	14190 <__assert_fail@plt+0x2378>
   1403c:	ldr	r1, [r9, #436]	; 0x1b4
   14040:	cmp	r1, #0
   14044:	beq	14090 <__assert_fail@plt+0x2278>
   14048:	ldr	r7, [r9, #440]	; 0x1b8
   1404c:	ldr	r0, [sp, #36]	; 0x24
   14050:	mov	r2, r7
   14054:	bl	11ddc <strncmp@plt>
   14058:	mov	r2, #0
   1405c:	cmp	r0, #0
   14060:	bne	14190 <__assert_fail@plt+0x2378>
   14064:	bl	11bfc <__ctype_b_loc@plt>
   14068:	ldr	r1, [sp, #36]	; 0x24
   1406c:	ldr	r0, [r0]
   14070:	mov	r2, #0
   14074:	ldrb	r1, [r1, r7]
   14078:	ldrb	r0, [r0, r1, lsl #1]
   1407c:	tst	r0, #8
   14080:	bne	14190 <__assert_fail@plt+0x2378>
   14084:	cmp	r1, #45	; 0x2d
   14088:	cmpne	r1, #95	; 0x5f
   1408c:	beq	14190 <__assert_fail@plt+0x2378>
   14090:	cmp	r8, #0
   14094:	bne	140e4 <__assert_fail@plt+0x22cc>
   14098:	ldr	r0, [r9, #448]	; 0x1c0
   1409c:	ldr	r1, [sp, #28]
   140a0:	cmp	r1, r0
   140a4:	bne	140e4 <__assert_fail@plt+0x22cc>
   140a8:	ldr	r7, [r9, #432]	; 0x1b0
   140ac:	cmp	r7, #0
   140b0:	beq	140e4 <__assert_fail@plt+0x22cc>
   140b4:	ldr	r0, [sp, #36]	; 0x24
   140b8:	add	r1, r9, #176	; 0xb0
   140bc:	bl	11998 <strcmp@plt>
   140c0:	mov	r2, #0
   140c4:	cmp	r0, #0
   140c8:	bne	140e4 <__assert_fail@plt+0x22cc>
   140cc:	ldr	r0, [sp, #20]
   140d0:	mov	r1, r7
   140d4:	bl	11998 <strcmp@plt>
   140d8:	mov	r2, #0
   140dc:	cmp	r0, #0
   140e0:	beq	141a0 <__assert_fail@plt+0x2388>
   140e4:	ldr	r0, [r9, #452]	; 0x1c4
   140e8:	ldr	r7, [sp, #20]
   140ec:	cmp	r0, #0
   140f0:	beq	1410c <__assert_fail@plt+0x22f4>
   140f4:	mov	r0, r9
   140f8:	mov	r1, r7
   140fc:	mov	r2, #0
   14100:	mov	r3, #0
   14104:	bl	143c4 <__assert_fail@plt+0x25ac>
   14108:	mov	r2, #0
   1410c:	ldr	r1, [sp, #32]
   14110:	str	r2, [r9, #456]	; 0x1c8
   14114:	add	r0, r9, #416	; 0x1a0
   14118:	mov	r2, #15
   1411c:	mov	r5, #0
   14120:	bl	11c98 <strncpy@plt>
   14124:	ldr	r0, [r9, #432]	; 0x1b0
   14128:	bl	1b7d4 <argp_parse@@Base+0x1590>
   1412c:	mov	r0, r7
   14130:	bl	11aac <strdup@plt>
   14134:	ldr	r1, [sp, #28]
   14138:	str	r0, [r9, #432]	; 0x1b0
   1413c:	cmp	r1, #239	; 0xef
   14140:	bgt	14170 <__assert_fail@plt+0x2358>
   14144:	ldr	r0, [sp, #16]
   14148:	str	r0, [r9, #444]	; 0x1bc
   1414c:	str	r1, [r9, #448]	; 0x1c0
   14150:	ldr	r1, [sp, #36]	; 0x24
   14154:	add	r0, r9, #176	; 0xb0
   14158:	bl	11b60 <strcpy@plt>
   1415c:	ldr	r2, [sp, #24]
   14160:	mov	r0, r9
   14164:	mov	r1, r7
   14168:	mov	r3, #0
   1416c:	b	14188 <__assert_fail@plt+0x2370>
   14170:	ldr	r2, [sp, #24]
   14174:	ldr	r3, [sp, #36]	; 0x24
   14178:	mov	r0, r9
   1417c:	mov	r1, r7
   14180:	str	r5, [r9, #448]	; 0x1c0
   14184:	strb	r5, [r9, #176]	; 0xb0
   14188:	bl	143c4 <__assert_fail@plt+0x25ac>
   1418c:	mov	r2, #0
   14190:	ldr	r9, [r9]
   14194:	cmp	r9, #0
   14198:	bne	13fe4 <__assert_fail@plt+0x21cc>
   1419c:	b	142a8 <__assert_fail@plt+0x2490>
   141a0:	ldr	r1, [sp, #32]
   141a4:	add	r0, r9, #416	; 0x1a0
   141a8:	mov	r2, #15
   141ac:	bl	11c98 <strncpy@plt>
   141b0:	ldr	r1, [r9, #452]	; 0x1c4
   141b4:	ldr	r2, [r9, #456]	; 0x1c8
   141b8:	ldr	r7, [sp, #12]
   141bc:	ldr	r0, [r9, #8]
   141c0:	add	r1, r1, #1
   141c4:	str	r1, [r9, #452]	; 0x1c4
   141c8:	ldr	r3, [r7, r2, lsl #2]
   141cc:	movw	r2, #3200	; 0xc80
   141d0:	movt	r2, #3
   141d4:	mov	r5, r2
   141d8:	ldr	r2, [r2]
   141dc:	sub	r2, r2, r0
   141e0:	movw	r0, #59134	; 0xe6fe
   141e4:	movt	r0, #1
   141e8:	bl	135c4 <__assert_fail@plt+0x17ac>
   141ec:	ldr	r1, [r9, #456]	; 0x1c8
   141f0:	ldr	r0, [r9, #8]
   141f4:	mov	r2, #0
   141f8:	ldr	r1, [r7, r1, lsl #2]
   141fc:	add	r0, r1, r0
   14200:	ldr	r1, [r5]
   14204:	cmp	r1, r0
   14208:	ble	14190 <__assert_fail@plt+0x2378>
   1420c:	ldr	r1, [sp, #20]
   14210:	ldr	r2, [sp, #24]
   14214:	mov	r0, r9
   14218:	mov	r3, #0
   1421c:	bl	143c4 <__assert_fail@plt+0x25ac>
   14220:	ldr	r0, [r9, #456]	; 0x1c8
   14224:	mov	r2, #0
   14228:	add	r1, r0, #1
   1422c:	cmn	r0, #1
   14230:	movwne	r1, #1
   14234:	str	r1, [r9, #456]	; 0x1c8
   14238:	ldr	r9, [r9]
   1423c:	cmp	r9, #0
   14240:	bne	13fe4 <__assert_fail@plt+0x21cc>
   14244:	b	142a8 <__assert_fail@plt+0x2490>
   14248:	movw	r0, #1304	; 0x518
   1424c:	mov	r1, #1
   14250:	mov	r2, #0
   14254:	movt	r0, #3
   14258:	add	r0, r0, #64	; 0x40
   1425c:	bl	11b90 <open64@plt>
   14260:	movw	r6, #2644	; 0xa54
   14264:	movt	r6, #3
   14268:	strh	r0, [r6, #6]
   1426c:	movw	r0, #3136	; 0xc40
   14270:	movt	r0, #3
   14274:	ldr	r0, [r0]
   14278:	bl	11aac <strdup@plt>
   1427c:	str	r0, [r6, #432]	; 0x1b0
   14280:	ldrsh	r0, [r6, #6]
   14284:	cmp	r0, #0
   14288:	blt	142a8 <__assert_fail@plt+0x2490>
   1428c:	mov	r0, r6
   14290:	mov	r1, r9
   14294:	mov	r2, r4
   14298:	mov	r3, r5
   1429c:	bl	143c4 <__assert_fail@plt+0x25ac>
   142a0:	ldrsh	r0, [r6, #6]
   142a4:	bl	11e00 <close@plt>
   142a8:	add	r1, sp, #40	; 0x28
   142ac:	mov	r0, #2
   142b0:	mov	r2, #0
   142b4:	bl	119f8 <sigprocmask@plt>
   142b8:	sub	sp, fp, #28
   142bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142c0:	ldrb	r0, [r5, #9]
   142c4:	cmp	r0, #58	; 0x3a
   142c8:	ldrbeq	r0, [r5, #12]
   142cc:	cmpeq	r0, #58	; 0x3a
   142d0:	bne	13f0c <__assert_fail@plt+0x20f4>
   142d4:	ldrb	r0, [r5, #15]
   142d8:	cmp	r0, #32
   142dc:	orrne	r4, r4, #4
   142e0:	b	13f10 <__assert_fail@plt+0x20f8>
   142e4:	push	{r4, sl, fp, lr}
   142e8:	add	fp, sp, #8
   142ec:	sub	sp, sp, #8
   142f0:	movw	r2, #528	; 0x210
   142f4:	mov	r3, #0
   142f8:	movt	r2, #3
   142fc:	ldr	r4, [r2]
   14300:	cmp	r4, #0
   14304:	beq	14348 <__assert_fail@plt+0x2530>
   14308:	ldr	r3, [r2, #4]
   1430c:	and	r1, r0, #1016	; 0x3f8
   14310:	cmp	r3, r1
   14314:	mov	r3, r4
   14318:	beq	14348 <__assert_fail@plt+0x2530>
   1431c:	add	r2, r2, #8
   14320:	ldr	r3, [r2]
   14324:	cmp	r3, #0
   14328:	beq	14344 <__assert_fail@plt+0x252c>
   1432c:	add	r4, r2, #8
   14330:	ldr	r2, [r2, #4]
   14334:	cmp	r2, r1
   14338:	mov	r2, r4
   1433c:	bne	14320 <__assert_fail@plt+0x2508>
   14340:	b	14348 <__assert_fail@plt+0x2530>
   14344:	mov	r3, #0
   14348:	movw	r2, #424	; 0x1a8
   1434c:	movt	r2, #3
   14350:	ldr	r1, [r2]
   14354:	cmp	r1, #0
   14358:	beq	14394 <__assert_fail@plt+0x257c>
   1435c:	ldr	r4, [r2, #4]
   14360:	and	r0, r0, #7
   14364:	cmp	r4, r0
   14368:	beq	14398 <__assert_fail@plt+0x2580>
   1436c:	add	r2, r2, #8
   14370:	ldr	r1, [r2]
   14374:	cmp	r1, #0
   14378:	beq	14394 <__assert_fail@plt+0x257c>
   1437c:	add	r4, r2, #8
   14380:	ldr	r2, [r2, #4]
   14384:	cmp	r2, r0
   14388:	mov	r2, r4
   1438c:	bne	14370 <__assert_fail@plt+0x2558>
   14390:	b	14398 <__assert_fail@plt+0x2580>
   14394:	mov	r1, #0
   14398:	movw	r4, #1508	; 0x5e4
   1439c:	movw	r2, #59082	; 0xe6ca
   143a0:	str	r1, [sp]
   143a4:	mov	r1, #20
   143a8:	movt	r4, #3
   143ac:	movt	r2, #1
   143b0:	mov	r0, r4
   143b4:	bl	11c5c <snprintf@plt>
   143b8:	mov	r0, r4
   143bc:	sub	sp, fp, #8
   143c0:	pop	{r4, sl, fp, pc}
   143c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143c8:	add	fp, sp, #28
   143cc:	sub	sp, sp, #356	; 0x164
   143d0:	sub	sp, sp, #1024	; 0x400
   143d4:	sub	r6, fp, #80	; 0x50
   143d8:	mov	r8, r1
   143dc:	mov	sl, r0
   143e0:	vmov.i32	q8, #0	; 0x00000000
   143e4:	mov	r0, #32
   143e8:	mov	r7, r3
   143ec:	mov	r9, r2
   143f0:	mov	r1, r6
   143f4:	add	r5, r6, #16
   143f8:	vst1.64	{d16-d17}, [r1], r0
   143fc:	vst1.64	{d16-d17}, [r5]
   14400:	vst1.64	{d16-d17}, [r1]
   14404:	ldrh	r0, [sl, #4]
   14408:	cmp	r0, #6
   1440c:	bne	14468 <__assert_fail@plt+0x2650>
   14410:	add	r0, sp, #16
   14414:	mov	r4, sl
   14418:	str	r9, [sp, #8]
   1441c:	str	r0, [fp, #-80]	; 0xffffffb0
   14420:	movw	r0, #3200	; 0xc80
   14424:	ldr	r9, [r4, #432]!	; 0x1b0
   14428:	movt	r0, #3
   1442c:	bl	11a94 <ctime@plt>
   14430:	movw	r2, #59172	; 0xe724
   14434:	str	r0, [sp]
   14438:	add	r0, sp, #16
   1443c:	mov	r1, #200	; 0xc8
   14440:	mov	r3, r9
   14444:	movt	r2, #1
   14448:	bl	11c5c <snprintf@plt>
   1444c:	ldr	r9, [sp, #8]
   14450:	add	r0, sp, #16
   14454:	bl	11c20 <strlen@plt>
   14458:	movw	r2, #61949	; 0xf1fd
   1445c:	mov	r1, #0
   14460:	movt	r2, #1
   14464:	b	14484 <__assert_fail@plt+0x266c>
   14468:	movw	r2, #62921	; 0xf5c9
   1446c:	add	r0, sl, #416	; 0x1a0
   14470:	add	r4, sl, #432	; 0x1b0
   14474:	mov	r1, #1
   14478:	str	r0, [fp, #-80]	; 0xffffffb0
   1447c:	movt	r2, #1
   14480:	mov	r0, #15
   14484:	str	r2, [fp, #-72]	; 0xffffffb8
   14488:	str	r0, [fp, #-76]	; 0xffffffb4
   1448c:	str	r1, [fp, #-68]	; 0xffffffbc
   14490:	ldr	r0, [r4]
   14494:	cmp	r0, #0
   14498:	beq	144ac <__assert_fail@plt+0x2694>
   1449c:	str	r0, [fp, #-64]	; 0xffffffc0
   144a0:	bl	11c20 <strlen@plt>
   144a4:	add	r5, r6, #24
   144a8:	str	r0, [fp, #-60]	; 0xffffffc4
   144ac:	movw	r1, #62921	; 0xf5c9
   144b0:	cmp	r7, #0
   144b4:	mov	r0, #1
   144b8:	movt	r1, #1
   144bc:	str	r1, [r5]
   144c0:	str	r0, [r5, #4]
   144c4:	beq	144d8 <__assert_fail@plt+0x26c0>
   144c8:	mov	r0, r7
   144cc:	str	r7, [r5, #8]
   144d0:	bl	11c20 <strlen@plt>
   144d4:	b	14518 <__assert_fail@plt+0x2700>
   144d8:	ldr	r3, [sl, #452]	; 0x1c4
   144dc:	cmp	r3, #2
   144e0:	blt	1450c <__assert_fail@plt+0x26f4>
   144e4:	add	r4, sp, #216	; 0xd8
   144e8:	movw	r2, #59214	; 0xe74e
   144ec:	mov	r1, #80	; 0x50
   144f0:	movt	r2, #1
   144f4:	mov	r0, r4
   144f8:	str	r4, [r5, #8]
   144fc:	bl	11c5c <snprintf@plt>
   14500:	mov	r0, r4
   14504:	bl	11c20 <strlen@plt>
   14508:	b	14518 <__assert_fail@plt+0x2700>
   1450c:	add	r0, sl, #176	; 0xb0
   14510:	str	r0, [r5, #8]
   14514:	ldr	r0, [sl, #448]	; 0x1c0
   14518:	str	r0, [r5, #12]
   1451c:	movw	r1, #712	; 0x2c8
   14520:	ldrsh	r0, [sl, #4]
   14524:	movt	r1, #3
   14528:	ldr	r1, [r1, r0, lsl #2]
   1452c:	movw	r0, #59245	; 0xe76d
   14530:	movt	r0, #1
   14534:	bl	135c4 <__assert_fail@plt+0x17ac>
   14538:	ldrsh	r0, [sl, #4]
   1453c:	cmp	r0, #9
   14540:	bhi	146cc <__assert_fail@plt+0x28b4>
   14544:	add	r1, pc, #0
   14548:	ldr	pc, [r1, r0, lsl #2]
   1454c:	ldrdeq	r4, [r1], -ip
   14550:	andeq	r4, r1, r4, ror r5
   14554:	andeq	r4, r1, r4, ror r5
   14558:	andeq	r4, r1, r8, lsl #14
   1455c:	strdeq	r4, [r1], -r8
   14560:	andeq	r4, r1, ip, asr #12
   14564:	andeq	r4, r1, ip, asr #12
   14568:	andeq	r4, r1, ip, lsr r7
   1456c:	andeq	r4, r1, ip, ror #14
   14570:	andeq	r4, r1, r4, ror r5
   14574:	movw	r0, #3200	; 0xc80
   14578:	movt	r0, #3
   1457c:	ldr	r0, [r0]
   14580:	str	r0, [sl, #8]
   14584:	movw	r0, #63714	; 0xf8e2
   14588:	ldr	r1, [sl, #40]	; 0x28
   1458c:	movt	r0, #1
   14590:	bl	135c4 <__assert_fail@plt+0x17ac>
   14594:	ldrh	r0, [sl, #4]
   14598:	movw	r8, #65534	; 0xfffe
   1459c:	movw	r1, #59211	; 0xe74b
   145a0:	movw	r2, #59212	; 0xe74c
   145a4:	movt	r1, #1
   145a8:	movt	r2, #1
   145ac:	and	r0, r0, r8
   145b0:	cmp	r0, #2
   145b4:	moveq	r2, r1
   145b8:	movwne	r0, #1
   145bc:	str	r2, [r5, #16]
   145c0:	str	r0, [r5, #20]
   145c4:	sub	r5, fp, #80	; 0x50
   145c8:	ldrh	r0, [sl, #6]
   145cc:	sxth	r0, r0
   145d0:	mov	r1, r5
   145d4:	mov	r2, #6
   145d8:	bl	11cbc <writev@plt>
   145dc:	cmn	r0, #1
   145e0:	bgt	14838 <__assert_fail@plt+0x2a20>
   145e4:	bl	11c50 <__errno_location@plt>
   145e8:	ldr	r4, [r0]
   145ec:	mov	r7, r0
   145f0:	cmp	r4, #11
   145f4:	ldrheq	r0, [sl, #4]
   145f8:	cmpeq	r0, #9
   145fc:	beq	14adc <__assert_fail@plt+0x2cc4>
   14600:	ldrsh	r0, [sl, #6]
   14604:	bl	11e00 <close@plt>
   14608:	cmp	r4, #9
   1460c:	cmpne	r4, #5
   14610:	bne	14698 <__assert_fail@plt+0x2880>
   14614:	ldrh	r0, [sl, #4]
   14618:	and	r0, r0, r8
   1461c:	cmp	r0, #2
   14620:	bne	14698 <__assert_fail@plt+0x2880>
   14624:	ldr	r0, [sl, #40]	; 0x28
   14628:	movw	r1, #1025	; 0x401
   1462c:	mov	r2, #0
   14630:	bl	11b90 <open64@plt>
   14634:	tst	r0, #32768	; 0x8000
   14638:	strh	r0, [sl, #6]
   1463c:	beq	145cc <__assert_fail@plt+0x27b4>
   14640:	mov	r0, #0
   14644:	strh	r0, [sl, #4]
   14648:	b	146a4 <__assert_fail@plt+0x288c>
   1464c:	movw	r0, #3200	; 0xc80
   14650:	movt	r0, #3
   14654:	ldr	r0, [r0]
   14658:	str	r0, [sl, #8]
   1465c:	movw	r0, #59212	; 0xe74c
   14660:	movt	r0, #1
   14664:	bl	135c4 <__assert_fail@plt+0x17ac>
   14668:	movw	r1, #59211	; 0xe74b
   1466c:	mov	r0, #2
   14670:	movt	r1, #1
   14674:	str	r1, [r5, #16]
   14678:	str	r0, [r5, #20]
   1467c:	sub	r1, fp, #80	; 0x50
   14680:	mov	r0, sl
   14684:	bl	14b7c <__assert_fail@plt+0x2d64>
   14688:	ldrh	r0, [sl, #4]
   1468c:	cmp	r0, #8
   14690:	bne	14adc <__assert_fail@plt+0x2cc4>
   14694:	b	14ae4 <__assert_fail@plt+0x2ccc>
   14698:	mov	r0, #0
   1469c:	strh	r0, [sl, #4]
   146a0:	str	r4, [r7]
   146a4:	ldr	r0, [sl, #40]	; 0x28
   146a8:	bl	1365c <__assert_fail@plt+0x1844>
   146ac:	ldr	r0, [sl, #40]	; 0x28
   146b0:	bl	1b7d4 <argp_parse@@Base+0x1590>
   146b4:	mov	r0, #0
   146b8:	str	r0, [sl, #40]	; 0x28
   146bc:	ldrh	r0, [sl, #4]
   146c0:	cmp	r0, #8
   146c4:	bne	14adc <__assert_fail@plt+0x2cc4>
   146c8:	b	14ae4 <__assert_fail@plt+0x2ccc>
   146cc:	uxth	r0, r0
   146d0:	cmp	r0, #8
   146d4:	bne	14adc <__assert_fail@plt+0x2cc4>
   146d8:	b	14ae4 <__assert_fail@plt+0x2ccc>
   146dc:	movw	r0, #3200	; 0xc80
   146e0:	movt	r0, #3
   146e4:	ldr	r0, [r0]
   146e8:	str	r0, [sl, #8]
   146ec:	movw	r0, #59212	; 0xe74c
   146f0:	movt	r0, #1
   146f4:	bl	135c4 <__assert_fail@plt+0x17ac>
   146f8:	ldrh	r0, [sl, #4]
   146fc:	cmp	r0, #8
   14700:	bne	14adc <__assert_fail@plt+0x2cc4>
   14704:	b	14ae4 <__assert_fail@plt+0x2ccc>
   14708:	movw	r0, #3200	; 0xc80
   1470c:	tst	r9, #1
   14710:	movt	r0, #3
   14714:	ldr	r0, [r0]
   14718:	str	r0, [sl, #8]
   1471c:	beq	14574 <__assert_fail@plt+0x275c>
   14720:	movw	r0, #59695	; 0xe92f
   14724:	movt	r0, #1
   14728:	bl	135c4 <__assert_fail@plt+0x17ac>
   1472c:	ldrh	r0, [sl, #4]
   14730:	cmp	r0, #8
   14734:	bne	14adc <__assert_fail@plt+0x2cc4>
   14738:	b	14ae4 <__assert_fail@plt+0x2ccc>
   1473c:	mov	r0, #0
   14740:	bl	11a70 <time@plt>
   14744:	ldr	r1, [sl, #8]
   14748:	sub	r4, r0, r1
   1474c:	cmp	r4, #180	; 0xb4
   14750:	blt	14864 <__assert_fail@plt+0x2a4c>
   14754:	movw	r0, #59259	; 0xe77b
   14758:	movt	r0, #1
   1475c:	bl	135c4 <__assert_fail@plt+0x17ac>
   14760:	mov	r0, #4
   14764:	strh	r0, [sl, #4]
   14768:	b	148f8 <__assert_fail@plt+0x2ae0>
   1476c:	ldr	r1, [sl, #40]	; 0x28
   14770:	movw	r0, #63714	; 0xf8e2
   14774:	movt	r0, #1
   14778:	bl	135c4 <__assert_fail@plt+0x17ac>
   1477c:	mov	r0, #0
   14780:	bl	11a70 <time@plt>
   14784:	ldr	r1, [sl, #8]
   14788:	sub	r0, r0, r1
   1478c:	cmp	r0, #180	; 0xb4
   14790:	blt	14894 <__assert_fail@plt+0x2a7c>
   14794:	vmov.i32	q8, #0	; 0x00000000
   14798:	add	r0, sp, #296	; 0x128
   1479c:	add	r2, sp, #296	; 0x128
   147a0:	add	r3, sp, #12
   147a4:	vst1.64	{d16-d17}, [r0]!
   147a8:	vst1.64	{d16-d17}, [r0]
   147ac:	movw	r0, #1304	; 0x518
   147b0:	movt	r0, #3
   147b4:	ldr	r1, [r0, #20]
   147b8:	cmp	r1, #0
   147bc:	str	r1, [sp, #300]	; 0x12c
   147c0:	moveq	r1, #32
   147c4:	streq	r1, [sp, #296]	; 0x128
   147c8:	ldr	r1, [r0, #32]
   147cc:	ldr	r0, [sl, #40]	; 0x28
   147d0:	bl	11da0 <getaddrinfo@plt>
   147d4:	cmp	r0, #0
   147d8:	beq	148b4 <__assert_fail@plt+0x2a9c>
   147dc:	bl	11a28 <gai_strerror@plt>
   147e0:	mov	r1, r0
   147e4:	movw	r0, #59351	; 0xe7d7
   147e8:	movt	r0, #1
   147ec:	bl	135c4 <__assert_fail@plt+0x17ac>
   147f0:	ldr	r1, [sl, #452]	; 0x1c4
   147f4:	movw	r0, #59364	; 0xe7e4
   147f8:	movt	r0, #1
   147fc:	bl	135c4 <__assert_fail@plt+0x17ac>
   14800:	ldr	r0, [sl, #452]	; 0x1c4
   14804:	sub	r1, r0, #1
   14808:	cmp	r0, #0
   1480c:	str	r1, [sl, #452]	; 0x1c4
   14810:	bgt	14ad0 <__assert_fail@plt+0x2cb8>
   14814:	mov	r4, #0
   14818:	strh	r4, [sl, #4]
   1481c:	ldr	r0, [sl, #40]	; 0x28
   14820:	bl	1b7d4 <argp_parse@@Base+0x1590>
   14824:	str	r4, [sl, #40]	; 0x28
   14828:	ldrh	r0, [sl, #4]
   1482c:	cmp	r0, #8
   14830:	bne	14adc <__assert_fail@plt+0x2cc4>
   14834:	b	14ae4 <__assert_fail@plt+0x2ccc>
   14838:	tst	r9, #2
   1483c:	beq	14ad0 <__assert_fail@plt+0x2cb8>
   14840:	ldrb	r0, [sl, #460]	; 0x1cc
   14844:	tst	r0, #1
   14848:	bne	14ad0 <__assert_fail@plt+0x2cb8>
   1484c:	ldrsh	r0, [sl, #6]
   14850:	bl	1198c <fsync@plt>
   14854:	ldrh	r0, [sl, #4]
   14858:	cmp	r0, #8
   1485c:	bne	14adc <__assert_fail@plt+0x2cc4>
   14860:	b	14ae4 <__assert_fail@plt+0x2ccc>
   14864:	ldr	r1, [sl, #40]	; 0x28
   14868:	movw	r0, #63714	; 0xf8e2
   1486c:	movt	r0, #1
   14870:	bl	135c4 <__assert_fail@plt+0x17ac>
   14874:	movw	r0, #59303	; 0xe7a7
   14878:	rsb	r1, r4, #180	; 0xb4
   1487c:	movt	r0, #1
   14880:	bl	135c4 <__assert_fail@plt+0x17ac>
   14884:	ldrh	r0, [sl, #4]
   14888:	cmp	r0, #8
   1488c:	bne	14adc <__assert_fail@plt+0x2cc4>
   14890:	b	14ae4 <__assert_fail@plt+0x2ccc>
   14894:	rsb	r1, r0, #180	; 0xb4
   14898:	movw	r0, #59398	; 0xe806
   1489c:	movt	r0, #1
   148a0:	bl	135c4 <__assert_fail@plt+0x17ac>
   148a4:	ldrh	r0, [sl, #4]
   148a8:	cmp	r0, #8
   148ac:	bne	14adc <__assert_fail@plt+0x2cc4>
   148b0:	b	14ae4 <__assert_fail@plt+0x2ccc>
   148b4:	ldr	r1, [sl, #40]	; 0x28
   148b8:	movw	r0, #59377	; 0xe7f1
   148bc:	movt	r0, #1
   148c0:	bl	135c4 <__assert_fail@plt+0x17ac>
   148c4:	ldr	r5, [sp, #12]
   148c8:	ldr	r0, [r5, #16]
   148cc:	str	r0, [sl, #172]	; 0xac
   148d0:	add	r0, sl, #44	; 0x2c
   148d4:	ldr	r2, [r5, #16]
   148d8:	ldr	r1, [r5, #20]
   148dc:	bl	11a58 <memcpy@plt>
   148e0:	mov	r0, r5
   148e4:	bl	11d94 <freeaddrinfo@plt>
   148e8:	mov	r0, #4
   148ec:	strh	r0, [sl, #4]
   148f0:	mov	r0, #0
   148f4:	str	r0, [sl, #452]	; 0x1c4
   148f8:	ldr	r1, [sl, #40]	; 0x28
   148fc:	movw	r0, #63714	; 0xf8e2
   14900:	movt	r0, #1
   14904:	bl	135c4 <__assert_fail@plt+0x17ac>
   14908:	movw	r0, #3136	; 0xc40
   1490c:	movt	r0, #3
   14910:	ldr	r1, [r0]
   14914:	mov	r0, r8
   14918:	bl	11b0c <strcasecmp@plt>
   1491c:	movw	r5, #1304	; 0x518
   14920:	cmp	r0, #0
   14924:	movt	r5, #3
   14928:	ldrne	r0, [r5, #40]	; 0x28
   1492c:	cmpne	r0, #0
   14930:	bne	14964 <__assert_fail@plt+0x2b4c>
   14934:	movw	r0, #3204	; 0xc84
   14938:	movt	r0, #3
   1493c:	ldr	r0, [r0]
   14940:	cmp	r0, #0
   14944:	beq	14980 <__assert_fail@plt+0x2b68>
   14948:	movw	r0, #59477	; 0xe855
   1494c:	movt	r0, #1
   14950:	bl	135c4 <__assert_fail@plt+0x17ac>
   14954:	ldrh	r0, [sl, #4]
   14958:	cmp	r0, #8
   1495c:	bne	14adc <__assert_fail@plt+0x2cc4>
   14960:	b	14ae4 <__assert_fail@plt+0x2ccc>
   14964:	movw	r0, #59445	; 0xe835
   14968:	movt	r0, #1
   1496c:	bl	135c4 <__assert_fail@plt+0x17ac>
   14970:	ldrh	r0, [sl, #4]
   14974:	cmp	r0, #8
   14978:	bne	14adc <__assert_fail@plt+0x2cc4>
   1497c:	b	14ae4 <__assert_fail@plt+0x2ccc>
   14980:	mov	r4, sl
   14984:	mov	r6, #60	; 0x3c
   14988:	ldrh	r0, [r4, #44]!	; 0x2c
   1498c:	cmp	r0, #2
   14990:	movweq	r6, #56	; 0x38
   14994:	ldr	r8, [r5, r6]
   14998:	cmn	r8, #1
   1499c:	ble	14a78 <__assert_fail@plt+0x2c60>
   149a0:	movw	r0, #3200	; 0xc80
   149a4:	movw	r2, #59646	; 0xe8fe
   149a8:	add	r9, sp, #296	; 0x128
   149ac:	movt	r0, #3
   149b0:	movt	r2, #1
   149b4:	ldr	r0, [r0]
   149b8:	str	r0, [sl, #8]
   149bc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   149c0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   149c4:	ldr	r3, [sl, #444]	; 0x1bc
   149c8:	stm	sp, {r0, r1}
   149cc:	mov	r0, r9
   149d0:	movw	r1, #1025	; 0x401
   149d4:	bl	11c5c <snprintf@plt>
   149d8:	mov	r0, r9
   149dc:	bl	11c20 <strlen@plt>
   149e0:	mov	r7, r0
   149e4:	ldr	r0, [sl, #172]	; 0xac
   149e8:	mov	r1, r9
   149ec:	mov	r3, #0
   149f0:	str	r4, [sp]
   149f4:	cmp	r7, #1024	; 0x400
   149f8:	movge	r7, #1024	; 0x400
   149fc:	mov	r2, r7
   14a00:	str	r0, [sp, #4]
   14a04:	mov	r0, r8
   14a08:	bl	11ce0 <sendto@plt>
   14a0c:	cmp	r0, r7
   14a10:	beq	14a54 <__assert_fail@plt+0x2c3c>
   14a14:	bl	11c50 <__errno_location@plt>
   14a18:	ldr	r7, [r0]
   14a1c:	mov	r9, r0
   14a20:	mov	r0, r7
   14a24:	bl	11bcc <strerror@plt>
   14a28:	mov	r2, r0
   14a2c:	movw	r0, #59659	; 0xe90b
   14a30:	mov	r1, r7
   14a34:	movt	r0, #1
   14a38:	bl	135c4 <__assert_fail@plt+0x17ac>
   14a3c:	mov	r0, #7
   14a40:	strh	r0, [sl, #4]
   14a44:	movw	r0, #59688	; 0xe928
   14a48:	str	r7, [r9]
   14a4c:	movt	r0, #1
   14a50:	bl	1365c <__assert_fail@plt+0x1844>
   14a54:	ldr	r0, [r5, r6]
   14a58:	cmn	r0, #1
   14a5c:	bgt	14ad0 <__assert_fail@plt+0x2cb8>
   14a60:	mov	r0, r8
   14a64:	bl	11e00 <close@plt>
   14a68:	ldrh	r0, [sl, #4]
   14a6c:	cmp	r0, #8
   14a70:	bne	14adc <__assert_fail@plt+0x2cc4>
   14a74:	b	14ae4 <__assert_fail@plt+0x2ccc>
   14a78:	add	r2, sp, #296	; 0x128
   14a7c:	vmov.i32	q8, #0	; 0x00000000
   14a80:	add	r3, sp, #12
   14a84:	add	r1, r2, #12
   14a88:	vst1.32	{d16-d17}, [r1]
   14a8c:	mov	r1, #0
   14a90:	str	r1, [sp, #324]	; 0x144
   14a94:	ldr	r1, [r5, #32]
   14a98:	str	r0, [sp, #300]	; 0x12c
   14a9c:	mov	r0, #2
   14aa0:	str	r0, [sp, #304]	; 0x130
   14aa4:	mov	r0, #1
   14aa8:	str	r0, [sp, #296]	; 0x128
   14aac:	mov	r0, #0
   14ab0:	bl	11da0 <getaddrinfo@plt>
   14ab4:	cmp	r0, #0
   14ab8:	beq	14aec <__assert_fail@plt+0x2cd4>
   14abc:	bl	11a28 <gai_strerror@plt>
   14ac0:	mov	r1, r0
   14ac4:	movw	r0, #59525	; 0xe885
   14ac8:	movt	r0, #1
   14acc:	bl	135c4 <__assert_fail@plt+0x17ac>
   14ad0:	ldrh	r0, [sl, #4]
   14ad4:	cmp	r0, #8
   14ad8:	beq	14ae4 <__assert_fail@plt+0x2ccc>
   14adc:	mov	r0, #0
   14ae0:	str	r0, [sl, #452]	; 0x1c4
   14ae4:	sub	sp, fp, #28
   14ae8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14aec:	ldr	r2, [sp, #12]
   14af0:	ldmib	r2, {r0, r1, r2}
   14af4:	bl	11dac <socket@plt>
   14af8:	cmn	r0, #1
   14afc:	ble	14b58 <__assert_fail@plt+0x2d40>
   14b00:	mov	r8, r0
   14b04:	ldr	r0, [sp, #12]
   14b08:	ldr	r2, [r0, #16]
   14b0c:	ldr	r1, [r0, #20]
   14b10:	mov	r0, r8
   14b14:	bl	11c74 <bind@plt>
   14b18:	mov	r7, r0
   14b1c:	ldr	r0, [sp, #12]
   14b20:	bl	11d94 <freeaddrinfo@plt>
   14b24:	cmp	r7, #0
   14b28:	beq	149a0 <__assert_fail@plt+0x2b88>
   14b2c:	bl	11c50 <__errno_location@plt>
   14b30:	ldr	r0, [r0]
   14b34:	bl	11bcc <strerror@plt>
   14b38:	mov	r1, r0
   14b3c:	movw	r0, #59607	; 0xe8d7
   14b40:	movt	r0, #1
   14b44:	bl	135c4 <__assert_fail@plt+0x17ac>
   14b48:	ldrh	r0, [sl, #4]
   14b4c:	cmp	r0, #8
   14b50:	bne	14adc <__assert_fail@plt+0x2cc4>
   14b54:	b	14ae4 <__assert_fail@plt+0x2ccc>
   14b58:	movw	r0, #59568	; 0xe8b0
   14b5c:	movt	r0, #1
   14b60:	bl	135c4 <__assert_fail@plt+0x17ac>
   14b64:	ldr	r0, [sp, #12]
   14b68:	bl	11d94 <freeaddrinfo@plt>
   14b6c:	ldrh	r0, [sl, #4]
   14b70:	cmp	r0, #8
   14b74:	bne	14adc <__assert_fail@plt+0x2cc4>
   14b78:	b	14ae4 <__assert_fail@plt+0x2ccc>
   14b7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b80:	add	fp, sp, #28
   14b84:	sub	sp, sp, #52	; 0x34
   14b88:	movw	r2, #1528	; 0x5f8
   14b8c:	mov	r5, r0
   14b90:	mov	r6, r1
   14b94:	movt	r2, #3
   14b98:	ldr	r0, [r2]
   14b9c:	add	r1, r0, #1
   14ba0:	cmp	r0, #0
   14ba4:	str	r1, [r2]
   14ba8:	beq	14bb4 <__assert_fail@plt+0x2d9c>
   14bac:	sub	sp, fp, #28
   14bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bb4:	movw	r0, #59707	; 0xe93b
   14bb8:	sub	r1, fp, #36	; 0x24
   14bbc:	sub	r2, fp, #32
   14bc0:	mov	r3, #3
   14bc4:	movt	r0, #1
   14bc8:	bl	1b9f0 <argp_parse@@Base+0x17ac>
   14bcc:	cmn	r0, #1
   14bd0:	ble	14ca4 <__assert_fail@plt+0x2e8c>
   14bd4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14bd8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   14bdc:	cmp	r0, #1
   14be0:	blt	14cb8 <__assert_fail@plt+0x2ea0>
   14be4:	str	r6, [sp, #4]
   14be8:	add	r6, sp, #11
   14bec:	add	r1, r4, #8
   14bf0:	mov	r0, r6
   14bf4:	mov	r2, #32
   14bf8:	bl	11c98 <strncpy@plt>
   14bfc:	mov	r0, #0
   14c00:	strb	r0, [sp, #43]	; 0x2b
   14c04:	ldrh	r0, [r5, #4]
   14c08:	cmp	r0, #6
   14c0c:	beq	14c50 <__assert_fail@plt+0x2e38>
   14c10:	ldr	r8, [r5, #40]	; 0x28
   14c14:	cmp	r8, #1
   14c18:	blt	14c84 <__assert_fail@plt+0x2e6c>
   14c1c:	ldr	r9, [r5, #44]	; 0x2c
   14c20:	add	r7, r4, #44	; 0x2c
   14c24:	mov	sl, #0
   14c28:	ldr	r0, [r9, sl, lsl #2]
   14c2c:	mov	r1, r7
   14c30:	mov	r2, #32
   14c34:	bl	11ddc <strncmp@plt>
   14c38:	cmp	r0, #0
   14c3c:	beq	14c50 <__assert_fail@plt+0x2e38>
   14c40:	add	sl, sl, #1
   14c44:	cmp	sl, r8
   14c48:	blt	14c28 <__assert_fail@plt+0x2e10>
   14c4c:	b	14c84 <__assert_fail@plt+0x2e6c>
   14c50:	ldr	r0, [sp, #4]
   14c54:	mov	r1, #6
   14c58:	mov	r2, r6
   14c5c:	mov	r3, #10
   14c60:	bl	16398 <daemon@@Base+0x1ac>
   14c64:	cmp	r0, #0
   14c68:	beq	14c84 <__assert_fail@plt+0x2e6c>
   14c6c:	mov	r7, r0
   14c70:	bl	11c50 <__errno_location@plt>
   14c74:	mov	r1, #0
   14c78:	str	r1, [r0]
   14c7c:	mov	r0, r7
   14c80:	bl	1365c <__assert_fail@plt+0x1844>
   14c84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14c88:	add	r4, r4, #384	; 0x180
   14c8c:	add	r1, r0, r0, lsl #1
   14c90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c94:	add	r1, r0, r1, lsl #7
   14c98:	cmp	r4, r1
   14c9c:	bcc	14bec <__assert_fail@plt+0x2dd4>
   14ca0:	b	14cbc <__assert_fail@plt+0x2ea4>
   14ca4:	movw	r0, #59721	; 0xe949
   14ca8:	movt	r0, #1
   14cac:	bl	1365c <__assert_fail@plt+0x1844>
   14cb0:	sub	sp, fp, #28
   14cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cb8:	mov	r0, r4
   14cbc:	bl	1b7d4 <argp_parse@@Base+0x1590>
   14cc0:	movw	r1, #1528	; 0x5f8
   14cc4:	mov	r0, #0
   14cc8:	movt	r1, #3
   14ccc:	str	r0, [r1]
   14cd0:	sub	sp, fp, #28
   14cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14cd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14cdc:	add	fp, sp, #28
   14ce0:	sub	sp, sp, #4
   14ce4:	movw	r1, #58389	; 0xe415
   14ce8:	mov	r4, r0
   14cec:	movt	r1, #1
   14cf0:	bl	11d70 <fopen64@plt>
   14cf4:	cmp	r0, #0
   14cf8:	beq	14fa8 <__assert_fail@plt+0x3190>
   14cfc:	mov	r9, r0
   14d00:	mov	r0, #2048	; 0x800
   14d04:	bl	1c80c <argp_parse@@Base+0x25c8>
   14d08:	cmp	r0, #0
   14d0c:	beq	15028 <__assert_fail@plt+0x3210>
   14d10:	movw	r4, #3144	; 0xc48
   14d14:	mov	r6, r0
   14d18:	movt	r4, #3
   14d1c:	ldr	r0, [r4]
   14d20:	bl	1b7d4 <argp_parse@@Base+0x1590>
   14d24:	mov	r0, #0
   14d28:	mov	r1, #2048	; 0x800
   14d2c:	mov	r2, r9
   14d30:	mov	r5, #2048	; 0x800
   14d34:	str	r0, [r4]
   14d38:	mov	r0, r6
   14d3c:	bl	11a34 <fgets@plt>
   14d40:	cmp	r0, #0
   14d44:	beq	15048 <__assert_fail@plt+0x3230>
   14d48:	mov	sl, #0
   14d4c:	mov	r8, #0
   14d50:	mov	r7, r6
   14d54:	b	14d9c <__assert_fail@plt+0x2f84>
   14d58:	mov	r8, #0
   14d5c:	mov	r0, #1
   14d60:	mov	r1, #464	; 0x1d0
   14d64:	strb	r8, [r6, #1]
   14d68:	bl	1c7b8 <argp_parse@@Base+0x2574>
   14d6c:	mov	r4, r0
   14d70:	mov	r0, r7
   14d74:	mov	r1, r4
   14d78:	bl	15090 <__assert_fail@plt+0x3278>
   14d7c:	movw	r0, #2640	; 0xa50
   14d80:	mov	r6, r7
   14d84:	movt	r0, #3
   14d88:	mov	r1, r0
   14d8c:	ldr	r0, [r0]
   14d90:	str	r4, [r1]
   14d94:	str	r0, [r4]
   14d98:	b	14f88 <__assert_fail@plt+0x3170>
   14d9c:	mov	r0, r6
   14da0:	bl	11c20 <strlen@plt>
   14da4:	mov	r4, r0
   14da8:	cmp	r8, #0
   14dac:	beq	14dec <__assert_fail@plt+0x2fd4>
   14db0:	mov	r1, r6
   14db4:	ldrb	r0, [r1]
   14db8:	cmp	r0, #32
   14dbc:	cmpne	r0, #9
   14dc0:	bne	14dd8 <__assert_fail@plt+0x2fc0>
   14dc4:	add	r1, r1, #1
   14dc8:	ldrb	r0, [r1]
   14dcc:	cmp	r0, #32
   14dd0:	cmpne	r0, #9
   14dd4:	beq	14dc4 <__assert_fail@plt+0x2fac>
   14dd8:	sub	r0, r6, r1
   14ddc:	add	r4, r0, r4
   14de0:	mov	r0, r6
   14de4:	add	r2, r4, #1
   14de8:	bl	11a04 <memmove@plt>
   14dec:	mov	r0, r6
   14df0:	mov	r1, #10
   14df4:	bl	11c38 <strchr@plt>
   14df8:	cmp	r0, #0
   14dfc:	beq	14e94 <__assert_fail@plt+0x307c>
   14e00:	bl	11bfc <__ctype_b_loc@plt>
   14e04:	mov	r4, r0
   14e08:	ldr	r0, [r0]
   14e0c:	mov	r1, r7
   14e10:	ldrb	r2, [r1], #1
   14e14:	add	r3, r0, r2, lsl #1
   14e18:	ldrb	r3, [r3, #1]
   14e1c:	tst	r3, #32
   14e20:	bne	14e10 <__assert_fail@plt+0x2ff8>
   14e24:	cmp	r2, #35	; 0x23
   14e28:	beq	14ec4 <__assert_fail@plt+0x30ac>
   14e2c:	cmp	r2, #33	; 0x21
   14e30:	beq	14edc <__assert_fail@plt+0x30c4>
   14e34:	cmp	r2, #0
   14e38:	beq	14f80 <__assert_fail@plt+0x3168>
   14e3c:	sub	r6, r1, #1
   14e40:	mov	r0, r6
   14e44:	bl	11c20 <strlen@plt>
   14e48:	add	r2, r0, #1
   14e4c:	mov	r0, r7
   14e50:	mov	r1, r6
   14e54:	bl	11a04 <memmove@plt>
   14e58:	mov	r0, r7
   14e5c:	bl	11c20 <strlen@plt>
   14e60:	add	r6, r7, r0
   14e64:	ldr	r0, [r4]
   14e68:	ldrb	r1, [r6, #-1]!
   14e6c:	add	r2, r0, r1, lsl #1
   14e70:	ldrb	r2, [r2, #1]
   14e74:	tst	r2, #32
   14e78:	bne	14e68 <__assert_fail@plt+0x3050>
   14e7c:	cmp	r1, #92	; 0x5c
   14e80:	bne	14d58 <__assert_fail@plt+0x2f40>
   14e84:	mov	r0, #0
   14e88:	mov	r8, #1
   14e8c:	strb	r0, [r6]
   14e90:	b	14f88 <__assert_fail@plt+0x3170>
   14e94:	lsl	r5, r5, #1
   14e98:	mov	r0, r7
   14e9c:	mov	r1, r5
   14ea0:	bl	1c83c <argp_parse@@Base+0x25f8>
   14ea4:	cmp	r0, #0
   14ea8:	beq	15068 <__assert_fail@plt+0x3250>
   14eac:	add	r1, r0, sl
   14eb0:	mov	r8, #0
   14eb4:	mov	r7, r0
   14eb8:	add	r1, r1, r4
   14ebc:	sub	r6, r1, #1
   14ec0:	b	14f88 <__assert_fail@plt+0x3170>
   14ec4:	ldrb	r2, [r1]
   14ec8:	mov	r8, #0
   14ecc:	cmp	r2, #33	; 0x21
   14ed0:	bne	14f84 <__assert_fail@plt+0x316c>
   14ed4:	add	r1, r1, #1
   14ed8:	b	14ee8 <__assert_fail@plt+0x30d0>
   14edc:	ldrb	r2, [r1]
   14ee0:	cmp	r2, #33	; 0x21
   14ee4:	addeq	r1, r1, #1
   14ee8:	sub	r4, r1, #1
   14eec:	ldrb	r1, [r4, #1]!
   14ef0:	add	r2, r0, r1, lsl #1
   14ef4:	ldrb	r2, [r2, #1]
   14ef8:	tst	r2, #32
   14efc:	bne	14eec <__assert_fail@plt+0x30d4>
   14f00:	cmp	r1, #0
   14f04:	beq	14f80 <__assert_fail@plt+0x3168>
   14f08:	movw	r0, #3144	; 0xc48
   14f0c:	movt	r0, #3
   14f10:	mov	r6, r0
   14f14:	ldr	r0, [r0]
   14f18:	bl	1b7d4 <argp_parse@@Base+0x1590>
   14f1c:	mov	r8, #0
   14f20:	str	r8, [r6]
   14f24:	ldrb	r0, [r4]
   14f28:	cmp	r0, #42	; 0x2a
   14f2c:	beq	14f84 <__assert_fail@plt+0x316c>
   14f30:	mov	r0, r4
   14f34:	mov	r1, #44	; 0x2c
   14f38:	bl	11c38 <strchr@plt>
   14f3c:	cmp	r0, #0
   14f40:	movne	r1, #0
   14f44:	strbne	r1, [r0]
   14f48:	movw	r1, #61851	; 0xf19b
   14f4c:	mov	r0, r4
   14f50:	movt	r1, #1
   14f54:	bl	11d88 <strpbrk@plt>
   14f58:	cmp	r0, #0
   14f5c:	movne	r1, #0
   14f60:	strbne	r1, [r0]
   14f64:	mov	r0, r4
   14f68:	bl	11aac <strdup@plt>
   14f6c:	movw	r1, #3144	; 0xc48
   14f70:	mov	r6, r7
   14f74:	movt	r1, #3
   14f78:	str	r0, [r1]
   14f7c:	b	14f88 <__assert_fail@plt+0x3170>
   14f80:	mov	r8, #0
   14f84:	mov	r6, r7
   14f88:	sub	sl, r6, r7
   14f8c:	mov	r0, r6
   14f90:	mov	r2, r9
   14f94:	sub	r1, r5, sl
   14f98:	bl	11a34 <fgets@plt>
   14f9c:	cmp	r0, #0
   14fa0:	bne	14d9c <__assert_fail@plt+0x2f84>
   14fa4:	b	1504c <__assert_fail@plt+0x3234>
   14fa8:	movw	r0, #61728	; 0xf120
   14fac:	mov	r1, r4
   14fb0:	movt	r0, #1
   14fb4:	bl	135c4 <__assert_fail@plt+0x17ac>
   14fb8:	movw	r5, #2640	; 0xa50
   14fbc:	movt	r5, #3
   14fc0:	ldr	r0, [r5]
   14fc4:	cmp	r0, #0
   14fc8:	bne	15010 <__assert_fail@plt+0x31f8>
   14fcc:	mov	r0, #1
   14fd0:	mov	r1, #464	; 0x1d0
   14fd4:	bl	1c7b8 <argp_parse@@Base+0x2574>
   14fd8:	mov	r4, r0
   14fdc:	movw	r0, #61744	; 0xf130
   14fe0:	movt	r0, #1
   14fe4:	mov	r1, r4
   14fe8:	bl	15090 <__assert_fail@plt+0x3278>
   14fec:	mov	r0, #1
   14ff0:	mov	r1, #464	; 0x1d0
   14ff4:	bl	1c7b8 <argp_parse@@Base+0x2574>
   14ff8:	mov	r1, r0
   14ffc:	str	r0, [r4]
   15000:	movw	r0, #61763	; 0xf143
   15004:	movt	r0, #1
   15008:	bl	15090 <__assert_fail@plt+0x3278>
   1500c:	str	r4, [r5]
   15010:	movw	r1, #3128	; 0xc38
   15014:	mov	r0, #1
   15018:	movt	r1, #3
   1501c:	str	r0, [r1]
   15020:	sub	sp, fp, #28
   15024:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15028:	movw	r0, #61773	; 0xf14d
   1502c:	movt	r0, #1
   15030:	bl	135c4 <__assert_fail@plt+0x17ac>
   15034:	mov	r0, r9
   15038:	bl	11cc8 <fclose@plt>
   1503c:	mov	r0, #0
   15040:	sub	sp, fp, #28
   15044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15048:	mov	r7, r6
   1504c:	mov	r0, r9
   15050:	bl	11cc8 <fclose@plt>
   15054:	mov	r0, r7
   15058:	bl	1b7d4 <argp_parse@@Base+0x1590>
   1505c:	mov	r0, #1
   15060:	sub	sp, fp, #28
   15064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15068:	movw	r0, #61814	; 0xf176
   1506c:	movt	r0, #1
   15070:	bl	135c4 <__assert_fail@plt+0x17ac>
   15074:	mov	r0, r9
   15078:	bl	11cc8 <fclose@plt>
   1507c:	mov	r0, r7
   15080:	bl	1b7d4 <argp_parse@@Base+0x1590>
   15084:	mov	r0, #0
   15088:	sub	sp, fp, #28
   1508c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15090:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15094:	add	fp, sp, #28
   15098:	sub	sp, sp, #4
   1509c:	vpush	{d8-d11}
   150a0:	sub	sp, sp, #216	; 0xd8
   150a4:	sub	sp, sp, #1024	; 0x400
   150a8:	mov	r5, r0
   150ac:	movw	r0, #3144	; 0xc48
   150b0:	movw	r2, #60159	; 0xeaff
   150b4:	movw	r3, #61949	; 0xf1fd
   150b8:	mov	r4, r1
   150bc:	movt	r0, #3
   150c0:	movt	r2, #1
   150c4:	movt	r3, #1
   150c8:	mov	r1, r5
   150cc:	ldr	r0, [r0]
   150d0:	cmp	r0, #0
   150d4:	moveq	r2, r3
   150d8:	movne	r3, r0
   150dc:	movw	r0, #60143	; 0xeaef
   150e0:	movt	r0, #1
   150e4:	bl	135c4 <__assert_fail@plt+0x17ac>
   150e8:	bl	11c50 <__errno_location@plt>
   150ec:	mov	r1, #0
   150f0:	mov	r2, #464	; 0x1d0
   150f4:	str	r1, [r0]
   150f8:	mov	r0, r4
   150fc:	mov	r1, #0
   15100:	bl	11c8c <memset@plt>
   15104:	movw	r9, #60168	; 0xeb08
   15108:	add	r0, r4, #12
   1510c:	add	r7, sp, #208	; 0xd0
   15110:	str	r4, [sp, #4]
   15114:	movt	r9, #1
   15118:	str	r0, [sp]
   1511c:	b	155c0 <__assert_fail@plt+0x37a8>
   15120:	mov	r5, r8
   15124:	uxtb	r0, r6
   15128:	cmp	r0, #0
   1512c:	cmpne	r0, #9
   15130:	beq	15140 <__assert_fail@plt+0x3328>
   15134:	ldrb	r6, [r5, #1]!
   15138:	cmp	r0, #46	; 0x2e
   1513c:	bne	15124 <__assert_fail@plt+0x330c>
   15140:	mov	r4, r7
   15144:	tst	r6, #255	; 0xff
   15148:	beq	15174 <__assert_fail@plt+0x335c>
   1514c:	uxtb	r1, r6
   15150:	mov	r0, r9
   15154:	mov	r2, #5
   15158:	bl	11cb0 <memchr@plt>
   1515c:	cmp	r0, #0
   15160:	bne	15180 <__assert_fail@plt+0x3368>
   15164:	strb	r6, [r4], #1
   15168:	ldrb	r6, [r5, #1]!
   1516c:	cmp	r6, #0
   15170:	bne	1514c <__assert_fail@plt+0x3334>
   15174:	mov	r0, #0
   15178:	strb	r0, [r4]
   1517c:	b	151b0 <__assert_fail@plt+0x3398>
   15180:	mov	r0, #0
   15184:	strb	r0, [r4]
   15188:	movw	r4, #60170	; 0xeb0a
   1518c:	movt	r4, #1
   15190:	uxtb	r1, r6
   15194:	mov	r0, r4
   15198:	mov	r2, #3
   1519c:	bl	11cb0 <memchr@plt>
   151a0:	cmp	r0, #0
   151a4:	ldrbne	r6, [r5, #1]!
   151a8:	cmpne	r6, #0
   151ac:	bne	15190 <__assert_fail@plt+0x3378>
   151b0:	mov	r4, #0
   151b4:	mov	sl, #0
   151b8:	mov	r6, r7
   151bc:	ldrb	r7, [r6]
   151c0:	cmp	r7, #33	; 0x21
   151c4:	cmpne	r7, #61	; 0x3d
   151c8:	bne	15208 <__assert_fail@plt+0x33f0>
   151cc:	add	r6, r6, #1
   151d0:	cmp	r7, #33	; 0x21
   151d4:	beq	151f4 <__assert_fail@plt+0x33dc>
   151d8:	cmp	r7, #61	; 0x3d
   151dc:	moveq	r4, #1
   151e0:	ldrb	r7, [r6]
   151e4:	cmp	r7, #33	; 0x21
   151e8:	cmpne	r7, #61	; 0x3d
   151ec:	beq	151cc <__assert_fail@plt+0x33b4>
   151f0:	b	15208 <__assert_fail@plt+0x33f0>
   151f4:	mov	sl, #1
   151f8:	ldrb	r7, [r6]
   151fc:	cmp	r7, #33	; 0x21
   15200:	cmpne	r7, #61	; 0x3d
   15204:	beq	151cc <__assert_fail@plt+0x33b4>
   15208:	cmp	r7, #42	; 0x2a
   1520c:	bne	1522c <__assert_fail@plt+0x3414>
   15210:	mov	r6, #0
   15214:	mov	r0, #255	; 0xff
   15218:	add	r7, sp, #208	; 0xd0
   1521c:	ldrb	r4, [r8]
   15220:	cmp	r4, #0
   15224:	beq	155c0 <__assert_fail@plt+0x37a8>
   15228:	b	1532c <__assert_fail@plt+0x3514>
   1522c:	bl	11bfc <__ctype_b_loc@plt>
   15230:	ldr	r0, [r0]
   15234:	add	r0, r0, r7, lsl #1
   15238:	ldrb	r0, [r0, #1]
   1523c:	tst	r0, #8
   15240:	bne	1528c <__assert_fail@plt+0x3474>
   15244:	movw	r0, #424	; 0x1a8
   15248:	movt	r0, #3
   1524c:	ldr	r1, [r0]
   15250:	cmp	r1, #0
   15254:	beq	158f4 <__assert_fail@plt+0x3adc>
   15258:	movw	r0, #424	; 0x1a8
   1525c:	movt	r0, #3
   15260:	add	r7, r0, #4
   15264:	mov	r0, r6
   15268:	bl	11b0c <strcasecmp@plt>
   1526c:	cmp	r0, #0
   15270:	beq	15300 <__assert_fail@plt+0x34e8>
   15274:	ldr	r1, [r7, #4]
   15278:	add	r0, r7, #8
   1527c:	mov	r7, r0
   15280:	cmp	r1, #0
   15284:	bne	15264 <__assert_fail@plt+0x344c>
   15288:	b	158f4 <__assert_fail@plt+0x3adc>
   1528c:	mov	r0, r6
   15290:	mov	r1, #0
   15294:	mov	r2, #10
   15298:	bl	119a4 <strtol@plt>
   1529c:	cmp	r0, #0
   152a0:	blt	158f4 <__assert_fail@plt+0x3adc>
   152a4:	cmp	r0, #8
   152a8:	blt	152b4 <__assert_fail@plt+0x349c>
   152ac:	cmp	r0, #16
   152b0:	bne	158f4 <__assert_fail@plt+0x3adc>
   152b4:	cmp	r0, #16
   152b8:	bne	152d8 <__assert_fail@plt+0x34c0>
   152bc:	mov	r6, #255	; 0xff
   152c0:	mov	r0, #0
   152c4:	add	r7, sp, #208	; 0xd0
   152c8:	ldrb	r4, [r8]
   152cc:	cmp	r4, #0
   152d0:	beq	155c0 <__assert_fail@plt+0x37a8>
   152d4:	b	1532c <__assert_fail@plt+0x3514>
   152d8:	cmp	r4, #0
   152dc:	add	r7, sp, #208	; 0xd0
   152e0:	beq	15310 <__assert_fail@plt+0x34f8>
   152e4:	mov	r1, #1
   152e8:	lsl	r0, r1, r0
   152ec:	mov	r6, #0
   152f0:	ldrb	r4, [r8]
   152f4:	cmp	r4, #0
   152f8:	beq	155c0 <__assert_fail@plt+0x37a8>
   152fc:	b	1532c <__assert_fail@plt+0x3514>
   15300:	ldr	r0, [r7]
   15304:	cmp	r0, #0
   15308:	bge	152a4 <__assert_fail@plt+0x348c>
   1530c:	b	158f4 <__assert_fail@plt+0x3adc>
   15310:	add	r0, r0, #1
   15314:	mvn	r1, #0
   15318:	mvn	r0, r1, lsl r0
   1531c:	mov	r6, #0
   15320:	ldrb	r4, [r8]
   15324:	cmp	r4, #0
   15328:	beq	155c0 <__assert_fail@plt+0x37a8>
   1532c:	cmp	sl, #0
   15330:	mov	r1, r0
   15334:	moveq	r1, r6
   15338:	moveq	r6, r0
   1533c:	mvn	sl, r1
   15340:	vdup.8	q4, r6
   15344:	vdup.8	q5, sl
   15348:	movw	r0, #60200	; 0xeb28
   1534c:	uxtb	r1, r4
   15350:	mov	r2, #5
   15354:	movt	r0, #1
   15358:	bl	11cb0 <memchr@plt>
   1535c:	cmp	r0, #0
   15360:	bne	155c0 <__assert_fail@plt+0x37a8>
   15364:	tst	r4, #255	; 0xff
   15368:	beq	15398 <__assert_fail@plt+0x3580>
   1536c:	movw	r0, #60205	; 0xeb2d
   15370:	uxtb	r1, r4
   15374:	mov	r2, #6
   15378:	movt	r0, #1
   1537c:	bl	11cb0 <memchr@plt>
   15380:	cmp	r0, #0
   15384:	bne	15398 <__assert_fail@plt+0x3580>
   15388:	strb	r4, [r7], #1
   1538c:	ldrb	r4, [r8, #1]!
   15390:	cmp	r4, #0
   15394:	bne	1536c <__assert_fail@plt+0x3554>
   15398:	mov	r0, #0
   1539c:	strb	r0, [r7]
   153a0:	ldrb	r4, [sp, #208]	; 0xd0
   153a4:	cmp	r4, #42	; 0x2a
   153a8:	bne	1540c <__assert_fail@plt+0x35f4>
   153ac:	ldrb	r0, [sp, #209]	; 0xd1
   153b0:	movw	r3, #2636	; 0xa4c
   153b4:	mov	r4, #1
   153b8:	movt	r3, #3
   153bc:	cmp	r0, #42	; 0x2a
   153c0:	bne	15470 <__assert_fail@plt+0x3658>
   153c4:	ldr	r2, [sp]
   153c8:	mov	r0, #0
   153cc:	add	r7, sp, #208	; 0xd0
   153d0:	ldr	r1, [r3]
   153d4:	tst	r1, r4, lsl r0
   153d8:	beq	153ec <__assert_fail@plt+0x35d4>
   153dc:	add	r0, r0, #1
   153e0:	cmp	r0, #25
   153e4:	bne	153d0 <__assert_fail@plt+0x35b8>
   153e8:	b	155a8 <__assert_fail@plt+0x3790>
   153ec:	ldrb	r1, [r2, r0]
   153f0:	and	r1, r1, sl
   153f4:	orr	r1, r1, r6
   153f8:	strb	r1, [r2, r0]
   153fc:	add	r0, r0, #1
   15400:	cmp	r0, #25
   15404:	bne	153d0 <__assert_fail@plt+0x35b8>
   15408:	b	155a8 <__assert_fail@plt+0x3790>
   1540c:	bl	11bfc <__ctype_b_loc@plt>
   15410:	ldr	r0, [r0]
   15414:	add	r0, r0, r4, lsl #1
   15418:	ldrb	r0, [r0, #1]
   1541c:	tst	r0, #8
   15420:	bne	15530 <__assert_fail@plt+0x3718>
   15424:	movw	r0, #528	; 0x210
   15428:	add	r7, sp, #208	; 0xd0
   1542c:	movt	r0, #3
   15430:	ldr	r1, [r0]
   15434:	cmp	r1, #0
   15438:	beq	1590c <__assert_fail@plt+0x3af4>
   1543c:	movw	r0, #528	; 0x210
   15440:	movt	r0, #3
   15444:	add	r4, r0, #4
   15448:	mov	r0, r7
   1544c:	bl	11b0c <strcasecmp@plt>
   15450:	cmp	r0, #0
   15454:	beq	15550 <__assert_fail@plt+0x3738>
   15458:	ldr	r1, [r4, #4]
   1545c:	add	r0, r4, #8
   15460:	mov	r4, r0
   15464:	cmp	r1, #0
   15468:	bne	15448 <__assert_fail@plt+0x3630>
   1546c:	b	1590c <__assert_fail@plt+0x3af4>
   15470:	ldr	r0, [sp]
   15474:	ldr	r7, [sp, #4]
   15478:	vld1.8	{d16-d17}, [r0]
   1547c:	vand	q8, q8, q5
   15480:	vorr	q8, q8, q4
   15484:	vst1.8	{d16-d17}, [r0]
   15488:	ldrb	r0, [r7, #28]
   1548c:	ldrb	r1, [r7, #29]
   15490:	ldrb	r2, [r7, #30]
   15494:	ldrb	r3, [r7, #31]
   15498:	and	r0, r0, sl
   1549c:	orr	r0, r0, r6
   154a0:	strb	r0, [r7, #28]
   154a4:	and	r0, r1, sl
   154a8:	orr	r0, r0, r6
   154ac:	strb	r0, [r7, #29]
   154b0:	and	r0, r2, sl
   154b4:	orr	r0, r0, r6
   154b8:	strb	r0, [r7, #30]
   154bc:	and	r0, r3, sl
   154c0:	orr	r0, r0, r6
   154c4:	strb	r0, [r7, #31]
   154c8:	ldrb	r0, [r7, #32]
   154cc:	and	r0, r0, sl
   154d0:	orr	r0, r0, r6
   154d4:	strb	r0, [r7, #32]
   154d8:	ldrb	r0, [r7, #33]	; 0x21
   154dc:	and	r0, r0, sl
   154e0:	orr	r0, r0, r6
   154e4:	strb	r0, [r7, #33]	; 0x21
   154e8:	ldrb	r0, [r7, #34]	; 0x22
   154ec:	and	r0, r0, sl
   154f0:	orr	r0, r0, r6
   154f4:	strb	r0, [r7, #34]	; 0x22
   154f8:	ldrb	r0, [r7, #35]	; 0x23
   154fc:	and	r0, r0, sl
   15500:	orr	r0, r0, r6
   15504:	strb	r0, [r7, #35]	; 0x23
   15508:	ldrb	r0, [r7, #36]	; 0x24
   1550c:	and	r0, r0, sl
   15510:	orr	r0, r0, r6
   15514:	strb	r0, [r7, #36]	; 0x24
   15518:	add	r7, sp, #208	; 0xd0
   1551c:	ldrb	r4, [r8]
   15520:	cmp	r4, #32
   15524:	cmpne	r4, #44	; 0x2c
   15528:	beq	155a4 <__assert_fail@plt+0x378c>
   1552c:	b	155b8 <__assert_fail@plt+0x37a0>
   15530:	add	r7, sp, #208	; 0xd0
   15534:	mov	r1, #0
   15538:	mov	r2, #10
   1553c:	mov	r0, r7
   15540:	bl	119a4 <strtol@plt>
   15544:	cmp	r0, #193	; 0xc1
   15548:	bcc	1555c <__assert_fail@plt+0x3744>
   1554c:	b	1590c <__assert_fail@plt+0x3af4>
   15550:	ldr	r0, [r4]
   15554:	cmp	r0, #193	; 0xc1
   15558:	bcs	1590c <__assert_fail@plt+0x3af4>
   1555c:	ubfx	r0, r0, #3, #7
   15560:	ldr	r1, [sp, #4]
   15564:	mov	r3, #1
   15568:	add	r1, r1, r0
   1556c:	ldrb	r2, [r1, #12]
   15570:	and	r2, r2, sl
   15574:	orr	r2, r2, r6
   15578:	strb	r2, [r1, #12]
   1557c:	movw	r1, #2636	; 0xa4c
   15580:	movt	r1, #3
   15584:	mov	r2, r1
   15588:	ldr	r1, [r1]
   1558c:	orr	r0, r1, r3, lsl r0
   15590:	str	r0, [r2]
   15594:	ldrb	r4, [r8]
   15598:	cmp	r4, #32
   1559c:	cmpne	r4, #44	; 0x2c
   155a0:	bne	155b8 <__assert_fail@plt+0x37a0>
   155a4:	add	r8, r8, #1
   155a8:	ldrb	r4, [r8]
   155ac:	cmp	r4, #32
   155b0:	cmpne	r4, #44	; 0x2c
   155b4:	beq	155a4 <__assert_fail@plt+0x378c>
   155b8:	cmp	r4, #0
   155bc:	bne	15348 <__assert_fail@plt+0x3530>
   155c0:	ldrb	r6, [r5]
   155c4:	mov	r8, r5
   155c8:	cmp	r6, #0
   155cc:	beq	155dc <__assert_fail@plt+0x37c4>
   155d0:	cmp	r6, #9
   155d4:	cmpne	r6, #32
   155d8:	bne	15120 <__assert_fail@plt+0x3308>
   155dc:	ldr	r9, [sp, #4]
   155e0:	add	r5, r8, #1
   155e4:	uxtb	r0, r6
   155e8:	cmp	r0, #9
   155ec:	cmpne	r0, #32
   155f0:	bne	15608 <__assert_fail@plt+0x37f0>
   155f4:	ldrb	r6, [r5], #1
   155f8:	uxtb	r0, r6
   155fc:	cmp	r0, #9
   15600:	cmpne	r0, #32
   15604:	beq	155f4 <__assert_fail@plt+0x37dc>
   15608:	cmp	r0, #45	; 0x2d
   1560c:	bne	156a8 <__assert_fail@plt+0x3890>
   15610:	ldr	r0, [r9, #460]	; 0x1cc
   15614:	orr	r0, r0, #1
   15618:	str	r0, [r9, #460]	; 0x1cc
   1561c:	ldrb	r6, [r5]
   15620:	uxtb	r0, r6
   15624:	cmp	r0, #46	; 0x2e
   15628:	ble	156b8 <__assert_fail@plt+0x38a0>
   1562c:	cmp	r0, #47	; 0x2f
   15630:	beq	156d0 <__assert_fail@plt+0x38b8>
   15634:	cmp	r0, #64	; 0x40
   15638:	beq	15734 <__assert_fail@plt+0x391c>
   1563c:	cmp	r0, #124	; 0x7c
   15640:	bne	157f4 <__assert_fail@plt+0x39dc>
   15644:	mov	r0, r5
   15648:	bl	11aac <strdup@plt>
   1564c:	add	r4, r5, #1
   15650:	str	r0, [r9, #40]	; 0x28
   15654:	movw	r1, #2050	; 0x802
   15658:	mov	r0, r4
   1565c:	bl	11b90 <open64@plt>
   15660:	mov	r5, r0
   15664:	strh	r0, [r9, #6]
   15668:	lsl	r0, r0, #16
   1566c:	cmn	r0, #1
   15670:	ble	15948 <__assert_fail@plt+0x3b30>
   15674:	movw	r0, #1304	; 0x518
   15678:	movt	r0, #3
   1567c:	add	r1, r0, #64	; 0x40
   15680:	mov	r0, r4
   15684:	bl	11998 <strcmp@plt>
   15688:	cmp	r0, #0
   1568c:	beq	15940 <__assert_fail@plt+0x3b28>
   15690:	sxth	r0, r5
   15694:	bl	11dd0 <isatty@plt>
   15698:	cmp	r0, #0
   1569c:	bne	1572c <__assert_fail@plt+0x3914>
   156a0:	mov	r0, #9
   156a4:	b	159d4 <__assert_fail@plt+0x3bbc>
   156a8:	sub	r5, r5, #1
   156ac:	uxtb	r0, r6
   156b0:	cmp	r0, #46	; 0x2e
   156b4:	bgt	1562c <__assert_fail@plt+0x3814>
   156b8:	cmp	r0, #0
   156bc:	beq	157d0 <__assert_fail@plt+0x39b8>
   156c0:	cmp	r0, #42	; 0x2a
   156c4:	bne	157f4 <__assert_fail@plt+0x39dc>
   156c8:	mov	r0, #6
   156cc:	b	159d4 <__assert_fail@plt+0x3bbc>
   156d0:	mov	r0, r5
   156d4:	bl	11aac <strdup@plt>
   156d8:	str	r0, [r9, #40]	; 0x28
   156dc:	mov	r0, r5
   156e0:	movw	r1, #1089	; 0x441
   156e4:	mov	r2, #420	; 0x1a4
   156e8:	bl	11b90 <open64@plt>
   156ec:	mov	r4, r0
   156f0:	strh	r0, [r9, #6]
   156f4:	lsl	r0, r0, #16
   156f8:	cmn	r0, #1
   156fc:	ble	15968 <__assert_fail@plt+0x3b50>
   15700:	movw	r0, #1304	; 0x518
   15704:	movt	r0, #3
   15708:	add	r1, r0, #64	; 0x40
   1570c:	mov	r0, r5
   15710:	bl	11998 <strcmp@plt>
   15714:	cmp	r0, #0
   15718:	beq	15940 <__assert_fail@plt+0x3b28>
   1571c:	sxth	r0, r4
   15720:	bl	11dd0 <isatty@plt>
   15724:	cmp	r0, #0
   15728:	beq	159d0 <__assert_fail@plt+0x3bb8>
   1572c:	mov	r0, #2
   15730:	b	159d4 <__assert_fail@plt+0x3bbc>
   15734:	add	r4, r5, #1
   15738:	mov	r0, r4
   1573c:	bl	11aac <strdup@plt>
   15740:	str	r0, [r9, #40]	; 0x28
   15744:	add	r0, sp, #8
   15748:	vmov.i32	q8, #0	; 0x00000000
   1574c:	movw	r6, #1304	; 0x518
   15750:	add	r5, r9, #44	; 0x2c
   15754:	mov	r2, #132	; 0x84
   15758:	add	r1, r0, #16
   1575c:	movt	r6, #3
   15760:	vst1.64	{d16-d17}, [r1]
   15764:	mov	r1, #8
   15768:	vst1.64	{d16-d17}, [r0], r1
   1576c:	mov	r1, #2
   15770:	str	r1, [r0]
   15774:	ldr	r0, [r6, #20]
   15778:	mov	r1, #0
   1577c:	cmp	r0, #0
   15780:	str	r0, [sp, #12]
   15784:	moveq	r0, #32
   15788:	streq	r0, [sp, #8]
   1578c:	mov	r0, r5
   15790:	bl	11c8c <memset@plt>
   15794:	ldr	r1, [r6, #32]
   15798:	add	r2, sp, #8
   1579c:	sub	r3, fp, #72	; 0x48
   157a0:	mov	r0, r4
   157a4:	bl	11da0 <getaddrinfo@plt>
   157a8:	cmn	r0, #10
   157ac:	beq	157c0 <__assert_fail@plt+0x39a8>
   157b0:	cmp	r0, #0
   157b4:	beq	15988 <__assert_fail@plt+0x3b70>
   157b8:	cmn	r0, #3
   157bc:	bne	159b8 <__assert_fail@plt+0x3ba0>
   157c0:	mov	r0, #10
   157c4:	str	r0, [r9, #452]	; 0x1c4
   157c8:	mov	r0, #8
   157cc:	b	159bc <__assert_fail@plt+0x3ba4>
   157d0:	mov	r0, #0
   157d4:	strh	r0, [r9, #4]
   157d8:	movw	r0, #60238	; 0xeb4e
   157dc:	movt	r0, #1
   157e0:	bl	1365c <__assert_fail@plt+0x1844>
   157e4:	sub	sp, fp, #64	; 0x40
   157e8:	vpop	{d8-d11}
   157ec:	add	sp, sp, #4
   157f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157f4:	mov	r0, #1
   157f8:	mov	r1, r5
   157fc:	str	r0, [r9, #40]	; 0x28
   15800:	ldrb	r2, [r1]
   15804:	cmp	r2, #44	; 0x2c
   15808:	bne	15838 <__assert_fail@plt+0x3a20>
   1580c:	b	15820 <__assert_fail@plt+0x3a08>
   15810:	add	r1, r1, #1
   15814:	ldrb	r2, [r1]
   15818:	cmp	r2, #44	; 0x2c
   1581c:	bne	15838 <__assert_fail@plt+0x3a20>
   15820:	add	r0, r0, #1
   15824:	str	r0, [r9, #40]	; 0x28
   15828:	add	r1, r1, #1
   1582c:	ldrb	r2, [r1]
   15830:	cmp	r2, #44	; 0x2c
   15834:	beq	15820 <__assert_fail@plt+0x3a08>
   15838:	cmp	r2, #0
   1583c:	bne	15810 <__assert_fail@plt+0x39f8>
   15840:	lsl	r0, r0, #2
   15844:	bl	1c80c <argp_parse@@Base+0x25c8>
   15848:	str	r0, [r9, #44]	; 0x2c
   1584c:	ldrb	r0, [r5]
   15850:	cmp	r0, #0
   15854:	beq	158ec <__assert_fail@plt+0x3ad4>
   15858:	mov	r8, #0
   1585c:	mov	r7, #0
   15860:	mov	r4, r5
   15864:	b	1586c <__assert_fail@plt+0x3a54>
   15868:	ldrb	r0, [r4, #1]!
   1586c:	uxtb	r0, r0
   15870:	cmp	r0, #0
   15874:	cmpne	r0, #44	; 0x2c
   15878:	bne	15868 <__assert_fail@plt+0x3a50>
   1587c:	sub	r6, r4, r5
   15880:	add	r0, r6, #1
   15884:	bl	1c80c <argp_parse@@Base+0x25c8>
   15888:	ldr	r1, [r9, #44]	; 0x2c
   1588c:	str	r0, [r1, r7, lsl #2]
   15890:	ldr	r0, [r9, #44]	; 0x2c
   15894:	ldr	r0, [r0, r7, lsl #2]
   15898:	cmp	r0, #0
   1589c:	beq	158cc <__assert_fail@plt+0x3ab4>
   158a0:	mov	r1, r5
   158a4:	mov	r2, r6
   158a8:	bl	11c98 <strncpy@plt>
   158ac:	ldr	r0, [r9, #44]	; 0x2c
   158b0:	ldr	r0, [r0, r7, lsl #2]
   158b4:	strb	r8, [r0, r6]
   158b8:	ldrb	r0, [r4]
   158bc:	cmp	r0, #44	; 0x2c
   158c0:	cmpne	r0, #32
   158c4:	bne	158dc <__assert_fail@plt+0x3ac4>
   158c8:	add	r4, r4, #1
   158cc:	ldrb	r0, [r4]
   158d0:	cmp	r0, #44	; 0x2c
   158d4:	cmpne	r0, #32
   158d8:	beq	158c8 <__assert_fail@plt+0x3ab0>
   158dc:	add	r7, r7, #1
   158e0:	cmp	r0, #0
   158e4:	mov	r5, r4
   158e8:	bne	1586c <__assert_fail@plt+0x3a54>
   158ec:	mov	r0, #5
   158f0:	b	159d4 <__assert_fail@plt+0x3bbc>
   158f4:	movw	r2, #60173	; 0xeb0d
   158f8:	add	r4, sp, #8
   158fc:	mov	r1, #200	; 0xc8
   15900:	mov	r3, r6
   15904:	movt	r2, #1
   15908:	b	15920 <__assert_fail@plt+0x3b08>
   1590c:	movw	r2, #60211	; 0xeb33
   15910:	add	r4, sp, #8
   15914:	add	r3, sp, #208	; 0xd0
   15918:	mov	r1, #200	; 0xc8
   1591c:	movt	r2, #1
   15920:	mov	r0, r4
   15924:	bl	11c5c <snprintf@plt>
   15928:	mov	r0, r4
   1592c:	bl	1365c <__assert_fail@plt+0x1844>
   15930:	sub	sp, fp, #64	; 0x40
   15934:	vpop	{d8-d11}
   15938:	add	sp, sp, #4
   1593c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15940:	mov	r0, #3
   15944:	b	159d4 <__assert_fail@plt+0x3bbc>
   15948:	mov	r5, #0
   1594c:	mov	r0, r4
   15950:	strh	r5, [r9, #4]
   15954:	bl	1365c <__assert_fail@plt+0x1844>
   15958:	ldr	r0, [r9, #40]	; 0x28
   1595c:	bl	1b7d4 <argp_parse@@Base+0x1590>
   15960:	str	r5, [r9, #40]	; 0x28
   15964:	b	159d8 <__assert_fail@plt+0x3bc0>
   15968:	mov	r4, #0
   1596c:	mov	r0, r5
   15970:	strh	r4, [r9, #4]
   15974:	bl	1365c <__assert_fail@plt+0x1844>
   15978:	ldr	r0, [r9, #40]	; 0x28
   1597c:	bl	1b7d4 <argp_parse@@Base+0x1590>
   15980:	str	r4, [r9, #40]	; 0x28
   15984:	b	159d8 <__assert_fail@plt+0x3bc0>
   15988:	mov	r0, #4
   1598c:	strh	r0, [r9, #4]
   15990:	ldr	r4, [fp, #-72]	; 0xffffffb8
   15994:	ldr	r0, [r4, #16]
   15998:	str	r0, [r9, #172]	; 0xac
   1599c:	mov	r0, r5
   159a0:	ldr	r2, [r4, #16]
   159a4:	ldr	r1, [r4, #20]
   159a8:	bl	11a58 <memcpy@plt>
   159ac:	mov	r0, r4
   159b0:	bl	11d94 <freeaddrinfo@plt>
   159b4:	b	159d8 <__assert_fail@plt+0x3bc0>
   159b8:	mov	r0, #0
   159bc:	strh	r0, [r9, #4]
   159c0:	mov	r0, #0
   159c4:	bl	11a70 <time@plt>
   159c8:	str	r0, [r9, #8]
   159cc:	b	159d8 <__assert_fail@plt+0x3bc0>
   159d0:	mov	r0, #1
   159d4:	strh	r0, [r9, #4]
   159d8:	movw	r4, #3144	; 0xc48
   159dc:	movt	r4, #3
   159e0:	ldr	r0, [r4]
   159e4:	cmp	r0, #0
   159e8:	beq	15a10 <__assert_fail@plt+0x3bf8>
   159ec:	bl	11aac <strdup@plt>
   159f0:	str	r0, [r9, #436]	; 0x1b4
   159f4:	ldr	r0, [r4]
   159f8:	bl	11c20 <strlen@plt>
   159fc:	str	r0, [r9, #440]	; 0x1b8
   15a00:	sub	sp, fp, #64	; 0x40
   15a04:	vpop	{d8-d11}
   15a08:	add	sp, sp, #4
   15a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a10:	mov	r0, #0
   15a14:	str	r0, [r9, #436]	; 0x1b4
   15a18:	sub	sp, fp, #64	; 0x40
   15a1c:	vpop	{d8-d11}
   15a20:	add	sp, sp, #4
   15a24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a28:	push	{r4, r5, r6, sl, fp, lr}
   15a2c:	add	fp, sp, #16
   15a30:	mov	r6, r1
   15a34:	mov	r4, r0
   15a38:	bl	11bfc <__ctype_b_loc@plt>
   15a3c:	ldrb	r1, [r4]
   15a40:	ldr	r0, [r0]
   15a44:	add	r0, r0, r1, lsl #1
   15a48:	ldrb	r0, [r0, #1]
   15a4c:	tst	r0, #8
   15a50:	bne	15a94 <__assert_fail@plt+0x3c7c>
   15a54:	ldr	r1, [r6]
   15a58:	mvn	r5, #0
   15a5c:	cmp	r1, #0
   15a60:	beq	15a8c <__assert_fail@plt+0x3c74>
   15a64:	add	r6, r6, #4
   15a68:	mov	r0, r4
   15a6c:	bl	11b0c <strcasecmp@plt>
   15a70:	cmp	r0, #0
   15a74:	beq	15aa8 <__assert_fail@plt+0x3c90>
   15a78:	ldr	r1, [r6, #4]
   15a7c:	add	r0, r6, #8
   15a80:	mov	r6, r0
   15a84:	cmp	r1, #0
   15a88:	bne	15a68 <__assert_fail@plt+0x3c50>
   15a8c:	mov	r0, r5
   15a90:	pop	{r4, r5, r6, sl, fp, pc}
   15a94:	mov	r0, r4
   15a98:	mov	r1, #0
   15a9c:	mov	r2, #10
   15aa0:	pop	{r4, r5, r6, sl, fp, lr}
   15aa4:	b	119a4 <strtol@plt>
   15aa8:	ldr	r5, [r6]
   15aac:	mov	r0, r5
   15ab0:	pop	{r4, r5, r6, sl, fp, pc}
   15ab4:	push	{r4, r5, r6, sl, fp, lr}
   15ab8:	add	fp, sp, #16
   15abc:	sub	sp, sp, #8
   15ac0:	mov	r4, r1
   15ac4:	sub	r1, r0, #52	; 0x34
   15ac8:	mov	r0, #7
   15acc:	cmp	r1, #207	; 0xcf
   15ad0:	bhi	1603c <__assert_fail@plt+0x4224>
   15ad4:	mov	r5, r2
   15ad8:	add	r2, pc, #0
   15adc:	ldr	pc, [r2, r1, lsl #2]
   15ae0:	andeq	r5, r1, r0, lsr #28
   15ae4:	andeq	r6, r1, ip, lsr r0
   15ae8:	andeq	r5, r1, r4, lsr lr
   15aec:	andeq	r6, r1, ip, lsr r0
   15af0:	andeq	r6, r1, ip, lsr r0
   15af4:	andeq	r6, r1, ip, lsr r0
   15af8:	andeq	r6, r1, ip, lsr r0
   15afc:	andeq	r6, r1, ip, lsr r0
   15b00:	andeq	r6, r1, ip, lsr r0
   15b04:	andeq	r6, r1, ip, lsr r0
   15b08:	andeq	r6, r1, ip, lsr r0
   15b0c:	andeq	r6, r1, ip, lsr r0
   15b10:	andeq	r6, r1, ip, lsr r0
   15b14:	andeq	r6, r1, ip, lsr r0
   15b18:	andeq	r5, r1, r8, asr #28
   15b1c:	andeq	r6, r1, ip, lsr r0
   15b20:	andeq	r5, r1, r8, asr lr
   15b24:	andeq	r6, r1, ip, lsr r0
   15b28:	andeq	r6, r1, ip, lsr r0
   15b2c:	andeq	r6, r1, ip, lsr r0
   15b30:	andeq	r6, r1, ip, lsr r0
   15b34:	andeq	r6, r1, ip, lsr r0
   15b38:	andeq	r6, r1, ip, lsr r0
   15b3c:	andeq	r6, r1, ip, lsr r0
   15b40:	andeq	r6, r1, ip, lsr r0
   15b44:	andeq	r6, r1, ip, lsr r0
   15b48:	andeq	r6, r1, ip, lsr r0
   15b4c:	andeq	r6, r1, ip, lsr r0
   15b50:	andeq	r5, r1, r8, ror #28
   15b54:	andeq	r6, r1, ip, lsr r0
   15b58:	andeq	r6, r1, ip, lsr r0
   15b5c:	andeq	r5, r1, r8, ror lr
   15b60:	andeq	r5, r1, r4, lsl #29
   15b64:	andeq	r6, r1, ip, lsr r0
   15b68:	andeq	r6, r1, ip, lsr r0
   15b6c:	andeq	r6, r1, ip, lsr r0
   15b70:	andeq	r6, r1, ip, lsr r0
   15b74:	andeq	r6, r1, ip, lsr r0
   15b78:	andeq	r6, r1, ip, lsr r0
   15b7c:	andeq	r6, r1, ip, lsr r0
   15b80:	andeq	r6, r1, ip, lsr r0
   15b84:	andeq	r6, r1, ip, lsr r0
   15b88:	andeq	r6, r1, ip, lsr r0
   15b8c:	andeq	r6, r1, ip, lsr r0
   15b90:	andeq	r6, r1, ip, lsr r0
   15b94:	muleq	r1, r8, lr
   15b98:	andeq	r5, r1, ip, lsl #30
   15b9c:	andeq	r6, r1, ip, lsr r0
   15ba0:	andeq	r5, r1, ip, lsl pc
   15ba4:	andeq	r6, r1, ip, lsr r0
   15ba8:	andeq	r5, r1, r8, lsr pc
   15bac:	andeq	r6, r1, ip, lsr r0
   15bb0:	andeq	r5, r1, r8, asr #30
   15bb4:	andeq	r6, r1, ip, lsr r0
   15bb8:	andeq	r6, r1, ip, lsr r0
   15bbc:	andeq	r6, r1, ip, lsr r0
   15bc0:	andeq	r5, r1, r0, ror #30
   15bc4:	andeq	r5, r1, ip, ror #30
   15bc8:			; <UNDEFINED> instruction: 0x00015fbc
   15bcc:	andeq	r6, r1, ip, lsr r0
   15bd0:	andeq	r5, r1, r8, asr #31
   15bd4:	andeq	r6, r1, ip, lsr r0
   15bd8:	andeq	r5, r1, r8, ror #31
   15bdc:	strdeq	r5, [r1], -r4
   15be0:	andeq	r6, r1, ip, lsr r0
   15be4:	andeq	r6, r1, ip, lsr r0
   15be8:	andeq	r6, r1, ip, lsr r0
   15bec:	andeq	r6, r1, ip, lsr r0
   15bf0:	andeq	r6, r1, ip, lsr r0
   15bf4:	andeq	r6, r1, ip, lsr r0
   15bf8:	andeq	r6, r1, ip, lsr r0
   15bfc:	andeq	r6, r1, ip, lsr r0
   15c00:	andeq	r6, r1, ip, lsr r0
   15c04:	andeq	r6, r1, ip, lsr r0
   15c08:	andeq	r6, r1, ip, lsr r0
   15c0c:	andeq	r6, r1, ip, lsr r0
   15c10:	andeq	r6, r1, ip, lsr r0
   15c14:	andeq	r6, r1, ip, lsr r0
   15c18:	andeq	r6, r1, ip, lsr r0
   15c1c:	andeq	r6, r1, ip, lsr r0
   15c20:	andeq	r6, r1, ip, lsr r0
   15c24:	andeq	r6, r1, ip, lsr r0
   15c28:	andeq	r6, r1, ip, lsr r0
   15c2c:	andeq	r6, r1, ip, lsr r0
   15c30:	andeq	r6, r1, ip, lsr r0
   15c34:	andeq	r6, r1, ip, lsr r0
   15c38:	andeq	r6, r1, ip, lsr r0
   15c3c:	andeq	r6, r1, ip, lsr r0
   15c40:	andeq	r6, r1, ip, lsr r0
   15c44:	andeq	r6, r1, ip, lsr r0
   15c48:	andeq	r6, r1, ip, lsr r0
   15c4c:	andeq	r6, r1, ip, lsr r0
   15c50:	andeq	r6, r1, ip, lsr r0
   15c54:	andeq	r6, r1, ip, lsr r0
   15c58:	andeq	r6, r1, ip, lsr r0
   15c5c:	andeq	r6, r1, ip, lsr r0
   15c60:	andeq	r6, r1, ip, lsr r0
   15c64:	andeq	r6, r1, ip, lsr r0
   15c68:	andeq	r6, r1, ip, lsr r0
   15c6c:	andeq	r6, r1, ip, lsr r0
   15c70:	andeq	r6, r1, ip, lsr r0
   15c74:	andeq	r6, r1, ip, lsr r0
   15c78:	andeq	r6, r1, ip, lsr r0
   15c7c:	andeq	r6, r1, ip, lsr r0
   15c80:	andeq	r6, r1, ip, lsr r0
   15c84:	andeq	r6, r1, ip, lsr r0
   15c88:	andeq	r6, r1, ip, lsr r0
   15c8c:	andeq	r6, r1, ip, lsr r0
   15c90:	andeq	r6, r1, ip, lsr r0
   15c94:	andeq	r6, r1, ip, lsr r0
   15c98:	andeq	r6, r1, ip, lsr r0
   15c9c:	andeq	r6, r1, ip, lsr r0
   15ca0:	andeq	r6, r1, ip, lsr r0
   15ca4:	andeq	r6, r1, ip, lsr r0
   15ca8:	andeq	r6, r1, ip, lsr r0
   15cac:	andeq	r6, r1, ip, lsr r0
   15cb0:	andeq	r6, r1, ip, lsr r0
   15cb4:	andeq	r6, r1, ip, lsr r0
   15cb8:	andeq	r6, r1, ip, lsr r0
   15cbc:	andeq	r6, r1, ip, lsr r0
   15cc0:	andeq	r6, r1, ip, lsr r0
   15cc4:	andeq	r6, r1, ip, lsr r0
   15cc8:	andeq	r6, r1, ip, lsr r0
   15ccc:	andeq	r6, r1, ip, lsr r0
   15cd0:	andeq	r6, r1, ip, lsr r0
   15cd4:	andeq	r6, r1, ip, lsr r0
   15cd8:	andeq	r6, r1, ip, lsr r0
   15cdc:	andeq	r6, r1, ip, lsr r0
   15ce0:	andeq	r6, r1, ip, lsr r0
   15ce4:	andeq	r6, r1, ip, lsr r0
   15ce8:	andeq	r6, r1, ip, lsr r0
   15cec:	andeq	r6, r1, ip, lsr r0
   15cf0:	andeq	r6, r1, ip, lsr r0
   15cf4:	andeq	r6, r1, ip, lsr r0
   15cf8:	andeq	r6, r1, ip, lsr r0
   15cfc:	andeq	r6, r1, ip, lsr r0
   15d00:	andeq	r6, r1, ip, lsr r0
   15d04:	andeq	r6, r1, ip, lsr r0
   15d08:	andeq	r6, r1, ip, lsr r0
   15d0c:	andeq	r6, r1, ip, lsr r0
   15d10:	andeq	r6, r1, ip, lsr r0
   15d14:	andeq	r6, r1, ip, lsr r0
   15d18:	andeq	r6, r1, ip, lsr r0
   15d1c:	andeq	r6, r1, ip, lsr r0
   15d20:	andeq	r6, r1, ip, lsr r0
   15d24:	andeq	r6, r1, ip, lsr r0
   15d28:	andeq	r6, r1, ip, lsr r0
   15d2c:	andeq	r6, r1, ip, lsr r0
   15d30:	andeq	r6, r1, ip, lsr r0
   15d34:	andeq	r6, r1, ip, lsr r0
   15d38:	andeq	r6, r1, ip, lsr r0
   15d3c:	andeq	r6, r1, ip, lsr r0
   15d40:	andeq	r6, r1, ip, lsr r0
   15d44:	andeq	r6, r1, ip, lsr r0
   15d48:	andeq	r6, r1, ip, lsr r0
   15d4c:	andeq	r6, r1, ip, lsr r0
   15d50:	andeq	r6, r1, ip, lsr r0
   15d54:	andeq	r6, r1, ip, lsr r0
   15d58:	andeq	r6, r1, ip, lsr r0
   15d5c:	andeq	r6, r1, ip, lsr r0
   15d60:	andeq	r6, r1, ip, lsr r0
   15d64:	andeq	r6, r1, ip, lsr r0
   15d68:	andeq	r6, r1, ip, lsr r0
   15d6c:	andeq	r6, r1, ip, lsr r0
   15d70:	andeq	r6, r1, ip, lsr r0
   15d74:	andeq	r6, r1, ip, lsr r0
   15d78:	andeq	r6, r1, ip, lsr r0
   15d7c:	andeq	r6, r1, ip, lsr r0
   15d80:	andeq	r6, r1, ip, lsr r0
   15d84:	andeq	r6, r1, ip, lsr r0
   15d88:	andeq	r6, r1, ip, lsr r0
   15d8c:	andeq	r6, r1, ip, lsr r0
   15d90:	andeq	r6, r1, ip, lsr r0
   15d94:	andeq	r6, r1, ip, lsr r0
   15d98:	andeq	r6, r1, ip, lsr r0
   15d9c:	andeq	r6, r1, ip, lsr r0
   15da0:	andeq	r6, r1, ip, lsr r0
   15da4:	andeq	r6, r1, ip, lsr r0
   15da8:	andeq	r6, r1, ip, lsr r0
   15dac:	andeq	r6, r1, ip, lsr r0
   15db0:	andeq	r6, r1, ip, lsr r0
   15db4:	andeq	r6, r1, ip, lsr r0
   15db8:	andeq	r6, r1, ip, lsr r0
   15dbc:	andeq	r6, r1, ip, lsr r0
   15dc0:	andeq	r6, r1, ip, lsr r0
   15dc4:	andeq	r6, r1, ip, lsr r0
   15dc8:	andeq	r6, r1, ip, lsr r0
   15dcc:	andeq	r6, r1, ip, lsr r0
   15dd0:	andeq	r6, r1, ip, lsr r0
   15dd4:	andeq	r6, r1, ip, lsr r0
   15dd8:	andeq	r6, r1, ip, lsr r0
   15ddc:	andeq	r6, r1, ip, lsr r0
   15de0:	andeq	r6, r1, ip, lsr r0
   15de4:	andeq	r6, r1, ip, lsr r0
   15de8:	andeq	r6, r1, ip, lsr r0
   15dec:	andeq	r6, r1, ip, lsr r0
   15df0:	andeq	r6, r1, ip, lsr r0
   15df4:	andeq	r6, r1, ip, lsr r0
   15df8:	andeq	r6, r1, ip, lsr r0
   15dfc:	andeq	r6, r1, ip, lsr r0
   15e00:	andeq	r6, r1, ip, lsr r0
   15e04:	andeq	r6, r1, ip, lsr r0
   15e08:	andeq	r6, r1, ip, lsr r0
   15e0c:	andeq	r6, r1, ip, lsr r0
   15e10:	andeq	r6, r1, r0, lsl r0
   15e14:	andeq	r6, r1, ip, lsl r0
   15e18:	andeq	r6, r1, r8, lsr #32
   15e1c:	andeq	r6, r1, r4, asr #32
   15e20:	movw	r0, #1304	; 0x518
   15e24:	mov	r1, #2
   15e28:	movt	r0, #3
   15e2c:	str	r1, [r0, #20]
   15e30:	b	16038 <__assert_fail@plt+0x4220>
   15e34:	movw	r0, #1304	; 0x518
   15e38:	mov	r1, #10
   15e3c:	movt	r0, #3
   15e40:	str	r1, [r0, #20]
   15e44:	b	16038 <__assert_fail@plt+0x4220>
   15e48:	movw	r0, #1304	; 0x518
   15e4c:	movt	r0, #3
   15e50:	str	r4, [r0, #16]
   15e54:	b	16038 <__assert_fail@plt+0x4220>
   15e58:	movw	r0, #1304	; 0x518
   15e5c:	movt	r0, #3
   15e60:	str	r4, [r0, #4]
   15e64:	b	16038 <__assert_fail@plt+0x4220>
   15e68:	movw	r0, #1304	; 0x518
   15e6c:	movt	r0, #3
   15e70:	str	r4, [r0, #8]
   15e74:	b	16038 <__assert_fail@plt+0x4220>
   15e78:	movw	r0, #3124	; 0xc34
   15e7c:	movt	r0, #3
   15e80:	b	16030 <__assert_fail@plt+0x4218>
   15e84:	movw	r0, #1304	; 0x518
   15e88:	mov	r1, #1
   15e8c:	movt	r0, #3
   15e90:	str	r1, [r0, #44]	; 0x2c
   15e94:	b	16038 <__assert_fail@plt+0x4220>
   15e98:	movw	r5, #3112	; 0xc28
   15e9c:	movw	r6, #3208	; 0xc88
   15ea0:	mov	r1, #8
   15ea4:	movt	r5, #3
   15ea8:	movt	r6, #3
   15eac:	ldr	r0, [r5]
   15eb0:	add	r1, r1, r0, lsl #3
   15eb4:	ldr	r0, [r6]
   15eb8:	bl	1c83c <argp_parse@@Base+0x25f8>
   15ebc:	cmp	r0, #0
   15ec0:	str	r0, [r6]
   15ec4:	bne	15ee4 <__assert_fail@plt+0x40cc>
   15ec8:	bl	11c50 <__errno_location@plt>
   15ecc:	ldr	r1, [r0]
   15ed0:	movw	r2, #61491	; 0xf033
   15ed4:	mov	r0, #1
   15ed8:	movt	r2, #1
   15edc:	bl	11b6c <error@plt>
   15ee0:	ldr	r0, [r6]
   15ee4:	ldr	r1, [r5]
   15ee8:	str	r4, [r0, r1, lsl #3]
   15eec:	ldr	r0, [r6]
   15ef0:	add	r0, r0, r1, lsl #3
   15ef4:	mvn	r1, #0
   15ef8:	str	r1, [r0, #4]
   15efc:	ldr	r0, [r5]
   15f00:	add	r0, r0, #1
   15f04:	str	r0, [r5]
   15f08:	b	16038 <__assert_fail@plt+0x4220>
   15f0c:	movw	r0, #1304	; 0x518
   15f10:	movt	r0, #3
   15f14:	str	r4, [r0, #12]
   15f18:	b	16038 <__assert_fail@plt+0x4220>
   15f1c:	movw	r0, #3140	; 0xc44
   15f20:	mov	r1, #1
   15f24:	movt	r0, #3
   15f28:	str	r1, [r0]
   15f2c:	movw	r0, #3116	; 0xc2c
   15f30:	movt	r0, #3
   15f34:	b	16034 <__assert_fail@plt+0x421c>
   15f38:	movw	r0, #1304	; 0x518
   15f3c:	movt	r0, #3
   15f40:	str	r4, [r0]
   15f44:	b	16038 <__assert_fail@plt+0x4220>
   15f48:	movw	r1, #1304	; 0x518
   15f4c:	mov	r0, #0
   15f50:	movt	r1, #3
   15f54:	str	r0, [r1, #40]	; 0x28
   15f58:	sub	sp, fp, #16
   15f5c:	pop	{r4, r5, r6, sl, fp, pc}
   15f60:	movw	r5, #3148	; 0xc4c
   15f64:	movt	r5, #3
   15f68:	b	15ffc <__assert_fail@plt+0x41e4>
   15f6c:	add	r1, sp, #4
   15f70:	mov	r0, r4
   15f74:	mov	r2, #10
   15f78:	bl	119a4 <strtol@plt>
   15f7c:	ldr	r3, [sp, #4]
   15f80:	mov	r6, r0
   15f84:	ldrb	r0, [r3]
   15f88:	cmp	r0, #0
   15f8c:	beq	15fa4 <__assert_fail@plt+0x418c>
   15f90:	movw	r1, #61460	; 0xf014
   15f94:	mov	r0, r5
   15f98:	mov	r2, r4
   15f9c:	movt	r1, #1
   15fa0:	bl	180b8 <argp_error@@Base>
   15fa4:	rsb	r0, r6, r6, lsl #4
   15fa8:	movw	r1, #1304	; 0x518
   15fac:	lsl	r0, r0, #2
   15fb0:	movt	r1, #3
   15fb4:	str	r0, [r1, #36]	; 0x24
   15fb8:	b	16038 <__assert_fail@plt+0x4220>
   15fbc:	movw	r0, #3140	; 0xc44
   15fc0:	movt	r0, #3
   15fc4:	b	16030 <__assert_fail@plt+0x4218>
   15fc8:	movw	r0, #3208	; 0xc88
   15fcc:	movt	r0, #3
   15fd0:	ldr	r1, [r0]
   15fd4:	str	r4, [r1]
   15fd8:	mvn	r1, #0
   15fdc:	ldr	r0, [r0]
   15fe0:	str	r1, [r0, #4]
   15fe4:	b	16038 <__assert_fail@plt+0x4220>
   15fe8:	movw	r0, #2632	; 0xa48
   15fec:	movt	r0, #3
   15ff0:	b	16030 <__assert_fail@plt+0x4218>
   15ff4:	movw	r5, #3108	; 0xc24
   15ff8:	movt	r5, #3
   15ffc:	ldr	r0, [r5]
   16000:	mov	r1, r4
   16004:	bl	13ba0 <__assert_fail@plt+0x1d88>
   16008:	str	r0, [r5]
   1600c:	b	16038 <__assert_fail@plt+0x4220>
   16010:	movw	r0, #3204	; 0xc84
   16014:	movt	r0, #3
   16018:	b	16030 <__assert_fail@plt+0x4218>
   1601c:	movw	r0, #2628	; 0xa44
   16020:	movt	r0, #3
   16024:	b	16030 <__assert_fail@plt+0x4218>
   16028:	movw	r0, #3120	; 0xc30
   1602c:	movt	r0, #3
   16030:	mov	r1, #1
   16034:	str	r1, [r0]
   16038:	mov	r0, #0
   1603c:	sub	sp, fp, #16
   16040:	pop	{r4, r5, r6, sl, fp, pc}
   16044:	movw	r1, #1304	; 0x518
   16048:	mov	r0, #0
   1604c:	movt	r1, #3
   16050:	str	r0, [r1, #20]
   16054:	sub	sp, fp, #16
   16058:	pop	{r4, r5, r6, sl, fp, pc}
   1605c:	push	{r4, sl, fp, lr}
   16060:	add	fp, sp, #8
   16064:	mov	r0, #0
   16068:	bl	11ac4 <alarm@plt>
   1606c:	mov	r4, r0
   16070:	mov	r0, #14
   16074:	mov	r1, #0
   16078:	bl	11a64 <signal@plt>
   1607c:	cmp	r4, #0
   16080:	popne	{r4, sl, fp, pc}
   16084:	movw	r2, #61985	; 0xf221
   16088:	mov	r0, #1
   1608c:	mov	r1, #0
   16090:	movt	r2, #1
   16094:	pop	{r4, sl, fp, lr}
   16098:	b	11b6c <error@plt>
   1609c:	push	{r4, r5, r6, r7, fp, lr}
   160a0:	add	fp, sp, #16
   160a4:	mov	r7, r2
   160a8:	mov	r5, r1
   160ac:	mov	r6, r0
   160b0:	bl	11c08 <getpid@plt>
   160b4:	mov	r4, r0
   160b8:	bl	11d10 <fork@plt>
   160bc:	cmn	r0, #1
   160c0:	beq	161bc <__assert_fail@plt+0x43a4>
   160c4:	cmp	r0, #0
   160c8:	bne	161c0 <__assert_fail@plt+0x43a8>
   160cc:	bl	11c2c <setsid@plt>
   160d0:	mov	r1, r0
   160d4:	mvn	r0, #0
   160d8:	cmn	r1, #1
   160dc:	beq	161bc <__assert_fail@plt+0x43a4>
   160e0:	mov	r0, #1
   160e4:	mov	r1, #1
   160e8:	bl	11a64 <signal@plt>
   160ec:	bl	11d10 <fork@plt>
   160f0:	cmn	r0, #1
   160f4:	beq	161bc <__assert_fail@plt+0x43a4>
   160f8:	cmp	r0, #0
   160fc:	bne	161e4 <__assert_fail@plt+0x43cc>
   16100:	cmp	r6, #0
   16104:	beq	16114 <__assert_fail@plt+0x42fc>
   16108:	cmp	r5, #0
   1610c:	bne	161b8 <__assert_fail@plt+0x43a0>
   16110:	b	16134 <__assert_fail@plt+0x431c>
   16114:	movw	r0, #64481	; 0xfbe1
   16118:	movt	r0, #1
   1611c:	bl	11b00 <chdir@plt>
   16120:	cmp	r0, #0
   16124:	mvn	r0, #0
   16128:	poplt	{r4, r5, r6, r7, fp, pc}
   1612c:	cmp	r5, #0
   16130:	bne	161b8 <__assert_fail@plt+0x43a0>
   16134:	mov	r0, #4
   16138:	bl	11ad0 <sysconf@plt>
   1613c:	mov	r5, r0
   16140:	cmn	r0, #1
   16144:	movweq	r5, #64	; 0x40
   16148:	cmp	r5, #1
   1614c:	blt	16168 <__assert_fail@plt+0x4350>
   16150:	mov	r6, #0
   16154:	mov	r0, r6
   16158:	bl	11e00 <close@plt>
   1615c:	add	r6, r6, #1
   16160:	cmp	r5, r6
   16164:	bne	16154 <__assert_fail@plt+0x433c>
   16168:	movw	r0, #62013	; 0xf23d
   1616c:	mov	r1, #2
   16170:	mov	r2, #0
   16174:	movt	r0, #1
   16178:	bl	11b90 <open64@plt>
   1617c:	cmn	r0, #1
   16180:	beq	161b8 <__assert_fail@plt+0x43a0>
   16184:	mov	r1, #0
   16188:	mov	r5, r0
   1618c:	bl	11ae8 <dup2@plt>
   16190:	mov	r0, r5
   16194:	mov	r1, #1
   16198:	bl	11ae8 <dup2@plt>
   1619c:	mov	r0, r5
   161a0:	mov	r1, #2
   161a4:	bl	11ae8 <dup2@plt>
   161a8:	cmp	r5, #3
   161ac:	blt	161b8 <__assert_fail@plt+0x43a0>
   161b0:	mov	r0, r5
   161b4:	bl	11e00 <close@plt>
   161b8:	mov	r0, r4
   161bc:	pop	{r4, r5, r6, r7, fp, pc}
   161c0:	cmp	r7, #1
   161c4:	blt	161e4 <__assert_fail@plt+0x43cc>
   161c8:	movw	r1, #24668	; 0x605c
   161cc:	mov	r0, #14
   161d0:	movt	r1, #1
   161d4:	bl	11a64 <signal@plt>
   161d8:	mov	r0, r7
   161dc:	bl	11ac4 <alarm@plt>
   161e0:	bl	119bc <pause@plt>
   161e4:	mov	r0, #0
   161e8:	bl	11a4c <_exit@plt>

000161ec <daemon@@Base>:
   161ec:	push	{fp, lr}
   161f0:	mov	fp, sp
   161f4:	mov	r2, #0
   161f8:	bl	1609c <__assert_fail@plt+0x4284>
   161fc:	cmn	r0, #1
   16200:	movwne	r0, #0
   16204:	pop	{fp, pc}
   16208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1620c:	add	fp, sp, #28
   16210:	sub	sp, sp, #60	; 0x3c
   16214:	sub	sp, sp, #1024	; 0x400
   16218:	bl	11c50 <__errno_location@plt>
   1621c:	mov	r8, #0
   16220:	mov	r9, r0
   16224:	mov	r1, #256	; 0x100
   16228:	str	r8, [r0]
   1622c:	mov	r0, #0
   16230:	bl	1c83c <argp_parse@@Base+0x25f8>
   16234:	mov	r4, r0
   16238:	cmp	r0, #0
   1623c:	mov	r0, #0
   16240:	beq	162b4 <daemon@@Base+0xc8>
   16244:	mov	r7, #512	; 0x200
   16248:	mov	sl, #0
   1624c:	sub	r6, r7, #256	; 0x100
   16250:	mov	r0, r4
   16254:	mov	r1, r6
   16258:	bl	11b78 <gethostname@plt>
   1625c:	mov	r5, r0
   16260:	cmp	r0, #0
   16264:	bne	16280 <daemon@@Base+0x94>
   16268:	mov	r0, r4
   1626c:	mov	r1, #0
   16270:	mov	r2, r6
   16274:	bl	11cb0 <memchr@plt>
   16278:	cmp	r0, #0
   1627c:	beq	1628c <daemon@@Base+0xa0>
   16280:	ldr	r0, [r9]
   16284:	cmp	r0, #36	; 0x24
   16288:	bne	162cc <daemon@@Base+0xe0>
   1628c:	mov	r0, r4
   16290:	mov	r1, r7
   16294:	str	sl, [r9]
   16298:	bl	1c83c <argp_parse@@Base+0x25f8>
   1629c:	mov	r1, r0
   162a0:	mov	r0, r4
   162a4:	add	r7, r7, #256	; 0x100
   162a8:	cmp	r1, #0
   162ac:	mov	r4, r1
   162b0:	bne	1624c <daemon@@Base+0x60>
   162b4:	mov	r1, #12
   162b8:	str	r1, [r9]
   162bc:	bl	1b7d4 <argp_parse@@Base+0x1590>
   162c0:	mov	r0, r8
   162c4:	sub	sp, fp, #28
   162c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162cc:	cmp	r5, #0
   162d0:	cmpne	r0, #0
   162d4:	bne	16320 <daemon@@Base+0x134>
   162d8:	sub	r2, fp, #64	; 0x40
   162dc:	vmov.i32	q8, #0	; 0x00000000
   162e0:	sub	r3, fp, #68	; 0x44
   162e4:	mov	r1, #0
   162e8:	mov	r5, #0
   162ec:	mov	r0, r2
   162f0:	vst1.64	{d16-d17}, [r0]!
   162f4:	vst1.64	{d16-d17}, [r0]
   162f8:	mov	r0, #2
   162fc:	str	r0, [fp, #-60]	; 0xffffffc4
   16300:	mov	r0, r4
   16304:	bl	11da0 <getaddrinfo@plt>
   16308:	cmp	r0, #0
   1630c:	beq	16338 <daemon@@Base+0x14c>
   16310:	mov	r8, r4
   16314:	mov	r0, r8
   16318:	sub	sp, fp, #28
   1631c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16320:	mov	r0, r4
   16324:	bl	1b7d4 <argp_parse@@Base+0x1590>
   16328:	mov	r8, #0
   1632c:	mov	r0, r8
   16330:	sub	sp, fp, #28
   16334:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16338:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1633c:	mov	r2, #8
   16340:	movw	r3, #1025	; 0x401
   16344:	ldr	r1, [r0, #16]
   16348:	ldr	r0, [r0, #20]
   1634c:	str	r2, [sp, #8]
   16350:	add	r2, sp, #19
   16354:	str	r5, [sp]
   16358:	str	r5, [sp, #4]
   1635c:	bl	11d1c <getnameinfo@plt>
   16360:	cmp	r0, #0
   16364:	beq	16370 <daemon@@Base+0x184>
   16368:	mov	r8, r4
   1636c:	b	16384 <daemon@@Base+0x198>
   16370:	mov	r0, r4
   16374:	bl	1b7d4 <argp_parse@@Base+0x1590>
   16378:	add	r0, sp, #19
   1637c:	bl	11aac <strdup@plt>
   16380:	mov	r8, r0
   16384:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16388:	bl	11d94 <freeaddrinfo@plt>
   1638c:	mov	r0, r8
   16390:	sub	sp, fp, #28
   16394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1639c:	add	fp, sp, #28
   163a0:	sub	sp, sp, #204	; 0xcc
   163a4:	cmp	r1, #6
   163a8:	ble	163c0 <daemon@@Base+0x1d4>
   163ac:	movw	sl, #62036	; 0xf254
   163b0:	movt	sl, #1
   163b4:	mov	r0, sl
   163b8:	sub	sp, fp, #28
   163bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163c0:	mov	sl, r0
   163c4:	mov	r0, r2
   163c8:	mov	r9, r3
   163cc:	mov	r7, r2
   163d0:	mov	r6, r1
   163d4:	bl	11c20 <strlen@plt>
   163d8:	add	r0, r0, #6
   163dc:	bl	1c80c <argp_parse@@Base+0x25c8>
   163e0:	cmp	r0, #0
   163e4:	beq	16530 <daemon@@Base+0x344>
   163e8:	mov	r4, r0
   163ec:	mov	r0, #47	; 0x2f
   163f0:	mov	r1, r7
   163f4:	strh	r0, [r4, #4]
   163f8:	movw	r0, #25647	; 0x642f
   163fc:	movt	r0, #30309	; 0x7665
   16400:	str	r0, [r4]
   16404:	mov	r0, r4
   16408:	bl	11b48 <strcat@plt>
   1640c:	mov	r0, r4
   16410:	bl	11c20 <strlen@plt>
   16414:	cmp	r0, #0
   16418:	beq	164e8 <daemon@@Base+0x2fc>
   1641c:	sub	r0, r0, #1
   16420:	ldrb	r1, [r4, r0]
   16424:	cmp	r1, #47	; 0x2f
   16428:	moveq	r1, #0
   1642c:	strbeq	r1, [r4, r0]
   16430:	mov	r0, r4
   16434:	mov	r1, #46	; 0x2e
   16438:	bl	11c38 <strchr@plt>
   1643c:	cmp	r0, #0
   16440:	bne	1645c <daemon@@Base+0x270>
   16444:	b	164d8 <daemon@@Base+0x2ec>
   16448:	mov	r0, r1
   1644c:	mov	r1, #46	; 0x2e
   16450:	bl	11c38 <strchr@plt>
   16454:	cmp	r0, #0
   16458:	beq	164d8 <daemon@@Base+0x2ec>
   1645c:	cmp	r0, r4
   16460:	bls	16478 <daemon@@Base+0x28c>
   16464:	ldrb	r1, [r0, #-1]
   16468:	cmp	r1, #47	; 0x2f
   1646c:	ldrbeq	r1, [r0, #1]
   16470:	cmpeq	r1, #46	; 0x2e
   16474:	beq	16480 <daemon@@Base+0x294>
   16478:	add	r1, r0, #1
   1647c:	b	16448 <daemon@@Base+0x25c>
   16480:	ldrb	r3, [r0, #2]
   16484:	cmp	r3, #47	; 0x2f
   16488:	cmpne	r3, #0
   1648c:	bne	16478 <daemon@@Base+0x28c>
   16490:	sub	r1, r0, #1
   16494:	mov	r2, r1
   16498:	ldrb	r5, [r1, #-1]!
   1649c:	cmp	r1, r4
   164a0:	bcc	164ac <daemon@@Base+0x2c0>
   164a4:	cmp	r5, #47	; 0x2f
   164a8:	bne	16494 <daemon@@Base+0x2a8>
   164ac:	cmp	r1, r4
   164b0:	bcc	164d8 <daemon@@Base+0x2ec>
   164b4:	cmp	r3, #0
   164b8:	strb	r3, [r1]
   164bc:	beq	16448 <daemon@@Base+0x25c>
   164c0:	add	r0, r0, #3
   164c4:	ldrb	r3, [r0], #1
   164c8:	strb	r3, [r2], #1
   164cc:	cmp	r3, #0
   164d0:	bne	164c4 <daemon@@Base+0x2d8>
   164d4:	b	16448 <daemon@@Base+0x25c>
   164d8:	ldrb	r0, [r4]
   164dc:	cmp	r0, #0
   164e0:	moveq	r0, #47	; 0x2f
   164e4:	strheq	r0, [r4]
   164e8:	movw	r1, #62082	; 0xf282
   164ec:	mov	r0, r4
   164f0:	mov	r2, #5
   164f4:	movt	r1, #1
   164f8:	bl	11ddc <strncmp@plt>
   164fc:	cmp	r0, #0
   16500:	beq	16574 <daemon@@Base+0x388>
   16504:	movw	sl, #1544	; 0x608
   16508:	movw	r2, #62088	; 0xf288
   1650c:	mov	r1, #1024	; 0x400
   16510:	mov	r3, r7
   16514:	movt	sl, #3
   16518:	movt	r2, #1
   1651c:	mov	r0, sl
   16520:	bl	11c5c <snprintf@plt>
   16524:	mov	r0, sl
   16528:	sub	sp, fp, #28
   1652c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16530:	movw	r1, #62120	; 0xf2a8
   16534:	mov	r0, #30
   16538:	movw	sl, #1544	; 0x608
   1653c:	movt	r1, #1
   16540:	movt	sl, #3
   16544:	add	r2, r1, #16
   16548:	vld1.64	{d16-d17}, [r1], r0
   1654c:	vld1.64	{d18-d19}, [r2]
   16550:	add	r2, sl, #16
   16554:	vld1.16	{d20}, [r1]
   16558:	mov	r1, sl
   1655c:	vst1.64	{d16-d17}, [r1], r0
   16560:	vst1.64	{d18-d19}, [r2]
   16564:	vst1.16	{d20}, [r1]
   16568:	mov	r0, sl
   1656c:	sub	sp, fp, #28
   16570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16574:	mov	r0, r4
   16578:	movw	r1, #2049	; 0x801
   1657c:	mov	r2, #0
   16580:	mov	r8, #0
   16584:	bl	11b90 <open64@plt>
   16588:	cmp	r0, #0
   1658c:	str	r0, [sp, #16]
   16590:	blt	1679c <daemon@@Base+0x5b0>
   16594:	cmp	r6, #1
   16598:	blt	16604 <daemon@@Base+0x418>
   1659c:	mov	r8, #0
   165a0:	cmp	r6, #4
   165a4:	mov	r0, #0
   165a8:	bls	165e8 <daemon@@Base+0x3fc>
   165ac:	ands	r0, r6, #3
   165b0:	vmov.i32	q8, #0	; 0x00000000
   165b4:	add	r1, sl, #4
   165b8:	movweq	r0, #4
   165bc:	sub	r0, r6, r0
   165c0:	mov	r2, r0
   165c4:	vld2.32	{d18-d21}, [r1]!
   165c8:	subs	r2, r2, #4
   165cc:	vadd.i32	q8, q9, q8
   165d0:	bne	165c4 <daemon@@Base+0x3d8>
   165d4:	vext.8	q9, q8, q8, #8
   165d8:	vadd.i32	q8, q8, q9
   165dc:	vdup.32	q9, d16[1]
   165e0:	vadd.i32	q8, q8, q9
   165e4:	vmov.32	r8, d16[0]
   165e8:	sub	r1, r6, r0
   165ec:	add	r0, sl, r0, lsl #3
   165f0:	add	r0, r0, #4
   165f4:	ldr	r2, [r0], #8
   165f8:	subs	r1, r1, #1
   165fc:	add	r8, r2, r8
   16600:	bne	165f4 <daemon@@Base+0x408>
   16604:	ldr	r0, [sp, #16]
   16608:	mov	r1, sl
   1660c:	mov	r2, r6
   16610:	str	r9, [sp, #8]
   16614:	str	sl, [sp, #12]
   16618:	bl	11cbc <writev@plt>
   1661c:	mov	sl, #0
   16620:	cmp	r8, r0
   16624:	mov	r9, #0
   16628:	ble	167ec <daemon@@Base+0x600>
   1662c:	sub	r7, fp, #80	; 0x50
   16630:	mov	r5, r0
   16634:	mov	r9, #0
   16638:	orr	r0, r7, #4
   1663c:	str	r0, [sp, #4]
   16640:	cmp	r5, #0
   16644:	bge	16700 <daemon@@Base+0x514>
   16648:	bl	11c50 <__errno_location@plt>
   1664c:	mov	r7, r0
   16650:	ldr	r0, [r0]
   16654:	cmp	r0, #11
   16658:	bne	167e0 <daemon@@Base+0x5f4>
   1665c:	mov	r0, #0
   16660:	cmp	r9, #0
   16664:	str	r0, [fp, #-84]	; 0xffffffac
   16668:	bne	168e0 <daemon@@Base+0x6f4>
   1666c:	bl	11d10 <fork@plt>
   16670:	ldr	r5, [sp, #8]
   16674:	cmp	r0, #0
   16678:	bne	16810 <daemon@@Base+0x624>
   1667c:	bl	11d10 <fork@plt>
   16680:	cmp	r0, #0
   16684:	bne	168c8 <daemon@@Base+0x6dc>
   16688:	mov	r0, #14
   1668c:	mov	r1, #0
   16690:	bl	11a64 <signal@plt>
   16694:	mov	r0, #15
   16698:	mov	r1, #0
   1669c:	bl	11a64 <signal@plt>
   166a0:	add	r7, sp, #20
   166a4:	mov	r0, r7
   166a8:	bl	11d04 <sigemptyset@plt>
   166ac:	mov	r0, #2
   166b0:	mov	r1, r7
   166b4:	mov	r2, #0
   166b8:	bl	119f8 <sigprocmask@plt>
   166bc:	mov	r0, r5
   166c0:	bl	11ac4 <alarm@plt>
   166c4:	ldr	r5, [sp, #16]
   166c8:	mov	r1, #2048	; 0x800
   166cc:	sub	r2, fp, #84	; 0x54
   166d0:	mov	r0, r5
   166d4:	bl	1b5f4 <argp_parse@@Base+0x13b0>
   166d8:	ldr	r1, [sp, #12]
   166dc:	mov	r0, r5
   166e0:	mov	r2, r6
   166e4:	bl	11cbc <writev@plt>
   166e8:	mov	r5, r0
   166ec:	mov	r9, #1
   166f0:	cmp	r8, r0
   166f4:	sub	r7, fp, #80	; 0x50
   166f8:	bgt	16640 <daemon@@Base+0x454>
   166fc:	b	167ec <daemon@@Base+0x600>
   16700:	ldr	r1, [sp, #12]
   16704:	cmp	r1, r7
   16708:	beq	16718 <daemon@@Base+0x52c>
   1670c:	lsl	r2, r6, #3
   16710:	mov	r0, r7
   16714:	bl	11a58 <memcpy@plt>
   16718:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1671c:	cmp	r5, r0
   16720:	bge	16734 <daemon@@Base+0x548>
   16724:	ldr	r2, [sp, #4]
   16728:	str	r7, [sp, #12]
   1672c:	mov	r7, r5
   16730:	b	1675c <daemon@@Base+0x570>
   16734:	mov	r1, r7
   16738:	mov	r7, r5
   1673c:	sub	r7, r7, r0
   16740:	ldr	r0, [r1, #12]
   16744:	sub	r6, r6, #1
   16748:	add	r1, r1, #8
   1674c:	cmp	r7, r0
   16750:	bge	1673c <daemon@@Base+0x550>
   16754:	add	r2, r1, #4
   16758:	str	r1, [sp, #12]
   1675c:	ldr	r1, [sp, #12]
   16760:	cmp	r7, #0
   16764:	sub	r8, r8, r5
   16768:	subne	r0, r0, r7
   1676c:	ldrne	r3, [r1]
   16770:	addne	r3, r3, r7
   16774:	strne	r3, [r1]
   16778:	strne	r0, [r2]
   1677c:	ldr	r0, [sp, #16]
   16780:	mov	r2, r6
   16784:	bl	11cbc <writev@plt>
   16788:	mov	r5, r0
   1678c:	cmp	r8, r0
   16790:	sub	r7, fp, #80	; 0x50
   16794:	bgt	16640 <daemon@@Base+0x454>
   16798:	b	167ec <daemon@@Base+0x600>
   1679c:	bl	11c50 <__errno_location@plt>
   167a0:	ldr	r0, [r0]
   167a4:	mov	sl, #0
   167a8:	cmp	r0, #13
   167ac:	cmpne	r0, #16
   167b0:	beq	16804 <daemon@@Base+0x618>
   167b4:	bl	11bcc <strerror@plt>
   167b8:	movw	sl, #1544	; 0x608
   167bc:	movw	r2, #59886	; 0xe9ee
   167c0:	str	r0, [sp]
   167c4:	mov	r1, #1024	; 0x400
   167c8:	mov	r3, r4
   167cc:	movt	sl, #3
   167d0:	movt	r2, #1
   167d4:	mov	r0, sl
   167d8:	bl	11c5c <snprintf@plt>
   167dc:	b	16894 <daemon@@Base+0x6a8>
   167e0:	cmp	r0, #5
   167e4:	cmpne	r0, #19
   167e8:	bne	1683c <daemon@@Base+0x650>
   167ec:	mov	r0, r4
   167f0:	bl	1b7d4 <argp_parse@@Base+0x1590>
   167f4:	ldr	r0, [sp, #16]
   167f8:	bl	11e00 <close@plt>
   167fc:	cmp	r9, #0
   16800:	bne	168d8 <daemon@@Base+0x6ec>
   16804:	mov	r0, sl
   16808:	sub	sp, fp, #28
   1680c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16810:	blt	16864 <daemon@@Base+0x678>
   16814:	add	r1, sp, #20
   16818:	mov	r2, #0
   1681c:	bl	11b54 <waitpid@plt>
   16820:	cmp	r0, #0
   16824:	blt	16864 <daemon@@Base+0x678>
   16828:	ldr	r0, [sp, #20]
   1682c:	tst	r0, #127	; 0x7f
   16830:	beq	16854 <daemon@@Base+0x668>
   16834:	mov	r0, #4
   16838:	b	16860 <daemon@@Base+0x674>
   1683c:	ldr	r0, [sp, #16]
   16840:	bl	11e00 <close@plt>
   16844:	cmp	r9, #0
   16848:	bne	168f0 <daemon@@Base+0x704>
   1684c:	ldr	r0, [r7]
   16850:	b	167b4 <daemon@@Base+0x5c8>
   16854:	ubfx	r0, r0, #8, #8
   16858:	cmp	r0, #0
   1685c:	beq	168a8 <daemon@@Base+0x6bc>
   16860:	str	r0, [r7]
   16864:	ldr	r0, [r7]
   16868:	bl	11bcc <strerror@plt>
   1686c:	movw	sl, #1544	; 0x608
   16870:	movw	r2, #62106	; 0xf29a
   16874:	mov	r3, r0
   16878:	mov	r1, #1024	; 0x400
   1687c:	movt	sl, #3
   16880:	movt	r2, #1
   16884:	mov	r0, sl
   16888:	bl	11c5c <snprintf@plt>
   1688c:	ldr	r0, [sp, #16]
   16890:	bl	11e00 <close@plt>
   16894:	mov	r0, r4
   16898:	bl	1b7d4 <argp_parse@@Base+0x1590>
   1689c:	mov	r0, sl
   168a0:	sub	sp, fp, #28
   168a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168a8:	ldr	r0, [sp, #16]
   168ac:	bl	11e00 <close@plt>
   168b0:	mov	r0, r4
   168b4:	bl	1b7d4 <argp_parse@@Base+0x1590>
   168b8:	mov	sl, #0
   168bc:	mov	r0, sl
   168c0:	sub	sp, fp, #28
   168c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168c8:	cmn	r0, #1
   168cc:	bne	168d8 <daemon@@Base+0x6ec>
   168d0:	ldr	r0, [r7]
   168d4:	bl	11a4c <_exit@plt>
   168d8:	mov	r0, #0
   168dc:	bl	11a4c <_exit@plt>
   168e0:	ldr	r0, [sp, #16]
   168e4:	bl	11e00 <close@plt>
   168e8:	mov	r0, #1
   168ec:	bl	11a4c <_exit@plt>
   168f0:	mov	r0, #1
   168f4:	bl	11a4c <_exit@plt>

000168f8 <argp_help@@Base>:
   168f8:	push	{fp, lr}
   168fc:	mov	fp, sp
   16900:	sub	sp, sp, #8
   16904:	mov	ip, r2
   16908:	mov	r2, r1
   1690c:	str	r3, [sp]
   16910:	mov	r1, #0
   16914:	mov	r3, ip
   16918:	bl	16924 <argp_help@@Base+0x2c>
   1691c:	mov	sp, fp
   16920:	pop	{fp, pc}
   16924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16928:	add	fp, sp, #28
   1692c:	sub	sp, sp, #108	; 0x6c
   16930:	cmp	r2, #0
   16934:	str	r1, [fp, #-96]	; 0xffffffa0
   16938:	str	r0, [fp, #-104]	; 0xffffff98
   1693c:	beq	17e60 <argp_help@@Base+0x1568>
   16940:	ldr	r0, [fp, #8]
   16944:	mov	r6, r3
   16948:	mov	r4, r2
   1694c:	str	r0, [fp, #-92]	; 0xffffffa4
   16950:	mov	r0, r2
   16954:	bl	11d58 <flockfile@plt>
   16958:	movw	r9, #1424	; 0x590
   1695c:	str	r6, [fp, #-128]	; 0xffffff80
   16960:	movt	r9, #3
   16964:	ldr	r0, [r9, #36]	; 0x24
   16968:	cmp	r0, #0
   1696c:	bne	16f30 <argp_help@@Base+0x638>
   16970:	movw	r0, #62279	; 0xf347
   16974:	movt	r0, #1
   16978:	bl	11b9c <getenv@plt>
   1697c:	mov	r8, r0
   16980:	mov	r0, #32
   16984:	mov	r1, r9
   16988:	add	r3, r9, #16
   1698c:	sub	r2, fp, #88	; 0x58
   16990:	vld1.64	{d16-d17}, [r1], r0
   16994:	vld1.64	{d18-d19}, [r3]
   16998:	add	r7, r2, #16
   1699c:	cmp	r8, #0
   169a0:	vldr	d20, [r1]
   169a4:	mov	r1, r2
   169a8:	vst1.64	{d18-d19}, [r7]
   169ac:	vst1.64	{d16-d17}, [r1], r0
   169b0:	vstr	d20, [r1]
   169b4:	beq	16f30 <argp_help@@Base+0x638>
   169b8:	ldrb	r5, [r8]
   169bc:	str	r7, [fp, #-112]	; 0xffffff90
   169c0:	str	r3, [fp, #-108]	; 0xffffff94
   169c4:	str	r4, [fp, #-132]	; 0xffffff7c
   169c8:	cmp	r5, #0
   169cc:	beq	16e2c <argp_help@@Base+0x534>
   169d0:	bl	11bfc <__ctype_b_loc@plt>
   169d4:	movw	r7, #62944	; 0xf5e0
   169d8:	str	r0, [fp, #-100]	; 0xffffff9c
   169dc:	movt	r7, #1
   169e0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   169e4:	uxtb	r1, r5
   169e8:	ldr	r0, [r0]
   169ec:	add	r1, r0, r1, lsl #1
   169f0:	ldrh	r1, [r1]
   169f4:	tst	r1, #8192	; 0x2000
   169f8:	beq	16a10 <argp_help@@Base+0x118>
   169fc:	ldrb	r5, [r8, #1]!
   16a00:	add	r1, r0, r5, lsl #1
   16a04:	ldrh	r1, [r1]
   16a08:	tst	r1, #8192	; 0x2000
   16a0c:	bne	169fc <argp_help@@Base+0x104>
   16a10:	tst	r1, #1024	; 0x400
   16a14:	beq	16de8 <argp_help@@Base+0x4f0>
   16a18:	mov	r3, r5
   16a1c:	mov	r2, r8
   16a20:	b	16a28 <argp_help@@Base+0x130>
   16a24:	ldrb	r3, [r2, #1]!
   16a28:	uxtb	r6, r3
   16a2c:	add	r1, r0, r6, lsl #1
   16a30:	ldrh	r1, [r1]
   16a34:	tst	r1, #8
   16a38:	bne	16a24 <argp_help@@Base+0x12c>
   16a3c:	cmp	r6, #95	; 0x5f
   16a40:	cmpne	r6, #45	; 0x2d
   16a44:	beq	16a24 <argp_help@@Base+0x12c>
   16a48:	tst	r1, #8192	; 0x2000
   16a4c:	mov	r4, r2
   16a50:	beq	16a6c <argp_help@@Base+0x174>
   16a54:	mov	r4, r2
   16a58:	ldrb	r3, [r4, #1]!
   16a5c:	add	r1, r0, r3, lsl #1
   16a60:	ldrh	r1, [r1]
   16a64:	tst	r1, #8192	; 0x2000
   16a68:	bne	16a58 <argp_help@@Base+0x160>
   16a6c:	sub	r9, r2, r8
   16a70:	uxtb	r2, r3
   16a74:	cmp	r2, #0
   16a78:	cmpne	r2, #44	; 0x2c
   16a7c:	bne	16aec <argp_help@@Base+0x1f4>
   16a80:	uxtb	r0, r5
   16a84:	mov	r6, #1
   16a88:	cmp	r0, #110	; 0x6e
   16a8c:	bne	16ad4 <argp_help@@Base+0x1dc>
   16a90:	ldrb	r0, [r8, #1]
   16a94:	mov	r6, #1
   16a98:	cmp	r0, #111	; 0x6f
   16a9c:	bne	16ad4 <argp_help@@Base+0x1dc>
   16aa0:	ldrb	r0, [r8, #2]
   16aa4:	mov	r6, #1
   16aa8:	cmp	r0, #45	; 0x2d
   16aac:	bne	16ad4 <argp_help@@Base+0x1dc>
   16ab0:	sub	r9, r9, #3
   16ab4:	add	r8, r8, #3
   16ab8:	mov	sl, #0
   16abc:	mov	r6, #1
   16ac0:	mov	r0, r7
   16ac4:	bl	11c20 <strlen@plt>
   16ac8:	cmp	r0, r9
   16acc:	beq	16b90 <argp_help@@Base+0x298>
   16ad0:	b	16bac <argp_help@@Base+0x2b4>
   16ad4:	mov	sl, #1
   16ad8:	mov	r0, r7
   16adc:	bl	11c20 <strlen@plt>
   16ae0:	cmp	r0, r9
   16ae4:	beq	16b90 <argp_help@@Base+0x298>
   16ae8:	b	16bac <argp_help@@Base+0x2b4>
   16aec:	cmp	r2, #61	; 0x3d
   16af0:	bne	16b08 <argp_help@@Base+0x210>
   16af4:	ldrb	r1, [r4, #1]!
   16af8:	add	r1, r0, r1, lsl #1
   16afc:	ldrh	r1, [r1]
   16b00:	tst	r1, #8192	; 0x2000
   16b04:	bne	16af4 <argp_help@@Base+0x1fc>
   16b08:	mov	r6, #0
   16b0c:	tst	r1, #2048	; 0x800
   16b10:	bne	16b2c <argp_help@@Base+0x234>
   16b14:	mov	sl, #0
   16b18:	mov	r0, r7
   16b1c:	bl	11c20 <strlen@plt>
   16b20:	cmp	r0, r9
   16b24:	beq	16b90 <argp_help@@Base+0x298>
   16b28:	b	16bac <argp_help@@Base+0x2b4>
   16b2c:	mov	r0, r4
   16b30:	mov	r1, #0
   16b34:	mov	r2, #10
   16b38:	bl	119a4 <strtol@plt>
   16b3c:	mov	sl, r0
   16b40:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16b44:	sub	r4, r4, #1
   16b48:	ldr	r0, [r0]
   16b4c:	ldrb	r1, [r4, #1]!
   16b50:	add	r1, r0, r1, lsl #1
   16b54:	ldrh	r1, [r1]
   16b58:	tst	r1, #2048	; 0x800
   16b5c:	bne	16b4c <argp_help@@Base+0x254>
   16b60:	mov	r6, #0
   16b64:	tst	r1, #8192	; 0x2000
   16b68:	beq	16b80 <argp_help@@Base+0x288>
   16b6c:	ldrb	r1, [r4, #1]!
   16b70:	add	r1, r0, r1, lsl #1
   16b74:	ldrb	r1, [r1, #1]
   16b78:	tst	r1, #32
   16b7c:	bne	16b6c <argp_help@@Base+0x274>
   16b80:	mov	r0, r7
   16b84:	bl	11c20 <strlen@plt>
   16b88:	cmp	r0, r9
   16b8c:	bne	16bac <argp_help@@Base+0x2b4>
   16b90:	mov	r0, r8
   16b94:	mov	r1, r7
   16b98:	mov	r2, r9
   16b9c:	bl	11ddc <strncmp@plt>
   16ba0:	cmp	r0, #0
   16ba4:	mov	r5, r7
   16ba8:	beq	16d2c <argp_help@@Base+0x434>
   16bac:	add	r5, r7, #16
   16bb0:	mov	r0, r5
   16bb4:	bl	11c20 <strlen@plt>
   16bb8:	cmp	r0, r9
   16bbc:	bne	16bd8 <argp_help@@Base+0x2e0>
   16bc0:	mov	r0, r8
   16bc4:	mov	r1, r5
   16bc8:	mov	r2, r9
   16bcc:	bl	11ddc <strncmp@plt>
   16bd0:	cmp	r0, #0
   16bd4:	beq	16d2c <argp_help@@Base+0x434>
   16bd8:	add	r5, r7, #32
   16bdc:	mov	r0, r5
   16be0:	bl	11c20 <strlen@plt>
   16be4:	cmp	r0, r9
   16be8:	bne	16c04 <argp_help@@Base+0x30c>
   16bec:	mov	r0, r8
   16bf0:	mov	r1, r5
   16bf4:	mov	r2, r9
   16bf8:	bl	11ddc <strncmp@plt>
   16bfc:	cmp	r0, #0
   16c00:	beq	16d2c <argp_help@@Base+0x434>
   16c04:	add	r5, r7, #48	; 0x30
   16c08:	mov	r0, r5
   16c0c:	bl	11c20 <strlen@plt>
   16c10:	cmp	r0, r9
   16c14:	bne	16c30 <argp_help@@Base+0x338>
   16c18:	mov	r0, r8
   16c1c:	mov	r1, r5
   16c20:	mov	r2, r9
   16c24:	bl	11ddc <strncmp@plt>
   16c28:	cmp	r0, #0
   16c2c:	beq	16d2c <argp_help@@Base+0x434>
   16c30:	add	r5, r7, #64	; 0x40
   16c34:	mov	r0, r5
   16c38:	bl	11c20 <strlen@plt>
   16c3c:	cmp	r0, r9
   16c40:	bne	16c5c <argp_help@@Base+0x364>
   16c44:	mov	r0, r8
   16c48:	mov	r1, r5
   16c4c:	mov	r2, r9
   16c50:	bl	11ddc <strncmp@plt>
   16c54:	cmp	r0, #0
   16c58:	beq	16d2c <argp_help@@Base+0x434>
   16c5c:	add	r5, r7, #80	; 0x50
   16c60:	mov	r0, r5
   16c64:	bl	11c20 <strlen@plt>
   16c68:	cmp	r0, r9
   16c6c:	bne	16c88 <argp_help@@Base+0x390>
   16c70:	mov	r0, r8
   16c74:	mov	r1, r5
   16c78:	mov	r2, r9
   16c7c:	bl	11ddc <strncmp@plt>
   16c80:	cmp	r0, #0
   16c84:	beq	16d2c <argp_help@@Base+0x434>
   16c88:	add	r5, r7, #96	; 0x60
   16c8c:	mov	r0, r5
   16c90:	bl	11c20 <strlen@plt>
   16c94:	cmp	r0, r9
   16c98:	bne	16cb4 <argp_help@@Base+0x3bc>
   16c9c:	mov	r0, r8
   16ca0:	mov	r1, r5
   16ca4:	mov	r2, r9
   16ca8:	bl	11ddc <strncmp@plt>
   16cac:	cmp	r0, #0
   16cb0:	beq	16d2c <argp_help@@Base+0x434>
   16cb4:	add	r5, r7, #112	; 0x70
   16cb8:	mov	r0, r5
   16cbc:	bl	11c20 <strlen@plt>
   16cc0:	cmp	r0, r9
   16cc4:	bne	16ce0 <argp_help@@Base+0x3e8>
   16cc8:	mov	r0, r8
   16ccc:	mov	r1, r5
   16cd0:	mov	r2, r9
   16cd4:	bl	11ddc <strncmp@plt>
   16cd8:	cmp	r0, #0
   16cdc:	beq	16d2c <argp_help@@Base+0x434>
   16ce0:	add	r5, r7, #128	; 0x80
   16ce4:	mov	r0, r5
   16ce8:	bl	11c20 <strlen@plt>
   16cec:	cmp	r0, r9
   16cf0:	bne	16d0c <argp_help@@Base+0x414>
   16cf4:	mov	r0, r8
   16cf8:	mov	r1, r5
   16cfc:	mov	r2, r9
   16d00:	bl	11ddc <strncmp@plt>
   16d04:	cmp	r0, #0
   16d08:	beq	16d2c <argp_help@@Base+0x434>
   16d0c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16d10:	ldr	r6, [fp, #-128]	; 0xffffff80
   16d14:	cmp	r0, #0
   16d18:	sub	sp, sp, #8
   16d1c:	beq	16dc0 <argp_help@@Base+0x4c8>
   16d20:	str	r9, [sp]
   16d24:	str	r8, [sp, #4]
   16d28:	b	16dcc <argp_help@@Base+0x4d4>
   16d2c:	cmp	r6, #0
   16d30:	beq	16d40 <argp_help@@Base+0x448>
   16d34:	ldrb	r0, [r5, #14]
   16d38:	cmp	r0, #0
   16d3c:	beq	16d78 <argp_help@@Base+0x480>
   16d40:	ldrb	r0, [r5, #15]
   16d44:	ldr	r6, [fp, #-128]	; 0xffffff80
   16d48:	sub	r1, fp, #88	; 0x58
   16d4c:	str	sl, [r1, r0]
   16d50:	mov	r8, r4
   16d54:	movw	r9, #1424	; 0x590
   16d58:	ldrb	r0, [r8], #1
   16d5c:	movt	r9, #3
   16d60:	cmp	r0, #44	; 0x2c
   16d64:	movne	r8, r4
   16d68:	ldrb	r5, [r8]
   16d6c:	cmp	r5, #0
   16d70:	bne	169e0 <argp_help@@Base+0xe8>
   16d74:	b	16e2c <argp_help@@Base+0x534>
   16d78:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16d7c:	sub	sp, sp, #8
   16d80:	cmp	r0, #0
   16d84:	beq	16d94 <argp_help@@Base+0x49c>
   16d88:	str	r9, [sp]
   16d8c:	str	r8, [sp, #4]
   16d90:	b	16da0 <argp_help@@Base+0x4a8>
   16d94:	str	r9, [sp]
   16d98:	str	r8, [sp, #4]
   16d9c:	mov	r0, #0
   16da0:	movw	r3, #62293	; 0xf355
   16da4:	mov	r1, #0
   16da8:	mov	r2, #0
   16dac:	movt	r3, #1
   16db0:	bl	1822c <argp_failure@@Base>
   16db4:	add	sp, sp, #8
   16db8:	ldr	r6, [fp, #-128]	; 0xffffff80
   16dbc:	b	16d50 <argp_help@@Base+0x458>
   16dc0:	str	r9, [sp]
   16dc4:	str	r8, [sp, #4]
   16dc8:	mov	r0, #0
   16dcc:	movw	r3, #62340	; 0xf384
   16dd0:	mov	r1, #0
   16dd4:	mov	r2, #0
   16dd8:	movt	r3, #1
   16ddc:	bl	1822c <argp_failure@@Base>
   16de0:	add	sp, sp, #8
   16de4:	b	16d50 <argp_help@@Base+0x458>
   16de8:	tst	r5, #255	; 0xff
   16dec:	beq	16e2c <argp_help@@Base+0x534>
   16df0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16df4:	sub	sp, sp, #8
   16df8:	cmp	r0, #0
   16dfc:	beq	16e0c <argp_help@@Base+0x514>
   16e00:	movw	r3, #62378	; 0xf3aa
   16e04:	str	r8, [sp]
   16e08:	b	16e18 <argp_help@@Base+0x520>
   16e0c:	movw	r3, #62378	; 0xf3aa
   16e10:	str	r8, [sp]
   16e14:	mov	r0, #0
   16e18:	movt	r3, #1
   16e1c:	mov	r1, #0
   16e20:	mov	r2, #0
   16e24:	bl	1822c <argp_failure@@Base>
   16e28:	add	sp, sp, #8
   16e2c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16e30:	ldr	r1, [fp, #-56]	; 0xffffffc8
   16e34:	movw	r0, #62944	; 0xf5e0
   16e38:	movt	r0, #1
   16e3c:	cmp	r2, r1
   16e40:	bge	16ec4 <argp_help@@Base+0x5cc>
   16e44:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16e48:	cmp	r2, r1
   16e4c:	bge	16ecc <argp_help@@Base+0x5d4>
   16e50:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16e54:	cmp	r2, r1
   16e58:	bge	16ed4 <argp_help@@Base+0x5dc>
   16e5c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16e60:	cmp	r2, r1
   16e64:	bge	16edc <argp_help@@Base+0x5e4>
   16e68:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16e6c:	cmp	r2, r1
   16e70:	bge	16ee4 <argp_help@@Base+0x5ec>
   16e74:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16e78:	ldr	r4, [fp, #-132]	; 0xffffff7c
   16e7c:	cmp	r2, r1
   16e80:	bge	17ff4 <argp_help@@Base+0x16fc>
   16e84:	ldr	r0, [fp, #-112]	; 0xffffff90
   16e88:	sub	r1, fp, #88	; 0x58
   16e8c:	mov	r2, r1
   16e90:	mov	r1, r9
   16e94:	vld1.64	{d16-d17}, [r0]
   16e98:	mov	r0, #32
   16e9c:	vld1.64	{d18-d19}, [r2], r0
   16ea0:	ldr	r0, [fp, #-108]	; 0xffffff94
   16ea4:	vst1.64	{d16-d17}, [r0]
   16ea8:	mov	r0, #36	; 0x24
   16eac:	vst1.64	{d18-d19}, [r1], r0
   16eb0:	mov	r0, #1
   16eb4:	str	r0, [r1]
   16eb8:	ldr	r0, [r2]
   16ebc:	str	r0, [r9, #32]
   16ec0:	b	16f30 <argp_help@@Base+0x638>
   16ec4:	add	r2, r0, #32
   16ec8:	b	16ee8 <argp_help@@Base+0x5f0>
   16ecc:	add	r2, r0, #48	; 0x30
   16ed0:	b	16ee8 <argp_help@@Base+0x5f0>
   16ed4:	add	r2, r0, #64	; 0x40
   16ed8:	b	16ee8 <argp_help@@Base+0x5f0>
   16edc:	add	r2, r0, #80	; 0x50
   16ee0:	b	16ee8 <argp_help@@Base+0x5f0>
   16ee4:	add	r2, r0, #96	; 0x60
   16ee8:	ldr	r4, [fp, #-132]	; 0xffffff7c
   16eec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16ef0:	sub	sp, sp, #8
   16ef4:	movw	r1, #62459	; 0xf3fb
   16ef8:	cmp	r0, #0
   16efc:	movt	r1, #1
   16f00:	beq	16f10 <argp_help@@Base+0x618>
   16f04:	movw	r3, #62407	; 0xf3c7
   16f08:	stm	sp, {r1, r2}
   16f0c:	b	16f1c <argp_help@@Base+0x624>
   16f10:	movw	r3, #62407	; 0xf3c7
   16f14:	stm	sp, {r1, r2}
   16f18:	mov	r0, #0
   16f1c:	movt	r3, #1
   16f20:	mov	r1, #0
   16f24:	mov	r2, #0
   16f28:	bl	1822c <argp_failure@@Base>
   16f2c:	add	sp, sp, #8
   16f30:	ldr	r2, [r9, #32]
   16f34:	mov	r0, r4
   16f38:	mov	r1, #0
   16f3c:	mov	r3, #0
   16f40:	mov	r5, #0
   16f44:	bl	1c890 <argp_parse@@Base+0x264c>
   16f48:	cmp	r0, #0
   16f4c:	beq	16fec <argp_help@@Base+0x6f4>
   16f50:	mov	sl, r0
   16f54:	tst	r6, #11
   16f58:	str	r4, [fp, #-132]	; 0xffffff7c
   16f5c:	beq	170c8 <argp_help@@Base+0x7d0>
   16f60:	ldr	r0, [fp, #-104]	; 0xffffff98
   16f64:	mov	r1, #0
   16f68:	bl	18470 <argp_failure@@Base+0x244>
   16f6c:	ldr	r9, [r0, #4]
   16f70:	mov	r5, r0
   16f74:	cmp	r9, #0
   16f78:	beq	17e68 <argp_help@@Base+0x1570>
   16f7c:	ldr	r6, [r5]
   16f80:	movw	r4, #62179	; 0xf2e3
   16f84:	str	r5, [fp, #-108]	; 0xffffff94
   16f88:	mov	r5, r9
   16f8c:	movt	r4, #1
   16f90:	str	r6, [fp, #-100]	; 0xffffff9c
   16f94:	ldr	r7, [r6, #4]
   16f98:	cmp	r7, #0
   16f9c:	beq	16fdc <argp_help@@Base+0x6e4>
   16fa0:	ldr	r0, [r6]
   16fa4:	add	r8, r0, #12
   16fa8:	ldr	r0, [r8, #-12]
   16fac:	cmp	r0, #0
   16fb0:	beq	16fd0 <argp_help@@Base+0x6d8>
   16fb4:	ldrb	r1, [r8]
   16fb8:	tst	r1, #2
   16fbc:	bne	16fd0 <argp_help@@Base+0x6d8>
   16fc0:	mov	r1, r4
   16fc4:	bl	11998 <strcmp@plt>
   16fc8:	cmp	r0, #0
   16fcc:	beq	16ffc <argp_help@@Base+0x704>
   16fd0:	subs	r7, r7, #1
   16fd4:	add	r8, r8, #24
   16fd8:	bne	16fa8 <argp_help@@Base+0x6b0>
   16fdc:	subs	r5, r5, #1
   16fe0:	add	r6, r6, #28
   16fe4:	bne	16f94 <argp_help@@Base+0x69c>
   16fe8:	b	17008 <argp_help@@Base+0x710>
   16fec:	mov	r0, r4
   16ff0:	sub	sp, fp, #28
   16ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ff8:	b	11b18 <funlockfile@plt>
   16ffc:	cmp	r6, #0
   17000:	mvnne	r0, #0
   17004:	strne	r0, [r6, #12]
   17008:	ldr	r6, [fp, #-100]	; 0xffffff9c
   1700c:	movw	r4, #63528	; 0xf828
   17010:	mov	r8, r9
   17014:	movt	r4, #1
   17018:	ldr	r7, [r6, #4]
   1701c:	cmp	r7, #0
   17020:	beq	17060 <argp_help@@Base+0x768>
   17024:	ldr	r0, [r6]
   17028:	add	r5, r0, #12
   1702c:	ldr	r0, [r5, #-12]
   17030:	cmp	r0, #0
   17034:	beq	17054 <argp_help@@Base+0x75c>
   17038:	ldrb	r1, [r5]
   1703c:	tst	r1, #2
   17040:	bne	17054 <argp_help@@Base+0x75c>
   17044:	mov	r1, r4
   17048:	bl	11998 <strcmp@plt>
   1704c:	cmp	r0, #0
   17050:	beq	17070 <argp_help@@Base+0x778>
   17054:	subs	r7, r7, #1
   17058:	add	r5, r5, #24
   1705c:	bne	1702c <argp_help@@Base+0x734>
   17060:	subs	r8, r8, #1
   17064:	add	r6, r6, #28
   17068:	bne	17018 <argp_help@@Base+0x720>
   1706c:	b	1707c <argp_help@@Base+0x784>
   17070:	cmp	r6, #0
   17074:	mvnne	r0, #0
   17078:	strne	r0, [r6, #12]
   1707c:	cmp	r9, #0
   17080:	beq	170b8 <argp_help@@Base+0x7c0>
   17084:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17088:	mov	r1, #0
   1708c:	add	r0, r0, #24
   17090:	str	r1, [r0], #28
   17094:	add	r1, r1, #1
   17098:	cmp	r9, r1
   1709c:	bne	17090 <argp_help@@Base+0x798>
   170a0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   170a4:	movw	r3, #38860	; 0x97cc
   170a8:	mov	r1, r9
   170ac:	mov	r2, #28
   170b0:	movt	r3, #1
   170b4:	bl	11d7c <qsort@plt>
   170b8:	ldr	r6, [fp, #-128]	; 0xffffff80
   170bc:	ldr	r5, [fp, #-108]	; 0xffffff94
   170c0:	movw	r9, #1424	; 0x590
   170c4:	movt	r9, #3
   170c8:	tst	r6, #3
   170cc:	str	r5, [fp, #-108]	; 0xffffff94
   170d0:	beq	17e7c <argp_help@@Base+0x1584>
   170d4:	ldr	r1, [fp, #-104]	; 0xffffff98
   170d8:	ldr	r0, [r1, #8]
   170dc:	ldr	r1, [r1, #16]
   170e0:	bl	18bc8 <argp_failure@@Base+0x99c>
   170e4:	mov	r2, r0
   170e8:	add	r0, r0, #7
   170ec:	bic	r0, r0, #7
   170f0:	sub	r0, sp, r0
   170f4:	mov	sp, r0
   170f8:	mov	r1, #0
   170fc:	str	r0, [fp, #-100]	; 0xffffff9c
   17100:	bl	11c8c <memset@plt>
   17104:	mov	r7, #1
   17108:	ldr	r1, [sl, #24]
   1710c:	ldr	r2, [sl, #28]
   17110:	ldr	r0, [sl, #16]
   17114:	mov	r5, r6
   17118:	ldr	r6, [r9, #28]
   1711c:	sub	r1, r2, r1
   17120:	cmp	r1, r0
   17124:	bls	17130 <argp_help@@Base+0x838>
   17128:	mov	r0, sl
   1712c:	bl	1c954 <argp_parse@@Base+0x2710>
   17130:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17134:	ldr	r4, [sl, #12]
   17138:	movw	r1, #62184	; 0xf2e8
   1713c:	str	r6, [sl, #12]
   17140:	tst	r7, #1
   17144:	movt	r1, #1
   17148:	str	r0, [fp, #-88]	; 0xffffffa8
   1714c:	mov	r0, sl
   17150:	beq	17160 <argp_help@@Base+0x868>
   17154:	movw	r2, #62190	; 0xf2ee
   17158:	movt	r2, #1
   1715c:	b	17168 <argp_help@@Base+0x870>
   17160:	movw	r2, #62197	; 0xf2f5
   17164:	movt	r2, #1
   17168:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1716c:	bl	1cfe8 <argp_parse@@Base+0x2da4>
   17170:	ldr	r1, [sl, #24]
   17174:	ldr	r2, [sl, #28]
   17178:	ldr	r0, [sl, #16]
   1717c:	ldr	r6, [r9, #28]
   17180:	sub	r1, r2, r1
   17184:	cmp	r1, r0
   17188:	bls	17194 <argp_help@@Base+0x89c>
   1718c:	mov	r0, sl
   17190:	bl	1c954 <argp_parse@@Base+0x2710>
   17194:	ldr	r8, [sl, #4]
   17198:	str	r6, [sl, #4]
   1719c:	mov	r6, r5
   171a0:	tst	r5, #2
   171a4:	bne	171bc <argp_help@@Base+0x8c4>
   171a8:	ldr	r0, [fp, #-108]	; 0xffffff94
   171ac:	mov	r1, sl
   171b0:	bl	18c40 <argp_failure@@Base+0xa14>
   171b4:	orr	r6, r6, #2
   171b8:	b	17220 <argp_help@@Base+0x928>
   171bc:	ldr	r0, [fp, #-108]	; 0xffffff94
   171c0:	ldr	r0, [r0, #4]
   171c4:	cmp	r0, #0
   171c8:	beq	17220 <argp_help@@Base+0x928>
   171cc:	ldr	r0, [sl, #28]
   171d0:	ldr	r1, [sl, #32]
   171d4:	add	r2, r0, #12
   171d8:	cmp	r2, r1
   171dc:	bls	171f8 <argp_help@@Base+0x900>
   171e0:	mov	r0, sl
   171e4:	mov	r1, #12
   171e8:	bl	1cefc <argp_parse@@Base+0x2cb8>
   171ec:	cmp	r0, #0
   171f0:	beq	17220 <argp_help@@Base+0x928>
   171f4:	ldr	r0, [sl, #28]
   171f8:	movw	r1, #62928	; 0xf5d0
   171fc:	movt	r1, #1
   17200:	vldr	d16, [r1]
   17204:	movw	r1, #11822	; 0x2e2e
   17208:	movt	r1, #23854	; 0x5d2e
   1720c:	str	r1, [r0, #8]
   17210:	vst1.8	{d16}, [r0]
   17214:	ldr	r0, [sl, #28]
   17218:	add	r0, r0, #12
   1721c:	str	r0, [sl, #28]
   17220:	sub	sp, sp, #8
   17224:	str	sl, [sp]
   17228:	sub	r2, fp, #88	; 0x58
   1722c:	mov	r3, #1
   17230:	ldr	r0, [fp, #-104]	; 0xffffff98
   17234:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17238:	bl	18ffc <argp_failure@@Base+0xdd0>
   1723c:	add	sp, sp, #8
   17240:	mov	r9, r0
   17244:	ldr	r2, [sl, #24]
   17248:	ldr	r0, [sl, #28]
   1724c:	ldr	r1, [sl, #16]
   17250:	sub	r2, r0, r2
   17254:	cmp	r2, r1
   17258:	bls	17294 <argp_help@@Base+0x99c>
   1725c:	mov	r0, sl
   17260:	bl	1c954 <argp_parse@@Base+0x2710>
   17264:	ldr	r2, [sl, #24]
   17268:	ldr	r0, [sl, #28]
   1726c:	ldr	r1, [sl, #16]
   17270:	sub	r2, r0, r2
   17274:	cmp	r2, r1
   17278:	str	r4, [sl, #12]
   1727c:	bhi	172a0 <argp_help@@Base+0x9a8>
   17280:	str	r8, [sl, #4]
   17284:	ldr	r1, [sl, #32]
   17288:	cmp	r0, r1
   1728c:	bcs	172bc <argp_help@@Base+0x9c4>
   17290:	b	172d4 <argp_help@@Base+0x9dc>
   17294:	cmp	r2, r1
   17298:	str	r4, [sl, #12]
   1729c:	bls	17280 <argp_help@@Base+0x988>
   172a0:	mov	r0, sl
   172a4:	bl	1c954 <argp_parse@@Base+0x2710>
   172a8:	ldr	r0, [sl, #28]
   172ac:	str	r8, [sl, #4]
   172b0:	ldr	r1, [sl, #32]
   172b4:	cmp	r0, r1
   172b8:	bcc	172d4 <argp_help@@Base+0x9dc>
   172bc:	mov	r0, sl
   172c0:	mov	r1, #1
   172c4:	bl	1cefc <argp_parse@@Base+0x2cb8>
   172c8:	cmp	r0, #0
   172cc:	beq	172e4 <argp_help@@Base+0x9ec>
   172d0:	ldr	r0, [sl, #28]
   172d4:	add	r1, r0, #1
   172d8:	str	r1, [sl, #28]
   172dc:	mov	r1, #10
   172e0:	strb	r1, [r0]
   172e4:	cmp	r9, #0
   172e8:	movw	r9, #1424	; 0x590
   172ec:	mov	r7, #0
   172f0:	movt	r9, #3
   172f4:	bne	17108 <argp_help@@Base+0x810>
   172f8:	mov	r5, #1
   172fc:	tst	r6, #16
   17300:	beq	1732c <argp_help@@Base+0xa34>
   17304:	sub	sp, sp, #8
   17308:	mov	r0, #1
   1730c:	mov	r2, #0
   17310:	mov	r3, #0
   17314:	stm	sp, {r0, sl}
   17318:	ldr	r0, [fp, #-104]	; 0xffffff98
   1731c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17320:	bl	192dc <argp_failure@@Base+0x10b0>
   17324:	add	sp, sp, #8
   17328:	orr	r5, r0, r5
   1732c:	tst	r6, #4
   17330:	bne	17d40 <argp_help@@Base+0x1448>
   17334:	tst	r6, #8
   17338:	beq	17d64 <argp_help@@Base+0x146c>
   1733c:	ldr	r0, [fp, #-108]	; 0xffffff94
   17340:	ldr	r1, [r0, #4]
   17344:	cmp	r1, #0
   17348:	beq	17d64 <argp_help@@Base+0x146c>
   1734c:	str	r6, [fp, #-128]	; 0xffffff80
   17350:	cmp	r5, #0
   17354:	ldr	r4, [fp, #-108]	; 0xffffff94
   17358:	beq	17398 <argp_help@@Base+0xaa0>
   1735c:	ldr	r0, [sl, #28]
   17360:	ldr	r1, [sl, #32]
   17364:	cmp	r0, r1
   17368:	bcc	17384 <argp_help@@Base+0xa8c>
   1736c:	mov	r0, sl
   17370:	mov	r1, #1
   17374:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17378:	cmp	r0, #0
   1737c:	beq	17394 <argp_help@@Base+0xa9c>
   17380:	ldr	r0, [sl, #28]
   17384:	add	r1, r0, #1
   17388:	str	r1, [sl, #28]
   1738c:	mov	r1, #10
   17390:	strb	r1, [r0]
   17394:	ldr	r1, [r4, #4]
   17398:	ldr	r5, [r4]
   1739c:	mov	r0, #0
   173a0:	cmp	r1, #0
   173a4:	str	r0, [fp, #-44]	; 0xffffffd4
   173a8:	str	r0, [fp, #-48]	; 0xffffffd0
   173ac:	str	r0, [fp, #-40]	; 0xffffffd8
   173b0:	beq	17d2c <argp_help@@Base+0x1434>
   173b4:	add	r0, sl, #28
   173b8:	str	r0, [fp, #-100]	; 0xffffff9c
   173bc:	ldr	r0, [r5, #8]
   173c0:	str	r1, [fp, #-116]	; 0xffffff8c
   173c4:	ldr	r1, [sl, #24]
   173c8:	ldr	r2, [sl, #28]
   173cc:	ldr	r4, [r5]
   173d0:	str	r0, [fp, #-92]	; 0xffffffa4
   173d4:	ldr	r0, [sl, #16]
   173d8:	sub	r1, r2, r1
   173dc:	cmp	r1, r0
   173e0:	bls	173ec <argp_help@@Base+0xaf4>
   173e4:	mov	r0, sl
   173e8:	bl	1c954 <argp_parse@@Base+0x2710>
   173ec:	mov	r7, #0
   173f0:	sub	r0, fp, #48	; 0x30
   173f4:	ldr	r2, [sl, #4]
   173f8:	ldr	r1, [sl, #12]
   173fc:	mov	r8, r4
   17400:	str	r7, [sl, #4]
   17404:	str	sl, [fp, #-84]	; 0xffffffac
   17408:	str	r5, [fp, #-88]	; 0xffffffa8
   1740c:	str	r0, [fp, #-80]	; 0xffffffb0
   17410:	mov	r0, #1
   17414:	str	r0, [fp, #-76]	; 0xffffffb4
   17418:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1741c:	str	r1, [fp, #-120]	; 0xffffff88
   17420:	str	r2, [fp, #-124]	; 0xffffff84
   17424:	str	r0, [fp, #-72]	; 0xffffffb8
   17428:	ldrb	r0, [r4, #12]
   1742c:	tst	r0, #8
   17430:	bne	17470 <argp_help@@Base+0xb78>
   17434:	ldr	r0, [r5, #4]
   17438:	cmp	r0, #0
   1743c:	beq	17470 <argp_help@@Base+0xb78>
   17440:	add	r1, r4, #12
   17444:	ldr	r2, [r1, #-12]
   17448:	cmp	r2, #0
   1744c:	beq	1745c <argp_help@@Base+0xb64>
   17450:	ldrb	r2, [r1]
   17454:	tst	r2, #2
   17458:	beq	1746c <argp_help@@Base+0xb74>
   1745c:	add	r1, r1, #24
   17460:	subs	r0, r0, #1
   17464:	bne	17444 <argp_help@@Base+0xb4c>
   17468:	b	17470 <argp_help@@Base+0xb78>
   1746c:	mov	r7, #1
   17470:	ldr	r1, [sl, #24]
   17474:	ldr	r2, [sl, #28]
   17478:	ldr	r0, [sl, #16]
   1747c:	ldr	r4, [r9, #8]
   17480:	sub	r1, r2, r1
   17484:	cmp	r1, r0
   17488:	bls	17494 <argp_help@@Base+0xb9c>
   1748c:	mov	r0, sl
   17490:	bl	1c954 <argp_parse@@Base+0x2710>
   17494:	str	r4, [sl, #12]
   17498:	mov	r4, r8
   1749c:	str	r5, [fp, #-112]	; 0xffffff90
   174a0:	ldr	r6, [r5, #4]
   174a4:	cmp	r6, #0
   174a8:	beq	17788 <argp_help@@Base+0xe90>
   174ac:	cmp	r7, #0
   174b0:	beq	17638 <argp_help@@Base+0xd40>
   174b4:	add	r7, r4, #12
   174b8:	ldr	r5, [r7]
   174bc:	tst	r5, #8
   174c0:	bne	174f0 <argp_help@@Base+0xbf8>
   174c4:	ldr	r4, [r7, #-8]
   174c8:	sub	r0, r4, #1
   174cc:	cmp	r0, #254	; 0xfe
   174d0:	bhi	17500 <argp_help@@Base+0xc08>
   174d4:	bl	11bfc <__ctype_b_loc@plt>
   174d8:	ldr	r0, [r0]
   174dc:	add	r0, r0, r4, lsl #1
   174e0:	ldrb	r0, [r0, #1]
   174e4:	tst	r0, #64	; 0x40
   174e8:	bne	17514 <argp_help@@Base+0xc1c>
   174ec:	mov	r4, r8
   174f0:	add	r7, r7, #24
   174f4:	subs	r6, r6, #1
   174f8:	bne	174b8 <argp_help@@Base+0xbc0>
   174fc:	b	17788 <argp_help@@Base+0xe90>
   17500:	mov	r4, r8
   17504:	add	r7, r7, #24
   17508:	subs	r6, r6, #1
   1750c:	bne	174b8 <argp_help@@Base+0xbc0>
   17510:	b	17788 <argp_help@@Base+0xe90>
   17514:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17518:	ldrb	r0, [r0]
   1751c:	cmp	r4, r0
   17520:	bne	175fc <argp_help@@Base+0xd04>
   17524:	tst	r5, #2
   17528:	mov	r4, r8
   1752c:	bne	1761c <argp_help@@Base+0xd24>
   17530:	ldr	r0, [r9, #8]
   17534:	sub	r1, fp, #88	; 0x58
   17538:	bl	19d90 <argp_failure@@Base+0x1b64>
   1753c:	ldr	r0, [sl, #28]
   17540:	ldr	r1, [sl, #32]
   17544:	cmp	r0, r1
   17548:	bcc	17568 <argp_help@@Base+0xc70>
   1754c:	mov	r0, sl
   17550:	mov	r1, #1
   17554:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17558:	cmp	r0, #0
   1755c:	beq	1757c <argp_help@@Base+0xc84>
   17560:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17564:	ldr	r0, [r0]
   17568:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1756c:	add	r1, r0, #1
   17570:	str	r1, [r2]
   17574:	mov	r1, #45	; 0x2d
   17578:	strb	r1, [r0]
   1757c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17580:	ldr	r0, [sl, #28]
   17584:	ldr	r1, [sl, #32]
   17588:	ldrb	r5, [r2]
   1758c:	cmp	r0, r1
   17590:	bcc	175b0 <argp_help@@Base+0xcb8>
   17594:	mov	r0, sl
   17598:	mov	r1, #1
   1759c:	bl	1cefc <argp_parse@@Base+0x2cb8>
   175a0:	cmp	r0, #0
   175a4:	beq	175c0 <argp_help@@Base+0xcc8>
   175a8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   175ac:	ldr	r0, [r0]
   175b0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   175b4:	add	r1, r0, #1
   175b8:	str	r1, [r2]
   175bc:	strb	r5, [r0]
   175c0:	ldr	r0, [r9]
   175c4:	ldr	r2, [r4, #8]
   175c8:	cmp	r0, #0
   175cc:	beq	17610 <argp_help@@Base+0xd18>
   175d0:	cmp	r2, #0
   175d4:	beq	1761c <argp_help@@Base+0xd24>
   175d8:	ldrb	r0, [r4, #12]
   175dc:	tst	r0, #1
   175e0:	mov	r0, sl
   175e4:	movweq	r1, #62403	; 0xf3c3
   175e8:	movteq	r1, #1
   175ec:	movwne	r1, #62899	; 0xf5b3
   175f0:	movtne	r1, #1
   175f4:	bl	1cfe8 <argp_parse@@Base+0x2da4>
   175f8:	b	1761c <argp_help@@Base+0xd24>
   175fc:	mov	r4, r8
   17600:	add	r7, r7, #24
   17604:	subs	r6, r6, #1
   17608:	bne	174b8 <argp_help@@Base+0xbc0>
   1760c:	b	17788 <argp_help@@Base+0xe90>
   17610:	cmp	r2, #0
   17614:	movne	r0, #1
   17618:	strne	r0, [fp, #-40]	; 0xffffffd8
   1761c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17620:	add	r0, r0, #1
   17624:	str	r0, [fp, #-92]	; 0xffffffa4
   17628:	add	r7, r7, #24
   1762c:	subs	r6, r6, #1
   17630:	bne	174b8 <argp_help@@Base+0xbc0>
   17634:	b	17788 <argp_help@@Base+0xe90>
   17638:	add	r7, r4, #12
   1763c:	ldr	r5, [r7]
   17640:	tst	r5, #8
   17644:	bne	17750 <argp_help@@Base+0xe58>
   17648:	ldr	r9, [r7, #-8]
   1764c:	sub	r0, r9, #1
   17650:	cmp	r0, #254	; 0xfe
   17654:	bhi	17748 <argp_help@@Base+0xe50>
   17658:	bl	11bfc <__ctype_b_loc@plt>
   1765c:	ldr	r0, [r0]
   17660:	add	r0, r0, r9, lsl #1
   17664:	ldrb	r0, [r0, #1]
   17668:	tst	r0, #64	; 0x40
   1766c:	beq	17748 <argp_help@@Base+0xe50>
   17670:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17674:	ldrb	r0, [r0]
   17678:	cmp	r9, r0
   1767c:	bne	17748 <argp_help@@Base+0xe50>
   17680:	movw	r9, #1424	; 0x590
   17684:	tst	r5, #2
   17688:	movt	r9, #3
   1768c:	bne	17770 <argp_help@@Base+0xe78>
   17690:	ldr	r0, [r9, #8]
   17694:	sub	r1, fp, #88	; 0x58
   17698:	bl	19d90 <argp_failure@@Base+0x1b64>
   1769c:	ldr	r0, [sl, #28]
   176a0:	ldr	r1, [sl, #32]
   176a4:	cmp	r0, r1
   176a8:	bcc	176c8 <argp_help@@Base+0xdd0>
   176ac:	mov	r0, sl
   176b0:	mov	r1, #1
   176b4:	bl	1cefc <argp_parse@@Base+0x2cb8>
   176b8:	cmp	r0, #0
   176bc:	beq	176dc <argp_help@@Base+0xde4>
   176c0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   176c4:	ldr	r0, [r0]
   176c8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   176cc:	add	r1, r0, #1
   176d0:	str	r1, [r2]
   176d4:	mov	r1, #45	; 0x2d
   176d8:	strb	r1, [r0]
   176dc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   176e0:	ldr	r0, [sl, #28]
   176e4:	ldr	r1, [sl, #32]
   176e8:	ldrb	r5, [r2]
   176ec:	cmp	r0, r1
   176f0:	bcc	17710 <argp_help@@Base+0xe18>
   176f4:	mov	r0, sl
   176f8:	mov	r1, #1
   176fc:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17700:	cmp	r0, #0
   17704:	beq	17720 <argp_help@@Base+0xe28>
   17708:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1770c:	ldr	r0, [r0]
   17710:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17714:	add	r1, r0, #1
   17718:	str	r1, [r2]
   1771c:	strb	r5, [r0]
   17720:	ldr	r2, [r4, #8]
   17724:	cmp	r2, #0
   17728:	beq	17770 <argp_help@@Base+0xe78>
   1772c:	ldrb	r0, [r4, #12]
   17730:	tst	r0, #1
   17734:	bne	17760 <argp_help@@Base+0xe68>
   17738:	movw	r1, #62403	; 0xf3c3
   1773c:	mov	r0, sl
   17740:	movt	r1, #1
   17744:	b	1776c <argp_help@@Base+0xe74>
   17748:	movw	r9, #1424	; 0x590
   1774c:	movt	r9, #3
   17750:	add	r7, r7, #24
   17754:	subs	r6, r6, #1
   17758:	bne	1763c <argp_help@@Base+0xd44>
   1775c:	b	17788 <argp_help@@Base+0xe90>
   17760:	movw	r1, #62899	; 0xf5b3
   17764:	mov	r0, sl
   17768:	movt	r1, #1
   1776c:	bl	1cfe8 <argp_parse@@Base+0x2da4>
   17770:	ldr	r0, [fp, #-92]	; 0xffffffa4
   17774:	add	r0, r0, #1
   17778:	str	r0, [fp, #-92]	; 0xffffffa4
   1777c:	add	r7, r7, #24
   17780:	subs	r6, r6, #1
   17784:	bne	1763c <argp_help@@Base+0xd44>
   17788:	ldrb	r0, [r4, #12]
   1778c:	tst	r0, #8
   17790:	bne	17854 <argp_help@@Base+0xf5c>
   17794:	ldr	r1, [sl, #24]
   17798:	ldr	r2, [sl, #28]
   1779c:	ldr	r0, [sl, #16]
   177a0:	ldr	r4, [r9, #12]
   177a4:	sub	r1, r2, r1
   177a8:	cmp	r1, r0
   177ac:	bls	177b8 <argp_help@@Base+0xec0>
   177b0:	mov	r0, sl
   177b4:	bl	1c954 <argp_parse@@Base+0x2710>
   177b8:	ldr	r0, [fp, #-112]	; 0xffffff90
   177bc:	str	r4, [sl, #12]
   177c0:	mov	r4, r8
   177c4:	ldr	r5, [r0, #4]
   177c8:	cmp	r5, #0
   177cc:	beq	17928 <argp_help@@Base+0x1030>
   177d0:	add	r6, r4, #12
   177d4:	ldr	r0, [r6, #-12]
   177d8:	cmp	r0, #0
   177dc:	beq	17844 <argp_help@@Base+0xf4c>
   177e0:	ldrb	r0, [r6]
   177e4:	tst	r0, #2
   177e8:	bne	17844 <argp_help@@Base+0xf4c>
   177ec:	ldr	r0, [r9, #12]
   177f0:	sub	r1, fp, #88	; 0x58
   177f4:	bl	19d90 <argp_failure@@Base+0x1b64>
   177f8:	ldr	r2, [r6, #-12]
   177fc:	movw	r1, #62904	; 0xf5b8
   17800:	mov	r0, sl
   17804:	movt	r1, #1
   17808:	bl	1cfe8 <argp_parse@@Base+0x2da4>
   1780c:	ldr	r2, [r4, #8]
   17810:	cmp	r2, #0
   17814:	beq	17844 <argp_help@@Base+0xf4c>
   17818:	ldrb	r0, [r4, #12]
   1781c:	tst	r0, #1
   17820:	bne	17834 <argp_help@@Base+0xf3c>
   17824:	movw	r1, #62909	; 0xf5bd
   17828:	mov	r0, sl
   1782c:	movt	r1, #1
   17830:	b	17840 <argp_help@@Base+0xf48>
   17834:	movw	r1, #62913	; 0xf5c1
   17838:	mov	r0, sl
   1783c:	movt	r1, #1
   17840:	bl	1cfe8 <argp_parse@@Base+0x2da4>
   17844:	add	r6, r6, #24
   17848:	subs	r5, r5, #1
   1784c:	bne	177d4 <argp_help@@Base+0xedc>
   17850:	b	17928 <argp_help@@Base+0x1030>
   17854:	ldr	r1, [sl, #24]
   17858:	ldr	r2, [sl, #28]
   1785c:	ldr	r0, [sl, #16]
   17860:	ldr	r4, [r9, #16]
   17864:	sub	r1, r2, r1
   17868:	cmp	r1, r0
   1786c:	bls	17878 <argp_help@@Base+0xf80>
   17870:	mov	r0, sl
   17874:	bl	1c954 <argp_parse@@Base+0x2710>
   17878:	ldr	r0, [fp, #-112]	; 0xffffff90
   1787c:	str	r4, [sl, #12]
   17880:	mov	r4, r8
   17884:	ldr	r6, [r0, #4]
   17888:	cmp	r6, #0
   1788c:	beq	17928 <argp_help@@Base+0x1030>
   17890:	add	r8, r4, #12
   17894:	ldr	r0, [r8, #-12]
   17898:	cmp	r0, #0
   1789c:	beq	1791c <argp_help@@Base+0x1024>
   178a0:	ldrb	r0, [r8]
   178a4:	tst	r0, #2
   178a8:	bne	1791c <argp_help@@Base+0x1024>
   178ac:	ldr	r0, [r9, #16]
   178b0:	sub	r1, fp, #88	; 0x58
   178b4:	bl	19d90 <argp_failure@@Base+0x1b64>
   178b8:	ldr	r5, [r8, #-12]
   178bc:	mov	r0, r5
   178c0:	bl	11c20 <strlen@plt>
   178c4:	cmp	r0, #0
   178c8:	beq	1791c <argp_help@@Base+0x1024>
   178cc:	mov	r7, r0
   178d0:	ldr	r0, [sl, #28]
   178d4:	ldr	r1, [sl, #32]
   178d8:	add	r2, r0, r7
   178dc:	cmp	r2, r1
   178e0:	bls	17900 <argp_help@@Base+0x1008>
   178e4:	mov	r0, sl
   178e8:	mov	r1, r7
   178ec:	bl	1cefc <argp_parse@@Base+0x2cb8>
   178f0:	cmp	r0, #0
   178f4:	beq	1791c <argp_help@@Base+0x1024>
   178f8:	ldr	r0, [fp, #-100]	; 0xffffff9c
   178fc:	ldr	r0, [r0]
   17900:	mov	r1, r5
   17904:	mov	r2, r7
   17908:	bl	11a58 <memcpy@plt>
   1790c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17910:	ldr	r0, [r1]
   17914:	add	r0, r0, r7
   17918:	str	r0, [r1]
   1791c:	add	r8, r8, #24
   17920:	subs	r6, r6, #1
   17924:	bne	17894 <argp_help@@Base+0xf9c>
   17928:	ldr	r1, [sl, #24]
   1792c:	ldr	r2, [sl, #28]
   17930:	ldr	r0, [sl, #16]
   17934:	sub	r1, r2, r1
   17938:	cmp	r1, r0
   1793c:	bls	17948 <argp_help@@Base+0x1050>
   17940:	mov	r0, sl
   17944:	bl	1c954 <argp_parse@@Base+0x2710>
   17948:	mov	r0, #0
   1794c:	ldr	r5, [fp, #-112]	; 0xffffff90
   17950:	str	r0, [sl, #4]
   17954:	ldr	r0, [fp, #-76]	; 0xffffffb4
   17958:	cmp	r0, #0
   1795c:	beq	179b8 <argp_help@@Base+0x10c0>
   17960:	ldrb	r0, [r4, #12]
   17964:	mov	r6, r4
   17968:	tst	r0, #8
   1796c:	bne	17998 <argp_help@@Base+0x10a0>
   17970:	ldr	r4, [r6, #4]
   17974:	sub	r0, r4, #1
   17978:	cmp	r0, #254	; 0xfe
   1797c:	bhi	17998 <argp_help@@Base+0x10a0>
   17980:	bl	11bfc <__ctype_b_loc@plt>
   17984:	ldr	r0, [r0]
   17988:	add	r0, r0, r4, lsl #1
   1798c:	ldrb	r0, [r0, #1]
   17990:	tst	r0, #64	; 0x40
   17994:	bne	17cb8 <argp_help@@Base+0x13c0>
   17998:	ldr	r0, [r6]
   1799c:	cmp	r0, #0
   179a0:	bne	17cb8 <argp_help@@Base+0x13c0>
   179a4:	ldr	r1, [r5, #20]
   179a8:	ldr	r0, [r6, #16]
   179ac:	sub	r2, fp, #88	; 0x58
   179b0:	bl	19f98 <argp_failure@@Base+0x1d6c>
   179b4:	b	17cb4 <argp_help@@Base+0x13bc>
   179b8:	ldr	r6, [r5, #20]
   179bc:	ldr	r5, [r4, #16]
   179c0:	cmp	r6, #0
   179c4:	mov	r8, r5
   179c8:	beq	17a04 <argp_help@@Base+0x110c>
   179cc:	ldr	r0, [r6, #20]
   179d0:	mov	r8, r5
   179d4:	cmp	r0, #0
   179d8:	beq	17a04 <argp_help@@Base+0x110c>
   179dc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   179e0:	ldr	r7, [r4, #4]
   179e4:	mov	r0, r6
   179e8:	bl	1af14 <argp_parse@@Base+0xcd0>
   179ec:	ldr	r3, [r6, #20]
   179f0:	mov	r2, r0
   179f4:	mov	r0, r7
   179f8:	mov	r1, r5
   179fc:	blx	r3
   17a00:	mov	r8, r0
   17a04:	cmp	r8, #0
   17a08:	beq	17c48 <argp_help@@Base+0x1350>
   17a0c:	ldrb	r0, [r8]
   17a10:	cmp	r0, #0
   17a14:	beq	17c38 <argp_help@@Base+0x1340>
   17a18:	ldr	r1, [sl, #24]
   17a1c:	ldr	r2, [sl, #28]
   17a20:	ldr	r0, [sl, #16]
   17a24:	str	r5, [fp, #-92]	; 0xffffffa4
   17a28:	sub	r1, r2, r1
   17a2c:	cmp	r1, r0
   17a30:	bls	17a4c <argp_help@@Base+0x1154>
   17a34:	mov	r0, sl
   17a38:	bl	1c954 <argp_parse@@Base+0x2710>
   17a3c:	ldr	r1, [sl, #24]
   17a40:	ldr	r2, [sl, #28]
   17a44:	ldr	r0, [sl, #16]
   17a48:	sub	r1, r2, r1
   17a4c:	ldr	r5, [r9, #20]
   17a50:	ldr	r4, [sl, #20]
   17a54:	cmp	r1, r0
   17a58:	mov	r6, r5
   17a5c:	bls	17a7c <argp_help@@Base+0x1184>
   17a60:	mov	r0, sl
   17a64:	bl	1c954 <argp_parse@@Base+0x2710>
   17a68:	ldr	r1, [sl, #24]
   17a6c:	ldr	r2, [sl, #28]
   17a70:	ldr	r6, [r9, #20]
   17a74:	ldr	r0, [sl, #16]
   17a78:	sub	r1, r2, r1
   17a7c:	str	r5, [sl, #4]
   17a80:	bic	r7, r4, r4, asr #31
   17a84:	cmp	r1, r0
   17a88:	mov	r5, r6
   17a8c:	bls	17a9c <argp_help@@Base+0x11a4>
   17a90:	mov	r0, sl
   17a94:	bl	1c954 <argp_parse@@Base+0x2710>
   17a98:	ldr	r5, [r9, #20]
   17a9c:	add	r0, r5, #3
   17aa0:	str	r6, [sl, #12]
   17aa4:	cmp	r7, r0
   17aa8:	bls	17af0 <argp_help@@Base+0x11f8>
   17aac:	ldr	r0, [sl, #28]
   17ab0:	ldr	r1, [sl, #32]
   17ab4:	cmp	r0, r1
   17ab8:	bcc	17ad8 <argp_help@@Base+0x11e0>
   17abc:	mov	r0, sl
   17ac0:	mov	r1, #1
   17ac4:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17ac8:	cmp	r0, #0
   17acc:	beq	17bd4 <argp_help@@Base+0x12dc>
   17ad0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17ad4:	ldr	r0, [r0]
   17ad8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17adc:	add	r1, r0, #1
   17ae0:	str	r1, [r2]
   17ae4:	mov	r1, #10
   17ae8:	strb	r1, [r0]
   17aec:	b	17bd4 <argp_help@@Base+0x12dc>
   17af0:	cmp	r7, r5
   17af4:	bcs	17b84 <argp_help@@Base+0x128c>
   17af8:	ldr	r1, [sl, #24]
   17afc:	ldr	r2, [sl, #28]
   17b00:	ldr	r0, [sl, #16]
   17b04:	sub	r1, r2, r1
   17b08:	cmp	r1, r0
   17b0c:	bls	17b18 <argp_help@@Base+0x1220>
   17b10:	mov	r0, sl
   17b14:	bl	1c954 <argp_parse@@Base+0x2710>
   17b18:	ldr	r0, [sl, #20]
   17b1c:	bic	r0, r0, r0, asr #31
   17b20:	sub	r1, r5, r0
   17b24:	cmp	r1, #1
   17b28:	blt	17bd4 <argp_help@@Base+0x12dc>
   17b2c:	add	r1, r5, #1
   17b30:	sub	r6, r1, r0
   17b34:	ldr	r0, [sl, #28]
   17b38:	ldr	r1, [sl, #32]
   17b3c:	cmp	r0, r1
   17b40:	bcc	17b60 <argp_help@@Base+0x1268>
   17b44:	mov	r0, sl
   17b48:	mov	r1, #1
   17b4c:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17b50:	cmp	r0, #0
   17b54:	beq	17b74 <argp_help@@Base+0x127c>
   17b58:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17b5c:	ldr	r0, [r0]
   17b60:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17b64:	add	r1, r0, #1
   17b68:	str	r1, [r2]
   17b6c:	mov	r1, #32
   17b70:	strb	r1, [r0]
   17b74:	sub	r6, r6, #1
   17b78:	cmp	r6, #1
   17b7c:	bgt	17b34 <argp_help@@Base+0x123c>
   17b80:	b	17bd4 <argp_help@@Base+0x12dc>
   17b84:	ldr	r0, [sl, #28]
   17b88:	ldr	r1, [sl, #32]
   17b8c:	add	r2, r0, #3
   17b90:	cmp	r2, r1
   17b94:	bls	17bb4 <argp_help@@Base+0x12bc>
   17b98:	mov	r0, sl
   17b9c:	mov	r1, #3
   17ba0:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17ba4:	cmp	r0, #0
   17ba8:	beq	17bd4 <argp_help@@Base+0x12dc>
   17bac:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17bb0:	ldr	r0, [r0]
   17bb4:	mov	r1, #32
   17bb8:	strb	r1, [r0, #2]
   17bbc:	movw	r1, #8224	; 0x2020
   17bc0:	strh	r1, [r0]
   17bc4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17bc8:	ldr	r0, [r1]
   17bcc:	add	r0, r0, #3
   17bd0:	str	r0, [r1]
   17bd4:	mov	r0, r8
   17bd8:	bl	11c20 <strlen@plt>
   17bdc:	ldr	r5, [fp, #-92]	; 0xffffffa4
   17be0:	cmp	r0, #0
   17be4:	beq	17c38 <argp_help@@Base+0x1340>
   17be8:	mov	r6, r0
   17bec:	ldr	r0, [sl, #28]
   17bf0:	ldr	r1, [sl, #32]
   17bf4:	add	r2, r0, r6
   17bf8:	cmp	r2, r1
   17bfc:	bls	17c1c <argp_help@@Base+0x1324>
   17c00:	mov	r0, sl
   17c04:	mov	r1, r6
   17c08:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17c0c:	cmp	r0, #0
   17c10:	beq	17c38 <argp_help@@Base+0x1340>
   17c14:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17c18:	ldr	r0, [r0]
   17c1c:	mov	r1, r8
   17c20:	mov	r2, r6
   17c24:	bl	11a58 <memcpy@plt>
   17c28:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17c2c:	ldr	r0, [r1]
   17c30:	add	r0, r0, r6
   17c34:	str	r0, [r1]
   17c38:	cmp	r8, r5
   17c3c:	beq	17c48 <argp_help@@Base+0x1350>
   17c40:	mov	r0, r8
   17c44:	bl	1b7d4 <argp_parse@@Base+0x1590>
   17c48:	ldr	r2, [sl, #24]
   17c4c:	ldr	r0, [sl, #28]
   17c50:	ldr	r1, [sl, #16]
   17c54:	sub	r2, r0, r2
   17c58:	cmp	r2, r1
   17c5c:	bls	17c6c <argp_help@@Base+0x1374>
   17c60:	mov	r0, sl
   17c64:	bl	1c954 <argp_parse@@Base+0x2710>
   17c68:	ldr	r0, [sl, #28]
   17c6c:	mov	r1, #0
   17c70:	ldr	r5, [fp, #-112]	; 0xffffff90
   17c74:	str	r1, [sl, #4]
   17c78:	ldr	r1, [sl, #32]
   17c7c:	cmp	r0, r1
   17c80:	bcc	17ca0 <argp_help@@Base+0x13a8>
   17c84:	mov	r0, sl
   17c88:	mov	r1, #1
   17c8c:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17c90:	cmp	r0, #0
   17c94:	beq	17cb4 <argp_help@@Base+0x13bc>
   17c98:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17c9c:	ldr	r0, [r0]
   17ca0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17ca4:	add	r1, r0, #1
   17ca8:	str	r1, [r2]
   17cac:	mov	r1, #10
   17cb0:	strb	r1, [r0]
   17cb4:	str	r5, [fp, #-48]	; 0xffffffd0
   17cb8:	ldr	r1, [sl, #24]
   17cbc:	ldr	r2, [sl, #28]
   17cc0:	ldr	r0, [sl, #16]
   17cc4:	sub	r1, r2, r1
   17cc8:	cmp	r1, r0
   17ccc:	bls	17ce8 <argp_help@@Base+0x13f0>
   17cd0:	mov	r0, sl
   17cd4:	bl	1c954 <argp_parse@@Base+0x2710>
   17cd8:	ldr	r1, [sl, #24]
   17cdc:	ldr	r2, [sl, #28]
   17ce0:	ldr	r0, [sl, #16]
   17ce4:	sub	r1, r2, r1
   17ce8:	ldr	r2, [fp, #-124]	; 0xffffff84
   17cec:	cmp	r1, r0
   17cf0:	str	r2, [sl, #4]
   17cf4:	bls	17d00 <argp_help@@Base+0x1408>
   17cf8:	mov	r0, sl
   17cfc:	bl	1c954 <argp_parse@@Base+0x2710>
   17d00:	ldr	r1, [fp, #-116]	; 0xffffff8c
   17d04:	ldr	r0, [fp, #-120]	; 0xffffff88
   17d08:	add	r5, r5, #28
   17d0c:	subs	r1, r1, #1
   17d10:	str	r0, [sl, #12]
   17d14:	bne	173bc <argp_help@@Base+0xac4>
   17d18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17d1c:	cmp	r0, #0
   17d20:	ldrne	r0, [r9, #4]
   17d24:	cmpne	r0, #0
   17d28:	bne	17e8c <argp_help@@Base+0x1594>
   17d2c:	ldr	r6, [fp, #-128]	; 0xffffff80
   17d30:	mov	r5, #1
   17d34:	tst	r6, #32
   17d38:	bne	17d6c <argp_help@@Base+0x1474>
   17d3c:	b	17d94 <argp_help@@Base+0x149c>
   17d40:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17d44:	movw	r1, #62204	; 0xf2fc
   17d48:	mov	r0, sl
   17d4c:	movt	r1, #1
   17d50:	mov	r3, r2
   17d54:	bl	1cfe8 <argp_parse@@Base+0x2da4>
   17d58:	mov	r5, #1
   17d5c:	tst	r6, #8
   17d60:	bne	1733c <argp_help@@Base+0xa44>
   17d64:	tst	r6, #32
   17d68:	beq	17d94 <argp_help@@Base+0x149c>
   17d6c:	sub	sp, sp, #8
   17d70:	mov	r0, #0
   17d74:	mov	r2, #1
   17d78:	mov	r3, r5
   17d7c:	stm	sp, {r0, sl}
   17d80:	ldr	r0, [fp, #-104]	; 0xffffff98
   17d84:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17d88:	bl	192dc <argp_failure@@Base+0x10b0>
   17d8c:	add	sp, sp, #8
   17d90:	orr	r5, r0, r5
   17d94:	tst	r6, #64	; 0x40
   17d98:	movwne	r6, #4244	; 0x1094
   17d9c:	movtne	r6, #3
   17da0:	ldrne	r0, [r6]
   17da4:	cmpne	r0, #0
   17da8:	beq	17e00 <argp_help@@Base+0x1508>
   17dac:	cmp	r5, #0
   17db0:	beq	17dec <argp_help@@Base+0x14f4>
   17db4:	ldr	r0, [sl, #28]
   17db8:	ldr	r1, [sl, #32]
   17dbc:	cmp	r0, r1
   17dc0:	bcc	17ddc <argp_help@@Base+0x14e4>
   17dc4:	mov	r0, sl
   17dc8:	mov	r1, #1
   17dcc:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17dd0:	cmp	r0, #0
   17dd4:	beq	17dec <argp_help@@Base+0x14f4>
   17dd8:	ldr	r0, [sl, #28]
   17ddc:	add	r1, r0, #1
   17de0:	str	r1, [sl, #28]
   17de4:	mov	r1, #10
   17de8:	strb	r1, [r0]
   17dec:	ldr	r2, [r6]
   17df0:	movw	r1, #62259	; 0xf333
   17df4:	mov	r0, sl
   17df8:	movt	r1, #1
   17dfc:	bl	1cfe8 <argp_parse@@Base+0x2da4>
   17e00:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17e04:	bl	11b18 <funlockfile@plt>
   17e08:	ldr	r5, [fp, #-108]	; 0xffffff94
   17e0c:	cmp	r5, #0
   17e10:	beq	17e58 <argp_help@@Base+0x1560>
   17e14:	ldr	r0, [r5, #12]
   17e18:	cmp	r0, #0
   17e1c:	beq	17e34 <argp_help@@Base+0x153c>
   17e20:	ldr	r4, [r0, #24]
   17e24:	bl	1b7d4 <argp_parse@@Base+0x1590>
   17e28:	cmp	r4, #0
   17e2c:	mov	r0, r4
   17e30:	bne	17e20 <argp_help@@Base+0x1528>
   17e34:	ldr	r0, [r5, #4]
   17e38:	cmp	r0, #0
   17e3c:	beq	17e50 <argp_help@@Base+0x1558>
   17e40:	ldr	r0, [r5]
   17e44:	bl	1b7d4 <argp_parse@@Base+0x1590>
   17e48:	ldr	r0, [r5, #8]
   17e4c:	bl	1b7d4 <argp_parse@@Base+0x1590>
   17e50:	mov	r0, r5
   17e54:	bl	1b7d4 <argp_parse@@Base+0x1590>
   17e58:	mov	r0, sl
   17e5c:	bl	1c910 <argp_parse@@Base+0x26cc>
   17e60:	sub	sp, fp, #28
   17e64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17e68:	movw	r9, #1424	; 0x590
   17e6c:	movt	r9, #3
   17e70:	tst	r6, #3
   17e74:	str	r5, [fp, #-108]	; 0xffffff94
   17e78:	bne	170d4 <argp_help@@Base+0x7dc>
   17e7c:	mov	r5, #0
   17e80:	tst	r6, #16
   17e84:	bne	17304 <argp_help@@Base+0xa0c>
   17e88:	b	1732c <argp_help@@Base+0xa34>
   17e8c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   17e90:	movw	r5, #62783	; 0xf53f
   17e94:	movt	r5, #1
   17e98:	cmp	r0, #0
   17e9c:	beq	17eb4 <argp_help@@Base+0x15bc>
   17ea0:	ldr	r6, [r0]
   17ea4:	cmp	r6, #0
   17ea8:	ldrne	r0, [r6, #20]
   17eac:	cmpne	r0, #0
   17eb0:	bne	17fbc <argp_help@@Base+0x16c4>
   17eb4:	ldrb	r0, [r5]
   17eb8:	cmp	r0, #0
   17ebc:	beq	17fa0 <argp_help@@Base+0x16a8>
   17ec0:	ldr	r0, [sl, #28]
   17ec4:	ldr	r1, [sl, #32]
   17ec8:	cmp	r0, r1
   17ecc:	bcc	17eec <argp_help@@Base+0x15f4>
   17ed0:	mov	r0, sl
   17ed4:	mov	r1, #1
   17ed8:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17edc:	cmp	r0, #0
   17ee0:	beq	17f00 <argp_help@@Base+0x1608>
   17ee4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17ee8:	ldr	r0, [r0]
   17eec:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17ef0:	add	r1, r0, #1
   17ef4:	str	r1, [r2]
   17ef8:	mov	r1, #10
   17efc:	strb	r1, [r0]
   17f00:	mov	r0, r5
   17f04:	bl	11c20 <strlen@plt>
   17f08:	cmp	r0, #0
   17f0c:	beq	17f60 <argp_help@@Base+0x1668>
   17f10:	mov	r6, r0
   17f14:	ldr	r0, [sl, #28]
   17f18:	ldr	r1, [sl, #32]
   17f1c:	add	r2, r0, r6
   17f20:	cmp	r2, r1
   17f24:	bls	17f44 <argp_help@@Base+0x164c>
   17f28:	mov	r0, sl
   17f2c:	mov	r1, r6
   17f30:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17f34:	cmp	r0, #0
   17f38:	beq	17f60 <argp_help@@Base+0x1668>
   17f3c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17f40:	ldr	r0, [r0]
   17f44:	mov	r1, r5
   17f48:	mov	r2, r6
   17f4c:	bl	11a58 <memcpy@plt>
   17f50:	ldr	r1, [fp, #-100]	; 0xffffff9c
   17f54:	ldr	r0, [r1]
   17f58:	add	r0, r0, r6
   17f5c:	str	r0, [r1]
   17f60:	ldr	r0, [sl, #28]
   17f64:	ldr	r1, [sl, #32]
   17f68:	cmp	r0, r1
   17f6c:	bcc	17f8c <argp_help@@Base+0x1694>
   17f70:	mov	r0, sl
   17f74:	mov	r1, #1
   17f78:	bl	1cefc <argp_parse@@Base+0x2cb8>
   17f7c:	cmp	r0, #0
   17f80:	beq	17fa0 <argp_help@@Base+0x16a8>
   17f84:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17f88:	ldr	r0, [r0]
   17f8c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17f90:	add	r1, r0, #1
   17f94:	str	r1, [r2]
   17f98:	mov	r1, #10
   17f9c:	strb	r1, [r0]
   17fa0:	movw	r0, #62783	; 0xf53f
   17fa4:	movt	r0, #1
   17fa8:	cmp	r5, r0
   17fac:	beq	17d2c <argp_help@@Base+0x1434>
   17fb0:	mov	r0, r5
   17fb4:	bl	1b7d4 <argp_parse@@Base+0x1590>
   17fb8:	b	17d2c <argp_help@@Base+0x1434>
   17fbc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   17fc0:	mov	r0, r6
   17fc4:	bl	1af14 <argp_parse@@Base+0xcd0>
   17fc8:	ldr	r3, [r6, #20]
   17fcc:	movw	r1, #62783	; 0xf53f
   17fd0:	mov	r2, r0
   17fd4:	movw	r0, #5
   17fd8:	movt	r0, #512	; 0x200
   17fdc:	movt	r1, #1
   17fe0:	blx	r3
   17fe4:	mov	r5, r0
   17fe8:	cmp	r0, #0
   17fec:	bne	17eb4 <argp_help@@Base+0x15bc>
   17ff0:	b	17d2c <argp_help@@Base+0x1434>
   17ff4:	add	r2, r0, #112	; 0x70
   17ff8:	b	16eec <argp_help@@Base+0x5f4>

00017ffc <argp_state_help@@Base>:
   17ffc:	push	{r4, r5, fp, lr}
   18000:	add	fp, sp, #8
   18004:	sub	sp, sp, #8
   18008:	mov	r4, r2
   1800c:	mov	r2, r1
   18010:	cmp	r0, #0
   18014:	beq	18060 <argp_state_help@@Base+0x64>
   18018:	cmp	r2, #0
   1801c:	beq	18098 <argp_state_help@@Base+0x9c>
   18020:	ldr	r1, [r0, #16]
   18024:	mov	r5, r0
   18028:	ands	r0, r1, #2
   1802c:	bne	18098 <argp_state_help@@Base+0x9c>
   18030:	ldr	r3, [r5, #40]	; 0x28
   18034:	ldr	r0, [r5]
   18038:	and	r1, r1, #64	; 0x40
   1803c:	orr	r4, r4, r1, lsl #1
   18040:	mov	r1, r5
   18044:	str	r3, [sp]
   18048:	mov	r3, r4
   1804c:	bl	16924 <argp_help@@Base+0x2c>
   18050:	ldrb	r0, [r5, #16]
   18054:	tst	r0, #32
   18058:	beq	18088 <argp_state_help@@Base+0x8c>
   1805c:	b	18098 <argp_state_help@@Base+0x9c>
   18060:	cmp	r2, #0
   18064:	beq	18098 <argp_state_help@@Base+0x9c>
   18068:	movw	r0, #1488	; 0x5d0
   1806c:	mov	r1, #0
   18070:	mov	r3, r4
   18074:	movt	r0, #3
   18078:	ldr	r0, [r0]
   1807c:	str	r0, [sp]
   18080:	mov	r0, #0
   18084:	bl	16924 <argp_help@@Base+0x2c>
   18088:	tst	r4, #256	; 0x100
   1808c:	bne	180a0 <argp_state_help@@Base+0xa4>
   18090:	tst	r4, #512	; 0x200
   18094:	bne	180b0 <argp_state_help@@Base+0xb4>
   18098:	sub	sp, fp, #8
   1809c:	pop	{r4, r5, fp, pc}
   180a0:	movw	r0, #1464	; 0x5b8
   180a4:	movt	r0, #3
   180a8:	ldr	r0, [r0]
   180ac:	bl	11c14 <exit@plt>
   180b0:	mov	r0, #0
   180b4:	bl	11c14 <exit@plt>

000180b8 <argp_error@@Base>:
   180b8:	sub	sp, sp, #8
   180bc:	push	{r4, r5, r6, r7, fp, lr}
   180c0:	add	fp, sp, #16
   180c4:	sub	sp, sp, #8
   180c8:	mov	r6, r1
   180cc:	mov	r4, r0
   180d0:	cmp	r0, #0
   180d4:	str	r3, [fp, #12]
   180d8:	str	r2, [fp, #8]
   180dc:	beq	1810c <argp_error@@Base+0x54>
   180e0:	ldrb	r0, [r4, #16]
   180e4:	tst	r0, #2
   180e8:	bne	180fc <argp_error@@Base+0x44>
   180ec:	add	r0, r4, #44	; 0x2c
   180f0:	ldr	r5, [r0]
   180f4:	cmp	r5, #0
   180f8:	bne	18120 <argp_error@@Base+0x68>
   180fc:	sub	sp, fp, #16
   18100:	pop	{r4, r5, r6, r7, fp, lr}
   18104:	add	sp, sp, #8
   18108:	bx	lr
   1810c:	movw	r0, #1496	; 0x5d8
   18110:	movt	r0, #3
   18114:	ldr	r5, [r0]
   18118:	cmp	r5, #0
   1811c:	beq	180fc <argp_error@@Base+0x44>
   18120:	mov	r0, r5
   18124:	bl	11d58 <flockfile@plt>
   18128:	add	r0, fp, #8
   1812c:	cmp	r4, #0
   18130:	str	r0, [sp, #4]
   18134:	beq	18140 <argp_error@@Base+0x88>
   18138:	ldr	r0, [r4, #40]	; 0x28
   1813c:	b	1814c <argp_error@@Base+0x94>
   18140:	movw	r0, #1488	; 0x5d0
   18144:	movt	r0, #3
   18148:	ldr	r0, [r0]
   1814c:	mov	r1, r5
   18150:	bl	11980 <fputs_unlocked@plt>
   18154:	mov	r7, r5
   18158:	ldr	r0, [r7, #20]!
   1815c:	ldr	r1, [r7, #4]
   18160:	cmp	r0, r1
   18164:	bcs	181f0 <argp_error@@Base+0x138>
   18168:	add	r1, r0, #1
   1816c:	str	r1, [r7]
   18170:	mov	r1, #58	; 0x3a
   18174:	strb	r1, [r0]
   18178:	ldr	r0, [r5, #20]
   1817c:	ldr	r1, [r5, #24]
   18180:	cmp	r0, r1
   18184:	bcs	1820c <argp_error@@Base+0x154>
   18188:	add	r1, r0, #1
   1818c:	str	r1, [r7]
   18190:	mov	r1, #32
   18194:	strb	r1, [r0]
   18198:	ldr	r2, [sp, #4]
   1819c:	mov	r0, r5
   181a0:	mov	r1, r6
   181a4:	bl	11d34 <vfprintf@plt>
   181a8:	ldr	r0, [r5, #20]
   181ac:	ldr	r1, [r5, #24]
   181b0:	cmp	r0, r1
   181b4:	bcs	1821c <argp_error@@Base+0x164>
   181b8:	add	r1, r0, #1
   181bc:	str	r1, [r7]
   181c0:	mov	r1, #10
   181c4:	strb	r1, [r0]
   181c8:	mov	r0, r4
   181cc:	mov	r1, r5
   181d0:	mov	r2, #260	; 0x104
   181d4:	bl	17ffc <argp_state_help@@Base>
   181d8:	mov	r0, r5
   181dc:	bl	11b18 <funlockfile@plt>
   181e0:	sub	sp, fp, #16
   181e4:	pop	{r4, r5, r6, r7, fp, lr}
   181e8:	add	sp, sp, #8
   181ec:	bx	lr
   181f0:	mov	r0, r5
   181f4:	mov	r1, #58	; 0x3a
   181f8:	bl	11cf8 <__overflow@plt>
   181fc:	ldr	r0, [r5, #20]
   18200:	ldr	r1, [r5, #24]
   18204:	cmp	r0, r1
   18208:	bcc	18188 <argp_error@@Base+0xd0>
   1820c:	mov	r0, r5
   18210:	mov	r1, #32
   18214:	bl	11cf8 <__overflow@plt>
   18218:	b	18198 <argp_error@@Base+0xe0>
   1821c:	mov	r0, r5
   18220:	mov	r1, #10
   18224:	bl	11cf8 <__overflow@plt>
   18228:	b	181c8 <argp_error@@Base+0x110>

0001822c <argp_failure@@Base>:
   1822c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18230:	add	fp, sp, #24
   18234:	sub	sp, sp, #200	; 0xc8
   18238:	mov	r4, r3
   1823c:	mov	r9, r2
   18240:	mov	r8, r1
   18244:	mov	r5, r0
   18248:	cmp	r0, #0
   1824c:	beq	18270 <argp_failure@@Base+0x44>
   18250:	ldrb	r0, [r5, #16]
   18254:	tst	r0, #2
   18258:	bne	18410 <argp_failure@@Base+0x1e4>
   1825c:	add	r0, r5, #44	; 0x2c
   18260:	ldr	r6, [r0]
   18264:	cmp	r6, #0
   18268:	bne	18284 <argp_failure@@Base+0x58>
   1826c:	b	18410 <argp_failure@@Base+0x1e4>
   18270:	movw	r0, #1496	; 0x5d8
   18274:	movt	r0, #3
   18278:	ldr	r6, [r0]
   1827c:	cmp	r6, #0
   18280:	beq	18410 <argp_failure@@Base+0x1e4>
   18284:	mov	r0, r6
   18288:	bl	11d58 <flockfile@plt>
   1828c:	movw	r0, #1488	; 0x5d0
   18290:	cmp	r5, #0
   18294:	mov	r1, r6
   18298:	movt	r0, #3
   1829c:	addne	r0, r5, #40	; 0x28
   182a0:	ldr	r0, [r0]
   182a4:	bl	11980 <fputs_unlocked@plt>
   182a8:	cmp	r4, #0
   182ac:	beq	18308 <argp_failure@@Base+0xdc>
   182b0:	add	r0, fp, #8
   182b4:	str	r0, [sp]
   182b8:	ldr	r0, [r6, #20]
   182bc:	ldr	r1, [r6, #24]
   182c0:	cmp	r0, r1
   182c4:	bcs	18418 <argp_failure@@Base+0x1ec>
   182c8:	add	r1, r0, #1
   182cc:	str	r1, [r6, #20]
   182d0:	mov	r1, #58	; 0x3a
   182d4:	strb	r1, [r0]
   182d8:	ldr	r0, [r6, #20]
   182dc:	ldr	r1, [r6, #24]
   182e0:	cmp	r0, r1
   182e4:	bcs	18434 <argp_failure@@Base+0x208>
   182e8:	add	r1, r0, #1
   182ec:	str	r1, [r6, #20]
   182f0:	mov	r1, #32
   182f4:	strb	r1, [r0]
   182f8:	ldr	r2, [sp]
   182fc:	mov	r0, r6
   18300:	mov	r1, r4
   18304:	bl	11d34 <vfprintf@plt>
   18308:	cmp	r9, #0
   1830c:	beq	183dc <argp_failure@@Base+0x1b0>
   18310:	mov	r4, r6
   18314:	ldr	r0, [r4, #20]!
   18318:	mov	r7, r4
   1831c:	ldr	r1, [r7, #4]!
   18320:	cmp	r0, r1
   18324:	bcs	18444 <argp_failure@@Base+0x218>
   18328:	add	r1, r0, #1
   1832c:	str	r1, [r4]
   18330:	mov	r1, #58	; 0x3a
   18334:	strb	r1, [r0]
   18338:	ldr	r0, [r4]
   1833c:	ldr	r1, [r7]
   18340:	cmp	r0, r1
   18344:	bcs	18460 <argp_failure@@Base+0x234>
   18348:	add	r1, r0, #1
   1834c:	str	r1, [r4]
   18350:	mov	r1, #32
   18354:	strb	r1, [r0]
   18358:	mov	r1, sp
   1835c:	mov	r0, r9
   18360:	mov	r2, #200	; 0xc8
   18364:	bl	11c68 <strerror_r@plt>
   18368:	cmp	r0, #0
   1836c:	bne	1838c <argp_failure@@Base+0x160>
   18370:	mov	r0, r9
   18374:	bl	11bcc <strerror@plt>
   18378:	mov	r1, r0
   1837c:	movw	r0, #62158	; 0xf2ce
   18380:	movt	r0, #1
   18384:	cmp	r1, #0
   18388:	movne	r0, r1
   1838c:	mov	r1, r6
   18390:	bl	11980 <fputs_unlocked@plt>
   18394:	ldr	r0, [r4]
   18398:	ldr	r1, [r7]
   1839c:	cmp	r0, r1
   183a0:	bcs	183f4 <argp_failure@@Base+0x1c8>
   183a4:	add	r1, r0, #1
   183a8:	str	r1, [r4]
   183ac:	mov	r1, #10
   183b0:	strb	r1, [r0]
   183b4:	mov	r0, r6
   183b8:	bl	11b18 <funlockfile@plt>
   183bc:	cmp	r8, #0
   183c0:	beq	18410 <argp_failure@@Base+0x1e4>
   183c4:	cmp	r5, #0
   183c8:	ldrbne	r0, [r5, #16]
   183cc:	tstne	r0, #32
   183d0:	bne	18410 <argp_failure@@Base+0x1e4>
   183d4:	mov	r0, r8
   183d8:	bl	11c14 <exit@plt>
   183dc:	add	r7, r6, #24
   183e0:	add	r4, r6, #20
   183e4:	ldr	r0, [r4]
   183e8:	ldr	r1, [r7]
   183ec:	cmp	r0, r1
   183f0:	bcc	183a4 <argp_failure@@Base+0x178>
   183f4:	mov	r0, r6
   183f8:	mov	r1, #10
   183fc:	bl	11cf8 <__overflow@plt>
   18400:	mov	r0, r6
   18404:	bl	11b18 <funlockfile@plt>
   18408:	cmp	r8, #0
   1840c:	bne	183c4 <argp_failure@@Base+0x198>
   18410:	sub	sp, fp, #24
   18414:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18418:	mov	r0, r6
   1841c:	mov	r1, #58	; 0x3a
   18420:	bl	11cf8 <__overflow@plt>
   18424:	ldr	r0, [r6, #20]
   18428:	ldr	r1, [r6, #24]
   1842c:	cmp	r0, r1
   18430:	bcc	182e8 <argp_failure@@Base+0xbc>
   18434:	mov	r0, r6
   18438:	mov	r1, #32
   1843c:	bl	11cf8 <__overflow@plt>
   18440:	b	182f8 <argp_failure@@Base+0xcc>
   18444:	mov	r0, r6
   18448:	mov	r1, #58	; 0x3a
   1844c:	bl	11cf8 <__overflow@plt>
   18450:	ldr	r0, [r4]
   18454:	ldr	r1, [r7]
   18458:	cmp	r0, r1
   1845c:	bcc	18348 <argp_failure@@Base+0x11c>
   18460:	mov	r0, r6
   18464:	mov	r1, #32
   18468:	bl	11cf8 <__overflow@plt>
   1846c:	b	18358 <argp_failure@@Base+0x12c>
   18470:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18474:	add	fp, sp, #28
   18478:	sub	sp, sp, #52	; 0x34
   1847c:	ldr	r4, [r0]
   18480:	ldr	r7, [r0, #16]
   18484:	mov	r8, r0
   18488:	mov	r0, #16
   1848c:	mov	sl, r1
   18490:	bl	1c80c <argp_parse@@Base+0x25c8>
   18494:	cmp	r0, #0
   18498:	beq	18b48 <argp_failure@@Base+0x91c>
   1849c:	mov	r9, r0
   184a0:	mov	r0, #0
   184a4:	cmp	r4, #0
   184a8:	str	r8, [sp, #40]	; 0x28
   184ac:	mov	r1, r9
   184b0:	str	r9, [fp, #-32]	; 0xffffffe0
   184b4:	str	r0, [r1, #12]!
   184b8:	str	r1, [sp, #28]
   184bc:	str	r0, [r1, #-8]
   184c0:	beq	18730 <argp_failure@@Base+0x504>
   184c4:	ldrb	r0, [r4, #12]
   184c8:	str	r7, [sp, #16]
   184cc:	tst	r0, #4
   184d0:	bne	18b68 <argp_failure@@Base+0x93c>
   184d4:	add	r7, r4, #12
   184d8:	mov	r6, #0
   184dc:	mov	r8, #0
   184e0:	ldr	r5, [r7, #-8]
   184e4:	cmp	r5, #0
   184e8:	bne	18524 <argp_failure@@Base+0x2f8>
   184ec:	b	18500 <argp_failure@@Base+0x2d4>
   184f0:	add	r7, r7, #24
   184f4:	ldr	r5, [r7, #-8]
   184f8:	cmp	r5, #0
   184fc:	bne	18524 <argp_failure@@Base+0x2f8>
   18500:	ldr	r0, [r7, #-12]
   18504:	cmp	r0, #0
   18508:	bne	18524 <argp_failure@@Base+0x2f8>
   1850c:	ldr	r0, [r7, #4]
   18510:	cmp	r0, #0
   18514:	bne	18524 <argp_failure@@Base+0x2f8>
   18518:	ldr	r0, [r7, #8]
   1851c:	cmp	r0, #0
   18520:	beq	18564 <argp_failure@@Base+0x338>
   18524:	ldr	r0, [r7]
   18528:	sub	r1, r5, #1
   1852c:	tst	r0, #4
   18530:	addeq	r6, r6, #1
   18534:	streq	r6, [r9, #4]
   18538:	cmp	r1, #254	; 0xfe
   1853c:	bhi	184f0 <argp_failure@@Base+0x2c4>
   18540:	ands	r0, r0, #8
   18544:	bne	184f0 <argp_failure@@Base+0x2c4>
   18548:	bl	11bfc <__ctype_b_loc@plt>
   1854c:	ldr	r0, [r0]
   18550:	add	r0, r0, r5, lsl #1
   18554:	ldrb	r0, [r0, #1]
   18558:	tst	r0, #64	; 0x40
   1855c:	addne	r8, r8, #1
   18560:	b	184f0 <argp_failure@@Base+0x2c4>
   18564:	rsb	r0, r6, r6, lsl #3
   18568:	lsl	r0, r0, #2
   1856c:	bl	1c80c <argp_parse@@Base+0x25c8>
   18570:	mov	r7, r0
   18574:	str	r0, [r9]
   18578:	add	r0, r8, #1
   1857c:	bl	1c80c <argp_parse@@Base+0x25c8>
   18580:	cmp	r7, #0
   18584:	str	r0, [r9, #8]
   18588:	movne	r5, r0
   1858c:	cmpne	r0, #0
   18590:	bne	185b4 <argp_failure@@Base+0x388>
   18594:	movw	r0, #62563	; 0xf463
   18598:	movw	r1, #62471	; 0xf407
   1859c:	movw	r3, #62483	; 0xf413
   185a0:	movw	r2, #474	; 0x1da
   185a4:	movt	r0, #1
   185a8:	movt	r1, #1
   185ac:	movt	r3, #1
   185b0:	bl	11e18 <__assert_fail@plt>
   185b4:	movw	r0, #37450	; 0x924a
   185b8:	movt	r0, #2340	; 0x924
   185bc:	cmp	r6, r0
   185c0:	bcs	18b88 <argp_failure@@Base+0x95c>
   185c4:	mov	r8, #0
   185c8:	mov	r0, #0
   185cc:	ldr	r1, [r4, #4]
   185d0:	cmp	r1, #0
   185d4:	bne	18618 <argp_failure@@Base+0x3ec>
   185d8:	b	185f4 <argp_failure@@Base+0x3c8>
   185dc:	mov	r4, r0
   185e0:	add	r7, r7, #28
   185e4:	mov	r0, r9
   185e8:	ldr	r1, [r4, #4]
   185ec:	cmp	r1, #0
   185f0:	bne	18618 <argp_failure@@Base+0x3ec>
   185f4:	ldr	r2, [r4]
   185f8:	cmp	r2, #0
   185fc:	bne	18618 <argp_failure@@Base+0x3ec>
   18600:	ldr	r2, [r4, #16]
   18604:	cmp	r2, #0
   18608:	bne	18618 <argp_failure@@Base+0x3ec>
   1860c:	ldr	r2, [r4, #20]
   18610:	cmp	r2, #0
   18614:	beq	1871c <argp_failure@@Base+0x4f0>
   18618:	stm	r7, {r4, r8}
   1861c:	str	r5, [r7, #8]
   18620:	ldr	r9, [r4, #20]
   18624:	cmp	r9, #0
   18628:	bne	18644 <argp_failure@@Base+0x418>
   1862c:	ldr	r2, [r4]
   18630:	cmp	r2, #0
   18634:	bne	18640 <argp_failure@@Base+0x414>
   18638:	cmp	r1, #0
   1863c:	addeq	r0, r0, #1
   18640:	mov	r9, r0
   18644:	ldr	r0, [sp, #40]	; 0x28
   18648:	mov	r1, #0
   1864c:	str	r9, [r7, #12]
   18650:	str	sl, [r7, #16]
   18654:	str	r0, [r7, #20]
   18658:	b	18664 <argp_failure@@Base+0x438>
   1865c:	ldr	r1, [r7, #4]
   18660:	mov	r4, r0
   18664:	add	r0, r1, #1
   18668:	str	r0, [r7, #4]
   1866c:	ldrb	r0, [r4, #12]
   18670:	tst	r0, #8
   18674:	bne	186c0 <argp_failure@@Base+0x494>
   18678:	ldr	r6, [r4, #4]
   1867c:	sub	r0, r6, #1
   18680:	cmp	r0, #254	; 0xfe
   18684:	bhi	186c0 <argp_failure@@Base+0x494>
   18688:	bl	11bfc <__ctype_b_loc@plt>
   1868c:	ldr	r0, [r0]
   18690:	add	r0, r0, r6, lsl #1
   18694:	ldrb	r0, [r0, #1]
   18698:	tst	r0, #64	; 0x40
   1869c:	beq	186c0 <argp_failure@@Base+0x494>
   186a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   186a4:	ldr	r0, [r0, #8]
   186a8:	cmp	r0, r5
   186ac:	bcs	186f8 <argp_failure@@Base+0x4cc>
   186b0:	ldrb	r1, [r0], #1
   186b4:	uxtb	r2, r6
   186b8:	cmp	r1, r2
   186bc:	bne	186a8 <argp_failure@@Base+0x47c>
   186c0:	ldr	r1, [r4, #28]
   186c4:	add	r0, r4, #24
   186c8:	cmp	r1, #0
   186cc:	bne	1870c <argp_failure@@Base+0x4e0>
   186d0:	ldr	r1, [r0]
   186d4:	cmp	r1, #0
   186d8:	bne	1870c <argp_failure@@Base+0x4e0>
   186dc:	ldr	r1, [r4, #40]	; 0x28
   186e0:	cmp	r1, #0
   186e4:	bne	1870c <argp_failure@@Base+0x4e0>
   186e8:	ldr	r1, [r4, #44]	; 0x2c
   186ec:	cmp	r1, #0
   186f0:	bne	1870c <argp_failure@@Base+0x4e0>
   186f4:	b	185dc <argp_failure@@Base+0x3b0>
   186f8:	strb	r6, [r5], #1
   186fc:	ldr	r1, [r4, #28]
   18700:	add	r0, r4, #24
   18704:	cmp	r1, #0
   18708:	beq	186d0 <argp_failure@@Base+0x4a4>
   1870c:	ldrb	r1, [r4, #36]	; 0x24
   18710:	tst	r1, #4
   18714:	bne	1865c <argp_failure@@Base+0x430>
   18718:	b	185dc <argp_failure@@Base+0x3b0>
   1871c:	ldr	r8, [sp, #40]	; 0x28
   18720:	ldr	r7, [sp, #16]
   18724:	ldr	r9, [fp, #-32]	; 0xffffffe0
   18728:	mov	r0, #0
   1872c:	strb	r0, [r5]
   18730:	cmp	r7, #0
   18734:	ldrne	r0, [r7]
   18738:	cmpne	r0, #0
   1873c:	bne	1874c <argp_failure@@Base+0x520>
   18740:	mov	r0, r9
   18744:	sub	sp, fp, #28
   18748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1874c:	str	sl, [sp, #4]
   18750:	ldr	r4, [r7, #12]
   18754:	cmp	r4, #0
   18758:	beq	18764 <argp_failure@@Base+0x538>
   1875c:	ldr	r5, [r7, #8]
   18760:	b	18774 <argp_failure@@Base+0x548>
   18764:	ldr	r5, [r7, #8]
   18768:	mov	r1, sl
   1876c:	cmp	r5, #0
   18770:	beq	187c4 <argp_failure@@Base+0x598>
   18774:	ldr	r6, [r8, #16]
   18778:	mov	r0, #28
   1877c:	bl	1c80c <argp_parse@@Base+0x25c8>
   18780:	mov	r1, r0
   18784:	cmp	r0, #0
   18788:	beq	187c4 <argp_failure@@Base+0x598>
   1878c:	sub	r0, r7, r6
   18790:	str	r5, [r1]
   18794:	cmp	sl, #0
   18798:	asr	r0, r0, #4
   1879c:	stmib	r1, {r0, r4, sl}
   187a0:	str	r8, [r1, #16]
   187a4:	ldr	r3, [sp, #28]
   187a8:	ldrne	r0, [sl, #20]
   187ac:	ldr	r2, [r3]
   187b0:	addne	r0, r0, #1
   187b4:	str	r1, [r3]
   187b8:	moveq	r0, #0
   187bc:	str	r0, [r1, #20]
   187c0:	str	r2, [r1, #24]
   187c4:	ldr	r0, [r7]
   187c8:	bl	18470 <argp_failure@@Base+0x244>
   187cc:	ldr	r1, [sp, #28]
   187d0:	mov	r6, r0
   187d4:	ldr	r2, [r1]
   187d8:	mov	r0, r1
   187dc:	add	r1, r2, #24
   187e0:	cmp	r2, #0
   187e4:	bne	187d4 <argp_failure@@Base+0x5a8>
   187e8:	ldr	r1, [r6, #12]
   187ec:	str	r1, [r0]
   187f0:	mov	r0, #0
   187f4:	str	r0, [r6, #12]
   187f8:	ldr	r0, [r6, #4]
   187fc:	cmp	r0, #0
   18800:	beq	18b10 <argp_failure@@Base+0x8e4>
   18804:	ldr	r4, [r9, #4]
   18808:	cmp	r4, #0
   1880c:	beq	189d0 <argp_failure@@Base+0x7a4>
   18810:	add	r0, r4, r0
   18814:	str	r7, [sp, #16]
   18818:	str	r0, [sp, #20]
   1881c:	rsb	r0, r0, r0, lsl #3
   18820:	lsl	r0, r0, #2
   18824:	bl	1c80c <argp_parse@@Base+0x25c8>
   18828:	ldr	r8, [r9, #8]
   1882c:	mov	r5, r0
   18830:	mov	r0, r8
   18834:	bl	11c20 <strlen@plt>
   18838:	mov	r7, r0
   1883c:	ldr	r0, [r6, #8]
   18840:	bl	11c20 <strlen@plt>
   18844:	add	r0, r7, r0
   18848:	str	r7, [fp, #-36]	; 0xffffffdc
   1884c:	add	r0, r0, #1
   18850:	bl	1c80c <argp_parse@@Base+0x25c8>
   18854:	cmp	r5, #0
   18858:	str	r5, [sp, #24]
   1885c:	cmpne	r0, #0
   18860:	beq	18b28 <argp_failure@@Base+0x8fc>
   18864:	ldr	r1, [sp, #20]
   18868:	str	r0, [sp, #36]	; 0x24
   1886c:	movw	r0, #37450	; 0x924a
   18870:	movt	r0, #2340	; 0x924
   18874:	cmp	r1, r0
   18878:	bcs	18ba8 <argp_failure@@Base+0x97c>
   1887c:	ldr	r7, [sp, #24]
   18880:	ldr	r1, [r9]
   18884:	rsb	r5, r4, r4, lsl #3
   18888:	lsl	r2, r5, #2
   1888c:	str	r2, [sp, #8]
   18890:	mov	r0, r7
   18894:	bl	11a58 <memcpy@plt>
   18898:	ldm	r6, {r1, r2}
   1889c:	add	r0, r7, r5, lsl #2
   188a0:	rsb	r2, r2, r2, lsl #3
   188a4:	lsl	r2, r2, #2
   188a8:	bl	11a58 <memcpy@plt>
   188ac:	ldr	r5, [sp, #36]	; 0x24
   188b0:	ldr	sl, [fp, #-36]	; 0xffffffdc
   188b4:	mov	r1, r8
   188b8:	mov	r0, r5
   188bc:	mov	r2, sl
   188c0:	bl	11a58 <memcpy@plt>
   188c4:	add	r0, r7, #8
   188c8:	ldr	r1, [r0]
   188cc:	subs	r4, r4, #1
   188d0:	sub	r1, r1, r8
   188d4:	add	r1, r5, r1
   188d8:	str	r1, [r0], #28
   188dc:	bne	188c8 <argp_failure@@Base+0x69c>
   188e0:	ldr	r0, [r6, #4]
   188e4:	add	r8, r5, sl
   188e8:	str	r6, [sp, #12]
   188ec:	cmp	r0, #0
   188f0:	beq	189ec <argp_failure@@Base+0x7c0>
   188f4:	str	r0, [sp, #32]
   188f8:	ldr	r0, [sp, #24]
   188fc:	ldr	r1, [sp, #8]
   18900:	add	r0, r0, r1
   18904:	mov	r1, sl
   18908:	ldr	sl, [r6, #8]
   1890c:	cmp	r1, #0
   18910:	ble	189f4 <argp_failure@@Base+0x7c8>
   18914:	str	r8, [fp, #-36]	; 0xffffffdc
   18918:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1891c:	str	r1, [r0, #8]
   18920:	ldr	r6, [r0, #4]
   18924:	cmp	r6, #0
   18928:	beq	189ac <argp_failure@@Base+0x780>
   1892c:	ldr	r9, [r0]
   18930:	mov	r7, r0
   18934:	ldrb	r0, [r9, #12]
   18938:	tst	r0, #8
   1893c:	bne	1899c <argp_failure@@Base+0x770>
   18940:	ldr	r5, [r9, #4]
   18944:	sub	r0, r5, #1
   18948:	cmp	r0, #254	; 0xfe
   1894c:	bhi	1899c <argp_failure@@Base+0x770>
   18950:	ldrb	r4, [sl]
   18954:	bl	11bfc <__ctype_b_loc@plt>
   18958:	cmp	r5, r4
   1895c:	bne	1899c <argp_failure@@Base+0x770>
   18960:	ldr	r0, [r0]
   18964:	add	r0, r0, r5, lsl #1
   18968:	ldrh	r0, [r0]
   1896c:	ands	r0, r0, #16384	; 0x4000
   18970:	ldr	r0, [sp, #36]	; 0x24
   18974:	beq	1899c <argp_failure@@Base+0x770>
   18978:	ldrb	r1, [r0], #1
   1897c:	cmp	r1, r4
   18980:	beq	18998 <argp_failure@@Base+0x76c>
   18984:	cmp	r0, r8
   18988:	bcc	18978 <argp_failure@@Base+0x74c>
   1898c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18990:	strb	r4, [r0], #1
   18994:	str	r0, [fp, #-36]	; 0xffffffdc
   18998:	add	sl, sl, #1
   1899c:	subs	r6, r6, #1
   189a0:	add	r9, r9, #24
   189a4:	bne	18934 <argp_failure@@Base+0x708>
   189a8:	b	189b0 <argp_failure@@Base+0x784>
   189ac:	mov	r7, r0
   189b0:	ldr	r0, [sp, #32]
   189b4:	ldr	r9, [fp, #-32]	; 0xffffffe0
   189b8:	subs	r0, r0, #1
   189bc:	str	r0, [sp, #32]
   189c0:	mov	r0, r7
   189c4:	add	r0, r7, #28
   189c8:	bne	18918 <argp_failure@@Base+0x6ec>
   189cc:	b	18a90 <argp_failure@@Base+0x864>
   189d0:	ldr	r1, [r6]
   189d4:	ldr	r2, [r6, #8]
   189d8:	str	r1, [r9]
   189dc:	stmib	r9, {r0, r2}
   189e0:	mov	r0, #0
   189e4:	str	r0, [r6, #4]
   189e8:	b	18b10 <argp_failure@@Base+0x8e4>
   189ec:	str	r8, [fp, #-36]	; 0xffffffdc
   189f0:	b	18a90 <argp_failure@@Base+0x864>
   189f4:	str	r8, [fp, #-36]	; 0xffffffdc
   189f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   189fc:	str	r1, [r0, #8]
   18a00:	ldr	r6, [r0, #4]
   18a04:	cmp	r6, #0
   18a08:	beq	18a74 <argp_failure@@Base+0x848>
   18a0c:	mov	r8, r0
   18a10:	ldr	r0, [r0]
   18a14:	add	r4, r0, #12
   18a18:	ldrb	r0, [r4]
   18a1c:	tst	r0, #8
   18a20:	bne	18a64 <argp_failure@@Base+0x838>
   18a24:	ldr	r7, [r4, #-8]
   18a28:	sub	r0, r7, #1
   18a2c:	cmp	r0, #254	; 0xfe
   18a30:	bhi	18a64 <argp_failure@@Base+0x838>
   18a34:	ldrb	r5, [sl]
   18a38:	bl	11bfc <__ctype_b_loc@plt>
   18a3c:	cmp	r7, r5
   18a40:	bne	18a64 <argp_failure@@Base+0x838>
   18a44:	ldr	r0, [r0]
   18a48:	add	r0, r0, r7, lsl #1
   18a4c:	ldrh	r0, [r0]
   18a50:	ands	r0, r0, #16384	; 0x4000
   18a54:	ldrne	r0, [fp, #-36]	; 0xffffffdc
   18a58:	addne	sl, sl, #1
   18a5c:	strbne	r5, [r0], #1
   18a60:	strne	r0, [fp, #-36]	; 0xffffffdc
   18a64:	add	r4, r4, #24
   18a68:	subs	r6, r6, #1
   18a6c:	bne	18a18 <argp_failure@@Base+0x7ec>
   18a70:	b	18a78 <argp_failure@@Base+0x84c>
   18a74:	mov	r8, r0
   18a78:	ldr	r0, [sp, #32]
   18a7c:	subs	r0, r0, #1
   18a80:	str	r0, [sp, #32]
   18a84:	mov	r0, r8
   18a88:	add	r0, r8, #28
   18a8c:	bne	189f8 <argp_failure@@Base+0x7cc>
   18a90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18a94:	mov	r0, #0
   18a98:	strb	r0, [r1]
   18a9c:	ldr	r0, [r9]
   18aa0:	bl	1b7d4 <argp_parse@@Base+0x1590>
   18aa4:	ldr	r0, [r9, #8]
   18aa8:	bl	1b7d4 <argp_parse@@Base+0x1590>
   18aac:	ldr	r0, [sp, #24]
   18ab0:	ldr	r6, [sp, #12]
   18ab4:	str	r0, [r9]
   18ab8:	ldr	r0, [sp, #20]
   18abc:	str	r0, [r9, #4]
   18ac0:	ldr	r0, [sp, #36]	; 0x24
   18ac4:	str	r0, [r9, #8]
   18ac8:	ldr	r0, [r6, #12]
   18acc:	cmp	r0, #0
   18ad0:	beq	18ae8 <argp_failure@@Base+0x8bc>
   18ad4:	ldr	r4, [r0, #24]
   18ad8:	bl	1b7d4 <argp_parse@@Base+0x1590>
   18adc:	cmp	r4, #0
   18ae0:	mov	r0, r4
   18ae4:	bne	18ad4 <argp_failure@@Base+0x8a8>
   18ae8:	ldr	r0, [r6, #4]
   18aec:	ldr	sl, [sp, #4]
   18af0:	ldr	r8, [sp, #40]	; 0x28
   18af4:	ldr	r7, [sp, #16]
   18af8:	cmp	r0, #0
   18afc:	beq	18b10 <argp_failure@@Base+0x8e4>
   18b00:	ldr	r0, [r6]
   18b04:	bl	1b7d4 <argp_parse@@Base+0x1590>
   18b08:	ldr	r0, [r6, #8]
   18b0c:	bl	1b7d4 <argp_parse@@Base+0x1590>
   18b10:	mov	r0, r6
   18b14:	bl	1b7d4 <argp_parse@@Base+0x1590>
   18b18:	ldr	r0, [r7, #16]!
   18b1c:	cmp	r0, #0
   18b20:	bne	18750 <argp_failure@@Base+0x524>
   18b24:	b	18740 <argp_failure@@Base+0x514>
   18b28:	movw	r0, #62655	; 0xf4bf
   18b2c:	movw	r1, #62471	; 0xf407
   18b30:	movw	r3, #62680	; 0xf4d8
   18b34:	movw	r2, #970	; 0x3ca
   18b38:	movt	r0, #1
   18b3c:	movt	r1, #1
   18b40:	movt	r3, #1
   18b44:	bl	11e18 <__assert_fail@plt>
   18b48:	movw	r0, #62467	; 0xf403
   18b4c:	movw	r1, #62471	; 0xf407
   18b50:	movw	r3, #62483	; 0xf413
   18b54:	movw	r2, #450	; 0x1c2
   18b58:	movt	r0, #1
   18b5c:	movt	r1, #1
   18b60:	movt	r3, #1
   18b64:	bl	11e18 <__assert_fail@plt>
   18b68:	movw	r0, #62547	; 0xf453
   18b6c:	movw	r1, #62471	; 0xf407
   18b70:	movw	r3, #62483	; 0xf413
   18b74:	mov	r2, #460	; 0x1cc
   18b78:	movt	r0, #1
   18b7c:	movt	r1, #1
   18b80:	movt	r3, #1
   18b84:	bl	11e18 <__assert_fail@plt>
   18b88:	movw	r0, #62598	; 0xf486
   18b8c:	movw	r1, #62471	; 0xf407
   18b90:	movw	r3, #62483	; 0xf413
   18b94:	mov	r2, #476	; 0x1dc
   18b98:	movt	r0, #1
   18b9c:	movt	r1, #1
   18ba0:	movt	r3, #1
   18ba4:	bl	11e18 <__assert_fail@plt>
   18ba8:	movw	r0, #62603	; 0xf48b
   18bac:	movw	r1, #62471	; 0xf407
   18bb0:	movw	r3, #62680	; 0xf4d8
   18bb4:	mov	r2, #972	; 0x3cc
   18bb8:	movt	r0, #1
   18bbc:	movt	r1, #1
   18bc0:	movt	r3, #1
   18bc4:	bl	11e18 <__assert_fail@plt>
   18bc8:	push	{r4, r5, fp, lr}
   18bcc:	add	fp, sp, #8
   18bd0:	mov	r5, r1
   18bd4:	cmp	r0, #0
   18bd8:	beq	18c04 <argp_failure@@Base+0x9d8>
   18bdc:	mov	r1, #10
   18be0:	bl	11c38 <strchr@plt>
   18be4:	mov	r4, r0
   18be8:	cmp	r0, #0
   18bec:	movwne	r4, #1
   18bf0:	cmp	r5, #0
   18bf4:	ldrne	r1, [r5]
   18bf8:	cmpne	r1, #0
   18bfc:	beq	18c38 <argp_failure@@Base+0xa0c>
   18c00:	b	18c18 <argp_failure@@Base+0x9ec>
   18c04:	mov	r4, #0
   18c08:	cmp	r5, #0
   18c0c:	ldrne	r1, [r5]
   18c10:	cmpne	r1, #0
   18c14:	beq	18c38 <argp_failure@@Base+0xa0c>
   18c18:	add	r5, r5, #16
   18c1c:	ldr	r0, [r1, #8]
   18c20:	ldr	r1, [r1, #16]
   18c24:	bl	18bc8 <argp_failure@@Base+0x99c>
   18c28:	ldr	r1, [r5], #16
   18c2c:	add	r4, r0, r4
   18c30:	cmp	r1, #0
   18c34:	bne	18c1c <argp_failure@@Base+0x9f0>
   18c38:	mov	r0, r4
   18c3c:	pop	{r4, r5, fp, pc}
   18c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c44:	add	fp, sp, #28
   18c48:	sub	sp, sp, #28
   18c4c:	ldr	r4, [r0, #4]
   18c50:	str	r1, [fp, #-40]	; 0xffffffd8
   18c54:	cmp	r4, #0
   18c58:	beq	18ff4 <argp_failure@@Base+0xdc8>
   18c5c:	mov	r5, r0
   18c60:	ldr	r0, [r0, #8]
   18c64:	bl	11c20 <strlen@plt>
   18c68:	add	r0, r0, #8
   18c6c:	bic	r0, r0, #7
   18c70:	sub	r0, sp, r0
   18c74:	mov	sp, r0
   18c78:	ldr	r7, [r5]
   18c7c:	str	r0, [fp, #-52]	; 0xffffffcc
   18c80:	str	r0, [fp, #-48]	; 0xffffffd0
   18c84:	str	r5, [fp, #-44]	; 0xffffffd4
   18c88:	ldr	r6, [r7, #4]
   18c8c:	str	r4, [fp, #-36]	; 0xffffffdc
   18c90:	cmp	r6, #0
   18c94:	beq	18d38 <argp_failure@@Base+0xb0c>
   18c98:	ldr	r4, [r7]
   18c9c:	ldr	r5, [r7, #8]
   18ca0:	mov	sl, r4
   18ca4:	b	18cd0 <argp_failure@@Base+0xaa4>
   18ca8:	ldr	r0, [r4, #8]
   18cac:	cmp	r0, #0
   18cb0:	bne	18d28 <argp_failure@@Base+0xafc>
   18cb4:	ldr	r0, [r4, #12]
   18cb8:	orr	r0, r0, r8
   18cbc:	tst	r0, #16
   18cc0:	ldreq	r0, [fp, #-48]	; 0xffffffd0
   18cc4:	strbeq	r9, [r0], #1
   18cc8:	streq	r0, [fp, #-48]	; 0xffffffd0
   18ccc:	b	18d28 <argp_failure@@Base+0xafc>
   18cd0:	ldr	r8, [sl, #12]
   18cd4:	tst	r8, #8
   18cd8:	bne	18d2c <argp_failure@@Base+0xb00>
   18cdc:	ldr	r9, [sl, #4]
   18ce0:	sub	r0, r9, #1
   18ce4:	cmp	r0, #254	; 0xfe
   18ce8:	bhi	18d2c <argp_failure@@Base+0xb00>
   18cec:	bl	11bfc <__ctype_b_loc@plt>
   18cf0:	ldr	r0, [r0]
   18cf4:	add	r0, r0, r9, lsl #1
   18cf8:	ldrb	r0, [r0, #1]
   18cfc:	tst	r0, #64	; 0x40
   18d00:	beq	18d2c <argp_failure@@Base+0xb00>
   18d04:	ldrb	r0, [r5]
   18d08:	cmp	r9, r0
   18d0c:	bne	18d2c <argp_failure@@Base+0xb00>
   18d10:	tst	r8, #4
   18d14:	moveq	r4, sl
   18d18:	tst	r8, #2
   18d1c:	ldreq	r0, [sl, #8]
   18d20:	cmpeq	r0, #0
   18d24:	beq	18ca8 <argp_failure@@Base+0xa7c>
   18d28:	add	r5, r5, #1
   18d2c:	subs	r6, r6, #1
   18d30:	add	sl, sl, #24
   18d34:	bne	18cd0 <argp_failure@@Base+0xaa4>
   18d38:	ldr	r4, [fp, #-36]	; 0xffffffdc
   18d3c:	ldr	r6, [fp, #-44]	; 0xffffffd4
   18d40:	add	r7, r7, #28
   18d44:	subs	r4, r4, #1
   18d48:	bne	18c88 <argp_failure@@Base+0xa5c>
   18d4c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18d50:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18d54:	cmp	r1, r2
   18d58:	bls	18d74 <argp_failure@@Base+0xb48>
   18d5c:	mov	r0, #0
   18d60:	strb	r0, [r1]
   18d64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18d68:	movw	r1, #62724	; 0xf504
   18d6c:	movt	r1, #1
   18d70:	bl	1cfe8 <argp_parse@@Base+0x2da4>
   18d74:	ldr	r5, [r6, #4]
   18d78:	cmp	r5, #0
   18d7c:	beq	18ff4 <argp_failure@@Base+0xdc8>
   18d80:	ldr	r8, [r6]
   18d84:	ldr	r9, [r8, #4]
   18d88:	cmp	r9, #0
   18d8c:	beq	18f20 <argp_failure@@Base+0xcf4>
   18d90:	ldr	sl, [r8]
   18d94:	ldr	r4, [r8, #8]
   18d98:	str	sl, [fp, #-36]	; 0xffffffdc
   18d9c:	ldr	r6, [sl, #12]
   18da0:	tst	r6, #8
   18da4:	bne	18f14 <argp_failure@@Base+0xce8>
   18da8:	ldr	r7, [sl, #4]
   18dac:	sub	r0, r7, #1
   18db0:	cmp	r0, #254	; 0xfe
   18db4:	bhi	18f14 <argp_failure@@Base+0xce8>
   18db8:	bl	11bfc <__ctype_b_loc@plt>
   18dbc:	ldr	r0, [r0]
   18dc0:	add	r0, r0, r7, lsl #1
   18dc4:	ldrb	r0, [r0, #1]
   18dc8:	tst	r0, #64	; 0x40
   18dcc:	beq	18f14 <argp_failure@@Base+0xce8>
   18dd0:	ldrb	r0, [r4]
   18dd4:	cmp	r7, r0
   18dd8:	bne	18f14 <argp_failure@@Base+0xce8>
   18ddc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18de0:	tst	r6, #4
   18de4:	moveq	r0, sl
   18de8:	tst	r6, #2
   18dec:	str	r0, [fp, #-36]	; 0xffffffdc
   18df0:	bne	18f10 <argp_failure@@Base+0xce4>
   18df4:	ldr	r3, [sl, #8]
   18df8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18dfc:	cmp	r3, #0
   18e00:	ldr	r0, [r0, #12]
   18e04:	ldreq	r1, [fp, #-36]	; 0xffffffdc
   18e08:	orr	r0, r0, r6
   18e0c:	ldreq	r3, [r1, #8]
   18e10:	tst	r0, #16
   18e14:	bne	18f10 <argp_failure@@Base+0xce4>
   18e18:	cmp	r3, #0
   18e1c:	beq	18f10 <argp_failure@@Base+0xce4>
   18e20:	tst	r0, #1
   18e24:	bne	18eb0 <argp_failure@@Base+0xc84>
   18e28:	mov	r0, r3
   18e2c:	str	r3, [fp, #-48]	; 0xffffffd0
   18e30:	bl	11c20 <strlen@plt>
   18e34:	ldr	r7, [fp, #-40]	; 0xffffffd8
   18e38:	add	r6, r0, #6
   18e3c:	ldr	r2, [r7, #24]
   18e40:	ldr	r0, [r7, #28]
   18e44:	ldr	r1, [r7, #16]
   18e48:	sub	r2, r0, r2
   18e4c:	cmp	r2, r1
   18e50:	bls	18e60 <argp_failure@@Base+0xc34>
   18e54:	mov	r0, r7
   18e58:	bl	1c954 <argp_parse@@Base+0x2710>
   18e5c:	ldr	r0, [r7, #28]
   18e60:	ldr	r3, [r7, #20]
   18e64:	ldr	r2, [r7, #8]
   18e68:	ldr	r1, [r7, #32]
   18e6c:	cmp	r3, #0
   18e70:	addgt	r6, r6, r3
   18e74:	cmp	r6, r2
   18e78:	bcs	18ec4 <argp_failure@@Base+0xc98>
   18e7c:	ldr	r6, [fp, #-48]	; 0xffffffd0
   18e80:	cmp	r0, r1
   18e84:	bcc	18ea0 <argp_failure@@Base+0xc74>
   18e88:	mov	r0, r7
   18e8c:	mov	r1, #1
   18e90:	bl	1cefc <argp_parse@@Base+0x2cb8>
   18e94:	cmp	r0, #0
   18e98:	beq	18ef8 <argp_failure@@Base+0xccc>
   18e9c:	ldr	r0, [r7, #28]
   18ea0:	add	r1, r0, #1
   18ea4:	str	r1, [r7, #28]
   18ea8:	mov	r1, #32
   18eac:	b	18ef4 <argp_failure@@Base+0xcc8>
   18eb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18eb4:	movw	r1, #62731	; 0xf50b
   18eb8:	mov	r2, r7
   18ebc:	movt	r1, #1
   18ec0:	b	18f0c <argp_failure@@Base+0xce0>
   18ec4:	ldr	r6, [fp, #-48]	; 0xffffffd0
   18ec8:	cmp	r0, r1
   18ecc:	bcc	18ee8 <argp_failure@@Base+0xcbc>
   18ed0:	mov	r0, r7
   18ed4:	mov	r1, #1
   18ed8:	bl	1cefc <argp_parse@@Base+0x2cb8>
   18edc:	cmp	r0, #0
   18ee0:	beq	18ef8 <argp_failure@@Base+0xccc>
   18ee4:	ldr	r0, [r7, #28]
   18ee8:	add	r1, r0, #1
   18eec:	str	r1, [r7, #28]
   18ef0:	mov	r1, #10
   18ef4:	strb	r1, [r0]
   18ef8:	ldr	r2, [sl, #4]
   18efc:	movw	r1, #62742	; 0xf516
   18f00:	mov	r0, r7
   18f04:	mov	r3, r6
   18f08:	movt	r1, #1
   18f0c:	bl	1cfe8 <argp_parse@@Base+0x2da4>
   18f10:	add	r4, r4, #1
   18f14:	subs	r9, r9, #1
   18f18:	add	sl, sl, #24
   18f1c:	bne	18d9c <argp_failure@@Base+0xb70>
   18f20:	subs	r5, r5, #1
   18f24:	add	r8, r8, #28
   18f28:	bne	18d84 <argp_failure@@Base+0xb58>
   18f2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18f30:	ldr	r4, [r0, #4]
   18f34:	cmp	r4, #0
   18f38:	beq	18ff4 <argp_failure@@Base+0xdc8>
   18f3c:	ldr	r6, [r0]
   18f40:	movw	sl, #62775	; 0xf537
   18f44:	movw	r9, #62751	; 0xf51f
   18f48:	movt	sl, #1
   18f4c:	movt	r9, #1
   18f50:	ldr	r7, [r6, #4]
   18f54:	cmp	r7, #0
   18f58:	beq	18fe8 <argp_failure@@Base+0xdbc>
   18f5c:	ldr	r8, [r6]
   18f60:	mov	r5, r8
   18f64:	ldr	r2, [r5]
   18f68:	cmp	r2, #0
   18f6c:	beq	18fc0 <argp_failure@@Base+0xd94>
   18f70:	ldr	r0, [r5, #12]
   18f74:	tst	r0, #4
   18f78:	moveq	r8, r5
   18f7c:	tst	r0, #2
   18f80:	bne	18fc0 <argp_failure@@Base+0xd94>
   18f84:	ldr	r3, [r5, #8]
   18f88:	ldr	r1, [r8, #12]
   18f8c:	cmp	r3, #0
   18f90:	orr	r0, r1, r0
   18f94:	ldreq	r3, [r8, #8]
   18f98:	tst	r0, #16
   18f9c:	bne	18fc0 <argp_failure@@Base+0xd94>
   18fa0:	cmp	r3, #0
   18fa4:	beq	18fd0 <argp_failure@@Base+0xda4>
   18fa8:	tst	r0, #1
   18fac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18fb0:	movne	r1, r9
   18fb4:	movweq	r1, #62764	; 0xf52c
   18fb8:	movteq	r1, #1
   18fbc:	bl	1cfe8 <argp_parse@@Base+0x2da4>
   18fc0:	subs	r7, r7, #1
   18fc4:	add	r5, r5, #24
   18fc8:	bne	18f64 <argp_failure@@Base+0xd38>
   18fcc:	b	18fe8 <argp_failure@@Base+0xdbc>
   18fd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18fd4:	mov	r1, sl
   18fd8:	bl	1cfe8 <argp_parse@@Base+0x2da4>
   18fdc:	subs	r7, r7, #1
   18fe0:	add	r5, r5, #24
   18fe4:	bne	18f64 <argp_failure@@Base+0xd38>
   18fe8:	subs	r4, r4, #1
   18fec:	add	r6, r6, #28
   18ff0:	bne	18f50 <argp_failure@@Base+0xd24>
   18ff4:	sub	sp, fp, #28
   18ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18ffc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19000:	add	fp, sp, #28
   19004:	sub	sp, sp, #28
   19008:	ldr	r6, [r0, #8]
   1900c:	ldr	r5, [r0, #16]
   19010:	ldr	sl, [r2]
   19014:	mov	r4, r3
   19018:	mov	r9, r2
   1901c:	mov	r8, r1
   19020:	mov	r7, r0
   19024:	cmp	r0, #0
   19028:	mov	r0, r6
   1902c:	beq	19064 <argp_failure@@Base+0xe38>
   19030:	ldr	r0, [r7, #20]
   19034:	cmp	r0, #0
   19038:	mov	r0, r6
   1903c:	beq	19064 <argp_failure@@Base+0xe38>
   19040:	mov	r0, r7
   19044:	mov	r1, r8
   19048:	bl	1af14 <argp_parse@@Base+0xcd0>
   1904c:	ldr	r3, [r7, #20]
   19050:	mov	r2, r0
   19054:	movw	r0, #6
   19058:	mov	r1, r6
   1905c:	movt	r0, #512	; 0x200
   19060:	blx	r3
   19064:	cmp	r0, #0
   19068:	str	sl, [sp, #24]
   1906c:	beq	190cc <argp_failure@@Base+0xea0>
   19070:	mov	r1, #10
   19074:	mov	sl, r0
   19078:	bl	11a10 <strchrnul@plt>
   1907c:	mov	r7, r0
   19080:	ldrb	r0, [r0]
   19084:	cmp	r0, #0
   19088:	add	r0, sp, #12
   1908c:	stm	r0, {r5, r6, sl}
   19090:	beq	190e8 <argp_failure@@Base+0xebc>
   19094:	ldr	r0, [sp, #24]
   19098:	ldrb	r6, [r0]
   1909c:	cmp	r6, #0
   190a0:	beq	190f0 <argp_failure@@Base+0xec4>
   190a4:	mov	r5, #0
   190a8:	add	sl, r7, #1
   190ac:	mov	r1, #10
   190b0:	mov	r0, sl
   190b4:	bl	11a10 <strchrnul@plt>
   190b8:	add	r5, r5, #1
   190bc:	mov	r7, r0
   190c0:	cmp	r5, r6
   190c4:	bcc	190a8 <argp_failure@@Base+0xe7c>
   190c8:	b	190f4 <argp_failure@@Base+0xec8>
   190cc:	mov	r7, #0
   190d0:	mov	sl, #0
   190d4:	cmp	r5, #0
   190d8:	ldrne	r0, [r5]
   190dc:	cmpne	r0, #0
   190e0:	beq	19234 <argp_failure@@Base+0x1008>
   190e4:	b	19250 <argp_failure@@Base+0x1024>
   190e8:	mov	r0, #0
   190ec:	b	19104 <argp_failure@@Base+0xed8>
   190f0:	ldr	sl, [sp, #20]
   190f4:	ldr	r0, [r9]
   190f8:	add	r0, r0, #1
   190fc:	str	r0, [r9]
   19100:	mov	r0, #1
   19104:	ldr	r5, [fp, #8]
   19108:	str	r0, [sp, #8]
   1910c:	add	r0, r7, #1
   19110:	sub	r6, r0, sl
   19114:	ldr	r2, [r5, #24]
   19118:	ldr	r0, [r5, #28]
   1911c:	ldr	r1, [r5, #16]
   19120:	sub	r2, r0, r2
   19124:	cmp	r2, r1
   19128:	bls	19138 <argp_failure@@Base+0xf0c>
   1912c:	mov	r0, r5
   19130:	bl	1c954 <argp_parse@@Base+0x2710>
   19134:	ldr	r0, [r5, #28]
   19138:	ldr	r3, [r5, #20]
   1913c:	ldr	r2, [r5, #8]
   19140:	ldr	r1, [r5, #32]
   19144:	cmp	r3, #0
   19148:	addgt	r6, r6, r3
   1914c:	cmp	r6, r2
   19150:	bcs	19184 <argp_failure@@Base+0xf58>
   19154:	cmp	r0, r1
   19158:	bcc	19174 <argp_failure@@Base+0xf48>
   1915c:	mov	r0, r5
   19160:	mov	r1, #1
   19164:	bl	1cefc <argp_parse@@Base+0x2cb8>
   19168:	cmp	r0, #0
   1916c:	beq	191b4 <argp_failure@@Base+0xf88>
   19170:	ldr	r0, [r5, #28]
   19174:	add	r1, r0, #1
   19178:	str	r1, [r5, #28]
   1917c:	mov	r1, #32
   19180:	b	191b0 <argp_failure@@Base+0xf84>
   19184:	cmp	r0, r1
   19188:	bcc	191a4 <argp_failure@@Base+0xf78>
   1918c:	mov	r0, r5
   19190:	mov	r1, #1
   19194:	bl	1cefc <argp_parse@@Base+0x2cb8>
   19198:	cmp	r0, #0
   1919c:	beq	191b4 <argp_failure@@Base+0xf88>
   191a0:	ldr	r0, [r5, #28]
   191a4:	add	r1, r0, #1
   191a8:	str	r1, [r5, #28]
   191ac:	mov	r1, #10
   191b0:	strb	r1, [r0]
   191b4:	mov	r6, r5
   191b8:	sub	r5, r7, sl
   191bc:	ldr	r0, [r6, #28]
   191c0:	ldr	r1, [r6, #32]
   191c4:	add	r2, r0, r5
   191c8:	cmp	r2, r1
   191cc:	bls	191ec <argp_failure@@Base+0xfc0>
   191d0:	mov	r0, r6
   191d4:	mov	r1, r5
   191d8:	bl	1cefc <argp_parse@@Base+0x2cb8>
   191dc:	cmp	r0, #0
   191e0:	beq	19204 <argp_failure@@Base+0xfd8>
   191e4:	ldr	r6, [fp, #8]
   191e8:	ldr	r0, [r6, #28]
   191ec:	mov	r1, sl
   191f0:	mov	r2, r5
   191f4:	bl	11a58 <memcpy@plt>
   191f8:	ldr	r0, [r6, #28]
   191fc:	add	r0, r0, r5
   19200:	str	r0, [r6, #28]
   19204:	ldr	r0, [sp, #16]
   19208:	ldr	r1, [sp, #20]
   1920c:	cmp	r1, r0
   19210:	beq	1921c <argp_failure@@Base+0xff0>
   19214:	mov	r0, r1
   19218:	bl	1b7d4 <argp_parse@@Base+0x1590>
   1921c:	ldr	r5, [sp, #12]
   19220:	ldr	sl, [sp, #8]
   19224:	cmp	r5, #0
   19228:	ldrne	r0, [r5]
   1922c:	cmpne	r0, #0
   19230:	bne	19250 <argp_failure@@Base+0x1024>
   19234:	cmp	sl, #0
   19238:	cmpne	r4, #0
   1923c:	bne	19290 <argp_failure@@Base+0x1064>
   19240:	clz	r0, r4
   19244:	lsr	r0, r0, #5
   19248:	sub	sp, fp, #28
   1924c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19250:	add	r6, r5, #16
   19254:	ldr	r5, [fp, #8]
   19258:	mov	r1, r8
   1925c:	mov	r2, r9
   19260:	mov	r3, r4
   19264:	str	r5, [sp]
   19268:	bl	18ffc <argp_failure@@Base+0xdd0>
   1926c:	clz	r1, r0
   19270:	ldr	r0, [r6], #16
   19274:	lsr	r4, r1, #5
   19278:	cmp	r0, #0
   1927c:	bne	19258 <argp_failure@@Base+0x102c>
   19280:	lsr	r4, r1, #5
   19284:	cmp	sl, #0
   19288:	cmpne	r4, #0
   1928c:	beq	19240 <argp_failure@@Base+0x1014>
   19290:	ldr	r2, [sp, #24]
   19294:	ldrb	r1, [r7]
   19298:	ldrb	r0, [r2]
   1929c:	cmp	r1, #0
   192a0:	beq	192c0 <argp_failure@@Base+0x1094>
   192a4:	add	r0, r0, #1
   192a8:	mov	r4, #0
   192ac:	strb	r0, [r2]
   192b0:	clz	r0, r4
   192b4:	lsr	r0, r0, #5
   192b8:	sub	sp, fp, #28
   192bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192c0:	cmp	r0, #0
   192c4:	movne	r0, #0
   192c8:	strbne	r0, [r2]
   192cc:	clz	r0, r4
   192d0:	lsr	r0, r0, #5
   192d4:	sub	sp, fp, #28
   192d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   192e0:	add	fp, sp, #28
   192e4:	sub	sp, sp, #28
   192e8:	ldr	r4, [r0, #12]
   192ec:	mov	r5, r0
   192f0:	ldr	r0, [r0, #16]
   192f4:	mov	r8, r2
   192f8:	mov	r6, #0
   192fc:	str	r3, [sp, #20]
   19300:	str	r1, [sp, #24]
   19304:	cmp	r4, #0
   19308:	str	r0, [sp, #16]
   1930c:	beq	19348 <argp_failure@@Base+0x111c>
   19310:	mov	r0, r4
   19314:	mov	r1, #11
   19318:	bl	11c38 <strchr@plt>
   1931c:	cmp	r0, #0
   19320:	mov	r9, r0
   19324:	mov	r7, r0
   19328:	subne	r9, r9, r4
   1932c:	cmp	r8, #0
   19330:	movne	r9, #0
   19334:	cmp	r0, #0
   19338:	addne	r7, r7, #1
   1933c:	cmp	r8, #0
   19340:	moveq	r7, r4
   19344:	b	19350 <argp_failure@@Base+0x1124>
   19348:	mov	r9, #0
   1934c:	mov	r7, #0
   19350:	ldr	r0, [r5, #20]
   19354:	movw	r4, #1
   19358:	movt	r4, #512	; 0x200
   1935c:	cmp	r0, #0
   19360:	beq	19468 <argp_failure@@Base+0x123c>
   19364:	cmp	r9, #0
   19368:	beq	1937c <argp_failure@@Base+0x1150>
   1936c:	mov	r0, r7
   19370:	mov	r1, r9
   19374:	bl	11a40 <strndup@plt>
   19378:	mov	r7, r0
   1937c:	ldr	r1, [sp, #24]
   19380:	mov	r0, r5
   19384:	bl	1af14 <argp_parse@@Base+0xcd0>
   19388:	ldr	r3, [r5, #20]
   1938c:	mov	r6, r0
   19390:	cmp	r8, #0
   19394:	mov	r0, r4
   19398:	mov	r1, r7
   1939c:	addne	r0, r0, #1
   193a0:	mov	r2, r6
   193a4:	blx	r3
   193a8:	mov	r1, r0
   193ac:	cmp	r1, #0
   193b0:	beq	19474 <argp_failure@@Base+0x1248>
   193b4:	ldr	r0, [sp, #20]
   193b8:	str	r1, [sp, #12]
   193bc:	cmp	r0, #0
   193c0:	beq	19408 <argp_failure@@Base+0x11dc>
   193c4:	ldr	r0, [fp, #12]
   193c8:	ldr	r2, [r0, #28]
   193cc:	ldr	r1, [r0, #32]
   193d0:	cmp	r2, r1
   193d4:	bcc	193f4 <argp_failure@@Base+0x11c8>
   193d8:	mov	r1, #1
   193dc:	bl	1cefc <argp_parse@@Base+0x2cb8>
   193e0:	ldr	r1, [sp, #12]
   193e4:	cmp	r0, #0
   193e8:	beq	19408 <argp_failure@@Base+0x11dc>
   193ec:	ldr	r0, [fp, #12]
   193f0:	ldr	r2, [r0, #28]
   193f4:	add	r1, r2, #1
   193f8:	str	r1, [r0, #28]
   193fc:	mov	r1, #10
   19400:	strb	r1, [r2]
   19404:	ldr	r1, [sp, #12]
   19408:	cmp	r9, #0
   1940c:	str	r6, [sp, #8]
   19410:	beq	19484 <argp_failure@@Base+0x1258>
   19414:	cmp	r1, r7
   19418:	bne	19484 <argp_failure@@Base+0x1258>
   1941c:	ldr	r6, [fp, #12]
   19420:	ldr	r0, [r6, #28]!
   19424:	ldr	r2, [r6, #4]
   19428:	add	r1, r0, r9
   1942c:	cmp	r1, r2
   19430:	bls	1944c <argp_failure@@Base+0x1220>
   19434:	ldr	r0, [fp, #12]
   19438:	mov	r1, r9
   1943c:	bl	1cefc <argp_parse@@Base+0x2cb8>
   19440:	cmp	r0, #0
   19444:	beq	197c4 <argp_failure@@Base+0x1598>
   19448:	ldr	r0, [r6]
   1944c:	mov	r1, r7
   19450:	mov	r2, r9
   19454:	mov	sl, r4
   19458:	bl	11a58 <memcpy@plt>
   1945c:	ldr	r0, [r6]
   19460:	add	r0, r0, r9
   19464:	b	194e4 <argp_failure@@Base+0x12b8>
   19468:	mov	r1, r7
   1946c:	cmp	r1, #0
   19470:	bne	193b4 <argp_failure@@Base+0x1188>
   19474:	mov	sl, #0
   19478:	cmp	r9, #0
   1947c:	bne	19584 <argp_failure@@Base+0x1358>
   19480:	b	19594 <argp_failure@@Base+0x1368>
   19484:	mov	r0, r1
   19488:	mov	sl, r4
   1948c:	bl	11c20 <strlen@plt>
   19490:	ldr	r1, [fp, #12]
   19494:	cmp	r0, #0
   19498:	add	r6, r1, #28
   1949c:	beq	194e8 <argp_failure@@Base+0x12bc>
   194a0:	mov	r4, r0
   194a4:	ldr	r0, [r1, #28]
   194a8:	ldr	r1, [r1, #32]
   194ac:	add	r2, r0, r4
   194b0:	cmp	r2, r1
   194b4:	bls	194d0 <argp_failure@@Base+0x12a4>
   194b8:	ldr	r0, [fp, #12]
   194bc:	mov	r1, r4
   194c0:	bl	1cefc <argp_parse@@Base+0x2cb8>
   194c4:	cmp	r0, #0
   194c8:	beq	194e8 <argp_failure@@Base+0x12bc>
   194cc:	ldr	r0, [r6]
   194d0:	ldr	r1, [sp, #12]
   194d4:	mov	r2, r4
   194d8:	bl	11a58 <memcpy@plt>
   194dc:	ldr	r0, [r6]
   194e0:	add	r0, r0, r4
   194e4:	str	r0, [r6]
   194e8:	ldr	r4, [fp, #12]
   194ec:	ldr	r2, [r6]
   194f0:	ldr	r1, [r4, #24]
   194f4:	ldr	r0, [r4, #16]
   194f8:	sub	r1, r2, r1
   194fc:	cmp	r1, r0
   19500:	bls	1950c <argp_failure@@Base+0x12e0>
   19504:	mov	r0, r4
   19508:	bl	1c954 <argp_parse@@Base+0x2710>
   1950c:	ldr	r1, [r4, #20]
   19510:	ldr	r0, [r4, #4]
   19514:	mov	r4, sl
   19518:	bic	r1, r1, r1, asr #31
   1951c:	cmp	r1, r0
   19520:	bls	19564 <argp_failure@@Base+0x1338>
   19524:	ldr	r0, [fp, #12]
   19528:	mov	r1, r0
   1952c:	ldr	r0, [r0, #28]
   19530:	ldr	r1, [r1, #32]
   19534:	cmp	r0, r1
   19538:	bcc	19554 <argp_failure@@Base+0x1328>
   1953c:	ldr	r0, [fp, #12]
   19540:	mov	r1, #1
   19544:	bl	1cefc <argp_parse@@Base+0x2cb8>
   19548:	cmp	r0, #0
   1954c:	beq	19564 <argp_failure@@Base+0x1338>
   19550:	ldr	r0, [r6]
   19554:	add	r1, r0, #1
   19558:	str	r1, [r6]
   1955c:	mov	r1, #10
   19560:	strb	r1, [r0]
   19564:	ldr	r0, [sp, #12]
   19568:	mov	sl, #1
   1956c:	cmp	r0, r7
   19570:	beq	19578 <argp_failure@@Base+0x134c>
   19574:	bl	1b7d4 <argp_parse@@Base+0x1590>
   19578:	ldr	r6, [sp, #8]
   1957c:	cmp	r9, #0
   19580:	beq	19594 <argp_failure@@Base+0x1368>
   19584:	cmp	r7, #0
   19588:	ldrne	r0, [r5, #20]
   1958c:	cmpne	r0, #0
   19590:	bne	19628 <argp_failure@@Base+0x13fc>
   19594:	ldr	r9, [fp, #12]
   19598:	cmp	r8, #0
   1959c:	beq	1963c <argp_failure@@Base+0x1410>
   195a0:	ldr	r3, [r5, #20]
   195a4:	cmp	r3, #0
   195a8:	beq	1963c <argp_failure@@Base+0x1410>
   195ac:	add	r0, r4, #3
   195b0:	mov	r1, #0
   195b4:	mov	r2, r6
   195b8:	blx	r3
   195bc:	cmp	r0, #0
   195c0:	beq	1963c <argp_failure@@Base+0x1410>
   195c4:	mov	r6, r0
   195c8:	ldr	r0, [sp, #20]
   195cc:	ldr	r5, [sp, #24]
   195d0:	orrs	r0, sl, r0
   195d4:	beq	196e4 <argp_failure@@Base+0x14b8>
   195d8:	mov	r7, r9
   195dc:	ldr	r0, [r7, #28]!
   195e0:	ldr	r1, [r7, #4]
   195e4:	cmp	r0, r1
   195e8:	bcc	19604 <argp_failure@@Base+0x13d8>
   195ec:	mov	r0, r9
   195f0:	mov	r1, #1
   195f4:	bl	1cefc <argp_parse@@Base+0x2cb8>
   195f8:	cmp	r0, #0
   195fc:	beq	19614 <argp_failure@@Base+0x13e8>
   19600:	ldr	r0, [r7]
   19604:	add	r1, r0, #1
   19608:	str	r1, [r7]
   1960c:	mov	r1, #10
   19610:	strb	r1, [r0]
   19614:	mov	r0, r6
   19618:	bl	11c20 <strlen@plt>
   1961c:	cmp	r0, #0
   19620:	bne	196f8 <argp_failure@@Base+0x14cc>
   19624:	b	19740 <argp_failure@@Base+0x1514>
   19628:	mov	r0, r7
   1962c:	bl	1b7d4 <argp_parse@@Base+0x1590>
   19630:	ldr	r9, [fp, #12]
   19634:	cmp	r8, #0
   19638:	bne	195a0 <argp_failure@@Base+0x1374>
   1963c:	ldr	r5, [sp, #24]
   19640:	ldr	r1, [sp, #16]
   19644:	cmp	r1, #0
   19648:	ldrne	r0, [r1]
   1964c:	cmpne	r0, #0
   19650:	bne	19660 <argp_failure@@Base+0x1434>
   19654:	mov	r0, sl
   19658:	sub	sp, fp, #28
   1965c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19660:	ldr	r4, [fp, #8]
   19664:	cmp	r4, #0
   19668:	beq	196ac <argp_failure@@Base+0x1480>
   1966c:	ldr	r7, [sp, #20]
   19670:	add	r6, r1, #16
   19674:	cmp	r7, #0
   19678:	movwne	r7, #1
   1967c:	cmp	sl, #0
   19680:	bne	19654 <argp_failure@@Base+0x1428>
   19684:	mov	r1, r5
   19688:	mov	r2, r8
   1968c:	mov	r3, r7
   19690:	stm	sp, {r4, r9}
   19694:	bl	192dc <argp_failure@@Base+0x10b0>
   19698:	mov	sl, r0
   1969c:	ldr	r0, [r6], #16
   196a0:	cmp	r0, #0
   196a4:	bne	1967c <argp_failure@@Base+0x1450>
   196a8:	b	19654 <argp_failure@@Base+0x1428>
   196ac:	ldr	r7, [sp, #20]
   196b0:	add	r4, r1, #16
   196b4:	mov	r6, #0
   196b8:	orrs	r3, sl, r7
   196bc:	mov	r1, r5
   196c0:	mov	r2, r8
   196c4:	stm	sp, {r6, r9}
   196c8:	movwne	r3, #1
   196cc:	bl	192dc <argp_failure@@Base+0x10b0>
   196d0:	orr	sl, r0, sl
   196d4:	ldr	r0, [r4], #16
   196d8:	cmp	r0, #0
   196dc:	bne	196b8 <argp_failure@@Base+0x148c>
   196e0:	b	19654 <argp_failure@@Base+0x1428>
   196e4:	mov	r0, r6
   196e8:	bl	11c20 <strlen@plt>
   196ec:	add	r7, r9, #28
   196f0:	cmp	r0, #0
   196f4:	beq	19740 <argp_failure@@Base+0x1514>
   196f8:	mov	r4, r0
   196fc:	ldr	r0, [r9, #28]
   19700:	ldr	r1, [r9, #32]
   19704:	add	r2, r0, r4
   19708:	cmp	r2, r1
   1970c:	bls	19728 <argp_failure@@Base+0x14fc>
   19710:	mov	r0, r9
   19714:	mov	r1, r4
   19718:	bl	1cefc <argp_parse@@Base+0x2cb8>
   1971c:	cmp	r0, #0
   19720:	beq	19740 <argp_failure@@Base+0x1514>
   19724:	ldr	r0, [r7]
   19728:	mov	r1, r6
   1972c:	mov	r2, r4
   19730:	bl	11a58 <memcpy@plt>
   19734:	ldr	r0, [r7]
   19738:	add	r0, r0, r4
   1973c:	str	r0, [r7]
   19740:	mov	r0, r6
   19744:	bl	1b7d4 <argp_parse@@Base+0x1590>
   19748:	ldr	r1, [r9, #24]
   1974c:	ldr	r2, [r7]
   19750:	ldr	r0, [r9, #16]
   19754:	sub	r1, r2, r1
   19758:	cmp	r1, r0
   1975c:	bls	19768 <argp_failure@@Base+0x153c>
   19760:	mov	r0, r9
   19764:	bl	1c954 <argp_parse@@Base+0x2710>
   19768:	ldr	r1, [r9, #20]
   1976c:	ldr	r0, [r9, #4]
   19770:	mov	sl, #1
   19774:	bic	r1, r1, r1, asr #31
   19778:	cmp	r1, r0
   1977c:	bls	19640 <argp_failure@@Base+0x1414>
   19780:	ldr	r0, [r9, #28]
   19784:	ldr	r1, [r9, #32]
   19788:	cmp	r0, r1
   1978c:	bcc	197ac <argp_failure@@Base+0x1580>
   19790:	mov	r0, r9
   19794:	mov	r1, #1
   19798:	mov	sl, #1
   1979c:	bl	1cefc <argp_parse@@Base+0x2cb8>
   197a0:	cmp	r0, #0
   197a4:	beq	19640 <argp_failure@@Base+0x1414>
   197a8:	ldr	r0, [r7]
   197ac:	add	r1, r0, #1
   197b0:	mov	sl, #1
   197b4:	str	r1, [r7]
   197b8:	mov	r1, #10
   197bc:	strb	r1, [r0]
   197c0:	b	19640 <argp_failure@@Base+0x1414>
   197c4:	mov	sl, r4
   197c8:	b	194e8 <argp_failure@@Base+0x12bc>
   197cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   197d0:	add	fp, sp, #28
   197d4:	sub	sp, sp, #28
   197d8:	mov	r7, r0
   197dc:	ldr	r0, [r0, #16]
   197e0:	mov	r5, r1
   197e4:	cmp	r0, #0
   197e8:	beq	19830 <argp_failure@@Base+0x1604>
   197ec:	mov	r2, r0
   197f0:	mov	r1, r2
   197f4:	ldr	r2, [r2, #12]
   197f8:	cmp	r2, #0
   197fc:	bne	197f0 <argp_failure@@Base+0x15c4>
   19800:	add	r2, r1, #8
   19804:	ldr	r1, [r5, #16]
   19808:	ldr	r3, [r2]
   1980c:	cmp	r1, #0
   19810:	beq	19844 <argp_failure@@Base+0x1618>
   19814:	mov	r2, r1
   19818:	mov	r6, r2
   1981c:	ldr	r2, [r2, #12]
   19820:	cmp	r2, #0
   19824:	bne	19818 <argp_failure@@Base+0x15ec>
   19828:	add	r2, r6, #8
   1982c:	b	19848 <argp_failure@@Base+0x161c>
   19830:	add	r2, r7, #12
   19834:	ldr	r1, [r5, #16]
   19838:	ldr	r3, [r2]
   1983c:	cmp	r1, #0
   19840:	bne	19814 <argp_failure@@Base+0x15e8>
   19844:	add	r2, r5, #12
   19848:	ldr	r6, [r2]
   1984c:	orr	r4, r6, r3
   19850:	sub	r2, r3, r6
   19854:	cmn	r4, #1
   19858:	mov	r4, r2
   1985c:	suble	r4, r6, r3
   19860:	and	r3, r6, r3
   19864:	cmp	r3, #0
   19868:	movlt	r4, r2
   1986c:	cmp	r4, #0
   19870:	bne	19890 <argp_failure@@Base+0x1664>
   19874:	cmp	r0, #0
   19878:	mov	r4, r0
   1987c:	movwne	r4, #1
   19880:	cmp	r1, #0
   19884:	subne	r4, r4, #1
   19888:	cmp	r4, #0
   1988c:	beq	1989c <argp_failure@@Base+0x1670>
   19890:	mov	r0, r4
   19894:	sub	sp, fp, #28
   19898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1989c:	cmp	r0, #0
   198a0:	beq	19920 <argp_failure@@Base+0x16f4>
   198a4:	ldr	r3, [r1, #20]
   198a8:	ldr	r2, [r0, #20]
   198ac:	cmp	r2, r3
   198b0:	ble	198e0 <argp_failure@@Base+0x16b4>
   198b4:	ldr	r0, [r0, #12]
   198b8:	ldr	r2, [r0, #20]
   198bc:	cmp	r2, r3
   198c0:	bgt	198b4 <argp_failure@@Base+0x1688>
   198c4:	bl	19d28 <argp_failure@@Base+0x1afc>
   198c8:	mov	r4, r0
   198cc:	cmp	r0, #0
   198d0:	movweq	r4, #1
   198d4:	mov	r0, r4
   198d8:	sub	sp, fp, #28
   198dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   198e0:	bge	19910 <argp_failure@@Base+0x16e4>
   198e4:	ldr	r1, [r1, #12]
   198e8:	ldr	r3, [r1, #20]
   198ec:	cmp	r2, r3
   198f0:	blt	198e4 <argp_failure@@Base+0x16b8>
   198f4:	bl	19d28 <argp_failure@@Base+0x1afc>
   198f8:	mov	r4, r0
   198fc:	cmp	r0, #0
   19900:	mvneq	r4, #0
   19904:	mov	r0, r4
   19908:	sub	sp, fp, #28
   1990c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19910:	bl	19d28 <argp_failure@@Base+0x1afc>
   19914:	mov	r4, r0
   19918:	cmp	r0, #0
   1991c:	bne	19890 <argp_failure@@Base+0x1664>
   19920:	ldr	r0, [r7, #12]
   19924:	ldr	r1, [r5, #12]
   19928:	orr	r2, r1, r0
   1992c:	sub	r3, r0, r1
   19930:	cmn	r2, #1
   19934:	mov	r4, r3
   19938:	suble	r4, r1, r0
   1993c:	and	r0, r1, r0
   19940:	cmp	r0, #0
   19944:	movlt	r4, r3
   19948:	cmp	r4, #0
   1994c:	bne	19890 <argp_failure@@Base+0x1664>
   19950:	ldr	r4, [r7, #4]
   19954:	ldr	sl, [r7]
   19958:	mov	r9, #0
   1995c:	cmp	r4, #0
   19960:	beq	19994 <argp_failure@@Base+0x1768>
   19964:	add	r0, sl, #12
   19968:	mov	r1, r4
   1996c:	ldr	r9, [r0, #-12]
   19970:	cmp	r9, #0
   19974:	beq	19984 <argp_failure@@Base+0x1758>
   19978:	ldrb	r2, [r0]
   1997c:	tst	r2, #2
   19980:	beq	19994 <argp_failure@@Base+0x1768>
   19984:	add	r0, r0, #24
   19988:	subs	r1, r1, #1
   1998c:	bne	1996c <argp_failure@@Base+0x1740>
   19990:	mov	r9, #0
   19994:	ldr	r3, [r5, #4]
   19998:	ldr	ip, [r5]
   1999c:	cmp	r3, #0
   199a0:	beq	199d0 <argp_failure@@Base+0x17a4>
   199a4:	add	r0, ip, #12
   199a8:	mov	r1, r3
   199ac:	ldr	r6, [r0, #-12]
   199b0:	cmp	r6, #0
   199b4:	beq	199c4 <argp_failure@@Base+0x1798>
   199b8:	ldrb	r2, [r0]
   199bc:	tst	r2, #2
   199c0:	beq	199d4 <argp_failure@@Base+0x17a8>
   199c4:	add	r0, r0, #24
   199c8:	subs	r1, r1, #1
   199cc:	bne	199ac <argp_failure@@Base+0x1780>
   199d0:	mov	r6, #0
   199d4:	ldr	r1, [sl, #12]
   199d8:	mov	r8, #0
   199dc:	cmp	r9, #0
   199e0:	str	r4, [sp, #12]
   199e4:	str	r3, [sp, #16]
   199e8:	str	sl, [sp, #8]
   199ec:	str	r1, [sp, #24]
   199f0:	beq	19a68 <argp_failure@@Base+0x183c>
   199f4:	ands	r0, r1, #8
   199f8:	beq	19a68 <argp_failure@@Base+0x183c>
   199fc:	str	ip, [sp, #20]
   19a00:	bl	11bfc <__ctype_b_loc@plt>
   19a04:	ldrb	r1, [r9]
   19a08:	ldr	r0, [r0]
   19a0c:	add	r2, r0, r1, lsl #1
   19a10:	ldrb	r2, [r2, #1]
   19a14:	tst	r2, #32
   19a18:	beq	19a30 <argp_failure@@Base+0x1804>
   19a1c:	ldrb	r1, [r9, #1]!
   19a20:	add	r2, r0, r1, lsl #1
   19a24:	ldrb	r2, [r2, #1]
   19a28:	tst	r2, #32
   19a2c:	bne	19a1c <argp_failure@@Base+0x17f0>
   19a30:	ldr	ip, [sp, #20]
   19a34:	subs	r4, r1, #45	; 0x2d
   19a38:	movwne	r4, #1
   19a3c:	cmp	r1, #0
   19a40:	beq	19a60 <argp_failure@@Base+0x1834>
   19a44:	uxtb	r1, r1
   19a48:	ldrb	r1, [r0, r1, lsl #1]
   19a4c:	tst	r1, #8
   19a50:	bne	19a60 <argp_failure@@Base+0x1834>
   19a54:	ldrb	r1, [r9, #1]!
   19a58:	cmp	r1, #0
   19a5c:	bne	19a44 <argp_failure@@Base+0x1818>
   19a60:	ldr	r1, [sp, #24]
   19a64:	b	19a6c <argp_failure@@Base+0x1840>
   19a68:	mov	r4, #0
   19a6c:	ldr	r0, [ip, #12]
   19a70:	cmp	r6, #0
   19a74:	str	r0, [sp, #4]
   19a78:	andsne	r0, r0, #8
   19a7c:	beq	19ae8 <argp_failure@@Base+0x18bc>
   19a80:	mov	sl, ip
   19a84:	bl	11bfc <__ctype_b_loc@plt>
   19a88:	ldrb	r1, [r6]
   19a8c:	ldr	r0, [r0]
   19a90:	add	r2, r0, r1, lsl #1
   19a94:	ldrb	r2, [r2, #1]
   19a98:	tst	r2, #32
   19a9c:	beq	19ab4 <argp_failure@@Base+0x1888>
   19aa0:	ldrb	r1, [r6, #1]!
   19aa4:	add	r2, r0, r1, lsl #1
   19aa8:	ldrb	r2, [r2, #1]
   19aac:	tst	r2, #32
   19ab0:	bne	19aa0 <argp_failure@@Base+0x1874>
   19ab4:	subs	r8, r1, #45	; 0x2d
   19ab8:	mov	ip, sl
   19abc:	movwne	r8, #1
   19ac0:	cmp	r1, #0
   19ac4:	beq	19ae4 <argp_failure@@Base+0x18b8>
   19ac8:	uxtb	r1, r1
   19acc:	ldrb	r1, [r0, r1, lsl #1]
   19ad0:	tst	r1, #8
   19ad4:	bne	19ae4 <argp_failure@@Base+0x18b8>
   19ad8:	ldrb	r1, [r6, #1]!
   19adc:	cmp	r1, #0
   19ae0:	bne	19ac8 <argp_failure@@Base+0x189c>
   19ae4:	ldr	r1, [sp, #24]
   19ae8:	subs	r4, r4, r8
   19aec:	bne	19890 <argp_failure@@Base+0x1664>
   19af0:	ldr	r0, [sp, #12]
   19af4:	mov	r2, #0
   19af8:	str	ip, [sp, #20]
   19afc:	cmp	r0, #0
   19b00:	beq	19b98 <argp_failure@@Base+0x196c>
   19b04:	rsb	sl, r0, #1
   19b08:	ldr	r0, [sp, #8]
   19b0c:	ldr	r4, [r7, #8]
   19b10:	add	r8, r0, #36	; 0x24
   19b14:	tst	r1, #8
   19b18:	beq	19b40 <argp_failure@@Base+0x1914>
   19b1c:	mov	r2, #0
   19b20:	cmp	sl, #0
   19b24:	beq	19b98 <argp_failure@@Base+0x196c>
   19b28:	cmp	r2, #0
   19b2c:	bne	19b98 <argp_failure@@Base+0x196c>
   19b30:	ldr	r1, [r8], #24
   19b34:	add	sl, sl, #1
   19b38:	tst	r1, #8
   19b3c:	bne	19b1c <argp_failure@@Base+0x18f0>
   19b40:	ldr	r7, [r8, #-32]	; 0xffffffe0
   19b44:	sub	r0, r7, #1
   19b48:	cmp	r0, #254	; 0xfe
   19b4c:	bhi	19b1c <argp_failure@@Base+0x18f0>
   19b50:	str	r1, [sp, #24]
   19b54:	bl	11bfc <__ctype_b_loc@plt>
   19b58:	ldr	r0, [r0]
   19b5c:	add	r0, r0, r7, lsl #1
   19b60:	ldrb	r0, [r0, #1]
   19b64:	tst	r0, #64	; 0x40
   19b68:	beq	19b1c <argp_failure@@Base+0x18f0>
   19b6c:	ldrb	r0, [r4]
   19b70:	mov	r2, r7
   19b74:	cmp	r7, r0
   19b78:	bne	19b1c <argp_failure@@Base+0x18f0>
   19b7c:	ldr	r0, [sp, #24]
   19b80:	add	r4, r4, #1
   19b84:	tst	r0, #2
   19b88:	mov	r0, #0
   19b8c:	movne	r2, r0
   19b90:	cmp	sl, #0
   19b94:	bne	19b28 <argp_failure@@Base+0x18fc>
   19b98:	ldr	r0, [sp, #16]
   19b9c:	mov	sl, #0
   19ba0:	mov	r1, r2
   19ba4:	str	r2, [sp, #24]
   19ba8:	cmp	r0, #0
   19bac:	beq	19c50 <argp_failure@@Base+0x1a24>
   19bb0:	rsb	r7, r0, #1
   19bb4:	ldr	r0, [sp, #20]
   19bb8:	ldr	r5, [r5, #8]
   19bbc:	ldr	r4, [sp, #4]
   19bc0:	add	r8, r0, #36	; 0x24
   19bc4:	tst	r4, #8
   19bc8:	beq	19be8 <argp_failure@@Base+0x19bc>
   19bcc:	b	19c3c <argp_failure@@Base+0x1a10>
   19bd0:	ldr	r2, [sp, #24]
   19bd4:	b	19c3c <argp_failure@@Base+0x1a10>
   19bd8:	ldr	r4, [r8], #24
   19bdc:	add	r7, r7, #1
   19be0:	tst	r4, #8
   19be4:	bne	19c3c <argp_failure@@Base+0x1a10>
   19be8:	ldr	sl, [r8, #-32]	; 0xffffffe0
   19bec:	sub	r0, sl, #1
   19bf0:	cmp	r0, #254	; 0xfe
   19bf4:	bhi	19c3c <argp_failure@@Base+0x1a10>
   19bf8:	bl	11bfc <__ctype_b_loc@plt>
   19bfc:	ldr	r0, [r0]
   19c00:	add	r0, r0, sl, lsl #1
   19c04:	ldrb	r0, [r0, #1]
   19c08:	tst	r0, #64	; 0x40
   19c0c:	beq	19bd0 <argp_failure@@Base+0x19a4>
   19c10:	ldrb	r0, [r5]
   19c14:	ldr	r2, [sp, #24]
   19c18:	cmp	sl, r0
   19c1c:	bne	19c3c <argp_failure@@Base+0x1a10>
   19c20:	tst	r4, #2
   19c24:	mov	r0, #0
   19c28:	add	r5, r5, #1
   19c2c:	movne	sl, r0
   19c30:	cmp	r7, #0
   19c34:	bne	19c48 <argp_failure@@Base+0x1a1c>
   19c38:	b	19c50 <argp_failure@@Base+0x1a24>
   19c3c:	mov	sl, #0
   19c40:	cmp	r7, #0
   19c44:	beq	19c50 <argp_failure@@Base+0x1a24>
   19c48:	cmp	sl, #0
   19c4c:	beq	19bd8 <argp_failure@@Base+0x19ac>
   19c50:	tst	r2, #255	; 0xff
   19c54:	mov	r5, r2
   19c58:	bne	19c68 <argp_failure@@Base+0x1a3c>
   19c5c:	cmp	r9, #0
   19c60:	ldrbne	r5, [r9]
   19c64:	moveq	r5, #0
   19c68:	tst	sl, #255	; 0xff
   19c6c:	mov	r7, sl
   19c70:	bne	19c80 <argp_failure@@Base+0x1a54>
   19c74:	cmp	r6, #0
   19c78:	ldrbne	r7, [r6]
   19c7c:	moveq	r7, #0
   19c80:	bl	11bd8 <__ctype_tolower_loc@plt>
   19c84:	ldr	r2, [r0]
   19c88:	uxtb	r0, r7
   19c8c:	uxtb	r1, r5
   19c90:	ldr	r3, [r2, r0, lsl #2]
   19c94:	ldr	r2, [r2, r1, lsl #2]
   19c98:	subs	r4, r2, r3
   19c9c:	subseq	r4, r0, r1
   19ca0:	bne	19890 <argp_failure@@Base+0x1664>
   19ca4:	ldr	r0, [sp, #24]
   19ca8:	uxtb	r4, r0
   19cac:	cmp	r4, #0
   19cb0:	movwne	r4, #1
   19cb4:	tst	sl, #255	; 0xff
   19cb8:	subne	r4, r4, #1
   19cbc:	cmp	r4, #0
   19cc0:	bne	19890 <argp_failure@@Base+0x1664>
   19cc4:	ldr	r0, [sp, #24]
   19cc8:	tst	r0, #255	; 0xff
   19ccc:	beq	19ce0 <argp_failure@@Base+0x1ab4>
   19cd0:	mov	r4, #0
   19cd4:	mov	r0, r4
   19cd8:	sub	sp, fp, #28
   19cdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ce0:	cmp	r9, #0
   19ce4:	mov	r4, r9
   19ce8:	movwne	r4, #1
   19cec:	cmp	r6, #0
   19cf0:	subne	r4, r4, #1
   19cf4:	cmp	r4, #0
   19cf8:	bne	19890 <argp_failure@@Base+0x1664>
   19cfc:	cmp	r9, #0
   19d00:	beq	19cd0 <argp_failure@@Base+0x1aa4>
   19d04:	mov	r0, r9
   19d08:	mov	r1, r6
   19d0c:	bl	11b0c <strcasecmp@plt>
   19d10:	mov	r4, r0
   19d14:	cmp	r0, #0
   19d18:	moveq	r4, #0
   19d1c:	mov	r0, r4
   19d20:	sub	sp, fp, #28
   19d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19d28:	push	{r4, r5, fp, lr}
   19d2c:	add	fp, sp, #8
   19d30:	mov	r4, r1
   19d34:	mov	r5, r0
   19d38:	ldr	r1, [r1, #12]
   19d3c:	ldr	r0, [r0, #12]
   19d40:	cmp	r0, r1
   19d44:	beq	19d54 <argp_failure@@Base+0x1b28>
   19d48:	bl	19d28 <argp_failure@@Base+0x1afc>
   19d4c:	cmp	r0, #0
   19d50:	popne	{r4, r5, fp, pc}
   19d54:	ldr	r1, [r5, #8]
   19d58:	ldr	r2, [r4, #8]
   19d5c:	orr	r0, r2, r1
   19d60:	sub	r3, r1, r2
   19d64:	cmn	r0, #1
   19d68:	mov	r0, r3
   19d6c:	suble	r0, r2, r1
   19d70:	and	r1, r2, r1
   19d74:	cmp	r1, #0
   19d78:	movlt	r0, r3
   19d7c:	cmp	r0, #0
   19d80:	ldreq	r0, [r5, #4]
   19d84:	ldreq	r1, [r4, #4]
   19d88:	subeq	r0, r1, r0
   19d8c:	pop	{r4, r5, fp, pc}
   19d90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   19d94:	add	fp, sp, #24
   19d98:	mov	r8, r0
   19d9c:	ldr	r0, [r1, #12]
   19da0:	mov	r5, r1
   19da4:	cmp	r0, #0
   19da8:	beq	19df8 <argp_failure@@Base+0x1bcc>
   19dac:	ldr	r1, [r5, #8]
   19db0:	ldr	r0, [r5]
   19db4:	ldr	r4, [r1]
   19db8:	ldr	r7, [r0, #16]
   19dbc:	cmp	r4, #0
   19dc0:	ldrne	r1, [r1, #4]
   19dc4:	cmpne	r1, #0
   19dc8:	bne	19ec4 <argp_failure@@Base+0x1c98>
   19dcc:	cmp	r7, #0
   19dd0:	beq	19de8 <argp_failure@@Base+0x1bbc>
   19dd4:	ldr	r0, [r7]
   19dd8:	cmp	r0, #0
   19ddc:	ldrbne	r1, [r0]
   19de0:	cmpne	r1, #0
   19de4:	bne	19f1c <argp_failure@@Base+0x1cf0>
   19de8:	mov	r0, #0
   19dec:	str	r0, [r5, #12]
   19df0:	add	r5, r5, #4
   19df4:	b	19e3c <argp_failure@@Base+0x1c10>
   19df8:	ldr	r6, [r5, #4]!
   19dfc:	ldr	r0, [r6, #28]
   19e00:	ldr	r1, [r6, #32]
   19e04:	add	r2, r0, #2
   19e08:	cmp	r2, r1
   19e0c:	bls	19e28 <argp_failure@@Base+0x1bfc>
   19e10:	mov	r0, r6
   19e14:	mov	r1, #2
   19e18:	bl	1cefc <argp_parse@@Base+0x2cb8>
   19e1c:	cmp	r0, #0
   19e20:	beq	19e3c <argp_failure@@Base+0x1c10>
   19e24:	ldr	r0, [r6, #28]
   19e28:	movw	r1, #8236	; 0x202c
   19e2c:	strh	r1, [r0]
   19e30:	ldr	r0, [r6, #28]
   19e34:	add	r0, r0, #2
   19e38:	str	r0, [r6, #28]
   19e3c:	ldr	r5, [r5]
   19e40:	ldr	r1, [r5, #24]
   19e44:	ldr	r2, [r5, #28]
   19e48:	ldr	r0, [r5, #16]
   19e4c:	sub	r1, r2, r1
   19e50:	cmp	r1, r0
   19e54:	bls	19e60 <argp_failure@@Base+0x1c34>
   19e58:	mov	r0, r5
   19e5c:	bl	1c954 <argp_parse@@Base+0x2710>
   19e60:	ldr	r0, [r5, #20]
   19e64:	bic	r0, r0, r0, asr #31
   19e68:	sub	r1, r8, r0
   19e6c:	cmp	r1, #1
   19e70:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   19e74:	add	r1, r8, #1
   19e78:	mov	r6, #32
   19e7c:	sub	r4, r1, r0
   19e80:	ldr	r0, [r5, #28]
   19e84:	ldr	r1, [r5, #32]
   19e88:	cmp	r0, r1
   19e8c:	bcc	19ea8 <argp_failure@@Base+0x1c7c>
   19e90:	mov	r0, r5
   19e94:	mov	r1, #1
   19e98:	bl	1cefc <argp_parse@@Base+0x2cb8>
   19e9c:	cmp	r0, #0
   19ea0:	beq	19eb4 <argp_failure@@Base+0x1c88>
   19ea4:	ldr	r0, [r5, #28]
   19ea8:	add	r1, r0, #1
   19eac:	str	r1, [r5, #28]
   19eb0:	strb	r6, [r0]
   19eb4:	sub	r4, r4, #1
   19eb8:	cmp	r4, #1
   19ebc:	bgt	19e80 <argp_failure@@Base+0x1c54>
   19ec0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   19ec4:	ldr	r1, [r4, #12]
   19ec8:	ldr	r0, [r0, #12]
   19ecc:	cmp	r0, r1
   19ed0:	beq	19dcc <argp_failure@@Base+0x1ba0>
   19ed4:	ldr	r6, [r5, #4]
   19ed8:	ldr	r0, [r6, #28]
   19edc:	ldr	r1, [r6, #32]
   19ee0:	cmp	r0, r1
   19ee4:	bcc	19f00 <argp_failure@@Base+0x1cd4>
   19ee8:	mov	r0, r6
   19eec:	mov	r1, #1
   19ef0:	bl	1cefc <argp_parse@@Base+0x2cb8>
   19ef4:	cmp	r0, #0
   19ef8:	beq	19dcc <argp_failure@@Base+0x1ba0>
   19efc:	ldr	r0, [r6, #28]
   19f00:	add	r1, r0, #1
   19f04:	str	r1, [r6, #28]
   19f08:	mov	r1, #10
   19f0c:	strb	r1, [r0]
   19f10:	cmp	r7, #0
   19f14:	bne	19dd4 <argp_failure@@Base+0x1ba8>
   19f18:	b	19de8 <argp_failure@@Base+0x1bbc>
   19f1c:	cmp	r4, #0
   19f20:	beq	19f58 <argp_failure@@Base+0x1d2c>
   19f24:	ldr	r1, [r4, #16]
   19f28:	cmp	r1, r7
   19f2c:	beq	19de8 <argp_failure@@Base+0x1bbc>
   19f30:	cmp	r1, #0
   19f34:	beq	19f4c <argp_failure@@Base+0x1d20>
   19f38:	ldr	r1, [r1, #12]
   19f3c:	cmp	r1, r7
   19f40:	cmpne	r1, #0
   19f44:	bne	19f38 <argp_failure@@Base+0x1d0c>
   19f48:	b	19f50 <argp_failure@@Base+0x1d24>
   19f4c:	mov	r1, #0
   19f50:	cmp	r1, r7
   19f54:	beq	19de8 <argp_failure@@Base+0x1bbc>
   19f58:	ldr	r1, [r5, #4]
   19f5c:	mov	r2, r5
   19f60:	ldr	r4, [r1, #12]
   19f64:	ldr	r1, [r7, #16]
   19f68:	bl	19f98 <argp_failure@@Base+0x1d6c>
   19f6c:	ldr	r6, [r5, #4]
   19f70:	ldr	r1, [r6, #24]
   19f74:	ldr	r2, [r6, #28]
   19f78:	ldr	r0, [r6, #16]
   19f7c:	sub	r1, r2, r1
   19f80:	cmp	r1, r0
   19f84:	bls	19f90 <argp_failure@@Base+0x1d64>
   19f88:	mov	r0, r6
   19f8c:	bl	1c954 <argp_parse@@Base+0x2710>
   19f90:	str	r4, [r6, #12]
   19f94:	b	19de8 <argp_failure@@Base+0x1bbc>
   19f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f9c:	add	fp, sp, #28
   19fa0:	sub	sp, sp, #4
   19fa4:	mov	r9, r2
   19fa8:	mov	r8, r0
   19fac:	cmp	r1, #0
   19fb0:	mov	r6, r0
   19fb4:	beq	19ff4 <argp_failure@@Base+0x1dc8>
   19fb8:	ldr	r0, [r1, #20]
   19fbc:	mov	r4, r1
   19fc0:	mov	r6, r8
   19fc4:	cmp	r0, #0
   19fc8:	beq	19ff4 <argp_failure@@Base+0x1dc8>
   19fcc:	ldr	r1, [r9, #16]
   19fd0:	mov	r0, r4
   19fd4:	bl	1af14 <argp_parse@@Base+0xcd0>
   19fd8:	ldr	r3, [r4, #20]
   19fdc:	mov	r2, r0
   19fe0:	movw	r0, #3
   19fe4:	mov	r1, r8
   19fe8:	movt	r0, #512	; 0x200
   19fec:	blx	r3
   19ff0:	mov	r6, r0
   19ff4:	cmp	r6, #0
   19ff8:	beq	1a228 <argp_failure@@Base+0x1ffc>
   19ffc:	ldrb	r0, [r6]
   1a000:	cmp	r0, #0
   1a004:	beq	1a21c <argp_failure@@Base+0x1ff0>
   1a008:	ldr	r0, [r9, #8]
   1a00c:	ldr	r0, [r0]
   1a010:	cmp	r0, #0
   1a014:	beq	1a054 <argp_failure@@Base+0x1e28>
   1a018:	ldr	r4, [r9, #4]
   1a01c:	ldr	r0, [r4, #28]
   1a020:	ldr	r1, [r4, #32]
   1a024:	cmp	r0, r1
   1a028:	bcc	1a044 <argp_failure@@Base+0x1e18>
   1a02c:	mov	r0, r4
   1a030:	mov	r1, #1
   1a034:	bl	1cefc <argp_parse@@Base+0x2cb8>
   1a038:	cmp	r0, #0
   1a03c:	beq	1a054 <argp_failure@@Base+0x1e28>
   1a040:	ldr	r0, [r4, #28]
   1a044:	add	r1, r0, #1
   1a048:	str	r1, [r4, #28]
   1a04c:	mov	r1, #10
   1a050:	strb	r1, [r0]
   1a054:	ldr	r7, [r9, #4]
   1a058:	movw	sl, #1424	; 0x590
   1a05c:	movt	sl, #3
   1a060:	ldr	r4, [sl, #24]
   1a064:	ldr	r1, [r7, #24]
   1a068:	ldr	r2, [r7, #28]
   1a06c:	ldr	r0, [r7, #16]
   1a070:	sub	r1, r2, r1
   1a074:	cmp	r1, r0
   1a078:	bls	1a084 <argp_failure@@Base+0x1e58>
   1a07c:	mov	r0, r7
   1a080:	bl	1c954 <argp_parse@@Base+0x2710>
   1a084:	ldr	r0, [r7, #20]
   1a088:	bic	r0, r0, r0, asr #31
   1a08c:	sub	r1, r4, r0
   1a090:	cmp	r1, #1
   1a094:	blt	1a0e4 <argp_failure@@Base+0x1eb8>
   1a098:	add	r1, r4, #1
   1a09c:	mov	r5, #32
   1a0a0:	sub	r4, r1, r0
   1a0a4:	ldr	r0, [r7, #28]
   1a0a8:	ldr	r1, [r7, #32]
   1a0ac:	cmp	r0, r1
   1a0b0:	bcc	1a0cc <argp_failure@@Base+0x1ea0>
   1a0b4:	mov	r0, r7
   1a0b8:	mov	r1, #1
   1a0bc:	bl	1cefc <argp_parse@@Base+0x2cb8>
   1a0c0:	cmp	r0, #0
   1a0c4:	beq	1a0d8 <argp_failure@@Base+0x1eac>
   1a0c8:	ldr	r0, [r7, #28]
   1a0cc:	add	r1, r0, #1
   1a0d0:	str	r1, [r7, #28]
   1a0d4:	strb	r5, [r0]
   1a0d8:	sub	r4, r4, #1
   1a0dc:	cmp	r4, #1
   1a0e0:	bgt	1a0a4 <argp_failure@@Base+0x1e78>
   1a0e4:	ldr	r4, [r9, #4]
   1a0e8:	ldr	r5, [sl, #24]
   1a0ec:	ldr	r1, [r4, #24]
   1a0f0:	ldr	r2, [r4, #28]
   1a0f4:	ldr	r0, [r4, #16]
   1a0f8:	mov	r7, r4
   1a0fc:	sub	r1, r2, r1
   1a100:	mov	r2, sl
   1a104:	mov	sl, r5
   1a108:	cmp	r1, r0
   1a10c:	bls	1a134 <argp_failure@@Base+0x1f08>
   1a110:	mov	r0, r4
   1a114:	mov	r7, r2
   1a118:	bl	1c954 <argp_parse@@Base+0x2710>
   1a11c:	ldr	sl, [r7, #24]
   1a120:	ldr	r7, [r9, #4]
   1a124:	ldr	r1, [r7, #24]
   1a128:	ldr	r2, [r7, #28]
   1a12c:	ldr	r0, [r7, #16]
   1a130:	sub	r1, r2, r1
   1a134:	str	r5, [r4, #4]
   1a138:	cmp	r1, r0
   1a13c:	mov	r5, r7
   1a140:	bls	1a150 <argp_failure@@Base+0x1f24>
   1a144:	mov	r0, r7
   1a148:	bl	1c954 <argp_parse@@Base+0x2710>
   1a14c:	ldr	r5, [r9, #4]
   1a150:	mov	r0, r6
   1a154:	str	sl, [r7, #12]
   1a158:	bl	11c20 <strlen@plt>
   1a15c:	cmp	r0, #0
   1a160:	beq	1a1ac <argp_failure@@Base+0x1f80>
   1a164:	mov	r4, r0
   1a168:	ldr	r0, [r5, #28]
   1a16c:	ldr	r1, [r5, #32]
   1a170:	add	r2, r0, r4
   1a174:	cmp	r2, r1
   1a178:	bls	1a194 <argp_failure@@Base+0x1f68>
   1a17c:	mov	r0, r5
   1a180:	mov	r1, r4
   1a184:	bl	1cefc <argp_parse@@Base+0x2cb8>
   1a188:	cmp	r0, #0
   1a18c:	beq	1a1ac <argp_failure@@Base+0x1f80>
   1a190:	ldr	r0, [r5, #28]
   1a194:	mov	r1, r6
   1a198:	mov	r2, r4
   1a19c:	bl	11a58 <memcpy@plt>
   1a1a0:	ldr	r0, [r5, #28]
   1a1a4:	add	r0, r0, r4
   1a1a8:	str	r0, [r5, #28]
   1a1ac:	ldr	r4, [r9, #4]
   1a1b0:	mov	r5, r4
   1a1b4:	ldr	r2, [r4, #24]
   1a1b8:	ldr	r0, [r4, #16]
   1a1bc:	ldr	r1, [r5, #28]!
   1a1c0:	sub	r2, r1, r2
   1a1c4:	cmp	r2, r0
   1a1c8:	mov	r0, r4
   1a1cc:	bls	1a1e4 <argp_failure@@Base+0x1fb8>
   1a1d0:	mov	r0, r4
   1a1d4:	bl	1c954 <argp_parse@@Base+0x2710>
   1a1d8:	ldr	r0, [r9, #4]
   1a1dc:	mov	r5, r0
   1a1e0:	ldr	r1, [r5, #28]!
   1a1e4:	mov	r2, #0
   1a1e8:	str	r2, [r4, #4]
   1a1ec:	ldr	r2, [r0, #32]
   1a1f0:	cmp	r1, r2
   1a1f4:	bcc	1a20c <argp_failure@@Base+0x1fe0>
   1a1f8:	mov	r1, #1
   1a1fc:	bl	1cefc <argp_parse@@Base+0x2cb8>
   1a200:	cmp	r0, #0
   1a204:	beq	1a21c <argp_failure@@Base+0x1ff0>
   1a208:	ldr	r1, [r5]
   1a20c:	add	r0, r1, #1
   1a210:	str	r0, [r5]
   1a214:	mov	r0, #10
   1a218:	strb	r0, [r1]
   1a21c:	ldr	r0, [r9, #8]
   1a220:	mov	r1, #1
   1a224:	str	r1, [r0, #4]
   1a228:	cmp	r6, r8
   1a22c:	subeq	sp, fp, #28
   1a230:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a234:	mov	r0, r6
   1a238:	sub	sp, fp, #28
   1a23c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a240:	b	1b7d4 <argp_parse@@Base+0x1590>

0001a244 <argp_parse@@Base>:
   1a244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a248:	add	fp, sp, #28
   1a24c:	sub	sp, sp, #212	; 0xd4
   1a250:	mov	r5, r3
   1a254:	mov	r6, r2
   1a258:	mov	r7, r1
   1a25c:	mov	r4, r0
   1a260:	tst	r3, #1
   1a264:	bne	1a294 <argp_parse@@Base+0x50>
   1a268:	movw	r0, #1492	; 0x5d4
   1a26c:	movw	r8, #1488	; 0x5d0
   1a270:	movt	r0, #3
   1a274:	movt	r8, #3
   1a278:	ldr	r1, [r0]
   1a27c:	cmp	r1, #0
   1a280:	ldreq	r1, [r6]
   1a284:	streq	r1, [r0]
   1a288:	ldr	r0, [r8]
   1a28c:	cmp	r0, #0
   1a290:	beq	1a348 <argp_parse@@Base+0x104>
   1a294:	tst	r5, #16
   1a298:	str	r6, [fp, #-228]	; 0xffffff1c
   1a29c:	bne	1a360 <argp_parse@@Base+0x11c>
   1a2a0:	mov	r1, sp
   1a2a4:	sub	r3, r1, #64	; 0x40
   1a2a8:	mov	sp, r3
   1a2ac:	mov	r2, sp
   1a2b0:	sub	r0, r2, #32
   1a2b4:	mov	sp, r0
   1a2b8:	vmov.i32	q8, #0	; 0x00000000
   1a2bc:	sub	r2, r2, #20
   1a2c0:	cmp	r4, #0
   1a2c4:	vst1.32	{d16-d17}, [r2]
   1a2c8:	mov	r2, r0
   1a2cc:	vst1.64	{d16-d17}, [r2]!
   1a2d0:	str	r3, [r2]
   1a2d4:	sub	r2, r1, #32
   1a2d8:	sub	r1, r1, #48	; 0x30
   1a2dc:	vst1.64	{d16-d17}, [r2]
   1a2e0:	vst1.64	{d16-d17}, [r1]
   1a2e4:	mov	r1, #48	; 0x30
   1a2e8:	mov	r2, r3
   1a2ec:	vst1.64	{d16-d17}, [r2], r1
   1a2f0:	vst1.64	{d16-d17}, [r2]
   1a2f4:	movw	r2, #63088	; 0xf670
   1a2f8:	strne	r4, [r3], #16
   1a2fc:	movt	r2, #1
   1a300:	mov	r1, r3
   1a304:	str	r2, [r1], #16
   1a308:	movw	r2, #4248	; 0x1098
   1a30c:	movt	r2, #3
   1a310:	ldr	r2, [r2]
   1a314:	cmp	r2, #0
   1a318:	movweq	r2, #2572	; 0xa0c
   1a31c:	movteq	r2, #3
   1a320:	ldreq	r2, [r2]
   1a324:	cmpeq	r2, #0
   1a328:	beq	1a33c <argp_parse@@Base+0xf8>
   1a32c:	movw	r2, #63116	; 0xf68c
   1a330:	mov	r3, r1
   1a334:	movt	r2, #1
   1a338:	str	r2, [r1]
   1a33c:	mov	r1, #0
   1a340:	str	r1, [r3, #16]
   1a344:	b	1a364 <argp_parse@@Base+0x120>
   1a348:	ldr	r0, [r6]
   1a34c:	bl	1b55c <argp_parse@@Base+0x1318>
   1a350:	str	r0, [r8]
   1a354:	tst	r5, #16
   1a358:	str	r6, [fp, #-228]	; 0xffffff1c
   1a35c:	beq	1a2a0 <argp_parse@@Base+0x5c>
   1a360:	mov	r0, r4
   1a364:	sub	r9, fp, #96	; 0x60
   1a368:	str	r7, [fp, #-232]	; 0xffffff18
   1a36c:	vmov.i32	q8, #0	; 0x00000000
   1a370:	mov	r7, #12
   1a374:	mov	r4, #0
   1a378:	cmp	r0, #0
   1a37c:	str	r5, [fp, #-224]	; 0xffffff20
   1a380:	str	r0, [fp, #-236]	; 0xffffff14
   1a384:	mov	r1, r9
   1a388:	vst1.64	{d16-d17}, [r1], r7
   1a38c:	vst1.32	{d16-d17}, [r1]
   1a390:	mov	r1, #1
   1a394:	bic	r3, r1, r5, lsr #2
   1a398:	str	r3, [fp, #-64]	; 0xffffffc0
   1a39c:	str	r4, [fp, #-60]	; 0xffffffc4
   1a3a0:	str	r4, [fp, #-56]	; 0xffffffc8
   1a3a4:	str	r4, [fp, #-52]	; 0xffffffcc
   1a3a8:	beq	1a3e0 <argp_parse@@Base+0x19c>
   1a3ac:	sub	r1, fp, #64	; 0x40
   1a3b0:	bl	1b12c <argp_parse@@Base+0xee8>
   1a3b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a3b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1a3bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1a3c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a3c4:	mov	r6, #16
   1a3c8:	add	r1, r6, r1, lsl #4
   1a3cc:	add	r2, r2, r2, lsl #3
   1a3d0:	mov	r6, #36	; 0x24
   1a3d4:	lsl	r4, r0, #2
   1a3d8:	add	r8, r6, r2, lsl #2
   1a3dc:	b	1a3e8 <argp_parse@@Base+0x1a4>
   1a3e0:	mov	r8, #36	; 0x24
   1a3e4:	mov	r1, #16
   1a3e8:	add	r5, r8, r4
   1a3ec:	add	sl, r5, r1
   1a3f0:	add	r0, r3, sl
   1a3f4:	add	r0, r0, #1
   1a3f8:	bl	1c80c <argp_parse@@Base+0x25c8>
   1a3fc:	cmp	r0, #0
   1a400:	str	r0, [fp, #-100]	; 0xffffff9c
   1a404:	beq	1ae9c <argp_parse@@Base+0xc58>
   1a408:	mov	r6, r0
   1a40c:	mov	r0, #12
   1a410:	sub	r1, fp, #220	; 0xdc
   1a414:	mov	r2, r4
   1a418:	vld1.64	{d16-d17}, [r9], r0
   1a41c:	add	r0, r1, #20
   1a420:	add	r7, r6, r8
   1a424:	add	r8, r6, r5
   1a428:	add	r5, r6, sl
   1a42c:	vld1.32	{d18-d19}, [r9]
   1a430:	vst1.32	{d16-d17}, [r0]
   1a434:	add	r0, r1, #32
   1a438:	mov	r9, r1
   1a43c:	mov	r1, #0
   1a440:	vst1.32	{d18-d19}, [r0]
   1a444:	mov	r0, #1
   1a448:	str	r6, [fp, #-172]	; 0xffffff54
   1a44c:	str	r0, [fp, #-208]	; 0xffffff30
   1a450:	str	r0, [fp, #-204]	; 0xffffff34
   1a454:	mov	r0, r7
   1a458:	str	r7, [fp, #-164]	; 0xffffff5c
   1a45c:	str	r8, [fp, #-212]	; 0xffffff2c
   1a460:	str	r5, [fp, #-216]	; 0xffffff28
   1a464:	bl	11c8c <memset@plt>
   1a468:	str	r5, [fp, #-44]	; 0xffffffd4
   1a46c:	str	r9, [fp, #-48]	; 0xffffffd0
   1a470:	ldr	r9, [fp, #-224]	; 0xffffff20
   1a474:	mov	r0, #45	; 0x2d
   1a478:	str	r8, [fp, #-40]	; 0xffffffd8
   1a47c:	str	r7, [fp, #-36]	; 0xffffffdc
   1a480:	tst	r9, #8
   1a484:	moveq	r0, #43	; 0x2b
   1a488:	tsteq	r9, #4
   1a48c:	beq	1aab4 <argp_parse@@Base+0x870>
   1a490:	add	r1, r5, #1
   1a494:	strb	r0, [r5]
   1a498:	str	r1, [fp, #-44]	; 0xffffffd4
   1a49c:	ldr	r0, [fp, #-236]	; 0xffffff14
   1a4a0:	ldr	sl, [fp, #-228]	; 0xffffff1c
   1a4a4:	mov	r5, #0
   1a4a8:	strb	r5, [r1]
   1a4ac:	str	r5, [r8]
   1a4b0:	cmp	r0, #0
   1a4b4:	str	r0, [fp, #-220]	; 0xffffff24
   1a4b8:	beq	1a4f0 <argp_parse@@Base+0x2ac>
   1a4bc:	sub	sp, sp, #8
   1a4c0:	sub	r1, fp, #48	; 0x30
   1a4c4:	mov	r2, #0
   1a4c8:	mov	r3, r6
   1a4cc:	str	r1, [sp]
   1a4d0:	mov	r1, #0
   1a4d4:	bl	1b214 <argp_parse@@Base+0xfd0>
   1a4d8:	add	sp, sp, #8
   1a4dc:	str	r0, [fp, #-168]	; 0xffffff58
   1a4e0:	mov	r6, r0
   1a4e4:	ldr	r5, [fp, #-220]	; 0xffffff24
   1a4e8:	ldr	r4, [fp, #-172]	; 0xffffff54
   1a4ec:	b	1a4f8 <argp_parse@@Base+0x2b4>
   1a4f0:	mov	r4, r6
   1a4f4:	str	r6, [fp, #-168]	; 0xffffff58
   1a4f8:	ldr	r3, [fp, #-232]	; 0xffffff18
   1a4fc:	sub	r1, fp, #220	; 0xdc
   1a500:	mov	r7, #0
   1a504:	vmov.i32	q8, #0	; 0x00000000
   1a508:	mov	r0, #1
   1a50c:	mov	r8, sl
   1a510:	cmp	r4, r6
   1a514:	mov	r2, r1
   1a518:	add	r1, r1, #84	; 0x54
   1a51c:	str	r7, [fp, #-116]	; 0xffffff8c
   1a520:	str	r7, [fp, #-120]	; 0xffffff88
   1a524:	vst1.32	{d16-d17}, [r1]
   1a528:	str	r5, [fp, #-156]	; 0xffffff64
   1a52c:	str	r3, [fp, #-152]	; 0xffffff68
   1a530:	str	sl, [fp, #-148]	; 0xffffff6c
   1a534:	str	r9, [fp, #-140]	; 0xffffff74
   1a538:	str	r7, [fp, #-144]	; 0xffffff70
   1a53c:	str	r2, [fp, #-104]	; 0xffffff98
   1a540:	str	r0, [fp, #-160]	; 0xffffff60
   1a544:	movw	r0, #1496	; 0x5d8
   1a548:	add	sl, r2, #64	; 0x40
   1a54c:	movt	r0, #3
   1a550:	ldr	r0, [r0]
   1a554:	str	r0, [fp, #-112]	; 0xffffff90
   1a558:	movw	r0, #1500	; 0x5dc
   1a55c:	movt	r0, #3
   1a560:	ldr	r0, [r0]
   1a564:	str	r0, [fp, #-108]	; 0xffffff94
   1a568:	bcs	1a65c <argp_parse@@Base+0x418>
   1a56c:	ldr	r0, [fp, #12]
   1a570:	str	r0, [r4, #24]
   1a574:	cmp	r7, #7
   1a578:	cmpne	r7, #0
   1a57c:	bne	1ae9c <argp_parse@@Base+0xc58>
   1a580:	ldr	r0, [r4, #16]
   1a584:	cmp	r0, #0
   1a588:	ldrne	r1, [r4, #20]
   1a58c:	ldrne	r0, [r0, #28]
   1a590:	ldrne	r0, [r0, r1, lsl #2]
   1a594:	strne	r0, [r4, #24]
   1a598:	ldr	r3, [r4]
   1a59c:	cmp	r3, #0
   1a5a0:	beq	1a600 <argp_parse@@Base+0x3bc>
   1a5a4:	add	r0, r4, #28
   1a5a8:	ldr	r1, [r4, #32]
   1a5ac:	mov	r2, sl
   1a5b0:	str	r1, [fp, #-120]	; 0xffffff88
   1a5b4:	ldr	r1, [r4, #24]
   1a5b8:	str	r1, [fp, #-128]	; 0xffffff80
   1a5bc:	mov	r1, #0
   1a5c0:	ldr	r0, [r0]
   1a5c4:	str	r0, [fp, #-124]	; 0xffffff84
   1a5c8:	ldr	r0, [r4, #12]
   1a5cc:	str	r0, [fp, #-136]	; 0xffffff78
   1a5d0:	movw	r0, #6
   1a5d4:	movt	r0, #256	; 0x100
   1a5d8:	sub	r0, r0, #3
   1a5dc:	blx	r3
   1a5e0:	mov	r7, r0
   1a5e4:	ldr	r0, [fp, #-120]	; 0xffffff88
   1a5e8:	str	r0, [r4, #32]
   1a5ec:	ldr	r0, [fp, #-168]	; 0xffffff58
   1a5f0:	add	r4, r4, #36	; 0x24
   1a5f4:	cmp	r4, r0
   1a5f8:	bcc	1a574 <argp_parse@@Base+0x330>
   1a5fc:	b	1a650 <argp_parse@@Base+0x40c>
   1a600:	ldr	r0, [r4, #4]
   1a604:	mov	r7, #7
   1a608:	ldr	r0, [r0, #16]
   1a60c:	cmp	r0, #0
   1a610:	ldrne	r0, [r0]
   1a614:	cmpne	r0, #0
   1a618:	bne	1a630 <argp_parse@@Base+0x3ec>
   1a61c:	ldr	r0, [fp, #-168]	; 0xffffff58
   1a620:	add	r4, r4, #36	; 0x24
   1a624:	cmp	r4, r0
   1a628:	bcc	1a574 <argp_parse@@Base+0x330>
   1a62c:	b	1a650 <argp_parse@@Base+0x40c>
   1a630:	mov	r0, r4
   1a634:	ldr	r2, [r4, #24]
   1a638:	ldr	r1, [r0, #28]!
   1a63c:	str	r2, [r1]
   1a640:	ldr	r3, [r4]
   1a644:	cmp	r3, #0
   1a648:	bne	1a5a8 <argp_parse@@Base+0x364>
   1a64c:	b	1a61c <argp_parse@@Base+0x3d8>
   1a650:	cmp	r7, #7
   1a654:	cmpne	r7, #0
   1a658:	bne	1ae9c <argp_parse@@Base+0xc58>
   1a65c:	ldr	r0, [fp, #-140]	; 0xffffff74
   1a660:	tst	r0, #2
   1a664:	bne	1a690 <argp_parse@@Base+0x44c>
   1a668:	mov	r0, #1
   1a66c:	str	r0, [fp, #-204]	; 0xffffff34
   1a670:	ldr	r0, [fp, #-148]	; 0xffffff6c
   1a674:	cmp	r0, r8
   1a678:	bne	1a6c4 <argp_parse@@Base+0x480>
   1a67c:	ldr	r0, [r8]
   1a680:	cmp	r0, #0
   1a684:	beq	1a6c4 <argp_parse@@Base+0x480>
   1a688:	bl	1b55c <argp_parse@@Base+0x1318>
   1a68c:	b	1a6d0 <argp_parse@@Base+0x48c>
   1a690:	mov	r1, #0
   1a694:	tst	r0, #1
   1a698:	str	r1, [fp, #-204]	; 0xffffff34
   1a69c:	beq	1a6b8 <argp_parse@@Base+0x474>
   1a6a0:	ldr	r0, [fp, #-152]	; 0xffffff68
   1a6a4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1a6a8:	sub	r1, r1, #4
   1a6ac:	add	r0, r0, #1
   1a6b0:	str	r1, [fp, #-148]	; 0xffffff6c
   1a6b4:	str	r0, [fp, #-152]	; 0xffffff68
   1a6b8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   1a6bc:	cmp	r0, r8
   1a6c0:	beq	1a67c <argp_parse@@Base+0x438>
   1a6c4:	movw	r0, #1488	; 0x5d0
   1a6c8:	movt	r0, #3
   1a6cc:	ldr	r0, [r0]
   1a6d0:	str	r0, [fp, #-116]	; 0xffffff8c
   1a6d4:	sub	r0, fp, #220	; 0xdc
   1a6d8:	mov	r8, #0
   1a6dc:	add	r6, r0, #12
   1a6e0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1a6e4:	cmp	r0, #0
   1a6e8:	beq	1a6fc <argp_parse@@Base+0x4b8>
   1a6ec:	ldr	r9, [fp, #-144]	; 0xffffff70
   1a6f0:	cmp	r9, r0
   1a6f4:	bge	1a7b0 <argp_parse@@Base+0x56c>
   1a6f8:	str	r8, [fp, #-132]	; 0xffffff7c
   1a6fc:	ldr	r0, [fp, #-160]	; 0xffffff60
   1a700:	ldr	r9, [fp, #-144]	; 0xffffff70
   1a704:	cmp	r0, #0
   1a708:	beq	1a7b0 <argp_parse@@Base+0x56c>
   1a70c:	mvn	r0, #0
   1a710:	str	r0, [fp, #-200]	; 0xffffff38
   1a714:	str	r9, [fp, #-208]	; 0xffffff30
   1a718:	ldr	r2, [fp, #-216]	; 0xffffff28
   1a71c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   1a720:	ldr	r0, [fp, #-152]	; 0xffffff68
   1a724:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1a728:	ldrb	r7, [fp, #-140]	; 0xffffff74
   1a72c:	sub	sp, sp, #8
   1a730:	tst	r7, #64	; 0x40
   1a734:	bne	1a748 <argp_parse@@Base+0x504>
   1a738:	str	r8, [sp]
   1a73c:	str	r6, [sp, #4]
   1a740:	bl	1b828 <argp_parse@@Base+0x15e4>
   1a744:	b	1a754 <argp_parse@@Base+0x510>
   1a748:	str	r8, [sp]
   1a74c:	str	r6, [sp, #4]
   1a750:	bl	1b88c <argp_parse@@Base+0x1648>
   1a754:	add	sp, sp, #8
   1a758:	ldr	r9, [fp, #-208]	; 0xffffff30
   1a75c:	mov	r7, r0
   1a760:	cmn	r0, #1
   1a764:	str	r9, [fp, #-144]	; 0xffffff70
   1a768:	beq	1a784 <argp_parse@@Base+0x540>
   1a76c:	cmp	r7, #63	; 0x3f
   1a770:	beq	1a960 <argp_parse@@Base+0x71c>
   1a774:	cmp	r7, #1
   1a778:	bne	1a970 <argp_parse@@Base+0x72c>
   1a77c:	ldr	r7, [fp, #-196]	; 0xffffff3c
   1a780:	b	1a7e8 <argp_parse@@Base+0x5a4>
   1a784:	cmp	r9, #2
   1a788:	str	r8, [fp, #-160]	; 0xffffff60
   1a78c:	blt	1a7b0 <argp_parse@@Base+0x56c>
   1a790:	ldr	r0, [fp, #-148]	; 0xffffff6c
   1a794:	movw	r1, #59836	; 0xe9bc
   1a798:	movt	r1, #1
   1a79c:	add	r0, r0, r9, lsl #2
   1a7a0:	ldr	r0, [r0, #-4]
   1a7a4:	bl	11998 <strcmp@plt>
   1a7a8:	cmp	r0, #0
   1a7ac:	streq	r9, [fp, #-132]	; 0xffffff7c
   1a7b0:	ldr	r2, [fp, #-152]	; 0xffffff68
   1a7b4:	mov	r1, #1
   1a7b8:	mov	r0, #7
   1a7bc:	cmp	r9, r2
   1a7c0:	bge	1aad8 <argp_parse@@Base+0x894>
   1a7c4:	ldrb	r2, [fp, #-140]	; 0xffffff74
   1a7c8:	tst	r2, #4
   1a7cc:	bne	1aad8 <argp_parse@@Base+0x894>
   1a7d0:	add	r0, r9, #1
   1a7d4:	str	r0, [fp, #-144]	; 0xffffff70
   1a7d8:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1a7dc:	ldr	r7, [r1, r9, lsl #2]
   1a7e0:	mov	r9, r0
   1a7e4:	str	r7, [fp, #-196]	; 0xffffff3c
   1a7e8:	sub	r0, r9, #1
   1a7ec:	str	r0, [fp, #-144]	; 0xffffff70
   1a7f0:	ldr	r1, [fp, #-172]	; 0xffffff54
   1a7f4:	ldr	r2, [fp, #-168]	; 0xffffff58
   1a7f8:	cmp	r1, r2
   1a7fc:	bcs	1aabc <argp_parse@@Base+0x878>
   1a800:	add	r4, r1, #24
   1a804:	b	1a810 <argp_parse@@Base+0x5cc>
   1a808:	ldr	r0, [fp, #-144]	; 0xffffff70
   1a80c:	add	r4, r4, #36	; 0x24
   1a810:	add	r1, r0, #1
   1a814:	str	r1, [fp, #-144]	; 0xffffff70
   1a818:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1a81c:	cmp	r3, #0
   1a820:	beq	1a8c0 <argp_parse@@Base+0x67c>
   1a824:	ldr	r0, [r4, #8]
   1a828:	mov	r1, r7
   1a82c:	mov	r2, sl
   1a830:	mov	r5, #0
   1a834:	str	r0, [fp, #-120]	; 0xffffff88
   1a838:	ldr	r0, [r4]
   1a83c:	str	r0, [fp, #-128]	; 0xffffff80
   1a840:	ldr	r0, [r4, #4]
   1a844:	str	r0, [fp, #-124]	; 0xffffff84
   1a848:	ldr	r0, [r4, #-12]
   1a84c:	str	r0, [fp, #-136]	; 0xffffff78
   1a850:	mov	r0, #0
   1a854:	blx	r3
   1a858:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a85c:	cmp	r0, #7
   1a860:	str	r1, [r4, #8]
   1a864:	bne	1a8e8 <argp_parse@@Base+0x6a4>
   1a868:	ldr	r0, [fp, #-144]	; 0xffffff70
   1a86c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1a870:	sub	r0, r0, #1
   1a874:	cmp	r3, #0
   1a878:	str	r0, [fp, #-144]	; 0xffffff70
   1a87c:	beq	1a8c4 <argp_parse@@Base+0x680>
   1a880:	ldr	r0, [r4]
   1a884:	mov	r1, #0
   1a888:	mov	r2, sl
   1a88c:	str	r0, [fp, #-128]	; 0xffffff80
   1a890:	ldr	r0, [r4, #4]
   1a894:	str	r0, [fp, #-124]	; 0xffffff84
   1a898:	ldr	r0, [r4, #-12]
   1a89c:	str	r0, [fp, #-136]	; 0xffffff78
   1a8a0:	movw	r0, #6
   1a8a4:	movt	r0, #256	; 0x100
   1a8a8:	blx	r3
   1a8ac:	ldr	r1, [fp, #-120]	; 0xffffff88
   1a8b0:	str	r1, [r4, #8]
   1a8b4:	cmp	r0, #7
   1a8b8:	beq	1a8d0 <argp_parse@@Base+0x68c>
   1a8bc:	b	1a8e0 <argp_parse@@Base+0x69c>
   1a8c0:	str	r0, [fp, #-144]	; 0xffffff70
   1a8c4:	mov	r0, #7
   1a8c8:	cmp	r0, #7
   1a8cc:	bne	1a8e0 <argp_parse@@Base+0x69c>
   1a8d0:	ldr	r2, [fp, #-168]	; 0xffffff58
   1a8d4:	add	r1, r4, #12
   1a8d8:	cmp	r1, r2
   1a8dc:	bcc	1a808 <argp_parse@@Base+0x5c4>
   1a8e0:	movw	r5, #6
   1a8e4:	movt	r5, #256	; 0x100
   1a8e8:	cmp	r0, #0
   1a8ec:	beq	1a904 <argp_parse@@Base+0x6c0>
   1a8f0:	cmp	r0, #7
   1a8f4:	beq	1aabc <argp_parse@@Base+0x878>
   1a8f8:	cmp	r0, #0
   1a8fc:	beq	1a6e0 <argp_parse@@Base+0x49c>
   1a900:	b	1ad10 <argp_parse@@Base+0xacc>
   1a904:	movw	r0, #6
   1a908:	movt	r0, #256	; 0x100
   1a90c:	cmp	r5, r0
   1a910:	ldreq	r0, [fp, #-152]	; 0xffffff68
   1a914:	streq	r0, [fp, #-144]	; 0xffffff70
   1a918:	ldrne	r0, [fp, #-144]	; 0xffffff70
   1a91c:	cmp	r0, r9
   1a920:	bge	1a93c <argp_parse@@Base+0x6f8>
   1a924:	mov	r0, #1
   1a928:	str	r0, [fp, #-160]	; 0xffffff60
   1a92c:	mov	r0, #0
   1a930:	cmp	r0, #0
   1a934:	beq	1a6e0 <argp_parse@@Base+0x49c>
   1a938:	b	1ad10 <argp_parse@@Base+0xacc>
   1a93c:	rsb	r1, r9, #1
   1a940:	add	r0, r1, r0
   1a944:	ldr	r1, [r4, #-12]
   1a948:	add	r0, r0, r1
   1a94c:	str	r0, [r4, #-12]
   1a950:	mov	r0, #0
   1a954:	cmp	r0, #0
   1a958:	beq	1a6e0 <argp_parse@@Base+0x49c>
   1a95c:	b	1ad10 <argp_parse@@Base+0xacc>
   1a960:	ldr	r0, [fp, #-200]	; 0xffffff38
   1a964:	cmn	r0, #1
   1a968:	beq	1a9e8 <argp_parse@@Base+0x7a4>
   1a96c:	b	1aedc <argp_parse@@Base+0xc98>
   1a970:	cmp	r8, r7, asr #24
   1a974:	beq	1a9e8 <argp_parse@@Base+0x7a4>
   1a978:	ldr	r1, [fp, #-172]	; 0xffffff54
   1a97c:	asr	r0, r7, #24
   1a980:	sub	r0, r0, #1
   1a984:	add	r0, r0, r0, lsl #3
   1a988:	ldr	r3, [r1, r0, lsl #2]
   1a98c:	cmp	r3, #0
   1a990:	beq	1aea8 <argp_parse@@Base+0xc64>
   1a994:	add	r4, r1, r0, lsl #2
   1a998:	tst	r7, #8388608	; 0x800000
   1a99c:	mov	r2, sl
   1a9a0:	ldr	r0, [r4, #32]!
   1a9a4:	str	r0, [fp, #-120]	; 0xffffff88
   1a9a8:	ldr	r0, [r4, #-8]
   1a9ac:	str	r0, [fp, #-128]	; 0xffffff80
   1a9b0:	ldr	r0, [r4, #-4]
   1a9b4:	str	r0, [fp, #-124]	; 0xffffff84
   1a9b8:	ldr	r0, [r4, #-20]	; 0xffffffec
   1a9bc:	str	r0, [fp, #-136]	; 0xffffff78
   1a9c0:	bic	r0, r7, #-16777216	; 0xff000000
   1a9c4:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1a9c8:	orrne	r0, r0, #-16777216	; 0xff000000
   1a9cc:	blx	r3
   1a9d0:	mov	r1, #0
   1a9d4:	ldr	r2, [fp, #-120]	; 0xffffff88
   1a9d8:	cmp	r0, #7
   1a9dc:	str	r2, [r4]
   1a9e0:	bne	1a8f8 <argp_parse@@Base+0x6b4>
   1a9e4:	b	1aa88 <argp_parse@@Base+0x844>
   1a9e8:	ldr	r0, [fp, #-216]	; 0xffffff28
   1a9ec:	mov	r1, r7
   1a9f0:	bl	11c38 <strchr@plt>
   1a9f4:	cmp	r0, #0
   1a9f8:	beq	1aa90 <argp_parse@@Base+0x84c>
   1a9fc:	ldr	r1, [fp, #-172]	; 0xffffff54
   1aa00:	ldr	r2, [fp, #-168]	; 0xffffff58
   1aa04:	cmp	r1, r2
   1aa08:	bcs	1aa90 <argp_parse@@Base+0x84c>
   1aa0c:	add	r1, r1, #24
   1aa10:	ldr	r3, [r1, #-16]
   1aa14:	cmp	r3, r0
   1aa18:	bhi	1aa34 <argp_parse@@Base+0x7f0>
   1aa1c:	add	r3, r1, #36	; 0x24
   1aa20:	add	r1, r1, #12
   1aa24:	cmp	r1, r2
   1aa28:	mov	r1, r3
   1aa2c:	bcc	1aa10 <argp_parse@@Base+0x7cc>
   1aa30:	b	1aa90 <argp_parse@@Base+0x84c>
   1aa34:	ldr	r3, [r1, #-24]	; 0xffffffe8
   1aa38:	cmp	r3, #0
   1aa3c:	beq	1aa90 <argp_parse@@Base+0x84c>
   1aa40:	mov	r4, r1
   1aa44:	mov	r2, sl
   1aa48:	ldr	r0, [r4, #8]!
   1aa4c:	str	r0, [fp, #-120]	; 0xffffff88
   1aa50:	ldr	r0, [r1]
   1aa54:	str	r0, [fp, #-128]	; 0xffffff80
   1aa58:	ldr	r0, [r1, #4]
   1aa5c:	str	r0, [fp, #-124]	; 0xffffff84
   1aa60:	ldr	r0, [r1, #-12]
   1aa64:	str	r0, [fp, #-136]	; 0xffffff78
   1aa68:	mov	r0, r7
   1aa6c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   1aa70:	blx	r3
   1aa74:	mov	r1, #1
   1aa78:	ldr	r2, [fp, #-120]	; 0xffffff88
   1aa7c:	cmp	r0, #7
   1aa80:	str	r2, [r4]
   1aa84:	bne	1a8f8 <argp_parse@@Base+0x6b4>
   1aa88:	cmp	r1, #0
   1aa8c:	beq	1aea8 <argp_parse@@Base+0xc64>
   1aa90:	movw	r1, #63571	; 0xf853
   1aa94:	movw	r3, #63312	; 0xf750
   1aa98:	mov	r0, sl
   1aa9c:	mov	r2, r7
   1aaa0:	movt	r1, #1
   1aaa4:	movt	r3, #1
   1aaa8:	bl	180b8 <argp_error@@Base>
   1aaac:	mov	r0, #0
   1aab0:	b	1aac4 <argp_parse@@Base+0x880>
   1aab4:	mov	r1, r5
   1aab8:	b	1a49c <argp_parse@@Base+0x258>
   1aabc:	mov	r7, #1
   1aac0:	mov	r0, #1
   1aac4:	add	r1, r7, #1
   1aac8:	clz	r1, r1
   1aacc:	lsr	r1, r1, #5
   1aad0:	orr	r1, r1, r0
   1aad4:	mov	r0, #7
   1aad8:	subs	r7, r0, #7
   1aadc:	movne	r7, r0
   1aae0:	cmp	r1, #0
   1aae4:	moveq	r7, r0
   1aae8:	cmp	r7, #0
   1aaec:	beq	1ab9c <argp_parse@@Base+0x958>
   1aaf0:	cmp	r7, #0
   1aaf4:	beq	1ad60 <argp_parse@@Base+0xb1c>
   1aaf8:	cmp	r7, #7
   1aafc:	bne	1ab14 <argp_parse@@Base+0x8d0>
   1ab00:	ldr	r1, [fp, #-112]	; 0xffffff90
   1ab04:	mov	r0, sl
   1ab08:	mov	r2, #260	; 0x104
   1ab0c:	bl	17ffc <argp_state_help@@Base>
   1ab10:	mov	r7, #7
   1ab14:	ldr	r4, [fp, #-172]	; 0xffffff54
   1ab18:	ldr	r0, [fp, #-168]	; 0xffffff58
   1ab1c:	cmp	r4, r0
   1ab20:	bcs	1ae1c <argp_parse@@Base+0xbd8>
   1ab24:	movw	r1, #6
   1ab28:	movt	r1, #256	; 0x100
   1ab2c:	sub	r6, r1, #1
   1ab30:	ldr	r3, [r4]
   1ab34:	cmp	r3, #0
   1ab38:	beq	1ab78 <argp_parse@@Base+0x934>
   1ab3c:	ldr	r0, [r4, #32]
   1ab40:	mov	r1, #0
   1ab44:	mov	r2, sl
   1ab48:	str	r0, [fp, #-120]	; 0xffffff88
   1ab4c:	ldr	r0, [r4, #24]
   1ab50:	str	r0, [fp, #-128]	; 0xffffff80
   1ab54:	ldr	r0, [r4, #28]
   1ab58:	str	r0, [fp, #-124]	; 0xffffff84
   1ab5c:	ldr	r0, [r4, #12]
   1ab60:	str	r0, [fp, #-136]	; 0xffffff78
   1ab64:	mov	r0, r6
   1ab68:	blx	r3
   1ab6c:	ldr	r0, [fp, #-120]	; 0xffffff88
   1ab70:	str	r0, [r4, #32]
   1ab74:	ldr	r0, [fp, #-168]	; 0xffffff58
   1ab78:	add	r4, r4, #36	; 0x24
   1ab7c:	cmp	r4, r0
   1ab80:	bcc	1ab30 <argp_parse@@Base+0x8ec>
   1ab84:	ldr	r4, [fp, #-172]	; 0xffffff54
   1ab88:	ldr	r0, [fp, #-168]	; 0xffffff58
   1ab8c:	sub	r6, r0, #36	; 0x24
   1ab90:	cmp	r6, r4
   1ab94:	bcs	1ae2c <argp_parse@@Base+0xbe8>
   1ab98:	b	1ae8c <argp_parse@@Base+0xc48>
   1ab9c:	ldr	r1, [fp, #-152]	; 0xffffff68
   1aba0:	ldr	r0, [fp, #-144]	; 0xffffff70
   1aba4:	cmp	r0, r1
   1aba8:	bne	1acfc <argp_parse@@Base+0xab8>
   1abac:	ldr	r4, [fp, #-172]	; 0xffffff54
   1abb0:	ldr	r1, [fp, #-168]	; 0xffffff58
   1abb4:	mov	r0, #0
   1abb8:	cmp	r4, r1
   1abbc:	bcs	1ac64 <argp_parse@@Base+0xa20>
   1abc0:	movw	r0, #6
   1abc4:	mov	r7, #0
   1abc8:	movt	r0, #256	; 0x100
   1abcc:	sub	r6, r0, #4
   1abd0:	mov	r0, #0
   1abd4:	cmp	r0, #7
   1abd8:	cmpne	r0, #0
   1abdc:	bne	1ac60 <argp_parse@@Base+0xa1c>
   1abe0:	ldr	r2, [r4, #12]
   1abe4:	cmp	r2, #0
   1abe8:	beq	1abfc <argp_parse@@Base+0x9b8>
   1abec:	add	r4, r4, #36	; 0x24
   1abf0:	cmp	r4, r1
   1abf4:	bcc	1abd4 <argp_parse@@Base+0x990>
   1abf8:	b	1ac60 <argp_parse@@Base+0xa1c>
   1abfc:	ldr	r3, [r4]
   1ac00:	cmp	r3, #0
   1ac04:	beq	1ac50 <argp_parse@@Base+0xa0c>
   1ac08:	ldr	r0, [r4, #32]
   1ac0c:	mov	r1, #0
   1ac10:	mov	r2, sl
   1ac14:	str	r0, [fp, #-120]	; 0xffffff88
   1ac18:	ldr	r0, [r4, #24]
   1ac1c:	str	r0, [fp, #-128]	; 0xffffff80
   1ac20:	ldr	r0, [r4, #28]
   1ac24:	str	r7, [fp, #-136]	; 0xffffff78
   1ac28:	str	r0, [fp, #-124]	; 0xffffff84
   1ac2c:	mov	r0, r6
   1ac30:	blx	r3
   1ac34:	ldr	r1, [fp, #-120]	; 0xffffff88
   1ac38:	str	r1, [r4, #32]
   1ac3c:	ldr	r1, [fp, #-168]	; 0xffffff58
   1ac40:	add	r4, r4, #36	; 0x24
   1ac44:	cmp	r4, r1
   1ac48:	bcc	1abd4 <argp_parse@@Base+0x990>
   1ac4c:	b	1ac60 <argp_parse@@Base+0xa1c>
   1ac50:	mov	r0, #7
   1ac54:	add	r4, r4, #36	; 0x24
   1ac58:	cmp	r4, r1
   1ac5c:	bcc	1abd4 <argp_parse@@Base+0x990>
   1ac60:	ldr	r4, [fp, #-172]	; 0xffffff54
   1ac64:	sub	r7, r1, #36	; 0x24
   1ac68:	cmp	r7, r4
   1ac6c:	bcc	1acf0 <argp_parse@@Base+0xaac>
   1ac70:	movw	r1, #6
   1ac74:	movt	r1, #256	; 0x100
   1ac78:	sub	r6, r1, #5
   1ac7c:	cmp	r0, #7
   1ac80:	cmpne	r0, #0
   1ac84:	bne	1ad44 <argp_parse@@Base+0xb00>
   1ac88:	ldr	r3, [r7]
   1ac8c:	cmp	r3, #0
   1ac90:	beq	1ace0 <argp_parse@@Base+0xa9c>
   1ac94:	ldr	r0, [r7, #32]
   1ac98:	mov	r1, #0
   1ac9c:	mov	r2, sl
   1aca0:	str	r0, [fp, #-120]	; 0xffffff88
   1aca4:	ldr	r0, [r7, #24]
   1aca8:	str	r0, [fp, #-128]	; 0xffffff80
   1acac:	ldr	r0, [r7, #28]
   1acb0:	str	r0, [fp, #-124]	; 0xffffff84
   1acb4:	ldr	r0, [r7, #12]
   1acb8:	str	r0, [fp, #-136]	; 0xffffff78
   1acbc:	mov	r0, r6
   1acc0:	blx	r3
   1acc4:	ldr	r1, [fp, #-120]	; 0xffffff88
   1acc8:	str	r1, [r7, #32]
   1accc:	ldr	r4, [fp, #-172]	; 0xffffff54
   1acd0:	sub	r7, r7, #36	; 0x24
   1acd4:	cmp	r7, r4
   1acd8:	bcs	1ac7c <argp_parse@@Base+0xa38>
   1acdc:	b	1acf0 <argp_parse@@Base+0xaac>
   1ace0:	mov	r0, #7
   1ace4:	sub	r7, r7, #36	; 0x24
   1ace8:	cmp	r7, r4
   1acec:	bcs	1ac7c <argp_parse@@Base+0xa38>
   1acf0:	subs	r7, r0, #7
   1acf4:	movne	r7, r0
   1acf8:	b	1ad48 <argp_parse@@Base+0xb04>
   1acfc:	ldr	r1, [fp, #8]
   1ad00:	cmp	r1, #0
   1ad04:	beq	1ad18 <argp_parse@@Base+0xad4>
   1ad08:	str	r0, [r1]
   1ad0c:	b	1ad60 <argp_parse@@Base+0xb1c>
   1ad10:	mov	r1, #0
   1ad14:	b	1aad8 <argp_parse@@Base+0x894>
   1ad18:	ldrb	r0, [fp, #-140]	; 0xffffff74
   1ad1c:	tst	r0, #2
   1ad20:	bne	1ab00 <argp_parse@@Base+0x8bc>
   1ad24:	ldr	r0, [fp, #-112]	; 0xffffff90
   1ad28:	cmp	r0, #0
   1ad2c:	beq	1ab00 <argp_parse@@Base+0x8bc>
   1ad30:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1ad34:	movw	r1, #63588	; 0xf864
   1ad38:	movt	r1, #1
   1ad3c:	bl	11c44 <fprintf@plt>
   1ad40:	b	1ab00 <argp_parse@@Base+0x8bc>
   1ad44:	mov	r7, r0
   1ad48:	ldr	r1, [fp, #8]
   1ad4c:	cmp	r1, #0
   1ad50:	ldrne	r0, [fp, #-144]	; 0xffffff70
   1ad54:	strne	r0, [r1]
   1ad58:	cmp	r7, #0
   1ad5c:	bne	1aaf8 <argp_parse@@Base+0x8b4>
   1ad60:	ldr	r0, [fp, #-168]	; 0xffffff58
   1ad64:	ldr	r4, [fp, #-172]	; 0xffffff54
   1ad68:	mov	r7, #0
   1ad6c:	sub	r5, r0, #36	; 0x24
   1ad70:	cmp	r5, r4
   1ad74:	bcc	1ae1c <argp_parse@@Base+0xbd8>
   1ad78:	movw	r1, #6
   1ad7c:	mov	r0, #0
   1ad80:	movt	r1, #256	; 0x100
   1ad84:	sub	r6, r1, #2
   1ad88:	cmp	r0, #7
   1ad8c:	cmpne	r0, #0
   1ad90:	bne	1ae18 <argp_parse@@Base+0xbd4>
   1ad94:	ldr	r3, [r5]
   1ad98:	cmp	r3, #0
   1ad9c:	beq	1adec <argp_parse@@Base+0xba8>
   1ada0:	ldr	r0, [r5, #32]
   1ada4:	mov	r1, #0
   1ada8:	mov	r2, sl
   1adac:	str	r0, [fp, #-120]	; 0xffffff88
   1adb0:	ldr	r0, [r5, #24]
   1adb4:	str	r0, [fp, #-128]	; 0xffffff80
   1adb8:	ldr	r0, [r5, #28]
   1adbc:	str	r0, [fp, #-124]	; 0xffffff84
   1adc0:	ldr	r0, [r5, #12]
   1adc4:	str	r0, [fp, #-136]	; 0xffffff78
   1adc8:	mov	r0, r6
   1adcc:	blx	r3
   1add0:	ldr	r1, [fp, #-120]	; 0xffffff88
   1add4:	str	r1, [r5, #32]
   1add8:	ldr	r4, [fp, #-172]	; 0xffffff54
   1addc:	sub	r5, r5, #36	; 0x24
   1ade0:	cmp	r5, r4
   1ade4:	bcs	1ad88 <argp_parse@@Base+0xb44>
   1ade8:	b	1adfc <argp_parse@@Base+0xbb8>
   1adec:	mov	r0, #7
   1adf0:	sub	r5, r5, #36	; 0x24
   1adf4:	cmp	r5, r4
   1adf8:	bcs	1ad88 <argp_parse@@Base+0xb44>
   1adfc:	subs	r7, r0, #7
   1ae00:	movne	r7, r0
   1ae04:	ldr	r0, [fp, #-168]	; 0xffffff58
   1ae08:	sub	r6, r0, #36	; 0x24
   1ae0c:	cmp	r6, r4
   1ae10:	bcs	1ae2c <argp_parse@@Base+0xbe8>
   1ae14:	b	1ae8c <argp_parse@@Base+0xc48>
   1ae18:	mov	r7, r0
   1ae1c:	ldr	r0, [fp, #-168]	; 0xffffff58
   1ae20:	sub	r6, r0, #36	; 0x24
   1ae24:	cmp	r6, r4
   1ae28:	bcc	1ae8c <argp_parse@@Base+0xc48>
   1ae2c:	movw	r0, #6
   1ae30:	movt	r0, #256	; 0x100
   1ae34:	add	r5, r0, #1
   1ae38:	ldr	r3, [r6]
   1ae3c:	cmp	r3, #0
   1ae40:	beq	1ae80 <argp_parse@@Base+0xc3c>
   1ae44:	ldr	r0, [r6, #32]
   1ae48:	mov	r1, #0
   1ae4c:	mov	r2, sl
   1ae50:	str	r0, [fp, #-120]	; 0xffffff88
   1ae54:	ldr	r0, [r6, #24]
   1ae58:	str	r0, [fp, #-128]	; 0xffffff80
   1ae5c:	ldr	r0, [r6, #28]
   1ae60:	str	r0, [fp, #-124]	; 0xffffff84
   1ae64:	ldr	r0, [r6, #12]
   1ae68:	str	r0, [fp, #-136]	; 0xffffff78
   1ae6c:	mov	r0, r5
   1ae70:	blx	r3
   1ae74:	ldr	r0, [fp, #-120]	; 0xffffff88
   1ae78:	str	r0, [r6, #32]
   1ae7c:	ldr	r4, [fp, #-172]	; 0xffffff54
   1ae80:	sub	r6, r6, #36	; 0x24
   1ae84:	cmp	r6, r4
   1ae88:	bcs	1ae38 <argp_parse@@Base+0xbf4>
   1ae8c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1ae90:	bl	1b7d4 <argp_parse@@Base+0x1590>
   1ae94:	cmp	r7, #7
   1ae98:	movweq	r7, #22
   1ae9c:	mov	r0, r7
   1aea0:	sub	sp, fp, #28
   1aea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aea8:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1aeac:	ldr	r1, [r0, #12]
   1aeb0:	cmp	r1, r7
   1aeb4:	beq	1aee4 <argp_parse@@Base+0xca0>
   1aeb8:	ldr	r1, [r0]
   1aebc:	cmp	r1, #0
   1aec0:	beq	1aee4 <argp_parse@@Base+0xca0>
   1aec4:	add	r1, r0, #16
   1aec8:	ldr	r0, [r0, #28]
   1aecc:	cmp	r0, r7
   1aed0:	mov	r0, r1
   1aed4:	bne	1aeb8 <argp_parse@@Base+0xc74>
   1aed8:	b	1aee8 <argp_parse@@Base+0xca4>
   1aedc:	mov	r1, #0
   1aee0:	b	1aad4 <argp_parse@@Base+0x890>
   1aee4:	mov	r1, r0
   1aee8:	ldr	r0, [r1]
   1aeec:	movw	r2, #59768	; 0xe978
   1aef0:	movw	r1, #63579	; 0xf85b
   1aef4:	movw	r3, #63312	; 0xf750
   1aef8:	movt	r2, #1
   1aefc:	movt	r1, #1
   1af00:	movt	r3, #1
   1af04:	cmp	r0, #0
   1af08:	movne	r2, r0
   1af0c:	mov	r0, sl
   1af10:	b	1aaa8 <argp_parse@@Base+0x864>
   1af14:	mov	ip, r0
   1af18:	mov	r0, #0
   1af1c:	cmp	r1, #0
   1af20:	beq	1af50 <argp_parse@@Base+0xd0c>
   1af24:	ldr	r3, [r1, #52]	; 0x34
   1af28:	ldr	r1, [r3, #48]	; 0x30
   1af2c:	ldr	r3, [r3, #52]	; 0x34
   1af30:	b	1af38 <argp_parse@@Base+0xcf4>
   1af34:	add	r1, r1, #36	; 0x24
   1af38:	cmp	r1, r3
   1af3c:	bxcs	lr
   1af40:	ldr	r2, [r1, #4]
   1af44:	cmp	r2, ip
   1af48:	bne	1af34 <argp_parse@@Base+0xcf0>
   1af4c:	ldr	r0, [r1, #24]
   1af50:	bx	lr
   1af54:	push	{r4, r5, r6, sl, fp, lr}
   1af58:	add	fp, sp, #16
   1af5c:	mov	r5, r2
   1af60:	mov	r6, r1
   1af64:	mov	r4, #7
   1af68:	cmn	r0, #3
   1af6c:	bgt	1af9c <argp_parse@@Base+0xd58>
   1af70:	cmn	r0, #4
   1af74:	beq	1afc8 <argp_parse@@Base+0xd84>
   1af78:	cmn	r0, #3
   1af7c:	bne	1b020 <argp_parse@@Base+0xddc>
   1af80:	ldr	r1, [r5, #48]	; 0x30
   1af84:	mov	r0, r5
   1af88:	movw	r2, #513	; 0x201
   1af8c:	bl	17ffc <argp_state_help@@Base>
   1af90:	mov	r4, #0
   1af94:	mov	r0, r4
   1af98:	pop	{r4, r5, r6, sl, fp, pc}
   1af9c:	cmn	r0, #2
   1afa0:	beq	1b028 <argp_parse@@Base+0xde4>
   1afa4:	cmp	r0, #63	; 0x3f
   1afa8:	bne	1b020 <argp_parse@@Base+0xddc>
   1afac:	ldr	r1, [r5, #48]	; 0x30
   1afb0:	mov	r0, r5
   1afb4:	movw	r2, #634	; 0x27a
   1afb8:	bl	17ffc <argp_state_help@@Base>
   1afbc:	mov	r4, #0
   1afc0:	mov	r0, r4
   1afc4:	pop	{r4, r5, r6, sl, fp, pc}
   1afc8:	movw	r0, #63509	; 0xf815
   1afcc:	cmp	r6, #0
   1afd0:	mov	r1, #0
   1afd4:	mov	r2, #10
   1afd8:	mov	r4, #0
   1afdc:	movt	r0, #1
   1afe0:	movne	r0, r6
   1afe4:	bl	119a4 <strtol@plt>
   1afe8:	movw	r5, #2568	; 0xa08
   1afec:	movt	r5, #3
   1aff0:	str	r0, [r5]
   1aff4:	ldr	r0, [r5]
   1aff8:	subs	r0, r0, #1
   1affc:	str	r0, [r5]
   1b000:	blt	1b020 <argp_parse@@Base+0xddc>
   1b004:	mov	r0, #1
   1b008:	bl	11a88 <sleep@plt>
   1b00c:	ldr	r0, [r5]
   1b010:	sub	r1, r0, #1
   1b014:	cmp	r0, #0
   1b018:	str	r1, [r5]
   1b01c:	bgt	1b004 <argp_parse@@Base+0xdc0>
   1b020:	mov	r0, r4
   1b024:	pop	{r4, r5, r6, sl, fp, pc}
   1b028:	movw	r0, #1492	; 0x5d4
   1b02c:	movt	r0, #3
   1b030:	str	r6, [r0]
   1b034:	mov	r0, r6
   1b038:	bl	1b55c <argp_parse@@Base+0x1318>
   1b03c:	movw	r1, #1488	; 0x5d0
   1b040:	str	r0, [r5, #40]	; 0x28
   1b044:	mov	r4, #0
   1b048:	movt	r1, #3
   1b04c:	str	r0, [r1]
   1b050:	ldr	r0, [r5, #16]
   1b054:	and	r0, r0, #3
   1b058:	cmp	r0, #1
   1b05c:	ldreq	r0, [r5, #8]
   1b060:	streq	r6, [r0]
   1b064:	moveq	r0, r4
   1b068:	popeq	{r4, r5, r6, sl, fp, pc}
   1b06c:	mov	r0, r4
   1b070:	pop	{r4, r5, r6, sl, fp, pc}
   1b074:	push	{r4, sl, fp, lr}
   1b078:	add	fp, sp, #8
   1b07c:	mov	r1, r0
   1b080:	mov	r0, #7
   1b084:	cmp	r1, #86	; 0x56
   1b088:	popne	{r4, sl, fp, pc}
   1b08c:	movw	r0, #2572	; 0xa0c
   1b090:	mov	r4, r2
   1b094:	movt	r0, #3
   1b098:	ldr	r2, [r0]
   1b09c:	cmp	r2, #0
   1b0a0:	beq	1b0c4 <argp_parse@@Base+0xe80>
   1b0a4:	ldr	r0, [r4, #48]	; 0x30
   1b0a8:	mov	r1, r4
   1b0ac:	blx	r2
   1b0b0:	ldrb	r1, [r4, #16]
   1b0b4:	mov	r0, #0
   1b0b8:	tst	r1, #32
   1b0bc:	beq	1b0f8 <argp_parse@@Base+0xeb4>
   1b0c0:	pop	{r4, sl, fp, pc}
   1b0c4:	movw	r0, #4248	; 0x1098
   1b0c8:	movt	r0, #3
   1b0cc:	ldr	r2, [r0]
   1b0d0:	cmp	r2, #0
   1b0d4:	beq	1b100 <argp_parse@@Base+0xebc>
   1b0d8:	ldr	r0, [r4, #48]	; 0x30
   1b0dc:	movw	r1, #63715	; 0xf8e3
   1b0e0:	movt	r1, #1
   1b0e4:	bl	11c44 <fprintf@plt>
   1b0e8:	ldrb	r1, [r4, #16]
   1b0ec:	mov	r0, #0
   1b0f0:	tst	r1, #32
   1b0f4:	bne	1b0c0 <argp_parse@@Base+0xe7c>
   1b0f8:	mov	r0, #0
   1b0fc:	bl	11c14 <exit@plt>
   1b100:	movw	r1, #62404	; 0xf3c4
   1b104:	movw	r2, #63536	; 0xf830
   1b108:	mov	r0, r4
   1b10c:	movt	r1, #1
   1b110:	movt	r2, #1
   1b114:	bl	180b8 <argp_error@@Base>
   1b118:	ldrb	r1, [r4, #16]
   1b11c:	mov	r0, #0
   1b120:	tst	r1, #32
   1b124:	bne	1b0c0 <argp_parse@@Base+0xe7c>
   1b128:	b	1b0f8 <argp_parse@@Base+0xeb4>
   1b12c:	push	{r4, r5, fp, lr}
   1b130:	add	fp, sp, #8
   1b134:	ldr	r2, [r0]
   1b138:	ldr	ip, [r0, #16]
   1b13c:	mov	r4, r1
   1b140:	cmp	r2, #0
   1b144:	beq	1b1bc <argp_parse@@Base+0xf78>
   1b148:	ldr	r0, [r4, #8]
   1b14c:	mov	r3, #0
   1b150:	add	r0, r0, #1
   1b154:	str	r0, [r4, #8]
   1b158:	mov	r0, #0
   1b15c:	add	r5, r2, r3, lsl #3
   1b160:	ldr	r1, [r5, #4]
   1b164:	cmp	r1, #0
   1b168:	beq	1b184 <argp_parse@@Base+0xf40>
   1b16c:	add	r3, r3, #3
   1b170:	add	r0, r0, #1
   1b174:	add	r5, r2, r3, lsl #3
   1b178:	ldr	r1, [r5, #4]
   1b17c:	cmp	r1, #0
   1b180:	bne	1b16c <argp_parse@@Base+0xf28>
   1b184:	ldr	r1, [r2, r3, lsl #3]
   1b188:	cmp	r1, #0
   1b18c:	bne	1b16c <argp_parse@@Base+0xf28>
   1b190:	ldr	r1, [r5, #16]
   1b194:	cmp	r1, #0
   1b198:	bne	1b16c <argp_parse@@Base+0xf28>
   1b19c:	ldr	r1, [r5, #20]
   1b1a0:	cmp	r1, #0
   1b1a4:	bne	1b16c <argp_parse@@Base+0xf28>
   1b1a8:	ldr	r1, [r4]
   1b1ac:	mov	r2, r4
   1b1b0:	add	r1, r1, r3
   1b1b4:	str	r1, [r2], #4
   1b1b8:	b	1b1d0 <argp_parse@@Base+0xf8c>
   1b1bc:	ldr	r0, [r0, #4]
   1b1c0:	cmp	r0, #0
   1b1c4:	beq	1b1dc <argp_parse@@Base+0xf98>
   1b1c8:	add	r2, r4, #8
   1b1cc:	mov	r0, #1
   1b1d0:	ldr	r1, [r2]
   1b1d4:	add	r0, r1, r0
   1b1d8:	str	r0, [r2]
   1b1dc:	cmp	ip, #0
   1b1e0:	ldrne	r0, [ip]
   1b1e4:	cmpne	r0, #0
   1b1e8:	beq	1b210 <argp_parse@@Base+0xfcc>
   1b1ec:	add	r5, ip, #16
   1b1f0:	mov	r1, r4
   1b1f4:	bl	1b12c <argp_parse@@Base+0xee8>
   1b1f8:	ldr	r0, [r4, #12]
   1b1fc:	add	r0, r0, #1
   1b200:	str	r0, [r4, #12]
   1b204:	ldr	r0, [r5], #16
   1b208:	cmp	r0, #0
   1b20c:	bne	1b1f0 <argp_parse@@Base+0xfac>
   1b210:	pop	{r4, r5, fp, pc}
   1b214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b218:	add	fp, sp, #28
   1b21c:	sub	sp, sp, #28
   1b220:	ldr	r7, [r0]
   1b224:	mov	r6, r3
   1b228:	mov	r3, r1
   1b22c:	ldr	r5, [r0, #16]
   1b230:	ldr	r1, [fp, #8]
   1b234:	cmp	r7, #0
   1b238:	beq	1b420 <argp_parse@@Base+0x11dc>
   1b23c:	str	r0, [sp, #8]
   1b240:	add	r0, sp, #16
   1b244:	add	r8, r1, #4
   1b248:	mov	r9, r7
   1b24c:	str	r3, [sp, #12]
   1b250:	stm	r0, {r2, r5, r6}
   1b254:	ldr	r4, [r9, #4]
   1b258:	cmp	r4, #0
   1b25c:	bne	1b298 <argp_parse@@Base+0x1054>
   1b260:	b	1b274 <argp_parse@@Base+0x1030>
   1b264:	add	r9, r9, #24
   1b268:	ldr	r4, [r9, #4]
   1b26c:	cmp	r4, #0
   1b270:	bne	1b298 <argp_parse@@Base+0x1054>
   1b274:	ldr	r0, [r9]
   1b278:	cmp	r0, #0
   1b27c:	bne	1b298 <argp_parse@@Base+0x1054>
   1b280:	ldr	r0, [r9, #16]
   1b284:	cmp	r0, #0
   1b288:	bne	1b298 <argp_parse@@Base+0x1054>
   1b28c:	ldr	r0, [r9, #20]
   1b290:	cmp	r0, #0
   1b294:	beq	1b408 <argp_parse@@Base+0x11c4>
   1b298:	ldr	r0, [r9, #12]
   1b29c:	mov	r5, #0
   1b2a0:	tst	r0, #4
   1b2a4:	moveq	r7, r9
   1b2a8:	ldrb	r1, [r7, #12]
   1b2ac:	tst	r1, #8
   1b2b0:	bne	1b264 <argp_parse@@Base+0x1020>
   1b2b4:	sub	r1, r4, #1
   1b2b8:	cmp	r1, #254	; 0xfe
   1b2bc:	bhi	1b338 <argp_parse@@Base+0x10f4>
   1b2c0:	ands	r0, r0, #8
   1b2c4:	bne	1b338 <argp_parse@@Base+0x10f4>
   1b2c8:	bl	11bfc <__ctype_b_loc@plt>
   1b2cc:	ldr	r0, [r0]
   1b2d0:	add	r0, r0, r4, lsl #1
   1b2d4:	ldrb	r0, [r0, #1]
   1b2d8:	tst	r0, #64	; 0x40
   1b2dc:	beq	1b338 <argp_parse@@Base+0x10f4>
   1b2e0:	ldr	r0, [r8]
   1b2e4:	add	r1, r0, #1
   1b2e8:	str	r1, [r8]
   1b2ec:	strb	r4, [r0]
   1b2f0:	ldr	r0, [r7, #8]
   1b2f4:	cmp	r0, #0
   1b2f8:	beq	1b330 <argp_parse@@Base+0x10ec>
   1b2fc:	ldr	r0, [r8]
   1b300:	add	r1, r0, #1
   1b304:	str	r1, [r8]
   1b308:	mov	r1, #58	; 0x3a
   1b30c:	strb	r1, [r0]
   1b310:	ldrb	r0, [r7, #12]
   1b314:	tst	r0, #1
   1b318:	beq	1b330 <argp_parse@@Base+0x10ec>
   1b31c:	ldr	r0, [r8]
   1b320:	add	r1, r0, #1
   1b324:	str	r1, [r8]
   1b328:	mov	r1, #58	; 0x3a
   1b32c:	strb	r1, [r0]
   1b330:	ldr	r0, [r8]
   1b334:	strb	r5, [r0]
   1b338:	ldr	r5, [r9]
   1b33c:	cmp	r5, #0
   1b340:	beq	1b264 <argp_parse@@Base+0x1020>
   1b344:	ldr	r0, [fp, #8]
   1b348:	ldr	r4, [r0]
   1b34c:	ldr	sl, [r4, #8]
   1b350:	ldr	r0, [sl]
   1b354:	cmp	r0, #0
   1b358:	beq	1b38c <argp_parse@@Base+0x1148>
   1b35c:	mov	r6, sl
   1b360:	mov	r1, r5
   1b364:	bl	11998 <strcmp@plt>
   1b368:	cmp	r0, #0
   1b36c:	beq	1b380 <argp_parse@@Base+0x113c>
   1b370:	ldr	r0, [r6, #16]!
   1b374:	cmp	r0, #0
   1b378:	bne	1b360 <argp_parse@@Base+0x111c>
   1b37c:	b	1b38c <argp_parse@@Base+0x1148>
   1b380:	sub	r0, r6, sl
   1b384:	cmn	r0, #1
   1b388:	bgt	1b264 <argp_parse@@Base+0x1020>
   1b38c:	ldr	r6, [fp, #8]
   1b390:	ldr	r0, [r6, #8]
   1b394:	str	r5, [r0]
   1b398:	ldr	r1, [r7, #8]
   1b39c:	cmp	r1, #0
   1b3a0:	beq	1b3b8 <argp_parse@@Base+0x1174>
   1b3a4:	ldrb	r1, [r7, #12]
   1b3a8:	tst	r1, #1
   1b3ac:	mov	r1, #2
   1b3b0:	movweq	r1, #1
   1b3b4:	b	1b3bc <argp_parse@@Base+0x1178>
   1b3b8:	mov	r1, #0
   1b3bc:	mov	r5, #0
   1b3c0:	stmib	r0, {r1, r5}
   1b3c4:	ldr	r1, [r9, #4]
   1b3c8:	ldr	r3, [sp, #24]
   1b3cc:	ldr	r2, [r4, #48]	; 0x30
   1b3d0:	cmp	r1, #0
   1b3d4:	sub	r2, r3, r2
   1b3d8:	mov	r3, #956301312	; 0x39000000
   1b3dc:	ldreq	r1, [r7, #4]
   1b3e0:	lsr	r2, r2, #2
   1b3e4:	mul	r2, r2, r3
   1b3e8:	add	r2, r2, #16777216	; 0x1000000
   1b3ec:	bic	r1, r1, #-16777216	; 0xff000000
   1b3f0:	orr	r1, r2, r1
   1b3f4:	str	r1, [r0, #12]
   1b3f8:	add	r1, r0, #16
   1b3fc:	str	r1, [r6, #8]
   1b400:	str	r5, [r0, #16]
   1b404:	b	1b264 <argp_parse@@Base+0x1020>
   1b408:	ldr	r0, [sp, #8]
   1b40c:	add	r6, sp, #16
   1b410:	ldr	r7, [r0, #4]
   1b414:	ldm	r6, {r2, r5, r6}
   1b418:	ldr	r3, [sp, #12]
   1b41c:	b	1b434 <argp_parse@@Base+0x11f0>
   1b420:	ldr	r7, [r0, #4]
   1b424:	cmp	r7, #0
   1b428:	beq	1b4dc <argp_parse@@Base+0x1298>
   1b42c:	ldr	r1, [fp, #8]
   1b430:	add	r8, r1, #4
   1b434:	str	r0, [r6, #4]
   1b438:	str	r7, [r6]
   1b43c:	mov	r0, #0
   1b440:	cmp	r5, #0
   1b444:	ldr	r1, [r8]
   1b448:	str	r0, [r6, #12]
   1b44c:	str	r3, [r6, #16]
   1b450:	str	r2, [r6, #20]
   1b454:	str	r0, [r6, #24]
   1b458:	str	r0, [r6, #32]
   1b45c:	str	r0, [r6, #28]
   1b460:	str	r1, [r6, #8]
   1b464:	beq	1b494 <argp_parse@@Base+0x1250>
   1b468:	ldr	r1, [r5, r0, lsl #2]
   1b46c:	add	r0, r0, #4
   1b470:	cmp	r1, #0
   1b474:	bne	1b468 <argp_parse@@Base+0x1224>
   1b478:	ldr	r1, [fp, #8]
   1b47c:	mov	r2, r1
   1b480:	ldr	r1, [r1, #12]
   1b484:	add	r0, r1, r0
   1b488:	str	r1, [r6, #28]
   1b48c:	sub	r0, r0, #4
   1b490:	str	r0, [r2, #12]
   1b494:	add	r3, r6, #36	; 0x24
   1b498:	cmp	r5, #0
   1b49c:	ldrne	r0, [r5]
   1b4a0:	cmpne	r0, #0
   1b4a4:	beq	1b4f4 <argp_parse@@Base+0x12b0>
   1b4a8:	ldr	r7, [fp, #8]
   1b4ac:	add	r4, r5, #16
   1b4b0:	mov	r5, #0
   1b4b4:	mov	r1, r6
   1b4b8:	mov	r2, r5
   1b4bc:	str	r7, [sp]
   1b4c0:	bl	1b214 <argp_parse@@Base+0xfd0>
   1b4c4:	mov	r3, r0
   1b4c8:	ldr	r0, [r4, r5, lsl #4]
   1b4cc:	add	r5, r5, #1
   1b4d0:	cmp	r0, #0
   1b4d4:	bne	1b4b4 <argp_parse@@Base+0x1270>
   1b4d8:	b	1b4f4 <argp_parse@@Base+0x12b0>
   1b4dc:	mov	r3, r6
   1b4e0:	mov	r6, #0
   1b4e4:	cmp	r5, #0
   1b4e8:	ldrne	r0, [r5]
   1b4ec:	cmpne	r0, #0
   1b4f0:	bne	1b4a8 <argp_parse@@Base+0x1264>
   1b4f4:	mov	r0, r3
   1b4f8:	sub	sp, fp, #28
   1b4fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b500:	movw	r2, #2576	; 0xa10
   1b504:	movw	ip, #2572	; 0xa0c
   1b508:	movw	r3, #46372	; 0xb524
   1b50c:	movt	r2, #3
   1b510:	movt	ip, #3
   1b514:	movt	r3, #1
   1b518:	str	r3, [ip]
   1b51c:	stm	r2, {r0, r1}
   1b520:	bx	lr
   1b524:	push	{fp, lr}
   1b528:	mov	fp, sp
   1b52c:	sub	sp, sp, #8
   1b530:	movw	r2, #2576	; 0xa10
   1b534:	movw	r3, #63626	; 0xf88a
   1b538:	movt	r2, #3
   1b53c:	movt	r3, #1
   1b540:	ldm	r2, {r1, r2}
   1b544:	str	r2, [sp]
   1b548:	movw	r2, #63612	; 0xf87c
   1b54c:	movt	r2, #1
   1b550:	bl	1bee4 <argp_parse@@Base+0x1ca0>
   1b554:	mov	sp, fp
   1b558:	pop	{fp, pc}
   1b55c:	sub	r0, r0, #1
   1b560:	ldrb	r3, [r0, #1]!
   1b564:	cmp	r3, #47	; 0x2f
   1b568:	beq	1b560 <argp_parse@@Base+0x131c>
   1b56c:	mov	r2, #0
   1b570:	mov	r1, r0
   1b574:	uxtb	r3, r3
   1b578:	cmp	r3, #47	; 0x2f
   1b57c:	beq	1b5a4 <argp_parse@@Base+0x1360>
   1b580:	cmp	r3, #0
   1b584:	bxeq	lr
   1b588:	tst	r2, #1
   1b58c:	mov	r2, #0
   1b590:	movne	r0, r1
   1b594:	ldrb	r3, [r1, #1]!
   1b598:	uxtb	r3, r3
   1b59c:	cmp	r3, #47	; 0x2f
   1b5a0:	bne	1b580 <argp_parse@@Base+0x133c>
   1b5a4:	ldrb	r3, [r1, #1]!
   1b5a8:	mov	r2, #1
   1b5ac:	uxtb	r3, r3
   1b5b0:	cmp	r3, #47	; 0x2f
   1b5b4:	bne	1b580 <argp_parse@@Base+0x133c>
   1b5b8:	b	1b5a4 <argp_parse@@Base+0x1360>
   1b5bc:	push	{r4, sl, fp, lr}
   1b5c0:	add	fp, sp, #8
   1b5c4:	mov	r4, r0
   1b5c8:	bl	11c20 <strlen@plt>
   1b5cc:	mov	r1, r0
   1b5d0:	sub	r2, r4, #1
   1b5d4:	mov	r0, r1
   1b5d8:	cmp	r1, #2
   1b5dc:	popcc	{r4, sl, fp, pc}
   1b5e0:	ldrb	r3, [r2, r0]
   1b5e4:	sub	r1, r0, #1
   1b5e8:	cmp	r3, #47	; 0x2f
   1b5ec:	beq	1b5d4 <argp_parse@@Base+0x1390>
   1b5f0:	pop	{r4, sl, fp, pc}
   1b5f4:	sub	sp, sp, #8
   1b5f8:	push	{r4, r5, r6, r7, fp, lr}
   1b5fc:	add	fp, sp, #16
   1b600:	sub	sp, sp, #8
   1b604:	mov	r5, r0
   1b608:	add	r0, fp, #8
   1b60c:	cmp	r1, #11
   1b610:	str	r3, [fp, #12]
   1b614:	str	r2, [fp, #8]
   1b618:	str	r0, [sp, #4]
   1b61c:	bhi	1b658 <argp_parse@@Base+0x1414>
   1b620:	mov	r0, #1
   1b624:	movw	r2, #1300	; 0x514
   1b628:	tst	r2, r0, lsl r1
   1b62c:	bne	1b718 <argp_parse@@Base+0x14d4>
   1b630:	movw	r2, #2570	; 0xa0a
   1b634:	tst	r2, r0, lsl r1
   1b638:	bne	1b680 <argp_parse@@Base+0x143c>
   1b63c:	cmp	r1, #0
   1b640:	bne	1b658 <argp_parse@@Base+0x1414>
   1b644:	ldr	r0, [sp, #4]
   1b648:	add	r1, r0, #4
   1b64c:	str	r1, [sp, #4]
   1b650:	mov	r1, #0
   1b654:	b	1b724 <argp_parse@@Base+0x14e0>
   1b658:	sub	r0, r1, #1024	; 0x400
   1b65c:	cmp	r0, #10
   1b660:	bhi	1b718 <argp_parse@@Base+0x14d4>
   1b664:	mov	r2, #1
   1b668:	movw	r3, #645	; 0x285
   1b66c:	tst	r3, r2, lsl r0
   1b670:	bne	1b718 <argp_parse@@Base+0x14d4>
   1b674:	movw	r3, #1282	; 0x502
   1b678:	tst	r3, r2, lsl r0
   1b67c:	beq	1b68c <argp_parse@@Base+0x1448>
   1b680:	mov	r0, r5
   1b684:	bl	11cd4 <fcntl64@plt>
   1b688:	b	1b730 <argp_parse@@Base+0x14ec>
   1b68c:	cmp	r0, #6
   1b690:	bne	1b718 <argp_parse@@Base+0x14d4>
   1b694:	ldr	r0, [sp, #4]
   1b698:	movw	r7, #2584	; 0xa18
   1b69c:	movt	r7, #3
   1b6a0:	add	r1, r0, #4
   1b6a4:	str	r1, [sp, #4]
   1b6a8:	ldr	r6, [r0]
   1b6ac:	ldr	r0, [r7]
   1b6b0:	cmp	r0, #0
   1b6b4:	blt	1b754 <argp_parse@@Base+0x1510>
   1b6b8:	mov	r0, r5
   1b6bc:	movw	r1, #1030	; 0x406
   1b6c0:	mov	r2, r6
   1b6c4:	bl	11cd4 <fcntl64@plt>
   1b6c8:	mov	r4, r0
   1b6cc:	cmn	r0, #1
   1b6d0:	bgt	1b748 <argp_parse@@Base+0x1504>
   1b6d4:	bl	11c50 <__errno_location@plt>
   1b6d8:	ldr	r0, [r0]
   1b6dc:	cmp	r0, #22
   1b6e0:	bne	1b748 <argp_parse@@Base+0x1504>
   1b6e4:	mov	r0, r5
   1b6e8:	mov	r1, #0
   1b6ec:	mov	r2, r6
   1b6f0:	bl	11cd4 <fcntl64@plt>
   1b6f4:	mov	r4, r0
   1b6f8:	cmp	r0, #0
   1b6fc:	blt	1b734 <argp_parse@@Base+0x14f0>
   1b700:	mvn	r0, #0
   1b704:	str	r0, [r7]
   1b708:	mov	r0, #1
   1b70c:	cmp	r0, #0
   1b710:	bne	1b780 <argp_parse@@Base+0x153c>
   1b714:	b	1b734 <argp_parse@@Base+0x14f0>
   1b718:	ldr	r0, [sp, #4]
   1b71c:	add	r2, r0, #4
   1b720:	str	r2, [sp, #4]
   1b724:	ldr	r2, [r0]
   1b728:	mov	r0, r5
   1b72c:	bl	11cd4 <fcntl64@plt>
   1b730:	mov	r4, r0
   1b734:	mov	r0, r4
   1b738:	sub	sp, fp, #16
   1b73c:	pop	{r4, r5, r6, r7, fp, lr}
   1b740:	add	sp, sp, #8
   1b744:	bx	lr
   1b748:	mov	r0, #1
   1b74c:	str	r0, [r7]
   1b750:	b	1b734 <argp_parse@@Base+0x14f0>
   1b754:	mov	r0, r5
   1b758:	mov	r1, #0
   1b75c:	mov	r2, r6
   1b760:	bl	11cd4 <fcntl64@plt>
   1b764:	mov	r4, r0
   1b768:	ldr	r0, [r7]
   1b76c:	add	r0, r0, #1
   1b770:	clz	r0, r0
   1b774:	lsr	r0, r0, #5
   1b778:	cmp	r0, #0
   1b77c:	beq	1b734 <argp_parse@@Base+0x14f0>
   1b780:	cmp	r4, #0
   1b784:	blt	1b734 <argp_parse@@Base+0x14f0>
   1b788:	mov	r0, r4
   1b78c:	mov	r1, #1
   1b790:	bl	11cd4 <fcntl64@plt>
   1b794:	cmp	r0, #0
   1b798:	blt	1b7b4 <argp_parse@@Base+0x1570>
   1b79c:	orr	r2, r0, #1
   1b7a0:	mov	r0, r4
   1b7a4:	mov	r1, #2
   1b7a8:	bl	11cd4 <fcntl64@plt>
   1b7ac:	cmn	r0, #1
   1b7b0:	bne	1b734 <argp_parse@@Base+0x14f0>
   1b7b4:	bl	11c50 <__errno_location@plt>
   1b7b8:	ldr	r6, [r0]
   1b7bc:	mov	r5, r0
   1b7c0:	mov	r0, r4
   1b7c4:	bl	11e00 <close@plt>
   1b7c8:	str	r6, [r5]
   1b7cc:	mvn	r4, #0
   1b7d0:	b	1b734 <argp_parse@@Base+0x14f0>
   1b7d4:	push	{r4, r5, r6, sl, fp, lr}
   1b7d8:	add	fp, sp, #16
   1b7dc:	mov	r4, r0
   1b7e0:	bl	11c50 <__errno_location@plt>
   1b7e4:	ldr	r6, [r0]
   1b7e8:	mov	r5, r0
   1b7ec:	mov	r0, r4
   1b7f0:	bl	11a1c <free@plt>
   1b7f4:	str	r6, [r5]
   1b7f8:	pop	{r4, r5, r6, sl, fp, pc}
   1b7fc:	push	{fp, lr}
   1b800:	mov	fp, sp
   1b804:	sub	sp, sp, #16
   1b808:	mov	ip, #0
   1b80c:	str	ip, [sp, #8]
   1b810:	str	ip, [sp, #4]
   1b814:	ldr	ip, [fp, #8]
   1b818:	str	ip, [sp]
   1b81c:	bl	1e210 <argp_parse@@Base+0x3fcc>
   1b820:	mov	sp, fp
   1b824:	pop	{fp, pc}
   1b828:	push	{fp, lr}
   1b82c:	mov	fp, sp
   1b830:	sub	sp, sp, #16
   1b834:	mov	ip, #0
   1b838:	str	ip, [sp, #12]
   1b83c:	str	ip, [sp, #4]
   1b840:	ldr	ip, [fp, #12]
   1b844:	str	ip, [sp, #8]
   1b848:	ldr	ip, [fp, #8]
   1b84c:	str	ip, [sp]
   1b850:	bl	1d07c <argp_parse@@Base+0x2e38>
   1b854:	mov	sp, fp
   1b858:	pop	{fp, pc}
   1b85c:	push	{fp, lr}
   1b860:	mov	fp, sp
   1b864:	sub	sp, sp, #16
   1b868:	mov	ip, #0
   1b86c:	str	ip, [sp, #8]
   1b870:	mov	ip, #1
   1b874:	str	ip, [sp, #4]
   1b878:	ldr	ip, [fp, #8]
   1b87c:	str	ip, [sp]
   1b880:	bl	1e210 <argp_parse@@Base+0x3fcc>
   1b884:	mov	sp, fp
   1b888:	pop	{fp, pc}
   1b88c:	push	{fp, lr}
   1b890:	mov	fp, sp
   1b894:	sub	sp, sp, #16
   1b898:	mov	ip, #0
   1b89c:	str	ip, [sp, #12]
   1b8a0:	mov	ip, #1
   1b8a4:	str	ip, [sp, #4]
   1b8a8:	ldr	ip, [fp, #12]
   1b8ac:	str	ip, [sp, #8]
   1b8b0:	ldr	ip, [fp, #8]
   1b8b4:	str	ip, [sp]
   1b8b8:	bl	1d07c <argp_parse@@Base+0x2e38>
   1b8bc:	mov	sp, fp
   1b8c0:	pop	{fp, pc}
   1b8c4:	push	{r4, r5, fp, lr}
   1b8c8:	add	fp, sp, #8
   1b8cc:	cmp	r0, #0
   1b8d0:	beq	1b964 <argp_parse@@Base+0x1720>
   1b8d4:	mov	r1, #47	; 0x2f
   1b8d8:	mov	r4, r0
   1b8dc:	bl	11d28 <strrchr@plt>
   1b8e0:	cmp	r0, #0
   1b8e4:	mov	r5, r4
   1b8e8:	addne	r5, r0, #1
   1b8ec:	sub	r0, r5, r4
   1b8f0:	cmp	r0, #7
   1b8f4:	blt	1b948 <argp_parse@@Base+0x1704>
   1b8f8:	movw	r1, #63695	; 0xf8cf
   1b8fc:	sub	r0, r5, #7
   1b900:	mov	r2, #7
   1b904:	movt	r1, #1
   1b908:	bl	11ddc <strncmp@plt>
   1b90c:	cmp	r0, #0
   1b910:	bne	1b948 <argp_parse@@Base+0x1704>
   1b914:	movw	r1, #63703	; 0xf8d7
   1b918:	mov	r0, r5
   1b91c:	mov	r2, #3
   1b920:	movt	r1, #1
   1b924:	bl	11ddc <strncmp@plt>
   1b928:	cmp	r0, #0
   1b92c:	beq	1b938 <argp_parse@@Base+0x16f4>
   1b930:	mov	r4, r5
   1b934:	b	1b948 <argp_parse@@Base+0x1704>
   1b938:	movw	r0, #1488	; 0x5d0
   1b93c:	add	r4, r5, #3
   1b940:	movt	r0, #3
   1b944:	str	r4, [r0]
   1b948:	movw	r0, #1492	; 0x5d4
   1b94c:	movt	r0, #3
   1b950:	str	r4, [r0]
   1b954:	movw	r0, #2588	; 0xa1c
   1b958:	movt	r0, #3
   1b95c:	str	r4, [r0]
   1b960:	pop	{r4, r5, fp, pc}
   1b964:	movw	r0, #1496	; 0x5d8
   1b968:	mov	r1, #55	; 0x37
   1b96c:	mov	r2, #1
   1b970:	movt	r0, #3
   1b974:	ldr	r3, [r0]
   1b978:	movw	r0, #63639	; 0xf897
   1b97c:	movt	r0, #1
   1b980:	bl	11b3c <fwrite@plt>
   1b984:	bl	11de8 <abort@plt>
   1b988:	push	{r4, r5, fp, lr}
   1b98c:	add	fp, sp, #8
   1b990:	mov	r5, r0
   1b994:	mov	r0, #33	; 0x21
   1b998:	bl	1c228 <argp_parse@@Base+0x1fe4>
   1b99c:	add	r1, r5, #44	; 0x2c
   1b9a0:	mov	r2, #32
   1b9a4:	mov	r4, r0
   1b9a8:	bl	11c98 <strncpy@plt>
   1b9ac:	mov	r5, #0
   1b9b0:	mov	r0, r4
   1b9b4:	strb	r5, [r4, #32]
   1b9b8:	bl	11c20 <strlen@plt>
   1b9bc:	cmp	r0, #1
   1b9c0:	blt	1b9e8 <argp_parse@@Base+0x17a4>
   1b9c4:	add	r1, r4, r0
   1b9c8:	mov	r0, r1
   1b9cc:	ldrb	r2, [r0, #-1]!
   1b9d0:	cmp	r2, #32
   1b9d4:	bne	1b9e8 <argp_parse@@Base+0x17a4>
   1b9d8:	strb	r5, [r1, #-1]
   1b9dc:	cmp	r4, r0
   1b9e0:	mov	r1, r0
   1b9e4:	bcc	1b9cc <argp_parse@@Base+0x1788>
   1b9e8:	mov	r0, r4
   1b9ec:	pop	{r4, r5, fp, pc}
   1b9f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b9f4:	add	fp, sp, #28
   1b9f8:	sub	sp, sp, #12
   1b9fc:	mov	r6, #0
   1ba00:	mov	r5, r3
   1ba04:	str	r2, [sp, #4]
   1ba08:	mov	sl, r1
   1ba0c:	str	r6, [sp, #8]
   1ba10:	bl	119ec <utmpxname@plt>
   1ba14:	bl	11ab8 <setutxent@plt>
   1ba18:	bl	11df4 <getutxent@plt>
   1ba1c:	cmp	r0, #0
   1ba20:	beq	1bae8 <argp_parse@@Base+0x18a4>
   1ba24:	mov	r7, r0
   1ba28:	and	r4, r5, #1
   1ba2c:	tst	r5, #2
   1ba30:	bne	1baf0 <argp_parse@@Base+0x18ac>
   1ba34:	mov	r5, #0
   1ba38:	mov	r9, #384	; 0x180
   1ba3c:	add	r8, sp, #8
   1ba40:	mov	r6, #0
   1ba44:	b	1ba84 <argp_parse@@Base+0x1840>
   1ba48:	ldrh	r0, [r7]
   1ba4c:	cmp	r0, #7
   1ba50:	bne	1ba94 <argp_parse@@Base+0x1850>
   1ba54:	ldr	r0, [r7, #4]
   1ba58:	cmp	r0, #1
   1ba5c:	blt	1ba94 <argp_parse@@Base+0x1850>
   1ba60:	mov	r1, #0
   1ba64:	bl	11bf0 <kill@plt>
   1ba68:	cmn	r0, #1
   1ba6c:	bgt	1ba94 <argp_parse@@Base+0x1850>
   1ba70:	bl	11c50 <__errno_location@plt>
   1ba74:	ldr	r0, [r0]
   1ba78:	cmp	r0, #3
   1ba7c:	bne	1ba94 <argp_parse@@Base+0x1850>
   1ba80:	b	1bad4 <argp_parse@@Base+0x1890>
   1ba84:	ldrb	r0, [r7, #44]	; 0x2c
   1ba88:	cmp	r0, #0
   1ba8c:	cmpne	r4, #0
   1ba90:	bne	1ba48 <argp_parse@@Base+0x1804>
   1ba94:	ldr	r0, [sp, #8]
   1ba98:	cmp	r5, r0
   1ba9c:	bne	1babc <argp_parse@@Base+0x1878>
   1baa0:	mov	r0, r6
   1baa4:	mov	r1, r8
   1baa8:	mov	r2, #1
   1baac:	mvn	r3, #0
   1bab0:	str	r9, [sp]
   1bab4:	bl	1c458 <argp_parse@@Base+0x2214>
   1bab8:	mov	r6, r0
   1babc:	add	r0, r5, r5, lsl #1
   1bac0:	mov	r1, r7
   1bac4:	mov	r2, #384	; 0x180
   1bac8:	add	r0, r6, r0, lsl #7
   1bacc:	bl	11a58 <memcpy@plt>
   1bad0:	add	r5, r5, #1
   1bad4:	bl	11df4 <getutxent@plt>
   1bad8:	mov	r7, r0
   1badc:	cmp	r0, #0
   1bae0:	bne	1ba84 <argp_parse@@Base+0x1840>
   1bae4:	b	1bc14 <argp_parse@@Base+0x19d0>
   1bae8:	mov	r5, #0
   1baec:	b	1bc14 <argp_parse@@Base+0x19d0>
   1baf0:	mov	r5, #0
   1baf4:	cmp	r4, #0
   1baf8:	bne	1bb74 <argp_parse@@Base+0x1930>
   1bafc:	mov	r8, #384	; 0x180
   1bb00:	add	r4, sp, #8
   1bb04:	mov	r6, #0
   1bb08:	ldrb	r0, [r7, #44]	; 0x2c
   1bb0c:	cmp	r0, #0
   1bb10:	beq	1bb60 <argp_parse@@Base+0x191c>
   1bb14:	ldrh	r0, [r7]
   1bb18:	cmp	r0, #7
   1bb1c:	bne	1bb60 <argp_parse@@Base+0x191c>
   1bb20:	ldr	r0, [sp, #8]
   1bb24:	cmp	r5, r0
   1bb28:	bne	1bb48 <argp_parse@@Base+0x1904>
   1bb2c:	mov	r0, r6
   1bb30:	mov	r1, r4
   1bb34:	mov	r2, #1
   1bb38:	mvn	r3, #0
   1bb3c:	str	r8, [sp]
   1bb40:	bl	1c458 <argp_parse@@Base+0x2214>
   1bb44:	mov	r6, r0
   1bb48:	add	r0, r5, r5, lsl #1
   1bb4c:	mov	r1, r7
   1bb50:	mov	r2, #384	; 0x180
   1bb54:	add	r0, r6, r0, lsl #7
   1bb58:	bl	11a58 <memcpy@plt>
   1bb5c:	add	r5, r5, #1
   1bb60:	bl	11df4 <getutxent@plt>
   1bb64:	mov	r7, r0
   1bb68:	cmp	r0, #0
   1bb6c:	bne	1bb08 <argp_parse@@Base+0x18c4>
   1bb70:	b	1bc14 <argp_parse@@Base+0x19d0>
   1bb74:	mov	r4, #384	; 0x180
   1bb78:	add	r8, sp, #8
   1bb7c:	mov	r6, #0
   1bb80:	ldrb	r0, [r7, #44]	; 0x2c
   1bb84:	cmp	r0, #0
   1bb88:	beq	1bc04 <argp_parse@@Base+0x19c0>
   1bb8c:	ldrh	r0, [r7]
   1bb90:	cmp	r0, #7
   1bb94:	bne	1bc04 <argp_parse@@Base+0x19c0>
   1bb98:	ldr	r0, [r7, #4]
   1bb9c:	cmp	r0, #1
   1bba0:	blt	1bbc4 <argp_parse@@Base+0x1980>
   1bba4:	mov	r1, #0
   1bba8:	bl	11bf0 <kill@plt>
   1bbac:	cmn	r0, #1
   1bbb0:	bgt	1bbc4 <argp_parse@@Base+0x1980>
   1bbb4:	bl	11c50 <__errno_location@plt>
   1bbb8:	ldr	r0, [r0]
   1bbbc:	cmp	r0, #3
   1bbc0:	beq	1bc04 <argp_parse@@Base+0x19c0>
   1bbc4:	ldr	r0, [sp, #8]
   1bbc8:	cmp	r5, r0
   1bbcc:	bne	1bbec <argp_parse@@Base+0x19a8>
   1bbd0:	mov	r0, r6
   1bbd4:	mov	r1, r8
   1bbd8:	mov	r2, #1
   1bbdc:	mvn	r3, #0
   1bbe0:	str	r4, [sp]
   1bbe4:	bl	1c458 <argp_parse@@Base+0x2214>
   1bbe8:	mov	r6, r0
   1bbec:	add	r0, r5, r5, lsl #1
   1bbf0:	mov	r1, r7
   1bbf4:	mov	r2, #384	; 0x180
   1bbf8:	add	r0, r6, r0, lsl #7
   1bbfc:	bl	11a58 <memcpy@plt>
   1bc00:	add	r5, r5, #1
   1bc04:	bl	11df4 <getutxent@plt>
   1bc08:	mov	r7, r0
   1bc0c:	cmp	r0, #0
   1bc10:	bne	1bb80 <argp_parse@@Base+0x193c>
   1bc14:	bl	11cec <endutxent@plt>
   1bc18:	ldr	r0, [sp, #4]
   1bc1c:	str	r5, [sl]
   1bc20:	str	r6, [r0]
   1bc24:	mov	r0, #0
   1bc28:	sub	sp, fp, #28
   1bc2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc30:	push	{r4, r5, r6, r7, fp, lr}
   1bc34:	add	fp, sp, #16
   1bc38:	sub	sp, sp, #32
   1bc3c:	ldr	r7, [fp, #12]
   1bc40:	ldr	r6, [fp, #8]
   1bc44:	mov	r4, r2
   1bc48:	mov	r5, r0
   1bc4c:	cmp	r1, #0
   1bc50:	beq	1bc70 <argp_parse@@Base+0x1a2c>
   1bc54:	mov	r2, r1
   1bc58:	movw	r1, #63707	; 0xf8db
   1bc5c:	str	r3, [sp]
   1bc60:	mov	r0, r5
   1bc64:	mov	r3, r4
   1bc68:	movt	r1, #1
   1bc6c:	b	1bc80 <argp_parse@@Base+0x1a3c>
   1bc70:	movw	r1, #63719	; 0xf8e7
   1bc74:	mov	r0, r5
   1bc78:	mov	r2, r4
   1bc7c:	movt	r1, #1
   1bc80:	bl	11c44 <fprintf@plt>
   1bc84:	movw	r1, #64483	; 0xfbe3
   1bc88:	movw	r2, #63726	; 0xf8ee
   1bc8c:	mov	r0, r5
   1bc90:	movw	r3, #2022	; 0x7e6
   1bc94:	movt	r1, #1
   1bc98:	movt	r2, #1
   1bc9c:	bl	11c44 <fprintf@plt>
   1bca0:	mov	r0, #10
   1bca4:	mov	r1, r5
   1bca8:	bl	11d40 <fputc@plt>
   1bcac:	movw	r1, #63730	; 0xf8f2
   1bcb0:	movw	r2, #63901	; 0xf99d
   1bcb4:	mov	r0, r5
   1bcb8:	movt	r1, #1
   1bcbc:	movt	r2, #1
   1bcc0:	bl	11c44 <fprintf@plt>
   1bcc4:	mov	r0, #10
   1bcc8:	mov	r1, r5
   1bccc:	bl	11d40 <fputc@plt>
   1bcd0:	cmp	r7, #9
   1bcd4:	bhi	1bd10 <argp_parse@@Base+0x1acc>
   1bcd8:	add	r0, pc, #0
   1bcdc:	ldr	pc, [r0, r7, lsl #2]
   1bce0:	andeq	fp, r1, r8, lsl #26
   1bce4:	andeq	fp, r1, r0, asr sp
   1bce8:	andeq	fp, r1, ip, ror #26
   1bcec:	andeq	fp, r1, r8, lsl #27
   1bcf0:	andeq	fp, r1, ip, lsr #27
   1bcf4:	ldrdeq	fp, [r1], -r4
   1bcf8:	strdeq	fp, [r1], -ip
   1bcfc:	andeq	fp, r1, ip, lsr #28
   1bd00:	andeq	fp, r1, r4, lsr #29
   1bd04:	andeq	fp, r1, r4, ror #28
   1bd08:	sub	sp, fp, #16
   1bd0c:	pop	{r4, r5, r6, r7, fp, pc}
   1bd10:	add	r7, r6, #8
   1bd14:	ldm	r6, {r2, r3}
   1bd18:	add	lr, r6, #20
   1bd1c:	ldm	r7, {r0, r1, r7}
   1bd20:	ldm	lr, {r4, ip, lr}
   1bd24:	ldr	r6, [r6, #32]
   1bd28:	stm	sp, {r0, r1, r7}
   1bd2c:	movw	r1, #64254	; 0xfafe
   1bd30:	add	r0, sp, #12
   1bd34:	stm	r0, {r4, ip, lr}
   1bd38:	str	r6, [sp, #24]
   1bd3c:	movt	r1, #1
   1bd40:	mov	r0, r5
   1bd44:	bl	11c44 <fprintf@plt>
   1bd48:	sub	sp, fp, #16
   1bd4c:	pop	{r4, r5, r6, r7, fp, pc}
   1bd50:	ldr	r2, [r6]
   1bd54:	movw	r1, #63935	; 0xf9bf
   1bd58:	mov	r0, r5
   1bd5c:	movt	r1, #1
   1bd60:	sub	sp, fp, #16
   1bd64:	pop	{r4, r5, r6, r7, fp, lr}
   1bd68:	b	11c44 <fprintf@plt>
   1bd6c:	ldm	r6, {r2, r3}
   1bd70:	movw	r1, #63951	; 0xf9cf
   1bd74:	mov	r0, r5
   1bd78:	movt	r1, #1
   1bd7c:	sub	sp, fp, #16
   1bd80:	pop	{r4, r5, r6, r7, fp, lr}
   1bd84:	b	11c44 <fprintf@plt>
   1bd88:	ldm	r6, {r2, r3}
   1bd8c:	ldr	r0, [r6, #8]
   1bd90:	movw	r1, #63974	; 0xf9e6
   1bd94:	movt	r1, #1
   1bd98:	str	r0, [sp]
   1bd9c:	mov	r0, r5
   1bda0:	bl	11c44 <fprintf@plt>
   1bda4:	sub	sp, fp, #16
   1bda8:	pop	{r4, r5, r6, r7, fp, pc}
   1bdac:	ldm	r6, {r2, r3}
   1bdb0:	ldr	r0, [r6, #8]
   1bdb4:	ldr	r1, [r6, #12]
   1bdb8:	stm	sp, {r0, r1}
   1bdbc:	movw	r1, #64002	; 0xfa02
   1bdc0:	movt	r1, #1
   1bdc4:	mov	r0, r5
   1bdc8:	bl	11c44 <fprintf@plt>
   1bdcc:	sub	sp, fp, #16
   1bdd0:	pop	{r4, r5, r6, r7, fp, pc}
   1bdd4:	add	r7, r6, #8
   1bdd8:	ldm	r6, {r2, r3}
   1bddc:	ldm	r7, {r0, r1, r7}
   1bde0:	stm	sp, {r0, r1, r7}
   1bde4:	movw	r1, #64034	; 0xfa22
   1bde8:	movt	r1, #1
   1bdec:	mov	r0, r5
   1bdf0:	bl	11c44 <fprintf@plt>
   1bdf4:	sub	sp, fp, #16
   1bdf8:	pop	{r4, r5, r6, r7, fp, pc}
   1bdfc:	add	r7, r6, #8
   1be00:	ldm	r6, {r2, r3}
   1be04:	ldm	r7, {r0, r1, r7}
   1be08:	ldr	r6, [r6, #20]
   1be0c:	stm	sp, {r0, r1, r7}
   1be10:	movw	r1, #64070	; 0xfa46
   1be14:	str	r6, [sp, #12]
   1be18:	movt	r1, #1
   1be1c:	mov	r0, r5
   1be20:	bl	11c44 <fprintf@plt>
   1be24:	sub	sp, fp, #16
   1be28:	pop	{r4, r5, r6, r7, fp, pc}
   1be2c:	add	r7, r6, #8
   1be30:	ldm	r6, {r2, r3}
   1be34:	ldm	r7, {r0, r1, r7}
   1be38:	ldr	r4, [r6, #20]
   1be3c:	ldr	r6, [r6, #24]
   1be40:	stm	sp, {r0, r1, r7}
   1be44:	movw	r1, #64110	; 0xfa6e
   1be48:	str	r4, [sp, #12]
   1be4c:	str	r6, [sp, #16]
   1be50:	movt	r1, #1
   1be54:	mov	r0, r5
   1be58:	bl	11c44 <fprintf@plt>
   1be5c:	sub	sp, fp, #16
   1be60:	pop	{r4, r5, r6, r7, fp, pc}
   1be64:	add	r7, r6, #8
   1be68:	ldm	r6, {r2, r3}
   1be6c:	add	lr, r6, #20
   1be70:	ldm	r7, {r0, r1, r7}
   1be74:	ldm	lr, {r4, ip, lr}
   1be78:	ldr	r6, [r6, #32]
   1be7c:	stm	sp, {r0, r1, r7}
   1be80:	movw	r1, #64202	; 0xfaca
   1be84:	add	r0, sp, #12
   1be88:	stm	r0, {r4, ip, lr}
   1be8c:	str	r6, [sp, #24]
   1be90:	movt	r1, #1
   1be94:	mov	r0, r5
   1be98:	bl	11c44 <fprintf@plt>
   1be9c:	sub	sp, fp, #16
   1bea0:	pop	{r4, r5, r6, r7, fp, pc}
   1bea4:	add	r7, r6, #8
   1bea8:	ldm	r6, {r2, r3}
   1beac:	ldm	r7, {r0, r1, r7}
   1beb0:	ldr	r4, [r6, #20]
   1beb4:	ldr	ip, [r6, #24]
   1beb8:	ldr	r6, [r6, #28]
   1bebc:	stm	sp, {r0, r1, r7}
   1bec0:	movw	r1, #64154	; 0xfa9a
   1bec4:	str	r4, [sp, #12]
   1bec8:	str	ip, [sp, #16]
   1becc:	str	r6, [sp, #20]
   1bed0:	movt	r1, #1
   1bed4:	mov	r0, r5
   1bed8:	bl	11c44 <fprintf@plt>
   1bedc:	sub	sp, fp, #16
   1bee0:	pop	{r4, r5, r6, r7, fp, pc}
   1bee4:	push	{r4, sl, fp, lr}
   1bee8:	add	fp, sp, #8
   1beec:	sub	sp, sp, #8
   1bef0:	ldr	ip, [fp, #8]
   1bef4:	mov	lr, #0
   1bef8:	ldr	r4, [ip, lr, lsl #2]
   1befc:	add	lr, lr, #1
   1bf00:	cmp	r4, #0
   1bf04:	bne	1bef8 <argp_parse@@Base+0x1cb4>
   1bf08:	sub	r4, lr, #1
   1bf0c:	str	ip, [sp]
   1bf10:	str	r4, [sp, #4]
   1bf14:	bl	1bc30 <argp_parse@@Base+0x19ec>
   1bf18:	sub	sp, fp, #8
   1bf1c:	pop	{r4, sl, fp, pc}
   1bf20:	push	{fp, lr}
   1bf24:	mov	fp, sp
   1bf28:	sub	sp, sp, #48	; 0x30
   1bf2c:	ldr	ip, [fp, #8]
   1bf30:	ldr	lr, [ip]
   1bf34:	cmp	lr, #0
   1bf38:	str	lr, [sp, #8]
   1bf3c:	beq	1bfd8 <argp_parse@@Base+0x1d94>
   1bf40:	ldr	lr, [ip, #4]
   1bf44:	cmp	lr, #0
   1bf48:	str	lr, [sp, #12]
   1bf4c:	beq	1bfe0 <argp_parse@@Base+0x1d9c>
   1bf50:	ldr	lr, [ip, #8]
   1bf54:	cmp	lr, #0
   1bf58:	str	lr, [sp, #16]
   1bf5c:	beq	1bfe8 <argp_parse@@Base+0x1da4>
   1bf60:	ldr	lr, [ip, #12]
   1bf64:	cmp	lr, #0
   1bf68:	str	lr, [sp, #20]
   1bf6c:	beq	1bff0 <argp_parse@@Base+0x1dac>
   1bf70:	ldr	lr, [ip, #16]
   1bf74:	cmp	lr, #0
   1bf78:	str	lr, [sp, #24]
   1bf7c:	beq	1bff8 <argp_parse@@Base+0x1db4>
   1bf80:	ldr	lr, [ip, #20]
   1bf84:	cmp	lr, #0
   1bf88:	str	lr, [sp, #28]
   1bf8c:	beq	1c000 <argp_parse@@Base+0x1dbc>
   1bf90:	ldr	lr, [ip, #24]
   1bf94:	cmp	lr, #0
   1bf98:	str	lr, [sp, #32]
   1bf9c:	beq	1c008 <argp_parse@@Base+0x1dc4>
   1bfa0:	ldr	lr, [ip, #28]
   1bfa4:	cmp	lr, #0
   1bfa8:	str	lr, [sp, #36]	; 0x24
   1bfac:	beq	1c010 <argp_parse@@Base+0x1dcc>
   1bfb0:	ldr	lr, [ip, #32]
   1bfb4:	cmp	lr, #0
   1bfb8:	str	lr, [sp, #40]	; 0x28
   1bfbc:	beq	1c018 <argp_parse@@Base+0x1dd4>
   1bfc0:	ldr	lr, [ip, #36]	; 0x24
   1bfc4:	mov	ip, #10
   1bfc8:	cmp	lr, #0
   1bfcc:	str	lr, [sp, #44]	; 0x2c
   1bfd0:	movweq	ip, #9
   1bfd4:	b	1c01c <argp_parse@@Base+0x1dd8>
   1bfd8:	mov	ip, #0
   1bfdc:	b	1c01c <argp_parse@@Base+0x1dd8>
   1bfe0:	mov	ip, #1
   1bfe4:	b	1c01c <argp_parse@@Base+0x1dd8>
   1bfe8:	mov	ip, #2
   1bfec:	b	1c01c <argp_parse@@Base+0x1dd8>
   1bff0:	mov	ip, #3
   1bff4:	b	1c01c <argp_parse@@Base+0x1dd8>
   1bff8:	mov	ip, #4
   1bffc:	b	1c01c <argp_parse@@Base+0x1dd8>
   1c000:	mov	ip, #5
   1c004:	b	1c01c <argp_parse@@Base+0x1dd8>
   1c008:	mov	ip, #6
   1c00c:	b	1c01c <argp_parse@@Base+0x1dd8>
   1c010:	mov	ip, #7
   1c014:	b	1c01c <argp_parse@@Base+0x1dd8>
   1c018:	mov	ip, #8
   1c01c:	add	lr, sp, #8
   1c020:	str	ip, [sp, #4]
   1c024:	str	lr, [sp]
   1c028:	bl	1bc30 <argp_parse@@Base+0x19ec>
   1c02c:	mov	sp, fp
   1c030:	pop	{fp, pc}
   1c034:	push	{fp, lr}
   1c038:	mov	fp, sp
   1c03c:	sub	sp, sp, #56	; 0x38
   1c040:	add	ip, fp, #8
   1c044:	str	ip, [sp, #12]
   1c048:	ldr	lr, [fp, #8]
   1c04c:	cmp	lr, #0
   1c050:	str	lr, [sp, #16]
   1c054:	beq	1c0f0 <argp_parse@@Base+0x1eac>
   1c058:	ldr	lr, [ip, #4]
   1c05c:	cmp	lr, #0
   1c060:	str	lr, [sp, #20]
   1c064:	beq	1c0f8 <argp_parse@@Base+0x1eb4>
   1c068:	ldr	lr, [ip, #8]
   1c06c:	cmp	lr, #0
   1c070:	str	lr, [sp, #24]
   1c074:	beq	1c100 <argp_parse@@Base+0x1ebc>
   1c078:	ldr	lr, [ip, #12]
   1c07c:	cmp	lr, #0
   1c080:	str	lr, [sp, #28]
   1c084:	beq	1c108 <argp_parse@@Base+0x1ec4>
   1c088:	ldr	lr, [ip, #16]
   1c08c:	cmp	lr, #0
   1c090:	str	lr, [sp, #32]
   1c094:	beq	1c110 <argp_parse@@Base+0x1ecc>
   1c098:	ldr	lr, [ip, #20]
   1c09c:	cmp	lr, #0
   1c0a0:	str	lr, [sp, #36]	; 0x24
   1c0a4:	beq	1c118 <argp_parse@@Base+0x1ed4>
   1c0a8:	ldr	lr, [ip, #24]
   1c0ac:	cmp	lr, #0
   1c0b0:	str	lr, [sp, #40]	; 0x28
   1c0b4:	beq	1c120 <argp_parse@@Base+0x1edc>
   1c0b8:	ldr	lr, [ip, #28]
   1c0bc:	cmp	lr, #0
   1c0c0:	str	lr, [sp, #44]	; 0x2c
   1c0c4:	beq	1c128 <argp_parse@@Base+0x1ee4>
   1c0c8:	ldr	lr, [ip, #32]
   1c0cc:	cmp	lr, #0
   1c0d0:	str	lr, [sp, #48]	; 0x30
   1c0d4:	beq	1c130 <argp_parse@@Base+0x1eec>
   1c0d8:	ldr	lr, [ip, #36]	; 0x24
   1c0dc:	mov	ip, #10
   1c0e0:	cmp	lr, #0
   1c0e4:	str	lr, [sp, #52]	; 0x34
   1c0e8:	movweq	ip, #9
   1c0ec:	b	1c134 <argp_parse@@Base+0x1ef0>
   1c0f0:	mov	ip, #0
   1c0f4:	b	1c134 <argp_parse@@Base+0x1ef0>
   1c0f8:	mov	ip, #1
   1c0fc:	b	1c134 <argp_parse@@Base+0x1ef0>
   1c100:	mov	ip, #2
   1c104:	b	1c134 <argp_parse@@Base+0x1ef0>
   1c108:	mov	ip, #3
   1c10c:	b	1c134 <argp_parse@@Base+0x1ef0>
   1c110:	mov	ip, #4
   1c114:	b	1c134 <argp_parse@@Base+0x1ef0>
   1c118:	mov	ip, #5
   1c11c:	b	1c134 <argp_parse@@Base+0x1ef0>
   1c120:	mov	ip, #6
   1c124:	b	1c134 <argp_parse@@Base+0x1ef0>
   1c128:	mov	ip, #7
   1c12c:	b	1c134 <argp_parse@@Base+0x1ef0>
   1c130:	mov	ip, #8
   1c134:	add	lr, sp, #16
   1c138:	str	ip, [sp, #4]
   1c13c:	str	lr, [sp]
   1c140:	bl	1bc30 <argp_parse@@Base+0x19ec>
   1c144:	mov	sp, fp
   1c148:	pop	{fp, pc}
   1c14c:	push	{fp, lr}
   1c150:	mov	fp, sp
   1c154:	movw	r0, #1500	; 0x5dc
   1c158:	movt	r0, #3
   1c15c:	ldr	r1, [r0]
   1c160:	mov	r0, #10
   1c164:	bl	11d40 <fputc@plt>
   1c168:	movw	r0, #64314	; 0xfb3a
   1c16c:	movw	r1, #64334	; 0xfb4e
   1c170:	movt	r0, #1
   1c174:	movt	r1, #1
   1c178:	bl	119c8 <printf@plt>
   1c17c:	movw	r0, #64356	; 0xfb64
   1c180:	movw	r1, #63612	; 0xf87c
   1c184:	movw	r2, #64376	; 0xfb78
   1c188:	movt	r0, #1
   1c18c:	movt	r1, #1
   1c190:	movt	r2, #1
   1c194:	bl	119c8 <printf@plt>
   1c198:	movw	r0, #64415	; 0xfb9f
   1c19c:	movw	r1, #64454	; 0xfbc6
   1c1a0:	movt	r0, #1
   1c1a4:	movt	r1, #1
   1c1a8:	pop	{fp, lr}
   1c1ac:	b	119c8 <printf@plt>
   1c1b0:	push	{r4, r5, r6, sl, fp, lr}
   1c1b4:	add	fp, sp, #16
   1c1b8:	mov	r4, r2
   1c1bc:	mov	r5, r1
   1c1c0:	mov	r6, r0
   1c1c4:	bl	1e2e4 <argp_parse@@Base+0x40a0>
   1c1c8:	cmp	r0, #0
   1c1cc:	popne	{r4, r5, r6, sl, fp, pc}
   1c1d0:	cmp	r6, #0
   1c1d4:	beq	1c1e8 <argp_parse@@Base+0x1fa4>
   1c1d8:	cmp	r5, #0
   1c1dc:	cmpne	r4, #0
   1c1e0:	bne	1c1e8 <argp_parse@@Base+0x1fa4>
   1c1e4:	pop	{r4, r5, r6, sl, fp, pc}
   1c1e8:	bl	1c788 <argp_parse@@Base+0x2544>
   1c1ec:	push	{r4, r5, r6, sl, fp, lr}
   1c1f0:	add	fp, sp, #16
   1c1f4:	mov	r4, r2
   1c1f8:	mov	r5, r1
   1c1fc:	mov	r6, r0
   1c200:	bl	1e2e4 <argp_parse@@Base+0x40a0>
   1c204:	cmp	r0, #0
   1c208:	popne	{r4, r5, r6, sl, fp, pc}
   1c20c:	cmp	r6, #0
   1c210:	beq	1c224 <argp_parse@@Base+0x1fe0>
   1c214:	cmp	r5, #0
   1c218:	cmpne	r4, #0
   1c21c:	bne	1c224 <argp_parse@@Base+0x1fe0>
   1c220:	pop	{r4, r5, r6, sl, fp, pc}
   1c224:	bl	1c788 <argp_parse@@Base+0x2544>
   1c228:	push	{fp, lr}
   1c22c:	mov	fp, sp
   1c230:	bl	1c80c <argp_parse@@Base+0x25c8>
   1c234:	cmp	r0, #0
   1c238:	popne	{fp, pc}
   1c23c:	bl	1c788 <argp_parse@@Base+0x2544>
   1c240:	push	{fp, lr}
   1c244:	mov	fp, sp
   1c248:	bl	1c80c <argp_parse@@Base+0x25c8>
   1c24c:	cmp	r0, #0
   1c250:	popne	{fp, pc}
   1c254:	bl	1c788 <argp_parse@@Base+0x2544>
   1c258:	push	{fp, lr}
   1c25c:	mov	fp, sp
   1c260:	bl	1c80c <argp_parse@@Base+0x25c8>
   1c264:	cmp	r0, #0
   1c268:	popne	{fp, pc}
   1c26c:	bl	1c788 <argp_parse@@Base+0x2544>
   1c270:	push	{r4, r5, fp, lr}
   1c274:	add	fp, sp, #8
   1c278:	mov	r4, r1
   1c27c:	mov	r5, r0
   1c280:	bl	1c83c <argp_parse@@Base+0x25f8>
   1c284:	cmp	r0, #0
   1c288:	popne	{r4, r5, fp, pc}
   1c28c:	cmp	r5, #0
   1c290:	beq	1c2a0 <argp_parse@@Base+0x205c>
   1c294:	cmp	r4, #0
   1c298:	bne	1c2a0 <argp_parse@@Base+0x205c>
   1c29c:	pop	{r4, r5, fp, pc}
   1c2a0:	bl	1c788 <argp_parse@@Base+0x2544>
   1c2a4:	push	{fp, lr}
   1c2a8:	mov	fp, sp
   1c2ac:	cmp	r1, #0
   1c2b0:	orreq	r1, r1, #1
   1c2b4:	bl	1c83c <argp_parse@@Base+0x25f8>
   1c2b8:	cmp	r0, #0
   1c2bc:	popne	{fp, pc}
   1c2c0:	bl	1c788 <argp_parse@@Base+0x2544>
   1c2c4:	push	{fp, lr}
   1c2c8:	mov	fp, sp
   1c2cc:	clz	r3, r2
   1c2d0:	lsr	ip, r3, #5
   1c2d4:	clz	r3, r1
   1c2d8:	lsr	r3, r3, #5
   1c2dc:	orrs	r3, r3, ip
   1c2e0:	movwne	r1, #1
   1c2e4:	movwne	r2, #1
   1c2e8:	bl	1e2e4 <argp_parse@@Base+0x40a0>
   1c2ec:	cmp	r0, #0
   1c2f0:	popne	{fp, pc}
   1c2f4:	bl	1c788 <argp_parse@@Base+0x2544>
   1c2f8:	push	{fp, lr}
   1c2fc:	mov	fp, sp
   1c300:	mov	r2, r1
   1c304:	mov	r1, r0
   1c308:	mov	r0, #0
   1c30c:	bl	1e2e4 <argp_parse@@Base+0x40a0>
   1c310:	cmp	r0, #0
   1c314:	popne	{fp, pc}
   1c318:	bl	1c788 <argp_parse@@Base+0x2544>
   1c31c:	push	{fp, lr}
   1c320:	mov	fp, sp
   1c324:	mov	r2, r1
   1c328:	mov	r1, r0
   1c32c:	clz	r0, r2
   1c330:	clz	r3, r1
   1c334:	lsr	r0, r0, #5
   1c338:	lsr	r3, r3, #5
   1c33c:	orrs	r0, r3, r0
   1c340:	movwne	r1, #1
   1c344:	movwne	r2, #1
   1c348:	mov	r0, #0
   1c34c:	bl	1e2e4 <argp_parse@@Base+0x40a0>
   1c350:	cmp	r0, #0
   1c354:	popne	{fp, pc}
   1c358:	bl	1c788 <argp_parse@@Base+0x2544>
   1c35c:	push	{r4, r5, r6, sl, fp, lr}
   1c360:	add	fp, sp, #16
   1c364:	ldr	r5, [r1]
   1c368:	mov	r4, r1
   1c36c:	mov	r6, r0
   1c370:	cmp	r0, #0
   1c374:	beq	1c38c <argp_parse@@Base+0x2148>
   1c378:	mov	r0, #1
   1c37c:	add	r0, r0, r5, lsr #1
   1c380:	adds	r5, r5, r0
   1c384:	bcc	1c394 <argp_parse@@Base+0x2150>
   1c388:	b	1c3d0 <argp_parse@@Base+0x218c>
   1c38c:	cmp	r5, #0
   1c390:	movweq	r5, #64	; 0x40
   1c394:	mov	r0, r6
   1c398:	mov	r1, r5
   1c39c:	mov	r2, #1
   1c3a0:	bl	1e2e4 <argp_parse@@Base+0x40a0>
   1c3a4:	cmp	r5, #0
   1c3a8:	mov	r1, r5
   1c3ac:	movwne	r1, #1
   1c3b0:	cmp	r0, #0
   1c3b4:	bne	1c3c8 <argp_parse@@Base+0x2184>
   1c3b8:	clz	r2, r6
   1c3bc:	lsr	r2, r2, #5
   1c3c0:	orrs	r1, r2, r1
   1c3c4:	bne	1c3d0 <argp_parse@@Base+0x218c>
   1c3c8:	str	r5, [r4]
   1c3cc:	pop	{r4, r5, r6, sl, fp, pc}
   1c3d0:	bl	1c788 <argp_parse@@Base+0x2544>
   1c3d4:	push	{r4, r5, r6, r7, fp, lr}
   1c3d8:	add	fp, sp, #16
   1c3dc:	ldr	r5, [r1]
   1c3e0:	mov	r6, r2
   1c3e4:	mov	r4, r1
   1c3e8:	mov	r7, r0
   1c3ec:	cmp	r0, #0
   1c3f0:	beq	1c408 <argp_parse@@Base+0x21c4>
   1c3f4:	mov	r0, #1
   1c3f8:	add	r0, r0, r5, lsr #1
   1c3fc:	adds	r5, r5, r0
   1c400:	bcc	1c420 <argp_parse@@Base+0x21dc>
   1c404:	b	1c454 <argp_parse@@Base+0x2210>
   1c408:	cmp	r5, #0
   1c40c:	bne	1c420 <argp_parse@@Base+0x21dc>
   1c410:	mov	r0, #64	; 0x40
   1c414:	cmp	r6, #64	; 0x40
   1c418:	udiv	r5, r0, r6
   1c41c:	addhi	r5, r5, #1
   1c420:	mov	r0, r7
   1c424:	mov	r1, r5
   1c428:	mov	r2, r6
   1c42c:	bl	1e2e4 <argp_parse@@Base+0x40a0>
   1c430:	cmp	r0, #0
   1c434:	bne	1c44c <argp_parse@@Base+0x2208>
   1c438:	cmp	r7, #0
   1c43c:	beq	1c454 <argp_parse@@Base+0x2210>
   1c440:	cmp	r6, #0
   1c444:	cmpne	r5, #0
   1c448:	bne	1c454 <argp_parse@@Base+0x2210>
   1c44c:	str	r5, [r4]
   1c450:	pop	{r4, r5, r6, r7, fp, pc}
   1c454:	bl	1c788 <argp_parse@@Base+0x2544>
   1c458:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c45c:	add	fp, sp, #24
   1c460:	mov	r8, r1
   1c464:	ldr	r1, [r1]
   1c468:	mov	r5, r0
   1c46c:	add	r0, r1, r1, asr #1
   1c470:	cmp	r0, r1
   1c474:	mvnvs	r0, #-2147483648	; 0x80000000
   1c478:	cmp	r0, r3
   1c47c:	mov	r7, r0
   1c480:	movgt	r7, r3
   1c484:	cmn	r3, #1
   1c488:	movle	r7, r0
   1c48c:	ldr	r0, [fp, #8]
   1c490:	cmn	r0, #1
   1c494:	ble	1c4bc <argp_parse@@Base+0x2278>
   1c498:	cmp	r0, #0
   1c49c:	beq	1c510 <argp_parse@@Base+0x22cc>
   1c4a0:	cmn	r7, #1
   1c4a4:	ble	1c4e4 <argp_parse@@Base+0x22a0>
   1c4a8:	mvn	r4, #-2147483648	; 0x80000000
   1c4ac:	udiv	r6, r4, r0
   1c4b0:	cmp	r6, r7
   1c4b4:	bge	1c510 <argp_parse@@Base+0x22cc>
   1c4b8:	b	1c520 <argp_parse@@Base+0x22dc>
   1c4bc:	cmn	r7, #1
   1c4c0:	ble	1c500 <argp_parse@@Base+0x22bc>
   1c4c4:	cmn	r0, #1
   1c4c8:	beq	1c510 <argp_parse@@Base+0x22cc>
   1c4cc:	mov	r6, #-2147483648	; 0x80000000
   1c4d0:	mvn	r4, #-2147483648	; 0x80000000
   1c4d4:	sdiv	r6, r6, r0
   1c4d8:	cmp	r6, r7
   1c4dc:	bge	1c510 <argp_parse@@Base+0x22cc>
   1c4e0:	b	1c520 <argp_parse@@Base+0x22dc>
   1c4e4:	beq	1c510 <argp_parse@@Base+0x22cc>
   1c4e8:	mov	r6, #-2147483648	; 0x80000000
   1c4ec:	mvn	r4, #-2147483648	; 0x80000000
   1c4f0:	sdiv	r6, r6, r7
   1c4f4:	cmp	r6, r0
   1c4f8:	bge	1c510 <argp_parse@@Base+0x22cc>
   1c4fc:	b	1c520 <argp_parse@@Base+0x22dc>
   1c500:	mvn	r4, #-2147483648	; 0x80000000
   1c504:	sdiv	r6, r4, r0
   1c508:	cmp	r7, r6
   1c50c:	blt	1c520 <argp_parse@@Base+0x22dc>
   1c510:	mul	r6, r7, r0
   1c514:	mov	r4, #64	; 0x40
   1c518:	cmp	r6, #63	; 0x3f
   1c51c:	bgt	1c528 <argp_parse@@Base+0x22e4>
   1c520:	sdiv	r7, r4, r0
   1c524:	mul	r6, r7, r0
   1c528:	cmp	r5, #0
   1c52c:	moveq	r4, #0
   1c530:	streq	r4, [r8]
   1c534:	sub	r4, r7, r1
   1c538:	cmp	r4, r2
   1c53c:	bge	1c5e8 <argp_parse@@Base+0x23a4>
   1c540:	add	r7, r1, r2
   1c544:	mov	r6, #0
   1c548:	mov	r2, #0
   1c54c:	cmp	r7, r3
   1c550:	movwgt	r6, #1
   1c554:	cmn	r3, #1
   1c558:	movwgt	r2, #1
   1c55c:	cmp	r7, r1
   1c560:	bvs	1c61c <argp_parse@@Base+0x23d8>
   1c564:	ands	r1, r2, r6
   1c568:	bne	1c61c <argp_parse@@Base+0x23d8>
   1c56c:	cmn	r0, #1
   1c570:	ble	1c598 <argp_parse@@Base+0x2354>
   1c574:	cmp	r0, #0
   1c578:	beq	1c5e4 <argp_parse@@Base+0x23a0>
   1c57c:	cmn	r7, #1
   1c580:	ble	1c5bc <argp_parse@@Base+0x2378>
   1c584:	mvn	r1, #-2147483648	; 0x80000000
   1c588:	udiv	r1, r1, r0
   1c58c:	cmp	r1, r7
   1c590:	bge	1c5e4 <argp_parse@@Base+0x23a0>
   1c594:	b	1c61c <argp_parse@@Base+0x23d8>
   1c598:	cmn	r7, #1
   1c59c:	ble	1c5d4 <argp_parse@@Base+0x2390>
   1c5a0:	cmn	r0, #1
   1c5a4:	beq	1c5e4 <argp_parse@@Base+0x23a0>
   1c5a8:	mov	r1, #-2147483648	; 0x80000000
   1c5ac:	sdiv	r1, r1, r0
   1c5b0:	cmp	r1, r7
   1c5b4:	bge	1c5e4 <argp_parse@@Base+0x23a0>
   1c5b8:	b	1c61c <argp_parse@@Base+0x23d8>
   1c5bc:	beq	1c5e4 <argp_parse@@Base+0x23a0>
   1c5c0:	mov	r1, #-2147483648	; 0x80000000
   1c5c4:	sdiv	r1, r1, r7
   1c5c8:	cmp	r1, r0
   1c5cc:	bge	1c5e4 <argp_parse@@Base+0x23a0>
   1c5d0:	b	1c61c <argp_parse@@Base+0x23d8>
   1c5d4:	mvn	r1, #-2147483648	; 0x80000000
   1c5d8:	sdiv	r1, r1, r0
   1c5dc:	cmp	r7, r1
   1c5e0:	blt	1c61c <argp_parse@@Base+0x23d8>
   1c5e4:	mul	r6, r7, r0
   1c5e8:	mov	r0, r5
   1c5ec:	mov	r1, r6
   1c5f0:	bl	1c83c <argp_parse@@Base+0x25f8>
   1c5f4:	cmp	r6, #0
   1c5f8:	movwne	r6, #1
   1c5fc:	cmp	r0, #0
   1c600:	bne	1c614 <argp_parse@@Base+0x23d0>
   1c604:	clz	r1, r5
   1c608:	lsr	r1, r1, #5
   1c60c:	orrs	r1, r1, r6
   1c610:	bne	1c61c <argp_parse@@Base+0x23d8>
   1c614:	str	r7, [r8]
   1c618:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c61c:	bl	1c788 <argp_parse@@Base+0x2544>
   1c620:	push	{fp, lr}
   1c624:	mov	fp, sp
   1c628:	mov	r1, #1
   1c62c:	bl	1c7b8 <argp_parse@@Base+0x2574>
   1c630:	cmp	r0, #0
   1c634:	popne	{fp, pc}
   1c638:	bl	1c788 <argp_parse@@Base+0x2544>
   1c63c:	push	{fp, lr}
   1c640:	mov	fp, sp
   1c644:	bl	1c7b8 <argp_parse@@Base+0x2574>
   1c648:	cmp	r0, #0
   1c64c:	popne	{fp, pc}
   1c650:	bl	1c788 <argp_parse@@Base+0x2544>
   1c654:	push	{fp, lr}
   1c658:	mov	fp, sp
   1c65c:	mov	r1, #1
   1c660:	bl	1c7b8 <argp_parse@@Base+0x2574>
   1c664:	cmp	r0, #0
   1c668:	popne	{fp, pc}
   1c66c:	bl	1c788 <argp_parse@@Base+0x2544>
   1c670:	push	{fp, lr}
   1c674:	mov	fp, sp
   1c678:	bl	1c7b8 <argp_parse@@Base+0x2574>
   1c67c:	cmp	r0, #0
   1c680:	popne	{fp, pc}
   1c684:	bl	1c788 <argp_parse@@Base+0x2544>
   1c688:	push	{r4, r5, r6, sl, fp, lr}
   1c68c:	add	fp, sp, #16
   1c690:	mov	r5, r0
   1c694:	mov	r0, r1
   1c698:	mov	r4, r1
   1c69c:	bl	1c80c <argp_parse@@Base+0x25c8>
   1c6a0:	cmp	r0, #0
   1c6a4:	beq	1c6c0 <argp_parse@@Base+0x247c>
   1c6a8:	mov	r1, r5
   1c6ac:	mov	r2, r4
   1c6b0:	mov	r6, r0
   1c6b4:	bl	11a58 <memcpy@plt>
   1c6b8:	mov	r0, r6
   1c6bc:	pop	{r4, r5, r6, sl, fp, pc}
   1c6c0:	bl	1c788 <argp_parse@@Base+0x2544>
   1c6c4:	push	{r4, r5, r6, sl, fp, lr}
   1c6c8:	add	fp, sp, #16
   1c6cc:	mov	r5, r0
   1c6d0:	mov	r0, r1
   1c6d4:	mov	r4, r1
   1c6d8:	bl	1c80c <argp_parse@@Base+0x25c8>
   1c6dc:	cmp	r0, #0
   1c6e0:	beq	1c6fc <argp_parse@@Base+0x24b8>
   1c6e4:	mov	r1, r5
   1c6e8:	mov	r2, r4
   1c6ec:	mov	r6, r0
   1c6f0:	bl	11a58 <memcpy@plt>
   1c6f4:	mov	r0, r6
   1c6f8:	pop	{r4, r5, r6, sl, fp, pc}
   1c6fc:	bl	1c788 <argp_parse@@Base+0x2544>
   1c700:	push	{r4, r5, r6, sl, fp, lr}
   1c704:	add	fp, sp, #16
   1c708:	mov	r5, r0
   1c70c:	add	r0, r1, #1
   1c710:	mov	r4, r1
   1c714:	bl	1c80c <argp_parse@@Base+0x25c8>
   1c718:	cmp	r0, #0
   1c71c:	beq	1c744 <argp_parse@@Base+0x2500>
   1c720:	mov	r6, r0
   1c724:	mov	r0, #0
   1c728:	mov	r1, r5
   1c72c:	mov	r2, r4
   1c730:	strb	r0, [r6, r4]
   1c734:	mov	r0, r6
   1c738:	bl	11a58 <memcpy@plt>
   1c73c:	mov	r0, r6
   1c740:	pop	{r4, r5, r6, sl, fp, pc}
   1c744:	bl	1c788 <argp_parse@@Base+0x2544>
   1c748:	push	{r4, r5, r6, sl, fp, lr}
   1c74c:	add	fp, sp, #16
   1c750:	mov	r4, r0
   1c754:	bl	11c20 <strlen@plt>
   1c758:	add	r5, r0, #1
   1c75c:	mov	r0, r5
   1c760:	bl	1c80c <argp_parse@@Base+0x25c8>
   1c764:	cmp	r0, #0
   1c768:	beq	1c784 <argp_parse@@Base+0x2540>
   1c76c:	mov	r1, r4
   1c770:	mov	r2, r5
   1c774:	mov	r6, r0
   1c778:	bl	11a58 <memcpy@plt>
   1c77c:	mov	r0, r6
   1c780:	pop	{r4, r5, r6, sl, fp, pc}
   1c784:	bl	1c788 <argp_parse@@Base+0x2544>
   1c788:	push	{fp, lr}
   1c78c:	mov	fp, sp
   1c790:	movw	r0, #1468	; 0x5bc
   1c794:	movw	r2, #62404	; 0xf3c4
   1c798:	movw	r3, #64530	; 0xfc12
   1c79c:	mov	r1, #0
   1c7a0:	movt	r0, #3
   1c7a4:	movt	r2, #1
   1c7a8:	movt	r3, #1
   1c7ac:	ldr	r0, [r0]
   1c7b0:	bl	11b6c <error@plt>
   1c7b4:	bl	11de8 <abort@plt>
   1c7b8:	clz	r2, r1
   1c7bc:	clz	r3, r0
   1c7c0:	lsr	r2, r2, #5
   1c7c4:	lsr	r3, r3, #5
   1c7c8:	orrs	r2, r3, r2
   1c7cc:	movwne	r1, #1
   1c7d0:	movwne	r0, #1
   1c7d4:	cmp	r1, #0
   1c7d8:	beq	1c808 <argp_parse@@Base+0x25c4>
   1c7dc:	mvn	r2, #-2147483648	; 0x80000000
   1c7e0:	udiv	r2, r2, r1
   1c7e4:	cmp	r2, r0
   1c7e8:	bcs	1c808 <argp_parse@@Base+0x25c4>
   1c7ec:	push	{fp, lr}
   1c7f0:	mov	fp, sp
   1c7f4:	bl	11c50 <__errno_location@plt>
   1c7f8:	mov	r1, #12
   1c7fc:	str	r1, [r0]
   1c800:	mov	r0, #0
   1c804:	pop	{fp, pc}
   1c808:	b	11974 <calloc@plt>
   1c80c:	cmp	r0, #0
   1c810:	movweq	r0, #1
   1c814:	cmn	r0, #1
   1c818:	ble	1c820 <argp_parse@@Base+0x25dc>
   1c81c:	b	11ba8 <malloc@plt>
   1c820:	push	{fp, lr}
   1c824:	mov	fp, sp
   1c828:	bl	11c50 <__errno_location@plt>
   1c82c:	mov	r1, #12
   1c830:	str	r1, [r0]
   1c834:	mov	r0, #0
   1c838:	pop	{fp, pc}
   1c83c:	push	{fp, lr}
   1c840:	mov	fp, sp
   1c844:	cmp	r0, #0
   1c848:	beq	1c864 <argp_parse@@Base+0x2620>
   1c84c:	cmp	r1, #0
   1c850:	beq	1c870 <argp_parse@@Base+0x262c>
   1c854:	cmn	r1, #1
   1c858:	ble	1c87c <argp_parse@@Base+0x2638>
   1c85c:	pop	{fp, lr}
   1c860:	b	11af4 <realloc@plt>
   1c864:	mov	r0, r1
   1c868:	pop	{fp, lr}
   1c86c:	b	1c80c <argp_parse@@Base+0x25c8>
   1c870:	bl	1b7d4 <argp_parse@@Base+0x1590>
   1c874:	mov	r0, #0
   1c878:	pop	{fp, pc}
   1c87c:	bl	11c50 <__errno_location@plt>
   1c880:	mov	r1, #12
   1c884:	str	r1, [r0]
   1c888:	mov	r0, #0
   1c88c:	pop	{fp, pc}
   1c890:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c894:	add	fp, sp, #24
   1c898:	mov	r5, r0
   1c89c:	mov	r0, #36	; 0x24
   1c8a0:	mov	r8, r3
   1c8a4:	mov	r6, r2
   1c8a8:	mov	r7, r1
   1c8ac:	bl	1c80c <argp_parse@@Base+0x25c8>
   1c8b0:	mov	r4, r0
   1c8b4:	cmp	r0, #0
   1c8b8:	beq	1c8f4 <argp_parse@@Base+0x26b0>
   1c8bc:	mov	r0, #0
   1c8c0:	stm	r4, {r5, r7}
   1c8c4:	str	r6, [r4, #8]
   1c8c8:	str	r8, [r4, #12]
   1c8cc:	str	r0, [r4, #16]
   1c8d0:	str	r0, [r4, #20]
   1c8d4:	mov	r0, #200	; 0xc8
   1c8d8:	bl	1c80c <argp_parse@@Base+0x25c8>
   1c8dc:	cmp	r0, #0
   1c8e0:	str	r0, [r4, #24]
   1c8e4:	beq	1c8fc <argp_parse@@Base+0x26b8>
   1c8e8:	add	r1, r0, #200	; 0xc8
   1c8ec:	str	r0, [r4, #28]
   1c8f0:	str	r1, [r4, #32]
   1c8f4:	mov	r0, r4
   1c8f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c8fc:	mov	r0, r4
   1c900:	bl	1b7d4 <argp_parse@@Base+0x1590>
   1c904:	mov	r4, #0
   1c908:	mov	r0, r4
   1c90c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c910:	push	{r4, sl, fp, lr}
   1c914:	add	fp, sp, #8
   1c918:	mov	r4, r0
   1c91c:	bl	1c954 <argp_parse@@Base+0x2710>
   1c920:	ldr	r0, [r4, #24]
   1c924:	ldr	r1, [r4, #28]
   1c928:	cmp	r1, r0
   1c92c:	bls	1c944 <argp_parse@@Base+0x2700>
   1c930:	ldr	r3, [r4]
   1c934:	sub	r2, r1, r0
   1c938:	mov	r1, #1
   1c93c:	bl	11a7c <fwrite_unlocked@plt>
   1c940:	ldr	r0, [r4, #24]
   1c944:	bl	1b7d4 <argp_parse@@Base+0x1590>
   1c948:	mov	r0, r4
   1c94c:	pop	{r4, sl, fp, lr}
   1c950:	b	1b7d4 <argp_parse@@Base+0x1590>
   1c954:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c958:	add	fp, sp, #28
   1c95c:	sub	sp, sp, #12
   1c960:	mov	r8, r0
   1c964:	ldr	r0, [r0, #16]
   1c968:	ldr	r1, [r8, #24]
   1c96c:	ldr	ip, [r8, #28]
   1c970:	add	sl, r1, r0
   1c974:	cmp	sl, ip
   1c978:	bcs	1cee8 <argp_parse@@Base+0x2ca4>
   1c97c:	ldr	r6, [r8, #20]
   1c980:	mov	r3, #32
   1c984:	cmp	r6, #0
   1c988:	beq	1c994 <argp_parse@@Base+0x2750>
   1c98c:	mov	r9, sl
   1c990:	b	1ca34 <argp_parse@@Base+0x27f0>
   1c994:	ldr	r6, [r8, #4]
   1c998:	cmp	r6, #0
   1c99c:	beq	1cc38 <argp_parse@@Base+0x29f4>
   1c9a0:	ldr	r1, [r8, #32]
   1c9a4:	add	r0, ip, r6
   1c9a8:	mov	r5, r6
   1c9ac:	cmp	r0, r1
   1c9b0:	bcs	1c9e8 <argp_parse@@Base+0x27a4>
   1c9b4:	add	r9, sl, r6
   1c9b8:	sub	r2, ip, sl
   1c9bc:	mov	r1, sl
   1c9c0:	mov	r0, r9
   1c9c4:	bl	11a04 <memmove@plt>
   1c9c8:	ldr	r0, [r8, #28]
   1c9cc:	mov	r1, #32
   1c9d0:	mov	r2, r6
   1c9d4:	add	r0, r0, r6
   1c9d8:	str	r0, [r8, #28]
   1c9dc:	mov	r0, sl
   1c9e0:	bl	11c8c <memset@plt>
   1c9e4:	b	1ca2c <argp_parse@@Base+0x27e8>
   1c9e8:	ldr	r0, [r8]
   1c9ec:	ldr	r1, [r0, #20]
   1c9f0:	ldr	r2, [r0, #24]
   1c9f4:	cmp	r1, r2
   1c9f8:	bcs	1ca14 <argp_parse@@Base+0x27d0>
   1c9fc:	add	r2, r1, #1
   1ca00:	str	r2, [r0, #20]
   1ca04:	strb	r3, [r1]
   1ca08:	subs	r5, r5, #1
   1ca0c:	bne	1c9e8 <argp_parse@@Base+0x27a4>
   1ca10:	b	1ca28 <argp_parse@@Base+0x27e4>
   1ca14:	mov	r1, #32
   1ca18:	bl	11cf8 <__overflow@plt>
   1ca1c:	mov	r3, #32
   1ca20:	subs	r5, r5, #1
   1ca24:	bne	1c9e8 <argp_parse@@Base+0x27a4>
   1ca28:	mov	r9, sl
   1ca2c:	str	r6, [r8, #20]
   1ca30:	ldr	ip, [r8, #28]
   1ca34:	sub	r4, ip, r9
   1ca38:	mov	r0, r9
   1ca3c:	mov	r1, #10
   1ca40:	str	ip, [sp, #8]
   1ca44:	mov	r2, r4
   1ca48:	bl	11cb0 <memchr@plt>
   1ca4c:	cmn	r6, #1
   1ca50:	mov	r7, r0
   1ca54:	movle	r6, #0
   1ca58:	strle	r6, [r8, #20]
   1ca5c:	cmp	r7, #0
   1ca60:	beq	1ca98 <argp_parse@@Base+0x2854>
   1ca64:	ldr	r5, [r8, #8]
   1ca68:	ldr	ip, [sp, #8]
   1ca6c:	sub	r0, r7, r9
   1ca70:	mov	r3, #32
   1ca74:	add	r0, r0, r6
   1ca78:	cmp	r0, r5
   1ca7c:	bge	1cab4 <argp_parse@@Base+0x2870>
   1ca80:	mov	r6, #0
   1ca84:	add	sl, r7, #1
   1ca88:	str	r6, [r8, #20]
   1ca8c:	cmp	sl, ip
   1ca90:	bcc	1c984 <argp_parse@@Base+0x2740>
   1ca94:	b	1cee8 <argp_parse@@Base+0x2ca4>
   1ca98:	ldr	ip, [sp, #8]
   1ca9c:	ldr	r5, [r8, #8]
   1caa0:	add	r0, r6, r4
   1caa4:	mov	r3, #32
   1caa8:	cmp	r0, r5
   1caac:	mov	r7, ip
   1cab0:	bcc	1cec8 <argp_parse@@Base+0x2c84>
   1cab4:	ldr	r0, [r8, #12]
   1cab8:	str	r4, [sp, #4]
   1cabc:	cmn	r0, #1
   1cac0:	ble	1cb20 <argp_parse@@Base+0x28dc>
   1cac4:	sub	sl, r5, r6
   1cac8:	mov	r4, r0
   1cacc:	mov	r1, #0
   1cad0:	add	r6, r9, sl
   1cad4:	cmp	sl, #0
   1cad8:	blt	1cb78 <argp_parse@@Base+0x2934>
   1cadc:	bl	11bfc <__ctype_b_loc@plt>
   1cae0:	ldr	r1, [r0]
   1cae4:	mov	r0, r6
   1cae8:	ldrb	r2, [r0]
   1caec:	ldrb	r2, [r1, r2, lsl #1]
   1caf0:	tst	r2, #1
   1caf4:	bne	1cc40 <argp_parse@@Base+0x29fc>
   1caf8:	sub	r0, r0, #1
   1cafc:	cmp	r0, r9
   1cb00:	bcs	1cae8 <argp_parse@@Base+0x28a4>
   1cb04:	ldr	ip, [sp, #8]
   1cb08:	mov	r3, #32
   1cb0c:	mov	r1, #0
   1cb10:	add	r5, r0, #1
   1cb14:	cmp	r5, r9
   1cb18:	bhi	1cb88 <argp_parse@@Base+0x2944>
   1cb1c:	b	1cc58 <argp_parse@@Base+0x2a14>
   1cb20:	sub	sl, r5, #1
   1cb24:	cmp	r7, ip
   1cb28:	bcs	1ced0 <argp_parse@@Base+0x2c8c>
   1cb2c:	sub	r0, sl, r6
   1cb30:	sub	r2, ip, r7
   1cb34:	mov	r1, r7
   1cb38:	add	r0, r9, r0
   1cb3c:	bl	11a04 <memmove@plt>
   1cb40:	ldr	r0, [r8, #20]
   1cb44:	ldr	r1, [r8, #28]
   1cb48:	mov	r6, #0
   1cb4c:	mov	r3, #32
   1cb50:	str	r6, [r8, #20]
   1cb54:	sub	r0, sl, r0
   1cb58:	add	sl, r9, r5
   1cb5c:	add	r0, r9, r0
   1cb60:	sub	r0, r7, r0
   1cb64:	add	ip, r1, r0
   1cb68:	str	ip, [r8, #28]
   1cb6c:	cmp	sl, ip
   1cb70:	bcc	1c984 <argp_parse@@Base+0x2740>
   1cb74:	b	1cee8 <argp_parse@@Base+0x2ca4>
   1cb78:	mov	r0, r6
   1cb7c:	add	r5, r0, #1
   1cb80:	cmp	r5, r9
   1cb84:	bls	1cc58 <argp_parse@@Base+0x2a14>
   1cb88:	cmp	r1, #0
   1cb8c:	beq	1cd64 <argp_parse@@Base+0x2b20>
   1cb90:	sub	r1, r0, #1
   1cb94:	mov	r7, r4
   1cb98:	mov	r6, r1
   1cb9c:	cmp	r1, r9
   1cba0:	bcc	1cbc0 <argp_parse@@Base+0x297c>
   1cba4:	bl	11bfc <__ctype_b_loc@plt>
   1cba8:	mov	r1, r6
   1cbac:	ldr	r0, [r0]
   1cbb0:	ldrb	r2, [r1], #-1
   1cbb4:	ldrb	r0, [r0, r2, lsl #1]
   1cbb8:	tst	r0, #1
   1cbbc:	bne	1cb98 <argp_parse@@Base+0x2954>
   1cbc0:	ldr	ip, [sp, #8]
   1cbc4:	add	r6, r6, #1
   1cbc8:	mov	r3, #32
   1cbcc:	add	r0, ip, #1
   1cbd0:	cmp	r5, r0
   1cbd4:	bne	1cccc <argp_parse@@Base+0x2a88>
   1cbd8:	cmp	ip, r5
   1cbdc:	bls	1cd9c <argp_parse@@Base+0x2b58>
   1cbe0:	ldr	r0, [r8, #32]
   1cbe4:	sub	r1, r0, r6
   1cbe8:	cmp	r1, r7
   1cbec:	bgt	1cd9c <argp_parse@@Base+0x2b58>
   1cbf0:	sub	r0, r0, ip
   1cbf4:	add	r1, r7, #1
   1cbf8:	cmp	r0, r1
   1cbfc:	ble	1ccf8 <argp_parse@@Base+0x2ab4>
   1cc00:	sub	r4, ip, r5
   1cc04:	add	sl, r6, #1
   1cc08:	mov	r1, r5
   1cc0c:	add	r0, sl, r7
   1cc10:	mov	r2, r4
   1cc14:	bl	11a04 <memmove@plt>
   1cc18:	ldr	r0, [r8, #12]
   1cc1c:	mov	r1, #10
   1cc20:	mov	r3, #32
   1cc24:	strb	r1, [r6]
   1cc28:	add	r5, sl, r0
   1cc2c:	add	r0, r5, r4
   1cc30:	sub	r0, r0, r9
   1cc34:	b	1cd4c <argp_parse@@Base+0x2b08>
   1cc38:	mov	r6, #0
   1cc3c:	b	1c98c <argp_parse@@Base+0x2748>
   1cc40:	ldr	ip, [sp, #8]
   1cc44:	mov	r1, #1
   1cc48:	mov	r3, #32
   1cc4c:	add	r5, r0, #1
   1cc50:	cmp	r5, r9
   1cc54:	bhi	1cb88 <argp_parse@@Base+0x2944>
   1cc58:	cmp	r6, r7
   1cc5c:	bcs	1cc90 <argp_parse@@Base+0x2a4c>
   1cc60:	add	r0, r9, sl
   1cc64:	add	r1, r0, #1
   1cc68:	mov	r6, r1
   1cc6c:	cmp	r1, r7
   1cc70:	bcs	1cc90 <argp_parse@@Base+0x2a4c>
   1cc74:	bl	11bfc <__ctype_b_loc@plt>
   1cc78:	mov	r1, r6
   1cc7c:	ldr	r0, [r0]
   1cc80:	ldrb	r2, [r1], #1
   1cc84:	ldrb	r0, [r0, r2, lsl #1]
   1cc88:	tst	r0, #1
   1cc8c:	beq	1cc68 <argp_parse@@Base+0x2a24>
   1cc90:	cmp	r6, r7
   1cc94:	beq	1cd7c <argp_parse@@Base+0x2b38>
   1cc98:	bl	11bfc <__ctype_b_loc@plt>
   1cc9c:	ldr	r0, [r0]
   1cca0:	mov	r5, r6
   1cca4:	ldrb	r1, [r5, #1]!
   1cca8:	ldrb	r1, [r0, r1, lsl #1]
   1ccac:	tst	r1, #1
   1ccb0:	bne	1cca4 <argp_parse@@Base+0x2a60>
   1ccb4:	ldr	ip, [sp, #8]
   1ccb8:	mov	r3, #32
   1ccbc:	mov	r7, r4
   1ccc0:	add	r0, ip, #1
   1ccc4:	cmp	r5, r0
   1ccc8:	beq	1cbd8 <argp_parse@@Base+0x2994>
   1cccc:	add	sl, r6, #1
   1ccd0:	cmp	ip, r5
   1ccd4:	bls	1cda0 <argp_parse@@Base+0x2b5c>
   1ccd8:	sub	r0, r5, sl
   1ccdc:	cmp	r0, r7
   1cce0:	bge	1cda0 <argp_parse@@Base+0x2b5c>
   1cce4:	ldr	r0, [r8, #32]
   1cce8:	sub	r0, r0, ip
   1ccec:	add	r1, r7, #1
   1ccf0:	cmp	r0, r1
   1ccf4:	bgt	1cc00 <argp_parse@@Base+0x29bc>
   1ccf8:	ldr	r0, [r8, #24]
   1ccfc:	cmp	r6, r0
   1cd00:	bls	1cd1c <argp_parse@@Base+0x2ad8>
   1cd04:	ldr	r3, [r8]
   1cd08:	sub	r2, r6, r0
   1cd0c:	mov	r1, #1
   1cd10:	bl	11a7c <fwrite_unlocked@plt>
   1cd14:	ldr	ip, [sp, #8]
   1cd18:	mov	r3, #32
   1cd1c:	ldr	r0, [r8]
   1cd20:	ldr	r1, [r0, #20]
   1cd24:	ldr	r2, [r0, #24]
   1cd28:	cmp	r1, r2
   1cd2c:	bcs	1ceb4 <argp_parse@@Base+0x2c70>
   1cd30:	add	r2, r1, #1
   1cd34:	str	r2, [r0, #20]
   1cd38:	mov	r0, #10
   1cd3c:	strb	r0, [r1]
   1cd40:	ldr	sl, [r8, #24]
   1cd44:	sub	r0, ip, sl
   1cd48:	mov	r9, sl
   1cd4c:	str	r0, [sp, #4]
   1cd50:	ldr	r6, [r8, #12]
   1cd54:	sub	r0, r5, sl
   1cd58:	cmp	r0, r6
   1cd5c:	blt	1cdb8 <argp_parse@@Base+0x2b74>
   1cd60:	b	1ce3c <argp_parse@@Base+0x2bf8>
   1cd64:	mov	r6, r5
   1cd68:	mov	r7, r4
   1cd6c:	add	r0, ip, #1
   1cd70:	cmp	r5, r0
   1cd74:	bne	1cccc <argp_parse@@Base+0x2a88>
   1cd78:	b	1cbd8 <argp_parse@@Base+0x2994>
   1cd7c:	ldr	ip, [sp, #8]
   1cd80:	mov	r6, #0
   1cd84:	add	sl, r7, #1
   1cd88:	mov	r3, #32
   1cd8c:	str	r6, [r8, #20]
   1cd90:	cmp	sl, ip
   1cd94:	bcc	1c984 <argp_parse@@Base+0x2740>
   1cd98:	b	1cee8 <argp_parse@@Base+0x2ca4>
   1cd9c:	add	sl, r6, #1
   1cda0:	mov	r0, #10
   1cda4:	strb	r0, [r6]
   1cda8:	ldr	r6, [r8, #12]
   1cdac:	sub	r0, r5, sl
   1cdb0:	cmp	r0, r6
   1cdb4:	bge	1ce3c <argp_parse@@Base+0x2bf8>
   1cdb8:	ldr	r0, [sp, #4]
   1cdbc:	add	r0, r9, r0
   1cdc0:	add	r0, r0, #1
   1cdc4:	cmp	r5, r0
   1cdc8:	bne	1cddc <argp_parse@@Base+0x2b98>
   1cdcc:	ldr	r0, [r8, #32]
   1cdd0:	sub	r0, r0, r5
   1cdd4:	cmp	r0, r6
   1cdd8:	bge	1ce3c <argp_parse@@Base+0x2bf8>
   1cddc:	cmp	r6, #1
   1cde0:	blt	1ce60 <argp_parse@@Base+0x2c1c>
   1cde4:	mov	r7, #0
   1cde8:	ldr	r0, [r8]
   1cdec:	ldr	r1, [r0, #20]
   1cdf0:	ldr	r2, [r0, #24]
   1cdf4:	cmp	r1, r2
   1cdf8:	bcs	1ce1c <argp_parse@@Base+0x2bd8>
   1cdfc:	add	r2, r1, #1
   1ce00:	str	r2, [r0, #20]
   1ce04:	strb	r3, [r1]
   1ce08:	ldr	r6, [r8, #12]
   1ce0c:	add	r7, r7, #1
   1ce10:	cmp	r7, r6
   1ce14:	blt	1cde8 <argp_parse@@Base+0x2ba4>
   1ce18:	b	1ce60 <argp_parse@@Base+0x2c1c>
   1ce1c:	mov	r1, #32
   1ce20:	bl	11cf8 <__overflow@plt>
   1ce24:	mov	r3, #32
   1ce28:	ldr	r6, [r8, #12]
   1ce2c:	add	r7, r7, #1
   1ce30:	cmp	r7, r6
   1ce34:	blt	1cde8 <argp_parse@@Base+0x2ba4>
   1ce38:	b	1ce60 <argp_parse@@Base+0x2c1c>
   1ce3c:	cmp	r6, #1
   1ce40:	blt	1ce60 <argp_parse@@Base+0x2c1c>
   1ce44:	mov	r0, #0
   1ce48:	strb	r3, [sl, r0]
   1ce4c:	add	r0, r0, #1
   1ce50:	ldr	r6, [r8, #12]
   1ce54:	cmp	r0, r6
   1ce58:	blt	1ce48 <argp_parse@@Base+0x2c04>
   1ce5c:	add	sl, sl, r0
   1ce60:	cmp	sl, r5
   1ce64:	bcs	1ce88 <argp_parse@@Base+0x2c44>
   1ce68:	ldr	r0, [sp, #4]
   1ce6c:	mov	r1, r5
   1ce70:	add	r0, r9, r0
   1ce74:	sub	r2, r0, r5
   1ce78:	mov	r0, sl
   1ce7c:	bl	11a04 <memmove@plt>
   1ce80:	ldr	r6, [r8, #12]
   1ce84:	mov	r3, #32
   1ce88:	ldr	r0, [sp, #4]
   1ce8c:	cmp	r6, #0
   1ce90:	mvneq	r6, #0
   1ce94:	str	r6, [r8, #20]
   1ce98:	sub	r0, r0, r5
   1ce9c:	add	r0, r0, r9
   1cea0:	add	ip, sl, r0
   1cea4:	str	ip, [r8, #28]
   1cea8:	cmp	sl, ip
   1ceac:	bcc	1c984 <argp_parse@@Base+0x2740>
   1ceb0:	b	1cee8 <argp_parse@@Base+0x2ca4>
   1ceb4:	mov	r1, #10
   1ceb8:	bl	11cf8 <__overflow@plt>
   1cebc:	ldr	ip, [sp, #8]
   1cec0:	mov	r3, #32
   1cec4:	b	1cd40 <argp_parse@@Base+0x2afc>
   1cec8:	str	r0, [r8, #20]
   1cecc:	b	1cee8 <argp_parse@@Base+0x2ca4>
   1ced0:	ldr	r0, [sp, #4]
   1ced4:	add	r0, r6, r0
   1ced8:	str	r0, [r8, #20]
   1cedc:	sub	r0, sl, r0
   1cee0:	add	ip, ip, r0
   1cee4:	str	ip, [r8, #28]
   1cee8:	ldr	r0, [r8, #24]
   1ceec:	sub	r0, ip, r0
   1cef0:	str	r0, [r8, #16]
   1cef4:	sub	sp, fp, #28
   1cef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cefc:	push	{r4, r5, r6, sl, fp, lr}
   1cf00:	add	fp, sp, #16
   1cf04:	mov	r4, r0
   1cf08:	mov	r6, r1
   1cf0c:	ldr	r0, [r0, #28]
   1cf10:	mov	r5, #1
   1cf14:	ldr	r1, [r4, #32]
   1cf18:	sub	r0, r1, r0
   1cf1c:	cmp	r0, r6
   1cf20:	bcs	1cfe0 <argp_parse@@Base+0x2d9c>
   1cf24:	mov	r0, r4
   1cf28:	bl	1c954 <argp_parse@@Base+0x2710>
   1cf2c:	ldr	r0, [r4, #24]
   1cf30:	ldr	r1, [r4, #28]
   1cf34:	ldr	r3, [r4]
   1cf38:	mov	r5, #1
   1cf3c:	sub	r2, r1, r0
   1cf40:	mov	r1, #1
   1cf44:	bl	11a7c <fwrite_unlocked@plt>
   1cf48:	mov	r1, r0
   1cf4c:	ldr	r0, [r4, #24]
   1cf50:	ldr	r2, [r4, #28]
   1cf54:	sub	r3, r2, r0
   1cf58:	cmp	r1, r3
   1cf5c:	bne	1cfac <argp_parse@@Base+0x2d68>
   1cf60:	mov	r1, #0
   1cf64:	str	r1, [r4, #16]
   1cf68:	str	r0, [r4, #28]
   1cf6c:	ldr	r1, [r4, #32]
   1cf70:	sub	r1, r1, r0
   1cf74:	cmp	r1, r6
   1cf78:	bcs	1cfe0 <argp_parse@@Base+0x2d9c>
   1cf7c:	adds	r6, r1, r6
   1cf80:	bcs	1cfd0 <argp_parse@@Base+0x2d8c>
   1cf84:	mov	r1, r6
   1cf88:	bl	1c83c <argp_parse@@Base+0x25f8>
   1cf8c:	cmp	r0, #0
   1cf90:	beq	1cfd0 <argp_parse@@Base+0x2d8c>
   1cf94:	str	r0, [r4, #24]
   1cf98:	add	r1, r0, r6
   1cf9c:	str	r0, [r4, #28]
   1cfa0:	mov	r0, r5
   1cfa4:	str	r1, [r4, #32]
   1cfa8:	pop	{r4, r5, r6, sl, fp, pc}
   1cfac:	sub	r2, r2, r1
   1cfb0:	str	r2, [r4, #28]
   1cfb4:	sub	r2, r2, r0
   1cfb8:	ldr	r3, [r4, #16]
   1cfbc:	sub	r3, r3, r1
   1cfc0:	add	r1, r0, r1
   1cfc4:	str	r3, [r4, #16]
   1cfc8:	bl	11a04 <memmove@plt>
   1cfcc:	b	1cfdc <argp_parse@@Base+0x2d98>
   1cfd0:	bl	11c50 <__errno_location@plt>
   1cfd4:	mov	r1, #12
   1cfd8:	str	r1, [r0]
   1cfdc:	mov	r5, #0
   1cfe0:	mov	r0, r5
   1cfe4:	pop	{r4, r5, r6, sl, fp, pc}
   1cfe8:	sub	sp, sp, #8
   1cfec:	push	{r4, r5, r6, r7, fp, lr}
   1cff0:	add	fp, sp, #16
   1cff4:	sub	sp, sp, #8
   1cff8:	mov	r5, r1
   1cffc:	mov	r4, r0
   1d000:	mov	r1, #150	; 0x96
   1d004:	add	r6, fp, #8
   1d008:	str	r3, [fp, #12]
   1d00c:	str	r2, [fp, #8]
   1d010:	mov	r0, r4
   1d014:	bl	1cefc <argp_parse@@Base+0x2cb8>
   1d018:	cmp	r0, #0
   1d01c:	beq	1d068 <argp_parse@@Base+0x2e24>
   1d020:	str	r6, [sp, #4]
   1d024:	mov	r2, r5
   1d028:	mov	r3, r6
   1d02c:	ldr	r0, [r4, #28]
   1d030:	ldr	r1, [r4, #32]
   1d034:	sub	r7, r1, r0
   1d038:	mov	r1, r7
   1d03c:	bl	11d64 <vsnprintf@plt>
   1d040:	add	r1, r0, #1
   1d044:	cmp	r0, r7
   1d048:	bcs	1d010 <argp_parse@@Base+0x2dcc>
   1d04c:	ldr	r1, [r4, #28]
   1d050:	add	r1, r1, r0
   1d054:	str	r1, [r4, #28]
   1d058:	sub	sp, fp, #16
   1d05c:	pop	{r4, r5, r6, r7, fp, lr}
   1d060:	add	sp, sp, #8
   1d064:	bx	lr
   1d068:	mvn	r0, #0
   1d06c:	sub	sp, fp, #16
   1d070:	pop	{r4, r5, r6, r7, fp, lr}
   1d074:	add	sp, sp, #8
   1d078:	bx	lr
   1d07c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d080:	add	fp, sp, #28
   1d084:	sub	sp, sp, #68	; 0x44
   1d088:	mvn	r6, #0
   1d08c:	cmp	r0, #1
   1d090:	blt	1d7fc <argp_parse@@Base+0x35b8>
   1d094:	mov	r7, r2
   1d098:	ldr	r2, [fp, #16]
   1d09c:	mov	r5, r3
   1d0a0:	mov	r3, r0
   1d0a4:	mov	sl, r1
   1d0a8:	mov	r0, #0
   1d0ac:	ldr	r9, [r2]
   1d0b0:	ldr	r6, [r2, #4]
   1d0b4:	str	r0, [r2, #12]
   1d0b8:	cmp	r9, #0
   1d0bc:	beq	1d0e0 <argp_parse@@Base+0x2e9c>
   1d0c0:	ldr	r0, [r2, #16]
   1d0c4:	cmp	r0, #0
   1d0c8:	beq	1d0e8 <argp_parse@@Base+0x2ea4>
   1d0cc:	ldrb	r0, [r7]
   1d0d0:	cmp	r0, #45	; 0x2d
   1d0d4:	cmpne	r0, #43	; 0x2b
   1d0d8:	addeq	r7, r7, #1
   1d0dc:	b	1d15c <argp_parse@@Base+0x2f18>
   1d0e0:	mov	r9, #1
   1d0e4:	str	r9, [r2]
   1d0e8:	mov	r0, #0
   1d0ec:	str	r9, [r2, #28]
   1d0f0:	str	r9, [r2, #32]
   1d0f4:	str	r0, [r2, #20]
   1d0f8:	ldrb	r1, [r7]
   1d0fc:	cmp	r1, #43	; 0x2b
   1d100:	beq	1d110 <argp_parse@@Base+0x2ecc>
   1d104:	cmp	r1, #45	; 0x2d
   1d108:	bne	1d11c <argp_parse@@Base+0x2ed8>
   1d10c:	mov	r0, #2
   1d110:	str	r0, [r2, #24]
   1d114:	add	r7, r7, #1
   1d118:	b	1d154 <argp_parse@@Base+0x2f10>
   1d11c:	ldr	r0, [fp, #20]
   1d120:	cmp	r0, #0
   1d124:	bne	1d14c <argp_parse@@Base+0x2f08>
   1d128:	movw	r0, #64620	; 0xfc6c
   1d12c:	mov	r8, r2
   1d130:	mov	r4, r3
   1d134:	movt	r0, #1
   1d138:	bl	11b9c <getenv@plt>
   1d13c:	mov	r3, r4
   1d140:	mov	r2, r8
   1d144:	cmp	r0, #0
   1d148:	beq	1d808 <argp_parse@@Base+0x35c4>
   1d14c:	mov	r0, #0
   1d150:	str	r0, [r2, #24]
   1d154:	mov	r0, #1
   1d158:	str	r0, [r2, #16]
   1d15c:	ldrb	r0, [r7]
   1d160:	ldr	r4, [r2, #20]
   1d164:	str	r5, [sp, #48]	; 0x30
   1d168:	subs	r0, r0, #58	; 0x3a
   1d16c:	movne	r0, r6
   1d170:	cmp	r4, #0
   1d174:	str	r0, [fp, #-44]	; 0xffffffd4
   1d178:	ldrbne	r0, [r4]
   1d17c:	cmpne	r0, #0
   1d180:	bne	1d218 <argp_parse@@Base+0x2fd4>
   1d184:	mov	r4, r2
   1d188:	mov	r6, r2
   1d18c:	str	r7, [sp, #32]
   1d190:	ldr	r1, [r4, #32]!
   1d194:	cmp	r1, r9
   1d198:	mov	r8, r1
   1d19c:	strgt	r9, [r4]
   1d1a0:	movgt	r8, r9
   1d1a4:	ldr	r5, [r6, #28]!
   1d1a8:	cmp	r5, r9
   1d1ac:	strgt	r9, [r6]
   1d1b0:	movgt	r5, r9
   1d1b4:	ldr	r7, [r2, #24]
   1d1b8:	cmp	r7, #1
   1d1bc:	bne	1d4fc <argp_parse@@Base+0x32b8>
   1d1c0:	cmp	r5, r8
   1d1c4:	cmpne	r8, r9
   1d1c8:	bne	1d2e0 <argp_parse@@Base+0x309c>
   1d1cc:	cmp	r8, r9
   1d1d0:	mov	r1, r6
   1d1d4:	mov	r0, r9
   1d1d8:	bne	1d4e0 <argp_parse@@Base+0x329c>
   1d1dc:	mov	r8, r9
   1d1e0:	cmp	r9, r3
   1d1e4:	bge	1d4f4 <argp_parse@@Base+0x32b0>
   1d1e8:	ldr	r0, [sl, r8, lsl #2]
   1d1ec:	ldrb	r1, [r0]
   1d1f0:	cmp	r1, #45	; 0x2d
   1d1f4:	bne	1d204 <argp_parse@@Base+0x2fc0>
   1d1f8:	ldrb	r0, [r0, #1]
   1d1fc:	cmp	r0, #0
   1d200:	bne	1d4f4 <argp_parse@@Base+0x32b0>
   1d204:	add	r8, r8, #1
   1d208:	cmp	r8, r3
   1d20c:	str	r8, [r2]
   1d210:	blt	1d1e8 <argp_parse@@Base+0x2fa4>
   1d214:	b	1d4f4 <argp_parse@@Base+0x32b0>
   1d218:	str	r3, [fp, #-40]	; 0xffffffd8
   1d21c:	add	r8, r4, #1
   1d220:	mov	r0, r7
   1d224:	mov	r5, r2
   1d228:	str	r8, [r2, #20]
   1d22c:	ldrb	r6, [r4]
   1d230:	mov	r1, r6
   1d234:	bl	11c38 <strchr@plt>
   1d238:	ldrb	r1, [r4, #1]
   1d23c:	mov	r3, r5
   1d240:	cmp	r1, #0
   1d244:	orr	r1, r6, #1
   1d248:	addeq	r9, r9, #1
   1d24c:	streq	r9, [r5]
   1d250:	cmp	r1, #59	; 0x3b
   1d254:	cmpne	r0, #0
   1d258:	bne	1d27c <argp_parse@@Base+0x3038>
   1d25c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d260:	cmp	r0, #0
   1d264:	bne	1d8c8 <argp_parse@@Base+0x3684>
   1d268:	str	r6, [r3, #8]
   1d26c:	mov	r6, #63	; 0x3f
   1d270:	mov	r0, r6
   1d274:	sub	sp, fp, #28
   1d278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d27c:	ldrb	r2, [r0]
   1d280:	ldrb	r1, [r0, #1]
   1d284:	cmp	r2, #87	; 0x57
   1d288:	bne	1d5e4 <argp_parse@@Base+0x33a0>
   1d28c:	ldr	r2, [sp, #48]	; 0x30
   1d290:	cmp	r2, #0
   1d294:	beq	1d5e4 <argp_parse@@Base+0x33a0>
   1d298:	cmp	r1, #59	; 0x3b
   1d29c:	bne	1d5e4 <argp_parse@@Base+0x33a0>
   1d2a0:	ldrb	r0, [r8]
   1d2a4:	cmp	r0, #0
   1d2a8:	bne	1d8f8 <argp_parse@@Base+0x36b4>
   1d2ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d2b0:	cmp	r9, r0
   1d2b4:	bne	1d8f4 <argp_parse@@Base+0x36b0>
   1d2b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d2bc:	cmp	r0, #0
   1d2c0:	bne	1d988 <argp_parse@@Base+0x3744>
   1d2c4:	str	r6, [r3, #8]
   1d2c8:	ldrb	r6, [r7]
   1d2cc:	cmp	r6, #58	; 0x3a
   1d2d0:	movwne	r6, #63	; 0x3f
   1d2d4:	mov	r0, r6
   1d2d8:	sub	sp, fp, #28
   1d2dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2e0:	cmp	r9, r8
   1d2e4:	str	r7, [sp, #20]
   1d2e8:	str	r6, [sp, #24]
   1d2ec:	str	r5, [sp, #36]	; 0x24
   1d2f0:	str	r4, [sp, #28]
   1d2f4:	str	r3, [fp, #-40]	; 0xffffffd8
   1d2f8:	ble	1d4b8 <argp_parse@@Base+0x3274>
   1d2fc:	ldr	r0, [sp, #36]	; 0x24
   1d300:	cmp	r0, r8
   1d304:	bge	1d4b8 <argp_parse@@Base+0x3274>
   1d308:	add	r0, sl, r8, lsl #2
   1d30c:	mvn	r1, r1
   1d310:	ldr	r2, [sp, #36]	; 0x24
   1d314:	mov	r3, r9
   1d318:	str	r0, [fp, #-32]	; 0xffffffe0
   1d31c:	mvn	r0, r9
   1d320:	cmp	r0, r1
   1d324:	movgt	r1, r0
   1d328:	add	r0, r1, #1
   1d32c:	str	r1, [fp, #-36]	; 0xffffffdc
   1d330:	str	r0, [sp, #44]	; 0x2c
   1d334:	add	r0, sl, #4
   1d338:	str	r0, [sp, #40]	; 0x28
   1d33c:	sub	ip, r8, r2
   1d340:	sub	r7, r3, r8
   1d344:	cmp	r7, ip
   1d348:	ble	1d404 <argp_parse@@Base+0x31c0>
   1d34c:	sub	r4, r3, ip
   1d350:	cmp	ip, #1
   1d354:	blt	1d3f0 <argp_parse@@Base+0x31ac>
   1d358:	mov	r7, #0
   1d35c:	cmp	ip, #4
   1d360:	bcc	1d3b8 <argp_parse@@Base+0x3174>
   1d364:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d368:	ldr	r1, [sp, #40]	; 0x28
   1d36c:	add	lr, sl, r2, lsl #2
   1d370:	add	r0, r0, r3
   1d374:	add	r0, r0, r2
   1d378:	add	r0, r1, r0, lsl #2
   1d37c:	add	r1, sl, r3, lsl #2
   1d380:	cmp	lr, r1
   1d384:	ldrcc	r1, [fp, #-32]	; 0xffffffe0
   1d388:	cmpcc	r0, r1
   1d38c:	bcc	1d3b8 <argp_parse@@Base+0x3174>
   1d390:	bic	r7, ip, #3
   1d394:	mov	r1, r7
   1d398:	vld1.32	{d16-d17}, [r0]
   1d39c:	vld1.32	{d18-d19}, [lr]
   1d3a0:	subs	r1, r1, #4
   1d3a4:	vst1.32	{d16-d17}, [lr]!
   1d3a8:	vst1.32	{d18-d19}, [r0]!
   1d3ac:	bne	1d398 <argp_parse@@Base+0x3154>
   1d3b0:	cmp	ip, r7
   1d3b4:	beq	1d3f0 <argp_parse@@Base+0x31ac>
   1d3b8:	add	r0, sl, r3, lsl #2
   1d3bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d3c0:	add	r1, r7, r2
   1d3c4:	add	r1, sl, r1, lsl #2
   1d3c8:	add	r3, r3, r7
   1d3cc:	add	r3, r3, r2
   1d3d0:	add	r7, r0, r3, lsl #2
   1d3d4:	ldr	r5, [r1]
   1d3d8:	add	r3, r3, #1
   1d3dc:	ldr	r6, [r7, #4]
   1d3e0:	cmn	r3, #1
   1d3e4:	str	r6, [r1], #4
   1d3e8:	str	r5, [r7, #4]
   1d3ec:	bne	1d3d0 <argp_parse@@Base+0x318c>
   1d3f0:	mov	r3, r4
   1d3f4:	cmp	r3, r8
   1d3f8:	cmpgt	r8, r2
   1d3fc:	bgt	1d33c <argp_parse@@Base+0x30f8>
   1d400:	b	1d4b8 <argp_parse@@Base+0x3274>
   1d404:	cmp	r7, #1
   1d408:	blt	1d4a8 <argp_parse@@Base+0x3264>
   1d40c:	mov	r4, #0
   1d410:	cmp	r7, #3
   1d414:	bls	1d474 <argp_parse@@Base+0x3230>
   1d418:	add	r1, sl, r3, lsl #2
   1d41c:	add	r0, sl, r2, lsl #2
   1d420:	cmp	r0, r1
   1d424:	bcs	1d448 <argp_parse@@Base+0x3204>
   1d428:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1d42c:	ldr	r6, [sp, #40]	; 0x28
   1d430:	add	r1, r1, r3
   1d434:	add	r1, r1, r2
   1d438:	add	r1, r6, r1, lsl #2
   1d43c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1d440:	cmp	r6, r1
   1d444:	bcc	1d474 <argp_parse@@Base+0x3230>
   1d448:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1d44c:	bic	r4, r7, #3
   1d450:	mov	r1, r4
   1d454:	vld1.32	{d16-d17}, [r6]
   1d458:	vld1.32	{d18-d19}, [r0]
   1d45c:	subs	r1, r1, #4
   1d460:	vst1.32	{d16-d17}, [r0]!
   1d464:	vst1.32	{d18-d19}, [r6]!
   1d468:	bne	1d454 <argp_parse@@Base+0x3210>
   1d46c:	cmp	r7, r4
   1d470:	beq	1d4a8 <argp_parse@@Base+0x3264>
   1d474:	ldr	r1, [sp, #44]	; 0x2c
   1d478:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d47c:	add	r6, r4, r2
   1d480:	add	r1, r1, r3
   1d484:	add	r0, r0, r4, lsl #2
   1d488:	sub	r1, r1, r4
   1d48c:	add	r4, sl, r6, lsl #2
   1d490:	ldr	r6, [r4]
   1d494:	ldr	r5, [r0]
   1d498:	subs	r1, r1, #1
   1d49c:	str	r5, [r4], #4
   1d4a0:	str	r6, [r0], #4
   1d4a4:	bne	1d490 <argp_parse@@Base+0x324c>
   1d4a8:	add	r2, r7, r2
   1d4ac:	cmp	r3, r8
   1d4b0:	cmpgt	r8, r2
   1d4b4:	bgt	1d33c <argp_parse@@Base+0x30f8>
   1d4b8:	ldr	r0, [sp, #36]	; 0x24
   1d4bc:	ldr	r4, [sp, #28]
   1d4c0:	ldr	r6, [sp, #24]
   1d4c4:	ldr	r2, [fp, #16]
   1d4c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d4cc:	ldr	r7, [sp, #20]
   1d4d0:	add	r0, r0, r9
   1d4d4:	mov	r1, r4
   1d4d8:	sub	r0, r0, r8
   1d4dc:	str	r0, [r6]
   1d4e0:	mov	r5, r0
   1d4e4:	str	r9, [r1]
   1d4e8:	mov	r8, r9
   1d4ec:	cmp	r9, r3
   1d4f0:	blt	1d1e8 <argp_parse@@Base+0x2fa4>
   1d4f4:	mov	r9, r8
   1d4f8:	str	r8, [r4]
   1d4fc:	cmp	r9, r3
   1d500:	beq	1d7f0 <argp_parse@@Base+0x35ac>
   1d504:	ldr	r0, [sl, r9, lsl #2]
   1d508:	movw	r1, #59836	; 0xe9bc
   1d50c:	str	r3, [fp, #-40]	; 0xffffffd8
   1d510:	movt	r1, #1
   1d514:	bl	11998 <strcmp@plt>
   1d518:	cmp	r0, #0
   1d51c:	beq	1d5b4 <argp_parse@@Base+0x3370>
   1d520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d524:	ldr	r2, [fp, #16]
   1d528:	cmp	r9, r3
   1d52c:	beq	1d7f0 <argp_parse@@Base+0x35ac>
   1d530:	ldr	r0, [sl, r9, lsl #2]
   1d534:	mvn	r6, #0
   1d538:	ldrb	r1, [r0]
   1d53c:	cmp	r1, #45	; 0x2d
   1d540:	bne	1d60c <argp_parse@@Base+0x33c8>
   1d544:	mov	r4, r0
   1d548:	ldrb	r1, [r4, #1]!
   1d54c:	cmp	r1, #0
   1d550:	beq	1d60c <argp_parse@@Base+0x33c8>
   1d554:	ldr	r6, [sp, #48]	; 0x30
   1d558:	cmp	r6, #0
   1d55c:	beq	1d828 <argp_parse@@Base+0x35e4>
   1d560:	ldr	r5, [fp, #12]
   1d564:	ldr	r7, [sp, #32]
   1d568:	cmp	r1, #45	; 0x2d
   1d56c:	bne	1d830 <argp_parse@@Base+0x35ec>
   1d570:	add	r0, r0, #2
   1d574:	mov	r1, sl
   1d578:	str	r0, [r2, #20]
   1d57c:	ldr	r0, [fp, #8]
   1d580:	stm	sp, {r0, r5}
   1d584:	str	r2, [sp, #8]
   1d588:	mov	r2, r7
   1d58c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d590:	str	r0, [sp, #12]
   1d594:	movw	r0, #59836	; 0xe9bc
   1d598:	movt	r0, #1
   1d59c:	str	r0, [sp, #16]
   1d5a0:	mov	r0, r3
   1d5a4:	mov	r3, r6
   1d5a8:	bl	1d9e0 <argp_parse@@Base+0x379c>
   1d5ac:	sub	sp, fp, #28
   1d5b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d5b4:	ldr	r2, [fp, #16]
   1d5b8:	add	r3, r9, #1
   1d5bc:	cmp	r5, r8
   1d5c0:	cmpne	r8, r3
   1d5c4:	str	r3, [r2]
   1d5c8:	bne	1d62c <argp_parse@@Base+0x33e8>
   1d5cc:	cmp	r5, r8
   1d5d0:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1d5d4:	mov	r1, r6
   1d5d8:	mov	r0, r3
   1d5dc:	beq	1d7e0 <argp_parse@@Base+0x359c>
   1d5e0:	b	1d7e8 <argp_parse@@Base+0x35a4>
   1d5e4:	cmp	r1, #58	; 0x3a
   1d5e8:	bne	1d7fc <argp_parse@@Base+0x35b8>
   1d5ec:	ldrb	r0, [r0, #2]
   1d5f0:	ldrb	r1, [r8]
   1d5f4:	cmp	r0, #58	; 0x3a
   1d5f8:	bne	1d810 <argp_parse@@Base+0x35cc>
   1d5fc:	cmp	r1, #0
   1d600:	bne	1d818 <argp_parse@@Base+0x35d4>
   1d604:	mov	r0, #0
   1d608:	b	1d950 <argp_parse@@Base+0x370c>
   1d60c:	cmp	r7, #0
   1d610:	strne	r0, [r2, #12]
   1d614:	addne	r0, r9, #1
   1d618:	movne	r6, #1
   1d61c:	strne	r0, [r2]
   1d620:	mov	r0, r6
   1d624:	sub	sp, fp, #28
   1d628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d62c:	cmp	r9, r8
   1d630:	str	r3, [fp, #-36]	; 0xffffffdc
   1d634:	str	r6, [sp, #24]
   1d638:	str	r5, [sp, #36]	; 0x24
   1d63c:	str	r4, [sp, #28]
   1d640:	blt	1d7bc <argp_parse@@Base+0x3578>
   1d644:	ldr	r0, [sp, #36]	; 0x24
   1d648:	cmp	r0, r8
   1d64c:	bge	1d7bc <argp_parse@@Base+0x3578>
   1d650:	sub	r0, sl, r8, lsl #2
   1d654:	ldr	r7, [sp, #36]	; 0x24
   1d658:	add	r9, sl, r8, lsl #2
   1d65c:	str	r0, [fp, #-44]	; 0xffffffd4
   1d660:	rsb	r0, r8, #0
   1d664:	str	r0, [fp, #-32]	; 0xffffffe0
   1d668:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d66c:	sub	r4, r8, r7
   1d670:	sub	r3, r0, r8
   1d674:	cmp	r3, r4
   1d678:	ble	1d718 <argp_parse@@Base+0x34d4>
   1d67c:	sub	r3, r0, r4
   1d680:	cmp	r4, #1
   1d684:	blt	1d704 <argp_parse@@Base+0x34c0>
   1d688:	mov	r1, #0
   1d68c:	cmp	r4, #4
   1d690:	bcc	1d6d4 <argp_parse@@Base+0x3490>
   1d694:	add	r2, sl, r0, lsl #2
   1d698:	add	lr, sl, r7, lsl #2
   1d69c:	add	ip, sl, r3, lsl #2
   1d6a0:	cmp	lr, r2
   1d6a4:	cmpcc	ip, r9
   1d6a8:	bcc	1d6d4 <argp_parse@@Base+0x3490>
   1d6ac:	bic	r1, r4, #3
   1d6b0:	mov	r2, r1
   1d6b4:	vld1.32	{d16-d17}, [ip]
   1d6b8:	vld1.32	{d18-d19}, [lr]
   1d6bc:	subs	r2, r2, #4
   1d6c0:	vst1.32	{d16-d17}, [lr]!
   1d6c4:	vst1.32	{d18-d19}, [ip]!
   1d6c8:	bne	1d6b4 <argp_parse@@Base+0x3470>
   1d6cc:	cmp	r4, r1
   1d6d0:	beq	1d704 <argp_parse@@Base+0x34c0>
   1d6d4:	add	r0, r7, r0
   1d6d8:	sub	r2, r8, r1
   1d6dc:	add	r1, r1, r7
   1d6e0:	add	r1, sl, r1, lsl #2
   1d6e4:	add	r0, sl, r0, lsl #2
   1d6e8:	ldr	r6, [r0, -r2, lsl #2]
   1d6ec:	ldr	r5, [r1]
   1d6f0:	str	r6, [r1], #4
   1d6f4:	str	r5, [r0, -r2, lsl #2]
   1d6f8:	sub	r2, r2, #1
   1d6fc:	cmp	r7, r2
   1d700:	bne	1d6e8 <argp_parse@@Base+0x34a4>
   1d704:	mov	r0, r3
   1d708:	cmp	r0, r8
   1d70c:	cmpgt	r8, r7
   1d710:	bgt	1d66c <argp_parse@@Base+0x3428>
   1d714:	b	1d7bc <argp_parse@@Base+0x3578>
   1d718:	cmp	r3, #1
   1d71c:	blt	1d7ac <argp_parse@@Base+0x3568>
   1d720:	mov	r4, #0
   1d724:	cmp	r3, #3
   1d728:	bls	1d778 <argp_parse@@Base+0x3534>
   1d72c:	add	r2, sl, r0, lsl #2
   1d730:	add	r1, sl, r7, lsl #2
   1d734:	cmp	r1, r2
   1d738:	ldrcc	r6, [fp, #-44]	; 0xffffffd4
   1d73c:	addcc	r2, r7, r0
   1d740:	addcc	r2, r6, r2, lsl #2
   1d744:	cmpcc	r9, r2
   1d748:	bcc	1d778 <argp_parse@@Base+0x3534>
   1d74c:	bic	r4, r3, #3
   1d750:	mov	r6, r9
   1d754:	mov	r2, r4
   1d758:	vld1.32	{d16-d17}, [r6]
   1d75c:	vld1.32	{d18-d19}, [r1]
   1d760:	subs	r2, r2, #4
   1d764:	vst1.32	{d16-d17}, [r1]!
   1d768:	vst1.32	{d18-d19}, [r6]!
   1d76c:	bne	1d758 <argp_parse@@Base+0x3514>
   1d770:	cmp	r3, r4
   1d774:	beq	1d7ac <argp_parse@@Base+0x3568>
   1d778:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1d77c:	add	r2, r4, r7
   1d780:	add	r6, r8, r4
   1d784:	add	r2, sl, r2, lsl #2
   1d788:	add	r1, r1, r0
   1d78c:	sub	r1, r1, r4
   1d790:	add	r4, sl, r6, lsl #2
   1d794:	ldr	r6, [r2]
   1d798:	ldr	r5, [r4]
   1d79c:	subs	r1, r1, #1
   1d7a0:	str	r5, [r2], #4
   1d7a4:	str	r6, [r4], #4
   1d7a8:	bne	1d794 <argp_parse@@Base+0x3550>
   1d7ac:	add	r7, r3, r7
   1d7b0:	cmp	r0, r8
   1d7b4:	cmpgt	r8, r7
   1d7b8:	bgt	1d66c <argp_parse@@Base+0x3428>
   1d7bc:	ldr	r0, [sp, #36]	; 0x24
   1d7c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d7c4:	ldr	r1, [sp, #24]
   1d7c8:	ldr	r2, [fp, #16]
   1d7cc:	add	r0, r0, r3
   1d7d0:	sub	r0, r0, r8
   1d7d4:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1d7d8:	str	r0, [r1]
   1d7dc:	ldr	r1, [sp, #28]
   1d7e0:	mov	r5, r0
   1d7e4:	str	r3, [r1]
   1d7e8:	str	r8, [r2]
   1d7ec:	str	r8, [r2, #32]
   1d7f0:	cmp	r5, r8
   1d7f4:	mvn	r6, #0
   1d7f8:	strne	r5, [r2]
   1d7fc:	mov	r0, r6
   1d800:	sub	sp, fp, #28
   1d804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d808:	mov	r0, #1
   1d80c:	b	1d150 <argp_parse@@Base+0x2f0c>
   1d810:	cmp	r1, #0
   1d814:	beq	1d89c <argp_parse@@Base+0x3658>
   1d818:	add	r0, r9, #1
   1d81c:	str	r8, [r3, #12]
   1d820:	str	r0, [r3]
   1d824:	b	1d954 <argp_parse@@Base+0x3710>
   1d828:	ldr	r7, [sp, #32]
   1d82c:	b	1d980 <argp_parse@@Base+0x373c>
   1d830:	cmp	r5, #0
   1d834:	beq	1d980 <argp_parse@@Base+0x373c>
   1d838:	ldrb	r0, [r0, #2]
   1d83c:	cmp	r0, #0
   1d840:	beq	1d968 <argp_parse@@Base+0x3724>
   1d844:	ldr	r1, [fp, #8]
   1d848:	str	r4, [r2, #20]
   1d84c:	movw	r0, #59837	; 0xe9bd
   1d850:	movt	r0, #1
   1d854:	stm	sp, {r1, r5}
   1d858:	str	r2, [sp, #8]
   1d85c:	str	r0, [sp, #16]
   1d860:	mov	r0, r3
   1d864:	mov	r2, r7
   1d868:	mov	r3, r6
   1d86c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d870:	str	r1, [sp, #12]
   1d874:	mov	r1, sl
   1d878:	bl	1d9e0 <argp_parse@@Base+0x379c>
   1d87c:	ldr	r2, [fp, #16]
   1d880:	mov	r6, r0
   1d884:	cmn	r0, #1
   1d888:	bne	1d7fc <argp_parse@@Base+0x35b8>
   1d88c:	ldr	r9, [r2]
   1d890:	ldr	r0, [sl, r9, lsl #2]
   1d894:	add	r4, r0, #1
   1d898:	b	1d980 <argp_parse@@Base+0x373c>
   1d89c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d8a0:	cmp	r9, r0
   1d8a4:	bne	1d944 <argp_parse@@Base+0x3700>
   1d8a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d8ac:	cmp	r0, #0
   1d8b0:	bne	1d9b4 <argp_parse@@Base+0x3770>
   1d8b4:	str	r6, [r3, #8]
   1d8b8:	ldrb	r6, [r7]
   1d8bc:	cmp	r6, #58	; 0x3a
   1d8c0:	movwne	r6, #63	; 0x3f
   1d8c4:	b	1d954 <argp_parse@@Base+0x3710>
   1d8c8:	movw	r0, #1496	; 0x5d8
   1d8cc:	ldr	r2, [sl]
   1d8d0:	movw	r1, #64547	; 0xfc23
   1d8d4:	mov	r4, r3
   1d8d8:	mov	r3, r6
   1d8dc:	movt	r0, #3
   1d8e0:	movt	r1, #1
   1d8e4:	ldr	r0, [r0]
   1d8e8:	bl	11c44 <fprintf@plt>
   1d8ec:	mov	r3, r4
   1d8f0:	b	1d268 <argp_parse@@Base+0x3024>
   1d8f4:	ldr	r8, [sl, r9, lsl #2]
   1d8f8:	ldr	r2, [fp, #8]
   1d8fc:	mov	r0, #0
   1d900:	str	r8, [r3, #12]
   1d904:	movw	r1, #64616	; 0xfc68
   1d908:	str	r0, [r3, #12]
   1d90c:	str	r8, [r3, #20]
   1d910:	movt	r1, #1
   1d914:	str	r2, [sp]
   1d918:	stmib	sp, {r0, r3}
   1d91c:	str	r1, [sp, #16]
   1d920:	mov	r1, sl
   1d924:	mov	r2, r7
   1d928:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d92c:	ldr	r3, [sp, #48]	; 0x30
   1d930:	str	r0, [sp, #12]
   1d934:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d938:	bl	1d9e0 <argp_parse@@Base+0x379c>
   1d93c:	sub	sp, fp, #28
   1d940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d944:	add	r0, r9, #1
   1d948:	str	r0, [r3]
   1d94c:	ldr	r0, [sl, r9, lsl #2]
   1d950:	str	r0, [r3, #12]
   1d954:	mov	r0, #0
   1d958:	str	r0, [r3, #20]
   1d95c:	mov	r0, r6
   1d960:	sub	sp, fp, #28
   1d964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d968:	mov	r0, r7
   1d96c:	bl	11c38 <strchr@plt>
   1d970:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d974:	ldr	r2, [fp, #16]
   1d978:	cmp	r0, #0
   1d97c:	beq	1d844 <argp_parse@@Base+0x3600>
   1d980:	str	r4, [r2, #20]
   1d984:	b	1d21c <argp_parse@@Base+0x2fd8>
   1d988:	movw	r0, #1496	; 0x5d8
   1d98c:	ldr	r2, [sl]
   1d990:	movw	r1, #64575	; 0xfc3f
   1d994:	mov	r4, r3
   1d998:	mov	r3, r6
   1d99c:	movt	r0, #3
   1d9a0:	movt	r1, #1
   1d9a4:	ldr	r0, [r0]
   1d9a8:	bl	11c44 <fprintf@plt>
   1d9ac:	mov	r3, r4
   1d9b0:	b	1d2c4 <argp_parse@@Base+0x3080>
   1d9b4:	movw	r0, #1496	; 0x5d8
   1d9b8:	ldr	r2, [sl]
   1d9bc:	movw	r1, #64575	; 0xfc3f
   1d9c0:	mov	r4, r3
   1d9c4:	mov	r3, r6
   1d9c8:	movt	r0, #3
   1d9cc:	movt	r1, #1
   1d9d0:	ldr	r0, [r0]
   1d9d4:	bl	11c44 <fprintf@plt>
   1d9d8:	mov	r3, r4
   1d9dc:	b	1d8b4 <argp_parse@@Base+0x3670>
   1d9e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d9e4:	add	fp, sp, #28
   1d9e8:	sub	sp, sp, #44	; 0x2c
   1d9ec:	str	r0, [sp, #8]
   1d9f0:	ldr	r0, [fp, #16]
   1d9f4:	str	r2, [sp, #12]
   1d9f8:	str	r1, [sp, #16]
   1d9fc:	ldr	r8, [r0, #20]
   1da00:	mov	r9, r8
   1da04:	ldrb	r0, [r9]
   1da08:	cmp	r0, #0
   1da0c:	cmpne	r0, #61	; 0x3d
   1da10:	beq	1da28 <argp_parse@@Base+0x37e4>
   1da14:	add	r9, r9, #1
   1da18:	ldrb	r0, [r9]
   1da1c:	cmp	r0, #0
   1da20:	cmpne	r0, #61	; 0x3d
   1da24:	bne	1da14 <argp_parse@@Base+0x37d0>
   1da28:	ldr	sl, [r3]
   1da2c:	mvn	r0, #0
   1da30:	str	r0, [sp, #24]
   1da34:	cmp	sl, #0
   1da38:	beq	1dbdc <argp_parse@@Base+0x3998>
   1da3c:	sub	r0, r9, r8
   1da40:	mov	r4, #0
   1da44:	mov	r6, sl
   1da48:	mov	r7, r3
   1da4c:	str	r3, [sp, #28]
   1da50:	str	r0, [fp, #-32]	; 0xffffffe0
   1da54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1da58:	mov	r0, r6
   1da5c:	mov	r1, r8
   1da60:	bl	11ddc <strncmp@plt>
   1da64:	cmp	r0, #0
   1da68:	bne	1da80 <argp_parse@@Base+0x383c>
   1da6c:	mov	r0, r6
   1da70:	bl	11c20 <strlen@plt>
   1da74:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1da78:	cmp	r1, r0
   1da7c:	beq	1dbf8 <argp_parse@@Base+0x39b4>
   1da80:	ldr	r6, [r7, #16]!
   1da84:	add	r4, r4, #1
   1da88:	cmp	r6, #0
   1da8c:	bne	1da54 <argp_parse@@Base+0x3810>
   1da90:	cmp	sl, #0
   1da94:	beq	1dc00 <argp_parse@@Base+0x39bc>
   1da98:	ldr	r0, [fp, #12]
   1da9c:	cmp	r0, #0
   1daa0:	beq	1dc80 <argp_parse@@Base+0x3a3c>
   1daa4:	ldr	r0, [fp, #20]
   1daa8:	cmp	r0, #0
   1daac:	beq	1dfa4 <argp_parse@@Base+0x3d60>
   1dab0:	mov	r0, #0
   1dab4:	ldr	r6, [sp, #28]
   1dab8:	mov	r5, #0
   1dabc:	mov	r7, #0
   1dac0:	str	r0, [sp, #32]
   1dac4:	mvn	r0, #0
   1dac8:	str	r0, [sp, #24]
   1dacc:	mov	r0, #0
   1dad0:	str	r0, [sp, #4]
   1dad4:	mov	r0, #0
   1dad8:	str	r0, [sp, #20]
   1dadc:	b	1daf0 <argp_parse@@Base+0x38ac>
   1dae0:	ldr	r0, [fp, #16]
   1dae4:	add	r1, r1, #1
   1dae8:	mov	r5, r1
   1daec:	ldr	r8, [r0, #20]
   1daf0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1daf4:	mov	r0, sl
   1daf8:	mov	r1, r8
   1dafc:	bl	11ddc <strncmp@plt>
   1db00:	cmp	r0, #0
   1db04:	beq	1db1c <argp_parse@@Base+0x38d8>
   1db08:	mov	r1, r5
   1db0c:	ldr	sl, [r6, #16]!
   1db10:	cmp	sl, #0
   1db14:	bne	1dae0 <argp_parse@@Base+0x389c>
   1db18:	b	1de38 <argp_parse@@Base+0x3bf4>
   1db1c:	cmp	r7, #0
   1db20:	beq	1db9c <argp_parse@@Base+0x3958>
   1db24:	ldr	r0, [sp, #32]
   1db28:	mov	r1, r5
   1db2c:	cmp	r0, #0
   1db30:	bne	1db0c <argp_parse@@Base+0x38c8>
   1db34:	ldr	r8, [sp, #20]
   1db38:	cmp	r8, #0
   1db3c:	bne	1db78 <argp_parse@@Base+0x3934>
   1db40:	mov	r0, r4
   1db44:	bl	1c80c <argp_parse@@Base+0x25c8>
   1db48:	cmp	r0, #0
   1db4c:	beq	1dbb8 <argp_parse@@Base+0x3974>
   1db50:	mov	r1, #0
   1db54:	mov	r2, r4
   1db58:	mov	r8, r0
   1db5c:	bl	11c8c <memset@plt>
   1db60:	ldr	r0, [sp, #24]
   1db64:	mov	r1, #1
   1db68:	mov	r2, #1
   1db6c:	str	r1, [sp, #4]
   1db70:	mov	r1, r5
   1db74:	strb	r2, [r8, r0]
   1db78:	mov	r0, #1
   1db7c:	str	r8, [sp, #20]
   1db80:	strb	r0, [r8, r1]
   1db84:	mov	r0, #0
   1db88:	str	r0, [sp, #32]
   1db8c:	ldr	sl, [r6, #16]!
   1db90:	cmp	sl, #0
   1db94:	bne	1dae0 <argp_parse@@Base+0x389c>
   1db98:	b	1de38 <argp_parse@@Base+0x3bf4>
   1db9c:	mov	r7, r6
   1dba0:	mov	r1, r5
   1dba4:	str	r5, [sp, #24]
   1dba8:	ldr	sl, [r6, #16]!
   1dbac:	cmp	sl, #0
   1dbb0:	bne	1dae0 <argp_parse@@Base+0x389c>
   1dbb4:	b	1de38 <argp_parse@@Base+0x3bf4>
   1dbb8:	mov	r0, #1
   1dbbc:	mov	r1, r5
   1dbc0:	str	r0, [sp, #32]
   1dbc4:	mov	r0, #0
   1dbc8:	str	r0, [sp, #20]
   1dbcc:	ldr	sl, [r6, #16]!
   1dbd0:	cmp	sl, #0
   1dbd4:	bne	1dae0 <argp_parse@@Base+0x389c>
   1dbd8:	b	1de38 <argp_parse@@Base+0x3bf4>
   1dbdc:	mov	r0, #0
   1dbe0:	mov	r4, #0
   1dbe4:	mov	r7, #0
   1dbe8:	mov	r1, #0
   1dbec:	mov	r8, #0
   1dbf0:	mov	r6, r3
   1dbf4:	b	1dc14 <argp_parse@@Base+0x39d0>
   1dbf8:	str	r4, [sp, #24]
   1dbfc:	b	1de5c <argp_parse@@Base+0x3c18>
   1dc00:	ldr	r6, [sp, #28]
   1dc04:	mov	r0, #0
   1dc08:	mov	r7, #0
   1dc0c:	mov	r1, #0
   1dc10:	mov	r8, #0
   1dc14:	str	r0, [sp, #32]
   1dc18:	cmp	r1, #0
   1dc1c:	ldreq	r0, [sp, #32]
   1dc20:	cmpeq	r0, #0
   1dc24:	beq	1de54 <argp_parse@@Base+0x3c10>
   1dc28:	ldr	r0, [fp, #20]
   1dc2c:	cmp	r0, #0
   1dc30:	bne	1e084 <argp_parse@@Base+0x3e40>
   1dc34:	cmp	r8, #0
   1dc38:	beq	1dc44 <argp_parse@@Base+0x3a00>
   1dc3c:	mov	r0, r1
   1dc40:	bl	1b7d4 <argp_parse@@Base+0x1590>
   1dc44:	ldr	r0, [fp, #16]
   1dc48:	ldr	r4, [r0, #20]
   1dc4c:	mov	r5, r0
   1dc50:	mov	r0, r4
   1dc54:	bl	11c20 <strlen@plt>
   1dc58:	mov	r1, #0
   1dc5c:	add	r0, r4, r0
   1dc60:	str	r1, [r5, #8]
   1dc64:	str	r0, [r5, #20]
   1dc68:	ldr	r0, [r5]
   1dc6c:	add	r0, r0, #1
   1dc70:	str	r0, [r5]
   1dc74:	mov	r0, #63	; 0x3f
   1dc78:	sub	sp, fp, #28
   1dc7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dc80:	mov	r0, #0
   1dc84:	mov	r6, #0
   1dc88:	mov	r7, #0
   1dc8c:	str	r0, [sp, #36]	; 0x24
   1dc90:	mvn	r0, #0
   1dc94:	str	r0, [sp, #24]
   1dc98:	mov	r0, #0
   1dc9c:	str	r0, [sp, #32]
   1dca0:	mov	r0, #0
   1dca4:	str	r0, [sp, #4]
   1dca8:	mov	r0, #0
   1dcac:	str	r0, [sp, #20]
   1dcb0:	b	1dcc8 <argp_parse@@Base+0x3a84>
   1dcb4:	ldr	r0, [fp, #16]
   1dcb8:	add	r3, r3, #16
   1dcbc:	add	r6, r6, #1
   1dcc0:	str	r3, [sp, #36]	; 0x24
   1dcc4:	ldr	r8, [r0, #20]
   1dcc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dccc:	mov	r0, sl
   1dcd0:	mov	r1, r8
   1dcd4:	bl	11ddc <strncmp@plt>
   1dcd8:	cmp	r0, #0
   1dcdc:	beq	1dcfc <argp_parse@@Base+0x3ab8>
   1dce0:	ldr	r5, [sp, #28]
   1dce4:	ldr	r3, [sp, #36]	; 0x24
   1dce8:	add	r0, r5, r6, lsl #4
   1dcec:	ldr	sl, [r0, #16]
   1dcf0:	cmp	sl, #0
   1dcf4:	bne	1dcb4 <argp_parse@@Base+0x3a70>
   1dcf8:	b	1de38 <argp_parse@@Base+0x3bf4>
   1dcfc:	ldr	r5, [sp, #28]
   1dd00:	ldr	r3, [sp, #36]	; 0x24
   1dd04:	cmp	r7, #0
   1dd08:	add	r0, r5, r3
   1dd0c:	beq	1dda4 <argp_parse@@Base+0x3b60>
   1dd10:	ldr	r1, [r0, #4]
   1dd14:	ldr	r2, [r7, #4]
   1dd18:	cmp	r2, r1
   1dd1c:	bne	1dd30 <argp_parse@@Base+0x3aec>
   1dd20:	ldr	r1, [r0, #8]
   1dd24:	ldr	r2, [r7, #8]
   1dd28:	cmp	r2, r1
   1dd2c:	beq	1ddc0 <argp_parse@@Base+0x3b7c>
   1dd30:	ldr	r0, [sp, #32]
   1dd34:	cmp	r0, #0
   1dd38:	bne	1dce8 <argp_parse@@Base+0x3aa4>
   1dd3c:	ldr	r0, [fp, #20]
   1dd40:	cmp	r0, #0
   1dd44:	beq	1dde0 <argp_parse@@Base+0x3b9c>
   1dd48:	ldr	r8, [sp, #20]
   1dd4c:	mov	r0, #0
   1dd50:	str	r0, [sp, #32]
   1dd54:	cmp	r8, #0
   1dd58:	bne	1ddf4 <argp_parse@@Base+0x3bb0>
   1dd5c:	mov	r0, r4
   1dd60:	bl	1c80c <argp_parse@@Base+0x25c8>
   1dd64:	cmp	r0, #0
   1dd68:	beq	1de14 <argp_parse@@Base+0x3bd0>
   1dd6c:	mov	r8, r0
   1dd70:	mov	r0, #0
   1dd74:	mov	r1, #0
   1dd78:	mov	r2, r4
   1dd7c:	str	r0, [sp, #32]
   1dd80:	mov	r0, r8
   1dd84:	bl	11c8c <memset@plt>
   1dd88:	ldr	r3, [sp, #36]	; 0x24
   1dd8c:	ldr	r0, [sp, #24]
   1dd90:	mov	r2, #1
   1dd94:	mov	r1, #1
   1dd98:	str	r1, [sp, #4]
   1dd9c:	strb	r2, [r8, r0]
   1dda0:	b	1ddf4 <argp_parse@@Base+0x3bb0>
   1dda4:	mov	r7, r0
   1dda8:	str	r6, [sp, #24]
   1ddac:	add	r0, r5, r6, lsl #4
   1ddb0:	ldr	sl, [r0, #16]
   1ddb4:	cmp	sl, #0
   1ddb8:	bne	1dcb4 <argp_parse@@Base+0x3a70>
   1ddbc:	b	1de38 <argp_parse@@Base+0x3bf4>
   1ddc0:	ldr	r1, [sp, #32]
   1ddc4:	cmp	r1, #0
   1ddc8:	bne	1dce8 <argp_parse@@Base+0x3aa4>
   1ddcc:	ldr	r0, [r0, #12]
   1ddd0:	ldr	r1, [r7, #12]
   1ddd4:	cmp	r1, r0
   1ddd8:	bne	1dd3c <argp_parse@@Base+0x3af8>
   1dddc:	b	1dce8 <argp_parse@@Base+0x3aa4>
   1dde0:	ldr	r8, [sp, #20]
   1dde4:	mov	r0, #1
   1dde8:	str	r0, [sp, #32]
   1ddec:	cmp	r8, #0
   1ddf0:	beq	1de20 <argp_parse@@Base+0x3bdc>
   1ddf4:	mov	r0, #1
   1ddf8:	str	r8, [sp, #20]
   1ddfc:	strb	r0, [r8, r6]
   1de00:	add	r0, r5, r6, lsl #4
   1de04:	ldr	sl, [r0, #16]
   1de08:	cmp	sl, #0
   1de0c:	bne	1dcb4 <argp_parse@@Base+0x3a70>
   1de10:	b	1de38 <argp_parse@@Base+0x3bf4>
   1de14:	ldr	r3, [sp, #36]	; 0x24
   1de18:	mov	r0, #1
   1de1c:	str	r0, [sp, #32]
   1de20:	mov	r0, #0
   1de24:	str	r0, [sp, #20]
   1de28:	add	r0, r5, r6, lsl #4
   1de2c:	ldr	sl, [r0, #16]
   1de30:	cmp	sl, #0
   1de34:	bne	1dcb4 <argp_parse@@Base+0x3a70>
   1de38:	ldr	r6, [sp, #28]
   1de3c:	ldr	r1, [sp, #20]
   1de40:	ldr	r8, [sp, #4]
   1de44:	cmp	r1, #0
   1de48:	ldreq	r0, [sp, #32]
   1de4c:	cmpeq	r0, #0
   1de50:	bne	1dc28 <argp_parse@@Base+0x39e4>
   1de54:	cmp	r7, #0
   1de58:	beq	1df00 <argp_parse@@Base+0x3cbc>
   1de5c:	ldr	r1, [fp, #16]
   1de60:	mov	r0, #0
   1de64:	str	r0, [r1, #20]
   1de68:	mov	r2, r1
   1de6c:	ldr	r1, [r1]
   1de70:	add	r0, r1, #1
   1de74:	str	r0, [r2]
   1de78:	ldrb	r3, [r9]
   1de7c:	ldr	r2, [r7, #4]
   1de80:	cmp	r3, #0
   1de84:	beq	1dea0 <argp_parse@@Base+0x3c5c>
   1de88:	cmp	r2, #0
   1de8c:	beq	1df80 <argp_parse@@Base+0x3d3c>
   1de90:	ldr	r1, [fp, #16]
   1de94:	add	r0, r9, #1
   1de98:	str	r0, [r1, #12]
   1de9c:	b	1decc <argp_parse@@Base+0x3c88>
   1dea0:	cmp	r2, #1
   1dea4:	bne	1decc <argp_parse@@Base+0x3c88>
   1dea8:	ldr	r2, [sp, #8]
   1deac:	cmp	r0, r2
   1deb0:	bge	1e054 <argp_parse@@Base+0x3e10>
   1deb4:	ldr	r2, [fp, #16]
   1deb8:	add	r1, r1, #2
   1debc:	str	r1, [r2]
   1dec0:	ldr	r1, [sp, #16]
   1dec4:	ldr	r0, [r1, r0, lsl #2]
   1dec8:	str	r0, [r2, #12]
   1decc:	ldr	r0, [fp, #8]
   1ded0:	cmp	r0, #0
   1ded4:	ldrne	r1, [sp, #24]
   1ded8:	strne	r1, [r0]
   1dedc:	ldr	r1, [r7, #8]
   1dee0:	ldr	r0, [r7, #12]
   1dee4:	cmp	r1, #0
   1dee8:	strne	r0, [r1]
   1deec:	movne	r0, #0
   1def0:	subne	sp, fp, #28
   1def4:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1def8:	sub	sp, fp, #28
   1defc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df00:	ldr	r0, [fp, #12]
   1df04:	cmp	r0, #0
   1df08:	beq	1df4c <argp_parse@@Base+0x3d08>
   1df0c:	ldr	r0, [fp, #16]
   1df10:	ldr	r1, [sp, #16]
   1df14:	ldr	r0, [r0]
   1df18:	ldr	r0, [r1, r0, lsl #2]
   1df1c:	ldrb	r0, [r0, #1]
   1df20:	cmp	r0, #45	; 0x2d
   1df24:	beq	1df4c <argp_parse@@Base+0x3d08>
   1df28:	ldr	r0, [fp, #16]
   1df2c:	ldr	r0, [r0, #20]
   1df30:	ldrb	r1, [r0]
   1df34:	ldr	r0, [sp, #12]
   1df38:	bl	11c38 <strchr@plt>
   1df3c:	mov	r1, r0
   1df40:	mvn	r0, #0
   1df44:	cmp	r1, #0
   1df48:	bne	1e07c <argp_parse@@Base+0x3e38>
   1df4c:	ldr	r0, [fp, #20]
   1df50:	cmp	r0, #0
   1df54:	bne	1e17c <argp_parse@@Base+0x3f38>
   1df58:	ldr	r1, [fp, #16]
   1df5c:	mov	r0, #0
   1df60:	str	r0, [r1, #20]
   1df64:	str	r0, [r1, #8]
   1df68:	ldr	r0, [r1]
   1df6c:	add	r0, r0, #1
   1df70:	str	r0, [r1]
   1df74:	mov	r0, #63	; 0x3f
   1df78:	sub	sp, fp, #28
   1df7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df80:	ldr	r0, [fp, #20]
   1df84:	cmp	r0, #0
   1df88:	bne	1e1b0 <argp_parse@@Base+0x3f6c>
   1df8c:	ldr	r0, [r7, #12]
   1df90:	ldr	r1, [fp, #16]
   1df94:	str	r0, [r1, #8]
   1df98:	mov	r0, #63	; 0x3f
   1df9c:	sub	sp, fp, #28
   1dfa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dfa4:	ldr	r5, [sp, #28]
   1dfa8:	mov	r0, #0
   1dfac:	mov	r6, #0
   1dfb0:	mov	r7, #0
   1dfb4:	str	r0, [sp, #32]
   1dfb8:	mvn	r0, #0
   1dfbc:	str	r0, [sp, #24]
   1dfc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dfc4:	mov	r0, sl
   1dfc8:	mov	r1, r8
   1dfcc:	bl	11ddc <strncmp@plt>
   1dfd0:	cmp	r0, #0
   1dfd4:	beq	1dfec <argp_parse@@Base+0x3da8>
   1dfd8:	ldr	sl, [r5, #16]!
   1dfdc:	add	r6, r6, #1
   1dfe0:	cmp	sl, #0
   1dfe4:	bne	1dfc0 <argp_parse@@Base+0x3d7c>
   1dfe8:	b	1e034 <argp_parse@@Base+0x3df0>
   1dfec:	cmp	r7, #0
   1dff0:	beq	1e018 <argp_parse@@Base+0x3dd4>
   1dff4:	ldr	r0, [sp, #32]
   1dff8:	cmp	r0, #0
   1dffc:	movweq	r0, #1
   1e000:	str	r0, [sp, #32]
   1e004:	ldr	sl, [r5, #16]!
   1e008:	add	r6, r6, #1
   1e00c:	cmp	sl, #0
   1e010:	bne	1dfc0 <argp_parse@@Base+0x3d7c>
   1e014:	b	1e034 <argp_parse@@Base+0x3df0>
   1e018:	mov	r7, r5
   1e01c:	mov	r0, r6
   1e020:	str	r6, [sp, #24]
   1e024:	ldr	sl, [r5, #16]!
   1e028:	add	r6, r6, #1
   1e02c:	cmp	sl, #0
   1e030:	bne	1dfc0 <argp_parse@@Base+0x3d7c>
   1e034:	ldr	r6, [sp, #28]
   1e038:	mov	r1, #0
   1e03c:	mov	r8, #0
   1e040:	cmp	r1, #0
   1e044:	ldreq	r0, [sp, #32]
   1e048:	cmpeq	r0, #0
   1e04c:	bne	1dc28 <argp_parse@@Base+0x39e4>
   1e050:	b	1de54 <argp_parse@@Base+0x3c10>
   1e054:	ldr	r0, [fp, #20]
   1e058:	cmp	r0, #0
   1e05c:	bne	1e1e0 <argp_parse@@Base+0x3f9c>
   1e060:	ldr	r0, [r7, #12]
   1e064:	ldr	r1, [fp, #16]
   1e068:	str	r0, [r1, #8]
   1e06c:	ldr	r0, [sp, #12]
   1e070:	ldrb	r0, [r0]
   1e074:	cmp	r0, #58	; 0x3a
   1e078:	movwne	r0, #63	; 0x3f
   1e07c:	sub	sp, fp, #28
   1e080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e084:	movw	sl, #1496	; 0x5d8
   1e088:	mov	r9, r1
   1e08c:	ldr	r1, [sp, #32]
   1e090:	movt	sl, #3
   1e094:	ldr	r0, [sl]
   1e098:	cmp	r1, #0
   1e09c:	beq	1e0d4 <argp_parse@@Base+0x3e90>
   1e0a0:	ldr	r1, [sp, #16]
   1e0a4:	ldr	r3, [fp, #24]
   1e0a8:	ldr	r2, [r1]
   1e0ac:	ldr	r1, [fp, #16]
   1e0b0:	ldr	r1, [r1, #20]
   1e0b4:	str	r1, [sp]
   1e0b8:	movw	r1, #64636	; 0xfc7c
   1e0bc:	movt	r1, #1
   1e0c0:	bl	11c44 <fprintf@plt>
   1e0c4:	mov	r1, r9
   1e0c8:	cmp	r8, #0
   1e0cc:	bne	1dc3c <argp_parse@@Base+0x39f8>
   1e0d0:	b	1dc44 <argp_parse@@Base+0x3a00>
   1e0d4:	bl	11d58 <flockfile@plt>
   1e0d8:	ldr	r1, [fp, #16]
   1e0dc:	ldr	r0, [sp, #16]
   1e0e0:	ldr	r5, [fp, #24]
   1e0e4:	ldr	r1, [r1, #20]
   1e0e8:	ldr	r2, [r0]
   1e0ec:	ldr	r0, [sl]
   1e0f0:	mov	r3, r5
   1e0f4:	str	r1, [sp]
   1e0f8:	movw	r1, #64668	; 0xfc9c
   1e0fc:	movt	r1, #1
   1e100:	bl	11c44 <fprintf@plt>
   1e104:	cmp	r4, #0
   1e108:	beq	1e158 <argp_parse@@Base+0x3f14>
   1e10c:	mov	r7, r9
   1e110:	ldrb	r0, [r7]
   1e114:	cmp	r0, #0
   1e118:	bne	1e130 <argp_parse@@Base+0x3eec>
   1e11c:	add	r6, r6, #16
   1e120:	add	r7, r7, #1
   1e124:	subs	r4, r4, #1
   1e128:	bne	1e110 <argp_parse@@Base+0x3ecc>
   1e12c:	b	1e158 <argp_parse@@Base+0x3f14>
   1e130:	ldr	r3, [r6]
   1e134:	ldr	r0, [sl]
   1e138:	movw	r1, #64715	; 0xfccb
   1e13c:	mov	r2, r5
   1e140:	movt	r1, #1
   1e144:	bl	11c44 <fprintf@plt>
   1e148:	add	r6, r6, #16
   1e14c:	add	r7, r7, #1
   1e150:	subs	r4, r4, #1
   1e154:	bne	1e110 <argp_parse@@Base+0x3ecc>
   1e158:	ldr	r1, [sl]
   1e15c:	mov	r0, #10
   1e160:	bl	11d40 <fputc@plt>
   1e164:	ldr	r0, [sl]
   1e168:	bl	11b18 <funlockfile@plt>
   1e16c:	mov	r1, r9
   1e170:	cmp	r8, #0
   1e174:	bne	1dc3c <argp_parse@@Base+0x39f8>
   1e178:	b	1dc44 <argp_parse@@Base+0x3a00>
   1e17c:	ldr	r1, [fp, #16]
   1e180:	ldr	r0, [sp, #16]
   1e184:	ldr	r3, [fp, #24]
   1e188:	ldr	r2, [r0]
   1e18c:	movw	r0, #1496	; 0x5d8
   1e190:	ldr	r1, [r1, #20]
   1e194:	movt	r0, #3
   1e198:	ldr	r0, [r0]
   1e19c:	str	r1, [sp]
   1e1a0:	movw	r1, #64723	; 0xfcd3
   1e1a4:	movt	r1, #1
   1e1a8:	bl	11c44 <fprintf@plt>
   1e1ac:	b	1df58 <argp_parse@@Base+0x3d14>
   1e1b0:	ldr	r0, [sp, #16]
   1e1b4:	ldr	r1, [r7]
   1e1b8:	ldr	r3, [fp, #24]
   1e1bc:	ldr	r2, [r0]
   1e1c0:	movw	r0, #1496	; 0x5d8
   1e1c4:	str	r1, [sp]
   1e1c8:	movw	r1, #64755	; 0xfcf3
   1e1cc:	movt	r0, #3
   1e1d0:	movt	r1, #1
   1e1d4:	ldr	r0, [r0]
   1e1d8:	bl	11c44 <fprintf@plt>
   1e1dc:	b	1df8c <argp_parse@@Base+0x3d48>
   1e1e0:	ldr	r0, [sp, #16]
   1e1e4:	ldr	r1, [r7]
   1e1e8:	ldr	r3, [fp, #24]
   1e1ec:	ldr	r2, [r0]
   1e1f0:	movw	r0, #1496	; 0x5d8
   1e1f4:	str	r1, [sp]
   1e1f8:	movw	r1, #64800	; 0xfd20
   1e1fc:	movt	r0, #3
   1e200:	movt	r1, #1
   1e204:	ldr	r0, [r0]
   1e208:	bl	11c44 <fprintf@plt>
   1e20c:	b	1e060 <argp_parse@@Base+0x3e1c>
   1e210:	push	{r4, r5, r6, r7, fp, lr}
   1e214:	add	fp, sp, #16
   1e218:	sub	sp, sp, #16
   1e21c:	movw	r6, #1472	; 0x5c0
   1e220:	movw	r7, #2592	; 0xa20
   1e224:	movt	r6, #3
   1e228:	movt	r7, #3
   1e22c:	ldm	r6, {r4, r5}
   1e230:	stm	r7, {r4, r5}
   1e234:	ldr	r5, [fp, #16]
   1e238:	str	r7, [sp, #8]
   1e23c:	str	r5, [sp, #12]
   1e240:	ldr	r5, [fp, #12]
   1e244:	str	r5, [sp, #4]
   1e248:	ldr	r5, [fp, #8]
   1e24c:	str	r5, [sp]
   1e250:	bl	1d07c <argp_parse@@Base+0x2e38>
   1e254:	ldr	r1, [r7]
   1e258:	ldr	r2, [r7, #8]
   1e25c:	ldr	r3, [r7, #12]
   1e260:	str	r1, [r6]
   1e264:	movw	r1, #4252	; 0x109c
   1e268:	str	r2, [r6, #8]
   1e26c:	movt	r1, #3
   1e270:	str	r3, [r1]
   1e274:	sub	sp, fp, #16
   1e278:	pop	{r4, r5, r6, r7, fp, pc}
   1e27c:	push	{r4, r5, r6, sl, fp, lr}
   1e280:	add	fp, sp, #16
   1e284:	sub	sp, sp, #16
   1e288:	movw	r5, #1472	; 0x5c0
   1e28c:	movw	r6, #2592	; 0xa20
   1e290:	movt	r5, #3
   1e294:	movt	r6, #3
   1e298:	ldm	r5, {r3, r4}
   1e29c:	stm	r6, {r3, r4}
   1e2a0:	mov	r4, #0
   1e2a4:	mov	r3, #1
   1e2a8:	str	r4, [sp]
   1e2ac:	stmib	sp, {r4, r6}
   1e2b0:	str	r3, [sp, #12]
   1e2b4:	mov	r3, #0
   1e2b8:	bl	1d07c <argp_parse@@Base+0x2e38>
   1e2bc:	ldr	r1, [r6]
   1e2c0:	ldr	r2, [r6, #8]
   1e2c4:	ldr	r3, [r6, #12]
   1e2c8:	str	r1, [r5]
   1e2cc:	movw	r1, #4252	; 0x109c
   1e2d0:	str	r2, [r5, #8]
   1e2d4:	movt	r1, #3
   1e2d8:	str	r3, [r1]
   1e2dc:	sub	sp, fp, #16
   1e2e0:	pop	{r4, r5, r6, sl, fp, pc}
   1e2e4:	cmp	r2, #0
   1e2e8:	beq	1e318 <argp_parse@@Base+0x40d4>
   1e2ec:	mvn	r3, #0
   1e2f0:	udiv	r3, r3, r2
   1e2f4:	cmp	r3, r1
   1e2f8:	bcs	1e318 <argp_parse@@Base+0x40d4>
   1e2fc:	push	{fp, lr}
   1e300:	mov	fp, sp
   1e304:	bl	11c50 <__errno_location@plt>
   1e308:	mov	r1, #12
   1e30c:	str	r1, [r0]
   1e310:	mov	r0, #0
   1e314:	pop	{fp, pc}
   1e318:	mul	r1, r2, r1
   1e31c:	b	1c83c <argp_parse@@Base+0x25f8>
   1e320:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e324:	mov	r7, r0
   1e328:	ldr	r6, [pc, #72]	; 1e378 <argp_parse@@Base+0x4134>
   1e32c:	ldr	r5, [pc, #72]	; 1e37c <argp_parse@@Base+0x4138>
   1e330:	add	r6, pc, r6
   1e334:	add	r5, pc, r5
   1e338:	sub	r6, r6, r5
   1e33c:	mov	r8, r1
   1e340:	mov	r9, r2
   1e344:	bl	11954 <calloc@plt-0x20>
   1e348:	asrs	r6, r6, #2
   1e34c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e350:	mov	r4, #0
   1e354:	add	r4, r4, #1
   1e358:	ldr	r3, [r5], #4
   1e35c:	mov	r2, r9
   1e360:	mov	r1, r8
   1e364:	mov	r0, r7
   1e368:	blx	r3
   1e36c:	cmp	r6, r4
   1e370:	bne	1e354 <argp_parse@@Base+0x4110>
   1e374:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e378:	andeq	r1, r1, ip, asr #23
   1e37c:	andeq	r1, r1, r4, asr #23
   1e380:	bx	lr

Disassembly of section .fini:

0001e384 <.fini>:
   1e384:	push	{r3, lr}
   1e388:	pop	{r3, pc}
