
../repos/inetutils/src/inetd:     file format elf32-littlearm


Disassembly of section .init:

00011a64 <.init>:
   11a64:	push	{r3, lr}
   11a68:	bl	11fc4 <__assert_fail@plt+0x48>
   11a6c:	pop	{r3, pc}

Disassembly of section .plt:

00011a70 <calloc@plt-0x14>:
   11a70:	push	{lr}		; (str lr, [sp, #-4]!)
   11a74:	ldr	lr, [pc, #4]	; 11a80 <calloc@plt-0x4>
   11a78:	add	lr, pc, lr
   11a7c:	ldr	pc, [lr, #8]!
   11a80:	andeq	sp, r1, r0, lsl #11

00011a84 <calloc@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #118784	; 0x1d000
   11a8c:	ldr	pc, [ip, #1408]!	; 0x580

00011a90 <fputs_unlocked@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #118784	; 0x1d000
   11a98:	ldr	pc, [ip, #1400]!	; 0x578

00011a9c <__getdelim@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #118784	; 0x1d000
   11aa4:	ldr	pc, [ip, #1392]!	; 0x570

00011aa8 <getpwnam@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #118784	; 0x1d000
   11ab0:	ldr	pc, [ip, #1384]!	; 0x568

00011ab4 <strcmp@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #118784	; 0x1d000
   11abc:	ldr	pc, [ip, #1376]!	; 0x560

00011ac0 <strtol@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #118784	; 0x1d000
   11ac8:	ldr	pc, [ip, #1368]!	; 0x558

00011acc <setsockopt@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #118784	; 0x1d000
   11ad4:	ldr	pc, [ip, #1360]!	; 0x550

00011ad8 <strcspn@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #118784	; 0x1d000
   11ae0:	ldr	pc, [ip, #1352]!	; 0x548

00011ae4 <pause@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #118784	; 0x1d000
   11aec:	ldr	pc, [ip, #1344]!	; 0x540

00011af0 <printf@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #118784	; 0x1d000
   11af8:	ldr	pc, [ip, #1336]!	; 0x538

00011afc <read@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #118784	; 0x1d000
   11b04:	ldr	pc, [ip, #1328]!	; 0x530

00011b08 <getprotobyname@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #118784	; 0x1d000
   11b10:	ldr	pc, [ip, #1320]!	; 0x528

00011b14 <sigprocmask@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #118784	; 0x1d000
   11b1c:	ldr	pc, [ip, #1312]!	; 0x520

00011b20 <memmove@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #118784	; 0x1d000
   11b28:	ldr	pc, [ip, #1304]!	; 0x518

00011b2c <strchrnul@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #118784	; 0x1d000
   11b34:	ldr	pc, [ip, #1296]!	; 0x510

00011b38 <free@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #118784	; 0x1d000
   11b40:	ldr	pc, [ip, #1288]!	; 0x508

00011b44 <gai_strerror@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #118784	; 0x1d000
   11b4c:	ldr	pc, [ip, #1280]!	; 0x500

00011b50 <strndup@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #118784	; 0x1d000
   11b58:	ldr	pc, [ip, #1272]!	; 0x4f8

00011b5c <_exit@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #118784	; 0x1d000
   11b64:	ldr	pc, [ip, #1264]!	; 0x4f0

00011b68 <memcpy@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #118784	; 0x1d000
   11b70:	ldr	pc, [ip, #1256]!	; 0x4e8

00011b74 <signal@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #118784	; 0x1d000
   11b7c:	ldr	pc, [ip, #1248]!	; 0x4e0

00011b80 <time@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #118784	; 0x1d000
   11b88:	ldr	pc, [ip, #1240]!	; 0x4d8

00011b8c <fwrite_unlocked@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #118784	; 0x1d000
   11b94:	ldr	pc, [ip, #1232]!	; 0x4d0

00011b98 <memcmp@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #118784	; 0x1d000
   11ba0:	ldr	pc, [ip, #1224]!	; 0x4c8

00011ba4 <select@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #118784	; 0x1d000
   11bac:	ldr	pc, [ip, #1216]!	; 0x4c0

00011bb0 <sleep@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #118784	; 0x1d000
   11bb8:	ldr	pc, [ip, #1208]!	; 0x4b8

00011bbc <ctime@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #118784	; 0x1d000
   11bc4:	ldr	pc, [ip, #1200]!	; 0x4b0

00011bc8 <recvfrom@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #118784	; 0x1d000
   11bd0:	ldr	pc, [ip, #1192]!	; 0x4a8

00011bd4 <strdup@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #118784	; 0x1d000
   11bdc:	ldr	pc, [ip, #1184]!	; 0x4a0

00011be0 <alarm@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #118784	; 0x1d000
   11be8:	ldr	pc, [ip, #1176]!	; 0x498

00011bec <sysconf@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #118784	; 0x1d000
   11bf4:	ldr	pc, [ip, #1168]!	; 0x490

00011bf8 <dup2@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #118784	; 0x1d000
   11c00:	ldr	pc, [ip, #1160]!	; 0x488

00011c04 <realloc@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #118784	; 0x1d000
   11c0c:	ldr	pc, [ip, #1152]!	; 0x480

00011c10 <initgroups@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #118784	; 0x1d000
   11c18:	ldr	pc, [ip, #1144]!	; 0x478

00011c1c <chdir@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #118784	; 0x1d000
   11c24:	ldr	pc, [ip, #1136]!	; 0x470

00011c28 <strcasecmp@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #118784	; 0x1d000
   11c30:	ldr	pc, [ip, #1128]!	; 0x468

00011c34 <funlockfile@plt>:
   11c34:	add	ip, pc, #0, 12
   11c38:	add	ip, ip, #118784	; 0x1d000
   11c3c:	ldr	pc, [ip, #1120]!	; 0x460

00011c40 <accept@plt>:
   11c40:	add	ip, pc, #0, 12
   11c44:	add	ip, ip, #118784	; 0x1d000
   11c48:	ldr	pc, [ip, #1112]!	; 0x458

00011c4c <sigaction@plt>:
   11c4c:	add	ip, pc, #0, 12
   11c50:	add	ip, ip, #118784	; 0x1d000
   11c54:	ldr	pc, [ip, #1104]!	; 0x450

00011c58 <fwrite@plt>:
   11c58:	add	ip, pc, #0, 12
   11c5c:	add	ip, ip, #118784	; 0x1d000
   11c60:	ldr	pc, [ip, #1096]!	; 0x448

00011c64 <strcat@plt>:
   11c64:	add	ip, pc, #0, 12
   11c68:	add	ip, ip, #118784	; 0x1d000
   11c6c:	ldr	pc, [ip, #1088]!	; 0x440

00011c70 <gettimeofday@plt>:
   11c70:	add	ip, pc, #0, 12
   11c74:	add	ip, ip, #118784	; 0x1d000
   11c78:	ldr	pc, [ip, #1080]!	; 0x438

00011c7c <error@plt>:
   11c7c:	add	ip, pc, #0, 12
   11c80:	add	ip, ip, #118784	; 0x1d000
   11c84:	ldr	pc, [ip, #1072]!	; 0x430

00011c88 <opendir@plt>:
   11c88:	add	ip, pc, #0, 12
   11c8c:	add	ip, ip, #118784	; 0x1d000
   11c90:	ldr	pc, [ip, #1064]!	; 0x428

00011c94 <open64@plt>:
   11c94:	add	ip, pc, #0, 12
   11c98:	add	ip, ip, #118784	; 0x1d000
   11c9c:	ldr	pc, [ip, #1056]!	; 0x420

00011ca0 <getenv@plt>:
   11ca0:	add	ip, pc, #0, 12
   11ca4:	add	ip, ip, #118784	; 0x1d000
   11ca8:	ldr	pc, [ip, #1048]!	; 0x418

00011cac <setgid@plt>:
   11cac:	add	ip, pc, #0, 12
   11cb0:	add	ip, ip, #118784	; 0x1d000
   11cb4:	ldr	pc, [ip, #1040]!	; 0x410

00011cb8 <malloc@plt>:
   11cb8:	add	ip, pc, #0, 12
   11cbc:	add	ip, ip, #118784	; 0x1d000
   11cc0:	ldr	pc, [ip, #1032]!	; 0x408

00011cc4 <sigaddset@plt>:
   11cc4:	add	ip, pc, #0, 12
   11cc8:	add	ip, ip, #118784	; 0x1d000
   11ccc:	ldr	pc, [ip, #1024]!	; 0x400

00011cd0 <__libc_start_main@plt>:
   11cd0:	add	ip, pc, #0, 12
   11cd4:	add	ip, ip, #118784	; 0x1d000
   11cd8:	ldr	pc, [ip, #1016]!	; 0x3f8

00011cdc <strerror@plt>:
   11cdc:	add	ip, pc, #0, 12
   11ce0:	add	ip, ip, #118784	; 0x1d000
   11ce4:	ldr	pc, [ip, #1008]!	; 0x3f0

00011ce8 <__ctype_tolower_loc@plt>:
   11ce8:	add	ip, pc, #0, 12
   11cec:	add	ip, ip, #118784	; 0x1d000
   11cf0:	ldr	pc, [ip, #1000]!	; 0x3e8

00011cf4 <__gmon_start__@plt>:
   11cf4:	add	ip, pc, #0, 12
   11cf8:	add	ip, ip, #118784	; 0x1d000
   11cfc:	ldr	pc, [ip, #992]!	; 0x3e0

00011d00 <__ctype_b_loc@plt>:
   11d00:	add	ip, pc, #0, 12
   11d04:	add	ip, ip, #118784	; 0x1d000
   11d08:	ldr	pc, [ip, #984]!	; 0x3d8

00011d0c <getpid@plt>:
   11d0c:	add	ip, pc, #0, 12
   11d10:	add	ip, ip, #118784	; 0x1d000
   11d14:	ldr	pc, [ip, #976]!	; 0x3d0

00011d18 <exit@plt>:
   11d18:	add	ip, pc, #0, 12
   11d1c:	add	ip, ip, #118784	; 0x1d000
   11d20:	ldr	pc, [ip, #968]!	; 0x3c8

00011d24 <strtoul@plt>:
   11d24:	add	ip, pc, #0, 12
   11d28:	add	ip, ip, #118784	; 0x1d000
   11d2c:	ldr	pc, [ip, #960]!	; 0x3c0

00011d30 <strlen@plt>:
   11d30:	add	ip, pc, #0, 12
   11d34:	add	ip, ip, #118784	; 0x1d000
   11d38:	ldr	pc, [ip, #952]!	; 0x3b8

00011d3c <setsid@plt>:
   11d3c:	add	ip, pc, #0, 12
   11d40:	add	ip, ip, #118784	; 0x1d000
   11d44:	ldr	pc, [ip, #944]!	; 0x3b0

00011d48 <strchr@plt>:
   11d48:	add	ip, pc, #0, 12
   11d4c:	add	ip, ip, #118784	; 0x1d000
   11d50:	ldr	pc, [ip, #936]!	; 0x3a8

00011d54 <setenv@plt>:
   11d54:	add	ip, pc, #0, 12
   11d58:	add	ip, ip, #118784	; 0x1d000
   11d5c:	ldr	pc, [ip, #928]!	; 0x3a0

00011d60 <fprintf@plt>:
   11d60:	add	ip, pc, #0, 12
   11d64:	add	ip, ip, #118784	; 0x1d000
   11d68:	ldr	pc, [ip, #920]!	; 0x398

00011d6c <execv@plt>:
   11d6c:	add	ip, pc, #0, 12
   11d70:	add	ip, ip, #118784	; 0x1d000
   11d74:	ldr	pc, [ip, #912]!	; 0x390

00011d78 <__errno_location@plt>:
   11d78:	add	ip, pc, #0, 12
   11d7c:	add	ip, ip, #118784	; 0x1d000
   11d80:	ldr	pc, [ip, #904]!	; 0x388

00011d84 <snprintf@plt>:
   11d84:	add	ip, pc, #0, 12
   11d88:	add	ip, ip, #118784	; 0x1d000
   11d8c:	ldr	pc, [ip, #896]!	; 0x380

00011d90 <strerror_r@plt>:
   11d90:	add	ip, pc, #0, 12
   11d94:	add	ip, ip, #118784	; 0x1d000
   11d98:	ldr	pc, [ip, #888]!	; 0x378

00011d9c <bind@plt>:
   11d9c:	add	ip, pc, #0, 12
   11da0:	add	ip, ip, #118784	; 0x1d000
   11da4:	ldr	pc, [ip, #880]!	; 0x370

00011da8 <memset@plt>:
   11da8:	add	ip, pc, #0, 12
   11dac:	add	ip, ip, #118784	; 0x1d000
   11db0:	ldr	pc, [ip, #872]!	; 0x368

00011db4 <strncpy@plt>:
   11db4:	add	ip, pc, #0, 12
   11db8:	add	ip, ip, #118784	; 0x1d000
   11dbc:	ldr	pc, [ip, #864]!	; 0x360

00011dc0 <sigsuspend@plt>:
   11dc0:	add	ip, pc, #0, 12
   11dc4:	add	ip, ip, #118784	; 0x1d000
   11dc8:	ldr	pc, [ip, #856]!	; 0x358

00011dcc <wait3@plt>:
   11dcc:	add	ip, pc, #0, 12
   11dd0:	add	ip, ip, #118784	; 0x1d000
   11dd4:	ldr	pc, [ip, #848]!	; 0x350

00011dd8 <write@plt>:
   11dd8:	add	ip, pc, #0, 12
   11ddc:	add	ip, ip, #118784	; 0x1d000
   11de0:	ldr	pc, [ip, #840]!	; 0x348

00011de4 <memchr@plt>:
   11de4:	add	ip, pc, #0, 12
   11de8:	add	ip, ip, #118784	; 0x1d000
   11dec:	ldr	pc, [ip, #832]!	; 0x340

00011df0 <fclose@plt>:
   11df0:	add	ip, pc, #0, 12
   11df4:	add	ip, ip, #118784	; 0x1d000
   11df8:	ldr	pc, [ip, #824]!	; 0x338

00011dfc <sendto@plt>:
   11dfc:	add	ip, pc, #0, 12
   11e00:	add	ip, ip, #118784	; 0x1d000
   11e04:	ldr	pc, [ip, #816]!	; 0x330

00011e08 <__overflow@plt>:
   11e08:	add	ip, pc, #0, 12
   11e0c:	add	ip, ip, #118784	; 0x1d000
   11e10:	ldr	pc, [ip, #808]!	; 0x328

00011e14 <sigemptyset@plt>:
   11e14:	add	ip, pc, #0, 12
   11e18:	add	ip, ip, #118784	; 0x1d000
   11e1c:	ldr	pc, [ip, #800]!	; 0x320

00011e20 <fork@plt>:
   11e20:	add	ip, pc, #0, 12
   11e24:	add	ip, ip, #118784	; 0x1d000
   11e28:	ldr	pc, [ip, #792]!	; 0x318

00011e2c <getnameinfo@plt>:
   11e2c:	add	ip, pc, #0, 12
   11e30:	add	ip, ip, #118784	; 0x1d000
   11e34:	ldr	pc, [ip, #784]!	; 0x310

00011e38 <strrchr@plt>:
   11e38:	add	ip, pc, #0, 12
   11e3c:	add	ip, ip, #118784	; 0x1d000
   11e40:	ldr	pc, [ip, #776]!	; 0x308

00011e44 <listen@plt>:
   11e44:	add	ip, pc, #0, 12
   11e48:	add	ip, ip, #118784	; 0x1d000
   11e4c:	ldr	pc, [ip, #768]!	; 0x300

00011e50 <vfprintf@plt>:
   11e50:	add	ip, pc, #0, 12
   11e54:	add	ip, ip, #118784	; 0x1d000
   11e58:	ldr	pc, [ip, #760]!	; 0x2f8

00011e5c <fputc@plt>:
   11e5c:	add	ip, pc, #0, 12
   11e60:	add	ip, ip, #118784	; 0x1d000
   11e64:	ldr	pc, [ip, #752]!	; 0x2f0

00011e68 <syslog@plt>:
   11e68:	add	ip, pc, #0, 12
   11e6c:	add	ip, ip, #118784	; 0x1d000
   11e70:	ldr	pc, [ip, #744]!	; 0x2e8

00011e74 <setuid@plt>:
   11e74:	add	ip, pc, #0, 12
   11e78:	add	ip, ip, #118784	; 0x1d000
   11e7c:	ldr	pc, [ip, #736]!	; 0x2e0

00011e80 <sprintf@plt>:
   11e80:	add	ip, pc, #0, 12
   11e84:	add	ip, ip, #118784	; 0x1d000
   11e88:	ldr	pc, [ip, #728]!	; 0x2d8

00011e8c <readdir64@plt>:
   11e8c:	add	ip, pc, #0, 12
   11e90:	add	ip, ip, #118784	; 0x1d000
   11e94:	ldr	pc, [ip, #720]!	; 0x2d0

00011e98 <openlog@plt>:
   11e98:	add	ip, pc, #0, 12
   11e9c:	add	ip, ip, #118784	; 0x1d000
   11ea0:	ldr	pc, [ip, #712]!	; 0x2c8

00011ea4 <getsockname@plt>:
   11ea4:	add	ip, pc, #0, 12
   11ea8:	add	ip, ip, #118784	; 0x1d000
   11eac:	ldr	pc, [ip, #704]!	; 0x2c0

00011eb0 <flockfile@plt>:
   11eb0:	add	ip, pc, #0, 12
   11eb4:	add	ip, ip, #118784	; 0x1d000
   11eb8:	ldr	pc, [ip, #696]!	; 0x2b8

00011ebc <vsnprintf@plt>:
   11ebc:	add	ip, pc, #0, 12
   11ec0:	add	ip, ip, #118784	; 0x1d000
   11ec4:	ldr	pc, [ip, #688]!	; 0x2b0

00011ec8 <fopen64@plt>:
   11ec8:	add	ip, pc, #0, 12
   11ecc:	add	ip, ip, #118784	; 0x1d000
   11ed0:	ldr	pc, [ip, #680]!	; 0x2a8

00011ed4 <qsort@plt>:
   11ed4:	add	ip, pc, #0, 12
   11ed8:	add	ip, ip, #118784	; 0x1d000
   11edc:	ldr	pc, [ip, #672]!	; 0x2a0

00011ee0 <getpeername@plt>:
   11ee0:	add	ip, pc, #0, 12
   11ee4:	add	ip, ip, #118784	; 0x1d000
   11ee8:	ldr	pc, [ip, #664]!	; 0x298

00011eec <freeaddrinfo@plt>:
   11eec:	add	ip, pc, #0, 12
   11ef0:	add	ip, ip, #118784	; 0x1d000
   11ef4:	ldr	pc, [ip, #656]!	; 0x290

00011ef8 <getaddrinfo@plt>:
   11ef8:	add	ip, pc, #0, 12
   11efc:	add	ip, ip, #118784	; 0x1d000
   11f00:	ldr	pc, [ip, #648]!	; 0x288

00011f04 <socket@plt>:
   11f04:	add	ip, pc, #0, 12
   11f08:	add	ip, ip, #118784	; 0x1d000
   11f0c:	ldr	pc, [ip, #640]!	; 0x280

00011f10 <__xstat64@plt>:
   11f10:	add	ip, pc, #0, 12
   11f14:	add	ip, ip, #118784	; 0x1d000
   11f18:	ldr	pc, [ip, #632]!	; 0x278

00011f1c <unsetenv@plt>:
   11f1c:	add	ip, pc, #0, 12
   11f20:	add	ip, ip, #118784	; 0x1d000
   11f24:	ldr	pc, [ip, #624]!	; 0x270

00011f28 <strncmp@plt>:
   11f28:	add	ip, pc, #0, 12
   11f2c:	add	ip, ip, #118784	; 0x1d000
   11f30:	ldr	pc, [ip, #616]!	; 0x268

00011f34 <abort@plt>:
   11f34:	add	ip, pc, #0, 12
   11f38:	add	ip, ip, #118784	; 0x1d000
   11f3c:	ldr	pc, [ip, #608]!	; 0x260

00011f40 <recv@plt>:
   11f40:	add	ip, pc, #0, 12
   11f44:	add	ip, ip, #118784	; 0x1d000
   11f48:	ldr	pc, [ip, #600]!	; 0x258

00011f4c <close@plt>:
   11f4c:	add	ip, pc, #0, 12
   11f50:	add	ip, ip, #118784	; 0x1d000
   11f54:	ldr	pc, [ip, #592]!	; 0x250

00011f58 <closedir@plt>:
   11f58:	add	ip, pc, #0, 12
   11f5c:	add	ip, ip, #118784	; 0x1d000
   11f60:	ldr	pc, [ip, #584]!	; 0x248

00011f64 <getgrnam@plt>:
   11f64:	add	ip, pc, #0, 12
   11f68:	add	ip, ip, #118784	; 0x1d000
   11f6c:	ldr	pc, [ip, #576]!	; 0x240

00011f70 <strspn@plt>:
   11f70:	add	ip, pc, #0, 12
   11f74:	add	ip, ip, #118784	; 0x1d000
   11f78:	ldr	pc, [ip, #568]!	; 0x238

00011f7c <__assert_fail@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #118784	; 0x1d000
   11f84:	ldr	pc, [ip, #560]!	; 0x230

Disassembly of section .text:

00011f88 <daemon@@Base-0x46f4>:
   11f88:	mov	fp, #0
   11f8c:	mov	lr, #0
   11f90:	pop	{r1}		; (ldr r1, [sp], #4)
   11f94:	mov	r2, sp
   11f98:	push	{r2}		; (str r2, [sp, #-4]!)
   11f9c:	push	{r0}		; (str r0, [sp, #-4]!)
   11fa0:	ldr	ip, [pc, #16]	; 11fb8 <__assert_fail@plt+0x3c>
   11fa4:	push	{ip}		; (str ip, [sp, #-4]!)
   11fa8:	ldr	r0, [pc, #12]	; 11fbc <__assert_fail@plt+0x40>
   11fac:	ldr	r3, [pc, #12]	; 11fc0 <__assert_fail@plt+0x44>
   11fb0:	bl	11cd0 <__libc_start_main@plt>
   11fb4:	bl	11f34 <abort@plt>
   11fb8:	andeq	ip, r1, r8, lsr #28
   11fbc:	andeq	r5, r1, r4, asr r5
   11fc0:	andeq	ip, r1, r8, asr #27
   11fc4:	ldr	r3, [pc, #20]	; 11fe0 <__assert_fail@plt+0x64>
   11fc8:	ldr	r2, [pc, #20]	; 11fe4 <__assert_fail@plt+0x68>
   11fcc:	add	r3, pc, r3
   11fd0:	ldr	r2, [r3, r2]
   11fd4:	cmp	r2, #0
   11fd8:	bxeq	lr
   11fdc:	b	11cf4 <__gmon_start__@plt>
   11fe0:	andeq	sp, r1, ip, lsr #32
   11fe4:			; <UNDEFINED> instruction: 0x000001b8
   11fe8:	ldr	r0, [pc, #24]	; 12008 <__assert_fail@plt+0x8c>
   11fec:	ldr	r3, [pc, #24]	; 1200c <__assert_fail@plt+0x90>
   11ff0:	cmp	r3, r0
   11ff4:	bxeq	lr
   11ff8:	ldr	r3, [pc, #16]	; 12010 <__assert_fail@plt+0x94>
   11ffc:	cmp	r3, #0
   12000:	bxeq	lr
   12004:	bx	r3
   12008:	andeq	pc, r2, r8, lsr #7
   1200c:	andeq	pc, r2, r8, lsr #7
   12010:	andeq	r0, r0, r0
   12014:	ldr	r0, [pc, #36]	; 12040 <__assert_fail@plt+0xc4>
   12018:	ldr	r1, [pc, #36]	; 12044 <__assert_fail@plt+0xc8>
   1201c:	sub	r1, r1, r0
   12020:	asr	r1, r1, #2
   12024:	add	r1, r1, r1, lsr #31
   12028:	asrs	r1, r1, #1
   1202c:	bxeq	lr
   12030:	ldr	r3, [pc, #16]	; 12048 <__assert_fail@plt+0xcc>
   12034:	cmp	r3, #0
   12038:	bxeq	lr
   1203c:	bx	r3
   12040:	andeq	pc, r2, r8, lsr #7
   12044:	andeq	pc, r2, r8, lsr #7
   12048:	andeq	r0, r0, r0
   1204c:	push	{r4, lr}
   12050:	ldr	r4, [pc, #24]	; 12070 <__assert_fail@plt+0xf4>
   12054:	ldrb	r3, [r4]
   12058:	cmp	r3, #0
   1205c:	popne	{r4, pc}
   12060:	bl	11fe8 <__assert_fail@plt+0x6c>
   12064:	mov	r3, #1
   12068:	strb	r3, [r4]
   1206c:	pop	{r4, pc}
   12070:			; <UNDEFINED> instruction: 0x0002f3b8
   12074:	b	12014 <__assert_fail@plt+0x98>
   12078:	push	{r4, r5, fp, lr}
   1207c:	add	fp, sp, #8
   12080:	sub	sp, sp, #8
   12084:	sub	sp, sp, #8192	; 0x2000
   12088:	mov	r4, r0
   1208c:	ldr	r0, [r1, #12]
   12090:	mov	r1, r4
   12094:	bl	14fe4 <__assert_fail@plt+0x3068>
   12098:	add	r5, sp, #4
   1209c:	mov	r0, r4
   120a0:	mov	r1, r5
   120a4:	mov	r2, #8192	; 0x2000
   120a8:	bl	11afc <read@plt>
   120ac:	cmp	r0, #1
   120b0:	blt	120cc <__assert_fail@plt+0x150>
   120b4:	mov	r2, r0
   120b8:	mov	r0, r4
   120bc:	mov	r1, r5
   120c0:	bl	11dd8 <write@plt>
   120c4:	cmp	r0, #0
   120c8:	bgt	1209c <__assert_fail@plt+0x120>
   120cc:	mov	r0, #0
   120d0:	bl	11d18 <exit@plt>
   120d4:	push	{r4, r5, r6, sl, fp, lr}
   120d8:	add	fp, sp, #16
   120dc:	sub	sp, sp, #144	; 0x90
   120e0:	sub	sp, sp, #8192	; 0x2000
   120e4:	mov	r4, r0
   120e8:	add	r0, sp, #140	; 0x8c
   120ec:	mov	r5, #128	; 0x80
   120f0:	add	r6, sp, #12
   120f4:	add	r1, sp, #144	; 0x90
   120f8:	mov	r2, #8192	; 0x2000
   120fc:	mov	r3, #0
   12100:	str	r0, [sp, #4]
   12104:	mov	r0, r4
   12108:	str	r5, [sp, #140]	; 0x8c
   1210c:	str	r6, [sp]
   12110:	bl	11bc8 <recvfrom@plt>
   12114:	cmp	r0, #0
   12118:	blt	12138 <__assert_fail@plt+0x1bc>
   1211c:	mov	r2, r0
   12120:	add	r1, sp, #144	; 0x90
   12124:	mov	r0, r4
   12128:	mov	r3, #0
   1212c:	str	r6, [sp]
   12130:	str	r5, [sp, #4]
   12134:	bl	11dfc <sendto@plt>
   12138:	sub	sp, fp, #16
   1213c:	pop	{r4, r5, r6, sl, fp, pc}
   12140:	push	{r4, r5, fp, lr}
   12144:	add	fp, sp, #8
   12148:	sub	sp, sp, #8
   1214c:	sub	sp, sp, #8192	; 0x2000
   12150:	mov	r4, r0
   12154:	ldr	r0, [r1, #12]
   12158:	mov	r1, r4
   1215c:	bl	14fe4 <__assert_fail@plt+0x3068>
   12160:	add	r5, sp, #4
   12164:	mov	r0, r4
   12168:	mov	r1, r5
   1216c:	mov	r2, #8192	; 0x2000
   12170:	bl	11afc <read@plt>
   12174:	cmp	r0, #0
   12178:	bgt	12164 <__assert_fail@plt+0x1e8>
   1217c:	beq	12190 <__assert_fail@plt+0x214>
   12180:	bl	11d78 <__errno_location@plt>
   12184:	ldr	r0, [r0]
   12188:	cmp	r0, #4
   1218c:	beq	12164 <__assert_fail@plt+0x1e8>
   12190:	mov	r0, #0
   12194:	bl	11d18 <exit@plt>
   12198:	push	{r4, r5, fp, lr}
   1219c:	add	fp, sp, #8
   121a0:	sub	sp, sp, #8192	; 0x2000
   121a4:	mov	r1, sp
   121a8:	mov	r2, #8192	; 0x2000
   121ac:	bl	11afc <read@plt>
   121b0:	sub	sp, fp, #8
   121b4:	pop	{r4, r5, fp, pc}
   121b8:	push	{r4, r5, fp, lr}
   121bc:	add	fp, sp, #8
   121c0:	sub	sp, sp, #16
   121c4:	mov	r4, r0
   121c8:	add	r0, sp, #8
   121cc:	mov	r1, #0
   121d0:	mov	r5, #0
   121d4:	bl	11c70 <gettimeofday@plt>
   121d8:	cmn	r0, #1
   121dc:	ble	121f8 <__assert_fail@plt+0x27c>
   121e0:	ldr	r0, [sp, #8]
   121e4:	movw	r1, #32384	; 0x7e80
   121e8:	movt	r1, #33706	; 0x83aa
   121ec:	add	r0, r0, r1
   121f0:	rev	r5, r0
   121f4:	b	1220c <__assert_fail@plt+0x290>
   121f8:	movw	r0, #62400	; 0xf3c0
   121fc:	movt	r0, #2
   12200:	ldrb	r0, [r0]
   12204:	cmp	r0, #0
   12208:	bne	12228 <__assert_fail@plt+0x2ac>
   1220c:	add	r1, sp, #4
   12210:	mov	r0, r4
   12214:	mov	r2, #4
   12218:	str	r5, [sp, #4]
   1221c:	bl	11dd8 <write@plt>
   12220:	sub	sp, fp, #8
   12224:	pop	{r4, r5, fp, pc}
   12228:	movw	r0, #62384	; 0xf3b0
   1222c:	mov	r1, #26
   12230:	mov	r2, #1
   12234:	movt	r0, #2
   12238:	ldr	r3, [r0]
   1223c:	movw	r0, #54307	; 0xd423
   12240:	movt	r0, #1
   12244:	bl	11c58 <fwrite@plt>
   12248:	b	1220c <__assert_fail@plt+0x290>
   1224c:	push	{r4, r5, r6, sl, fp, lr}
   12250:	add	fp, sp, #16
   12254:	sub	sp, sp, #152	; 0x98
   12258:	mov	r4, r0
   1225c:	mov	r0, #128	; 0x80
   12260:	add	r5, sp, #12
   12264:	sub	r1, fp, #28
   12268:	mov	r2, #4
   1226c:	mov	r3, #0
   12270:	str	r0, [sp, #8]
   12274:	add	r0, sp, #8
   12278:	str	r5, [sp]
   1227c:	str	r0, [sp, #4]
   12280:	mov	r0, r4
   12284:	bl	11bc8 <recvfrom@plt>
   12288:	cmp	r0, #0
   1228c:	blt	122f8 <__assert_fail@plt+0x37c>
   12290:	sub	r0, fp, #24
   12294:	mov	r1, #0
   12298:	mov	r6, #0
   1229c:	bl	11c70 <gettimeofday@plt>
   122a0:	cmn	r0, #1
   122a4:	ble	122c0 <__assert_fail@plt+0x344>
   122a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122ac:	movw	r1, #32384	; 0x7e80
   122b0:	movt	r1, #33706	; 0x83aa
   122b4:	add	r0, r0, r1
   122b8:	rev	r6, r0
   122bc:	b	122d4 <__assert_fail@plt+0x358>
   122c0:	movw	r0, #62400	; 0xf3c0
   122c4:	movt	r0, #2
   122c8:	ldrb	r0, [r0]
   122cc:	cmp	r0, #0
   122d0:	bne	12300 <__assert_fail@plt+0x384>
   122d4:	mov	r0, #128	; 0x80
   122d8:	sub	r1, fp, #28
   122dc:	mov	r2, #4
   122e0:	mov	r3, #0
   122e4:	str	r6, [fp, #-28]	; 0xffffffe4
   122e8:	str	r5, [sp]
   122ec:	str	r0, [sp, #4]
   122f0:	mov	r0, r4
   122f4:	bl	11dfc <sendto@plt>
   122f8:	sub	sp, fp, #16
   122fc:	pop	{r4, r5, r6, sl, fp, pc}
   12300:	movw	r0, #62384	; 0xf3b0
   12304:	mov	r1, #26
   12308:	mov	r2, #1
   1230c:	movt	r0, #2
   12310:	ldr	r3, [r0]
   12314:	movw	r0, #54307	; 0xd423
   12318:	movt	r0, #1
   1231c:	bl	11c58 <fwrite@plt>
   12320:	b	122d4 <__assert_fail@plt+0x358>
   12324:	push	{r4, r5, r6, r7, fp, lr}
   12328:	add	fp, sp, #16
   1232c:	sub	sp, sp, #264	; 0x108
   12330:	mov	r4, r0
   12334:	mov	r0, #0
   12338:	bl	11b80 <time@plt>
   1233c:	str	r0, [sp, #4]
   12340:	add	r0, sp, #4
   12344:	bl	11bbc <ctime@plt>
   12348:	movw	r1, #54334	; 0xd43e
   1234c:	add	r5, sp, #8
   12350:	mov	r2, r0
   12354:	movt	r1, #1
   12358:	mov	r0, r5
   1235c:	bl	11e80 <sprintf@plt>
   12360:	mov	r0, r5
   12364:	bl	11d30 <strlen@plt>
   12368:	mov	r2, r0
   1236c:	mov	r0, r4
   12370:	mov	r1, r5
   12374:	bl	11dd8 <write@plt>
   12378:	sub	sp, fp, #16
   1237c:	pop	{r4, r5, r6, r7, fp, pc}
   12380:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12384:	add	fp, sp, #24
   12388:	sub	sp, sp, #400	; 0x190
   1238c:	mov	r4, r0
   12390:	mov	r0, #0
   12394:	bl	11b80 <time@plt>
   12398:	str	r0, [sp, #140]	; 0x8c
   1239c:	add	r0, sp, #8
   123a0:	mov	r6, #128	; 0x80
   123a4:	add	r7, sp, #12
   123a8:	add	r1, sp, #144	; 0x90
   123ac:	mov	r2, #256	; 0x100
   123b0:	mov	r3, #0
   123b4:	str	r0, [sp, #4]
   123b8:	mov	r0, r4
   123bc:	str	r6, [sp, #8]
   123c0:	str	r7, [sp]
   123c4:	bl	11bc8 <recvfrom@plt>
   123c8:	cmp	r0, #0
   123cc:	blt	12414 <__assert_fail@plt+0x498>
   123d0:	add	r0, sp, #140	; 0x8c
   123d4:	bl	11bbc <ctime@plt>
   123d8:	movw	r1, #54334	; 0xd43e
   123dc:	add	r5, sp, #144	; 0x90
   123e0:	mov	r2, r0
   123e4:	movt	r1, #1
   123e8:	mov	r0, r5
   123ec:	bl	11e80 <sprintf@plt>
   123f0:	mov	r0, r5
   123f4:	bl	11d30 <strlen@plt>
   123f8:	mov	r2, r0
   123fc:	mov	r0, r4
   12400:	mov	r1, r5
   12404:	mov	r3, #0
   12408:	str	r7, [sp]
   1240c:	str	r6, [sp, #4]
   12410:	bl	11dfc <sendto@plt>
   12414:	sub	sp, fp, #24
   12418:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1241c:	push	{fp, lr}
   12420:	mov	fp, sp
   12424:	sub	sp, sp, #80	; 0x50
   12428:	mov	r8, r0
   1242c:	ldr	r0, [r1, #12]
   12430:	mov	r1, r8
   12434:	bl	14fe4 <__assert_fail@plt+0x3068>
   12438:	movw	r9, #62964	; 0xf5f4
   1243c:	movt	r9, #2
   12440:	ldr	r0, [r9]
   12444:	cmp	r0, #0
   12448:	bne	12494 <__assert_fail@plt+0x518>
   1244c:	movw	r0, #62704	; 0xf4f0
   12450:	mov	r4, #0
   12454:	movt	r0, #2
   12458:	str	r0, [r9]
   1245c:	bl	11d00 <__ctype_b_loc@plt>
   12460:	mov	r1, #0
   12464:	ldr	r2, [r0]
   12468:	add	r2, r2, r4
   1246c:	add	r4, r4, #2
   12470:	ldrb	r2, [r2, #1]
   12474:	tst	r2, #64	; 0x40
   12478:	ldrne	r2, [r9]
   1247c:	addne	r3, r2, #1
   12480:	strne	r3, [r9]
   12484:	strbne	r1, [r2]
   12488:	add	r1, r1, #1
   1248c:	cmp	r1, #129	; 0x81
   12490:	bne	12464 <__assert_fail@plt+0x4e8>
   12494:	movw	sl, #62704	; 0xf4f0
   12498:	movw	r0, #2573	; 0xa0d
   1249c:	mov	r6, sp
   124a0:	movt	sl, #2
   124a4:	strh	r0, [sp, #72]	; 0x48
   124a8:	mov	r7, sl
   124ac:	ldr	r5, [r9]
   124b0:	mov	r0, r6
   124b4:	mov	r1, r7
   124b8:	sub	r4, r5, r7
   124bc:	cmp	r4, #72	; 0x48
   124c0:	blt	124d0 <__assert_fail@plt+0x554>
   124c4:	mov	r2, #72	; 0x48
   124c8:	bl	11b20 <memmove@plt>
   124cc:	b	124e8 <__assert_fail@plt+0x56c>
   124d0:	mov	r2, r4
   124d4:	bl	11b20 <memmove@plt>
   124d8:	add	r0, r6, r4
   124dc:	rsb	r2, r4, #72	; 0x48
   124e0:	mov	r1, sl
   124e4:	bl	11b68 <memcpy@plt>
   124e8:	add	r7, r7, #1
   124ec:	mov	r0, r8
   124f0:	mov	r1, r6
   124f4:	mov	r2, #74	; 0x4a
   124f8:	cmp	r7, r5
   124fc:	moveq	r7, sl
   12500:	bl	11dd8 <write@plt>
   12504:	cmp	r0, #74	; 0x4a
   12508:	beq	124ac <__assert_fail@plt+0x530>
   1250c:	mov	r0, #0
   12510:	bl	11d18 <exit@plt>
   12514:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12518:	add	fp, sp, #28
   1251c:	sub	sp, sp, #220	; 0xdc
   12520:	movw	r7, #62964	; 0xf5f4
   12524:	mov	sl, r0
   12528:	movt	r7, #2
   1252c:	ldr	r0, [r7]
   12530:	cmp	r0, #0
   12534:	bne	1258c <__assert_fail@plt+0x610>
   12538:	movw	r4, #62704	; 0xf4f0
   1253c:	mov	r5, #0
   12540:	movt	r4, #2
   12544:	str	r4, [r7]
   12548:	bl	11d00 <__ctype_b_loc@plt>
   1254c:	mov	r1, #0
   12550:	ldr	r2, [r0]
   12554:	add	r2, r2, r5
   12558:	add	r5, r5, #2
   1255c:	ldrb	r2, [r2, #1]
   12560:	tst	r2, #64	; 0x40
   12564:	ldrne	r2, [r7]
   12568:	addne	r3, r2, #1
   1256c:	strne	r3, [r7]
   12570:	strbne	r1, [r2]
   12574:	add	r1, r1, #1
   12578:	cmp	r1, #129	; 0x81
   1257c:	bne	12550 <__assert_fail@plt+0x5d4>
   12580:	movw	r0, #62640	; 0xf4b0
   12584:	movt	r0, #2
   12588:	str	r4, [r0]
   1258c:	mov	r0, #128	; 0x80
   12590:	add	r6, sp, #8
   12594:	add	r8, sp, #88	; 0x58
   12598:	mov	r2, #74	; 0x4a
   1259c:	mov	r3, #0
   125a0:	str	r0, [sp, #84]	; 0x54
   125a4:	add	r0, sp, #84	; 0x54
   125a8:	mov	r1, r6
   125ac:	str	r8, [sp]
   125b0:	str	r0, [sp, #4]
   125b4:	mov	r0, sl
   125b8:	bl	11bc8 <recvfrom@plt>
   125bc:	cmp	r0, #0
   125c0:	blt	12658 <__assert_fail@plt+0x6dc>
   125c4:	movw	r9, #62640	; 0xf4b0
   125c8:	ldr	r4, [r7]
   125cc:	movt	r9, #2
   125d0:	ldr	r5, [r9]
   125d4:	sub	r7, r4, r5
   125d8:	cmp	r7, #72	; 0x48
   125dc:	blt	125f4 <__assert_fail@plt+0x678>
   125e0:	add	r0, sp, #8
   125e4:	mov	r1, r5
   125e8:	mov	r2, #72	; 0x48
   125ec:	bl	11b20 <memmove@plt>
   125f0:	b	12618 <__assert_fail@plt+0x69c>
   125f4:	mov	r0, r6
   125f8:	mov	r1, r5
   125fc:	mov	r2, r7
   12600:	bl	11b20 <memmove@plt>
   12604:	movw	r1, #62704	; 0xf4f0
   12608:	add	r0, r6, r7
   1260c:	rsb	r2, r7, #72	; 0x48
   12610:	movt	r1, #2
   12614:	bl	11b68 <memcpy@plt>
   12618:	movw	r1, #62704	; 0xf4f0
   1261c:	add	r0, r5, #1
   12620:	mov	r2, #74	; 0x4a
   12624:	mov	r3, #0
   12628:	str	r8, [sp]
   1262c:	movt	r1, #2
   12630:	cmp	r0, r4
   12634:	movne	r1, r0
   12638:	movw	r0, #2573	; 0xa0d
   1263c:	strh	r0, [sp, #80]	; 0x50
   12640:	mov	r0, #128	; 0x80
   12644:	str	r1, [r9]
   12648:	add	r1, sp, #8
   1264c:	str	r0, [sp, #4]
   12650:	mov	r0, sl
   12654:	bl	11dfc <sendto@plt>
   12658:	sub	sp, fp, #28
   1265c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12660:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12664:	add	fp, sp, #24
   12668:	sub	sp, sp, #264	; 0x108
   1266c:	mov	r4, r0
   12670:	mov	r6, #0
   12674:	add	r5, sp, #1
   12678:	movw	r8, #258	; 0x102
   1267c:	mov	r9, #1
   12680:	movw	r7, #9217	; 0x2401
   12684:	sub	r2, r8, r6
   12688:	mov	r0, r4
   1268c:	mov	r1, r5
   12690:	bl	11afc <read@plt>
   12694:	cmp	r0, #0
   12698:	beq	126d8 <__assert_fail@plt+0x75c>
   1269c:	blt	1282c <__assert_fail@plt+0x8b0>
   126a0:	add	r0, r0, #1
   126a4:	ldrb	r1, [r5]
   126a8:	cmp	r1, #13
   126ac:	bhi	126b8 <__assert_fail@plt+0x73c>
   126b0:	tst	r7, r9, lsl r1
   126b4:	bne	126d8 <__assert_fail@plt+0x75c>
   126b8:	sub	r0, r0, #1
   126bc:	add	r5, r5, #1
   126c0:	add	r6, r6, #1
   126c4:	cmp	r0, #1
   126c8:	bgt	126a4 <__assert_fail@plt+0x728>
   126cc:	sub	r0, r6, #1
   126d0:	cmp	r0, #256	; 0x100
   126d4:	ble	12684 <__assert_fail@plt+0x708>
   126d8:	cmn	r6, #1
   126dc:	ble	1282c <__assert_fail@plt+0x8b0>
   126e0:	add	r0, sp, #1
   126e4:	mov	r1, #0
   126e8:	strb	r1, [r0, r6]
   126ec:	movw	r0, #62400	; 0xf3c0
   126f0:	movt	r0, #2
   126f4:	ldrb	r0, [r0]
   126f8:	cmp	r0, #0
   126fc:	bne	1280c <__assert_fail@plt+0x890>
   12700:	movw	r1, #54398	; 0xd47e
   12704:	add	r0, sp, #1
   12708:	movt	r1, #1
   1270c:	bl	11c28 <strcasecmp@plt>
   12710:	movw	r1, #63000	; 0xf618
   12714:	cmp	r0, #0
   12718:	movt	r1, #2
   1271c:	ldr	r5, [r1]
   12720:	beq	127ac <__assert_fail@plt+0x830>
   12724:	cmp	r5, #0
   12728:	beq	12760 <__assert_fail@plt+0x7e4>
   1272c:	add	r6, sp, #1
   12730:	ldr	r7, [r5, #64]	; 0x40
   12734:	sub	r0, r7, #1
   12738:	cmp	r0, #1
   1273c:	bhi	12754 <__assert_fail@plt+0x7d8>
   12740:	ldr	r1, [r5, #12]
   12744:	mov	r0, r6
   12748:	bl	11c28 <strcasecmp@plt>
   1274c:	cmp	r0, #0
   12750:	beq	1277c <__assert_fail@plt+0x800>
   12754:	ldr	r5, [r5, #220]	; 0xdc
   12758:	cmp	r5, #0
   1275c:	bne	12730 <__assert_fail@plt+0x7b4>
   12760:	movw	r1, #54409	; 0xd489
   12764:	mov	r0, r4
   12768:	mov	r2, #24
   1276c:	movt	r1, #1
   12770:	bl	11dd8 <write@plt>
   12774:	mov	r0, #1
   12778:	bl	11d18 <exit@plt>
   1277c:	cmp	r7, #2
   12780:	bne	12798 <__assert_fail@plt+0x81c>
   12784:	movw	r1, #54403	; 0xd483
   12788:	mov	r0, r4
   1278c:	mov	r2, #5
   12790:	movt	r1, #1
   12794:	bl	11dd8 <write@plt>
   12798:	mov	r0, r4
   1279c:	mov	r1, r5
   127a0:	bl	129a8 <__assert_fail@plt+0xa2c>
   127a4:	sub	sp, fp, #24
   127a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   127ac:	cmp	r5, #0
   127b0:	beq	12804 <__assert_fail@plt+0x888>
   127b4:	movw	r6, #54431	; 0xd49f
   127b8:	movt	r6, #1
   127bc:	ldr	r0, [r5, #64]	; 0x40
   127c0:	sub	r0, r0, #1
   127c4:	cmp	r0, #1
   127c8:	bhi	127f8 <__assert_fail@plt+0x87c>
   127cc:	ldr	r7, [r5, #12]
   127d0:	mov	r0, r7
   127d4:	bl	11d30 <strlen@plt>
   127d8:	mov	r2, r0
   127dc:	mov	r0, r4
   127e0:	mov	r1, r7
   127e4:	bl	11dd8 <write@plt>
   127e8:	mov	r0, r4
   127ec:	mov	r1, r6
   127f0:	mov	r2, #2
   127f4:	bl	11dd8 <write@plt>
   127f8:	ldr	r5, [r5, #220]	; 0xdc
   127fc:	cmp	r5, #0
   12800:	bne	127bc <__assert_fail@plt+0x840>
   12804:	mov	r0, #1
   12808:	bl	11b5c <_exit@plt>
   1280c:	movw	r0, #62384	; 0xf3b0
   12810:	movw	r1, #54372	; 0xd464
   12814:	add	r2, sp, #1
   12818:	movt	r0, #2
   1281c:	movt	r1, #1
   12820:	ldr	r0, [r0]
   12824:	bl	11d60 <fprintf@plt>
   12828:	b	12700 <__assert_fail@plt+0x784>
   1282c:	movw	r1, #54342	; 0xd446
   12830:	mov	r0, r4
   12834:	mov	r2, #29
   12838:	movt	r1, #1
   1283c:	bl	11dd8 <write@plt>
   12840:	mov	r0, #1
   12844:	bl	11b5c <_exit@plt>
   12848:	push	{r4, r5, r6, r7, fp, lr}
   1284c:	add	fp, sp, #16
   12850:	movw	r6, #61940	; 0xf1f4
   12854:	mov	r5, r0
   12858:	mov	r4, #0
   1285c:	movt	r6, #2
   12860:	ldr	r0, [r6]
   12864:	cmp	r0, #0
   12868:	beq	1289c <__assert_fail@plt+0x920>
   1286c:	ldr	r7, [r5, #16]
   12870:	ldr	r1, [r6, #4]
   12874:	cmp	r1, r7
   12878:	bne	12890 <__assert_fail@plt+0x914>
   1287c:	ldr	r1, [r5, #12]
   12880:	bl	11ab4 <strcmp@plt>
   12884:	cmp	r0, #0
   12888:	moveq	r0, r6
   1288c:	popeq	{r4, r5, r6, r7, fp, pc}
   12890:	ldr	r0, [r6, #16]!
   12894:	cmp	r0, #0
   12898:	bne	12870 <__assert_fail@plt+0x8f4>
   1289c:	mov	r0, r4
   128a0:	pop	{r4, r5, r6, r7, fp, pc}
   128a4:	push	{r4, r5, r6, r7, fp, lr}
   128a8:	add	fp, sp, #16
   128ac:	sub	sp, sp, #144	; 0x90
   128b0:	mov	r6, sp
   128b4:	mov	r4, r1
   128b8:	mov	r5, r0
   128bc:	mov	r1, #0
   128c0:	mov	r2, #140	; 0x8c
   128c4:	mov	r0, r6
   128c8:	bl	11da8 <memset@plt>
   128cc:	orr	r7, r6, #4
   128d0:	mov	r0, r7
   128d4:	bl	11e14 <sigemptyset@plt>
   128d8:	mov	r0, r7
   128dc:	mov	r1, r5
   128e0:	bl	11cc4 <sigaddset@plt>
   128e4:	mov	r0, #268435456	; 0x10000000
   128e8:	mov	r1, r6
   128ec:	mov	r2, #0
   128f0:	str	r0, [sp, #132]	; 0x84
   128f4:	mov	r0, r5
   128f8:	str	r4, [sp]
   128fc:	bl	11c4c <sigaction@plt>
   12900:	sub	sp, fp, #16
   12904:	pop	{r4, r5, r6, r7, fp, pc}
   12908:	push	{r4, r5, fp, lr}
   1290c:	add	fp, sp, #8
   12910:	sub	sp, sp, #128	; 0x80
   12914:	mov	r5, sp
   12918:	mov	r4, r0
   1291c:	mov	r0, r5
   12920:	bl	11e14 <sigemptyset@plt>
   12924:	mov	r0, r5
   12928:	mov	r1, #17
   1292c:	bl	11cc4 <sigaddset@plt>
   12930:	mov	r0, r5
   12934:	mov	r1, #1
   12938:	bl	11cc4 <sigaddset@plt>
   1293c:	mov	r0, r5
   12940:	mov	r1, #14
   12944:	bl	11cc4 <sigaddset@plt>
   12948:	mov	r0, #0
   1294c:	mov	r1, r5
   12950:	mov	r2, r4
   12954:	bl	11b14 <sigprocmask@plt>
   12958:	sub	sp, fp, #8
   1295c:	pop	{r4, r5, fp, pc}
   12960:	cmp	r0, #0
   12964:	beq	12978 <__assert_fail@plt+0x9fc>
   12968:	mov	r1, r0
   1296c:	mov	r0, #2
   12970:	mov	r2, #0
   12974:	b	11b14 <sigprocmask@plt>
   12978:	push	{r4, sl, fp, lr}
   1297c:	add	fp, sp, #8
   12980:	sub	sp, sp, #128	; 0x80
   12984:	mov	r4, sp
   12988:	mov	r0, r4
   1298c:	bl	11e14 <sigemptyset@plt>
   12990:	mov	r0, #2
   12994:	mov	r1, r4
   12998:	mov	r2, #0
   1299c:	bl	11b14 <sigprocmask@plt>
   129a0:	sub	sp, fp, #8
   129a4:	pop	{r4, sl, fp, pc}
   129a8:	push	{r4, r5, r6, r7, fp, lr}
   129ac:	add	fp, sp, #16
   129b0:	sub	sp, sp, #56	; 0x38
   129b4:	mov	r5, r0
   129b8:	ldr	r0, [r1, #44]	; 0x2c
   129bc:	mov	r4, r1
   129c0:	cmp	r0, #0
   129c4:	beq	129e0 <__assert_fail@plt+0xa64>
   129c8:	ldr	r2, [r0, #12]
   129cc:	mov	r0, r5
   129d0:	mov	r1, r4
   129d4:	blx	r2
   129d8:	sub	sp, fp, #16
   129dc:	pop	{r4, r5, r6, r7, fp, pc}
   129e0:	movw	r0, #62400	; 0xf3c0
   129e4:	movt	r0, #2
   129e8:	ldrb	r0, [r0]
   129ec:	cmp	r0, #0
   129f0:	beq	12a1c <__assert_fail@plt+0xaa0>
   129f4:	movw	r0, #62384	; 0xf3b0
   129f8:	movt	r0, #2
   129fc:	ldr	r6, [r0]
   12a00:	bl	11d0c <getpid@plt>
   12a04:	ldr	r3, [r4, #48]	; 0x30
   12a08:	movw	r1, #53009	; 0xcf11
   12a0c:	mov	r2, r0
   12a10:	mov	r0, r6
   12a14:	movt	r1, #1
   12a18:	bl	11d60 <fprintf@plt>
   12a1c:	mov	r0, r5
   12a20:	mov	r1, #0
   12a24:	mov	r6, #0
   12a28:	bl	11bf8 <dup2@plt>
   12a2c:	mov	r0, r5
   12a30:	bl	11f4c <close@plt>
   12a34:	mov	r0, #0
   12a38:	mov	r1, #1
   12a3c:	bl	11bf8 <dup2@plt>
   12a40:	mov	r0, #0
   12a44:	mov	r1, #2
   12a48:	bl	11bf8 <dup2@plt>
   12a4c:	ldr	r0, [r4, #36]	; 0x24
   12a50:	bl	11aa8 <getpwnam@plt>
   12a54:	cmp	r0, #0
   12a58:	bne	12aa4 <__assert_fail@plt+0xb28>
   12a5c:	ldr	r2, [r4, #12]
   12a60:	ldr	r3, [r4, #20]
   12a64:	ldr	r0, [r4, #36]	; 0x24
   12a68:	movw	r1, #53022	; 0xcf1e
   12a6c:	movt	r1, #1
   12a70:	str	r0, [sp]
   12a74:	mov	r0, #3
   12a78:	bl	11e68 <syslog@plt>
   12a7c:	ldr	r0, [r4, #16]
   12a80:	cmp	r0, #1
   12a84:	beq	12a9c <__assert_fail@plt+0xb20>
   12a88:	add	r1, sp, #6
   12a8c:	mov	r0, #0
   12a90:	mov	r2, #50	; 0x32
   12a94:	mov	r3, #0
   12a98:	bl	11f40 <recv@plt>
   12a9c:	mov	r0, #1
   12aa0:	bl	11b5c <_exit@plt>
   12aa4:	mov	r5, r0
   12aa8:	ldr	r0, [r4, #40]	; 0x28
   12aac:	cmp	r0, #0
   12ab0:	ldrbne	r1, [r0]
   12ab4:	cmpne	r1, #0
   12ab8:	bne	12b50 <__assert_fail@plt+0xbd4>
   12abc:	ldr	r0, [r5, #8]
   12ac0:	cmp	r0, #0
   12ac4:	bne	12b10 <__assert_fail@plt+0xb94>
   12ac8:	ldr	r0, [r4, #48]	; 0x30
   12acc:	ldr	r1, [r4, #52]	; 0x34
   12ad0:	bl	11d6c <execv@plt>
   12ad4:	ldr	r0, [r4, #16]
   12ad8:	cmp	r0, #1
   12adc:	beq	12af4 <__assert_fail@plt+0xb78>
   12ae0:	add	r1, sp, #6
   12ae4:	mov	r0, #0
   12ae8:	mov	r2, #50	; 0x32
   12aec:	mov	r3, #0
   12af0:	bl	11f40 <recv@plt>
   12af4:	ldr	r2, [r4, #48]	; 0x30
   12af8:	movw	r1, #53121	; 0xcf81
   12afc:	mov	r0, #3
   12b00:	movt	r1, #1
   12b04:	bl	11e68 <syslog@plt>
   12b08:	mov	r0, #1
   12b0c:	bl	11b5c <_exit@plt>
   12b10:	cmp	r6, #0
   12b14:	beq	12b28 <__assert_fail@plt+0xbac>
   12b18:	mov	r7, r6
   12b1c:	ldr	r0, [r7, #8]!
   12b20:	cmp	r0, #0
   12b24:	bne	12b78 <__assert_fail@plt+0xbfc>
   12b28:	mov	r7, r5
   12b2c:	ldr	r0, [r7, #12]!
   12b30:	bl	11cac <setgid@plt>
   12b34:	cmn	r0, #1
   12b38:	ble	12b84 <__assert_fail@plt+0xc08>
   12b3c:	ldr	r0, [r5]
   12b40:	cmp	r6, #0
   12b44:	beq	12bac <__assert_fail@plt+0xc30>
   12b48:	add	r7, r6, #8
   12b4c:	b	12b9c <__assert_fail@plt+0xc20>
   12b50:	bl	11f64 <getgrnam@plt>
   12b54:	mov	r6, r0
   12b58:	cmp	r0, #0
   12b5c:	bne	12abc <__assert_fail@plt+0xb40>
   12b60:	ldr	r0, [r4, #40]	; 0x28
   12b64:	ldr	r2, [r4, #12]
   12b68:	ldr	r3, [r4, #20]
   12b6c:	movw	r1, #53046	; 0xcf36
   12b70:	movt	r1, #1
   12b74:	b	12a70 <__assert_fail@plt+0xaf4>
   12b78:	bl	11cac <setgid@plt>
   12b7c:	cmp	r0, #0
   12b80:	bge	12b98 <__assert_fail@plt+0xc1c>
   12b84:	ldr	r3, [r7]
   12b88:	ldr	r2, [r4, #12]
   12b8c:	movw	r1, #53071	; 0xcf4f
   12b90:	movt	r1, #1
   12b94:	b	12bd4 <__assert_fail@plt+0xc58>
   12b98:	ldr	r0, [r5]
   12b9c:	ldr	r1, [r7]
   12ba0:	cmp	r1, #0
   12ba4:	bne	12bb0 <__assert_fail@plt+0xc34>
   12ba8:	add	r7, r5, #12
   12bac:	ldr	r1, [r7]
   12bb0:	bl	11c10 <initgroups@plt>
   12bb4:	ldr	r0, [r5, #8]
   12bb8:	bl	11e74 <setuid@plt>
   12bbc:	cmn	r0, #1
   12bc0:	bgt	12ac8 <__assert_fail@plt+0xb4c>
   12bc4:	ldr	r3, [r5, #8]
   12bc8:	ldr	r2, [r4, #12]
   12bcc:	movw	r1, #53096	; 0xcf68
   12bd0:	movt	r1, #1
   12bd4:	mov	r0, #3
   12bd8:	bl	11e68 <syslog@plt>
   12bdc:	mov	r0, #1
   12be0:	bl	11b5c <_exit@plt>
   12be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12be8:	add	fp, sp, #28
   12bec:	sub	sp, sp, #4
   12bf0:	mov	r0, sp
   12bf4:	mov	r1, #1
   12bf8:	mov	r2, #0
   12bfc:	mov	r6, #1
   12c00:	bl	11dcc <wait3@plt>
   12c04:	cmp	r0, #1
   12c08:	blt	12d28 <__assert_fail@plt+0xdac>
   12c0c:	movw	r4, #62400	; 0xf3c0
   12c10:	movw	r9, #62836	; 0xf574
   12c14:	movw	r8, #62968	; 0xf5f8
   12c18:	movw	r7, #53166	; 0xcfae
   12c1c:	mov	r5, r0
   12c20:	movt	r4, #2
   12c24:	movt	r9, #2
   12c28:	movt	r8, #2
   12c2c:	movt	r7, #1
   12c30:	b	12c58 <__assert_fail@plt+0xcdc>
   12c34:	movw	r0, #62384	; 0xf3b0
   12c38:	ldr	r3, [sp]
   12c3c:	movw	r1, #53143	; 0xcf97
   12c40:	mov	r2, r5
   12c44:	movt	r0, #2
   12c48:	movt	r1, #1
   12c4c:	ldr	r0, [r0]
   12c50:	bl	11d60 <fprintf@plt>
   12c54:	b	12c64 <__assert_fail@plt+0xce8>
   12c58:	ldrb	r0, [r4]
   12c5c:	cmp	r0, #0
   12c60:	bne	12c34 <__assert_fail@plt+0xcb8>
   12c64:	movw	r0, #63000	; 0xf618
   12c68:	movt	r0, #2
   12c6c:	ldr	sl, [r0]
   12c70:	b	12c78 <__assert_fail@plt+0xcfc>
   12c74:	ldr	sl, [sl, #220]	; 0xdc
   12c78:	cmp	sl, #0
   12c7c:	beq	12d0c <__assert_fail@plt+0xd90>
   12c80:	ldr	r0, [sl, #24]
   12c84:	cmp	r0, r5
   12c88:	bne	12c74 <__assert_fail@plt+0xcf8>
   12c8c:	ldr	r3, [sp]
   12c90:	cmp	r3, #0
   12c94:	beq	12ca8 <__assert_fail@plt+0xd2c>
   12c98:	ldr	r2, [sl, #48]	; 0x30
   12c9c:	mov	r0, #4
   12ca0:	mov	r1, r7
   12ca4:	bl	11e68 <syslog@plt>
   12ca8:	ldrb	r0, [r4]
   12cac:	cmp	r0, #0
   12cb0:	bne	12ce8 <__assert_fail@plt+0xd6c>
   12cb4:	ldr	r0, [sl, #60]	; 0x3c
   12cb8:	asr	r1, r0, #31
   12cbc:	add	r1, r0, r1, lsr #27
   12cc0:	and	r0, r0, #31
   12cc4:	asr	r1, r1, #5
   12cc8:	ldr	r2, [r9, r1, lsl #2]
   12ccc:	orr	r0, r2, r6, lsl r0
   12cd0:	str	r0, [r9, r1, lsl #2]
   12cd4:	ldr	r0, [r8]
   12cd8:	add	r0, r0, #1
   12cdc:	str	r0, [r8]
   12ce0:	str	r6, [sl, #24]
   12ce4:	b	12c74 <__assert_fail@plt+0xcf8>
   12ce8:	movw	r0, #62384	; 0xf3b0
   12cec:	ldr	r2, [sl, #12]
   12cf0:	ldr	r3, [sl, #60]	; 0x3c
   12cf4:	movw	r1, #53187	; 0xcfc3
   12cf8:	movt	r0, #2
   12cfc:	movt	r1, #1
   12d00:	ldr	r0, [r0]
   12d04:	bl	11d60 <fprintf@plt>
   12d08:	b	12cb4 <__assert_fail@plt+0xd38>
   12d0c:	mov	r0, sp
   12d10:	mov	r1, #1
   12d14:	mov	r2, #0
   12d18:	bl	11dcc <wait3@plt>
   12d1c:	mov	r5, r0
   12d20:	cmp	r0, #1
   12d24:	bge	12c58 <__assert_fail@plt+0xcdc>
   12d28:	sub	sp, fp, #28
   12d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d30:	push	{fp, lr}
   12d34:	mov	fp, sp
   12d38:	movw	r1, #54433	; 0xd4a1
   12d3c:	cmp	r0, #0
   12d40:	movt	r1, #1
   12d44:	moveq	r0, r1
   12d48:	bl	11bd4 <strdup@plt>
   12d4c:	cmp	r0, #0
   12d50:	popne	{fp, pc}
   12d54:	movw	r1, #53207	; 0xcfd7
   12d58:	mov	r0, #3
   12d5c:	movt	r1, #1
   12d60:	bl	11e68 <syslog@plt>
   12d64:	mvn	r0, #0
   12d68:	bl	11d18 <exit@plt>
   12d6c:	push	{r4, r5, r6, sl, fp, lr}
   12d70:	add	fp, sp, #16
   12d74:	mov	r4, r0
   12d78:	mov	r0, r1
   12d7c:	mov	r5, r1
   12d80:	bl	1809c <argp_parse@@Base+0x1a04>
   12d84:	cmp	r0, #0
   12d88:	beq	12da4 <__assert_fail@plt+0xe28>
   12d8c:	ldr	r1, [r4]
   12d90:	mov	r2, r5
   12d94:	mov	r6, r0
   12d98:	bl	11b68 <memcpy@plt>
   12d9c:	str	r6, [r4]
   12da0:	pop	{r4, r5, r6, sl, fp, pc}
   12da4:	movw	r1, #53218	; 0xcfe2
   12da8:	mov	r0, #3
   12dac:	movt	r1, #1
   12db0:	bl	11e68 <syslog@plt>
   12db4:	mvn	r0, #0
   12db8:	bl	11d18 <exit@plt>
   12dbc:	push	{r4, r5, r6, sl, fp, lr}
   12dc0:	add	fp, sp, #16
   12dc4:	mov	r4, r0
   12dc8:	ldr	r0, [r0]
   12dcc:	cmp	r0, #0
   12dd0:	popeq	{r4, r5, r6, sl, fp, pc}
   12dd4:	bl	11d30 <strlen@plt>
   12dd8:	add	r5, r0, #1
   12ddc:	mov	r0, r5
   12de0:	bl	1809c <argp_parse@@Base+0x1a04>
   12de4:	cmp	r0, #0
   12de8:	beq	12e04 <__assert_fail@plt+0xe88>
   12dec:	ldr	r1, [r4]
   12df0:	mov	r2, r5
   12df4:	mov	r6, r0
   12df8:	bl	11b68 <memcpy@plt>
   12dfc:	str	r6, [r4]
   12e00:	pop	{r4, r5, r6, sl, fp, pc}
   12e04:	movw	r1, #53218	; 0xcfe2
   12e08:	mov	r0, #3
   12e0c:	movt	r1, #1
   12e10:	bl	11e68 <syslog@plt>
   12e14:	mvn	r0, #0
   12e18:	bl	11d18 <exit@plt>
   12e1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e20:	add	fp, sp, #28
   12e24:	sub	sp, sp, #44	; 0x2c
   12e28:	mov	ip, r0
   12e2c:	movw	r0, #62384	; 0xf3b0
   12e30:	movt	r0, #2
   12e34:	ldr	r0, [r0]
   12e38:	ldm	r1, {r2, r3}
   12e3c:	ldr	r4, [r1, #64]	; 0x40
   12e40:	sub	r7, r4, #1
   12e44:	cmp	r7, #1
   12e48:	bhi	12e68 <__assert_fail@plt+0xeec>
   12e4c:	movw	r5, #53312	; 0xd040
   12e50:	movw	lr, #54150	; 0xd386
   12e54:	cmp	r4, #2
   12e58:	movt	r5, #1
   12e5c:	movt	lr, #1
   12e60:	moveq	lr, r5
   12e64:	b	12e7c <__assert_fail@plt+0xf00>
   12e68:	ldr	r4, [r1, #8]
   12e6c:	movw	lr, #53323	; 0xd04b
   12e70:	movt	lr, #1
   12e74:	cmp	r4, #0
   12e78:	movne	lr, r4
   12e7c:	ldr	r4, [r1, #44]	; 0x2c
   12e80:	ldr	r8, [r1, #36]	; 0x24
   12e84:	ldr	r9, [r1, #40]	; 0x28
   12e88:	ldr	r6, [r1, #12]
   12e8c:	ldr	r7, [r1, #20]
   12e90:	ldr	sl, [r1, #24]
   12e94:	ldr	r5, [r1, #28]
   12e98:	cmp	r4, #0
   12e9c:	beq	12ea8 <__assert_fail@plt+0xf2c>
   12ea0:	ldr	r4, [r4]
   12ea4:	b	12eb0 <__assert_fail@plt+0xf34>
   12ea8:	movw	r4, #53325	; 0xd04d
   12eac:	movt	r4, #1
   12eb0:	ldr	r1, [r1, #48]	; 0x30
   12eb4:	str	r4, [sp, #32]
   12eb8:	str	r1, [sp, #36]	; 0x24
   12ebc:	add	r1, sp, #8
   12ec0:	stm	sp, {ip, lr}
   12ec4:	stm	r1, {r6, r7, sl}
   12ec8:	add	r1, sp, #20
   12ecc:	stm	r1, {r5, r8, r9}
   12ed0:	movw	r1, #53229	; 0xcfed
   12ed4:	movt	r1, #1
   12ed8:	bl	11d60 <fprintf@plt>
   12edc:	sub	sp, fp, #28
   12ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ee4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ee8:	add	fp, sp, #28
   12eec:	sub	sp, sp, #20
   12ef0:	mov	r4, r0
   12ef4:	movw	r7, #53403	; 0xd09b
   12ef8:	mov	r0, #1
   12efc:	mov	r8, #2
   12f00:	mov	sl, #4
   12f04:	add	r9, sp, #12
   12f08:	add	r6, sp, #16
   12f0c:	add	r5, r4, #72	; 0x48
   12f10:	movt	r7, #1
   12f14:	str	r0, [sp, #16]
   12f18:	b	12f28 <__assert_fail@plt+0xfac>
   12f1c:	strh	r8, [r4, #68]	; 0x44
   12f20:	ldr	r0, [r4, #60]	; 0x3c
   12f24:	bl	11f4c <close@plt>
   12f28:	ldr	r1, [r4, #16]
   12f2c:	ldrh	r0, [r4, #68]	; 0x44
   12f30:	mov	r2, #0
   12f34:	bl	11f04 <socket@plt>
   12f38:	cmn	r0, #1
   12f3c:	str	r0, [r4, #60]	; 0x3c
   12f40:	ble	1306c <__assert_fail@plt+0x10f0>
   12f44:	ldrh	r1, [r4, #68]	; 0x44
   12f48:	cmp	r1, #10
   12f4c:	bne	12f8c <__assert_fail@plt+0x1010>
   12f50:	ldrb	r1, [r4, #70]	; 0x46
   12f54:	mov	r2, #26
   12f58:	mov	r3, r9
   12f5c:	str	sl, [sp]
   12f60:	clz	r1, r1
   12f64:	lsr	r1, r1, #5
   12f68:	str	r1, [sp, #12]
   12f6c:	mov	r1, #41	; 0x29
   12f70:	bl	11acc <setsockopt@plt>
   12f74:	cmn	r0, #1
   12f78:	bgt	12f8c <__assert_fail@plt+0x1010>
   12f7c:	movw	r1, #53374	; 0xd07e
   12f80:	mov	r0, #3
   12f84:	movt	r1, #1
   12f88:	bl	11e68 <syslog@plt>
   12f8c:	ldr	r0, [r4, #20]
   12f90:	mov	r1, r7
   12f94:	mov	r2, #3
   12f98:	bl	11f28 <strncmp@plt>
   12f9c:	cmp	r0, #0
   12fa0:	bne	12ff8 <__assert_fail@plt+0x107c>
   12fa4:	movw	r0, #62972	; 0xf5fc
   12fa8:	movt	r0, #2
   12fac:	ldrb	r0, [r0]
   12fb0:	tst	r0, #1
   12fb4:	beq	12ff8 <__assert_fail@plt+0x107c>
   12fb8:	ldr	r0, [r4, #60]	; 0x3c
   12fbc:	mov	r1, #1
   12fc0:	mov	r2, #1
   12fc4:	mov	r3, r6
   12fc8:	str	sl, [sp]
   12fcc:	bl	11acc <setsockopt@plt>
   12fd0:	cmn	r0, #1
   12fd4:	bgt	12ff8 <__assert_fail@plt+0x107c>
   12fd8:	bl	11d78 <__errno_location@plt>
   12fdc:	ldr	r0, [r0]
   12fe0:	cmp	r0, #13
   12fe4:	beq	12ff8 <__assert_fail@plt+0x107c>
   12fe8:	movw	r1, #53407	; 0xd09f
   12fec:	mov	r0, #3
   12ff0:	movt	r1, #1
   12ff4:	bl	11e68 <syslog@plt>
   12ff8:	ldr	r0, [r4, #60]	; 0x3c
   12ffc:	mov	r1, #1
   13000:	mov	r2, #2
   13004:	mov	r3, r6
   13008:	str	sl, [sp]
   1300c:	bl	11acc <setsockopt@plt>
   13010:	cmn	r0, #1
   13014:	bgt	13028 <__assert_fail@plt+0x10ac>
   13018:	movw	r1, #53433	; 0xd0b9
   1301c:	mov	r0, #3
   13020:	movt	r1, #1
   13024:	bl	11e68 <syslog@plt>
   13028:	ldr	r0, [r4, #60]	; 0x3c
   1302c:	ldr	r2, [r4, #200]	; 0xc8
   13030:	mov	r1, r5
   13034:	bl	11d9c <bind@plt>
   13038:	cmn	r0, #1
   1303c:	bgt	13170 <__assert_fail@plt+0x11f4>
   13040:	bl	11d78 <__errno_location@plt>
   13044:	ldr	r0, [r0]
   13048:	orr	r1, r0, #2
   1304c:	cmp	r1, #99	; 0x63
   13050:	ldrheq	r1, [r4, #68]	; 0x44
   13054:	cmpeq	r1, #10
   13058:	bne	13098 <__assert_fail@plt+0x111c>
   1305c:	ldrb	r1, [r4, #70]	; 0x46
   13060:	cmp	r1, #0
   13064:	bne	12f1c <__assert_fail@plt+0xfa0>
   13068:	b	13098 <__assert_fail@plt+0x111c>
   1306c:	bl	11d78 <__errno_location@plt>
   13070:	ldr	r0, [r0]
   13074:	cmp	r0, #97	; 0x61
   13078:	ldrheq	r1, [r4, #68]	; 0x44
   1307c:	cmpeq	r1, #10
   13080:	bne	130d8 <__assert_fail@plt+0x115c>
   13084:	ldrb	r1, [r4, #70]	; 0x46
   13088:	cmp	r1, #0
   1308c:	beq	130d8 <__assert_fail@plt+0x115c>
   13090:	strh	r8, [r4, #68]	; 0x44
   13094:	b	12f28 <__assert_fail@plt+0xfac>
   13098:	movw	r1, #62400	; 0xf3c0
   1309c:	ldr	r5, [r4, #8]
   130a0:	movt	r1, #2
   130a4:	ldrb	r1, [r1]
   130a8:	cmp	r5, #0
   130ac:	beq	1310c <__assert_fail@plt+0x1190>
   130b0:	cmp	r1, #0
   130b4:	bne	13178 <__assert_fail@plt+0x11fc>
   130b8:	ldr	r0, [r4, #20]
   130bc:	ldr	r3, [r4, #12]
   130c0:	movw	r1, #53493	; 0xd0f5
   130c4:	mov	r2, r5
   130c8:	movt	r1, #1
   130cc:	str	r0, [sp]
   130d0:	mov	r0, #3
   130d4:	b	13128 <__assert_fail@plt+0x11ac>
   130d8:	movw	r1, #62400	; 0xf3c0
   130dc:	movt	r1, #2
   130e0:	ldrb	r1, [r1]
   130e4:	cmp	r1, #0
   130e8:	bne	131b8 <__assert_fail@plt+0x123c>
   130ec:	ldr	r2, [r4, #12]
   130f0:	ldr	r3, [r4, #20]
   130f4:	movw	r1, #53356	; 0xd06c
   130f8:	mov	r0, #3
   130fc:	movt	r1, #1
   13100:	bl	11e68 <syslog@plt>
   13104:	mov	r4, #1
   13108:	b	13164 <__assert_fail@plt+0x11e8>
   1310c:	cmp	r1, #0
   13110:	bne	131f0 <__assert_fail@plt+0x1274>
   13114:	ldr	r2, [r4, #12]
   13118:	ldr	r3, [r4, #20]
   1311c:	movw	r1, #53496	; 0xd0f8
   13120:	mov	r0, #3
   13124:	movt	r1, #1
   13128:	bl	11e68 <syslog@plt>
   1312c:	ldr	r0, [r4, #60]	; 0x3c
   13130:	bl	11f4c <close@plt>
   13134:	mvn	r0, #0
   13138:	str	r0, [r4, #60]	; 0x3c
   1313c:	movw	r0, #62988	; 0xf60c
   13140:	mov	r4, #1
   13144:	movt	r0, #2
   13148:	ldr	r1, [r0]
   1314c:	cmp	r1, #0
   13150:	bne	13164 <__assert_fail@plt+0x11e8>
   13154:	mov	r4, #1
   13158:	str	r4, [r0]
   1315c:	mov	r0, #600	; 0x258
   13160:	bl	11be0 <alarm@plt>
   13164:	mov	r0, r4
   13168:	sub	sp, fp, #28
   1316c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13170:	mov	r4, #0
   13174:	b	13164 <__assert_fail@plt+0x11e8>
   13178:	movw	r1, #62384	; 0xf3b0
   1317c:	ldr	r8, [r4, #12]
   13180:	ldr	r7, [r4, #20]
   13184:	movt	r1, #2
   13188:	ldr	r6, [r1]
   1318c:	bl	11cdc <strerror@plt>
   13190:	movw	r1, #53463	; 0xd0d7
   13194:	str	r0, [sp, #4]
   13198:	mov	r0, r6
   1319c:	mov	r2, r5
   131a0:	mov	r3, r8
   131a4:	str	r7, [sp]
   131a8:	movt	r1, #1
   131ac:	bl	11d60 <fprintf@plt>
   131b0:	ldr	r5, [r4, #8]
   131b4:	b	130b8 <__assert_fail@plt+0x113c>
   131b8:	movw	r1, #62384	; 0xf3b0
   131bc:	ldr	r5, [r4, #12]
   131c0:	ldr	r6, [r4, #20]
   131c4:	movt	r1, #2
   131c8:	ldr	r7, [r1]
   131cc:	bl	11cdc <strerror@plt>
   131d0:	movw	r1, #53328	; 0xd050
   131d4:	str	r0, [sp]
   131d8:	mov	r0, r7
   131dc:	mov	r2, r5
   131e0:	mov	r3, r6
   131e4:	movt	r1, #1
   131e8:	bl	11d60 <fprintf@plt>
   131ec:	b	130ec <__assert_fail@plt+0x1170>
   131f0:	movw	r1, #62384	; 0xf3b0
   131f4:	ldr	r5, [r4, #12]
   131f8:	ldr	r6, [r4, #20]
   131fc:	movt	r1, #2
   13200:	ldr	r7, [r1]
   13204:	bl	11cdc <strerror@plt>
   13208:	movw	r1, #53512	; 0xd108
   1320c:	str	r0, [sp]
   13210:	mov	r0, r7
   13214:	mov	r2, r5
   13218:	mov	r3, r6
   1321c:	movt	r1, #1
   13220:	bl	11d60 <fprintf@plt>
   13224:	b	13114 <__assert_fail@plt+0x1198>
   13228:	push	{r4, sl, fp, lr}
   1322c:	add	fp, sp, #8
   13230:	mov	r4, r0
   13234:	mov	r0, #1
   13238:	strh	r0, [r4, #32]
   1323c:	ldr	r0, [r4, #60]	; 0x3c
   13240:	cmn	r0, #1
   13244:	beq	1324c <__assert_fail@plt+0x12d0>
   13248:	pop	{r4, sl, fp, pc}
   1324c:	mov	r0, r4
   13250:	bl	12ee4 <__assert_fail@plt+0xf68>
   13254:	cmp	r0, #0
   13258:	popne	{r4, sl, fp, pc}
   1325c:	ldr	r0, [r4, #16]
   13260:	cmp	r0, #1
   13264:	bne	13274 <__assert_fail@plt+0x12f8>
   13268:	ldr	r0, [r4, #60]	; 0x3c
   1326c:	mov	r1, #10
   13270:	bl	11e44 <listen@plt>
   13274:	ldr	r3, [r4, #60]	; 0x3c
   13278:	movw	ip, #62836	; 0xf574
   1327c:	mov	r2, #1
   13280:	movt	ip, #2
   13284:	asr	r0, r3, #31
   13288:	and	r1, r3, #31
   1328c:	add	r0, r3, r0, lsr #27
   13290:	asr	r0, r0, #5
   13294:	ldr	lr, [ip, r0, lsl #2]
   13298:	orr	r1, lr, r2, lsl r1
   1329c:	str	r1, [ip, r0, lsl #2]
   132a0:	movw	r0, #62968	; 0xf5f8
   132a4:	movt	r0, #2
   132a8:	ldr	r1, [r0]
   132ac:	add	r1, r1, #1
   132b0:	str	r1, [r0]
   132b4:	movw	r0, #62832	; 0xf570
   132b8:	movt	r0, #2
   132bc:	ldr	r1, [r0]
   132c0:	cmp	r3, r1
   132c4:	strgt	r3, [r0]
   132c8:	movw	r0, #62400	; 0xf3c0
   132cc:	movt	r0, #2
   132d0:	ldrb	r0, [r0]
   132d4:	cmp	r0, #0
   132d8:	beq	13248 <__assert_fail@plt+0x12cc>
   132dc:	movw	r0, #62384	; 0xf3b0
   132e0:	ldr	r2, [r4, #48]	; 0x30
   132e4:	movw	r1, #53539	; 0xd123
   132e8:	movt	r0, #2
   132ec:	movt	r1, #1
   132f0:	ldr	r0, [r0]
   132f4:	pop	{r4, sl, fp, lr}
   132f8:	b	11d60 <fprintf@plt>
   132fc:	push	{r4, sl, fp, lr}
   13300:	add	fp, sp, #8
   13304:	movw	r0, #62988	; 0xf60c
   13308:	mov	r1, #0
   1330c:	movt	r0, #2
   13310:	str	r1, [r0]
   13314:	movw	r0, #63000	; 0xf618
   13318:	movt	r0, #2
   1331c:	ldr	r4, [r0]
   13320:	b	13328 <__assert_fail@plt+0x13ac>
   13324:	ldr	r4, [r4, #220]	; 0xdc
   13328:	cmp	r4, #0
   1332c:	popeq	{r4, sl, fp, pc}
   13330:	ldr	r0, [r4, #60]	; 0x3c
   13334:	cmn	r0, #1
   13338:	bne	13324 <__assert_fail@plt+0x13a8>
   1333c:	ldr	r0, [r4, #64]	; 0x40
   13340:	sub	r0, r0, #1
   13344:	cmp	r0, #2
   13348:	movcs	r0, r4
   1334c:	blcs	12ee4 <__assert_fail@plt+0xf68>
   13350:	b	13324 <__assert_fail@plt+0x13a8>
   13354:	push	{r4, sl, fp, lr}
   13358:	add	fp, sp, #8
   1335c:	mov	r4, r0
   13360:	ldr	r0, [r0, #60]	; 0x3c
   13364:	cmp	r0, #0
   13368:	blt	133ac <__assert_fail@plt+0x1430>
   1336c:	movw	r1, #62968	; 0xf5f8
   13370:	movw	ip, #62836	; 0xf574
   13374:	mov	r3, #1
   13378:	movt	r1, #2
   1337c:	movt	ip, #2
   13380:	ldr	r2, [r1]
   13384:	sub	r2, r2, #1
   13388:	str	r2, [r1]
   1338c:	lsr	r1, r0, #5
   13390:	and	r2, r0, #31
   13394:	ldr	lr, [ip, r1, lsl #2]
   13398:	bic	r2, lr, r3, lsl r2
   1339c:	str	r2, [ip, r1, lsl #2]
   133a0:	bl	11f4c <close@plt>
   133a4:	mvn	r0, #0
   133a8:	str	r0, [r4, #60]	; 0x3c
   133ac:	mov	r0, #0
   133b0:	str	r0, [r4, #208]	; 0xd0
   133b4:	ldr	r0, [r4, #24]
   133b8:	cmp	r0, #2
   133bc:	movge	r0, #1
   133c0:	strge	r0, [r4, #24]
   133c4:	pop	{r4, sl, fp, pc}
   133c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133cc:	add	fp, sp, #28
   133d0:	sub	sp, sp, #308	; 0x134
   133d4:	movw	r8, #63000	; 0xf618
   133d8:	mov	r5, r0
   133dc:	movt	r8, #2
   133e0:	ldr	r9, [r8]
   133e4:	cmp	r9, #0
   133e8:	beq	1346c <__assert_fail@plt+0x14f0>
   133ec:	add	r6, r5, #72	; 0x48
   133f0:	add	r0, r9, #72	; 0x48
   133f4:	mov	r1, r6
   133f8:	mov	r2, #128	; 0x80
   133fc:	bl	11b98 <memcmp@plt>
   13400:	cmp	r0, #0
   13404:	bne	13460 <__assert_fail@plt+0x14e4>
   13408:	ldr	r1, [r5, #12]
   1340c:	ldr	r0, [r9, #12]
   13410:	bl	11ab4 <strcmp@plt>
   13414:	cmp	r0, #0
   13418:	bne	13460 <__assert_fail@plt+0x14e4>
   1341c:	ldr	r1, [r5, #20]
   13420:	ldr	r0, [r9, #20]
   13424:	bl	11ab4 <strcmp@plt>
   13428:	cmp	r0, #0
   1342c:	bne	13460 <__assert_fail@plt+0x14e4>
   13430:	ldr	r0, [r5, #64]	; 0x40
   13434:	ldr	r1, [r9, #64]	; 0x40
   13438:	sub	r0, r0, #1
   1343c:	sub	r1, r1, #1
   13440:	cmp	r0, #2
   13444:	mov	r0, #0
   13448:	movwcc	r0, #1
   1344c:	cmp	r1, #2
   13450:	mov	r1, #0
   13454:	movwcc	r1, #1
   13458:	cmp	r1, r0
   1345c:	beq	13734 <__assert_fail@plt+0x17b8>
   13460:	ldr	r9, [r9, #220]	; 0xdc
   13464:	cmp	r9, #0
   13468:	bne	133f0 <__assert_fail@plt+0x1474>
   1346c:	movw	r0, #62400	; 0xf3c0
   13470:	movt	r0, #2
   13474:	ldrb	r0, [r0]
   13478:	cmp	r0, #0
   1347c:	bne	136f0 <__assert_fail@plt+0x1774>
   13480:	mov	r0, #224	; 0xe0
   13484:	bl	1809c <argp_parse@@Base+0x1a04>
   13488:	cmp	r0, #0
   1348c:	beq	1397c <__assert_fail@plt+0x1a00>
   13490:	mov	r1, r5
   13494:	mov	r2, #224	; 0xe0
   13498:	mov	r9, r0
   1349c:	bl	11b68 <memcpy@plt>
   134a0:	ldr	r0, [r9, #8]
   134a4:	cmp	r0, #0
   134a8:	beq	134d8 <__assert_fail@plt+0x155c>
   134ac:	bl	11d30 <strlen@plt>
   134b0:	add	r5, r0, #1
   134b4:	mov	r0, r5
   134b8:	bl	1809c <argp_parse@@Base+0x1a04>
   134bc:	cmp	r0, #0
   134c0:	beq	13964 <__assert_fail@plt+0x19e8>
   134c4:	ldr	r1, [r9, #8]
   134c8:	mov	r2, r5
   134cc:	mov	r6, r0
   134d0:	bl	11b68 <memcpy@plt>
   134d4:	str	r6, [r9, #8]
   134d8:	ldr	r0, [r9, #12]
   134dc:	cmp	r0, #0
   134e0:	beq	13510 <__assert_fail@plt+0x1594>
   134e4:	bl	11d30 <strlen@plt>
   134e8:	add	r5, r0, #1
   134ec:	mov	r0, r5
   134f0:	bl	1809c <argp_parse@@Base+0x1a04>
   134f4:	cmp	r0, #0
   134f8:	beq	13964 <__assert_fail@plt+0x19e8>
   134fc:	ldr	r1, [r9, #12]
   13500:	mov	r2, r5
   13504:	mov	r6, r0
   13508:	bl	11b68 <memcpy@plt>
   1350c:	str	r6, [r9, #12]
   13510:	ldr	r0, [r9, #20]
   13514:	cmp	r0, #0
   13518:	beq	13548 <__assert_fail@plt+0x15cc>
   1351c:	bl	11d30 <strlen@plt>
   13520:	add	r5, r0, #1
   13524:	mov	r0, r5
   13528:	bl	1809c <argp_parse@@Base+0x1a04>
   1352c:	cmp	r0, #0
   13530:	beq	13964 <__assert_fail@plt+0x19e8>
   13534:	ldr	r1, [r9, #20]
   13538:	mov	r2, r5
   1353c:	mov	r6, r0
   13540:	bl	11b68 <memcpy@plt>
   13544:	str	r6, [r9, #20]
   13548:	ldr	r0, [r9, #36]	; 0x24
   1354c:	cmp	r0, #0
   13550:	beq	13580 <__assert_fail@plt+0x1604>
   13554:	bl	11d30 <strlen@plt>
   13558:	add	r5, r0, #1
   1355c:	mov	r0, r5
   13560:	bl	1809c <argp_parse@@Base+0x1a04>
   13564:	cmp	r0, #0
   13568:	beq	13964 <__assert_fail@plt+0x19e8>
   1356c:	ldr	r1, [r9, #36]	; 0x24
   13570:	mov	r2, r5
   13574:	mov	r6, r0
   13578:	bl	11b68 <memcpy@plt>
   1357c:	str	r6, [r9, #36]	; 0x24
   13580:	ldr	r0, [r9, #40]	; 0x28
   13584:	cmp	r0, #0
   13588:	beq	135b8 <__assert_fail@plt+0x163c>
   1358c:	bl	11d30 <strlen@plt>
   13590:	add	r5, r0, #1
   13594:	mov	r0, r5
   13598:	bl	1809c <argp_parse@@Base+0x1a04>
   1359c:	cmp	r0, #0
   135a0:	beq	13964 <__assert_fail@plt+0x19e8>
   135a4:	ldr	r1, [r9, #40]	; 0x28
   135a8:	mov	r2, r5
   135ac:	mov	r6, r0
   135b0:	bl	11b68 <memcpy@plt>
   135b4:	str	r6, [r9, #40]	; 0x28
   135b8:	ldr	r0, [r9, #48]	; 0x30
   135bc:	cmp	r0, #0
   135c0:	beq	135f0 <__assert_fail@plt+0x1674>
   135c4:	bl	11d30 <strlen@plt>
   135c8:	add	r5, r0, #1
   135cc:	mov	r0, r5
   135d0:	bl	1809c <argp_parse@@Base+0x1a04>
   135d4:	cmp	r0, #0
   135d8:	beq	13964 <__assert_fail@plt+0x19e8>
   135dc:	ldr	r1, [r9, #48]	; 0x30
   135e0:	mov	r2, r5
   135e4:	mov	r6, r0
   135e8:	bl	11b68 <memcpy@plt>
   135ec:	str	r6, [r9, #48]	; 0x30
   135f0:	ldr	r0, [r9, #56]	; 0x38
   135f4:	lsl	r6, r0, #2
   135f8:	mov	r0, r6
   135fc:	bl	1809c <argp_parse@@Base+0x1a04>
   13600:	cmp	r0, #0
   13604:	beq	13964 <__assert_fail@plt+0x19e8>
   13608:	ldr	r1, [r9, #52]	; 0x34
   1360c:	mov	r2, r6
   13610:	mov	r5, r0
   13614:	bl	11b68 <memcpy@plt>
   13618:	str	r5, [r9, #52]	; 0x34
   1361c:	ldr	r1, [r9, #56]	; 0x38
   13620:	cmp	r1, #0
   13624:	beq	1367c <__assert_fail@plt+0x1700>
   13628:	mov	r4, #0
   1362c:	b	13634 <__assert_fail@plt+0x16b8>
   13630:	ldr	r5, [r9, #52]	; 0x34
   13634:	ldr	r0, [r5, r4, lsl #2]
   13638:	cmp	r0, #0
   1363c:	beq	13670 <__assert_fail@plt+0x16f4>
   13640:	bl	11d30 <strlen@plt>
   13644:	add	r6, r0, #1
   13648:	mov	r0, r6
   1364c:	bl	1809c <argp_parse@@Base+0x1a04>
   13650:	cmp	r0, #0
   13654:	beq	13964 <__assert_fail@plt+0x19e8>
   13658:	ldr	r1, [r5, r4, lsl #2]
   1365c:	mov	r2, r6
   13660:	mov	r7, r0
   13664:	bl	11b68 <memcpy@plt>
   13668:	str	r7, [r5, r4, lsl #2]
   1366c:	ldr	r1, [r9, #56]	; 0x38
   13670:	add	r4, r4, #1
   13674:	cmp	r4, r1
   13678:	bcc	13630 <__assert_fail@plt+0x16b4>
   1367c:	mvn	r0, #0
   13680:	sub	r5, fp, #160	; 0xa0
   13684:	str	r0, [r9, #60]	; 0x3c
   13688:	mov	r0, r5
   1368c:	bl	11e14 <sigemptyset@plt>
   13690:	mov	r0, r5
   13694:	mov	r1, #17
   13698:	bl	11cc4 <sigaddset@plt>
   1369c:	mov	r0, r5
   136a0:	mov	r1, #1
   136a4:	bl	11cc4 <sigaddset@plt>
   136a8:	mov	r0, r5
   136ac:	mov	r1, #14
   136b0:	bl	11cc4 <sigaddset@plt>
   136b4:	add	r6, sp, #48	; 0x30
   136b8:	mov	r0, #0
   136bc:	mov	r1, r5
   136c0:	mov	r2, r6
   136c4:	bl	11b14 <sigprocmask@plt>
   136c8:	ldr	r0, [r8]
   136cc:	mov	r1, r6
   136d0:	mov	r2, #0
   136d4:	str	r9, [r8]
   136d8:	str	r0, [r9, #220]	; 0xdc
   136dc:	mov	r0, #2
   136e0:	bl	11b14 <sigprocmask@plt>
   136e4:	mov	r0, r9
   136e8:	sub	sp, fp, #28
   136ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   136f0:	movw	r0, #62384	; 0xf3b0
   136f4:	ldr	r7, [r5, #64]	; 0x40
   136f8:	ldr	r2, [r5, #4]
   136fc:	ldr	r3, [r5]
   13700:	movt	r0, #2
   13704:	ldr	r0, [r0]
   13708:	sub	r1, r7, #1
   1370c:	str	r2, [sp, #44]	; 0x2c
   13710:	cmp	r1, #1
   13714:	bhi	1386c <__assert_fail@plt+0x18f0>
   13718:	movw	r6, #53312	; 0xd040
   1371c:	movw	r1, #54150	; 0xd386
   13720:	cmp	r7, #2
   13724:	movt	r6, #1
   13728:	movt	r1, #1
   1372c:	moveq	r1, r6
   13730:	b	13880 <__assert_fail@plt+0x1904>
   13734:	sub	r6, fp, #160	; 0xa0
   13738:	mov	r0, r6
   1373c:	bl	11e14 <sigemptyset@plt>
   13740:	mov	r0, r6
   13744:	mov	r1, #17
   13748:	bl	11cc4 <sigaddset@plt>
   1374c:	mov	r0, r6
   13750:	mov	r1, #1
   13754:	bl	11cc4 <sigaddset@plt>
   13758:	mov	r0, r6
   1375c:	mov	r1, #14
   13760:	bl	11cc4 <sigaddset@plt>
   13764:	add	r2, sp, #48	; 0x30
   13768:	mov	r0, #0
   1376c:	mov	r1, r6
   13770:	bl	11b14 <sigprocmask@plt>
   13774:	ldr	r0, [r5, #44]	; 0x2c
   13778:	cmp	r0, #0
   1377c:	bne	137a0 <__assert_fail@plt+0x1824>
   13780:	ldr	r1, [r9, #24]
   13784:	ldr	r0, [r5, #24]
   13788:	cmp	r1, #1
   1378c:	beq	1379c <__assert_fail@plt+0x1820>
   13790:	cmp	r0, #0
   13794:	bne	137a0 <__assert_fail@plt+0x1824>
   13798:	mov	r0, #0
   1379c:	str	r0, [r9, #24]
   137a0:	ldr	r0, [r5, #36]	; 0x24
   137a4:	cmp	r0, #0
   137a8:	ldrne	r1, [r9, #36]	; 0x24
   137ac:	strne	r0, [r9, #36]	; 0x24
   137b0:	strne	r1, [r5, #36]	; 0x24
   137b4:	ldr	r0, [r5, #40]	; 0x28
   137b8:	cmp	r0, #0
   137bc:	ldrne	r1, [r9, #40]	; 0x28
   137c0:	strne	r0, [r9, #40]	; 0x28
   137c4:	strne	r1, [r5, #40]	; 0x28
   137c8:	ldr	r0, [r5, #48]	; 0x30
   137cc:	cmp	r0, #0
   137d0:	ldrne	r1, [r9, #48]	; 0x30
   137d4:	strne	r0, [r9, #48]	; 0x30
   137d8:	strne	r1, [r5, #48]	; 0x30
   137dc:	ldr	r1, [r9, #52]	; 0x34
   137e0:	ldr	r0, [r9, #56]	; 0x38
   137e4:	bl	163a4 <__assert_fail@plt+0x4428>
   137e8:	ldr	r0, [r5, #56]	; 0x38
   137ec:	add	r1, sp, #48	; 0x30
   137f0:	mov	r2, #0
   137f4:	str	r0, [r9, #56]	; 0x38
   137f8:	ldr	r0, [r5, #52]	; 0x34
   137fc:	str	r0, [r9, #52]	; 0x34
   13800:	mov	r0, #0
   13804:	str	r0, [r5, #52]	; 0x34
   13808:	str	r0, [r5, #56]	; 0x38
   1380c:	mov	r0, #1
   13810:	strh	r0, [r9, #32]
   13814:	mov	r0, #2
   13818:	bl	11b14 <sigprocmask@plt>
   1381c:	movw	r0, #62400	; 0xf3c0
   13820:	movt	r0, #2
   13824:	ldrb	r0, [r0]
   13828:	cmp	r0, #0
   1382c:	beq	136e4 <__assert_fail@plt+0x1768>
   13830:	movw	r0, #62384	; 0xf3b0
   13834:	movt	r0, #2
   13838:	ldr	r0, [r0]
   1383c:	ldm	r9, {r2, r3}
   13840:	ldr	r7, [r9, #64]	; 0x40
   13844:	sub	r1, r7, #1
   13848:	cmp	r1, #1
   1384c:	bhi	138e8 <__assert_fail@plt+0x196c>
   13850:	movw	r6, #53312	; 0xd040
   13854:	movw	r1, #54150	; 0xd386
   13858:	cmp	r7, #2
   1385c:	movt	r6, #1
   13860:	movt	r1, #1
   13864:	moveq	r1, r6
   13868:	b	138fc <__assert_fail@plt+0x1980>
   1386c:	ldr	r7, [r5, #8]
   13870:	movw	r1, #53323	; 0xd04b
   13874:	movt	r1, #1
   13878:	cmp	r7, #0
   1387c:	movne	r1, r7
   13880:	ldr	r4, [r5, #44]	; 0x2c
   13884:	add	r9, r5, #20
   13888:	ldr	lr, [r5, #36]	; 0x24
   1388c:	ldr	r2, [r5, #40]	; 0x28
   13890:	ldr	sl, [r5, #12]
   13894:	ldm	r9, {r6, r7, r9}
   13898:	ldr	ip, [r5, #48]	; 0x30
   1389c:	cmp	r4, #0
   138a0:	ldrne	r4, [r4]
   138a4:	str	ip, [sp, #36]	; 0x24
   138a8:	movweq	r4, #53325	; 0xd04d
   138ac:	movteq	r4, #1
   138b0:	str	r4, [sp, #32]
   138b4:	movw	r4, #53565	; 0xd13d
   138b8:	movt	r4, #1
   138bc:	str	r4, [sp]
   138c0:	stmib	sp, {r1, sl}
   138c4:	add	r1, sp, #12
   138c8:	stm	r1, {r6, r7, r9, lr}
   138cc:	str	r2, [sp, #28]
   138d0:	mov	r2, r3
   138d4:	movw	r1, #53229	; 0xcfed
   138d8:	ldr	r3, [sp, #44]	; 0x2c
   138dc:	movt	r1, #1
   138e0:	bl	11d60 <fprintf@plt>
   138e4:	b	13480 <__assert_fail@plt+0x1504>
   138e8:	ldr	r7, [r9, #8]
   138ec:	movw	r1, #53323	; 0xd04b
   138f0:	movt	r1, #1
   138f4:	cmp	r7, #0
   138f8:	movne	r1, r7
   138fc:	ldr	r4, [r9, #44]	; 0x2c
   13900:	ldr	sl, [r9, #12]
   13904:	ldr	r5, [r9, #48]	; 0x30
   13908:	ldr	lr, [r9, #36]	; 0x24
   1390c:	ldr	r8, [r9, #20]
   13910:	ldr	r6, [r9, #24]
   13914:	ldr	r7, [r9, #28]
   13918:	ldr	ip, [r9, #40]	; 0x28
   1391c:	cmp	r4, #0
   13920:	ldrne	r4, [r4]
   13924:	str	r5, [sp, #36]	; 0x24
   13928:	movweq	r4, #53325	; 0xd04d
   1392c:	movteq	r4, #1
   13930:	str	r4, [sp, #32]
   13934:	movw	r4, #53560	; 0xd138
   13938:	movt	r4, #1
   1393c:	str	r4, [sp]
   13940:	stmib	sp, {r1, sl}
   13944:	add	r1, sp, #16
   13948:	str	r8, [sp, #12]
   1394c:	stm	r1, {r6, r7, lr}
   13950:	movw	r1, #53229	; 0xcfed
   13954:	str	ip, [sp, #28]
   13958:	movt	r1, #1
   1395c:	bl	11d60 <fprintf@plt>
   13960:	b	136e4 <__assert_fail@plt+0x1768>
   13964:	movw	r1, #53218	; 0xcfe2
   13968:	movt	r1, #1
   1396c:	mov	r0, #3
   13970:	bl	11e68 <syslog@plt>
   13974:	mvn	r0, #0
   13978:	bl	11d18 <exit@plt>
   1397c:	movw	r1, #54041	; 0xd319
   13980:	movt	r1, #1
   13984:	b	1396c <__assert_fail@plt+0x19f0>
   13988:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1398c:	add	fp, sp, #24
   13990:	sub	sp, sp, #32
   13994:	ldr	r7, [r0, #8]
   13998:	mov	r8, r2
   1399c:	mov	r9, r1
   139a0:	mov	r6, r0
   139a4:	cmp	r7, #0
   139a8:	beq	13a1c <__assert_fail@plt+0x1aa0>
   139ac:	movw	r1, #53570	; 0xd142
   139b0:	mov	r0, r7
   139b4:	movt	r1, #1
   139b8:	bl	11f70 <strspn@plt>
   139bc:	mov	r4, r0
   139c0:	mov	r0, r7
   139c4:	bl	11d30 <strlen@plt>
   139c8:	mov	r5, #1
   139cc:	cmp	r4, r0
   139d0:	beq	13a20 <__assert_fail@plt+0x1aa4>
   139d4:	mov	r0, r7
   139d8:	mov	r1, #58	; 0x3a
   139dc:	bl	11d48 <strchr@plt>
   139e0:	cmp	r0, #0
   139e4:	beq	13a00 <__assert_fail@plt+0x1a84>
   139e8:	movw	r1, #53582	; 0xd14e
   139ec:	mov	r0, r7
   139f0:	movt	r1, #1
   139f4:	bl	11f70 <strspn@plt>
   139f8:	cmp	r0, #0
   139fc:	bne	13a20 <__assert_fail@plt+0x1aa4>
   13a00:	cmp	r7, #0
   13a04:	beq	13a1c <__assert_fail@plt+0x1aa0>
   13a08:	movw	r0, #62400	; 0xf3c0
   13a0c:	movt	r0, #2
   13a10:	ldrb	r0, [r0]
   13a14:	cmp	r0, #0
   13a18:	bne	13a94 <__assert_fail@plt+0x1b18>
   13a1c:	mov	r5, #0
   13a20:	mov	r0, sp
   13a24:	vmov.i32	q8, #0	; 0x00000000
   13a28:	add	r2, r6, #8
   13a2c:	mov	r3, r8
   13a30:	add	r1, r0, #16
   13a34:	add	r0, r0, #4
   13a38:	vst1.32	{d16-d17}, [r1]
   13a3c:	vst1.32	{d16-d17}, [r0]
   13a40:	mov	r0, #1
   13a44:	str	r0, [sp]
   13a48:	mov	r0, #5
   13a4c:	ldrb	r1, [r6, #70]	; 0x46
   13a50:	cmp	r1, #0
   13a54:	ldrhne	r1, [r6, #68]	; 0x44
   13a58:	cmpne	r1, #2
   13a5c:	movne	r0, #9
   13a60:	strne	r0, [sp]
   13a64:	movne	r0, #13
   13a68:	cmp	r5, #0
   13a6c:	strne	r0, [sp]
   13a70:	ldrh	r0, [r6, #68]	; 0x44
   13a74:	str	r0, [sp, #4]
   13a78:	ldm	r2, {r0, r1, r2}
   13a7c:	str	r9, [sp, #12]
   13a80:	str	r2, [sp, #8]
   13a84:	mov	r2, sp
   13a88:	bl	11ef8 <getaddrinfo@plt>
   13a8c:	sub	sp, fp, #24
   13a90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13a94:	movw	r0, #62384	; 0xf3b0
   13a98:	movw	r1, #53607	; 0xd167
   13a9c:	mov	r2, r7
   13aa0:	movt	r0, #2
   13aa4:	movt	r1, #1
   13aa8:	ldr	r0, [r0]
   13aac:	bl	11d60 <fprintf@plt>
   13ab0:	b	13a1c <__assert_fail@plt+0x1aa0>
   13ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ab8:	add	fp, sp, #28
   13abc:	sub	sp, sp, #4
   13ac0:	vpush	{d8-d9}
   13ac4:	sub	sp, sp, #24
   13ac8:	ldr	r5, [r0, #20]
   13acc:	movw	r6, #53403	; 0xd09b
   13ad0:	mov	r4, r0
   13ad4:	mov	r2, #3
   13ad8:	movt	r6, #1
   13adc:	mov	r1, r6
   13ae0:	mov	r0, r5
   13ae4:	bl	11f28 <strncmp@plt>
   13ae8:	cmp	r0, #0
   13aec:	beq	13b14 <__assert_fail@plt+0x1b98>
   13af0:	movw	r6, #53630	; 0xd17e
   13af4:	mov	r0, r5
   13af8:	mov	r2, #3
   13afc:	movt	r6, #1
   13b00:	mov	r1, r6
   13b04:	bl	11f28 <strncmp@plt>
   13b08:	cmp	r0, #0
   13b0c:	moveq	r5, r6
   13b10:	mov	r6, r5
   13b14:	mov	r0, r6
   13b18:	bl	11b08 <getprotobyname@plt>
   13b1c:	cmp	r0, #0
   13b20:	beq	13c30 <__assert_fail@plt+0x1cb4>
   13b24:	ldr	r1, [r0, #8]
   13b28:	mov	r5, r0
   13b2c:	add	r2, sp, #20
   13b30:	mov	r0, r4
   13b34:	bl	13988 <__assert_fail@plt+0x1a0c>
   13b38:	cmn	r0, #9
   13b3c:	bne	13b74 <__assert_fail@plt+0x1bf8>
   13b40:	ldrh	r1, [r4, #68]	; 0x44
   13b44:	mvn	r0, #8
   13b48:	cmp	r1, #10
   13b4c:	bne	13c48 <__assert_fail@plt+0x1ccc>
   13b50:	ldrb	r1, [r4, #70]	; 0x46
   13b54:	cmp	r1, #0
   13b58:	beq	13c48 <__assert_fail@plt+0x1ccc>
   13b5c:	mov	r0, #2
   13b60:	add	r2, sp, #20
   13b64:	strh	r0, [r4, #68]	; 0x44
   13b68:	mov	r0, r4
   13b6c:	ldr	r1, [r5, #8]
   13b70:	bl	13988 <__assert_fail@plt+0x1a0c>
   13b74:	cmn	r0, #11
   13b78:	beq	13c50 <__assert_fail@plt+0x1cd4>
   13b7c:	cmp	r0, #0
   13b80:	bne	13c48 <__assert_fail@plt+0x1ccc>
   13b84:	ldr	r7, [sp, #20]
   13b88:	mov	r5, #0
   13b8c:	mov	r0, #0
   13b90:	cmp	r7, #0
   13b94:	beq	13c28 <__assert_fail@plt+0x1cac>
   13b98:	add	r6, r4, #72	; 0x48
   13b9c:	vmov.i32	q4, #0	; 0x00000000
   13ba0:	add	r0, r6, #96	; 0x60
   13ba4:	add	r8, r6, #64	; 0x40
   13ba8:	add	r9, r6, #48	; 0x30
   13bac:	add	sl, r6, #32
   13bb0:	add	r5, r6, #16
   13bb4:	str	r0, [sp, #16]
   13bb8:	add	r0, r6, #80	; 0x50
   13bbc:	str	r0, [sp, #12]
   13bc0:	mov	r0, r6
   13bc4:	mov	r1, #112	; 0x70
   13bc8:	vst1.32	{d8-d9}, [r8]
   13bcc:	vst1.32	{d8-d9}, [r9]
   13bd0:	vst1.32	{d8-d9}, [sl]
   13bd4:	vst1.32	{d8-d9}, [r5]
   13bd8:	vst1.32	{d8-d9}, [r0], r1
   13bdc:	vst1.32	{d8-d9}, [r0]
   13be0:	ldr	r0, [sp, #16]
   13be4:	vst1.32	{d8-d9}, [r0]
   13be8:	ldr	r0, [sp, #12]
   13bec:	vst1.32	{d8-d9}, [r0]
   13bf0:	mov	r0, r6
   13bf4:	ldr	r2, [r7, #16]
   13bf8:	ldr	r1, [r7, #20]
   13bfc:	bl	11b68 <memcpy@plt>
   13c00:	ldr	r0, [r7, #16]
   13c04:	str	r0, [r4, #200]	; 0xc8
   13c08:	mov	r0, r4
   13c0c:	bl	133c8 <__assert_fail@plt+0x144c>
   13c10:	bl	13228 <__assert_fail@plt+0x12ac>
   13c14:	ldr	r7, [r7, #28]
   13c18:	cmp	r7, #0
   13c1c:	bne	13bc0 <__assert_fail@plt+0x1c44>
   13c20:	ldr	r0, [sp, #20]
   13c24:	mov	r5, #0
   13c28:	bl	11eec <freeaddrinfo@plt>
   13c2c:	b	13cc0 <__assert_fail@plt+0x1d44>
   13c30:	ldr	r2, [r4, #20]
   13c34:	movw	r1, #53634	; 0xd182
   13c38:	mov	r0, #3
   13c3c:	movt	r1, #1
   13c40:	bl	11e68 <syslog@plt>
   13c44:	b	13cbc <__assert_fail@plt+0x1d40>
   13c48:	bl	11b44 <gai_strerror@plt>
   13c4c:	b	13c5c <__assert_fail@plt+0x1ce0>
   13c50:	bl	11d78 <__errno_location@plt>
   13c54:	ldr	r0, [r0]
   13c58:	bl	11cdc <strerror@plt>
   13c5c:	mov	r5, r0
   13c60:	movw	r0, #62400	; 0xf3c0
   13c64:	ldr	r2, [r4, #8]
   13c68:	movt	r0, #2
   13c6c:	ldrb	r0, [r0]
   13c70:	cmp	r2, #0
   13c74:	beq	13c98 <__assert_fail@plt+0x1d1c>
   13c78:	cmp	r0, #0
   13c7c:	bne	13cd4 <__assert_fail@plt+0x1d58>
   13c80:	ldr	r0, [r4, #20]
   13c84:	ldr	r3, [r4, #12]
   13c88:	movw	r1, #53690	; 0xd1ba
   13c8c:	movt	r1, #1
   13c90:	stm	sp, {r0, r5}
   13c94:	b	13cb4 <__assert_fail@plt+0x1d38>
   13c98:	cmp	r0, #0
   13c9c:	bne	13d00 <__assert_fail@plt+0x1d84>
   13ca0:	ldr	r2, [r4, #12]
   13ca4:	ldr	r3, [r4, #20]
   13ca8:	movw	r1, #53693	; 0xd1bd
   13cac:	str	r5, [sp]
   13cb0:	movt	r1, #1
   13cb4:	mov	r0, #3
   13cb8:	bl	11e68 <syslog@plt>
   13cbc:	mov	r5, #1
   13cc0:	mov	r0, r5
   13cc4:	sub	sp, fp, #48	; 0x30
   13cc8:	vpop	{d8-d9}
   13ccc:	add	sp, sp, #4
   13cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13cd4:	movw	r0, #62384	; 0xf3b0
   13cd8:	ldr	r1, [r4, #20]
   13cdc:	ldr	r3, [r4, #12]
   13ce0:	movt	r0, #2
   13ce4:	ldr	r0, [r0]
   13ce8:	stm	sp, {r1, r5}
   13cec:	movw	r1, #53655	; 0xd197
   13cf0:	movt	r1, #1
   13cf4:	bl	11d60 <fprintf@plt>
   13cf8:	ldr	r2, [r4, #8]
   13cfc:	b	13c80 <__assert_fail@plt+0x1d04>
   13d00:	movw	r0, #62384	; 0xf3b0
   13d04:	ldr	r2, [r4, #12]
   13d08:	ldr	r3, [r4, #20]
   13d0c:	movw	r1, #53716	; 0xd1d4
   13d10:	str	r5, [sp]
   13d14:	movt	r0, #2
   13d18:	movt	r1, #1
   13d1c:	ldr	r0, [r0]
   13d20:	bl	11d60 <fprintf@plt>
   13d24:	b	13ca0 <__assert_fail@plt+0x1d24>
   13d28:	movw	r1, #53044	; 0xcf34
   13d2c:	movt	r1, #1
   13d30:	b	11ec8 <fopen64@plt>
   13d34:	cmp	r0, #0
   13d38:	bxeq	lr
   13d3c:	b	11df0 <fclose@plt>
   13d40:	push	{r4, sl, fp, lr}
   13d44:	add	fp, sp, #8
   13d48:	mov	r4, r0
   13d4c:	ldr	r0, [r0, #8]
   13d50:	bl	17968 <argp_parse@@Base+0x12d0>
   13d54:	ldr	r0, [r4, #12]
   13d58:	bl	17968 <argp_parse@@Base+0x12d0>
   13d5c:	ldr	r0, [r4, #20]
   13d60:	bl	17968 <argp_parse@@Base+0x12d0>
   13d64:	ldr	r0, [r4, #36]	; 0x24
   13d68:	bl	17968 <argp_parse@@Base+0x12d0>
   13d6c:	ldr	r0, [r4, #40]	; 0x28
   13d70:	bl	17968 <argp_parse@@Base+0x12d0>
   13d74:	ldr	r0, [r4, #48]	; 0x30
   13d78:	bl	17968 <argp_parse@@Base+0x12d0>
   13d7c:	ldr	r1, [r4, #52]	; 0x34
   13d80:	ldr	r0, [r4, #56]	; 0x38
   13d84:	pop	{r4, sl, fp, lr}
   13d88:	b	163a4 <__assert_fail@plt+0x4428>
   13d8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d90:	add	fp, sp, #28
   13d94:	sub	sp, sp, #4
   13d98:	movw	r6, #62992	; 0xf610
   13d9c:	mov	r4, r0
   13da0:	movt	r6, #2
   13da4:	ldr	r0, [r6]
   13da8:	cmp	r0, #0
   13dac:	beq	13e38 <__assert_fail@plt+0x1ebc>
   13db0:	movw	r9, #62984	; 0xf608
   13db4:	movt	r9, #2
   13db8:	ldr	r1, [r9]
   13dbc:	add	r0, r0, r1
   13dc0:	movw	r1, #53748	; 0xd1f4
   13dc4:	movt	r1, #1
   13dc8:	bl	11ad8 <strcspn@plt>
   13dcc:	mov	r5, r0
   13dd0:	add	r0, r0, #1
   13dd4:	bl	1809c <argp_parse@@Base+0x1a04>
   13dd8:	cmp	r0, #0
   13ddc:	str	r0, [r4, #8]
   13de0:	beq	13e44 <__assert_fail@plt+0x1ec8>
   13de4:	ldr	r8, [r9]
   13de8:	ldr	r6, [r6]
   13dec:	mov	r2, r5
   13df0:	mov	r7, r0
   13df4:	add	r1, r6, r8
   13df8:	bl	11b68 <memcpy@plt>
   13dfc:	mov	sl, #0
   13e00:	add	r0, r8, r5
   13e04:	strb	sl, [r7, r5]
   13e08:	str	r0, [r9]
   13e0c:	ldrb	r1, [r6, r0]
   13e10:	cmp	r1, #0
   13e14:	beq	13e24 <__assert_fail@plt+0x1ea8>
   13e18:	add	r0, r0, #1
   13e1c:	str	r0, [r9]
   13e20:	b	13e38 <__assert_fail@plt+0x1ebc>
   13e24:	mov	r0, r6
   13e28:	bl	17968 <argp_parse@@Base+0x12d0>
   13e2c:	movw	r0, #62992	; 0xf610
   13e30:	movt	r0, #2
   13e34:	str	sl, [r0]
   13e38:	mov	r0, r4
   13e3c:	sub	sp, fp, #28
   13e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e44:	movw	r1, #53750	; 0xd1f6
   13e48:	mov	r0, #3
   13e4c:	movt	r1, #1
   13e50:	bl	11e68 <syslog@plt>
   13e54:	mvn	r0, #0
   13e58:	bl	11d18 <exit@plt>
   13e5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e60:	add	fp, sp, #28
   13e64:	sub	sp, sp, #28
   13e68:	mov	r9, r0
   13e6c:	movw	r0, #62992	; 0xf610
   13e70:	mov	r4, #0
   13e74:	movt	r0, #2
   13e78:	str	r4, [sp, #24]
   13e7c:	str	r4, [sp, #20]
   13e80:	ldr	r0, [r0]
   13e84:	cmp	r0, #0
   13e88:	beq	13ea0 <__assert_fail@plt+0x1f24>
   13e8c:	movw	sl, #62416	; 0xf3d0
   13e90:	movt	sl, #2
   13e94:	mov	r0, sl
   13e98:	bl	13d8c <__assert_fail@plt+0x1e10>
   13e9c:	b	14604 <__assert_fail@plt+0x2688>
   13ea0:	movw	sl, #62416	; 0xf3d0
   13ea4:	mov	r7, r2
   13ea8:	str	r1, [sp, #12]
   13eac:	mov	r1, #0
   13eb0:	mov	r2, #224	; 0xe0
   13eb4:	movt	sl, #2
   13eb8:	mov	r0, sl
   13ebc:	bl	11da8 <memset@plt>
   13ec0:	movw	r6, #62404	; 0xf3c4
   13ec4:	movw	r5, #62408	; 0xf3c8
   13ec8:	add	r8, sp, #24
   13ecc:	mov	r1, #0
   13ed0:	mov	r0, #0
   13ed4:	movt	r6, #2
   13ed8:	movt	r5, #2
   13edc:	b	13ef0 <__assert_fail@plt+0x1f74>
   13ee0:	ldr	r1, [sp, #20]
   13ee4:	ldr	r0, [sp, #24]
   13ee8:	mov	r4, #0
   13eec:	add	r8, sp, #24
   13ef0:	bl	163a4 <__assert_fail@plt+0x4428>
   13ef4:	ldr	r0, [sl, #8]
   13ef8:	bl	17968 <argp_parse@@Base+0x12d0>
   13efc:	ldr	r0, [sl, #12]
   13f00:	bl	17968 <argp_parse@@Base+0x12d0>
   13f04:	ldr	r0, [sl, #20]
   13f08:	bl	17968 <argp_parse@@Base+0x12d0>
   13f0c:	ldr	r0, [sl, #36]	; 0x24
   13f10:	bl	17968 <argp_parse@@Base+0x12d0>
   13f14:	ldr	r0, [sl, #40]	; 0x28
   13f18:	bl	17968 <argp_parse@@Base+0x12d0>
   13f1c:	ldr	r0, [sl, #48]	; 0x30
   13f20:	bl	17968 <argp_parse@@Base+0x12d0>
   13f24:	ldr	r1, [sl, #52]	; 0x34
   13f28:	ldr	r0, [sl, #56]	; 0x38
   13f2c:	bl	163a4 <__assert_fail@plt+0x4428>
   13f30:	mov	r0, sl
   13f34:	mov	r1, #0
   13f38:	mov	r2, #224	; 0xe0
   13f3c:	bl	11da8 <memset@plt>
   13f40:	mov	r0, r6
   13f44:	mov	r1, r5
   13f48:	mov	r2, #10
   13f4c:	mov	r3, r9
   13f50:	bl	11a9c <__getdelim@plt>
   13f54:	cmp	r0, #0
   13f58:	blt	14600 <__assert_fail@plt+0x2684>
   13f5c:	cmp	r0, #0
   13f60:	beq	13f84 <__assert_fail@plt+0x2008>
   13f64:	ldr	r1, [r6]
   13f68:	sub	r0, r0, #1
   13f6c:	ldrb	r2, [r1, r0]
   13f70:	cmp	r2, #10
   13f74:	strbeq	r4, [r1, r0]
   13f78:	ldr	r0, [r7]
   13f7c:	add	r0, r0, #1
   13f80:	str	r0, [r7]
   13f84:	ldr	r0, [r6]
   13f88:	ldrb	r1, [r0]
   13f8c:	cmp	r1, #35	; 0x23
   13f90:	cmpne	r1, #0
   13f94:	bne	13fb8 <__assert_fail@plt+0x203c>
   13f98:	mov	r0, r6
   13f9c:	mov	r1, r5
   13fa0:	mov	r2, #10
   13fa4:	mov	r3, r9
   13fa8:	bl	11a9c <__getdelim@plt>
   13fac:	cmp	r0, #0
   13fb0:	bge	13f5c <__assert_fail@plt+0x1fe0>
   13fb4:	b	14600 <__assert_fail@plt+0x2684>
   13fb8:	movw	r1, #54433	; 0xd4a1
   13fbc:	mov	r2, r8
   13fc0:	add	r3, sp, #20
   13fc4:	movt	r1, #1
   13fc8:	bl	16074 <__assert_fail@plt+0x40f8>
   13fcc:	cmp	r0, #0
   13fd0:	bne	13ee0 <__assert_fail@plt+0x1f64>
   13fd4:	ldr	r0, [sp, #24]
   13fd8:	cmp	r0, #5
   13fdc:	bgt	14070 <__assert_fail@plt+0x20f4>
   13fe0:	cmp	r0, #1
   13fe4:	bne	1410c <__assert_fail@plt+0x2190>
   13fe8:	ldr	r0, [sp, #20]
   13fec:	ldr	r8, [r0]
   13ff0:	mov	r0, r8
   13ff4:	bl	11d30 <strlen@plt>
   13ff8:	sub	r0, r0, #1
   13ffc:	ldrb	r1, [r8, r0]
   14000:	cmp	r1, #58	; 0x3a
   14004:	bne	1410c <__assert_fail@plt+0x2190>
   14008:	mov	r1, #0
   1400c:	strb	r1, [r8, r0]
   14010:	movw	r0, #63004	; 0xf61c
   14014:	movt	r0, #2
   14018:	ldr	r0, [r0]
   1401c:	bl	17968 <argp_parse@@Base+0x12d0>
   14020:	ldr	r0, [sp, #20]
   14024:	movw	r1, #53323	; 0xd04b
   14028:	movt	r1, #1
   1402c:	ldr	r8, [r0]
   14030:	mov	r0, r8
   14034:	bl	11ab4 <strcmp@plt>
   14038:	cmp	r0, #0
   1403c:	beq	13ee0 <__assert_fail@plt+0x1f64>
   14040:	movw	r0, #54433	; 0xd4a1
   14044:	cmp	r8, #0
   14048:	movt	r0, #1
   1404c:	moveq	r8, r0
   14050:	mov	r0, r8
   14054:	bl	11bd4 <strdup@plt>
   14058:	cmp	r0, #0
   1405c:	beq	14728 <__assert_fail@plt+0x27ac>
   14060:	movw	r1, #63004	; 0xf61c
   14064:	movt	r1, #2
   14068:	str	r0, [r1]
   1406c:	b	13ee0 <__assert_fail@plt+0x1f64>
   14070:	ldr	r0, [sp, #12]
   14074:	mov	r1, #58	; 0x3a
   14078:	str	r0, [sl]
   1407c:	ldr	r0, [r7]
   14080:	str	r0, [sl, #4]
   14084:	ldr	r0, [sp, #20]
   14088:	ldr	r8, [r0]
   1408c:	mov	r0, r8
   14090:	bl	11e38 <strrchr@plt>
   14094:	cmp	r0, #0
   14098:	beq	14120 <__assert_fail@plt+0x21a4>
   1409c:	movw	r1, #53323	; 0xd04b
   140a0:	mov	r4, r0
   140a4:	mov	r0, #0
   140a8:	strb	r0, [r4], #1
   140ac:	mov	r0, r8
   140b0:	movt	r1, #1
   140b4:	bl	11ab4 <strcmp@plt>
   140b8:	cmp	r0, #0
   140bc:	beq	140fc <__assert_fail@plt+0x2180>
   140c0:	movw	r0, #54433	; 0xd4a1
   140c4:	cmp	r8, #0
   140c8:	movt	r0, #1
   140cc:	moveq	r8, r0
   140d0:	mov	r0, r8
   140d4:	bl	11bd4 <strdup@plt>
   140d8:	cmp	r0, #0
   140dc:	beq	14728 <__assert_fail@plt+0x27ac>
   140e0:	movw	r2, #62984	; 0xf608
   140e4:	mov	r1, #0
   140e8:	movt	r2, #2
   140ec:	str	r1, [r2]
   140f0:	movw	r1, #62992	; 0xf610
   140f4:	movt	r1, #2
   140f8:	str	r0, [r1]
   140fc:	mov	r8, r4
   14100:	movw	r4, #54433	; 0xd4a1
   14104:	movt	r4, #1
   14108:	b	1416c <__assert_fail@plt+0x21f0>
   1410c:	ldr	r3, [r7]
   14110:	movw	r1, #53761	; 0xd201
   14114:	mov	r0, #3
   14118:	movt	r1, #1
   1411c:	b	145d8 <__assert_fail@plt+0x265c>
   14120:	movw	r0, #63004	; 0xf61c
   14124:	movw	r4, #54433	; 0xd4a1
   14128:	movt	r0, #2
   1412c:	movt	r4, #1
   14130:	ldr	r0, [r0]
   14134:	cmp	r0, #0
   14138:	beq	1416c <__assert_fail@plt+0x21f0>
   1413c:	bl	11bd4 <strdup@plt>
   14140:	cmp	r0, #0
   14144:	beq	14728 <__assert_fail@plt+0x27ac>
   14148:	movw	r2, #62984	; 0xf608
   1414c:	mov	r1, #0
   14150:	movt	r2, #2
   14154:	str	r1, [r2]
   14158:	movw	r1, #62992	; 0xf610
   1415c:	movt	r1, #2
   14160:	str	r0, [r1]
   14164:	ldr	r0, [sp, #20]
   14168:	ldr	r8, [r0]
   1416c:	movw	r1, #62132	; 0xf2b4
   14170:	mov	r0, r8
   14174:	mov	r2, #7
   14178:	movt	r1, #2
   1417c:	bl	11f28 <strncmp@plt>
   14180:	cmp	r0, #0
   14184:	beq	141ac <__assert_fail@plt+0x2230>
   14188:	cmp	r8, #0
   1418c:	moveq	r8, r4
   14190:	mov	r0, r8
   14194:	bl	11bd4 <strdup@plt>
   14198:	cmp	r0, #0
   1419c:	beq	14728 <__assert_fail@plt+0x27ac>
   141a0:	mov	r1, #0
   141a4:	str	r1, [sl, #64]	; 0x40
   141a8:	b	141e0 <__assert_fail@plt+0x2264>
   141ac:	mov	r0, r8
   141b0:	ldrb	r1, [r0, #7]!
   141b4:	cmp	r1, #43	; 0x2b
   141b8:	bne	141cc <__assert_fail@plt+0x2250>
   141bc:	mov	r0, #2
   141c0:	str	r0, [sl, #64]	; 0x40
   141c4:	add	r0, r8, #8
   141c8:	b	141d4 <__assert_fail@plt+0x2258>
   141cc:	mov	r1, #1
   141d0:	str	r1, [sl, #64]	; 0x40
   141d4:	bl	11bd4 <strdup@plt>
   141d8:	cmp	r0, #0
   141dc:	beq	14728 <__assert_fail@plt+0x27ac>
   141e0:	ldr	r4, [sp, #20]
   141e4:	str	r0, [sl, #12]
   141e8:	movw	r1, #53787	; 0xd21b
   141ec:	movt	r1, #1
   141f0:	ldr	r8, [r4, #4]
   141f4:	mov	r0, r8
   141f8:	bl	11ab4 <strcmp@plt>
   141fc:	cmp	r0, #0
   14200:	beq	14288 <__assert_fail@plt+0x230c>
   14204:	movw	r1, #53794	; 0xd222
   14208:	mov	r0, r8
   1420c:	movt	r1, #1
   14210:	bl	11ab4 <strcmp@plt>
   14214:	cmp	r0, #0
   14218:	beq	14290 <__assert_fail@plt+0x2314>
   1421c:	movw	r1, #53800	; 0xd228
   14220:	mov	r0, r8
   14224:	movt	r1, #1
   14228:	bl	11ab4 <strcmp@plt>
   1422c:	cmp	r0, #0
   14230:	beq	14298 <__assert_fail@plt+0x231c>
   14234:	movw	r1, #53804	; 0xd22c
   14238:	mov	r0, r8
   1423c:	movt	r1, #1
   14240:	bl	11ab4 <strcmp@plt>
   14244:	cmp	r0, #0
   14248:	beq	142a0 <__assert_fail@plt+0x2324>
   1424c:	movw	r1, #53814	; 0xd236
   14250:	mov	r0, r8
   14254:	movt	r1, #1
   14258:	bl	11ab4 <strcmp@plt>
   1425c:	cmp	r0, #0
   14260:	beq	142a8 <__assert_fail@plt+0x232c>
   14264:	ldr	r3, [r7]
   14268:	ldr	r2, [sp, #12]
   1426c:	movw	r1, #53818	; 0xd23a
   14270:	mov	r0, #4
   14274:	movt	r1, #1
   14278:	bl	11e68 <syslog@plt>
   1427c:	ldr	r4, [sp, #20]
   14280:	mvn	r0, #0
   14284:	b	142ac <__assert_fail@plt+0x2330>
   14288:	mov	r0, #1
   1428c:	b	142ac <__assert_fail@plt+0x2330>
   14290:	mov	r0, #2
   14294:	b	142ac <__assert_fail@plt+0x2330>
   14298:	mov	r0, #4
   1429c:	b	142ac <__assert_fail@plt+0x2330>
   142a0:	mov	r0, #5
   142a4:	b	142ac <__assert_fail@plt+0x2330>
   142a8:	mov	r0, #3
   142ac:	str	r0, [sl, #16]
   142b0:	ldr	r0, [r4, #8]
   142b4:	movw	r1, #54433	; 0xd4a1
   142b8:	movt	r1, #1
   142bc:	cmp	r0, #0
   142c0:	moveq	r0, r1
   142c4:	bl	11bd4 <strdup@plt>
   142c8:	cmp	r0, #0
   142cc:	beq	14728 <__assert_fail@plt+0x27ac>
   142d0:	mov	r8, r0
   142d4:	mov	r0, #2
   142d8:	movw	r1, #53403	; 0xd09b
   142dc:	mov	r2, #3
   142e0:	strh	r0, [sl, #68]	; 0x44
   142e4:	mov	r0, #1
   142e8:	str	r8, [sl, #20]
   142ec:	movt	r1, #1
   142f0:	strb	r0, [sl, #70]	; 0x46
   142f4:	mov	r0, r8
   142f8:	bl	11f28 <strncmp@plt>
   142fc:	cmp	r0, #0
   14300:	beq	14320 <__assert_fail@plt+0x23a4>
   14304:	movw	r1, #53630	; 0xd17e
   14308:	mov	r0, r8
   1430c:	mov	r2, #3
   14310:	movt	r1, #1
   14314:	bl	11f28 <strncmp@plt>
   14318:	cmp	r0, #0
   1431c:	bne	1434c <__assert_fail@plt+0x23d0>
   14320:	ldrb	r0, [r8, #3]
   14324:	cmp	r0, #52	; 0x34
   14328:	beq	14344 <__assert_fail@plt+0x23c8>
   1432c:	cmp	r0, #54	; 0x36
   14330:	bne	1434c <__assert_fail@plt+0x23d0>
   14334:	mov	r0, #0
   14338:	strb	r0, [sl, #70]	; 0x46
   1433c:	mov	r0, #10
   14340:	b	14348 <__assert_fail@plt+0x23cc>
   14344:	mov	r0, #2
   14348:	strh	r0, [sl, #68]	; 0x44
   1434c:	ldr	r0, [sp, #20]
   14350:	mov	r1, #46	; 0x2e
   14354:	ldr	r4, [r0, #12]
   14358:	mov	r0, r4
   1435c:	bl	11d48 <strchr@plt>
   14360:	cmp	r0, #0
   14364:	beq	14380 <__assert_fail@plt+0x2404>
   14368:	mov	r8, r0
   1436c:	mov	r0, #0
   14370:	strb	r0, [r8], #1
   14374:	ldr	r0, [sp, #20]
   14378:	ldr	r4, [r0, #12]
   1437c:	b	14384 <__assert_fail@plt+0x2408>
   14380:	mov	r8, #0
   14384:	movw	r1, #53844	; 0xd254
   14388:	mov	r0, r4
   1438c:	movt	r1, #1
   14390:	bl	11ab4 <strcmp@plt>
   14394:	cmp	r0, #0
   14398:	beq	143d8 <__assert_fail@plt+0x245c>
   1439c:	movw	r1, #53842	; 0xd252
   143a0:	mov	r0, r4
   143a4:	movt	r1, #1
   143a8:	bl	11ab4 <strcmp@plt>
   143ac:	cmp	r0, #0
   143b0:	beq	143e0 <__assert_fail@plt+0x2464>
   143b4:	ldr	r3, [r7]
   143b8:	ldr	r2, [sp, #12]
   143bc:	movw	r1, #53849	; 0xd259
   143c0:	mov	r0, #4
   143c4:	movt	r1, #1
   143c8:	bl	11e68 <syslog@plt>
   143cc:	cmp	r8, #0
   143d0:	bne	143f0 <__assert_fail@plt+0x2474>
   143d4:	b	14430 <__assert_fail@plt+0x24b4>
   143d8:	mov	r0, #1
   143dc:	b	143e4 <__assert_fail@plt+0x2468>
   143e0:	mov	r0, #0
   143e4:	str	r0, [sl, #24]
   143e8:	cmp	r8, #0
   143ec:	beq	14430 <__assert_fail@plt+0x24b4>
   143f0:	mov	r0, r8
   143f4:	add	r1, sp, #16
   143f8:	mov	r2, #10
   143fc:	bl	11d24 <strtoul@plt>
   14400:	str	r0, [sl, #28]
   14404:	ldr	r0, [sp, #16]
   14408:	ldrb	r0, [r0]
   1440c:	cmp	r0, #0
   14410:	beq	14430 <__assert_fail@plt+0x24b4>
   14414:	ldr	r3, [r7]
   14418:	ldr	r2, [sp, #12]
   1441c:	movw	r1, #53871	; 0xd26f
   14420:	mov	r0, #4
   14424:	str	r8, [sp]
   14428:	movt	r1, #1
   1442c:	bl	11e68 <syslog@plt>
   14430:	ldr	r0, [sl, #64]	; 0x40
   14434:	sub	r0, r0, #1
   14438:	cmp	r0, #1
   1443c:	bhi	14484 <__assert_fail@plt+0x2508>
   14440:	mov	r0, #0
   14444:	movw	r1, #53403	; 0xd09b
   14448:	mov	r2, #3
   1444c:	str	r0, [sl, #24]
   14450:	movt	r1, #1
   14454:	ldr	r0, [sl, #20]
   14458:	bl	11f28 <strncmp@plt>
   1445c:	cmp	r0, #0
   14460:	beq	14478 <__assert_fail@plt+0x24fc>
   14464:	ldr	r0, [sl, #12]
   14468:	ldr	r3, [r7]
   1446c:	movw	r1, #53899	; 0xd28b
   14470:	movt	r1, #1
   14474:	b	145d0 <__assert_fail@plt+0x2654>
   14478:	ldr	r0, [sl, #16]
   1447c:	cmp	r0, #1
   14480:	bne	145c0 <__assert_fail@plt+0x2644>
   14484:	ldr	r0, [sp, #20]
   14488:	movw	r1, #54433	; 0xd4a1
   1448c:	movt	r1, #1
   14490:	ldr	r0, [r0, #16]
   14494:	cmp	r0, #0
   14498:	moveq	r0, r1
   1449c:	bl	11bd4 <strdup@plt>
   144a0:	cmp	r0, #0
   144a4:	beq	14728 <__assert_fail@plt+0x27ac>
   144a8:	mov	r1, #58	; 0x3a
   144ac:	mov	r8, r0
   144b0:	str	r0, [sl, #36]	; 0x24
   144b4:	bl	11d48 <strchr@plt>
   144b8:	cmp	r0, #0
   144bc:	bne	144d4 <__assert_fail@plt+0x2558>
   144c0:	mov	r0, r8
   144c4:	mov	r1, #46	; 0x2e
   144c8:	bl	11d48 <strchr@plt>
   144cc:	cmp	r0, #0
   144d0:	beq	145e4 <__assert_fail@plt+0x2668>
   144d4:	mov	r4, #0
   144d8:	strb	r4, [r0], #1
   144dc:	bl	11bd4 <strdup@plt>
   144e0:	cmp	r0, #0
   144e4:	beq	14728 <__assert_fail@plt+0x27ac>
   144e8:	str	r0, [sl, #40]	; 0x28
   144ec:	ldr	r0, [sp, #20]
   144f0:	movw	r1, #54433	; 0xd4a1
   144f4:	movt	r1, #1
   144f8:	ldr	r0, [r0, #20]
   144fc:	cmp	r0, #0
   14500:	moveq	r0, r1
   14504:	bl	11bd4 <strdup@plt>
   14508:	cmp	r0, #0
   1450c:	beq	14728 <__assert_fail@plt+0x27ac>
   14510:	movw	r1, #53988	; 0xd2e4
   14514:	str	r0, [sl, #48]	; 0x30
   14518:	movt	r1, #1
   1451c:	bl	11ab4 <strcmp@plt>
   14520:	cmp	r0, #0
   14524:	bne	1471c <__assert_fail@plt+0x27a0>
   14528:	movw	r1, #61940	; 0xf1f4
   1452c:	movt	r1, #2
   14530:	ldr	r0, [r1]
   14534:	cmp	r0, #0
   14538:	beq	145a0 <__assert_fail@plt+0x2624>
   1453c:	mov	r2, r1
   14540:	ldr	r1, [sl, #12]
   14544:	ldr	r3, [sl, #16]
   14548:	str	r7, [sp, #8]
   1454c:	mov	r4, r2
   14550:	ldr	r2, [r4, #4]
   14554:	cmp	r2, r3
   14558:	bne	1458c <__assert_fail@plt+0x2610>
   1455c:	mov	r8, sl
   14560:	mov	r7, r9
   14564:	mov	sl, r1
   14568:	mov	r9, r3
   1456c:	bl	11ab4 <strcmp@plt>
   14570:	mov	r3, r9
   14574:	mov	r9, r7
   14578:	ldr	r7, [sp, #8]
   1457c:	mov	r1, sl
   14580:	mov	sl, r8
   14584:	cmp	r0, #0
   14588:	beq	14610 <__assert_fail@plt+0x2694>
   1458c:	ldr	r0, [r4, #16]!
   14590:	cmp	r0, #0
   14594:	bne	14550 <__assert_fail@plt+0x25d4>
   14598:	mov	r4, #0
   1459c:	b	145a4 <__assert_fail@plt+0x2628>
   145a0:	ldr	r1, [sl, #12]
   145a4:	str	r4, [sl, #44]	; 0x2c
   145a8:	mov	r0, #3
   145ac:	ldr	r3, [r7]
   145b0:	str	r1, [sp]
   145b4:	movw	r1, #53997	; 0xd2ed
   145b8:	movt	r1, #1
   145bc:	b	145d8 <__assert_fail@plt+0x265c>
   145c0:	ldr	r0, [sl, #12]
   145c4:	ldr	r3, [r7]
   145c8:	movw	r1, #53942	; 0xd2b6
   145cc:	movt	r1, #1
   145d0:	str	r0, [sp]
   145d4:	mov	r0, #3
   145d8:	ldr	r2, [sp, #12]
   145dc:	bl	11e68 <syslog@plt>
   145e0:	b	13ee0 <__assert_fail@plt+0x1f64>
   145e4:	movw	r0, #54433	; 0xd4a1
   145e8:	movt	r0, #1
   145ec:	bl	11bd4 <strdup@plt>
   145f0:	cmp	r0, #0
   145f4:	mov	r4, #0
   145f8:	bne	144e8 <__assert_fail@plt+0x256c>
   145fc:	b	14728 <__assert_fail@plt+0x27ac>
   14600:	mov	sl, #0
   14604:	mov	r0, sl
   14608:	sub	sp, fp, #28
   1460c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14610:	ldrsh	r1, [r4, #10]
   14614:	movw	r0, #62416	; 0xf3d0
   14618:	movt	r0, #2
   1461c:	str	r4, [r0, #44]	; 0x2c
   14620:	str	r1, [r0, #24]
   14624:	ldr	r0, [sp, #24]
   14628:	sub	r1, r0, #5
   1462c:	sub	r0, r0, #4
   14630:	str	r1, [sl, #56]	; 0x38
   14634:	mov	r1, #4
   14638:	bl	18048 <argp_parse@@Base+0x19b0>
   1463c:	cmp	r0, #0
   14640:	str	r0, [sl, #52]	; 0x34
   14644:	beq	14740 <__assert_fail@plt+0x27c4>
   14648:	ldr	r1, [sl, #56]	; 0x38
   1464c:	mov	r6, #0
   14650:	mov	r7, #0
   14654:	cmp	r1, #0
   14658:	beq	14704 <__assert_fail@plt+0x2788>
   1465c:	ldr	r2, [sp, #20]
   14660:	mov	r7, #1
   14664:	cmp	r1, #1
   14668:	ldr	r3, [r2, #24]
   1466c:	str	r3, [r0]
   14670:	mov	r0, #0
   14674:	str	r0, [r2, #24]
   14678:	beq	146bc <__assert_fail@plt+0x2740>
   1467c:	mov	r2, #0
   14680:	ldr	r7, [sp, #20]
   14684:	ldr	r3, [sl, #52]	; 0x34
   14688:	add	r7, r7, r2, lsl #2
   1468c:	add	r3, r3, r2, lsl #2
   14690:	ldr	r7, [r7, #28]
   14694:	str	r7, [r3, #4]
   14698:	ldr	r3, [sp, #20]
   1469c:	add	r3, r3, r2, lsl #2
   146a0:	str	r0, [r3, #28]
   146a4:	add	r3, r2, #1
   146a8:	add	r2, r2, #2
   146ac:	cmp	r2, r1
   146b0:	mov	r2, r3
   146b4:	bcc	14680 <__assert_fail@plt+0x2704>
   146b8:	add	r7, r3, #1
   146bc:	cmp	r1, #1
   146c0:	bne	14704 <__assert_fail@plt+0x2788>
   146c4:	ldr	r5, [sl, #48]	; 0x30
   146c8:	mov	r1, #47	; 0x2f
   146cc:	mov	r0, r5
   146d0:	bl	11e38 <strrchr@plt>
   146d4:	cmp	r0, #0
   146d8:	addne	r5, r0, #1
   146dc:	movw	r0, #54433	; 0xd4a1
   146e0:	cmp	r5, #0
   146e4:	movt	r0, #1
   146e8:	moveq	r5, r0
   146ec:	mov	r0, r5
   146f0:	bl	11bd4 <strdup@plt>
   146f4:	cmp	r0, #0
   146f8:	beq	14728 <__assert_fail@plt+0x27ac>
   146fc:	ldr	r1, [sl, #52]	; 0x34
   14700:	str	r0, [r1]
   14704:	ldr	r0, [sl, #52]	; 0x34
   14708:	str	r6, [r0, r7, lsl #2]
   1470c:	ldr	r1, [sp, #20]
   14710:	ldr	r0, [sp, #24]
   14714:	bl	163a4 <__assert_fail@plt+0x4428>
   14718:	b	13e94 <__assert_fail@plt+0x1f18>
   1471c:	mov	r0, #0
   14720:	str	r0, [sl, #44]	; 0x2c
   14724:	b	14624 <__assert_fail@plt+0x26a8>
   14728:	movw	r1, #53207	; 0xcfd7
   1472c:	mov	r0, #3
   14730:	movt	r1, #1
   14734:	bl	11e68 <syslog@plt>
   14738:	mvn	r0, #0
   1473c:	bl	11d18 <exit@plt>
   14740:	ldr	r3, [r7]
   14744:	ldr	r2, [sp, #12]
   14748:	movw	r1, #54033	; 0xd311
   1474c:	mov	r0, #3
   14750:	movt	r1, #1
   14754:	bl	11e68 <syslog@plt>
   14758:	mvn	r0, #0
   1475c:	bl	11d18 <exit@plt>
   14760:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14764:	add	fp, sp, #28
   14768:	sub	sp, sp, #324	; 0x144
   1476c:	movw	r1, #53044	; 0xcf34
   14770:	mov	r4, r0
   14774:	mov	r0, #0
   14778:	str	r0, [sp, #60]	; 0x3c
   1477c:	movt	r1, #1
   14780:	mov	r0, r4
   14784:	bl	11ec8 <fopen64@plt>
   14788:	cmp	r0, #0
   1478c:	beq	14af0 <__assert_fail@plt+0x2b74>
   14790:	add	r2, sp, #60	; 0x3c
   14794:	mov	r1, r4
   14798:	mov	r5, r0
   1479c:	bl	13e5c <__assert_fail@plt+0x1ee0>
   147a0:	cmp	r0, #0
   147a4:	beq	148c4 <__assert_fail@plt+0x2948>
   147a8:	movw	r9, #54056	; 0xd328
   147ac:	movw	sl, #62992	; 0xf610
   147b0:	mov	r6, r0
   147b4:	add	r7, sp, #60	; 0x3c
   147b8:	movt	r9, #1
   147bc:	movt	sl, #2
   147c0:	b	147e8 <__assert_fail@plt+0x286c>
   147c4:	bl	11f64 <getgrnam@plt>
   147c8:	cmp	r0, #0
   147cc:	bne	1480c <__assert_fail@plt+0x2890>
   147d0:	ldr	r0, [r6, #40]	; 0x28
   147d4:	ldr	r2, [r6, #12]
   147d8:	ldr	r3, [r6, #20]
   147dc:	movw	r1, #54098	; 0xd352
   147e0:	movt	r1, #1
   147e4:	b	14848 <__assert_fail@plt+0x28cc>
   147e8:	ldr	r0, [r6, #36]	; 0x24
   147ec:	bl	11aa8 <getpwnam@plt>
   147f0:	cmp	r0, #0
   147f4:	beq	14838 <__assert_fail@plt+0x28bc>
   147f8:	ldr	r0, [r6, #40]	; 0x28
   147fc:	cmp	r0, #0
   14800:	ldrbne	r1, [r0]
   14804:	cmpne	r1, #0
   14808:	bne	147c4 <__assert_fail@plt+0x2848>
   1480c:	ldr	r0, [r6, #64]	; 0x40
   14810:	sub	r0, r0, #1
   14814:	cmp	r0, #1
   14818:	bhi	14858 <__assert_fail@plt+0x28dc>
   1481c:	mov	r0, #1
   14820:	strh	r0, [r6, #32]
   14824:	mvn	r0, #0
   14828:	str	r0, [r6, #60]	; 0x3c
   1482c:	mov	r0, r6
   14830:	bl	133c8 <__assert_fail@plt+0x144c>
   14834:	b	14860 <__assert_fail@plt+0x28e4>
   14838:	ldr	r0, [r6, #36]	; 0x24
   1483c:	ldr	r2, [r6, #12]
   14840:	ldr	r3, [r6, #20]
   14844:	mov	r1, r9
   14848:	str	r0, [sp]
   1484c:	mov	r0, #3
   14850:	bl	11e68 <syslog@plt>
   14854:	b	148a8 <__assert_fail@plt+0x292c>
   14858:	mov	r0, r6
   1485c:	bl	13ab4 <__assert_fail@plt+0x1b38>
   14860:	ldr	r0, [r6, #8]
   14864:	ldr	r8, [sl]
   14868:	bl	17968 <argp_parse@@Base+0x12d0>
   1486c:	cmp	r8, #0
   14870:	bne	148a8 <__assert_fail@plt+0x292c>
   14874:	ldr	r0, [r6, #12]
   14878:	bl	17968 <argp_parse@@Base+0x12d0>
   1487c:	ldr	r0, [r6, #20]
   14880:	bl	17968 <argp_parse@@Base+0x12d0>
   14884:	ldr	r0, [r6, #36]	; 0x24
   14888:	bl	17968 <argp_parse@@Base+0x12d0>
   1488c:	ldr	r0, [r6, #40]	; 0x28
   14890:	bl	17968 <argp_parse@@Base+0x12d0>
   14894:	ldr	r0, [r6, #48]	; 0x30
   14898:	bl	17968 <argp_parse@@Base+0x12d0>
   1489c:	ldr	r1, [r6, #52]	; 0x34
   148a0:	ldr	r0, [r6, #56]	; 0x38
   148a4:	bl	163a4 <__assert_fail@plt+0x4428>
   148a8:	mov	r0, r5
   148ac:	mov	r1, r4
   148b0:	mov	r2, r7
   148b4:	bl	13e5c <__assert_fail@plt+0x1ee0>
   148b8:	mov	r6, r0
   148bc:	cmp	r0, #0
   148c0:	bne	147e8 <__assert_fail@plt+0x286c>
   148c4:	mov	r0, r5
   148c8:	bl	11df0 <fclose@plt>
   148cc:	sub	r4, fp, #160	; 0xa0
   148d0:	mov	r0, r4
   148d4:	bl	11e14 <sigemptyset@plt>
   148d8:	mov	r0, r4
   148dc:	mov	r1, #17
   148e0:	bl	11cc4 <sigaddset@plt>
   148e4:	mov	r0, r4
   148e8:	mov	r1, #1
   148ec:	mov	r6, #1
   148f0:	bl	11cc4 <sigaddset@plt>
   148f4:	mov	r0, r4
   148f8:	mov	r1, #14
   148fc:	bl	11cc4 <sigaddset@plt>
   14900:	add	r2, sp, #64	; 0x40
   14904:	mov	r0, #0
   14908:	mov	r1, r4
   1490c:	mov	r7, #0
   14910:	bl	11b14 <sigprocmask@plt>
   14914:	movw	r5, #63000	; 0xf618
   14918:	movt	r5, #2
   1491c:	ldr	r4, [r5]
   14920:	cmp	r4, #0
   14924:	beq	14ad8 <__assert_fail@plt+0x2b5c>
   14928:	movw	sl, #62968	; 0xf5f8
   1492c:	movw	r8, #62836	; 0xf574
   14930:	movw	r9, #62400	; 0xf3c0
   14934:	movt	sl, #2
   14938:	movt	r8, #2
   1493c:	movt	r9, #2
   14940:	b	14a20 <__assert_fail@plt+0x2aa4>
   14944:	movw	r0, #62384	; 0xf3b0
   14948:	movt	r0, #2
   1494c:	ldr	r3, [r0]
   14950:	ldm	r4, {r2, r7}
   14954:	ldr	r0, [r4, #64]	; 0x40
   14958:	sub	r1, r0, #1
   1495c:	str	r2, [sp, #56]	; 0x38
   14960:	str	r3, [sp, #52]	; 0x34
   14964:	str	r7, [sp, #48]	; 0x30
   14968:	cmp	r1, #1
   1496c:	bhi	14990 <__assert_fail@plt+0x2a14>
   14970:	movw	r1, #54150	; 0xd386
   14974:	cmp	r0, #2
   14978:	movw	r0, #53312	; 0xd040
   1497c:	movt	r1, #1
   14980:	movt	r0, #1
   14984:	b	149a0 <__assert_fail@plt+0x2a24>
   14988:	add	r5, r4, #220	; 0xdc
   1498c:	b	14acc <__assert_fail@plt+0x2b50>
   14990:	ldr	r1, [r4, #8]
   14994:	movw	r0, #53323	; 0xd04b
   14998:	movt	r0, #1
   1499c:	cmp	r1, #0
   149a0:	moveq	r1, r0
   149a4:	ldr	r0, [r4, #40]	; 0x28
   149a8:	movw	lr, #53325	; 0xd04d
   149ac:	ldr	r6, [r4, #12]
   149b0:	ldr	ip, [r4, #20]
   149b4:	ldr	r7, [r4, #36]	; 0x24
   149b8:	ldr	r2, [r4, #24]
   149bc:	ldr	r3, [r4, #28]
   149c0:	movt	lr, #1
   149c4:	str	r0, [sp, #44]	; 0x2c
   149c8:	ldr	r0, [r4, #44]	; 0x2c
   149cc:	cmp	r0, #0
   149d0:	ldrne	lr, [r0]
   149d4:	ldr	r0, [r4, #48]	; 0x30
   149d8:	str	r0, [sp, #36]	; 0x24
   149dc:	movw	r0, #54141	; 0xd37d
   149e0:	str	lr, [sp, #32]
   149e4:	movt	r0, #1
   149e8:	stm	sp, {r0, r1, r6, ip}
   149ec:	add	r0, sp, #16
   149f0:	movw	r1, #53229	; 0xcfed
   149f4:	stm	r0, {r2, r3, r7}
   149f8:	movt	r1, #1
   149fc:	ldr	r0, [sp, #44]	; 0x2c
   14a00:	ldr	r2, [sp, #56]	; 0x38
   14a04:	ldr	r3, [sp, #48]	; 0x30
   14a08:	str	r0, [sp, #28]
   14a0c:	ldr	r0, [sp, #52]	; 0x34
   14a10:	bl	11d60 <fprintf@plt>
   14a14:	mov	r7, #0
   14a18:	mov	r6, #1
   14a1c:	b	14a88 <__assert_fail@plt+0x2b0c>
   14a20:	ldrh	r0, [r4, #32]
   14a24:	cmp	r0, #0
   14a28:	bne	14988 <__assert_fail@plt+0x2a0c>
   14a2c:	ldr	r0, [r4, #220]	; 0xdc
   14a30:	str	r0, [r5]
   14a34:	ldr	r0, [r4, #60]	; 0x3c
   14a38:	cmp	r0, #0
   14a3c:	blt	14a7c <__assert_fail@plt+0x2b00>
   14a40:	ldr	r1, [sl]
   14a44:	and	r3, r0, #31
   14a48:	sub	r1, r1, #1
   14a4c:	str	r1, [sl]
   14a50:	lsr	r1, r0, #5
   14a54:	ldr	r2, [r8, r1, lsl #2]
   14a58:	bic	r2, r2, r6, lsl r3
   14a5c:	str	r2, [r8, r1, lsl #2]
   14a60:	bl	11f4c <close@plt>
   14a64:	mvn	r0, #0
   14a68:	str	r0, [r4, #60]	; 0x3c
   14a6c:	str	r7, [r4, #208]	; 0xd0
   14a70:	ldr	r0, [r4, #24]
   14a74:	cmp	r0, #2
   14a78:	strge	r6, [r4, #24]
   14a7c:	ldrb	r0, [r9]
   14a80:	cmp	r0, #0
   14a84:	bne	14944 <__assert_fail@plt+0x29c8>
   14a88:	ldr	r0, [r4, #8]
   14a8c:	bl	17968 <argp_parse@@Base+0x12d0>
   14a90:	ldr	r0, [r4, #12]
   14a94:	bl	17968 <argp_parse@@Base+0x12d0>
   14a98:	ldr	r0, [r4, #20]
   14a9c:	bl	17968 <argp_parse@@Base+0x12d0>
   14aa0:	ldr	r0, [r4, #36]	; 0x24
   14aa4:	bl	17968 <argp_parse@@Base+0x12d0>
   14aa8:	ldr	r0, [r4, #40]	; 0x28
   14aac:	bl	17968 <argp_parse@@Base+0x12d0>
   14ab0:	ldr	r0, [r4, #48]	; 0x30
   14ab4:	bl	17968 <argp_parse@@Base+0x12d0>
   14ab8:	ldr	r1, [r4, #52]	; 0x34
   14abc:	ldr	r0, [r4, #56]	; 0x38
   14ac0:	bl	163a4 <__assert_fail@plt+0x4428>
   14ac4:	mov	r0, r4
   14ac8:	bl	17968 <argp_parse@@Base+0x12d0>
   14acc:	ldr	r4, [r5]
   14ad0:	cmp	r4, #0
   14ad4:	bne	14a20 <__assert_fail@plt+0x2aa4>
   14ad8:	add	r1, sp, #64	; 0x40
   14adc:	mov	r0, #2
   14ae0:	mov	r2, #0
   14ae4:	bl	11b14 <sigprocmask@plt>
   14ae8:	sub	sp, fp, #28
   14aec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14af0:	movw	r1, #53136	; 0xcf90
   14af4:	mov	r0, #3
   14af8:	mov	r2, r4
   14afc:	movt	r1, #1
   14b00:	bl	11e68 <syslog@plt>
   14b04:	sub	sp, fp, #28
   14b08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b0c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b10:	add	fp, sp, #24
   14b14:	sub	sp, sp, #224	; 0xe0
   14b18:	movw	r0, #63000	; 0xf618
   14b1c:	movt	r0, #2
   14b20:	ldr	r5, [r0]
   14b24:	cmp	r5, #0
   14b28:	beq	14cec <__assert_fail@plt+0x2d70>
   14b2c:	movw	r4, #54150	; 0xd386
   14b30:	mov	r6, #0
   14b34:	mov	r7, #0
   14b38:	movt	r4, #1
   14b3c:	ldrh	r0, [r5, #32]
   14b40:	cmp	r0, #0
   14b44:	beq	14b88 <__assert_fail@plt+0x2c0c>
   14b48:	ldr	r0, [r5, #64]	; 0x40
   14b4c:	sub	r0, r0, #1
   14b50:	cmp	r0, #1
   14b54:	bhi	14b64 <__assert_fail@plt+0x2be8>
   14b58:	mov	r7, #1
   14b5c:	cmp	r6, #0
   14b60:	bne	14cec <__assert_fail@plt+0x2d70>
   14b64:	ldr	r0, [r5, #12]
   14b68:	mov	r1, r4
   14b6c:	bl	11ab4 <strcmp@plt>
   14b70:	cmp	r0, #0
   14b74:	bne	14b88 <__assert_fail@plt+0x2c0c>
   14b78:	cmp	r7, #0
   14b7c:	bne	14cec <__assert_fail@plt+0x2d70>
   14b80:	mov	r6, #1
   14b84:	mov	r7, #0
   14b88:	ldr	r5, [r5, #220]	; 0xdc
   14b8c:	cmp	r5, #0
   14b90:	bne	14b3c <__assert_fail@plt+0x2bc0>
   14b94:	cmp	r7, #0
   14b98:	beq	14cec <__assert_fail@plt+0x2d70>
   14b9c:	cmp	r6, #0
   14ba0:	bne	14cec <__assert_fail@plt+0x2d70>
   14ba4:	mov	r0, sp
   14ba8:	mov	r1, #0
   14bac:	mov	r2, #220	; 0xdc
   14bb0:	add	r0, r0, #4
   14bb4:	bl	11da8 <memset@plt>
   14bb8:	movw	r0, #54146	; 0xd382
   14bbc:	movt	r0, #1
   14bc0:	str	r0, [sp]
   14bc4:	movw	r0, #54150	; 0xd386
   14bc8:	movt	r0, #1
   14bcc:	bl	11bd4 <strdup@plt>
   14bd0:	cmp	r0, #0
   14bd4:	beq	14dac <__assert_fail@plt+0x2e30>
   14bd8:	mov	r4, r0
   14bdc:	mov	r0, #1
   14be0:	str	r0, [sp, #16]
   14be4:	str	r4, [sp, #12]
   14be8:	strh	r0, [sp, #32]
   14bec:	movw	r0, #54157	; 0xd38d
   14bf0:	movt	r0, #1
   14bf4:	bl	11bd4 <strdup@plt>
   14bf8:	cmp	r0, #0
   14bfc:	beq	14dac <__assert_fail@plt+0x2e30>
   14c00:	mov	r5, r0
   14c04:	str	r0, [sp, #36]	; 0x24
   14c08:	movw	r0, #54433	; 0xd4a1
   14c0c:	movt	r0, #1
   14c10:	bl	11bd4 <strdup@plt>
   14c14:	cmp	r0, #0
   14c18:	beq	14dac <__assert_fail@plt+0x2e30>
   14c1c:	movw	r7, #61940	; 0xf1f4
   14c20:	mov	r6, r0
   14c24:	str	r0, [sp, #40]	; 0x28
   14c28:	movt	r7, #2
   14c2c:	ldr	r0, [r7]
   14c30:	cmp	r0, #0
   14c34:	bne	14c48 <__assert_fail@plt+0x2ccc>
   14c38:	b	14cf4 <__assert_fail@plt+0x2d78>
   14c3c:	ldr	r0, [r7, #16]!
   14c40:	cmp	r0, #0
   14c44:	beq	14cf4 <__assert_fail@plt+0x2d78>
   14c48:	ldr	r1, [r7, #4]
   14c4c:	cmp	r1, #1
   14c50:	bne	14c3c <__assert_fail@plt+0x2cc0>
   14c54:	mov	r1, r4
   14c58:	bl	11ab4 <strcmp@plt>
   14c5c:	cmp	r0, #0
   14c60:	bne	14c3c <__assert_fail@plt+0x2cc0>
   14c64:	ldrsh	r0, [r7, #10]
   14c68:	str	r7, [sp, #44]	; 0x2c
   14c6c:	str	r0, [sp, #24]
   14c70:	movw	r0, #53988	; 0xd2e4
   14c74:	movt	r0, #1
   14c78:	bl	11bd4 <strdup@plt>
   14c7c:	cmp	r0, #0
   14c80:	beq	14dac <__assert_fail@plt+0x2e30>
   14c84:	mvn	r1, #0
   14c88:	str	r1, [sp, #60]	; 0x3c
   14c8c:	str	r0, [sp, #48]	; 0x30
   14c90:	mov	r0, #0
   14c94:	str	r0, [sp, #64]	; 0x40
   14c98:	movw	r0, #54209	; 0xd3c1
   14c9c:	movt	r0, #1
   14ca0:	bl	11bd4 <strdup@plt>
   14ca4:	cmp	r0, #0
   14ca8:	beq	14dac <__assert_fail@plt+0x2e30>
   14cac:	mov	r1, #10
   14cb0:	strh	r1, [sp, #68]	; 0x44
   14cb4:	str	r0, [sp, #20]
   14cb8:	mov	r0, #1
   14cbc:	strb	r0, [sp, #70]	; 0x46
   14cc0:	movw	r0, #62400	; 0xf3c0
   14cc4:	movt	r0, #2
   14cc8:	ldrb	r0, [r0]
   14ccc:	cmp	r0, #0
   14cd0:	bne	14d88 <__assert_fail@plt+0x2e0c>
   14cd4:	movw	r1, #54246	; 0xd3e6
   14cd8:	mov	r0, #6
   14cdc:	movt	r1, #1
   14ce0:	bl	11e68 <syslog@plt>
   14ce4:	mov	r0, sp
   14ce8:	bl	13ab4 <__assert_fail@plt+0x1b38>
   14cec:	sub	sp, fp, #24
   14cf0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14cf4:	mov	r0, #0
   14cf8:	str	r0, [sp, #44]	; 0x2c
   14cfc:	mov	r0, #0
   14d00:	bl	17968 <argp_parse@@Base+0x12d0>
   14d04:	mov	r0, r4
   14d08:	bl	17968 <argp_parse@@Base+0x12d0>
   14d0c:	mov	r0, #0
   14d10:	bl	17968 <argp_parse@@Base+0x12d0>
   14d14:	mov	r0, r5
   14d18:	bl	17968 <argp_parse@@Base+0x12d0>
   14d1c:	mov	r0, r6
   14d20:	bl	17968 <argp_parse@@Base+0x12d0>
   14d24:	mov	r0, #0
   14d28:	bl	17968 <argp_parse@@Base+0x12d0>
   14d2c:	mov	r0, #0
   14d30:	mov	r1, #0
   14d34:	bl	163a4 <__assert_fail@plt+0x4428>
   14d38:	movw	r0, #62400	; 0xf3c0
   14d3c:	movt	r0, #2
   14d40:	ldrb	r0, [r0]
   14d44:	cmp	r0, #0
   14d48:	bne	14d64 <__assert_fail@plt+0x2de8>
   14d4c:	movw	r1, #54162	; 0xd392
   14d50:	mov	r0, #3
   14d54:	movt	r1, #1
   14d58:	bl	11e68 <syslog@plt>
   14d5c:	sub	sp, fp, #24
   14d60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14d64:	movw	r0, #62384	; 0xf3b0
   14d68:	mov	r1, #46	; 0x2e
   14d6c:	mov	r2, #1
   14d70:	movt	r0, #2
   14d74:	ldr	r3, [r0]
   14d78:	movw	r0, #54162	; 0xd392
   14d7c:	movt	r0, #1
   14d80:	bl	11c58 <fwrite@plt>
   14d84:	b	14d4c <__assert_fail@plt+0x2dd0>
   14d88:	movw	r0, #62384	; 0xf3b0
   14d8c:	mov	r1, #31
   14d90:	mov	r2, #1
   14d94:	movt	r0, #2
   14d98:	ldr	r3, [r0]
   14d9c:	movw	r0, #54214	; 0xd3c6
   14da0:	movt	r0, #1
   14da4:	bl	11c58 <fwrite@plt>
   14da8:	b	14cd4 <__assert_fail@plt+0x2d58>
   14dac:	movw	r1, #53207	; 0xcfd7
   14db0:	mov	r0, #3
   14db4:	movt	r1, #1
   14db8:	bl	11e68 <syslog@plt>
   14dbc:	mvn	r0, #0
   14dc0:	bl	11d18 <exit@plt>
   14dc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dc8:	add	fp, sp, #28
   14dcc:	sub	sp, sp, #220	; 0xdc
   14dd0:	mov	r9, r0
   14dd4:	movw	r0, #63000	; 0xf618
   14dd8:	movt	r0, #2
   14ddc:	ldr	r0, [r0]
   14de0:	cmp	r0, #0
   14de4:	beq	14dfc <__assert_fail@plt+0x2e80>
   14de8:	mov	r1, #0
   14dec:	strh	r1, [r0, #32]
   14df0:	ldr	r0, [r0, #220]	; 0xdc
   14df4:	cmp	r0, #0
   14df8:	bne	14dec <__assert_fail@plt+0x2e70>
   14dfc:	movw	sl, #62996	; 0xf614
   14e00:	movt	sl, #2
   14e04:	ldr	r0, [sl]
   14e08:	ldr	r1, [r0]
   14e0c:	cmp	r1, #0
   14e10:	beq	14fb4 <__assert_fail@plt+0x3038>
   14e14:	movw	r7, #53136	; 0xcf90
   14e18:	mov	r4, #0
   14e1c:	add	r5, sp, #8
   14e20:	str	r9, [sp, #4]
   14e24:	movt	r7, #1
   14e28:	b	14f70 <__assert_fail@plt+0x2ff4>
   14e2c:	ldr	r0, [sp, #24]
   14e30:	and	r0, r0, #61440	; 0xf000
   14e34:	cmp	r0, #32768	; 0x8000
   14e38:	beq	14f24 <__assert_fail@plt+0x2fa8>
   14e3c:	cmp	r0, #16384	; 0x4000
   14e40:	bne	14fa0 <__assert_fail@plt+0x3024>
   14e44:	ldr	r0, [sl]
   14e48:	ldr	r0, [r0, r4, lsl #2]
   14e4c:	bl	11c88 <opendir@plt>
   14e50:	cmp	r0, #0
   14e54:	beq	14fa0 <__assert_fail@plt+0x3024>
   14e58:	mov	r6, r0
   14e5c:	bl	11e8c <readdir64@plt>
   14e60:	cmp	r0, #0
   14e64:	beq	14f08 <__assert_fail@plt+0x2f8c>
   14e68:	mov	r7, r0
   14e6c:	ldr	r0, [sl]
   14e70:	ldr	r0, [r0, r4, lsl #2]
   14e74:	bl	11d30 <strlen@plt>
   14e78:	add	r9, r7, #19
   14e7c:	mov	r5, r0
   14e80:	mov	r0, r9
   14e84:	bl	11d30 <strlen@plt>
   14e88:	add	r0, r5, r0
   14e8c:	mov	r1, #1
   14e90:	add	r0, r0, #2
   14e94:	bl	18048 <argp_parse@@Base+0x19b0>
   14e98:	cmp	r0, #0
   14e9c:	beq	14ef4 <__assert_fail@plt+0x2f78>
   14ea0:	mov	r8, r0
   14ea4:	ldr	r0, [sl]
   14ea8:	movw	r1, #54277	; 0xd405
   14eac:	mov	r3, r9
   14eb0:	movt	r1, #1
   14eb4:	ldr	r2, [r0, r4, lsl #2]
   14eb8:	mov	r0, r8
   14ebc:	bl	11e80 <sprintf@plt>
   14ec0:	mov	r0, #3
   14ec4:	mov	r1, r8
   14ec8:	add	r2, sp, #112	; 0x70
   14ecc:	bl	11f10 <__xstat64@plt>
   14ed0:	cmp	r0, #0
   14ed4:	bne	14eec <__assert_fail@plt+0x2f70>
   14ed8:	ldr	r0, [sp, #128]	; 0x80
   14edc:	and	r0, r0, #61440	; 0xf000
   14ee0:	cmp	r0, #32768	; 0x8000
   14ee4:	moveq	r0, r8
   14ee8:	bleq	14760 <__assert_fail@plt+0x27e4>
   14eec:	mov	r0, r8
   14ef0:	bl	17968 <argp_parse@@Base+0x12d0>
   14ef4:	mov	r0, r6
   14ef8:	bl	11e8c <readdir64@plt>
   14efc:	mov	r7, r0
   14f00:	cmp	r0, #0
   14f04:	bne	14e6c <__assert_fail@plt+0x2ef0>
   14f08:	mov	r0, r6
   14f0c:	bl	11f58 <closedir@plt>
   14f10:	ldr	r9, [sp, #4]
   14f14:	movw	r7, #53136	; 0xcf90
   14f18:	add	r5, sp, #8
   14f1c:	movt	r7, #1
   14f20:	b	14fa0 <__assert_fail@plt+0x3024>
   14f24:	ldr	r0, [sl]
   14f28:	ldr	r0, [r0, r4, lsl #2]
   14f2c:	bl	14760 <__assert_fail@plt+0x27e4>
   14f30:	b	14fa0 <__assert_fail@plt+0x3024>
   14f34:	ldr	r0, [sl]
   14f38:	ldr	r8, [r0, r4, lsl #2]
   14f3c:	movw	r0, #62384	; 0xf3b0
   14f40:	movt	r0, #2
   14f44:	ldr	r6, [r0]
   14f48:	bl	11d78 <__errno_location@plt>
   14f4c:	ldr	r0, [r0]
   14f50:	bl	11cdc <strerror@plt>
   14f54:	movw	r1, #54283	; 0xd40b
   14f58:	mov	r3, r0
   14f5c:	mov	r0, r6
   14f60:	mov	r2, r8
   14f64:	movt	r1, #1
   14f68:	bl	11d60 <fprintf@plt>
   14f6c:	b	14fa0 <__assert_fail@plt+0x3024>
   14f70:	mov	r0, #3
   14f74:	mov	r2, r5
   14f78:	bl	11f10 <__xstat64@plt>
   14f7c:	cmp	r0, #0
   14f80:	beq	14e2c <__assert_fail@plt+0x2eb0>
   14f84:	cmp	r9, #0
   14f88:	beq	14f34 <__assert_fail@plt+0x2fb8>
   14f8c:	ldr	r0, [sl]
   14f90:	mov	r1, r7
   14f94:	ldr	r2, [r0, r4, lsl #2]
   14f98:	mov	r0, #3
   14f9c:	bl	11e68 <syslog@plt>
   14fa0:	ldr	r0, [sl]
   14fa4:	add	r4, r4, #1
   14fa8:	ldr	r1, [r0, r4, lsl #2]
   14fac:	cmp	r1, #0
   14fb0:	bne	14f70 <__assert_fail@plt+0x2ff4>
   14fb4:	movw	r4, #62404	; 0xf3c4
   14fb8:	movt	r4, #2
   14fbc:	ldr	r0, [r4]
   14fc0:	bl	17968 <argp_parse@@Base+0x12d0>
   14fc4:	movw	r0, #62408	; 0xf3c8
   14fc8:	mov	r1, #0
   14fcc:	movt	r0, #2
   14fd0:	str	r1, [r4]
   14fd4:	str	r1, [r0]
   14fd8:	bl	14b0c <__assert_fail@plt+0x2b90>
   14fdc:	sub	sp, fp, #28
   14fe0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14fe4:	push	{r4, r5, r6, sl, fp, lr}
   14fe8:	add	fp, sp, #16
   14fec:	sub	sp, sp, #304	; 0x130
   14ff0:	mov	r5, r0
   14ff4:	movw	r0, #62976	; 0xf600
   14ff8:	mov	r3, r1
   14ffc:	sub	r1, fp, #148	; 0x94
   15000:	sub	r2, fp, #20
   15004:	movt	r0, #2
   15008:	ldr	r0, [r0]
   1500c:	ldr	r4, [r0]
   15010:	mov	r0, #128	; 0x80
   15014:	str	r0, [fp, #-20]	; 0xffffffec
   15018:	mov	r0, r3
   1501c:	bl	11ee0 <getpeername@plt>
   15020:	cmp	r0, #0
   15024:	bne	1505c <__assert_fail@plt+0x30e0>
   15028:	mov	r1, #0
   1502c:	mov	r0, #1
   15030:	add	r6, sp, #12
   15034:	mov	r3, #80	; 0x50
   15038:	str	r0, [sp, #8]
   1503c:	str	r1, [sp]
   15040:	str	r1, [sp, #4]
   15044:	sub	r0, fp, #148	; 0x94
   15048:	mov	r1, #128	; 0x80
   1504c:	mov	r2, r6
   15050:	bl	11e2c <getnameinfo@plt>
   15054:	cmp	r0, #0
   15058:	beq	150c4 <__assert_fail@plt+0x3148>
   1505c:	movw	r2, #57714	; 0xe172
   15060:	add	r0, sp, #92	; 0x5c
   15064:	movt	r2, #1
   15068:	mov	r1, #80	; 0x50
   1506c:	mov	r3, r5
   15070:	bl	11d84 <snprintf@plt>
   15074:	movw	r5, #62980	; 0xf604
   15078:	add	r1, sp, #92	; 0x5c
   1507c:	movt	r5, #2
   15080:	ldr	r0, [r5]
   15084:	sub	r2, r0, r4
   15088:	mov	r0, r4
   1508c:	bl	11db4 <strncpy@plt>
   15090:	mov	r0, r4
   15094:	bl	11d30 <strlen@plt>
   15098:	ldr	r1, [r5]
   1509c:	add	r0, r4, r0
   150a0:	cmp	r0, r1
   150a4:	bcs	150bc <__assert_fail@plt+0x3140>
   150a8:	mov	r1, #32
   150ac:	strb	r1, [r0], #1
   150b0:	ldr	r2, [r5]
   150b4:	cmp	r0, r2
   150b8:	bcc	150ac <__assert_fail@plt+0x3130>
   150bc:	sub	sp, fp, #16
   150c0:	pop	{r4, r5, r6, sl, fp, pc}
   150c4:	movw	r2, #54298	; 0xd41a
   150c8:	str	r6, [sp]
   150cc:	add	r0, sp, #92	; 0x5c
   150d0:	movt	r2, #1
   150d4:	b	15068 <__assert_fail@plt+0x30ec>
   150d8:	push	{r4, r5, fp, lr}
   150dc:	add	fp, sp, #8
   150e0:	movw	r4, #62964	; 0xf5f4
   150e4:	movw	r0, #62704	; 0xf4f0
   150e8:	mov	r5, #0
   150ec:	movt	r4, #2
   150f0:	movt	r0, #2
   150f4:	str	r0, [r4]
   150f8:	bl	11d00 <__ctype_b_loc@plt>
   150fc:	mov	r1, #0
   15100:	ldr	r2, [r0]
   15104:	add	r2, r2, r5
   15108:	add	r5, r5, #2
   1510c:	ldrb	r2, [r2, #1]
   15110:	tst	r2, #64	; 0x40
   15114:	ldrne	r2, [r4]
   15118:	addne	r3, r2, #1
   1511c:	strne	r3, [r4]
   15120:	strbne	r1, [r2]
   15124:	add	r1, r1, #1
   15128:	cmp	r1, #129	; 0x81
   1512c:	popeq	{r4, r5, fp, pc}
   15130:	b	15100 <__assert_fail@plt+0x3184>
   15134:	push	{r4, sl, fp, lr}
   15138:	add	fp, sp, #8
   1513c:	sub	sp, sp, #8
   15140:	mov	r0, sp
   15144:	mov	r1, #0
   15148:	mov	r4, #0
   1514c:	bl	11c70 <gettimeofday@plt>
   15150:	cmn	r0, #1
   15154:	ble	15170 <__assert_fail@plt+0x31f4>
   15158:	ldr	r0, [sp]
   1515c:	movw	r1, #32384	; 0x7e80
   15160:	movt	r1, #33706	; 0x83aa
   15164:	add	r0, r0, r1
   15168:	rev	r4, r0
   1516c:	b	15184 <__assert_fail@plt+0x3208>
   15170:	movw	r0, #62400	; 0xf3c0
   15174:	movt	r0, #2
   15178:	ldrb	r0, [r0]
   1517c:	cmp	r0, #0
   15180:	bne	15190 <__assert_fail@plt+0x3214>
   15184:	mov	r0, r4
   15188:	sub	sp, fp, #8
   1518c:	pop	{r4, sl, fp, pc}
   15190:	movw	r0, #62384	; 0xf3b0
   15194:	mov	r1, #26
   15198:	mov	r2, #1
   1519c:	movt	r0, #2
   151a0:	ldr	r3, [r0]
   151a4:	movw	r0, #54307	; 0xd423
   151a8:	movt	r0, #1
   151ac:	bl	11c58 <fwrite@plt>
   151b0:	b	15184 <__assert_fail@plt+0x3208>
   151b4:	push	{r4, r5, r6, sl, fp, lr}
   151b8:	add	fp, sp, #16
   151bc:	sub	sp, sp, #344	; 0x158
   151c0:	mov	r6, r0
   151c4:	mov	r0, #128	; 0x80
   151c8:	mov	r5, r1
   151cc:	movw	r1, #54440	; 0xd4a8
   151d0:	mov	r4, r2
   151d4:	mov	r2, #1
   151d8:	str	r0, [sp, #12]
   151dc:	movw	r0, #54434	; 0xd4a2
   151e0:	movt	r1, #1
   151e4:	movt	r0, #1
   151e8:	bl	11d54 <setenv@plt>
   151ec:	movw	r0, #54444	; 0xd4ac
   151f0:	movt	r0, #1
   151f4:	bl	11f1c <unsetenv@plt>
   151f8:	movw	r0, #54455	; 0xd4b7
   151fc:	movt	r0, #1
   15200:	bl	11f1c <unsetenv@plt>
   15204:	movw	r0, #54468	; 0xd4c4
   15208:	movt	r0, #1
   1520c:	bl	11f1c <unsetenv@plt>
   15210:	movw	r0, #54481	; 0xd4d1
   15214:	movt	r0, #1
   15218:	bl	11f1c <unsetenv@plt>
   1521c:	movw	r0, #54493	; 0xd4dd
   15220:	movt	r0, #1
   15224:	bl	11f1c <unsetenv@plt>
   15228:	movw	r0, #54507	; 0xd4eb
   1522c:	movt	r0, #1
   15230:	bl	11f1c <unsetenv@plt>
   15234:	add	r1, sp, #16
   15238:	add	r2, sp, #12
   1523c:	mov	r0, r6
   15240:	bl	11ea4 <getsockname@plt>
   15244:	cmn	r0, #1
   15248:	ble	1529c <__assert_fail@plt+0x3320>
   1524c:	ldr	r1, [sp, #12]
   15250:	mov	r0, #3
   15254:	mov	r2, #16
   15258:	sub	r3, fp, #32
   1525c:	str	r3, [sp]
   15260:	str	r2, [sp, #4]
   15264:	str	r0, [sp, #8]
   15268:	add	r0, sp, #16
   1526c:	add	r2, sp, #144	; 0x90
   15270:	mov	r3, #184	; 0xb8
   15274:	bl	11e2c <getnameinfo@plt>
   15278:	cmp	r0, #0
   1527c:	beq	152b0 <__assert_fail@plt+0x3334>
   15280:	bl	11b44 <gai_strerror@plt>
   15284:	movw	r1, #54615	; 0xd557
   15288:	mov	r2, r0
   1528c:	mov	r0, #4
   15290:	movt	r1, #1
   15294:	bl	11e68 <syslog@plt>
   15298:	b	1533c <__assert_fail@plt+0x33c0>
   1529c:	movw	r1, #54521	; 0xd4f9
   152a0:	movt	r1, #1
   152a4:	mov	r0, #4
   152a8:	bl	11e68 <syslog@plt>
   152ac:	b	153b4 <__assert_fail@plt+0x3438>
   152b0:	movw	r0, #54444	; 0xd4ac
   152b4:	add	r1, sp, #144	; 0x90
   152b8:	mov	r2, #1
   152bc:	movt	r0, #1
   152c0:	bl	11d54 <setenv@plt>
   152c4:	cmn	r0, #1
   152c8:	ble	15300 <__assert_fail@plt+0x3384>
   152cc:	movw	r0, #62400	; 0xf3c0
   152d0:	movt	r0, #2
   152d4:	ldrb	r0, [r0]
   152d8:	cmp	r0, #0
   152dc:	beq	15310 <__assert_fail@plt+0x3394>
   152e0:	movw	r0, #62384	; 0xf3b0
   152e4:	movw	r1, #54563	; 0xd523
   152e8:	add	r2, sp, #144	; 0x90
   152ec:	movt	r0, #2
   152f0:	movt	r1, #1
   152f4:	ldr	r0, [r0]
   152f8:	bl	11d60 <fprintf@plt>
   152fc:	b	15310 <__assert_fail@plt+0x3394>
   15300:	movw	r1, #54539	; 0xd50b
   15304:	mov	r0, #4
   15308:	movt	r1, #1
   1530c:	bl	11e68 <syslog@plt>
   15310:	movw	r0, #54468	; 0xd4c4
   15314:	sub	r1, fp, #32
   15318:	mov	r2, #1
   1531c:	movt	r0, #1
   15320:	bl	11d54 <setenv@plt>
   15324:	cmn	r0, #1
   15328:	bgt	1533c <__assert_fail@plt+0x33c0>
   1532c:	movw	r1, #54589	; 0xd53d
   15330:	mov	r0, #4
   15334:	movt	r1, #1
   15338:	bl	11e68 <syslog@plt>
   1533c:	movw	r0, #62644	; 0xf4b4
   15340:	movt	r0, #2
   15344:	ldrb	r0, [r0]
   15348:	cmp	r0, #1
   1534c:	bne	153b4 <__assert_fail@plt+0x3438>
   15350:	ldr	r1, [sp, #12]
   15354:	mov	r0, #0
   15358:	add	r2, sp, #144	; 0x90
   1535c:	mov	r3, #184	; 0xb8
   15360:	str	r0, [sp]
   15364:	str	r0, [sp, #4]
   15368:	str	r0, [sp, #8]
   1536c:	add	r0, sp, #16
   15370:	bl	11e2c <getnameinfo@plt>
   15374:	cmp	r0, #0
   15378:	beq	15398 <__assert_fail@plt+0x341c>
   1537c:	bl	11b44 <gai_strerror@plt>
   15380:	movw	r1, #54615	; 0xd557
   15384:	mov	r2, r0
   15388:	mov	r0, #4
   1538c:	movt	r1, #1
   15390:	bl	11e68 <syslog@plt>
   15394:	b	153b4 <__assert_fail@plt+0x3438>
   15398:	movw	r0, #54455	; 0xd4b7
   1539c:	add	r1, sp, #144	; 0x90
   153a0:	mov	r2, #1
   153a4:	movt	r0, #1
   153a8:	bl	11d54 <setenv@plt>
   153ac:	cmn	r0, #1
   153b0:	ble	1550c <__assert_fail@plt+0x3590>
   153b4:	mov	r0, #3
   153b8:	mov	r1, #16
   153bc:	sub	r2, fp, #32
   153c0:	mov	r3, #184	; 0xb8
   153c4:	str	r2, [sp]
   153c8:	str	r1, [sp, #4]
   153cc:	str	r0, [sp, #8]
   153d0:	add	r2, sp, #144	; 0x90
   153d4:	mov	r0, r5
   153d8:	mov	r1, r4
   153dc:	bl	11e2c <getnameinfo@plt>
   153e0:	cmp	r0, #0
   153e4:	beq	15408 <__assert_fail@plt+0x348c>
   153e8:	bl	11b44 <gai_strerror@plt>
   153ec:	movw	r1, #54615	; 0xd557
   153f0:	mov	r2, r0
   153f4:	mov	r0, #4
   153f8:	movt	r1, #1
   153fc:	bl	11e68 <syslog@plt>
   15400:	sub	sp, fp, #16
   15404:	pop	{r4, r5, r6, sl, fp, pc}
   15408:	movw	r0, #54481	; 0xd4d1
   1540c:	add	r1, sp, #144	; 0x90
   15410:	mov	r2, #1
   15414:	movt	r0, #1
   15418:	bl	11d54 <setenv@plt>
   1541c:	cmn	r0, #1
   15420:	ble	15458 <__assert_fail@plt+0x34dc>
   15424:	movw	r0, #62400	; 0xf3c0
   15428:	movt	r0, #2
   1542c:	ldrb	r0, [r0]
   15430:	cmp	r0, #0
   15434:	beq	15468 <__assert_fail@plt+0x34ec>
   15438:	movw	r0, #62384	; 0xf3b0
   1543c:	movw	r1, #54680	; 0xd598
   15440:	add	r2, sp, #144	; 0x90
   15444:	movt	r0, #2
   15448:	movt	r1, #1
   1544c:	ldr	r0, [r0]
   15450:	bl	11d60 <fprintf@plt>
   15454:	b	15468 <__assert_fail@plt+0x34ec>
   15458:	movw	r1, #54656	; 0xd580
   1545c:	mov	r0, #4
   15460:	movt	r1, #1
   15464:	bl	11e68 <syslog@plt>
   15468:	movw	r0, #54493	; 0xd4dd
   1546c:	sub	r1, fp, #32
   15470:	mov	r2, #1
   15474:	movt	r0, #1
   15478:	bl	11d54 <setenv@plt>
   1547c:	cmn	r0, #1
   15480:	bgt	15494 <__assert_fail@plt+0x3518>
   15484:	movw	r1, #54707	; 0xd5b3
   15488:	mov	r0, #4
   1548c:	movt	r1, #1
   15490:	bl	11e68 <syslog@plt>
   15494:	movw	r0, #62644	; 0xf4b4
   15498:	movt	r0, #2
   1549c:	ldrb	r0, [r0]
   154a0:	cmp	r0, #1
   154a4:	bne	15504 <__assert_fail@plt+0x3588>
   154a8:	mov	r0, #0
   154ac:	add	r2, sp, #144	; 0x90
   154b0:	mov	r1, r4
   154b4:	mov	r3, #184	; 0xb8
   154b8:	str	r0, [sp]
   154bc:	str	r0, [sp, #4]
   154c0:	str	r0, [sp, #8]
   154c4:	mov	r0, r5
   154c8:	bl	11e2c <getnameinfo@plt>
   154cc:	cmp	r0, #0
   154d0:	bne	153e8 <__assert_fail@plt+0x346c>
   154d4:	movw	r0, #54507	; 0xd4eb
   154d8:	add	r1, sp, #144	; 0x90
   154dc:	mov	r2, #1
   154e0:	movt	r0, #1
   154e4:	bl	11d54 <setenv@plt>
   154e8:	cmn	r0, #1
   154ec:	ble	15518 <__assert_fail@plt+0x359c>
   154f0:	movw	r0, #62400	; 0xf3c0
   154f4:	movt	r0, #2
   154f8:	ldrb	r0, [r0]
   154fc:	cmp	r0, #0
   15500:	bne	15530 <__assert_fail@plt+0x35b4>
   15504:	sub	sp, fp, #16
   15508:	pop	{r4, r5, r6, sl, fp, pc}
   1550c:	movw	r1, #54631	; 0xd567
   15510:	movt	r1, #1
   15514:	b	152a4 <__assert_fail@plt+0x3328>
   15518:	movw	r1, #54733	; 0xd5cd
   1551c:	mov	r0, #4
   15520:	movt	r1, #1
   15524:	bl	11e68 <syslog@plt>
   15528:	sub	sp, fp, #16
   1552c:	pop	{r4, r5, r6, sl, fp, pc}
   15530:	movw	r0, #62384	; 0xf3b0
   15534:	movw	r1, #54759	; 0xd5e7
   15538:	add	r2, sp, #144	; 0x90
   1553c:	movt	r0, #2
   15540:	movt	r1, #1
   15544:	ldr	r0, [r0]
   15548:	bl	11d60 <fprintf@plt>
   1554c:	sub	sp, fp, #16
   15550:	pop	{r4, r5, r6, sl, fp, pc}
   15554:	push	{r4, r5, fp, lr}
   15558:	add	fp, sp, #8
   1555c:	sub	sp, sp, #296	; 0x128
   15560:	mov	r5, r0
   15564:	ldr	r0, [r1]
   15568:	mov	r6, r2
   1556c:	mov	r4, r1
   15570:	bl	17a58 <argp_parse@@Base+0x13c0>
   15574:	movw	r0, #62976	; 0xf600
   15578:	cmp	r6, #0
   1557c:	movt	r0, #2
   15580:	str	r4, [r0]
   15584:	ldrne	r0, [r6]
   15588:	cmpne	r0, #0
   1558c:	moveq	r6, r4
   15590:	ldr	r0, [r6], #4
   15594:	cmp	r0, #0
   15598:	bne	15590 <__assert_fail@plt+0x3614>
   1559c:	ldr	r6, [r6, #-8]
   155a0:	mov	r0, r6
   155a4:	bl	11d30 <strlen@plt>
   155a8:	movw	r1, #63008	; 0xf620
   155ac:	movw	r2, #54788	; 0xd604
   155b0:	add	r0, r6, r0
   155b4:	movt	r1, #2
   155b8:	movt	r2, #1
   155bc:	str	r2, [r1]
   155c0:	movw	r1, #62980	; 0xf604
   155c4:	movt	r1, #2
   155c8:	str	r0, [r1]
   155cc:	movw	r0, #54812	; 0xd61c
   155d0:	movw	r1, #61900	; 0xf1cc
   155d4:	movt	r0, #1
   155d8:	movt	r1, #2
   155dc:	bl	17870 <argp_parse@@Base+0x11d8>
   155e0:	mov	r0, #0
   155e4:	add	r1, sp, #148	; 0x94
   155e8:	mov	r2, r4
   155ec:	mov	r3, #0
   155f0:	str	r0, [sp, #4]
   155f4:	movw	r0, #62140	; 0xf2bc
   155f8:	str	r1, [sp]
   155fc:	mov	r1, r5
   15600:	movt	r0, #2
   15604:	bl	16698 <argp_parse@@Base>
   15608:	movw	r0, #62644	; 0xf4b4
   1560c:	movt	r0, #2
   15610:	ldrb	r0, [r0]
   15614:	cmp	r0, #1
   15618:	movweq	r0, #62645	; 0xf4b5
   1561c:	moveq	r1, #1
   15620:	movteq	r0, #2
   15624:	strbeq	r1, [r0]
   15628:	ldr	r0, [sp, #148]	; 0x94
   1562c:	cmp	r0, r5
   15630:	bge	1568c <__assert_fail@plt+0x3710>
   15634:	add	r1, r5, #1
   15638:	sub	r0, r1, r0
   1563c:	mov	r1, #4
   15640:	bl	18048 <argp_parse@@Base+0x19b0>
   15644:	movw	r6, #62996	; 0xf614
   15648:	movt	r6, #2
   1564c:	str	r0, [r6]
   15650:	ldr	r0, [sp, #148]	; 0x94
   15654:	cmp	r0, r5
   15658:	bge	156dc <__assert_fail@plt+0x3760>
   1565c:	mov	r7, #0
   15660:	ldr	r0, [r4, r0, lsl #2]
   15664:	bl	11bd4 <strdup@plt>
   15668:	ldr	r1, [r6]
   1566c:	str	r0, [r1, r7]
   15670:	add	r7, r7, #4
   15674:	ldr	r0, [sp, #148]	; 0x94
   15678:	add	r0, r0, #1
   1567c:	cmp	r0, r5
   15680:	str	r0, [sp, #148]	; 0x94
   15684:	blt	15660 <__assert_fail@plt+0x36e4>
   15688:	b	156dc <__assert_fail@plt+0x3760>
   1568c:	mov	r0, #3
   15690:	mov	r1, #4
   15694:	bl	18048 <argp_parse@@Base+0x19b0>
   15698:	movw	r5, #62996	; 0xf614
   1569c:	movt	r5, #2
   156a0:	str	r0, [r5]
   156a4:	movw	r0, #54818	; 0xd622
   156a8:	movt	r0, #1
   156ac:	bl	11bd4 <strdup@plt>
   156b0:	cmp	r0, #0
   156b4:	beq	15f24 <__assert_fail@plt+0x3fa8>
   156b8:	ldr	r1, [r5]
   156bc:	str	r0, [r1]
   156c0:	movw	r0, #54844	; 0xd63c
   156c4:	movt	r0, #1
   156c8:	bl	11bd4 <strdup@plt>
   156cc:	cmp	r0, #0
   156d0:	beq	15f24 <__assert_fail@plt+0x3fa8>
   156d4:	ldr	r1, [r5]
   156d8:	str	r0, [r1, #4]
   156dc:	movw	r0, #62400	; 0xf3c0
   156e0:	movt	r0, #2
   156e4:	ldrb	r0, [r0]
   156e8:	cmp	r0, #0
   156ec:	bne	15704 <__assert_fail@plt+0x3788>
   156f0:	mov	r0, #0
   156f4:	mov	r1, #0
   156f8:	bl	1667c <daemon@@Base>
   156fc:	cmn	r0, #1
   15700:	ble	15f3c <__assert_fail@plt+0x3fc0>
   15704:	movw	r0, #54812	; 0xd61c
   15708:	mov	r1, #17
   1570c:	mov	r2, #24
   15710:	movt	r0, #1
   15714:	bl	11e98 <openlog@plt>
   15718:	movw	r0, #62646	; 0xf4b6
   1571c:	movt	r0, #2
   15720:	ldrb	r0, [r0]
   15724:	cmp	r0, #0
   15728:	bne	157b0 <__assert_fail@plt+0x3834>
   1572c:	movw	r5, #62168	; 0xf2d8
   15730:	movw	r1, #53816	; 0xd238
   15734:	movt	r5, #2
   15738:	movt	r1, #1
   1573c:	ldr	r0, [r5]
   15740:	bl	11ec8 <fopen64@plt>
   15744:	cmp	r0, #0
   15748:	beq	15788 <__assert_fail@plt+0x380c>
   1574c:	mov	r4, r0
   15750:	movw	r0, #62400	; 0xf3c0
   15754:	movt	r0, #2
   15758:	ldrb	r0, [r0]
   1575c:	cmp	r0, #0
   15760:	bne	15f04 <__assert_fail@plt+0x3f88>
   15764:	bl	11d0c <getpid@plt>
   15768:	movw	r1, #53203	; 0xcfd3
   1576c:	mov	r2, r0
   15770:	mov	r0, r4
   15774:	movt	r1, #1
   15778:	bl	11d60 <fprintf@plt>
   1577c:	mov	r0, r4
   15780:	bl	11df0 <fclose@plt>
   15784:	b	157b0 <__assert_fail@plt+0x3834>
   15788:	ldr	r4, [r5]
   1578c:	bl	11d78 <__errno_location@plt>
   15790:	ldr	r0, [r0]
   15794:	bl	11cdc <strerror@plt>
   15798:	movw	r1, #54928	; 0xd690
   1579c:	mov	r3, r0
   157a0:	mov	r0, #2
   157a4:	mov	r2, r4
   157a8:	movt	r1, #1
   157ac:	bl	11e68 <syslog@plt>
   157b0:	add	r4, sp, #152	; 0x98
   157b4:	mov	r1, #0
   157b8:	mov	r2, #140	; 0x8c
   157bc:	mov	r8, #0
   157c0:	mov	r0, r4
   157c4:	bl	11da8 <memset@plt>
   157c8:	orr	r5, r4, #4
   157cc:	mov	r0, r5
   157d0:	bl	11e14 <sigemptyset@plt>
   157d4:	mov	r0, r5
   157d8:	mov	r1, #14
   157dc:	bl	11cc4 <sigaddset@plt>
   157e0:	movw	r0, #13052	; 0x32fc
   157e4:	mov	r7, #268435456	; 0x10000000
   157e8:	mov	r1, r4
   157ec:	mov	r2, #0
   157f0:	movt	r0, #1
   157f4:	str	r7, [sp, #284]	; 0x11c
   157f8:	str	r0, [sp, #152]	; 0x98
   157fc:	mov	r0, #14
   15800:	bl	11c4c <sigaction@plt>
   15804:	mov	r0, #0
   15808:	bl	14dc4 <__assert_fail@plt+0x2e48>
   1580c:	mov	r0, r4
   15810:	mov	r1, #0
   15814:	mov	r2, #140	; 0x8c
   15818:	bl	11da8 <memset@plt>
   1581c:	mov	r0, r5
   15820:	bl	11e14 <sigemptyset@plt>
   15824:	mov	r0, r5
   15828:	mov	r1, #1
   1582c:	bl	11cc4 <sigaddset@plt>
   15830:	movw	r0, #19908	; 0x4dc4
   15834:	str	r7, [sp, #284]	; 0x11c
   15838:	mov	r1, r4
   1583c:	mov	r2, #0
   15840:	movt	r0, #1
   15844:	str	r0, [sp, #152]	; 0x98
   15848:	mov	r0, #1
   1584c:	bl	11c4c <sigaction@plt>
   15850:	mov	r0, r4
   15854:	mov	r1, #0
   15858:	mov	r2, #140	; 0x8c
   1585c:	bl	11da8 <memset@plt>
   15860:	mov	r0, r5
   15864:	bl	11e14 <sigemptyset@plt>
   15868:	mov	r0, r5
   1586c:	mov	r1, #17
   15870:	bl	11cc4 <sigaddset@plt>
   15874:	movw	r0, #11236	; 0x2be4
   15878:	str	r7, [sp, #284]	; 0x11c
   1587c:	mov	r1, r4
   15880:	mov	r2, #0
   15884:	movt	r0, #1
   15888:	str	r0, [sp, #152]	; 0x98
   1588c:	mov	r0, #17
   15890:	bl	11c4c <sigaction@plt>
   15894:	mov	r0, r4
   15898:	mov	r1, #0
   1589c:	mov	r2, #140	; 0x8c
   158a0:	bl	11da8 <memset@plt>
   158a4:	mov	r0, r5
   158a8:	bl	11e14 <sigemptyset@plt>
   158ac:	mov	r0, r5
   158b0:	mov	r1, #13
   158b4:	bl	11cc4 <sigaddset@plt>
   158b8:	str	r7, [sp, #284]	; 0x11c
   158bc:	mov	r7, #1
   158c0:	mov	r0, #13
   158c4:	mov	r1, r4
   158c8:	mov	r2, #0
   158cc:	str	r7, [sp, #152]	; 0x98
   158d0:	bl	11c4c <sigaction@plt>
   158d4:	add	r5, sp, #152	; 0x98
   158d8:	mov	r1, #120	; 0x78
   158dc:	mov	r2, #99	; 0x63
   158e0:	mov	r0, r5
   158e4:	bl	11da8 <memset@plt>
   158e8:	movw	r0, #54947	; 0xd6a3
   158ec:	mov	r1, r5
   158f0:	mov	r2, #1
   158f4:	strb	r8, [sp, #251]	; 0xfb
   158f8:	movt	r0, #1
   158fc:	bl	11d54 <setenv@plt>
   15900:	movw	r5, #62968	; 0xf5f8
   15904:	add	r6, sp, #16
   15908:	movt	r5, #2
   1590c:	b	15918 <__assert_fail@plt+0x399c>
   15910:	movw	r5, #62968	; 0xf5f8
   15914:	movt	r5, #2
   15918:	ldr	r0, [r5]
   1591c:	cmp	r0, #0
   15920:	bne	15998 <__assert_fail@plt+0x3a1c>
   15924:	mov	r0, r6
   15928:	bl	11e14 <sigemptyset@plt>
   1592c:	mov	r0, r4
   15930:	bl	11e14 <sigemptyset@plt>
   15934:	mov	r0, r4
   15938:	mov	r1, #17
   1593c:	bl	11cc4 <sigaddset@plt>
   15940:	mov	r0, r4
   15944:	mov	r1, #1
   15948:	bl	11cc4 <sigaddset@plt>
   1594c:	mov	r0, r4
   15950:	mov	r1, #14
   15954:	bl	11cc4 <sigaddset@plt>
   15958:	mov	r0, #0
   1595c:	mov	r1, r4
   15960:	mov	r2, #0
   15964:	bl	11b14 <sigprocmask@plt>
   15968:	b	15974 <__assert_fail@plt+0x39f8>
   1596c:	mov	r0, r6
   15970:	bl	11dc0 <sigsuspend@plt>
   15974:	ldr	r0, [r5]
   15978:	cmp	r0, #0
   1597c:	beq	1596c <__assert_fail@plt+0x39f0>
   15980:	mov	r0, r4
   15984:	bl	11e14 <sigemptyset@plt>
   15988:	mov	r0, #2
   1598c:	mov	r1, r4
   15990:	mov	r2, #0
   15994:	bl	11b14 <sigprocmask@plt>
   15998:	movw	r1, #62836	; 0xf574
   1599c:	mov	r0, r6
   159a0:	mov	r2, #128	; 0x80
   159a4:	movt	r1, #2
   159a8:	bl	11b68 <memcpy@plt>
   159ac:	movw	r0, #62832	; 0xf570
   159b0:	mov	r1, #0
   159b4:	mov	r2, #0
   159b8:	mov	r3, #0
   159bc:	movt	r0, #2
   159c0:	str	r1, [sp]
   159c4:	mov	r1, r6
   159c8:	ldr	r0, [r0]
   159cc:	add	r0, r0, #1
   159d0:	bl	11ba4 <select@plt>
   159d4:	mov	r9, r0
   159d8:	cmp	r0, #1
   159dc:	blt	159f8 <__assert_fail@plt+0x3a7c>
   159e0:	movw	r0, #63000	; 0xf618
   159e4:	movt	r0, #2
   159e8:	ldr	r8, [r0]
   159ec:	cmp	r8, #0
   159f0:	bne	15a54 <__assert_fail@plt+0x3ad8>
   159f4:	b	15910 <__assert_fail@plt+0x3994>
   159f8:	cmn	r9, #1
   159fc:	bgt	15a20 <__assert_fail@plt+0x3aa4>
   15a00:	bl	11d78 <__errno_location@plt>
   15a04:	ldr	r0, [r0]
   15a08:	cmp	r0, #4
   15a0c:	beq	15a20 <__assert_fail@plt+0x3aa4>
   15a10:	movw	r1, #54959	; 0xd6af
   15a14:	mov	r0, #4
   15a18:	movt	r1, #1
   15a1c:	bl	11e68 <syslog@plt>
   15a20:	mov	r0, #1
   15a24:	bl	11bb0 <sleep@plt>
   15a28:	b	15910 <__assert_fail@plt+0x3994>
   15a2c:	movw	r0, #62832	; 0xf570
   15a30:	movw	r1, #55067	; 0xd71b
   15a34:	movt	r0, #2
   15a38:	movt	r1, #1
   15a3c:	ldr	r2, [r0]
   15a40:	movw	r0, #62384	; 0xf3b0
   15a44:	movt	r0, #2
   15a48:	ldr	r0, [r0]
   15a4c:	bl	11d60 <fprintf@plt>
   15a50:	b	15d2c <__assert_fail@plt+0x3db0>
   15a54:	ldr	r0, [r8, #60]	; 0x3c
   15a58:	cmn	r0, #1
   15a5c:	beq	15eec <__assert_fail@plt+0x3f70>
   15a60:	asr	r1, r0, #31
   15a64:	add	r1, r0, r1, lsr #27
   15a68:	and	r0, r0, #31
   15a6c:	asr	r1, r1, #5
   15a70:	ldr	r1, [r6, r1, lsl #2]
   15a74:	tst	r1, r7, lsl r0
   15a78:	beq	15eec <__assert_fail@plt+0x3f70>
   15a7c:	movw	r0, #62400	; 0xf3c0
   15a80:	movt	r0, #2
   15a84:	ldrb	r0, [r0]
   15a88:	cmp	r0, #0
   15a8c:	bne	15e20 <__assert_fail@plt+0x3ea4>
   15a90:	ldr	r0, [r8, #24]
   15a94:	mov	r5, r6
   15a98:	sub	r9, r9, #1
   15a9c:	cmp	r0, #0
   15aa0:	bne	15b10 <__assert_fail@plt+0x3b94>
   15aa4:	ldr	r0, [r8, #16]
   15aa8:	cmp	r0, #1
   15aac:	bne	15b10 <__assert_fail@plt+0x3b94>
   15ab0:	mov	r0, #128	; 0x80
   15ab4:	mov	r1, r4
   15ab8:	add	r2, sp, #8
   15abc:	str	r0, [sp, #8]
   15ac0:	ldr	r0, [r8, #60]	; 0x3c
   15ac4:	bl	11c40 <accept@plt>
   15ac8:	mov	sl, r0
   15acc:	movw	r0, #62400	; 0xf3c0
   15ad0:	movt	r0, #2
   15ad4:	ldrb	r0, [r0]
   15ad8:	cmp	r0, #0
   15adc:	bne	15ea0 <__assert_fail@plt+0x3f24>
   15ae0:	cmn	sl, #1
   15ae4:	ble	15ec4 <__assert_fail@plt+0x3f48>
   15ae8:	movw	r0, #62645	; 0xf4b5
   15aec:	movt	r0, #2
   15af0:	ldrb	r0, [r0]
   15af4:	cmp	r0, #1
   15af8:	bne	15b14 <__assert_fail@plt+0x3b98>
   15afc:	ldr	r2, [sp, #8]
   15b00:	mov	r0, sl
   15b04:	mov	r1, r4
   15b08:	bl	151b4 <__assert_fail@plt+0x3238>
   15b0c:	b	15b14 <__assert_fail@plt+0x3b98>
   15b10:	ldr	sl, [r8, #60]	; 0x3c
   15b14:	mov	r0, r4
   15b18:	bl	11e14 <sigemptyset@plt>
   15b1c:	mov	r0, r4
   15b20:	mov	r1, #17
   15b24:	bl	11cc4 <sigaddset@plt>
   15b28:	mov	r0, r4
   15b2c:	mov	r1, #1
   15b30:	bl	11cc4 <sigaddset@plt>
   15b34:	mov	r0, r4
   15b38:	mov	r1, #14
   15b3c:	bl	11cc4 <sigaddset@plt>
   15b40:	mov	r0, #0
   15b44:	mov	r1, r4
   15b48:	mov	r2, #0
   15b4c:	bl	11b14 <sigprocmask@plt>
   15b50:	ldr	r0, [r8, #44]	; 0x2c
   15b54:	cmp	r0, #0
   15b58:	beq	15b68 <__assert_fail@plt+0x3bec>
   15b5c:	ldrh	r0, [r0, #8]
   15b60:	cmp	r0, #0
   15b64:	beq	15cc4 <__assert_fail@plt+0x3d48>
   15b68:	ldr	r1, [r8, #208]	; 0xd0
   15b6c:	add	r0, r1, #1
   15b70:	cmp	r1, #0
   15b74:	str	r0, [r8, #208]	; 0xd0
   15b78:	beq	15bec <__assert_fail@plt+0x3c70>
   15b7c:	ldr	r1, [r8, #28]
   15b80:	mov	r2, #0
   15b84:	cmp	r0, r1
   15b88:	clz	r1, r1
   15b8c:	movwls	r2, #1
   15b90:	lsr	r1, r1, #5
   15b94:	orr	r1, r2, r1
   15b98:	cmp	r1, #1
   15b9c:	bne	15bb4 <__assert_fail@plt+0x3c38>
   15ba0:	movw	r1, #61896	; 0xf1c8
   15ba4:	movt	r1, #2
   15ba8:	ldr	r1, [r1]
   15bac:	cmp	r0, r1
   15bb0:	bcc	15bf8 <__assert_fail@plt+0x3c7c>
   15bb4:	add	r0, sp, #8
   15bb8:	mov	r1, #0
   15bbc:	bl	11c70 <gettimeofday@plt>
   15bc0:	mov	r0, r8
   15bc4:	ldr	r2, [sp, #8]
   15bc8:	ldr	r1, [r0, #212]!	; 0xd4
   15bcc:	sub	r1, r2, r1
   15bd0:	cmp	r1, #61	; 0x3d
   15bd4:	blt	15d9c <__assert_fail@plt+0x3e20>
   15bd8:	ldr	r1, [sp, #8]
   15bdc:	ldr	r2, [sp, #12]
   15be0:	stm	r0, {r1, r2}
   15be4:	str	r7, [r8, #208]	; 0xd0
   15be8:	b	15bf8 <__assert_fail@plt+0x3c7c>
   15bec:	add	r0, r8, #212	; 0xd4
   15bf0:	mov	r1, #0
   15bf4:	bl	11c70 <gettimeofday@plt>
   15bf8:	bl	11e20 <fork@plt>
   15bfc:	cmn	r0, #1
   15c00:	ble	15c70 <__assert_fail@plt+0x3cf4>
   15c04:	mov	r7, #1
   15c08:	cmp	r0, #0
   15c0c:	beq	15cc8 <__assert_fail@plt+0x3d4c>
   15c10:	ldr	r1, [r8, #24]
   15c14:	mov	r6, #0
   15c18:	cmp	r1, #0
   15c1c:	beq	15ccc <__assert_fail@plt+0x3d50>
   15c20:	str	r0, [r8, #24]
   15c24:	ldr	r0, [r8, #60]	; 0x3c
   15c28:	cmp	r0, #0
   15c2c:	blt	15ccc <__assert_fail@plt+0x3d50>
   15c30:	movw	r2, #62836	; 0xf574
   15c34:	lsr	r1, r0, #5
   15c38:	mov	r7, #1
   15c3c:	and	r0, r0, #31
   15c40:	movt	r2, #2
   15c44:	mov	r3, r2
   15c48:	ldr	r2, [r2, r1, lsl #2]
   15c4c:	bic	r0, r2, r7, lsl r0
   15c50:	str	r0, [r3, r1, lsl #2]
   15c54:	movw	r0, #62968	; 0xf5f8
   15c58:	movt	r0, #2
   15c5c:	mov	r1, r0
   15c60:	ldr	r0, [r0]
   15c64:	sub	r0, r0, #1
   15c68:	str	r0, [r1]
   15c6c:	b	15ccc <__assert_fail@plt+0x3d50>
   15c70:	movw	r1, #55058	; 0xd712
   15c74:	mov	r0, #3
   15c78:	movt	r1, #1
   15c7c:	bl	11e68 <syslog@plt>
   15c80:	ldr	r0, [r8, #24]
   15c84:	cmp	r0, #0
   15c88:	bne	15ca0 <__assert_fail@plt+0x3d24>
   15c8c:	ldr	r0, [r8, #16]
   15c90:	cmp	r0, #1
   15c94:	bne	15ca0 <__assert_fail@plt+0x3d24>
   15c98:	mov	r0, sl
   15c9c:	bl	11f4c <close@plt>
   15ca0:	mov	r0, r4
   15ca4:	bl	11e14 <sigemptyset@plt>
   15ca8:	mov	r0, #2
   15cac:	mov	r1, r4
   15cb0:	mov	r2, #0
   15cb4:	bl	11b14 <sigprocmask@plt>
   15cb8:	mov	r0, #1
   15cbc:	bl	11bb0 <sleep@plt>
   15cc0:	b	15ee8 <__assert_fail@plt+0x3f6c>
   15cc4:	mov	r7, #0
   15cc8:	mov	r6, #1
   15ccc:	mov	r0, r4
   15cd0:	bl	11e14 <sigemptyset@plt>
   15cd4:	mov	r0, #2
   15cd8:	mov	r1, r4
   15cdc:	mov	r2, #0
   15ce0:	bl	11b14 <sigprocmask@plt>
   15ce4:	cmp	r6, #0
   15ce8:	beq	15d6c <__assert_fail@plt+0x3df0>
   15cec:	movw	r1, #62400	; 0xf3c0
   15cf0:	eor	r0, r7, #1
   15cf4:	movt	r1, #2
   15cf8:	ldrb	r1, [r1]
   15cfc:	clz	r1, r1
   15d00:	lsr	r1, r1, #5
   15d04:	orrs	r0, r0, r1
   15d08:	bne	15d10 <__assert_fail@plt+0x3d94>
   15d0c:	bl	11d3c <setsid@plt>
   15d10:	cmp	r7, #0
   15d14:	beq	15d60 <__assert_fail@plt+0x3de4>
   15d18:	movw	r0, #62400	; 0xf3c0
   15d1c:	movt	r0, #2
   15d20:	ldrb	r0, [r0]
   15d24:	cmp	r0, #0
   15d28:	bne	15a2c <__assert_fail@plt+0x3ab0>
   15d2c:	movw	r0, #62832	; 0xf570
   15d30:	movt	r0, #2
   15d34:	ldr	r7, [r0]
   15d38:	cmp	r7, #3
   15d3c:	blt	15d60 <__assert_fail@plt+0x3de4>
   15d40:	cmp	sl, r7
   15d44:	beq	15d50 <__assert_fail@plt+0x3dd4>
   15d48:	mov	r0, r7
   15d4c:	bl	11f4c <close@plt>
   15d50:	sub	r0, r7, #1
   15d54:	cmp	r7, #3
   15d58:	mov	r7, r0
   15d5c:	bgt	15d40 <__assert_fail@plt+0x3dc4>
   15d60:	mov	r0, sl
   15d64:	mov	r1, r8
   15d68:	bl	129a8 <__assert_fail@plt+0xa2c>
   15d6c:	ldr	r0, [r8, #24]
   15d70:	cmp	r0, #0
   15d74:	beq	15d80 <__assert_fail@plt+0x3e04>
   15d78:	mov	r7, #1
   15d7c:	b	15ee8 <__assert_fail@plt+0x3f6c>
   15d80:	ldr	r0, [r8, #16]
   15d84:	mov	r7, #1
   15d88:	cmp	r0, #1
   15d8c:	bne	15ee8 <__assert_fail@plt+0x3f6c>
   15d90:	mov	r0, sl
   15d94:	bl	11f4c <close@plt>
   15d98:	b	15ee8 <__assert_fail@plt+0x3f6c>
   15d9c:	ldr	r2, [r8, #12]
   15da0:	ldr	r3, [r8, #20]
   15da4:	movw	r1, #55007	; 0xd6df
   15da8:	mov	r0, #3
   15dac:	movt	r1, #1
   15db0:	bl	11e68 <syslog@plt>
   15db4:	ldr	r0, [r8, #60]	; 0x3c
   15db8:	cmp	r0, #0
   15dbc:	blt	15e04 <__assert_fail@plt+0x3e88>
   15dc0:	movw	r1, #62968	; 0xf5f8
   15dc4:	and	r3, r0, #31
   15dc8:	movt	r1, #2
   15dcc:	mov	r2, r1
   15dd0:	ldr	r1, [r1]
   15dd4:	sub	r1, r1, #1
   15dd8:	str	r1, [r2]
   15ddc:	movw	r2, #62836	; 0xf574
   15de0:	lsr	r1, r0, #5
   15de4:	movt	r2, #2
   15de8:	mov	r6, r2
   15dec:	ldr	r2, [r2, r1, lsl #2]
   15df0:	bic	r2, r2, r7, lsl r3
   15df4:	str	r2, [r6, r1, lsl #2]
   15df8:	bl	11f4c <close@plt>
   15dfc:	mvn	r0, #0
   15e00:	str	r0, [r8, #60]	; 0x3c
   15e04:	mov	r0, #0
   15e08:	str	r0, [r8, #208]	; 0xd0
   15e0c:	ldr	r0, [r8, #24]
   15e10:	cmp	r0, #2
   15e14:	blt	15e40 <__assert_fail@plt+0x3ec4>
   15e18:	str	r7, [r8, #24]
   15e1c:	b	15e5c <__assert_fail@plt+0x3ee0>
   15e20:	movw	r0, #62384	; 0xf3b0
   15e24:	ldr	r2, [r8, #12]
   15e28:	movw	r1, #54380	; 0xd46c
   15e2c:	movt	r0, #2
   15e30:	movt	r1, #1
   15e34:	ldr	r0, [r0]
   15e38:	bl	11d60 <fprintf@plt>
   15e3c:	b	15a90 <__assert_fail@plt+0x3b14>
   15e40:	cmp	r0, #0
   15e44:	bne	15e5c <__assert_fail@plt+0x3ee0>
   15e48:	ldr	r0, [r8, #16]
   15e4c:	cmp	r0, #1
   15e50:	bne	15e5c <__assert_fail@plt+0x3ee0>
   15e54:	mov	r0, sl
   15e58:	bl	11f4c <close@plt>
   15e5c:	mov	r0, r4
   15e60:	bl	11e14 <sigemptyset@plt>
   15e64:	mov	r0, #2
   15e68:	mov	r1, r4
   15e6c:	mov	r2, #0
   15e70:	bl	11b14 <sigprocmask@plt>
   15e74:	movw	r0, #62988	; 0xf60c
   15e78:	movt	r0, #2
   15e7c:	ldr	r0, [r0]
   15e80:	cmp	r0, #0
   15e84:	bne	15ee8 <__assert_fail@plt+0x3f6c>
   15e88:	movw	r0, #62988	; 0xf60c
   15e8c:	movt	r0, #2
   15e90:	str	r7, [r0]
   15e94:	mov	r0, #600	; 0x258
   15e98:	bl	11be0 <alarm@plt>
   15e9c:	b	15ee8 <__assert_fail@plt+0x3f6c>
   15ea0:	movw	r0, #62384	; 0xf3b0
   15ea4:	movw	r1, #54970	; 0xd6ba
   15ea8:	mov	r2, sl
   15eac:	movt	r0, #2
   15eb0:	movt	r1, #1
   15eb4:	ldr	r0, [r0]
   15eb8:	bl	11d60 <fprintf@plt>
   15ebc:	cmn	sl, #1
   15ec0:	bgt	15ae8 <__assert_fail@plt+0x3b6c>
   15ec4:	bl	11d78 <__errno_location@plt>
   15ec8:	ldr	r0, [r0]
   15ecc:	cmp	r0, #4
   15ed0:	beq	15ee8 <__assert_fail@plt+0x3f6c>
   15ed4:	ldr	r2, [r8, #12]
   15ed8:	movw	r1, #54987	; 0xd6cb
   15edc:	mov	r0, #4
   15ee0:	movt	r1, #1
   15ee4:	bl	11e68 <syslog@plt>
   15ee8:	mov	r6, r5
   15eec:	cmp	r9, #0
   15ef0:	beq	15910 <__assert_fail@plt+0x3994>
   15ef4:	ldr	r8, [r8, #220]	; 0xdc
   15ef8:	cmp	r8, #0
   15efc:	bne	15a54 <__assert_fail@plt+0x3ad8>
   15f00:	b	15910 <__assert_fail@plt+0x3994>
   15f04:	movw	r0, #62384	; 0xf3b0
   15f08:	ldr	r2, [r5]
   15f0c:	movw	r1, #54903	; 0xd677
   15f10:	movt	r0, #2
   15f14:	movt	r1, #1
   15f18:	ldr	r0, [r0]
   15f1c:	bl	11d60 <fprintf@plt>
   15f20:	b	15764 <__assert_fail@plt+0x37e8>
   15f24:	movw	r1, #53207	; 0xcfd7
   15f28:	mov	r0, #3
   15f2c:	movt	r1, #1
   15f30:	bl	11e68 <syslog@plt>
   15f34:	mvn	r0, #0
   15f38:	bl	11d18 <exit@plt>
   15f3c:	ldr	r2, [r4]
   15f40:	movw	r1, #54867	; 0xd653
   15f44:	mov	r0, #27
   15f48:	movt	r1, #1
   15f4c:	bl	11e68 <syslog@plt>
   15f50:	mov	r0, #1
   15f54:	bl	11d18 <exit@plt>
   15f58:	push	{r4, r5, fp, lr}
   15f5c:	add	fp, sp, #8
   15f60:	sub	sp, sp, #8
   15f64:	mov	r5, r1
   15f68:	mov	r4, #7
   15f6c:	cmp	r0, #111	; 0x6f
   15f70:	ble	15f9c <__assert_fail@plt+0x4020>
   15f74:	cmp	r0, #112	; 0x70
   15f78:	beq	15fd4 <__assert_fail@plt+0x4058>
   15f7c:	cmp	r0, #256	; 0x100
   15f80:	beq	15ff0 <__assert_fail@plt+0x4074>
   15f84:	movw	r1, #257	; 0x101
   15f88:	cmp	r0, r1
   15f8c:	bne	16004 <__assert_fail@plt+0x4088>
   15f90:	movw	r0, #62644	; 0xf4b4
   15f94:	movt	r0, #2
   15f98:	b	15ff8 <__assert_fail@plt+0x407c>
   15f9c:	cmp	r0, #82	; 0x52
   15fa0:	beq	16010 <__assert_fail@plt+0x4094>
   15fa4:	cmp	r0, #100	; 0x64
   15fa8:	bne	16004 <__assert_fail@plt+0x4088>
   15fac:	movw	r0, #62400	; 0xf3c0
   15fb0:	mov	r1, #1
   15fb4:	movt	r0, #2
   15fb8:	strb	r1, [r0]
   15fbc:	movw	r0, #62972	; 0xf5fc
   15fc0:	movt	r0, #2
   15fc4:	ldr	r1, [r0]
   15fc8:	orr	r1, r1, #1
   15fcc:	str	r1, [r0]
   15fd0:	b	16000 <__assert_fail@plt+0x4084>
   15fd4:	cmp	r5, #0
   15fd8:	ldrbne	r0, [r5]
   15fdc:	cmpne	r0, #0
   15fe0:	bne	16054 <__assert_fail@plt+0x40d8>
   15fe4:	movw	r0, #62646	; 0xf4b6
   15fe8:	movt	r0, #2
   15fec:	b	15ff8 <__assert_fail@plt+0x407c>
   15ff0:	movw	r0, #62645	; 0xf4b5
   15ff4:	movt	r0, #2
   15ff8:	mov	r1, #1
   15ffc:	strb	r1, [r0]
   16000:	mov	r4, #0
   16004:	mov	r0, r4
   16008:	sub	sp, fp, #8
   1600c:	pop	{r4, r5, fp, pc}
   16010:	add	r1, sp, #4
   16014:	mov	r0, r5
   16018:	mov	r2, #0
   1601c:	mov	r4, #0
   16020:	bl	11ac0 <strtol@plt>
   16024:	cmp	r0, #1
   16028:	blt	1603c <__assert_fail@plt+0x40c0>
   1602c:	ldr	r1, [sp, #4]
   16030:	ldrb	r1, [r1]
   16034:	cmp	r1, #0
   16038:	beq	16064 <__assert_fail@plt+0x40e8>
   1603c:	movw	r1, #55415	; 0xd877
   16040:	mov	r0, #3
   16044:	mov	r2, r5
   16048:	movt	r1, #1
   1604c:	bl	11e68 <syslog@plt>
   16050:	b	16004 <__assert_fail@plt+0x4088>
   16054:	movw	r0, #62168	; 0xf2d8
   16058:	movt	r0, #2
   1605c:	str	r5, [r0]
   16060:	b	16000 <__assert_fail@plt+0x4084>
   16064:	movw	r1, #61896	; 0xf1c8
   16068:	movt	r1, #2
   1606c:	str	r0, [r1]
   16070:	b	16000 <__assert_fail@plt+0x4084>
   16074:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16078:	add	fp, sp, #28
   1607c:	sub	sp, sp, #20
   16080:	mov	sl, r3
   16084:	mov	r9, r2
   16088:	str	r1, [sp, #16]
   1608c:	mov	r7, r0
   16090:	bl	11d30 <strlen@plt>
   16094:	mov	r4, r0
   16098:	mov	r0, #0
   1609c:	sub	r5, r7, #1
   160a0:	str	r0, [r9]
   160a4:	str	r0, [sl]
   160a8:	cmp	r4, #1
   160ac:	blt	16378 <__assert_fail@plt+0x43fc>
   160b0:	bl	11d00 <__ctype_b_loc@plt>
   160b4:	ldrb	r1, [r5, r4]
   160b8:	ldr	r0, [r0]
   160bc:	sub	r4, r4, #1
   160c0:	add	r0, r0, r1, lsl #1
   160c4:	ldrb	r0, [r0, #1]
   160c8:	tst	r0, #32
   160cc:	bne	160a8 <__assert_fail@plt+0x412c>
   160d0:	add	r5, r4, #1
   160d4:	mov	r6, #0
   160d8:	mov	r8, #1
   160dc:	mov	r4, #1
   160e0:	b	1612c <__assert_fail@plt+0x41b0>
   160e4:	add	r1, r6, #1
   160e8:	mov	r6, r1
   160ec:	cmp	r1, r5
   160f0:	bge	16180 <__assert_fail@plt+0x4204>
   160f4:	ldrb	r1, [r7, r6]
   160f8:	sub	r0, r1, #9
   160fc:	cmp	r0, #25
   16100:	bhi	16114 <__assert_fail@plt+0x4198>
   16104:	movw	r2, #1
   16108:	movt	r2, #640	; 0x280
   1610c:	tst	r2, r8, lsl r0
   16110:	bne	16180 <__assert_fail@plt+0x4204>
   16114:	ldr	r0, [sp, #16]
   16118:	bl	11d48 <strchr@plt>
   1611c:	add	r1, r6, #1
   16120:	cmp	r0, #0
   16124:	beq	160e8 <__assert_fail@plt+0x416c>
   16128:	b	16180 <__assert_fail@plt+0x4204>
   1612c:	str	r4, [r9]
   16130:	cmp	r6, r5
   16134:	bge	16154 <__assert_fail@plt+0x41d8>
   16138:	ldrb	r0, [r7, r6]
   1613c:	cmp	r0, #32
   16140:	cmpne	r0, #9
   16144:	bne	16154 <__assert_fail@plt+0x41d8>
   16148:	add	r6, r6, #1
   1614c:	cmp	r6, r5
   16150:	blt	16138 <__assert_fail@plt+0x41bc>
   16154:	ldrb	r0, [r7, r6]
   16158:	cmp	r0, #39	; 0x27
   1615c:	cmpne	r0, #34	; 0x22
   16160:	bne	16188 <__assert_fail@plt+0x420c>
   16164:	add	r6, r6, #1
   16168:	ldrb	r1, [r7, r6]
   1616c:	cmp	r6, r5
   16170:	bge	1618c <__assert_fail@plt+0x4210>
   16174:	add	r6, r6, #1
   16178:	cmp	r1, r0
   1617c:	bne	16168 <__assert_fail@plt+0x41ec>
   16180:	sub	r6, r6, #1
   16184:	b	161a4 <__assert_fail@plt+0x4228>
   16188:	mov	r1, r0
   1618c:	cmp	r1, #34	; 0x22
   16190:	beq	161a4 <__assert_fail@plt+0x4228>
   16194:	ldr	r0, [sp, #16]
   16198:	bl	11d48 <strchr@plt>
   1619c:	cmp	r0, #0
   161a0:	beq	160e4 <__assert_fail@plt+0x4168>
   161a4:	add	r6, r6, #1
   161a8:	add	r4, r4, #1
   161ac:	cmp	r6, r5
   161b0:	blt	1612c <__assert_fail@plt+0x41b0>
   161b4:	mov	r0, r4
   161b8:	mov	r1, #4
   161bc:	bl	18048 <argp_parse@@Base+0x19b0>
   161c0:	str	r0, [sl]
   161c4:	mov	r2, #0
   161c8:	ldr	r1, [r9]
   161cc:	cmp	r1, #1
   161d0:	blt	16380 <__assert_fail@plt+0x4404>
   161d4:	str	r9, [sp, #4]
   161d8:	mov	r1, #0
   161dc:	mov	r9, #0
   161e0:	str	sl, [sp, #8]
   161e4:	cmp	r9, r5
   161e8:	blt	161fc <__assert_fail@plt+0x4280>
   161ec:	b	1620c <__assert_fail@plt+0x4290>
   161f0:	add	r9, r9, #1
   161f4:	cmp	r9, r5
   161f8:	bge	1620c <__assert_fail@plt+0x4290>
   161fc:	ldrb	r0, [r7, r9]
   16200:	cmp	r0, #32
   16204:	cmpne	r0, #9
   16208:	beq	161f0 <__assert_fail@plt+0x4274>
   1620c:	ldrb	r4, [r7, r9]
   16210:	str	r1, [sp, #12]
   16214:	cmp	r4, #39	; 0x27
   16218:	beq	1622c <__assert_fail@plt+0x42b0>
   1621c:	cmp	r4, #34	; 0x22
   16220:	mov	r1, r4
   16224:	mov	r8, r9
   16228:	bne	16264 <__assert_fail@plt+0x42e8>
   1622c:	add	r8, r9, #1
   16230:	ldrb	r1, [r7, r8]
   16234:	cmp	r8, r5
   16238:	bge	16264 <__assert_fail@plt+0x42e8>
   1623c:	add	r8, r8, #1
   16240:	cmp	r1, r4
   16244:	bne	16230 <__assert_fail@plt+0x42b4>
   16248:	sub	r8, r8, #1
   1624c:	cmp	r4, #39	; 0x27
   16250:	bne	16284 <__assert_fail@plt+0x4308>
   16254:	ldrb	r0, [r7, r8]
   16258:	cmp	r0, #39	; 0x27
   1625c:	bne	162a4 <__assert_fail@plt+0x4328>
   16260:	b	16298 <__assert_fail@plt+0x431c>
   16264:	cmp	r1, #34	; 0x22
   16268:	beq	1627c <__assert_fail@plt+0x4300>
   1626c:	ldr	r0, [sp, #16]
   16270:	bl	11d48 <strchr@plt>
   16274:	cmp	r0, #0
   16278:	beq	16320 <__assert_fail@plt+0x43a4>
   1627c:	cmp	r4, #39	; 0x27
   16280:	beq	16254 <__assert_fail@plt+0x42d8>
   16284:	cmp	r4, #34	; 0x22
   16288:	bne	162a4 <__assert_fail@plt+0x4328>
   1628c:	ldrb	r0, [r7, r8]
   16290:	cmp	r0, #34	; 0x22
   16294:	bne	162a4 <__assert_fail@plt+0x4328>
   16298:	sub	r0, r8, #1
   1629c:	add	r9, r9, #1
   162a0:	b	162a8 <__assert_fail@plt+0x432c>
   162a4:	mov	r0, r8
   162a8:	sub	sl, r0, r9
   162ac:	mov	r1, #1
   162b0:	mov	r4, #1
   162b4:	add	r0, sl, #2
   162b8:	bl	18048 <argp_parse@@Base+0x19b0>
   162bc:	ldr	r6, [sp, #8]
   162c0:	ldr	r2, [sp, #12]
   162c4:	ldr	r1, [r6]
   162c8:	str	r0, [r1, r2, lsl #2]
   162cc:	ldr	r0, [r6]
   162d0:	ldr	r0, [r0, r2, lsl #2]
   162d4:	cmp	r0, #0
   162d8:	beq	16398 <__assert_fail@plt+0x441c>
   162dc:	mov	r1, r9
   162e0:	add	r4, sl, #1
   162e4:	add	r9, r8, #1
   162e8:	add	r1, r7, r1
   162ec:	mov	r2, r4
   162f0:	bl	11b68 <memcpy@plt>
   162f4:	ldr	r1, [sp, #12]
   162f8:	ldr	r0, [r6]
   162fc:	mov	r2, #0
   16300:	ldr	r0, [r0, r1, lsl #2]
   16304:	add	r1, r1, #1
   16308:	strb	r2, [r0, r4]
   1630c:	ldr	r0, [sp, #4]
   16310:	ldr	r0, [r0]
   16314:	cmp	r1, r0
   16318:	blt	161f4 <__assert_fail@plt+0x4278>
   1631c:	b	16388 <__assert_fail@plt+0x440c>
   16320:	add	r1, r8, #1
   16324:	mov	r6, r1
   16328:	cmp	r1, r5
   1632c:	bge	16368 <__assert_fail@plt+0x43ec>
   16330:	ldrb	r1, [r7, r6]
   16334:	sub	r0, r1, #9
   16338:	cmp	r0, #25
   1633c:	bhi	16354 <__assert_fail@plt+0x43d8>
   16340:	movw	r2, #1
   16344:	mov	r3, #1
   16348:	movt	r2, #640	; 0x280
   1634c:	tst	r2, r3, lsl r0
   16350:	bne	16368 <__assert_fail@plt+0x43ec>
   16354:	ldr	r0, [sp, #16]
   16358:	bl	11d48 <strchr@plt>
   1635c:	add	r1, r6, #1
   16360:	cmp	r0, #0
   16364:	beq	16324 <__assert_fail@plt+0x43a8>
   16368:	sub	r8, r6, #1
   1636c:	cmp	r4, #39	; 0x27
   16370:	bne	16284 <__assert_fail@plt+0x4308>
   16374:	b	16254 <__assert_fail@plt+0x42d8>
   16378:	mov	r4, #1
   1637c:	b	16398 <__assert_fail@plt+0x441c>
   16380:	mov	r1, #0
   16384:	b	16390 <__assert_fail@plt+0x4414>
   16388:	ldr	r0, [r6]
   1638c:	mov	r2, #0
   16390:	mov	r4, #0
   16394:	str	r2, [r0, r1, lsl #2]
   16398:	mov	r0, r4
   1639c:	sub	sp, fp, #28
   163a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163a4:	push	{r4, r5, r6, sl, fp, lr}
   163a8:	add	fp, sp, #16
   163ac:	mov	r4, r1
   163b0:	cmp	r0, #1
   163b4:	blt	163d0 <__assert_fail@plt+0x4454>
   163b8:	mov	r5, r0
   163bc:	sub	r6, r4, #4
   163c0:	ldr	r0, [r6, r5, lsl #2]
   163c4:	bl	17968 <argp_parse@@Base+0x12d0>
   163c8:	subs	r5, r5, #1
   163cc:	bgt	163c0 <__assert_fail@plt+0x4444>
   163d0:	mov	r0, r4
   163d4:	bl	17968 <argp_parse@@Base+0x12d0>
   163d8:	mov	r0, #1
   163dc:	pop	{r4, r5, r6, sl, fp, pc}
   163e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163e4:	add	fp, sp, #28
   163e8:	sub	sp, sp, #4
   163ec:	cmp	r2, #0
   163f0:	beq	164dc <__assert_fail@plt+0x4560>
   163f4:	mov	r4, r0
   163f8:	mov	r0, #1
   163fc:	mov	r5, r2
   16400:	mov	r7, r1
   16404:	bl	1809c <argp_parse@@Base+0x1a04>
   16408:	cmp	r0, #0
   1640c:	beq	164dc <__assert_fail@plt+0x4560>
   16410:	mov	r9, #0
   16414:	mov	r6, r0
   16418:	cmp	r4, #1
   1641c:	strb	r9, [r0]
   16420:	blt	164d4 <__assert_fail@plt+0x4558>
   16424:	str	r5, [sp]
   16428:	mov	r5, #0
   1642c:	mov	sl, #32
   16430:	mov	r8, #0
   16434:	ldr	r0, [r7, r8, lsl #2]
   16438:	bl	11d30 <strlen@plt>
   1643c:	add	r0, r5, r0
   16440:	add	r5, r0, #2
   16444:	mov	r0, r6
   16448:	mov	r1, r5
   1644c:	bl	180cc <argp_parse@@Base+0x1a34>
   16450:	cmp	r0, #0
   16454:	beq	164dc <__assert_fail@plt+0x4560>
   16458:	mov	r6, r0
   1645c:	cmp	r8, #0
   16460:	beq	16474 <__assert_fail@plt+0x44f8>
   16464:	mov	r0, r6
   16468:	bl	11d30 <strlen@plt>
   1646c:	add	r0, r6, r0
   16470:	strh	sl, [r0]
   16474:	ldr	r1, [r7, r8, lsl #2]
   16478:	mov	r0, r6
   1647c:	bl	11c64 <strcat@plt>
   16480:	add	r8, r8, #1
   16484:	cmp	r8, r4
   16488:	blt	16434 <__assert_fail@plt+0x44b8>
   1648c:	ldrb	r0, [r6]
   16490:	ldr	r5, [sp]
   16494:	cmp	r0, #0
   16498:	beq	164d4 <__assert_fail@plt+0x4558>
   1649c:	mov	r0, r6
   164a0:	bl	11d30 <strlen@plt>
   164a4:	add	r0, r6, r0
   164a8:	ldrb	r1, [r0, #-1]!
   164ac:	cmp	r1, #32
   164b0:	bne	164d4 <__assert_fail@plt+0x4558>
   164b4:	mov	r4, #0
   164b8:	strb	r4, [r0]
   164bc:	mov	r0, r6
   164c0:	bl	11d30 <strlen@plt>
   164c4:	add	r0, r6, r0
   164c8:	ldrb	r1, [r0, #-1]!
   164cc:	cmp	r1, #32
   164d0:	beq	164b8 <__assert_fail@plt+0x453c>
   164d4:	str	r6, [r5]
   164d8:	b	164e0 <__assert_fail@plt+0x4564>
   164dc:	mov	r9, #1
   164e0:	mov	r0, r9
   164e4:	sub	sp, fp, #28
   164e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   164ec:	push	{r4, sl, fp, lr}
   164f0:	add	fp, sp, #8
   164f4:	mov	r0, #0
   164f8:	bl	11be0 <alarm@plt>
   164fc:	mov	r4, r0
   16500:	mov	r0, #14
   16504:	mov	r1, #0
   16508:	bl	11b74 <signal@plt>
   1650c:	cmp	r4, #0
   16510:	popne	{r4, sl, fp, pc}
   16514:	movw	r2, #55489	; 0xd8c1
   16518:	mov	r0, #1
   1651c:	mov	r1, #0
   16520:	movt	r2, #1
   16524:	pop	{r4, sl, fp, lr}
   16528:	b	11c7c <error@plt>
   1652c:	push	{r4, r5, r6, r7, fp, lr}
   16530:	add	fp, sp, #16
   16534:	mov	r7, r2
   16538:	mov	r5, r1
   1653c:	mov	r6, r0
   16540:	bl	11d0c <getpid@plt>
   16544:	mov	r4, r0
   16548:	bl	11e20 <fork@plt>
   1654c:	cmn	r0, #1
   16550:	beq	1664c <__assert_fail@plt+0x46d0>
   16554:	cmp	r0, #0
   16558:	bne	16650 <__assert_fail@plt+0x46d4>
   1655c:	bl	11d3c <setsid@plt>
   16560:	mov	r1, r0
   16564:	mvn	r0, #0
   16568:	cmn	r1, #1
   1656c:	beq	1664c <__assert_fail@plt+0x46d0>
   16570:	mov	r0, #1
   16574:	mov	r1, #1
   16578:	bl	11b74 <signal@plt>
   1657c:	bl	11e20 <fork@plt>
   16580:	cmn	r0, #1
   16584:	beq	1664c <__assert_fail@plt+0x46d0>
   16588:	cmp	r0, #0
   1658c:	bne	16674 <__assert_fail@plt+0x46f8>
   16590:	cmp	r6, #0
   16594:	beq	165a4 <__assert_fail@plt+0x4628>
   16598:	cmp	r5, #0
   1659c:	bne	16648 <__assert_fail@plt+0x46cc>
   165a0:	b	165c4 <__assert_fail@plt+0x4648>
   165a4:	movw	r0, #56928	; 0xde60
   165a8:	movt	r0, #1
   165ac:	bl	11c1c <chdir@plt>
   165b0:	cmp	r0, #0
   165b4:	mvn	r0, #0
   165b8:	poplt	{r4, r5, r6, r7, fp, pc}
   165bc:	cmp	r5, #0
   165c0:	bne	16648 <__assert_fail@plt+0x46cc>
   165c4:	mov	r0, #4
   165c8:	bl	11bec <sysconf@plt>
   165cc:	mov	r5, r0
   165d0:	cmn	r0, #1
   165d4:	movweq	r5, #64	; 0x40
   165d8:	cmp	r5, #1
   165dc:	blt	165f8 <__assert_fail@plt+0x467c>
   165e0:	mov	r6, #0
   165e4:	mov	r0, r6
   165e8:	bl	11f4c <close@plt>
   165ec:	add	r6, r6, #1
   165f0:	cmp	r5, r6
   165f4:	bne	165e4 <__assert_fail@plt+0x4668>
   165f8:	movw	r0, #55517	; 0xd8dd
   165fc:	mov	r1, #2
   16600:	mov	r2, #0
   16604:	movt	r0, #1
   16608:	bl	11c94 <open64@plt>
   1660c:	cmn	r0, #1
   16610:	beq	16648 <__assert_fail@plt+0x46cc>
   16614:	mov	r1, #0
   16618:	mov	r5, r0
   1661c:	bl	11bf8 <dup2@plt>
   16620:	mov	r0, r5
   16624:	mov	r1, #1
   16628:	bl	11bf8 <dup2@plt>
   1662c:	mov	r0, r5
   16630:	mov	r1, #2
   16634:	bl	11bf8 <dup2@plt>
   16638:	cmp	r5, #3
   1663c:	blt	16648 <__assert_fail@plt+0x46cc>
   16640:	mov	r0, r5
   16644:	bl	11f4c <close@plt>
   16648:	mov	r0, r4
   1664c:	pop	{r4, r5, r6, r7, fp, pc}
   16650:	cmp	r7, #1
   16654:	blt	16674 <__assert_fail@plt+0x46f8>
   16658:	movw	r1, #25836	; 0x64ec
   1665c:	mov	r0, #14
   16660:	movt	r1, #1
   16664:	bl	11b74 <signal@plt>
   16668:	mov	r0, r7
   1666c:	bl	11be0 <alarm@plt>
   16670:	bl	11ae4 <pause@plt>
   16674:	mov	r0, #0
   16678:	bl	11b5c <_exit@plt>

0001667c <daemon@@Base>:
   1667c:	push	{fp, lr}
   16680:	mov	fp, sp
   16684:	mov	r2, #0
   16688:	bl	1652c <__assert_fail@plt+0x45b0>
   1668c:	cmn	r0, #1
   16690:	movwne	r0, #0
   16694:	pop	{fp, pc}

00016698 <argp_parse@@Base>:
   16698:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1669c:	add	fp, sp, #28
   166a0:	sub	sp, sp, #212	; 0xd4
   166a4:	mov	r5, r3
   166a8:	mov	r6, r2
   166ac:	mov	r7, r1
   166b0:	mov	r4, r0
   166b4:	tst	r3, #1
   166b8:	bne	166f4 <argp_parse@@Base+0x5c>
   166bc:	movw	r0, #62380	; 0xf3ac
   166c0:	movw	r8, #62376	; 0xf3a8
   166c4:	movt	r0, #2
   166c8:	movt	r8, #2
   166cc:	ldr	r1, [r0]
   166d0:	cmp	r1, #0
   166d4:	ldreq	r1, [r6]
   166d8:	streq	r1, [r0]
   166dc:	ldr	r0, [r8]
   166e0:	cmp	r0, #0
   166e4:	bne	166f4 <argp_parse@@Base+0x5c>
   166e8:	ldr	r0, [r6]
   166ec:	bl	178e4 <argp_parse@@Base+0x124c>
   166f0:	str	r0, [r8]
   166f4:	tst	r5, #16
   166f8:	str	r6, [fp, #-228]	; 0xffffff1c
   166fc:	bne	167a8 <argp_parse@@Base+0x110>
   16700:	mov	r1, sp
   16704:	sub	r3, r1, #64	; 0x40
   16708:	mov	sp, r3
   1670c:	mov	r2, sp
   16710:	sub	r0, r2, #32
   16714:	mov	sp, r0
   16718:	vmov.i32	q8, #0	; 0x00000000
   1671c:	sub	r2, r2, #20
   16720:	cmp	r4, #0
   16724:	vst1.32	{d16-d17}, [r2]
   16728:	mov	r2, r0
   1672c:	vst1.64	{d16-d17}, [r2]!
   16730:	str	r3, [r2]
   16734:	sub	r2, r1, #32
   16738:	sub	r1, r1, #48	; 0x30
   1673c:	vst1.64	{d16-d17}, [r2]
   16740:	vst1.64	{d16-d17}, [r1]
   16744:	mov	r1, #48	; 0x30
   16748:	mov	r2, r3
   1674c:	vst1.64	{d16-d17}, [r2], r1
   16750:	vst1.64	{d16-d17}, [r2]
   16754:	movw	r2, #55528	; 0xd8e8
   16758:	strne	r4, [r3], #16
   1675c:	movt	r2, #1
   16760:	mov	r1, r3
   16764:	str	r2, [r1], #16
   16768:	movw	r2, #63012	; 0xf624
   1676c:	movt	r2, #2
   16770:	ldr	r2, [r2]
   16774:	cmp	r2, #0
   16778:	movweq	r2, #62652	; 0xf4bc
   1677c:	movteq	r2, #2
   16780:	ldreq	r2, [r2]
   16784:	cmpeq	r2, #0
   16788:	beq	1679c <argp_parse@@Base+0x104>
   1678c:	movw	r2, #55556	; 0xd904
   16790:	mov	r3, r1
   16794:	movt	r2, #1
   16798:	str	r2, [r1]
   1679c:	mov	r1, #0
   167a0:	str	r1, [r3, #16]
   167a4:	b	167ac <argp_parse@@Base+0x114>
   167a8:	mov	r0, r4
   167ac:	sub	r9, fp, #96	; 0x60
   167b0:	str	r7, [fp, #-232]	; 0xffffff18
   167b4:	vmov.i32	q8, #0	; 0x00000000
   167b8:	mov	r7, #12
   167bc:	mov	r4, #0
   167c0:	cmp	r0, #0
   167c4:	str	r5, [fp, #-224]	; 0xffffff20
   167c8:	str	r0, [fp, #-236]	; 0xffffff14
   167cc:	mov	r1, r9
   167d0:	vst1.64	{d16-d17}, [r1], r7
   167d4:	vst1.32	{d16-d17}, [r1]
   167d8:	mov	r1, #1
   167dc:	bic	r3, r1, r5, lsr #2
   167e0:	str	r3, [fp, #-64]	; 0xffffffc0
   167e4:	str	r4, [fp, #-60]	; 0xffffffc4
   167e8:	str	r4, [fp, #-56]	; 0xffffffc8
   167ec:	str	r4, [fp, #-52]	; 0xffffffcc
   167f0:	beq	16828 <argp_parse@@Base+0x190>
   167f4:	sub	r1, fp, #64	; 0x40
   167f8:	bl	174c4 <argp_parse@@Base+0xe2c>
   167fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16800:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16804:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16808:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1680c:	mov	r6, #16
   16810:	add	r1, r6, r1, lsl #4
   16814:	add	r2, r2, r2, lsl #3
   16818:	mov	r6, #36	; 0x24
   1681c:	lsl	r4, r0, #2
   16820:	add	r8, r6, r2, lsl #2
   16824:	b	16830 <argp_parse@@Base+0x198>
   16828:	mov	r8, #36	; 0x24
   1682c:	mov	r1, #16
   16830:	add	r5, r8, r4
   16834:	add	sl, r5, r1
   16838:	add	r0, r3, sl
   1683c:	add	r0, r0, #1
   16840:	bl	1809c <argp_parse@@Base+0x1a04>
   16844:	cmp	r0, #0
   16848:	str	r0, [fp, #-100]	; 0xffffff9c
   1684c:	beq	1725c <argp_parse@@Base+0xbc4>
   16850:	mov	r6, r0
   16854:	mov	r0, #12
   16858:	sub	r1, fp, #220	; 0xdc
   1685c:	mov	r2, r4
   16860:	vld1.64	{d16-d17}, [r9], r0
   16864:	add	r0, r1, #20
   16868:	add	r7, r6, r8
   1686c:	add	r8, r6, r5
   16870:	add	r5, r6, sl
   16874:	vld1.32	{d18-d19}, [r9]
   16878:	vst1.32	{d16-d17}, [r0]
   1687c:	add	r0, r1, #32
   16880:	mov	r9, r1
   16884:	mov	r1, #0
   16888:	vst1.32	{d18-d19}, [r0]
   1688c:	mov	r0, #1
   16890:	str	r6, [fp, #-172]	; 0xffffff54
   16894:	str	r0, [fp, #-208]	; 0xffffff30
   16898:	str	r0, [fp, #-204]	; 0xffffff34
   1689c:	mov	r0, r7
   168a0:	str	r7, [fp, #-164]	; 0xffffff5c
   168a4:	str	r8, [fp, #-212]	; 0xffffff2c
   168a8:	str	r5, [fp, #-216]	; 0xffffff28
   168ac:	bl	11da8 <memset@plt>
   168b0:	str	r5, [fp, #-44]	; 0xffffffd4
   168b4:	str	r9, [fp, #-48]	; 0xffffffd0
   168b8:	ldr	r9, [fp, #-224]	; 0xffffff20
   168bc:	mov	r0, #45	; 0x2d
   168c0:	str	r8, [fp, #-40]	; 0xffffffd8
   168c4:	str	r7, [fp, #-36]	; 0xffffffdc
   168c8:	tst	r9, #8
   168cc:	moveq	r0, #43	; 0x2b
   168d0:	tsteq	r9, #4
   168d4:	beq	16ea4 <argp_parse@@Base+0x80c>
   168d8:	add	r1, r5, #1
   168dc:	strb	r0, [r5]
   168e0:	str	r1, [fp, #-44]	; 0xffffffd4
   168e4:	ldr	r0, [fp, #-236]	; 0xffffff14
   168e8:	ldr	sl, [fp, #-228]	; 0xffffff1c
   168ec:	mov	r5, #0
   168f0:	strb	r5, [r1]
   168f4:	str	r5, [r8]
   168f8:	cmp	r0, #0
   168fc:	str	r0, [fp, #-220]	; 0xffffff24
   16900:	beq	16938 <argp_parse@@Base+0x2a0>
   16904:	sub	sp, sp, #8
   16908:	sub	r1, fp, #48	; 0x30
   1690c:	mov	r2, #0
   16910:	mov	r3, r6
   16914:	str	r1, [sp]
   16918:	mov	r1, #0
   1691c:	bl	175a0 <argp_parse@@Base+0xf08>
   16920:	add	sp, sp, #8
   16924:	str	r0, [fp, #-168]	; 0xffffff58
   16928:	mov	r6, r0
   1692c:	ldr	r5, [fp, #-220]	; 0xffffff24
   16930:	ldr	r4, [fp, #-172]	; 0xffffff54
   16934:	b	16940 <argp_parse@@Base+0x2a8>
   16938:	mov	r4, r6
   1693c:	str	r6, [fp, #-168]	; 0xffffff58
   16940:	ldr	r3, [fp, #-232]	; 0xffffff18
   16944:	sub	r1, fp, #220	; 0xdc
   16948:	mov	r7, #0
   1694c:	vmov.i32	q8, #0	; 0x00000000
   16950:	mov	r0, #1
   16954:	mov	r8, sl
   16958:	cmp	r4, r6
   1695c:	mov	r2, r1
   16960:	add	r1, r1, #84	; 0x54
   16964:	str	r7, [fp, #-116]	; 0xffffff8c
   16968:	str	r7, [fp, #-120]	; 0xffffff88
   1696c:	vst1.32	{d16-d17}, [r1]
   16970:	str	r5, [fp, #-156]	; 0xffffff64
   16974:	str	r3, [fp, #-152]	; 0xffffff68
   16978:	str	sl, [fp, #-148]	; 0xffffff6c
   1697c:	str	r9, [fp, #-140]	; 0xffffff74
   16980:	str	r7, [fp, #-144]	; 0xffffff70
   16984:	str	r2, [fp, #-104]	; 0xffffff98
   16988:	str	r0, [fp, #-160]	; 0xffffff60
   1698c:	movw	r0, #62384	; 0xf3b0
   16990:	add	sl, r2, #64	; 0x40
   16994:	movt	r0, #2
   16998:	ldr	r0, [r0]
   1699c:	str	r0, [fp, #-112]	; 0xffffff90
   169a0:	movw	r0, #62388	; 0xf3b4
   169a4:	movt	r0, #2
   169a8:	ldr	r0, [r0]
   169ac:	str	r0, [fp, #-108]	; 0xffffff94
   169b0:	bcs	16a94 <argp_parse@@Base+0x3fc>
   169b4:	ldr	r0, [fp, #12]
   169b8:	str	r0, [r4, #24]
   169bc:	cmp	r7, #7
   169c0:	cmpne	r7, #0
   169c4:	bne	1725c <argp_parse@@Base+0xbc4>
   169c8:	ldr	r0, [r4, #16]
   169cc:	cmp	r0, #0
   169d0:	ldrne	r1, [r4, #20]
   169d4:	ldrne	r0, [r0, #28]
   169d8:	ldrne	r0, [r0, r1, lsl #2]
   169dc:	strne	r0, [r4, #24]
   169e0:	ldr	r3, [r4]
   169e4:	cmp	r3, #0
   169e8:	beq	16a38 <argp_parse@@Base+0x3a0>
   169ec:	add	r0, r4, #28
   169f0:	ldr	r1, [r4, #32]
   169f4:	mov	r2, sl
   169f8:	str	r1, [fp, #-120]	; 0xffffff88
   169fc:	ldr	r1, [r4, #24]
   16a00:	str	r1, [fp, #-128]	; 0xffffff80
   16a04:	mov	r1, #0
   16a08:	ldr	r0, [r0]
   16a0c:	str	r0, [fp, #-124]	; 0xffffff84
   16a10:	ldr	r0, [r4, #12]
   16a14:	str	r0, [fp, #-136]	; 0xffffff78
   16a18:	movw	r0, #6
   16a1c:	movt	r0, #256	; 0x100
   16a20:	sub	r0, r0, #3
   16a24:	blx	r3
   16a28:	mov	r7, r0
   16a2c:	ldr	r0, [fp, #-120]	; 0xffffff88
   16a30:	str	r0, [r4, #32]
   16a34:	b	16a54 <argp_parse@@Base+0x3bc>
   16a38:	ldr	r0, [r4, #4]
   16a3c:	mov	r7, #7
   16a40:	ldr	r0, [r0, #16]
   16a44:	cmp	r0, #0
   16a48:	ldrne	r0, [r0]
   16a4c:	cmpne	r0, #0
   16a50:	bne	16a68 <argp_parse@@Base+0x3d0>
   16a54:	ldr	r0, [fp, #-168]	; 0xffffff58
   16a58:	add	r4, r4, #36	; 0x24
   16a5c:	cmp	r4, r0
   16a60:	bcc	169bc <argp_parse@@Base+0x324>
   16a64:	b	16a88 <argp_parse@@Base+0x3f0>
   16a68:	mov	r0, r4
   16a6c:	ldr	r2, [r4, #24]
   16a70:	ldr	r1, [r0, #28]!
   16a74:	str	r2, [r1]
   16a78:	ldr	r3, [r4]
   16a7c:	cmp	r3, #0
   16a80:	bne	169f0 <argp_parse@@Base+0x358>
   16a84:	b	16a54 <argp_parse@@Base+0x3bc>
   16a88:	cmp	r7, #7
   16a8c:	cmpne	r7, #0
   16a90:	bne	1725c <argp_parse@@Base+0xbc4>
   16a94:	ldr	r0, [fp, #-140]	; 0xffffff74
   16a98:	tst	r0, #2
   16a9c:	bne	16aac <argp_parse@@Base+0x414>
   16aa0:	mov	r0, #1
   16aa4:	str	r0, [fp, #-204]	; 0xffffff34
   16aa8:	b	16ad4 <argp_parse@@Base+0x43c>
   16aac:	mov	r1, #0
   16ab0:	tst	r0, #1
   16ab4:	str	r1, [fp, #-204]	; 0xffffff34
   16ab8:	beq	16ad4 <argp_parse@@Base+0x43c>
   16abc:	ldr	r0, [fp, #-152]	; 0xffffff68
   16ac0:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16ac4:	sub	r1, r1, #4
   16ac8:	add	r0, r0, #1
   16acc:	str	r1, [fp, #-148]	; 0xffffff6c
   16ad0:	str	r0, [fp, #-152]	; 0xffffff68
   16ad4:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16ad8:	cmp	r0, r8
   16adc:	beq	16af0 <argp_parse@@Base+0x458>
   16ae0:	movw	r0, #62376	; 0xf3a8
   16ae4:	movt	r0, #2
   16ae8:	ldr	r0, [r0]
   16aec:	b	16b00 <argp_parse@@Base+0x468>
   16af0:	ldr	r0, [r8]
   16af4:	cmp	r0, #0
   16af8:	beq	16ae0 <argp_parse@@Base+0x448>
   16afc:	bl	178e4 <argp_parse@@Base+0x124c>
   16b00:	str	r0, [fp, #-116]	; 0xffffff8c
   16b04:	sub	r0, fp, #220	; 0xdc
   16b08:	mov	r8, #0
   16b0c:	add	r6, r0, #12
   16b10:	ldr	r0, [fp, #-132]	; 0xffffff7c
   16b14:	cmp	r0, #0
   16b18:	beq	16b2c <argp_parse@@Base+0x494>
   16b1c:	ldr	r9, [fp, #-144]	; 0xffffff70
   16b20:	cmp	r9, r0
   16b24:	bge	16be0 <argp_parse@@Base+0x548>
   16b28:	str	r8, [fp, #-132]	; 0xffffff7c
   16b2c:	ldr	r0, [fp, #-160]	; 0xffffff60
   16b30:	ldr	r9, [fp, #-144]	; 0xffffff70
   16b34:	cmp	r0, #0
   16b38:	beq	16be0 <argp_parse@@Base+0x548>
   16b3c:	mvn	r0, #0
   16b40:	str	r0, [fp, #-200]	; 0xffffff38
   16b44:	str	r9, [fp, #-208]	; 0xffffff30
   16b48:	ldr	r2, [fp, #-216]	; 0xffffff28
   16b4c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   16b50:	ldr	r0, [fp, #-152]	; 0xffffff68
   16b54:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16b58:	ldrb	r7, [fp, #-140]	; 0xffffff74
   16b5c:	sub	sp, sp, #8
   16b60:	tst	r7, #64	; 0x40
   16b64:	bne	16b78 <argp_parse@@Base+0x4e0>
   16b68:	str	r8, [sp]
   16b6c:	str	r6, [sp, #4]
   16b70:	bl	179bc <argp_parse@@Base+0x1324>
   16b74:	b	16b84 <argp_parse@@Base+0x4ec>
   16b78:	str	r8, [sp]
   16b7c:	str	r6, [sp, #4]
   16b80:	bl	17a20 <argp_parse@@Base+0x1388>
   16b84:	add	sp, sp, #8
   16b88:	ldr	r9, [fp, #-208]	; 0xffffff30
   16b8c:	mov	r7, r0
   16b90:	cmn	r0, #1
   16b94:	str	r9, [fp, #-144]	; 0xffffff70
   16b98:	beq	16bb4 <argp_parse@@Base+0x51c>
   16b9c:	cmp	r7, #63	; 0x3f
   16ba0:	beq	16d7c <argp_parse@@Base+0x6e4>
   16ba4:	cmp	r7, #1
   16ba8:	bne	16d8c <argp_parse@@Base+0x6f4>
   16bac:	ldr	r7, [fp, #-196]	; 0xffffff3c
   16bb0:	b	16c18 <argp_parse@@Base+0x580>
   16bb4:	cmp	r9, #2
   16bb8:	str	r8, [fp, #-160]	; 0xffffff60
   16bbc:	blt	16be0 <argp_parse@@Base+0x548>
   16bc0:	ldr	r0, [fp, #-148]	; 0xffffff6c
   16bc4:	movw	r1, #56011	; 0xdacb
   16bc8:	movt	r1, #1
   16bcc:	add	r0, r0, r9, lsl #2
   16bd0:	ldr	r0, [r0, #-4]
   16bd4:	bl	11ab4 <strcmp@plt>
   16bd8:	cmp	r0, #0
   16bdc:	streq	r9, [fp, #-132]	; 0xffffff7c
   16be0:	ldr	r2, [fp, #-152]	; 0xffffff68
   16be4:	mov	r1, #1
   16be8:	mov	r0, #7
   16bec:	cmp	r9, r2
   16bf0:	bge	16ef4 <argp_parse@@Base+0x85c>
   16bf4:	ldrb	r2, [fp, #-140]	; 0xffffff74
   16bf8:	tst	r2, #4
   16bfc:	bne	16ef4 <argp_parse@@Base+0x85c>
   16c00:	add	r0, r9, #1
   16c04:	str	r0, [fp, #-144]	; 0xffffff70
   16c08:	ldr	r1, [fp, #-148]	; 0xffffff6c
   16c0c:	ldr	r7, [r1, r9, lsl #2]
   16c10:	mov	r9, r0
   16c14:	str	r7, [fp, #-196]	; 0xffffff3c
   16c18:	sub	r0, r9, #1
   16c1c:	str	r0, [fp, #-144]	; 0xffffff70
   16c20:	ldr	r1, [fp, #-172]	; 0xffffff54
   16c24:	ldr	r2, [fp, #-168]	; 0xffffff58
   16c28:	cmp	r1, r2
   16c2c:	bcs	16eac <argp_parse@@Base+0x814>
   16c30:	add	r4, r1, #24
   16c34:	b	16c40 <argp_parse@@Base+0x5a8>
   16c38:	ldr	r0, [fp, #-144]	; 0xffffff70
   16c3c:	add	r4, r4, #36	; 0x24
   16c40:	add	r1, r0, #1
   16c44:	str	r1, [fp, #-144]	; 0xffffff70
   16c48:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16c4c:	cmp	r3, #0
   16c50:	beq	16cf0 <argp_parse@@Base+0x658>
   16c54:	ldr	r0, [r4, #8]
   16c58:	mov	r1, r7
   16c5c:	mov	r2, sl
   16c60:	mov	r5, #0
   16c64:	str	r0, [fp, #-120]	; 0xffffff88
   16c68:	ldr	r0, [r4]
   16c6c:	str	r0, [fp, #-128]	; 0xffffff80
   16c70:	ldr	r0, [r4, #4]
   16c74:	str	r0, [fp, #-124]	; 0xffffff84
   16c78:	ldr	r0, [r4, #-12]
   16c7c:	str	r0, [fp, #-136]	; 0xffffff78
   16c80:	mov	r0, #0
   16c84:	blx	r3
   16c88:	ldr	r1, [fp, #-120]	; 0xffffff88
   16c8c:	cmp	r0, #7
   16c90:	str	r1, [r4, #8]
   16c94:	bne	16d18 <argp_parse@@Base+0x680>
   16c98:	ldr	r0, [fp, #-144]	; 0xffffff70
   16c9c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16ca0:	sub	r0, r0, #1
   16ca4:	cmp	r3, #0
   16ca8:	str	r0, [fp, #-144]	; 0xffffff70
   16cac:	beq	16cf4 <argp_parse@@Base+0x65c>
   16cb0:	ldr	r0, [r4]
   16cb4:	mov	r1, #0
   16cb8:	mov	r2, sl
   16cbc:	str	r0, [fp, #-128]	; 0xffffff80
   16cc0:	ldr	r0, [r4, #4]
   16cc4:	str	r0, [fp, #-124]	; 0xffffff84
   16cc8:	ldr	r0, [r4, #-12]
   16ccc:	str	r0, [fp, #-136]	; 0xffffff78
   16cd0:	movw	r0, #6
   16cd4:	movt	r0, #256	; 0x100
   16cd8:	blx	r3
   16cdc:	ldr	r1, [fp, #-120]	; 0xffffff88
   16ce0:	str	r1, [r4, #8]
   16ce4:	cmp	r0, #7
   16ce8:	beq	16d00 <argp_parse@@Base+0x668>
   16cec:	b	16d10 <argp_parse@@Base+0x678>
   16cf0:	str	r0, [fp, #-144]	; 0xffffff70
   16cf4:	mov	r0, #7
   16cf8:	cmp	r0, #7
   16cfc:	bne	16d10 <argp_parse@@Base+0x678>
   16d00:	ldr	r2, [fp, #-168]	; 0xffffff58
   16d04:	add	r1, r4, #12
   16d08:	cmp	r1, r2
   16d0c:	bcc	16c38 <argp_parse@@Base+0x5a0>
   16d10:	movw	r5, #6
   16d14:	movt	r5, #256	; 0x100
   16d18:	cmp	r0, #0
   16d1c:	beq	16d2c <argp_parse@@Base+0x694>
   16d20:	cmp	r0, #7
   16d24:	bne	16e94 <argp_parse@@Base+0x7fc>
   16d28:	b	16eac <argp_parse@@Base+0x814>
   16d2c:	movw	r0, #6
   16d30:	movt	r0, #256	; 0x100
   16d34:	cmp	r5, r0
   16d38:	ldreq	r0, [fp, #-152]	; 0xffffff68
   16d3c:	streq	r0, [fp, #-144]	; 0xffffff70
   16d40:	ldrne	r0, [fp, #-144]	; 0xffffff70
   16d44:	cmp	r0, r9
   16d48:	bge	16d58 <argp_parse@@Base+0x6c0>
   16d4c:	mov	r0, #1
   16d50:	str	r0, [fp, #-160]	; 0xffffff60
   16d54:	b	16d6c <argp_parse@@Base+0x6d4>
   16d58:	rsb	r1, r9, #1
   16d5c:	add	r0, r1, r0
   16d60:	ldr	r1, [r4, #-12]
   16d64:	add	r0, r0, r1
   16d68:	str	r0, [r4, #-12]
   16d6c:	mov	r0, #0
   16d70:	cmp	r0, #0
   16d74:	beq	16b10 <argp_parse@@Base+0x478>
   16d78:	b	16e9c <argp_parse@@Base+0x804>
   16d7c:	ldr	r0, [fp, #-200]	; 0xffffff38
   16d80:	cmn	r0, #1
   16d84:	beq	16df4 <argp_parse@@Base+0x75c>
   16d88:	b	1729c <argp_parse@@Base+0xc04>
   16d8c:	cmp	r8, r7, asr #24
   16d90:	beq	16df4 <argp_parse@@Base+0x75c>
   16d94:	ldr	r1, [fp, #-172]	; 0xffffff54
   16d98:	asr	r0, r7, #24
   16d9c:	sub	r0, r0, #1
   16da0:	add	r0, r0, r0, lsl #3
   16da4:	ldr	r3, [r1, r0, lsl #2]
   16da8:	cmp	r3, #0
   16dac:	beq	17268 <argp_parse@@Base+0xbd0>
   16db0:	add	r4, r1, r0, lsl #2
   16db4:	tst	r7, #8388608	; 0x800000
   16db8:	mov	r2, sl
   16dbc:	ldr	r0, [r4, #32]!
   16dc0:	str	r0, [fp, #-120]	; 0xffffff88
   16dc4:	ldr	r0, [r4, #-8]
   16dc8:	str	r0, [fp, #-128]	; 0xffffff80
   16dcc:	ldr	r0, [r4, #-4]
   16dd0:	str	r0, [fp, #-124]	; 0xffffff84
   16dd4:	ldr	r0, [r4, #-20]	; 0xffffffec
   16dd8:	str	r0, [fp, #-136]	; 0xffffff78
   16ddc:	bic	r0, r7, #-16777216	; 0xff000000
   16de0:	ldr	r1, [fp, #-196]	; 0xffffff3c
   16de4:	orrne	r0, r0, #-16777216	; 0xff000000
   16de8:	blx	r3
   16dec:	mov	r1, #0
   16df0:	b	16e84 <argp_parse@@Base+0x7ec>
   16df4:	ldr	r0, [fp, #-216]	; 0xffffff28
   16df8:	mov	r1, r7
   16dfc:	bl	11d48 <strchr@plt>
   16e00:	cmp	r0, #0
   16e04:	beq	16ec0 <argp_parse@@Base+0x828>
   16e08:	ldr	r1, [fp, #-172]	; 0xffffff54
   16e0c:	ldr	r2, [fp, #-168]	; 0xffffff58
   16e10:	cmp	r1, r2
   16e14:	bcs	16ec0 <argp_parse@@Base+0x828>
   16e18:	add	r1, r1, #24
   16e1c:	ldr	r3, [r1, #-16]
   16e20:	cmp	r3, r0
   16e24:	bhi	16e40 <argp_parse@@Base+0x7a8>
   16e28:	add	r3, r1, #36	; 0x24
   16e2c:	add	r1, r1, #12
   16e30:	cmp	r1, r2
   16e34:	mov	r1, r3
   16e38:	bcc	16e1c <argp_parse@@Base+0x784>
   16e3c:	b	16ec0 <argp_parse@@Base+0x828>
   16e40:	ldr	r3, [r1, #-24]	; 0xffffffe8
   16e44:	cmp	r3, #0
   16e48:	beq	16ec0 <argp_parse@@Base+0x828>
   16e4c:	mov	r4, r1
   16e50:	mov	r2, sl
   16e54:	ldr	r0, [r4, #8]!
   16e58:	str	r0, [fp, #-120]	; 0xffffff88
   16e5c:	ldr	r0, [r1]
   16e60:	str	r0, [fp, #-128]	; 0xffffff80
   16e64:	ldr	r0, [r1, #4]
   16e68:	str	r0, [fp, #-124]	; 0xffffff84
   16e6c:	ldr	r0, [r1, #-12]
   16e70:	str	r0, [fp, #-136]	; 0xffffff78
   16e74:	mov	r0, r7
   16e78:	ldr	r1, [fp, #-196]	; 0xffffff3c
   16e7c:	blx	r3
   16e80:	mov	r1, #1
   16e84:	ldr	r2, [fp, #-120]	; 0xffffff88
   16e88:	cmp	r0, #7
   16e8c:	str	r2, [r4]
   16e90:	beq	16eb8 <argp_parse@@Base+0x820>
   16e94:	cmp	r0, #0
   16e98:	beq	16b10 <argp_parse@@Base+0x478>
   16e9c:	mov	r1, #0
   16ea0:	b	16ef4 <argp_parse@@Base+0x85c>
   16ea4:	mov	r1, r5
   16ea8:	b	168e4 <argp_parse@@Base+0x24c>
   16eac:	mov	r7, #1
   16eb0:	mov	r0, #1
   16eb4:	b	16ee0 <argp_parse@@Base+0x848>
   16eb8:	cmp	r1, #0
   16ebc:	beq	17268 <argp_parse@@Base+0xbd0>
   16ec0:	movw	r1, #56014	; 0xdace
   16ec4:	movw	r3, #55752	; 0xd9c8
   16ec8:	mov	r0, sl
   16ecc:	mov	r2, r7
   16ed0:	movt	r1, #1
   16ed4:	movt	r3, #1
   16ed8:	bl	196d4 <argp_error@@Base>
   16edc:	mov	r0, #0
   16ee0:	add	r1, r7, #1
   16ee4:	clz	r1, r1
   16ee8:	lsr	r1, r1, #5
   16eec:	orr	r1, r1, r0
   16ef0:	mov	r0, #7
   16ef4:	subs	r7, r0, #7
   16ef8:	movne	r7, r0
   16efc:	cmp	r1, #0
   16f00:	moveq	r7, r0
   16f04:	cmp	r7, #0
   16f08:	beq	16fa8 <argp_parse@@Base+0x910>
   16f0c:	cmp	r7, #0
   16f10:	beq	1713c <argp_parse@@Base+0xaa4>
   16f14:	cmp	r7, #7
   16f18:	bne	16f30 <argp_parse@@Base+0x898>
   16f1c:	ldr	r1, [fp, #-112]	; 0xffffff90
   16f20:	mov	r0, sl
   16f24:	mov	r2, #260	; 0x104
   16f28:	bl	19618 <argp_state_help@@Base>
   16f2c:	mov	r7, #7
   16f30:	ldr	r4, [fp, #-172]	; 0xffffff54
   16f34:	ldr	r0, [fp, #-168]	; 0xffffff58
   16f38:	cmp	r4, r0
   16f3c:	bcs	171dc <argp_parse@@Base+0xb44>
   16f40:	movw	r1, #6
   16f44:	movt	r1, #256	; 0x100
   16f48:	sub	r6, r1, #1
   16f4c:	ldr	r3, [r4]
   16f50:	cmp	r3, #0
   16f54:	beq	16f94 <argp_parse@@Base+0x8fc>
   16f58:	ldr	r0, [r4, #32]
   16f5c:	mov	r1, #0
   16f60:	mov	r2, sl
   16f64:	str	r0, [fp, #-120]	; 0xffffff88
   16f68:	ldr	r0, [r4, #24]
   16f6c:	str	r0, [fp, #-128]	; 0xffffff80
   16f70:	ldr	r0, [r4, #28]
   16f74:	str	r0, [fp, #-124]	; 0xffffff84
   16f78:	ldr	r0, [r4, #12]
   16f7c:	str	r0, [fp, #-136]	; 0xffffff78
   16f80:	mov	r0, r6
   16f84:	blx	r3
   16f88:	ldr	r0, [fp, #-120]	; 0xffffff88
   16f8c:	str	r0, [r4, #32]
   16f90:	ldr	r0, [fp, #-168]	; 0xffffff58
   16f94:	add	r4, r4, #36	; 0x24
   16f98:	cmp	r4, r0
   16f9c:	bcc	16f4c <argp_parse@@Base+0x8b4>
   16fa0:	ldr	r4, [fp, #-172]	; 0xffffff54
   16fa4:	b	171dc <argp_parse@@Base+0xb44>
   16fa8:	ldr	r1, [fp, #-152]	; 0xffffff68
   16fac:	ldr	r0, [fp, #-144]	; 0xffffff70
   16fb0:	cmp	r0, r1
   16fb4:	bne	170e0 <argp_parse@@Base+0xa48>
   16fb8:	ldr	r4, [fp, #-172]	; 0xffffff54
   16fbc:	ldr	r1, [fp, #-168]	; 0xffffff58
   16fc0:	mov	r0, #0
   16fc4:	cmp	r4, r1
   16fc8:	bcs	17054 <argp_parse@@Base+0x9bc>
   16fcc:	movw	r0, #6
   16fd0:	mov	r7, #0
   16fd4:	movt	r0, #256	; 0x100
   16fd8:	sub	r6, r0, #4
   16fdc:	mov	r0, #0
   16fe0:	cmp	r0, #7
   16fe4:	cmpne	r0, #0
   16fe8:	bne	17050 <argp_parse@@Base+0x9b8>
   16fec:	ldr	r2, [r4, #12]
   16ff0:	cmp	r2, #0
   16ff4:	bne	17044 <argp_parse@@Base+0x9ac>
   16ff8:	ldr	r3, [r4]
   16ffc:	cmp	r3, #0
   17000:	beq	17040 <argp_parse@@Base+0x9a8>
   17004:	ldr	r0, [r4, #32]
   17008:	mov	r1, #0
   1700c:	mov	r2, sl
   17010:	str	r0, [fp, #-120]	; 0xffffff88
   17014:	ldr	r0, [r4, #24]
   17018:	str	r0, [fp, #-128]	; 0xffffff80
   1701c:	ldr	r0, [r4, #28]
   17020:	str	r7, [fp, #-136]	; 0xffffff78
   17024:	str	r0, [fp, #-124]	; 0xffffff84
   17028:	mov	r0, r6
   1702c:	blx	r3
   17030:	ldr	r1, [fp, #-120]	; 0xffffff88
   17034:	str	r1, [r4, #32]
   17038:	ldr	r1, [fp, #-168]	; 0xffffff58
   1703c:	b	17044 <argp_parse@@Base+0x9ac>
   17040:	mov	r0, #7
   17044:	add	r4, r4, #36	; 0x24
   17048:	cmp	r4, r1
   1704c:	bcc	16fe0 <argp_parse@@Base+0x948>
   17050:	ldr	r4, [fp, #-172]	; 0xffffff54
   17054:	sub	r7, r1, #36	; 0x24
   17058:	cmp	r7, r4
   1705c:	bcc	170d4 <argp_parse@@Base+0xa3c>
   17060:	movw	r1, #6
   17064:	movt	r1, #256	; 0x100
   17068:	sub	r6, r1, #5
   1706c:	cmp	r0, #7
   17070:	cmpne	r0, #0
   17074:	bne	17120 <argp_parse@@Base+0xa88>
   17078:	ldr	r3, [r7]
   1707c:	cmp	r3, #0
   17080:	beq	170c4 <argp_parse@@Base+0xa2c>
   17084:	ldr	r0, [r7, #32]
   17088:	mov	r1, #0
   1708c:	mov	r2, sl
   17090:	str	r0, [fp, #-120]	; 0xffffff88
   17094:	ldr	r0, [r7, #24]
   17098:	str	r0, [fp, #-128]	; 0xffffff80
   1709c:	ldr	r0, [r7, #28]
   170a0:	str	r0, [fp, #-124]	; 0xffffff84
   170a4:	ldr	r0, [r7, #12]
   170a8:	str	r0, [fp, #-136]	; 0xffffff78
   170ac:	mov	r0, r6
   170b0:	blx	r3
   170b4:	ldr	r1, [fp, #-120]	; 0xffffff88
   170b8:	str	r1, [r7, #32]
   170bc:	ldr	r4, [fp, #-172]	; 0xffffff54
   170c0:	b	170c8 <argp_parse@@Base+0xa30>
   170c4:	mov	r0, #7
   170c8:	sub	r7, r7, #36	; 0x24
   170cc:	cmp	r7, r4
   170d0:	bcs	1706c <argp_parse@@Base+0x9d4>
   170d4:	subs	r7, r0, #7
   170d8:	movne	r7, r0
   170dc:	b	17124 <argp_parse@@Base+0xa8c>
   170e0:	ldr	r1, [fp, #8]
   170e4:	cmp	r1, #0
   170e8:	beq	170f4 <argp_parse@@Base+0xa5c>
   170ec:	str	r0, [r1]
   170f0:	b	1713c <argp_parse@@Base+0xaa4>
   170f4:	ldrb	r0, [fp, #-140]	; 0xffffff74
   170f8:	tst	r0, #2
   170fc:	bne	16f1c <argp_parse@@Base+0x884>
   17100:	ldr	r0, [fp, #-112]	; 0xffffff90
   17104:	cmp	r0, #0
   17108:	beq	16f1c <argp_parse@@Base+0x884>
   1710c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   17110:	movw	r1, #56035	; 0xdae3
   17114:	movt	r1, #1
   17118:	bl	11d60 <fprintf@plt>
   1711c:	b	16f1c <argp_parse@@Base+0x884>
   17120:	mov	r7, r0
   17124:	ldr	r1, [fp, #8]
   17128:	cmp	r1, #0
   1712c:	ldrne	r0, [fp, #-144]	; 0xffffff70
   17130:	strne	r0, [r1]
   17134:	cmp	r7, #0
   17138:	bne	16f14 <argp_parse@@Base+0x87c>
   1713c:	ldr	r0, [fp, #-168]	; 0xffffff58
   17140:	ldr	r4, [fp, #-172]	; 0xffffff54
   17144:	mov	r7, #0
   17148:	sub	r5, r0, #36	; 0x24
   1714c:	cmp	r5, r4
   17150:	bcc	171dc <argp_parse@@Base+0xb44>
   17154:	movw	r1, #6
   17158:	mov	r0, #0
   1715c:	movt	r1, #256	; 0x100
   17160:	sub	r6, r1, #2
   17164:	cmp	r0, #7
   17168:	cmpne	r0, #0
   1716c:	bne	171d8 <argp_parse@@Base+0xb40>
   17170:	ldr	r3, [r5]
   17174:	cmp	r3, #0
   17178:	beq	171bc <argp_parse@@Base+0xb24>
   1717c:	ldr	r0, [r5, #32]
   17180:	mov	r1, #0
   17184:	mov	r2, sl
   17188:	str	r0, [fp, #-120]	; 0xffffff88
   1718c:	ldr	r0, [r5, #24]
   17190:	str	r0, [fp, #-128]	; 0xffffff80
   17194:	ldr	r0, [r5, #28]
   17198:	str	r0, [fp, #-124]	; 0xffffff84
   1719c:	ldr	r0, [r5, #12]
   171a0:	str	r0, [fp, #-136]	; 0xffffff78
   171a4:	mov	r0, r6
   171a8:	blx	r3
   171ac:	ldr	r1, [fp, #-120]	; 0xffffff88
   171b0:	str	r1, [r5, #32]
   171b4:	ldr	r4, [fp, #-172]	; 0xffffff54
   171b8:	b	171c0 <argp_parse@@Base+0xb28>
   171bc:	mov	r0, #7
   171c0:	sub	r5, r5, #36	; 0x24
   171c4:	cmp	r5, r4
   171c8:	bcs	17164 <argp_parse@@Base+0xacc>
   171cc:	subs	r7, r0, #7
   171d0:	movne	r7, r0
   171d4:	b	171dc <argp_parse@@Base+0xb44>
   171d8:	mov	r7, r0
   171dc:	ldr	r0, [fp, #-168]	; 0xffffff58
   171e0:	sub	r6, r0, #36	; 0x24
   171e4:	cmp	r6, r4
   171e8:	bcc	1724c <argp_parse@@Base+0xbb4>
   171ec:	movw	r0, #6
   171f0:	movt	r0, #256	; 0x100
   171f4:	add	r5, r0, #1
   171f8:	ldr	r3, [r6]
   171fc:	cmp	r3, #0
   17200:	beq	17240 <argp_parse@@Base+0xba8>
   17204:	ldr	r0, [r6, #32]
   17208:	mov	r1, #0
   1720c:	mov	r2, sl
   17210:	str	r0, [fp, #-120]	; 0xffffff88
   17214:	ldr	r0, [r6, #24]
   17218:	str	r0, [fp, #-128]	; 0xffffff80
   1721c:	ldr	r0, [r6, #28]
   17220:	str	r0, [fp, #-124]	; 0xffffff84
   17224:	ldr	r0, [r6, #12]
   17228:	str	r0, [fp, #-136]	; 0xffffff78
   1722c:	mov	r0, r5
   17230:	blx	r3
   17234:	ldr	r0, [fp, #-120]	; 0xffffff88
   17238:	str	r0, [r6, #32]
   1723c:	ldr	r4, [fp, #-172]	; 0xffffff54
   17240:	sub	r6, r6, #36	; 0x24
   17244:	cmp	r6, r4
   17248:	bcs	171f8 <argp_parse@@Base+0xb60>
   1724c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   17250:	bl	17968 <argp_parse@@Base+0x12d0>
   17254:	cmp	r7, #7
   17258:	movweq	r7, #22
   1725c:	mov	r0, r7
   17260:	sub	sp, fp, #28
   17264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17268:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1726c:	ldr	r1, [r0, #12]
   17270:	cmp	r1, r7
   17274:	beq	172a4 <argp_parse@@Base+0xc0c>
   17278:	ldr	r1, [r0]
   1727c:	cmp	r1, #0
   17280:	beq	172a4 <argp_parse@@Base+0xc0c>
   17284:	add	r1, r0, #16
   17288:	ldr	r0, [r0, #28]
   1728c:	cmp	r0, r7
   17290:	mov	r0, r1
   17294:	bne	17278 <argp_parse@@Base+0xbe0>
   17298:	b	172a8 <argp_parse@@Base+0xc10>
   1729c:	mov	r1, #0
   172a0:	b	16ef0 <argp_parse@@Base+0x858>
   172a4:	mov	r1, r0
   172a8:	ldr	r0, [r1]
   172ac:	movw	r2, #56031	; 0xdadf
   172b0:	movw	r1, #56022	; 0xdad6
   172b4:	movw	r3, #55752	; 0xd9c8
   172b8:	movt	r2, #1
   172bc:	movt	r1, #1
   172c0:	movt	r3, #1
   172c4:	cmp	r0, #0
   172c8:	movne	r2, r0
   172cc:	mov	r0, sl
   172d0:	b	16ed8 <argp_parse@@Base+0x840>
   172d4:	mov	ip, r0
   172d8:	mov	r0, #0
   172dc:	cmp	r1, #0
   172e0:	beq	17310 <argp_parse@@Base+0xc78>
   172e4:	ldr	r3, [r1, #52]	; 0x34
   172e8:	ldr	r1, [r3, #48]	; 0x30
   172ec:	ldr	r3, [r3, #52]	; 0x34
   172f0:	b	172f8 <argp_parse@@Base+0xc60>
   172f4:	add	r1, r1, #36	; 0x24
   172f8:	cmp	r1, r3
   172fc:	bxcs	lr
   17300:	ldr	r2, [r1, #4]
   17304:	cmp	r2, ip
   17308:	bne	172f4 <argp_parse@@Base+0xc5c>
   1730c:	ldr	r0, [r1, #24]
   17310:	bx	lr
   17314:	push	{r4, r5, r6, sl, fp, lr}
   17318:	add	fp, sp, #16
   1731c:	mov	r5, r2
   17320:	mov	r6, r1
   17324:	mov	r4, #7
   17328:	cmn	r0, #3
   1732c:	bgt	17350 <argp_parse@@Base+0xcb8>
   17330:	cmn	r0, #4
   17334:	beq	1737c <argp_parse@@Base+0xce4>
   17338:	cmn	r0, #3
   1733c:	bne	173d4 <argp_parse@@Base+0xd3c>
   17340:	ldr	r1, [r5, #48]	; 0x30
   17344:	mov	r0, r5
   17348:	movw	r2, #513	; 0x201
   1734c:	b	1736c <argp_parse@@Base+0xcd4>
   17350:	cmn	r0, #2
   17354:	beq	173dc <argp_parse@@Base+0xd44>
   17358:	cmp	r0, #63	; 0x3f
   1735c:	bne	173d4 <argp_parse@@Base+0xd3c>
   17360:	ldr	r1, [r5, #48]	; 0x30
   17364:	mov	r0, r5
   17368:	movw	r2, #634	; 0x27a
   1736c:	bl	19618 <argp_state_help@@Base>
   17370:	mov	r4, #0
   17374:	mov	r0, r4
   17378:	pop	{r4, r5, r6, sl, fp, pc}
   1737c:	movw	r0, #55949	; 0xda8d
   17380:	cmp	r6, #0
   17384:	mov	r1, #0
   17388:	mov	r2, #10
   1738c:	mov	r4, #0
   17390:	movt	r0, #1
   17394:	movne	r0, r6
   17398:	bl	11ac0 <strtol@plt>
   1739c:	movw	r5, #62648	; 0xf4b8
   173a0:	movt	r5, #2
   173a4:	str	r0, [r5]
   173a8:	ldr	r0, [r5]
   173ac:	subs	r0, r0, #1
   173b0:	str	r0, [r5]
   173b4:	blt	173d4 <argp_parse@@Base+0xd3c>
   173b8:	mov	r0, #1
   173bc:	bl	11bb0 <sleep@plt>
   173c0:	ldr	r0, [r5]
   173c4:	sub	r1, r0, #1
   173c8:	cmp	r0, #0
   173cc:	str	r1, [r5]
   173d0:	bgt	173b8 <argp_parse@@Base+0xd20>
   173d4:	mov	r0, r4
   173d8:	pop	{r4, r5, r6, sl, fp, pc}
   173dc:	movw	r0, #62380	; 0xf3ac
   173e0:	movt	r0, #2
   173e4:	str	r6, [r0]
   173e8:	mov	r0, r6
   173ec:	bl	178e4 <argp_parse@@Base+0x124c>
   173f0:	movw	r1, #62376	; 0xf3a8
   173f4:	str	r0, [r5, #40]	; 0x28
   173f8:	mov	r4, #0
   173fc:	movt	r1, #2
   17400:	str	r0, [r1]
   17404:	ldr	r0, [r5, #16]
   17408:	and	r0, r0, #3
   1740c:	cmp	r0, #1
   17410:	ldreq	r0, [r5, #8]
   17414:	streq	r6, [r0]
   17418:	moveq	r0, r4
   1741c:	popeq	{r4, r5, r6, sl, fp, pc}
   17420:	mov	r0, r4
   17424:	pop	{r4, r5, r6, sl, fp, pc}
   17428:	push	{r4, sl, fp, lr}
   1742c:	add	fp, sp, #8
   17430:	mov	r1, r0
   17434:	mov	r0, #7
   17438:	cmp	r1, #86	; 0x56
   1743c:	popne	{r4, sl, fp, pc}
   17440:	movw	r0, #62652	; 0xf4bc
   17444:	mov	r4, r2
   17448:	movt	r0, #2
   1744c:	ldr	r2, [r0]
   17450:	cmp	r2, #0
   17454:	beq	17468 <argp_parse@@Base+0xdd0>
   17458:	ldr	r0, [r4, #48]	; 0x30
   1745c:	mov	r1, r4
   17460:	blx	r2
   17464:	b	174a8 <argp_parse@@Base+0xe10>
   17468:	movw	r0, #63012	; 0xf624
   1746c:	movt	r0, #2
   17470:	ldr	r2, [r0]
   17474:	cmp	r2, #0
   17478:	beq	17490 <argp_parse@@Base+0xdf8>
   1747c:	ldr	r0, [r4, #48]	; 0x30
   17480:	movw	r1, #56162	; 0xdb62
   17484:	movt	r1, #1
   17488:	bl	11d60 <fprintf@plt>
   1748c:	b	174a8 <argp_parse@@Base+0xe10>
   17490:	movw	r1, #57218	; 0xdf82
   17494:	movw	r2, #55976	; 0xdaa8
   17498:	mov	r0, r4
   1749c:	movt	r1, #1
   174a0:	movt	r2, #1
   174a4:	bl	196d4 <argp_error@@Base>
   174a8:	ldrb	r1, [r4, #16]
   174ac:	mov	r0, #0
   174b0:	tst	r1, #32
   174b4:	beq	174bc <argp_parse@@Base+0xe24>
   174b8:	pop	{r4, sl, fp, pc}
   174bc:	mov	r0, #0
   174c0:	bl	11d18 <exit@plt>
   174c4:	push	{r4, r5, fp, lr}
   174c8:	add	fp, sp, #8
   174cc:	ldr	r2, [r0]
   174d0:	ldr	ip, [r0, #16]
   174d4:	mov	r4, r1
   174d8:	cmp	r2, #0
   174dc:	beq	17548 <argp_parse@@Base+0xeb0>
   174e0:	ldr	r0, [r4, #8]
   174e4:	mov	r3, #0
   174e8:	add	r0, r0, #1
   174ec:	str	r0, [r4, #8]
   174f0:	mov	r0, #0
   174f4:	b	17500 <argp_parse@@Base+0xe68>
   174f8:	add	r3, r3, #3
   174fc:	add	r0, r0, #1
   17500:	add	r5, r2, r3, lsl #3
   17504:	ldr	r1, [r5, #4]
   17508:	cmp	r1, #0
   1750c:	bne	174f8 <argp_parse@@Base+0xe60>
   17510:	ldr	r1, [r2, r3, lsl #3]
   17514:	cmp	r1, #0
   17518:	bne	174f8 <argp_parse@@Base+0xe60>
   1751c:	ldr	r1, [r5, #16]
   17520:	cmp	r1, #0
   17524:	bne	174f8 <argp_parse@@Base+0xe60>
   17528:	ldr	r1, [r5, #20]
   1752c:	cmp	r1, #0
   17530:	bne	174f8 <argp_parse@@Base+0xe60>
   17534:	ldr	r1, [r4]
   17538:	mov	r2, r4
   1753c:	add	r1, r1, r3
   17540:	str	r1, [r2], #4
   17544:	b	1755c <argp_parse@@Base+0xec4>
   17548:	ldr	r0, [r0, #4]
   1754c:	cmp	r0, #0
   17550:	beq	17568 <argp_parse@@Base+0xed0>
   17554:	add	r2, r4, #8
   17558:	mov	r0, #1
   1755c:	ldr	r1, [r2]
   17560:	add	r0, r1, r0
   17564:	str	r0, [r2]
   17568:	cmp	ip, #0
   1756c:	ldrne	r0, [ip]
   17570:	cmpne	r0, #0
   17574:	beq	1759c <argp_parse@@Base+0xf04>
   17578:	add	r5, ip, #16
   1757c:	mov	r1, r4
   17580:	bl	174c4 <argp_parse@@Base+0xe2c>
   17584:	ldr	r0, [r4, #12]
   17588:	add	r0, r0, #1
   1758c:	str	r0, [r4, #12]
   17590:	ldr	r0, [r5], #16
   17594:	cmp	r0, #0
   17598:	bne	1757c <argp_parse@@Base+0xee4>
   1759c:	pop	{r4, r5, fp, pc}
   175a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   175a4:	add	fp, sp, #28
   175a8:	sub	sp, sp, #28
   175ac:	ldr	r7, [r0]
   175b0:	mov	r6, r3
   175b4:	mov	r3, r1
   175b8:	ldr	r5, [r0, #16]
   175bc:	ldr	r1, [fp, #8]
   175c0:	cmp	r7, #0
   175c4:	beq	177a0 <argp_parse@@Base+0x1108>
   175c8:	str	r0, [sp, #8]
   175cc:	add	r0, sp, #16
   175d0:	add	r8, r1, #4
   175d4:	mov	r9, r7
   175d8:	str	r3, [sp, #12]
   175dc:	stm	r0, {r2, r5, r6}
   175e0:	b	175e8 <argp_parse@@Base+0xf50>
   175e4:	add	r9, r9, #24
   175e8:	ldr	r4, [r9, #4]
   175ec:	cmp	r4, #0
   175f0:	bne	17618 <argp_parse@@Base+0xf80>
   175f4:	ldr	r0, [r9]
   175f8:	cmp	r0, #0
   175fc:	bne	17618 <argp_parse@@Base+0xf80>
   17600:	ldr	r0, [r9, #16]
   17604:	cmp	r0, #0
   17608:	bne	17618 <argp_parse@@Base+0xf80>
   1760c:	ldr	r0, [r9, #20]
   17610:	cmp	r0, #0
   17614:	beq	17788 <argp_parse@@Base+0x10f0>
   17618:	ldr	r0, [r9, #12]
   1761c:	mov	r5, #0
   17620:	tst	r0, #4
   17624:	moveq	r7, r9
   17628:	ldrb	r1, [r7, #12]
   1762c:	tst	r1, #8
   17630:	bne	175e4 <argp_parse@@Base+0xf4c>
   17634:	sub	r1, r4, #1
   17638:	cmp	r1, #254	; 0xfe
   1763c:	bhi	176b8 <argp_parse@@Base+0x1020>
   17640:	ands	r0, r0, #8
   17644:	bne	176b8 <argp_parse@@Base+0x1020>
   17648:	bl	11d00 <__ctype_b_loc@plt>
   1764c:	ldr	r0, [r0]
   17650:	add	r0, r0, r4, lsl #1
   17654:	ldrb	r0, [r0, #1]
   17658:	tst	r0, #64	; 0x40
   1765c:	beq	176b8 <argp_parse@@Base+0x1020>
   17660:	ldr	r0, [r8]
   17664:	add	r1, r0, #1
   17668:	str	r1, [r8]
   1766c:	strb	r4, [r0]
   17670:	ldr	r0, [r7, #8]
   17674:	cmp	r0, #0
   17678:	beq	176b0 <argp_parse@@Base+0x1018>
   1767c:	ldr	r0, [r8]
   17680:	add	r1, r0, #1
   17684:	str	r1, [r8]
   17688:	mov	r1, #58	; 0x3a
   1768c:	strb	r1, [r0]
   17690:	ldrb	r0, [r7, #12]
   17694:	tst	r0, #1
   17698:	beq	176b0 <argp_parse@@Base+0x1018>
   1769c:	ldr	r0, [r8]
   176a0:	add	r1, r0, #1
   176a4:	str	r1, [r8]
   176a8:	mov	r1, #58	; 0x3a
   176ac:	strb	r1, [r0]
   176b0:	ldr	r0, [r8]
   176b4:	strb	r5, [r0]
   176b8:	ldr	r5, [r9]
   176bc:	cmp	r5, #0
   176c0:	beq	175e4 <argp_parse@@Base+0xf4c>
   176c4:	ldr	r0, [fp, #8]
   176c8:	ldr	r4, [r0]
   176cc:	ldr	sl, [r4, #8]
   176d0:	ldr	r0, [sl]
   176d4:	cmp	r0, #0
   176d8:	beq	1770c <argp_parse@@Base+0x1074>
   176dc:	mov	r6, sl
   176e0:	mov	r1, r5
   176e4:	bl	11ab4 <strcmp@plt>
   176e8:	cmp	r0, #0
   176ec:	beq	17700 <argp_parse@@Base+0x1068>
   176f0:	ldr	r0, [r6, #16]!
   176f4:	cmp	r0, #0
   176f8:	bne	176e0 <argp_parse@@Base+0x1048>
   176fc:	b	1770c <argp_parse@@Base+0x1074>
   17700:	sub	r0, r6, sl
   17704:	cmn	r0, #1
   17708:	bgt	175e4 <argp_parse@@Base+0xf4c>
   1770c:	ldr	r6, [fp, #8]
   17710:	ldr	r0, [r6, #8]
   17714:	str	r5, [r0]
   17718:	ldr	r1, [r7, #8]
   1771c:	cmp	r1, #0
   17720:	beq	17738 <argp_parse@@Base+0x10a0>
   17724:	ldrb	r1, [r7, #12]
   17728:	tst	r1, #1
   1772c:	mov	r1, #2
   17730:	movweq	r1, #1
   17734:	b	1773c <argp_parse@@Base+0x10a4>
   17738:	mov	r1, #0
   1773c:	mov	r5, #0
   17740:	stmib	r0, {r1, r5}
   17744:	ldr	r1, [r9, #4]
   17748:	ldr	r3, [sp, #24]
   1774c:	ldr	r2, [r4, #48]	; 0x30
   17750:	cmp	r1, #0
   17754:	sub	r2, r3, r2
   17758:	mov	r3, #956301312	; 0x39000000
   1775c:	ldreq	r1, [r7, #4]
   17760:	lsr	r2, r2, #2
   17764:	mul	r2, r2, r3
   17768:	add	r2, r2, #16777216	; 0x1000000
   1776c:	bic	r1, r1, #-16777216	; 0xff000000
   17770:	orr	r1, r2, r1
   17774:	str	r1, [r0, #12]
   17778:	add	r1, r0, #16
   1777c:	str	r1, [r6, #8]
   17780:	str	r5, [r0, #16]
   17784:	b	175e4 <argp_parse@@Base+0xf4c>
   17788:	ldr	r0, [sp, #8]
   1778c:	add	r6, sp, #16
   17790:	ldr	r7, [r0, #4]
   17794:	ldm	r6, {r2, r5, r6}
   17798:	ldr	r3, [sp, #12]
   1779c:	b	177b4 <argp_parse@@Base+0x111c>
   177a0:	ldr	r7, [r0, #4]
   177a4:	cmp	r7, #0
   177a8:	beq	17864 <argp_parse@@Base+0x11cc>
   177ac:	ldr	r1, [fp, #8]
   177b0:	add	r8, r1, #4
   177b4:	str	r0, [r6, #4]
   177b8:	str	r7, [r6]
   177bc:	mov	r0, #0
   177c0:	cmp	r5, #0
   177c4:	ldr	r1, [r8]
   177c8:	str	r0, [r6, #12]
   177cc:	str	r3, [r6, #16]
   177d0:	str	r2, [r6, #20]
   177d4:	str	r0, [r6, #24]
   177d8:	str	r0, [r6, #32]
   177dc:	str	r0, [r6, #28]
   177e0:	str	r1, [r6, #8]
   177e4:	beq	17814 <argp_parse@@Base+0x117c>
   177e8:	ldr	r1, [r5, r0, lsl #2]
   177ec:	add	r0, r0, #4
   177f0:	cmp	r1, #0
   177f4:	bne	177e8 <argp_parse@@Base+0x1150>
   177f8:	ldr	r1, [fp, #8]
   177fc:	mov	r2, r1
   17800:	ldr	r1, [r1, #12]
   17804:	add	r0, r1, r0
   17808:	str	r1, [r6, #28]
   1780c:	sub	r0, r0, #4
   17810:	str	r0, [r2, #12]
   17814:	add	r3, r6, #36	; 0x24
   17818:	cmp	r5, #0
   1781c:	ldrne	r0, [r5]
   17820:	cmpne	r0, #0
   17824:	beq	17858 <argp_parse@@Base+0x11c0>
   17828:	ldr	r7, [fp, #8]
   1782c:	add	r4, r5, #16
   17830:	mov	r5, #0
   17834:	mov	r1, r6
   17838:	mov	r2, r5
   1783c:	str	r7, [sp]
   17840:	bl	175a0 <argp_parse@@Base+0xf08>
   17844:	mov	r3, r0
   17848:	ldr	r0, [r4, r5, lsl #4]
   1784c:	add	r5, r5, #1
   17850:	cmp	r0, #0
   17854:	bne	17834 <argp_parse@@Base+0x119c>
   17858:	mov	r0, r3
   1785c:	sub	sp, fp, #28
   17860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17864:	mov	r3, r6
   17868:	mov	r6, #0
   1786c:	b	17818 <argp_parse@@Base+0x1180>
   17870:	movw	r2, #62656	; 0xf4c0
   17874:	movt	r2, #2
   17878:	str	r0, [r2]
   1787c:	movw	r0, #62652	; 0xf4bc
   17880:	movw	r2, #30880	; 0x78a0
   17884:	movt	r0, #2
   17888:	movt	r2, #1
   1788c:	str	r2, [r0]
   17890:	movw	r0, #62660	; 0xf4c4
   17894:	movt	r0, #2
   17898:	str	r1, [r0]
   1789c:	bx	lr
   178a0:	push	{fp, lr}
   178a4:	mov	fp, sp
   178a8:	sub	sp, sp, #8
   178ac:	movw	r2, #62660	; 0xf4c4
   178b0:	movw	r1, #62656	; 0xf4c0
   178b4:	movw	r3, #56073	; 0xdb09
   178b8:	movt	r2, #2
   178bc:	movt	r1, #2
   178c0:	movt	r3, #1
   178c4:	ldr	r2, [r2]
   178c8:	ldr	r1, [r1]
   178cc:	str	r2, [sp]
   178d0:	movw	r2, #56059	; 0xdafb
   178d4:	movt	r2, #1
   178d8:	bl	17d7c <argp_parse@@Base+0x16e4>
   178dc:	mov	sp, fp
   178e0:	pop	{fp, pc}
   178e4:	sub	r0, r0, #1
   178e8:	ldrb	r3, [r0, #1]!
   178ec:	cmp	r3, #47	; 0x2f
   178f0:	beq	178e8 <argp_parse@@Base+0x1250>
   178f4:	mov	r2, #0
   178f8:	mov	r1, r0
   178fc:	b	17918 <argp_parse@@Base+0x1280>
   17900:	cmp	r3, #0
   17904:	bxeq	lr
   17908:	tst	r2, #1
   1790c:	mov	r2, #0
   17910:	movne	r0, r1
   17914:	ldrb	r3, [r1, #1]!
   17918:	uxtb	r3, r3
   1791c:	cmp	r3, #47	; 0x2f
   17920:	bne	17900 <argp_parse@@Base+0x1268>
   17924:	ldrb	r3, [r1, #1]!
   17928:	mov	r2, #1
   1792c:	b	17918 <argp_parse@@Base+0x1280>
   17930:	push	{r4, sl, fp, lr}
   17934:	add	fp, sp, #8
   17938:	mov	r4, r0
   1793c:	bl	11d30 <strlen@plt>
   17940:	mov	r1, r0
   17944:	sub	r2, r4, #1
   17948:	mov	r0, r1
   1794c:	cmp	r1, #2
   17950:	popcc	{r4, sl, fp, pc}
   17954:	ldrb	r3, [r2, r0]
   17958:	sub	r1, r0, #1
   1795c:	cmp	r3, #47	; 0x2f
   17960:	beq	17948 <argp_parse@@Base+0x12b0>
   17964:	pop	{r4, sl, fp, pc}
   17968:	push	{r4, r5, r6, sl, fp, lr}
   1796c:	add	fp, sp, #16
   17970:	mov	r4, r0
   17974:	bl	11d78 <__errno_location@plt>
   17978:	ldr	r6, [r0]
   1797c:	mov	r5, r0
   17980:	mov	r0, r4
   17984:	bl	11b38 <free@plt>
   17988:	str	r6, [r5]
   1798c:	pop	{r4, r5, r6, sl, fp, pc}
   17990:	push	{fp, lr}
   17994:	mov	fp, sp
   17998:	sub	sp, sp, #16
   1799c:	mov	ip, #0
   179a0:	str	ip, [sp, #8]
   179a4:	str	ip, [sp, #4]
   179a8:	ldr	ip, [fp, #8]
   179ac:	str	ip, [sp]
   179b0:	bl	1c534 <argp_failure@@Base+0x2d1c>
   179b4:	mov	sp, fp
   179b8:	pop	{fp, pc}
   179bc:	push	{fp, lr}
   179c0:	mov	fp, sp
   179c4:	sub	sp, sp, #16
   179c8:	mov	ip, #0
   179cc:	str	ip, [sp, #12]
   179d0:	str	ip, [sp, #4]
   179d4:	ldr	ip, [fp, #12]
   179d8:	str	ip, [sp, #8]
   179dc:	ldr	ip, [fp, #8]
   179e0:	str	ip, [sp]
   179e4:	bl	1b624 <argp_failure@@Base+0x1e0c>
   179e8:	mov	sp, fp
   179ec:	pop	{fp, pc}
   179f0:	push	{fp, lr}
   179f4:	mov	fp, sp
   179f8:	sub	sp, sp, #16
   179fc:	mov	ip, #0
   17a00:	str	ip, [sp, #8]
   17a04:	mov	ip, #1
   17a08:	str	ip, [sp, #4]
   17a0c:	ldr	ip, [fp, #8]
   17a10:	str	ip, [sp]
   17a14:	bl	1c534 <argp_failure@@Base+0x2d1c>
   17a18:	mov	sp, fp
   17a1c:	pop	{fp, pc}
   17a20:	push	{fp, lr}
   17a24:	mov	fp, sp
   17a28:	sub	sp, sp, #16
   17a2c:	mov	ip, #0
   17a30:	str	ip, [sp, #12]
   17a34:	mov	ip, #1
   17a38:	str	ip, [sp, #4]
   17a3c:	ldr	ip, [fp, #12]
   17a40:	str	ip, [sp, #8]
   17a44:	ldr	ip, [fp, #8]
   17a48:	str	ip, [sp]
   17a4c:	bl	1b624 <argp_failure@@Base+0x1e0c>
   17a50:	mov	sp, fp
   17a54:	pop	{fp, pc}
   17a58:	push	{r4, r5, fp, lr}
   17a5c:	add	fp, sp, #8
   17a60:	cmp	r0, #0
   17a64:	beq	17af8 <argp_parse@@Base+0x1460>
   17a68:	mov	r1, #47	; 0x2f
   17a6c:	mov	r4, r0
   17a70:	bl	11e38 <strrchr@plt>
   17a74:	cmp	r0, #0
   17a78:	mov	r5, r4
   17a7c:	addne	r5, r0, #1
   17a80:	sub	r0, r5, r4
   17a84:	cmp	r0, #7
   17a88:	blt	17adc <argp_parse@@Base+0x1444>
   17a8c:	movw	r1, #56142	; 0xdb4e
   17a90:	sub	r0, r5, #7
   17a94:	mov	r2, #7
   17a98:	movt	r1, #1
   17a9c:	bl	11f28 <strncmp@plt>
   17aa0:	cmp	r0, #0
   17aa4:	bne	17adc <argp_parse@@Base+0x1444>
   17aa8:	movw	r1, #56150	; 0xdb56
   17aac:	mov	r0, r5
   17ab0:	mov	r2, #3
   17ab4:	movt	r1, #1
   17ab8:	bl	11f28 <strncmp@plt>
   17abc:	cmp	r0, #0
   17ac0:	beq	17acc <argp_parse@@Base+0x1434>
   17ac4:	mov	r4, r5
   17ac8:	b	17adc <argp_parse@@Base+0x1444>
   17acc:	movw	r0, #62376	; 0xf3a8
   17ad0:	add	r4, r5, #3
   17ad4:	movt	r0, #2
   17ad8:	str	r4, [r0]
   17adc:	movw	r0, #62380	; 0xf3ac
   17ae0:	movt	r0, #2
   17ae4:	str	r4, [r0]
   17ae8:	movw	r0, #62664	; 0xf4c8
   17aec:	movt	r0, #2
   17af0:	str	r4, [r0]
   17af4:	pop	{r4, r5, fp, pc}
   17af8:	movw	r0, #62384	; 0xf3b0
   17afc:	mov	r1, #55	; 0x37
   17b00:	mov	r2, #1
   17b04:	movt	r0, #2
   17b08:	ldr	r3, [r0]
   17b0c:	movw	r0, #56086	; 0xdb16
   17b10:	movt	r0, #1
   17b14:	bl	11c58 <fwrite@plt>
   17b18:	bl	11f34 <abort@plt>
   17b1c:	push	{r4, r5, r6, r7, fp, lr}
   17b20:	add	fp, sp, #16
   17b24:	sub	sp, sp, #32
   17b28:	ldr	r7, [fp, #12]
   17b2c:	ldr	r6, [fp, #8]
   17b30:	mov	r4, r2
   17b34:	mov	r5, r0
   17b38:	cmp	r1, #0
   17b3c:	beq	17b5c <argp_parse@@Base+0x14c4>
   17b40:	mov	r2, r1
   17b44:	movw	r1, #56154	; 0xdb5a
   17b48:	str	r3, [sp]
   17b4c:	mov	r0, r5
   17b50:	mov	r3, r4
   17b54:	movt	r1, #1
   17b58:	b	17b6c <argp_parse@@Base+0x14d4>
   17b5c:	movw	r1, #56166	; 0xdb66
   17b60:	mov	r0, r5
   17b64:	mov	r2, r4
   17b68:	movt	r1, #1
   17b6c:	bl	11d60 <fprintf@plt>
   17b70:	movw	r1, #56930	; 0xde62
   17b74:	movw	r2, #56173	; 0xdb6d
   17b78:	mov	r0, r5
   17b7c:	movw	r3, #2022	; 0x7e6
   17b80:	movt	r1, #1
   17b84:	movt	r2, #1
   17b88:	bl	11d60 <fprintf@plt>
   17b8c:	mov	r0, #10
   17b90:	mov	r1, r5
   17b94:	bl	11e5c <fputc@plt>
   17b98:	movw	r1, #56177	; 0xdb71
   17b9c:	movw	r2, #56348	; 0xdc1c
   17ba0:	mov	r0, r5
   17ba4:	movt	r1, #1
   17ba8:	movt	r2, #1
   17bac:	bl	11d60 <fprintf@plt>
   17bb0:	mov	r0, #10
   17bb4:	mov	r1, r5
   17bb8:	bl	11e5c <fputc@plt>
   17bbc:	cmp	r7, #9
   17bc0:	bhi	17bfc <argp_parse@@Base+0x1564>
   17bc4:	add	r0, pc, #0
   17bc8:	ldr	pc, [r0, r7, lsl #2]
   17bcc:	strdeq	r7, [r1], -r4
   17bd0:	andeq	r7, r1, r0, lsr ip
   17bd4:	andeq	r7, r1, ip, asr #24
   17bd8:	andeq	r7, r1, r8, ror #24
   17bdc:	andeq	r7, r1, r0, lsl #25
   17be0:	muleq	r1, ip, ip
   17be4:			; <UNDEFINED> instruction: 0x00017cb8
   17be8:	ldrdeq	r7, [r1], -ip
   17bec:	andeq	r7, r1, ip, lsr sp
   17bf0:	andeq	r7, r1, r8, lsl #26
   17bf4:	sub	sp, fp, #16
   17bf8:	pop	{r4, r5, r6, r7, fp, pc}
   17bfc:	add	r7, r6, #8
   17c00:	ldm	r6, {r2, r3}
   17c04:	add	lr, r6, #20
   17c08:	ldm	r7, {r0, r1, r7}
   17c0c:	ldm	lr, {r4, ip, lr}
   17c10:	ldr	r6, [r6, #32]
   17c14:	stm	sp, {r0, r1, r7}
   17c18:	movw	r1, #56701	; 0xdd7d
   17c1c:	add	r0, sp, #12
   17c20:	stm	r0, {r4, ip, lr}
   17c24:	str	r6, [sp, #24]
   17c28:	movt	r1, #1
   17c2c:	b	17d6c <argp_parse@@Base+0x16d4>
   17c30:	ldr	r2, [r6]
   17c34:	movw	r1, #56382	; 0xdc3e
   17c38:	mov	r0, r5
   17c3c:	movt	r1, #1
   17c40:	sub	sp, fp, #16
   17c44:	pop	{r4, r5, r6, r7, fp, lr}
   17c48:	b	11d60 <fprintf@plt>
   17c4c:	ldm	r6, {r2, r3}
   17c50:	movw	r1, #56398	; 0xdc4e
   17c54:	mov	r0, r5
   17c58:	movt	r1, #1
   17c5c:	sub	sp, fp, #16
   17c60:	pop	{r4, r5, r6, r7, fp, lr}
   17c64:	b	11d60 <fprintf@plt>
   17c68:	ldm	r6, {r2, r3}
   17c6c:	ldr	r0, [r6, #8]
   17c70:	movw	r1, #56421	; 0xdc65
   17c74:	movt	r1, #1
   17c78:	str	r0, [sp]
   17c7c:	b	17d6c <argp_parse@@Base+0x16d4>
   17c80:	ldm	r6, {r2, r3}
   17c84:	ldr	r0, [r6, #8]
   17c88:	ldr	r1, [r6, #12]
   17c8c:	stm	sp, {r0, r1}
   17c90:	movw	r1, #56449	; 0xdc81
   17c94:	movt	r1, #1
   17c98:	b	17d6c <argp_parse@@Base+0x16d4>
   17c9c:	add	r7, r6, #8
   17ca0:	ldm	r6, {r2, r3}
   17ca4:	ldm	r7, {r0, r1, r7}
   17ca8:	stm	sp, {r0, r1, r7}
   17cac:	movw	r1, #56481	; 0xdca1
   17cb0:	movt	r1, #1
   17cb4:	b	17d6c <argp_parse@@Base+0x16d4>
   17cb8:	add	r7, r6, #8
   17cbc:	ldm	r6, {r2, r3}
   17cc0:	ldm	r7, {r0, r1, r7}
   17cc4:	ldr	r6, [r6, #20]
   17cc8:	stm	sp, {r0, r1, r7}
   17ccc:	movw	r1, #56517	; 0xdcc5
   17cd0:	str	r6, [sp, #12]
   17cd4:	movt	r1, #1
   17cd8:	b	17d6c <argp_parse@@Base+0x16d4>
   17cdc:	add	r7, r6, #8
   17ce0:	ldm	r6, {r2, r3}
   17ce4:	ldm	r7, {r0, r1, r7}
   17ce8:	ldr	r4, [r6, #20]
   17cec:	ldr	r6, [r6, #24]
   17cf0:	stm	sp, {r0, r1, r7}
   17cf4:	movw	r1, #56557	; 0xdced
   17cf8:	str	r4, [sp, #12]
   17cfc:	str	r6, [sp, #16]
   17d00:	movt	r1, #1
   17d04:	b	17d6c <argp_parse@@Base+0x16d4>
   17d08:	add	r7, r6, #8
   17d0c:	ldm	r6, {r2, r3}
   17d10:	add	lr, r6, #20
   17d14:	ldm	r7, {r0, r1, r7}
   17d18:	ldm	lr, {r4, ip, lr}
   17d1c:	ldr	r6, [r6, #32]
   17d20:	stm	sp, {r0, r1, r7}
   17d24:	movw	r1, #56649	; 0xdd49
   17d28:	add	r0, sp, #12
   17d2c:	stm	r0, {r4, ip, lr}
   17d30:	str	r6, [sp, #24]
   17d34:	movt	r1, #1
   17d38:	b	17d6c <argp_parse@@Base+0x16d4>
   17d3c:	add	r7, r6, #8
   17d40:	ldm	r6, {r2, r3}
   17d44:	ldm	r7, {r0, r1, r7}
   17d48:	ldr	r4, [r6, #20]
   17d4c:	ldr	ip, [r6, #24]
   17d50:	ldr	r6, [r6, #28]
   17d54:	stm	sp, {r0, r1, r7}
   17d58:	movw	r1, #56601	; 0xdd19
   17d5c:	str	r4, [sp, #12]
   17d60:	str	ip, [sp, #16]
   17d64:	str	r6, [sp, #20]
   17d68:	movt	r1, #1
   17d6c:	mov	r0, r5
   17d70:	bl	11d60 <fprintf@plt>
   17d74:	sub	sp, fp, #16
   17d78:	pop	{r4, r5, r6, r7, fp, pc}
   17d7c:	push	{r4, sl, fp, lr}
   17d80:	add	fp, sp, #8
   17d84:	sub	sp, sp, #8
   17d88:	ldr	ip, [fp, #8]
   17d8c:	mov	lr, #0
   17d90:	ldr	r4, [ip, lr, lsl #2]
   17d94:	add	lr, lr, #1
   17d98:	cmp	r4, #0
   17d9c:	bne	17d90 <argp_parse@@Base+0x16f8>
   17da0:	sub	r4, lr, #1
   17da4:	str	ip, [sp]
   17da8:	str	r4, [sp, #4]
   17dac:	bl	17b1c <argp_parse@@Base+0x1484>
   17db0:	sub	sp, fp, #8
   17db4:	pop	{r4, sl, fp, pc}
   17db8:	push	{fp, lr}
   17dbc:	mov	fp, sp
   17dc0:	sub	sp, sp, #48	; 0x30
   17dc4:	ldr	ip, [fp, #8]
   17dc8:	ldr	lr, [ip]
   17dcc:	cmp	lr, #0
   17dd0:	str	lr, [sp, #8]
   17dd4:	beq	17e70 <argp_parse@@Base+0x17d8>
   17dd8:	ldr	lr, [ip, #4]
   17ddc:	cmp	lr, #0
   17de0:	str	lr, [sp, #12]
   17de4:	beq	17e78 <argp_parse@@Base+0x17e0>
   17de8:	ldr	lr, [ip, #8]
   17dec:	cmp	lr, #0
   17df0:	str	lr, [sp, #16]
   17df4:	beq	17e80 <argp_parse@@Base+0x17e8>
   17df8:	ldr	lr, [ip, #12]
   17dfc:	cmp	lr, #0
   17e00:	str	lr, [sp, #20]
   17e04:	beq	17e88 <argp_parse@@Base+0x17f0>
   17e08:	ldr	lr, [ip, #16]
   17e0c:	cmp	lr, #0
   17e10:	str	lr, [sp, #24]
   17e14:	beq	17e90 <argp_parse@@Base+0x17f8>
   17e18:	ldr	lr, [ip, #20]
   17e1c:	cmp	lr, #0
   17e20:	str	lr, [sp, #28]
   17e24:	beq	17e98 <argp_parse@@Base+0x1800>
   17e28:	ldr	lr, [ip, #24]
   17e2c:	cmp	lr, #0
   17e30:	str	lr, [sp, #32]
   17e34:	beq	17ea0 <argp_parse@@Base+0x1808>
   17e38:	ldr	lr, [ip, #28]
   17e3c:	cmp	lr, #0
   17e40:	str	lr, [sp, #36]	; 0x24
   17e44:	beq	17ea8 <argp_parse@@Base+0x1810>
   17e48:	ldr	lr, [ip, #32]
   17e4c:	cmp	lr, #0
   17e50:	str	lr, [sp, #40]	; 0x28
   17e54:	beq	17eb0 <argp_parse@@Base+0x1818>
   17e58:	ldr	lr, [ip, #36]	; 0x24
   17e5c:	mov	ip, #10
   17e60:	cmp	lr, #0
   17e64:	str	lr, [sp, #44]	; 0x2c
   17e68:	movweq	ip, #9
   17e6c:	b	17eb4 <argp_parse@@Base+0x181c>
   17e70:	mov	ip, #0
   17e74:	b	17eb4 <argp_parse@@Base+0x181c>
   17e78:	mov	ip, #1
   17e7c:	b	17eb4 <argp_parse@@Base+0x181c>
   17e80:	mov	ip, #2
   17e84:	b	17eb4 <argp_parse@@Base+0x181c>
   17e88:	mov	ip, #3
   17e8c:	b	17eb4 <argp_parse@@Base+0x181c>
   17e90:	mov	ip, #4
   17e94:	b	17eb4 <argp_parse@@Base+0x181c>
   17e98:	mov	ip, #5
   17e9c:	b	17eb4 <argp_parse@@Base+0x181c>
   17ea0:	mov	ip, #6
   17ea4:	b	17eb4 <argp_parse@@Base+0x181c>
   17ea8:	mov	ip, #7
   17eac:	b	17eb4 <argp_parse@@Base+0x181c>
   17eb0:	mov	ip, #8
   17eb4:	add	lr, sp, #8
   17eb8:	str	ip, [sp, #4]
   17ebc:	str	lr, [sp]
   17ec0:	bl	17b1c <argp_parse@@Base+0x1484>
   17ec4:	mov	sp, fp
   17ec8:	pop	{fp, pc}
   17ecc:	push	{fp, lr}
   17ed0:	mov	fp, sp
   17ed4:	sub	sp, sp, #56	; 0x38
   17ed8:	add	ip, fp, #8
   17edc:	str	ip, [sp, #12]
   17ee0:	ldr	lr, [fp, #8]
   17ee4:	cmp	lr, #0
   17ee8:	str	lr, [sp, #16]
   17eec:	beq	17f88 <argp_parse@@Base+0x18f0>
   17ef0:	ldr	lr, [ip, #4]
   17ef4:	cmp	lr, #0
   17ef8:	str	lr, [sp, #20]
   17efc:	beq	17f90 <argp_parse@@Base+0x18f8>
   17f00:	ldr	lr, [ip, #8]
   17f04:	cmp	lr, #0
   17f08:	str	lr, [sp, #24]
   17f0c:	beq	17f98 <argp_parse@@Base+0x1900>
   17f10:	ldr	lr, [ip, #12]
   17f14:	cmp	lr, #0
   17f18:	str	lr, [sp, #28]
   17f1c:	beq	17fa0 <argp_parse@@Base+0x1908>
   17f20:	ldr	lr, [ip, #16]
   17f24:	cmp	lr, #0
   17f28:	str	lr, [sp, #32]
   17f2c:	beq	17fa8 <argp_parse@@Base+0x1910>
   17f30:	ldr	lr, [ip, #20]
   17f34:	cmp	lr, #0
   17f38:	str	lr, [sp, #36]	; 0x24
   17f3c:	beq	17fb0 <argp_parse@@Base+0x1918>
   17f40:	ldr	lr, [ip, #24]
   17f44:	cmp	lr, #0
   17f48:	str	lr, [sp, #40]	; 0x28
   17f4c:	beq	17fb8 <argp_parse@@Base+0x1920>
   17f50:	ldr	lr, [ip, #28]
   17f54:	cmp	lr, #0
   17f58:	str	lr, [sp, #44]	; 0x2c
   17f5c:	beq	17fc0 <argp_parse@@Base+0x1928>
   17f60:	ldr	lr, [ip, #32]
   17f64:	cmp	lr, #0
   17f68:	str	lr, [sp, #48]	; 0x30
   17f6c:	beq	17fc8 <argp_parse@@Base+0x1930>
   17f70:	ldr	lr, [ip, #36]	; 0x24
   17f74:	mov	ip, #10
   17f78:	cmp	lr, #0
   17f7c:	str	lr, [sp, #52]	; 0x34
   17f80:	movweq	ip, #9
   17f84:	b	17fcc <argp_parse@@Base+0x1934>
   17f88:	mov	ip, #0
   17f8c:	b	17fcc <argp_parse@@Base+0x1934>
   17f90:	mov	ip, #1
   17f94:	b	17fcc <argp_parse@@Base+0x1934>
   17f98:	mov	ip, #2
   17f9c:	b	17fcc <argp_parse@@Base+0x1934>
   17fa0:	mov	ip, #3
   17fa4:	b	17fcc <argp_parse@@Base+0x1934>
   17fa8:	mov	ip, #4
   17fac:	b	17fcc <argp_parse@@Base+0x1934>
   17fb0:	mov	ip, #5
   17fb4:	b	17fcc <argp_parse@@Base+0x1934>
   17fb8:	mov	ip, #6
   17fbc:	b	17fcc <argp_parse@@Base+0x1934>
   17fc0:	mov	ip, #7
   17fc4:	b	17fcc <argp_parse@@Base+0x1934>
   17fc8:	mov	ip, #8
   17fcc:	add	lr, sp, #16
   17fd0:	str	ip, [sp, #4]
   17fd4:	str	lr, [sp]
   17fd8:	bl	17b1c <argp_parse@@Base+0x1484>
   17fdc:	mov	sp, fp
   17fe0:	pop	{fp, pc}
   17fe4:	push	{fp, lr}
   17fe8:	mov	fp, sp
   17fec:	movw	r0, #62388	; 0xf3b4
   17ff0:	movt	r0, #2
   17ff4:	ldr	r1, [r0]
   17ff8:	mov	r0, #10
   17ffc:	bl	11e5c <fputc@plt>
   18000:	movw	r0, #56761	; 0xddb9
   18004:	movw	r1, #56781	; 0xddcd
   18008:	movt	r0, #1
   1800c:	movt	r1, #1
   18010:	bl	11af0 <printf@plt>
   18014:	movw	r0, #56803	; 0xdde3
   18018:	movw	r1, #56059	; 0xdafb
   1801c:	movw	r2, #56823	; 0xddf7
   18020:	movt	r0, #1
   18024:	movt	r1, #1
   18028:	movt	r2, #1
   1802c:	bl	11af0 <printf@plt>
   18030:	movw	r0, #56862	; 0xde1e
   18034:	movw	r1, #56901	; 0xde45
   18038:	movt	r0, #1
   1803c:	movt	r1, #1
   18040:	pop	{fp, lr}
   18044:	b	11af0 <printf@plt>
   18048:	clz	r2, r1
   1804c:	clz	r3, r0
   18050:	lsr	r2, r2, #5
   18054:	lsr	r3, r3, #5
   18058:	orrs	r2, r3, r2
   1805c:	movwne	r1, #1
   18060:	movwne	r0, #1
   18064:	cmp	r1, #0
   18068:	beq	18098 <argp_parse@@Base+0x1a00>
   1806c:	mvn	r2, #-2147483648	; 0x80000000
   18070:	udiv	r2, r2, r1
   18074:	cmp	r2, r0
   18078:	bcs	18098 <argp_parse@@Base+0x1a00>
   1807c:	push	{fp, lr}
   18080:	mov	fp, sp
   18084:	bl	11d78 <__errno_location@plt>
   18088:	mov	r1, #12
   1808c:	str	r1, [r0]
   18090:	mov	r0, #0
   18094:	pop	{fp, pc}
   18098:	b	11a84 <calloc@plt>
   1809c:	cmp	r0, #0
   180a0:	movweq	r0, #1
   180a4:	cmn	r0, #1
   180a8:	ble	180b0 <argp_parse@@Base+0x1a18>
   180ac:	b	11cb8 <malloc@plt>
   180b0:	push	{fp, lr}
   180b4:	mov	fp, sp
   180b8:	bl	11d78 <__errno_location@plt>
   180bc:	mov	r1, #12
   180c0:	str	r1, [r0]
   180c4:	mov	r0, #0
   180c8:	pop	{fp, pc}
   180cc:	push	{fp, lr}
   180d0:	mov	fp, sp
   180d4:	cmp	r0, #0
   180d8:	beq	180f4 <argp_parse@@Base+0x1a5c>
   180dc:	cmp	r1, #0
   180e0:	beq	18100 <argp_parse@@Base+0x1a68>
   180e4:	cmn	r1, #1
   180e8:	ble	1810c <argp_parse@@Base+0x1a74>
   180ec:	pop	{fp, lr}
   180f0:	b	11c04 <realloc@plt>
   180f4:	mov	r0, r1
   180f8:	pop	{fp, lr}
   180fc:	b	1809c <argp_parse@@Base+0x1a04>
   18100:	bl	17968 <argp_parse@@Base+0x12d0>
   18104:	mov	r0, #0
   18108:	pop	{fp, pc}
   1810c:	bl	11d78 <__errno_location@plt>
   18110:	mov	r1, #12
   18114:	str	r1, [r0]
   18118:	mov	r0, #0
   1811c:	pop	{fp, pc}

00018120 <argp_help@@Base>:
   18120:	push	{fp, lr}
   18124:	mov	fp, sp
   18128:	sub	sp, sp, #8
   1812c:	mov	ip, r2
   18130:	mov	r2, r1
   18134:	str	r3, [sp]
   18138:	mov	r1, #0
   1813c:	mov	r3, ip
   18140:	bl	1814c <argp_help@@Base+0x2c>
   18144:	mov	sp, fp
   18148:	pop	{fp, pc}
   1814c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18150:	add	fp, sp, #28
   18154:	sub	sp, sp, #108	; 0x6c
   18158:	cmp	r2, #0
   1815c:	str	r1, [fp, #-96]	; 0xffffffa0
   18160:	str	r0, [fp, #-112]	; 0xffffff90
   18164:	beq	18bbc <argp_help@@Base+0xa9c>
   18168:	ldr	r0, [fp, #8]
   1816c:	mov	r6, r3
   18170:	mov	r5, r2
   18174:	str	r0, [fp, #-100]	; 0xffffff9c
   18178:	mov	r0, r2
   1817c:	bl	11eb0 <flockfile@plt>
   18180:	movw	r8, #62320	; 0xf370
   18184:	str	r6, [fp, #-132]	; 0xffffff7c
   18188:	movt	r8, #2
   1818c:	ldr	r0, [r8, #36]	; 0x24
   18190:	cmp	r0, #0
   18194:	bne	186bc <argp_help@@Base+0x59c>
   18198:	movw	r0, #57093	; 0xdf05
   1819c:	movt	r0, #1
   181a0:	bl	11ca0 <getenv@plt>
   181a4:	mov	r1, r8
   181a8:	mov	r8, r0
   181ac:	mov	r0, #32
   181b0:	sub	r2, fp, #88	; 0x58
   181b4:	add	r3, r1, #16
   181b8:	vld1.64	{d16-d17}, [r1], r0
   181bc:	add	r7, r2, #16
   181c0:	cmp	r8, #0
   181c4:	vld1.64	{d18-d19}, [r3]
   181c8:	vldr	d20, [r1]
   181cc:	mov	r1, r2
   181d0:	vst1.64	{d16-d17}, [r1], r0
   181d4:	vst1.64	{d18-d19}, [r7]
   181d8:	vstr	d20, [r1]
   181dc:	beq	186b4 <argp_help@@Base+0x594>
   181e0:	str	r7, [fp, #-108]	; 0xffffff94
   181e4:	str	r3, [fp, #-104]	; 0xffffff98
   181e8:	str	r5, [fp, #-136]	; 0xffffff78
   181ec:	ldrb	r5, [r8]
   181f0:	cmp	r5, #0
   181f4:	beq	185bc <argp_help@@Base+0x49c>
   181f8:	bl	11d00 <__ctype_b_loc@plt>
   181fc:	movw	r7, #57752	; 0xe198
   18200:	str	r0, [fp, #-92]	; 0xffffffa4
   18204:	movt	r7, #1
   18208:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1820c:	uxtb	r1, r5
   18210:	ldr	r0, [r0]
   18214:	add	r1, r0, r1, lsl #1
   18218:	b	18224 <argp_help@@Base+0x104>
   1821c:	ldrb	r5, [r8, #1]!
   18220:	add	r1, r0, r5, lsl #1
   18224:	ldrh	r1, [r1]
   18228:	tst	r1, #8192	; 0x2000
   1822c:	bne	1821c <argp_help@@Base+0xfc>
   18230:	tst	r1, #1024	; 0x400
   18234:	beq	18590 <argp_help@@Base+0x470>
   18238:	mov	r3, r5
   1823c:	mov	r2, r8
   18240:	b	18248 <argp_help@@Base+0x128>
   18244:	ldrb	r3, [r2, #1]!
   18248:	uxtb	r6, r3
   1824c:	add	r1, r0, r6, lsl #1
   18250:	ldrh	r1, [r1]
   18254:	tst	r1, #8
   18258:	bne	18244 <argp_help@@Base+0x124>
   1825c:	cmp	r6, #95	; 0x5f
   18260:	cmpne	r6, #45	; 0x2d
   18264:	beq	18244 <argp_help@@Base+0x124>
   18268:	tst	r1, #8192	; 0x2000
   1826c:	mov	r4, r2
   18270:	beq	1828c <argp_help@@Base+0x16c>
   18274:	mov	r4, r2
   18278:	ldrb	r3, [r4, #1]!
   1827c:	add	r1, r0, r3, lsl #1
   18280:	ldrh	r1, [r1]
   18284:	tst	r1, #8192	; 0x2000
   18288:	bne	18278 <argp_help@@Base+0x158>
   1828c:	sub	r9, r2, r8
   18290:	uxtb	r2, r3
   18294:	cmp	r2, #0
   18298:	cmpne	r2, #44	; 0x2c
   1829c:	bne	182ec <argp_help@@Base+0x1cc>
   182a0:	uxtb	r0, r5
   182a4:	mov	sl, #1
   182a8:	cmp	r0, #110	; 0x6e
   182ac:	bne	182e4 <argp_help@@Base+0x1c4>
   182b0:	ldrb	r0, [r8, #1]
   182b4:	mov	sl, #1
   182b8:	cmp	r0, #111	; 0x6f
   182bc:	bne	182e4 <argp_help@@Base+0x1c4>
   182c0:	ldrb	r0, [r8, #2]
   182c4:	mov	sl, #1
   182c8:	cmp	r0, #45	; 0x2d
   182cc:	bne	182e4 <argp_help@@Base+0x1c4>
   182d0:	sub	r9, r9, #3
   182d4:	add	r8, r8, #3
   182d8:	mov	r5, #0
   182dc:	mov	sl, #1
   182e0:	b	18370 <argp_help@@Base+0x250>
   182e4:	mov	r5, #1
   182e8:	b	18370 <argp_help@@Base+0x250>
   182ec:	cmp	r2, #61	; 0x3d
   182f0:	bne	18308 <argp_help@@Base+0x1e8>
   182f4:	ldrb	r1, [r4, #1]!
   182f8:	add	r1, r0, r1, lsl #1
   182fc:	ldrh	r1, [r1]
   18300:	tst	r1, #8192	; 0x2000
   18304:	bne	182f4 <argp_help@@Base+0x1d4>
   18308:	mov	sl, #0
   1830c:	tst	r1, #2048	; 0x800
   18310:	bne	1831c <argp_help@@Base+0x1fc>
   18314:	mov	r5, #0
   18318:	b	18370 <argp_help@@Base+0x250>
   1831c:	mov	r0, r4
   18320:	mov	r1, #0
   18324:	mov	r2, #10
   18328:	bl	11ac0 <strtol@plt>
   1832c:	mov	r5, r0
   18330:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18334:	sub	r4, r4, #1
   18338:	ldr	r0, [r0]
   1833c:	ldrb	r1, [r4, #1]!
   18340:	add	r1, r0, r1, lsl #1
   18344:	ldrh	r1, [r1]
   18348:	tst	r1, #2048	; 0x800
   1834c:	bne	1833c <argp_help@@Base+0x21c>
   18350:	mov	sl, #0
   18354:	tst	r1, #8192	; 0x2000
   18358:	beq	18370 <argp_help@@Base+0x250>
   1835c:	ldrb	r1, [r4, #1]!
   18360:	add	r1, r0, r1, lsl #1
   18364:	ldrb	r1, [r1, #1]
   18368:	tst	r1, #32
   1836c:	bne	1835c <argp_help@@Base+0x23c>
   18370:	mov	r0, r7
   18374:	bl	11d30 <strlen@plt>
   18378:	cmp	r0, r9
   1837c:	bne	1839c <argp_help@@Base+0x27c>
   18380:	mov	r0, r8
   18384:	mov	r1, r7
   18388:	mov	r2, r9
   1838c:	bl	11f28 <strncmp@plt>
   18390:	cmp	r0, #0
   18394:	mov	r6, r7
   18398:	beq	18520 <argp_help@@Base+0x400>
   1839c:	add	r6, r7, #16
   183a0:	mov	r0, r6
   183a4:	bl	11d30 <strlen@plt>
   183a8:	cmp	r0, r9
   183ac:	bne	183c8 <argp_help@@Base+0x2a8>
   183b0:	mov	r0, r8
   183b4:	mov	r1, r6
   183b8:	mov	r2, r9
   183bc:	bl	11f28 <strncmp@plt>
   183c0:	cmp	r0, #0
   183c4:	beq	18520 <argp_help@@Base+0x400>
   183c8:	add	r6, r7, #32
   183cc:	mov	r0, r6
   183d0:	bl	11d30 <strlen@plt>
   183d4:	cmp	r0, r9
   183d8:	bne	183f4 <argp_help@@Base+0x2d4>
   183dc:	mov	r0, r8
   183e0:	mov	r1, r6
   183e4:	mov	r2, r9
   183e8:	bl	11f28 <strncmp@plt>
   183ec:	cmp	r0, #0
   183f0:	beq	18520 <argp_help@@Base+0x400>
   183f4:	add	r6, r7, #48	; 0x30
   183f8:	mov	r0, r6
   183fc:	bl	11d30 <strlen@plt>
   18400:	cmp	r0, r9
   18404:	bne	18420 <argp_help@@Base+0x300>
   18408:	mov	r0, r8
   1840c:	mov	r1, r6
   18410:	mov	r2, r9
   18414:	bl	11f28 <strncmp@plt>
   18418:	cmp	r0, #0
   1841c:	beq	18520 <argp_help@@Base+0x400>
   18420:	add	r6, r7, #64	; 0x40
   18424:	mov	r0, r6
   18428:	bl	11d30 <strlen@plt>
   1842c:	cmp	r0, r9
   18430:	bne	1844c <argp_help@@Base+0x32c>
   18434:	mov	r0, r8
   18438:	mov	r1, r6
   1843c:	mov	r2, r9
   18440:	bl	11f28 <strncmp@plt>
   18444:	cmp	r0, #0
   18448:	beq	18520 <argp_help@@Base+0x400>
   1844c:	add	r6, r7, #80	; 0x50
   18450:	mov	r0, r6
   18454:	bl	11d30 <strlen@plt>
   18458:	cmp	r0, r9
   1845c:	bne	18478 <argp_help@@Base+0x358>
   18460:	mov	r0, r8
   18464:	mov	r1, r6
   18468:	mov	r2, r9
   1846c:	bl	11f28 <strncmp@plt>
   18470:	cmp	r0, #0
   18474:	beq	18520 <argp_help@@Base+0x400>
   18478:	add	r6, r7, #96	; 0x60
   1847c:	mov	r0, r6
   18480:	bl	11d30 <strlen@plt>
   18484:	cmp	r0, r9
   18488:	bne	184a4 <argp_help@@Base+0x384>
   1848c:	mov	r0, r8
   18490:	mov	r1, r6
   18494:	mov	r2, r9
   18498:	bl	11f28 <strncmp@plt>
   1849c:	cmp	r0, #0
   184a0:	beq	18520 <argp_help@@Base+0x400>
   184a4:	add	r6, r7, #112	; 0x70
   184a8:	mov	r0, r6
   184ac:	bl	11d30 <strlen@plt>
   184b0:	cmp	r0, r9
   184b4:	bne	184d0 <argp_help@@Base+0x3b0>
   184b8:	mov	r0, r8
   184bc:	mov	r1, r6
   184c0:	mov	r2, r9
   184c4:	bl	11f28 <strncmp@plt>
   184c8:	cmp	r0, #0
   184cc:	beq	18520 <argp_help@@Base+0x400>
   184d0:	add	r6, r7, #128	; 0x80
   184d4:	mov	r0, r6
   184d8:	bl	11d30 <strlen@plt>
   184dc:	cmp	r0, r9
   184e0:	bne	184fc <argp_help@@Base+0x3dc>
   184e4:	mov	r0, r8
   184e8:	mov	r1, r6
   184ec:	mov	r2, r9
   184f0:	bl	11f28 <strncmp@plt>
   184f4:	cmp	r0, #0
   184f8:	beq	18520 <argp_help@@Base+0x400>
   184fc:	sub	sp, sp, #8
   18500:	str	r9, [sp]
   18504:	str	r8, [sp, #4]
   18508:	movw	r3, #57154	; 0xdf42
   1850c:	mov	r1, #0
   18510:	mov	r2, #0
   18514:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18518:	movt	r3, #1
   1851c:	b	18564 <argp_help@@Base+0x444>
   18520:	cmp	sl, #0
   18524:	beq	18534 <argp_help@@Base+0x414>
   18528:	ldrb	r0, [r6, #14]
   1852c:	cmp	r0, #0
   18530:	beq	18544 <argp_help@@Base+0x424>
   18534:	ldrb	r0, [r6, #15]
   18538:	sub	r1, fp, #88	; 0x58
   1853c:	str	r5, [r1, r0]
   18540:	b	1856c <argp_help@@Base+0x44c>
   18544:	sub	sp, sp, #8
   18548:	str	r9, [sp]
   1854c:	str	r8, [sp, #4]
   18550:	movw	r3, #57107	; 0xdf13
   18554:	mov	r1, #0
   18558:	mov	r2, #0
   1855c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18560:	movt	r3, #1
   18564:	bl	19818 <argp_failure@@Base>
   18568:	add	sp, sp, #8
   1856c:	mov	r8, r4
   18570:	ldr	r6, [fp, #-132]	; 0xffffff7c
   18574:	ldrb	r0, [r8], #1
   18578:	cmp	r0, #44	; 0x2c
   1857c:	movne	r8, r4
   18580:	ldrb	r5, [r8]
   18584:	cmp	r5, #0
   18588:	bne	18208 <argp_help@@Base+0xe8>
   1858c:	b	185bc <argp_help@@Base+0x49c>
   18590:	tst	r5, #255	; 0xff
   18594:	beq	185bc <argp_help@@Base+0x49c>
   18598:	sub	sp, sp, #8
   1859c:	str	r8, [sp]
   185a0:	movw	r3, #57192	; 0xdf68
   185a4:	mov	r1, #0
   185a8:	mov	r2, #0
   185ac:	ldr	r0, [fp, #-96]	; 0xffffffa0
   185b0:	movt	r3, #1
   185b4:	bl	19818 <argp_failure@@Base>
   185b8:	add	sp, sp, #8
   185bc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   185c0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   185c4:	movw	r0, #57752	; 0xe198
   185c8:	movt	r0, #1
   185cc:	cmp	r2, r1
   185d0:	bge	1865c <argp_help@@Base+0x53c>
   185d4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   185d8:	cmp	r2, r1
   185dc:	bge	18664 <argp_help@@Base+0x544>
   185e0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   185e4:	cmp	r2, r1
   185e8:	bge	1866c <argp_help@@Base+0x54c>
   185ec:	ldr	r2, [fp, #-68]	; 0xffffffbc
   185f0:	cmp	r2, r1
   185f4:	bge	18674 <argp_help@@Base+0x554>
   185f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   185fc:	cmp	r2, r1
   18600:	bge	1867c <argp_help@@Base+0x55c>
   18604:	ldr	r2, [fp, #-60]	; 0xffffffc4
   18608:	ldr	r5, [fp, #-136]	; 0xffffff78
   1860c:	cmp	r2, r1
   18610:	bge	19610 <argp_help@@Base+0x14f0>
   18614:	ldr	r0, [fp, #-108]	; 0xffffff94
   18618:	sub	r1, fp, #88	; 0x58
   1861c:	movw	r2, #62320	; 0xf370
   18620:	mov	r3, r1
   18624:	movt	r2, #2
   18628:	mov	r1, r2
   1862c:	vld1.64	{d16-d17}, [r0]
   18630:	mov	r0, #32
   18634:	vld1.64	{d18-d19}, [r3], r0
   18638:	ldr	r0, [fp, #-104]	; 0xffffff98
   1863c:	vst1.64	{d16-d17}, [r0]
   18640:	mov	r0, #36	; 0x24
   18644:	vst1.64	{d18-d19}, [r1], r0
   18648:	mov	r0, #1
   1864c:	str	r0, [r1]
   18650:	ldr	r0, [r3]
   18654:	str	r0, [r2, #32]
   18658:	b	186b4 <argp_help@@Base+0x594>
   1865c:	add	r0, r0, #32
   18660:	b	18680 <argp_help@@Base+0x560>
   18664:	add	r0, r0, #48	; 0x30
   18668:	b	18680 <argp_help@@Base+0x560>
   1866c:	add	r0, r0, #64	; 0x40
   18670:	b	18680 <argp_help@@Base+0x560>
   18674:	add	r0, r0, #80	; 0x50
   18678:	b	18680 <argp_help@@Base+0x560>
   1867c:	add	r0, r0, #96	; 0x60
   18680:	ldr	r5, [fp, #-136]	; 0xffffff78
   18684:	sub	sp, sp, #8
   18688:	movw	r1, #57273	; 0xdfb9
   1868c:	str	r0, [sp, #4]
   18690:	movw	r3, #57221	; 0xdf85
   18694:	mov	r2, #0
   18698:	movt	r1, #1
   1869c:	movt	r3, #1
   186a0:	str	r1, [sp]
   186a4:	mov	r1, #0
   186a8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   186ac:	bl	19818 <argp_failure@@Base>
   186b0:	add	sp, sp, #8
   186b4:	movw	r8, #62320	; 0xf370
   186b8:	movt	r8, #2
   186bc:	ldr	r2, [r8, #32]
   186c0:	mov	r0, #0
   186c4:	mov	r1, #0
   186c8:	mov	r3, #0
   186cc:	str	r0, [fp, #-108]	; 0xffffff94
   186d0:	mov	r0, r5
   186d4:	bl	1c630 <argp_failure@@Base+0x2e18>
   186d8:	cmp	r0, #0
   186dc:	beq	18778 <argp_help@@Base+0x658>
   186e0:	mov	r4, r0
   186e4:	tst	r6, #11
   186e8:	str	r5, [fp, #-136]	; 0xffffff78
   186ec:	beq	18848 <argp_help@@Base+0x728>
   186f0:	ldr	r0, [fp, #-112]	; 0xffffff90
   186f4:	mov	r1, #0
   186f8:	bl	19a20 <argp_failure@@Base+0x208>
   186fc:	ldr	sl, [r0, #4]
   18700:	str	r0, [fp, #-108]	; 0xffffff94
   18704:	cmp	sl, #0
   18708:	beq	18848 <argp_help@@Base+0x728>
   1870c:	ldr	r6, [r0]
   18710:	movw	r9, #54398	; 0xd47e
   18714:	mov	r5, sl
   18718:	movt	r9, #1
   1871c:	str	r6, [fp, #-104]	; 0xffffff98
   18720:	ldr	r7, [r6, #4]
   18724:	cmp	r7, #0
   18728:	beq	18768 <argp_help@@Base+0x648>
   1872c:	ldr	r0, [r6]
   18730:	add	r8, r0, #12
   18734:	ldr	r0, [r8, #-12]
   18738:	cmp	r0, #0
   1873c:	beq	1875c <argp_help@@Base+0x63c>
   18740:	ldrb	r1, [r8]
   18744:	tst	r1, #2
   18748:	bne	1875c <argp_help@@Base+0x63c>
   1874c:	mov	r1, r9
   18750:	bl	11ab4 <strcmp@plt>
   18754:	cmp	r0, #0
   18758:	beq	18788 <argp_help@@Base+0x668>
   1875c:	subs	r7, r7, #1
   18760:	add	r8, r8, #24
   18764:	bne	18734 <argp_help@@Base+0x614>
   18768:	subs	r5, r5, #1
   1876c:	add	r6, r6, #28
   18770:	bne	18720 <argp_help@@Base+0x600>
   18774:	b	18794 <argp_help@@Base+0x674>
   18778:	mov	r0, r5
   1877c:	sub	sp, fp, #28
   18780:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18784:	b	11c34 <funlockfile@plt>
   18788:	cmp	r6, #0
   1878c:	mvnne	r0, #0
   18790:	strne	r0, [r6, #12]
   18794:	ldr	r6, [fp, #-104]	; 0xffffff98
   18798:	movw	r9, #55968	; 0xdaa0
   1879c:	mov	r8, sl
   187a0:	movt	r9, #1
   187a4:	ldr	r5, [r6, #4]
   187a8:	cmp	r5, #0
   187ac:	beq	187ec <argp_help@@Base+0x6cc>
   187b0:	ldr	r0, [r6]
   187b4:	add	r7, r0, #12
   187b8:	ldr	r0, [r7, #-12]
   187bc:	cmp	r0, #0
   187c0:	beq	187e0 <argp_help@@Base+0x6c0>
   187c4:	ldrb	r1, [r7]
   187c8:	tst	r1, #2
   187cc:	bne	187e0 <argp_help@@Base+0x6c0>
   187d0:	mov	r1, r9
   187d4:	bl	11ab4 <strcmp@plt>
   187d8:	cmp	r0, #0
   187dc:	beq	187fc <argp_help@@Base+0x6dc>
   187e0:	subs	r5, r5, #1
   187e4:	add	r7, r7, #24
   187e8:	bne	187b8 <argp_help@@Base+0x698>
   187ec:	subs	r8, r8, #1
   187f0:	add	r6, r6, #28
   187f4:	bne	187a4 <argp_help@@Base+0x684>
   187f8:	b	18808 <argp_help@@Base+0x6e8>
   187fc:	cmp	r6, #0
   18800:	mvnne	r0, #0
   18804:	strne	r0, [r6, #12]
   18808:	ldr	r0, [fp, #-104]	; 0xffffff98
   1880c:	mov	r1, #0
   18810:	add	r0, r0, #24
   18814:	str	r1, [r0], #28
   18818:	add	r1, r1, #1
   1881c:	cmp	sl, r1
   18820:	bne	18814 <argp_help@@Base+0x6f4>
   18824:	ldr	r0, [fp, #-104]	; 0xffffff98
   18828:	movw	r3, #44020	; 0xabf4
   1882c:	mov	r1, sl
   18830:	mov	r2, #28
   18834:	movt	r3, #1
   18838:	bl	11ed4 <qsort@plt>
   1883c:	ldr	r6, [fp, #-132]	; 0xffffff7c
   18840:	movw	r8, #62320	; 0xf370
   18844:	movt	r8, #2
   18848:	tst	r6, #3
   1884c:	beq	18bc4 <argp_help@@Base+0xaa4>
   18850:	ldr	r0, [fp, #-112]	; 0xffffff90
   18854:	bl	1a0a4 <argp_failure@@Base+0x88c>
   18858:	mov	r2, r0
   1885c:	add	r0, r0, #7
   18860:	bic	r0, r0, #7
   18864:	sub	r0, sp, r0
   18868:	mov	sp, r0
   1886c:	mov	r1, #0
   18870:	str	r0, [fp, #-104]	; 0xffffff98
   18874:	bl	11da8 <memset@plt>
   18878:	mov	r7, #1
   1887c:	ldr	r1, [r4, #24]
   18880:	ldr	r2, [r4, #28]
   18884:	ldr	r0, [r4, #16]
   18888:	mov	r5, r6
   1888c:	ldr	r6, [r8, #28]
   18890:	sub	r1, r2, r1
   18894:	cmp	r1, r0
   18898:	bls	188a4 <argp_help@@Base+0x784>
   1889c:	mov	r0, r4
   188a0:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   188a4:	ldr	r0, [fp, #-104]	; 0xffffff98
   188a8:	ldr	r9, [r4, #12]
   188ac:	movw	r1, #56998	; 0xdea6
   188b0:	str	r6, [r4, #12]
   188b4:	tst	r7, #1
   188b8:	movt	r1, #1
   188bc:	str	r0, [fp, #-88]	; 0xffffffa8
   188c0:	mov	r0, r4
   188c4:	beq	188d4 <argp_help@@Base+0x7b4>
   188c8:	movw	r2, #57004	; 0xdeac
   188cc:	movt	r2, #1
   188d0:	b	188dc <argp_help@@Base+0x7bc>
   188d4:	movw	r2, #57011	; 0xdeb3
   188d8:	movt	r2, #1
   188dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   188e0:	bl	1cd40 <argp_failure@@Base+0x3528>
   188e4:	ldr	r1, [r4, #24]
   188e8:	ldr	r2, [r4, #28]
   188ec:	ldr	r0, [r4, #16]
   188f0:	ldr	r6, [r8, #28]
   188f4:	sub	r1, r2, r1
   188f8:	cmp	r1, r0
   188fc:	bls	18908 <argp_help@@Base+0x7e8>
   18900:	mov	r0, r4
   18904:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   18908:	ldr	r8, [r4, #4]
   1890c:	str	r6, [r4, #4]
   18910:	mov	r6, r5
   18914:	tst	r5, #2
   18918:	bne	18930 <argp_help@@Base+0x810>
   1891c:	ldr	r0, [fp, #-108]	; 0xffffff94
   18920:	mov	r1, r4
   18924:	bl	1a10c <argp_failure@@Base+0x8f4>
   18928:	orr	r6, r6, #2
   1892c:	b	18994 <argp_help@@Base+0x874>
   18930:	ldr	r0, [fp, #-108]	; 0xffffff94
   18934:	ldr	r0, [r0, #4]
   18938:	cmp	r0, #0
   1893c:	beq	18994 <argp_help@@Base+0x874>
   18940:	ldr	r0, [r4, #28]
   18944:	ldr	r1, [r4, #32]
   18948:	add	r2, r0, #12
   1894c:	cmp	r2, r1
   18950:	bls	1896c <argp_help@@Base+0x84c>
   18954:	mov	r0, r4
   18958:	mov	r1, #12
   1895c:	bl	1cc54 <argp_failure@@Base+0x343c>
   18960:	cmp	r0, #0
   18964:	beq	18994 <argp_help@@Base+0x874>
   18968:	ldr	r0, [r4, #28]
   1896c:	movw	r1, #57736	; 0xe188
   18970:	movt	r1, #1
   18974:	vldr	d16, [r1]
   18978:	movw	r1, #11822	; 0x2e2e
   1897c:	movt	r1, #23854	; 0x5d2e
   18980:	str	r1, [r0, #8]
   18984:	vst1.8	{d16}, [r0]
   18988:	ldr	r0, [r4, #28]
   1898c:	add	r0, r0, #12
   18990:	str	r0, [r4, #28]
   18994:	sub	sp, sp, #8
   18998:	str	r4, [sp]
   1899c:	sub	r2, fp, #88	; 0x58
   189a0:	mov	r3, #1
   189a4:	ldr	r0, [fp, #-112]	; 0xffffff90
   189a8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   189ac:	bl	1a4bc <argp_failure@@Base+0xca4>
   189b0:	add	sp, sp, #8
   189b4:	mov	sl, r0
   189b8:	ldr	r2, [r4, #24]
   189bc:	ldr	r0, [r4, #28]
   189c0:	ldr	r1, [r4, #16]
   189c4:	sub	r2, r0, r2
   189c8:	cmp	r2, r1
   189cc:	bls	189e8 <argp_help@@Base+0x8c8>
   189d0:	mov	r0, r4
   189d4:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   189d8:	ldr	r2, [r4, #24]
   189dc:	ldr	r0, [r4, #28]
   189e0:	ldr	r1, [r4, #16]
   189e4:	sub	r2, r0, r2
   189e8:	cmp	r2, r1
   189ec:	str	r9, [r4, #12]
   189f0:	bls	18a00 <argp_help@@Base+0x8e0>
   189f4:	mov	r0, r4
   189f8:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   189fc:	ldr	r0, [r4, #28]
   18a00:	str	r8, [r4, #4]
   18a04:	movw	r8, #62320	; 0xf370
   18a08:	ldr	r1, [r4, #32]
   18a0c:	movt	r8, #2
   18a10:	cmp	r0, r1
   18a14:	bcc	18a30 <argp_help@@Base+0x910>
   18a18:	mov	r0, r4
   18a1c:	mov	r1, #1
   18a20:	bl	1cc54 <argp_failure@@Base+0x343c>
   18a24:	cmp	r0, #0
   18a28:	beq	18a40 <argp_help@@Base+0x920>
   18a2c:	ldr	r0, [r4, #28]
   18a30:	add	r1, r0, #1
   18a34:	str	r1, [r4, #28]
   18a38:	mov	r1, #10
   18a3c:	strb	r1, [r0]
   18a40:	mov	r7, #0
   18a44:	cmp	sl, #0
   18a48:	bne	1887c <argp_help@@Base+0x75c>
   18a4c:	mov	r5, #1
   18a50:	tst	r6, #16
   18a54:	beq	18a80 <argp_help@@Base+0x960>
   18a58:	sub	sp, sp, #8
   18a5c:	mov	r0, #1
   18a60:	mov	r2, #0
   18a64:	mov	r3, #0
   18a68:	stm	sp, {r0, r4}
   18a6c:	ldr	r0, [fp, #-112]	; 0xffffff90
   18a70:	ldr	r1, [fp, #-96]	; 0xffffffa0
   18a74:	bl	1a768 <argp_failure@@Base+0xf50>
   18a78:	add	sp, sp, #8
   18a7c:	orr	r5, r0, r5
   18a80:	ldr	r0, [fp, #-108]	; 0xffffff94
   18a84:	tst	r6, #4
   18a88:	beq	18aac <argp_help@@Base+0x98c>
   18a8c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18a90:	movw	r1, #57018	; 0xdeba
   18a94:	mov	r0, r4
   18a98:	movt	r1, #1
   18a9c:	mov	r3, r2
   18aa0:	bl	1cd40 <argp_failure@@Base+0x3528>
   18aa4:	ldr	r0, [fp, #-108]	; 0xffffff94
   18aa8:	mov	r5, #1
   18aac:	tst	r6, #8
   18ab0:	ldrne	r1, [r0, #4]
   18ab4:	cmpne	r1, #0
   18ab8:	bne	18bd4 <argp_help@@Base+0xab4>
   18abc:	tst	r6, #32
   18ac0:	beq	18aec <argp_help@@Base+0x9cc>
   18ac4:	sub	sp, sp, #8
   18ac8:	mov	r0, #0
   18acc:	mov	r2, #1
   18ad0:	mov	r3, r5
   18ad4:	stm	sp, {r0, r4}
   18ad8:	ldr	r0, [fp, #-112]	; 0xffffff90
   18adc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   18ae0:	bl	1a768 <argp_failure@@Base+0xf50>
   18ae4:	add	sp, sp, #8
   18ae8:	orr	r5, r0, r5
   18aec:	tst	r6, #64	; 0x40
   18af0:	movwne	r6, #63008	; 0xf620
   18af4:	movtne	r6, #2
   18af8:	ldrne	r0, [r6]
   18afc:	cmpne	r0, #0
   18b00:	beq	18b58 <argp_help@@Base+0xa38>
   18b04:	cmp	r5, #0
   18b08:	beq	18b44 <argp_help@@Base+0xa24>
   18b0c:	ldr	r0, [r4, #28]
   18b10:	ldr	r1, [r4, #32]
   18b14:	cmp	r0, r1
   18b18:	bcc	18b34 <argp_help@@Base+0xa14>
   18b1c:	mov	r0, r4
   18b20:	mov	r1, #1
   18b24:	bl	1cc54 <argp_failure@@Base+0x343c>
   18b28:	cmp	r0, #0
   18b2c:	beq	18b44 <argp_help@@Base+0xa24>
   18b30:	ldr	r0, [r4, #28]
   18b34:	add	r1, r0, #1
   18b38:	str	r1, [r4, #28]
   18b3c:	mov	r1, #10
   18b40:	strb	r1, [r0]
   18b44:	ldr	r2, [r6]
   18b48:	movw	r1, #57073	; 0xdef1
   18b4c:	mov	r0, r4
   18b50:	movt	r1, #1
   18b54:	bl	1cd40 <argp_failure@@Base+0x3528>
   18b58:	ldr	r0, [fp, #-136]	; 0xffffff78
   18b5c:	bl	11c34 <funlockfile@plt>
   18b60:	ldr	r0, [fp, #-108]	; 0xffffff94
   18b64:	cmp	r0, #0
   18b68:	beq	18bb4 <argp_help@@Base+0xa94>
   18b6c:	ldr	r0, [r0, #12]
   18b70:	cmp	r0, #0
   18b74:	beq	18b8c <argp_help@@Base+0xa6c>
   18b78:	ldr	r5, [r0, #24]
   18b7c:	bl	17968 <argp_parse@@Base+0x12d0>
   18b80:	cmp	r5, #0
   18b84:	mov	r0, r5
   18b88:	bne	18b78 <argp_help@@Base+0xa58>
   18b8c:	ldr	r5, [fp, #-108]	; 0xffffff94
   18b90:	ldr	r0, [r5, #4]
   18b94:	cmp	r0, #0
   18b98:	beq	18bac <argp_help@@Base+0xa8c>
   18b9c:	ldr	r0, [r5]
   18ba0:	bl	17968 <argp_parse@@Base+0x12d0>
   18ba4:	ldr	r0, [r5, #8]
   18ba8:	bl	17968 <argp_parse@@Base+0x12d0>
   18bac:	mov	r0, r5
   18bb0:	bl	17968 <argp_parse@@Base+0x12d0>
   18bb4:	mov	r0, r4
   18bb8:	bl	1c6b0 <argp_failure@@Base+0x2e98>
   18bbc:	sub	sp, fp, #28
   18bc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18bc4:	mov	r5, #0
   18bc8:	tst	r6, #16
   18bcc:	bne	18a58 <argp_help@@Base+0x938>
   18bd0:	b	18a80 <argp_help@@Base+0x960>
   18bd4:	cmp	r5, #0
   18bd8:	str	r6, [fp, #-132]	; 0xffffff7c
   18bdc:	beq	18c48 <argp_help@@Base+0xb28>
   18be0:	mov	sl, r4
   18be4:	ldr	r0, [sl, #28]!
   18be8:	mov	r2, sl
   18bec:	ldr	r1, [r2, #4]!
   18bf0:	cmp	r0, r1
   18bf4:	str	r2, [fp, #-100]	; 0xffffff9c
   18bf8:	bcc	18c14 <argp_help@@Base+0xaf4>
   18bfc:	mov	r0, r4
   18c00:	mov	r1, #1
   18c04:	bl	1cc54 <argp_failure@@Base+0x343c>
   18c08:	cmp	r0, #0
   18c0c:	beq	18c24 <argp_help@@Base+0xb04>
   18c10:	ldr	r0, [sl]
   18c14:	add	r1, r0, #1
   18c18:	str	r1, [sl]
   18c1c:	mov	r1, #10
   18c20:	strb	r1, [r0]
   18c24:	ldr	r0, [fp, #-108]	; 0xffffff94
   18c28:	ldr	r1, [r0, #4]
   18c2c:	mov	r0, #0
   18c30:	str	r0, [fp, #-44]	; 0xffffffd4
   18c34:	str	r0, [fp, #-48]	; 0xffffffd0
   18c38:	str	r0, [fp, #-40]	; 0xffffffd8
   18c3c:	cmp	r1, #0
   18c40:	bne	18c64 <argp_help@@Base+0xb44>
   18c44:	b	194a0 <argp_help@@Base+0x1380>
   18c48:	mov	r0, #0
   18c4c:	add	sl, r4, #28
   18c50:	str	r0, [fp, #-44]	; 0xffffffd4
   18c54:	str	r0, [fp, #-48]	; 0xffffffd0
   18c58:	str	r0, [fp, #-40]	; 0xffffffd8
   18c5c:	add	r0, r4, #32
   18c60:	str	r0, [fp, #-100]	; 0xffffff9c
   18c64:	ldr	r0, [fp, #-108]	; 0xffffff94
   18c68:	str	r4, [fp, #-92]	; 0xffffffa4
   18c6c:	ldr	r6, [r0]
   18c70:	str	r1, [fp, #-116]	; 0xffffff8c
   18c74:	ldr	r1, [r4, #24]
   18c78:	ldr	r2, [sl]
   18c7c:	ldr	r0, [r4, #16]
   18c80:	mov	r5, r4
   18c84:	ldr	r4, [r6]
   18c88:	ldr	r9, [r6, #8]
   18c8c:	sub	r1, r2, r1
   18c90:	cmp	r1, r0
   18c94:	bls	18ca0 <argp_help@@Base+0xb80>
   18c98:	mov	r0, r5
   18c9c:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   18ca0:	mov	r0, #0
   18ca4:	mov	r1, #0
   18ca8:	ldr	r7, [r5, #4]
   18cac:	ldr	r3, [r5, #12]
   18cb0:	str	r0, [fp, #-128]	; 0xffffff80
   18cb4:	sub	r0, fp, #48	; 0x30
   18cb8:	str	r1, [r5, #4]
   18cbc:	str	r5, [fp, #-84]	; 0xffffffac
   18cc0:	str	r6, [fp, #-88]	; 0xffffffa8
   18cc4:	str	r0, [fp, #-80]	; 0xffffffb0
   18cc8:	mov	r0, #1
   18ccc:	str	r0, [fp, #-76]	; 0xffffffb4
   18cd0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18cd4:	str	r3, [fp, #-120]	; 0xffffff88
   18cd8:	str	r7, [fp, #-124]	; 0xffffff84
   18cdc:	str	r0, [fp, #-72]	; 0xffffffb8
   18ce0:	ldrb	r0, [r4, #12]
   18ce4:	tst	r0, #8
   18ce8:	bne	18d2c <argp_help@@Base+0xc0c>
   18cec:	ldr	r0, [r6, #4]
   18cf0:	cmp	r0, #0
   18cf4:	beq	18d2c <argp_help@@Base+0xc0c>
   18cf8:	add	r1, r4, #12
   18cfc:	ldr	r2, [r1, #-12]
   18d00:	cmp	r2, #0
   18d04:	beq	18d14 <argp_help@@Base+0xbf4>
   18d08:	ldrb	r2, [r1]
   18d0c:	tst	r2, #2
   18d10:	beq	18d24 <argp_help@@Base+0xc04>
   18d14:	add	r1, r1, #24
   18d18:	subs	r0, r0, #1
   18d1c:	bne	18cfc <argp_help@@Base+0xbdc>
   18d20:	b	18d2c <argp_help@@Base+0xc0c>
   18d24:	mov	r0, #1
   18d28:	str	r0, [fp, #-128]	; 0xffffff80
   18d2c:	ldr	r7, [fp, #-92]	; 0xffffffa4
   18d30:	ldr	r2, [sl]
   18d34:	ldr	r1, [r7, #24]
   18d38:	ldr	r0, [r7, #16]
   18d3c:	sub	r1, r2, r1
   18d40:	movw	r2, #62320	; 0xf370
   18d44:	movt	r2, #2
   18d48:	cmp	r1, r0
   18d4c:	ldr	r5, [r2, #8]
   18d50:	bls	18d5c <argp_help@@Base+0xc3c>
   18d54:	mov	r0, r7
   18d58:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   18d5c:	str	r5, [r7, #12]
   18d60:	str	r6, [fp, #-104]	; 0xffffff98
   18d64:	ldr	r7, [r6, #4]
   18d68:	cmp	r7, #0
   18d6c:	beq	18ec8 <argp_help@@Base+0xda8>
   18d70:	add	r6, r4, #12
   18d74:	b	18da8 <argp_help@@Base+0xc88>
   18d78:	cmp	r2, #0
   18d7c:	beq	18da0 <argp_help@@Base+0xc80>
   18d80:	ldrb	r0, [r4, #12]
   18d84:	tst	r0, #1
   18d88:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18d8c:	movweq	r1, #57217	; 0xdf81
   18d90:	movteq	r1, #1
   18d94:	movwne	r1, #54302	; 0xd41e
   18d98:	movtne	r1, #1
   18d9c:	bl	1cd40 <argp_failure@@Base+0x3528>
   18da0:	add	r9, r9, #1
   18da4:	b	18ebc <argp_help@@Base+0xd9c>
   18da8:	ldr	r5, [r6]
   18dac:	tst	r5, #8
   18db0:	bne	18ebc <argp_help@@Base+0xd9c>
   18db4:	mov	r8, sl
   18db8:	ldr	sl, [r6, #-8]
   18dbc:	sub	r0, sl, #1
   18dc0:	cmp	r0, #254	; 0xfe
   18dc4:	bhi	18eb8 <argp_help@@Base+0xd98>
   18dc8:	bl	11d00 <__ctype_b_loc@plt>
   18dcc:	ldr	r0, [r0]
   18dd0:	add	r0, r0, sl, lsl #1
   18dd4:	ldrb	r0, [r0, #1]
   18dd8:	tst	r0, #64	; 0x40
   18ddc:	beq	18eb8 <argp_help@@Base+0xd98>
   18de0:	ldrb	r0, [r9]
   18de4:	cmp	sl, r0
   18de8:	bne	18eb8 <argp_help@@Base+0xd98>
   18dec:	tst	r5, #2
   18df0:	mov	sl, r8
   18df4:	bne	18da0 <argp_help@@Base+0xc80>
   18df8:	movw	r0, #62320	; 0xf370
   18dfc:	sub	r1, fp, #88	; 0x58
   18e00:	movt	r0, #2
   18e04:	ldr	r0, [r0, #8]
   18e08:	bl	1b170 <argp_failure@@Base+0x1958>
   18e0c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18e10:	ldr	r0, [sl]
   18e14:	ldr	r1, [r1]
   18e18:	cmp	r0, r1
   18e1c:	bcc	18e38 <argp_help@@Base+0xd18>
   18e20:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18e24:	mov	r1, #1
   18e28:	bl	1cc54 <argp_failure@@Base+0x343c>
   18e2c:	cmp	r0, #0
   18e30:	beq	18e48 <argp_help@@Base+0xd28>
   18e34:	ldr	r0, [sl]
   18e38:	add	r1, r0, #1
   18e3c:	str	r1, [sl]
   18e40:	mov	r1, #45	; 0x2d
   18e44:	strb	r1, [r0]
   18e48:	ldr	r1, [fp, #-100]	; 0xffffff9c
   18e4c:	ldr	r0, [sl]
   18e50:	ldrb	r5, [r9]
   18e54:	ldr	r1, [r1]
   18e58:	cmp	r0, r1
   18e5c:	bcc	18e78 <argp_help@@Base+0xd58>
   18e60:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18e64:	mov	r1, #1
   18e68:	bl	1cc54 <argp_failure@@Base+0x343c>
   18e6c:	cmp	r0, #0
   18e70:	beq	18e84 <argp_help@@Base+0xd64>
   18e74:	ldr	r0, [sl]
   18e78:	add	r1, r0, #1
   18e7c:	str	r1, [sl]
   18e80:	strb	r5, [r0]
   18e84:	ldr	r0, [fp, #-128]	; 0xffffff80
   18e88:	ldr	r2, [r4, #8]
   18e8c:	cmp	r0, #0
   18e90:	beq	18d78 <argp_help@@Base+0xc58>
   18e94:	movw	r0, #62320	; 0xf370
   18e98:	movt	r0, #2
   18e9c:	ldr	r0, [r0]
   18ea0:	cmp	r0, #0
   18ea4:	bne	18d78 <argp_help@@Base+0xc58>
   18ea8:	cmp	r2, #0
   18eac:	movne	r0, #1
   18eb0:	strne	r0, [fp, #-40]	; 0xffffffd8
   18eb4:	b	18da0 <argp_help@@Base+0xc80>
   18eb8:	mov	sl, r8
   18ebc:	add	r6, r6, #24
   18ec0:	subs	r7, r7, #1
   18ec4:	bne	18da8 <argp_help@@Base+0xc88>
   18ec8:	ldrb	r0, [r4, #12]
   18ecc:	tst	r0, #8
   18ed0:	bne	18fa4 <argp_help@@Base+0xe84>
   18ed4:	ldr	r6, [fp, #-92]	; 0xffffffa4
   18ed8:	ldr	r2, [sl]
   18edc:	ldr	r1, [r6, #24]
   18ee0:	ldr	r0, [r6, #16]
   18ee4:	sub	r1, r2, r1
   18ee8:	movw	r2, #62320	; 0xf370
   18eec:	movt	r2, #2
   18ef0:	cmp	r1, r0
   18ef4:	ldr	r5, [r2, #12]
   18ef8:	bls	18f04 <argp_help@@Base+0xde4>
   18efc:	mov	r0, r6
   18f00:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   18f04:	ldr	r0, [fp, #-104]	; 0xffffff98
   18f08:	str	r5, [r6, #12]
   18f0c:	ldr	r5, [r0, #4]
   18f10:	cmp	r5, #0
   18f14:	beq	19084 <argp_help@@Base+0xf64>
   18f18:	add	r6, r4, #12
   18f1c:	ldr	r0, [r6, #-12]
   18f20:	cmp	r0, #0
   18f24:	beq	18f94 <argp_help@@Base+0xe74>
   18f28:	ldrb	r0, [r6]
   18f2c:	tst	r0, #2
   18f30:	bne	18f94 <argp_help@@Base+0xe74>
   18f34:	movw	r0, #62320	; 0xf370
   18f38:	sub	r1, fp, #88	; 0x58
   18f3c:	movt	r0, #2
   18f40:	ldr	r0, [r0, #12]
   18f44:	bl	1b170 <argp_failure@@Base+0x1958>
   18f48:	ldr	r2, [r6, #-12]
   18f4c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18f50:	movw	r1, #57713	; 0xe171
   18f54:	movt	r1, #1
   18f58:	bl	1cd40 <argp_failure@@Base+0x3528>
   18f5c:	ldr	r2, [r4, #8]
   18f60:	cmp	r2, #0
   18f64:	beq	18f94 <argp_help@@Base+0xe74>
   18f68:	ldrb	r0, [r4, #12]
   18f6c:	tst	r0, #1
   18f70:	bne	18f84 <argp_help@@Base+0xe64>
   18f74:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18f78:	movw	r1, #57718	; 0xe176
   18f7c:	movt	r1, #1
   18f80:	b	18f90 <argp_help@@Base+0xe70>
   18f84:	ldr	r0, [fp, #-92]	; 0xffffffa4
   18f88:	movw	r1, #57722	; 0xe17a
   18f8c:	movt	r1, #1
   18f90:	bl	1cd40 <argp_failure@@Base+0x3528>
   18f94:	add	r6, r6, #24
   18f98:	subs	r5, r5, #1
   18f9c:	bne	18f1c <argp_help@@Base+0xdfc>
   18fa0:	b	19084 <argp_help@@Base+0xf64>
   18fa4:	ldr	r6, [fp, #-92]	; 0xffffffa4
   18fa8:	ldr	r2, [sl]
   18fac:	ldr	r1, [r6, #24]
   18fb0:	ldr	r0, [r6, #16]
   18fb4:	sub	r1, r2, r1
   18fb8:	movw	r2, #62320	; 0xf370
   18fbc:	movt	r2, #2
   18fc0:	cmp	r1, r0
   18fc4:	ldr	r5, [r2, #16]
   18fc8:	bls	18fd4 <argp_help@@Base+0xeb4>
   18fcc:	mov	r0, r6
   18fd0:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   18fd4:	ldr	r0, [fp, #-104]	; 0xffffff98
   18fd8:	str	r5, [r6, #12]
   18fdc:	ldr	r6, [r0, #4]
   18fe0:	cmp	r6, #0
   18fe4:	beq	19084 <argp_help@@Base+0xf64>
   18fe8:	add	r9, r4, #12
   18fec:	ldr	r0, [r9, #-12]
   18ff0:	cmp	r0, #0
   18ff4:	beq	19078 <argp_help@@Base+0xf58>
   18ff8:	ldrb	r0, [r9]
   18ffc:	tst	r0, #2
   19000:	bne	19078 <argp_help@@Base+0xf58>
   19004:	movw	r0, #62320	; 0xf370
   19008:	sub	r1, fp, #88	; 0x58
   1900c:	movt	r0, #2
   19010:	ldr	r0, [r0, #16]
   19014:	bl	1b170 <argp_failure@@Base+0x1958>
   19018:	ldr	r5, [r9, #-12]
   1901c:	mov	r0, r5
   19020:	bl	11d30 <strlen@plt>
   19024:	cmp	r0, #0
   19028:	beq	19078 <argp_help@@Base+0xf58>
   1902c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19030:	mov	r7, r0
   19034:	ldr	r0, [sl]
   19038:	ldr	r2, [r2]
   1903c:	add	r1, r0, r7
   19040:	cmp	r1, r2
   19044:	bls	19060 <argp_help@@Base+0xf40>
   19048:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1904c:	mov	r1, r7
   19050:	bl	1cc54 <argp_failure@@Base+0x343c>
   19054:	cmp	r0, #0
   19058:	beq	19078 <argp_help@@Base+0xf58>
   1905c:	ldr	r0, [sl]
   19060:	mov	r1, r5
   19064:	mov	r2, r7
   19068:	bl	11b68 <memcpy@plt>
   1906c:	ldr	r0, [sl]
   19070:	add	r0, r0, r7
   19074:	str	r0, [sl]
   19078:	add	r9, r9, #24
   1907c:	subs	r6, r6, #1
   19080:	bne	18fec <argp_help@@Base+0xecc>
   19084:	ldr	r5, [fp, #-92]	; 0xffffffa4
   19088:	ldr	r2, [sl]
   1908c:	ldr	r1, [r5, #24]
   19090:	ldr	r0, [r5, #16]
   19094:	sub	r1, r2, r1
   19098:	cmp	r1, r0
   1909c:	bls	190a8 <argp_help@@Base+0xf88>
   190a0:	mov	r0, r5
   190a4:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   190a8:	mov	r0, #0
   190ac:	ldr	r6, [fp, #-104]	; 0xffffff98
   190b0:	str	r0, [r5, #4]
   190b4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   190b8:	cmp	r0, #0
   190bc:	beq	19114 <argp_help@@Base+0xff4>
   190c0:	ldrb	r0, [r4, #12]
   190c4:	tst	r0, #8
   190c8:	bne	190f4 <argp_help@@Base+0xfd4>
   190cc:	ldr	r5, [r4, #4]
   190d0:	sub	r0, r5, #1
   190d4:	cmp	r0, #254	; 0xfe
   190d8:	bhi	190f4 <argp_help@@Base+0xfd4>
   190dc:	bl	11d00 <__ctype_b_loc@plt>
   190e0:	ldr	r0, [r0]
   190e4:	add	r0, r0, r5, lsl #1
   190e8:	ldrb	r0, [r0, #1]
   190ec:	tst	r0, #64	; 0x40
   190f0:	bne	19420 <argp_help@@Base+0x1300>
   190f4:	ldr	r0, [r4]
   190f8:	cmp	r0, #0
   190fc:	bne	19420 <argp_help@@Base+0x1300>
   19100:	ldr	r1, [r6, #20]
   19104:	ldr	r0, [r4, #16]
   19108:	sub	r2, fp, #88	; 0x58
   1910c:	bl	1b378 <argp_failure@@Base+0x1b60>
   19110:	b	1941c <argp_help@@Base+0x12fc>
   19114:	ldr	r6, [r6, #20]
   19118:	ldr	r7, [r4, #16]
   1911c:	cmp	r6, #0
   19120:	mov	r9, r7
   19124:	beq	19160 <argp_help@@Base+0x1040>
   19128:	ldr	r0, [r6, #20]
   1912c:	mov	r9, r7
   19130:	cmp	r0, #0
   19134:	beq	19160 <argp_help@@Base+0x1040>
   19138:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1913c:	ldr	r4, [r4, #4]
   19140:	mov	r0, r6
   19144:	bl	172d4 <argp_parse@@Base+0xc3c>
   19148:	ldr	r3, [r6, #20]
   1914c:	mov	r2, r0
   19150:	mov	r0, r4
   19154:	mov	r1, r7
   19158:	blx	r3
   1915c:	mov	r9, r0
   19160:	ldr	r4, [fp, #-92]	; 0xffffffa4
   19164:	movw	r5, #62320	; 0xf370
   19168:	cmp	r9, #0
   1916c:	movt	r5, #2
   19170:	beq	193b8 <argp_help@@Base+0x1298>
   19174:	ldrb	r0, [r9]
   19178:	cmp	r0, #0
   1917c:	beq	193a8 <argp_help@@Base+0x1288>
   19180:	ldr	r1, [r4, #24]
   19184:	ldr	r2, [sl]
   19188:	ldr	r0, [r4, #16]
   1918c:	str	r7, [fp, #-128]	; 0xffffff80
   19190:	sub	r1, r2, r1
   19194:	cmp	r1, r0
   19198:	bls	191b4 <argp_help@@Base+0x1094>
   1919c:	mov	r0, r4
   191a0:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   191a4:	ldr	r1, [r4, #24]
   191a8:	ldr	r2, [sl]
   191ac:	ldr	r0, [r4, #16]
   191b0:	sub	r1, r2, r1
   191b4:	ldr	r5, [r5, #20]
   191b8:	ldr	r8, [r4, #20]
   191bc:	cmp	r1, r0
   191c0:	mov	r6, r5
   191c4:	bls	191ec <argp_help@@Base+0x10cc>
   191c8:	mov	r0, r4
   191cc:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   191d0:	ldr	r1, [r4, #24]
   191d4:	ldr	r2, [sl]
   191d8:	ldr	r0, [r4, #16]
   191dc:	sub	r1, r2, r1
   191e0:	movw	r2, #62320	; 0xf370
   191e4:	movt	r2, #2
   191e8:	ldr	r6, [r2, #20]
   191ec:	bic	r7, r8, r8, asr #31
   191f0:	movw	r8, #62320	; 0xf370
   191f4:	str	r5, [r4, #4]
   191f8:	cmp	r1, r0
   191fc:	mov	r5, r6
   19200:	movt	r8, #2
   19204:	bls	19214 <argp_help@@Base+0x10f4>
   19208:	mov	r0, r4
   1920c:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   19210:	ldr	r5, [r8, #20]
   19214:	add	r0, r5, #3
   19218:	str	r6, [r4, #12]
   1921c:	cmp	r7, r0
   19220:	bls	19268 <argp_help@@Base+0x1148>
   19224:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19228:	ldr	r0, [sl]
   1922c:	ldr	r7, [fp, #-128]	; 0xffffff80
   19230:	ldr	r1, [r1]
   19234:	cmp	r0, r1
   19238:	bcc	19254 <argp_help@@Base+0x1134>
   1923c:	mov	r0, r4
   19240:	mov	r1, #1
   19244:	bl	1cc54 <argp_failure@@Base+0x343c>
   19248:	cmp	r0, #0
   1924c:	beq	1934c <argp_help@@Base+0x122c>
   19250:	ldr	r0, [sl]
   19254:	add	r1, r0, #1
   19258:	str	r1, [sl]
   1925c:	mov	r1, #10
   19260:	strb	r1, [r0]
   19264:	b	1934c <argp_help@@Base+0x122c>
   19268:	cmp	r7, r5
   1926c:	bcs	192fc <argp_help@@Base+0x11dc>
   19270:	ldr	r1, [r4, #24]
   19274:	ldr	r2, [sl]
   19278:	ldr	r0, [r4, #16]
   1927c:	sub	r1, r2, r1
   19280:	cmp	r1, r0
   19284:	bls	19290 <argp_help@@Base+0x1170>
   19288:	mov	r0, r4
   1928c:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   19290:	ldr	r0, [r4, #20]
   19294:	ldr	r7, [fp, #-128]	; 0xffffff80
   19298:	bic	r0, r0, r0, asr #31
   1929c:	sub	r1, r5, r0
   192a0:	cmp	r1, #1
   192a4:	blt	1934c <argp_help@@Base+0x122c>
   192a8:	add	r1, r5, #1
   192ac:	sub	r6, r1, r0
   192b0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   192b4:	ldr	r0, [sl]
   192b8:	ldr	r1, [r1]
   192bc:	cmp	r0, r1
   192c0:	bcc	192dc <argp_help@@Base+0x11bc>
   192c4:	mov	r0, r4
   192c8:	mov	r1, #1
   192cc:	bl	1cc54 <argp_failure@@Base+0x343c>
   192d0:	cmp	r0, #0
   192d4:	beq	192ec <argp_help@@Base+0x11cc>
   192d8:	ldr	r0, [sl]
   192dc:	add	r1, r0, #1
   192e0:	str	r1, [sl]
   192e4:	mov	r1, #32
   192e8:	strb	r1, [r0]
   192ec:	sub	r6, r6, #1
   192f0:	cmp	r6, #1
   192f4:	bgt	192b0 <argp_help@@Base+0x1190>
   192f8:	b	1934c <argp_help@@Base+0x122c>
   192fc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19300:	ldr	r7, [fp, #-128]	; 0xffffff80
   19304:	ldr	r1, [r0]
   19308:	ldr	r0, [sl]
   1930c:	add	r2, r0, #3
   19310:	cmp	r2, r1
   19314:	bls	19330 <argp_help@@Base+0x1210>
   19318:	mov	r0, r4
   1931c:	mov	r1, #3
   19320:	bl	1cc54 <argp_failure@@Base+0x343c>
   19324:	cmp	r0, #0
   19328:	beq	1934c <argp_help@@Base+0x122c>
   1932c:	ldr	r0, [sl]
   19330:	mov	r1, #32
   19334:	strb	r1, [r0, #2]
   19338:	movw	r1, #8224	; 0x2020
   1933c:	strh	r1, [r0]
   19340:	ldr	r0, [sl]
   19344:	add	r0, r0, #3
   19348:	str	r0, [sl]
   1934c:	mov	r0, r9
   19350:	bl	11d30 <strlen@plt>
   19354:	cmp	r0, #0
   19358:	beq	193a8 <argp_help@@Base+0x1288>
   1935c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19360:	mov	r6, r0
   19364:	ldr	r0, [sl]
   19368:	ldr	r2, [r2]
   1936c:	add	r1, r0, r6
   19370:	cmp	r1, r2
   19374:	bls	19390 <argp_help@@Base+0x1270>
   19378:	mov	r0, r4
   1937c:	mov	r1, r6
   19380:	bl	1cc54 <argp_failure@@Base+0x343c>
   19384:	cmp	r0, #0
   19388:	beq	193a8 <argp_help@@Base+0x1288>
   1938c:	ldr	r0, [sl]
   19390:	mov	r1, r9
   19394:	mov	r2, r6
   19398:	bl	11b68 <memcpy@plt>
   1939c:	ldr	r0, [sl]
   193a0:	add	r0, r0, r6
   193a4:	str	r0, [sl]
   193a8:	cmp	r9, r7
   193ac:	beq	193b8 <argp_help@@Base+0x1298>
   193b0:	mov	r0, r9
   193b4:	bl	17968 <argp_parse@@Base+0x12d0>
   193b8:	ldr	r2, [r4, #24]
   193bc:	ldr	r0, [sl]
   193c0:	ldr	r1, [r4, #16]
   193c4:	sub	r2, r0, r2
   193c8:	cmp	r2, r1
   193cc:	bls	193dc <argp_help@@Base+0x12bc>
   193d0:	mov	r0, r4
   193d4:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   193d8:	ldr	r0, [r4, #28]
   193dc:	mov	r1, #0
   193e0:	ldr	r6, [fp, #-104]	; 0xffffff98
   193e4:	str	r1, [r4, #4]
   193e8:	ldr	r1, [r4, #32]
   193ec:	cmp	r0, r1
   193f0:	bcc	1940c <argp_help@@Base+0x12ec>
   193f4:	mov	r0, r4
   193f8:	mov	r1, #1
   193fc:	bl	1cc54 <argp_failure@@Base+0x343c>
   19400:	cmp	r0, #0
   19404:	beq	1941c <argp_help@@Base+0x12fc>
   19408:	ldr	r0, [sl]
   1940c:	add	r1, r0, #1
   19410:	str	r1, [sl]
   19414:	mov	r1, #10
   19418:	strb	r1, [r0]
   1941c:	str	r6, [fp, #-48]	; 0xffffffd0
   19420:	ldr	r4, [fp, #-92]	; 0xffffffa4
   19424:	ldr	r2, [sl]
   19428:	ldr	r1, [r4, #24]
   1942c:	ldr	r0, [r4, #16]
   19430:	sub	r1, r2, r1
   19434:	cmp	r1, r0
   19438:	bls	19454 <argp_help@@Base+0x1334>
   1943c:	mov	r0, r4
   19440:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   19444:	ldr	r1, [r4, #24]
   19448:	ldr	r2, [sl]
   1944c:	ldr	r0, [r4, #16]
   19450:	sub	r1, r2, r1
   19454:	ldr	r2, [fp, #-124]	; 0xffffff84
   19458:	ldr	r5, [fp, #-120]	; 0xffffff88
   1945c:	cmp	r1, r0
   19460:	str	r2, [r4, #4]
   19464:	bls	19470 <argp_help@@Base+0x1350>
   19468:	mov	r0, r4
   1946c:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   19470:	ldr	r1, [fp, #-116]	; 0xffffff8c
   19474:	add	r6, r6, #28
   19478:	str	r5, [r4, #12]
   1947c:	subs	r1, r1, #1
   19480:	bne	18c70 <argp_help@@Base+0xb50>
   19484:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19488:	cmp	r0, #0
   1948c:	movw	r0, #62320	; 0xf370
   19490:	movt	r0, #2
   19494:	ldrne	r0, [r0, #4]
   19498:	cmpne	r0, #0
   1949c:	bne	194b4 <argp_help@@Base+0x1394>
   194a0:	ldr	r6, [fp, #-132]	; 0xffffff7c
   194a4:	mov	r5, #1
   194a8:	tst	r6, #32
   194ac:	bne	18ac4 <argp_help@@Base+0x9a4>
   194b0:	b	18aec <argp_help@@Base+0x9cc>
   194b4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   194b8:	movw	r5, #57597	; 0xe0fd
   194bc:	movt	r5, #1
   194c0:	cmp	r0, #0
   194c4:	beq	194dc <argp_help@@Base+0x13bc>
   194c8:	ldr	r6, [r0]
   194cc:	cmp	r6, #0
   194d0:	ldrne	r0, [r6, #20]
   194d4:	cmpne	r0, #0
   194d8:	bne	195d8 <argp_help@@Base+0x14b8>
   194dc:	ldrb	r0, [r5]
   194e0:	cmp	r0, #0
   194e4:	beq	195bc <argp_help@@Base+0x149c>
   194e8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   194ec:	ldr	r0, [sl]
   194f0:	ldr	r1, [r1]
   194f4:	cmp	r0, r1
   194f8:	bcc	19514 <argp_help@@Base+0x13f4>
   194fc:	mov	r0, r4
   19500:	mov	r1, #1
   19504:	bl	1cc54 <argp_failure@@Base+0x343c>
   19508:	cmp	r0, #0
   1950c:	beq	19524 <argp_help@@Base+0x1404>
   19510:	ldr	r0, [sl]
   19514:	add	r1, r0, #1
   19518:	str	r1, [sl]
   1951c:	mov	r1, #10
   19520:	strb	r1, [r0]
   19524:	mov	r0, r5
   19528:	bl	11d30 <strlen@plt>
   1952c:	cmp	r0, #0
   19530:	beq	19580 <argp_help@@Base+0x1460>
   19534:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19538:	mov	r6, r0
   1953c:	ldr	r0, [sl]
   19540:	ldr	r2, [r2]
   19544:	add	r1, r0, r6
   19548:	cmp	r1, r2
   1954c:	bls	19568 <argp_help@@Base+0x1448>
   19550:	mov	r0, r4
   19554:	mov	r1, r6
   19558:	bl	1cc54 <argp_failure@@Base+0x343c>
   1955c:	cmp	r0, #0
   19560:	beq	19580 <argp_help@@Base+0x1460>
   19564:	ldr	r0, [sl]
   19568:	mov	r1, r5
   1956c:	mov	r2, r6
   19570:	bl	11b68 <memcpy@plt>
   19574:	ldr	r0, [sl]
   19578:	add	r0, r0, r6
   1957c:	str	r0, [sl]
   19580:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19584:	ldr	r0, [sl]
   19588:	ldr	r1, [r1]
   1958c:	cmp	r0, r1
   19590:	bcc	195ac <argp_help@@Base+0x148c>
   19594:	mov	r0, r4
   19598:	mov	r1, #1
   1959c:	bl	1cc54 <argp_failure@@Base+0x343c>
   195a0:	cmp	r0, #0
   195a4:	beq	195bc <argp_help@@Base+0x149c>
   195a8:	ldr	r0, [sl]
   195ac:	add	r1, r0, #1
   195b0:	str	r1, [sl]
   195b4:	mov	r1, #10
   195b8:	strb	r1, [r0]
   195bc:	movw	r0, #57597	; 0xe0fd
   195c0:	movt	r0, #1
   195c4:	cmp	r5, r0
   195c8:	beq	194a0 <argp_help@@Base+0x1380>
   195cc:	mov	r0, r5
   195d0:	bl	17968 <argp_parse@@Base+0x12d0>
   195d4:	b	194a0 <argp_help@@Base+0x1380>
   195d8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   195dc:	mov	r0, r6
   195e0:	bl	172d4 <argp_parse@@Base+0xc3c>
   195e4:	ldr	r3, [r6, #20]
   195e8:	movw	r1, #57597	; 0xe0fd
   195ec:	mov	r2, r0
   195f0:	movw	r0, #5
   195f4:	movt	r0, #512	; 0x200
   195f8:	movt	r1, #1
   195fc:	blx	r3
   19600:	mov	r5, r0
   19604:	cmp	r0, #0
   19608:	bne	194dc <argp_help@@Base+0x13bc>
   1960c:	b	194a0 <argp_help@@Base+0x1380>
   19610:	add	r0, r0, #112	; 0x70
   19614:	b	18684 <argp_help@@Base+0x564>

00019618 <argp_state_help@@Base>:
   19618:	push	{r4, r5, fp, lr}
   1961c:	add	fp, sp, #8
   19620:	sub	sp, sp, #8
   19624:	mov	r4, r2
   19628:	mov	r2, r1
   1962c:	cmp	r0, #0
   19630:	beq	1967c <argp_state_help@@Base+0x64>
   19634:	cmp	r2, #0
   19638:	beq	196b4 <argp_state_help@@Base+0x9c>
   1963c:	ldr	r1, [r0, #16]
   19640:	mov	r5, r0
   19644:	ands	r0, r1, #2
   19648:	bne	196b4 <argp_state_help@@Base+0x9c>
   1964c:	ldr	r3, [r5, #40]	; 0x28
   19650:	ldr	r0, [r5]
   19654:	and	r1, r1, #64	; 0x40
   19658:	orr	r4, r4, r1, lsl #1
   1965c:	mov	r1, r5
   19660:	str	r3, [sp]
   19664:	mov	r3, r4
   19668:	bl	1814c <argp_help@@Base+0x2c>
   1966c:	ldrb	r0, [r5, #16]
   19670:	tst	r0, #32
   19674:	beq	196a4 <argp_state_help@@Base+0x8c>
   19678:	b	196b4 <argp_state_help@@Base+0x9c>
   1967c:	cmp	r2, #0
   19680:	beq	196b4 <argp_state_help@@Base+0x9c>
   19684:	movw	r0, #62376	; 0xf3a8
   19688:	mov	r1, #0
   1968c:	mov	r3, r4
   19690:	movt	r0, #2
   19694:	ldr	r0, [r0]
   19698:	str	r0, [sp]
   1969c:	mov	r0, #0
   196a0:	bl	1814c <argp_help@@Base+0x2c>
   196a4:	tst	r4, #256	; 0x100
   196a8:	bne	196bc <argp_state_help@@Base+0xa4>
   196ac:	tst	r4, #512	; 0x200
   196b0:	bne	196cc <argp_state_help@@Base+0xb4>
   196b4:	sub	sp, fp, #8
   196b8:	pop	{r4, r5, fp, pc}
   196bc:	movw	r0, #62372	; 0xf3a4
   196c0:	movt	r0, #2
   196c4:	ldr	r0, [r0]
   196c8:	bl	11d18 <exit@plt>
   196cc:	mov	r0, #0
   196d0:	bl	11d18 <exit@plt>

000196d4 <argp_error@@Base>:
   196d4:	sub	sp, sp, #8
   196d8:	push	{r4, r5, r6, sl, fp, lr}
   196dc:	add	fp, sp, #16
   196e0:	sub	sp, sp, #8
   196e4:	mov	r6, r1
   196e8:	mov	r4, r0
   196ec:	cmp	r0, #0
   196f0:	str	r3, [fp, #12]
   196f4:	str	r2, [fp, #8]
   196f8:	beq	19710 <argp_error@@Base+0x3c>
   196fc:	ldrb	r0, [r4, #16]
   19700:	tst	r0, #2
   19704:	bne	197d8 <argp_error@@Base+0x104>
   19708:	add	r0, r4, #44	; 0x2c
   1970c:	b	19718 <argp_error@@Base+0x44>
   19710:	movw	r0, #62384	; 0xf3b0
   19714:	movt	r0, #2
   19718:	ldr	r5, [r0]
   1971c:	cmp	r5, #0
   19720:	beq	197d8 <argp_error@@Base+0x104>
   19724:	mov	r0, r5
   19728:	bl	11eb0 <flockfile@plt>
   1972c:	add	r0, fp, #8
   19730:	cmp	r4, #0
   19734:	mov	r1, r5
   19738:	str	r0, [sp, #4]
   1973c:	movw	r0, #62376	; 0xf3a8
   19740:	movt	r0, #2
   19744:	addne	r0, r4, #40	; 0x28
   19748:	ldr	r0, [r0]
   1974c:	bl	11a90 <fputs_unlocked@plt>
   19750:	ldr	r0, [r5, #20]
   19754:	ldr	r1, [r5, #24]
   19758:	cmp	r0, r1
   1975c:	bcs	197e8 <argp_error@@Base+0x114>
   19760:	add	r1, r0, #1
   19764:	str	r1, [r5, #20]
   19768:	mov	r1, #58	; 0x3a
   1976c:	strb	r1, [r0]
   19770:	ldr	r0, [r5, #20]
   19774:	ldr	r1, [r5, #24]
   19778:	cmp	r0, r1
   1977c:	bcs	197f8 <argp_error@@Base+0x124>
   19780:	add	r1, r0, #1
   19784:	str	r1, [r5, #20]
   19788:	mov	r1, #32
   1978c:	strb	r1, [r0]
   19790:	ldr	r2, [sp, #4]
   19794:	mov	r0, r5
   19798:	mov	r1, r6
   1979c:	bl	11e50 <vfprintf@plt>
   197a0:	ldr	r0, [r5, #20]
   197a4:	ldr	r1, [r5, #24]
   197a8:	cmp	r0, r1
   197ac:	bcs	19808 <argp_error@@Base+0x134>
   197b0:	add	r1, r0, #1
   197b4:	str	r1, [r5, #20]
   197b8:	mov	r1, #10
   197bc:	strb	r1, [r0]
   197c0:	mov	r0, r4
   197c4:	mov	r1, r5
   197c8:	mov	r2, #260	; 0x104
   197cc:	bl	19618 <argp_state_help@@Base>
   197d0:	mov	r0, r5
   197d4:	bl	11c34 <funlockfile@plt>
   197d8:	sub	sp, fp, #16
   197dc:	pop	{r4, r5, r6, sl, fp, lr}
   197e0:	add	sp, sp, #8
   197e4:	bx	lr
   197e8:	mov	r0, r5
   197ec:	mov	r1, #58	; 0x3a
   197f0:	bl	11e08 <__overflow@plt>
   197f4:	b	19770 <argp_error@@Base+0x9c>
   197f8:	mov	r0, r5
   197fc:	mov	r1, #32
   19800:	bl	11e08 <__overflow@plt>
   19804:	b	19790 <argp_error@@Base+0xbc>
   19808:	mov	r0, r5
   1980c:	mov	r1, #10
   19810:	bl	11e08 <__overflow@plt>
   19814:	b	197c0 <argp_error@@Base+0xec>

00019818 <argp_failure@@Base>:
   19818:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1981c:	add	fp, sp, #24
   19820:	sub	sp, sp, #200	; 0xc8
   19824:	mov	r4, r3
   19828:	mov	r9, r2
   1982c:	mov	r8, r1
   19830:	mov	r5, r0
   19834:	cmp	r0, #0
   19838:	beq	19850 <argp_failure@@Base+0x38>
   1983c:	ldrb	r0, [r5, #16]
   19840:	tst	r0, #2
   19844:	bne	199c8 <argp_failure@@Base+0x1b0>
   19848:	add	r0, r5, #44	; 0x2c
   1984c:	b	19858 <argp_failure@@Base+0x40>
   19850:	movw	r0, #62384	; 0xf3b0
   19854:	movt	r0, #2
   19858:	ldr	r6, [r0]
   1985c:	cmp	r6, #0
   19860:	beq	199c8 <argp_failure@@Base+0x1b0>
   19864:	mov	r0, r6
   19868:	bl	11eb0 <flockfile@plt>
   1986c:	movw	r0, #62376	; 0xf3a8
   19870:	cmp	r5, #0
   19874:	mov	r1, r6
   19878:	movt	r0, #2
   1987c:	addne	r0, r5, #40	; 0x28
   19880:	ldr	r0, [r0]
   19884:	bl	11a90 <fputs_unlocked@plt>
   19888:	cmp	r4, #0
   1988c:	beq	198e8 <argp_failure@@Base+0xd0>
   19890:	add	r0, fp, #8
   19894:	str	r0, [sp]
   19898:	ldr	r0, [r6, #20]
   1989c:	ldr	r1, [r6, #24]
   198a0:	cmp	r0, r1
   198a4:	bcs	199e0 <argp_failure@@Base+0x1c8>
   198a8:	add	r1, r0, #1
   198ac:	str	r1, [r6, #20]
   198b0:	mov	r1, #58	; 0x3a
   198b4:	strb	r1, [r0]
   198b8:	ldr	r0, [r6, #20]
   198bc:	ldr	r1, [r6, #24]
   198c0:	cmp	r0, r1
   198c4:	bcs	199f0 <argp_failure@@Base+0x1d8>
   198c8:	add	r1, r0, #1
   198cc:	str	r1, [r6, #20]
   198d0:	mov	r1, #32
   198d4:	strb	r1, [r0]
   198d8:	ldr	r2, [sp]
   198dc:	mov	r0, r6
   198e0:	mov	r1, r4
   198e4:	bl	11e50 <vfprintf@plt>
   198e8:	cmp	r9, #0
   198ec:	beq	19978 <argp_failure@@Base+0x160>
   198f0:	mov	r4, r6
   198f4:	ldr	r0, [r4, #20]!
   198f8:	mov	r7, r4
   198fc:	ldr	r1, [r7, #4]!
   19900:	cmp	r0, r1
   19904:	bcs	19a00 <argp_failure@@Base+0x1e8>
   19908:	add	r1, r0, #1
   1990c:	str	r1, [r4]
   19910:	mov	r1, #58	; 0x3a
   19914:	strb	r1, [r0]
   19918:	ldr	r0, [r4]
   1991c:	ldr	r1, [r7]
   19920:	cmp	r0, r1
   19924:	bcs	19a10 <argp_failure@@Base+0x1f8>
   19928:	add	r1, r0, #1
   1992c:	str	r1, [r4]
   19930:	mov	r1, #32
   19934:	strb	r1, [r0]
   19938:	mov	r1, sp
   1993c:	mov	r0, r9
   19940:	mov	r2, #200	; 0xc8
   19944:	bl	11d90 <strerror_r@plt>
   19948:	cmp	r0, #0
   1994c:	bne	1996c <argp_failure@@Base+0x154>
   19950:	mov	r0, r9
   19954:	bl	11cdc <strerror@plt>
   19958:	mov	r1, r0
   1995c:	movw	r0, #56977	; 0xde91
   19960:	movt	r0, #1
   19964:	cmp	r1, #0
   19968:	movne	r0, r1
   1996c:	mov	r1, r6
   19970:	bl	11a90 <fputs_unlocked@plt>
   19974:	b	19980 <argp_failure@@Base+0x168>
   19978:	add	r7, r6, #24
   1997c:	add	r4, r6, #20
   19980:	ldr	r0, [r4]
   19984:	ldr	r1, [r7]
   19988:	cmp	r0, r1
   1998c:	bcs	199d0 <argp_failure@@Base+0x1b8>
   19990:	add	r1, r0, #1
   19994:	str	r1, [r4]
   19998:	mov	r1, #10
   1999c:	strb	r1, [r0]
   199a0:	mov	r0, r6
   199a4:	bl	11c34 <funlockfile@plt>
   199a8:	cmp	r8, #0
   199ac:	beq	199c8 <argp_failure@@Base+0x1b0>
   199b0:	cmp	r5, #0
   199b4:	ldrbne	r0, [r5, #16]
   199b8:	tstne	r0, #32
   199bc:	bne	199c8 <argp_failure@@Base+0x1b0>
   199c0:	mov	r0, r8
   199c4:	bl	11d18 <exit@plt>
   199c8:	sub	sp, fp, #24
   199cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   199d0:	mov	r0, r6
   199d4:	mov	r1, #10
   199d8:	bl	11e08 <__overflow@plt>
   199dc:	b	199a0 <argp_failure@@Base+0x188>
   199e0:	mov	r0, r6
   199e4:	mov	r1, #58	; 0x3a
   199e8:	bl	11e08 <__overflow@plt>
   199ec:	b	198b8 <argp_failure@@Base+0xa0>
   199f0:	mov	r0, r6
   199f4:	mov	r1, #32
   199f8:	bl	11e08 <__overflow@plt>
   199fc:	b	198d8 <argp_failure@@Base+0xc0>
   19a00:	mov	r0, r6
   19a04:	mov	r1, #58	; 0x3a
   19a08:	bl	11e08 <__overflow@plt>
   19a0c:	b	19918 <argp_failure@@Base+0x100>
   19a10:	mov	r0, r6
   19a14:	mov	r1, #32
   19a18:	bl	11e08 <__overflow@plt>
   19a1c:	b	19938 <argp_failure@@Base+0x120>
   19a20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a24:	add	fp, sp, #28
   19a28:	sub	sp, sp, #52	; 0x34
   19a2c:	ldr	r4, [r0]
   19a30:	ldr	r9, [r0, #16]
   19a34:	mov	r7, r0
   19a38:	mov	r0, #16
   19a3c:	mov	sl, r1
   19a40:	bl	1809c <argp_parse@@Base+0x1a04>
   19a44:	cmp	r0, #0
   19a48:	beq	1a024 <argp_failure@@Base+0x80c>
   19a4c:	mov	r1, #0
   19a50:	str	r0, [fp, #-32]	; 0xffffffe0
   19a54:	cmp	r4, #0
   19a58:	str	r7, [sp, #40]	; 0x28
   19a5c:	str	r1, [r0, #12]!
   19a60:	str	r0, [sp, #20]
   19a64:	str	r1, [r0, #-8]
   19a68:	beq	19cb8 <argp_failure@@Base+0x4a0>
   19a6c:	ldrb	r0, [r4, #12]
   19a70:	tst	r0, #4
   19a74:	bne	1a044 <argp_failure@@Base+0x82c>
   19a78:	add	r5, r4, #12
   19a7c:	mov	r6, #0
   19a80:	mov	r8, #0
   19a84:	b	19a8c <argp_failure@@Base+0x274>
   19a88:	add	r5, r5, #24
   19a8c:	ldr	r7, [r5, #-8]
   19a90:	cmp	r7, #0
   19a94:	bne	19abc <argp_failure@@Base+0x2a4>
   19a98:	ldr	r0, [r5, #-12]
   19a9c:	cmp	r0, #0
   19aa0:	bne	19abc <argp_failure@@Base+0x2a4>
   19aa4:	ldr	r0, [r5, #4]
   19aa8:	cmp	r0, #0
   19aac:	bne	19abc <argp_failure@@Base+0x2a4>
   19ab0:	ldr	r0, [r5, #8]
   19ab4:	cmp	r0, #0
   19ab8:	beq	19b00 <argp_failure@@Base+0x2e8>
   19abc:	ldr	r0, [r5]
   19ac0:	tst	r0, #4
   19ac4:	ldreq	r1, [fp, #-32]	; 0xffffffe0
   19ac8:	addeq	r6, r6, #1
   19acc:	streq	r6, [r1, #4]
   19ad0:	sub	r1, r7, #1
   19ad4:	cmp	r1, #254	; 0xfe
   19ad8:	bhi	19a88 <argp_failure@@Base+0x270>
   19adc:	ands	r0, r0, #8
   19ae0:	bne	19a88 <argp_failure@@Base+0x270>
   19ae4:	bl	11d00 <__ctype_b_loc@plt>
   19ae8:	ldr	r0, [r0]
   19aec:	add	r0, r0, r7, lsl #1
   19af0:	ldrb	r0, [r0, #1]
   19af4:	tst	r0, #64	; 0x40
   19af8:	addne	r8, r8, #1
   19afc:	b	19a88 <argp_failure@@Base+0x270>
   19b00:	rsb	r0, r6, r6, lsl #3
   19b04:	lsl	r0, r0, #2
   19b08:	bl	1809c <argp_parse@@Base+0x1a04>
   19b0c:	mov	r5, r0
   19b10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b14:	str	r5, [r0]
   19b18:	add	r0, r8, #1
   19b1c:	bl	1809c <argp_parse@@Base+0x1a04>
   19b20:	mov	r7, r0
   19b24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b28:	cmp	r5, #0
   19b2c:	cmpne	r7, #0
   19b30:	str	r7, [r0, #8]
   19b34:	bne	19b58 <argp_failure@@Base+0x340>
   19b38:	movw	r0, #57377	; 0xe021
   19b3c:	movw	r1, #57285	; 0xdfc5
   19b40:	movw	r3, #57297	; 0xdfd1
   19b44:	movw	r2, #474	; 0x1da
   19b48:	movt	r0, #1
   19b4c:	movt	r1, #1
   19b50:	movt	r3, #1
   19b54:	bl	11f7c <__assert_fail@plt>
   19b58:	movw	r0, #37450	; 0x924a
   19b5c:	str	r9, [sp, #12]
   19b60:	movt	r0, #2340	; 0x924
   19b64:	cmp	r6, r0
   19b68:	bcs	1a064 <argp_failure@@Base+0x84c>
   19b6c:	mov	r8, #0
   19b70:	mov	r0, #0
   19b74:	b	19b84 <argp_failure@@Base+0x36c>
   19b78:	mov	r4, r0
   19b7c:	add	r5, r5, #28
   19b80:	mov	r0, r9
   19b84:	ldr	r1, [r4, #4]
   19b88:	cmp	r1, #0
   19b8c:	bne	19bb4 <argp_failure@@Base+0x39c>
   19b90:	ldr	r2, [r4]
   19b94:	cmp	r2, #0
   19b98:	bne	19bb4 <argp_failure@@Base+0x39c>
   19b9c:	ldr	r2, [r4, #16]
   19ba0:	cmp	r2, #0
   19ba4:	bne	19bb4 <argp_failure@@Base+0x39c>
   19ba8:	ldr	r2, [r4, #20]
   19bac:	cmp	r2, #0
   19bb0:	beq	19ca8 <argp_failure@@Base+0x490>
   19bb4:	stm	r5, {r4, r8}
   19bb8:	str	r7, [r5, #8]
   19bbc:	ldr	r9, [r4, #20]
   19bc0:	cmp	r9, #0
   19bc4:	bne	19be0 <argp_failure@@Base+0x3c8>
   19bc8:	ldr	r2, [r4]
   19bcc:	cmp	r2, #0
   19bd0:	bne	19bdc <argp_failure@@Base+0x3c4>
   19bd4:	cmp	r1, #0
   19bd8:	addeq	r0, r0, #1
   19bdc:	mov	r9, r0
   19be0:	ldr	r0, [sp, #40]	; 0x28
   19be4:	mov	r1, #0
   19be8:	str	r9, [r5, #12]
   19bec:	str	sl, [r5, #16]
   19bf0:	str	r0, [r5, #20]
   19bf4:	b	19c00 <argp_failure@@Base+0x3e8>
   19bf8:	ldr	r1, [r5, #4]
   19bfc:	mov	r4, r0
   19c00:	add	r0, r1, #1
   19c04:	str	r0, [r5, #4]
   19c08:	ldrb	r0, [r4, #12]
   19c0c:	tst	r0, #8
   19c10:	bne	19c64 <argp_failure@@Base+0x44c>
   19c14:	ldr	r6, [r4, #4]
   19c18:	sub	r0, r6, #1
   19c1c:	cmp	r0, #254	; 0xfe
   19c20:	bhi	19c64 <argp_failure@@Base+0x44c>
   19c24:	bl	11d00 <__ctype_b_loc@plt>
   19c28:	ldr	r0, [r0]
   19c2c:	add	r0, r0, r6, lsl #1
   19c30:	ldrb	r0, [r0, #1]
   19c34:	tst	r0, #64	; 0x40
   19c38:	beq	19c64 <argp_failure@@Base+0x44c>
   19c3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19c40:	ldr	r0, [r0, #8]
   19c44:	cmp	r0, r7
   19c48:	bcs	19c60 <argp_failure@@Base+0x448>
   19c4c:	ldrb	r1, [r0], #1
   19c50:	uxtb	r2, r6
   19c54:	cmp	r1, r2
   19c58:	bne	19c44 <argp_failure@@Base+0x42c>
   19c5c:	b	19c64 <argp_failure@@Base+0x44c>
   19c60:	strb	r6, [r7], #1
   19c64:	ldr	r1, [r4, #28]
   19c68:	add	r0, r4, #24
   19c6c:	cmp	r1, #0
   19c70:	bne	19c98 <argp_failure@@Base+0x480>
   19c74:	ldr	r1, [r0]
   19c78:	cmp	r1, #0
   19c7c:	bne	19c98 <argp_failure@@Base+0x480>
   19c80:	ldr	r1, [r4, #40]	; 0x28
   19c84:	cmp	r1, #0
   19c88:	bne	19c98 <argp_failure@@Base+0x480>
   19c8c:	ldr	r1, [r4, #44]	; 0x2c
   19c90:	cmp	r1, #0
   19c94:	beq	19b78 <argp_failure@@Base+0x360>
   19c98:	ldrb	r1, [r4, #36]	; 0x24
   19c9c:	tst	r1, #4
   19ca0:	bne	19bf8 <argp_failure@@Base+0x3e0>
   19ca4:	b	19b78 <argp_failure@@Base+0x360>
   19ca8:	mov	r0, #0
   19cac:	ldr	r9, [sp, #12]
   19cb0:	strb	r0, [r7]
   19cb4:	ldr	r7, [sp, #40]	; 0x28
   19cb8:	cmp	r9, #0
   19cbc:	ldrne	r0, [r9]
   19cc0:	cmpne	r0, #0
   19cc4:	bne	19cd4 <argp_failure@@Base+0x4bc>
   19cc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ccc:	sub	sp, fp, #28
   19cd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cd4:	str	sl, [sp, #4]
   19cd8:	ldr	r4, [r9, #12]
   19cdc:	cmp	r4, #0
   19ce0:	beq	19cec <argp_failure@@Base+0x4d4>
   19ce4:	ldr	r5, [r9, #8]
   19ce8:	b	19cfc <argp_failure@@Base+0x4e4>
   19cec:	ldr	r5, [r9, #8]
   19cf0:	mov	r1, sl
   19cf4:	cmp	r5, #0
   19cf8:	beq	19d4c <argp_failure@@Base+0x534>
   19cfc:	ldr	r6, [r7, #16]
   19d00:	mov	r0, #28
   19d04:	bl	1809c <argp_parse@@Base+0x1a04>
   19d08:	mov	r1, r0
   19d0c:	cmp	r0, #0
   19d10:	beq	19d4c <argp_failure@@Base+0x534>
   19d14:	sub	r0, r9, r6
   19d18:	str	r5, [r1]
   19d1c:	cmp	sl, #0
   19d20:	asr	r0, r0, #4
   19d24:	stmib	r1, {r0, r4, sl}
   19d28:	str	r7, [r1, #16]
   19d2c:	ldr	r3, [sp, #20]
   19d30:	ldrne	r0, [sl, #20]
   19d34:	ldr	r2, [r3]
   19d38:	addne	r0, r0, #1
   19d3c:	str	r1, [r3]
   19d40:	moveq	r0, #0
   19d44:	str	r0, [r1, #20]
   19d48:	str	r2, [r1, #24]
   19d4c:	ldr	r0, [r9]
   19d50:	bl	19a20 <argp_failure@@Base+0x208>
   19d54:	ldr	r1, [sp, #20]
   19d58:	mov	r6, r0
   19d5c:	ldr	r2, [r1]
   19d60:	mov	r0, r1
   19d64:	add	r1, r2, #24
   19d68:	cmp	r2, #0
   19d6c:	bne	19d5c <argp_failure@@Base+0x544>
   19d70:	ldr	r1, [r6, #12]
   19d74:	str	r1, [r0]
   19d78:	mov	r0, #0
   19d7c:	str	r0, [r6, #12]
   19d80:	ldr	r0, [r6, #4]
   19d84:	cmp	r0, #0
   19d88:	beq	19fec <argp_failure@@Base+0x7d4>
   19d8c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   19d90:	ldr	r4, [r5, #4]
   19d94:	cmp	r4, #0
   19d98:	beq	19f48 <argp_failure@@Base+0x730>
   19d9c:	add	r0, r4, r0
   19da0:	str	r0, [sp, #16]
   19da4:	rsb	r0, r0, r0, lsl #3
   19da8:	lsl	r0, r0, #2
   19dac:	bl	1809c <argp_parse@@Base+0x1a04>
   19db0:	ldr	r8, [r5, #8]
   19db4:	str	r0, [sp, #24]
   19db8:	mov	r0, r8
   19dbc:	bl	11d30 <strlen@plt>
   19dc0:	mov	r7, r0
   19dc4:	ldr	r0, [r6, #8]
   19dc8:	bl	11d30 <strlen@plt>
   19dcc:	add	r0, r7, r0
   19dd0:	str	r7, [sp, #32]
   19dd4:	add	r0, r0, #1
   19dd8:	bl	1809c <argp_parse@@Base+0x1a04>
   19ddc:	ldr	r1, [sp, #24]
   19de0:	cmp	r1, #0
   19de4:	cmpne	r0, #0
   19de8:	beq	1a004 <argp_failure@@Base+0x7ec>
   19dec:	ldr	r1, [sp, #16]
   19df0:	str	r0, [sp, #36]	; 0x24
   19df4:	movw	r0, #37450	; 0x924a
   19df8:	movt	r0, #2340	; 0x924
   19dfc:	cmp	r1, r0
   19e00:	bcs	1a084 <argp_failure@@Base+0x86c>
   19e04:	ldr	r7, [sp, #24]
   19e08:	ldr	r1, [r5]
   19e0c:	rsb	r5, r4, r4, lsl #3
   19e10:	lsl	r2, r5, #2
   19e14:	str	r2, [fp, #-36]	; 0xffffffdc
   19e18:	mov	r0, r7
   19e1c:	bl	11b68 <memcpy@plt>
   19e20:	ldm	r6, {r1, r2}
   19e24:	add	r0, r7, r5, lsl #2
   19e28:	rsb	r2, r2, r2, lsl #3
   19e2c:	lsl	r2, r2, #2
   19e30:	bl	11b68 <memcpy@plt>
   19e34:	ldr	r5, [sp, #36]	; 0x24
   19e38:	ldr	r2, [sp, #32]
   19e3c:	mov	r1, r8
   19e40:	mov	r0, r5
   19e44:	bl	11b68 <memcpy@plt>
   19e48:	add	r0, r7, #8
   19e4c:	ldr	r1, [r0]
   19e50:	subs	r4, r4, #1
   19e54:	sub	r1, r1, r8
   19e58:	add	r1, r5, r1
   19e5c:	str	r1, [r0], #28
   19e60:	bne	19e4c <argp_failure@@Base+0x634>
   19e64:	ldr	r0, [sp, #32]
   19e68:	ldr	r2, [r6, #4]
   19e6c:	str	r9, [sp, #12]
   19e70:	str	r6, [sp, #8]
   19e74:	add	r4, r5, r0
   19e78:	cmp	r2, #0
   19e7c:	beq	19f64 <argp_failure@@Base+0x74c>
   19e80:	mov	r0, r6
   19e84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19e88:	ldr	r1, [sp, #24]
   19e8c:	str	r4, [fp, #-36]	; 0xffffffdc
   19e90:	ldr	r7, [r0, #8]
   19e94:	add	r6, r1, r3
   19e98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e9c:	str	r2, [sp, #28]
   19ea0:	str	r0, [r6, #8]
   19ea4:	ldr	r9, [r6, #4]
   19ea8:	cmp	r9, #0
   19eac:	beq	19f34 <argp_failure@@Base+0x71c>
   19eb0:	ldr	sl, [r6]
   19eb4:	ldrb	r0, [sl, #12]
   19eb8:	tst	r0, #8
   19ebc:	bne	19f28 <argp_failure@@Base+0x710>
   19ec0:	ldr	r5, [sl, #4]
   19ec4:	sub	r0, r5, #1
   19ec8:	cmp	r0, #254	; 0xfe
   19ecc:	bhi	19f28 <argp_failure@@Base+0x710>
   19ed0:	ldrb	r8, [r7]
   19ed4:	bl	11d00 <__ctype_b_loc@plt>
   19ed8:	cmp	r5, r8
   19edc:	bne	19f28 <argp_failure@@Base+0x710>
   19ee0:	ldr	r0, [r0]
   19ee4:	add	r0, r0, r5, lsl #1
   19ee8:	ldrh	r0, [r0]
   19eec:	ands	r0, r0, #16384	; 0x4000
   19ef0:	beq	19f28 <argp_failure@@Base+0x710>
   19ef4:	ldr	r0, [sp, #32]
   19ef8:	cmp	r0, #1
   19efc:	ldr	r0, [sp, #36]	; 0x24
   19f00:	blt	19f18 <argp_failure@@Base+0x700>
   19f04:	ldrb	r1, [r0], #1
   19f08:	cmp	r1, r8
   19f0c:	beq	19f24 <argp_failure@@Base+0x70c>
   19f10:	cmp	r0, r4
   19f14:	bcc	19f04 <argp_failure@@Base+0x6ec>
   19f18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19f1c:	strb	r8, [r0], #1
   19f20:	str	r0, [fp, #-36]	; 0xffffffdc
   19f24:	add	r7, r7, #1
   19f28:	subs	r9, r9, #1
   19f2c:	add	sl, sl, #24
   19f30:	bne	19eb4 <argp_failure@@Base+0x69c>
   19f34:	ldr	r2, [sp, #28]
   19f38:	add	r6, r6, #28
   19f3c:	subs	r2, r2, #1
   19f40:	bne	19e98 <argp_failure@@Base+0x680>
   19f44:	b	19f68 <argp_failure@@Base+0x750>
   19f48:	ldr	r1, [r6]
   19f4c:	ldr	r2, [r6, #8]
   19f50:	str	r1, [r5]
   19f54:	stmib	r5, {r0, r2}
   19f58:	mov	r0, #0
   19f5c:	str	r0, [r6, #4]
   19f60:	b	19fec <argp_failure@@Base+0x7d4>
   19f64:	str	r4, [fp, #-36]	; 0xffffffdc
   19f68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19f6c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   19f70:	mov	r0, #0
   19f74:	strb	r0, [r1]
   19f78:	ldr	r0, [r4]
   19f7c:	bl	17968 <argp_parse@@Base+0x12d0>
   19f80:	ldr	r0, [r4, #8]
   19f84:	bl	17968 <argp_parse@@Base+0x12d0>
   19f88:	ldr	r0, [sp, #24]
   19f8c:	ldr	r6, [sp, #8]
   19f90:	str	r0, [r4]
   19f94:	ldr	r0, [sp, #16]
   19f98:	str	r0, [r4, #4]
   19f9c:	ldr	r0, [sp, #36]	; 0x24
   19fa0:	str	r0, [r4, #8]
   19fa4:	ldr	r0, [r6, #12]
   19fa8:	cmp	r0, #0
   19fac:	beq	19fc4 <argp_failure@@Base+0x7ac>
   19fb0:	ldr	r4, [r0, #24]
   19fb4:	bl	17968 <argp_parse@@Base+0x12d0>
   19fb8:	cmp	r4, #0
   19fbc:	mov	r0, r4
   19fc0:	bne	19fb0 <argp_failure@@Base+0x798>
   19fc4:	ldr	r0, [r6, #4]
   19fc8:	ldr	sl, [sp, #4]
   19fcc:	ldr	r7, [sp, #40]	; 0x28
   19fd0:	ldr	r9, [sp, #12]
   19fd4:	cmp	r0, #0
   19fd8:	beq	19fec <argp_failure@@Base+0x7d4>
   19fdc:	ldr	r0, [r6]
   19fe0:	bl	17968 <argp_parse@@Base+0x12d0>
   19fe4:	ldr	r0, [r6, #8]
   19fe8:	bl	17968 <argp_parse@@Base+0x12d0>
   19fec:	mov	r0, r6
   19ff0:	bl	17968 <argp_parse@@Base+0x12d0>
   19ff4:	ldr	r0, [r9, #16]!
   19ff8:	cmp	r0, #0
   19ffc:	bne	19cd8 <argp_failure@@Base+0x4c0>
   1a000:	b	19cc8 <argp_failure@@Base+0x4b0>
   1a004:	movw	r0, #57469	; 0xe07d
   1a008:	movw	r1, #57285	; 0xdfc5
   1a00c:	movw	r3, #57494	; 0xe096
   1a010:	movw	r2, #970	; 0x3ca
   1a014:	movt	r0, #1
   1a018:	movt	r1, #1
   1a01c:	movt	r3, #1
   1a020:	bl	11f7c <__assert_fail@plt>
   1a024:	movw	r0, #57281	; 0xdfc1
   1a028:	movw	r1, #57285	; 0xdfc5
   1a02c:	movw	r3, #57297	; 0xdfd1
   1a030:	movw	r2, #450	; 0x1c2
   1a034:	movt	r0, #1
   1a038:	movt	r1, #1
   1a03c:	movt	r3, #1
   1a040:	bl	11f7c <__assert_fail@plt>
   1a044:	movw	r0, #57361	; 0xe011
   1a048:	movw	r1, #57285	; 0xdfc5
   1a04c:	movw	r3, #57297	; 0xdfd1
   1a050:	mov	r2, #460	; 0x1cc
   1a054:	movt	r0, #1
   1a058:	movt	r1, #1
   1a05c:	movt	r3, #1
   1a060:	bl	11f7c <__assert_fail@plt>
   1a064:	movw	r0, #57412	; 0xe044
   1a068:	movw	r1, #57285	; 0xdfc5
   1a06c:	movw	r3, #57297	; 0xdfd1
   1a070:	mov	r2, #476	; 0x1dc
   1a074:	movt	r0, #1
   1a078:	movt	r1, #1
   1a07c:	movt	r3, #1
   1a080:	bl	11f7c <__assert_fail@plt>
   1a084:	movw	r0, #57417	; 0xe049
   1a088:	movw	r1, #57285	; 0xdfc5
   1a08c:	movw	r3, #57494	; 0xe096
   1a090:	mov	r2, #972	; 0x3cc
   1a094:	movt	r0, #1
   1a098:	movt	r1, #1
   1a09c:	movt	r3, #1
   1a0a0:	bl	11f7c <__assert_fail@plt>
   1a0a4:	push	{r4, r5, fp, lr}
   1a0a8:	add	fp, sp, #8
   1a0ac:	mov	r1, r0
   1a0b0:	ldr	r0, [r0, #8]
   1a0b4:	ldr	r5, [r1, #16]
   1a0b8:	cmp	r0, #0
   1a0bc:	beq	1a0d8 <argp_failure@@Base+0x8c0>
   1a0c0:	mov	r1, #10
   1a0c4:	bl	11d48 <strchr@plt>
   1a0c8:	mov	r4, r0
   1a0cc:	cmp	r0, #0
   1a0d0:	movwne	r4, #1
   1a0d4:	b	1a0dc <argp_failure@@Base+0x8c4>
   1a0d8:	mov	r4, #0
   1a0dc:	cmp	r5, #0
   1a0e0:	ldrne	r0, [r5]
   1a0e4:	cmpne	r0, #0
   1a0e8:	beq	1a104 <argp_failure@@Base+0x8ec>
   1a0ec:	add	r5, r5, #16
   1a0f0:	bl	1a0a4 <argp_failure@@Base+0x88c>
   1a0f4:	add	r4, r0, r4
   1a0f8:	ldr	r0, [r5], #16
   1a0fc:	cmp	r0, #0
   1a100:	bne	1a0f0 <argp_failure@@Base+0x8d8>
   1a104:	mov	r0, r4
   1a108:	pop	{r4, r5, fp, pc}
   1a10c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a110:	add	fp, sp, #28
   1a114:	sub	sp, sp, #28
   1a118:	ldr	r4, [r0, #4]
   1a11c:	str	r1, [fp, #-40]	; 0xffffffd8
   1a120:	cmp	r4, #0
   1a124:	beq	1a4b4 <argp_failure@@Base+0xc9c>
   1a128:	mov	r5, r0
   1a12c:	ldr	r0, [r0, #8]
   1a130:	bl	11d30 <strlen@plt>
   1a134:	add	r0, r0, #8
   1a138:	bic	r0, r0, #7
   1a13c:	sub	r0, sp, r0
   1a140:	mov	sp, r0
   1a144:	ldr	r7, [r5]
   1a148:	str	r0, [fp, #-52]	; 0xffffffcc
   1a14c:	str	r0, [fp, #-48]	; 0xffffffd0
   1a150:	str	r5, [fp, #-44]	; 0xffffffd4
   1a154:	ldr	r6, [r7, #4]
   1a158:	str	r4, [fp, #-36]	; 0xffffffdc
   1a15c:	cmp	r6, #0
   1a160:	beq	1a204 <argp_failure@@Base+0x9ec>
   1a164:	ldr	r4, [r7]
   1a168:	ldr	r5, [r7, #8]
   1a16c:	mov	sl, r4
   1a170:	b	1a19c <argp_failure@@Base+0x984>
   1a174:	ldr	r0, [r4, #8]
   1a178:	cmp	r0, #0
   1a17c:	bne	1a1f4 <argp_failure@@Base+0x9dc>
   1a180:	ldr	r0, [r4, #12]
   1a184:	orr	r0, r0, r8
   1a188:	tst	r0, #16
   1a18c:	ldreq	r0, [fp, #-48]	; 0xffffffd0
   1a190:	strbeq	r9, [r0], #1
   1a194:	streq	r0, [fp, #-48]	; 0xffffffd0
   1a198:	b	1a1f4 <argp_failure@@Base+0x9dc>
   1a19c:	ldr	r8, [sl, #12]
   1a1a0:	tst	r8, #8
   1a1a4:	bne	1a1f8 <argp_failure@@Base+0x9e0>
   1a1a8:	ldr	r9, [sl, #4]
   1a1ac:	sub	r0, r9, #1
   1a1b0:	cmp	r0, #254	; 0xfe
   1a1b4:	bhi	1a1f8 <argp_failure@@Base+0x9e0>
   1a1b8:	bl	11d00 <__ctype_b_loc@plt>
   1a1bc:	ldr	r0, [r0]
   1a1c0:	add	r0, r0, r9, lsl #1
   1a1c4:	ldrb	r0, [r0, #1]
   1a1c8:	tst	r0, #64	; 0x40
   1a1cc:	beq	1a1f8 <argp_failure@@Base+0x9e0>
   1a1d0:	ldrb	r0, [r5]
   1a1d4:	cmp	r9, r0
   1a1d8:	bne	1a1f8 <argp_failure@@Base+0x9e0>
   1a1dc:	tst	r8, #4
   1a1e0:	moveq	r4, sl
   1a1e4:	tst	r8, #2
   1a1e8:	ldreq	r0, [sl, #8]
   1a1ec:	cmpeq	r0, #0
   1a1f0:	beq	1a174 <argp_failure@@Base+0x95c>
   1a1f4:	add	r5, r5, #1
   1a1f8:	subs	r6, r6, #1
   1a1fc:	add	sl, sl, #24
   1a200:	bne	1a19c <argp_failure@@Base+0x984>
   1a204:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1a208:	ldr	r6, [fp, #-44]	; 0xffffffd4
   1a20c:	add	r7, r7, #28
   1a210:	subs	r4, r4, #1
   1a214:	bne	1a154 <argp_failure@@Base+0x93c>
   1a218:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a21c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a220:	cmp	r1, r2
   1a224:	bls	1a240 <argp_failure@@Base+0xa28>
   1a228:	mov	r0, #0
   1a22c:	strb	r0, [r1]
   1a230:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a234:	movw	r1, #57538	; 0xe0c2
   1a238:	movt	r1, #1
   1a23c:	bl	1cd40 <argp_failure@@Base+0x3528>
   1a240:	ldr	r5, [r6, #4]
   1a244:	cmp	r5, #0
   1a248:	beq	1a4b4 <argp_failure@@Base+0xc9c>
   1a24c:	ldr	r8, [r6]
   1a250:	ldr	r9, [r8, #4]
   1a254:	cmp	r9, #0
   1a258:	beq	1a3ec <argp_failure@@Base+0xbd4>
   1a25c:	ldr	sl, [r8]
   1a260:	ldr	r4, [r8, #8]
   1a264:	str	sl, [fp, #-36]	; 0xffffffdc
   1a268:	ldr	r6, [sl, #12]
   1a26c:	tst	r6, #8
   1a270:	bne	1a3e0 <argp_failure@@Base+0xbc8>
   1a274:	ldr	r7, [sl, #4]
   1a278:	sub	r0, r7, #1
   1a27c:	cmp	r0, #254	; 0xfe
   1a280:	bhi	1a3e0 <argp_failure@@Base+0xbc8>
   1a284:	bl	11d00 <__ctype_b_loc@plt>
   1a288:	ldr	r0, [r0]
   1a28c:	add	r0, r0, r7, lsl #1
   1a290:	ldrb	r0, [r0, #1]
   1a294:	tst	r0, #64	; 0x40
   1a298:	beq	1a3e0 <argp_failure@@Base+0xbc8>
   1a29c:	ldrb	r0, [r4]
   1a2a0:	cmp	r7, r0
   1a2a4:	bne	1a3e0 <argp_failure@@Base+0xbc8>
   1a2a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a2ac:	tst	r6, #4
   1a2b0:	moveq	r0, sl
   1a2b4:	tst	r6, #2
   1a2b8:	str	r0, [fp, #-36]	; 0xffffffdc
   1a2bc:	bne	1a3dc <argp_failure@@Base+0xbc4>
   1a2c0:	ldr	r3, [sl, #8]
   1a2c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a2c8:	cmp	r3, #0
   1a2cc:	ldr	r0, [r0, #12]
   1a2d0:	ldreq	r1, [fp, #-36]	; 0xffffffdc
   1a2d4:	orr	r0, r0, r6
   1a2d8:	ldreq	r3, [r1, #8]
   1a2dc:	tst	r0, #16
   1a2e0:	bne	1a3dc <argp_failure@@Base+0xbc4>
   1a2e4:	cmp	r3, #0
   1a2e8:	beq	1a3dc <argp_failure@@Base+0xbc4>
   1a2ec:	tst	r0, #1
   1a2f0:	bne	1a37c <argp_failure@@Base+0xb64>
   1a2f4:	mov	r0, r3
   1a2f8:	str	r3, [fp, #-48]	; 0xffffffd0
   1a2fc:	bl	11d30 <strlen@plt>
   1a300:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1a304:	add	r6, r0, #6
   1a308:	ldr	r2, [r7, #24]
   1a30c:	ldr	r0, [r7, #28]
   1a310:	ldr	r1, [r7, #16]
   1a314:	sub	r2, r0, r2
   1a318:	cmp	r2, r1
   1a31c:	bls	1a32c <argp_failure@@Base+0xb14>
   1a320:	mov	r0, r7
   1a324:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1a328:	ldr	r0, [r7, #28]
   1a32c:	ldr	r3, [r7, #20]
   1a330:	ldr	r2, [r7, #8]
   1a334:	ldr	r1, [r7, #32]
   1a338:	cmp	r3, #0
   1a33c:	addgt	r6, r6, r3
   1a340:	cmp	r6, r2
   1a344:	bcs	1a390 <argp_failure@@Base+0xb78>
   1a348:	ldr	r6, [fp, #-48]	; 0xffffffd0
   1a34c:	cmp	r0, r1
   1a350:	bcc	1a36c <argp_failure@@Base+0xb54>
   1a354:	mov	r0, r7
   1a358:	mov	r1, #1
   1a35c:	bl	1cc54 <argp_failure@@Base+0x343c>
   1a360:	cmp	r0, #0
   1a364:	beq	1a3c4 <argp_failure@@Base+0xbac>
   1a368:	ldr	r0, [r7, #28]
   1a36c:	add	r1, r0, #1
   1a370:	str	r1, [r7, #28]
   1a374:	mov	r1, #32
   1a378:	b	1a3c0 <argp_failure@@Base+0xba8>
   1a37c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a380:	movw	r1, #57545	; 0xe0c9
   1a384:	mov	r2, r7
   1a388:	movt	r1, #1
   1a38c:	b	1a3d8 <argp_failure@@Base+0xbc0>
   1a390:	ldr	r6, [fp, #-48]	; 0xffffffd0
   1a394:	cmp	r0, r1
   1a398:	bcc	1a3b4 <argp_failure@@Base+0xb9c>
   1a39c:	mov	r0, r7
   1a3a0:	mov	r1, #1
   1a3a4:	bl	1cc54 <argp_failure@@Base+0x343c>
   1a3a8:	cmp	r0, #0
   1a3ac:	beq	1a3c4 <argp_failure@@Base+0xbac>
   1a3b0:	ldr	r0, [r7, #28]
   1a3b4:	add	r1, r0, #1
   1a3b8:	str	r1, [r7, #28]
   1a3bc:	mov	r1, #10
   1a3c0:	strb	r1, [r0]
   1a3c4:	ldr	r2, [sl, #4]
   1a3c8:	movw	r1, #57556	; 0xe0d4
   1a3cc:	mov	r0, r7
   1a3d0:	mov	r3, r6
   1a3d4:	movt	r1, #1
   1a3d8:	bl	1cd40 <argp_failure@@Base+0x3528>
   1a3dc:	add	r4, r4, #1
   1a3e0:	subs	r9, r9, #1
   1a3e4:	add	sl, sl, #24
   1a3e8:	bne	1a268 <argp_failure@@Base+0xa50>
   1a3ec:	subs	r5, r5, #1
   1a3f0:	add	r8, r8, #28
   1a3f4:	bne	1a250 <argp_failure@@Base+0xa38>
   1a3f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3fc:	ldr	r4, [r0, #4]
   1a400:	cmp	r4, #0
   1a404:	beq	1a4b4 <argp_failure@@Base+0xc9c>
   1a408:	ldr	r6, [r0]
   1a40c:	movw	sl, #57589	; 0xe0f5
   1a410:	movw	r9, #57565	; 0xe0dd
   1a414:	movt	sl, #1
   1a418:	movt	r9, #1
   1a41c:	ldr	r7, [r6, #4]
   1a420:	cmp	r7, #0
   1a424:	beq	1a4a8 <argp_failure@@Base+0xc90>
   1a428:	ldr	r8, [r6]
   1a42c:	mov	r5, r8
   1a430:	ldr	r2, [r5]
   1a434:	cmp	r2, #0
   1a438:	beq	1a49c <argp_failure@@Base+0xc84>
   1a43c:	ldr	r0, [r5, #12]
   1a440:	tst	r0, #4
   1a444:	moveq	r8, r5
   1a448:	tst	r0, #2
   1a44c:	bne	1a49c <argp_failure@@Base+0xc84>
   1a450:	ldr	r3, [r5, #8]
   1a454:	ldr	r1, [r8, #12]
   1a458:	cmp	r3, #0
   1a45c:	orr	r0, r1, r0
   1a460:	ldreq	r3, [r8, #8]
   1a464:	tst	r0, #16
   1a468:	bne	1a49c <argp_failure@@Base+0xc84>
   1a46c:	cmp	r3, #0
   1a470:	beq	1a490 <argp_failure@@Base+0xc78>
   1a474:	tst	r0, #1
   1a478:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a47c:	movne	r1, r9
   1a480:	movweq	r1, #57578	; 0xe0ea
   1a484:	movteq	r1, #1
   1a488:	bl	1cd40 <argp_failure@@Base+0x3528>
   1a48c:	b	1a49c <argp_failure@@Base+0xc84>
   1a490:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a494:	mov	r1, sl
   1a498:	bl	1cd40 <argp_failure@@Base+0x3528>
   1a49c:	subs	r7, r7, #1
   1a4a0:	add	r5, r5, #24
   1a4a4:	bne	1a430 <argp_failure@@Base+0xc18>
   1a4a8:	subs	r4, r4, #1
   1a4ac:	add	r6, r6, #28
   1a4b0:	bne	1a41c <argp_failure@@Base+0xc04>
   1a4b4:	sub	sp, fp, #28
   1a4b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a4bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a4c0:	add	fp, sp, #28
   1a4c4:	sub	sp, sp, #28
   1a4c8:	ldr	r6, [r0, #8]
   1a4cc:	ldr	r5, [r0, #16]
   1a4d0:	ldr	sl, [r2]
   1a4d4:	mov	r4, r3
   1a4d8:	mov	r9, r2
   1a4dc:	mov	r8, r1
   1a4e0:	mov	r7, r0
   1a4e4:	cmp	r0, #0
   1a4e8:	mov	r0, r6
   1a4ec:	beq	1a524 <argp_failure@@Base+0xd0c>
   1a4f0:	ldr	r0, [r7, #20]
   1a4f4:	cmp	r0, #0
   1a4f8:	mov	r0, r6
   1a4fc:	beq	1a524 <argp_failure@@Base+0xd0c>
   1a500:	mov	r0, r7
   1a504:	mov	r1, r8
   1a508:	bl	172d4 <argp_parse@@Base+0xc3c>
   1a50c:	ldr	r3, [r7, #20]
   1a510:	mov	r2, r0
   1a514:	movw	r0, #6
   1a518:	mov	r1, r6
   1a51c:	movt	r0, #512	; 0x200
   1a520:	blx	r3
   1a524:	cmp	r0, #0
   1a528:	str	sl, [sp, #24]
   1a52c:	beq	1a58c <argp_failure@@Base+0xd74>
   1a530:	mov	r1, #10
   1a534:	mov	sl, r0
   1a538:	bl	11b2c <strchrnul@plt>
   1a53c:	mov	r7, r0
   1a540:	ldrb	r0, [r0]
   1a544:	cmp	r0, #0
   1a548:	add	r0, sp, #12
   1a54c:	stm	r0, {r5, r6, sl}
   1a550:	beq	1a598 <argp_failure@@Base+0xd80>
   1a554:	ldr	r0, [sp, #24]
   1a558:	ldrb	r6, [r0]
   1a55c:	cmp	r6, #0
   1a560:	beq	1a5a0 <argp_failure@@Base+0xd88>
   1a564:	mov	r5, #0
   1a568:	add	sl, r7, #1
   1a56c:	mov	r1, #10
   1a570:	mov	r0, sl
   1a574:	bl	11b2c <strchrnul@plt>
   1a578:	add	r5, r5, #1
   1a57c:	mov	r7, r0
   1a580:	cmp	r5, r6
   1a584:	bcc	1a568 <argp_failure@@Base+0xd50>
   1a588:	b	1a5a4 <argp_failure@@Base+0xd8c>
   1a58c:	mov	r7, #0
   1a590:	mov	sl, #0
   1a594:	b	1a6d4 <argp_failure@@Base+0xebc>
   1a598:	mov	r0, #0
   1a59c:	b	1a5b4 <argp_failure@@Base+0xd9c>
   1a5a0:	ldr	sl, [sp, #20]
   1a5a4:	ldr	r0, [r9]
   1a5a8:	add	r0, r0, #1
   1a5ac:	str	r0, [r9]
   1a5b0:	mov	r0, #1
   1a5b4:	ldr	r5, [fp, #8]
   1a5b8:	str	r0, [sp, #8]
   1a5bc:	add	r0, r7, #1
   1a5c0:	sub	r6, r0, sl
   1a5c4:	ldr	r2, [r5, #24]
   1a5c8:	ldr	r0, [r5, #28]
   1a5cc:	ldr	r1, [r5, #16]
   1a5d0:	sub	r2, r0, r2
   1a5d4:	cmp	r2, r1
   1a5d8:	bls	1a5e8 <argp_failure@@Base+0xdd0>
   1a5dc:	mov	r0, r5
   1a5e0:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1a5e4:	ldr	r0, [r5, #28]
   1a5e8:	ldr	r3, [r5, #20]
   1a5ec:	ldr	r2, [r5, #8]
   1a5f0:	ldr	r1, [r5, #32]
   1a5f4:	cmp	r3, #0
   1a5f8:	addgt	r6, r6, r3
   1a5fc:	cmp	r6, r2
   1a600:	bcs	1a634 <argp_failure@@Base+0xe1c>
   1a604:	cmp	r0, r1
   1a608:	bcc	1a624 <argp_failure@@Base+0xe0c>
   1a60c:	mov	r0, r5
   1a610:	mov	r1, #1
   1a614:	bl	1cc54 <argp_failure@@Base+0x343c>
   1a618:	cmp	r0, #0
   1a61c:	beq	1a664 <argp_failure@@Base+0xe4c>
   1a620:	ldr	r0, [r5, #28]
   1a624:	add	r1, r0, #1
   1a628:	str	r1, [r5, #28]
   1a62c:	mov	r1, #32
   1a630:	b	1a660 <argp_failure@@Base+0xe48>
   1a634:	cmp	r0, r1
   1a638:	bcc	1a654 <argp_failure@@Base+0xe3c>
   1a63c:	mov	r0, r5
   1a640:	mov	r1, #1
   1a644:	bl	1cc54 <argp_failure@@Base+0x343c>
   1a648:	cmp	r0, #0
   1a64c:	beq	1a664 <argp_failure@@Base+0xe4c>
   1a650:	ldr	r0, [r5, #28]
   1a654:	add	r1, r0, #1
   1a658:	str	r1, [r5, #28]
   1a65c:	mov	r1, #10
   1a660:	strb	r1, [r0]
   1a664:	mov	r6, r5
   1a668:	sub	r5, r7, sl
   1a66c:	ldr	r0, [r6, #28]
   1a670:	ldr	r1, [r6, #32]
   1a674:	add	r2, r0, r5
   1a678:	cmp	r2, r1
   1a67c:	bls	1a69c <argp_failure@@Base+0xe84>
   1a680:	mov	r0, r6
   1a684:	mov	r1, r5
   1a688:	bl	1cc54 <argp_failure@@Base+0x343c>
   1a68c:	cmp	r0, #0
   1a690:	beq	1a6b4 <argp_failure@@Base+0xe9c>
   1a694:	ldr	r6, [fp, #8]
   1a698:	ldr	r0, [r6, #28]
   1a69c:	mov	r1, sl
   1a6a0:	mov	r2, r5
   1a6a4:	bl	11b68 <memcpy@plt>
   1a6a8:	ldr	r0, [r6, #28]
   1a6ac:	add	r0, r0, r5
   1a6b0:	str	r0, [r6, #28]
   1a6b4:	ldr	r0, [sp, #16]
   1a6b8:	ldr	r1, [sp, #20]
   1a6bc:	cmp	r1, r0
   1a6c0:	beq	1a6cc <argp_failure@@Base+0xeb4>
   1a6c4:	mov	r0, r1
   1a6c8:	bl	17968 <argp_parse@@Base+0x12d0>
   1a6cc:	ldr	r5, [sp, #12]
   1a6d0:	ldr	sl, [sp, #8]
   1a6d4:	cmp	r5, #0
   1a6d8:	ldrne	r0, [r5]
   1a6dc:	cmpne	r0, #0
   1a6e0:	beq	1a718 <argp_failure@@Base+0xf00>
   1a6e4:	add	r6, r5, #16
   1a6e8:	ldr	r5, [fp, #8]
   1a6ec:	mov	r1, r8
   1a6f0:	mov	r2, r9
   1a6f4:	mov	r3, r4
   1a6f8:	str	r5, [sp]
   1a6fc:	bl	1a4bc <argp_failure@@Base+0xca4>
   1a700:	clz	r1, r0
   1a704:	ldr	r0, [r6], #16
   1a708:	lsr	r4, r1, #5
   1a70c:	cmp	r0, #0
   1a710:	bne	1a6ec <argp_failure@@Base+0xed4>
   1a714:	lsr	r4, r1, #5
   1a718:	cmp	sl, #0
   1a71c:	cmpne	r4, #0
   1a720:	bne	1a734 <argp_failure@@Base+0xf1c>
   1a724:	clz	r0, r4
   1a728:	lsr	r0, r0, #5
   1a72c:	sub	sp, fp, #28
   1a730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a734:	ldr	r2, [sp, #24]
   1a738:	ldrb	r1, [r7]
   1a73c:	ldrb	r0, [r2]
   1a740:	cmp	r1, #0
   1a744:	beq	1a758 <argp_failure@@Base+0xf40>
   1a748:	add	r0, r0, #1
   1a74c:	mov	r4, #0
   1a750:	strb	r0, [r2]
   1a754:	b	1a724 <argp_failure@@Base+0xf0c>
   1a758:	cmp	r0, #0
   1a75c:	movne	r0, #0
   1a760:	strbne	r0, [r2]
   1a764:	b	1a724 <argp_failure@@Base+0xf0c>
   1a768:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a76c:	add	fp, sp, #28
   1a770:	sub	sp, sp, #28
   1a774:	ldr	r7, [r0, #12]
   1a778:	ldr	r8, [r0, #16]
   1a77c:	mov	r6, r0
   1a780:	mov	sl, r3
   1a784:	str	r1, [sp, #24]
   1a788:	str	r3, [sp, #20]
   1a78c:	str	r2, [sp, #16]
   1a790:	cmp	r7, #0
   1a794:	beq	1a7dc <argp_failure@@Base+0xfc4>
   1a798:	mov	r0, #0
   1a79c:	mov	r1, #11
   1a7a0:	mov	r5, r2
   1a7a4:	str	r0, [sp, #12]
   1a7a8:	mov	r0, r7
   1a7ac:	bl	11d48 <strchr@plt>
   1a7b0:	cmp	r0, #0
   1a7b4:	mov	r9, r0
   1a7b8:	mov	r4, r0
   1a7bc:	subne	r9, r9, r7
   1a7c0:	cmp	r5, #0
   1a7c4:	movne	r9, #0
   1a7c8:	cmp	r0, #0
   1a7cc:	addne	r4, r4, #1
   1a7d0:	cmp	r5, #0
   1a7d4:	moveq	r4, r7
   1a7d8:	b	1a7ec <argp_failure@@Base+0xfd4>
   1a7dc:	mov	r0, #0
   1a7e0:	mov	r9, #0
   1a7e4:	mov	r4, #0
   1a7e8:	str	r0, [sp, #12]
   1a7ec:	ldr	r0, [r6, #20]
   1a7f0:	movw	r7, #1
   1a7f4:	mov	r5, r8
   1a7f8:	movt	r7, #512	; 0x200
   1a7fc:	cmp	r0, #0
   1a800:	beq	1a8fc <argp_failure@@Base+0x10e4>
   1a804:	cmp	r9, #0
   1a808:	beq	1a81c <argp_failure@@Base+0x1004>
   1a80c:	mov	r0, r4
   1a810:	mov	r1, r9
   1a814:	bl	11b50 <strndup@plt>
   1a818:	mov	r4, r0
   1a81c:	ldr	r1, [sp, #24]
   1a820:	mov	r0, r6
   1a824:	bl	172d4 <argp_parse@@Base+0xc3c>
   1a828:	mov	r2, r0
   1a82c:	ldr	r0, [sp, #16]
   1a830:	ldr	r3, [r6, #20]
   1a834:	mov	r1, r4
   1a838:	str	r2, [sp, #12]
   1a83c:	cmp	r0, #0
   1a840:	mov	r0, r7
   1a844:	addne	r0, r0, #1
   1a848:	blx	r3
   1a84c:	mov	r8, r0
   1a850:	cmp	r8, #0
   1a854:	beq	1a908 <argp_failure@@Base+0x10f0>
   1a858:	ldr	r0, [sp, #20]
   1a85c:	cmp	r0, #0
   1a860:	beq	1a8a0 <argp_failure@@Base+0x1088>
   1a864:	ldr	r0, [fp, #12]
   1a868:	ldr	r2, [r0, #28]
   1a86c:	ldr	r1, [r0, #32]
   1a870:	cmp	r2, r1
   1a874:	bcc	1a890 <argp_failure@@Base+0x1078>
   1a878:	mov	r1, #1
   1a87c:	bl	1cc54 <argp_failure@@Base+0x343c>
   1a880:	cmp	r0, #0
   1a884:	beq	1a8a0 <argp_failure@@Base+0x1088>
   1a888:	ldr	r0, [fp, #12]
   1a88c:	ldr	r2, [r0, #28]
   1a890:	add	r1, r2, #1
   1a894:	str	r1, [r0, #28]
   1a898:	mov	r1, #10
   1a89c:	strb	r1, [r2]
   1a8a0:	cmp	r9, #0
   1a8a4:	str	r5, [sp, #8]
   1a8a8:	beq	1a918 <argp_failure@@Base+0x1100>
   1a8ac:	cmp	r8, r4
   1a8b0:	bne	1a918 <argp_failure@@Base+0x1100>
   1a8b4:	ldr	r5, [fp, #12]
   1a8b8:	ldr	r0, [r5, #28]!
   1a8bc:	ldr	r2, [r5, #4]
   1a8c0:	add	r1, r0, r9
   1a8c4:	cmp	r1, r2
   1a8c8:	bls	1a8e4 <argp_failure@@Base+0x10cc>
   1a8cc:	ldr	r0, [fp, #12]
   1a8d0:	mov	r1, r9
   1a8d4:	bl	1cc54 <argp_failure@@Base+0x343c>
   1a8d8:	cmp	r0, #0
   1a8dc:	beq	1a978 <argp_failure@@Base+0x1160>
   1a8e0:	ldr	r0, [r5]
   1a8e4:	mov	r1, r4
   1a8e8:	mov	r2, r9
   1a8ec:	bl	11b68 <memcpy@plt>
   1a8f0:	ldr	r0, [r5]
   1a8f4:	add	r0, r0, r9
   1a8f8:	b	1a974 <argp_failure@@Base+0x115c>
   1a8fc:	mov	r8, r4
   1a900:	cmp	r8, #0
   1a904:	bne	1a858 <argp_failure@@Base+0x1040>
   1a908:	mov	sl, #0
   1a90c:	cmp	r9, #0
   1a910:	bne	1aa10 <argp_failure@@Base+0x11f8>
   1a914:	b	1aa28 <argp_failure@@Base+0x1210>
   1a918:	mov	r0, r8
   1a91c:	bl	11d30 <strlen@plt>
   1a920:	ldr	r1, [fp, #12]
   1a924:	cmp	r0, #0
   1a928:	add	r5, r1, #28
   1a92c:	beq	1a978 <argp_failure@@Base+0x1160>
   1a930:	mov	r7, r0
   1a934:	ldr	r0, [r1, #28]
   1a938:	ldr	r1, [r1, #32]
   1a93c:	add	r2, r0, r7
   1a940:	cmp	r2, r1
   1a944:	bls	1a960 <argp_failure@@Base+0x1148>
   1a948:	ldr	r0, [fp, #12]
   1a94c:	mov	r1, r7
   1a950:	bl	1cc54 <argp_failure@@Base+0x343c>
   1a954:	cmp	r0, #0
   1a958:	beq	1a978 <argp_failure@@Base+0x1160>
   1a95c:	ldr	r0, [r5]
   1a960:	mov	r1, r8
   1a964:	mov	r2, r7
   1a968:	bl	11b68 <memcpy@plt>
   1a96c:	ldr	r0, [r5]
   1a970:	add	r0, r0, r7
   1a974:	str	r0, [r5]
   1a978:	ldr	r7, [fp, #12]
   1a97c:	ldr	r2, [r5]
   1a980:	ldr	r1, [r7, #24]
   1a984:	ldr	r0, [r7, #16]
   1a988:	sub	r1, r2, r1
   1a98c:	cmp	r1, r0
   1a990:	bls	1a99c <argp_failure@@Base+0x1184>
   1a994:	mov	r0, r7
   1a998:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1a99c:	ldr	r1, [r7, #20]
   1a9a0:	ldr	r0, [r7, #4]
   1a9a4:	bic	r1, r1, r1, asr #31
   1a9a8:	cmp	r1, r0
   1a9ac:	bls	1a9f0 <argp_failure@@Base+0x11d8>
   1a9b0:	ldr	r0, [fp, #12]
   1a9b4:	mov	r1, r0
   1a9b8:	ldr	r0, [r0, #28]
   1a9bc:	ldr	r1, [r1, #32]
   1a9c0:	cmp	r0, r1
   1a9c4:	bcc	1a9e0 <argp_failure@@Base+0x11c8>
   1a9c8:	ldr	r0, [fp, #12]
   1a9cc:	mov	r1, #1
   1a9d0:	bl	1cc54 <argp_failure@@Base+0x343c>
   1a9d4:	cmp	r0, #0
   1a9d8:	beq	1a9f0 <argp_failure@@Base+0x11d8>
   1a9dc:	ldr	r0, [r5]
   1a9e0:	add	r1, r0, #1
   1a9e4:	str	r1, [r5]
   1a9e8:	mov	r1, #10
   1a9ec:	strb	r1, [r0]
   1a9f0:	mov	sl, #1
   1a9f4:	cmp	r8, r4
   1a9f8:	beq	1aa04 <argp_failure@@Base+0x11ec>
   1a9fc:	mov	r0, r8
   1aa00:	bl	17968 <argp_parse@@Base+0x12d0>
   1aa04:	ldr	r5, [sp, #8]
   1aa08:	cmp	r9, #0
   1aa0c:	beq	1aa28 <argp_failure@@Base+0x1210>
   1aa10:	cmp	r4, #0
   1aa14:	ldrne	r0, [r6, #20]
   1aa18:	cmpne	r0, #0
   1aa1c:	beq	1aa28 <argp_failure@@Base+0x1210>
   1aa20:	mov	r0, r4
   1aa24:	bl	17968 <argp_parse@@Base+0x12d0>
   1aa28:	ldr	r7, [sp, #16]
   1aa2c:	ldr	r9, [sp, #24]
   1aa30:	ldr	r8, [sp, #20]
   1aa34:	cmp	r7, #0
   1aa38:	beq	1ab94 <argp_failure@@Base+0x137c>
   1aa3c:	ldr	r3, [r6, #20]
   1aa40:	cmp	r3, #0
   1aa44:	beq	1ab94 <argp_failure@@Base+0x137c>
   1aa48:	ldr	r2, [sp, #12]
   1aa4c:	movw	r0, #1
   1aa50:	mov	r1, #0
   1aa54:	movt	r0, #512	; 0x200
   1aa58:	add	r0, r0, #3
   1aa5c:	blx	r3
   1aa60:	ldr	r6, [fp, #12]
   1aa64:	cmp	r0, #0
   1aa68:	beq	1ab98 <argp_failure@@Base+0x1380>
   1aa6c:	mov	r4, r0
   1aa70:	orrs	r0, sl, r8
   1aa74:	beq	1aab0 <argp_failure@@Base+0x1298>
   1aa78:	ldr	r0, [r6, #28]
   1aa7c:	ldr	r1, [r6, #32]
   1aa80:	cmp	r0, r1
   1aa84:	bcc	1aaa0 <argp_failure@@Base+0x1288>
   1aa88:	mov	r0, r6
   1aa8c:	mov	r1, #1
   1aa90:	bl	1cc54 <argp_failure@@Base+0x343c>
   1aa94:	cmp	r0, #0
   1aa98:	beq	1aab0 <argp_failure@@Base+0x1298>
   1aa9c:	ldr	r0, [r6, #28]
   1aaa0:	add	r1, r0, #1
   1aaa4:	str	r1, [r6, #28]
   1aaa8:	mov	r1, #10
   1aaac:	strb	r1, [r0]
   1aab0:	mov	r0, r4
   1aab4:	mov	sl, r5
   1aab8:	bl	11d30 <strlen@plt>
   1aabc:	cmp	r0, #0
   1aac0:	beq	1ab0c <argp_failure@@Base+0x12f4>
   1aac4:	mov	r5, r0
   1aac8:	ldr	r0, [r6, #28]
   1aacc:	ldr	r1, [r6, #32]
   1aad0:	add	r2, r0, r5
   1aad4:	cmp	r2, r1
   1aad8:	bls	1aaf4 <argp_failure@@Base+0x12dc>
   1aadc:	mov	r0, r6
   1aae0:	mov	r1, r5
   1aae4:	bl	1cc54 <argp_failure@@Base+0x343c>
   1aae8:	cmp	r0, #0
   1aaec:	beq	1ab0c <argp_failure@@Base+0x12f4>
   1aaf0:	ldr	r0, [r6, #28]
   1aaf4:	mov	r1, r4
   1aaf8:	mov	r2, r5
   1aafc:	bl	11b68 <memcpy@plt>
   1ab00:	ldr	r0, [r6, #28]
   1ab04:	add	r0, r0, r5
   1ab08:	str	r0, [r6, #28]
   1ab0c:	mov	r0, r4
   1ab10:	bl	17968 <argp_parse@@Base+0x12d0>
   1ab14:	ldr	r1, [r6, #24]
   1ab18:	ldr	r2, [r6, #28]
   1ab1c:	ldr	r0, [r6, #16]
   1ab20:	mov	r5, sl
   1ab24:	sub	r1, r2, r1
   1ab28:	cmp	r1, r0
   1ab2c:	bls	1ab38 <argp_failure@@Base+0x1320>
   1ab30:	mov	r0, r6
   1ab34:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1ab38:	ldr	r1, [r6, #20]
   1ab3c:	ldr	r0, [r6, #4]
   1ab40:	mov	sl, #1
   1ab44:	bic	r1, r1, r1, asr #31
   1ab48:	cmp	r1, r0
   1ab4c:	bls	1ab98 <argp_failure@@Base+0x1380>
   1ab50:	ldr	r0, [r6, #28]
   1ab54:	ldr	r1, [r6, #32]
   1ab58:	cmp	r0, r1
   1ab5c:	bcc	1ab7c <argp_failure@@Base+0x1364>
   1ab60:	mov	r0, r6
   1ab64:	mov	r1, #1
   1ab68:	mov	sl, #1
   1ab6c:	bl	1cc54 <argp_failure@@Base+0x343c>
   1ab70:	cmp	r0, #0
   1ab74:	beq	1ab98 <argp_failure@@Base+0x1380>
   1ab78:	ldr	r0, [r6, #28]
   1ab7c:	add	r1, r0, #1
   1ab80:	mov	sl, #1
   1ab84:	str	r1, [r6, #28]
   1ab88:	mov	r1, #10
   1ab8c:	strb	r1, [r0]
   1ab90:	b	1ab98 <argp_failure@@Base+0x1380>
   1ab94:	ldr	r6, [fp, #12]
   1ab98:	cmp	r5, #0
   1ab9c:	ldrne	r0, [r5]
   1aba0:	cmpne	r0, #0
   1aba4:	bne	1abb4 <argp_failure@@Base+0x139c>
   1aba8:	mov	r0, sl
   1abac:	sub	sp, fp, #28
   1abb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1abb4:	ldr	r4, [fp, #8]
   1abb8:	add	r5, r5, #16
   1abbc:	cmp	r4, #0
   1abc0:	cmpne	sl, #0
   1abc4:	bne	1aba8 <argp_failure@@Base+0x1390>
   1abc8:	orrs	r3, sl, r8
   1abcc:	mov	r1, r9
   1abd0:	mov	r2, r7
   1abd4:	stm	sp, {r4, r6}
   1abd8:	movwne	r3, #1
   1abdc:	bl	1a768 <argp_failure@@Base+0xf50>
   1abe0:	orr	sl, r0, sl
   1abe4:	ldr	r0, [r5], #16
   1abe8:	cmp	r0, #0
   1abec:	bne	1abbc <argp_failure@@Base+0x13a4>
   1abf0:	b	1aba8 <argp_failure@@Base+0x1390>
   1abf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1abf8:	add	fp, sp, #28
   1abfc:	sub	sp, sp, #28
   1ac00:	mov	r7, r0
   1ac04:	ldr	r0, [r0, #16]
   1ac08:	mov	r5, r1
   1ac0c:	cmp	r0, #0
   1ac10:	beq	1ac30 <argp_failure@@Base+0x1418>
   1ac14:	mov	r2, r0
   1ac18:	mov	r1, r2
   1ac1c:	ldr	r2, [r2, #12]
   1ac20:	cmp	r2, #0
   1ac24:	bne	1ac18 <argp_failure@@Base+0x1400>
   1ac28:	add	r2, r1, #8
   1ac2c:	b	1ac34 <argp_failure@@Base+0x141c>
   1ac30:	add	r2, r7, #12
   1ac34:	ldr	r1, [r5, #16]
   1ac38:	ldr	r3, [r2]
   1ac3c:	cmp	r1, #0
   1ac40:	beq	1ac60 <argp_failure@@Base+0x1448>
   1ac44:	mov	r2, r1
   1ac48:	mov	r6, r2
   1ac4c:	ldr	r2, [r2, #12]
   1ac50:	cmp	r2, #0
   1ac54:	bne	1ac48 <argp_failure@@Base+0x1430>
   1ac58:	add	r2, r6, #8
   1ac5c:	b	1ac64 <argp_failure@@Base+0x144c>
   1ac60:	add	r2, r5, #12
   1ac64:	ldr	r6, [r2]
   1ac68:	orr	r4, r6, r3
   1ac6c:	sub	r2, r3, r6
   1ac70:	cmn	r4, #1
   1ac74:	mov	r4, r2
   1ac78:	suble	r4, r6, r3
   1ac7c:	and	r3, r6, r3
   1ac80:	cmp	r3, #0
   1ac84:	movlt	r4, r2
   1ac88:	cmp	r4, #0
   1ac8c:	bne	1acac <argp_failure@@Base+0x1494>
   1ac90:	cmp	r0, #0
   1ac94:	mov	r4, r0
   1ac98:	movwne	r4, #1
   1ac9c:	cmp	r1, #0
   1aca0:	subne	r4, r4, #1
   1aca4:	cmp	r4, #0
   1aca8:	beq	1acb8 <argp_failure@@Base+0x14a0>
   1acac:	mov	r0, r4
   1acb0:	sub	sp, fp, #28
   1acb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1acb8:	cmp	r0, #0
   1acbc:	beq	1ad2c <argp_failure@@Base+0x1514>
   1acc0:	ldr	r3, [r1, #20]
   1acc4:	ldr	r2, [r0, #20]
   1acc8:	cmp	r2, r3
   1accc:	ble	1acf4 <argp_failure@@Base+0x14dc>
   1acd0:	ldr	r0, [r0, #12]
   1acd4:	ldr	r2, [r0, #20]
   1acd8:	cmp	r2, r3
   1acdc:	bgt	1acd0 <argp_failure@@Base+0x14b8>
   1ace0:	bl	1b108 <argp_failure@@Base+0x18f0>
   1ace4:	mov	r4, r0
   1ace8:	cmp	r0, #0
   1acec:	movweq	r4, #1
   1acf0:	b	1acac <argp_failure@@Base+0x1494>
   1acf4:	bge	1ad1c <argp_failure@@Base+0x1504>
   1acf8:	ldr	r1, [r1, #12]
   1acfc:	ldr	r3, [r1, #20]
   1ad00:	cmp	r2, r3
   1ad04:	blt	1acf8 <argp_failure@@Base+0x14e0>
   1ad08:	bl	1b108 <argp_failure@@Base+0x18f0>
   1ad0c:	mov	r4, r0
   1ad10:	cmp	r0, #0
   1ad14:	mvneq	r4, #0
   1ad18:	b	1acac <argp_failure@@Base+0x1494>
   1ad1c:	bl	1b108 <argp_failure@@Base+0x18f0>
   1ad20:	mov	r4, r0
   1ad24:	cmp	r0, #0
   1ad28:	bne	1acac <argp_failure@@Base+0x1494>
   1ad2c:	ldr	r0, [r7, #12]
   1ad30:	ldr	r1, [r5, #12]
   1ad34:	orr	r2, r1, r0
   1ad38:	sub	r3, r0, r1
   1ad3c:	cmn	r2, #1
   1ad40:	mov	r4, r3
   1ad44:	suble	r4, r1, r0
   1ad48:	and	r0, r1, r0
   1ad4c:	cmp	r0, #0
   1ad50:	movlt	r4, r3
   1ad54:	cmp	r4, #0
   1ad58:	bne	1acac <argp_failure@@Base+0x1494>
   1ad5c:	ldr	r3, [r7, #4]
   1ad60:	mov	sl, #0
   1ad64:	cmp	r3, #0
   1ad68:	beq	1ada0 <argp_failure@@Base+0x1588>
   1ad6c:	ldr	r0, [r7]
   1ad70:	mov	r1, r3
   1ad74:	add	r0, r0, #12
   1ad78:	ldr	sl, [r0, #-12]
   1ad7c:	cmp	sl, #0
   1ad80:	beq	1ad90 <argp_failure@@Base+0x1578>
   1ad84:	ldrb	r2, [r0]
   1ad88:	tst	r2, #2
   1ad8c:	beq	1ada0 <argp_failure@@Base+0x1588>
   1ad90:	add	r0, r0, #24
   1ad94:	subs	r1, r1, #1
   1ad98:	bne	1ad78 <argp_failure@@Base+0x1560>
   1ad9c:	mov	sl, #0
   1ada0:	ldr	r8, [r5, #4]
   1ada4:	cmp	r8, #0
   1ada8:	beq	1addc <argp_failure@@Base+0x15c4>
   1adac:	ldr	r0, [r5]
   1adb0:	mov	r1, r8
   1adb4:	add	r0, r0, #12
   1adb8:	ldr	r6, [r0, #-12]
   1adbc:	cmp	r6, #0
   1adc0:	beq	1add0 <argp_failure@@Base+0x15b8>
   1adc4:	ldrb	r2, [r0]
   1adc8:	tst	r2, #2
   1adcc:	beq	1ade0 <argp_failure@@Base+0x15c8>
   1add0:	add	r0, r0, #24
   1add4:	subs	r1, r1, #1
   1add8:	bne	1adb8 <argp_failure@@Base+0x15a0>
   1addc:	mov	r6, #0
   1ade0:	ldr	r4, [r7]
   1ade4:	mov	r9, #0
   1ade8:	cmp	sl, #0
   1adec:	str	r3, [sp, #20]
   1adf0:	str	r8, [sp, #16]
   1adf4:	ldr	r1, [r4, #12]
   1adf8:	str	r4, [sp, #4]
   1adfc:	beq	1ae64 <argp_failure@@Base+0x164c>
   1ae00:	ands	r0, r1, #8
   1ae04:	beq	1ae64 <argp_failure@@Base+0x164c>
   1ae08:	str	r1, [sp, #24]
   1ae0c:	bl	11d00 <__ctype_b_loc@plt>
   1ae10:	ldrb	r1, [sl]
   1ae14:	ldr	r0, [r0]
   1ae18:	b	1ae20 <argp_failure@@Base+0x1608>
   1ae1c:	ldrb	r1, [sl, #1]!
   1ae20:	add	r2, r0, r1, lsl #1
   1ae24:	ldrb	r2, [r2, #1]
   1ae28:	tst	r2, #32
   1ae2c:	bne	1ae1c <argp_failure@@Base+0x1604>
   1ae30:	subs	r4, r1, #45	; 0x2d
   1ae34:	movwne	r4, #1
   1ae38:	cmp	r1, #0
   1ae3c:	beq	1ae5c <argp_failure@@Base+0x1644>
   1ae40:	uxtb	r1, r1
   1ae44:	ldrb	r1, [r0, r1, lsl #1]
   1ae48:	tst	r1, #8
   1ae4c:	bne	1ae5c <argp_failure@@Base+0x1644>
   1ae50:	ldrb	r1, [sl, #1]!
   1ae54:	cmp	r1, #0
   1ae58:	bne	1ae40 <argp_failure@@Base+0x1628>
   1ae5c:	ldr	r1, [sp, #24]
   1ae60:	b	1ae68 <argp_failure@@Base+0x1650>
   1ae64:	mov	r4, #0
   1ae68:	ldr	r0, [r5]
   1ae6c:	cmp	r6, #0
   1ae70:	str	r0, [sp, #8]
   1ae74:	ldr	r0, [r0, #12]
   1ae78:	str	r0, [sp, #12]
   1ae7c:	andsne	r0, r0, #8
   1ae80:	beq	1aedc <argp_failure@@Base+0x16c4>
   1ae84:	mov	r8, r1
   1ae88:	bl	11d00 <__ctype_b_loc@plt>
   1ae8c:	ldrb	r1, [r6]
   1ae90:	ldr	r0, [r0]
   1ae94:	b	1ae9c <argp_failure@@Base+0x1684>
   1ae98:	ldrb	r1, [r6, #1]!
   1ae9c:	add	r2, r0, r1, lsl #1
   1aea0:	ldrb	r2, [r2, #1]
   1aea4:	tst	r2, #32
   1aea8:	bne	1ae98 <argp_failure@@Base+0x1680>
   1aeac:	subs	r9, r1, #45	; 0x2d
   1aeb0:	movwne	r9, #1
   1aeb4:	cmp	r1, #0
   1aeb8:	beq	1aed8 <argp_failure@@Base+0x16c0>
   1aebc:	uxtb	r1, r1
   1aec0:	ldrb	r1, [r0, r1, lsl #1]
   1aec4:	tst	r1, #8
   1aec8:	bne	1aed8 <argp_failure@@Base+0x16c0>
   1aecc:	ldrb	r1, [r6, #1]!
   1aed0:	cmp	r1, #0
   1aed4:	bne	1aebc <argp_failure@@Base+0x16a4>
   1aed8:	mov	r1, r8
   1aedc:	subs	r4, r4, r9
   1aee0:	bne	1acac <argp_failure@@Base+0x1494>
   1aee4:	ldr	r0, [sp, #20]
   1aee8:	mov	r2, #0
   1aeec:	cmp	r0, #0
   1aef0:	beq	1af88 <argp_failure@@Base+0x1770>
   1aef4:	rsb	r8, r0, #1
   1aef8:	ldr	r0, [sp, #4]
   1aefc:	ldr	r4, [r7, #8]
   1af00:	add	r9, r0, #36	; 0x24
   1af04:	tst	r1, #8
   1af08:	beq	1af30 <argp_failure@@Base+0x1718>
   1af0c:	mov	r2, #0
   1af10:	cmp	r8, #0
   1af14:	beq	1af88 <argp_failure@@Base+0x1770>
   1af18:	cmp	r2, #0
   1af1c:	bne	1af88 <argp_failure@@Base+0x1770>
   1af20:	ldr	r1, [r9], #24
   1af24:	add	r8, r8, #1
   1af28:	tst	r1, #8
   1af2c:	bne	1af0c <argp_failure@@Base+0x16f4>
   1af30:	ldr	r7, [r9, #-32]	; 0xffffffe0
   1af34:	sub	r0, r7, #1
   1af38:	cmp	r0, #254	; 0xfe
   1af3c:	bhi	1af0c <argp_failure@@Base+0x16f4>
   1af40:	str	r1, [sp, #24]
   1af44:	bl	11d00 <__ctype_b_loc@plt>
   1af48:	ldr	r0, [r0]
   1af4c:	add	r0, r0, r7, lsl #1
   1af50:	ldrb	r0, [r0, #1]
   1af54:	tst	r0, #64	; 0x40
   1af58:	beq	1af0c <argp_failure@@Base+0x16f4>
   1af5c:	ldrb	r0, [r4]
   1af60:	mov	r2, r7
   1af64:	cmp	r7, r0
   1af68:	bne	1af0c <argp_failure@@Base+0x16f4>
   1af6c:	ldr	r0, [sp, #24]
   1af70:	add	r4, r4, #1
   1af74:	tst	r0, #2
   1af78:	mov	r0, #0
   1af7c:	movne	r2, r0
   1af80:	cmp	r8, #0
   1af84:	bne	1af18 <argp_failure@@Base+0x1700>
   1af88:	ldr	r3, [sp, #16]
   1af8c:	mov	r9, #0
   1af90:	mov	r0, r2
   1af94:	str	r2, [sp, #24]
   1af98:	cmp	r3, #0
   1af9c:	beq	1b040 <argp_failure@@Base+0x1828>
   1afa0:	ldr	r0, [sp, #8]
   1afa4:	ldr	r5, [r5, #8]
   1afa8:	ldr	r4, [sp, #12]
   1afac:	rsb	r7, r3, #1
   1afb0:	add	r8, r0, #36	; 0x24
   1afb4:	tst	r4, #8
   1afb8:	beq	1afd8 <argp_failure@@Base+0x17c0>
   1afbc:	b	1b02c <argp_failure@@Base+0x1814>
   1afc0:	ldr	r2, [sp, #24]
   1afc4:	b	1b02c <argp_failure@@Base+0x1814>
   1afc8:	ldr	r4, [r8], #24
   1afcc:	add	r7, r7, #1
   1afd0:	tst	r4, #8
   1afd4:	bne	1b02c <argp_failure@@Base+0x1814>
   1afd8:	ldr	r9, [r8, #-32]	; 0xffffffe0
   1afdc:	sub	r0, r9, #1
   1afe0:	cmp	r0, #254	; 0xfe
   1afe4:	bhi	1b02c <argp_failure@@Base+0x1814>
   1afe8:	bl	11d00 <__ctype_b_loc@plt>
   1afec:	ldr	r0, [r0]
   1aff0:	add	r0, r0, r9, lsl #1
   1aff4:	ldrb	r0, [r0, #1]
   1aff8:	tst	r0, #64	; 0x40
   1affc:	beq	1afc0 <argp_failure@@Base+0x17a8>
   1b000:	ldrb	r0, [r5]
   1b004:	ldr	r2, [sp, #24]
   1b008:	cmp	r9, r0
   1b00c:	bne	1b02c <argp_failure@@Base+0x1814>
   1b010:	tst	r4, #2
   1b014:	mov	r0, #0
   1b018:	add	r5, r5, #1
   1b01c:	movne	r9, r0
   1b020:	cmp	r7, #0
   1b024:	bne	1b038 <argp_failure@@Base+0x1820>
   1b028:	b	1b040 <argp_failure@@Base+0x1828>
   1b02c:	mov	r9, #0
   1b030:	cmp	r7, #0
   1b034:	beq	1b040 <argp_failure@@Base+0x1828>
   1b038:	cmp	r9, #0
   1b03c:	beq	1afc8 <argp_failure@@Base+0x17b0>
   1b040:	tst	r2, #255	; 0xff
   1b044:	mov	r5, r2
   1b048:	bne	1b058 <argp_failure@@Base+0x1840>
   1b04c:	cmp	sl, #0
   1b050:	ldrbne	r5, [sl]
   1b054:	moveq	r5, #0
   1b058:	tst	r9, #255	; 0xff
   1b05c:	mov	r7, r9
   1b060:	bne	1b070 <argp_failure@@Base+0x1858>
   1b064:	cmp	r6, #0
   1b068:	ldrbne	r7, [r6]
   1b06c:	moveq	r7, #0
   1b070:	bl	11ce8 <__ctype_tolower_loc@plt>
   1b074:	ldr	r2, [r0]
   1b078:	uxtb	r0, r7
   1b07c:	uxtb	r1, r5
   1b080:	ldr	r3, [r2, r0, lsl #2]
   1b084:	ldr	r2, [r2, r1, lsl #2]
   1b088:	subs	r4, r2, r3
   1b08c:	subseq	r4, r0, r1
   1b090:	bne	1acac <argp_failure@@Base+0x1494>
   1b094:	ldr	r0, [sp, #24]
   1b098:	uxtb	r4, r0
   1b09c:	cmp	r4, #0
   1b0a0:	movwne	r4, #1
   1b0a4:	tst	r9, #255	; 0xff
   1b0a8:	subne	r4, r4, #1
   1b0ac:	cmp	r4, #0
   1b0b0:	bne	1acac <argp_failure@@Base+0x1494>
   1b0b4:	ldr	r0, [sp, #24]
   1b0b8:	tst	r0, #255	; 0xff
   1b0bc:	beq	1b0c8 <argp_failure@@Base+0x18b0>
   1b0c0:	mov	r4, #0
   1b0c4:	b	1acac <argp_failure@@Base+0x1494>
   1b0c8:	cmp	sl, #0
   1b0cc:	mov	r4, sl
   1b0d0:	movwne	r4, #1
   1b0d4:	cmp	r6, #0
   1b0d8:	subne	r4, r4, #1
   1b0dc:	cmp	r4, #0
   1b0e0:	bne	1acac <argp_failure@@Base+0x1494>
   1b0e4:	cmp	sl, #0
   1b0e8:	beq	1b0c0 <argp_failure@@Base+0x18a8>
   1b0ec:	mov	r0, sl
   1b0f0:	mov	r1, r6
   1b0f4:	bl	11c28 <strcasecmp@plt>
   1b0f8:	mov	r4, r0
   1b0fc:	cmp	r0, #0
   1b100:	moveq	r4, #0
   1b104:	b	1acac <argp_failure@@Base+0x1494>
   1b108:	push	{r4, r5, fp, lr}
   1b10c:	add	fp, sp, #8
   1b110:	mov	r4, r1
   1b114:	mov	r5, r0
   1b118:	ldr	r1, [r1, #12]
   1b11c:	ldr	r0, [r0, #12]
   1b120:	cmp	r0, r1
   1b124:	beq	1b134 <argp_failure@@Base+0x191c>
   1b128:	bl	1b108 <argp_failure@@Base+0x18f0>
   1b12c:	cmp	r0, #0
   1b130:	popne	{r4, r5, fp, pc}
   1b134:	ldr	r1, [r5, #8]
   1b138:	ldr	r2, [r4, #8]
   1b13c:	orr	r0, r2, r1
   1b140:	sub	r3, r1, r2
   1b144:	cmn	r0, #1
   1b148:	mov	r0, r3
   1b14c:	suble	r0, r2, r1
   1b150:	and	r1, r2, r1
   1b154:	cmp	r1, #0
   1b158:	movlt	r0, r3
   1b15c:	cmp	r0, #0
   1b160:	ldreq	r0, [r5, #4]
   1b164:	ldreq	r1, [r4, #4]
   1b168:	subeq	r0, r1, r0
   1b16c:	pop	{r4, r5, fp, pc}
   1b170:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1b174:	add	fp, sp, #24
   1b178:	mov	r8, r0
   1b17c:	ldr	r0, [r1, #12]
   1b180:	mov	r5, r1
   1b184:	cmp	r0, #0
   1b188:	beq	1b1d8 <argp_failure@@Base+0x19c0>
   1b18c:	ldr	r1, [r5, #8]
   1b190:	ldr	r0, [r5]
   1b194:	ldr	r4, [r1]
   1b198:	ldr	r7, [r0, #16]
   1b19c:	cmp	r4, #0
   1b1a0:	ldrne	r1, [r1, #4]
   1b1a4:	cmpne	r1, #0
   1b1a8:	bne	1b2a4 <argp_failure@@Base+0x1a8c>
   1b1ac:	cmp	r7, #0
   1b1b0:	beq	1b1c8 <argp_failure@@Base+0x19b0>
   1b1b4:	ldr	r0, [r7]
   1b1b8:	cmp	r0, #0
   1b1bc:	ldrbne	r1, [r0]
   1b1c0:	cmpne	r1, #0
   1b1c4:	bne	1b2fc <argp_failure@@Base+0x1ae4>
   1b1c8:	mov	r0, #0
   1b1cc:	str	r0, [r5, #12]
   1b1d0:	add	r5, r5, #4
   1b1d4:	b	1b21c <argp_failure@@Base+0x1a04>
   1b1d8:	ldr	r6, [r5, #4]!
   1b1dc:	ldr	r0, [r6, #28]
   1b1e0:	ldr	r1, [r6, #32]
   1b1e4:	add	r2, r0, #2
   1b1e8:	cmp	r2, r1
   1b1ec:	bls	1b208 <argp_failure@@Base+0x19f0>
   1b1f0:	mov	r0, r6
   1b1f4:	mov	r1, #2
   1b1f8:	bl	1cc54 <argp_failure@@Base+0x343c>
   1b1fc:	cmp	r0, #0
   1b200:	beq	1b21c <argp_failure@@Base+0x1a04>
   1b204:	ldr	r0, [r6, #28]
   1b208:	movw	r1, #8236	; 0x202c
   1b20c:	strh	r1, [r0]
   1b210:	ldr	r0, [r6, #28]
   1b214:	add	r0, r0, #2
   1b218:	str	r0, [r6, #28]
   1b21c:	ldr	r5, [r5]
   1b220:	ldr	r1, [r5, #24]
   1b224:	ldr	r2, [r5, #28]
   1b228:	ldr	r0, [r5, #16]
   1b22c:	sub	r1, r2, r1
   1b230:	cmp	r1, r0
   1b234:	bls	1b240 <argp_failure@@Base+0x1a28>
   1b238:	mov	r0, r5
   1b23c:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1b240:	ldr	r0, [r5, #20]
   1b244:	bic	r0, r0, r0, asr #31
   1b248:	sub	r1, r8, r0
   1b24c:	cmp	r1, #1
   1b250:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b254:	add	r1, r8, #1
   1b258:	mov	r6, #32
   1b25c:	sub	r4, r1, r0
   1b260:	ldr	r0, [r5, #28]
   1b264:	ldr	r1, [r5, #32]
   1b268:	cmp	r0, r1
   1b26c:	bcc	1b288 <argp_failure@@Base+0x1a70>
   1b270:	mov	r0, r5
   1b274:	mov	r1, #1
   1b278:	bl	1cc54 <argp_failure@@Base+0x343c>
   1b27c:	cmp	r0, #0
   1b280:	beq	1b294 <argp_failure@@Base+0x1a7c>
   1b284:	ldr	r0, [r5, #28]
   1b288:	add	r1, r0, #1
   1b28c:	str	r1, [r5, #28]
   1b290:	strb	r6, [r0]
   1b294:	sub	r4, r4, #1
   1b298:	cmp	r4, #1
   1b29c:	bgt	1b260 <argp_failure@@Base+0x1a48>
   1b2a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1b2a4:	ldr	r1, [r4, #12]
   1b2a8:	ldr	r0, [r0, #12]
   1b2ac:	cmp	r0, r1
   1b2b0:	beq	1b1ac <argp_failure@@Base+0x1994>
   1b2b4:	ldr	r6, [r5, #4]
   1b2b8:	ldr	r0, [r6, #28]
   1b2bc:	ldr	r1, [r6, #32]
   1b2c0:	cmp	r0, r1
   1b2c4:	bcc	1b2e0 <argp_failure@@Base+0x1ac8>
   1b2c8:	mov	r0, r6
   1b2cc:	mov	r1, #1
   1b2d0:	bl	1cc54 <argp_failure@@Base+0x343c>
   1b2d4:	cmp	r0, #0
   1b2d8:	beq	1b1ac <argp_failure@@Base+0x1994>
   1b2dc:	ldr	r0, [r6, #28]
   1b2e0:	add	r1, r0, #1
   1b2e4:	str	r1, [r6, #28]
   1b2e8:	mov	r1, #10
   1b2ec:	strb	r1, [r0]
   1b2f0:	cmp	r7, #0
   1b2f4:	bne	1b1b4 <argp_failure@@Base+0x199c>
   1b2f8:	b	1b1c8 <argp_failure@@Base+0x19b0>
   1b2fc:	cmp	r4, #0
   1b300:	beq	1b338 <argp_failure@@Base+0x1b20>
   1b304:	ldr	r1, [r4, #16]
   1b308:	cmp	r1, r7
   1b30c:	beq	1b1c8 <argp_failure@@Base+0x19b0>
   1b310:	cmp	r1, #0
   1b314:	beq	1b32c <argp_failure@@Base+0x1b14>
   1b318:	ldr	r1, [r1, #12]
   1b31c:	cmp	r1, r7
   1b320:	cmpne	r1, #0
   1b324:	bne	1b318 <argp_failure@@Base+0x1b00>
   1b328:	b	1b330 <argp_failure@@Base+0x1b18>
   1b32c:	mov	r1, #0
   1b330:	cmp	r1, r7
   1b334:	beq	1b1c8 <argp_failure@@Base+0x19b0>
   1b338:	ldr	r1, [r5, #4]
   1b33c:	mov	r2, r5
   1b340:	ldr	r4, [r1, #12]
   1b344:	ldr	r1, [r7, #16]
   1b348:	bl	1b378 <argp_failure@@Base+0x1b60>
   1b34c:	ldr	r6, [r5, #4]
   1b350:	ldr	r1, [r6, #24]
   1b354:	ldr	r2, [r6, #28]
   1b358:	ldr	r0, [r6, #16]
   1b35c:	sub	r1, r2, r1
   1b360:	cmp	r1, r0
   1b364:	bls	1b370 <argp_failure@@Base+0x1b58>
   1b368:	mov	r0, r6
   1b36c:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1b370:	str	r4, [r6, #12]
   1b374:	b	1b1c8 <argp_failure@@Base+0x19b0>
   1b378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b37c:	add	fp, sp, #28
   1b380:	sub	sp, sp, #4
   1b384:	mov	r9, r2
   1b388:	mov	r8, r0
   1b38c:	cmp	r1, #0
   1b390:	mov	r6, r0
   1b394:	beq	1b3d4 <argp_failure@@Base+0x1bbc>
   1b398:	ldr	r0, [r1, #20]
   1b39c:	mov	r4, r1
   1b3a0:	mov	r6, r8
   1b3a4:	cmp	r0, #0
   1b3a8:	beq	1b3d4 <argp_failure@@Base+0x1bbc>
   1b3ac:	ldr	r1, [r9, #16]
   1b3b0:	mov	r0, r4
   1b3b4:	bl	172d4 <argp_parse@@Base+0xc3c>
   1b3b8:	ldr	r3, [r4, #20]
   1b3bc:	mov	r2, r0
   1b3c0:	movw	r0, #3
   1b3c4:	mov	r1, r8
   1b3c8:	movt	r0, #512	; 0x200
   1b3cc:	blx	r3
   1b3d0:	mov	r6, r0
   1b3d4:	cmp	r6, #0
   1b3d8:	beq	1b608 <argp_failure@@Base+0x1df0>
   1b3dc:	ldrb	r0, [r6]
   1b3e0:	cmp	r0, #0
   1b3e4:	beq	1b5fc <argp_failure@@Base+0x1de4>
   1b3e8:	ldr	r0, [r9, #8]
   1b3ec:	ldr	r0, [r0]
   1b3f0:	cmp	r0, #0
   1b3f4:	beq	1b434 <argp_failure@@Base+0x1c1c>
   1b3f8:	ldr	r4, [r9, #4]
   1b3fc:	ldr	r0, [r4, #28]
   1b400:	ldr	r1, [r4, #32]
   1b404:	cmp	r0, r1
   1b408:	bcc	1b424 <argp_failure@@Base+0x1c0c>
   1b40c:	mov	r0, r4
   1b410:	mov	r1, #1
   1b414:	bl	1cc54 <argp_failure@@Base+0x343c>
   1b418:	cmp	r0, #0
   1b41c:	beq	1b434 <argp_failure@@Base+0x1c1c>
   1b420:	ldr	r0, [r4, #28]
   1b424:	add	r1, r0, #1
   1b428:	str	r1, [r4, #28]
   1b42c:	mov	r1, #10
   1b430:	strb	r1, [r0]
   1b434:	ldr	r7, [r9, #4]
   1b438:	movw	sl, #62320	; 0xf370
   1b43c:	movt	sl, #2
   1b440:	ldr	r4, [sl, #24]
   1b444:	ldr	r1, [r7, #24]
   1b448:	ldr	r2, [r7, #28]
   1b44c:	ldr	r0, [r7, #16]
   1b450:	sub	r1, r2, r1
   1b454:	cmp	r1, r0
   1b458:	bls	1b464 <argp_failure@@Base+0x1c4c>
   1b45c:	mov	r0, r7
   1b460:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1b464:	ldr	r0, [r7, #20]
   1b468:	bic	r0, r0, r0, asr #31
   1b46c:	sub	r1, r4, r0
   1b470:	cmp	r1, #1
   1b474:	blt	1b4c4 <argp_failure@@Base+0x1cac>
   1b478:	add	r1, r4, #1
   1b47c:	mov	r5, #32
   1b480:	sub	r4, r1, r0
   1b484:	ldr	r0, [r7, #28]
   1b488:	ldr	r1, [r7, #32]
   1b48c:	cmp	r0, r1
   1b490:	bcc	1b4ac <argp_failure@@Base+0x1c94>
   1b494:	mov	r0, r7
   1b498:	mov	r1, #1
   1b49c:	bl	1cc54 <argp_failure@@Base+0x343c>
   1b4a0:	cmp	r0, #0
   1b4a4:	beq	1b4b8 <argp_failure@@Base+0x1ca0>
   1b4a8:	ldr	r0, [r7, #28]
   1b4ac:	add	r1, r0, #1
   1b4b0:	str	r1, [r7, #28]
   1b4b4:	strb	r5, [r0]
   1b4b8:	sub	r4, r4, #1
   1b4bc:	cmp	r4, #1
   1b4c0:	bgt	1b484 <argp_failure@@Base+0x1c6c>
   1b4c4:	ldr	r4, [r9, #4]
   1b4c8:	ldr	r5, [sl, #24]
   1b4cc:	ldr	r1, [r4, #24]
   1b4d0:	ldr	r2, [r4, #28]
   1b4d4:	ldr	r0, [r4, #16]
   1b4d8:	mov	r7, r4
   1b4dc:	sub	r1, r2, r1
   1b4e0:	mov	r2, sl
   1b4e4:	mov	sl, r5
   1b4e8:	cmp	r1, r0
   1b4ec:	bls	1b514 <argp_failure@@Base+0x1cfc>
   1b4f0:	mov	r0, r4
   1b4f4:	mov	r7, r2
   1b4f8:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1b4fc:	ldr	sl, [r7, #24]
   1b500:	ldr	r7, [r9, #4]
   1b504:	ldr	r1, [r7, #24]
   1b508:	ldr	r2, [r7, #28]
   1b50c:	ldr	r0, [r7, #16]
   1b510:	sub	r1, r2, r1
   1b514:	str	r5, [r4, #4]
   1b518:	cmp	r1, r0
   1b51c:	mov	r5, r7
   1b520:	bls	1b530 <argp_failure@@Base+0x1d18>
   1b524:	mov	r0, r7
   1b528:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1b52c:	ldr	r5, [r9, #4]
   1b530:	mov	r0, r6
   1b534:	str	sl, [r7, #12]
   1b538:	bl	11d30 <strlen@plt>
   1b53c:	cmp	r0, #0
   1b540:	beq	1b58c <argp_failure@@Base+0x1d74>
   1b544:	mov	r4, r0
   1b548:	ldr	r0, [r5, #28]
   1b54c:	ldr	r1, [r5, #32]
   1b550:	add	r2, r0, r4
   1b554:	cmp	r2, r1
   1b558:	bls	1b574 <argp_failure@@Base+0x1d5c>
   1b55c:	mov	r0, r5
   1b560:	mov	r1, r4
   1b564:	bl	1cc54 <argp_failure@@Base+0x343c>
   1b568:	cmp	r0, #0
   1b56c:	beq	1b58c <argp_failure@@Base+0x1d74>
   1b570:	ldr	r0, [r5, #28]
   1b574:	mov	r1, r6
   1b578:	mov	r2, r4
   1b57c:	bl	11b68 <memcpy@plt>
   1b580:	ldr	r0, [r5, #28]
   1b584:	add	r0, r0, r4
   1b588:	str	r0, [r5, #28]
   1b58c:	ldr	r4, [r9, #4]
   1b590:	mov	r5, r4
   1b594:	ldr	r2, [r4, #24]
   1b598:	ldr	r0, [r4, #16]
   1b59c:	ldr	r1, [r5, #28]!
   1b5a0:	sub	r2, r1, r2
   1b5a4:	cmp	r2, r0
   1b5a8:	mov	r0, r4
   1b5ac:	bls	1b5c4 <argp_failure@@Base+0x1dac>
   1b5b0:	mov	r0, r4
   1b5b4:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1b5b8:	ldr	r0, [r9, #4]
   1b5bc:	mov	r5, r0
   1b5c0:	ldr	r1, [r5, #28]!
   1b5c4:	mov	r2, #0
   1b5c8:	str	r2, [r4, #4]
   1b5cc:	ldr	r2, [r0, #32]
   1b5d0:	cmp	r1, r2
   1b5d4:	bcc	1b5ec <argp_failure@@Base+0x1dd4>
   1b5d8:	mov	r1, #1
   1b5dc:	bl	1cc54 <argp_failure@@Base+0x343c>
   1b5e0:	cmp	r0, #0
   1b5e4:	beq	1b5fc <argp_failure@@Base+0x1de4>
   1b5e8:	ldr	r1, [r5]
   1b5ec:	add	r0, r1, #1
   1b5f0:	str	r0, [r5]
   1b5f4:	mov	r0, #10
   1b5f8:	strb	r0, [r1]
   1b5fc:	ldr	r0, [r9, #8]
   1b600:	mov	r1, #1
   1b604:	str	r1, [r0, #4]
   1b608:	cmp	r6, r8
   1b60c:	subeq	sp, fp, #28
   1b610:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b614:	mov	r0, r6
   1b618:	sub	sp, fp, #28
   1b61c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b620:	b	17968 <argp_parse@@Base+0x12d0>
   1b624:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b628:	add	fp, sp, #28
   1b62c:	sub	sp, sp, #68	; 0x44
   1b630:	mvn	r6, #0
   1b634:	cmp	r0, #1
   1b638:	blt	1bd60 <argp_failure@@Base+0x2548>
   1b63c:	mov	r7, r2
   1b640:	ldr	r2, [fp, #16]
   1b644:	mov	r5, r3
   1b648:	mov	r3, r0
   1b64c:	mov	sl, r1
   1b650:	mov	r0, #0
   1b654:	ldr	r9, [r2]
   1b658:	ldr	r6, [r2, #4]
   1b65c:	str	r0, [r2, #12]
   1b660:	cmp	r9, #0
   1b664:	beq	1b688 <argp_failure@@Base+0x1e70>
   1b668:	ldr	r0, [r2, #16]
   1b66c:	cmp	r0, #0
   1b670:	beq	1b690 <argp_failure@@Base+0x1e78>
   1b674:	ldrb	r0, [r7]
   1b678:	cmp	r0, #45	; 0x2d
   1b67c:	cmpne	r0, #43	; 0x2b
   1b680:	addeq	r7, r7, #1
   1b684:	b	1b704 <argp_failure@@Base+0x1eec>
   1b688:	mov	r9, #1
   1b68c:	str	r9, [r2]
   1b690:	mov	r0, #0
   1b694:	str	r9, [r2, #28]
   1b698:	str	r9, [r2, #32]
   1b69c:	str	r0, [r2, #20]
   1b6a0:	ldrb	r1, [r7]
   1b6a4:	cmp	r1, #43	; 0x2b
   1b6a8:	beq	1b6b8 <argp_failure@@Base+0x1ea0>
   1b6ac:	cmp	r1, #45	; 0x2d
   1b6b0:	bne	1b6c4 <argp_failure@@Base+0x1eac>
   1b6b4:	mov	r0, #2
   1b6b8:	str	r0, [r2, #24]
   1b6bc:	add	r7, r7, #1
   1b6c0:	b	1b6fc <argp_failure@@Base+0x1ee4>
   1b6c4:	ldr	r0, [fp, #20]
   1b6c8:	cmp	r0, #0
   1b6cc:	bne	1b6f4 <argp_failure@@Base+0x1edc>
   1b6d0:	movw	r0, #57969	; 0xe271
   1b6d4:	mov	r8, r2
   1b6d8:	mov	r4, r3
   1b6dc:	movt	r0, #1
   1b6e0:	bl	11ca0 <getenv@plt>
   1b6e4:	mov	r3, r4
   1b6e8:	mov	r2, r8
   1b6ec:	cmp	r0, #0
   1b6f0:	beq	1bd6c <argp_failure@@Base+0x2554>
   1b6f4:	mov	r0, #0
   1b6f8:	str	r0, [r2, #24]
   1b6fc:	mov	r0, #1
   1b700:	str	r0, [r2, #16]
   1b704:	ldrb	r0, [r7]
   1b708:	ldr	r4, [r2, #20]
   1b70c:	str	r5, [sp, #48]	; 0x30
   1b710:	subs	r0, r0, #58	; 0x3a
   1b714:	movne	r0, r6
   1b718:	cmp	r4, #0
   1b71c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b720:	ldrbne	r0, [r4]
   1b724:	cmpne	r0, #0
   1b728:	bne	1b788 <argp_failure@@Base+0x1f70>
   1b72c:	mov	r4, r2
   1b730:	mov	r6, r2
   1b734:	str	r7, [sp, #32]
   1b738:	ldr	r1, [r4, #32]!
   1b73c:	cmp	r1, r9
   1b740:	mov	r8, r1
   1b744:	strgt	r9, [r4]
   1b748:	movgt	r8, r9
   1b74c:	ldr	r5, [r6, #28]!
   1b750:	cmp	r5, r9
   1b754:	strgt	r9, [r6]
   1b758:	movgt	r5, r9
   1b75c:	ldr	r7, [r2, #24]
   1b760:	cmp	r7, #1
   1b764:	bne	1ba7c <argp_failure@@Base+0x2264>
   1b768:	cmp	r5, r8
   1b76c:	cmpne	r8, r9
   1b770:	bne	1b840 <argp_failure@@Base+0x2028>
   1b774:	cmp	r8, r9
   1b778:	mov	r1, r6
   1b77c:	mov	r0, r9
   1b780:	bne	1ba34 <argp_failure@@Base+0x221c>
   1b784:	b	1ba3c <argp_failure@@Base+0x2224>
   1b788:	str	r3, [fp, #-40]	; 0xffffffd8
   1b78c:	add	r8, r4, #1
   1b790:	mov	r0, r7
   1b794:	mov	r5, r2
   1b798:	str	r8, [r2, #20]
   1b79c:	ldrb	r6, [r4]
   1b7a0:	mov	r1, r6
   1b7a4:	bl	11d48 <strchr@plt>
   1b7a8:	ldrb	r1, [r4, #1]
   1b7ac:	mov	r3, r5
   1b7b0:	cmp	r1, #0
   1b7b4:	orr	r1, r6, #1
   1b7b8:	addeq	r9, r9, #1
   1b7bc:	streq	r9, [r5]
   1b7c0:	cmp	r1, #59	; 0x3b
   1b7c4:	cmpne	r0, #0
   1b7c8:	bne	1b7e4 <argp_failure@@Base+0x1fcc>
   1b7cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b7d0:	cmp	r0, #0
   1b7d4:	bne	1be2c <argp_failure@@Base+0x2614>
   1b7d8:	str	r6, [r3, #8]
   1b7dc:	mov	r6, #63	; 0x3f
   1b7e0:	b	1bd60 <argp_failure@@Base+0x2548>
   1b7e4:	ldrb	r2, [r0]
   1b7e8:	ldrb	r1, [r0, #1]
   1b7ec:	cmp	r2, #87	; 0x57
   1b7f0:	bne	1bb5c <argp_failure@@Base+0x2344>
   1b7f4:	ldr	r2, [sp, #48]	; 0x30
   1b7f8:	cmp	r2, #0
   1b7fc:	beq	1bb5c <argp_failure@@Base+0x2344>
   1b800:	cmp	r1, #59	; 0x3b
   1b804:	bne	1bb5c <argp_failure@@Base+0x2344>
   1b808:	ldrb	r0, [r8]
   1b80c:	cmp	r0, #0
   1b810:	bne	1be5c <argp_failure@@Base+0x2644>
   1b814:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b818:	cmp	r9, r0
   1b81c:	bne	1be58 <argp_failure@@Base+0x2640>
   1b820:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b824:	cmp	r0, #0
   1b828:	bne	1bee4 <argp_failure@@Base+0x26cc>
   1b82c:	str	r6, [r3, #8]
   1b830:	ldrb	r6, [r7]
   1b834:	cmp	r6, #58	; 0x3a
   1b838:	movwne	r6, #63	; 0x3f
   1b83c:	b	1bd60 <argp_failure@@Base+0x2548>
   1b840:	cmp	r9, r8
   1b844:	str	r7, [sp, #20]
   1b848:	str	r6, [sp, #24]
   1b84c:	str	r5, [sp, #36]	; 0x24
   1b850:	str	r4, [sp, #28]
   1b854:	str	r3, [fp, #-40]	; 0xffffffd8
   1b858:	ble	1ba0c <argp_failure@@Base+0x21f4>
   1b85c:	ldr	r0, [sp, #36]	; 0x24
   1b860:	cmp	r0, r8
   1b864:	bge	1ba0c <argp_failure@@Base+0x21f4>
   1b868:	add	r0, sl, r8, lsl #2
   1b86c:	mvn	r1, r1
   1b870:	ldr	r2, [sp, #36]	; 0x24
   1b874:	mov	r3, r9
   1b878:	str	r0, [fp, #-32]	; 0xffffffe0
   1b87c:	mvn	r0, r9
   1b880:	cmp	r0, r1
   1b884:	movgt	r1, r0
   1b888:	add	r0, r1, #1
   1b88c:	str	r1, [fp, #-36]	; 0xffffffdc
   1b890:	str	r0, [sp, #44]	; 0x2c
   1b894:	add	r0, sl, #4
   1b898:	str	r0, [sp, #40]	; 0x28
   1b89c:	sub	ip, r8, r2
   1b8a0:	sub	r7, r3, r8
   1b8a4:	cmp	r7, ip
   1b8a8:	ble	1b958 <argp_failure@@Base+0x2140>
   1b8ac:	sub	r4, r3, ip
   1b8b0:	cmp	ip, #1
   1b8b4:	blt	1b950 <argp_failure@@Base+0x2138>
   1b8b8:	mov	r7, #0
   1b8bc:	cmp	ip, #4
   1b8c0:	bcc	1b918 <argp_failure@@Base+0x2100>
   1b8c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b8c8:	ldr	r1, [sp, #40]	; 0x28
   1b8cc:	add	lr, sl, r2, lsl #2
   1b8d0:	add	r0, r0, r3
   1b8d4:	add	r0, r0, r2
   1b8d8:	add	r0, r1, r0, lsl #2
   1b8dc:	add	r1, sl, r3, lsl #2
   1b8e0:	cmp	lr, r1
   1b8e4:	ldrcc	r1, [fp, #-32]	; 0xffffffe0
   1b8e8:	cmpcc	r0, r1
   1b8ec:	bcc	1b918 <argp_failure@@Base+0x2100>
   1b8f0:	bic	r7, ip, #3
   1b8f4:	mov	r1, r7
   1b8f8:	vld1.32	{d16-d17}, [r0]
   1b8fc:	vld1.32	{d18-d19}, [lr]
   1b900:	subs	r1, r1, #4
   1b904:	vst1.32	{d16-d17}, [lr]!
   1b908:	vst1.32	{d18-d19}, [r0]!
   1b90c:	bne	1b8f8 <argp_failure@@Base+0x20e0>
   1b910:	cmp	ip, r7
   1b914:	beq	1b950 <argp_failure@@Base+0x2138>
   1b918:	add	r0, sl, r3, lsl #2
   1b91c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b920:	add	r1, r7, r2
   1b924:	add	r1, sl, r1, lsl #2
   1b928:	add	r3, r3, r7
   1b92c:	add	r3, r3, r2
   1b930:	add	r7, r0, r3, lsl #2
   1b934:	ldr	r5, [r1]
   1b938:	add	r3, r3, #1
   1b93c:	ldr	r6, [r7, #4]
   1b940:	cmn	r3, #1
   1b944:	str	r6, [r1], #4
   1b948:	str	r5, [r7, #4]
   1b94c:	bne	1b930 <argp_failure@@Base+0x2118>
   1b950:	mov	r3, r4
   1b954:	b	1ba00 <argp_failure@@Base+0x21e8>
   1b958:	cmp	r7, #1
   1b95c:	blt	1b9fc <argp_failure@@Base+0x21e4>
   1b960:	mov	r4, #0
   1b964:	cmp	r7, #3
   1b968:	bls	1b9c8 <argp_failure@@Base+0x21b0>
   1b96c:	add	r1, sl, r3, lsl #2
   1b970:	add	r0, sl, r2, lsl #2
   1b974:	cmp	r0, r1
   1b978:	bcs	1b99c <argp_failure@@Base+0x2184>
   1b97c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b980:	ldr	r6, [sp, #40]	; 0x28
   1b984:	add	r1, r1, r3
   1b988:	add	r1, r1, r2
   1b98c:	add	r1, r6, r1, lsl #2
   1b990:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b994:	cmp	r6, r1
   1b998:	bcc	1b9c8 <argp_failure@@Base+0x21b0>
   1b99c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b9a0:	bic	r4, r7, #3
   1b9a4:	mov	r1, r4
   1b9a8:	vld1.32	{d16-d17}, [r6]
   1b9ac:	vld1.32	{d18-d19}, [r0]
   1b9b0:	subs	r1, r1, #4
   1b9b4:	vst1.32	{d16-d17}, [r0]!
   1b9b8:	vst1.32	{d18-d19}, [r6]!
   1b9bc:	bne	1b9a8 <argp_failure@@Base+0x2190>
   1b9c0:	cmp	r7, r4
   1b9c4:	beq	1b9fc <argp_failure@@Base+0x21e4>
   1b9c8:	ldr	r1, [sp, #44]	; 0x2c
   1b9cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b9d0:	add	r6, r4, r2
   1b9d4:	add	r1, r1, r3
   1b9d8:	add	r0, r0, r4, lsl #2
   1b9dc:	sub	r1, r1, r4
   1b9e0:	add	r4, sl, r6, lsl #2
   1b9e4:	ldr	r6, [r4]
   1b9e8:	ldr	r5, [r0]
   1b9ec:	subs	r1, r1, #1
   1b9f0:	str	r5, [r4], #4
   1b9f4:	str	r6, [r0], #4
   1b9f8:	bne	1b9e4 <argp_failure@@Base+0x21cc>
   1b9fc:	add	r2, r7, r2
   1ba00:	cmp	r3, r8
   1ba04:	cmpgt	r8, r2
   1ba08:	bgt	1b89c <argp_failure@@Base+0x2084>
   1ba0c:	ldr	r0, [sp, #36]	; 0x24
   1ba10:	ldr	r4, [sp, #28]
   1ba14:	ldr	r6, [sp, #24]
   1ba18:	ldr	r2, [fp, #16]
   1ba1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ba20:	ldr	r7, [sp, #20]
   1ba24:	add	r0, r0, r9
   1ba28:	mov	r1, r4
   1ba2c:	sub	r0, r0, r8
   1ba30:	str	r0, [r6]
   1ba34:	mov	r5, r0
   1ba38:	str	r9, [r1]
   1ba3c:	mov	r8, r9
   1ba40:	cmp	r9, r3
   1ba44:	bge	1ba74 <argp_failure@@Base+0x225c>
   1ba48:	ldr	r0, [sl, r8, lsl #2]
   1ba4c:	ldrb	r1, [r0]
   1ba50:	cmp	r1, #45	; 0x2d
   1ba54:	bne	1ba64 <argp_failure@@Base+0x224c>
   1ba58:	ldrb	r0, [r0, #1]
   1ba5c:	cmp	r0, #0
   1ba60:	bne	1ba74 <argp_failure@@Base+0x225c>
   1ba64:	add	r8, r8, #1
   1ba68:	cmp	r8, r3
   1ba6c:	str	r8, [r2]
   1ba70:	blt	1ba48 <argp_failure@@Base+0x2230>
   1ba74:	mov	r9, r8
   1ba78:	str	r8, [r4]
   1ba7c:	cmp	r9, r3
   1ba80:	beq	1bd54 <argp_failure@@Base+0x253c>
   1ba84:	ldr	r0, [sl, r9, lsl #2]
   1ba88:	movw	r1, #56011	; 0xdacb
   1ba8c:	str	r3, [fp, #-40]	; 0xffffffd8
   1ba90:	movt	r1, #1
   1ba94:	bl	11ab4 <strcmp@plt>
   1ba98:	cmp	r0, #0
   1ba9c:	beq	1bb2c <argp_failure@@Base+0x2314>
   1baa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1baa4:	ldr	r2, [fp, #16]
   1baa8:	cmp	r9, r3
   1baac:	beq	1bd54 <argp_failure@@Base+0x253c>
   1bab0:	ldr	r0, [sl, r9, lsl #2]
   1bab4:	mvn	r6, #0
   1bab8:	ldrb	r1, [r0]
   1babc:	cmp	r1, #45	; 0x2d
   1bac0:	bne	1bb84 <argp_failure@@Base+0x236c>
   1bac4:	mov	r4, r0
   1bac8:	ldrb	r1, [r4, #1]!
   1bacc:	cmp	r1, #0
   1bad0:	beq	1bb84 <argp_failure@@Base+0x236c>
   1bad4:	ldr	r6, [sp, #48]	; 0x30
   1bad8:	cmp	r6, #0
   1badc:	beq	1bd8c <argp_failure@@Base+0x2574>
   1bae0:	ldr	r5, [fp, #12]
   1bae4:	ldr	r7, [sp, #32]
   1bae8:	cmp	r1, #45	; 0x2d
   1baec:	bne	1bd94 <argp_failure@@Base+0x257c>
   1baf0:	add	r0, r0, #2
   1baf4:	mov	r1, sl
   1baf8:	str	r0, [r2, #20]
   1bafc:	ldr	r0, [fp, #8]
   1bb00:	stm	sp, {r0, r5}
   1bb04:	str	r2, [sp, #8]
   1bb08:	mov	r2, r7
   1bb0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1bb10:	str	r0, [sp, #12]
   1bb14:	movw	r0, #56011	; 0xdacb
   1bb18:	movt	r0, #1
   1bb1c:	str	r0, [sp, #16]
   1bb20:	mov	r0, r3
   1bb24:	mov	r3, r6
   1bb28:	b	1be9c <argp_failure@@Base+0x2684>
   1bb2c:	ldr	r2, [fp, #16]
   1bb30:	add	r3, r9, #1
   1bb34:	cmp	r5, r8
   1bb38:	cmpne	r8, r3
   1bb3c:	str	r3, [r2]
   1bb40:	bne	1bb9c <argp_failure@@Base+0x2384>
   1bb44:	cmp	r5, r8
   1bb48:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1bb4c:	mov	r1, r6
   1bb50:	mov	r0, r3
   1bb54:	beq	1bd44 <argp_failure@@Base+0x252c>
   1bb58:	b	1bd4c <argp_failure@@Base+0x2534>
   1bb5c:	cmp	r1, #58	; 0x3a
   1bb60:	bne	1bd60 <argp_failure@@Base+0x2548>
   1bb64:	ldrb	r0, [r0, #2]
   1bb68:	ldrb	r1, [r8]
   1bb6c:	cmp	r0, #58	; 0x3a
   1bb70:	bne	1bd74 <argp_failure@@Base+0x255c>
   1bb74:	cmp	r1, #0
   1bb78:	bne	1bd7c <argp_failure@@Base+0x2564>
   1bb7c:	mov	r0, #0
   1bb80:	b	1beb4 <argp_failure@@Base+0x269c>
   1bb84:	cmp	r7, #0
   1bb88:	strne	r0, [r2, #12]
   1bb8c:	addne	r0, r9, #1
   1bb90:	movne	r6, #1
   1bb94:	strne	r0, [r2]
   1bb98:	b	1bd60 <argp_failure@@Base+0x2548>
   1bb9c:	cmp	r9, r8
   1bba0:	str	r3, [fp, #-36]	; 0xffffffdc
   1bba4:	str	r6, [sp, #24]
   1bba8:	str	r5, [sp, #36]	; 0x24
   1bbac:	str	r4, [sp, #28]
   1bbb0:	blt	1bd20 <argp_failure@@Base+0x2508>
   1bbb4:	ldr	r0, [sp, #36]	; 0x24
   1bbb8:	cmp	r0, r8
   1bbbc:	bge	1bd20 <argp_failure@@Base+0x2508>
   1bbc0:	sub	r0, sl, r8, lsl #2
   1bbc4:	ldr	r7, [sp, #36]	; 0x24
   1bbc8:	add	r9, sl, r8, lsl #2
   1bbcc:	str	r0, [fp, #-44]	; 0xffffffd4
   1bbd0:	rsb	r0, r8, #0
   1bbd4:	str	r0, [fp, #-32]	; 0xffffffe0
   1bbd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bbdc:	sub	r4, r8, r7
   1bbe0:	sub	r3, r0, r8
   1bbe4:	cmp	r3, r4
   1bbe8:	ble	1bc7c <argp_failure@@Base+0x2464>
   1bbec:	sub	r3, r0, r4
   1bbf0:	cmp	r4, #1
   1bbf4:	blt	1bc74 <argp_failure@@Base+0x245c>
   1bbf8:	mov	r1, #0
   1bbfc:	cmp	r4, #4
   1bc00:	bcc	1bc44 <argp_failure@@Base+0x242c>
   1bc04:	add	r2, sl, r0, lsl #2
   1bc08:	add	lr, sl, r7, lsl #2
   1bc0c:	add	ip, sl, r3, lsl #2
   1bc10:	cmp	lr, r2
   1bc14:	cmpcc	ip, r9
   1bc18:	bcc	1bc44 <argp_failure@@Base+0x242c>
   1bc1c:	bic	r1, r4, #3
   1bc20:	mov	r2, r1
   1bc24:	vld1.32	{d16-d17}, [ip]
   1bc28:	vld1.32	{d18-d19}, [lr]
   1bc2c:	subs	r2, r2, #4
   1bc30:	vst1.32	{d16-d17}, [lr]!
   1bc34:	vst1.32	{d18-d19}, [ip]!
   1bc38:	bne	1bc24 <argp_failure@@Base+0x240c>
   1bc3c:	cmp	r4, r1
   1bc40:	beq	1bc74 <argp_failure@@Base+0x245c>
   1bc44:	add	r0, r7, r0
   1bc48:	sub	r2, r8, r1
   1bc4c:	add	r1, r1, r7
   1bc50:	add	r1, sl, r1, lsl #2
   1bc54:	add	r0, sl, r0, lsl #2
   1bc58:	ldr	r6, [r0, -r2, lsl #2]
   1bc5c:	ldr	r5, [r1]
   1bc60:	str	r6, [r1], #4
   1bc64:	str	r5, [r0, -r2, lsl #2]
   1bc68:	sub	r2, r2, #1
   1bc6c:	cmp	r7, r2
   1bc70:	bne	1bc58 <argp_failure@@Base+0x2440>
   1bc74:	mov	r0, r3
   1bc78:	b	1bd14 <argp_failure@@Base+0x24fc>
   1bc7c:	cmp	r3, #1
   1bc80:	blt	1bd10 <argp_failure@@Base+0x24f8>
   1bc84:	mov	r4, #0
   1bc88:	cmp	r3, #3
   1bc8c:	bls	1bcdc <argp_failure@@Base+0x24c4>
   1bc90:	add	r2, sl, r0, lsl #2
   1bc94:	add	r1, sl, r7, lsl #2
   1bc98:	cmp	r1, r2
   1bc9c:	ldrcc	r6, [fp, #-44]	; 0xffffffd4
   1bca0:	addcc	r2, r7, r0
   1bca4:	addcc	r2, r6, r2, lsl #2
   1bca8:	cmpcc	r9, r2
   1bcac:	bcc	1bcdc <argp_failure@@Base+0x24c4>
   1bcb0:	bic	r4, r3, #3
   1bcb4:	mov	r6, r9
   1bcb8:	mov	r2, r4
   1bcbc:	vld1.32	{d16-d17}, [r6]
   1bcc0:	vld1.32	{d18-d19}, [r1]
   1bcc4:	subs	r2, r2, #4
   1bcc8:	vst1.32	{d16-d17}, [r1]!
   1bccc:	vst1.32	{d18-d19}, [r6]!
   1bcd0:	bne	1bcbc <argp_failure@@Base+0x24a4>
   1bcd4:	cmp	r3, r4
   1bcd8:	beq	1bd10 <argp_failure@@Base+0x24f8>
   1bcdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bce0:	add	r2, r4, r7
   1bce4:	add	r6, r8, r4
   1bce8:	add	r2, sl, r2, lsl #2
   1bcec:	add	r1, r1, r0
   1bcf0:	sub	r1, r1, r4
   1bcf4:	add	r4, sl, r6, lsl #2
   1bcf8:	ldr	r6, [r2]
   1bcfc:	ldr	r5, [r4]
   1bd00:	subs	r1, r1, #1
   1bd04:	str	r5, [r2], #4
   1bd08:	str	r6, [r4], #4
   1bd0c:	bne	1bcf8 <argp_failure@@Base+0x24e0>
   1bd10:	add	r7, r3, r7
   1bd14:	cmp	r0, r8
   1bd18:	cmpgt	r8, r7
   1bd1c:	bgt	1bbdc <argp_failure@@Base+0x23c4>
   1bd20:	ldr	r0, [sp, #36]	; 0x24
   1bd24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1bd28:	ldr	r1, [sp, #24]
   1bd2c:	ldr	r2, [fp, #16]
   1bd30:	add	r0, r0, r3
   1bd34:	sub	r0, r0, r8
   1bd38:	ldr	r8, [fp, #-40]	; 0xffffffd8
   1bd3c:	str	r0, [r1]
   1bd40:	ldr	r1, [sp, #28]
   1bd44:	mov	r5, r0
   1bd48:	str	r3, [r1]
   1bd4c:	str	r8, [r2]
   1bd50:	str	r8, [r2, #32]
   1bd54:	cmp	r5, r8
   1bd58:	mvn	r6, #0
   1bd5c:	strne	r5, [r2]
   1bd60:	mov	r0, r6
   1bd64:	sub	sp, fp, #28
   1bd68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd6c:	mov	r0, #1
   1bd70:	b	1b6f8 <argp_failure@@Base+0x1ee0>
   1bd74:	cmp	r1, #0
   1bd78:	beq	1be00 <argp_failure@@Base+0x25e8>
   1bd7c:	add	r0, r9, #1
   1bd80:	str	r8, [r3, #12]
   1bd84:	str	r0, [r3]
   1bd88:	b	1beb8 <argp_failure@@Base+0x26a0>
   1bd8c:	ldr	r7, [sp, #32]
   1bd90:	b	1bedc <argp_failure@@Base+0x26c4>
   1bd94:	cmp	r5, #0
   1bd98:	beq	1bedc <argp_failure@@Base+0x26c4>
   1bd9c:	ldrb	r0, [r0, #2]
   1bda0:	cmp	r0, #0
   1bda4:	beq	1bec4 <argp_failure@@Base+0x26ac>
   1bda8:	ldr	r1, [fp, #8]
   1bdac:	str	r4, [r2, #20]
   1bdb0:	movw	r0, #56012	; 0xdacc
   1bdb4:	movt	r0, #1
   1bdb8:	stm	sp, {r1, r5}
   1bdbc:	str	r2, [sp, #8]
   1bdc0:	str	r0, [sp, #16]
   1bdc4:	mov	r0, r3
   1bdc8:	mov	r2, r7
   1bdcc:	mov	r3, r6
   1bdd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bdd4:	str	r1, [sp, #12]
   1bdd8:	mov	r1, sl
   1bddc:	bl	1bf3c <argp_failure@@Base+0x2724>
   1bde0:	ldr	r2, [fp, #16]
   1bde4:	mov	r6, r0
   1bde8:	cmn	r0, #1
   1bdec:	bne	1bd60 <argp_failure@@Base+0x2548>
   1bdf0:	ldr	r9, [r2]
   1bdf4:	ldr	r0, [sl, r9, lsl #2]
   1bdf8:	add	r4, r0, #1
   1bdfc:	b	1bedc <argp_failure@@Base+0x26c4>
   1be00:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1be04:	cmp	r9, r0
   1be08:	bne	1bea8 <argp_failure@@Base+0x2690>
   1be0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1be10:	cmp	r0, #0
   1be14:	bne	1bf10 <argp_failure@@Base+0x26f8>
   1be18:	str	r6, [r3, #8]
   1be1c:	ldrb	r6, [r7]
   1be20:	cmp	r6, #58	; 0x3a
   1be24:	movwne	r6, #63	; 0x3f
   1be28:	b	1beb8 <argp_failure@@Base+0x26a0>
   1be2c:	movw	r0, #62384	; 0xf3b0
   1be30:	ldr	r2, [sl]
   1be34:	movw	r1, #57896	; 0xe228
   1be38:	mov	r4, r3
   1be3c:	mov	r3, r6
   1be40:	movt	r0, #2
   1be44:	movt	r1, #1
   1be48:	ldr	r0, [r0]
   1be4c:	bl	11d60 <fprintf@plt>
   1be50:	mov	r3, r4
   1be54:	b	1b7d8 <argp_failure@@Base+0x1fc0>
   1be58:	ldr	r8, [sl, r9, lsl #2]
   1be5c:	ldr	r2, [fp, #8]
   1be60:	mov	r0, #0
   1be64:	str	r8, [r3, #12]
   1be68:	movw	r1, #57965	; 0xe26d
   1be6c:	str	r0, [r3, #12]
   1be70:	str	r8, [r3, #20]
   1be74:	movt	r1, #1
   1be78:	str	r2, [sp]
   1be7c:	stmib	sp, {r0, r3}
   1be80:	str	r1, [sp, #16]
   1be84:	mov	r1, sl
   1be88:	mov	r2, r7
   1be8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1be90:	ldr	r3, [sp, #48]	; 0x30
   1be94:	str	r0, [sp, #12]
   1be98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1be9c:	bl	1bf3c <argp_failure@@Base+0x2724>
   1bea0:	sub	sp, fp, #28
   1bea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bea8:	add	r0, r9, #1
   1beac:	str	r0, [r3]
   1beb0:	ldr	r0, [sl, r9, lsl #2]
   1beb4:	str	r0, [r3, #12]
   1beb8:	mov	r0, #0
   1bebc:	str	r0, [r3, #20]
   1bec0:	b	1bd60 <argp_failure@@Base+0x2548>
   1bec4:	mov	r0, r7
   1bec8:	bl	11d48 <strchr@plt>
   1becc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bed0:	ldr	r2, [fp, #16]
   1bed4:	cmp	r0, #0
   1bed8:	beq	1bda8 <argp_failure@@Base+0x2590>
   1bedc:	str	r4, [r2, #20]
   1bee0:	b	1b78c <argp_failure@@Base+0x1f74>
   1bee4:	movw	r0, #62384	; 0xf3b0
   1bee8:	ldr	r2, [sl]
   1beec:	movw	r1, #57924	; 0xe244
   1bef0:	mov	r4, r3
   1bef4:	mov	r3, r6
   1bef8:	movt	r0, #2
   1befc:	movt	r1, #1
   1bf00:	ldr	r0, [r0]
   1bf04:	bl	11d60 <fprintf@plt>
   1bf08:	mov	r3, r4
   1bf0c:	b	1b82c <argp_failure@@Base+0x2014>
   1bf10:	movw	r0, #62384	; 0xf3b0
   1bf14:	ldr	r2, [sl]
   1bf18:	movw	r1, #57924	; 0xe244
   1bf1c:	mov	r4, r3
   1bf20:	mov	r3, r6
   1bf24:	movt	r0, #2
   1bf28:	movt	r1, #1
   1bf2c:	ldr	r0, [r0]
   1bf30:	bl	11d60 <fprintf@plt>
   1bf34:	mov	r3, r4
   1bf38:	b	1be18 <argp_failure@@Base+0x2600>
   1bf3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bf40:	add	fp, sp, #28
   1bf44:	sub	sp, sp, #44	; 0x2c
   1bf48:	str	r0, [sp, #12]
   1bf4c:	ldr	r0, [fp, #16]
   1bf50:	ldr	r5, [fp, #8]
   1bf54:	str	r2, [sp, #16]
   1bf58:	str	r1, [sp, #20]
   1bf5c:	ldr	r9, [r0, #20]
   1bf60:	mov	r6, r9
   1bf64:	b	1bf6c <argp_failure@@Base+0x2754>
   1bf68:	add	r6, r6, #1
   1bf6c:	ldrb	r0, [r6]
   1bf70:	cmp	r0, #0
   1bf74:	cmpne	r0, #61	; 0x3d
   1bf78:	bne	1bf68 <argp_failure@@Base+0x2750>
   1bf7c:	ldr	sl, [r3]
   1bf80:	mvn	ip, #0
   1bf84:	str	r3, [fp, #-32]	; 0xffffffe0
   1bf88:	cmp	sl, #0
   1bf8c:	beq	1c190 <argp_failure@@Base+0x2978>
   1bf90:	sub	r4, r6, r9
   1bf94:	mov	r8, #0
   1bf98:	mov	r5, sl
   1bf9c:	mov	r7, r3
   1bfa0:	mov	r0, r5
   1bfa4:	mov	r1, r9
   1bfa8:	mov	r2, r4
   1bfac:	bl	11f28 <strncmp@plt>
   1bfb0:	cmp	r0, #0
   1bfb4:	bne	1bfc8 <argp_failure@@Base+0x27b0>
   1bfb8:	mov	r0, r5
   1bfbc:	bl	11d30 <strlen@plt>
   1bfc0:	cmp	r4, r0
   1bfc4:	beq	1c1bc <argp_failure@@Base+0x29a4>
   1bfc8:	ldr	r5, [r7, #16]!
   1bfcc:	add	r8, r8, #1
   1bfd0:	cmp	r5, #0
   1bfd4:	bne	1bfa0 <argp_failure@@Base+0x2788>
   1bfd8:	cmp	sl, #0
   1bfdc:	beq	1c1c8 <argp_failure@@Base+0x29b0>
   1bfe0:	mvn	r0, #0
   1bfe4:	str	r4, [sp, #36]	; 0x24
   1bfe8:	mov	r4, #0
   1bfec:	mov	r5, #0
   1bff0:	mov	r7, #0
   1bff4:	str	r0, [sp, #24]
   1bff8:	mov	r0, #0
   1bffc:	str	r0, [sp, #32]
   1c000:	mov	r0, #0
   1c004:	str	r0, [sp, #8]
   1c008:	mov	r0, #0
   1c00c:	str	r0, [sp, #28]
   1c010:	b	1c028 <argp_failure@@Base+0x2810>
   1c014:	ldr	r0, [fp, #16]
   1c018:	add	r1, r1, #16
   1c01c:	add	r5, r5, #1
   1c020:	mov	r4, r1
   1c024:	ldr	r9, [r0, #20]
   1c028:	ldr	r2, [sp, #36]	; 0x24
   1c02c:	mov	r0, sl
   1c030:	mov	r1, r9
   1c034:	bl	11f28 <strncmp@plt>
   1c038:	cmp	r0, #0
   1c03c:	beq	1c05c <argp_failure@@Base+0x2844>
   1c040:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c044:	mov	r1, r4
   1c048:	add	r0, r3, r5, lsl #4
   1c04c:	ldr	sl, [r0, #16]
   1c050:	cmp	sl, #0
   1c054:	bne	1c014 <argp_failure@@Base+0x27fc>
   1c058:	b	1c1a8 <argp_failure@@Base+0x2990>
   1c05c:	cmp	r7, #0
   1c060:	beq	1c114 <argp_failure@@Base+0x28fc>
   1c064:	ldr	r0, [fp, #12]
   1c068:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c06c:	cmp	r0, #0
   1c070:	bne	1c098 <argp_failure@@Base+0x2880>
   1c074:	add	r0, r3, r5, lsl #4
   1c078:	ldr	r2, [r7, #4]
   1c07c:	ldr	r1, [r0, #4]
   1c080:	cmp	r2, r1
   1c084:	bne	1c098 <argp_failure@@Base+0x2880>
   1c088:	ldr	r1, [r0, #8]
   1c08c:	ldr	r2, [r7, #8]
   1c090:	cmp	r2, r1
   1c094:	beq	1c14c <argp_failure@@Base+0x2934>
   1c098:	ldr	r0, [sp, #32]
   1c09c:	mov	r1, r4
   1c0a0:	cmp	r0, #0
   1c0a4:	bne	1c048 <argp_failure@@Base+0x2830>
   1c0a8:	ldr	r0, [fp, #20]
   1c0ac:	cmp	r0, #0
   1c0b0:	beq	1c128 <argp_failure@@Base+0x2910>
   1c0b4:	ldr	r9, [sp, #28]
   1c0b8:	mov	r0, #0
   1c0bc:	str	r0, [sp, #32]
   1c0c0:	cmp	r9, #0
   1c0c4:	bne	1c13c <argp_failure@@Base+0x2924>
   1c0c8:	mov	r0, r8
   1c0cc:	bl	1809c <argp_parse@@Base+0x1a04>
   1c0d0:	cmp	r0, #0
   1c0d4:	beq	1c17c <argp_failure@@Base+0x2964>
   1c0d8:	mov	r9, r0
   1c0dc:	mov	r0, #0
   1c0e0:	mov	r1, #0
   1c0e4:	mov	r2, r8
   1c0e8:	str	r0, [sp, #32]
   1c0ec:	mov	r0, r9
   1c0f0:	bl	11da8 <memset@plt>
   1c0f4:	ldr	r0, [sp, #24]
   1c0f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c0fc:	mov	r1, #1
   1c100:	mov	r2, #1
   1c104:	str	r1, [sp, #8]
   1c108:	mov	r1, r4
   1c10c:	strb	r2, [r9, r0]
   1c110:	b	1c13c <argp_failure@@Base+0x2924>
   1c114:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c118:	mov	r1, r4
   1c11c:	str	r5, [sp, #24]
   1c120:	add	r7, r3, r4
   1c124:	b	1c048 <argp_failure@@Base+0x2830>
   1c128:	ldr	r9, [sp, #28]
   1c12c:	mov	r0, #1
   1c130:	str	r0, [sp, #32]
   1c134:	cmp	r9, #0
   1c138:	beq	1c170 <argp_failure@@Base+0x2958>
   1c13c:	mov	r0, #1
   1c140:	str	r9, [sp, #28]
   1c144:	strb	r0, [r9, r5]
   1c148:	b	1c048 <argp_failure@@Base+0x2830>
   1c14c:	ldr	r1, [sp, #32]
   1c150:	cmp	r1, #0
   1c154:	bne	1c044 <argp_failure@@Base+0x282c>
   1c158:	ldr	r0, [r0, #12]
   1c15c:	ldr	r1, [r7, #12]
   1c160:	cmp	r1, r0
   1c164:	mov	r1, r4
   1c168:	bne	1c0a8 <argp_failure@@Base+0x2890>
   1c16c:	b	1c048 <argp_failure@@Base+0x2830>
   1c170:	mov	r0, #0
   1c174:	str	r0, [sp, #28]
   1c178:	b	1c048 <argp_failure@@Base+0x2830>
   1c17c:	mov	r0, #1
   1c180:	str	r0, [sp, #32]
   1c184:	mov	r0, #0
   1c188:	str	r0, [sp, #28]
   1c18c:	b	1c040 <argp_failure@@Base+0x2828>
   1c190:	mov	r0, #0
   1c194:	mov	r8, #0
   1c198:	mov	r7, #0
   1c19c:	mov	sl, #0
   1c1a0:	mov	r4, #0
   1c1a4:	b	1c1e0 <argp_failure@@Base+0x29c8>
   1c1a8:	ldr	r5, [fp, #8]
   1c1ac:	ldr	ip, [sp, #24]
   1c1b0:	ldr	sl, [sp, #28]
   1c1b4:	ldr	r4, [sp, #8]
   1c1b8:	b	1c1e4 <argp_failure@@Base+0x29cc>
   1c1bc:	ldr	r5, [fp, #8]
   1c1c0:	mov	ip, r8
   1c1c4:	b	1c24c <argp_failure@@Base+0x2a34>
   1c1c8:	ldr	r5, [fp, #8]
   1c1cc:	mov	r0, #0
   1c1d0:	mov	r7, #0
   1c1d4:	mov	sl, #0
   1c1d8:	mov	r4, #0
   1c1dc:	mvn	ip, #0
   1c1e0:	str	r0, [sp, #32]
   1c1e4:	cmp	sl, #0
   1c1e8:	ldreq	r0, [sp, #32]
   1c1ec:	cmpeq	r0, #0
   1c1f0:	beq	1c244 <argp_failure@@Base+0x2a2c>
   1c1f4:	ldr	r0, [fp, #20]
   1c1f8:	cmp	r0, #0
   1c1fc:	bne	1c3b4 <argp_failure@@Base+0x2b9c>
   1c200:	cmp	r4, #0
   1c204:	beq	1c210 <argp_failure@@Base+0x29f8>
   1c208:	mov	r0, sl
   1c20c:	bl	17968 <argp_parse@@Base+0x12d0>
   1c210:	ldr	r0, [fp, #16]
   1c214:	ldr	r4, [r0, #20]
   1c218:	mov	r5, r0
   1c21c:	mov	r0, r4
   1c220:	bl	11d30 <strlen@plt>
   1c224:	mov	r1, #0
   1c228:	add	r0, r4, r0
   1c22c:	str	r1, [r5, #8]
   1c230:	str	r0, [r5, #20]
   1c234:	ldr	r0, [r5]
   1c238:	add	r0, r0, #1
   1c23c:	str	r0, [r5]
   1c240:	b	1c378 <argp_failure@@Base+0x2b60>
   1c244:	cmp	r7, #0
   1c248:	beq	1c2e8 <argp_failure@@Base+0x2ad0>
   1c24c:	ldr	r1, [fp, #16]
   1c250:	mov	r0, #0
   1c254:	str	r0, [r1, #20]
   1c258:	mov	r2, r1
   1c25c:	ldr	r1, [r1]
   1c260:	add	r0, r1, #1
   1c264:	str	r0, [r2]
   1c268:	ldrb	r3, [r6]
   1c26c:	ldr	r2, [r7, #4]
   1c270:	cmp	r3, #0
   1c274:	beq	1c290 <argp_failure@@Base+0x2a78>
   1c278:	cmp	r2, #0
   1c27c:	beq	1c360 <argp_failure@@Base+0x2b48>
   1c280:	ldr	r1, [fp, #16]
   1c284:	add	r0, r6, #1
   1c288:	str	r0, [r1, #12]
   1c28c:	b	1c2bc <argp_failure@@Base+0x2aa4>
   1c290:	cmp	r2, #1
   1c294:	bne	1c2bc <argp_failure@@Base+0x2aa4>
   1c298:	ldr	r2, [sp, #12]
   1c29c:	cmp	r0, r2
   1c2a0:	bge	1c384 <argp_failure@@Base+0x2b6c>
   1c2a4:	ldr	r2, [fp, #16]
   1c2a8:	add	r1, r1, #2
   1c2ac:	str	r1, [r2]
   1c2b0:	ldr	r1, [sp, #20]
   1c2b4:	ldr	r0, [r1, r0, lsl #2]
   1c2b8:	str	r0, [r2, #12]
   1c2bc:	cmp	r5, #0
   1c2c0:	strne	ip, [r5]
   1c2c4:	ldr	r1, [r7, #8]
   1c2c8:	ldr	r0, [r7, #12]
   1c2cc:	cmp	r1, #0
   1c2d0:	strne	r0, [r1]
   1c2d4:	movne	r0, #0
   1c2d8:	subne	sp, fp, #28
   1c2dc:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2e0:	sub	sp, fp, #28
   1c2e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2e8:	ldr	r0, [fp, #12]
   1c2ec:	cmp	r0, #0
   1c2f0:	beq	1c334 <argp_failure@@Base+0x2b1c>
   1c2f4:	ldr	r0, [fp, #16]
   1c2f8:	ldr	r1, [sp, #20]
   1c2fc:	ldr	r0, [r0]
   1c300:	ldr	r0, [r1, r0, lsl #2]
   1c304:	ldrb	r0, [r0, #1]
   1c308:	cmp	r0, #45	; 0x2d
   1c30c:	beq	1c334 <argp_failure@@Base+0x2b1c>
   1c310:	ldr	r0, [fp, #16]
   1c314:	ldr	r0, [r0, #20]
   1c318:	ldrb	r1, [r0]
   1c31c:	ldr	r0, [sp, #16]
   1c320:	bl	11d48 <strchr@plt>
   1c324:	mov	r1, r0
   1c328:	mvn	r0, #0
   1c32c:	cmp	r1, #0
   1c330:	bne	1c3ac <argp_failure@@Base+0x2b94>
   1c334:	ldr	r0, [fp, #20]
   1c338:	cmp	r0, #0
   1c33c:	bne	1c4a0 <argp_failure@@Base+0x2c88>
   1c340:	ldr	r1, [fp, #16]
   1c344:	mov	r0, #0
   1c348:	str	r0, [r1, #20]
   1c34c:	str	r0, [r1, #8]
   1c350:	ldr	r0, [r1]
   1c354:	add	r0, r0, #1
   1c358:	str	r0, [r1]
   1c35c:	b	1c378 <argp_failure@@Base+0x2b60>
   1c360:	ldr	r0, [fp, #20]
   1c364:	cmp	r0, #0
   1c368:	bne	1c4d4 <argp_failure@@Base+0x2cbc>
   1c36c:	ldr	r0, [r7, #12]
   1c370:	ldr	r1, [fp, #16]
   1c374:	str	r0, [r1, #8]
   1c378:	mov	r0, #63	; 0x3f
   1c37c:	sub	sp, fp, #28
   1c380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c384:	ldr	r0, [fp, #20]
   1c388:	cmp	r0, #0
   1c38c:	bne	1c504 <argp_failure@@Base+0x2cec>
   1c390:	ldr	r0, [r7, #12]
   1c394:	ldr	r1, [fp, #16]
   1c398:	str	r0, [r1, #8]
   1c39c:	ldr	r0, [sp, #16]
   1c3a0:	ldrb	r0, [r0]
   1c3a4:	cmp	r0, #58	; 0x3a
   1c3a8:	movwne	r0, #63	; 0x3f
   1c3ac:	sub	sp, fp, #28
   1c3b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c3b4:	movw	r5, #62384	; 0xf3b0
   1c3b8:	ldr	r1, [sp, #32]
   1c3bc:	movt	r5, #2
   1c3c0:	ldr	r0, [r5]
   1c3c4:	cmp	r1, #0
   1c3c8:	beq	1c3fc <argp_failure@@Base+0x2be4>
   1c3cc:	ldr	r1, [sp, #20]
   1c3d0:	ldr	r3, [fp, #24]
   1c3d4:	ldr	r2, [r1]
   1c3d8:	ldr	r1, [fp, #16]
   1c3dc:	ldr	r1, [r1, #20]
   1c3e0:	str	r1, [sp]
   1c3e4:	movw	r1, #57985	; 0xe281
   1c3e8:	movt	r1, #1
   1c3ec:	bl	11d60 <fprintf@plt>
   1c3f0:	cmp	r4, #0
   1c3f4:	bne	1c208 <argp_failure@@Base+0x29f0>
   1c3f8:	b	1c210 <argp_failure@@Base+0x29f8>
   1c3fc:	bl	11eb0 <flockfile@plt>
   1c400:	ldr	r1, [fp, #16]
   1c404:	ldr	r0, [sp, #20]
   1c408:	ldr	r9, [fp, #24]
   1c40c:	ldr	r1, [r1, #20]
   1c410:	ldr	r2, [r0]
   1c414:	ldr	r0, [r5]
   1c418:	mov	r3, r9
   1c41c:	str	r1, [sp]
   1c420:	movw	r1, #58017	; 0xe2a1
   1c424:	movt	r1, #1
   1c428:	bl	11d60 <fprintf@plt>
   1c42c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c430:	cmp	r8, #0
   1c434:	beq	1c480 <argp_failure@@Base+0x2c68>
   1c438:	mov	r6, sl
   1c43c:	b	1c464 <argp_failure@@Base+0x2c4c>
   1c440:	ldr	r3, [r1]
   1c444:	ldr	r0, [r5]
   1c448:	mov	r7, r1
   1c44c:	movw	r1, #58064	; 0xe2d0
   1c450:	mov	r2, r9
   1c454:	movt	r1, #1
   1c458:	bl	11d60 <fprintf@plt>
   1c45c:	mov	r1, r7
   1c460:	b	1c470 <argp_failure@@Base+0x2c58>
   1c464:	ldrb	r0, [r6]
   1c468:	cmp	r0, #0
   1c46c:	bne	1c440 <argp_failure@@Base+0x2c28>
   1c470:	add	r1, r1, #16
   1c474:	add	r6, r6, #1
   1c478:	subs	r8, r8, #1
   1c47c:	bne	1c464 <argp_failure@@Base+0x2c4c>
   1c480:	ldr	r1, [r5]
   1c484:	mov	r0, #10
   1c488:	bl	11e5c <fputc@plt>
   1c48c:	ldr	r0, [r5]
   1c490:	bl	11c34 <funlockfile@plt>
   1c494:	cmp	r4, #0
   1c498:	bne	1c208 <argp_failure@@Base+0x29f0>
   1c49c:	b	1c210 <argp_failure@@Base+0x29f8>
   1c4a0:	ldr	r1, [fp, #16]
   1c4a4:	ldr	r0, [sp, #20]
   1c4a8:	ldr	r3, [fp, #24]
   1c4ac:	ldr	r2, [r0]
   1c4b0:	movw	r0, #62384	; 0xf3b0
   1c4b4:	ldr	r1, [r1, #20]
   1c4b8:	movt	r0, #2
   1c4bc:	ldr	r0, [r0]
   1c4c0:	str	r1, [sp]
   1c4c4:	movw	r1, #58072	; 0xe2d8
   1c4c8:	movt	r1, #1
   1c4cc:	bl	11d60 <fprintf@plt>
   1c4d0:	b	1c340 <argp_failure@@Base+0x2b28>
   1c4d4:	ldr	r0, [sp, #20]
   1c4d8:	ldr	r1, [r7]
   1c4dc:	ldr	r3, [fp, #24]
   1c4e0:	ldr	r2, [r0]
   1c4e4:	movw	r0, #62384	; 0xf3b0
   1c4e8:	str	r1, [sp]
   1c4ec:	movw	r1, #58104	; 0xe2f8
   1c4f0:	movt	r0, #2
   1c4f4:	movt	r1, #1
   1c4f8:	ldr	r0, [r0]
   1c4fc:	bl	11d60 <fprintf@plt>
   1c500:	b	1c36c <argp_failure@@Base+0x2b54>
   1c504:	ldr	r0, [sp, #20]
   1c508:	ldr	r1, [r7]
   1c50c:	ldr	r3, [fp, #24]
   1c510:	ldr	r2, [r0]
   1c514:	movw	r0, #62384	; 0xf3b0
   1c518:	str	r1, [sp]
   1c51c:	movw	r1, #58149	; 0xe325
   1c520:	movt	r0, #2
   1c524:	movt	r1, #1
   1c528:	ldr	r0, [r0]
   1c52c:	bl	11d60 <fprintf@plt>
   1c530:	b	1c390 <argp_failure@@Base+0x2b78>
   1c534:	push	{r4, r5, r6, r7, fp, lr}
   1c538:	add	fp, sp, #16
   1c53c:	sub	sp, sp, #16
   1c540:	movw	r7, #62360	; 0xf398
   1c544:	movw	r5, #62364	; 0xf39c
   1c548:	movw	r6, #62668	; 0xf4cc
   1c54c:	movt	r5, #2
   1c550:	movt	r7, #2
   1c554:	movt	r6, #2
   1c558:	ldr	r4, [r7]
   1c55c:	ldr	r5, [r5]
   1c560:	stm	r6, {r4, r5}
   1c564:	ldr	r5, [fp, #16]
   1c568:	str	r6, [sp, #8]
   1c56c:	str	r5, [sp, #12]
   1c570:	ldr	r5, [fp, #12]
   1c574:	str	r5, [sp, #4]
   1c578:	ldr	r5, [fp, #8]
   1c57c:	str	r5, [sp]
   1c580:	bl	1b624 <argp_failure@@Base+0x1e0c>
   1c584:	ldr	r1, [r6]
   1c588:	ldr	r3, [r6, #12]
   1c58c:	ldr	r2, [r6, #8]
   1c590:	str	r1, [r7]
   1c594:	movw	r1, #63016	; 0xf628
   1c598:	movt	r1, #2
   1c59c:	str	r3, [r1]
   1c5a0:	movw	r1, #62368	; 0xf3a0
   1c5a4:	movt	r1, #2
   1c5a8:	str	r2, [r1]
   1c5ac:	sub	sp, fp, #16
   1c5b0:	pop	{r4, r5, r6, r7, fp, pc}
   1c5b4:	push	{r4, r5, r6, sl, fp, lr}
   1c5b8:	add	fp, sp, #16
   1c5bc:	sub	sp, sp, #16
   1c5c0:	movw	r6, #62360	; 0xf398
   1c5c4:	movw	r4, #62364	; 0xf39c
   1c5c8:	movw	r5, #62668	; 0xf4cc
   1c5cc:	movt	r4, #2
   1c5d0:	movt	r6, #2
   1c5d4:	movt	r5, #2
   1c5d8:	ldr	r3, [r6]
   1c5dc:	ldr	r4, [r4]
   1c5e0:	stm	r5, {r3, r4}
   1c5e4:	mov	r4, #0
   1c5e8:	mov	r3, #1
   1c5ec:	str	r4, [sp]
   1c5f0:	stmib	sp, {r4, r5}
   1c5f4:	str	r3, [sp, #12]
   1c5f8:	mov	r3, #0
   1c5fc:	bl	1b624 <argp_failure@@Base+0x1e0c>
   1c600:	ldr	r1, [r5]
   1c604:	ldr	r3, [r5, #12]
   1c608:	ldr	r2, [r5, #8]
   1c60c:	str	r1, [r6]
   1c610:	movw	r1, #63016	; 0xf628
   1c614:	movt	r1, #2
   1c618:	str	r3, [r1]
   1c61c:	movw	r1, #62368	; 0xf3a0
   1c620:	movt	r1, #2
   1c624:	str	r2, [r1]
   1c628:	sub	sp, fp, #16
   1c62c:	pop	{r4, r5, r6, sl, fp, pc}
   1c630:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1c634:	add	fp, sp, #24
   1c638:	mov	r5, r0
   1c63c:	mov	r0, #36	; 0x24
   1c640:	mov	r8, r3
   1c644:	mov	r6, r2
   1c648:	mov	r7, r1
   1c64c:	bl	1809c <argp_parse@@Base+0x1a04>
   1c650:	mov	r4, r0
   1c654:	cmp	r0, #0
   1c658:	beq	1c694 <argp_failure@@Base+0x2e7c>
   1c65c:	mov	r0, #0
   1c660:	stm	r4, {r5, r7}
   1c664:	str	r6, [r4, #8]
   1c668:	str	r8, [r4, #12]
   1c66c:	str	r0, [r4, #16]
   1c670:	str	r0, [r4, #20]
   1c674:	mov	r0, #200	; 0xc8
   1c678:	bl	1809c <argp_parse@@Base+0x1a04>
   1c67c:	cmp	r0, #0
   1c680:	str	r0, [r4, #24]
   1c684:	beq	1c69c <argp_failure@@Base+0x2e84>
   1c688:	add	r1, r0, #200	; 0xc8
   1c68c:	str	r0, [r4, #28]
   1c690:	str	r1, [r4, #32]
   1c694:	mov	r0, r4
   1c698:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c69c:	mov	r0, r4
   1c6a0:	bl	17968 <argp_parse@@Base+0x12d0>
   1c6a4:	mov	r4, #0
   1c6a8:	mov	r0, r4
   1c6ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1c6b0:	push	{r4, sl, fp, lr}
   1c6b4:	add	fp, sp, #8
   1c6b8:	mov	r4, r0
   1c6bc:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1c6c0:	ldr	r0, [r4, #24]
   1c6c4:	ldr	r1, [r4, #28]
   1c6c8:	cmp	r1, r0
   1c6cc:	bls	1c6e4 <argp_failure@@Base+0x2ecc>
   1c6d0:	ldr	r3, [r4]
   1c6d4:	sub	r2, r1, r0
   1c6d8:	mov	r1, #1
   1c6dc:	bl	11b8c <fwrite_unlocked@plt>
   1c6e0:	ldr	r0, [r4, #24]
   1c6e4:	bl	17968 <argp_parse@@Base+0x12d0>
   1c6e8:	mov	r0, r4
   1c6ec:	pop	{r4, sl, fp, lr}
   1c6f0:	b	17968 <argp_parse@@Base+0x12d0>
   1c6f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c6f8:	add	fp, sp, #28
   1c6fc:	sub	sp, sp, #12
   1c700:	mov	r8, r0
   1c704:	ldr	r0, [r0, #16]
   1c708:	ldr	r1, [r8, #24]
   1c70c:	ldr	ip, [r8, #28]
   1c710:	add	sl, r1, r0
   1c714:	cmp	sl, ip
   1c718:	bcs	1cc40 <argp_failure@@Base+0x3428>
   1c71c:	ldr	r6, [r8, #20]
   1c720:	mov	r3, #32
   1c724:	cmp	r6, #0
   1c728:	beq	1c734 <argp_failure@@Base+0x2f1c>
   1c72c:	mov	r9, sl
   1c730:	b	1c7d4 <argp_failure@@Base+0x2fbc>
   1c734:	ldr	r6, [r8, #4]
   1c738:	cmp	r6, #0
   1c73c:	beq	1c914 <argp_failure@@Base+0x30fc>
   1c740:	ldr	r1, [r8, #32]
   1c744:	add	r0, ip, r6
   1c748:	mov	r5, r6
   1c74c:	cmp	r0, r1
   1c750:	bcs	1c788 <argp_failure@@Base+0x2f70>
   1c754:	add	r9, sl, r6
   1c758:	sub	r2, ip, sl
   1c75c:	mov	r1, sl
   1c760:	mov	r0, r9
   1c764:	bl	11b20 <memmove@plt>
   1c768:	ldr	r0, [r8, #28]
   1c76c:	mov	r1, #32
   1c770:	mov	r2, r6
   1c774:	add	r0, r0, r6
   1c778:	str	r0, [r8, #28]
   1c77c:	mov	r0, sl
   1c780:	bl	11da8 <memset@plt>
   1c784:	b	1c7cc <argp_failure@@Base+0x2fb4>
   1c788:	ldr	r0, [r8]
   1c78c:	ldr	r1, [r0, #20]
   1c790:	ldr	r2, [r0, #24]
   1c794:	cmp	r1, r2
   1c798:	bcs	1c7b4 <argp_failure@@Base+0x2f9c>
   1c79c:	add	r2, r1, #1
   1c7a0:	str	r2, [r0, #20]
   1c7a4:	strb	r3, [r1]
   1c7a8:	subs	r5, r5, #1
   1c7ac:	bne	1c788 <argp_failure@@Base+0x2f70>
   1c7b0:	b	1c7c8 <argp_failure@@Base+0x2fb0>
   1c7b4:	mov	r1, #32
   1c7b8:	bl	11e08 <__overflow@plt>
   1c7bc:	mov	r3, #32
   1c7c0:	subs	r5, r5, #1
   1c7c4:	bne	1c788 <argp_failure@@Base+0x2f70>
   1c7c8:	mov	r9, sl
   1c7cc:	str	r6, [r8, #20]
   1c7d0:	ldr	ip, [r8, #28]
   1c7d4:	sub	r4, ip, r9
   1c7d8:	mov	r0, r9
   1c7dc:	mov	r1, #10
   1c7e0:	str	ip, [sp, #8]
   1c7e4:	mov	r2, r4
   1c7e8:	bl	11de4 <memchr@plt>
   1c7ec:	cmn	r6, #1
   1c7f0:	mov	r7, r0
   1c7f4:	movle	r6, #0
   1c7f8:	strle	r6, [r8, #20]
   1c7fc:	cmp	r7, #0
   1c800:	beq	1c838 <argp_failure@@Base+0x3020>
   1c804:	ldr	r5, [r8, #8]
   1c808:	ldr	ip, [sp, #8]
   1c80c:	sub	r0, r7, r9
   1c810:	mov	r3, #32
   1c814:	add	r0, r0, r6
   1c818:	cmp	r0, r5
   1c81c:	bge	1c854 <argp_failure@@Base+0x303c>
   1c820:	mov	r6, #0
   1c824:	add	sl, r7, #1
   1c828:	str	r6, [r8, #20]
   1c82c:	cmp	sl, ip
   1c830:	bcc	1c724 <argp_failure@@Base+0x2f0c>
   1c834:	b	1cc40 <argp_failure@@Base+0x3428>
   1c838:	ldr	ip, [sp, #8]
   1c83c:	ldr	r5, [r8, #8]
   1c840:	add	r0, r6, r4
   1c844:	mov	r3, #32
   1c848:	cmp	r0, r5
   1c84c:	mov	r7, ip
   1c850:	bcc	1cc20 <argp_failure@@Base+0x3408>
   1c854:	ldr	r0, [r8, #12]
   1c858:	str	r4, [sp, #4]
   1c85c:	cmn	r0, #1
   1c860:	ble	1c8b4 <argp_failure@@Base+0x309c>
   1c864:	sub	sl, r5, r6
   1c868:	mov	r4, r0
   1c86c:	mov	r1, #0
   1c870:	add	r6, r9, sl
   1c874:	cmp	sl, #0
   1c878:	blt	1c90c <argp_failure@@Base+0x30f4>
   1c87c:	bl	11d00 <__ctype_b_loc@plt>
   1c880:	ldr	r1, [r0]
   1c884:	mov	r0, r6
   1c888:	ldrb	r2, [r0]
   1c88c:	ldrb	r2, [r1, r2, lsl #1]
   1c890:	tst	r2, #1
   1c894:	bne	1c91c <argp_failure@@Base+0x3104>
   1c898:	sub	r0, r0, #1
   1c89c:	cmp	r0, r9
   1c8a0:	bcs	1c888 <argp_failure@@Base+0x3070>
   1c8a4:	ldr	ip, [sp, #8]
   1c8a8:	mov	r3, #32
   1c8ac:	mov	r1, #0
   1c8b0:	b	1c928 <argp_failure@@Base+0x3110>
   1c8b4:	sub	sl, r5, #1
   1c8b8:	cmp	r7, ip
   1c8bc:	bcs	1cc28 <argp_failure@@Base+0x3410>
   1c8c0:	sub	r0, sl, r6
   1c8c4:	sub	r2, ip, r7
   1c8c8:	mov	r1, r7
   1c8cc:	add	r0, r9, r0
   1c8d0:	bl	11b20 <memmove@plt>
   1c8d4:	ldr	r0, [r8, #20]
   1c8d8:	ldr	r1, [r8, #28]
   1c8dc:	mov	r6, #0
   1c8e0:	mov	r3, #32
   1c8e4:	str	r6, [r8, #20]
   1c8e8:	sub	r0, sl, r0
   1c8ec:	add	sl, r9, r5
   1c8f0:	add	r0, r9, r0
   1c8f4:	sub	r0, r7, r0
   1c8f8:	add	ip, r1, r0
   1c8fc:	str	ip, [r8, #28]
   1c900:	cmp	sl, ip
   1c904:	bcc	1c724 <argp_failure@@Base+0x2f0c>
   1c908:	b	1cc40 <argp_failure@@Base+0x3428>
   1c90c:	mov	r0, r6
   1c910:	b	1c928 <argp_failure@@Base+0x3110>
   1c914:	mov	r6, #0
   1c918:	b	1c72c <argp_failure@@Base+0x2f14>
   1c91c:	ldr	ip, [sp, #8]
   1c920:	mov	r1, #1
   1c924:	mov	r3, #32
   1c928:	add	r5, r0, #1
   1c92c:	cmp	r5, r9
   1c930:	bls	1c97c <argp_failure@@Base+0x3164>
   1c934:	cmp	r1, #0
   1c938:	beq	1c9e4 <argp_failure@@Base+0x31cc>
   1c93c:	sub	r1, r0, #1
   1c940:	mov	r7, r4
   1c944:	mov	r6, r1
   1c948:	cmp	r1, r9
   1c94c:	bcc	1c96c <argp_failure@@Base+0x3154>
   1c950:	bl	11d00 <__ctype_b_loc@plt>
   1c954:	mov	r1, r6
   1c958:	ldr	r0, [r0]
   1c95c:	ldrb	r2, [r1], #-1
   1c960:	ldrb	r0, [r0, r2, lsl #1]
   1c964:	tst	r0, #1
   1c968:	bne	1c944 <argp_failure@@Base+0x312c>
   1c96c:	ldr	ip, [sp, #8]
   1c970:	add	r6, r6, #1
   1c974:	mov	r3, #32
   1c978:	b	1c9ec <argp_failure@@Base+0x31d4>
   1c97c:	cmp	r6, r7
   1c980:	bcs	1c9b4 <argp_failure@@Base+0x319c>
   1c984:	add	r0, r9, sl
   1c988:	add	r1, r0, #1
   1c98c:	mov	r6, r1
   1c990:	cmp	r1, r7
   1c994:	bcs	1c9b4 <argp_failure@@Base+0x319c>
   1c998:	bl	11d00 <__ctype_b_loc@plt>
   1c99c:	mov	r1, r6
   1c9a0:	ldr	r0, [r0]
   1c9a4:	ldrb	r2, [r1], #1
   1c9a8:	ldrb	r0, [r0, r2, lsl #1]
   1c9ac:	tst	r0, #1
   1c9b0:	beq	1c98c <argp_failure@@Base+0x3174>
   1c9b4:	cmp	r6, r7
   1c9b8:	beq	1cad8 <argp_failure@@Base+0x32c0>
   1c9bc:	bl	11d00 <__ctype_b_loc@plt>
   1c9c0:	ldr	r0, [r0]
   1c9c4:	mov	r5, r6
   1c9c8:	ldrb	r1, [r5, #1]!
   1c9cc:	ldrb	r1, [r0, r1, lsl #1]
   1c9d0:	tst	r1, #1
   1c9d4:	bne	1c9c8 <argp_failure@@Base+0x31b0>
   1c9d8:	ldr	ip, [sp, #8]
   1c9dc:	mov	r3, #32
   1c9e0:	b	1c9e8 <argp_failure@@Base+0x31d0>
   1c9e4:	mov	r6, r5
   1c9e8:	mov	r7, r4
   1c9ec:	add	r0, ip, #1
   1c9f0:	cmp	r5, r0
   1c9f4:	beq	1ca18 <argp_failure@@Base+0x3200>
   1c9f8:	add	sl, r6, #1
   1c9fc:	cmp	ip, r5
   1ca00:	bls	1cafc <argp_failure@@Base+0x32e4>
   1ca04:	sub	r0, r5, sl
   1ca08:	cmp	r0, r7
   1ca0c:	bge	1cafc <argp_failure@@Base+0x32e4>
   1ca10:	ldr	r0, [r8, #32]
   1ca14:	b	1ca30 <argp_failure@@Base+0x3218>
   1ca18:	cmp	ip, r5
   1ca1c:	bls	1caf8 <argp_failure@@Base+0x32e0>
   1ca20:	ldr	r0, [r8, #32]
   1ca24:	sub	r1, r0, r6
   1ca28:	cmp	r1, r7
   1ca2c:	bgt	1caf8 <argp_failure@@Base+0x32e0>
   1ca30:	sub	r0, r0, ip
   1ca34:	add	r1, r7, #1
   1ca38:	cmp	r0, r1
   1ca3c:	ble	1ca7c <argp_failure@@Base+0x3264>
   1ca40:	sub	r4, ip, r5
   1ca44:	add	sl, r6, #1
   1ca48:	mov	r1, r5
   1ca4c:	add	r0, sl, r7
   1ca50:	mov	r2, r4
   1ca54:	bl	11b20 <memmove@plt>
   1ca58:	ldr	r0, [r8, #12]
   1ca5c:	mov	r1, #10
   1ca60:	mov	r3, #32
   1ca64:	strb	r1, [r6]
   1ca68:	add	r5, sl, r0
   1ca6c:	add	r0, r5, r4
   1ca70:	sub	r0, r0, r9
   1ca74:	str	r0, [sp, #4]
   1ca78:	b	1cb04 <argp_failure@@Base+0x32ec>
   1ca7c:	ldr	r0, [r8, #24]
   1ca80:	cmp	r6, r0
   1ca84:	bls	1caa0 <argp_failure@@Base+0x3288>
   1ca88:	ldr	r3, [r8]
   1ca8c:	sub	r2, r6, r0
   1ca90:	mov	r1, #1
   1ca94:	bl	11b8c <fwrite_unlocked@plt>
   1ca98:	ldr	ip, [sp, #8]
   1ca9c:	mov	r3, #32
   1caa0:	ldr	r0, [r8]
   1caa4:	ldr	r1, [r0, #20]
   1caa8:	ldr	r2, [r0, #24]
   1caac:	cmp	r1, r2
   1cab0:	bcs	1cc0c <argp_failure@@Base+0x33f4>
   1cab4:	add	r2, r1, #1
   1cab8:	str	r2, [r0, #20]
   1cabc:	mov	r0, #10
   1cac0:	strb	r0, [r1]
   1cac4:	ldr	sl, [r8, #24]
   1cac8:	sub	r0, ip, sl
   1cacc:	mov	r9, sl
   1cad0:	str	r0, [sp, #4]
   1cad4:	b	1cb04 <argp_failure@@Base+0x32ec>
   1cad8:	ldr	ip, [sp, #8]
   1cadc:	mov	r6, #0
   1cae0:	add	sl, r7, #1
   1cae4:	mov	r3, #32
   1cae8:	str	r6, [r8, #20]
   1caec:	cmp	sl, ip
   1caf0:	bcc	1c724 <argp_failure@@Base+0x2f0c>
   1caf4:	b	1cc40 <argp_failure@@Base+0x3428>
   1caf8:	add	sl, r6, #1
   1cafc:	mov	r0, #10
   1cb00:	strb	r0, [r6]
   1cb04:	ldr	r6, [r8, #12]
   1cb08:	sub	r0, r5, sl
   1cb0c:	cmp	r0, r6
   1cb10:	bge	1cb48 <argp_failure@@Base+0x3330>
   1cb14:	ldr	r0, [sp, #4]
   1cb18:	add	r0, r9, r0
   1cb1c:	add	r0, r0, #1
   1cb20:	cmp	r5, r0
   1cb24:	bne	1cb38 <argp_failure@@Base+0x3320>
   1cb28:	ldr	r0, [r8, #32]
   1cb2c:	sub	r0, r0, r5
   1cb30:	cmp	r0, r6
   1cb34:	bge	1cb48 <argp_failure@@Base+0x3330>
   1cb38:	cmp	r6, #1
   1cb3c:	blt	1cbb8 <argp_failure@@Base+0x33a0>
   1cb40:	mov	r7, #0
   1cb44:	b	1cb88 <argp_failure@@Base+0x3370>
   1cb48:	cmp	r6, #1
   1cb4c:	blt	1cbb8 <argp_failure@@Base+0x33a0>
   1cb50:	mov	r0, #0
   1cb54:	strb	r3, [sl, r0]
   1cb58:	add	r0, r0, #1
   1cb5c:	ldr	r6, [r8, #12]
   1cb60:	cmp	r0, r6
   1cb64:	blt	1cb54 <argp_failure@@Base+0x333c>
   1cb68:	add	sl, sl, r0
   1cb6c:	cmp	sl, r5
   1cb70:	bcc	1cbc0 <argp_failure@@Base+0x33a8>
   1cb74:	b	1cbe0 <argp_failure@@Base+0x33c8>
   1cb78:	mov	r1, #32
   1cb7c:	bl	11e08 <__overflow@plt>
   1cb80:	mov	r3, #32
   1cb84:	b	1cba8 <argp_failure@@Base+0x3390>
   1cb88:	ldr	r0, [r8]
   1cb8c:	ldr	r1, [r0, #20]
   1cb90:	ldr	r2, [r0, #24]
   1cb94:	cmp	r1, r2
   1cb98:	bcs	1cb78 <argp_failure@@Base+0x3360>
   1cb9c:	add	r2, r1, #1
   1cba0:	str	r2, [r0, #20]
   1cba4:	strb	r3, [r1]
   1cba8:	ldr	r6, [r8, #12]
   1cbac:	add	r7, r7, #1
   1cbb0:	cmp	r7, r6
   1cbb4:	blt	1cb88 <argp_failure@@Base+0x3370>
   1cbb8:	cmp	sl, r5
   1cbbc:	bcs	1cbe0 <argp_failure@@Base+0x33c8>
   1cbc0:	ldr	r0, [sp, #4]
   1cbc4:	mov	r1, r5
   1cbc8:	add	r0, r9, r0
   1cbcc:	sub	r2, r0, r5
   1cbd0:	mov	r0, sl
   1cbd4:	bl	11b20 <memmove@plt>
   1cbd8:	ldr	r6, [r8, #12]
   1cbdc:	mov	r3, #32
   1cbe0:	ldr	r0, [sp, #4]
   1cbe4:	cmp	r6, #0
   1cbe8:	mvneq	r6, #0
   1cbec:	str	r6, [r8, #20]
   1cbf0:	sub	r0, r0, r5
   1cbf4:	add	r0, r0, r9
   1cbf8:	add	ip, sl, r0
   1cbfc:	str	ip, [r8, #28]
   1cc00:	cmp	sl, ip
   1cc04:	bcc	1c724 <argp_failure@@Base+0x2f0c>
   1cc08:	b	1cc40 <argp_failure@@Base+0x3428>
   1cc0c:	mov	r1, #10
   1cc10:	bl	11e08 <__overflow@plt>
   1cc14:	ldr	ip, [sp, #8]
   1cc18:	mov	r3, #32
   1cc1c:	b	1cac4 <argp_failure@@Base+0x32ac>
   1cc20:	str	r0, [r8, #20]
   1cc24:	b	1cc40 <argp_failure@@Base+0x3428>
   1cc28:	ldr	r0, [sp, #4]
   1cc2c:	add	r0, r6, r0
   1cc30:	str	r0, [r8, #20]
   1cc34:	sub	r0, sl, r0
   1cc38:	add	ip, ip, r0
   1cc3c:	str	ip, [r8, #28]
   1cc40:	ldr	r0, [r8, #24]
   1cc44:	sub	r0, ip, r0
   1cc48:	str	r0, [r8, #16]
   1cc4c:	sub	sp, fp, #28
   1cc50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc54:	push	{r4, r5, r6, sl, fp, lr}
   1cc58:	add	fp, sp, #16
   1cc5c:	mov	r4, r0
   1cc60:	mov	r6, r1
   1cc64:	ldr	r0, [r0, #28]
   1cc68:	mov	r5, #1
   1cc6c:	ldr	r1, [r4, #32]
   1cc70:	sub	r0, r1, r0
   1cc74:	cmp	r0, r6
   1cc78:	bcs	1cd38 <argp_failure@@Base+0x3520>
   1cc7c:	mov	r0, r4
   1cc80:	bl	1c6f4 <argp_failure@@Base+0x2edc>
   1cc84:	ldr	r0, [r4, #24]
   1cc88:	ldr	r1, [r4, #28]
   1cc8c:	ldr	r3, [r4]
   1cc90:	mov	r5, #1
   1cc94:	sub	r2, r1, r0
   1cc98:	mov	r1, #1
   1cc9c:	bl	11b8c <fwrite_unlocked@plt>
   1cca0:	mov	r1, r0
   1cca4:	ldr	r0, [r4, #24]
   1cca8:	ldr	r2, [r4, #28]
   1ccac:	sub	r3, r2, r0
   1ccb0:	cmp	r1, r3
   1ccb4:	bne	1cd04 <argp_failure@@Base+0x34ec>
   1ccb8:	mov	r1, #0
   1ccbc:	str	r1, [r4, #16]
   1ccc0:	str	r0, [r4, #28]
   1ccc4:	ldr	r1, [r4, #32]
   1ccc8:	sub	r1, r1, r0
   1cccc:	cmp	r1, r6
   1ccd0:	bcs	1cd38 <argp_failure@@Base+0x3520>
   1ccd4:	adds	r6, r1, r6
   1ccd8:	bcs	1cd28 <argp_failure@@Base+0x3510>
   1ccdc:	mov	r1, r6
   1cce0:	bl	180cc <argp_parse@@Base+0x1a34>
   1cce4:	cmp	r0, #0
   1cce8:	beq	1cd28 <argp_failure@@Base+0x3510>
   1ccec:	str	r0, [r4, #24]
   1ccf0:	add	r1, r0, r6
   1ccf4:	str	r0, [r4, #28]
   1ccf8:	mov	r0, r5
   1ccfc:	str	r1, [r4, #32]
   1cd00:	pop	{r4, r5, r6, sl, fp, pc}
   1cd04:	sub	r2, r2, r1
   1cd08:	str	r2, [r4, #28]
   1cd0c:	sub	r2, r2, r0
   1cd10:	ldr	r3, [r4, #16]
   1cd14:	sub	r3, r3, r1
   1cd18:	add	r1, r0, r1
   1cd1c:	str	r3, [r4, #16]
   1cd20:	bl	11b20 <memmove@plt>
   1cd24:	b	1cd34 <argp_failure@@Base+0x351c>
   1cd28:	bl	11d78 <__errno_location@plt>
   1cd2c:	mov	r1, #12
   1cd30:	str	r1, [r0]
   1cd34:	mov	r5, #0
   1cd38:	mov	r0, r5
   1cd3c:	pop	{r4, r5, r6, sl, fp, pc}
   1cd40:	sub	sp, sp, #8
   1cd44:	push	{r4, r5, r6, r7, fp, lr}
   1cd48:	add	fp, sp, #16
   1cd4c:	sub	sp, sp, #8
   1cd50:	mov	r5, r1
   1cd54:	mov	r4, r0
   1cd58:	mov	r1, #150	; 0x96
   1cd5c:	add	r6, fp, #8
   1cd60:	str	r3, [fp, #12]
   1cd64:	str	r2, [fp, #8]
   1cd68:	mov	r0, r4
   1cd6c:	bl	1cc54 <argp_failure@@Base+0x343c>
   1cd70:	cmp	r0, #0
   1cd74:	beq	1cdb4 <argp_failure@@Base+0x359c>
   1cd78:	str	r6, [sp, #4]
   1cd7c:	mov	r2, r5
   1cd80:	mov	r3, r6
   1cd84:	ldr	r0, [r4, #28]
   1cd88:	ldr	r1, [r4, #32]
   1cd8c:	sub	r7, r1, r0
   1cd90:	mov	r1, r7
   1cd94:	bl	11ebc <vsnprintf@plt>
   1cd98:	add	r1, r0, #1
   1cd9c:	cmp	r0, r7
   1cda0:	bcs	1cd68 <argp_failure@@Base+0x3550>
   1cda4:	ldr	r1, [r4, #28]
   1cda8:	add	r1, r1, r0
   1cdac:	str	r1, [r4, #28]
   1cdb0:	b	1cdb8 <argp_failure@@Base+0x35a0>
   1cdb4:	mvn	r0, #0
   1cdb8:	sub	sp, fp, #16
   1cdbc:	pop	{r4, r5, r6, r7, fp, lr}
   1cdc0:	add	sp, sp, #8
   1cdc4:	bx	lr
   1cdc8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cdcc:	mov	r7, r0
   1cdd0:	ldr	r6, [pc, #72]	; 1ce20 <argp_failure@@Base+0x3608>
   1cdd4:	ldr	r5, [pc, #72]	; 1ce24 <argp_failure@@Base+0x360c>
   1cdd8:	add	r6, pc, r6
   1cddc:	add	r5, pc, r5
   1cde0:	sub	r6, r6, r5
   1cde4:	mov	r8, r1
   1cde8:	mov	r9, r2
   1cdec:	bl	11a64 <calloc@plt-0x20>
   1cdf0:	asrs	r6, r6, #2
   1cdf4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cdf8:	mov	r4, #0
   1cdfc:	add	r4, r4, #1
   1ce00:	ldr	r3, [r5], #4
   1ce04:	mov	r2, r9
   1ce08:	mov	r1, r8
   1ce0c:	mov	r0, r7
   1ce10:	blx	r3
   1ce14:	cmp	r6, r4
   1ce18:	bne	1cdfc <argp_failure@@Base+0x35e4>
   1ce1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ce20:	andeq	r2, r1, r4, lsr #2
   1ce24:	andeq	r2, r1, ip, lsl r1
   1ce28:	bx	lr

Disassembly of section .fini:

0001ce2c <.fini>:
   1ce2c:	push	{r3, lr}
   1ce30:	pop	{r3, pc}
