
../repos/charybdis/extensions/.libs/chm_sslonly_compat.so:     file format elf32-littlearm


Disassembly of section .init:

000003cc <_init>:
 3cc:	push	{r3, lr}
 3d0:	bl	41c <call_weak_fn>
 3d4:	pop	{r3, pc}

Disassembly of section .plt:

000003d8 <.plt>:
 3d8:	push	{lr}		; (str lr, [sp, #-4]!)
 3dc:	ldr	lr, [pc, #4]	; 3e8 <.plt+0x10>
 3e0:	add	lr, pc, lr
 3e4:	ldr	pc, [lr, #8]!
 3e8:	.word	0x00010c18

000003ec <__cxa_finalize@plt>:
 3ec:	add	ip, pc, #0, 12
 3f0:	add	ip, ip, #16, 20	; 0x10000
 3f4:	ldr	pc, [ip, #3096]!	; 0xc18

000003f8 <chm_nosuch@plt>:
 3f8:	add	ip, pc, #0, 12
 3fc:	add	ip, ip, #16, 20	; 0x10000
 400:	ldr	pc, [ip, #3088]!	; 0xc10

00000404 <__gmon_start__@plt>:
 404:	add	ip, pc, #0, 12
 408:	add	ip, ip, #16, 20	; 0x10000
 40c:	ldr	pc, [ip, #3080]!	; 0xc08

00000410 <chm_ban@plt>:
 410:	add	ip, pc, #0, 12
 414:	add	ip, ip, #16, 20	; 0x10000
 418:	ldr	pc, [ip, #3072]!	; 0xc00

Disassembly of section .text:

0000041c <call_weak_fn>:
 41c:	ldr	r3, [pc, #20]	; 438 <call_weak_fn+0x1c>
 420:	ldr	r2, [pc, #20]	; 43c <call_weak_fn+0x20>
 424:	add	r3, pc, r3
 428:	ldr	r2, [r3, r2]
 42c:	cmp	r2, #0
 430:	bxeq	lr
 434:	b	404 <__gmon_start__@plt>
 438:	.word	0x00010bd4
 43c:	.word	0x00000028

00000440 <deregister_tm_clones>:
 440:	ldr	r3, [pc, #52]	; 47c <deregister_tm_clones+0x3c>
 444:	ldr	r0, [pc, #52]	; 480 <deregister_tm_clones+0x40>
 448:	add	r3, pc, r3
 44c:	add	r0, pc, r0
 450:	add	r3, r3, #3
 454:	sub	r3, r3, r0
 458:	cmp	r3, #6
 45c:	ldr	r3, [pc, #32]	; 484 <deregister_tm_clones+0x44>
 460:	add	r3, pc, r3
 464:	bxls	lr
 468:	ldr	r2, [pc, #24]	; 488 <deregister_tm_clones+0x48>
 46c:	ldr	r3, [r3, r2]
 470:	cmp	r3, #0
 474:	bxeq	lr
 478:	bx	r3
 47c:	.word	0x00010c14
 480:	.word	0x00010c10
 484:	.word	0x00010b98
 488:	.word	0x00000020

0000048c <register_tm_clones>:
 48c:	ldr	r1, [pc, #56]	; 4cc <register_tm_clones+0x40>
 490:	ldr	r0, [pc, #56]	; 4d0 <register_tm_clones+0x44>
 494:	add	r1, pc, r1
 498:	add	r0, pc, r0
 49c:	sub	r1, r1, r0
 4a0:	ldr	r3, [pc, #44]	; 4d4 <register_tm_clones+0x48>
 4a4:	asr	r1, r1, #2
 4a8:	add	r3, pc, r3
 4ac:	add	r1, r1, r1, lsr #31
 4b0:	asrs	r1, r1, #1
 4b4:	bxeq	lr
 4b8:	ldr	r2, [pc, #24]	; 4d8 <register_tm_clones+0x4c>
 4bc:	ldr	r3, [r3, r2]
 4c0:	cmp	r3, #0
 4c4:	bxeq	lr
 4c8:	bx	r3
 4cc:	.word	0x00010bc8
 4d0:	.word	0x00010bc4
 4d4:	.word	0x00010b50
 4d8:	.word	0x00000034

000004dc <__do_global_dtors_aux>:
 4dc:	ldr	r3, [pc, #76]	; 530 <__do_global_dtors_aux+0x54>
 4e0:	ldr	r2, [pc, #76]	; 534 <__do_global_dtors_aux+0x58>
 4e4:	add	r3, pc, r3
 4e8:	add	r2, pc, r2
 4ec:	ldrb	r3, [r3]
 4f0:	cmp	r3, #0
 4f4:	bxne	lr
 4f8:	ldr	r3, [pc, #56]	; 538 <__do_global_dtors_aux+0x5c>
 4fc:	push	{r4, lr}
 500:	ldr	r3, [r2, r3]
 504:	cmp	r3, #0
 508:	beq	518 <__do_global_dtors_aux+0x3c>
 50c:	ldr	r3, [pc, #40]	; 53c <__do_global_dtors_aux+0x60>
 510:	ldr	r0, [pc, r3]
 514:	bl	3ec <__cxa_finalize@plt>
 518:	bl	440 <deregister_tm_clones>
 51c:	ldr	r3, [pc, #28]	; 540 <__do_global_dtors_aux+0x64>
 520:	mov	r2, #1
 524:	add	r3, pc, r3
 528:	strb	r2, [r3]
 52c:	pop	{r4, pc}
 530:	.word	0x00010b78
 534:	.word	0x00010b10
 538:	.word	0x0000001c
 53c:	.word	0x00010b20
 540:	.word	0x00010b38

00000544 <frame_dummy>:
 544:	ldr	r0, [pc, #56]	; 584 <frame_dummy+0x40>
 548:	ldr	r3, [pc, #56]	; 588 <frame_dummy+0x44>
 54c:	add	r0, pc, r0
 550:	ldr	r2, [r0]
 554:	add	r3, pc, r3
 558:	cmp	r2, #0
 55c:	bne	564 <frame_dummy+0x20>
 560:	b	48c <register_tm_clones>
 564:	ldr	r2, [pc, #32]	; 58c <frame_dummy+0x48>
 568:	ldr	r3, [r3, r2]
 56c:	cmp	r3, #0
 570:	beq	560 <frame_dummy+0x1c>
 574:	push	{r4, lr}
 578:	blx	r3
 57c:	pop	{r4, lr}
 580:	b	48c <register_tm_clones>
 584:	.word	0x000109a8
 588:	.word	0x00010aa4
 58c:	.word	0x00000030

00000590 <_modinit>:
 590:	push	{fp}		; (str fp, [sp, #-4]!)
 594:	add	fp, sp, #0
 598:	ldr	r3, [pc, #56]	; 5d8 <_modinit+0x48>
 59c:	add	r3, pc, r3
 5a0:	ldr	r2, [pc, #52]	; 5dc <_modinit+0x4c>
 5a4:	ldr	r2, [r3, r2]
 5a8:	ldr	r1, [pc, #48]	; 5e0 <_modinit+0x50>
 5ac:	add	r1, pc, r1
 5b0:	str	r1, [r2, #664]	; 0x298
 5b4:	ldr	r2, [pc, #32]	; 5dc <_modinit+0x4c>
 5b8:	ldr	r3, [r3, r2]
 5bc:	mov	r2, #0
 5c0:	str	r2, [r3, #668]	; 0x29c
 5c4:	mov	r3, #0
 5c8:	mov	r0, r3
 5cc:	add	sp, fp, #0
 5d0:	pop	{fp}		; (ldr fp, [sp], #4)
 5d4:	bx	lr
 5d8:	.word	0x00010a5c
 5dc:	.word	0x0000002c
 5e0:	.word	0x00000080

000005e4 <_moddeinit>:
 5e4:	push	{fp}		; (str fp, [sp, #-4]!)
 5e8:	add	fp, sp, #0
 5ec:	ldr	r3, [pc, #52]	; 628 <_moddeinit+0x44>
 5f0:	add	r3, pc, r3
 5f4:	ldr	r2, [pc, #48]	; 62c <_moddeinit+0x48>
 5f8:	ldr	r2, [r3, r2]
 5fc:	ldr	r1, [pc, #44]	; 630 <_moddeinit+0x4c>
 600:	ldr	r1, [r3, r1]
 604:	str	r1, [r2, #664]	; 0x298
 608:	ldr	r2, [pc, #28]	; 62c <_moddeinit+0x48>
 60c:	ldr	r3, [r3, r2]
 610:	mov	r2, #0
 614:	str	r2, [r3, #668]	; 0x29c
 618:	nop			; (mov r0, r0)
 61c:	add	sp, fp, #0
 620:	pop	{fp}		; (ldr fp, [sp], #4)
 624:	bx	lr
 628:	.word	0x00010a08
 62c:	.word	0x0000002c
 630:	.word	0x00000024

00000634 <chm_sslonly>:
 634:	push	{fp, lr}
 638:	add	fp, sp, #4
 63c:	sub	sp, sp, #48	; 0x30
 640:	str	r0, [fp, #-16]
 644:	str	r1, [fp, #-20]	; 0xffffffec
 648:	str	r2, [fp, #-24]	; 0xffffffe8
 64c:	str	r3, [fp, #-28]	; 0xffffffe4
 650:	mov	r3, #0
 654:	str	r3, [fp, #-8]
 658:	ldr	r3, [pc, #204]	; 72c <chm_sslonly+0xf8>
 65c:	add	r3, pc, r3
 660:	str	r3, [fp, #-12]
 664:	ldr	r3, [fp, #-16]
 668:	ldrd	r2, [r3, #64]	; 0x40
 66c:	mov	r0, #8192	; 0x2000
 670:	mov	r1, #0
 674:	and	r2, r2, r0
 678:	and	r3, r3, r1
 67c:	orrs	r3, r2, r3
 680:	beq	6dc <chm_sslonly+0xa8>
 684:	ldr	r3, [fp, #-16]
 688:	ldrh	r3, [r3, #80]	; 0x50
 68c:	cmp	r3, #64	; 0x40
 690:	bne	6dc <chm_sslonly+0xa8>
 694:	mov	r3, #268435456	; 0x10000000
 698:	str	r3, [sp, #20]
 69c:	mov	r3, #98	; 0x62
 6a0:	str	r3, [sp, #16]
 6a4:	ldr	r3, [fp, #16]
 6a8:	str	r3, [sp, #12]
 6ac:	ldr	r3, [fp, #12]
 6b0:	str	r3, [sp, #8]
 6b4:	sub	r3, fp, #12
 6b8:	str	r3, [sp, #4]
 6bc:	sub	r3, fp, #8
 6c0:	str	r3, [sp]
 6c4:	mov	r3, #1
 6c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
 6cc:	ldr	r1, [fp, #-20]	; 0xffffffec
 6d0:	ldr	r0, [fp, #-16]
 6d4:	bl	410 <chm_ban@plt>
 6d8:	b	720 <chm_sslonly+0xec>
 6dc:	ldr	r3, [fp, #24]
 6e0:	str	r3, [sp, #20]
 6e4:	ldrb	r3, [fp, #20]
 6e8:	str	r3, [sp, #16]
 6ec:	ldr	r3, [fp, #16]
 6f0:	str	r3, [sp, #12]
 6f4:	ldr	r3, [fp, #12]
 6f8:	str	r3, [sp, #8]
 6fc:	ldr	r3, [fp, #8]
 700:	str	r3, [sp, #4]
 704:	ldr	r3, [fp, #4]
 708:	str	r3, [sp]
 70c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 710:	ldr	r2, [fp, #-24]	; 0xffffffe8
 714:	ldr	r1, [fp, #-20]	; 0xffffffec
 718:	ldr	r0, [fp, #-16]
 71c:	bl	3f8 <chm_nosuch@plt>
 720:	nop			; (mov r0, r0)
 724:	sub	sp, fp, #4
 728:	pop	{fp, pc}
 72c:	.word	0x0000011c

Disassembly of section .fini:

00000730 <_fini>:
 730:	push	{r3, lr}
 734:	pop	{r3, pc}
