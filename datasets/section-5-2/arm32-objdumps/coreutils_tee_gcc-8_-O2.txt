
../repos/coreutils/src/tee:     file format elf32-littlearm


Disassembly of section .init:

00010ca4 <.init>:
   10ca4:	push	{r3, lr}
   10ca8:	bl	111f0 <close@plt+0x2bc>
   10cac:	pop	{r3, pc}

Disassembly of section .plt:

00010cb0 <fdopen@plt-0x14>:
   10cb0:	push	{lr}		; (str lr, [sp, #-4]!)
   10cb4:	ldr	lr, [pc, #4]	; 10cc0 <fdopen@plt-0x4>
   10cb8:	add	lr, pc, lr
   10cbc:	ldr	pc, [lr, #8]!
   10cc0:	andeq	r6, r1, r0, asr #6

00010cc4 <fdopen@plt>:
   10cc4:	add	ip, pc, #0, 12
   10cc8:	add	ip, ip, #90112	; 0x16000
   10ccc:	ldr	pc, [ip, #832]!	; 0x340

00010cd0 <calloc@plt>:
   10cd0:	add	ip, pc, #0, 12
   10cd4:	add	ip, ip, #90112	; 0x16000
   10cd8:	ldr	pc, [ip, #824]!	; 0x338

00010cdc <fputs_unlocked@plt>:
   10cdc:	add	ip, pc, #0, 12
   10ce0:	add	ip, ip, #90112	; 0x16000
   10ce4:	ldr	pc, [ip, #816]!	; 0x330

00010ce8 <strcmp@plt>:
   10ce8:	add	ip, pc, #0, 12
   10cec:	add	ip, ip, #90112	; 0x16000
   10cf0:	ldr	pc, [ip, #808]!	; 0x328

00010cf4 <posix_fadvise64@plt>:
   10cf4:	add	ip, pc, #0, 12
   10cf8:	add	ip, ip, #90112	; 0x16000
   10cfc:	ldr	pc, [ip, #800]!	; 0x320

00010d00 <read@plt>:
   10d00:	add	ip, pc, #0, 12
   10d04:	add	ip, ip, #90112	; 0x16000
   10d08:	ldr	pc, [ip, #792]!	; 0x318

00010d0c <fflush@plt>:
   10d0c:	add	ip, pc, #0, 12
   10d10:	add	ip, ip, #90112	; 0x16000
   10d14:	ldr	pc, [ip, #784]!	; 0x310

00010d18 <free@plt>:
   10d18:	add	ip, pc, #0, 12
   10d1c:	add	ip, ip, #90112	; 0x16000
   10d20:	ldr	pc, [ip, #776]!	; 0x308

00010d24 <_exit@plt>:
   10d24:	add	ip, pc, #0, 12
   10d28:	add	ip, ip, #90112	; 0x16000
   10d2c:	ldr	pc, [ip, #768]!	; 0x300

00010d30 <memcpy@plt>:
   10d30:	add	ip, pc, #0, 12
   10d34:	add	ip, ip, #90112	; 0x16000
   10d38:	ldr	pc, [ip, #760]!	; 0x2f8

00010d3c <mbsinit@plt>:
   10d3c:	add	ip, pc, #0, 12
   10d40:	add	ip, ip, #90112	; 0x16000
   10d44:	ldr	pc, [ip, #752]!	; 0x2f0

00010d48 <signal@plt>:
   10d48:	add	ip, pc, #0, 12
   10d4c:	add	ip, ip, #90112	; 0x16000
   10d50:	ldr	pc, [ip, #744]!	; 0x2e8

00010d54 <fwrite_unlocked@plt>:
   10d54:	add	ip, pc, #0, 12
   10d58:	add	ip, ip, #90112	; 0x16000
   10d5c:	ldr	pc, [ip, #736]!	; 0x2e0

00010d60 <memcmp@plt>:
   10d60:	add	ip, pc, #0, 12
   10d64:	add	ip, ip, #90112	; 0x16000
   10d68:	ldr	pc, [ip, #728]!	; 0x2d8

00010d6c <fputc_unlocked@plt>:
   10d6c:	add	ip, pc, #0, 12
   10d70:	add	ip, ip, #90112	; 0x16000
   10d74:	ldr	pc, [ip, #720]!	; 0x2d0

00010d78 <dcgettext@plt>:
   10d78:	add	ip, pc, #0, 12
   10d7c:	add	ip, ip, #90112	; 0x16000
   10d80:	ldr	pc, [ip, #712]!	; 0x2c8

00010d84 <realloc@plt>:
   10d84:	add	ip, pc, #0, 12
   10d88:	add	ip, ip, #90112	; 0x16000
   10d8c:	ldr	pc, [ip, #704]!	; 0x2c0

00010d90 <textdomain@plt>:
   10d90:	add	ip, pc, #0, 12
   10d94:	add	ip, ip, #90112	; 0x16000
   10d98:	ldr	pc, [ip, #696]!	; 0x2b8

00010d9c <iswprint@plt>:
   10d9c:	add	ip, pc, #0, 12
   10da0:	add	ip, ip, #90112	; 0x16000
   10da4:	ldr	pc, [ip, #688]!	; 0x2b0

00010da8 <fwrite@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #90112	; 0x16000
   10db0:	ldr	pc, [ip, #680]!	; 0x2a8

00010db4 <lseek64@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #90112	; 0x16000
   10dbc:	ldr	pc, [ip, #672]!	; 0x2a0

00010dc0 <__ctype_get_mb_cur_max@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #90112	; 0x16000
   10dc8:	ldr	pc, [ip, #664]!	; 0x298

00010dcc <__fpending@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #90112	; 0x16000
   10dd4:	ldr	pc, [ip, #656]!	; 0x290

00010dd8 <mbrtowc@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #90112	; 0x16000
   10de0:	ldr	pc, [ip, #648]!	; 0x288

00010de4 <error@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #90112	; 0x16000
   10dec:	ldr	pc, [ip, #640]!	; 0x280

00010df0 <malloc@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #90112	; 0x16000
   10df8:	ldr	pc, [ip, #632]!	; 0x278

00010dfc <__libc_start_main@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #90112	; 0x16000
   10e04:	ldr	pc, [ip, #624]!	; 0x270

00010e08 <__freading@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #90112	; 0x16000
   10e10:	ldr	pc, [ip, #616]!	; 0x268

00010e14 <__gmon_start__@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #90112	; 0x16000
   10e1c:	ldr	pc, [ip, #608]!	; 0x260

00010e20 <getopt_long@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #90112	; 0x16000
   10e28:	ldr	pc, [ip, #600]!	; 0x258

00010e2c <__ctype_b_loc@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #90112	; 0x16000
   10e34:	ldr	pc, [ip, #592]!	; 0x250

00010e38 <exit@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #90112	; 0x16000
   10e40:	ldr	pc, [ip, #584]!	; 0x248

00010e44 <strlen@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #90112	; 0x16000
   10e4c:	ldr	pc, [ip, #576]!	; 0x240

00010e50 <__errno_location@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #90112	; 0x16000
   10e58:	ldr	pc, [ip, #568]!	; 0x238

00010e5c <__cxa_atexit@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #90112	; 0x16000
   10e64:	ldr	pc, [ip, #560]!	; 0x230

00010e68 <setvbuf@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #90112	; 0x16000
   10e70:	ldr	pc, [ip, #552]!	; 0x228

00010e74 <memset@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #90112	; 0x16000
   10e7c:	ldr	pc, [ip, #544]!	; 0x220

00010e80 <__printf_chk@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #90112	; 0x16000
   10e88:	ldr	pc, [ip, #536]!	; 0x218

00010e8c <fileno@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #90112	; 0x16000
   10e94:	ldr	pc, [ip, #528]!	; 0x210

00010e98 <__fprintf_chk@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #90112	; 0x16000
   10ea0:	ldr	pc, [ip, #520]!	; 0x208

00010ea4 <fclose@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #90112	; 0x16000
   10eac:	ldr	pc, [ip, #512]!	; 0x200

00010eb0 <fseeko64@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #90112	; 0x16000
   10eb8:	ldr	pc, [ip, #504]!	; 0x1f8

00010ebc <fcntl64@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #90112	; 0x16000
   10ec4:	ldr	pc, [ip, #496]!	; 0x1f0

00010ec8 <__overflow@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #90112	; 0x16000
   10ed0:	ldr	pc, [ip, #488]!	; 0x1e8

00010ed4 <setlocale@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #90112	; 0x16000
   10edc:	ldr	pc, [ip, #480]!	; 0x1e0

00010ee0 <strrchr@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #90112	; 0x16000
   10ee8:	ldr	pc, [ip, #472]!	; 0x1d8

00010eec <nl_langinfo@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #90112	; 0x16000
   10ef4:	ldr	pc, [ip, #464]!	; 0x1d0

00010ef8 <clearerr_unlocked@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #90112	; 0x16000
   10f00:	ldr	pc, [ip, #456]!	; 0x1c8

00010f04 <fopen64@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #90112	; 0x16000
   10f0c:	ldr	pc, [ip, #448]!	; 0x1c0

00010f10 <bindtextdomain@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #90112	; 0x16000
   10f18:	ldr	pc, [ip, #440]!	; 0x1b8

00010f1c <strncmp@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #90112	; 0x16000
   10f24:	ldr	pc, [ip, #432]!	; 0x1b0

00010f28 <abort@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #90112	; 0x16000
   10f30:	ldr	pc, [ip, #424]!	; 0x1a8

00010f34 <close@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #90112	; 0x16000
   10f3c:	ldr	pc, [ip, #416]!	; 0x1a0

Disassembly of section .text:

00010f40 <.text>:
   10f40:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10f44:	movw	r5, #29024	; 0x7160
   10f48:	movt	r5, #2
   10f4c:	strd	r6, [sp, #8]
   10f50:	mov	r7, r1
   10f54:	movw	r6, #23552	; 0x5c00
   10f58:	movt	r6, #1
   10f5c:	strd	r8, [sp, #16]
   10f60:	mov	r8, r0
   10f64:	strd	sl, [sp, #24]
   10f68:	movw	sl, #21972	; 0x55d4
   10f6c:	movt	sl, #1
   10f70:	str	lr, [sp, #32]
   10f74:	sub	sp, sp, #20
   10f78:	movw	fp, #29016	; 0x7158
   10f7c:	movt	fp, #2
   10f80:	ldr	r0, [r1]
   10f84:	add	r9, sl, #92	; 0x5c
   10f88:	bl	12260 <close@plt+0x132c>
   10f8c:	movw	r1, #22272	; 0x5700
   10f90:	movt	r1, #1
   10f94:	mov	r0, #6
   10f98:	bl	10ed4 <setlocale@plt>
   10f9c:	movw	r1, #23464	; 0x5ba8
   10fa0:	movt	r1, #1
   10fa4:	movw	r0, #23296	; 0x5b00
   10fa8:	movt	r0, #1
   10fac:	bl	10f10 <bindtextdomain@plt>
   10fb0:	movw	r0, #23296	; 0x5b00
   10fb4:	movt	r0, #1
   10fb8:	bl	10d90 <textdomain@plt>
   10fbc:	movw	r0, #7728	; 0x1e30
   10fc0:	movt	r0, #1
   10fc4:	bl	155b0 <close@plt+0x467c>
   10fc8:	mov	r3, #0
   10fcc:	strb	r3, [r5]
   10fd0:	strb	r3, [r5, #8]
   10fd4:	mov	r4, #0
   10fd8:	mov	r3, r9
   10fdc:	mov	r2, r6
   10fe0:	mov	r1, r7
   10fe4:	mov	r0, r8
   10fe8:	str	r4, [sp]
   10fec:	bl	10e20 <getopt_long@plt>
   10ff0:	cmn	r0, #1
   10ff4:	beq	110ec <close@plt+0x1b8>
   10ff8:	cmp	r0, #97	; 0x61
   10ffc:	beq	110e0 <close@plt+0x1ac>
   11000:	ble	11018 <close@plt+0xe4>
   11004:	cmp	r0, #105	; 0x69
   11008:	bne	11074 <close@plt+0x140>
   1100c:	mov	r3, #1
   11010:	strb	r3, [r5, #8]
   11014:	b	10fd4 <close@plt+0xa0>
   11018:	cmn	r0, #3
   1101c:	bne	110d0 <close@plt+0x19c>
   11020:	movw	r3, #23504	; 0x5bd0
   11024:	movt	r3, #1
   11028:	movw	r1, #23520	; 0x5be0
   1102c:	movt	r1, #1
   11030:	movw	r2, #23540	; 0x5bf4
   11034:	movt	r2, #1
   11038:	movw	r0, #29012	; 0x7154
   1103c:	movt	r0, #2
   11040:	str	r2, [sp]
   11044:	movw	r2, #23292	; 0x5afc
   11048:	movt	r2, #1
   1104c:	stmib	sp, {r1, r3, r4}
   11050:	movw	r3, #28908	; 0x70ec
   11054:	movt	r3, #2
   11058:	movw	r1, #22196	; 0x56b4
   1105c:	movt	r1, #1
   11060:	ldr	r0, [r0]
   11064:	ldr	r3, [r3]
   11068:	bl	149f8 <close@plt+0x3ac4>
   1106c:	mov	r0, r4
   11070:	bl	10e38 <exit@plt>
   11074:	cmp	r0, #112	; 0x70
   11078:	bne	11174 <close@plt+0x240>
   1107c:	ldr	r1, [fp]
   11080:	cmp	r1, #0
   11084:	moveq	r3, #2
   11088:	streq	r3, [r5, #4]
   1108c:	beq	10fd4 <close@plt+0xa0>
   11090:	movw	r2, #28912	; 0x70f0
   11094:	movt	r2, #2
   11098:	ldr	r3, [pc, #272]	; 111b0 <close@plt+0x27c>
   1109c:	mov	r0, #1
   110a0:	ldr	ip, [r2]
   110a4:	mov	r2, #4
   110a8:	stm	sp, {r2, ip}
   110ac:	add	r2, r3, #16
   110b0:	str	r0, [sp, #8]
   110b4:	movw	r0, #23488	; 0x5bc0
   110b8:	movt	r0, #1
   110bc:	bl	11d04 <close@plt+0xdd0>
   110c0:	add	r0, sl, r0, lsl #2
   110c4:	ldr	r3, [r0, #56]	; 0x38
   110c8:	str	r3, [r5, #4]
   110cc:	b	10fd4 <close@plt+0xa0>
   110d0:	cmn	r0, #2
   110d4:	bne	11174 <close@plt+0x240>
   110d8:	mov	r0, r4
   110dc:	bl	11650 <close@plt+0x71c>
   110e0:	mov	r3, #1
   110e4:	strb	r3, [r5]
   110e8:	b	10fd4 <close@plt+0xa0>
   110ec:	ldrb	r3, [r5, #8]
   110f0:	cmp	r3, r4
   110f4:	bne	11154 <close@plt+0x220>
   110f8:	ldr	r3, [r5, #4]
   110fc:	cmp	r3, #0
   11100:	bne	11164 <close@plt+0x230>
   11104:	movw	r3, #28992	; 0x7140
   11108:	movt	r3, #2
   1110c:	ldr	r0, [r3]
   11110:	add	r1, r7, r0, lsl #2
   11114:	sub	r0, r8, r0
   11118:	bl	112a4 <close@plt+0x370>
   1111c:	mov	r4, r0
   11120:	mov	r0, #0
   11124:	bl	10f34 <close@plt>
   11128:	cmp	r0, #0
   1112c:	bne	1117c <close@plt+0x248>
   11130:	eor	r0, r4, #1
   11134:	uxtb	r0, r0
   11138:	add	sp, sp, #20
   1113c:	ldrd	r4, [sp]
   11140:	ldrd	r6, [sp, #8]
   11144:	ldrd	r8, [sp, #16]
   11148:	ldrd	sl, [sp, #24]
   1114c:	add	sp, sp, #32
   11150:	pop	{pc}		; (ldr pc, [sp], #4)
   11154:	mov	r1, #1
   11158:	mov	r0, #2
   1115c:	bl	10d48 <signal@plt>
   11160:	b	110f8 <close@plt+0x1c4>
   11164:	mov	r1, #1
   11168:	mov	r0, #13
   1116c:	bl	10d48 <signal@plt>
   11170:	b	11104 <close@plt+0x1d0>
   11174:	mov	r0, #1
   11178:	bl	11650 <close@plt+0x71c>
   1117c:	bl	10e50 <__errno_location@plt>
   11180:	ldr	r4, [r0]
   11184:	mov	r2, #5
   11188:	movw	r1, #23556	; 0x5c04
   1118c:	movt	r1, #1
   11190:	mov	r0, #0
   11194:	bl	10d78 <dcgettext@plt>
   11198:	mov	r3, r0
   1119c:	movw	r2, #23912	; 0x5d68
   111a0:	movt	r2, #1
   111a4:	mov	r0, #1
   111a8:	mov	r1, r4
   111ac:	bl	10de4 <error@plt>
   111b0:	andeq	r5, r1, ip, lsl #12
   111b4:	mov	fp, #0
   111b8:	mov	lr, #0
   111bc:	pop	{r1}		; (ldr r1, [sp], #4)
   111c0:	mov	r2, sp
   111c4:	push	{r2}		; (str r2, [sp, #-4]!)
   111c8:	push	{r0}		; (str r0, [sp, #-4]!)
   111cc:	ldr	ip, [pc, #16]	; 111e4 <close@plt+0x2b0>
   111d0:	push	{ip}		; (str ip, [sp, #-4]!)
   111d4:	ldr	r0, [pc, #12]	; 111e8 <close@plt+0x2b4>
   111d8:	ldr	r3, [pc, #12]	; 111ec <close@plt+0x2b8>
   111dc:	bl	10dfc <__libc_start_main@plt>
   111e0:	bl	10f28 <abort@plt>
   111e4:	andeq	r5, r1, ip, lsr #11
   111e8:	andeq	r0, r1, r0, asr #30
   111ec:	andeq	r5, r1, ip, asr #10
   111f0:	ldr	r3, [pc, #20]	; 1120c <close@plt+0x2d8>
   111f4:	ldr	r2, [pc, #20]	; 11210 <close@plt+0x2dc>
   111f8:	add	r3, pc, r3
   111fc:	ldr	r2, [r3, r2]
   11200:	cmp	r2, #0
   11204:	bxeq	lr
   11208:	b	10e14 <__gmon_start__@plt>
   1120c:	andeq	r5, r1, r0, lsl #28
   11210:	andeq	r0, r0, r0, ror #1
   11214:	ldr	r0, [pc, #24]	; 11234 <close@plt+0x300>
   11218:	ldr	r3, [pc, #24]	; 11238 <close@plt+0x304>
   1121c:	cmp	r3, r0
   11220:	bxeq	lr
   11224:	ldr	r3, [pc, #16]	; 1123c <close@plt+0x308>
   11228:	cmp	r3, #0
   1122c:	bxeq	lr
   11230:	bx	r3
   11234:	andeq	r7, r2, r8, lsr r1
   11238:	andeq	r7, r2, r8, lsr r1
   1123c:	andeq	r0, r0, r0
   11240:	ldr	r0, [pc, #36]	; 1126c <close@plt+0x338>
   11244:	ldr	r1, [pc, #36]	; 11270 <close@plt+0x33c>
   11248:	sub	r1, r1, r0
   1124c:	asr	r1, r1, #2
   11250:	add	r1, r1, r1, lsr #31
   11254:	asrs	r1, r1, #1
   11258:	bxeq	lr
   1125c:	ldr	r3, [pc, #16]	; 11274 <close@plt+0x340>
   11260:	cmp	r3, #0
   11264:	bxeq	lr
   11268:	bx	r3
   1126c:	andeq	r7, r2, r8, lsr r1
   11270:	andeq	r7, r2, r8, lsr r1
   11274:	andeq	r0, r0, r0
   11278:	push	{r4, lr}
   1127c:	ldr	r4, [pc, #24]	; 1129c <close@plt+0x368>
   11280:	ldrb	r3, [r4]
   11284:	cmp	r3, #0
   11288:	popne	{r4, pc}
   1128c:	bl	11214 <close@plt+0x2e0>
   11290:	mov	r3, #1
   11294:	strb	r3, [r4]
   11298:	pop	{r4, pc}
   1129c:	andeq	r7, r2, ip, asr r1
   112a0:	b	11240 <close@plt+0x30c>
   112a4:	movw	r3, #29024	; 0x7160
   112a8:	movt	r3, #2
   112ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   112b0:	ldrb	ip, [r3]
   112b4:	movw	r5, #29012	; 0x7154
   112b8:	movt	r5, #2
   112bc:	strd	r6, [sp, #8]
   112c0:	movw	r2, #29008	; 0x7150
   112c4:	movt	r2, #2
   112c8:	strd	r8, [sp, #16]
   112cc:	mov	r4, r1
   112d0:	mov	r6, r0
   112d4:	strd	sl, [sp, #24]
   112d8:	mov	r1, #2
   112dc:	movw	sl, #22164	; 0x5694
   112e0:	movt	sl, #1
   112e4:	str	lr, [sp, #32]
   112e8:	sub	sp, sp, #8192	; 0x2000
   112ec:	sub	sp, sp, #36	; 0x24
   112f0:	cmp	ip, #0
   112f4:	sub	r7, r4, #4
   112f8:	stm	sp, {r3, r5}
   112fc:	movw	r3, #22160	; 0x5690
   11300:	movt	r3, #1
   11304:	str	r0, [sp, #16]
   11308:	movne	sl, r3
   1130c:	ldr	r0, [r2]
   11310:	bl	11f20 <close@plt+0xfec>
   11314:	mov	r1, #4
   11318:	add	r0, r6, #1
   1131c:	bl	14c70 <close@plt+0x3d3c>
   11320:	ldr	r3, [r5]
   11324:	mov	r2, #5
   11328:	mov	r8, r0
   1132c:	movw	r1, #22168	; 0x5698
   11330:	movt	r1, #1
   11334:	str	r0, [sp, #12]
   11338:	str	r7, [sp, #20]
   1133c:	str	r3, [r0]
   11340:	mov	r0, #0
   11344:	bl	10d78 <dcgettext@plt>
   11348:	mov	r3, #0
   1134c:	mov	r2, #2
   11350:	str	r0, [r4, #-4]
   11354:	mov	r1, r3
   11358:	ldr	r0, [r5]
   1135c:	bl	10e68 <setvbuf@plt>
   11360:	cmp	r6, #0
   11364:	ble	11638 <close@plt+0x704>
   11368:	lsl	r3, r6, #2
   1136c:	mov	r2, #1
   11370:	movw	r9, #23912	; 0x5d68
   11374:	movt	r9, #1
   11378:	mov	r6, r2
   1137c:	mov	r5, r8
   11380:	add	fp, r8, r3
   11384:	str	r2, [sp, #8]
   11388:	str	r9, [sp, #24]
   1138c:	str	r3, [sp, #28]
   11390:	b	113a4 <close@plt+0x470>
   11394:	bl	10e68 <setvbuf@plt>
   11398:	cmp	fp, r5
   1139c:	add	r6, r6, #1
   113a0:	beq	1141c <close@plt+0x4e8>
   113a4:	mov	r1, sl
   113a8:	ldr	r0, [r7, #4]!
   113ac:	bl	12084 <close@plt+0x1150>
   113b0:	mov	r3, #0
   113b4:	mov	r4, r0
   113b8:	str	r0, [r5, #4]!
   113bc:	cmp	r0, r3
   113c0:	mov	r2, #2
   113c4:	mov	r1, r3
   113c8:	bne	11394 <close@plt+0x460>
   113cc:	ldr	r3, [sp]
   113d0:	str	r0, [sp, #8]
   113d4:	ldr	r8, [r3, #4]
   113d8:	sub	r8, r8, #3
   113dc:	cmp	r8, #1
   113e0:	movhi	r8, #0
   113e4:	movls	r8, #1
   113e8:	bl	10e50 <__errno_location@plt>
   113ec:	ldr	r9, [r0]
   113f0:	mov	r1, #3
   113f4:	mov	r0, r4
   113f8:	ldr	r2, [r7]
   113fc:	bl	14378 <close@plt+0x3444>
   11400:	mov	r3, r0
   11404:	mov	r0, r8
   11408:	ldr	r2, [sp, #24]
   1140c:	mov	r1, r9
   11410:	bl	10de4 <error@plt>
   11414:	cmp	fp, r5
   11418:	bne	113a4 <close@plt+0x470>
   1141c:	cmp	r6, #0
   11420:	beq	1146c <close@plt+0x538>
   11424:	ldr	r3, [sp, #12]
   11428:	ldr	r2, [sp, #28]
   1142c:	add	r7, r3, r2
   11430:	mov	r2, #8192	; 0x2000
   11434:	add	r1, sp, #32
   11438:	mov	r0, #0
   1143c:	bl	10d00 <read@plt>
   11440:	subs	r8, r0, #0
   11444:	bge	1151c <close@plt+0x5e8>
   11448:	bl	10e50 <__errno_location@plt>
   1144c:	ldr	r3, [r0]
   11450:	cmp	r3, #4
   11454:	beq	11510 <close@plt+0x5dc>
   11458:	cmn	r8, #1
   1145c:	beq	11604 <close@plt+0x6d0>
   11460:	ldr	r3, [sp, #16]
   11464:	cmp	r3, #0
   11468:	ble	114e4 <close@plt+0x5b0>
   1146c:	add	r5, sp, #12
   11470:	movw	r6, #23912	; 0x5d68
   11474:	movt	r6, #1
   11478:	mov	r4, #1
   1147c:	ldm	r5, {r5, r7, r9}
   11480:	b	11490 <close@plt+0x55c>
   11484:	add	r4, r4, #1
   11488:	cmp	r7, r4
   1148c:	blt	114e4 <close@plt+0x5b0>
   11490:	ldr	r3, [r5, #4]!
   11494:	subs	r0, r3, #0
   11498:	beq	11484 <close@plt+0x550>
   1149c:	bl	11f70 <close@plt+0x103c>
   114a0:	cmp	r0, #0
   114a4:	beq	11484 <close@plt+0x550>
   114a8:	bl	10e50 <__errno_location@plt>
   114ac:	ldr	r8, [r0]
   114b0:	mov	r0, #0
   114b4:	mov	r1, #3
   114b8:	ldr	r2, [r9, r4, lsl #2]
   114bc:	add	r4, r4, #1
   114c0:	str	r0, [sp, #8]
   114c4:	bl	14378 <close@plt+0x3444>
   114c8:	mov	r3, r0
   114cc:	mov	r2, r6
   114d0:	mov	r1, r8
   114d4:	mov	r0, #0
   114d8:	bl	10de4 <error@plt>
   114dc:	cmp	r7, r4
   114e0:	bge	11490 <close@plt+0x55c>
   114e4:	ldr	r0, [sp, #12]
   114e8:	bl	12130 <close@plt+0x11fc>
   114ec:	ldr	r0, [sp, #8]
   114f0:	add	sp, sp, #8192	; 0x2000
   114f4:	add	sp, sp, #36	; 0x24
   114f8:	ldrd	r4, [sp]
   114fc:	ldrd	r6, [sp, #8]
   11500:	ldrd	r8, [sp, #16]
   11504:	ldrd	sl, [sp, #24]
   11508:	add	sp, sp, #32
   1150c:	pop	{pc}		; (ldr pc, [sp], #4)
   11510:	cmp	r6, #0
   11514:	bne	11430 <close@plt+0x4fc>
   11518:	b	11458 <close@plt+0x524>
   1151c:	beq	11460 <close@plt+0x52c>
   11520:	ldr	r3, [sp, #16]
   11524:	cmp	r3, #0
   11528:	blt	11510 <close@plt+0x5dc>
   1152c:	ldr	r3, [sp, #12]
   11530:	movw	sl, #23912	; 0x5d68
   11534:	movt	sl, #1
   11538:	ldr	r5, [sp, #20]
   1153c:	sub	r4, r3, #4
   11540:	b	115a0 <close@plt+0x66c>
   11544:	cmp	r0, r2
   11548:	bne	11550 <close@plt+0x61c>
   1154c:	bl	10ef8 <clearerr_unlocked@plt>
   11550:	mov	r1, #3
   11554:	mov	r0, #0
   11558:	ldr	r2, [r5]
   1155c:	bl	14378 <close@plt+0x3444>
   11560:	sub	fp, fp, #3
   11564:	mov	r3, #0
   11568:	cmp	fp, #1
   1156c:	mov	r1, r9
   11570:	mov	r2, sl
   11574:	str	r3, [sp, #8]
   11578:	mov	r3, r0
   1157c:	movhi	r0, #0
   11580:	movls	r0, #1
   11584:	bl	10de4 <error@plt>
   11588:	mov	r3, #0
   1158c:	sub	r6, r6, #1
   11590:	str	r3, [r4]
   11594:	cmp	r4, r7
   11598:	add	r5, r5, #4
   1159c:	beq	11510 <close@plt+0x5dc>
   115a0:	ldr	r3, [r4, #4]!
   115a4:	cmp	r3, #0
   115a8:	beq	11594 <close@plt+0x660>
   115ac:	mov	r2, #1
   115b0:	mov	r1, r8
   115b4:	add	r0, sp, #32
   115b8:	bl	10d54 <fwrite_unlocked@plt>
   115bc:	cmp	r0, #1
   115c0:	beq	11594 <close@plt+0x660>
   115c4:	bl	10e50 <__errno_location@plt>
   115c8:	ldr	r3, [sp, #4]
   115cc:	ldr	r9, [r0]
   115d0:	ldr	r2, [r4]
   115d4:	ldr	r0, [r3]
   115d8:	cmp	r9, #32
   115dc:	ldr	r3, [sp]
   115e0:	ldr	fp, [r3, #4]
   115e4:	bne	11544 <close@plt+0x610>
   115e8:	bic	r1, fp, #2
   115ec:	cmp	r1, #1
   115f0:	beq	11544 <close@plt+0x610>
   115f4:	cmp	r0, r2
   115f8:	bne	11588 <close@plt+0x654>
   115fc:	bl	10ef8 <clearerr_unlocked@plt>
   11600:	b	11588 <close@plt+0x654>
   11604:	bl	10e50 <__errno_location@plt>
   11608:	ldr	r4, [r0]
   1160c:	mov	r2, #5
   11610:	movw	r1, #22184	; 0x56a8
   11614:	movt	r1, #1
   11618:	mov	r0, #0
   1161c:	bl	10d78 <dcgettext@plt>
   11620:	mov	r2, r0
   11624:	mov	r0, #0
   11628:	mov	r1, r4
   1162c:	str	r0, [sp, #8]
   11630:	bl	10de4 <error@plt>
   11634:	b	11460 <close@plt+0x52c>
   11638:	ldr	r3, [sp, #16]
   1163c:	mov	r6, #1
   11640:	str	r6, [sp, #8]
   11644:	lsl	r3, r3, #2
   11648:	str	r3, [sp, #28]
   1164c:	b	11424 <close@plt+0x4f0>
   11650:	subs	r6, r0, #0
   11654:	str	r7, [sp, #-8]!
   11658:	str	lr, [sp, #4]
   1165c:	sub	sp, sp, #56	; 0x38
   11660:	beq	116a8 <close@plt+0x774>
   11664:	movw	r3, #29000	; 0x7148
   11668:	movt	r3, #2
   1166c:	ldr	r4, [r3]
   11670:	mov	r2, #5
   11674:	movw	r1, #22200	; 0x56b8
   11678:	movt	r1, #1
   1167c:	mov	r0, #0
   11680:	bl	10d78 <dcgettext@plt>
   11684:	movw	r3, #29044	; 0x7174
   11688:	movt	r3, #2
   1168c:	mov	r2, r0
   11690:	mov	r1, #1
   11694:	ldr	r3, [r3]
   11698:	mov	r0, r4
   1169c:	bl	10e98 <__fprintf_chk@plt>
   116a0:	mov	r0, r6
   116a4:	bl	10e38 <exit@plt>
   116a8:	mov	r2, #5
   116ac:	movw	r1, #22240	; 0x56e0
   116b0:	movt	r1, #1
   116b4:	movw	r7, #29012	; 0x7154
   116b8:	movt	r7, #2
   116bc:	bl	10d78 <dcgettext@plt>
   116c0:	movw	r3, #29044	; 0x7174
   116c4:	movt	r3, #2
   116c8:	mov	r1, r0
   116cc:	mov	r0, #1
   116d0:	ldr	r2, [r3]
   116d4:	bl	10e80 <__printf_chk@plt>
   116d8:	mov	r2, #5
   116dc:	movw	r1, #22276	; 0x5704
   116e0:	movt	r1, #1
   116e4:	mov	r0, r6
   116e8:	bl	10d78 <dcgettext@plt>
   116ec:	ldr	r1, [r7]
   116f0:	bl	10cdc <fputs_unlocked@plt>
   116f4:	mov	r2, #5
   116f8:	movw	r1, #22468	; 0x57c4
   116fc:	movt	r1, #1
   11700:	mov	r0, r6
   11704:	bl	10d78 <dcgettext@plt>
   11708:	ldr	r1, [r7]
   1170c:	bl	10cdc <fputs_unlocked@plt>
   11710:	mov	r2, #5
   11714:	movw	r1, #22612	; 0x5854
   11718:	movt	r1, #1
   1171c:	mov	r0, r6
   11720:	bl	10d78 <dcgettext@plt>
   11724:	ldr	r1, [r7]
   11728:	bl	10cdc <fputs_unlocked@plt>
   1172c:	mov	r2, #5
   11730:	movw	r1, #22660	; 0x5884
   11734:	movt	r1, #1
   11738:	mov	r0, r6
   1173c:	bl	10d78 <dcgettext@plt>
   11740:	ldr	r1, [r7]
   11744:	bl	10cdc <fputs_unlocked@plt>
   11748:	mov	r2, #5
   1174c:	movw	r1, #22716	; 0x58bc
   11750:	movt	r1, #1
   11754:	mov	r0, r6
   11758:	bl	10d78 <dcgettext@plt>
   1175c:	ldr	r1, [r7]
   11760:	bl	10cdc <fputs_unlocked@plt>
   11764:	movw	lr, #21972	; 0x55d4
   11768:	movt	lr, #1
   1176c:	ldr	ip, [lr]
   11770:	ldr	r4, [lr, #4]
   11774:	ldrd	r8, [lr, #8]
   11778:	subs	r1, ip, #0
   1177c:	str	ip, [sp]
   11780:	ldrd	r2, [lr, #16]
   11784:	str	r4, [sp, #4]
   11788:	ldrd	r4, [lr, #24]
   1178c:	strd	r8, [sp, #8]
   11790:	ldrd	r8, [lr, #32]
   11794:	strd	r2, [sp, #16]
   11798:	ldrd	r2, [lr, #40]	; 0x28
   1179c:	strd	r4, [sp, #24]
   117a0:	ldrd	r4, [lr, #48]	; 0x30
   117a4:	strd	r8, [sp, #32]
   117a8:	strd	r2, [sp, #40]	; 0x28
   117ac:	strd	r4, [sp, #48]	; 0x30
   117b0:	movwne	r5, #22196	; 0x56b4
   117b4:	mov	r4, sp
   117b8:	movtne	r5, #1
   117bc:	bne	118b4 <close@plt+0x980>
   117c0:	ldr	r4, [r4, #4]
   117c4:	movw	r1, #23228	; 0x5abc
   117c8:	movt	r1, #1
   117cc:	mov	r2, #5
   117d0:	cmp	r4, #0
   117d4:	beq	118c8 <close@plt+0x994>
   117d8:	mov	r0, #0
   117dc:	bl	10d78 <dcgettext@plt>
   117e0:	mov	r1, r0
   117e4:	movw	r3, #23252	; 0x5ad4
   117e8:	movt	r3, #1
   117ec:	movw	r2, #23292	; 0x5afc
   117f0:	movt	r2, #1
   117f4:	mov	r0, #1
   117f8:	bl	10e80 <__printf_chk@plt>
   117fc:	mov	r1, #0
   11800:	mov	r0, #5
   11804:	bl	10ed4 <setlocale@plt>
   11808:	cmp	r0, #0
   1180c:	movweq	r5, #22196	; 0x56b4
   11810:	movteq	r5, #1
   11814:	beq	11838 <close@plt+0x904>
   11818:	movw	r1, #23308	; 0x5b0c
   1181c:	movt	r1, #1
   11820:	mov	r2, #3
   11824:	movw	r5, #22196	; 0x56b4
   11828:	movt	r5, #1
   1182c:	bl	10f1c <strncmp@plt>
   11830:	cmp	r0, #0
   11834:	bne	11980 <close@plt+0xa4c>
   11838:	mov	r2, #5
   1183c:	movw	r1, #23384	; 0x5b58
   11840:	movt	r1, #1
   11844:	mov	r0, #0
   11848:	bl	10d78 <dcgettext@plt>
   1184c:	mov	r1, r0
   11850:	movw	r3, #22196	; 0x56b4
   11854:	movt	r3, #1
   11858:	movw	r2, #23252	; 0x5ad4
   1185c:	movt	r2, #1
   11860:	mov	r0, #1
   11864:	bl	10e80 <__printf_chk@plt>
   11868:	mov	r2, #5
   1186c:	movw	r1, #23412	; 0x5b74
   11870:	movt	r1, #1
   11874:	mov	r0, #0
   11878:	bl	10d78 <dcgettext@plt>
   1187c:	movw	r2, #23580	; 0x5c1c
   11880:	movt	r2, #1
   11884:	cmp	r4, r5
   11888:	movw	r3, #22272	; 0x5700
   1188c:	movt	r3, #1
   11890:	mov	r1, r0
   11894:	moveq	r3, r2
   11898:	mov	r2, r4
   1189c:	mov	r0, #1
   118a0:	bl	10e80 <__printf_chk@plt>
   118a4:	b	116a0 <close@plt+0x76c>
   118a8:	ldr	r1, [r4, #8]!
   118ac:	cmp	r1, #0
   118b0:	beq	117c0 <close@plt+0x88c>
   118b4:	mov	r0, r5
   118b8:	bl	10ce8 <strcmp@plt>
   118bc:	cmp	r0, #0
   118c0:	bne	118a8 <close@plt+0x974>
   118c4:	b	117c0 <close@plt+0x88c>
   118c8:	mov	r0, r4
   118cc:	bl	10d78 <dcgettext@plt>
   118d0:	mov	r1, r0
   118d4:	movw	r3, #23252	; 0x5ad4
   118d8:	movt	r3, #1
   118dc:	movw	r2, #23292	; 0x5afc
   118e0:	movt	r2, #1
   118e4:	mov	r0, #1
   118e8:	bl	10e80 <__printf_chk@plt>
   118ec:	mov	r1, r4
   118f0:	mov	r0, #5
   118f4:	bl	10ed4 <setlocale@plt>
   118f8:	cmp	r0, #0
   118fc:	beq	11918 <close@plt+0x9e4>
   11900:	movw	r1, #23308	; 0x5b0c
   11904:	movt	r1, #1
   11908:	mov	r2, #3
   1190c:	bl	10f1c <strncmp@plt>
   11910:	cmp	r0, #0
   11914:	bne	11974 <close@plt+0xa40>
   11918:	mov	r2, #5
   1191c:	movw	r1, #23384	; 0x5b58
   11920:	movt	r1, #1
   11924:	mov	r0, #0
   11928:	bl	10d78 <dcgettext@plt>
   1192c:	mov	r1, r0
   11930:	movw	r3, #22196	; 0x56b4
   11934:	movt	r3, #1
   11938:	movw	r2, #23252	; 0x5ad4
   1193c:	movt	r2, #1
   11940:	mov	r0, #1
   11944:	bl	10e80 <__printf_chk@plt>
   11948:	movw	r1, #23412	; 0x5b74
   1194c:	movt	r1, #1
   11950:	mov	r2, #5
   11954:	mov	r0, #0
   11958:	bl	10d78 <dcgettext@plt>
   1195c:	movw	r4, #22196	; 0x56b4
   11960:	movt	r4, #1
   11964:	movw	r3, #23580	; 0x5c1c
   11968:	movt	r3, #1
   1196c:	mov	r1, r0
   11970:	b	11898 <close@plt+0x964>
   11974:	movw	r5, #22196	; 0x56b4
   11978:	movt	r5, #1
   1197c:	mov	r4, r5
   11980:	mov	r2, #5
   11984:	movw	r1, #23312	; 0x5b10
   11988:	movt	r1, #1
   1198c:	mov	r0, #0
   11990:	bl	10d78 <dcgettext@plt>
   11994:	ldr	r1, [r7]
   11998:	bl	10cdc <fputs_unlocked@plt>
   1199c:	b	11838 <close@plt+0x904>
   119a0:	mov	r0, #1
   119a4:	b	11650 <close@plt+0x71c>
   119a8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   119ac:	mov	r5, r1
   119b0:	mov	r4, r2
   119b4:	strd	r6, [sp, #8]
   119b8:	mov	r7, r3
   119bc:	strd	r8, [sp, #16]
   119c0:	strd	sl, [sp, #24]
   119c4:	mov	sl, r0
   119c8:	str	lr, [sp, #32]
   119cc:	sub	sp, sp, #12
   119d0:	str	r2, [sp]
   119d4:	bl	10e44 <strlen@plt>
   119d8:	ldr	fp, [r5]
   119dc:	cmp	fp, #0
   119e0:	beq	11ab0 <close@plt+0xb7c>
   119e4:	mov	r6, #0
   119e8:	mov	r8, r0
   119ec:	mvn	r9, #0
   119f0:	str	r6, [sp, #4]
   119f4:	b	11a20 <close@plt+0xaec>
   119f8:	bl	10d60 <memcmp@plt>
   119fc:	ldr	r3, [sp, #4]
   11a00:	cmp	r0, #0
   11a04:	movne	r3, #1
   11a08:	str	r3, [sp, #4]
   11a0c:	ldr	fp, [r5, #4]!
   11a10:	add	r6, r6, #1
   11a14:	add	r4, r4, r7
   11a18:	cmp	fp, #0
   11a1c:	beq	11a7c <close@plt+0xb48>
   11a20:	mov	r2, r8
   11a24:	mov	r1, sl
   11a28:	mov	r0, fp
   11a2c:	bl	10f1c <strncmp@plt>
   11a30:	cmp	r0, #0
   11a34:	mov	r0, fp
   11a38:	bne	11a0c <close@plt+0xad8>
   11a3c:	bl	10e44 <strlen@plt>
   11a40:	ldr	r3, [sp]
   11a44:	cmp	r0, r8
   11a48:	mov	r2, r7
   11a4c:	mov	r1, r4
   11a50:	mla	r0, r7, r9, r3
   11a54:	beq	11aa8 <close@plt+0xb74>
   11a58:	cmn	r9, #1
   11a5c:	moveq	r9, r6
   11a60:	beq	11a0c <close@plt+0xad8>
   11a64:	ldr	r3, [sp]
   11a68:	cmp	r3, #0
   11a6c:	bne	119f8 <close@plt+0xac4>
   11a70:	mov	r3, #1
   11a74:	str	r3, [sp, #4]
   11a78:	b	11a0c <close@plt+0xad8>
   11a7c:	ldr	r3, [sp, #4]
   11a80:	cmp	r3, #0
   11a84:	mvnne	r9, #1
   11a88:	mov	r0, r9
   11a8c:	add	sp, sp, #12
   11a90:	ldrd	r4, [sp]
   11a94:	ldrd	r6, [sp, #8]
   11a98:	ldrd	r8, [sp, #16]
   11a9c:	ldrd	sl, [sp, #24]
   11aa0:	add	sp, sp, #32
   11aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   11aa8:	mov	r9, r6
   11aac:	b	11a88 <close@plt+0xb54>
   11ab0:	mvn	r9, #0
   11ab4:	b	11a88 <close@plt+0xb54>
   11ab8:	strd	r4, [sp, #-16]!
   11abc:	str	r6, [sp, #8]
   11ac0:	mov	r6, r0
   11ac4:	ldr	r0, [r1]
   11ac8:	str	lr, [sp, #12]
   11acc:	cmp	r0, #0
   11ad0:	beq	11b14 <close@plt+0xbe0>
   11ad4:	mov	r4, r1
   11ad8:	mov	r5, #0
   11adc:	b	11af0 <close@plt+0xbbc>
   11ae0:	ldr	r0, [r4, #4]!
   11ae4:	add	r5, r5, #1
   11ae8:	cmp	r0, #0
   11aec:	beq	11b14 <close@plt+0xbe0>
   11af0:	mov	r1, r6
   11af4:	bl	10ce8 <strcmp@plt>
   11af8:	cmp	r0, #0
   11afc:	bne	11ae0 <close@plt+0xbac>
   11b00:	mov	r0, r5
   11b04:	ldrd	r4, [sp]
   11b08:	ldr	r6, [sp, #8]
   11b0c:	add	sp, sp, #12
   11b10:	pop	{pc}		; (ldr pc, [sp], #4)
   11b14:	ldrd	r4, [sp]
   11b18:	mvn	r0, #0
   11b1c:	ldr	r6, [sp, #8]
   11b20:	add	sp, sp, #12
   11b24:	pop	{pc}		; (ldr pc, [sp], #4)
   11b28:	cmn	r2, #1
   11b2c:	strd	r4, [sp, #-16]!
   11b30:	mov	r5, r1
   11b34:	movweq	r1, #23796	; 0x5cf4
   11b38:	movwne	r1, #23824	; 0x5d10
   11b3c:	str	r6, [sp, #8]
   11b40:	movteq	r1, #1
   11b44:	movtne	r1, #1
   11b48:	str	lr, [sp, #12]
   11b4c:	mov	r6, r0
   11b50:	sub	sp, sp, #8
   11b54:	mov	r2, #5
   11b58:	mov	r0, #0
   11b5c:	bl	10d78 <dcgettext@plt>
   11b60:	mov	r4, r0
   11b64:	mov	r2, r5
   11b68:	mov	r1, #8
   11b6c:	mov	r0, #0
   11b70:	bl	14210 <close@plt+0x32dc>
   11b74:	mov	r5, r0
   11b78:	mov	r1, r6
   11b7c:	mov	r0, #1
   11b80:	bl	14540 <close@plt+0x360c>
   11b84:	mov	r1, #0
   11b88:	mov	r3, r5
   11b8c:	str	r0, [sp]
   11b90:	mov	r2, r4
   11b94:	mov	r0, r1
   11b98:	bl	10de4 <error@plt>
   11b9c:	add	sp, sp, #8
   11ba0:	ldrd	r4, [sp]
   11ba4:	ldr	r6, [sp, #8]
   11ba8:	add	sp, sp, #12
   11bac:	pop	{pc}		; (ldr pc, [sp], #4)
   11bb0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11bb4:	mov	r4, r1
   11bb8:	movw	r1, #23856	; 0x5d30
   11bbc:	movt	r1, #1
   11bc0:	strd	r6, [sp, #8]
   11bc4:	mov	r6, r0
   11bc8:	mov	r7, r2
   11bcc:	mov	r0, #0
   11bd0:	strd	r8, [sp, #16]
   11bd4:	mov	r2, #5
   11bd8:	strd	sl, [sp, #24]
   11bdc:	movw	sl, #29000	; 0x7148
   11be0:	movt	sl, #2
   11be4:	str	lr, [sp, #32]
   11be8:	sub	sp, sp, #12
   11bec:	bl	10d78 <dcgettext@plt>
   11bf0:	ldr	r1, [sl]
   11bf4:	bl	10cdc <fputs_unlocked@plt>
   11bf8:	ldr	fp, [r6]
   11bfc:	cmp	fp, #0
   11c00:	beq	11ca0 <close@plt+0xd6c>
   11c04:	movw	r3, #23880	; 0x5d48
   11c08:	movt	r3, #1
   11c0c:	mov	r9, #0
   11c10:	str	r3, [sp]
   11c14:	movw	r3, #23888	; 0x5d50
   11c18:	movt	r3, #1
   11c1c:	mov	r5, r9
   11c20:	str	r3, [sp, #4]
   11c24:	b	11c5c <close@plt+0xd28>
   11c28:	mov	r0, fp
   11c2c:	mov	r9, r4
   11c30:	bl	14550 <close@plt+0x361c>
   11c34:	mov	r3, r0
   11c38:	mov	r1, #1
   11c3c:	ldr	r2, [sp]
   11c40:	mov	r0, r8
   11c44:	bl	10e98 <__fprintf_chk@plt>
   11c48:	ldr	fp, [r6, #4]!
   11c4c:	add	r5, r5, #1
   11c50:	add	r4, r4, r7
   11c54:	cmp	fp, #0
   11c58:	beq	11ca0 <close@plt+0xd6c>
   11c5c:	cmp	r5, #0
   11c60:	mov	r1, r4
   11c64:	ldr	r8, [sl]
   11c68:	mov	r2, r7
   11c6c:	mov	r0, r9
   11c70:	beq	11c28 <close@plt+0xcf4>
   11c74:	bl	10d60 <memcmp@plt>
   11c78:	cmp	r0, #0
   11c7c:	bne	11c28 <close@plt+0xcf4>
   11c80:	mov	r0, fp
   11c84:	bl	14550 <close@plt+0x361c>
   11c88:	mov	r3, r0
   11c8c:	mov	r1, #1
   11c90:	ldr	r2, [sp, #4]
   11c94:	mov	r0, r8
   11c98:	bl	10e98 <__fprintf_chk@plt>
   11c9c:	b	11c48 <close@plt+0xd14>
   11ca0:	ldr	r0, [sl]
   11ca4:	ldr	r3, [r0, #20]
   11ca8:	ldr	r2, [r0, #24]
   11cac:	cmp	r3, r2
   11cb0:	bcs	11ce0 <close@plt+0xdac>
   11cb4:	add	r1, r3, #1
   11cb8:	mov	r2, #10
   11cbc:	str	r1, [r0, #20]
   11cc0:	strb	r2, [r3]
   11cc4:	add	sp, sp, #12
   11cc8:	ldrd	r4, [sp]
   11ccc:	ldrd	r6, [sp, #8]
   11cd0:	ldrd	r8, [sp, #16]
   11cd4:	ldrd	sl, [sp, #24]
   11cd8:	add	sp, sp, #32
   11cdc:	pop	{pc}		; (ldr pc, [sp], #4)
   11ce0:	mov	r1, #10
   11ce4:	add	sp, sp, #12
   11ce8:	ldrd	r4, [sp]
   11cec:	ldrd	r6, [sp, #8]
   11cf0:	ldrd	r8, [sp, #16]
   11cf4:	ldrd	sl, [sp, #24]
   11cf8:	ldr	lr, [sp, #32]
   11cfc:	add	sp, sp, #36	; 0x24
   11d00:	b	10ec8 <__overflow@plt>
   11d04:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11d08:	mov	r5, r1
   11d0c:	mov	r4, r2
   11d10:	ldrb	ip, [sp, #32]
   11d14:	strd	r6, [sp, #8]
   11d18:	mov	r7, r0
   11d1c:	mov	r6, r3
   11d20:	str	r8, [sp, #16]
   11d24:	str	lr, [sp, #20]
   11d28:	cmp	ip, #0
   11d2c:	beq	11d60 <close@plt+0xe2c>
   11d30:	mov	r2, r3
   11d34:	mov	r1, r4
   11d38:	ldr	r3, [sp, #24]
   11d3c:	mov	r0, r5
   11d40:	bl	119a8 <close@plt+0xa74>
   11d44:	cmp	r0, #0
   11d48:	blt	11d70 <close@plt+0xe3c>
   11d4c:	ldrd	r4, [sp]
   11d50:	ldrd	r6, [sp, #8]
   11d54:	ldr	r8, [sp, #16]
   11d58:	add	sp, sp, #20
   11d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d60:	mov	r1, r2
   11d64:	mov	r0, r5
   11d68:	bl	11ab8 <close@plt+0xb84>
   11d6c:	b	11d44 <close@plt+0xe10>
   11d70:	mov	r2, r0
   11d74:	mov	r1, r5
   11d78:	mov	r0, r7
   11d7c:	bl	11b28 <close@plt+0xbf4>
   11d80:	mov	r0, r4
   11d84:	mov	r1, r6
   11d88:	ldr	r2, [sp, #24]
   11d8c:	bl	11bb0 <close@plt+0xc7c>
   11d90:	ldr	r3, [sp, #28]
   11d94:	blx	r3
   11d98:	mvn	r0, #0
   11d9c:	b	11d4c <close@plt+0xe18>
   11da0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11da4:	strd	r6, [sp, #8]
   11da8:	ldr	r7, [r1]
   11dac:	str	r8, [sp, #16]
   11db0:	str	lr, [sp, #20]
   11db4:	cmp	r7, #0
   11db8:	beq	11df8 <close@plt+0xec4>
   11dbc:	mov	r6, r3
   11dc0:	mov	r8, r0
   11dc4:	mov	r4, r2
   11dc8:	mov	r5, r1
   11dcc:	b	11ddc <close@plt+0xea8>
   11dd0:	ldr	r7, [r5, #4]!
   11dd4:	cmp	r7, #0
   11dd8:	beq	11df8 <close@plt+0xec4>
   11ddc:	mov	r1, r4
   11de0:	mov	r2, r6
   11de4:	mov	r0, r8
   11de8:	add	r4, r4, r6
   11dec:	bl	10d60 <memcmp@plt>
   11df0:	cmp	r0, #0
   11df4:	bne	11dd0 <close@plt+0xe9c>
   11df8:	mov	r0, r7
   11dfc:	ldrd	r4, [sp]
   11e00:	ldrd	r6, [sp, #8]
   11e04:	ldr	r8, [sp, #16]
   11e08:	add	sp, sp, #20
   11e0c:	pop	{pc}		; (ldr pc, [sp], #4)
   11e10:	movw	r3, #29036	; 0x716c
   11e14:	movt	r3, #2
   11e18:	str	r0, [r3]
   11e1c:	bx	lr
   11e20:	movw	r3, #29036	; 0x716c
   11e24:	movt	r3, #2
   11e28:	strb	r0, [r3, #4]
   11e2c:	bx	lr
   11e30:	movw	r3, #29012	; 0x7154
   11e34:	movt	r3, #2
   11e38:	strd	r4, [sp, #-16]!
   11e3c:	ldr	r0, [r3]
   11e40:	str	r6, [sp, #8]
   11e44:	str	lr, [sp, #12]
   11e48:	sub	sp, sp, #8
   11e4c:	bl	150cc <close@plt+0x4198>
   11e50:	cmp	r0, #0
   11e54:	beq	11e80 <close@plt+0xf4c>
   11e58:	movw	r4, #29036	; 0x716c
   11e5c:	movt	r4, #2
   11e60:	ldrb	r6, [r4, #4]
   11e64:	bl	10e50 <__errno_location@plt>
   11e68:	mov	r5, r0
   11e6c:	cmp	r6, #0
   11e70:	beq	11eac <close@plt+0xf78>
   11e74:	ldr	r3, [r0]
   11e78:	cmp	r3, #32
   11e7c:	bne	11eac <close@plt+0xf78>
   11e80:	movw	r3, #29000	; 0x7148
   11e84:	movt	r3, #2
   11e88:	ldr	r0, [r3]
   11e8c:	bl	150cc <close@plt+0x4198>
   11e90:	cmp	r0, #0
   11e94:	bne	11ef4 <close@plt+0xfc0>
   11e98:	add	sp, sp, #8
   11e9c:	ldrd	r4, [sp]
   11ea0:	ldr	r6, [sp, #8]
   11ea4:	add	sp, sp, #12
   11ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   11eac:	movw	r1, #23896	; 0x5d58
   11eb0:	movt	r1, #1
   11eb4:	mov	r2, #5
   11eb8:	mov	r0, #0
   11ebc:	bl	10d78 <dcgettext@plt>
   11ec0:	mov	r6, r0
   11ec4:	ldr	r0, [r4]
   11ec8:	cmp	r0, #0
   11ecc:	beq	11f04 <close@plt+0xfd0>
   11ed0:	ldr	r4, [r5]
   11ed4:	bl	14364 <close@plt+0x3430>
   11ed8:	mov	r3, r0
   11edc:	movw	r2, #23908	; 0x5d64
   11ee0:	movt	r2, #1
   11ee4:	mov	r0, #0
   11ee8:	str	r6, [sp]
   11eec:	mov	r1, r4
   11ef0:	bl	10de4 <error@plt>
   11ef4:	movw	r3, #28916	; 0x70f4
   11ef8:	movt	r3, #2
   11efc:	ldr	r0, [r3]
   11f00:	bl	10d24 <_exit@plt>
   11f04:	mov	r3, r6
   11f08:	movw	r2, #23912	; 0x5d68
   11f0c:	movt	r2, #1
   11f10:	ldr	r1, [r5]
   11f14:	bl	10de4 <error@plt>
   11f18:	b	11ef4 <close@plt+0xfc0>
   11f1c:	b	10cf4 <posix_fadvise64@plt>
   11f20:	cmp	r0, #0
   11f24:	bxeq	lr
   11f28:	str	r4, [sp, #-16]!
   11f2c:	mov	r4, r1
   11f30:	strd	r6, [sp, #4]
   11f34:	mov	r6, #0
   11f38:	mov	r7, #0
   11f3c:	str	lr, [sp, #12]
   11f40:	sub	sp, sp, #16
   11f44:	bl	10e8c <fileno@plt>
   11f48:	mov	r2, r6
   11f4c:	mov	r3, r7
   11f50:	strd	r6, [sp]
   11f54:	str	r4, [sp, #8]
   11f58:	bl	10cf4 <posix_fadvise64@plt>
   11f5c:	add	sp, sp, #16
   11f60:	ldr	r4, [sp]
   11f64:	ldrd	r6, [sp, #4]
   11f68:	add	sp, sp, #12
   11f6c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f70:	strd	r4, [sp, #-12]!
   11f74:	mov	r4, r0
   11f78:	str	lr, [sp, #8]
   11f7c:	sub	sp, sp, #12
   11f80:	bl	10e8c <fileno@plt>
   11f84:	cmp	r0, #0
   11f88:	mov	r0, r4
   11f8c:	blt	12010 <close@plt+0x10dc>
   11f90:	bl	10e08 <__freading@plt>
   11f94:	cmp	r0, #0
   11f98:	bne	11fdc <close@plt+0x10a8>
   11f9c:	mov	r0, r4
   11fa0:	bl	12024 <close@plt+0x10f0>
   11fa4:	cmp	r0, #0
   11fa8:	beq	1200c <close@plt+0x10d8>
   11fac:	bl	10e50 <__errno_location@plt>
   11fb0:	mov	r5, r0
   11fb4:	mov	r0, r4
   11fb8:	ldr	r4, [r5]
   11fbc:	bl	10ea4 <fclose@plt>
   11fc0:	cmp	r4, #0
   11fc4:	mvnne	r0, #0
   11fc8:	strne	r4, [r5]
   11fcc:	add	sp, sp, #12
   11fd0:	ldrd	r4, [sp]
   11fd4:	add	sp, sp, #8
   11fd8:	pop	{pc}		; (ldr pc, [sp], #4)
   11fdc:	mov	r0, r4
   11fe0:	bl	10e8c <fileno@plt>
   11fe4:	mov	r1, #1
   11fe8:	mov	r2, #0
   11fec:	mov	r3, #0
   11ff0:	str	r1, [sp]
   11ff4:	bl	10db4 <lseek64@plt>
   11ff8:	mvn	r3, #0
   11ffc:	mvn	r2, #0
   12000:	cmp	r1, r3
   12004:	cmpeq	r0, r2
   12008:	bne	11f9c <close@plt+0x1068>
   1200c:	mov	r0, r4
   12010:	add	sp, sp, #12
   12014:	ldrd	r4, [sp]
   12018:	ldr	lr, [sp, #8]
   1201c:	add	sp, sp, #12
   12020:	b	10ea4 <fclose@plt>
   12024:	str	r4, [sp, #-8]!
   12028:	subs	r4, r0, #0
   1202c:	str	lr, [sp, #4]
   12030:	sub	sp, sp, #8
   12034:	beq	12050 <close@plt+0x111c>
   12038:	bl	10e08 <__freading@plt>
   1203c:	cmp	r0, #0
   12040:	beq	12050 <close@plt+0x111c>
   12044:	ldr	r3, [r4]
   12048:	tst	r3, #256	; 0x100
   1204c:	bne	12068 <close@plt+0x1134>
   12050:	mov	r0, r4
   12054:	add	sp, sp, #8
   12058:	ldr	r4, [sp]
   1205c:	ldr	lr, [sp, #4]
   12060:	add	sp, sp, #8
   12064:	b	10d0c <fflush@plt>
   12068:	mov	r1, #1
   1206c:	mov	r2, #0
   12070:	mov	r3, #0
   12074:	mov	r0, r4
   12078:	str	r1, [sp]
   1207c:	bl	12190 <close@plt+0x125c>
   12080:	b	12050 <close@plt+0x111c>
   12084:	strd	r4, [sp, #-16]!
   12088:	mov	r5, r1
   1208c:	str	r6, [sp, #8]
   12090:	str	lr, [sp, #12]
   12094:	bl	10f04 <fopen64@plt>
   12098:	subs	r4, r0, #0
   1209c:	beq	120ac <close@plt+0x1178>
   120a0:	bl	10e8c <fileno@plt>
   120a4:	cmp	r0, #2
   120a8:	bls	120c0 <close@plt+0x118c>
   120ac:	mov	r0, r4
   120b0:	ldrd	r4, [sp]
   120b4:	ldr	r6, [sp, #8]
   120b8:	add	sp, sp, #12
   120bc:	pop	{pc}		; (ldr pc, [sp], #4)
   120c0:	bl	14568 <close@plt+0x3634>
   120c4:	subs	r6, r0, #0
   120c8:	blt	12110 <close@plt+0x11dc>
   120cc:	mov	r0, r4
   120d0:	bl	11f70 <close@plt+0x103c>
   120d4:	cmp	r0, #0
   120d8:	bne	120f0 <close@plt+0x11bc>
   120dc:	mov	r1, r5
   120e0:	mov	r0, r6
   120e4:	bl	10cc4 <fdopen@plt>
   120e8:	subs	r4, r0, #0
   120ec:	bne	120ac <close@plt+0x1178>
   120f0:	bl	10e50 <__errno_location@plt>
   120f4:	mov	r5, r0
   120f8:	mov	r0, r6
   120fc:	ldr	r6, [r5]
   12100:	mov	r4, #0
   12104:	bl	10f34 <close@plt>
   12108:	str	r6, [r5]
   1210c:	b	120ac <close@plt+0x1178>
   12110:	bl	10e50 <__errno_location@plt>
   12114:	mov	r5, r0
   12118:	mov	r0, r4
   1211c:	ldr	r6, [r5]
   12120:	mov	r4, #0
   12124:	bl	11f70 <close@plt+0x103c>
   12128:	str	r6, [r5]
   1212c:	b	120ac <close@plt+0x1178>
   12130:	strd	r4, [sp, #-12]!
   12134:	mov	r5, r0
   12138:	str	lr, [sp, #8]
   1213c:	sub	sp, sp, #12
   12140:	bl	10e50 <__errno_location@plt>
   12144:	mov	r4, r0
   12148:	mov	r2, #0
   1214c:	ldr	r3, [r4]
   12150:	mov	r0, r5
   12154:	str	r2, [r4]
   12158:	str	r3, [sp]
   1215c:	str	r3, [sp, #4]
   12160:	bl	10d18 <free@plt>
   12164:	ldr	r3, [r4]
   12168:	add	r2, sp, #8
   1216c:	clz	r3, r3
   12170:	lsr	r3, r3, #5
   12174:	add	r3, r2, r3, lsl #2
   12178:	ldr	r3, [r3, #-8]
   1217c:	str	r3, [r4]
   12180:	add	sp, sp, #12
   12184:	ldrd	r4, [sp]
   12188:	add	sp, sp, #8
   1218c:	pop	{pc}		; (ldr pc, [sp], #4)
   12190:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12194:	mov	r4, r0
   12198:	ldr	ip, [r0, #4]
   1219c:	strd	r6, [sp, #8]
   121a0:	str	lr, [sp, #20]
   121a4:	ldr	lr, [r0, #8]
   121a8:	str	r8, [sp, #16]
   121ac:	sub	sp, sp, #8
   121b0:	ldr	r5, [sp, #32]
   121b4:	cmp	lr, ip
   121b8:	beq	121e0 <close@plt+0x12ac>
   121bc:	mov	r0, r4
   121c0:	str	r5, [sp, #32]
   121c4:	add	sp, sp, #8
   121c8:	ldrd	r4, [sp]
   121cc:	ldrd	r6, [sp, #8]
   121d0:	ldr	r8, [sp, #16]
   121d4:	ldr	lr, [sp, #20]
   121d8:	add	sp, sp, #24
   121dc:	b	10eb0 <fseeko64@plt>
   121e0:	ldr	ip, [r0, #16]
   121e4:	ldr	lr, [r0, #20]
   121e8:	cmp	lr, ip
   121ec:	bne	121bc <close@plt+0x1288>
   121f0:	ldr	r8, [r0, #36]	; 0x24
   121f4:	cmp	r8, #0
   121f8:	bne	121bc <close@plt+0x1288>
   121fc:	mov	r6, r2
   12200:	mov	r7, r3
   12204:	bl	10e8c <fileno@plt>
   12208:	mov	r2, r6
   1220c:	mov	r3, r7
   12210:	str	r5, [sp]
   12214:	bl	10db4 <lseek64@plt>
   12218:	mvn	r3, #0
   1221c:	mvn	r2, #0
   12220:	cmp	r1, r3
   12224:	cmpeq	r0, r2
   12228:	beq	12258 <close@plt+0x1324>
   1222c:	ldr	r3, [r4]
   12230:	strd	r0, [r4, #80]	; 0x50
   12234:	bic	r3, r3, #16
   12238:	str	r3, [r4]
   1223c:	mov	r0, r8
   12240:	add	sp, sp, #8
   12244:	ldrd	r4, [sp]
   12248:	ldrd	r6, [sp, #8]
   1224c:	ldr	r8, [sp, #16]
   12250:	add	sp, sp, #20
   12254:	pop	{pc}		; (ldr pc, [sp], #4)
   12258:	mvn	r8, #0
   1225c:	b	1223c <close@plt+0x1308>
   12260:	strd	r4, [sp, #-16]!
   12264:	subs	r4, r0, #0
   12268:	str	r6, [sp, #8]
   1226c:	str	lr, [sp, #12]
   12270:	beq	12308 <close@plt+0x13d4>
   12274:	mov	r1, #47	; 0x2f
   12278:	bl	10ee0 <strrchr@plt>
   1227c:	subs	r5, r0, #0
   12280:	beq	122e0 <close@plt+0x13ac>
   12284:	add	r6, r5, #1
   12288:	sub	r3, r6, r4
   1228c:	cmp	r3, #6
   12290:	ble	122e0 <close@plt+0x13ac>
   12294:	movw	r1, #23972	; 0x5da4
   12298:	movt	r1, #1
   1229c:	mov	r2, #7
   122a0:	sub	r0, r5, #6
   122a4:	bl	10f1c <strncmp@plt>
   122a8:	cmp	r0, #0
   122ac:	bne	122e0 <close@plt+0x13ac>
   122b0:	movw	r1, #23980	; 0x5dac
   122b4:	movt	r1, #1
   122b8:	mov	r2, #3
   122bc:	mov	r0, r6
   122c0:	bl	10f1c <strncmp@plt>
   122c4:	cmp	r0, #0
   122c8:	movne	r4, r6
   122cc:	bne	122e0 <close@plt+0x13ac>
   122d0:	add	r4, r5, #4
   122d4:	movw	r3, #28984	; 0x7138
   122d8:	movt	r3, #2
   122dc:	str	r4, [r3]
   122e0:	movw	r2, #29044	; 0x7174
   122e4:	movt	r2, #2
   122e8:	ldr	r6, [sp, #8]
   122ec:	movw	r3, #28988	; 0x713c
   122f0:	movt	r3, #2
   122f4:	str	r4, [r2]
   122f8:	str	r4, [r3]
   122fc:	ldrd	r4, [sp]
   12300:	add	sp, sp, #12
   12304:	pop	{pc}		; (ldr pc, [sp], #4)
   12308:	movw	r3, #29000	; 0x7148
   1230c:	movt	r3, #2
   12310:	movw	r0, #23916	; 0x5d6c
   12314:	movt	r0, #1
   12318:	ldr	r3, [r3]
   1231c:	mov	r2, #55	; 0x37
   12320:	mov	r1, #1
   12324:	bl	10da8 <fwrite@plt>
   12328:	bl	10f28 <abort@plt>
   1232c:	strd	r4, [sp, #-16]!
   12330:	mov	r4, #0
   12334:	mov	r5, #0
   12338:	cmp	r1, #10
   1233c:	str	r6, [sp, #8]
   12340:	strd	r4, [r0]
   12344:	strd	r4, [r0, #8]
   12348:	str	lr, [sp, #12]
   1234c:	strd	r4, [r0, #16]
   12350:	strd	r4, [r0, #24]
   12354:	strd	r4, [r0, #32]
   12358:	strd	r4, [r0, #40]	; 0x28
   1235c:	beq	12374 <close@plt+0x1440>
   12360:	ldrd	r4, [sp]
   12364:	str	r1, [r0]
   12368:	ldr	r6, [sp, #8]
   1236c:	add	sp, sp, #12
   12370:	pop	{pc}		; (ldr pc, [sp], #4)
   12374:	bl	10f28 <abort@plt>
   12378:	mov	r2, #5
   1237c:	strd	r4, [sp, #-16]!
   12380:	mov	r5, r0
   12384:	str	r6, [sp, #8]
   12388:	mov	r6, r1
   1238c:	mov	r1, r0
   12390:	mov	r0, #0
   12394:	str	lr, [sp, #12]
   12398:	bl	10d78 <dcgettext@plt>
   1239c:	cmp	r5, r0
   123a0:	mov	r4, r0
   123a4:	beq	123bc <close@plt+0x1488>
   123a8:	mov	r0, r4
   123ac:	ldrd	r4, [sp]
   123b0:	ldr	r6, [sp, #8]
   123b4:	add	sp, sp, #12
   123b8:	pop	{pc}		; (ldr pc, [sp], #4)
   123bc:	bl	1533c <close@plt+0x4408>
   123c0:	ldrb	r3, [r0]
   123c4:	bic	r3, r3, #32
   123c8:	cmp	r3, #85	; 0x55
   123cc:	bne	12434 <close@plt+0x1500>
   123d0:	ldrb	r3, [r0, #1]
   123d4:	bic	r3, r3, #32
   123d8:	cmp	r3, #84	; 0x54
   123dc:	bne	124b4 <close@plt+0x1580>
   123e0:	ldrb	r3, [r0, #2]
   123e4:	bic	r3, r3, #32
   123e8:	cmp	r3, #70	; 0x46
   123ec:	bne	124b4 <close@plt+0x1580>
   123f0:	ldrb	r3, [r0, #3]
   123f4:	cmp	r3, #45	; 0x2d
   123f8:	bne	124b4 <close@plt+0x1580>
   123fc:	ldrb	r3, [r0, #4]
   12400:	cmp	r3, #56	; 0x38
   12404:	bne	124b4 <close@plt+0x1580>
   12408:	ldrb	r3, [r0, #5]
   1240c:	cmp	r3, #0
   12410:	bne	124b4 <close@plt+0x1580>
   12414:	ldrb	r2, [r4]
   12418:	movw	r3, #24072	; 0x5e08
   1241c:	movt	r3, #1
   12420:	movw	r4, #24084	; 0x5e14
   12424:	movt	r4, #1
   12428:	cmp	r2, #96	; 0x60
   1242c:	movne	r4, r3
   12430:	b	123a8 <close@plt+0x1474>
   12434:	cmp	r3, #71	; 0x47
   12438:	bne	124b4 <close@plt+0x1580>
   1243c:	ldrb	r3, [r0, #1]
   12440:	bic	r3, r3, #32
   12444:	cmp	r3, #66	; 0x42
   12448:	bne	124b4 <close@plt+0x1580>
   1244c:	ldrb	r3, [r0, #2]
   12450:	cmp	r3, #49	; 0x31
   12454:	bne	124b4 <close@plt+0x1580>
   12458:	ldrb	r3, [r0, #3]
   1245c:	cmp	r3, #56	; 0x38
   12460:	bne	124b4 <close@plt+0x1580>
   12464:	ldrb	r3, [r0, #4]
   12468:	cmp	r3, #48	; 0x30
   1246c:	bne	124b4 <close@plt+0x1580>
   12470:	ldrb	r3, [r0, #5]
   12474:	cmp	r3, #51	; 0x33
   12478:	bne	124b4 <close@plt+0x1580>
   1247c:	ldrb	r3, [r0, #6]
   12480:	cmp	r3, #48	; 0x30
   12484:	bne	124b4 <close@plt+0x1580>
   12488:	ldrb	r3, [r0, #7]
   1248c:	cmp	r3, #0
   12490:	bne	124b4 <close@plt+0x1580>
   12494:	ldrb	r2, [r4]
   12498:	movw	r3, #24076	; 0x5e0c
   1249c:	movt	r3, #1
   124a0:	movw	r4, #24080	; 0x5e10
   124a4:	movt	r4, #1
   124a8:	cmp	r2, #96	; 0x60
   124ac:	movne	r4, r3
   124b0:	b	123a8 <close@plt+0x1474>
   124b4:	movw	r3, #24088	; 0x5e18
   124b8:	movt	r3, #1
   124bc:	cmp	r6, #9
   124c0:	movw	r4, #24068	; 0x5e04
   124c4:	movt	r4, #1
   124c8:	movne	r4, r3
   124cc:	b	123a8 <close@plt+0x1474>
   124d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   124d4:	strd	r6, [sp, #8]
   124d8:	strd	r8, [sp, #16]
   124dc:	strd	sl, [sp, #24]
   124e0:	mov	fp, r0
   124e4:	mov	sl, r1
   124e8:	str	lr, [sp, #32]
   124ec:	sub	sp, sp, #116	; 0x74
   124f0:	ldr	r8, [sp, #152]	; 0x98
   124f4:	str	r3, [sp, #28]
   124f8:	ldr	r3, [sp, #156]	; 0x9c
   124fc:	str	r2, [sp, #32]
   12500:	and	r4, r3, #2
   12504:	ubfx	r3, r3, #1, #1
   12508:	str	r3, [sp, #44]	; 0x2c
   1250c:	bl	10dc0 <__ctype_get_mb_cur_max@plt>
   12510:	str	r0, [sp, #64]	; 0x40
   12514:	cmp	r8, #10
   12518:	ldrls	pc, [pc, r8, lsl #2]
   1251c:	b	13c8c <close@plt+0x2d58>
   12520:	andeq	r2, r1, r4, lsr #18
   12524:	andeq	r2, r1, r0, asr #19
   12528:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1252c:	andeq	r2, r1, r0, ror #19
   12530:	andeq	r2, r1, r8, lsl #17
   12534:	ldrdeq	r2, [r1], -r4
   12538:	andeq	r2, r1, r4, asr r9
   1253c:	muleq	r1, r0, r9
   12540:	andeq	r2, r1, ip, asr #10
   12544:	andeq	r2, r1, ip, asr #10
   12548:	andeq	r2, r1, ip, asr #10
   1254c:	cmp	r8, #10
   12550:	beq	1257c <close@plt+0x1648>
   12554:	mov	r1, r8
   12558:	movw	r0, #24092	; 0x5e1c
   1255c:	movt	r0, #1
   12560:	bl	12378 <close@plt+0x1444>
   12564:	mov	r1, r8
   12568:	str	r0, [sp, #164]	; 0xa4
   1256c:	movw	r0, #24088	; 0x5e18
   12570:	movt	r0, #1
   12574:	bl	12378 <close@plt+0x1444>
   12578:	str	r0, [sp, #168]	; 0xa8
   1257c:	cmp	r4, #0
   12580:	movne	r4, #0
   12584:	beq	13968 <close@plt+0x2a34>
   12588:	mov	r3, #1
   1258c:	mov	r5, #0
   12590:	ldr	r0, [sp, #168]	; 0xa8
   12594:	str	r3, [sp, #36]	; 0x24
   12598:	str	r3, [sp, #40]	; 0x28
   1259c:	str	r5, [sp, #68]	; 0x44
   125a0:	bl	10e44 <strlen@plt>
   125a4:	ldr	r3, [sp, #168]	; 0xa8
   125a8:	str	r5, [sp, #48]	; 0x30
   125ac:	str	r0, [sp, #56]	; 0x38
   125b0:	str	r3, [sp, #60]	; 0x3c
   125b4:	str	r5, [sp, #72]	; 0x48
   125b8:	str	r8, [sp, #152]	; 0x98
   125bc:	mov	r8, fp
   125c0:	mov	r9, #0
   125c4:	ldr	fp, [sp, #152]	; 0x98
   125c8:	ldr	r3, [sp, #28]
   125cc:	cmn	r3, #1
   125d0:	beq	12b30 <close@plt+0x1bfc>
   125d4:	ldr	r3, [sp, #28]
   125d8:	subs	r6, r3, r9
   125dc:	movne	r6, #1
   125e0:	cmp	r6, #0
   125e4:	beq	12b48 <close@plt+0x1c14>
   125e8:	ldr	r0, [sp, #32]
   125ec:	ldr	r7, [sp, #40]	; 0x28
   125f0:	add	r3, r0, r9
   125f4:	cmp	fp, #2
   125f8:	moveq	r7, #0
   125fc:	andne	r7, r7, #1
   12600:	str	r3, [sp, #52]	; 0x34
   12604:	cmp	r7, #0
   12608:	beq	12fe4 <close@plt+0x20b0>
   1260c:	ldr	r2, [sp, #56]	; 0x38
   12610:	cmp	r2, #0
   12614:	beq	13280 <close@plt+0x234c>
   12618:	ldr	r1, [sp, #28]
   1261c:	cmp	r2, #1
   12620:	mov	r3, r2
   12624:	movls	r3, #0
   12628:	movhi	r3, #1
   1262c:	add	r5, r9, r2
   12630:	cmn	r1, #1
   12634:	movne	r3, #0
   12638:	cmp	r3, #0
   1263c:	beq	12648 <close@plt+0x1714>
   12640:	bl	10e44 <strlen@plt>
   12644:	str	r0, [sp, #28]
   12648:	ldr	r3, [sp, #28]
   1264c:	cmp	r5, r3
   12650:	bhi	13280 <close@plt+0x234c>
   12654:	ldr	r0, [sp, #52]	; 0x34
   12658:	ldr	r2, [sp, #56]	; 0x38
   1265c:	ldr	r1, [sp, #60]	; 0x3c
   12660:	bl	10d60 <memcmp@plt>
   12664:	cmp	r0, #0
   12668:	bne	13280 <close@plt+0x234c>
   1266c:	ldr	r3, [sp, #44]	; 0x2c
   12670:	cmp	r3, #0
   12674:	bne	13bb0 <close@plt+0x2c7c>
   12678:	ldr	r3, [sp, #52]	; 0x34
   1267c:	ldrb	r5, [r3]
   12680:	cmp	r5, #126	; 0x7e
   12684:	ldrls	pc, [pc, r5, lsl #2]
   12688:	b	12f40 <close@plt+0x200c>
   1268c:	andeq	r2, r1, r4, asr #28
   12690:	andeq	r2, r1, r0, asr #30
   12694:	andeq	r2, r1, r0, asr #30
   12698:	andeq	r2, r1, r0, asr #30
   1269c:	andeq	r2, r1, r0, asr #30
   126a0:	andeq	r2, r1, r0, asr #30
   126a4:	andeq	r2, r1, r0, asr #30
   126a8:	andeq	r2, r1, r8, lsl lr
   126ac:	andeq	r2, r1, r0, lsl lr
   126b0:	andeq	r2, r1, r8, asr sp
   126b4:	andeq	r2, r1, r4, lsl #28
   126b8:	andeq	r2, r1, r0, asr sp
   126bc:	andeq	r2, r1, r0, ror #27
   126c0:	andeq	r2, r1, ip, lsr #28
   126c4:	andeq	r2, r1, r0, asr #30
   126c8:	andeq	r2, r1, r0, asr #30
   126cc:	andeq	r2, r1, r0, asr #30
   126d0:	andeq	r2, r1, r0, asr #30
   126d4:	andeq	r2, r1, r0, asr #30
   126d8:	andeq	r2, r1, r0, asr #30
   126dc:	andeq	r2, r1, r0, asr #30
   126e0:	andeq	r2, r1, r0, asr #30
   126e4:	andeq	r2, r1, r0, asr #30
   126e8:	andeq	r2, r1, r0, asr #30
   126ec:	andeq	r2, r1, r0, asr #30
   126f0:	andeq	r2, r1, r0, asr #30
   126f4:	andeq	r2, r1, r0, asr #30
   126f8:	andeq	r2, r1, r0, asr #30
   126fc:	andeq	r2, r1, r0, asr #30
   12700:	andeq	r2, r1, r0, asr #30
   12704:	andeq	r2, r1, r0, asr #30
   12708:	andeq	r2, r1, r0, asr #30
   1270c:	andeq	r2, r1, ip, lsl pc
   12710:	andeq	r2, r1, r4, lsr #28
   12714:	andeq	r2, r1, r4, lsr #28
   12718:	andeq	r2, r1, r0, lsl #30
   1271c:	andeq	r2, r1, r4, lsr #28
   12720:	andeq	r2, r1, r4, lsr pc
   12724:	andeq	r2, r1, r4, lsr #28
   12728:	andeq	r2, r1, r0, lsl #25
   1272c:	andeq	r2, r1, r4, lsr #28
   12730:	andeq	r2, r1, r4, lsr #28
   12734:	andeq	r2, r1, r4, lsr #28
   12738:	andeq	r2, r1, r4, lsr pc
   1273c:	andeq	r2, r1, r4, lsr pc
   12740:	andeq	r2, r1, r4, lsr pc
   12744:	andeq	r2, r1, r4, lsr pc
   12748:	andeq	r2, r1, r4, lsr pc
   1274c:	andeq	r2, r1, r4, lsr pc
   12750:	andeq	r2, r1, r4, lsr pc
   12754:	andeq	r2, r1, r4, lsr pc
   12758:	andeq	r2, r1, r4, lsr pc
   1275c:	andeq	r2, r1, r4, lsr pc
   12760:	andeq	r2, r1, r4, lsr pc
   12764:	andeq	r2, r1, r4, lsr pc
   12768:	andeq	r2, r1, r4, lsr pc
   1276c:	andeq	r2, r1, r4, lsr pc
   12770:	andeq	r2, r1, r4, lsr pc
   12774:	andeq	r2, r1, r4, lsr pc
   12778:	andeq	r2, r1, r4, lsr #28
   1277c:	andeq	r2, r1, r4, lsr #28
   12780:	andeq	r2, r1, r4, lsr #28
   12784:	andeq	r2, r1, r4, lsr #28
   12788:	andeq	r2, r1, r4, asr ip
   1278c:	andeq	r2, r1, r0, asr #30
   12790:	andeq	r2, r1, r4, lsr pc
   12794:	andeq	r2, r1, r4, lsr pc
   12798:	andeq	r2, r1, r4, lsr pc
   1279c:	andeq	r2, r1, r4, lsr pc
   127a0:	andeq	r2, r1, r4, lsr pc
   127a4:	andeq	r2, r1, r4, lsr pc
   127a8:	andeq	r2, r1, r4, lsr pc
   127ac:	andeq	r2, r1, r4, lsr pc
   127b0:	andeq	r2, r1, r4, lsr pc
   127b4:	andeq	r2, r1, r4, lsr pc
   127b8:	andeq	r2, r1, r4, lsr pc
   127bc:	andeq	r2, r1, r4, lsr pc
   127c0:	andeq	r2, r1, r4, lsr pc
   127c4:	andeq	r2, r1, r4, lsr pc
   127c8:	andeq	r2, r1, r4, lsr pc
   127cc:	andeq	r2, r1, r4, lsr pc
   127d0:	andeq	r2, r1, r4, lsr pc
   127d4:	andeq	r2, r1, r4, lsr pc
   127d8:	andeq	r2, r1, r4, lsr pc
   127dc:	andeq	r2, r1, r4, lsr pc
   127e0:	andeq	r2, r1, r4, lsr pc
   127e4:	andeq	r2, r1, r4, lsr pc
   127e8:	andeq	r2, r1, r4, lsr pc
   127ec:	andeq	r2, r1, r4, lsr pc
   127f0:	andeq	r2, r1, r4, lsr pc
   127f4:	andeq	r2, r1, r4, lsr pc
   127f8:	andeq	r2, r1, r4, lsr #28
   127fc:	strdeq	r2, [r1], -ip
   12800:	andeq	r2, r1, r4, lsr pc
   12804:	andeq	r2, r1, r4, lsr #28
   12808:	andeq	r2, r1, r4, lsr pc
   1280c:	andeq	r2, r1, r4, lsr #28
   12810:	andeq	r2, r1, r4, lsr pc
   12814:	andeq	r2, r1, r4, lsr pc
   12818:	andeq	r2, r1, r4, lsr pc
   1281c:	andeq	r2, r1, r4, lsr pc
   12820:	andeq	r2, r1, r4, lsr pc
   12824:	andeq	r2, r1, r4, lsr pc
   12828:	andeq	r2, r1, r4, lsr pc
   1282c:	andeq	r2, r1, r4, lsr pc
   12830:	andeq	r2, r1, r4, lsr pc
   12834:	andeq	r2, r1, r4, lsr pc
   12838:	andeq	r2, r1, r4, lsr pc
   1283c:	andeq	r2, r1, r4, lsr pc
   12840:	andeq	r2, r1, r4, lsr pc
   12844:	andeq	r2, r1, r4, lsr pc
   12848:	andeq	r2, r1, r4, lsr pc
   1284c:	andeq	r2, r1, r4, lsr pc
   12850:	andeq	r2, r1, r4, lsr pc
   12854:	andeq	r2, r1, r4, lsr pc
   12858:	andeq	r2, r1, r4, lsr pc
   1285c:	andeq	r2, r1, r4, lsr pc
   12860:	andeq	r2, r1, r4, lsr pc
   12864:	andeq	r2, r1, r4, lsr pc
   12868:	andeq	r2, r1, r4, lsr pc
   1286c:	andeq	r2, r1, r4, lsr pc
   12870:	andeq	r2, r1, r4, lsr pc
   12874:	andeq	r2, r1, r4, lsr pc
   12878:	andeq	r2, r1, r0, lsr #20
   1287c:	andeq	r2, r1, r4, lsr #28
   12880:	andeq	r2, r1, r0, lsr #20
   12884:	andeq	r2, r1, r0, lsl #30
   12888:	cmp	r4, #0
   1288c:	moveq	r3, #1
   12890:	streq	r3, [sp, #40]	; 0x28
   12894:	beq	12fa8 <close@plt+0x2074>
   12898:	mov	r3, #0
   1289c:	mov	r2, #1
   128a0:	mov	r4, r3
   128a4:	str	r2, [sp, #36]	; 0x24
   128a8:	str	r2, [sp, #44]	; 0x2c
   128ac:	str	r2, [sp, #56]	; 0x38
   128b0:	str	r3, [sp, #68]	; 0x44
   128b4:	movw	r3, #24088	; 0x5e18
   128b8:	movt	r3, #1
   128bc:	str	r4, [sp, #40]	; 0x28
   128c0:	mov	r8, #2
   128c4:	str	r4, [sp, #48]	; 0x30
   128c8:	str	r3, [sp, #60]	; 0x3c
   128cc:	str	r4, [sp, #72]	; 0x48
   128d0:	b	125b8 <close@plt+0x1684>
   128d4:	cmp	r4, #0
   128d8:	bne	13b24 <close@plt+0x2bf0>
   128dc:	cmp	sl, #0
   128e0:	beq	138e4 <close@plt+0x29b0>
   128e4:	mov	r3, #34	; 0x22
   128e8:	mov	r1, r4
   128ec:	mov	r2, #1
   128f0:	strb	r3, [fp]
   128f4:	movw	r3, #24068	; 0x5e04
   128f8:	movt	r3, #1
   128fc:	mov	r4, r2
   12900:	str	r2, [sp, #36]	; 0x24
   12904:	str	r2, [sp, #40]	; 0x28
   12908:	str	r1, [sp, #44]	; 0x2c
   1290c:	str	r1, [sp, #48]	; 0x30
   12910:	str	r2, [sp, #56]	; 0x38
   12914:	str	r3, [sp, #60]	; 0x3c
   12918:	str	r1, [sp, #68]	; 0x44
   1291c:	str	r1, [sp, #72]	; 0x48
   12920:	b	125b8 <close@plt+0x1684>
   12924:	mov	r3, #0
   12928:	mov	r4, r8
   1292c:	str	r3, [sp, #40]	; 0x28
   12930:	str	r3, [sp, #44]	; 0x2c
   12934:	str	r3, [sp, #48]	; 0x30
   12938:	str	r8, [sp, #56]	; 0x38
   1293c:	str	r3, [sp, #60]	; 0x3c
   12940:	str	r3, [sp, #68]	; 0x44
   12944:	mov	r3, #1
   12948:	str	r3, [sp, #36]	; 0x24
   1294c:	str	r8, [sp, #72]	; 0x48
   12950:	b	125b8 <close@plt+0x1684>
   12954:	mov	r3, #1
   12958:	mov	r2, #0
   1295c:	mov	r4, r2
   12960:	mov	r8, #5
   12964:	str	r3, [sp, #36]	; 0x24
   12968:	str	r3, [sp, #40]	; 0x28
   1296c:	str	r3, [sp, #44]	; 0x2c
   12970:	str	r2, [sp, #48]	; 0x30
   12974:	str	r3, [sp, #56]	; 0x38
   12978:	movw	r3, #24068	; 0x5e04
   1297c:	movt	r3, #1
   12980:	str	r3, [sp, #60]	; 0x3c
   12984:	str	r2, [sp, #68]	; 0x44
   12988:	str	r2, [sp, #72]	; 0x48
   1298c:	b	125b8 <close@plt+0x1684>
   12990:	mov	r3, #0
   12994:	mov	r2, #1
   12998:	mov	r4, r3
   1299c:	str	r2, [sp, #36]	; 0x24
   129a0:	str	r2, [sp, #40]	; 0x28
   129a4:	str	r3, [sp, #44]	; 0x2c
   129a8:	str	r3, [sp, #48]	; 0x30
   129ac:	str	r3, [sp, #56]	; 0x38
   129b0:	str	r3, [sp, #60]	; 0x3c
   129b4:	str	r3, [sp, #68]	; 0x44
   129b8:	str	r3, [sp, #72]	; 0x48
   129bc:	b	125b8 <close@plt+0x1684>
   129c0:	mov	r2, #1
   129c4:	mov	r3, #0
   129c8:	mov	r4, r3
   129cc:	str	r2, [sp, #36]	; 0x24
   129d0:	str	r2, [sp, #44]	; 0x2c
   129d4:	str	r8, [sp, #56]	; 0x38
   129d8:	str	r3, [sp, #68]	; 0x44
   129dc:	b	128b4 <close@plt+0x1980>
   129e0:	mov	r3, #1
   129e4:	mov	r2, #0
   129e8:	mov	r4, r2
   129ec:	mov	r8, #2
   129f0:	str	r3, [sp, #36]	; 0x24
   129f4:	str	r3, [sp, #40]	; 0x28
   129f8:	str	r3, [sp, #44]	; 0x2c
   129fc:	str	r2, [sp, #48]	; 0x30
   12a00:	str	r3, [sp, #56]	; 0x38
   12a04:	movw	r3, #24088	; 0x5e18
   12a08:	movt	r3, #1
   12a0c:	str	r3, [sp, #60]	; 0x3c
   12a10:	str	r2, [sp, #68]	; 0x44
   12a14:	str	r2, [sp, #72]	; 0x48
   12a18:	b	125b8 <close@plt+0x1684>
   12a1c:	mov	r7, #0
   12a20:	ldr	r3, [sp, #28]
   12a24:	cmn	r3, #1
   12a28:	beq	13500 <close@plt+0x25cc>
   12a2c:	ldr	r3, [sp, #28]
   12a30:	subs	r2, r3, #1
   12a34:	movne	r2, #1
   12a38:	sub	r3, fp, #2
   12a3c:	cmp	r2, #0
   12a40:	clz	r3, r3
   12a44:	lsr	r3, r3, #5
   12a48:	bne	12a54 <close@plt+0x1b20>
   12a4c:	cmp	r9, #0
   12a50:	beq	13260 <close@plt+0x232c>
   12a54:	mov	r6, #0
   12a58:	ldr	r2, [sp, #40]	; 0x28
   12a5c:	eor	r2, r2, #1
   12a60:	orrs	r3, r3, r2
   12a64:	bne	12c3c <close@plt+0x1d08>
   12a68:	ldr	r2, [sp, #160]	; 0xa0
   12a6c:	cmp	r2, #0
   12a70:	beq	12a90 <close@plt+0x1b5c>
   12a74:	ldr	r0, [sp, #160]	; 0xa0
   12a78:	ubfx	r1, r5, #5, #8
   12a7c:	and	r2, r5, #31
   12a80:	ldr	r1, [r0, r1, lsl #2]
   12a84:	lsr	r2, r1, r2
   12a88:	tst	r2, #1
   12a8c:	bne	12a98 <close@plt+0x1b64>
   12a90:	cmp	r7, #0
   12a94:	beq	12d08 <close@plt+0x1dd4>
   12a98:	ldr	r2, [sp, #44]	; 0x2c
   12a9c:	sub	r3, fp, #2
   12aa0:	clz	r3, r3
   12aa4:	lsr	r3, r3, #5
   12aa8:	cmp	r2, #0
   12aac:	bne	13854 <close@plt+0x2920>
   12ab0:	ldr	r2, [sp, #48]	; 0x30
   12ab4:	eor	r2, r2, #1
   12ab8:	ands	r3, r3, r2
   12abc:	beq	12af4 <close@plt+0x1bc0>
   12ac0:	cmp	sl, r4
   12ac4:	str	r3, [sp, #48]	; 0x30
   12ac8:	movhi	r2, #39	; 0x27
   12acc:	strbhi	r2, [r8, r4]
   12ad0:	add	r2, r4, #1
   12ad4:	cmp	sl, r2
   12ad8:	movhi	r1, #36	; 0x24
   12adc:	strbhi	r1, [r8, r2]
   12ae0:	add	r2, r4, #2
   12ae4:	add	r4, r4, #3
   12ae8:	cmp	sl, r2
   12aec:	movhi	r1, #39	; 0x27
   12af0:	strbhi	r1, [r8, r2]
   12af4:	cmp	r4, sl
   12af8:	add	r9, r9, #1
   12afc:	movcc	r3, #92	; 0x5c
   12b00:	strbcc	r3, [r8, r4]
   12b04:	add	r4, r4, #1
   12b08:	cmp	r4, sl
   12b0c:	ldr	r3, [sp, #36]	; 0x24
   12b10:	strbcc	r5, [r8, r4]
   12b14:	cmp	r6, #0
   12b18:	add	r4, r4, #1
   12b1c:	moveq	r3, #0
   12b20:	str	r3, [sp, #36]	; 0x24
   12b24:	ldr	r3, [sp, #28]
   12b28:	cmn	r3, #1
   12b2c:	bne	125d4 <close@plt+0x16a0>
   12b30:	ldr	r3, [sp, #32]
   12b34:	ldrb	r6, [r3, r9]
   12b38:	adds	r6, r6, #0
   12b3c:	movne	r6, #1
   12b40:	cmp	r6, #0
   12b44:	bne	125e8 <close@plt+0x16b4>
   12b48:	str	fp, [sp, #152]	; 0x98
   12b4c:	mov	fp, r8
   12b50:	cmp	r4, #0
   12b54:	ldr	r1, [sp, #44]	; 0x2c
   12b58:	movne	r3, #0
   12b5c:	ldr	r8, [sp, #152]	; 0x98
   12b60:	sub	r2, r8, #2
   12b64:	clz	r2, r2
   12b68:	lsr	r2, r2, #5
   12b6c:	andeq	r3, r2, r1
   12b70:	cmp	r3, #0
   12b74:	bne	13c30 <close@plt+0x2cfc>
   12b78:	eor	r3, r1, #1
   12b7c:	ands	r2, r2, r3
   12b80:	beq	13b5c <close@plt+0x2c28>
   12b84:	ldr	r3, [sp, #68]	; 0x44
   12b88:	cmp	r3, #0
   12b8c:	beq	13b60 <close@plt+0x2c2c>
   12b90:	ldr	r3, [sp, #36]	; 0x24
   12b94:	cmp	r3, #0
   12b98:	bne	13bec <close@plt+0x2cb8>
   12b9c:	ldr	r3, [sp, #72]	; 0x48
   12ba0:	adds	r3, r3, #0
   12ba4:	movne	r3, #1
   12ba8:	cmp	sl, #0
   12bac:	movne	r3, #0
   12bb0:	cmp	r3, #0
   12bb4:	ldreq	r2, [sp, #68]	; 0x44
   12bb8:	beq	13b60 <close@plt+0x2c2c>
   12bbc:	ldr	r2, [sp, #72]	; 0x48
   12bc0:	str	r3, [sp, #68]	; 0x44
   12bc4:	movw	r3, #24088	; 0x5e18
   12bc8:	movt	r3, #1
   12bcc:	mov	r1, #39	; 0x27
   12bd0:	mov	r4, #1
   12bd4:	ldr	sl, [sp, #72]	; 0x48
   12bd8:	mov	r8, #2
   12bdc:	str	r3, [sp, #60]	; 0x3c
   12be0:	mov	r3, #0
   12be4:	strb	r1, [fp]
   12be8:	str	r3, [sp, #44]	; 0x2c
   12bec:	str	r4, [sp, #56]	; 0x38
   12bf0:	str	r2, [sp, #72]	; 0x48
   12bf4:	b	125b8 <close@plt+0x1684>
   12bf8:	mov	r7, #0
   12bfc:	cmp	fp, #2
   12c00:	beq	134e0 <close@plt+0x25ac>
   12c04:	ldr	r2, [sp, #40]	; 0x28
   12c08:	ldr	r3, [sp, #56]	; 0x38
   12c0c:	ldr	r1, [sp, #44]	; 0x2c
   12c10:	cmp	r3, #0
   12c14:	moveq	r3, #0
   12c18:	andne	r3, r2, r1
   12c1c:	cmp	r3, #0
   12c20:	moveq	r5, #92	; 0x5c
   12c24:	moveq	r3, r5
   12c28:	bne	134ec <close@plt+0x25b8>
   12c2c:	ldr	r2, [sp, #40]	; 0x28
   12c30:	cmp	r2, #0
   12c34:	bne	13928 <close@plt+0x29f4>
   12c38:	mov	r6, #0
   12c3c:	ldr	r3, [sp, #44]	; 0x2c
   12c40:	cmp	r3, #0
   12c44:	beq	134d8 <close@plt+0x25a4>
   12c48:	mov	r3, #0
   12c4c:	b	12a68 <close@plt+0x1b34>
   12c50:	mov	r7, #0
   12c54:	cmp	fp, #2
   12c58:	beq	13550 <close@plt+0x261c>
   12c5c:	cmp	fp, #5
   12c60:	beq	13514 <close@plt+0x25e0>
   12c64:	sub	r3, fp, #2
   12c68:	mov	r6, #0
   12c6c:	clz	r3, r3
   12c70:	mov	r5, #63	; 0x3f
   12c74:	lsr	r3, r3, #5
   12c78:	b	12a58 <close@plt+0x1b24>
   12c7c:	mov	r7, #0
   12c80:	cmp	fp, #2
   12c84:	movne	r3, #0
   12c88:	movne	r5, #39	; 0x27
   12c8c:	strne	r6, [sp, #68]	; 0x44
   12c90:	bne	12a58 <close@plt+0x1b24>
   12c94:	ldr	r3, [sp, #44]	; 0x2c
   12c98:	cmp	r3, #0
   12c9c:	bne	13958 <close@plt+0x2a24>
   12ca0:	ldr	r3, [sp, #72]	; 0x48
   12ca4:	cmp	sl, #0
   12ca8:	clz	r3, r3
   12cac:	lsr	r3, r3, #5
   12cb0:	moveq	r3, #0
   12cb4:	cmp	r3, #0
   12cb8:	bne	13884 <close@plt+0x2950>
   12cbc:	cmp	sl, r4
   12cc0:	movhi	r3, #39	; 0x27
   12cc4:	strbhi	r3, [r8, r4]
   12cc8:	add	r3, r4, #1
   12ccc:	cmp	sl, r3
   12cd0:	movhi	r2, #92	; 0x5c
   12cd4:	strbhi	r2, [r8, r3]
   12cd8:	add	r3, r4, #2
   12cdc:	cmp	sl, r3
   12ce0:	bls	12cec <close@plt+0x1db8>
   12ce4:	mov	r2, #39	; 0x27
   12ce8:	strb	r2, [r8, r3]
   12cec:	mov	r3, #0
   12cf0:	cmp	r7, #0
   12cf4:	add	r4, r4, #3
   12cf8:	mov	r5, #39	; 0x27
   12cfc:	str	r3, [sp, #48]	; 0x30
   12d00:	str	r6, [sp, #68]	; 0x44
   12d04:	bne	12a98 <close@plt+0x1b64>
   12d08:	ldr	r2, [sp, #48]	; 0x30
   12d0c:	eor	r3, r3, #1
   12d10:	add	r9, r9, #1
   12d14:	and	r3, r3, r2
   12d18:	uxtb	r3, r3
   12d1c:	cmp	r3, #0
   12d20:	beq	12b08 <close@plt+0x1bd4>
   12d24:	cmp	sl, r4
   12d28:	movhi	r3, #39	; 0x27
   12d2c:	strbhi	r3, [r8, r4]
   12d30:	add	r3, r4, #1
   12d34:	add	r4, r4, #2
   12d38:	cmp	sl, r3
   12d3c:	movhi	r2, #39	; 0x27
   12d40:	strbhi	r2, [r8, r3]
   12d44:	mov	r3, #0
   12d48:	str	r3, [sp, #48]	; 0x30
   12d4c:	b	12b08 <close@plt+0x1bd4>
   12d50:	mov	r3, #118	; 0x76
   12d54:	b	12c2c <close@plt+0x1cf8>
   12d58:	mov	r3, #116	; 0x74
   12d5c:	ldr	r2, [sp, #44]	; 0x2c
   12d60:	cmp	fp, #2
   12d64:	movne	r2, #0
   12d68:	andeq	r2, r2, #1
   12d6c:	cmp	r2, #0
   12d70:	beq	12c2c <close@plt+0x1cf8>
   12d74:	mov	fp, r8
   12d78:	mov	r8, #2
   12d7c:	ldr	r3, [sp, #40]	; 0x28
   12d80:	cmp	r3, #0
   12d84:	movne	r8, #4
   12d88:	mov	lr, #0
   12d8c:	mov	r0, fp
   12d90:	ldr	r2, [sp, #32]
   12d94:	ldr	r3, [sp, #156]	; 0x9c
   12d98:	ldr	r1, [sp, #164]	; 0xa4
   12d9c:	bic	ip, r3, #2
   12da0:	ldr	r3, [sp, #28]
   12da4:	stm	sp, {r8, ip, lr}
   12da8:	ldr	ip, [sp, #168]	; 0xa8
   12dac:	str	r1, [sp, #12]
   12db0:	mov	r1, sl
   12db4:	str	ip, [sp, #16]
   12db8:	bl	124d0 <close@plt+0x159c>
   12dbc:	mov	r4, r0
   12dc0:	mov	r0, r4
   12dc4:	add	sp, sp, #116	; 0x74
   12dc8:	ldrd	r4, [sp]
   12dcc:	ldrd	r6, [sp, #8]
   12dd0:	ldrd	r8, [sp, #16]
   12dd4:	ldrd	sl, [sp, #24]
   12dd8:	add	sp, sp, #32
   12ddc:	pop	{pc}		; (ldr pc, [sp], #4)
   12de0:	mov	r5, #102	; 0x66
   12de4:	ldr	r2, [sp, #44]	; 0x2c
   12de8:	sub	r3, fp, #2
   12dec:	clz	r3, r3
   12df0:	lsr	r3, r3, #5
   12df4:	cmp	r2, #0
   12df8:	bne	13854 <close@plt+0x2920>
   12dfc:	mov	r6, r2
   12e00:	b	12af4 <close@plt+0x1bc0>
   12e04:	mov	r5, #110	; 0x6e
   12e08:	mov	r6, #0
   12e0c:	b	12a98 <close@plt+0x1b64>
   12e10:	mov	r5, #98	; 0x62
   12e14:	b	12de4 <close@plt+0x1eb0>
   12e18:	mov	r5, #97	; 0x61
   12e1c:	b	12de4 <close@plt+0x1eb0>
   12e20:	mov	r7, #0
   12e24:	mov	r6, #0
   12e28:	b	12c48 <close@plt+0x1d14>
   12e2c:	mov	r5, #114	; 0x72
   12e30:	b	12e08 <close@plt+0x1ed4>
   12e34:	ldr	r3, [sp, #44]	; 0x2c
   12e38:	cmp	r3, #0
   12e3c:	bne	13bcc <close@plt+0x2c98>
   12e40:	mov	r7, r3
   12e44:	ldr	r3, [sp, #48]	; 0x30
   12e48:	sub	r2, fp, #2
   12e4c:	clz	r2, r2
   12e50:	lsr	r2, r2, #5
   12e54:	eor	r3, r3, #1
   12e58:	ands	r3, r2, r3
   12e5c:	beq	13870 <close@plt+0x293c>
   12e60:	cmp	sl, r4
   12e64:	movhi	r1, #39	; 0x27
   12e68:	strbhi	r1, [r8, r4]
   12e6c:	add	r1, r4, #1
   12e70:	cmp	sl, r1
   12e74:	movhi	r0, #36	; 0x24
   12e78:	strbhi	r0, [r8, r1]
   12e7c:	add	r1, r4, #2
   12e80:	cmp	sl, r1
   12e84:	movhi	r0, #39	; 0x27
   12e88:	strbhi	r0, [r8, r1]
   12e8c:	add	r1, r4, #3
   12e90:	cmp	sl, r1
   12e94:	bls	138c8 <close@plt+0x2994>
   12e98:	mov	r4, r1
   12e9c:	mov	r1, #92	; 0x5c
   12ea0:	mov	r0, r4
   12ea4:	str	r3, [sp, #48]	; 0x30
   12ea8:	strb	r1, [r8, r4]
   12eac:	cmp	fp, #2
   12eb0:	add	r4, r4, #1
   12eb4:	beq	13918 <close@plt+0x29e4>
   12eb8:	ldr	r1, [sp, #28]
   12ebc:	add	r3, r9, #1
   12ec0:	cmp	r3, r1
   12ec4:	bcs	12edc <close@plt+0x1fa8>
   12ec8:	ldr	r1, [sp, #32]
   12ecc:	ldrb	r3, [r1, r3]
   12ed0:	sub	r3, r3, #48	; 0x30
   12ed4:	cmp	r3, #9
   12ed8:	bls	13930 <close@plt+0x29fc>
   12edc:	mov	r5, #48	; 0x30
   12ee0:	ldr	r3, [sp, #40]	; 0x28
   12ee4:	eor	r3, r3, #1
   12ee8:	orrs	r2, r2, r3
   12eec:	mov	r3, r6
   12ef0:	moveq	r6, r2
   12ef4:	beq	12a68 <close@plt+0x1b34>
   12ef8:	mov	r6, #0
   12efc:	b	12a90 <close@plt+0x1b5c>
   12f00:	cmp	r9, #0
   12f04:	mov	r2, r7
   12f08:	bne	134a8 <close@plt+0x2574>
   12f0c:	mov	r6, r7
   12f10:	mov	r3, r9
   12f14:	mov	r7, r2
   12f18:	b	12a58 <close@plt+0x1b24>
   12f1c:	mov	r2, r7
   12f20:	mov	r6, r7
   12f24:	mov	r3, #0
   12f28:	mov	r7, r2
   12f2c:	mov	r5, #32
   12f30:	b	12a58 <close@plt+0x1b24>
   12f34:	mov	r6, r7
   12f38:	b	12c48 <close@plt+0x1d14>
   12f3c:	mov	r7, #0
   12f40:	ldr	r3, [sp, #64]	; 0x40
   12f44:	cmp	r3, #1
   12f48:	bne	13568 <close@plt+0x2634>
   12f4c:	bl	10e2c <__ctype_b_loc@plt>
   12f50:	ldr	r2, [r0]
   12f54:	sxth	r3, r5
   12f58:	lsl	r3, r3, #1
   12f5c:	ldr	r1, [sp, #64]	; 0x40
   12f60:	ldrh	r3, [r2, r3]
   12f64:	mov	ip, r1
   12f68:	and	r3, r3, #16384	; 0x4000
   12f6c:	cmp	r3, #0
   12f70:	ldr	r3, [sp, #40]	; 0x28
   12f74:	movne	r6, #1
   12f78:	moveq	r6, #0
   12f7c:	movne	r2, #0
   12f80:	andeq	r2, r3, #1
   12f84:	cmp	r2, #0
   12f88:	bne	138b0 <close@plt+0x297c>
   12f8c:	sub	r3, fp, #2
   12f90:	clz	r3, r3
   12f94:	lsr	r3, r3, #5
   12f98:	b	12a58 <close@plt+0x1b24>
   12f9c:	cmp	r4, #0
   12fa0:	bne	13c40 <close@plt+0x2d0c>
   12fa4:	str	r4, [sp, #40]	; 0x28
   12fa8:	cmp	sl, #0
   12fac:	bne	13c70 <close@plt+0x2d3c>
   12fb0:	mov	r3, #1
   12fb4:	movw	r2, #24088	; 0x5e18
   12fb8:	movt	r2, #1
   12fbc:	mov	r4, r3
   12fc0:	mov	r8, #2
   12fc4:	str	r3, [sp, #36]	; 0x24
   12fc8:	str	sl, [sp, #44]	; 0x2c
   12fcc:	str	sl, [sp, #48]	; 0x30
   12fd0:	str	r3, [sp, #56]	; 0x38
   12fd4:	str	r2, [sp, #60]	; 0x3c
   12fd8:	str	sl, [sp, #68]	; 0x44
   12fdc:	str	sl, [sp, #72]	; 0x48
   12fe0:	b	125b8 <close@plt+0x1684>
   12fe4:	ldr	r3, [sp, #32]
   12fe8:	ldrb	r5, [r3, r9]
   12fec:	cmp	r5, #126	; 0x7e
   12ff0:	ldrls	pc, [pc, r5, lsl #2]
   12ff4:	b	12f40 <close@plt+0x200c>
   12ff8:	andeq	r3, r1, ip, lsl r2
   12ffc:	andeq	r2, r1, r0, asr #30
   13000:	andeq	r2, r1, r0, asr #30
   13004:	andeq	r2, r1, r0, asr #30
   13008:	andeq	r2, r1, r0, asr #30
   1300c:	andeq	r2, r1, r0, asr #30
   13010:	andeq	r2, r1, r0, asr #30
   13014:	andeq	r3, r1, r4, lsl r2
   13018:	andeq	r3, r1, ip, lsl #4
   1301c:	andeq	r2, r1, r8, asr sp
   13020:	andeq	r3, r1, r4, lsl #4
   13024:	andeq	r2, r1, r0, asr sp
   13028:	strdeq	r3, [r1], -ip
   1302c:	strdeq	r3, [r1], -r4
   13030:	andeq	r2, r1, r0, asr #30
   13034:	andeq	r2, r1, r0, asr #30
   13038:	andeq	r2, r1, r0, asr #30
   1303c:	andeq	r2, r1, r0, asr #30
   13040:	andeq	r2, r1, r0, asr #30
   13044:	andeq	r2, r1, r0, asr #30
   13048:	andeq	r2, r1, r0, asr #30
   1304c:	andeq	r2, r1, r0, asr #30
   13050:	andeq	r2, r1, r0, asr #30
   13054:	andeq	r2, r1, r0, asr #30
   13058:	andeq	r2, r1, r0, asr #30
   1305c:	andeq	r2, r1, r0, asr #30
   13060:	andeq	r2, r1, r0, asr #30
   13064:	andeq	r2, r1, r0, asr #30
   13068:	andeq	r2, r1, r0, asr #30
   1306c:	andeq	r2, r1, r0, asr #30
   13070:	andeq	r2, r1, r0, asr #30
   13074:	andeq	r2, r1, r0, asr #30
   13078:	andeq	r3, r1, r0, ror r2
   1307c:	andeq	r3, r1, r0, asr r2
   13080:	andeq	r3, r1, r0, asr r2
   13084:	andeq	r3, r1, r0, asr #4
   13088:	andeq	r3, r1, r0, asr r2
   1308c:	andeq	r2, r1, ip, lsl #31
   13090:	andeq	r3, r1, r0, asr r2
   13094:	andeq	r2, r1, r0, lsl #25
   13098:	andeq	r3, r1, r0, asr r2
   1309c:	andeq	r3, r1, r0, asr r2
   130a0:	andeq	r3, r1, r0, asr r2
   130a4:	andeq	r2, r1, ip, lsl #31
   130a8:	andeq	r2, r1, ip, lsl #31
   130ac:	andeq	r2, r1, ip, lsl #31
   130b0:	andeq	r2, r1, ip, lsl #31
   130b4:	andeq	r2, r1, ip, lsl #31
   130b8:	andeq	r2, r1, ip, lsl #31
   130bc:	andeq	r2, r1, ip, lsl #31
   130c0:	andeq	r2, r1, ip, lsl #31
   130c4:	andeq	r2, r1, ip, lsl #31
   130c8:	andeq	r2, r1, ip, lsl #31
   130cc:	andeq	r2, r1, ip, lsl #31
   130d0:	andeq	r2, r1, ip, lsl #31
   130d4:	andeq	r2, r1, ip, lsl #31
   130d8:	andeq	r2, r1, ip, lsl #31
   130dc:	andeq	r2, r1, ip, lsl #31
   130e0:	andeq	r2, r1, ip, lsl #31
   130e4:	andeq	r3, r1, r0, asr r2
   130e8:	andeq	r3, r1, r0, asr r2
   130ec:	andeq	r3, r1, r0, asr r2
   130f0:	andeq	r3, r1, r0, asr r2
   130f4:	andeq	r2, r1, r4, asr ip
   130f8:	andeq	r2, r1, r0, asr #30
   130fc:	andeq	r2, r1, ip, lsl #31
   13100:	andeq	r2, r1, ip, lsl #31
   13104:	andeq	r2, r1, ip, lsl #31
   13108:	andeq	r2, r1, ip, lsl #31
   1310c:	andeq	r2, r1, ip, lsl #31
   13110:	andeq	r2, r1, ip, lsl #31
   13114:	andeq	r2, r1, ip, lsl #31
   13118:	andeq	r2, r1, ip, lsl #31
   1311c:	andeq	r2, r1, ip, lsl #31
   13120:	andeq	r2, r1, ip, lsl #31
   13124:	andeq	r2, r1, ip, lsl #31
   13128:	andeq	r2, r1, ip, lsl #31
   1312c:	andeq	r2, r1, ip, lsl #31
   13130:	andeq	r2, r1, ip, lsl #31
   13134:	andeq	r2, r1, ip, lsl #31
   13138:	andeq	r2, r1, ip, lsl #31
   1313c:	andeq	r2, r1, ip, lsl #31
   13140:	andeq	r2, r1, ip, lsl #31
   13144:	andeq	r2, r1, ip, lsl #31
   13148:	andeq	r2, r1, ip, lsl #31
   1314c:	andeq	r2, r1, ip, lsl #31
   13150:	andeq	r2, r1, ip, lsl #31
   13154:	andeq	r2, r1, ip, lsl #31
   13158:	andeq	r2, r1, ip, lsl #31
   1315c:	andeq	r2, r1, ip, lsl #31
   13160:	andeq	r2, r1, ip, lsl #31
   13164:	andeq	r3, r1, r0, asr r2
   13168:	strdeq	r2, [r1], -ip
   1316c:	andeq	r2, r1, ip, lsl #31
   13170:	andeq	r3, r1, r0, asr r2
   13174:	andeq	r2, r1, ip, lsl #31
   13178:	andeq	r3, r1, r0, asr r2
   1317c:	andeq	r2, r1, ip, lsl #31
   13180:	andeq	r2, r1, ip, lsl #31
   13184:	andeq	r2, r1, ip, lsl #31
   13188:	andeq	r2, r1, ip, lsl #31
   1318c:	andeq	r2, r1, ip, lsl #31
   13190:	andeq	r2, r1, ip, lsl #31
   13194:	andeq	r2, r1, ip, lsl #31
   13198:	andeq	r2, r1, ip, lsl #31
   1319c:	andeq	r2, r1, ip, lsl #31
   131a0:	andeq	r2, r1, ip, lsl #31
   131a4:	andeq	r2, r1, ip, lsl #31
   131a8:	andeq	r2, r1, ip, lsl #31
   131ac:	andeq	r2, r1, ip, lsl #31
   131b0:	andeq	r2, r1, ip, lsl #31
   131b4:	andeq	r2, r1, ip, lsl #31
   131b8:	andeq	r2, r1, ip, lsl #31
   131bc:	andeq	r2, r1, ip, lsl #31
   131c0:	andeq	r2, r1, ip, lsl #31
   131c4:	andeq	r2, r1, ip, lsl #31
   131c8:	andeq	r2, r1, ip, lsl #31
   131cc:	andeq	r2, r1, ip, lsl #31
   131d0:	andeq	r2, r1, ip, lsl #31
   131d4:	andeq	r2, r1, ip, lsl #31
   131d8:	andeq	r2, r1, ip, lsl #31
   131dc:	andeq	r2, r1, ip, lsl #31
   131e0:	andeq	r2, r1, ip, lsl #31
   131e4:	andeq	r2, r1, r0, lsr #20
   131e8:	andeq	r3, r1, r0, asr r2
   131ec:	andeq	r2, r1, r0, lsr #20
   131f0:	andeq	r3, r1, r0, asr #4
   131f4:	mov	r3, #114	; 0x72
   131f8:	b	12d5c <close@plt+0x1e28>
   131fc:	mov	r3, #102	; 0x66
   13200:	b	12c2c <close@plt+0x1cf8>
   13204:	mov	r3, #110	; 0x6e
   13208:	b	12d5c <close@plt+0x1e28>
   1320c:	mov	r3, #98	; 0x62
   13210:	b	12c2c <close@plt+0x1cf8>
   13214:	mov	r3, #97	; 0x61
   13218:	b	12c2c <close@plt+0x1cf8>
   1321c:	ldr	r3, [sp, #40]	; 0x28
   13220:	cmp	r3, #0
   13224:	bne	12e34 <close@plt+0x1f00>
   13228:	ldr	r3, [sp, #156]	; 0x9c
   1322c:	tst	r3, #1
   13230:	addne	r9, r9, #1
   13234:	bne	125c8 <close@plt+0x1694>
   13238:	ldr	r7, [sp, #40]	; 0x28
   1323c:	b	12c38 <close@plt+0x1d04>
   13240:	sub	r3, fp, #2
   13244:	clz	r3, r3
   13248:	lsr	r3, r3, #5
   1324c:	b	12a4c <close@plt+0x1b18>
   13250:	sub	r3, fp, #2
   13254:	mov	r6, #0
   13258:	clz	r3, r3
   1325c:	lsr	r3, r3, #5
   13260:	ldr	r2, [sp, #44]	; 0x2c
   13264:	tst	r2, r3
   13268:	beq	12a58 <close@plt+0x1b24>
   1326c:	b	12d74 <close@plt+0x1e40>
   13270:	sub	r3, fp, #2
   13274:	clz	r3, r3
   13278:	lsr	r3, r3, #5
   1327c:	b	13260 <close@plt+0x232c>
   13280:	ldr	r3, [sp, #52]	; 0x34
   13284:	ldrb	r5, [r3]
   13288:	cmp	r5, #126	; 0x7e
   1328c:	ldrls	pc, [pc, r5, lsl #2]
   13290:	b	12f3c <close@plt+0x2008>
   13294:	andeq	r2, r1, r4, lsr lr
   13298:	andeq	r2, r1, ip, lsr pc
   1329c:	andeq	r2, r1, ip, lsr pc
   132a0:	andeq	r2, r1, ip, lsr pc
   132a4:	andeq	r2, r1, ip, lsr pc
   132a8:	andeq	r2, r1, ip, lsr pc
   132ac:	andeq	r2, r1, ip, lsr pc
   132b0:	andeq	r2, r1, r8, lsl lr
   132b4:	andeq	r2, r1, r0, lsl lr
   132b8:	andeq	r3, r1, ip, asr #9
   132bc:	andeq	r2, r1, r4, lsl #28
   132c0:	andeq	r3, r1, r0, asr #9
   132c4:	andeq	r2, r1, r0, ror #27
   132c8:	andeq	r2, r1, ip, lsr #28
   132cc:	andeq	r2, r1, ip, lsr pc
   132d0:	andeq	r2, r1, ip, lsr pc
   132d4:	andeq	r2, r1, ip, lsr pc
   132d8:	andeq	r2, r1, ip, lsr pc
   132dc:	andeq	r2, r1, ip, lsr pc
   132e0:	andeq	r2, r1, ip, lsr pc
   132e4:	andeq	r2, r1, ip, lsr pc
   132e8:	andeq	r2, r1, ip, lsr pc
   132ec:	andeq	r2, r1, ip, lsr pc
   132f0:	andeq	r2, r1, ip, lsr pc
   132f4:	andeq	r2, r1, ip, lsr pc
   132f8:	andeq	r2, r1, ip, lsr pc
   132fc:	andeq	r2, r1, ip, lsr pc
   13300:	andeq	r2, r1, ip, lsr pc
   13304:	andeq	r2, r1, ip, lsr pc
   13308:	andeq	r2, r1, ip, lsr pc
   1330c:	andeq	r2, r1, ip, lsr pc
   13310:	andeq	r2, r1, ip, lsr pc
   13314:			; <UNDEFINED> instruction: 0x000134b8
   13318:	andeq	r2, r1, r0, lsr #28
   1331c:	andeq	r2, r1, r0, lsr #28
   13320:	muleq	r1, ip, r4
   13324:	andeq	r2, r1, r0, lsr #28
   13328:	muleq	r1, r0, r4
   1332c:	andeq	r2, r1, r0, lsr #28
   13330:	andeq	r2, r1, ip, ror ip
   13334:	andeq	r2, r1, r0, lsr #28
   13338:	andeq	r2, r1, r0, lsr #28
   1333c:	andeq	r2, r1, r0, lsr #28
   13340:	muleq	r1, r0, r4
   13344:	muleq	r1, r0, r4
   13348:	muleq	r1, r0, r4
   1334c:	muleq	r1, r0, r4
   13350:	muleq	r1, r0, r4
   13354:	muleq	r1, r0, r4
   13358:	muleq	r1, r0, r4
   1335c:	muleq	r1, r0, r4
   13360:	muleq	r1, r0, r4
   13364:	muleq	r1, r0, r4
   13368:	muleq	r1, r0, r4
   1336c:	muleq	r1, r0, r4
   13370:	muleq	r1, r0, r4
   13374:	muleq	r1, r0, r4
   13378:	muleq	r1, r0, r4
   1337c:	muleq	r1, r0, r4
   13380:	andeq	r2, r1, r0, lsr #28
   13384:	andeq	r2, r1, r0, lsr #28
   13388:	andeq	r2, r1, r0, lsr #28
   1338c:	andeq	r2, r1, r0, lsr #28
   13390:	andeq	r2, r1, r0, asr ip
   13394:	andeq	r2, r1, ip, lsr pc
   13398:	muleq	r1, r0, r4
   1339c:	muleq	r1, r0, r4
   133a0:	muleq	r1, r0, r4
   133a4:	muleq	r1, r0, r4
   133a8:	muleq	r1, r0, r4
   133ac:	muleq	r1, r0, r4
   133b0:	muleq	r1, r0, r4
   133b4:	muleq	r1, r0, r4
   133b8:	muleq	r1, r0, r4
   133bc:	muleq	r1, r0, r4
   133c0:	muleq	r1, r0, r4
   133c4:	muleq	r1, r0, r4
   133c8:	muleq	r1, r0, r4
   133cc:	muleq	r1, r0, r4
   133d0:	muleq	r1, r0, r4
   133d4:	muleq	r1, r0, r4
   133d8:	muleq	r1, r0, r4
   133dc:	muleq	r1, r0, r4
   133e0:	muleq	r1, r0, r4
   133e4:	muleq	r1, r0, r4
   133e8:	muleq	r1, r0, r4
   133ec:	muleq	r1, r0, r4
   133f0:	muleq	r1, r0, r4
   133f4:	muleq	r1, r0, r4
   133f8:	muleq	r1, r0, r4
   133fc:	muleq	r1, r0, r4
   13400:	andeq	r2, r1, r0, lsr #28
   13404:	strdeq	r2, [r1], -r8
   13408:	muleq	r1, r0, r4
   1340c:	andeq	r2, r1, r0, lsr #28
   13410:	muleq	r1, r0, r4
   13414:	andeq	r2, r1, r0, lsr #28
   13418:	muleq	r1, r0, r4
   1341c:	muleq	r1, r0, r4
   13420:	muleq	r1, r0, r4
   13424:	muleq	r1, r0, r4
   13428:	muleq	r1, r0, r4
   1342c:	muleq	r1, r0, r4
   13430:	muleq	r1, r0, r4
   13434:	muleq	r1, r0, r4
   13438:	muleq	r1, r0, r4
   1343c:	muleq	r1, r0, r4
   13440:	muleq	r1, r0, r4
   13444:	muleq	r1, r0, r4
   13448:	muleq	r1, r0, r4
   1344c:	muleq	r1, r0, r4
   13450:	muleq	r1, r0, r4
   13454:	muleq	r1, r0, r4
   13458:	muleq	r1, r0, r4
   1345c:	muleq	r1, r0, r4
   13460:	muleq	r1, r0, r4
   13464:	muleq	r1, r0, r4
   13468:	muleq	r1, r0, r4
   1346c:	muleq	r1, r0, r4
   13470:	muleq	r1, r0, r4
   13474:	muleq	r1, r0, r4
   13478:	muleq	r1, r0, r4
   1347c:	muleq	r1, r0, r4
   13480:	andeq	r2, r1, ip, lsl sl
   13484:	andeq	r2, r1, r0, lsr #28
   13488:	andeq	r2, r1, ip, lsl sl
   1348c:	muleq	r1, ip, r4
   13490:	mov	r6, r7
   13494:	mov	r7, #0
   13498:	b	12c48 <close@plt+0x1d14>
   1349c:	cmp	r9, #0
   134a0:	mov	r2, #0
   134a4:	beq	12f0c <close@plt+0x1fd8>
   134a8:	mov	r6, #0
   134ac:	mov	r7, r2
   134b0:	mov	r3, r6
   134b4:	b	12a68 <close@plt+0x1b34>
   134b8:	mov	r2, #0
   134bc:	b	12f20 <close@plt+0x1fec>
   134c0:	mov	r7, #0
   134c4:	mov	r3, #118	; 0x76
   134c8:	b	12c2c <close@plt+0x1cf8>
   134cc:	mov	r7, #0
   134d0:	mov	r3, #116	; 0x74
   134d4:	b	12d5c <close@plt+0x1e28>
   134d8:	ldr	r3, [sp, #44]	; 0x2c
   134dc:	b	12a90 <close@plt+0x1b5c>
   134e0:	ldr	r3, [sp, #44]	; 0x2c
   134e4:	cmp	r3, #0
   134e8:	bne	13958 <close@plt+0x2a24>
   134ec:	add	r9, r9, #1
   134f0:	mov	r6, #0
   134f4:	ldr	r3, [sp, #48]	; 0x30
   134f8:	mov	r5, #92	; 0x5c
   134fc:	b	12d1c <close@plt+0x1de8>
   13500:	ldr	r3, [sp, #32]
   13504:	ldrb	r2, [r3, #1]
   13508:	adds	r2, r2, #0
   1350c:	movne	r2, #1
   13510:	b	12a38 <close@plt+0x1b04>
   13514:	ldr	r3, [sp, #156]	; 0x9c
   13518:	ands	r3, r3, #4
   1351c:	beq	13544 <close@plt+0x2610>
   13520:	ldr	r2, [sp, #28]
   13524:	add	r3, r9, #2
   13528:	cmp	r3, r2
   1352c:	bcs	13540 <close@plt+0x260c>
   13530:	ldr	r2, [sp, #52]	; 0x34
   13534:	ldrb	r5, [r2, #1]
   13538:	cmp	r5, #63	; 0x3f
   1353c:	beq	139bc <close@plt+0x2a88>
   13540:	mov	r3, #0
   13544:	mov	r5, #63	; 0x3f
   13548:	mov	r6, r3
   1354c:	b	12a58 <close@plt+0x1b24>
   13550:	ldr	r3, [sp, #44]	; 0x2c
   13554:	cmp	r3, #0
   13558:	bne	13958 <close@plt+0x2a24>
   1355c:	mov	r6, r3
   13560:	mov	r5, #63	; 0x3f
   13564:	b	12a90 <close@plt+0x1b5c>
   13568:	ldr	r1, [sp, #28]
   1356c:	mov	r2, #0
   13570:	mov	r3, #0
   13574:	strd	r2, [sp, #104]	; 0x68
   13578:	cmn	r1, #1
   1357c:	bne	1358c <close@plt+0x2658>
   13580:	ldr	r0, [sp, #32]
   13584:	bl	10e44 <strlen@plt>
   13588:	str	r0, [sp, #28]
   1358c:	str	r8, [sp, #76]	; 0x4c
   13590:	mov	r3, #0
   13594:	str	sl, [sp, #80]	; 0x50
   13598:	ldr	sl, [sp, #32]
   1359c:	str	r5, [sp, #84]	; 0x54
   135a0:	mov	r5, r3
   135a4:	ldr	r8, [sp, #44]	; 0x2c
   135a8:	str	r7, [sp, #88]	; 0x58
   135ac:	str	r4, [sp, #92]	; 0x5c
   135b0:	ldr	r2, [sp, #28]
   135b4:	add	r4, r9, r5
   135b8:	add	r3, sp, #104	; 0x68
   135bc:	add	r7, sl, r4
   135c0:	add	r0, sp, #100	; 0x64
   135c4:	mov	r1, r7
   135c8:	sub	r2, r2, r4
   135cc:	bl	15388 <close@plt+0x4454>
   135d0:	subs	r1, r0, #0
   135d4:	beq	13620 <close@plt+0x26ec>
   135d8:	cmn	r1, #1
   135dc:	beq	13998 <close@plt+0x2a64>
   135e0:	cmn	r1, #2
   135e4:	beq	13ab8 <close@plt+0x2b84>
   135e8:	cmp	fp, #2
   135ec:	movne	r3, #0
   135f0:	andeq	r3, r8, #1
   135f4:	cmp	r3, #0
   135f8:	bne	13784 <close@plt+0x2850>
   135fc:	ldr	r0, [sp, #100]	; 0x64
   13600:	add	r5, r5, r1
   13604:	bl	10d9c <iswprint@plt>
   13608:	cmp	r0, #0
   1360c:	add	r0, sp, #104	; 0x68
   13610:	moveq	r6, #0
   13614:	bl	10d3c <mbsinit@plt>
   13618:	cmp	r0, #0
   1361c:	beq	135b0 <close@plt+0x267c>
   13620:	ldr	r3, [sp, #40]	; 0x28
   13624:	mov	ip, r5
   13628:	eor	r2, r6, #1
   1362c:	ldr	r8, [sp, #76]	; 0x4c
   13630:	ldr	sl, [sp, #80]	; 0x50
   13634:	and	r2, r2, r3
   13638:	ldr	r5, [sp, #84]	; 0x54
   1363c:	ldr	r7, [sp, #88]	; 0x58
   13640:	ldr	r4, [sp, #92]	; 0x5c
   13644:	cmp	ip, #1
   13648:	bls	12f84 <close@plt+0x2050>
   1364c:	add	r1, ip, r9
   13650:	mov	r0, #39	; 0x27
   13654:	ldr	lr, [sp, #52]	; 0x34
   13658:	mov	ip, #0
   1365c:	str	r6, [sp, #52]	; 0x34
   13660:	ldr	r6, [sp, #48]	; 0x30
   13664:	b	13720 <close@plt+0x27ec>
   13668:	ldr	ip, [sp, #44]	; 0x2c
   1366c:	sub	r3, fp, #2
   13670:	clz	r3, r3
   13674:	lsr	r3, r3, #5
   13678:	cmp	ip, #0
   1367c:	bne	13890 <close@plt+0x295c>
   13680:	eor	ip, r6, #1
   13684:	ands	r3, r3, ip
   13688:	beq	136b8 <close@plt+0x2784>
   1368c:	cmp	sl, r4
   13690:	add	ip, r4, #1
   13694:	strbhi	r0, [r8, r4]
   13698:	cmp	sl, ip
   1369c:	movhi	r6, #36	; 0x24
   136a0:	strbhi	r6, [r8, ip]
   136a4:	add	ip, r4, #2
   136a8:	mov	r6, r3
   136ac:	cmp	sl, ip
   136b0:	add	r4, r4, #3
   136b4:	strbhi	r0, [r8, ip]
   136b8:	cmp	sl, r4
   136bc:	movhi	r3, #92	; 0x5c
   136c0:	strbhi	r3, [r8, r4]
   136c4:	add	r3, r4, #1
   136c8:	cmp	sl, r3
   136cc:	bls	136dc <close@plt+0x27a8>
   136d0:	lsr	ip, r5, #6
   136d4:	add	ip, ip, #48	; 0x30
   136d8:	strb	ip, [r8, r3]
   136dc:	add	r3, r4, #2
   136e0:	cmp	sl, r3
   136e4:	bls	136f4 <close@plt+0x27c0>
   136e8:	ubfx	ip, r5, #3, #3
   136ec:	add	ip, ip, #48	; 0x30
   136f0:	strb	ip, [r8, r3]
   136f4:	add	r9, r9, #1
   136f8:	and	r5, r5, #7
   136fc:	cmp	r9, r1
   13700:	add	r5, r5, #48	; 0x30
   13704:	add	r4, r4, #3
   13708:	bcs	138bc <close@plt+0x2988>
   1370c:	mov	ip, r2
   13710:	cmp	sl, r4
   13714:	strbhi	r5, [r8, r4]
   13718:	add	r4, r4, #1
   1371c:	ldrb	r5, [lr, #1]!
   13720:	cmp	r2, #0
   13724:	bne	13668 <close@plt+0x2734>
   13728:	eor	r3, ip, #1
   1372c:	cmp	r7, #0
   13730:	and	r3, r3, r6
   13734:	uxtb	r3, r3
   13738:	beq	1374c <close@plt+0x2818>
   1373c:	cmp	sl, r4
   13740:	movhi	r7, #92	; 0x5c
   13744:	strbhi	r7, [r8, r4]
   13748:	add	r4, r4, #1
   1374c:	add	r9, r9, #1
   13750:	cmp	r9, r1
   13754:	bcs	138a4 <close@plt+0x2970>
   13758:	cmp	r3, #0
   1375c:	beq	138dc <close@plt+0x29a8>
   13760:	cmp	sl, r4
   13764:	add	r3, r4, #1
   13768:	mov	r7, #0
   1376c:	strbhi	r0, [r8, r4]
   13770:	cmp	sl, r3
   13774:	add	r4, r4, #2
   13778:	mov	r6, r7
   1377c:	strbhi	r0, [r8, r3]
   13780:	b	13710 <close@plt+0x27dc>
   13784:	cmp	r1, #1
   13788:	beq	135fc <close@plt+0x26c8>
   1378c:	add	r2, r4, #1
   13790:	add	r3, sl, r1
   13794:	add	r2, sl, r2
   13798:	add	r4, r3, r4
   1379c:	ldrb	r3, [r2], #1
   137a0:	sub	r3, r3, #91	; 0x5b
   137a4:	cmp	r3, #33	; 0x21
   137a8:	ldrls	pc, [pc, r3, lsl #2]
   137ac:	b	13838 <close@plt+0x2904>
   137b0:	andeq	r3, r1, r4, asr #16
   137b4:	andeq	r3, r1, r4, asr #16
   137b8:	andeq	r3, r1, r8, lsr r8
   137bc:	andeq	r3, r1, r4, asr #16
   137c0:	andeq	r3, r1, r8, lsr r8
   137c4:	andeq	r3, r1, r4, asr #16
   137c8:	andeq	r3, r1, r8, lsr r8
   137cc:	andeq	r3, r1, r8, lsr r8
   137d0:	andeq	r3, r1, r8, lsr r8
   137d4:	andeq	r3, r1, r8, lsr r8
   137d8:	andeq	r3, r1, r8, lsr r8
   137dc:	andeq	r3, r1, r8, lsr r8
   137e0:	andeq	r3, r1, r8, lsr r8
   137e4:	andeq	r3, r1, r8, lsr r8
   137e8:	andeq	r3, r1, r8, lsr r8
   137ec:	andeq	r3, r1, r8, lsr r8
   137f0:	andeq	r3, r1, r8, lsr r8
   137f4:	andeq	r3, r1, r8, lsr r8
   137f8:	andeq	r3, r1, r8, lsr r8
   137fc:	andeq	r3, r1, r8, lsr r8
   13800:	andeq	r3, r1, r8, lsr r8
   13804:	andeq	r3, r1, r8, lsr r8
   13808:	andeq	r3, r1, r8, lsr r8
   1380c:	andeq	r3, r1, r8, lsr r8
   13810:	andeq	r3, r1, r8, lsr r8
   13814:	andeq	r3, r1, r8, lsr r8
   13818:	andeq	r3, r1, r8, lsr r8
   1381c:	andeq	r3, r1, r8, lsr r8
   13820:	andeq	r3, r1, r8, lsr r8
   13824:	andeq	r3, r1, r8, lsr r8
   13828:	andeq	r3, r1, r8, lsr r8
   1382c:	andeq	r3, r1, r8, lsr r8
   13830:	andeq	r3, r1, r8, lsr r8
   13834:	andeq	r3, r1, r4, asr #16
   13838:	cmp	r4, r2
   1383c:	bne	1379c <close@plt+0x2868>
   13840:	b	135fc <close@plt+0x26c8>
   13844:	mov	r8, #2
   13848:	ldr	fp, [sp, #76]	; 0x4c
   1384c:	ldr	sl, [sp, #80]	; 0x50
   13850:	b	12d7c <close@plt+0x1e48>
   13854:	ldr	r2, [sp, #40]	; 0x28
   13858:	str	fp, [sp, #152]	; 0x98
   1385c:	mov	fp, r8
   13860:	ldr	r8, [sp, #152]	; 0x98
   13864:	and	r2, r2, r3
   13868:	str	r2, [sp, #40]	; 0x28
   1386c:	b	12d7c <close@plt+0x1e48>
   13870:	cmp	sl, r4
   13874:	movls	r0, r4
   13878:	bls	12eac <close@plt+0x1f78>
   1387c:	ldr	r3, [sp, #48]	; 0x30
   13880:	b	12e9c <close@plt+0x1f68>
   13884:	str	sl, [sp, #72]	; 0x48
   13888:	ldr	sl, [sp, #44]	; 0x2c
   1388c:	b	12cec <close@plt+0x1db8>
   13890:	str	r3, [sp, #40]	; 0x28
   13894:	str	fp, [sp, #152]	; 0x98
   13898:	mov	fp, r8
   1389c:	ldr	r8, [sp, #152]	; 0x98
   138a0:	b	12d7c <close@plt+0x1e48>
   138a4:	str	r6, [sp, #48]	; 0x30
   138a8:	ldr	r6, [sp, #52]	; 0x34
   138ac:	b	12d1c <close@plt+0x1de8>
   138b0:	mov	r6, #0
   138b4:	ldr	r2, [sp, #40]	; 0x28
   138b8:	b	1364c <close@plt+0x2718>
   138bc:	str	r6, [sp, #48]	; 0x30
   138c0:	ldr	r6, [sp, #52]	; 0x34
   138c4:	b	12b08 <close@plt+0x1bd4>
   138c8:	add	r4, r4, #4
   138cc:	mov	r6, #0
   138d0:	str	r3, [sp, #48]	; 0x30
   138d4:	mov	r5, #48	; 0x30
   138d8:	b	12a90 <close@plt+0x1b5c>
   138dc:	mov	r7, r3
   138e0:	b	13710 <close@plt+0x27dc>
   138e4:	mov	r3, #1
   138e8:	movw	r2, #24068	; 0x5e04
   138ec:	movt	r2, #1
   138f0:	mov	r4, r3
   138f4:	str	r3, [sp, #36]	; 0x24
   138f8:	str	r3, [sp, #40]	; 0x28
   138fc:	str	sl, [sp, #44]	; 0x2c
   13900:	str	sl, [sp, #48]	; 0x30
   13904:	str	r3, [sp, #56]	; 0x38
   13908:	str	r2, [sp, #60]	; 0x3c
   1390c:	str	sl, [sp, #68]	; 0x44
   13910:	str	sl, [sp, #72]	; 0x48
   13914:	b	125b8 <close@plt+0x1684>
   13918:	mov	r3, r6
   1391c:	mov	r5, #48	; 0x30
   13920:	mov	r6, #0
   13924:	b	12a90 <close@plt+0x1b5c>
   13928:	mov	r5, r3
   1392c:	b	12e08 <close@plt+0x1ed4>
   13930:	cmp	sl, r4
   13934:	mov	r5, #48	; 0x30
   13938:	movhi	r3, #48	; 0x30
   1393c:	strbhi	r3, [r8, r4]
   13940:	add	r3, r0, #2
   13944:	add	r4, r0, #3
   13948:	cmp	sl, r3
   1394c:	movhi	r1, #48	; 0x30
   13950:	strbhi	r1, [r8, r3]
   13954:	b	12ee0 <close@plt+0x1fac>
   13958:	str	fp, [sp, #152]	; 0x98
   1395c:	mov	fp, r8
   13960:	ldr	r8, [sp, #152]	; 0x98
   13964:	b	12d7c <close@plt+0x1e48>
   13968:	ldr	r3, [sp, #164]	; 0xa4
   1396c:	ldrb	r3, [r3]
   13970:	cmp	r3, #0
   13974:	beq	12588 <close@plt+0x1654>
   13978:	ldr	r2, [sp, #164]	; 0xa4
   1397c:	cmp	sl, r4
   13980:	strbhi	r3, [fp, r4]
   13984:	add	r4, r4, #1
   13988:	ldrb	r3, [r2, #1]!
   1398c:	cmp	r3, #0
   13990:	bne	1397c <close@plt+0x2a48>
   13994:	b	12588 <close@plt+0x1654>
   13998:	mov	ip, r5
   1399c:	mov	r6, #0
   139a0:	ldr	r2, [sp, #40]	; 0x28
   139a4:	ldr	r8, [sp, #76]	; 0x4c
   139a8:	ldr	sl, [sp, #80]	; 0x50
   139ac:	ldr	r5, [sp, #84]	; 0x54
   139b0:	ldr	r7, [sp, #88]	; 0x58
   139b4:	ldr	r4, [sp, #92]	; 0x5c
   139b8:	b	13644 <close@plt+0x2710>
   139bc:	ldr	r2, [sp, #32]
   139c0:	ldrb	r1, [r2, r3]
   139c4:	sub	r2, r1, #33	; 0x21
   139c8:	cmp	r2, #29
   139cc:	ldrls	pc, [pc, r2, lsl #2]
   139d0:	b	13aac <close@plt+0x2b78>
   139d4:	andeq	r3, r1, ip, asr #20
   139d8:	andeq	r3, r1, ip, lsr #21
   139dc:	andeq	r3, r1, ip, lsr #21
   139e0:	andeq	r3, r1, ip, lsr #21
   139e4:	andeq	r3, r1, ip, lsr #21
   139e8:	andeq	r3, r1, ip, lsr #21
   139ec:	andeq	r3, r1, ip, asr #20
   139f0:	andeq	r3, r1, ip, asr #20
   139f4:	andeq	r3, r1, ip, asr #20
   139f8:	andeq	r3, r1, ip, lsr #21
   139fc:	andeq	r3, r1, ip, lsr #21
   13a00:	andeq	r3, r1, ip, lsr #21
   13a04:	andeq	r3, r1, ip, asr #20
   13a08:	andeq	r3, r1, ip, lsr #21
   13a0c:	andeq	r3, r1, ip, asr #20
   13a10:	andeq	r3, r1, ip, lsr #21
   13a14:	andeq	r3, r1, ip, lsr #21
   13a18:	andeq	r3, r1, ip, lsr #21
   13a1c:	andeq	r3, r1, ip, lsr #21
   13a20:	andeq	r3, r1, ip, lsr #21
   13a24:	andeq	r3, r1, ip, lsr #21
   13a28:	andeq	r3, r1, ip, lsr #21
   13a2c:	andeq	r3, r1, ip, lsr #21
   13a30:	andeq	r3, r1, ip, lsr #21
   13a34:	andeq	r3, r1, ip, lsr #21
   13a38:	andeq	r3, r1, ip, lsr #21
   13a3c:	andeq	r3, r1, ip, lsr #21
   13a40:	andeq	r3, r1, ip, asr #20
   13a44:	andeq	r3, r1, ip, asr #20
   13a48:	andeq	r3, r1, ip, asr #20
   13a4c:	ldr	r2, [sp, #44]	; 0x2c
   13a50:	cmp	r2, #0
   13a54:	bne	13bb0 <close@plt+0x2c7c>
   13a58:	cmp	sl, r4
   13a5c:	mov	r5, r1
   13a60:	movhi	r2, #63	; 0x3f
   13a64:	mov	r9, r3
   13a68:	strbhi	r2, [r8, r4]
   13a6c:	add	r2, r4, #1
   13a70:	cmp	sl, r2
   13a74:	movhi	r0, #34	; 0x22
   13a78:	strbhi	r0, [r8, r2]
   13a7c:	add	r2, r4, #2
   13a80:	cmp	sl, r2
   13a84:	movhi	r0, #34	; 0x22
   13a88:	strbhi	r0, [r8, r2]
   13a8c:	add	r2, r4, #3
   13a90:	add	r4, r4, #4
   13a94:	cmp	sl, r2
   13a98:	movhi	r0, #63	; 0x3f
   13a9c:	strbhi	r0, [r8, r2]
   13aa0:	mov	r2, #0
   13aa4:	mov	r6, r2
   13aa8:	b	12ee0 <close@plt+0x1fac>
   13aac:	mov	r3, #0
   13ab0:	mov	r6, r3
   13ab4:	b	12a58 <close@plt+0x1b24>
   13ab8:	ldr	r0, [sp, #28]
   13abc:	mov	r1, r4
   13ac0:	mov	r2, r7
   13ac4:	mov	r3, r5
   13ac8:	mov	ip, r5
   13acc:	ldr	r8, [sp, #76]	; 0x4c
   13ad0:	ldr	sl, [sp, #80]	; 0x50
   13ad4:	cmp	r1, r0
   13ad8:	ldr	r5, [sp, #84]	; 0x54
   13adc:	ldr	r7, [sp, #88]	; 0x58
   13ae0:	ldr	r4, [sp, #92]	; 0x5c
   13ae4:	bcs	13b18 <close@plt+0x2be4>
   13ae8:	ldrb	r6, [r2]
   13aec:	cmp	r6, #0
   13af0:	bne	13b04 <close@plt+0x2bd0>
   13af4:	b	13c38 <close@plt+0x2d04>
   13af8:	ldrb	r6, [r2, #1]!
   13afc:	cmp	r6, #0
   13b00:	beq	13bc0 <close@plt+0x2c8c>
   13b04:	add	r3, r3, #1
   13b08:	add	r1, r9, r3
   13b0c:	cmp	r1, r0
   13b10:	bcc	13af8 <close@plt+0x2bc4>
   13b14:	mov	ip, r3
   13b18:	mov	r6, #0
   13b1c:	ldr	r2, [sp, #40]	; 0x28
   13b20:	b	13644 <close@plt+0x2710>
   13b24:	mov	r3, #1
   13b28:	mov	r2, #0
   13b2c:	mov	r4, r2
   13b30:	str	r3, [sp, #36]	; 0x24
   13b34:	str	r3, [sp, #40]	; 0x28
   13b38:	str	r3, [sp, #44]	; 0x2c
   13b3c:	str	r2, [sp, #48]	; 0x30
   13b40:	str	r3, [sp, #56]	; 0x38
   13b44:	movw	r3, #24068	; 0x5e04
   13b48:	movt	r3, #1
   13b4c:	str	r3, [sp, #60]	; 0x3c
   13b50:	str	r2, [sp, #68]	; 0x44
   13b54:	str	r2, [sp, #72]	; 0x48
   13b58:	b	125b8 <close@plt+0x1684>
   13b5c:	mov	r2, r3
   13b60:	ldr	r3, [sp, #60]	; 0x3c
   13b64:	cmp	r3, #0
   13b68:	moveq	r2, #0
   13b6c:	andne	r2, r2, #1
   13b70:	cmp	r2, #0
   13b74:	beq	13ba0 <close@plt+0x2c6c>
   13b78:	mov	r2, r3
   13b7c:	ldrb	r3, [r3]
   13b80:	cmp	r3, #0
   13b84:	beq	13ba0 <close@plt+0x2c6c>
   13b88:	cmp	sl, r4
   13b8c:	strbhi	r3, [fp, r4]
   13b90:	add	r4, r4, #1
   13b94:	ldrb	r3, [r2, #1]!
   13b98:	cmp	r3, #0
   13b9c:	bne	13b88 <close@plt+0x2c54>
   13ba0:	cmp	sl, r4
   13ba4:	movhi	r3, #0
   13ba8:	strbhi	r3, [fp, r4]
   13bac:	b	12dc0 <close@plt+0x1e8c>
   13bb0:	str	fp, [sp, #152]	; 0x98
   13bb4:	mov	fp, r8
   13bb8:	ldr	r8, [sp, #152]	; 0x98
   13bbc:	b	12d88 <close@plt+0x1e54>
   13bc0:	mov	ip, r3
   13bc4:	ldr	r2, [sp, #40]	; 0x28
   13bc8:	b	13644 <close@plt+0x2710>
   13bcc:	str	fp, [sp, #152]	; 0x98
   13bd0:	mov	fp, r8
   13bd4:	ldr	r8, [sp, #152]	; 0x98
   13bd8:	sub	r3, r8, #2
   13bdc:	clz	r3, r3
   13be0:	lsr	r3, r3, #5
   13be4:	str	r3, [sp, #40]	; 0x28
   13be8:	b	12d7c <close@plt+0x1e48>
   13bec:	mov	ip, #5
   13bf0:	ldr	r3, [sp, #28]
   13bf4:	str	ip, [sp]
   13bf8:	ldr	r2, [sp, #156]	; 0x9c
   13bfc:	ldr	ip, [sp, #164]	; 0xa4
   13c00:	ldr	r0, [sp, #160]	; 0xa0
   13c04:	str	r2, [sp, #4]
   13c08:	ldr	r2, [sp, #32]
   13c0c:	ldr	r1, [sp, #72]	; 0x48
   13c10:	str	ip, [sp, #12]
   13c14:	ldr	ip, [sp, #168]	; 0xa8
   13c18:	str	r0, [sp, #8]
   13c1c:	mov	r0, fp
   13c20:	str	ip, [sp, #16]
   13c24:	bl	124d0 <close@plt+0x159c>
   13c28:	mov	r4, r0
   13c2c:	b	12dc0 <close@plt+0x1e8c>
   13c30:	mov	r8, #2
   13c34:	b	12d7c <close@plt+0x1e48>
   13c38:	ldr	r2, [sp, #40]	; 0x28
   13c3c:	b	13644 <close@plt+0x2710>
   13c40:	mov	r3, #0
   13c44:	mov	r2, #1
   13c48:	mov	r4, r3
   13c4c:	strd	r2, [sp, #36]	; 0x24
   13c50:	strd	r2, [sp, #44]	; 0x2c
   13c54:	str	r2, [sp, #56]	; 0x38
   13c58:	str	r3, [sp, #68]	; 0x44
   13c5c:	str	r3, [sp, #72]	; 0x48
   13c60:	movw	r3, #24088	; 0x5e18
   13c64:	movt	r3, #1
   13c68:	str	r3, [sp, #60]	; 0x3c
   13c6c:	b	125b8 <close@plt+0x1684>
   13c70:	mov	r3, #0
   13c74:	mov	r1, #1
   13c78:	mov	r2, r3
   13c7c:	str	r1, [sp, #36]	; 0x24
   13c80:	str	r3, [sp, #48]	; 0x30
   13c84:	str	sl, [sp, #72]	; 0x48
   13c88:	b	12bc0 <close@plt+0x1c8c>
   13c8c:	bl	10f28 <abort@plt>
   13c90:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13c94:	mov	r4, r0
   13c98:	mov	r5, r3
   13c9c:	strd	r6, [sp, #8]
   13ca0:	movw	r7, #28920	; 0x70f8
   13ca4:	movt	r7, #2
   13ca8:	strd	r8, [sp, #16]
   13cac:	strd	sl, [sp, #24]
   13cb0:	mov	sl, r1
   13cb4:	mov	fp, r2
   13cb8:	str	lr, [sp, #32]
   13cbc:	sub	sp, sp, #60	; 0x3c
   13cc0:	bl	10e50 <__errno_location@plt>
   13cc4:	mov	r8, r0
   13cc8:	cmn	r4, #-2147483647	; 0x80000001
   13ccc:	ldr	r6, [r7]
   13cd0:	movne	r0, #0
   13cd4:	moveq	r0, #1
   13cd8:	ldr	r3, [r8]
   13cdc:	orrs	r0, r0, r4, lsr #31
   13ce0:	str	r3, [sp, #28]
   13ce4:	bne	13e74 <close@plt+0x2f40>
   13ce8:	ldr	r3, [r7, #4]
   13cec:	cmp	r3, r4
   13cf0:	bgt	13d50 <close@plt+0x2e1c>
   13cf4:	add	r1, r7, #8
   13cf8:	sub	r2, r4, r3
   13cfc:	str	r3, [sp, #52]	; 0x34
   13d00:	cmp	r6, r1
   13d04:	add	r2, r2, #1
   13d08:	beq	13e4c <close@plt+0x2f18>
   13d0c:	mov	r1, #8
   13d10:	mov	r0, r6
   13d14:	mvn	r3, #-2147483648	; 0x80000000
   13d18:	str	r1, [sp]
   13d1c:	add	r1, sp, #52	; 0x34
   13d20:	bl	14d00 <close@plt+0x3dcc>
   13d24:	mov	r6, r0
   13d28:	str	r0, [r7]
   13d2c:	ldr	r0, [r7, #4]
   13d30:	mov	r1, #0
   13d34:	ldr	r2, [sp, #52]	; 0x34
   13d38:	sub	r2, r2, r0
   13d3c:	add	r0, r6, r0, lsl #3
   13d40:	lsl	r2, r2, #3
   13d44:	bl	10e74 <memset@plt>
   13d48:	ldr	r3, [sp, #52]	; 0x34
   13d4c:	str	r3, [r7, #4]
   13d50:	ldr	r1, [r5, #4]
   13d54:	add	r0, r6, r4, lsl #3
   13d58:	add	ip, r5, #8
   13d5c:	mov	r3, fp
   13d60:	mov	r2, sl
   13d64:	ldr	r7, [r0, #4]
   13d68:	str	r0, [sp, #36]	; 0x24
   13d6c:	str	ip, [sp, #40]	; 0x28
   13d70:	orr	r0, r1, #1
   13d74:	ldr	r9, [r6, r4, lsl #3]
   13d78:	str	ip, [sp, #8]
   13d7c:	ldr	lr, [r5, #44]	; 0x2c
   13d80:	str	r0, [sp, #4]
   13d84:	ldr	ip, [r5]
   13d88:	mov	r1, r9
   13d8c:	str	ip, [sp, #32]
   13d90:	ldr	ip, [r5, #40]	; 0x28
   13d94:	str	ip, [sp, #12]
   13d98:	ldr	ip, [sp, #32]
   13d9c:	str	lr, [sp, #16]
   13da0:	str	r0, [sp, #44]	; 0x2c
   13da4:	mov	r0, r7
   13da8:	str	ip, [sp]
   13dac:	bl	124d0 <close@plt+0x159c>
   13db0:	cmp	r9, r0
   13db4:	bhi	13e24 <close@plt+0x2ef0>
   13db8:	add	r9, r0, #1
   13dbc:	movw	r3, #29048	; 0x7178
   13dc0:	movt	r3, #2
   13dc4:	cmp	r7, r3
   13dc8:	str	r9, [r6, r4, lsl #3]
   13dcc:	beq	13dd8 <close@plt+0x2ea4>
   13dd0:	mov	r0, r7
   13dd4:	bl	12130 <close@plt+0x11fc>
   13dd8:	mov	r0, r9
   13ddc:	bl	14b50 <close@plt+0x3c1c>
   13de0:	ldr	ip, [r5]
   13de4:	mov	r3, fp
   13de8:	mov	r2, sl
   13dec:	mov	r1, r9
   13df0:	mov	r7, r0
   13df4:	ldr	lr, [sp, #36]	; 0x24
   13df8:	ldr	r4, [r5, #40]	; 0x28
   13dfc:	str	r0, [lr, #4]
   13e00:	ldr	lr, [r5, #44]	; 0x2c
   13e04:	str	ip, [sp]
   13e08:	ldr	ip, [sp, #44]	; 0x2c
   13e0c:	str	ip, [sp, #4]
   13e10:	ldr	ip, [sp, #40]	; 0x28
   13e14:	str	r4, [sp, #12]
   13e18:	str	lr, [sp, #16]
   13e1c:	str	ip, [sp, #8]
   13e20:	bl	124d0 <close@plt+0x159c>
   13e24:	ldr	r3, [sp, #28]
   13e28:	mov	r0, r7
   13e2c:	str	r3, [r8]
   13e30:	add	sp, sp, #60	; 0x3c
   13e34:	ldrd	r4, [sp]
   13e38:	ldrd	r6, [sp, #8]
   13e3c:	ldrd	r8, [sp, #16]
   13e40:	ldrd	sl, [sp, #24]
   13e44:	add	sp, sp, #32
   13e48:	pop	{pc}		; (ldr pc, [sp], #4)
   13e4c:	mov	r1, #8
   13e50:	mvn	r3, #-2147483648	; 0x80000000
   13e54:	str	r1, [sp]
   13e58:	add	r1, sp, #52	; 0x34
   13e5c:	bl	14d00 <close@plt+0x3dcc>
   13e60:	ldrd	r2, [r7, #8]
   13e64:	mov	r6, r0
   13e68:	str	r0, [r7]
   13e6c:	strd	r2, [r0]
   13e70:	b	13d2c <close@plt+0x2df8>
   13e74:	bl	10f28 <abort@plt>
   13e78:	strd	r4, [sp, #-16]!
   13e7c:	mov	r5, r0
   13e80:	str	r6, [sp, #8]
   13e84:	str	lr, [sp, #12]
   13e88:	bl	10e50 <__errno_location@plt>
   13e8c:	mov	r4, r0
   13e90:	cmp	r5, #0
   13e94:	ldr	r0, [pc, #32]	; 13ebc <close@plt+0x2f88>
   13e98:	mov	r1, #48	; 0x30
   13e9c:	movne	r0, r5
   13ea0:	ldr	r6, [r4]
   13ea4:	bl	14e78 <close@plt+0x3f44>
   13ea8:	str	r6, [r4]
   13eac:	ldrd	r4, [sp]
   13eb0:	ldr	r6, [sp, #8]
   13eb4:	add	sp, sp, #12
   13eb8:	pop	{pc}		; (ldr pc, [sp], #4)
   13ebc:	andeq	r7, r2, r8, ror r2
   13ec0:	ldr	r3, [pc, #12]	; 13ed4 <close@plt+0x2fa0>
   13ec4:	cmp	r0, #0
   13ec8:	moveq	r0, r3
   13ecc:	ldr	r0, [r0]
   13ed0:	bx	lr
   13ed4:	andeq	r7, r2, r8, ror r2
   13ed8:	ldr	r3, [pc, #12]	; 13eec <close@plt+0x2fb8>
   13edc:	cmp	r0, #0
   13ee0:	moveq	r0, r3
   13ee4:	str	r1, [r0]
   13ee8:	bx	lr
   13eec:	andeq	r7, r2, r8, ror r2
   13ef0:	ldr	r3, [pc, #52]	; 13f2c <close@plt+0x2ff8>
   13ef4:	cmp	r0, #0
   13ef8:	push	{lr}		; (str lr, [sp, #-4]!)
   13efc:	lsr	lr, r1, #5
   13f00:	and	r1, r1, #31
   13f04:	moveq	r0, r3
   13f08:	add	r3, r0, #8
   13f0c:	ldr	ip, [r3, lr, lsl #2]
   13f10:	lsr	r0, ip, r1
   13f14:	eor	r2, r2, r0
   13f18:	and	r0, r0, #1
   13f1c:	and	r2, r2, #1
   13f20:	eor	r1, ip, r2, lsl r1
   13f24:	str	r1, [r3, lr, lsl #2]
   13f28:	pop	{pc}		; (ldr pc, [sp], #4)
   13f2c:	andeq	r7, r2, r8, ror r2
   13f30:	ldr	r3, [pc, #16]	; 13f48 <close@plt+0x3014>
   13f34:	cmp	r0, #0
   13f38:	movne	r3, r0
   13f3c:	ldr	r0, [r3, #4]
   13f40:	str	r1, [r3, #4]
   13f44:	bx	lr
   13f48:	andeq	r7, r2, r8, ror r2
   13f4c:	ldr	r3, [pc, #48]	; 13f84 <close@plt+0x3050>
   13f50:	cmp	r0, #0
   13f54:	mov	ip, #10
   13f58:	moveq	r0, r3
   13f5c:	cmp	r2, #0
   13f60:	cmpne	r1, #0
   13f64:	str	ip, [r0]
   13f68:	beq	13f78 <close@plt+0x3044>
   13f6c:	str	r1, [r0, #40]	; 0x28
   13f70:	str	r2, [r0, #44]	; 0x2c
   13f74:	bx	lr
   13f78:	str	r4, [sp, #-8]!
   13f7c:	str	lr, [sp, #4]
   13f80:	bl	10f28 <abort@plt>
   13f84:	andeq	r7, r2, r8, ror r2
   13f88:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13f8c:	strd	r6, [sp, #8]
   13f90:	mov	r7, r0
   13f94:	mov	r6, r1
   13f98:	strd	r8, [sp, #16]
   13f9c:	mov	r8, r2
   13fa0:	mov	r9, r3
   13fa4:	str	lr, [sp, #24]
   13fa8:	sub	sp, sp, #28
   13fac:	ldr	r4, [sp, #56]	; 0x38
   13fb0:	ldr	ip, [pc, #104]	; 14020 <close@plt+0x30ec>
   13fb4:	cmp	r4, #0
   13fb8:	moveq	r4, ip
   13fbc:	bl	10e50 <__errno_location@plt>
   13fc0:	ldr	ip, [r4, #44]	; 0x2c
   13fc4:	mov	r5, r0
   13fc8:	mov	r1, r6
   13fcc:	add	lr, r4, #8
   13fd0:	mov	r3, r9
   13fd4:	ldr	r6, [r5]
   13fd8:	mov	r2, r8
   13fdc:	mov	r0, r7
   13fe0:	str	ip, [sp, #16]
   13fe4:	ldr	ip, [r4, #40]	; 0x28
   13fe8:	str	lr, [sp, #8]
   13fec:	str	ip, [sp, #12]
   13ff0:	ldr	ip, [r4, #4]
   13ff4:	str	ip, [sp, #4]
   13ff8:	ldr	ip, [r4]
   13ffc:	str	ip, [sp]
   14000:	bl	124d0 <close@plt+0x159c>
   14004:	str	r6, [r5]
   14008:	add	sp, sp, #28
   1400c:	ldrd	r4, [sp]
   14010:	ldrd	r6, [sp, #8]
   14014:	ldrd	r8, [sp, #16]
   14018:	add	sp, sp, #24
   1401c:	pop	{pc}		; (ldr pc, [sp], #4)
   14020:	andeq	r7, r2, r8, ror r2
   14024:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14028:	cmp	r3, #0
   1402c:	ldr	r4, [pc, #220]	; 14110 <close@plt+0x31dc>
   14030:	movne	r4, r3
   14034:	strd	r6, [sp, #8]
   14038:	mov	r6, r2
   1403c:	strd	r8, [sp, #16]
   14040:	mov	r9, r0
   14044:	strd	sl, [sp, #24]
   14048:	mov	sl, r1
   1404c:	str	lr, [sp, #32]
   14050:	sub	sp, sp, #44	; 0x2c
   14054:	bl	10e50 <__errno_location@plt>
   14058:	ldr	r5, [r4, #4]
   1405c:	mov	r7, r0
   14060:	mov	r1, #0
   14064:	add	r8, r4, #8
   14068:	mov	r3, sl
   1406c:	ldr	ip, [r4, #44]	; 0x2c
   14070:	mov	r2, r9
   14074:	mov	r0, r1
   14078:	ldr	lr, [r7]
   1407c:	cmp	r6, r1
   14080:	orreq	r5, r5, #1
   14084:	str	ip, [sp, #16]
   14088:	ldr	ip, [r4, #40]	; 0x28
   1408c:	stmib	sp, {r5, r8, ip}
   14090:	ldr	ip, [r4]
   14094:	str	lr, [sp, #28]
   14098:	str	ip, [sp]
   1409c:	bl	124d0 <close@plt+0x159c>
   140a0:	add	r1, r0, #1
   140a4:	mov	fp, r0
   140a8:	mov	r0, r1
   140ac:	str	r1, [sp, #36]	; 0x24
   140b0:	bl	14b50 <close@plt+0x3c1c>
   140b4:	ldr	ip, [r4, #44]	; 0x2c
   140b8:	mov	r3, sl
   140bc:	mov	r2, r9
   140c0:	ldr	r1, [sp, #36]	; 0x24
   140c4:	str	ip, [sp, #16]
   140c8:	ldr	ip, [r4, #40]	; 0x28
   140cc:	str	r0, [sp, #32]
   140d0:	stmib	sp, {r5, r8, ip}
   140d4:	ldr	ip, [r4]
   140d8:	str	ip, [sp]
   140dc:	bl	124d0 <close@plt+0x159c>
   140e0:	ldr	lr, [sp, #28]
   140e4:	cmp	r6, #0
   140e8:	ldr	r0, [sp, #32]
   140ec:	str	lr, [r7]
   140f0:	strne	fp, [r6]
   140f4:	add	sp, sp, #44	; 0x2c
   140f8:	ldrd	r4, [sp]
   140fc:	ldrd	r6, [sp, #8]
   14100:	ldrd	r8, [sp, #16]
   14104:	ldrd	sl, [sp, #24]
   14108:	add	sp, sp, #32
   1410c:	pop	{pc}		; (ldr pc, [sp], #4)
   14110:	andeq	r7, r2, r8, ror r2
   14114:	mov	r3, r2
   14118:	mov	r2, #0
   1411c:	b	14024 <close@plt+0x30f0>
   14120:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14124:	movw	r5, #28920	; 0x70f8
   14128:	movt	r5, #2
   1412c:	ldr	r3, [r5, #4]
   14130:	strd	r6, [sp, #8]
   14134:	str	r8, [sp, #16]
   14138:	str	lr, [sp, #20]
   1413c:	ldr	r7, [r5]
   14140:	cmp	r3, #1
   14144:	ble	14168 <close@plt+0x3234>
   14148:	mov	r4, #1
   1414c:	add	r6, r7, #4
   14150:	ldr	r0, [r6, r4, lsl #3]
   14154:	add	r4, r4, #1
   14158:	bl	12130 <close@plt+0x11fc>
   1415c:	ldr	r3, [r5, #4]
   14160:	cmp	r3, r4
   14164:	bgt	14150 <close@plt+0x321c>
   14168:	ldr	r0, [r7, #4]
   1416c:	movw	r4, #29048	; 0x7178
   14170:	movt	r4, #2
   14174:	cmp	r0, r4
   14178:	beq	1418c <close@plt+0x3258>
   1417c:	bl	12130 <close@plt+0x11fc>
   14180:	mov	r3, #256	; 0x100
   14184:	str	r3, [r5, #8]
   14188:	str	r4, [r5, #12]
   1418c:	ldr	r4, [pc, #44]	; 141c0 <close@plt+0x328c>
   14190:	cmp	r7, r4
   14194:	beq	141a4 <close@plt+0x3270>
   14198:	mov	r0, r7
   1419c:	bl	12130 <close@plt+0x11fc>
   141a0:	str	r4, [r5]
   141a4:	mov	r3, #1
   141a8:	ldrd	r6, [sp, #8]
   141ac:	str	r3, [r5, #4]
   141b0:	ldrd	r4, [sp]
   141b4:	ldr	r8, [sp, #16]
   141b8:	add	sp, sp, #20
   141bc:	pop	{pc}		; (ldr pc, [sp], #4)
   141c0:	andeq	r7, r2, r0, lsl #2
   141c4:	ldr	r3, [pc, #4]	; 141d0 <close@plt+0x329c>
   141c8:	mvn	r2, #0
   141cc:	b	13c90 <close@plt+0x2d5c>
   141d0:	andeq	r7, r2, r8, ror r2
   141d4:	ldr	r3, [pc]	; 141dc <close@plt+0x32a8>
   141d8:	b	13c90 <close@plt+0x2d5c>
   141dc:	andeq	r7, r2, r8, ror r2
   141e0:	mov	r1, r0
   141e4:	ldr	r3, [pc, #8]	; 141f4 <close@plt+0x32c0>
   141e8:	mvn	r2, #0
   141ec:	mov	r0, #0
   141f0:	b	13c90 <close@plt+0x2d5c>
   141f4:	andeq	r7, r2, r8, ror r2
   141f8:	mov	r2, r1
   141fc:	ldr	r3, [pc, #8]	; 1420c <close@plt+0x32d8>
   14200:	mov	r1, r0
   14204:	mov	r0, #0
   14208:	b	13c90 <close@plt+0x2d5c>
   1420c:	andeq	r7, r2, r8, ror r2
   14210:	strd	r4, [sp, #-12]!
   14214:	mov	r5, r2
   14218:	mov	r4, r0
   1421c:	str	lr, [sp, #8]
   14220:	sub	sp, sp, #52	; 0x34
   14224:	mov	r0, sp
   14228:	bl	1232c <close@plt+0x13f8>
   1422c:	mov	r3, sp
   14230:	mov	r1, r5
   14234:	mov	r0, r4
   14238:	mvn	r2, #0
   1423c:	bl	13c90 <close@plt+0x2d5c>
   14240:	add	sp, sp, #52	; 0x34
   14244:	ldrd	r4, [sp]
   14248:	add	sp, sp, #8
   1424c:	pop	{pc}		; (ldr pc, [sp], #4)
   14250:	strd	r4, [sp, #-16]!
   14254:	mov	r5, r2
   14258:	mov	r4, r0
   1425c:	str	r6, [sp, #8]
   14260:	mov	r6, r3
   14264:	str	lr, [sp, #12]
   14268:	sub	sp, sp, #48	; 0x30
   1426c:	mov	r0, sp
   14270:	bl	1232c <close@plt+0x13f8>
   14274:	mov	r3, sp
   14278:	mov	r2, r6
   1427c:	mov	r1, r5
   14280:	mov	r0, r4
   14284:	bl	13c90 <close@plt+0x2d5c>
   14288:	add	sp, sp, #48	; 0x30
   1428c:	ldrd	r4, [sp]
   14290:	ldr	r6, [sp, #8]
   14294:	add	sp, sp, #12
   14298:	pop	{pc}		; (ldr pc, [sp], #4)
   1429c:	mov	r2, r1
   142a0:	mov	r1, r0
   142a4:	mov	r0, #0
   142a8:	b	14210 <close@plt+0x32dc>
   142ac:	mov	r3, r2
   142b0:	mov	r2, r1
   142b4:	mov	r1, r0
   142b8:	mov	r0, #0
   142bc:	b	14250 <close@plt+0x331c>
   142c0:	ldr	ip, [pc, #140]	; 14354 <close@plt+0x3420>
   142c4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   142c8:	ldrd	r4, [ip]
   142cc:	strd	r6, [sp, #8]
   142d0:	ldrd	r6, [ip, #8]
   142d4:	strd	r8, [sp, #16]
   142d8:	lsr	r9, r2, #5
   142dc:	str	lr, [sp, #24]
   142e0:	sub	sp, sp, #52	; 0x34
   142e4:	and	lr, r2, #31
   142e8:	add	r8, sp, #8
   142ec:	mov	r2, r1
   142f0:	strd	r4, [sp]
   142f4:	mov	r1, r0
   142f8:	mov	r3, sp
   142fc:	strd	r6, [sp, #8]
   14300:	mov	r0, #0
   14304:	ldrd	r4, [ip, #16]
   14308:	ldrd	r6, [ip, #24]
   1430c:	strd	r4, [sp, #16]
   14310:	ldrd	r4, [ip, #32]
   14314:	strd	r6, [sp, #24]
   14318:	ldrd	r6, [ip, #40]	; 0x28
   1431c:	strd	r4, [sp, #32]
   14320:	strd	r6, [sp, #40]	; 0x28
   14324:	ldr	ip, [r8, r9, lsl #2]
   14328:	mvn	r4, ip, lsr lr
   1432c:	and	r4, r4, #1
   14330:	eor	lr, ip, r4, lsl lr
   14334:	str	lr, [r8, r9, lsl #2]
   14338:	bl	13c90 <close@plt+0x2d5c>
   1433c:	add	sp, sp, #52	; 0x34
   14340:	ldrd	r4, [sp]
   14344:	ldrd	r6, [sp, #8]
   14348:	ldrd	r8, [sp, #16]
   1434c:	add	sp, sp, #24
   14350:	pop	{pc}		; (ldr pc, [sp], #4)
   14354:	andeq	r7, r2, r8, ror r2
   14358:	mov	r2, r1
   1435c:	mvn	r1, #0
   14360:	b	142c0 <close@plt+0x338c>
   14364:	mov	r2, #58	; 0x3a
   14368:	mvn	r1, #0
   1436c:	b	142c0 <close@plt+0x338c>
   14370:	mov	r2, #58	; 0x3a
   14374:	b	142c0 <close@plt+0x338c>
   14378:	strd	r4, [sp, #-20]!	; 0xffffffec
   1437c:	strd	r6, [sp, #8]
   14380:	mov	r6, r0
   14384:	mov	r7, r2
   14388:	str	lr, [sp, #16]
   1438c:	sub	sp, sp, #100	; 0x64
   14390:	mov	r0, sp
   14394:	bl	1232c <close@plt+0x13f8>
   14398:	ldrd	r4, [sp, #8]
   1439c:	mov	r1, r7
   143a0:	mov	r0, r6
   143a4:	add	r3, sp, #48	; 0x30
   143a8:	mvn	r2, #0
   143ac:	ldrd	r6, [sp]
   143b0:	strd	r4, [sp, #56]	; 0x38
   143b4:	ldrd	r4, [sp, #16]
   143b8:	strd	r6, [sp, #48]	; 0x30
   143bc:	ldrd	r6, [sp, #32]
   143c0:	ldr	lr, [sp, #60]	; 0x3c
   143c4:	strd	r4, [sp, #64]	; 0x40
   143c8:	ldrd	r4, [sp, #24]
   143cc:	mvn	ip, lr
   143d0:	and	ip, ip, #67108864	; 0x4000000
   143d4:	strd	r4, [sp, #72]	; 0x48
   143d8:	eor	ip, ip, lr
   143dc:	ldrd	r4, [sp, #40]	; 0x28
   143e0:	str	ip, [sp, #60]	; 0x3c
   143e4:	strd	r6, [sp, #80]	; 0x50
   143e8:	strd	r4, [sp, #88]	; 0x58
   143ec:	bl	13c90 <close@plt+0x2d5c>
   143f0:	add	sp, sp, #100	; 0x64
   143f4:	ldrd	r4, [sp]
   143f8:	ldrd	r6, [sp, #8]
   143fc:	add	sp, sp, #16
   14400:	pop	{pc}		; (ldr pc, [sp], #4)
   14404:	ldr	ip, [pc, #156]	; 144a8 <close@plt+0x3574>
   14408:	cmp	r2, #0
   1440c:	cmpne	r1, #0
   14410:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14414:	strd	r6, [sp, #8]
   14418:	mov	r6, r2
   1441c:	str	r8, [sp, #16]
   14420:	mov	r8, r3
   14424:	strd	sl, [sp, #20]
   14428:	ldrd	r4, [ip]
   1442c:	str	lr, [sp, #28]
   14430:	sub	sp, sp, #48	; 0x30
   14434:	mov	lr, #10
   14438:	ldrd	r2, [ip, #8]
   1443c:	ldrd	sl, [ip, #16]
   14440:	strd	r4, [sp]
   14444:	ldrd	r4, [ip, #32]
   14448:	str	lr, [sp]
   1444c:	strd	r2, [sp, #8]
   14450:	strd	sl, [sp, #16]
   14454:	ldrd	r2, [ip, #24]
   14458:	ldrd	sl, [ip, #40]	; 0x28
   1445c:	strd	r2, [sp, #24]
   14460:	strd	r4, [sp, #32]
   14464:	strd	sl, [sp, #40]	; 0x28
   14468:	beq	144a4 <close@plt+0x3570>
   1446c:	ldr	r2, [sp, #80]	; 0x50
   14470:	mov	r7, r1
   14474:	mov	r3, sp
   14478:	mov	r1, r8
   1447c:	str	r7, [sp, #40]	; 0x28
   14480:	str	r6, [sp, #44]	; 0x2c
   14484:	bl	13c90 <close@plt+0x2d5c>
   14488:	add	sp, sp, #48	; 0x30
   1448c:	ldrd	r4, [sp]
   14490:	ldrd	r6, [sp, #8]
   14494:	ldr	r8, [sp, #16]
   14498:	ldrd	sl, [sp, #20]
   1449c:	add	sp, sp, #28
   144a0:	pop	{pc}		; (ldr pc, [sp], #4)
   144a4:	bl	10f28 <abort@plt>
   144a8:	andeq	r7, r2, r8, ror r2
   144ac:	mvn	ip, #0
   144b0:	push	{lr}		; (str lr, [sp, #-4]!)
   144b4:	sub	sp, sp, #12
   144b8:	str	ip, [sp]
   144bc:	bl	14404 <close@plt+0x34d0>
   144c0:	add	sp, sp, #12
   144c4:	pop	{pc}		; (ldr pc, [sp], #4)
   144c8:	mvn	ip, #0
   144cc:	push	{lr}		; (str lr, [sp, #-4]!)
   144d0:	sub	sp, sp, #12
   144d4:	mov	r3, r2
   144d8:	mov	r2, r1
   144dc:	mov	r1, r0
   144e0:	mov	r0, #0
   144e4:	str	ip, [sp]
   144e8:	bl	14404 <close@plt+0x34d0>
   144ec:	add	sp, sp, #12
   144f0:	pop	{pc}		; (ldr pc, [sp], #4)
   144f4:	push	{lr}		; (str lr, [sp, #-4]!)
   144f8:	sub	sp, sp, #12
   144fc:	str	r3, [sp]
   14500:	mov	r3, r2
   14504:	mov	r2, r1
   14508:	mov	r1, r0
   1450c:	mov	r0, #0
   14510:	bl	14404 <close@plt+0x34d0>
   14514:	add	sp, sp, #12
   14518:	pop	{pc}		; (ldr pc, [sp], #4)
   1451c:	ldr	r3, [pc]	; 14524 <close@plt+0x35f0>
   14520:	b	13c90 <close@plt+0x2d5c>
   14524:	andeq	r7, r2, r8, lsl #2
   14528:	mov	r2, r1
   1452c:	ldr	r3, [pc, #8]	; 1453c <close@plt+0x3608>
   14530:	mov	r1, r0
   14534:	mov	r0, #0
   14538:	b	13c90 <close@plt+0x2d5c>
   1453c:	andeq	r7, r2, r8, lsl #2
   14540:	ldr	r3, [pc, #4]	; 1454c <close@plt+0x3618>
   14544:	mvn	r2, #0
   14548:	b	13c90 <close@plt+0x2d5c>
   1454c:	andeq	r7, r2, r8, lsl #2
   14550:	mov	r1, r0
   14554:	ldr	r3, [pc, #8]	; 14564 <close@plt+0x3630>
   14558:	mvn	r2, #0
   1455c:	mov	r0, #0
   14560:	b	13c90 <close@plt+0x2d5c>
   14564:	andeq	r7, r2, r8, lsl #2
   14568:	mov	r2, #3
   1456c:	mov	r1, #0
   14570:	b	15154 <close@plt+0x4220>
   14574:	cmp	r1, #0
   14578:	strd	r4, [sp, #-16]!
   1457c:	mov	ip, r3
   14580:	str	r6, [sp, #8]
   14584:	mov	r4, r0
   14588:	str	lr, [sp, #12]
   1458c:	sub	sp, sp, #32
   14590:	ldr	r5, [sp, #48]	; 0x30
   14594:	ldr	r6, [sp, #52]	; 0x34
   14598:	beq	146dc <close@plt+0x37a8>
   1459c:	mov	r3, r1
   145a0:	mov	r1, #1
   145a4:	stm	sp, {r2, ip}
   145a8:	movw	r2, #24200	; 0x5e88
   145ac:	movt	r2, #1
   145b0:	bl	10e98 <__fprintf_chk@plt>
   145b4:	mov	r2, #5
   145b8:	movw	r1, #24220	; 0x5e9c
   145bc:	movt	r1, #1
   145c0:	mov	r0, #0
   145c4:	bl	10d78 <dcgettext@plt>
   145c8:	movw	ip, #2022	; 0x7e6
   145cc:	mov	r3, r0
   145d0:	mov	r1, #1
   145d4:	movw	r2, #24948	; 0x6174
   145d8:	movt	r2, #1
   145dc:	mov	r0, r4
   145e0:	str	ip, [sp]
   145e4:	bl	10e98 <__fprintf_chk@plt>
   145e8:	mov	r1, r4
   145ec:	mov	r0, #10
   145f0:	bl	10d6c <fputc_unlocked@plt>
   145f4:	mov	r2, #5
   145f8:	movw	r1, #24224	; 0x5ea0
   145fc:	movt	r1, #1
   14600:	mov	r0, #0
   14604:	bl	10d78 <dcgettext@plt>
   14608:	mov	r2, r0
   1460c:	mov	r1, #1
   14610:	movw	r3, #24396	; 0x5f4c
   14614:	movt	r3, #1
   14618:	mov	r0, r4
   1461c:	bl	10e98 <__fprintf_chk@plt>
   14620:	mov	r1, r4
   14624:	mov	r0, #10
   14628:	bl	10d6c <fputc_unlocked@plt>
   1462c:	cmp	r6, #9
   14630:	ldrls	pc, [pc, r6, lsl #2]
   14634:	b	14948 <close@plt+0x3a14>
   14638:	andeq	r4, r1, r8, asr #13
   1463c:	strdeq	r4, [r1], -r8
   14640:	andeq	r4, r1, r4, lsr r7
   14644:	andeq	r4, r1, r4, ror r7
   14648:			; <UNDEFINED> instruction: 0x000147bc
   1464c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14650:	andeq	r4, r1, ip, lsr r8
   14654:	muleq	r1, r0, r8
   14658:	andeq	r4, r1, r8, ror #17
   1465c:	andeq	r4, r1, r0, ror #12
   14660:	movw	r1, #24700	; 0x607c
   14664:	movt	r1, #1
   14668:	mov	r2, #5
   1466c:	mov	r0, #0
   14670:	bl	10d78 <dcgettext@plt>
   14674:	ldr	lr, [r5, #4]
   14678:	mov	r2, r0
   1467c:	mov	r1, #1
   14680:	mov	r0, r4
   14684:	ldr	r3, [r5, #8]
   14688:	ldr	ip, [r5, #32]
   1468c:	str	lr, [sp]
   14690:	ldr	lr, [r5, #12]
   14694:	str	ip, [sp, #28]
   14698:	ldr	ip, [r5, #28]
   1469c:	str	r3, [sp, #4]
   146a0:	ldr	r3, [r5, #16]
   146a4:	str	lr, [sp, #8]
   146a8:	ldr	lr, [r5, #20]
   146ac:	str	ip, [sp, #24]
   146b0:	ldr	ip, [r5, #24]
   146b4:	str	r3, [sp, #12]
   146b8:	ldr	r3, [r5]
   146bc:	str	lr, [sp, #16]
   146c0:	str	ip, [sp, #20]
   146c4:	bl	10e98 <__fprintf_chk@plt>
   146c8:	add	sp, sp, #32
   146cc:	ldrd	r4, [sp]
   146d0:	ldr	r6, [sp, #8]
   146d4:	add	sp, sp, #12
   146d8:	pop	{pc}		; (ldr pc, [sp], #4)
   146dc:	mov	r3, r2
   146e0:	mov	r1, #1
   146e4:	str	ip, [sp]
   146e8:	movw	r2, #24212	; 0x5e94
   146ec:	movt	r2, #1
   146f0:	bl	10e98 <__fprintf_chk@plt>
   146f4:	b	145b4 <close@plt+0x3680>
   146f8:	mov	r2, #5
   146fc:	movw	r1, #24432	; 0x5f70
   14700:	movt	r1, #1
   14704:	mov	r0, #0
   14708:	bl	10d78 <dcgettext@plt>
   1470c:	ldr	r3, [r5]
   14710:	mov	r2, r0
   14714:	mov	r1, #1
   14718:	mov	r0, r4
   1471c:	add	sp, sp, #32
   14720:	ldrd	r4, [sp]
   14724:	ldr	r6, [sp, #8]
   14728:	ldr	lr, [sp, #12]
   1472c:	add	sp, sp, #16
   14730:	b	10e98 <__fprintf_chk@plt>
   14734:	mov	r2, #5
   14738:	movw	r1, #24448	; 0x5f80
   1473c:	movt	r1, #1
   14740:	mov	r0, #0
   14744:	bl	10d78 <dcgettext@plt>
   14748:	ldm	r5, {r3, ip}
   1474c:	mov	r2, r0
   14750:	mov	r1, #1
   14754:	mov	r0, r4
   14758:	str	ip, [sp, #48]	; 0x30
   1475c:	add	sp, sp, #32
   14760:	ldrd	r4, [sp]
   14764:	ldr	r6, [sp, #8]
   14768:	ldr	lr, [sp, #12]
   1476c:	add	sp, sp, #16
   14770:	b	10e98 <__fprintf_chk@plt>
   14774:	mov	r2, #5
   14778:	movw	r1, #24472	; 0x5f98
   1477c:	movt	r1, #1
   14780:	mov	r0, #0
   14784:	bl	10d78 <dcgettext@plt>
   14788:	ldm	r5, {r3, lr}
   1478c:	mov	r2, r0
   14790:	mov	r1, #1
   14794:	mov	r0, r4
   14798:	ldr	ip, [r5, #8]
   1479c:	str	lr, [sp, #48]	; 0x30
   147a0:	str	ip, [sp, #52]	; 0x34
   147a4:	add	sp, sp, #32
   147a8:	ldrd	r4, [sp]
   147ac:	ldr	r6, [sp, #8]
   147b0:	ldr	lr, [sp, #12]
   147b4:	add	sp, sp, #16
   147b8:	b	10e98 <__fprintf_chk@plt>
   147bc:	mov	r2, #5
   147c0:	movw	r1, #24500	; 0x5fb4
   147c4:	movt	r1, #1
   147c8:	mov	r0, #0
   147cc:	bl	10d78 <dcgettext@plt>
   147d0:	ldmib	r5, {r3, ip, lr}
   147d4:	mov	r2, r0
   147d8:	mov	r1, #1
   147dc:	mov	r0, r4
   147e0:	str	r3, [sp]
   147e4:	ldr	r3, [r5]
   147e8:	stmib	sp, {ip, lr}
   147ec:	bl	10e98 <__fprintf_chk@plt>
   147f0:	b	146c8 <close@plt+0x3794>
   147f4:	mov	r2, #5
   147f8:	movw	r1, #24532	; 0x5fd4
   147fc:	movt	r1, #1
   14800:	mov	r0, #0
   14804:	bl	10d78 <dcgettext@plt>
   14808:	ldmib	r5, {ip, lr}
   1480c:	mov	r2, r0
   14810:	mov	r1, #1
   14814:	mov	r0, r4
   14818:	ldr	r3, [r5, #16]
   1481c:	str	ip, [sp]
   14820:	ldr	ip, [r5, #12]
   14824:	str	r3, [sp, #12]
   14828:	ldr	r3, [r5]
   1482c:	str	lr, [sp, #4]
   14830:	str	ip, [sp, #8]
   14834:	bl	10e98 <__fprintf_chk@plt>
   14838:	b	146c8 <close@plt+0x3794>
   1483c:	mov	r2, #5
   14840:	movw	r1, #24568	; 0x5ff8
   14844:	movt	r1, #1
   14848:	mov	r0, #0
   1484c:	bl	10d78 <dcgettext@plt>
   14850:	ldr	lr, [r5, #4]
   14854:	mov	r2, r0
   14858:	mov	r1, #1
   1485c:	mov	r0, r4
   14860:	ldr	r3, [r5, #8]
   14864:	ldr	ip, [r5, #20]
   14868:	str	lr, [sp]
   1486c:	ldr	lr, [r5, #12]
   14870:	str	ip, [sp, #16]
   14874:	ldr	ip, [r5, #16]
   14878:	str	r3, [sp, #4]
   1487c:	ldr	r3, [r5]
   14880:	str	lr, [sp, #8]
   14884:	str	ip, [sp, #12]
   14888:	bl	10e98 <__fprintf_chk@plt>
   1488c:	b	146c8 <close@plt+0x3794>
   14890:	mov	r2, #5
   14894:	movw	r1, #24608	; 0x6020
   14898:	movt	r1, #1
   1489c:	mov	r0, #0
   148a0:	bl	10d78 <dcgettext@plt>
   148a4:	ldmib	r5, {r3, ip}
   148a8:	mov	r2, r0
   148ac:	mov	r1, #1
   148b0:	mov	r0, r4
   148b4:	ldr	lr, [r5, #24]
   148b8:	str	r3, [sp]
   148bc:	ldr	r3, [r5, #12]
   148c0:	str	lr, [sp, #20]
   148c4:	ldr	lr, [r5, #20]
   148c8:	str	ip, [sp, #4]
   148cc:	ldr	ip, [r5, #16]
   148d0:	str	r3, [sp, #8]
   148d4:	ldr	r3, [r5]
   148d8:	str	ip, [sp, #12]
   148dc:	str	lr, [sp, #16]
   148e0:	bl	10e98 <__fprintf_chk@plt>
   148e4:	b	146c8 <close@plt+0x3794>
   148e8:	mov	r2, #5
   148ec:	movw	r1, #24652	; 0x604c
   148f0:	movt	r1, #1
   148f4:	mov	r0, #0
   148f8:	bl	10d78 <dcgettext@plt>
   148fc:	ldmib	r5, {ip, lr}
   14900:	mov	r2, r0
   14904:	mov	r1, #1
   14908:	mov	r0, r4
   1490c:	ldr	r3, [r5, #28]
   14910:	str	ip, [sp]
   14914:	ldr	ip, [r5, #12]
   14918:	str	r3, [sp, #24]
   1491c:	ldr	r3, [r5, #24]
   14920:	str	lr, [sp, #4]
   14924:	ldr	lr, [r5, #16]
   14928:	str	ip, [sp, #8]
   1492c:	ldr	ip, [r5, #20]
   14930:	str	r3, [sp, #20]
   14934:	ldr	r3, [r5]
   14938:	str	lr, [sp, #12]
   1493c:	str	ip, [sp, #16]
   14940:	bl	10e98 <__fprintf_chk@plt>
   14944:	b	146c8 <close@plt+0x3794>
   14948:	movw	r1, #24752	; 0x60b0
   1494c:	movt	r1, #1
   14950:	b	14668 <close@plt+0x3734>
   14954:	strd	r4, [sp, #-12]!
   14958:	str	lr, [sp, #8]
   1495c:	sub	sp, sp, #12
   14960:	ldr	r5, [sp, #24]
   14964:	ldr	ip, [r5]
   14968:	cmp	ip, #0
   1496c:	beq	14988 <close@plt+0x3a54>
   14970:	mov	lr, r5
   14974:	mov	ip, #0
   14978:	ldr	r4, [lr, #4]!
   1497c:	add	ip, ip, #1
   14980:	cmp	r4, #0
   14984:	bne	14978 <close@plt+0x3a44>
   14988:	stm	sp, {r5, ip}
   1498c:	bl	14574 <close@plt+0x3640>
   14990:	add	sp, sp, #12
   14994:	ldrd	r4, [sp]
   14998:	add	sp, sp, #8
   1499c:	pop	{pc}		; (ldr pc, [sp], #4)
   149a0:	strd	r4, [sp, #-16]!
   149a4:	mov	ip, #0
   149a8:	str	r6, [sp, #8]
   149ac:	str	lr, [sp, #12]
   149b0:	sub	sp, sp, #48	; 0x30
   149b4:	ldr	r5, [sp, #64]	; 0x40
   149b8:	add	r6, sp, #8
   149bc:	mov	r4, r6
   149c0:	ldr	lr, [r5], #4
   149c4:	cmp	lr, #0
   149c8:	str	lr, [r4], #4
   149cc:	beq	149dc <close@plt+0x3aa8>
   149d0:	add	ip, ip, #1
   149d4:	cmp	ip, #10
   149d8:	bne	149c0 <close@plt+0x3a8c>
   149dc:	stm	sp, {r6, ip}
   149e0:	bl	14574 <close@plt+0x3640>
   149e4:	add	sp, sp, #48	; 0x30
   149e8:	ldrd	r4, [sp]
   149ec:	ldr	r6, [sp, #8]
   149f0:	add	sp, sp, #12
   149f4:	pop	{pc}		; (ldr pc, [sp], #4)
   149f8:	push	{r3}		; (str r3, [sp, #-4]!)
   149fc:	mov	ip, #0
   14a00:	strd	r4, [sp, #-12]!
   14a04:	str	lr, [sp, #8]
   14a08:	sub	sp, sp, #56	; 0x38
   14a0c:	add	r3, sp, #72	; 0x48
   14a10:	add	r5, sp, #16
   14a14:	mov	r4, r3
   14a18:	mov	lr, r5
   14a1c:	str	r3, [sp, #12]
   14a20:	ldr	r3, [r4], #4
   14a24:	cmp	r3, #0
   14a28:	str	r3, [lr], #4
   14a2c:	beq	14a3c <close@plt+0x3b08>
   14a30:	add	ip, ip, #1
   14a34:	cmp	ip, #10
   14a38:	bne	14a20 <close@plt+0x3aec>
   14a3c:	ldr	r3, [sp, #68]	; 0x44
   14a40:	stm	sp, {r5, ip}
   14a44:	bl	14574 <close@plt+0x3640>
   14a48:	add	sp, sp, #56	; 0x38
   14a4c:	ldrd	r4, [sp]
   14a50:	ldr	lr, [sp, #8]
   14a54:	add	sp, sp, #12
   14a58:	add	sp, sp, #4
   14a5c:	bx	lr
   14a60:	movw	r3, #29012	; 0x7154
   14a64:	movt	r3, #2
   14a68:	str	r4, [sp, #-8]!
   14a6c:	mov	r0, #10
   14a70:	ldr	r1, [r3]
   14a74:	str	lr, [sp, #4]
   14a78:	bl	10d6c <fputc_unlocked@plt>
   14a7c:	mov	r2, #5
   14a80:	movw	r1, #24812	; 0x60ec
   14a84:	movt	r1, #1
   14a88:	mov	r0, #0
   14a8c:	bl	10d78 <dcgettext@plt>
   14a90:	mov	r1, r0
   14a94:	movw	r2, #24832	; 0x6100
   14a98:	movt	r2, #1
   14a9c:	mov	r0, #1
   14aa0:	bl	10e80 <__printf_chk@plt>
   14aa4:	mov	r2, #5
   14aa8:	movw	r1, #24856	; 0x6118
   14aac:	movt	r1, #1
   14ab0:	mov	r0, #0
   14ab4:	bl	10d78 <dcgettext@plt>
   14ab8:	mov	r1, r0
   14abc:	movw	r3, #23252	; 0x5ad4
   14ac0:	movt	r3, #1
   14ac4:	movw	r2, #23292	; 0x5afc
   14ac8:	movt	r2, #1
   14acc:	mov	r0, #1
   14ad0:	bl	10e80 <__printf_chk@plt>
   14ad4:	mov	r2, #5
   14ad8:	movw	r1, #24876	; 0x612c
   14adc:	movt	r1, #1
   14ae0:	mov	r0, #0
   14ae4:	bl	10d78 <dcgettext@plt>
   14ae8:	mov	r1, r0
   14aec:	movw	r2, #24916	; 0x6154
   14af0:	movt	r2, #1
   14af4:	mov	r0, #1
   14af8:	ldr	r4, [sp]
   14afc:	ldr	lr, [sp, #4]
   14b00:	add	sp, sp, #8
   14b04:	b	10e80 <__printf_chk@plt>
   14b08:	str	r4, [sp, #-8]!
   14b0c:	str	lr, [sp, #4]
   14b10:	bl	15038 <close@plt+0x4104>
   14b14:	cmp	r0, #0
   14b18:	beq	14b28 <close@plt+0x3bf4>
   14b1c:	ldr	r4, [sp]
   14b20:	add	sp, sp, #4
   14b24:	pop	{pc}		; (ldr pc, [sp], #4)
   14b28:	bl	14f80 <close@plt+0x404c>
   14b2c:	str	r4, [sp, #-8]!
   14b30:	str	lr, [sp, #4]
   14b34:	bl	15038 <close@plt+0x4104>
   14b38:	cmp	r0, #0
   14b3c:	beq	14b4c <close@plt+0x3c18>
   14b40:	ldr	r4, [sp]
   14b44:	add	sp, sp, #4
   14b48:	pop	{pc}		; (ldr pc, [sp], #4)
   14b4c:	bl	14f80 <close@plt+0x404c>
   14b50:	str	r4, [sp, #-8]!
   14b54:	str	lr, [sp, #4]
   14b58:	bl	15038 <close@plt+0x4104>
   14b5c:	cmp	r0, #0
   14b60:	beq	14b70 <close@plt+0x3c3c>
   14b64:	ldr	r4, [sp]
   14b68:	add	sp, sp, #4
   14b6c:	pop	{pc}		; (ldr pc, [sp], #4)
   14b70:	bl	14f80 <close@plt+0x404c>
   14b74:	strd	r4, [sp, #-16]!
   14b78:	mov	r5, r0
   14b7c:	mov	r4, r1
   14b80:	str	r6, [sp, #8]
   14b84:	str	lr, [sp, #12]
   14b88:	bl	15074 <close@plt+0x4140>
   14b8c:	cmp	r0, #0
   14b90:	beq	14ba4 <close@plt+0x3c70>
   14b94:	ldrd	r4, [sp]
   14b98:	ldr	r6, [sp, #8]
   14b9c:	add	sp, sp, #12
   14ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ba4:	adds	r4, r4, #0
   14ba8:	movne	r4, #1
   14bac:	cmp	r5, #0
   14bb0:	moveq	r4, #1
   14bb4:	cmp	r4, #0
   14bb8:	beq	14b94 <close@plt+0x3c60>
   14bbc:	bl	14f80 <close@plt+0x404c>
   14bc0:	cmp	r1, #0
   14bc4:	orreq	r1, r1, #1
   14bc8:	str	r4, [sp, #-8]!
   14bcc:	str	lr, [sp, #4]
   14bd0:	bl	15074 <close@plt+0x4140>
   14bd4:	cmp	r0, #0
   14bd8:	beq	14be8 <close@plt+0x3cb4>
   14bdc:	ldr	r4, [sp]
   14be0:	add	sp, sp, #4
   14be4:	pop	{pc}		; (ldr pc, [sp], #4)
   14be8:	bl	14f80 <close@plt+0x404c>
   14bec:	strd	r4, [sp, #-16]!
   14bf0:	mov	r4, r0
   14bf4:	mov	r5, r2
   14bf8:	str	r6, [sp, #8]
   14bfc:	mov	r6, r1
   14c00:	str	lr, [sp, #12]
   14c04:	bl	153f8 <close@plt+0x44c4>
   14c08:	cmp	r0, #0
   14c0c:	beq	14c20 <close@plt+0x3cec>
   14c10:	ldrd	r4, [sp]
   14c14:	ldr	r6, [sp, #8]
   14c18:	add	sp, sp, #12
   14c1c:	pop	{pc}		; (ldr pc, [sp], #4)
   14c20:	cmp	r4, #0
   14c24:	beq	14c34 <close@plt+0x3d00>
   14c28:	cmp	r6, #0
   14c2c:	cmpne	r5, #0
   14c30:	beq	14c10 <close@plt+0x3cdc>
   14c34:	bl	14f80 <close@plt+0x404c>
   14c38:	b	14bec <close@plt+0x3cb8>
   14c3c:	cmp	r2, #0
   14c40:	cmpne	r1, #0
   14c44:	str	r4, [sp, #-8]!
   14c48:	moveq	r2, #1
   14c4c:	str	lr, [sp, #4]
   14c50:	moveq	r1, r2
   14c54:	bl	153f8 <close@plt+0x44c4>
   14c58:	cmp	r0, #0
   14c5c:	beq	14c6c <close@plt+0x3d38>
   14c60:	ldr	r4, [sp]
   14c64:	add	sp, sp, #4
   14c68:	pop	{pc}		; (ldr pc, [sp], #4)
   14c6c:	bl	14f80 <close@plt+0x404c>
   14c70:	mov	r2, r1
   14c74:	mov	r1, r0
   14c78:	mov	r0, #0
   14c7c:	b	14bec <close@plt+0x3cb8>
   14c80:	mov	r2, r1
   14c84:	mov	r1, r0
   14c88:	mov	r0, #0
   14c8c:	b	14c3c <close@plt+0x3d08>
   14c90:	cmp	r0, #0
   14c94:	strd	r4, [sp, #-16]!
   14c98:	mov	r5, r1
   14c9c:	ldr	r4, [r1]
   14ca0:	str	r6, [sp, #8]
   14ca4:	str	lr, [sp, #12]
   14ca8:	beq	14cd8 <close@plt+0x3da4>
   14cac:	lsr	r3, r4, #1
   14cb0:	add	r3, r3, #1
   14cb4:	adds	r4, r4, r3
   14cb8:	bcs	14cf4 <close@plt+0x3dc0>
   14cbc:	mov	r1, r4
   14cc0:	bl	14bec <close@plt+0x3cb8>
   14cc4:	ldr	r6, [sp, #8]
   14cc8:	str	r4, [r5]
   14ccc:	ldrd	r4, [sp]
   14cd0:	add	sp, sp, #12
   14cd4:	pop	{pc}		; (ldr pc, [sp], #4)
   14cd8:	cmp	r4, #0
   14cdc:	bne	14cbc <close@plt+0x3d88>
   14ce0:	mov	r4, #64	; 0x40
   14ce4:	udiv	r4, r4, r2
   14ce8:	cmp	r2, #64	; 0x40
   14cec:	addhi	r4, r4, #1
   14cf0:	b	14cbc <close@plt+0x3d88>
   14cf4:	bl	14f80 <close@plt+0x404c>
   14cf8:	mov	r2, #1
   14cfc:	b	14c90 <close@plt+0x3d5c>
   14d00:	ldr	ip, [r1]
   14d04:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14d08:	mov	r5, r1
   14d0c:	strd	r6, [sp, #8]
   14d10:	str	lr, [sp, #28]
   14d14:	strd	r8, [sp, #16]
   14d18:	asr	lr, ip, #1
   14d1c:	ldr	r8, [sp, #32]
   14d20:	str	sl, [sp, #24]
   14d24:	adds	r4, ip, lr
   14d28:	mvn	lr, r3
   14d2c:	lsr	lr, lr, #31
   14d30:	mvnvs	r4, #-2147483648	; 0x80000000
   14d34:	cmp	r3, r4
   14d38:	movge	r1, #0
   14d3c:	andlt	r1, lr, #1
   14d40:	cmp	r1, #0
   14d44:	movne	r4, r3
   14d48:	smull	r6, r7, r4, r8
   14d4c:	cmp	r7, r6, asr #31
   14d50:	bne	14dd8 <close@plt+0x3ea4>
   14d54:	cmp	r6, #63	; 0x3f
   14d58:	mov	r1, r6
   14d5c:	ble	14dc0 <close@plt+0x3e8c>
   14d60:	cmp	r0, #0
   14d64:	sub	r6, r4, ip
   14d68:	streq	r0, [r5]
   14d6c:	cmp	r6, r2
   14d70:	bge	14da0 <close@plt+0x3e6c>
   14d74:	adds	r4, ip, r2
   14d78:	bvs	14dd4 <close@plt+0x3ea0>
   14d7c:	cmp	r4, r3
   14d80:	movle	r3, #0
   14d84:	andgt	r3, lr, #1
   14d88:	cmp	r3, #0
   14d8c:	bne	14dd4 <close@plt+0x3ea0>
   14d90:	smull	r8, r9, r4, r8
   14d94:	cmp	r9, r8, asr #31
   14d98:	mov	r1, r8
   14d9c:	bne	14dd4 <close@plt+0x3ea0>
   14da0:	bl	14b74 <close@plt+0x3c40>
   14da4:	ldrd	r6, [sp, #8]
   14da8:	ldrd	r8, [sp, #16]
   14dac:	ldr	sl, [sp, #24]
   14db0:	str	r4, [r5]
   14db4:	ldrd	r4, [sp]
   14db8:	add	sp, sp, #28
   14dbc:	pop	{pc}		; (ldr pc, [sp], #4)
   14dc0:	mov	r6, #64	; 0x40
   14dc4:	sdiv	r4, r6, r8
   14dc8:	mls	r1, r8, r4, r6
   14dcc:	sub	r1, r6, r1
   14dd0:	b	14d60 <close@plt+0x3e2c>
   14dd4:	bl	14f80 <close@plt+0x404c>
   14dd8:	mvn	r6, #-2147483648	; 0x80000000
   14ddc:	b	14dc4 <close@plt+0x3e90>
   14de0:	mov	r1, #1
   14de4:	str	r4, [sp, #-8]!
   14de8:	str	lr, [sp, #4]
   14dec:	bl	14fc4 <close@plt+0x4090>
   14df0:	cmp	r0, #0
   14df4:	beq	14e04 <close@plt+0x3ed0>
   14df8:	ldr	r4, [sp]
   14dfc:	add	sp, sp, #4
   14e00:	pop	{pc}		; (ldr pc, [sp], #4)
   14e04:	bl	14f80 <close@plt+0x404c>
   14e08:	mov	r1, #1
   14e0c:	str	r4, [sp, #-8]!
   14e10:	str	lr, [sp, #4]
   14e14:	bl	14fc4 <close@plt+0x4090>
   14e18:	cmp	r0, #0
   14e1c:	beq	14e2c <close@plt+0x3ef8>
   14e20:	ldr	r4, [sp]
   14e24:	add	sp, sp, #4
   14e28:	pop	{pc}		; (ldr pc, [sp], #4)
   14e2c:	bl	14f80 <close@plt+0x404c>
   14e30:	str	r4, [sp, #-8]!
   14e34:	str	lr, [sp, #4]
   14e38:	bl	14fc4 <close@plt+0x4090>
   14e3c:	cmp	r0, #0
   14e40:	beq	14e50 <close@plt+0x3f1c>
   14e44:	ldr	r4, [sp]
   14e48:	add	sp, sp, #4
   14e4c:	pop	{pc}		; (ldr pc, [sp], #4)
   14e50:	bl	14f80 <close@plt+0x404c>
   14e54:	str	r4, [sp, #-8]!
   14e58:	str	lr, [sp, #4]
   14e5c:	bl	14fc4 <close@plt+0x4090>
   14e60:	cmp	r0, #0
   14e64:	beq	14e74 <close@plt+0x3f40>
   14e68:	ldr	r4, [sp]
   14e6c:	add	sp, sp, #4
   14e70:	pop	{pc}		; (ldr pc, [sp], #4)
   14e74:	bl	14f80 <close@plt+0x404c>
   14e78:	strd	r4, [sp, #-16]!
   14e7c:	mov	r4, r1
   14e80:	str	r6, [sp, #8]
   14e84:	mov	r6, r0
   14e88:	mov	r0, r1
   14e8c:	str	lr, [sp, #12]
   14e90:	bl	15038 <close@plt+0x4104>
   14e94:	subs	r5, r0, #0
   14e98:	beq	14ebc <close@plt+0x3f88>
   14e9c:	mov	r2, r4
   14ea0:	mov	r1, r6
   14ea4:	bl	10d30 <memcpy@plt>
   14ea8:	mov	r0, r5
   14eac:	ldrd	r4, [sp]
   14eb0:	ldr	r6, [sp, #8]
   14eb4:	add	sp, sp, #12
   14eb8:	pop	{pc}		; (ldr pc, [sp], #4)
   14ebc:	bl	14f80 <close@plt+0x404c>
   14ec0:	strd	r4, [sp, #-16]!
   14ec4:	mov	r4, r1
   14ec8:	str	r6, [sp, #8]
   14ecc:	mov	r6, r0
   14ed0:	mov	r0, r1
   14ed4:	str	lr, [sp, #12]
   14ed8:	bl	15038 <close@plt+0x4104>
   14edc:	subs	r5, r0, #0
   14ee0:	beq	14f04 <close@plt+0x3fd0>
   14ee4:	mov	r2, r4
   14ee8:	mov	r1, r6
   14eec:	bl	10d30 <memcpy@plt>
   14ef0:	mov	r0, r5
   14ef4:	ldrd	r4, [sp]
   14ef8:	ldr	r6, [sp, #8]
   14efc:	add	sp, sp, #12
   14f00:	pop	{pc}		; (ldr pc, [sp], #4)
   14f04:	bl	14f80 <close@plt+0x404c>
   14f08:	strd	r4, [sp, #-16]!
   14f0c:	mov	r4, r1
   14f10:	str	r6, [sp, #8]
   14f14:	mov	r6, r0
   14f18:	add	r0, r1, #1
   14f1c:	str	lr, [sp, #12]
   14f20:	bl	15038 <close@plt+0x4104>
   14f24:	subs	r5, r0, #0
   14f28:	beq	14f54 <close@plt+0x4020>
   14f2c:	mov	r3, #0
   14f30:	mov	r1, r6
   14f34:	mov	r2, r4
   14f38:	strb	r3, [r5, r4]
   14f3c:	bl	10d30 <memcpy@plt>
   14f40:	mov	r0, r5
   14f44:	ldrd	r4, [sp]
   14f48:	ldr	r6, [sp, #8]
   14f4c:	add	sp, sp, #12
   14f50:	pop	{pc}		; (ldr pc, [sp], #4)
   14f54:	bl	14f80 <close@plt+0x404c>
   14f58:	str	r4, [sp, #-8]!
   14f5c:	mov	r4, r0
   14f60:	str	lr, [sp, #4]
   14f64:	bl	10e44 <strlen@plt>
   14f68:	add	r1, r0, #1
   14f6c:	mov	r0, r4
   14f70:	ldr	r4, [sp]
   14f74:	ldr	lr, [sp, #4]
   14f78:	add	sp, sp, #8
   14f7c:	b	14e78 <close@plt+0x3f44>
   14f80:	movw	r3, #28916	; 0x70f4
   14f84:	movt	r3, #2
   14f88:	str	r4, [sp, #-8]!
   14f8c:	ldr	r4, [r3]
   14f90:	mov	r2, #5
   14f94:	movw	r1, #24996	; 0x61a4
   14f98:	movt	r1, #1
   14f9c:	mov	r0, #0
   14fa0:	str	lr, [sp, #4]
   14fa4:	bl	10d78 <dcgettext@plt>
   14fa8:	mov	r3, r0
   14fac:	movw	r2, #23912	; 0x5d68
   14fb0:	movt	r2, #1
   14fb4:	mov	r1, #0
   14fb8:	mov	r0, r4
   14fbc:	bl	10de4 <error@plt>
   14fc0:	bl	10f28 <abort@plt>
   14fc4:	cmp	r1, #0
   14fc8:	cmpne	r0, #0
   14fcc:	beq	15018 <close@plt+0x40e4>
   14fd0:	strd	r4, [sp, #-16]!
   14fd4:	umull	r4, r5, r0, r1
   14fd8:	str	r6, [sp, #8]
   14fdc:	str	lr, [sp, #12]
   14fe0:	adds	r3, r5, #0
   14fe4:	movne	r3, #1
   14fe8:	cmp	r4, #0
   14fec:	blt	14ff8 <close@plt+0x40c4>
   14ff0:	cmp	r3, #0
   14ff4:	beq	15024 <close@plt+0x40f0>
   14ff8:	bl	10e50 <__errno_location@plt>
   14ffc:	mov	r3, #12
   15000:	ldrd	r4, [sp]
   15004:	ldr	r6, [sp, #8]
   15008:	add	sp, sp, #12
   1500c:	str	r3, [r0]
   15010:	mov	r0, #0
   15014:	pop	{pc}		; (ldr pc, [sp], #4)
   15018:	mov	r1, #1
   1501c:	mov	r0, r1
   15020:	b	10cd0 <calloc@plt>
   15024:	ldrd	r4, [sp]
   15028:	ldr	r6, [sp, #8]
   1502c:	ldr	lr, [sp, #12]
   15030:	add	sp, sp, #16
   15034:	b	10cd0 <calloc@plt>
   15038:	cmp	r0, #0
   1503c:	beq	15048 <close@plt+0x4114>
   15040:	blt	15050 <close@plt+0x411c>
   15044:	b	10df0 <malloc@plt>
   15048:	mov	r0, #1
   1504c:	b	10df0 <malloc@plt>
   15050:	str	r4, [sp, #-8]!
   15054:	str	lr, [sp, #4]
   15058:	bl	10e50 <__errno_location@plt>
   1505c:	mov	r3, #12
   15060:	ldr	r4, [sp]
   15064:	add	sp, sp, #4
   15068:	str	r3, [r0]
   1506c:	mov	r0, #0
   15070:	pop	{pc}		; (ldr pc, [sp], #4)
   15074:	cmp	r0, #0
   15078:	beq	150a0 <close@plt+0x416c>
   1507c:	cmp	r1, #0
   15080:	str	r4, [sp, #-8]!
   15084:	str	lr, [sp, #4]
   15088:	beq	150a8 <close@plt+0x4174>
   1508c:	blt	150bc <close@plt+0x4188>
   15090:	ldr	r4, [sp]
   15094:	ldr	lr, [sp, #4]
   15098:	add	sp, sp, #8
   1509c:	b	10d84 <realloc@plt>
   150a0:	mov	r0, r1
   150a4:	b	15038 <close@plt+0x4104>
   150a8:	bl	12130 <close@plt+0x11fc>
   150ac:	ldr	r4, [sp]
   150b0:	add	sp, sp, #4
   150b4:	mov	r0, #0
   150b8:	pop	{pc}		; (ldr pc, [sp], #4)
   150bc:	bl	10e50 <__errno_location@plt>
   150c0:	mov	r3, #12
   150c4:	str	r3, [r0]
   150c8:	b	150ac <close@plt+0x4178>
   150cc:	strd	r4, [sp, #-16]!
   150d0:	mov	r4, r0
   150d4:	str	r6, [sp, #8]
   150d8:	str	lr, [sp, #12]
   150dc:	bl	10dcc <__fpending@plt>
   150e0:	ldr	r5, [r4]
   150e4:	mov	r6, r0
   150e8:	mov	r0, r4
   150ec:	bl	11f70 <close@plt+0x103c>
   150f0:	mov	r4, r0
   150f4:	and	r5, r5, #32
   150f8:	cmp	r5, #0
   150fc:	bne	15134 <close@plt+0x4200>
   15100:	cmp	r0, #0
   15104:	beq	15120 <close@plt+0x41ec>
   15108:	cmp	r6, #0
   1510c:	bne	1514c <close@plt+0x4218>
   15110:	bl	10e50 <__errno_location@plt>
   15114:	ldr	r4, [r0]
   15118:	subs	r4, r4, #9
   1511c:	mvnne	r4, #0
   15120:	mov	r0, r4
   15124:	ldrd	r4, [sp]
   15128:	ldr	r6, [sp, #8]
   1512c:	add	sp, sp, #12
   15130:	pop	{pc}		; (ldr pc, [sp], #4)
   15134:	cmp	r0, #0
   15138:	bne	1514c <close@plt+0x4218>
   1513c:	bl	10e50 <__errno_location@plt>
   15140:	str	r4, [r0]
   15144:	mvn	r4, #0
   15148:	b	15120 <close@plt+0x41ec>
   1514c:	mvn	r4, #0
   15150:	b	15120 <close@plt+0x41ec>
   15154:	push	{r1, r2, r3}
   15158:	strd	r4, [sp, #-20]!	; 0xffffffec
   1515c:	strd	r6, [sp, #8]
   15160:	str	lr, [sp, #16]
   15164:	sub	sp, sp, #8
   15168:	ldr	r1, [sp, #28]
   1516c:	add	r2, sp, #32
   15170:	str	r2, [sp, #4]
   15174:	cmp	r1, #0
   15178:	beq	15254 <close@plt+0x4320>
   1517c:	movw	r3, #1030	; 0x406
   15180:	mov	r6, r0
   15184:	cmp	r1, r3
   15188:	beq	15264 <close@plt+0x4330>
   1518c:	cmp	r1, #11
   15190:	beq	1520c <close@plt+0x42d8>
   15194:	ble	151ec <close@plt+0x42b8>
   15198:	movw	r2, #1031	; 0x407
   1519c:	cmp	r1, r2
   151a0:	bgt	15228 <close@plt+0x42f4>
   151a4:	cmp	r1, r3
   151a8:	bge	151b8 <close@plt+0x4284>
   151ac:	movw	r3, #1025	; 0x401
   151b0:	cmp	r1, r3
   151b4:	beq	1520c <close@plt+0x42d8>
   151b8:	ldr	r3, [sp, #4]
   151bc:	mov	r0, r6
   151c0:	ldr	r2, [r3]
   151c4:	bl	10ebc <fcntl64@plt>
   151c8:	mov	r4, r0
   151cc:	mov	r0, r4
   151d0:	add	sp, sp, #8
   151d4:	ldrd	r4, [sp]
   151d8:	ldrd	r6, [sp, #8]
   151dc:	ldr	lr, [sp, #16]
   151e0:	add	sp, sp, #20
   151e4:	add	sp, sp, #12
   151e8:	bx	lr
   151ec:	cmp	r1, #4
   151f0:	beq	151b8 <close@plt+0x4284>
   151f4:	bgt	1521c <close@plt+0x42e8>
   151f8:	cmp	r1, #2
   151fc:	beq	151b8 <close@plt+0x4284>
   15200:	bgt	1520c <close@plt+0x42d8>
   15204:	cmp	r1, #1
   15208:	bne	151b8 <close@plt+0x4284>
   1520c:	mov	r0, r6
   15210:	bl	10ebc <fcntl64@plt>
   15214:	mov	r4, r0
   15218:	b	151cc <close@plt+0x4298>
   1521c:	cmp	r1, #9
   15220:	bne	151b8 <close@plt+0x4284>
   15224:	b	1520c <close@plt+0x42d8>
   15228:	movw	r3, #1033	; 0x409
   1522c:	cmp	r1, r3
   15230:	beq	151b8 <close@plt+0x4284>
   15234:	blt	1520c <close@plt+0x42d8>
   15238:	movw	r3, #1034	; 0x40a
   1523c:	cmp	r1, r3
   15240:	bne	151b8 <close@plt+0x4284>
   15244:	mov	r0, r6
   15248:	bl	10ebc <fcntl64@plt>
   1524c:	mov	r4, r0
   15250:	b	151cc <close@plt+0x4298>
   15254:	ldr	r2, [sp, #32]
   15258:	bl	10ebc <fcntl64@plt>
   1525c:	mov	r4, r0
   15260:	b	151cc <close@plt+0x4298>
   15264:	movw	r5, #29352	; 0x72a8
   15268:	movt	r5, #2
   1526c:	ldr	r7, [r2]
   15270:	add	r2, sp, #36	; 0x24
   15274:	ldr	r3, [r5]
   15278:	str	r2, [sp, #4]
   1527c:	mov	r2, r7
   15280:	cmp	r3, #0
   15284:	blt	152a0 <close@plt+0x436c>
   15288:	bl	10ebc <fcntl64@plt>
   1528c:	subs	r4, r0, #0
   15290:	blt	15308 <close@plt+0x43d4>
   15294:	mov	r3, #1
   15298:	str	r3, [r5]
   1529c:	b	151cc <close@plt+0x4298>
   152a0:	mov	r1, #0
   152a4:	bl	10ebc <fcntl64@plt>
   152a8:	subs	r4, r0, #0
   152ac:	blt	151cc <close@plt+0x4298>
   152b0:	ldr	r3, [r5]
   152b4:	cmn	r3, #1
   152b8:	bne	151cc <close@plt+0x4298>
   152bc:	mov	r1, #1
   152c0:	mov	r0, r4
   152c4:	bl	10ebc <fcntl64@plt>
   152c8:	subs	r2, r0, #0
   152cc:	blt	152e8 <close@plt+0x43b4>
   152d0:	orr	r2, r2, #1
   152d4:	mov	r1, #2
   152d8:	mov	r0, r4
   152dc:	bl	10ebc <fcntl64@plt>
   152e0:	cmn	r0, #1
   152e4:	bne	151cc <close@plt+0x4298>
   152e8:	bl	10e50 <__errno_location@plt>
   152ec:	mov	r5, r0
   152f0:	mov	r0, r4
   152f4:	ldr	r6, [r5]
   152f8:	mvn	r4, #0
   152fc:	bl	10f34 <close@plt>
   15300:	str	r6, [r5]
   15304:	b	151cc <close@plt+0x4298>
   15308:	bl	10e50 <__errno_location@plt>
   1530c:	ldr	r3, [r0]
   15310:	cmp	r3, #22
   15314:	bne	15294 <close@plt+0x4360>
   15318:	mov	r2, r7
   1531c:	mov	r0, r6
   15320:	mov	r1, #0
   15324:	bl	10ebc <fcntl64@plt>
   15328:	subs	r4, r0, #0
   1532c:	mvnge	r3, #0
   15330:	strge	r3, [r5]
   15334:	bge	152bc <close@plt+0x4388>
   15338:	b	151cc <close@plt+0x4298>
   1533c:	mov	r0, #14
   15340:	str	r4, [sp, #-8]!
   15344:	str	lr, [sp, #4]
   15348:	bl	10eec <nl_langinfo@plt>
   1534c:	cmp	r0, #0
   15350:	beq	15374 <close@plt+0x4440>
   15354:	ldrb	r2, [r0]
   15358:	movw	r3, #25016	; 0x61b8
   1535c:	movt	r3, #1
   15360:	ldr	r4, [sp]
   15364:	add	sp, sp, #4
   15368:	cmp	r2, #0
   1536c:	moveq	r0, r3
   15370:	pop	{pc}		; (ldr pc, [sp], #4)
   15374:	ldr	r4, [sp]
   15378:	add	sp, sp, #4
   1537c:	movw	r0, #25016	; 0x61b8
   15380:	movt	r0, #1
   15384:	pop	{pc}		; (ldr pc, [sp], #4)
   15388:	strd	r4, [sp, #-20]!	; 0xffffffec
   1538c:	mov	r5, r2
   15390:	strd	r6, [sp, #8]
   15394:	subs	r6, r0, #0
   15398:	mov	r7, r1
   1539c:	str	lr, [sp, #16]
   153a0:	sub	sp, sp, #12
   153a4:	addeq	r6, sp, #4
   153a8:	mov	r0, r6
   153ac:	bl	10dd8 <mbrtowc@plt>
   153b0:	cmp	r5, #0
   153b4:	cmnne	r0, #3
   153b8:	mov	r4, r0
   153bc:	bhi	153d8 <close@plt+0x44a4>
   153c0:	mov	r0, r4
   153c4:	add	sp, sp, #12
   153c8:	ldrd	r4, [sp]
   153cc:	ldrd	r6, [sp, #8]
   153d0:	add	sp, sp, #16
   153d4:	pop	{pc}		; (ldr pc, [sp], #4)
   153d8:	mov	r0, #0
   153dc:	bl	15430 <close@plt+0x44fc>
   153e0:	cmp	r0, #0
   153e4:	bne	153c0 <close@plt+0x448c>
   153e8:	ldrb	r3, [r7]
   153ec:	mov	r4, #1
   153f0:	str	r3, [r6]
   153f4:	b	153c0 <close@plt+0x448c>
   153f8:	umull	r2, r3, r1, r2
   153fc:	cmp	r3, #0
   15400:	bne	1540c <close@plt+0x44d8>
   15404:	mov	r1, r2
   15408:	b	15074 <close@plt+0x4140>
   1540c:	str	r4, [sp, #-8]!
   15410:	str	lr, [sp, #4]
   15414:	bl	10e50 <__errno_location@plt>
   15418:	mov	r3, #12
   1541c:	ldr	r4, [sp]
   15420:	add	sp, sp, #4
   15424:	str	r3, [r0]
   15428:	mov	r0, #0
   1542c:	pop	{pc}		; (ldr pc, [sp], #4)
   15430:	push	{lr}		; (str lr, [sp, #-4]!)
   15434:	sub	sp, sp, #268	; 0x10c
   15438:	movw	r2, #257	; 0x101
   1543c:	add	r1, sp, #4
   15440:	bl	15488 <close@plt+0x4554>
   15444:	cmp	r0, #0
   15448:	movne	r0, #0
   1544c:	bne	15480 <close@plt+0x454c>
   15450:	movw	r1, #25024	; 0x61c0
   15454:	movt	r1, #1
   15458:	add	r0, sp, #4
   1545c:	bl	10ce8 <strcmp@plt>
   15460:	cmp	r0, #0
   15464:	beq	15480 <close@plt+0x454c>
   15468:	add	r0, sp, #4
   1546c:	movw	r1, #25028	; 0x61c4
   15470:	movt	r1, #1
   15474:	bl	10ce8 <strcmp@plt>
   15478:	adds	r0, r0, #0
   1547c:	movne	r0, #1
   15480:	add	sp, sp, #268	; 0x10c
   15484:	pop	{pc}		; (ldr pc, [sp], #4)
   15488:	strd	r4, [sp, #-16]!
   1548c:	mov	r5, r1
   15490:	mov	r1, #0
   15494:	mov	r4, r2
   15498:	str	r6, [sp, #8]
   1549c:	str	lr, [sp, #12]
   154a0:	bl	10ed4 <setlocale@plt>
   154a4:	subs	r6, r0, #0
   154a8:	beq	15528 <close@plt+0x45f4>
   154ac:	bl	10e44 <strlen@plt>
   154b0:	cmp	r4, r0
   154b4:	bhi	154d4 <close@plt+0x45a0>
   154b8:	cmp	r4, #0
   154bc:	moveq	r0, #34	; 0x22
   154c0:	bne	154f8 <close@plt+0x45c4>
   154c4:	ldrd	r4, [sp]
   154c8:	ldr	r6, [sp, #8]
   154cc:	add	sp, sp, #12
   154d0:	pop	{pc}		; (ldr pc, [sp], #4)
   154d4:	add	r2, r0, #1
   154d8:	mov	r1, r6
   154dc:	mov	r0, r5
   154e0:	bl	10d30 <memcpy@plt>
   154e4:	ldrd	r4, [sp]
   154e8:	mov	r0, #0
   154ec:	ldr	r6, [sp, #8]
   154f0:	add	sp, sp, #12
   154f4:	pop	{pc}		; (ldr pc, [sp], #4)
   154f8:	sub	r4, r4, #1
   154fc:	mov	r1, r6
   15500:	mov	r2, r4
   15504:	mov	r0, r5
   15508:	bl	10d30 <memcpy@plt>
   1550c:	mov	r3, #0
   15510:	mov	r0, #34	; 0x22
   15514:	strb	r3, [r5, r4]
   15518:	ldrd	r4, [sp]
   1551c:	ldr	r6, [sp, #8]
   15520:	add	sp, sp, #12
   15524:	pop	{pc}		; (ldr pc, [sp], #4)
   15528:	cmp	r4, #0
   1552c:	mov	r0, #22
   15530:	strbne	r6, [r5]
   15534:	ldrd	r4, [sp]
   15538:	ldr	r6, [sp, #8]
   1553c:	add	sp, sp, #12
   15540:	pop	{pc}		; (ldr pc, [sp], #4)
   15544:	mov	r1, #0
   15548:	b	10ed4 <setlocale@plt>
   1554c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15550:	mov	r7, r0
   15554:	ldr	r6, [pc, #72]	; 155a4 <close@plt+0x4670>
   15558:	ldr	r5, [pc, #72]	; 155a8 <close@plt+0x4674>
   1555c:	add	r6, pc, r6
   15560:	add	r5, pc, r5
   15564:	sub	r6, r6, r5
   15568:	mov	r8, r1
   1556c:	mov	r9, r2
   15570:	bl	10ca4 <fdopen@plt-0x20>
   15574:	asrs	r6, r6, #2
   15578:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1557c:	mov	r4, #0
   15580:	add	r4, r4, #1
   15584:	ldr	r3, [r5], #4
   15588:	mov	r2, r9
   1558c:	mov	r1, r8
   15590:	mov	r0, r7
   15594:	blx	r3
   15598:	cmp	r6, r4
   1559c:	bne	15580 <close@plt+0x464c>
   155a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   155a4:			; <UNDEFINED> instruction: 0x000119b0
   155a8:	andeq	r1, r1, r8, lsr #19
   155ac:	bx	lr
   155b0:	ldr	r3, [pc, #12]	; 155c4 <close@plt+0x4690>
   155b4:	mov	r1, #0
   155b8:	add	r3, pc, r3
   155bc:	ldr	r2, [r3]
   155c0:	b	10e5c <__cxa_atexit@plt>
   155c4:	andeq	r1, r1, r8, lsr #22

Disassembly of section .fini:

000155c8 <.fini>:
   155c8:	push	{r3, lr}
   155cc:	pop	{r3, pc}
