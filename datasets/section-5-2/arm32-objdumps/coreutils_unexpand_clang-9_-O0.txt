
../repos/coreutils/src/unexpand:     file format elf32-littlearm


Disassembly of section .init:

00010dd4 <.init>:
   10dd4:	push	{r3, lr}
   10dd8:	bl	11094 <__assert_fail@plt+0x48>
   10ddc:	pop	{r3, pc}

Disassembly of section .plt:

00010de0 <calloc@plt-0x14>:
   10de0:	push	{lr}		; (str lr, [sp, #-4]!)
   10de4:	ldr	lr, [pc, #4]	; 10df0 <calloc@plt-0x4>
   10de8:	add	lr, pc, lr
   10dec:	ldr	pc, [lr, #8]!
   10df0:	andeq	ip, r1, r0, lsl r2

00010df4 <calloc@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #28, 20	; 0x1c000
   10dfc:	ldr	pc, [ip, #528]!	; 0x210

00010e00 <fputs_unlocked@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #28, 20	; 0x1c000
   10e08:	ldr	pc, [ip, #520]!	; 0x208

00010e0c <raise@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #28, 20	; 0x1c000
   10e14:	ldr	pc, [ip, #512]!	; 0x200

00010e18 <strcmp@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #28, 20	; 0x1c000
   10e20:	ldr	pc, [ip, #504]!	; 0x1f8

00010e24 <posix_fadvise64@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #28, 20	; 0x1c000
   10e2c:	ldr	pc, [ip, #496]!	; 0x1f0

00010e30 <printf@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #28, 20	; 0x1c000
   10e38:	ldr	pc, [ip, #488]!	; 0x1e8

00010e3c <fflush@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #28, 20	; 0x1c000
   10e44:	ldr	pc, [ip, #480]!	; 0x1e0

00010e48 <free@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #28, 20	; 0x1c000
   10e50:	ldr	pc, [ip, #472]!	; 0x1d8

00010e54 <_exit@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #28, 20	; 0x1c000
   10e5c:	ldr	pc, [ip, #464]!	; 0x1d0

00010e60 <memcpy@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #28, 20	; 0x1c000
   10e68:	ldr	pc, [ip, #456]!	; 0x1c8

00010e6c <mbsinit@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #28, 20	; 0x1c000
   10e74:	ldr	pc, [ip, #448]!	; 0x1c0

00010e78 <fwrite_unlocked@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #28, 20	; 0x1c000
   10e80:	ldr	pc, [ip, #440]!	; 0x1b8

00010e84 <memcmp@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #28, 20	; 0x1c000
   10e8c:	ldr	pc, [ip, #432]!	; 0x1b0

00010e90 <getc_unlocked@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #28, 20	; 0x1c000
   10e98:	ldr	pc, [ip, #424]!	; 0x1a8

00010e9c <realloc@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #28, 20	; 0x1c000
   10ea4:	ldr	pc, [ip, #416]!	; 0x1a0

00010ea8 <textdomain@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #28, 20	; 0x1c000
   10eb0:	ldr	pc, [ip, #408]!	; 0x198

00010eb4 <iswprint@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #28, 20	; 0x1c000
   10ebc:	ldr	pc, [ip, #400]!	; 0x190

00010ec0 <lseek64@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #28, 20	; 0x1c000
   10ec8:	ldr	pc, [ip, #392]!	; 0x188

00010ecc <__ctype_get_mb_cur_max@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #28, 20	; 0x1c000
   10ed4:	ldr	pc, [ip, #384]!	; 0x180

00010ed8 <__fpending@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #28, 20	; 0x1c000
   10ee0:	ldr	pc, [ip, #376]!	; 0x178

00010ee4 <ferror_unlocked@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #28, 20	; 0x1c000
   10eec:	ldr	pc, [ip, #368]!	; 0x170

00010ef0 <mbrtowc@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #28, 20	; 0x1c000
   10ef8:	ldr	pc, [ip, #360]!	; 0x168

00010efc <error@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #28, 20	; 0x1c000
   10f04:	ldr	pc, [ip, #352]!	; 0x160

00010f08 <malloc@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #28, 20	; 0x1c000
   10f10:	ldr	pc, [ip, #344]!	; 0x158

00010f14 <__libc_start_main@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #28, 20	; 0x1c000
   10f1c:	ldr	pc, [ip, #336]!	; 0x150

00010f20 <__freading@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #28, 20	; 0x1c000
   10f28:	ldr	pc, [ip, #328]!	; 0x148

00010f2c <__gmon_start__@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #28, 20	; 0x1c000
   10f34:	ldr	pc, [ip, #320]!	; 0x140

00010f38 <getopt_long@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #28, 20	; 0x1c000
   10f40:	ldr	pc, [ip, #312]!	; 0x138

00010f44 <__ctype_b_loc@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #28, 20	; 0x1c000
   10f4c:	ldr	pc, [ip, #304]!	; 0x130

00010f50 <exit@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #28, 20	; 0x1c000
   10f58:	ldr	pc, [ip, #296]!	; 0x128

00010f5c <gettext@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #28, 20	; 0x1c000
   10f64:	ldr	pc, [ip, #288]!	; 0x120

00010f68 <strlen@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #28, 20	; 0x1c000
   10f70:	ldr	pc, [ip, #280]!	; 0x118

00010f74 <fprintf@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #28, 20	; 0x1c000
   10f7c:	ldr	pc, [ip, #272]!	; 0x110

00010f80 <__errno_location@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #28, 20	; 0x1c000
   10f88:	ldr	pc, [ip, #264]!	; 0x108

00010f8c <__cxa_atexit@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #28, 20	; 0x1c000
   10f94:	ldr	pc, [ip, #256]!	; 0x100

00010f98 <memset@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #28, 20	; 0x1c000
   10fa0:	ldr	pc, [ip, #248]!	; 0xf8

00010fa4 <fileno@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #28, 20	; 0x1c000
   10fac:	ldr	pc, [ip, #240]!	; 0xf0

00010fb0 <fclose@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #28, 20	; 0x1c000
   10fb8:	ldr	pc, [ip, #232]!	; 0xe8

00010fbc <fseeko64@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #28, 20	; 0x1c000
   10fc4:	ldr	pc, [ip, #224]!	; 0xe0

00010fc8 <setlocale@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #28, 20	; 0x1c000
   10fd0:	ldr	pc, [ip, #216]!	; 0xd8

00010fd4 <strrchr@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #28, 20	; 0x1c000
   10fdc:	ldr	pc, [ip, #208]!	; 0xd0

00010fe0 <nl_langinfo@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #28, 20	; 0x1c000
   10fe8:	ldr	pc, [ip, #200]!	; 0xc8

00010fec <clearerr_unlocked@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #28, 20	; 0x1c000
   10ff4:	ldr	pc, [ip, #192]!	; 0xc0

00010ff8 <fopen64@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #28, 20	; 0x1c000
   11000:	ldr	pc, [ip, #184]!	; 0xb8

00011004 <bindtextdomain@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #28, 20	; 0x1c000
   1100c:	ldr	pc, [ip, #176]!	; 0xb0

00011010 <fputs@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #28, 20	; 0x1c000
   11018:	ldr	pc, [ip, #168]!	; 0xa8

0001101c <strncmp@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #28, 20	; 0x1c000
   11024:	ldr	pc, [ip, #160]!	; 0xa0

00011028 <abort@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #28, 20	; 0x1c000
   11030:	ldr	pc, [ip, #152]!	; 0x98

00011034 <putchar_unlocked@plt>:
   11034:	add	ip, pc, #0, 12
   11038:	add	ip, ip, #28, 20	; 0x1c000
   1103c:	ldr	pc, [ip, #144]!	; 0x90

00011040 <strspn@plt>:
   11040:	add	ip, pc, #0, 12
   11044:	add	ip, ip, #28, 20	; 0x1c000
   11048:	ldr	pc, [ip, #136]!	; 0x88

0001104c <__assert_fail@plt>:
   1104c:	add	ip, pc, #0, 12
   11050:	add	ip, ip, #28, 20	; 0x1c000
   11054:	ldr	pc, [ip, #128]!	; 0x80

Disassembly of section .text:

00011058 <.text>:
   11058:	mov	fp, #0
   1105c:	mov	lr, #0
   11060:	pop	{r1}		; (ldr r1, [sp], #4)
   11064:	mov	r2, sp
   11068:	push	{r2}		; (str r2, [sp, #-4]!)
   1106c:	push	{r0}		; (str r0, [sp, #-4]!)
   11070:	ldr	ip, [pc, #16]	; 11088 <__assert_fail@plt+0x3c>
   11074:	push	{ip}		; (str ip, [sp, #-4]!)
   11078:	ldr	r0, [pc, #12]	; 1108c <__assert_fail@plt+0x40>
   1107c:	ldr	r3, [pc, #12]	; 11090 <__assert_fail@plt+0x44>
   11080:	bl	10f14 <__libc_start_main@plt>
   11084:	bl	11028 <abort@plt>
   11088:	andeq	fp, r1, ip, ror #8
   1108c:	andeq	r1, r1, r4, ror r4
   11090:	andeq	fp, r1, ip, lsl #8
   11094:	ldr	r3, [pc, #20]	; 110b0 <__assert_fail@plt+0x64>
   11098:	ldr	r2, [pc, #20]	; 110b4 <__assert_fail@plt+0x68>
   1109c:	add	r3, pc, r3
   110a0:	ldr	r2, [r3, r2]
   110a4:	cmp	r2, #0
   110a8:	bxeq	lr
   110ac:	b	10f2c <__gmon_start__@plt>
   110b0:	andeq	fp, r1, ip, asr pc
   110b4:	ldrdeq	r0, [r0], -r8
   110b8:	ldr	r0, [pc, #24]	; 110d8 <__assert_fail@plt+0x8c>
   110bc:	ldr	r3, [pc, #24]	; 110dc <__assert_fail@plt+0x90>
   110c0:	cmp	r3, r0
   110c4:	bxeq	lr
   110c8:	ldr	r3, [pc, #16]	; 110e0 <__assert_fail@plt+0x94>
   110cc:	cmp	r3, #0
   110d0:	bxeq	lr
   110d4:	bx	r3
   110d8:	andeq	sp, r2, r4, lsr r1
   110dc:	andeq	sp, r2, r4, lsr r1
   110e0:	andeq	r0, r0, r0
   110e4:	ldr	r0, [pc, #36]	; 11110 <__assert_fail@plt+0xc4>
   110e8:	ldr	r1, [pc, #36]	; 11114 <__assert_fail@plt+0xc8>
   110ec:	sub	r1, r1, r0
   110f0:	asr	r1, r1, #2
   110f4:	add	r1, r1, r1, lsr #31
   110f8:	asrs	r1, r1, #1
   110fc:	bxeq	lr
   11100:	ldr	r3, [pc, #16]	; 11118 <__assert_fail@plt+0xcc>
   11104:	cmp	r3, #0
   11108:	bxeq	lr
   1110c:	bx	r3
   11110:	andeq	sp, r2, r4, lsr r1
   11114:	andeq	sp, r2, r4, lsr r1
   11118:	andeq	r0, r0, r0
   1111c:	push	{r4, lr}
   11120:	ldr	r4, [pc, #24]	; 11140 <__assert_fail@plt+0xf4>
   11124:	ldrb	r3, [r4]
   11128:	cmp	r3, #0
   1112c:	popne	{r4, pc}
   11130:	bl	110b8 <__assert_fail@plt+0x6c>
   11134:	mov	r3, #1
   11138:	strb	r3, [r4]
   1113c:	pop	{r4, pc}
   11140:	andeq	sp, r2, ip, asr r1
   11144:	b	110e4 <__assert_fail@plt+0x98>
   11148:	push	{fp, lr}
   1114c:	mov	fp, sp
   11150:	sub	sp, sp, #32
   11154:	str	r0, [fp, #-4]
   11158:	ldr	r0, [fp, #-4]
   1115c:	cmp	r0, #0
   11160:	beq	111ac <__assert_fail@plt+0x160>
   11164:	b	11168 <__assert_fail@plt+0x11c>
   11168:	movw	r0, #53576	; 0xd148
   1116c:	movt	r0, #2
   11170:	ldr	r0, [r0]
   11174:	movw	r1, #46228	; 0xb494
   11178:	movt	r1, #1
   1117c:	str	r0, [fp, #-8]
   11180:	mov	r0, r1
   11184:	bl	10f5c <gettext@plt>
   11188:	movw	r1, #53668	; 0xd1a4
   1118c:	movt	r1, #2
   11190:	ldr	r2, [r1]
   11194:	ldr	r1, [fp, #-8]
   11198:	str	r0, [fp, #-12]
   1119c:	mov	r0, r1
   111a0:	ldr	r1, [fp, #-12]
   111a4:	bl	10f74 <fprintf@plt>
   111a8:	b	11270 <__assert_fail@plt+0x224>
   111ac:	movw	r0, #46267	; 0xb4bb
   111b0:	movt	r0, #1
   111b4:	bl	10f5c <gettext@plt>
   111b8:	movw	r1, #53668	; 0xd1a4
   111bc:	movt	r1, #2
   111c0:	ldr	r1, [r1]
   111c4:	bl	10e30 <printf@plt>
   111c8:	movw	r1, #46300	; 0xb4dc
   111cc:	movt	r1, #1
   111d0:	str	r0, [sp, #16]
   111d4:	mov	r0, r1
   111d8:	bl	10f5c <gettext@plt>
   111dc:	movw	r1, #53588	; 0xd154
   111e0:	movt	r1, #2
   111e4:	ldr	r1, [r1]
   111e8:	bl	10e00 <fputs_unlocked@plt>
   111ec:	str	r0, [sp, #12]
   111f0:	bl	11278 <__assert_fail@plt+0x22c>
   111f4:	bl	112a0 <__assert_fail@plt+0x254>
   111f8:	movw	r0, #46366	; 0xb51e
   111fc:	movt	r0, #1
   11200:	bl	10f5c <gettext@plt>
   11204:	movw	r1, #53588	; 0xd154
   11208:	movt	r1, #2
   1120c:	ldr	r1, [r1]
   11210:	bl	10e00 <fputs_unlocked@plt>
   11214:	str	r0, [sp, #8]
   11218:	bl	12cf4 <__assert_fail@plt+0x1ca8>
   1121c:	movw	r0, #46587	; 0xb5fb
   11220:	movt	r0, #1
   11224:	bl	10f5c <gettext@plt>
   11228:	movw	r1, #53588	; 0xd154
   1122c:	movt	r1, #2
   11230:	ldr	r1, [r1]
   11234:	bl	10e00 <fputs_unlocked@plt>
   11238:	movw	r1, #46632	; 0xb628
   1123c:	movt	r1, #1
   11240:	str	r0, [sp, #4]
   11244:	mov	r0, r1
   11248:	bl	10f5c <gettext@plt>
   1124c:	movw	r1, #53588	; 0xd154
   11250:	movt	r1, #2
   11254:	ldr	r1, [r1]
   11258:	bl	10e00 <fputs_unlocked@plt>
   1125c:	movw	r1, #46686	; 0xb65e
   11260:	movt	r1, #1
   11264:	str	r0, [sp]
   11268:	mov	r0, r1
   1126c:	bl	112c8 <__assert_fail@plt+0x27c>
   11270:	ldr	r0, [fp, #-4]
   11274:	bl	10f50 <exit@plt>
   11278:	push	{fp, lr}
   1127c:	mov	fp, sp
   11280:	movw	r0, #46792	; 0xb6c8
   11284:	movt	r0, #1
   11288:	bl	10f5c <gettext@plt>
   1128c:	movw	r1, #53588	; 0xd154
   11290:	movt	r1, #2
   11294:	ldr	r1, [r1]
   11298:	bl	10e00 <fputs_unlocked@plt>
   1129c:	pop	{fp, pc}
   112a0:	push	{fp, lr}
   112a4:	mov	fp, sp
   112a8:	movw	r0, #46848	; 0xb700
   112ac:	movt	r0, #1
   112b0:	bl	10f5c <gettext@plt>
   112b4:	movw	r1, #53588	; 0xd154
   112b8:	movt	r1, #2
   112bc:	ldr	r1, [r1]
   112c0:	bl	10e00 <fputs_unlocked@plt>
   112c4:	pop	{fp, pc}
   112c8:	push	{fp, lr}
   112cc:	mov	fp, sp
   112d0:	sub	sp, sp, #88	; 0x58
   112d4:	add	r1, sp, #28
   112d8:	movw	r2, #47400	; 0xb928
   112dc:	movt	r2, #1
   112e0:	str	r0, [fp, #-4]
   112e4:	mov	r0, r1
   112e8:	str	r1, [sp, #12]
   112ec:	mov	r1, r2
   112f0:	movw	r2, #56	; 0x38
   112f4:	bl	10e60 <memcpy@plt>
   112f8:	ldr	r0, [fp, #-4]
   112fc:	str	r0, [sp, #24]
   11300:	ldr	r0, [sp, #12]
   11304:	str	r0, [sp, #20]
   11308:	ldr	r0, [sp, #20]
   1130c:	ldr	r0, [r0]
   11310:	movw	r1, #0
   11314:	cmp	r0, r1
   11318:	movw	r0, #0
   1131c:	str	r0, [sp, #8]
   11320:	beq	1134c <__assert_fail@plt+0x300>
   11324:	ldr	r0, [fp, #-4]
   11328:	ldr	r1, [sp, #20]
   1132c:	ldr	r1, [r1]
   11330:	bl	10e18 <strcmp@plt>
   11334:	cmp	r0, #0
   11338:	movw	r0, #0
   1133c:	moveq	r0, #1
   11340:	mvn	r1, #0
   11344:	eor	r0, r0, r1
   11348:	str	r0, [sp, #8]
   1134c:	ldr	r0, [sp, #8]
   11350:	tst	r0, #1
   11354:	beq	11368 <__assert_fail@plt+0x31c>
   11358:	ldr	r0, [sp, #20]
   1135c:	add	r0, r0, #8
   11360:	str	r0, [sp, #20]
   11364:	b	11308 <__assert_fail@plt+0x2bc>
   11368:	ldr	r0, [sp, #20]
   1136c:	ldr	r0, [r0, #4]
   11370:	movw	r1, #0
   11374:	cmp	r0, r1
   11378:	beq	11388 <__assert_fail@plt+0x33c>
   1137c:	ldr	r0, [sp, #20]
   11380:	ldr	r0, [r0, #4]
   11384:	str	r0, [sp, #24]
   11388:	movw	r0, #47018	; 0xb7aa
   1138c:	movt	r0, #1
   11390:	bl	10f5c <gettext@plt>
   11394:	movw	r1, #46734	; 0xb68e
   11398:	movt	r1, #1
   1139c:	movw	r2, #47041	; 0xb7c1
   113a0:	movt	r2, #1
   113a4:	bl	10e30 <printf@plt>
   113a8:	movw	r1, #5
   113ac:	str	r0, [sp, #4]
   113b0:	mov	r0, r1
   113b4:	movw	r1, #0
   113b8:	bl	10fc8 <setlocale@plt>
   113bc:	str	r0, [sp, #16]
   113c0:	ldr	r0, [sp, #16]
   113c4:	movw	r1, #0
   113c8:	cmp	r0, r1
   113cc:	beq	11408 <__assert_fail@plt+0x3bc>
   113d0:	ldr	r0, [sp, #16]
   113d4:	movw	r1, #47081	; 0xb7e9
   113d8:	movt	r1, #1
   113dc:	movw	r2, #3
   113e0:	bl	1101c <strncmp@plt>
   113e4:	cmp	r0, #0
   113e8:	beq	11408 <__assert_fail@plt+0x3bc>
   113ec:	movw	r0, #47085	; 0xb7ed
   113f0:	movt	r0, #1
   113f4:	bl	10f5c <gettext@plt>
   113f8:	movw	r1, #53588	; 0xd154
   113fc:	movt	r1, #2
   11400:	ldr	r1, [r1]
   11404:	bl	10e00 <fputs_unlocked@plt>
   11408:	movw	r0, #47156	; 0xb834
   1140c:	movt	r0, #1
   11410:	bl	10f5c <gettext@plt>
   11414:	ldr	r2, [fp, #-4]
   11418:	movw	r1, #47041	; 0xb7c1
   1141c:	movt	r1, #1
   11420:	bl	10e30 <printf@plt>
   11424:	movw	r1, #47183	; 0xb84f
   11428:	movt	r1, #1
   1142c:	str	r0, [sp]
   11430:	mov	r0, r1
   11434:	bl	10f5c <gettext@plt>
   11438:	ldr	r1, [sp, #24]
   1143c:	ldr	r2, [sp, #24]
   11440:	ldr	r3, [fp, #-4]
   11444:	cmp	r2, r3
   11448:	movw	r2, #0
   1144c:	moveq	r2, #1
   11450:	tst	r2, #1
   11454:	movw	r2, #47233	; 0xb881
   11458:	movt	r2, #1
   1145c:	movw	r3, #46951	; 0xb767
   11460:	movt	r3, #1
   11464:	movne	r2, r3
   11468:	bl	10e30 <printf@plt>
   1146c:	mov	sp, fp
   11470:	pop	{fp, pc}
   11474:	push	{fp, lr}
   11478:	mov	fp, sp
   1147c:	sub	sp, sp, #72	; 0x48
   11480:	movw	r2, #0
   11484:	str	r2, [fp, #-4]
   11488:	str	r0, [fp, #-8]
   1148c:	str	r1, [fp, #-12]
   11490:	movw	r0, #0
   11494:	strb	r0, [fp, #-13]
   11498:	strb	r0, [fp, #-29]	; 0xffffffe3
   1149c:	ldr	r0, [fp, #-12]
   114a0:	ldr	r0, [r0]
   114a4:	bl	1324c <__assert_fail@plt+0x2200>
   114a8:	movw	r0, #6
   114ac:	movw	r1, #47233	; 0xb881
   114b0:	movt	r1, #1
   114b4:	bl	10fc8 <setlocale@plt>
   114b8:	movw	r1, #46738	; 0xb692
   114bc:	movt	r1, #1
   114c0:	str	r0, [sp, #36]	; 0x24
   114c4:	mov	r0, r1
   114c8:	movw	r1, #46695	; 0xb667
   114cc:	movt	r1, #1
   114d0:	bl	11004 <bindtextdomain@plt>
   114d4:	movw	r1, #46738	; 0xb692
   114d8:	movt	r1, #1
   114dc:	str	r0, [sp, #32]
   114e0:	mov	r0, r1
   114e4:	bl	10ea8 <textdomain@plt>
   114e8:	movw	r1, #11664	; 0x2d90
   114ec:	movt	r1, #1
   114f0:	str	r0, [sp, #28]
   114f4:	mov	r0, r1
   114f8:	bl	1b470 <__assert_fail@plt+0xa424>
   114fc:	ldr	r0, [fp, #-8]
   11500:	ldr	r1, [fp, #-12]
   11504:	movw	r2, #46719	; 0xb67f
   11508:	movt	r2, #1
   1150c:	movw	r3, #47304	; 0xb8c8
   11510:	movt	r3, #1
   11514:	movw	ip, #0
   11518:	str	ip, [sp]
   1151c:	bl	10f38 <getopt_long@plt>
   11520:	str	r0, [fp, #-28]	; 0xffffffe4
   11524:	cmn	r0, #1
   11528:	beq	1175c <__assert_fail@plt+0x710>
   1152c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11530:	cmn	r0, #3
   11534:	str	r0, [sp, #24]
   11538:	beq	11618 <__assert_fail@plt+0x5cc>
   1153c:	b	11540 <__assert_fail@plt+0x4f4>
   11540:	ldr	r0, [sp, #24]
   11544:	cmn	r0, #2
   11548:	beq	11610 <__assert_fail@plt+0x5c4>
   1154c:	b	11550 <__assert_fail@plt+0x504>
   11550:	ldr	r0, [sp, #24]
   11554:	cmp	r0, #44	; 0x2c
   11558:	beq	115ec <__assert_fail@plt+0x5a0>
   1155c:	b	11560 <__assert_fail@plt+0x514>
   11560:	ldr	r0, [sp, #24]
   11564:	cmp	r0, #63	; 0x3f
   11568:	beq	115a0 <__assert_fail@plt+0x554>
   1156c:	b	11570 <__assert_fail@plt+0x524>
   11570:	ldr	r0, [sp, #24]
   11574:	cmp	r0, #97	; 0x61
   11578:	beq	115a8 <__assert_fail@plt+0x55c>
   1157c:	b	11580 <__assert_fail@plt+0x534>
   11580:	ldr	r0, [sp, #24]
   11584:	cmp	r0, #116	; 0x74
   11588:	beq	115bc <__assert_fail@plt+0x570>
   1158c:	b	11590 <__assert_fail@plt+0x544>
   11590:	ldr	r0, [sp, #24]
   11594:	cmp	r0, #256	; 0x100
   11598:	beq	115e0 <__assert_fail@plt+0x594>
   1159c:	b	11660 <__assert_fail@plt+0x614>
   115a0:	movw	r0, #1
   115a4:	bl	11148 <__assert_fail@plt+0xfc>
   115a8:	movw	r0, #53600	; 0xd160
   115ac:	movt	r0, #2
   115b0:	movw	r1, #1
   115b4:	strb	r1, [r0]
   115b8:	b	11758 <__assert_fail@plt+0x70c>
   115bc:	movw	r0, #53600	; 0xd160
   115c0:	movt	r0, #2
   115c4:	movw	r1, #1
   115c8:	strb	r1, [r0]
   115cc:	movw	r0, #53592	; 0xd158
   115d0:	movt	r0, #2
   115d4:	ldr	r0, [r0]
   115d8:	bl	11e8c <__assert_fail@plt+0xe40>
   115dc:	b	11758 <__assert_fail@plt+0x70c>
   115e0:	movw	r0, #1
   115e4:	strb	r0, [fp, #-29]	; 0xffffffe3
   115e8:	b	11758 <__assert_fail@plt+0x70c>
   115ec:	ldrb	r0, [fp, #-13]
   115f0:	tst	r0, #1
   115f4:	beq	11604 <__assert_fail@plt+0x5b8>
   115f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   11600:	bl	11cc0 <__assert_fail@plt+0xc74>
   11604:	movw	r0, #0
   11608:	strb	r0, [fp, #-13]
   1160c:	b	11758 <__assert_fail@plt+0x70c>
   11610:	movw	r0, #0
   11614:	bl	11148 <__assert_fail@plt+0xfc>
   11618:	movw	r0, #53588	; 0xd154
   1161c:	movt	r0, #2
   11620:	ldr	r0, [r0]
   11624:	movw	r1, #53484	; 0xd0ec
   11628:	movt	r1, #2
   1162c:	ldr	r3, [r1]
   11630:	movw	r1, #46686	; 0xb65e
   11634:	movt	r1, #1
   11638:	movw	r2, #46734	; 0xb68e
   1163c:	movt	r2, #1
   11640:	movw	ip, #46748	; 0xb69c
   11644:	movt	ip, #1
   11648:	str	ip, [sp]
   1164c:	movw	ip, #0
   11650:	str	ip, [sp, #4]
   11654:	bl	16124 <__assert_fail@plt+0x50d8>
   11658:	movw	r0, #0
   1165c:	bl	10f50 <exit@plt>
   11660:	ldrb	r0, [fp, #-13]
   11664:	tst	r0, #1
   11668:	bne	11680 <__assert_fail@plt+0x634>
   1166c:	mov	r0, #0
   11670:	str	r0, [fp, #-20]	; 0xffffffec
   11674:	str	r0, [fp, #-24]	; 0xffffffe8
   11678:	movw	r0, #1
   1167c:	strb	r0, [fp, #-13]
   11680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11684:	ldr	r1, [fp, #-20]	; 0xffffffec
   11688:	movw	r2, #39321	; 0x9999
   1168c:	movt	r2, #39321	; 0x9999
   11690:	subs	r0, r2, r0
   11694:	movw	r2, #39321	; 0x9999
   11698:	movt	r2, #6553	; 0x1999
   1169c:	sbcs	r1, r2, r1
   116a0:	bcc	116e0 <__assert_fail@plt+0x694>
   116a4:	b	116a8 <__assert_fail@plt+0x65c>
   116a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   116b0:	mov	r2, #10
   116b4:	umull	r2, r3, r0, r2
   116b8:	add	ip, r1, r1, lsl #2
   116bc:	add	r3, r3, ip, lsl #1
   116c0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   116c4:	sub	ip, ip, #48	; 0x30
   116c8:	adds	r2, r2, ip
   116cc:	adc	r3, r3, ip, asr #31
   116d0:	subs	r0, r2, r0
   116d4:	sbcs	r1, r3, r1
   116d8:	bcs	116ec <__assert_fail@plt+0x6a0>
   116dc:	b	116e0 <__assert_fail@plt+0x694>
   116e0:	movw	r0, #0
   116e4:	str	r0, [sp, #20]
   116e8:	b	11724 <__assert_fail@plt+0x6d8>
   116ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   116f4:	mov	r2, #10
   116f8:	umull	r0, r2, r0, r2
   116fc:	add	r1, r1, r1, lsl #2
   11700:	add	r1, r2, r1, lsl #1
   11704:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11708:	sub	r2, r2, #48	; 0x30
   1170c:	adds	r0, r0, r2
   11710:	adc	r1, r1, r2, asr #31
   11714:	str	r0, [fp, #-24]	; 0xffffffe8
   11718:	str	r1, [fp, #-20]	; 0xffffffec
   1171c:	movw	r0, #1
   11720:	str	r0, [sp, #20]
   11724:	ldr	r0, [sp, #20]
   11728:	cmp	r0, #0
   1172c:	bne	11754 <__assert_fail@plt+0x708>
   11730:	movw	r0, #46764	; 0xb6ac
   11734:	movt	r0, #1
   11738:	bl	10f5c <gettext@plt>
   1173c:	movw	r1, #1
   11740:	str	r0, [sp, #16]
   11744:	mov	r0, r1
   11748:	movw	r1, #0
   1174c:	ldr	r2, [sp, #16]
   11750:	bl	10efc <error@plt>
   11754:	b	11758 <__assert_fail@plt+0x70c>
   11758:	b	114fc <__assert_fail@plt+0x4b0>
   1175c:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   11760:	tst	r0, #1
   11764:	beq	11778 <__assert_fail@plt+0x72c>
   11768:	movw	r0, #53600	; 0xd160
   1176c:	movt	r0, #2
   11770:	movw	r1, #0
   11774:	strb	r1, [r0]
   11778:	ldrb	r0, [fp, #-13]
   1177c:	tst	r0, #1
   11780:	beq	11790 <__assert_fail@plt+0x744>
   11784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11788:	ldr	r1, [fp, #-20]	; 0xffffffec
   1178c:	bl	11cc0 <__assert_fail@plt+0xc74>
   11790:	bl	12450 <__assert_fail@plt+0x1404>
   11794:	movw	r0, #53568	; 0xd140
   11798:	movt	r0, #2
   1179c:	ldr	r0, [r0]
   117a0:	ldr	r1, [fp, #-8]
   117a4:	cmp	r0, r1
   117a8:	bge	117c8 <__assert_fail@plt+0x77c>
   117ac:	ldr	r0, [fp, #-12]
   117b0:	movw	r1, #53568	; 0xd140
   117b4:	movt	r1, #2
   117b8:	ldr	r1, [r1]
   117bc:	add	r0, r0, r1, lsl #2
   117c0:	str	r0, [sp, #12]
   117c4:	b	117d4 <__assert_fail@plt+0x788>
   117c8:	movw	r0, #0
   117cc:	str	r0, [sp, #12]
   117d0:	b	117d4 <__assert_fail@plt+0x788>
   117d4:	ldr	r0, [sp, #12]
   117d8:	bl	12a00 <__assert_fail@plt+0x19b4>
   117dc:	bl	117f8 <__assert_fail@plt+0x7ac>
   117e0:	bl	12ca4 <__assert_fail@plt+0x1c58>
   117e4:	movw	r0, #53604	; 0xd164
   117e8:	movt	r0, #2
   117ec:	ldr	r0, [r0]
   117f0:	mov	sp, fp
   117f4:	pop	{fp, pc}
   117f8:	push	{fp, lr}
   117fc:	mov	fp, sp
   11800:	sub	sp, sp, #80	; 0x50
   11804:	movw	r0, #0
   11808:	bl	12a58 <__assert_fail@plt+0x1a0c>
   1180c:	str	r0, [fp, #-4]
   11810:	ldr	r0, [fp, #-4]
   11814:	movw	r1, #0
   11818:	cmp	r0, r1
   1181c:	bne	11824 <__assert_fail@plt+0x7d8>
   11820:	b	11cb8 <__assert_fail@plt+0xc6c>
   11824:	movw	r0, #53976	; 0xd2d8
   11828:	movt	r0, #2
   1182c:	ldr	r0, [r0]
   11830:	bl	162ac <__assert_fail@plt+0x5260>
   11834:	str	r0, [fp, #-8]
   11838:	mov	r0, #1
   1183c:	strb	r0, [fp, #-13]
   11840:	mov	r0, #0
   11844:	str	r0, [fp, #-20]	; 0xffffffec
   11848:	str	r0, [fp, #-24]	; 0xffffffe8
   1184c:	str	r0, [fp, #-28]	; 0xffffffe4
   11850:	str	r0, [fp, #-32]	; 0xffffffe0
   11854:	movw	r0, #0
   11858:	str	r0, [fp, #-36]	; 0xffffffdc
   1185c:	movw	r1, #0
   11860:	strb	r1, [fp, #-37]	; 0xffffffdb
   11864:	movw	r1, #1
   11868:	strb	r1, [fp, #-38]	; 0xffffffda
   1186c:	str	r0, [sp, #36]	; 0x24
   11870:	b	11874 <__assert_fail@plt+0x828>
   11874:	ldr	r0, [fp, #-4]
   11878:	bl	10e90 <getc_unlocked@plt>
   1187c:	str	r0, [fp, #-12]
   11880:	cmp	r0, #0
   11884:	movw	r0, #0
   11888:	str	r0, [sp, #28]
   1188c:	bge	118b0 <__assert_fail@plt+0x864>
   11890:	ldr	r0, [fp, #-4]
   11894:	bl	12a58 <__assert_fail@plt+0x1a0c>
   11898:	str	r0, [fp, #-4]
   1189c:	movw	r1, #0
   118a0:	cmp	r0, r1
   118a4:	movw	r0, #0
   118a8:	movne	r0, #1
   118ac:	str	r0, [sp, #28]
   118b0:	ldr	r0, [sp, #28]
   118b4:	tst	r0, #1
   118b8:	beq	118c0 <__assert_fail@plt+0x874>
   118bc:	b	11874 <__assert_fail@plt+0x828>
   118c0:	ldrb	r0, [fp, #-13]
   118c4:	tst	r0, #1
   118c8:	beq	11c4c <__assert_fail@plt+0xc00>
   118cc:	bl	10f44 <__ctype_b_loc@plt>
   118d0:	ldr	r0, [r0]
   118d4:	ldr	r1, [fp, #-12]
   118d8:	add	r0, r0, r1, lsl #1
   118dc:	ldrh	r0, [r0]
   118e0:	and	r0, r0, #1
   118e4:	cmp	r0, #0
   118e8:	movw	r0, #0
   118ec:	movne	r0, #1
   118f0:	mvn	r1, #0
   118f4:	eor	r0, r0, r1
   118f8:	eor	r0, r0, r1
   118fc:	and	r0, r0, #1
   11900:	strb	r0, [sp, #35]	; 0x23
   11904:	ldrb	r0, [sp, #35]	; 0x23
   11908:	tst	r0, #1
   1190c:	beq	11a90 <__assert_fail@plt+0xa44>
   11910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11914:	ldr	r1, [fp, #-20]	; 0xffffffec
   11918:	sub	r2, fp, #36	; 0x24
   1191c:	add	r3, sp, #34	; 0x22
   11920:	bl	12750 <__assert_fail@plt+0x1704>
   11924:	str	r1, [fp, #-28]	; 0xffffffe4
   11928:	str	r0, [fp, #-32]	; 0xffffffe0
   1192c:	ldrb	r0, [sp, #34]	; 0x22
   11930:	tst	r0, #1
   11934:	beq	11940 <__assert_fail@plt+0x8f4>
   11938:	movw	r0, #0
   1193c:	strb	r0, [fp, #-13]
   11940:	ldrb	r0, [fp, #-13]
   11944:	tst	r0, #1
   11948:	beq	11a8c <__assert_fail@plt+0xa40>
   1194c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11950:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11954:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11958:	ldr	r3, [fp, #-20]	; 0xffffffec
   1195c:	subs	r0, r0, r2
   11960:	sbcs	r1, r1, r3
   11964:	bcs	11990 <__assert_fail@plt+0x944>
   11968:	b	1196c <__assert_fail@plt+0x920>
   1196c:	movw	r0, #47267	; 0xb8a3
   11970:	movt	r0, #1
   11974:	bl	10f5c <gettext@plt>
   11978:	movw	r1, #1
   1197c:	str	r0, [sp, #24]
   11980:	mov	r0, r1
   11984:	movw	r1, #0
   11988:	ldr	r2, [sp, #24]
   1198c:	bl	10efc <error@plt>
   11990:	ldr	r0, [fp, #-12]
   11994:	cmp	r0, #9
   11998:	bne	119c8 <__assert_fail@plt+0x97c>
   1199c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   119a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   119a4:	str	r1, [fp, #-20]	; 0xffffffec
   119a8:	str	r0, [fp, #-24]	; 0xffffffe8
   119ac:	ldr	r0, [sp, #36]	; 0x24
   119b0:	cmp	r0, #0
   119b4:	beq	119c4 <__assert_fail@plt+0x978>
   119b8:	ldr	r0, [fp, #-8]
   119bc:	movw	r1, #9
   119c0:	strb	r1, [r0]
   119c4:	b	11a80 <__assert_fail@plt+0xa34>
   119c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   119d0:	adds	r0, r0, #1
   119d4:	adc	r1, r1, #0
   119d8:	str	r0, [fp, #-24]	; 0xffffffe8
   119dc:	str	r1, [fp, #-20]	; 0xffffffec
   119e0:	ldrb	r0, [fp, #-38]	; 0xffffffda
   119e4:	tst	r0, #1
   119e8:	beq	11a14 <__assert_fail@plt+0x9c8>
   119ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   119f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   119f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   119fc:	eor	r1, r1, r3
   11a00:	eor	r0, r0, r2
   11a04:	orr	r0, r0, r1
   11a08:	cmp	r0, #0
   11a0c:	beq	11a6c <__assert_fail@plt+0xa20>
   11a10:	b	11a14 <__assert_fail@plt+0x9c8>
   11a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a18:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11a20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a24:	eor	r1, r1, r3
   11a28:	eor	r0, r0, r2
   11a2c:	orr	r0, r0, r1
   11a30:	cmp	r0, #0
   11a34:	bne	11a44 <__assert_fail@plt+0x9f8>
   11a38:	b	11a3c <__assert_fail@plt+0x9f0>
   11a3c:	movw	r0, #1
   11a40:	strb	r0, [fp, #-37]	; 0xffffffdb
   11a44:	ldr	r0, [fp, #-12]
   11a48:	ldr	r1, [fp, #-8]
   11a4c:	ldr	r2, [sp, #36]	; 0x24
   11a50:	add	r3, r2, #1
   11a54:	str	r3, [sp, #36]	; 0x24
   11a58:	add	r1, r1, r2
   11a5c:	strb	r0, [r1]
   11a60:	movw	r0, #1
   11a64:	strb	r0, [fp, #-38]	; 0xffffffda
   11a68:	b	11ca8 <__assert_fail@plt+0xc5c>
   11a6c:	movw	r0, #9
   11a70:	str	r0, [fp, #-12]
   11a74:	ldr	r0, [fp, #-8]
   11a78:	movw	r1, #9
   11a7c:	strb	r1, [r0]
   11a80:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   11a84:	and	r0, r0, #1
   11a88:	str	r0, [sp, #36]	; 0x24
   11a8c:	b	11b5c <__assert_fail@plt+0xb10>
   11a90:	ldr	r0, [fp, #-12]
   11a94:	cmp	r0, #8
   11a98:	bne	11b00 <__assert_fail@plt+0xab4>
   11a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11aa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   11aa4:	orr	r2, r0, r1
   11aa8:	cmp	r2, #0
   11aac:	movwne	r2, #1
   11ab0:	subs	r0, r0, r2
   11ab4:	sbc	r1, r1, #0
   11ab8:	str	r0, [fp, #-24]	; 0xffffffe8
   11abc:	str	r1, [fp, #-20]	; 0xffffffec
   11ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11ac4:	ldr	r1, [fp, #-20]	; 0xffffffec
   11ac8:	str	r1, [fp, #-28]	; 0xffffffe4
   11acc:	str	r0, [fp, #-32]	; 0xffffffe0
   11ad0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11ad4:	cmp	r0, #0
   11ad8:	movw	r0, #0
   11adc:	movne	r0, #1
   11ae0:	mvn	r1, #0
   11ae4:	eor	r0, r0, r1
   11ae8:	eor	r0, r0, r1
   11aec:	and	r0, r0, #1
   11af0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11af4:	sub	r0, r1, r0
   11af8:	str	r0, [fp, #-36]	; 0xffffffdc
   11afc:	b	11b58 <__assert_fail@plt+0xb0c>
   11b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b04:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b08:	adds	r0, r0, #1
   11b0c:	adc	r1, r1, #0
   11b10:	str	r0, [fp, #-24]	; 0xffffffe8
   11b14:	str	r1, [fp, #-20]	; 0xffffffec
   11b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11b20:	orr	r0, r0, r1
   11b24:	cmp	r0, #0
   11b28:	bne	11b54 <__assert_fail@plt+0xb08>
   11b2c:	b	11b30 <__assert_fail@plt+0xae4>
   11b30:	movw	r0, #47267	; 0xb8a3
   11b34:	movt	r0, #1
   11b38:	bl	10f5c <gettext@plt>
   11b3c:	movw	r1, #1
   11b40:	str	r0, [sp, #20]
   11b44:	mov	r0, r1
   11b48:	movw	r1, #0
   11b4c:	ldr	r2, [sp, #20]
   11b50:	bl	10efc <error@plt>
   11b54:	b	11b58 <__assert_fail@plt+0xb0c>
   11b58:	b	11b5c <__assert_fail@plt+0xb10>
   11b5c:	ldr	r0, [sp, #36]	; 0x24
   11b60:	cmp	r0, #0
   11b64:	beq	11bf4 <__assert_fail@plt+0xba8>
   11b68:	ldr	r0, [sp, #36]	; 0x24
   11b6c:	cmp	r0, #1
   11b70:	bls	11b8c <__assert_fail@plt+0xb40>
   11b74:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   11b78:	tst	r0, #1
   11b7c:	beq	11b8c <__assert_fail@plt+0xb40>
   11b80:	ldr	r0, [fp, #-8]
   11b84:	movw	r1, #9
   11b88:	strb	r1, [r0]
   11b8c:	ldr	r0, [fp, #-8]
   11b90:	ldr	r2, [sp, #36]	; 0x24
   11b94:	movw	r1, #53588	; 0xd154
   11b98:	movt	r1, #2
   11b9c:	ldr	r3, [r1]
   11ba0:	movw	r1, #1
   11ba4:	bl	10e78 <fwrite_unlocked@plt>
   11ba8:	ldr	r1, [sp, #36]	; 0x24
   11bac:	cmp	r0, r1
   11bb0:	beq	11be4 <__assert_fail@plt+0xb98>
   11bb4:	bl	10f80 <__errno_location@plt>
   11bb8:	ldr	r1, [r0]
   11bbc:	movw	r0, #47290	; 0xb8ba
   11bc0:	movt	r0, #1
   11bc4:	str	r1, [sp, #16]
   11bc8:	bl	10f5c <gettext@plt>
   11bcc:	movw	r1, #1
   11bd0:	str	r0, [sp, #12]
   11bd4:	mov	r0, r1
   11bd8:	ldr	r1, [sp, #16]
   11bdc:	ldr	r2, [sp, #12]
   11be0:	bl	10efc <error@plt>
   11be4:	movw	r0, #0
   11be8:	str	r0, [sp, #36]	; 0x24
   11bec:	movw	r0, #0
   11bf0:	strb	r0, [fp, #-37]	; 0xffffffdb
   11bf4:	ldrb	r0, [sp, #35]	; 0x23
   11bf8:	and	r0, r0, #1
   11bfc:	strb	r0, [fp, #-38]	; 0xffffffda
   11c00:	movw	r0, #53600	; 0xd160
   11c04:	movt	r0, #2
   11c08:	ldrb	r0, [r0]
   11c0c:	tst	r0, #1
   11c10:	movw	r0, #1
   11c14:	str	r0, [sp, #8]
   11c18:	bne	11c24 <__assert_fail@plt+0xbd8>
   11c1c:	ldrb	r0, [sp, #35]	; 0x23
   11c20:	str	r0, [sp, #8]
   11c24:	ldr	r0, [sp, #8]
   11c28:	and	r0, r0, #1
   11c2c:	ldrb	r1, [fp, #-13]
   11c30:	and	r1, r1, #1
   11c34:	and	r0, r1, r0
   11c38:	cmp	r0, #0
   11c3c:	movw	r0, #0
   11c40:	movne	r0, #1
   11c44:	and	r0, r0, #1
   11c48:	strb	r0, [fp, #-13]
   11c4c:	ldr	r0, [fp, #-12]
   11c50:	cmp	r0, #0
   11c54:	bge	11c64 <__assert_fail@plt+0xc18>
   11c58:	ldr	r0, [fp, #-8]
   11c5c:	bl	13104 <__assert_fail@plt+0x20b8>
   11c60:	b	11cb8 <__assert_fail@plt+0xc6c>
   11c64:	ldr	r0, [fp, #-12]
   11c68:	bl	11034 <putchar_unlocked@plt>
   11c6c:	cmp	r0, #0
   11c70:	bge	11ca4 <__assert_fail@plt+0xc58>
   11c74:	bl	10f80 <__errno_location@plt>
   11c78:	ldr	r1, [r0]
   11c7c:	movw	r0, #47290	; 0xb8ba
   11c80:	movt	r0, #1
   11c84:	str	r1, [sp, #4]
   11c88:	bl	10f5c <gettext@plt>
   11c8c:	movw	r1, #1
   11c90:	str	r0, [sp]
   11c94:	mov	r0, r1
   11c98:	ldr	r1, [sp, #4]
   11c9c:	ldr	r2, [sp]
   11ca0:	bl	10efc <error@plt>
   11ca4:	b	11ca8 <__assert_fail@plt+0xc5c>
   11ca8:	ldr	r0, [fp, #-12]
   11cac:	cmp	r0, #10
   11cb0:	bne	11870 <__assert_fail@plt+0x824>
   11cb4:	b	11838 <__assert_fail@plt+0x7ec>
   11cb8:	mov	sp, fp
   11cbc:	pop	{fp, pc}
   11cc0:	push	{fp, lr}
   11cc4:	mov	fp, sp
   11cc8:	sub	sp, sp, #48	; 0x30
   11ccc:	str	r0, [fp, #-8]
   11cd0:	str	r1, [fp, #-4]
   11cd4:	movw	r0, #53608	; 0xd168
   11cd8:	movt	r0, #2
   11cdc:	ldr	r0, [r0]
   11ce0:	cmp	r0, #0
   11ce4:	beq	11d18 <__assert_fail@plt+0xccc>
   11ce8:	movw	r0, #53612	; 0xd16c
   11cec:	movt	r0, #2
   11cf0:	ldr	r0, [r0]
   11cf4:	movw	r1, #53608	; 0xd168
   11cf8:	movt	r1, #2
   11cfc:	ldr	r1, [r1]
   11d00:	add	r0, r0, r1, lsl #3
   11d04:	ldr	r1, [r0, #-8]
   11d08:	ldr	r0, [r0, #-4]
   11d0c:	str	r1, [sp, #20]
   11d10:	str	r0, [sp, #16]
   11d14:	b	11d2c <__assert_fail@plt+0xce0>
   11d18:	mov	r0, #0
   11d1c:	mov	r1, r0
   11d20:	str	r1, [sp, #20]
   11d24:	str	r0, [sp, #16]
   11d28:	b	11d2c <__assert_fail@plt+0xce0>
   11d2c:	ldr	r0, [sp, #16]
   11d30:	ldr	r1, [sp, #20]
   11d34:	str	r1, [fp, #-16]
   11d38:	str	r0, [fp, #-12]
   11d3c:	ldr	r0, [fp, #-16]
   11d40:	ldr	r1, [fp, #-12]
   11d44:	ldr	r2, [fp, #-8]
   11d48:	ldr	r3, [fp, #-4]
   11d4c:	subs	r0, r2, r0
   11d50:	sbcs	r1, r3, r1
   11d54:	bcc	11d80 <__assert_fail@plt+0xd34>
   11d58:	b	11d5c <__assert_fail@plt+0xd10>
   11d5c:	ldr	r0, [fp, #-8]
   11d60:	ldr	r1, [fp, #-4]
   11d64:	ldr	r2, [fp, #-16]
   11d68:	ldr	r3, [fp, #-12]
   11d6c:	subs	r0, r0, r2
   11d70:	sbc	r1, r1, r3
   11d74:	str	r0, [sp, #12]
   11d78:	str	r1, [sp, #8]
   11d7c:	b	11d94 <__assert_fail@plt+0xd48>
   11d80:	mov	r0, #0
   11d84:	mov	r1, r0
   11d88:	str	r1, [sp, #12]
   11d8c:	str	r0, [sp, #8]
   11d90:	b	11d94 <__assert_fail@plt+0xd48>
   11d94:	ldr	r0, [sp, #8]
   11d98:	ldr	r1, [sp, #12]
   11d9c:	str	r1, [sp, #24]
   11da0:	str	r0, [sp, #28]
   11da4:	movw	r0, #53608	; 0xd168
   11da8:	movt	r0, #2
   11dac:	ldr	r0, [r0]
   11db0:	movw	r1, #53616	; 0xd170
   11db4:	movt	r1, #2
   11db8:	ldr	r1, [r1]
   11dbc:	cmp	r0, r1
   11dc0:	bne	11dec <__assert_fail@plt+0xda0>
   11dc4:	movw	r0, #53612	; 0xd16c
   11dc8:	movt	r0, #2
   11dcc:	ldr	r0, [r0]
   11dd0:	movw	r1, #53616	; 0xd170
   11dd4:	movt	r1, #2
   11dd8:	movw	r2, #8
   11ddc:	bl	16488 <__assert_fail@plt+0x543c>
   11de0:	movw	r1, #53612	; 0xd16c
   11de4:	movt	r1, #2
   11de8:	str	r0, [r1]
   11dec:	ldr	r0, [fp, #-8]
   11df0:	ldr	r1, [fp, #-4]
   11df4:	movw	r2, #53612	; 0xd16c
   11df8:	movt	r2, #2
   11dfc:	ldr	r2, [r2]
   11e00:	movw	r3, #53608	; 0xd168
   11e04:	movt	r3, #2
   11e08:	ldr	ip, [r3]
   11e0c:	add	lr, ip, #1
   11e10:	str	lr, [r3]
   11e14:	str	r0, [r2, ip, lsl #3]!
   11e18:	str	r1, [r2, #4]
   11e1c:	movw	r0, #53976	; 0xd2d8
   11e20:	movt	r0, #2
   11e24:	ldr	r0, [r0]
   11e28:	ldr	r1, [sp, #24]
   11e2c:	ldr	r2, [sp, #28]
   11e30:	subs	r0, r0, r1
   11e34:	rscs	r1, r2, #0
   11e38:	bcs	11e84 <__assert_fail@plt+0xe38>
   11e3c:	b	11e40 <__assert_fail@plt+0xdf4>
   11e40:	ldr	r0, [sp, #28]
   11e44:	cmp	r0, #0
   11e48:	beq	11e74 <__assert_fail@plt+0xe28>
   11e4c:	b	11e50 <__assert_fail@plt+0xe04>
   11e50:	movw	r0, #47456	; 0xb960
   11e54:	movt	r0, #1
   11e58:	bl	10f5c <gettext@plt>
   11e5c:	movw	r1, #1
   11e60:	str	r0, [sp, #4]
   11e64:	mov	r0, r1
   11e68:	movw	r1, #0
   11e6c:	ldr	r2, [sp, #4]
   11e70:	bl	10efc <error@plt>
   11e74:	ldr	r0, [sp, #24]
   11e78:	movw	r1, #53976	; 0xd2d8
   11e7c:	movt	r1, #2
   11e80:	str	r0, [r1]
   11e84:	mov	sp, fp
   11e88:	pop	{fp, pc}
   11e8c:	push	{fp, lr}
   11e90:	mov	fp, sp
   11e94:	sub	sp, sp, #80	; 0x50
   11e98:	str	r0, [fp, #-4]
   11e9c:	mov	r0, #0
   11ea0:	strb	r0, [fp, #-5]
   11ea4:	str	r0, [fp, #-12]
   11ea8:	str	r0, [fp, #-16]
   11eac:	movw	r0, #0
   11eb0:	strb	r0, [fp, #-17]	; 0xffffffef
   11eb4:	strb	r0, [fp, #-18]	; 0xffffffee
   11eb8:	movw	r0, #0
   11ebc:	str	r0, [fp, #-24]	; 0xffffffe8
   11ec0:	movw	r0, #1
   11ec4:	strb	r0, [fp, #-25]	; 0xffffffe7
   11ec8:	ldr	r0, [fp, #-4]
   11ecc:	ldrsb	r0, [r0]
   11ed0:	cmp	r0, #0
   11ed4:	beq	1225c <__assert_fail@plt+0x1210>
   11ed8:	ldr	r0, [fp, #-4]
   11edc:	ldrb	r0, [r0]
   11ee0:	cmp	r0, #44	; 0x2c
   11ee4:	beq	11f20 <__assert_fail@plt+0xed4>
   11ee8:	bl	10f44 <__ctype_b_loc@plt>
   11eec:	ldr	r0, [r0]
   11ef0:	ldr	r1, [fp, #-4]
   11ef4:	ldrb	r1, [r1]
   11ef8:	str	r0, [sp, #40]	; 0x28
   11efc:	mov	r0, r1
   11f00:	bl	12324 <__assert_fail@plt+0x12d8>
   11f04:	mov	r1, r0
   11f08:	ldr	r2, [sp, #40]	; 0x28
   11f0c:	add	r0, r2, r0, lsl #1
   11f10:	ldrh	r0, [r0]
   11f14:	and	r0, r0, #1
   11f18:	cmp	r0, #0
   11f1c:	beq	11fac <__assert_fail@plt+0xf60>
   11f20:	ldrb	r0, [fp, #-5]
   11f24:	tst	r0, #1
   11f28:	beq	11fa0 <__assert_fail@plt+0xf54>
   11f2c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11f30:	tst	r0, #1
   11f34:	beq	11f5c <__assert_fail@plt+0xf10>
   11f38:	ldr	r0, [fp, #-16]
   11f3c:	ldr	r1, [fp, #-12]
   11f40:	bl	12338 <__assert_fail@plt+0x12ec>
   11f44:	tst	r0, #1
   11f48:	bne	11f58 <__assert_fail@plt+0xf0c>
   11f4c:	movw	r0, #0
   11f50:	strb	r0, [fp, #-25]	; 0xffffffe7
   11f54:	b	1225c <__assert_fail@plt+0x1210>
   11f58:	b	11f9c <__assert_fail@plt+0xf50>
   11f5c:	ldrb	r0, [fp, #-18]	; 0xffffffee
   11f60:	tst	r0, #1
   11f64:	beq	11f8c <__assert_fail@plt+0xf40>
   11f68:	ldr	r0, [fp, #-16]
   11f6c:	ldr	r1, [fp, #-12]
   11f70:	bl	123c4 <__assert_fail@plt+0x1378>
   11f74:	tst	r0, #1
   11f78:	bne	11f88 <__assert_fail@plt+0xf3c>
   11f7c:	movw	r0, #0
   11f80:	strb	r0, [fp, #-25]	; 0xffffffe7
   11f84:	b	1225c <__assert_fail@plt+0x1210>
   11f88:	b	11f98 <__assert_fail@plt+0xf4c>
   11f8c:	ldr	r0, [fp, #-16]
   11f90:	ldr	r1, [fp, #-12]
   11f94:	bl	11cc0 <__assert_fail@plt+0xc74>
   11f98:	b	11f9c <__assert_fail@plt+0xf50>
   11f9c:	b	11fa0 <__assert_fail@plt+0xf54>
   11fa0:	movw	r0, #0
   11fa4:	strb	r0, [fp, #-5]
   11fa8:	b	12248 <__assert_fail@plt+0x11fc>
   11fac:	ldr	r0, [fp, #-4]
   11fb0:	ldrb	r0, [r0]
   11fb4:	cmp	r0, #47	; 0x2f
   11fb8:	bne	12018 <__assert_fail@plt+0xfcc>
   11fbc:	ldrb	r0, [fp, #-5]
   11fc0:	tst	r0, #1
   11fc4:	beq	12004 <__assert_fail@plt+0xfb8>
   11fc8:	movw	r0, #47479	; 0xb977
   11fcc:	movt	r0, #1
   11fd0:	bl	10f5c <gettext@plt>
   11fd4:	ldr	r1, [fp, #-4]
   11fd8:	str	r0, [sp, #36]	; 0x24
   11fdc:	mov	r0, r1
   11fe0:	bl	158a8 <__assert_fail@plt+0x485c>
   11fe4:	movw	r1, #0
   11fe8:	str	r0, [sp, #32]
   11fec:	mov	r0, r1
   11ff0:	ldr	r2, [sp, #36]	; 0x24
   11ff4:	ldr	r3, [sp, #32]
   11ff8:	bl	10efc <error@plt>
   11ffc:	movw	r0, #0
   12000:	strb	r0, [fp, #-25]	; 0xffffffe7
   12004:	movw	r0, #1
   12008:	strb	r0, [fp, #-17]	; 0xffffffef
   1200c:	movw	r0, #0
   12010:	strb	r0, [fp, #-18]	; 0xffffffee
   12014:	b	12244 <__assert_fail@plt+0x11f8>
   12018:	ldr	r0, [fp, #-4]
   1201c:	ldrb	r0, [r0]
   12020:	cmp	r0, #43	; 0x2b
   12024:	bne	12084 <__assert_fail@plt+0x1038>
   12028:	ldrb	r0, [fp, #-5]
   1202c:	tst	r0, #1
   12030:	beq	12070 <__assert_fail@plt+0x1024>
   12034:	movw	r0, #47520	; 0xb9a0
   12038:	movt	r0, #1
   1203c:	bl	10f5c <gettext@plt>
   12040:	ldr	r1, [fp, #-4]
   12044:	str	r0, [sp, #28]
   12048:	mov	r0, r1
   1204c:	bl	158a8 <__assert_fail@plt+0x485c>
   12050:	movw	r1, #0
   12054:	str	r0, [sp, #24]
   12058:	mov	r0, r1
   1205c:	ldr	r2, [sp, #28]
   12060:	ldr	r3, [sp, #24]
   12064:	bl	10efc <error@plt>
   12068:	movw	r0, #0
   1206c:	strb	r0, [fp, #-25]	; 0xffffffe7
   12070:	movw	r0, #1
   12074:	strb	r0, [fp, #-18]	; 0xffffffee
   12078:	movw	r0, #0
   1207c:	strb	r0, [fp, #-17]	; 0xffffffef
   12080:	b	12240 <__assert_fail@plt+0x11f4>
   12084:	ldr	r0, [fp, #-4]
   12088:	ldrb	r0, [r0]
   1208c:	sub	r0, r0, #48	; 0x30
   12090:	cmp	r0, #9
   12094:	bhi	121fc <__assert_fail@plt+0x11b0>
   12098:	ldrb	r0, [fp, #-5]
   1209c:	tst	r0, #1
   120a0:	bne	120c0 <__assert_fail@plt+0x1074>
   120a4:	mov	r0, #0
   120a8:	str	r0, [fp, #-12]
   120ac:	str	r0, [fp, #-16]
   120b0:	movw	r0, #1
   120b4:	strb	r0, [fp, #-5]
   120b8:	ldr	r0, [fp, #-4]
   120bc:	str	r0, [fp, #-24]	; 0xffffffe8
   120c0:	ldr	r0, [fp, #-16]
   120c4:	ldr	r1, [fp, #-12]
   120c8:	movw	r2, #39321	; 0x9999
   120cc:	movt	r2, #39321	; 0x9999
   120d0:	subs	r0, r2, r0
   120d4:	movw	r2, #39321	; 0x9999
   120d8:	movt	r2, #6553	; 0x1999
   120dc:	sbcs	r1, r2, r1
   120e0:	bcc	12124 <__assert_fail@plt+0x10d8>
   120e4:	b	120e8 <__assert_fail@plt+0x109c>
   120e8:	ldr	r0, [fp, #-16]
   120ec:	ldr	r1, [fp, #-12]
   120f0:	mov	r2, #10
   120f4:	umull	r2, r3, r0, r2
   120f8:	add	ip, r1, r1, lsl #2
   120fc:	add	r3, r3, ip, lsl #1
   12100:	ldr	ip, [fp, #-4]
   12104:	ldrb	ip, [ip]
   12108:	sub	ip, ip, #48	; 0x30
   1210c:	adds	r2, r2, ip
   12110:	adc	r3, r3, ip, asr #31
   12114:	subs	r0, r2, r0
   12118:	sbcs	r1, r3, r1
   1211c:	bcs	12130 <__assert_fail@plt+0x10e4>
   12120:	b	12124 <__assert_fail@plt+0x10d8>
   12124:	movw	r0, #0
   12128:	str	r0, [sp, #20]
   1212c:	b	1216c <__assert_fail@plt+0x1120>
   12130:	ldr	r0, [fp, #-16]
   12134:	ldr	r1, [fp, #-12]
   12138:	mov	r2, #10
   1213c:	umull	r0, r2, r0, r2
   12140:	add	r1, r1, r1, lsl #2
   12144:	add	r1, r2, r1, lsl #1
   12148:	ldr	r2, [fp, #-4]
   1214c:	ldrb	r2, [r2]
   12150:	sub	r2, r2, #48	; 0x30
   12154:	adds	r0, r0, r2
   12158:	adc	r1, r1, r2, asr #31
   1215c:	str	r0, [fp, #-16]
   12160:	str	r1, [fp, #-12]
   12164:	movw	r0, #1
   12168:	str	r0, [sp, #20]
   1216c:	ldr	r0, [sp, #20]
   12170:	cmp	r0, #0
   12174:	bne	121f8 <__assert_fail@plt+0x11ac>
   12178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1217c:	movw	r1, #47561	; 0xb9c9
   12180:	movt	r1, #1
   12184:	bl	11040 <strspn@plt>
   12188:	str	r0, [fp, #-32]	; 0xffffffe0
   1218c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12190:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12194:	bl	18f54 <__assert_fail@plt+0x7f08>
   12198:	str	r0, [fp, #-36]	; 0xffffffdc
   1219c:	movw	r0, #47572	; 0xb9d4
   121a0:	movt	r0, #1
   121a4:	bl	10f5c <gettext@plt>
   121a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   121ac:	str	r0, [sp, #16]
   121b0:	mov	r0, r1
   121b4:	bl	158a8 <__assert_fail@plt+0x485c>
   121b8:	movw	r1, #0
   121bc:	str	r0, [sp, #12]
   121c0:	mov	r0, r1
   121c4:	ldr	r2, [sp, #16]
   121c8:	ldr	r3, [sp, #12]
   121cc:	bl	10efc <error@plt>
   121d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   121d4:	bl	13104 <__assert_fail@plt+0x20b8>
   121d8:	movw	r0, #0
   121dc:	strb	r0, [fp, #-25]	; 0xffffffe7
   121e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   121e8:	add	r0, r0, r1
   121ec:	mvn	r1, #0
   121f0:	add	r0, r0, r1
   121f4:	str	r0, [fp, #-4]
   121f8:	b	1223c <__assert_fail@plt+0x11f0>
   121fc:	movw	r0, #47597	; 0xb9ed
   12200:	movt	r0, #1
   12204:	bl	10f5c <gettext@plt>
   12208:	ldr	r1, [fp, #-4]
   1220c:	str	r0, [sp, #8]
   12210:	mov	r0, r1
   12214:	bl	158a8 <__assert_fail@plt+0x485c>
   12218:	movw	r1, #0
   1221c:	str	r0, [sp, #4]
   12220:	mov	r0, r1
   12224:	ldr	r2, [sp, #8]
   12228:	ldr	r3, [sp, #4]
   1222c:	bl	10efc <error@plt>
   12230:	movw	r0, #0
   12234:	strb	r0, [fp, #-25]	; 0xffffffe7
   12238:	b	1225c <__assert_fail@plt+0x1210>
   1223c:	b	12240 <__assert_fail@plt+0x11f4>
   12240:	b	12244 <__assert_fail@plt+0x11f8>
   12244:	b	12248 <__assert_fail@plt+0x11fc>
   12248:	b	1224c <__assert_fail@plt+0x1200>
   1224c:	ldr	r0, [fp, #-4]
   12250:	add	r0, r0, #1
   12254:	str	r0, [fp, #-4]
   12258:	b	11ec8 <__assert_fail@plt+0xe7c>
   1225c:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   12260:	tst	r0, #1
   12264:	beq	12308 <__assert_fail@plt+0x12bc>
   12268:	ldrb	r0, [fp, #-5]
   1226c:	tst	r0, #1
   12270:	beq	12308 <__assert_fail@plt+0x12bc>
   12274:	ldrb	r0, [fp, #-17]	; 0xffffffef
   12278:	tst	r0, #1
   1227c:	beq	122b4 <__assert_fail@plt+0x1268>
   12280:	ldr	r0, [fp, #-16]
   12284:	ldr	r1, [fp, #-12]
   12288:	bl	12338 <__assert_fail@plt+0x12ec>
   1228c:	and	r0, r0, #1
   12290:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   12294:	and	r1, r1, #1
   12298:	and	r0, r1, r0
   1229c:	cmp	r0, #0
   122a0:	movw	r0, #0
   122a4:	movne	r0, #1
   122a8:	and	r0, r0, #1
   122ac:	strb	r0, [fp, #-25]	; 0xffffffe7
   122b0:	b	12304 <__assert_fail@plt+0x12b8>
   122b4:	ldrb	r0, [fp, #-18]	; 0xffffffee
   122b8:	tst	r0, #1
   122bc:	beq	122f4 <__assert_fail@plt+0x12a8>
   122c0:	ldr	r0, [fp, #-16]
   122c4:	ldr	r1, [fp, #-12]
   122c8:	bl	123c4 <__assert_fail@plt+0x1378>
   122cc:	and	r0, r0, #1
   122d0:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   122d4:	and	r1, r1, #1
   122d8:	and	r0, r1, r0
   122dc:	cmp	r0, #0
   122e0:	movw	r0, #0
   122e4:	movne	r0, #1
   122e8:	and	r0, r0, #1
   122ec:	strb	r0, [fp, #-25]	; 0xffffffe7
   122f0:	b	12300 <__assert_fail@plt+0x12b4>
   122f4:	ldr	r0, [fp, #-16]
   122f8:	ldr	r1, [fp, #-12]
   122fc:	bl	11cc0 <__assert_fail@plt+0xc74>
   12300:	b	12304 <__assert_fail@plt+0x12b8>
   12304:	b	12308 <__assert_fail@plt+0x12bc>
   12308:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   1230c:	tst	r0, #1
   12310:	bne	1231c <__assert_fail@plt+0x12d0>
   12314:	movw	r0, #1
   12318:	bl	10f50 <exit@plt>
   1231c:	mov	sp, fp
   12320:	pop	{fp, pc}
   12324:	sub	sp, sp, #4
   12328:	strb	r0, [sp, #3]
   1232c:	ldrb	r0, [sp, #3]
   12330:	add	sp, sp, #4
   12334:	bx	lr
   12338:	push	{fp, lr}
   1233c:	mov	fp, sp
   12340:	sub	sp, sp, #16
   12344:	str	r0, [sp, #8]
   12348:	str	r1, [sp, #12]
   1234c:	mov	r0, #1
   12350:	strb	r0, [sp, #7]
   12354:	movw	r0, #53624	; 0xd178
   12358:	movt	r0, #2
   1235c:	ldr	r1, [r0]
   12360:	ldr	r0, [r0, #4]
   12364:	orr	r0, r1, r0
   12368:	cmp	r0, #0
   1236c:	beq	1239c <__assert_fail@plt+0x1350>
   12370:	b	12374 <__assert_fail@plt+0x1328>
   12374:	movw	r0, #48122	; 0xbbfa
   12378:	movt	r0, #1
   1237c:	bl	10f5c <gettext@plt>
   12380:	movw	r1, #0
   12384:	str	r0, [sp]
   12388:	mov	r0, r1
   1238c:	ldr	r2, [sp]
   12390:	bl	10efc <error@plt>
   12394:	movw	r0, #0
   12398:	strb	r0, [sp, #7]
   1239c:	ldr	r0, [sp, #8]
   123a0:	ldr	r1, [sp, #12]
   123a4:	movw	r2, #53624	; 0xd178
   123a8:	movt	r2, #2
   123ac:	str	r1, [r2, #4]
   123b0:	str	r0, [r2]
   123b4:	ldrb	r0, [sp, #7]
   123b8:	and	r0, r0, #1
   123bc:	mov	sp, fp
   123c0:	pop	{fp, pc}
   123c4:	push	{fp, lr}
   123c8:	mov	fp, sp
   123cc:	sub	sp, sp, #16
   123d0:	str	r0, [sp, #8]
   123d4:	str	r1, [sp, #12]
   123d8:	mov	r0, #1
   123dc:	strb	r0, [sp, #7]
   123e0:	movw	r0, #53632	; 0xd180
   123e4:	movt	r0, #2
   123e8:	ldr	r1, [r0]
   123ec:	ldr	r0, [r0, #4]
   123f0:	orr	r0, r1, r0
   123f4:	cmp	r0, #0
   123f8:	beq	12428 <__assert_fail@plt+0x13dc>
   123fc:	b	12400 <__assert_fail@plt+0x13b4>
   12400:	movw	r0, #48169	; 0xbc29
   12404:	movt	r0, #1
   12408:	bl	10f5c <gettext@plt>
   1240c:	movw	r1, #0
   12410:	str	r0, [sp]
   12414:	mov	r0, r1
   12418:	ldr	r2, [sp]
   1241c:	bl	10efc <error@plt>
   12420:	movw	r0, #0
   12424:	strb	r0, [sp, #7]
   12428:	ldr	r0, [sp, #8]
   1242c:	ldr	r1, [sp, #12]
   12430:	movw	r2, #53632	; 0xd180
   12434:	movt	r2, #2
   12438:	str	r1, [r2, #4]
   1243c:	str	r0, [r2]
   12440:	ldrb	r0, [sp, #7]
   12444:	and	r0, r0, #1
   12448:	mov	sp, fp
   1244c:	pop	{fp, pc}
   12450:	push	{fp, lr}
   12454:	mov	fp, sp
   12458:	sub	sp, sp, #16
   1245c:	movw	r0, #53612	; 0xd16c
   12460:	movt	r0, #2
   12464:	ldr	r0, [r0]
   12468:	movw	r1, #53608	; 0xd168
   1246c:	movt	r1, #2
   12470:	ldr	r1, [r1]
   12474:	bl	125f4 <__assert_fail@plt+0x15a8>
   12478:	movw	r0, #53608	; 0xd168
   1247c:	movt	r0, #2
   12480:	ldr	r0, [r0]
   12484:	cmp	r0, #0
   12488:	bne	12558 <__assert_fail@plt+0x150c>
   1248c:	movw	r0, #53624	; 0xd178
   12490:	movt	r0, #2
   12494:	ldr	r1, [r0]
   12498:	ldr	r0, [r0, #4]
   1249c:	orr	r0, r1, r0
   124a0:	cmp	r0, #0
   124a4:	beq	124c8 <__assert_fail@plt+0x147c>
   124a8:	b	124ac <__assert_fail@plt+0x1460>
   124ac:	movw	r0, #53624	; 0xd178
   124b0:	movt	r0, #2
   124b4:	ldr	r1, [r0]
   124b8:	ldr	r0, [r0, #4]
   124bc:	str	r1, [fp, #-4]
   124c0:	str	r0, [sp, #8]
   124c4:	b	1252c <__assert_fail@plt+0x14e0>
   124c8:	movw	r0, #53632	; 0xd180
   124cc:	movt	r0, #2
   124d0:	ldr	r1, [r0]
   124d4:	ldr	r0, [r0, #4]
   124d8:	orr	r0, r1, r0
   124dc:	cmp	r0, #0
   124e0:	beq	12504 <__assert_fail@plt+0x14b8>
   124e4:	b	124e8 <__assert_fail@plt+0x149c>
   124e8:	movw	r0, #53632	; 0xd180
   124ec:	movt	r0, #2
   124f0:	ldr	r1, [r0]
   124f4:	ldr	r0, [r0, #4]
   124f8:	str	r1, [sp, #4]
   124fc:	str	r0, [sp]
   12500:	b	12518 <__assert_fail@plt+0x14cc>
   12504:	mov	r0, #0
   12508:	mov	r1, #8
   1250c:	str	r1, [sp, #4]
   12510:	str	r0, [sp]
   12514:	b	12518 <__assert_fail@plt+0x14cc>
   12518:	ldr	r0, [sp]
   1251c:	ldr	r1, [sp, #4]
   12520:	str	r1, [fp, #-4]
   12524:	str	r0, [sp, #8]
   12528:	b	1252c <__assert_fail@plt+0x14e0>
   1252c:	ldr	r0, [sp, #8]
   12530:	ldr	r1, [fp, #-4]
   12534:	movw	r2, #53976	; 0xd2d8
   12538:	movt	r2, #2
   1253c:	str	r1, [r2]
   12540:	movw	r2, #53640	; 0xd188
   12544:	movt	r2, #2
   12548:	mov	r3, #0
   1254c:	str	r3, [r2, #4]
   12550:	str	r1, [r2]
   12554:	b	125ec <__assert_fail@plt+0x15a0>
   12558:	movw	r0, #53608	; 0xd168
   1255c:	movt	r0, #2
   12560:	ldr	r0, [r0]
   12564:	cmp	r0, #1
   12568:	bne	125d4 <__assert_fail@plt+0x1588>
   1256c:	movw	r0, #53624	; 0xd178
   12570:	movt	r0, #2
   12574:	ldr	r1, [r0]
   12578:	ldr	r0, [r0, #4]
   1257c:	orr	r0, r1, r0
   12580:	cmp	r0, #0
   12584:	bne	125d4 <__assert_fail@plt+0x1588>
   12588:	b	1258c <__assert_fail@plt+0x1540>
   1258c:	movw	r0, #53632	; 0xd180
   12590:	movt	r0, #2
   12594:	ldr	r1, [r0]
   12598:	ldr	r0, [r0, #4]
   1259c:	orr	r0, r1, r0
   125a0:	cmp	r0, #0
   125a4:	bne	125d4 <__assert_fail@plt+0x1588>
   125a8:	b	125ac <__assert_fail@plt+0x1560>
   125ac:	movw	r0, #53612	; 0xd16c
   125b0:	movt	r0, #2
   125b4:	ldr	r0, [r0]
   125b8:	ldr	r1, [r0]
   125bc:	ldr	r0, [r0, #4]
   125c0:	movw	r2, #53640	; 0xd188
   125c4:	movt	r2, #2
   125c8:	str	r0, [r2, #4]
   125cc:	str	r1, [r2]
   125d0:	b	125e8 <__assert_fail@plt+0x159c>
   125d4:	movw	r0, #53640	; 0xd188
   125d8:	movt	r0, #2
   125dc:	mov	r1, #0
   125e0:	str	r1, [r0, #4]
   125e4:	str	r1, [r0]
   125e8:	b	125ec <__assert_fail@plt+0x15a0>
   125ec:	mov	sp, fp
   125f0:	pop	{fp, pc}
   125f4:	push	{fp, lr}
   125f8:	mov	fp, sp
   125fc:	sub	sp, sp, #32
   12600:	str	r0, [fp, #-4]
   12604:	str	r1, [fp, #-8]
   12608:	mov	r0, #0
   1260c:	str	r0, [sp, #20]
   12610:	str	r0, [sp, #16]
   12614:	movw	r0, #0
   12618:	str	r0, [sp, #12]
   1261c:	ldr	r0, [sp, #12]
   12620:	ldr	r1, [fp, #-8]
   12624:	cmp	r0, r1
   12628:	bcs	126e4 <__assert_fail@plt+0x1698>
   1262c:	ldr	r0, [fp, #-4]
   12630:	ldr	r1, [sp, #12]
   12634:	ldr	r1, [r0, r1, lsl #3]!
   12638:	ldr	r0, [r0, #4]
   1263c:	orr	r0, r1, r0
   12640:	cmp	r0, #0
   12644:	bne	12670 <__assert_fail@plt+0x1624>
   12648:	b	1264c <__assert_fail@plt+0x1600>
   1264c:	movw	r0, #48216	; 0xbc58
   12650:	movt	r0, #1
   12654:	bl	10f5c <gettext@plt>
   12658:	movw	r1, #1
   1265c:	str	r0, [sp, #8]
   12660:	mov	r0, r1
   12664:	movw	r1, #0
   12668:	ldr	r2, [sp, #8]
   1266c:	bl	10efc <error@plt>
   12670:	ldr	r0, [fp, #-4]
   12674:	ldr	r1, [sp, #12]
   12678:	ldr	r1, [r0, r1, lsl #3]!
   1267c:	ldr	r0, [r0, #4]
   12680:	ldr	r2, [sp, #16]
   12684:	ldr	r3, [sp, #20]
   12688:	subs	r1, r2, r1
   1268c:	sbcs	r0, r3, r0
   12690:	bcc	126bc <__assert_fail@plt+0x1670>
   12694:	b	12698 <__assert_fail@plt+0x164c>
   12698:	movw	r0, #48237	; 0xbc6d
   1269c:	movt	r0, #1
   126a0:	bl	10f5c <gettext@plt>
   126a4:	movw	r1, #1
   126a8:	str	r0, [sp, #4]
   126ac:	mov	r0, r1
   126b0:	movw	r1, #0
   126b4:	ldr	r2, [sp, #4]
   126b8:	bl	10efc <error@plt>
   126bc:	ldr	r0, [fp, #-4]
   126c0:	ldr	r1, [sp, #12]
   126c4:	ldr	r1, [r0, r1, lsl #3]!
   126c8:	ldr	r0, [r0, #4]
   126cc:	str	r0, [sp, #20]
   126d0:	str	r1, [sp, #16]
   126d4:	ldr	r0, [sp, #12]
   126d8:	add	r0, r0, #1
   126dc:	str	r0, [sp, #12]
   126e0:	b	1261c <__assert_fail@plt+0x15d0>
   126e4:	movw	r0, #53632	; 0xd180
   126e8:	movt	r0, #2
   126ec:	ldr	r1, [r0]
   126f0:	ldr	r0, [r0, #4]
   126f4:	orr	r0, r1, r0
   126f8:	cmp	r0, #0
   126fc:	beq	12748 <__assert_fail@plt+0x16fc>
   12700:	b	12704 <__assert_fail@plt+0x16b8>
   12704:	movw	r0, #53624	; 0xd178
   12708:	movt	r0, #2
   1270c:	ldr	r1, [r0]
   12710:	ldr	r0, [r0, #4]
   12714:	orr	r0, r1, r0
   12718:	cmp	r0, #0
   1271c:	beq	12748 <__assert_fail@plt+0x16fc>
   12720:	b	12724 <__assert_fail@plt+0x16d8>
   12724:	movw	r0, #48265	; 0xbc89
   12728:	movt	r0, #1
   1272c:	bl	10f5c <gettext@plt>
   12730:	movw	r1, #1
   12734:	str	r0, [sp]
   12738:	mov	r0, r1
   1273c:	movw	r1, #0
   12740:	ldr	r2, [sp]
   12744:	bl	10efc <error@plt>
   12748:	mov	sp, fp
   1274c:	pop	{fp, pc}
   12750:	push	{r4, r5, fp, lr}
   12754:	add	fp, sp, #8
   12758:	sub	sp, sp, #88	; 0x58
   1275c:	str	r0, [fp, #-24]	; 0xffffffe8
   12760:	str	r1, [fp, #-20]	; 0xffffffec
   12764:	str	r2, [fp, #-28]	; 0xffffffe4
   12768:	str	r3, [fp, #-32]	; 0xffffffe0
   1276c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12770:	mov	r1, #0
   12774:	strb	r1, [r0]
   12778:	movw	r0, #53640	; 0xd188
   1277c:	movt	r0, #2
   12780:	ldr	r1, [r0]
   12784:	ldr	r0, [r0, #4]
   12788:	orr	r0, r1, r0
   1278c:	cmp	r0, #0
   12790:	beq	127fc <__assert_fail@plt+0x17b0>
   12794:	b	12798 <__assert_fail@plt+0x174c>
   12798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1279c:	ldr	r1, [fp, #-20]	; 0xffffffec
   127a0:	movw	r2, #53640	; 0xd188
   127a4:	movt	r2, #2
   127a8:	ldr	r3, [r2]
   127ac:	ldr	r2, [r2, #4]
   127b0:	str	r0, [sp, #44]	; 0x2c
   127b4:	str	r1, [sp, #40]	; 0x28
   127b8:	str	r2, [sp, #36]	; 0x24
   127bc:	mov	r2, r3
   127c0:	ldr	ip, [sp, #36]	; 0x24
   127c4:	str	r3, [sp, #32]
   127c8:	mov	r3, ip
   127cc:	bl	1b298 <__assert_fail@plt+0xa24c>
   127d0:	ldr	ip, [sp, #32]
   127d4:	subs	r2, ip, r2
   127d8:	ldr	lr, [sp, #36]	; 0x24
   127dc:	sbc	r3, lr, r3
   127e0:	ldr	r4, [sp, #44]	; 0x2c
   127e4:	adds	r2, r4, r2
   127e8:	ldr	r5, [sp, #40]	; 0x28
   127ec:	adc	r3, r5, r3
   127f0:	str	r2, [fp, #-16]
   127f4:	str	r3, [fp, #-12]
   127f8:	b	129f0 <__assert_fail@plt+0x19a4>
   127fc:	b	12800 <__assert_fail@plt+0x17b4>
   12800:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12804:	ldr	r0, [r0]
   12808:	movw	r1, #53608	; 0xd168
   1280c:	movt	r1, #2
   12810:	ldr	r1, [r1]
   12814:	cmp	r0, r1
   12818:	bcs	1288c <__assert_fail@plt+0x1840>
   1281c:	movw	r0, #53612	; 0xd16c
   12820:	movt	r0, #2
   12824:	ldr	r0, [r0]
   12828:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1282c:	ldr	r1, [r1]
   12830:	ldr	r1, [r0, r1, lsl #3]!
   12834:	ldr	r0, [r0, #4]
   12838:	str	r0, [fp, #-36]	; 0xffffffdc
   1283c:	str	r1, [fp, #-40]	; 0xffffffd8
   12840:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12844:	ldr	r1, [fp, #-20]	; 0xffffffec
   12848:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1284c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12850:	subs	r0, r0, r2
   12854:	sbcs	r1, r1, r3
   12858:	bcs	12874 <__assert_fail@plt+0x1828>
   1285c:	b	12860 <__assert_fail@plt+0x1814>
   12860:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12864:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12868:	str	r1, [fp, #-12]
   1286c:	str	r0, [fp, #-16]
   12870:	b	129f0 <__assert_fail@plt+0x19a4>
   12874:	b	12878 <__assert_fail@plt+0x182c>
   12878:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1287c:	ldr	r1, [r0]
   12880:	add	r1, r1, #1
   12884:	str	r1, [r0]
   12888:	b	12800 <__assert_fail@plt+0x17b4>
   1288c:	movw	r0, #53624	; 0xd178
   12890:	movt	r0, #2
   12894:	ldr	r1, [r0]
   12898:	ldr	r0, [r0, #4]
   1289c:	orr	r0, r1, r0
   128a0:	cmp	r0, #0
   128a4:	beq	12910 <__assert_fail@plt+0x18c4>
   128a8:	b	128ac <__assert_fail@plt+0x1860>
   128ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   128b4:	movw	r2, #53624	; 0xd178
   128b8:	movt	r2, #2
   128bc:	ldr	r3, [r2]
   128c0:	ldr	r2, [r2, #4]
   128c4:	str	r0, [sp, #28]
   128c8:	str	r1, [sp, #24]
   128cc:	str	r2, [sp, #20]
   128d0:	mov	r2, r3
   128d4:	ldr	ip, [sp, #20]
   128d8:	str	r3, [sp, #16]
   128dc:	mov	r3, ip
   128e0:	bl	1b298 <__assert_fail@plt+0xa24c>
   128e4:	ldr	ip, [sp, #16]
   128e8:	subs	r2, ip, r2
   128ec:	ldr	lr, [sp, #20]
   128f0:	sbc	r3, lr, r3
   128f4:	ldr	r4, [sp, #28]
   128f8:	adds	r2, r4, r2
   128fc:	ldr	r5, [sp, #24]
   12900:	adc	r3, r5, r3
   12904:	str	r2, [fp, #-16]
   12908:	str	r3, [fp, #-12]
   1290c:	b	129f0 <__assert_fail@plt+0x19a4>
   12910:	movw	r0, #53632	; 0xd180
   12914:	movt	r0, #2
   12918:	ldr	r1, [r0]
   1291c:	ldr	r0, [r0, #4]
   12920:	orr	r0, r1, r0
   12924:	cmp	r0, #0
   12928:	beq	129d8 <__assert_fail@plt+0x198c>
   1292c:	b	12930 <__assert_fail@plt+0x18e4>
   12930:	movw	r0, #53612	; 0xd16c
   12934:	movt	r0, #2
   12938:	ldr	r0, [r0]
   1293c:	movw	r1, #53608	; 0xd168
   12940:	movt	r1, #2
   12944:	ldr	r1, [r1]
   12948:	add	r0, r0, r1, lsl #3
   1294c:	ldr	r1, [r0, #-8]
   12950:	ldr	r0, [r0, #-4]
   12954:	str	r0, [sp, #52]	; 0x34
   12958:	str	r1, [sp, #48]	; 0x30
   1295c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12960:	ldr	r1, [fp, #-20]	; 0xffffffec
   12964:	movw	r2, #53632	; 0xd180
   12968:	movt	r2, #2
   1296c:	ldr	r3, [r2]
   12970:	ldr	r2, [r2, #4]
   12974:	ldr	ip, [sp, #48]	; 0x30
   12978:	ldr	lr, [sp, #52]	; 0x34
   1297c:	subs	ip, r0, ip
   12980:	sbc	lr, r1, lr
   12984:	str	r0, [sp, #12]
   12988:	mov	r0, ip
   1298c:	str	r1, [sp, #8]
   12990:	mov	r1, lr
   12994:	str	r2, [sp, #4]
   12998:	mov	r2, r3
   1299c:	ldr	ip, [sp, #4]
   129a0:	str	r3, [sp]
   129a4:	mov	r3, ip
   129a8:	bl	1b298 <__assert_fail@plt+0xa24c>
   129ac:	ldr	ip, [sp]
   129b0:	subs	r2, ip, r2
   129b4:	ldr	lr, [sp, #4]
   129b8:	sbc	r3, lr, r3
   129bc:	ldr	r4, [sp, #12]
   129c0:	adds	r2, r4, r2
   129c4:	ldr	r5, [sp, #8]
   129c8:	adc	r3, r5, r3
   129cc:	str	r2, [fp, #-16]
   129d0:	str	r3, [fp, #-12]
   129d4:	b	129f0 <__assert_fail@plt+0x19a4>
   129d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129dc:	mov	r1, #1
   129e0:	strb	r1, [r0]
   129e4:	mov	r0, #0
   129e8:	str	r0, [fp, #-12]
   129ec:	str	r0, [fp, #-16]
   129f0:	ldr	r0, [fp, #-16]
   129f4:	ldr	r1, [fp, #-12]
   129f8:	sub	sp, fp, #8
   129fc:	pop	{r4, r5, fp, pc}
   12a00:	sub	sp, sp, #4
   12a04:	str	r0, [sp]
   12a08:	movw	r0, #53648	; 0xd190
   12a0c:	movt	r0, #2
   12a10:	movw	r1, #0
   12a14:	strb	r1, [r0]
   12a18:	ldr	r0, [sp]
   12a1c:	movw	r1, #0
   12a20:	cmp	r0, r1
   12a24:	bne	12a40 <__assert_fail@plt+0x19f4>
   12a28:	movw	r0, #53652	; 0xd194
   12a2c:	movt	r0, #2
   12a30:	movw	r1, #53476	; 0xd0e4
   12a34:	movt	r1, #2
   12a38:	str	r1, [r0]
   12a3c:	b	12a50 <__assert_fail@plt+0x1a04>
   12a40:	ldr	r0, [sp]
   12a44:	movw	r1, #53652	; 0xd194
   12a48:	movt	r1, #2
   12a4c:	str	r0, [r1]
   12a50:	add	sp, sp, #4
   12a54:	bx	lr
   12a58:	push	{fp, lr}
   12a5c:	mov	fp, sp
   12a60:	sub	sp, sp, #32
   12a64:	str	r0, [fp, #-8]
   12a68:	ldr	r0, [fp, #-8]
   12a6c:	movw	r1, #0
   12a70:	cmp	r0, r1
   12a74:	beq	12b88 <__assert_fail@plt+0x1b3c>
   12a78:	movw	r0, #53656	; 0xd198
   12a7c:	movt	r0, #2
   12a80:	ldr	r0, [r0]
   12a84:	movw	r1, #0
   12a88:	cmp	r0, r1
   12a8c:	beq	12a94 <__assert_fail@plt+0x1a48>
   12a90:	b	12ab4 <__assert_fail@plt+0x1a68>
   12a94:	movw	r0, #47640	; 0xba18
   12a98:	movt	r0, #1
   12a9c:	movw	r1, #47650	; 0xba22
   12aa0:	movt	r1, #1
   12aa4:	movw	r2, #340	; 0x154
   12aa8:	movw	r3, #47670	; 0xba36
   12aac:	movt	r3, #1
   12ab0:	bl	1104c <__assert_fail@plt>
   12ab4:	bl	10f80 <__errno_location@plt>
   12ab8:	ldr	r0, [r0]
   12abc:	str	r0, [sp, #16]
   12ac0:	ldr	r0, [fp, #-8]
   12ac4:	bl	10ee4 <ferror_unlocked@plt>
   12ac8:	cmp	r0, #0
   12acc:	bne	12ad8 <__assert_fail@plt+0x1a8c>
   12ad0:	movw	r0, #0
   12ad4:	str	r0, [sp, #16]
   12ad8:	movw	r0, #53656	; 0xd198
   12adc:	movt	r0, #2
   12ae0:	ldr	r0, [r0]
   12ae4:	movw	r1, #48398	; 0xbd0e
   12ae8:	movt	r1, #1
   12aec:	bl	10e18 <strcmp@plt>
   12af0:	cmp	r0, #0
   12af4:	bne	12b04 <__assert_fail@plt+0x1ab8>
   12af8:	ldr	r0, [fp, #-8]
   12afc:	bl	10fec <clearerr_unlocked@plt>
   12b00:	b	12b24 <__assert_fail@plt+0x1ad8>
   12b04:	ldr	r0, [fp, #-8]
   12b08:	bl	12f6c <__assert_fail@plt+0x1f20>
   12b0c:	cmp	r0, #0
   12b10:	beq	12b20 <__assert_fail@plt+0x1ad4>
   12b14:	bl	10f80 <__errno_location@plt>
   12b18:	ldr	r0, [r0]
   12b1c:	str	r0, [sp, #16]
   12b20:	b	12b24 <__assert_fail@plt+0x1ad8>
   12b24:	ldr	r0, [sp, #16]
   12b28:	cmp	r0, #0
   12b2c:	beq	12b84 <__assert_fail@plt+0x1b38>
   12b30:	ldr	r1, [sp, #16]
   12b34:	movw	r0, #53656	; 0xd198
   12b38:	movt	r0, #2
   12b3c:	ldr	r2, [r0]
   12b40:	movw	r0, #0
   12b44:	movw	r3, #3
   12b48:	str	r1, [sp, #12]
   12b4c:	mov	r1, r3
   12b50:	bl	15664 <__assert_fail@plt+0x4618>
   12b54:	movw	r1, #0
   12b58:	str	r0, [sp, #8]
   12b5c:	mov	r0, r1
   12b60:	ldr	r1, [sp, #12]
   12b64:	movw	r2, #47637	; 0xba15
   12b68:	movt	r2, #1
   12b6c:	ldr	r3, [sp, #8]
   12b70:	bl	10efc <error@plt>
   12b74:	movw	r0, #53604	; 0xd164
   12b78:	movt	r0, #2
   12b7c:	movw	r1, #1
   12b80:	str	r1, [r0]
   12b84:	b	12b88 <__assert_fail@plt+0x1b3c>
   12b88:	b	12b8c <__assert_fail@plt+0x1b40>
   12b8c:	movw	r0, #53652	; 0xd194
   12b90:	movt	r0, #2
   12b94:	ldr	r1, [r0]
   12b98:	add	r2, r1, #4
   12b9c:	str	r2, [r0]
   12ba0:	ldr	r0, [r1]
   12ba4:	str	r0, [fp, #-12]
   12ba8:	movw	r1, #0
   12bac:	cmp	r0, r1
   12bb0:	beq	12c90 <__assert_fail@plt+0x1c44>
   12bb4:	ldr	r0, [fp, #-12]
   12bb8:	movw	r1, #48398	; 0xbd0e
   12bbc:	movt	r1, #1
   12bc0:	bl	10e18 <strcmp@plt>
   12bc4:	cmp	r0, #0
   12bc8:	bne	12bf0 <__assert_fail@plt+0x1ba4>
   12bcc:	movw	r0, #53648	; 0xd190
   12bd0:	movt	r0, #2
   12bd4:	movw	r1, #1
   12bd8:	strb	r1, [r0]
   12bdc:	movw	r0, #53584	; 0xd150
   12be0:	movt	r0, #2
   12be4:	ldr	r0, [r0]
   12be8:	str	r0, [fp, #-8]
   12bec:	b	12c04 <__assert_fail@plt+0x1bb8>
   12bf0:	ldr	r0, [fp, #-12]
   12bf4:	movw	r1, #47300	; 0xb8c4
   12bf8:	movt	r1, #1
   12bfc:	bl	10ff8 <fopen64@plt>
   12c00:	str	r0, [fp, #-8]
   12c04:	ldr	r0, [fp, #-8]
   12c08:	movw	r1, #0
   12c0c:	cmp	r0, r1
   12c10:	beq	12c3c <__assert_fail@plt+0x1bf0>
   12c14:	ldr	r0, [fp, #-12]
   12c18:	movw	r1, #53656	; 0xd198
   12c1c:	movt	r1, #2
   12c20:	str	r0, [r1]
   12c24:	ldr	r0, [fp, #-8]
   12c28:	movw	r1, #2
   12c2c:	bl	12f14 <__assert_fail@plt+0x1ec8>
   12c30:	ldr	r0, [fp, #-8]
   12c34:	str	r0, [fp, #-4]
   12c38:	b	12c98 <__assert_fail@plt+0x1c4c>
   12c3c:	bl	10f80 <__errno_location@plt>
   12c40:	ldr	r1, [r0]
   12c44:	ldr	r2, [fp, #-12]
   12c48:	movw	r0, #0
   12c4c:	movw	r3, #3
   12c50:	str	r1, [sp, #4]
   12c54:	mov	r1, r3
   12c58:	bl	15664 <__assert_fail@plt+0x4618>
   12c5c:	movw	r1, #0
   12c60:	str	r0, [sp]
   12c64:	mov	r0, r1
   12c68:	ldr	r1, [sp, #4]
   12c6c:	movw	r2, #47637	; 0xba15
   12c70:	movt	r2, #1
   12c74:	ldr	r3, [sp]
   12c78:	bl	10efc <error@plt>
   12c7c:	movw	r0, #53604	; 0xd164
   12c80:	movt	r0, #2
   12c84:	movw	r1, #1
   12c88:	str	r1, [r0]
   12c8c:	b	12b8c <__assert_fail@plt+0x1b40>
   12c90:	movw	r0, #0
   12c94:	str	r0, [fp, #-4]
   12c98:	ldr	r0, [fp, #-4]
   12c9c:	mov	sp, fp
   12ca0:	pop	{fp, pc}
   12ca4:	push	{fp, lr}
   12ca8:	mov	fp, sp
   12cac:	movw	r0, #53648	; 0xd190
   12cb0:	movt	r0, #2
   12cb4:	ldrb	r0, [r0]
   12cb8:	tst	r0, #1
   12cbc:	beq	12cf0 <__assert_fail@plt+0x1ca4>
   12cc0:	movw	r0, #53584	; 0xd150
   12cc4:	movt	r0, #2
   12cc8:	ldr	r0, [r0]
   12ccc:	bl	12f6c <__assert_fail@plt+0x1f20>
   12cd0:	cmp	r0, #0
   12cd4:	beq	12cf0 <__assert_fail@plt+0x1ca4>
   12cd8:	bl	10f80 <__errno_location@plt>
   12cdc:	ldr	r1, [r0]
   12ce0:	movw	r0, #1
   12ce4:	movw	r2, #48398	; 0xbd0e
   12ce8:	movt	r2, #1
   12cec:	bl	10efc <error@plt>
   12cf0:	pop	{fp, pc}
   12cf4:	push	{fp, lr}
   12cf8:	mov	fp, sp
   12cfc:	sub	sp, sp, #8
   12d00:	movw	r0, #47694	; 0xba4e
   12d04:	movt	r0, #1
   12d08:	bl	10f5c <gettext@plt>
   12d0c:	movw	r1, #53588	; 0xd154
   12d10:	movt	r1, #2
   12d14:	ldr	r1, [r1]
   12d18:	bl	10e00 <fputs_unlocked@plt>
   12d1c:	movw	r1, #47757	; 0xba8d
   12d20:	movt	r1, #1
   12d24:	str	r0, [sp, #4]
   12d28:	mov	r0, r1
   12d2c:	bl	10f5c <gettext@plt>
   12d30:	movw	r1, #53588	; 0xd154
   12d34:	movt	r1, #2
   12d38:	ldr	r1, [r1]
   12d3c:	bl	10e00 <fputs_unlocked@plt>
   12d40:	mov	sp, fp
   12d44:	pop	{fp, pc}
   12d48:	sub	sp, sp, #4
   12d4c:	str	r0, [sp]
   12d50:	ldr	r0, [sp]
   12d54:	movw	r1, #53660	; 0xd19c
   12d58:	movt	r1, #2
   12d5c:	str	r0, [r1]
   12d60:	add	sp, sp, #4
   12d64:	bx	lr
   12d68:	sub	sp, sp, #4
   12d6c:	and	r0, r0, #1
   12d70:	strb	r0, [sp, #3]
   12d74:	ldrb	r0, [sp, #3]
   12d78:	and	r0, r0, #1
   12d7c:	movw	r1, #53664	; 0xd1a0
   12d80:	movt	r1, #2
   12d84:	strb	r0, [r1]
   12d88:	add	sp, sp, #4
   12d8c:	bx	lr
   12d90:	push	{fp, lr}
   12d94:	mov	fp, sp
   12d98:	sub	sp, sp, #24
   12d9c:	movw	r0, #53588	; 0xd154
   12da0:	movt	r0, #2
   12da4:	ldr	r0, [r0]
   12da8:	bl	1929c <__assert_fail@plt+0x8250>
   12dac:	cmp	r0, #0
   12db0:	beq	12e80 <__assert_fail@plt+0x1e34>
   12db4:	movw	r0, #53664	; 0xd1a0
   12db8:	movt	r0, #2
   12dbc:	ldrb	r0, [r0]
   12dc0:	tst	r0, #1
   12dc4:	beq	12dd8 <__assert_fail@plt+0x1d8c>
   12dc8:	bl	10f80 <__errno_location@plt>
   12dcc:	ldr	r0, [r0]
   12dd0:	cmp	r0, #32
   12dd4:	beq	12e80 <__assert_fail@plt+0x1e34>
   12dd8:	movw	r0, #47290	; 0xb8ba
   12ddc:	movt	r0, #1
   12de0:	bl	10f5c <gettext@plt>
   12de4:	str	r0, [fp, #-4]
   12de8:	movw	r0, #53660	; 0xd19c
   12dec:	movt	r0, #2
   12df0:	ldr	r0, [r0]
   12df4:	movw	r1, #0
   12df8:	cmp	r0, r1
   12dfc:	beq	12e54 <__assert_fail@plt+0x1e08>
   12e00:	bl	10f80 <__errno_location@plt>
   12e04:	ldr	r1, [r0]
   12e08:	movw	r0, #53660	; 0xd19c
   12e0c:	movt	r0, #2
   12e10:	ldr	r0, [r0]
   12e14:	str	r1, [fp, #-8]
   12e18:	bl	1560c <__assert_fail@plt+0x45c0>
   12e1c:	ldr	r1, [fp, #-4]
   12e20:	movw	r2, #0
   12e24:	str	r0, [sp, #12]
   12e28:	mov	r0, r2
   12e2c:	ldr	r2, [fp, #-8]
   12e30:	str	r1, [sp, #8]
   12e34:	mov	r1, r2
   12e38:	movw	r2, #48325	; 0xbcc5
   12e3c:	movt	r2, #1
   12e40:	ldr	r3, [sp, #12]
   12e44:	ldr	ip, [sp, #8]
   12e48:	str	ip, [sp]
   12e4c:	bl	10efc <error@plt>
   12e50:	b	12e70 <__assert_fail@plt+0x1e24>
   12e54:	bl	10f80 <__errno_location@plt>
   12e58:	ldr	r1, [r0]
   12e5c:	ldr	r3, [fp, #-4]
   12e60:	movw	r0, #0
   12e64:	movw	r2, #47637	; 0xba15
   12e68:	movt	r2, #1
   12e6c:	bl	10efc <error@plt>
   12e70:	movw	r0, #53488	; 0xd0f0
   12e74:	movt	r0, #2
   12e78:	ldr	r0, [r0]
   12e7c:	bl	10e54 <_exit@plt>
   12e80:	movw	r0, #53576	; 0xd148
   12e84:	movt	r0, #2
   12e88:	ldr	r0, [r0]
   12e8c:	bl	1929c <__assert_fail@plt+0x8250>
   12e90:	cmp	r0, #0
   12e94:	beq	12ea8 <__assert_fail@plt+0x1e5c>
   12e98:	movw	r0, #53488	; 0xd0f0
   12e9c:	movt	r0, #2
   12ea0:	ldr	r0, [r0]
   12ea4:	bl	10e54 <_exit@plt>
   12ea8:	mov	sp, fp
   12eac:	pop	{fp, pc}
   12eb0:	push	{r4, r5, fp, lr}
   12eb4:	add	fp, sp, #8
   12eb8:	sub	sp, sp, #40	; 0x28
   12ebc:	ldr	r1, [fp, #12]
   12ec0:	ldr	ip, [fp, #8]
   12ec4:	ldr	lr, [fp, #16]
   12ec8:	str	r0, [fp, #-12]
   12ecc:	str	r3, [sp, #28]
   12ed0:	str	r2, [sp, #24]
   12ed4:	str	r1, [sp, #20]
   12ed8:	str	ip, [sp, #16]
   12edc:	ldr	r0, [fp, #-12]
   12ee0:	ldr	r2, [sp, #24]
   12ee4:	ldr	r3, [sp, #28]
   12ee8:	ldr	r1, [sp, #16]
   12eec:	ldr	ip, [sp, #20]
   12ef0:	ldr	r4, [fp, #16]
   12ef4:	mov	r5, sp
   12ef8:	str	r4, [r5, #8]
   12efc:	str	ip, [r5, #4]
   12f00:	str	r1, [r5]
   12f04:	str	lr, [sp, #12]
   12f08:	bl	10e24 <posix_fadvise64@plt>
   12f0c:	sub	sp, fp, #8
   12f10:	pop	{r4, r5, fp, pc}
   12f14:	push	{fp, lr}
   12f18:	mov	fp, sp
   12f1c:	sub	sp, sp, #24
   12f20:	str	r0, [fp, #-4]
   12f24:	str	r1, [fp, #-8]
   12f28:	ldr	r0, [fp, #-4]
   12f2c:	movw	r1, #0
   12f30:	cmp	r0, r1
   12f34:	beq	12f64 <__assert_fail@plt+0x1f18>
   12f38:	ldr	r0, [fp, #-4]
   12f3c:	bl	10fa4 <fileno@plt>
   12f40:	ldr	r1, [fp, #-8]
   12f44:	mov	r2, sp
   12f48:	str	r1, [r2, #8]
   12f4c:	mov	r1, #0
   12f50:	str	r1, [r2, #4]
   12f54:	str	r1, [r2]
   12f58:	mov	r2, r1
   12f5c:	mov	r3, r1
   12f60:	bl	12eb0 <__assert_fail@plt+0x1e64>
   12f64:	mov	sp, fp
   12f68:	pop	{fp, pc}
   12f6c:	push	{fp, lr}
   12f70:	mov	fp, sp
   12f74:	sub	sp, sp, #32
   12f78:	str	r0, [fp, #-8]
   12f7c:	movw	r0, #0
   12f80:	str	r0, [fp, #-12]
   12f84:	str	r0, [sp, #12]
   12f88:	ldr	r0, [fp, #-8]
   12f8c:	bl	10fa4 <fileno@plt>
   12f90:	str	r0, [sp, #16]
   12f94:	ldr	r0, [sp, #16]
   12f98:	cmp	r0, #0
   12f9c:	bge	12fb0 <__assert_fail@plt+0x1f64>
   12fa0:	ldr	r0, [fp, #-8]
   12fa4:	bl	10fb0 <fclose@plt>
   12fa8:	str	r0, [fp, #-4]
   12fac:	b	1304c <__assert_fail@plt+0x2000>
   12fb0:	ldr	r0, [fp, #-8]
   12fb4:	bl	10f20 <__freading@plt>
   12fb8:	cmp	r0, #0
   12fbc:	beq	12ff4 <__assert_fail@plt+0x1fa8>
   12fc0:	ldr	r0, [fp, #-8]
   12fc4:	bl	10fa4 <fileno@plt>
   12fc8:	mov	r1, sp
   12fcc:	mov	r2, #1
   12fd0:	str	r2, [r1]
   12fd4:	mov	r1, #0
   12fd8:	mov	r2, r1
   12fdc:	mov	r3, r1
   12fe0:	bl	10ec0 <lseek64@plt>
   12fe4:	and	r0, r0, r1
   12fe8:	cmn	r0, #1
   12fec:	beq	13010 <__assert_fail@plt+0x1fc4>
   12ff0:	b	12ff4 <__assert_fail@plt+0x1fa8>
   12ff4:	ldr	r0, [fp, #-8]
   12ff8:	bl	13058 <__assert_fail@plt+0x200c>
   12ffc:	cmp	r0, #0
   13000:	beq	13010 <__assert_fail@plt+0x1fc4>
   13004:	bl	10f80 <__errno_location@plt>
   13008:	ldr	r0, [r0]
   1300c:	str	r0, [fp, #-12]
   13010:	ldr	r0, [fp, #-8]
   13014:	bl	10fb0 <fclose@plt>
   13018:	str	r0, [sp, #12]
   1301c:	ldr	r0, [fp, #-12]
   13020:	cmp	r0, #0
   13024:	beq	13044 <__assert_fail@plt+0x1ff8>
   13028:	ldr	r0, [fp, #-12]
   1302c:	str	r0, [sp, #8]
   13030:	bl	10f80 <__errno_location@plt>
   13034:	ldr	r1, [sp, #8]
   13038:	str	r1, [r0]
   1303c:	mvn	r0, #0
   13040:	str	r0, [sp, #12]
   13044:	ldr	r0, [sp, #12]
   13048:	str	r0, [fp, #-4]
   1304c:	ldr	r0, [fp, #-4]
   13050:	mov	sp, fp
   13054:	pop	{fp, pc}
   13058:	push	{fp, lr}
   1305c:	mov	fp, sp
   13060:	sub	sp, sp, #8
   13064:	str	r0, [sp]
   13068:	ldr	r0, [sp]
   1306c:	movw	r1, #0
   13070:	cmp	r0, r1
   13074:	beq	13088 <__assert_fail@plt+0x203c>
   13078:	ldr	r0, [sp]
   1307c:	bl	10f20 <__freading@plt>
   13080:	cmp	r0, #0
   13084:	bne	13098 <__assert_fail@plt+0x204c>
   13088:	ldr	r0, [sp]
   1308c:	bl	10e3c <fflush@plt>
   13090:	str	r0, [sp, #4]
   13094:	b	130ac <__assert_fail@plt+0x2060>
   13098:	ldr	r0, [sp]
   1309c:	bl	130b8 <__assert_fail@plt+0x206c>
   130a0:	ldr	r0, [sp]
   130a4:	bl	10e3c <fflush@plt>
   130a8:	str	r0, [sp, #4]
   130ac:	ldr	r0, [sp, #4]
   130b0:	mov	sp, fp
   130b4:	pop	{fp, pc}
   130b8:	push	{fp, lr}
   130bc:	mov	fp, sp
   130c0:	sub	sp, sp, #8
   130c4:	str	r0, [sp, #4]
   130c8:	ldr	r0, [sp, #4]
   130cc:	ldr	r0, [r0]
   130d0:	and	r0, r0, #256	; 0x100
   130d4:	cmp	r0, #0
   130d8:	beq	130fc <__assert_fail@plt+0x20b0>
   130dc:	ldr	r0, [sp, #4]
   130e0:	mov	r1, sp
   130e4:	mov	r2, #1
   130e8:	str	r2, [r1]
   130ec:	mov	r1, #0
   130f0:	mov	r2, r1
   130f4:	mov	r3, r1
   130f8:	bl	13144 <__assert_fail@plt+0x20f8>
   130fc:	mov	sp, fp
   13100:	pop	{fp, pc}
   13104:	push	{fp, lr}
   13108:	mov	fp, sp
   1310c:	sub	sp, sp, #16
   13110:	str	r0, [fp, #-4]
   13114:	bl	10f80 <__errno_location@plt>
   13118:	ldr	r0, [r0]
   1311c:	str	r0, [sp, #8]
   13120:	ldr	r0, [fp, #-4]
   13124:	bl	10e48 <free@plt>
   13128:	ldr	r0, [sp, #8]
   1312c:	str	r0, [sp, #4]
   13130:	bl	10f80 <__errno_location@plt>
   13134:	ldr	r1, [sp, #4]
   13138:	str	r1, [r0]
   1313c:	mov	sp, fp
   13140:	pop	{fp, pc}
   13144:	push	{fp, lr}
   13148:	mov	fp, sp
   1314c:	sub	sp, sp, #32
   13150:	ldr	r1, [fp, #8]
   13154:	str	r0, [fp, #-8]
   13158:	str	r3, [sp, #20]
   1315c:	str	r2, [sp, #16]
   13160:	ldr	r0, [fp, #-8]
   13164:	ldr	r0, [r0, #8]
   13168:	ldr	r2, [fp, #-8]
   1316c:	ldr	r2, [r2, #4]
   13170:	cmp	r0, r2
   13174:	bne	13220 <__assert_fail@plt+0x21d4>
   13178:	ldr	r0, [fp, #-8]
   1317c:	ldr	r0, [r0, #20]
   13180:	ldr	r1, [fp, #-8]
   13184:	ldr	r1, [r1, #16]
   13188:	cmp	r0, r1
   1318c:	bne	13220 <__assert_fail@plt+0x21d4>
   13190:	ldr	r0, [fp, #-8]
   13194:	ldr	r0, [r0, #36]	; 0x24
   13198:	movw	r1, #0
   1319c:	cmp	r0, r1
   131a0:	bne	13220 <__assert_fail@plt+0x21d4>
   131a4:	ldr	r0, [fp, #-8]
   131a8:	bl	10fa4 <fileno@plt>
   131ac:	ldr	r2, [sp, #16]
   131b0:	ldr	r3, [sp, #20]
   131b4:	ldr	r1, [fp, #8]
   131b8:	mov	ip, sp
   131bc:	str	r1, [ip]
   131c0:	bl	10ec0 <lseek64@plt>
   131c4:	str	r1, [sp, #12]
   131c8:	str	r0, [sp, #8]
   131cc:	ldr	r0, [sp, #8]
   131d0:	ldr	r1, [sp, #12]
   131d4:	and	r0, r0, r1
   131d8:	cmn	r0, #1
   131dc:	bne	131f0 <__assert_fail@plt+0x21a4>
   131e0:	b	131e4 <__assert_fail@plt+0x2198>
   131e4:	mvn	r0, #0
   131e8:	str	r0, [fp, #-4]
   131ec:	b	13240 <__assert_fail@plt+0x21f4>
   131f0:	ldr	r0, [fp, #-8]
   131f4:	ldr	r1, [r0]
   131f8:	bic	r1, r1, #16
   131fc:	str	r1, [r0]
   13200:	ldr	r0, [sp, #8]
   13204:	ldr	r1, [sp, #12]
   13208:	ldr	r2, [fp, #-8]
   1320c:	str	r1, [r2, #84]	; 0x54
   13210:	str	r0, [r2, #80]	; 0x50
   13214:	movw	r0, #0
   13218:	str	r0, [fp, #-4]
   1321c:	b	13240 <__assert_fail@plt+0x21f4>
   13220:	ldr	r0, [fp, #-8]
   13224:	ldr	r2, [sp, #16]
   13228:	ldr	r3, [sp, #20]
   1322c:	ldr	r1, [fp, #8]
   13230:	mov	ip, sp
   13234:	str	r1, [ip]
   13238:	bl	10fbc <fseeko64@plt>
   1323c:	str	r0, [fp, #-4]
   13240:	ldr	r0, [fp, #-4]
   13244:	mov	sp, fp
   13248:	pop	{fp, pc}
   1324c:	push	{fp, lr}
   13250:	mov	fp, sp
   13254:	sub	sp, sp, #24
   13258:	str	r0, [fp, #-4]
   1325c:	ldr	r0, [fp, #-4]
   13260:	movw	r1, #0
   13264:	cmp	r0, r1
   13268:	bne	1328c <__assert_fail@plt+0x2240>
   1326c:	movw	r0, #53576	; 0xd148
   13270:	movt	r0, #2
   13274:	ldr	r1, [r0]
   13278:	movw	r0, #48332	; 0xbccc
   1327c:	movt	r0, #1
   13280:	bl	11010 <fputs@plt>
   13284:	str	r0, [sp, #8]
   13288:	bl	11028 <abort@plt>
   1328c:	ldr	r0, [fp, #-4]
   13290:	movw	r1, #47	; 0x2f
   13294:	bl	10fd4 <strrchr@plt>
   13298:	str	r0, [fp, #-8]
   1329c:	ldr	r0, [fp, #-8]
   132a0:	movw	r1, #0
   132a4:	cmp	r0, r1
   132a8:	beq	132bc <__assert_fail@plt+0x2270>
   132ac:	ldr	r0, [fp, #-8]
   132b0:	add	r0, r0, #1
   132b4:	str	r0, [sp, #4]
   132b8:	b	132c4 <__assert_fail@plt+0x2278>
   132bc:	ldr	r0, [fp, #-4]
   132c0:	str	r0, [sp, #4]
   132c4:	ldr	r0, [sp, #4]
   132c8:	str	r0, [sp, #12]
   132cc:	ldr	r0, [sp, #12]
   132d0:	ldr	r1, [fp, #-4]
   132d4:	sub	r0, r0, r1
   132d8:	cmp	r0, #7
   132dc:	blt	13348 <__assert_fail@plt+0x22fc>
   132e0:	ldr	r0, [sp, #12]
   132e4:	mvn	r1, #6
   132e8:	add	r0, r0, r1
   132ec:	movw	r1, #48388	; 0xbd04
   132f0:	movt	r1, #1
   132f4:	movw	r2, #7
   132f8:	bl	1101c <strncmp@plt>
   132fc:	cmp	r0, #0
   13300:	bne	13348 <__assert_fail@plt+0x22fc>
   13304:	ldr	r0, [sp, #12]
   13308:	str	r0, [fp, #-4]
   1330c:	ldr	r0, [sp, #12]
   13310:	movw	r1, #48396	; 0xbd0c
   13314:	movt	r1, #1
   13318:	movw	r2, #3
   1331c:	bl	1101c <strncmp@plt>
   13320:	cmp	r0, #0
   13324:	bne	13344 <__assert_fail@plt+0x22f8>
   13328:	ldr	r0, [sp, #12]
   1332c:	add	r0, r0, #3
   13330:	str	r0, [fp, #-4]
   13334:	ldr	r0, [fp, #-4]
   13338:	movw	r1, #53560	; 0xd138
   1333c:	movt	r1, #2
   13340:	str	r0, [r1]
   13344:	b	13348 <__assert_fail@plt+0x22fc>
   13348:	ldr	r0, [fp, #-4]
   1334c:	movw	r1, #53668	; 0xd1a4
   13350:	movt	r1, #2
   13354:	str	r0, [r1]
   13358:	ldr	r0, [fp, #-4]
   1335c:	movw	r1, #53564	; 0xd13c
   13360:	movt	r1, #2
   13364:	str	r0, [r1]
   13368:	mov	sp, fp
   1336c:	pop	{fp, pc}
   13370:	push	{fp, lr}
   13374:	mov	fp, sp
   13378:	sub	sp, sp, #24
   1337c:	str	r0, [fp, #-4]
   13380:	bl	10f80 <__errno_location@plt>
   13384:	ldr	r0, [r0]
   13388:	str	r0, [fp, #-8]
   1338c:	ldr	r0, [fp, #-4]
   13390:	movw	r1, #0
   13394:	cmp	r0, r1
   13398:	beq	133a8 <__assert_fail@plt+0x235c>
   1339c:	ldr	r0, [fp, #-4]
   133a0:	str	r0, [sp, #8]
   133a4:	b	133b8 <__assert_fail@plt+0x236c>
   133a8:	movw	r0, #53672	; 0xd1a8
   133ac:	movt	r0, #2
   133b0:	str	r0, [sp, #8]
   133b4:	b	133b8 <__assert_fail@plt+0x236c>
   133b8:	ldr	r0, [sp, #8]
   133bc:	movw	r1, #48	; 0x30
   133c0:	bl	18ee4 <__assert_fail@plt+0x7e98>
   133c4:	str	r0, [sp, #12]
   133c8:	ldr	r0, [fp, #-8]
   133cc:	str	r0, [sp, #4]
   133d0:	bl	10f80 <__errno_location@plt>
   133d4:	ldr	r1, [sp, #4]
   133d8:	str	r1, [r0]
   133dc:	ldr	r0, [sp, #12]
   133e0:	mov	sp, fp
   133e4:	pop	{fp, pc}
   133e8:	sub	sp, sp, #8
   133ec:	str	r0, [sp, #4]
   133f0:	ldr	r0, [sp, #4]
   133f4:	movw	r1, #0
   133f8:	cmp	r0, r1
   133fc:	beq	1340c <__assert_fail@plt+0x23c0>
   13400:	ldr	r0, [sp, #4]
   13404:	str	r0, [sp]
   13408:	b	1341c <__assert_fail@plt+0x23d0>
   1340c:	movw	r0, #53672	; 0xd1a8
   13410:	movt	r0, #2
   13414:	str	r0, [sp]
   13418:	b	1341c <__assert_fail@plt+0x23d0>
   1341c:	ldr	r0, [sp]
   13420:	ldr	r0, [r0]
   13424:	add	sp, sp, #8
   13428:	bx	lr
   1342c:	sub	sp, sp, #16
   13430:	str	r0, [sp, #12]
   13434:	str	r1, [sp, #8]
   13438:	ldr	r0, [sp, #8]
   1343c:	ldr	r1, [sp, #12]
   13440:	movw	r2, #0
   13444:	cmp	r1, r2
   13448:	str	r0, [sp, #4]
   1344c:	beq	1345c <__assert_fail@plt+0x2410>
   13450:	ldr	r0, [sp, #12]
   13454:	str	r0, [sp]
   13458:	b	1346c <__assert_fail@plt+0x2420>
   1345c:	movw	r0, #53672	; 0xd1a8
   13460:	movt	r0, #2
   13464:	str	r0, [sp]
   13468:	b	1346c <__assert_fail@plt+0x2420>
   1346c:	ldr	r0, [sp]
   13470:	ldr	r1, [sp, #4]
   13474:	str	r1, [r0]
   13478:	add	sp, sp, #16
   1347c:	bx	lr
   13480:	sub	sp, sp, #32
   13484:	str	r0, [sp, #28]
   13488:	strb	r1, [sp, #27]
   1348c:	str	r2, [sp, #20]
   13490:	ldrb	r0, [sp, #27]
   13494:	strb	r0, [sp, #19]
   13498:	ldr	r0, [sp, #28]
   1349c:	movw	r1, #0
   134a0:	cmp	r0, r1
   134a4:	beq	134b4 <__assert_fail@plt+0x2468>
   134a8:	ldr	r0, [sp, #28]
   134ac:	str	r0, [sp]
   134b0:	b	134c4 <__assert_fail@plt+0x2478>
   134b4:	movw	r0, #53672	; 0xd1a8
   134b8:	movt	r0, #2
   134bc:	str	r0, [sp]
   134c0:	b	134c4 <__assert_fail@plt+0x2478>
   134c4:	ldr	r0, [sp]
   134c8:	add	r0, r0, #8
   134cc:	ldrb	r1, [sp, #19]
   134d0:	lsr	r1, r1, #5
   134d4:	add	r0, r0, r1, lsl #2
   134d8:	str	r0, [sp, #12]
   134dc:	ldrb	r0, [sp, #19]
   134e0:	and	r0, r0, #31
   134e4:	str	r0, [sp, #8]
   134e8:	ldr	r0, [sp, #12]
   134ec:	ldr	r0, [r0]
   134f0:	ldr	r1, [sp, #8]
   134f4:	lsr	r0, r0, r1
   134f8:	and	r0, r0, #1
   134fc:	str	r0, [sp, #4]
   13500:	ldr	r0, [sp, #20]
   13504:	and	r0, r0, #1
   13508:	ldr	r1, [sp, #4]
   1350c:	eor	r0, r0, r1
   13510:	ldr	r1, [sp, #8]
   13514:	lsl	r0, r0, r1
   13518:	ldr	r1, [sp, #12]
   1351c:	ldr	r2, [r1]
   13520:	eor	r0, r2, r0
   13524:	str	r0, [r1]
   13528:	ldr	r0, [sp, #4]
   1352c:	add	sp, sp, #32
   13530:	bx	lr
   13534:	sub	sp, sp, #12
   13538:	str	r0, [sp, #8]
   1353c:	str	r1, [sp, #4]
   13540:	ldr	r0, [sp, #8]
   13544:	movw	r1, #0
   13548:	cmp	r0, r1
   1354c:	bne	1355c <__assert_fail@plt+0x2510>
   13550:	movw	r0, #53672	; 0xd1a8
   13554:	movt	r0, #2
   13558:	str	r0, [sp, #8]
   1355c:	ldr	r0, [sp, #8]
   13560:	ldr	r0, [r0, #4]
   13564:	str	r0, [sp]
   13568:	ldr	r0, [sp, #4]
   1356c:	ldr	r1, [sp, #8]
   13570:	str	r0, [r1, #4]
   13574:	ldr	r0, [sp]
   13578:	add	sp, sp, #12
   1357c:	bx	lr
   13580:	push	{fp, lr}
   13584:	mov	fp, sp
   13588:	sub	sp, sp, #16
   1358c:	str	r0, [fp, #-4]
   13590:	str	r1, [sp, #8]
   13594:	str	r2, [sp, #4]
   13598:	ldr	r0, [fp, #-4]
   1359c:	movw	r1, #0
   135a0:	cmp	r0, r1
   135a4:	bne	135b4 <__assert_fail@plt+0x2568>
   135a8:	movw	r0, #53672	; 0xd1a8
   135ac:	movt	r0, #2
   135b0:	str	r0, [fp, #-4]
   135b4:	ldr	r0, [fp, #-4]
   135b8:	movw	r1, #10
   135bc:	str	r1, [r0]
   135c0:	ldr	r0, [sp, #8]
   135c4:	movw	r1, #0
   135c8:	cmp	r0, r1
   135cc:	beq	135e0 <__assert_fail@plt+0x2594>
   135d0:	ldr	r0, [sp, #4]
   135d4:	movw	r1, #0
   135d8:	cmp	r0, r1
   135dc:	bne	135e4 <__assert_fail@plt+0x2598>
   135e0:	bl	11028 <abort@plt>
   135e4:	ldr	r0, [sp, #8]
   135e8:	ldr	r1, [fp, #-4]
   135ec:	str	r0, [r1, #40]	; 0x28
   135f0:	ldr	r0, [sp, #4]
   135f4:	ldr	r1, [fp, #-4]
   135f8:	str	r0, [r1, #44]	; 0x2c
   135fc:	mov	sp, fp
   13600:	pop	{fp, pc}
   13604:	push	{r4, r5, r6, sl, fp, lr}
   13608:	add	fp, sp, #16
   1360c:	sub	sp, sp, #56	; 0x38
   13610:	ldr	ip, [fp, #8]
   13614:	str	r0, [fp, #-20]	; 0xffffffec
   13618:	str	r1, [fp, #-24]	; 0xffffffe8
   1361c:	str	r2, [fp, #-28]	; 0xffffffe4
   13620:	str	r3, [fp, #-32]	; 0xffffffe0
   13624:	ldr	r0, [fp, #8]
   13628:	movw	r1, #0
   1362c:	cmp	r0, r1
   13630:	beq	13640 <__assert_fail@plt+0x25f4>
   13634:	ldr	r0, [fp, #8]
   13638:	str	r0, [sp, #24]
   1363c:	b	13650 <__assert_fail@plt+0x2604>
   13640:	movw	r0, #53672	; 0xd1a8
   13644:	movt	r0, #2
   13648:	str	r0, [sp, #24]
   1364c:	b	13650 <__assert_fail@plt+0x2604>
   13650:	ldr	r0, [sp, #24]
   13654:	str	r0, [sp, #36]	; 0x24
   13658:	bl	10f80 <__errno_location@plt>
   1365c:	ldr	r0, [r0]
   13660:	str	r0, [sp, #32]
   13664:	ldr	r0, [fp, #-20]	; 0xffffffec
   13668:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1366c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13670:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13674:	ldr	ip, [sp, #36]	; 0x24
   13678:	ldr	ip, [ip]
   1367c:	ldr	lr, [sp, #36]	; 0x24
   13680:	ldr	lr, [lr, #4]
   13684:	ldr	r4, [sp, #36]	; 0x24
   13688:	add	r4, r4, #8
   1368c:	ldr	r5, [sp, #36]	; 0x24
   13690:	ldr	r5, [r5, #40]	; 0x28
   13694:	ldr	r6, [sp, #36]	; 0x24
   13698:	ldr	r6, [r6, #44]	; 0x2c
   1369c:	str	ip, [sp]
   136a0:	str	lr, [sp, #4]
   136a4:	str	r4, [sp, #8]
   136a8:	str	r5, [sp, #12]
   136ac:	str	r6, [sp, #16]
   136b0:	bl	136d8 <__assert_fail@plt+0x268c>
   136b4:	str	r0, [sp, #28]
   136b8:	ldr	r0, [sp, #32]
   136bc:	str	r0, [sp, #20]
   136c0:	bl	10f80 <__errno_location@plt>
   136c4:	ldr	r1, [sp, #20]
   136c8:	str	r1, [r0]
   136cc:	ldr	r0, [sp, #28]
   136d0:	sub	sp, fp, #16
   136d4:	pop	{r4, r5, r6, sl, fp, pc}
   136d8:	push	{r4, r5, r6, sl, fp, lr}
   136dc:	add	fp, sp, #16
   136e0:	sub	sp, sp, #160	; 0xa0
   136e4:	ldr	ip, [fp, #24]
   136e8:	ldr	lr, [fp, #20]
   136ec:	ldr	r4, [fp, #16]
   136f0:	ldr	r5, [fp, #12]
   136f4:	ldr	r6, [fp, #8]
   136f8:	str	r0, [fp, #-24]	; 0xffffffe8
   136fc:	str	r1, [fp, #-28]	; 0xffffffe4
   13700:	str	r2, [fp, #-32]	; 0xffffffe0
   13704:	str	r3, [fp, #-36]	; 0xffffffdc
   13708:	movw	r0, #0
   1370c:	str	r0, [fp, #-44]	; 0xffffffd4
   13710:	str	r0, [fp, #-48]	; 0xffffffd0
   13714:	str	r0, [fp, #-52]	; 0xffffffcc
   13718:	str	r0, [fp, #-56]	; 0xffffffc8
   1371c:	movw	r0, #0
   13720:	strb	r0, [fp, #-57]	; 0xffffffc7
   13724:	str	ip, [sp, #72]	; 0x48
   13728:	str	lr, [sp, #68]	; 0x44
   1372c:	str	r4, [sp, #64]	; 0x40
   13730:	str	r5, [sp, #60]	; 0x3c
   13734:	str	r6, [sp, #56]	; 0x38
   13738:	bl	10ecc <__ctype_get_mb_cur_max@plt>
   1373c:	cmp	r0, #1
   13740:	movw	r0, #0
   13744:	moveq	r0, #1
   13748:	and	r0, r0, #1
   1374c:	strb	r0, [fp, #-58]	; 0xffffffc6
   13750:	ldr	r0, [fp, #12]
   13754:	and	r0, r0, #2
   13758:	cmp	r0, #0
   1375c:	movw	r0, #0
   13760:	movne	r0, #1
   13764:	and	r0, r0, #1
   13768:	strb	r0, [fp, #-59]	; 0xffffffc5
   1376c:	movw	r0, #0
   13770:	strb	r0, [fp, #-60]	; 0xffffffc4
   13774:	strb	r0, [fp, #-61]	; 0xffffffc3
   13778:	movw	r0, #1
   1377c:	strb	r0, [fp, #-62]	; 0xffffffc2
   13780:	ldr	r0, [fp, #8]
   13784:	cmp	r0, #10
   13788:	str	r0, [sp, #52]	; 0x34
   1378c:	bhi	139b4 <__assert_fail@plt+0x2968>
   13790:	add	r0, pc, #8
   13794:	ldr	r1, [sp, #52]	; 0x34
   13798:	ldr	r0, [r0, r1, lsl #2]
   1379c:	mov	pc, r0
   137a0:	andeq	r3, r1, r8, lsr #19
   137a4:	andeq	r3, r1, r4, lsr #18
   137a8:	andeq	r3, r1, r4, asr #18
   137ac:	andeq	r3, r1, ip, lsl r9
   137b0:	andeq	r3, r1, ip, lsr #18
   137b4:	ldrdeq	r3, [r1], -ip
   137b8:	andeq	r3, r1, ip, asr #15
   137bc:	andeq	r3, r1, r0, asr #16
   137c0:	andeq	r3, r1, r4, asr r8
   137c4:	andeq	r3, r1, r4, asr r8
   137c8:	andeq	r3, r1, r4, asr r8
   137cc:	movw	r0, #5
   137d0:	str	r0, [fp, #8]
   137d4:	movw	r0, #1
   137d8:	strb	r0, [fp, #-59]	; 0xffffffc5
   137dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   137e0:	tst	r0, #1
   137e4:	bne	13820 <__assert_fail@plt+0x27d4>
   137e8:	b	137ec <__assert_fail@plt+0x27a0>
   137ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137f4:	cmp	r0, r1
   137f8:	bcs	13810 <__assert_fail@plt+0x27c4>
   137fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13800:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13804:	add	r0, r0, r1
   13808:	movw	r1, #34	; 0x22
   1380c:	strb	r1, [r0]
   13810:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13814:	add	r0, r0, #1
   13818:	str	r0, [fp, #-44]	; 0xffffffd4
   1381c:	b	13820 <__assert_fail@plt+0x27d4>
   13820:	movw	r0, #1
   13824:	strb	r0, [fp, #-57]	; 0xffffffc7
   13828:	movw	r0, #48476	; 0xbd5c
   1382c:	movt	r0, #1
   13830:	str	r0, [fp, #-52]	; 0xffffffcc
   13834:	movw	r0, #1
   13838:	str	r0, [fp, #-56]	; 0xffffffc8
   1383c:	b	139b8 <__assert_fail@plt+0x296c>
   13840:	movw	r0, #1
   13844:	strb	r0, [fp, #-57]	; 0xffffffc7
   13848:	movw	r0, #0
   1384c:	strb	r0, [fp, #-59]	; 0xffffffc5
   13850:	b	139b8 <__assert_fail@plt+0x296c>
   13854:	ldr	r0, [fp, #8]
   13858:	cmp	r0, #10
   1385c:	beq	13888 <__assert_fail@plt+0x283c>
   13860:	ldr	r1, [fp, #8]
   13864:	movw	r0, #48478	; 0xbd5e
   13868:	movt	r0, #1
   1386c:	bl	158cc <__assert_fail@plt+0x4880>
   13870:	str	r0, [fp, #20]
   13874:	ldr	r1, [fp, #8]
   13878:	movw	r0, #48308	; 0xbcb4
   1387c:	movt	r0, #1
   13880:	bl	158cc <__assert_fail@plt+0x4880>
   13884:	str	r0, [fp, #24]
   13888:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1388c:	tst	r0, #1
   13890:	bne	138fc <__assert_fail@plt+0x28b0>
   13894:	ldr	r0, [fp, #20]
   13898:	str	r0, [fp, #-52]	; 0xffffffcc
   1389c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   138a0:	ldrsb	r0, [r0]
   138a4:	cmp	r0, #0
   138a8:	beq	138f8 <__assert_fail@plt+0x28ac>
   138ac:	b	138b0 <__assert_fail@plt+0x2864>
   138b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138b8:	cmp	r0, r1
   138bc:	bcs	138d8 <__assert_fail@plt+0x288c>
   138c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   138c4:	ldrb	r0, [r0]
   138c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   138cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   138d0:	add	r1, r1, r2
   138d4:	strb	r0, [r1]
   138d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   138dc:	add	r0, r0, #1
   138e0:	str	r0, [fp, #-44]	; 0xffffffd4
   138e4:	b	138e8 <__assert_fail@plt+0x289c>
   138e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   138ec:	add	r0, r0, #1
   138f0:	str	r0, [fp, #-52]	; 0xffffffcc
   138f4:	b	1389c <__assert_fail@plt+0x2850>
   138f8:	b	138fc <__assert_fail@plt+0x28b0>
   138fc:	movw	r0, #1
   13900:	strb	r0, [fp, #-57]	; 0xffffffc7
   13904:	ldr	r0, [fp, #24]
   13908:	str	r0, [fp, #-52]	; 0xffffffcc
   1390c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13910:	bl	10f68 <strlen@plt>
   13914:	str	r0, [fp, #-56]	; 0xffffffc8
   13918:	b	139b8 <__assert_fail@plt+0x296c>
   1391c:	movw	r0, #1
   13920:	strb	r0, [fp, #-57]	; 0xffffffc7
   13924:	movw	r0, #1
   13928:	strb	r0, [fp, #-59]	; 0xffffffc5
   1392c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13930:	tst	r0, #1
   13934:	bne	13940 <__assert_fail@plt+0x28f4>
   13938:	movw	r0, #1
   1393c:	strb	r0, [fp, #-57]	; 0xffffffc7
   13940:	b	13944 <__assert_fail@plt+0x28f8>
   13944:	movw	r0, #2
   13948:	str	r0, [fp, #8]
   1394c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13950:	tst	r0, #1
   13954:	bne	13990 <__assert_fail@plt+0x2944>
   13958:	b	1395c <__assert_fail@plt+0x2910>
   1395c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13960:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13964:	cmp	r0, r1
   13968:	bcs	13980 <__assert_fail@plt+0x2934>
   1396c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13970:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13974:	add	r0, r0, r1
   13978:	movw	r1, #39	; 0x27
   1397c:	strb	r1, [r0]
   13980:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13984:	add	r0, r0, #1
   13988:	str	r0, [fp, #-44]	; 0xffffffd4
   1398c:	b	13990 <__assert_fail@plt+0x2944>
   13990:	movw	r0, #48308	; 0xbcb4
   13994:	movt	r0, #1
   13998:	str	r0, [fp, #-52]	; 0xffffffcc
   1399c:	movw	r0, #1
   139a0:	str	r0, [fp, #-56]	; 0xffffffc8
   139a4:	b	139b8 <__assert_fail@plt+0x296c>
   139a8:	movw	r0, #0
   139ac:	strb	r0, [fp, #-59]	; 0xffffffc5
   139b0:	b	139b8 <__assert_fail@plt+0x296c>
   139b4:	bl	11028 <abort@plt>
   139b8:	movw	r0, #0
   139bc:	str	r0, [fp, #-40]	; 0xffffffd8
   139c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   139c4:	cmn	r0, #1
   139c8:	bne	139f4 <__assert_fail@plt+0x29a8>
   139cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139d4:	add	r0, r0, r1
   139d8:	ldrb	r0, [r0]
   139dc:	cmp	r0, #0
   139e0:	movw	r0, #0
   139e4:	moveq	r0, #1
   139e8:	and	r0, r0, #1
   139ec:	str	r0, [sp, #48]	; 0x30
   139f0:	b	13a10 <__assert_fail@plt+0x29c4>
   139f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   139f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   139fc:	cmp	r0, r1
   13a00:	movw	r0, #0
   13a04:	moveq	r0, #1
   13a08:	and	r0, r0, #1
   13a0c:	str	r0, [sp, #48]	; 0x30
   13a10:	ldr	r0, [sp, #48]	; 0x30
   13a14:	cmp	r0, #0
   13a18:	movw	r0, #0
   13a1c:	movne	r0, #1
   13a20:	mvn	r1, #0
   13a24:	eor	r0, r0, r1
   13a28:	tst	r0, #1
   13a2c:	beq	14c18 <__assert_fail@plt+0x3bcc>
   13a30:	movw	r0, #0
   13a34:	strb	r0, [fp, #-65]	; 0xffffffbf
   13a38:	strb	r0, [fp, #-66]	; 0xffffffbe
   13a3c:	strb	r0, [fp, #-67]	; 0xffffffbd
   13a40:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13a44:	tst	r0, #1
   13a48:	beq	13af4 <__assert_fail@plt+0x2aa8>
   13a4c:	ldr	r0, [fp, #8]
   13a50:	cmp	r0, #2
   13a54:	beq	13af4 <__assert_fail@plt+0x2aa8>
   13a58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13a5c:	cmp	r0, #0
   13a60:	beq	13af4 <__assert_fail@plt+0x2aa8>
   13a64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13a68:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13a6c:	add	r0, r0, r1
   13a70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13a74:	cmn	r1, #1
   13a78:	str	r0, [sp, #44]	; 0x2c
   13a7c:	bne	13aa4 <__assert_fail@plt+0x2a58>
   13a80:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13a84:	movw	r1, #1
   13a88:	cmp	r1, r0
   13a8c:	bcs	13aa4 <__assert_fail@plt+0x2a58>
   13a90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a94:	bl	10f68 <strlen@plt>
   13a98:	str	r0, [fp, #-36]	; 0xffffffdc
   13a9c:	str	r0, [sp, #40]	; 0x28
   13aa0:	b	13aac <__assert_fail@plt+0x2a60>
   13aa4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13aa8:	str	r0, [sp, #40]	; 0x28
   13aac:	ldr	r0, [sp, #40]	; 0x28
   13ab0:	ldr	r1, [sp, #44]	; 0x2c
   13ab4:	cmp	r1, r0
   13ab8:	bhi	13af4 <__assert_fail@plt+0x2aa8>
   13abc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ac0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ac4:	add	r0, r0, r1
   13ac8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13acc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13ad0:	bl	10e84 <memcmp@plt>
   13ad4:	cmp	r0, #0
   13ad8:	bne	13af4 <__assert_fail@plt+0x2aa8>
   13adc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13ae0:	tst	r0, #1
   13ae4:	beq	13aec <__assert_fail@plt+0x2aa0>
   13ae8:	b	14d98 <__assert_fail@plt+0x3d4c>
   13aec:	movw	r0, #1
   13af0:	strb	r0, [fp, #-65]	; 0xffffffbf
   13af4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13af8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13afc:	ldrb	r0, [r0, r1]
   13b00:	strb	r0, [fp, #-63]	; 0xffffffc1
   13b04:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13b08:	mov	r1, r0
   13b0c:	cmp	r0, #126	; 0x7e
   13b10:	str	r1, [sp, #36]	; 0x24
   13b14:	bhi	14384 <__assert_fail@plt+0x3338>
   13b18:	add	r0, pc, #8
   13b1c:	ldr	r1, [sp, #36]	; 0x24
   13b20:	ldr	r0, [r0, r1, lsl #2]
   13b24:	mov	pc, r0
   13b28:	andeq	r3, r1, r4, lsr #26
   13b2c:	andeq	r4, r1, r4, lsl #7
   13b30:	andeq	r4, r1, r4, lsl #7
   13b34:	andeq	r4, r1, r4, lsl #7
   13b38:	andeq	r4, r1, r4, lsl #7
   13b3c:	andeq	r4, r1, r4, lsl #7
   13b40:	andeq	r4, r1, r4, lsl #7
   13b44:	andeq	r4, r1, ip, lsr #2
   13b48:	andeq	r4, r1, r8, lsr r1
   13b4c:	andeq	r4, r1, r8, ror #2
   13b50:	andeq	r4, r1, r0, asr r1
   13b54:	andeq	r4, r1, r4, ror r1
   13b58:	andeq	r4, r1, r4, asr #2
   13b5c:	andeq	r4, r1, ip, asr r1
   13b60:	andeq	r4, r1, r4, lsl #7
   13b64:	andeq	r4, r1, r4, lsl #7
   13b68:	andeq	r4, r1, r4, lsl #7
   13b6c:	andeq	r4, r1, r4, lsl #7
   13b70:	andeq	r4, r1, r4, lsl #7
   13b74:	andeq	r4, r1, r4, lsl #7
   13b78:	andeq	r4, r1, r4, lsl #7
   13b7c:	andeq	r4, r1, r4, lsl #7
   13b80:	andeq	r4, r1, r4, lsl #7
   13b84:	andeq	r4, r1, r4, lsl #7
   13b88:	andeq	r4, r1, r4, lsl #7
   13b8c:	andeq	r4, r1, r4, lsl #7
   13b90:	andeq	r4, r1, r4, lsl #7
   13b94:	andeq	r4, r1, r4, lsl #7
   13b98:	andeq	r4, r1, r4, lsl #7
   13b9c:	andeq	r4, r1, r4, lsl #7
   13ba0:	andeq	r4, r1, r4, lsl #7
   13ba4:	andeq	r4, r1, r4, lsl #7
   13ba8:	andeq	r4, r1, r8, asr r2
   13bac:	andeq	r4, r1, r0, ror #4
   13bb0:	andeq	r4, r1, r0, ror #4
   13bb4:	andeq	r4, r1, r4, asr #4
   13bb8:	andeq	r4, r1, r0, ror #4
   13bbc:	andeq	r4, r1, r8, ror r3
   13bc0:	andeq	r4, r1, r0, ror #4
   13bc4:	andeq	r4, r1, r0, lsl #5
   13bc8:	andeq	r4, r1, r0, ror #4
   13bcc:	andeq	r4, r1, r0, ror #4
   13bd0:	andeq	r4, r1, r0, ror #4
   13bd4:	andeq	r4, r1, r8, ror r3
   13bd8:	andeq	r4, r1, r8, ror r3
   13bdc:	andeq	r4, r1, r8, ror r3
   13be0:	andeq	r4, r1, r8, ror r3
   13be4:	andeq	r4, r1, r8, ror r3
   13be8:	andeq	r4, r1, r8, ror r3
   13bec:	andeq	r4, r1, r8, ror r3
   13bf0:	andeq	r4, r1, r8, ror r3
   13bf4:	andeq	r4, r1, r8, ror r3
   13bf8:	andeq	r4, r1, r8, ror r3
   13bfc:	andeq	r4, r1, r8, ror r3
   13c00:	andeq	r4, r1, r8, ror r3
   13c04:	andeq	r4, r1, r8, ror r3
   13c08:	andeq	r4, r1, r8, ror r3
   13c0c:	andeq	r4, r1, r8, ror r3
   13c10:	andeq	r4, r1, r8, ror r3
   13c14:	andeq	r4, r1, r0, ror #4
   13c18:	andeq	r4, r1, r0, ror #4
   13c1c:	andeq	r4, r1, r0, ror #4
   13c20:	andeq	r4, r1, r0, ror #4
   13c24:	andeq	r3, r1, r0, lsr pc
   13c28:	andeq	r4, r1, r4, lsl #7
   13c2c:	andeq	r4, r1, r8, ror r3
   13c30:	andeq	r4, r1, r8, ror r3
   13c34:	andeq	r4, r1, r8, ror r3
   13c38:	andeq	r4, r1, r8, ror r3
   13c3c:	andeq	r4, r1, r8, ror r3
   13c40:	andeq	r4, r1, r8, ror r3
   13c44:	andeq	r4, r1, r8, ror r3
   13c48:	andeq	r4, r1, r8, ror r3
   13c4c:	andeq	r4, r1, r8, ror r3
   13c50:	andeq	r4, r1, r8, ror r3
   13c54:	andeq	r4, r1, r8, ror r3
   13c58:	andeq	r4, r1, r8, ror r3
   13c5c:	andeq	r4, r1, r8, ror r3
   13c60:	andeq	r4, r1, r8, ror r3
   13c64:	andeq	r4, r1, r8, ror r3
   13c68:	andeq	r4, r1, r8, ror r3
   13c6c:	andeq	r4, r1, r8, ror r3
   13c70:	andeq	r4, r1, r8, ror r3
   13c74:	andeq	r4, r1, r8, ror r3
   13c78:	andeq	r4, r1, r8, ror r3
   13c7c:	andeq	r4, r1, r8, ror r3
   13c80:	andeq	r4, r1, r8, ror r3
   13c84:	andeq	r4, r1, r8, ror r3
   13c88:	andeq	r4, r1, r8, ror r3
   13c8c:	andeq	r4, r1, r8, ror r3
   13c90:	andeq	r4, r1, r8, ror r3
   13c94:	andeq	r4, r1, r0, ror #4
   13c98:	andeq	r4, r1, r0, lsl #3
   13c9c:	andeq	r4, r1, r8, ror r3
   13ca0:	andeq	r4, r1, r0, ror #4
   13ca4:	andeq	r4, r1, r8, ror r3
   13ca8:	andeq	r4, r1, r0, ror #4
   13cac:	andeq	r4, r1, r8, ror r3
   13cb0:	andeq	r4, r1, r8, ror r3
   13cb4:	andeq	r4, r1, r8, ror r3
   13cb8:	andeq	r4, r1, r8, ror r3
   13cbc:	andeq	r4, r1, r8, ror r3
   13cc0:	andeq	r4, r1, r8, ror r3
   13cc4:	andeq	r4, r1, r8, ror r3
   13cc8:	andeq	r4, r1, r8, ror r3
   13ccc:	andeq	r4, r1, r8, ror r3
   13cd0:	andeq	r4, r1, r8, ror r3
   13cd4:	andeq	r4, r1, r8, ror r3
   13cd8:	andeq	r4, r1, r8, ror r3
   13cdc:	andeq	r4, r1, r8, ror r3
   13ce0:	andeq	r4, r1, r8, ror r3
   13ce4:	andeq	r4, r1, r8, ror r3
   13ce8:	andeq	r4, r1, r8, ror r3
   13cec:	andeq	r4, r1, r8, ror r3
   13cf0:	andeq	r4, r1, r8, ror r3
   13cf4:	andeq	r4, r1, r8, ror r3
   13cf8:	andeq	r4, r1, r8, ror r3
   13cfc:	andeq	r4, r1, r8, ror r3
   13d00:	andeq	r4, r1, r8, ror r3
   13d04:	andeq	r4, r1, r8, ror r3
   13d08:	andeq	r4, r1, r8, ror r3
   13d0c:	andeq	r4, r1, r8, ror r3
   13d10:	andeq	r4, r1, r8, ror r3
   13d14:	andeq	r4, r1, r0, lsl r2
   13d18:	andeq	r4, r1, r0, ror #4
   13d1c:	andeq	r4, r1, r0, lsl r2
   13d20:	andeq	r4, r1, r4, asr #4
   13d24:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13d28:	tst	r0, #1
   13d2c:	beq	13f14 <__assert_fail@plt+0x2ec8>
   13d30:	b	13d34 <__assert_fail@plt+0x2ce8>
   13d34:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13d38:	tst	r0, #1
   13d3c:	beq	13d44 <__assert_fail@plt+0x2cf8>
   13d40:	b	14d98 <__assert_fail@plt+0x3d4c>
   13d44:	movw	r0, #1
   13d48:	strb	r0, [fp, #-66]	; 0xffffffbe
   13d4c:	ldr	r0, [fp, #8]
   13d50:	cmp	r0, #2
   13d54:	bne	13e08 <__assert_fail@plt+0x2dbc>
   13d58:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13d5c:	tst	r0, #1
   13d60:	bne	13e08 <__assert_fail@plt+0x2dbc>
   13d64:	b	13d68 <__assert_fail@plt+0x2d1c>
   13d68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d70:	cmp	r0, r1
   13d74:	bcs	13d8c <__assert_fail@plt+0x2d40>
   13d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d80:	add	r0, r0, r1
   13d84:	movw	r1, #39	; 0x27
   13d88:	strb	r1, [r0]
   13d8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d90:	add	r0, r0, #1
   13d94:	str	r0, [fp, #-44]	; 0xffffffd4
   13d98:	b	13d9c <__assert_fail@plt+0x2d50>
   13d9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13da0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13da4:	cmp	r0, r1
   13da8:	bcs	13dc0 <__assert_fail@plt+0x2d74>
   13dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13db0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13db4:	add	r0, r0, r1
   13db8:	movw	r1, #36	; 0x24
   13dbc:	strb	r1, [r0]
   13dc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13dc4:	add	r0, r0, #1
   13dc8:	str	r0, [fp, #-44]	; 0xffffffd4
   13dcc:	b	13dd0 <__assert_fail@plt+0x2d84>
   13dd0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13dd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13dd8:	cmp	r0, r1
   13ddc:	bcs	13df4 <__assert_fail@plt+0x2da8>
   13de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13de4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13de8:	add	r0, r0, r1
   13dec:	movw	r1, #39	; 0x27
   13df0:	strb	r1, [r0]
   13df4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13df8:	add	r0, r0, #1
   13dfc:	str	r0, [fp, #-44]	; 0xffffffd4
   13e00:	movw	r0, #1
   13e04:	strb	r0, [fp, #-60]	; 0xffffffc4
   13e08:	b	13e0c <__assert_fail@plt+0x2dc0>
   13e0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13e14:	cmp	r0, r1
   13e18:	bcs	13e30 <__assert_fail@plt+0x2de4>
   13e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13e24:	add	r0, r0, r1
   13e28:	movw	r1, #92	; 0x5c
   13e2c:	strb	r1, [r0]
   13e30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e34:	add	r0, r0, #1
   13e38:	str	r0, [fp, #-44]	; 0xffffffd4
   13e3c:	b	13e40 <__assert_fail@plt+0x2df4>
   13e40:	ldr	r0, [fp, #8]
   13e44:	cmp	r0, #2
   13e48:	beq	13f08 <__assert_fail@plt+0x2ebc>
   13e4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e50:	add	r0, r0, #1
   13e54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13e58:	cmp	r0, r1
   13e5c:	bcs	13f08 <__assert_fail@plt+0x2ebc>
   13e60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e68:	add	r1, r1, #1
   13e6c:	add	r0, r0, r1
   13e70:	ldrb	r0, [r0]
   13e74:	movw	r1, #48	; 0x30
   13e78:	cmp	r1, r0
   13e7c:	bgt	13f08 <__assert_fail@plt+0x2ebc>
   13e80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e88:	add	r1, r1, #1
   13e8c:	add	r0, r0, r1
   13e90:	ldrb	r0, [r0]
   13e94:	cmp	r0, #57	; 0x39
   13e98:	bgt	13f08 <__assert_fail@plt+0x2ebc>
   13e9c:	b	13ea0 <__assert_fail@plt+0x2e54>
   13ea0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ea4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ea8:	cmp	r0, r1
   13eac:	bcs	13ec4 <__assert_fail@plt+0x2e78>
   13eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13eb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13eb8:	add	r0, r0, r1
   13ebc:	movw	r1, #48	; 0x30
   13ec0:	strb	r1, [r0]
   13ec4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ec8:	add	r0, r0, #1
   13ecc:	str	r0, [fp, #-44]	; 0xffffffd4
   13ed0:	b	13ed4 <__assert_fail@plt+0x2e88>
   13ed4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ed8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13edc:	cmp	r0, r1
   13ee0:	bcs	13ef8 <__assert_fail@plt+0x2eac>
   13ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ee8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13eec:	add	r0, r0, r1
   13ef0:	movw	r1, #48	; 0x30
   13ef4:	strb	r1, [r0]
   13ef8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13efc:	add	r0, r0, #1
   13f00:	str	r0, [fp, #-44]	; 0xffffffd4
   13f04:	b	13f08 <__assert_fail@plt+0x2ebc>
   13f08:	movw	r0, #48	; 0x30
   13f0c:	strb	r0, [fp, #-63]	; 0xffffffc1
   13f10:	b	13f2c <__assert_fail@plt+0x2ee0>
   13f14:	ldr	r0, [fp, #12]
   13f18:	and	r0, r0, #1
   13f1c:	cmp	r0, #0
   13f20:	beq	13f28 <__assert_fail@plt+0x2edc>
   13f24:	b	14c08 <__assert_fail@plt+0x3bbc>
   13f28:	b	13f2c <__assert_fail@plt+0x2ee0>
   13f2c:	b	149a4 <__assert_fail@plt+0x3958>
   13f30:	ldr	r0, [fp, #8]
   13f34:	cmp	r0, #2
   13f38:	str	r0, [sp, #32]
   13f3c:	beq	13f54 <__assert_fail@plt+0x2f08>
   13f40:	b	13f44 <__assert_fail@plt+0x2ef8>
   13f44:	ldr	r0, [sp, #32]
   13f48:	cmp	r0, #5
   13f4c:	beq	13f68 <__assert_fail@plt+0x2f1c>
   13f50:	b	14124 <__assert_fail@plt+0x30d8>
   13f54:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13f58:	tst	r0, #1
   13f5c:	beq	13f64 <__assert_fail@plt+0x2f18>
   13f60:	b	14d98 <__assert_fail@plt+0x3d4c>
   13f64:	b	14128 <__assert_fail@plt+0x30dc>
   13f68:	ldr	r0, [fp, #12]
   13f6c:	and	r0, r0, #4
   13f70:	cmp	r0, #0
   13f74:	beq	14120 <__assert_fail@plt+0x30d4>
   13f78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f7c:	add	r0, r0, #2
   13f80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13f84:	cmp	r0, r1
   13f88:	bcs	14120 <__assert_fail@plt+0x30d4>
   13f8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f94:	add	r1, r1, #1
   13f98:	add	r0, r0, r1
   13f9c:	ldrb	r0, [r0]
   13fa0:	cmp	r0, #63	; 0x3f
   13fa4:	bne	14120 <__assert_fail@plt+0x30d4>
   13fa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fac:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13fb0:	add	r0, r1, r0
   13fb4:	ldrb	r0, [r0, #2]
   13fb8:	mov	r1, r0
   13fbc:	cmp	r0, #33	; 0x21
   13fc0:	str	r1, [sp, #28]
   13fc4:	beq	14014 <__assert_fail@plt+0x2fc8>
   13fc8:	b	13fcc <__assert_fail@plt+0x2f80>
   13fcc:	ldr	r0, [sp, #28]
   13fd0:	sub	r1, r0, #39	; 0x27
   13fd4:	cmp	r1, #3
   13fd8:	bcc	14014 <__assert_fail@plt+0x2fc8>
   13fdc:	b	13fe0 <__assert_fail@plt+0x2f94>
   13fe0:	ldr	r0, [sp, #28]
   13fe4:	cmp	r0, #45	; 0x2d
   13fe8:	beq	14014 <__assert_fail@plt+0x2fc8>
   13fec:	b	13ff0 <__assert_fail@plt+0x2fa4>
   13ff0:	ldr	r0, [sp, #28]
   13ff4:	cmp	r0, #47	; 0x2f
   13ff8:	beq	14014 <__assert_fail@plt+0x2fc8>
   13ffc:	b	14000 <__assert_fail@plt+0x2fb4>
   14000:	ldr	r0, [sp, #28]
   14004:	sub	r1, r0, #60	; 0x3c
   14008:	cmp	r1, #2
   1400c:	bhi	14118 <__assert_fail@plt+0x30cc>
   14010:	b	14014 <__assert_fail@plt+0x2fc8>
   14014:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14018:	tst	r0, #1
   1401c:	beq	14024 <__assert_fail@plt+0x2fd8>
   14020:	b	14d98 <__assert_fail@plt+0x3d4c>
   14024:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14028:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1402c:	add	r1, r1, #2
   14030:	add	r0, r0, r1
   14034:	ldrb	r0, [r0]
   14038:	strb	r0, [fp, #-63]	; 0xffffffc1
   1403c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14040:	add	r0, r0, #2
   14044:	str	r0, [fp, #-40]	; 0xffffffd8
   14048:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1404c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14050:	cmp	r0, r1
   14054:	bcs	1406c <__assert_fail@plt+0x3020>
   14058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1405c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14060:	add	r0, r0, r1
   14064:	movw	r1, #63	; 0x3f
   14068:	strb	r1, [r0]
   1406c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14070:	add	r0, r0, #1
   14074:	str	r0, [fp, #-44]	; 0xffffffd4
   14078:	b	1407c <__assert_fail@plt+0x3030>
   1407c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14080:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14084:	cmp	r0, r1
   14088:	bcs	140a0 <__assert_fail@plt+0x3054>
   1408c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14090:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14094:	add	r0, r0, r1
   14098:	movw	r1, #34	; 0x22
   1409c:	strb	r1, [r0]
   140a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140a4:	add	r0, r0, #1
   140a8:	str	r0, [fp, #-44]	; 0xffffffd4
   140ac:	b	140b0 <__assert_fail@plt+0x3064>
   140b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   140b8:	cmp	r0, r1
   140bc:	bcs	140d4 <__assert_fail@plt+0x3088>
   140c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   140c8:	add	r0, r0, r1
   140cc:	movw	r1, #34	; 0x22
   140d0:	strb	r1, [r0]
   140d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140d8:	add	r0, r0, #1
   140dc:	str	r0, [fp, #-44]	; 0xffffffd4
   140e0:	b	140e4 <__assert_fail@plt+0x3098>
   140e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   140e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   140ec:	cmp	r0, r1
   140f0:	bcs	14108 <__assert_fail@plt+0x30bc>
   140f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   140fc:	add	r0, r0, r1
   14100:	movw	r1, #63	; 0x3f
   14104:	strb	r1, [r0]
   14108:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1410c:	add	r0, r0, #1
   14110:	str	r0, [fp, #-44]	; 0xffffffd4
   14114:	b	1411c <__assert_fail@plt+0x30d0>
   14118:	b	1411c <__assert_fail@plt+0x30d0>
   1411c:	b	14120 <__assert_fail@plt+0x30d4>
   14120:	b	14128 <__assert_fail@plt+0x30dc>
   14124:	b	14128 <__assert_fail@plt+0x30dc>
   14128:	b	149a4 <__assert_fail@plt+0x3958>
   1412c:	movw	r0, #97	; 0x61
   14130:	strb	r0, [fp, #-64]	; 0xffffffc0
   14134:	b	141f4 <__assert_fail@plt+0x31a8>
   14138:	movw	r0, #98	; 0x62
   1413c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14140:	b	141f4 <__assert_fail@plt+0x31a8>
   14144:	movw	r0, #102	; 0x66
   14148:	strb	r0, [fp, #-64]	; 0xffffffc0
   1414c:	b	141f4 <__assert_fail@plt+0x31a8>
   14150:	movw	r0, #110	; 0x6e
   14154:	strb	r0, [fp, #-64]	; 0xffffffc0
   14158:	b	141d4 <__assert_fail@plt+0x3188>
   1415c:	movw	r0, #114	; 0x72
   14160:	strb	r0, [fp, #-64]	; 0xffffffc0
   14164:	b	141d4 <__assert_fail@plt+0x3188>
   14168:	movw	r0, #116	; 0x74
   1416c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14170:	b	141d4 <__assert_fail@plt+0x3188>
   14174:	movw	r0, #118	; 0x76
   14178:	strb	r0, [fp, #-64]	; 0xffffffc0
   1417c:	b	141f4 <__assert_fail@plt+0x31a8>
   14180:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14184:	strb	r0, [fp, #-64]	; 0xffffffc0
   14188:	ldr	r0, [fp, #8]
   1418c:	cmp	r0, #2
   14190:	bne	141a8 <__assert_fail@plt+0x315c>
   14194:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14198:	tst	r0, #1
   1419c:	beq	141a4 <__assert_fail@plt+0x3158>
   141a0:	b	14d98 <__assert_fail@plt+0x3d4c>
   141a4:	b	14b2c <__assert_fail@plt+0x3ae0>
   141a8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   141ac:	tst	r0, #1
   141b0:	beq	141d0 <__assert_fail@plt+0x3184>
   141b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   141b8:	tst	r0, #1
   141bc:	beq	141d0 <__assert_fail@plt+0x3184>
   141c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   141c4:	cmp	r0, #0
   141c8:	beq	141d0 <__assert_fail@plt+0x3184>
   141cc:	b	14b2c <__assert_fail@plt+0x3ae0>
   141d0:	b	141d4 <__assert_fail@plt+0x3188>
   141d4:	ldr	r0, [fp, #8]
   141d8:	cmp	r0, #2
   141dc:	bne	141f0 <__assert_fail@plt+0x31a4>
   141e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   141e4:	tst	r0, #1
   141e8:	beq	141f0 <__assert_fail@plt+0x31a4>
   141ec:	b	14d98 <__assert_fail@plt+0x3d4c>
   141f0:	b	141f4 <__assert_fail@plt+0x31a8>
   141f4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   141f8:	tst	r0, #1
   141fc:	beq	1420c <__assert_fail@plt+0x31c0>
   14200:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   14204:	strb	r0, [fp, #-63]	; 0xffffffc1
   14208:	b	14a18 <__assert_fail@plt+0x39cc>
   1420c:	b	149a4 <__assert_fail@plt+0x3958>
   14210:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14214:	cmn	r0, #1
   14218:	bne	14230 <__assert_fail@plt+0x31e4>
   1421c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14220:	ldrb	r0, [r0, #1]
   14224:	cmp	r0, #0
   14228:	beq	14240 <__assert_fail@plt+0x31f4>
   1422c:	b	1423c <__assert_fail@plt+0x31f0>
   14230:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14234:	cmp	r0, #1
   14238:	beq	14240 <__assert_fail@plt+0x31f4>
   1423c:	b	149a4 <__assert_fail@plt+0x3958>
   14240:	b	14244 <__assert_fail@plt+0x31f8>
   14244:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14248:	cmp	r0, #0
   1424c:	beq	14254 <__assert_fail@plt+0x3208>
   14250:	b	149a4 <__assert_fail@plt+0x3958>
   14254:	b	14258 <__assert_fail@plt+0x320c>
   14258:	movw	r0, #1
   1425c:	strb	r0, [fp, #-67]	; 0xffffffbd
   14260:	ldr	r0, [fp, #8]
   14264:	cmp	r0, #2
   14268:	bne	1427c <__assert_fail@plt+0x3230>
   1426c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14270:	tst	r0, #1
   14274:	beq	1427c <__assert_fail@plt+0x3230>
   14278:	b	14d98 <__assert_fail@plt+0x3d4c>
   1427c:	b	149a4 <__assert_fail@plt+0x3958>
   14280:	movw	r0, #1
   14284:	strb	r0, [fp, #-61]	; 0xffffffc3
   14288:	strb	r0, [fp, #-67]	; 0xffffffbd
   1428c:	ldr	r0, [fp, #8]
   14290:	cmp	r0, #2
   14294:	bne	14374 <__assert_fail@plt+0x3328>
   14298:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1429c:	tst	r0, #1
   142a0:	beq	142a8 <__assert_fail@plt+0x325c>
   142a4:	b	14d98 <__assert_fail@plt+0x3d4c>
   142a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   142ac:	cmp	r0, #0
   142b0:	beq	142d0 <__assert_fail@plt+0x3284>
   142b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   142b8:	cmp	r0, #0
   142bc:	bne	142d0 <__assert_fail@plt+0x3284>
   142c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   142c4:	str	r0, [fp, #-48]	; 0xffffffd0
   142c8:	movw	r0, #0
   142cc:	str	r0, [fp, #-28]	; 0xffffffe4
   142d0:	b	142d4 <__assert_fail@plt+0x3288>
   142d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   142dc:	cmp	r0, r1
   142e0:	bcs	142f8 <__assert_fail@plt+0x32ac>
   142e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   142ec:	add	r0, r0, r1
   142f0:	movw	r1, #39	; 0x27
   142f4:	strb	r1, [r0]
   142f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   142fc:	add	r0, r0, #1
   14300:	str	r0, [fp, #-44]	; 0xffffffd4
   14304:	b	14308 <__assert_fail@plt+0x32bc>
   14308:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1430c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14310:	cmp	r0, r1
   14314:	bcs	1432c <__assert_fail@plt+0x32e0>
   14318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1431c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14320:	add	r0, r0, r1
   14324:	movw	r1, #92	; 0x5c
   14328:	strb	r1, [r0]
   1432c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14330:	add	r0, r0, #1
   14334:	str	r0, [fp, #-44]	; 0xffffffd4
   14338:	b	1433c <__assert_fail@plt+0x32f0>
   1433c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14340:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14344:	cmp	r0, r1
   14348:	bcs	14360 <__assert_fail@plt+0x3314>
   1434c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14350:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14354:	add	r0, r0, r1
   14358:	movw	r1, #39	; 0x27
   1435c:	strb	r1, [r0]
   14360:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14364:	add	r0, r0, #1
   14368:	str	r0, [fp, #-44]	; 0xffffffd4
   1436c:	movw	r0, #0
   14370:	strb	r0, [fp, #-60]	; 0xffffffc4
   14374:	b	149a4 <__assert_fail@plt+0x3958>
   14378:	movw	r0, #1
   1437c:	strb	r0, [fp, #-67]	; 0xffffffbd
   14380:	b	149a4 <__assert_fail@plt+0x3958>
   14384:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   14388:	tst	r0, #1
   1438c:	beq	143cc <__assert_fail@plt+0x3380>
   14390:	mov	r0, #1
   14394:	str	r0, [fp, #-72]	; 0xffffffb8
   14398:	bl	10f44 <__ctype_b_loc@plt>
   1439c:	ldr	r0, [r0]
   143a0:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   143a4:	mov	r2, r1
   143a8:	add	r0, r0, r1, lsl #1
   143ac:	ldrh	r0, [r0]
   143b0:	and	r0, r0, #16384	; 0x4000
   143b4:	cmp	r0, #0
   143b8:	movw	r0, #0
   143bc:	movne	r0, #1
   143c0:	and	r0, r0, #1
   143c4:	strb	r0, [fp, #-73]	; 0xffffffb7
   143c8:	b	14658 <__assert_fail@plt+0x360c>
   143cc:	sub	r0, fp, #84	; 0x54
   143d0:	movw	r1, #0
   143d4:	and	r1, r1, #255	; 0xff
   143d8:	movw	r2, #8
   143dc:	bl	10f98 <memset@plt>
   143e0:	movw	r0, #0
   143e4:	str	r0, [fp, #-72]	; 0xffffffb8
   143e8:	movw	r0, #1
   143ec:	strb	r0, [fp, #-73]	; 0xffffffb7
   143f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   143f4:	cmn	r0, #1
   143f8:	bne	14408 <__assert_fail@plt+0x33bc>
   143fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14400:	bl	10f68 <strlen@plt>
   14404:	str	r0, [fp, #-36]	; 0xffffffdc
   14408:	b	1440c <__assert_fail@plt+0x33c0>
   1440c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14410:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14414:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14418:	add	r1, r1, r2
   1441c:	add	r1, r0, r1
   14420:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14424:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14428:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1442c:	add	r2, r2, r3
   14430:	sub	r2, r0, r2
   14434:	add	r0, sp, #88	; 0x58
   14438:	sub	r3, fp, #84	; 0x54
   1443c:	bl	1959c <__assert_fail@plt+0x8550>
   14440:	str	r0, [sp, #84]	; 0x54
   14444:	ldr	r0, [sp, #84]	; 0x54
   14448:	cmp	r0, #0
   1444c:	bne	14454 <__assert_fail@plt+0x3408>
   14450:	b	14654 <__assert_fail@plt+0x3608>
   14454:	ldr	r0, [sp, #84]	; 0x54
   14458:	cmn	r0, #1
   1445c:	bne	1446c <__assert_fail@plt+0x3420>
   14460:	movw	r0, #0
   14464:	strb	r0, [fp, #-73]	; 0xffffffb7
   14468:	b	14654 <__assert_fail@plt+0x3608>
   1446c:	ldr	r0, [sp, #84]	; 0x54
   14470:	cmn	r0, #2
   14474:	bne	144e8 <__assert_fail@plt+0x349c>
   14478:	movw	r0, #0
   1447c:	strb	r0, [fp, #-73]	; 0xffffffb7
   14480:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14484:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14488:	add	r0, r0, r1
   1448c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14490:	cmp	r0, r1
   14494:	movw	r0, #0
   14498:	str	r0, [sp, #24]
   1449c:	bcs	144c8 <__assert_fail@plt+0x347c>
   144a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   144a8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   144ac:	add	r1, r1, r2
   144b0:	add	r0, r0, r1
   144b4:	ldrb	r0, [r0]
   144b8:	cmp	r0, #0
   144bc:	movw	r0, #0
   144c0:	movne	r0, #1
   144c4:	str	r0, [sp, #24]
   144c8:	ldr	r0, [sp, #24]
   144cc:	tst	r0, #1
   144d0:	beq	144e4 <__assert_fail@plt+0x3498>
   144d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   144d8:	add	r0, r0, #1
   144dc:	str	r0, [fp, #-72]	; 0xffffffb8
   144e0:	b	14480 <__assert_fail@plt+0x3434>
   144e4:	b	14654 <__assert_fail@plt+0x3608>
   144e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   144ec:	tst	r0, #1
   144f0:	beq	145fc <__assert_fail@plt+0x35b0>
   144f4:	ldr	r0, [fp, #8]
   144f8:	cmp	r0, #2
   144fc:	bne	145fc <__assert_fail@plt+0x35b0>
   14500:	movw	r0, #1
   14504:	str	r0, [sp, #80]	; 0x50
   14508:	ldr	r0, [sp, #80]	; 0x50
   1450c:	ldr	r1, [sp, #84]	; 0x54
   14510:	cmp	r0, r1
   14514:	bcs	145f8 <__assert_fail@plt+0x35ac>
   14518:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1451c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14520:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14524:	add	r1, r1, r2
   14528:	ldr	r2, [sp, #80]	; 0x50
   1452c:	add	r1, r1, r2
   14530:	ldrb	r0, [r0, r1]
   14534:	sub	r0, r0, #91	; 0x5b
   14538:	cmp	r0, #33	; 0x21
   1453c:	str	r0, [sp, #20]
   14540:	bhi	145e0 <__assert_fail@plt+0x3594>
   14544:	add	r0, pc, #8
   14548:	ldr	r1, [sp, #20]
   1454c:	ldr	r0, [r0, r1, lsl #2]
   14550:	mov	pc, r0
   14554:	ldrdeq	r4, [r1], -ip
   14558:	ldrdeq	r4, [r1], -ip
   1455c:	andeq	r4, r1, r0, ror #11
   14560:	ldrdeq	r4, [r1], -ip
   14564:	andeq	r4, r1, r0, ror #11
   14568:	ldrdeq	r4, [r1], -ip
   1456c:	andeq	r4, r1, r0, ror #11
   14570:	andeq	r4, r1, r0, ror #11
   14574:	andeq	r4, r1, r0, ror #11
   14578:	andeq	r4, r1, r0, ror #11
   1457c:	andeq	r4, r1, r0, ror #11
   14580:	andeq	r4, r1, r0, ror #11
   14584:	andeq	r4, r1, r0, ror #11
   14588:	andeq	r4, r1, r0, ror #11
   1458c:	andeq	r4, r1, r0, ror #11
   14590:	andeq	r4, r1, r0, ror #11
   14594:	andeq	r4, r1, r0, ror #11
   14598:	andeq	r4, r1, r0, ror #11
   1459c:	andeq	r4, r1, r0, ror #11
   145a0:	andeq	r4, r1, r0, ror #11
   145a4:	andeq	r4, r1, r0, ror #11
   145a8:	andeq	r4, r1, r0, ror #11
   145ac:	andeq	r4, r1, r0, ror #11
   145b0:	andeq	r4, r1, r0, ror #11
   145b4:	andeq	r4, r1, r0, ror #11
   145b8:	andeq	r4, r1, r0, ror #11
   145bc:	andeq	r4, r1, r0, ror #11
   145c0:	andeq	r4, r1, r0, ror #11
   145c4:	andeq	r4, r1, r0, ror #11
   145c8:	andeq	r4, r1, r0, ror #11
   145cc:	andeq	r4, r1, r0, ror #11
   145d0:	andeq	r4, r1, r0, ror #11
   145d4:	andeq	r4, r1, r0, ror #11
   145d8:	ldrdeq	r4, [r1], -ip
   145dc:	b	14d98 <__assert_fail@plt+0x3d4c>
   145e0:	b	145e4 <__assert_fail@plt+0x3598>
   145e4:	b	145e8 <__assert_fail@plt+0x359c>
   145e8:	ldr	r0, [sp, #80]	; 0x50
   145ec:	add	r0, r0, #1
   145f0:	str	r0, [sp, #80]	; 0x50
   145f4:	b	14508 <__assert_fail@plt+0x34bc>
   145f8:	b	145fc <__assert_fail@plt+0x35b0>
   145fc:	ldr	r0, [sp, #88]	; 0x58
   14600:	bl	10eb4 <iswprint@plt>
   14604:	cmp	r0, #0
   14608:	bne	14614 <__assert_fail@plt+0x35c8>
   1460c:	movw	r0, #0
   14610:	strb	r0, [fp, #-73]	; 0xffffffb7
   14614:	ldr	r0, [sp, #84]	; 0x54
   14618:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1461c:	add	r0, r1, r0
   14620:	str	r0, [fp, #-72]	; 0xffffffb8
   14624:	b	14628 <__assert_fail@plt+0x35dc>
   14628:	b	1462c <__assert_fail@plt+0x35e0>
   1462c:	b	14630 <__assert_fail@plt+0x35e4>
   14630:	sub	r0, fp, #84	; 0x54
   14634:	bl	10e6c <mbsinit@plt>
   14638:	cmp	r0, #0
   1463c:	movw	r0, #0
   14640:	movne	r0, #1
   14644:	mvn	r1, #0
   14648:	eor	r0, r0, r1
   1464c:	tst	r0, #1
   14650:	bne	1440c <__assert_fail@plt+0x33c0>
   14654:	b	14658 <__assert_fail@plt+0x360c>
   14658:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1465c:	and	r0, r0, #1
   14660:	strb	r0, [fp, #-67]	; 0xffffffbd
   14664:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14668:	movw	r1, #1
   1466c:	cmp	r1, r0
   14670:	bcc	1468c <__assert_fail@plt+0x3640>
   14674:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14678:	tst	r0, #1
   1467c:	beq	149a0 <__assert_fail@plt+0x3954>
   14680:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14684:	tst	r0, #1
   14688:	bne	149a0 <__assert_fail@plt+0x3954>
   1468c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14690:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14694:	add	r0, r0, r1
   14698:	str	r0, [sp, #76]	; 0x4c
   1469c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   146a0:	tst	r0, #1
   146a4:	beq	14854 <__assert_fail@plt+0x3808>
   146a8:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   146ac:	tst	r0, #1
   146b0:	bne	14854 <__assert_fail@plt+0x3808>
   146b4:	b	146b8 <__assert_fail@plt+0x366c>
   146b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   146bc:	tst	r0, #1
   146c0:	beq	146c8 <__assert_fail@plt+0x367c>
   146c4:	b	14d98 <__assert_fail@plt+0x3d4c>
   146c8:	movw	r0, #1
   146cc:	strb	r0, [fp, #-66]	; 0xffffffbe
   146d0:	ldr	r0, [fp, #8]
   146d4:	cmp	r0, #2
   146d8:	bne	1478c <__assert_fail@plt+0x3740>
   146dc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   146e0:	tst	r0, #1
   146e4:	bne	1478c <__assert_fail@plt+0x3740>
   146e8:	b	146ec <__assert_fail@plt+0x36a0>
   146ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146f4:	cmp	r0, r1
   146f8:	bcs	14710 <__assert_fail@plt+0x36c4>
   146fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14700:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14704:	add	r0, r0, r1
   14708:	movw	r1, #39	; 0x27
   1470c:	strb	r1, [r0]
   14710:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14714:	add	r0, r0, #1
   14718:	str	r0, [fp, #-44]	; 0xffffffd4
   1471c:	b	14720 <__assert_fail@plt+0x36d4>
   14720:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14724:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14728:	cmp	r0, r1
   1472c:	bcs	14744 <__assert_fail@plt+0x36f8>
   14730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14734:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14738:	add	r0, r0, r1
   1473c:	movw	r1, #36	; 0x24
   14740:	strb	r1, [r0]
   14744:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14748:	add	r0, r0, #1
   1474c:	str	r0, [fp, #-44]	; 0xffffffd4
   14750:	b	14754 <__assert_fail@plt+0x3708>
   14754:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14758:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1475c:	cmp	r0, r1
   14760:	bcs	14778 <__assert_fail@plt+0x372c>
   14764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14768:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1476c:	add	r0, r0, r1
   14770:	movw	r1, #39	; 0x27
   14774:	strb	r1, [r0]
   14778:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1477c:	add	r0, r0, #1
   14780:	str	r0, [fp, #-44]	; 0xffffffd4
   14784:	movw	r0, #1
   14788:	strb	r0, [fp, #-60]	; 0xffffffc4
   1478c:	b	14790 <__assert_fail@plt+0x3744>
   14790:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14794:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14798:	cmp	r0, r1
   1479c:	bcs	147b4 <__assert_fail@plt+0x3768>
   147a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147a8:	add	r0, r0, r1
   147ac:	movw	r1, #92	; 0x5c
   147b0:	strb	r1, [r0]
   147b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147b8:	add	r0, r0, #1
   147bc:	str	r0, [fp, #-44]	; 0xffffffd4
   147c0:	b	147c4 <__assert_fail@plt+0x3778>
   147c4:	b	147c8 <__assert_fail@plt+0x377c>
   147c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147d0:	cmp	r0, r1
   147d4:	bcs	147f4 <__assert_fail@plt+0x37a8>
   147d8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   147dc:	asr	r0, r0, #6
   147e0:	add	r0, r0, #48	; 0x30
   147e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   147e8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   147ec:	add	r1, r1, r2
   147f0:	strb	r0, [r1]
   147f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147f8:	add	r0, r0, #1
   147fc:	str	r0, [fp, #-44]	; 0xffffffd4
   14800:	b	14804 <__assert_fail@plt+0x37b8>
   14804:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14808:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1480c:	cmp	r0, r1
   14810:	bcs	14834 <__assert_fail@plt+0x37e8>
   14814:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14818:	asr	r0, r0, #3
   1481c:	and	r0, r0, #7
   14820:	add	r0, r0, #48	; 0x30
   14824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14828:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1482c:	add	r1, r1, r2
   14830:	strb	r0, [r1]
   14834:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14838:	add	r0, r0, #1
   1483c:	str	r0, [fp, #-44]	; 0xffffffd4
   14840:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14844:	and	r0, r0, #7
   14848:	add	r0, r0, #48	; 0x30
   1484c:	strb	r0, [fp, #-63]	; 0xffffffc1
   14850:	b	148a0 <__assert_fail@plt+0x3854>
   14854:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14858:	tst	r0, #1
   1485c:	beq	1489c <__assert_fail@plt+0x3850>
   14860:	b	14864 <__assert_fail@plt+0x3818>
   14864:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14868:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1486c:	cmp	r0, r1
   14870:	bcs	14888 <__assert_fail@plt+0x383c>
   14874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14878:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1487c:	add	r0, r0, r1
   14880:	movw	r1, #92	; 0x5c
   14884:	strb	r1, [r0]
   14888:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1488c:	add	r0, r0, #1
   14890:	str	r0, [fp, #-44]	; 0xffffffd4
   14894:	movw	r0, #0
   14898:	strb	r0, [fp, #-65]	; 0xffffffbf
   1489c:	b	148a0 <__assert_fail@plt+0x3854>
   148a0:	ldr	r0, [sp, #76]	; 0x4c
   148a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   148a8:	add	r1, r1, #1
   148ac:	cmp	r0, r1
   148b0:	bhi	148b8 <__assert_fail@plt+0x386c>
   148b4:	b	1499c <__assert_fail@plt+0x3950>
   148b8:	b	148bc <__assert_fail@plt+0x3870>
   148bc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   148c0:	tst	r0, #1
   148c4:	beq	14944 <__assert_fail@plt+0x38f8>
   148c8:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   148cc:	tst	r0, #1
   148d0:	bne	14944 <__assert_fail@plt+0x38f8>
   148d4:	b	148d8 <__assert_fail@plt+0x388c>
   148d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   148dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   148e0:	cmp	r0, r1
   148e4:	bcs	148fc <__assert_fail@plt+0x38b0>
   148e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   148ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   148f0:	add	r0, r0, r1
   148f4:	movw	r1, #39	; 0x27
   148f8:	strb	r1, [r0]
   148fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14900:	add	r0, r0, #1
   14904:	str	r0, [fp, #-44]	; 0xffffffd4
   14908:	b	1490c <__assert_fail@plt+0x38c0>
   1490c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14910:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14914:	cmp	r0, r1
   14918:	bcs	14930 <__assert_fail@plt+0x38e4>
   1491c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14920:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14924:	add	r0, r0, r1
   14928:	movw	r1, #39	; 0x27
   1492c:	strb	r1, [r0]
   14930:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14934:	add	r0, r0, #1
   14938:	str	r0, [fp, #-44]	; 0xffffffd4
   1493c:	movw	r0, #0
   14940:	strb	r0, [fp, #-60]	; 0xffffffc4
   14944:	b	14948 <__assert_fail@plt+0x38fc>
   14948:	b	1494c <__assert_fail@plt+0x3900>
   1494c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14950:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14954:	cmp	r0, r1
   14958:	bcs	14970 <__assert_fail@plt+0x3924>
   1495c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14960:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14964:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14968:	add	r1, r1, r2
   1496c:	strb	r0, [r1]
   14970:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14974:	add	r0, r0, #1
   14978:	str	r0, [fp, #-44]	; 0xffffffd4
   1497c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14980:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14984:	add	r1, r1, #1
   14988:	str	r1, [fp, #-40]	; 0xffffffd8
   1498c:	add	r0, r0, r1
   14990:	ldrb	r0, [r0]
   14994:	strb	r0, [fp, #-63]	; 0xffffffc1
   14998:	b	1469c <__assert_fail@plt+0x3650>
   1499c:	b	14b2c <__assert_fail@plt+0x3ae0>
   149a0:	b	149a4 <__assert_fail@plt+0x3958>
   149a4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   149a8:	tst	r0, #1
   149ac:	beq	149bc <__assert_fail@plt+0x3970>
   149b0:	ldr	r0, [fp, #8]
   149b4:	cmp	r0, #2
   149b8:	bne	149c8 <__assert_fail@plt+0x397c>
   149bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   149c0:	tst	r0, #1
   149c4:	beq	14a04 <__assert_fail@plt+0x39b8>
   149c8:	ldr	r0, [fp, #16]
   149cc:	movw	r1, #0
   149d0:	cmp	r0, r1
   149d4:	beq	14a04 <__assert_fail@plt+0x39b8>
   149d8:	ldr	r0, [fp, #16]
   149dc:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   149e0:	lsr	r1, r1, #5
   149e4:	add	r0, r0, r1, lsl #2
   149e8:	ldr	r0, [r0]
   149ec:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   149f0:	and	r1, r1, #31
   149f4:	lsr	r0, r0, r1
   149f8:	and	r0, r0, #1
   149fc:	cmp	r0, #0
   14a00:	bne	14a14 <__assert_fail@plt+0x39c8>
   14a04:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14a08:	tst	r0, #1
   14a0c:	bne	14a14 <__assert_fail@plt+0x39c8>
   14a10:	b	14b2c <__assert_fail@plt+0x3ae0>
   14a14:	b	14a18 <__assert_fail@plt+0x39cc>
   14a18:	b	14a1c <__assert_fail@plt+0x39d0>
   14a1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14a20:	tst	r0, #1
   14a24:	beq	14a2c <__assert_fail@plt+0x39e0>
   14a28:	b	14d98 <__assert_fail@plt+0x3d4c>
   14a2c:	movw	r0, #1
   14a30:	strb	r0, [fp, #-66]	; 0xffffffbe
   14a34:	ldr	r0, [fp, #8]
   14a38:	cmp	r0, #2
   14a3c:	bne	14af0 <__assert_fail@plt+0x3aa4>
   14a40:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14a44:	tst	r0, #1
   14a48:	bne	14af0 <__assert_fail@plt+0x3aa4>
   14a4c:	b	14a50 <__assert_fail@plt+0x3a04>
   14a50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a58:	cmp	r0, r1
   14a5c:	bcs	14a74 <__assert_fail@plt+0x3a28>
   14a60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a68:	add	r0, r0, r1
   14a6c:	movw	r1, #39	; 0x27
   14a70:	strb	r1, [r0]
   14a74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a78:	add	r0, r0, #1
   14a7c:	str	r0, [fp, #-44]	; 0xffffffd4
   14a80:	b	14a84 <__assert_fail@plt+0x3a38>
   14a84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a8c:	cmp	r0, r1
   14a90:	bcs	14aa8 <__assert_fail@plt+0x3a5c>
   14a94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a9c:	add	r0, r0, r1
   14aa0:	movw	r1, #36	; 0x24
   14aa4:	strb	r1, [r0]
   14aa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14aac:	add	r0, r0, #1
   14ab0:	str	r0, [fp, #-44]	; 0xffffffd4
   14ab4:	b	14ab8 <__assert_fail@plt+0x3a6c>
   14ab8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14abc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ac0:	cmp	r0, r1
   14ac4:	bcs	14adc <__assert_fail@plt+0x3a90>
   14ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14acc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ad0:	add	r0, r0, r1
   14ad4:	movw	r1, #39	; 0x27
   14ad8:	strb	r1, [r0]
   14adc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ae0:	add	r0, r0, #1
   14ae4:	str	r0, [fp, #-44]	; 0xffffffd4
   14ae8:	movw	r0, #1
   14aec:	strb	r0, [fp, #-60]	; 0xffffffc4
   14af0:	b	14af4 <__assert_fail@plt+0x3aa8>
   14af4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14af8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14afc:	cmp	r0, r1
   14b00:	bcs	14b18 <__assert_fail@plt+0x3acc>
   14b04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b0c:	add	r0, r0, r1
   14b10:	movw	r1, #92	; 0x5c
   14b14:	strb	r1, [r0]
   14b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b1c:	add	r0, r0, #1
   14b20:	str	r0, [fp, #-44]	; 0xffffffd4
   14b24:	b	14b28 <__assert_fail@plt+0x3adc>
   14b28:	b	14b2c <__assert_fail@plt+0x3ae0>
   14b2c:	b	14b30 <__assert_fail@plt+0x3ae4>
   14b30:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14b34:	tst	r0, #1
   14b38:	beq	14bb8 <__assert_fail@plt+0x3b6c>
   14b3c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14b40:	tst	r0, #1
   14b44:	bne	14bb8 <__assert_fail@plt+0x3b6c>
   14b48:	b	14b4c <__assert_fail@plt+0x3b00>
   14b4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b54:	cmp	r0, r1
   14b58:	bcs	14b70 <__assert_fail@plt+0x3b24>
   14b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b64:	add	r0, r0, r1
   14b68:	movw	r1, #39	; 0x27
   14b6c:	strb	r1, [r0]
   14b70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b74:	add	r0, r0, #1
   14b78:	str	r0, [fp, #-44]	; 0xffffffd4
   14b7c:	b	14b80 <__assert_fail@plt+0x3b34>
   14b80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b88:	cmp	r0, r1
   14b8c:	bcs	14ba4 <__assert_fail@plt+0x3b58>
   14b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b98:	add	r0, r0, r1
   14b9c:	movw	r1, #39	; 0x27
   14ba0:	strb	r1, [r0]
   14ba4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ba8:	add	r0, r0, #1
   14bac:	str	r0, [fp, #-44]	; 0xffffffd4
   14bb0:	movw	r0, #0
   14bb4:	strb	r0, [fp, #-60]	; 0xffffffc4
   14bb8:	b	14bbc <__assert_fail@plt+0x3b70>
   14bbc:	b	14bc0 <__assert_fail@plt+0x3b74>
   14bc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14bc8:	cmp	r0, r1
   14bcc:	bcs	14be4 <__assert_fail@plt+0x3b98>
   14bd0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14bd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14bd8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14bdc:	add	r1, r1, r2
   14be0:	strb	r0, [r1]
   14be4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14be8:	add	r0, r0, #1
   14bec:	str	r0, [fp, #-44]	; 0xffffffd4
   14bf0:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14bf4:	tst	r0, #1
   14bf8:	bne	14c04 <__assert_fail@plt+0x3bb8>
   14bfc:	movw	r0, #0
   14c00:	strb	r0, [fp, #-62]	; 0xffffffc2
   14c04:	b	14c08 <__assert_fail@plt+0x3bbc>
   14c08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c0c:	add	r0, r0, #1
   14c10:	str	r0, [fp, #-40]	; 0xffffffd8
   14c14:	b	139c0 <__assert_fail@plt+0x2974>
   14c18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c1c:	cmp	r0, #0
   14c20:	bne	14c40 <__assert_fail@plt+0x3bf4>
   14c24:	ldr	r0, [fp, #8]
   14c28:	cmp	r0, #2
   14c2c:	bne	14c40 <__assert_fail@plt+0x3bf4>
   14c30:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14c34:	tst	r0, #1
   14c38:	beq	14c40 <__assert_fail@plt+0x3bf4>
   14c3c:	b	14d98 <__assert_fail@plt+0x3d4c>
   14c40:	ldr	r0, [fp, #8]
   14c44:	cmp	r0, #2
   14c48:	bne	14ce8 <__assert_fail@plt+0x3c9c>
   14c4c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14c50:	tst	r0, #1
   14c54:	bne	14ce8 <__assert_fail@plt+0x3c9c>
   14c58:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   14c5c:	tst	r0, #1
   14c60:	beq	14ce8 <__assert_fail@plt+0x3c9c>
   14c64:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   14c68:	tst	r0, #1
   14c6c:	beq	14cb4 <__assert_fail@plt+0x3c68>
   14c70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c74:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14c78:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14c7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14c80:	ldr	ip, [fp, #12]
   14c84:	ldr	lr, [fp, #16]
   14c88:	ldr	r4, [fp, #20]
   14c8c:	ldr	r5, [fp, #24]
   14c90:	movw	r6, #5
   14c94:	str	r6, [sp]
   14c98:	str	ip, [sp, #4]
   14c9c:	str	lr, [sp, #8]
   14ca0:	str	r4, [sp, #12]
   14ca4:	str	r5, [sp, #16]
   14ca8:	bl	136d8 <__assert_fail@plt+0x268c>
   14cac:	str	r0, [fp, #-20]	; 0xffffffec
   14cb0:	b	14e00 <__assert_fail@plt+0x3db4>
   14cb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14cb8:	cmp	r0, #0
   14cbc:	bne	14ce0 <__assert_fail@plt+0x3c94>
   14cc0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14cc4:	cmp	r0, #0
   14cc8:	beq	14ce0 <__assert_fail@plt+0x3c94>
   14ccc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14cd0:	str	r0, [fp, #-28]	; 0xffffffe4
   14cd4:	movw	r0, #0
   14cd8:	str	r0, [fp, #-44]	; 0xffffffd4
   14cdc:	b	13780 <__assert_fail@plt+0x2734>
   14ce0:	b	14ce4 <__assert_fail@plt+0x3c98>
   14ce4:	b	14ce8 <__assert_fail@plt+0x3c9c>
   14ce8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14cec:	movw	r1, #0
   14cf0:	cmp	r0, r1
   14cf4:	beq	14d68 <__assert_fail@plt+0x3d1c>
   14cf8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14cfc:	tst	r0, #1
   14d00:	bne	14d68 <__assert_fail@plt+0x3d1c>
   14d04:	b	14d08 <__assert_fail@plt+0x3cbc>
   14d08:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14d0c:	ldrsb	r0, [r0]
   14d10:	cmp	r0, #0
   14d14:	beq	14d64 <__assert_fail@plt+0x3d18>
   14d18:	b	14d1c <__assert_fail@plt+0x3cd0>
   14d1c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d24:	cmp	r0, r1
   14d28:	bcs	14d44 <__assert_fail@plt+0x3cf8>
   14d2c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14d30:	ldrb	r0, [r0]
   14d34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14d38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14d3c:	add	r1, r1, r2
   14d40:	strb	r0, [r1]
   14d44:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d48:	add	r0, r0, #1
   14d4c:	str	r0, [fp, #-44]	; 0xffffffd4
   14d50:	b	14d54 <__assert_fail@plt+0x3d08>
   14d54:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14d58:	add	r0, r0, #1
   14d5c:	str	r0, [fp, #-52]	; 0xffffffcc
   14d60:	b	14d08 <__assert_fail@plt+0x3cbc>
   14d64:	b	14d68 <__assert_fail@plt+0x3d1c>
   14d68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d70:	cmp	r0, r1
   14d74:	bcs	14d8c <__assert_fail@plt+0x3d40>
   14d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d80:	add	r0, r0, r1
   14d84:	movw	r1, #0
   14d88:	strb	r1, [r0]
   14d8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14d90:	str	r0, [fp, #-20]	; 0xffffffec
   14d94:	b	14e00 <__assert_fail@plt+0x3db4>
   14d98:	ldr	r0, [fp, #8]
   14d9c:	cmp	r0, #2
   14da0:	bne	14db8 <__assert_fail@plt+0x3d6c>
   14da4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14da8:	tst	r0, #1
   14dac:	beq	14db8 <__assert_fail@plt+0x3d6c>
   14db0:	movw	r0, #4
   14db4:	str	r0, [fp, #8]
   14db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14dbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14dc0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14dc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14dc8:	ldr	ip, [fp, #8]
   14dcc:	ldr	lr, [fp, #12]
   14dd0:	mvn	r4, #2
   14dd4:	and	lr, lr, r4
   14dd8:	ldr	r4, [fp, #20]
   14ddc:	ldr	r5, [fp, #24]
   14de0:	str	ip, [sp]
   14de4:	str	lr, [sp, #4]
   14de8:	movw	ip, #0
   14dec:	str	ip, [sp, #8]
   14df0:	str	r4, [sp, #12]
   14df4:	str	r5, [sp, #16]
   14df8:	bl	136d8 <__assert_fail@plt+0x268c>
   14dfc:	str	r0, [fp, #-20]	; 0xffffffec
   14e00:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e04:	sub	sp, fp, #16
   14e08:	pop	{r4, r5, r6, sl, fp, pc}
   14e0c:	push	{fp, lr}
   14e10:	mov	fp, sp
   14e14:	sub	sp, sp, #16
   14e18:	str	r0, [fp, #-4]
   14e1c:	str	r1, [sp, #8]
   14e20:	str	r2, [sp, #4]
   14e24:	ldr	r0, [fp, #-4]
   14e28:	ldr	r1, [sp, #8]
   14e2c:	ldr	r3, [sp, #4]
   14e30:	movw	r2, #0
   14e34:	bl	14e40 <__assert_fail@plt+0x3df4>
   14e38:	mov	sp, fp
   14e3c:	pop	{fp, pc}
   14e40:	push	{r4, r5, r6, sl, fp, lr}
   14e44:	add	fp, sp, #16
   14e48:	sub	sp, sp, #80	; 0x50
   14e4c:	str	r0, [fp, #-20]	; 0xffffffec
   14e50:	str	r1, [fp, #-24]	; 0xffffffe8
   14e54:	str	r2, [fp, #-28]	; 0xffffffe4
   14e58:	str	r3, [fp, #-32]	; 0xffffffe0
   14e5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e60:	movw	r1, #0
   14e64:	cmp	r0, r1
   14e68:	beq	14e78 <__assert_fail@plt+0x3e2c>
   14e6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e70:	str	r0, [sp, #40]	; 0x28
   14e74:	b	14e88 <__assert_fail@plt+0x3e3c>
   14e78:	movw	r0, #53672	; 0xd1a8
   14e7c:	movt	r0, #2
   14e80:	str	r0, [sp, #40]	; 0x28
   14e84:	b	14e88 <__assert_fail@plt+0x3e3c>
   14e88:	ldr	r0, [sp, #40]	; 0x28
   14e8c:	str	r0, [fp, #-36]	; 0xffffffdc
   14e90:	bl	10f80 <__errno_location@plt>
   14e94:	ldr	r0, [r0]
   14e98:	str	r0, [fp, #-40]	; 0xffffffd8
   14e9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14ea0:	ldr	r0, [r0, #4]
   14ea4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ea8:	movw	r2, #0
   14eac:	cmp	r1, r2
   14eb0:	movw	r1, #0
   14eb4:	movne	r1, #1
   14eb8:	tst	r1, #1
   14ebc:	mov	r1, r2
   14ec0:	moveq	r1, #1
   14ec4:	orr	r0, r0, r1
   14ec8:	str	r0, [fp, #-44]	; 0xffffffd4
   14ecc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ed4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ed8:	ldr	r1, [r1]
   14edc:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14ee0:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14ee4:	add	lr, lr, #8
   14ee8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14eec:	ldr	r4, [r4, #40]	; 0x28
   14ef0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14ef4:	ldr	r5, [r5, #44]	; 0x2c
   14ef8:	str	r0, [sp, #36]	; 0x24
   14efc:	mov	r0, r2
   14f00:	str	r1, [sp, #32]
   14f04:	mov	r1, r2
   14f08:	ldr	r2, [sp, #36]	; 0x24
   14f0c:	ldr	r6, [sp, #32]
   14f10:	str	r6, [sp]
   14f14:	str	ip, [sp, #4]
   14f18:	str	lr, [sp, #8]
   14f1c:	str	r4, [sp, #12]
   14f20:	str	r5, [sp, #16]
   14f24:	bl	136d8 <__assert_fail@plt+0x268c>
   14f28:	add	r0, r0, #1
   14f2c:	str	r0, [sp, #48]	; 0x30
   14f30:	ldr	r0, [sp, #48]	; 0x30
   14f34:	bl	16324 <__assert_fail@plt+0x52d8>
   14f38:	str	r0, [sp, #44]	; 0x2c
   14f3c:	ldr	r0, [sp, #44]	; 0x2c
   14f40:	ldr	r1, [sp, #48]	; 0x30
   14f44:	ldr	r2, [fp, #-20]	; 0xffffffec
   14f48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14f4c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14f50:	ldr	ip, [ip]
   14f54:	ldr	lr, [fp, #-44]	; 0xffffffd4
   14f58:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14f5c:	add	r4, r4, #8
   14f60:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14f64:	ldr	r5, [r5, #40]	; 0x28
   14f68:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14f6c:	ldr	r6, [r6, #44]	; 0x2c
   14f70:	str	ip, [sp]
   14f74:	str	lr, [sp, #4]
   14f78:	str	r4, [sp, #8]
   14f7c:	str	r5, [sp, #12]
   14f80:	str	r6, [sp, #16]
   14f84:	bl	136d8 <__assert_fail@plt+0x268c>
   14f88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14f8c:	str	r0, [sp, #28]
   14f90:	str	r1, [sp, #24]
   14f94:	bl	10f80 <__errno_location@plt>
   14f98:	ldr	r1, [sp, #24]
   14f9c:	str	r1, [r0]
   14fa0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14fa4:	movw	r2, #0
   14fa8:	cmp	r0, r2
   14fac:	beq	14fc0 <__assert_fail@plt+0x3f74>
   14fb0:	ldr	r0, [sp, #48]	; 0x30
   14fb4:	sub	r0, r0, #1
   14fb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14fbc:	str	r0, [r1]
   14fc0:	ldr	r0, [sp, #44]	; 0x2c
   14fc4:	sub	sp, fp, #16
   14fc8:	pop	{r4, r5, r6, sl, fp, pc}
   14fcc:	push	{fp, lr}
   14fd0:	mov	fp, sp
   14fd4:	sub	sp, sp, #8
   14fd8:	movw	r0, #53492	; 0xd0f4
   14fdc:	movt	r0, #2
   14fe0:	ldr	r0, [r0]
   14fe4:	str	r0, [sp, #4]
   14fe8:	movw	r0, #1
   14fec:	str	r0, [sp]
   14ff0:	ldr	r0, [sp]
   14ff4:	movw	r1, #53496	; 0xd0f8
   14ff8:	movt	r1, #2
   14ffc:	ldr	r1, [r1]
   15000:	cmp	r0, r1
   15004:	bge	1502c <__assert_fail@plt+0x3fe0>
   15008:	ldr	r0, [sp, #4]
   1500c:	ldr	r1, [sp]
   15010:	add	r0, r0, r1, lsl #3
   15014:	ldr	r0, [r0, #4]
   15018:	bl	13104 <__assert_fail@plt+0x20b8>
   1501c:	ldr	r0, [sp]
   15020:	add	r0, r0, #1
   15024:	str	r0, [sp]
   15028:	b	14ff0 <__assert_fail@plt+0x3fa4>
   1502c:	ldr	r0, [sp, #4]
   15030:	ldr	r0, [r0, #4]
   15034:	movw	r1, #53720	; 0xd1d8
   15038:	movt	r1, #2
   1503c:	cmp	r0, r1
   15040:	beq	1506c <__assert_fail@plt+0x4020>
   15044:	ldr	r0, [sp, #4]
   15048:	ldr	r0, [r0, #4]
   1504c:	bl	13104 <__assert_fail@plt+0x20b8>
   15050:	movw	r0, #256	; 0x100
   15054:	movw	r1, #53500	; 0xd0fc
   15058:	movt	r1, #2
   1505c:	str	r0, [r1]
   15060:	movw	r0, #53720	; 0xd1d8
   15064:	movt	r0, #2
   15068:	str	r0, [r1, #4]
   1506c:	ldr	r0, [sp, #4]
   15070:	movw	r1, #53500	; 0xd0fc
   15074:	movt	r1, #2
   15078:	cmp	r0, r1
   1507c:	beq	1509c <__assert_fail@plt+0x4050>
   15080:	ldr	r0, [sp, #4]
   15084:	bl	13104 <__assert_fail@plt+0x20b8>
   15088:	movw	r0, #53492	; 0xd0f4
   1508c:	movt	r0, #2
   15090:	movw	r1, #53500	; 0xd0fc
   15094:	movt	r1, #2
   15098:	str	r1, [r0]
   1509c:	movw	r0, #53496	; 0xd0f8
   150a0:	movt	r0, #2
   150a4:	movw	r1, #1
   150a8:	str	r1, [r0]
   150ac:	mov	sp, fp
   150b0:	pop	{fp, pc}
   150b4:	push	{fp, lr}
   150b8:	mov	fp, sp
   150bc:	sub	sp, sp, #8
   150c0:	str	r0, [sp, #4]
   150c4:	str	r1, [sp]
   150c8:	ldr	r0, [sp, #4]
   150cc:	ldr	r1, [sp]
   150d0:	mvn	r2, #0
   150d4:	movw	r3, #53672	; 0xd1a8
   150d8:	movt	r3, #2
   150dc:	bl	150e8 <__assert_fail@plt+0x409c>
   150e0:	mov	sp, fp
   150e4:	pop	{fp, pc}
   150e8:	push	{r4, r5, r6, sl, fp, lr}
   150ec:	add	fp, sp, #16
   150f0:	sub	sp, sp, #80	; 0x50
   150f4:	str	r0, [fp, #-20]	; 0xffffffec
   150f8:	str	r1, [fp, #-24]	; 0xffffffe8
   150fc:	str	r2, [fp, #-28]	; 0xffffffe4
   15100:	str	r3, [fp, #-32]	; 0xffffffe0
   15104:	bl	10f80 <__errno_location@plt>
   15108:	ldr	r1, [pc, #672]	; 153b0 <__assert_fail@plt+0x4364>
   1510c:	ldr	r0, [r0]
   15110:	str	r0, [fp, #-36]	; 0xffffffdc
   15114:	movw	r0, #53492	; 0xd0f4
   15118:	movt	r0, #2
   1511c:	ldr	r0, [r0]
   15120:	str	r0, [fp, #-40]	; 0xffffffd8
   15124:	str	r1, [fp, #-44]	; 0xffffffd4
   15128:	ldr	r0, [fp, #-20]	; 0xffffffec
   1512c:	movw	r1, #0
   15130:	cmp	r1, r0
   15134:	bgt	15148 <__assert_fail@plt+0x40fc>
   15138:	ldr	r0, [fp, #-20]	; 0xffffffec
   1513c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15140:	cmp	r0, r1
   15144:	blt	1514c <__assert_fail@plt+0x4100>
   15148:	bl	11028 <abort@plt>
   1514c:	movw	r0, #53496	; 0xd0f8
   15150:	movt	r0, #2
   15154:	ldr	r0, [r0]
   15158:	ldr	r1, [fp, #-20]	; 0xffffffec
   1515c:	cmp	r0, r1
   15160:	bgt	15258 <__assert_fail@plt+0x420c>
   15164:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15168:	movw	r1, #53500	; 0xd0fc
   1516c:	movt	r1, #2
   15170:	cmp	r0, r1
   15174:	movw	r0, #0
   15178:	moveq	r0, #1
   1517c:	and	r0, r0, #1
   15180:	strb	r0, [fp, #-45]	; 0xffffffd3
   15184:	movw	r0, #53496	; 0xd0f8
   15188:	movt	r0, #2
   1518c:	ldr	r0, [r0]
   15190:	str	r0, [sp, #44]	; 0x2c
   15194:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15198:	tst	r0, #1
   1519c:	beq	151ac <__assert_fail@plt+0x4160>
   151a0:	movw	r0, #0
   151a4:	str	r0, [sp, #24]
   151a8:	b	151b4 <__assert_fail@plt+0x4168>
   151ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151b0:	str	r0, [sp, #24]
   151b4:	ldr	r0, [sp, #24]
   151b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   151bc:	movw	r2, #53496	; 0xd0f8
   151c0:	movt	r2, #2
   151c4:	ldr	r2, [r2]
   151c8:	sub	r1, r1, r2
   151cc:	add	r2, r1, #1
   151d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   151d4:	add	r1, sp, #44	; 0x2c
   151d8:	movw	ip, #8
   151dc:	str	ip, [sp]
   151e0:	bl	16560 <__assert_fail@plt+0x5514>
   151e4:	str	r0, [fp, #-40]	; 0xffffffd8
   151e8:	movw	r1, #53492	; 0xd0f4
   151ec:	movt	r1, #2
   151f0:	str	r0, [r1]
   151f4:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   151f8:	tst	r0, #1
   151fc:	beq	1521c <__assert_fail@plt+0x41d0>
   15200:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15204:	movw	r1, #53500	; 0xd0fc
   15208:	movt	r1, #2
   1520c:	ldr	r2, [r1]
   15210:	str	r2, [r0]
   15214:	ldr	r1, [r1, #4]
   15218:	str	r1, [r0, #4]
   1521c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15220:	movw	r1, #53496	; 0xd0f8
   15224:	movt	r1, #2
   15228:	ldr	r1, [r1]
   1522c:	add	r0, r0, r1, lsl #3
   15230:	ldr	r2, [sp, #44]	; 0x2c
   15234:	sub	r1, r2, r1
   15238:	lsl	r2, r1, #3
   1523c:	movw	r1, #0
   15240:	and	r1, r1, #255	; 0xff
   15244:	bl	10f98 <memset@plt>
   15248:	ldr	r0, [sp, #44]	; 0x2c
   1524c:	movw	r1, #53496	; 0xd0f8
   15250:	movt	r1, #2
   15254:	str	r0, [r1]
   15258:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1525c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15260:	ldr	r0, [r0, r1, lsl #3]
   15264:	str	r0, [sp, #40]	; 0x28
   15268:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1526c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15270:	add	r0, r0, r1, lsl #3
   15274:	ldr	r0, [r0, #4]
   15278:	str	r0, [sp, #36]	; 0x24
   1527c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15280:	ldr	r0, [r0, #4]
   15284:	orr	r0, r0, #1
   15288:	str	r0, [sp, #32]
   1528c:	ldr	r0, [sp, #36]	; 0x24
   15290:	ldr	r1, [sp, #40]	; 0x28
   15294:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15298:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1529c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   152a0:	ldr	ip, [ip]
   152a4:	ldr	lr, [sp, #32]
   152a8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   152ac:	add	r4, r4, #8
   152b0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   152b4:	ldr	r5, [r5, #40]	; 0x28
   152b8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   152bc:	ldr	r6, [r6, #44]	; 0x2c
   152c0:	str	ip, [sp]
   152c4:	str	lr, [sp, #4]
   152c8:	str	r4, [sp, #8]
   152cc:	str	r5, [sp, #12]
   152d0:	str	r6, [sp, #16]
   152d4:	bl	136d8 <__assert_fail@plt+0x268c>
   152d8:	str	r0, [sp, #28]
   152dc:	ldr	r0, [sp, #40]	; 0x28
   152e0:	ldr	r1, [sp, #28]
   152e4:	cmp	r0, r1
   152e8:	bhi	15390 <__assert_fail@plt+0x4344>
   152ec:	ldr	r0, [sp, #28]
   152f0:	add	r0, r0, #1
   152f4:	str	r0, [sp, #40]	; 0x28
   152f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   152fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   15300:	add	r1, r1, r2, lsl #3
   15304:	str	r0, [r1]
   15308:	ldr	r0, [sp, #36]	; 0x24
   1530c:	movw	r1, #53720	; 0xd1d8
   15310:	movt	r1, #2
   15314:	cmp	r0, r1
   15318:	beq	15324 <__assert_fail@plt+0x42d8>
   1531c:	ldr	r0, [sp, #36]	; 0x24
   15320:	bl	13104 <__assert_fail@plt+0x20b8>
   15324:	ldr	r0, [sp, #40]	; 0x28
   15328:	bl	16324 <__assert_fail@plt+0x52d8>
   1532c:	mov	r1, r0
   15330:	str	r0, [sp, #36]	; 0x24
   15334:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15338:	ldr	r2, [fp, #-20]	; 0xffffffec
   1533c:	add	r0, r0, r2, lsl #3
   15340:	str	r1, [r0, #4]
   15344:	ldr	r0, [sp, #36]	; 0x24
   15348:	ldr	r1, [sp, #40]	; 0x28
   1534c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15350:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15354:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15358:	ldr	ip, [ip]
   1535c:	ldr	lr, [sp, #32]
   15360:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15364:	add	r4, r4, #8
   15368:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1536c:	ldr	r5, [r5, #40]	; 0x28
   15370:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15374:	ldr	r6, [r6, #44]	; 0x2c
   15378:	str	ip, [sp]
   1537c:	str	lr, [sp, #4]
   15380:	str	r4, [sp, #8]
   15384:	str	r5, [sp, #12]
   15388:	str	r6, [sp, #16]
   1538c:	bl	136d8 <__assert_fail@plt+0x268c>
   15390:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15394:	str	r0, [sp, #20]
   15398:	bl	10f80 <__errno_location@plt>
   1539c:	ldr	r1, [sp, #20]
   153a0:	str	r1, [r0]
   153a4:	ldr	r0, [sp, #36]	; 0x24
   153a8:	sub	sp, fp, #16
   153ac:	pop	{r4, r5, r6, sl, fp, pc}
   153b0:	svcvc	0x00ffffff
   153b4:	push	{fp, lr}
   153b8:	mov	fp, sp
   153bc:	sub	sp, sp, #16
   153c0:	str	r0, [fp, #-4]
   153c4:	str	r1, [sp, #8]
   153c8:	str	r2, [sp, #4]
   153cc:	ldr	r0, [fp, #-4]
   153d0:	ldr	r1, [sp, #8]
   153d4:	ldr	r2, [sp, #4]
   153d8:	movw	r3, #53672	; 0xd1a8
   153dc:	movt	r3, #2
   153e0:	bl	150e8 <__assert_fail@plt+0x409c>
   153e4:	mov	sp, fp
   153e8:	pop	{fp, pc}
   153ec:	push	{fp, lr}
   153f0:	mov	fp, sp
   153f4:	sub	sp, sp, #8
   153f8:	str	r0, [sp, #4]
   153fc:	ldr	r1, [sp, #4]
   15400:	movw	r0, #0
   15404:	bl	150b4 <__assert_fail@plt+0x4068>
   15408:	mov	sp, fp
   1540c:	pop	{fp, pc}
   15410:	push	{fp, lr}
   15414:	mov	fp, sp
   15418:	sub	sp, sp, #8
   1541c:	str	r0, [sp, #4]
   15420:	str	r1, [sp]
   15424:	ldr	r1, [sp, #4]
   15428:	ldr	r2, [sp]
   1542c:	movw	r0, #0
   15430:	bl	153b4 <__assert_fail@plt+0x4368>
   15434:	mov	sp, fp
   15438:	pop	{fp, pc}
   1543c:	push	{fp, lr}
   15440:	mov	fp, sp
   15444:	sub	sp, sp, #64	; 0x40
   15448:	str	r0, [fp, #-4]
   1544c:	str	r1, [fp, #-8]
   15450:	str	r2, [fp, #-12]
   15454:	ldr	r1, [fp, #-8]
   15458:	add	r0, sp, #4
   1545c:	bl	1547c <__assert_fail@plt+0x4430>
   15460:	ldr	r0, [fp, #-4]
   15464:	ldr	r1, [fp, #-12]
   15468:	mvn	r2, #0
   1546c:	add	r3, sp, #4
   15470:	bl	150e8 <__assert_fail@plt+0x409c>
   15474:	mov	sp, fp
   15478:	pop	{fp, pc}
   1547c:	push	{fp, lr}
   15480:	mov	fp, sp
   15484:	sub	sp, sp, #8
   15488:	str	r1, [sp, #4]
   1548c:	mov	r1, r0
   15490:	str	r0, [sp]
   15494:	mov	r0, r1
   15498:	movw	r1, #0
   1549c:	and	r1, r1, #255	; 0xff
   154a0:	movw	r2, #48	; 0x30
   154a4:	bl	10f98 <memset@plt>
   154a8:	ldr	r0, [sp, #4]
   154ac:	cmp	r0, #10
   154b0:	bne	154b8 <__assert_fail@plt+0x446c>
   154b4:	bl	11028 <abort@plt>
   154b8:	ldr	r0, [sp, #4]
   154bc:	ldr	r1, [sp]
   154c0:	str	r0, [r1]
   154c4:	mov	sp, fp
   154c8:	pop	{fp, pc}
   154cc:	push	{fp, lr}
   154d0:	mov	fp, sp
   154d4:	sub	sp, sp, #64	; 0x40
   154d8:	str	r0, [fp, #-4]
   154dc:	str	r1, [fp, #-8]
   154e0:	str	r2, [fp, #-12]
   154e4:	str	r3, [fp, #-16]
   154e8:	ldr	r1, [fp, #-8]
   154ec:	mov	r0, sp
   154f0:	bl	1547c <__assert_fail@plt+0x4430>
   154f4:	ldr	r0, [fp, #-4]
   154f8:	ldr	r1, [fp, #-12]
   154fc:	ldr	r2, [fp, #-16]
   15500:	mov	r3, sp
   15504:	bl	150e8 <__assert_fail@plt+0x409c>
   15508:	mov	sp, fp
   1550c:	pop	{fp, pc}
   15510:	push	{fp, lr}
   15514:	mov	fp, sp
   15518:	sub	sp, sp, #8
   1551c:	str	r0, [sp, #4]
   15520:	str	r1, [sp]
   15524:	ldr	r1, [sp, #4]
   15528:	ldr	r2, [sp]
   1552c:	movw	r0, #0
   15530:	bl	1543c <__assert_fail@plt+0x43f0>
   15534:	mov	sp, fp
   15538:	pop	{fp, pc}
   1553c:	push	{fp, lr}
   15540:	mov	fp, sp
   15544:	sub	sp, sp, #16
   15548:	str	r0, [fp, #-4]
   1554c:	str	r1, [sp, #8]
   15550:	str	r2, [sp, #4]
   15554:	ldr	r1, [fp, #-4]
   15558:	ldr	r2, [sp, #8]
   1555c:	ldr	r3, [sp, #4]
   15560:	movw	r0, #0
   15564:	bl	154cc <__assert_fail@plt+0x4480>
   15568:	mov	sp, fp
   1556c:	pop	{fp, pc}
   15570:	push	{fp, lr}
   15574:	mov	fp, sp
   15578:	sub	sp, sp, #72	; 0x48
   1557c:	movw	r3, #53672	; 0xd1a8
   15580:	movt	r3, #2
   15584:	str	r0, [fp, #-4]
   15588:	str	r1, [fp, #-8]
   1558c:	strb	r2, [fp, #-9]
   15590:	add	r0, sp, #12
   15594:	mov	r1, r0
   15598:	str	r0, [sp, #8]
   1559c:	mov	r0, r1
   155a0:	mov	r1, r3
   155a4:	movw	r2, #48	; 0x30
   155a8:	bl	10e60 <memcpy@plt>
   155ac:	ldr	r0, [sp, #8]
   155b0:	ldrb	r1, [fp, #-9]
   155b4:	movw	r2, #1
   155b8:	bl	13480 <__assert_fail@plt+0x2434>
   155bc:	ldr	r1, [fp, #-4]
   155c0:	ldr	r2, [fp, #-8]
   155c4:	movw	r3, #0
   155c8:	str	r0, [sp, #4]
   155cc:	mov	r0, r3
   155d0:	add	r3, sp, #12
   155d4:	bl	150e8 <__assert_fail@plt+0x409c>
   155d8:	mov	sp, fp
   155dc:	pop	{fp, pc}
   155e0:	push	{fp, lr}
   155e4:	mov	fp, sp
   155e8:	sub	sp, sp, #8
   155ec:	str	r0, [sp, #4]
   155f0:	strb	r1, [sp, #3]
   155f4:	ldr	r0, [sp, #4]
   155f8:	mvn	r1, #0
   155fc:	ldrb	r2, [sp, #3]
   15600:	bl	15570 <__assert_fail@plt+0x4524>
   15604:	mov	sp, fp
   15608:	pop	{fp, pc}
   1560c:	push	{fp, lr}
   15610:	mov	fp, sp
   15614:	sub	sp, sp, #8
   15618:	str	r0, [sp, #4]
   1561c:	ldr	r0, [sp, #4]
   15620:	movw	r1, #58	; 0x3a
   15624:	and	r1, r1, #255	; 0xff
   15628:	bl	155e0 <__assert_fail@plt+0x4594>
   1562c:	mov	sp, fp
   15630:	pop	{fp, pc}
   15634:	push	{fp, lr}
   15638:	mov	fp, sp
   1563c:	sub	sp, sp, #8
   15640:	str	r0, [sp, #4]
   15644:	str	r1, [sp]
   15648:	ldr	r0, [sp, #4]
   1564c:	ldr	r1, [sp]
   15650:	movw	r2, #58	; 0x3a
   15654:	and	r2, r2, #255	; 0xff
   15658:	bl	15570 <__assert_fail@plt+0x4524>
   1565c:	mov	sp, fp
   15660:	pop	{fp, pc}
   15664:	push	{fp, lr}
   15668:	mov	fp, sp
   1566c:	sub	sp, sp, #120	; 0x78
   15670:	str	r0, [fp, #-4]
   15674:	str	r1, [fp, #-8]
   15678:	str	r2, [fp, #-12]
   1567c:	ldr	r1, [fp, #-8]
   15680:	add	r0, sp, #12
   15684:	bl	1547c <__assert_fail@plt+0x4430>
   15688:	add	r0, sp, #60	; 0x3c
   1568c:	mov	r1, r0
   15690:	add	r2, sp, #12
   15694:	str	r0, [sp, #8]
   15698:	mov	r0, r1
   1569c:	mov	r1, r2
   156a0:	movw	r2, #48	; 0x30
   156a4:	bl	10e60 <memcpy@plt>
   156a8:	ldr	r0, [sp, #8]
   156ac:	movw	r1, #58	; 0x3a
   156b0:	and	r1, r1, #255	; 0xff
   156b4:	movw	r2, #1
   156b8:	bl	13480 <__assert_fail@plt+0x2434>
   156bc:	ldr	r1, [fp, #-4]
   156c0:	ldr	r2, [fp, #-12]
   156c4:	str	r0, [sp, #4]
   156c8:	mov	r0, r1
   156cc:	mov	r1, r2
   156d0:	mvn	r2, #0
   156d4:	add	r3, sp, #60	; 0x3c
   156d8:	bl	150e8 <__assert_fail@plt+0x409c>
   156dc:	mov	sp, fp
   156e0:	pop	{fp, pc}
   156e4:	push	{fp, lr}
   156e8:	mov	fp, sp
   156ec:	sub	sp, sp, #24
   156f0:	str	r0, [fp, #-4]
   156f4:	str	r1, [fp, #-8]
   156f8:	str	r2, [sp, #12]
   156fc:	str	r3, [sp, #8]
   15700:	ldr	r0, [fp, #-4]
   15704:	ldr	r1, [fp, #-8]
   15708:	ldr	r2, [sp, #12]
   1570c:	ldr	r3, [sp, #8]
   15710:	mvn	ip, #0
   15714:	str	ip, [sp]
   15718:	bl	15724 <__assert_fail@plt+0x46d8>
   1571c:	mov	sp, fp
   15720:	pop	{fp, pc}
   15724:	push	{fp, lr}
   15728:	mov	fp, sp
   1572c:	sub	sp, sp, #72	; 0x48
   15730:	ldr	ip, [fp, #8]
   15734:	movw	lr, #53672	; 0xd1a8
   15738:	movt	lr, #2
   1573c:	str	r0, [fp, #-4]
   15740:	str	r1, [fp, #-8]
   15744:	str	r2, [fp, #-12]
   15748:	str	r3, [fp, #-16]
   1574c:	add	r0, sp, #8
   15750:	mov	r1, r0
   15754:	str	r0, [sp, #4]
   15758:	mov	r0, r1
   1575c:	mov	r1, lr
   15760:	movw	r2, #48	; 0x30
   15764:	str	ip, [sp]
   15768:	bl	10e60 <memcpy@plt>
   1576c:	ldr	r1, [fp, #-8]
   15770:	ldr	r2, [fp, #-12]
   15774:	ldr	r0, [sp, #4]
   15778:	bl	13580 <__assert_fail@plt+0x2534>
   1577c:	ldr	r0, [fp, #-4]
   15780:	ldr	r1, [fp, #-16]
   15784:	ldr	r2, [fp, #8]
   15788:	add	r3, sp, #8
   1578c:	bl	150e8 <__assert_fail@plt+0x409c>
   15790:	mov	sp, fp
   15794:	pop	{fp, pc}
   15798:	push	{fp, lr}
   1579c:	mov	fp, sp
   157a0:	sub	sp, sp, #16
   157a4:	str	r0, [fp, #-4]
   157a8:	str	r1, [sp, #8]
   157ac:	str	r2, [sp, #4]
   157b0:	ldr	r1, [fp, #-4]
   157b4:	ldr	r2, [sp, #8]
   157b8:	ldr	r3, [sp, #4]
   157bc:	movw	r0, #0
   157c0:	bl	156e4 <__assert_fail@plt+0x4698>
   157c4:	mov	sp, fp
   157c8:	pop	{fp, pc}
   157cc:	push	{fp, lr}
   157d0:	mov	fp, sp
   157d4:	sub	sp, sp, #24
   157d8:	str	r0, [fp, #-4]
   157dc:	str	r1, [fp, #-8]
   157e0:	str	r2, [sp, #12]
   157e4:	str	r3, [sp, #8]
   157e8:	ldr	r1, [fp, #-4]
   157ec:	ldr	r2, [fp, #-8]
   157f0:	ldr	r3, [sp, #12]
   157f4:	ldr	r0, [sp, #8]
   157f8:	movw	ip, #0
   157fc:	str	r0, [sp, #4]
   15800:	mov	r0, ip
   15804:	ldr	ip, [sp, #4]
   15808:	str	ip, [sp]
   1580c:	bl	15724 <__assert_fail@plt+0x46d8>
   15810:	mov	sp, fp
   15814:	pop	{fp, pc}
   15818:	push	{fp, lr}
   1581c:	mov	fp, sp
   15820:	sub	sp, sp, #16
   15824:	str	r0, [fp, #-4]
   15828:	str	r1, [sp, #8]
   1582c:	str	r2, [sp, #4]
   15830:	ldr	r0, [fp, #-4]
   15834:	ldr	r1, [sp, #8]
   15838:	ldr	r2, [sp, #4]
   1583c:	movw	r3, #53508	; 0xd104
   15840:	movt	r3, #2
   15844:	bl	150e8 <__assert_fail@plt+0x409c>
   15848:	mov	sp, fp
   1584c:	pop	{fp, pc}
   15850:	push	{fp, lr}
   15854:	mov	fp, sp
   15858:	sub	sp, sp, #8
   1585c:	str	r0, [sp, #4]
   15860:	str	r1, [sp]
   15864:	ldr	r1, [sp, #4]
   15868:	ldr	r2, [sp]
   1586c:	movw	r0, #0
   15870:	bl	15818 <__assert_fail@plt+0x47cc>
   15874:	mov	sp, fp
   15878:	pop	{fp, pc}
   1587c:	push	{fp, lr}
   15880:	mov	fp, sp
   15884:	sub	sp, sp, #8
   15888:	str	r0, [sp, #4]
   1588c:	str	r1, [sp]
   15890:	ldr	r0, [sp, #4]
   15894:	ldr	r1, [sp]
   15898:	mvn	r2, #0
   1589c:	bl	15818 <__assert_fail@plt+0x47cc>
   158a0:	mov	sp, fp
   158a4:	pop	{fp, pc}
   158a8:	push	{fp, lr}
   158ac:	mov	fp, sp
   158b0:	sub	sp, sp, #8
   158b4:	str	r0, [sp, #4]
   158b8:	ldr	r1, [sp, #4]
   158bc:	movw	r0, #0
   158c0:	bl	1587c <__assert_fail@plt+0x4830>
   158c4:	mov	sp, fp
   158c8:	pop	{fp, pc}
   158cc:	push	{fp, lr}
   158d0:	mov	fp, sp
   158d4:	sub	sp, sp, #24
   158d8:	str	r0, [fp, #-8]
   158dc:	str	r1, [sp, #12]
   158e0:	ldr	r0, [fp, #-8]
   158e4:	bl	10f5c <gettext@plt>
   158e8:	str	r0, [sp, #8]
   158ec:	ldr	r0, [sp, #8]
   158f0:	ldr	r1, [fp, #-8]
   158f4:	cmp	r0, r1
   158f8:	beq	15908 <__assert_fail@plt+0x48bc>
   158fc:	ldr	r0, [sp, #8]
   15900:	str	r0, [fp, #-4]
   15904:	b	159d4 <__assert_fail@plt+0x4988>
   15908:	bl	19540 <__assert_fail@plt+0x84f4>
   1590c:	str	r0, [sp, #4]
   15910:	ldr	r0, [sp, #4]
   15914:	movw	r1, #48480	; 0xbd60
   15918:	movt	r1, #1
   1591c:	bl	191e4 <__assert_fail@plt+0x8198>
   15920:	cmp	r0, #0
   15924:	bne	1595c <__assert_fail@plt+0x4910>
   15928:	ldr	r0, [fp, #-8]
   1592c:	ldrb	r0, [r0]
   15930:	cmp	r0, #96	; 0x60
   15934:	movw	r0, #0
   15938:	moveq	r0, #1
   1593c:	tst	r0, #1
   15940:	movw	r0, #48490	; 0xbd6a
   15944:	movt	r0, #1
   15948:	movw	r1, #48486	; 0xbd66
   1594c:	movt	r1, #1
   15950:	movne	r0, r1
   15954:	str	r0, [fp, #-4]
   15958:	b	159d4 <__assert_fail@plt+0x4988>
   1595c:	ldr	r0, [sp, #4]
   15960:	movw	r1, #48494	; 0xbd6e
   15964:	movt	r1, #1
   15968:	bl	191e4 <__assert_fail@plt+0x8198>
   1596c:	cmp	r0, #0
   15970:	bne	159a8 <__assert_fail@plt+0x495c>
   15974:	ldr	r0, [fp, #-8]
   15978:	ldrb	r0, [r0]
   1597c:	cmp	r0, #96	; 0x60
   15980:	movw	r0, #0
   15984:	moveq	r0, #1
   15988:	tst	r0, #1
   1598c:	movw	r0, #48506	; 0xbd7a
   15990:	movt	r0, #1
   15994:	movw	r1, #48502	; 0xbd76
   15998:	movt	r1, #1
   1599c:	movne	r0, r1
   159a0:	str	r0, [fp, #-4]
   159a4:	b	159d4 <__assert_fail@plt+0x4988>
   159a8:	ldr	r0, [sp, #12]
   159ac:	cmp	r0, #9
   159b0:	movw	r0, #0
   159b4:	moveq	r0, #1
   159b8:	tst	r0, #1
   159bc:	movw	r0, #48308	; 0xbcb4
   159c0:	movt	r0, #1
   159c4:	movw	r1, #48476	; 0xbd5c
   159c8:	movt	r1, #1
   159cc:	movne	r0, r1
   159d0:	str	r0, [fp, #-4]
   159d4:	ldr	r0, [fp, #-4]
   159d8:	mov	sp, fp
   159dc:	pop	{fp, pc}
   159e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159e4:	add	fp, sp, #28
   159e8:	sub	sp, sp, #196	; 0xc4
   159ec:	ldr	ip, [fp, #12]
   159f0:	ldr	lr, [fp, #8]
   159f4:	str	r0, [fp, #-32]	; 0xffffffe0
   159f8:	str	r1, [fp, #-36]	; 0xffffffdc
   159fc:	str	r2, [fp, #-40]	; 0xffffffd8
   15a00:	str	r3, [fp, #-44]	; 0xffffffd4
   15a04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15a08:	movw	r1, #0
   15a0c:	cmp	r0, r1
   15a10:	beq	15a44 <__assert_fail@plt+0x49f8>
   15a14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15a1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15a20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a24:	movw	ip, #48596	; 0xbdd4
   15a28:	movt	ip, #1
   15a2c:	str	r1, [fp, #-48]	; 0xffffffd0
   15a30:	mov	r1, ip
   15a34:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15a38:	str	ip, [sp]
   15a3c:	bl	10f74 <fprintf@plt>
   15a40:	b	15a5c <__assert_fail@plt+0x4a10>
   15a44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15a4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a50:	movw	r1, #48608	; 0xbde0
   15a54:	movt	r1, #1
   15a58:	bl	10f74 <fprintf@plt>
   15a5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a60:	movw	r1, #48615	; 0xbde7
   15a64:	movt	r1, #1
   15a68:	str	r0, [fp, #-52]	; 0xffffffcc
   15a6c:	mov	r0, r1
   15a70:	bl	10f5c <gettext@plt>
   15a74:	movw	r1, #49333	; 0xc0b5
   15a78:	movt	r1, #1
   15a7c:	movw	r3, #2022	; 0x7e6
   15a80:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15a84:	str	r0, [fp, #-56]	; 0xffffffc8
   15a88:	mov	r0, r2
   15a8c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15a90:	bl	10f74 <fprintf@plt>
   15a94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15a98:	movw	r2, #47232	; 0xb880
   15a9c:	movt	r2, #1
   15aa0:	str	r0, [fp, #-60]	; 0xffffffc4
   15aa4:	mov	r0, r2
   15aa8:	str	r2, [fp, #-64]	; 0xffffffc0
   15aac:	bl	10e00 <fputs_unlocked@plt>
   15ab0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15ab4:	movw	r2, #48619	; 0xbdeb
   15ab8:	movt	r2, #1
   15abc:	str	r0, [fp, #-68]	; 0xffffffbc
   15ac0:	mov	r0, r2
   15ac4:	str	r1, [fp, #-72]	; 0xffffffb8
   15ac8:	bl	10f5c <gettext@plt>
   15acc:	movw	r2, #48790	; 0xbe96
   15ad0:	movt	r2, #1
   15ad4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15ad8:	str	r0, [fp, #-76]	; 0xffffffb4
   15adc:	mov	r0, r1
   15ae0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15ae4:	bl	10f74 <fprintf@plt>
   15ae8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15aec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15af0:	str	r0, [fp, #-80]	; 0xffffffb0
   15af4:	mov	r0, r2
   15af8:	bl	10e00 <fputs_unlocked@plt>
   15afc:	ldr	r1, [fp, #12]
   15b00:	cmp	r1, #9
   15b04:	str	r1, [fp, #-84]	; 0xffffffac
   15b08:	bhi	15f24 <__assert_fail@plt+0x4ed8>
   15b0c:	add	r0, pc, #8
   15b10:	ldr	r1, [fp, #-84]	; 0xffffffac
   15b14:	ldr	r0, [r0, r1, lsl #2]
   15b18:	mov	pc, r0
   15b1c:	andeq	r5, r1, r4, asr #22
   15b20:	andeq	r5, r1, r8, asr #22
   15b24:	andeq	r5, r1, r0, lsl #23
   15b28:	andeq	r5, r1, r0, asr #23
   15b2c:	andeq	r5, r1, r8, lsl ip
   15b30:	andeq	r5, r1, ip, ror ip
   15b34:	andeq	r5, r1, ip, ror #25
   15b38:	andeq	r5, r1, r8, ror #26
   15b3c:	strdeq	r5, [r1], -r0
   15b40:	andeq	r5, r1, r4, lsl #29
   15b44:	b	15fc0 <__assert_fail@plt+0x4f74>
   15b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b4c:	movw	r1, #48824	; 0xbeb8
   15b50:	movt	r1, #1
   15b54:	str	r0, [fp, #-88]	; 0xffffffa8
   15b58:	mov	r0, r1
   15b5c:	bl	10f5c <gettext@plt>
   15b60:	ldr	r1, [fp, #8]
   15b64:	ldr	r2, [r1]
   15b68:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15b6c:	str	r0, [fp, #-92]	; 0xffffffa4
   15b70:	mov	r0, r1
   15b74:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15b78:	bl	10f74 <fprintf@plt>
   15b7c:	b	15fc0 <__assert_fail@plt+0x4f74>
   15b80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b84:	movw	r1, #48840	; 0xbec8
   15b88:	movt	r1, #1
   15b8c:	str	r0, [fp, #-96]	; 0xffffffa0
   15b90:	mov	r0, r1
   15b94:	bl	10f5c <gettext@plt>
   15b98:	ldr	r1, [fp, #8]
   15b9c:	ldr	r2, [r1]
   15ba0:	ldr	r1, [fp, #8]
   15ba4:	ldr	r3, [r1, #4]
   15ba8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15bac:	str	r0, [fp, #-100]	; 0xffffff9c
   15bb0:	mov	r0, r1
   15bb4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15bb8:	bl	10f74 <fprintf@plt>
   15bbc:	b	15fc0 <__assert_fail@plt+0x4f74>
   15bc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bc4:	movw	r1, #48863	; 0xbedf
   15bc8:	movt	r1, #1
   15bcc:	str	r0, [fp, #-104]	; 0xffffff98
   15bd0:	mov	r0, r1
   15bd4:	bl	10f5c <gettext@plt>
   15bd8:	ldr	r1, [fp, #8]
   15bdc:	ldr	r2, [r1]
   15be0:	ldr	r1, [fp, #8]
   15be4:	ldr	r3, [r1, #4]
   15be8:	ldr	r1, [fp, #8]
   15bec:	ldr	r1, [r1, #8]
   15bf0:	ldr	ip, [fp, #-104]	; 0xffffff98
   15bf4:	str	r0, [fp, #-108]	; 0xffffff94
   15bf8:	mov	r0, ip
   15bfc:	ldr	lr, [fp, #-108]	; 0xffffff94
   15c00:	str	r1, [sp, #112]	; 0x70
   15c04:	mov	r1, lr
   15c08:	ldr	r4, [sp, #112]	; 0x70
   15c0c:	str	r4, [sp]
   15c10:	bl	10f74 <fprintf@plt>
   15c14:	b	15fc0 <__assert_fail@plt+0x4f74>
   15c18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c1c:	movw	r1, #48891	; 0xbefb
   15c20:	movt	r1, #1
   15c24:	str	r0, [sp, #108]	; 0x6c
   15c28:	mov	r0, r1
   15c2c:	bl	10f5c <gettext@plt>
   15c30:	ldr	r1, [fp, #8]
   15c34:	ldr	r2, [r1]
   15c38:	ldr	r1, [fp, #8]
   15c3c:	ldr	r3, [r1, #4]
   15c40:	ldr	r1, [fp, #8]
   15c44:	ldr	r1, [r1, #8]
   15c48:	ldr	ip, [fp, #8]
   15c4c:	ldr	ip, [ip, #12]
   15c50:	ldr	lr, [sp, #108]	; 0x6c
   15c54:	str	r0, [sp, #104]	; 0x68
   15c58:	mov	r0, lr
   15c5c:	ldr	r4, [sp, #104]	; 0x68
   15c60:	str	r1, [sp, #100]	; 0x64
   15c64:	mov	r1, r4
   15c68:	ldr	r5, [sp, #100]	; 0x64
   15c6c:	str	r5, [sp]
   15c70:	str	ip, [sp, #4]
   15c74:	bl	10f74 <fprintf@plt>
   15c78:	b	15fc0 <__assert_fail@plt+0x4f74>
   15c7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c80:	movw	r1, #48923	; 0xbf1b
   15c84:	movt	r1, #1
   15c88:	str	r0, [sp, #96]	; 0x60
   15c8c:	mov	r0, r1
   15c90:	bl	10f5c <gettext@plt>
   15c94:	ldr	r1, [fp, #8]
   15c98:	ldr	r2, [r1]
   15c9c:	ldr	r1, [fp, #8]
   15ca0:	ldr	r3, [r1, #4]
   15ca4:	ldr	r1, [fp, #8]
   15ca8:	ldr	r1, [r1, #8]
   15cac:	ldr	ip, [fp, #8]
   15cb0:	ldr	ip, [ip, #12]
   15cb4:	ldr	lr, [fp, #8]
   15cb8:	ldr	lr, [lr, #16]
   15cbc:	ldr	r4, [sp, #96]	; 0x60
   15cc0:	str	r0, [sp, #92]	; 0x5c
   15cc4:	mov	r0, r4
   15cc8:	ldr	r5, [sp, #92]	; 0x5c
   15ccc:	str	r1, [sp, #88]	; 0x58
   15cd0:	mov	r1, r5
   15cd4:	ldr	r6, [sp, #88]	; 0x58
   15cd8:	str	r6, [sp]
   15cdc:	str	ip, [sp, #4]
   15ce0:	str	lr, [sp, #8]
   15ce4:	bl	10f74 <fprintf@plt>
   15ce8:	b	15fc0 <__assert_fail@plt+0x4f74>
   15cec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15cf0:	movw	r1, #48959	; 0xbf3f
   15cf4:	movt	r1, #1
   15cf8:	str	r0, [sp, #84]	; 0x54
   15cfc:	mov	r0, r1
   15d00:	bl	10f5c <gettext@plt>
   15d04:	ldr	r1, [fp, #8]
   15d08:	ldr	r2, [r1]
   15d0c:	ldr	r1, [fp, #8]
   15d10:	ldr	r3, [r1, #4]
   15d14:	ldr	r1, [fp, #8]
   15d18:	ldr	r1, [r1, #8]
   15d1c:	ldr	ip, [fp, #8]
   15d20:	ldr	ip, [ip, #12]
   15d24:	ldr	lr, [fp, #8]
   15d28:	ldr	lr, [lr, #16]
   15d2c:	ldr	r4, [fp, #8]
   15d30:	ldr	r4, [r4, #20]
   15d34:	ldr	r5, [sp, #84]	; 0x54
   15d38:	str	r0, [sp, #80]	; 0x50
   15d3c:	mov	r0, r5
   15d40:	ldr	r6, [sp, #80]	; 0x50
   15d44:	str	r1, [sp, #76]	; 0x4c
   15d48:	mov	r1, r6
   15d4c:	ldr	r7, [sp, #76]	; 0x4c
   15d50:	str	r7, [sp]
   15d54:	str	ip, [sp, #4]
   15d58:	str	lr, [sp, #8]
   15d5c:	str	r4, [sp, #12]
   15d60:	bl	10f74 <fprintf@plt>
   15d64:	b	15fc0 <__assert_fail@plt+0x4f74>
   15d68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d6c:	movw	r1, #48999	; 0xbf67
   15d70:	movt	r1, #1
   15d74:	str	r0, [sp, #72]	; 0x48
   15d78:	mov	r0, r1
   15d7c:	bl	10f5c <gettext@plt>
   15d80:	ldr	r1, [fp, #8]
   15d84:	ldr	r2, [r1]
   15d88:	ldr	r1, [fp, #8]
   15d8c:	ldr	r3, [r1, #4]
   15d90:	ldr	r1, [fp, #8]
   15d94:	ldr	r1, [r1, #8]
   15d98:	ldr	ip, [fp, #8]
   15d9c:	ldr	ip, [ip, #12]
   15da0:	ldr	lr, [fp, #8]
   15da4:	ldr	lr, [lr, #16]
   15da8:	ldr	r4, [fp, #8]
   15dac:	ldr	r4, [r4, #20]
   15db0:	ldr	r5, [fp, #8]
   15db4:	ldr	r5, [r5, #24]
   15db8:	ldr	r6, [sp, #72]	; 0x48
   15dbc:	str	r0, [sp, #68]	; 0x44
   15dc0:	mov	r0, r6
   15dc4:	ldr	r7, [sp, #68]	; 0x44
   15dc8:	str	r1, [sp, #64]	; 0x40
   15dcc:	mov	r1, r7
   15dd0:	ldr	r8, [sp, #64]	; 0x40
   15dd4:	str	r8, [sp]
   15dd8:	str	ip, [sp, #4]
   15ddc:	str	lr, [sp, #8]
   15de0:	str	r4, [sp, #12]
   15de4:	str	r5, [sp, #16]
   15de8:	bl	10f74 <fprintf@plt>
   15dec:	b	15fc0 <__assert_fail@plt+0x4f74>
   15df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15df4:	movw	r1, #49043	; 0xbf93
   15df8:	movt	r1, #1
   15dfc:	str	r0, [sp, #60]	; 0x3c
   15e00:	mov	r0, r1
   15e04:	bl	10f5c <gettext@plt>
   15e08:	ldr	r1, [fp, #8]
   15e0c:	ldr	r2, [r1]
   15e10:	ldr	r1, [fp, #8]
   15e14:	ldr	r3, [r1, #4]
   15e18:	ldr	r1, [fp, #8]
   15e1c:	ldr	r1, [r1, #8]
   15e20:	ldr	ip, [fp, #8]
   15e24:	ldr	ip, [ip, #12]
   15e28:	ldr	lr, [fp, #8]
   15e2c:	ldr	lr, [lr, #16]
   15e30:	ldr	r4, [fp, #8]
   15e34:	ldr	r4, [r4, #20]
   15e38:	ldr	r5, [fp, #8]
   15e3c:	ldr	r5, [r5, #24]
   15e40:	ldr	r6, [fp, #8]
   15e44:	ldr	r6, [r6, #28]
   15e48:	ldr	r7, [sp, #60]	; 0x3c
   15e4c:	str	r0, [sp, #56]	; 0x38
   15e50:	mov	r0, r7
   15e54:	ldr	r8, [sp, #56]	; 0x38
   15e58:	str	r1, [sp, #52]	; 0x34
   15e5c:	mov	r1, r8
   15e60:	ldr	r9, [sp, #52]	; 0x34
   15e64:	str	r9, [sp]
   15e68:	str	ip, [sp, #4]
   15e6c:	str	lr, [sp, #8]
   15e70:	str	r4, [sp, #12]
   15e74:	str	r5, [sp, #16]
   15e78:	str	r6, [sp, #20]
   15e7c:	bl	10f74 <fprintf@plt>
   15e80:	b	15fc0 <__assert_fail@plt+0x4f74>
   15e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e88:	movw	r1, #49091	; 0xbfc3
   15e8c:	movt	r1, #1
   15e90:	str	r0, [sp, #48]	; 0x30
   15e94:	mov	r0, r1
   15e98:	bl	10f5c <gettext@plt>
   15e9c:	ldr	r1, [fp, #8]
   15ea0:	ldr	r2, [r1]
   15ea4:	ldr	r1, [fp, #8]
   15ea8:	ldr	r3, [r1, #4]
   15eac:	ldr	r1, [fp, #8]
   15eb0:	ldr	r1, [r1, #8]
   15eb4:	ldr	ip, [fp, #8]
   15eb8:	ldr	ip, [ip, #12]
   15ebc:	ldr	lr, [fp, #8]
   15ec0:	ldr	lr, [lr, #16]
   15ec4:	ldr	r4, [fp, #8]
   15ec8:	ldr	r4, [r4, #20]
   15ecc:	ldr	r5, [fp, #8]
   15ed0:	ldr	r5, [r5, #24]
   15ed4:	ldr	r6, [fp, #8]
   15ed8:	ldr	r6, [r6, #28]
   15edc:	ldr	r7, [fp, #8]
   15ee0:	ldr	r7, [r7, #32]
   15ee4:	ldr	r8, [sp, #48]	; 0x30
   15ee8:	str	r0, [sp, #44]	; 0x2c
   15eec:	mov	r0, r8
   15ef0:	ldr	r9, [sp, #44]	; 0x2c
   15ef4:	str	r1, [sp, #40]	; 0x28
   15ef8:	mov	r1, r9
   15efc:	ldr	sl, [sp, #40]	; 0x28
   15f00:	str	sl, [sp]
   15f04:	str	ip, [sp, #4]
   15f08:	str	lr, [sp, #8]
   15f0c:	str	r4, [sp, #12]
   15f10:	str	r5, [sp, #16]
   15f14:	str	r6, [sp, #20]
   15f18:	str	r7, [sp, #24]
   15f1c:	bl	10f74 <fprintf@plt>
   15f20:	b	15fc0 <__assert_fail@plt+0x4f74>
   15f24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f28:	movw	r1, #49143	; 0xbff7
   15f2c:	movt	r1, #1
   15f30:	str	r0, [sp, #36]	; 0x24
   15f34:	mov	r0, r1
   15f38:	bl	10f5c <gettext@plt>
   15f3c:	ldr	r1, [fp, #8]
   15f40:	ldr	r2, [r1]
   15f44:	ldr	r1, [fp, #8]
   15f48:	ldr	r3, [r1, #4]
   15f4c:	ldr	r1, [fp, #8]
   15f50:	ldr	r1, [r1, #8]
   15f54:	ldr	ip, [fp, #8]
   15f58:	ldr	ip, [ip, #12]
   15f5c:	ldr	lr, [fp, #8]
   15f60:	ldr	lr, [lr, #16]
   15f64:	ldr	r4, [fp, #8]
   15f68:	ldr	r4, [r4, #20]
   15f6c:	ldr	r5, [fp, #8]
   15f70:	ldr	r5, [r5, #24]
   15f74:	ldr	r6, [fp, #8]
   15f78:	ldr	r6, [r6, #28]
   15f7c:	ldr	r7, [fp, #8]
   15f80:	ldr	r7, [r7, #32]
   15f84:	ldr	r8, [sp, #36]	; 0x24
   15f88:	str	r0, [sp, #32]
   15f8c:	mov	r0, r8
   15f90:	ldr	r9, [sp, #32]
   15f94:	str	r1, [sp, #28]
   15f98:	mov	r1, r9
   15f9c:	ldr	sl, [sp, #28]
   15fa0:	str	sl, [sp]
   15fa4:	str	ip, [sp, #4]
   15fa8:	str	lr, [sp, #8]
   15fac:	str	r4, [sp, #12]
   15fb0:	str	r5, [sp, #16]
   15fb4:	str	r6, [sp, #20]
   15fb8:	str	r7, [sp, #24]
   15fbc:	bl	10f74 <fprintf@plt>
   15fc0:	sub	sp, fp, #28
   15fc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15fc8:	push	{fp, lr}
   15fcc:	mov	fp, sp
   15fd0:	sub	sp, sp, #32
   15fd4:	ldr	ip, [fp, #8]
   15fd8:	str	r0, [fp, #-4]
   15fdc:	str	r1, [fp, #-8]
   15fe0:	str	r2, [fp, #-12]
   15fe4:	str	r3, [sp, #16]
   15fe8:	movw	r0, #0
   15fec:	str	r0, [sp, #12]
   15ff0:	ldr	r0, [fp, #8]
   15ff4:	ldr	r1, [sp, #12]
   15ff8:	add	r0, r0, r1, lsl #2
   15ffc:	ldr	r0, [r0]
   16000:	movw	r1, #0
   16004:	cmp	r0, r1
   16008:	beq	16020 <__assert_fail@plt+0x4fd4>
   1600c:	b	16010 <__assert_fail@plt+0x4fc4>
   16010:	ldr	r0, [sp, #12]
   16014:	add	r0, r0, #1
   16018:	str	r0, [sp, #12]
   1601c:	b	15ff0 <__assert_fail@plt+0x4fa4>
   16020:	ldr	r0, [fp, #-4]
   16024:	ldr	r1, [fp, #-8]
   16028:	ldr	r2, [fp, #-12]
   1602c:	ldr	r3, [sp, #16]
   16030:	ldr	ip, [fp, #8]
   16034:	ldr	lr, [sp, #12]
   16038:	str	ip, [sp]
   1603c:	str	lr, [sp, #4]
   16040:	bl	159e0 <__assert_fail@plt+0x4994>
   16044:	mov	sp, fp
   16048:	pop	{fp, pc}
   1604c:	push	{fp, lr}
   16050:	mov	fp, sp
   16054:	sub	sp, sp, #80	; 0x50
   16058:	ldr	ip, [fp, #8]
   1605c:	str	ip, [fp, #-4]
   16060:	str	r0, [fp, #-8]
   16064:	str	r1, [fp, #-12]
   16068:	str	r2, [fp, #-16]
   1606c:	str	r3, [fp, #-20]	; 0xffffffec
   16070:	movw	r0, #0
   16074:	str	r0, [fp, #-24]	; 0xffffffe8
   16078:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1607c:	cmp	r0, #10
   16080:	movw	r0, #0
   16084:	str	r0, [sp, #12]
   16088:	bcs	160c0 <__assert_fail@plt+0x5074>
   1608c:	ldr	r0, [fp, #-4]
   16090:	add	r1, r0, #4
   16094:	str	r1, [fp, #-4]
   16098:	ldr	r0, [r0]
   1609c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   160a0:	add	r2, sp, #16
   160a4:	add	r1, r2, r1, lsl #2
   160a8:	str	r0, [r1]
   160ac:	movw	r1, #0
   160b0:	cmp	r0, r1
   160b4:	movw	r0, #0
   160b8:	movne	r0, #1
   160bc:	str	r0, [sp, #12]
   160c0:	ldr	r0, [sp, #12]
   160c4:	tst	r0, #1
   160c8:	beq	160e0 <__assert_fail@plt+0x5094>
   160cc:	b	160d0 <__assert_fail@plt+0x5084>
   160d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160d4:	add	r0, r0, #1
   160d8:	str	r0, [fp, #-24]	; 0xffffffe8
   160dc:	b	16078 <__assert_fail@plt+0x502c>
   160e0:	add	r0, sp, #16
   160e4:	ldr	r1, [fp, #-8]
   160e8:	ldr	r2, [fp, #-12]
   160ec:	ldr	r3, [fp, #-16]
   160f0:	ldr	ip, [fp, #-20]	; 0xffffffec
   160f4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   160f8:	str	r0, [sp, #8]
   160fc:	mov	r0, r1
   16100:	mov	r1, r2
   16104:	mov	r2, r3
   16108:	mov	r3, ip
   1610c:	ldr	ip, [sp, #8]
   16110:	str	ip, [sp]
   16114:	str	lr, [sp, #4]
   16118:	bl	159e0 <__assert_fail@plt+0x4994>
   1611c:	mov	sp, fp
   16120:	pop	{fp, pc}
   16124:	push	{fp, lr}
   16128:	mov	fp, sp
   1612c:	sub	sp, sp, #24
   16130:	str	r0, [fp, #-4]
   16134:	str	r1, [fp, #-8]
   16138:	str	r2, [sp, #12]
   1613c:	str	r3, [sp, #8]
   16140:	add	r0, fp, #8
   16144:	str	r0, [sp, #4]
   16148:	ldr	r0, [fp, #-4]
   1614c:	ldr	r1, [fp, #-8]
   16150:	ldr	r2, [sp, #12]
   16154:	ldr	r3, [sp, #8]
   16158:	ldr	ip, [sp, #4]
   1615c:	mov	lr, sp
   16160:	str	ip, [lr]
   16164:	bl	1604c <__assert_fail@plt+0x5000>
   16168:	add	r0, sp, #4
   1616c:	mov	sp, fp
   16170:	pop	{fp, pc}
   16174:	push	{fp, lr}
   16178:	mov	fp, sp
   1617c:	sub	sp, sp, #16
   16180:	movw	r0, #53588	; 0xd154
   16184:	movt	r0, #2
   16188:	ldr	r1, [r0]
   1618c:	movw	r0, #47232	; 0xb880
   16190:	movt	r0, #1
   16194:	bl	10e00 <fputs_unlocked@plt>
   16198:	movw	r1, #49203	; 0xc033
   1619c:	movt	r1, #1
   161a0:	str	r0, [fp, #-4]
   161a4:	mov	r0, r1
   161a8:	bl	10f5c <gettext@plt>
   161ac:	movw	r1, #49223	; 0xc047
   161b0:	movt	r1, #1
   161b4:	bl	10e30 <printf@plt>
   161b8:	movw	r1, #49245	; 0xc05d
   161bc:	movt	r1, #1
   161c0:	str	r0, [sp, #8]
   161c4:	mov	r0, r1
   161c8:	bl	10f5c <gettext@plt>
   161cc:	movw	r1, #46734	; 0xb68e
   161d0:	movt	r1, #1
   161d4:	movw	r2, #47041	; 0xb7c1
   161d8:	movt	r2, #1
   161dc:	bl	10e30 <printf@plt>
   161e0:	movw	r1, #49265	; 0xc071
   161e4:	movt	r1, #1
   161e8:	str	r0, [sp, #4]
   161ec:	mov	r0, r1
   161f0:	bl	10f5c <gettext@plt>
   161f4:	movw	r1, #49304	; 0xc098
   161f8:	movt	r1, #1
   161fc:	bl	10e30 <printf@plt>
   16200:	mov	sp, fp
   16204:	pop	{fp, pc}
   16208:	push	{fp, lr}
   1620c:	mov	fp, sp
   16210:	sub	sp, sp, #16
   16214:	str	r0, [fp, #-4]
   16218:	str	r1, [sp, #8]
   1621c:	str	r2, [sp, #4]
   16220:	ldr	r0, [fp, #-4]
   16224:	ldr	r1, [sp, #8]
   16228:	ldr	r2, [sp, #4]
   1622c:	bl	16238 <__assert_fail@plt+0x51ec>
   16230:	mov	sp, fp
   16234:	pop	{fp, pc}
   16238:	push	{fp, lr}
   1623c:	mov	fp, sp
   16240:	sub	sp, sp, #16
   16244:	str	r0, [fp, #-4]
   16248:	str	r1, [sp, #8]
   1624c:	str	r2, [sp, #4]
   16250:	ldr	r0, [fp, #-4]
   16254:	ldr	r1, [sp, #8]
   16258:	ldr	r2, [sp, #4]
   1625c:	bl	1964c <__assert_fail@plt+0x8600>
   16260:	str	r0, [sp]
   16264:	ldr	r0, [sp]
   16268:	movw	r1, #0
   1626c:	cmp	r0, r1
   16270:	bne	162a0 <__assert_fail@plt+0x5254>
   16274:	ldr	r0, [fp, #-4]
   16278:	movw	r1, #0
   1627c:	cmp	r0, r1
   16280:	beq	1629c <__assert_fail@plt+0x5250>
   16284:	ldr	r0, [sp, #8]
   16288:	cmp	r0, #0
   1628c:	beq	162a0 <__assert_fail@plt+0x5254>
   16290:	ldr	r0, [sp, #4]
   16294:	cmp	r0, #0
   16298:	beq	162a0 <__assert_fail@plt+0x5254>
   1629c:	bl	18fe4 <__assert_fail@plt+0x7f98>
   162a0:	ldr	r0, [sp]
   162a4:	mov	sp, fp
   162a8:	pop	{fp, pc}
   162ac:	push	{fp, lr}
   162b0:	mov	fp, sp
   162b4:	sub	sp, sp, #8
   162b8:	str	r0, [sp, #4]
   162bc:	ldr	r0, [sp, #4]
   162c0:	bl	190d0 <__assert_fail@plt+0x8084>
   162c4:	bl	162d0 <__assert_fail@plt+0x5284>
   162c8:	mov	sp, fp
   162cc:	pop	{fp, pc}
   162d0:	push	{fp, lr}
   162d4:	mov	fp, sp
   162d8:	sub	sp, sp, #8
   162dc:	str	r0, [sp, #4]
   162e0:	ldr	r0, [sp, #4]
   162e4:	movw	r1, #0
   162e8:	cmp	r0, r1
   162ec:	bne	162f4 <__assert_fail@plt+0x52a8>
   162f0:	bl	18fe4 <__assert_fail@plt+0x7f98>
   162f4:	ldr	r0, [sp, #4]
   162f8:	mov	sp, fp
   162fc:	pop	{fp, pc}
   16300:	push	{fp, lr}
   16304:	mov	fp, sp
   16308:	sub	sp, sp, #8
   1630c:	str	r0, [sp, #4]
   16310:	ldr	r0, [sp, #4]
   16314:	bl	19388 <__assert_fail@plt+0x833c>
   16318:	bl	162d0 <__assert_fail@plt+0x5284>
   1631c:	mov	sp, fp
   16320:	pop	{fp, pc}
   16324:	push	{fp, lr}
   16328:	mov	fp, sp
   1632c:	sub	sp, sp, #8
   16330:	str	r0, [sp, #4]
   16334:	ldr	r0, [sp, #4]
   16338:	bl	162ac <__assert_fail@plt+0x5260>
   1633c:	mov	sp, fp
   16340:	pop	{fp, pc}
   16344:	push	{fp, lr}
   16348:	mov	fp, sp
   1634c:	sub	sp, sp, #16
   16350:	str	r0, [fp, #-4]
   16354:	str	r1, [sp, #8]
   16358:	ldr	r0, [fp, #-4]
   1635c:	ldr	r1, [sp, #8]
   16360:	bl	19140 <__assert_fail@plt+0x80f4>
   16364:	str	r0, [sp, #4]
   16368:	ldr	r0, [sp, #4]
   1636c:	movw	r1, #0
   16370:	cmp	r0, r1
   16374:	bne	16398 <__assert_fail@plt+0x534c>
   16378:	ldr	r0, [fp, #-4]
   1637c:	movw	r1, #0
   16380:	cmp	r0, r1
   16384:	beq	16394 <__assert_fail@plt+0x5348>
   16388:	ldr	r0, [sp, #8]
   1638c:	cmp	r0, #0
   16390:	beq	16398 <__assert_fail@plt+0x534c>
   16394:	bl	18fe4 <__assert_fail@plt+0x7f98>
   16398:	ldr	r0, [sp, #4]
   1639c:	mov	sp, fp
   163a0:	pop	{fp, pc}
   163a4:	push	{fp, lr}
   163a8:	mov	fp, sp
   163ac:	sub	sp, sp, #8
   163b0:	str	r0, [sp, #4]
   163b4:	str	r1, [sp]
   163b8:	ldr	r0, [sp, #4]
   163bc:	ldr	r1, [sp]
   163c0:	bl	193c8 <__assert_fail@plt+0x837c>
   163c4:	bl	162d0 <__assert_fail@plt+0x5284>
   163c8:	mov	sp, fp
   163cc:	pop	{fp, pc}
   163d0:	push	{fp, lr}
   163d4:	mov	fp, sp
   163d8:	sub	sp, sp, #16
   163dc:	str	r0, [fp, #-4]
   163e0:	str	r1, [sp, #8]
   163e4:	str	r2, [sp, #4]
   163e8:	ldr	r0, [fp, #-4]
   163ec:	ldr	r1, [sp, #8]
   163f0:	ldr	r2, [sp, #4]
   163f4:	bl	194c0 <__assert_fail@plt+0x8474>
   163f8:	bl	162d0 <__assert_fail@plt+0x5284>
   163fc:	mov	sp, fp
   16400:	pop	{fp, pc}
   16404:	push	{fp, lr}
   16408:	mov	fp, sp
   1640c:	sub	sp, sp, #8
   16410:	str	r0, [sp, #4]
   16414:	str	r1, [sp]
   16418:	ldr	r1, [sp, #4]
   1641c:	ldr	r2, [sp]
   16420:	movw	r0, #0
   16424:	bl	16238 <__assert_fail@plt+0x51ec>
   16428:	mov	sp, fp
   1642c:	pop	{fp, pc}
   16430:	push	{fp, lr}
   16434:	mov	fp, sp
   16438:	sub	sp, sp, #8
   1643c:	str	r0, [sp, #4]
   16440:	str	r1, [sp]
   16444:	ldr	r1, [sp, #4]
   16448:	ldr	r2, [sp]
   1644c:	movw	r0, #0
   16450:	bl	163d0 <__assert_fail@plt+0x5384>
   16454:	mov	sp, fp
   16458:	pop	{fp, pc}
   1645c:	push	{fp, lr}
   16460:	mov	fp, sp
   16464:	sub	sp, sp, #8
   16468:	str	r0, [sp, #4]
   1646c:	str	r1, [sp]
   16470:	ldr	r0, [sp, #4]
   16474:	ldr	r1, [sp]
   16478:	movw	r2, #1
   1647c:	bl	16488 <__assert_fail@plt+0x543c>
   16480:	mov	sp, fp
   16484:	pop	{fp, pc}
   16488:	push	{fp, lr}
   1648c:	mov	fp, sp
   16490:	sub	sp, sp, #16
   16494:	str	r0, [fp, #-4]
   16498:	str	r1, [sp, #8]
   1649c:	str	r2, [sp, #4]
   164a0:	ldr	r0, [sp, #8]
   164a4:	ldr	r0, [r0]
   164a8:	str	r0, [sp]
   164ac:	ldr	r0, [fp, #-4]
   164b0:	movw	r1, #0
   164b4:	cmp	r0, r1
   164b8:	bne	16504 <__assert_fail@plt+0x54b8>
   164bc:	ldr	r0, [sp]
   164c0:	cmp	r0, #0
   164c4:	bne	16500 <__assert_fail@plt+0x54b4>
   164c8:	ldr	r0, [sp, #4]
   164cc:	movw	r1, #64	; 0x40
   164d0:	udiv	r0, r1, r0
   164d4:	str	r0, [sp]
   164d8:	ldr	r0, [sp]
   164dc:	cmp	r0, #0
   164e0:	movw	r0, #0
   164e4:	movne	r0, #1
   164e8:	mvn	r1, #0
   164ec:	eor	r0, r0, r1
   164f0:	and	r0, r0, #1
   164f4:	ldr	r1, [sp]
   164f8:	add	r0, r1, r0
   164fc:	str	r0, [sp]
   16500:	b	16534 <__assert_fail@plt+0x54e8>
   16504:	ldr	r0, [sp]
   16508:	ldr	r1, [sp]
   1650c:	lsr	r1, r1, #1
   16510:	add	r1, r1, #1
   16514:	adds	r0, r0, r1
   16518:	mov	r1, #0
   1651c:	adc	r1, r1, #0
   16520:	str	r0, [sp]
   16524:	tst	r1, #1
   16528:	beq	16530 <__assert_fail@plt+0x54e4>
   1652c:	bl	18fe4 <__assert_fail@plt+0x7f98>
   16530:	b	16534 <__assert_fail@plt+0x54e8>
   16534:	ldr	r0, [fp, #-4]
   16538:	ldr	r1, [sp]
   1653c:	ldr	r2, [sp, #4]
   16540:	bl	16238 <__assert_fail@plt+0x51ec>
   16544:	str	r0, [fp, #-4]
   16548:	ldr	r0, [sp]
   1654c:	ldr	r1, [sp, #8]
   16550:	str	r0, [r1]
   16554:	ldr	r0, [fp, #-4]
   16558:	mov	sp, fp
   1655c:	pop	{fp, pc}
   16560:	push	{fp, lr}
   16564:	mov	fp, sp
   16568:	sub	sp, sp, #216	; 0xd8
   1656c:	ldr	ip, [fp, #8]
   16570:	str	r0, [fp, #-4]
   16574:	str	r1, [fp, #-8]
   16578:	str	r2, [fp, #-12]
   1657c:	str	r3, [fp, #-16]
   16580:	ldr	r0, [fp, #-8]
   16584:	ldr	r0, [r0]
   16588:	str	r0, [fp, #-20]	; 0xffffffec
   1658c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16590:	ldr	r1, [fp, #-20]	; 0xffffffec
   16594:	asr	r1, r1, #1
   16598:	add	r1, r0, r1
   1659c:	mov	r2, #1
   165a0:	cmp	r1, r0
   165a4:	movwvc	r2, #0
   165a8:	str	r1, [fp, #-24]	; 0xffffffe8
   165ac:	tst	r2, #1
   165b0:	beq	165bc <__assert_fail@plt+0x5570>
   165b4:	ldr	r0, [pc, #4036]	; 17580 <__assert_fail@plt+0x6534>
   165b8:	str	r0, [fp, #-24]	; 0xffffffe8
   165bc:	ldr	r0, [fp, #-16]
   165c0:	movw	r1, #0
   165c4:	cmp	r1, r0
   165c8:	bgt	165e4 <__assert_fail@plt+0x5598>
   165cc:	ldr	r0, [fp, #-16]
   165d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165d4:	cmp	r0, r1
   165d8:	bge	165e4 <__assert_fail@plt+0x5598>
   165dc:	ldr	r0, [fp, #-16]
   165e0:	str	r0, [fp, #-24]	; 0xffffffe8
   165e4:	b	169bc <__assert_fail@plt+0x5970>
   165e8:	b	165ec <__assert_fail@plt+0x55a0>
   165ec:	ldr	r0, [fp, #8]
   165f0:	cmp	r0, #0
   165f4:	bge	16708 <__assert_fail@plt+0x56bc>
   165f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165fc:	cmp	r0, #0
   16600:	bge	1668c <__assert_fail@plt+0x5640>
   16604:	b	16608 <__assert_fail@plt+0x55bc>
   16608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1660c:	ldr	r1, [fp, #8]
   16610:	movw	r2, #127	; 0x7f
   16614:	sdiv	r1, r2, r1
   16618:	cmp	r0, r1
   1661c:	blt	167a8 <__assert_fail@plt+0x575c>
   16620:	b	167c0 <__assert_fail@plt+0x5774>
   16624:	b	16628 <__assert_fail@plt+0x55dc>
   16628:	ldr	r0, [pc, #4084]	; 17624 <__assert_fail@plt+0x65d8>
   1662c:	ldr	r1, [fp, #8]
   16630:	cmp	r1, r0
   16634:	blt	1664c <__assert_fail@plt+0x5600>
   16638:	b	16658 <__assert_fail@plt+0x560c>
   1663c:	ldr	r0, [fp, #8]
   16640:	movw	r1, #0
   16644:	cmp	r1, r0
   16648:	bge	16658 <__assert_fail@plt+0x560c>
   1664c:	movw	r0, #0
   16650:	str	r0, [fp, #-36]	; 0xffffffdc
   16654:	b	16670 <__assert_fail@plt+0x5624>
   16658:	ldr	r0, [fp, #8]
   1665c:	movw	r1, #0
   16660:	sub	r0, r1, r0
   16664:	movw	r1, #127	; 0x7f
   16668:	sdiv	r0, r1, r0
   1666c:	str	r0, [fp, #-36]	; 0xffffffdc
   16670:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16674:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16678:	mvn	r2, #0
   1667c:	sub	r1, r2, r1
   16680:	cmp	r0, r1
   16684:	ble	167a8 <__assert_fail@plt+0x575c>
   16688:	b	167c0 <__assert_fail@plt+0x5774>
   1668c:	b	16690 <__assert_fail@plt+0x5644>
   16690:	b	166ec <__assert_fail@plt+0x56a0>
   16694:	b	166ec <__assert_fail@plt+0x56a0>
   16698:	ldr	r0, [fp, #8]
   1669c:	cmn	r0, #1
   166a0:	bne	166ec <__assert_fail@plt+0x56a0>
   166a4:	b	166a8 <__assert_fail@plt+0x565c>
   166a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166ac:	mvn	r1, #127	; 0x7f
   166b0:	add	r0, r0, r1
   166b4:	movw	r1, #0
   166b8:	cmp	r1, r0
   166bc:	blt	167a8 <__assert_fail@plt+0x575c>
   166c0:	b	167c0 <__assert_fail@plt+0x5774>
   166c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166c8:	movw	r1, #0
   166cc:	cmp	r1, r0
   166d0:	bge	167c0 <__assert_fail@plt+0x5774>
   166d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166d8:	sub	r0, r0, #1
   166dc:	movw	r1, #127	; 0x7f
   166e0:	cmp	r1, r0
   166e4:	blt	167a8 <__assert_fail@plt+0x575c>
   166e8:	b	167c0 <__assert_fail@plt+0x5774>
   166ec:	ldr	r0, [fp, #8]
   166f0:	mvn	r1, #127	; 0x7f
   166f4:	sdiv	r0, r1, r0
   166f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166fc:	cmp	r0, r1
   16700:	blt	167a8 <__assert_fail@plt+0x575c>
   16704:	b	167c0 <__assert_fail@plt+0x5774>
   16708:	ldr	r0, [fp, #8]
   1670c:	cmp	r0, #0
   16710:	bne	16718 <__assert_fail@plt+0x56cc>
   16714:	b	167c0 <__assert_fail@plt+0x5774>
   16718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1671c:	cmp	r0, #0
   16720:	bge	16790 <__assert_fail@plt+0x5744>
   16724:	b	16728 <__assert_fail@plt+0x56dc>
   16728:	b	16774 <__assert_fail@plt+0x5728>
   1672c:	b	16774 <__assert_fail@plt+0x5728>
   16730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16734:	cmn	r0, #1
   16738:	bne	16774 <__assert_fail@plt+0x5728>
   1673c:	b	16740 <__assert_fail@plt+0x56f4>
   16740:	ldr	r0, [fp, #8]
   16744:	mvn	r1, #127	; 0x7f
   16748:	add	r0, r0, r1
   1674c:	movw	r1, #0
   16750:	cmp	r1, r0
   16754:	blt	167a8 <__assert_fail@plt+0x575c>
   16758:	b	167c0 <__assert_fail@plt+0x5774>
   1675c:	ldr	r0, [fp, #8]
   16760:	sub	r0, r0, #1
   16764:	movw	r1, #127	; 0x7f
   16768:	cmp	r1, r0
   1676c:	blt	167a8 <__assert_fail@plt+0x575c>
   16770:	b	167c0 <__assert_fail@plt+0x5774>
   16774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16778:	mvn	r1, #127	; 0x7f
   1677c:	sdiv	r0, r1, r0
   16780:	ldr	r1, [fp, #8]
   16784:	cmp	r0, r1
   16788:	blt	167a8 <__assert_fail@plt+0x575c>
   1678c:	b	167c0 <__assert_fail@plt+0x5774>
   16790:	ldr	r0, [fp, #8]
   16794:	movw	r1, #127	; 0x7f
   16798:	sdiv	r0, r1, r0
   1679c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167a0:	cmp	r0, r1
   167a4:	bge	167c0 <__assert_fail@plt+0x5774>
   167a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167ac:	ldr	r1, [fp, #8]
   167b0:	mul	r0, r0, r1
   167b4:	sxtb	r0, r0
   167b8:	str	r0, [fp, #-28]	; 0xffffffe4
   167bc:	b	17984 <__assert_fail@plt+0x6938>
   167c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167c4:	ldr	r1, [fp, #8]
   167c8:	mul	r0, r0, r1
   167cc:	sxtb	r0, r0
   167d0:	str	r0, [fp, #-28]	; 0xffffffe4
   167d4:	b	17990 <__assert_fail@plt+0x6944>
   167d8:	ldr	r0, [fp, #8]
   167dc:	cmp	r0, #0
   167e0:	bge	168f0 <__assert_fail@plt+0x58a4>
   167e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167e8:	cmp	r0, #0
   167ec:	bge	16878 <__assert_fail@plt+0x582c>
   167f0:	b	167f4 <__assert_fail@plt+0x57a8>
   167f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167f8:	ldr	r1, [fp, #8]
   167fc:	movw	r2, #255	; 0xff
   16800:	sdiv	r1, r2, r1
   16804:	cmp	r0, r1
   16808:	blt	1698c <__assert_fail@plt+0x5940>
   1680c:	b	169a4 <__assert_fail@plt+0x5958>
   16810:	b	16814 <__assert_fail@plt+0x57c8>
   16814:	ldr	r0, [pc, #3592]	; 17624 <__assert_fail@plt+0x65d8>
   16818:	ldr	r1, [fp, #8]
   1681c:	cmp	r1, r0
   16820:	blt	16838 <__assert_fail@plt+0x57ec>
   16824:	b	16844 <__assert_fail@plt+0x57f8>
   16828:	ldr	r0, [fp, #8]
   1682c:	movw	r1, #0
   16830:	cmp	r1, r0
   16834:	bge	16844 <__assert_fail@plt+0x57f8>
   16838:	movw	r0, #0
   1683c:	str	r0, [fp, #-40]	; 0xffffffd8
   16840:	b	1685c <__assert_fail@plt+0x5810>
   16844:	ldr	r0, [fp, #8]
   16848:	movw	r1, #0
   1684c:	sub	r0, r1, r0
   16850:	movw	r1, #255	; 0xff
   16854:	sdiv	r0, r1, r0
   16858:	str	r0, [fp, #-40]	; 0xffffffd8
   1685c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16860:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16864:	mvn	r2, #0
   16868:	sub	r1, r2, r1
   1686c:	cmp	r0, r1
   16870:	ble	1698c <__assert_fail@plt+0x5940>
   16874:	b	169a4 <__assert_fail@plt+0x5958>
   16878:	b	1687c <__assert_fail@plt+0x5830>
   1687c:	b	168d4 <__assert_fail@plt+0x5888>
   16880:	b	168d4 <__assert_fail@plt+0x5888>
   16884:	ldr	r0, [fp, #8]
   16888:	cmn	r0, #1
   1688c:	bne	168d4 <__assert_fail@plt+0x5888>
   16890:	b	16894 <__assert_fail@plt+0x5848>
   16894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16898:	add	r0, r0, #0
   1689c:	movw	r1, #0
   168a0:	cmp	r1, r0
   168a4:	blt	1698c <__assert_fail@plt+0x5940>
   168a8:	b	169a4 <__assert_fail@plt+0x5958>
   168ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168b0:	movw	r1, #0
   168b4:	cmp	r1, r0
   168b8:	bge	169a4 <__assert_fail@plt+0x5958>
   168bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168c0:	sub	r0, r0, #1
   168c4:	mvn	r1, #0
   168c8:	cmp	r1, r0
   168cc:	blt	1698c <__assert_fail@plt+0x5940>
   168d0:	b	169a4 <__assert_fail@plt+0x5958>
   168d4:	ldr	r0, [fp, #8]
   168d8:	movw	r1, #0
   168dc:	sdiv	r0, r1, r0
   168e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168e4:	cmp	r0, r1
   168e8:	blt	1698c <__assert_fail@plt+0x5940>
   168ec:	b	169a4 <__assert_fail@plt+0x5958>
   168f0:	ldr	r0, [fp, #8]
   168f4:	cmp	r0, #0
   168f8:	bne	16900 <__assert_fail@plt+0x58b4>
   168fc:	b	169a4 <__assert_fail@plt+0x5958>
   16900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16904:	cmp	r0, #0
   16908:	bge	16974 <__assert_fail@plt+0x5928>
   1690c:	b	16910 <__assert_fail@plt+0x58c4>
   16910:	b	16958 <__assert_fail@plt+0x590c>
   16914:	b	16958 <__assert_fail@plt+0x590c>
   16918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1691c:	cmn	r0, #1
   16920:	bne	16958 <__assert_fail@plt+0x590c>
   16924:	b	16928 <__assert_fail@plt+0x58dc>
   16928:	ldr	r0, [fp, #8]
   1692c:	add	r0, r0, #0
   16930:	movw	r1, #0
   16934:	cmp	r1, r0
   16938:	blt	1698c <__assert_fail@plt+0x5940>
   1693c:	b	169a4 <__assert_fail@plt+0x5958>
   16940:	ldr	r0, [fp, #8]
   16944:	sub	r0, r0, #1
   16948:	mvn	r1, #0
   1694c:	cmp	r1, r0
   16950:	blt	1698c <__assert_fail@plt+0x5940>
   16954:	b	169a4 <__assert_fail@plt+0x5958>
   16958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1695c:	movw	r1, #0
   16960:	sdiv	r0, r1, r0
   16964:	ldr	r1, [fp, #8]
   16968:	cmp	r0, r1
   1696c:	blt	1698c <__assert_fail@plt+0x5940>
   16970:	b	169a4 <__assert_fail@plt+0x5958>
   16974:	ldr	r0, [fp, #8]
   16978:	movw	r1, #255	; 0xff
   1697c:	sdiv	r0, r1, r0
   16980:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16984:	cmp	r0, r1
   16988:	bge	169a4 <__assert_fail@plt+0x5958>
   1698c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16990:	ldr	r1, [fp, #8]
   16994:	mul	r0, r0, r1
   16998:	and	r0, r0, #255	; 0xff
   1699c:	str	r0, [fp, #-28]	; 0xffffffe4
   169a0:	b	17984 <__assert_fail@plt+0x6938>
   169a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169a8:	ldr	r1, [fp, #8]
   169ac:	mul	r0, r0, r1
   169b0:	and	r0, r0, #255	; 0xff
   169b4:	str	r0, [fp, #-28]	; 0xffffffe4
   169b8:	b	17990 <__assert_fail@plt+0x6944>
   169bc:	b	16d94 <__assert_fail@plt+0x5d48>
   169c0:	b	169c4 <__assert_fail@plt+0x5978>
   169c4:	ldr	r0, [fp, #8]
   169c8:	cmp	r0, #0
   169cc:	bge	16ae0 <__assert_fail@plt+0x5a94>
   169d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169d4:	cmp	r0, #0
   169d8:	bge	16a64 <__assert_fail@plt+0x5a18>
   169dc:	b	169e0 <__assert_fail@plt+0x5994>
   169e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169e4:	ldr	r1, [fp, #8]
   169e8:	movw	r2, #32767	; 0x7fff
   169ec:	sdiv	r1, r2, r1
   169f0:	cmp	r0, r1
   169f4:	blt	16b80 <__assert_fail@plt+0x5b34>
   169f8:	b	16b98 <__assert_fail@plt+0x5b4c>
   169fc:	b	16a00 <__assert_fail@plt+0x59b4>
   16a00:	ldr	r0, [pc, #3100]	; 17624 <__assert_fail@plt+0x65d8>
   16a04:	ldr	r1, [fp, #8]
   16a08:	cmp	r1, r0
   16a0c:	blt	16a24 <__assert_fail@plt+0x59d8>
   16a10:	b	16a30 <__assert_fail@plt+0x59e4>
   16a14:	ldr	r0, [fp, #8]
   16a18:	movw	r1, #0
   16a1c:	cmp	r1, r0
   16a20:	bge	16a30 <__assert_fail@plt+0x59e4>
   16a24:	movw	r0, #0
   16a28:	str	r0, [fp, #-44]	; 0xffffffd4
   16a2c:	b	16a48 <__assert_fail@plt+0x59fc>
   16a30:	ldr	r0, [fp, #8]
   16a34:	movw	r1, #0
   16a38:	sub	r0, r1, r0
   16a3c:	movw	r1, #32767	; 0x7fff
   16a40:	sdiv	r0, r1, r0
   16a44:	str	r0, [fp, #-44]	; 0xffffffd4
   16a48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a50:	mvn	r2, #0
   16a54:	sub	r1, r2, r1
   16a58:	cmp	r0, r1
   16a5c:	ble	16b80 <__assert_fail@plt+0x5b34>
   16a60:	b	16b98 <__assert_fail@plt+0x5b4c>
   16a64:	b	16a68 <__assert_fail@plt+0x5a1c>
   16a68:	b	16ac4 <__assert_fail@plt+0x5a78>
   16a6c:	b	16ac4 <__assert_fail@plt+0x5a78>
   16a70:	ldr	r0, [fp, #8]
   16a74:	cmn	r0, #1
   16a78:	bne	16ac4 <__assert_fail@plt+0x5a78>
   16a7c:	b	16a80 <__assert_fail@plt+0x5a34>
   16a80:	ldr	r0, [pc, #4068]	; 17a6c <__assert_fail@plt+0x6a20>
   16a84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a88:	add	r0, r1, r0
   16a8c:	movw	r1, #0
   16a90:	cmp	r1, r0
   16a94:	blt	16b80 <__assert_fail@plt+0x5b34>
   16a98:	b	16b98 <__assert_fail@plt+0x5b4c>
   16a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16aa0:	movw	r1, #0
   16aa4:	cmp	r1, r0
   16aa8:	bge	16b98 <__assert_fail@plt+0x5b4c>
   16aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ab0:	sub	r0, r0, #1
   16ab4:	movw	r1, #32767	; 0x7fff
   16ab8:	cmp	r1, r0
   16abc:	blt	16b80 <__assert_fail@plt+0x5b34>
   16ac0:	b	16b98 <__assert_fail@plt+0x5b4c>
   16ac4:	ldr	r0, [pc, #4000]	; 17a6c <__assert_fail@plt+0x6a20>
   16ac8:	ldr	r1, [fp, #8]
   16acc:	sdiv	r0, r0, r1
   16ad0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ad4:	cmp	r0, r1
   16ad8:	blt	16b80 <__assert_fail@plt+0x5b34>
   16adc:	b	16b98 <__assert_fail@plt+0x5b4c>
   16ae0:	ldr	r0, [fp, #8]
   16ae4:	cmp	r0, #0
   16ae8:	bne	16af0 <__assert_fail@plt+0x5aa4>
   16aec:	b	16b98 <__assert_fail@plt+0x5b4c>
   16af0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16af4:	cmp	r0, #0
   16af8:	bge	16b68 <__assert_fail@plt+0x5b1c>
   16afc:	b	16b00 <__assert_fail@plt+0x5ab4>
   16b00:	b	16b4c <__assert_fail@plt+0x5b00>
   16b04:	b	16b4c <__assert_fail@plt+0x5b00>
   16b08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b0c:	cmn	r0, #1
   16b10:	bne	16b4c <__assert_fail@plt+0x5b00>
   16b14:	b	16b18 <__assert_fail@plt+0x5acc>
   16b18:	ldr	r0, [pc, #3916]	; 17a6c <__assert_fail@plt+0x6a20>
   16b1c:	ldr	r1, [fp, #8]
   16b20:	add	r0, r1, r0
   16b24:	movw	r1, #0
   16b28:	cmp	r1, r0
   16b2c:	blt	16b80 <__assert_fail@plt+0x5b34>
   16b30:	b	16b98 <__assert_fail@plt+0x5b4c>
   16b34:	ldr	r0, [fp, #8]
   16b38:	sub	r0, r0, #1
   16b3c:	movw	r1, #32767	; 0x7fff
   16b40:	cmp	r1, r0
   16b44:	blt	16b80 <__assert_fail@plt+0x5b34>
   16b48:	b	16b98 <__assert_fail@plt+0x5b4c>
   16b4c:	ldr	r0, [pc, #3864]	; 17a6c <__assert_fail@plt+0x6a20>
   16b50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b54:	sdiv	r0, r0, r1
   16b58:	ldr	r1, [fp, #8]
   16b5c:	cmp	r0, r1
   16b60:	blt	16b80 <__assert_fail@plt+0x5b34>
   16b64:	b	16b98 <__assert_fail@plt+0x5b4c>
   16b68:	ldr	r0, [fp, #8]
   16b6c:	movw	r1, #32767	; 0x7fff
   16b70:	sdiv	r0, r1, r0
   16b74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b78:	cmp	r0, r1
   16b7c:	bge	16b98 <__assert_fail@plt+0x5b4c>
   16b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b84:	ldr	r1, [fp, #8]
   16b88:	mul	r0, r0, r1
   16b8c:	sxth	r0, r0
   16b90:	str	r0, [fp, #-28]	; 0xffffffe4
   16b94:	b	17984 <__assert_fail@plt+0x6938>
   16b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b9c:	ldr	r1, [fp, #8]
   16ba0:	mul	r0, r0, r1
   16ba4:	sxth	r0, r0
   16ba8:	str	r0, [fp, #-28]	; 0xffffffe4
   16bac:	b	17990 <__assert_fail@plt+0x6944>
   16bb0:	ldr	r0, [fp, #8]
   16bb4:	cmp	r0, #0
   16bb8:	bge	16cc8 <__assert_fail@plt+0x5c7c>
   16bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bc0:	cmp	r0, #0
   16bc4:	bge	16c50 <__assert_fail@plt+0x5c04>
   16bc8:	b	16bcc <__assert_fail@plt+0x5b80>
   16bcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bd0:	ldr	r1, [fp, #8]
   16bd4:	movw	r2, #65535	; 0xffff
   16bd8:	sdiv	r1, r2, r1
   16bdc:	cmp	r0, r1
   16be0:	blt	16d64 <__assert_fail@plt+0x5d18>
   16be4:	b	16d7c <__assert_fail@plt+0x5d30>
   16be8:	b	16bec <__assert_fail@plt+0x5ba0>
   16bec:	ldr	r0, [pc, #2608]	; 17624 <__assert_fail@plt+0x65d8>
   16bf0:	ldr	r1, [fp, #8]
   16bf4:	cmp	r1, r0
   16bf8:	blt	16c10 <__assert_fail@plt+0x5bc4>
   16bfc:	b	16c1c <__assert_fail@plt+0x5bd0>
   16c00:	ldr	r0, [fp, #8]
   16c04:	movw	r1, #0
   16c08:	cmp	r1, r0
   16c0c:	bge	16c1c <__assert_fail@plt+0x5bd0>
   16c10:	movw	r0, #0
   16c14:	str	r0, [fp, #-48]	; 0xffffffd0
   16c18:	b	16c34 <__assert_fail@plt+0x5be8>
   16c1c:	ldr	r0, [fp, #8]
   16c20:	movw	r1, #0
   16c24:	sub	r0, r1, r0
   16c28:	movw	r1, #65535	; 0xffff
   16c2c:	sdiv	r0, r1, r0
   16c30:	str	r0, [fp, #-48]	; 0xffffffd0
   16c34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16c38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c3c:	mvn	r2, #0
   16c40:	sub	r1, r2, r1
   16c44:	cmp	r0, r1
   16c48:	ble	16d64 <__assert_fail@plt+0x5d18>
   16c4c:	b	16d7c <__assert_fail@plt+0x5d30>
   16c50:	b	16c54 <__assert_fail@plt+0x5c08>
   16c54:	b	16cac <__assert_fail@plt+0x5c60>
   16c58:	b	16cac <__assert_fail@plt+0x5c60>
   16c5c:	ldr	r0, [fp, #8]
   16c60:	cmn	r0, #1
   16c64:	bne	16cac <__assert_fail@plt+0x5c60>
   16c68:	b	16c6c <__assert_fail@plt+0x5c20>
   16c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c70:	add	r0, r0, #0
   16c74:	movw	r1, #0
   16c78:	cmp	r1, r0
   16c7c:	blt	16d64 <__assert_fail@plt+0x5d18>
   16c80:	b	16d7c <__assert_fail@plt+0x5d30>
   16c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c88:	movw	r1, #0
   16c8c:	cmp	r1, r0
   16c90:	bge	16d7c <__assert_fail@plt+0x5d30>
   16c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c98:	sub	r0, r0, #1
   16c9c:	mvn	r1, #0
   16ca0:	cmp	r1, r0
   16ca4:	blt	16d64 <__assert_fail@plt+0x5d18>
   16ca8:	b	16d7c <__assert_fail@plt+0x5d30>
   16cac:	ldr	r0, [fp, #8]
   16cb0:	movw	r1, #0
   16cb4:	sdiv	r0, r1, r0
   16cb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cbc:	cmp	r0, r1
   16cc0:	blt	16d64 <__assert_fail@plt+0x5d18>
   16cc4:	b	16d7c <__assert_fail@plt+0x5d30>
   16cc8:	ldr	r0, [fp, #8]
   16ccc:	cmp	r0, #0
   16cd0:	bne	16cd8 <__assert_fail@plt+0x5c8c>
   16cd4:	b	16d7c <__assert_fail@plt+0x5d30>
   16cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cdc:	cmp	r0, #0
   16ce0:	bge	16d4c <__assert_fail@plt+0x5d00>
   16ce4:	b	16ce8 <__assert_fail@plt+0x5c9c>
   16ce8:	b	16d30 <__assert_fail@plt+0x5ce4>
   16cec:	b	16d30 <__assert_fail@plt+0x5ce4>
   16cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16cf4:	cmn	r0, #1
   16cf8:	bne	16d30 <__assert_fail@plt+0x5ce4>
   16cfc:	b	16d00 <__assert_fail@plt+0x5cb4>
   16d00:	ldr	r0, [fp, #8]
   16d04:	add	r0, r0, #0
   16d08:	movw	r1, #0
   16d0c:	cmp	r1, r0
   16d10:	blt	16d64 <__assert_fail@plt+0x5d18>
   16d14:	b	16d7c <__assert_fail@plt+0x5d30>
   16d18:	ldr	r0, [fp, #8]
   16d1c:	sub	r0, r0, #1
   16d20:	mvn	r1, #0
   16d24:	cmp	r1, r0
   16d28:	blt	16d64 <__assert_fail@plt+0x5d18>
   16d2c:	b	16d7c <__assert_fail@plt+0x5d30>
   16d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d34:	movw	r1, #0
   16d38:	sdiv	r0, r1, r0
   16d3c:	ldr	r1, [fp, #8]
   16d40:	cmp	r0, r1
   16d44:	blt	16d64 <__assert_fail@plt+0x5d18>
   16d48:	b	16d7c <__assert_fail@plt+0x5d30>
   16d4c:	ldr	r0, [fp, #8]
   16d50:	movw	r1, #65535	; 0xffff
   16d54:	sdiv	r0, r1, r0
   16d58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d5c:	cmp	r0, r1
   16d60:	bge	16d7c <__assert_fail@plt+0x5d30>
   16d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d68:	ldr	r1, [fp, #8]
   16d6c:	mul	r0, r0, r1
   16d70:	uxth	r0, r0
   16d74:	str	r0, [fp, #-28]	; 0xffffffe4
   16d78:	b	17984 <__assert_fail@plt+0x6938>
   16d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d80:	ldr	r1, [fp, #8]
   16d84:	mul	r0, r0, r1
   16d88:	uxth	r0, r0
   16d8c:	str	r0, [fp, #-28]	; 0xffffffe4
   16d90:	b	17990 <__assert_fail@plt+0x6944>
   16d94:	b	16d98 <__assert_fail@plt+0x5d4c>
   16d98:	b	16d9c <__assert_fail@plt+0x5d50>
   16d9c:	ldr	r0, [fp, #8]
   16da0:	cmp	r0, #0
   16da4:	bge	16ea8 <__assert_fail@plt+0x5e5c>
   16da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dac:	cmp	r0, #0
   16db0:	bge	16e3c <__assert_fail@plt+0x5df0>
   16db4:	b	16db8 <__assert_fail@plt+0x5d6c>
   16db8:	ldr	r0, [pc, #1984]	; 17580 <__assert_fail@plt+0x6534>
   16dbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dc0:	ldr	r2, [fp, #8]
   16dc4:	sdiv	r0, r0, r2
   16dc8:	cmp	r1, r0
   16dcc:	blt	16f38 <__assert_fail@plt+0x5eec>
   16dd0:	b	16f4c <__assert_fail@plt+0x5f00>
   16dd4:	b	16dd8 <__assert_fail@plt+0x5d8c>
   16dd8:	ldr	r0, [pc, #2116]	; 17624 <__assert_fail@plt+0x65d8>
   16ddc:	ldr	r1, [fp, #8]
   16de0:	cmp	r1, r0
   16de4:	blt	16dfc <__assert_fail@plt+0x5db0>
   16de8:	b	16e08 <__assert_fail@plt+0x5dbc>
   16dec:	ldr	r0, [fp, #8]
   16df0:	movw	r1, #0
   16df4:	cmp	r1, r0
   16df8:	bge	16e08 <__assert_fail@plt+0x5dbc>
   16dfc:	movw	r0, #0
   16e00:	str	r0, [fp, #-52]	; 0xffffffcc
   16e04:	b	16e20 <__assert_fail@plt+0x5dd4>
   16e08:	ldr	r0, [pc, #1904]	; 17580 <__assert_fail@plt+0x6534>
   16e0c:	ldr	r1, [fp, #8]
   16e10:	movw	r2, #0
   16e14:	sub	r1, r2, r1
   16e18:	sdiv	r0, r0, r1
   16e1c:	str	r0, [fp, #-52]	; 0xffffffcc
   16e20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16e24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e28:	mvn	r2, #0
   16e2c:	sub	r1, r2, r1
   16e30:	cmp	r0, r1
   16e34:	ble	16f38 <__assert_fail@plt+0x5eec>
   16e38:	b	16f4c <__assert_fail@plt+0x5f00>
   16e3c:	ldr	r0, [fp, #8]
   16e40:	cmn	r0, #1
   16e44:	bne	16e8c <__assert_fail@plt+0x5e40>
   16e48:	b	16e4c <__assert_fail@plt+0x5e00>
   16e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e50:	add	r0, r0, #-2147483648	; 0x80000000
   16e54:	movw	r1, #0
   16e58:	cmp	r1, r0
   16e5c:	blt	16f38 <__assert_fail@plt+0x5eec>
   16e60:	b	16f4c <__assert_fail@plt+0x5f00>
   16e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e68:	movw	r1, #0
   16e6c:	cmp	r1, r0
   16e70:	bge	16f4c <__assert_fail@plt+0x5f00>
   16e74:	ldr	r0, [pc, #1796]	; 17580 <__assert_fail@plt+0x6534>
   16e78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e7c:	sub	r1, r1, #1
   16e80:	cmp	r0, r1
   16e84:	blt	16f38 <__assert_fail@plt+0x5eec>
   16e88:	b	16f4c <__assert_fail@plt+0x5f00>
   16e8c:	ldr	r0, [pc, #4080]	; 17e84 <__assert_fail@plt+0x6e38>
   16e90:	ldr	r1, [fp, #8]
   16e94:	sdiv	r0, r0, r1
   16e98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e9c:	cmp	r0, r1
   16ea0:	blt	16f38 <__assert_fail@plt+0x5eec>
   16ea4:	b	16f4c <__assert_fail@plt+0x5f00>
   16ea8:	ldr	r0, [fp, #8]
   16eac:	cmp	r0, #0
   16eb0:	bne	16eb8 <__assert_fail@plt+0x5e6c>
   16eb4:	b	16f4c <__assert_fail@plt+0x5f00>
   16eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ebc:	cmp	r0, #0
   16ec0:	bge	16f20 <__assert_fail@plt+0x5ed4>
   16ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ec8:	cmn	r0, #1
   16ecc:	bne	16f04 <__assert_fail@plt+0x5eb8>
   16ed0:	b	16ed4 <__assert_fail@plt+0x5e88>
   16ed4:	ldr	r0, [fp, #8]
   16ed8:	add	r0, r0, #-2147483648	; 0x80000000
   16edc:	movw	r1, #0
   16ee0:	cmp	r1, r0
   16ee4:	blt	16f38 <__assert_fail@plt+0x5eec>
   16ee8:	b	16f4c <__assert_fail@plt+0x5f00>
   16eec:	ldr	r0, [pc, #1676]	; 17580 <__assert_fail@plt+0x6534>
   16ef0:	ldr	r1, [fp, #8]
   16ef4:	sub	r1, r1, #1
   16ef8:	cmp	r0, r1
   16efc:	blt	16f38 <__assert_fail@plt+0x5eec>
   16f00:	b	16f4c <__assert_fail@plt+0x5f00>
   16f04:	ldr	r0, [pc, #3960]	; 17e84 <__assert_fail@plt+0x6e38>
   16f08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f0c:	sdiv	r0, r0, r1
   16f10:	ldr	r1, [fp, #8]
   16f14:	cmp	r0, r1
   16f18:	blt	16f38 <__assert_fail@plt+0x5eec>
   16f1c:	b	16f4c <__assert_fail@plt+0x5f00>
   16f20:	ldr	r0, [pc, #1624]	; 17580 <__assert_fail@plt+0x6534>
   16f24:	ldr	r1, [fp, #8]
   16f28:	sdiv	r0, r0, r1
   16f2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f30:	cmp	r0, r1
   16f34:	bge	16f4c <__assert_fail@plt+0x5f00>
   16f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f3c:	ldr	r1, [fp, #8]
   16f40:	mul	r0, r0, r1
   16f44:	str	r0, [fp, #-28]	; 0xffffffe4
   16f48:	b	17984 <__assert_fail@plt+0x6938>
   16f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f50:	ldr	r1, [fp, #8]
   16f54:	mul	r0, r0, r1
   16f58:	str	r0, [fp, #-28]	; 0xffffffe4
   16f5c:	b	17990 <__assert_fail@plt+0x6944>
   16f60:	ldr	r0, [fp, #8]
   16f64:	cmp	r0, #0
   16f68:	bge	17078 <__assert_fail@plt+0x602c>
   16f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f70:	cmp	r0, #0
   16f74:	bge	17000 <__assert_fail@plt+0x5fb4>
   16f78:	b	16f98 <__assert_fail@plt+0x5f4c>
   16f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f80:	ldr	r1, [fp, #8]
   16f84:	mvn	r2, #0
   16f88:	udiv	r1, r2, r1
   16f8c:	cmp	r0, r1
   16f90:	bcc	17114 <__assert_fail@plt+0x60c8>
   16f94:	b	17128 <__assert_fail@plt+0x60dc>
   16f98:	b	16f9c <__assert_fail@plt+0x5f50>
   16f9c:	ldr	r0, [pc, #1664]	; 17624 <__assert_fail@plt+0x65d8>
   16fa0:	ldr	r1, [fp, #8]
   16fa4:	cmp	r1, r0
   16fa8:	blt	16fc0 <__assert_fail@plt+0x5f74>
   16fac:	b	16fcc <__assert_fail@plt+0x5f80>
   16fb0:	ldr	r0, [fp, #8]
   16fb4:	movw	r1, #0
   16fb8:	cmp	r1, r0
   16fbc:	bge	16fcc <__assert_fail@plt+0x5f80>
   16fc0:	movw	r0, #1
   16fc4:	str	r0, [fp, #-56]	; 0xffffffc8
   16fc8:	b	16fe4 <__assert_fail@plt+0x5f98>
   16fcc:	ldr	r0, [fp, #8]
   16fd0:	movw	r1, #0
   16fd4:	sub	r0, r1, r0
   16fd8:	mvn	r1, #0
   16fdc:	udiv	r0, r1, r0
   16fe0:	str	r0, [fp, #-56]	; 0xffffffc8
   16fe4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16fe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fec:	mvn	r2, #0
   16ff0:	sub	r1, r2, r1
   16ff4:	cmp	r0, r1
   16ff8:	bls	17114 <__assert_fail@plt+0x60c8>
   16ffc:	b	17128 <__assert_fail@plt+0x60dc>
   17000:	b	17004 <__assert_fail@plt+0x5fb8>
   17004:	b	1705c <__assert_fail@plt+0x6010>
   17008:	b	1705c <__assert_fail@plt+0x6010>
   1700c:	ldr	r0, [fp, #8]
   17010:	cmn	r0, #1
   17014:	bne	1705c <__assert_fail@plt+0x6010>
   17018:	b	1701c <__assert_fail@plt+0x5fd0>
   1701c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17020:	add	r0, r0, #0
   17024:	movw	r1, #0
   17028:	cmp	r1, r0
   1702c:	blt	17114 <__assert_fail@plt+0x60c8>
   17030:	b	17128 <__assert_fail@plt+0x60dc>
   17034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17038:	movw	r1, #0
   1703c:	cmp	r1, r0
   17040:	bge	17128 <__assert_fail@plt+0x60dc>
   17044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17048:	sub	r0, r0, #1
   1704c:	mvn	r1, #0
   17050:	cmp	r1, r0
   17054:	blt	17114 <__assert_fail@plt+0x60c8>
   17058:	b	17128 <__assert_fail@plt+0x60dc>
   1705c:	ldr	r0, [fp, #8]
   17060:	movw	r1, #0
   17064:	sdiv	r0, r1, r0
   17068:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1706c:	cmp	r0, r1
   17070:	blt	17114 <__assert_fail@plt+0x60c8>
   17074:	b	17128 <__assert_fail@plt+0x60dc>
   17078:	ldr	r0, [fp, #8]
   1707c:	cmp	r0, #0
   17080:	bne	17088 <__assert_fail@plt+0x603c>
   17084:	b	17128 <__assert_fail@plt+0x60dc>
   17088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1708c:	cmp	r0, #0
   17090:	bge	170fc <__assert_fail@plt+0x60b0>
   17094:	b	17098 <__assert_fail@plt+0x604c>
   17098:	b	170e0 <__assert_fail@plt+0x6094>
   1709c:	b	170e0 <__assert_fail@plt+0x6094>
   170a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170a4:	cmn	r0, #1
   170a8:	bne	170e0 <__assert_fail@plt+0x6094>
   170ac:	b	170b0 <__assert_fail@plt+0x6064>
   170b0:	ldr	r0, [fp, #8]
   170b4:	add	r0, r0, #0
   170b8:	movw	r1, #0
   170bc:	cmp	r1, r0
   170c0:	blt	17114 <__assert_fail@plt+0x60c8>
   170c4:	b	17128 <__assert_fail@plt+0x60dc>
   170c8:	ldr	r0, [fp, #8]
   170cc:	sub	r0, r0, #1
   170d0:	mvn	r1, #0
   170d4:	cmp	r1, r0
   170d8:	blt	17114 <__assert_fail@plt+0x60c8>
   170dc:	b	17128 <__assert_fail@plt+0x60dc>
   170e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170e4:	movw	r1, #0
   170e8:	sdiv	r0, r1, r0
   170ec:	ldr	r1, [fp, #8]
   170f0:	cmp	r0, r1
   170f4:	blt	17114 <__assert_fail@plt+0x60c8>
   170f8:	b	17128 <__assert_fail@plt+0x60dc>
   170fc:	ldr	r0, [fp, #8]
   17100:	mvn	r1, #0
   17104:	udiv	r0, r1, r0
   17108:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1710c:	cmp	r0, r1
   17110:	bcs	17128 <__assert_fail@plt+0x60dc>
   17114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17118:	ldr	r1, [fp, #8]
   1711c:	mul	r0, r0, r1
   17120:	str	r0, [fp, #-28]	; 0xffffffe4
   17124:	b	17984 <__assert_fail@plt+0x6938>
   17128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1712c:	ldr	r1, [fp, #8]
   17130:	mul	r0, r0, r1
   17134:	str	r0, [fp, #-28]	; 0xffffffe4
   17138:	b	17990 <__assert_fail@plt+0x6944>
   1713c:	b	17140 <__assert_fail@plt+0x60f4>
   17140:	b	17144 <__assert_fail@plt+0x60f8>
   17144:	ldr	r0, [fp, #8]
   17148:	cmp	r0, #0
   1714c:	bge	17250 <__assert_fail@plt+0x6204>
   17150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17154:	cmp	r0, #0
   17158:	bge	171e4 <__assert_fail@plt+0x6198>
   1715c:	b	17160 <__assert_fail@plt+0x6114>
   17160:	ldr	r0, [pc, #1048]	; 17580 <__assert_fail@plt+0x6534>
   17164:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17168:	ldr	r2, [fp, #8]
   1716c:	sdiv	r0, r0, r2
   17170:	cmp	r1, r0
   17174:	blt	172e0 <__assert_fail@plt+0x6294>
   17178:	b	172f4 <__assert_fail@plt+0x62a8>
   1717c:	b	17180 <__assert_fail@plt+0x6134>
   17180:	ldr	r0, [pc, #1180]	; 17624 <__assert_fail@plt+0x65d8>
   17184:	ldr	r1, [fp, #8]
   17188:	cmp	r1, r0
   1718c:	blt	171a4 <__assert_fail@plt+0x6158>
   17190:	b	171b0 <__assert_fail@plt+0x6164>
   17194:	ldr	r0, [fp, #8]
   17198:	movw	r1, #0
   1719c:	cmp	r1, r0
   171a0:	bge	171b0 <__assert_fail@plt+0x6164>
   171a4:	movw	r0, #0
   171a8:	str	r0, [fp, #-60]	; 0xffffffc4
   171ac:	b	171c8 <__assert_fail@plt+0x617c>
   171b0:	ldr	r0, [pc, #968]	; 17580 <__assert_fail@plt+0x6534>
   171b4:	ldr	r1, [fp, #8]
   171b8:	movw	r2, #0
   171bc:	sub	r1, r2, r1
   171c0:	sdiv	r0, r0, r1
   171c4:	str	r0, [fp, #-60]	; 0xffffffc4
   171c8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   171cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171d0:	mvn	r2, #0
   171d4:	sub	r1, r2, r1
   171d8:	cmp	r0, r1
   171dc:	ble	172e0 <__assert_fail@plt+0x6294>
   171e0:	b	172f4 <__assert_fail@plt+0x62a8>
   171e4:	ldr	r0, [fp, #8]
   171e8:	cmn	r0, #1
   171ec:	bne	17234 <__assert_fail@plt+0x61e8>
   171f0:	b	171f4 <__assert_fail@plt+0x61a8>
   171f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171f8:	add	r0, r0, #-2147483648	; 0x80000000
   171fc:	movw	r1, #0
   17200:	cmp	r1, r0
   17204:	blt	172e0 <__assert_fail@plt+0x6294>
   17208:	b	172f4 <__assert_fail@plt+0x62a8>
   1720c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17210:	movw	r1, #0
   17214:	cmp	r1, r0
   17218:	bge	172f4 <__assert_fail@plt+0x62a8>
   1721c:	ldr	r0, [pc, #860]	; 17580 <__assert_fail@plt+0x6534>
   17220:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17224:	sub	r1, r1, #1
   17228:	cmp	r0, r1
   1722c:	blt	172e0 <__assert_fail@plt+0x6294>
   17230:	b	172f4 <__assert_fail@plt+0x62a8>
   17234:	ldr	r0, [pc, #3144]	; 17e84 <__assert_fail@plt+0x6e38>
   17238:	ldr	r1, [fp, #8]
   1723c:	sdiv	r0, r0, r1
   17240:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17244:	cmp	r0, r1
   17248:	blt	172e0 <__assert_fail@plt+0x6294>
   1724c:	b	172f4 <__assert_fail@plt+0x62a8>
   17250:	ldr	r0, [fp, #8]
   17254:	cmp	r0, #0
   17258:	bne	17260 <__assert_fail@plt+0x6214>
   1725c:	b	172f4 <__assert_fail@plt+0x62a8>
   17260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17264:	cmp	r0, #0
   17268:	bge	172c8 <__assert_fail@plt+0x627c>
   1726c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17270:	cmn	r0, #1
   17274:	bne	172ac <__assert_fail@plt+0x6260>
   17278:	b	1727c <__assert_fail@plt+0x6230>
   1727c:	ldr	r0, [fp, #8]
   17280:	add	r0, r0, #-2147483648	; 0x80000000
   17284:	movw	r1, #0
   17288:	cmp	r1, r0
   1728c:	blt	172e0 <__assert_fail@plt+0x6294>
   17290:	b	172f4 <__assert_fail@plt+0x62a8>
   17294:	ldr	r0, [pc, #740]	; 17580 <__assert_fail@plt+0x6534>
   17298:	ldr	r1, [fp, #8]
   1729c:	sub	r1, r1, #1
   172a0:	cmp	r0, r1
   172a4:	blt	172e0 <__assert_fail@plt+0x6294>
   172a8:	b	172f4 <__assert_fail@plt+0x62a8>
   172ac:	ldr	r0, [pc, #3024]	; 17e84 <__assert_fail@plt+0x6e38>
   172b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172b4:	sdiv	r0, r0, r1
   172b8:	ldr	r1, [fp, #8]
   172bc:	cmp	r0, r1
   172c0:	blt	172e0 <__assert_fail@plt+0x6294>
   172c4:	b	172f4 <__assert_fail@plt+0x62a8>
   172c8:	ldr	r0, [pc, #688]	; 17580 <__assert_fail@plt+0x6534>
   172cc:	ldr	r1, [fp, #8]
   172d0:	sdiv	r0, r0, r1
   172d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172d8:	cmp	r0, r1
   172dc:	bge	172f4 <__assert_fail@plt+0x62a8>
   172e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172e4:	ldr	r1, [fp, #8]
   172e8:	mul	r0, r0, r1
   172ec:	str	r0, [fp, #-28]	; 0xffffffe4
   172f0:	b	17984 <__assert_fail@plt+0x6938>
   172f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172f8:	ldr	r1, [fp, #8]
   172fc:	mul	r0, r0, r1
   17300:	str	r0, [fp, #-28]	; 0xffffffe4
   17304:	b	17990 <__assert_fail@plt+0x6944>
   17308:	ldr	r0, [fp, #8]
   1730c:	cmp	r0, #0
   17310:	bge	17420 <__assert_fail@plt+0x63d4>
   17314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17318:	cmp	r0, #0
   1731c:	bge	173a8 <__assert_fail@plt+0x635c>
   17320:	b	17340 <__assert_fail@plt+0x62f4>
   17324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17328:	ldr	r1, [fp, #8]
   1732c:	mvn	r2, #0
   17330:	udiv	r1, r2, r1
   17334:	cmp	r0, r1
   17338:	bcc	174bc <__assert_fail@plt+0x6470>
   1733c:	b	174d0 <__assert_fail@plt+0x6484>
   17340:	b	17344 <__assert_fail@plt+0x62f8>
   17344:	ldr	r0, [pc, #728]	; 17624 <__assert_fail@plt+0x65d8>
   17348:	ldr	r1, [fp, #8]
   1734c:	cmp	r1, r0
   17350:	blt	17368 <__assert_fail@plt+0x631c>
   17354:	b	17374 <__assert_fail@plt+0x6328>
   17358:	ldr	r0, [fp, #8]
   1735c:	movw	r1, #0
   17360:	cmp	r1, r0
   17364:	bge	17374 <__assert_fail@plt+0x6328>
   17368:	movw	r0, #1
   1736c:	str	r0, [fp, #-64]	; 0xffffffc0
   17370:	b	1738c <__assert_fail@plt+0x6340>
   17374:	ldr	r0, [fp, #8]
   17378:	movw	r1, #0
   1737c:	sub	r0, r1, r0
   17380:	mvn	r1, #0
   17384:	udiv	r0, r1, r0
   17388:	str	r0, [fp, #-64]	; 0xffffffc0
   1738c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17390:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17394:	mvn	r2, #0
   17398:	sub	r1, r2, r1
   1739c:	cmp	r0, r1
   173a0:	bls	174bc <__assert_fail@plt+0x6470>
   173a4:	b	174d0 <__assert_fail@plt+0x6484>
   173a8:	b	173ac <__assert_fail@plt+0x6360>
   173ac:	b	17404 <__assert_fail@plt+0x63b8>
   173b0:	b	17404 <__assert_fail@plt+0x63b8>
   173b4:	ldr	r0, [fp, #8]
   173b8:	cmn	r0, #1
   173bc:	bne	17404 <__assert_fail@plt+0x63b8>
   173c0:	b	173c4 <__assert_fail@plt+0x6378>
   173c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173c8:	add	r0, r0, #0
   173cc:	movw	r1, #0
   173d0:	cmp	r1, r0
   173d4:	blt	174bc <__assert_fail@plt+0x6470>
   173d8:	b	174d0 <__assert_fail@plt+0x6484>
   173dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173e0:	movw	r1, #0
   173e4:	cmp	r1, r0
   173e8:	bge	174d0 <__assert_fail@plt+0x6484>
   173ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173f0:	sub	r0, r0, #1
   173f4:	mvn	r1, #0
   173f8:	cmp	r1, r0
   173fc:	blt	174bc <__assert_fail@plt+0x6470>
   17400:	b	174d0 <__assert_fail@plt+0x6484>
   17404:	ldr	r0, [fp, #8]
   17408:	movw	r1, #0
   1740c:	sdiv	r0, r1, r0
   17410:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17414:	cmp	r0, r1
   17418:	blt	174bc <__assert_fail@plt+0x6470>
   1741c:	b	174d0 <__assert_fail@plt+0x6484>
   17420:	ldr	r0, [fp, #8]
   17424:	cmp	r0, #0
   17428:	bne	17430 <__assert_fail@plt+0x63e4>
   1742c:	b	174d0 <__assert_fail@plt+0x6484>
   17430:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17434:	cmp	r0, #0
   17438:	bge	174a4 <__assert_fail@plt+0x6458>
   1743c:	b	17440 <__assert_fail@plt+0x63f4>
   17440:	b	17488 <__assert_fail@plt+0x643c>
   17444:	b	17488 <__assert_fail@plt+0x643c>
   17448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1744c:	cmn	r0, #1
   17450:	bne	17488 <__assert_fail@plt+0x643c>
   17454:	b	17458 <__assert_fail@plt+0x640c>
   17458:	ldr	r0, [fp, #8]
   1745c:	add	r0, r0, #0
   17460:	movw	r1, #0
   17464:	cmp	r1, r0
   17468:	blt	174bc <__assert_fail@plt+0x6470>
   1746c:	b	174d0 <__assert_fail@plt+0x6484>
   17470:	ldr	r0, [fp, #8]
   17474:	sub	r0, r0, #1
   17478:	mvn	r1, #0
   1747c:	cmp	r1, r0
   17480:	blt	174bc <__assert_fail@plt+0x6470>
   17484:	b	174d0 <__assert_fail@plt+0x6484>
   17488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1748c:	movw	r1, #0
   17490:	sdiv	r0, r1, r0
   17494:	ldr	r1, [fp, #8]
   17498:	cmp	r0, r1
   1749c:	blt	174bc <__assert_fail@plt+0x6470>
   174a0:	b	174d0 <__assert_fail@plt+0x6484>
   174a4:	ldr	r0, [fp, #8]
   174a8:	mvn	r1, #0
   174ac:	udiv	r0, r1, r0
   174b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   174b4:	cmp	r0, r1
   174b8:	bcs	174d0 <__assert_fail@plt+0x6484>
   174bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174c0:	ldr	r1, [fp, #8]
   174c4:	mul	r0, r0, r1
   174c8:	str	r0, [fp, #-28]	; 0xffffffe4
   174cc:	b	17984 <__assert_fail@plt+0x6938>
   174d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174d4:	ldr	r1, [fp, #8]
   174d8:	mul	r0, r0, r1
   174dc:	str	r0, [fp, #-28]	; 0xffffffe4
   174e0:	b	17990 <__assert_fail@plt+0x6944>
   174e4:	b	174e8 <__assert_fail@plt+0x649c>
   174e8:	ldr	r0, [fp, #8]
   174ec:	cmp	r0, #0
   174f0:	bge	17660 <__assert_fail@plt+0x6614>
   174f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174f8:	cmp	r0, #0
   174fc:	bge	175d8 <__assert_fail@plt+0x658c>
   17500:	b	17504 <__assert_fail@plt+0x64b8>
   17504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17508:	ldr	r1, [fp, #8]
   1750c:	asr	r3, r1, #31
   17510:	mvn	r2, #0
   17514:	mvn	ip, #-2147483648	; 0x80000000
   17518:	str	r0, [fp, #-68]	; 0xffffffbc
   1751c:	mov	r0, r2
   17520:	str	r1, [fp, #-72]	; 0xffffffb8
   17524:	mov	r1, ip
   17528:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1752c:	bl	1b1c4 <__assert_fail@plt+0xa178>
   17530:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17534:	subs	r0, r2, r0
   17538:	rscs	r1, r1, r2, asr #31
   1753c:	blt	17728 <__assert_fail@plt+0x66dc>
   17540:	b	1773c <__assert_fail@plt+0x66f0>
   17544:	b	17548 <__assert_fail@plt+0x64fc>
   17548:	ldr	r0, [pc, #212]	; 17624 <__assert_fail@plt+0x65d8>
   1754c:	ldr	r1, [fp, #8]
   17550:	cmp	r1, r0
   17554:	blt	1756c <__assert_fail@plt+0x6520>
   17558:	b	17584 <__assert_fail@plt+0x6538>
   1755c:	ldr	r0, [fp, #8]
   17560:	movw	r1, #0
   17564:	cmp	r1, r0
   17568:	bge	17584 <__assert_fail@plt+0x6538>
   1756c:	mov	r0, #0
   17570:	mvn	r1, #0
   17574:	str	r1, [fp, #-76]	; 0xffffffb4
   17578:	str	r0, [fp, #-80]	; 0xffffffb0
   1757c:	b	175b8 <__assert_fail@plt+0x656c>
   17580:	svcvc	0x00ffffff
   17584:	ldr	r0, [fp, #8]
   17588:	rsb	r0, r0, #0
   1758c:	asr	r3, r0, #31
   17590:	mvn	r1, #0
   17594:	mvn	r2, #-2147483648	; 0x80000000
   17598:	str	r0, [fp, #-84]	; 0xffffffac
   1759c:	mov	r0, r1
   175a0:	mov	r1, r2
   175a4:	ldr	r2, [fp, #-84]	; 0xffffffac
   175a8:	bl	1b1c4 <__assert_fail@plt+0xa178>
   175ac:	str	r0, [fp, #-76]	; 0xffffffb4
   175b0:	str	r1, [fp, #-80]	; 0xffffffb0
   175b4:	b	175b8 <__assert_fail@plt+0x656c>
   175b8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   175bc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   175c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175c4:	mvn	r2, r2
   175c8:	subs	r1, r2, r1
   175cc:	rscs	r0, r0, r2, asr #31
   175d0:	bge	17728 <__assert_fail@plt+0x66dc>
   175d4:	b	1773c <__assert_fail@plt+0x66f0>
   175d8:	ldr	r0, [fp, #8]
   175dc:	cmn	r0, #1
   175e0:	bne	17628 <__assert_fail@plt+0x65dc>
   175e4:	b	175e8 <__assert_fail@plt+0x659c>
   175e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175ec:	mov	r1, #-2147483648	; 0x80000000
   175f0:	add	r1, r1, r0, asr #31
   175f4:	rsbs	r0, r0, #0
   175f8:	rscs	r1, r1, #0
   175fc:	blt	17728 <__assert_fail@plt+0x66dc>
   17600:	b	1773c <__assert_fail@plt+0x66f0>
   17604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17608:	movw	r1, #0
   1760c:	cmp	r1, r0
   17610:	bge	1773c <__assert_fail@plt+0x66f0>
   17614:	mov	r0, #0
   17618:	cmp	r0, #0
   1761c:	bne	17728 <__assert_fail@plt+0x66dc>
   17620:	b	1773c <__assert_fail@plt+0x66f0>
   17624:	andhi	r0, r0, r1
   17628:	ldr	r0, [fp, #8]
   1762c:	asr	r3, r0, #31
   17630:	mov	r1, #0
   17634:	mov	r2, #-2147483648	; 0x80000000
   17638:	str	r0, [fp, #-88]	; 0xffffffa8
   1763c:	mov	r0, r1
   17640:	mov	r1, r2
   17644:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17648:	bl	1b1c4 <__assert_fail@plt+0xa178>
   1764c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17650:	subs	r0, r0, r2
   17654:	sbcs	r1, r1, r2, asr #31
   17658:	blt	17728 <__assert_fail@plt+0x66dc>
   1765c:	b	1773c <__assert_fail@plt+0x66f0>
   17660:	ldr	r0, [fp, #8]
   17664:	cmp	r0, #0
   17668:	bne	17670 <__assert_fail@plt+0x6624>
   1766c:	b	1773c <__assert_fail@plt+0x66f0>
   17670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17674:	cmp	r0, #0
   17678:	bge	176f0 <__assert_fail@plt+0x66a4>
   1767c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17680:	cmn	r0, #1
   17684:	bne	176b8 <__assert_fail@plt+0x666c>
   17688:	b	1768c <__assert_fail@plt+0x6640>
   1768c:	ldr	r0, [fp, #8]
   17690:	mov	r1, #-2147483648	; 0x80000000
   17694:	add	r1, r1, r0, asr #31
   17698:	rsbs	r0, r0, #0
   1769c:	rscs	r1, r1, #0
   176a0:	blt	17728 <__assert_fail@plt+0x66dc>
   176a4:	b	1773c <__assert_fail@plt+0x66f0>
   176a8:	mov	r0, #0
   176ac:	cmp	r0, #0
   176b0:	bne	17728 <__assert_fail@plt+0x66dc>
   176b4:	b	1773c <__assert_fail@plt+0x66f0>
   176b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176bc:	asr	r3, r0, #31
   176c0:	mov	r1, #0
   176c4:	mov	r2, #-2147483648	; 0x80000000
   176c8:	str	r0, [fp, #-92]	; 0xffffffa4
   176cc:	mov	r0, r1
   176d0:	mov	r1, r2
   176d4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   176d8:	bl	1b1c4 <__assert_fail@plt+0xa178>
   176dc:	ldr	r2, [fp, #8]
   176e0:	subs	r0, r0, r2
   176e4:	sbcs	r1, r1, r2, asr #31
   176e8:	blt	17728 <__assert_fail@plt+0x66dc>
   176ec:	b	1773c <__assert_fail@plt+0x66f0>
   176f0:	ldr	r0, [fp, #8]
   176f4:	asr	r3, r0, #31
   176f8:	mvn	r1, #0
   176fc:	mvn	r2, #-2147483648	; 0x80000000
   17700:	str	r0, [fp, #-96]	; 0xffffffa0
   17704:	mov	r0, r1
   17708:	mov	r1, r2
   1770c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17710:	bl	1b1c4 <__assert_fail@plt+0xa178>
   17714:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17718:	subs	r0, r0, r2
   1771c:	sbcs	r1, r1, r2, asr #31
   17720:	bge	1773c <__assert_fail@plt+0x66f0>
   17724:	b	17728 <__assert_fail@plt+0x66dc>
   17728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1772c:	ldr	r1, [fp, #8]
   17730:	mul	r0, r0, r1
   17734:	str	r0, [fp, #-28]	; 0xffffffe4
   17738:	b	17984 <__assert_fail@plt+0x6938>
   1773c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17740:	ldr	r1, [fp, #8]
   17744:	mul	r0, r0, r1
   17748:	str	r0, [fp, #-28]	; 0xffffffe4
   1774c:	b	17990 <__assert_fail@plt+0x6944>
   17750:	ldr	r0, [fp, #8]
   17754:	cmp	r0, #0
   17758:	bge	178a8 <__assert_fail@plt+0x685c>
   1775c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17760:	cmp	r0, #0
   17764:	bge	17830 <__assert_fail@plt+0x67e4>
   17768:	b	177a8 <__assert_fail@plt+0x675c>
   1776c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17770:	ldr	r1, [fp, #8]
   17774:	asr	r3, r1, #31
   17778:	mvn	r2, #0
   1777c:	str	r0, [fp, #-100]	; 0xffffff9c
   17780:	mov	r0, r2
   17784:	str	r1, [fp, #-104]	; 0xffffff98
   17788:	mov	r1, r2
   1778c:	ldr	r2, [fp, #-104]	; 0xffffff98
   17790:	bl	1b298 <__assert_fail@plt+0xa24c>
   17794:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17798:	subs	r0, r2, r0
   1779c:	rscs	r1, r1, r2, asr #31
   177a0:	bcc	1795c <__assert_fail@plt+0x6910>
   177a4:	b	17970 <__assert_fail@plt+0x6924>
   177a8:	b	177ac <__assert_fail@plt+0x6760>
   177ac:	ldr	r0, [pc, #-400]	; 17624 <__assert_fail@plt+0x65d8>
   177b0:	ldr	r1, [fp, #8]
   177b4:	cmp	r1, r0
   177b8:	blt	177d0 <__assert_fail@plt+0x6784>
   177bc:	b	177e4 <__assert_fail@plt+0x6798>
   177c0:	ldr	r0, [fp, #8]
   177c4:	movw	r1, #0
   177c8:	cmp	r1, r0
   177cc:	bge	177e4 <__assert_fail@plt+0x6798>
   177d0:	mov	r0, #1
   177d4:	mvn	r1, #0
   177d8:	str	r1, [sp, #108]	; 0x6c
   177dc:	str	r0, [sp, #104]	; 0x68
   177e0:	b	17810 <__assert_fail@plt+0x67c4>
   177e4:	ldr	r0, [fp, #8]
   177e8:	rsb	r0, r0, #0
   177ec:	asr	r3, r0, #31
   177f0:	mvn	r1, #0
   177f4:	str	r0, [sp, #100]	; 0x64
   177f8:	mov	r0, r1
   177fc:	ldr	r2, [sp, #100]	; 0x64
   17800:	bl	1b298 <__assert_fail@plt+0xa24c>
   17804:	str	r0, [sp, #108]	; 0x6c
   17808:	str	r1, [sp, #104]	; 0x68
   1780c:	b	17810 <__assert_fail@plt+0x67c4>
   17810:	ldr	r0, [sp, #104]	; 0x68
   17814:	ldr	r1, [sp, #108]	; 0x6c
   17818:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1781c:	mvn	r2, r2
   17820:	subs	r1, r2, r1
   17824:	rscs	r0, r0, r2, asr #31
   17828:	bcs	1795c <__assert_fail@plt+0x6910>
   1782c:	b	17970 <__assert_fail@plt+0x6924>
   17830:	b	17834 <__assert_fail@plt+0x67e8>
   17834:	b	1788c <__assert_fail@plt+0x6840>
   17838:	b	1788c <__assert_fail@plt+0x6840>
   1783c:	ldr	r0, [fp, #8]
   17840:	cmn	r0, #1
   17844:	bne	1788c <__assert_fail@plt+0x6840>
   17848:	b	1784c <__assert_fail@plt+0x6800>
   1784c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17850:	add	r0, r0, #0
   17854:	movw	r1, #0
   17858:	cmp	r1, r0
   1785c:	blt	1795c <__assert_fail@plt+0x6910>
   17860:	b	17970 <__assert_fail@plt+0x6924>
   17864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17868:	movw	r1, #0
   1786c:	cmp	r1, r0
   17870:	bge	17970 <__assert_fail@plt+0x6924>
   17874:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17878:	sub	r0, r0, #1
   1787c:	mvn	r1, #0
   17880:	cmp	r1, r0
   17884:	blt	1795c <__assert_fail@plt+0x6910>
   17888:	b	17970 <__assert_fail@plt+0x6924>
   1788c:	ldr	r0, [fp, #8]
   17890:	movw	r1, #0
   17894:	sdiv	r0, r1, r0
   17898:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1789c:	cmp	r0, r1
   178a0:	blt	1795c <__assert_fail@plt+0x6910>
   178a4:	b	17970 <__assert_fail@plt+0x6924>
   178a8:	ldr	r0, [fp, #8]
   178ac:	cmp	r0, #0
   178b0:	bne	178b8 <__assert_fail@plt+0x686c>
   178b4:	b	17970 <__assert_fail@plt+0x6924>
   178b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178bc:	cmp	r0, #0
   178c0:	bge	1792c <__assert_fail@plt+0x68e0>
   178c4:	b	178c8 <__assert_fail@plt+0x687c>
   178c8:	b	17910 <__assert_fail@plt+0x68c4>
   178cc:	b	17910 <__assert_fail@plt+0x68c4>
   178d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178d4:	cmn	r0, #1
   178d8:	bne	17910 <__assert_fail@plt+0x68c4>
   178dc:	b	178e0 <__assert_fail@plt+0x6894>
   178e0:	ldr	r0, [fp, #8]
   178e4:	add	r0, r0, #0
   178e8:	movw	r1, #0
   178ec:	cmp	r1, r0
   178f0:	blt	1795c <__assert_fail@plt+0x6910>
   178f4:	b	17970 <__assert_fail@plt+0x6924>
   178f8:	ldr	r0, [fp, #8]
   178fc:	sub	r0, r0, #1
   17900:	mvn	r1, #0
   17904:	cmp	r1, r0
   17908:	blt	1795c <__assert_fail@plt+0x6910>
   1790c:	b	17970 <__assert_fail@plt+0x6924>
   17910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17914:	movw	r1, #0
   17918:	sdiv	r0, r1, r0
   1791c:	ldr	r1, [fp, #8]
   17920:	cmp	r0, r1
   17924:	blt	1795c <__assert_fail@plt+0x6910>
   17928:	b	17970 <__assert_fail@plt+0x6924>
   1792c:	ldr	r0, [fp, #8]
   17930:	asr	r3, r0, #31
   17934:	mvn	r1, #0
   17938:	str	r0, [sp, #96]	; 0x60
   1793c:	mov	r0, r1
   17940:	ldr	r2, [sp, #96]	; 0x60
   17944:	bl	1b298 <__assert_fail@plt+0xa24c>
   17948:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1794c:	subs	r0, r0, r2
   17950:	sbcs	r1, r1, r2, asr #31
   17954:	bcs	17970 <__assert_fail@plt+0x6924>
   17958:	b	1795c <__assert_fail@plt+0x6910>
   1795c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17960:	ldr	r1, [fp, #8]
   17964:	mul	r0, r0, r1
   17968:	str	r0, [fp, #-28]	; 0xffffffe4
   1796c:	b	17984 <__assert_fail@plt+0x6938>
   17970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17974:	ldr	r1, [fp, #8]
   17978:	mul	r0, r0, r1
   1797c:	str	r0, [fp, #-28]	; 0xffffffe4
   17980:	b	17990 <__assert_fail@plt+0x6944>
   17984:	ldr	r0, [pc, #-1036]	; 17580 <__assert_fail@plt+0x6534>
   17988:	str	r0, [sp, #92]	; 0x5c
   1798c:	b	179b0 <__assert_fail@plt+0x6964>
   17990:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17994:	cmp	r0, #64	; 0x40
   17998:	movw	r0, #0
   1799c:	movlt	r0, #1
   179a0:	tst	r0, #1
   179a4:	movw	r0, #64	; 0x40
   179a8:	moveq	r0, #0
   179ac:	str	r0, [sp, #92]	; 0x5c
   179b0:	ldr	r0, [sp, #92]	; 0x5c
   179b4:	str	r0, [fp, #-32]	; 0xffffffe0
   179b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   179bc:	cmp	r0, #0
   179c0:	beq	179f0 <__assert_fail@plt+0x69a4>
   179c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   179c8:	ldr	r1, [fp, #8]
   179cc:	sdiv	r0, r0, r1
   179d0:	str	r0, [fp, #-24]	; 0xffffffe8
   179d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   179d8:	mov	r1, r0
   179dc:	ldr	r2, [fp, #8]
   179e0:	sdiv	r3, r0, r2
   179e4:	mls	r0, r3, r2, r0
   179e8:	sub	r0, r1, r0
   179ec:	str	r0, [fp, #-28]	; 0xffffffe4
   179f0:	ldr	r0, [fp, #-4]
   179f4:	movw	r1, #0
   179f8:	cmp	r0, r1
   179fc:	bne	17a0c <__assert_fail@plt+0x69c0>
   17a00:	ldr	r0, [fp, #-8]
   17a04:	movw	r1, #0
   17a08:	str	r1, [r0]
   17a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a10:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a14:	sub	r0, r0, r1
   17a18:	ldr	r1, [fp, #-12]
   17a1c:	cmp	r0, r1
   17a20:	bge	18e0c <__assert_fail@plt+0x7dc0>
   17a24:	ldr	r0, [fp, #-20]	; 0xffffffec
   17a28:	ldr	r1, [fp, #-12]
   17a2c:	add	r1, r0, r1
   17a30:	mov	r2, #1
   17a34:	cmp	r1, r0
   17a38:	movwvc	r2, #0
   17a3c:	str	r1, [fp, #-24]	; 0xffffffe8
   17a40:	tst	r2, #1
   17a44:	bne	18e08 <__assert_fail@plt+0x7dbc>
   17a48:	ldr	r0, [fp, #-16]
   17a4c:	movw	r1, #0
   17a50:	cmp	r1, r0
   17a54:	bgt	17a68 <__assert_fail@plt+0x6a1c>
   17a58:	ldr	r0, [fp, #-16]
   17a5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a60:	cmp	r0, r1
   17a64:	blt	18e08 <__assert_fail@plt+0x7dbc>
   17a68:	b	17e44 <__assert_fail@plt+0x6df8>
   17a6c:			; <UNDEFINED> instruction: 0xffff8000
   17a70:	b	17a74 <__assert_fail@plt+0x6a28>
   17a74:	ldr	r0, [fp, #8]
   17a78:	cmp	r0, #0
   17a7c:	bge	17b90 <__assert_fail@plt+0x6b44>
   17a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a84:	cmp	r0, #0
   17a88:	bge	17b14 <__assert_fail@plt+0x6ac8>
   17a8c:	b	17a90 <__assert_fail@plt+0x6a44>
   17a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a94:	ldr	r1, [fp, #8]
   17a98:	movw	r2, #127	; 0x7f
   17a9c:	sdiv	r1, r2, r1
   17aa0:	cmp	r0, r1
   17aa4:	blt	17c30 <__assert_fail@plt+0x6be4>
   17aa8:	b	17c48 <__assert_fail@plt+0x6bfc>
   17aac:	b	17ab0 <__assert_fail@plt+0x6a64>
   17ab0:	ldr	r0, [pc, #-1172]	; 17624 <__assert_fail@plt+0x65d8>
   17ab4:	ldr	r1, [fp, #8]
   17ab8:	cmp	r1, r0
   17abc:	blt	17ad4 <__assert_fail@plt+0x6a88>
   17ac0:	b	17ae0 <__assert_fail@plt+0x6a94>
   17ac4:	ldr	r0, [fp, #8]
   17ac8:	movw	r1, #0
   17acc:	cmp	r1, r0
   17ad0:	bge	17ae0 <__assert_fail@plt+0x6a94>
   17ad4:	movw	r0, #0
   17ad8:	str	r0, [sp, #88]	; 0x58
   17adc:	b	17af8 <__assert_fail@plt+0x6aac>
   17ae0:	ldr	r0, [fp, #8]
   17ae4:	movw	r1, #0
   17ae8:	sub	r0, r1, r0
   17aec:	movw	r1, #127	; 0x7f
   17af0:	sdiv	r0, r1, r0
   17af4:	str	r0, [sp, #88]	; 0x58
   17af8:	ldr	r0, [sp, #88]	; 0x58
   17afc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b00:	mvn	r2, #0
   17b04:	sub	r1, r2, r1
   17b08:	cmp	r0, r1
   17b0c:	ble	17c30 <__assert_fail@plt+0x6be4>
   17b10:	b	17c48 <__assert_fail@plt+0x6bfc>
   17b14:	b	17b18 <__assert_fail@plt+0x6acc>
   17b18:	b	17b74 <__assert_fail@plt+0x6b28>
   17b1c:	b	17b74 <__assert_fail@plt+0x6b28>
   17b20:	ldr	r0, [fp, #8]
   17b24:	cmn	r0, #1
   17b28:	bne	17b74 <__assert_fail@plt+0x6b28>
   17b2c:	b	17b30 <__assert_fail@plt+0x6ae4>
   17b30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b34:	mvn	r1, #127	; 0x7f
   17b38:	add	r0, r0, r1
   17b3c:	movw	r1, #0
   17b40:	cmp	r1, r0
   17b44:	blt	17c30 <__assert_fail@plt+0x6be4>
   17b48:	b	17c48 <__assert_fail@plt+0x6bfc>
   17b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b50:	movw	r1, #0
   17b54:	cmp	r1, r0
   17b58:	bge	17c48 <__assert_fail@plt+0x6bfc>
   17b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b60:	sub	r0, r0, #1
   17b64:	movw	r1, #127	; 0x7f
   17b68:	cmp	r1, r0
   17b6c:	blt	17c30 <__assert_fail@plt+0x6be4>
   17b70:	b	17c48 <__assert_fail@plt+0x6bfc>
   17b74:	ldr	r0, [fp, #8]
   17b78:	mvn	r1, #127	; 0x7f
   17b7c:	sdiv	r0, r1, r0
   17b80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b84:	cmp	r0, r1
   17b88:	blt	17c30 <__assert_fail@plt+0x6be4>
   17b8c:	b	17c48 <__assert_fail@plt+0x6bfc>
   17b90:	ldr	r0, [fp, #8]
   17b94:	cmp	r0, #0
   17b98:	bne	17ba0 <__assert_fail@plt+0x6b54>
   17b9c:	b	17c48 <__assert_fail@plt+0x6bfc>
   17ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ba4:	cmp	r0, #0
   17ba8:	bge	17c18 <__assert_fail@plt+0x6bcc>
   17bac:	b	17bb0 <__assert_fail@plt+0x6b64>
   17bb0:	b	17bfc <__assert_fail@plt+0x6bb0>
   17bb4:	b	17bfc <__assert_fail@plt+0x6bb0>
   17bb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bbc:	cmn	r0, #1
   17bc0:	bne	17bfc <__assert_fail@plt+0x6bb0>
   17bc4:	b	17bc8 <__assert_fail@plt+0x6b7c>
   17bc8:	ldr	r0, [fp, #8]
   17bcc:	mvn	r1, #127	; 0x7f
   17bd0:	add	r0, r0, r1
   17bd4:	movw	r1, #0
   17bd8:	cmp	r1, r0
   17bdc:	blt	17c30 <__assert_fail@plt+0x6be4>
   17be0:	b	17c48 <__assert_fail@plt+0x6bfc>
   17be4:	ldr	r0, [fp, #8]
   17be8:	sub	r0, r0, #1
   17bec:	movw	r1, #127	; 0x7f
   17bf0:	cmp	r1, r0
   17bf4:	blt	17c30 <__assert_fail@plt+0x6be4>
   17bf8:	b	17c48 <__assert_fail@plt+0x6bfc>
   17bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c00:	mvn	r1, #127	; 0x7f
   17c04:	sdiv	r0, r1, r0
   17c08:	ldr	r1, [fp, #8]
   17c0c:	cmp	r0, r1
   17c10:	blt	17c30 <__assert_fail@plt+0x6be4>
   17c14:	b	17c48 <__assert_fail@plt+0x6bfc>
   17c18:	ldr	r0, [fp, #8]
   17c1c:	movw	r1, #127	; 0x7f
   17c20:	sdiv	r0, r1, r0
   17c24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c28:	cmp	r0, r1
   17c2c:	bge	17c48 <__assert_fail@plt+0x6bfc>
   17c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c34:	ldr	r1, [fp, #8]
   17c38:	mul	r0, r0, r1
   17c3c:	sxtb	r0, r0
   17c40:	str	r0, [fp, #-28]	; 0xffffffe4
   17c44:	b	18e08 <__assert_fail@plt+0x7dbc>
   17c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c4c:	ldr	r1, [fp, #8]
   17c50:	mul	r0, r0, r1
   17c54:	sxtb	r0, r0
   17c58:	str	r0, [fp, #-28]	; 0xffffffe4
   17c5c:	b	18e0c <__assert_fail@plt+0x7dc0>
   17c60:	ldr	r0, [fp, #8]
   17c64:	cmp	r0, #0
   17c68:	bge	17d78 <__assert_fail@plt+0x6d2c>
   17c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c70:	cmp	r0, #0
   17c74:	bge	17d00 <__assert_fail@plt+0x6cb4>
   17c78:	b	17c7c <__assert_fail@plt+0x6c30>
   17c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c80:	ldr	r1, [fp, #8]
   17c84:	movw	r2, #255	; 0xff
   17c88:	sdiv	r1, r2, r1
   17c8c:	cmp	r0, r1
   17c90:	blt	17e14 <__assert_fail@plt+0x6dc8>
   17c94:	b	17e2c <__assert_fail@plt+0x6de0>
   17c98:	b	17c9c <__assert_fail@plt+0x6c50>
   17c9c:	ldr	r0, [pc, #-1664]	; 17624 <__assert_fail@plt+0x65d8>
   17ca0:	ldr	r1, [fp, #8]
   17ca4:	cmp	r1, r0
   17ca8:	blt	17cc0 <__assert_fail@plt+0x6c74>
   17cac:	b	17ccc <__assert_fail@plt+0x6c80>
   17cb0:	ldr	r0, [fp, #8]
   17cb4:	movw	r1, #0
   17cb8:	cmp	r1, r0
   17cbc:	bge	17ccc <__assert_fail@plt+0x6c80>
   17cc0:	movw	r0, #0
   17cc4:	str	r0, [sp, #84]	; 0x54
   17cc8:	b	17ce4 <__assert_fail@plt+0x6c98>
   17ccc:	ldr	r0, [fp, #8]
   17cd0:	movw	r1, #0
   17cd4:	sub	r0, r1, r0
   17cd8:	movw	r1, #255	; 0xff
   17cdc:	sdiv	r0, r1, r0
   17ce0:	str	r0, [sp, #84]	; 0x54
   17ce4:	ldr	r0, [sp, #84]	; 0x54
   17ce8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cec:	mvn	r2, #0
   17cf0:	sub	r1, r2, r1
   17cf4:	cmp	r0, r1
   17cf8:	ble	17e14 <__assert_fail@plt+0x6dc8>
   17cfc:	b	17e2c <__assert_fail@plt+0x6de0>
   17d00:	b	17d04 <__assert_fail@plt+0x6cb8>
   17d04:	b	17d5c <__assert_fail@plt+0x6d10>
   17d08:	b	17d5c <__assert_fail@plt+0x6d10>
   17d0c:	ldr	r0, [fp, #8]
   17d10:	cmn	r0, #1
   17d14:	bne	17d5c <__assert_fail@plt+0x6d10>
   17d18:	b	17d1c <__assert_fail@plt+0x6cd0>
   17d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d20:	add	r0, r0, #0
   17d24:	movw	r1, #0
   17d28:	cmp	r1, r0
   17d2c:	blt	17e14 <__assert_fail@plt+0x6dc8>
   17d30:	b	17e2c <__assert_fail@plt+0x6de0>
   17d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d38:	movw	r1, #0
   17d3c:	cmp	r1, r0
   17d40:	bge	17e2c <__assert_fail@plt+0x6de0>
   17d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d48:	sub	r0, r0, #1
   17d4c:	mvn	r1, #0
   17d50:	cmp	r1, r0
   17d54:	blt	17e14 <__assert_fail@plt+0x6dc8>
   17d58:	b	17e2c <__assert_fail@plt+0x6de0>
   17d5c:	ldr	r0, [fp, #8]
   17d60:	movw	r1, #0
   17d64:	sdiv	r0, r1, r0
   17d68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d6c:	cmp	r0, r1
   17d70:	blt	17e14 <__assert_fail@plt+0x6dc8>
   17d74:	b	17e2c <__assert_fail@plt+0x6de0>
   17d78:	ldr	r0, [fp, #8]
   17d7c:	cmp	r0, #0
   17d80:	bne	17d88 <__assert_fail@plt+0x6d3c>
   17d84:	b	17e2c <__assert_fail@plt+0x6de0>
   17d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d8c:	cmp	r0, #0
   17d90:	bge	17dfc <__assert_fail@plt+0x6db0>
   17d94:	b	17d98 <__assert_fail@plt+0x6d4c>
   17d98:	b	17de0 <__assert_fail@plt+0x6d94>
   17d9c:	b	17de0 <__assert_fail@plt+0x6d94>
   17da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17da4:	cmn	r0, #1
   17da8:	bne	17de0 <__assert_fail@plt+0x6d94>
   17dac:	b	17db0 <__assert_fail@plt+0x6d64>
   17db0:	ldr	r0, [fp, #8]
   17db4:	add	r0, r0, #0
   17db8:	movw	r1, #0
   17dbc:	cmp	r1, r0
   17dc0:	blt	17e14 <__assert_fail@plt+0x6dc8>
   17dc4:	b	17e2c <__assert_fail@plt+0x6de0>
   17dc8:	ldr	r0, [fp, #8]
   17dcc:	sub	r0, r0, #1
   17dd0:	mvn	r1, #0
   17dd4:	cmp	r1, r0
   17dd8:	blt	17e14 <__assert_fail@plt+0x6dc8>
   17ddc:	b	17e2c <__assert_fail@plt+0x6de0>
   17de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17de4:	movw	r1, #0
   17de8:	sdiv	r0, r1, r0
   17dec:	ldr	r1, [fp, #8]
   17df0:	cmp	r0, r1
   17df4:	blt	17e14 <__assert_fail@plt+0x6dc8>
   17df8:	b	17e2c <__assert_fail@plt+0x6de0>
   17dfc:	ldr	r0, [fp, #8]
   17e00:	movw	r1, #255	; 0xff
   17e04:	sdiv	r0, r1, r0
   17e08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e0c:	cmp	r0, r1
   17e10:	bge	17e2c <__assert_fail@plt+0x6de0>
   17e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e18:	ldr	r1, [fp, #8]
   17e1c:	mul	r0, r0, r1
   17e20:	and	r0, r0, #255	; 0xff
   17e24:	str	r0, [fp, #-28]	; 0xffffffe4
   17e28:	b	18e08 <__assert_fail@plt+0x7dbc>
   17e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e30:	ldr	r1, [fp, #8]
   17e34:	mul	r0, r0, r1
   17e38:	and	r0, r0, #255	; 0xff
   17e3c:	str	r0, [fp, #-28]	; 0xffffffe4
   17e40:	b	18e0c <__assert_fail@plt+0x7dc0>
   17e44:	b	18220 <__assert_fail@plt+0x71d4>
   17e48:	b	17e4c <__assert_fail@plt+0x6e00>
   17e4c:	ldr	r0, [fp, #8]
   17e50:	cmp	r0, #0
   17e54:	bge	17f6c <__assert_fail@plt+0x6f20>
   17e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e5c:	cmp	r0, #0
   17e60:	bge	17ef0 <__assert_fail@plt+0x6ea4>
   17e64:	b	17e68 <__assert_fail@plt+0x6e1c>
   17e68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e6c:	ldr	r1, [fp, #8]
   17e70:	movw	r2, #32767	; 0x7fff
   17e74:	sdiv	r1, r2, r1
   17e78:	cmp	r0, r1
   17e7c:	blt	1800c <__assert_fail@plt+0x6fc0>
   17e80:	b	18024 <__assert_fail@plt+0x6fd8>
   17e84:	andhi	r0, r0, r0
   17e88:	b	17e8c <__assert_fail@plt+0x6e40>
   17e8c:	ldr	r0, [pc, #4004]	; 18e38 <__assert_fail@plt+0x7dec>
   17e90:	ldr	r1, [fp, #8]
   17e94:	cmp	r1, r0
   17e98:	blt	17eb0 <__assert_fail@plt+0x6e64>
   17e9c:	b	17ebc <__assert_fail@plt+0x6e70>
   17ea0:	ldr	r0, [fp, #8]
   17ea4:	movw	r1, #0
   17ea8:	cmp	r1, r0
   17eac:	bge	17ebc <__assert_fail@plt+0x6e70>
   17eb0:	movw	r0, #0
   17eb4:	str	r0, [sp, #80]	; 0x50
   17eb8:	b	17ed4 <__assert_fail@plt+0x6e88>
   17ebc:	ldr	r0, [fp, #8]
   17ec0:	movw	r1, #0
   17ec4:	sub	r0, r1, r0
   17ec8:	movw	r1, #32767	; 0x7fff
   17ecc:	sdiv	r0, r1, r0
   17ed0:	str	r0, [sp, #80]	; 0x50
   17ed4:	ldr	r0, [sp, #80]	; 0x50
   17ed8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17edc:	mvn	r2, #0
   17ee0:	sub	r1, r2, r1
   17ee4:	cmp	r0, r1
   17ee8:	ble	1800c <__assert_fail@plt+0x6fc0>
   17eec:	b	18024 <__assert_fail@plt+0x6fd8>
   17ef0:	b	17ef4 <__assert_fail@plt+0x6ea8>
   17ef4:	b	17f50 <__assert_fail@plt+0x6f04>
   17ef8:	b	17f50 <__assert_fail@plt+0x6f04>
   17efc:	ldr	r0, [fp, #8]
   17f00:	cmn	r0, #1
   17f04:	bne	17f50 <__assert_fail@plt+0x6f04>
   17f08:	b	17f0c <__assert_fail@plt+0x6ec0>
   17f0c:	ldr	r0, [pc, #3884]	; 18e40 <__assert_fail@plt+0x7df4>
   17f10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f14:	add	r0, r1, r0
   17f18:	movw	r1, #0
   17f1c:	cmp	r1, r0
   17f20:	blt	1800c <__assert_fail@plt+0x6fc0>
   17f24:	b	18024 <__assert_fail@plt+0x6fd8>
   17f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f2c:	movw	r1, #0
   17f30:	cmp	r1, r0
   17f34:	bge	18024 <__assert_fail@plt+0x6fd8>
   17f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f3c:	sub	r0, r0, #1
   17f40:	movw	r1, #32767	; 0x7fff
   17f44:	cmp	r1, r0
   17f48:	blt	1800c <__assert_fail@plt+0x6fc0>
   17f4c:	b	18024 <__assert_fail@plt+0x6fd8>
   17f50:	ldr	r0, [pc, #3816]	; 18e40 <__assert_fail@plt+0x7df4>
   17f54:	ldr	r1, [fp, #8]
   17f58:	sdiv	r0, r0, r1
   17f5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f60:	cmp	r0, r1
   17f64:	blt	1800c <__assert_fail@plt+0x6fc0>
   17f68:	b	18024 <__assert_fail@plt+0x6fd8>
   17f6c:	ldr	r0, [fp, #8]
   17f70:	cmp	r0, #0
   17f74:	bne	17f7c <__assert_fail@plt+0x6f30>
   17f78:	b	18024 <__assert_fail@plt+0x6fd8>
   17f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f80:	cmp	r0, #0
   17f84:	bge	17ff4 <__assert_fail@plt+0x6fa8>
   17f88:	b	17f8c <__assert_fail@plt+0x6f40>
   17f8c:	b	17fd8 <__assert_fail@plt+0x6f8c>
   17f90:	b	17fd8 <__assert_fail@plt+0x6f8c>
   17f94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f98:	cmn	r0, #1
   17f9c:	bne	17fd8 <__assert_fail@plt+0x6f8c>
   17fa0:	b	17fa4 <__assert_fail@plt+0x6f58>
   17fa4:	ldr	r0, [pc, #3732]	; 18e40 <__assert_fail@plt+0x7df4>
   17fa8:	ldr	r1, [fp, #8]
   17fac:	add	r0, r1, r0
   17fb0:	movw	r1, #0
   17fb4:	cmp	r1, r0
   17fb8:	blt	1800c <__assert_fail@plt+0x6fc0>
   17fbc:	b	18024 <__assert_fail@plt+0x6fd8>
   17fc0:	ldr	r0, [fp, #8]
   17fc4:	sub	r0, r0, #1
   17fc8:	movw	r1, #32767	; 0x7fff
   17fcc:	cmp	r1, r0
   17fd0:	blt	1800c <__assert_fail@plt+0x6fc0>
   17fd4:	b	18024 <__assert_fail@plt+0x6fd8>
   17fd8:	ldr	r0, [pc, #3680]	; 18e40 <__assert_fail@plt+0x7df4>
   17fdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fe0:	sdiv	r0, r0, r1
   17fe4:	ldr	r1, [fp, #8]
   17fe8:	cmp	r0, r1
   17fec:	blt	1800c <__assert_fail@plt+0x6fc0>
   17ff0:	b	18024 <__assert_fail@plt+0x6fd8>
   17ff4:	ldr	r0, [fp, #8]
   17ff8:	movw	r1, #32767	; 0x7fff
   17ffc:	sdiv	r0, r1, r0
   18000:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18004:	cmp	r0, r1
   18008:	bge	18024 <__assert_fail@plt+0x6fd8>
   1800c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18010:	ldr	r1, [fp, #8]
   18014:	mul	r0, r0, r1
   18018:	sxth	r0, r0
   1801c:	str	r0, [fp, #-28]	; 0xffffffe4
   18020:	b	18e08 <__assert_fail@plt+0x7dbc>
   18024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18028:	ldr	r1, [fp, #8]
   1802c:	mul	r0, r0, r1
   18030:	sxth	r0, r0
   18034:	str	r0, [fp, #-28]	; 0xffffffe4
   18038:	b	18e0c <__assert_fail@plt+0x7dc0>
   1803c:	ldr	r0, [fp, #8]
   18040:	cmp	r0, #0
   18044:	bge	18154 <__assert_fail@plt+0x7108>
   18048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1804c:	cmp	r0, #0
   18050:	bge	180dc <__assert_fail@plt+0x7090>
   18054:	b	18058 <__assert_fail@plt+0x700c>
   18058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1805c:	ldr	r1, [fp, #8]
   18060:	movw	r2, #65535	; 0xffff
   18064:	sdiv	r1, r2, r1
   18068:	cmp	r0, r1
   1806c:	blt	181f0 <__assert_fail@plt+0x71a4>
   18070:	b	18208 <__assert_fail@plt+0x71bc>
   18074:	b	18078 <__assert_fail@plt+0x702c>
   18078:	ldr	r0, [pc, #3512]	; 18e38 <__assert_fail@plt+0x7dec>
   1807c:	ldr	r1, [fp, #8]
   18080:	cmp	r1, r0
   18084:	blt	1809c <__assert_fail@plt+0x7050>
   18088:	b	180a8 <__assert_fail@plt+0x705c>
   1808c:	ldr	r0, [fp, #8]
   18090:	movw	r1, #0
   18094:	cmp	r1, r0
   18098:	bge	180a8 <__assert_fail@plt+0x705c>
   1809c:	movw	r0, #0
   180a0:	str	r0, [sp, #76]	; 0x4c
   180a4:	b	180c0 <__assert_fail@plt+0x7074>
   180a8:	ldr	r0, [fp, #8]
   180ac:	movw	r1, #0
   180b0:	sub	r0, r1, r0
   180b4:	movw	r1, #65535	; 0xffff
   180b8:	sdiv	r0, r1, r0
   180bc:	str	r0, [sp, #76]	; 0x4c
   180c0:	ldr	r0, [sp, #76]	; 0x4c
   180c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180c8:	mvn	r2, #0
   180cc:	sub	r1, r2, r1
   180d0:	cmp	r0, r1
   180d4:	ble	181f0 <__assert_fail@plt+0x71a4>
   180d8:	b	18208 <__assert_fail@plt+0x71bc>
   180dc:	b	180e0 <__assert_fail@plt+0x7094>
   180e0:	b	18138 <__assert_fail@plt+0x70ec>
   180e4:	b	18138 <__assert_fail@plt+0x70ec>
   180e8:	ldr	r0, [fp, #8]
   180ec:	cmn	r0, #1
   180f0:	bne	18138 <__assert_fail@plt+0x70ec>
   180f4:	b	180f8 <__assert_fail@plt+0x70ac>
   180f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180fc:	add	r0, r0, #0
   18100:	movw	r1, #0
   18104:	cmp	r1, r0
   18108:	blt	181f0 <__assert_fail@plt+0x71a4>
   1810c:	b	18208 <__assert_fail@plt+0x71bc>
   18110:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18114:	movw	r1, #0
   18118:	cmp	r1, r0
   1811c:	bge	18208 <__assert_fail@plt+0x71bc>
   18120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18124:	sub	r0, r0, #1
   18128:	mvn	r1, #0
   1812c:	cmp	r1, r0
   18130:	blt	181f0 <__assert_fail@plt+0x71a4>
   18134:	b	18208 <__assert_fail@plt+0x71bc>
   18138:	ldr	r0, [fp, #8]
   1813c:	movw	r1, #0
   18140:	sdiv	r0, r1, r0
   18144:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18148:	cmp	r0, r1
   1814c:	blt	181f0 <__assert_fail@plt+0x71a4>
   18150:	b	18208 <__assert_fail@plt+0x71bc>
   18154:	ldr	r0, [fp, #8]
   18158:	cmp	r0, #0
   1815c:	bne	18164 <__assert_fail@plt+0x7118>
   18160:	b	18208 <__assert_fail@plt+0x71bc>
   18164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18168:	cmp	r0, #0
   1816c:	bge	181d8 <__assert_fail@plt+0x718c>
   18170:	b	18174 <__assert_fail@plt+0x7128>
   18174:	b	181bc <__assert_fail@plt+0x7170>
   18178:	b	181bc <__assert_fail@plt+0x7170>
   1817c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18180:	cmn	r0, #1
   18184:	bne	181bc <__assert_fail@plt+0x7170>
   18188:	b	1818c <__assert_fail@plt+0x7140>
   1818c:	ldr	r0, [fp, #8]
   18190:	add	r0, r0, #0
   18194:	movw	r1, #0
   18198:	cmp	r1, r0
   1819c:	blt	181f0 <__assert_fail@plt+0x71a4>
   181a0:	b	18208 <__assert_fail@plt+0x71bc>
   181a4:	ldr	r0, [fp, #8]
   181a8:	sub	r0, r0, #1
   181ac:	mvn	r1, #0
   181b0:	cmp	r1, r0
   181b4:	blt	181f0 <__assert_fail@plt+0x71a4>
   181b8:	b	18208 <__assert_fail@plt+0x71bc>
   181bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181c0:	movw	r1, #0
   181c4:	sdiv	r0, r1, r0
   181c8:	ldr	r1, [fp, #8]
   181cc:	cmp	r0, r1
   181d0:	blt	181f0 <__assert_fail@plt+0x71a4>
   181d4:	b	18208 <__assert_fail@plt+0x71bc>
   181d8:	ldr	r0, [fp, #8]
   181dc:	movw	r1, #65535	; 0xffff
   181e0:	sdiv	r0, r1, r0
   181e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181e8:	cmp	r0, r1
   181ec:	bge	18208 <__assert_fail@plt+0x71bc>
   181f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181f4:	ldr	r1, [fp, #8]
   181f8:	mul	r0, r0, r1
   181fc:	uxth	r0, r0
   18200:	str	r0, [fp, #-28]	; 0xffffffe4
   18204:	b	18e08 <__assert_fail@plt+0x7dbc>
   18208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1820c:	ldr	r1, [fp, #8]
   18210:	mul	r0, r0, r1
   18214:	uxth	r0, r0
   18218:	str	r0, [fp, #-28]	; 0xffffffe4
   1821c:	b	18e0c <__assert_fail@plt+0x7dc0>
   18220:	b	18224 <__assert_fail@plt+0x71d8>
   18224:	b	18228 <__assert_fail@plt+0x71dc>
   18228:	ldr	r0, [fp, #8]
   1822c:	cmp	r0, #0
   18230:	bge	18334 <__assert_fail@plt+0x72e8>
   18234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18238:	cmp	r0, #0
   1823c:	bge	182c8 <__assert_fail@plt+0x727c>
   18240:	b	18244 <__assert_fail@plt+0x71f8>
   18244:	ldr	r0, [pc, #3048]	; 18e34 <__assert_fail@plt+0x7de8>
   18248:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1824c:	ldr	r2, [fp, #8]
   18250:	sdiv	r0, r0, r2
   18254:	cmp	r1, r0
   18258:	blt	183c4 <__assert_fail@plt+0x7378>
   1825c:	b	183d8 <__assert_fail@plt+0x738c>
   18260:	b	18264 <__assert_fail@plt+0x7218>
   18264:	ldr	r0, [pc, #3020]	; 18e38 <__assert_fail@plt+0x7dec>
   18268:	ldr	r1, [fp, #8]
   1826c:	cmp	r1, r0
   18270:	blt	18288 <__assert_fail@plt+0x723c>
   18274:	b	18294 <__assert_fail@plt+0x7248>
   18278:	ldr	r0, [fp, #8]
   1827c:	movw	r1, #0
   18280:	cmp	r1, r0
   18284:	bge	18294 <__assert_fail@plt+0x7248>
   18288:	movw	r0, #0
   1828c:	str	r0, [sp, #72]	; 0x48
   18290:	b	182ac <__assert_fail@plt+0x7260>
   18294:	ldr	r0, [pc, #2968]	; 18e34 <__assert_fail@plt+0x7de8>
   18298:	ldr	r1, [fp, #8]
   1829c:	movw	r2, #0
   182a0:	sub	r1, r2, r1
   182a4:	sdiv	r0, r0, r1
   182a8:	str	r0, [sp, #72]	; 0x48
   182ac:	ldr	r0, [sp, #72]	; 0x48
   182b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182b4:	mvn	r2, #0
   182b8:	sub	r1, r2, r1
   182bc:	cmp	r0, r1
   182c0:	ble	183c4 <__assert_fail@plt+0x7378>
   182c4:	b	183d8 <__assert_fail@plt+0x738c>
   182c8:	ldr	r0, [fp, #8]
   182cc:	cmn	r0, #1
   182d0:	bne	18318 <__assert_fail@plt+0x72cc>
   182d4:	b	182d8 <__assert_fail@plt+0x728c>
   182d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182dc:	add	r0, r0, #-2147483648	; 0x80000000
   182e0:	movw	r1, #0
   182e4:	cmp	r1, r0
   182e8:	blt	183c4 <__assert_fail@plt+0x7378>
   182ec:	b	183d8 <__assert_fail@plt+0x738c>
   182f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182f4:	movw	r1, #0
   182f8:	cmp	r1, r0
   182fc:	bge	183d8 <__assert_fail@plt+0x738c>
   18300:	ldr	r0, [pc, #2860]	; 18e34 <__assert_fail@plt+0x7de8>
   18304:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18308:	sub	r1, r1, #1
   1830c:	cmp	r0, r1
   18310:	blt	183c4 <__assert_fail@plt+0x7378>
   18314:	b	183d8 <__assert_fail@plt+0x738c>
   18318:	ldr	r0, [pc, #2844]	; 18e3c <__assert_fail@plt+0x7df0>
   1831c:	ldr	r1, [fp, #8]
   18320:	sdiv	r0, r0, r1
   18324:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18328:	cmp	r0, r1
   1832c:	blt	183c4 <__assert_fail@plt+0x7378>
   18330:	b	183d8 <__assert_fail@plt+0x738c>
   18334:	ldr	r0, [fp, #8]
   18338:	cmp	r0, #0
   1833c:	bne	18344 <__assert_fail@plt+0x72f8>
   18340:	b	183d8 <__assert_fail@plt+0x738c>
   18344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18348:	cmp	r0, #0
   1834c:	bge	183ac <__assert_fail@plt+0x7360>
   18350:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18354:	cmn	r0, #1
   18358:	bne	18390 <__assert_fail@plt+0x7344>
   1835c:	b	18360 <__assert_fail@plt+0x7314>
   18360:	ldr	r0, [fp, #8]
   18364:	add	r0, r0, #-2147483648	; 0x80000000
   18368:	movw	r1, #0
   1836c:	cmp	r1, r0
   18370:	blt	183c4 <__assert_fail@plt+0x7378>
   18374:	b	183d8 <__assert_fail@plt+0x738c>
   18378:	ldr	r0, [pc, #2740]	; 18e34 <__assert_fail@plt+0x7de8>
   1837c:	ldr	r1, [fp, #8]
   18380:	sub	r1, r1, #1
   18384:	cmp	r0, r1
   18388:	blt	183c4 <__assert_fail@plt+0x7378>
   1838c:	b	183d8 <__assert_fail@plt+0x738c>
   18390:	ldr	r0, [pc, #2724]	; 18e3c <__assert_fail@plt+0x7df0>
   18394:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18398:	sdiv	r0, r0, r1
   1839c:	ldr	r1, [fp, #8]
   183a0:	cmp	r0, r1
   183a4:	blt	183c4 <__assert_fail@plt+0x7378>
   183a8:	b	183d8 <__assert_fail@plt+0x738c>
   183ac:	ldr	r0, [pc, #2688]	; 18e34 <__assert_fail@plt+0x7de8>
   183b0:	ldr	r1, [fp, #8]
   183b4:	sdiv	r0, r0, r1
   183b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183bc:	cmp	r0, r1
   183c0:	bge	183d8 <__assert_fail@plt+0x738c>
   183c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183c8:	ldr	r1, [fp, #8]
   183cc:	mul	r0, r0, r1
   183d0:	str	r0, [fp, #-28]	; 0xffffffe4
   183d4:	b	18e08 <__assert_fail@plt+0x7dbc>
   183d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183dc:	ldr	r1, [fp, #8]
   183e0:	mul	r0, r0, r1
   183e4:	str	r0, [fp, #-28]	; 0xffffffe4
   183e8:	b	18e0c <__assert_fail@plt+0x7dc0>
   183ec:	ldr	r0, [fp, #8]
   183f0:	cmp	r0, #0
   183f4:	bge	18504 <__assert_fail@plt+0x74b8>
   183f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183fc:	cmp	r0, #0
   18400:	bge	1848c <__assert_fail@plt+0x7440>
   18404:	b	18424 <__assert_fail@plt+0x73d8>
   18408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1840c:	ldr	r1, [fp, #8]
   18410:	mvn	r2, #0
   18414:	udiv	r1, r2, r1
   18418:	cmp	r0, r1
   1841c:	bcc	185a0 <__assert_fail@plt+0x7554>
   18420:	b	185b4 <__assert_fail@plt+0x7568>
   18424:	b	18428 <__assert_fail@plt+0x73dc>
   18428:	ldr	r0, [pc, #2568]	; 18e38 <__assert_fail@plt+0x7dec>
   1842c:	ldr	r1, [fp, #8]
   18430:	cmp	r1, r0
   18434:	blt	1844c <__assert_fail@plt+0x7400>
   18438:	b	18458 <__assert_fail@plt+0x740c>
   1843c:	ldr	r0, [fp, #8]
   18440:	movw	r1, #0
   18444:	cmp	r1, r0
   18448:	bge	18458 <__assert_fail@plt+0x740c>
   1844c:	movw	r0, #1
   18450:	str	r0, [sp, #68]	; 0x44
   18454:	b	18470 <__assert_fail@plt+0x7424>
   18458:	ldr	r0, [fp, #8]
   1845c:	movw	r1, #0
   18460:	sub	r0, r1, r0
   18464:	mvn	r1, #0
   18468:	udiv	r0, r1, r0
   1846c:	str	r0, [sp, #68]	; 0x44
   18470:	ldr	r0, [sp, #68]	; 0x44
   18474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18478:	mvn	r2, #0
   1847c:	sub	r1, r2, r1
   18480:	cmp	r0, r1
   18484:	bls	185a0 <__assert_fail@plt+0x7554>
   18488:	b	185b4 <__assert_fail@plt+0x7568>
   1848c:	b	18490 <__assert_fail@plt+0x7444>
   18490:	b	184e8 <__assert_fail@plt+0x749c>
   18494:	b	184e8 <__assert_fail@plt+0x749c>
   18498:	ldr	r0, [fp, #8]
   1849c:	cmn	r0, #1
   184a0:	bne	184e8 <__assert_fail@plt+0x749c>
   184a4:	b	184a8 <__assert_fail@plt+0x745c>
   184a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184ac:	add	r0, r0, #0
   184b0:	movw	r1, #0
   184b4:	cmp	r1, r0
   184b8:	blt	185a0 <__assert_fail@plt+0x7554>
   184bc:	b	185b4 <__assert_fail@plt+0x7568>
   184c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c4:	movw	r1, #0
   184c8:	cmp	r1, r0
   184cc:	bge	185b4 <__assert_fail@plt+0x7568>
   184d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184d4:	sub	r0, r0, #1
   184d8:	mvn	r1, #0
   184dc:	cmp	r1, r0
   184e0:	blt	185a0 <__assert_fail@plt+0x7554>
   184e4:	b	185b4 <__assert_fail@plt+0x7568>
   184e8:	ldr	r0, [fp, #8]
   184ec:	movw	r1, #0
   184f0:	sdiv	r0, r1, r0
   184f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184f8:	cmp	r0, r1
   184fc:	blt	185a0 <__assert_fail@plt+0x7554>
   18500:	b	185b4 <__assert_fail@plt+0x7568>
   18504:	ldr	r0, [fp, #8]
   18508:	cmp	r0, #0
   1850c:	bne	18514 <__assert_fail@plt+0x74c8>
   18510:	b	185b4 <__assert_fail@plt+0x7568>
   18514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18518:	cmp	r0, #0
   1851c:	bge	18588 <__assert_fail@plt+0x753c>
   18520:	b	18524 <__assert_fail@plt+0x74d8>
   18524:	b	1856c <__assert_fail@plt+0x7520>
   18528:	b	1856c <__assert_fail@plt+0x7520>
   1852c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18530:	cmn	r0, #1
   18534:	bne	1856c <__assert_fail@plt+0x7520>
   18538:	b	1853c <__assert_fail@plt+0x74f0>
   1853c:	ldr	r0, [fp, #8]
   18540:	add	r0, r0, #0
   18544:	movw	r1, #0
   18548:	cmp	r1, r0
   1854c:	blt	185a0 <__assert_fail@plt+0x7554>
   18550:	b	185b4 <__assert_fail@plt+0x7568>
   18554:	ldr	r0, [fp, #8]
   18558:	sub	r0, r0, #1
   1855c:	mvn	r1, #0
   18560:	cmp	r1, r0
   18564:	blt	185a0 <__assert_fail@plt+0x7554>
   18568:	b	185b4 <__assert_fail@plt+0x7568>
   1856c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18570:	movw	r1, #0
   18574:	sdiv	r0, r1, r0
   18578:	ldr	r1, [fp, #8]
   1857c:	cmp	r0, r1
   18580:	blt	185a0 <__assert_fail@plt+0x7554>
   18584:	b	185b4 <__assert_fail@plt+0x7568>
   18588:	ldr	r0, [fp, #8]
   1858c:	mvn	r1, #0
   18590:	udiv	r0, r1, r0
   18594:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18598:	cmp	r0, r1
   1859c:	bcs	185b4 <__assert_fail@plt+0x7568>
   185a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185a4:	ldr	r1, [fp, #8]
   185a8:	mul	r0, r0, r1
   185ac:	str	r0, [fp, #-28]	; 0xffffffe4
   185b0:	b	18e08 <__assert_fail@plt+0x7dbc>
   185b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185b8:	ldr	r1, [fp, #8]
   185bc:	mul	r0, r0, r1
   185c0:	str	r0, [fp, #-28]	; 0xffffffe4
   185c4:	b	18e0c <__assert_fail@plt+0x7dc0>
   185c8:	b	185cc <__assert_fail@plt+0x7580>
   185cc:	b	185d0 <__assert_fail@plt+0x7584>
   185d0:	ldr	r0, [fp, #8]
   185d4:	cmp	r0, #0
   185d8:	bge	186dc <__assert_fail@plt+0x7690>
   185dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185e0:	cmp	r0, #0
   185e4:	bge	18670 <__assert_fail@plt+0x7624>
   185e8:	b	185ec <__assert_fail@plt+0x75a0>
   185ec:	ldr	r0, [pc, #2112]	; 18e34 <__assert_fail@plt+0x7de8>
   185f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185f4:	ldr	r2, [fp, #8]
   185f8:	sdiv	r0, r0, r2
   185fc:	cmp	r1, r0
   18600:	blt	1876c <__assert_fail@plt+0x7720>
   18604:	b	18780 <__assert_fail@plt+0x7734>
   18608:	b	1860c <__assert_fail@plt+0x75c0>
   1860c:	ldr	r0, [pc, #2084]	; 18e38 <__assert_fail@plt+0x7dec>
   18610:	ldr	r1, [fp, #8]
   18614:	cmp	r1, r0
   18618:	blt	18630 <__assert_fail@plt+0x75e4>
   1861c:	b	1863c <__assert_fail@plt+0x75f0>
   18620:	ldr	r0, [fp, #8]
   18624:	movw	r1, #0
   18628:	cmp	r1, r0
   1862c:	bge	1863c <__assert_fail@plt+0x75f0>
   18630:	movw	r0, #0
   18634:	str	r0, [sp, #64]	; 0x40
   18638:	b	18654 <__assert_fail@plt+0x7608>
   1863c:	ldr	r0, [pc, #2032]	; 18e34 <__assert_fail@plt+0x7de8>
   18640:	ldr	r1, [fp, #8]
   18644:	movw	r2, #0
   18648:	sub	r1, r2, r1
   1864c:	sdiv	r0, r0, r1
   18650:	str	r0, [sp, #64]	; 0x40
   18654:	ldr	r0, [sp, #64]	; 0x40
   18658:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1865c:	mvn	r2, #0
   18660:	sub	r1, r2, r1
   18664:	cmp	r0, r1
   18668:	ble	1876c <__assert_fail@plt+0x7720>
   1866c:	b	18780 <__assert_fail@plt+0x7734>
   18670:	ldr	r0, [fp, #8]
   18674:	cmn	r0, #1
   18678:	bne	186c0 <__assert_fail@plt+0x7674>
   1867c:	b	18680 <__assert_fail@plt+0x7634>
   18680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18684:	add	r0, r0, #-2147483648	; 0x80000000
   18688:	movw	r1, #0
   1868c:	cmp	r1, r0
   18690:	blt	1876c <__assert_fail@plt+0x7720>
   18694:	b	18780 <__assert_fail@plt+0x7734>
   18698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1869c:	movw	r1, #0
   186a0:	cmp	r1, r0
   186a4:	bge	18780 <__assert_fail@plt+0x7734>
   186a8:	ldr	r0, [pc, #1924]	; 18e34 <__assert_fail@plt+0x7de8>
   186ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186b0:	sub	r1, r1, #1
   186b4:	cmp	r0, r1
   186b8:	blt	1876c <__assert_fail@plt+0x7720>
   186bc:	b	18780 <__assert_fail@plt+0x7734>
   186c0:	ldr	r0, [pc, #1908]	; 18e3c <__assert_fail@plt+0x7df0>
   186c4:	ldr	r1, [fp, #8]
   186c8:	sdiv	r0, r0, r1
   186cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186d0:	cmp	r0, r1
   186d4:	blt	1876c <__assert_fail@plt+0x7720>
   186d8:	b	18780 <__assert_fail@plt+0x7734>
   186dc:	ldr	r0, [fp, #8]
   186e0:	cmp	r0, #0
   186e4:	bne	186ec <__assert_fail@plt+0x76a0>
   186e8:	b	18780 <__assert_fail@plt+0x7734>
   186ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186f0:	cmp	r0, #0
   186f4:	bge	18754 <__assert_fail@plt+0x7708>
   186f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186fc:	cmn	r0, #1
   18700:	bne	18738 <__assert_fail@plt+0x76ec>
   18704:	b	18708 <__assert_fail@plt+0x76bc>
   18708:	ldr	r0, [fp, #8]
   1870c:	add	r0, r0, #-2147483648	; 0x80000000
   18710:	movw	r1, #0
   18714:	cmp	r1, r0
   18718:	blt	1876c <__assert_fail@plt+0x7720>
   1871c:	b	18780 <__assert_fail@plt+0x7734>
   18720:	ldr	r0, [pc, #1804]	; 18e34 <__assert_fail@plt+0x7de8>
   18724:	ldr	r1, [fp, #8]
   18728:	sub	r1, r1, #1
   1872c:	cmp	r0, r1
   18730:	blt	1876c <__assert_fail@plt+0x7720>
   18734:	b	18780 <__assert_fail@plt+0x7734>
   18738:	ldr	r0, [pc, #1788]	; 18e3c <__assert_fail@plt+0x7df0>
   1873c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18740:	sdiv	r0, r0, r1
   18744:	ldr	r1, [fp, #8]
   18748:	cmp	r0, r1
   1874c:	blt	1876c <__assert_fail@plt+0x7720>
   18750:	b	18780 <__assert_fail@plt+0x7734>
   18754:	ldr	r0, [pc, #1752]	; 18e34 <__assert_fail@plt+0x7de8>
   18758:	ldr	r1, [fp, #8]
   1875c:	sdiv	r0, r0, r1
   18760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18764:	cmp	r0, r1
   18768:	bge	18780 <__assert_fail@plt+0x7734>
   1876c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18770:	ldr	r1, [fp, #8]
   18774:	mul	r0, r0, r1
   18778:	str	r0, [fp, #-28]	; 0xffffffe4
   1877c:	b	18e08 <__assert_fail@plt+0x7dbc>
   18780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18784:	ldr	r1, [fp, #8]
   18788:	mul	r0, r0, r1
   1878c:	str	r0, [fp, #-28]	; 0xffffffe4
   18790:	b	18e0c <__assert_fail@plt+0x7dc0>
   18794:	ldr	r0, [fp, #8]
   18798:	cmp	r0, #0
   1879c:	bge	188ac <__assert_fail@plt+0x7860>
   187a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187a4:	cmp	r0, #0
   187a8:	bge	18834 <__assert_fail@plt+0x77e8>
   187ac:	b	187cc <__assert_fail@plt+0x7780>
   187b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187b4:	ldr	r1, [fp, #8]
   187b8:	mvn	r2, #0
   187bc:	udiv	r1, r2, r1
   187c0:	cmp	r0, r1
   187c4:	bcc	18948 <__assert_fail@plt+0x78fc>
   187c8:	b	1895c <__assert_fail@plt+0x7910>
   187cc:	b	187d0 <__assert_fail@plt+0x7784>
   187d0:	ldr	r0, [pc, #1632]	; 18e38 <__assert_fail@plt+0x7dec>
   187d4:	ldr	r1, [fp, #8]
   187d8:	cmp	r1, r0
   187dc:	blt	187f4 <__assert_fail@plt+0x77a8>
   187e0:	b	18800 <__assert_fail@plt+0x77b4>
   187e4:	ldr	r0, [fp, #8]
   187e8:	movw	r1, #0
   187ec:	cmp	r1, r0
   187f0:	bge	18800 <__assert_fail@plt+0x77b4>
   187f4:	movw	r0, #1
   187f8:	str	r0, [sp, #60]	; 0x3c
   187fc:	b	18818 <__assert_fail@plt+0x77cc>
   18800:	ldr	r0, [fp, #8]
   18804:	movw	r1, #0
   18808:	sub	r0, r1, r0
   1880c:	mvn	r1, #0
   18810:	udiv	r0, r1, r0
   18814:	str	r0, [sp, #60]	; 0x3c
   18818:	ldr	r0, [sp, #60]	; 0x3c
   1881c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18820:	mvn	r2, #0
   18824:	sub	r1, r2, r1
   18828:	cmp	r0, r1
   1882c:	bls	18948 <__assert_fail@plt+0x78fc>
   18830:	b	1895c <__assert_fail@plt+0x7910>
   18834:	b	18838 <__assert_fail@plt+0x77ec>
   18838:	b	18890 <__assert_fail@plt+0x7844>
   1883c:	b	18890 <__assert_fail@plt+0x7844>
   18840:	ldr	r0, [fp, #8]
   18844:	cmn	r0, #1
   18848:	bne	18890 <__assert_fail@plt+0x7844>
   1884c:	b	18850 <__assert_fail@plt+0x7804>
   18850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18854:	add	r0, r0, #0
   18858:	movw	r1, #0
   1885c:	cmp	r1, r0
   18860:	blt	18948 <__assert_fail@plt+0x78fc>
   18864:	b	1895c <__assert_fail@plt+0x7910>
   18868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1886c:	movw	r1, #0
   18870:	cmp	r1, r0
   18874:	bge	1895c <__assert_fail@plt+0x7910>
   18878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1887c:	sub	r0, r0, #1
   18880:	mvn	r1, #0
   18884:	cmp	r1, r0
   18888:	blt	18948 <__assert_fail@plt+0x78fc>
   1888c:	b	1895c <__assert_fail@plt+0x7910>
   18890:	ldr	r0, [fp, #8]
   18894:	movw	r1, #0
   18898:	sdiv	r0, r1, r0
   1889c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   188a0:	cmp	r0, r1
   188a4:	blt	18948 <__assert_fail@plt+0x78fc>
   188a8:	b	1895c <__assert_fail@plt+0x7910>
   188ac:	ldr	r0, [fp, #8]
   188b0:	cmp	r0, #0
   188b4:	bne	188bc <__assert_fail@plt+0x7870>
   188b8:	b	1895c <__assert_fail@plt+0x7910>
   188bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188c0:	cmp	r0, #0
   188c4:	bge	18930 <__assert_fail@plt+0x78e4>
   188c8:	b	188cc <__assert_fail@plt+0x7880>
   188cc:	b	18914 <__assert_fail@plt+0x78c8>
   188d0:	b	18914 <__assert_fail@plt+0x78c8>
   188d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188d8:	cmn	r0, #1
   188dc:	bne	18914 <__assert_fail@plt+0x78c8>
   188e0:	b	188e4 <__assert_fail@plt+0x7898>
   188e4:	ldr	r0, [fp, #8]
   188e8:	add	r0, r0, #0
   188ec:	movw	r1, #0
   188f0:	cmp	r1, r0
   188f4:	blt	18948 <__assert_fail@plt+0x78fc>
   188f8:	b	1895c <__assert_fail@plt+0x7910>
   188fc:	ldr	r0, [fp, #8]
   18900:	sub	r0, r0, #1
   18904:	mvn	r1, #0
   18908:	cmp	r1, r0
   1890c:	blt	18948 <__assert_fail@plt+0x78fc>
   18910:	b	1895c <__assert_fail@plt+0x7910>
   18914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18918:	movw	r1, #0
   1891c:	sdiv	r0, r1, r0
   18920:	ldr	r1, [fp, #8]
   18924:	cmp	r0, r1
   18928:	blt	18948 <__assert_fail@plt+0x78fc>
   1892c:	b	1895c <__assert_fail@plt+0x7910>
   18930:	ldr	r0, [fp, #8]
   18934:	mvn	r1, #0
   18938:	udiv	r0, r1, r0
   1893c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18940:	cmp	r0, r1
   18944:	bcs	1895c <__assert_fail@plt+0x7910>
   18948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1894c:	ldr	r1, [fp, #8]
   18950:	mul	r0, r0, r1
   18954:	str	r0, [fp, #-28]	; 0xffffffe4
   18958:	b	18e08 <__assert_fail@plt+0x7dbc>
   1895c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18960:	ldr	r1, [fp, #8]
   18964:	mul	r0, r0, r1
   18968:	str	r0, [fp, #-28]	; 0xffffffe4
   1896c:	b	18e0c <__assert_fail@plt+0x7dc0>
   18970:	b	18974 <__assert_fail@plt+0x7928>
   18974:	ldr	r0, [fp, #8]
   18978:	cmp	r0, #0
   1897c:	bge	18ae4 <__assert_fail@plt+0x7a98>
   18980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18984:	cmp	r0, #0
   18988:	bge	18a60 <__assert_fail@plt+0x7a14>
   1898c:	b	18990 <__assert_fail@plt+0x7944>
   18990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18994:	ldr	r1, [fp, #8]
   18998:	asr	r3, r1, #31
   1899c:	mvn	r2, #0
   189a0:	mvn	ip, #-2147483648	; 0x80000000
   189a4:	str	r0, [sp, #56]	; 0x38
   189a8:	mov	r0, r2
   189ac:	str	r1, [sp, #52]	; 0x34
   189b0:	mov	r1, ip
   189b4:	ldr	r2, [sp, #52]	; 0x34
   189b8:	bl	1b1c4 <__assert_fail@plt+0xa178>
   189bc:	ldr	r2, [sp, #56]	; 0x38
   189c0:	subs	r0, r2, r0
   189c4:	rscs	r1, r1, r2, asr #31
   189c8:	blt	18bac <__assert_fail@plt+0x7b60>
   189cc:	b	18bc0 <__assert_fail@plt+0x7b74>
   189d0:	b	189d4 <__assert_fail@plt+0x7988>
   189d4:	ldr	r0, [pc, #1116]	; 18e38 <__assert_fail@plt+0x7dec>
   189d8:	ldr	r1, [fp, #8]
   189dc:	cmp	r1, r0
   189e0:	blt	189f8 <__assert_fail@plt+0x79ac>
   189e4:	b	18a0c <__assert_fail@plt+0x79c0>
   189e8:	ldr	r0, [fp, #8]
   189ec:	movw	r1, #0
   189f0:	cmp	r1, r0
   189f4:	bge	18a0c <__assert_fail@plt+0x79c0>
   189f8:	mov	r0, #0
   189fc:	mvn	r1, #0
   18a00:	str	r1, [sp, #48]	; 0x30
   18a04:	str	r0, [sp, #44]	; 0x2c
   18a08:	b	18a40 <__assert_fail@plt+0x79f4>
   18a0c:	ldr	r0, [fp, #8]
   18a10:	rsb	r0, r0, #0
   18a14:	asr	r3, r0, #31
   18a18:	mvn	r1, #0
   18a1c:	mvn	r2, #-2147483648	; 0x80000000
   18a20:	str	r0, [sp, #40]	; 0x28
   18a24:	mov	r0, r1
   18a28:	mov	r1, r2
   18a2c:	ldr	r2, [sp, #40]	; 0x28
   18a30:	bl	1b1c4 <__assert_fail@plt+0xa178>
   18a34:	str	r0, [sp, #48]	; 0x30
   18a38:	str	r1, [sp, #44]	; 0x2c
   18a3c:	b	18a40 <__assert_fail@plt+0x79f4>
   18a40:	ldr	r0, [sp, #44]	; 0x2c
   18a44:	ldr	r1, [sp, #48]	; 0x30
   18a48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a4c:	mvn	r2, r2
   18a50:	subs	r1, r2, r1
   18a54:	rscs	r0, r0, r2, asr #31
   18a58:	bge	18bac <__assert_fail@plt+0x7b60>
   18a5c:	b	18bc0 <__assert_fail@plt+0x7b74>
   18a60:	ldr	r0, [fp, #8]
   18a64:	cmn	r0, #1
   18a68:	bne	18aac <__assert_fail@plt+0x7a60>
   18a6c:	b	18a70 <__assert_fail@plt+0x7a24>
   18a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a74:	mov	r1, #-2147483648	; 0x80000000
   18a78:	add	r1, r1, r0, asr #31
   18a7c:	rsbs	r0, r0, #0
   18a80:	rscs	r1, r1, #0
   18a84:	blt	18bac <__assert_fail@plt+0x7b60>
   18a88:	b	18bc0 <__assert_fail@plt+0x7b74>
   18a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a90:	movw	r1, #0
   18a94:	cmp	r1, r0
   18a98:	bge	18bc0 <__assert_fail@plt+0x7b74>
   18a9c:	mov	r0, #0
   18aa0:	cmp	r0, #0
   18aa4:	bne	18bac <__assert_fail@plt+0x7b60>
   18aa8:	b	18bc0 <__assert_fail@plt+0x7b74>
   18aac:	ldr	r0, [fp, #8]
   18ab0:	asr	r3, r0, #31
   18ab4:	mov	r1, #0
   18ab8:	mov	r2, #-2147483648	; 0x80000000
   18abc:	str	r0, [sp, #36]	; 0x24
   18ac0:	mov	r0, r1
   18ac4:	mov	r1, r2
   18ac8:	ldr	r2, [sp, #36]	; 0x24
   18acc:	bl	1b1c4 <__assert_fail@plt+0xa178>
   18ad0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ad4:	subs	r0, r0, r2
   18ad8:	sbcs	r1, r1, r2, asr #31
   18adc:	blt	18bac <__assert_fail@plt+0x7b60>
   18ae0:	b	18bc0 <__assert_fail@plt+0x7b74>
   18ae4:	ldr	r0, [fp, #8]
   18ae8:	cmp	r0, #0
   18aec:	bne	18af4 <__assert_fail@plt+0x7aa8>
   18af0:	b	18bc0 <__assert_fail@plt+0x7b74>
   18af4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18af8:	cmp	r0, #0
   18afc:	bge	18b74 <__assert_fail@plt+0x7b28>
   18b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b04:	cmn	r0, #1
   18b08:	bne	18b3c <__assert_fail@plt+0x7af0>
   18b0c:	b	18b10 <__assert_fail@plt+0x7ac4>
   18b10:	ldr	r0, [fp, #8]
   18b14:	mov	r1, #-2147483648	; 0x80000000
   18b18:	add	r1, r1, r0, asr #31
   18b1c:	rsbs	r0, r0, #0
   18b20:	rscs	r1, r1, #0
   18b24:	blt	18bac <__assert_fail@plt+0x7b60>
   18b28:	b	18bc0 <__assert_fail@plt+0x7b74>
   18b2c:	mov	r0, #0
   18b30:	cmp	r0, #0
   18b34:	bne	18bac <__assert_fail@plt+0x7b60>
   18b38:	b	18bc0 <__assert_fail@plt+0x7b74>
   18b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b40:	asr	r3, r0, #31
   18b44:	mov	r1, #0
   18b48:	mov	r2, #-2147483648	; 0x80000000
   18b4c:	str	r0, [sp, #32]
   18b50:	mov	r0, r1
   18b54:	mov	r1, r2
   18b58:	ldr	r2, [sp, #32]
   18b5c:	bl	1b1c4 <__assert_fail@plt+0xa178>
   18b60:	ldr	r2, [fp, #8]
   18b64:	subs	r0, r0, r2
   18b68:	sbcs	r1, r1, r2, asr #31
   18b6c:	blt	18bac <__assert_fail@plt+0x7b60>
   18b70:	b	18bc0 <__assert_fail@plt+0x7b74>
   18b74:	ldr	r0, [fp, #8]
   18b78:	asr	r3, r0, #31
   18b7c:	mvn	r1, #0
   18b80:	mvn	r2, #-2147483648	; 0x80000000
   18b84:	str	r0, [sp, #28]
   18b88:	mov	r0, r1
   18b8c:	mov	r1, r2
   18b90:	ldr	r2, [sp, #28]
   18b94:	bl	1b1c4 <__assert_fail@plt+0xa178>
   18b98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b9c:	subs	r0, r0, r2
   18ba0:	sbcs	r1, r1, r2, asr #31
   18ba4:	bge	18bc0 <__assert_fail@plt+0x7b74>
   18ba8:	b	18bac <__assert_fail@plt+0x7b60>
   18bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bb0:	ldr	r1, [fp, #8]
   18bb4:	mul	r0, r0, r1
   18bb8:	str	r0, [fp, #-28]	; 0xffffffe4
   18bbc:	b	18e08 <__assert_fail@plt+0x7dbc>
   18bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bc4:	ldr	r1, [fp, #8]
   18bc8:	mul	r0, r0, r1
   18bcc:	str	r0, [fp, #-28]	; 0xffffffe4
   18bd0:	b	18e0c <__assert_fail@plt+0x7dc0>
   18bd4:	ldr	r0, [fp, #8]
   18bd8:	cmp	r0, #0
   18bdc:	bge	18d2c <__assert_fail@plt+0x7ce0>
   18be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18be4:	cmp	r0, #0
   18be8:	bge	18cb4 <__assert_fail@plt+0x7c68>
   18bec:	b	18c2c <__assert_fail@plt+0x7be0>
   18bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bf4:	ldr	r1, [fp, #8]
   18bf8:	asr	r3, r1, #31
   18bfc:	mvn	r2, #0
   18c00:	str	r0, [sp, #24]
   18c04:	mov	r0, r2
   18c08:	str	r1, [sp, #20]
   18c0c:	mov	r1, r2
   18c10:	ldr	r2, [sp, #20]
   18c14:	bl	1b298 <__assert_fail@plt+0xa24c>
   18c18:	ldr	r2, [sp, #24]
   18c1c:	subs	r0, r2, r0
   18c20:	rscs	r1, r1, r2, asr #31
   18c24:	bcc	18de0 <__assert_fail@plt+0x7d94>
   18c28:	b	18df4 <__assert_fail@plt+0x7da8>
   18c2c:	b	18c30 <__assert_fail@plt+0x7be4>
   18c30:	ldr	r0, [pc, #512]	; 18e38 <__assert_fail@plt+0x7dec>
   18c34:	ldr	r1, [fp, #8]
   18c38:	cmp	r1, r0
   18c3c:	blt	18c54 <__assert_fail@plt+0x7c08>
   18c40:	b	18c68 <__assert_fail@plt+0x7c1c>
   18c44:	ldr	r0, [fp, #8]
   18c48:	movw	r1, #0
   18c4c:	cmp	r1, r0
   18c50:	bge	18c68 <__assert_fail@plt+0x7c1c>
   18c54:	mov	r0, #1
   18c58:	mvn	r1, #0
   18c5c:	str	r1, [sp, #16]
   18c60:	str	r0, [sp, #12]
   18c64:	b	18c94 <__assert_fail@plt+0x7c48>
   18c68:	ldr	r0, [fp, #8]
   18c6c:	rsb	r0, r0, #0
   18c70:	asr	r3, r0, #31
   18c74:	mvn	r1, #0
   18c78:	str	r0, [sp, #8]
   18c7c:	mov	r0, r1
   18c80:	ldr	r2, [sp, #8]
   18c84:	bl	1b298 <__assert_fail@plt+0xa24c>
   18c88:	str	r0, [sp, #16]
   18c8c:	str	r1, [sp, #12]
   18c90:	b	18c94 <__assert_fail@plt+0x7c48>
   18c94:	ldr	r0, [sp, #12]
   18c98:	ldr	r1, [sp, #16]
   18c9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ca0:	mvn	r2, r2
   18ca4:	subs	r1, r2, r1
   18ca8:	rscs	r0, r0, r2, asr #31
   18cac:	bcs	18de0 <__assert_fail@plt+0x7d94>
   18cb0:	b	18df4 <__assert_fail@plt+0x7da8>
   18cb4:	b	18cb8 <__assert_fail@plt+0x7c6c>
   18cb8:	b	18d10 <__assert_fail@plt+0x7cc4>
   18cbc:	b	18d10 <__assert_fail@plt+0x7cc4>
   18cc0:	ldr	r0, [fp, #8]
   18cc4:	cmn	r0, #1
   18cc8:	bne	18d10 <__assert_fail@plt+0x7cc4>
   18ccc:	b	18cd0 <__assert_fail@plt+0x7c84>
   18cd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cd4:	add	r0, r0, #0
   18cd8:	movw	r1, #0
   18cdc:	cmp	r1, r0
   18ce0:	blt	18de0 <__assert_fail@plt+0x7d94>
   18ce4:	b	18df4 <__assert_fail@plt+0x7da8>
   18ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cec:	movw	r1, #0
   18cf0:	cmp	r1, r0
   18cf4:	bge	18df4 <__assert_fail@plt+0x7da8>
   18cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cfc:	sub	r0, r0, #1
   18d00:	mvn	r1, #0
   18d04:	cmp	r1, r0
   18d08:	blt	18de0 <__assert_fail@plt+0x7d94>
   18d0c:	b	18df4 <__assert_fail@plt+0x7da8>
   18d10:	ldr	r0, [fp, #8]
   18d14:	movw	r1, #0
   18d18:	sdiv	r0, r1, r0
   18d1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d20:	cmp	r0, r1
   18d24:	blt	18de0 <__assert_fail@plt+0x7d94>
   18d28:	b	18df4 <__assert_fail@plt+0x7da8>
   18d2c:	ldr	r0, [fp, #8]
   18d30:	cmp	r0, #0
   18d34:	bne	18d3c <__assert_fail@plt+0x7cf0>
   18d38:	b	18df4 <__assert_fail@plt+0x7da8>
   18d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d40:	cmp	r0, #0
   18d44:	bge	18db0 <__assert_fail@plt+0x7d64>
   18d48:	b	18d4c <__assert_fail@plt+0x7d00>
   18d4c:	b	18d94 <__assert_fail@plt+0x7d48>
   18d50:	b	18d94 <__assert_fail@plt+0x7d48>
   18d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d58:	cmn	r0, #1
   18d5c:	bne	18d94 <__assert_fail@plt+0x7d48>
   18d60:	b	18d64 <__assert_fail@plt+0x7d18>
   18d64:	ldr	r0, [fp, #8]
   18d68:	add	r0, r0, #0
   18d6c:	movw	r1, #0
   18d70:	cmp	r1, r0
   18d74:	blt	18de0 <__assert_fail@plt+0x7d94>
   18d78:	b	18df4 <__assert_fail@plt+0x7da8>
   18d7c:	ldr	r0, [fp, #8]
   18d80:	sub	r0, r0, #1
   18d84:	mvn	r1, #0
   18d88:	cmp	r1, r0
   18d8c:	blt	18de0 <__assert_fail@plt+0x7d94>
   18d90:	b	18df4 <__assert_fail@plt+0x7da8>
   18d94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d98:	movw	r1, #0
   18d9c:	sdiv	r0, r1, r0
   18da0:	ldr	r1, [fp, #8]
   18da4:	cmp	r0, r1
   18da8:	blt	18de0 <__assert_fail@plt+0x7d94>
   18dac:	b	18df4 <__assert_fail@plt+0x7da8>
   18db0:	ldr	r0, [fp, #8]
   18db4:	asr	r3, r0, #31
   18db8:	mvn	r1, #0
   18dbc:	str	r0, [sp, #4]
   18dc0:	mov	r0, r1
   18dc4:	ldr	r2, [sp, #4]
   18dc8:	bl	1b298 <__assert_fail@plt+0xa24c>
   18dcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18dd0:	subs	r0, r0, r2
   18dd4:	sbcs	r1, r1, r2, asr #31
   18dd8:	bcs	18df4 <__assert_fail@plt+0x7da8>
   18ddc:	b	18de0 <__assert_fail@plt+0x7d94>
   18de0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18de4:	ldr	r1, [fp, #8]
   18de8:	mul	r0, r0, r1
   18dec:	str	r0, [fp, #-28]	; 0xffffffe4
   18df0:	b	18e08 <__assert_fail@plt+0x7dbc>
   18df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df8:	ldr	r1, [fp, #8]
   18dfc:	mul	r0, r0, r1
   18e00:	str	r0, [fp, #-28]	; 0xffffffe4
   18e04:	b	18e0c <__assert_fail@plt+0x7dc0>
   18e08:	bl	18fe4 <__assert_fail@plt+0x7f98>
   18e0c:	ldr	r0, [fp, #-4]
   18e10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18e14:	bl	16344 <__assert_fail@plt+0x52f8>
   18e18:	str	r0, [fp, #-4]
   18e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e20:	ldr	r1, [fp, #-8]
   18e24:	str	r0, [r1]
   18e28:	ldr	r0, [fp, #-4]
   18e2c:	mov	sp, fp
   18e30:	pop	{fp, pc}
   18e34:	svcvc	0x00ffffff
   18e38:	andhi	r0, r0, r1
   18e3c:	andhi	r0, r0, r0
   18e40:			; <UNDEFINED> instruction: 0xffff8000
   18e44:	push	{fp, lr}
   18e48:	mov	fp, sp
   18e4c:	sub	sp, sp, #8
   18e50:	str	r0, [sp, #4]
   18e54:	ldr	r0, [sp, #4]
   18e58:	movw	r1, #1
   18e5c:	bl	18e68 <__assert_fail@plt+0x7e1c>
   18e60:	mov	sp, fp
   18e64:	pop	{fp, pc}
   18e68:	push	{fp, lr}
   18e6c:	mov	fp, sp
   18e70:	sub	sp, sp, #8
   18e74:	str	r0, [sp, #4]
   18e78:	str	r1, [sp]
   18e7c:	ldr	r0, [sp, #4]
   18e80:	ldr	r1, [sp]
   18e84:	bl	19034 <__assert_fail@plt+0x7fe8>
   18e88:	bl	162d0 <__assert_fail@plt+0x5284>
   18e8c:	mov	sp, fp
   18e90:	pop	{fp, pc}
   18e94:	push	{fp, lr}
   18e98:	mov	fp, sp
   18e9c:	sub	sp, sp, #8
   18ea0:	str	r0, [sp, #4]
   18ea4:	ldr	r0, [sp, #4]
   18ea8:	movw	r1, #1
   18eac:	bl	18eb8 <__assert_fail@plt+0x7e6c>
   18eb0:	mov	sp, fp
   18eb4:	pop	{fp, pc}
   18eb8:	push	{fp, lr}
   18ebc:	mov	fp, sp
   18ec0:	sub	sp, sp, #8
   18ec4:	str	r0, [sp, #4]
   18ec8:	str	r1, [sp]
   18ecc:	ldr	r0, [sp, #4]
   18ed0:	ldr	r1, [sp]
   18ed4:	bl	19430 <__assert_fail@plt+0x83e4>
   18ed8:	bl	162d0 <__assert_fail@plt+0x5284>
   18edc:	mov	sp, fp
   18ee0:	pop	{fp, pc}
   18ee4:	push	{fp, lr}
   18ee8:	mov	fp, sp
   18eec:	sub	sp, sp, #16
   18ef0:	str	r0, [fp, #-4]
   18ef4:	str	r1, [sp, #8]
   18ef8:	ldr	r0, [sp, #8]
   18efc:	bl	162ac <__assert_fail@plt+0x5260>
   18f00:	ldr	r1, [fp, #-4]
   18f04:	ldr	r2, [sp, #8]
   18f08:	str	r0, [sp, #4]
   18f0c:	bl	10e60 <memcpy@plt>
   18f10:	ldr	r0, [sp, #4]
   18f14:	mov	sp, fp
   18f18:	pop	{fp, pc}
   18f1c:	push	{fp, lr}
   18f20:	mov	fp, sp
   18f24:	sub	sp, sp, #16
   18f28:	str	r0, [fp, #-4]
   18f2c:	str	r1, [sp, #8]
   18f30:	ldr	r0, [sp, #8]
   18f34:	bl	16300 <__assert_fail@plt+0x52b4>
   18f38:	ldr	r1, [fp, #-4]
   18f3c:	ldr	r2, [sp, #8]
   18f40:	str	r0, [sp, #4]
   18f44:	bl	10e60 <memcpy@plt>
   18f48:	ldr	r0, [sp, #4]
   18f4c:	mov	sp, fp
   18f50:	pop	{fp, pc}
   18f54:	push	{fp, lr}
   18f58:	mov	fp, sp
   18f5c:	sub	sp, sp, #16
   18f60:	str	r0, [fp, #-4]
   18f64:	str	r1, [sp, #8]
   18f68:	ldr	r0, [sp, #8]
   18f6c:	add	r0, r0, #1
   18f70:	bl	16300 <__assert_fail@plt+0x52b4>
   18f74:	str	r0, [sp, #4]
   18f78:	ldr	r0, [sp, #4]
   18f7c:	ldr	r1, [sp, #8]
   18f80:	add	r0, r0, r1
   18f84:	movw	r1, #0
   18f88:	strb	r1, [r0]
   18f8c:	ldr	r0, [sp, #4]
   18f90:	ldr	r1, [fp, #-4]
   18f94:	ldr	r2, [sp, #8]
   18f98:	str	r0, [sp]
   18f9c:	bl	10e60 <memcpy@plt>
   18fa0:	ldr	r0, [sp]
   18fa4:	mov	sp, fp
   18fa8:	pop	{fp, pc}
   18fac:	push	{fp, lr}
   18fb0:	mov	fp, sp
   18fb4:	sub	sp, sp, #8
   18fb8:	str	r0, [sp, #4]
   18fbc:	ldr	r0, [sp, #4]
   18fc0:	ldr	r1, [sp, #4]
   18fc4:	str	r0, [sp]
   18fc8:	mov	r0, r1
   18fcc:	bl	10f68 <strlen@plt>
   18fd0:	add	r1, r0, #1
   18fd4:	ldr	r0, [sp]
   18fd8:	bl	18ee4 <__assert_fail@plt+0x7e98>
   18fdc:	mov	sp, fp
   18fe0:	pop	{fp, pc}
   18fe4:	push	{fp, lr}
   18fe8:	mov	fp, sp
   18fec:	sub	sp, sp, #8
   18ff0:	movw	r0, #53488	; 0xd0f0
   18ff4:	movt	r0, #2
   18ff8:	ldr	r0, [r0]
   18ffc:	movw	r1, #49380	; 0xc0e4
   19000:	movt	r1, #1
   19004:	str	r0, [sp, #4]
   19008:	mov	r0, r1
   1900c:	bl	10f5c <gettext@plt>
   19010:	ldr	r1, [sp, #4]
   19014:	str	r0, [sp]
   19018:	mov	r0, r1
   1901c:	movw	r1, #0
   19020:	movw	r2, #47637	; 0xba15
   19024:	movt	r2, #1
   19028:	ldr	r3, [sp]
   1902c:	bl	10efc <error@plt>
   19030:	bl	11028 <abort@plt>
   19034:	push	{fp, lr}
   19038:	mov	fp, sp
   1903c:	sub	sp, sp, #16
   19040:	str	r0, [sp, #8]
   19044:	str	r1, [sp, #4]
   19048:	ldr	r0, [sp, #8]
   1904c:	cmp	r0, #0
   19050:	beq	19060 <__assert_fail@plt+0x8014>
   19054:	ldr	r0, [sp, #4]
   19058:	cmp	r0, #0
   1905c:	bne	1906c <__assert_fail@plt+0x8020>
   19060:	movw	r0, #1
   19064:	str	r0, [sp, #4]
   19068:	str	r0, [sp, #8]
   1906c:	ldr	r0, [sp, #4]
   19070:	cmp	r0, #0
   19074:	beq	190a8 <__assert_fail@plt+0x805c>
   19078:	ldr	r0, [pc, #76]	; 190cc <__assert_fail@plt+0x8080>
   1907c:	ldr	r1, [sp, #4]
   19080:	udiv	r0, r0, r1
   19084:	ldr	r1, [sp, #8]
   19088:	cmp	r0, r1
   1908c:	bcs	190a8 <__assert_fail@plt+0x805c>
   19090:	bl	10f80 <__errno_location@plt>
   19094:	movw	r1, #12
   19098:	str	r1, [r0]
   1909c:	movw	r0, #0
   190a0:	str	r0, [fp, #-4]
   190a4:	b	190c0 <__assert_fail@plt+0x8074>
   190a8:	ldr	r0, [sp, #8]
   190ac:	ldr	r1, [sp, #4]
   190b0:	bl	10df4 <calloc@plt>
   190b4:	str	r0, [sp]
   190b8:	ldr	r0, [sp]
   190bc:	str	r0, [fp, #-4]
   190c0:	ldr	r0, [fp, #-4]
   190c4:	mov	sp, fp
   190c8:	pop	{fp, pc}
   190cc:	svcvc	0x00ffffff
   190d0:	push	{fp, lr}
   190d4:	mov	fp, sp
   190d8:	sub	sp, sp, #16
   190dc:	str	r0, [sp, #8]
   190e0:	ldr	r0, [sp, #8]
   190e4:	cmp	r0, #0
   190e8:	bne	190f4 <__assert_fail@plt+0x80a8>
   190ec:	movw	r0, #1
   190f0:	str	r0, [sp, #8]
   190f4:	ldr	r0, [pc, #64]	; 1913c <__assert_fail@plt+0x80f0>
   190f8:	ldr	r1, [sp, #8]
   190fc:	cmp	r0, r1
   19100:	bcs	1911c <__assert_fail@plt+0x80d0>
   19104:	bl	10f80 <__errno_location@plt>
   19108:	movw	r1, #12
   1910c:	str	r1, [r0]
   19110:	movw	r0, #0
   19114:	str	r0, [fp, #-4]
   19118:	b	19130 <__assert_fail@plt+0x80e4>
   1911c:	ldr	r0, [sp, #8]
   19120:	bl	10f08 <malloc@plt>
   19124:	str	r0, [sp, #4]
   19128:	ldr	r0, [sp, #4]
   1912c:	str	r0, [fp, #-4]
   19130:	ldr	r0, [fp, #-4]
   19134:	mov	sp, fp
   19138:	pop	{fp, pc}
   1913c:	svcvc	0x00ffffff
   19140:	push	{fp, lr}
   19144:	mov	fp, sp
   19148:	sub	sp, sp, #16
   1914c:	str	r0, [sp, #8]
   19150:	str	r1, [sp, #4]
   19154:	ldr	r0, [sp, #8]
   19158:	movw	r1, #0
   1915c:	cmp	r0, r1
   19160:	bne	19174 <__assert_fail@plt+0x8128>
   19164:	ldr	r0, [sp, #4]
   19168:	bl	190d0 <__assert_fail@plt+0x8084>
   1916c:	str	r0, [fp, #-4]
   19170:	b	191d4 <__assert_fail@plt+0x8188>
   19174:	ldr	r0, [sp, #4]
   19178:	cmp	r0, #0
   1917c:	bne	19194 <__assert_fail@plt+0x8148>
   19180:	ldr	r0, [sp, #8]
   19184:	bl	13104 <__assert_fail@plt+0x20b8>
   19188:	movw	r0, #0
   1918c:	str	r0, [fp, #-4]
   19190:	b	191d4 <__assert_fail@plt+0x8188>
   19194:	ldr	r0, [pc, #68]	; 191e0 <__assert_fail@plt+0x8194>
   19198:	ldr	r1, [sp, #4]
   1919c:	cmp	r0, r1
   191a0:	bcs	191bc <__assert_fail@plt+0x8170>
   191a4:	bl	10f80 <__errno_location@plt>
   191a8:	movw	r1, #12
   191ac:	str	r1, [r0]
   191b0:	movw	r0, #0
   191b4:	str	r0, [fp, #-4]
   191b8:	b	191d4 <__assert_fail@plt+0x8188>
   191bc:	ldr	r0, [sp, #8]
   191c0:	ldr	r1, [sp, #4]
   191c4:	bl	10e9c <realloc@plt>
   191c8:	str	r0, [sp]
   191cc:	ldr	r0, [sp]
   191d0:	str	r0, [fp, #-4]
   191d4:	ldr	r0, [fp, #-4]
   191d8:	mov	sp, fp
   191dc:	pop	{fp, pc}
   191e0:	svcvc	0x00ffffff
   191e4:	push	{fp, lr}
   191e8:	mov	fp, sp
   191ec:	sub	sp, sp, #24
   191f0:	str	r0, [fp, #-8]
   191f4:	str	r1, [sp, #12]
   191f8:	ldr	r0, [fp, #-8]
   191fc:	str	r0, [sp, #8]
   19200:	ldr	r0, [sp, #12]
   19204:	str	r0, [sp, #4]
   19208:	ldr	r0, [sp, #8]
   1920c:	ldr	r1, [sp, #4]
   19210:	cmp	r0, r1
   19214:	bne	19224 <__assert_fail@plt+0x81d8>
   19218:	movw	r0, #0
   1921c:	str	r0, [fp, #-4]
   19220:	b	19290 <__assert_fail@plt+0x8244>
   19224:	b	19228 <__assert_fail@plt+0x81dc>
   19228:	ldr	r0, [sp, #8]
   1922c:	ldrb	r0, [r0]
   19230:	bl	1af44 <__assert_fail@plt+0x9ef8>
   19234:	strb	r0, [sp, #3]
   19238:	ldr	r0, [sp, #4]
   1923c:	ldrb	r0, [r0]
   19240:	bl	1af44 <__assert_fail@plt+0x9ef8>
   19244:	strb	r0, [sp, #2]
   19248:	ldrb	r0, [sp, #3]
   1924c:	cmp	r0, #0
   19250:	bne	19258 <__assert_fail@plt+0x820c>
   19254:	b	19280 <__assert_fail@plt+0x8234>
   19258:	ldr	r0, [sp, #8]
   1925c:	add	r0, r0, #1
   19260:	str	r0, [sp, #8]
   19264:	ldr	r0, [sp, #4]
   19268:	add	r0, r0, #1
   1926c:	str	r0, [sp, #4]
   19270:	ldrb	r0, [sp, #3]
   19274:	ldrb	r1, [sp, #2]
   19278:	cmp	r0, r1
   1927c:	beq	19228 <__assert_fail@plt+0x81dc>
   19280:	ldrb	r0, [sp, #3]
   19284:	ldrb	r1, [sp, #2]
   19288:	sub	r0, r0, r1
   1928c:	str	r0, [fp, #-4]
   19290:	ldr	r0, [fp, #-4]
   19294:	mov	sp, fp
   19298:	pop	{fp, pc}
   1929c:	push	{fp, lr}
   192a0:	mov	fp, sp
   192a4:	sub	sp, sp, #16
   192a8:	str	r0, [sp, #8]
   192ac:	ldr	r0, [sp, #8]
   192b0:	bl	10ed8 <__fpending@plt>
   192b4:	cmp	r0, #0
   192b8:	movw	r0, #0
   192bc:	movne	r0, #1
   192c0:	and	r0, r0, #1
   192c4:	strb	r0, [sp, #7]
   192c8:	ldr	r0, [sp, #8]
   192cc:	bl	10ee4 <ferror_unlocked@plt>
   192d0:	cmp	r0, #0
   192d4:	movw	r0, #0
   192d8:	movne	r0, #1
   192dc:	and	r0, r0, #1
   192e0:	strb	r0, [sp, #6]
   192e4:	ldr	r0, [sp, #8]
   192e8:	bl	12f6c <__assert_fail@plt+0x1f20>
   192ec:	cmp	r0, #0
   192f0:	movw	r0, #0
   192f4:	movne	r0, #1
   192f8:	and	r0, r0, #1
   192fc:	strb	r0, [sp, #5]
   19300:	ldrb	r0, [sp, #6]
   19304:	tst	r0, #1
   19308:	bne	19334 <__assert_fail@plt+0x82e8>
   1930c:	ldrb	r0, [sp, #5]
   19310:	tst	r0, #1
   19314:	beq	19358 <__assert_fail@plt+0x830c>
   19318:	ldrb	r0, [sp, #7]
   1931c:	tst	r0, #1
   19320:	bne	19334 <__assert_fail@plt+0x82e8>
   19324:	bl	10f80 <__errno_location@plt>
   19328:	ldr	r0, [r0]
   1932c:	cmp	r0, #9
   19330:	beq	19358 <__assert_fail@plt+0x830c>
   19334:	ldrb	r0, [sp, #5]
   19338:	tst	r0, #1
   1933c:	bne	1934c <__assert_fail@plt+0x8300>
   19340:	bl	10f80 <__errno_location@plt>
   19344:	movw	r1, #0
   19348:	str	r1, [r0]
   1934c:	mvn	r0, #0
   19350:	str	r0, [fp, #-4]
   19354:	b	19360 <__assert_fail@plt+0x8314>
   19358:	movw	r0, #0
   1935c:	str	r0, [fp, #-4]
   19360:	ldr	r0, [fp, #-4]
   19364:	mov	sp, fp
   19368:	pop	{fp, pc}
   1936c:	push	{fp, lr}
   19370:	mov	fp, sp
   19374:	bl	10f80 <__errno_location@plt>
   19378:	movw	r1, #12
   1937c:	str	r1, [r0]
   19380:	movw	r0, #0
   19384:	pop	{fp, pc}
   19388:	push	{fp, lr}
   1938c:	mov	fp, sp
   19390:	sub	sp, sp, #8
   19394:	str	r0, [sp, #4]
   19398:	ldr	r0, [sp, #4]
   1939c:	cmn	r0, #1
   193a0:	bhi	193b4 <__assert_fail@plt+0x8368>
   193a4:	ldr	r0, [sp, #4]
   193a8:	bl	190d0 <__assert_fail@plt+0x8084>
   193ac:	str	r0, [sp]
   193b0:	b	193bc <__assert_fail@plt+0x8370>
   193b4:	bl	1936c <__assert_fail@plt+0x8320>
   193b8:	str	r0, [sp]
   193bc:	ldr	r0, [sp]
   193c0:	mov	sp, fp
   193c4:	pop	{fp, pc}
   193c8:	push	{fp, lr}
   193cc:	mov	fp, sp
   193d0:	sub	sp, sp, #16
   193d4:	str	r0, [fp, #-4]
   193d8:	str	r1, [sp, #8]
   193dc:	ldr	r0, [sp, #8]
   193e0:	cmn	r0, #1
   193e4:	bhi	1941c <__assert_fail@plt+0x83d0>
   193e8:	ldr	r0, [fp, #-4]
   193ec:	ldr	r1, [sp, #8]
   193f0:	ldr	r2, [sp, #8]
   193f4:	cmp	r2, #0
   193f8:	movw	r2, #0
   193fc:	movne	r2, #1
   19400:	mvn	r3, #0
   19404:	eor	r2, r2, r3
   19408:	and	r2, r2, #1
   1940c:	orr	r1, r1, r2
   19410:	bl	19140 <__assert_fail@plt+0x80f4>
   19414:	str	r0, [sp, #4]
   19418:	b	19424 <__assert_fail@plt+0x83d8>
   1941c:	bl	1936c <__assert_fail@plt+0x8320>
   19420:	str	r0, [sp, #4]
   19424:	ldr	r0, [sp, #4]
   19428:	mov	sp, fp
   1942c:	pop	{fp, pc}
   19430:	push	{fp, lr}
   19434:	mov	fp, sp
   19438:	sub	sp, sp, #16
   1943c:	str	r0, [sp, #8]
   19440:	str	r1, [sp, #4]
   19444:	ldr	r0, [sp, #8]
   19448:	mvn	r1, #0
   1944c:	cmp	r1, r0
   19450:	bcs	19474 <__assert_fail@plt+0x8428>
   19454:	ldr	r0, [sp, #4]
   19458:	cmp	r0, #0
   1945c:	beq	1946c <__assert_fail@plt+0x8420>
   19460:	bl	1936c <__assert_fail@plt+0x8320>
   19464:	str	r0, [fp, #-4]
   19468:	b	194b4 <__assert_fail@plt+0x8468>
   1946c:	movw	r0, #0
   19470:	str	r0, [sp, #8]
   19474:	ldr	r0, [sp, #4]
   19478:	mvn	r1, #0
   1947c:	cmp	r1, r0
   19480:	bcs	194a4 <__assert_fail@plt+0x8458>
   19484:	ldr	r0, [sp, #8]
   19488:	cmp	r0, #0
   1948c:	beq	1949c <__assert_fail@plt+0x8450>
   19490:	bl	1936c <__assert_fail@plt+0x8320>
   19494:	str	r0, [fp, #-4]
   19498:	b	194b4 <__assert_fail@plt+0x8468>
   1949c:	movw	r0, #0
   194a0:	str	r0, [sp, #4]
   194a4:	ldr	r0, [sp, #8]
   194a8:	ldr	r1, [sp, #4]
   194ac:	bl	19034 <__assert_fail@plt+0x7fe8>
   194b0:	str	r0, [fp, #-4]
   194b4:	ldr	r0, [fp, #-4]
   194b8:	mov	sp, fp
   194bc:	pop	{fp, pc}
   194c0:	push	{fp, lr}
   194c4:	mov	fp, sp
   194c8:	sub	sp, sp, #16
   194cc:	str	r0, [fp, #-4]
   194d0:	str	r1, [sp, #8]
   194d4:	str	r2, [sp, #4]
   194d8:	ldr	r0, [sp, #8]
   194dc:	cmp	r0, #0
   194e0:	beq	194f0 <__assert_fail@plt+0x84a4>
   194e4:	ldr	r0, [sp, #4]
   194e8:	cmp	r0, #0
   194ec:	bne	194fc <__assert_fail@plt+0x84b0>
   194f0:	movw	r0, #1
   194f4:	str	r0, [sp, #4]
   194f8:	str	r0, [sp, #8]
   194fc:	ldr	r0, [sp, #8]
   19500:	cmn	r0, #1
   19504:	bhi	1952c <__assert_fail@plt+0x84e0>
   19508:	ldr	r0, [sp, #4]
   1950c:	cmn	r0, #1
   19510:	bhi	1952c <__assert_fail@plt+0x84e0>
   19514:	ldr	r0, [fp, #-4]
   19518:	ldr	r1, [sp, #8]
   1951c:	ldr	r2, [sp, #4]
   19520:	bl	1964c <__assert_fail@plt+0x8600>
   19524:	str	r0, [sp]
   19528:	b	19534 <__assert_fail@plt+0x84e8>
   1952c:	bl	1936c <__assert_fail@plt+0x8320>
   19530:	str	r0, [sp]
   19534:	ldr	r0, [sp]
   19538:	mov	sp, fp
   1953c:	pop	{fp, pc}
   19540:	push	{fp, lr}
   19544:	mov	fp, sp
   19548:	sub	sp, sp, #8
   1954c:	movw	r0, #14
   19550:	bl	10fe0 <nl_langinfo@plt>
   19554:	str	r0, [sp, #4]
   19558:	ldr	r0, [sp, #4]
   1955c:	movw	r1, #0
   19560:	cmp	r0, r1
   19564:	bne	19574 <__assert_fail@plt+0x8528>
   19568:	movw	r0, #47233	; 0xb881
   1956c:	movt	r0, #1
   19570:	str	r0, [sp, #4]
   19574:	ldr	r0, [sp, #4]
   19578:	ldrb	r0, [r0]
   1957c:	cmp	r0, #0
   19580:	bne	19590 <__assert_fail@plt+0x8544>
   19584:	movw	r0, #49397	; 0xc0f5
   19588:	movt	r0, #1
   1958c:	str	r0, [sp, #4]
   19590:	ldr	r0, [sp, #4]
   19594:	mov	sp, fp
   19598:	pop	{fp, pc}
   1959c:	push	{fp, lr}
   195a0:	mov	fp, sp
   195a4:	sub	sp, sp, #32
   195a8:	str	r0, [fp, #-8]
   195ac:	str	r1, [fp, #-12]
   195b0:	str	r2, [sp, #16]
   195b4:	str	r3, [sp, #12]
   195b8:	ldr	r0, [fp, #-8]
   195bc:	movw	r1, #0
   195c0:	cmp	r0, r1
   195c4:	bne	195d0 <__assert_fail@plt+0x8584>
   195c8:	add	r0, sp, #4
   195cc:	str	r0, [fp, #-8]
   195d0:	ldr	r0, [fp, #-8]
   195d4:	ldr	r1, [fp, #-12]
   195d8:	ldr	r2, [sp, #16]
   195dc:	ldr	r3, [sp, #12]
   195e0:	bl	10ef0 <mbrtowc@plt>
   195e4:	str	r0, [sp, #8]
   195e8:	ldr	r0, [sp, #8]
   195ec:	mvn	r1, #1
   195f0:	cmp	r1, r0
   195f4:	bhi	19638 <__assert_fail@plt+0x85ec>
   195f8:	ldr	r0, [sp, #16]
   195fc:	cmp	r0, #0
   19600:	beq	19638 <__assert_fail@plt+0x85ec>
   19604:	movw	r0, #0
   19608:	bl	1afcc <__assert_fail@plt+0x9f80>
   1960c:	tst	r0, #1
   19610:	bne	19638 <__assert_fail@plt+0x85ec>
   19614:	ldr	r0, [fp, #-12]
   19618:	ldrb	r0, [r0]
   1961c:	strb	r0, [sp, #3]
   19620:	ldrb	r0, [sp, #3]
   19624:	ldr	r1, [fp, #-8]
   19628:	str	r0, [r1]
   1962c:	movw	r0, #1
   19630:	str	r0, [fp, #-4]
   19634:	b	19640 <__assert_fail@plt+0x85f4>
   19638:	ldr	r0, [sp, #8]
   1963c:	str	r0, [fp, #-4]
   19640:	ldr	r0, [fp, #-4]
   19644:	mov	sp, fp
   19648:	pop	{fp, pc}
   1964c:	push	{fp, lr}
   19650:	mov	fp, sp
   19654:	sub	sp, sp, #96	; 0x60
   19658:	str	r0, [fp, #-8]
   1965c:	str	r1, [fp, #-12]
   19660:	str	r2, [fp, #-16]
   19664:	b	19a1c <__assert_fail@plt+0x89d0>
   19668:	b	1983c <__assert_fail@plt+0x87f0>
   1966c:	ldr	r0, [fp, #-16]
   19670:	cmp	r0, #0
   19674:	bcs	19778 <__assert_fail@plt+0x872c>
   19678:	ldr	r0, [fp, #-12]
   1967c:	cmp	r0, #0
   19680:	bcs	19708 <__assert_fail@plt+0x86bc>
   19684:	b	196a4 <__assert_fail@plt+0x8658>
   19688:	ldr	r0, [fp, #-12]
   1968c:	ldr	r1, [fp, #-16]
   19690:	movw	r2, #127	; 0x7f
   19694:	udiv	r1, r2, r1
   19698:	cmp	r0, r1
   1969c:	bcc	1980c <__assert_fail@plt+0x87c0>
   196a0:	b	19824 <__assert_fail@plt+0x87d8>
   196a4:	b	196b8 <__assert_fail@plt+0x866c>
   196a8:	ldr	r0, [fp, #-16]
   196ac:	cmp	r0, #1
   196b0:	bcc	196c8 <__assert_fail@plt+0x867c>
   196b4:	b	196d4 <__assert_fail@plt+0x8688>
   196b8:	ldr	r0, [fp, #-16]
   196bc:	movw	r1, #0
   196c0:	cmp	r1, r0
   196c4:	bcs	196d4 <__assert_fail@plt+0x8688>
   196c8:	movw	r0, #0
   196cc:	str	r0, [fp, #-24]	; 0xffffffe8
   196d0:	b	196ec <__assert_fail@plt+0x86a0>
   196d4:	ldr	r0, [fp, #-16]
   196d8:	movw	r1, #0
   196dc:	sub	r0, r1, r0
   196e0:	movw	r1, #127	; 0x7f
   196e4:	udiv	r0, r1, r0
   196e8:	str	r0, [fp, #-24]	; 0xffffffe8
   196ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196f0:	ldr	r1, [fp, #-12]
   196f4:	mvn	r2, #0
   196f8:	sub	r1, r2, r1
   196fc:	cmp	r0, r1
   19700:	bls	1980c <__assert_fail@plt+0x87c0>
   19704:	b	19824 <__assert_fail@plt+0x87d8>
   19708:	ldr	r0, [fp, #-16]
   1970c:	cmn	r0, #1
   19710:	bne	1975c <__assert_fail@plt+0x8710>
   19714:	b	19734 <__assert_fail@plt+0x86e8>
   19718:	ldr	r0, [fp, #-12]
   1971c:	mvn	r1, #127	; 0x7f
   19720:	add	r0, r0, r1
   19724:	movw	r1, #0
   19728:	cmp	r1, r0
   1972c:	bcc	1980c <__assert_fail@plt+0x87c0>
   19730:	b	19824 <__assert_fail@plt+0x87d8>
   19734:	ldr	r0, [fp, #-12]
   19738:	movw	r1, #0
   1973c:	cmp	r1, r0
   19740:	bcs	19824 <__assert_fail@plt+0x87d8>
   19744:	ldr	r0, [fp, #-12]
   19748:	sub	r0, r0, #1
   1974c:	movw	r1, #127	; 0x7f
   19750:	cmp	r1, r0
   19754:	bcc	1980c <__assert_fail@plt+0x87c0>
   19758:	b	19824 <__assert_fail@plt+0x87d8>
   1975c:	ldr	r0, [fp, #-16]
   19760:	mvn	r1, #127	; 0x7f
   19764:	udiv	r0, r1, r0
   19768:	ldr	r1, [fp, #-12]
   1976c:	cmp	r0, r1
   19770:	bcc	1980c <__assert_fail@plt+0x87c0>
   19774:	b	19824 <__assert_fail@plt+0x87d8>
   19778:	ldr	r0, [fp, #-16]
   1977c:	cmp	r0, #0
   19780:	bne	19788 <__assert_fail@plt+0x873c>
   19784:	b	19824 <__assert_fail@plt+0x87d8>
   19788:	ldr	r0, [fp, #-12]
   1978c:	cmp	r0, #0
   19790:	bcs	197f4 <__assert_fail@plt+0x87a8>
   19794:	ldr	r0, [fp, #-12]
   19798:	cmn	r0, #1
   1979c:	bne	197d8 <__assert_fail@plt+0x878c>
   197a0:	b	197c0 <__assert_fail@plt+0x8774>
   197a4:	ldr	r0, [fp, #-16]
   197a8:	mvn	r1, #127	; 0x7f
   197ac:	add	r0, r0, r1
   197b0:	movw	r1, #0
   197b4:	cmp	r1, r0
   197b8:	bcc	1980c <__assert_fail@plt+0x87c0>
   197bc:	b	19824 <__assert_fail@plt+0x87d8>
   197c0:	ldr	r0, [fp, #-16]
   197c4:	sub	r0, r0, #1
   197c8:	movw	r1, #127	; 0x7f
   197cc:	cmp	r1, r0
   197d0:	bcc	1980c <__assert_fail@plt+0x87c0>
   197d4:	b	19824 <__assert_fail@plt+0x87d8>
   197d8:	ldr	r0, [fp, #-12]
   197dc:	mvn	r1, #127	; 0x7f
   197e0:	udiv	r0, r1, r0
   197e4:	ldr	r1, [fp, #-16]
   197e8:	cmp	r0, r1
   197ec:	bcc	1980c <__assert_fail@plt+0x87c0>
   197f0:	b	19824 <__assert_fail@plt+0x87d8>
   197f4:	ldr	r0, [fp, #-16]
   197f8:	movw	r1, #127	; 0x7f
   197fc:	udiv	r0, r1, r0
   19800:	ldr	r1, [fp, #-12]
   19804:	cmp	r0, r1
   19808:	bcs	19824 <__assert_fail@plt+0x87d8>
   1980c:	ldr	r0, [fp, #-12]
   19810:	ldr	r1, [fp, #-16]
   19814:	mul	r0, r0, r1
   19818:	sxtb	r0, r0
   1981c:	str	r0, [fp, #-20]	; 0xffffffec
   19820:	b	1a94c <__assert_fail@plt+0x9900>
   19824:	ldr	r0, [fp, #-12]
   19828:	ldr	r1, [fp, #-16]
   1982c:	mul	r0, r0, r1
   19830:	sxtb	r0, r0
   19834:	str	r0, [fp, #-20]	; 0xffffffec
   19838:	b	1a964 <__assert_fail@plt+0x9918>
   1983c:	ldr	r0, [fp, #-16]
   19840:	cmp	r0, #0
   19844:	bcs	19950 <__assert_fail@plt+0x8904>
   19848:	ldr	r0, [fp, #-12]
   1984c:	cmp	r0, #0
   19850:	bcs	198d8 <__assert_fail@plt+0x888c>
   19854:	b	19874 <__assert_fail@plt+0x8828>
   19858:	ldr	r0, [fp, #-12]
   1985c:	ldr	r1, [fp, #-16]
   19860:	movw	r2, #255	; 0xff
   19864:	udiv	r1, r2, r1
   19868:	cmp	r0, r1
   1986c:	bcc	199ec <__assert_fail@plt+0x89a0>
   19870:	b	19a04 <__assert_fail@plt+0x89b8>
   19874:	b	19888 <__assert_fail@plt+0x883c>
   19878:	ldr	r0, [fp, #-16]
   1987c:	cmp	r0, #1
   19880:	bcc	19898 <__assert_fail@plt+0x884c>
   19884:	b	198a4 <__assert_fail@plt+0x8858>
   19888:	ldr	r0, [fp, #-16]
   1988c:	movw	r1, #0
   19890:	cmp	r1, r0
   19894:	bcs	198a4 <__assert_fail@plt+0x8858>
   19898:	movw	r0, #0
   1989c:	str	r0, [fp, #-28]	; 0xffffffe4
   198a0:	b	198bc <__assert_fail@plt+0x8870>
   198a4:	ldr	r0, [fp, #-16]
   198a8:	movw	r1, #0
   198ac:	sub	r0, r1, r0
   198b0:	movw	r1, #255	; 0xff
   198b4:	udiv	r0, r1, r0
   198b8:	str	r0, [fp, #-28]	; 0xffffffe4
   198bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   198c0:	ldr	r1, [fp, #-12]
   198c4:	mvn	r2, #0
   198c8:	sub	r1, r2, r1
   198cc:	cmp	r0, r1
   198d0:	bls	199ec <__assert_fail@plt+0x89a0>
   198d4:	b	19a04 <__assert_fail@plt+0x89b8>
   198d8:	b	198e0 <__assert_fail@plt+0x8894>
   198dc:	b	198e4 <__assert_fail@plt+0x8898>
   198e0:	b	19934 <__assert_fail@plt+0x88e8>
   198e4:	ldr	r0, [fp, #-16]
   198e8:	cmn	r0, #1
   198ec:	bne	19934 <__assert_fail@plt+0x88e8>
   198f0:	b	1990c <__assert_fail@plt+0x88c0>
   198f4:	ldr	r0, [fp, #-12]
   198f8:	add	r0, r0, #0
   198fc:	movw	r1, #0
   19900:	cmp	r1, r0
   19904:	bcc	199ec <__assert_fail@plt+0x89a0>
   19908:	b	19a04 <__assert_fail@plt+0x89b8>
   1990c:	ldr	r0, [fp, #-12]
   19910:	movw	r1, #0
   19914:	cmp	r1, r0
   19918:	bcs	19a04 <__assert_fail@plt+0x89b8>
   1991c:	ldr	r0, [fp, #-12]
   19920:	sub	r0, r0, #1
   19924:	mvn	r1, #0
   19928:	cmp	r1, r0
   1992c:	bcc	199ec <__assert_fail@plt+0x89a0>
   19930:	b	19a04 <__assert_fail@plt+0x89b8>
   19934:	ldr	r0, [fp, #-16]
   19938:	movw	r1, #0
   1993c:	udiv	r0, r1, r0
   19940:	ldr	r1, [fp, #-12]
   19944:	cmp	r0, r1
   19948:	bcc	199ec <__assert_fail@plt+0x89a0>
   1994c:	b	19a04 <__assert_fail@plt+0x89b8>
   19950:	ldr	r0, [fp, #-16]
   19954:	cmp	r0, #0
   19958:	bne	19960 <__assert_fail@plt+0x8914>
   1995c:	b	19a04 <__assert_fail@plt+0x89b8>
   19960:	ldr	r0, [fp, #-12]
   19964:	cmp	r0, #0
   19968:	bcs	199d4 <__assert_fail@plt+0x8988>
   1996c:	b	19974 <__assert_fail@plt+0x8928>
   19970:	b	19978 <__assert_fail@plt+0x892c>
   19974:	b	199b8 <__assert_fail@plt+0x896c>
   19978:	ldr	r0, [fp, #-12]
   1997c:	cmn	r0, #1
   19980:	bne	199b8 <__assert_fail@plt+0x896c>
   19984:	b	199a0 <__assert_fail@plt+0x8954>
   19988:	ldr	r0, [fp, #-16]
   1998c:	add	r0, r0, #0
   19990:	movw	r1, #0
   19994:	cmp	r1, r0
   19998:	bcc	199ec <__assert_fail@plt+0x89a0>
   1999c:	b	19a04 <__assert_fail@plt+0x89b8>
   199a0:	ldr	r0, [fp, #-16]
   199a4:	sub	r0, r0, #1
   199a8:	mvn	r1, #0
   199ac:	cmp	r1, r0
   199b0:	bcc	199ec <__assert_fail@plt+0x89a0>
   199b4:	b	19a04 <__assert_fail@plt+0x89b8>
   199b8:	ldr	r0, [fp, #-12]
   199bc:	movw	r1, #0
   199c0:	udiv	r0, r1, r0
   199c4:	ldr	r1, [fp, #-16]
   199c8:	cmp	r0, r1
   199cc:	bcc	199ec <__assert_fail@plt+0x89a0>
   199d0:	b	19a04 <__assert_fail@plt+0x89b8>
   199d4:	ldr	r0, [fp, #-16]
   199d8:	movw	r1, #255	; 0xff
   199dc:	udiv	r0, r1, r0
   199e0:	ldr	r1, [fp, #-12]
   199e4:	cmp	r0, r1
   199e8:	bcs	19a04 <__assert_fail@plt+0x89b8>
   199ec:	ldr	r0, [fp, #-12]
   199f0:	ldr	r1, [fp, #-16]
   199f4:	mul	r0, r0, r1
   199f8:	and	r0, r0, #255	; 0xff
   199fc:	str	r0, [fp, #-20]	; 0xffffffec
   19a00:	b	1a94c <__assert_fail@plt+0x9900>
   19a04:	ldr	r0, [fp, #-12]
   19a08:	ldr	r1, [fp, #-16]
   19a0c:	mul	r0, r0, r1
   19a10:	and	r0, r0, #255	; 0xff
   19a14:	str	r0, [fp, #-20]	; 0xffffffec
   19a18:	b	1a964 <__assert_fail@plt+0x9918>
   19a1c:	b	19dd4 <__assert_fail@plt+0x8d88>
   19a20:	b	19bf4 <__assert_fail@plt+0x8ba8>
   19a24:	ldr	r0, [fp, #-16]
   19a28:	cmp	r0, #0
   19a2c:	bcs	19b30 <__assert_fail@plt+0x8ae4>
   19a30:	ldr	r0, [fp, #-12]
   19a34:	cmp	r0, #0
   19a38:	bcs	19ac0 <__assert_fail@plt+0x8a74>
   19a3c:	b	19a5c <__assert_fail@plt+0x8a10>
   19a40:	ldr	r0, [fp, #-12]
   19a44:	ldr	r1, [fp, #-16]
   19a48:	movw	r2, #32767	; 0x7fff
   19a4c:	udiv	r1, r2, r1
   19a50:	cmp	r0, r1
   19a54:	bcc	19bc4 <__assert_fail@plt+0x8b78>
   19a58:	b	19bdc <__assert_fail@plt+0x8b90>
   19a5c:	b	19a70 <__assert_fail@plt+0x8a24>
   19a60:	ldr	r0, [fp, #-16]
   19a64:	cmp	r0, #1
   19a68:	bcc	19a80 <__assert_fail@plt+0x8a34>
   19a6c:	b	19a8c <__assert_fail@plt+0x8a40>
   19a70:	ldr	r0, [fp, #-16]
   19a74:	movw	r1, #0
   19a78:	cmp	r1, r0
   19a7c:	bcs	19a8c <__assert_fail@plt+0x8a40>
   19a80:	movw	r0, #0
   19a84:	str	r0, [fp, #-32]	; 0xffffffe0
   19a88:	b	19aa4 <__assert_fail@plt+0x8a58>
   19a8c:	ldr	r0, [fp, #-16]
   19a90:	movw	r1, #0
   19a94:	sub	r0, r1, r0
   19a98:	movw	r1, #32767	; 0x7fff
   19a9c:	udiv	r0, r1, r0
   19aa0:	str	r0, [fp, #-32]	; 0xffffffe0
   19aa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19aa8:	ldr	r1, [fp, #-12]
   19aac:	mvn	r2, #0
   19ab0:	sub	r1, r2, r1
   19ab4:	cmp	r0, r1
   19ab8:	bls	19bc4 <__assert_fail@plt+0x8b78>
   19abc:	b	19bdc <__assert_fail@plt+0x8b90>
   19ac0:	ldr	r0, [fp, #-16]
   19ac4:	cmn	r0, #1
   19ac8:	bne	19b14 <__assert_fail@plt+0x8ac8>
   19acc:	b	19aec <__assert_fail@plt+0x8aa0>
   19ad0:	ldr	r0, [pc, #3760]	; 1a988 <__assert_fail@plt+0x993c>
   19ad4:	ldr	r1, [fp, #-12]
   19ad8:	add	r0, r1, r0
   19adc:	movw	r1, #0
   19ae0:	cmp	r1, r0
   19ae4:	bcc	19bc4 <__assert_fail@plt+0x8b78>
   19ae8:	b	19bdc <__assert_fail@plt+0x8b90>
   19aec:	ldr	r0, [fp, #-12]
   19af0:	movw	r1, #0
   19af4:	cmp	r1, r0
   19af8:	bcs	19bdc <__assert_fail@plt+0x8b90>
   19afc:	ldr	r0, [fp, #-12]
   19b00:	sub	r0, r0, #1
   19b04:	movw	r1, #32767	; 0x7fff
   19b08:	cmp	r1, r0
   19b0c:	bcc	19bc4 <__assert_fail@plt+0x8b78>
   19b10:	b	19bdc <__assert_fail@plt+0x8b90>
   19b14:	ldr	r0, [pc, #3692]	; 1a988 <__assert_fail@plt+0x993c>
   19b18:	ldr	r1, [fp, #-16]
   19b1c:	udiv	r0, r0, r1
   19b20:	ldr	r1, [fp, #-12]
   19b24:	cmp	r0, r1
   19b28:	bcc	19bc4 <__assert_fail@plt+0x8b78>
   19b2c:	b	19bdc <__assert_fail@plt+0x8b90>
   19b30:	ldr	r0, [fp, #-16]
   19b34:	cmp	r0, #0
   19b38:	bne	19b40 <__assert_fail@plt+0x8af4>
   19b3c:	b	19bdc <__assert_fail@plt+0x8b90>
   19b40:	ldr	r0, [fp, #-12]
   19b44:	cmp	r0, #0
   19b48:	bcs	19bac <__assert_fail@plt+0x8b60>
   19b4c:	ldr	r0, [fp, #-12]
   19b50:	cmn	r0, #1
   19b54:	bne	19b90 <__assert_fail@plt+0x8b44>
   19b58:	b	19b78 <__assert_fail@plt+0x8b2c>
   19b5c:	ldr	r0, [pc, #3620]	; 1a988 <__assert_fail@plt+0x993c>
   19b60:	ldr	r1, [fp, #-16]
   19b64:	add	r0, r1, r0
   19b68:	movw	r1, #0
   19b6c:	cmp	r1, r0
   19b70:	bcc	19bc4 <__assert_fail@plt+0x8b78>
   19b74:	b	19bdc <__assert_fail@plt+0x8b90>
   19b78:	ldr	r0, [fp, #-16]
   19b7c:	sub	r0, r0, #1
   19b80:	movw	r1, #32767	; 0x7fff
   19b84:	cmp	r1, r0
   19b88:	bcc	19bc4 <__assert_fail@plt+0x8b78>
   19b8c:	b	19bdc <__assert_fail@plt+0x8b90>
   19b90:	ldr	r0, [pc, #3568]	; 1a988 <__assert_fail@plt+0x993c>
   19b94:	ldr	r1, [fp, #-12]
   19b98:	udiv	r0, r0, r1
   19b9c:	ldr	r1, [fp, #-16]
   19ba0:	cmp	r0, r1
   19ba4:	bcc	19bc4 <__assert_fail@plt+0x8b78>
   19ba8:	b	19bdc <__assert_fail@plt+0x8b90>
   19bac:	ldr	r0, [fp, #-16]
   19bb0:	movw	r1, #32767	; 0x7fff
   19bb4:	udiv	r0, r1, r0
   19bb8:	ldr	r1, [fp, #-12]
   19bbc:	cmp	r0, r1
   19bc0:	bcs	19bdc <__assert_fail@plt+0x8b90>
   19bc4:	ldr	r0, [fp, #-12]
   19bc8:	ldr	r1, [fp, #-16]
   19bcc:	mul	r0, r0, r1
   19bd0:	sxth	r0, r0
   19bd4:	str	r0, [fp, #-20]	; 0xffffffec
   19bd8:	b	1a94c <__assert_fail@plt+0x9900>
   19bdc:	ldr	r0, [fp, #-12]
   19be0:	ldr	r1, [fp, #-16]
   19be4:	mul	r0, r0, r1
   19be8:	sxth	r0, r0
   19bec:	str	r0, [fp, #-20]	; 0xffffffec
   19bf0:	b	1a964 <__assert_fail@plt+0x9918>
   19bf4:	ldr	r0, [fp, #-16]
   19bf8:	cmp	r0, #0
   19bfc:	bcs	19d08 <__assert_fail@plt+0x8cbc>
   19c00:	ldr	r0, [fp, #-12]
   19c04:	cmp	r0, #0
   19c08:	bcs	19c90 <__assert_fail@plt+0x8c44>
   19c0c:	b	19c2c <__assert_fail@plt+0x8be0>
   19c10:	ldr	r0, [fp, #-12]
   19c14:	ldr	r1, [fp, #-16]
   19c18:	movw	r2, #65535	; 0xffff
   19c1c:	udiv	r1, r2, r1
   19c20:	cmp	r0, r1
   19c24:	bcc	19da4 <__assert_fail@plt+0x8d58>
   19c28:	b	19dbc <__assert_fail@plt+0x8d70>
   19c2c:	b	19c40 <__assert_fail@plt+0x8bf4>
   19c30:	ldr	r0, [fp, #-16]
   19c34:	cmp	r0, #1
   19c38:	bcc	19c50 <__assert_fail@plt+0x8c04>
   19c3c:	b	19c5c <__assert_fail@plt+0x8c10>
   19c40:	ldr	r0, [fp, #-16]
   19c44:	movw	r1, #0
   19c48:	cmp	r1, r0
   19c4c:	bcs	19c5c <__assert_fail@plt+0x8c10>
   19c50:	movw	r0, #0
   19c54:	str	r0, [fp, #-36]	; 0xffffffdc
   19c58:	b	19c74 <__assert_fail@plt+0x8c28>
   19c5c:	ldr	r0, [fp, #-16]
   19c60:	movw	r1, #0
   19c64:	sub	r0, r1, r0
   19c68:	movw	r1, #65535	; 0xffff
   19c6c:	udiv	r0, r1, r0
   19c70:	str	r0, [fp, #-36]	; 0xffffffdc
   19c74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19c78:	ldr	r1, [fp, #-12]
   19c7c:	mvn	r2, #0
   19c80:	sub	r1, r2, r1
   19c84:	cmp	r0, r1
   19c88:	bls	19da4 <__assert_fail@plt+0x8d58>
   19c8c:	b	19dbc <__assert_fail@plt+0x8d70>
   19c90:	b	19c98 <__assert_fail@plt+0x8c4c>
   19c94:	b	19c9c <__assert_fail@plt+0x8c50>
   19c98:	b	19cec <__assert_fail@plt+0x8ca0>
   19c9c:	ldr	r0, [fp, #-16]
   19ca0:	cmn	r0, #1
   19ca4:	bne	19cec <__assert_fail@plt+0x8ca0>
   19ca8:	b	19cc4 <__assert_fail@plt+0x8c78>
   19cac:	ldr	r0, [fp, #-12]
   19cb0:	add	r0, r0, #0
   19cb4:	movw	r1, #0
   19cb8:	cmp	r1, r0
   19cbc:	bcc	19da4 <__assert_fail@plt+0x8d58>
   19cc0:	b	19dbc <__assert_fail@plt+0x8d70>
   19cc4:	ldr	r0, [fp, #-12]
   19cc8:	movw	r1, #0
   19ccc:	cmp	r1, r0
   19cd0:	bcs	19dbc <__assert_fail@plt+0x8d70>
   19cd4:	ldr	r0, [fp, #-12]
   19cd8:	sub	r0, r0, #1
   19cdc:	mvn	r1, #0
   19ce0:	cmp	r1, r0
   19ce4:	bcc	19da4 <__assert_fail@plt+0x8d58>
   19ce8:	b	19dbc <__assert_fail@plt+0x8d70>
   19cec:	ldr	r0, [fp, #-16]
   19cf0:	movw	r1, #0
   19cf4:	udiv	r0, r1, r0
   19cf8:	ldr	r1, [fp, #-12]
   19cfc:	cmp	r0, r1
   19d00:	bcc	19da4 <__assert_fail@plt+0x8d58>
   19d04:	b	19dbc <__assert_fail@plt+0x8d70>
   19d08:	ldr	r0, [fp, #-16]
   19d0c:	cmp	r0, #0
   19d10:	bne	19d18 <__assert_fail@plt+0x8ccc>
   19d14:	b	19dbc <__assert_fail@plt+0x8d70>
   19d18:	ldr	r0, [fp, #-12]
   19d1c:	cmp	r0, #0
   19d20:	bcs	19d8c <__assert_fail@plt+0x8d40>
   19d24:	b	19d2c <__assert_fail@plt+0x8ce0>
   19d28:	b	19d30 <__assert_fail@plt+0x8ce4>
   19d2c:	b	19d70 <__assert_fail@plt+0x8d24>
   19d30:	ldr	r0, [fp, #-12]
   19d34:	cmn	r0, #1
   19d38:	bne	19d70 <__assert_fail@plt+0x8d24>
   19d3c:	b	19d58 <__assert_fail@plt+0x8d0c>
   19d40:	ldr	r0, [fp, #-16]
   19d44:	add	r0, r0, #0
   19d48:	movw	r1, #0
   19d4c:	cmp	r1, r0
   19d50:	bcc	19da4 <__assert_fail@plt+0x8d58>
   19d54:	b	19dbc <__assert_fail@plt+0x8d70>
   19d58:	ldr	r0, [fp, #-16]
   19d5c:	sub	r0, r0, #1
   19d60:	mvn	r1, #0
   19d64:	cmp	r1, r0
   19d68:	bcc	19da4 <__assert_fail@plt+0x8d58>
   19d6c:	b	19dbc <__assert_fail@plt+0x8d70>
   19d70:	ldr	r0, [fp, #-12]
   19d74:	movw	r1, #0
   19d78:	udiv	r0, r1, r0
   19d7c:	ldr	r1, [fp, #-16]
   19d80:	cmp	r0, r1
   19d84:	bcc	19da4 <__assert_fail@plt+0x8d58>
   19d88:	b	19dbc <__assert_fail@plt+0x8d70>
   19d8c:	ldr	r0, [fp, #-16]
   19d90:	movw	r1, #65535	; 0xffff
   19d94:	udiv	r0, r1, r0
   19d98:	ldr	r1, [fp, #-12]
   19d9c:	cmp	r0, r1
   19da0:	bcs	19dbc <__assert_fail@plt+0x8d70>
   19da4:	ldr	r0, [fp, #-12]
   19da8:	ldr	r1, [fp, #-16]
   19dac:	mul	r0, r0, r1
   19db0:	uxth	r0, r0
   19db4:	str	r0, [fp, #-20]	; 0xffffffec
   19db8:	b	1a94c <__assert_fail@plt+0x9900>
   19dbc:	ldr	r0, [fp, #-12]
   19dc0:	ldr	r1, [fp, #-16]
   19dc4:	mul	r0, r0, r1
   19dc8:	uxth	r0, r0
   19dcc:	str	r0, [fp, #-20]	; 0xffffffec
   19dd0:	b	1a964 <__assert_fail@plt+0x9918>
   19dd4:	b	19dd8 <__assert_fail@plt+0x8d8c>
   19dd8:	b	19f9c <__assert_fail@plt+0x8f50>
   19ddc:	ldr	r0, [fp, #-16]
   19de0:	cmp	r0, #0
   19de4:	bcs	19ee4 <__assert_fail@plt+0x8e98>
   19de8:	ldr	r0, [fp, #-12]
   19dec:	cmp	r0, #0
   19df0:	bcs	19e78 <__assert_fail@plt+0x8e2c>
   19df4:	b	19e14 <__assert_fail@plt+0x8dc8>
   19df8:	ldr	r0, [pc, #2944]	; 1a980 <__assert_fail@plt+0x9934>
   19dfc:	ldr	r1, [fp, #-12]
   19e00:	ldr	r2, [fp, #-16]
   19e04:	udiv	r0, r0, r2
   19e08:	cmp	r1, r0
   19e0c:	bcc	19f74 <__assert_fail@plt+0x8f28>
   19e10:	b	19f88 <__assert_fail@plt+0x8f3c>
   19e14:	b	19e28 <__assert_fail@plt+0x8ddc>
   19e18:	ldr	r0, [fp, #-16]
   19e1c:	cmp	r0, #1
   19e20:	bcc	19e38 <__assert_fail@plt+0x8dec>
   19e24:	b	19e44 <__assert_fail@plt+0x8df8>
   19e28:	ldr	r0, [fp, #-16]
   19e2c:	movw	r1, #0
   19e30:	cmp	r1, r0
   19e34:	bcs	19e44 <__assert_fail@plt+0x8df8>
   19e38:	movw	r0, #0
   19e3c:	str	r0, [fp, #-40]	; 0xffffffd8
   19e40:	b	19e5c <__assert_fail@plt+0x8e10>
   19e44:	ldr	r0, [pc, #2868]	; 1a980 <__assert_fail@plt+0x9934>
   19e48:	ldr	r1, [fp, #-16]
   19e4c:	movw	r2, #0
   19e50:	sub	r1, r2, r1
   19e54:	udiv	r0, r0, r1
   19e58:	str	r0, [fp, #-40]	; 0xffffffd8
   19e5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19e60:	ldr	r1, [fp, #-12]
   19e64:	mvn	r2, #0
   19e68:	sub	r1, r2, r1
   19e6c:	cmp	r0, r1
   19e70:	bls	19f74 <__assert_fail@plt+0x8f28>
   19e74:	b	19f88 <__assert_fail@plt+0x8f3c>
   19e78:	ldr	r0, [fp, #-16]
   19e7c:	cmn	r0, #1
   19e80:	bne	19ec8 <__assert_fail@plt+0x8e7c>
   19e84:	b	19ea0 <__assert_fail@plt+0x8e54>
   19e88:	ldr	r0, [fp, #-12]
   19e8c:	add	r0, r0, #-2147483648	; 0x80000000
   19e90:	movw	r1, #0
   19e94:	cmp	r1, r0
   19e98:	bcc	19f74 <__assert_fail@plt+0x8f28>
   19e9c:	b	19f88 <__assert_fail@plt+0x8f3c>
   19ea0:	ldr	r0, [fp, #-12]
   19ea4:	movw	r1, #0
   19ea8:	cmp	r1, r0
   19eac:	bcs	19f88 <__assert_fail@plt+0x8f3c>
   19eb0:	ldr	r0, [pc, #2760]	; 1a980 <__assert_fail@plt+0x9934>
   19eb4:	ldr	r1, [fp, #-12]
   19eb8:	sub	r1, r1, #1
   19ebc:	cmp	r0, r1
   19ec0:	bcc	19f74 <__assert_fail@plt+0x8f28>
   19ec4:	b	19f88 <__assert_fail@plt+0x8f3c>
   19ec8:	ldr	r0, [pc, #2740]	; 1a984 <__assert_fail@plt+0x9938>
   19ecc:	ldr	r1, [fp, #-16]
   19ed0:	udiv	r0, r0, r1
   19ed4:	ldr	r1, [fp, #-12]
   19ed8:	cmp	r0, r1
   19edc:	bcc	19f74 <__assert_fail@plt+0x8f28>
   19ee0:	b	19f88 <__assert_fail@plt+0x8f3c>
   19ee4:	ldr	r0, [fp, #-16]
   19ee8:	cmp	r0, #0
   19eec:	bne	19ef4 <__assert_fail@plt+0x8ea8>
   19ef0:	b	19f88 <__assert_fail@plt+0x8f3c>
   19ef4:	ldr	r0, [fp, #-12]
   19ef8:	cmp	r0, #0
   19efc:	bcs	19f5c <__assert_fail@plt+0x8f10>
   19f00:	ldr	r0, [fp, #-12]
   19f04:	cmn	r0, #1
   19f08:	bne	19f40 <__assert_fail@plt+0x8ef4>
   19f0c:	b	19f28 <__assert_fail@plt+0x8edc>
   19f10:	ldr	r0, [fp, #-16]
   19f14:	add	r0, r0, #-2147483648	; 0x80000000
   19f18:	movw	r1, #0
   19f1c:	cmp	r1, r0
   19f20:	bcc	19f74 <__assert_fail@plt+0x8f28>
   19f24:	b	19f88 <__assert_fail@plt+0x8f3c>
   19f28:	ldr	r0, [pc, #2640]	; 1a980 <__assert_fail@plt+0x9934>
   19f2c:	ldr	r1, [fp, #-16]
   19f30:	sub	r1, r1, #1
   19f34:	cmp	r0, r1
   19f38:	bcc	19f74 <__assert_fail@plt+0x8f28>
   19f3c:	b	19f88 <__assert_fail@plt+0x8f3c>
   19f40:	ldr	r0, [pc, #2620]	; 1a984 <__assert_fail@plt+0x9938>
   19f44:	ldr	r1, [fp, #-12]
   19f48:	udiv	r0, r0, r1
   19f4c:	ldr	r1, [fp, #-16]
   19f50:	cmp	r0, r1
   19f54:	bcc	19f74 <__assert_fail@plt+0x8f28>
   19f58:	b	19f88 <__assert_fail@plt+0x8f3c>
   19f5c:	ldr	r0, [pc, #2588]	; 1a980 <__assert_fail@plt+0x9934>
   19f60:	ldr	r1, [fp, #-16]
   19f64:	udiv	r0, r0, r1
   19f68:	ldr	r1, [fp, #-12]
   19f6c:	cmp	r0, r1
   19f70:	bcs	19f88 <__assert_fail@plt+0x8f3c>
   19f74:	ldr	r0, [fp, #-12]
   19f78:	ldr	r1, [fp, #-16]
   19f7c:	mul	r0, r0, r1
   19f80:	str	r0, [fp, #-20]	; 0xffffffec
   19f84:	b	1a94c <__assert_fail@plt+0x9900>
   19f88:	ldr	r0, [fp, #-12]
   19f8c:	ldr	r1, [fp, #-16]
   19f90:	mul	r0, r0, r1
   19f94:	str	r0, [fp, #-20]	; 0xffffffec
   19f98:	b	1a964 <__assert_fail@plt+0x9918>
   19f9c:	ldr	r0, [fp, #-16]
   19fa0:	cmp	r0, #0
   19fa4:	bcs	1a0b0 <__assert_fail@plt+0x9064>
   19fa8:	ldr	r0, [fp, #-12]
   19fac:	cmp	r0, #0
   19fb0:	bcs	1a038 <__assert_fail@plt+0x8fec>
   19fb4:	b	19fd4 <__assert_fail@plt+0x8f88>
   19fb8:	ldr	r0, [fp, #-12]
   19fbc:	ldr	r1, [fp, #-16]
   19fc0:	mvn	r2, #0
   19fc4:	udiv	r1, r2, r1
   19fc8:	cmp	r0, r1
   19fcc:	bcc	1a14c <__assert_fail@plt+0x9100>
   19fd0:	b	1a160 <__assert_fail@plt+0x9114>
   19fd4:	b	19fe8 <__assert_fail@plt+0x8f9c>
   19fd8:	ldr	r0, [fp, #-16]
   19fdc:	cmp	r0, #1
   19fe0:	bcc	19ff8 <__assert_fail@plt+0x8fac>
   19fe4:	b	1a004 <__assert_fail@plt+0x8fb8>
   19fe8:	ldr	r0, [fp, #-16]
   19fec:	movw	r1, #0
   19ff0:	cmp	r1, r0
   19ff4:	bcs	1a004 <__assert_fail@plt+0x8fb8>
   19ff8:	movw	r0, #1
   19ffc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a000:	b	1a01c <__assert_fail@plt+0x8fd0>
   1a004:	ldr	r0, [fp, #-16]
   1a008:	movw	r1, #0
   1a00c:	sub	r0, r1, r0
   1a010:	mvn	r1, #0
   1a014:	udiv	r0, r1, r0
   1a018:	str	r0, [fp, #-44]	; 0xffffffd4
   1a01c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a020:	ldr	r1, [fp, #-12]
   1a024:	mvn	r2, #0
   1a028:	sub	r1, r2, r1
   1a02c:	cmp	r0, r1
   1a030:	bls	1a14c <__assert_fail@plt+0x9100>
   1a034:	b	1a160 <__assert_fail@plt+0x9114>
   1a038:	b	1a040 <__assert_fail@plt+0x8ff4>
   1a03c:	b	1a044 <__assert_fail@plt+0x8ff8>
   1a040:	b	1a094 <__assert_fail@plt+0x9048>
   1a044:	ldr	r0, [fp, #-16]
   1a048:	cmn	r0, #1
   1a04c:	bne	1a094 <__assert_fail@plt+0x9048>
   1a050:	b	1a06c <__assert_fail@plt+0x9020>
   1a054:	ldr	r0, [fp, #-12]
   1a058:	add	r0, r0, #0
   1a05c:	movw	r1, #0
   1a060:	cmp	r1, r0
   1a064:	bcc	1a14c <__assert_fail@plt+0x9100>
   1a068:	b	1a160 <__assert_fail@plt+0x9114>
   1a06c:	ldr	r0, [fp, #-12]
   1a070:	movw	r1, #0
   1a074:	cmp	r1, r0
   1a078:	bcs	1a160 <__assert_fail@plt+0x9114>
   1a07c:	ldr	r0, [fp, #-12]
   1a080:	sub	r0, r0, #1
   1a084:	mvn	r1, #0
   1a088:	cmp	r1, r0
   1a08c:	bcc	1a14c <__assert_fail@plt+0x9100>
   1a090:	b	1a160 <__assert_fail@plt+0x9114>
   1a094:	ldr	r0, [fp, #-16]
   1a098:	movw	r1, #0
   1a09c:	udiv	r0, r1, r0
   1a0a0:	ldr	r1, [fp, #-12]
   1a0a4:	cmp	r0, r1
   1a0a8:	bcc	1a14c <__assert_fail@plt+0x9100>
   1a0ac:	b	1a160 <__assert_fail@plt+0x9114>
   1a0b0:	ldr	r0, [fp, #-16]
   1a0b4:	cmp	r0, #0
   1a0b8:	bne	1a0c0 <__assert_fail@plt+0x9074>
   1a0bc:	b	1a160 <__assert_fail@plt+0x9114>
   1a0c0:	ldr	r0, [fp, #-12]
   1a0c4:	cmp	r0, #0
   1a0c8:	bcs	1a134 <__assert_fail@plt+0x90e8>
   1a0cc:	b	1a0d4 <__assert_fail@plt+0x9088>
   1a0d0:	b	1a0d8 <__assert_fail@plt+0x908c>
   1a0d4:	b	1a118 <__assert_fail@plt+0x90cc>
   1a0d8:	ldr	r0, [fp, #-12]
   1a0dc:	cmn	r0, #1
   1a0e0:	bne	1a118 <__assert_fail@plt+0x90cc>
   1a0e4:	b	1a100 <__assert_fail@plt+0x90b4>
   1a0e8:	ldr	r0, [fp, #-16]
   1a0ec:	add	r0, r0, #0
   1a0f0:	movw	r1, #0
   1a0f4:	cmp	r1, r0
   1a0f8:	bcc	1a14c <__assert_fail@plt+0x9100>
   1a0fc:	b	1a160 <__assert_fail@plt+0x9114>
   1a100:	ldr	r0, [fp, #-16]
   1a104:	sub	r0, r0, #1
   1a108:	mvn	r1, #0
   1a10c:	cmp	r1, r0
   1a110:	bcc	1a14c <__assert_fail@plt+0x9100>
   1a114:	b	1a160 <__assert_fail@plt+0x9114>
   1a118:	ldr	r0, [fp, #-12]
   1a11c:	movw	r1, #0
   1a120:	udiv	r0, r1, r0
   1a124:	ldr	r1, [fp, #-16]
   1a128:	cmp	r0, r1
   1a12c:	bcc	1a14c <__assert_fail@plt+0x9100>
   1a130:	b	1a160 <__assert_fail@plt+0x9114>
   1a134:	ldr	r0, [fp, #-16]
   1a138:	mvn	r1, #0
   1a13c:	udiv	r0, r1, r0
   1a140:	ldr	r1, [fp, #-12]
   1a144:	cmp	r0, r1
   1a148:	bcs	1a160 <__assert_fail@plt+0x9114>
   1a14c:	ldr	r0, [fp, #-12]
   1a150:	ldr	r1, [fp, #-16]
   1a154:	mul	r0, r0, r1
   1a158:	str	r0, [fp, #-20]	; 0xffffffec
   1a15c:	b	1a94c <__assert_fail@plt+0x9900>
   1a160:	ldr	r0, [fp, #-12]
   1a164:	ldr	r1, [fp, #-16]
   1a168:	mul	r0, r0, r1
   1a16c:	str	r0, [fp, #-20]	; 0xffffffec
   1a170:	b	1a964 <__assert_fail@plt+0x9918>
   1a174:	b	1a178 <__assert_fail@plt+0x912c>
   1a178:	b	1a33c <__assert_fail@plt+0x92f0>
   1a17c:	ldr	r0, [fp, #-16]
   1a180:	cmp	r0, #0
   1a184:	bcs	1a284 <__assert_fail@plt+0x9238>
   1a188:	ldr	r0, [fp, #-12]
   1a18c:	cmp	r0, #0
   1a190:	bcs	1a218 <__assert_fail@plt+0x91cc>
   1a194:	b	1a1b4 <__assert_fail@plt+0x9168>
   1a198:	ldr	r0, [pc, #2016]	; 1a980 <__assert_fail@plt+0x9934>
   1a19c:	ldr	r1, [fp, #-12]
   1a1a0:	ldr	r2, [fp, #-16]
   1a1a4:	udiv	r0, r0, r2
   1a1a8:	cmp	r1, r0
   1a1ac:	bcc	1a314 <__assert_fail@plt+0x92c8>
   1a1b0:	b	1a328 <__assert_fail@plt+0x92dc>
   1a1b4:	b	1a1c8 <__assert_fail@plt+0x917c>
   1a1b8:	ldr	r0, [fp, #-16]
   1a1bc:	cmp	r0, #1
   1a1c0:	bcc	1a1d8 <__assert_fail@plt+0x918c>
   1a1c4:	b	1a1e4 <__assert_fail@plt+0x9198>
   1a1c8:	ldr	r0, [fp, #-16]
   1a1cc:	movw	r1, #0
   1a1d0:	cmp	r1, r0
   1a1d4:	bcs	1a1e4 <__assert_fail@plt+0x9198>
   1a1d8:	movw	r0, #0
   1a1dc:	str	r0, [sp, #48]	; 0x30
   1a1e0:	b	1a1fc <__assert_fail@plt+0x91b0>
   1a1e4:	ldr	r0, [pc, #1940]	; 1a980 <__assert_fail@plt+0x9934>
   1a1e8:	ldr	r1, [fp, #-16]
   1a1ec:	movw	r2, #0
   1a1f0:	sub	r1, r2, r1
   1a1f4:	udiv	r0, r0, r1
   1a1f8:	str	r0, [sp, #48]	; 0x30
   1a1fc:	ldr	r0, [sp, #48]	; 0x30
   1a200:	ldr	r1, [fp, #-12]
   1a204:	mvn	r2, #0
   1a208:	sub	r1, r2, r1
   1a20c:	cmp	r0, r1
   1a210:	bls	1a314 <__assert_fail@plt+0x92c8>
   1a214:	b	1a328 <__assert_fail@plt+0x92dc>
   1a218:	ldr	r0, [fp, #-16]
   1a21c:	cmn	r0, #1
   1a220:	bne	1a268 <__assert_fail@plt+0x921c>
   1a224:	b	1a240 <__assert_fail@plt+0x91f4>
   1a228:	ldr	r0, [fp, #-12]
   1a22c:	add	r0, r0, #-2147483648	; 0x80000000
   1a230:	movw	r1, #0
   1a234:	cmp	r1, r0
   1a238:	bcc	1a314 <__assert_fail@plt+0x92c8>
   1a23c:	b	1a328 <__assert_fail@plt+0x92dc>
   1a240:	ldr	r0, [fp, #-12]
   1a244:	movw	r1, #0
   1a248:	cmp	r1, r0
   1a24c:	bcs	1a328 <__assert_fail@plt+0x92dc>
   1a250:	ldr	r0, [pc, #1832]	; 1a980 <__assert_fail@plt+0x9934>
   1a254:	ldr	r1, [fp, #-12]
   1a258:	sub	r1, r1, #1
   1a25c:	cmp	r0, r1
   1a260:	bcc	1a314 <__assert_fail@plt+0x92c8>
   1a264:	b	1a328 <__assert_fail@plt+0x92dc>
   1a268:	ldr	r0, [pc, #1812]	; 1a984 <__assert_fail@plt+0x9938>
   1a26c:	ldr	r1, [fp, #-16]
   1a270:	udiv	r0, r0, r1
   1a274:	ldr	r1, [fp, #-12]
   1a278:	cmp	r0, r1
   1a27c:	bcc	1a314 <__assert_fail@plt+0x92c8>
   1a280:	b	1a328 <__assert_fail@plt+0x92dc>
   1a284:	ldr	r0, [fp, #-16]
   1a288:	cmp	r0, #0
   1a28c:	bne	1a294 <__assert_fail@plt+0x9248>
   1a290:	b	1a328 <__assert_fail@plt+0x92dc>
   1a294:	ldr	r0, [fp, #-12]
   1a298:	cmp	r0, #0
   1a29c:	bcs	1a2fc <__assert_fail@plt+0x92b0>
   1a2a0:	ldr	r0, [fp, #-12]
   1a2a4:	cmn	r0, #1
   1a2a8:	bne	1a2e0 <__assert_fail@plt+0x9294>
   1a2ac:	b	1a2c8 <__assert_fail@plt+0x927c>
   1a2b0:	ldr	r0, [fp, #-16]
   1a2b4:	add	r0, r0, #-2147483648	; 0x80000000
   1a2b8:	movw	r1, #0
   1a2bc:	cmp	r1, r0
   1a2c0:	bcc	1a314 <__assert_fail@plt+0x92c8>
   1a2c4:	b	1a328 <__assert_fail@plt+0x92dc>
   1a2c8:	ldr	r0, [pc, #1712]	; 1a980 <__assert_fail@plt+0x9934>
   1a2cc:	ldr	r1, [fp, #-16]
   1a2d0:	sub	r1, r1, #1
   1a2d4:	cmp	r0, r1
   1a2d8:	bcc	1a314 <__assert_fail@plt+0x92c8>
   1a2dc:	b	1a328 <__assert_fail@plt+0x92dc>
   1a2e0:	ldr	r0, [pc, #1692]	; 1a984 <__assert_fail@plt+0x9938>
   1a2e4:	ldr	r1, [fp, #-12]
   1a2e8:	udiv	r0, r0, r1
   1a2ec:	ldr	r1, [fp, #-16]
   1a2f0:	cmp	r0, r1
   1a2f4:	bcc	1a314 <__assert_fail@plt+0x92c8>
   1a2f8:	b	1a328 <__assert_fail@plt+0x92dc>
   1a2fc:	ldr	r0, [pc, #1660]	; 1a980 <__assert_fail@plt+0x9934>
   1a300:	ldr	r1, [fp, #-16]
   1a304:	udiv	r0, r0, r1
   1a308:	ldr	r1, [fp, #-12]
   1a30c:	cmp	r0, r1
   1a310:	bcs	1a328 <__assert_fail@plt+0x92dc>
   1a314:	ldr	r0, [fp, #-12]
   1a318:	ldr	r1, [fp, #-16]
   1a31c:	mul	r0, r0, r1
   1a320:	str	r0, [fp, #-20]	; 0xffffffec
   1a324:	b	1a94c <__assert_fail@plt+0x9900>
   1a328:	ldr	r0, [fp, #-12]
   1a32c:	ldr	r1, [fp, #-16]
   1a330:	mul	r0, r0, r1
   1a334:	str	r0, [fp, #-20]	; 0xffffffec
   1a338:	b	1a964 <__assert_fail@plt+0x9918>
   1a33c:	ldr	r0, [fp, #-16]
   1a340:	cmp	r0, #0
   1a344:	bcs	1a450 <__assert_fail@plt+0x9404>
   1a348:	ldr	r0, [fp, #-12]
   1a34c:	cmp	r0, #0
   1a350:	bcs	1a3d8 <__assert_fail@plt+0x938c>
   1a354:	b	1a374 <__assert_fail@plt+0x9328>
   1a358:	ldr	r0, [fp, #-12]
   1a35c:	ldr	r1, [fp, #-16]
   1a360:	mvn	r2, #0
   1a364:	udiv	r1, r2, r1
   1a368:	cmp	r0, r1
   1a36c:	bcc	1a4ec <__assert_fail@plt+0x94a0>
   1a370:	b	1a500 <__assert_fail@plt+0x94b4>
   1a374:	b	1a388 <__assert_fail@plt+0x933c>
   1a378:	ldr	r0, [fp, #-16]
   1a37c:	cmp	r0, #1
   1a380:	bcc	1a398 <__assert_fail@plt+0x934c>
   1a384:	b	1a3a4 <__assert_fail@plt+0x9358>
   1a388:	ldr	r0, [fp, #-16]
   1a38c:	movw	r1, #0
   1a390:	cmp	r1, r0
   1a394:	bcs	1a3a4 <__assert_fail@plt+0x9358>
   1a398:	movw	r0, #1
   1a39c:	str	r0, [sp, #44]	; 0x2c
   1a3a0:	b	1a3bc <__assert_fail@plt+0x9370>
   1a3a4:	ldr	r0, [fp, #-16]
   1a3a8:	movw	r1, #0
   1a3ac:	sub	r0, r1, r0
   1a3b0:	mvn	r1, #0
   1a3b4:	udiv	r0, r1, r0
   1a3b8:	str	r0, [sp, #44]	; 0x2c
   1a3bc:	ldr	r0, [sp, #44]	; 0x2c
   1a3c0:	ldr	r1, [fp, #-12]
   1a3c4:	mvn	r2, #0
   1a3c8:	sub	r1, r2, r1
   1a3cc:	cmp	r0, r1
   1a3d0:	bls	1a4ec <__assert_fail@plt+0x94a0>
   1a3d4:	b	1a500 <__assert_fail@plt+0x94b4>
   1a3d8:	b	1a3e0 <__assert_fail@plt+0x9394>
   1a3dc:	b	1a3e4 <__assert_fail@plt+0x9398>
   1a3e0:	b	1a434 <__assert_fail@plt+0x93e8>
   1a3e4:	ldr	r0, [fp, #-16]
   1a3e8:	cmn	r0, #1
   1a3ec:	bne	1a434 <__assert_fail@plt+0x93e8>
   1a3f0:	b	1a40c <__assert_fail@plt+0x93c0>
   1a3f4:	ldr	r0, [fp, #-12]
   1a3f8:	add	r0, r0, #0
   1a3fc:	movw	r1, #0
   1a400:	cmp	r1, r0
   1a404:	bcc	1a4ec <__assert_fail@plt+0x94a0>
   1a408:	b	1a500 <__assert_fail@plt+0x94b4>
   1a40c:	ldr	r0, [fp, #-12]
   1a410:	movw	r1, #0
   1a414:	cmp	r1, r0
   1a418:	bcs	1a500 <__assert_fail@plt+0x94b4>
   1a41c:	ldr	r0, [fp, #-12]
   1a420:	sub	r0, r0, #1
   1a424:	mvn	r1, #0
   1a428:	cmp	r1, r0
   1a42c:	bcc	1a4ec <__assert_fail@plt+0x94a0>
   1a430:	b	1a500 <__assert_fail@plt+0x94b4>
   1a434:	ldr	r0, [fp, #-16]
   1a438:	movw	r1, #0
   1a43c:	udiv	r0, r1, r0
   1a440:	ldr	r1, [fp, #-12]
   1a444:	cmp	r0, r1
   1a448:	bcc	1a4ec <__assert_fail@plt+0x94a0>
   1a44c:	b	1a500 <__assert_fail@plt+0x94b4>
   1a450:	ldr	r0, [fp, #-16]
   1a454:	cmp	r0, #0
   1a458:	bne	1a460 <__assert_fail@plt+0x9414>
   1a45c:	b	1a500 <__assert_fail@plt+0x94b4>
   1a460:	ldr	r0, [fp, #-12]
   1a464:	cmp	r0, #0
   1a468:	bcs	1a4d4 <__assert_fail@plt+0x9488>
   1a46c:	b	1a474 <__assert_fail@plt+0x9428>
   1a470:	b	1a478 <__assert_fail@plt+0x942c>
   1a474:	b	1a4b8 <__assert_fail@plt+0x946c>
   1a478:	ldr	r0, [fp, #-12]
   1a47c:	cmn	r0, #1
   1a480:	bne	1a4b8 <__assert_fail@plt+0x946c>
   1a484:	b	1a4a0 <__assert_fail@plt+0x9454>
   1a488:	ldr	r0, [fp, #-16]
   1a48c:	add	r0, r0, #0
   1a490:	movw	r1, #0
   1a494:	cmp	r1, r0
   1a498:	bcc	1a4ec <__assert_fail@plt+0x94a0>
   1a49c:	b	1a500 <__assert_fail@plt+0x94b4>
   1a4a0:	ldr	r0, [fp, #-16]
   1a4a4:	sub	r0, r0, #1
   1a4a8:	mvn	r1, #0
   1a4ac:	cmp	r1, r0
   1a4b0:	bcc	1a4ec <__assert_fail@plt+0x94a0>
   1a4b4:	b	1a500 <__assert_fail@plt+0x94b4>
   1a4b8:	ldr	r0, [fp, #-12]
   1a4bc:	movw	r1, #0
   1a4c0:	udiv	r0, r1, r0
   1a4c4:	ldr	r1, [fp, #-16]
   1a4c8:	cmp	r0, r1
   1a4cc:	bcc	1a4ec <__assert_fail@plt+0x94a0>
   1a4d0:	b	1a500 <__assert_fail@plt+0x94b4>
   1a4d4:	ldr	r0, [fp, #-16]
   1a4d8:	mvn	r1, #0
   1a4dc:	udiv	r0, r1, r0
   1a4e0:	ldr	r1, [fp, #-12]
   1a4e4:	cmp	r0, r1
   1a4e8:	bcs	1a500 <__assert_fail@plt+0x94b4>
   1a4ec:	ldr	r0, [fp, #-12]
   1a4f0:	ldr	r1, [fp, #-16]
   1a4f4:	mul	r0, r0, r1
   1a4f8:	str	r0, [fp, #-20]	; 0xffffffec
   1a4fc:	b	1a94c <__assert_fail@plt+0x9900>
   1a500:	ldr	r0, [fp, #-12]
   1a504:	ldr	r1, [fp, #-16]
   1a508:	mul	r0, r0, r1
   1a50c:	str	r0, [fp, #-20]	; 0xffffffec
   1a510:	b	1a964 <__assert_fail@plt+0x9918>
   1a514:	b	1a730 <__assert_fail@plt+0x96e4>
   1a518:	ldr	r0, [fp, #-16]
   1a51c:	cmp	r0, #0
   1a520:	bcs	1a660 <__assert_fail@plt+0x9614>
   1a524:	ldr	r0, [fp, #-12]
   1a528:	cmp	r0, #0
   1a52c:	bcs	1a5ec <__assert_fail@plt+0x95a0>
   1a530:	b	1a534 <__assert_fail@plt+0x94e8>
   1a534:	ldr	r0, [fp, #-12]
   1a538:	ldr	r2, [fp, #-16]
   1a53c:	mvn	r1, #0
   1a540:	mvn	r3, #-2147483648	; 0x80000000
   1a544:	mov	ip, #0
   1a548:	str	r0, [sp, #40]	; 0x28
   1a54c:	mov	r0, r1
   1a550:	mov	r1, r3
   1a554:	mov	r3, ip
   1a558:	bl	1b298 <__assert_fail@plt+0xa24c>
   1a55c:	ldr	r2, [sp, #40]	; 0x28
   1a560:	subs	r0, r2, r0
   1a564:	rscs	r1, r1, #0
   1a568:	blt	1a708 <__assert_fail@plt+0x96bc>
   1a56c:	b	1a71c <__assert_fail@plt+0x96d0>
   1a570:	b	1a584 <__assert_fail@plt+0x9538>
   1a574:	ldr	r0, [fp, #-16]
   1a578:	cmp	r0, #1
   1a57c:	bcc	1a594 <__assert_fail@plt+0x9548>
   1a580:	b	1a5a8 <__assert_fail@plt+0x955c>
   1a584:	ldr	r0, [fp, #-16]
   1a588:	movw	r1, #0
   1a58c:	cmp	r1, r0
   1a590:	bcs	1a5a8 <__assert_fail@plt+0x955c>
   1a594:	mov	r0, #0
   1a598:	mvn	r1, #0
   1a59c:	str	r1, [sp, #36]	; 0x24
   1a5a0:	str	r0, [sp, #32]
   1a5a4:	b	1a5cc <__assert_fail@plt+0x9580>
   1a5a8:	ldr	r0, [fp, #-16]
   1a5ac:	rsb	r2, r0, #0
   1a5b0:	mvn	r0, #0
   1a5b4:	mvn	r1, #-2147483648	; 0x80000000
   1a5b8:	mov	r3, #0
   1a5bc:	bl	1b298 <__assert_fail@plt+0xa24c>
   1a5c0:	str	r0, [sp, #36]	; 0x24
   1a5c4:	str	r1, [sp, #32]
   1a5c8:	b	1a5cc <__assert_fail@plt+0x9580>
   1a5cc:	ldr	r0, [sp, #32]
   1a5d0:	ldr	r1, [sp, #36]	; 0x24
   1a5d4:	ldr	r2, [fp, #-12]
   1a5d8:	mvn	r2, r2
   1a5dc:	subs	r1, r2, r1
   1a5e0:	rscs	r0, r0, #0
   1a5e4:	bge	1a708 <__assert_fail@plt+0x96bc>
   1a5e8:	b	1a71c <__assert_fail@plt+0x96d0>
   1a5ec:	ldr	r0, [fp, #-16]
   1a5f0:	cmn	r0, #1
   1a5f4:	bne	1a634 <__assert_fail@plt+0x95e8>
   1a5f8:	b	1a614 <__assert_fail@plt+0x95c8>
   1a5fc:	ldr	r0, [fp, #-12]
   1a600:	rsbs	r0, r0, #0
   1a604:	mov	r1, #0
   1a608:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a60c:	blt	1a708 <__assert_fail@plt+0x96bc>
   1a610:	b	1a71c <__assert_fail@plt+0x96d0>
   1a614:	ldr	r0, [fp, #-12]
   1a618:	movw	r1, #0
   1a61c:	cmp	r1, r0
   1a620:	bcs	1a71c <__assert_fail@plt+0x96d0>
   1a624:	mov	r0, #0
   1a628:	cmp	r0, #0
   1a62c:	bne	1a708 <__assert_fail@plt+0x96bc>
   1a630:	b	1a71c <__assert_fail@plt+0x96d0>
   1a634:	ldr	r2, [fp, #-16]
   1a638:	mov	r1, #-2147483648	; 0x80000000
   1a63c:	mov	r0, #0
   1a640:	str	r0, [sp, #28]
   1a644:	ldr	r3, [sp, #28]
   1a648:	bl	1b1c4 <__assert_fail@plt+0xa178>
   1a64c:	ldr	r2, [fp, #-12]
   1a650:	subs	r0, r0, r2
   1a654:	sbcs	r1, r1, #0
   1a658:	blt	1a708 <__assert_fail@plt+0x96bc>
   1a65c:	b	1a71c <__assert_fail@plt+0x96d0>
   1a660:	ldr	r0, [fp, #-16]
   1a664:	cmp	r0, #0
   1a668:	bne	1a670 <__assert_fail@plt+0x9624>
   1a66c:	b	1a71c <__assert_fail@plt+0x96d0>
   1a670:	ldr	r0, [fp, #-12]
   1a674:	cmp	r0, #0
   1a678:	bcs	1a6e0 <__assert_fail@plt+0x9694>
   1a67c:	ldr	r0, [fp, #-12]
   1a680:	cmn	r0, #1
   1a684:	bne	1a6b4 <__assert_fail@plt+0x9668>
   1a688:	b	1a6a4 <__assert_fail@plt+0x9658>
   1a68c:	ldr	r0, [fp, #-16]
   1a690:	rsbs	r0, r0, #0
   1a694:	mov	r1, #0
   1a698:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a69c:	blt	1a708 <__assert_fail@plt+0x96bc>
   1a6a0:	b	1a71c <__assert_fail@plt+0x96d0>
   1a6a4:	mov	r0, #0
   1a6a8:	cmp	r0, #0
   1a6ac:	bne	1a708 <__assert_fail@plt+0x96bc>
   1a6b0:	b	1a71c <__assert_fail@plt+0x96d0>
   1a6b4:	ldr	r2, [fp, #-12]
   1a6b8:	mov	r1, #-2147483648	; 0x80000000
   1a6bc:	mov	r0, #0
   1a6c0:	str	r0, [sp, #24]
   1a6c4:	ldr	r3, [sp, #24]
   1a6c8:	bl	1b1c4 <__assert_fail@plt+0xa178>
   1a6cc:	ldr	r2, [fp, #-16]
   1a6d0:	subs	r0, r0, r2
   1a6d4:	sbcs	r1, r1, #0
   1a6d8:	blt	1a708 <__assert_fail@plt+0x96bc>
   1a6dc:	b	1a71c <__assert_fail@plt+0x96d0>
   1a6e0:	ldr	r2, [fp, #-16]
   1a6e4:	mvn	r0, #0
   1a6e8:	mvn	r1, #-2147483648	; 0x80000000
   1a6ec:	mov	r3, #0
   1a6f0:	bl	1b298 <__assert_fail@plt+0xa24c>
   1a6f4:	ldr	r2, [fp, #-12]
   1a6f8:	subs	r0, r0, r2
   1a6fc:	sbcs	r1, r1, #0
   1a700:	bge	1a71c <__assert_fail@plt+0x96d0>
   1a704:	b	1a708 <__assert_fail@plt+0x96bc>
   1a708:	ldr	r0, [fp, #-12]
   1a70c:	ldr	r1, [fp, #-16]
   1a710:	mul	r0, r0, r1
   1a714:	str	r0, [fp, #-20]	; 0xffffffec
   1a718:	b	1a94c <__assert_fail@plt+0x9900>
   1a71c:	ldr	r0, [fp, #-12]
   1a720:	ldr	r1, [fp, #-16]
   1a724:	mul	r0, r0, r1
   1a728:	str	r0, [fp, #-20]	; 0xffffffec
   1a72c:	b	1a964 <__assert_fail@plt+0x9918>
   1a730:	ldr	r0, [fp, #-16]
   1a734:	cmp	r0, #0
   1a738:	bcs	1a874 <__assert_fail@plt+0x9828>
   1a73c:	ldr	r0, [fp, #-12]
   1a740:	cmp	r0, #0
   1a744:	bcs	1a7fc <__assert_fail@plt+0x97b0>
   1a748:	b	1a77c <__assert_fail@plt+0x9730>
   1a74c:	ldr	r0, [fp, #-12]
   1a750:	ldr	r2, [fp, #-16]
   1a754:	mvn	r1, #0
   1a758:	mov	r3, #0
   1a75c:	str	r0, [sp, #20]
   1a760:	mov	r0, r1
   1a764:	bl	1b298 <__assert_fail@plt+0xa24c>
   1a768:	ldr	r2, [sp, #20]
   1a76c:	subs	r0, r2, r0
   1a770:	rscs	r1, r1, #0
   1a774:	bcc	1a924 <__assert_fail@plt+0x98d8>
   1a778:	b	1a938 <__assert_fail@plt+0x98ec>
   1a77c:	b	1a790 <__assert_fail@plt+0x9744>
   1a780:	ldr	r0, [fp, #-16]
   1a784:	cmp	r0, #1
   1a788:	bcc	1a7a0 <__assert_fail@plt+0x9754>
   1a78c:	b	1a7b4 <__assert_fail@plt+0x9768>
   1a790:	ldr	r0, [fp, #-16]
   1a794:	movw	r1, #0
   1a798:	cmp	r1, r0
   1a79c:	bcs	1a7b4 <__assert_fail@plt+0x9768>
   1a7a0:	mov	r0, #1
   1a7a4:	mvn	r1, #0
   1a7a8:	str	r1, [sp, #16]
   1a7ac:	str	r0, [sp, #12]
   1a7b0:	b	1a7dc <__assert_fail@plt+0x9790>
   1a7b4:	ldr	r0, [fp, #-16]
   1a7b8:	rsb	r2, r0, #0
   1a7bc:	mvn	r0, #0
   1a7c0:	mov	r3, #0
   1a7c4:	str	r0, [sp, #8]
   1a7c8:	ldr	r1, [sp, #8]
   1a7cc:	bl	1b298 <__assert_fail@plt+0xa24c>
   1a7d0:	str	r0, [sp, #16]
   1a7d4:	str	r1, [sp, #12]
   1a7d8:	b	1a7dc <__assert_fail@plt+0x9790>
   1a7dc:	ldr	r0, [sp, #12]
   1a7e0:	ldr	r1, [sp, #16]
   1a7e4:	ldr	r2, [fp, #-12]
   1a7e8:	mvn	r2, r2
   1a7ec:	subs	r1, r2, r1
   1a7f0:	rscs	r0, r0, #0
   1a7f4:	bcs	1a924 <__assert_fail@plt+0x98d8>
   1a7f8:	b	1a938 <__assert_fail@plt+0x98ec>
   1a7fc:	b	1a804 <__assert_fail@plt+0x97b8>
   1a800:	b	1a808 <__assert_fail@plt+0x97bc>
   1a804:	b	1a858 <__assert_fail@plt+0x980c>
   1a808:	ldr	r0, [fp, #-16]
   1a80c:	cmn	r0, #1
   1a810:	bne	1a858 <__assert_fail@plt+0x980c>
   1a814:	b	1a830 <__assert_fail@plt+0x97e4>
   1a818:	ldr	r0, [fp, #-12]
   1a81c:	add	r0, r0, #0
   1a820:	movw	r1, #0
   1a824:	cmp	r1, r0
   1a828:	bcc	1a924 <__assert_fail@plt+0x98d8>
   1a82c:	b	1a938 <__assert_fail@plt+0x98ec>
   1a830:	ldr	r0, [fp, #-12]
   1a834:	movw	r1, #0
   1a838:	cmp	r1, r0
   1a83c:	bcs	1a938 <__assert_fail@plt+0x98ec>
   1a840:	ldr	r0, [fp, #-12]
   1a844:	sub	r0, r0, #1
   1a848:	mvn	r1, #0
   1a84c:	cmp	r1, r0
   1a850:	bcc	1a924 <__assert_fail@plt+0x98d8>
   1a854:	b	1a938 <__assert_fail@plt+0x98ec>
   1a858:	ldr	r0, [fp, #-16]
   1a85c:	movw	r1, #0
   1a860:	udiv	r0, r1, r0
   1a864:	ldr	r1, [fp, #-12]
   1a868:	cmp	r0, r1
   1a86c:	bcc	1a924 <__assert_fail@plt+0x98d8>
   1a870:	b	1a938 <__assert_fail@plt+0x98ec>
   1a874:	ldr	r0, [fp, #-16]
   1a878:	cmp	r0, #0
   1a87c:	bne	1a884 <__assert_fail@plt+0x9838>
   1a880:	b	1a938 <__assert_fail@plt+0x98ec>
   1a884:	ldr	r0, [fp, #-12]
   1a888:	cmp	r0, #0
   1a88c:	bcs	1a8f8 <__assert_fail@plt+0x98ac>
   1a890:	b	1a898 <__assert_fail@plt+0x984c>
   1a894:	b	1a89c <__assert_fail@plt+0x9850>
   1a898:	b	1a8dc <__assert_fail@plt+0x9890>
   1a89c:	ldr	r0, [fp, #-12]
   1a8a0:	cmn	r0, #1
   1a8a4:	bne	1a8dc <__assert_fail@plt+0x9890>
   1a8a8:	b	1a8c4 <__assert_fail@plt+0x9878>
   1a8ac:	ldr	r0, [fp, #-16]
   1a8b0:	add	r0, r0, #0
   1a8b4:	movw	r1, #0
   1a8b8:	cmp	r1, r0
   1a8bc:	bcc	1a924 <__assert_fail@plt+0x98d8>
   1a8c0:	b	1a938 <__assert_fail@plt+0x98ec>
   1a8c4:	ldr	r0, [fp, #-16]
   1a8c8:	sub	r0, r0, #1
   1a8cc:	mvn	r1, #0
   1a8d0:	cmp	r1, r0
   1a8d4:	bcc	1a924 <__assert_fail@plt+0x98d8>
   1a8d8:	b	1a938 <__assert_fail@plt+0x98ec>
   1a8dc:	ldr	r0, [fp, #-12]
   1a8e0:	movw	r1, #0
   1a8e4:	udiv	r0, r1, r0
   1a8e8:	ldr	r1, [fp, #-16]
   1a8ec:	cmp	r0, r1
   1a8f0:	bcc	1a924 <__assert_fail@plt+0x98d8>
   1a8f4:	b	1a938 <__assert_fail@plt+0x98ec>
   1a8f8:	ldr	r2, [fp, #-16]
   1a8fc:	mvn	r0, #0
   1a900:	mov	r3, #0
   1a904:	str	r0, [sp, #4]
   1a908:	ldr	r1, [sp, #4]
   1a90c:	bl	1b298 <__assert_fail@plt+0xa24c>
   1a910:	ldr	r2, [fp, #-12]
   1a914:	subs	r0, r0, r2
   1a918:	sbcs	r1, r1, #0
   1a91c:	bcs	1a938 <__assert_fail@plt+0x98ec>
   1a920:	b	1a924 <__assert_fail@plt+0x98d8>
   1a924:	ldr	r0, [fp, #-12]
   1a928:	ldr	r1, [fp, #-16]
   1a92c:	mul	r0, r0, r1
   1a930:	str	r0, [fp, #-20]	; 0xffffffec
   1a934:	b	1a94c <__assert_fail@plt+0x9900>
   1a938:	ldr	r0, [fp, #-12]
   1a93c:	ldr	r1, [fp, #-16]
   1a940:	mul	r0, r0, r1
   1a944:	str	r0, [fp, #-20]	; 0xffffffec
   1a948:	b	1a964 <__assert_fail@plt+0x9918>
   1a94c:	bl	10f80 <__errno_location@plt>
   1a950:	movw	r1, #12
   1a954:	str	r1, [r0]
   1a958:	movw	r0, #0
   1a95c:	str	r0, [fp, #-4]
   1a960:	b	1a974 <__assert_fail@plt+0x9928>
   1a964:	ldr	r0, [fp, #-8]
   1a968:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a96c:	bl	19140 <__assert_fail@plt+0x80f4>
   1a970:	str	r0, [fp, #-4]
   1a974:	ldr	r0, [fp, #-4]
   1a978:	mov	sp, fp
   1a97c:	pop	{fp, pc}
   1a980:	svcvc	0x00ffffff
   1a984:	andhi	r0, r0, r0
   1a988:			; <UNDEFINED> instruction: 0xffff8000
   1a98c:	sub	sp, sp, #12
   1a990:	str	r0, [sp, #4]
   1a994:	ldr	r0, [sp, #4]
   1a998:	sub	r1, r0, #48	; 0x30
   1a99c:	cmp	r1, #10
   1a9a0:	str	r0, [sp]
   1a9a4:	bcc	1a9d4 <__assert_fail@plt+0x9988>
   1a9a8:	b	1a9ac <__assert_fail@plt+0x9960>
   1a9ac:	ldr	r0, [sp]
   1a9b0:	sub	r1, r0, #65	; 0x41
   1a9b4:	cmp	r1, #26
   1a9b8:	bcc	1a9d4 <__assert_fail@plt+0x9988>
   1a9bc:	b	1a9c0 <__assert_fail@plt+0x9974>
   1a9c0:	ldr	r0, [sp]
   1a9c4:	sub	r1, r0, #97	; 0x61
   1a9c8:	cmp	r1, #25
   1a9cc:	bhi	1a9e4 <__assert_fail@plt+0x9998>
   1a9d0:	b	1a9d4 <__assert_fail@plt+0x9988>
   1a9d4:	movw	r0, #1
   1a9d8:	and	r0, r0, #1
   1a9dc:	strb	r0, [sp, #11]
   1a9e0:	b	1a9f0 <__assert_fail@plt+0x99a4>
   1a9e4:	movw	r0, #0
   1a9e8:	and	r0, r0, #1
   1a9ec:	strb	r0, [sp, #11]
   1a9f0:	ldrb	r0, [sp, #11]
   1a9f4:	and	r0, r0, #1
   1a9f8:	add	sp, sp, #12
   1a9fc:	bx	lr
   1aa00:	sub	sp, sp, #12
   1aa04:	str	r0, [sp, #4]
   1aa08:	ldr	r0, [sp, #4]
   1aa0c:	sub	r1, r0, #65	; 0x41
   1aa10:	cmp	r1, #26
   1aa14:	str	r0, [sp]
   1aa18:	bcc	1aa34 <__assert_fail@plt+0x99e8>
   1aa1c:	b	1aa20 <__assert_fail@plt+0x99d4>
   1aa20:	ldr	r0, [sp]
   1aa24:	sub	r1, r0, #97	; 0x61
   1aa28:	cmp	r1, #25
   1aa2c:	bhi	1aa44 <__assert_fail@plt+0x99f8>
   1aa30:	b	1aa34 <__assert_fail@plt+0x99e8>
   1aa34:	movw	r0, #1
   1aa38:	and	r0, r0, #1
   1aa3c:	strb	r0, [sp, #11]
   1aa40:	b	1aa50 <__assert_fail@plt+0x9a04>
   1aa44:	movw	r0, #0
   1aa48:	and	r0, r0, #1
   1aa4c:	strb	r0, [sp, #11]
   1aa50:	ldrb	r0, [sp, #11]
   1aa54:	and	r0, r0, #1
   1aa58:	add	sp, sp, #12
   1aa5c:	bx	lr
   1aa60:	sub	sp, sp, #8
   1aa64:	str	r0, [sp]
   1aa68:	ldr	r0, [sp]
   1aa6c:	cmp	r0, #127	; 0x7f
   1aa70:	bhi	1aa88 <__assert_fail@plt+0x9a3c>
   1aa74:	b	1aa78 <__assert_fail@plt+0x9a2c>
   1aa78:	movw	r0, #1
   1aa7c:	and	r0, r0, #1
   1aa80:	strb	r0, [sp, #7]
   1aa84:	b	1aa94 <__assert_fail@plt+0x9a48>
   1aa88:	movw	r0, #0
   1aa8c:	and	r0, r0, #1
   1aa90:	strb	r0, [sp, #7]
   1aa94:	ldrb	r0, [sp, #7]
   1aa98:	and	r0, r0, #1
   1aa9c:	add	sp, sp, #8
   1aaa0:	bx	lr
   1aaa4:	sub	sp, sp, #8
   1aaa8:	str	r0, [sp, #4]
   1aaac:	ldr	r0, [sp, #4]
   1aab0:	cmp	r0, #32
   1aab4:	movw	r0, #1
   1aab8:	str	r0, [sp]
   1aabc:	beq	1aad4 <__assert_fail@plt+0x9a88>
   1aac0:	ldr	r0, [sp, #4]
   1aac4:	cmp	r0, #9
   1aac8:	movw	r0, #0
   1aacc:	moveq	r0, #1
   1aad0:	str	r0, [sp]
   1aad4:	ldr	r0, [sp]
   1aad8:	and	r0, r0, #1
   1aadc:	add	sp, sp, #8
   1aae0:	bx	lr
   1aae4:	sub	sp, sp, #12
   1aae8:	str	r0, [sp, #4]
   1aaec:	ldr	r0, [sp, #4]
   1aaf0:	cmp	r0, #32
   1aaf4:	str	r0, [sp]
   1aaf8:	bcc	1ab10 <__assert_fail@plt+0x9ac4>
   1aafc:	b	1ab00 <__assert_fail@plt+0x9ab4>
   1ab00:	ldr	r0, [sp]
   1ab04:	cmp	r0, #127	; 0x7f
   1ab08:	bne	1ab20 <__assert_fail@plt+0x9ad4>
   1ab0c:	b	1ab10 <__assert_fail@plt+0x9ac4>
   1ab10:	movw	r0, #1
   1ab14:	and	r0, r0, #1
   1ab18:	strb	r0, [sp, #11]
   1ab1c:	b	1ab2c <__assert_fail@plt+0x9ae0>
   1ab20:	movw	r0, #0
   1ab24:	and	r0, r0, #1
   1ab28:	strb	r0, [sp, #11]
   1ab2c:	ldrb	r0, [sp, #11]
   1ab30:	and	r0, r0, #1
   1ab34:	add	sp, sp, #12
   1ab38:	bx	lr
   1ab3c:	sub	sp, sp, #8
   1ab40:	str	r0, [sp]
   1ab44:	ldr	r0, [sp]
   1ab48:	sub	r0, r0, #48	; 0x30
   1ab4c:	cmp	r0, #9
   1ab50:	bhi	1ab68 <__assert_fail@plt+0x9b1c>
   1ab54:	b	1ab58 <__assert_fail@plt+0x9b0c>
   1ab58:	movw	r0, #1
   1ab5c:	and	r0, r0, #1
   1ab60:	strb	r0, [sp, #7]
   1ab64:	b	1ab74 <__assert_fail@plt+0x9b28>
   1ab68:	movw	r0, #0
   1ab6c:	and	r0, r0, #1
   1ab70:	strb	r0, [sp, #7]
   1ab74:	ldrb	r0, [sp, #7]
   1ab78:	and	r0, r0, #1
   1ab7c:	add	sp, sp, #8
   1ab80:	bx	lr
   1ab84:	sub	sp, sp, #8
   1ab88:	str	r0, [sp]
   1ab8c:	ldr	r0, [sp]
   1ab90:	sub	r0, r0, #33	; 0x21
   1ab94:	cmp	r0, #93	; 0x5d
   1ab98:	bhi	1abb0 <__assert_fail@plt+0x9b64>
   1ab9c:	b	1aba0 <__assert_fail@plt+0x9b54>
   1aba0:	movw	r0, #1
   1aba4:	and	r0, r0, #1
   1aba8:	strb	r0, [sp, #7]
   1abac:	b	1abbc <__assert_fail@plt+0x9b70>
   1abb0:	movw	r0, #0
   1abb4:	and	r0, r0, #1
   1abb8:	strb	r0, [sp, #7]
   1abbc:	ldrb	r0, [sp, #7]
   1abc0:	and	r0, r0, #1
   1abc4:	add	sp, sp, #8
   1abc8:	bx	lr
   1abcc:	sub	sp, sp, #8
   1abd0:	str	r0, [sp]
   1abd4:	ldr	r0, [sp]
   1abd8:	sub	r0, r0, #97	; 0x61
   1abdc:	cmp	r0, #25
   1abe0:	bhi	1abf8 <__assert_fail@plt+0x9bac>
   1abe4:	b	1abe8 <__assert_fail@plt+0x9b9c>
   1abe8:	movw	r0, #1
   1abec:	and	r0, r0, #1
   1abf0:	strb	r0, [sp, #7]
   1abf4:	b	1ac04 <__assert_fail@plt+0x9bb8>
   1abf8:	movw	r0, #0
   1abfc:	and	r0, r0, #1
   1ac00:	strb	r0, [sp, #7]
   1ac04:	ldrb	r0, [sp, #7]
   1ac08:	and	r0, r0, #1
   1ac0c:	add	sp, sp, #8
   1ac10:	bx	lr
   1ac14:	sub	sp, sp, #8
   1ac18:	str	r0, [sp]
   1ac1c:	ldr	r0, [sp]
   1ac20:	sub	r0, r0, #32
   1ac24:	cmp	r0, #94	; 0x5e
   1ac28:	bhi	1ac40 <__assert_fail@plt+0x9bf4>
   1ac2c:	b	1ac30 <__assert_fail@plt+0x9be4>
   1ac30:	movw	r0, #1
   1ac34:	and	r0, r0, #1
   1ac38:	strb	r0, [sp, #7]
   1ac3c:	b	1ac4c <__assert_fail@plt+0x9c00>
   1ac40:	movw	r0, #0
   1ac44:	and	r0, r0, #1
   1ac48:	strb	r0, [sp, #7]
   1ac4c:	ldrb	r0, [sp, #7]
   1ac50:	and	r0, r0, #1
   1ac54:	add	sp, sp, #8
   1ac58:	bx	lr
   1ac5c:	sub	sp, sp, #12
   1ac60:	str	r0, [sp, #4]
   1ac64:	ldr	r0, [sp, #4]
   1ac68:	sub	r0, r0, #33	; 0x21
   1ac6c:	cmp	r0, #93	; 0x5d
   1ac70:	str	r0, [sp]
   1ac74:	bhi	1ae10 <__assert_fail@plt+0x9dc4>
   1ac78:	add	r0, pc, #8
   1ac7c:	ldr	r1, [sp]
   1ac80:	ldr	r0, [r0, r1, lsl #2]
   1ac84:	mov	pc, r0
   1ac88:	andeq	sl, r1, r0, lsl #28
   1ac8c:	andeq	sl, r1, r0, lsl #28
   1ac90:	andeq	sl, r1, r0, lsl #28
   1ac94:	andeq	sl, r1, r0, lsl #28
   1ac98:	andeq	sl, r1, r0, lsl #28
   1ac9c:	andeq	sl, r1, r0, lsl #28
   1aca0:	andeq	sl, r1, r0, lsl #28
   1aca4:	andeq	sl, r1, r0, lsl #28
   1aca8:	andeq	sl, r1, r0, lsl #28
   1acac:	andeq	sl, r1, r0, lsl #28
   1acb0:	andeq	sl, r1, r0, lsl #28
   1acb4:	andeq	sl, r1, r0, lsl #28
   1acb8:	andeq	sl, r1, r0, lsl #28
   1acbc:	andeq	sl, r1, r0, lsl #28
   1acc0:	andeq	sl, r1, r0, lsl #28
   1acc4:	andeq	sl, r1, r0, lsl lr
   1acc8:	andeq	sl, r1, r0, lsl lr
   1accc:	andeq	sl, r1, r0, lsl lr
   1acd0:	andeq	sl, r1, r0, lsl lr
   1acd4:	andeq	sl, r1, r0, lsl lr
   1acd8:	andeq	sl, r1, r0, lsl lr
   1acdc:	andeq	sl, r1, r0, lsl lr
   1ace0:	andeq	sl, r1, r0, lsl lr
   1ace4:	andeq	sl, r1, r0, lsl lr
   1ace8:	andeq	sl, r1, r0, lsl lr
   1acec:	andeq	sl, r1, r0, lsl #28
   1acf0:	andeq	sl, r1, r0, lsl #28
   1acf4:	andeq	sl, r1, r0, lsl #28
   1acf8:	andeq	sl, r1, r0, lsl #28
   1acfc:	andeq	sl, r1, r0, lsl #28
   1ad00:	andeq	sl, r1, r0, lsl #28
   1ad04:	andeq	sl, r1, r0, lsl #28
   1ad08:	andeq	sl, r1, r0, lsl lr
   1ad0c:	andeq	sl, r1, r0, lsl lr
   1ad10:	andeq	sl, r1, r0, lsl lr
   1ad14:	andeq	sl, r1, r0, lsl lr
   1ad18:	andeq	sl, r1, r0, lsl lr
   1ad1c:	andeq	sl, r1, r0, lsl lr
   1ad20:	andeq	sl, r1, r0, lsl lr
   1ad24:	andeq	sl, r1, r0, lsl lr
   1ad28:	andeq	sl, r1, r0, lsl lr
   1ad2c:	andeq	sl, r1, r0, lsl lr
   1ad30:	andeq	sl, r1, r0, lsl lr
   1ad34:	andeq	sl, r1, r0, lsl lr
   1ad38:	andeq	sl, r1, r0, lsl lr
   1ad3c:	andeq	sl, r1, r0, lsl lr
   1ad40:	andeq	sl, r1, r0, lsl lr
   1ad44:	andeq	sl, r1, r0, lsl lr
   1ad48:	andeq	sl, r1, r0, lsl lr
   1ad4c:	andeq	sl, r1, r0, lsl lr
   1ad50:	andeq	sl, r1, r0, lsl lr
   1ad54:	andeq	sl, r1, r0, lsl lr
   1ad58:	andeq	sl, r1, r0, lsl lr
   1ad5c:	andeq	sl, r1, r0, lsl lr
   1ad60:	andeq	sl, r1, r0, lsl lr
   1ad64:	andeq	sl, r1, r0, lsl lr
   1ad68:	andeq	sl, r1, r0, lsl lr
   1ad6c:	andeq	sl, r1, r0, lsl lr
   1ad70:	andeq	sl, r1, r0, lsl #28
   1ad74:	andeq	sl, r1, r0, lsl #28
   1ad78:	andeq	sl, r1, r0, lsl #28
   1ad7c:	andeq	sl, r1, r0, lsl #28
   1ad80:	andeq	sl, r1, r0, lsl #28
   1ad84:	andeq	sl, r1, r0, lsl #28
   1ad88:	andeq	sl, r1, r0, lsl lr
   1ad8c:	andeq	sl, r1, r0, lsl lr
   1ad90:	andeq	sl, r1, r0, lsl lr
   1ad94:	andeq	sl, r1, r0, lsl lr
   1ad98:	andeq	sl, r1, r0, lsl lr
   1ad9c:	andeq	sl, r1, r0, lsl lr
   1ada0:	andeq	sl, r1, r0, lsl lr
   1ada4:	andeq	sl, r1, r0, lsl lr
   1ada8:	andeq	sl, r1, r0, lsl lr
   1adac:	andeq	sl, r1, r0, lsl lr
   1adb0:	andeq	sl, r1, r0, lsl lr
   1adb4:	andeq	sl, r1, r0, lsl lr
   1adb8:	andeq	sl, r1, r0, lsl lr
   1adbc:	andeq	sl, r1, r0, lsl lr
   1adc0:	andeq	sl, r1, r0, lsl lr
   1adc4:	andeq	sl, r1, r0, lsl lr
   1adc8:	andeq	sl, r1, r0, lsl lr
   1adcc:	andeq	sl, r1, r0, lsl lr
   1add0:	andeq	sl, r1, r0, lsl lr
   1add4:	andeq	sl, r1, r0, lsl lr
   1add8:	andeq	sl, r1, r0, lsl lr
   1addc:	andeq	sl, r1, r0, lsl lr
   1ade0:	andeq	sl, r1, r0, lsl lr
   1ade4:	andeq	sl, r1, r0, lsl lr
   1ade8:	andeq	sl, r1, r0, lsl lr
   1adec:	andeq	sl, r1, r0, lsl lr
   1adf0:	andeq	sl, r1, r0, lsl #28
   1adf4:	andeq	sl, r1, r0, lsl #28
   1adf8:	andeq	sl, r1, r0, lsl #28
   1adfc:	andeq	sl, r1, r0, lsl #28
   1ae00:	movw	r0, #1
   1ae04:	and	r0, r0, #1
   1ae08:	strb	r0, [sp, #11]
   1ae0c:	b	1ae1c <__assert_fail@plt+0x9dd0>
   1ae10:	movw	r0, #0
   1ae14:	and	r0, r0, #1
   1ae18:	strb	r0, [sp, #11]
   1ae1c:	ldrb	r0, [sp, #11]
   1ae20:	and	r0, r0, #1
   1ae24:	add	sp, sp, #12
   1ae28:	bx	lr
   1ae2c:	sub	sp, sp, #12
   1ae30:	str	r0, [sp, #4]
   1ae34:	ldr	r0, [sp, #4]
   1ae38:	sub	r1, r0, #9
   1ae3c:	cmp	r1, #5
   1ae40:	str	r0, [sp]
   1ae44:	bcc	1ae5c <__assert_fail@plt+0x9e10>
   1ae48:	b	1ae4c <__assert_fail@plt+0x9e00>
   1ae4c:	ldr	r0, [sp]
   1ae50:	cmp	r0, #32
   1ae54:	bne	1ae6c <__assert_fail@plt+0x9e20>
   1ae58:	b	1ae5c <__assert_fail@plt+0x9e10>
   1ae5c:	movw	r0, #1
   1ae60:	and	r0, r0, #1
   1ae64:	strb	r0, [sp, #11]
   1ae68:	b	1ae78 <__assert_fail@plt+0x9e2c>
   1ae6c:	movw	r0, #0
   1ae70:	and	r0, r0, #1
   1ae74:	strb	r0, [sp, #11]
   1ae78:	ldrb	r0, [sp, #11]
   1ae7c:	and	r0, r0, #1
   1ae80:	add	sp, sp, #12
   1ae84:	bx	lr
   1ae88:	sub	sp, sp, #8
   1ae8c:	str	r0, [sp]
   1ae90:	ldr	r0, [sp]
   1ae94:	sub	r0, r0, #65	; 0x41
   1ae98:	cmp	r0, #25
   1ae9c:	bhi	1aeb4 <__assert_fail@plt+0x9e68>
   1aea0:	b	1aea4 <__assert_fail@plt+0x9e58>
   1aea4:	movw	r0, #1
   1aea8:	and	r0, r0, #1
   1aeac:	strb	r0, [sp, #7]
   1aeb0:	b	1aec0 <__assert_fail@plt+0x9e74>
   1aeb4:	movw	r0, #0
   1aeb8:	and	r0, r0, #1
   1aebc:	strb	r0, [sp, #7]
   1aec0:	ldrb	r0, [sp, #7]
   1aec4:	and	r0, r0, #1
   1aec8:	add	sp, sp, #8
   1aecc:	bx	lr
   1aed0:	sub	sp, sp, #12
   1aed4:	str	r0, [sp, #4]
   1aed8:	ldr	r0, [sp, #4]
   1aedc:	sub	r1, r0, #48	; 0x30
   1aee0:	cmp	r1, #10
   1aee4:	str	r0, [sp]
   1aee8:	bcc	1af18 <__assert_fail@plt+0x9ecc>
   1aeec:	b	1aef0 <__assert_fail@plt+0x9ea4>
   1aef0:	ldr	r0, [sp]
   1aef4:	sub	r1, r0, #65	; 0x41
   1aef8:	cmp	r1, #6
   1aefc:	bcc	1af18 <__assert_fail@plt+0x9ecc>
   1af00:	b	1af04 <__assert_fail@plt+0x9eb8>
   1af04:	ldr	r0, [sp]
   1af08:	sub	r1, r0, #97	; 0x61
   1af0c:	cmp	r1, #5
   1af10:	bhi	1af28 <__assert_fail@plt+0x9edc>
   1af14:	b	1af18 <__assert_fail@plt+0x9ecc>
   1af18:	movw	r0, #1
   1af1c:	and	r0, r0, #1
   1af20:	strb	r0, [sp, #11]
   1af24:	b	1af34 <__assert_fail@plt+0x9ee8>
   1af28:	movw	r0, #0
   1af2c:	and	r0, r0, #1
   1af30:	strb	r0, [sp, #11]
   1af34:	ldrb	r0, [sp, #11]
   1af38:	and	r0, r0, #1
   1af3c:	add	sp, sp, #12
   1af40:	bx	lr
   1af44:	sub	sp, sp, #8
   1af48:	str	r0, [sp]
   1af4c:	ldr	r0, [sp]
   1af50:	sub	r0, r0, #65	; 0x41
   1af54:	cmp	r0, #25
   1af58:	bhi	1af74 <__assert_fail@plt+0x9f28>
   1af5c:	b	1af60 <__assert_fail@plt+0x9f14>
   1af60:	ldr	r0, [sp]
   1af64:	sub	r0, r0, #65	; 0x41
   1af68:	add	r0, r0, #97	; 0x61
   1af6c:	str	r0, [sp, #4]
   1af70:	b	1af7c <__assert_fail@plt+0x9f30>
   1af74:	ldr	r0, [sp]
   1af78:	str	r0, [sp, #4]
   1af7c:	ldr	r0, [sp, #4]
   1af80:	add	sp, sp, #8
   1af84:	bx	lr
   1af88:	sub	sp, sp, #8
   1af8c:	str	r0, [sp]
   1af90:	ldr	r0, [sp]
   1af94:	sub	r0, r0, #97	; 0x61
   1af98:	cmp	r0, #25
   1af9c:	bhi	1afb8 <__assert_fail@plt+0x9f6c>
   1afa0:	b	1afa4 <__assert_fail@plt+0x9f58>
   1afa4:	ldr	r0, [sp]
   1afa8:	sub	r0, r0, #97	; 0x61
   1afac:	add	r0, r0, #65	; 0x41
   1afb0:	str	r0, [sp, #4]
   1afb4:	b	1afc0 <__assert_fail@plt+0x9f74>
   1afb8:	ldr	r0, [sp]
   1afbc:	str	r0, [sp, #4]
   1afc0:	ldr	r0, [sp, #4]
   1afc4:	add	sp, sp, #8
   1afc8:	bx	lr
   1afcc:	push	{r4, r5, fp, lr}
   1afd0:	add	fp, sp, #8
   1afd4:	sub	sp, sp, #272	; 0x110
   1afd8:	add	r1, sp, #7
   1afdc:	str	r0, [fp, #-16]
   1afe0:	ldr	r0, [fp, #-16]
   1afe4:	movw	r2, #257	; 0x101
   1afe8:	bl	1b068 <__assert_fail@plt+0xa01c>
   1afec:	cmp	r0, #0
   1aff0:	beq	1b004 <__assert_fail@plt+0x9fb8>
   1aff4:	movw	r0, #0
   1aff8:	and	r0, r0, #1
   1affc:	strb	r0, [fp, #-9]
   1b000:	b	1b058 <__assert_fail@plt+0xa00c>
   1b004:	add	r0, sp, #7
   1b008:	movw	r1, #49403	; 0xc0fb
   1b00c:	movt	r1, #1
   1b010:	bl	10e18 <strcmp@plt>
   1b014:	cmp	r0, #0
   1b018:	movw	r0, #1
   1b01c:	str	r0, [sp]
   1b020:	beq	1b044 <__assert_fail@plt+0x9ff8>
   1b024:	add	r0, sp, #7
   1b028:	movw	r1, #49405	; 0xc0fd
   1b02c:	movt	r1, #1
   1b030:	bl	10e18 <strcmp@plt>
   1b034:	cmp	r0, #0
   1b038:	movw	r0, #0
   1b03c:	moveq	r0, #1
   1b040:	str	r0, [sp]
   1b044:	ldr	r0, [sp]
   1b048:	mvn	r1, #0
   1b04c:	eor	r0, r0, r1
   1b050:	and	r0, r0, #1
   1b054:	strb	r0, [fp, #-9]
   1b058:	ldrb	r0, [fp, #-9]
   1b05c:	and	r0, r0, #1
   1b060:	sub	sp, fp, #8
   1b064:	pop	{r4, r5, fp, pc}
   1b068:	push	{fp, lr}
   1b06c:	mov	fp, sp
   1b070:	sub	sp, sp, #16
   1b074:	str	r0, [fp, #-4]
   1b078:	str	r1, [sp, #8]
   1b07c:	str	r2, [sp, #4]
   1b080:	ldr	r0, [fp, #-4]
   1b084:	ldr	r1, [sp, #8]
   1b088:	ldr	r2, [sp, #4]
   1b08c:	bl	1b098 <__assert_fail@plt+0xa04c>
   1b090:	mov	sp, fp
   1b094:	pop	{fp, pc}
   1b098:	push	{fp, lr}
   1b09c:	mov	fp, sp
   1b0a0:	sub	sp, sp, #24
   1b0a4:	str	r0, [fp, #-8]
   1b0a8:	str	r1, [sp, #12]
   1b0ac:	str	r2, [sp, #8]
   1b0b0:	ldr	r0, [fp, #-8]
   1b0b4:	bl	1b198 <__assert_fail@plt+0xa14c>
   1b0b8:	str	r0, [sp, #4]
   1b0bc:	ldr	r0, [sp, #4]
   1b0c0:	movw	r1, #0
   1b0c4:	cmp	r0, r1
   1b0c8:	bne	1b0f0 <__assert_fail@plt+0xa0a4>
   1b0cc:	ldr	r0, [sp, #8]
   1b0d0:	cmp	r0, #0
   1b0d4:	bls	1b0e4 <__assert_fail@plt+0xa098>
   1b0d8:	ldr	r0, [sp, #12]
   1b0dc:	movw	r1, #0
   1b0e0:	strb	r1, [r0]
   1b0e4:	movw	r0, #22
   1b0e8:	str	r0, [fp, #-4]
   1b0ec:	b	1b16c <__assert_fail@plt+0xa120>
   1b0f0:	ldr	r0, [sp, #4]
   1b0f4:	bl	10f68 <strlen@plt>
   1b0f8:	str	r0, [sp]
   1b0fc:	ldr	r0, [sp]
   1b100:	ldr	r1, [sp, #8]
   1b104:	cmp	r0, r1
   1b108:	bcs	1b12c <__assert_fail@plt+0xa0e0>
   1b10c:	ldr	r0, [sp, #12]
   1b110:	ldr	r1, [sp, #4]
   1b114:	ldr	r2, [sp]
   1b118:	add	r2, r2, #1
   1b11c:	bl	10e60 <memcpy@plt>
   1b120:	movw	r0, #0
   1b124:	str	r0, [fp, #-4]
   1b128:	b	1b16c <__assert_fail@plt+0xa120>
   1b12c:	ldr	r0, [sp, #8]
   1b130:	cmp	r0, #0
   1b134:	bls	1b164 <__assert_fail@plt+0xa118>
   1b138:	ldr	r0, [sp, #12]
   1b13c:	ldr	r1, [sp, #4]
   1b140:	ldr	r2, [sp, #8]
   1b144:	sub	r2, r2, #1
   1b148:	bl	10e60 <memcpy@plt>
   1b14c:	ldr	r0, [sp, #12]
   1b150:	ldr	r1, [sp, #8]
   1b154:	sub	r1, r1, #1
   1b158:	add	r0, r0, r1
   1b15c:	movw	r1, #0
   1b160:	strb	r1, [r0]
   1b164:	movw	r0, #34	; 0x22
   1b168:	str	r0, [fp, #-4]
   1b16c:	ldr	r0, [fp, #-4]
   1b170:	mov	sp, fp
   1b174:	pop	{fp, pc}
   1b178:	push	{fp, lr}
   1b17c:	mov	fp, sp
   1b180:	sub	sp, sp, #8
   1b184:	str	r0, [sp, #4]
   1b188:	ldr	r0, [sp, #4]
   1b18c:	bl	1b198 <__assert_fail@plt+0xa14c>
   1b190:	mov	sp, fp
   1b194:	pop	{fp, pc}
   1b198:	push	{fp, lr}
   1b19c:	mov	fp, sp
   1b1a0:	sub	sp, sp, #8
   1b1a4:	str	r0, [sp, #4]
   1b1a8:	ldr	r0, [sp, #4]
   1b1ac:	movw	r1, #0
   1b1b0:	bl	10fc8 <setlocale@plt>
   1b1b4:	str	r0, [sp]
   1b1b8:	ldr	r0, [sp]
   1b1bc:	mov	sp, fp
   1b1c0:	pop	{fp, pc}
   1b1c4:	cmp	r3, #0
   1b1c8:	cmpeq	r2, #0
   1b1cc:	bne	1b1f0 <__assert_fail@plt+0xa1a4>
   1b1d0:	cmp	r1, #0
   1b1d4:	movlt	r1, #-2147483648	; 0x80000000
   1b1d8:	movlt	r0, #0
   1b1dc:	blt	1b1ec <__assert_fail@plt+0xa1a0>
   1b1e0:	cmpeq	r0, #0
   1b1e4:	mvnne	r1, #-2147483648	; 0x80000000
   1b1e8:	mvnne	r0, #0
   1b1ec:	b	1b2d4 <__assert_fail@plt+0xa288>
   1b1f0:	sub	sp, sp, #8
   1b1f4:	push	{sp, lr}
   1b1f8:	cmp	r1, #0
   1b1fc:	blt	1b21c <__assert_fail@plt+0xa1d0>
   1b200:	cmp	r3, #0
   1b204:	blt	1b250 <__assert_fail@plt+0xa204>
   1b208:	bl	1b2e4 <__assert_fail@plt+0xa298>
   1b20c:	ldr	lr, [sp, #4]
   1b210:	add	sp, sp, #8
   1b214:	pop	{r2, r3}
   1b218:	bx	lr
   1b21c:	rsbs	r0, r0, #0
   1b220:	sbc	r1, r1, r1, lsl #1
   1b224:	cmp	r3, #0
   1b228:	blt	1b274 <__assert_fail@plt+0xa228>
   1b22c:	bl	1b2e4 <__assert_fail@plt+0xa298>
   1b230:	ldr	lr, [sp, #4]
   1b234:	add	sp, sp, #8
   1b238:	pop	{r2, r3}
   1b23c:	rsbs	r0, r0, #0
   1b240:	sbc	r1, r1, r1, lsl #1
   1b244:	rsbs	r2, r2, #0
   1b248:	sbc	r3, r3, r3, lsl #1
   1b24c:	bx	lr
   1b250:	rsbs	r2, r2, #0
   1b254:	sbc	r3, r3, r3, lsl #1
   1b258:	bl	1b2e4 <__assert_fail@plt+0xa298>
   1b25c:	ldr	lr, [sp, #4]
   1b260:	add	sp, sp, #8
   1b264:	pop	{r2, r3}
   1b268:	rsbs	r0, r0, #0
   1b26c:	sbc	r1, r1, r1, lsl #1
   1b270:	bx	lr
   1b274:	rsbs	r2, r2, #0
   1b278:	sbc	r3, r3, r3, lsl #1
   1b27c:	bl	1b2e4 <__assert_fail@plt+0xa298>
   1b280:	ldr	lr, [sp, #4]
   1b284:	add	sp, sp, #8
   1b288:	pop	{r2, r3}
   1b28c:	rsbs	r2, r2, #0
   1b290:	sbc	r3, r3, r3, lsl #1
   1b294:	bx	lr
   1b298:	cmp	r3, #0
   1b29c:	cmpeq	r2, #0
   1b2a0:	bne	1b2b8 <__assert_fail@plt+0xa26c>
   1b2a4:	cmp	r1, #0
   1b2a8:	cmpeq	r0, #0
   1b2ac:	mvnne	r1, #0
   1b2b0:	mvnne	r0, #0
   1b2b4:	b	1b2d4 <__assert_fail@plt+0xa288>
   1b2b8:	sub	sp, sp, #8
   1b2bc:	push	{sp, lr}
   1b2c0:	bl	1b2e4 <__assert_fail@plt+0xa298>
   1b2c4:	ldr	lr, [sp, #4]
   1b2c8:	add	sp, sp, #8
   1b2cc:	pop	{r2, r3}
   1b2d0:	bx	lr
   1b2d4:	push	{r1, lr}
   1b2d8:	mov	r0, #8
   1b2dc:	bl	10e0c <raise@plt>
   1b2e0:	pop	{r1, pc}
   1b2e4:	cmp	r1, r3
   1b2e8:	cmpeq	r0, r2
   1b2ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b2f0:	mov	r4, r0
   1b2f4:	movcc	r0, #0
   1b2f8:	mov	r5, r1
   1b2fc:	ldr	lr, [sp, #36]	; 0x24
   1b300:	movcc	r1, r0
   1b304:	bcc	1b400 <__assert_fail@plt+0xa3b4>
   1b308:	cmp	r3, #0
   1b30c:	clzeq	ip, r2
   1b310:	clzne	ip, r3
   1b314:	addeq	ip, ip, #32
   1b318:	cmp	r5, #0
   1b31c:	clzeq	r1, r4
   1b320:	addeq	r1, r1, #32
   1b324:	clzne	r1, r5
   1b328:	sub	ip, ip, r1
   1b32c:	sub	sl, ip, #32
   1b330:	lsl	r9, r3, ip
   1b334:	rsb	fp, ip, #32
   1b338:	orr	r9, r9, r2, lsl sl
   1b33c:	orr	r9, r9, r2, lsr fp
   1b340:	lsl	r8, r2, ip
   1b344:	cmp	r5, r9
   1b348:	cmpeq	r4, r8
   1b34c:	movcc	r0, #0
   1b350:	movcc	r1, r0
   1b354:	bcc	1b370 <__assert_fail@plt+0xa324>
   1b358:	mov	r0, #1
   1b35c:	subs	r4, r4, r8
   1b360:	lsl	r1, r0, sl
   1b364:	orr	r1, r1, r0, lsr fp
   1b368:	lsl	r0, r0, ip
   1b36c:	sbc	r5, r5, r9
   1b370:	cmp	ip, #0
   1b374:	beq	1b400 <__assert_fail@plt+0xa3b4>
   1b378:	lsr	r6, r8, #1
   1b37c:	orr	r6, r6, r9, lsl #31
   1b380:	lsr	r7, r9, #1
   1b384:	mov	r2, ip
   1b388:	b	1b3ac <__assert_fail@plt+0xa360>
   1b38c:	subs	r3, r4, r6
   1b390:	sbc	r8, r5, r7
   1b394:	adds	r3, r3, r3
   1b398:	adc	r8, r8, r8
   1b39c:	adds	r4, r3, #1
   1b3a0:	adc	r5, r8, #0
   1b3a4:	subs	r2, r2, #1
   1b3a8:	beq	1b3c8 <__assert_fail@plt+0xa37c>
   1b3ac:	cmp	r5, r7
   1b3b0:	cmpeq	r4, r6
   1b3b4:	bcs	1b38c <__assert_fail@plt+0xa340>
   1b3b8:	adds	r4, r4, r4
   1b3bc:	adc	r5, r5, r5
   1b3c0:	subs	r2, r2, #1
   1b3c4:	bne	1b3ac <__assert_fail@plt+0xa360>
   1b3c8:	lsr	r3, r4, ip
   1b3cc:	orr	r3, r3, r5, lsl fp
   1b3d0:	lsr	r2, r5, ip
   1b3d4:	orr	r3, r3, r5, lsr sl
   1b3d8:	adds	r0, r0, r4
   1b3dc:	mov	r4, r3
   1b3e0:	lsl	r3, r2, ip
   1b3e4:	orr	r3, r3, r4, lsl sl
   1b3e8:	lsl	ip, r4, ip
   1b3ec:	orr	r3, r3, r4, lsr fp
   1b3f0:	adc	r1, r1, r5
   1b3f4:	subs	r0, r0, ip
   1b3f8:	mov	r5, r2
   1b3fc:	sbc	r1, r1, r3
   1b400:	cmp	lr, #0
   1b404:	strdne	r4, [lr]
   1b408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b40c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b410:	mov	r7, r0
   1b414:	ldr	r6, [pc, #72]	; 1b464 <__assert_fail@plt+0xa418>
   1b418:	ldr	r5, [pc, #72]	; 1b468 <__assert_fail@plt+0xa41c>
   1b41c:	add	r6, pc, r6
   1b420:	add	r5, pc, r5
   1b424:	sub	r6, r6, r5
   1b428:	mov	r8, r1
   1b42c:	mov	r9, r2
   1b430:	bl	10dd4 <calloc@plt-0x20>
   1b434:	asrs	r6, r6, #2
   1b438:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b43c:	mov	r4, #0
   1b440:	add	r4, r4, #1
   1b444:	ldr	r3, [r5], #4
   1b448:	mov	r2, r9
   1b44c:	mov	r1, r8
   1b450:	mov	r0, r7
   1b454:	blx	r3
   1b458:	cmp	r6, r4
   1b45c:	bne	1b440 <__assert_fail@plt+0xa3f4>
   1b460:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b464:	andeq	r1, r1, r8, ror #21
   1b468:	andeq	r1, r1, r0, ror #21
   1b46c:	bx	lr
   1b470:	ldr	r3, [pc, #12]	; 1b484 <__assert_fail@plt+0xa438>
   1b474:	mov	r1, #0
   1b478:	add	r3, pc, r3
   1b47c:	ldr	r2, [r3]
   1b480:	b	10f8c <__cxa_atexit@plt>
   1b484:	andeq	r1, r1, r0, ror #24

Disassembly of section .fini:

0001b488 <.fini>:
   1b488:	push	{r3, lr}
   1b48c:	pop	{r3, pc}
