
../repos/stcorp-coda-3a25f25/codacheck:     file format elf32-littlearm


Disassembly of section .init:

00010b8c <.init>:
   10b8c:	push	{r3, lr}
   10b90:	bl	10d5c <_start@@Base+0x3c>
   10b94:	pop	{r3, pc}

Disassembly of section .plt:

00010b98 <coda_set_option_perform_boundary_checks@plt-0x14>:
   10b98:	push	{lr}		; (str lr, [sp, #-4]!)
   10b9c:	ldr	lr, [pc, #4]	; 10ba8 <coda_set_option_perform_boundary_checks@plt-0x4>
   10ba0:	add	lr, pc, lr
   10ba4:	ldr	pc, [lr, #8]!
   10ba8:	andeq	r2, r1, r8, asr r4

00010bac <coda_set_option_perform_boundary_checks@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #73728	; 0x12000
   10bb4:	ldr	pc, [ip, #1112]!	; 0x458

00010bb8 <strcmp@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #73728	; 0x12000
   10bc0:	ldr	pc, [ip, #1104]!	; 0x450

00010bc4 <printf@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #73728	; 0x12000
   10bcc:	ldr	pc, [ip, #1096]!	; 0x448

00010bd0 <coda_set_error@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #73728	; 0x12000
   10bd8:	ldr	pc, [ip, #1088]!	; 0x440

00010bdc <coda_open@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #73728	; 0x12000
   10be4:	ldr	pc, [ip, #1080]!	; 0x438

00010be8 <fflush@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #73728	; 0x12000
   10bf0:	ldr	pc, [ip, #1072]!	; 0x430

00010bf4 <coda_set_option_use_mmap@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #73728	; 0x12000
   10bfc:	ldr	pc, [ip, #1064]!	; 0x428

00010c00 <coda_cursor_print_path@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #73728	; 0x12000
   10c08:	ldr	pc, [ip, #1056]!	; 0x420

00010c0c <coda_set_definition_path_conditional@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #73728	; 0x12000
   10c14:	ldr	pc, [ip, #1048]!	; 0x418

00010c18 <coda_set_definition_path@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #73728	; 0x12000
   10c20:	ldr	pc, [ip, #1040]!	; 0x410

00010c24 <coda_recognize_file@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #73728	; 0x12000
   10c2c:	ldr	pc, [ip, #1032]!	; 0x408

00010c30 <fwrite@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #73728	; 0x12000
   10c38:	ldr	pc, [ip, #1024]!	; 0x400

00010c3c <coda_type_get_format_name@plt>:
   10c3c:	add	ip, pc, #0, 12
   10c40:	add	ip, ip, #73728	; 0x12000
   10c44:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c48 <coda_done@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #73728	; 0x12000
   10c50:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c54 <puts@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #73728	; 0x12000
   10c5c:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c60 <coda_product_check@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #73728	; 0x12000
   10c68:	ldr	pc, [ip, #992]!	; 0x3e0

00010c6c <__libc_start_main@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #984]!	; 0x3d8

00010c78 <__gmon_start__@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #976]!	; 0x3d0

00010c84 <exit@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #968]!	; 0x3c8

00010c90 <fprintf@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #960]!	; 0x3c0

00010c9c <coda_init@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #952]!	; 0x3b8

00010ca8 <ungetc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #944]!	; 0x3b0

00010cb4 <coda_set_option_perform_conversions@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #936]!	; 0x3a8

00010cc0 <putchar@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #928]!	; 0x3a0

00010ccc <coda_close@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #920]!	; 0x398

00010cd8 <coda_errno_to_string@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #912]!	; 0x390

00010ce4 <coda_get_libcoda_version@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #904]!	; 0x388

00010cf0 <coda_get_errno@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #896]!	; 0x380

00010cfc <abort@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #888]!	; 0x378

00010d08 <getc@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #880]!	; 0x370

00010d14 <__assert_fail@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #872]!	; 0x368

Disassembly of section .text:

00010d20 <_start@@Base>:
   10d20:	mov	fp, #0
   10d24:	mov	lr, #0
   10d28:	pop	{r1}		; (ldr r1, [sp], #4)
   10d2c:	mov	r2, sp
   10d30:	push	{r2}		; (str r2, [sp, #-4]!)
   10d34:	push	{r0}		; (str r0, [sp, #-4]!)
   10d38:	ldr	ip, [pc, #16]	; 10d50 <_start@@Base+0x30>
   10d3c:	push	{ip}		; (str ip, [sp, #-4]!)
   10d40:	ldr	r0, [pc, #12]	; 10d54 <_start@@Base+0x34>
   10d44:	ldr	r3, [pc, #12]	; 10d58 <_start@@Base+0x38>
   10d48:	bl	10c6c <__libc_start_main@plt>
   10d4c:	bl	10cfc <abort@plt>
   10d50:	andeq	r1, r1, r8, lsr #15
   10d54:	andeq	r1, r1, r4, ror #4
   10d58:	andeq	r1, r1, r8, asr #14
   10d5c:	ldr	r3, [pc, #20]	; 10d78 <_start@@Base+0x58>
   10d60:	ldr	r2, [pc, #20]	; 10d7c <_start@@Base+0x5c>
   10d64:	add	r3, pc, r3
   10d68:	ldr	r2, [r3, r2]
   10d6c:	cmp	r2, #0
   10d70:	bxeq	lr
   10d74:	b	10c78 <__gmon_start__@plt>
   10d78:	muleq	r1, r4, r2
   10d7c:	andeq	r0, r0, r8, lsl #1
   10d80:	ldr	r0, [pc, #24]	; 10da0 <_start@@Base+0x80>
   10d84:	ldr	r3, [pc, #24]	; 10da4 <_start@@Base+0x84>
   10d88:	cmp	r3, r0
   10d8c:	bxeq	lr
   10d90:	ldr	r3, [pc, #16]	; 10da8 <_start@@Base+0x88>
   10d94:	cmp	r3, #0
   10d98:	bxeq	lr
   10d9c:	bx	r3
   10da0:	muleq	r2, r4, r0
   10da4:	muleq	r2, r4, r0
   10da8:	andeq	r0, r0, r0
   10dac:	ldr	r0, [pc, #36]	; 10dd8 <_start@@Base+0xb8>
   10db0:	ldr	r1, [pc, #36]	; 10ddc <_start@@Base+0xbc>
   10db4:	sub	r1, r1, r0
   10db8:	asr	r1, r1, #2
   10dbc:	add	r1, r1, r1, lsr #31
   10dc0:	asrs	r1, r1, #1
   10dc4:	bxeq	lr
   10dc8:	ldr	r3, [pc, #16]	; 10de0 <_start@@Base+0xc0>
   10dcc:	cmp	r3, #0
   10dd0:	bxeq	lr
   10dd4:	bx	r3
   10dd8:	muleq	r2, r4, r0
   10ddc:	muleq	r2, r4, r0
   10de0:	andeq	r0, r0, r0
   10de4:	push	{r4, lr}
   10de8:	ldr	r4, [pc, #24]	; 10e08 <_start@@Base+0xe8>
   10dec:	ldrb	r3, [r4]
   10df0:	cmp	r3, #0
   10df4:	popne	{r4, pc}
   10df8:	bl	10d80 <_start@@Base+0x60>
   10dfc:	mov	r3, #1
   10e00:	strb	r3, [r4]
   10e04:	pop	{r4, pc}
   10e08:	andeq	r3, r2, r4, lsr #1
   10e0c:	b	10dac <_start@@Base+0x8c>
   10e10:	str	r4, [sp, #-8]!
   10e14:	str	lr, [sp, #4]
   10e18:	movw	r0, #6080	; 0x17c0
   10e1c:	movt	r0, #1
   10e20:	bl	10c54 <puts@plt>
   10e24:	movw	r0, #6088	; 0x17c8
   10e28:	movt	r0, #1
   10e2c:	bl	10c54 <puts@plt>
   10e30:	movw	r0, #6144	; 0x1800
   10e34:	movt	r0, #1
   10e38:	bl	10c54 <puts@plt>
   10e3c:	movw	r0, #6216	; 0x1848
   10e40:	movt	r0, #1
   10e44:	bl	10c54 <puts@plt>
   10e48:	movw	r0, #6236	; 0x185c
   10e4c:	movt	r0, #1
   10e50:	bl	10c54 <puts@plt>
   10e54:	movw	r0, #6268	; 0x187c
   10e58:	movt	r0, #1
   10e5c:	bl	10c54 <puts@plt>
   10e60:	movw	r0, #6348	; 0x18cc
   10e64:	movt	r0, #1
   10e68:	bl	10c54 <puts@plt>
   10e6c:	movw	r0, #6420	; 0x1914
   10e70:	movt	r0, #1
   10e74:	bl	10c54 <puts@plt>
   10e78:	movw	r0, #6496	; 0x1960
   10e7c:	movt	r0, #1
   10e80:	bl	10c54 <puts@plt>
   10e84:	movw	r0, #6520	; 0x1978
   10e88:	movt	r0, #1
   10e8c:	bl	10c54 <puts@plt>
   10e90:	movw	r0, #6584	; 0x19b8
   10e94:	movt	r0, #1
   10e98:	bl	10c54 <puts@plt>
   10e9c:	movw	r0, #6640	; 0x19f0
   10ea0:	movt	r0, #1
   10ea4:	bl	10c54 <puts@plt>
   10ea8:	movw	r0, #6668	; 0x1a0c
   10eac:	movt	r0, #1
   10eb0:	bl	10c54 <puts@plt>
   10eb4:	movw	r0, #6740	; 0x1a54
   10eb8:	movt	r0, #1
   10ebc:	bl	10c54 <puts@plt>
   10ec0:	movw	r0, #6764	; 0x1a6c
   10ec4:	movt	r0, #1
   10ec8:	bl	10c54 <puts@plt>
   10ecc:	mov	r0, #10
   10ed0:	bl	10cc0 <putchar@plt>
   10ed4:	movw	r0, #6828	; 0x1aac
   10ed8:	movt	r0, #1
   10edc:	bl	10c54 <puts@plt>
   10ee0:	movw	r0, #6908	; 0x1afc
   10ee4:	movt	r0, #1
   10ee8:	bl	10c54 <puts@plt>
   10eec:	mov	r0, #10
   10ef0:	bl	10cc0 <putchar@plt>
   10ef4:	movw	r0, #6936	; 0x1b18
   10ef8:	movt	r0, #1
   10efc:	bl	10c54 <puts@plt>
   10f00:	movw	r0, #6964	; 0x1b34
   10f04:	movt	r0, #1
   10f08:	bl	10c54 <puts@plt>
   10f0c:	mov	r0, #10
   10f10:	bl	10cc0 <putchar@plt>
   10f14:	movw	r0, #6996	; 0x1b54
   10f18:	movt	r0, #1
   10f1c:	bl	10c54 <puts@plt>
   10f20:	movw	r0, #7024	; 0x1b70
   10f24:	movt	r0, #1
   10f28:	bl	10c54 <puts@plt>
   10f2c:	mov	r0, #10
   10f30:	bl	10cc0 <putchar@plt>
   10f34:	movw	r0, #7076	; 0x1ba4
   10f38:	movt	r0, #1
   10f3c:	bl	10c54 <puts@plt>
   10f40:	movw	r0, #7156	; 0x1bf4
   10f44:	movt	r0, #1
   10f48:	bl	10c54 <puts@plt>
   10f4c:	movw	r0, #7232	; 0x1c40
   10f50:	movt	r0, #1
   10f54:	bl	10c54 <puts@plt>
   10f58:	movw	r0, #7276	; 0x1c6c
   10f5c:	movt	r0, #1
   10f60:	bl	10c54 <puts@plt>
   10f64:	movw	r0, #7352	; 0x1cb8
   10f68:	movt	r0, #1
   10f6c:	bl	10c54 <puts@plt>
   10f70:	movw	r0, #7424	; 0x1d00
   10f74:	movt	r0, #1
   10f78:	bl	10c54 <puts@plt>
   10f7c:	movw	r0, #7488	; 0x1d40
   10f80:	movt	r0, #1
   10f84:	bl	10c54 <puts@plt>
   10f88:	mov	r0, #10
   10f8c:	bl	10cc0 <putchar@plt>
   10f90:	ldr	r4, [sp]
   10f94:	add	sp, sp, #4
   10f98:	pop	{pc}		; (ldr pc, [sp], #4)
   10f9c:	str	r4, [sp, #-8]!
   10fa0:	str	lr, [sp, #4]
   10fa4:	sub	sp, sp, #40	; 0x28
   10fa8:	mov	r4, r0
   10fac:	bl	10c54 <puts@plt>
   10fb0:	add	r3, sp, #12
   10fb4:	str	r3, [sp, #4]
   10fb8:	add	r3, sp, #16
   10fbc:	str	r3, [sp]
   10fc0:	add	r3, sp, #20
   10fc4:	add	r2, sp, #32
   10fc8:	add	r1, sp, #24
   10fcc:	mov	r0, r4
   10fd0:	bl	10c24 <coda_recognize_file@plt>
   10fd4:	cmp	r0, #0
   10fd8:	bne	1107c <_start@@Base+0x35c>
   10fdc:	movw	r3, #12456	; 0x30a8
   10fe0:	movt	r3, #2
   10fe4:	ldr	r3, [r3]
   10fe8:	cmp	r3, #0
   10fec:	beq	11008 <_start@@Base+0x2e8>
   10ff0:	ldr	r3, [sp, #20]
   10ff4:	cmp	r3, #0
   10ff8:	beq	110b8 <_start@@Base+0x398>
   10ffc:	ldr	r3, [sp, #16]
   11000:	cmp	r3, #0
   11004:	beq	110b8 <_start@@Base+0x398>
   11008:	movw	r3, #12464	; 0x30b0
   1100c:	movt	r3, #2
   11010:	ldr	r3, [r3]
   11014:	cmp	r3, #0
   11018:	bne	110d8 <_start@@Base+0x3b8>
   1101c:	add	r1, sp, #36	; 0x24
   11020:	mov	r0, r4
   11024:	bl	10bdc <coda_open@plt>
   11028:	cmp	r0, #0
   1102c:	bne	11124 <_start@@Base+0x404>
   11030:	movw	r3, #12468	; 0x30b4
   11034:	movt	r3, #2
   11038:	ldr	r1, [r3]
   1103c:	mov	r3, #0
   11040:	movw	r2, #4612	; 0x1204
   11044:	movt	r2, #1
   11048:	clz	r1, r1
   1104c:	lsr	r1, r1, #5
   11050:	ldr	r0, [sp, #36]	; 0x24
   11054:	bl	10c60 <coda_product_check@plt>
   11058:	cmp	r0, #0
   1105c:	bne	1119c <_start@@Base+0x47c>
   11060:	ldr	r0, [sp, #36]	; 0x24
   11064:	bl	10ccc <coda_close@plt>
   11068:	cmp	r0, #0
   1106c:	bne	111d4 <_start@@Base+0x4b4>
   11070:	mov	r0, #10
   11074:	bl	10cc0 <putchar@plt>
   11078:	b	11160 <_start@@Base+0x440>
   1107c:	bl	10cf0 <coda_get_errno@plt>
   11080:	ldr	r0, [r0]
   11084:	bl	10cd8 <coda_errno_to_string@plt>
   11088:	mov	r1, r0
   1108c:	movw	r0, #7552	; 0x1d80
   11090:	movt	r0, #1
   11094:	bl	10bc4 <printf@plt>
   11098:	mov	r1, #0
   1109c:	mov	r0, r1
   110a0:	bl	10bd0 <coda_set_error@plt>
   110a4:	movw	r3, #12460	; 0x30ac
   110a8:	movt	r3, #2
   110ac:	mov	r2, #1
   110b0:	str	r2, [r3]
   110b4:	b	11160 <_start@@Base+0x440>
   110b8:	movw	r0, #7568	; 0x1d90
   110bc:	movt	r0, #1
   110c0:	bl	10c54 <puts@plt>
   110c4:	movw	r3, #12460	; 0x30ac
   110c8:	movt	r3, #2
   110cc:	mov	r2, #1
   110d0:	str	r2, [r3]
   110d4:	b	11160 <_start@@Base+0x440>
   110d8:	ldr	r0, [sp, #32]
   110dc:	bl	10c3c <coda_type_get_format_name@plt>
   110e0:	mov	r1, r0
   110e4:	movw	r0, #7612	; 0x1dbc
   110e8:	movt	r0, #1
   110ec:	bl	10bc4 <printf@plt>
   110f0:	ldr	r1, [sp, #20]
   110f4:	cmp	r1, #0
   110f8:	beq	11118 <_start@@Base+0x3f8>
   110fc:	ldr	r2, [sp, #16]
   11100:	cmp	r2, #0
   11104:	beq	11118 <_start@@Base+0x3f8>
   11108:	ldr	r3, [sp, #12]
   1110c:	movw	r0, #7636	; 0x1dd4
   11110:	movt	r0, #1
   11114:	bl	10bc4 <printf@plt>
   11118:	mov	r0, #10
   1111c:	bl	10cc0 <putchar@plt>
   11120:	b	1101c <_start@@Base+0x2fc>
   11124:	bl	10cf0 <coda_get_errno@plt>
   11128:	ldr	r3, [r0]
   1112c:	cmn	r3, #21
   11130:	beq	11170 <_start@@Base+0x450>
   11134:	bl	10cf0 <coda_get_errno@plt>
   11138:	ldr	r0, [r0]
   1113c:	bl	10cd8 <coda_errno_to_string@plt>
   11140:	mov	r1, r0
   11144:	movw	r0, #7552	; 0x1d80
   11148:	movt	r0, #1
   1114c:	bl	10bc4 <printf@plt>
   11150:	movw	r3, #12460	; 0x30ac
   11154:	movt	r3, #2
   11158:	mov	r2, #1
   1115c:	str	r2, [r3]
   11160:	add	sp, sp, #40	; 0x28
   11164:	ldr	r4, [sp]
   11168:	add	sp, sp, #4
   1116c:	pop	{pc}		; (ldr pc, [sp], #4)
   11170:	mov	r0, #0
   11174:	bl	10bf4 <coda_set_option_use_mmap@plt>
   11178:	add	r1, sp, #36	; 0x24
   1117c:	mov	r0, r4
   11180:	bl	10bdc <coda_open@plt>
   11184:	mov	r4, r0
   11188:	mov	r0, #1
   1118c:	bl	10bf4 <coda_set_option_use_mmap@plt>
   11190:	cmp	r4, #0
   11194:	bne	11134 <_start@@Base+0x414>
   11198:	b	11030 <_start@@Base+0x310>
   1119c:	bl	10cf0 <coda_get_errno@plt>
   111a0:	ldr	r0, [r0]
   111a4:	bl	10cd8 <coda_errno_to_string@plt>
   111a8:	mov	r1, r0
   111ac:	movw	r0, #7552	; 0x1d80
   111b0:	movt	r0, #1
   111b4:	bl	10bc4 <printf@plt>
   111b8:	movw	r3, #12460	; 0x30ac
   111bc:	movt	r3, #2
   111c0:	mov	r2, #1
   111c4:	str	r2, [r3]
   111c8:	ldr	r0, [sp, #36]	; 0x24
   111cc:	bl	10ccc <coda_close@plt>
   111d0:	b	11160 <_start@@Base+0x440>
   111d4:	bl	10cf0 <coda_get_errno@plt>
   111d8:	ldr	r0, [r0]
   111dc:	bl	10cd8 <coda_errno_to_string@plt>
   111e0:	mov	r1, r0
   111e4:	movw	r0, #7648	; 0x1de0
   111e8:	movt	r0, #1
   111ec:	bl	10bc4 <printf@plt>
   111f0:	movw	r3, #12460	; 0x30ac
   111f4:	movt	r3, #2
   111f8:	mov	r2, #1
   111fc:	str	r2, [r3]
   11200:	b	11160 <_start@@Base+0x440>
   11204:	str	r4, [sp, #-8]!
   11208:	str	lr, [sp, #4]
   1120c:	mov	r4, r0
   11210:	movw	r0, #7664	; 0x1df0
   11214:	movt	r0, #1
   11218:	bl	10bc4 <printf@plt>
   1121c:	cmp	r4, #0
   11220:	beq	11240 <_start@@Base+0x520>
   11224:	movw	r0, #7676	; 0x1dfc
   11228:	movt	r0, #1
   1122c:	bl	10bc4 <printf@plt>
   11230:	movw	r1, #3012	; 0xbc4
   11234:	movt	r1, #1
   11238:	mov	r0, r4
   1123c:	bl	10c00 <coda_cursor_print_path@plt>
   11240:	mov	r0, #10
   11244:	bl	10cc0 <putchar@plt>
   11248:	movw	r3, #12460	; 0x30ac
   1124c:	movt	r3, #2
   11250:	mov	r2, #1
   11254:	str	r2, [r3]
   11258:	ldr	r4, [sp]
   1125c:	add	sp, sp, #4
   11260:	pop	{pc}		; (ldr pc, [sp], #4)

00011264 <main@@Base>:
   11264:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11268:	strd	r6, [sp, #8]
   1126c:	strd	r8, [sp, #16]
   11270:	strd	sl, [sp, #24]
   11274:	str	lr, [sp, #32]
   11278:	sub	sp, sp, #1024	; 0x400
   1127c:	sub	sp, sp, #12
   11280:	movw	r3, #12464	; 0x30b0
   11284:	movt	r3, #2
   11288:	mov	r2, #0
   1128c:	str	r2, [r3]
   11290:	movw	r3, #12468	; 0x30b4
   11294:	movt	r3, #2
   11298:	str	r2, [r3]
   1129c:	movw	r3, #12456	; 0x30a8
   112a0:	movt	r3, #2
   112a4:	str	r2, [r3]
   112a8:	cmp	r0, #1
   112ac:	beq	112ec <main@@Base+0x88>
   112b0:	mov	r5, r0
   112b4:	mov	r7, r1
   112b8:	ldr	r4, [r1, #4]
   112bc:	movw	r1, #7684	; 0x1e04
   112c0:	movt	r1, #1
   112c4:	mov	r0, r4
   112c8:	bl	10bb8 <strcmp@plt>
   112cc:	cmp	r0, #0
   112d0:	beq	112ec <main@@Base+0x88>
   112d4:	movw	r1, #7688	; 0x1e08
   112d8:	movt	r1, #1
   112dc:	mov	r0, r4
   112e0:	bl	10bb8 <strcmp@plt>
   112e4:	cmp	r0, #0
   112e8:	bne	112f8 <main@@Base+0x94>
   112ec:	bl	10e10 <_start@@Base+0xf0>
   112f0:	mov	r0, #0
   112f4:	bl	10c84 <exit@plt>
   112f8:	movw	r1, #7696	; 0x1e10
   112fc:	movt	r1, #1
   11300:	mov	r0, r4
   11304:	bl	10bb8 <strcmp@plt>
   11308:	cmp	r0, #0
   1130c:	beq	11328 <main@@Base+0xc4>
   11310:	movw	r1, #7700	; 0x1e14
   11314:	movt	r1, #1
   11318:	mov	r0, r4
   1131c:	bl	10bb8 <strcmp@plt>
   11320:	cmp	r0, #0
   11324:	bne	11358 <main@@Base+0xf4>
   11328:	bl	10ce4 <coda_get_libcoda_version@plt>
   1132c:	mov	r1, r0
   11330:	movw	r0, #7712	; 0x1e20
   11334:	movt	r0, #1
   11338:	bl	10bc4 <printf@plt>
   1133c:	movw	r0, #7736	; 0x1e38
   11340:	movt	r0, #1
   11344:	bl	10c54 <puts@plt>
   11348:	mov	r0, #10
   1134c:	bl	10cc0 <putchar@plt>
   11350:	mov	r0, #0
   11354:	bl	10c84 <exit@plt>
   11358:	cmp	r5, #2
   1135c:	ble	113ac <main@@Base+0x148>
   11360:	movw	r1, #7784	; 0x1e68
   11364:	movt	r1, #1
   11368:	mov	r0, r4
   1136c:	bl	10bb8 <strcmp@plt>
   11370:	cmp	r0, #0
   11374:	beq	1139c <main@@Base+0x138>
   11378:	movw	r2, #7788	; 0x1e6c
   1137c:	movt	r2, #1
   11380:	mov	r1, #0
   11384:	ldr	r0, [r7]
   11388:	bl	10c0c <coda_set_definition_path_conditional@plt>
   1138c:	cmp	r0, #0
   11390:	bne	1144c <main@@Base+0x1e8>
   11394:	mov	r4, #1
   11398:	b	113dc <main@@Base+0x178>
   1139c:	ldr	r0, [r7, #8]
   113a0:	bl	10c18 <coda_set_definition_path@plt>
   113a4:	mov	r4, #3
   113a8:	b	113cc <main@@Base+0x168>
   113ac:	movw	r2, #7788	; 0x1e6c
   113b0:	movt	r2, #1
   113b4:	mov	r1, #0
   113b8:	ldr	r0, [r7]
   113bc:	bl	10c0c <coda_set_definition_path_conditional@plt>
   113c0:	cmp	r0, #0
   113c4:	moveq	r4, #1
   113c8:	bne	1144c <main@@Base+0x1e8>
   113cc:	cmp	r4, r5
   113d0:	movge	r3, #1
   113d4:	strge	r3, [sp, #16]
   113d8:	bge	1157c <main@@Base+0x318>
   113dc:	add	r8, r7, r4, lsl #2
   113e0:	mov	r3, #1
   113e4:	str	r3, [sp, #16]
   113e8:	movw	r9, #7828	; 0x1e94
   113ec:	movt	r9, #1
   113f0:	movw	sl, #12464	; 0x30b0
   113f4:	movt	sl, #2
   113f8:	movw	r3, #6656	; 0x1a00
   113fc:	movt	r3, #1
   11400:	str	r3, [sp, #4]
   11404:	movw	r3, #7832	; 0x1e98
   11408:	movt	r3, #1
   1140c:	str	r3, [sp, #8]
   11410:	movw	fp, #12468	; 0x30b4
   11414:	movt	fp, #2
   11418:	movw	r3, #6512	; 0x1970
   1141c:	movt	r3, #1
   11420:	str	r3, [sp, #12]
   11424:	movw	r3, #7836	; 0x1e9c
   11428:	movt	r3, #1
   1142c:	str	r3, [sp, #20]
   11430:	movw	r3, #12456	; 0x30a8
   11434:	movt	r3, #2
   11438:	str	r3, [sp, #24]
   1143c:	movw	r3, #6252	; 0x186c
   11440:	movt	r3, #1
   11444:	str	r3, [sp, #28]
   11448:	b	11494 <main@@Base+0x230>
   1144c:	movw	r3, #12440	; 0x3098
   11450:	movt	r3, #2
   11454:	ldr	r4, [r3]
   11458:	bl	10cf0 <coda_get_errno@plt>
   1145c:	ldr	r0, [r0]
   11460:	bl	10cd8 <coda_errno_to_string@plt>
   11464:	mov	r2, r0
   11468:	movw	r1, #7816	; 0x1e88
   1146c:	movt	r1, #1
   11470:	mov	r0, r4
   11474:	bl	10c90 <fprintf@plt>
   11478:	mov	r0, #1
   1147c:	bl	10c84 <exit@plt>
   11480:	mov	r3, #1
   11484:	str	r3, [sl]
   11488:	add	r4, r4, #1
   1148c:	cmp	r5, r4
   11490:	ble	1157c <main@@Base+0x318>
   11494:	ldr	r6, [r8], #4
   11498:	mov	r1, r9
   1149c:	mov	r0, r6
   114a0:	bl	10bb8 <strcmp@plt>
   114a4:	cmp	r0, #0
   114a8:	beq	11480 <main@@Base+0x21c>
   114ac:	ldr	r1, [sp, #4]
   114b0:	mov	r0, r6
   114b4:	bl	10bb8 <strcmp@plt>
   114b8:	cmp	r0, #0
   114bc:	beq	11480 <main@@Base+0x21c>
   114c0:	ldr	r1, [sp, #8]
   114c4:	mov	r0, r6
   114c8:	bl	10bb8 <strcmp@plt>
   114cc:	cmp	r0, #0
   114d0:	beq	114e8 <main@@Base+0x284>
   114d4:	ldr	r1, [sp, #12]
   114d8:	mov	r0, r6
   114dc:	bl	10bb8 <strcmp@plt>
   114e0:	cmp	r0, #0
   114e4:	bne	114f4 <main@@Base+0x290>
   114e8:	mov	r3, #1
   114ec:	str	r3, [fp]
   114f0:	b	11488 <main@@Base+0x224>
   114f4:	ldr	r1, [sp, #20]
   114f8:	mov	r0, r6
   114fc:	bl	10bb8 <strcmp@plt>
   11500:	cmp	r0, #0
   11504:	beq	1151c <main@@Base+0x2b8>
   11508:	ldr	r1, [sp, #28]
   1150c:	mov	r0, r6
   11510:	bl	10bb8 <strcmp@plt>
   11514:	cmp	r0, #0
   11518:	bne	1152c <main@@Base+0x2c8>
   1151c:	mov	r3, #1
   11520:	ldr	r2, [sp, #24]
   11524:	str	r3, [r2]
   11528:	b	11488 <main@@Base+0x224>
   1152c:	movw	r1, #6752	; 0x1a60
   11530:	movt	r1, #1
   11534:	mov	r0, r6
   11538:	bl	10bb8 <strcmp@plt>
   1153c:	cmp	r0, #0
   11540:	bne	1154c <main@@Base+0x2e8>
   11544:	str	r0, [sp, #16]
   11548:	b	11488 <main@@Base+0x224>
   1154c:	movw	r1, #7840	; 0x1ea0
   11550:	movt	r1, #1
   11554:	mov	r0, r6
   11558:	bl	10bb8 <strcmp@plt>
   1155c:	cmp	r0, #0
   11560:	bne	11570 <main@@Base+0x30c>
   11564:	sub	r3, r5, #1
   11568:	cmp	r3, r4
   1156c:	beq	11708 <main@@Base+0x4a4>
   11570:	ldrb	r3, [r6]
   11574:	cmp	r3, #45	; 0x2d
   11578:	beq	115a8 <main@@Base+0x344>
   1157c:	bl	10c9c <coda_init@plt>
   11580:	cmp	r0, #0
   11584:	bne	11714 <main@@Base+0x4b0>
   11588:	mov	r0, #0
   1158c:	bl	10bac <coda_set_option_perform_boundary_checks@plt>
   11590:	mov	r0, #0
   11594:	bl	10cb4 <coda_set_option_perform_conversions@plt>
   11598:	ldr	r0, [sp, #16]
   1159c:	bl	10bf4 <coda_set_option_use_mmap@plt>
   115a0:	mov	r6, #0
   115a4:	b	11694 <main@@Base+0x430>
   115a8:	movw	r3, #12440	; 0x3098
   115ac:	movt	r3, #2
   115b0:	ldr	r3, [r3]
   115b4:	mov	r2, #25
   115b8:	mov	r1, #1
   115bc:	movw	r0, #7844	; 0x1ea4
   115c0:	movt	r0, #1
   115c4:	bl	10c30 <fwrite@plt>
   115c8:	bl	10e10 <_start@@Base+0xf0>
   115cc:	mov	r0, #1
   115d0:	bl	10c84 <exit@plt>
   115d4:	ldr	r1, [r5]
   115d8:	mov	r0, r3
   115dc:	bl	10ca8 <ungetc@plt>
   115e0:	b	11628 <main@@Base+0x3c4>
   115e4:	cmp	r0, #10
   115e8:	beq	11628 <main@@Base+0x3c4>
   115ec:	add	r3, sp, #32
   115f0:	strb	r0, [r3, r4]
   115f4:	add	r4, r4, #1
   115f8:	cmp	r4, #1000	; 0x3e8
   115fc:	beq	1164c <main@@Base+0x3e8>
   11600:	ldr	r0, [r5]
   11604:	bl	10d08 <getc@plt>
   11608:	uxtb	r0, r0
   1160c:	cmp	r0, #13
   11610:	bne	115e4 <main@@Base+0x380>
   11614:	ldr	r0, [r5]
   11618:	bl	10d08 <getc@plt>
   1161c:	uxtb	r3, r0
   11620:	cmp	r3, #10
   11624:	bne	115d4 <main@@Base+0x370>
   11628:	add	r3, sp, #1024	; 0x400
   1162c:	add	r3, r3, #8
   11630:	add	r3, r3, r4
   11634:	mov	r2, #0
   11638:	strb	r2, [r3, #-1000]	; 0xfffffc18
   1163c:	cmp	r4, r2
   11640:	bgt	1166c <main@@Base+0x408>
   11644:	mov	r4, r6
   11648:	b	11600 <main@@Base+0x39c>
   1164c:	movw	r3, #6072	; 0x17b8
   11650:	movt	r3, #1
   11654:	mov	r2, #316	; 0x13c
   11658:	movw	r1, #7872	; 0x1ec0
   1165c:	movt	r1, #1
   11660:	movw	r0, #7944	; 0x1f08
   11664:	movt	r0, #1
   11668:	bl	10d14 <__assert_fail@plt>
   1166c:	mov	r0, r7
   11670:	bl	10f9c <_start@@Base+0x27c>
   11674:	mov	r0, #0
   11678:	bl	10be8 <fflush@plt>
   1167c:	b	11644 <main@@Base+0x3e0>
   11680:	ldr	r0, [r7, r4, lsl #2]
   11684:	bl	10f9c <_start@@Base+0x27c>
   11688:	mov	r0, r6
   1168c:	bl	10be8 <fflush@plt>
   11690:	add	r4, r4, #1
   11694:	cmp	r4, r5
   11698:	blt	11680 <main@@Base+0x41c>
   1169c:	bl	10c48 <coda_done@plt>
   116a0:	movw	r3, #12460	; 0x30ac
   116a4:	movt	r3, #2
   116a8:	ldr	r3, [r3]
   116ac:	cmp	r3, #0
   116b0:	bne	116d8 <main@@Base+0x474>
   116b4:	mov	r0, #0
   116b8:	add	sp, sp, #1024	; 0x400
   116bc:	add	sp, sp, #12
   116c0:	ldrd	r4, [sp]
   116c4:	ldrd	r6, [sp, #8]
   116c8:	ldrd	r8, [sp, #16]
   116cc:	ldrd	sl, [sp, #24]
   116d0:	add	sp, sp, #32
   116d4:	pop	{pc}		; (ldr pc, [sp], #4)
   116d8:	mov	r0, #1
   116dc:	bl	10c84 <exit@plt>
   116e0:	mov	r0, #0
   116e4:	bl	10bac <coda_set_option_perform_boundary_checks@plt>
   116e8:	mov	r0, #0
   116ec:	bl	10cb4 <coda_set_option_perform_conversions@plt>
   116f0:	ldr	r0, [sp, #16]
   116f4:	bl	10bf4 <coda_set_option_use_mmap@plt>
   116f8:	movw	r5, #12448	; 0x30a0
   116fc:	movt	r5, #2
   11700:	add	r7, sp, #32
   11704:	b	11644 <main@@Base+0x3e0>
   11708:	bl	10c9c <coda_init@plt>
   1170c:	subs	r6, r0, #0
   11710:	beq	116e0 <main@@Base+0x47c>
   11714:	movw	r3, #12440	; 0x3098
   11718:	movt	r3, #2
   1171c:	ldr	r4, [r3]
   11720:	bl	10cf0 <coda_get_errno@plt>
   11724:	ldr	r0, [r0]
   11728:	bl	10cd8 <coda_errno_to_string@plt>
   1172c:	mov	r2, r0
   11730:	movw	r1, #7816	; 0x1e88
   11734:	movt	r1, #1
   11738:	mov	r0, r4
   1173c:	bl	10c90 <fprintf@plt>
   11740:	mov	r0, #1
   11744:	bl	10c84 <exit@plt>

00011748 <__libc_csu_init@@Base>:
   11748:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1174c:	mov	r7, r0
   11750:	ldr	r6, [pc, #72]	; 117a0 <__libc_csu_init@@Base+0x58>
   11754:	ldr	r5, [pc, #72]	; 117a4 <__libc_csu_init@@Base+0x5c>
   11758:	add	r6, pc, r6
   1175c:	add	r5, pc, r5
   11760:	sub	r6, r6, r5
   11764:	mov	r8, r1
   11768:	mov	r9, r2
   1176c:	bl	10b8c <coda_set_option_perform_boundary_checks@plt-0x20>
   11770:	asrs	r6, r6, #2
   11774:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11778:	mov	r4, #0
   1177c:	add	r4, r4, #1
   11780:	ldr	r3, [r5], #4
   11784:	mov	r2, r9
   11788:	mov	r1, r8
   1178c:	mov	r0, r7
   11790:	blx	r3
   11794:	cmp	r6, r4
   11798:	bne	1177c <__libc_csu_init@@Base+0x34>
   1179c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117a0:	muleq	r1, ip, r7
   117a4:	muleq	r1, r4, r7

000117a8 <__libc_csu_fini@@Base>:
   117a8:	bx	lr

Disassembly of section .fini:

000117ac <.fini>:
   117ac:	push	{r3, lr}
   117b0:	pop	{r3, pc}
