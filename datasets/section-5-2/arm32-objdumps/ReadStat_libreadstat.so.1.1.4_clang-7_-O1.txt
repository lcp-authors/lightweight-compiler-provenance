
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

000047a4 <_init>:
    47a4:	push	{r3, lr}
    47a8:	bl	5008 <call_weak_fn>
    47ac:	pop	{r3, pc}

Disassembly of section .plt:

000047b0 <.plt>:
    47b0:	push	{lr}		; (str lr, [sp, #-4]!)
    47b4:	ldr	lr, [pc, #4]	; 47c0 <.plt+0x10>
    47b8:	add	lr, pc, lr
    47bc:	ldr	pc, [lr, #8]!
    47c0:	.word	0x00040840

000047c4 <sas_validate_name@plt>:
    47c4:	add	ip, pc, #0, 12
    47c8:	add	ip, ip, #64, 20	; 0x40000
    47cc:	ldr	pc, [ip, #2112]!	; 0x840

000047d0 <calloc@plt>:
    47d0:	add	ip, pc, #0, 12
    47d4:	add	ip, ip, #64, 20	; 0x40000
    47d8:	ldr	pc, [ip, #2104]!	; 0x838

000047dc <readstat_set_seek_handler@plt>:
    47dc:	add	ip, pc, #0, 12
    47e0:	add	ip, ip, #64, 20	; 0x40000
    47e4:	ldr	pc, [ip, #2096]!	; 0x830

000047e8 <readstat_set_open_handler@plt>:
    47e8:	add	ip, pc, #0, 12
    47ec:	add	ip, ip, #64, 20	; 0x40000
    47f0:	ldr	pc, [ip, #2088]!	; 0x828

000047f4 <byteswap8@plt>:
    47f4:	add	ip, pc, #0, 12
    47f8:	add	ip, ip, #64, 20	; 0x40000
    47fc:	ldr	pc, [ip, #2080]!	; 0x820

00004800 <raise@plt>:
    4800:	add	ip, pc, #0, 12
    4804:	add	ip, ip, #64, 20	; 0x40000
    4808:	ldr	pc, [ip, #2072]!	; 0x818

0000480c <byteswap4@plt>:
    480c:	add	ip, pc, #0, 12
    4810:	add	ip, ip, #64, 20	; 0x40000
    4814:	ldr	pc, [ip, #2064]!	; 0x810

00004818 <readstat_validate_metadata@plt>:
    4818:	add	ip, pc, #0, 12
    481c:	add	ip, ip, #64, 20	; 0x40000
    4820:	ldr	pc, [ip, #2056]!	; 0x808

00004824 <readstat_sort_label_set@plt>:
    4824:	add	ip, pc, #0, 12
    4828:	add	ip, ip, #64, 20	; 0x40000
    482c:	ldr	pc, [ip, #2048]!	; 0x800

00004830 <por_ctx_free@plt>:
    4830:	add	ip, pc, #0, 12
    4834:	add	ip, ip, #64, 20	; 0x40000
    4838:	ldr	pc, [ip, #2040]!	; 0x7f8

0000483c <memreverse@plt>:
    483c:	add	ip, pc, #0, 12
    4840:	add	ip, ip, #64, 20	; 0x40000
    4844:	ldr	pc, [ip, #2032]!	; 0x7f0

00004848 <iconv_close@plt>:
    4848:	add	ip, pc, #0, 12
    484c:	add	ip, ip, #64, 20	; 0x40000
    4850:	ldr	pc, [ip, #2024]!	; 0x7e8

00004854 <readstat_write_spaces@plt>:
    4854:	add	ip, pc, #0, 12
    4858:	add	ip, ip, #64, 20	; 0x40000
    485c:	ldr	pc, [ip, #2016]!	; 0x7e0

00004860 <iconv@plt>:
    4860:	add	ip, pc, #0, 12
    4864:	add	ip, ip, #64, 20	; 0x40000
    4868:	ldr	pc, [ip, #2008]!	; 0x7d8

0000486c <sav_parse_timestamp@plt>:
    486c:	add	ip, pc, #0, 12
    4870:	add	ip, ip, #64, 20	; 0x40000
    4874:	ldr	pc, [ip, #2000]!	; 0x7d0

00004878 <strcmp@plt>:
    4878:	add	ip, pc, #0, 12
    487c:	add	ip, ip, #64, 20	; 0x40000
    4880:	ldr	pc, [ip, #1992]!	; 0x7c8

00004884 <__cxa_finalize@plt>:
    4884:	add	ip, pc, #0, 12
    4888:	add	ip, ip, #64, 20	; 0x40000
    488c:	ldr	pc, [ip, #1984]!	; 0x7c0

00004890 <ck_hash_table_wipe@plt>:
    4890:	add	ip, pc, #0, 12
    4894:	add	ip, ip, #64, 20	; 0x40000
    4898:	ldr	pc, [ip, #1976]!	; 0x7b8

0000489c <readstat_type_class@plt>:
    489c:	add	ip, pc, #0, 12
    48a0:	add	ip, ip, #64, 20	; 0x40000
    48a4:	ldr	pc, [ip, #1968]!	; 0x7b0

000048a8 <strtol@plt>:
    48a8:	add	ip, pc, #0, 12
    48ac:	add	ip, ip, #64, 20	; 0x40000
    48b0:	ldr	pc, [ip, #1960]!	; 0x7a8

000048b4 <read@plt>:
    48b4:	add	ip, pc, #0, 12
    48b8:	add	ip, ip, #64, 20	; 0x40000
    48bc:	ldr	pc, [ip, #1952]!	; 0x7a0

000048c0 <readstat_error_message@plt>:
    48c0:	add	ip, pc, #0, 12
    48c4:	add	ip, ip, #64, 20	; 0x40000
    48c8:	ldr	pc, [ip, #1944]!	; 0x798

000048cc <mktime@plt>:
    48cc:	add	ip, pc, #0, 12
    48d0:	add	ip, ip, #64, 20	; 0x40000
    48d4:	ldr	pc, [ip, #1936]!	; 0x790

000048d8 <spss_alignment_from_readstat_alignment@plt>:
    48d8:	add	ip, pc, #0, 12
    48dc:	add	ip, ip, #64, 20	; 0x40000
    48e0:	ldr	pc, [ip, #1928]!	; 0x788

000048e4 <readstat_copy@plt>:
    48e4:	add	ip, pc, #0, 12
    48e8:	add	ip, ip, #64, 20	; 0x40000
    48ec:	ldr	pc, [ip, #1920]!	; 0x780

000048f0 <dta_ctx_free@plt>:
    48f0:	add	ip, pc, #0, 12
    48f4:	add	ip, ip, #64, 20	; 0x40000
    48f8:	ldr	pc, [ip, #1912]!	; 0x778

000048fc <deflateBound@plt>:
    48fc:	add	ip, pc, #0, 12
    4900:	add	ip, ip, #64, 20	; 0x40000
    4904:	ldr	pc, [ip, #1904]!	; 0x770

00004908 <readstat_set_update_handler@plt>:
    4908:	add	ip, pc, #0, 12
    490c:	add	ip, ip, #64, 20	; 0x40000
    4910:	ldr	pc, [ip, #1896]!	; 0x768

00004914 <memmove@plt>:
    4914:	add	ip, pc, #0, 12
    4918:	add	ip, ip, #64, 20	; 0x40000
    491c:	ldr	pc, [ip, #1888]!	; 0x760

00004920 <byteswap2@plt>:
    4920:	add	ip, pc, #0, 12
    4924:	add	ip, ip, #64, 20	; 0x40000
    4928:	ldr	pc, [ip, #1880]!	; 0x758

0000492c <machine_is_little_endian@plt>:
    492c:	add	ip, pc, #0, 12
    4930:	add	ip, ip, #64, 20	; 0x40000
    4934:	ldr	pc, [ip, #1872]!	; 0x750

00004938 <free@plt>:
    4938:	add	ip, pc, #0, 12
    493c:	add	ip, ip, #64, 20	; 0x40000
    4940:	ldr	pc, [ip, #1864]!	; 0x748

00004944 <__isnanf@plt>:
    4944:	add	ip, pc, #0, 12
    4948:	add	ip, ip, #64, 20	; 0x40000
    494c:	ldr	pc, [ip, #1856]!	; 0x740

00004950 <readstat_value_is_system_missing@plt>:
    4950:	add	ip, pc, #0, 12
    4954:	add	ip, ip, #64, 20	; 0x40000
    4958:	ldr	pc, [ip, #1848]!	; 0x738

0000495c <sav_parse_time@plt>:
    495c:	add	ip, pc, #0, 12
    4960:	add	ip, ip, #64, 20	; 0x40000
    4964:	ldr	pc, [ip, #1840]!	; 0x730

00004968 <readstat_variable_get_format@plt>:
    4968:	add	ip, pc, #0, 12
    496c:	add	ip, ip, #64, 20	; 0x40000
    4970:	ldr	pc, [ip, #1832]!	; 0x728

00004974 <ones_to_twos_complement4@plt>:
    4974:	add	ip, pc, #0, 12
    4978:	add	ip, ip, #64, 20	; 0x40000
    497c:	ldr	pc, [ip, #1824]!	; 0x720

00004980 <ones_to_twos_complement2@plt>:
    4980:	add	ip, pc, #0, 12
    4984:	add	ip, ip, #64, 20	; 0x40000
    4988:	ldr	pc, [ip, #1816]!	; 0x718

0000498c <sav_ctx_free@plt>:
    498c:	add	ip, pc, #0, 12
    4990:	add	ip, ip, #64, 20	; 0x40000
    4994:	ldr	pc, [ip, #1808]!	; 0x710

00004998 <memcpy@plt>:
    4998:	add	ip, pc, #0, 12
    499c:	add	ip, ip, #64, 20	; 0x40000
    49a0:	ldr	pc, [ip, #1800]!	; 0x708

000049a4 <spss_parse_format@plt>:
    49a4:	add	ip, pc, #0, 12
    49a8:	add	ip, ip, #64, 20	; 0x40000
    49ac:	ldr	pc, [ip, #1792]!	; 0x700

000049b0 <submit_columns@plt>:
    49b0:	add	ip, pc, #0, 12
    49b4:	add	ip, ip, #64, 20	; 0x40000
    49b8:	ldr	pc, [ip, #1784]!	; 0x6f8

000049bc <readstat_variable_get_missing_range_lo@plt>:
    49bc:	add	ip, pc, #0, 12
    49c0:	add	ip, ip, #64, 20	; 0x40000
    49c4:	ldr	pc, [ip, #1776]!	; 0x6f0

000049c8 <time@plt>:
    49c8:	add	ip, pc, #0, 12
    49cc:	add	ip, ip, #64, 20	; 0x40000
    49d0:	ldr	pc, [ip, #1768]!	; 0x6e8

000049d4 <readstat_begin_writing_file@plt>:
    49d4:	add	ip, pc, #0, 12
    49d8:	add	ip, ip, #64, 20	; 0x40000
    49dc:	ldr	pc, [ip, #1760]!	; 0x6e0

000049e0 <lseek@plt>:
    49e0:	add	ip, pc, #0, 12
    49e4:	add	ip, ip, #64, 20	; 0x40000
    49e8:	ldr	pc, [ip, #1752]!	; 0x6d8

000049ec <unistd_io_init@plt>:
    49ec:	add	ip, pc, #0, 12
    49f0:	add	ip, ip, #64, 20	; 0x40000
    49f4:	ldr	pc, [ip, #1744]!	; 0x6d0

000049f8 <pow@plt>:
    49f8:	add	ip, pc, #0, 12
    49fc:	add	ip, ip, #64, 20	; 0x40000
    4a00:	ldr	pc, [ip, #1736]!	; 0x6c8

00004a04 <uncompress@plt>:
    4a04:	add	ip, pc, #0, 12
    4a08:	add	ip, ip, #64, 20	; 0x40000
    4a0c:	ldr	pc, [ip, #1728]!	; 0x6c0

00004a10 <memcmp@plt>:
    4a10:	add	ip, pc, #0, 12
    4a14:	add	ip, ip, #64, 20	; 0x40000
    4a18:	ldr	pc, [ip, #1720]!	; 0x6b8

00004a1c <readstat_string_value@plt>:
    4a1c:	add	ip, pc, #0, 12
    4a20:	add	ip, ip, #64, 20	; 0x40000
    4a24:	ldr	pc, [ip, #1712]!	; 0x6b0

00004a28 <readstat_schema_free@plt>:
    4a28:	add	ip, pc, #0, 12
    4a2c:	add	ip, ip, #64, 20	; 0x40000
    4a30:	ldr	pc, [ip, #1704]!	; 0x6a8

00004a34 <readstat_calloc@plt>:
    4a34:	add	ip, pc, #0, 12
    4a38:	add	ip, ip, #64, 20	; 0x40000
    4a3c:	ldr	pc, [ip, #1696]!	; 0x6a0

00004a40 <ck_str_hash_lookup@plt>:
    4a40:	add	ip, pc, #0, 12
    4a44:	add	ip, ip, #64, 20	; 0x40000
    4a48:	ldr	pc, [ip, #1688]!	; 0x698

00004a4c <sav_compressed_row_bound@plt>:
    4a4c:	add	ip, pc, #0, 12
    4a50:	add	ip, ip, #64, 20	; 0x40000
    4a54:	ldr	pc, [ip, #1680]!	; 0x690

00004a58 <ck_hash_table_grow@plt>:
    4a58:	add	ip, pc, #0, 12
    4a5c:	add	ip, ip, #64, 20	; 0x40000
    4a60:	ldr	pc, [ip, #1672]!	; 0x688

00004a64 <__isinf@plt>:
    4a64:	add	ip, pc, #0, 12
    4a68:	add	ip, ip, #64, 20	; 0x40000
    4a6c:	ldr	pc, [ip, #1664]!	; 0x680

00004a70 <realloc@plt>:
    4a70:	add	ip, pc, #0, 12
    4a74:	add	ip, ip, #64, 20	; 0x40000
    4a78:	ldr	pc, [ip, #1656]!	; 0x678

00004a7c <cnxptiee@plt>:
    4a7c:	add	ip, pc, #0, 12
    4a80:	add	ip, ip, #64, 20	; 0x40000
    4a84:	ldr	pc, [ip, #1648]!	; 0x670

00004a88 <read_version_and_timestamp@plt>:
    4a88:	add	ip, pc, #0, 12
    4a8c:	add	ip, ip, #64, 20	; 0x40000
    4a90:	ldr	pc, [ip, #1640]!	; 0x668

00004a94 <readstat_write_zeros@plt>:
    4a94:	add	ip, pc, #0, 12
    4a98:	add	ip, ip, #64, 20	; 0x40000
    4a9c:	ldr	pc, [ip, #1632]!	; 0x660

00004aa0 <strcasecmp@plt>:
    4aa0:	add	ip, pc, #0, 12
    4aa4:	add	ip, ip, #64, 20	; 0x40000
    4aa8:	ldr	pc, [ip, #1624]!	; 0x658

00004aac <readstat_copy_quoted@plt>:
    4aac:	add	ip, pc, #0, 12
    4ab0:	add	ip, ip, #64, 20	; 0x40000
    4ab4:	ldr	pc, [ip, #1616]!	; 0x650

00004ab8 <deflate@plt>:
    4ab8:	add	ip, pc, #0, 12
    4abc:	add	ip, ip, #64, 20	; 0x40000
    4ac0:	ldr	pc, [ip, #1608]!	; 0x648

00004ac4 <submit_value_label@plt>:
    4ac4:	add	ip, pc, #0, 12
    4ac8:	add	ip, ip, #64, 20	; 0x40000
    4acc:	ldr	pc, [ip, #1600]!	; 0x640

00004ad0 <sav_ctx_init@plt>:
    4ad0:	add	ip, pc, #0, 12
    4ad4:	add	ip, ip, #64, 20	; 0x40000
    4ad8:	ldr	pc, [ip, #1592]!	; 0x638

00004adc <ck_str_n_hash_lookup@plt>:
    4adc:	add	ip, pc, #0, 12
    4ae0:	add	ip, ip, #64, 20	; 0x40000
    4ae4:	ldr	pc, [ip, #1584]!	; 0x630

00004ae8 <spss_measure_from_readstat_measure@plt>:
    4ae8:	add	ip, pc, #0, 12
    4aec:	add	ip, ip, #64, 20	; 0x40000
    4af0:	ldr	pc, [ip, #1576]!	; 0x628

00004af4 <sas_rle_decompress@plt>:
    4af4:	add	ip, pc, #0, 12
    4af8:	add	ip, ip, #64, 20	; 0x40000
    4afc:	ldr	pc, [ip, #1568]!	; 0x620

00004b00 <sav_parse_date@plt>:
    4b00:	add	ip, pc, #0, 12
    4b04:	add	ip, ip, #64, 20	; 0x40000
    4b08:	ldr	pc, [ip, #1560]!	; 0x618

00004b0c <xport_namestr_bswap@plt>:
    4b0c:	add	ip, pc, #0, 12
    4b10:	add	ip, ip, #64, 20	; 0x40000
    4b14:	ldr	pc, [ip, #1552]!	; 0x610

00004b18 <strcpy@plt>:
    4b18:	add	ip, pc, #0, 12
    4b1c:	add	ip, ip, #64, 20	; 0x40000
    4b20:	ldr	pc, [ip, #1544]!	; 0x608

00004b24 <zsav_current_block@plt>:
    4b24:	add	ip, pc, #0, 12
    4b28:	add	ip, ip, #64, 20	; 0x40000
    4b2c:	ldr	pc, [ip, #1536]!	; 0x600

00004b30 <zsav_ctx_init@plt>:
    4b30:	add	ip, pc, #0, 12
    4b34:	add	ip, ip, #64, 20	; 0x40000
    4b38:	ldr	pc, [ip, #1528]!	; 0x5f8

00004b3c <sas_write_header@plt>:
    4b3c:	add	ip, pc, #0, 12
    4b40:	add	ip, ip, #64, 20	; 0x40000
    4b44:	ldr	pc, [ip, #1520]!	; 0x5f0

00004b48 <strtof@plt>:
    4b48:	add	ip, pc, #0, 12
    4b4c:	add	ip, ip, #64, 20	; 0x40000
    4b50:	ldr	pc, [ip, #1512]!	; 0x5e8

00004b54 <readstat_schema_find_or_create_entry@plt>:
    4b54:	add	ip, pc, #0, 12
    4b58:	add	ip, ip, #64, 20	; 0x40000
    4b5c:	ldr	pc, [ip, #1504]!	; 0x5e0

00004b60 <readstat_value_type_class@plt>:
    4b60:	add	ip, pc, #0, 12
    4b64:	add	ip, ip, #64, 20	; 0x40000
    4b68:	ldr	pc, [ip, #1496]!	; 0x5d8

00004b6c <readstat_set_io_ctx@plt>:
    4b6c:	add	ip, pc, #0, 12
    4b70:	add	ip, ip, #64, 20	; 0x40000
    4b74:	ldr	pc, [ip, #1488]!	; 0x5d0

00004b78 <spss_format_for_variable@plt>:
    4b78:	add	ip, pc, #0, 12
    4b7c:	add	ip, ip, #64, 20	; 0x40000
    4b80:	ldr	pc, [ip, #1480]!	; 0x5c8

00004b84 <readstat_parser_free@plt>:
    4b84:	add	ip, pc, #0, 12
    4b88:	add	ip, ip, #64, 20	; 0x40000
    4b8c:	ldr	pc, [ip, #1472]!	; 0x5c0

00004b90 <ck_hash_str@plt>:
    4b90:	add	ip, pc, #0, 12
    4b94:	add	ip, ip, #64, 20	; 0x40000
    4b98:	ldr	pc, [ip, #1464]!	; 0x5b8

00004b9c <malloc@plt>:
    4b9c:	add	ip, pc, #0, 12
    4ba0:	add	ip, ip, #64, 20	; 0x40000
    4ba4:	ldr	pc, [ip, #1456]!	; 0x5b0

00004ba8 <zsav_add_block@plt>:
    4ba8:	add	ip, pc, #0, 12
    4bac:	add	ip, ip, #64, 20	; 0x40000
    4bb0:	ldr	pc, [ip, #1448]!	; 0x5a8

00004bb4 <deflateInit_@plt>:
    4bb4:	add	ip, pc, #0, 12
    4bb8:	add	ip, ip, #64, 20	; 0x40000
    4bbc:	ldr	pc, [ip, #1440]!	; 0x5a0

00004bc0 <iconv_open@plt>:
    4bc0:	add	ip, pc, #0, 12
    4bc4:	add	ip, ip, #64, 20	; 0x40000
    4bc8:	ldr	pc, [ip, #1432]!	; 0x598

00004bcc <strerror@plt>:
    4bcc:	add	ip, pc, #0, 12
    4bd0:	add	ip, ip, #64, 20	; 0x40000
    4bd4:	ldr	pc, [ip, #1424]!	; 0x590

00004bd8 <sas_validate_tag@plt>:
    4bd8:	add	ip, pc, #0, 12
    4bdc:	add	ip, ip, #64, 20	; 0x40000
    4be0:	ldr	pc, [ip, #1416]!	; 0x588

00004be4 <readstat_write_string@plt>:
    4be4:	add	ip, pc, #0, 12
    4be8:	add	ip, ip, #64, 20	; 0x40000
    4bec:	ldr	pc, [ip, #1408]!	; 0x580

00004bf0 <localtime@plt>:
    4bf0:	add	ip, pc, #0, 12
    4bf4:	add	ip, ip, #64, 20	; 0x40000
    4bf8:	ldr	pc, [ip, #1400]!	; 0x578

00004bfc <__ctype_tolower_loc@plt>:
    4bfc:	add	ip, pc, #0, 12
    4c00:	add	ip, ip, #64, 20	; 0x40000
    4c04:	ldr	pc, [ip, #1392]!	; 0x570

00004c08 <modf@plt>:
    4c08:	add	ip, pc, #0, 12
    4c0c:	add	ip, ip, #64, 20	; 0x40000
    4c10:	ldr	pc, [ip, #1384]!	; 0x568

00004c14 <__ctype_toupper_loc@plt>:
    4c14:	add	ip, pc, #0, 12
    4c18:	add	ip, ip, #64, 20	; 0x40000
    4c1c:	ldr	pc, [ip, #1376]!	; 0x560

00004c20 <ck_hash_table_init@plt>:
    4c20:	add	ip, pc, #0, 12
    4c24:	add	ip, ip, #64, 20	; 0x40000
    4c28:	ldr	pc, [ip, #1368]!	; 0x558

00004c2c <__gmon_start__@plt>:
    4c2c:	add	ip, pc, #0, 12
    4c30:	add	ip, ip, #64, 20	; 0x40000
    4c34:	ldr	pc, [ip, #1360]!	; 0x550

00004c38 <open@plt>:
    4c38:	add	ip, pc, #0, 12
    4c3c:	add	ip, ip, #64, 20	; 0x40000
    4c40:	ldr	pc, [ip, #1352]!	; 0x548

00004c44 <readstat_double_value@plt>:
    4c44:	add	ip, pc, #0, 12
    4c48:	add	ip, ip, #64, 20	; 0x40000
    4c4c:	ldr	pc, [ip, #1344]!	; 0x540

00004c50 <get_native@plt>:
    4c50:	add	ip, pc, #0, 12
    4c54:	add	ip, ip, #64, 20	; 0x40000
    4c58:	ldr	pc, [ip, #1336]!	; 0x538

00004c5c <dta_ctx_init@plt>:
    4c5c:	add	ip, pc, #0, 12
    4c60:	add	ip, ip, #64, 20	; 0x40000
    4c64:	ldr	pc, [ip, #1328]!	; 0x530

00004c68 <readstat_variable_get_type@plt>:
    4c68:	add	ip, pc, #0, 12
    4c6c:	add	ip, ip, #64, 20	; 0x40000
    4c70:	ldr	pc, [ip, #1320]!	; 0x528

00004c74 <dta_type_info@plt>:
    4c74:	add	ip, pc, #0, 12
    4c78:	add	ip, ip, #64, 20	; 0x40000
    4c7c:	ldr	pc, [ip, #1312]!	; 0x520

00004c80 <sav_parse_long_variable_names_record@plt>:
    4c80:	add	ip, pc, #0, 12
    4c84:	add	ip, ip, #64, 20	; 0x40000
    4c88:	ldr	pc, [ip, #1304]!	; 0x518

00004c8c <strlen@plt>:
    4c8c:	add	ip, pc, #0, 12
    4c90:	add	ip, ip, #64, 20	; 0x40000
    4c94:	ldr	pc, [ip, #1296]!	; 0x510

00004c98 <sav_decompress_row@plt>:
    4c98:	add	ip, pc, #0, 12
    4c9c:	add	ip, ip, #64, 20	; 0x40000
    4ca0:	ldr	pc, [ip, #1288]!	; 0x508

00004ca4 <readstat_variable_get_display_width@plt>:
    4ca4:	add	ip, pc, #0, 12
    4ca8:	add	ip, ip, #64, 20	; 0x40000
    4cac:	ldr	pc, [ip, #1280]!	; 0x500

00004cb0 <readstat_malloc@plt>:
    4cb0:	add	ip, pc, #0, 12
    4cb4:	add	ip, ip, #64, 20	; 0x40000
    4cb8:	ldr	pc, [ip, #1272]!	; 0x4f8

00004cbc <readstat_convert@plt>:
    4cbc:	add	ip, pc, #0, 12
    4cc0:	add	ip, ip, #64, 20	; 0x40000
    4cc4:	ldr	pc, [ip, #1264]!	; 0x4f0

00004cc8 <ck_hash_table_free@plt>:
    4cc8:	add	ip, pc, #0, 12
    4ccc:	add	ip, ip, #64, 20	; 0x40000
    4cd0:	ldr	pc, [ip, #1256]!	; 0x4e8

00004cd4 <readstat_por_parse_double@plt>:
    4cd4:	add	ip, pc, #0, 12
    4cd8:	add	ip, ip, #64, 20	; 0x40000
    4cdc:	ldr	pc, [ip, #1248]!	; 0x4e0

00004ce0 <por_utf8_encode@plt>:
    4ce0:	add	ip, pc, #0, 12
    4ce4:	add	ip, ip, #64, 20	; 0x40000
    4ce8:	ldr	pc, [ip, #1240]!	; 0x4d8

00004cec <__errno_location@plt>:
    4cec:	add	ip, pc, #0, 12
    4cf0:	add	ip, ip, #64, 20	; 0x40000
    4cf4:	ldr	pc, [ip, #1232]!	; 0x4d0

00004cf8 <spss_init_variable_for_info@plt>:
    4cf8:	add	ip, pc, #0, 12
    4cfc:	add	ip, ip, #64, 20	; 0x40000
    4d00:	ldr	pc, [ip, #1224]!	; 0x4c8

00004d04 <snprintf@plt>:
    4d04:	add	ip, pc, #0, 12
    4d08:	add	ip, ip, #64, 20	; 0x40000
    4d0c:	ldr	pc, [ip, #1216]!	; 0x4c0

00004d10 <__isoc99_sscanf@plt>:
    4d10:	add	ip, pc, #0, 12
    4d14:	add	ip, ip, #64, 20	; 0x40000
    4d18:	ldr	pc, [ip, #1208]!	; 0x4b8

00004d1c <ck_str_n_hash_insert@plt>:
    4d1c:	add	ip, pc, #0, 12
    4d20:	add	ip, ip, #64, 20	; 0x40000
    4d24:	ldr	pc, [ip, #1200]!	; 0x4b0

00004d28 <memset@plt>:
    4d28:	add	ip, pc, #0, 12
    4d2c:	add	ip, ip, #64, 20	; 0x40000
    4d30:	ldr	pc, [ip, #1192]!	; 0x4a8

00004d34 <bsearch@plt>:
    4d34:	add	ip, pc, #0, 12
    4d38:	add	ip, ip, #64, 20	; 0x40000
    4d3c:	ldr	pc, [ip, #1184]!	; 0x4a0

00004d40 <spss_64bit_value@plt>:
    4d40:	add	ip, pc, #0, 12
    4d44:	add	ip, ip, #64, 20	; 0x40000
    4d48:	ldr	pc, [ip, #1176]!	; 0x498

00004d4c <strncpy@plt>:
    4d4c:	add	ip, pc, #0, 12
    4d50:	add	ip, ip, #64, 20	; 0x40000
    4d54:	ldr	pc, [ip, #1168]!	; 0x490

00004d58 <readstat_variable_get_storage_width@plt>:
    4d58:	add	ip, pc, #0, 12
    4d5c:	add	ip, ip, #64, 20	; 0x40000
    4d60:	ldr	pc, [ip, #1160]!	; 0x488

00004d64 <sav_parse_very_long_string_record@plt>:
    4d64:	add	ip, pc, #0, 12
    4d68:	add	ip, ip, #64, 20	; 0x40000
    4d6c:	ldr	pc, [ip, #1152]!	; 0x480

00004d70 <readstat_realloc@plt>:
    4d70:	add	ip, pc, #0, 12
    4d74:	add	ip, ip, #64, 20	; 0x40000
    4d78:	ldr	pc, [ip, #1144]!	; 0x478

00004d7c <dta_parse_timestamp@plt>:
    4d7c:	add	ip, pc, #0, 12
    4d80:	add	ip, ip, #64, 20	; 0x40000
    4d84:	ldr	pc, [ip, #1136]!	; 0x470

00004d88 <strtod@plt>:
    4d88:	add	ip, pc, #0, 12
    4d8c:	add	ip, ip, #64, 20	; 0x40000
    4d90:	ldr	pc, [ip, #1128]!	; 0x468

00004d94 <readstat_variable_get_missing_ranges_count@plt>:
    4d94:	add	ip, pc, #0, 12
    4d98:	add	ip, ip, #64, 20	; 0x40000
    4d9c:	ldr	pc, [ip, #1120]!	; 0x460

00004da0 <deflateEnd@plt>:
    4da0:	add	ip, pc, #0, 12
    4da4:	add	ip, ip, #64, 20	; 0x40000
    4da8:	ldr	pc, [ip, #1112]!	; 0x458

00004dac <readstat_variable_get_measure@plt>:
    4dac:	add	ip, pc, #0, 12
    4db0:	add	ip, ip, #64, 20	; 0x40000
    4db4:	ldr	pc, [ip, #1104]!	; 0x450

00004db8 <__isnan@plt>:
    4db8:	add	ip, pc, #0, 12
    4dbc:	add	ip, ip, #64, 20	; 0x40000
    4dc0:	ldr	pc, [ip, #1096]!	; 0x448

00004dc4 <readstat_variable_get_missing_range_hi@plt>:
    4dc4:	add	ip, pc, #0, 12
    4dc8:	add	ip, ip, #64, 20	; 0x40000
    4dcc:	ldr	pc, [ip, #1088]!	; 0x440

00004dd0 <readstat_set_read_handler@plt>:
    4dd0:	add	ip, pc, #0, 12
    4dd4:	add	ip, ip, #64, 20	; 0x40000
    4dd8:	ldr	pc, [ip, #1080]!	; 0x438

00004ddc <readstat_value_type@plt>:
    4ddc:	add	ip, pc, #0, 12
    4de0:	add	ip, ip, #64, 20	; 0x40000
    4de4:	ldr	pc, [ip, #1072]!	; 0x430

00004de8 <sas_header_info_init@plt>:
    4de8:	add	ip, pc, #0, 12
    4dec:	add	ip, ip, #64, 20	; 0x40000
    4df0:	ldr	pc, [ip, #1064]!	; 0x428

00004df4 <readstat_string_ref_init@plt>:
    4df4:	add	ip, pc, #0, 12
    4df8:	add	ip, ip, #64, 20	; 0x40000
    4dfc:	ldr	pc, [ip, #1056]!	; 0x420

00004e00 <readstat_variable_get_name@plt>:
    4e00:	add	ip, pc, #0, 12
    4e04:	add	ip, ip, #64, 20	; 0x40000
    4e08:	ldr	pc, [ip, #1048]!	; 0x418

00004e0c <ones_to_twos_complement1@plt>:
    4e0c:	add	ip, pc, #0, 12
    4e10:	add	ip, ip, #64, 20	; 0x40000
    4e14:	ldr	pc, [ip, #1040]!	; 0x410

00004e18 <readstat_get_variable@plt>:
    4e18:	add	ip, pc, #0, 12
    4e1c:	add	ip, ip, #64, 20	; 0x40000
    4e20:	ldr	pc, [ip, #1032]!	; 0x408

00004e24 <spss_alignment_to_readstat_alignment@plt>:
    4e24:	add	ip, pc, #0, 12
    4e28:	add	ip, ip, #64, 20	; 0x40000
    4e2c:	ldr	pc, [ip, #1024]!	; 0x400

00004e30 <por_utf8_decode@plt>:
    4e30:	add	ip, pc, #0, 12
    4e34:	add	ip, ip, #64, 20	; 0x40000
    4e38:	ldr	pc, [ip, #1016]!	; 0x3f8

00004e3c <sas_read_header@plt>:
    4e3c:	add	ip, pc, #0, 12
    4e40:	add	ip, ip, #64, 20	; 0x40000
    4e44:	ldr	pc, [ip, #1008]!	; 0x3f0

00004e48 <spss_measure_to_readstat_measure@plt>:
    4e48:	add	ip, pc, #0, 12
    4e4c:	add	ip, ip, #64, 20	; 0x40000
    4e50:	ldr	pc, [ip, #1000]!	; 0x3e8

00004e54 <sas_subheader_remainder@plt>:
    4e54:	add	ip, pc, #0, 12
    4e58:	add	ip, ip, #64, 20	; 0x40000
    4e5c:	ldr	pc, [ip, #992]!	; 0x3e0

00004e60 <sas_read8@plt>:
    4e60:	add	ip, pc, #0, 12
    4e64:	add	ip, ip, #64, 20	; 0x40000
    4e68:	ldr	pc, [ip, #984]!	; 0x3d8

00004e6c <sas_read2@plt>:
    4e6c:	add	ip, pc, #0, 12
    4e70:	add	ip, ip, #64, 20	; 0x40000
    4e74:	ldr	pc, [ip, #976]!	; 0x3d0

00004e78 <readstat_copy_lower@plt>:
    4e78:	add	ip, pc, #0, 12
    4e7c:	add	ip, ip, #64, 20	; 0x40000
    4e80:	ldr	pc, [ip, #968]!	; 0x3c8

00004e84 <sprintf@plt>:
    4e84:	add	ip, pc, #0, 12
    4e88:	add	ip, ip, #64, 20	; 0x40000
    4e8c:	ldr	pc, [ip, #960]!	; 0x3c0

00004e90 <sas_read4@plt>:
    4e90:	add	ip, pc, #0, 12
    4e94:	add	ip, ip, #64, 20	; 0x40000
    4e98:	ldr	pc, [ip, #952]!	; 0x3b8

00004e9c <readstat_variable_get_label@plt>:
    4e9c:	add	ip, pc, #0, 12
    4ea0:	add	ip, ip, #64, 20	; 0x40000
    4ea4:	ldr	pc, [ip, #944]!	; 0x3b0

00004ea8 <spss_format@plt>:
    4ea8:	add	ip, pc, #0, 12
    4eac:	add	ip, ip, #64, 20	; 0x40000
    4eb0:	ldr	pc, [ip, #936]!	; 0x3a8

00004eb4 <spss_varinfo_free@plt>:
    4eb4:	add	ip, pc, #0, 12
    4eb8:	add	ip, ip, #64, 20	; 0x40000
    4ebc:	ldr	pc, [ip, #928]!	; 0x3a0

00004ec0 <readstat_get_label_set@plt>:
    4ec0:	add	ip, pc, #0, 12
    4ec4:	add	ip, ip, #64, 20	; 0x40000
    4ec8:	ldr	pc, [ip, #920]!	; 0x398

00004ecc <readstat_variable_get_alignment@plt>:
    4ecc:	add	ip, pc, #0, 12
    4ed0:	add	ip, ip, #64, 20	; 0x40000
    4ed4:	ldr	pc, [ip, #912]!	; 0x390

00004ed8 <qsort@plt>:
    4ed8:	add	ip, pc, #0, 12
    4edc:	add	ip, ip, #64, 20	; 0x40000
    4ee0:	ldr	pc, [ip, #904]!	; 0x388

00004ee4 <readstat_get_label_set_variable@plt>:
    4ee4:	add	ip, pc, #0, 12
    4ee8:	add	ip, ip, #64, 20	; 0x40000
    4eec:	ldr	pc, [ip, #896]!	; 0x380

00004ef0 <readstat_write_bytes@plt>:
    4ef0:	add	ip, pc, #0, 12
    4ef4:	add	ip, ip, #64, 20	; 0x40000
    4ef8:	ldr	pc, [ip, #888]!	; 0x378

00004efc <sav_compress_row@plt>:
    4efc:	add	ip, pc, #0, 12
    4f00:	add	ip, ip, #64, 20	; 0x40000
    4f04:	ldr	pc, [ip, #880]!	; 0x370

00004f08 <readstat_set_close_handler@plt>:
    4f08:	add	ip, pc, #0, 12
    4f0c:	add	ip, ip, #64, 20	; 0x40000
    4f10:	ldr	pc, [ip, #872]!	; 0x368

00004f14 <sas_fill_page@plt>:
    4f14:	add	ip, pc, #0, 12
    4f18:	add	ip, ip, #64, 20	; 0x40000
    4f1c:	ldr	pc, [ip, #864]!	; 0x360

00004f20 <sas_rle_compressed_len@plt>:
    4f20:	add	ip, pc, #0, 12
    4f24:	add	ip, ip, #64, 20	; 0x40000
    4f28:	ldr	pc, [ip, #856]!	; 0x358

00004f2c <por_ctx_init@plt>:
    4f2c:	add	ip, pc, #0, 12
    4f30:	add	ip, ip, #64, 20	; 0x40000
    4f34:	ldr	pc, [ip, #848]!	; 0x350

00004f38 <readstat_validate_variable@plt>:
    4f38:	add	ip, pc, #0, 12
    4f3c:	add	ip, ip, #64, 20	; 0x40000
    4f40:	ldr	pc, [ip, #840]!	; 0x348

00004f44 <sas_assign_tag@plt>:
    4f44:	add	ip, pc, #0, 12
    4f48:	add	ip, ip, #64, 20	; 0x40000
    4f4c:	ldr	pc, [ip, #832]!	; 0x340

00004f50 <zsav_compress_row@plt>:
    4f50:	add	ip, pc, #0, 12
    4f54:	add	ip, ip, #64, 20	; 0x40000
    4f58:	ldr	pc, [ip, #824]!	; 0x338

00004f5c <zsav_read_compressed_data@plt>:
    4f5c:	add	ip, pc, #0, 12
    4f60:	add	ip, ip, #64, 20	; 0x40000
    4f64:	ldr	pc, [ip, #816]!	; 0x330

00004f68 <readstat_get_value_label@plt>:
    4f68:	add	ip, pc, #0, 12
    4f6c:	add	ip, ip, #64, 20	; 0x40000
    4f70:	ldr	pc, [ip, #808]!	; 0x328

00004f74 <sas_rle_compress@plt>:
    4f74:	add	ip, pc, #0, 12
    4f78:	add	ip, ip, #64, 20	; 0x40000
    4f7c:	ldr	pc, [ip, #800]!	; 0x320

00004f80 <readstat_write_line_padding@plt>:
    4f80:	add	ip, pc, #0, 12
    4f84:	add	ip, ip, #64, 20	; 0x40000
    4f88:	ldr	pc, [ip, #792]!	; 0x318

00004f8c <ck_str_hash_insert@plt>:
    4f8c:	add	ip, pc, #0, 12
    4f90:	add	ip, ip, #64, 20	; 0x40000
    4f94:	ldr	pc, [ip, #784]!	; 0x310

00004f98 <strncmp@plt>:
    4f98:	add	ip, pc, #0, 12
    4f9c:	add	ip, ip, #64, 20	; 0x40000
    4fa0:	ldr	pc, [ip, #776]!	; 0x308

00004fa4 <byteswap_double@plt>:
    4fa4:	add	ip, pc, #0, 12
    4fa8:	add	ip, ip, #64, 20	; 0x40000
    4fac:	ldr	pc, [ip, #768]!	; 0x300

00004fb0 <close@plt>:
    4fb0:	add	ip, pc, #0, 12
    4fb4:	add	ip, ip, #64, 20	; 0x40000
    4fb8:	ldr	pc, [ip, #760]!	; 0x2f8

00004fbc <readstat_write_bytes_as_lines@plt>:
    4fbc:	add	ip, pc, #0, 12
    4fc0:	add	ip, ip, #64, 20	; 0x40000
    4fc4:	ldr	pc, [ip, #752]!	; 0x2f0

00004fc8 <spss_missingness_for_info@plt>:
    4fc8:	add	ip, pc, #0, 12
    4fcc:	add	ip, ip, #64, 20	; 0x40000
    4fd0:	ldr	pc, [ip, #744]!	; 0x2e8

00004fd4 <handle_variables@plt>:
    4fd4:	add	ip, pc, #0, 12
    4fd8:	add	ip, ip, #64, 20	; 0x40000
    4fdc:	ldr	pc, [ip, #736]!	; 0x2e0

00004fe0 <readstat_variable_get_type_class@plt>:
    4fe0:	add	ip, pc, #0, 12
    4fe4:	add	ip, ip, #64, 20	; 0x40000
    4fe8:	ldr	pc, [ip, #728]!	; 0x2d8

00004fec <readstat_write_space_padded_string@plt>:
    4fec:	add	ip, pc, #0, 12
    4ff0:	add	ip, ip, #64, 20	; 0x40000
    4ff4:	ldr	pc, [ip, #720]!	; 0x2d0

00004ff8 <dta_ctx_alloc@plt>:
    4ff8:	add	ip, pc, #0, 12
    4ffc:	add	ip, ip, #64, 20	; 0x40000
    5000:	ldr	pc, [ip, #712]!	; 0x2c8

Disassembly of section .text:

00005008 <call_weak_fn>:
    5008:	ldr	r3, [pc, #20]	; 5024 <call_weak_fn+0x1c>
    500c:	ldr	r2, [pc, #20]	; 5028 <call_weak_fn+0x20>
    5010:	add	r3, pc, r3
    5014:	ldr	r2, [r3, r2]
    5018:	cmp	r2, #0
    501c:	bxeq	lr
    5020:	b	4c2c <__gmon_start__@plt>
    5024:	.word	0x0003ffe8
    5028:	.word	0x000002f0

0000502c <deregister_tm_clones>:
    502c:	ldr	r0, [pc, #44]	; 5060 <deregister_tm_clones+0x34>
    5030:	ldr	r3, [pc, #44]	; 5064 <deregister_tm_clones+0x38>
    5034:	add	r0, pc, r0
    5038:	add	r3, pc, r3
    503c:	cmp	r3, r0
    5040:	ldr	r3, [pc, #32]	; 5068 <deregister_tm_clones+0x3c>
    5044:	add	r3, pc, r3
    5048:	bxeq	lr
    504c:	ldr	r2, [pc, #24]	; 506c <deregister_tm_clones+0x40>
    5050:	ldr	r3, [r3, r2]
    5054:	cmp	r3, #0
    5058:	bxeq	lr
    505c:	bx	r3
    5060:	.word	0x00041cf0
    5064:	.word	0x00041cec
    5068:	.word	0x0003ffb4
    506c:	.word	0x000002d8

00005070 <register_tm_clones>:
    5070:	ldr	r0, [pc, #56]	; 50b0 <register_tm_clones+0x40>
    5074:	ldr	r3, [pc, #56]	; 50b4 <register_tm_clones+0x44>
    5078:	add	r0, pc, r0
    507c:	add	r3, pc, r3
    5080:	sub	r1, r3, r0
    5084:	ldr	r3, [pc, #44]	; 50b8 <register_tm_clones+0x48>
    5088:	asr	r1, r1, #2
    508c:	add	r3, pc, r3
    5090:	add	r1, r1, r1, lsr #31
    5094:	asrs	r1, r1, #1
    5098:	bxeq	lr
    509c:	ldr	r2, [pc, #24]	; 50bc <register_tm_clones+0x4c>
    50a0:	ldr	r3, [r3, r2]
    50a4:	cmp	r3, #0
    50a8:	bxeq	lr
    50ac:	bx	r3
    50b0:	.word	0x00041cac
    50b4:	.word	0x00041ca8
    50b8:	.word	0x0003ff6c
    50bc:	.word	0x0000031c

000050c0 <__do_global_dtors_aux>:
    50c0:	ldr	r3, [pc, #76]	; 5114 <__do_global_dtors_aux+0x54>
    50c4:	ldr	r2, [pc, #76]	; 5118 <__do_global_dtors_aux+0x58>
    50c8:	add	r3, pc, r3
    50cc:	add	r2, pc, r2
    50d0:	ldrb	r3, [r3]
    50d4:	cmp	r3, #0
    50d8:	bxne	lr
    50dc:	ldr	r3, [pc, #56]	; 511c <__do_global_dtors_aux+0x5c>
    50e0:	push	{r4, lr}
    50e4:	ldr	r3, [r2, r3]
    50e8:	cmp	r3, #0
    50ec:	beq	50fc <__do_global_dtors_aux+0x3c>
    50f0:	ldr	r3, [pc, #40]	; 5120 <__do_global_dtors_aux+0x60>
    50f4:	ldr	r0, [pc, r3]
    50f8:	bl	4884 <__cxa_finalize@plt>
    50fc:	bl	502c <deregister_tm_clones>
    5100:	ldr	r3, [pc, #28]	; 5124 <__do_global_dtors_aux+0x64>
    5104:	mov	r2, #1
    5108:	add	r3, pc, r3
    510c:	strb	r2, [r3]
    5110:	pop	{r4, pc}
    5114:	.word	0x00041c5c
    5118:	.word	0x0003ff2c
    511c:	.word	0x000002d4
    5120:	.word	0x00040224
    5124:	.word	0x00041c1c

00005128 <frame_dummy>:
    5128:	b	5070 <register_tm_clones>

0000512c <ck_hash_str>:
    512c:	push	{fp, lr}
    5130:	mov	fp, sp
    5134:	ldrb	r3, [r0]
    5138:	cmp	r3, #0
    513c:	moveq	r1, #0
    5140:	movweq	r0, #5381	; 0x1505
    5144:	popeq	{fp, pc}
    5148:	add	r2, r0, #1
    514c:	mov	r1, #0
    5150:	movw	lr, #5381	; 0x1505
    5154:	mov	ip, #33	; 0x21
    5158:	uxtb	r0, r3
    515c:	add	r1, r1, r1, lsl #5
    5160:	umlal	r0, r1, lr, ip
    5164:	ldrb	r3, [r2], #1
    5168:	cmp	r3, #0
    516c:	mov	lr, r0
    5170:	bne	5158 <ck_hash_str+0x2c>
    5174:	pop	{fp, pc}

00005178 <ck_float_hash_lookup>:
    5178:	push	{r4, r5, fp, lr}
    517c:	add	fp, sp, #8
    5180:	sub	sp, sp, #8
    5184:	mov	r4, r0
    5188:	add	r5, sp, #2
    518c:	mov	r0, r5
    5190:	bl	51ac <ck_float2str>
    5194:	mov	r0, r5
    5198:	mov	r1, #5
    519c:	mov	r2, r4
    51a0:	bl	4adc <ck_str_n_hash_lookup@plt>
    51a4:	sub	sp, fp, #8
    51a8:	pop	{r4, r5, fp, pc}

000051ac <ck_float2str>:
    51ac:	push	{fp, lr}
    51b0:	mov	fp, sp
    51b4:	vmov	r1, s0
    51b8:	str	r1, [r0]
    51bc:	mov	r1, #0
    51c0:	strb	r1, [r0, #5]
    51c4:	ldrb	lr, [r0]
    51c8:	ldrb	r2, [r0, #1]
    51cc:	ldrb	r3, [r0, #2]
    51d0:	ldrb	ip, [r0, #3]
    51d4:	orr	r1, lr, #1
    51d8:	strb	r1, [r0]
    51dc:	orr	r1, r2, #2
    51e0:	strb	r1, [r0, #1]
    51e4:	orr	r1, r3, #4
    51e8:	strb	r1, [r0, #2]
    51ec:	orr	r1, ip, #8
    51f0:	strb	r1, [r0, #3]
    51f4:	and	r1, r2, #2
    51f8:	and	r2, lr, #1
    51fc:	orr	r1, r2, r1
    5200:	and	r2, r3, #4
    5204:	orr	r1, r1, r2
    5208:	and	r2, ip, #8
    520c:	orr	r1, r1, r2
    5210:	orr	r1, r1, #240	; 0xf0
    5214:	strb	r1, [r0, #4]
    5218:	pop	{fp, pc}

0000521c <ck_str_n_hash_lookup>:
    521c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5220:	add	fp, sp, #28
    5224:	sub	sp, sp, #20
    5228:	mov	r8, r1
    522c:	mov	r3, r0
    5230:	sub	r1, r1, #1
    5234:	mov	r0, #0
    5238:	cmp	r1, #126	; 0x7e
    523c:	bhi	5318 <ck_str_n_hash_lookup+0xfc>
    5240:	mov	r4, r2
    5244:	ldr	r1, [r2, #12]
    5248:	ldr	r2, [r2, #8]
    524c:	orrs	r1, r2, r1
    5250:	beq	5318 <ck_str_n_hash_lookup+0xfc>
    5254:	mov	r0, r3
    5258:	str	r3, [sp, #16]
    525c:	bl	4b90 <ck_hash_str@plt>
    5260:	str	r4, [sp, #4]
    5264:	ldr	sl, [r4]
    5268:	ldr	r9, [r4, #4]
    526c:	mov	r2, sl
    5270:	mov	r3, r9
    5274:	bl	24d5c <__aeabi_uldivmod>
    5278:	mov	r6, r2
    527c:	mov	r7, r3
    5280:	subs	r0, r2, #1
    5284:	sbc	r1, r3, #0
    5288:	mov	r2, sl
    528c:	mov	r3, r9
    5290:	bl	24d5c <__aeabi_uldivmod>
    5294:	eor	r0, r7, r3
    5298:	eor	r1, r6, r2
    529c:	orrs	r0, r1, r0
    52a0:	beq	5314 <ck_str_n_hash_lookup+0xf8>
    52a4:	mov	r4, r2
    52a8:	mov	r5, r3
    52ac:	str	r9, [sp, #8]
    52b0:	str	sl, [sp, #12]
    52b4:	add	r8, r8, #1
    52b8:	ldr	r0, [sp, #4]
    52bc:	ldr	r9, [r0, #16]
    52c0:	add	sl, r6, r6, lsl #5
    52c4:	mov	r0, r9
    52c8:	ldrb	r1, [r0, sl, lsl #2]!
    52cc:	cmp	r1, #0
    52d0:	beq	5314 <ck_str_n_hash_lookup+0xf8>
    52d4:	ldr	r1, [sp, #16]
    52d8:	mov	r2, r8
    52dc:	bl	4f98 <strncmp@plt>
    52e0:	cmp	r0, #0
    52e4:	beq	5320 <ck_str_n_hash_lookup+0x104>
    52e8:	adds	r0, r6, #1
    52ec:	adc	r1, r7, #0
    52f0:	ldr	r2, [sp, #12]
    52f4:	ldr	r3, [sp, #8]
    52f8:	bl	24d5c <__aeabi_uldivmod>
    52fc:	mov	r6, r2
    5300:	mov	r7, r3
    5304:	eor	r0, r3, r5
    5308:	eor	r1, r2, r4
    530c:	orrs	r0, r1, r0
    5310:	bne	52c0 <ck_str_n_hash_lookup+0xa4>
    5314:	mov	r0, #0
    5318:	sub	sp, fp, #28
    531c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5320:	add	r0, r9, sl, lsl #2
    5324:	ldr	r0, [r0, #128]	; 0x80
    5328:	sub	sp, fp, #28
    532c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005330 <ck_float_hash_insert>:
    5330:	push	{r4, r5, r6, sl, fp, lr}
    5334:	add	fp, sp, #16
    5338:	sub	sp, sp, #8
    533c:	mov	r4, r1
    5340:	mov	r5, r0
    5344:	add	r6, sp, #2
    5348:	mov	r0, r6
    534c:	bl	51ac <ck_float2str>
    5350:	mov	r0, r6
    5354:	mov	r1, #5
    5358:	mov	r2, r5
    535c:	mov	r3, r4
    5360:	bl	4d1c <ck_str_n_hash_insert@plt>
    5364:	sub	sp, fp, #16
    5368:	pop	{r4, r5, r6, sl, fp, pc}

0000536c <ck_str_n_hash_insert>:
    536c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5370:	add	fp, sp, #28
    5374:	sub	sp, sp, #28
    5378:	str	r0, [sp, #24]
    537c:	sub	r0, r1, #1
    5380:	mov	sl, #0
    5384:	cmp	r0, #126	; 0x7e
    5388:	bhi	5534 <ck_str_n_hash_insert+0x1c8>
    538c:	mov	r4, r3
    5390:	ldrd	r6, [r3]
    5394:	orrs	r0, r6, r7
    5398:	beq	5534 <ck_str_n_hash_insert+0x1c8>
    539c:	mov	r8, r2
    53a0:	str	r1, [sp, #4]
    53a4:	mov	r1, r4
    53a8:	ldr	r0, [r1, #8]!
    53ac:	str	r1, [sp, #8]
    53b0:	ldr	r1, [r1, #4]
    53b4:	bl	24c14 <__aeabi_ul2d>
    53b8:	mov	r9, r0
    53bc:	mov	r5, r1
    53c0:	mov	r0, r6
    53c4:	mov	r1, r7
    53c8:	bl	24c14 <__aeabi_ul2d>
    53cc:	vmov.f64	d16, #104	; 0x3f400000  0.750
    53d0:	vmov	d17, r0, r1
    53d4:	vmul.f64	d16, d17, d16
    53d8:	vmov	d17, r9, r5
    53dc:	vcmpe.f64	d16, d17
    53e0:	vmrs	APSR_nzcv, fpscr
    53e4:	bhi	53f8 <ck_str_n_hash_insert+0x8c>
    53e8:	mov	r0, r4
    53ec:	bl	4a58 <ck_hash_table_grow@plt>
    53f0:	cmn	r0, #1
    53f4:	beq	5534 <ck_str_n_hash_insert+0x1c8>
    53f8:	str	r8, [sp]
    53fc:	ldr	r0, [sp, #24]
    5400:	bl	4b90 <ck_hash_str@plt>
    5404:	str	r4, [sp, #20]
    5408:	ldrd	r8, [r4]
    540c:	mov	r2, r8
    5410:	mov	r3, r9
    5414:	bl	24d5c <__aeabi_uldivmod>
    5418:	mov	r4, r2
    541c:	mov	r7, r3
    5420:	orrs	r0, r2, r3
    5424:	beq	5440 <ck_str_n_hash_insert+0xd4>
    5428:	subs	r0, r4, #1
    542c:	sbc	r1, r7, #0
    5430:	mov	r2, r8
    5434:	mov	r3, r9
    5438:	bl	24d5c <__aeabi_uldivmod>
    543c:	b	5448 <ck_str_n_hash_insert+0xdc>
    5440:	subs	r2, r8, #1
    5444:	sbc	r3, r9, #0
    5448:	eor	r0, r4, r2
    544c:	eor	r1, r7, r3
    5450:	orrs	r0, r0, r1
    5454:	beq	5534 <ck_str_n_hash_insert+0x1c8>
    5458:	ldr	r0, [sp, #4]
    545c:	add	r0, r0, #1
    5460:	str	r0, [sp, #16]
    5464:	str	r2, [sp, #12]
    5468:	mov	sl, r3
    546c:	ldr	r0, [sp, #20]
    5470:	ldr	r5, [r0, #16]
    5474:	add	r6, r4, r4, lsl #5
    5478:	ldrb	r0, [r5, r6, lsl #2]!
    547c:	cmp	r0, #0
    5480:	bne	54a4 <ck_str_n_hash_insert+0x138>
    5484:	ldr	r2, [sp, #8]
    5488:	ldrd	r0, [r2]
    548c:	adds	r0, r0, #1
    5490:	adc	r1, r1, #0
    5494:	strd	r0, [r2]
    5498:	ldrb	r0, [r5]
    549c:	cmp	r0, #0
    54a0:	beq	54f8 <ck_str_n_hash_insert+0x18c>
    54a4:	mov	r0, r5
    54a8:	ldr	r1, [sp, #24]
    54ac:	ldr	r2, [sp, #16]
    54b0:	bl	4f98 <strncmp@plt>
    54b4:	cmp	r0, #0
    54b8:	beq	54f8 <ck_str_n_hash_insert+0x18c>
    54bc:	adds	r0, r4, #1
    54c0:	adc	r1, r7, #0
    54c4:	mov	r2, r8
    54c8:	mov	r3, r9
    54cc:	bl	24d5c <__aeabi_uldivmod>
    54d0:	mov	r4, r2
    54d4:	mov	r7, r3
    54d8:	mov	r3, sl
    54dc:	eor	r0, r7, sl
    54e0:	ldr	r2, [sp, #12]
    54e4:	eor	r1, r4, r2
    54e8:	orrs	r0, r1, r0
    54ec:	bne	5468 <ck_str_n_hash_insert+0xfc>
    54f0:	mov	sl, #0
    54f4:	b	5534 <ck_str_n_hash_insert+0x1c8>
    54f8:	mov	r0, r5
    54fc:	ldr	r1, [sp, #24]
    5500:	ldr	r4, [sp, #4]
    5504:	mov	r2, r4
    5508:	bl	4998 <memcpy@plt>
    550c:	ldr	r2, [sp, #20]
    5510:	ldr	r0, [r2, #16]
    5514:	add	r0, r0, r6, lsl #2
    5518:	mov	r1, #0
    551c:	strb	r1, [r0, r4]
    5520:	ldr	r0, [r2, #16]
    5524:	add	r0, r0, r6, lsl #2
    5528:	ldr	r1, [sp]
    552c:	str	r1, [r0, #128]	; 0x80
    5530:	mov	sl, #1
    5534:	mov	r0, sl
    5538:	sub	sp, fp, #28
    553c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00005540 <ck_double_hash_lookup>:
    5540:	push	{r4, r5, fp, lr}
    5544:	add	fp, sp, #8
    5548:	sub	sp, sp, #16
    554c:	mov	r4, r0
    5550:	add	r5, sp, #5
    5554:	mov	r0, r5
    5558:	bl	5574 <ck_double2str>
    555c:	mov	r0, r5
    5560:	mov	r1, #10
    5564:	mov	r2, r4
    5568:	bl	4adc <ck_str_n_hash_lookup@plt>
    556c:	sub	sp, fp, #8
    5570:	pop	{r4, r5, fp, pc}

00005574 <ck_double2str>:
    5574:	push	{r4, r5, r6, r7, fp, lr}
    5578:	add	fp, sp, #16
    557c:	vst1.8	{d0}, [r0]
    5580:	ldrb	lr, [r0]
    5584:	ldrb	r2, [r0, #1]
    5588:	ldrb	r3, [r0, #2]
    558c:	ldrb	ip, [r0, #3]
    5590:	orr	r1, lr, #1
    5594:	strb	r1, [r0]
    5598:	orr	r1, r2, #2
    559c:	strb	r1, [r0, #1]
    55a0:	orr	r1, r3, #4
    55a4:	strb	r1, [r0, #2]
    55a8:	orr	r1, ip, #8
    55ac:	strb	r1, [r0, #3]
    55b0:	ldrb	r1, [r0, #4]
    55b4:	orr	r4, r1, #1
    55b8:	strb	r4, [r0, #4]
    55bc:	ldrb	r4, [r0, #5]
    55c0:	orr	r5, r4, #2
    55c4:	strb	r5, [r0, #5]
    55c8:	ldrb	r5, [r0, #6]
    55cc:	orr	r6, r5, #4
    55d0:	strb	r6, [r0, #6]
    55d4:	ldrb	r6, [r0, #7]
    55d8:	orr	r7, r6, #8
    55dc:	strb	r7, [r0, #7]
    55e0:	and	r2, r2, #2
    55e4:	and	r7, lr, #1
    55e8:	orr	r2, r7, r2
    55ec:	and	r3, r3, #4
    55f0:	orr	r2, r2, r3
    55f4:	and	r3, ip, #8
    55f8:	orr	r2, r2, r3
    55fc:	orr	r2, r2, #240	; 0xf0
    5600:	strb	r2, [r0, #8]
    5604:	and	r2, r4, #2
    5608:	and	r1, r1, #1
    560c:	orr	r1, r1, r2
    5610:	and	r2, r5, #4
    5614:	orr	r1, r1, r2
    5618:	and	r2, r6, #8
    561c:	orr	r1, r1, r2
    5620:	orr	r1, r1, #240	; 0xf0
    5624:	strb	r1, [r0, #9]
    5628:	mov	r1, #0
    562c:	strb	r1, [r0, #10]
    5630:	pop	{r4, r5, r6, r7, fp, pc}

00005634 <ck_double_hash_insert>:
    5634:	push	{r4, r5, r6, sl, fp, lr}
    5638:	add	fp, sp, #16
    563c:	sub	sp, sp, #16
    5640:	mov	r4, r1
    5644:	mov	r5, r0
    5648:	add	r6, sp, #5
    564c:	mov	r0, r6
    5650:	bl	5574 <ck_double2str>
    5654:	mov	r0, r6
    5658:	mov	r1, #10
    565c:	mov	r2, r5
    5660:	mov	r3, r4
    5664:	bl	4d1c <ck_str_n_hash_insert@plt>
    5668:	sub	sp, fp, #16
    566c:	pop	{r4, r5, r6, sl, fp, pc}

00005670 <ck_str_hash_lookup>:
    5670:	push	{r4, r5, fp, lr}
    5674:	add	fp, sp, #8
    5678:	mov	r4, r1
    567c:	mov	r5, r0
    5680:	bl	4c8c <strlen@plt>
    5684:	mov	r1, r0
    5688:	cmp	r0, #127	; 0x7f
    568c:	movcs	r1, #127	; 0x7f
    5690:	mov	r0, r5
    5694:	mov	r2, r4
    5698:	pop	{r4, r5, fp, lr}
    569c:	b	521c <ck_str_n_hash_lookup>

000056a0 <ck_str_hash_insert>:
    56a0:	push	{r4, r5, r6, sl, fp, lr}
    56a4:	add	fp, sp, #16
    56a8:	mov	r4, r2
    56ac:	mov	r5, r1
    56b0:	mov	r6, r0
    56b4:	bl	4c8c <strlen@plt>
    56b8:	mov	r1, r0
    56bc:	cmp	r0, #127	; 0x7f
    56c0:	movcs	r1, #127	; 0x7f
    56c4:	mov	r0, r6
    56c8:	mov	r2, r5
    56cc:	mov	r3, r4
    56d0:	pop	{r4, r5, r6, sl, fp, lr}
    56d4:	b	536c <ck_str_n_hash_insert>

000056d8 <ck_hash_table_grow>:
    56d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    56dc:	add	fp, sp, #28
    56e0:	sub	sp, sp, #4
    56e4:	mov	r5, r0
    56e8:	ldrd	r8, [r0]
    56ec:	ldr	sl, [r0, #16]
    56f0:	lsl	r7, r8, #1
    56f4:	mov	r0, r7
    56f8:	mov	r1, #132	; 0x84
    56fc:	bl	47d0 <calloc@plt>
    5700:	str	r0, [r5, #16]
    5704:	cmp	r0, #0
    5708:	beq	577c <ck_hash_table_grow+0xa4>
    570c:	lsl	r0, r9, #1
    5710:	orr	r0, r0, r8, lsr #31
    5714:	mov	r6, #0
    5718:	str	r7, [r5]
    571c:	stmib	r5, {r0, r6}
    5720:	str	r6, [r5, #12]
    5724:	orrs	r0, r8, r9
    5728:	beq	5770 <ck_hash_table_grow+0x98>
    572c:	mov	r4, #1
    5730:	mov	r7, sl
    5734:	ldrb	r0, [r7]
    5738:	cmp	r0, #0
    573c:	beq	5758 <ck_hash_table_grow+0x80>
    5740:	ldr	r1, [r7, #128]	; 0x80
    5744:	mov	r0, r7
    5748:	mov	r2, r5
    574c:	bl	4f8c <ck_str_hash_insert@plt>
    5750:	cmp	r0, #0
    5754:	beq	577c <ck_hash_table_grow+0xa4>
    5758:	add	r7, r7, #132	; 0x84
    575c:	add	r0, r4, #1
    5760:	subs	r1, r4, r8
    5764:	rscs	r1, r9, #0
    5768:	mov	r4, r0
    576c:	bcc	5734 <ck_hash_table_grow+0x5c>
    5770:	mov	r0, sl
    5774:	bl	4938 <free@plt>
    5778:	b	5780 <ck_hash_table_grow+0xa8>
    577c:	mvn	r6, #0
    5780:	mov	r0, r6
    5784:	sub	sp, fp, #28
    5788:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000578c <ck_hash_table_init>:
    578c:	push	{r4, r5, r6, sl, fp, lr}
    5790:	add	fp, sp, #16
    5794:	mov	r6, r0
    5798:	mov	r0, #24
    579c:	bl	4b9c <malloc@plt>
    57a0:	mov	r5, #0
    57a4:	cmp	r0, #0
    57a8:	beq	57ec <ck_hash_table_init+0x60>
    57ac:	mov	r4, r0
    57b0:	add	r0, r6, r6, lsl #5
    57b4:	lsl	r0, r0, #3
    57b8:	bl	4b9c <malloc@plt>
    57bc:	str	r0, [r4, #16]
    57c0:	cmp	r0, #0
    57c4:	beq	57f4 <ck_hash_table_init+0x68>
    57c8:	mov	r0, #0
    57cc:	lsl	r1, r6, #1
    57d0:	str	r1, [r4]
    57d4:	str	r0, [r4, #4]
    57d8:	str	r0, [r4, #8]
    57dc:	str	r0, [r4, #12]
    57e0:	mov	r0, r4
    57e4:	bl	4890 <ck_hash_table_wipe@plt>
    57e8:	mov	r5, r4
    57ec:	mov	r0, r5
    57f0:	pop	{r4, r5, r6, sl, fp, pc}
    57f4:	mov	r0, r4
    57f8:	bl	4938 <free@plt>
    57fc:	mov	r0, r5
    5800:	pop	{r4, r5, r6, sl, fp, pc}

00005804 <ck_hash_table_wipe>:
    5804:	ldr	r1, [r0]
    5808:	ldr	r0, [r0, #16]
    580c:	add	r1, r1, r1, lsl #5
    5810:	lsl	r2, r1, #2
    5814:	mov	r1, #0
    5818:	b	4d28 <memset@plt>

0000581c <ck_hash_table_free>:
    581c:	push	{r4, sl, fp, lr}
    5820:	add	fp, sp, #8
    5824:	mov	r4, r0
    5828:	ldr	r0, [r0, #16]
    582c:	bl	4938 <free@plt>
    5830:	mov	r0, r4
    5834:	pop	{r4, sl, fp, lr}
    5838:	b	4938 <free@plt>

0000583c <machine_is_little_endian>:
    583c:	mov	r0, #1
    5840:	bx	lr

00005844 <ones_to_twos_complement1>:
    5844:	bx	lr

00005848 <ones_to_twos_complement2>:
    5848:	and	r1, r0, #32768	; 0x8000
    584c:	add	r0, r0, r1, lsr #15
    5850:	sxth	r0, r0
    5854:	bx	lr

00005858 <ones_to_twos_complement4>:
    5858:	add	r0, r0, r0, lsr #31
    585c:	bx	lr

00005860 <twos_to_ones_complement1>:
    5860:	bx	lr

00005864 <twos_to_ones_complement2>:
    5864:	add	r0, r0, r0, lsr #15
    5868:	sxth	r0, r0
    586c:	bx	lr

00005870 <twos_to_ones_complement4>:
    5870:	add	r0, r0, r0, asr #31
    5874:	bx	lr

00005878 <byteswap2>:
    5878:	rev16	r0, r0
    587c:	bx	lr

00005880 <byteswap4>:
    5880:	rev	r0, r0
    5884:	bx	lr

00005888 <byteswap8>:
    5888:	rev	r2, r1
    588c:	rev	r1, r0
    5890:	mov	r0, r2
    5894:	bx	lr

00005898 <byteswap_float>:
    5898:	push	{fp, lr}
    589c:	mov	fp, sp
    58a0:	vmov	r0, s0
    58a4:	bl	480c <byteswap4@plt>
    58a8:	vmov	s0, r0
    58ac:	pop	{fp, pc}

000058b0 <byteswap_double>:
    58b0:	push	{fp, lr}
    58b4:	mov	fp, sp
    58b8:	vmov	r0, r1, d0
    58bc:	bl	47f4 <byteswap8@plt>
    58c0:	vmov	d0, r0, r1
    58c4:	pop	{fp, pc}

000058c8 <readstat_convert>:
    58c8:	push	{r4, r5, r6, sl, fp, lr}
    58cc:	add	fp, sp, #16
    58d0:	sub	sp, sp, #24
    58d4:	mov	r5, r1
    58d8:	mov	r4, r0
    58dc:	str	r2, [sp, #20]
    58e0:	sub	r0, r2, #1
    58e4:	ldr	ip, [fp, #8]
    58e8:	mov	r6, r3
    58ec:	cmp	r3, #0
    58f0:	beq	5904 <readstat_convert+0x3c>
    58f4:	ldrb	r1, [r0, r6]
    58f8:	sub	r3, r6, #1
    58fc:	cmp	r1, #32
    5900:	beq	58e8 <readstat_convert+0x20>
    5904:	str	r6, [sp, #16]
    5908:	mov	r0, #19
    590c:	cmp	r5, #0
    5910:	beq	598c <readstat_convert+0xc4>
    5914:	cmp	ip, #0
    5918:	beq	5968 <readstat_convert+0xa0>
    591c:	sub	r0, r5, #1
    5920:	str	r0, [sp, #12]
    5924:	str	r4, [sp, #8]
    5928:	add	r0, sp, #12
    592c:	str	r0, [sp]
    5930:	add	r1, sp, #20
    5934:	add	r2, sp, #16
    5938:	add	r3, sp, #8
    593c:	mov	r0, ip
    5940:	bl	4860 <iconv@plt>
    5944:	cmn	r0, #1
    5948:	beq	5994 <readstat_convert+0xcc>
    594c:	ldr	r0, [sp, #12]
    5950:	mvn	r0, r0
    5954:	add	r1, r0, r5
    5958:	mov	r0, #0
    595c:	strb	r0, [r4, r1]
    5960:	sub	sp, fp, #16
    5964:	pop	{r4, r5, r6, sl, fp, pc}
    5968:	add	r1, r6, #1
    596c:	cmp	r1, r5
    5970:	bhi	598c <readstat_convert+0xc4>
    5974:	mov	r0, r4
    5978:	mov	r1, r2
    597c:	mov	r2, r6
    5980:	bl	4998 <memcpy@plt>
    5984:	mov	r0, #0
    5988:	strb	r0, [r4, r6]
    598c:	sub	sp, fp, #16
    5990:	pop	{r4, r5, r6, sl, fp, pc}
    5994:	bl	4cec <__errno_location@plt>
    5998:	ldr	r0, [r0]
    599c:	cmp	r0, #7
    59a0:	beq	59c0 <readstat_convert+0xf8>
    59a4:	cmp	r0, #22
    59a8:	beq	594c <readstat_convert+0x84>
    59ac:	cmp	r0, #84	; 0x54
    59b0:	moveq	r0, #17
    59b4:	movne	r0, #16
    59b8:	sub	sp, fp, #16
    59bc:	pop	{r4, r5, r6, sl, fp, pc}
    59c0:	mov	r0, #19
    59c4:	sub	sp, fp, #16
    59c8:	pop	{r4, r5, r6, sl, fp, pc}

000059cc <readstat_error_message>:
    59cc:	cmp	r0, #39	; 0x27
    59d0:	ldrhi	r0, [pc, #24]	; 59f0 <readstat_error_message+0x24>
    59d4:	addhi	r0, pc, r0
    59d8:	bxhi	lr
    59dc:	ldr	r1, [pc, #8]	; 59ec <readstat_error_message+0x20>
    59e0:	add	r1, pc, r1
    59e4:	ldr	r0, [r1, r0, lsl #2]
    59e8:	bx	lr
    59ec:	.word	0x0003f478
    59f0:	.word	0x0001fd84

000059f4 <unistd_open_handler>:
    59f4:	push	{r4, sl, fp, lr}
    59f8:	add	fp, sp, #8
    59fc:	mov	r4, r1
    5a00:	mov	r1, #0
    5a04:	bl	4c38 <open@plt>
    5a08:	str	r0, [r4]
    5a0c:	pop	{r4, sl, fp, pc}

00005a10 <unistd_close_handler>:
    5a10:	ldr	r0, [r0]
    5a14:	cmn	r0, #1
    5a18:	moveq	r0, #0
    5a1c:	bxeq	lr
    5a20:	b	4fb0 <close@plt>

00005a24 <unistd_seek_handler>:
    5a24:	mov	r3, r1
    5a28:	cmp	r1, #2
    5a2c:	mvnhi	r0, #0
    5a30:	bxhi	lr
    5a34:	mov	r1, r0
    5a38:	ldr	r0, [r2]
    5a3c:	mov	r2, r3
    5a40:	b	49e0 <lseek@plt>

00005a44 <unistd_read_handler>:
    5a44:	mov	r3, r1
    5a48:	mov	r1, r0
    5a4c:	ldr	r0, [r2]
    5a50:	mov	r2, r3
    5a54:	b	48b4 <read@plt>

00005a58 <unistd_update_handler>:
    5a58:	push	{r4, r5, r6, sl, fp, lr}
    5a5c:	add	fp, sp, #16
    5a60:	cmp	r1, #0
    5a64:	moveq	r0, #0
    5a68:	popeq	{r4, r5, r6, sl, fp, pc}
    5a6c:	mov	r5, r2
    5a70:	mov	r4, r1
    5a74:	mov	r6, r0
    5a78:	ldr	r0, [r3]
    5a7c:	mov	r1, #0
    5a80:	mov	r2, #1
    5a84:	bl	49e0 <lseek@plt>
    5a88:	cmn	r0, #1
    5a8c:	moveq	r0, #15
    5a90:	popeq	{r4, r5, r6, sl, fp, pc}
    5a94:	vmov	s0, r6
    5a98:	vmov	s2, r0
    5a9c:	vcvt.f64.s32	d16, s0
    5aa0:	vcvt.f64.s32	d17, s2
    5aa4:	vdiv.f64	d0, d17, d16
    5aa8:	mov	r0, r5
    5aac:	blx	r4
    5ab0:	cmp	r0, #0
    5ab4:	movwne	r0, #4
    5ab8:	pop	{r4, r5, r6, sl, fp, pc}

00005abc <unistd_io_init>:
    5abc:	push	{r4, r5, fp, lr}
    5ac0:	add	fp, sp, #8
    5ac4:	mov	r4, r0
    5ac8:	ldr	r1, [pc, #164]	; 5b74 <unistd_io_init+0xb8>
    5acc:	ldr	r1, [pc, r1]
    5ad0:	bl	47e8 <readstat_set_open_handler@plt>
    5ad4:	cmp	r0, #0
    5ad8:	bne	5b70 <unistd_io_init+0xb4>
    5adc:	ldr	r1, [pc, #148]	; 5b78 <unistd_io_init+0xbc>
    5ae0:	ldr	r1, [pc, r1]
    5ae4:	mov	r0, r4
    5ae8:	bl	4f08 <readstat_set_close_handler@plt>
    5aec:	cmp	r0, #0
    5af0:	bne	5b70 <unistd_io_init+0xb4>
    5af4:	ldr	r1, [pc, #128]	; 5b7c <unistd_io_init+0xc0>
    5af8:	ldr	r1, [pc, r1]
    5afc:	mov	r0, r4
    5b00:	bl	47dc <readstat_set_seek_handler@plt>
    5b04:	cmp	r0, #0
    5b08:	bne	5b70 <unistd_io_init+0xb4>
    5b0c:	ldr	r1, [pc, #108]	; 5b80 <unistd_io_init+0xc4>
    5b10:	ldr	r1, [pc, r1]
    5b14:	mov	r0, r4
    5b18:	bl	4dd0 <readstat_set_read_handler@plt>
    5b1c:	cmp	r0, #0
    5b20:	bne	5b70 <unistd_io_init+0xb4>
    5b24:	ldr	r1, [pc, #88]	; 5b84 <unistd_io_init+0xc8>
    5b28:	ldr	r1, [pc, r1]
    5b2c:	mov	r0, r4
    5b30:	bl	4908 <readstat_set_update_handler@plt>
    5b34:	mov	r1, r0
    5b38:	mov	r0, #0
    5b3c:	cmp	r1, #0
    5b40:	popne	{r4, r5, fp, pc}
    5b44:	mov	r5, #1
    5b48:	mov	r0, #1
    5b4c:	mov	r1, #4
    5b50:	bl	47d0 <calloc@plt>
    5b54:	mov	r1, r0
    5b58:	mvn	r0, #0
    5b5c:	str	r0, [r1]
    5b60:	mov	r0, r4
    5b64:	bl	4b6c <readstat_set_io_ctx@plt>
    5b68:	ldr	r1, [r4, #32]
    5b6c:	str	r5, [r1, #24]
    5b70:	pop	{r4, r5, fp, pc}
    5b74:	.word	0x0003f814
    5b78:	.word	0x0003f830
    5b7c:	.word	0x0003f814
    5b80:	.word	0x0003f7b4
    5b84:	.word	0x0003f7d8

00005b88 <readstat_malloc>:
    5b88:	sub	r1, r0, #1
    5b8c:	movw	r2, #61439	; 0xefff
    5b90:	movt	r2, #255	; 0xff
    5b94:	cmp	r1, r2
    5b98:	movhi	r0, #0
    5b9c:	bxhi	lr
    5ba0:	b	4b9c <malloc@plt>

00005ba4 <readstat_calloc>:
    5ba4:	movw	r2, #61440	; 0xf000
    5ba8:	movt	r2, #255	; 0xff
    5bac:	cmp	r0, r2
    5bb0:	bhi	5bc4 <readstat_calloc+0x20>
    5bb4:	cmp	r1, r2
    5bb8:	mulls	r3, r1, r0
    5bbc:	cmpls	r3, r2
    5bc0:	bls	5bcc <readstat_calloc+0x28>
    5bc4:	mov	r0, #0
    5bc8:	bx	lr
    5bcc:	cmp	r0, #0
    5bd0:	cmpne	r1, #0
    5bd4:	beq	5bc4 <readstat_calloc+0x20>
    5bd8:	b	47d0 <calloc@plt>

00005bdc <readstat_realloc>:
    5bdc:	sub	r2, r1, #1
    5be0:	movw	r3, #61440	; 0xf000
    5be4:	movt	r3, #255	; 0xff
    5be8:	cmp	r2, r3
    5bec:	bcc	5c10 <readstat_realloc+0x34>
    5bf0:	cmp	r0, #0
    5bf4:	beq	5c08 <readstat_realloc+0x2c>
    5bf8:	push	{fp, lr}
    5bfc:	mov	fp, sp
    5c00:	bl	4938 <free@plt>
    5c04:	pop	{fp, lr}
    5c08:	mov	r0, #0
    5c0c:	bx	lr
    5c10:	b	4a70 <realloc@plt>

00005c14 <readstat_get_row_count>:
    5c14:	ldr	r0, [r0]
    5c18:	bx	lr

00005c1c <readstat_get_var_count>:
    5c1c:	ldr	r0, [r0, #8]
    5c20:	bx	lr

00005c24 <readstat_get_creation_time>:
    5c24:	ldr	r0, [r0, #16]
    5c28:	bx	lr

00005c2c <readstat_get_modified_time>:
    5c2c:	ldr	r0, [r0, #20]
    5c30:	bx	lr

00005c34 <readstat_get_file_format_version>:
    5c34:	ldr	r0, [r0, #24]
    5c38:	bx	lr

00005c3c <readstat_get_file_format_is_64bit>:
    5c3c:	ldrb	r0, [r0, #52]	; 0x34
    5c40:	and	r0, r0, #1
    5c44:	bx	lr

00005c48 <readstat_get_compression>:
    5c48:	ldr	r0, [r0, #32]
    5c4c:	bx	lr

00005c50 <readstat_get_endianness>:
    5c50:	ldr	r0, [r0, #36]	; 0x24
    5c54:	bx	lr

00005c58 <readstat_get_file_label>:
    5c58:	ldr	r0, [r0, #44]	; 0x2c
    5c5c:	bx	lr

00005c60 <readstat_get_file_encoding>:
    5c60:	ldr	r0, [r0, #48]	; 0x30
    5c64:	bx	lr

00005c68 <readstat_get_table_name>:
    5c68:	ldr	r0, [r0, #40]	; 0x28
    5c6c:	bx	lr

00005c70 <readstat_parser_init>:
    5c70:	push	{r4, sl, fp, lr}
    5c74:	add	fp, sp, #8
    5c78:	mov	r0, #1
    5c7c:	mov	r1, #52	; 0x34
    5c80:	bl	47d0 <calloc@plt>
    5c84:	mov	r4, r0
    5c88:	mov	r0, #1
    5c8c:	mov	r1, #28
    5c90:	bl	47d0 <calloc@plt>
    5c94:	str	r0, [r4, #32]
    5c98:	mov	r0, r4
    5c9c:	bl	49ec <unistd_io_init@plt>
    5ca0:	cmp	r0, #0
    5ca4:	beq	5cbc <readstat_parser_init+0x4c>
    5ca8:	mov	r0, r4
    5cac:	bl	4b84 <readstat_parser_free@plt>
    5cb0:	mov	r4, #0
    5cb4:	mov	r0, r4
    5cb8:	pop	{r4, sl, fp, pc}
    5cbc:	ldr	r0, [pc, #12]	; 5cd0 <readstat_parser_init+0x60>
    5cc0:	add	r0, pc, r0
    5cc4:	str	r0, [r4, #40]	; 0x28
    5cc8:	mov	r0, r4
    5ccc:	pop	{r4, sl, fp, pc}
    5cd0:	.word	0x0001faa6

00005cd4 <readstat_parser_free>:
    5cd4:	cmp	r0, #0
    5cd8:	bxeq	lr
    5cdc:	push	{r4, sl, fp, lr}
    5ce0:	add	fp, sp, #8
    5ce4:	mov	r4, r0
    5ce8:	ldr	r0, [r0, #32]
    5cec:	cmp	r0, #0
    5cf0:	beq	5d08 <readstat_parser_free+0x34>
    5cf4:	mov	r0, r4
    5cf8:	mov	r1, #0
    5cfc:	bl	4b6c <readstat_set_io_ctx@plt>
    5d00:	ldr	r0, [r4, #32]
    5d04:	bl	4938 <free@plt>
    5d08:	mov	r0, r4
    5d0c:	pop	{r4, sl, fp, lr}
    5d10:	b	4938 <free@plt>

00005d14 <readstat_set_io_ctx>:
    5d14:	push	{r4, r5, fp, lr}
    5d18:	add	fp, sp, #8
    5d1c:	mov	r4, r1
    5d20:	mov	r5, r0
    5d24:	ldr	r0, [r0, #32]
    5d28:	ldr	r1, [r0, #24]
    5d2c:	cmp	r1, #0
    5d30:	beq	5d3c <readstat_set_io_ctx+0x28>
    5d34:	ldr	r0, [r0, #20]
    5d38:	bl	4938 <free@plt>
    5d3c:	ldr	r0, [r5, #32]
    5d40:	mov	r1, #0
    5d44:	str	r4, [r0, #20]
    5d48:	str	r1, [r0, #24]
    5d4c:	mov	r0, #0
    5d50:	pop	{r4, r5, fp, pc}

00005d54 <readstat_set_metadata_handler>:
    5d54:	str	r1, [r0]
    5d58:	mov	r0, #0
    5d5c:	bx	lr

00005d60 <readstat_set_note_handler>:
    5d60:	str	r1, [r0, #4]
    5d64:	mov	r0, #0
    5d68:	bx	lr

00005d6c <readstat_set_variable_handler>:
    5d6c:	str	r1, [r0, #8]
    5d70:	mov	r0, #0
    5d74:	bx	lr

00005d78 <readstat_set_value_handler>:
    5d78:	str	r1, [r0, #16]
    5d7c:	mov	r0, #0
    5d80:	bx	lr

00005d84 <readstat_set_value_label_handler>:
    5d84:	str	r1, [r0, #20]
    5d88:	mov	r0, #0
    5d8c:	bx	lr

00005d90 <readstat_set_error_handler>:
    5d90:	str	r1, [r0, #24]
    5d94:	mov	r0, #0
    5d98:	bx	lr

00005d9c <readstat_set_progress_handler>:
    5d9c:	str	r1, [r0, #28]
    5da0:	mov	r0, #0
    5da4:	bx	lr

00005da8 <readstat_set_fweight_handler>:
    5da8:	str	r1, [r0, #12]
    5dac:	mov	r0, #0
    5db0:	bx	lr

00005db4 <readstat_set_open_handler>:
    5db4:	ldr	r0, [r0, #32]
    5db8:	str	r1, [r0]
    5dbc:	mov	r0, #0
    5dc0:	bx	lr

00005dc4 <readstat_set_close_handler>:
    5dc4:	ldr	r0, [r0, #32]
    5dc8:	str	r1, [r0, #4]
    5dcc:	mov	r0, #0
    5dd0:	bx	lr

00005dd4 <readstat_set_seek_handler>:
    5dd4:	ldr	r0, [r0, #32]
    5dd8:	str	r1, [r0, #8]
    5ddc:	mov	r0, #0
    5de0:	bx	lr

00005de4 <readstat_set_read_handler>:
    5de4:	ldr	r0, [r0, #32]
    5de8:	str	r1, [r0, #12]
    5dec:	mov	r0, #0
    5df0:	bx	lr

00005df4 <readstat_set_update_handler>:
    5df4:	ldr	r0, [r0, #32]
    5df8:	str	r1, [r0, #16]
    5dfc:	mov	r0, #0
    5e00:	bx	lr

00005e04 <readstat_set_file_character_encoding>:
    5e04:	str	r1, [r0, #36]	; 0x24
    5e08:	mov	r0, #0
    5e0c:	bx	lr

00005e10 <readstat_set_handler_character_encoding>:
    5e10:	str	r1, [r0, #40]	; 0x28
    5e14:	mov	r0, #0
    5e18:	bx	lr

00005e1c <readstat_set_row_limit>:
    5e1c:	str	r1, [r0, #44]	; 0x2c
    5e20:	mov	r0, #0
    5e24:	bx	lr

00005e28 <readstat_set_row_offset>:
    5e28:	str	r1, [r0, #48]	; 0x30
    5e2c:	mov	r0, #0
    5e30:	bx	lr
    5e34:	andeq	r0, r0, r0

00005e38 <readstat_type_class>:
    5e38:	mov	r1, r0
    5e3c:	mov	r0, #0
    5e40:	cmp	r1, #0
    5e44:	cmpne	r1, #6
    5e48:	movne	r0, #1
    5e4c:	bx	lr

00005e50 <readstat_value_type>:
    5e50:	mov	r0, r2
    5e54:	bx	lr

00005e58 <readstat_value_type_class>:
    5e58:	mov	r0, r2
    5e5c:	b	5e38 <readstat_type_class>

00005e60 <readstat_value_tag>:
    5e60:	uxtb	r0, r3
    5e64:	bx	lr

00005e68 <readstat_value_is_missing>:
    5e68:	mov	ip, #1
    5e6c:	tst	r3, #768	; 0x300
    5e70:	beq	5e7c <readstat_value_is_missing+0x14>
    5e74:	mov	r0, ip
    5e78:	bx	lr
    5e7c:	ldr	ip, [sp]
    5e80:	cmp	ip, #0
    5e84:	beq	5e8c <readstat_value_is_missing+0x24>
    5e88:	b	5e98 <readstat_value_is_defined_missing>
    5e8c:	mov	ip, #0
    5e90:	mov	r0, ip
    5e94:	bx	lr

00005e98 <readstat_value_is_defined_missing>:
    5e98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    5e9c:	add	fp, sp, #24
    5ea0:	mov	r8, r3
    5ea4:	mov	r9, r2
    5ea8:	mov	r7, r1
    5eac:	mov	r4, r0
    5eb0:	bl	4b60 <readstat_value_type_class@plt>
    5eb4:	mov	r5, r0
    5eb8:	ldr	r6, [fp, #8]
    5ebc:	mov	r0, r6
    5ec0:	bl	4fe0 <readstat_variable_get_type_class@plt>
    5ec4:	cmp	r5, r0
    5ec8:	bne	5efc <readstat_value_is_defined_missing+0x64>
    5ecc:	cmp	r5, #1
    5ed0:	beq	5f04 <readstat_value_is_defined_missing+0x6c>
    5ed4:	cmp	r5, #0
    5ed8:	bne	5efc <readstat_value_is_defined_missing+0x64>
    5edc:	mov	r0, r4
    5ee0:	mov	r1, r7
    5ee4:	mov	r2, r9
    5ee8:	mov	r3, r8
    5eec:	bl	4a1c <readstat_string_value@plt>
    5ef0:	mov	r1, r6
    5ef4:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    5ef8:	b	5f34 <readstat_string_is_defined_missing>
    5efc:	mov	r0, #0
    5f00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5f04:	mov	r0, r4
    5f08:	mov	r1, r7
    5f0c:	mov	r2, r9
    5f10:	mov	r3, r8
    5f14:	bl	4c44 <readstat_double_value@plt>
    5f18:	mov	r0, r6
    5f1c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
    5f20:	b	6040 <readstat_double_is_defined_missing>

00005f24 <readstat_value_is_system_missing>:
    5f24:	ubfx	r0, r3, #8, #1
    5f28:	bx	lr

00005f2c <readstat_value_is_tagged_missing>:
    5f2c:	ubfx	r0, r3, #9, #1
    5f30:	bx	lr

00005f34 <readstat_string_is_defined_missing>:
    5f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5f38:	add	fp, sp, #28
    5f3c:	sub	sp, sp, #44	; 0x2c
    5f40:	mov	r5, #0
    5f44:	str	r0, [sp, #4]
    5f48:	cmp	r0, #0
    5f4c:	beq	6014 <readstat_string_is_defined_missing+0xe0>
    5f50:	mov	r4, r1
    5f54:	mov	r0, r1
    5f58:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
    5f5c:	cmp	r0, #1
    5f60:	blt	6014 <readstat_string_is_defined_missing+0xe0>
    5f64:	mov	r6, r0
    5f68:	add	r0, sp, #8
    5f6c:	add	r9, r0, #8
    5f70:	add	r0, sp, #24
    5f74:	add	sl, r0, #8
    5f78:	mov	r7, #0
    5f7c:	add	r0, sp, #24
    5f80:	mov	r1, r4
    5f84:	mov	r2, r7
    5f88:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
    5f8c:	ldrd	r2, [sl]
    5f90:	ldr	r0, [sp, #24]
    5f94:	ldr	r1, [sp, #28]
    5f98:	bl	4a1c <readstat_string_value@plt>
    5f9c:	mov	r5, r0
    5fa0:	add	r0, sp, #8
    5fa4:	mov	r1, r4
    5fa8:	mov	r2, r7
    5fac:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
    5fb0:	ldrd	r2, [r9]
    5fb4:	ldr	r0, [sp, #8]
    5fb8:	ldr	r1, [sp, #12]
    5fbc:	bl	4a1c <readstat_string_value@plt>
    5fc0:	cmp	r5, #0
    5fc4:	movne	r8, r0
    5fc8:	cmpne	r0, #0
    5fcc:	bne	5fe0 <readstat_string_is_defined_missing+0xac>
    5fd0:	add	r7, r7, #1
    5fd4:	cmp	r7, r6
    5fd8:	blt	5f7c <readstat_string_is_defined_missing+0x48>
    5fdc:	b	6010 <readstat_string_is_defined_missing+0xdc>
    5fe0:	ldr	r0, [sp, #4]
    5fe4:	mov	r1, r5
    5fe8:	bl	4878 <strcmp@plt>
    5fec:	cmp	r0, #0
    5ff0:	blt	5fd0 <readstat_string_is_defined_missing+0x9c>
    5ff4:	ldr	r0, [sp, #4]
    5ff8:	mov	r1, r8
    5ffc:	bl	4878 <strcmp@plt>
    6000:	cmp	r0, #1
    6004:	bge	5fd0 <readstat_string_is_defined_missing+0x9c>
    6008:	mov	r5, #1
    600c:	b	6014 <readstat_string_is_defined_missing+0xe0>
    6010:	mov	r5, #0
    6014:	mov	r0, r5
    6018:	sub	sp, fp, #28
    601c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00006020 <readstat_string_value>:
    6020:	push	{r4, sl, fp, lr}
    6024:	add	fp, sp, #8
    6028:	mov	r4, r0
    602c:	bl	4ddc <readstat_value_type@plt>
    6030:	cmp	r0, #0
    6034:	movne	r4, #0
    6038:	mov	r0, r4
    603c:	pop	{r4, sl, fp, pc}

00006040 <readstat_double_is_defined_missing>:
    6040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6044:	add	fp, sp, #28
    6048:	sub	sp, sp, #4
    604c:	vpush	{d8-d9}
    6050:	sub	sp, sp, #32
    6054:	mov	r4, r0
    6058:	vmov.f64	d8, d0
    605c:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
    6060:	cmp	r0, #1
    6064:	blt	60e4 <readstat_double_is_defined_missing+0xa4>
    6068:	mov	r5, r0
    606c:	mov	r8, sp
    6070:	add	sl, r8, #8
    6074:	add	r9, sp, #16
    6078:	add	r7, r9, #8
    607c:	mov	r6, #0
    6080:	mov	r0, r9
    6084:	mov	r1, r4
    6088:	mov	r2, r6
    608c:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
    6090:	ldrd	r2, [r7]
    6094:	ldr	r0, [sp, #16]
    6098:	ldr	r1, [sp, #20]
    609c:	bl	4c44 <readstat_double_value@plt>
    60a0:	vmov.f64	d9, d0
    60a4:	mov	r0, r8
    60a8:	mov	r1, r4
    60ac:	mov	r2, r6
    60b0:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
    60b4:	ldrd	r2, [sl]
    60b8:	ldm	sp, {r0, r1}
    60bc:	bl	4c44 <readstat_double_value@plt>
    60c0:	vcmpe.f64	d9, d8
    60c4:	vmrs	APSR_nzcv, fpscr
    60c8:	bhi	60d8 <readstat_double_is_defined_missing+0x98>
    60cc:	vcmpe.f64	d0, d8
    60d0:	vmrs	APSR_nzcv, fpscr
    60d4:	bge	60ec <readstat_double_is_defined_missing+0xac>
    60d8:	add	r6, r6, #1
    60dc:	cmp	r6, r5
    60e0:	blt	6080 <readstat_double_is_defined_missing+0x40>
    60e4:	mov	r0, #0
    60e8:	b	60f0 <readstat_double_is_defined_missing+0xb0>
    60ec:	mov	r0, #1
    60f0:	sub	sp, fp, #48	; 0x30
    60f4:	vpop	{d8-d9}
    60f8:	add	sp, sp, #4
    60fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00006100 <readstat_double_value>:
    6100:	push	{r4, r5, r6, sl, fp, lr}
    6104:	add	fp, sp, #16
    6108:	mov	r6, r2
    610c:	mov	r5, r1
    6110:	mov	r4, r0
    6114:	bl	4950 <readstat_value_is_system_missing@plt>
    6118:	vldr	d0, [pc, #112]	; 6190 <readstat_double_value+0x90>
    611c:	cmp	r0, #0
    6120:	beq	6128 <readstat_double_value+0x28>
    6124:	pop	{r4, r5, r6, sl, fp, pc}
    6128:	sub	r0, r6, #1
    612c:	cmp	r0, #4
    6130:	pophi	{r4, r5, r6, sl, fp, pc}
    6134:	add	r1, pc, #4
    6138:	ldr	r0, [r1, r0, lsl #2]
    613c:	add	pc, r1, r0
    6140:	.word	0x00000014
    6144:	.word	0x0000001c
    6148:	.word	0x0000002c
    614c:	.word	0x00000038
    6150:	.word	0x00000044
    6154:	sxtb	r0, r4
    6158:	b	6160 <readstat_double_value+0x60>
    615c:	sxth	r0, r4
    6160:	vmov	s0, r0
    6164:	vcvt.f64.s32	d0, s0
    6168:	pop	{r4, r5, r6, sl, fp, pc}
    616c:	vmov	s0, r4
    6170:	vcvt.f64.s32	d0, s0
    6174:	pop	{r4, r5, r6, sl, fp, pc}
    6178:	vmov	s0, r4
    617c:	vcvt.f64.f32	d0, s0
    6180:	pop	{r4, r5, r6, sl, fp, pc}
    6184:	vmov	d0, r4, r5
    6188:	pop	{r4, r5, r6, sl, fp, pc}
    618c:	nop	{0}
    6190:	.word	0x00000000
    6194:	.word	0x7ff80000

00006198 <readstat_int8_value>:
    6198:	push	{r4, r5, r6, sl, fp, lr}
    619c:	add	fp, sp, #16
    61a0:	mov	r6, r2
    61a4:	mov	r5, r1
    61a8:	mov	r4, r0
    61ac:	bl	4950 <readstat_value_is_system_missing@plt>
    61b0:	cmp	r0, #0
    61b4:	beq	61c4 <readstat_int8_value+0x2c>
    61b8:	mov	r4, #0
    61bc:	uxtb	r0, r4
    61c0:	pop	{r4, r5, r6, sl, fp, pc}
    61c4:	sub	r0, r6, #1
    61c8:	cmp	r0, #3
    61cc:	bcs	61d8 <readstat_int8_value+0x40>
    61d0:	uxtb	r0, r4
    61d4:	pop	{r4, r5, r6, sl, fp, pc}
    61d8:	cmp	r6, #4
    61dc:	beq	61f4 <readstat_int8_value+0x5c>
    61e0:	cmp	r6, #5
    61e4:	bne	61b8 <readstat_int8_value+0x20>
    61e8:	vmov	d16, r4, r5
    61ec:	vcvt.u32.f64	s0, d16
    61f0:	b	61fc <readstat_int8_value+0x64>
    61f4:	vmov	s0, r4
    61f8:	vcvt.u32.f32	s0, s0
    61fc:	vmov	r4, s0
    6200:	uxtb	r0, r4
    6204:	pop	{r4, r5, r6, sl, fp, pc}

00006208 <readstat_int16_value>:
    6208:	push	{r4, r5, r6, sl, fp, lr}
    620c:	add	fp, sp, #16
    6210:	mov	r6, r2
    6214:	mov	r5, r1
    6218:	mov	r4, r0
    621c:	bl	4950 <readstat_value_is_system_missing@plt>
    6220:	cmp	r0, #0
    6224:	beq	6234 <readstat_int16_value+0x2c>
    6228:	mov	r4, #0
    622c:	sxth	r0, r4
    6230:	pop	{r4, r5, r6, sl, fp, pc}
    6234:	sub	r0, r6, #1
    6238:	cmp	r0, #4
    623c:	bhi	6228 <readstat_int16_value+0x20>
    6240:	add	r1, pc, #4
    6244:	ldr	r0, [r1, r0, lsl #2]
    6248:	add	pc, r1, r0
    624c:	.word	0x00000014
    6250:	.word	0xffffffe0
    6254:	.word	0xffffffe0
    6258:	.word	0x00000020
    625c:	.word	0x0000002c
    6260:	sxtb	r4, r4
    6264:	sxth	r0, r4
    6268:	pop	{r4, r5, r6, sl, fp, pc}
    626c:	vmov	s0, r4
    6270:	vcvt.s32.f32	s0, s0
    6274:	b	6280 <readstat_int16_value+0x78>
    6278:	vmov	d16, r4, r5
    627c:	vcvt.s32.f64	s0, d16
    6280:	vmov	r4, s0
    6284:	sxth	r0, r4
    6288:	pop	{r4, r5, r6, sl, fp, pc}

0000628c <readstat_int32_value>:
    628c:	push	{r4, r5, r6, sl, fp, lr}
    6290:	add	fp, sp, #16
    6294:	mov	r6, r2
    6298:	mov	r5, r1
    629c:	mov	r4, r0
    62a0:	bl	4950 <readstat_value_is_system_missing@plt>
    62a4:	cmp	r0, #0
    62a8:	beq	62b8 <readstat_int32_value+0x2c>
    62ac:	mov	r4, #0
    62b0:	mov	r0, r4
    62b4:	pop	{r4, r5, r6, sl, fp, pc}
    62b8:	sub	r0, r6, #1
    62bc:	cmp	r0, #4
    62c0:	bhi	62ac <readstat_int32_value+0x20>
    62c4:	add	r1, pc, #4
    62c8:	ldr	r0, [r1, r0, lsl #2]
    62cc:	add	pc, r1, r0
    62d0:	.word	0x00000014
    62d4:	.word	0x00000020
    62d8:	.word	0xffffffe0
    62dc:	.word	0x0000002c
    62e0:	.word	0x00000038
    62e4:	sxtb	r4, r4
    62e8:	mov	r0, r4
    62ec:	pop	{r4, r5, r6, sl, fp, pc}
    62f0:	sxth	r4, r4
    62f4:	mov	r0, r4
    62f8:	pop	{r4, r5, r6, sl, fp, pc}
    62fc:	vmov	s0, r4
    6300:	vcvt.s32.f32	s0, s0
    6304:	b	6310 <readstat_int32_value+0x84>
    6308:	vmov	d16, r4, r5
    630c:	vcvt.s32.f64	s0, d16
    6310:	vmov	r4, s0
    6314:	mov	r0, r4
    6318:	pop	{r4, r5, r6, sl, fp, pc}

0000631c <readstat_float_value>:
    631c:	push	{r4, r5, r6, sl, fp, lr}
    6320:	add	fp, sp, #16
    6324:	mov	r6, r2
    6328:	mov	r5, r1
    632c:	mov	r4, r0
    6330:	bl	4950 <readstat_value_is_system_missing@plt>
    6334:	cmp	r0, #0
    6338:	vldrne	s0, [pc, #100]	; 63a4 <readstat_float_value+0x88>
    633c:	popne	{r4, r5, r6, sl, fp, pc}
    6340:	sub	r0, r6, #1
    6344:	cmp	r0, #4
    6348:	bhi	6374 <readstat_float_value+0x58>
    634c:	add	r1, pc, #4
    6350:	ldr	r0, [r1, r0, lsl #2]
    6354:	add	pc, r1, r0
    6358:	.word	0x00000014
    635c:	.word	0x00000024
    6360:	.word	0x00000034
    6364:	.word	0x0000001c
    6368:	.word	0x00000040
    636c:	sxtb	r0, r4
    6370:	b	6380 <readstat_float_value+0x64>
    6374:	vmov	s0, r4
    6378:	pop	{r4, r5, r6, sl, fp, pc}
    637c:	sxth	r0, r4
    6380:	vmov	s0, r0
    6384:	vcvt.f32.s32	s0, s0
    6388:	pop	{r4, r5, r6, sl, fp, pc}
    638c:	vmov	s0, r4
    6390:	vcvt.f32.s32	s0, s0
    6394:	pop	{r4, r5, r6, sl, fp, pc}
    6398:	vmov	d16, r4, r5
    639c:	vcvt.f32.f64	s0, d16
    63a0:	pop	{r4, r5, r6, sl, fp, pc}
    63a4:	.word	0x7fc00000

000063a8 <readstat_variable_get_name>:
    63a8:	ldrb	r1, [r0, #8]!
    63ac:	cmp	r1, #0
    63b0:	moveq	r0, r1
    63b4:	bx	lr

000063b8 <readstat_variable_get_label>:
    63b8:	ldrb	r1, [r0, #564]!	; 0x234
    63bc:	cmp	r1, #0
    63c0:	moveq	r0, r1
    63c4:	bx	lr

000063c8 <readstat_variable_get_format>:
    63c8:	ldrb	r1, [r0, #308]!	; 0x134
    63cc:	cmp	r1, #0
    63d0:	moveq	r0, r1
    63d4:	bx	lr

000063d8 <readstat_variable_get_type>:
    63d8:	ldr	r0, [r0]
    63dc:	bx	lr

000063e0 <readstat_variable_get_type_class>:
    63e0:	ldr	r0, [r0]
    63e4:	b	489c <readstat_type_class@plt>

000063e8 <readstat_variable_get_index>:
    63e8:	ldr	r0, [r0, #4]
    63ec:	bx	lr

000063f0 <readstat_variable_get_index_after_skipping>:
    63f0:	ldr	r0, [r0, #2148]	; 0x864
    63f4:	bx	lr

000063f8 <readstat_variable_get_storage_width>:
    63f8:	ldr	r0, [r0, #1596]	; 0x63c
    63fc:	bx	lr

00006400 <readstat_variable_get_measure>:
    6400:	ldr	r0, [r0, #2128]	; 0x850
    6404:	bx	lr

00006408 <readstat_variable_get_alignment>:
    6408:	ldr	r0, [r0, #2132]	; 0x854
    640c:	bx	lr

00006410 <readstat_variable_get_display_width>:
    6410:	ldr	r0, [r0, #2136]	; 0x858
    6414:	bx	lr

00006418 <readstat_variable_get_missing_ranges_count>:
    6418:	ldr	r0, [r0, #2120]	; 0x848
    641c:	bx	lr

00006420 <readstat_variable_get_missing_range_lo>:
    6420:	ldr	r3, [r1, #2120]	; 0x848
    6424:	cmp	r3, r2
    6428:	ble	6450 <readstat_variable_get_missing_range_lo+0x30>
    642c:	lsl	r2, r2, #1
    6430:	cmp	r2, #31
    6434:	bhi	6450 <readstat_variable_get_missing_range_lo+0x30>
    6438:	add	r1, r1, r2, lsl #4
    643c:	movw	r2, #1608	; 0x648
    6440:	add	r1, r1, r2
    6444:	vld1.64	{d16-d17}, [r1]
    6448:	vst1.64	{d16-d17}, [r0]
    644c:	bx	lr
    6450:	push	{fp, lr}
    6454:	mov	fp, sp
    6458:	bl	66c8 <make_blank_value>
    645c:	pop	{fp, pc}

00006460 <readstat_variable_get_missing_range_hi>:
    6460:	ldr	r3, [r1, #2120]	; 0x848
    6464:	cmp	r3, r2
    6468:	ble	6494 <readstat_variable_get_missing_range_hi+0x34>
    646c:	mov	r3, #1
    6470:	orr	r2, r3, r2, lsl #1
    6474:	cmp	r2, #31
    6478:	bhi	6494 <readstat_variable_get_missing_range_hi+0x34>
    647c:	add	r1, r1, r2, lsl #4
    6480:	movw	r2, #1608	; 0x648
    6484:	add	r1, r1, r2
    6488:	vld1.64	{d16-d17}, [r1]
    648c:	vst1.64	{d16-d17}, [r0]
    6490:	bx	lr
    6494:	push	{fp, lr}
    6498:	mov	fp, sp
    649c:	bl	66c8 <make_blank_value>
    64a0:	pop	{fp, pc}

000064a4 <readstat_variable_add_missing_double_range>:
    64a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    64a8:	add	fp, sp, #24
    64ac:	vpush	{d8}
    64b0:	sub	sp, sp, #56	; 0x38
    64b4:	vmov.f64	d8, d1
    64b8:	mov	r8, r0
    64bc:	add	r0, sp, #40	; 0x28
    64c0:	bl	6580 <make_double_value>
    64c4:	add	r0, sp, #24
    64c8:	vmov.f64	d0, d8
    64cc:	bl	6580 <make_double_value>
    64d0:	ldr	r2, [sp, #40]	; 0x28
    64d4:	ldr	r3, [sp, #44]	; 0x2c
    64d8:	ldr	r0, [sp, #48]	; 0x30
    64dc:	ldr	r1, [sp, #52]	; 0x34
    64e0:	add	r7, sp, #24
    64e4:	ldm	r7, {r4, r5, r6, r7}
    64e8:	stm	sp, {r0, r1, r4, r5, r6, r7}
    64ec:	mov	r0, r8
    64f0:	bl	6500 <readstat_variable_add_missing_value_range>
    64f4:	sub	sp, fp, #32
    64f8:	vpop	{d8}
    64fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00006500 <readstat_variable_add_missing_value_range>:
    6500:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6504:	add	fp, sp, #24
    6508:	mov	r5, r3
    650c:	mov	r6, r2
    6510:	mov	r4, r0
    6514:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
    6518:	lsl	r1, r0, #1
    651c:	mov	r0, #31
    6520:	cmp	r1, #31
    6524:	pophi	{r4, r5, r6, r7, r8, r9, fp, pc}
    6528:	ldr	ip, [fp, #28]
    652c:	ldr	lr, [fp, #24]
    6530:	ldr	r8, [fp, #20]
    6534:	ldr	r9, [fp, #16]
    6538:	ldr	r2, [fp, #12]
    653c:	ldr	r7, [fp, #8]
    6540:	movw	r3, #1608	; 0x648
    6544:	add	r0, r4, r3
    6548:	mov	r3, r0
    654c:	str	r6, [r3, r1, lsl #4]!
    6550:	stmib	r3, {r5, r7}
    6554:	str	r2, [r3, #12]
    6558:	mov	r2, #16
    655c:	orr	r1, r2, r1, lsl #4
    6560:	str	r9, [r0, r1]!
    6564:	stmib	r0, {r8, lr}
    6568:	str	ip, [r0, #12]
    656c:	ldr	r0, [r4, #2120]	; 0x848
    6570:	add	r0, r0, #1
    6574:	str	r0, [r4, #2120]	; 0x848
    6578:	mov	r0, #0
    657c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00006580 <make_double_value>:
    6580:	mov	r1, #5
    6584:	str	r1, [r0, #8]
    6588:	vstr	d0, [r0]
    658c:	mov	r1, #0
    6590:	strb	r1, [r0, #12]
    6594:	ldrb	r1, [r0, #13]
    6598:	and	r1, r1, #252	; 0xfc
    659c:	strb	r1, [r0, #13]
    65a0:	bx	lr

000065a4 <readstat_variable_add_missing_double_value>:
    65a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    65a8:	add	fp, sp, #24
    65ac:	vpush	{d8}
    65b0:	sub	sp, sp, #56	; 0x38
    65b4:	vmov.f64	d8, d0
    65b8:	mov	r8, r0
    65bc:	add	r0, sp, #40	; 0x28
    65c0:	bl	6580 <make_double_value>
    65c4:	add	r0, sp, #24
    65c8:	vmov.f64	d0, d8
    65cc:	bl	6580 <make_double_value>
    65d0:	ldr	r2, [sp, #40]	; 0x28
    65d4:	ldr	r3, [sp, #44]	; 0x2c
    65d8:	ldr	r0, [sp, #48]	; 0x30
    65dc:	ldr	r1, [sp, #52]	; 0x34
    65e0:	add	r7, sp, #24
    65e4:	ldm	r7, {r4, r5, r6, r7}
    65e8:	stm	sp, {r0, r1, r4, r5, r6, r7}
    65ec:	mov	r0, r8
    65f0:	bl	6500 <readstat_variable_add_missing_value_range>
    65f4:	sub	sp, fp, #32
    65f8:	vpop	{d8}
    65fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00006600 <readstat_variable_add_missing_string_range>:
    6600:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6604:	add	fp, sp, #24
    6608:	sub	sp, sp, #56	; 0x38
    660c:	mov	r4, r2
    6610:	mov	r8, r0
    6614:	add	r0, sp, #40	; 0x28
    6618:	bl	6654 <make_string_value>
    661c:	add	r0, sp, #24
    6620:	mov	r1, r4
    6624:	bl	6654 <make_string_value>
    6628:	ldr	r2, [sp, #40]	; 0x28
    662c:	ldr	r3, [sp, #44]	; 0x2c
    6630:	ldr	r0, [sp, #48]	; 0x30
    6634:	ldr	r1, [sp, #52]	; 0x34
    6638:	add	r7, sp, #24
    663c:	ldm	r7, {r4, r5, r6, r7}
    6640:	stm	sp, {r0, r1, r4, r5, r6, r7}
    6644:	mov	r0, r8
    6648:	bl	6500 <readstat_variable_add_missing_value_range>
    664c:	sub	sp, fp, #24
    6650:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00006654 <make_string_value>:
    6654:	mov	r2, #0
    6658:	str	r2, [r0, #8]
    665c:	str	r1, [r0]
    6660:	strb	r2, [r0, #12]
    6664:	ldrb	r1, [r0, #13]
    6668:	and	r1, r1, #252	; 0xfc
    666c:	strb	r1, [r0, #13]
    6670:	bx	lr

00006674 <readstat_variable_add_missing_string_value>:
    6674:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6678:	add	fp, sp, #24
    667c:	sub	sp, sp, #56	; 0x38
    6680:	mov	r4, r1
    6684:	mov	r8, r0
    6688:	add	r0, sp, #40	; 0x28
    668c:	bl	6654 <make_string_value>
    6690:	add	r0, sp, #24
    6694:	mov	r1, r4
    6698:	bl	6654 <make_string_value>
    669c:	ldr	r2, [sp, #40]	; 0x28
    66a0:	ldr	r3, [sp, #44]	; 0x2c
    66a4:	ldr	r0, [sp, #48]	; 0x30
    66a8:	ldr	r1, [sp, #52]	; 0x34
    66ac:	add	r7, sp, #24
    66b0:	ldm	r7, {r4, r5, r6, r7}
    66b4:	stm	sp, {r0, r1, r4, r5, r6, r7}
    66b8:	mov	r0, r8
    66bc:	bl	6500 <readstat_variable_add_missing_value_range>
    66c0:	sub	sp, fp, #24
    66c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000066c8 <make_blank_value>:
    66c8:	ldr	r1, [pc, #12]	; 66dc <make_blank_value+0x14>
    66cc:	add	r1, pc, r1
    66d0:	vld1.64	{d16-d17}, [r1]
    66d4:	vst1.64	{d16-d17}, [r0]
    66d8:	bx	lr
    66dc:	.word	0x0001f0a4

000066e0 <readstat_string_ref_init>:
    66e0:	push	{r4, r5, r6, sl, fp, lr}
    66e4:	add	fp, sp, #16
    66e8:	mov	r4, r0
    66ec:	bl	4c8c <strlen@plt>
    66f0:	mov	r5, r0
    66f4:	add	r1, r0, #25
    66f8:	mov	r0, #1
    66fc:	bl	47d0 <calloc@plt>
    6700:	mov	r6, r0
    6704:	mvn	r0, #0
    6708:	add	r2, r5, #1
    670c:	str	r0, [r6]
    6710:	str	r0, [r6, #4]
    6714:	str	r0, [r6, #8]
    6718:	str	r0, [r6, #12]
    671c:	str	r2, [r6, #16]
    6720:	add	r0, r6, #20
    6724:	mov	r1, r4
    6728:	bl	4998 <memcpy@plt>
    672c:	mov	r0, r6
    6730:	pop	{r4, r5, r6, sl, fp, pc}

00006734 <readstat_writer_init>:
    6734:	push	{r4, r5, r6, sl, fp, lr}
    6738:	add	fp, sp, #16
    673c:	mov	r5, #1
    6740:	mov	r0, #1
    6744:	mov	r1, #312	; 0x138
    6748:	bl	47d0 <calloc@plt>
    674c:	mov	r4, r0
    6750:	mov	r6, #50	; 0x32
    6754:	mov	r0, #50	; 0x32
    6758:	mov	r1, #4
    675c:	bl	47d0 <calloc@plt>
    6760:	str	r0, [r4, #24]
    6764:	str	r6, [r4, #32]
    6768:	mov	r0, #50	; 0x32
    676c:	mov	r1, #4
    6770:	bl	47d0 <calloc@plt>
    6774:	str	r0, [r4, #36]	; 0x24
    6778:	str	r6, [r4, #44]	; 0x2c
    677c:	mov	r0, #50	; 0x32
    6780:	mov	r1, #4
    6784:	bl	47d0 <calloc@plt>
    6788:	str	r0, [r4, #48]	; 0x30
    678c:	str	r6, [r4, #56]	; 0x38
    6790:	mov	r6, #100	; 0x64
    6794:	mov	r0, #100	; 0x64
    6798:	mov	r1, #4
    679c:	bl	47d0 <calloc@plt>
    67a0:	str	r0, [r4, #60]	; 0x3c
    67a4:	str	r6, [r4, #68]	; 0x44
    67a8:	mov	r0, #0
    67ac:	bl	49c8 <time@plt>
    67b0:	str	r0, [r4, #20]
    67b4:	str	r5, [r4, #12]
    67b8:	ldr	r0, [pc, #12]	; 67cc <readstat_writer_init+0x98>
    67bc:	add	r0, pc, r0
    67c0:	str	r0, [r4, #280]	; 0x118
    67c4:	mov	r0, r4
    67c8:	pop	{r4, r5, r6, sl, fp, pc}
    67cc:	.word	0x0000000c

000067d0 <readstat_write_row_default_callback>:
    67d0:	b	69f0 <readstat_write_bytes>

000067d4 <readstat_validate_variable>:
    67d4:	ldr	r2, [r0, #308]	; 0x134
    67d8:	cmp	r2, #0
    67dc:	moveq	r0, #14
    67e0:	bxeq	lr
    67e4:	ldr	r2, [r0, #232]	; 0xe8
    67e8:	cmp	r2, #0
    67ec:	moveq	r0, #0
    67f0:	bxeq	lr
    67f4:	mov	r0, r1
    67f8:	bx	r2

000067fc <readstat_validate_metadata>:
    67fc:	ldr	r1, [r0, #308]	; 0x134
    6800:	cmp	r1, #0
    6804:	moveq	r0, #14
    6808:	bxeq	lr
    680c:	ldr	r1, [r0, #292]	; 0x124
    6810:	cmp	r1, #0
    6814:	moveq	r0, #0
    6818:	bxeq	lr
    681c:	bx	r1

00006820 <readstat_writer_free>:
    6820:	cmp	r0, #0
    6824:	bxeq	lr
    6828:	push	{r4, r5, fp, lr}
    682c:	add	fp, sp, #8
    6830:	mov	r4, r0
    6834:	ldr	r1, [r0, #288]	; 0x120
    6838:	cmp	r1, #0
    683c:	ldrne	r0, [r4, #300]	; 0x12c
    6840:	cmpne	r0, #0
    6844:	beq	684c <readstat_writer_free+0x2c>
    6848:	blx	r1
    684c:	ldr	r0, [r4, #24]
    6850:	cmp	r0, #0
    6854:	beq	688c <readstat_writer_free+0x6c>
    6858:	ldr	r0, [r4, #24]
    685c:	ldr	r1, [r4, #28]
    6860:	cmp	r1, #1
    6864:	blt	6888 <readstat_writer_free+0x68>
    6868:	mov	r5, #0
    686c:	ldr	r0, [r0, r5, lsl #2]
    6870:	bl	6968 <readstat_variable_free>
    6874:	add	r5, r5, #1
    6878:	ldr	r0, [r4, #24]
    687c:	ldr	r1, [r4, #28]
    6880:	cmp	r5, r1
    6884:	blt	686c <readstat_writer_free+0x4c>
    6888:	bl	4938 <free@plt>
    688c:	ldr	r0, [r4, #36]	; 0x24
    6890:	cmp	r0, #0
    6894:	beq	68cc <readstat_writer_free+0xac>
    6898:	ldr	r0, [r4, #36]	; 0x24
    689c:	ldr	r1, [r4, #40]	; 0x28
    68a0:	cmp	r1, #1
    68a4:	blt	68c8 <readstat_writer_free+0xa8>
    68a8:	mov	r5, #0
    68ac:	ldr	r0, [r0, r5, lsl #2]
    68b0:	bl	696c <readstat_label_set_free>
    68b4:	add	r5, r5, #1
    68b8:	ldr	r0, [r4, #36]	; 0x24
    68bc:	ldr	r1, [r4, #40]	; 0x28
    68c0:	cmp	r5, r1
    68c4:	blt	68ac <readstat_writer_free+0x8c>
    68c8:	bl	4938 <free@plt>
    68cc:	ldr	r0, [r4, #48]	; 0x30
    68d0:	cmp	r0, #0
    68d4:	beq	690c <readstat_writer_free+0xec>
    68d8:	ldr	r0, [r4, #48]	; 0x30
    68dc:	ldr	r1, [r4, #52]	; 0x34
    68e0:	cmp	r1, #1
    68e4:	blt	6908 <readstat_writer_free+0xe8>
    68e8:	mov	r5, #0
    68ec:	ldr	r0, [r0, r5, lsl #2]
    68f0:	bl	4938 <free@plt>
    68f4:	add	r5, r5, #1
    68f8:	ldr	r0, [r4, #48]	; 0x30
    68fc:	ldr	r1, [r4, #52]	; 0x34
    6900:	cmp	r5, r1
    6904:	blt	68ec <readstat_writer_free+0xcc>
    6908:	bl	4938 <free@plt>
    690c:	ldr	r0, [r4, #60]	; 0x3c
    6910:	cmp	r0, #0
    6914:	beq	694c <readstat_writer_free+0x12c>
    6918:	ldr	r0, [r4, #60]	; 0x3c
    691c:	ldr	r1, [r4, #64]	; 0x40
    6920:	cmp	r1, #1
    6924:	blt	6948 <readstat_writer_free+0x128>
    6928:	mov	r5, #0
    692c:	ldr	r0, [r0, r5, lsl #2]
    6930:	bl	4938 <free@plt>
    6934:	add	r5, r5, #1
    6938:	ldr	r0, [r4, #60]	; 0x3c
    693c:	ldr	r1, [r4, #64]	; 0x40
    6940:	cmp	r5, r1
    6944:	blt	692c <readstat_writer_free+0x10c>
    6948:	bl	4938 <free@plt>
    694c:	ldr	r0, [r4, #72]	; 0x48
    6950:	cmp	r0, #0
    6954:	beq	695c <readstat_writer_free+0x13c>
    6958:	bl	4938 <free@plt>
    695c:	mov	r0, r4
    6960:	pop	{r4, r5, fp, lr}
    6964:	b	4938 <free@plt>

00006968 <readstat_variable_free>:
    6968:	b	4938 <free@plt>

0000696c <readstat_label_set_free>:
    696c:	push	{r4, r5, r6, sl, fp, lr}
    6970:	add	fp, sp, #16
    6974:	mov	r4, r0
    6978:	ldr	r0, [r0, #264]	; 0x108
    697c:	cmp	r0, #1
    6980:	blt	69c8 <readstat_label_set_free+0x5c>
    6984:	mov	r5, #0
    6988:	mov	r0, r4
    698c:	mov	r1, r5
    6990:	bl	4f68 <readstat_get_value_label@plt>
    6994:	mov	r6, r0
    6998:	ldr	r0, [r0, #24]
    699c:	cmp	r0, #0
    69a0:	beq	69a8 <readstat_label_set_free+0x3c>
    69a4:	bl	4938 <free@plt>
    69a8:	ldr	r0, [r6, #16]
    69ac:	cmp	r0, #0
    69b0:	beq	69b8 <readstat_label_set_free+0x4c>
    69b4:	bl	4938 <free@plt>
    69b8:	ldr	r0, [r4, #264]	; 0x108
    69bc:	add	r5, r5, #1
    69c0:	cmp	r5, r0
    69c4:	blt	6988 <readstat_label_set_free+0x1c>
    69c8:	ldr	r0, [r4, #260]	; 0x104
    69cc:	bl	4938 <free@plt>
    69d0:	ldr	r0, [r4, #272]	; 0x110
    69d4:	bl	4938 <free@plt>
    69d8:	mov	r0, r4
    69dc:	pop	{r4, r5, r6, sl, fp, lr}
    69e0:	b	4938 <free@plt>

000069e4 <readstat_set_data_writer>:
    69e4:	str	r1, [r0]
    69e8:	mov	r0, #0
    69ec:	bx	lr

000069f0 <readstat_write_bytes>:
    69f0:	push	{r4, r5, fp, lr}
    69f4:	add	fp, sp, #8
    69f8:	mov	r5, r2
    69fc:	mov	r4, r0
    6a00:	ldr	r3, [r0]
    6a04:	ldr	r2, [r0, #304]	; 0x130
    6a08:	mov	r0, r1
    6a0c:	mov	r1, r5
    6a10:	blx	r3
    6a14:	mov	r1, r0
    6a18:	mov	r0, #13
    6a1c:	cmp	r1, r5
    6a20:	ldrcs	r0, [r4, #4]
    6a24:	addcs	r0, r0, r1
    6a28:	strcs	r0, [r4, #4]
    6a2c:	movcs	r0, #0
    6a30:	pop	{r4, r5, fp, pc}

00006a34 <readstat_write_bytes_as_lines>:
    6a34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6a38:	add	fp, sp, #28
    6a3c:	sub	sp, sp, #4
    6a40:	mov	r4, r3
    6a44:	mov	r9, r2
    6a48:	mov	sl, r1
    6a4c:	mov	r7, r0
    6a50:	ldr	r0, [fp, #8]
    6a54:	bl	4c8c <strlen@plt>
    6a58:	cmp	r9, #0
    6a5c:	beq	6af0 <readstat_write_bytes_as_lines+0xbc>
    6a60:	str	r0, [sp]
    6a64:	add	r8, r0, r4
    6a68:	mov	r5, #0
    6a6c:	add	r1, sl, r5
    6a70:	sub	r2, r9, r5
    6a74:	ldr	r0, [r7, #4]
    6a78:	udiv	r3, r0, r8
    6a7c:	mul	r3, r3, r8
    6a80:	sub	r0, r3, r0
    6a84:	add	r6, r4, r0
    6a88:	mov	r0, r7
    6a8c:	cmp	r2, r6
    6a90:	bcs	6aa8 <readstat_write_bytes_as_lines+0x74>
    6a94:	bl	4ef0 <readstat_write_bytes@plt>
    6a98:	mov	r5, r9
    6a9c:	cmp	r0, #0
    6aa0:	beq	6abc <readstat_write_bytes_as_lines+0x88>
    6aa4:	b	6af4 <readstat_write_bytes_as_lines+0xc0>
    6aa8:	mov	r2, r6
    6aac:	bl	4ef0 <readstat_write_bytes@plt>
    6ab0:	add	r5, r6, r5
    6ab4:	cmp	r0, #0
    6ab8:	bne	6af4 <readstat_write_bytes_as_lines+0xc0>
    6abc:	ldr	r0, [r7, #4]
    6ac0:	udiv	r1, r0, r8
    6ac4:	mls	r0, r1, r8, r0
    6ac8:	cmp	r0, r4
    6acc:	bne	6ae8 <readstat_write_bytes_as_lines+0xb4>
    6ad0:	mov	r0, r7
    6ad4:	ldr	r1, [fp, #8]
    6ad8:	ldr	r2, [sp]
    6adc:	bl	4ef0 <readstat_write_bytes@plt>
    6ae0:	cmp	r0, #0
    6ae4:	bne	6af4 <readstat_write_bytes_as_lines+0xc0>
    6ae8:	cmp	r5, r9
    6aec:	bcc	6a6c <readstat_write_bytes_as_lines+0x38>
    6af0:	mov	r0, #0
    6af4:	sub	sp, fp, #28
    6af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00006afc <readstat_write_line_padding>:
    6afc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6b00:	add	fp, sp, #24
    6b04:	mov	r8, r3
    6b08:	mov	r7, r2
    6b0c:	mov	r9, r1
    6b10:	mov	r5, r0
    6b14:	mov	r0, r3
    6b18:	bl	4c8c <strlen@plt>
    6b1c:	mov	r6, r0
    6b20:	add	r0, r0, r7
    6b24:	ldr	r1, [r5, #4]
    6b28:	udiv	r2, r1, r0
    6b2c:	mls	r0, r2, r0, r1
    6b30:	cmp	r0, #0
    6b34:	beq	6b7c <readstat_write_line_padding+0x80>
    6b38:	sub	r4, r7, r0
    6b3c:	mov	r0, r4
    6b40:	bl	4b9c <malloc@plt>
    6b44:	mov	r7, r0
    6b48:	mov	r1, r9
    6b4c:	mov	r2, r4
    6b50:	bl	4d28 <memset@plt>
    6b54:	mov	r0, r5
    6b58:	mov	r1, r7
    6b5c:	mov	r2, r4
    6b60:	bl	4ef0 <readstat_write_bytes@plt>
    6b64:	cmp	r0, #0
    6b68:	beq	6b84 <readstat_write_line_padding+0x88>
    6b6c:	cmp	r7, #0
    6b70:	beq	6b7c <readstat_write_line_padding+0x80>
    6b74:	mov	r0, r7
    6b78:	bl	4938 <free@plt>
    6b7c:	mov	r0, #0
    6b80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    6b84:	mov	r0, r5
    6b88:	mov	r1, r8
    6b8c:	mov	r2, r6
    6b90:	bl	4ef0 <readstat_write_bytes@plt>
    6b94:	cmp	r7, #0
    6b98:	bne	6b74 <readstat_write_line_padding+0x78>
    6b9c:	b	6b7c <readstat_write_line_padding+0x80>

00006ba0 <readstat_write_string>:
    6ba0:	push	{r4, r5, fp, lr}
    6ba4:	add	fp, sp, #8
    6ba8:	mov	r4, r1
    6bac:	mov	r5, r0
    6bb0:	mov	r0, r1
    6bb4:	bl	4c8c <strlen@plt>
    6bb8:	mov	r2, r0
    6bbc:	mov	r0, r5
    6bc0:	mov	r1, r4
    6bc4:	pop	{r4, r5, fp, lr}
    6bc8:	b	69f0 <readstat_write_bytes>

00006bcc <readstat_write_zeros>:
    6bcc:	mov	r2, r1
    6bd0:	mov	r1, #0
    6bd4:	b	6bd8 <readstat_write_repeated_byte>

00006bd8 <readstat_write_repeated_byte>:
    6bd8:	cmp	r2, #0
    6bdc:	moveq	r0, #0
    6be0:	bxeq	lr
    6be4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    6be8:	add	fp, sp, #24
    6bec:	mov	r4, r2
    6bf0:	mov	r5, r0
    6bf4:	mov	r7, sp
    6bf8:	add	r0, r2, #7
    6bfc:	bic	r0, r0, #7
    6c00:	sub	r6, sp, r0
    6c04:	mov	sp, r6
    6c08:	mov	r0, r6
    6c0c:	bl	4d28 <memset@plt>
    6c10:	mov	r0, r5
    6c14:	mov	r1, r6
    6c18:	mov	r2, r4
    6c1c:	bl	4ef0 <readstat_write_bytes@plt>
    6c20:	mov	sp, r7
    6c24:	sub	sp, fp, #24
    6c28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00006c2c <readstat_write_spaces>:
    6c2c:	mov	r2, r1
    6c30:	mov	r1, #32
    6c34:	b	6bd8 <readstat_write_repeated_byte>

00006c38 <readstat_write_space_padded_string>:
    6c38:	push	{r4, r5, r6, r7, fp, lr}
    6c3c:	add	fp, sp, #16
    6c40:	mov	r4, r2
    6c44:	mov	r5, r0
    6c48:	cmp	r1, #0
    6c4c:	beq	6c90 <readstat_write_space_padded_string+0x58>
    6c50:	mov	r6, r1
    6c54:	ldrb	r0, [r1]
    6c58:	cmp	r0, #0
    6c5c:	beq	6c90 <readstat_write_space_padded_string+0x58>
    6c60:	mov	r0, r6
    6c64:	bl	4c8c <strlen@plt>
    6c68:	mov	r7, r0
    6c6c:	cmp	r0, r4
    6c70:	movhi	r7, r4
    6c74:	mov	r0, r5
    6c78:	mov	r1, r6
    6c7c:	mov	r2, r7
    6c80:	bl	4ef0 <readstat_write_bytes@plt>
    6c84:	cmp	r0, #0
    6c88:	popne	{r4, r5, r6, r7, fp, pc}
    6c8c:	sub	r4, r4, r7
    6c90:	mov	r0, r5
    6c94:	mov	r1, r4
    6c98:	pop	{r4, r5, r6, r7, fp, lr}
    6c9c:	b	6c2c <readstat_write_spaces>

00006ca0 <readstat_add_label_set>:
    6ca0:	push	{r4, r5, r6, r7, fp, lr}
    6ca4:	add	fp, sp, #16
    6ca8:	mov	r4, r2
    6cac:	mov	r6, r1
    6cb0:	mov	r7, r0
    6cb4:	ldr	r0, [r0, #40]	; 0x28
    6cb8:	ldr	r1, [r7, #44]	; 0x2c
    6cbc:	cmp	r0, r1
    6cc0:	bne	6cdc <readstat_add_label_set+0x3c>
    6cc4:	lsl	r0, r1, #1
    6cc8:	str	r0, [r7, #44]	; 0x2c
    6ccc:	ldr	r0, [r7, #36]	; 0x24
    6cd0:	lsl	r1, r1, #3
    6cd4:	bl	4a70 <realloc@plt>
    6cd8:	str	r0, [r7, #36]	; 0x24
    6cdc:	mov	r0, #1
    6ce0:	mov	r1, #284	; 0x11c
    6ce4:	bl	47d0 <calloc@plt>
    6ce8:	mov	r5, r0
    6cec:	ldr	r0, [r7, #36]	; 0x24
    6cf0:	ldr	r1, [r7, #40]	; 0x28
    6cf4:	add	r2, r1, #1
    6cf8:	str	r2, [r7, #40]	; 0x28
    6cfc:	str	r5, [r0, r1, lsl #2]
    6d00:	str	r6, [r5]
    6d04:	add	r0, r5, #4
    6d08:	ldr	r2, [pc, #68]	; 6d54 <readstat_add_label_set+0xb4>
    6d0c:	add	r2, pc, r2
    6d10:	mov	r1, #256	; 0x100
    6d14:	mov	r3, r4
    6d18:	bl	4d04 <snprintf@plt>
    6d1c:	mov	r4, #10
    6d20:	mov	r0, #10
    6d24:	mov	r1, #32
    6d28:	bl	47d0 <calloc@plt>
    6d2c:	str	r0, [r5, #260]	; 0x104
    6d30:	str	r4, [r5, #268]	; 0x10c
    6d34:	mov	r4, #2
    6d38:	mov	r0, #2
    6d3c:	mov	r1, #4
    6d40:	bl	47d0 <calloc@plt>
    6d44:	str	r0, [r5, #272]	; 0x110
    6d48:	str	r4, [r5, #280]	; 0x118
    6d4c:	mov	r0, r5
    6d50:	pop	{r4, r5, r6, r7, fp, pc}
    6d54:	.word	0x0001faa0

00006d58 <readstat_get_label_set>:
    6d58:	mov	r2, r0
    6d5c:	ldr	r3, [r0, #40]	; 0x28
    6d60:	mov	r0, #0
    6d64:	cmp	r3, r1
    6d68:	ldrgt	r0, [r2, #36]	; 0x24
    6d6c:	ldrgt	r0, [r0, r1, lsl #2]
    6d70:	bx	lr

00006d74 <readstat_sort_label_set>:
    6d74:	mov	r3, r1
    6d78:	ldr	r2, [r0, #260]	; 0x104
    6d7c:	ldr	r1, [r0, #264]	; 0x108
    6d80:	mov	r0, r2
    6d84:	mov	r2, #32
    6d88:	b	4ed8 <qsort@plt>

00006d8c <readstat_get_value_label>:
    6d8c:	mov	r2, r0
    6d90:	ldr	r3, [r0, #264]	; 0x108
    6d94:	mov	r0, #0
    6d98:	cmp	r3, r1
    6d9c:	ldrgt	r0, [r2, #260]	; 0x104
    6da0:	addgt	r0, r0, r1, lsl #5
    6da4:	bx	lr

00006da8 <readstat_get_label_set_variable>:
    6da8:	mov	r2, r0
    6dac:	ldr	r3, [r0, #276]	; 0x114
    6db0:	mov	r0, #0
    6db4:	cmp	r3, r1
    6db8:	ldrgt	r0, [r2, #272]	; 0x110
    6dbc:	ldrgt	r0, [r0, r1, lsl #2]
    6dc0:	bx	lr

00006dc4 <readstat_label_double_value>:
    6dc4:	push	{fp, lr}
    6dc8:	mov	fp, sp
    6dcc:	vpush	{d8}
    6dd0:	vmov.f64	d8, d0
    6dd4:	bl	6dec <readstat_add_value_label>
    6dd8:	vcvt.s32.f64	s0, d8
    6ddc:	vstr	d8, [r0]
    6de0:	vstr	s0, [r0, #8]
    6de4:	vpop	{d8}
    6de8:	pop	{fp, pc}

00006dec <readstat_add_value_label>:
    6dec:	push	{r4, r5, fp, lr}
    6df0:	add	fp, sp, #8
    6df4:	mov	r4, r1
    6df8:	mov	r5, r0
    6dfc:	ldr	r0, [r0, #264]	; 0x108
    6e00:	ldr	r1, [r5, #268]	; 0x10c
    6e04:	cmp	r0, r1
    6e08:	bne	6e24 <readstat_add_value_label+0x38>
    6e0c:	lsl	r0, r1, #1
    6e10:	str	r0, [r5, #268]	; 0x10c
    6e14:	ldr	r0, [r5, #260]	; 0x104
    6e18:	lsl	r1, r1, #6
    6e1c:	bl	4a70 <realloc@plt>
    6e20:	str	r0, [r5, #260]	; 0x104
    6e24:	ldr	r0, [r5, #260]	; 0x104
    6e28:	ldr	r1, [r5, #264]	; 0x108
    6e2c:	add	r2, r1, #1
    6e30:	str	r2, [r5, #264]	; 0x108
    6e34:	vmov.i32	q8, #0	; 0x00000000
    6e38:	add	r5, r0, r1, lsl #5
    6e3c:	mov	r0, r5
    6e40:	vst1.64	{d16-d17}, [r0]!
    6e44:	vst1.64	{d16-d17}, [r0]
    6e48:	mov	r0, r5
    6e4c:	mov	r1, r4
    6e50:	bl	7818 <readstat_copy_label>
    6e54:	mov	r0, r5
    6e58:	pop	{r4, r5, fp, pc}

00006e5c <readstat_label_int32_value>:
    6e5c:	push	{r4, sl, fp, lr}
    6e60:	add	fp, sp, #8
    6e64:	mov	r4, r1
    6e68:	mov	r1, r2
    6e6c:	bl	6dec <readstat_add_value_label>
    6e70:	vmov	s0, r4
    6e74:	vcvt.f64.s32	d16, s0
    6e78:	vstr	d16, [r0]
    6e7c:	str	r4, [r0, #8]
    6e80:	pop	{r4, sl, fp, pc}

00006e84 <readstat_label_string_value>:
    6e84:	push	{r4, r5, fp, lr}
    6e88:	add	fp, sp, #8
    6e8c:	mov	r4, r1
    6e90:	mov	r1, r2
    6e94:	bl	6dec <readstat_add_value_label>
    6e98:	cmp	r4, #0
    6e9c:	popeq	{r4, r5, fp, pc}
    6ea0:	mov	r5, r0
    6ea4:	mov	r0, r4
    6ea8:	bl	4c8c <strlen@plt>
    6eac:	cmp	r0, #0
    6eb0:	beq	6ed0 <readstat_label_string_value+0x4c>
    6eb4:	str	r0, [r5, #20]
    6eb8:	bl	4b9c <malloc@plt>
    6ebc:	str	r0, [r5, #16]
    6ec0:	ldr	r2, [r5, #20]
    6ec4:	mov	r1, r4
    6ec8:	pop	{r4, r5, fp, lr}
    6ecc:	b	4998 <memcpy@plt>
    6ed0:	pop	{r4, r5, fp, pc}

00006ed4 <readstat_label_tagged_value>:
    6ed4:	push	{r4, sl, fp, lr}
    6ed8:	add	fp, sp, #8
    6edc:	mov	r4, r1
    6ee0:	mov	r1, r2
    6ee4:	bl	6dec <readstat_add_value_label>
    6ee8:	strb	r4, [r0, #12]
    6eec:	pop	{r4, sl, fp, pc}

00006ef0 <readstat_add_variable>:
    6ef0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    6ef4:	add	fp, sp, #24
    6ef8:	mov	r6, r3
    6efc:	mov	r7, r2
    6f00:	mov	r8, r1
    6f04:	mov	r4, r0
    6f08:	ldr	r0, [r0, #28]
    6f0c:	ldr	r1, [r4, #32]
    6f10:	cmp	r0, r1
    6f14:	bne	6f30 <readstat_add_variable+0x40>
    6f18:	lsl	r0, r1, #1
    6f1c:	str	r0, [r4, #32]
    6f20:	ldr	r0, [r4, #24]
    6f24:	lsl	r1, r1, #3
    6f28:	bl	4a70 <realloc@plt>
    6f2c:	str	r0, [r4, #24]
    6f30:	mov	r0, #1
    6f34:	movw	r1, #2152	; 0x868
    6f38:	bl	47d0 <calloc@plt>
    6f3c:	mov	r5, r0
    6f40:	ldr	r0, [r4, #28]
    6f44:	add	r1, r0, #1
    6f48:	str	r1, [r4, #28]
    6f4c:	str	r0, [r5, #4]
    6f50:	ldr	r1, [r4, #24]
    6f54:	str	r5, [r1, r0, lsl #2]
    6f58:	str	r7, [r5]
    6f5c:	str	r6, [r5, #1600]	; 0x640
    6f60:	mov	r0, r5
    6f64:	bl	4fe0 <readstat_variable_get_type_class@plt>
    6f68:	mov	r1, #0
    6f6c:	mov	r2, #3
    6f70:	cmp	r0, #0
    6f74:	movweq	r2, #1
    6f78:	str	r1, [r5, #2128]	; 0x850
    6f7c:	str	r2, [r5, #2132]	; 0x854
    6f80:	cmp	r8, #0
    6f84:	beq	6fa0 <readstat_add_variable+0xb0>
    6f88:	add	r0, r5, #8
    6f8c:	ldr	r2, [pc, #20]	; 6fa8 <readstat_add_variable+0xb8>
    6f90:	add	r2, pc, r2
    6f94:	mov	r1, #300	; 0x12c
    6f98:	mov	r3, r8
    6f9c:	bl	4d04 <snprintf@plt>
    6fa0:	mov	r0, r5
    6fa4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    6fa8:	.word	0x0001f81c

00006fac <readstat_add_string_ref>:
    6fac:	push	{r4, r5, fp, lr}
    6fb0:	add	fp, sp, #8
    6fb4:	mov	r4, r0
    6fb8:	mov	r0, r1
    6fbc:	bl	4df4 <readstat_string_ref_init@plt>
    6fc0:	mov	r5, r0
    6fc4:	mov	r0, r4
    6fc8:	mov	r1, r5
    6fcc:	bl	6fd8 <readstat_append_string_ref>
    6fd0:	mov	r0, r5
    6fd4:	pop	{r4, r5, fp, pc}

00006fd8 <readstat_append_string_ref>:
    6fd8:	push	{r4, r5, fp, lr}
    6fdc:	add	fp, sp, #8
    6fe0:	mov	r4, r1
    6fe4:	mov	r5, r0
    6fe8:	ldr	r0, [r0, #64]	; 0x40
    6fec:	ldr	r1, [r5, #68]	; 0x44
    6ff0:	cmp	r0, r1
    6ff4:	bne	7010 <readstat_append_string_ref+0x38>
    6ff8:	lsl	r0, r1, #1
    6ffc:	str	r0, [r5, #68]	; 0x44
    7000:	ldr	r0, [r5, #60]	; 0x3c
    7004:	lsl	r1, r1, #3
    7008:	bl	4a70 <realloc@plt>
    700c:	str	r0, [r5, #60]	; 0x3c
    7010:	ldr	r0, [r5, #60]	; 0x3c
    7014:	ldr	r1, [r5, #64]	; 0x40
    7018:	add	r2, r1, #1
    701c:	str	r2, [r5, #64]	; 0x40
    7020:	str	r4, [r0, r1, lsl #2]
    7024:	pop	{r4, r5, fp, pc}

00007028 <readstat_add_note>:
    7028:	push	{r4, r5, r6, sl, fp, lr}
    702c:	add	fp, sp, #16
    7030:	mov	r5, r1
    7034:	mov	r4, r0
    7038:	ldr	r0, [r0, #52]	; 0x34
    703c:	ldr	r1, [r4, #56]	; 0x38
    7040:	cmp	r0, r1
    7044:	bne	7060 <readstat_add_note+0x38>
    7048:	lsl	r0, r1, #1
    704c:	str	r0, [r4, #56]	; 0x38
    7050:	ldr	r0, [r4, #48]	; 0x30
    7054:	lsl	r1, r1, #3
    7058:	bl	4a70 <realloc@plt>
    705c:	str	r0, [r4, #48]	; 0x30
    7060:	mov	r0, r5
    7064:	bl	4c8c <strlen@plt>
    7068:	add	r0, r0, #1
    706c:	bl	4b9c <malloc@plt>
    7070:	mov	r6, r0
    7074:	mov	r1, r5
    7078:	bl	4b18 <strcpy@plt>
    707c:	ldr	r0, [r4, #48]	; 0x30
    7080:	ldr	r1, [r4, #52]	; 0x34
    7084:	add	r2, r1, #1
    7088:	str	r2, [r4, #52]	; 0x34
    708c:	str	r6, [r0, r1, lsl #2]
    7090:	pop	{r4, r5, r6, sl, fp, pc}

00007094 <readstat_variable_set_label>:
    7094:	add	r0, r0, #564	; 0x234
    7098:	cmp	r1, #0
    709c:	beq	70b4 <readstat_variable_set_label+0x20>
    70a0:	mov	r3, r1
    70a4:	ldr	r2, [pc, #20]	; 70c0 <readstat_variable_set_label+0x2c>
    70a8:	add	r2, pc, r2
    70ac:	mov	r1, #1024	; 0x400
    70b0:	b	4d04 <snprintf@plt>
    70b4:	mov	r1, #0
    70b8:	mov	r2, #1024	; 0x400
    70bc:	b	4d28 <memset@plt>
    70c0:	.word	0x0001f704

000070c4 <readstat_variable_set_format>:
    70c4:	add	r0, r0, #308	; 0x134
    70c8:	cmp	r1, #0
    70cc:	beq	70e4 <readstat_variable_set_format+0x20>
    70d0:	mov	r3, r1
    70d4:	ldr	r2, [pc, #20]	; 70f0 <readstat_variable_set_format+0x2c>
    70d8:	add	r2, pc, r2
    70dc:	mov	r1, #256	; 0x100
    70e0:	b	4d04 <snprintf@plt>
    70e4:	mov	r1, #0
    70e8:	mov	r2, #256	; 0x100
    70ec:	b	4d28 <memset@plt>
    70f0:	.word	0x0001f6d4

000070f4 <readstat_variable_set_measure>:
    70f4:	str	r1, [r0, #2128]	; 0x850
    70f8:	bx	lr

000070fc <readstat_variable_set_alignment>:
    70fc:	str	r1, [r0, #2132]	; 0x854
    7100:	bx	lr

00007104 <readstat_variable_set_display_width>:
    7104:	str	r1, [r0, #2136]	; 0x858
    7108:	bx	lr

0000710c <readstat_variable_set_label_set>:
    710c:	str	r1, [r0, #1588]	; 0x634
    7110:	cmp	r1, #0
    7114:	bxeq	lr
    7118:	push	{r4, r5, fp, lr}
    711c:	add	fp, sp, #8
    7120:	mov	r5, r1
    7124:	mov	r4, r0
    7128:	ldr	r0, [r1, #276]	; 0x114
    712c:	ldr	r1, [r1, #280]	; 0x118
    7130:	cmp	r0, r1
    7134:	bne	7150 <readstat_variable_set_label_set+0x44>
    7138:	lsl	r0, r1, #1
    713c:	str	r0, [r5, #280]	; 0x118
    7140:	ldr	r0, [r5, #272]	; 0x110
    7144:	lsl	r1, r1, #3
    7148:	bl	4a70 <realloc@plt>
    714c:	str	r0, [r5, #272]	; 0x110
    7150:	ldr	r0, [r5, #272]	; 0x110
    7154:	ldr	r1, [r5, #276]	; 0x114
    7158:	add	r2, r1, #1
    715c:	str	r2, [r5, #276]	; 0x114
    7160:	str	r4, [r0, r1, lsl #2]
    7164:	pop	{r4, r5, fp, lr}
    7168:	bx	lr

0000716c <readstat_get_variable>:
    716c:	mov	r2, r0
    7170:	ldr	r3, [r0, #28]
    7174:	mov	r0, #0
    7178:	cmp	r3, r1
    717c:	ldrgt	r0, [r2, #24]
    7180:	ldrgt	r0, [r0, r1, lsl #2]
    7184:	bx	lr

00007188 <readstat_get_string_ref>:
    7188:	mov	r2, r0
    718c:	ldr	r3, [r0, #64]	; 0x40
    7190:	mov	r0, #0
    7194:	cmp	r3, r1
    7198:	ldrgt	r0, [r2, #60]	; 0x3c
    719c:	ldrgt	r0, [r0, r1, lsl #2]
    71a0:	bx	lr

000071a4 <readstat_writer_set_file_label>:
    71a4:	push	{fp, lr}
    71a8:	mov	fp, sp
    71ac:	mov	r3, r1
    71b0:	add	r0, r0, #88	; 0x58
    71b4:	ldr	r2, [pc, #16]	; 71cc <readstat_writer_set_file_label+0x28>
    71b8:	add	r2, pc, r2
    71bc:	mov	r1, #100	; 0x64
    71c0:	bl	4d04 <snprintf@plt>
    71c4:	mov	r0, #0
    71c8:	pop	{fp, pc}
    71cc:	.word	0x0001f5f4

000071d0 <readstat_writer_set_file_timestamp>:
    71d0:	str	r1, [r0, #20]
    71d4:	mov	r0, #0
    71d8:	bx	lr

000071dc <readstat_writer_set_table_name>:
    71dc:	push	{fp, lr}
    71e0:	mov	fp, sp
    71e4:	mov	r3, r1
    71e8:	add	r0, r0, #188	; 0xbc
    71ec:	ldr	r2, [pc, #16]	; 7204 <readstat_writer_set_table_name+0x28>
    71f0:	add	r2, pc, r2
    71f4:	mov	r1, #33	; 0x21
    71f8:	bl	4d04 <snprintf@plt>
    71fc:	mov	r0, #0
    7200:	pop	{fp, pc}
    7204:	.word	0x0001f5bc

00007208 <readstat_writer_set_fweight_variable>:
    7208:	push	{r4, r5, fp, lr}
    720c:	add	fp, sp, #8
    7210:	mov	r4, r1
    7214:	mov	r5, r0
    7218:	mov	r0, r1
    721c:	bl	4fe0 <readstat_variable_get_type_class@plt>
    7220:	cmp	r0, #0
    7224:	moveq	r0, #30
    7228:	strne	r4, [r5, #224]	; 0xe0
    722c:	movne	r0, #0
    7230:	pop	{r4, r5, fp, pc}

00007234 <readstat_writer_set_file_format_version>:
    7234:	str	r1, [r0, #8]
    7238:	mov	r0, #0
    723c:	bx	lr

00007240 <readstat_writer_set_file_format_is_64bit>:
    7240:	str	r1, [r0, #12]
    7244:	mov	r0, #0
    7248:	bx	lr

0000724c <readstat_writer_set_compression>:
    724c:	str	r1, [r0, #16]
    7250:	mov	r0, #0
    7254:	bx	lr

00007258 <readstat_writer_set_error_handler>:
    7258:	str	r1, [r0, #296]	; 0x128
    725c:	mov	r0, #0
    7260:	bx	lr

00007264 <readstat_begin_writing_file>:
    7264:	str	r2, [r0, #80]	; 0x50
    7268:	mov	r2, #1
    726c:	str	r1, [r0, #304]	; 0x130
    7270:	str	r2, [r0, #308]	; 0x134
    7274:	b	67fc <readstat_validate_metadata>

00007278 <readstat_begin_row>:
    7278:	push	{r4, r5, fp, lr}
    727c:	add	fp, sp, #8
    7280:	mov	r5, r0
    7284:	ldr	r0, [r0, #308]	; 0x134
    7288:	cmp	r0, #0
    728c:	moveq	r4, #14
    7290:	moveq	r0, r4
    7294:	popeq	{r4, r5, fp, pc}
    7298:	ldr	r0, [r5, #84]	; 0x54
    729c:	mov	r4, #0
    72a0:	cmp	r0, #0
    72a4:	bne	72b4 <readstat_begin_row+0x3c>
    72a8:	mov	r0, r5
    72ac:	bl	72cc <readstat_begin_writing_data>
    72b0:	mov	r4, r0
    72b4:	ldr	r0, [r5, #72]	; 0x48
    72b8:	ldr	r2, [r5, #76]	; 0x4c
    72bc:	mov	r1, #0
    72c0:	bl	4d28 <memset@plt>
    72c4:	mov	r0, r4
    72c8:	pop	{r4, r5, fp, pc}

000072cc <readstat_begin_writing_data>:
    72cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    72d0:	add	fp, sp, #24
    72d4:	mov	r4, r0
    72d8:	bl	4818 <readstat_validate_metadata@plt>
    72dc:	mov	r8, r0
    72e0:	cmp	r0, #0
    72e4:	beq	72f0 <readstat_begin_writing_data+0x24>
    72e8:	mov	r0, r8
    72ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    72f0:	ldr	r0, [r4, #28]
    72f4:	cmp	r0, #1
    72f8:	blt	7344 <readstat_begin_writing_data+0x78>
    72fc:	mov	r7, #0
    7300:	mov	r6, #0
    7304:	mov	r0, r4
    7308:	mov	r1, r7
    730c:	bl	4e18 <readstat_get_variable@plt>
    7310:	mov	r5, r0
    7314:	ldr	r0, [r0]
    7318:	ldr	r1, [r5, #1600]	; 0x640
    731c:	ldr	r2, [r4, #228]	; 0xe4
    7320:	blx	r2
    7324:	str	r6, [r5, #1592]	; 0x638
    7328:	str	r0, [r5, #1596]	; 0x63c
    732c:	add	r6, r0, r6
    7330:	add	r7, r7, #1
    7334:	ldr	r0, [r4, #28]
    7338:	cmp	r7, r0
    733c:	blt	7304 <readstat_begin_writing_data+0x38>
    7340:	b	7348 <readstat_begin_writing_data+0x7c>
    7344:	mov	r6, #0
    7348:	ldr	r0, [r4, #232]	; 0xe8
    734c:	cmp	r0, #0
    7350:	beq	7398 <readstat_begin_writing_data+0xcc>
    7354:	ldr	r0, [r4, #28]
    7358:	cmp	r0, #1
    735c:	blt	7398 <readstat_begin_writing_data+0xcc>
    7360:	mov	r7, #0
    7364:	mov	r0, r4
    7368:	mov	r1, r7
    736c:	bl	4e18 <readstat_get_variable@plt>
    7370:	mov	r1, r0
    7374:	mov	r0, r4
    7378:	bl	4f38 <readstat_validate_variable@plt>
    737c:	cmp	r0, #0
    7380:	bne	73c0 <readstat_begin_writing_data+0xf4>
    7384:	add	r7, r7, #1
    7388:	ldr	r0, [r4, #28]
    738c:	cmp	r7, r0
    7390:	blt	7364 <readstat_begin_writing_data+0x98>
    7394:	mov	r8, #0
    7398:	str	r6, [r4, #76]	; 0x4c
    739c:	mov	r0, r6
    73a0:	bl	4b9c <malloc@plt>
    73a4:	str	r0, [r4, #72]	; 0x48
    73a8:	ldr	r1, [r4, #276]	; 0x114
    73ac:	cmp	r1, #0
    73b0:	beq	72e8 <readstat_begin_writing_data+0x1c>
    73b4:	mov	r0, r4
    73b8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    73bc:	bx	r1
    73c0:	mov	r8, r0
    73c4:	mov	r0, r8
    73c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000073cc <readstat_insert_int8_value>:
    73cc:	ldr	r3, [r0, #308]	; 0x134
    73d0:	cmp	r3, #0
    73d4:	beq	740c <readstat_insert_int8_value+0x40>
    73d8:	ldr	ip, [r1]
    73dc:	mov	r3, #12
    73e0:	cmp	ip, #1
    73e4:	bne	7410 <readstat_insert_int8_value+0x44>
    73e8:	push	{fp, lr}
    73ec:	mov	fp, sp
    73f0:	ldr	ip, [r1, #1592]	; 0x638
    73f4:	ldr	r3, [r0, #72]	; 0x48
    73f8:	ldr	lr, [r0, #236]	; 0xec
    73fc:	add	r0, r3, ip
    7400:	mov	r3, lr
    7404:	pop	{fp, lr}
    7408:	bx	r3
    740c:	mov	r3, #14
    7410:	mov	r0, r3
    7414:	bx	lr

00007418 <readstat_insert_int16_value>:
    7418:	ldr	r3, [r0, #308]	; 0x134
    741c:	cmp	r3, #0
    7420:	beq	7458 <readstat_insert_int16_value+0x40>
    7424:	ldr	ip, [r1]
    7428:	mov	r3, #12
    742c:	cmp	ip, #2
    7430:	bne	745c <readstat_insert_int16_value+0x44>
    7434:	push	{fp, lr}
    7438:	mov	fp, sp
    743c:	ldr	ip, [r1, #1592]	; 0x638
    7440:	ldr	r3, [r0, #72]	; 0x48
    7444:	ldr	lr, [r0, #240]	; 0xf0
    7448:	add	r0, r3, ip
    744c:	mov	r3, lr
    7450:	pop	{fp, lr}
    7454:	bx	r3
    7458:	mov	r3, #14
    745c:	mov	r0, r3
    7460:	bx	lr

00007464 <readstat_insert_int32_value>:
    7464:	ldr	r3, [r0, #308]	; 0x134
    7468:	cmp	r3, #0
    746c:	beq	74a4 <readstat_insert_int32_value+0x40>
    7470:	ldr	ip, [r1]
    7474:	mov	r3, #12
    7478:	cmp	ip, #3
    747c:	bne	74a8 <readstat_insert_int32_value+0x44>
    7480:	push	{fp, lr}
    7484:	mov	fp, sp
    7488:	ldr	ip, [r1, #1592]	; 0x638
    748c:	ldr	r3, [r0, #72]	; 0x48
    7490:	ldr	lr, [r0, #244]	; 0xf4
    7494:	add	r0, r3, ip
    7498:	mov	r3, lr
    749c:	pop	{fp, lr}
    74a0:	bx	r3
    74a4:	mov	r3, #14
    74a8:	mov	r0, r3
    74ac:	bx	lr

000074b0 <readstat_insert_float_value>:
    74b0:	ldr	r2, [r0, #308]	; 0x134
    74b4:	cmp	r2, #0
    74b8:	beq	74e0 <readstat_insert_float_value+0x30>
    74bc:	ldr	r3, [r1]
    74c0:	mov	r2, #12
    74c4:	cmp	r3, #4
    74c8:	bne	74e4 <readstat_insert_float_value+0x34>
    74cc:	ldr	r2, [r1, #1592]	; 0x638
    74d0:	ldr	r3, [r0, #72]	; 0x48
    74d4:	ldr	ip, [r0, #248]	; 0xf8
    74d8:	add	r0, r3, r2
    74dc:	bx	ip
    74e0:	mov	r2, #14
    74e4:	mov	r0, r2
    74e8:	bx	lr

000074ec <readstat_insert_double_value>:
    74ec:	ldr	r2, [r0, #308]	; 0x134
    74f0:	cmp	r2, #0
    74f4:	beq	751c <readstat_insert_double_value+0x30>
    74f8:	ldr	r3, [r1]
    74fc:	mov	r2, #12
    7500:	cmp	r3, #5
    7504:	bne	7520 <readstat_insert_double_value+0x34>
    7508:	ldr	r2, [r1, #1592]	; 0x638
    750c:	ldr	r3, [r0, #72]	; 0x48
    7510:	ldr	ip, [r0, #252]	; 0xfc
    7514:	add	r0, r3, r2
    7518:	bx	ip
    751c:	mov	r2, #14
    7520:	mov	r0, r2
    7524:	bx	lr

00007528 <readstat_insert_string_value>:
    7528:	ldr	r3, [r0, #308]	; 0x134
    752c:	cmp	r3, #0
    7530:	beq	754c <readstat_insert_string_value+0x24>
    7534:	ldr	ip, [r1]
    7538:	mov	r3, #12
    753c:	cmp	ip, #0
    7540:	beq	7558 <readstat_insert_string_value+0x30>
    7544:	mov	r0, r3
    7548:	bx	lr
    754c:	mov	r3, #14
    7550:	mov	r0, r3
    7554:	bx	lr
    7558:	push	{fp, lr}
    755c:	mov	fp, sp
    7560:	ldr	ip, [r1, #1592]	; 0x638
    7564:	ldr	r3, [r0, #72]	; 0x48
    7568:	ldr	lr, [r0, #256]	; 0x100
    756c:	add	r0, r3, ip
    7570:	mov	r3, lr
    7574:	pop	{fp, lr}
    7578:	bx	r3

0000757c <readstat_insert_string_ref>:
    757c:	ldr	r3, [r0, #308]	; 0x134
    7580:	cmp	r3, #0
    7584:	beq	7618 <readstat_insert_string_ref+0x9c>
    7588:	ldr	ip, [r1]
    758c:	mov	r3, #12
    7590:	cmp	ip, #6
    7594:	bne	761c <readstat_insert_string_ref+0xa0>
    7598:	ldr	r3, [r0, #260]	; 0x104
    759c:	cmp	r3, #0
    75a0:	moveq	r3, #33	; 0x21
    75a4:	moveq	r0, r3
    75a8:	bxeq	lr
    75ac:	push	{r4, r5, r6, r7, fp, lr}
    75b0:	add	fp, sp, #16
    75b4:	cmp	r2, #0
    75b8:	beq	7604 <readstat_insert_string_ref+0x88>
    75bc:	mov	ip, r2
    75c0:	ldr	lr, [ip, #8]!
    75c4:	ldr	r4, [ip, #4]
    75c8:	and	r4, lr, r4
    75cc:	cmn	r4, #1
    75d0:	bne	7604 <readstat_insert_string_ref+0x88>
    75d4:	mvn	r4, #0
    75d8:	ldrd	r6, [r2]
    75dc:	eor	r7, r7, r4
    75e0:	eor	r6, r6, r4
    75e4:	orrs	r7, r6, r7
    75e8:	bne	7604 <readstat_insert_string_ref+0x88>
    75ec:	ldr	r4, [r0, #84]	; 0x54
    75f0:	asr	r5, r4, #31
    75f4:	strd	r4, [ip]
    75f8:	ldr	r4, [r1, #4]
    75fc:	asr	r5, r4, #31
    7600:	strd	r4, [r2]
    7604:	ldr	r7, [r1, #1592]	; 0x638
    7608:	ldr	r0, [r0, #72]	; 0x48
    760c:	add	r0, r0, r7
    7610:	pop	{r4, r5, r6, r7, fp, lr}
    7614:	bx	r3
    7618:	mov	r3, #14
    761c:	mov	r0, r3
    7620:	bx	lr

00007624 <readstat_insert_missing_value>:
    7624:	ldr	r2, [r0, #308]	; 0x134
    7628:	cmp	r2, #0
    762c:	moveq	r0, #14
    7630:	bxeq	lr
    7634:	ldr	r2, [r1]
    7638:	cmp	r2, #6
    763c:	beq	765c <readstat_insert_missing_value+0x38>
    7640:	cmp	r2, #0
    7644:	ldr	r2, [r1, #1592]	; 0x638
    7648:	ldr	r3, [r0, #72]	; 0x48
    764c:	ldrne	ip, [r0, #268]	; 0x10c
    7650:	ldreq	ip, [r0, #264]	; 0x108
    7654:	add	r0, r3, r2
    7658:	bx	ip
    765c:	mov	r2, #0
    7660:	b	757c <readstat_insert_string_ref>

00007664 <readstat_insert_tagged_missing_value>:
    7664:	ldr	r3, [r0, #308]	; 0x134
    7668:	cmp	r3, #0
    766c:	moveq	r0, #14
    7670:	bxeq	lr
    7674:	ldr	r3, [r0, #272]	; 0x110
    7678:	cmp	r3, #0
    767c:	beq	7690 <readstat_insert_tagged_missing_value+0x2c>
    7680:	ldr	ip, [r1, #1592]	; 0x638
    7684:	ldr	r0, [r0, #72]	; 0x48
    7688:	add	r0, r0, ip
    768c:	bx	r3
    7690:	push	{fp, lr}
    7694:	mov	fp, sp
    7698:	ldr	r2, [r1, #1592]	; 0x638
    769c:	ldr	r3, [r0, #72]	; 0x48
    76a0:	ldr	ip, [r0, #268]	; 0x10c
    76a4:	add	r0, r3, r2
    76a8:	blx	ip
    76ac:	mov	r0, #23
    76b0:	pop	{fp, pc}

000076b4 <readstat_end_row>:
    76b4:	push	{r4, sl, fp, lr}
    76b8:	add	fp, sp, #8
    76bc:	mov	r4, r0
    76c0:	ldr	r0, [r0, #308]	; 0x134
    76c4:	cmp	r0, #0
    76c8:	moveq	r0, #14
    76cc:	popeq	{r4, sl, fp, pc}
    76d0:	ldr	r1, [r4, #72]	; 0x48
    76d4:	ldr	r2, [r4, #76]	; 0x4c
    76d8:	ldr	r3, [r4, #280]	; 0x118
    76dc:	mov	r0, r4
    76e0:	blx	r3
    76e4:	cmp	r0, #0
    76e8:	popne	{r4, sl, fp, pc}
    76ec:	ldr	r0, [r4, #84]	; 0x54
    76f0:	add	r0, r0, #1
    76f4:	str	r0, [r4, #84]	; 0x54
    76f8:	mov	r0, #0
    76fc:	pop	{r4, sl, fp, pc}

00007700 <readstat_end_writing>:
    7700:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7704:	add	fp, sp, #24
    7708:	mov	r4, r0
    770c:	ldr	r0, [r0, #308]	; 0x134
    7710:	cmp	r0, #0
    7714:	moveq	r0, #14
    7718:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    771c:	ldr	r1, [r4, #80]	; 0x50
    7720:	ldr	r2, [r4, #84]	; 0x54
    7724:	mov	r0, #9
    7728:	cmp	r2, r1
    772c:	bne	77d0 <readstat_end_writing+0xd0>
    7730:	cmp	r1, #0
    7734:	bne	7748 <readstat_end_writing+0x48>
    7738:	mov	r0, r4
    773c:	bl	72cc <readstat_begin_writing_data>
    7740:	cmp	r0, #0
    7744:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
    7748:	ldr	r5, [r4, #64]	; 0x40
    774c:	cmp	r5, #2
    7750:	blt	77b4 <readstat_end_writing+0xb4>
    7754:	ldr	r0, [r4, #60]	; 0x3c
    7758:	add	r6, r0, #4
    775c:	mov	r1, r6
    7760:	bl	77d8 <readstat_compare_string_refs>
    7764:	cmp	r0, #0
    7768:	bgt	779c <readstat_end_writing+0x9c>
    776c:	mov	r7, #1
    7770:	add	r7, r7, #1
    7774:	ldr	r5, [r4, #64]	; 0x40
    7778:	cmp	r7, r5
    777c:	bge	77b4 <readstat_end_writing+0xb4>
    7780:	add	r8, r6, #4
    7784:	add	r1, r6, #4
    7788:	mov	r0, r6
    778c:	bl	77d8 <readstat_compare_string_refs>
    7790:	cmp	r0, #1
    7794:	mov	r6, r8
    7798:	blt	7770 <readstat_end_writing+0x70>
    779c:	ldr	r0, [r4, #60]	; 0x3c
    77a0:	ldr	r3, [pc, #44]	; 77d4 <readstat_end_writing+0xd4>
    77a4:	add	r3, pc, r3
    77a8:	mov	r1, r5
    77ac:	mov	r2, #4
    77b0:	bl	4ed8 <qsort@plt>
    77b4:	ldr	r1, [r4, #284]	; 0x11c
    77b8:	cmp	r1, #0
    77bc:	beq	77cc <readstat_end_writing+0xcc>
    77c0:	mov	r0, r4
    77c4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    77c8:	bx	r1
    77cc:	mov	r0, #0
    77d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    77d4:	.word	0x0000002c

000077d8 <readstat_compare_string_refs>:
    77d8:	push	{r4, r5, fp, lr}
    77dc:	add	fp, sp, #8
    77e0:	ldr	r1, [r1]
    77e4:	ldrd	r2, [r1]
    77e8:	ldr	r0, [r0]
    77ec:	ldrd	r4, [r0]
    77f0:	eor	r3, r5, r3
    77f4:	eor	r5, r4, r2
    77f8:	orrs	r3, r5, r3
    77fc:	bne	7810 <readstat_compare_string_refs+0x38>
    7800:	ldr	r1, [r1, #8]
    7804:	ldr	r0, [r0, #8]
    7808:	subs	r0, r0, r1
    780c:	pop	{r4, r5, fp, pc}
    7810:	subs	r0, r4, r2
    7814:	pop	{r4, r5, fp, pc}

00007818 <readstat_copy_label>:
    7818:	push	{r4, r5, r6, sl, fp, lr}
    781c:	add	fp, sp, #16
    7820:	cmp	r1, #0
    7824:	popeq	{r4, r5, r6, sl, fp, pc}
    7828:	mov	r4, r1
    782c:	mov	r5, r0
    7830:	mov	r0, r1
    7834:	bl	4c8c <strlen@plt>
    7838:	cmp	r0, #0
    783c:	beq	7860 <readstat_copy_label+0x48>
    7840:	mov	r6, r0
    7844:	str	r0, [r5, #28]
    7848:	bl	4b9c <malloc@plt>
    784c:	str	r0, [r5, #24]
    7850:	mov	r1, r4
    7854:	mov	r2, r6
    7858:	pop	{r4, r5, r6, sl, fp, lr}
    785c:	b	4998 <memcpy@plt>
    7860:	pop	{r4, r5, r6, sl, fp, pc}

00007864 <memreverse>:
    7864:	push	{r4, r5, fp, lr}
    7868:	add	fp, sp, #8
    786c:	mov	r5, r1
    7870:	mov	r4, r0
    7874:	bl	492c <machine_is_little_endian@plt>
    7878:	cmp	r0, #0
    787c:	beq	78b0 <memreverse+0x4c>
    7880:	cmp	r5, #2
    7884:	poplt	{r4, r5, fp, pc}
    7888:	add	r0, r5, r5, lsr #31
    788c:	asr	r0, r0, #1
    7890:	add	r1, r4, r5
    7894:	sub	r1, r1, #1
    7898:	ldrb	r2, [r4]
    789c:	ldrb	r3, [r1]
    78a0:	strb	r3, [r4], #1
    78a4:	strb	r2, [r1], #-1
    78a8:	subs	r0, r0, #1
    78ac:	bne	7898 <memreverse+0x34>
    78b0:	pop	{r4, r5, fp, pc}

000078b4 <cnxptiee>:
    78b4:	push	{r4, r5, r6, r7, fp, lr}
    78b8:	add	fp, sp, #16
    78bc:	sub	sp, sp, #8
    78c0:	mov	r5, r3
    78c4:	mov	r4, r2
    78c8:	mov	r7, r1
    78cc:	mov	r6, r0
    78d0:	cmp	r1, #0
    78d4:	bne	78e0 <cnxptiee+0x2c>
    78d8:	bl	4c50 <get_native@plt>
    78dc:	mov	r7, r0
    78e0:	sub	r0, r7, #1
    78e4:	cmp	r0, #2
    78e8:	bcc	7924 <cnxptiee+0x70>
    78ec:	mvn	r0, #0
    78f0:	cmp	r7, #3
    78f4:	bne	79ec <cnxptiee+0x138>
    78f8:	cmp	r5, #3
    78fc:	beq	794c <cnxptiee+0x98>
    7900:	add	r0, r6, #7
    7904:	mov	r1, #0
    7908:	mov	r6, sp
    790c:	ldrb	r2, [r0, -r1]
    7910:	strb	r2, [r6, r1]
    7914:	add	r1, r1, #1
    7918:	cmp	r1, #8
    791c:	bne	790c <cnxptiee+0x58>
    7920:	mov	r7, #2
    7924:	cmp	r5, #0
    7928:	bne	7934 <cnxptiee+0x80>
    792c:	bl	4c50 <get_native@plt>
    7930:	mov	r5, r0
    7934:	sub	r1, r5, #1
    7938:	mvn	r0, #1
    793c:	cmp	r1, #2
    7940:	bhi	79ec <cnxptiee+0x138>
    7944:	cmp	r7, r5
    7948:	bne	7968 <cnxptiee+0xb4>
    794c:	ldr	r0, [r6]
    7950:	ldr	r1, [r6, #4]
    7954:	str	r1, [r4, #4]
    7958:	str	r0, [r4]
    795c:	mov	r0, #0
    7960:	sub	sp, fp, #16
    7964:	pop	{r4, r5, r6, r7, fp, pc}
    7968:	cmp	r7, #1
    796c:	beq	7990 <cnxptiee+0xdc>
    7970:	cmp	r7, #2
    7974:	bne	79b0 <cnxptiee+0xfc>
    7978:	cmp	r5, #1
    797c:	bne	79a0 <cnxptiee+0xec>
    7980:	mov	r0, r6
    7984:	mov	r1, r4
    7988:	bl	79f4 <ieee2xpt>
    798c:	b	795c <cnxptiee+0xa8>
    7990:	mov	r0, r6
    7994:	mov	r1, r4
    7998:	bl	7b74 <xpt2ieee>
    799c:	b	79b0 <cnxptiee+0xfc>
    79a0:	ldr	r0, [r6]
    79a4:	ldr	r1, [r6, #4]
    79a8:	str	r1, [r4, #4]
    79ac:	str	r0, [r4]
    79b0:	mov	r0, #0
    79b4:	cmp	r5, #3
    79b8:	bne	79ec <cnxptiee+0x138>
    79bc:	ldr	r0, [r4]
    79c0:	ldr	r1, [r4, #4]
    79c4:	stm	sp, {r0, r1}
    79c8:	mov	r0, sp
    79cc:	orr	r1, r0, #7
    79d0:	mov	r0, #0
    79d4:	mov	r2, #0
    79d8:	ldrb	r3, [r1, -r2]
    79dc:	strb	r3, [r4, r2]
    79e0:	add	r2, r2, #1
    79e4:	cmp	r2, #8
    79e8:	bne	79d8 <cnxptiee+0x124>
    79ec:	sub	sp, fp, #16
    79f0:	pop	{r4, r5, r6, r7, fp, pc}

000079f4 <ieee2xpt>:
    79f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    79f8:	add	fp, sp, #24
    79fc:	sub	sp, sp, #16
    7a00:	mov	r8, r1
    7a04:	ldr	r6, [r0, #4]
    7a08:	ldrb	r7, [r0]
    7a0c:	ldrb	r4, [r0, #1]
    7a10:	ldrb	r5, [r0, #2]
    7a14:	ldrb	r0, [r0, #3]
    7a18:	strb	r4, [sp, #5]
    7a1c:	strb	r7, [sp, #4]
    7a20:	strb	r5, [sp, #6]
    7a24:	strb	r0, [sp, #7]
    7a28:	add	r0, sp, #4
    7a2c:	mov	r1, #4
    7a30:	bl	483c <memreverse@plt>
    7a34:	str	r6, [sp]
    7a38:	mov	r0, sp
    7a3c:	mov	r1, #4
    7a40:	bl	483c <memreverse@plt>
    7a44:	mov	r0, #0
    7a48:	str	r0, [r8, #4]
    7a4c:	str	r0, [r8]
    7a50:	and	r0, r4, r7
    7a54:	uxtb	r0, r0
    7a58:	cmp	r0, #255	; 0xff
    7a5c:	beq	7afc <ieee2xpt+0x108>
    7a60:	ldr	r2, [sp]
    7a64:	str	r2, [sp, #8]
    7a68:	ldr	r0, [sp, #4]
    7a6c:	mov	r1, r0
    7a70:	bfc	r1, #20, #12
    7a74:	str	r1, [sp, #12]
    7a78:	orrs	r3, r2, r0
    7a7c:	beq	7b44 <ieee2xpt+0x150>
    7a80:	orr	r5, r1, #1048576	; 0x100000
    7a84:	str	r5, [sp, #12]
    7a88:	ubfx	ip, r0, #20, #11
    7a8c:	movw	r1, #1023	; 0x3ff
    7a90:	sub	r3, ip, r1
    7a94:	ands	r1, r3, #3
    7a98:	beq	7abc <ieee2xpt+0xc8>
    7a9c:	lsl	r7, r2, r1
    7aa0:	str	r7, [sp, #8]
    7aa4:	mov	r7, #224	; 0xe0
    7aa8:	and	r2, r7, r2, lsr #24
    7aac:	rsb	r7, r1, #8
    7ab0:	lsr	r2, r2, r7
    7ab4:	orr	r1, r2, r5, lsl r1
    7ab8:	str	r1, [sp, #12]
    7abc:	mov	r1, #-16777216	; 0xff000000
    7ac0:	and	r1, r1, r3, lsl #22
    7ac4:	add	r1, r1, #1090519040	; 0x41000000
    7ac8:	and	r2, r0, #-2147483648	; 0x80000000
    7acc:	orr	r1, r1, r2
    7ad0:	ldr	r2, [sp, #12]
    7ad4:	orr	r1, r1, r2
    7ad8:	str	r1, [sp, #12]
    7adc:	movw	r1, #762	; 0x2fa
    7ae0:	cmp	ip, r1
    7ae4:	bhi	7b0c <ieee2xpt+0x118>
    7ae8:	mov	r0, #0
    7aec:	str	r0, [r8, #4]
    7af0:	str	r0, [r8]
    7af4:	sub	sp, fp, #24
    7af8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7afc:	mvn	r0, r5
    7b00:	cmp	r5, #45	; 0x2d
    7b04:	movweq	r0, #109	; 0x6d
    7b08:	b	7b38 <ieee2xpt+0x144>
    7b0c:	lsr	r1, ip, #3
    7b10:	cmp	r1, #159	; 0x9f
    7b14:	bcc	7b44 <ieee2xpt+0x150>
    7b18:	mov	r1, #255	; 0xff
    7b1c:	strb	r1, [r8, #7]
    7b20:	movw	r1, #65535	; 0xffff
    7b24:	strh	r1, [r8, #5]
    7b28:	mvn	r1, #0
    7b2c:	str	r1, [r8, #1]
    7b30:	mov	r1, #127	; 0x7f
    7b34:	orr	r0, r1, r0, lsr #24
    7b38:	strb	r0, [r8]
    7b3c:	sub	sp, fp, #24
    7b40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7b44:	add	r0, sp, #12
    7b48:	mov	r1, #4
    7b4c:	bl	483c <memreverse@plt>
    7b50:	ldr	r0, [sp, #12]
    7b54:	str	r0, [r8]
    7b58:	add	r0, sp, #8
    7b5c:	mov	r1, #4
    7b60:	bl	483c <memreverse@plt>
    7b64:	ldr	r0, [sp, #8]
    7b68:	str	r0, [r8, #4]
    7b6c:	sub	sp, fp, #24
    7b70:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00007b74 <xpt2ieee>:
    7b74:	push	{r4, r5, fp, lr}
    7b78:	add	fp, sp, #8
    7b7c:	sub	sp, sp, #24
    7b80:	mov	r4, r1
    7b84:	mov	r1, #0
    7b88:	str	r1, [sp, #4]
    7b8c:	str	r1, [sp]
    7b90:	ldr	r2, [r0]
    7b94:	ldr	r0, [r0, #4]
    7b98:	str	r0, [sp, #20]
    7b9c:	str	r2, [sp, #16]
    7ba0:	str	r1, [r4, #4]
    7ba4:	str	r1, [r4]
    7ba8:	ldrb	r5, [sp, #16]
    7bac:	cmp	r5, #0
    7bb0:	beq	7bd0 <xpt2ieee+0x5c>
    7bb4:	add	r0, sp, #16
    7bb8:	orr	r0, r0, #1
    7bbc:	mov	r1, r4
    7bc0:	mov	r2, #7
    7bc4:	bl	4a10 <memcmp@plt>
    7bc8:	cmp	r0, #0
    7bcc:	beq	7cd8 <xpt2ieee+0x164>
    7bd0:	ldr	r0, [sp, #16]
    7bd4:	str	r0, [sp, #4]
    7bd8:	add	r0, sp, #4
    7bdc:	mov	r1, #4
    7be0:	bl	483c <memreverse@plt>
    7be4:	ldr	r0, [sp, #20]
    7be8:	str	r0, [sp]
    7bec:	mov	r0, sp
    7bf0:	mov	r1, #4
    7bf4:	bl	483c <memreverse@plt>
    7bf8:	ldr	r0, [sp, #4]
    7bfc:	bic	r2, r0, #-2147483648	; 0x80000000
    7c00:	ldr	r1, [sp]
    7c04:	cmn	r2, #-2147483647	; 0x80000001
    7c08:	cmneq	r1, #1
    7c0c:	beq	7c88 <xpt2ieee+0x114>
    7c10:	str	r1, [sp, #8]
    7c14:	bic	r2, r0, #-16777216	; 0xff000000
    7c18:	str	r2, [sp, #12]
    7c1c:	orrs	r3, r1, r0
    7c20:	beq	7cd0 <xpt2ieee+0x15c>
    7c24:	mov	r3, #3
    7c28:	tst	r0, #8388608	; 0x800000
    7c2c:	moveq	r3, #2
    7c30:	tsteq	r0, #4194304	; 0x400000
    7c34:	beq	7cf0 <xpt2ieee+0x17c>
    7c38:	lsr	r2, r2, r3
    7c3c:	str	r2, [sp, #12]
    7c40:	rsb	ip, r3, #32
    7c44:	and	r2, r0, #7
    7c48:	lsl	r2, r2, ip
    7c4c:	orr	r1, r2, r1, lsr r3
    7c50:	str	r1, [sp, #8]
    7c54:	mov	ip, r3
    7c58:	and	r1, r5, #127	; 0x7f
    7c5c:	movw	r2, #3836	; 0xefc
    7c60:	add	r1, r2, r1, lsl #2
    7c64:	orr	r1, ip, r1
    7c68:	movw	r2, #0
    7c6c:	movt	r2, #16368	; 0x3ff0
    7c70:	add	r1, r2, r1, lsl #20
    7c74:	and	r0, r0, #-2147483648	; 0x80000000
    7c78:	ldr	r2, [sp, #12]
    7c7c:	bic	r2, r2, #1048576	; 0x100000
    7c80:	orr	r0, r2, r0
    7c84:	b	7ca0 <xpt2ieee+0x12c>
    7c88:	mov	r1, #0
    7c8c:	str	r1, [sp, #8]
    7c90:	movw	r1, #0
    7c94:	movt	r1, #16368	; 0x3ff0
    7c98:	add	r1, r1, #1073741824	; 0x40000000
    7c9c:	and	r0, r0, #-2147483648	; 0x80000000
    7ca0:	orr	r0, r0, r1
    7ca4:	str	r0, [sp, #12]
    7ca8:	add	r0, sp, #12
    7cac:	mov	r1, #4
    7cb0:	bl	483c <memreverse@plt>
    7cb4:	ldr	r0, [sp, #12]
    7cb8:	str	r0, [r4]
    7cbc:	add	r0, sp, #8
    7cc0:	mov	r1, #4
    7cc4:	bl	483c <memreverse@plt>
    7cc8:	ldr	r0, [sp, #8]
    7ccc:	str	r0, [r4, #4]
    7cd0:	sub	sp, fp, #8
    7cd4:	pop	{r4, r5, fp, pc}
    7cd8:	movw	r0, #65535	; 0xffff
    7cdc:	strh	r0, [r4]
    7ce0:	mvn	r0, r5
    7ce4:	strb	r0, [r4, #2]
    7ce8:	sub	sp, fp, #8
    7cec:	pop	{r4, r5, fp, pc}
    7cf0:	mov	r3, #1
    7cf4:	mov	ip, #0
    7cf8:	tst	r0, #2097152	; 0x200000
    7cfc:	bne	7c38 <xpt2ieee+0xc4>
    7d00:	b	7c58 <xpt2ieee+0xe4>

00007d04 <get_native>:
    7d04:	push	{r4, r5, r6, sl, fp, lr}
    7d08:	add	fp, sp, #16
    7d0c:	mov	r4, #0
    7d10:	ldr	r5, [pc, #72]	; 7d60 <get_native+0x5c>
    7d14:	add	r5, pc, r5
    7d18:	ldr	r6, [pc, #68]	; 7d64 <get_native+0x60>
    7d1c:	add	r6, pc, r6
    7d20:	cmp	r4, #2
    7d24:	bhi	7d54 <get_native+0x50>
    7d28:	mov	r0, r6
    7d2c:	mov	r1, r5
    7d30:	mov	r2, #8
    7d34:	bl	4a10 <memcmp@plt>
    7d38:	add	r5, r5, #8
    7d3c:	add	r4, r4, #1
    7d40:	cmp	r0, #0
    7d44:	moveq	r0, r4
    7d48:	popeq	{r4, r5, r6, sl, fp, pc}
    7d4c:	cmp	r4, #2
    7d50:	bls	7d28 <get_native+0x24>
    7d54:	mvn	r4, #0
    7d58:	mov	r0, r4
    7d5c:	pop	{r4, r5, r6, sl, fp, pc}
    7d60:	.word	0x0003d60c
    7d64:	.word	0x0003d61c

00007d68 <sas_read8>:
    7d68:	mov	r2, r1
    7d6c:	mov	r1, r0
    7d70:	ldr	r0, [r0]
    7d74:	ldr	r1, [r1, #4]
    7d78:	cmp	r2, #0
    7d7c:	bxeq	lr
    7d80:	b	47f4 <byteswap8@plt>

00007d84 <sas_read4>:
    7d84:	ldr	r0, [r0]
    7d88:	cmp	r1, #0
    7d8c:	bxeq	lr
    7d90:	b	480c <byteswap4@plt>

00007d94 <sas_read2>:
    7d94:	ldrh	r0, [r0]
    7d98:	cmp	r1, #0
    7d9c:	bxeq	lr
    7da0:	b	4920 <byteswap2@plt>

00007da4 <sas_subheader_remainder>:
    7da4:	sub	r0, r0, r1, lsl #1
    7da8:	sub	r0, r0, #4
    7dac:	bx	lr

00007db0 <sas_read_header>:
    7db0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7db4:	add	fp, sp, #28
    7db8:	sub	sp, sp, #396	; 0x18c
    7dbc:	sub	sp, sp, #1024	; 0x400
    7dc0:	mov	r4, r3
    7dc4:	mov	r5, r2
    7dc8:	mov	r7, r1
    7dcc:	mov	r6, r0
    7dd0:	vmov.i32	q8, #0	; 0x00000000
    7dd4:	add	r0, sp, #56	; 0x38
    7dd8:	add	r1, r0, #16
    7ddc:	vst1.64	{d16-d17}, [r1]
    7de0:	add	r1, r0, #28
    7de4:	vst1.32	{d16-d17}, [r1]
    7de8:	mov	r1, #20
    7dec:	mov	r2, r0
    7df0:	vst1.64	{d16-d17}, [r2], r1
    7df4:	mov	r1, #60	; 0x3c
    7df8:	str	r1, [r2]
    7dfc:	mov	r1, #1
    7e00:	str	r1, [sp, #68]	; 0x44
    7e04:	bl	48cc <mktime@plt>
    7e08:	mov	sl, r0
    7e0c:	ldr	r3, [r6, #12]
    7e10:	ldr	r2, [r6, #20]
    7e14:	sub	r0, fp, #196	; 0xc4
    7e18:	mov	r1, #164	; 0xa4
    7e1c:	blx	r3
    7e20:	cmp	r0, #164	; 0xa4
    7e24:	bcs	7e30 <sas_read_header+0x80>
    7e28:	mov	r5, #2
    7e2c:	b	82dc <sas_read_header+0x52c>
    7e30:	str	r5, [sp, #16]
    7e34:	ldr	r1, [pc, #1196]	; 82e8 <sas_read_header+0x538>
    7e38:	ldr	r1, [pc, r1]
    7e3c:	sub	r9, fp, #196	; 0xc4
    7e40:	mov	r0, r9
    7e44:	mov	r2, #32
    7e48:	bl	4a10 <memcmp@plt>
    7e4c:	cmp	r0, #0
    7e50:	beq	7e74 <sas_read_header+0xc4>
    7e54:	ldr	r1, [pc, #1168]	; 82ec <sas_read_header+0x53c>
    7e58:	ldr	r1, [pc, r1]
    7e5c:	sub	r0, fp, #196	; 0xc4
    7e60:	mov	r2, #32
    7e64:	bl	4a10 <memcmp@plt>
    7e68:	mov	r5, #5
    7e6c:	cmp	r0, #0
    7e70:	bne	82dc <sas_read_header+0x52c>
    7e74:	ldrb	r0, [fp, #-161]	; 0xffffff5f
    7e78:	cmp	r0, #51	; 0x33
    7e7c:	moveq	r0, #4
    7e80:	streq	r0, [r7, #24]
    7e84:	ldrb	r0, [fp, #-164]	; 0xffffff5c
    7e88:	cmp	r0, #51	; 0x33
    7e8c:	moveq	r0, #1
    7e90:	streq	r0, [r7, #4]
    7e94:	mov	r5, #5
    7e98:	ldrb	r0, [fp, #-159]	; 0xffffff61
    7e9c:	cmp	r0, #1
    7ea0:	beq	7ebc <sas_read_header+0x10c>
    7ea4:	cmp	r0, #0
    7ea8:	bne	82dc <sas_read_header+0x52c>
    7eac:	mov	r8, #0
    7eb0:	bl	492c <machine_is_little_endian@plt>
    7eb4:	str	r0, [sp, #12]
    7eb8:	b	7ed0 <sas_read_header+0x120>
    7ebc:	bl	492c <machine_is_little_endian@plt>
    7ec0:	clz	r0, r0
    7ec4:	lsr	r0, r0, #5
    7ec8:	str	r0, [sp, #12]
    7ecc:	mov	r8, #1
    7ed0:	str	r8, [r7]
    7ed4:	ldr	r0, [pc, #1044]	; 82f0 <sas_read_header+0x540>
    7ed8:	add	r0, pc, r0
    7edc:	add	r0, r0, #4
    7ee0:	mov	r1, #0
    7ee4:	ldrb	r2, [fp, #-126]	; 0xffffff82
    7ee8:	mov	r8, r4
    7eec:	ldr	r3, [r0, #-4]
    7ef0:	cmp	r3, r2
    7ef4:	beq	7f0c <sas_read_header+0x15c>
    7ef8:	add	r0, r0, #36	; 0x24
    7efc:	add	r1, r1, #1
    7f00:	cmp	r1, #62	; 0x3e
    7f04:	bcc	7eec <sas_read_header+0x13c>
    7f08:	b	7f10 <sas_read_header+0x160>
    7f0c:	str	r0, [r7, #144]	; 0x90
    7f10:	ldr	r0, [r7, #144]	; 0x90
    7f14:	cmp	r0, #0
    7f18:	beq	807c <sas_read_header+0x2cc>
    7f1c:	add	r0, r9, #92	; 0x5c
    7f20:	add	r1, r9, #108	; 0x6c
    7f24:	add	r2, r9, #140	; 0x8c
    7f28:	vld1.32	{d16-d17}, [r2]
    7f2c:	add	r2, r7, #128	; 0x80
    7f30:	add	r3, r9, #124	; 0x7c
    7f34:	vld1.32	{d18-d19}, [r3]
    7f38:	vld1.32	{d20-d21}, [r1]
    7f3c:	vld1.32	{d22-d23}, [r0]
    7f40:	vst1.8	{d16-d17}, [r2]
    7f44:	add	r0, r7, #112	; 0x70
    7f48:	vst1.8	{d18-d19}, [r0]
    7f4c:	add	r0, r7, #96	; 0x60
    7f50:	vst1.8	{d20-d21}, [r0]
    7f54:	add	r0, r7, #80	; 0x50
    7f58:	vst1.8	{d22-d23}, [r0]
    7f5c:	ldr	r0, [r7, #24]
    7f60:	ldr	r3, [r6, #8]
    7f64:	ldr	r2, [r6, #20]
    7f68:	mov	r1, #1
    7f6c:	blx	r3
    7f70:	cmn	r0, #1
    7f74:	beq	82d8 <sas_read_header+0x528>
    7f78:	ldr	r3, [r6, #12]
    7f7c:	ldr	r2, [r6, #20]
    7f80:	add	r0, sp, #48	; 0x30
    7f84:	mov	r1, #8
    7f88:	blx	r3
    7f8c:	cmp	r0, #8
    7f90:	bcc	7e28 <sas_read_header+0x78>
    7f94:	ldr	r4, [sp, #12]
    7f98:	cmp	r4, #0
    7f9c:	beq	7fac <sas_read_header+0x1fc>
    7fa0:	vldr	d0, [sp, #48]	; 0x30
    7fa4:	bl	4fa4 <byteswap_double@plt>
    7fa8:	vstr	d0, [sp, #48]	; 0x30
    7fac:	ldr	r3, [r6, #12]
    7fb0:	ldr	r2, [r6, #20]
    7fb4:	add	r0, sp, #40	; 0x28
    7fb8:	mov	r1, #8
    7fbc:	blx	r3
    7fc0:	cmp	r0, #8
    7fc4:	bcc	7e28 <sas_read_header+0x78>
    7fc8:	cmp	r4, #0
    7fcc:	beq	7fdc <sas_read_header+0x22c>
    7fd0:	vldr	d0, [sp, #40]	; 0x28
    7fd4:	bl	4fa4 <byteswap_double@plt>
    7fd8:	vstr	d0, [sp, #40]	; 0x28
    7fdc:	vldr	d0, [sp, #48]	; 0x30
    7fe0:	mov	r0, sl
    7fe4:	bl	8308 <sas_convert_time>
    7fe8:	str	r0, [r7, #72]	; 0x48
    7fec:	vldr	d0, [sp, #40]	; 0x28
    7ff0:	mov	r0, sl
    7ff4:	bl	8308 <sas_convert_time>
    7ff8:	str	r0, [r7, #76]	; 0x4c
    7ffc:	ldr	r3, [r6, #8]
    8000:	ldr	r2, [r6, #20]
    8004:	mov	r0, #16
    8008:	mov	r1, #1
    800c:	blx	r3
    8010:	cmn	r0, #1
    8014:	beq	82d8 <sas_read_header+0x528>
    8018:	ldr	r3, [r6, #12]
    801c:	ldr	r2, [r6, #20]
    8020:	add	r0, sp, #36	; 0x24
    8024:	mov	r1, #4
    8028:	blx	r3
    802c:	cmp	r0, #4
    8030:	bcc	7e28 <sas_read_header+0x78>
    8034:	ldr	r3, [r6, #12]
    8038:	ldr	r2, [r6, #20]
    803c:	add	r0, sp, #32
    8040:	mov	r1, #4
    8044:	blx	r3
    8048:	cmp	r0, #4
    804c:	bcc	7e28 <sas_read_header+0x78>
    8050:	ldr	r0, [sp, #36]	; 0x24
    8054:	cmp	r4, #0
    8058:	beq	80b8 <sas_read_header+0x308>
    805c:	bl	480c <byteswap4@plt>
    8060:	mov	r9, r7
    8064:	str	r0, [r9, #64]!	; 0x40
    8068:	mov	r0, #0
    806c:	str	r0, [r9, #4]
    8070:	ldr	r0, [sp, #32]
    8074:	bl	480c <byteswap4@plt>
    8078:	b	80cc <sas_read_header+0x31c>
    807c:	mov	r5, #7
    8080:	ldr	r6, [sp, #16]
    8084:	cmp	r6, #0
    8088:	beq	82dc <sas_read_header+0x52c>
    808c:	ldrb	r3, [fp, #-126]	; 0xffffff82
    8090:	add	r4, sp, #104	; 0x68
    8094:	ldr	r2, [pc, #600]	; 82f4 <sas_read_header+0x544>
    8098:	add	r2, pc, r2
    809c:	mov	r0, r4
    80a0:	mov	r1, #1024	; 0x400
    80a4:	bl	4d04 <snprintf@plt>
    80a8:	mov	r0, r4
    80ac:	mov	r1, r8
    80b0:	blx	r6
    80b4:	b	82dc <sas_read_header+0x52c>
    80b8:	mov	r9, r7
    80bc:	str	r0, [r9, #64]!	; 0x40
    80c0:	mov	r0, #0
    80c4:	str	r0, [r9, #4]
    80c8:	ldr	r0, [sp, #32]
    80cc:	mov	r1, #0
    80d0:	strd	r0, [r7, #32]
    80d4:	cmp	r0, #1024	; 0x400
    80d8:	bcc	82dc <sas_read_header+0x52c>
    80dc:	ldr	r2, [r9]
    80e0:	ldr	r1, [r9, #4]
    80e4:	subs	r3, r2, #1024	; 0x400
    80e8:	sbcs	r3, r1, #0
    80ec:	blt	82dc <sas_read_header+0x52c>
    80f0:	cmp	r0, #16777216	; 0x1000000
    80f4:	bhi	82dc <sas_read_header+0x52c>
    80f8:	rsbs	r0, r2, #1048576	; 0x100000
    80fc:	rscs	r0, r1, #0
    8100:	blt	82dc <sas_read_header+0x52c>
    8104:	ldr	r1, [r7, #4]
    8108:	add	r0, r7, #40	; 0x28
    810c:	cmp	r1, #0
    8110:	beq	8160 <sas_read_header+0x3b0>
    8114:	mov	r1, #0
    8118:	mov	r2, #40	; 0x28
    811c:	str	r2, [r0]
    8120:	str	r1, [r0, #4]
    8124:	mov	r0, #24
    8128:	strd	r0, [r7, #48]	; 0x30
    812c:	ldr	r3, [r6, #12]
    8130:	ldr	r2, [r6, #20]
    8134:	add	r0, sp, #104	; 0x68
    8138:	mov	r1, #8
    813c:	blx	r3
    8140:	cmp	r0, #8
    8144:	bcc	7e28 <sas_read_header+0x78>
    8148:	ldr	r0, [sp, #104]	; 0x68
    814c:	ldr	r1, [sp, #108]	; 0x6c
    8150:	cmp	r4, #0
    8154:	beq	81a8 <sas_read_header+0x3f8>
    8158:	bl	47f4 <byteswap8@plt>
    815c:	b	81a8 <sas_read_header+0x3f8>
    8160:	mov	r1, #0
    8164:	mov	r2, #24
    8168:	str	r2, [r0]
    816c:	str	r1, [r0, #4]
    8170:	mov	r0, #12
    8174:	strd	r0, [r7, #48]	; 0x30
    8178:	ldr	r3, [r6, #12]
    817c:	ldr	r2, [r6, #20]
    8180:	add	r0, sp, #104	; 0x68
    8184:	mov	r1, #4
    8188:	blx	r3
    818c:	cmp	r0, #4
    8190:	bcc	7e28 <sas_read_header+0x78>
    8194:	ldr	r0, [sp, #104]	; 0x68
    8198:	cmp	r4, #0
    819c:	beq	81a4 <sas_read_header+0x3f4>
    81a0:	bl	480c <byteswap4@plt>
    81a4:	mov	r1, #0
    81a8:	strd	r0, [r7, #56]	; 0x38
    81ac:	ldrd	r0, [r7, #56]	; 0x38
    81b0:	rsbs	r0, r0, #16777216	; 0x1000000
    81b4:	rscs	r0, r1, #0
    81b8:	blt	82dc <sas_read_header+0x52c>
    81bc:	ldr	r3, [r6, #8]
    81c0:	ldr	r2, [r6, #20]
    81c4:	mov	r0, #8
    81c8:	mov	r1, #1
    81cc:	blx	r3
    81d0:	cmn	r0, #1
    81d4:	beq	82a0 <sas_read_header+0x4f0>
    81d8:	ldr	r3, [r6, #12]
    81dc:	ldr	r2, [r6, #20]
    81e0:	sub	r0, fp, #316	; 0x13c
    81e4:	mov	r1, #120	; 0x78
    81e8:	blx	r3
    81ec:	cmp	r0, #120	; 0x78
    81f0:	mov	r5, #2
    81f4:	bcc	82dc <sas_read_header+0x52c>
    81f8:	add	r0, sp, #20
    81fc:	str	r0, [sp]
    8200:	sub	r0, fp, #316	; 0x13c
    8204:	ldr	r1, [pc, #240]	; 82fc <sas_read_header+0x54c>
    8208:	add	r1, pc, r1
    820c:	add	r2, sp, #28
    8210:	add	r3, sp, #24
    8214:	bl	4d10 <__isoc99_sscanf@plt>
    8218:	cmp	r0, #3
    821c:	mov	r5, #5
    8220:	bne	82dc <sas_read_header+0x52c>
    8224:	ldr	r0, [sp, #28]
    8228:	ldr	r1, [sp, #24]
    822c:	ldr	r2, [sp, #20]
    8230:	orr	r3, r2, r1
    8234:	orr	r5, r0, #1
    8238:	eor	r5, r5, #9
    823c:	orrs	r3, r5, r3
    8240:	movwne	r3, #1
    8244:	str	r3, [r7, #8]
    8248:	add	r3, r7, #12
    824c:	stm	r3, {r0, r1, r2}
    8250:	ldr	r0, [r9]
    8254:	ldr	r3, [r6, #8]
    8258:	ldr	r2, [r6, #20]
    825c:	mov	r5, #0
    8260:	mov	r1, #0
    8264:	blx	r3
    8268:	cmn	r0, #1
    826c:	bne	82dc <sas_read_header+0x52c>
    8270:	ldr	r0, [sp, #16]
    8274:	cmp	r0, #0
    8278:	beq	82d8 <sas_read_header+0x528>
    827c:	ldrd	r0, [r9]
    8280:	stm	sp, {r0, r1}
    8284:	add	r4, sp, #104	; 0x68
    8288:	ldr	r2, [pc, #112]	; 8300 <sas_read_header+0x550>
    828c:	add	r2, pc, r2
    8290:	mov	r0, r4
    8294:	mov	r1, #1024	; 0x400
    8298:	bl	4d04 <snprintf@plt>
    829c:	b	82c8 <sas_read_header+0x518>
    82a0:	ldr	r0, [sp, #16]
    82a4:	cmp	r0, #0
    82a8:	beq	82d8 <sas_read_header+0x528>
    82ac:	add	r4, sp, #104	; 0x68
    82b0:	ldr	r2, [pc, #64]	; 82f8 <sas_read_header+0x548>
    82b4:	add	r2, pc, r2
    82b8:	mov	r0, r4
    82bc:	mov	r1, #1024	; 0x400
    82c0:	mov	r3, #8
    82c4:	bl	4d04 <snprintf@plt>
    82c8:	mov	r0, r4
    82cc:	mov	r1, r8
    82d0:	ldr	r2, [sp, #16]
    82d4:	blx	r2
    82d8:	mov	r5, #15
    82dc:	mov	r0, r5
    82e0:	sub	sp, fp, #28
    82e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    82e8:	.word	0x0003d4c0
    82ec:	.word	0x0003d470
    82f0:	.word	0x0003d4a8
    82f4:	.word	0x0001d6e8
    82f8:	.word	0x0001d4ef
    82fc:	.word	0x0001d5c2
    8300:	.word	0x0001d54b
    8304:	.word	0xe320f000

00008308 <sas_convert_time>:
    8308:	push	{fp, lr}
    830c:	mov	fp, sp
    8310:	vpush	{d8}
    8314:	vmov	s2, r0
    8318:	vcvt.f64.s32	d16, s2
    831c:	vadd.f64	d8, d16, d0
    8320:	vmov.f64	d0, d8
    8324:	bl	4db8 <__isnan@plt>
    8328:	mov	r1, r0
    832c:	mov	r0, #0
    8330:	cmp	r1, #0
    8334:	bne	8364 <sas_convert_time+0x5c>
    8338:	vldr	d16, [pc, #48]	; 8370 <sas_convert_time+0x68>
    833c:	mvn	r0, #-2147483648	; 0x80000000
    8340:	vcmpe.f64	d8, d16
    8344:	vmrs	APSR_nzcv, fpscr
    8348:	bgt	8364 <sas_convert_time+0x5c>
    834c:	vldr	d16, [pc, #36]	; 8378 <sas_convert_time+0x70>
    8350:	mov	r0, #-2147483648	; 0x80000000
    8354:	vcmpe.f64	d8, d16
    8358:	vmrs	APSR_nzcv, fpscr
    835c:	vcvtpl.s32.f64	s0, d8
    8360:	vmovpl	r0, s0
    8364:	vpop	{d8}
    8368:	pop	{fp, pc}
    836c:	nop	{0}
    8370:	.word	0xffc00000
    8374:	.word	0x41dfffff
    8378:	.word	0x00000000
    837c:	.word	0xc1e00000

00008380 <sas_write_header>:
    8380:	sub	sp, sp, #8
    8384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8388:	add	fp, sp, #28
    838c:	sub	sp, sp, #228	; 0xe4
    8390:	mov	r8, r1
    8394:	mov	sl, r0
    8398:	str	r3, [fp, #12]
    839c:	str	r2, [fp, #8]
    83a0:	vmov.i32	q8, #0	; 0x00000000
    83a4:	sub	r0, fp, #80	; 0x50
    83a8:	add	r1, r0, #16
    83ac:	vst1.64	{d16-d17}, [r1]
    83b0:	add	r1, r0, #28
    83b4:	vst1.32	{d16-d17}, [r1]
    83b8:	mov	r1, #20
    83bc:	mov	r2, r0
    83c0:	vst1.64	{d16-d17}, [r2], r1
    83c4:	mov	r1, #60	; 0x3c
    83c8:	str	r1, [r2]
    83cc:	mov	r1, #1
    83d0:	str	r1, [fp, #-68]	; 0xffffffbc
    83d4:	bl	48cc <mktime@plt>
    83d8:	mov	r9, r0
    83dc:	add	r7, fp, #8
    83e0:	add	r5, r7, #92	; 0x5c
    83e4:	mov	r6, #64	; 0x40
    83e8:	mov	r0, r5
    83ec:	mov	r1, #32
    83f0:	mov	r2, #64	; 0x40
    83f4:	bl	4d28 <memset@plt>
    83f8:	add	r4, sl, #88	; 0x58
    83fc:	mov	r0, r4
    8400:	bl	4c8c <strlen@plt>
    8404:	cmp	r0, #64	; 0x40
    8408:	movcc	r6, r0
    840c:	cmp	r6, #0
    8410:	beq	8428 <sas_write_header+0xa8>
    8414:	mov	r0, r5
    8418:	mov	r1, r4
    841c:	mov	r2, r6
    8420:	bl	4998 <memcpy@plt>
    8424:	b	8444 <sas_write_header+0xc4>
    8428:	mov	r0, #84	; 0x54
    842c:	strb	r0, [r5, #6]
    8430:	movw	r0, #17747	; 0x4553
    8434:	strh	r0, [r5, #4]
    8438:	movw	r0, #16708	; 0x4144
    843c:	movt	r0, #16724	; 0x4154
    8440:	str	r0, [r5]
    8444:	mov	r0, sl
    8448:	mov	r1, r7
    844c:	mov	r2, #164	; 0xa4
    8450:	bl	4ef0 <readstat_write_bytes@plt>
    8454:	cmp	r0, #0
    8458:	bne	8618 <sas_write_header+0x298>
    845c:	ldr	r1, [r8, #24]
    8460:	mov	r0, sl
    8464:	bl	4a94 <readstat_write_zeros@plt>
    8468:	cmp	r0, #0
    846c:	bne	8618 <sas_write_header+0x298>
    8470:	ldr	r0, [r8, #72]	; 0x48
    8474:	sub	r0, r0, r9
    8478:	vmov	s0, r0
    847c:	vcvt.f64.s32	d16, s0
    8480:	vstr	d16, [fp, #-88]	; 0xffffffa8
    8484:	sub	r1, fp, #88	; 0x58
    8488:	mov	r0, sl
    848c:	mov	r2, #8
    8490:	bl	4ef0 <readstat_write_bytes@plt>
    8494:	cmp	r0, #0
    8498:	bne	8618 <sas_write_header+0x298>
    849c:	ldr	r0, [r8, #76]	; 0x4c
    84a0:	sub	r0, r0, r9
    84a4:	vmov	s0, r0
    84a8:	vcvt.f64.s32	d16, s0
    84ac:	vstr	d16, [fp, #-96]	; 0xffffffa0
    84b0:	sub	r1, fp, #96	; 0x60
    84b4:	mov	r0, sl
    84b8:	mov	r2, #8
    84bc:	bl	4ef0 <readstat_write_bytes@plt>
    84c0:	cmp	r0, #0
    84c4:	bne	8618 <sas_write_header+0x298>
    84c8:	mov	r0, sl
    84cc:	mov	r1, #16
    84d0:	bl	4a94 <readstat_write_zeros@plt>
    84d4:	cmp	r0, #0
    84d8:	bne	8618 <sas_write_header+0x298>
    84dc:	mov	r4, r8
    84e0:	ldr	r0, [r4, #64]!	; 0x40
    84e4:	str	r0, [fp, #-100]	; 0xffffff9c
    84e8:	ldr	r0, [r4, #-32]	; 0xffffffe0
    84ec:	str	r0, [fp, #-104]	; 0xffffff98
    84f0:	sub	r1, fp, #100	; 0x64
    84f4:	mov	r0, sl
    84f8:	mov	r2, #4
    84fc:	bl	4ef0 <readstat_write_bytes@plt>
    8500:	cmp	r0, #0
    8504:	bne	8618 <sas_write_header+0x298>
    8508:	sub	r1, fp, #104	; 0x68
    850c:	mov	r0, sl
    8510:	mov	r2, #4
    8514:	bl	4ef0 <readstat_write_bytes@plt>
    8518:	cmp	r0, #0
    851c:	bne	8618 <sas_write_header+0x298>
    8520:	ldr	r0, [r8, #4]
    8524:	cmp	r0, #0
    8528:	beq	8548 <sas_write_header+0x1c8>
    852c:	ldrd	r0, [r8, #56]	; 0x38
    8530:	str	r1, [fp, #-108]	; 0xffffff94
    8534:	str	r0, [fp, #-112]	; 0xffffff90
    8538:	sub	r1, fp, #112	; 0x70
    853c:	mov	r0, sl
    8540:	mov	r2, #8
    8544:	b	855c <sas_write_header+0x1dc>
    8548:	ldr	r0, [r8, #56]	; 0x38
    854c:	str	r0, [fp, #-112]	; 0xffffff90
    8550:	sub	r1, fp, #112	; 0x70
    8554:	mov	r0, sl
    8558:	mov	r2, #4
    855c:	bl	4ef0 <readstat_write_bytes@plt>
    8560:	cmp	r0, #0
    8564:	bne	8618 <sas_write_header+0x298>
    8568:	mov	r0, sl
    856c:	mov	r1, #8
    8570:	bl	4a94 <readstat_write_zeros@plt>
    8574:	cmp	r0, #0
    8578:	bne	8618 <sas_write_header+0x298>
    857c:	add	r5, sp, #24
    8580:	ldr	r1, [pc, #160]	; 8628 <sas_write_header+0x2a8>
    8584:	add	r1, pc, r1
    8588:	mov	r0, r5
    858c:	mov	r2, #120	; 0x78
    8590:	bl	4998 <memcpy@plt>
    8594:	mov	r0, #0
    8598:	strb	r0, [sp, #16]
    859c:	str	r0, [sp, #12]
    85a0:	str	r0, [sp, #8]
    85a4:	ldr	r0, [sl, #8]
    85a8:	mov	r1, #101	; 0x65
    85ac:	str	r1, [sp]
    85b0:	movw	r1, #52429	; 0xcccd
    85b4:	movt	r1, #52428	; 0xcccc
    85b8:	umull	r1, r2, r0, r1
    85bc:	lsr	r1, r2, #3
    85c0:	add	r1, r1, r1, lsl #2
    85c4:	sub	r3, r0, r1, lsl #1
    85c8:	add	r0, sp, #8
    85cc:	ldr	r2, [pc, #88]	; 862c <sas_write_header+0x2ac>
    85d0:	add	r2, pc, r2
    85d4:	mov	r1, #9
    85d8:	bl	4d04 <snprintf@plt>
    85dc:	ldr	r0, [sp, #8]
    85e0:	ldr	r1, [sp, #12]
    85e4:	str	r1, [sp, #28]
    85e8:	str	r0, [sp, #24]
    85ec:	mov	r0, sl
    85f0:	mov	r1, r5
    85f4:	mov	r2, #120	; 0x78
    85f8:	bl	4ef0 <readstat_write_bytes@plt>
    85fc:	cmp	r0, #0
    8600:	bne	8618 <sas_write_header+0x298>
    8604:	ldr	r0, [sl, #4]
    8608:	ldr	r1, [r4]
    860c:	sub	r1, r1, r0
    8610:	mov	r0, sl
    8614:	bl	4a94 <readstat_write_zeros@plt>
    8618:	sub	sp, fp, #28
    861c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8620:	add	sp, sp, #8
    8624:	bx	lr
    8628:	.word	0x0001d2bc
    862c:	.word	0x0001d231

00008630 <sas_header_info_init>:
    8630:	push	{r4, r5, r6, sl, fp, lr}
    8634:	add	fp, sp, #16
    8638:	mov	r6, r1
    863c:	mov	r5, r0
    8640:	mov	r0, #1
    8644:	mov	r1, #152	; 0x98
    8648:	bl	47d0 <calloc@plt>
    864c:	ldr	r1, [r5, #20]
    8650:	mov	r2, #0
    8654:	mov	r3, #4096	; 0x1000
    8658:	cmp	r6, #0
    865c:	mov	r4, r6
    8660:	movwne	r4, #1
    8664:	str	r4, [r0, #4]
    8668:	mov	r5, #1024	; 0x400
    866c:	movwne	r5, #8192	; 0x2000
    8670:	mov	r4, #24
    8674:	cmp	r6, #0
    8678:	movwne	r4, #40	; 0x28
    867c:	mov	r6, #12
    8680:	movwne	r6, #24
    8684:	str	r3, [r0, #32]
    8688:	str	r2, [r0, #36]	; 0x24
    868c:	str	r4, [r0, #40]	; 0x28
    8690:	str	r2, [r0, #44]	; 0x2c
    8694:	str	r6, [r0, #48]	; 0x30
    8698:	str	r2, [r0, #52]	; 0x34
    869c:	str	r5, [r0, #64]	; 0x40
    86a0:	str	r2, [r0, #68]	; 0x44
    86a4:	str	r1, [r0, #72]	; 0x48
    86a8:	str	r1, [r0, #76]	; 0x4c
    86ac:	pop	{r4, r5, r6, sl, fp, pc}

000086b0 <sas_fill_page>:
    86b0:	push	{r4, r6, r7, sl, fp, lr}
    86b4:	add	fp, sp, #16
    86b8:	mov	r4, r0
    86bc:	ldrd	r6, [r1, #32]
    86c0:	ldrd	r0, [r1, #64]	; 0x40
    86c4:	ldr	r2, [r4, #4]
    86c8:	subs	r0, r2, r0
    86cc:	rsc	r1, r1, #0
    86d0:	mov	r2, r6
    86d4:	mov	r3, r7
    86d8:	bl	24c88 <__aeabi_ldivmod>
    86dc:	orrs	r0, r2, r3
    86e0:	moveq	r0, #0
    86e4:	popeq	{r4, r6, r7, sl, fp, pc}
    86e8:	sub	r1, r6, r2
    86ec:	mov	r0, r4
    86f0:	pop	{r4, r6, r7, sl, fp, lr}
    86f4:	b	4a94 <readstat_write_zeros@plt>

000086f8 <sas_validate_name>:
    86f8:	push	{r4, r5, r6, sl, fp, lr}
    86fc:	add	fp, sp, #16
    8700:	mov	r4, r1
    8704:	mov	r5, r0
    8708:	b	8710 <sas_validate_name+0x18>
    870c:	add	r0, r0, #1
    8710:	ldrb	r1, [r0]
    8714:	cmp	r1, #95	; 0x5f
    8718:	beq	870c <sas_validate_name+0x14>
    871c:	cmp	r1, #0
    8720:	beq	8754 <sas_validate_name+0x5c>
    8724:	sub	r2, r1, #48	; 0x30
    8728:	uxtb	r2, r2
    872c:	cmp	r2, #10
    8730:	bcc	870c <sas_validate_name+0x14>
    8734:	and	r1, r1, #223	; 0xdf
    8738:	sub	r1, r1, #65	; 0x41
    873c:	uxtb	r1, r1
    8740:	cmp	r1, #25
    8744:	bls	870c <sas_validate_name+0x14>
    8748:	mov	r6, #26
    874c:	mov	r0, r6
    8750:	pop	{r4, r5, r6, sl, fp, pc}
    8754:	ldrb	r0, [r5]
    8758:	cmp	r0, #0
    875c:	moveq	r6, #38	; 0x26
    8760:	moveq	r0, r6
    8764:	popeq	{r4, r5, r6, sl, fp, pc}
    8768:	cmp	r0, #95	; 0x5f
    876c:	beq	8788 <sas_validate_name+0x90>
    8770:	and	r0, r0, #223	; 0xdf
    8774:	sub	r0, r0, #65	; 0x41
    8778:	uxtb	r0, r0
    877c:	mov	r6, #25
    8780:	cmp	r0, #25
    8784:	bhi	8818 <sas_validate_name+0x120>
    8788:	ldr	r1, [pc, #144]	; 8820 <sas_validate_name+0x128>
    878c:	add	r1, pc, r1
    8790:	mov	r0, r5
    8794:	bl	4878 <strcmp@plt>
    8798:	mov	r6, #27
    879c:	cmp	r0, #0
    87a0:	beq	8818 <sas_validate_name+0x120>
    87a4:	ldr	r1, [pc, #120]	; 8824 <sas_validate_name+0x12c>
    87a8:	add	r1, pc, r1
    87ac:	mov	r0, r5
    87b0:	bl	4878 <strcmp@plt>
    87b4:	cmp	r0, #0
    87b8:	beq	8818 <sas_validate_name+0x120>
    87bc:	ldr	r1, [pc, #100]	; 8828 <sas_validate_name+0x130>
    87c0:	add	r1, pc, r1
    87c4:	mov	r0, r5
    87c8:	bl	4878 <strcmp@plt>
    87cc:	cmp	r0, #0
    87d0:	beq	8818 <sas_validate_name+0x120>
    87d4:	ldr	r1, [pc, #80]	; 882c <sas_validate_name+0x134>
    87d8:	add	r1, pc, r1
    87dc:	mov	r0, r5
    87e0:	bl	4878 <strcmp@plt>
    87e4:	cmp	r0, #0
    87e8:	beq	8818 <sas_validate_name+0x120>
    87ec:	ldr	r1, [pc, #60]	; 8830 <sas_validate_name+0x138>
    87f0:	add	r1, pc, r1
    87f4:	mov	r0, r5
    87f8:	bl	4878 <strcmp@plt>
    87fc:	cmp	r0, #0
    8800:	beq	8818 <sas_validate_name+0x120>
    8804:	mov	r0, r5
    8808:	bl	4c8c <strlen@plt>
    880c:	mov	r6, #0
    8810:	cmp	r0, r4
    8814:	movwhi	r6, #28
    8818:	mov	r0, r6
    881c:	pop	{r4, r5, r6, sl, fp, pc}
    8820:	.word	0x0001d080
    8824:	.word	0x0001d068
    8828:	.word	0x0001d058
    882c:	.word	0x0001d04a
    8830:	.word	0x0001d03e

00008834 <sas_validate_variable>:
    8834:	push	{fp, lr}
    8838:	mov	fp, sp
    883c:	bl	4e00 <readstat_variable_get_name@plt>
    8840:	mov	r1, #32
    8844:	pop	{fp, lr}
    8848:	b	86f8 <sas_validate_name>

0000884c <sas_validate_tag>:
    884c:	cmp	r0, #95	; 0x5f
    8850:	moveq	r0, #0
    8854:	bxeq	lr
    8858:	sub	r0, r0, #65	; 0x41
    885c:	uxtb	r1, r0
    8860:	mov	r0, #21
    8864:	cmp	r1, #26
    8868:	movwcc	r0, #0
    886c:	bx	lr

00008870 <sas_assign_tag>:
    8870:	push	{r4, r5, fp, lr}
    8874:	add	fp, sp, #8
    8878:	mov	r4, r0
    887c:	cmp	r1, #0
    8880:	beq	8898 <sas_assign_tag+0x28>
    8884:	mov	r5, r1
    8888:	cmp	r1, #1
    888c:	bne	88a0 <sas_assign_tag+0x30>
    8890:	mov	r5, #1
    8894:	b	88a8 <sas_assign_tag+0x38>
    8898:	mov	r5, #95	; 0x5f
    889c:	b	88a8 <sas_assign_tag+0x38>
    88a0:	cmp	r5, #28
    88a4:	addcc	r5, r5, #63	; 0x3f
    88a8:	uxtb	r0, r5
    88ac:	bl	4bd8 <sas_validate_tag@plt>
    88b0:	cmp	r0, #0
    88b4:	movne	r5, #0
    88b8:	strb	r5, [r4, #12]
    88bc:	mov	r0, #1
    88c0:	movweq	r0, #2
    88c4:	ldrb	r1, [r4, #13]
    88c8:	orr	r0, r1, r0
    88cc:	strb	r0, [r4, #13]
    88d0:	pop	{r4, r5, fp, pc}
    88d4:	andeq	r0, r0, r0

000088d8 <readstat_parse_sas7bcat>:
    88d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    88dc:	add	fp, sp, #28
    88e0:	sub	sp, sp, #348	; 0x15c
    88e4:	mov	r4, r2
    88e8:	mov	r6, r1
    88ec:	mov	r7, r0
    88f0:	mov	r9, #0
    88f4:	str	r9, [fp, #-36]	; 0xffffffdc
    88f8:	ldr	r8, [r0, #32]
    88fc:	mov	r0, #1
    8900:	mov	r1, #104	; 0x68
    8904:	bl	47d0 <calloc@plt>
    8908:	mov	r5, r0
    890c:	mov	r0, #1
    8910:	mov	r1, #152	; 0x98
    8914:	bl	47d0 <calloc@plt>
    8918:	mov	sl, r0
    891c:	mov	r0, #200	; 0xc8
    8920:	str	r0, [r5, #88]	; 0x58
    8924:	mov	r0, #1600	; 0x640
    8928:	bl	4b9c <malloc@plt>
    892c:	str	r0, [r5, #80]	; 0x50
    8930:	ldr	r0, [r7, #20]
    8934:	ldr	r1, [r7]
    8938:	ldr	r2, [r7, #36]	; 0x24
    893c:	ldr	r3, [r7, #40]	; 0x28
    8940:	str	r1, [r5]
    8944:	stmib	r5, {r0, r4, r8}
    8948:	str	r2, [r5, #92]	; 0x5c
    894c:	str	r3, [r5, #96]	; 0x60
    8950:	ldr	r2, [r8]
    8954:	ldr	r1, [r8, #20]
    8958:	mov	r0, r6
    895c:	blx	r2
    8960:	cmn	r0, #1
    8964:	beq	8990 <readstat_parse_sas7bcat+0xb8>
    8968:	ldr	r2, [r7, #24]
    896c:	mov	r0, r8
    8970:	mov	r1, sl
    8974:	mov	r3, r4
    8978:	bl	4e3c <sas_read_header@plt>
    897c:	str	r0, [fp, #-36]	; 0xffffffdc
    8980:	cmp	r0, #0
    8984:	beq	89a0 <readstat_parse_sas7bcat+0xc8>
    8988:	mov	r6, #0
    898c:	b	8b54 <readstat_parse_sas7bcat+0x27c>
    8990:	mov	r0, #1
    8994:	str	r0, [fp, #-36]	; 0xffffffdc
    8998:	mov	r6, #0
    899c:	b	8b54 <readstat_parse_sas7bcat+0x27c>
    89a0:	ldr	r0, [sl, #4]
    89a4:	ldr	r1, [sl, #24]
    89a8:	strd	r0, [r5, #16]
    89ac:	bl	492c <machine_is_little_endian@plt>
    89b0:	ldr	r1, [sl]
    89b4:	eor	r0, r1, r0
    89b8:	str	r0, [r5, #24]
    89bc:	add	r3, sl, #56	; 0x38
    89c0:	ldm	r3, {r0, r1, r2, r3}
    89c4:	str	r3, [r5, #76]	; 0x4c
    89c8:	str	r2, [r5, #72]	; 0x48
    89cc:	str	r1, [r5, #60]	; 0x3c
    89d0:	str	r0, [r5, #56]	; 0x38
    89d4:	ldrd	r0, [sl, #32]
    89d8:	str	r1, [r5, #68]	; 0x44
    89dc:	str	r0, [r5, #64]	; 0x40
    89e0:	ldr	r0, [r5, #92]	; 0x5c
    89e4:	cmp	r0, #0
    89e8:	ldreq	r0, [sl, #144]	; 0x90
    89ec:	streq	r0, [r5, #92]	; 0x5c
    89f0:	ldr	r7, [r5, #16]
    89f4:	ldr	r1, [r5, #20]
    89f8:	add	r0, r1, #212	; 0xd4
    89fc:	mov	r2, #856	; 0x358
    8a00:	add	r6, r2, r1, lsl #1
    8a04:	add	r1, r1, #50	; 0x32
    8a08:	asr	r3, r0, #31
    8a0c:	asr	r4, r6, #31
    8a10:	asr	r2, r1, #31
    8a14:	add	ip, r5, #32
    8a18:	stm	ip, {r0, r3, r6}
    8a1c:	str	r4, [r5, #44]	; 0x2c
    8a20:	str	r1, [r5, #48]	; 0x30
    8a24:	str	r2, [r5, #52]	; 0x34
    8a28:	add	ip, r5, #40	; 0x28
    8a2c:	cmp	r7, #0
    8a30:	beq	8a68 <readstat_parse_sas7bcat+0x190>
    8a34:	add	r7, r5, #48	; 0x30
    8a38:	str	r7, [sp, #20]
    8a3c:	add	lr, r5, #32
    8a40:	adds	r6, r6, #144	; 0x90
    8a44:	adc	r7, r4, #0
    8a48:	strd	r6, [ip]
    8a4c:	adds	r0, r0, #72	; 0x48
    8a50:	adc	r3, r3, #0
    8a54:	stm	lr, {r0, r3}
    8a58:	adds	r0, r1, #24
    8a5c:	adc	r1, r2, #0
    8a60:	ldr	r2, [sp, #20]
    8a64:	strd	r0, [r2]
    8a68:	str	ip, [sp, #20]
    8a6c:	ldr	r4, [r5, #92]	; 0x5c
    8a70:	cmp	r4, #0
    8a74:	ldrne	r6, [r5, #96]	; 0x60
    8a78:	cmpne	r6, #0
    8a7c:	bne	8c24 <readstat_parse_sas7bcat+0x34c>
    8a80:	ldr	r0, [r5]
    8a84:	cmp	r0, #0
    8a88:	beq	8ba8 <readstat_parse_sas7bcat+0x2d0>
    8a8c:	vmov.i32	q8, #0	; 0x00000000
    8a90:	mov	r0, #52	; 0x34
    8a94:	add	r1, sp, #24
    8a98:	vst1.64	{d16-d17}, [r1], r0
    8a9c:	ldr	r0, [sl, #72]	; 0x48
    8aa0:	ldr	r3, [sl, #76]	; 0x4c
    8aa4:	str	r0, [sp, #40]	; 0x28
    8aa8:	str	r3, [sp, #44]	; 0x2c
    8aac:	ldr	r0, [sl, #12]
    8ab0:	mov	r6, #0
    8ab4:	str	r6, [sp, #56]	; 0x38
    8ab8:	str	r0, [sp, #48]	; 0x30
    8abc:	asr	r0, r0, #31
    8ac0:	str	r0, [sp, #52]	; 0x34
    8ac4:	ldr	r0, [sl]
    8ac8:	str	r6, [sp, #64]	; 0x40
    8acc:	str	r6, [sp, #68]	; 0x44
    8ad0:	mov	r2, #1
    8ad4:	cmp	r0, #0
    8ad8:	movweq	r2, #2
    8adc:	str	r2, [sp, #60]	; 0x3c
    8ae0:	ldr	r0, [r5, #92]	; 0x5c
    8ae4:	str	r0, [sp, #72]	; 0x48
    8ae8:	ldrb	r0, [r1]
    8aec:	and	r0, r0, #254	; 0xfe
    8af0:	ldrb	r2, [r5, #16]
    8af4:	and	r2, r2, #1
    8af8:	orr	r0, r0, r2
    8afc:	strb	r0, [r1]
    8b00:	ldr	r0, [r5, #100]	; 0x64
    8b04:	str	r0, [sp]
    8b08:	add	r2, sl, #80	; 0x50
    8b0c:	add	r4, sp, #83	; 0x53
    8b10:	mov	r0, r4
    8b14:	movw	r1, #257	; 0x101
    8b18:	mov	r3, #64	; 0x40
    8b1c:	bl	4cbc <readstat_convert@plt>
    8b20:	str	r0, [fp, #-36]	; 0xffffffdc
    8b24:	cmp	r0, #0
    8b28:	bne	8b50 <readstat_parse_sas7bcat+0x278>
    8b2c:	str	r4, [sp, #68]	; 0x44
    8b30:	ldr	r2, [r5]
    8b34:	ldr	r1, [r5, #8]
    8b38:	add	r0, sp, #24
    8b3c:	blx	r2
    8b40:	cmp	r0, #0
    8b44:	beq	8ba8 <readstat_parse_sas7bcat+0x2d0>
    8b48:	mov	r0, #4
    8b4c:	str	r0, [fp, #-36]	; 0xffffffdc
    8b50:	mov	r9, #0
    8b54:	ldr	r1, [r8, #4]
    8b58:	ldr	r0, [r8, #20]
    8b5c:	blx	r1
    8b60:	cmp	r9, #0
    8b64:	beq	8b70 <readstat_parse_sas7bcat+0x298>
    8b68:	mov	r0, r9
    8b6c:	bl	4938 <free@plt>
    8b70:	cmp	r6, #0
    8b74:	beq	8b80 <readstat_parse_sas7bcat+0x2a8>
    8b78:	mov	r0, r6
    8b7c:	bl	4938 <free@plt>
    8b80:	cmp	r5, #0
    8b84:	movne	r0, r5
    8b88:	blne	94f4 <sas7bcat_ctx_free>
    8b8c:	cmp	sl, #0
    8b90:	beq	8b9c <readstat_parse_sas7bcat+0x2c4>
    8b94:	mov	r0, sl
    8b98:	bl	4938 <free@plt>
    8b9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    8ba0:	sub	sp, fp, #28
    8ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8ba8:	add	r4, r5, #64	; 0x40
    8bac:	ldr	r0, [r4]
    8bb0:	bl	4cb0 <readstat_malloc@plt>
    8bb4:	cmp	r0, #0
    8bb8:	beq	8c54 <readstat_parse_sas7bcat+0x37c>
    8bbc:	mov	r7, r0
    8bc0:	add	r9, r5, #72	; 0x48
    8bc4:	ldr	r0, [r9]
    8bc8:	ldr	r1, [r4]
    8bcc:	add	r0, r1, r0
    8bd0:	ldr	r3, [r8, #8]
    8bd4:	ldr	r2, [r8, #20]
    8bd8:	mov	r6, #0
    8bdc:	mov	r1, #0
    8be0:	blx	r3
    8be4:	cmn	r0, #1
    8be8:	beq	8c5c <readstat_parse_sas7bcat+0x384>
    8bec:	ldr	r1, [r4]
    8bf0:	ldr	r3, [r8, #12]
    8bf4:	ldr	r2, [r8, #20]
    8bf8:	mov	r0, r7
    8bfc:	blx	r3
    8c00:	ldrd	r2, [r4]
    8c04:	subs	r1, r0, r2
    8c08:	rscs	r0, r3, r0, asr #31
    8c0c:	bge	8c6c <readstat_parse_sas7bcat+0x394>
    8c10:	mov	r0, #2
    8c14:	str	r0, [fp, #-36]	; 0xffffffdc
    8c18:	mov	r6, #0
    8c1c:	mov	r9, r7
    8c20:	b	8b54 <readstat_parse_sas7bcat+0x27c>
    8c24:	mov	r0, r4
    8c28:	mov	r1, r6
    8c2c:	bl	4878 <strcmp@plt>
    8c30:	cmp	r0, #0
    8c34:	beq	8a80 <readstat_parse_sas7bcat+0x1a8>
    8c38:	mov	r0, r6
    8c3c:	mov	r1, r4
    8c40:	bl	4bc0 <iconv_open@plt>
    8c44:	cmn	r0, #1
    8c48:	beq	8c9c <readstat_parse_sas7bcat+0x3c4>
    8c4c:	str	r0, [r5, #100]	; 0x64
    8c50:	b	8a80 <readstat_parse_sas7bcat+0x1a8>
    8c54:	mov	r0, #3
    8c58:	b	8994 <readstat_parse_sas7bcat+0xbc>
    8c5c:	mov	r0, #15
    8c60:	str	r0, [fp, #-36]	; 0xffffffdc
    8c64:	mov	r9, r7
    8c68:	b	8b54 <readstat_parse_sas7bcat+0x27c>
    8c6c:	ldr	r0, [sp, #20]
    8c70:	ldr	r1, [r0]
    8c74:	add	r0, r7, r1
    8c78:	sub	r1, r2, r1
    8c7c:	mov	r2, r5
    8c80:	bl	8e68 <sas7bcat_augment_index>
    8c84:	str	r0, [fp, #-36]	; 0xffffffdc
    8c88:	mov	r6, #0
    8c8c:	cmp	r0, #0
    8c90:	beq	8ca4 <readstat_parse_sas7bcat+0x3cc>
    8c94:	mov	r9, r7
    8c98:	b	8b54 <readstat_parse_sas7bcat+0x27c>
    8c9c:	mov	r0, #7
    8ca0:	b	8994 <readstat_parse_sas7bcat+0xbc>
    8ca4:	str	r9, [sp, #12]
    8ca8:	str	r7, [sp, #20]
    8cac:	add	r0, r5, #56	; 0x38
    8cb0:	str	r0, [sp, #8]
    8cb4:	ldrd	r0, [r0]
    8cb8:	subs	r0, r0, #4
    8cbc:	sbcs	r0, r1, #0
    8cc0:	blt	8d74 <readstat_parse_sas7bcat+0x49c>
    8cc4:	ldr	r0, [sp, #20]
    8cc8:	add	r0, r0, #16
    8ccc:	str	r0, [sp, #16]
    8cd0:	mov	r7, #0
    8cd4:	mov	r9, #3
    8cd8:	ldr	r0, [sp, #12]
    8cdc:	ldr	r0, [r0]
    8ce0:	ldr	r1, [r4]
    8ce4:	mla	r0, r1, r9, r0
    8ce8:	ldr	r3, [r8, #8]
    8cec:	ldr	r2, [r8, #20]
    8cf0:	mov	r1, #0
    8cf4:	blx	r3
    8cf8:	cmn	r0, #1
    8cfc:	beq	8e44 <readstat_parse_sas7bcat+0x56c>
    8d00:	ldr	r1, [r4]
    8d04:	ldr	r3, [r8, #12]
    8d08:	ldr	r2, [r8, #20]
    8d0c:	ldr	r0, [sp, #20]
    8d10:	blx	r3
    8d14:	ldrd	r2, [r4]
    8d18:	subs	r1, r0, r2
    8d1c:	rscs	r0, r3, r0, asr #31
    8d20:	blt	8e4c <readstat_parse_sas7bcat+0x574>
    8d24:	ldr	r0, [sp, #16]
    8d28:	ldr	r0, [r0]
    8d2c:	movw	r1, #19544	; 0x4c58
    8d30:	movt	r1, #21075	; 0x5253
    8d34:	cmp	r0, r1
    8d38:	bne	8d58 <readstat_parse_sas7bcat+0x480>
    8d3c:	sub	r1, r2, #16
    8d40:	ldr	r0, [sp, #16]
    8d44:	mov	r2, r5
    8d48:	bl	8e68 <sas7bcat_augment_index>
    8d4c:	str	r0, [fp, #-36]	; 0xffffffdc
    8d50:	cmp	r0, #0
    8d54:	bne	8e5c <readstat_parse_sas7bcat+0x584>
    8d58:	adds	r9, r9, #1
    8d5c:	adc	r7, r7, #0
    8d60:	ldr	r0, [sp, #8]
    8d64:	ldrd	r0, [r0]
    8d68:	subs	r0, r9, r0
    8d6c:	sbcs	r0, r7, r1
    8d70:	blt	8cd8 <readstat_parse_sas7bcat+0x400>
    8d74:	mov	r0, r5
    8d78:	bl	8f84 <sas7bcat_sort_index>
    8d7c:	mov	r0, r5
    8d80:	bl	8fec <sas7bcat_uniq_index>
    8d84:	ldr	r0, [r5, #84]	; 0x54
    8d88:	cmp	r0, #1
    8d8c:	blt	8e60 <readstat_parse_sas7bcat+0x588>
    8d90:	mov	r4, #0
    8d94:	mov	r9, #0
    8d98:	mov	r6, #0
    8d9c:	ldr	r0, [r5, #80]	; 0x50
    8da0:	lsl	r1, r4, #3
    8da4:	ldrh	r1, [r0, r1]!	; <UNPREDICTABLE>
    8da8:	ldr	r0, [r0, #4]
    8dac:	str	r0, [sp, #12]
    8db0:	str	r1, [sp, #16]
    8db4:	mov	r2, r5
    8db8:	sub	r3, fp, #36	; 0x24
    8dbc:	bl	9064 <sas7bcat_block_size>
    8dc0:	cmp	r0, #0
    8dc4:	beq	8e28 <readstat_parse_sas7bcat+0x550>
    8dc8:	mov	r7, r0
    8dcc:	cmn	r0, #1
    8dd0:	beq	8e60 <readstat_parse_sas7bcat+0x588>
    8dd4:	mov	r0, r6
    8dd8:	mov	r1, r7
    8ddc:	bl	4d70 <readstat_realloc@plt>
    8de0:	cmp	r0, #0
    8de4:	beq	8e54 <readstat_parse_sas7bcat+0x57c>
    8de8:	mov	r6, r0
    8dec:	str	r5, [sp]
    8df0:	mov	r1, r7
    8df4:	ldr	r2, [sp, #12]
    8df8:	ldr	r3, [sp, #16]
    8dfc:	bl	9200 <sas7bcat_read_block>
    8e00:	str	r0, [fp, #-36]	; 0xffffffdc
    8e04:	cmp	r0, #0
    8e08:	bne	8e60 <readstat_parse_sas7bcat+0x588>
    8e0c:	mov	r0, r6
    8e10:	mov	r1, r7
    8e14:	mov	r2, r5
    8e18:	bl	93b4 <sas7bcat_parse_block>
    8e1c:	str	r0, [fp, #-36]	; 0xffffffdc
    8e20:	cmp	r0, #0
    8e24:	bne	8e60 <readstat_parse_sas7bcat+0x588>
    8e28:	adds	r4, r4, #1
    8e2c:	adc	r9, r9, #0
    8e30:	ldr	r0, [r5, #84]	; 0x54
    8e34:	subs	r1, r4, r0
    8e38:	sbcs	r0, r9, r0, asr #31
    8e3c:	blt	8d9c <readstat_parse_sas7bcat+0x4c4>
    8e40:	b	8e60 <readstat_parse_sas7bcat+0x588>
    8e44:	mov	r0, #15
    8e48:	b	8e58 <readstat_parse_sas7bcat+0x580>
    8e4c:	mov	r0, #2
    8e50:	b	8e58 <readstat_parse_sas7bcat+0x580>
    8e54:	mov	r0, #3
    8e58:	str	r0, [fp, #-36]	; 0xffffffdc
    8e5c:	mov	r6, #0
    8e60:	ldr	r9, [sp, #20]
    8e64:	b	8b54 <readstat_parse_sas7bcat+0x27c>

00008e68 <sas7bcat_augment_index>:
    8e68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8e6c:	add	fp, sp, #28
    8e70:	sub	sp, sp, #4
    8e74:	mov	r5, r2
    8e78:	mov	r7, r2
    8e7c:	ldr	r2, [r7, #32]!
    8e80:	mov	r3, #0
    8e84:	cmp	r2, r1
    8e88:	bgt	8f78 <sas7bcat_augment_index+0x110>
    8e8c:	add	r9, r0, r1
    8e90:	add	sl, r5, #48	; 0x30
    8e94:	movw	r4, #19544	; 0x4c58
    8e98:	movt	r4, #21075	; 0x5253
    8e9c:	mov	r8, r0
    8ea0:	ldr	r1, [r8], #8
    8ea4:	cmp	r1, r4
    8ea8:	moveq	r8, r0
    8eac:	ldr	r0, [r8]
    8eb0:	cmp	r0, r4
    8eb4:	bne	8f6c <sas7bcat_augment_index+0x104>
    8eb8:	ldr	r0, [sl]
    8ebc:	ldrb	r0, [r8, r0]
    8ec0:	cmp	r0, #79	; 0x4f
    8ec4:	bne	8f28 <sas7bcat_augment_index+0xc0>
    8ec8:	ldr	r0, [r5, #16]
    8ecc:	cmp	r0, #0
    8ed0:	beq	8ef4 <sas7bcat_augment_index+0x8c>
    8ed4:	ldr	r1, [r5, #24]
    8ed8:	add	r0, r8, #8
    8edc:	bl	4e90 <sas_read4@plt>
    8ee0:	mov	r6, r0
    8ee4:	ldr	r1, [r5, #24]
    8ee8:	add	r0, r8, #16
    8eec:	bl	4e90 <sas_read4@plt>
    8ef0:	b	8f10 <sas7bcat_augment_index+0xa8>
    8ef4:	ldr	r1, [r5, #24]
    8ef8:	add	r0, r8, #4
    8efc:	bl	4e6c <sas_read2@plt>
    8f00:	mov	r6, r0
    8f04:	ldr	r1, [r5, #24]
    8f08:	add	r0, r8, #8
    8f0c:	bl	4e6c <sas_read2@plt>
    8f10:	ldr	r2, [r5, #80]	; 0x50
    8f14:	ldr	r1, [r5, #84]	; 0x54
    8f18:	add	r3, r1, #1
    8f1c:	str	r3, [r5, #84]	; 0x54
    8f20:	str	r0, [r2, r1, lsl #3]!
    8f24:	str	r6, [r2, #4]
    8f28:	ldr	r0, [r5, #84]	; 0x54
    8f2c:	ldr	r1, [r5, #88]	; 0x58
    8f30:	cmp	r0, r1
    8f34:	bne	8f58 <sas7bcat_augment_index+0xf0>
    8f38:	lsl	r0, r1, #1
    8f3c:	str	r0, [r5, #88]	; 0x58
    8f40:	ldr	r0, [r5, #80]	; 0x50
    8f44:	lsl	r1, r1, #4
    8f48:	bl	4d70 <readstat_realloc@plt>
    8f4c:	str	r0, [r5, #80]	; 0x50
    8f50:	cmp	r0, #0
    8f54:	beq	8f74 <sas7bcat_augment_index+0x10c>
    8f58:	ldr	r1, [r7]
    8f5c:	add	r0, r8, r1
    8f60:	add	r1, r0, r1
    8f64:	cmp	r1, r9
    8f68:	bls	8e9c <sas7bcat_augment_index+0x34>
    8f6c:	mov	r3, #0
    8f70:	b	8f78 <sas7bcat_augment_index+0x110>
    8f74:	mov	r3, #3
    8f78:	mov	r0, r3
    8f7c:	sub	sp, fp, #28
    8f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00008f84 <sas7bcat_sort_index>:
    8f84:	push	{r4, r5, fp, lr}
    8f88:	add	fp, sp, #8
    8f8c:	ldr	r1, [r0, #84]	; 0x54
    8f90:	cmp	r1, #2
    8f94:	blt	8fe4 <sas7bcat_sort_index+0x60>
    8f98:	ldr	r0, [r0, #80]	; 0x50
    8f9c:	mov	r2, #1
    8fa0:	mov	r3, r0
    8fa4:	b	8fb8 <sas7bcat_sort_index+0x34>
    8fa8:	add	r2, r2, #1
    8fac:	add	r3, r3, #8
    8fb0:	cmp	r2, r1
    8fb4:	popge	{r4, r5, fp, pc}
    8fb8:	ldm	r3, {ip, lr}
    8fbc:	ldr	r4, [r3, #8]
    8fc0:	ldr	r5, [r3, #12]
    8fc4:	subs	r4, r4, ip
    8fc8:	sbcs	r5, r5, lr
    8fcc:	bcs	8fa8 <sas7bcat_sort_index+0x24>
    8fd0:	ldr	r3, [pc, #16]	; 8fe8 <sas7bcat_sort_index+0x64>
    8fd4:	add	r3, pc, r3
    8fd8:	mov	r2, #8
    8fdc:	pop	{r4, r5, fp, lr}
    8fe0:	b	4ed8 <qsort@plt>
    8fe4:	pop	{r4, r5, fp, pc}
    8fe8:	.word	0x00000550

00008fec <sas7bcat_uniq_index>:
    8fec:	push	{r4, r5, r6, r7, fp, lr}
    8ff0:	add	fp, sp, #16
    8ff4:	ldr	lr, [r0, #84]	; 0x54
    8ff8:	cmp	lr, #0
    8ffc:	popeq	{r4, r5, r6, r7, fp, pc}
    9000:	mov	r2, #1
    9004:	cmp	lr, #2
    9008:	blt	905c <sas7bcat_uniq_index+0x70>
    900c:	ldr	ip, [r0, #80]	; 0x50
    9010:	mov	r2, #1
    9014:	mov	r3, ip
    9018:	mov	r1, #1
    901c:	ldm	r3, {r6, r7}
    9020:	ldr	r4, [r3, #8]
    9024:	ldr	r5, [r3, #12]
    9028:	eor	r7, r5, r7
    902c:	eor	r6, r4, r6
    9030:	orrs	r6, r6, r7
    9034:	beq	904c <sas7bcat_uniq_index+0x60>
    9038:	cmp	r1, r2
    903c:	movne	r6, ip
    9040:	strne	r4, [r6, r2, lsl #3]!
    9044:	strne	r5, [r6, #4]
    9048:	add	r2, r2, #1
    904c:	add	r3, r3, #8
    9050:	add	r1, r1, #1
    9054:	cmp	lr, r1
    9058:	bne	901c <sas7bcat_uniq_index+0x30>
    905c:	str	r2, [r0, #84]	; 0x54
    9060:	pop	{r4, r5, r6, r7, fp, pc}

00009064 <sas7bcat_block_size>:
    9064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9068:	add	fp, sp, #28
    906c:	sub	sp, sp, #68	; 0x44
    9070:	mov	r9, r1
    9074:	mov	r4, r0
    9078:	str	r2, [sp, #28]
    907c:	ldr	r0, [r2, #16]
    9080:	mov	r1, #32
    9084:	cmp	r0, #0
    9088:	movweq	r1, #16
    908c:	str	r1, [sp, #24]
    9090:	mov	r7, #0
    9094:	cmp	r4, #1
    9098:	blt	91c8 <sas7bcat_block_size+0x164>
    909c:	cmp	r9, #1
    90a0:	mov	r0, #0
    90a4:	blt	91cc <sas7bcat_block_size+0x168>
    90a8:	str	r3, [sp]
    90ac:	ldr	r0, [sp, #28]
    90b0:	ldr	r5, [r0, #12]
    90b4:	add	r2, sp, #36	; 0x24
    90b8:	add	r1, r2, #10
    90bc:	str	r1, [sp, #8]
    90c0:	add	r1, r2, #8
    90c4:	str	r1, [sp, #4]
    90c8:	add	r1, r0, #64	; 0x40
    90cc:	str	r1, [sp, #16]
    90d0:	add	r1, r0, #72	; 0x48
    90d4:	str	r1, [sp, #12]
    90d8:	add	r0, r0, #56	; 0x38
    90dc:	str	r0, [sp, #20]
    90e0:	mov	r7, #0
    90e4:	mov	sl, #0
    90e8:	ldr	r8, [sp, #28]
    90ec:	ldr	r0, [sp, #20]
    90f0:	ldrd	r0, [r0]
    90f4:	subs	r2, r0, r4
    90f8:	sbcs	r2, r1, r4, asr #31
    90fc:	blt	91c4 <sas7bcat_block_size+0x160>
    9100:	subs	r0, sl, r0
    9104:	rscs	r0, r1, #0
    9108:	bge	91c4 <sas7bcat_block_size+0x160>
    910c:	ldr	r0, [sp, #12]
    9110:	ldr	r0, [r0]
    9114:	ldr	r1, [sp, #16]
    9118:	ldr	r1, [r1]
    911c:	sub	r2, r4, #1
    9120:	mla	r0, r1, r2, r0
    9124:	add	r0, r9, r0
    9128:	ldr	r3, [r5, #8]
    912c:	ldr	r2, [r5, #20]
    9130:	mov	r1, #0
    9134:	blx	r3
    9138:	cmn	r0, #1
    913c:	beq	91e8 <sas7bcat_block_size+0x184>
    9140:	ldr	r3, [r5, #12]
    9144:	ldr	r2, [r5, #20]
    9148:	add	r0, sp, #36	; 0x24
    914c:	ldr	r4, [sp, #24]
    9150:	mov	r1, r4
    9154:	blx	r3
    9158:	cmp	r0, r4
    915c:	blt	91f4 <sas7bcat_block_size+0x190>
    9160:	add	r6, sp, #36	; 0x24
    9164:	str	r7, [sp, #32]
    9168:	ldr	r7, [r8, #16]
    916c:	ldr	r1, [r8, #24]
    9170:	mov	r0, r6
    9174:	bl	4e90 <sas_read4@plt>
    9178:	mov	r4, r0
    917c:	cmp	r7, #0
    9180:	ldr	r0, [sp, #4]
    9184:	addeq	r0, r6, #4
    9188:	ldr	r1, [r8, #24]
    918c:	bl	4e6c <sas_read2@plt>
    9190:	mov	r9, r0
    9194:	cmp	r7, #0
    9198:	ldr	r0, [sp, #8]
    919c:	addeq	r0, r6, #6
    91a0:	ldr	r1, [r8, #24]
    91a4:	ldr	r7, [sp, #32]
    91a8:	bl	4e6c <sas_read2@plt>
    91ac:	add	r7, r7, r0
    91b0:	cmp	r4, #1
    91b4:	blt	91c4 <sas7bcat_block_size+0x160>
    91b8:	add	sl, sl, #1
    91bc:	cmp	r9, #0
    91c0:	bne	90ec <sas7bcat_block_size+0x88>
    91c4:	ldr	r3, [sp]
    91c8:	mov	r0, #0
    91cc:	cmp	r3, #0
    91d0:	strne	r0, [r3]
    91d4:	cmp	r0, #0
    91d8:	mvnne	r7, #0
    91dc:	mov	r0, r7
    91e0:	sub	sp, fp, #28
    91e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    91e8:	mov	r0, #15
    91ec:	ldr	r3, [sp]
    91f0:	b	91cc <sas7bcat_block_size+0x168>
    91f4:	mov	r0, #2
    91f8:	ldr	r3, [sp]
    91fc:	b	91cc <sas7bcat_block_size+0x168>

00009200 <sas7bcat_read_block>:
    9200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9204:	add	fp, sp, #28
    9208:	sub	sp, sp, #84	; 0x54
    920c:	mov	sl, r2
    9210:	str	r1, [sp, #16]
    9214:	str	r0, [sp, #4]
    9218:	ldr	r1, [fp, #8]
    921c:	ldr	r7, [r1, #12]
    9220:	ldr	r0, [r1, #16]
    9224:	mov	r2, #32
    9228:	cmp	r0, #0
    922c:	movweq	r2, #16
    9230:	str	r2, [sp, #20]
    9234:	add	r5, sp, #52	; 0x34
    9238:	add	r0, r5, #10
    923c:	str	r0, [sp, #12]
    9240:	add	r0, r5, #8
    9244:	str	r0, [sp, #8]
    9248:	mov	r4, #0
    924c:	add	r0, r1, #64	; 0x40
    9250:	str	r0, [sp, #28]
    9254:	add	r0, r1, #72	; 0x48
    9258:	str	r0, [sp, #24]
    925c:	add	r0, r1, #56	; 0x38
    9260:	str	r0, [sp, #32]
    9264:	mov	r6, #0
    9268:	cmp	sl, #1
    926c:	cmpge	r3, #1
    9270:	blt	9390 <sas7bcat_read_block+0x190>
    9274:	ldr	r0, [sp, #32]
    9278:	ldrd	r0, [r0]
    927c:	subs	r2, r0, sl
    9280:	sbcs	r2, r1, sl, asr #31
    9284:	blt	9390 <sas7bcat_read_block+0x190>
    9288:	subs	r0, r4, r0
    928c:	rscs	r0, r1, #0
    9290:	bge	9390 <sas7bcat_read_block+0x190>
    9294:	str	r6, [sp, #48]	; 0x30
    9298:	ldr	r0, [sp, #24]
    929c:	ldr	r0, [r0]
    92a0:	ldr	r1, [sp, #28]
    92a4:	ldr	r1, [r1]
    92a8:	sub	r2, sl, #1
    92ac:	mla	r0, r1, r2, r0
    92b0:	add	r0, r3, r0
    92b4:	ldr	r3, [r7, #8]
    92b8:	ldr	r2, [r7, #20]
    92bc:	mov	r1, #0
    92c0:	blx	r3
    92c4:	cmn	r0, #1
    92c8:	beq	9398 <sas7bcat_read_block+0x198>
    92cc:	str	r4, [sp, #44]	; 0x2c
    92d0:	ldr	r3, [r7, #12]
    92d4:	ldr	r2, [r7, #20]
    92d8:	mov	r0, r5
    92dc:	ldr	r4, [sp, #20]
    92e0:	mov	r1, r4
    92e4:	blx	r3
    92e8:	mov	r1, #2
    92ec:	str	r1, [sp, #36]	; 0x24
    92f0:	cmp	r0, r4
    92f4:	blt	93a8 <sas7bcat_read_block+0x1a8>
    92f8:	ldr	r0, [fp, #8]
    92fc:	mov	r4, r0
    9300:	ldr	r6, [r0, #16]
    9304:	ldr	r1, [r0, #24]
    9308:	mov	r0, r5
    930c:	bl	4e90 <sas_read4@plt>
    9310:	mov	sl, r0
    9314:	cmp	r6, #0
    9318:	ldr	r0, [sp, #8]
    931c:	addeq	r0, r5, #4
    9320:	ldr	r1, [r4, #24]
    9324:	bl	4e6c <sas_read2@plt>
    9328:	str	r0, [sp, #40]	; 0x28
    932c:	cmp	r6, #0
    9330:	ldr	r0, [sp, #12]
    9334:	mov	r9, r5
    9338:	addeq	r0, r5, #6
    933c:	ldr	r1, [r4, #24]
    9340:	bl	4e6c <sas_read2@plt>
    9344:	mov	r8, r0
    9348:	ldr	r1, [sp, #48]	; 0x30
    934c:	add	r6, r1, r0
    9350:	ldr	r0, [sp, #16]
    9354:	cmp	r6, r0
    9358:	bhi	93a0 <sas7bcat_read_block+0x1a0>
    935c:	ldr	r4, [sp, #44]	; 0x2c
    9360:	add	r4, r4, #1
    9364:	ldr	r0, [sp, #4]
    9368:	add	r0, r0, r1
    936c:	ldr	r3, [r7, #12]
    9370:	ldr	r2, [r7, #20]
    9374:	mov	r1, r8
    9378:	blx	r3
    937c:	cmp	r0, r8
    9380:	mov	r5, r9
    9384:	ldr	r3, [sp, #40]	; 0x28
    9388:	bge	9268 <sas7bcat_read_block+0x68>
    938c:	b	93a8 <sas7bcat_read_block+0x1a8>
    9390:	mov	r0, #0
    9394:	b	93a4 <sas7bcat_read_block+0x1a4>
    9398:	mov	r0, #15
    939c:	b	93a4 <sas7bcat_read_block+0x1a4>
    93a0:	mov	r0, #5
    93a4:	str	r0, [sp, #36]	; 0x24
    93a8:	ldr	r0, [sp, #36]	; 0x24
    93ac:	sub	sp, fp, #28
    93b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000093b4 <sas7bcat_parse_block>:
    93b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    93b8:	add	fp, sp, #28
    93bc:	sub	sp, sp, #148	; 0x94
    93c0:	cmp	r1, #106	; 0x6a
    93c4:	bcs	93d4 <sas7bcat_parse_block+0x20>
    93c8:	mov	r0, #0
    93cc:	sub	sp, fp, #28
    93d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    93d4:	mov	r5, r2
    93d8:	mov	r9, r1
    93dc:	mov	r6, r0
    93e0:	ldrb	r0, [r0, #2]
    93e4:	and	r4, r0, #8
    93e8:	mov	r0, #38	; 0x26
    93ec:	mov	r1, #42	; 0x2a
    93f0:	orr	r2, r1, r4, lsr #1
    93f4:	ldr	r7, [r5, #16]
    93f8:	ldr	r1, [r5, #24]
    93fc:	cmp	r7, #0
    9400:	addeq	r2, r0, r4, lsr #1
    9404:	add	r0, r6, r2
    9408:	bl	4e90 <sas_read4@plt>
    940c:	str	r0, [sp, #12]
    9410:	mov	r0, #50	; 0x32
    9414:	cmp	r7, #0
    9418:	movweq	r0, #42	; 0x2a
    941c:	orr	r0, r0, r4, lsr #1
    9420:	add	r0, r6, r0
    9424:	ldr	r1, [r5, #24]
    9428:	bl	4e90 <sas_read4@plt>
    942c:	str	r0, [sp, #8]
    9430:	ldr	r0, [r5, #100]	; 0x64
    9434:	str	r0, [sp]
    9438:	add	r2, r6, #8
    943c:	add	r0, sp, #19
    9440:	mov	r1, #129	; 0x81
    9444:	mov	r3, #8
    9448:	bl	4cbc <readstat_convert@plt>
    944c:	mov	sl, #138	; 0x8a
    9450:	cmp	r7, #0
    9454:	movweq	sl, #106	; 0x6a
    9458:	cmp	r0, #0
    945c:	bne	94b0 <sas7bcat_parse_block+0xfc>
    9460:	lsr	r0, r4, #1
    9464:	orr	r8, r0, r4, lsl #1
    9468:	ldrsb	r0, [r6, #2]
    946c:	cmn	r0, #1
    9470:	bgt	9480 <sas7bcat_parse_block+0xcc>
    9474:	ldr	r0, [r5, #16]
    9478:	cmp	r0, #0
    947c:	beq	94b8 <sas7bcat_parse_block+0x104>
    9480:	add	r1, r8, sl
    9484:	cmp	r1, r9
    9488:	mov	r0, #0
    948c:	bhi	94b0 <sas7bcat_parse_block+0xfc>
    9490:	add	r0, sp, #19
    9494:	stm	sp, {r0, r5}
    9498:	add	r0, r6, r1
    949c:	sub	r1, r9, sl
    94a0:	sub	r1, r1, r8
    94a4:	ldr	r2, [sp, #8]
    94a8:	ldr	r3, [sp, #12]
    94ac:	bl	9540 <sas7bcat_parse_value_labels>
    94b0:	sub	sp, fp, #28
    94b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    94b8:	orr	r0, sl, r8
    94bc:	add	r1, r0, #32
    94c0:	cmp	r1, r9
    94c4:	bhi	93c8 <sas7bcat_parse_block+0x14>
    94c8:	ldr	r1, [r5, #100]	; 0x64
    94cc:	str	r1, [sp]
    94d0:	add	r2, r6, r0
    94d4:	add	r0, sp, #19
    94d8:	mov	r1, #129	; 0x81
    94dc:	mov	r3, #32
    94e0:	bl	4cbc <readstat_convert@plt>
    94e4:	cmp	r0, #0
    94e8:	bne	94b0 <sas7bcat_parse_block+0xfc>
    94ec:	orr	r8, r8, #32
    94f0:	b	9480 <sas7bcat_parse_block+0xcc>

000094f4 <sas7bcat_ctx_free>:
    94f4:	push	{r4, sl, fp, lr}
    94f8:	add	fp, sp, #8
    94fc:	mov	r4, r0
    9500:	ldr	r0, [r0, #100]	; 0x64
    9504:	cmp	r0, #0
    9508:	beq	9510 <sas7bcat_ctx_free+0x1c>
    950c:	bl	4848 <iconv_close@plt>
    9510:	ldr	r0, [r4, #80]	; 0x50
    9514:	cmp	r0, #0
    9518:	beq	9520 <sas7bcat_ctx_free+0x2c>
    951c:	bl	4938 <free@plt>
    9520:	mov	r0, r4
    9524:	pop	{r4, sl, fp, lr}
    9528:	b	4938 <free@plt>

0000952c <compare_block_pointers>:
    952c:	ldr	r1, [r1]
    9530:	ldr	r0, [r0]
    9534:	sub	r0, r0, r1
    9538:	bx	lr
    953c:	nop	{0}

00009540 <sas7bcat_parse_value_labels>:
    9540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9544:	add	fp, sp, #28
    9548:	sub	sp, sp, #4
    954c:	vpush	{d8}
    9550:	sub	sp, sp, #136	; 0x88
    9554:	mov	r6, r3
    9558:	mov	sl, r2
    955c:	mov	r5, r1
    9560:	mov	r8, r0
    9564:	mov	r0, r2
    9568:	mov	r1, #4
    956c:	bl	4a34 <readstat_calloc@plt>
    9570:	mov	r9, r0
    9574:	bl	492c <machine_is_little_endian@plt>
    9578:	cmp	r9, #0
    957c:	beq	9830 <sas7bcat_parse_value_labels+0x2f0>
    9580:	cmp	r6, #1
    9584:	blt	984c <sas7bcat_parse_value_labels+0x30c>
    9588:	str	r0, [fp, #-156]	; 0xffffff64
    958c:	ldr	r0, [fp, #8]
    9590:	ldrb	r0, [r0]
    9594:	str	r0, [fp, #-140]	; 0xffffff74
    9598:	ldr	ip, [fp, #12]
    959c:	mov	r7, #0
    95a0:	mov	r4, r8
    95a4:	str	r9, [fp, #-136]	; 0xffffff78
    95a8:	add	r0, r4, #3
    95ac:	sub	r0, r0, r8
    95b0:	cmp	r0, r5
    95b4:	bhi	9838 <sas7bcat_parse_value_labels+0x2f8>
    95b8:	cmp	r7, sl
    95bc:	bge	95fc <sas7bcat_parse_value_labels+0xbc>
    95c0:	ldr	r0, [ip, #20]
    95c4:	add	r0, r4, r0
    95c8:	add	r1, r0, #14
    95cc:	sub	r1, r1, r8
    95d0:	cmp	r1, r5
    95d4:	bhi	9838 <sas7bcat_parse_value_labels+0x2f8>
    95d8:	add	r0, r0, #10
    95dc:	ldr	r1, [ip, #24]
    95e0:	bl	4e90 <sas_read4@plt>
    95e4:	cmp	r0, sl
    95e8:	bcs	9838 <sas7bcat_parse_value_labels+0x2f8>
    95ec:	sub	r1, r4, r8
    95f0:	str	r1, [r9, r0, lsl #2]
    95f4:	ldr	r2, [fp, #12]
    95f8:	mov	ip, r2
    95fc:	ldrb	r0, [r4, #2]
    9600:	add	r0, r4, r0
    9604:	add	r4, r0, #6
    9608:	add	r7, r7, #1
    960c:	cmp	r7, r6
    9610:	blt	95a8 <sas7bcat_parse_value_labels+0x68>
    9614:	str	r5, [fp, #-152]	; 0xffffff68
    9618:	str	r6, [fp, #-160]	; 0xffffff60
    961c:	mov	r9, #0
    9620:	cmp	sl, #1
    9624:	ldrge	r0, [fp, #-160]	; 0xffffff60
    9628:	cmpge	r0, #1
    962c:	blt	983c <sas7bcat_parse_value_labels+0x2fc>
    9630:	ldr	r0, [fp, #-140]	; 0xffffff74
    9634:	subs	r0, r0, #36	; 0x24
    9638:	movwne	r0, #5
    963c:	str	r0, [fp, #-168]	; 0xffffff58
    9640:	sub	r0, fp, #64	; 0x40
    9644:	add	r0, r0, #8
    9648:	str	r0, [fp, #-172]	; 0xffffff54
    964c:	vldr	d8, [pc, #572]	; 9890 <sas7bcat_parse_value_labels+0x350>
    9650:	mov	r6, #0
    9654:	ldr	r9, [fp, #-136]	; 0xffffff78
    9658:	ldr	r0, [r9, r6, lsl #2]
    965c:	add	r0, r8, r0
    9660:	add	r1, r0, #30
    9664:	sub	r1, r1, r8
    9668:	ldr	r5, [fp, #-152]	; 0xffffff68
    966c:	cmp	r1, r5
    9670:	bhi	9838 <sas7bcat_parse_value_labels+0x2f8>
    9674:	add	r2, r4, #10
    9678:	sub	r1, r2, r8
    967c:	cmp	r1, r5
    9680:	bhi	9838 <sas7bcat_parse_value_labels+0x2f8>
    9684:	str	r2, [fp, #-144]	; 0xffffff70
    9688:	mov	r3, #0
    968c:	str	r3, [fp, #-60]	; 0xffffffc4
    9690:	str	r3, [fp, #-64]	; 0xffffffc0
    9694:	ldr	r1, [fp, #-168]	; 0xffffff58
    9698:	str	r1, [fp, #-56]	; 0xffffffc8
    969c:	strb	r3, [fp, #-52]	; 0xffffffcc
    96a0:	ldrb	r1, [fp, #-51]	; 0xffffffcd
    96a4:	and	r1, r1, #252	; 0xfc
    96a8:	strb	r1, [fp, #-51]	; 0xffffffcd
    96ac:	ldr	r1, [fp, #-140]	; 0xffffff74
    96b0:	cmp	r1, #36	; 0x24
    96b4:	str	r6, [fp, #-148]	; 0xffffff6c
    96b8:	bne	9704 <sas7bcat_parse_value_labels+0x1c4>
    96bc:	ldrb	r1, [r0, #2]
    96c0:	ldr	r2, [ip, #100]	; 0x64
    96c4:	sub	sp, sp, #8
    96c8:	str	r2, [sp]
    96cc:	add	r0, r0, r1
    96d0:	sub	r2, r0, #10
    96d4:	sub	r5, fp, #129	; 0x81
    96d8:	mov	r0, r5
    96dc:	mov	r1, #65	; 0x41
    96e0:	mov	r3, #16
    96e4:	bl	4cbc <readstat_convert@plt>
    96e8:	add	sp, sp, #8
    96ec:	cmp	r0, #0
    96f0:	bne	9884 <sas7bcat_parse_value_labels+0x344>
    96f4:	str	r5, [fp, #-64]	; 0xffffffc0
    96f8:	ldr	r5, [fp, #-152]	; 0xffffff68
    96fc:	ldr	r2, [fp, #12]
    9700:	b	974c <sas7bcat_parse_value_labels+0x20c>
    9704:	add	r0, r0, #22
    9708:	ldr	r1, [fp, #-156]	; 0xffffff64
    970c:	bl	4e60 <sas_read8@plt>
    9710:	orr	r2, r1, #65280	; 0xff00
    9714:	movw	r3, #65535	; 0xffff
    9718:	eor	r2, r2, r3
    971c:	mvn	r3, r0
    9720:	orrs	r2, r3, r2
    9724:	bne	973c <sas7bcat_parse_value_labels+0x1fc>
    9728:	ubfx	r1, r1, #8, #8
    972c:	sub	r0, fp, #64	; 0x40
    9730:	bl	4f44 <sas_assign_tag@plt>
    9734:	vorr	d16, d8, d8
    9738:	b	9744 <sas7bcat_parse_value_labels+0x204>
    973c:	eor	r1, r1, #-2147483648	; 0x80000000
    9740:	vmov	d16, r0, r1
    9744:	ldr	r2, [fp, #12]
    9748:	vstr	d16, [fp, #-64]	; 0xffffffc0
    974c:	ldr	r1, [r2, #24]
    9750:	add	r0, r4, #8
    9754:	mov	r6, r2
    9758:	bl	4e6c <sas_read2@plt>
    975c:	mov	r7, r0
    9760:	ldr	r2, [fp, #-144]	; 0xffffff70
    9764:	add	r0, r2, r0
    9768:	sub	r0, r0, r8
    976c:	cmp	r0, r5
    9770:	bhi	9838 <sas7bcat_parse_value_labels+0x2f8>
    9774:	ldr	r0, [r6, #4]
    9778:	cmp	r0, #0
    977c:	mov	ip, r6
    9780:	beq	9808 <sas7bcat_parse_value_labels+0x2c8>
    9784:	mov	r0, #1
    9788:	orr	r1, r0, r7, lsl #2
    978c:	add	r0, r1, #7
    9790:	movw	r3, #65528	; 0xfff8
    9794:	movt	r3, #7
    9798:	and	r0, r0, r3
    979c:	str	sp, [fp, #-164]	; 0xffffff5c
    97a0:	sub	r6, sp, r0
    97a4:	mov	sp, r6
    97a8:	ldr	r0, [ip, #100]	; 0x64
    97ac:	sub	sp, sp, #8
    97b0:	str	r0, [sp]
    97b4:	mov	r0, r6
    97b8:	mov	r5, ip
    97bc:	mov	r3, r7
    97c0:	bl	4cbc <readstat_convert@plt>
    97c4:	add	sp, sp, #8
    97c8:	cmp	r0, #0
    97cc:	bne	986c <sas7bcat_parse_value_labels+0x32c>
    97d0:	ldr	r0, [fp, #-172]	; 0xffffff54
    97d4:	ldrd	r0, [r0]
    97d8:	ldmib	r5, {ip, lr}
    97dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
    97e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    97e4:	push	{r0, r1, r6, lr}
    97e8:	ldr	r0, [fp, #8]
    97ec:	blx	ip
    97f0:	add	sp, sp, #16
    97f4:	cmp	r0, #0
    97f8:	bne	9878 <sas7bcat_parse_value_labels+0x338>
    97fc:	ldr	sp, [fp, #-164]	; 0xffffff5c
    9800:	ldr	r2, [fp, #12]
    9804:	mov	ip, r2
    9808:	ldr	r6, [fp, #-148]	; 0xffffff6c
    980c:	add	r6, r6, #1
    9810:	mov	r9, #0
    9814:	cmp	r6, sl
    9818:	addlt	r0, r4, r7
    981c:	addlt	r4, r0, #11
    9820:	ldrlt	r0, [fp, #-160]	; 0xffffff60
    9824:	cmplt	r6, r0
    9828:	blt	9654 <sas7bcat_parse_value_labels+0x114>
    982c:	b	983c <sas7bcat_parse_value_labels+0x2fc>
    9830:	mov	r9, #3
    9834:	b	9858 <sas7bcat_parse_value_labels+0x318>
    9838:	mov	r9, #5
    983c:	ldr	r0, [fp, #-136]	; 0xffffff78
    9840:	cmp	r0, #0
    9844:	bne	9854 <sas7bcat_parse_value_labels+0x314>
    9848:	b	9858 <sas7bcat_parse_value_labels+0x318>
    984c:	mov	r0, r9
    9850:	mov	r9, #0
    9854:	bl	4938 <free@plt>
    9858:	mov	r0, r9
    985c:	sub	sp, fp, #40	; 0x28
    9860:	vpop	{d8}
    9864:	add	sp, sp, #4
    9868:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    986c:	mov	r9, r0
    9870:	ldr	sp, [fp, #-164]	; 0xffffff5c
    9874:	b	983c <sas7bcat_parse_value_labels+0x2fc>
    9878:	mov	r9, #4
    987c:	ldr	sp, [fp, #-164]	; 0xffffff5c
    9880:	b	983c <sas7bcat_parse_value_labels+0x2fc>
    9884:	mov	r9, r0
    9888:	b	983c <sas7bcat_parse_value_labels+0x2fc>
    988c:	nop	{0}
    9890:	.word	0x00000000
    9894:	.word	0x7ff80000

00009898 <readstat_begin_writing_sas7bcat>:
    9898:	ldr	r2, [r0, #8]
    989c:	cmp	r2, #0
    98a0:	moveq	r2, #9
    98a4:	streq	r2, [r0, #8]
    98a8:	ldr	r2, [pc, #12]	; 98bc <readstat_begin_writing_sas7bcat+0x24>
    98ac:	add	r2, pc, r2
    98b0:	str	r2, [r0, #276]	; 0x114
    98b4:	mov	r2, #0
    98b8:	b	49d4 <readstat_begin_writing_file@plt>
    98bc:	.word	0x0000000c

000098c0 <sas7bcat_begin_data>:
    98c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    98c4:	add	fp, sp, #28
    98c8:	sub	sp, sp, #4
    98cc:	mov	r4, r0
    98d0:	mov	r8, #0
    98d4:	mov	r1, #0
    98d8:	bl	4de8 <sas_header_info_init@plt>
    98dc:	mov	r9, r0
    98e0:	ldr	r0, [r4, #40]	; 0x28
    98e4:	lsl	r0, r0, #3
    98e8:	bl	4b9c <malloc@plt>
    98ec:	mov	r7, r0
    98f0:	mov	r5, r9
    98f4:	ldr	r0, [r5, #32]!
    98f8:	bl	4b9c <malloc@plt>
    98fc:	mov	sl, r0
    9900:	ldr	r0, [r4, #40]	; 0x28
    9904:	cmp	r0, #1
    9908:	blt	9930 <sas7bcat_begin_data+0x70>
    990c:	mov	r6, #0
    9910:	ldr	r0, [r4, #36]	; 0x24
    9914:	ldr	r0, [r0, r6, lsl #2]
    9918:	bl	9b14 <sas7bcat_block_for_label_set>
    991c:	str	r0, [r7, r6, lsl #2]
    9920:	add	r6, r6, #1
    9924:	ldr	r0, [r4, #40]	; 0x28
    9928:	cmp	r6, r0
    992c:	blt	9910 <sas7bcat_begin_data+0x50>
    9930:	mov	r0, #4
    9934:	str	r0, [r9, #56]	; 0x38
    9938:	str	r8, [r9, #60]	; 0x3c
    993c:	mov	r0, r4
    9940:	mov	r1, r9
    9944:	bl	9d2c <sas7bcat_emit_header>
    9948:	mov	r6, r0
    994c:	cmp	r0, #0
    9950:	bne	9ac8 <sas7bcat_begin_data+0x208>
    9954:	ldr	r1, [r5]
    9958:	mov	r0, r4
    995c:	bl	4a94 <readstat_write_zeros@plt>
    9960:	mov	r6, r0
    9964:	cmp	r0, #0
    9968:	bne	9ac8 <sas7bcat_begin_data+0x208>
    996c:	ldr	r2, [r5]
    9970:	mov	r6, #0
    9974:	mov	r0, sl
    9978:	mov	r1, #0
    997c:	bl	4d28 <memset@plt>
    9980:	ldr	r0, [r4, #40]	; 0x28
    9984:	cmp	r0, #1
    9988:	blt	99e8 <sas7bcat_begin_data+0x128>
    998c:	add	r1, sl, #856	; 0x358
    9990:	mov	r0, #16
    9994:	mov	ip, #4
    9998:	movw	lr, #19544	; 0x4c58
    999c:	movt	lr, #21075	; 0x5253
    99a0:	mov	r8, #79	; 0x4f
    99a4:	ldr	r2, [r5]
    99a8:	add	r3, sl, r2
    99ac:	add	r2, r1, #212	; 0xd4
    99b0:	cmp	r2, r3
    99b4:	bhi	99e8 <sas7bcat_begin_data+0x128>
    99b8:	strh	ip, [r1, #4]
    99bc:	str	lr, [r1]
    99c0:	strh	r0, [r1, #8]
    99c4:	strb	r8, [r1, #50]	; 0x32
    99c8:	ldr	r1, [r7, r6, lsl #2]
    99cc:	ldrh	r1, [r1]
    99d0:	add	r0, r0, r1
    99d4:	add	r6, r6, #1
    99d8:	ldr	r1, [r4, #40]	; 0x28
    99dc:	cmp	r6, r1
    99e0:	mov	r1, r2
    99e4:	blt	99a4 <sas7bcat_begin_data+0xe4>
    99e8:	ldr	r2, [r5]
    99ec:	mov	r0, r4
    99f0:	mov	r1, sl
    99f4:	bl	4ef0 <readstat_write_bytes@plt>
    99f8:	mov	r6, r0
    99fc:	cmp	r0, #0
    9a00:	bne	9ac8 <sas7bcat_begin_data+0x208>
    9a04:	ldr	r1, [r5]
    9a08:	mov	r0, r4
    9a0c:	bl	4a94 <readstat_write_zeros@plt>
    9a10:	mov	r6, r0
    9a14:	cmp	r0, #0
    9a18:	bne	9ac8 <sas7bcat_begin_data+0x208>
    9a1c:	ldr	r2, [r5]
    9a20:	str	sl, [sp]
    9a24:	mov	r0, sl
    9a28:	mov	r1, #0
    9a2c:	bl	4d28 <memset@plt>
    9a30:	ldr	r0, [r4, #40]	; 0x28
    9a34:	cmp	r0, #1
    9a38:	blt	9ab0 <sas7bcat_begin_data+0x1f0>
    9a3c:	mov	r0, #16
    9a40:	mov	r6, #0
    9a44:	ldr	sl, [r7, r6, lsl #2]
    9a48:	ldr	r1, [sl]
    9a4c:	sxth	r0, r0
    9a50:	add	r8, r0, #16
    9a54:	add	r2, r1, r8
    9a58:	ldm	r5, {r3, ip}
    9a5c:	subs	r2, r3, r2
    9a60:	sbcs	r2, ip, #0
    9a64:	blt	9ab0 <sas7bcat_begin_data+0x1f0>
    9a68:	ldr	r3, [sp]
    9a6c:	mov	r2, r3
    9a70:	mov	ip, #0
    9a74:	str	ip, [r2, r0]!
    9a78:	str	ip, [r2, #12]
    9a7c:	str	ip, [r2, #8]
    9a80:	strh	ip, [r2, #4]
    9a84:	strh	r1, [r2, #6]
    9a88:	sxtah	r0, r3, r8
    9a8c:	mov	r1, sl
    9a90:	ldr	r2, [r1], #4
    9a94:	bl	4998 <memcpy@plt>
    9a98:	ldr	r0, [sl]
    9a9c:	sxtah	r0, r0, r8
    9aa0:	add	r6, r6, #1
    9aa4:	ldr	r1, [r4, #40]	; 0x28
    9aa8:	cmp	r6, r1
    9aac:	blt	9a44 <sas7bcat_begin_data+0x184>
    9ab0:	ldr	r2, [r5]
    9ab4:	mov	r0, r4
    9ab8:	ldr	sl, [sp]
    9abc:	mov	r1, sl
    9ac0:	bl	4ef0 <readstat_write_bytes@plt>
    9ac4:	mov	r6, r0
    9ac8:	ldr	r0, [r4, #40]	; 0x28
    9acc:	cmp	r0, #1
    9ad0:	blt	9af0 <sas7bcat_begin_data+0x230>
    9ad4:	mov	r5, #0
    9ad8:	ldr	r0, [r7, r5, lsl #2]
    9adc:	bl	4938 <free@plt>
    9ae0:	add	r5, r5, #1
    9ae4:	ldr	r0, [r4, #40]	; 0x28
    9ae8:	cmp	r5, r0
    9aec:	blt	9ad8 <sas7bcat_begin_data+0x218>
    9af0:	mov	r0, r7
    9af4:	bl	4938 <free@plt>
    9af8:	mov	r0, r9
    9afc:	bl	4938 <free@plt>
    9b00:	mov	r0, sl
    9b04:	bl	4938 <free@plt>
    9b08:	mov	r0, r6
    9b0c:	sub	sp, fp, #28
    9b10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009b14 <sas7bcat_block_for_label_set>:
    9b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9b18:	add	fp, sp, #28
    9b1c:	sub	sp, sp, #44	; 0x2c
    9b20:	mov	r9, r0
    9b24:	add	r5, r0, #4
    9b28:	mov	r0, r5
    9b2c:	bl	4c8c <strlen@plt>
    9b30:	mov	r7, r0
    9b34:	cmp	r0, #32
    9b38:	mov	r8, r0
    9b3c:	movcs	r8, #32
    9b40:	cmp	r0, #8
    9b44:	movls	r8, r0
    9b48:	add	r0, sp, #8
    9b4c:	mov	r1, r5
    9b50:	mov	r2, r8
    9b54:	bl	4998 <memcpy@plt>
    9b58:	mov	r6, #106	; 0x6a
    9b5c:	cmp	r7, #8
    9b60:	movwhi	r6, #138	; 0x8a
    9b64:	ldr	r4, [r9, #264]	; 0x108
    9b68:	cmp	r4, #1
    9b6c:	blt	9b9c <sas7bcat_block_for_label_set+0x88>
    9b70:	mov	r5, #0
    9b74:	mov	r0, r9
    9b78:	mov	r1, r5
    9b7c:	bl	4f68 <readstat_get_value_label@plt>
    9b80:	ldr	r0, [r0, #28]
    9b84:	add	r0, r6, r0
    9b88:	add	r6, r0, #41	; 0x29
    9b8c:	add	r5, r5, #1
    9b90:	ldr	r4, [r9, #264]	; 0x108
    9b94:	cmp	r5, r4
    9b98:	blt	9b74 <sas7bcat_block_for_label_set+0x60>
    9b9c:	add	r1, r6, #8
    9ba0:	mov	r0, #1
    9ba4:	bl	47d0 <calloc@plt>
    9ba8:	str	r6, [r0]
    9bac:	str	r4, [r0, #42]	; 0x2a
    9bb0:	str	r4, [r0, #46]	; 0x2e
    9bb4:	cmp	r8, #9
    9bb8:	str	r0, [sp, #4]
    9bbc:	bcc	9c0c <sas7bcat_block_for_label_set+0xf8>
    9bc0:	mov	r1, #128	; 0x80
    9bc4:	strb	r1, [r0, #6]
    9bc8:	ldr	r2, [sp, #8]
    9bcc:	ldr	r1, [sp, #12]
    9bd0:	str	r2, [r0, #12]
    9bd4:	str	r1, [r0, #16]
    9bd8:	add	r5, r0, #110	; 0x6e
    9bdc:	add	r0, r5, r8
    9be0:	rsb	r2, r8, #32
    9be4:	cmp	r8, #31
    9be8:	movwhi	r2, #0
    9bec:	mov	r1, #32
    9bf0:	bl	4d28 <memset@plt>
    9bf4:	add	r1, sp, #8
    9bf8:	mov	r0, r5
    9bfc:	mov	r2, r8
    9c00:	bl	4998 <memcpy@plt>
    9c04:	mov	r0, #138	; 0x8a
    9c08:	b	9c2c <sas7bcat_block_for_label_set+0x118>
    9c0c:	movw	r1, #8224	; 0x2020
    9c10:	movt	r1, #8224	; 0x2020
    9c14:	str	r1, [r0, #12]!
    9c18:	str	r1, [r0, #4]
    9c1c:	add	r1, sp, #8
    9c20:	mov	r2, r8
    9c24:	bl	4998 <memcpy@plt>
    9c28:	mov	r0, #106	; 0x6a
    9c2c:	ldr	r1, [r9, #264]	; 0x108
    9c30:	cmp	r1, #1
    9c34:	blt	9d20 <sas7bcat_block_for_label_set+0x20c>
    9c38:	ldr	r3, [sp, #4]
    9c3c:	add	r1, r3, #4
    9c40:	rsb	r2, r4, r4, lsl #4
    9c44:	add	r2, r0, r2, lsl #1
    9c48:	add	r4, r1, r2
    9c4c:	add	r0, r3, r0
    9c50:	add	r5, r0, #14
    9c54:	mov	r6, #0
    9c58:	mov	r0, r9
    9c5c:	mov	r1, r6
    9c60:	bl	4f68 <readstat_get_value_label@plt>
    9c64:	mov	r7, r0
    9c68:	mov	r0, #24
    9c6c:	strb	r0, [r5, #-8]
    9c70:	str	r6, [r5]
    9c74:	ldr	r0, [r9]
    9c78:	cmp	r0, #0
    9c7c:	beq	9cb8 <sas7bcat_block_for_label_set+0x1a4>
    9c80:	ldr	r8, [r7]
    9c84:	ldr	r1, [r7, #4]
    9c88:	eor	sl, r1, #-2147483648	; 0x80000000
    9c8c:	bl	492c <machine_is_little_endian@plt>
    9c90:	cmp	r0, #0
    9c94:	beq	9cac <sas7bcat_block_for_label_set+0x198>
    9c98:	mov	r0, r8
    9c9c:	mov	r1, sl
    9ca0:	bl	47f4 <byteswap8@plt>
    9ca4:	mov	r8, r0
    9ca8:	mov	sl, r1
    9cac:	str	r8, [r5, #12]
    9cb0:	str	sl, [r5, #16]
    9cb4:	b	9ce8 <sas7bcat_block_for_label_set+0x1d4>
    9cb8:	ldr	r2, [r7, #20]
    9cbc:	mov	r0, r5
    9cc0:	movw	r1, #8224	; 0x2020
    9cc4:	movt	r1, #8224	; 0x2020
    9cc8:	str	r1, [r0, #4]!
    9ccc:	str	r1, [r0, #12]
    9cd0:	str	r1, [r0, #8]
    9cd4:	str	r1, [r0, #4]
    9cd8:	cmp	r2, #16
    9cdc:	movcs	r2, #16
    9ce0:	ldr	r1, [r7, #16]
    9ce4:	bl	4998 <memcpy@plt>
    9ce8:	ldr	r2, [r7, #28]
    9cec:	strh	r2, [r4, #8]
    9cf0:	ldr	r1, [r7, #24]
    9cf4:	add	r0, r4, #10
    9cf8:	sxth	r2, r2
    9cfc:	bl	4998 <memcpy@plt>
    9d00:	ldr	r0, [r7, #28]
    9d04:	add	r0, r4, r0
    9d08:	add	r4, r0, #11
    9d0c:	add	r5, r5, #30
    9d10:	add	r6, r6, #1
    9d14:	ldr	r0, [r9, #264]	; 0x108
    9d18:	cmp	r6, r0
    9d1c:	blt	9c58 <sas7bcat_block_for_label_set+0x144>
    9d20:	ldr	r0, [sp, #4]
    9d24:	sub	sp, fp, #28
    9d28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00009d2c <sas7bcat_emit_header>:
    9d2c:	push	{r4, r5, r6, sl, fp, lr}
    9d30:	add	fp, sp, #16
    9d34:	sub	sp, sp, #328	; 0x148
    9d38:	mov	r4, r1
    9d3c:	mov	r5, r0
    9d40:	add	r6, sp, #160	; 0xa0
    9d44:	mov	r0, r6
    9d48:	mov	r1, #0
    9d4c:	mov	r2, #156	; 0x9c
    9d50:	bl	4d28 <memset@plt>
    9d54:	ldr	r0, [r4, #4]
    9d58:	mov	r1, #34	; 0x22
    9d5c:	strb	r1, [sp, #195]	; 0xc3
    9d60:	mov	r1, #51	; 0x33
    9d64:	cmp	r0, #0
    9d68:	movweq	r1, #34	; 0x22
    9d6c:	strb	r1, [sp, #192]	; 0xc0
    9d70:	bl	492c <machine_is_little_endian@plt>
    9d74:	ldr	r1, [pc, #152]	; 9e14 <sas7bcat_emit_header+0xe8>
    9d78:	ldr	r1, [pc, r1]
    9d7c:	vld1.8	{d16-d17}, [r1]!
    9d80:	vld1.8	{d18-d19}, [r1]
    9d84:	add	r1, r6, #16
    9d88:	vst1.64	{d18-d19}, [r1]
    9d8c:	movw	r1, #18758	; 0x4946
    9d90:	movt	r1, #17740	; 0x454c
    9d94:	str	r1, [sp, #248]	; 0xf8
    9d98:	movw	r1, #16723	; 0x4153
    9d9c:	movt	r1, #8275	; 0x2053
    9da0:	str	r1, [sp, #244]	; 0xf4
    9da4:	movw	r1, #20300	; 0x4f4c
    9da8:	movt	r1, #8263	; 0x2047
    9dac:	str	r1, [sp, #320]	; 0x140
    9db0:	movw	r1, #16707	; 0x4143
    9db4:	movt	r1, #16724	; 0x4154
    9db8:	str	r1, [sp, #316]	; 0x13c
    9dbc:	mov	r1, #49	; 0x31
    9dc0:	strb	r1, [sp, #199]	; 0xc7
    9dc4:	mov	r1, #20
    9dc8:	strb	r1, [sp, #230]	; 0xe6
    9dcc:	cmp	r0, #0
    9dd0:	movwne	r0, #1
    9dd4:	strb	r0, [sp, #197]	; 0xc5
    9dd8:	mov	r0, #8
    9ddc:	vst1.64	{d16-d17}, [r6], r0
    9de0:	movw	r0, #156	; 0x9c
    9de4:	mov	r1, sp
    9de8:	ldr	r2, [r6], #4
    9dec:	str	r2, [r1], #4
    9df0:	subs	r0, r0, #4
    9df4:	bne	9de8 <sas7bcat_emit_header+0xbc>
    9df8:	ldr	r2, [sp, #160]	; 0xa0
    9dfc:	ldr	r3, [sp, #164]	; 0xa4
    9e00:	mov	r0, r5
    9e04:	mov	r1, r4
    9e08:	bl	4b3c <sas_write_header@plt>
    9e0c:	sub	sp, fp, #16
    9e10:	pop	{r4, r5, r6, sl, fp, pc}
    9e14:	.word	0x0003b550

00009e18 <readstat_parse_sas7bdat>:
    9e18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9e1c:	add	fp, sp, #28
    9e20:	sub	sp, sp, #28
    9e24:	mov	r9, r2
    9e28:	mov	r4, r1
    9e2c:	mov	r6, r0
    9e30:	mov	r0, #0
    9e34:	str	r0, [sp, #20]
    9e38:	str	r0, [sp, #16]
    9e3c:	ldr	r8, [r6, #32]
    9e40:	mov	r0, #1
    9e44:	movw	r1, #2536	; 0x9e8
    9e48:	bl	47d0 <calloc@plt>
    9e4c:	mov	r5, r0
    9e50:	mov	r0, #1
    9e54:	mov	r1, #152	; 0x98
    9e58:	bl	47d0 <calloc@plt>
    9e5c:	mov	sl, r0
    9e60:	add	r0, r6, #16
    9e64:	vld1.32	{d16-d17}, [r0]
    9e68:	add	r0, r5, #16
    9e6c:	mov	r1, #48	; 0x30
    9e70:	mov	r2, r6
    9e74:	vld1.32	{d18-d19}, [r2], r1
    9e78:	vst1.32	{d16-d17}, [r0]
    9e7c:	mov	r0, #84	; 0x54
    9e80:	mov	r1, r5
    9e84:	vst1.32	{d18-d19}, [r1], r0
    9e88:	ldr	r7, [r6, #32]
    9e8c:	add	r6, r6, #36	; 0x24
    9e90:	ldm	r6, {r0, r3, r6}
    9e94:	str	r0, [r5, #200]	; 0xc8
    9e98:	str	r3, [r5, #204]	; 0xcc
    9e9c:	str	r9, [sp, #12]
    9ea0:	str	r9, [r5, #52]	; 0x34
    9ea4:	str	r7, [r5, #56]	; 0x38
    9ea8:	str	r6, [r1]
    9eac:	ldr	r0, [r2]
    9eb0:	cmp	r0, #1
    9eb4:	strge	r0, [r5, #88]	; 0x58
    9eb8:	ldr	r2, [r8]
    9ebc:	ldr	r1, [r8, #20]
    9ec0:	mov	r0, r4
    9ec4:	blx	r2
    9ec8:	cmn	r0, #1
    9ecc:	mov	r9, sl
    9ed0:	mov	r7, #1
    9ed4:	beq	a008 <readstat_parse_sas7bdat+0x1f0>
    9ed8:	ldr	r3, [r8, #8]
    9edc:	ldr	r2, [r8, #20]
    9ee0:	mov	r0, #0
    9ee4:	mov	r1, #2
    9ee8:	blx	r3
    9eec:	asr	r1, r0, #31
    9ef0:	strd	r0, [r5, #32]
    9ef4:	cmn	r0, #1
    9ef8:	beq	9f60 <readstat_parse_sas7bdat+0x148>
    9efc:	ldr	r3, [r8, #8]
    9f00:	ldr	r2, [r8, #20]
    9f04:	mov	r0, #0
    9f08:	mov	r1, #0
    9f0c:	blx	r3
    9f10:	ldr	r2, [r5, #24]
    9f14:	cmn	r0, #1
    9f18:	beq	9fb4 <readstat_parse_sas7bdat+0x19c>
    9f1c:	mov	r0, r8
    9f20:	mov	r1, r9
    9f24:	ldr	r3, [sp, #12]
    9f28:	bl	4e3c <sas_read_header@plt>
    9f2c:	mov	r7, r0
    9f30:	cmp	r0, #0
    9f34:	beq	a09c <readstat_parse_sas7bdat+0x284>
    9f38:	ldr	r1, [r8, #4]
    9f3c:	ldr	r0, [r8, #20]
    9f40:	blx	r1
    9f44:	cmp	r7, #15
    9f48:	bhi	a078 <readstat_parse_sas7bdat+0x260>
    9f4c:	mov	r0, #1
    9f50:	movw	r1, #32774	; 0x8006
    9f54:	tst	r1, r0, lsl r7
    9f58:	bne	a014 <readstat_parse_sas7bdat+0x1fc>
    9f5c:	b	a078 <readstat_parse_sas7bdat+0x260>
    9f60:	ldr	r2, [r5, #24]
    9f64:	mov	r7, #15
    9f68:	cmp	r2, #0
    9f6c:	beq	a008 <readstat_parse_sas7bdat+0x1f0>
    9f70:	movw	r0, #481	; 0x1e1
    9f74:	mov	r1, #32
    9f78:	ldr	r3, [pc, #912]	; a310 <readstat_parse_sas7bdat+0x4f8>
    9f7c:	add	r3, pc, r3
    9f80:	add	r0, r5, r0
    9f84:	add	r6, r3, #16
    9f88:	vld1.64	{d16-d17}, [r3], r1
    9f8c:	vld1.64	{d18-d19}, [r6]
    9f90:	vldr	d20, [r3]
    9f94:	vst1.8	{d16-d17}, [r0]
    9f98:	movw	r1, #497	; 0x1f1
    9f9c:	add	r1, r5, r1
    9fa0:	vst1.8	{d18-d19}, [r1]
    9fa4:	movw	r1, #513	; 0x201
    9fa8:	add	r1, r5, r1
    9fac:	vst1.8	{d20}, [r1]
    9fb0:	b	a000 <readstat_parse_sas7bdat+0x1e8>
    9fb4:	mov	r7, #15
    9fb8:	cmp	r2, #0
    9fbc:	beq	a008 <readstat_parse_sas7bdat+0x1f0>
    9fc0:	movw	r0, #481	; 0x1e1
    9fc4:	mov	r1, #30
    9fc8:	ldr	r3, [pc, #836]	; a314 <readstat_parse_sas7bdat+0x4fc>
    9fcc:	add	r3, pc, r3
    9fd0:	add	r0, r5, r0
    9fd4:	add	r6, r3, #16
    9fd8:	vld1.64	{d16-d17}, [r3], r1
    9fdc:	vld1.64	{d18-d19}, [r6]
    9fe0:	vld1.16	{d20-d21}, [r3]
    9fe4:	vst1.8	{d16-d17}, [r0]
    9fe8:	movw	r1, #497	; 0x1f1
    9fec:	add	r1, r5, r1
    9ff0:	vst1.8	{d18-d19}, [r1]
    9ff4:	movw	r1, #511	; 0x1ff
    9ff8:	add	r1, r5, r1
    9ffc:	vst1.8	{d20-d21}, [r1]
    a000:	ldr	r1, [r5, #52]	; 0x34
    a004:	blx	r2
    a008:	ldr	r1, [r8, #4]
    a00c:	ldr	r0, [r8, #20]
    a010:	blx	r1
    a014:	ldr	r0, [r5, #24]
    a018:	cmp	r0, #0
    a01c:	beq	a078 <readstat_parse_sas7bdat+0x260>
    a020:	mov	r0, r7
    a024:	bl	48c0 <readstat_error_message@plt>
    a028:	mov	r4, r0
    a02c:	bl	4cec <__errno_location@plt>
    a030:	mov	r6, r0
    a034:	ldr	r0, [r0]
    a038:	bl	4bcc <strerror@plt>
    a03c:	ldr	r1, [r6]
    a040:	str	r7, [sp]
    a044:	stmib	sp, {r0, r1}
    a048:	movw	r0, #481	; 0x1e1
    a04c:	add	r6, r5, r0
    a050:	ldr	r2, [pc, #712]	; a320 <readstat_parse_sas7bdat+0x508>
    a054:	add	r2, pc, r2
    a058:	mov	r0, r6
    a05c:	mov	r1, #2048	; 0x800
    a060:	mov	r3, r4
    a064:	bl	4d04 <snprintf@plt>
    a068:	ldr	r2, [r5, #24]
    a06c:	mov	r0, r6
    a070:	ldr	r1, [sp, #12]
    a074:	blx	r2
    a078:	mov	r0, r5
    a07c:	bl	aa58 <sas7bdat_ctx_free>
    a080:	cmp	r9, #0
    a084:	beq	a090 <readstat_parse_sas7bdat+0x278>
    a088:	mov	r0, r9
    a08c:	bl	4938 <free@plt>
    a090:	mov	r0, r7
    a094:	sub	sp, fp, #28
    a098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a09c:	ldm	r9, {r0, r1, r2}
    a0a0:	add	r3, r5, #40	; 0x28
    a0a4:	stm	r3, {r0, r1, r2}
    a0a8:	bl	492c <machine_is_little_endian@plt>
    a0ac:	ldr	r1, [r9]
    a0b0:	eor	r0, r1, r0
    a0b4:	str	r0, [r5, #60]	; 0x3c
    a0b8:	ldr	r1, [r9, #64]	; 0x40
    a0bc:	ldr	r2, [r9, #68]	; 0x44
    a0c0:	add	lr, r9, #32
    a0c4:	ldm	lr, {r0, r3, r7, sl, lr}
    a0c8:	ldr	ip, [r9, #52]	; 0x34
    a0cc:	ldr	r4, [r9, #56]	; 0x38
    a0d0:	ldr	r6, [r9, #60]	; 0x3c
    a0d4:	str	r1, [r5, #96]	; 0x60
    a0d8:	str	r2, [r5, #100]	; 0x64
    a0dc:	str	r4, [r5, #104]	; 0x68
    a0e0:	str	r6, [r5, #108]	; 0x6c
    a0e4:	str	r0, [r5, #112]	; 0x70
    a0e8:	str	r3, [r5, #116]	; 0x74
    a0ec:	ldr	r1, [r5, #44]	; 0x2c
    a0f0:	mov	r2, #8
    a0f4:	cmp	r1, #0
    a0f8:	movweq	r2, #4
    a0fc:	mov	r1, #0
    a100:	str	r7, [r5, #128]	; 0x80
    a104:	str	sl, [r5, #132]	; 0x84
    a108:	str	r2, [r5, #136]	; 0x88
    a10c:	str	r1, [r5, #140]	; 0x8c
    a110:	str	lr, [r5, #144]	; 0x90
    a114:	str	ip, [r5, #148]	; 0x94
    a118:	ldr	r1, [r9, #72]	; 0x48
    a11c:	ldr	r2, [r9, #76]	; 0x4c
    a120:	ldr	r3, [r9, #12]
    a124:	add	ip, r5, #212	; 0xd4
    a128:	stm	ip, {r1, r2, r3}
    a12c:	ldr	r1, [r5, #200]	; 0xc8
    a130:	cmp	r1, #0
    a134:	ldreq	r1, [r9, #144]	; 0x90
    a138:	streq	r1, [r5, #200]	; 0xc8
    a13c:	bl	4cb0 <readstat_malloc@plt>
    a140:	str	r0, [r5, #120]	; 0x78
    a144:	cmp	r0, #0
    a148:	beq	a234 <readstat_parse_sas7bdat+0x41c>
    a14c:	ldr	r4, [r5, #200]	; 0xc8
    a150:	cmp	r4, #0
    a154:	ldrne	r6, [r5, #204]	; 0xcc
    a158:	cmpne	r6, #0
    a15c:	bne	a250 <readstat_parse_sas7bdat+0x438>
    a160:	ldr	r0, [r5, #208]	; 0xd0
    a164:	str	r0, [sp]
    a168:	add	r0, r5, #224	; 0xe0
    a16c:	add	r2, r9, #80	; 0x50
    a170:	movw	r1, #257	; 0x101
    a174:	mov	r3, #64	; 0x40
    a178:	bl	4cbc <readstat_convert@plt>
    a17c:	mov	r7, r0
    a180:	cmp	r0, #0
    a184:	bne	9f38 <readstat_parse_sas7bdat+0x120>
    a188:	add	r1, sp, #16
    a18c:	mov	r0, r5
    a190:	bl	a324 <sas7bdat_parse_meta_pages_pass1>
    a194:	mov	r7, r0
    a198:	cmp	r0, #0
    a19c:	bne	9f38 <readstat_parse_sas7bdat+0x120>
    a1a0:	ldr	r0, [sp, #16]
    a1a4:	ldr	r1, [sp, #20]
    a1a8:	mov	r2, r5
    a1ac:	bl	a5c8 <sas7bdat_parse_amd_pages_pass1>
    a1b0:	mov	r7, r0
    a1b4:	cmp	r0, #0
    a1b8:	bne	9f38 <readstat_parse_sas7bdat+0x120>
    a1bc:	add	r4, r5, #96	; 0x60
    a1c0:	ldr	r0, [r4]
    a1c4:	ldr	r3, [r8, #8]
    a1c8:	ldr	r2, [r8, #20]
    a1cc:	mov	r1, #0
    a1d0:	blx	r3
    a1d4:	cmn	r0, #1
    a1d8:	beq	a288 <readstat_parse_sas7bdat+0x470>
    a1dc:	mov	r0, r5
    a1e0:	bl	a898 <sas7bdat_parse_all_pages_pass2>
    a1e4:	mov	r7, r0
    a1e8:	cmp	r0, #0
    a1ec:	bne	9f38 <readstat_parse_sas7bdat+0x120>
    a1f0:	mov	r0, r5
    a1f4:	mov	r1, #0
    a1f8:	bl	a9f0 <sas7bdat_submit_columns_if_needed>
    a1fc:	mov	r7, r0
    a200:	cmp	r0, #0
    a204:	bne	9f38 <readstat_parse_sas7bdat+0x120>
    a208:	ldr	r0, [r5, #16]
    a20c:	cmp	r0, #0
    a210:	beq	a224 <readstat_parse_sas7bdat+0x40c>
    a214:	ldr	r0, [r5, #76]	; 0x4c
    a218:	ldr	r3, [r5, #84]	; 0x54
    a21c:	cmp	r0, r3
    a220:	bne	a2cc <readstat_parse_sas7bdat+0x4b4>
    a224:	mov	r0, r5
    a228:	bl	aa28 <sas7bdat_update_progress>
    a22c:	mov	r7, r0
    a230:	b	9f38 <readstat_parse_sas7bdat+0x120>
    a234:	mov	r7, #3
    a238:	ldr	r1, [r8, #4]
    a23c:	ldr	r0, [r8, #20]
    a240:	blx	r1
    a244:	mov	r0, r5
    a248:	bl	aa58 <sas7bdat_ctx_free>
    a24c:	b	a088 <readstat_parse_sas7bdat+0x270>
    a250:	mov	r0, r4
    a254:	mov	r1, r6
    a258:	bl	4878 <strcmp@plt>
    a25c:	cmp	r0, #0
    a260:	beq	a160 <readstat_parse_sas7bdat+0x348>
    a264:	mov	r0, r6
    a268:	mov	r1, r4
    a26c:	bl	4bc0 <iconv_open@plt>
    a270:	cmn	r0, #1
    a274:	beq	a280 <readstat_parse_sas7bdat+0x468>
    a278:	str	r0, [r5, #208]	; 0xd0
    a27c:	b	a160 <readstat_parse_sas7bdat+0x348>
    a280:	mov	r7, #7
    a284:	b	a238 <readstat_parse_sas7bdat+0x420>
    a288:	ldr	r0, [r5, #24]
    a28c:	mov	r7, #15
    a290:	cmp	r0, #0
    a294:	beq	a008 <readstat_parse_sas7bdat+0x1f0>
    a298:	ldrd	r0, [r4]
    a29c:	stm	sp, {r0, r1}
    a2a0:	movw	r0, #481	; 0x1e1
    a2a4:	add	r4, r5, r0
    a2a8:	ldr	r2, [pc, #104]	; a318 <readstat_parse_sas7bdat+0x500>
    a2ac:	add	r2, pc, r2
    a2b0:	mov	r0, r4
    a2b4:	mov	r1, #2048	; 0x800
    a2b8:	bl	4d04 <snprintf@plt>
    a2bc:	ldr	r2, [r5, #24]
    a2c0:	ldr	r1, [r5, #52]	; 0x34
    a2c4:	mov	r0, r4
    a2c8:	b	a004 <readstat_parse_sas7bdat+0x1ec>
    a2cc:	ldr	r1, [r5, #24]
    a2d0:	mov	r7, #9
    a2d4:	cmp	r1, #0
    a2d8:	beq	a238 <readstat_parse_sas7bdat+0x420>
    a2dc:	str	r0, [sp]
    a2e0:	movw	r0, #481	; 0x1e1
    a2e4:	add	r4, r5, r0
    a2e8:	ldr	r2, [pc, #44]	; a31c <readstat_parse_sas7bdat+0x504>
    a2ec:	add	r2, pc, r2
    a2f0:	mov	r0, r4
    a2f4:	mov	r1, #2048	; 0x800
    a2f8:	bl	4d04 <snprintf@plt>
    a2fc:	ldr	r2, [r5, #24]
    a300:	ldr	r1, [r5, #52]	; 0x34
    a304:	mov	r0, r4
    a308:	blx	r2
    a30c:	b	a238 <readstat_parse_sas7bdat+0x420>
    a310:	.word	0x0001b944
    a314:	.word	0x0001b91c
    a318:	.word	0x0001b52b
    a31c:	.word	0x0001b62a
    a320:	.word	0x0001b8ef

0000a324 <sas7bdat_parse_meta_pages_pass1>:
    a324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a328:	add	fp, sp, #28
    a32c:	sub	sp, sp, #52	; 0x34
    a330:	mov	r4, r0
    a334:	mov	r7, r0
    a338:	ldr	r0, [r7, #104]!	; 0x68
    a33c:	ldr	r2, [r7, #4]
    a340:	orrs	r0, r0, r2
    a344:	str	r1, [sp, #32]
    a348:	beq	a46c <sas7bdat_parse_meta_pages_pass1+0x148>
    a34c:	ldr	sl, [r7, #-48]	; 0xffffffd0
    a350:	add	r6, r4, #112	; 0x70
    a354:	add	r0, r4, #96	; 0x60
    a358:	str	r0, [sp, #40]	; 0x28
    a35c:	mov	r5, #0
    a360:	mov	r9, #0
    a364:	str	r6, [fp, #-36]	; 0xffffffdc
    a368:	str	r7, [sp, #36]	; 0x24
    a36c:	ldr	r0, [sp, #40]	; 0x28
    a370:	ldr	r0, [r0]
    a374:	ldr	r1, [r6]
    a378:	mla	r0, r1, r5, r0
    a37c:	ldr	r3, [sl, #8]
    a380:	ldr	r2, [sl, #20]
    a384:	mov	r1, #0
    a388:	blx	r3
    a38c:	cmn	r0, #1
    a390:	beq	a488 <sas7bdat_parse_meta_pages_pass1+0x164>
    a394:	str	r5, [fp, #-32]	; 0xffffffe0
    a398:	ldr	r1, [r4, #44]	; 0x2c
    a39c:	ldr	r0, [r4, #120]	; 0x78
    a3a0:	cmp	r1, #0
    a3a4:	mov	r5, #32
    a3a8:	movweq	r5, #16
    a3ac:	orr	r7, r5, #2
    a3b0:	ldr	r6, [r6]
    a3b4:	ldr	r3, [sl, #12]
    a3b8:	ldr	r2, [sl, #20]
    a3bc:	mov	r1, r7
    a3c0:	blx	r3
    a3c4:	cmp	r0, r7
    a3c8:	bcc	a47c <sas7bdat_parse_meta_pages_pass1+0x158>
    a3cc:	ldr	r1, [r4, #60]	; 0x3c
    a3d0:	mov	r8, r4
    a3d4:	ldr	r0, [r4, #120]	; 0x78
    a3d8:	add	r0, r0, r5
    a3dc:	bl	4e6c <sas_read2@plt>
    a3e0:	and	r1, r0, #3840	; 0xf00
    a3e4:	mov	r2, #0
    a3e8:	cmp	r1, #256	; 0x100
    a3ec:	beq	a480 <sas7bdat_parse_meta_pages_pass1+0x15c>
    a3f0:	tst	r0, #36864	; 0x9000
    a3f4:	bne	a440 <sas7bdat_parse_meta_pages_pass1+0x11c>
    a3f8:	sub	r6, r6, r7
    a3fc:	mov	r5, r8
    a400:	ldr	r0, [r8, #120]	; 0x78
    a404:	add	r0, r0, r7
    a408:	ldr	r3, [sl, #12]
    a40c:	ldr	r2, [sl, #20]
    a410:	mov	r1, r6
    a414:	blx	r3
    a418:	cmp	r0, r6
    a41c:	bcc	a47c <sas7bdat_parse_meta_pages_pass1+0x158>
    a420:	ldr	r0, [fp, #-36]	; 0xffffffdc
    a424:	ldr	r1, [r0]
    a428:	ldr	r0, [r5, #120]	; 0x78
    a42c:	mov	r2, r5
    a430:	bl	ab50 <sas7bdat_parse_page_pass1>
    a434:	cmp	r0, #0
    a438:	mov	r2, #0
    a43c:	bne	a518 <sas7bdat_parse_meta_pages_pass1+0x1f4>
    a440:	ldr	r5, [fp, #-32]	; 0xffffffe0
    a444:	adds	r5, r5, #1
    a448:	adc	r9, r9, #0
    a44c:	ldr	r7, [sp, #36]	; 0x24
    a450:	ldrd	r0, [r7]
    a454:	subs	r0, r5, r0
    a458:	sbcs	r0, r9, r1
    a45c:	ldr	r6, [fp, #-36]	; 0xffffffdc
    a460:	mov	r4, r8
    a464:	bcc	a36c <sas7bdat_parse_meta_pages_pass1+0x48>
    a468:	b	a500 <sas7bdat_parse_meta_pages_pass1+0x1dc>
    a46c:	mov	r5, #0
    a470:	mov	r9, #0
    a474:	mov	r2, #0
    a478:	b	a500 <sas7bdat_parse_meta_pages_pass1+0x1dc>
    a47c:	mov	r2, #2
    a480:	ldr	r5, [fp, #-32]	; 0xffffffe0
    a484:	b	a500 <sas7bdat_parse_meta_pages_pass1+0x1dc>
    a488:	ldr	r0, [r4, #24]
    a48c:	mov	r2, #15
    a490:	cmp	r0, #0
    a494:	beq	a500 <sas7bdat_parse_meta_pages_pass1+0x1dc>
    a498:	ldr	r0, [sp, #40]	; 0x28
    a49c:	ldrd	r0, [r0]
    a4a0:	ldrd	r2, [r6]
    a4a4:	umull	r7, r6, r2, r5
    a4a8:	adds	r7, r7, r0
    a4ac:	mla	r6, r2, r9, r6
    a4b0:	mla	r6, r3, r5, r6
    a4b4:	adc	r6, r6, r1
    a4b8:	str	r7, [sp]
    a4bc:	str	r6, [sp, #4]
    a4c0:	add	ip, sp, #8
    a4c4:	stm	ip, {r0, r1, r5, r9}
    a4c8:	str	r2, [sp, #24]
    a4cc:	str	r3, [sp, #28]
    a4d0:	movw	r0, #481	; 0x1e1
    a4d4:	add	r7, r4, r0
    a4d8:	ldr	r2, [pc, #224]	; a5c0 <sas7bdat_parse_meta_pages_pass1+0x29c>
    a4dc:	add	r2, pc, r2
    a4e0:	mov	r0, r7
    a4e4:	mov	r1, #2048	; 0x800
    a4e8:	bl	4d04 <snprintf@plt>
    a4ec:	ldr	r2, [r4, #24]
    a4f0:	ldr	r1, [r4, #52]	; 0x34
    a4f4:	mov	r0, r7
    a4f8:	blx	r2
    a4fc:	mov	r2, #15
    a500:	ldr	r0, [sp, #32]
    a504:	cmp	r0, #0
    a508:	stmne	r0, {r5, r9}
    a50c:	mov	r0, r2
    a510:	sub	sp, fp, #28
    a514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a518:	mov	r7, r0
    a51c:	cmp	r0, #4
    a520:	beq	a5b0 <sas7bdat_parse_meta_pages_pass1+0x28c>
    a524:	ldr	r0, [r8, #24]
    a528:	cmp	r0, #0
    a52c:	ldr	r5, [fp, #-32]	; 0xffffffe0
    a530:	beq	a5b8 <sas7bdat_parse_meta_pages_pass1+0x294>
    a534:	ldr	r3, [sl, #8]
    a538:	ldr	r2, [sl, #20]
    a53c:	mov	r0, #0
    a540:	mov	r1, #1
    a544:	blx	r3
    a548:	asr	r1, r0, #31
    a54c:	subs	r2, r0, #1
    a550:	sbc	r1, r1, #0
    a554:	ldr	r3, [fp, #-36]	; 0xffffffdc
    a558:	ldr	r6, [r3]
    a55c:	ldr	r3, [r3, #4]
    a560:	subs	r6, r0, r6
    a564:	rsc	r0, r3, r0, asr #31
    a568:	stm	sp, {r5, r9}
    a56c:	str	r6, [sp, #8]
    a570:	str	r0, [sp, #12]
    a574:	str	r2, [sp, #16]
    a578:	str	r1, [sp, #20]
    a57c:	movw	r0, #481	; 0x1e1
    a580:	add	r6, r8, r0
    a584:	ldr	r2, [pc, #56]	; a5c4 <sas7bdat_parse_meta_pages_pass1+0x2a0>
    a588:	add	r2, pc, r2
    a58c:	mov	r0, r6
    a590:	mov	r1, #2048	; 0x800
    a594:	bl	4d04 <snprintf@plt>
    a598:	ldr	r2, [r8, #24]
    a59c:	ldr	r1, [r8, #52]	; 0x34
    a5a0:	mov	r0, r6
    a5a4:	blx	r2
    a5a8:	mov	r2, r7
    a5ac:	b	a500 <sas7bdat_parse_meta_pages_pass1+0x1dc>
    a5b0:	mov	r2, r7
    a5b4:	b	a480 <sas7bdat_parse_meta_pages_pass1+0x15c>
    a5b8:	mov	r2, r7
    a5bc:	b	a500 <sas7bdat_parse_meta_pages_pass1+0x1dc>
    a5c0:	.word	0x0001b493
    a5c4:	.word	0x0001b426

0000a5c8 <sas7bdat_parse_amd_pages_pass1>:
    a5c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a5cc:	add	fp, sp, #28
    a5d0:	sub	sp, sp, #68	; 0x44
    a5d4:	mov	r5, r2
    a5d8:	ldrd	r2, [r2, #104]	; 0x68
    a5dc:	subs	r7, r2, #1
    a5e0:	sbc	r9, r3, #0
    a5e4:	mov	r3, #0
    a5e8:	str	r0, [sp, #44]	; 0x2c
    a5ec:	subs	r0, r0, r7
    a5f0:	str	r1, [sp, #48]	; 0x30
    a5f4:	sbcs	r0, r1, r9
    a5f8:	bcs	a884 <sas7bdat_parse_amd_pages_pass1+0x2bc>
    a5fc:	ldr	r8, [r5, #56]	; 0x38
    a600:	add	sl, r5, #112	; 0x70
    a604:	add	r0, r5, #96	; 0x60
    a608:	str	r0, [sp, #40]	; 0x28
    a60c:	mov	r0, #0
    a610:	str	r0, [fp, #-40]	; 0xffffffd8
    a614:	mov	r0, #0
    a618:	str	r0, [fp, #-44]	; 0xffffffd4
    a61c:	str	sl, [sp, #36]	; 0x24
    a620:	ldr	r0, [sp, #40]	; 0x28
    a624:	ldr	r0, [r0]
    a628:	ldr	r1, [sl]
    a62c:	mla	r0, r1, r7, r0
    a630:	ldr	r3, [r8, #8]
    a634:	ldr	r2, [r8, #20]
    a638:	mov	r1, #0
    a63c:	blx	r3
    a640:	cmn	r0, #1
    a644:	beq	a778 <sas7bdat_parse_amd_pages_pass1+0x1b0>
    a648:	str	r7, [fp, #-32]	; 0xffffffe0
    a64c:	ldr	r1, [r5, #44]	; 0x2c
    a650:	ldr	r0, [r5, #120]	; 0x78
    a654:	cmp	r1, #0
    a658:	mov	r4, #32
    a65c:	movweq	r4, #16
    a660:	orr	r6, r4, #2
    a664:	ldr	r7, [sl]
    a668:	ldr	r3, [r8, #12]
    a66c:	ldr	r2, [r8, #20]
    a670:	mov	r1, r6
    a674:	blx	r3
    a678:	mov	r3, #2
    a67c:	cmp	r0, r6
    a680:	bcc	a884 <sas7bdat_parse_amd_pages_pass1+0x2bc>
    a684:	str	r9, [fp, #-36]	; 0xffffffdc
    a688:	ldr	r1, [r5, #60]	; 0x3c
    a68c:	mov	r9, r5
    a690:	ldr	r0, [r5, #120]	; 0x78
    a694:	add	r0, r0, r4
    a698:	bl	4e6c <sas_read2@plt>
    a69c:	and	r1, r0, #3840	; 0xf00
    a6a0:	cmp	r1, #256	; 0x100
    a6a4:	bne	a6cc <sas7bdat_parse_amd_pages_pass1+0x104>
    a6a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a6ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
    a6b0:	orrs	r0, r0, r1
    a6b4:	bne	a770 <sas7bdat_parse_amd_pages_pass1+0x1a8>
    a6b8:	mov	r0, #0
    a6bc:	str	r0, [fp, #-40]	; 0xffffffd8
    a6c0:	mov	r0, #0
    a6c4:	str	r0, [fp, #-44]	; 0xffffffd4
    a6c8:	b	a6d4 <sas7bdat_parse_amd_pages_pass1+0x10c>
    a6cc:	tst	r0, #36864	; 0x9000
    a6d0:	beq	a704 <sas7bdat_parse_amd_pages_pass1+0x13c>
    a6d4:	mov	r5, r9
    a6d8:	ldr	sl, [sp, #36]	; 0x24
    a6dc:	ldr	r9, [fp, #-36]	; 0xffffffdc
    a6e0:	ldr	r7, [fp, #-32]	; 0xffffffe0
    a6e4:	subs	r7, r7, #1
    a6e8:	sbc	r9, r9, #0
    a6ec:	ldr	r0, [sp, #44]	; 0x2c
    a6f0:	subs	r0, r0, r7
    a6f4:	ldr	r0, [sp, #48]	; 0x30
    a6f8:	sbcs	r0, r0, r9
    a6fc:	bcc	a620 <sas7bdat_parse_amd_pages_pass1+0x58>
    a700:	b	a770 <sas7bdat_parse_amd_pages_pass1+0x1a8>
    a704:	sub	r7, r7, r6
    a708:	mov	r5, r9
    a70c:	ldr	r0, [r9, #120]	; 0x78
    a710:	add	r0, r0, r6
    a714:	ldr	r3, [r8, #12]
    a718:	ldr	r2, [r8, #20]
    a71c:	mov	r1, r7
    a720:	blx	r3
    a724:	cmp	r0, r7
    a728:	ldr	r9, [fp, #-36]	; 0xffffffdc
    a72c:	mov	r3, #2
    a730:	ldr	r7, [fp, #-32]	; 0xffffffe0
    a734:	bcc	a884 <sas7bdat_parse_amd_pages_pass1+0x2bc>
    a738:	ldr	sl, [sp, #36]	; 0x24
    a73c:	ldr	r1, [sl]
    a740:	ldr	r0, [r5, #120]	; 0x78
    a744:	mov	r2, r5
    a748:	bl	ab50 <sas7bdat_parse_page_pass1>
    a74c:	cmp	r0, #0
    a750:	bne	a7f4 <sas7bdat_parse_amd_pages_pass1+0x22c>
    a754:	ldr	r0, [fp, #-40]	; 0xffffffd8
    a758:	adds	r0, r0, #1
    a75c:	str	r0, [fp, #-40]	; 0xffffffd8
    a760:	ldr	r0, [fp, #-44]	; 0xffffffd4
    a764:	adc	r0, r0, #0
    a768:	str	r0, [fp, #-44]	; 0xffffffd4
    a76c:	b	a6e4 <sas7bdat_parse_amd_pages_pass1+0x11c>
    a770:	mov	r3, #0
    a774:	b	a884 <sas7bdat_parse_amd_pages_pass1+0x2bc>
    a778:	ldr	r0, [r5, #24]
    a77c:	mov	r3, #15
    a780:	cmp	r0, #0
    a784:	beq	a884 <sas7bdat_parse_amd_pages_pass1+0x2bc>
    a788:	ldr	r0, [sp, #40]	; 0x28
    a78c:	ldrd	r0, [r0]
    a790:	ldrd	r2, [sl]
    a794:	umull	r6, r4, r2, r7
    a798:	adds	r6, r6, r0
    a79c:	mla	r4, r2, r9, r4
    a7a0:	mla	r4, r3, r7, r4
    a7a4:	adc	r4, r4, r1
    a7a8:	str	r6, [sp]
    a7ac:	str	r4, [sp, #4]
    a7b0:	add	ip, sp, #8
    a7b4:	stm	ip, {r0, r1, r7, r9}
    a7b8:	str	r2, [sp, #24]
    a7bc:	str	r3, [sp, #28]
    a7c0:	movw	r0, #481	; 0x1e1
    a7c4:	add	r6, r5, r0
    a7c8:	ldr	r2, [pc, #192]	; a890 <sas7bdat_parse_amd_pages_pass1+0x2c8>
    a7cc:	add	r2, pc, r2
    a7d0:	mov	r0, r6
    a7d4:	mov	r1, #2048	; 0x800
    a7d8:	bl	4d04 <snprintf@plt>
    a7dc:	ldr	r2, [r5, #24]
    a7e0:	ldr	r1, [r5, #52]	; 0x34
    a7e4:	mov	r0, r6
    a7e8:	blx	r2
    a7ec:	mov	r3, #15
    a7f0:	b	a884 <sas7bdat_parse_amd_pages_pass1+0x2bc>
    a7f4:	mov	r3, r0
    a7f8:	cmp	r0, #4
    a7fc:	ldrne	r0, [r5, #24]
    a800:	cmpne	r0, #0
    a804:	beq	a884 <sas7bdat_parse_amd_pages_pass1+0x2bc>
    a808:	ldr	r6, [r8, #8]
    a80c:	ldr	r2, [r8, #20]
    a810:	mov	r0, #0
    a814:	mov	r4, sl
    a818:	mov	sl, r3
    a81c:	mov	r1, #1
    a820:	blx	r6
    a824:	asr	r1, r0, #31
    a828:	subs	r2, r0, #1
    a82c:	sbc	r1, r1, #0
    a830:	ldr	r3, [r4, #4]
    a834:	ldr	r4, [r4]
    a838:	subs	r6, r0, r4
    a83c:	rsc	r0, r3, r0, asr #31
    a840:	stm	sp, {r7, r9}
    a844:	str	r6, [sp, #8]
    a848:	str	r0, [sp, #12]
    a84c:	str	r2, [sp, #16]
    a850:	str	r1, [sp, #20]
    a854:	movw	r0, #481	; 0x1e1
    a858:	add	r6, r5, r0
    a85c:	ldr	r2, [pc, #48]	; a894 <sas7bdat_parse_amd_pages_pass1+0x2cc>
    a860:	add	r2, pc, r2
    a864:	mov	r0, r6
    a868:	mov	r1, #2048	; 0x800
    a86c:	bl	4d04 <snprintf@plt>
    a870:	ldr	r2, [r5, #24]
    a874:	ldr	r1, [r5, #52]	; 0x34
    a878:	mov	r0, r6
    a87c:	blx	r2
    a880:	mov	r3, sl
    a884:	mov	r0, r3
    a888:	sub	sp, fp, #28
    a88c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a890:	.word	0x0001b1a3
    a894:	.word	0x0001b14e

0000a898 <sas7bdat_parse_all_pages_pass2>:
    a898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a89c:	add	fp, sp, #28
    a8a0:	sub	sp, sp, #28
    a8a4:	mov	r4, r0
    a8a8:	mov	sl, r0
    a8ac:	ldr	r0, [sl, #104]!	; 0x68
    a8b0:	ldr	r1, [sl, #4]
    a8b4:	orrs	r0, r0, r1
    a8b8:	beq	a948 <sas7bdat_parse_all_pages_pass2+0xb0>
    a8bc:	ldr	r9, [sl, #-48]	; 0xffffffd0
    a8c0:	add	r8, r4, #112	; 0x70
    a8c4:	mov	r6, #0
    a8c8:	mov	r7, #0
    a8cc:	mov	r0, r4
    a8d0:	bl	aa28 <sas7bdat_update_progress>
    a8d4:	cmp	r0, #0
    a8d8:	bne	a950 <sas7bdat_parse_all_pages_pass2+0xb8>
    a8dc:	ldr	r1, [r8]
    a8e0:	ldr	r0, [r4, #120]	; 0x78
    a8e4:	ldr	r3, [r9, #12]
    a8e8:	ldr	r2, [r9, #20]
    a8ec:	blx	r3
    a8f0:	ldrd	r2, [r8]
    a8f4:	subs	r1, r0, r2
    a8f8:	rscs	r0, r3, r0, asr #31
    a8fc:	bcc	a958 <sas7bdat_parse_all_pages_pass2+0xc0>
    a900:	ldr	r0, [r4, #120]	; 0x78
    a904:	mov	r1, r2
    a908:	mov	r2, r4
    a90c:	bl	b654 <sas7bdat_parse_page_pass2>
    a910:	cmp	r0, #0
    a914:	bne	a960 <sas7bdat_parse_all_pages_pass2+0xc8>
    a918:	ldr	r0, [r4, #76]	; 0x4c
    a91c:	ldr	r1, [r4, #84]	; 0x54
    a920:	mov	r5, #0
    a924:	cmp	r0, r1
    a928:	beq	a9e0 <sas7bdat_parse_all_pages_pass2+0x148>
    a92c:	adds	r6, r6, #1
    a930:	adc	r7, r7, #0
    a934:	ldrd	r0, [sl]
    a938:	subs	r0, r6, r0
    a93c:	sbcs	r0, r7, r1
    a940:	bcc	a8cc <sas7bdat_parse_all_pages_pass2+0x34>
    a944:	b	a9e0 <sas7bdat_parse_all_pages_pass2+0x148>
    a948:	mov	r5, #0
    a94c:	b	a9e0 <sas7bdat_parse_all_pages_pass2+0x148>
    a950:	mov	r5, r0
    a954:	b	a9e0 <sas7bdat_parse_all_pages_pass2+0x148>
    a958:	mov	r5, #2
    a95c:	b	a9e0 <sas7bdat_parse_all_pages_pass2+0x148>
    a960:	mov	r5, r0
    a964:	cmp	r0, #4
    a968:	ldrne	r0, [r4, #24]
    a96c:	cmpne	r0, #0
    a970:	beq	a9e0 <sas7bdat_parse_all_pages_pass2+0x148>
    a974:	ldr	r3, [r9, #8]
    a978:	ldr	r2, [r9, #20]
    a97c:	mov	r0, #0
    a980:	mov	r1, #1
    a984:	blx	r3
    a988:	asr	r1, r0, #31
    a98c:	subs	r2, r0, #1
    a990:	sbc	r1, r1, #0
    a994:	ldrd	r8, [r8]
    a998:	subs	r3, r0, r8
    a99c:	rsc	r0, r9, r0, asr #31
    a9a0:	stm	sp, {r6, r7}
    a9a4:	str	r3, [sp, #8]
    a9a8:	str	r0, [sp, #12]
    a9ac:	str	r2, [sp, #16]
    a9b0:	str	r1, [sp, #20]
    a9b4:	movw	r0, #481	; 0x1e1
    a9b8:	add	r6, r4, r0
    a9bc:	ldr	r2, [pc, #40]	; a9ec <sas7bdat_parse_all_pages_pass2+0x154>
    a9c0:	add	r2, pc, r2
    a9c4:	mov	r0, r6
    a9c8:	mov	r1, #2048	; 0x800
    a9cc:	bl	4d04 <snprintf@plt>
    a9d0:	ldr	r2, [r4, #24]
    a9d4:	ldr	r1, [r4, #52]	; 0x34
    a9d8:	mov	r0, r6
    a9dc:	blx	r2
    a9e0:	mov	r0, r5
    a9e4:	sub	sp, fp, #28
    a9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a9ec:	.word	0x0001afee

0000a9f0 <sas7bdat_submit_columns_if_needed>:
    a9f0:	push	{r4, sl, fp, lr}
    a9f4:	add	fp, sp, #8
    a9f8:	mov	r4, r0
    a9fc:	ldr	r2, [r0, #64]	; 0x40
    aa00:	mov	r0, #0
    aa04:	cmp	r2, #0
    aa08:	popne	{r4, sl, fp, pc}
    aa0c:	mov	r0, r4
    aa10:	bl	c0c0 <sas7bdat_submit_columns>
    aa14:	cmp	r0, #0
    aa18:	moveq	r0, #1
    aa1c:	streq	r0, [r4, #64]	; 0x40
    aa20:	moveq	r0, #0
    aa24:	pop	{r4, sl, fp, pc}

0000aa28 <sas7bdat_update_progress>:
    aa28:	push	{fp, lr}
    aa2c:	mov	fp, sp
    aa30:	ldr	r1, [r0, #28]
    aa34:	ldr	ip, [r0, #32]
    aa38:	ldr	r2, [r0, #52]	; 0x34
    aa3c:	ldr	r0, [r0, #56]	; 0x38
    aa40:	ldr	lr, [r0, #16]
    aa44:	ldr	r3, [r0, #20]
    aa48:	mov	r0, ip
    aa4c:	mov	ip, lr
    aa50:	pop	{fp, lr}
    aa54:	bx	ip

0000aa58 <sas7bdat_ctx_free>:
    aa58:	push	{r4, r5, fp, lr}
    aa5c:	add	fp, sp, #8
    aa60:	mov	r4, r0
    aa64:	ldr	r0, [r0, #160]	; 0xa0
    aa68:	cmp	r0, #0
    aa6c:	beq	aaac <sas7bdat_ctx_free+0x54>
    aa70:	ldr	r1, [r4, #152]	; 0x98
    aa74:	ldr	r0, [r4, #160]	; 0xa0
    aa78:	cmp	r1, #1
    aa7c:	blt	aaa0 <sas7bdat_ctx_free+0x48>
    aa80:	mov	r5, #0
    aa84:	ldr	r0, [r0, r5, lsl #2]
    aa88:	bl	4938 <free@plt>
    aa8c:	add	r5, r5, #1
    aa90:	ldr	r1, [r4, #152]	; 0x98
    aa94:	ldr	r0, [r4, #160]	; 0xa0
    aa98:	cmp	r5, r1
    aa9c:	blt	aa84 <sas7bdat_ctx_free+0x2c>
    aaa0:	bl	4938 <free@plt>
    aaa4:	ldr	r0, [r4, #156]	; 0x9c
    aaa8:	bl	4938 <free@plt>
    aaac:	ldr	r0, [r4, #196]	; 0xc4
    aab0:	cmp	r0, #0
    aab4:	beq	aaf4 <sas7bdat_ctx_free+0x9c>
    aab8:	ldr	r1, [r4, #80]	; 0x50
    aabc:	ldr	r0, [r4, #196]	; 0xc4
    aac0:	cmp	r1, #0
    aac4:	beq	aaf0 <sas7bdat_ctx_free+0x98>
    aac8:	mov	r5, #0
    aacc:	ldr	r0, [r0, r5, lsl #2]
    aad0:	cmp	r0, #0
    aad4:	beq	aadc <sas7bdat_ctx_free+0x84>
    aad8:	bl	4938 <free@plt>
    aadc:	add	r5, r5, #1
    aae0:	ldr	r1, [r4, #80]	; 0x50
    aae4:	ldr	r0, [r4, #196]	; 0xc4
    aae8:	cmp	r5, r1
    aaec:	bcc	aacc <sas7bdat_ctx_free+0x74>
    aaf0:	bl	4938 <free@plt>
    aaf4:	ldr	r0, [r4, #192]	; 0xc0
    aaf8:	cmp	r0, #0
    aafc:	beq	ab04 <sas7bdat_ctx_free+0xac>
    ab00:	bl	4938 <free@plt>
    ab04:	ldr	r0, [r4, #180]	; 0xb4
    ab08:	cmp	r0, #0
    ab0c:	beq	ab14 <sas7bdat_ctx_free+0xbc>
    ab10:	bl	4938 <free@plt>
    ab14:	ldr	r0, [r4, #120]	; 0x78
    ab18:	cmp	r0, #0
    ab1c:	beq	ab24 <sas7bdat_ctx_free+0xcc>
    ab20:	bl	4938 <free@plt>
    ab24:	ldr	r0, [r4, #124]	; 0x7c
    ab28:	cmp	r0, #0
    ab2c:	beq	ab34 <sas7bdat_ctx_free+0xdc>
    ab30:	bl	4938 <free@plt>
    ab34:	ldr	r0, [r4, #208]	; 0xd0
    ab38:	cmp	r0, #0
    ab3c:	beq	ab44 <sas7bdat_ctx_free+0xec>
    ab40:	bl	4848 <iconv_close@plt>
    ab44:	mov	r0, r4
    ab48:	pop	{r4, r5, fp, lr}
    ab4c:	b	4938 <free@plt>

0000ab50 <sas7bdat_parse_page_pass1>:
    ab50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ab54:	add	fp, sp, #28
    ab58:	sub	sp, sp, #4
    ab5c:	vpush	{d8-d9}
    ab60:	sub	sp, sp, #56	; 0x38
    ab64:	mov	r9, r2
    ab68:	mov	r4, r1
    ab6c:	mov	r6, r0
    ab70:	ldr	r1, [r2, #60]	; 0x3c
    ab74:	ldr	r0, [r2, #128]	; 0x80
    ab78:	add	r0, r6, r0
    ab7c:	sub	r0, r0, #4
    ab80:	bl	4e6c <sas_read2@plt>
    ab84:	mov	r7, r0
    ab88:	ldrd	r2, [r9, #128]	; 0x80
    ab8c:	ldr	r0, [r9, #144]	; 0x90
    ab90:	str	r0, [sp, #28]
    ab94:	mul	r0, r0, r7
    ab98:	adds	r1, r2, r0
    ab9c:	adc	r3, r3, r0, asr #31
    aba0:	mov	r0, #5
    aba4:	str	r4, [sp, #12]
    aba8:	subs	r1, r4, r1
    abac:	rscs	r1, r3, #0
    abb0:	bcc	ad0c <sas7bdat_parse_page_pass1+0x1bc>
    abb4:	cmp	r7, #0
    abb8:	beq	ad08 <sas7bdat_parse_page_pass1+0x1b8>
    abbc:	ldr	r0, [sp, #12]
    abc0:	add	r0, r6, r0
    abc4:	str	r0, [sp, #24]
    abc8:	add	r5, r6, r2
    abcc:	str	r6, [sp, #8]
    abd0:	add	r0, r6, #4
    abd4:	str	r0, [sp]
    abd8:	add	r0, sp, #32
    abdc:	add	r0, r0, #8
    abe0:	str	r0, [sp, #16]
    abe4:	add	r0, r9, #136	; 0x88
    abe8:	str	r0, [sp, #20]
    abec:	vmov.i32	q4, #0	; 0x00000000
    abf0:	mov	r8, #0
    abf4:	add	r2, sp, #32
    abf8:	mov	r0, r2
    abfc:	mov	r1, #20
    ac00:	vst1.64	{d8-d9}, [r0], r1
    ac04:	mov	r1, #0
    ac08:	str	r1, [r0]
    ac0c:	str	r1, [sp, #48]	; 0x30
    ac10:	ldr	r0, [sp, #24]
    ac14:	sub	r1, r0, r5
    ac18:	ldr	r0, [sp, #20]
    ac1c:	ldr	r6, [r0]
    ac20:	mov	r0, r5
    ac24:	mov	r3, r9
    ac28:	bl	ad24 <sas7bdat_parse_subheader_pointer>
    ac2c:	cmp	r0, #0
    ac30:	bne	ad0c <sas7bdat_parse_page_pass1+0x1bc>
    ac34:	ldr	r0, [sp, #16]
    ac38:	ldr	r4, [r0]
    ac3c:	ldr	r1, [r0, #4]
    ac40:	orrs	r0, r4, r1
    ac44:	ldrbne	sl, [sp, #48]	; 0x30
    ac48:	cmpne	sl, #1
    ac4c:	bne	ac68 <sas7bdat_parse_page_pass1+0x118>
    ac50:	ldr	r0, [sp, #28]
    ac54:	add	r5, r5, r0
    ac58:	add	r8, r8, #1
    ac5c:	cmp	r8, r7
    ac60:	bcc	abf4 <sas7bdat_parse_page_pass1+0xa4>
    ac64:	b	ad08 <sas7bdat_parse_page_pass1+0x1b8>
    ac68:	add	r0, sp, #32
    ac6c:	ldr	r1, [sp, #12]
    ac70:	mov	r2, r7
    ac74:	mov	r3, r9
    ac78:	bl	add4 <sas7bdat_validate_subheader_pointer>
    ac7c:	cmp	r0, #0
    ac80:	bne	ad0c <sas7bdat_parse_page_pass1+0x1bc>
    ac84:	cmp	sl, #4
    ac88:	beq	ac50 <sas7bdat_parse_page_pass1+0x100>
    ac8c:	cmp	sl, #0
    ac90:	bne	ad1c <sas7bdat_parse_page_pass1+0x1cc>
    ac94:	ldr	r1, [sp, #32]
    ac98:	ldr	r0, [sp, #8]
    ac9c:	str	r1, [sp, #4]
    aca0:	add	sl, r0, r1
    aca4:	ldr	r1, [r9, #60]	; 0x3c
    aca8:	mov	r0, sl
    acac:	bl	4e90 <sas_read4@plt>
    acb0:	cmp	r6, #8
    acb4:	bne	acc8 <sas7bdat_parse_page_pass1+0x178>
    acb8:	cmn	r0, #1
    acbc:	ldreq	r1, [r9, #40]	; 0x28
    acc0:	cmpeq	r1, #0
    acc4:	beq	acd4 <sas7bdat_parse_page_pass1+0x184>
    acc8:	cmn	r0, #3
    accc:	bne	ac50 <sas7bdat_parse_page_pass1+0x100>
    acd0:	b	acec <sas7bdat_parse_page_pass1+0x19c>
    acd4:	ldm	sp, {r0, r1}
    acd8:	add	r0, r0, r1
    acdc:	ldr	r1, [r9, #60]	; 0x3c
    ace0:	bl	4e90 <sas_read4@plt>
    ace4:	cmn	r0, #3
    ace8:	bne	ac50 <sas7bdat_parse_page_pass1+0x100>
    acec:	mov	r1, sl
    acf0:	mov	r2, r4
    acf4:	mov	r3, r9
    acf8:	bl	aea0 <sas7bdat_parse_subheader>
    acfc:	cmp	r0, #0
    ad00:	beq	ac50 <sas7bdat_parse_page_pass1+0x100>
    ad04:	b	ad0c <sas7bdat_parse_page_pass1+0x1bc>
    ad08:	mov	r0, #0
    ad0c:	sub	sp, fp, #48	; 0x30
    ad10:	vpop	{d8-d9}
    ad14:	add	sp, sp, #4
    ad18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ad1c:	mov	r0, #6
    ad20:	b	ad0c <sas7bdat_parse_page_pass1+0x1bc>

0000ad24 <sas7bdat_parse_subheader_pointer>:
    ad24:	push	{r4, r5, r6, r7, fp, lr}
    ad28:	add	fp, sp, #16
    ad2c:	mov	r6, r3
    ad30:	mov	r4, r2
    ad34:	mov	r5, r0
    ad38:	ldr	r0, [r3, #44]	; 0x2c
    ad3c:	mov	r7, #5
    ad40:	cmp	r0, #0
    ad44:	beq	ad8c <sas7bdat_parse_subheader_pointer+0x68>
    ad48:	cmp	r1, #18
    ad4c:	bcc	adcc <sas7bdat_parse_subheader_pointer+0xa8>
    ad50:	ldr	r1, [r6, #60]	; 0x3c
    ad54:	mov	r0, r5
    ad58:	bl	4e60 <sas_read8@plt>
    ad5c:	strd	r0, [r4]
    ad60:	ldr	r1, [r6, #60]	; 0x3c
    ad64:	add	r0, r5, #8
    ad68:	bl	4e60 <sas_read8@plt>
    ad6c:	strd	r0, [r4, #8]
    ad70:	ldrb	r0, [r5, #16]
    ad74:	strb	r0, [r4, #16]
    ad78:	ldrb	r0, [r5, #17]
    ad7c:	strb	r0, [r4, #17]
    ad80:	mov	r7, #0
    ad84:	mov	r0, r7
    ad88:	pop	{r4, r5, r6, r7, fp, pc}
    ad8c:	cmp	r1, #10
    ad90:	bcc	adcc <sas7bdat_parse_subheader_pointer+0xa8>
    ad94:	ldr	r1, [r6, #60]	; 0x3c
    ad98:	mov	r0, r5
    ad9c:	bl	4e90 <sas_read4@plt>
    ada0:	mov	r7, #0
    ada4:	stm	r4, {r0, r7}
    ada8:	ldr	r1, [r6, #60]	; 0x3c
    adac:	add	r0, r5, #4
    adb0:	bl	4e90 <sas_read4@plt>
    adb4:	mov	r6, r0
    adb8:	strd	r6, [r4, #8]
    adbc:	ldrb	r0, [r5, #8]
    adc0:	strb	r0, [r4, #16]
    adc4:	ldrb	r0, [r5, #9]
    adc8:	strb	r0, [r4, #17]
    adcc:	mov	r0, r7
    add0:	pop	{r4, r5, r6, r7, fp, pc}

0000add4 <sas7bdat_validate_subheader_pointer>:
    add4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    add8:	add	fp, sp, #28
    addc:	sub	sp, sp, #4
    ade0:	mov	ip, r0
    ade4:	ldr	r6, [r0]
    ade8:	ldr	r5, [r0, #4]
    adec:	mov	r0, #5
    adf0:	subs	r7, r1, r6
    adf4:	rscs	r7, r5, #0
    adf8:	bcc	ae98 <sas7bdat_validate_subheader_pointer+0xc4>
    adfc:	ldr	sl, [ip, #8]
    ae00:	ldr	r9, [ip, #12]
    ae04:	adds	r8, sl, r6
    ae08:	adc	lr, r9, r5
    ae0c:	subs	r7, r1, sl
    ae10:	rscs	r7, r9, #0
    ae14:	bcc	ae98 <sas7bdat_validate_subheader_pointer+0xc4>
    ae18:	subs	r7, r1, r8
    ae1c:	rscs	r7, lr, #0
    ae20:	bcc	ae98 <sas7bdat_validate_subheader_pointer+0xc4>
    ae24:	ldr	r8, [r3, #128]	; 0x80
    ae28:	ldr	r7, [r3, #132]	; 0x84
    ae2c:	str	r7, [sp]
    ae30:	ldr	r4, [r3, #144]	; 0x90
    ae34:	ldr	r7, [r3, #148]	; 0x94
    ae38:	umull	r4, lr, r4, r2
    ae3c:	mla	r2, r7, r2, lr
    ae40:	adds	r7, r4, r8
    ae44:	ldr	r4, [sp]
    ae48:	adc	r2, r2, r4
    ae4c:	subs	r7, r6, r7
    ae50:	sbcs	r2, r5, r2
    ae54:	bcc	ae98 <sas7bdat_validate_subheader_pointer+0xc4>
    ae58:	ldrb	r2, [ip, #16]
    ae5c:	cmp	r2, #0
    ae60:	beq	ae70 <sas7bdat_validate_subheader_pointer+0x9c>
    ae64:	mov	r0, #0
    ae68:	sub	sp, fp, #28
    ae6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ae70:	ldr	r4, [r3, #136]	; 0x88
    ae74:	ldr	r7, [r3, #140]	; 0x8c
    ae78:	adds	r2, r4, r6
    ae7c:	adc	r3, r7, r5
    ae80:	subs	r6, sl, r4
    ae84:	sbcs	r7, r9, r7
    ae88:	bcc	ae98 <sas7bdat_validate_subheader_pointer+0xc4>
    ae8c:	subs	r1, r1, r2
    ae90:	rscs	r1, r3, #0
    ae94:	movcs	r0, #0
    ae98:	sub	sp, fp, #28
    ae9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000aea0 <sas7bdat_parse_subheader>:
    aea0:	push	{r4, r5, fp, lr}
    aea4:	add	fp, sp, #8
    aea8:	ldrd	r4, [r3, #136]	; 0x88
    aeac:	adds	r4, r4, #2
    aeb0:	adc	r5, r5, #0
    aeb4:	mov	ip, #5
    aeb8:	subs	r4, r2, r4
    aebc:	rscs	r5, r5, #0
    aec0:	bcs	aecc <sas7bdat_parse_subheader+0x2c>
    aec4:	mov	r0, ip
    aec8:	pop	{r4, r5, fp, pc}
    aecc:	cmn	r0, #1024	; 0x400
    aed0:	bge	af18 <sas7bdat_parse_subheader+0x78>
    aed4:	movw	r5, #63222	; 0xf6f6
    aed8:	movt	r5, #63222	; 0xf6f6
    aedc:	cmp	r0, r5
    aee0:	beq	af58 <sas7bdat_parse_subheader+0xb8>
    aee4:	movw	r5, #63479	; 0xf7f7
    aee8:	movt	r5, #63479	; 0xf7f7
    aeec:	cmp	r0, r5
    aef0:	beq	af6c <sas7bdat_parse_subheader+0xcc>
    aef4:	movw	r5, #64510	; 0xfbfe
    aef8:	movt	r5, #65535	; 0xffff
    aefc:	cmp	r0, r5
    af00:	bne	af88 <sas7bdat_parse_subheader+0xe8>
    af04:	mov	r0, r1
    af08:	mov	r1, r2
    af0c:	mov	r2, r3
    af10:	pop	{r4, r5, fp, lr}
    af14:	b	b4bc <sas7bdat_parse_column_format_subheader>
    af18:	mov	ip, #0
    af1c:	add	lr, r0, #4
    af20:	cmp	lr, #3
    af24:	bhi	af80 <sas7bdat_parse_subheader+0xe0>
    af28:	add	r0, pc, #4
    af2c:	ldr	r5, [r0, lr, lsl #2]
    af30:	add	pc, r0, r5
    af34:	.word	0x00000010
    af38:	.word	0x00000068
    af3c:	.word	0xffffff90
    af40:	.word	0x0000007c
    af44:	mov	r0, r1
    af48:	mov	r1, r2
    af4c:	mov	r2, r3
    af50:	pop	{r4, r5, fp, lr}
    af54:	b	b358 <sas7bdat_parse_column_attributes_subheader>
    af58:	mov	r0, r1
    af5c:	mov	r1, r2
    af60:	mov	r2, r3
    af64:	pop	{r4, r5, fp, lr}
    af68:	b	b0d8 <sas7bdat_parse_column_size_subheader>
    af6c:	mov	r0, r1
    af70:	mov	r1, r2
    af74:	mov	r2, r3
    af78:	pop	{r4, r5, fp, lr}
    af7c:	b	afc4 <sas7bdat_parse_row_size_subheader>
    af80:	cmn	r0, #1024	; 0x400
    af84:	beq	aec4 <sas7bdat_parse_subheader+0x24>
    af88:	mov	r1, #5
    af8c:	cmn	r0, #9
    af90:	movwhi	r1, #0
    af94:	mov	r0, r1
    af98:	pop	{r4, r5, fp, pc}
    af9c:	mov	r0, r1
    afa0:	mov	r1, r2
    afa4:	mov	r2, r3
    afa8:	pop	{r4, r5, fp, lr}
    afac:	b	b154 <sas7bdat_parse_column_text_subheader>
    afb0:	mov	r0, r1
    afb4:	mov	r1, r2
    afb8:	mov	r2, r3
    afbc:	pop	{r4, r5, fp, lr}
    afc0:	b	b260 <sas7bdat_parse_column_name_subheader>

0000afc4 <sas7bdat_parse_row_size_subheader>:
    afc4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    afc8:	add	fp, sp, #24
    afcc:	mov	r4, r2
    afd0:	mov	r7, r0
    afd4:	ldr	r2, [r2, #44]	; 0x2c
    afd8:	mov	r3, #64	; 0x40
    afdc:	cmp	r2, #0
    afe0:	movwne	r3, #128	; 0x80
    afe4:	mov	r0, #5
    afe8:	cmp	r3, r1
    afec:	pophi	{r4, r5, r6, r7, r8, sl, fp, pc}
    aff0:	cmp	r2, #0
    aff4:	beq	b030 <sas7bdat_parse_row_size_subheader+0x6c>
    aff8:	ldr	r1, [r4, #60]	; 0x3c
    affc:	add	r0, r7, #40	; 0x28
    b000:	bl	4e60 <sas_read8@plt>
    b004:	mov	r6, r0
    b008:	ldr	r1, [r4, #60]	; 0x3c
    b00c:	add	r0, r7, #48	; 0x30
    b010:	bl	4e60 <sas_read8@plt>
    b014:	mov	r5, r0
    b018:	mov	r8, r1
    b01c:	ldr	r1, [r4, #60]	; 0x3c
    b020:	add	r0, r7, #120	; 0x78
    b024:	bl	4e60 <sas_read8@plt>
    b028:	mov	r7, r0
    b02c:	b	b064 <sas7bdat_parse_row_size_subheader+0xa0>
    b030:	ldr	r1, [r4, #60]	; 0x3c
    b034:	add	r0, r7, #20
    b038:	bl	4e90 <sas_read4@plt>
    b03c:	mov	r6, r0
    b040:	ldr	r1, [r4, #60]	; 0x3c
    b044:	add	r0, r7, #24
    b048:	bl	4e90 <sas_read4@plt>
    b04c:	mov	r5, r0
    b050:	ldr	r1, [r4, #60]	; 0x3c
    b054:	add	r0, r7, #60	; 0x3c
    b058:	bl	4e90 <sas_read4@plt>
    b05c:	mov	r7, r0
    b060:	mov	r8, #0
    b064:	str	r6, [r4, #68]	; 0x44
    b068:	ldr	r0, [r4, #124]	; 0x7c
    b06c:	mov	r1, r6
    b070:	bl	4d70 <readstat_realloc@plt>
    b074:	str	r0, [r4, #124]	; 0x7c
    b078:	cmp	r0, #0
    b07c:	moveq	r0, #3
    b080:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    b084:	str	r7, [r4, #72]	; 0x48
    b088:	ldr	r0, [r4, #88]	; 0x58
    b08c:	subs	r1, r0, r5
    b090:	rscs	r1, r8, #0
    b094:	bcs	b0a4 <sas7bdat_parse_row_size_subheader+0xe0>
    b098:	subs	r1, r5, r0
    b09c:	sbc	r2, r8, #0
    b0a0:	b	b0b0 <sas7bdat_parse_row_size_subheader+0xec>
    b0a4:	str	r5, [r4, #88]	; 0x58
    b0a8:	mov	r1, #0
    b0ac:	mov	r2, #0
    b0b0:	ldr	r3, [r4, #84]	; 0x54
    b0b4:	mov	r0, #0
    b0b8:	cmp	r3, #0
    b0bc:	beq	b0d0 <sas7bdat_parse_row_size_subheader+0x10c>
    b0c0:	subs	r3, r1, r3
    b0c4:	sbcs	r2, r2, #0
    b0c8:	strcc	r1, [r4, #84]	; 0x54
    b0cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    b0d0:	str	r1, [r4, #84]	; 0x54
    b0d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000b0d8 <sas7bdat_parse_column_size_subheader>:
    b0d8:	push	{r4, sl, fp, lr}
    b0dc:	add	fp, sp, #8
    b0e0:	mov	r4, r2
    b0e4:	ldr	r2, [r2, #80]	; 0x50
    b0e8:	cmp	r2, #0
    b0ec:	bne	b114 <sas7bdat_parse_column_size_subheader+0x3c>
    b0f0:	ldr	r2, [r4, #64]	; 0x40
    b0f4:	cmp	r2, #0
    b0f8:	bne	b114 <sas7bdat_parse_column_size_subheader+0x3c>
    b0fc:	ldr	r2, [r4, #44]	; 0x2c
    b100:	mov	r3, #8
    b104:	cmp	r2, #0
    b108:	movwne	r3, #16
    b10c:	cmp	r3, r1
    b110:	bls	b11c <sas7bdat_parse_column_size_subheader+0x44>
    b114:	mov	r0, #5
    b118:	pop	{r4, sl, fp, pc}
    b11c:	cmp	r2, #0
    b120:	beq	b134 <sas7bdat_parse_column_size_subheader+0x5c>
    b124:	ldr	r1, [r4, #60]	; 0x3c
    b128:	add	r0, r0, #8
    b12c:	bl	4e60 <sas_read8@plt>
    b130:	b	b140 <sas7bdat_parse_column_size_subheader+0x68>
    b134:	ldr	r1, [r4, #60]	; 0x3c
    b138:	add	r0, r0, #4
    b13c:	bl	4e90 <sas_read4@plt>
    b140:	mov	r1, r0
    b144:	str	r0, [r4, #80]	; 0x50
    b148:	mov	r0, r4
    b14c:	pop	{r4, sl, fp, lr}
    b150:	b	b59c <sas7bdat_realloc_col_info>

0000b154 <sas7bdat_parse_column_text_subheader>:
    b154:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b158:	add	fp, sp, #24
    b15c:	mov	r4, r2
    b160:	mov	r9, r1
    b164:	ldr	r1, [r2, #60]	; 0x3c
    b168:	ldr	r5, [r2, #136]	; 0x88
    b16c:	add	r8, r0, r5
    b170:	mov	r0, r8
    b174:	bl	4e6c <sas_read2@plt>
    b178:	mov	r7, r0
    b17c:	mov	r0, r9
    b180:	mov	r1, r5
    b184:	bl	4e54 <sas_subheader_remainder@plt>
    b188:	mov	r6, #5
    b18c:	cmp	r0, r7
    b190:	bne	b1dc <sas7bdat_parse_column_text_subheader+0x88>
    b194:	ldr	r1, [r4, #152]	; 0x98
    b198:	ldr	r0, [r4, #160]	; 0xa0
    b19c:	add	r1, r1, #1
    b1a0:	str	r1, [r4, #152]	; 0x98
    b1a4:	lsl	r1, r1, #2
    b1a8:	bl	4d70 <readstat_realloc@plt>
    b1ac:	str	r0, [r4, #160]	; 0xa0
    b1b0:	ldr	r0, [r4, #152]	; 0x98
    b1b4:	ldr	r3, [r4, #156]	; 0x9c
    b1b8:	lsl	r1, r0, #2
    b1bc:	mov	r0, r3
    b1c0:	bl	4d70 <readstat_realloc@plt>
    b1c4:	str	r0, [r4, #156]	; 0x9c
    b1c8:	mov	r6, #3
    b1cc:	cmp	r0, #0
    b1d0:	ldrne	r0, [r4, #160]	; 0xa0
    b1d4:	cmpne	r0, #0
    b1d8:	bne	b1e4 <sas7bdat_parse_column_text_subheader+0x90>
    b1dc:	mov	r0, r6
    b1e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b1e4:	sub	r5, r9, r5
    b1e8:	mov	r0, r5
    b1ec:	bl	4cb0 <readstat_malloc@plt>
    b1f0:	cmp	r0, #0
    b1f4:	beq	b1dc <sas7bdat_parse_column_text_subheader+0x88>
    b1f8:	mov	r7, r0
    b1fc:	mov	r1, r8
    b200:	mov	r2, r5
    b204:	bl	4998 <memcpy@plt>
    b208:	ldrd	r0, [r4, #152]	; 0x98
    b20c:	add	r0, r1, r0, lsl #2
    b210:	str	r5, [r0, #-4]
    b214:	ldr	r0, [r4, #152]	; 0x98
    b218:	ldr	r1, [r4, #160]	; 0xa0
    b21c:	add	r0, r1, r0, lsl #2
    b220:	str	r7, [r0, #-4]
    b224:	mov	r6, #0
    b228:	cmp	r5, #21
    b22c:	bcc	b1dc <sas7bdat_parse_column_text_subheader+0x88>
    b230:	add	r0, r7, #12
    b234:	ldr	r1, [pc, #32]	; b25c <sas7bdat_parse_column_text_subheader+0x108>
    b238:	add	r1, pc, r1
    b23c:	mov	r2, #8
    b240:	bl	4f98 <strncmp@plt>
    b244:	cmp	r0, #0
    b248:	ldrbeq	r0, [r4, #2529]	; 0x9e1
    b24c:	orreq	r0, r0, #1
    b250:	strbeq	r0, [r4, #2529]	; 0x9e1
    b254:	mov	r0, r6
    b258:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b25c:	.word	0x0001a7a9

0000b260 <sas7bdat_parse_column_name_subheader>:
    b260:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b264:	add	fp, sp, #28
    b268:	sub	sp, sp, #12
    b26c:	mov	r8, r2
    b270:	mov	sl, r1
    b274:	ldr	r2, [r2, #44]	; 0x2c
    b278:	ldr	r1, [r8, #60]	; 0x3c
    b27c:	ldr	r5, [r8, #136]	; 0x88
    b280:	add	r4, r0, r5
    b284:	mvn	r7, #27
    b288:	cmp	r2, #0
    b28c:	mvneq	r7, #19
    b290:	mov	r0, r4
    b294:	bl	4e6c <sas_read2@plt>
    b298:	mov	r6, r0
    b29c:	mov	r0, sl
    b2a0:	mov	r1, r5
    b2a4:	bl	4e54 <sas_subheader_remainder@plt>
    b2a8:	mov	r9, #5
    b2ac:	cmp	r0, r6
    b2b0:	bne	b34c <sas7bdat_parse_column_name_subheader+0xec>
    b2b4:	add	r0, r7, sl
    b2b8:	lsr	r5, r0, #3
    b2bc:	ldr	r0, [r8, #164]	; 0xa4
    b2c0:	add	r1, r0, r5
    b2c4:	str	r1, [r8, #164]	; 0xa4
    b2c8:	mov	r0, r8
    b2cc:	bl	b59c <sas7bdat_realloc_col_info>
    b2d0:	mov	r9, r0
    b2d4:	cmp	r0, #0
    b2d8:	bne	b34c <sas7bdat_parse_column_name_subheader+0xec>
    b2dc:	cmp	r5, #0
    b2e0:	beq	b348 <sas7bdat_parse_column_name_subheader+0xe8>
    b2e4:	add	r6, r4, #8
    b2e8:	ldr	r0, [r8, #164]	; 0xa4
    b2ec:	sub	r7, r0, r5
    b2f0:	add	r1, r5, r5, lsl #2
    b2f4:	add	r0, r0, r0, lsl #2
    b2f8:	lsl	r0, r0, #3
    b2fc:	sub	r5, r0, r1, lsl #3
    b300:	add	sl, sp, #4
    b304:	ldr	r4, [r8, #192]	; 0xc0
    b308:	mov	r0, sl
    b30c:	mov	r1, r6
    b310:	mov	r2, r8
    b314:	bl	b60c <sas7bdat_parse_text_ref>
    b318:	ldr	r0, [sp, #4]
    b31c:	str	r0, [r4, r5]
    b320:	add	r0, r4, r5
    b324:	ldrh	r1, [sp, #8]
    b328:	strh	r1, [r0, #4]
    b32c:	add	r5, r5, #40	; 0x28
    b330:	add	r7, r7, #1
    b334:	add	r6, r6, #8
    b338:	ldr	r0, [r8, #164]	; 0xa4
    b33c:	cmp	r7, r0
    b340:	blt	b304 <sas7bdat_parse_column_name_subheader+0xa4>
    b344:	b	b34c <sas7bdat_parse_column_name_subheader+0xec>
    b348:	mov	r9, #0
    b34c:	mov	r0, r9
    b350:	sub	sp, fp, #28
    b354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000b358 <sas7bdat_parse_column_attributes_subheader>:
    b358:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b35c:	add	fp, sp, #24
    b360:	mov	r4, r2
    b364:	mov	r6, r1
    b368:	ldr	r1, [r2, #44]	; 0x2c
    b36c:	ldr	r7, [r2, #136]	; 0x88
    b370:	cmp	r1, #0
    b374:	beq	b384 <sas7bdat_parse_column_attributes_subheader+0x2c>
    b378:	sub	r1, r6, #28
    b37c:	lsr	r9, r1, #4
    b380:	b	b398 <sas7bdat_parse_column_attributes_subheader+0x40>
    b384:	sub	r1, r6, #20
    b388:	movw	r2, #43691	; 0xaaab
    b38c:	movt	r2, #43690	; 0xaaaa
    b390:	umull	r1, r2, r1, r2
    b394:	lsr	r9, r2, #3
    b398:	add	r8, r0, r7
    b39c:	ldr	r1, [r4, #60]	; 0x3c
    b3a0:	mov	r0, r8
    b3a4:	bl	4e6c <sas_read2@plt>
    b3a8:	mov	r5, r0
    b3ac:	mov	r0, r6
    b3b0:	mov	r1, r7
    b3b4:	bl	4e54 <sas_subheader_remainder@plt>
    b3b8:	mov	r1, r0
    b3bc:	mov	r0, #5
    b3c0:	cmp	r1, r5
    b3c4:	bne	b3e4 <sas7bdat_parse_column_attributes_subheader+0x8c>
    b3c8:	ldr	r0, [r4, #168]	; 0xa8
    b3cc:	add	r1, r0, r9
    b3d0:	str	r1, [r4, #168]	; 0xa8
    b3d4:	mov	r0, r4
    b3d8:	bl	b59c <sas7bdat_realloc_col_info>
    b3dc:	cmp	r0, #0
    b3e0:	beq	b3e8 <sas7bdat_parse_column_attributes_subheader+0x90>
    b3e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b3e8:	cmp	r9, #0
    b3ec:	beq	b4b4 <sas7bdat_parse_column_attributes_subheader+0x15c>
    b3f0:	add	r5, r8, #8
    b3f4:	ldr	r0, [r4, #168]	; 0xa8
    b3f8:	sub	r6, r0, r9
    b3fc:	add	r1, r9, r9, lsl #2
    b400:	add	r0, r0, r0, lsl #2
    b404:	lsl	r0, r0, #3
    b408:	sub	r7, r0, r1, lsl #3
    b40c:	ldr	r0, [r4, #44]	; 0x2c
    b410:	ldr	r1, [r4, #60]	; 0x3c
    b414:	cmp	r0, #0
    b418:	beq	b428 <sas7bdat_parse_column_attributes_subheader+0xd0>
    b41c:	mov	r0, r5
    b420:	bl	4e60 <sas_read8@plt>
    b424:	b	b434 <sas7bdat_parse_column_attributes_subheader+0xdc>
    b428:	mov	r0, r5
    b42c:	bl	4e90 <sas_read4@plt>
    b430:	mov	r1, #0
    b434:	ldr	r2, [r4, #192]	; 0xc0
    b438:	add	r2, r2, r7
    b43c:	strd	r0, [r2, #24]
    b440:	ldr	r0, [r4, #44]	; 0x2c
    b444:	ldr	r1, [r4, #60]	; 0x3c
    b448:	cmp	r0, #0
    b44c:	mov	r0, #8
    b450:	movweq	r0, #4
    b454:	add	r5, r5, r0
    b458:	mov	r0, r5
    b45c:	bl	4e90 <sas_read4@plt>
    b460:	ldr	r1, [r4, #192]	; 0xc0
    b464:	add	r1, r1, r7
    b468:	str	r0, [r1, #32]
    b46c:	ldr	r2, [r4, #176]	; 0xb0
    b470:	cmp	r0, r2
    b474:	strhi	r0, [r4, #176]	; 0xb0
    b478:	ldrb	r2, [r5, #6]
    b47c:	mov	r0, #5
    b480:	cmp	r2, #1
    b484:	beq	b494 <sas7bdat_parse_column_attributes_subheader+0x13c>
    b488:	cmp	r2, #2
    b48c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
    b490:	mov	r0, #0
    b494:	str	r6, [r1, #20]
    b498:	str	r0, [r1, #36]	; 0x24
    b49c:	add	r5, r5, #8
    b4a0:	add	r7, r7, #40	; 0x28
    b4a4:	add	r6, r6, #1
    b4a8:	ldr	r0, [r4, #168]	; 0xa8
    b4ac:	cmp	r6, r0
    b4b0:	blt	b40c <sas7bdat_parse_column_attributes_subheader+0xb4>
    b4b4:	mov	r0, #0
    b4b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000b4bc <sas7bdat_parse_column_format_subheader>:
    b4bc:	push	{r4, r5, r6, r7, fp, lr}
    b4c0:	add	fp, sp, #16
    b4c4:	sub	sp, sp, #16
    b4c8:	mov	r4, r2
    b4cc:	mov	r5, r0
    b4d0:	ldr	r0, [r2, #44]	; 0x2c
    b4d4:	mov	r2, #58	; 0x3a
    b4d8:	cmp	r0, #0
    b4dc:	movweq	r2, #46	; 0x2e
    b4e0:	mov	r0, #5
    b4e4:	cmp	r2, r1
    b4e8:	bhi	b508 <sas7bdat_parse_column_format_subheader+0x4c>
    b4ec:	ldr	r0, [r4, #172]	; 0xac
    b4f0:	add	r1, r0, #1
    b4f4:	str	r1, [r4, #172]	; 0xac
    b4f8:	mov	r0, r4
    b4fc:	bl	b59c <sas7bdat_realloc_col_info>
    b500:	cmp	r0, #0
    b504:	beq	b510 <sas7bdat_parse_column_format_subheader+0x54>
    b508:	sub	sp, fp, #16
    b50c:	pop	{r4, r5, r6, r7, fp, pc}
    b510:	ldr	r6, [r4, #172]	; 0xac
    b514:	ldr	r7, [r4, #192]	; 0xc0
    b518:	ldr	r0, [r4, #44]	; 0x2c
    b51c:	mov	r1, #46	; 0x2e
    b520:	cmp	r0, #0
    b524:	movweq	r1, #34	; 0x22
    b528:	add	r1, r5, r1
    b52c:	add	r0, sp, #8
    b530:	mov	r2, r4
    b534:	bl	b60c <sas7bdat_parse_text_ref>
    b538:	add	r0, r6, r6, lsl #2
    b53c:	add	r0, r7, r0, lsl #3
    b540:	ldrh	r1, [sp, #12]
    b544:	strh	r1, [r0, #-30]	; 0xffffffe2
    b548:	ldr	r1, [sp, #8]
    b54c:	str	r1, [r0, #-34]	; 0xffffffde
    b550:	ldr	r6, [r4, #172]	; 0xac
    b554:	ldr	r7, [r4, #192]	; 0xc0
    b558:	ldr	r0, [r4, #44]	; 0x2c
    b55c:	mov	r1, #52	; 0x34
    b560:	cmp	r0, #0
    b564:	movweq	r1, #40	; 0x28
    b568:	add	r1, r5, r1
    b56c:	mov	r0, sp
    b570:	mov	r2, r4
    b574:	bl	b60c <sas7bdat_parse_text_ref>
    b578:	add	r0, r6, r6, lsl #2
    b57c:	add	r0, r7, r0, lsl #3
    b580:	ldrh	r1, [sp, #4]
    b584:	strh	r1, [r0, #-24]	; 0xffffffe8
    b588:	ldr	r1, [sp]
    b58c:	str	r1, [r0, #-28]	; 0xffffffe4
    b590:	mov	r0, #0
    b594:	sub	sp, fp, #16
    b598:	pop	{r4, r5, r6, r7, fp, pc}

0000b59c <sas7bdat_realloc_col_info>:
    b59c:	push	{r4, r5, r6, r7, fp, lr}
    b5a0:	add	fp, sp, #16
    b5a4:	ldr	r7, [r0, #188]	; 0xbc
    b5a8:	mov	r6, #0
    b5ac:	cmp	r7, r1
    b5b0:	bcs	b604 <sas7bdat_realloc_col_info+0x68>
    b5b4:	mov	r4, r1
    b5b8:	mov	r5, r0
    b5bc:	str	r1, [r0, #188]	; 0xbc
    b5c0:	ldr	r0, [r0, #192]	; 0xc0
    b5c4:	add	r1, r1, r1, lsl #2
    b5c8:	lsl	r1, r1, #3
    b5cc:	bl	4d70 <readstat_realloc@plt>
    b5d0:	str	r0, [r5, #192]	; 0xc0
    b5d4:	cmp	r0, #0
    b5d8:	moveq	r6, #3
    b5dc:	moveq	r0, r6
    b5e0:	popeq	{r4, r5, r6, r7, fp, pc}
    b5e4:	add	r1, r7, r7, lsl #2
    b5e8:	add	r0, r0, r1, lsl #3
    b5ec:	sub	r1, r4, r7
    b5f0:	add	r1, r1, r1, lsl #2
    b5f4:	lsl	r2, r1, #3
    b5f8:	mov	r6, #0
    b5fc:	mov	r1, #0
    b600:	bl	4d28 <memset@plt>
    b604:	mov	r0, r6
    b608:	pop	{r4, r5, r6, r7, fp, pc}

0000b60c <sas7bdat_parse_text_ref>:
    b60c:	push	{r4, r5, r6, sl, fp, lr}
    b610:	add	fp, sp, #16
    b614:	mov	r4, r2
    b618:	mov	r5, r1
    b61c:	mov	r6, r0
    b620:	ldr	r1, [r2, #60]	; 0x3c
    b624:	mov	r0, r5
    b628:	bl	4e6c <sas_read2@plt>
    b62c:	strh	r0, [r6]
    b630:	ldr	r1, [r4, #60]	; 0x3c
    b634:	add	r0, r5, #2
    b638:	bl	4e6c <sas_read2@plt>
    b63c:	strh	r0, [r6, #2]
    b640:	ldr	r1, [r4, #60]	; 0x3c
    b644:	add	r0, r5, #4
    b648:	bl	4e6c <sas_read2@plt>
    b64c:	strh	r0, [r6, #4]
    b650:	pop	{r4, r5, r6, sl, fp, pc}

0000b654 <sas7bdat_parse_page_pass2>:
    b654:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b658:	add	fp, sp, #28
    b65c:	sub	sp, sp, #4
    b660:	vpush	{d8-d9}
    b664:	sub	sp, sp, #56	; 0x38
    b668:	mov	r4, r2
    b66c:	mov	r8, r1
    b670:	mov	sl, r0
    b674:	mov	r5, r2
    b678:	ldr	r0, [r5, #128]!	; 0x80
    b67c:	add	r0, sl, r0
    b680:	sub	r0, r0, #8
    b684:	ldr	r1, [r5, #-68]	; 0xffffffbc
    b688:	bl	4e6c <sas_read2@plt>
    b68c:	and	r7, r0, #3840	; 0xf00
    b690:	cmp	r7, #256	; 0x100
    b694:	bne	b708 <sas7bdat_parse_page_pass2+0xb4>
    b698:	ldr	r0, [r5]
    b69c:	add	r0, sl, r0
    b6a0:	sub	r0, r0, #6
    b6a4:	ldr	r1, [r4, #60]	; 0x3c
    b6a8:	bl	4e6c <sas_read2@plt>
    b6ac:	str	r0, [r4, #72]	; 0x48
    b6b0:	ldr	r0, [r5]
    b6b4:	add	r7, sl, r0
    b6b8:	cmp	r7, #0
    b6bc:	beq	b94c <sas7bdat_parse_page_pass2+0x2f8>
    b6c0:	mov	r0, r4
    b6c4:	mov	r1, #0
    b6c8:	bl	a9f0 <sas7bdat_submit_columns_if_needed>
    b6cc:	cmp	r0, #0
    b6d0:	bne	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b6d4:	ldr	r0, [r4, #16]
    b6d8:	cmp	r0, #0
    b6dc:	mov	r0, #0
    b6e0:	beq	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b6e4:	add	r0, sl, r8
    b6e8:	sub	r1, r0, r7
    b6ec:	mov	r0, r7
    b6f0:	mov	r2, r4
    b6f4:	sub	sp, fp, #48	; 0x30
    b6f8:	vpop	{d8-d9}
    b6fc:	add	sp, sp, #4
    b700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b704:	b	bb5c <sas7bdat_parse_rows>
    b708:	mov	r1, r0
    b70c:	mov	r0, #0
    b710:	tst	r1, #36864	; 0x9000
    b714:	bne	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b718:	ldr	r0, [r5]
    b71c:	add	r0, sl, r0
    b720:	sub	r0, r0, #4
    b724:	ldr	r1, [r4, #60]	; 0x3c
    b728:	bl	4e6c <sas_read2@plt>
    b72c:	mov	r6, r0
    b730:	ldr	r0, [r4, #144]	; 0x90
    b734:	str	r0, [sp, #24]
    b738:	mul	r0, r0, r6
    b73c:	ldrd	r2, [r5]
    b740:	adds	r1, r2, r0
    b744:	adc	r3, r3, r0, asr #31
    b748:	mov	r0, #5
    b74c:	subs	r1, r8, r1
    b750:	rscs	r1, r3, #0
    b754:	bcc	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b758:	str	r7, [sp, #8]
    b75c:	add	r7, sl, r2
    b760:	cmp	r6, #0
    b764:	str	r8, [sp, #12]
    b768:	beq	b960 <sas7bdat_parse_page_pass2+0x30c>
    b76c:	add	r0, sl, r8
    b770:	str	r0, [sp, #20]
    b774:	add	r0, sl, #4
    b778:	str	r0, [sp]
    b77c:	add	r0, sp, #32
    b780:	add	r0, r0, #8
    b784:	str	r0, [sp, #16]
    b788:	vmov.i32	q4, #0	; 0x00000000
    b78c:	mov	r8, #0
    b790:	str	r6, [sp, #28]
    b794:	add	r2, sp, #32
    b798:	mov	r0, r2
    b79c:	mov	r1, #20
    b7a0:	vst1.64	{d8-d9}, [r0], r1
    b7a4:	mov	r1, #0
    b7a8:	str	r1, [r0]
    b7ac:	str	r1, [sp, #48]	; 0x30
    b7b0:	ldr	r0, [sp, #20]
    b7b4:	sub	r1, r0, r7
    b7b8:	mov	r0, r7
    b7bc:	mov	r3, r4
    b7c0:	bl	ad24 <sas7bdat_parse_subheader_pointer>
    b7c4:	cmp	r0, #0
    b7c8:	bne	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b7cc:	ldr	r0, [sp, #16]
    b7d0:	ldr	r6, [r0]
    b7d4:	ldr	r5, [r0, #4]
    b7d8:	orrs	r0, r6, r5
    b7dc:	ldrbne	r9, [sp, #48]	; 0x30
    b7e0:	cmpne	r9, #1
    b7e4:	bne	b804 <sas7bdat_parse_page_pass2+0x1b0>
    b7e8:	ldr	r0, [sp, #24]
    b7ec:	add	r7, r7, r0
    b7f0:	add	r8, r8, #1
    b7f4:	ldr	r6, [sp, #28]
    b7f8:	cmp	r8, r6
    b7fc:	bcc	b794 <sas7bdat_parse_page_pass2+0x140>
    b800:	b	b960 <sas7bdat_parse_page_pass2+0x30c>
    b804:	add	r0, sp, #32
    b808:	ldr	r1, [sp, #12]
    b80c:	ldr	r2, [sp, #28]
    b810:	mov	r3, r4
    b814:	bl	add4 <sas7bdat_validate_subheader_pointer>
    b818:	cmp	r0, #0
    b81c:	bne	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b820:	cmp	r9, #4
    b824:	beq	b8b0 <sas7bdat_parse_page_pass2+0x25c>
    b828:	cmp	r9, #0
    b82c:	bne	b9b4 <sas7bdat_parse_page_pass2+0x360>
    b830:	ldr	r0, [sp, #32]
    b834:	str	r0, [sp, #4]
    b838:	add	r9, sl, r0
    b83c:	ldr	r1, [r4, #60]	; 0x3c
    b840:	mov	r0, r9
    b844:	bl	4e90 <sas_read4@plt>
    b848:	mov	r1, r0
    b84c:	cmn	r0, #1
    b850:	ldreq	r0, [r4, #40]	; 0x28
    b854:	cmpeq	r0, #0
    b858:	beq	b8e4 <sas7bdat_parse_page_pass2+0x290>
    b85c:	ldrb	r0, [sp, #49]	; 0x31
    b860:	cmp	r0, #0
    b864:	beq	b888 <sas7bdat_parse_page_pass2+0x234>
    b868:	mov	r0, r1
    b86c:	str	r9, [sp, #4]
    b870:	mov	r9, r1
    b874:	bl	b9d4 <sas7bdat_signature_is_recognized>
    b878:	mov	r1, r9
    b87c:	ldr	r9, [sp, #4]
    b880:	cmp	r0, #0
    b884:	beq	b908 <sas7bdat_parse_page_pass2+0x2b4>
    b888:	cmn	r1, #3
    b88c:	beq	b7e8 <sas7bdat_parse_page_pass2+0x194>
    b890:	mov	r0, r1
    b894:	mov	r1, r9
    b898:	mov	r2, r6
    b89c:	mov	r3, r4
    b8a0:	bl	aea0 <sas7bdat_parse_subheader>
    b8a4:	cmp	r0, #0
    b8a8:	beq	b7e8 <sas7bdat_parse_page_pass2+0x194>
    b8ac:	b	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b8b0:	mov	r0, r4
    b8b4:	mov	r1, #1
    b8b8:	bl	a9f0 <sas7bdat_submit_columns_if_needed>
    b8bc:	cmp	r0, #0
    b8c0:	bne	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b8c4:	ldr	r0, [sp, #32]
    b8c8:	add	r0, sl, r0
    b8cc:	mov	r1, r6
    b8d0:	mov	r2, r4
    b8d4:	bl	bb48 <sas7bdat_parse_subheader_compressed>
    b8d8:	cmp	r0, #0
    b8dc:	beq	b7e8 <sas7bdat_parse_page_pass2+0x194>
    b8e0:	b	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b8e4:	ldr	r0, [r4, #44]	; 0x2c
    b8e8:	cmp	r0, #0
    b8ec:	beq	b944 <sas7bdat_parse_page_pass2+0x2f0>
    b8f0:	ldm	sp, {r0, r1}
    b8f4:	add	r0, r0, r1
    b8f8:	ldr	r1, [r4, #60]	; 0x3c
    b8fc:	bl	4e90 <sas_read4@plt>
    b900:	mov	r1, r0
    b904:	b	b85c <sas7bdat_parse_page_pass2+0x208>
    b908:	ldr	r0, [r4, #68]	; 0x44
    b90c:	eor	r0, r6, r0
    b910:	orrs	r0, r0, r5
    b914:	bne	b9cc <sas7bdat_parse_page_pass2+0x378>
    b918:	mov	r0, r4
    b91c:	mov	r1, #1
    b920:	bl	a9f0 <sas7bdat_submit_columns_if_needed>
    b924:	cmp	r0, #0
    b928:	bne	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b92c:	mov	r0, r9
    b930:	mov	r1, r4
    b934:	bl	ba34 <sas7bdat_parse_single_row>
    b938:	cmp	r0, #0
    b93c:	beq	b7e8 <sas7bdat_parse_page_pass2+0x194>
    b940:	b	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b944:	mvn	r1, #0
    b948:	b	b85c <sas7bdat_parse_page_pass2+0x208>
    b94c:	mov	r0, #0
    b950:	sub	sp, fp, #48	; 0x30
    b954:	vpop	{d8-d9}
    b958:	add	sp, sp, #4
    b95c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b960:	ldr	r0, [sp, #8]
    b964:	cmp	r0, #512	; 0x200
    b968:	mov	r0, #0
    b96c:	ldr	r8, [sp, #12]
    b970:	bne	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b974:	sub	r0, r7, sl
    b978:	asr	r1, r0, #31
    b97c:	add	r1, r0, r1, lsr #29
    b980:	bic	r1, r1, #7
    b984:	sub	r0, r0, r1
    b988:	cmp	r0, #4
    b98c:	bne	b6b8 <sas7bdat_parse_page_pass2+0x64>
    b990:	ldr	r0, [r7]
    b994:	cmp	r0, #0
    b998:	beq	b9ac <sas7bdat_parse_page_pass2+0x358>
    b99c:	movw	r1, #8224	; 0x2020
    b9a0:	movt	r1, #8224	; 0x2020
    b9a4:	cmp	r0, r1
    b9a8:	bne	b9bc <sas7bdat_parse_page_pass2+0x368>
    b9ac:	add	r7, r7, #4
    b9b0:	b	b6c0 <sas7bdat_parse_page_pass2+0x6c>
    b9b4:	mov	r0, #6
    b9b8:	b	b950 <sas7bdat_parse_page_pass2+0x2fc>
    b9bc:	ldr	r0, [r4, #48]	; 0x30
    b9c0:	cmp	r0, #0
    b9c4:	addne	r7, r7, #4
    b9c8:	b	b6c0 <sas7bdat_parse_page_pass2+0x6c>
    b9cc:	mov	r0, #10
    b9d0:	b	b950 <sas7bdat_parse_page_pass2+0x2fc>

0000b9d4 <sas7bdat_signature_is_recognized>:
    b9d4:	mov	r1, r0
    b9d8:	mov	r0, #1
    b9dc:	movw	r2, #64509	; 0xfbfd
    b9e0:	movt	r2, #65535	; 0xffff
    b9e4:	cmp	r1, r2
    b9e8:	bgt	ba1c <sas7bdat_signature_is_recognized+0x48>
    b9ec:	movw	r2, #63222	; 0xf6f6
    b9f0:	movt	r2, #63222	; 0xf6f6
    b9f4:	cmp	r1, r2
    b9f8:	bxeq	lr
    b9fc:	movw	r2, #63479	; 0xf7f7
    ba00:	movt	r2, #63479	; 0xf7f7
    ba04:	cmp	r1, r2
    ba08:	beq	ba30 <sas7bdat_signature_is_recognized+0x5c>
    ba0c:	mov	r0, #0
    ba10:	cmn	r1, #9
    ba14:	movwhi	r0, #1
    ba18:	bx	lr
    ba1c:	movw	r2, #64510	; 0xfbfe
    ba20:	movt	r2, #65535	; 0xffff
    ba24:	cmp	r1, r2
    ba28:	cmnne	r1, #1024	; 0x400
    ba2c:	bne	ba0c <sas7bdat_signature_is_recognized+0x38>
    ba30:	bx	lr

0000ba34 <sas7bdat_parse_single_row>:
    ba34:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    ba38:	add	fp, sp, #24
    ba3c:	mov	r4, r1
    ba40:	mov	r8, r0
    ba44:	ldr	r1, [r1, #76]	; 0x4c
    ba48:	ldr	r2, [r4, #84]	; 0x54
    ba4c:	mov	r0, #0
    ba50:	cmp	r1, r2
    ba54:	beq	bb44 <sas7bdat_parse_single_row+0x110>
    ba58:	ldr	r1, [r4, #88]	; 0x58
    ba5c:	cmp	r1, #0
    ba60:	subne	r1, r1, #1
    ba64:	strne	r1, [r4, #88]	; 0x58
    ba68:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
    ba6c:	ldr	r0, [r4, #16]
    ba70:	cmp	r0, #0
    ba74:	beq	bb34 <sas7bdat_parse_single_row+0x100>
    ba78:	ldr	r0, [r4, #176]	; 0xb0
    ba7c:	ldr	r3, [r4, #180]	; 0xb4
    ba80:	mov	r1, #1
    ba84:	orr	r1, r1, r0, lsl #2
    ba88:	str	r1, [r4, #184]	; 0xb8
    ba8c:	mov	r0, r3
    ba90:	bl	4d70 <readstat_realloc@plt>
    ba94:	str	r0, [r4, #180]	; 0xb4
    ba98:	cmp	r0, #0
    ba9c:	moveq	r0, #3
    baa0:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    baa4:	ldr	r0, [r4, #80]	; 0x50
    baa8:	cmp	r0, #0
    baac:	beq	bb34 <sas7bdat_parse_single_row+0x100>
    bab0:	mov	r6, #0
    bab4:	mov	r7, #0
    bab8:	ldr	r0, [r4, #196]	; 0xc4
    babc:	ldr	ip, [r0, r7, lsl #2]
    bac0:	ldr	r0, [ip, #2144]	; 0x860
    bac4:	cmp	r0, #0
    bac8:	bne	bb20 <sas7bdat_parse_single_row+0xec>
    bacc:	ldr	r0, [r4, #192]	; 0xc0
    bad0:	add	r1, r0, r6
    bad4:	ldr	r2, [r1, #24]
    bad8:	ldr	r9, [r1, #28]
    badc:	ldr	r5, [r4, #68]	; 0x44
    bae0:	mov	r0, #5
    bae4:	subs	r3, r5, r2
    bae8:	rscs	r3, r9, #0
    baec:	bcc	bb44 <sas7bdat_parse_single_row+0x110>
    baf0:	ldr	r3, [r1, #32]
    baf4:	adds	r3, r2, r3
    baf8:	adc	lr, r9, #0
    bafc:	subs	r3, r5, r3
    bb00:	rscs	r3, lr, #0
    bb04:	bcc	bb44 <sas7bdat_parse_single_row+0x110>
    bb08:	add	r2, r8, r2
    bb0c:	mov	r0, ip
    bb10:	mov	r3, r4
    bb14:	bl	bbdc <sas7bdat_handle_data_value>
    bb18:	cmp	r0, #0
    bb1c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
    bb20:	add	r6, r6, #40	; 0x28
    bb24:	add	r7, r7, #1
    bb28:	ldr	r0, [r4, #80]	; 0x50
    bb2c:	cmp	r7, r0
    bb30:	bcc	bab8 <sas7bdat_parse_single_row+0x84>
    bb34:	ldr	r0, [r4, #76]	; 0x4c
    bb38:	add	r0, r0, #1
    bb3c:	str	r0, [r4, #76]	; 0x4c
    bb40:	mov	r0, #0
    bb44:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000bb48 <sas7bdat_parse_subheader_compressed>:
    bb48:	ldrb	r3, [r2, #2529]	; 0x9e1
    bb4c:	tst	r3, #1
    bb50:	bne	bb58 <sas7bdat_parse_subheader_compressed+0x10>
    bb54:	b	c014 <sas7bdat_parse_subheader_rle>
    bb58:	b	bdf0 <sas7bdat_parse_subheader_rdc>

0000bb5c <sas7bdat_parse_rows>:
    bb5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    bb60:	add	fp, sp, #24
    bb64:	mov	r8, r0
    bb68:	ldr	r0, [r2, #72]	; 0x48
    bb6c:	cmp	r0, #0
    bb70:	beq	bbd4 <sas7bdat_parse_rows+0x78>
    bb74:	mov	r4, r2
    bb78:	mov	r5, r1
    bb7c:	mov	r7, #0
    bb80:	mov	r6, #0
    bb84:	ldr	r0, [r4, #76]	; 0x4c
    bb88:	ldr	r1, [r4, #84]	; 0x54
    bb8c:	cmp	r0, r1
    bb90:	bcs	bbd4 <sas7bdat_parse_rows+0x78>
    bb94:	ldr	r0, [r4, #68]	; 0x44
    bb98:	add	r0, r0, r7
    bb9c:	cmp	r0, r5
    bba0:	movhi	r0, #10
    bba4:	pophi	{r4, r5, r6, r7, r8, sl, fp, pc}
    bba8:	add	r0, r8, r7
    bbac:	mov	r1, r4
    bbb0:	bl	ba34 <sas7bdat_parse_single_row>
    bbb4:	cmp	r0, #0
    bbb8:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
    bbbc:	ldr	r0, [r4, #68]	; 0x44
    bbc0:	ldr	r1, [r4, #72]	; 0x48
    bbc4:	add	r7, r0, r7
    bbc8:	add	r6, r6, #1
    bbcc:	cmp	r6, r1
    bbd0:	bcc	bb84 <sas7bdat_parse_rows+0x28>
    bbd4:	mov	r0, #0
    bbd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000bbdc <sas7bdat_handle_data_value>:
    bbdc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    bbe0:	add	fp, sp, #24
    bbe4:	sub	sp, sp, #32
    bbe8:	mov	r4, r3
    bbec:	mov	r7, r2
    bbf0:	mov	r9, r1
    bbf4:	mov	r8, r0
    bbf8:	vmov.i32	q8, #0	; 0x00000000
    bbfc:	mov	r0, #8
    bc00:	add	r6, sp, #16
    bc04:	vst1.64	{d16-d17}, [r6], r0
    bc08:	ldr	r0, [r1, #36]	; 0x24
    bc0c:	str	r0, [r6]
    bc10:	cmp	r0, #5
    bc14:	beq	bc9c <sas7bdat_handle_data_value+0xc0>
    bc18:	cmp	r0, #0
    bc1c:	bne	bdac <sas7bdat_handle_data_value+0x1d0>
    bc20:	ldr	r3, [r9, #32]
    bc24:	ldr	r0, [r4, #180]	; 0xb4
    bc28:	ldr	r1, [r4, #184]	; 0xb8
    bc2c:	ldr	r2, [r4, #208]	; 0xd0
    bc30:	str	r2, [sp]
    bc34:	mov	r2, r7
    bc38:	bl	4cbc <readstat_convert@plt>
    bc3c:	cmp	r0, #0
    bc40:	beq	bcf0 <sas7bdat_handle_data_value+0x114>
    bc44:	mov	r5, r0
    bc48:	ldr	r0, [r4, #24]
    bc4c:	cmp	r0, #0
    bc50:	beq	bde0 <sas7bdat_handle_data_value+0x204>
    bc54:	ldr	r0, [r4, #76]	; 0x4c
    bc58:	ldr	r1, [r9, #20]
    bc5c:	ldr	r2, [r9, #32]
    bc60:	add	r1, r1, #1
    bc64:	stm	sp, {r1, r2, r7}
    bc68:	movw	r1, #481	; 0x1e1
    bc6c:	add	r6, r4, r1
    bc70:	add	r3, r0, #1
    bc74:	ldr	r2, [pc, #368]	; bdec <sas7bdat_handle_data_value+0x210>
    bc78:	add	r2, pc, r2
    bc7c:	mov	r0, r6
    bc80:	mov	r1, #2048	; 0x800
    bc84:	bl	4d04 <snprintf@plt>
    bc88:	ldr	r2, [r4, #24]
    bc8c:	ldr	r1, [r4, #52]	; 0x34
    bc90:	mov	r0, r6
    bc94:	blx	r2
    bc98:	b	bde0 <sas7bdat_handle_data_value+0x204>
    bc9c:	ldr	r2, [r9, #32]
    bca0:	ldr	r0, [r4, #40]	; 0x28
    bca4:	cmp	r0, #0
    bca8:	beq	bcfc <sas7bdat_handle_data_value+0x120>
    bcac:	cmp	r2, #0
    bcb0:	beq	bd34 <sas7bdat_handle_data_value+0x158>
    bcb4:	sub	r3, r7, #1
    bcb8:	ldr	r7, [r9, #32]
    bcbc:	mov	r5, #0
    bcc0:	mov	r0, #0
    bcc4:	mov	r1, #0
    bcc8:	lsl	r1, r1, #8
    bccc:	orr	r1, r1, r0, lsr #24
    bcd0:	add	r2, r3, r2
    bcd4:	ldrb	r2, [r2, -r5]
    bcd8:	orr	r0, r2, r0, lsl #8
    bcdc:	add	r5, r5, #1
    bce0:	cmp	r5, r7
    bce4:	mov	r2, r7
    bce8:	bcc	bcc8 <sas7bdat_handle_data_value+0xec>
    bcec:	b	bd3c <sas7bdat_handle_data_value+0x160>
    bcf0:	ldr	r0, [r4, #180]	; 0xb4
    bcf4:	str	r0, [sp, #16]
    bcf8:	b	bdac <sas7bdat_handle_data_value+0x1d0>
    bcfc:	cmp	r2, #0
    bd00:	beq	bd34 <sas7bdat_handle_data_value+0x158>
    bd04:	ldr	r2, [r9, #32]
    bd08:	mov	r3, #0
    bd0c:	mov	r0, #0
    bd10:	mov	r1, #0
    bd14:	lsl	r1, r1, #8
    bd18:	orr	r1, r1, r0, lsr #24
    bd1c:	ldrb	r5, [r7, r3]
    bd20:	orr	r0, r5, r0, lsl #8
    bd24:	add	r3, r3, #1
    bd28:	cmp	r3, r2
    bd2c:	bcc	bd14 <sas7bdat_handle_data_value+0x138>
    bd30:	b	bd3c <sas7bdat_handle_data_value+0x160>
    bd34:	mov	r0, #0
    bd38:	mov	r1, #0
    bd3c:	ldr	r2, [r9, #32]
    bd40:	mov	r3, #64	; 0x40
    bd44:	sub	r3, r3, r2, lsl #3
    bd48:	rsb	r7, r3, #32
    bd4c:	lsr	r7, r0, r7
    bd50:	orr	r5, r7, r1, lsl r3
    bd54:	mov	r1, #32
    bd58:	sub	r1, r1, r2, lsl #3
    bd5c:	cmp	r1, #0
    bd60:	lslge	r5, r0, r1
    bd64:	lsl	r7, r0, r3
    bd68:	movwge	r7, #0
    bd6c:	vmov	d0, r7, r5
    bd70:	bl	4db8 <__isnan@plt>
    bd74:	cmp	r0, #0
    bd78:	beq	bda4 <sas7bdat_handle_data_value+0x1c8>
    bd7c:	movw	r0, #0
    bd80:	movt	r0, #32760	; 0x7ff8
    bd84:	str	r0, [sp, #20]
    bd88:	mov	r0, #0
    bd8c:	str	r0, [sp, #16]
    bd90:	mvn	r0, r5, lsr #8
    bd94:	uxtb	r1, r0
    bd98:	add	r0, sp, #16
    bd9c:	bl	4f44 <sas_assign_tag@plt>
    bda0:	b	bdac <sas7bdat_handle_data_value+0x1d0>
    bda4:	str	r7, [sp, #16]
    bda8:	str	r5, [sp, #20]
    bdac:	ldrd	r6, [r6]
    bdb0:	ldr	r5, [r4, #16]
    bdb4:	ldr	r1, [r4, #52]	; 0x34
    bdb8:	ldr	r0, [r4, #76]	; 0x4c
    bdbc:	ldr	r2, [sp, #16]
    bdc0:	ldr	r3, [sp, #20]
    bdc4:	stm	sp, {r6, r7}
    bdc8:	str	r1, [sp, #8]
    bdcc:	mov	r1, r8
    bdd0:	blx	r5
    bdd4:	mov	r5, r0
    bdd8:	cmp	r0, #0
    bddc:	movwne	r5, #4
    bde0:	mov	r0, r5
    bde4:	sub	sp, fp, #24
    bde8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    bdec:	.word	0x00019d72

0000bdf0 <sas7bdat_parse_subheader_rdc>:
    bdf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bdf4:	add	fp, sp, #28
    bdf8:	sub	sp, sp, #20
    bdfc:	mov	r4, r2
    be00:	mov	r7, r1
    be04:	mov	sl, r0
    be08:	ldr	r0, [r2, #68]	; 0x44
    be0c:	bl	4b9c <malloc@plt>
    be10:	mov	ip, r0
    be14:	cmp	r7, #2
    be18:	str	r4, [sp, #4]
    be1c:	str	r0, [sp, #16]
    be20:	bge	be50 <sas7bdat_parse_subheader_rdc+0x60>
    be24:	sub	r0, r0, ip
    be28:	ldr	r1, [r4, #68]	; 0x44
    be2c:	mov	r7, #10
    be30:	cmp	r0, r1
    be34:	bne	c000 <sas7bdat_parse_subheader_rdc+0x210>
    be38:	mov	r0, ip
    be3c:	ldr	r1, [sp, #4]
    be40:	bl	ba34 <sas7bdat_parse_single_row>
    be44:	ldr	ip, [sp, #16]
    be48:	mov	r7, r0
    be4c:	b	c000 <sas7bdat_parse_subheader_rdc+0x210>
    be50:	add	lr, sl, r7
    be54:	add	r1, sl, #2
    be58:	mov	r0, ip
    be5c:	str	lr, [sp, #8]
    be60:	ldrb	r2, [sl]
    be64:	ldrb	r3, [sl, #1]
    be68:	orr	r5, r3, r2, lsl #8
    be6c:	mov	r9, #0
    be70:	mov	r8, #15
    be74:	mov	sl, r1
    be78:	str	r5, [sp, #12]
    be7c:	mov	r1, #1
    be80:	tst	r5, r1, lsl r8
    be84:	beq	beb0 <sas7bdat_parse_subheader_rdc+0xc0>
    be88:	add	r6, sl, #2
    be8c:	mov	r7, #5
    be90:	cmp	r6, lr
    be94:	bhi	c000 <sas7bdat_parse_subheader_rdc+0x210>
    be98:	ldrb	r3, [sl]
    be9c:	ldrb	r1, [sl, #1]
    bea0:	cmp	r3, #15
    bea4:	bhi	bee4 <sas7bdat_parse_subheader_rdc+0xf4>
    bea8:	add	r2, r3, #3
    beac:	b	bf20 <sas7bdat_parse_subheader_rdc+0x130>
    beb0:	add	r1, sl, #1
    beb4:	cmp	r1, lr
    beb8:	bhi	bfec <sas7bdat_parse_subheader_rdc+0x1fc>
    bebc:	ldr	r2, [r4, #68]	; 0x44
    bec0:	add	r3, ip, r2
    bec4:	add	r2, r0, #1
    bec8:	cmp	r2, r3
    becc:	bhi	bffc <sas7bdat_parse_subheader_rdc+0x20c>
    bed0:	ldrb	r3, [sl]
    bed4:	strb	r3, [r0]
    bed8:	mov	r0, r2
    bedc:	mov	sl, r1
    bee0:	b	bfdc <sas7bdat_parse_subheader_rdc+0x1ec>
    bee4:	mov	r2, #2
    bee8:	cmp	r2, r3, lsr #4
    beec:	beq	bf50 <sas7bdat_parse_subheader_rdc+0x160>
    bef0:	lsr	r2, r3, #4
    bef4:	cmp	r2, #1
    bef8:	bne	bf74 <sas7bdat_parse_subheader_rdc+0x184>
    befc:	add	r5, sl, #3
    bf00:	cmp	r5, lr
    bf04:	bhi	c000 <sas7bdat_parse_subheader_rdc+0x210>
    bf08:	and	r2, r3, #15
    bf0c:	orr	r1, r2, r1, lsl #4
    bf10:	add	r2, r1, #19
    bf14:	ldrb	r1, [r6]
    bf18:	mov	r6, r5
    bf1c:	ldr	r4, [sp, #4]
    bf20:	add	r7, r0, r2
    bf24:	ldr	r3, [r4, #68]	; 0x44
    bf28:	add	r3, ip, r3
    bf2c:	cmp	r7, r3
    bf30:	bhi	bffc <sas7bdat_parse_subheader_rdc+0x20c>
    bf34:	bl	4d28 <memset@plt>
    bf38:	ldr	r5, [sp, #12]
    bf3c:	ldr	ip, [sp, #16]
    bf40:	ldr	lr, [sp, #8]
    bf44:	mov	r0, r7
    bf48:	mov	sl, r6
    bf4c:	b	bfdc <sas7bdat_parse_subheader_rdc+0x1ec>
    bf50:	add	sl, sl, #3
    bf54:	cmp	sl, lr
    bf58:	bhi	c000 <sas7bdat_parse_subheader_rdc+0x210>
    bf5c:	and	r2, r3, #15
    bf60:	orr	r1, r2, r1, lsl #4
    bf64:	add	r1, r1, #3
    bf68:	ldrb	r2, [r6]
    bf6c:	add	r2, r2, #16
    bf70:	b	bf8c <sas7bdat_parse_subheader_rdc+0x19c>
    bf74:	cmp	r2, #0
    bf78:	beq	bfd4 <sas7bdat_parse_subheader_rdc+0x1e4>
    bf7c:	and	r3, r3, #15
    bf80:	orr	r1, r3, r1, lsl #4
    bf84:	add	r1, r1, #3
    bf88:	mov	sl, r6
    bf8c:	sub	r3, r0, ip
    bf90:	cmp	r3, r1
    bf94:	bcc	c000 <sas7bdat_parse_subheader_rdc+0x210>
    bf98:	cmp	r2, r1
    bf9c:	bhi	c000 <sas7bdat_parse_subheader_rdc+0x210>
    bfa0:	add	r6, r0, r2
    bfa4:	ldr	r4, [sp, #4]
    bfa8:	ldr	r3, [r4, #68]	; 0x44
    bfac:	add	r3, ip, r3
    bfb0:	cmp	r6, r3
    bfb4:	bhi	bffc <sas7bdat_parse_subheader_rdc+0x20c>
    bfb8:	sub	r1, r0, r1
    bfbc:	bl	4998 <memcpy@plt>
    bfc0:	ldr	r5, [sp, #12]
    bfc4:	ldr	ip, [sp, #16]
    bfc8:	ldr	lr, [sp, #8]
    bfcc:	mov	r0, r6
    bfd0:	b	bfdc <sas7bdat_parse_subheader_rdc+0x1ec>
    bfd4:	mov	sl, r6
    bfd8:	ldr	r4, [sp, #4]
    bfdc:	sub	r8, r8, #1
    bfe0:	add	r9, r9, #1
    bfe4:	cmp	r9, #16
    bfe8:	bcc	be7c <sas7bdat_parse_subheader_rdc+0x8c>
    bfec:	add	r1, sl, #2
    bff0:	cmp	r1, lr
    bff4:	bls	be60 <sas7bdat_parse_subheader_rdc+0x70>
    bff8:	b	be24 <sas7bdat_parse_subheader_rdc+0x34>
    bffc:	mov	r7, #10
    c000:	mov	r0, ip
    c004:	bl	4938 <free@plt>
    c008:	mov	r0, r7
    c00c:	sub	sp, fp, #28
    c010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000c014 <sas7bdat_parse_subheader_rle>:
    c014:	push	{r4, r5, r6, sl, fp, lr}
    c018:	add	fp, sp, #16
    c01c:	sub	sp, sp, #8
    c020:	mov	r4, r2
    c024:	mov	r3, r1
    c028:	mov	r2, r0
    c02c:	ldr	r0, [r4, #76]	; 0x4c
    c030:	ldr	r1, [r4, #84]	; 0x54
    c034:	mov	r5, #0
    c038:	cmp	r1, r0
    c03c:	beq	c0b0 <sas7bdat_parse_subheader_rle+0x9c>
    c040:	ldr	r1, [r4, #68]	; 0x44
    c044:	ldr	r0, [r4, #124]	; 0x7c
    c048:	bl	4af4 <sas_rle_decompress@plt>
    c04c:	ldr	r1, [r4, #68]	; 0x44
    c050:	cmp	r0, r1
    c054:	bne	c06c <sas7bdat_parse_subheader_rle+0x58>
    c058:	ldr	r0, [r4, #124]	; 0x7c
    c05c:	mov	r1, r4
    c060:	sub	sp, fp, #16
    c064:	pop	{r4, r5, r6, sl, fp, lr}
    c068:	b	ba34 <sas7bdat_parse_single_row>
    c06c:	ldr	r2, [r4, #24]
    c070:	mov	r5, #10
    c074:	cmp	r2, #0
    c078:	beq	c0b0 <sas7bdat_parse_subheader_rle+0x9c>
    c07c:	ldr	r3, [r4, #76]	; 0x4c
    c080:	stm	sp, {r0, r1}
    c084:	movw	r0, #481	; 0x1e1
    c088:	add	r6, r4, r0
    c08c:	ldr	r2, [pc, #40]	; c0bc <sas7bdat_parse_subheader_rle+0xa8>
    c090:	add	r2, pc, r2
    c094:	mov	r0, r6
    c098:	mov	r1, #2048	; 0x800
    c09c:	bl	4d04 <snprintf@plt>
    c0a0:	ldr	r2, [r4, #24]
    c0a4:	ldr	r1, [r4, #52]	; 0x34
    c0a8:	mov	r0, r6
    c0ac:	blx	r2
    c0b0:	mov	r0, r5
    c0b4:	sub	sp, fp, #16
    c0b8:	pop	{r4, r5, r6, sl, fp, pc}
    c0bc:	.word	0x000199a9

0000c0c0 <sas7bdat_submit_columns>:
    c0c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    c0c4:	add	fp, sp, #24
    c0c8:	sub	sp, sp, #64	; 0x40
    c0cc:	mov	r4, r0
    c0d0:	mov	r0, #0
    c0d4:	str	r0, [fp, #-28]	; 0xffffffe4
    c0d8:	ldr	r2, [r4]
    c0dc:	cmp	r2, #0
    c0e0:	beq	c194 <sas7bdat_submit_columns+0xd4>
    c0e4:	ldr	r6, [r4, #80]	; 0x50
    c0e8:	ldr	r3, [r4, #84]	; 0x54
    c0ec:	str	r3, [sp]
    c0f0:	str	r0, [sp, #12]
    c0f4:	stmib	sp, {r0, r6}
    c0f8:	ldr	r3, [r4, #212]	; 0xd4
    c0fc:	ldr	r7, [r4, #216]	; 0xd8
    c100:	ldr	r6, [r4, #220]	; 0xdc
    c104:	str	r3, [sp, #16]
    c108:	str	r7, [sp, #20]
    c10c:	str	r0, [sp, #32]
    c110:	str	r6, [sp, #24]
    c114:	asr	r3, r6, #31
    c118:	str	r3, [sp, #28]
    c11c:	ldr	r3, [r4, #40]	; 0x28
    c120:	str	r0, [sp, #40]	; 0x28
    c124:	add	r0, r4, #224	; 0xe0
    c128:	str	r0, [sp, #44]	; 0x2c
    c12c:	mov	r0, #1
    c130:	cmp	r3, #0
    c134:	movweq	r0, #2
    c138:	str	r0, [sp, #36]	; 0x24
    c13c:	ldr	r0, [r4, #200]	; 0xc8
    c140:	str	r0, [sp, #48]	; 0x30
    c144:	ldrb	r0, [sp, #52]	; 0x34
    c148:	and	r0, r0, #254	; 0xfe
    c14c:	ldrb	r3, [r4, #44]	; 0x2c
    c150:	and	r3, r3, #1
    c154:	orr	r0, r0, r3
    c158:	strb	r0, [sp, #52]	; 0x34
    c15c:	cmp	r1, #0
    c160:	beq	c178 <sas7bdat_submit_columns+0xb8>
    c164:	ldrb	r0, [r4, #2529]	; 0x9e1
    c168:	mov	r1, #2
    c16c:	tst	r0, #1
    c170:	movweq	r1, #1
    c174:	str	r1, [sp, #32]
    c178:	ldr	r1, [r4, #52]	; 0x34
    c17c:	mov	r0, sp
    c180:	blx	r2
    c184:	cmp	r0, #0
    c188:	beq	c194 <sas7bdat_submit_columns+0xd4>
    c18c:	mov	r0, #4
    c190:	b	c254 <sas7bdat_submit_columns+0x194>
    c194:	ldr	r0, [r4, #80]	; 0x50
    c198:	cmp	r0, #0
    c19c:	beq	c258 <sas7bdat_submit_columns+0x198>
    c1a0:	mov	r1, #4
    c1a4:	bl	4a34 <readstat_calloc@plt>
    c1a8:	str	r0, [r4, #196]	; 0xc4
    c1ac:	cmp	r0, #0
    c1b0:	beq	c250 <sas7bdat_submit_columns+0x190>
    c1b4:	ldr	r0, [r4, #80]	; 0x50
    c1b8:	cmp	r0, #0
    c1bc:	beq	c258 <sas7bdat_submit_columns+0x198>
    c1c0:	mov	r5, #0
    c1c4:	sub	r9, fp, #28
    c1c8:	mov	r8, #1
    c1cc:	mov	r7, #0
    c1d0:	mov	r0, r4
    c1d4:	mov	r1, r7
    c1d8:	mov	r2, r5
    c1dc:	mov	r3, r9
    c1e0:	bl	c264 <sas7bdat_init_variable>
    c1e4:	ldr	r1, [r4, #196]	; 0xc4
    c1e8:	str	r0, [r1, r7, lsl #2]
    c1ec:	ldr	r0, [r4, #196]	; 0xc4
    c1f0:	ldr	r1, [r0, r7, lsl #2]
    c1f4:	cmp	r1, #0
    c1f8:	beq	c258 <sas7bdat_submit_columns+0x198>
    c1fc:	ldr	r6, [r4, #8]
    c200:	cmp	r6, #0
    c204:	beq	c228 <sas7bdat_submit_columns+0x168>
    c208:	ldr	r3, [r4, #52]	; 0x34
    c20c:	add	r2, r1, #308	; 0x134
    c210:	mov	r0, r7
    c214:	blx	r6
    c218:	cmp	r0, #2
    c21c:	beq	c230 <sas7bdat_submit_columns+0x170>
    c220:	cmp	r0, #1
    c224:	beq	c18c <sas7bdat_submit_columns+0xcc>
    c228:	add	r5, r5, #1
    c22c:	b	c23c <sas7bdat_submit_columns+0x17c>
    c230:	ldr	r0, [r4, #196]	; 0xc4
    c234:	ldr	r0, [r0, r7, lsl #2]
    c238:	str	r8, [r0, #2144]	; 0x860
    c23c:	ldr	r0, [r4, #80]	; 0x50
    c240:	add	r7, r7, #1
    c244:	cmp	r7, r0
    c248:	bcc	c1d0 <sas7bdat_submit_columns+0x110>
    c24c:	b	c258 <sas7bdat_submit_columns+0x198>
    c250:	mov	r0, #3
    c254:	str	r0, [fp, #-28]	; 0xffffffe4
    c258:	ldr	r0, [fp, #-28]	; 0xffffffe4
    c25c:	sub	sp, fp, #24
    c260:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000c264 <sas7bdat_init_variable>:
    c264:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c268:	add	fp, sp, #28
    c26c:	sub	sp, sp, #12
    c270:	mov	r8, r3
    c274:	mov	r5, r2
    c278:	mov	r9, r1
    c27c:	mov	r4, r0
    c280:	mov	r0, #1
    c284:	movw	r1, #2152	; 0x868
    c288:	bl	4a34 <readstat_calloc@plt>
    c28c:	mov	r6, r0
    c290:	str	r9, [r0, #4]
    c294:	str	r5, [r0, #2148]	; 0x864
    c298:	ldr	r0, [r4, #192]	; 0xc0
    c29c:	add	sl, r9, r9, lsl #2
    c2a0:	add	r5, r0, sl, lsl #3
    c2a4:	ldr	r0, [r5, #36]	; 0x24
    c2a8:	str	r0, [r6]
    c2ac:	ldr	r0, [r5, #32]
    c2b0:	str	r0, [r6, #1596]	; 0x63c
    c2b4:	mov	r0, r5
    c2b8:	bl	c3c4 <sas7bdat_validate_column>
    c2bc:	mov	r7, r0
    c2c0:	cmp	r0, #0
    c2c4:	bne	c344 <sas7bdat_init_variable+0xe0>
    c2c8:	ldrh	r3, [r5, #4]
    c2cc:	ldr	r2, [r5]
    c2d0:	str	r4, [sp]
    c2d4:	add	r0, r6, #8
    c2d8:	mov	r1, #300	; 0x12c
    c2dc:	bl	c410 <sas7bdat_copy_text_ref>
    c2e0:	mov	r7, r0
    c2e4:	cmp	r0, #0
    c2e8:	bne	c344 <sas7bdat_init_variable+0xe0>
    c2ec:	ldr	r0, [r4, #192]	; 0xc0
    c2f0:	add	r0, r0, sl, lsl #3
    c2f4:	ldrh	r3, [r0, #10]
    c2f8:	ldr	r2, [r0, #6]
    c2fc:	str	r4, [sp]
    c300:	add	r0, r6, #308	; 0x134
    c304:	mov	r1, #256	; 0x100
    c308:	bl	c410 <sas7bdat_copy_text_ref>
    c30c:	mov	r7, r0
    c310:	cmp	r0, #0
    c314:	bne	c344 <sas7bdat_init_variable+0xe0>
    c318:	ldr	r0, [r4, #192]	; 0xc0
    c31c:	add	r0, r0, sl, lsl #3
    c320:	ldrh	r3, [r0, #16]
    c324:	ldr	r2, [r0, #12]
    c328:	str	r4, [sp]
    c32c:	add	r0, r6, #564	; 0x234
    c330:	mov	r1, #1024	; 0x400
    c334:	bl	c410 <sas7bdat_copy_text_ref>
    c338:	mov	r7, r0
    c33c:	cmp	r0, #0
    c340:	beq	c3b4 <sas7bdat_init_variable+0x150>
    c344:	mov	r0, r6
    c348:	bl	4938 <free@plt>
    c34c:	cmp	r8, #0
    c350:	strne	r7, [r8]
    c354:	cmp	r7, #17
    c358:	bne	c3b0 <sas7bdat_init_variable+0x14c>
    c35c:	ldr	r0, [r4, #24]
    c360:	cmp	r0, #0
    c364:	beq	c3b0 <sas7bdat_init_variable+0x14c>
    c368:	add	r0, r6, #564	; 0x234
    c36c:	add	r1, r6, #308	; 0x134
    c370:	add	r2, r6, #8
    c374:	str	r2, [sp]
    c378:	str	r1, [sp, #4]
    c37c:	str	r0, [sp, #8]
    c380:	movw	r0, #481	; 0x1e1
    c384:	add	r5, r4, r0
    c388:	ldr	r2, [pc, #48]	; c3c0 <sas7bdat_init_variable+0x15c>
    c38c:	add	r2, pc, r2
    c390:	mov	r0, r5
    c394:	mov	r1, #2048	; 0x800
    c398:	mov	r3, r9
    c39c:	bl	4d04 <snprintf@plt>
    c3a0:	ldr	r2, [r4, #24]
    c3a4:	ldr	r1, [r4, #52]	; 0x34
    c3a8:	mov	r0, r5
    c3ac:	blx	r2
    c3b0:	mov	r6, #0
    c3b4:	mov	r0, r6
    c3b8:	sub	sp, fp, #28
    c3bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c3c0:	.word	0x000196ed

0000c3c4 <sas7bdat_validate_column>:
    c3c4:	ldr	r1, [r0, #36]	; 0x24
    c3c8:	cmp	r1, #0
    c3cc:	beq	c3f0 <sas7bdat_validate_column+0x2c>
    c3d0:	cmp	r1, #5
    c3d4:	bne	c408 <sas7bdat_validate_column+0x44>
    c3d8:	ldr	r0, [r0, #32]
    c3dc:	sub	r1, r0, #3
    c3e0:	mov	r0, #5
    c3e4:	cmp	r1, #5
    c3e8:	movls	r0, #0
    c3ec:	bx	lr
    c3f0:	ldr	r0, [r0, #32]
    c3f4:	sub	r1, r0, #1
    c3f8:	mov	r0, #5
    c3fc:	movw	r2, #32766	; 0x7ffe
    c400:	cmp	r1, r2
    c404:	bxhi	lr
    c408:	mov	r0, #0
    c40c:	bx	lr

0000c410 <sas7bdat_copy_text_ref>:
    c410:	push	{r4, r5, r6, sl, fp, lr}
    c414:	add	fp, sp, #16
    c418:	sub	sp, sp, #8
    c41c:	uxth	lr, r2
    c420:	ldr	r4, [fp, #8]
    c424:	ldr	r5, [r4, #152]	; 0x98
    c428:	mov	ip, #5
    c42c:	cmp	lr, r5
    c430:	bge	c480 <sas7bdat_copy_text_ref+0x70>
    c434:	uxth	r3, r3
    c438:	cmp	r3, #0
    c43c:	beq	c478 <sas7bdat_copy_text_ref+0x68>
    c440:	lsr	r2, r2, #16
    c444:	ldr	r5, [r4, #156]	; 0x9c
    c448:	ldr	r5, [r5, lr, lsl #2]
    c44c:	add	r6, r2, r3
    c450:	cmp	r6, r5
    c454:	bhi	c480 <sas7bdat_copy_text_ref+0x70>
    c458:	ldr	r6, [r4, #160]	; 0xa0
    c45c:	ldr	r5, [r4, #208]	; 0xd0
    c460:	ldr	r6, [r6, lr, lsl #2]
    c464:	str	r5, [sp]
    c468:	add	r2, r6, r2
    c46c:	bl	4cbc <readstat_convert@plt>
    c470:	sub	sp, fp, #16
    c474:	pop	{r4, r5, r6, sl, fp, pc}
    c478:	mov	ip, #0
    c47c:	strb	ip, [r0]
    c480:	mov	r0, ip
    c484:	sub	sp, fp, #16
    c488:	pop	{r4, r5, r6, sl, fp, pc}

0000c48c <readstat_begin_writing_sas7bdat>:
    c48c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c490:	add	fp, sp, #28
    c494:	mov	r9, r2
    c498:	ldr	r3, [r0, #8]
    c49c:	cmp	r3, #0
    c4a0:	moveq	r3, #9
    c4a4:	streq	r3, [r0, #8]
    c4a8:	ldr	ip, [pc, #192]	; c570 <readstat_begin_writing_sas7bdat+0xe4>
    c4ac:	add	ip, pc, ip
    c4b0:	ldr	sl, [pc, #188]	; c574 <readstat_begin_writing_sas7bdat+0xe8>
    c4b4:	add	sl, pc, sl
    c4b8:	ldr	r4, [pc, #184]	; c578 <readstat_begin_writing_sas7bdat+0xec>
    c4bc:	add	r4, pc, r4
    c4c0:	ldr	r5, [pc, #180]	; c57c <readstat_begin_writing_sas7bdat+0xf0>
    c4c4:	add	r5, pc, r5
    c4c8:	ldr	r6, [pc, #176]	; c580 <readstat_begin_writing_sas7bdat+0xf4>
    c4cc:	add	r6, pc, r6
    c4d0:	ldr	r3, [pc, #172]	; c584 <readstat_begin_writing_sas7bdat+0xf8>
    c4d4:	add	r3, pc, r3
    c4d8:	ldr	r2, [pc, #168]	; c588 <readstat_begin_writing_sas7bdat+0xfc>
    c4dc:	add	r2, pc, r2
    c4e0:	ldr	lr, [pc, #164]	; c58c <readstat_begin_writing_sas7bdat+0x100>
    c4e4:	add	lr, pc, lr
    c4e8:	ldr	r7, [pc, #160]	; c590 <readstat_begin_writing_sas7bdat+0x104>
    c4ec:	add	r7, pc, r7
    c4f0:	ldr	r8, [pc, #156]	; c594 <readstat_begin_writing_sas7bdat+0x108>
    c4f4:	add	r8, pc, r8
    c4f8:	str	r4, [r0, #264]	; 0x108
    c4fc:	str	r5, [r0, #268]	; 0x10c
    c500:	str	r6, [r0, #272]	; 0x110
    c504:	add	r4, r0, #276	; 0x114
    c508:	stm	r4, {r2, r8, lr}
    c50c:	str	r7, [r0, #288]	; 0x120
    c510:	str	ip, [r0, #292]	; 0x124
    c514:	ldr	r2, [pc, #124]	; c598 <readstat_begin_writing_sas7bdat+0x10c>
    c518:	ldr	r2, [pc, r2]
    c51c:	str	r3, [r0, #228]	; 0xe4
    c520:	str	r2, [r0, #232]	; 0xe8
    c524:	ldr	r2, [pc, #112]	; c59c <readstat_begin_writing_sas7bdat+0x110>
    c528:	add	r2, pc, r2
    c52c:	str	r2, [r0, #236]	; 0xec
    c530:	ldr	r2, [pc, #104]	; c5a0 <readstat_begin_writing_sas7bdat+0x114>
    c534:	add	r2, pc, r2
    c538:	str	r2, [r0, #240]	; 0xf0
    c53c:	ldr	r2, [pc, #96]	; c5a4 <readstat_begin_writing_sas7bdat+0x118>
    c540:	add	r2, pc, r2
    c544:	str	r2, [r0, #244]	; 0xf4
    c548:	ldr	r2, [pc, #88]	; c5a8 <readstat_begin_writing_sas7bdat+0x11c>
    c54c:	add	r2, pc, r2
    c550:	str	r2, [r0, #248]	; 0xf8
    c554:	str	sl, [r0, #252]	; 0xfc
    c558:	ldr	r2, [pc, #76]	; c5ac <readstat_begin_writing_sas7bdat+0x120>
    c55c:	add	r2, pc, r2
    c560:	str	r2, [r0, #256]	; 0x100
    c564:	mov	r2, r9
    c568:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c56c:	b	49d4 <readstat_begin_writing_file@plt>
    c570:	.word	0x000000fc
    c574:	.word	0x00000174
    c578:	.word	0x000001f0
    c57c:	.word	0x000001f0
    c580:	.word	0x00000200
    c584:	.word	0x00000240
    c588:	.word	0x00000248
    c58c:	.word	0x0000029c
    c590:	.word	0x000002b0
    c594:	.word	0x000002ac
    c598:	.word	0x00038dd8
    c59c:	.word	0x00000094
    c5a0:	.word	0x000000a4
    c5a4:	.word	0x000000b4
    c5a8:	.word	0x000000c4
    c5ac:	.word	0x000000d8

0000c5b0 <sas7bdat_metadata_ok>:
    c5b0:	ldr	r1, [r0, #16]
    c5b4:	mov	r0, #6
    c5b8:	cmp	r1, #2
    c5bc:	movwcc	r0, #0
    c5c0:	bx	lr

0000c5c4 <sas7bdat_write_int8>:
    c5c4:	push	{fp, lr}
    c5c8:	mov	fp, sp
    c5cc:	vmov	s0, r2
    c5d0:	vcvt.f64.s32	d0, s0
    c5d4:	bl	c630 <sas7bdat_write_double>
    c5d8:	mov	r0, #0
    c5dc:	pop	{fp, pc}

0000c5e0 <sas7bdat_write_int16>:
    c5e0:	push	{fp, lr}
    c5e4:	mov	fp, sp
    c5e8:	vmov	s0, r2
    c5ec:	vcvt.f64.s32	d0, s0
    c5f0:	bl	c630 <sas7bdat_write_double>
    c5f4:	mov	r0, #0
    c5f8:	pop	{fp, pc}

0000c5fc <sas7bdat_write_int32>:
    c5fc:	push	{fp, lr}
    c600:	mov	fp, sp
    c604:	vmov	s0, r2
    c608:	vcvt.f64.s32	d0, s0
    c60c:	bl	c630 <sas7bdat_write_double>
    c610:	mov	r0, #0
    c614:	pop	{fp, pc}

0000c618 <sas7bdat_write_float>:
    c618:	push	{fp, lr}
    c61c:	mov	fp, sp
    c620:	vcvt.f64.f32	d0, s0
    c624:	bl	c630 <sas7bdat_write_double>
    c628:	mov	r0, #0
    c62c:	pop	{fp, pc}

0000c630 <sas7bdat_write_double>:
    c630:	vst1.8	{d0}, [r0]
    c634:	mov	r0, #0
    c638:	bx	lr

0000c63c <sas7bdat_write_string>:
    c63c:	push	{r4, r5, r6, r7, fp, lr}
    c640:	add	fp, sp, #16
    c644:	mov	r5, r2
    c648:	mov	r4, r0
    c64c:	mov	r0, r1
    c650:	bl	4d58 <readstat_variable_get_storage_width@plt>
    c654:	mov	r6, r0
    c658:	cmp	r5, #0
    c65c:	ldrbne	r0, [r5]
    c660:	cmpne	r0, #0
    c664:	bne	c684 <sas7bdat_write_string+0x48>
    c668:	mov	r7, #0
    c66c:	mov	r0, r4
    c670:	mov	r1, #0
    c674:	mov	r2, r6
    c678:	bl	4d28 <memset@plt>
    c67c:	mov	r0, r7
    c680:	pop	{r4, r5, r6, r7, fp, pc}
    c684:	mov	r0, r5
    c688:	bl	4c8c <strlen@plt>
    c68c:	mov	r7, #22
    c690:	cmp	r0, r6
    c694:	bhi	c6ac <sas7bdat_write_string+0x70>
    c698:	mov	r0, r4
    c69c:	mov	r1, r5
    c6a0:	mov	r2, r6
    c6a4:	bl	4d4c <strncpy@plt>
    c6a8:	mov	r7, #0
    c6ac:	mov	r0, r7
    c6b0:	pop	{r4, r5, r6, r7, fp, pc}

0000c6b4 <sas7bdat_write_missing_string>:
    c6b4:	mov	r2, #0
    c6b8:	b	c63c <sas7bdat_write_string>

0000c6bc <sas7bdat_write_missing_numeric>:
    c6bc:	push	{fp, lr}
    c6c0:	mov	fp, sp
    c6c4:	mov	r2, #46	; 0x2e
    c6c8:	bl	c7e4 <sas7bdat_write_missing_tagged_raw>
    c6cc:	mov	r0, #0
    c6d0:	pop	{fp, pc}

0000c6d4 <sas7bdat_write_missing_tagged>:
    c6d4:	push	{r4, r5, r6, r7, fp, lr}
    c6d8:	add	fp, sp, #16
    c6dc:	mov	r4, r2
    c6e0:	mov	r5, r1
    c6e4:	mov	r7, r0
    c6e8:	mov	r0, r2
    c6ec:	bl	4bd8 <sas_validate_tag@plt>
    c6f0:	mov	r6, r0
    c6f4:	cmp	r0, #0
    c6f8:	beq	c704 <sas7bdat_write_missing_tagged+0x30>
    c6fc:	mov	r0, r6
    c700:	pop	{r4, r5, r6, r7, fp, pc}
    c704:	mov	r0, r7
    c708:	mov	r1, r5
    c70c:	mov	r2, r4
    c710:	bl	c7e4 <sas7bdat_write_missing_tagged_raw>
    c714:	mov	r0, r6
    c718:	pop	{r4, r5, r6, r7, fp, pc}

0000c71c <sas7bdat_variable_width>:
    c71c:	cmp	r0, #0
    c720:	movne	r1, #8
    c724:	mov	r0, r1
    c728:	bx	lr

0000c72c <sas7bdat_begin_data>:
    c72c:	push	{r4, r5, r6, sl, fp, lr}
    c730:	add	fp, sp, #16
    c734:	mov	r4, r0
    c738:	bl	c800 <sas7bdat_write_ctx_init>
    c73c:	str	r0, [r4, #300]	; 0x12c
    c740:	ldr	r0, [r4, #16]
    c744:	mov	r5, #0
    c748:	cmp	r0, #0
    c74c:	bne	c780 <sas7bdat_begin_data+0x54>
    c750:	mov	r0, r4
    c754:	bl	c89c <sas7bdat_emit_header_and_meta_pages>
    c758:	cmp	r0, #0
    c75c:	beq	c780 <sas7bdat_begin_data+0x54>
    c760:	mov	r6, r0
    c764:	ldr	r0, [r4, #300]	; 0x12c
    c768:	cmp	r0, #0
    c76c:	beq	c77c <sas7bdat_begin_data+0x50>
    c770:	bl	c92c <sas7bdat_write_ctx_free>
    c774:	mov	r0, #0
    c778:	str	r0, [r4, #300]	; 0x12c
    c77c:	mov	r5, r6
    c780:	mov	r0, r5
    c784:	pop	{r4, r5, r6, sl, fp, pc}

0000c788 <sas7bdat_end_data>:
    c788:	ldr	r1, [r0, #16]
    c78c:	cmp	r1, #1
    c790:	bne	c798 <sas7bdat_end_data+0x10>
    c794:	b	c89c <sas7bdat_emit_header_and_meta_pages>
    c798:	ldr	r1, [r0, #300]	; 0x12c
    c79c:	ldr	r1, [r1]
    c7a0:	b	4f14 <sas_fill_page@plt>

0000c7a4 <sas7bdat_module_ctx_free>:
    c7a4:	b	c92c <sas7bdat_write_ctx_free>

0000c7a8 <sas7bdat_write_row>:
    c7a8:	mov	ip, r2
    c7ac:	mov	r2, r1
    c7b0:	ldr	r3, [r0, #16]
    c7b4:	ldr	r1, [r0, #300]	; 0x12c
    c7b8:	cmp	r3, #1
    c7bc:	beq	c7d4 <sas7bdat_write_row+0x2c>
    c7c0:	cmp	r3, #0
    c7c4:	movne	r0, #0
    c7c8:	bxne	lr
    c7cc:	mov	r3, ip
    c7d0:	b	d87c <sas7bdat_write_row_uncompressed>
    c7d4:	mov	r0, r1
    c7d8:	mov	r1, r2
    c7dc:	mov	r2, ip
    c7e0:	b	d968 <sas7bdat_write_row_compressed>

0000c7e4 <sas7bdat_write_missing_tagged_raw>:
    c7e4:	eor	r2, r2, #255	; 0xff
    c7e8:	movw	r3, #0
    c7ec:	movt	r3, #32760	; 0x7ff8
    c7f0:	orr	r2, r3, r2, lsl #8
    c7f4:	mov	r3, #0
    c7f8:	vmov	d0, r3, r2
    c7fc:	b	c630 <sas7bdat_write_double>

0000c800 <sas7bdat_write_ctx_init>:
    c800:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    c804:	add	fp, sp, #24
    c808:	mov	r4, r0
    c80c:	mov	r0, #1
    c810:	mov	r1, #8
    c814:	bl	47d0 <calloc@plt>
    c818:	mov	r8, r0
    c81c:	ldr	r1, [r4, #12]
    c820:	mov	r0, r4
    c824:	bl	4de8 <sas_header_info_init@plt>
    c828:	mov	r6, r0
    c82c:	mov	r0, r4
    c830:	bl	c954 <sas7bdat_row_length>
    c834:	mov	r7, r0
    c838:	mov	r0, r4
    c83c:	mov	r1, r6
    c840:	mov	r2, r7
    c844:	bl	c9c4 <sas7bdat_page_is_too_small>
    c848:	cmp	r0, #0
    c84c:	beq	c880 <sas7bdat_write_ctx_init+0x80>
    c850:	add	r5, r6, #32
    c854:	ldrd	r0, [r5]
    c858:	lsl	r2, r0, #1
    c85c:	lsl	r1, r1, #1
    c860:	orr	r3, r1, r0, lsr #31
    c864:	strd	r2, [r5]
    c868:	mov	r0, r4
    c86c:	mov	r1, r6
    c870:	mov	r2, r7
    c874:	bl	c9c4 <sas7bdat_page_is_too_small>
    c878:	cmp	r0, #0
    c87c:	bne	c854 <sas7bdat_write_ctx_init+0x54>
    c880:	str	r6, [r8]
    c884:	mov	r0, r4
    c888:	mov	r1, r6
    c88c:	bl	ca68 <sas7bdat_subheader_array_init>
    c890:	str	r0, [r8, #4]
    c894:	mov	r0, r8
    c898:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000c89c <sas7bdat_emit_header_and_meta_pages>:
    c89c:	push	{r4, r5, r6, sl, fp, lr}
    c8a0:	add	fp, sp, #16
    c8a4:	mov	r4, r0
    c8a8:	ldr	r6, [r0, #300]	; 0x12c
    c8ac:	bl	c954 <sas7bdat_row_length>
    c8b0:	cmp	r0, #0
    c8b4:	moveq	r0, #36	; 0x24
    c8b8:	popeq	{r4, r5, r6, sl, fp, pc}
    c8bc:	ldr	r0, [r4, #16]
    c8c0:	cmp	r0, #0
    c8c4:	bne	c8dc <sas7bdat_emit_header_and_meta_pages+0x40>
    c8c8:	ldr	r1, [r6]
    c8cc:	mov	r0, r4
    c8d0:	bl	d36c <sas7bdat_rows_per_page>
    c8d4:	cmp	r0, #0
    c8d8:	beq	c924 <sas7bdat_emit_header_and_meta_pages+0x88>
    c8dc:	mov	r0, r4
    c8e0:	bl	d39c <sas7bdat_count_meta_pages>
    c8e4:	mov	r5, r0
    c8e8:	ldr	r1, [r6]
    c8ec:	mov	r0, r4
    c8f0:	bl	d40c <sas7bdat_count_data_pages>
    c8f4:	add	r0, r0, r5
    c8f8:	asr	r3, r0, #31
    c8fc:	ldr	r1, [r6]
    c900:	str	r0, [r1, #56]	; 0x38
    c904:	str	r3, [r1, #60]	; 0x3c
    c908:	mov	r0, r4
    c90c:	bl	d444 <sas7bdat_emit_header>
    c910:	cmp	r0, #0
    c914:	popne	{r4, r5, r6, sl, fp, pc}
    c918:	mov	r0, r4
    c91c:	pop	{r4, r5, r6, sl, fp, lr}
    c920:	b	d530 <sas7bdat_emit_meta_pages>
    c924:	mov	r0, #35	; 0x23
    c928:	pop	{r4, r5, r6, sl, fp, pc}

0000c92c <sas7bdat_write_ctx_free>:
    c92c:	push	{r4, sl, fp, lr}
    c930:	add	fp, sp, #8
    c934:	mov	r4, r0
    c938:	ldr	r0, [r0]
    c93c:	bl	4938 <free@plt>
    c940:	ldr	r0, [r4, #4]
    c944:	bl	d7f8 <sas7bdat_subheader_array_free>
    c948:	mov	r0, r4
    c94c:	pop	{r4, sl, fp, lr}
    c950:	b	4938 <free@plt>

0000c954 <sas7bdat_row_length>:
    c954:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    c958:	add	fp, sp, #24
    c95c:	mov	r8, r0
    c960:	ldr	r0, [r0, #28]
    c964:	cmp	r0, #1
    c968:	movlt	r5, #0
    c96c:	movlt	r0, r5
    c970:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
    c974:	mov	r6, #0
    c978:	mov	r5, #0
    c97c:	mov	r0, r8
    c980:	mov	r1, r6
    c984:	bl	4e18 <readstat_get_variable@plt>
    c988:	mov	r7, r0
    c98c:	bl	4c68 <readstat_variable_get_type@plt>
    c990:	mov	r4, r0
    c994:	mov	r0, r7
    c998:	bl	4d58 <readstat_variable_get_storage_width@plt>
    c99c:	mov	r1, r0
    c9a0:	mov	r0, r4
    c9a4:	bl	c71c <sas7bdat_variable_width>
    c9a8:	add	r5, r0, r5
    c9ac:	add	r6, r6, #1
    c9b0:	ldr	r0, [r8, #28]
    c9b4:	cmp	r6, r0
    c9b8:	blt	c97c <sas7bdat_row_length+0x28>
    c9bc:	mov	r0, r5
    c9c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000c9c4 <sas7bdat_page_is_too_small>:
    c9c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    c9c8:	add	fp, sp, #24
    c9cc:	mov	r5, r1
    c9d0:	mov	r6, r0
    c9d4:	ldr	r0, [r1, #32]
    c9d8:	ldr	r1, [r1, #40]	; 0x28
    c9dc:	subs	r7, r0, r1
    c9e0:	ldr	r0, [r6, #16]
    c9e4:	mov	r4, #1
    c9e8:	cmp	r0, #0
    c9ec:	bne	c9f8 <sas7bdat_page_is_too_small+0x34>
    c9f0:	cmp	r7, r2
    c9f4:	bcc	ca60 <sas7bdat_page_is_too_small+0x9c>
    c9f8:	cmp	r0, #1
    c9fc:	bne	ca18 <sas7bdat_page_is_too_small+0x54>
    ca00:	ldrd	r0, [r5, #48]	; 0x30
    ca04:	adds	r0, r0, r2
    ca08:	adc	r1, r1, #0
    ca0c:	subs	r0, r7, r0
    ca10:	rscs	r0, r1, #0
    ca14:	blt	ca60 <sas7bdat_page_is_too_small+0x9c>
    ca18:	mov	r0, r6
    ca1c:	mov	r1, r5
    ca20:	bl	ccd0 <sas7bdat_col_name_subheader_length>
    ca24:	ldrd	r8, [r5, #48]	; 0x30
    ca28:	adds	r0, r8, r0
    ca2c:	adc	r1, r9, #0
    ca30:	subs	r0, r7, r0
    ca34:	rscs	r0, r1, #0
    ca38:	blt	ca60 <sas7bdat_page_is_too_small+0x9c>
    ca3c:	mov	r0, r6
    ca40:	mov	r1, r5
    ca44:	bl	ccec <sas7bdat_col_attrs_subheader_length>
    ca48:	adds	r0, r8, r0
    ca4c:	adc	r1, r9, #0
    ca50:	mov	r4, #0
    ca54:	subs	r0, r7, r0
    ca58:	rscs	r0, r1, #0
    ca5c:	movwlt	r4, #1
    ca60:	mov	r0, r4
    ca64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000ca68 <sas7bdat_subheader_array_init>:
    ca68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ca6c:	add	fp, sp, #28
    ca70:	sub	sp, sp, #28
    ca74:	mov	r7, r1
    ca78:	mov	r9, r0
    ca7c:	mov	r4, #1
    ca80:	mov	r0, #1
    ca84:	mov	r1, #16
    ca88:	bl	47d0 <calloc@plt>
    ca8c:	mov	r6, r0
    ca90:	mov	r5, #0
    ca94:	strd	r4, [r6]
    ca98:	mov	r0, #4
    ca9c:	bl	4b9c <malloc@plt>
    caa0:	str	r0, [r6, #8]
    caa4:	ldr	r0, [r7, #32]
    caa8:	ldr	r1, [r7, #40]	; 0x28
    caac:	ldr	r2, [r7, #48]	; 0x30
    cab0:	sub	r0, r0, r1
    cab4:	sub	r4, r0, r2
    cab8:	mov	r0, r7
    cabc:	mov	r1, #0
    cac0:	bl	cd4c <sas7bdat_col_text_subheader_length>
    cac4:	sub	r2, r4, r0
    cac8:	mov	r0, #0
    cacc:	mov	r1, #0
    cad0:	bl	cd10 <sas7bdat_column_text_init>
    cad4:	ldr	r1, [r6, #8]
    cad8:	str	r0, [r1]
    cadc:	mov	r0, #1
    cae0:	mov	r1, #24
    cae4:	bl	47d0 <calloc@plt>
    cae8:	mov	r8, r0
    caec:	ldr	r0, [r9, #28]
    caf0:	add	r0, r0, #4
    caf4:	asr	r1, r0, #31
    caf8:	strd	r0, [r8]
    cafc:	str	r0, [sp, #16]
    cb00:	mov	r1, #4
    cb04:	bl	47d0 <calloc@plt>
    cb08:	mov	r4, r0
    cb0c:	str	r0, [r8, #16]
    cb10:	mov	r0, r9
    cb14:	mov	r1, r7
    cb18:	mov	r2, r6
    cb1c:	bl	cd70 <sas7bdat_col_name_subheader_init>
    cb20:	mov	sl, r0
    cb24:	mov	r0, r9
    cb28:	mov	r1, r7
    cb2c:	bl	ce3c <sas7bdat_col_attrs_subheader_init>
    cb30:	str	r0, [sp, #24]
    cb34:	mov	r0, r9
    cb38:	mov	r1, r7
    cb3c:	bl	cf74 <sas7bdat_row_size_subheader_init>
    cb40:	str	r4, [sp, #8]
    cb44:	str	r0, [r4]
    cb48:	mov	r0, r9
    cb4c:	mov	r1, r7
    cb50:	bl	d044 <sas7bdat_col_size_subheader_init>
    cb54:	ldr	r1, [r8, #16]
    cb58:	str	r0, [r1, #4]
    cb5c:	ldr	r4, [r9, #28]
    cb60:	mov	r0, r4
    cb64:	mov	r1, #4
    cb68:	bl	47d0 <calloc@plt>
    cb6c:	cmp	r4, #1
    cb70:	mov	r4, r0
    cb74:	blt	cba4 <sas7bdat_subheader_array_init+0x13c>
    cb78:	mov	r0, r9
    cb7c:	mov	r1, r5
    cb80:	bl	4e18 <readstat_get_variable@plt>
    cb84:	mov	r1, r7
    cb88:	mov	r2, r6
    cb8c:	bl	d094 <sas7bdat_col_format_subheader_init>
    cb90:	str	r0, [r4, r5, lsl #2]
    cb94:	add	r5, r5, #1
    cb98:	ldr	r0, [r9, #28]
    cb9c:	cmp	r5, r0
    cba0:	blt	cb78 <sas7bdat_subheader_array_init+0x110>
    cba4:	str	r4, [sp, #20]
    cba8:	ldrd	r4, [r6]
    cbac:	ldr	r1, [sp, #16]
    cbb0:	adds	r0, r4, r1
    cbb4:	adc	r1, r5, r1, asr #31
    cbb8:	str	r1, [sp, #12]
    cbbc:	strd	r0, [r8]
    cbc0:	str	r0, [sp, #16]
    cbc4:	lsl	r1, r0, #2
    cbc8:	ldr	r0, [sp, #8]
    cbcc:	bl	4a70 <realloc@plt>
    cbd0:	str	r0, [sp, #8]
    cbd4:	str	r0, [r8, #16]
    cbd8:	subs	r0, r4, #1
    cbdc:	sbcs	r0, r5, #0
    cbe0:	blt	cc2c <sas7bdat_subheader_array_init+0x1c4>
    cbe4:	str	sl, [sp]
    cbe8:	str	r6, [sp, #4]
    cbec:	ldr	sl, [r6, #8]
    cbf0:	mov	r6, #0
    cbf4:	ldr	r1, [sl, r6, lsl #2]
    cbf8:	mov	r0, r7
    cbfc:	bl	d17c <sas7bdat_col_text_subheader_init>
    cc00:	ldr	r1, [r8, #16]
    cc04:	add	r1, r1, r6, lsl #2
    cc08:	str	r0, [r1, #8]
    cc0c:	add	r6, r6, #1
    cc10:	subs	r0, r6, r4
    cc14:	rscs	r0, r5, #0
    cc18:	blt	cbf4 <sas7bdat_subheader_array_init+0x18c>
    cc1c:	add	r4, r4, #2
    cc20:	ldr	r6, [sp, #4]
    cc24:	ldr	sl, [sp]
    cc28:	b	cc30 <sas7bdat_subheader_array_init+0x1c8>
    cc2c:	mov	r4, #2
    cc30:	mov	r0, r6
    cc34:	bl	d1ec <sas7bdat_column_text_array_free>
    cc38:	ldr	r0, [r8, #16]
    cc3c:	mov	r1, r0
    cc40:	str	sl, [r1, r4, lsl #2]!
    cc44:	ldr	r2, [sp, #24]
    cc48:	str	r2, [r1, #4]
    cc4c:	ldr	r1, [r9, #28]
    cc50:	cmp	r1, #1
    cc54:	ldr	r5, [sp, #20]
    cc58:	blt	cc7c <sas7bdat_subheader_array_init+0x214>
    cc5c:	add	r0, r0, r4, lsl #2
    cc60:	add	r0, r0, #8
    cc64:	ldr	r1, [r9, #28]
    cc68:	cmp	r1, #1
    cc6c:	movle	r1, #1
    cc70:	lsl	r2, r1, #2
    cc74:	mov	r1, r5
    cc78:	bl	4998 <memcpy@plt>
    cc7c:	mov	r0, r5
    cc80:	bl	4938 <free@plt>
    cc84:	mov	r0, r8
    cc88:	ldr	r2, [sp, #16]
    cc8c:	str	r2, [r0, #8]!
    cc90:	ldr	r3, [sp, #12]
    cc94:	str	r3, [r0, #4]
    cc98:	ldr	r1, [r9, #16]
    cc9c:	cmp	r1, #1
    cca0:	bne	ccc4 <sas7bdat_subheader_array_init+0x25c>
    cca4:	ldr	r1, [r9, #80]	; 0x50
    cca8:	adds	r2, r2, r1
    ccac:	adc	r3, r3, r1, asr #31
    ccb0:	strd	r2, [r0]
    ccb4:	lsl	r1, r2, #2
    ccb8:	ldr	r0, [sp, #8]
    ccbc:	bl	4a70 <realloc@plt>
    ccc0:	str	r0, [r8, #16]
    ccc4:	mov	r0, r8
    ccc8:	sub	sp, fp, #28
    cccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000ccd0 <sas7bdat_col_name_subheader_length>:
    ccd0:	ldr	r1, [r1, #4]
    ccd4:	mov	r2, #28
    ccd8:	cmp	r1, #0
    ccdc:	movweq	r2, #20
    cce0:	ldr	r0, [r0, #28]
    cce4:	add	r0, r2, r0, lsl #3
    cce8:	bx	lr

0000ccec <sas7bdat_col_attrs_subheader_length>:
    ccec:	ldr	r2, [r0, #28]
    ccf0:	mov	r0, #28
    ccf4:	add	r0, r0, r2, lsl #4
    ccf8:	add	r2, r2, r2, lsl #1
    ccfc:	mov	r3, #20
    cd00:	ldr	r1, [r1, #4]
    cd04:	cmp	r1, #0
    cd08:	addeq	r0, r3, r2, lsl #2
    cd0c:	bx	lr

0000cd10 <sas7bdat_column_text_init>:
    cd10:	push	{r4, r5, r6, r7, fp, lr}
    cd14:	add	fp, sp, #16
    cd18:	mov	r5, r2
    cd1c:	mov	r7, r1
    cd20:	mov	r6, r0
    cd24:	mov	r0, #1
    cd28:	mov	r1, #24
    cd2c:	bl	47d0 <calloc@plt>
    cd30:	mov	r4, r0
    cd34:	mov	r0, r5
    cd38:	bl	4b9c <malloc@plt>
    cd3c:	strd	r6, [r4, #16]
    cd40:	stm	r4, {r0, r5}
    cd44:	mov	r0, r4
    cd48:	pop	{r4, r5, r6, r7, fp, pc}

0000cd4c <sas7bdat_col_text_subheader_length>:
    cd4c:	ldr	r0, [r0, #4]
    cd50:	cmp	r1, #0
    cd54:	ldrne	r1, [r1, #8]
    cd58:	moveq	r1, #0
    cd5c:	mov	r2, #36	; 0x24
    cd60:	cmp	r0, #0
    cd64:	movweq	r2, #32
    cd68:	add	r0, r1, r2
    cd6c:	bx	lr

0000cd70 <sas7bdat_col_name_subheader_init>:
    cd70:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    cd74:	add	fp, sp, #24
    cd78:	sub	sp, sp, #8
    cd7c:	mov	r4, r2
    cd80:	mov	r6, r1
    cd84:	mov	r5, r0
    cd88:	bl	ccd0 <sas7bdat_col_name_subheader_length>
    cd8c:	mov	r7, r0
    cd90:	ldr	r0, [r6, #4]
    cd94:	mov	r6, #8
    cd98:	cmp	r0, #0
    cd9c:	movweq	r6, #4
    cda0:	mov	r0, r7
    cda4:	mov	r1, r6
    cda8:	bl	4e54 <sas_subheader_remainder@plt>
    cdac:	mov	r9, r0
    cdb0:	mvn	r0, #0
    cdb4:	mov	r1, r7
    cdb8:	bl	d240 <sas7bdat_subheader_init>
    cdbc:	mov	r8, r0
    cdc0:	ldr	r0, [r0, #4]
    cdc4:	add	r0, r0, r6
    cdc8:	strh	r9, [r0]
    cdcc:	ldr	r1, [r5, #28]
    cdd0:	cmp	r1, #1
    cdd4:	blt	ce30 <sas7bdat_col_name_subheader_init+0xc0>
    cdd8:	add	r6, r0, #8
    cddc:	mov	r7, #0
    cde0:	mov	r9, sp
    cde4:	mov	r0, r5
    cde8:	mov	r1, r7
    cdec:	bl	4e18 <readstat_get_variable@plt>
    cdf0:	bl	4e00 <readstat_variable_get_name@plt>
    cdf4:	mov	r2, r0
    cdf8:	mov	r0, r9
    cdfc:	mov	r1, r4
    ce00:	bl	d280 <sas7bdat_make_text_ref>
    ce04:	ldrh	r0, [sp]
    ce08:	strh	r0, [r6]
    ce0c:	ldrh	r0, [sp, #2]
    ce10:	strh	r0, [r6, #2]
    ce14:	ldrh	r0, [sp, #4]
    ce18:	strh	r0, [r6, #4]
    ce1c:	add	r6, r6, #8
    ce20:	add	r7, r7, #1
    ce24:	ldr	r0, [r5, #28]
    ce28:	cmp	r7, r0
    ce2c:	blt	cde4 <sas7bdat_col_name_subheader_init+0x74>
    ce30:	mov	r0, r8
    ce34:	sub	sp, fp, #24
    ce38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000ce3c <sas7bdat_col_attrs_subheader_init>:
    ce3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ce40:	add	fp, sp, #28
    ce44:	sub	sp, sp, #12
    ce48:	mov	r5, r1
    ce4c:	mov	r7, r0
    ce50:	bl	ccec <sas7bdat_col_attrs_subheader_length>
    ce54:	mov	r4, r0
    ce58:	str	r5, [sp, #8]
    ce5c:	ldr	r0, [r5, #4]
    ce60:	mov	r6, #8
    ce64:	cmp	r0, #0
    ce68:	movweq	r6, #4
    ce6c:	mov	r0, r4
    ce70:	mov	r1, r6
    ce74:	bl	4e54 <sas_subheader_remainder@plt>
    ce78:	mov	r5, r0
    ce7c:	mvn	r0, #3
    ce80:	mov	r1, r4
    ce84:	mov	r4, r7
    ce88:	bl	d240 <sas7bdat_subheader_init>
    ce8c:	str	r0, [sp]
    ce90:	ldr	r0, [r0, #4]
    ce94:	add	r0, r0, r6
    ce98:	strh	r5, [r0]
    ce9c:	ldr	r1, [r7, #28]
    cea0:	cmp	r1, #1
    cea4:	blt	cf68 <sas7bdat_col_attrs_subheader_init+0x12c>
    cea8:	add	sl, r0, #8
    ceac:	mov	r8, #0
    ceb0:	mov	r9, #0
    ceb4:	mov	r7, #0
    ceb8:	str	r4, [sp, #4]
    cebc:	mov	r0, r4
    cec0:	mov	r1, r7
    cec4:	bl	4e18 <readstat_get_variable@plt>
    cec8:	mov	r6, r0
    cecc:	bl	4e00 <readstat_variable_get_name@plt>
    ced0:	mov	r5, r0
    ced4:	mov	r0, r6
    ced8:	bl	4c68 <readstat_variable_get_type@plt>
    cedc:	mov	r4, r0
    cee0:	mov	r0, r5
    cee4:	bl	4c8c <strlen@plt>
    cee8:	cmp	r0, #9
    ceec:	mov	r5, #2048	; 0x800
    cef0:	movwcc	r5, #4
    cef4:	ldr	r0, [sp, #8]
    cef8:	ldr	r0, [r0, #4]
    cefc:	cmp	r0, #0
    cf00:	str	r8, [sl]
    cf04:	moveq	r0, #4
    cf08:	strne	r9, [sl, #4]
    cf0c:	movne	r0, #8
    cf10:	mov	r1, r4
    cf14:	add	r4, sl, r0
    cf18:	cmp	r1, #0
    cf1c:	beq	cf30 <sas7bdat_col_attrs_subheader_init+0xf4>
    cf20:	mov	r0, #1
    cf24:	strb	r0, [r4, #6]
    cf28:	mov	r0, #8
    cf2c:	b	cf40 <sas7bdat_col_attrs_subheader_init+0x104>
    cf30:	mov	r0, #2
    cf34:	strb	r0, [r4, #6]
    cf38:	mov	r0, r6
    cf3c:	bl	4d58 <readstat_variable_get_storage_width@plt>
    cf40:	strh	r5, [r4, #4]
    cf44:	str	r0, [r4]
    cf48:	adds	r8, r8, r0
    cf4c:	adc	r9, r9, #0
    cf50:	add	r7, r7, #1
    cf54:	add	sl, r4, #8
    cf58:	ldr	r4, [sp, #4]
    cf5c:	ldr	r0, [r4, #28]
    cf60:	cmp	r7, r0
    cf64:	blt	cebc <sas7bdat_col_attrs_subheader_init+0x80>
    cf68:	ldr	r0, [sp]
    cf6c:	sub	sp, fp, #28
    cf70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000cf74 <sas7bdat_row_size_subheader_init>:
    cf74:	push	{r4, r5, r6, r7, fp, lr}
    cf78:	add	fp, sp, #16
    cf7c:	mov	r6, r1
    cf80:	mov	r5, r0
    cf84:	ldr	r0, [r1, #4]
    cf88:	mov	r1, #808	; 0x328
    cf8c:	cmp	r0, #0
    cf90:	movweq	r1, #480	; 0x1e0
    cf94:	movw	r0, #63479	; 0xf7f7
    cf98:	movt	r0, #63479	; 0xf7f7
    cf9c:	bl	d240 <sas7bdat_subheader_init>
    cfa0:	mov	r4, r0
    cfa4:	ldr	r7, [r6, #4]
    cfa8:	mov	r0, r5
    cfac:	bl	c954 <sas7bdat_row_length>
    cfb0:	cmp	r7, #0
    cfb4:	beq	d010 <sas7bdat_row_size_subheader_init+0x9c>
    cfb8:	ldrd	r2, [r6, #32]
    cfbc:	ldr	r1, [r4, #4]
    cfc0:	ldr	r7, [r5, #28]
    cfc4:	ldr	r6, [r5, #80]	; 0x50
    cfc8:	str	r6, [r1, #48]	; 0x30
    cfcc:	mov	r5, #0
    cfd0:	str	r5, [r1, #44]	; 0x2c
    cfd4:	str	r0, [r1, #40]	; 0x28
    cfd8:	str	r7, [r1, #72]	; 0x48
    cfdc:	str	r3, [r1, #108]	; 0x6c
    cfe0:	str	r2, [r1, #104]	; 0x68
    cfe4:	mvn	r0, #0
    cfe8:	str	r0, [r1, #140]	; 0x8c
    cfec:	str	r0, [r1, #136]	; 0x88
    cff0:	str	r0, [r1, #132]	; 0x84
    cff4:	str	r0, [r1, #128]	; 0x80
    cff8:	asr	r0, r6, #31
    cffc:	str	r0, [r1, #52]	; 0x34
    d000:	asr	r0, r7, #31
    d004:	str	r0, [r1, #76]	; 0x4c
    d008:	mov	r0, r4
    d00c:	pop	{r4, r5, r6, r7, fp, pc}
    d010:	ldr	r1, [r6, #32]
    d014:	ldr	r2, [r5, #28]
    d018:	ldr	r3, [r5, #80]	; 0x50
    d01c:	ldr	r7, [r4, #4]
    d020:	mvn	r6, #0
    d024:	str	r6, [r7, #68]	; 0x44
    d028:	str	r6, [r7, #64]	; 0x40
    d02c:	str	r3, [r7, #24]
    d030:	str	r0, [r7, #20]
    d034:	str	r2, [r7, #36]	; 0x24
    d038:	str	r1, [r7, #52]	; 0x34
    d03c:	mov	r0, r4
    d040:	pop	{r4, r5, r6, r7, fp, pc}

0000d044 <sas7bdat_col_size_subheader_init>:
    d044:	push	{r4, r5, fp, lr}
    d048:	add	fp, sp, #8
    d04c:	mov	r4, r1
    d050:	mov	r5, r0
    d054:	ldr	r0, [r1, #4]
    d058:	mov	r1, #24
    d05c:	cmp	r0, #0
    d060:	movweq	r1, #12
    d064:	movw	r0, #63222	; 0xf6f6
    d068:	movt	r0, #63222	; 0xf6f6
    d06c:	bl	d240 <sas7bdat_subheader_init>
    d070:	ldr	r1, [r5, #28]
    d074:	ldr	r2, [r4, #4]
    d078:	cmp	r2, #0
    d07c:	ldr	r2, [r0, #4]
    d080:	streq	r1, [r2, #4]
    d084:	asrne	r3, r1, #31
    d088:	strne	r3, [r2, #12]
    d08c:	strne	r1, [r2, #8]
    d090:	pop	{r4, r5, fp, pc}

0000d094 <sas7bdat_col_format_subheader_init>:
    d094:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    d098:	add	fp, sp, #24
    d09c:	sub	sp, sp, #16
    d0a0:	mov	r8, r2
    d0a4:	mov	r5, r1
    d0a8:	mov	r6, r0
    d0ac:	ldr	r0, [r1, #4]
    d0b0:	mov	r1, #64	; 0x40
    d0b4:	cmp	r0, #0
    d0b8:	movweq	r1, #52	; 0x34
    d0bc:	movw	r0, #64510	; 0xfbfe
    d0c0:	movt	r0, #65535	; 0xffff
    d0c4:	bl	d240 <sas7bdat_subheader_init>
    d0c8:	mov	r9, r0
    d0cc:	mov	r0, r6
    d0d0:	bl	4968 <readstat_variable_get_format@plt>
    d0d4:	mov	r7, r0
    d0d8:	mov	r0, r6
    d0dc:	bl	4e9c <readstat_variable_get_label@plt>
    d0e0:	mov	r6, r0
    d0e4:	ldr	r0, [r5, #4]
    d0e8:	mov	r5, #40	; 0x28
    d0ec:	cmp	r0, #0
    d0f0:	movwne	r5, #52	; 0x34
    d0f4:	mov	r4, #34	; 0x22
    d0f8:	movwne	r4, #46	; 0x2e
    d0fc:	cmp	r7, #0
    d100:	beq	d130 <sas7bdat_col_format_subheader_init+0x9c>
    d104:	add	r0, sp, #8
    d108:	mov	r1, r8
    d10c:	mov	r2, r7
    d110:	bl	d280 <sas7bdat_make_text_ref>
    d114:	ldr	r0, [r9, #4]
    d118:	ldrh	r1, [sp, #8]
    d11c:	strh	r1, [r0, r4]!
    d120:	ldrh	r1, [sp, #10]
    d124:	strh	r1, [r0, #2]
    d128:	ldrh	r1, [sp, #12]
    d12c:	strh	r1, [r0, #4]
    d130:	cmp	r6, #0
    d134:	beq	d170 <sas7bdat_col_format_subheader_init+0xdc>
    d138:	mov	r0, sp
    d13c:	mov	r1, r8
    d140:	mov	r2, r6
    d144:	bl	d280 <sas7bdat_make_text_ref>
    d148:	ldr	r0, [r9, #4]
    d14c:	ldrh	r1, [sp]
    d150:	mov	r2, r0
    d154:	strh	r1, [r2, r5]!
    d158:	orr	r1, r5, #2
    d15c:	add	r0, r0, r1
    d160:	ldrh	r1, [sp, #2]
    d164:	strh	r1, [r0]
    d168:	ldrh	r0, [sp, #4]
    d16c:	strh	r0, [r2, #4]
    d170:	mov	r0, r9
    d174:	sub	sp, fp, #24
    d178:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000d17c <sas7bdat_col_text_subheader_init>:
    d17c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    d180:	add	fp, sp, #24
    d184:	mov	r4, r1
    d188:	ldr	r8, [r0, #4]
    d18c:	bl	cd4c <sas7bdat_col_text_subheader_length>
    d190:	mov	r5, r0
    d194:	mvn	r0, #2
    d198:	mov	r1, r5
    d19c:	bl	d240 <sas7bdat_subheader_init>
    d1a0:	mov	r6, r0
    d1a4:	mov	r7, #8
    d1a8:	cmp	r8, #0
    d1ac:	movweq	r7, #4
    d1b0:	mov	r0, r5
    d1b4:	mov	r1, r7
    d1b8:	bl	4e54 <sas_subheader_remainder@plt>
    d1bc:	ldr	r1, [r6, #4]
    d1c0:	strh	r0, [r1, r7]!
    d1c4:	movw	r0, #8224	; 0x2020
    d1c8:	movt	r0, #8224	; 0x2020
    d1cc:	str	r0, [r1, #16]
    d1d0:	str	r0, [r1, #12]
    d1d4:	add	r0, r1, #28
    d1d8:	ldr	r1, [r4]
    d1dc:	ldr	r2, [r4, #8]
    d1e0:	bl	4998 <memcpy@plt>
    d1e4:	mov	r0, r6
    d1e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000d1ec <sas7bdat_column_text_array_free>:
    d1ec:	push	{r4, r5, fp, lr}
    d1f0:	add	fp, sp, #8
    d1f4:	mov	r4, r0
    d1f8:	ldm	r0, {r1, r2}
    d1fc:	ldr	r0, [r0, #8]
    d200:	subs	r1, r1, #1
    d204:	sbcs	r1, r2, #0
    d208:	blt	d230 <sas7bdat_column_text_array_free+0x44>
    d20c:	mov	r5, #0
    d210:	ldr	r0, [r0, r5, lsl #2]
    d214:	bl	d34c <sas7bdat_column_text_free>
    d218:	add	r5, r5, #1
    d21c:	ldm	r4, {r1, r2}
    d220:	ldr	r0, [r4, #8]
    d224:	subs	r1, r5, r1
    d228:	rscs	r1, r2, #0
    d22c:	blt	d210 <sas7bdat_column_text_array_free+0x24>
    d230:	bl	4938 <free@plt>
    d234:	mov	r0, r4
    d238:	pop	{r4, r5, fp, lr}
    d23c:	b	4938 <free@plt>

0000d240 <sas7bdat_subheader_init>:
    d240:	push	{r4, r5, r6, sl, fp, lr}
    d244:	add	fp, sp, #16
    d248:	mov	r4, r1
    d24c:	mov	r5, r0
    d250:	mov	r0, #1
    d254:	mov	r1, #20
    d258:	bl	47d0 <calloc@plt>
    d25c:	mov	r6, r0
    d260:	str	r5, [r0]
    d264:	str	r4, [r0, #8]
    d268:	mov	r0, #1
    d26c:	mov	r1, r4
    d270:	bl	47d0 <calloc@plt>
    d274:	str	r0, [r6, #4]
    d278:	mov	r0, r6
    d27c:	pop	{r4, r5, r6, sl, fp, pc}

0000d280 <sas7bdat_make_text_ref>:
    d280:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    d284:	add	fp, sp, #24
    d288:	mov	r8, r2
    d28c:	mov	r4, r1
    d290:	mov	r5, r0
    d294:	mov	r0, r2
    d298:	bl	4c8c <strlen@plt>
    d29c:	mov	r9, r0
    d2a0:	ldr	r0, [r4]
    d2a4:	ldr	r1, [r4, #8]
    d2a8:	add	r1, r1, r0, lsl #2
    d2ac:	ldr	r7, [r1, #-4]
    d2b0:	ldmib	r7, {r1, r2}
    d2b4:	add	r3, r9, #3
    d2b8:	bic	r6, r3, #3
    d2bc:	add	r2, r2, r6
    d2c0:	cmp	r2, r1
    d2c4:	bls	d310 <sas7bdat_make_text_ref+0x90>
    d2c8:	ldr	r1, [r4, #4]
    d2cc:	adds	r2, r0, #1
    d2d0:	adc	r3, r1, #0
    d2d4:	strd	r2, [r4]
    d2d8:	ldr	r0, [r4, #8]
    d2dc:	lsl	r1, r2, #2
    d2e0:	bl	4a70 <realloc@plt>
    d2e4:	str	r0, [r4, #8]
    d2e8:	ldrd	r0, [r4]
    d2ec:	subs	r0, r0, #1
    d2f0:	sbc	r1, r1, #0
    d2f4:	ldr	r2, [r7, #4]
    d2f8:	bl	cd10 <sas7bdat_column_text_init>
    d2fc:	mov	r7, r0
    d300:	ldr	r0, [r4]
    d304:	ldr	r1, [r4, #8]
    d308:	add	r0, r1, r0, lsl #2
    d30c:	str	r7, [r0, #-4]
    d310:	ldrh	r0, [r7, #16]
    d314:	strh	r0, [r5]
    d318:	ldr	r0, [r7, #8]
    d31c:	strh	r9, [r5, #4]
    d320:	add	r1, r0, #28
    d324:	strh	r1, [r5, #2]
    d328:	ldr	r1, [r7]
    d32c:	add	r0, r1, r0
    d330:	mov	r1, r8
    d334:	mov	r2, r6
    d338:	bl	4d4c <strncpy@plt>
    d33c:	ldr	r0, [r7, #8]
    d340:	add	r0, r0, r6
    d344:	str	r0, [r7, #8]
    d348:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000d34c <sas7bdat_column_text_free>:
    d34c:	push	{r4, sl, fp, lr}
    d350:	add	fp, sp, #8
    d354:	mov	r4, r0
    d358:	ldr	r0, [r0]
    d35c:	bl	4938 <free@plt>
    d360:	mov	r0, r4
    d364:	pop	{r4, sl, fp, lr}
    d368:	b	4938 <free@plt>

0000d36c <sas7bdat_rows_per_page>:
    d36c:	push	{r4, sl, fp, lr}
    d370:	add	fp, sp, #8
    d374:	mov	r4, r1
    d378:	bl	c954 <sas7bdat_row_length>
    d37c:	mov	r2, r0
    d380:	add	r4, r4, #32
    d384:	ldm	r4, {r0, r1, r3, r4}
    d388:	subs	r0, r0, r3
    d38c:	sbc	r1, r1, r4
    d390:	mov	r3, #0
    d394:	bl	24c88 <__aeabi_ldivmod>
    d398:	pop	{r4, sl, fp, pc}

0000d39c <sas7bdat_count_meta_pages>:
    d39c:	push	{r4, sl, fp, lr}
    d3a0:	add	fp, sp, #8
    d3a4:	ldr	r2, [r0, #300]	; 0x12c
    d3a8:	ldr	r0, [r2, #4]
    d3ac:	ldr	r1, [r0]
    d3b0:	sub	r1, r1, #1
    d3b4:	cmp	r1, #0
    d3b8:	movlt	r0, #1
    d3bc:	poplt	{r4, sl, fp, pc}
    d3c0:	ldr	r2, [r2]
    d3c4:	ldr	lr, [r2, #32]
    d3c8:	ldr	r3, [r2, #40]	; 0x28
    d3cc:	ldr	ip, [r2, #48]	; 0x30
    d3d0:	sub	r2, lr, r3
    d3d4:	ldr	lr, [r0, #16]
    d3d8:	mov	r0, #1
    d3dc:	mov	r3, r2
    d3e0:	ldr	r4, [lr, r1, lsl #2]
    d3e4:	ldr	r4, [r4, #8]
    d3e8:	add	r4, r4, ip
    d3ec:	cmp	r4, r3
    d3f0:	movhi	r3, r2
    d3f4:	sub	r3, r3, r4
    d3f8:	addhi	r0, r0, #1
    d3fc:	sub	r1, r1, #1
    d400:	cmn	r1, #1
    d404:	bgt	d3e0 <sas7bdat_count_meta_pages+0x44>
    d408:	pop	{r4, sl, fp, pc}

0000d40c <sas7bdat_count_data_pages>:
    d40c:	push	{r4, sl, fp, lr}
    d410:	add	fp, sp, #8
    d414:	mov	r4, r0
    d418:	ldr	r2, [r0, #16]
    d41c:	mov	r0, #0
    d420:	cmp	r2, #1
    d424:	popeq	{r4, sl, fp, pc}
    d428:	mov	r0, r4
    d42c:	bl	d36c <sas7bdat_rows_per_page>
    d430:	ldr	r1, [r4, #80]	; 0x50
    d434:	add	r1, r0, r1
    d438:	sub	r1, r1, #1
    d43c:	sdiv	r0, r1, r0
    d440:	pop	{r4, sl, fp, pc}

0000d444 <sas7bdat_emit_header>:
    d444:	push	{r4, r5, r6, sl, fp, lr}
    d448:	add	fp, sp, #16
    d44c:	sub	sp, sp, #328	; 0x148
    d450:	mov	r4, r1
    d454:	mov	r5, r0
    d458:	add	r6, sp, #160	; 0xa0
    d45c:	mov	r0, r6
    d460:	mov	r1, #0
    d464:	mov	r2, #156	; 0x9c
    d468:	bl	4d28 <memset@plt>
    d46c:	ldr	r0, [r4, #4]
    d470:	mov	r1, #34	; 0x22
    d474:	strb	r1, [sp, #195]	; 0xc3
    d478:	mov	r1, #51	; 0x33
    d47c:	cmp	r0, #0
    d480:	movweq	r1, #34	; 0x22
    d484:	strb	r1, [sp, #192]	; 0xc0
    d488:	bl	492c <machine_is_little_endian@plt>
    d48c:	ldr	r1, [pc, #152]	; d52c <sas7bdat_emit_header+0xe8>
    d490:	ldr	r1, [pc, r1]
    d494:	vld1.8	{d16-d17}, [r1]!
    d498:	vld1.8	{d18-d19}, [r1]
    d49c:	add	r1, r6, #16
    d4a0:	vst1.64	{d18-d19}, [r1]
    d4a4:	movw	r1, #18758	; 0x4946
    d4a8:	movt	r1, #17740	; 0x454c
    d4ac:	str	r1, [sp, #248]	; 0xf8
    d4b0:	movw	r1, #16723	; 0x4153
    d4b4:	movt	r1, #8275	; 0x2053
    d4b8:	str	r1, [sp, #244]	; 0xf4
    d4bc:	movw	r1, #32288	; 0x7e20
    d4c0:	movt	r1, #32288	; 0x7e20
    d4c4:	str	r1, [sp, #320]	; 0x140
    d4c8:	movw	r1, #16708	; 0x4144
    d4cc:	movt	r1, #16724	; 0x4154
    d4d0:	str	r1, [sp, #316]	; 0x13c
    d4d4:	mov	r1, #49	; 0x31
    d4d8:	strb	r1, [sp, #199]	; 0xc7
    d4dc:	mov	r1, #20
    d4e0:	strb	r1, [sp, #230]	; 0xe6
    d4e4:	cmp	r0, #0
    d4e8:	movwne	r0, #1
    d4ec:	strb	r0, [sp, #197]	; 0xc5
    d4f0:	mov	r0, #8
    d4f4:	vst1.64	{d16-d17}, [r6], r0
    d4f8:	movw	r0, #156	; 0x9c
    d4fc:	mov	r1, sp
    d500:	ldr	r2, [r6], #4
    d504:	str	r2, [r1], #4
    d508:	subs	r0, r0, #4
    d50c:	bne	d500 <sas7bdat_emit_header+0xbc>
    d510:	ldr	r2, [sp, #160]	; 0xa0
    d514:	ldr	r3, [sp, #164]	; 0xa4
    d518:	mov	r0, r5
    d51c:	mov	r1, r4
    d520:	bl	4b3c <sas_write_header@plt>
    d524:	sub	sp, fp, #16
    d528:	pop	{r4, r5, r6, sl, fp, pc}
    d52c:	.word	0x00037e68

0000d530 <sas7bdat_emit_meta_pages>:
    d530:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d534:	add	fp, sp, #28
    d538:	sub	sp, sp, #36	; 0x24
    d53c:	str	r0, [sp, #4]
    d540:	ldr	r0, [r0, #300]	; 0x12c
    d544:	ldm	r0, {r4, r7}
    d548:	mov	r5, r4
    d54c:	ldr	r0, [r5, #32]!
    d550:	bl	4b9c <malloc@plt>
    d554:	str	r0, [sp, #24]
    d558:	add	r0, r4, #48	; 0x30
    d55c:	str	r0, [sp, #12]
    d560:	str	r4, [sp, #20]
    d564:	add	r0, r4, #40	; 0x28
    d568:	str	r0, [sp, #8]
    d56c:	mov	r8, #0
    d570:	mov	r0, #0
    d574:	str	r0, [sp, #32]
    d578:	str	r5, [sp]
    d57c:	ldrd	r0, [r7]
    d580:	subs	r0, r8, r0
    d584:	ldr	r0, [sp, #32]
    d588:	sbcs	r0, r0, r1
    d58c:	bge	d7a4 <sas7bdat_emit_meta_pages+0x274>
    d590:	ldr	r2, [r5]
    d594:	ldr	r4, [sp, #24]
    d598:	mov	r0, r4
    d59c:	mov	r1, #0
    d5a0:	bl	4d28 <memset@plt>
    d5a4:	ldr	r0, [sp, #8]
    d5a8:	ldr	r0, [r0]
    d5ac:	add	sl, r4, r0
    d5b0:	ldr	r1, [sp, #12]
    d5b4:	ldr	r3, [r1]
    d5b8:	ldr	r4, [r5]
    d5bc:	mov	r1, #0
    d5c0:	strh	r1, [sl, #-8]
    d5c4:	sub	r1, r4, r0
    d5c8:	ldr	r2, [r7, #16]
    d5cc:	ldr	r2, [r2, r8, lsl #2]
    d5d0:	ldr	r2, [r2, #8]
    d5d4:	add	r2, r2, r3
    d5d8:	cmp	r2, r1
    d5dc:	bhi	d7ac <sas7bdat_emit_meta_pages+0x27c>
    d5e0:	ldm	r7, {r2, r5}
    d5e4:	mov	r6, #0
    d5e8:	subs	r1, r8, r2
    d5ec:	ldr	r1, [sp, #32]
    d5f0:	sbcs	r1, r1, r5
    d5f4:	bge	d754 <sas7bdat_emit_meta_pages+0x224>
    d5f8:	sub	r5, r3, r0
    d5fc:	mov	r6, #0
    d600:	str	r3, [sp, #28]
    d604:	sub	r5, r5, r3
    d608:	add	r1, r4, r5
    d60c:	mov	r9, r7
    d610:	ldr	r0, [r7, #16]
    d614:	ldr	r7, [r0, r8, lsl #2]
    d618:	ldr	r0, [r7, #8]
    d61c:	add	r2, r0, r3
    d620:	cmp	r2, r1
    d624:	bhi	d750 <sas7bdat_emit_meta_pages+0x220>
    d628:	sub	r1, r4, r0
    d62c:	ldr	ip, [r7]
    d630:	ldr	r2, [sp, #20]
    d634:	ldr	r2, [r2, #4]
    d638:	cmp	r2, #0
    d63c:	beq	d67c <sas7bdat_emit_meta_pages+0x14c>
    d640:	mov	r2, #0
    d644:	str	r2, [sl, #12]
    d648:	str	r0, [sl, #8]
    d64c:	str	r2, [sl, #4]
    d650:	str	r1, [sl]
    d654:	ldr	r0, [r7, #12]
    d658:	cmp	r0, #0
    d65c:	beq	d6ac <sas7bdat_emit_meta_pages+0x17c>
    d660:	ldr	r0, [r7, #16]
    d664:	mov	r1, #1
    d668:	strb	r1, [sl, #17]
    d66c:	cmp	r0, #0
    d670:	movwne	r0, #4
    d674:	strb	r0, [sl, #16]
    d678:	b	d708 <sas7bdat_emit_meta_pages+0x1d8>
    d67c:	str	r0, [sl, #4]
    d680:	str	r1, [sl]
    d684:	ldr	r0, [r7, #12]
    d688:	cmp	r0, #0
    d68c:	beq	d6d8 <sas7bdat_emit_meta_pages+0x1a8>
    d690:	ldr	r0, [r7, #16]
    d694:	mov	r1, #1
    d698:	strb	r1, [sl, #9]
    d69c:	cmp	r0, #0
    d6a0:	movwne	r0, #4
    d6a4:	strb	r0, [sl, #8]
    d6a8:	b	d708 <sas7bdat_emit_meta_pages+0x1d8>
    d6ac:	ldr	r0, [r7]
    d6b0:	str	ip, [sp, #16]
    d6b4:	bl	d7c4 <sas7bdat_subheader_type>
    d6b8:	ldr	r2, [sp, #16]
    d6bc:	strb	r0, [sl, #17]
    d6c0:	cmp	r2, #-16777216	; 0xff000000
    d6c4:	bcc	d6fc <sas7bdat_emit_meta_pages+0x1cc>
    d6c8:	ldr	r0, [r7, #4]
    d6cc:	asr	r1, r2, #31
    d6d0:	str	r1, [r0, #4]
    d6d4:	b	d700 <sas7bdat_emit_meta_pages+0x1d0>
    d6d8:	ldr	r0, [r7]
    d6dc:	str	ip, [sp, #16]
    d6e0:	bl	d7c4 <sas7bdat_subheader_type>
    d6e4:	ldr	r3, [sp, #28]
    d6e8:	strb	r0, [sl, #9]
    d6ec:	ldr	r0, [r7, #4]
    d6f0:	ldr	r1, [sp, #16]
    d6f4:	str	r1, [r0]
    d6f8:	b	d708 <sas7bdat_emit_meta_pages+0x1d8>
    d6fc:	ldr	r0, [r7, #4]
    d700:	str	r2, [r0]
    d704:	ldr	r3, [sp, #28]
    d708:	add	sl, sl, r3
    d70c:	ldmib	r7, {r1, r2}
    d710:	sub	r4, r4, r2
    d714:	ldr	r0, [sp, #24]
    d718:	add	r0, r0, r4
    d71c:	bl	4998 <memcpy@plt>
    d720:	ldr	r3, [sp, #28]
    d724:	adds	r8, r8, #1
    d728:	ldr	r2, [sp, #32]
    d72c:	adc	r2, r2, #0
    d730:	add	r6, r6, #1
    d734:	mov	r7, r9
    d738:	ldrd	r0, [r9]
    d73c:	subs	r0, r8, r0
    d740:	str	r2, [sp, #32]
    d744:	sbcs	r0, r2, r1
    d748:	blt	d604 <sas7bdat_emit_meta_pages+0xd4>
    d74c:	b	d754 <sas7bdat_emit_meta_pages+0x224>
    d750:	mov	r7, r9
    d754:	ldr	r0, [sp, #20]
    d758:	ldr	r0, [r0, #4]
    d75c:	cmp	r0, #0
    d760:	mov	r0, #34	; 0x22
    d764:	movweq	r0, #18
    d768:	ldr	r1, [sp, #24]
    d76c:	add	r0, r1, r0
    d770:	strh	r6, [r0]
    d774:	mov	r0, #36	; 0x24
    d778:	movweq	r0, #20
    d77c:	add	r0, r1, r0
    d780:	strh	r6, [r0]
    d784:	ldr	r5, [sp]
    d788:	ldr	r2, [r5]
    d78c:	ldr	r0, [sp, #4]
    d790:	bl	4ef0 <readstat_write_bytes@plt>
    d794:	cmp	r0, #0
    d798:	beq	d57c <sas7bdat_emit_meta_pages+0x4c>
    d79c:	mov	r6, r0
    d7a0:	b	d7b0 <sas7bdat_emit_meta_pages+0x280>
    d7a4:	mov	r6, #0
    d7a8:	b	d7b0 <sas7bdat_emit_meta_pages+0x280>
    d7ac:	mov	r6, #35	; 0x23
    d7b0:	ldr	r0, [sp, #24]
    d7b4:	bl	4938 <free@plt>
    d7b8:	mov	r0, r6
    d7bc:	sub	sp, fp, #28
    d7c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000d7c4 <sas7bdat_subheader_type>:
    d7c4:	add	r2, r0, #4
    d7c8:	cmp	r2, #3
    d7cc:	bhi	d7e4 <sas7bdat_subheader_type+0x20>
    d7d0:	mov	r1, #1
    d7d4:	cmp	r2, #2
    d7d8:	beq	d7e4 <sas7bdat_subheader_type+0x20>
    d7dc:	mov	r0, r1
    d7e0:	bx	lr
    d7e4:	add	r0, r0, #2
    d7e8:	clz	r0, r0
    d7ec:	lsr	r1, r0, #5
    d7f0:	mov	r0, r1
    d7f4:	bx	lr

0000d7f8 <sas7bdat_subheader_array_free>:
    d7f8:	push	{r4, r5, fp, lr}
    d7fc:	add	fp, sp, #8
    d800:	mov	r4, r0
    d804:	ldrd	r2, [r0]
    d808:	ldr	r0, [r0, #16]
    d80c:	subs	r1, r2, #1
    d810:	sbcs	r1, r3, #0
    d814:	blt	d83c <sas7bdat_subheader_array_free+0x44>
    d818:	mov	r5, #0
    d81c:	ldr	r0, [r0, r5, lsl #2]
    d820:	bl	d84c <sas7bdat_subheader_free>
    d824:	add	r5, r5, #1
    d828:	ldrd	r2, [r4]
    d82c:	ldr	r0, [r4, #16]
    d830:	subs	r1, r5, r2
    d834:	rscs	r1, r3, #0
    d838:	blt	d81c <sas7bdat_subheader_array_free+0x24>
    d83c:	bl	4938 <free@plt>
    d840:	mov	r0, r4
    d844:	pop	{r4, r5, fp, lr}
    d848:	b	4938 <free@plt>

0000d84c <sas7bdat_subheader_free>:
    d84c:	cmp	r0, #0
    d850:	bxeq	lr
    d854:	push	{r4, sl, fp, lr}
    d858:	add	fp, sp, #8
    d85c:	mov	r4, r0
    d860:	ldr	r0, [r0, #4]
    d864:	cmp	r0, #0
    d868:	beq	d870 <sas7bdat_subheader_free+0x24>
    d86c:	bl	4938 <free@plt>
    d870:	mov	r0, r4
    d874:	pop	{r4, sl, fp, lr}
    d878:	b	4938 <free@plt>

0000d87c <sas7bdat_write_row_uncompressed>:
    d87c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d880:	add	fp, sp, #28
    d884:	sub	sp, sp, #12
    d888:	mov	r8, r3
    d88c:	mov	r9, r2
    d890:	mov	r5, r1
    d894:	mov	r6, r0
    d898:	ldr	r7, [r1]
    d89c:	mov	r1, r7
    d8a0:	bl	d36c <sas7bdat_rows_per_page>
    d8a4:	mov	r4, r0
    d8a8:	ldr	r0, [r6, #84]	; 0x54
    d8ac:	sdiv	r1, r0, r4
    d8b0:	mls	r0, r1, r4, r0
    d8b4:	cmp	r0, #0
    d8b8:	beq	d8d4 <sas7bdat_write_row_uncompressed+0x58>
    d8bc:	mov	r0, r6
    d8c0:	mov	r1, r9
    d8c4:	mov	r2, r8
    d8c8:	bl	4ef0 <readstat_write_bytes@plt>
    d8cc:	sub	sp, fp, #28
    d8d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d8d4:	ldr	r1, [r5]
    d8d8:	mov	r0, r6
    d8dc:	bl	4f14 <sas_fill_page@plt>
    d8e0:	cmp	r0, #0
    d8e4:	bne	d960 <sas7bdat_write_row_uncompressed+0xe4>
    d8e8:	ldr	r0, [r6, #80]	; 0x50
    d8ec:	str	r0, [fp, #-40]	; 0xffffffd8
    d8f0:	ldr	sl, [r6, #84]	; 0x54
    d8f4:	ldr	r2, [r7, #40]	; 0x28
    d8f8:	str	sp, [fp, #-36]	; 0xffffffdc
    d8fc:	add	r0, r2, #7
    d900:	bic	r0, r0, #7
    d904:	sub	r5, sp, r0
    d908:	mov	sp, r5
    d90c:	mov	r0, r5
    d910:	mov	r1, #0
    d914:	bl	4d28 <memset@plt>
    d918:	ldr	r0, [fp, #-40]	; 0xffffffd8
    d91c:	sub	r0, r0, sl
    d920:	cmp	r0, r4
    d924:	movlt	r4, r0
    d928:	ldr	r0, [r7, #40]	; 0x28
    d92c:	add	r0, r5, r0
    d930:	strh	r4, [r0, #-6]
    d934:	ldr	r0, [r7, #40]	; 0x28
    d938:	add	r0, r5, r0
    d93c:	mov	r1, #256	; 0x100
    d940:	strh	r1, [r0, #-8]
    d944:	ldr	r2, [r7, #40]	; 0x28
    d948:	mov	r0, r6
    d94c:	mov	r1, r5
    d950:	bl	4ef0 <readstat_write_bytes@plt>
    d954:	ldr	sp, [fp, #-36]	; 0xffffffdc
    d958:	cmp	r0, #0
    d95c:	beq	d8bc <sas7bdat_write_row_uncompressed+0x40>
    d960:	sub	sp, fp, #28
    d964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000d968 <sas7bdat_write_row_compressed>:
    d968:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    d96c:	add	fp, sp, #24
    d970:	mov	r5, r2
    d974:	mov	r7, r1
    d978:	mov	r8, r0
    d97c:	mov	r0, r1
    d980:	mov	r1, r2
    d984:	bl	4f20 <sas_rle_compressed_len@plt>
    d988:	cmp	r0, r5
    d98c:	bcs	d9d8 <sas7bdat_write_row_compressed+0x70>
    d990:	mov	r4, r0
    d994:	mov	r0, #0
    d998:	mov	r1, r4
    d99c:	bl	d240 <sas7bdat_subheader_init>
    d9a0:	mov	r6, r0
    d9a4:	mov	r0, #1
    d9a8:	str	r0, [r6, #12]
    d9ac:	str	r0, [r6, #16]
    d9b0:	ldmib	r6, {r0, r1}
    d9b4:	mov	r2, r7
    d9b8:	mov	r3, r5
    d9bc:	bl	4f74 <sas_rle_compress@plt>
    d9c0:	cmp	r0, r4
    d9c4:	beq	da00 <sas7bdat_write_row_compressed+0x98>
    d9c8:	mov	r0, r6
    d9cc:	bl	d84c <sas7bdat_subheader_free>
    d9d0:	mov	r0, #10
    d9d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    d9d8:	mov	r0, #0
    d9dc:	mov	r1, r5
    d9e0:	bl	d240 <sas7bdat_subheader_init>
    d9e4:	mov	r6, r0
    d9e8:	mov	r0, #1
    d9ec:	str	r0, [r6, #12]
    d9f0:	ldr	r0, [r6, #4]
    d9f4:	mov	r1, r7
    d9f8:	mov	r2, r5
    d9fc:	bl	4998 <memcpy@plt>
    da00:	ldr	r0, [r8, #4]
    da04:	ldrd	r2, [r0]
    da08:	ldr	r1, [r0, #16]
    da0c:	adds	r4, r2, #1
    da10:	adc	r5, r3, #0
    da14:	strd	r4, [r0]
    da18:	str	r6, [r1, r2, lsl #2]
    da1c:	mov	r0, #0
    da20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000da24 <sas_rle_decompressed_len>:
    da24:	mov	r3, r1
    da28:	mov	r2, r0
    da2c:	mov	r0, #0
    da30:	mov	r1, #0
    da34:	b	da38 <sas_rle_decompress>

0000da38 <sas_rle_decompress>:
    da38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    da3c:	add	fp, sp, #28
    da40:	push	{r1}		; (str r1, [sp, #-4]!)
    da44:	cmp	r3, #1
    da48:	movlt	r0, #0
    da4c:	sublt	sp, fp, #28
    da50:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    da54:	mov	sl, r2
    da58:	mov	r8, r0
    da5c:	add	r7, r2, r3
    da60:	mov	r3, #0
    da64:	ldr	r5, [pc, #464]	; dc3c <sas_rle_decompress+0x204>
    da68:	add	r5, pc, r5
    da6c:	mov	r6, sl
    da70:	ldrb	r1, [sl], #1
    da74:	lsr	r2, r1, #4
    da78:	ldr	r0, [r5, r2, lsl #2]
    da7c:	add	r4, sl, r0
    da80:	mvn	r0, #0
    da84:	cmp	r4, r7
    da88:	bhi	dc34 <sas_rle_decompress+0x1fc>
    da8c:	cmp	r2, #15
    da90:	bhi	dc1c <sas_rle_decompress+0x1e4>
    da94:	and	r1, r1, #15
    da98:	add	r4, pc, #4
    da9c:	ldr	r2, [r4, r2, lsl #2]
    daa0:	add	pc, r4, r2
    daa4:	.word	0x00000040
    daa8:	.word	0x00000178
    daac:	.word	0x00000178
    dab0:	.word	0x00000178
    dab4:	.word	0x00000058
    dab8:	.word	0x00000074
    dabc:	.word	0x00000090
    dac0:	.word	0x000000ac
    dac4:	.word	0x000000c4
    dac8:	.word	0x000000cc
    dacc:	.word	0x000000d4
    dad0:	.word	0x000000dc
    dad4:	.word	0x0000011c
    dad8:	.word	0x0000012c
    dadc:	.word	0x00000138
    dae0:	.word	0x00000144
    dae4:	mov	r2, #64	; 0x40
    dae8:	orr	r1, r2, r1, lsl #8
    daec:	ldrb	r2, [r6, #1]
    daf0:	add	r2, r1, r2
    daf4:	add	sl, r6, #2
    daf8:	b	db84 <sas_rle_decompress+0x14c>
    dafc:	mov	r2, #18
    db00:	orr	r2, r2, r1, lsl #8
    db04:	ldrb	r4, [r6, #1]
    db08:	ldrb	r1, [r6, #2]
    db0c:	add	r2, r2, r4
    db10:	add	sl, r6, #3
    db14:	b	dbf0 <sas_rle_decompress+0x1b8>
    db18:	mov	r2, #17
    db1c:	orr	r1, r2, r1, lsl #8
    db20:	ldrb	r2, [r6, #1]
    db24:	add	r2, r1, r2
    db28:	add	sl, r6, #2
    db2c:	mov	r1, #64	; 0x40
    db30:	b	dbf0 <sas_rle_decompress+0x1b8>
    db34:	mov	r2, #17
    db38:	orr	r1, r2, r1, lsl #8
    db3c:	ldrb	r2, [r6, #1]
    db40:	add	r2, r1, r2
    db44:	add	sl, r6, #2
    db48:	mov	r1, #32
    db4c:	b	dbf0 <sas_rle_decompress+0x1b8>
    db50:	mov	r2, #17
    db54:	orr	r1, r2, r1, lsl #8
    db58:	ldrb	r2, [r6, #1]
    db5c:	add	r2, r1, r2
    db60:	add	sl, r6, #2
    db64:	b	dbec <sas_rle_decompress+0x1b4>
    db68:	add	r2, r1, #1
    db6c:	b	db84 <sas_rle_decompress+0x14c>
    db70:	add	r2, r1, #17
    db74:	b	db84 <sas_rle_decompress+0x14c>
    db78:	add	r2, r1, #33	; 0x21
    db7c:	b	db84 <sas_rle_decompress+0x14c>
    db80:	add	r2, r1, #49	; 0x31
    db84:	add	r6, r2, r3
    db88:	ldr	r1, [sp]
    db8c:	cmp	r6, r1
    db90:	addls	r9, sl, r2
    db94:	cmpls	r9, r7
    db98:	bhi	dc34 <sas_rle_decompress+0x1fc>
    db9c:	cmp	r8, #0
    dba0:	beq	dc2c <sas_rle_decompress+0x1f4>
    dba4:	add	r0, r8, r3
    dba8:	mov	r1, sl
    dbac:	bl	4998 <memcpy@plt>
    dbb0:	ldr	r5, [pc, #136]	; dc40 <sas_rle_decompress+0x208>
    dbb4:	add	r5, pc, r5
    dbb8:	mov	sl, r9
    dbbc:	b	dc18 <sas_rle_decompress+0x1e0>
    dbc0:	add	r2, r1, #3
    dbc4:	add	sl, r6, #2
    dbc8:	ldrb	r1, [r6, #1]
    dbcc:	b	dbf0 <sas_rle_decompress+0x1b8>
    dbd0:	add	r2, r1, #2
    dbd4:	mov	r1, #64	; 0x40
    dbd8:	b	dbf0 <sas_rle_decompress+0x1b8>
    dbdc:	add	r2, r1, #2
    dbe0:	mov	r1, #32
    dbe4:	b	dbf0 <sas_rle_decompress+0x1b8>
    dbe8:	add	r2, r1, #2
    dbec:	mov	r1, #0
    dbf0:	add	r6, r2, r3
    dbf4:	ldr	r4, [sp]
    dbf8:	cmp	r6, r4
    dbfc:	bhi	dc34 <sas_rle_decompress+0x1fc>
    dc00:	cmp	r8, #0
    dc04:	beq	dc18 <sas_rle_decompress+0x1e0>
    dc08:	add	r0, r8, r3
    dc0c:	bl	4d28 <memset@plt>
    dc10:	ldr	r5, [pc, #44]	; dc44 <sas_rle_decompress+0x20c>
    dc14:	add	r5, pc, r5
    dc18:	mov	r3, r6
    dc1c:	cmp	sl, r7
    dc20:	mov	r0, r3
    dc24:	bcc	da6c <sas_rle_decompress+0x34>
    dc28:	b	dc34 <sas_rle_decompress+0x1fc>
    dc2c:	mov	sl, r9
    dc30:	b	dc18 <sas_rle_decompress+0x1e0>
    dc34:	sub	sp, fp, #28
    dc38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dc3c:	.word	0x00018060
    dc40:	.word	0x00017f14
    dc44:	.word	0x00017eb4

0000dc48 <sas_rle_compressed_len>:
    dc48:	mov	r2, r0
    dc4c:	mov	r0, #0
    dc50:	mov	r3, r1
    dc54:	b	dc58 <sas_rle_compress>

0000dc58 <sas_rle_compress>:
    dc58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dc5c:	add	fp, sp, #28
    dc60:	sub	sp, sp, #12
    dc64:	mov	sl, r2
    dc68:	str	r0, [sp, #4]
    dc6c:	cmp	r3, #1
    dc70:	blt	dd40 <sas_rle_compress+0xe8>
    dc74:	add	r2, sl, r3
    dc78:	mov	r5, #0
    dc7c:	movw	r3, #4111	; 0x100f
    dc80:	mov	r9, sl
    dc84:	mov	r6, #0
    dc88:	mov	r8, #0
    dc8c:	mov	r4, #0
    dc90:	str	r2, [sp, #8]
    dc94:	mov	r0, r5
    dc98:	ldrb	r5, [r9]
    dc9c:	cmp	r4, #0
    dca0:	beq	dcc0 <sas_rle_compress+0x68>
    dca4:	cmp	r4, r3
    dca8:	bhi	dcc8 <sas_rle_compress+0x70>
    dcac:	uxtb	r1, r0
    dcb0:	cmp	r5, r1
    dcb4:	bne	dcc8 <sas_rle_compress+0x70>
    dcb8:	add	r4, r4, #1
    dcbc:	b	dd30 <sas_rle_compress+0xd8>
    dcc0:	mov	r4, #1
    dcc4:	b	dd30 <sas_rle_compress+0xd8>
    dcc8:	uxtb	r7, r0
    dccc:	mov	r0, r7
    dcd0:	mov	r1, r4
    dcd4:	bl	ddc0 <sas_rle_is_insert_run>
    dcd8:	cmp	r0, #0
    dcdc:	beq	dd20 <sas_rle_compress+0xc8>
    dce0:	mov	r2, sl
    dce4:	ldr	sl, [sp, #4]
    dce8:	mov	r0, sl
    dcec:	mov	r1, r6
    dcf0:	mov	r3, r8
    dcf4:	bl	ddf4 <sas_rle_copy_run>
    dcf8:	add	r6, r0, r6
    dcfc:	mov	r0, sl
    dd00:	mov	r1, r6
    dd04:	mov	r2, r7
    dd08:	mov	r3, r4
    dd0c:	bl	ded8 <sas_rle_insert_run>
    dd10:	add	r6, r6, r0
    dd14:	mov	r8, #0
    dd18:	mov	sl, r9
    dd1c:	b	dd24 <sas_rle_compress+0xcc>
    dd20:	add	r8, r8, r4
    dd24:	mov	r4, #1
    dd28:	ldr	r2, [sp, #8]
    dd2c:	movw	r3, #4111	; 0x100f
    dd30:	add	r9, r9, #1
    dd34:	cmp	r9, r2
    dd38:	bcc	dc94 <sas_rle_compress+0x3c>
    dd3c:	b	dd50 <sas_rle_compress+0xf8>
    dd40:	mov	r4, #0
    dd44:	mov	r8, #0
    dd48:	mov	r6, #0
    dd4c:	mov	r5, #0
    dd50:	mov	r0, r5
    dd54:	mov	r1, r4
    dd58:	bl	ddc0 <sas_rle_is_insert_run>
    dd5c:	cmp	r0, #0
    dd60:	beq	dda0 <sas_rle_compress+0x148>
    dd64:	ldr	r7, [sp, #4]
    dd68:	mov	r0, r7
    dd6c:	mov	r1, r6
    dd70:	mov	r2, sl
    dd74:	mov	r3, r8
    dd78:	bl	ddf4 <sas_rle_copy_run>
    dd7c:	add	r6, r0, r6
    dd80:	mov	r0, r7
    dd84:	mov	r1, r6
    dd88:	mov	r2, r5
    dd8c:	mov	r3, r4
    dd90:	bl	ded8 <sas_rle_insert_run>
    dd94:	add	r0, r6, r0
    dd98:	sub	sp, fp, #28
    dd9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    dda0:	add	r3, r8, r4
    dda4:	ldr	r0, [sp, #4]
    dda8:	mov	r1, r6
    ddac:	mov	r2, sl
    ddb0:	bl	ddf4 <sas_rle_copy_run>
    ddb4:	add	r0, r0, r6
    ddb8:	sub	sp, fp, #28
    ddbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000ddc0 <sas_rle_is_insert_run>:
    ddc0:	push	{r4, r5, fp, lr}
    ddc4:	add	fp, sp, #8
    ddc8:	mov	r4, #0
    ddcc:	cmp	r1, #2
    ddd0:	mov	r5, #0
    ddd4:	movwhi	r5, #1
    ddd8:	cmp	r1, #1
    dddc:	movwhi	r4, #1
    dde0:	bl	e004 <sas_rle_is_special_byte>
    dde4:	cmp	r0, #0
    dde8:	moveq	r4, r5
    ddec:	mov	r0, r4
    ddf0:	pop	{r4, r5, fp, pc}

0000ddf4 <sas_rle_copy_run>:
    ddf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ddf8:	add	fp, sp, #28
    ddfc:	sub	sp, sp, #4
    de00:	mov	r4, r3
    de04:	cmp	r0, #0
    de08:	beq	de7c <sas_rle_copy_run+0x88>
    de0c:	mov	r5, r2
    de10:	add	r6, r0, r1
    de14:	movw	r7, #4159	; 0x103f
    de18:	cmp	r4, r7
    de1c:	str	r6, [sp]
    de20:	bcc	de5c <sas_rle_copy_run+0x68>
    de24:	movw	r9, #4161	; 0x1041
    de28:	movw	sl, #65295	; 0xff0f
    de2c:	movw	r8, #4158	; 0x103e
    de30:	mov	r0, r6
    de34:	strh	sl, [r6], r9
    de38:	add	r0, r0, #2
    de3c:	mov	r1, r5
    de40:	movw	r2, #4159	; 0x103f
    de44:	bl	4998 <memcpy@plt>
    de48:	sub	r4, r4, r7
    de4c:	add	r5, r5, r7
    de50:	cmp	r4, r8
    de54:	mov	r0, r6
    de58:	bhi	de34 <sas_rle_copy_run+0x40>
    de5c:	cmp	r4, #65	; 0x41
    de60:	bcc	de8c <sas_rle_copy_run+0x98>
    de64:	sub	r0, r4, #64	; 0x40
    de68:	strb	r0, [r6, #1]
    de6c:	ubfx	r0, r0, #8, #4
    de70:	strb	r0, [r6]
    de74:	add	r6, r6, #2
    de78:	b	dea8 <sas_rle_copy_run+0xb4>
    de7c:	mov	r0, r4
    de80:	sub	sp, fp, #28
    de84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    de88:	b	e020 <sas_rle_measure_copy_run>
    de8c:	cmp	r4, #49	; 0x31
    de90:	bcs	dea0 <sas_rle_copy_run+0xac>
    de94:	cmp	r4, #33	; 0x21
    de98:	cmpcc	r4, #17
    de9c:	bcc	decc <sas_rle_copy_run+0xd8>
    dea0:	add	r0, r4, #127	; 0x7f
    dea4:	strb	r0, [r6], #1
    dea8:	mov	r0, r6
    deac:	mov	r1, r5
    deb0:	mov	r2, r4
    deb4:	bl	4998 <memcpy@plt>
    deb8:	add	r0, r6, r4
    debc:	ldr	r1, [sp]
    dec0:	sub	r0, r0, r1
    dec4:	sub	sp, fp, #28
    dec8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    decc:	cmp	r4, #0
    ded0:	bne	dea0 <sas_rle_copy_run+0xac>
    ded4:	b	dea8 <sas_rle_copy_run+0xb4>

0000ded8 <sas_rle_insert_run>:
    ded8:	push	{r4, r5, r6, sl, fp, lr}
    dedc:	add	fp, sp, #16
    dee0:	mov	r4, r3
    dee4:	mov	r5, r2
    dee8:	cmp	r0, #0
    deec:	beq	df34 <sas_rle_insert_run+0x5c>
    def0:	add	r6, r0, r1
    def4:	mov	r0, r5
    def8:	bl	e004 <sas_rle_is_special_byte>
    defc:	cmp	r0, #0
    df00:	beq	df44 <sas_rle_insert_run+0x6c>
    df04:	cmp	r4, #18
    df08:	bcc	df74 <sas_rle_insert_run+0x9c>
    df0c:	sub	r1, r4, #17
    df10:	cmp	r5, #0
    df14:	beq	dfc4 <sas_rle_insert_run+0xec>
    df18:	cmp	r5, #64	; 0x40
    df1c:	beq	dfcc <sas_rle_insert_run+0xf4>
    df20:	cmp	r5, #32
    df24:	mov	r0, r6
    df28:	bne	dff8 <sas_rle_insert_run+0x120>
    df2c:	mov	r0, #96	; 0x60
    df30:	b	dfd0 <sas_rle_insert_run+0xf8>
    df34:	mov	r0, r5
    df38:	mov	r1, r4
    df3c:	pop	{r4, r5, r6, sl, fp, lr}
    df40:	b	e074 <sas_rle_measure_insert_run>
    df44:	cmp	r4, #19
    df48:	bcc	dfa4 <sas_rle_insert_run+0xcc>
    df4c:	strb	r5, [r6, #2]
    df50:	sub	r0, r4, #18
    df54:	strb	r0, [r6, #1]
    df58:	lsr	r0, r0, #8
    df5c:	mov	r1, #4
    df60:	bfi	r0, r1, #4, #28
    df64:	strb	r0, [r6]
    df68:	add	r0, r6, #3
    df6c:	sub	r0, r0, r6
    df70:	pop	{r4, r5, r6, sl, fp, pc}
    df74:	cmp	r4, #2
    df78:	mov	r0, r6
    df7c:	bcc	dfbc <sas_rle_insert_run+0xe4>
    df80:	cmp	r5, #0
    df84:	beq	dfe8 <sas_rle_insert_run+0x110>
    df88:	cmp	r5, #32
    df8c:	beq	dff0 <sas_rle_insert_run+0x118>
    df90:	cmp	r5, #64	; 0x40
    df94:	mov	r0, r6
    df98:	bne	dfbc <sas_rle_insert_run+0xe4>
    df9c:	sub	r1, r4, #50	; 0x32
    dfa0:	b	dff4 <sas_rle_insert_run+0x11c>
    dfa4:	cmp	r4, #3
    dfa8:	mov	r0, r6
    dfac:	strbcs	r5, [r6, #1]
    dfb0:	subcs	r0, r4, #67	; 0x43
    dfb4:	strbcs	r0, [r6]
    dfb8:	addcs	r0, r6, #2
    dfbc:	sub	r0, r0, r6
    dfc0:	pop	{r4, r5, r6, sl, fp, pc}
    dfc4:	mov	r0, #112	; 0x70
    dfc8:	b	dfd0 <sas_rle_insert_run+0xf8>
    dfcc:	mov	r0, #80	; 0x50
    dfd0:	lsr	r2, r1, #8
    dfd4:	and	r2, r2, #15
    dfd8:	orr	r2, r2, r0
    dfdc:	mov	r0, r6
    dfe0:	strb	r2, [r0], #1
    dfe4:	b	dff8 <sas_rle_insert_run+0x120>
    dfe8:	sub	r1, r4, #18
    dfec:	b	dff4 <sas_rle_insert_run+0x11c>
    dff0:	sub	r1, r4, #34	; 0x22
    dff4:	mov	r0, r6
    dff8:	strb	r1, [r0], #1
    dffc:	sub	r0, r0, r6
    e000:	pop	{r4, r5, r6, sl, fp, pc}

0000e004 <sas_rle_is_special_byte>:
    e004:	mov	r1, r0
    e008:	mov	r0, #1
    e00c:	cmp	r1, #32
    e010:	cmpne	r1, #64	; 0x40
    e014:	clzne	r0, r1
    e018:	lsrne	r0, r0, #5
    e01c:	bx	lr

0000e020 <sas_rle_measure_copy_run>:
    e020:	mov	r1, #0
    e024:	movw	r2, #4159	; 0x103f
    e028:	cmp	r0, r2
    e02c:	bcc	e058 <sas_rle_measure_copy_run+0x38>
    e030:	sub	r0, r0, r2
    e034:	movw	r1, #17633	; 0x44e1
    e038:	movt	r1, #64543	; 0xfc1f
    e03c:	umull	r1, r2, r0, r1
    e040:	lsr	r1, r2, #12
    e044:	movw	r2, #61377	; 0xefc1
    e048:	movt	r2, #65535	; 0xffff
    e04c:	mla	r0, r1, r2, r0
    e050:	movw	r2, #4161	; 0x1041
    e054:	mla	r1, r1, r2, r2
    e058:	add	r1, r1, r0
    e05c:	cmp	r0, #64	; 0x40
    e060:	addhi	r1, r1, #1
    e064:	cmp	r0, #0
    e068:	addne	r1, r1, #1
    e06c:	mov	r0, r1
    e070:	bx	lr

0000e074 <sas_rle_measure_insert_run>:
    e074:	push	{r4, r5, fp, lr}
    e078:	add	fp, sp, #8
    e07c:	mov	r5, #2
    e080:	cmp	r1, #18
    e084:	movwhi	r5, #3
    e088:	mov	r4, #1
    e08c:	cmp	r1, #17
    e090:	movwhi	r4, #2
    e094:	bl	e004 <sas_rle_is_special_byte>
    e098:	cmp	r0, #0
    e09c:	moveq	r4, r5
    e0a0:	mov	r0, r4
    e0a4:	pop	{r4, r5, fp, pc}

0000e0a8 <xport_namestr_bswap>:
    e0a8:	push	{r4, sl, fp, lr}
    e0ac:	add	fp, sp, #8
    e0b0:	mov	r4, r0
    e0b4:	bl	492c <machine_is_little_endian@plt>
    e0b8:	cmp	r0, #0
    e0bc:	popeq	{r4, sl, fp, pc}
    e0c0:	ldrh	r0, [r4]
    e0c4:	bl	4920 <byteswap2@plt>
    e0c8:	strh	r0, [r4]
    e0cc:	ldrh	r0, [r4, #2]
    e0d0:	bl	4920 <byteswap2@plt>
    e0d4:	strh	r0, [r4, #2]
    e0d8:	ldrh	r0, [r4, #4]
    e0dc:	bl	4920 <byteswap2@plt>
    e0e0:	strh	r0, [r4, #4]
    e0e4:	ldrh	r0, [r4, #6]
    e0e8:	bl	4920 <byteswap2@plt>
    e0ec:	strh	r0, [r4, #6]
    e0f0:	ldrh	r0, [r4, #64]	; 0x40
    e0f4:	bl	4920 <byteswap2@plt>
    e0f8:	strh	r0, [r4, #64]	; 0x40
    e0fc:	ldrh	r0, [r4, #66]	; 0x42
    e100:	bl	4920 <byteswap2@plt>
    e104:	strh	r0, [r4, #66]	; 0x42
    e108:	ldrh	r0, [r4, #68]	; 0x44
    e10c:	bl	4920 <byteswap2@plt>
    e110:	strh	r0, [r4, #68]	; 0x44
    e114:	ldrh	r0, [r4, #80]	; 0x50
    e118:	bl	4920 <byteswap2@plt>
    e11c:	strh	r0, [r4, #80]	; 0x50
    e120:	ldrh	r0, [r4, #82]	; 0x52
    e124:	bl	4920 <byteswap2@plt>
    e128:	strh	r0, [r4, #82]	; 0x52
    e12c:	ldr	r0, [r4, #84]	; 0x54
    e130:	bl	480c <byteswap4@plt>
    e134:	str	r0, [r4, #84]	; 0x54
    e138:	ldrh	r0, [r4, #120]	; 0x78
    e13c:	bl	4920 <byteswap2@plt>
    e140:	strh	r0, [r4, #120]	; 0x78
    e144:	pop	{r4, sl, fp, pc}

0000e148 <readstat_parse_xport>:
    e148:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    e14c:	add	fp, sp, #24
    e150:	mov	r6, r2
    e154:	mov	r9, r1
    e158:	mov	r7, r0
    e15c:	ldr	r8, [r0, #32]
    e160:	add	r5, r0, #16
    e164:	bl	ec70 <xport_ctx_init>
    e168:	mov	r4, r0
    e16c:	mov	r0, #48	; 0x30
    e170:	vld1.32	{d16-d17}, [r5]
    e174:	mov	r1, r7
    e178:	vld1.32	{d18-d19}, [r1], r0
    e17c:	add	r0, r4, #16
    e180:	vst1.32	{d16-d17}, [r0]
    e184:	mov	r0, #68	; 0x44
    e188:	mov	r2, r4
    e18c:	vst1.32	{d18-d19}, [r2], r0
    e190:	add	r7, r7, #36	; 0x24
    e194:	ldm	r7, {r0, r3, r7}
    e198:	str	r8, [r4, #52]	; 0x34
    e19c:	str	r6, [r4, #36]	; 0x24
    e1a0:	str	r0, [r4, #40]	; 0x28
    e1a4:	str	r3, [r4, #44]	; 0x2c
    e1a8:	str	r7, [r2]
    e1ac:	ldr	r0, [r1]
    e1b0:	cmp	r0, #1
    e1b4:	strge	r0, [r4, #72]	; 0x48
    e1b8:	ldr	r2, [r8]
    e1bc:	ldr	r1, [r8, #20]
    e1c0:	mov	r0, r9
    e1c4:	blx	r2
    e1c8:	cmn	r0, #1
    e1cc:	beq	e314 <readstat_parse_xport+0x1cc>
    e1d0:	ldr	r3, [r8, #8]
    e1d4:	ldr	r2, [r8, #20]
    e1d8:	mov	r0, #0
    e1dc:	mov	r1, #2
    e1e0:	blx	r3
    e1e4:	str	r0, [r4, #32]
    e1e8:	mov	r5, #15
    e1ec:	cmn	r0, #1
    e1f0:	beq	e318 <readstat_parse_xport+0x1d0>
    e1f4:	ldr	r3, [r8, #8]
    e1f8:	ldr	r2, [r8, #20]
    e1fc:	mov	r0, #0
    e200:	mov	r1, #0
    e204:	blx	r3
    e208:	cmn	r0, #1
    e20c:	beq	e318 <readstat_parse_xport+0x1d0>
    e210:	ldr	r5, [r4, #40]	; 0x28
    e214:	cmp	r5, #0
    e218:	ldrne	r6, [r4, #44]	; 0x2c
    e21c:	cmpne	r6, #0
    e220:	bne	e334 <readstat_parse_xport+0x1ec>
    e224:	mov	r0, r4
    e228:	bl	e384 <xport_read_library_record>
    e22c:	mov	r5, r0
    e230:	cmp	r0, #0
    e234:	bne	e318 <readstat_parse_xport+0x1d0>
    e238:	mov	r0, r4
    e23c:	bl	e408 <xport_skip_record>
    e240:	mov	r5, r0
    e244:	cmp	r0, #0
    e248:	bne	e318 <readstat_parse_xport+0x1d0>
    e24c:	mov	r0, r4
    e250:	bl	e43c <xport_read_timestamp_record>
    e254:	mov	r5, r0
    e258:	cmp	r0, #0
    e25c:	bne	e318 <readstat_parse_xport+0x1d0>
    e260:	ldr	r1, [pc, #268]	; e374 <readstat_parse_xport+0x22c>
    e264:	add	r1, pc, r1
    e268:	ldr	r2, [pc, #264]	; e378 <readstat_parse_xport+0x230>
    e26c:	add	r2, pc, r2
    e270:	mov	r0, r4
    e274:	bl	e530 <xport_expect_header_record>
    e278:	mov	r5, r0
    e27c:	cmp	r0, #0
    e280:	bne	e318 <readstat_parse_xport+0x1d0>
    e284:	ldr	r1, [pc, #240]	; e37c <readstat_parse_xport+0x234>
    e288:	add	r1, pc, r1
    e28c:	ldr	r2, [pc, #236]	; e380 <readstat_parse_xport+0x238>
    e290:	add	r2, pc, r2
    e294:	mov	r0, r4
    e298:	bl	e530 <xport_expect_header_record>
    e29c:	mov	r5, r0
    e2a0:	cmp	r0, #0
    e2a4:	bne	e318 <readstat_parse_xport+0x1d0>
    e2a8:	mov	r0, r4
    e2ac:	bl	e5b4 <xport_read_table_name_record>
    e2b0:	mov	r5, r0
    e2b4:	cmp	r0, #0
    e2b8:	bne	e318 <readstat_parse_xport+0x1d0>
    e2bc:	mov	r0, r4
    e2c0:	bl	e610 <xport_read_file_label_record>
    e2c4:	mov	r5, r0
    e2c8:	cmp	r0, #0
    e2cc:	bne	e318 <readstat_parse_xport+0x1d0>
    e2d0:	mov	r0, r4
    e2d4:	bl	e660 <xport_read_namestr_header_record>
    e2d8:	mov	r5, r0
    e2dc:	cmp	r0, #0
    e2e0:	bne	e318 <readstat_parse_xport+0x1d0>
    e2e4:	mov	r0, r4
    e2e8:	bl	e794 <xport_read_variables>
    e2ec:	mov	r5, r0
    e2f0:	cmp	r0, #0
    e2f4:	bne	e318 <readstat_parse_xport+0x1d0>
    e2f8:	ldr	r0, [r4, #76]	; 0x4c
    e2fc:	cmp	r0, #0
    e300:	beq	e36c <readstat_parse_xport+0x224>
    e304:	mov	r0, r4
    e308:	bl	ea54 <xport_read_data>
    e30c:	mov	r5, r0
    e310:	b	e318 <readstat_parse_xport+0x1d0>
    e314:	mov	r5, #1
    e318:	ldr	r1, [r8, #4]
    e31c:	ldr	r0, [r8, #20]
    e320:	blx	r1
    e324:	mov	r0, r4
    e328:	bl	ec00 <xport_ctx_free>
    e32c:	mov	r0, r5
    e330:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    e334:	mov	r0, r5
    e338:	mov	r1, r6
    e33c:	bl	4878 <strcmp@plt>
    e340:	cmp	r0, #0
    e344:	beq	e224 <readstat_parse_xport+0xdc>
    e348:	mov	r0, r6
    e34c:	mov	r1, r5
    e350:	bl	4bc0 <iconv_open@plt>
    e354:	cmn	r0, #1
    e358:	beq	e364 <readstat_parse_xport+0x21c>
    e35c:	str	r0, [r4, #48]	; 0x30
    e360:	b	e224 <readstat_parse_xport+0xdc>
    e364:	mov	r5, #7
    e368:	b	e318 <readstat_parse_xport+0x1d0>
    e36c:	mov	r5, #0
    e370:	b	e318 <readstat_parse_xport+0x1d0>
    e374:	.word	0x000178a4
    e378:	.word	0x000178a3
    e37c:	.word	0x0001788e
    e380:	.word	0x0001788e

0000e384 <xport_read_library_record>:
    e384:	push	{r4, sl, fp, lr}
    e388:	add	fp, sp, #8
    e38c:	sub	sp, sp, #40	; 0x28
    e390:	mov	r4, r0
    e394:	add	r1, sp, #4
    e398:	bl	ec7c <xport_read_header_record>
    e39c:	cmp	r0, #0
    e3a0:	bne	e3dc <xport_read_library_record+0x58>
    e3a4:	add	r0, sp, #4
    e3a8:	ldr	r1, [pc, #80]	; e400 <xport_read_library_record+0x7c>
    e3ac:	add	r1, pc, r1
    e3b0:	bl	4878 <strcmp@plt>
    e3b4:	cmp	r0, #0
    e3b8:	beq	e3e4 <xport_read_library_record+0x60>
    e3bc:	add	r0, sp, #4
    e3c0:	ldr	r1, [pc, #60]	; e404 <xport_read_library_record+0x80>
    e3c4:	add	r1, pc, r1
    e3c8:	bl	4878 <strcmp@plt>
    e3cc:	mov	r1, r0
    e3d0:	mov	r0, #24
    e3d4:	cmp	r1, #0
    e3d8:	beq	e3ec <xport_read_library_record+0x68>
    e3dc:	sub	sp, fp, #8
    e3e0:	pop	{r4, sl, fp, pc}
    e3e4:	mov	r0, #5
    e3e8:	b	e3f0 <xport_read_library_record+0x6c>
    e3ec:	mov	r0, #8
    e3f0:	str	r0, [r4, #380]	; 0x17c
    e3f4:	mov	r0, #0
    e3f8:	sub	sp, fp, #8
    e3fc:	pop	{r4, sl, fp, pc}
    e400:	.word	0x0001777a
    e404:	.word	0x0001776a

0000e408 <xport_skip_record>:
    e408:	push	{fp, lr}
    e40c:	mov	fp, sp
    e410:	ldr	r0, [r0, #52]	; 0x34
    e414:	ldr	r3, [r0, #8]
    e418:	ldr	r2, [r0, #20]
    e41c:	mov	r0, #80	; 0x50
    e420:	mov	r1, #1
    e424:	blx	r3
    e428:	mov	r1, #0
    e42c:	cmn	r0, #1
    e430:	movweq	r1, #15
    e434:	mov	r0, r1
    e438:	pop	{fp, pc}

0000e43c <xport_read_timestamp_record>:
    e43c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    e440:	add	fp, sp, #24
    e444:	sub	sp, sp, #152	; 0x98
    e448:	mov	r8, r0
    e44c:	vmov.i32	q8, #0	; 0x00000000
    e450:	add	r6, sp, #24
    e454:	add	r0, r6, #28
    e458:	vst1.32	{d16-d17}, [r0]
    e45c:	add	r0, r6, #16
    e460:	vst1.64	{d16-d17}, [r0]
    e464:	mov	r0, #32
    e468:	mov	r1, r6
    e46c:	vst1.64	{d16-d17}, [r1], r0
    e470:	mvn	r0, #0
    e474:	str	r0, [r1]
    e478:	add	r1, sp, #71	; 0x47
    e47c:	mov	r0, r8
    e480:	bl	ed08 <xport_read_record>
    e484:	mov	r5, r0
    e488:	cmp	r0, #0
    e48c:	bne	e51c <xport_read_timestamp_record+0xe0>
    e490:	orr	r0, r6, #4
    e494:	add	r1, r6, #8
    e498:	add	r2, r6, #20
    e49c:	str	r2, [sp]
    e4a0:	str	r1, [sp, #4]
    e4a4:	str	r0, [sp, #8]
    e4a8:	str	r6, [sp, #12]
    e4ac:	add	r2, r6, #12
    e4b0:	add	r0, sp, #71	; 0x47
    e4b4:	ldr	r1, [pc, #108]	; e528 <xport_read_timestamp_record+0xec>
    e4b8:	add	r1, pc, r1
    e4bc:	add	r6, sp, #20
    e4c0:	mov	r3, r6
    e4c4:	bl	4d10 <__isoc99_sscanf@plt>
    e4c8:	mov	r4, #0
    e4cc:	ldr	r7, [pc, #88]	; e52c <xport_read_timestamp_record+0xf0>
    e4d0:	ldr	r7, [pc, r7]
    e4d4:	mov	r0, r6
    e4d8:	mov	r1, r7
    e4dc:	bl	4878 <strcmp@plt>
    e4e0:	cmp	r0, #0
    e4e4:	beq	e4fc <xport_read_timestamp_record+0xc0>
    e4e8:	add	r7, r7, #4
    e4ec:	add	r4, r4, #1
    e4f0:	cmp	r4, #12
    e4f4:	bcc	e4d4 <xport_read_timestamp_record+0x98>
    e4f8:	b	e500 <xport_read_timestamp_record+0xc4>
    e4fc:	str	r4, [sp, #40]	; 0x28
    e500:	ldr	r0, [sp, #44]	; 0x2c
    e504:	cmp	r0, #59	; 0x3b
    e508:	addle	r0, r0, #100	; 0x64
    e50c:	strle	r0, [sp, #44]	; 0x2c
    e510:	add	r0, sp, #24
    e514:	bl	48cc <mktime@plt>
    e518:	str	r0, [r8, #56]	; 0x38
    e51c:	mov	r0, r5
    e520:	sub	sp, fp, #24
    e524:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    e528:	.word	0x000176c1
    e52c:	.word	0x00036e0c

0000e530 <xport_expect_header_record>:
    e530:	push	{r4, r5, r6, r7, fp, lr}
    e534:	add	fp, sp, #16
    e538:	sub	sp, sp, #40	; 0x28
    e53c:	mov	r6, r2
    e540:	mov	r5, r1
    e544:	mov	r7, r0
    e548:	add	r1, sp, #4
    e54c:	bl	ec7c <xport_read_header_record>
    e550:	mov	r4, r0
    e554:	cmp	r0, #0
    e558:	beq	e568 <xport_expect_header_record+0x38>
    e55c:	mov	r0, r4
    e560:	sub	sp, fp, #16
    e564:	pop	{r4, r5, r6, r7, fp, pc}
    e568:	ldr	r0, [r7, #380]	; 0x17c
    e56c:	cmp	r0, #8
    e570:	beq	e59c <xport_expect_header_record+0x6c>
    e574:	mov	r4, #0
    e578:	cmp	r0, #5
    e57c:	bne	e55c <xport_expect_header_record+0x2c>
    e580:	add	r0, sp, #4
    e584:	mov	r1, r5
    e588:	bl	4878 <strcmp@plt>
    e58c:	mov	r4, r0
    e590:	cmp	r0, #0
    e594:	movwne	r4, #5
    e598:	b	e55c <xport_expect_header_record+0x2c>
    e59c:	add	r0, sp, #4
    e5a0:	mov	r1, r6
    e5a4:	bl	4878 <strcmp@plt>
    e5a8:	cmp	r0, #0
    e5ac:	movne	r4, #5
    e5b0:	b	e55c <xport_expect_header_record+0x2c>

0000e5b4 <xport_read_table_name_record>:
    e5b4:	push	{r4, r5, fp, lr}
    e5b8:	add	fp, sp, #8
    e5bc:	sub	sp, sp, #88	; 0x58
    e5c0:	mov	r4, r0
    e5c4:	add	r5, sp, #7
    e5c8:	mov	r1, r5
    e5cc:	bl	ed08 <xport_read_record>
    e5d0:	cmp	r0, #0
    e5d4:	beq	e5e0 <xport_read_table_name_record+0x2c>
    e5d8:	sub	sp, fp, #8
    e5dc:	pop	{r4, r5, fp, pc}
    e5e0:	ldr	r0, [r4, #48]	; 0x30
    e5e4:	ldr	r1, [r4, #380]	; 0x17c
    e5e8:	str	r0, [sp]
    e5ec:	mov	r3, #32
    e5f0:	cmp	r1, #5
    e5f4:	movweq	r3, #8
    e5f8:	add	r0, r4, #245	; 0xf5
    e5fc:	add	r2, r5, #8
    e600:	mov	r1, #129	; 0x81
    e604:	bl	4cbc <readstat_convert@plt>
    e608:	sub	sp, fp, #8
    e60c:	pop	{r4, r5, fp, pc}

0000e610 <xport_read_file_label_record>:
    e610:	push	{r4, r5, fp, lr}
    e614:	add	fp, sp, #8
    e618:	sub	sp, sp, #88	; 0x58
    e61c:	mov	r4, r0
    e620:	add	r5, sp, #7
    e624:	mov	r1, r5
    e628:	bl	ed08 <xport_read_record>
    e62c:	cmp	r0, #0
    e630:	beq	e63c <xport_read_file_label_record+0x2c>
    e634:	sub	sp, fp, #8
    e638:	pop	{r4, r5, fp, pc}
    e63c:	ldr	r0, [r4, #48]	; 0x30
    e640:	str	r0, [sp]
    e644:	add	r0, r4, #84	; 0x54
    e648:	add	r2, r5, #32
    e64c:	mov	r1, #161	; 0xa1
    e650:	mov	r3, #40	; 0x28
    e654:	bl	4cbc <readstat_convert@plt>
    e658:	sub	sp, fp, #8
    e65c:	pop	{r4, r5, fp, pc}

0000e660 <xport_read_namestr_header_record>:
    e660:	push	{r4, r5, fp, lr}
    e664:	add	fp, sp, #8
    e668:	sub	sp, sp, #96	; 0x60
    e66c:	mov	r5, r0
    e670:	sub	r1, fp, #44	; 0x2c
    e674:	bl	ec7c <xport_read_header_record>
    e678:	cmp	r0, #0
    e67c:	bne	e6c8 <xport_read_namestr_header_record+0x68>
    e680:	mov	r4, r0
    e684:	ldr	r0, [r5, #380]	; 0x17c
    e688:	cmp	r0, #8
    e68c:	beq	e6a8 <xport_read_namestr_header_record+0x48>
    e690:	cmp	r0, #5
    e694:	bne	e6d0 <xport_read_namestr_header_record+0x70>
    e698:	sub	r0, fp, #44	; 0x2c
    e69c:	ldr	r1, [pc, #232]	; e78c <xport_read_namestr_header_record+0x12c>
    e6a0:	add	r1, pc, r1
    e6a4:	b	e6b4 <xport_read_namestr_header_record+0x54>
    e6a8:	sub	r0, fp, #44	; 0x2c
    e6ac:	ldr	r1, [pc, #220]	; e790 <xport_read_namestr_header_record+0x130>
    e6b0:	add	r1, pc, r1
    e6b4:	bl	4878 <strcmp@plt>
    e6b8:	mov	r1, r0
    e6bc:	mov	r0, #5
    e6c0:	cmp	r1, #0
    e6c4:	beq	e6d0 <xport_read_namestr_header_record+0x70>
    e6c8:	sub	sp, fp, #8
    e6cc:	pop	{r4, r5, fp, pc}
    e6d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    e6d4:	str	r0, [r5, #64]	; 0x40
    e6d8:	mov	r1, #4
    e6dc:	bl	4a34 <readstat_calloc@plt>
    e6e0:	str	r0, [r5, #376]	; 0x178
    e6e4:	cmp	r0, #0
    e6e8:	moveq	r0, #3
    e6ec:	subeq	sp, fp, #8
    e6f0:	popeq	{r4, r5, fp, pc}
    e6f4:	ldr	r2, [r5]
    e6f8:	cmp	r2, #0
    e6fc:	moveq	r0, #0
    e700:	subeq	sp, fp, #8
    e704:	popeq	{r4, r5, fp, pc}
    e708:	mvn	r0, #0
    e70c:	str	r0, [sp, #4]
    e710:	str	r0, [sp]
    e714:	ldr	r0, [r5, #64]	; 0x40
    e718:	str	r0, [sp, #8]
    e71c:	asr	r0, r0, #31
    e720:	str	r0, [sp, #12]
    e724:	ldr	r0, [r5, #56]	; 0x38
    e728:	str	r0, [sp, #20]
    e72c:	str	r0, [sp, #16]
    e730:	ldr	r0, [r5, #380]	; 0x17c
    e734:	mov	r1, #0
    e738:	str	r1, [sp, #32]
    e73c:	str	r1, [sp, #36]	; 0x24
    e740:	add	r3, r5, #245	; 0xf5
    e744:	str	r3, [sp, #40]	; 0x28
    e748:	add	r3, r5, #84	; 0x54
    e74c:	str	r3, [sp, #44]	; 0x2c
    e750:	str	r1, [sp, #48]	; 0x30
    e754:	ldrb	r1, [sp, #52]	; 0x34
    e758:	and	r1, r1, #254	; 0xfe
    e75c:	strb	r1, [sp, #52]	; 0x34
    e760:	str	r0, [sp, #24]
    e764:	asr	r0, r0, #31
    e768:	str	r0, [sp, #28]
    e76c:	ldr	r1, [r5, #36]	; 0x24
    e770:	mov	r0, sp
    e774:	blx	r2
    e778:	cmp	r0, #0
    e77c:	movne	r4, #4
    e780:	mov	r0, r4
    e784:	sub	sp, fp, #8
    e788:	pop	{r4, r5, fp, pc}
    e78c:	.word	0x000174f4
    e790:	.word	0x000174ec

0000e794 <xport_read_variables>:
    e794:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e798:	add	fp, sp, #28
    e79c:	sub	sp, sp, #148	; 0x94
    e7a0:	mov	r4, r0
    e7a4:	ldr	r0, [r0, #64]	; 0x40
    e7a8:	cmp	r0, #1
    e7ac:	blt	e8e0 <xport_read_variables+0x14c>
    e7b0:	add	r8, sp, #8
    e7b4:	add	sl, r8, #56	; 0x38
    e7b8:	add	r7, r8, #16
    e7bc:	add	r0, r8, #88	; 0x58
    e7c0:	str	r0, [sp, #4]
    e7c4:	add	r9, r8, #8
    e7c8:	mov	r5, #0
    e7cc:	mov	r0, r4
    e7d0:	mov	r1, r8
    e7d4:	mov	r2, #140	; 0x8c
    e7d8:	bl	ed34 <read_bytes>
    e7dc:	cmp	r0, #140	; 0x8c
    e7e0:	bcc	e918 <xport_read_variables+0x184>
    e7e4:	mov	r0, r8
    e7e8:	bl	4b0c <xport_namestr_bswap@plt>
    e7ec:	mov	r0, #1
    e7f0:	movw	r1, #2152	; 0x868
    e7f4:	bl	47d0 <calloc@plt>
    e7f8:	mov	r6, r0
    e7fc:	ldrh	r0, [sp, #8]
    e800:	subs	r0, r0, #2
    e804:	movwne	r0, #5
    e808:	stm	r6, {r0, r5}
    e80c:	ldrh	r0, [sp, #12]
    e810:	str	r0, [r6, #1596]	; 0x63c
    e814:	ldrh	r0, [sp, #72]	; 0x48
    e818:	ldrh	r1, [sp, #74]	; 0x4a
    e81c:	ldrh	r2, [sp, #76]	; 0x4c
    e820:	cmp	r2, #0
    e824:	mov	r2, #3
    e828:	movweq	r2, #1
    e82c:	str	r2, [r6, #2132]	; 0x854
    e830:	str	r0, [r6, #2136]	; 0x858
    e834:	str	r1, [r6, #2140]	; 0x85c
    e838:	add	r0, r6, #8
    e83c:	ldr	r1, [r4, #380]	; 0x17c
    e840:	cmp	r1, #5
    e844:	bne	e860 <xport_read_variables+0xcc>
    e848:	ldr	r1, [r4, #48]	; 0x30
    e84c:	str	r1, [sp]
    e850:	mov	r1, #300	; 0x12c
    e854:	mov	r2, r9
    e858:	mov	r3, #8
    e85c:	b	e874 <xport_read_variables+0xe0>
    e860:	ldr	r1, [r4, #48]	; 0x30
    e864:	str	r1, [sp]
    e868:	mov	r1, #300	; 0x12c
    e86c:	ldr	r2, [sp, #4]
    e870:	mov	r3, #32
    e874:	bl	4cbc <readstat_convert@plt>
    e878:	cmp	r0, #0
    e87c:	bne	e8f0 <xport_read_variables+0x15c>
    e880:	ldr	r0, [r4, #48]	; 0x30
    e884:	str	r0, [sp]
    e888:	add	r0, r6, #564	; 0x234
    e88c:	mov	r1, #1024	; 0x400
    e890:	mov	r2, r7
    e894:	mov	r3, #40	; 0x28
    e898:	bl	4cbc <readstat_convert@plt>
    e89c:	cmp	r0, #0
    e8a0:	bne	e8f0 <xport_read_variables+0x15c>
    e8a4:	ldr	r3, [r6, #2136]	; 0x858
    e8a8:	ldr	r0, [r6, #2140]	; 0x85c
    e8ac:	str	r0, [sp]
    e8b0:	add	r0, r6, #308	; 0x134
    e8b4:	mov	r1, sl
    e8b8:	mov	r2, #8
    e8bc:	bl	ed50 <xport_construct_format>
    e8c0:	cmp	r0, #0
    e8c4:	bne	e8f0 <xport_read_variables+0x15c>
    e8c8:	ldr	r0, [r4, #376]	; 0x178
    e8cc:	str	r6, [r0, r5, lsl #2]
    e8d0:	add	r5, r5, #1
    e8d4:	ldr	r0, [r4, #64]	; 0x40
    e8d8:	cmp	r5, r0
    e8dc:	blt	e7cc <xport_read_variables+0x38>
    e8e0:	mov	r0, r4
    e8e4:	bl	ee40 <xport_skip_rest_of_record>
    e8e8:	cmp	r0, #0
    e8ec:	beq	e8f8 <xport_read_variables+0x164>
    e8f0:	sub	sp, fp, #28
    e8f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e8f8:	ldr	r0, [r4, #380]	; 0x17c
    e8fc:	cmp	r0, #5
    e900:	bne	e924 <xport_read_variables+0x190>
    e904:	mov	r0, r4
    e908:	bl	eec0 <xport_read_obs_header_record>
    e90c:	cmp	r0, #0
    e910:	bne	e8f0 <xport_read_variables+0x15c>
    e914:	b	e9ac <xport_read_variables+0x218>
    e918:	mov	r0, #2
    e91c:	sub	sp, fp, #28
    e920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e924:	add	r1, sp, #8
    e928:	mov	r0, r4
    e92c:	bl	ec7c <xport_read_header_record>
    e930:	cmp	r0, #0
    e934:	bne	e8f0 <xport_read_variables+0x15c>
    e938:	add	r0, sp, #8
    e93c:	ldr	r1, [pc, #260]	; ea48 <xport_read_variables+0x2b4>
    e940:	add	r1, pc, r1
    e944:	bl	4878 <strcmp@plt>
    e948:	cmp	r0, #0
    e94c:	beq	e9ac <xport_read_variables+0x218>
    e950:	add	r0, sp, #8
    e954:	ldr	r1, [pc, #240]	; ea4c <xport_read_variables+0x2b8>
    e958:	add	r1, pc, r1
    e95c:	bl	4878 <strcmp@plt>
    e960:	cmp	r0, #0
    e964:	beq	e998 <xport_read_variables+0x204>
    e968:	add	r0, sp, #8
    e96c:	ldr	r1, [pc, #220]	; ea50 <xport_read_variables+0x2bc>
    e970:	add	r1, pc, r1
    e974:	bl	4878 <strcmp@plt>
    e978:	cmp	r0, #0
    e97c:	bne	e9ac <xport_read_variables+0x218>
    e980:	ldr	r1, [sp, #20]
    e984:	mov	r0, r4
    e988:	bl	f0a0 <xport_read_labels_v9>
    e98c:	cmp	r0, #0
    e990:	bne	e8f0 <xport_read_variables+0x15c>
    e994:	b	e9ac <xport_read_variables+0x218>
    e998:	ldr	r1, [sp, #20]
    e99c:	mov	r0, r4
    e9a0:	bl	eedc <xport_read_labels_v8>
    e9a4:	cmp	r0, #0
    e9a8:	bne	e8f0 <xport_read_variables+0x15c>
    e9ac:	mov	r0, #0
    e9b0:	str	r0, [r4, #76]	; 0x4c
    e9b4:	ldr	r1, [r4, #64]	; 0x40
    e9b8:	cmp	r1, #1
    e9bc:	blt	e8f0 <xport_read_variables+0x15c>
    e9c0:	mov	r9, #0
    e9c4:	mov	r8, #1
    e9c8:	mov	r5, #0
    e9cc:	ldr	r0, [r4, #376]	; 0x178
    e9d0:	ldr	r6, [r0, r5, lsl #2]
    e9d4:	str	r9, [r6, #2148]	; 0x864
    e9d8:	ldr	r7, [r4, #8]
    e9dc:	cmp	r7, #0
    e9e0:	beq	ea08 <xport_read_variables+0x274>
    e9e4:	ldr	r3, [r4, #36]	; 0x24
    e9e8:	add	r2, r6, #308	; 0x134
    e9ec:	mov	r0, r5
    e9f0:	mov	r1, r6
    e9f4:	blx	r7
    e9f8:	cmp	r0, #2
    e9fc:	beq	ea10 <xport_read_variables+0x27c>
    ea00:	cmp	r0, #1
    ea04:	beq	ea3c <xport_read_variables+0x2a8>
    ea08:	add	r9, r9, #1
    ea0c:	b	ea14 <xport_read_variables+0x280>
    ea10:	str	r8, [r6, #2144]	; 0x860
    ea14:	ldr	r0, [r6, #1596]	; 0x63c
    ea18:	ldr	r1, [r4, #64]	; 0x40
    ea1c:	ldr	r2, [r4, #76]	; 0x4c
    ea20:	add	r0, r2, r0
    ea24:	str	r0, [r4, #76]	; 0x4c
    ea28:	add	r5, r5, #1
    ea2c:	mov	r0, #0
    ea30:	cmp	r5, r1
    ea34:	blt	e9cc <xport_read_variables+0x238>
    ea38:	b	e8f0 <xport_read_variables+0x15c>
    ea3c:	mov	r0, #4
    ea40:	sub	sp, fp, #28
    ea44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ea48:	.word	0x00017264
    ea4c:	.word	0x00017252
    ea50:	.word	0x00017242

0000ea54 <xport_read_data>:
    ea54:	push	{r4, r5, r6, r7, fp, lr}
    ea58:	add	fp, sp, #16
    ea5c:	mov	r6, r0
    ea60:	ldr	r0, [r0, #76]	; 0x4c
    ea64:	mov	r7, #0
    ea68:	cmp	r0, #0
    ea6c:	ldrne	r1, [r6, #16]
    ea70:	cmpne	r1, #0
    ea74:	bne	ea80 <xport_read_data+0x2c>
    ea78:	mov	r0, r7
    ea7c:	pop	{r4, r5, r6, r7, fp, pc}
    ea80:	bl	4cb0 <readstat_malloc@plt>
    ea84:	mov	r5, r0
    ea88:	ldr	r0, [r6, #76]	; 0x4c
    ea8c:	bl	4cb0 <readstat_malloc@plt>
    ea90:	mov	r4, r0
    ea94:	mov	r7, #3
    ea98:	cmp	r5, #0
    ea9c:	cmpne	r4, #0
    eaa0:	bne	eacc <xport_read_data+0x78>
    eaa4:	cmp	r5, #0
    eaa8:	beq	eab4 <xport_read_data+0x60>
    eaac:	mov	r0, r5
    eab0:	bl	4938 <free@plt>
    eab4:	cmp	r4, #0
    eab8:	beq	ea78 <xport_read_data+0x24>
    eabc:	mov	r0, r4
    eac0:	bl	4938 <free@plt>
    eac4:	mov	r0, r7
    eac8:	pop	{r4, r5, r6, r7, fp, pc}
    eacc:	ldr	r2, [r6, #76]	; 0x4c
    ead0:	mov	r0, r4
    ead4:	mov	r1, #32
    ead8:	bl	4d28 <memset@plt>
    eadc:	ldr	r2, [r6, #76]	; 0x4c
    eae0:	mov	r0, r6
    eae4:	mov	r1, r5
    eae8:	bl	ed34 <read_bytes>
    eaec:	cmn	r0, #1
    eaf0:	beq	ebd0 <xport_read_data+0x17c>
    eaf4:	mov	r7, #0
    eaf8:	ldr	r1, [r6, #76]	; 0x4c
    eafc:	cmp	r0, r1
    eb00:	bcc	ebf0 <xport_read_data+0x19c>
    eb04:	cmp	r1, #0
    eb08:	beq	eb28 <xport_read_data+0xd4>
    eb0c:	mov	r0, #0
    eb10:	ldrb	r2, [r5, r0]
    eb14:	cmp	r2, #32
    eb18:	bne	eb48 <xport_read_data+0xf4>
    eb1c:	add	r0, r0, #1
    eb20:	cmp	r0, r1
    eb24:	bcc	eb10 <xport_read_data+0xbc>
    eb28:	add	r7, r7, #1
    eb2c:	ldr	r2, [r6, #76]	; 0x4c
    eb30:	mov	r0, r6
    eb34:	mov	r1, r5
    eb38:	bl	ed34 <read_bytes>
    eb3c:	cmn	r0, #1
    eb40:	bne	eaf8 <xport_read_data+0xa4>
    eb44:	b	ebd0 <xport_read_data+0x17c>
    eb48:	cmp	r7, #0
    eb4c:	beq	eb84 <xport_read_data+0x130>
    eb50:	mov	r0, r6
    eb54:	mov	r1, r4
    eb58:	bl	f32c <xport_process_row>
    eb5c:	cmp	r0, #0
    eb60:	bne	ebe0 <xport_read_data+0x18c>
    eb64:	ldr	r0, [r6, #68]	; 0x44
    eb68:	cmp	r0, #1
    eb6c:	blt	eb7c <xport_read_data+0x128>
    eb70:	ldr	r1, [r6, #80]	; 0x50
    eb74:	cmp	r1, r0
    eb78:	beq	ebf0 <xport_read_data+0x19c>
    eb7c:	subs	r7, r7, #1
    eb80:	bne	eb50 <xport_read_data+0xfc>
    eb84:	mov	r0, r6
    eb88:	mov	r1, r5
    eb8c:	bl	f32c <xport_process_row>
    eb90:	cmp	r0, #0
    eb94:	bne	ebe0 <xport_read_data+0x18c>
    eb98:	mov	r0, r6
    eb9c:	bl	f5dc <xport_update_progress>
    eba0:	cmp	r0, #0
    eba4:	bne	ebe0 <xport_read_data+0x18c>
    eba8:	ldr	r0, [r6, #68]	; 0x44
    ebac:	cmp	r0, #1
    ebb0:	blt	ebc8 <xport_read_data+0x174>
    ebb4:	ldr	r1, [r6, #80]	; 0x50
    ebb8:	mov	r7, #0
    ebbc:	cmp	r1, r0
    ebc0:	bne	eb2c <xport_read_data+0xd8>
    ebc4:	b	eaa4 <xport_read_data+0x50>
    ebc8:	mov	r7, #0
    ebcc:	b	eb2c <xport_read_data+0xd8>
    ebd0:	mov	r7, #2
    ebd4:	cmp	r5, #0
    ebd8:	bne	eaac <xport_read_data+0x58>
    ebdc:	b	eab4 <xport_read_data+0x60>
    ebe0:	mov	r7, r0
    ebe4:	cmp	r5, #0
    ebe8:	bne	eaac <xport_read_data+0x58>
    ebec:	b	eab4 <xport_read_data+0x60>
    ebf0:	mov	r7, #0
    ebf4:	cmp	r5, #0
    ebf8:	bne	eaac <xport_read_data+0x58>
    ebfc:	b	eab4 <xport_read_data+0x60>

0000ec00 <xport_ctx_free>:
    ec00:	push	{r4, r5, fp, lr}
    ec04:	add	fp, sp, #8
    ec08:	mov	r4, r0
    ec0c:	ldr	r0, [r0, #376]	; 0x178
    ec10:	cmp	r0, #0
    ec14:	beq	ec54 <xport_ctx_free+0x54>
    ec18:	ldr	r1, [r4, #64]	; 0x40
    ec1c:	ldr	r0, [r4, #376]	; 0x178
    ec20:	cmp	r1, #1
    ec24:	blt	ec50 <xport_ctx_free+0x50>
    ec28:	mov	r5, #0
    ec2c:	ldr	r0, [r0, r5, lsl #2]
    ec30:	cmp	r0, #0
    ec34:	beq	ec3c <xport_ctx_free+0x3c>
    ec38:	bl	4938 <free@plt>
    ec3c:	add	r5, r5, #1
    ec40:	ldr	r1, [r4, #64]	; 0x40
    ec44:	ldr	r0, [r4, #376]	; 0x178
    ec48:	cmp	r5, r1
    ec4c:	blt	ec2c <xport_ctx_free+0x2c>
    ec50:	bl	4938 <free@plt>
    ec54:	ldr	r0, [r4, #48]	; 0x30
    ec58:	cmp	r0, #0
    ec5c:	beq	ec64 <xport_ctx_free+0x64>
    ec60:	bl	4848 <iconv_close@plt>
    ec64:	mov	r0, r4
    ec68:	pop	{r4, r5, fp, lr}
    ec6c:	b	4938 <free@plt>

0000ec70 <xport_ctx_init>:
    ec70:	mov	r0, #1
    ec74:	mov	r1, #384	; 0x180
    ec78:	b	47d0 <calloc@plt>

0000ec7c <xport_read_header_record>:
    ec7c:	push	{r4, r5, fp, lr}
    ec80:	add	fp, sp, #8
    ec84:	sub	sp, sp, #104	; 0x68
    ec88:	mov	r4, r1
    ec8c:	add	r1, sp, #23
    ec90:	bl	ed08 <xport_read_record>
    ec94:	mov	r5, r0
    ec98:	cmp	r0, #0
    ec9c:	bne	ecf8 <xport_read_header_record+0x7c>
    eca0:	vmov.i32	q8, #0	; 0x00000000
    eca4:	add	r0, r4, #16
    eca8:	vst1.32	{d16-d17}, [r0]
    ecac:	mov	r1, #28
    ecb0:	mov	r2, r4
    ecb4:	vst1.32	{d16-d17}, [r2], r1
    ecb8:	mov	r5, #0
    ecbc:	mov	r1, r4
    ecc0:	str	r5, [r1, #32]!
    ecc4:	add	ip, r4, #24
    ecc8:	add	r3, r4, #20
    eccc:	stm	sp, {r0, r3, ip}
    ecd0:	str	r2, [sp, #12]
    ecd4:	str	r1, [sp, #16]
    ecd8:	add	r3, r4, #12
    ecdc:	add	r0, sp, #23
    ece0:	ldr	r1, [pc, #28]	; ed04 <xport_read_header_record+0x88>
    ece4:	add	r1, pc, r1
    ece8:	mov	r2, r4
    ecec:	bl	4d10 <__isoc99_sscanf@plt>
    ecf0:	cmp	r0, #2
    ecf4:	movwlt	r5, #5
    ecf8:	mov	r0, r5
    ecfc:	sub	sp, fp, #8
    ed00:	pop	{r4, r5, fp, pc}
    ed04:	.word	0x00016e50

0000ed08 <xport_read_record>:
    ed08:	push	{r4, sl, fp, lr}
    ed0c:	add	fp, sp, #8
    ed10:	mov	r4, r1
    ed14:	mov	r2, #80	; 0x50
    ed18:	bl	ed34 <read_bytes>
    ed1c:	mov	r1, r0
    ed20:	mov	r0, #2
    ed24:	cmp	r1, #80	; 0x50
    ed28:	movge	r0, #0
    ed2c:	strbge	r0, [r4, #80]	; 0x50
    ed30:	pop	{r4, sl, fp, pc}

0000ed34 <read_bytes>:
    ed34:	mov	ip, r2
    ed38:	ldr	r0, [r0, #52]	; 0x34
    ed3c:	ldr	r3, [r0, #12]
    ed40:	ldr	r2, [r0, #20]
    ed44:	mov	r0, r1
    ed48:	mov	r1, ip
    ed4c:	bx	r3

0000ed50 <xport_construct_format>:
    ed50:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    ed54:	add	fp, sp, #24
    ed58:	mov	r7, r3
    ed5c:	mov	r3, r2
    ed60:	mov	r2, r1
    ed64:	mov	r5, r0
    ed68:	mov	r0, #1
    ed6c:	orr	r1, r0, r3, lsl #2
    ed70:	add	r0, r1, #7
    ed74:	bic	r0, r0, #7
    ed78:	sub	r6, sp, r0
    ed7c:	mov	sp, r6
    ed80:	sub	sp, sp, #8
    ed84:	mov	r0, #0
    ed88:	str	r0, [sp]
    ed8c:	mov	r0, r6
    ed90:	bl	4cbc <readstat_convert@plt>
    ed94:	add	sp, sp, #8
    ed98:	mov	r4, r0
    ed9c:	cmp	r0, #0
    eda0:	bne	ee0c <xport_construct_format+0xbc>
    eda4:	ldrb	r0, [r6]
    eda8:	cmp	r0, #0
    edac:	beq	edd4 <xport_construct_format+0x84>
    edb0:	ldr	r0, [fp, #8]
    edb4:	cmp	r0, #0
    edb8:	beq	ede0 <xport_construct_format+0x90>
    edbc:	sub	sp, sp, #8
    edc0:	str	r7, [sp]
    edc4:	str	r0, [sp, #4]
    edc8:	ldr	r2, [pc, #100]	; ee34 <xport_construct_format+0xe4>
    edcc:	add	r2, pc, r2
    edd0:	b	edf8 <xport_construct_format+0xa8>
    edd4:	mov	r0, #0
    edd8:	strb	r0, [r5]
    eddc:	b	ee0c <xport_construct_format+0xbc>
    ede0:	cmp	r7, #0
    ede4:	beq	ee18 <xport_construct_format+0xc8>
    ede8:	sub	sp, sp, #8
    edec:	str	r7, [sp]
    edf0:	ldr	r2, [pc, #64]	; ee38 <xport_construct_format+0xe8>
    edf4:	add	r2, pc, r2
    edf8:	mov	r0, r5
    edfc:	mov	r1, #256	; 0x100
    ee00:	mov	r3, r6
    ee04:	bl	4d04 <snprintf@plt>
    ee08:	add	sp, sp, #8
    ee0c:	mov	r0, r4
    ee10:	sub	sp, fp, #24
    ee14:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    ee18:	ldr	r2, [pc, #28]	; ee3c <xport_construct_format+0xec>
    ee1c:	add	r2, pc, r2
    ee20:	mov	r0, r5
    ee24:	mov	r1, #256	; 0x100
    ee28:	mov	r3, r6
    ee2c:	bl	4d04 <snprintf@plt>
    ee30:	b	ee0c <xport_construct_format+0xbc>
    ee34:	.word	0x00016dee
    ee38:	.word	0x00016dce
    ee3c:	.word	0x00017990

0000ee40 <xport_skip_rest_of_record>:
    ee40:	push	{r4, r5, fp, lr}
    ee44:	add	fp, sp, #8
    ee48:	ldr	r5, [r0, #52]	; 0x34
    ee4c:	ldr	r3, [r5, #8]
    ee50:	ldr	r2, [r5, #20]
    ee54:	mov	r0, #0
    ee58:	mov	r1, #1
    ee5c:	blx	r3
    ee60:	mov	r4, #15
    ee64:	cmn	r0, #1
    ee68:	beq	eeac <xport_skip_rest_of_record+0x6c>
    ee6c:	movw	r1, #26215	; 0x6667
    ee70:	movt	r1, #26214	; 0x6666
    ee74:	smmul	r1, r0, r1
    ee78:	asr	r2, r1, #5
    ee7c:	add	r1, r2, r1, lsr #31
    ee80:	add	r1, r1, r1, lsl #2
    ee84:	sub	r0, r0, r1, lsl #4
    ee88:	cmp	r0, #0
    ee8c:	beq	eeb4 <xport_skip_rest_of_record+0x74>
    ee90:	ldr	r3, [r5, #8]
    ee94:	ldr	r2, [r5, #20]
    ee98:	rsb	r0, r0, #80	; 0x50
    ee9c:	mov	r1, #1
    eea0:	blx	r3
    eea4:	cmn	r0, #1
    eea8:	movne	r4, #0
    eeac:	mov	r0, r4
    eeb0:	pop	{r4, r5, fp, pc}
    eeb4:	mov	r4, #0
    eeb8:	mov	r0, r4
    eebc:	pop	{r4, r5, fp, pc}

0000eec0 <xport_read_obs_header_record>:
    eec0:	ldr	r1, [pc, #12]	; eed4 <xport_read_obs_header_record+0x14>
    eec4:	add	r1, pc, r1
    eec8:	ldr	r2, [pc, #8]	; eed8 <xport_read_obs_header_record+0x18>
    eecc:	add	r2, pc, r2
    eed0:	b	e530 <xport_expect_header_record>
    eed4:	.word	0x00016d03
    eed8:	.word	0x00016cd8

0000eedc <xport_read_labels_v8>:
    eedc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eee0:	add	fp, sp, #28
    eee4:	sub	sp, sp, #36	; 0x24
    eee8:	mov	r6, r0
    eeec:	str	r1, [fp, #-60]	; 0xffffffc4
    eef0:	cmp	r1, #1
    eef4:	blt	f060 <xport_read_labels_v8+0x184>
    eef8:	mov	r7, #0
    eefc:	mov	r0, r6
    ef00:	sub	r1, fp, #38	; 0x26
    ef04:	mov	r2, #6
    ef08:	bl	ed34 <read_bytes>
    ef0c:	cmp	r0, #6
    ef10:	bne	f090 <xport_read_labels_v8+0x1b4>
    ef14:	bl	492c <machine_is_little_endian@plt>
    ef18:	ldrh	r4, [fp, #-38]	; 0xffffffda
    ef1c:	cmp	r0, #0
    ef20:	beq	ef4c <xport_read_labels_v8+0x70>
    ef24:	mov	r0, r4
    ef28:	bl	4920 <byteswap2@plt>
    ef2c:	mov	r4, r0
    ef30:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    ef34:	bl	4920 <byteswap2@plt>
    ef38:	mov	r8, r0
    ef3c:	ldrh	r0, [fp, #-34]	; 0xffffffde
    ef40:	bl	4920 <byteswap2@plt>
    ef44:	mov	sl, r0
    ef48:	b	ef54 <xport_read_labels_v8+0x78>
    ef4c:	ldrh	sl, [fp, #-34]	; 0xffffffde
    ef50:	ldrh	r8, [fp, #-36]	; 0xffffffdc
    ef54:	mov	r5, #5
    ef58:	cmp	r4, #0
    ef5c:	beq	f094 <xport_read_labels_v8+0x1b8>
    ef60:	ldr	r1, [r6, #64]	; 0x40
    ef64:	cmp	r1, r4
    ef68:	blt	f094 <xport_read_labels_v8+0x1b8>
    ef6c:	str	r7, [fp, #-52]	; 0xffffffcc
    ef70:	add	r2, r8, #8
    ef74:	movw	r1, #65528	; 0xfff8
    ef78:	movt	r1, #1
    ef7c:	and	r2, r2, r1
    ef80:	str	sp, [fp, #-44]	; 0xffffffd4
    ef84:	sub	r9, sp, r2
    ef88:	add	r2, sl, #8
    ef8c:	and	r1, r2, r1
    ef90:	mov	sp, r9
    ef94:	mov	r7, r8
    ef98:	sub	r8, sp, r1
    ef9c:	mov	sp, r8
    efa0:	ldr	r0, [r6, #376]	; 0x178
    efa4:	add	r0, r0, r4, lsl #2
    efa8:	ldr	r0, [r0, #-4]
    efac:	str	r0, [fp, #-48]	; 0xffffffd0
    efb0:	mov	r0, r6
    efb4:	mov	r1, r9
    efb8:	mov	r2, r7
    efbc:	bl	ed34 <read_bytes>
    efc0:	mov	r5, #2
    efc4:	cmp	r0, r7
    efc8:	bne	f088 <xport_read_labels_v8+0x1ac>
    efcc:	mov	r4, r7
    efd0:	mov	r0, r6
    efd4:	mov	r1, r8
    efd8:	mov	r2, sl
    efdc:	bl	ed34 <read_bytes>
    efe0:	str	sl, [fp, #-56]	; 0xffffffc8
    efe4:	cmp	r0, sl
    efe8:	bne	f088 <xport_read_labels_v8+0x1ac>
    efec:	ldr	r0, [r6, #48]	; 0x30
    eff0:	sub	sp, sp, #8
    eff4:	str	r0, [sp]
    eff8:	ldr	r7, [fp, #-48]	; 0xffffffd0
    effc:	add	r0, r7, #8
    f000:	mov	r1, #300	; 0x12c
    f004:	mov	r2, r9
    f008:	mov	r3, r4
    f00c:	bl	4cbc <readstat_convert@plt>
    f010:	add	sp, sp, #8
    f014:	cmp	r0, #0
    f018:	bne	f084 <xport_read_labels_v8+0x1a8>
    f01c:	ldr	r0, [r6, #48]	; 0x30
    f020:	sub	sp, sp, #8
    f024:	str	r0, [sp]
    f028:	add	r0, r7, #564	; 0x234
    f02c:	mov	r1, #1024	; 0x400
    f030:	mov	r2, r8
    f034:	ldr	r3, [fp, #-56]	; 0xffffffc8
    f038:	bl	4cbc <readstat_convert@plt>
    f03c:	add	sp, sp, #8
    f040:	cmp	r0, #0
    f044:	bne	f084 <xport_read_labels_v8+0x1a8>
    f048:	ldr	r7, [fp, #-52]	; 0xffffffcc
    f04c:	add	r7, r7, #1
    f050:	ldr	sp, [fp, #-44]	; 0xffffffd4
    f054:	ldr	r0, [fp, #-60]	; 0xffffffc4
    f058:	cmp	r7, r0
    f05c:	blt	eefc <xport_read_labels_v8+0x20>
    f060:	mov	r0, r6
    f064:	bl	ee40 <xport_skip_rest_of_record>
    f068:	mov	r5, r0
    f06c:	cmp	r0, #0
    f070:	bne	f094 <xport_read_labels_v8+0x1b8>
    f074:	mov	r0, r6
    f078:	bl	eec0 <xport_read_obs_header_record>
    f07c:	mov	r5, r0
    f080:	b	f094 <xport_read_labels_v8+0x1b8>
    f084:	mov	r5, r0
    f088:	ldr	sp, [fp, #-44]	; 0xffffffd4
    f08c:	b	f094 <xport_read_labels_v8+0x1b8>
    f090:	mov	r5, #2
    f094:	mov	r0, r5
    f098:	sub	sp, fp, #28
    f09c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f0a0 <xport_read_labels_v9>:
    f0a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f0a4:	add	fp, sp, #28
    f0a8:	sub	sp, sp, #52	; 0x34
    f0ac:	mov	r6, r0
    f0b0:	str	r1, [fp, #-80]	; 0xffffffb0
    f0b4:	cmp	r1, #1
    f0b8:	blt	f2e0 <xport_read_labels_v9+0x240>
    f0bc:	mov	r5, #0
    f0c0:	mov	r0, r6
    f0c4:	sub	r1, fp, #42	; 0x2a
    f0c8:	mov	r2, #10
    f0cc:	bl	ed34 <read_bytes>
    f0d0:	cmp	r0, #10
    f0d4:	bne	f31c <xport_read_labels_v9+0x27c>
    f0d8:	bl	492c <machine_is_little_endian@plt>
    f0dc:	ldrh	r4, [fp, #-42]	; 0xffffffd6
    f0e0:	cmp	r0, #0
    f0e4:	beq	f128 <xport_read_labels_v9+0x88>
    f0e8:	mov	r0, r4
    f0ec:	bl	4920 <byteswap2@plt>
    f0f0:	mov	r4, r0
    f0f4:	ldrh	r0, [fp, #-40]	; 0xffffffd8
    f0f8:	bl	4920 <byteswap2@plt>
    f0fc:	mov	r8, r0
    f100:	ldrh	r0, [fp, #-38]	; 0xffffffda
    f104:	bl	4920 <byteswap2@plt>
    f108:	mov	r9, r0
    f10c:	ldrh	r0, [fp, #-36]	; 0xffffffdc
    f110:	bl	4920 <byteswap2@plt>
    f114:	mov	r7, r0
    f118:	ldrh	r0, [fp, #-34]	; 0xffffffde
    f11c:	bl	4920 <byteswap2@plt>
    f120:	str	r0, [fp, #-48]	; 0xffffffd0
    f124:	b	f13c <xport_read_labels_v9+0x9c>
    f128:	ldrh	r0, [fp, #-34]	; 0xffffffde
    f12c:	str	r0, [fp, #-48]	; 0xffffffd0
    f130:	ldrh	r7, [fp, #-36]	; 0xffffffdc
    f134:	ldrh	r9, [fp, #-38]	; 0xffffffda
    f138:	ldrh	r8, [fp, #-40]	; 0xffffffd8
    f13c:	mov	sl, #5
    f140:	cmp	r4, #0
    f144:	beq	f320 <xport_read_labels_v9+0x280>
    f148:	ldr	r0, [r6, #64]	; 0x40
    f14c:	cmp	r0, r4
    f150:	blt	f320 <xport_read_labels_v9+0x280>
    f154:	str	r5, [fp, #-72]	; 0xffffffb8
    f158:	add	r0, r8, #8
    f15c:	movw	r1, #65528	; 0xfff8
    f160:	movt	r1, #1
    f164:	mov	r2, r1
    f168:	and	r0, r0, r1
    f16c:	str	sp, [fp, #-52]	; 0xffffffcc
    f170:	sub	r1, sp, r0
    f174:	add	r0, r9, #8
    f178:	and	r0, r0, r2
    f17c:	mov	sp, r1
    f180:	mov	r5, r8
    f184:	sub	r8, sp, r0
    f188:	str	r7, [fp, #-56]	; 0xffffffc8
    f18c:	add	r0, r7, #8
    f190:	and	r0, r0, r2
    f194:	mov	sp, r8
    f198:	mov	r7, r9
    f19c:	sub	r9, sp, r0
    f1a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    f1a4:	add	r0, r0, #8
    f1a8:	and	r0, r0, r2
    f1ac:	mov	sp, r9
    f1b0:	sub	r0, sp, r0
    f1b4:	str	r0, [fp, #-60]	; 0xffffffc4
    f1b8:	mov	sp, r0
    f1bc:	ldr	r0, [r6, #376]	; 0x178
    f1c0:	add	r0, r0, r4, lsl #2
    f1c4:	ldr	r4, [r0, #-4]
    f1c8:	mov	r0, r6
    f1cc:	str	r1, [fp, #-68]	; 0xffffffbc
    f1d0:	mov	r2, r5
    f1d4:	bl	ed34 <read_bytes>
    f1d8:	mov	sl, #2
    f1dc:	str	r5, [fp, #-64]	; 0xffffffc0
    f1e0:	cmp	r0, r5
    f1e4:	bne	f304 <xport_read_labels_v9+0x264>
    f1e8:	mov	r0, r6
    f1ec:	mov	r1, r8
    f1f0:	mov	r2, r7
    f1f4:	bl	ed34 <read_bytes>
    f1f8:	str	r7, [fp, #-76]	; 0xffffffb4
    f1fc:	cmp	r0, r7
    f200:	bne	f304 <xport_read_labels_v9+0x264>
    f204:	mov	r0, r6
    f208:	mov	r1, r9
    f20c:	ldr	r7, [fp, #-56]	; 0xffffffc8
    f210:	mov	r2, r7
    f214:	bl	ed34 <read_bytes>
    f218:	cmp	r0, r7
    f21c:	bne	f304 <xport_read_labels_v9+0x264>
    f220:	mov	r0, r6
    f224:	ldr	r5, [fp, #-60]	; 0xffffffc4
    f228:	mov	r1, r5
    f22c:	ldr	r7, [fp, #-48]	; 0xffffffd0
    f230:	mov	r2, r7
    f234:	bl	ed34 <read_bytes>
    f238:	cmp	r0, r7
    f23c:	ldr	r7, [fp, #-52]	; 0xffffffcc
    f240:	bne	f314 <xport_read_labels_v9+0x274>
    f244:	ldr	r0, [r6, #48]	; 0x30
    f248:	sub	sp, sp, #8
    f24c:	str	r0, [sp]
    f250:	add	r0, r4, #8
    f254:	mov	r1, #300	; 0x12c
    f258:	ldr	r2, [fp, #-68]	; 0xffffffbc
    f25c:	ldr	r3, [fp, #-64]	; 0xffffffc0
    f260:	bl	4cbc <readstat_convert@plt>
    f264:	add	sp, sp, #8
    f268:	cmp	r0, #0
    f26c:	bne	f310 <xport_read_labels_v9+0x270>
    f270:	ldr	r0, [r6, #48]	; 0x30
    f274:	sub	sp, sp, #8
    f278:	str	r0, [sp]
    f27c:	add	r0, r4, #564	; 0x234
    f280:	mov	r1, #1024	; 0x400
    f284:	mov	r2, r5
    f288:	ldr	r3, [fp, #-48]	; 0xffffffd0
    f28c:	bl	4cbc <readstat_convert@plt>
    f290:	add	sp, sp, #8
    f294:	cmp	r0, #0
    f298:	bne	f310 <xport_read_labels_v9+0x270>
    f29c:	ldr	r3, [r4, #2136]	; 0x858
    f2a0:	ldr	r0, [r4, #2140]	; 0x85c
    f2a4:	sub	sp, sp, #8
    f2a8:	str	r0, [sp]
    f2ac:	add	r0, r4, #308	; 0x134
    f2b0:	mov	r1, r8
    f2b4:	ldr	r2, [fp, #-76]	; 0xffffffb4
    f2b8:	bl	ed50 <xport_construct_format>
    f2bc:	add	sp, sp, #8
    f2c0:	cmp	r0, #0
    f2c4:	bne	f310 <xport_read_labels_v9+0x270>
    f2c8:	ldr	r5, [fp, #-72]	; 0xffffffb8
    f2cc:	add	r5, r5, #1
    f2d0:	mov	sp, r7
    f2d4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    f2d8:	cmp	r5, r0
    f2dc:	blt	f0c0 <xport_read_labels_v9+0x20>
    f2e0:	mov	r0, r6
    f2e4:	bl	ee40 <xport_skip_rest_of_record>
    f2e8:	mov	sl, r0
    f2ec:	cmp	r0, #0
    f2f0:	bne	f320 <xport_read_labels_v9+0x280>
    f2f4:	mov	r0, r6
    f2f8:	bl	eec0 <xport_read_obs_header_record>
    f2fc:	mov	sl, r0
    f300:	b	f320 <xport_read_labels_v9+0x280>
    f304:	ldr	r7, [fp, #-52]	; 0xffffffcc
    f308:	mov	sp, r7
    f30c:	b	f320 <xport_read_labels_v9+0x280>
    f310:	mov	sl, r0
    f314:	mov	sp, r7
    f318:	b	f320 <xport_read_labels_v9+0x280>
    f31c:	mov	sl, #2
    f320:	mov	r0, sl
    f324:	sub	sp, fp, #28
    f328:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000f32c <xport_process_row>:
    f32c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f330:	add	fp, sp, #28
    f334:	sub	sp, sp, #60	; 0x3c
    f338:	str	r1, [sp, #32]
    f33c:	mov	sl, r0
    f340:	ldr	r0, [r0, #64]	; 0x40
    f344:	cmp	r0, #1
    f348:	blt	f570 <xport_process_row+0x244>
    f34c:	add	r0, sp, #40	; 0x28
    f350:	orr	r0, r0, #1
    f354:	str	r0, [sp, #16]
    f358:	mov	ip, #0
    f35c:	mov	r0, #0
    f360:	str	r0, [sp, #28]
    f364:	mov	r6, #0
    f368:	mov	r8, #0
    f36c:	str	sl, [sp, #24]
    f370:	b	f3a8 <xport_process_row+0x7c>
    f374:	bl	4bd8 <sas_validate_tag@plt>
    f378:	cmp	r0, #0
    f37c:	bne	f41c <xport_process_row+0xf0>
    f380:	ldr	r0, [sp, #32]
    f384:	ldr	r6, [sp, #20]
    f388:	ldrb	r0, [r0, r6]
    f38c:	cmp	r0, #46	; 0x2e
    f390:	beq	f4d8 <xport_process_row+0x1ac>
    f394:	and	r1, r9, #64768	; 0xfd00
    f398:	orr	r1, r4, r1
    f39c:	orr	r0, r1, r0
    f3a0:	orr	r7, r0, #512	; 0x200
    f3a4:	b	f4e4 <xport_process_row+0x1b8>
    f3a8:	and	r9, r4, #64512	; 0xfc00
    f3ac:	bfc	r4, #0, #16
    f3b0:	orr	r7, r4, r9
    f3b4:	ldr	r0, [sl, #376]	; 0x178
    f3b8:	ldr	r5, [r0, r8, lsl #2]
    f3bc:	ldr	r1, [r5]
    f3c0:	cmp	r1, #0
    f3c4:	str	r1, [sp, #36]	; 0x24
    f3c8:	beq	f454 <xport_process_row+0x128>
    f3cc:	movw	r0, #0
    f3d0:	movt	r0, #32760	; 0x7ff8
    f3d4:	str	r0, [fp, #-36]	; 0xffffffdc
    f3d8:	str	ip, [fp, #-40]	; 0xffffffd8
    f3dc:	ldr	r0, [r5, #1596]	; 0x63c
    f3e0:	sub	r0, r0, #3
    f3e4:	cmp	r0, #5
    f3e8:	bhi	f4ec <xport_process_row+0x1c0>
    f3ec:	str	ip, [sp, #44]	; 0x2c
    f3f0:	str	ip, [sp, #40]	; 0x28
    f3f4:	ldr	r0, [sp, #32]
    f3f8:	str	r6, [sp, #20]
    f3fc:	add	sl, r0, r6
    f400:	add	r1, sl, #1
    f404:	ldr	r0, [r5, #1596]	; 0x63c
    f408:	sub	r2, r0, #1
    f40c:	ldr	r0, [sp, #16]
    f410:	bl	4a10 <memcmp@plt>
    f414:	cmp	r0, #0
    f418:	beq	f4c4 <xport_process_row+0x198>
    f41c:	ldr	r2, [r5, #1596]	; 0x63c
    f420:	add	r4, sp, #40	; 0x28
    f424:	mov	r0, r4
    f428:	mov	r1, sl
    f42c:	bl	4998 <memcpy@plt>
    f430:	mov	r0, r4
    f434:	mov	r1, #1
    f438:	sub	r2, fp, #40	; 0x28
    f43c:	mov	r3, #0
    f440:	bl	4a7c <cnxptiee@plt>
    f444:	cmp	r0, #0
    f448:	ldr	r6, [sp, #20]
    f44c:	beq	f4e4 <xport_process_row+0x1b8>
    f450:	b	f5cc <xport_process_row+0x2a0>
    f454:	ldr	r0, [r5, #1596]	; 0x63c
    f458:	mov	r1, #1
    f45c:	orr	r1, r1, r0, lsl #2
    f460:	ldr	r0, [sp, #28]
    f464:	bl	4d70 <readstat_realloc@plt>
    f468:	cmp	r0, #0
    f46c:	beq	f5b8 <xport_process_row+0x28c>
    f470:	mov	r4, r0
    f474:	mov	r1, #1
    f478:	mov	r9, r5
    f47c:	ldr	r3, [r5, #1596]	; 0x63c
    f480:	ldr	r0, [sl, #48]	; 0x30
    f484:	str	r0, [sp]
    f488:	ldr	r0, [sp, #32]
    f48c:	add	r2, r0, r6
    f490:	orr	r1, r1, r3, lsl #2
    f494:	mov	r0, r4
    f498:	bl	4cbc <readstat_convert@plt>
    f49c:	mov	r3, #0
    f4a0:	cmp	r0, #0
    f4a4:	bne	f5c4 <xport_process_row+0x298>
    f4a8:	str	r4, [sp, #28]
    f4ac:	mov	r2, r4
    f4b0:	mov	r4, r7
    f4b4:	ldr	sl, [sp, #24]
    f4b8:	mov	ip, #0
    f4bc:	mov	r5, r9
    f4c0:	b	f4f8 <xport_process_row+0x1cc>
    f4c4:	ldr	r0, [sp, #32]
    f4c8:	ldr	r6, [sp, #20]
    f4cc:	ldrb	r0, [r0, r6]
    f4d0:	cmp	r0, #46	; 0x2e
    f4d4:	bne	f374 <xport_process_row+0x48>
    f4d8:	and	r0, r9, #65024	; 0xfe00
    f4dc:	orr	r0, r4, r0
    f4e0:	orr	r7, r0, #256	; 0x100
    f4e4:	ldr	sl, [sp, #24]
    f4e8:	mov	ip, #0
    f4ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
    f4f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
    f4f4:	mov	r4, r7
    f4f8:	mov	r1, r5
    f4fc:	ldr	r9, [r5, #1596]	; 0x63c
    f500:	ldr	r5, [sl, #16]
    f504:	cmp	r5, #0
    f508:	beq	f558 <xport_process_row+0x22c>
    f50c:	ldr	r0, [sl, #376]	; 0x178
    f510:	ldr	r0, [r0, r8, lsl #2]
    f514:	ldr	r0, [r0, #2144]	; 0x860
    f518:	cmp	r0, #0
    f51c:	bne	f558 <xport_process_row+0x22c>
    f520:	ldr	r0, [sl, #72]	; 0x48
    f524:	cmp	r0, #0
    f528:	bne	f558 <xport_process_row+0x22c>
    f52c:	mov	r7, r6
    f530:	ldr	ip, [sl, #36]	; 0x24
    f534:	ldr	r0, [sl, #80]	; 0x50
    f538:	ldr	r6, [sp, #36]	; 0x24
    f53c:	str	r6, [sp]
    f540:	stmib	sp, {r4, ip}
    f544:	blx	r5
    f548:	mov	ip, #0
    f54c:	mov	r6, r7
    f550:	cmp	r0, #0
    f554:	bne	f5d4 <xport_process_row+0x2a8>
    f558:	add	r6, r9, r6
    f55c:	ldr	r0, [sl, #64]	; 0x40
    f560:	add	r8, r8, #1
    f564:	cmp	r8, r0
    f568:	blt	f3a8 <xport_process_row+0x7c>
    f56c:	b	f578 <xport_process_row+0x24c>
    f570:	mov	r0, #0
    f574:	str	r0, [sp, #28]
    f578:	ldr	r0, [sl, #72]	; 0x48
    f57c:	cmp	r0, #0
    f580:	beq	f590 <xport_process_row+0x264>
    f584:	sub	r0, r0, #1
    f588:	str	r0, [sl, #72]	; 0x48
    f58c:	b	f59c <xport_process_row+0x270>
    f590:	ldr	r0, [sl, #80]	; 0x50
    f594:	add	r0, r0, #1
    f598:	str	r0, [sl, #80]	; 0x50
    f59c:	mov	r5, #0
    f5a0:	ldr	r4, [sp, #28]
    f5a4:	mov	r0, r4
    f5a8:	bl	4938 <free@plt>
    f5ac:	mov	r0, r5
    f5b0:	sub	sp, fp, #28
    f5b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f5b8:	mov	r5, #3
    f5bc:	mov	r4, #0
    f5c0:	b	f5a4 <xport_process_row+0x278>
    f5c4:	mov	r5, r0
    f5c8:	b	f5a4 <xport_process_row+0x278>
    f5cc:	mov	r5, #16
    f5d0:	b	f5a0 <xport_process_row+0x274>
    f5d4:	mov	r5, #4
    f5d8:	b	f5a0 <xport_process_row+0x274>

0000f5dc <xport_update_progress>:
    f5dc:	push	{fp, lr}
    f5e0:	mov	fp, sp
    f5e4:	ldr	r1, [r0, #28]
    f5e8:	ldr	ip, [r0, #32]
    f5ec:	ldr	r2, [r0, #36]	; 0x24
    f5f0:	ldr	r0, [r0, #52]	; 0x34
    f5f4:	ldr	lr, [r0, #16]
    f5f8:	ldr	r3, [r0, #20]
    f5fc:	mov	r0, ip
    f600:	mov	ip, lr
    f604:	pop	{fp, lr}
    f608:	bx	ip

0000f60c <readstat_begin_writing_xport>:
    f60c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f610:	add	fp, sp, #28
    f614:	mov	r6, r2
    f618:	ldr	r3, [r0, #8]
    f61c:	cmp	r3, #0
    f620:	moveq	r3, #8
    f624:	streq	r3, [r0, #8]
    f628:	ldr	r3, [pc, #180]	; f6e4 <readstat_begin_writing_xport+0xd8>
    f62c:	add	r3, pc, r3
    f630:	str	r3, [r0, #292]	; 0x124
    f634:	ldr	r8, [pc, #172]	; f6e8 <readstat_begin_writing_xport+0xdc>
    f638:	add	r8, pc, r8
    f63c:	ldr	r9, [pc, #168]	; f6ec <readstat_begin_writing_xport+0xe0>
    f640:	add	r9, pc, r9
    f644:	ldr	sl, [pc, #164]	; f6f0 <readstat_begin_writing_xport+0xe4>
    f648:	add	sl, pc, sl
    f64c:	ldr	r7, [pc, #160]	; f6f4 <readstat_begin_writing_xport+0xe8>
    f650:	add	r7, pc, r7
    f654:	ldr	r3, [pc, #156]	; f6f8 <readstat_begin_writing_xport+0xec>
    f658:	add	r3, pc, r3
    f65c:	ldr	r4, [pc, #152]	; f6fc <readstat_begin_writing_xport+0xf0>
    f660:	add	r4, pc, r4
    f664:	ldr	r5, [pc, #148]	; f700 <readstat_begin_writing_xport+0xf4>
    f668:	add	r5, pc, r5
    f66c:	ldr	r2, [pc, #144]	; f704 <readstat_begin_writing_xport+0xf8>
    f670:	add	r2, pc, r2
    f674:	ldr	ip, [pc, #140]	; f708 <readstat_begin_writing_xport+0xfc>
    f678:	add	ip, pc, ip
    f67c:	ldr	lr, [pc, #136]	; f70c <readstat_begin_writing_xport+0x100>
    f680:	add	lr, pc, lr
    f684:	str	r7, [r0, #264]	; 0x108
    f688:	str	r3, [r0, #268]	; 0x10c
    f68c:	str	r4, [r0, #272]	; 0x110
    f690:	str	r2, [r0, #276]	; 0x114
    f694:	str	lr, [r0, #280]	; 0x118
    f698:	str	ip, [r0, #284]	; 0x11c
    f69c:	ldr	r2, [pc, #108]	; f710 <readstat_begin_writing_xport+0x104>
    f6a0:	ldr	r2, [pc, r2]
    f6a4:	str	r5, [r0, #228]	; 0xe4
    f6a8:	str	r2, [r0, #232]	; 0xe8
    f6ac:	ldr	r2, [pc, #96]	; f714 <readstat_begin_writing_xport+0x108>
    f6b0:	add	r2, pc, r2
    f6b4:	str	r2, [r0, #236]	; 0xec
    f6b8:	str	r8, [r0, #240]	; 0xf0
    f6bc:	ldr	r2, [pc, #84]	; f718 <readstat_begin_writing_xport+0x10c>
    f6c0:	add	r2, pc, r2
    f6c4:	add	r3, r0, #244	; 0xf4
    f6c8:	stm	r3, {r2, r9, sl}
    f6cc:	ldr	r2, [pc, #72]	; f71c <readstat_begin_writing_xport+0x110>
    f6d0:	add	r2, pc, r2
    f6d4:	str	r2, [r0, #256]	; 0x100
    f6d8:	mov	r2, r6
    f6dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f6e0:	b	49d4 <readstat_begin_writing_file@plt>
    f6e4:	.word	0x000000ec
    f6e8:	.word	0x00000138
    f6ec:	.word	0x00000148
    f6f0:	.word	0x00000148
    f6f4:	.word	0x00000208
    f6f8:	.word	0x00000208
    f6fc:	.word	0x00000210
    f700:	.word	0x0000022c
    f704:	.word	0x0000024c
    f708:	.word	0x00000318
    f70c:	.word	0x00000314
    f710:	.word	0x00035c50
    f714:	.word	0x000000b4
    f718:	.word	0x000000bc
    f71c:	.word	0x00000120

0000f720 <xport_metadata_ok>:
    f720:	ldr	r2, [r0, #8]
    f724:	cmp	r2, #8
    f728:	movne	r1, #24
    f72c:	cmpne	r2, #5
    f730:	bne	f75c <xport_metadata_ok+0x3c>
    f734:	ldrb	r3, [r0, #188]!	; 0xbc
    f738:	mov	r1, #0
    f73c:	cmp	r3, #0
    f740:	beq	f75c <xport_metadata_ok+0x3c>
    f744:	cmp	r2, #5
    f748:	beq	f764 <xport_metadata_ok+0x44>
    f74c:	cmp	r2, #8
    f750:	bne	f75c <xport_metadata_ok+0x3c>
    f754:	mov	r1, #32
    f758:	b	47c4 <sas_validate_name@plt>
    f75c:	mov	r0, r1
    f760:	bx	lr
    f764:	mov	r1, #8
    f768:	b	47c4 <sas_validate_name@plt>

0000f76c <xport_write_int8>:
    f76c:	vmov	s0, r2
    f770:	vcvt.f64.s32	d0, s0
    f774:	b	f798 <xport_write_double>

0000f778 <xport_write_int16>:
    f778:	vmov	s0, r2
    f77c:	vcvt.f64.s32	d0, s0
    f780:	b	f798 <xport_write_double>

0000f784 <xport_write_int32>:
    f784:	vmov	s0, r2
    f788:	vcvt.f64.s32	d0, s0
    f78c:	b	f798 <xport_write_double>

0000f790 <xport_write_float>:
    f790:	vcvt.f64.f32	d0, s0
    f794:	b	f798 <xport_write_double>

0000f798 <xport_write_double>:
    f798:	push	{r4, r5, fp, lr}
    f79c:	add	fp, sp, #8
    f7a0:	sub	sp, sp, #16
    f7a4:	mov	r5, r1
    f7a8:	mov	r4, r0
    f7ac:	vstr	d0, [sp, #8]
    f7b0:	add	r0, sp, #8
    f7b4:	mov	r2, sp
    f7b8:	mov	r1, #0
    f7bc:	mov	r3, #1
    f7c0:	bl	4a7c <cnxptiee@plt>
    f7c4:	mov	r1, r0
    f7c8:	mov	r0, #16
    f7cc:	cmp	r1, #0
    f7d0:	beq	f7dc <xport_write_double+0x44>
    f7d4:	sub	sp, fp, #8
    f7d8:	pop	{r4, r5, fp, pc}
    f7dc:	ldr	r2, [r5, #1596]	; 0x63c
    f7e0:	mov	r1, sp
    f7e4:	mov	r0, r4
    f7e8:	bl	4998 <memcpy@plt>
    f7ec:	mov	r0, #0
    f7f0:	sub	sp, fp, #8
    f7f4:	pop	{r4, r5, fp, pc}

0000f7f8 <xport_write_string>:
    f7f8:	push	{r4, r5, r6, sl, fp, lr}
    f7fc:	add	fp, sp, #16
    f800:	mov	r4, r2
    f804:	mov	r6, r1
    f808:	mov	r5, r0
    f80c:	ldr	r2, [r1, #1596]	; 0x63c
    f810:	mov	r1, #32
    f814:	bl	4d28 <memset@plt>
    f818:	mov	r0, #0
    f81c:	cmp	r4, #0
    f820:	ldrbne	r1, [r4]
    f824:	cmpne	r1, #0
    f828:	bne	f830 <xport_write_string+0x38>
    f82c:	pop	{r4, r5, r6, sl, fp, pc}
    f830:	mov	r0, r4
    f834:	bl	4c8c <strlen@plt>
    f838:	mov	r2, r0
    f83c:	ldr	r1, [r6, #1596]	; 0x63c
    f840:	mov	r0, #22
    f844:	cmp	r2, r1
    f848:	pophi	{r4, r5, r6, sl, fp, pc}
    f84c:	mov	r0, r5
    f850:	mov	r1, r4
    f854:	bl	4998 <memcpy@plt>
    f858:	mov	r0, #0
    f85c:	pop	{r4, r5, r6, sl, fp, pc}

0000f860 <xport_write_missing_string>:
    f860:	mov	r2, #0
    f864:	b	f7f8 <xport_write_string>

0000f868 <xport_write_missing_numeric>:
    f868:	mov	r1, #46	; 0x2e
    f86c:	strb	r1, [r0]
    f870:	mov	r0, #0
    f874:	bx	lr

0000f878 <xport_write_missing_tagged>:
    f878:	push	{r4, r5, fp, lr}
    f87c:	add	fp, sp, #8
    f880:	mov	r4, r2
    f884:	mov	r5, r0
    f888:	mov	r0, r2
    f88c:	bl	4bd8 <sas_validate_tag@plt>
    f890:	cmp	r0, #0
    f894:	strbeq	r4, [r5]
    f898:	pop	{r4, r5, fp, pc}

0000f89c <xport_variable_width>:
    f89c:	cmp	r0, #0
    f8a0:	beq	f8bc <xport_variable_width+0x20>
    f8a4:	sub	r2, r1, #1
    f8a8:	mov	r0, #8
    f8ac:	cmp	r2, #6
    f8b0:	bxhi	lr
    f8b4:	cmp	r1, #3
    f8b8:	movls	r1, #3
    f8bc:	mov	r0, r1
    f8c0:	bx	lr

0000f8c4 <xport_begin_data>:
    f8c4:	push	{r4, sl, fp, lr}
    f8c8:	add	fp, sp, #8
    f8cc:	sub	sp, sp, #24
    f8d0:	mov	r4, r0
    f8d4:	ldr	r1, [r0, #20]
    f8d8:	add	r0, sp, #7
    f8dc:	bl	f9a0 <xport_format_timestamp>
    f8e0:	cmp	r0, #0
    f8e4:	bne	f990 <xport_begin_data+0xcc>
    f8e8:	mov	r0, r4
    f8ec:	bl	fa64 <xport_write_first_header_record>
    f8f0:	cmp	r0, #0
    f8f4:	bne	f990 <xport_begin_data+0xcc>
    f8f8:	add	r1, sp, #7
    f8fc:	mov	r0, r4
    f900:	bl	fad4 <xport_write_first_real_header_record>
    f904:	cmp	r0, #0
    f908:	bne	f990 <xport_begin_data+0xcc>
    f90c:	add	r1, sp, #7
    f910:	mov	r0, r4
    f914:	bl	fb64 <xport_write_record>
    f918:	cmp	r0, #0
    f91c:	bne	f990 <xport_begin_data+0xcc>
    f920:	mov	r0, r4
    f924:	bl	fba0 <xport_write_member_header_record>
    f928:	cmp	r0, #0
    f92c:	bne	f990 <xport_begin_data+0xcc>
    f930:	mov	r0, r4
    f934:	bl	fc18 <xport_write_descriptor_header_record>
    f938:	cmp	r0, #0
    f93c:	bne	f990 <xport_begin_data+0xcc>
    f940:	add	r1, sp, #7
    f944:	mov	r0, r4
    f948:	bl	fc8c <xport_write_member_record>
    f94c:	cmp	r0, #0
    f950:	bne	f990 <xport_begin_data+0xcc>
    f954:	add	r1, sp, #7
    f958:	mov	r0, r4
    f95c:	bl	fd58 <xport_write_file_label_record>
    f960:	cmp	r0, #0
    f964:	bne	f990 <xport_begin_data+0xcc>
    f968:	mov	r0, r4
    f96c:	bl	fdb4 <xport_write_namestr_header_record>
    f970:	cmp	r0, #0
    f974:	bne	f990 <xport_begin_data+0xcc>
    f978:	mov	r0, r4
    f97c:	bl	fe2c <xport_write_variables>
    f980:	cmp	r0, #0
    f984:	bne	f990 <xport_begin_data+0xcc>
    f988:	mov	r0, r4
    f98c:	bl	10354 <xport_write_obs_header_record>
    f990:	sub	sp, fp, #8
    f994:	pop	{r4, sl, fp, pc}

0000f998 <xport_end_data>:
    f998:	b	10454 <xport_finish_record>

0000f99c <xport_write_row>:
    f99c:	b	10428 <xport_write_bytes>

0000f9a0 <xport_format_timestamp>:
    f9a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    f9a4:	add	fp, sp, #24
    f9a8:	sub	sp, sp, #24
    f9ac:	mov	r8, r0
    f9b0:	str	r1, [sp, #20]
    f9b4:	add	r0, sp, #20
    f9b8:	bl	4bf0 <localtime@plt>
    f9bc:	cmp	r0, #0
    f9c0:	moveq	r0, #39	; 0x27
    f9c4:	subeq	sp, fp, #24
    f9c8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    f9cc:	ldm	r0, {r1, r2, r3, r4, r5}
    f9d0:	ldr	r0, [r0, #20]
    f9d4:	ldr	r6, [pc, #128]	; fa5c <xport_format_timestamp+0xbc>
    f9d8:	ldr	r6, [pc, r6]
    f9dc:	add	r6, r6, r5, lsl #2
    f9e0:	str	r6, [sp]
    f9e4:	movw	r6, #34079	; 0x851f
    f9e8:	movt	r6, #20971	; 0x51eb
    f9ec:	umull	r5, r7, r1, r6
    f9f0:	lsr	r7, r7, #5
    f9f4:	mov	r5, #100	; 0x64
    f9f8:	mls	r1, r7, r5, r1
    f9fc:	str	r1, [sp, #16]
    fa00:	umull	r1, r7, r2, r6
    fa04:	lsr	r1, r7, #5
    fa08:	mls	r1, r1, r5, r2
    fa0c:	str	r1, [sp, #12]
    fa10:	umull	r1, r2, r3, r6
    fa14:	lsr	r1, r2, #5
    fa18:	mls	r1, r1, r5, r3
    fa1c:	str	r1, [sp, #8]
    fa20:	umull	r1, r2, r0, r6
    fa24:	lsr	r1, r2, #5
    fa28:	mls	r0, r1, r5, r0
    fa2c:	str	r0, [sp, #4]
    fa30:	umull	r0, r1, r4, r6
    fa34:	lsr	r0, r1, #5
    fa38:	mls	r3, r0, r5, r4
    fa3c:	ldr	r2, [pc, #28]	; fa60 <xport_format_timestamp+0xc0>
    fa40:	add	r2, pc, r2
    fa44:	mov	r0, r8
    fa48:	mov	r1, #17
    fa4c:	bl	4d04 <snprintf@plt>
    fa50:	mov	r0, #0
    fa54:	sub	sp, fp, #24
    fa58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    fa5c:	.word	0x00035904
    fa60:	.word	0x0001618b

0000fa64 <xport_write_first_header_record>:
    fa64:	push	{fp, lr}
    fa68:	mov	fp, sp
    fa6c:	sub	sp, sp, #40	; 0x28
    fa70:	ldr	r1, [pc, #88]	; fad0 <xport_write_first_header_record+0x6c>
    fa74:	add	r1, pc, r1
    fa78:	add	r2, r1, #16
    fa7c:	vld1.64	{d16-d17}, [r2]
    fa80:	mov	r2, sp
    fa84:	mov	ip, #32
    fa88:	vld1.64	{d18-d19}, [r1], ip
    fa8c:	add	r3, r2, #16
    fa90:	vst1.64	{d16-d17}, [r3]
    fa94:	vst1.64	{d18-d19}, [r2], ip
    fa98:	ldr	r1, [r1]
    fa9c:	str	r1, [r2]
    faa0:	ldr	r1, [r0, #8]
    faa4:	cmp	r1, #8
    faa8:	bne	fac0 <xport_write_first_header_record+0x5c>
    faac:	mov	r1, #56	; 0x38
    fab0:	strh	r1, [sp, #4]
    fab4:	movw	r1, #18764	; 0x494c
    fab8:	movt	r1, #22082	; 0x5642
    fabc:	str	r1, [sp]
    fac0:	mov	r1, sp
    fac4:	bl	103c0 <xport_write_header_record>
    fac8:	mov	sp, fp
    facc:	pop	{fp, pc}
    fad0:	.word	0x0001628c

0000fad4 <xport_write_first_real_header_record>:
    fad4:	push	{r4, r5, fp, lr}
    fad8:	add	fp, sp, #8
    fadc:	sub	sp, sp, #112	; 0x70
    fae0:	mov	r4, r0
    fae4:	ldr	ip, [pc, #96]	; fb4c <xport_write_first_real_header_record+0x78>
    fae8:	add	ip, pc, ip
    faec:	ldr	r2, [pc, #92]	; fb50 <xport_write_first_real_header_record+0x7c>
    faf0:	add	r2, pc, r2
    faf4:	ldr	r5, [pc, #88]	; fb54 <xport_write_first_real_header_record+0x80>
    faf8:	add	r5, pc, r5
    fafc:	ldr	r0, [pc, #84]	; fb58 <xport_write_first_real_header_record+0x84>
    fb00:	add	r0, pc, r0
    fb04:	ldr	r3, [pc, #80]	; fb5c <xport_write_first_real_header_record+0x88>
    fb08:	add	r3, pc, r3
    fb0c:	str	r3, [sp]
    fb10:	stmib	sp, {r0, r5}
    fb14:	str	r2, [sp, #12]
    fb18:	str	ip, [sp, #16]
    fb1c:	str	r1, [sp, #20]
    fb20:	add	r5, sp, #31
    fb24:	ldr	r2, [pc, #52]	; fb60 <xport_write_first_real_header_record+0x8c>
    fb28:	add	r2, pc, r2
    fb2c:	mov	r0, r5
    fb30:	mov	r1, #81	; 0x51
    fb34:	bl	4d04 <snprintf@plt>
    fb38:	mov	r0, r4
    fb3c:	mov	r1, r5
    fb40:	bl	fb64 <xport_write_record>
    fb44:	sub	sp, fp, #8
    fb48:	pop	{r4, r5, fp, pc}
    fb4c:	.word	0x000164be
    fb50:	.word	0x0001617b
    fb54:	.word	0x0001616e
    fb58:	.word	0x0001615f
    fb5c:	.word	0x00016153
    fb60:	.word	0x00016105

0000fb64 <xport_write_record>:
    fb64:	push	{r4, r5, fp, lr}
    fb68:	add	fp, sp, #8
    fb6c:	mov	r5, r1
    fb70:	mov	r4, r0
    fb74:	mov	r0, r1
    fb78:	bl	4c8c <strlen@plt>
    fb7c:	mov	r2, r0
    fb80:	mov	r0, r4
    fb84:	mov	r1, r5
    fb88:	bl	10428 <xport_write_bytes>
    fb8c:	cmp	r0, #0
    fb90:	popne	{r4, r5, fp, pc}
    fb94:	mov	r0, r4
    fb98:	pop	{r4, r5, fp, lr}
    fb9c:	b	10454 <xport_finish_record>

0000fba0 <xport_write_member_header_record>:
    fba0:	push	{fp, lr}
    fba4:	mov	fp, sp
    fba8:	sub	sp, sp, #40	; 0x28
    fbac:	ldr	r1, [pc, #96]	; fc14 <xport_write_member_header_record+0x74>
    fbb0:	add	r1, pc, r1
    fbb4:	add	r2, r1, #16
    fbb8:	vld1.64	{d16-d17}, [r2]
    fbbc:	mov	r2, sp
    fbc0:	mov	ip, #32
    fbc4:	vld1.64	{d18-d19}, [r1], ip
    fbc8:	add	r3, r2, #16
    fbcc:	vst1.64	{d16-d17}, [r3]
    fbd0:	vst1.64	{d18-d19}, [r2], ip
    fbd4:	ldr	r1, [r1]
    fbd8:	str	r1, [r2]
    fbdc:	ldr	r1, [r0, #8]
    fbe0:	cmp	r1, #8
    fbe4:	bne	fc04 <xport_write_member_header_record+0x64>
    fbe8:	mov	r1, #0
    fbec:	strb	r1, [sp, #6]
    fbf0:	movw	r1, #14422	; 0x3856
    fbf4:	strh	r1, [sp, #4]
    fbf8:	movw	r1, #17741	; 0x454d
    fbfc:	movt	r1, #16973	; 0x424d
    fc00:	str	r1, [sp]
    fc04:	mov	r1, sp
    fc08:	bl	103c0 <xport_write_header_record>
    fc0c:	mov	sp, fp
    fc10:	pop	{fp, pc}
    fc14:	.word	0x00016178

0000fc18 <xport_write_descriptor_header_record>:
    fc18:	push	{fp, lr}
    fc1c:	mov	fp, sp
    fc20:	sub	sp, sp, #40	; 0x28
    fc24:	ldr	r1, [pc, #92]	; fc88 <xport_write_descriptor_header_record+0x70>
    fc28:	add	r1, pc, r1
    fc2c:	add	r2, r1, #16
    fc30:	vld1.64	{d16-d17}, [r2]
    fc34:	mov	r2, sp
    fc38:	mov	ip, #32
    fc3c:	vld1.64	{d18-d19}, [r1], ip
    fc40:	add	r3, r2, #16
    fc44:	vst1.64	{d16-d17}, [r3]
    fc48:	vst1.64	{d18-d19}, [r2], ip
    fc4c:	ldr	r1, [r1]
    fc50:	str	r1, [r2]
    fc54:	ldr	r1, [r0, #8]
    fc58:	cmp	r1, #8
    fc5c:	bne	fc78 <xport_write_descriptor_header_record+0x60>
    fc60:	movw	r1, #22100	; 0x5654
    fc64:	movt	r1, #56	; 0x38
    fc68:	str	r1, [sp, #4]
    fc6c:	movw	r1, #21316	; 0x5344
    fc70:	movt	r1, #20547	; 0x5043
    fc74:	str	r1, [sp]
    fc78:	mov	r1, sp
    fc7c:	bl	103c0 <xport_write_header_record>
    fc80:	mov	sp, fp
    fc84:	pop	{fp, pc}
    fc88:	.word	0x00016128

0000fc8c <xport_write_member_record>:
    fc8c:	push	{r4, r5, r6, sl, fp, lr}
    fc90:	add	fp, sp, #16
    fc94:	sub	sp, sp, #112	; 0x70
    fc98:	mov	r4, r0
    fc9c:	ldr	r0, [r0, #8]
    fca0:	cmp	r0, #8
    fca4:	bne	fcb8 <xport_write_member_record+0x2c>
    fca8:	mov	r0, r4
    fcac:	sub	sp, fp, #16
    fcb0:	pop	{r4, r5, r6, sl, fp, lr}
    fcb4:	b	1046c <xport_write_member_record_v8>
    fcb8:	mov	r0, r4
    fcbc:	ldrb	r2, [r0, #188]!	; 0xbc
    fcc0:	ldr	ip, [pc, #116]	; fd3c <xport_write_member_record+0xb0>
    fcc4:	add	ip, pc, ip
    fcc8:	ldr	lr, [pc, #112]	; fd40 <xport_write_member_record+0xb4>
    fccc:	add	lr, pc, lr
    fcd0:	ldr	r3, [pc, #108]	; fd44 <xport_write_member_record+0xb8>
    fcd4:	add	r3, pc, r3
    fcd8:	ldr	r5, [pc, #104]	; fd48 <xport_write_member_record+0xbc>
    fcdc:	add	r5, pc, r5
    fce0:	ldr	r6, [pc, #100]	; fd4c <xport_write_member_record+0xc0>
    fce4:	add	r6, pc, r6
    fce8:	cmp	r2, #0
    fcec:	movne	r6, r0
    fcf0:	str	r6, [sp]
    fcf4:	str	r5, [sp, #4]
    fcf8:	str	r3, [sp, #8]
    fcfc:	str	lr, [sp, #12]
    fd00:	str	ip, [sp, #16]
    fd04:	str	r1, [sp, #20]
    fd08:	add	r5, sp, #31
    fd0c:	ldr	r2, [pc, #60]	; fd50 <xport_write_member_record+0xc4>
    fd10:	add	r2, pc, r2
    fd14:	ldr	r3, [pc, #56]	; fd54 <xport_write_member_record+0xc8>
    fd18:	add	r3, pc, r3
    fd1c:	mov	r0, r5
    fd20:	mov	r1, #81	; 0x51
    fd24:	bl	4d04 <snprintf@plt>
    fd28:	mov	r0, r4
    fd2c:	mov	r1, r5
    fd30:	bl	fb64 <xport_write_record>
    fd34:	sub	sp, fp, #16
    fd38:	pop	{r4, r5, r6, sl, fp, pc}
    fd3c:	.word	0x000162e2
    fd40:	.word	0x00015f9f
    fd44:	.word	0x00015f92
    fd48:	.word	0x00015f9e
    fd4c:	.word	0x00015f8e
    fd50:	.word	0x00015f1d
    fd54:	.word	0x00015f43

0000fd58 <xport_write_file_label_record>:
    fd58:	push	{r4, r5, fp, lr}
    fd5c:	add	fp, sp, #8
    fd60:	sub	sp, sp, #96	; 0x60
    fd64:	mov	r3, r1
    fd68:	mov	r4, r0
    fd6c:	ldr	r0, [pc, #56]	; fdac <xport_write_file_label_record+0x54>
    fd70:	add	r0, pc, r0
    fd74:	add	r1, r4, #88	; 0x58
    fd78:	stm	sp, {r0, r1}
    fd7c:	str	r0, [sp, #8]
    fd80:	add	r5, sp, #15
    fd84:	ldr	r2, [pc, #36]	; fdb0 <xport_write_file_label_record+0x58>
    fd88:	add	r2, pc, r2
    fd8c:	mov	r0, r5
    fd90:	mov	r1, #81	; 0x51
    fd94:	bl	4d04 <snprintf@plt>
    fd98:	mov	r0, r4
    fd9c:	mov	r1, r5
    fda0:	bl	fb64 <xport_write_record>
    fda4:	sub	sp, fp, #8
    fda8:	pop	{r4, r5, fp, pc}
    fdac:	.word	0x00016236
    fdb0:	.word	0x00015f22

0000fdb4 <xport_write_namestr_header_record>:
    fdb4:	push	{fp, lr}
    fdb8:	mov	fp, sp
    fdbc:	sub	sp, sp, #40	; 0x28
    fdc0:	mov	r1, #0
    fdc4:	ldr	r2, [pc, #92]	; fe28 <xport_write_namestr_header_record+0x74>
    fdc8:	add	r2, pc, r2
    fdcc:	vldr	d16, [r2]
    fdd0:	strb	r1, [sp, #8]
    fdd4:	str	r1, [sp, #12]
    fdd8:	vstr	d16, [sp]
    fddc:	ldr	r1, [r0, #28]
    fde0:	mov	r2, sp
    fde4:	vmov.i32	q8, #0	; 0x00000000
    fde8:	add	r2, r2, #20
    fdec:	vst1.32	{d16-d17}, [r2]
    fdf0:	str	r1, [sp, #16]
    fdf4:	ldr	r1, [r0, #8]
    fdf8:	cmp	r1, #8
    fdfc:	bne	fe18 <xport_write_namestr_header_record+0x64>
    fe00:	movw	r1, #22100	; 0x5654
    fe04:	movt	r1, #56	; 0x38
    fe08:	str	r1, [sp, #4]
    fe0c:	movw	r1, #16718	; 0x414e
    fe10:	movt	r1, #21325	; 0x534d
    fe14:	str	r1, [sp]
    fe18:	mov	r1, sp
    fe1c:	bl	103c0 <xport_write_header_record>
    fe20:	mov	sp, fp
    fe24:	pop	{fp, pc}
    fe28:	.word	0x00015fb0

0000fe2c <xport_write_variables>:
    fe2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fe30:	add	fp, sp, #28
    fe34:	sub	sp, sp, #4
    fe38:	vpush	{d8-d9}
    fe3c:	sub	sp, sp, #240	; 0xf0
    fe40:	mov	r7, r0
    fe44:	add	r1, sp, #96	; 0x60
    fe48:	add	r0, r1, #88	; 0x58
    fe4c:	str	r0, [sp, #4]
    fe50:	add	r0, r1, #16
    fe54:	str	r0, [sp, #20]
    fe58:	add	r0, r1, #8
    fe5c:	str	r0, [sp, #16]
    fe60:	add	r5, r1, #72	; 0x48
    fe64:	add	r1, r1, #56	; 0x38
    fe68:	mov	r4, #1
    fe6c:	mov	r0, #0
    fe70:	str	r0, [sp, #28]
    fe74:	mov	r6, #0
    fe78:	mov	r8, #0
    fe7c:	str	r5, [sp, #12]
    fe80:	mov	r9, r1
    fe84:	str	r1, [sp, #8]
    fe88:	str	r7, [sp, #24]
    fe8c:	ldr	r0, [r7, #28]
    fe90:	sub	r1, r4, #1
    fe94:	cmp	r1, r0
    fe98:	bge	10090 <xport_write_variables+0x264>
    fe9c:	mov	r0, r7
    fea0:	bl	4e18 <readstat_get_variable@plt>
    fea4:	mov	r7, r0
    fea8:	ldr	r0, [r0]
    feac:	ldr	r1, [r7, #1600]	; 0x640
    feb0:	bl	f89c <xport_variable_width>
    feb4:	mov	sl, r8
    feb8:	mov	r8, r0
    febc:	add	r0, sp, #96	; 0x60
    fec0:	mov	r1, #0
    fec4:	mov	r2, #140	; 0x8c
    fec8:	bl	4d28 <memset@plt>
    fecc:	str	r4, [sp, #44]	; 0x2c
    fed0:	strh	r4, [sp, #102]	; 0x66
    fed4:	str	r8, [sp, #40]	; 0x28
    fed8:	strh	r8, [sp, #100]	; 0x64
    fedc:	mov	r8, sl
    fee0:	mov	sl, r5
    fee4:	movw	r0, #8224	; 0x2020
    fee8:	movt	r0, #8224	; 0x2020
    feec:	str	r0, [r9, #4]
    fef0:	str	r0, [r9]
    fef4:	str	r0, [r5, #4]
    fef8:	str	r0, [r5]
    fefc:	str	r8, [sp, #180]	; 0xb4
    ff00:	mov	r0, r7
    ff04:	bl	4fe0 <readstat_variable_get_type_class@plt>
    ff08:	cmp	r0, #0
    ff0c:	mov	r0, #1
    ff10:	movweq	r0, #2
    ff14:	strh	r0, [sp, #96]	; 0x60
    ff18:	add	r4, r7, #8
    ff1c:	ldr	r0, [sp, #16]
    ff20:	mov	r1, #8
    ff24:	mov	r2, r4
    ff28:	bl	10504 <copypad>
    ff2c:	add	r5, r7, #564	; 0x234
    ff30:	ldr	r0, [sp, #20]
    ff34:	mov	r1, #40	; 0x28
    ff38:	mov	r2, r5
    ff3c:	bl	10504 <copypad>
    ff40:	mov	r0, r7
    ff44:	ldrb	r1, [r0, #308]!	; 0x134
    ff48:	cmp	r1, #0
    ff4c:	str	r6, [sp, #48]	; 0x30
    ff50:	str	r5, [sp, #36]	; 0x24
    ff54:	str	r4, [sp, #32]
    ff58:	beq	ffec <xport_write_variables+0x1c0>
    ff5c:	mov	r1, #0
    ff60:	str	r1, [sp, #52]	; 0x34
    ff64:	str	r1, [sp, #92]	; 0x5c
    ff68:	add	r1, sp, #52	; 0x34
    ff6c:	str	r1, [sp]
    ff70:	ldr	r1, [pc, #976]	; 10348 <xport_write_variables+0x51c>
    ff74:	add	r1, pc, r1
    ff78:	add	r6, sp, #64	; 0x40
    ff7c:	mov	r2, r6
    ff80:	add	r3, sp, #92	; 0x5c
    ff84:	bl	4d10 <__isoc99_sscanf@plt>
    ff88:	mov	r0, r9
    ff8c:	mov	r1, #8
    ff90:	mov	r2, r6
    ff94:	bl	10504 <copypad>
    ff98:	ldr	r0, [sp, #92]	; 0x5c
    ff9c:	strh	r0, [sp, #160]	; 0xa0
    ffa0:	ldr	r0, [sp, #52]	; 0x34
    ffa4:	strh	r0, [sp, #162]	; 0xa2
    ffa8:	mov	r0, sl
    ffac:	mov	r1, #8
    ffb0:	mov	r2, r6
    ffb4:	bl	10504 <copypad>
    ffb8:	ldr	r0, [sp, #92]	; 0x5c
    ffbc:	strh	r0, [sp, #176]	; 0xb0
    ffc0:	ldr	r0, [sp, #52]	; 0x34
    ffc4:	strh	r0, [sp, #178]	; 0xb2
    ffc8:	mov	r0, r6
    ffcc:	ldr	r4, [sp, #28]
    ffd0:	bl	4c8c <strlen@plt>
    ffd4:	cmp	r0, #8
    ffd8:	movwhi	r4, #1
    ffdc:	str	r4, [sp, #28]
    ffe0:	mov	r9, #0
    ffe4:	movwhi	r9, #1
    ffe8:	b	fffc <xport_write_variables+0x1d0>
    ffec:	ldr	r0, [r7, #2136]	; 0x858
    fff0:	mov	r9, #0
    fff4:	cmp	r0, #0
    fff8:	strhne	r0, [sp, #160]	; 0xa0
    fffc:	ldr	sl, [sp, #40]	; 0x28
   10000:	ldr	r4, [sp, #44]	; 0x2c
   10004:	ldr	r0, [r7, #2132]	; 0x854
   10008:	sub	r0, r0, #3
   1000c:	clz	r0, r0
   10010:	lsr	r0, r0, #5
   10014:	strh	r0, [sp, #164]	; 0xa4
   10018:	ldr	r7, [sp, #24]
   1001c:	ldr	r0, [r7, #8]
   10020:	cmp	r0, #8
   10024:	bne	1004c <xport_write_variables+0x220>
   10028:	ldr	r0, [sp, #4]
   1002c:	mov	r1, #32
   10030:	ldr	r2, [sp, #32]
   10034:	bl	10504 <copypad>
   10038:	ldr	r0, [sp, #36]	; 0x24
   1003c:	bl	4c8c <strlen@plt>
   10040:	strh	r0, [sp, #216]	; 0xd8
   10044:	cmp	r0, #40	; 0x28
   10048:	movwhi	r9, #1
   1004c:	add	r5, sp, #96	; 0x60
   10050:	mov	r0, r5
   10054:	bl	4b0c <xport_namestr_bswap@plt>
   10058:	cmp	r9, #0
   1005c:	ldr	r6, [sp, #48]	; 0x30
   10060:	addne	r6, r6, #1
   10064:	mov	r0, r7
   10068:	mov	r1, r5
   1006c:	mov	r2, #140	; 0x8c
   10070:	bl	10428 <xport_write_bytes>
   10074:	add	r8, sl, r8
   10078:	add	r4, r4, #1
   1007c:	cmp	r0, #0
   10080:	ldr	r5, [sp, #12]
   10084:	ldr	r9, [sp, #8]
   10088:	beq	fe8c <xport_write_variables+0x60>
   1008c:	b	100a0 <xport_write_variables+0x274>
   10090:	mov	r0, r7
   10094:	bl	10454 <xport_finish_record>
   10098:	cmp	r0, #0
   1009c:	beq	100b0 <xport_write_variables+0x284>
   100a0:	sub	sp, fp, #48	; 0x30
   100a4:	vpop	{d8-d9}
   100a8:	add	sp, sp, #4
   100ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   100b0:	mov	r0, #0
   100b4:	cmp	r6, #0
   100b8:	beq	100a0 <xport_write_variables+0x274>
   100bc:	ldr	r1, [r7, #8]
   100c0:	cmp	r1, #8
   100c4:	bne	100a0 <xport_write_variables+0x274>
   100c8:	vmov.i32	q8, #0	; 0x00000000
   100cc:	ldr	r0, [pc, #632]	; 1034c <xport_write_variables+0x520>
   100d0:	add	r0, pc, r0
   100d4:	vldr	d18, [r0]
   100d8:	ldr	r0, [sp, #20]
   100dc:	vst1.64	{d16-d17}, [r0]
   100e0:	mov	r0, #0
   100e4:	strb	r0, [sp, #104]	; 0x68
   100e8:	str	r6, [sp, #108]	; 0x6c
   100ec:	str	r0, [sp, #128]	; 0x80
   100f0:	vstr	d18, [sp, #96]	; 0x60
   100f4:	ldr	r0, [sp, #28]
   100f8:	cmp	r0, #0
   100fc:	beq	10118 <xport_write_variables+0x2ec>
   10100:	movw	r0, #22092	; 0x564c
   10104:	movt	r0, #57	; 0x39
   10108:	str	r0, [sp, #100]	; 0x64
   1010c:	movw	r0, #16716	; 0x414c
   10110:	movt	r0, #17730	; 0x4542
   10114:	str	r0, [sp, #96]	; 0x60
   10118:	add	r1, sp, #96	; 0x60
   1011c:	mov	r0, r7
   10120:	bl	1055c <xport_write_header_record_v8>
   10124:	cmp	r0, #0
   10128:	add	r4, sp, #64	; 0x40
   1012c:	bne	100a0 <xport_write_variables+0x274>
   10130:	ldr	r0, [r7, #28]
   10134:	cmp	r0, #1
   10138:	mov	r0, r7
   1013c:	blt	10338 <xport_write_variables+0x50c>
   10140:	vmov.i32	q4, #0	; 0x00000000
   10144:	mov	r7, #0
   10148:	mov	r1, r7
   1014c:	bl	4e18 <readstat_get_variable@plt>
   10150:	mov	sl, r0
   10154:	add	r9, r0, #564	; 0x234
   10158:	mov	r0, r9
   1015c:	bl	4c8c <strlen@plt>
   10160:	mov	r5, r0
   10164:	add	r6, sl, #8
   10168:	mov	r0, r6
   1016c:	bl	4c8c <strlen@plt>
   10170:	mov	r8, r0
   10174:	mov	r0, r4
   10178:	mov	r1, #20
   1017c:	vst1.64	{d8-d9}, [r0], r1
   10180:	mov	r1, #0
   10184:	str	r1, [r0]
   10188:	str	r1, [sp, #80]	; 0x50
   1018c:	ldrb	r0, [sl, #308]!	; 0x134
   10190:	cmp	r0, #0
   10194:	beq	101e0 <xport_write_variables+0x3b4>
   10198:	mov	r0, #2
   1019c:	str	r0, [sp, #52]	; 0x34
   101a0:	mov	r0, #8
   101a4:	str	r0, [sp, #92]	; 0x5c
   101a8:	add	r0, sp, #52	; 0x34
   101ac:	str	r0, [sp]
   101b0:	mov	r0, sl
   101b4:	ldr	r1, [pc, #404]	; 10350 <xport_write_variables+0x524>
   101b8:	add	r1, pc, r1
   101bc:	mov	r2, r4
   101c0:	add	r3, sp, #92	; 0x5c
   101c4:	bl	4d10 <__isoc99_sscanf@plt>
   101c8:	cmp	r0, #0
   101cc:	ble	10340 <xport_write_variables+0x514>
   101d0:	mov	r0, r4
   101d4:	bl	4c8c <strlen@plt>
   101d8:	cmp	r0, #9
   101dc:	bge	10250 <xport_write_variables+0x424>
   101e0:	cmp	r5, #41	; 0x29
   101e4:	bcc	10324 <xport_write_variables+0x4f8>
   101e8:	strh	r8, [sp, #54]	; 0x36
   101ec:	strh	r5, [sp, #56]	; 0x38
   101f0:	add	r0, r7, #1
   101f4:	strh	r0, [sp, #52]	; 0x34
   101f8:	bl	492c <machine_is_little_endian@plt>
   101fc:	cmp	r0, #0
   10200:	beq	10228 <xport_write_variables+0x3fc>
   10204:	ldrh	r0, [sp, #52]	; 0x34
   10208:	bl	4920 <byteswap2@plt>
   1020c:	strh	r0, [sp, #52]	; 0x34
   10210:	ldrh	r0, [sp, #54]	; 0x36
   10214:	bl	4920 <byteswap2@plt>
   10218:	strh	r0, [sp, #54]	; 0x36
   1021c:	ldrh	r0, [sp, #56]	; 0x38
   10220:	bl	4920 <byteswap2@plt>
   10224:	strh	r0, [sp, #56]	; 0x38
   10228:	ldr	r4, [sp, #24]
   1022c:	mov	r0, r4
   10230:	add	r1, sp, #52	; 0x34
   10234:	mov	r2, #6
   10238:	bl	4ef0 <readstat_write_bytes@plt>
   1023c:	cmp	r0, #0
   10240:	bne	100a0 <xport_write_variables+0x274>
   10244:	mov	r0, r4
   10248:	mov	r1, r6
   1024c:	b	10300 <xport_write_variables+0x4d4>
   10250:	strh	r8, [sp, #54]	; 0x36
   10254:	strh	r0, [sp, #56]	; 0x38
   10258:	strh	r0, [sp, #58]	; 0x3a
   1025c:	strh	r5, [sp, #60]	; 0x3c
   10260:	add	r0, r7, #1
   10264:	strh	r0, [sp, #52]	; 0x34
   10268:	bl	492c <machine_is_little_endian@plt>
   1026c:	cmp	r0, #0
   10270:	beq	102b0 <xport_write_variables+0x484>
   10274:	ldrh	r0, [sp, #52]	; 0x34
   10278:	bl	4920 <byteswap2@plt>
   1027c:	strh	r0, [sp, #52]	; 0x34
   10280:	ldrh	r0, [sp, #54]	; 0x36
   10284:	bl	4920 <byteswap2@plt>
   10288:	strh	r0, [sp, #54]	; 0x36
   1028c:	ldrh	r0, [sp, #56]	; 0x38
   10290:	bl	4920 <byteswap2@plt>
   10294:	strh	r0, [sp, #56]	; 0x38
   10298:	ldrh	r0, [sp, #58]	; 0x3a
   1029c:	bl	4920 <byteswap2@plt>
   102a0:	strh	r0, [sp, #58]	; 0x3a
   102a4:	ldrh	r0, [sp, #60]	; 0x3c
   102a8:	bl	4920 <byteswap2@plt>
   102ac:	strh	r0, [sp, #60]	; 0x3c
   102b0:	ldr	r4, [sp, #24]
   102b4:	mov	r0, r4
   102b8:	add	r1, sp, #52	; 0x34
   102bc:	mov	r2, #10
   102c0:	bl	4ef0 <readstat_write_bytes@plt>
   102c4:	cmp	r0, #0
   102c8:	bne	100a0 <xport_write_variables+0x274>
   102cc:	mov	r0, r4
   102d0:	mov	r1, r6
   102d4:	bl	4be4 <readstat_write_string@plt>
   102d8:	cmp	r0, #0
   102dc:	bne	100a0 <xport_write_variables+0x274>
   102e0:	mov	r0, r4
   102e4:	add	r5, sp, #64	; 0x40
   102e8:	mov	r1, r5
   102ec:	bl	4be4 <readstat_write_string@plt>
   102f0:	cmp	r0, #0
   102f4:	bne	100a0 <xport_write_variables+0x274>
   102f8:	mov	r0, r4
   102fc:	mov	r1, r5
   10300:	bl	4be4 <readstat_write_string@plt>
   10304:	cmp	r0, #0
   10308:	bne	100a0 <xport_write_variables+0x274>
   1030c:	mov	r0, r4
   10310:	mov	r1, r9
   10314:	bl	4be4 <readstat_write_string@plt>
   10318:	cmp	r0, #0
   1031c:	bne	100a0 <xport_write_variables+0x274>
   10320:	add	r4, sp, #64	; 0x40
   10324:	add	r7, r7, #1
   10328:	ldr	r0, [sp, #24]
   1032c:	ldr	r1, [r0, #28]
   10330:	cmp	r7, r1
   10334:	blt	10148 <xport_write_variables+0x31c>
   10338:	bl	10454 <xport_finish_record>
   1033c:	b	100a0 <xport_write_variables+0x274>
   10340:	mov	r0, #11
   10344:	b	100a0 <xport_write_variables+0x274>
   10348:	.word	0x00015c46
   1034c:	.word	0x00015cb8
   10350:	.word	0x00015a02

00010354 <xport_write_obs_header_record>:
   10354:	push	{fp, lr}
   10358:	mov	fp, sp
   1035c:	sub	sp, sp, #40	; 0x28
   10360:	vmov.i32	q8, #0	; 0x00000000
   10364:	mov	r1, #32
   10368:	mov	r2, sp
   1036c:	add	r3, r2, #16
   10370:	vst1.64	{d16-d17}, [r2], r1
   10374:	mov	r1, #0
   10378:	str	r1, [r2]
   1037c:	vst1.64	{d16-d17}, [r3]
   10380:	movw	r1, #16975	; 0x424f
   10384:	strh	r1, [sp]
   10388:	mov	r1, #83	; 0x53
   1038c:	strb	r1, [sp, #2]
   10390:	ldr	r1, [r0, #8]
   10394:	cmp	r1, #8
   10398:	bne	103b0 <xport_write_obs_header_record+0x5c>
   1039c:	mov	r1, #56	; 0x38
   103a0:	strh	r1, [sp, #4]
   103a4:	movw	r1, #16975	; 0x424f
   103a8:	movt	r1, #22099	; 0x5653
   103ac:	str	r1, [sp]
   103b0:	mov	r1, sp
   103b4:	bl	103c0 <xport_write_header_record>
   103b8:	mov	sp, fp
   103bc:	pop	{fp, pc}

000103c0 <xport_write_header_record>:
   103c0:	push	{r4, r5, r6, r7, fp, lr}
   103c4:	add	fp, sp, #16
   103c8:	sub	sp, sp, #112	; 0x70
   103cc:	mov	r3, r1
   103d0:	mov	r7, r0
   103d4:	ldr	r0, [r1, #12]
   103d8:	ldr	r1, [r1, #16]
   103dc:	ldr	r2, [r3, #20]
   103e0:	ldr	r5, [r3, #24]
   103e4:	ldr	r4, [r3, #28]
   103e8:	ldr	r6, [r3, #32]
   103ec:	stm	sp, {r0, r1, r2, r5}
   103f0:	str	r4, [sp, #16]
   103f4:	str	r6, [sp, #20]
   103f8:	add	r5, sp, #31
   103fc:	ldr	r2, [pc, #32]	; 10424 <xport_write_header_record+0x64>
   10400:	add	r2, pc, r2
   10404:	mov	r0, r5
   10408:	mov	r1, #81	; 0x51
   1040c:	bl	4d04 <snprintf@plt>
   10410:	mov	r0, r7
   10414:	mov	r1, r5
   10418:	bl	fb64 <xport_write_record>
   1041c:	sub	sp, fp, #16
   10420:	pop	{r4, r5, r6, r7, fp, pc}
   10424:	.word	0x000157e8

00010428 <xport_write_bytes>:
   10428:	push	{fp, lr}
   1042c:	mov	fp, sp
   10430:	sub	sp, sp, #8
   10434:	ldr	r3, [pc, #20]	; 10450 <xport_write_bytes+0x28>
   10438:	add	r3, pc, r3
   1043c:	str	r3, [sp]
   10440:	mov	r3, #80	; 0x50
   10444:	bl	4fbc <readstat_write_bytes_as_lines@plt>
   10448:	mov	sp, fp
   1044c:	pop	{fp, pc}
   10450:	.word	0x00015b6e

00010454 <xport_finish_record>:
   10454:	ldr	r3, [pc, #12]	; 10468 <xport_finish_record+0x14>
   10458:	add	r3, pc, r3
   1045c:	mov	r1, #32
   10460:	mov	r2, #80	; 0x50
   10464:	b	4f80 <readstat_write_line_padding@plt>
   10468:	.word	0x00015b4e

0001046c <xport_write_member_record_v8>:
   1046c:	push	{r4, r5, fp, lr}
   10470:	add	fp, sp, #8
   10474:	sub	sp, sp, #104	; 0x68
   10478:	mov	r4, r0
   1047c:	ldrb	r2, [r0, #188]!	; 0xbc
   10480:	ldr	ip, [pc, #100]	; 104ec <xport_write_member_record_v8+0x80>
   10484:	add	ip, pc, ip
   10488:	ldr	lr, [pc, #96]	; 104f0 <xport_write_member_record_v8+0x84>
   1048c:	add	lr, pc, lr
   10490:	ldr	r3, [pc, #92]	; 104f4 <xport_write_member_record_v8+0x88>
   10494:	add	r3, pc, r3
   10498:	ldr	r5, [pc, #88]	; 104f8 <xport_write_member_record_v8+0x8c>
   1049c:	add	r5, pc, r5
   104a0:	cmp	r2, #0
   104a4:	movne	r5, r0
   104a8:	str	r5, [sp]
   104ac:	stmib	sp, {r3, lr}
   104b0:	str	ip, [sp, #12]
   104b4:	str	r1, [sp, #16]
   104b8:	add	r5, sp, #23
   104bc:	ldr	r2, [pc, #56]	; 104fc <xport_write_member_record_v8+0x90>
   104c0:	add	r2, pc, r2
   104c4:	ldr	r3, [pc, #52]	; 10500 <xport_write_member_record_v8+0x94>
   104c8:	add	r3, pc, r3
   104cc:	mov	r0, r5
   104d0:	mov	r1, #81	; 0x51
   104d4:	bl	4d04 <snprintf@plt>
   104d8:	mov	r0, r4
   104dc:	mov	r1, r5
   104e0:	bl	fb64 <xport_write_record>
   104e4:	sub	sp, fp, #8
   104e8:	pop	{r4, r5, fp, pc}
   104ec:	.word	0x000157e7
   104f0:	.word	0x000157da
   104f4:	.word	0x000157e6
   104f8:	.word	0x000157d6
   104fc:	.word	0x000157c2
   10500:	.word	0x00015793

00010504 <copypad>:
   10504:	push	{fp, lr}
   10508:	mov	fp, sp
   1050c:	add	ip, r0, r1
   10510:	cmp	r1, #1
   10514:	mov	lr, r0
   10518:	blt	1053c <copypad+0x38>
   1051c:	mov	lr, r0
   10520:	ldrb	r3, [r2]
   10524:	cmp	r3, #0
   10528:	beq	1053c <copypad+0x38>
   1052c:	strb	r3, [lr], #1
   10530:	add	r2, r2, #1
   10534:	cmp	lr, ip
   10538:	bcc	10520 <copypad+0x1c>
   1053c:	cmp	lr, ip
   10540:	popcs	{fp, pc}
   10544:	sub	r1, r1, lr
   10548:	add	r2, r0, r1
   1054c:	mov	r0, lr
   10550:	mov	r1, #32
   10554:	bl	4d28 <memset@plt>
   10558:	pop	{fp, pc}

0001055c <xport_write_header_record_v8>:
   1055c:	push	{r4, r5, fp, lr}
   10560:	add	fp, sp, #8
   10564:	sub	sp, sp, #88	; 0x58
   10568:	mov	r3, r1
   1056c:	mov	r4, r0
   10570:	ldr	r0, [r1, #12]
   10574:	str	r0, [sp]
   10578:	add	r5, sp, #7
   1057c:	ldr	r2, [pc, #32]	; 105a4 <xport_write_header_record_v8+0x48>
   10580:	add	r2, pc, r2
   10584:	mov	r0, r5
   10588:	mov	r1, #81	; 0x51
   1058c:	bl	4d04 <snprintf@plt>
   10590:	mov	r0, r4
   10594:	mov	r1, r5
   10598:	bl	fb64 <xport_write_record>
   1059c:	sub	sp, fp, #8
   105a0:	pop	{r4, r5, fp, pc}
   105a4:	.word	0x00015747

000105a8 <por_ctx_init>:
   105a8:	push	{r4, sl, fp, lr}
   105ac:	add	fp, sp, #8
   105b0:	mov	r0, #1
   105b4:	mov	r1, #660	; 0x294
   105b8:	bl	47d0 <calloc@plt>
   105bc:	mov	r4, r0
   105c0:	mov	r0, #32
   105c4:	strb	r0, [r4, #48]	; 0x30
   105c8:	mov	r0, #20
   105cc:	str	r0, [r4, #608]	; 0x260
   105d0:	mov	r0, #1024	; 0x400
   105d4:	bl	4c20 <ck_hash_table_init@plt>
   105d8:	str	r0, [r4, #656]	; 0x290
   105dc:	mov	r0, r4
   105e0:	pop	{r4, sl, fp, pc}

000105e4 <por_ctx_free>:
   105e4:	push	{r4, r5, r6, sl, fp, lr}
   105e8:	add	fp, sp, #16
   105ec:	mov	r4, r0
   105f0:	ldr	r0, [r0, #616]	; 0x268
   105f4:	cmp	r0, #0
   105f8:	beq	10600 <por_ctx_free+0x1c>
   105fc:	bl	4938 <free@plt>
   10600:	ldr	r0, [r4, #652]	; 0x28c
   10604:	cmp	r0, #0
   10608:	beq	10650 <por_ctx_free+0x6c>
   1060c:	ldr	r1, [r4, #632]	; 0x278
   10610:	ldr	r0, [r4, #652]	; 0x28c
   10614:	cmp	r1, #1
   10618:	blt	1064c <por_ctx_free+0x68>
   1061c:	mov	r5, #0
   10620:	mov	r6, #264	; 0x108
   10624:	ldr	r0, [r0, r6]
   10628:	cmp	r0, #0
   1062c:	beq	10634 <por_ctx_free+0x50>
   10630:	bl	4938 <free@plt>
   10634:	add	r6, r6, #280	; 0x118
   10638:	add	r5, r5, #1
   1063c:	ldr	r1, [r4, #632]	; 0x278
   10640:	ldr	r0, [r4, #652]	; 0x28c
   10644:	cmp	r5, r1
   10648:	blt	10624 <por_ctx_free+0x40>
   1064c:	bl	4938 <free@plt>
   10650:	ldr	r0, [r4, #648]	; 0x288
   10654:	cmp	r0, #0
   10658:	beq	10698 <por_ctx_free+0xb4>
   1065c:	ldr	r1, [r4, #632]	; 0x278
   10660:	ldr	r0, [r4, #648]	; 0x288
   10664:	cmp	r1, #1
   10668:	blt	10694 <por_ctx_free+0xb0>
   1066c:	mov	r5, #0
   10670:	ldr	r0, [r0, r5, lsl #2]
   10674:	cmp	r0, #0
   10678:	beq	10680 <por_ctx_free+0x9c>
   1067c:	bl	4938 <free@plt>
   10680:	add	r5, r5, #1
   10684:	ldr	r1, [r4, #632]	; 0x278
   10688:	ldr	r0, [r4, #648]	; 0x288
   1068c:	cmp	r5, r1
   10690:	blt	10670 <por_ctx_free+0x8c>
   10694:	bl	4938 <free@plt>
   10698:	ldr	r0, [r4, #656]	; 0x290
   1069c:	cmp	r0, #0
   106a0:	beq	106a8 <por_ctx_free+0xc4>
   106a4:	bl	4cc8 <ck_hash_table_free@plt>
   106a8:	ldr	r0, [r4, #612]	; 0x264
   106ac:	cmp	r0, #0
   106b0:	beq	106b8 <por_ctx_free+0xd4>
   106b4:	bl	4848 <iconv_close@plt>
   106b8:	mov	r0, r4
   106bc:	pop	{r4, r5, r6, sl, fp, lr}
   106c0:	b	4938 <free@plt>

000106c4 <por_utf8_encode>:
   106c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   106c8:	add	fp, sp, #28
   106cc:	sub	sp, sp, #4
   106d0:	cmp	r1, #0
   106d4:	beq	1079c <por_utf8_encode+0xd8>
   106d8:	mov	r5, r2
   106dc:	ldr	r8, [fp, #8]
   106e0:	mov	r9, #0
   106e4:	mov	r4, #0
   106e8:	str	r1, [sp]
   106ec:	ldrb	r2, [r0, r9]
   106f0:	add	r2, r8, r2, lsl #1
   106f4:	ldrh	r7, [r2]
   106f8:	cmp	r7, #0
   106fc:	mvneq	r7, #2
   10700:	uxth	r2, r7
   10704:	cmp	r2, #32
   10708:	bcc	107a4 <por_utf8_encode+0xe0>
   1070c:	cmp	r2, #127	; 0x7f
   10710:	bhi	1072c <por_utf8_encode+0x68>
   10714:	add	r2, r4, #1
   10718:	cmp	r2, r3
   1071c:	bhi	107a8 <por_utf8_encode+0xe4>
   10720:	strb	r7, [r5, r4]
   10724:	mov	r4, r2
   10728:	b	1078c <por_utf8_encode+0xc8>
   1072c:	and	r7, r7, #63488	; 0xf800
   10730:	mov	r6, #0
   10734:	cmp	r6, r7, lsr #11
   10738:	addne	r7, r4, #3
   1073c:	addeq	r7, r4, #2
   10740:	cmp	r7, r3
   10744:	bhi	107a8 <por_utf8_encode+0xe4>
   10748:	mov	r7, r0
   1074c:	mov	r6, r3
   10750:	mov	sl, r5
   10754:	add	r5, r5, r4
   10758:	mov	r0, r5
   1075c:	ldr	r1, [pc, #80]	; 107b4 <por_utf8_encode+0xf0>
   10760:	add	r1, pc, r1
   10764:	bl	4e84 <sprintf@plt>
   10768:	cmp	r0, #0
   1076c:	movle	r0, #32
   10770:	strble	r0, [r5]
   10774:	movle	r0, #1
   10778:	add	r4, r0, r4
   1077c:	mov	r5, sl
   10780:	mov	r3, r6
   10784:	mov	r0, r7
   10788:	ldr	r1, [sp]
   1078c:	add	r9, r9, #1
   10790:	cmp	r9, r1
   10794:	bcc	106ec <por_utf8_encode+0x28>
   10798:	b	107a8 <por_utf8_encode+0xe4>
   1079c:	mov	r4, #0
   107a0:	b	107a8 <por_utf8_encode+0xe4>
   107a4:	mvn	r4, #0
   107a8:	mov	r0, r4
   107ac:	sub	sp, fp, #28
   107b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107b4:	.word	0x00015631

000107b8 <por_utf8_decode>:
   107b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   107bc:	add	fp, sp, #28
   107c0:	sub	sp, sp, #12
   107c4:	mov	r6, r0
   107c8:	mov	r0, #0
   107cc:	str	r0, [sp, #8]
   107d0:	str	r0, [sp, #4]
   107d4:	cmp	r3, #0
   107d8:	beq	10884 <por_utf8_decode+0xcc>
   107dc:	mov	r4, r3
   107e0:	mov	r5, r2
   107e4:	ldr	sl, [fp, #8]
   107e8:	mov	r8, #0
   107ec:	add	r7, sp, #4
   107f0:	mov	r9, #0
   107f4:	ldrb	r0, [r6]
   107f8:	sub	r1, r0, #32
   107fc:	uxtb	r1, r1
   10800:	cmp	r1, #94	; 0x5e
   10804:	bhi	10820 <por_utf8_decode+0x68>
   10808:	ldrb	r0, [sl, r0]
   1080c:	cmp	r0, #0
   10810:	beq	1088c <por_utf8_decode+0xd4>
   10814:	strb	r0, [r5, r9]
   10818:	mov	r0, #1
   1081c:	b	1086c <por_utf8_decode+0xb4>
   10820:	mov	r0, r6
   10824:	ldr	r1, [pc, #108]	; 10898 <por_utf8_decode+0xe0>
   10828:	add	r1, pc, r1
   1082c:	add	r2, sp, #8
   10830:	mov	r3, r7
   10834:	bl	4d10 <__isoc99_sscanf@plt>
   10838:	mov	r1, r0
   1083c:	mvn	r0, #0
   10840:	cmp	r1, #0
   10844:	beq	10884 <por_utf8_decode+0xcc>
   10848:	ldr	r1, [sp, #8]
   1084c:	ldr	r2, [fp, #12]
   10850:	cmp	r1, r2
   10854:	bcs	10884 <por_utf8_decode+0xcc>
   10858:	ldrb	r1, [sl, r1]
   1085c:	cmp	r1, #0
   10860:	beq	10884 <por_utf8_decode+0xcc>
   10864:	strb	r1, [r5, r9]
   10868:	ldr	r0, [sp, #4]
   1086c:	str	r8, [sp, #4]
   10870:	add	r6, r6, r0
   10874:	add	r9, r9, #1
   10878:	cmp	r9, r4
   1087c:	mov	r0, r9
   10880:	bcc	107f4 <por_utf8_decode+0x3c>
   10884:	sub	sp, fp, #28
   10888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1088c:	mvn	r0, #0
   10890:	sub	sp, fp, #28
   10894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10898:	.word	0x0001556d
   1089c:	.word	0x00000000

000108a0 <readstat_por_parse_double>:
   108a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108a4:	add	fp, sp, #28
   108a8:	sub	sp, sp, #4
   108ac:	vpush	{d8-d11}
   108b0:	sub	sp, sp, #40	; 0x28
   108b4:	sub	sp, sp, #1024	; 0x400
   108b8:	str	r3, [sp, #16]
   108bc:	str	r2, [sp, #20]
   108c0:	mov	r9, r0
   108c4:	cmp	r1, #0
   108c8:	str	r0, [sp, #24]
   108cc:	str	r1, [sp, #12]
   108d0:	beq	10bc0 <readstat_por_parse_double+0x320>
   108d4:	add	r1, r9, r1
   108d8:	str	r1, [sp, #28]
   108dc:	mov	ip, #0
   108e0:	vmov.f64	d16, #62	; 0x41f00000  30.0
   108e4:	vmov.i32	d9, #0	; 0x00000000
   108e8:	mov	r6, #1
   108ec:	mvn	lr, #1
   108f0:	vldr	d17, [pc, #968]	; 10cc0 <readstat_por_parse_double+0x420>
   108f4:	vmov.i32	d10, #0	; 0x00000000
   108f8:	vmov.i32	d11, #0	; 0x00000000
   108fc:	vmov.i32	d19, #0	; 0x00000000
   10900:	vmov.f64	d18, d16
   10904:	mov	r8, #1
   10908:	mov	r0, #0
   1090c:	str	r0, [sp, #32]
   10910:	vmov.i32	d8, #0	; 0x00000000
   10914:	ldr	r0, [pc, #940]	; 10cc8 <readstat_por_parse_double+0x428>
   10918:	add	r0, pc, r0
   1091c:	ldrb	r2, [r0, r8]
   10920:	ldr	r0, [pc, #932]	; 10ccc <readstat_por_parse_double+0x42c>
   10924:	add	r0, pc, r0
   10928:	ldrb	r0, [r0, r8]
   1092c:	ldr	r1, [pc, #924]	; 10cd0 <readstat_por_parse_double+0x430>
   10930:	add	r1, pc, r1
   10934:	add	r4, r1, r0
   10938:	movw	r0, #2414	; 0x96e
   1093c:	tst	r6, r0, lsr r8
   10940:	bne	1094c <readstat_por_parse_double+0xac>
   10944:	mov	r5, r4
   10948:	b	109ac <readstat_por_parse_double+0x10c>
   1094c:	ldr	r0, [pc, #896]	; 10cd4 <readstat_por_parse_double+0x434>
   10950:	add	r0, pc, r0
   10954:	ldrb	sl, [r0, r8]
   10958:	add	r5, r4, sl
   1095c:	sub	r1, r5, #1
   10960:	cmp	r1, r4
   10964:	bcc	109a4 <readstat_por_parse_double+0x104>
   10968:	ldrb	r6, [r9]
   1096c:	mov	r3, r4
   10970:	sub	r7, r1, r3
   10974:	mov	r0, r3
   10978:	ldrb	r7, [r0, r7, asr #1]!
   1097c:	cmp	r6, r7
   10980:	bcs	10994 <readstat_por_parse_double+0xf4>
   10984:	sub	r1, r0, #1
   10988:	cmp	r1, r3
   1098c:	bcs	10970 <readstat_por_parse_double+0xd0>
   10990:	b	109a4 <readstat_por_parse_double+0x104>
   10994:	bls	10a20 <readstat_por_parse_double+0x180>
   10998:	add	r3, r0, #1
   1099c:	cmp	r1, r3
   109a0:	bcs	10970 <readstat_por_parse_double+0xd0>
   109a4:	add	r2, sl, r2
   109a8:	mov	r6, #1
   109ac:	movw	r0, #4090	; 0xffa
   109b0:	tst	r6, r0, lsr r8
   109b4:	beq	10a40 <readstat_por_parse_double+0x1a0>
   109b8:	ldr	r0, [pc, #792]	; 10cd8 <readstat_por_parse_double+0x438>
   109bc:	add	r0, pc, r0
   109c0:	ldrb	r0, [r0, r8]
   109c4:	add	r1, r5, r0, lsl #1
   109c8:	sub	r7, r1, #2
   109cc:	cmp	r7, r5
   109d0:	bcc	10a3c <readstat_por_parse_double+0x19c>
   109d4:	ldrb	r1, [r9]
   109d8:	mov	r6, r5
   109dc:	sub	r3, r7, r6
   109e0:	and	r4, lr, r3, asr #1
   109e4:	mov	r3, r6
   109e8:	ldrb	r4, [r3, r4]!
   109ec:	cmp	r1, r4
   109f0:	bcs	10a04 <readstat_por_parse_double+0x164>
   109f4:	sub	r7, r3, #2
   109f8:	cmp	r7, r6
   109fc:	bcs	109dc <readstat_por_parse_double+0x13c>
   10a00:	b	10a38 <readstat_por_parse_double+0x198>
   10a04:	ldrb	r4, [r3, #1]
   10a08:	cmp	r1, r4
   10a0c:	bls	10a30 <readstat_por_parse_double+0x190>
   10a10:	add	r6, r3, #2
   10a14:	cmp	r7, r6
   10a18:	bcs	109dc <readstat_por_parse_double+0x13c>
   10a1c:	b	10a38 <readstat_por_parse_double+0x198>
   10a20:	sub	r1, r2, r4
   10a24:	add	r2, r1, r0
   10a28:	mov	r6, #1
   10a2c:	b	10a40 <readstat_por_parse_double+0x1a0>
   10a30:	sub	r0, r3, r5
   10a34:	asr	r0, r0, #1
   10a38:	mov	r6, #1
   10a3c:	add	r2, r0, r2
   10a40:	ldr	r0, [pc, #660]	; 10cdc <readstat_por_parse_double+0x43c>
   10a44:	add	r0, pc, r0
   10a48:	ldrb	r0, [r0, r2]
   10a4c:	ldr	r1, [pc, #652]	; 10ce0 <readstat_por_parse_double+0x440>
   10a50:	add	r1, pc, r1
   10a54:	ldrb	r8, [r1, r2]
   10a58:	cmp	r0, #0
   10a5c:	beq	10b94 <readstat_por_parse_double+0x2f4>
   10a60:	ldr	r2, [pc, #636]	; 10ce4 <readstat_por_parse_double+0x444>
   10a64:	add	r2, pc, r2
   10a68:	ldrb	r1, [r2, r0]
   10a6c:	cmp	r1, #0
   10a70:	beq	10b94 <readstat_por_parse_double+0x2f4>
   10a74:	add	r0, r2, r0
   10a78:	add	r2, r0, #1
   10a7c:	rsb	r3, r1, #0
   10a80:	ldrb	r0, [r2]
   10a84:	cmp	r0, #10
   10a88:	bhi	10b88 <readstat_por_parse_double+0x2e8>
   10a8c:	add	r1, pc, #4
   10a90:	ldr	r0, [r1, r0, lsl #2]
   10a94:	add	pc, r1, r0
   10a98:	.word	0x00000034
   10a9c:	.word	0x00000050
   10aa0:	.word	0x0000006c
   10aa4:	.word	0x00000074
   10aa8:	.word	0x0000002c
   10aac:	.word	0x0000007c
   10ab0:	.word	0x00000084
   10ab4:	.word	0x00000090
   10ab8:	.word	0x0000002c
   10abc:	.word	0x00000098
   10ac0:	.word	0x0000011c
   10ac4:	mov	ip, #1
   10ac8:	b	10b88 <readstat_por_parse_double+0x2e8>
   10acc:	ldrb	r0, [r9]
   10ad0:	sub	r1, r0, #48	; 0x30
   10ad4:	uxtb	r4, r1
   10ad8:	cmp	r4, #9
   10adc:	bhi	10b38 <readstat_por_parse_double+0x298>
   10ae0:	vmov	s0, r1
   10ae4:	b	10b50 <readstat_por_parse_double+0x2b0>
   10ae8:	ldrb	r0, [r9]
   10aec:	sub	r1, r0, #48	; 0x30
   10af0:	uxtb	r4, r1
   10af4:	cmp	r4, #9
   10af8:	bhi	10b60 <readstat_por_parse_double+0x2c0>
   10afc:	vmov	s0, r1
   10b00:	b	10b78 <readstat_por_parse_double+0x2d8>
   10b04:	vmov.i32	d19, #0	; 0x00000000
   10b08:	b	10b88 <readstat_por_parse_double+0x2e8>
   10b0c:	vmov.i32	d9, #0	; 0x00000000
   10b10:	b	10b88 <readstat_por_parse_double+0x2e8>
   10b14:	vorr	d10, d19, d19
   10b18:	b	10b88 <readstat_por_parse_double+0x2e8>
   10b1c:	mov	r0, #1
   10b20:	str	r0, [sp, #32]
   10b24:	b	10b88 <readstat_por_parse_double+0x2e8>
   10b28:	vorr	d11, d19, d19
   10b2c:	b	10b88 <readstat_por_parse_double+0x2e8>
   10b30:	vorr	d8, d17, d17
   10b34:	b	10b88 <readstat_por_parse_double+0x2e8>
   10b38:	sub	r1, r0, #65	; 0x41
   10b3c:	uxtb	r1, r1
   10b40:	cmp	r1, #19
   10b44:	bhi	10b88 <readstat_por_parse_double+0x2e8>
   10b48:	sub	r0, r0, #55	; 0x37
   10b4c:	vmov	s0, r0
   10b50:	vcvt.f64.s32	d20, s0
   10b54:	vmla.f64	d20, d19, d16
   10b58:	vmov.f64	d19, d20
   10b5c:	b	10b88 <readstat_por_parse_double+0x2e8>
   10b60:	sub	r1, r0, #65	; 0x41
   10b64:	uxtb	r1, r1
   10b68:	cmp	r1, #19
   10b6c:	bhi	10b84 <readstat_por_parse_double+0x2e4>
   10b70:	sub	r0, r0, #55	; 0x37
   10b74:	vmov	s0, r0
   10b78:	vcvt.f64.s32	d20, s0
   10b7c:	vdiv.f64	d20, d20, d18
   10b80:	vadd.f64	d9, d9, d20
   10b84:	vmul.f64	d18, d18, d16
   10b88:	add	r2, r2, #1
   10b8c:	adds	r3, r3, #1
   10b90:	bne	10a80 <readstat_por_parse_double+0x1e0>
   10b94:	mov	sl, #0
   10b98:	cmp	r8, #0
   10b9c:	beq	10cb8 <readstat_por_parse_double+0x418>
   10ba0:	add	r9, r9, #1
   10ba4:	ldr	r0, [sp, #28]
   10ba8:	cmp	r9, r0
   10bac:	bne	10914 <readstat_por_parse_double+0x74>
   10bb0:	b	10be4 <readstat_por_parse_double+0x344>
   10bb4:	add	r9, r9, #1
   10bb8:	mov	sl, #1
   10bbc:	b	10be4 <readstat_por_parse_double+0x344>
   10bc0:	vmov.i32	d9, #0	; 0x00000000
   10bc4:	mov	ip, #0
   10bc8:	mov	r8, #1
   10bcc:	vmov.i32	d10, #0	; 0x00000000
   10bd0:	vmov.i32	d11, #0	; 0x00000000
   10bd4:	mov	r0, #0
   10bd8:	str	r0, [sp, #32]
   10bdc:	mov	sl, #0
   10be0:	vmov.i32	d8, #0	; 0x00000000
   10be4:	mov	r4, ip
   10be8:	vorr	d0, d8, d8
   10bec:	bl	4db8 <__isnan@plt>
   10bf0:	cmp	r0, #0
   10bf4:	beq	10c18 <readstat_por_parse_double+0x378>
   10bf8:	cmp	sl, #0
   10bfc:	beq	10c58 <readstat_por_parse_double+0x3b8>
   10c00:	ldr	r0, [sp, #20]
   10c04:	cmp	r0, #0
   10c08:	vstrne	d8, [r0]
   10c0c:	ldr	r0, [sp, #24]
   10c10:	sub	r7, r9, r0
   10c14:	b	10ca4 <readstat_por_parse_double+0x404>
   10c18:	vneg.f64	d16, d11
   10c1c:	vadd.f64	d8, d9, d10
   10c20:	ldr	r0, [sp, #32]
   10c24:	cmp	r0, #0
   10c28:	vseleq.f64	d1, d11, d16
   10c2c:	vcmp.f64	d1, #0.0
   10c30:	vmrs	APSR_nzcv, fpscr
   10c34:	beq	10c44 <readstat_por_parse_double+0x3a4>
   10c38:	vmov.f64	d0, #62	; 0x41f00000  30.0
   10c3c:	bl	49f8 <pow@plt>
   10c40:	vmul.f64	d8, d8, d0
   10c44:	vneg.f64	d16, d8
   10c48:	cmp	r4, #0
   10c4c:	vseleq.f64	d8, d8, d16
   10c50:	cmp	sl, #0
   10c54:	bne	10c00 <readstat_por_parse_double+0x360>
   10c58:	mvn	r7, #0
   10c5c:	ldr	r6, [sp, #16]
   10c60:	cmp	r6, #0
   10c64:	beq	10ca4 <readstat_por_parse_double+0x404>
   10c68:	ldr	r4, [fp, #8]
   10c6c:	ldr	r0, [sp, #12]
   10c70:	str	r0, [sp]
   10c74:	ldr	r0, [sp, #24]
   10c78:	stmib	sp, {r0, r8}
   10c7c:	sub	r3, r9, r0
   10c80:	add	r5, sp, #36	; 0x24
   10c84:	ldr	r2, [pc, #92]	; 10ce8 <readstat_por_parse_double+0x448>
   10c88:	add	r2, pc, r2
   10c8c:	mov	r0, r5
   10c90:	mov	r1, #1024	; 0x400
   10c94:	bl	4d04 <snprintf@plt>
   10c98:	mov	r0, r5
   10c9c:	mov	r1, r4
   10ca0:	blx	r6
   10ca4:	mov	r0, r7
   10ca8:	sub	sp, fp, #64	; 0x40
   10cac:	vpop	{d8-d11}
   10cb0:	add	sp, sp, #4
   10cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cb8:	mov	r8, #0
   10cbc:	b	10be4 <readstat_por_parse_double+0x344>
   10cc0:	.word	0x00000000
   10cc4:	.word	0x7ff80000
   10cc8:	.word	0x000154c8
   10ccc:	.word	0x000154af
   10cd0:	.word	0x0001546b
   10cd4:	.word	0x0001549d
   10cd8:	.word	0x0001543e
   10cdc:	.word	0x000153f3
   10ce0:	.word	0x000153b7
   10ce4:	.word	0x00015403
   10ce8:	.word	0x00015200
   10cec:	.word	0x00000000

00010cf0 <read_version_and_timestamp>:
   10cf0:	push	{r4, r5, r6, sl, fp, lr}
   10cf4:	add	fp, sp, #16
   10cf8:	sub	sp, sp, #312	; 0x138
   10cfc:	mov	r4, r0
   10d00:	vmov.i32	q8, #0	; 0x00000000
   10d04:	add	r6, sp, #8
   10d08:	add	r0, r6, #28
   10d0c:	vst1.32	{d16-d17}, [r0]
   10d10:	add	r5, r6, #16
   10d14:	vst1.64	{d16-d17}, [r5]
   10d18:	mov	r0, #32
   10d1c:	mov	r1, r6
   10d20:	vst1.64	{d16-d17}, [r1], r0
   10d24:	mvn	r0, #0
   10d28:	str	r0, [r1]
   10d2c:	add	r1, sp, #7
   10d30:	mov	r0, r4
   10d34:	mov	r2, #1
   10d38:	bl	10e24 <read_bytes>
   10d3c:	mov	r1, r0
   10d40:	mov	r0, #2
   10d44:	cmp	r1, #1
   10d48:	bne	10e14 <read_version_and_timestamp+0x124>
   10d4c:	add	r1, sp, #56	; 0x38
   10d50:	mov	r0, r4
   10d54:	mov	r2, #256	; 0x100
   10d58:	bl	10f38 <read_string>
   10d5c:	cmp	r0, #0
   10d60:	bne	10e14 <read_version_and_timestamp+0x124>
   10d64:	add	r0, r6, #12
   10d68:	str	r0, [sp]
   10d6c:	add	r2, r6, #20
   10d70:	add	r0, sp, #56	; 0x38
   10d74:	ldr	r1, [pc, #160]	; 10e1c <read_version_and_timestamp+0x12c>
   10d78:	add	r1, pc, r1
   10d7c:	mov	r3, r5
   10d80:	bl	4d10 <__isoc99_sscanf@plt>
   10d84:	mov	r1, r0
   10d88:	mov	r0, #29
   10d8c:	cmp	r1, #3
   10d90:	bne	10e14 <read_version_and_timestamp+0x124>
   10d94:	add	r1, sp, #56	; 0x38
   10d98:	mov	r0, r4
   10d9c:	mov	r2, #256	; 0x100
   10da0:	bl	10f38 <read_string>
   10da4:	cmp	r0, #0
   10da8:	bne	10e14 <read_version_and_timestamp+0x124>
   10dac:	str	r6, [sp]
   10db0:	add	r2, r6, #8
   10db4:	orr	r3, r6, #4
   10db8:	add	r0, sp, #56	; 0x38
   10dbc:	ldr	r1, [pc, #92]	; 10e20 <read_version_and_timestamp+0x130>
   10dc0:	add	r1, pc, r1
   10dc4:	bl	4d10 <__isoc99_sscanf@plt>
   10dc8:	cmp	r0, #3
   10dcc:	mov	r0, #29
   10dd0:	bne	10e14 <read_version_and_timestamp+0x124>
   10dd4:	ldr	r0, [sp, #24]
   10dd8:	ldr	r1, [sp, #28]
   10ddc:	movw	r2, #1900	; 0x76c
   10de0:	sub	r1, r1, r2
   10de4:	str	r1, [sp, #28]
   10de8:	sub	r0, r0, #1
   10dec:	str	r0, [sp, #24]
   10df0:	add	r0, sp, #8
   10df4:	bl	48cc <mktime@plt>
   10df8:	ldrb	r1, [sp, #7]
   10dfc:	add	r1, r4, r1, lsl #1
   10e00:	ldrh	r1, [r1, #94]	; 0x5e
   10e04:	sub	r1, r1, #65	; 0x41
   10e08:	str	r0, [r4, #56]	; 0x38
   10e0c:	str	r1, [r4, #60]	; 0x3c
   10e10:	mov	r0, #0
   10e14:	sub	sp, fp, #16
   10e18:	pop	{r4, r5, r6, sl, fp, pc}
   10e1c:	.word	0x00015141
   10e20:	.word	0x00015106

00010e24 <read_bytes>:
   10e24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e28:	add	fp, sp, #28
   10e2c:	sub	sp, sp, #4
   10e30:	mov	r9, r1
   10e34:	cmp	r2, #1
   10e38:	mov	r7, r1
   10e3c:	blt	10f20 <read_bytes+0xfc>
   10e40:	mov	r5, r0
   10e44:	add	r6, r9, r2
   10e48:	ldr	r4, [r0, #44]	; 0x2c
   10e4c:	add	r8, sp, #3
   10e50:	mov	sl, #0
   10e54:	mov	r7, r9
   10e58:	ldr	r0, [r5, #52]	; 0x34
   10e5c:	cmp	r0, #0
   10e60:	beq	10e78 <read_bytes+0x54>
   10e64:	ldrb	r0, [r5, #48]	; 0x30
   10e68:	strb	r0, [r7], #1
   10e6c:	ldr	r0, [r5, #52]	; 0x34
   10e70:	sub	r0, r0, #1
   10e74:	b	10eec <read_bytes+0xc8>
   10e78:	ldr	r3, [r4, #12]
   10e7c:	ldr	r2, [r4, #20]
   10e80:	mov	r0, r8
   10e84:	mov	r1, #1
   10e88:	blx	r3
   10e8c:	cmn	r0, #1
   10e90:	beq	10f24 <read_bytes+0x100>
   10e94:	cmp	r0, #0
   10e98:	beq	10f20 <read_bytes+0xfc>
   10e9c:	ldrb	r0, [sp, #3]
   10ea0:	cmp	r0, #10
   10ea4:	beq	10ee0 <read_bytes+0xbc>
   10ea8:	cmp	r0, #13
   10eac:	bne	10efc <read_bytes+0xd8>
   10eb0:	ldr	r3, [r4, #12]
   10eb4:	ldr	r2, [r4, #20]
   10eb8:	mov	r0, r8
   10ebc:	mov	r1, #1
   10ec0:	blx	r3
   10ec4:	add	r1, r0, #1
   10ec8:	mvn	r0, #0
   10ecc:	cmp	r1, #2
   10ed0:	bcc	10f24 <read_bytes+0x100>
   10ed4:	ldrb	r1, [sp, #3]
   10ed8:	cmp	r1, #10
   10edc:	bne	10f24 <read_bytes+0x100>
   10ee0:	ldr	r0, [r5, #40]	; 0x28
   10ee4:	str	sl, [r5, #40]	; 0x28
   10ee8:	rsb	r0, r0, #80	; 0x50
   10eec:	str	r0, [r5, #52]	; 0x34
   10ef0:	cmp	r7, r6
   10ef4:	bcc	10e58 <read_bytes+0x34>
   10ef8:	b	10f20 <read_bytes+0xfc>
   10efc:	ldr	r1, [r5, #40]	; 0x28
   10f00:	cmp	r1, #80	; 0x50
   10f04:	beq	10f2c <read_bytes+0x108>
   10f08:	strb	r0, [r7], #1
   10f0c:	ldr	r0, [r5, #40]	; 0x28
   10f10:	add	r0, r0, #1
   10f14:	str	r0, [r5, #40]	; 0x28
   10f18:	cmp	r7, r6
   10f1c:	bcc	10e58 <read_bytes+0x34>
   10f20:	sub	r0, r7, r9
   10f24:	sub	sp, fp, #28
   10f28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f2c:	mvn	r0, #0
   10f30:	sub	sp, fp, #28
   10f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00010f38 <read_string>:
   10f38:	push	{fp, lr}
   10f3c:	mov	fp, sp
   10f40:	sub	sp, sp, #8
   10f44:	mov	r3, #0
   10f48:	str	r3, [sp, #4]
   10f4c:	add	r3, sp, #4
   10f50:	bl	12088 <maybe_read_string>
   10f54:	ldr	r1, [sp, #4]
   10f58:	cmp	r1, #0
   10f5c:	mov	r1, r0
   10f60:	movwne	r1, #5
   10f64:	cmp	r0, #0
   10f68:	movne	r1, r0
   10f6c:	mov	r0, r1
   10f70:	mov	sp, fp
   10f74:	pop	{fp, pc}

00010f78 <handle_variables>:
   10f78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f7c:	add	fp, sp, #28
   10f80:	sub	sp, sp, #260	; 0x104
   10f84:	mov	r8, r0
   10f88:	ldr	r0, [r0, #632]	; 0x278
   10f8c:	cmp	r0, #1
   10f90:	blt	1104c <handle_variables+0xd4>
   10f94:	mov	r7, #0
   10f98:	mov	r9, sp
   10f9c:	mov	sl, #0
   10fa0:	mov	r6, #0
   10fa4:	ldr	r0, [r8, #652]	; 0x28c
   10fa8:	add	r5, r0, r7
   10fac:	str	r6, [r5, #8]
   10fb0:	ldr	r2, [r8, #612]	; 0x264
   10fb4:	mov	r0, r5
   10fb8:	mov	r1, sl
   10fbc:	bl	4cf8 <spss_init_variable_for_info@plt>
   10fc0:	ldr	r1, [r8, #648]	; 0x288
   10fc4:	str	r0, [r1, r6, lsl #2]
   10fc8:	ldr	r3, [r5, #4]
   10fcc:	mov	r0, r9
   10fd0:	mov	r1, #256	; 0x100
   10fd4:	ldr	r2, [pc, #268]	; 110e8 <handle_variables+0x170>
   10fd8:	add	r2, pc, r2
   10fdc:	bl	4d04 <snprintf@plt>
   10fe0:	ldr	r4, [r8, #8]
   10fe4:	cmp	r4, #0
   10fe8:	beq	11020 <handle_variables+0xa8>
   10fec:	ldr	r0, [r5, #4]
   10ff0:	cmn	r0, #1
   10ff4:	mov	r2, r9
   10ff8:	addeq	r2, r0, #1
   10ffc:	ldr	r0, [r8, #648]	; 0x288
   11000:	ldr	r1, [r0, r6, lsl #2]
   11004:	ldr	r3, [r8, #36]	; 0x24
   11008:	mov	r0, r6
   1100c:	blx	r4
   11010:	cmp	r0, #2
   11014:	beq	11028 <handle_variables+0xb0>
   11018:	cmp	r0, #1
   1101c:	beq	110b8 <handle_variables+0x140>
   11020:	add	sl, sl, #1
   11024:	b	11038 <handle_variables+0xc0>
   11028:	ldr	r0, [r8, #648]	; 0x288
   1102c:	ldr	r0, [r0, r6, lsl #2]
   11030:	mov	r1, #1
   11034:	str	r1, [r0, #2144]	; 0x860
   11038:	add	r7, r7, #280	; 0x118
   1103c:	add	r6, r6, #1
   11040:	ldr	r0, [r8, #632]	; 0x278
   11044:	cmp	r6, r0
   11048:	blt	10fa4 <handle_variables+0x2c>
   1104c:	ldr	r1, [r8, #12]
   11050:	mov	r0, #0
   11054:	cmp	r1, #0
   11058:	beq	110b0 <handle_variables+0x138>
   1105c:	mov	r5, r8
   11060:	ldrb	r1, [r5, #64]!	; 0x40
   11064:	cmp	r1, #0
   11068:	beq	110b0 <handle_variables+0x138>
   1106c:	ldr	r1, [r8, #632]	; 0x278
   11070:	cmp	r1, #1
   11074:	blt	110b0 <handle_variables+0x138>
   11078:	ldr	r0, [r8, #652]	; 0x28c
   1107c:	add	r6, r0, #187	; 0xbb
   11080:	mov	r7, #0
   11084:	mov	r0, r6
   11088:	mov	r1, r5
   1108c:	bl	4878 <strcmp@plt>
   11090:	cmp	r0, #0
   11094:	beq	110c4 <handle_variables+0x14c>
   11098:	add	r6, r6, #280	; 0x118
   1109c:	add	r7, r7, #1
   110a0:	ldr	r0, [r8, #632]	; 0x278
   110a4:	cmp	r7, r0
   110a8:	blt	11084 <handle_variables+0x10c>
   110ac:	mov	r0, #0
   110b0:	sub	sp, fp, #28
   110b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110b8:	mov	r0, #4
   110bc:	sub	sp, fp, #28
   110c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110c4:	ldr	r0, [r8, #648]	; 0x288
   110c8:	ldr	r0, [r0, r7, lsl #2]
   110cc:	ldr	r2, [r8, #12]
   110d0:	ldr	r1, [r8, #36]	; 0x24
   110d4:	blx	r2
   110d8:	cmp	r0, #0
   110dc:	movwne	r0, #4
   110e0:	sub	sp, fp, #28
   110e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110e8:	.word	0x00014efb

000110ec <readstat_parse_por>:
   110ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   110f0:	add	fp, sp, #24
   110f4:	sub	sp, sp, #1760	; 0x6e0
   110f8:	mov	r7, r2
   110fc:	mov	r5, r1
   11100:	mov	r6, r0
   11104:	ldr	r8, [r0, #32]
   11108:	add	r4, r0, #16
   1110c:	bl	4f2c <por_ctx_init@plt>
   11110:	mov	r9, r0
   11114:	mov	r0, #48	; 0x30
   11118:	mov	r1, r6
   1111c:	vld1.32	{d16-d17}, [r1], r0
   11120:	vld1.32	{d18-d19}, [r4]
   11124:	str	r7, [r9, #36]	; 0x24
   11128:	str	r8, [r9, #44]	; 0x2c
   1112c:	add	r0, r9, #16
   11130:	vst1.32	{d18-d19}, [r0]
   11134:	mov	r0, #640	; 0x280
   11138:	mov	r2, r9
   1113c:	vst1.32	{d16-d17}, [r2], r0
   11140:	ldr	r0, [r6, #44]	; 0x2c
   11144:	str	r0, [r2]
   11148:	ldr	r0, [r1]
   1114c:	cmp	r0, #1
   11150:	strge	r0, [r9, #644]	; 0x284
   11154:	ldr	r6, [r6, #40]	; 0x28
   11158:	cmp	r6, #0
   1115c:	beq	11198 <readstat_parse_por+0xac>
   11160:	ldr	r1, [pc, #976]	; 11538 <readstat_parse_por+0x44c>
   11164:	add	r1, pc, r1
   11168:	mov	r0, r6
   1116c:	bl	4878 <strcmp@plt>
   11170:	cmp	r0, #0
   11174:	beq	1118c <readstat_parse_por+0xa0>
   11178:	ldr	r1, [pc, #956]	; 1153c <readstat_parse_por+0x450>
   1117c:	add	r1, pc, r1
   11180:	mov	r0, r6
   11184:	bl	4bc0 <iconv_open@plt>
   11188:	str	r0, [r9, #612]	; 0x264
   1118c:	ldr	r0, [r9, #612]	; 0x264
   11190:	cmn	r0, #1
   11194:	beq	11330 <readstat_parse_por+0x244>
   11198:	ldr	r2, [r8]
   1119c:	ldr	r1, [r8, #20]
   111a0:	mov	r0, r5
   111a4:	blx	r2
   111a8:	cmn	r0, #1
   111ac:	beq	11328 <readstat_parse_por+0x23c>
   111b0:	ldr	r3, [r8, #8]
   111b4:	ldr	r2, [r8, #20]
   111b8:	mov	r0, #0
   111bc:	mov	r1, #2
   111c0:	blx	r3
   111c4:	str	r0, [r9, #32]
   111c8:	mov	r5, #15
   111cc:	cmn	r0, #1
   111d0:	beq	11344 <readstat_parse_por+0x258>
   111d4:	ldr	r3, [r8, #8]
   111d8:	ldr	r2, [r8, #20]
   111dc:	mov	r0, #0
   111e0:	mov	r1, #0
   111e4:	blx	r3
   111e8:	cmn	r0, #1
   111ec:	beq	11344 <readstat_parse_por+0x258>
   111f0:	sub	r5, fp, #484	; 0x1e4
   111f4:	mov	r0, r9
   111f8:	mov	r1, r5
   111fc:	mov	r2, #200	; 0xc8
   11200:	bl	10e24 <read_bytes>
   11204:	cmp	r0, #200	; 0xc8
   11208:	bne	11340 <readstat_parse_por+0x254>
   1120c:	mov	r0, #0
   11210:	str	r0, [sp]
   11214:	add	r0, r9, #73	; 0x49
   11218:	add	r2, r5, #60	; 0x3c
   1121c:	mov	r1, #21
   11220:	mov	r3, #20
   11224:	bl	4cbc <readstat_convert@plt>
   11228:	mov	r5, r0
   1122c:	cmp	r0, #0
   11230:	bne	11344 <readstat_parse_por+0x258>
   11234:	sub	r5, fp, #284	; 0x11c
   11238:	mov	r0, r9
   1123c:	mov	r1, r5
   11240:	mov	r2, #256	; 0x100
   11244:	bl	10e24 <read_bytes>
   11248:	cmp	r0, #256	; 0x100
   1124c:	bne	11340 <readstat_parse_por+0x254>
   11250:	ldrb	r0, [fp, #-158]	; 0xffffff62
   11254:	strb	r0, [r9, #48]	; 0x30
   11258:	mov	r0, #0
   1125c:	ldr	r1, [pc, #732]	; 11540 <readstat_parse_por+0x454>
   11260:	ldr	r1, [pc, r1]
   11264:	ldr	r2, [pc, #728]	; 11544 <readstat_parse_por+0x458>
   11268:	ldr	r2, [pc, r2]
   1126c:	ldrb	r3, [r2, r0]
   11270:	cmp	r3, #0
   11274:	beq	11280 <readstat_parse_por+0x194>
   11278:	sxtb	r3, r3
   1127c:	b	1128c <readstat_parse_por+0x1a0>
   11280:	ldrh	r3, [r1]
   11284:	cmp	r3, #0
   11288:	beq	11298 <readstat_parse_por+0x1ac>
   1128c:	ldrb	r7, [r5, r0]
   11290:	add	r7, r9, r7, lsl #1
   11294:	strh	r3, [r7, #94]	; 0x5e
   11298:	add	r1, r1, #2
   1129c:	add	r0, r0, #1
   112a0:	cmp	r0, #256	; 0x100
   112a4:	bne	1126c <readstat_parse_por+0x180>
   112a8:	ldrb	r0, [fp, #-220]	; 0xffffff24
   112ac:	add	r0, r9, r0, lsl #1
   112b0:	ldr	r1, [pc, #656]	; 11548 <readstat_parse_por+0x45c>
   112b4:	ldr	r1, [pc, r1]
   112b8:	ldrh	r1, [r1, #128]	; 0x80
   112bc:	strh	r1, [r0, #94]	; 0x5e
   112c0:	add	r1, sp, #268	; 0x10c
   112c4:	mov	r0, r9
   112c8:	mov	r2, #8
   112cc:	bl	10e24 <read_bytes>
   112d0:	cmp	r0, #8
   112d4:	mov	r5, #2
   112d8:	bne	11344 <readstat_parse_por+0x258>
   112dc:	add	r0, r9, #94	; 0x5e
   112e0:	str	r0, [sp]
   112e4:	add	r6, sp, #268	; 0x10c
   112e8:	add	r2, sp, #260	; 0x104
   112ec:	mov	r0, r6
   112f0:	mov	r1, #8
   112f4:	mov	r3, #8
   112f8:	bl	4ce0 <por_utf8_encode@plt>
   112fc:	cmn	r0, #1
   11300:	beq	11364 <readstat_parse_por+0x278>
   11304:	mov	r2, r0
   11308:	ldr	r0, [pc, #576]	; 11550 <readstat_parse_por+0x464>
   1130c:	add	r0, pc, r0
   11310:	add	r1, sp, #260	; 0x104
   11314:	bl	4f98 <strncmp@plt>
   11318:	cmp	r0, #0
   1131c:	beq	113a8 <readstat_parse_por+0x2bc>
   11320:	mov	r5, #5
   11324:	b	11344 <readstat_parse_por+0x258>
   11328:	mov	r5, #1
   1132c:	b	11344 <readstat_parse_por+0x258>
   11330:	mov	r0, #0
   11334:	str	r0, [r9, #612]	; 0x264
   11338:	mov	r5, #7
   1133c:	b	11344 <readstat_parse_por+0x258>
   11340:	mov	r5, #2
   11344:	ldr	r1, [r8, #4]
   11348:	ldr	r0, [r8, #20]
   1134c:	blx	r1
   11350:	mov	r0, r9
   11354:	bl	4830 <por_ctx_free@plt>
   11358:	mov	r0, r5
   1135c:	sub	sp, fp, #24
   11360:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11364:	ldr	r0, [r9, #24]
   11368:	mov	r5, #16
   1136c:	cmp	r0, #0
   11370:	beq	11344 <readstat_parse_por+0x258>
   11374:	str	r6, [sp]
   11378:	add	r6, sp, #276	; 0x114
   1137c:	ldr	r2, [pc, #456]	; 1154c <readstat_parse_por+0x460>
   11380:	add	r2, pc, r2
   11384:	mov	r0, r6
   11388:	mov	r1, #1024	; 0x400
   1138c:	mov	r3, #8
   11390:	bl	4d04 <snprintf@plt>
   11394:	ldr	r2, [r9, #24]
   11398:	ldr	r1, [r9, #36]	; 0x24
   1139c:	mov	r0, r6
   113a0:	blx	r2
   113a4:	b	11344 <readstat_parse_por+0x258>
   113a8:	mvn	r0, #0
   113ac:	str	r0, [r9, #636]	; 0x27c
   113b0:	mov	r0, r9
   113b4:	bl	4a88 <read_version_and_timestamp@plt>
   113b8:	mov	r5, r0
   113bc:	cmp	r0, #0
   113c0:	bne	11344 <readstat_parse_por+0x258>
   113c4:	add	r6, sp, #4
   113c8:	mov	r0, r9
   113cc:	bl	11554 <read_tag>
   113d0:	sub	r0, r0, #49	; 0x31
   113d4:	cmp	r0, #21
   113d8:	bhi	11320 <readstat_parse_por+0x234>
   113dc:	add	r1, pc, #8
   113e0:	ldr	r0, [r1, r0, lsl #2]
   113e4:	mov	r5, #5
   113e8:	add	pc, r1, r0
   113ec:	.word	0x00000058
   113f0:	.word	0x00000058
   113f4:	.word	0x00000058
   113f8:	.word	0x0000006c
   113fc:	.word	0x00000078
   11400:	.word	0x00000084
   11404:	.word	0x00000090
   11408:	.word	0x0000009c
   1140c:	.word	0x000000a8
   11410:	.word	0xffffff58
   11414:	.word	0xffffff58
   11418:	.word	0xffffff58
   1141c:	.word	0xffffff58
   11420:	.word	0xffffff58
   11424:	.word	0xffffff58
   11428:	.word	0xffffff58
   1142c:	.word	0x000000b4
   11430:	.word	0x000000c0
   11434:	.word	0x000000cc
   11438:	.word	0x000000d8
   1143c:	.word	0x000000e4
   11440:	.word	0x000000fc
   11444:	mov	r0, r9
   11448:	mov	r1, r6
   1144c:	mov	r2, #256	; 0x100
   11450:	bl	10f38 <read_string>
   11454:	b	114d8 <readstat_parse_por+0x3ec>
   11458:	mov	r0, r9
   1145c:	bl	11590 <read_variable_count_record>
   11460:	b	114d8 <readstat_parse_por+0x3ec>
   11464:	mov	r0, r9
   11468:	bl	116a8 <read_precision_record>
   1146c:	b	114d8 <readstat_parse_por+0x3ec>
   11470:	mov	r0, r9
   11474:	bl	116e4 <read_case_weight_record>
   11478:	b	114d8 <readstat_parse_por+0x3ec>
   1147c:	mov	r0, r9
   11480:	bl	116f0 <read_variable_record>
   11484:	b	114d8 <readstat_parse_por+0x3ec>
   11488:	mov	r0, r9
   1148c:	bl	1182c <read_missing_value_record>
   11490:	b	114d8 <readstat_parse_por+0x3ec>
   11494:	mov	r0, r9
   11498:	bl	1198c <read_missing_value_lo_range_record>
   1149c:	b	114d8 <readstat_parse_por+0x3ec>
   114a0:	mov	r0, r9
   114a4:	bl	11a14 <read_missing_value_hi_range_record>
   114a8:	b	114d8 <readstat_parse_por+0x3ec>
   114ac:	mov	r0, r9
   114b0:	bl	118d0 <read_missing_value_range_record>
   114b4:	b	114d8 <readstat_parse_por+0x3ec>
   114b8:	mov	r0, r9
   114bc:	bl	11ad4 <read_variable_label_record>
   114c0:	b	114d8 <readstat_parse_por+0x3ec>
   114c4:	mov	r0, r9
   114c8:	bl	11b80 <read_value_label_record>
   114cc:	b	114d8 <readstat_parse_por+0x3ec>
   114d0:	mov	r0, r9
   114d4:	bl	11d48 <read_document_record>
   114d8:	mov	r5, r0
   114dc:	cmp	r0, #0
   114e0:	beq	113c8 <readstat_parse_por+0x2dc>
   114e4:	b	11344 <readstat_parse_por+0x258>
   114e8:	ldr	r0, [r9, #632]	; 0x278
   114ec:	ldr	r1, [r9, #636]	; 0x27c
   114f0:	sub	r0, r0, #1
   114f4:	mov	r5, #8
   114f8:	cmp	r1, r0
   114fc:	bne	11344 <readstat_parse_por+0x258>
   11500:	mov	r0, r9
   11504:	bl	4fd4 <handle_variables@plt>
   11508:	mov	r5, r0
   1150c:	cmp	r0, #0
   11510:	bne	11344 <readstat_parse_por+0x258>
   11514:	ldr	r0, [r9, #16]
   11518:	cmp	r0, #0
   1151c:	beq	11530 <readstat_parse_por+0x444>
   11520:	mov	r0, r9
   11524:	bl	11e00 <read_por_file_data>
   11528:	mov	r5, r0
   1152c:	b	11344 <readstat_parse_por+0x258>
   11530:	mov	r5, #0
   11534:	b	11344 <readstat_parse_por+0x258>
   11538:	.word	0x00014602
   1153c:	.word	0x000145ea
   11540:	.word	0x0003409c
   11544:	.word	0x000340a0
   11548:	.word	0x00034048
   1154c:	.word	0x00014b5c
   11550:	.word	0x00014bf4

00011554 <read_tag>:
   11554:	push	{r4, sl, fp, lr}
   11558:	add	fp, sp, #8
   1155c:	sub	sp, sp, #8
   11560:	mov	r4, r0
   11564:	add	r1, sp, #7
   11568:	mov	r2, #1
   1156c:	bl	10e24 <read_bytes>
   11570:	mov	r1, r0
   11574:	movw	r0, #65535	; 0xffff
   11578:	cmp	r1, #1
   1157c:	ldrbeq	r0, [sp, #7]
   11580:	addeq	r0, r4, r0, lsl #1
   11584:	ldrheq	r0, [r0, #94]	; 0x5e
   11588:	sub	sp, fp, #8
   1158c:	pop	{r4, sl, fp, pc}

00011590 <read_variable_count_record>:
   11590:	push	{r4, r5, fp, lr}
   11594:	add	fp, sp, #8
   11598:	sub	sp, sp, #64	; 0x40
   1159c:	mov	r4, r0
   115a0:	ldr	r1, [r0, #632]	; 0x278
   115a4:	mov	r0, #5
   115a8:	cmp	r1, #0
   115ac:	bne	1160c <read_variable_count_record+0x7c>
   115b0:	movw	r1, #16960	; 0x4240
   115b4:	movt	r1, #15
   115b8:	sub	r2, fp, #12
   115bc:	mov	r0, r4
   115c0:	bl	12474 <read_integer_in_range>
   115c4:	cmp	r0, #0
   115c8:	bne	1160c <read_variable_count_record+0x7c>
   115cc:	mov	r5, r0
   115d0:	ldr	r0, [fp, #-12]
   115d4:	str	r0, [r4, #632]	; 0x278
   115d8:	mov	r1, #4
   115dc:	bl	4a34 <readstat_calloc@plt>
   115e0:	str	r0, [r4, #648]	; 0x288
   115e4:	ldr	r0, [r4, #632]	; 0x278
   115e8:	mov	r1, #280	; 0x118
   115ec:	bl	4a34 <readstat_calloc@plt>
   115f0:	mov	r1, r0
   115f4:	str	r0, [r4, #652]	; 0x28c
   115f8:	mov	r0, #3
   115fc:	cmp	r1, #0
   11600:	ldrne	r1, [r4, #648]	; 0x288
   11604:	cmpne	r1, #0
   11608:	bne	11614 <read_variable_count_record+0x84>
   1160c:	sub	sp, fp, #8
   11610:	pop	{r4, r5, fp, pc}
   11614:	ldr	r2, [r4]
   11618:	cmp	r2, #0
   1161c:	moveq	r0, #0
   11620:	subeq	sp, fp, #8
   11624:	popeq	{r4, r5, fp, pc}
   11628:	mvn	r0, #0
   1162c:	str	r0, [sp, #4]
   11630:	str	r0, [sp]
   11634:	ldr	r0, [r4, #632]	; 0x278
   11638:	str	r0, [sp, #8]
   1163c:	asr	r0, r0, #31
   11640:	str	r0, [sp, #12]
   11644:	ldr	r0, [r4, #56]	; 0x38
   11648:	ldr	r1, [r4, #60]	; 0x3c
   1164c:	str	r0, [sp, #20]
   11650:	str	r0, [sp, #16]
   11654:	mov	r0, #0
   11658:	str	r0, [sp, #32]
   1165c:	str	r0, [sp, #36]	; 0x24
   11660:	str	r0, [sp, #40]	; 0x28
   11664:	add	r3, r4, #73	; 0x49
   11668:	str	r3, [sp, #44]	; 0x2c
   1166c:	str	r0, [sp, #48]	; 0x30
   11670:	ldrb	r0, [sp, #52]	; 0x34
   11674:	and	r0, r0, #254	; 0xfe
   11678:	strb	r0, [sp, #52]	; 0x34
   1167c:	str	r1, [sp, #24]
   11680:	asr	r0, r1, #31
   11684:	str	r0, [sp, #28]
   11688:	ldr	r1, [r4, #36]	; 0x24
   1168c:	mov	r0, sp
   11690:	blx	r2
   11694:	cmp	r0, #0
   11698:	movne	r5, #4
   1169c:	mov	r0, r5
   116a0:	sub	sp, fp, #8
   116a4:	pop	{r4, r5, fp, pc}

000116a8 <read_precision_record>:
   116a8:	push	{r4, sl, fp, lr}
   116ac:	add	fp, sp, #8
   116b0:	sub	sp, sp, #8
   116b4:	mov	r4, r0
   116b8:	mov	r0, #0
   116bc:	str	r0, [sp, #4]
   116c0:	add	r2, sp, #4
   116c4:	mov	r0, r4
   116c8:	mov	r1, #100	; 0x64
   116cc:	bl	12474 <read_integer_in_range>
   116d0:	cmp	r0, #0
   116d4:	ldreq	r1, [sp, #4]
   116d8:	streq	r1, [r4, #608]	; 0x260
   116dc:	sub	sp, fp, #8
   116e0:	pop	{r4, sl, fp, pc}

000116e4 <read_case_weight_record>:
   116e4:	add	r1, r0, #64	; 0x40
   116e8:	mov	r2, #9
   116ec:	b	10f38 <read_string>

000116f0 <read_variable_record>:
   116f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   116f4:	add	fp, sp, #24
   116f8:	sub	sp, sp, #16
   116fc:	mov	r4, r0
   11700:	ldr	r2, [r0, #632]	; 0x278
   11704:	ldr	r0, [r0, #636]	; 0x27c
   11708:	add	r1, r0, #1
   1170c:	str	r1, [r4, #636]	; 0x27c
   11710:	mov	r0, #5
   11714:	cmp	r1, r2
   11718:	beq	11794 <read_variable_record+0xa4>
   1171c:	ldr	r0, [r4, #652]	; 0x28c
   11720:	mov	r2, #280	; 0x118
   11724:	mla	r5, r1, r2, r0
   11728:	add	r0, r5, #36	; 0x24
   1172c:	str	r0, [sp, #8]
   11730:	add	r0, r5, #24
   11734:	str	r0, [sp, #4]
   11738:	mvn	r0, #0
   1173c:	str	r0, [r5, #4]
   11740:	movw	r1, #16960	; 0x4240
   11744:	movt	r1, #15
   11748:	add	r2, sp, #12
   1174c:	mov	r0, r4
   11750:	bl	12474 <read_integer_in_range>
   11754:	cmp	r0, #0
   11758:	bne	11794 <read_variable_record+0xa4>
   1175c:	ldr	r0, [sp, #12]
   11760:	str	r0, [r5, #16]
   11764:	mov	r7, #0
   11768:	cmp	r0, #0
   1176c:	mov	r0, #0
   11770:	movweq	r0, #5
   11774:	str	r0, [r5]
   11778:	add	r6, r5, #187	; 0xbb
   1177c:	mov	r0, r4
   11780:	mov	r1, r6
   11784:	mov	r2, #9
   11788:	bl	10f38 <read_string>
   1178c:	cmp	r0, #0
   11790:	beq	1179c <read_variable_record+0xac>
   11794:	sub	sp, fp, #24
   11798:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1179c:	ldr	r2, [r4, #656]	; 0x290
   117a0:	mov	r0, r6
   117a4:	mov	r1, r5
   117a8:	bl	4f8c <ck_str_hash_insert@plt>
   117ac:	add	r8, sp, #4
   117b0:	add	r5, sp, #12
   117b4:	ldr	r6, [r8, r7, lsl #2]
   117b8:	mov	r0, r4
   117bc:	mov	r1, #120	; 0x78
   117c0:	mov	r2, r5
   117c4:	bl	12474 <read_integer_in_range>
   117c8:	cmp	r0, #0
   117cc:	bne	11794 <read_variable_record+0xa4>
   117d0:	ldr	r0, [sp, #12]
   117d4:	str	r0, [r6]
   117d8:	mov	r0, r4
   117dc:	movw	r1, #20000	; 0x4e20
   117e0:	mov	r2, r5
   117e4:	bl	12474 <read_integer_in_range>
   117e8:	cmp	r0, #0
   117ec:	bne	11794 <read_variable_record+0xa4>
   117f0:	ldr	r0, [sp, #12]
   117f4:	str	r0, [r6, #4]
   117f8:	mov	r0, r4
   117fc:	mov	r1, #100	; 0x64
   11800:	mov	r2, r5
   11804:	bl	12474 <read_integer_in_range>
   11808:	cmp	r0, #0
   1180c:	bne	11794 <read_variable_record+0xa4>
   11810:	ldr	r0, [sp, #12]
   11814:	str	r0, [r6, #8]
   11818:	add	r7, r7, #1
   1181c:	mov	r0, #0
   11820:	cmp	r7, #2
   11824:	bcc	117b4 <read_variable_record+0xc4>
   11828:	b	11794 <read_variable_record+0xa4>

0001182c <read_missing_value_record>:
   1182c:	push	{r4, sl, fp, lr}
   11830:	add	fp, sp, #8
   11834:	ldr	r2, [r0, #636]	; 0x27c
   11838:	mov	r1, #5
   1183c:	cmp	r2, #0
   11840:	blt	118a8 <read_missing_value_record+0x7c>
   11844:	ldr	r3, [r0, #632]	; 0x278
   11848:	cmp	r2, r3
   1184c:	bge	118a8 <read_missing_value_record+0x7c>
   11850:	mov	ip, #280	; 0x118
   11854:	mul	r1, r2, ip
   11858:	ldr	r3, [r0, #652]	; 0x28c
   1185c:	mov	r4, r3
   11860:	ldr	r1, [r4, r1]!
   11864:	ldr	lr, [r4, #52]!	; 0x34
   11868:	cmp	r1, #5
   1186c:	bne	11884 <read_missing_value_record+0x58>
   11870:	mla	r1, r2, ip, r3
   11874:	add	r1, r1, lr, lsl #3
   11878:	add	r1, r1, #64	; 0x40
   1187c:	bl	12508 <read_double>
   11880:	b	1189c <read_missing_value_record+0x70>
   11884:	mla	r1, r2, ip, r3
   11888:	add	r2, lr, lr, lsl #5
   1188c:	add	r1, r1, r2
   11890:	add	r1, r1, #88	; 0x58
   11894:	mov	r2, #33	; 0x21
   11898:	bl	10f38 <read_string>
   1189c:	mov	r1, r0
   118a0:	cmp	r0, #0
   118a4:	beq	118b0 <read_missing_value_record+0x84>
   118a8:	mov	r0, r1
   118ac:	pop	{r4, sl, fp, pc}
   118b0:	ldr	r0, [r4]
   118b4:	cmp	r0, #2
   118b8:	mov	r1, #5
   118bc:	addle	r0, r0, #1
   118c0:	strle	r0, [r4]
   118c4:	movle	r1, #0
   118c8:	mov	r0, r1
   118cc:	pop	{r4, sl, fp, pc}

000118d0 <read_missing_value_range_record>:
   118d0:	push	{r4, r5, r6, sl, fp, lr}
   118d4:	add	fp, sp, #16
   118d8:	mov	r4, r0
   118dc:	ldr	r5, [r0, #636]	; 0x27c
   118e0:	mov	r0, #5
   118e4:	cmp	r5, #0
   118e8:	blt	1196c <read_missing_value_range_record+0x9c>
   118ec:	ldr	r1, [r4, #632]	; 0x278
   118f0:	cmp	r5, r1
   118f4:	beq	1196c <read_missing_value_range_record+0x9c>
   118f8:	mov	r0, #280	; 0x118
   118fc:	mul	r1, r5, r0
   11900:	ldr	r6, [r4, #652]	; 0x28c
   11904:	mov	r2, r6
   11908:	ldr	r1, [r2, r1]!
   1190c:	mov	r3, #2
   11910:	mov	ip, #1
   11914:	str	r3, [r2, #52]	; 0x34
   11918:	str	ip, [r2, #56]	; 0x38
   1191c:	mla	r0, r5, r0, r6
   11920:	cmp	r1, #5
   11924:	bne	11954 <read_missing_value_range_record+0x84>
   11928:	add	r1, r0, #64	; 0x40
   1192c:	mov	r0, r4
   11930:	bl	12508 <read_double>
   11934:	cmp	r0, #0
   11938:	popne	{r4, r5, r6, sl, fp, pc}
   1193c:	mov	r0, #280	; 0x118
   11940:	mla	r0, r5, r0, r6
   11944:	add	r1, r0, #72	; 0x48
   11948:	mov	r0, r4
   1194c:	pop	{r4, r5, r6, sl, fp, lr}
   11950:	b	12508 <read_double>
   11954:	add	r1, r0, #88	; 0x58
   11958:	mov	r0, r4
   1195c:	mov	r2, #33	; 0x21
   11960:	bl	10f38 <read_string>
   11964:	cmp	r0, #0
   11968:	beq	11970 <read_missing_value_range_record+0xa0>
   1196c:	pop	{r4, r5, r6, sl, fp, pc}
   11970:	mov	r0, #280	; 0x118
   11974:	mla	r0, r5, r0, r6
   11978:	add	r1, r0, #121	; 0x79
   1197c:	mov	r0, r4
   11980:	mov	r2, #33	; 0x21
   11984:	pop	{r4, r5, r6, sl, fp, lr}
   11988:	b	10f38 <read_string>

0001198c <read_missing_value_lo_range_record>:
   1198c:	ldr	r1, [r0, #636]	; 0x27c
   11990:	cmp	r1, #0
   11994:	blt	119a4 <read_missing_value_lo_range_record+0x18>
   11998:	ldr	r2, [r0, #632]	; 0x278
   1199c:	cmp	r1, r2
   119a0:	bne	119ac <read_missing_value_lo_range_record+0x20>
   119a4:	mov	r0, #5
   119a8:	bx	lr
   119ac:	push	{r4, r5, fp, lr}
   119b0:	add	fp, sp, #8
   119b4:	mov	ip, #280	; 0x118
   119b8:	mul	lr, r1, ip
   119bc:	ldr	r2, [r0, #652]	; 0x28c
   119c0:	mov	r3, r2
   119c4:	ldr	lr, [r3, lr]!
   119c8:	mov	r4, #2
   119cc:	mov	r5, #1
   119d0:	str	r4, [r3, #52]	; 0x34
   119d4:	str	r5, [r3, #56]	; 0x38
   119d8:	cmp	lr, #5
   119dc:	pop	{r4, r5, fp, lr}
   119e0:	mla	r1, r1, ip, r2
   119e4:	bne	11a00 <read_missing_value_lo_range_record+0x74>
   119e8:	movw	r3, #0
   119ec:	movt	r3, #65520	; 0xfff0
   119f0:	mov	r2, #0
   119f4:	strd	r2, [r1, #64]	; 0x40
   119f8:	add	r1, r1, #72	; 0x48
   119fc:	b	12508 <read_double>
   11a00:	mov	r2, #0
   11a04:	strb	r2, [r1, #88]	; 0x58
   11a08:	add	r1, r1, #121	; 0x79
   11a0c:	mov	r2, #33	; 0x21
   11a10:	b	10f38 <read_string>

00011a14 <read_missing_value_hi_range_record>:
   11a14:	push	{r4, r5, fp, lr}
   11a18:	add	fp, sp, #8
   11a1c:	ldr	r4, [r0, #636]	; 0x27c
   11a20:	mov	r2, #5
   11a24:	cmp	r4, #0
   11a28:	blt	11ab4 <read_missing_value_hi_range_record+0xa0>
   11a2c:	ldr	r1, [r0, #632]	; 0x278
   11a30:	cmp	r4, r1
   11a34:	beq	11ab4 <read_missing_value_hi_range_record+0xa0>
   11a38:	mov	r1, #280	; 0x118
   11a3c:	mul	r2, r4, r1
   11a40:	ldr	r5, [r0, #652]	; 0x28c
   11a44:	mov	r3, r5
   11a48:	ldr	r2, [r3, r2]!
   11a4c:	mov	ip, #2
   11a50:	mov	lr, #1
   11a54:	str	ip, [r3, #52]	; 0x34
   11a58:	str	lr, [r3, #56]	; 0x38
   11a5c:	mla	r1, r4, r1, r5
   11a60:	cmp	r2, #5
   11a64:	bne	11a9c <read_missing_value_hi_range_record+0x88>
   11a68:	add	r1, r1, #64	; 0x40
   11a6c:	bl	12508 <read_double>
   11a70:	mov	r2, r0
   11a74:	cmp	r0, #0
   11a78:	bne	11ab4 <read_missing_value_hi_range_record+0xa0>
   11a7c:	mov	r0, #280	; 0x118
   11a80:	mla	r0, r4, r0, r5
   11a84:	movw	r3, #0
   11a88:	movt	r3, #32752	; 0x7ff0
   11a8c:	mov	r2, #0
   11a90:	strd	r2, [r0, #72]	; 0x48
   11a94:	mov	r0, r2
   11a98:	pop	{r4, r5, fp, pc}
   11a9c:	add	r1, r1, #88	; 0x58
   11aa0:	mov	r2, #33	; 0x21
   11aa4:	bl	10f38 <read_string>
   11aa8:	mov	r2, r0
   11aac:	cmp	r0, #0
   11ab0:	beq	11abc <read_missing_value_hi_range_record+0xa8>
   11ab4:	mov	r0, r2
   11ab8:	pop	{r4, r5, fp, pc}
   11abc:	mov	r0, #280	; 0x118
   11ac0:	mla	r0, r4, r0, r5
   11ac4:	mov	r2, #0
   11ac8:	strb	r2, [r0, #121]	; 0x79
   11acc:	mov	r0, r2
   11ad0:	pop	{r4, r5, fp, pc}

00011ad4 <read_variable_label_record>:
   11ad4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11ad8:	add	fp, sp, #24
   11adc:	sub	sp, sp, #264	; 0x108
   11ae0:	mov	r4, r0
   11ae4:	ldr	r5, [r0, #636]	; 0x27c
   11ae8:	mov	r0, #5
   11aec:	cmp	r5, #0
   11af0:	blt	11b1c <read_variable_label_record+0x48>
   11af4:	ldr	r1, [r4, #632]	; 0x278
   11af8:	cmp	r5, r1
   11afc:	beq	11b1c <read_variable_label_record+0x48>
   11b00:	ldr	r6, [r4, #652]	; 0x28c
   11b04:	add	r1, sp, #8
   11b08:	mov	r0, r4
   11b0c:	mov	r2, #256	; 0x100
   11b10:	bl	10f38 <read_string>
   11b14:	cmp	r0, #0
   11b18:	beq	11b24 <read_variable_label_record+0x50>
   11b1c:	sub	sp, fp, #24
   11b20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11b24:	mov	r0, #280	; 0x118
   11b28:	mla	r7, r5, r0, r6
   11b2c:	ldr	r5, [r7, #264]	; 0x108
   11b30:	add	r6, sp, #8
   11b34:	mov	r0, r6
   11b38:	bl	4c8c <strlen@plt>
   11b3c:	mov	r8, #1
   11b40:	orr	r1, r8, r0, lsl #2
   11b44:	mov	r0, r5
   11b48:	bl	4a70 <realloc@plt>
   11b4c:	mov	r5, r0
   11b50:	str	r0, [r7, #264]	; 0x108
   11b54:	mov	r0, r6
   11b58:	bl	4c8c <strlen@plt>
   11b5c:	mov	r3, r0
   11b60:	ldr	r0, [r4, #612]	; 0x264
   11b64:	str	r0, [sp]
   11b68:	orr	r1, r8, r3, lsl #2
   11b6c:	mov	r0, r5
   11b70:	mov	r2, r6
   11b74:	bl	4cbc <readstat_convert@plt>
   11b78:	sub	sp, fp, #24
   11b7c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011b80 <read_value_label_record>:
   11b80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b84:	add	fp, sp, #28
   11b88:	sub	sp, sp, #804	; 0x324
   11b8c:	mov	r4, r0
   11b90:	mov	r0, #0
   11b94:	str	r0, [fp, #-300]	; 0xfffffed4
   11b98:	str	r0, [fp, #-304]	; 0xfffffed0
   11b9c:	ldr	r3, [r4, #624]	; 0x270
   11ba0:	add	r0, sp, #272	; 0x110
   11ba4:	ldr	r2, [pc, #408]	; 11d44 <read_value_label_record+0x1c4>
   11ba8:	add	r2, pc, r2
   11bac:	mov	r1, #256	; 0x100
   11bb0:	bl	4d04 <snprintf@plt>
   11bb4:	movw	r8, #16960	; 0x4240
   11bb8:	movt	r8, #15
   11bbc:	sub	r2, fp, #300	; 0x12c
   11bc0:	mov	r0, r4
   11bc4:	mov	r1, r8
   11bc8:	bl	12474 <read_integer_in_range>
   11bcc:	cmp	r0, #0
   11bd0:	bne	11d30 <read_value_label_record+0x1b0>
   11bd4:	ldr	r0, [fp, #-300]	; 0xfffffed4
   11bd8:	cmp	r0, #1
   11bdc:	blt	11c34 <read_value_label_record+0xb4>
   11be0:	mov	r5, #0
   11be4:	mov	r7, #5
   11be8:	sub	r6, fp, #296	; 0x128
   11bec:	mov	r0, r4
   11bf0:	mov	r1, r6
   11bf4:	mov	r2, #256	; 0x100
   11bf8:	bl	10f38 <read_string>
   11bfc:	cmp	r0, #0
   11c00:	bne	11d30 <read_value_label_record+0x1b0>
   11c04:	ldr	r1, [r4, #656]	; 0x290
   11c08:	mov	r0, r6
   11c0c:	bl	4a40 <ck_str_hash_lookup@plt>
   11c10:	cmp	r0, #0
   11c14:	ldrne	r1, [r4, #624]	; 0x270
   11c18:	strne	r1, [r0, #4]
   11c1c:	ldrne	r7, [r0]
   11c20:	add	r5, r5, #1
   11c24:	ldr	r0, [fp, #-300]	; 0xfffffed4
   11c28:	cmp	r5, r0
   11c2c:	blt	11bec <read_value_label_record+0x6c>
   11c30:	b	11c38 <read_value_label_record+0xb8>
   11c34:	mov	r7, #5
   11c38:	sub	r2, fp, #304	; 0x130
   11c3c:	mov	r0, r4
   11c40:	mov	r1, r8
   11c44:	bl	12474 <read_integer_in_range>
   11c48:	cmp	r0, #0
   11c4c:	bne	11d30 <read_value_label_record+0x1b0>
   11c50:	ldr	r0, [fp, #-304]	; 0xfffffed0
   11c54:	cmp	r0, #1
   11c58:	blt	11d20 <read_value_label_record+0x1a0>
   11c5c:	mov	r5, #0
   11c60:	sub	sl, fp, #296	; 0x128
   11c64:	add	r6, sp, #16
   11c68:	sub	r9, fp, #40	; 0x28
   11c6c:	mov	r0, r4
   11c70:	cmp	r7, #0
   11c74:	beq	11cac <read_value_label_record+0x12c>
   11c78:	mov	r1, r9
   11c7c:	bl	12508 <read_double>
   11c80:	cmp	r0, #0
   11c84:	bne	11d30 <read_value_label_record+0x1b0>
   11c88:	mov	r0, r4
   11c8c:	mov	r1, r6
   11c90:	mov	r2, #256	; 0x100
   11c94:	bl	10f38 <read_string>
   11c98:	cmp	r0, #0
   11c9c:	bne	11d30 <read_value_label_record+0x1b0>
   11ca0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11ca4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11ca8:	b	11ce0 <read_value_label_record+0x160>
   11cac:	mov	r1, sl
   11cb0:	mov	r2, #256	; 0x100
   11cb4:	bl	10f38 <read_string>
   11cb8:	cmp	r0, #0
   11cbc:	bne	11d30 <read_value_label_record+0x1b0>
   11cc0:	mov	r0, r4
   11cc4:	mov	r1, r6
   11cc8:	mov	r2, #256	; 0x100
   11ccc:	bl	10f38 <read_string>
   11cd0:	mov	r3, #0
   11cd4:	cmp	r0, #0
   11cd8:	mov	r2, sl
   11cdc:	bne	11d30 <read_value_label_record+0x1b0>
   11ce0:	bfc	r8, #0, #10
   11ce4:	ldr	r1, [r4, #20]
   11ce8:	cmp	r1, #0
   11cec:	beq	11d10 <read_value_label_record+0x190>
   11cf0:	ldr	r0, [r4, #36]	; 0x24
   11cf4:	stm	sp, {r7, r8}
   11cf8:	str	r6, [sp, #8]
   11cfc:	str	r0, [sp, #12]
   11d00:	add	r0, sp, #272	; 0x110
   11d04:	blx	r1
   11d08:	cmp	r0, #0
   11d0c:	bne	11d38 <read_value_label_record+0x1b8>
   11d10:	add	r5, r5, #1
   11d14:	ldr	r0, [fp, #-304]	; 0xfffffed0
   11d18:	cmp	r5, r0
   11d1c:	blt	11c6c <read_value_label_record+0xec>
   11d20:	ldr	r0, [r4, #624]	; 0x270
   11d24:	add	r0, r0, #1
   11d28:	str	r0, [r4, #624]	; 0x270
   11d2c:	mov	r0, #0
   11d30:	sub	sp, fp, #28
   11d34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d38:	mov	r0, #4
   11d3c:	sub	sp, fp, #28
   11d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d44:	.word	0x0001432b

00011d48 <read_document_record>:
   11d48:	push	{r4, r5, r6, sl, fp, lr}
   11d4c:	add	fp, sp, #16
   11d50:	sub	sp, sp, #264	; 0x108
   11d54:	mov	r4, r0
   11d58:	mov	r0, #0
   11d5c:	str	r0, [sp, #4]
   11d60:	movw	r1, #16960	; 0x4240
   11d64:	movt	r1, #15
   11d68:	add	r2, sp, #4
   11d6c:	mov	r0, r4
   11d70:	bl	12474 <read_integer_in_range>
   11d74:	cmp	r0, #0
   11d78:	beq	11d84 <read_document_record+0x3c>
   11d7c:	sub	sp, fp, #16
   11d80:	pop	{r4, r5, r6, sl, fp, pc}
   11d84:	ldr	r0, [sp, #4]
   11d88:	cmp	r0, #1
   11d8c:	mov	r0, #0
   11d90:	blt	11d7c <read_document_record+0x34>
   11d94:	mov	r5, #0
   11d98:	add	r6, sp, #8
   11d9c:	mov	r0, r4
   11da0:	mov	r1, r6
   11da4:	mov	r2, #256	; 0x100
   11da8:	bl	10f38 <read_string>
   11dac:	cmp	r0, #0
   11db0:	bne	11d7c <read_document_record+0x34>
   11db4:	ldr	r3, [r4, #4]
   11db8:	cmp	r3, #0
   11dbc:	beq	11dd8 <read_document_record+0x90>
   11dc0:	ldr	r2, [r4, #36]	; 0x24
   11dc4:	mov	r0, r5
   11dc8:	mov	r1, r6
   11dcc:	blx	r3
   11dd0:	cmp	r0, #0
   11dd4:	bne	11df4 <read_document_record+0xac>
   11dd8:	add	r5, r5, #1
   11ddc:	ldr	r0, [sp, #4]
   11de0:	cmp	r5, r0
   11de4:	blt	11d9c <read_document_record+0x54>
   11de8:	mov	r0, #0
   11dec:	sub	sp, fp, #16
   11df0:	pop	{r4, r5, r6, sl, fp, pc}
   11df4:	mov	r0, #4
   11df8:	sub	sp, fp, #16
   11dfc:	pop	{r4, r5, r6, sl, fp, pc}

00011e00 <read_por_file_data>:
   11e00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e04:	add	fp, sp, #28
   11e08:	sub	sp, sp, #308	; 0x134
   11e0c:	sub	sp, sp, #2048	; 0x800
   11e10:	mov	r4, r0
   11e14:	ldr	r0, [r0, #632]	; 0x278
   11e18:	cmp	r0, #0
   11e1c:	beq	1200c <read_por_file_data+0x20c>
   11e20:	add	r0, r4, #628	; 0x274
   11e24:	str	r0, [sp, #12]
   11e28:	add	r7, sp, #24
   11e2c:	add	r0, r7, #8
   11e30:	str	r0, [sp, #20]
   11e34:	add	r0, r4, #644	; 0x284
   11e38:	str	r0, [sp, #16]
   11e3c:	mov	sl, #0
   11e40:	str	sl, [sp, #40]	; 0x28
   11e44:	ldr	r0, [r4, #632]	; 0x278
   11e48:	cmp	r0, #1
   11e4c:	blt	11fb4 <read_por_file_data+0x1b4>
   11e50:	mov	r8, #0
   11e54:	mov	r9, #0
   11e58:	ldr	r6, [r4, #652]	; 0x28c
   11e5c:	str	sl, [sp, #28]
   11e60:	str	sl, [sp, #24]
   11e64:	ldr	r0, [r6, -r8]
   11e68:	strb	sl, [sp, #36]	; 0x24
   11e6c:	str	r0, [sp, #32]
   11e70:	ldrb	r0, [sp, #37]	; 0x25
   11e74:	and	r0, r0, #252	; 0xfc
   11e78:	strb	r0, [sp, #37]	; 0x25
   11e7c:	ldr	r0, [r6, -r8]
   11e80:	cmp	r0, #5
   11e84:	beq	11efc <read_por_file_data+0xfc>
   11e88:	cmp	r0, #0
   11e8c:	bne	11f40 <read_por_file_data+0x140>
   11e90:	mov	r0, r4
   11e94:	sub	r1, fp, #288	; 0x120
   11e98:	mov	r2, #256	; 0x100
   11e9c:	add	r3, sp, #40	; 0x28
   11ea0:	bl	12088 <maybe_read_string>
   11ea4:	mov	r5, r0
   11ea8:	cmp	r0, #0
   11eac:	bne	12014 <read_por_file_data+0x214>
   11eb0:	ldr	r0, [sp, #40]	; 0x28
   11eb4:	cmp	r0, #0
   11eb8:	bne	12060 <read_por_file_data+0x260>
   11ebc:	sub	r5, fp, #288	; 0x120
   11ec0:	mov	r0, r5
   11ec4:	bl	4c8c <strlen@plt>
   11ec8:	mov	r3, r0
   11ecc:	ldr	r0, [r4, #612]	; 0x264
   11ed0:	str	r0, [sp]
   11ed4:	add	lr, sp, #1024	; 0x400
   11ed8:	add	r6, lr, #47	; 0x2f
   11edc:	mov	r0, r6
   11ee0:	movw	r1, #1025	; 0x401
   11ee4:	mov	r2, r5
   11ee8:	bl	4cbc <readstat_convert@plt>
   11eec:	cmp	r0, #0
   11ef0:	bne	1206c <read_por_file_data+0x26c>
   11ef4:	str	r6, [sp, #24]
   11ef8:	b	11f40 <read_por_file_data+0x140>
   11efc:	mov	r0, r4
   11f00:	mov	r1, r7
   11f04:	add	r2, sp, #40	; 0x28
   11f08:	bl	1220c <maybe_read_double>
   11f0c:	mov	r5, r0
   11f10:	cmp	r0, #0
   11f14:	bne	12014 <read_por_file_data+0x214>
   11f18:	ldr	r0, [sp, #40]	; 0x28
   11f1c:	cmp	r0, #0
   11f20:	bne	12060 <read_por_file_data+0x260>
   11f24:	vldr	d0, [sp, #24]
   11f28:	bl	4db8 <__isnan@plt>
   11f2c:	and	r0, r0, #1
   11f30:	ldrb	r1, [sp, #37]	; 0x25
   11f34:	and	r1, r1, #254	; 0xfe
   11f38:	orr	r0, r1, r0
   11f3c:	strb	r0, [sp, #37]	; 0x25
   11f40:	ldr	r6, [r4, #16]
   11f44:	cmp	r6, #0
   11f48:	beq	11fa0 <read_por_file_data+0x1a0>
   11f4c:	ldr	r0, [r4, #648]	; 0x288
   11f50:	ldr	r1, [r0, r9, lsl #2]
   11f54:	ldr	r0, [r1, #2144]	; 0x860
   11f58:	cmp	r0, #0
   11f5c:	bne	11fa0 <read_por_file_data+0x1a0>
   11f60:	ldr	r0, [r4, #644]	; 0x284
   11f64:	cmp	r0, #0
   11f68:	bne	11fa0 <read_por_file_data+0x1a0>
   11f6c:	ldr	r0, [r4, #628]	; 0x274
   11f70:	mov	lr, r7
   11f74:	ldr	r2, [sp, #20]
   11f78:	ldm	r2, {r5, r7}
   11f7c:	ldr	ip, [r4, #36]	; 0x24
   11f80:	ldr	r2, [sp, #24]
   11f84:	ldr	r3, [sp, #28]
   11f88:	stm	sp, {r5, r7}
   11f8c:	mov	r7, lr
   11f90:	str	ip, [sp, #8]
   11f94:	blx	r6
   11f98:	cmp	r0, #0
   11f9c:	bne	12074 <read_por_file_data+0x274>
   11fa0:	sub	r8, r8, #280	; 0x118
   11fa4:	add	r9, r9, #1
   11fa8:	ldr	r0, [r4, #632]	; 0x278
   11fac:	cmp	r9, r0
   11fb0:	blt	11e58 <read_por_file_data+0x58>
   11fb4:	ldr	r1, [sp, #16]
   11fb8:	ldr	r0, [r1]
   11fbc:	cmp	r0, #0
   11fc0:	beq	11fcc <read_por_file_data+0x1cc>
   11fc4:	sub	r0, r0, #1
   11fc8:	b	11fd8 <read_por_file_data+0x1d8>
   11fcc:	ldr	r1, [sp, #12]
   11fd0:	ldr	r0, [r1]
   11fd4:	add	r0, r0, #1
   11fd8:	str	r0, [r1]
   11fdc:	mov	r0, r4
   11fe0:	bl	12550 <por_update_progress>
   11fe4:	mov	r5, r0
   11fe8:	cmp	r0, #0
   11fec:	bne	12078 <read_por_file_data+0x278>
   11ff0:	ldr	r0, [r4, #640]	; 0x280
   11ff4:	cmp	r0, #1
   11ff8:	blt	11e40 <read_por_file_data+0x40>
   11ffc:	ldr	r1, [r4, #628]	; 0x274
   12000:	cmp	r1, r0
   12004:	bne	11e40 <read_por_file_data+0x40>
   12008:	b	12078 <read_por_file_data+0x278>
   1200c:	mov	r5, #0
   12010:	b	12078 <read_por_file_data+0x278>
   12014:	ldr	r0, [r4, #24]
   12018:	cmp	r0, #0
   1201c:	beq	12078 <read_por_file_data+0x278>
   12020:	ldr	r0, [r4, #628]	; 0x274
   12024:	add	r0, r0, #1
   12028:	str	r0, [sp]
   1202c:	sub	r0, r6, r8
   12030:	add	r3, r0, #187	; 0xbb
   12034:	add	r6, sp, #47	; 0x2f
   12038:	ldr	r2, [pc, #68]	; 12084 <read_por_file_data+0x284>
   1203c:	add	r2, pc, r2
   12040:	mov	r0, r6
   12044:	mov	r1, #1024	; 0x400
   12048:	bl	4d04 <snprintf@plt>
   1204c:	ldr	r2, [r4, #24]
   12050:	ldr	r1, [r4, #36]	; 0x24
   12054:	mov	r0, r6
   12058:	blx	r2
   1205c:	b	12078 <read_por_file_data+0x278>
   12060:	cmp	r9, #0
   12064:	movne	r5, #5
   12068:	b	12078 <read_por_file_data+0x278>
   1206c:	mov	r5, r0
   12070:	b	12078 <read_por_file_data+0x278>
   12074:	mov	r5, #4
   12078:	mov	r0, r5
   1207c:	sub	sp, fp, #28
   12080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12084:	.word	0x00013f53

00012088 <maybe_read_string>:
   12088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1208c:	add	fp, sp, #28
   12090:	sub	sp, sp, #4
   12094:	vpush	{d8}
   12098:	sub	sp, sp, #24
   1209c:	sub	sp, sp, #1024	; 0x400
   120a0:	mov	r5, r3
   120a4:	mov	sl, r2
   120a8:	mov	r8, r1
   120ac:	mov	r4, r0
   120b0:	mov	r0, #0
   120b4:	str	r0, [fp, #-60]	; 0xffffffc4
   120b8:	sub	r1, fp, #56	; 0x38
   120bc:	sub	r2, fp, #60	; 0x3c
   120c0:	mov	r0, r4
   120c4:	bl	1220c <maybe_read_double>
   120c8:	mov	r7, r0
   120cc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   120d0:	orrs	r1, r0, r7
   120d4:	beq	120f8 <maybe_read_string+0x70>
   120d8:	cmp	r5, #0
   120dc:	strne	r0, [r5]
   120e0:	mov	r6, r7
   120e4:	mov	r0, r6
   120e8:	sub	sp, fp, #40	; 0x28
   120ec:	vpop	{d8}
   120f0:	add	sp, sp, #4
   120f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120f8:	mov	r6, #5
   120fc:	vldr	d8, [fp, #-56]	; 0xffffffc8
   12100:	vcmpe.f64	d8, #0.0
   12104:	vmrs	APSR_nzcv, fpscr
   12108:	bmi	120e4 <maybe_read_string+0x5c>
   1210c:	vldr	d16, [pc, #236]	; 12200 <maybe_read_string+0x178>
   12110:	vcmpe.f64	d8, d16
   12114:	vmrs	APSR_nzcv, fpscr
   12118:	bgt	120e4 <maybe_read_string+0x5c>
   1211c:	vmov.f64	d0, d8
   12120:	bl	4db8 <__isnan@plt>
   12124:	cmp	r0, #0
   12128:	bne	120e4 <maybe_read_string+0x5c>
   1212c:	ldr	r0, [r4, #620]	; 0x26c
   12130:	vcvt.u32.f64	s0, d8
   12134:	vmov	r9, s0
   12138:	cmp	r0, r9
   1213c:	bcs	12160 <maybe_read_string+0xd8>
   12140:	str	r9, [r4, #620]	; 0x26c
   12144:	ldr	r0, [r4, #616]	; 0x268
   12148:	mov	r1, r9
   1214c:	bl	4a70 <realloc@plt>
   12150:	str	r0, [r4, #616]	; 0x268
   12154:	ldr	r2, [r4, #620]	; 0x26c
   12158:	mov	r1, #0
   1215c:	bl	4d28 <memset@plt>
   12160:	ldr	r1, [r4, #616]	; 0x268
   12164:	mov	r0, r4
   12168:	mov	r2, r9
   1216c:	bl	10e24 <read_bytes>
   12170:	cmn	r0, #1
   12174:	beq	121b0 <maybe_read_string+0x128>
   12178:	ldr	r0, [r4, #616]	; 0x268
   1217c:	add	r1, r4, #94	; 0x5e
   12180:	str	r1, [sp]
   12184:	sub	r3, sl, #1
   12188:	mov	r1, r9
   1218c:	mov	r2, r8
   12190:	bl	4ce0 <por_utf8_encode@plt>
   12194:	cmn	r0, #1
   12198:	beq	121b8 <maybe_read_string+0x130>
   1219c:	mov	r1, #0
   121a0:	strb	r1, [r8, r0]
   121a4:	cmp	r5, #0
   121a8:	strne	r1, [r5]
   121ac:	b	120e0 <maybe_read_string+0x58>
   121b0:	mov	r6, #2
   121b4:	b	120e4 <maybe_read_string+0x5c>
   121b8:	ldr	r0, [r4, #24]
   121bc:	mov	r6, #16
   121c0:	cmp	r0, #0
   121c4:	beq	120e4 <maybe_read_string+0x5c>
   121c8:	ldr	r0, [r4, #616]	; 0x268
   121cc:	str	r0, [sp]
   121d0:	add	r5, sp, #4
   121d4:	ldr	r2, [pc, #44]	; 12208 <maybe_read_string+0x180>
   121d8:	add	r2, pc, r2
   121dc:	mov	r0, r5
   121e0:	mov	r1, #1024	; 0x400
   121e4:	mov	r3, r9
   121e8:	bl	4d04 <snprintf@plt>
   121ec:	ldr	r2, [r4, #24]
   121f0:	ldr	r1, [r4, #36]	; 0x24
   121f4:	mov	r0, r5
   121f8:	blx	r2
   121fc:	b	120e4 <maybe_read_string+0x5c>
   12200:	.word	0x00000000
   12204:	.word	0x40d38800
   12208:	.word	0x00013d31

0001220c <maybe_read_double>:
   1220c:	push	{r4, r5, r6, sl, fp, lr}
   12210:	add	fp, sp, #16
   12214:	sub	sp, sp, #8
   12218:	mov	r4, r2
   1221c:	mov	r5, r1
   12220:	mov	r6, r0
   12224:	add	r1, sp, #7
   12228:	mov	r2, #1
   1222c:	bl	10e24 <read_bytes>
   12230:	mov	r1, r0
   12234:	mov	r0, #5
   12238:	cmp	r1, #1
   1223c:	bne	12280 <maybe_read_double+0x74>
   12240:	ldrb	r2, [sp, #7]
   12244:	add	r0, r6, r2, lsl #1
   12248:	ldrh	r0, [r0, #94]	; 0x5e
   1224c:	cmp	r0, #90	; 0x5a
   12250:	bne	12288 <maybe_read_double+0x7c>
   12254:	cmp	r5, #0
   12258:	movwne	r1, #0
   1225c:	movtne	r1, #32760	; 0x7ff8
   12260:	movne	r0, #0
   12264:	strdne	r0, [r5]
   12268:	mov	r0, #0
   1226c:	cmp	r4, #0
   12270:	movne	r1, #1
   12274:	strne	r1, [r4]
   12278:	subne	sp, fp, #16
   1227c:	popne	{r4, r5, r6, sl, fp, pc}
   12280:	sub	sp, fp, #16
   12284:	pop	{r4, r5, r6, sl, fp, pc}
   12288:	cmp	r4, #0
   1228c:	movne	r0, #0
   12290:	strne	r0, [r4]
   12294:	mov	r0, r6
   12298:	mov	r1, r5
   1229c:	bl	122a8 <read_double_with_peek>
   122a0:	sub	sp, fp, #16
   122a4:	pop	{r4, r5, r6, sl, fp, pc}

000122a8 <read_double_with_peek>:
   122a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122ac:	add	fp, sp, #28
   122b0:	sub	sp, sp, #436	; 0x1b4
   122b4:	sub	sp, sp, #1024	; 0x400
   122b8:	mov	r9, r1
   122bc:	mov	r5, r0
   122c0:	movw	r7, #0
   122c4:	movt	r7, #32760	; 0x7ff8
   122c8:	str	r7, [fp, #-36]	; 0xffffffdc
   122cc:	mov	r0, #0
   122d0:	str	r0, [fp, #-40]	; 0xffffffd8
   122d4:	strb	r2, [fp, #-140]	; 0xffffff74
   122d8:	sub	r4, fp, #140	; 0x8c
   122dc:	add	r1, r4, #1
   122e0:	mov	r0, r5
   122e4:	mov	r2, #1
   122e8:	bl	10e24 <read_bytes>
   122ec:	mov	r8, #5
   122f0:	cmp	r0, #1
   122f4:	bne	12460 <read_double_with_peek+0x1b8>
   122f8:	ldrb	r0, [fp, #-140]	; 0xffffff74
   122fc:	add	r0, r5, r0, lsl #1
   12300:	ldrh	r0, [r0, #94]	; 0x5e
   12304:	cmp	r0, #42	; 0x2a
   12308:	bne	12334 <read_double_with_peek+0x8c>
   1230c:	ldrb	r0, [fp, #-139]	; 0xffffff75
   12310:	add	r0, r5, r0, lsl #1
   12314:	ldrh	r0, [r0, #94]	; 0x5e
   12318:	cmp	r0, #46	; 0x2e
   1231c:	bne	12334 <read_double_with_peek+0x8c>
   12320:	mov	r8, #0
   12324:	cmp	r9, #0
   12328:	strne	r8, [r9]
   1232c:	strne	r7, [r9, #4]
   12330:	b	12460 <read_double_with_peek+0x1b8>
   12334:	mov	r7, #0
   12338:	mov	r6, #2
   1233c:	add	r1, r4, r6
   12340:	ldrb	r0, [r1, #-1]
   12344:	add	r0, r5, r0, lsl #1
   12348:	ldrh	r0, [r0, #94]	; 0x5e
   1234c:	cmp	r0, #47	; 0x2f
   12350:	beq	12388 <read_double_with_peek+0xe0>
   12354:	mov	r0, r5
   12358:	mov	r2, #1
   1235c:	bl	10e24 <read_bytes>
   12360:	cmp	r0, #1
   12364:	bne	12460 <read_double_with_peek+0x1b8>
   12368:	adds	r6, r6, #1
   1236c:	adc	r7, r7, #0
   12370:	subs	r0, r6, #100	; 0x64
   12374:	sbcs	r0, r7, #0
   12378:	bcc	1233c <read_double_with_peek+0x94>
   1237c:	eor	r0, r6, #100	; 0x64
   12380:	orrs	r0, r0, r7
   12384:	beq	12460 <read_double_with_peek+0x1b8>
   12388:	add	r0, r5, #94	; 0x5e
   1238c:	str	r0, [sp]
   12390:	sub	r4, fp, #140	; 0x8c
   12394:	sub	r2, fp, #440	; 0x1b8
   12398:	mov	r0, r4
   1239c:	mov	r1, r6
   123a0:	mov	r3, #300	; 0x12c
   123a4:	bl	4ce0 <por_utf8_encode@plt>
   123a8:	ldr	r3, [r5, #24]
   123ac:	cmn	r0, #1
   123b0:	beq	12414 <read_double_with_peek+0x16c>
   123b4:	mov	sl, r0
   123b8:	ldr	r0, [r5, #36]	; 0x24
   123bc:	str	r0, [sp]
   123c0:	sub	r6, fp, #440	; 0x1b8
   123c4:	sub	r2, fp, #40	; 0x28
   123c8:	mov	r0, r6
   123cc:	mov	r1, sl
   123d0:	bl	4cd4 <readstat_por_parse_double@plt>
   123d4:	mov	r8, #0
   123d8:	cmn	r0, #1
   123dc:	bne	12454 <read_double_with_peek+0x1ac>
   123e0:	ldr	r0, [r5, #24]
   123e4:	mov	r8, #5
   123e8:	cmp	r0, #0
   123ec:	beq	12454 <read_double_with_peek+0x1ac>
   123f0:	asr	r0, sl, #31
   123f4:	str	sl, [sp]
   123f8:	stmib	sp, {r0, sl}
   123fc:	str	r6, [sp, #12]
   12400:	str	r4, [sp, #16]
   12404:	add	r6, sp, #24
   12408:	ldr	r2, [pc, #96]	; 12470 <read_double_with_peek+0x1c8>
   1240c:	add	r2, pc, r2
   12410:	b	12438 <read_double_with_peek+0x190>
   12414:	mov	r8, #16
   12418:	cmp	r3, #0
   1241c:	beq	12454 <read_double_with_peek+0x1ac>
   12420:	stm	sp, {r6, r7}
   12424:	str	r6, [sp, #8]
   12428:	str	r4, [sp, #12]
   1242c:	add	r6, sp, #24
   12430:	ldr	r2, [pc, #52]	; 1246c <read_double_with_peek+0x1c4>
   12434:	add	r2, pc, r2
   12438:	mov	r0, r6
   1243c:	mov	r1, #1024	; 0x400
   12440:	bl	4d04 <snprintf@plt>
   12444:	ldr	r2, [r5, #24]
   12448:	ldr	r1, [r5, #36]	; 0x24
   1244c:	mov	r0, r6
   12450:	blx	r2
   12454:	cmp	r9, #0
   12458:	vldrne	d16, [fp, #-40]	; 0xffffffd8
   1245c:	vstrne	d16, [r9]
   12460:	mov	r0, r8
   12464:	sub	sp, fp, #28
   12468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1246c:	.word	0x00013af3
   12470:	.word	0x00013b4e

00012474 <read_integer_in_range>:
   12474:	push	{r4, r5, fp, lr}
   12478:	add	fp, sp, #8
   1247c:	vpush	{d8}
   12480:	sub	sp, sp, #8
   12484:	mov	r4, r2
   12488:	mov	r5, r1
   1248c:	movw	r1, #0
   12490:	movt	r1, #32760	; 0x7ff8
   12494:	str	r1, [sp, #4]
   12498:	mov	r1, #0
   1249c:	str	r1, [sp]
   124a0:	mov	r1, sp
   124a4:	bl	12508 <read_double>
   124a8:	cmp	r0, #0
   124ac:	bne	124fc <read_integer_in_range+0x88>
   124b0:	vldr	d8, [sp]
   124b4:	vorr	d0, d8, d8
   124b8:	bl	4db8 <__isnan@plt>
   124bc:	mov	r1, r0
   124c0:	mov	r0, #5
   124c4:	vmov	s0, r5
   124c8:	vcvt.f64.s32	d16, s0
   124cc:	vcmpe.f64	d8, d16
   124d0:	vmrs	APSR_nzcv, fpscr
   124d4:	bgt	124fc <read_integer_in_range+0x88>
   124d8:	vcmpe.f64	d8, #0.0
   124dc:	vmrs	APSR_nzcv, fpscr
   124e0:	bmi	124fc <read_integer_in_range+0x88>
   124e4:	cmp	r1, #0
   124e8:	bne	124fc <read_integer_in_range+0x88>
   124ec:	mov	r0, #0
   124f0:	cmp	r4, #0
   124f4:	vcvtne.s32.f64	s0, d8
   124f8:	vstrne	s0, [r4]
   124fc:	sub	sp, fp, #16
   12500:	vpop	{d8}
   12504:	pop	{r4, r5, fp, pc}

00012508 <read_double>:
   12508:	push	{r4, r5, fp, lr}
   1250c:	add	fp, sp, #8
   12510:	sub	sp, sp, #8
   12514:	mov	r4, r1
   12518:	mov	r5, r0
   1251c:	add	r1, sp, #7
   12520:	mov	r2, #1
   12524:	bl	10e24 <read_bytes>
   12528:	mov	r1, r0
   1252c:	mov	r0, #5
   12530:	cmp	r1, #1
   12534:	bne	12548 <read_double+0x40>
   12538:	ldrb	r2, [sp, #7]
   1253c:	mov	r0, r5
   12540:	mov	r1, r4
   12544:	bl	122a8 <read_double_with_peek>
   12548:	sub	sp, fp, #8
   1254c:	pop	{r4, r5, fp, pc}

00012550 <por_update_progress>:
   12550:	push	{fp, lr}
   12554:	mov	fp, sp
   12558:	ldr	r1, [r0, #28]
   1255c:	ldr	ip, [r0, #32]
   12560:	ldr	r2, [r0, #36]	; 0x24
   12564:	ldr	r0, [r0, #44]	; 0x2c
   12568:	ldr	lr, [r0, #16]
   1256c:	ldr	r3, [r0, #20]
   12570:	mov	r0, ip
   12574:	mov	ip, lr
   12578:	pop	{fp, lr}
   1257c:	bx	ip

00012580 <readstat_begin_writing_por>:
   12580:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12584:	add	fp, sp, #24
   12588:	ldr	ip, [pc, #156]	; 1262c <readstat_begin_writing_por+0xac>
   1258c:	add	ip, pc, ip
   12590:	ldr	r3, [pc, #152]	; 12630 <readstat_begin_writing_por+0xb0>
   12594:	add	r3, pc, r3
   12598:	str	r3, [r0, #292]	; 0x124
   1259c:	ldr	r3, [pc, #144]	; 12634 <readstat_begin_writing_por+0xb4>
   125a0:	add	r3, pc, r3
   125a4:	ldr	lr, [pc, #140]	; 12638 <readstat_begin_writing_por+0xb8>
   125a8:	add	lr, pc, lr
   125ac:	ldr	r4, [pc, #136]	; 1263c <readstat_begin_writing_por+0xbc>
   125b0:	add	r4, pc, r4
   125b4:	ldr	r5, [pc, #132]	; 12640 <readstat_begin_writing_por+0xc0>
   125b8:	add	r5, pc, r5
   125bc:	ldr	r6, [pc, #128]	; 12644 <readstat_begin_writing_por+0xc4>
   125c0:	add	r6, pc, r6
   125c4:	ldr	r7, [pc, #124]	; 12648 <readstat_begin_writing_por+0xc8>
   125c8:	add	r7, pc, r7
   125cc:	ldr	r8, [pc, #120]	; 1264c <readstat_begin_writing_por+0xcc>
   125d0:	add	r8, pc, r8
   125d4:	str	ip, [r0, #228]	; 0xe4
   125d8:	str	r3, [r0, #232]	; 0xe8
   125dc:	str	lr, [r0, #236]	; 0xec
   125e0:	add	r3, r0, #240	; 0xf0
   125e4:	stm	r3, {r4, r5, r6, r7, r8}
   125e8:	ldr	r3, [pc, #96]	; 12650 <readstat_begin_writing_por+0xd0>
   125ec:	add	r3, pc, r3
   125f0:	ldr	r7, [pc, #92]	; 12654 <readstat_begin_writing_por+0xd4>
   125f4:	add	r7, pc, r7
   125f8:	str	r3, [r0, #264]	; 0x108
   125fc:	str	r7, [r0, #268]	; 0x10c
   12600:	ldr	r3, [pc, #80]	; 12658 <readstat_begin_writing_por+0xd8>
   12604:	add	r3, pc, r3
   12608:	ldr	r7, [pc, #76]	; 1265c <readstat_begin_writing_por+0xdc>
   1260c:	add	r7, pc, r7
   12610:	ldr	r6, [pc, #72]	; 12660 <readstat_begin_writing_por+0xe0>
   12614:	add	r6, pc, r6
   12618:	str	r3, [r0, #276]	; 0x114
   1261c:	str	r7, [r0, #280]	; 0x118
   12620:	str	r6, [r0, #284]	; 0x11c
   12624:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   12628:	b	49d4 <readstat_begin_writing_file@plt>
   1262c:	.word	0x000000e0
   12630:	.word	0x000000c8
   12634:	.word	0x000000e0
   12638:	.word	0x000000ec
   1263c:	.word	0x000000f0
   12640:	.word	0x000000f4
   12644:	.word	0x000000f8
   12648:	.word	0x000000f8
   1264c:	.word	0x00000114
   12650:	.word	0x00000180
   12654:	.word	0x00000184
   12658:	.word	0x00000184
   1265c:	.word	0x000002a0
   12660:	.word	0x000002e8

00012664 <por_metadata_ok>:
   12664:	ldr	r0, [r0, #16]
   12668:	cmp	r0, #0
   1266c:	movwne	r0, #6
   12670:	bx	lr

00012674 <por_variable_width>:
   12674:	mov	r2, #54	; 0x36
   12678:	cmp	r0, #0
   1267c:	addeq	r2, r1, #54	; 0x36
   12680:	mov	r0, r2
   12684:	bx	lr

00012688 <por_variable_ok>:
   12688:	push	{fp, lr}
   1268c:	mov	fp, sp
   12690:	bl	4e00 <readstat_variable_get_name@plt>
   12694:	pop	{fp, lr}
   12698:	b	12944 <validate_variable_name>

0001269c <por_write_int8_value>:
   1269c:	vmov	s0, r2
   126a0:	vcvt.f64.s32	d0, s0
   126a4:	b	126c8 <por_write_double_value>

000126a8 <por_write_int16_value>:
   126a8:	vmov	s0, r2
   126ac:	vcvt.f64.s32	d0, s0
   126b0:	b	126c8 <por_write_double_value>

000126b4 <por_write_int32_value>:
   126b4:	vmov	s0, r2
   126b8:	vcvt.f64.s32	d0, s0
   126bc:	b	126c8 <por_write_double_value>

000126c0 <por_write_float_value>:
   126c0:	vcvt.f64.f32	d0, s0
   126c4:	b	126c8 <por_write_double_value>

000126c8 <por_write_double_value>:
   126c8:	push	{fp, lr}
   126cc:	mov	fp, sp
   126d0:	mov	r1, #54	; 0x36
   126d4:	bl	129f8 <por_write_double_to_buffer>
   126d8:	mov	r1, #0
   126dc:	cmn	r0, #1
   126e0:	movweq	r1, #13
   126e4:	mov	r0, r1
   126e8:	pop	{fp, pc}

000126ec <por_write_string_value>:
   126ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   126f0:	add	fp, sp, #24
   126f4:	mov	r4, r2
   126f8:	mov	r5, r1
   126fc:	mov	r8, r0
   12700:	mov	r0, r2
   12704:	bl	4c8c <strlen@plt>
   12708:	mov	r7, r0
   1270c:	cmp	r0, #0
   12710:	mov	r6, r0
   12714:	movweq	r6, #1
   12718:	mov	r0, r5
   1271c:	bl	4d58 <readstat_variable_get_storage_width@plt>
   12720:	cmp	r6, r0
   12724:	movhi	r6, r0
   12728:	vmov	s0, r6
   1272c:	vcvt.f64.u32	d0, s0
   12730:	mov	r0, r8
   12734:	mov	r1, #54	; 0x36
   12738:	bl	129f8 <por_write_double_to_buffer>
   1273c:	cmn	r0, #1
   12740:	moveq	r0, #13
   12744:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   12748:	ldr	r1, [pc, #32]	; 12770 <por_write_string_value+0x84>
   1274c:	add	r1, pc, r1
   12750:	cmp	r7, #0
   12754:	moveq	r4, r1
   12758:	add	r0, r8, r0
   1275c:	mov	r1, r4
   12760:	mov	r2, r6
   12764:	bl	4d4c <strncpy@plt>
   12768:	mov	r0, #0
   1276c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12770:	.word	0x000138f2

00012774 <por_write_missing_string>:
   12774:	vmov.i32	d0, #0	; 0x00000000
   12778:	b	126c8 <por_write_double_value>
   1277c:	nop	{0}

00012780 <por_write_missing_number>:
   12780:	vldr	d0, [pc]	; 12788 <por_write_missing_number+0x8>
   12784:	b	126c8 <por_write_double_value>
   12788:	.word	0x00000000
   1278c:	.word	0x7ff80000

00012790 <por_begin_data>:
   12790:	push	{r4, r5, r6, sl, fp, lr}
   12794:	add	fp, sp, #16
   12798:	mov	r4, r0
   1279c:	bl	13498 <por_write_ctx_init>
   127a0:	mov	r5, r0
   127a4:	mov	r0, r4
   127a8:	mov	r1, r5
   127ac:	bl	12d50 <por_emit_header>
   127b0:	mov	r6, r0
   127b4:	cmp	r0, #0
   127b8:	bne	12894 <por_begin_data+0x104>
   127bc:	mov	r0, r4
   127c0:	mov	r1, r5
   127c4:	bl	12e68 <por_emit_version_and_timestamp>
   127c8:	mov	r6, r0
   127cc:	cmp	r0, #0
   127d0:	bne	12894 <por_begin_data+0x104>
   127d4:	mov	r0, r4
   127d8:	mov	r1, r5
   127dc:	bl	12fa8 <por_emit_identification_records>
   127e0:	mov	r6, r0
   127e4:	cmp	r0, #0
   127e8:	bne	12894 <por_begin_data+0x104>
   127ec:	mov	r0, r4
   127f0:	mov	r1, r5
   127f4:	bl	13020 <por_emit_variable_count_record>
   127f8:	mov	r6, r0
   127fc:	cmp	r0, #0
   12800:	bne	12894 <por_begin_data+0x104>
   12804:	mov	r0, r4
   12808:	mov	r1, r5
   1280c:	bl	13058 <por_emit_precision_record>
   12810:	mov	r6, r0
   12814:	cmp	r0, #0
   12818:	bne	12894 <por_begin_data+0x104>
   1281c:	mov	r0, r4
   12820:	mov	r1, r5
   12824:	bl	13098 <por_emit_case_weight_variable_record>
   12828:	mov	r6, r0
   1282c:	cmp	r0, #0
   12830:	bne	12894 <por_begin_data+0x104>
   12834:	mov	r0, r4
   12838:	mov	r1, r5
   1283c:	bl	130ec <por_emit_variable_records>
   12840:	mov	r6, r0
   12844:	cmp	r0, #0
   12848:	bne	12894 <por_begin_data+0x104>
   1284c:	mov	r0, r4
   12850:	mov	r1, r5
   12854:	bl	13220 <por_emit_value_label_records>
   12858:	mov	r6, r0
   1285c:	cmp	r0, #0
   12860:	bne	12894 <por_begin_data+0x104>
   12864:	mov	r0, r4
   12868:	mov	r1, r5
   1286c:	bl	133c8 <por_emit_document_record>
   12870:	mov	r6, r0
   12874:	cmp	r0, #0
   12878:	bne	12894 <por_begin_data+0x104>
   1287c:	mov	r0, r4
   12880:	mov	r1, r5
   12884:	bl	13468 <por_emit_data_tag>
   12888:	mov	r6, r0
   1288c:	cmp	r0, #0
   12890:	beq	128a4 <por_begin_data+0x114>
   12894:	mov	r0, r5
   12898:	bl	13470 <por_write_ctx_free>
   1289c:	mov	r0, r6
   128a0:	pop	{r4, r5, r6, sl, fp, pc}
   128a4:	str	r5, [r4, #300]	; 0x12c
   128a8:	mov	r6, #0
   128ac:	mov	r0, r6
   128b0:	pop	{r4, r5, r6, sl, fp, pc}

000128b4 <por_write_row>:
   128b4:	push	{fp, lr}
   128b8:	mov	fp, sp
   128bc:	mov	ip, r1
   128c0:	mov	r3, #0
   128c4:	cmp	r2, #0
   128c8:	beq	128f4 <por_write_row+0x40>
   128cc:	mov	r1, #0
   128d0:	ldrb	lr, [ip, r1]
   128d4:	cmp	lr, #0
   128d8:	beq	128e8 <por_write_row+0x34>
   128dc:	cmp	r1, r3
   128e0:	strbne	lr, [ip, r3]
   128e4:	add	r3, r3, #1
   128e8:	add	r1, r1, #1
   128ec:	cmp	r2, r1
   128f0:	bne	128d0 <por_write_row+0x1c>
   128f4:	ldr	r1, [r0, #300]	; 0x12c
   128f8:	mov	r2, ip
   128fc:	pop	{fp, lr}
   12900:	b	13570 <por_write_string_n>

00012904 <por_end_data>:
   12904:	push	{r4, r5, fp, lr}
   12908:	add	fp, sp, #8
   1290c:	mov	r4, r0
   12910:	ldr	r1, [r0, #300]	; 0x12c
   12914:	mov	r2, #90	; 0x5a
   12918:	bl	13644 <por_write_tag>
   1291c:	mov	r5, r0
   12920:	cmp	r0, #0
   12924:	bne	12934 <por_end_data+0x30>
   12928:	mov	r0, r4
   1292c:	bl	13cd8 <por_finish>
   12930:	mov	r5, r0
   12934:	ldr	r0, [r4, #300]	; 0x12c
   12938:	bl	13470 <por_write_ctx_free>
   1293c:	mov	r0, r5
   12940:	pop	{r4, r5, fp, pc}

00012944 <validate_variable_name>:
   12944:	push	{r4, sl, fp, lr}
   12948:	add	fp, sp, #8
   1294c:	mov	r4, r0
   12950:	bl	4c8c <strlen@plt>
   12954:	sub	r1, r0, #1
   12958:	mov	r0, #28
   1295c:	cmp	r1, #7
   12960:	pophi	{r4, sl, fp, pc}
   12964:	ldrb	r1, [r4]
   12968:	cmp	r1, #0
   1296c:	beq	129cc <validate_variable_name+0x88>
   12970:	add	r0, r4, #1
   12974:	mvn	r2, #34	; 0x22
   12978:	mov	ip, #1
   1297c:	movw	lr, #2051	; 0x803
   12980:	movt	lr, #8192	; 0x2000
   12984:	sub	r3, r1, #65	; 0x41
   12988:	uxtb	r3, r3
   1298c:	cmp	r3, #26
   12990:	subcs	r3, r1, #48	; 0x30
   12994:	uxtbcs	r3, r3
   12998:	cmpcs	r3, #10
   1299c:	bcc	129c0 <validate_variable_name+0x7c>
   129a0:	uxtab	r3, r2, r1
   129a4:	cmp	r3, #29
   129a8:	bhi	129b4 <validate_variable_name+0x70>
   129ac:	tst	lr, ip, lsl r3
   129b0:	bne	129c0 <validate_variable_name+0x7c>
   129b4:	uxtb	r1, r1
   129b8:	cmp	r1, #95	; 0x5f
   129bc:	bne	129f0 <validate_variable_name+0xac>
   129c0:	ldrb	r1, [r0], #1
   129c4:	cmp	r1, #0
   129c8:	bne	12984 <validate_variable_name+0x40>
   129cc:	ldrb	r0, [r4]
   129d0:	sub	r1, r0, #65	; 0x41
   129d4:	uxtb	r1, r1
   129d8:	mov	r2, #25
   129dc:	cmp	r1, #26
   129e0:	movwcc	r2, #0
   129e4:	subs	r0, r0, #64	; 0x40
   129e8:	movne	r0, r2
   129ec:	pop	{r4, sl, fp, pc}
   129f0:	mov	r0, #26
   129f4:	pop	{r4, sl, fp, pc}

000129f8 <por_write_double_to_buffer>:
   129f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129fc:	add	fp, sp, #28
   12a00:	sub	sp, sp, #4
   12a04:	vpush	{d8-d9}
   12a08:	sub	sp, sp, #16
   12a0c:	vmov.f64	d9, d0
   12a10:	mov	r8, r0
   12a14:	bl	4db8 <__isnan@plt>
   12a18:	cmp	r0, #0
   12a1c:	beq	12a30 <por_write_double_to_buffer+0x38>
   12a20:	movw	r0, #11818	; 0x2e2a
   12a24:	strh	r0, [r8]
   12a28:	mov	r0, #2
   12a2c:	b	12c50 <por_write_double_to_buffer+0x258>
   12a30:	vmov.f64	d0, d9
   12a34:	bl	4a64 <__isinf@plt>
   12a38:	cmp	r0, #0
   12a3c:	beq	12a84 <por_write_double_to_buffer+0x8c>
   12a40:	mov	r0, #0
   12a44:	vcmpe.f64	d9, #0.0
   12a48:	vmrs	APSR_nzcv, fpscr
   12a4c:	movmi	r0, #45	; 0x2d
   12a50:	strbmi	r0, [r8]
   12a54:	movmi	r0, #1
   12a58:	add	r1, r8, r0
   12a5c:	movw	r2, #11057	; 0x2b31
   12a60:	strh	r2, [r1]
   12a64:	orr	r0, r0, #2
   12a68:	movw	r1, #21588	; 0x5454
   12a6c:	mov	r2, r8
   12a70:	strh	r1, [r2, r0]!
   12a74:	mov	r1, #47	; 0x2f
   12a78:	strb	r1, [r2, #2]
   12a7c:	add	r0, r0, #3
   12a80:	b	12c50 <por_write_double_to_buffer+0x258>
   12a84:	add	r0, sp, #8
   12a88:	vabs.f64	d0, d9
   12a8c:	bl	4c08 <modf@plt>
   12a90:	vmov.f64	d8, d0
   12a94:	ldr	r0, [sp, #8]
   12a98:	ldr	r1, [sp, #12]
   12a9c:	bl	24da8 <__aeabi_d2lz>
   12aa0:	mov	r5, r0
   12aa4:	mov	r6, r1
   12aa8:	mov	r4, #0
   12aac:	vcmpe.f64	d9, #0.0
   12ab0:	vmrs	APSR_nzcv, fpscr
   12ab4:	movmi	r0, #45	; 0x2d
   12ab8:	strbmi	r0, [r8]
   12abc:	movmi	r4, #1
   12ac0:	orrs	r0, r5, r6
   12ac4:	beq	12b04 <por_write_double_to_buffer+0x10c>
   12ac8:	mov	r9, #0
   12acc:	mov	r0, r5
   12ad0:	mov	r1, r6
   12ad4:	mov	r2, #30
   12ad8:	mov	r3, #0
   12adc:	bl	24c88 <__aeabi_ldivmod>
   12ae0:	vcmp.f64	d8, #0.0
   12ae4:	vmrs	APSR_nzcv, fpscr
   12ae8:	str	r4, [sp, #4]
   12aec:	orrseq	r0, r2, r3
   12af0:	beq	12b20 <por_write_double_to_buffer+0x128>
   12af4:	mov	r4, r5
   12af8:	mov	r7, r6
   12afc:	mov	sl, #0
   12b00:	b	12b88 <por_write_double_to_buffer+0x190>
   12b04:	mov	r0, #48	; 0x30
   12b08:	strb	r0, [r8, r4]
   12b0c:	add	r5, r4, #1
   12b10:	mov	r7, #0
   12b14:	mov	r9, #0
   12b18:	mov	sl, #0
   12b1c:	b	12ba4 <por_write_double_to_buffer+0x1ac>
   12b20:	mov	r9, #0
   12b24:	mov	sl, #0
   12b28:	mov	r0, r5
   12b2c:	mov	r1, r6
   12b30:	mov	r2, #30
   12b34:	mov	r3, #0
   12b38:	bl	24c88 <__aeabi_ldivmod>
   12b3c:	mov	r4, r0
   12b40:	mov	r7, r1
   12b44:	mov	r2, #30
   12b48:	mov	r3, #0
   12b4c:	bl	24c88 <__aeabi_ldivmod>
   12b50:	adds	r0, r5, #29
   12b54:	adc	r1, r6, #0
   12b58:	adds	r9, r9, #1
   12b5c:	adc	sl, sl, #0
   12b60:	vcmp.f64	d8, #0.0
   12b64:	vmrs	APSR_nzcv, fpscr
   12b68:	bne	12b88 <por_write_double_to_buffer+0x190>
   12b6c:	subs	r0, r0, #59	; 0x3b
   12b70:	sbcs	r0, r1, #0
   12b74:	bcc	12b88 <por_write_double_to_buffer+0x190>
   12b78:	orrs	r0, r2, r3
   12b7c:	mov	r5, r4
   12b80:	mov	r6, r7
   12b84:	beq	12b28 <por_write_double_to_buffer+0x130>
   12b88:	ldr	r5, [sp, #4]
   12b8c:	add	r0, r8, r5
   12b90:	mov	r2, r4
   12b94:	mov	r3, r7
   12b98:	bl	12c70 <por_write_base30_integer>
   12b9c:	mov	r7, r0
   12ba0:	add	r5, r0, r5
   12ba4:	vcmp.f64	d8, #0.0
   12ba8:	vmrs	APSR_nzcv, fpscr
   12bac:	movne	r0, #46	; 0x2e
   12bb0:	strbne	r0, [r8, r5]
   12bb4:	addne	r5, r5, #1
   12bb8:	cmp	r7, #49	; 0x31
   12bbc:	bgt	12c1c <por_write_double_to_buffer+0x224>
   12bc0:	vcmp.f64	d8, #0.0
   12bc4:	vmrs	APSR_nzcv, fpscr
   12bc8:	beq	12c1c <por_write_double_to_buffer+0x224>
   12bcc:	vmov.f64	d9, #62	; 0x41f00000  30.0
   12bd0:	add	r4, sp, #8
   12bd4:	vmul.f64	d0, d8, d9
   12bd8:	mov	r0, r4
   12bdc:	bl	4c08 <modf@plt>
   12be0:	vmov.f64	d8, d0
   12be4:	ldr	r0, [sp, #8]
   12be8:	ldr	r1, [sp, #12]
   12bec:	bl	24da8 <__aeabi_d2lz>
   12bf0:	cmp	r1, #0
   12bf4:	blt	12c68 <por_write_double_to_buffer+0x270>
   12bf8:	bl	12d28 <por_encode_base30_digit>
   12bfc:	strb	r0, [r8, r5]
   12c00:	add	r5, r5, #1
   12c04:	cmp	r7, #48	; 0x30
   12c08:	bgt	12c1c <por_write_double_to_buffer+0x224>
   12c0c:	add	r7, r7, #1
   12c10:	vcmp.f64	d8, #0.0
   12c14:	vmrs	APSR_nzcv, fpscr
   12c18:	bne	12bd4 <por_write_double_to_buffer+0x1dc>
   12c1c:	orrs	r0, r9, sl
   12c20:	beq	12c44 <por_write_double_to_buffer+0x24c>
   12c24:	mov	r0, #43	; 0x2b
   12c28:	strb	r0, [r8, r5]
   12c2c:	add	r4, r5, #1
   12c30:	add	r0, r8, r4
   12c34:	mov	r2, r9
   12c38:	mov	r3, sl
   12c3c:	bl	12c70 <por_write_base30_integer>
   12c40:	add	r5, r0, r4
   12c44:	mov	r0, #47	; 0x2f
   12c48:	strb	r0, [r8, r5]
   12c4c:	add	r0, r5, #1
   12c50:	mov	r1, #0
   12c54:	strb	r1, [r8, r0]
   12c58:	sub	sp, fp, #48	; 0x30
   12c5c:	vpop	{d8-d9}
   12c60:	add	sp, sp, #4
   12c64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c68:	mvn	r0, #0
   12c6c:	b	12c58 <por_write_double_to_buffer+0x260>

00012c70 <por_write_base30_integer>:
   12c70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c74:	add	fp, sp, #28
   12c78:	sub	sp, sp, #4
   12c7c:	mov	r8, r0
   12c80:	orrs	r0, r2, r3
   12c84:	beq	12d18 <por_write_base30_integer+0xa8>
   12c88:	mov	r6, r3
   12c8c:	mov	r7, r2
   12c90:	mov	r4, #0
   12c94:	mov	sl, #30
   12c98:	mov	r0, r7
   12c9c:	mov	r1, r6
   12ca0:	mov	r2, #30
   12ca4:	mov	r3, #0
   12ca8:	bl	24d5c <__aeabi_uldivmod>
   12cac:	mov	r5, r0
   12cb0:	mov	r9, r1
   12cb4:	umull	r0, r1, r0, sl
   12cb8:	rsb	r2, r9, r9, lsl #4
   12cbc:	add	r1, r1, r2, lsl #1
   12cc0:	subs	r0, r7, r0
   12cc4:	sbc	r1, r6, r1
   12cc8:	bl	12d28 <por_encode_base30_digit>
   12ccc:	strb	r0, [r8, r4]
   12cd0:	add	r4, r4, #1
   12cd4:	subs	r0, r7, #30
   12cd8:	sbcs	r0, r6, #0
   12cdc:	mov	r7, r5
   12ce0:	mov	r6, r9
   12ce4:	bcs	12c98 <por_write_base30_integer+0x28>
   12ce8:	subs	r0, r4, #1
   12cec:	beq	12d1c <por_write_base30_integer+0xac>
   12cf0:	mov	r1, #0
   12cf4:	ldrb	r2, [r8, r1]
   12cf8:	ldrb	r3, [r8, r0]
   12cfc:	strb	r3, [r8, r1]
   12d00:	strb	r2, [r8, r0]
   12d04:	sub	r0, r0, #1
   12d08:	add	r1, r1, #1
   12d0c:	cmp	r0, r1
   12d10:	bgt	12cf4 <por_write_base30_integer+0x84>
   12d14:	b	12d1c <por_write_base30_integer+0xac>
   12d18:	mov	r4, #0
   12d1c:	mov	r0, r4
   12d20:	sub	sp, fp, #28
   12d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012d28 <por_encode_base30_digit>:
   12d28:	mov	r2, #0
   12d2c:	subs	r3, r0, #10
   12d30:	sbcs	r1, r1, #0
   12d34:	movwcc	r2, #1
   12d38:	mov	r1, #55	; 0x37
   12d3c:	cmp	r2, #0
   12d40:	movwne	r1, #48	; 0x30
   12d44:	add	r0, r1, r0
   12d48:	uxtb	r0, r0
   12d4c:	bx	lr

00012d50 <por_emit_header>:
   12d50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d54:	add	fp, sp, #24
   12d58:	sub	sp, sp, #456	; 0x1c8
   12d5c:	mov	r8, r1
   12d60:	mov	r5, r0
   12d64:	add	r4, r0, #88	; 0x58
   12d68:	mov	r0, r4
   12d6c:	bl	4c8c <strlen@plt>
   12d70:	mov	r6, r0
   12d74:	sub	r7, fp, #224	; 0xe0
   12d78:	mov	r0, r7
   12d7c:	mov	r1, #48	; 0x30
   12d80:	mov	r2, #200	; 0xc8
   12d84:	bl	4d28 <memset@plt>
   12d88:	ldr	r0, [pc, #204]	; 12e5c <por_emit_header+0x10c>
   12d8c:	add	r0, pc, r0
   12d90:	vld1.64	{d16-d17}, [r0]
   12d94:	add	r0, r7, #40	; 0x28
   12d98:	vst1.64	{d16-d17}, [r0]
   12d9c:	movw	r0, #18758	; 0x4946
   12da0:	movt	r0, #17740	; 0x454c
   12da4:	str	r0, [fp, #-168]	; 0xffffff58
   12da8:	add	r7, r7, #60	; 0x3c
   12dac:	mov	r0, r7
   12db0:	mov	r1, r4
   12db4:	mov	r2, #20
   12db8:	bl	4d4c <strncpy@plt>
   12dbc:	cmp	r6, #19
   12dc0:	bhi	12dd4 <por_emit_header+0x84>
   12dc4:	add	r0, r7, r6
   12dc8:	rsb	r2, r6, #20
   12dcc:	mov	r1, #32
   12dd0:	bl	4d28 <memset@plt>
   12dd4:	sub	r1, fp, #224	; 0xe0
   12dd8:	mov	r0, r5
   12ddc:	mov	r2, #200	; 0xc8
   12de0:	bl	13544 <por_write_bytes>
   12de4:	mov	r6, sp
   12de8:	mov	r0, r6
   12dec:	mov	r1, #48	; 0x30
   12df0:	mov	r2, #256	; 0x100
   12df4:	bl	4d28 <memset@plt>
   12df8:	mov	r0, #0
   12dfc:	ldr	r1, [pc, #92]	; 12e60 <por_emit_header+0x110>
   12e00:	ldr	r1, [pc, r1]
   12e04:	ldrb	r2, [r1, r0]
   12e08:	cmp	r2, #0
   12e0c:	strbne	r2, [r6, r0]
   12e10:	add	r0, r0, #1
   12e14:	cmp	r0, #256	; 0x100
   12e18:	bne	12e04 <por_emit_header+0xb4>
   12e1c:	mov	r1, sp
   12e20:	mov	r0, r5
   12e24:	mov	r2, #256	; 0x100
   12e28:	bl	13544 <por_write_bytes>
   12e2c:	cmp	r0, #0
   12e30:	beq	12e3c <por_emit_header+0xec>
   12e34:	sub	sp, fp, #24
   12e38:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e3c:	ldr	r2, [pc, #32]	; 12e64 <por_emit_header+0x114>
   12e40:	add	r2, pc, r2
   12e44:	mov	r0, r5
   12e48:	mov	r1, r8
   12e4c:	mov	r3, #8
   12e50:	bl	13570 <por_write_string_n>
   12e54:	sub	sp, fp, #24
   12e58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e5c:	.word	0x0001328c
   12e60:	.word	0x00032508
   12e64:	.word	0x000130c0

00012e68 <por_emit_version_and_timestamp>:
   12e68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12e6c:	add	fp, sp, #24
   12e70:	sub	sp, sp, #24
   12e74:	mov	r4, r1
   12e78:	mov	r5, r0
   12e7c:	add	r0, r0, #20
   12e80:	bl	4bf0 <localtime@plt>
   12e84:	cmp	r0, #0
   12e88:	moveq	r0, #39	; 0x27
   12e8c:	subeq	sp, fp, #24
   12e90:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   12e94:	mov	r6, r0
   12e98:	mov	r0, r5
   12e9c:	mov	r1, r4
   12ea0:	mov	r2, #65	; 0x41
   12ea4:	bl	13644 <por_write_tag>
   12ea8:	cmp	r0, #0
   12eac:	bne	12f38 <por_emit_version_and_timestamp+0xd0>
   12eb0:	add	r2, r6, #12
   12eb4:	ldm	r2, {r0, r1, r2}
   12eb8:	movw	r8, #34079	; 0x851f
   12ebc:	movt	r8, #20971	; 0x51eb
   12ec0:	umull	r3, r7, r0, r8
   12ec4:	lsr	r3, r7, #5
   12ec8:	mov	r9, #100	; 0x64
   12ecc:	mls	r0, r3, r9, r0
   12ed0:	add	r1, r1, #1
   12ed4:	umull	r3, r7, r1, r8
   12ed8:	lsr	r3, r7, #5
   12edc:	mls	r1, r3, r9, r1
   12ee0:	str	r1, [sp]
   12ee4:	str	r0, [sp, #4]
   12ee8:	movw	r0, #1900	; 0x76c
   12eec:	add	r0, r2, r0
   12ef0:	movw	r1, #5977	; 0x1759
   12ef4:	movt	r1, #53687	; 0xd1b7
   12ef8:	umull	r1, r2, r0, r1
   12efc:	lsr	r1, r2, #13
   12f00:	movw	r2, #10000	; 0x2710
   12f04:	mls	r3, r1, r2, r0
   12f08:	add	r7, sp, #15
   12f0c:	ldr	r2, [pc, #140]	; 12fa0 <por_emit_version_and_timestamp+0x138>
   12f10:	add	r2, pc, r2
   12f14:	mov	r0, r7
   12f18:	mov	r1, #9
   12f1c:	bl	4d04 <snprintf@plt>
   12f20:	mov	r0, r5
   12f24:	mov	r1, r4
   12f28:	mov	r2, r7
   12f2c:	bl	13670 <por_write_string_field>
   12f30:	cmp	r0, #0
   12f34:	beq	12f40 <por_emit_version_and_timestamp+0xd8>
   12f38:	sub	sp, fp, #24
   12f3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12f40:	ldm	r6, {r0, r1, r2}
   12f44:	umull	r3, r7, r0, r8
   12f48:	lsr	r3, r7, #5
   12f4c:	mls	r0, r3, r9, r0
   12f50:	umull	r3, r7, r1, r8
   12f54:	lsr	r3, r7, #5
   12f58:	mls	r1, r3, r9, r1
   12f5c:	str	r1, [sp]
   12f60:	str	r0, [sp, #4]
   12f64:	umull	r0, r1, r2, r8
   12f68:	lsr	r0, r1, #5
   12f6c:	mls	r3, r0, r9, r2
   12f70:	add	r6, sp, #8
   12f74:	ldr	r2, [pc, #40]	; 12fa4 <por_emit_version_and_timestamp+0x13c>
   12f78:	add	r2, pc, r2
   12f7c:	mov	r0, r6
   12f80:	mov	r1, #7
   12f84:	bl	4d04 <snprintf@plt>
   12f88:	mov	r0, r5
   12f8c:	mov	r1, r4
   12f90:	mov	r2, r6
   12f94:	bl	13670 <por_write_string_field>
   12f98:	sub	sp, fp, #24
   12f9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12fa0:	.word	0x00012fa9
   12fa4:	.word	0x00012f4e

00012fa8 <por_emit_identification_records>:
   12fa8:	push	{r4, r5, fp, lr}
   12fac:	add	fp, sp, #8
   12fb0:	mov	r4, r1
   12fb4:	mov	r5, r0
   12fb8:	mov	r2, #49	; 0x31
   12fbc:	bl	13644 <por_write_tag>
   12fc0:	cmp	r0, #0
   12fc4:	bne	12ffc <por_emit_identification_records+0x54>
   12fc8:	ldr	r2, [pc, #72]	; 13018 <por_emit_identification_records+0x70>
   12fcc:	add	r2, pc, r2
   12fd0:	mov	r0, r5
   12fd4:	mov	r1, r4
   12fd8:	bl	13670 <por_write_string_field>
   12fdc:	cmp	r0, #0
   12fe0:	popne	{r4, r5, fp, pc}
   12fe4:	mov	r0, r5
   12fe8:	mov	r1, r4
   12fec:	mov	r2, #51	; 0x33
   12ff0:	bl	13644 <por_write_tag>
   12ff4:	cmp	r0, #0
   12ff8:	beq	13000 <por_emit_identification_records+0x58>
   12ffc:	pop	{r4, r5, fp, pc}
   13000:	ldr	r2, [pc, #20]	; 1301c <por_emit_identification_records+0x74>
   13004:	add	r2, pc, r2
   13008:	mov	r0, r5
   1300c:	mov	r1, r4
   13010:	pop	{r4, r5, fp, lr}
   13014:	b	13670 <por_write_string_field>
   13018:	.word	0x00013041
   1301c:	.word	0x00012fec

00013020 <por_emit_variable_count_record>:
   13020:	push	{r4, r5, fp, lr}
   13024:	add	fp, sp, #8
   13028:	mov	r4, r1
   1302c:	mov	r5, r0
   13030:	mov	r2, #52	; 0x34
   13034:	bl	13644 <por_write_tag>
   13038:	cmp	r0, #0
   1303c:	popne	{r4, r5, fp, pc}
   13040:	vldr	s0, [r5, #28]
   13044:	vcvt.f64.s32	d0, s0
   13048:	mov	r0, r5
   1304c:	mov	r1, r4
   13050:	pop	{r4, r5, fp, lr}
   13054:	b	136e8 <por_write_double>

00013058 <por_emit_precision_record>:
   13058:	push	{r4, r5, fp, lr}
   1305c:	add	fp, sp, #8
   13060:	mov	r4, r1
   13064:	mov	r5, r0
   13068:	mov	r2, #53	; 0x35
   1306c:	bl	13644 <por_write_tag>
   13070:	cmp	r0, #0
   13074:	popne	{r4, r5, fp, pc}
   13078:	vldr	d0, [pc, #16]	; 13090 <por_emit_precision_record+0x38>
   1307c:	mov	r0, r5
   13080:	mov	r1, r4
   13084:	pop	{r4, r5, fp, lr}
   13088:	b	136e8 <por_write_double>
   1308c:	nop	{0}
   13090:	.word	0x00000000
   13094:	.word	0x40490000

00013098 <por_emit_case_weight_variable_record>:
   13098:	push	{r4, r5, fp, lr}
   1309c:	add	fp, sp, #8
   130a0:	mov	r5, r0
   130a4:	ldr	r0, [r0, #224]	; 0xe0
   130a8:	cmp	r0, #0
   130ac:	beq	130e4 <por_emit_case_weight_variable_record+0x4c>
   130b0:	mov	r4, r1
   130b4:	mov	r0, r5
   130b8:	mov	r2, #54	; 0x36
   130bc:	bl	13644 <por_write_tag>
   130c0:	cmp	r0, #0
   130c4:	popne	{r4, r5, fp, pc}
   130c8:	ldr	r0, [r5, #224]	; 0xe0
   130cc:	bl	4e00 <readstat_variable_get_name@plt>
   130d0:	mov	r2, r0
   130d4:	mov	r0, r5
   130d8:	mov	r1, r4
   130dc:	pop	{r4, r5, fp, lr}
   130e0:	b	13670 <por_write_string_field>
   130e4:	mov	r0, #0
   130e8:	pop	{r4, r5, fp, pc}

000130ec <por_emit_variable_records>:
   130ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   130f0:	add	fp, sp, #24
   130f4:	sub	sp, sp, #16
   130f8:	mov	r5, r0
   130fc:	ldr	r0, [r0, #28]
   13100:	cmp	r0, #1
   13104:	blt	1320c <por_emit_variable_records+0x120>
   13108:	mov	r9, r1
   1310c:	mov	r6, #0
   13110:	add	r8, sp, #4
   13114:	mov	r0, r5
   13118:	mov	r1, r6
   1311c:	bl	4e18 <readstat_get_variable@plt>
   13120:	mov	r7, r0
   13124:	bl	4e00 <readstat_variable_get_name@plt>
   13128:	mov	r4, r0
   1312c:	mov	r0, r5
   13130:	mov	r1, r9
   13134:	mov	r2, #55	; 0x37
   13138:	bl	13644 <por_write_tag>
   1313c:	cmp	r0, #0
   13140:	bne	13218 <por_emit_variable_records+0x12c>
   13144:	ldr	r1, [r7]
   13148:	mov	r0, #0
   1314c:	cmp	r1, #0
   13150:	ldreq	r0, [r7, #1600]	; 0x640
   13154:	vmov	s0, r0
   13158:	vcvt.f64.u32	d0, s0
   1315c:	mov	r0, r5
   13160:	mov	r1, r9
   13164:	bl	136e8 <por_write_double>
   13168:	cmp	r0, #0
   1316c:	bne	13218 <por_emit_variable_records+0x12c>
   13170:	mov	r0, r5
   13174:	mov	r1, r9
   13178:	mov	r2, r4
   1317c:	bl	13670 <por_write_string_field>
   13180:	cmp	r0, #0
   13184:	bne	13218 <por_emit_variable_records+0x12c>
   13188:	mov	r0, r7
   1318c:	mov	r1, r8
   13190:	bl	4b78 <spss_format_for_variable@plt>
   13194:	cmp	r0, #0
   13198:	bne	13218 <por_emit_variable_records+0x12c>
   1319c:	mov	r0, r5
   131a0:	mov	r1, r9
   131a4:	mov	r2, r8
   131a8:	bl	13788 <por_emit_format>
   131ac:	cmp	r0, #0
   131b0:	bne	13218 <por_emit_variable_records+0x12c>
   131b4:	mov	r0, r5
   131b8:	mov	r1, r9
   131bc:	mov	r2, r8
   131c0:	bl	13788 <por_emit_format>
   131c4:	cmp	r0, #0
   131c8:	bne	13218 <por_emit_variable_records+0x12c>
   131cc:	mov	r0, r5
   131d0:	mov	r1, r9
   131d4:	mov	r2, r7
   131d8:	bl	137e8 <por_emit_missing_values_records>
   131dc:	cmp	r0, #0
   131e0:	bne	13218 <por_emit_variable_records+0x12c>
   131e4:	mov	r0, r5
   131e8:	mov	r1, r9
   131ec:	mov	r2, r7
   131f0:	bl	137fc <por_emit_variable_label_record>
   131f4:	cmp	r0, #0
   131f8:	bne	13218 <por_emit_variable_records+0x12c>
   131fc:	add	r6, r6, #1
   13200:	ldr	r0, [r5, #28]
   13204:	cmp	r6, r0
   13208:	blt	13114 <por_emit_variable_records+0x28>
   1320c:	mov	r0, #0
   13210:	sub	sp, fp, #24
   13214:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13218:	sub	sp, fp, #24
   1321c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013220 <por_emit_value_label_records>:
   13220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13224:	add	fp, sp, #28
   13228:	sub	sp, sp, #4
   1322c:	mov	r5, r0
   13230:	ldr	r0, [r0, #40]	; 0x28
   13234:	cmp	r0, #1
   13238:	blt	133bc <por_emit_value_label_records+0x19c>
   1323c:	mov	r9, r1
   13240:	mov	r8, #0
   13244:	b	13388 <por_emit_value_label_records+0x168>
   13248:	ldr	sl, [r7]
   1324c:	mov	r0, r5
   13250:	mov	r1, r9
   13254:	mov	r2, #68	; 0x44
   13258:	bl	13644 <por_write_tag>
   1325c:	cmp	r0, #0
   13260:	bne	133c0 <por_emit_value_label_records+0x1a0>
   13264:	vldr	s0, [r7, #276]	; 0x114
   13268:	vcvt.f64.s32	d0, s0
   1326c:	mov	r0, r5
   13270:	mov	r1, r9
   13274:	bl	136e8 <por_write_double>
   13278:	cmp	r0, #0
   1327c:	bne	133c0 <por_emit_value_label_records+0x1a0>
   13280:	ldr	r0, [r7, #276]	; 0x114
   13284:	cmp	r0, #1
   13288:	blt	132c8 <por_emit_value_label_records+0xa8>
   1328c:	mov	r4, #0
   13290:	mov	r0, r7
   13294:	mov	r1, r4
   13298:	bl	4ee4 <readstat_get_label_set_variable@plt>
   1329c:	bl	4e00 <readstat_variable_get_name@plt>
   132a0:	mov	r2, r0
   132a4:	mov	r0, r5
   132a8:	mov	r1, r9
   132ac:	bl	13670 <por_write_string_field>
   132b0:	cmp	r0, #0
   132b4:	bne	133c0 <por_emit_value_label_records+0x1a0>
   132b8:	add	r4, r4, #1
   132bc:	ldr	r0, [r7, #276]	; 0x114
   132c0:	cmp	r4, r0
   132c4:	blt	13290 <por_emit_value_label_records+0x70>
   132c8:	vldr	s0, [r7, #264]	; 0x108
   132cc:	vcvt.f64.s32	d0, s0
   132d0:	mov	r0, r5
   132d4:	mov	r1, r9
   132d8:	bl	136e8 <por_write_double>
   132dc:	cmp	r0, #0
   132e0:	bne	133c0 <por_emit_value_label_records+0x1a0>
   132e4:	ldr	r0, [r7, #264]	; 0x108
   132e8:	cmp	r0, #1
   132ec:	blt	133ac <por_emit_value_label_records+0x18c>
   132f0:	mov	r6, #0
   132f4:	mov	r0, r7
   132f8:	mov	r1, r6
   132fc:	bl	4f68 <readstat_get_value_label@plt>
   13300:	mov	r4, r0
   13304:	cmp	sl, #5
   13308:	beq	13338 <por_emit_value_label_records+0x118>
   1330c:	cmp	sl, #3
   13310:	beq	13340 <por_emit_value_label_records+0x120>
   13314:	cmp	sl, #0
   13318:	bne	1335c <por_emit_value_label_records+0x13c>
   1331c:	ldrd	r2, [r4, #16]
   13320:	mov	r0, r5
   13324:	mov	r1, r9
   13328:	bl	136a4 <por_write_string_field_n>
   1332c:	cmp	r0, #0
   13330:	beq	1335c <por_emit_value_label_records+0x13c>
   13334:	b	133c0 <por_emit_value_label_records+0x1a0>
   13338:	vldr	d0, [r4]
   1333c:	b	13348 <por_emit_value_label_records+0x128>
   13340:	vldr	s0, [r4, #8]
   13344:	vcvt.f64.s32	d0, s0
   13348:	mov	r0, r5
   1334c:	mov	r1, r9
   13350:	bl	136e8 <por_write_double>
   13354:	cmp	r0, #0
   13358:	bne	133c0 <por_emit_value_label_records+0x1a0>
   1335c:	ldrd	r2, [r4, #24]
   13360:	mov	r0, r5
   13364:	mov	r1, r9
   13368:	bl	136a4 <por_write_string_field_n>
   1336c:	cmp	r0, #0
   13370:	bne	133c0 <por_emit_value_label_records+0x1a0>
   13374:	add	r6, r6, #1
   13378:	ldr	r0, [r7, #264]	; 0x108
   1337c:	cmp	r6, r0
   13380:	blt	132f4 <por_emit_value_label_records+0xd4>
   13384:	b	133ac <por_emit_value_label_records+0x18c>
   13388:	mov	r0, r5
   1338c:	mov	r1, r8
   13390:	bl	4ec0 <readstat_get_label_set@plt>
   13394:	mov	r7, r0
   13398:	ldr	r0, [r0, #264]	; 0x108
   1339c:	cmp	r0, #0
   133a0:	ldrne	r0, [r7, #276]	; 0x114
   133a4:	cmpne	r0, #0
   133a8:	bne	13248 <por_emit_value_label_records+0x28>
   133ac:	add	r8, r8, #1
   133b0:	ldr	r0, [r5, #40]	; 0x28
   133b4:	cmp	r8, r0
   133b8:	blt	13388 <por_emit_value_label_records+0x168>
   133bc:	mov	r0, #0
   133c0:	sub	sp, fp, #28
   133c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000133c8 <por_emit_document_record>:
   133c8:	push	{r4, r5, r6, r7, fp, lr}
   133cc:	add	fp, sp, #16
   133d0:	mov	r4, r1
   133d4:	mov	r5, r0
   133d8:	mov	r2, #69	; 0x45
   133dc:	bl	13644 <por_write_tag>
   133e0:	cmp	r0, #0
   133e4:	popne	{r4, r5, r6, r7, fp, pc}
   133e8:	vldr	s0, [r5, #52]	; 0x34
   133ec:	vcvt.f64.s32	d0, s0
   133f0:	mov	r0, r5
   133f4:	mov	r1, r4
   133f8:	bl	136e8 <por_write_double>
   133fc:	cmp	r0, #0
   13400:	bne	13464 <por_emit_document_record+0x9c>
   13404:	ldr	r0, [r5, #52]	; 0x34
   13408:	cmp	r0, #1
   1340c:	movlt	r0, #0
   13410:	poplt	{r4, r5, r6, r7, fp, pc}
   13414:	mov	r7, #0
   13418:	ldr	r0, [r5, #48]	; 0x30
   1341c:	ldr	r6, [r0, r7, lsl #2]
   13420:	mov	r0, r6
   13424:	bl	4c8c <strlen@plt>
   13428:	cmp	r0, #80	; 0x50
   1342c:	movhi	r0, #32
   13430:	pophi	{r4, r5, r6, r7, fp, pc}
   13434:	mov	r3, r0
   13438:	mov	r0, r5
   1343c:	mov	r1, r4
   13440:	mov	r2, r6
   13444:	bl	136a4 <por_write_string_field_n>
   13448:	cmp	r0, #0
   1344c:	bne	13464 <por_emit_document_record+0x9c>
   13450:	add	r7, r7, #1
   13454:	ldr	r1, [r5, #52]	; 0x34
   13458:	mov	r0, #0
   1345c:	cmp	r7, r1
   13460:	blt	13418 <por_emit_document_record+0x50>
   13464:	pop	{r4, r5, r6, r7, fp, pc}

00013468 <por_emit_data_tag>:
   13468:	mov	r2, #70	; 0x46
   1346c:	b	13644 <por_write_tag>

00013470 <por_write_ctx_free>:
   13470:	push	{r4, sl, fp, lr}
   13474:	add	fp, sp, #8
   13478:	mov	r4, r0
   1347c:	ldr	r0, [r0]
   13480:	cmp	r0, #0
   13484:	beq	1348c <por_write_ctx_free+0x1c>
   13488:	bl	4938 <free@plt>
   1348c:	mov	r0, r4
   13490:	pop	{r4, sl, fp, lr}
   13494:	b	4938 <free@plt>

00013498 <por_write_ctx_init>:
   13498:	push	{r4, r5, r6, sl, fp, lr}
   1349c:	add	fp, sp, #16
   134a0:	mov	r0, #1
   134a4:	mov	r1, #8
   134a8:	bl	47d0 <calloc@plt>
   134ac:	mov	r4, r0
   134b0:	mov	r0, #0
   134b4:	ldr	r6, [pc, #128]	; 1353c <por_write_ctx_init+0xa4>
   134b8:	ldr	r6, [pc, r6]
   134bc:	mov	r1, #0
   134c0:	add	r2, r6, r0
   134c4:	ldrh	r2, [r2]
   134c8:	uxth	r3, r1
   134cc:	cmp	r2, r3
   134d0:	movhi	r1, r2
   134d4:	add	r0, r0, #2
   134d8:	cmp	r0, #512	; 0x200
   134dc:	bne	134c0 <por_write_ctx_init+0x28>
   134e0:	mov	r0, #1
   134e4:	uxtah	r5, r0, r1
   134e8:	mov	r0, r5
   134ec:	bl	4b9c <malloc@plt>
   134f0:	stm	r4, {r0, r5}
   134f4:	mov	r1, #0
   134f8:	ldr	r2, [pc, #64]	; 13540 <por_write_ctx_init+0xa8>
   134fc:	ldr	r2, [pc, r2]
   13500:	ldrh	r3, [r6]
   13504:	cmp	r3, #0
   13508:	ldrbne	r5, [r2, r1]
   1350c:	strbne	r5, [r0, r3]
   13510:	add	r3, r2, r1
   13514:	ldrsb	r3, [r3]
   13518:	uxtb	r5, r3
   1351c:	cmp	r5, #0
   13520:	strbne	r5, [r0, r3]
   13524:	add	r6, r6, #2
   13528:	add	r1, r1, #1
   1352c:	cmp	r1, #256	; 0x100
   13530:	moveq	r0, r4
   13534:	popeq	{r4, r5, r6, sl, fp, pc}
   13538:	b	13500 <por_write_ctx_init+0x68>
   1353c:	.word	0x00031e44
   13540:	.word	0x00031e0c

00013544 <por_write_bytes>:
   13544:	push	{fp, lr}
   13548:	mov	fp, sp
   1354c:	sub	sp, sp, #8
   13550:	ldr	r3, [pc, #20]	; 1356c <por_write_bytes+0x28>
   13554:	add	r3, pc, r3
   13558:	str	r3, [sp]
   1355c:	mov	r3, #80	; 0x50
   13560:	bl	4fbc <readstat_write_bytes_as_lines@plt>
   13564:	mov	sp, fp
   13568:	pop	{fp, pc}
   1356c:	.word	0x00012a50

00013570 <por_write_string_n>:
   13570:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13574:	add	fp, sp, #24
   13578:	sub	sp, sp, #24
   1357c:	sub	sp, sp, #1024	; 0x400
   13580:	mov	r6, r3
   13584:	mov	r7, r2
   13588:	mov	r5, r1
   1358c:	mov	r9, r0
   13590:	mov	r0, r3
   13594:	bl	4b9c <malloc@plt>
   13598:	mov	r4, r0
   1359c:	ldm	r5, {r0, r1}
   135a0:	stm	sp, {r0, r1}
   135a4:	mov	r0, r7
   135a8:	mov	r1, r6
   135ac:	mov	r2, r4
   135b0:	mov	r3, r6
   135b4:	bl	4e30 <por_utf8_decode@plt>
   135b8:	cmn	r0, #1
   135bc:	beq	135e0 <por_write_string_n+0x70>
   135c0:	mov	r2, r0
   135c4:	mov	r0, r9
   135c8:	mov	r1, r4
   135cc:	bl	13544 <por_write_bytes>
   135d0:	mov	r8, r0
   135d4:	cmp	r4, #0
   135d8:	bne	1362c <por_write_string_n+0xbc>
   135dc:	b	13634 <por_write_string_n+0xc4>
   135e0:	ldr	r0, [r9, #296]	; 0x128
   135e4:	mov	r8, #16
   135e8:	cmp	r0, #0
   135ec:	beq	13624 <por_write_string_n+0xb4>
   135f0:	mov	r0, #0
   135f4:	str	r6, [sp]
   135f8:	stmib	sp, {r0, r6, r7}
   135fc:	add	r5, sp, #20
   13600:	ldr	r2, [pc, #56]	; 13640 <por_write_string_n+0xd0>
   13604:	add	r2, pc, r2
   13608:	mov	r0, r5
   1360c:	mov	r1, #1024	; 0x400
   13610:	bl	4d04 <snprintf@plt>
   13614:	ldr	r2, [r9, #296]	; 0x128
   13618:	ldr	r1, [r9, #304]	; 0x130
   1361c:	mov	r0, r5
   13620:	blx	r2
   13624:	cmp	r4, #0
   13628:	beq	13634 <por_write_string_n+0xc4>
   1362c:	mov	r0, r4
   13630:	bl	4938 <free@plt>
   13634:	mov	r0, r8
   13638:	sub	sp, fp, #24
   1363c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13640:	.word	0x000129a3

00013644 <por_write_tag>:
   13644:	push	{fp, lr}
   13648:	mov	fp, sp
   1364c:	sub	sp, sp, #8
   13650:	mov	r3, #0
   13654:	strb	r3, [fp, #-1]
   13658:	strb	r2, [fp, #-2]
   1365c:	sub	r2, fp, #2
   13660:	mov	r3, #1
   13664:	bl	13570 <por_write_string_n>
   13668:	mov	sp, fp
   1366c:	pop	{fp, pc}

00013670 <por_write_string_field>:
   13670:	push	{r4, r5, r6, sl, fp, lr}
   13674:	add	fp, sp, #16
   13678:	mov	r4, r2
   1367c:	mov	r5, r1
   13680:	mov	r6, r0
   13684:	mov	r0, r2
   13688:	bl	4c8c <strlen@plt>
   1368c:	mov	r3, r0
   13690:	mov	r0, r6
   13694:	mov	r1, r5
   13698:	mov	r2, r4
   1369c:	pop	{r4, r5, r6, sl, fp, lr}
   136a0:	b	136a4 <por_write_string_field_n>

000136a4 <por_write_string_field_n>:
   136a4:	push	{r4, r5, r6, r7, fp, lr}
   136a8:	add	fp, sp, #16
   136ac:	mov	r4, r3
   136b0:	mov	r5, r2
   136b4:	mov	r6, r1
   136b8:	mov	r7, r0
   136bc:	vmov	s0, r4
   136c0:	vcvt.f64.u32	d0, s0
   136c4:	bl	136e8 <por_write_double>
   136c8:	cmp	r0, #0
   136cc:	popne	{r4, r5, r6, r7, fp, pc}
   136d0:	mov	r0, r7
   136d4:	mov	r1, r6
   136d8:	mov	r2, r5
   136dc:	mov	r3, r4
   136e0:	pop	{r4, r5, r6, r7, fp, lr}
   136e4:	b	13570 <por_write_string_n>

000136e8 <por_write_double>:
   136e8:	push	{r4, r5, r6, sl, fp, lr}
   136ec:	add	fp, sp, #16
   136f0:	vpush	{d8}
   136f4:	sub	sp, sp, #264	; 0x108
   136f8:	sub	sp, sp, #1024	; 0x400
   136fc:	vorr	d8, d0, d0
   13700:	mov	r5, r1
   13704:	mov	r4, r0
   13708:	add	r0, sp, #8
   1370c:	mov	r1, #256	; 0x100
   13710:	bl	129f8 <por_write_double_to_buffer>
   13714:	cmn	r0, #1
   13718:	beq	13738 <por_write_double+0x50>
   1371c:	mov	r3, r0
   13720:	add	r2, sp, #8
   13724:	mov	r0, r4
   13728:	mov	r1, r5
   1372c:	bl	13570 <por_write_string_n>
   13730:	mov	r5, r0
   13734:	b	13774 <por_write_double+0x8c>
   13738:	ldr	r0, [r4, #296]	; 0x128
   1373c:	mov	r5, #13
   13740:	cmp	r0, #0
   13744:	beq	13774 <por_write_double+0x8c>
   13748:	vstr	d8, [sp]
   1374c:	add	r6, sp, #264	; 0x108
   13750:	ldr	r2, [pc, #44]	; 13784 <por_write_double+0x9c>
   13754:	add	r2, pc, r2
   13758:	mov	r0, r6
   1375c:	mov	r1, #1024	; 0x400
   13760:	bl	4d04 <snprintf@plt>
   13764:	ldr	r2, [r4, #296]	; 0x128
   13768:	ldr	r1, [r4, #304]	; 0x130
   1376c:	mov	r0, r6
   13770:	blx	r2
   13774:	mov	r0, r5
   13778:	sub	sp, fp, #24
   1377c:	vpop	{d8}
   13780:	pop	{r4, r5, r6, sl, fp, pc}
   13784:	.word	0x0001287f

00013788 <por_emit_format>:
   13788:	push	{r4, r5, r6, sl, fp, lr}
   1378c:	add	fp, sp, #16
   13790:	mov	r6, r2
   13794:	mov	r4, r1
   13798:	mov	r5, r0
   1379c:	vldr	s0, [r2]
   137a0:	vcvt.f64.s32	d0, s0
   137a4:	bl	136e8 <por_write_double>
   137a8:	cmp	r0, #0
   137ac:	popne	{r4, r5, r6, sl, fp, pc}
   137b0:	vldr	s0, [r6, #4]
   137b4:	vcvt.f64.s32	d0, s0
   137b8:	mov	r0, r5
   137bc:	mov	r1, r4
   137c0:	bl	136e8 <por_write_double>
   137c4:	cmp	r0, #0
   137c8:	beq	137d0 <por_emit_format+0x48>
   137cc:	pop	{r4, r5, r6, sl, fp, pc}
   137d0:	vldr	s0, [r6, #8]
   137d4:	vcvt.f64.s32	d0, s0
   137d8:	mov	r0, r5
   137dc:	mov	r1, r4
   137e0:	pop	{r4, r5, r6, sl, fp, lr}
   137e4:	b	136e8 <por_write_double>

000137e8 <por_emit_missing_values_records>:
   137e8:	ldr	r3, [r2]
   137ec:	cmp	r3, #5
   137f0:	bne	137f8 <por_emit_missing_values_records+0x10>
   137f4:	b	13854 <por_emit_missing_double_values_records>
   137f8:	b	13aa4 <por_emit_missing_string_values_records>

000137fc <por_emit_variable_label_record>:
   137fc:	push	{r4, r5, r6, sl, fp, lr}
   13800:	add	fp, sp, #16
   13804:	mov	r4, r1
   13808:	mov	r5, r0
   1380c:	mov	r0, r2
   13810:	bl	4e9c <readstat_variable_get_label@plt>
   13814:	cmp	r0, #0
   13818:	beq	1384c <por_emit_variable_label_record+0x50>
   1381c:	mov	r6, r0
   13820:	mov	r0, r5
   13824:	mov	r1, r4
   13828:	mov	r2, #67	; 0x43
   1382c:	bl	13644 <por_write_tag>
   13830:	cmp	r0, #0
   13834:	popne	{r4, r5, r6, sl, fp, pc}
   13838:	mov	r0, r5
   1383c:	mov	r1, r4
   13840:	mov	r2, r6
   13844:	pop	{r4, r5, r6, sl, fp, lr}
   13848:	b	13670 <por_write_string_field>
   1384c:	mov	r0, #0
   13850:	pop	{r4, r5, r6, sl, fp, pc}

00013854 <por_emit_missing_double_values_records>:
   13854:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13858:	add	fp, sp, #28
   1385c:	sub	sp, sp, #4
   13860:	vpush	{d8-d9}
   13864:	sub	sp, sp, #40	; 0x28
   13868:	mov	r4, r2
   1386c:	mov	r5, r1
   13870:	mov	r6, r0
   13874:	mov	r0, r2
   13878:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   1387c:	cmp	r0, #1
   13880:	blt	139bc <por_emit_missing_double_values_records+0x168>
   13884:	mov	sl, r0
   13888:	add	r0, sp, #8
   1388c:	add	r0, r0, #8
   13890:	str	r0, [sp, #4]
   13894:	add	r0, sp, #24
   13898:	add	r9, r0, #8
   1389c:	mov	r8, #0
   138a0:	mov	r7, #0
   138a4:	add	r0, sp, #24
   138a8:	mov	r1, r4
   138ac:	mov	r2, r7
   138b0:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   138b4:	add	r0, sp, #8
   138b8:	mov	r1, r4
   138bc:	mov	r2, r7
   138c0:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   138c4:	ldrd	r2, [r9]
   138c8:	ldr	r0, [sp, #24]
   138cc:	ldr	r1, [sp, #28]
   138d0:	bl	4c44 <readstat_double_value@plt>
   138d4:	vmov.f64	d8, d0
   138d8:	ldr	r0, [sp, #4]
   138dc:	ldrd	r2, [r0]
   138e0:	ldr	r0, [sp, #8]
   138e4:	ldr	r1, [sp, #12]
   138e8:	bl	4c44 <readstat_double_value@plt>
   138ec:	vmov.f64	d9, d0
   138f0:	vmov.f64	d0, d8
   138f4:	bl	4a64 <__isinf@plt>
   138f8:	cmp	r0, #0
   138fc:	beq	13928 <por_emit_missing_double_values_records+0xd4>
   13900:	mov	r0, r6
   13904:	mov	r1, r5
   13908:	mov	r2, #57	; 0x39
   1390c:	bl	13644 <por_write_tag>
   13910:	cmp	r0, #0
   13914:	bne	13a94 <por_emit_missing_double_values_records+0x240>
   13918:	mov	r0, r6
   1391c:	mov	r1, r5
   13920:	vmov.f64	d0, d9
   13924:	b	1395c <por_emit_missing_double_values_records+0x108>
   13928:	vmov.f64	d0, d9
   1392c:	bl	4a64 <__isinf@plt>
   13930:	cmp	r0, #0
   13934:	beq	1397c <por_emit_missing_double_values_records+0x128>
   13938:	mov	r0, r6
   1393c:	mov	r1, r5
   13940:	mov	r2, #65	; 0x41
   13944:	bl	13644 <por_write_tag>
   13948:	cmp	r0, #0
   1394c:	bne	13a94 <por_emit_missing_double_values_records+0x240>
   13950:	mov	r0, r6
   13954:	mov	r1, r5
   13958:	vmov.f64	d0, d8
   1395c:	bl	136e8 <por_write_double>
   13960:	cmp	r0, #0
   13964:	bne	13a94 <por_emit_missing_double_values_records+0x240>
   13968:	add	r8, r8, #2
   1396c:	add	r7, r7, #1
   13970:	cmp	r7, sl
   13974:	blt	138a4 <por_emit_missing_double_values_records+0x50>
   13978:	b	139c4 <por_emit_missing_double_values_records+0x170>
   1397c:	vcmp.f64	d8, d9
   13980:	vmrs	APSR_nzcv, fpscr
   13984:	beq	1396c <por_emit_missing_double_values_records+0x118>
   13988:	mov	r0, r6
   1398c:	mov	r1, r5
   13990:	mov	r2, #66	; 0x42
   13994:	bl	13644 <por_write_tag>
   13998:	cmp	r0, #0
   1399c:	bne	13a94 <por_emit_missing_double_values_records+0x240>
   139a0:	mov	r0, r6
   139a4:	mov	r1, r5
   139a8:	vmov.f64	d0, d8
   139ac:	bl	136e8 <por_write_double>
   139b0:	cmp	r0, #0
   139b4:	beq	13918 <por_emit_missing_double_values_records+0xc4>
   139b8:	b	13a94 <por_emit_missing_double_values_records+0x240>
   139bc:	mov	r0, #0
   139c0:	b	13a94 <por_emit_missing_double_values_records+0x240>
   139c4:	cmp	sl, #1
   139c8:	blt	13a88 <por_emit_missing_double_values_records+0x234>
   139cc:	mov	r7, #0
   139d0:	add	r0, sp, #24
   139d4:	mov	r1, r4
   139d8:	mov	r2, r7
   139dc:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   139e0:	add	r0, sp, #8
   139e4:	mov	r1, r4
   139e8:	mov	r2, r7
   139ec:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   139f0:	ldrd	r2, [r9]
   139f4:	ldr	r0, [sp, #24]
   139f8:	ldr	r1, [sp, #28]
   139fc:	bl	4c44 <readstat_double_value@plt>
   13a00:	vmov.f64	d8, d0
   13a04:	ldr	r0, [sp, #4]
   13a08:	ldrd	r2, [r0]
   13a0c:	ldr	r0, [sp, #8]
   13a10:	ldr	r1, [sp, #12]
   13a14:	bl	4c44 <readstat_double_value@plt>
   13a18:	vcmp.f64	d8, d0
   13a1c:	vmrs	APSR_nzcv, fpscr
   13a20:	bne	13a7c <por_emit_missing_double_values_records+0x228>
   13a24:	vmov.f64	d9, d0
   13a28:	vmov.f64	d0, d8
   13a2c:	bl	4a64 <__isinf@plt>
   13a30:	cmp	r0, #0
   13a34:	bne	13a7c <por_emit_missing_double_values_records+0x228>
   13a38:	vmov.f64	d0, d9
   13a3c:	bl	4a64 <__isinf@plt>
   13a40:	cmp	r0, #0
   13a44:	bne	13a7c <por_emit_missing_double_values_records+0x228>
   13a48:	mov	r0, r6
   13a4c:	mov	r1, r5
   13a50:	mov	r2, #56	; 0x38
   13a54:	bl	13644 <por_write_tag>
   13a58:	cmp	r0, #0
   13a5c:	bne	13a94 <por_emit_missing_double_values_records+0x240>
   13a60:	mov	r0, r6
   13a64:	mov	r1, r5
   13a68:	vmov.f64	d0, d8
   13a6c:	bl	136e8 <por_write_double>
   13a70:	cmp	r0, #0
   13a74:	bne	13a94 <por_emit_missing_double_values_records+0x240>
   13a78:	add	r8, r8, #1
   13a7c:	add	r7, r7, #1
   13a80:	cmp	r7, sl
   13a84:	blt	139d0 <por_emit_missing_double_values_records+0x17c>
   13a88:	mov	r0, #0
   13a8c:	cmp	r8, #3
   13a90:	movwgt	r0, #31
   13a94:	sub	sp, fp, #48	; 0x30
   13a98:	vpop	{d8-d9}
   13a9c:	add	sp, sp, #4
   13aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013aa4 <por_emit_missing_string_values_records>:
   13aa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13aa8:	add	fp, sp, #28
   13aac:	sub	sp, sp, #60	; 0x3c
   13ab0:	mov	r4, r2
   13ab4:	mov	r5, r1
   13ab8:	mov	r6, r0
   13abc:	mov	r0, r2
   13ac0:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   13ac4:	cmp	r0, #1
   13ac8:	blt	13ccc <por_emit_missing_string_values_records+0x228>
   13acc:	mov	r9, r0
   13ad0:	str	r6, [sp, #8]
   13ad4:	str	r5, [sp, #12]
   13ad8:	add	r7, sp, #24
   13adc:	add	sl, r7, #8
   13ae0:	add	r0, sp, #40	; 0x28
   13ae4:	add	r0, r0, #8
   13ae8:	str	r0, [sp, #20]
   13aec:	mov	r0, #0
   13af0:	str	r0, [sp, #16]
   13af4:	mov	r5, #0
   13af8:	str	sl, [sp, #4]
   13afc:	b	13b7c <por_emit_missing_string_values_records+0xd8>
   13b00:	mov	r0, r8
   13b04:	mov	r1, r6
   13b08:	bl	4878 <strcmp@plt>
   13b0c:	cmp	r0, #0
   13b10:	beq	13bd4 <por_emit_missing_string_values_records+0x130>
   13b14:	ldr	r7, [sp, #8]
   13b18:	mov	r0, r7
   13b1c:	ldr	sl, [sp, #12]
   13b20:	mov	r1, sl
   13b24:	mov	r2, #66	; 0x42
   13b28:	bl	13644 <por_write_tag>
   13b2c:	cmp	r0, #0
   13b30:	bne	13cd0 <por_emit_missing_string_values_records+0x22c>
   13b34:	mov	r0, r7
   13b38:	mov	r1, sl
   13b3c:	mov	r2, r8
   13b40:	bl	13670 <por_write_string_field>
   13b44:	cmp	r0, #0
   13b48:	bne	13cd0 <por_emit_missing_string_values_records+0x22c>
   13b4c:	mov	r0, r7
   13b50:	mov	r1, sl
   13b54:	mov	r2, r6
   13b58:	bl	13670 <por_write_string_field>
   13b5c:	cmp	r0, #0
   13b60:	bne	13cd0 <por_emit_missing_string_values_records+0x22c>
   13b64:	ldr	r0, [sp, #16]
   13b68:	add	r0, r0, #2
   13b6c:	str	r0, [sp, #16]
   13b70:	add	r7, sp, #24
   13b74:	ldr	sl, [sp, #4]
   13b78:	b	13bd4 <por_emit_missing_string_values_records+0x130>
   13b7c:	add	r0, sp, #40	; 0x28
   13b80:	mov	r1, r4
   13b84:	mov	r2, r5
   13b88:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   13b8c:	mov	r0, r7
   13b90:	mov	r1, r4
   13b94:	mov	r2, r5
   13b98:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   13b9c:	ldr	r0, [sp, #20]
   13ba0:	ldrd	r2, [r0]
   13ba4:	ldr	r0, [sp, #40]	; 0x28
   13ba8:	ldr	r1, [sp, #44]	; 0x2c
   13bac:	bl	4a1c <readstat_string_value@plt>
   13bb0:	mov	r8, r0
   13bb4:	ldrd	r2, [sl]
   13bb8:	ldr	r0, [sp, #24]
   13bbc:	ldr	r1, [sp, #28]
   13bc0:	bl	4a1c <readstat_string_value@plt>
   13bc4:	cmp	r8, #0
   13bc8:	movne	r6, r0
   13bcc:	cmpne	r0, #0
   13bd0:	bne	13b00 <por_emit_missing_string_values_records+0x5c>
   13bd4:	add	r5, r5, #1
   13bd8:	cmp	r5, r9
   13bdc:	blt	13b7c <por_emit_missing_string_values_records+0xd8>
   13be0:	cmp	r9, #1
   13be4:	blt	13cb4 <por_emit_missing_string_values_records+0x210>
   13be8:	mov	r5, #0
   13bec:	ldr	r8, [sp, #12]
   13bf0:	b	13c50 <por_emit_missing_string_values_records+0x1ac>
   13bf4:	mov	r0, r6
   13bf8:	bl	4878 <strcmp@plt>
   13bfc:	cmp	r0, #0
   13c00:	bne	13ca8 <por_emit_missing_string_values_records+0x204>
   13c04:	ldr	r7, [sp, #8]
   13c08:	mov	r0, r7
   13c0c:	mov	r1, r8
   13c10:	mov	r2, #56	; 0x38
   13c14:	bl	13644 <por_write_tag>
   13c18:	cmp	r0, #0
   13c1c:	bne	13cd0 <por_emit_missing_string_values_records+0x22c>
   13c20:	mov	r0, r7
   13c24:	mov	r1, r8
   13c28:	mov	r2, r6
   13c2c:	bl	13670 <por_write_string_field>
   13c30:	cmp	r0, #0
   13c34:	bne	13cd0 <por_emit_missing_string_values_records+0x22c>
   13c38:	ldr	r0, [sp, #16]
   13c3c:	add	r0, r0, #1
   13c40:	str	r0, [sp, #16]
   13c44:	add	r7, sp, #24
   13c48:	ldr	sl, [sp, #4]
   13c4c:	b	13ca8 <por_emit_missing_string_values_records+0x204>
   13c50:	add	r0, sp, #40	; 0x28
   13c54:	mov	r1, r4
   13c58:	mov	r2, r5
   13c5c:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   13c60:	mov	r0, r7
   13c64:	mov	r1, r4
   13c68:	mov	r2, r5
   13c6c:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   13c70:	ldr	r0, [sp, #20]
   13c74:	ldrd	r2, [r0]
   13c78:	ldr	r0, [sp, #40]	; 0x28
   13c7c:	ldr	r1, [sp, #44]	; 0x2c
   13c80:	bl	4a1c <readstat_string_value@plt>
   13c84:	mov	r6, r0
   13c88:	ldrd	r2, [sl]
   13c8c:	ldr	r0, [sp, #24]
   13c90:	ldr	r1, [sp, #28]
   13c94:	bl	4a1c <readstat_string_value@plt>
   13c98:	cmp	r6, #0
   13c9c:	movne	r1, r0
   13ca0:	cmpne	r0, #0
   13ca4:	bne	13bf4 <por_emit_missing_string_values_records+0x150>
   13ca8:	add	r5, r5, #1
   13cac:	cmp	r5, r9
   13cb0:	blt	13c50 <por_emit_missing_string_values_records+0x1ac>
   13cb4:	mov	r0, #0
   13cb8:	ldr	r1, [sp, #16]
   13cbc:	cmp	r1, #3
   13cc0:	movwgt	r0, #31
   13cc4:	sub	sp, fp, #28
   13cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ccc:	mov	r0, #0
   13cd0:	sub	sp, fp, #28
   13cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013cd8 <por_finish>:
   13cd8:	ldr	r3, [pc, #12]	; 13cec <por_finish+0x14>
   13cdc:	add	r3, pc, r3
   13ce0:	mov	r1, #90	; 0x5a
   13ce4:	mov	r2, #80	; 0x50
   13ce8:	b	4f80 <readstat_write_line_padding@plt>
   13cec:	.word	0x000122c8

00013cf0 <sav_ctx_init>:
   13cf0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13cf4:	add	fp, sp, #24
   13cf8:	mov	r8, r1
   13cfc:	mov	r7, r0
   13d00:	mov	r0, #1
   13d04:	mov	r1, #440	; 0x1b8
   13d08:	bl	4a34 <readstat_calloc@plt>
   13d0c:	mov	r4, #0
   13d10:	cmp	r0, #0
   13d14:	beq	13e60 <sav_ctx_init+0x170>
   13d18:	mov	r6, r0
   13d1c:	ldr	r0, [r7]
   13d20:	movw	r1, #17956	; 0x4624
   13d24:	movt	r1, #12876	; 0x324c
   13d28:	cmp	r0, r1
   13d2c:	beq	13d4c <sav_ctx_init+0x5c>
   13d30:	ldr	r0, [r7]
   13d34:	movw	r1, #17956	; 0x4624
   13d38:	movt	r1, #13132	; 0x334c
   13d3c:	cmp	r0, r1
   13d40:	bne	13e68 <sav_ctx_init+0x178>
   13d44:	mov	r0, #3
   13d48:	b	13d50 <sav_ctx_init+0x60>
   13d4c:	mov	r0, #2
   13d50:	str	r0, [r6, #424]	; 0x1a8
   13d54:	ldr	r0, [r7, #64]	; 0x40
   13d58:	orr	r0, r0, #1
   13d5c:	subs	r0, r0, #3
   13d60:	movwne	r0, #1
   13d64:	ldrb	r1, [r6, #436]	; 0x1b4
   13d68:	and	r1, r1, #254	; 0xfe
   13d6c:	orr	r0, r1, r0
   13d70:	strb	r0, [r6, #436]	; 0x1b4
   13d74:	bl	492c <machine_is_little_endian@plt>
   13d78:	ldrb	r1, [r6, #436]	; 0x1b4
   13d7c:	and	r1, r1, #1
   13d80:	mov	r5, #1
   13d84:	cmp	r0, r1
   13d88:	mov	r0, #1
   13d8c:	movweq	r0, #2
   13d90:	str	r0, [r6, #432]	; 0x1b0
   13d94:	ldr	r0, [r7, #72]	; 0x48
   13d98:	cmp	r0, #1
   13d9c:	beq	13dbc <sav_ctx_init+0xcc>
   13da0:	bl	480c <byteswap4@plt>
   13da4:	cmp	r0, #1
   13da8:	beq	13dbc <sav_ctx_init+0xcc>
   13dac:	ldr	r0, [r7, #72]	; 0x48
   13db0:	mov	r5, #2
   13db4:	cmp	r0, #2
   13db8:	bne	13e78 <sav_ctx_init+0x188>
   13dbc:	str	r5, [r6, #428]	; 0x1ac
   13dc0:	ldr	r0, [r7, #80]	; 0x50
   13dc4:	ldrb	r1, [r6, #436]	; 0x1b4
   13dc8:	tst	r1, #1
   13dcc:	beq	13dd4 <sav_ctx_init+0xe4>
   13dd0:	bl	480c <byteswap4@plt>
   13dd4:	str	r0, [r6, #352]	; 0x160
   13dd8:	ldr	r0, [r7, #76]	; 0x4c
   13ddc:	ldrb	r1, [r6, #436]	; 0x1b4
   13de0:	tst	r1, #1
   13de4:	beq	13dec <sav_ctx_init+0xfc>
   13de8:	bl	480c <byteswap4@plt>
   13dec:	mvn	r1, #1048576	; 0x100000
   13df0:	mvn	r2, #1
   13df4:	movw	r3, #65535	; 0xffff
   13df8:	movt	r3, #32751	; 0x7fef
   13dfc:	mvn	r5, #0
   13e00:	str	r0, [r6, #372]	; 0x174
   13e04:	add	r0, r2, #1
   13e08:	add	ip, r6, #392	; 0x188
   13e0c:	stm	ip, {r0, r1, r2}
   13e10:	str	r1, [r6, #404]	; 0x194
   13e14:	str	r5, [r6, #408]	; 0x198
   13e18:	str	r3, [r6, #412]	; 0x19c
   13e1c:	add	r0, r7, #84	; 0x54
   13e20:	vld1.8	{d0}, [r0]
   13e24:	ldrb	r0, [r6, #436]	; 0x1b4
   13e28:	tst	r0, #1
   13e2c:	beq	13e34 <sav_ctx_init+0x144>
   13e30:	bl	4fa4 <byteswap_double@plt>
   13e34:	mov	r0, #512	; 0x200
   13e38:	str	r0, [r6, #48]	; 0x30
   13e3c:	vstr	d0, [r6, #416]	; 0x1a0
   13e40:	mov	r0, #512	; 0x200
   13e44:	mov	r1, #4
   13e48:	bl	4a34 <readstat_calloc@plt>
   13e4c:	str	r0, [r6, #44]	; 0x2c
   13e50:	cmp	r0, #0
   13e54:	beq	13e68 <sav_ctx_init+0x178>
   13e58:	str	r8, [r6, #36]	; 0x24
   13e5c:	mov	r4, r6
   13e60:	mov	r0, r4
   13e64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13e68:	mov	r0, r6
   13e6c:	bl	498c <sav_ctx_free@plt>
   13e70:	mov	r0, r4
   13e74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13e78:	bl	480c <byteswap4@plt>
   13e7c:	cmp	r0, #2
   13e80:	streq	r5, [r6, #428]	; 0x1ac
   13e84:	b	13dc0 <sav_ctx_init+0xd0>

00013e88 <sav_ctx_free>:
   13e88:	push	{r4, r5, fp, lr}
   13e8c:	add	fp, sp, #8
   13e90:	mov	r4, r0
   13e94:	ldr	r0, [r0, #44]	; 0x2c
   13e98:	cmp	r0, #0
   13e9c:	beq	13ed4 <sav_ctx_free+0x4c>
   13ea0:	ldr	r0, [r4, #44]	; 0x2c
   13ea4:	ldr	r1, [r4, #340]	; 0x154
   13ea8:	cmp	r1, #1
   13eac:	blt	13ed0 <sav_ctx_free+0x48>
   13eb0:	mov	r5, #0
   13eb4:	ldr	r0, [r0, r5, lsl #2]
   13eb8:	bl	4eb4 <spss_varinfo_free@plt>
   13ebc:	add	r5, r5, #1
   13ec0:	ldr	r0, [r4, #44]	; 0x2c
   13ec4:	ldr	r1, [r4, #340]	; 0x154
   13ec8:	cmp	r5, r1
   13ecc:	blt	13eb4 <sav_ctx_free+0x2c>
   13ed0:	bl	4938 <free@plt>
   13ed4:	ldr	r0, [r4, #52]	; 0x34
   13ed8:	cmp	r0, #0
   13edc:	beq	13f1c <sav_ctx_free+0x94>
   13ee0:	ldr	r0, [r4, #52]	; 0x34
   13ee4:	ldr	r1, [r4, #348]	; 0x15c
   13ee8:	cmp	r1, #1
   13eec:	blt	13f18 <sav_ctx_free+0x90>
   13ef0:	mov	r5, #0
   13ef4:	ldr	r0, [r0, r5, lsl #2]
   13ef8:	cmp	r0, #0
   13efc:	beq	13f04 <sav_ctx_free+0x7c>
   13f00:	bl	4938 <free@plt>
   13f04:	add	r5, r5, #1
   13f08:	ldr	r0, [r4, #52]	; 0x34
   13f0c:	ldr	r1, [r4, #348]	; 0x15c
   13f10:	cmp	r5, r1
   13f14:	blt	13ef4 <sav_ctx_free+0x6c>
   13f18:	bl	4938 <free@plt>
   13f1c:	ldr	r0, [r4, #376]	; 0x178
   13f20:	cmp	r0, #0
   13f24:	beq	13f2c <sav_ctx_free+0xa4>
   13f28:	bl	4938 <free@plt>
   13f2c:	ldr	r0, [r4, #384]	; 0x180
   13f30:	cmp	r0, #0
   13f34:	beq	13f3c <sav_ctx_free+0xb4>
   13f38:	bl	4938 <free@plt>
   13f3c:	ldr	r0, [r4, #336]	; 0x150
   13f40:	cmp	r0, #0
   13f44:	beq	13f4c <sav_ctx_free+0xc4>
   13f48:	bl	4848 <iconv_close@plt>
   13f4c:	ldr	r0, [r4, #328]	; 0x148
   13f50:	cmp	r0, #0
   13f54:	beq	13f5c <sav_ctx_free+0xd4>
   13f58:	bl	4938 <free@plt>
   13f5c:	mov	r0, r4
   13f60:	pop	{r4, r5, fp, lr}
   13f64:	b	4938 <free@plt>

00013f68 <sav_compressed_row_bound>:
   13f68:	mov	r1, #8
   13f6c:	add	r1, r1, r0, lsr #3
   13f70:	bic	r1, r1, #-1073741817	; 0xc0000007
   13f74:	add	r0, r1, r0
   13f78:	bx	lr
   13f7c:	nop	{0}

00013f80 <sav_compress_row>:
   13f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f84:	add	fp, sp, #28
   13f88:	sub	sp, sp, #4
   13f8c:	vpush	{d8-d9}
   13f90:	sub	sp, sp, #8
   13f94:	mov	r4, r0
   13f98:	mov	sl, #0
   13f9c:	str	sl, [r0, #4]
   13fa0:	str	sl, [r0]
   13fa4:	ldr	r0, [r3, #28]
   13fa8:	cmp	r0, #1
   13fac:	blt	14154 <sav_compress_row+0x1d4>
   13fb0:	mov	r7, r1
   13fb4:	mov	r6, #8
   13fb8:	vldr	d8, [pc, #456]	; 14188 <sav_compress_row+0x208>
   13fbc:	vldr	d9, [pc, #460]	; 14190 <sav_compress_row+0x210>
   13fc0:	mov	r8, #0
   13fc4:	mov	sl, #0
   13fc8:	mov	r5, #0
   13fcc:	str	r3, [sp, #4]
   13fd0:	mov	r0, r3
   13fd4:	mov	r1, r5
   13fd8:	bl	4e18 <readstat_get_variable@plt>
   13fdc:	ldr	r1, [r0]
   13fe0:	cmp	r1, #0
   13fe4:	beq	14014 <sav_compress_row+0x94>
   13fe8:	mov	r0, r7
   13fec:	ldr	r1, [r0, r8]!
   13ff0:	ldr	r2, [r0, #4]
   13ff4:	mvn	r3, #1048576	; 0x100000
   13ff8:	eor	r2, r2, r3
   13ffc:	mvn	r1, r1
   14000:	orrs	r1, r1, r2
   14004:	bne	140b0 <sav_compress_row+0x130>
   14008:	mov	r0, #255	; 0xff
   1400c:	strb	r0, [r4, sl]
   14010:	b	14110 <sav_compress_row+0x190>
   14014:	ldr	r9, [r0, #1596]	; 0x63c
   14018:	cmp	r9, #0
   1401c:	beq	1413c <sav_compress_row+0x1bc>
   14020:	add	r0, r7, r8
   14024:	ldr	r1, [pc, #364]	; 14198 <sav_compress_row+0x218>
   14028:	add	r1, pc, r1
   1402c:	mov	r2, #8
   14030:	bl	4a10 <memcmp@plt>
   14034:	add	r1, sl, #1
   14038:	cmp	r0, #0
   1403c:	beq	14074 <sav_compress_row+0xf4>
   14040:	mov	r0, #253	; 0xfd
   14044:	strb	r0, [r4, sl]
   14048:	mov	r0, r7
   1404c:	ldr	r2, [r0, r8]!
   14050:	ldr	r0, [r0, #4]
   14054:	str	r2, [r4, r6]
   14058:	add	r2, r4, r6
   1405c:	str	r0, [r2, #4]
   14060:	add	r6, r6, #8
   14064:	tst	r1, #7
   14068:	beq	14084 <sav_compress_row+0x104>
   1406c:	mov	sl, r1
   14070:	b	140a0 <sav_compress_row+0x120>
   14074:	mov	r0, #254	; 0xfe
   14078:	strb	r0, [r4, sl]
   1407c:	tst	r1, #7
   14080:	bne	1406c <sav_compress_row+0xec>
   14084:	mov	r0, r4
   14088:	mov	r1, #0
   1408c:	str	r1, [r0, r6]!
   14090:	str	r1, [r0, #4]
   14094:	add	r0, r6, #8
   14098:	mov	sl, r6
   1409c:	mov	r6, r0
   140a0:	subs	r9, r9, #8
   140a4:	add	r8, r8, #8
   140a8:	bne	14020 <sav_compress_row+0xa0>
   140ac:	b	1413c <sav_compress_row+0x1bc>
   140b0:	vld1.8	{d16}, [r0]
   140b4:	vcmpe.f64	d16, d8
   140b8:	vmrs	APSR_nzcv, fpscr
   140bc:	ble	140f0 <sav_compress_row+0x170>
   140c0:	vcmpe.f64	d16, d9
   140c4:	vmrs	APSR_nzcv, fpscr
   140c8:	bpl	140f0 <sav_compress_row+0x170>
   140cc:	vcvt.s32.f64	s0, d16
   140d0:	vcvt.f64.s32	d17, s0
   140d4:	vcmp.f64	d16, d17
   140d8:	vmrs	APSR_nzcv, fpscr
   140dc:	bne	140f0 <sav_compress_row+0x170>
   140e0:	vmov	r1, s0
   140e4:	add	r0, r1, #100	; 0x64
   140e8:	strb	r0, [r4, sl]
   140ec:	b	14110 <sav_compress_row+0x190>
   140f0:	mov	r1, #253	; 0xfd
   140f4:	strb	r1, [r4, sl]
   140f8:	ldr	r1, [r0]
   140fc:	ldr	r0, [r0, #4]
   14100:	str	r1, [r4, r6]
   14104:	add	r1, r4, r6
   14108:	str	r0, [r1, #4]
   1410c:	add	r6, r6, #8
   14110:	add	sl, sl, #1
   14114:	tst	sl, #7
   14118:	bne	14138 <sav_compress_row+0x1b8>
   1411c:	mov	r0, r4
   14120:	mov	r1, #0
   14124:	str	r1, [r0, r6]!
   14128:	str	r1, [r0, #4]
   1412c:	add	r0, r6, #8
   14130:	mov	sl, r6
   14134:	mov	r6, r0
   14138:	add	r8, r8, #8
   1413c:	ldr	r3, [sp, #4]
   14140:	ldr	r0, [r3, #28]
   14144:	add	r5, r5, #1
   14148:	cmp	r5, r0
   1414c:	blt	13fd0 <sav_compress_row+0x50>
   14150:	b	14158 <sav_compress_row+0x1d8>
   14154:	mov	r6, #8
   14158:	ldr	r0, [r3, #80]	; 0x50
   1415c:	ldr	r1, [r3, #84]	; 0x54
   14160:	add	r1, r1, #1
   14164:	cmp	r1, r0
   14168:	moveq	r0, #252	; 0xfc
   1416c:	strbeq	r0, [r4, sl]
   14170:	mov	r0, r6
   14174:	sub	sp, fp, #48	; 0x30
   14178:	vpop	{d8-d9}
   1417c:	add	sp, sp, #4
   14180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14184:	nop	{0}
   14188:	.word	0x00000000
   1418c:	.word	0xc0590000
   14190:	.word	0x00000000
   14194:	.word	0x40630000
   14198:	.word	0x0001200f

0001419c <sav_decompress_row>:
   1419c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141a0:	add	fp, sp, #24
   141a4:	mov	r4, r0
   141a8:	ldrd	r6, [r0, #16]
   141ac:	ldr	r0, [r0, #44]	; 0x2c
   141b0:	cmp	r0, #0
   141b4:	beq	141cc <sav_decompress_row+0x30>
   141b8:	mov	r0, r6
   141bc:	mov	r1, r7
   141c0:	bl	47f4 <byteswap8@plt>
   141c4:	mov	r6, r0
   141c8:	mov	r7, r1
   141cc:	add	r8, r4, #32
   141d0:	ldr	r0, [r4, #40]	; 0x28
   141d4:	rsb	r5, r0, #8
   141d8:	movw	r9, #8224	; 0x2020
   141dc:	movt	r9, #8224	; 0x2020
   141e0:	cmp	r5, #8
   141e4:	bne	14214 <sav_decompress_row+0x78>
   141e8:	ldr	r0, [r4, #4]
   141ec:	cmp	r0, #8
   141f0:	bcc	14324 <sav_decompress_row+0x188>
   141f4:	ldr	r1, [r4]
   141f8:	ldr	r2, [r1]
   141fc:	ldr	r3, [r1, #4]
   14200:	strd	r2, [r8]
   14204:	sub	r3, r0, #8
   14208:	add	r2, r1, #8
   1420c:	strd	r2, [r4]
   14210:	mov	r5, #0
   14214:	cmp	r5, #7
   14218:	bgt	141e0 <sav_decompress_row+0x44>
   1421c:	add	r0, r4, r5
   14220:	ldrb	r0, [r0, #32]
   14224:	sub	r1, r0, #252	; 0xfc
   14228:	cmp	r1, #3
   1422c:	bhi	1428c <sav_decompress_row+0xf0>
   14230:	add	r0, pc, #4
   14234:	ldr	r1, [r0, r1, lsl #2]
   14238:	add	pc, r0, r1
   1423c:	.word	0x000000cc
   14240:	.word	0x00000010
   14244:	.word	0x00000060
   14248:	.word	0x00000070
   1424c:	ldr	r0, [r4, #4]
   14250:	cmp	r0, #8
   14254:	bcc	1431c <sav_decompress_row+0x180>
   14258:	ldr	r0, [r4]
   1425c:	ldr	r1, [r4, #8]
   14260:	ldr	r2, [r0]
   14264:	ldr	r0, [r0, #4]
   14268:	str	r0, [r1, #4]
   1426c:	str	r2, [r1]
   14270:	ldm	r4, {r0, r1, r2, r3}
   14274:	sub	r3, r3, #8
   14278:	add	r2, r2, #8
   1427c:	add	r0, r0, #8
   14280:	sub	r1, r1, #8
   14284:	stm	r4, {r0, r1, r2, r3}
   14288:	b	14294 <sav_decompress_row+0xf8>
   1428c:	cmp	r0, #0
   14290:	bne	142bc <sav_decompress_row+0x120>
   14294:	ldr	r1, [r4, #12]
   14298:	b	142f4 <sav_decompress_row+0x158>
   1429c:	ldr	r0, [r4, #8]
   142a0:	str	r9, [r0, #4]
   142a4:	str	r9, [r0]
   142a8:	b	142e4 <sav_decompress_row+0x148>
   142ac:	ldr	r0, [r4, #8]
   142b0:	str	r7, [r0, #4]
   142b4:	str	r6, [r0]
   142b8:	b	142e4 <sav_decompress_row+0x148>
   142bc:	vldr	d16, [r4, #24]
   142c0:	ldr	r1, [r4, #44]	; 0x2c
   142c4:	vmov	s0, r0
   142c8:	vcvt.f64.u32	d17, s0
   142cc:	vsub.f64	d0, d17, d16
   142d0:	cmp	r1, #0
   142d4:	beq	142dc <sav_decompress_row+0x140>
   142d8:	bl	4fa4 <byteswap_double@plt>
   142dc:	ldr	r0, [r4, #8]
   142e0:	vst1.8	{d0}, [r0]
   142e4:	ldrd	r0, [r4, #8]
   142e8:	add	r0, r0, #8
   142ec:	sub	r1, r1, #8
   142f0:	strd	r0, [r4, #8]
   142f4:	add	r5, r5, #1
   142f8:	cmp	r1, #8
   142fc:	bcs	14214 <sav_decompress_row+0x78>
   14300:	mov	r0, #2
   14304:	b	1430c <sav_decompress_row+0x170>
   14308:	mov	r0, #3
   1430c:	str	r0, [r4, #48]	; 0x30
   14310:	rsb	r0, r5, #8
   14314:	str	r0, [r4, #40]	; 0x28
   14318:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1431c:	mov	r0, #0
   14320:	b	1430c <sav_decompress_row+0x170>
   14324:	mov	r5, #8
   14328:	mov	r0, #0
   1432c:	b	1430c <sav_decompress_row+0x170>

00014330 <sav_parse_long_variable_names_record>:
   14330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14334:	add	fp, sp, #28
   14338:	sub	sp, sp, #140	; 0x8c
   1433c:	sub	sp, sp, #8192	; 0x2000
   14340:	mov	r4, r2
   14344:	mov	r6, r1
   14348:	mov	r8, r0
   1434c:	add	r0, r0, r1
   14350:	str	r0, [sp, #24]
   14354:	mov	r0, r2
   14358:	bl	1485c <count_vars>
   1435c:	str	r0, [sp, #28]
   14360:	mov	r1, r4
   14364:	bl	148d0 <build_lookup_table>
   14368:	str	r0, [sp, #36]	; 0x24
   1436c:	str	r6, [sp, #20]
   14370:	cmp	r6, #0
   14374:	str	r4, [sp, #32]
   14378:	str	r8, [sp, #16]
   1437c:	beq	14654 <sav_parse_long_variable_names_record+0x324>
   14380:	mov	sl, #1
   14384:	mvn	r2, #1
   14388:	mov	r0, #0
   1438c:	str	r0, [sp, #44]	; 0x2c
   14390:	mov	r0, #0
   14394:	str	r0, [sp, #40]	; 0x28
   14398:	b	144c8 <sav_parse_long_variable_names_record+0x198>
   1439c:	ldr	r1, [pc, #1172]	; 14838 <sav_parse_long_variable_names_record+0x508>
   143a0:	add	r1, pc, r1
   143a4:	ldrb	r0, [r1, r0]!
   143a8:	add	r6, r1, #1
   143ac:	rsb	r9, r0, #0
   143b0:	b	143f0 <sav_parse_long_variable_names_record+0xc0>
   143b4:	ldr	r7, [sp, #32]
   143b8:	ldr	r0, [r7, #24]
   143bc:	cmp	r0, #0
   143c0:	beq	144b8 <sav_parse_long_variable_names_record+0x188>
   143c4:	add	r0, sp, #48	; 0x30
   143c8:	mov	r1, #8192	; 0x2000
   143cc:	ldr	r2, [pc, #1132]	; 14840 <sav_parse_long_variable_names_record+0x510>
   143d0:	add	r2, pc, r2
   143d4:	sub	r3, fp, #48	; 0x30
   143d8:	bl	4d04 <snprintf@plt>
   143dc:	ldr	r2, [r7, #24]
   143e0:	ldr	r1, [r7, #40]	; 0x28
   143e4:	add	r0, sp, #48	; 0x30
   143e8:	blx	r2
   143ec:	b	144b8 <sav_parse_long_variable_names_record+0x188>
   143f0:	ldrb	r0, [r6]
   143f4:	cmp	r0, #6
   143f8:	bhi	144b8 <sav_parse_long_variable_names_record+0x188>
   143fc:	add	r1, pc, #4
   14400:	ldr	r0, [r1, r0, lsl #2]
   14404:	add	pc, r1, r0
   14408:	.word	0x0000002c
   1440c:	.word	0x0000008c
   14410:	.word	0x00000094
   14414:	.word	0x0000001c
   14418:	.word	0x00000024
   1441c:	.word	0x0000001c
   14420:	.word	0x00000024
   14424:	mov	sl, r8
   14428:	b	144b8 <sav_parse_long_variable_names_record+0x188>
   1442c:	sub	r5, r8, sl
   14430:	b	144b8 <sav_parse_long_variable_names_record+0x188>
   14434:	ldr	r0, [pc, #1024]	; 1483c <sav_parse_long_variable_names_record+0x50c>
   14438:	add	r0, pc, r0
   1443c:	str	r0, [sp]
   14440:	sub	r0, fp, #48	; 0x30
   14444:	ldr	r1, [sp, #36]	; 0x24
   14448:	ldr	r2, [sp, #28]
   1444c:	mov	r3, #40	; 0x28
   14450:	bl	4d34 <bsearch@plt>
   14454:	cmp	r0, #0
   14458:	beq	143b4 <sav_parse_long_variable_names_record+0x84>
   1445c:	ldr	r0, [r0, #36]	; 0x24
   14460:	ldr	r1, [sp, #32]
   14464:	ldr	r1, [r1, #44]	; 0x2c
   14468:	ldr	r0, [r1, r0, lsl #2]
   1446c:	mov	r7, sl
   14470:	add	sl, r0, #196	; 0xc4
   14474:	mov	r0, sl
   14478:	sub	r1, fp, #120	; 0x78
   1447c:	mov	r2, r5
   14480:	bl	4998 <memcpy@plt>
   14484:	mov	r0, #0
   14488:	strb	r0, [sl, r5]
   1448c:	mov	sl, r7
   14490:	b	144b8 <sav_parse_long_variable_names_record+0x188>
   14494:	sub	r7, fp, #48	; 0x30
   14498:	b	144a0 <sav_parse_long_variable_names_record+0x170>
   1449c:	sub	r7, fp, #120	; 0x78
   144a0:	mov	r0, r7
   144a4:	mov	r1, sl
   144a8:	mov	r2, r5
   144ac:	bl	4998 <memcpy@plt>
   144b0:	mov	r0, #0
   144b4:	strb	r0, [r7, r5]
   144b8:	add	r6, r6, #1
   144bc:	adds	r9, r9, #1
   144c0:	bne	143f0 <sav_parse_long_variable_names_record+0xc0>
   144c4:	b	1461c <sav_parse_long_variable_names_record+0x2ec>
   144c8:	ldr	r0, [pc, #844]	; 1481c <sav_parse_long_variable_names_record+0x4ec>
   144cc:	add	r0, pc, r0
   144d0:	ldrb	r4, [r0, sl]
   144d4:	ldr	r0, [pc, #836]	; 14820 <sav_parse_long_variable_names_record+0x4f0>
   144d8:	add	r0, pc, r0
   144dc:	add	r0, r0, sl, lsl #1
   144e0:	ldrsh	r0, [r0]
   144e4:	ldr	r1, [pc, #824]	; 14824 <sav_parse_long_variable_names_record+0x4f4>
   144e8:	add	r1, pc, r1
   144ec:	add	r9, r1, r0
   144f0:	ldr	r0, [pc, #816]	; 14828 <sav_parse_long_variable_names_record+0x4f8>
   144f4:	add	r0, pc, r0
   144f8:	add	r0, r0, sl, lsl #1
   144fc:	ldrsh	lr, [r0]
   14500:	cmp	r4, #0
   14504:	beq	1455c <sav_parse_long_variable_names_record+0x22c>
   14508:	add	ip, r9, r4
   1450c:	sub	r5, ip, #1
   14510:	cmp	r5, r9
   14514:	bcc	14554 <sav_parse_long_variable_names_record+0x224>
   14518:	ldrb	r7, [r8]
   1451c:	mov	r3, r9
   14520:	sub	r6, r5, r3
   14524:	mov	r1, r3
   14528:	ldrb	r6, [r1, r6, asr #1]!
   1452c:	cmp	r7, r6
   14530:	bcs	14544 <sav_parse_long_variable_names_record+0x214>
   14534:	sub	r5, r1, #1
   14538:	cmp	r5, r3
   1453c:	bcs	14520 <sav_parse_long_variable_names_record+0x1f0>
   14540:	b	14554 <sav_parse_long_variable_names_record+0x224>
   14544:	bls	145d8 <sav_parse_long_variable_names_record+0x2a8>
   14548:	add	r3, r1, #1
   1454c:	cmp	r5, r3
   14550:	bcs	14520 <sav_parse_long_variable_names_record+0x1f0>
   14554:	add	lr, r4, lr
   14558:	b	14560 <sav_parse_long_variable_names_record+0x230>
   1455c:	mov	ip, r9
   14560:	ldr	r1, [pc, #708]	; 1482c <sav_parse_long_variable_names_record+0x4fc>
   14564:	add	r1, pc, r1
   14568:	ldrb	r0, [r1, sl]
   1456c:	cmp	r0, #0
   14570:	beq	145e0 <sav_parse_long_variable_names_record+0x2b0>
   14574:	add	r1, ip, r0, lsl #1
   14578:	sub	r3, r1, #2
   1457c:	cmp	r3, ip
   14580:	ldr	r5, [sp, #44]	; 0x2c
   14584:	ldr	sl, [sp, #40]	; 0x28
   14588:	bcc	145f4 <sav_parse_long_variable_names_record+0x2c4>
   1458c:	ldrb	r6, [r8]
   14590:	mov	r4, ip
   14594:	sub	r1, r3, r4
   14598:	and	r7, r2, r1, asr #1
   1459c:	mov	r1, r4
   145a0:	ldrb	r7, [r1, r7]!
   145a4:	cmp	r6, r7
   145a8:	bcs	145bc <sav_parse_long_variable_names_record+0x28c>
   145ac:	sub	r3, r1, #2
   145b0:	cmp	r3, r4
   145b4:	bcs	14594 <sav_parse_long_variable_names_record+0x264>
   145b8:	b	145f4 <sav_parse_long_variable_names_record+0x2c4>
   145bc:	ldrb	r7, [r1, #1]
   145c0:	cmp	r6, r7
   145c4:	bls	145ec <sav_parse_long_variable_names_record+0x2bc>
   145c8:	add	r4, r1, #2
   145cc:	cmp	r3, r4
   145d0:	bcs	14594 <sav_parse_long_variable_names_record+0x264>
   145d4:	b	145f4 <sav_parse_long_variable_names_record+0x2c4>
   145d8:	sub	r0, lr, r9
   145dc:	add	lr, r0, r1
   145e0:	ldr	r5, [sp, #44]	; 0x2c
   145e4:	ldr	sl, [sp, #40]	; 0x28
   145e8:	b	145f8 <sav_parse_long_variable_names_record+0x2c8>
   145ec:	sub	r1, r1, ip
   145f0:	asr	r0, r1, #1
   145f4:	add	lr, r0, lr
   145f8:	ldr	r0, [pc, #560]	; 14830 <sav_parse_long_variable_names_record+0x500>
   145fc:	add	r0, pc, r0
   14600:	ldrb	r4, [r0, lr]
   14604:	ldr	r0, [pc, #552]	; 14834 <sav_parse_long_variable_names_record+0x504>
   14608:	add	r0, pc, r0
   1460c:	ldrb	r0, [r0, r4]
   14610:	cmp	r0, #0
   14614:	cmpne	r0, #11
   14618:	bne	1439c <sav_parse_long_variable_names_record+0x6c>
   1461c:	str	sl, [sp, #40]	; 0x28
   14620:	str	r5, [sp, #44]	; 0x2c
   14624:	ldr	r0, [pc, #536]	; 14844 <sav_parse_long_variable_names_record+0x514>
   14628:	add	r0, pc, r0
   1462c:	ldrb	sl, [r0, r4]
   14630:	cmp	r4, #1
   14634:	beq	14794 <sav_parse_long_variable_names_record+0x464>
   14638:	add	r8, r8, #1
   1463c:	ldr	r0, [sp, #24]
   14640:	cmp	r8, r0
   14644:	mvn	r2, #1
   14648:	bne	144c8 <sav_parse_long_variable_names_record+0x198>
   1464c:	ldr	r4, [sp, #32]
   14650:	b	14668 <sav_parse_long_variable_names_record+0x338>
   14654:	mov	r0, #0
   14658:	str	r0, [sp, #44]	; 0x2c
   1465c:	mov	sl, #1
   14660:	mov	r0, #0
   14664:	str	r0, [sp, #40]	; 0x28
   14668:	ldr	r0, [sp, #24]
   1466c:	cmp	r8, r0
   14670:	bne	14798 <sav_parse_long_variable_names_record+0x468>
   14674:	ldr	r0, [pc, #460]	; 14848 <sav_parse_long_variable_names_record+0x518>
   14678:	add	r0, pc, r0
   1467c:	ldrb	r0, [r0, sl]
   14680:	cmp	r0, #0
   14684:	beq	14798 <sav_parse_long_variable_names_record+0x468>
   14688:	ldr	r1, [sp, #40]	; 0x28
   1468c:	sub	r7, r8, r1
   14690:	ldr	r1, [pc, #436]	; 1484c <sav_parse_long_variable_names_record+0x51c>
   14694:	add	r1, pc, r1
   14698:	ldrb	r0, [r1, r0]!
   1469c:	add	r9, r1, #1
   146a0:	rsb	r4, r0, #0
   146a4:	b	146e8 <sav_parse_long_variable_names_record+0x3b8>
   146a8:	ldr	r6, [sp, #32]
   146ac:	ldr	r0, [r6, #24]
   146b0:	cmp	r0, #0
   146b4:	beq	14788 <sav_parse_long_variable_names_record+0x458>
   146b8:	add	r5, sp, #48	; 0x30
   146bc:	mov	r0, r5
   146c0:	mov	r1, #8192	; 0x2000
   146c4:	ldr	r2, [pc, #392]	; 14854 <sav_parse_long_variable_names_record+0x524>
   146c8:	add	r2, pc, r2
   146cc:	sub	r3, fp, #48	; 0x30
   146d0:	bl	4d04 <snprintf@plt>
   146d4:	ldr	r2, [r6, #24]
   146d8:	ldr	r1, [r6, #40]	; 0x28
   146dc:	mov	r0, r5
   146e0:	blx	r2
   146e4:	b	14788 <sav_parse_long_variable_names_record+0x458>
   146e8:	ldrb	r0, [r9]
   146ec:	cmp	r0, #6
   146f0:	beq	14784 <sav_parse_long_variable_names_record+0x454>
   146f4:	cmp	r0, #2
   146f8:	beq	14760 <sav_parse_long_variable_names_record+0x430>
   146fc:	cmp	r0, #0
   14700:	bne	14788 <sav_parse_long_variable_names_record+0x458>
   14704:	ldr	r0, [pc, #324]	; 14850 <sav_parse_long_variable_names_record+0x520>
   14708:	add	r0, pc, r0
   1470c:	str	r0, [sp]
   14710:	sub	r0, fp, #48	; 0x30
   14714:	ldr	r1, [sp, #36]	; 0x24
   14718:	ldr	r2, [sp, #28]
   1471c:	mov	r3, #40	; 0x28
   14720:	bl	4d34 <bsearch@plt>
   14724:	cmp	r0, #0
   14728:	beq	146a8 <sav_parse_long_variable_names_record+0x378>
   1472c:	ldr	r0, [r0, #36]	; 0x24
   14730:	ldr	r1, [sp, #32]
   14734:	ldr	r1, [r1, #44]	; 0x2c
   14738:	ldr	r0, [r1, r0, lsl #2]
   1473c:	add	r5, r0, #196	; 0xc4
   14740:	mov	r0, r5
   14744:	sub	r1, fp, #120	; 0x78
   14748:	ldr	r6, [sp, #44]	; 0x2c
   1474c:	mov	r2, r6
   14750:	bl	4998 <memcpy@plt>
   14754:	mov	r0, #0
   14758:	strb	r0, [r5, r6]
   1475c:	b	14788 <sav_parse_long_variable_names_record+0x458>
   14760:	sub	r6, fp, #120	; 0x78
   14764:	mov	r0, r6
   14768:	ldr	r1, [sp, #40]	; 0x28
   1476c:	ldr	r5, [sp, #44]	; 0x2c
   14770:	mov	r2, r5
   14774:	bl	4998 <memcpy@plt>
   14778:	mov	r0, #0
   1477c:	strb	r0, [r6, r5]
   14780:	b	14788 <sav_parse_long_variable_names_record+0x458>
   14784:	str	r7, [sp, #44]	; 0x2c
   14788:	add	r9, r9, #1
   1478c:	adds	r4, r4, #1
   14790:	bne	146e8 <sav_parse_long_variable_names_record+0x3b8>
   14794:	ldr	r4, [sp, #32]
   14798:	cmp	sl, #11
   1479c:	blt	147b0 <sav_parse_long_variable_names_record+0x480>
   147a0:	mov	r5, #0
   147a4:	ldr	r0, [sp, #24]
   147a8:	cmp	r8, r0
   147ac:	beq	14800 <sav_parse_long_variable_names_record+0x4d0>
   147b0:	ldr	r0, [r4, #24]
   147b4:	mov	r5, #5
   147b8:	cmp	r0, #0
   147bc:	beq	14800 <sav_parse_long_variable_names_record+0x4d0>
   147c0:	ldr	r1, [sp, #16]
   147c4:	ldrb	r0, [r8], -r1
   147c8:	stm	sp, {r1, r8}
   147cc:	ldr	r3, [sp, #20]
   147d0:	str	r3, [sp, #8]
   147d4:	str	r0, [sp, #12]
   147d8:	add	r6, sp, #48	; 0x30
   147dc:	ldr	r2, [pc, #116]	; 14858 <sav_parse_long_variable_names_record+0x528>
   147e0:	add	r2, pc, r2
   147e4:	mov	r0, r6
   147e8:	mov	r1, #8192	; 0x2000
   147ec:	bl	4d04 <snprintf@plt>
   147f0:	ldr	r2, [r4, #24]
   147f4:	ldr	r1, [r4, #40]	; 0x28
   147f8:	mov	r0, r6
   147fc:	blx	r2
   14800:	ldr	r0, [sp, #36]	; 0x24
   14804:	cmp	r0, #0
   14808:	beq	14810 <sav_parse_long_variable_names_record+0x4e0>
   1480c:	bl	4938 <free@plt>
   14810:	mov	r0, r5
   14814:	sub	sp, fp, #28
   14818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1481c:	.word	0x00011e94
   14820:	.word	0x00011d58
   14824:	.word	0x00011b58
   14828:	.word	0x00011dd4
   1482c:	.word	0x00011e48
   14830:	.word	0x00011dfc
   14834:	.word	0x0001214a
   14838:	.word	0x0001222e
   1483c:	.word	0x0000054c
   14840:	.word	0x000123cd
   14844:	.word	0x00011f5b
   14848:	.word	0x00011f62
   1484c:	.word	0x00011f3a
   14850:	.word	0x0000027c
   14854:	.word	0x000120d5
   14858:	.word	0x00011fcf

0001485c <count_vars>:
   1485c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14860:	add	fp, sp, #24
   14864:	ldr	r1, [r0, #340]	; 0x154
   14868:	cmp	r1, #1
   1486c:	movlt	r4, #0
   14870:	movlt	r0, r4
   14874:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   14878:	ldr	r8, [r0, #44]	; 0x2c
   1487c:	ldr	r6, [r0, #340]	; 0x154
   14880:	mov	r7, #0
   14884:	mov	r4, #0
   14888:	mov	r1, #0
   1488c:	b	148a4 <count_vars+0x48>
   14890:	add	r7, r7, #1
   14894:	cmp	r7, r6
   14898:	mov	r1, r5
   1489c:	movge	r0, r4
   148a0:	popge	{r4, r5, r6, r7, r8, sl, fp, pc}
   148a4:	ldr	r5, [r8, r7, lsl #2]
   148a8:	cmp	r1, #0
   148ac:	beq	148c8 <count_vars+0x6c>
   148b0:	add	r0, r5, #187	; 0xbb
   148b4:	add	r1, r1, #187	; 0xbb
   148b8:	bl	4878 <strcmp@plt>
   148bc:	cmp	r0, #0
   148c0:	addne	r4, r4, #1
   148c4:	b	14890 <count_vars+0x34>
   148c8:	add	r4, r4, #1
   148cc:	b	14890 <count_vars+0x34>

000148d0 <build_lookup_table>:
   148d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148d4:	add	fp, sp, #24
   148d8:	mov	r6, r1
   148dc:	mov	r8, r0
   148e0:	add	r0, r0, r0, lsl #2
   148e4:	lsl	r0, r0, #3
   148e8:	bl	4cb0 <readstat_malloc@plt>
   148ec:	mov	r9, r0
   148f0:	ldr	r0, [r6, #340]	; 0x154
   148f4:	cmp	r0, #1
   148f8:	blt	14968 <build_lookup_table+0x98>
   148fc:	mov	r7, #0
   14900:	mov	r4, #0
   14904:	mov	r1, #0
   14908:	ldr	r0, [r6, #44]	; 0x2c
   1490c:	ldr	r5, [r0, r4, lsl #2]
   14910:	cmp	r1, #0
   14914:	beq	1492c <build_lookup_table+0x5c>
   14918:	add	r0, r5, #187	; 0xbb
   1491c:	add	r1, r1, #187	; 0xbb
   14920:	bl	4878 <strcmp@plt>
   14924:	cmp	r0, #0
   14928:	beq	14954 <build_lookup_table+0x84>
   1492c:	add	r0, r7, r7, lsl #2
   14930:	add	r1, r5, #187	; 0xbb
   14934:	vld1.8	{d16}, [r1]
   14938:	add	r0, r9, r0, lsl #3
   1493c:	ldrb	r1, [r5, #195]	; 0xc3
   14940:	strb	r1, [r0, #8]
   14944:	vst1.8	{d16}, [r0]
   14948:	ldr	r1, [r5, #8]
   1494c:	str	r1, [r0, #36]	; 0x24
   14950:	add	r7, r7, #1
   14954:	ldr	r0, [r6, #340]	; 0x154
   14958:	add	r4, r4, #1
   1495c:	cmp	r4, r0
   14960:	mov	r1, r5
   14964:	blt	14908 <build_lookup_table+0x38>
   14968:	ldr	r3, [pc, #24]	; 14988 <build_lookup_table+0xb8>
   1496c:	add	r3, pc, r3
   14970:	mov	r0, r9
   14974:	mov	r1, r8
   14978:	mov	r2, #40	; 0x28
   1497c:	bl	4ed8 <qsort@plt>
   14980:	mov	r0, r9
   14984:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14988:	.word	0x00000458

0001498c <compare_key_varlookup>:
   1498c:	b	4878 <strcmp@plt>

00014990 <sav_parse_very_long_string_record>:
   14990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14994:	add	fp, sp, #28
   14998:	sub	sp, sp, #92	; 0x5c
   1499c:	mov	r5, r2
   149a0:	mov	r7, r1
   149a4:	mov	r6, r0
   149a8:	add	r0, r0, r1
   149ac:	str	r0, [sp, #36]	; 0x24
   149b0:	mov	r0, r2
   149b4:	bl	1485c <count_vars>
   149b8:	mov	r4, r0
   149bc:	add	r0, r7, #1024	; 0x400
   149c0:	str	r0, [sp, #24]
   149c4:	bl	4cb0 <readstat_malloc@plt>
   149c8:	mov	r9, r0
   149cc:	str	r4, [sp, #32]
   149d0:	mov	r0, r4
   149d4:	mov	r1, r5
   149d8:	bl	148d0 <build_lookup_table>
   149dc:	str	r0, [sp, #40]	; 0x28
   149e0:	cmp	r7, #0
   149e4:	mov	sl, r6
   149e8:	beq	14d2c <sav_parse_very_long_string_record+0x39c>
   149ec:	str	r7, [sp, #12]
   149f0:	str	r5, [sp, #28]
   149f4:	str	r9, [sp, #20]
   149f8:	mov	r9, #1
   149fc:	mvn	lr, #1
   14a00:	str	r6, [sp, #16]
   14a04:	mov	sl, r6
   14a08:	mov	r2, #1
   14a0c:	mov	r0, #0
   14a10:	str	r0, [sp, #48]	; 0x30
   14a14:	mov	r8, #0
   14a18:	mov	r7, #0
   14a1c:	str	r7, [sp, #52]	; 0x34
   14a20:	ldr	r0, [pc, #888]	; 14da0 <sav_parse_very_long_string_record+0x410>
   14a24:	add	r0, pc, r0
   14a28:	ldrb	r0, [r0, r2]
   14a2c:	ldr	r1, [pc, #880]	; 14da4 <sav_parse_very_long_string_record+0x414>
   14a30:	add	r1, pc, r1
   14a34:	ldrb	r1, [r1, r2]
   14a38:	ldr	r3, [pc, #872]	; 14da8 <sav_parse_very_long_string_record+0x418>
   14a3c:	add	r3, pc, r3
   14a40:	add	r7, r3, r1
   14a44:	movw	r1, #7164	; 0x1bfc
   14a48:	tst	r9, r1, lsr r2
   14a4c:	bne	14a58 <sav_parse_very_long_string_record+0xc8>
   14a50:	mov	ip, r7
   14a54:	b	14ab8 <sav_parse_very_long_string_record+0x128>
   14a58:	ldr	r1, [pc, #844]	; 14dac <sav_parse_very_long_string_record+0x41c>
   14a5c:	add	r1, pc, r1
   14a60:	ldrb	lr, [r1, r2]
   14a64:	add	ip, r7, lr
   14a68:	sub	r5, ip, #1
   14a6c:	cmp	r5, r7
   14a70:	bcc	14ab0 <sav_parse_very_long_string_record+0x120>
   14a74:	ldrb	r4, [sl]
   14a78:	mov	r3, r7
   14a7c:	sub	r6, r5, r3
   14a80:	mov	r1, r3
   14a84:	ldrb	r6, [r1, r6, asr #1]!
   14a88:	cmp	r4, r6
   14a8c:	bcs	14aa0 <sav_parse_very_long_string_record+0x110>
   14a90:	sub	r5, r1, #1
   14a94:	cmp	r5, r3
   14a98:	bcs	14a7c <sav_parse_very_long_string_record+0xec>
   14a9c:	b	14ab0 <sav_parse_very_long_string_record+0x120>
   14aa0:	bls	14b30 <sav_parse_very_long_string_record+0x1a0>
   14aa4:	add	r3, r1, #1
   14aa8:	cmp	r5, r3
   14aac:	bcs	14a7c <sav_parse_very_long_string_record+0xec>
   14ab0:	add	r0, lr, r0
   14ab4:	mvn	lr, #1
   14ab8:	movw	r1, #11774	; 0x2dfe
   14abc:	tst	r9, r1, lsr r2
   14ac0:	ldr	r7, [sp, #52]	; 0x34
   14ac4:	beq	14b54 <sav_parse_very_long_string_record+0x1c4>
   14ac8:	ldr	r1, [pc, #736]	; 14db0 <sav_parse_very_long_string_record+0x420>
   14acc:	add	r1, pc, r1
   14ad0:	ldrb	r2, [r1, r2]
   14ad4:	add	r1, ip, r2, lsl #1
   14ad8:	sub	r3, r1, #2
   14adc:	cmp	r3, ip
   14ae0:	bcc	14b50 <sav_parse_very_long_string_record+0x1c0>
   14ae4:	ldrb	r6, [sl]
   14ae8:	mov	r7, ip
   14aec:	sub	r1, r3, r7
   14af0:	and	r5, lr, r1, asr #1
   14af4:	mov	r1, r7
   14af8:	ldrb	r5, [r1, r5]!
   14afc:	cmp	r6, r5
   14b00:	bcs	14b14 <sav_parse_very_long_string_record+0x184>
   14b04:	sub	r3, r1, #2
   14b08:	cmp	r3, r7
   14b0c:	bcs	14aec <sav_parse_very_long_string_record+0x15c>
   14b10:	b	14b4c <sav_parse_very_long_string_record+0x1bc>
   14b14:	ldrb	r7, [r1, #1]
   14b18:	cmp	r6, r7
   14b1c:	bls	14b44 <sav_parse_very_long_string_record+0x1b4>
   14b20:	add	r7, r1, #2
   14b24:	cmp	r3, r7
   14b28:	bcs	14aec <sav_parse_very_long_string_record+0x15c>
   14b2c:	b	14b4c <sav_parse_very_long_string_record+0x1bc>
   14b30:	sub	r0, r0, r7
   14b34:	add	r0, r0, r1
   14b38:	mvn	lr, #1
   14b3c:	ldr	r7, [sp, #52]	; 0x34
   14b40:	b	14b54 <sav_parse_very_long_string_record+0x1c4>
   14b44:	sub	r1, r1, ip
   14b48:	asr	r2, r1, #1
   14b4c:	ldr	r7, [sp, #52]	; 0x34
   14b50:	add	r0, r2, r0
   14b54:	ldr	r1, [pc, #600]	; 14db4 <sav_parse_very_long_string_record+0x424>
   14b58:	add	r1, pc, r1
   14b5c:	ldrb	r1, [r1, r0]
   14b60:	movw	r0, #25590	; 0x63f6
   14b64:	tst	r9, r0, lsr r1
   14b68:	str	r1, [sp, #44]	; 0x2c
   14b6c:	bne	14cb0 <sav_parse_very_long_string_record+0x320>
   14b70:	ldr	r0, [pc, #576]	; 14db8 <sav_parse_very_long_string_record+0x428>
   14b74:	add	r0, pc, r0
   14b78:	ldrb	r0, [r0, r1]
   14b7c:	orr	r1, r0, #2
   14b80:	cmp	r1, #2
   14b84:	beq	14cb0 <sav_parse_very_long_string_record+0x320>
   14b88:	ldr	r1, [pc, #556]	; 14dbc <sav_parse_very_long_string_record+0x42c>
   14b8c:	add	r1, pc, r1
   14b90:	ldrb	r0, [r1, r0]!
   14b94:	add	r9, r1, #1
   14b98:	rsb	r6, r0, #0
   14b9c:	ldrb	r0, [r9]
   14ba0:	cmp	r0, #5
   14ba4:	bhi	14ca4 <sav_parse_very_long_string_record+0x314>
   14ba8:	add	r1, pc, #4
   14bac:	ldr	r0, [r1, r0, lsl #2]
   14bb0:	add	pc, r1, r0
   14bb4:	.word	0x00000018
   14bb8:	.word	0x0000005c
   14bbc:	.word	0x0000009c
   14bc0:	.word	0x000000d8
   14bc4:	.word	0x000000e0
   14bc8:	.word	0x000000ec
   14bcc:	ldr	r0, [pc, #492]	; 14dc0 <sav_parse_very_long_string_record+0x430>
   14bd0:	add	r0, pc, r0
   14bd4:	str	r0, [sp]
   14bd8:	add	r0, sp, #56	; 0x38
   14bdc:	ldr	r1, [sp, #40]	; 0x28
   14be0:	ldr	r2, [sp, #32]
   14be4:	mov	r3, #40	; 0x28
   14be8:	bl	4d34 <bsearch@plt>
   14bec:	cmp	r0, #0
   14bf0:	beq	14c08 <sav_parse_very_long_string_record+0x278>
   14bf4:	ldr	r0, [r0, #36]	; 0x24
   14bf8:	ldr	r1, [sp, #28]
   14bfc:	ldr	r1, [r1, #44]	; 0x2c
   14c00:	ldr	r0, [r1, r0, lsl #2]
   14c04:	str	r7, [r0, #20]
   14c08:	mvn	lr, #1
   14c0c:	b	14ca4 <sav_parse_very_long_string_record+0x314>
   14c10:	mov	r4, sl
   14c14:	mov	sl, r7
   14c18:	add	r7, sp, #56	; 0x38
   14c1c:	mov	r0, r7
   14c20:	mov	r1, r8
   14c24:	mov	r5, r8
   14c28:	ldr	r8, [sp, #48]	; 0x30
   14c2c:	mov	r2, r8
   14c30:	bl	4998 <memcpy@plt>
   14c34:	mvn	lr, #1
   14c38:	mov	r0, #0
   14c3c:	strb	r0, [r7, r8]
   14c40:	mov	r7, sl
   14c44:	mov	sl, r4
   14c48:	mov	r8, r5
   14c4c:	b	14ca4 <sav_parse_very_long_string_record+0x314>
   14c50:	ldrb	r0, [sl]
   14c54:	cmp	r0, #0
   14c58:	beq	14ca4 <sav_parse_very_long_string_record+0x314>
   14c5c:	sub	r0, r0, #48	; 0x30
   14c60:	uxtb	r1, r0
   14c64:	eor	r1, r1, lr
   14c68:	movw	r2, #52429	; 0xcccd
   14c6c:	movt	r2, #52428	; 0xcccc
   14c70:	umull	r1, r2, r1, r2
   14c74:	cmp	r7, r2, lsr #3
   14c78:	bhi	14ce0 <sav_parse_very_long_string_record+0x350>
   14c7c:	add	r1, r7, r7, lsl #2
   14c80:	lsl	r1, r1, #1
   14c84:	uxtab	r7, r1, r0
   14c88:	b	14ca4 <sav_parse_very_long_string_record+0x314>
   14c8c:	mov	r8, sl
   14c90:	b	14ca4 <sav_parse_very_long_string_record+0x314>
   14c94:	sub	r0, sl, r8
   14c98:	str	r0, [sp, #48]	; 0x30
   14c9c:	b	14ca4 <sav_parse_very_long_string_record+0x314>
   14ca0:	mov	r7, #0
   14ca4:	add	r9, r9, #1
   14ca8:	adds	r6, r6, #1
   14cac:	bne	14b9c <sav_parse_very_long_string_record+0x20c>
   14cb0:	ldr	r3, [sp, #44]	; 0x2c
   14cb4:	cmp	r3, #1
   14cb8:	beq	14ce8 <sav_parse_very_long_string_record+0x358>
   14cbc:	ldr	r0, [pc, #256]	; 14dc4 <sav_parse_very_long_string_record+0x434>
   14cc0:	add	r0, pc, r0
   14cc4:	ldrb	r2, [r0, r3]
   14cc8:	add	sl, sl, #1
   14ccc:	ldr	r0, [sp, #36]	; 0x24
   14cd0:	cmp	sl, r0
   14cd4:	mov	r9, #1
   14cd8:	bne	14a1c <sav_parse_very_long_string_record+0x8c>
   14cdc:	b	14ce8 <sav_parse_very_long_string_record+0x358>
   14ce0:	add	sl, sl, #1
   14ce4:	ldr	r3, [sp, #44]	; 0x2c
   14ce8:	mov	r0, #26624	; 0x6800
   14cec:	mov	r1, #1
   14cf0:	tst	r1, r0, lsr r3
   14cf4:	beq	14d1c <sav_parse_very_long_string_record+0x38c>
   14cf8:	mov	r8, #0
   14cfc:	ldr	r0, [sp, #36]	; 0x24
   14d00:	cmp	sl, r0
   14d04:	ldr	r9, [sp, #20]
   14d08:	ldr	r5, [sp, #28]
   14d0c:	ldr	r6, [sp, #16]
   14d10:	ldr	r7, [sp, #12]
   14d14:	beq	14d74 <sav_parse_very_long_string_record+0x3e4>
   14d18:	b	14d2c <sav_parse_very_long_string_record+0x39c>
   14d1c:	ldr	r9, [sp, #20]
   14d20:	ldr	r5, [sp, #28]
   14d24:	ldr	r6, [sp, #16]
   14d28:	ldr	r7, [sp, #12]
   14d2c:	ldr	r0, [r5, #24]
   14d30:	mov	r8, #5
   14d34:	cmp	r0, #0
   14d38:	beq	14d74 <sav_parse_very_long_string_record+0x3e4>
   14d3c:	ldr	r0, [sp, #36]	; 0x24
   14d40:	sub	r0, r0, sl
   14d44:	str	r7, [sp]
   14d48:	stmib	sp, {r0, sl}
   14d4c:	sub	r3, sl, r6
   14d50:	ldr	r2, [pc, #112]	; 14dc8 <sav_parse_very_long_string_record+0x438>
   14d54:	add	r2, pc, r2
   14d58:	mov	r0, r9
   14d5c:	ldr	r1, [sp, #24]
   14d60:	bl	4d04 <snprintf@plt>
   14d64:	ldr	r2, [r5, #24]
   14d68:	ldr	r1, [r5, #40]	; 0x28
   14d6c:	mov	r0, r9
   14d70:	blx	r2
   14d74:	ldr	r0, [sp, #40]	; 0x28
   14d78:	cmp	r0, #0
   14d7c:	beq	14d84 <sav_parse_very_long_string_record+0x3f4>
   14d80:	bl	4938 <free@plt>
   14d84:	cmp	r9, #0
   14d88:	beq	14d94 <sav_parse_very_long_string_record+0x404>
   14d8c:	mov	r0, r9
   14d90:	bl	4938 <free@plt>
   14d94:	mov	r0, r8
   14d98:	sub	sp, fp, #28
   14d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14da0:	.word	0x00011c87
   14da4:	.word	0x00011c6d
   14da8:	.word	0x00011bea
   14dac:	.word	0x00011c5d
   14db0:	.word	0x00011bfb
   14db4:	.word	0x00011b7d
   14db8:	.word	0x00011bc2
   14dbc:	.word	0x00011bb9
   14dc0:	.word	0xfffffdb4
   14dc4:	.word	0x00011a67
   14dc8:	.word	0x00011a99

00014dcc <compare_varlookups>:
   14dcc:	b	4878 <strcmp@plt>

00014dd0 <sav_parse_time>:
   14dd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dd4:	add	fp, sp, #28
   14dd8:	sub	sp, sp, #36	; 0x24
   14ddc:	sub	sp, sp, #8192	; 0x2000
   14de0:	mov	r8, r3
   14de4:	mov	r3, r1
   14de8:	add	lr, r0, r1
   14dec:	cmp	r1, #0
   14df0:	beq	15050 <sav_parse_time+0x280>
   14df4:	str	r3, [sp, #16]
   14df8:	str	r8, [sp, #20]
   14dfc:	mov	r6, #0
   14e00:	mov	r1, #1
   14e04:	mov	sl, #1
   14e08:	str	r0, [sp, #12]
   14e0c:	mov	r7, r0
   14e10:	str	r2, [sp, #28]
   14e14:	str	lr, [sp, #24]
   14e18:	ldr	r0, [pc, #756]	; 15114 <sav_parse_time+0x344>
   14e1c:	add	r0, pc, r0
   14e20:	ldrb	r9, [r0, sl]
   14e24:	ldr	r0, [pc, #748]	; 15118 <sav_parse_time+0x348>
   14e28:	add	r0, pc, r0
   14e2c:	ldrb	r0, [r0, sl]
   14e30:	ldr	r2, [pc, #740]	; 1511c <sav_parse_time+0x34c>
   14e34:	add	r2, pc, r2
   14e38:	add	r4, r2, r0
   14e3c:	mov	r0, #218	; 0xda
   14e40:	tst	r1, r0, lsr sl
   14e44:	bne	14e50 <sav_parse_time+0x80>
   14e48:	mov	ip, r4
   14e4c:	b	14eb4 <sav_parse_time+0xe4>
   14e50:	ldr	r0, [pc, #712]	; 15120 <sav_parse_time+0x350>
   14e54:	add	r0, pc, r0
   14e58:	ldrb	r0, [r0, sl]
   14e5c:	add	ip, r4, r0
   14e60:	sub	lr, ip, #1
   14e64:	cmp	lr, r4
   14e68:	bcc	14ea8 <sav_parse_time+0xd8>
   14e6c:	ldrb	r1, [r7]
   14e70:	mov	r3, r4
   14e74:	sub	r8, lr, r3
   14e78:	mov	r5, r3
   14e7c:	ldrb	r2, [r5, r8, asr #1]!
   14e80:	cmp	r1, r2
   14e84:	bcs	14e98 <sav_parse_time+0xc8>
   14e88:	sub	lr, r5, #1
   14e8c:	cmp	lr, r3
   14e90:	bcs	14e74 <sav_parse_time+0xa4>
   14e94:	b	14ea8 <sav_parse_time+0xd8>
   14e98:	bls	14f3c <sav_parse_time+0x16c>
   14e9c:	add	r3, r5, #1
   14ea0:	cmp	lr, r3
   14ea4:	bcs	14e74 <sav_parse_time+0xa4>
   14ea8:	add	r9, r0, r9
   14eac:	ldr	lr, [sp, #24]
   14eb0:	mov	r1, #1
   14eb4:	movw	r0, #4022	; 0xfb6
   14eb8:	tst	r1, r0, lsr sl
   14ebc:	bne	14ec8 <sav_parse_time+0xf8>
   14ec0:	ldr	r2, [sp, #28]
   14ec4:	b	14f68 <sav_parse_time+0x198>
   14ec8:	ldr	r0, [pc, #596]	; 15124 <sav_parse_time+0x354>
   14ecc:	add	r0, pc, r0
   14ed0:	ldrb	r8, [r0, sl]
   14ed4:	add	r0, ip, r8, lsl #1
   14ed8:	sub	r0, r0, #2
   14edc:	cmp	r0, ip
   14ee0:	bcs	14eec <sav_parse_time+0x11c>
   14ee4:	ldr	r2, [sp, #28]
   14ee8:	b	14f64 <sav_parse_time+0x194>
   14eec:	ldrb	r1, [r7]
   14ef0:	mov	r5, ip
   14ef4:	mvn	r4, #1
   14ef8:	sub	r2, r0, r5
   14efc:	and	r2, r4, r2, asr #1
   14f00:	mov	r3, r5
   14f04:	ldrb	r2, [r3, r2]!
   14f08:	cmp	r1, r2
   14f0c:	bcs	14f20 <sav_parse_time+0x150>
   14f10:	sub	r0, r3, #2
   14f14:	cmp	r0, r5
   14f18:	bcs	14ef8 <sav_parse_time+0x128>
   14f1c:	b	14f5c <sav_parse_time+0x18c>
   14f20:	ldrb	r2, [r3, #1]
   14f24:	cmp	r1, r2
   14f28:	bls	14f54 <sav_parse_time+0x184>
   14f2c:	add	r5, r3, #2
   14f30:	cmp	r0, r5
   14f34:	bcs	14ef8 <sav_parse_time+0x128>
   14f38:	b	14f5c <sav_parse_time+0x18c>
   14f3c:	sub	r0, r9, r4
   14f40:	add	r9, r0, r5
   14f44:	ldr	lr, [sp, #24]
   14f48:	ldr	r2, [sp, #28]
   14f4c:	mov	r1, #1
   14f50:	b	14f68 <sav_parse_time+0x198>
   14f54:	sub	r0, r3, ip
   14f58:	asr	r8, r0, #1
   14f5c:	ldr	r2, [sp, #28]
   14f60:	mov	r1, #1
   14f64:	add	r9, r8, r9
   14f68:	movw	r0, #27349	; 0x6ad5
   14f6c:	movt	r0, #1877	; 0x755
   14f70:	tst	r1, r0, lsr r9
   14f74:	bne	15010 <sav_parse_time+0x240>
   14f78:	ldr	r0, [pc, #424]	; 15128 <sav_parse_time+0x358>
   14f7c:	add	r0, pc, r0
   14f80:	ldrb	r0, [r0, r9]
   14f84:	movw	r3, #8197	; 0x2005
   14f88:	tst	r1, r3, lsr r0
   14f8c:	bne	15010 <sav_parse_time+0x240>
   14f90:	ldr	r1, [pc, #404]	; 1512c <sav_parse_time+0x35c>
   14f94:	add	r1, pc, r1
   14f98:	ldrb	r0, [r1, r0]!
   14f9c:	add	r3, r1, #1
   14fa0:	rsb	r4, r0, #0
   14fa4:	ldrb	r0, [r3]
   14fa8:	cmp	r0, #4
   14fac:	bhi	15004 <sav_parse_time+0x234>
   14fb0:	add	r1, pc, #4
   14fb4:	ldr	r0, [r1, r0, lsl #2]
   14fb8:	add	pc, r1, r0
   14fbc:	.word	0x00000014
   14fc0:	.word	0x00000028
   14fc4:	.word	0x00000030
   14fc8:	.word	0x0000003c
   14fcc:	.word	0x00000044
   14fd0:	ldrb	r0, [r7]
   14fd4:	add	r1, r6, r6, lsl #2
   14fd8:	add	r0, r0, r1, lsl #1
   14fdc:	sub	r6, r0, #48	; 0x30
   14fe0:	b	15004 <sav_parse_time+0x234>
   14fe4:	mov	r6, #0
   14fe8:	b	15004 <sav_parse_time+0x234>
   14fec:	ldrb	r0, [r7]
   14ff0:	sub	r6, r0, #48	; 0x30
   14ff4:	b	15004 <sav_parse_time+0x234>
   14ff8:	str	r6, [r2, #8]
   14ffc:	b	15004 <sav_parse_time+0x234>
   15000:	str	r6, [r2, #4]
   15004:	add	r3, r3, #1
   15008:	adds	r4, r4, #1
   1500c:	bne	14fa4 <sav_parse_time+0x1d4>
   15010:	ldr	r0, [pc, #280]	; 15130 <sav_parse_time+0x360>
   15014:	add	r0, pc, r0
   15018:	ldrb	sl, [r0, r9]
   1501c:	mov	r1, #1
   15020:	movw	r0, #10836	; 0x2a54
   15024:	movt	r0, #1877	; 0x755
   15028:	tst	r1, r0, lsr r9
   1502c:	bne	150b0 <sav_parse_time+0x2e0>
   15030:	add	r7, r7, #1
   15034:	cmp	r7, lr
   15038:	bne	14e18 <sav_parse_time+0x48>
   1503c:	add	r8, sp, #12
   15040:	ldm	r8, {r0, r3, r8}
   15044:	cmp	r7, lr
   15048:	bne	150b8 <sav_parse_time+0x2e8>
   1504c:	b	15064 <sav_parse_time+0x294>
   15050:	mov	r6, #0
   15054:	mov	sl, #1
   15058:	mov	r7, r0
   1505c:	cmp	r7, lr
   15060:	bne	150b8 <sav_parse_time+0x2e8>
   15064:	ldr	r1, [pc, #200]	; 15134 <sav_parse_time+0x364>
   15068:	add	r1, pc, r1
   1506c:	ldrb	r5, [r1, sl]
   15070:	movw	ip, #8197	; 0x2005
   15074:	mov	r1, #1
   15078:	tst	r1, ip, lsr r5
   1507c:	bne	150b8 <sav_parse_time+0x2e8>
   15080:	ldr	r1, [pc, #176]	; 15138 <sav_parse_time+0x368>
   15084:	add	r1, pc, r1
   15088:	ldrb	ip, [r1, r5]!
   1508c:	add	r5, r1, #1
   15090:	rsb	r1, ip, #0
   15094:	ldrb	r4, [r5]
   15098:	cmp	r4, #5
   1509c:	streq	r6, [r2]
   150a0:	add	r5, r5, #1
   150a4:	adds	r1, r1, #1
   150a8:	bne	15094 <sav_parse_time+0x2c4>
   150ac:	b	150b8 <sav_parse_time+0x2e8>
   150b0:	add	r8, sp, #12
   150b4:	ldm	r8, {r0, r3, r8}
   150b8:	cmp	sl, #12
   150bc:	blt	150cc <sav_parse_time+0x2fc>
   150c0:	mov	r5, #0
   150c4:	cmp	r7, lr
   150c8:	beq	15108 <sav_parse_time+0x338>
   150cc:	mov	r5, #29
   150d0:	cmp	r8, #0
   150d4:	beq	15108 <sav_parse_time+0x338>
   150d8:	ldr	r6, [fp, #8]
   150dc:	str	r3, [sp]
   150e0:	str	r0, [sp, #4]
   150e4:	add	r7, sp, #32
   150e8:	ldr	r2, [pc, #76]	; 1513c <sav_parse_time+0x36c>
   150ec:	add	r2, pc, r2
   150f0:	mov	r0, r7
   150f4:	mov	r1, #8192	; 0x2000
   150f8:	bl	4d04 <snprintf@plt>
   150fc:	mov	r0, r7
   15100:	mov	r1, r6
   15104:	blx	r8
   15108:	mov	r0, r5
   1510c:	sub	sp, fp, #28
   15110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15114:	.word	0x00011a25
   15118:	.word	0x00011a0c
   1511c:	.word	0x000119e8
   15120:	.word	0x000119fa
   15124:	.word	0x0001198f
   15128:	.word	0x00011907
   1512c:	.word	0x0001190a
   15130:	.word	0x00011854
   15134:	.word	0x00011844
   15138:	.word	0x0001181a
   1513c:	.word	0x00011a34

00015140 <sav_parse_date>:
   15140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15144:	add	fp, sp, #28
   15148:	sub	sp, sp, #36	; 0x24
   1514c:	sub	sp, sp, #8192	; 0x2000
   15150:	mov	r4, r3
   15154:	mov	r9, r0
   15158:	add	r6, r0, r1
   1515c:	str	r1, [sp, #20]
   15160:	cmp	r1, #0
   15164:	str	r0, [sp, #16]
   15168:	beq	15438 <sav_parse_date+0x2f8>
   1516c:	str	r4, [sp, #12]
   15170:	mov	ip, #0
   15174:	mov	r8, #1
   15178:	str	r6, [sp, #24]
   1517c:	b	1519c <sav_parse_date+0x5c>
   15180:	sub	r0, lr, r4
   15184:	add	lr, r0, r6
   15188:	ldr	r6, [sp, #24]
   1518c:	ldr	ip, [sp, #28]
   15190:	ldr	r5, [pc, #932]	; 1553c <sav_parse_date+0x3fc>
   15194:	add	r5, pc, r5
   15198:	b	152e0 <sav_parse_date+0x1a0>
   1519c:	ldr	r0, [pc, #868]	; 15508 <sav_parse_date+0x3c8>
   151a0:	add	r0, pc, r0
   151a4:	ldrb	lr, [r0, r8]
   151a8:	ldr	r0, [pc, #860]	; 1550c <sav_parse_date+0x3cc>
   151ac:	add	r0, pc, r0
   151b0:	ldrb	r0, [r0, r8]
   151b4:	ldr	r1, [pc, #852]	; 15510 <sav_parse_date+0x3d0>
   151b8:	add	r1, pc, r1
   151bc:	add	r4, r1, r0
   151c0:	uxtb	r0, r8
   151c4:	cmp	r0, #0
   151c8:	beq	151d4 <sav_parse_date+0x94>
   151cc:	cmp	r0, #47	; 0x2f
   151d0:	bne	151dc <sav_parse_date+0x9c>
   151d4:	mov	sl, r4
   151d8:	b	15244 <sav_parse_date+0x104>
   151dc:	str	ip, [sp, #28]
   151e0:	ldr	r0, [pc, #812]	; 15514 <sav_parse_date+0x3d4>
   151e4:	add	r0, pc, r0
   151e8:	ldrb	r3, [r0, r8]
   151ec:	add	sl, r4, r3
   151f0:	sub	r0, sl, #1
   151f4:	cmp	r0, r4
   151f8:	bcc	15238 <sav_parse_date+0xf8>
   151fc:	ldrb	r1, [r9]
   15200:	mov	r5, r4
   15204:	sub	ip, r0, r5
   15208:	mov	r6, r5
   1520c:	ldrb	r7, [r6, ip, asr #1]!
   15210:	cmp	r1, r7
   15214:	bcs	15228 <sav_parse_date+0xe8>
   15218:	sub	r0, r6, #1
   1521c:	cmp	r0, r5
   15220:	bcs	15204 <sav_parse_date+0xc4>
   15224:	b	15238 <sav_parse_date+0xf8>
   15228:	bls	15180 <sav_parse_date+0x40>
   1522c:	add	r5, r6, #1
   15230:	cmp	r0, r5
   15234:	bcs	15204 <sav_parse_date+0xc4>
   15238:	add	lr, r3, lr
   1523c:	ldr	r6, [sp, #24]
   15240:	ldr	ip, [sp, #28]
   15244:	ldr	r0, [pc, #716]	; 15518 <sav_parse_date+0x3d8>
   15248:	add	r0, pc, r0
   1524c:	ldrb	r4, [r0, r8]
   15250:	cmp	r4, #0
   15254:	beq	152bc <sav_parse_date+0x17c>
   15258:	add	r0, sl, r4, lsl #1
   1525c:	sub	r0, r0, #2
   15260:	cmp	r0, sl
   15264:	bcc	152d4 <sav_parse_date+0x194>
   15268:	mov	r8, r6
   1526c:	ldrb	r1, [r9]
   15270:	mov	r6, sl
   15274:	mvn	r3, #1
   15278:	sub	r7, r0, r6
   1527c:	and	r7, r3, r7, asr #1
   15280:	mov	r5, r6
   15284:	ldrb	r7, [r5, r7]!
   15288:	cmp	r1, r7
   1528c:	bcs	152a0 <sav_parse_date+0x160>
   15290:	sub	r0, r5, #2
   15294:	cmp	r0, r6
   15298:	bcs	15278 <sav_parse_date+0x138>
   1529c:	b	152d0 <sav_parse_date+0x190>
   152a0:	ldrb	r7, [r5, #1]
   152a4:	cmp	r1, r7
   152a8:	bls	152c8 <sav_parse_date+0x188>
   152ac:	add	r6, r5, #2
   152b0:	cmp	r0, r6
   152b4:	bcs	15278 <sav_parse_date+0x138>
   152b8:	b	152d0 <sav_parse_date+0x190>
   152bc:	ldr	r5, [pc, #600]	; 1551c <sav_parse_date+0x3dc>
   152c0:	add	r5, pc, r5
   152c4:	b	152e0 <sav_parse_date+0x1a0>
   152c8:	sub	r0, r5, sl
   152cc:	asr	r4, r0, #1
   152d0:	mov	r6, r8
   152d4:	ldr	r5, [pc, #580]	; 15520 <sav_parse_date+0x3e0>
   152d8:	add	r5, pc, r5
   152dc:	add	lr, r4, lr
   152e0:	ldr	r0, [pc, #572]	; 15524 <sav_parse_date+0x3e4>
   152e4:	add	r0, pc, r0
   152e8:	ldrb	r3, [r0, lr]
   152ec:	ldr	r0, [pc, #564]	; 15528 <sav_parse_date+0x3e8>
   152f0:	add	r0, pc, r0
   152f4:	ldrb	r0, [r0, r3]
   152f8:	cmp	r0, #0
   152fc:	ldrbne	r1, [r5, r0]
   15300:	cmpne	r1, #0
   15304:	beq	15408 <sav_parse_date+0x2c8>
   15308:	add	r0, r5, r0
   1530c:	add	r5, r0, #1
   15310:	rsb	r4, r1, #0
   15314:	ldrb	r0, [r5]
   15318:	cmp	r0, #15
   1531c:	bhi	153fc <sav_parse_date+0x2bc>
   15320:	add	r1, pc, #4
   15324:	ldr	r0, [r1, r0, lsl #2]
   15328:	add	pc, r1, r0
   1532c:	.word	0x00000040
   15330:	.word	0x000000d0
   15334:	.word	0x00000060
   15338:	.word	0x00000068
   1533c:	.word	0x00000070
   15340:	.word	0x00000078
   15344:	.word	0x00000080
   15348:	.word	0x00000088
   1534c:	.word	0x00000090
   15350:	.word	0x00000098
   15354:	.word	0x000000a0
   15358:	.word	0x000000a8
   1535c:	.word	0x000000b0
   15360:	.word	0x000000b8
   15364:	.word	0x000000c0
   15368:	.word	0x000000c8
   1536c:	add	r0, ip, ip, lsl #2
   15370:	lsl	r0, r0, #1
   15374:	ldrb	r1, [r9]
   15378:	sub	r1, r1, #48	; 0x30
   1537c:	uxtb	r7, r1
   15380:	cmp	r7, #10
   15384:	uxtabcc	ip, r0, r1
   15388:	b	153fc <sav_parse_date+0x2bc>
   1538c:	mov	ip, #0
   15390:	b	153fc <sav_parse_date+0x2bc>
   15394:	str	ip, [r2, #12]
   15398:	b	153fc <sav_parse_date+0x2bc>
   1539c:	mov	r0, #0
   153a0:	b	153f8 <sav_parse_date+0x2b8>
   153a4:	mov	r0, #1
   153a8:	b	153f8 <sav_parse_date+0x2b8>
   153ac:	mov	r0, #2
   153b0:	b	153f8 <sav_parse_date+0x2b8>
   153b4:	mov	r0, #3
   153b8:	b	153f8 <sav_parse_date+0x2b8>
   153bc:	mov	r0, #4
   153c0:	b	153f8 <sav_parse_date+0x2b8>
   153c4:	mov	r0, #5
   153c8:	b	153f8 <sav_parse_date+0x2b8>
   153cc:	mov	r0, #6
   153d0:	b	153f8 <sav_parse_date+0x2b8>
   153d4:	mov	r0, #7
   153d8:	b	153f8 <sav_parse_date+0x2b8>
   153dc:	mov	r0, #8
   153e0:	b	153f8 <sav_parse_date+0x2b8>
   153e4:	mov	r0, #9
   153e8:	b	153f8 <sav_parse_date+0x2b8>
   153ec:	mov	r0, #10
   153f0:	b	153f8 <sav_parse_date+0x2b8>
   153f4:	mov	r0, #11
   153f8:	str	r0, [r2, #16]
   153fc:	add	r5, r5, #1
   15400:	adds	r4, r4, #1
   15404:	bne	15314 <sav_parse_date+0x1d4>
   15408:	ldr	r0, [pc, #284]	; 1552c <sav_parse_date+0x3ec>
   1540c:	add	r0, pc, r0
   15410:	ldrb	r8, [r0, r3]
   15414:	cmp	r3, #1
   15418:	beq	154a0 <sav_parse_date+0x360>
   1541c:	add	r9, r9, #1
   15420:	cmp	r9, r6
   15424:	bne	1519c <sav_parse_date+0x5c>
   15428:	ldr	r4, [sp, #12]
   1542c:	cmp	r9, r6
   15430:	bne	154a4 <sav_parse_date+0x364>
   15434:	b	15448 <sav_parse_date+0x308>
   15438:	mov	r8, #1
   1543c:	mov	ip, #0
   15440:	cmp	r9, r6
   15444:	bne	154a4 <sav_parse_date+0x364>
   15448:	ldr	r0, [pc, #224]	; 15530 <sav_parse_date+0x3f0>
   1544c:	add	r0, pc, r0
   15450:	ldrb	r0, [r0, r8]
   15454:	ldr	r3, [pc, #216]	; 15534 <sav_parse_date+0x3f4>
   15458:	add	r3, pc, r3
   1545c:	ldrb	r1, [r3, r0]
   15460:	cmp	r1, #0
   15464:	beq	154a4 <sav_parse_date+0x364>
   15468:	add	r0, r3, r0
   1546c:	add	r0, r0, #1
   15470:	rsb	r1, r1, #0
   15474:	add	r3, ip, #100	; 0x64
   15478:	ldrb	r7, [r0]
   1547c:	cmp	r7, #1
   15480:	bne	15490 <sav_parse_date+0x350>
   15484:	cmp	ip, #69	; 0x45
   15488:	strgt	ip, [r2, #20]
   1548c:	strle	r3, [r2, #20]
   15490:	add	r0, r0, #1
   15494:	adds	r1, r1, #1
   15498:	bne	15478 <sav_parse_date+0x338>
   1549c:	b	154a4 <sav_parse_date+0x364>
   154a0:	ldr	r4, [sp, #12]
   154a4:	cmp	r8, #47	; 0x2f
   154a8:	blt	154b8 <sav_parse_date+0x378>
   154ac:	mov	r5, #0
   154b0:	cmp	r9, r6
   154b4:	beq	154fc <sav_parse_date+0x3bc>
   154b8:	mov	r5, #29
   154bc:	cmp	r4, #0
   154c0:	beq	154fc <sav_parse_date+0x3bc>
   154c4:	ldr	r6, [fp, #8]
   154c8:	ldr	r3, [sp, #20]
   154cc:	str	r3, [sp]
   154d0:	ldr	r0, [sp, #16]
   154d4:	str	r0, [sp, #4]
   154d8:	add	r7, sp, #32
   154dc:	ldr	r2, [pc, #84]	; 15538 <sav_parse_date+0x3f8>
   154e0:	add	r2, pc, r2
   154e4:	mov	r0, r7
   154e8:	mov	r1, #8192	; 0x2000
   154ec:	bl	4d04 <snprintf@plt>
   154f0:	mov	r0, r7
   154f4:	mov	r1, r6
   154f8:	blx	r4
   154fc:	mov	r0, r5
   15500:	sub	sp, fp, #28
   15504:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15508:	.word	0x000117a4
   1550c:	.word	0x00011768
   15510:	.word	0x00011701
   15514:	.word	0x00011790
   15518:	.word	0x000118a8
   1551c:	.word	0x000117de
   15520:	.word	0x000117c6
   15524:	.word	0x000116c0
   15528:	.word	0x00011774
   1552c:	.word	0x0001161e
   15530:	.word	0x00011674
   15534:	.word	0x00011646
   15538:	.word	0x00011666
   1553c:	.word	0x0001190a

00015540 <sav_parse_timestamp>:
   15540:	push	{r4, r5, fp, lr}
   15544:	add	fp, sp, #8
   15548:	sub	sp, sp, #56	; 0x38
   1554c:	mov	r5, r1
   15550:	mov	r4, r0
   15554:	add	r2, sp, #8
   15558:	vmov.i32	q8, #0	; 0x00000000
   1555c:	add	r0, r2, #28
   15560:	vst1.32	{d16-d17}, [r0]
   15564:	add	r0, r2, #16
   15568:	vst1.64	{d16-d17}, [r0]
   1556c:	mov	r0, #32
   15570:	mov	r1, r2
   15574:	vst1.64	{d16-d17}, [r1], r0
   15578:	mvn	r0, #0
   1557c:	str	r0, [r1]
   15580:	ldr	r3, [r4, #24]
   15584:	ldr	r0, [r4, #40]	; 0x28
   15588:	str	r0, [sp]
   1558c:	add	r0, r5, #101	; 0x65
   15590:	mov	r1, #8
   15594:	bl	495c <sav_parse_time@plt>
   15598:	cmp	r0, #0
   1559c:	bne	155c4 <sav_parse_timestamp+0x84>
   155a0:	ldr	r3, [r4, #24]
   155a4:	ldr	r0, [r4, #40]	; 0x28
   155a8:	str	r0, [sp]
   155ac:	add	r0, r5, #92	; 0x5c
   155b0:	add	r2, sp, #8
   155b4:	mov	r1, #9
   155b8:	bl	4b00 <sav_parse_date@plt>
   155bc:	cmp	r0, #0
   155c0:	beq	155cc <sav_parse_timestamp+0x8c>
   155c4:	sub	sp, fp, #8
   155c8:	pop	{r4, r5, fp, pc}
   155cc:	add	r0, sp, #8
   155d0:	bl	48cc <mktime@plt>
   155d4:	str	r0, [r4, #324]	; 0x144
   155d8:	mov	r0, #0
   155dc:	sub	sp, fp, #8
   155e0:	pop	{r4, r5, fp, pc}

000155e4 <readstat_parse_sav>:
   155e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   155e8:	add	fp, sp, #24
   155ec:	sub	sp, sp, #248	; 0xf8
   155f0:	mov	r6, r2
   155f4:	mov	r2, r1
   155f8:	mov	r7, r0
   155fc:	ldr	r4, [r0, #32]
   15600:	ldr	r3, [r4]
   15604:	ldr	r1, [r4, #20]
   15608:	mov	r0, r2
   1560c:	blx	r3
   15610:	cmn	r0, #1
   15614:	beq	15684 <readstat_parse_sav+0xa0>
   15618:	ldr	r3, [r4, #8]
   1561c:	ldr	r2, [r4, #20]
   15620:	mov	r9, #0
   15624:	mov	r0, #0
   15628:	mov	r1, #2
   1562c:	blx	r3
   15630:	mov	r8, #15
   15634:	cmn	r0, #1
   15638:	beq	15780 <readstat_parse_sav+0x19c>
   1563c:	mov	r5, r0
   15640:	ldr	r3, [r4, #8]
   15644:	ldr	r2, [r4, #20]
   15648:	mov	r9, #0
   1564c:	mov	r0, #0
   15650:	mov	r1, #0
   15654:	blx	r3
   15658:	cmn	r0, #1
   1565c:	beq	1568c <readstat_parse_sav+0xa8>
   15660:	ldr	r3, [r4, #12]
   15664:	ldr	r2, [r4, #20]
   15668:	add	r0, sp, #68	; 0x44
   1566c:	mov	r1, #176	; 0xb0
   15670:	blx	r3
   15674:	cmp	r0, #176	; 0xb0
   15678:	bcs	15694 <readstat_parse_sav+0xb0>
   1567c:	mov	r8, #2
   15680:	b	15780 <readstat_parse_sav+0x19c>
   15684:	mov	r8, #1
   15688:	b	1579c <readstat_parse_sav+0x1b8>
   1568c:	mov	r9, #0
   15690:	b	15780 <readstat_parse_sav+0x19c>
   15694:	add	r0, sp, #68	; 0x44
   15698:	mov	r1, r4
   1569c:	bl	4ad0 <sav_ctx_init@plt>
   156a0:	cmp	r0, #0
   156a4:	beq	1573c <readstat_parse_sav+0x158>
   156a8:	mov	r9, r0
   156ac:	add	r0, r7, #16
   156b0:	vld1.32	{d16-d17}, [r0]
   156b4:	mov	r0, #48	; 0x30
   156b8:	mov	r1, r7
   156bc:	vld1.32	{d18-d19}, [r1], r0
   156c0:	add	r0, r9, #16
   156c4:	vst1.32	{d16-d17}, [r0]
   156c8:	mov	r0, #32
   156cc:	mov	r2, r9
   156d0:	vst1.32	{d18-d19}, [r2], r0
   156d4:	ldr	r0, [r7, #36]	; 0x24
   156d8:	str	r0, [r9, #56]	; 0x38
   156dc:	ldr	r0, [r7, #40]	; 0x28
   156e0:	str	r6, [r9, #40]	; 0x28
   156e4:	str	r5, [r2]
   156e8:	str	r0, [r9, #60]	; 0x3c
   156ec:	ldr	r0, [r1]
   156f0:	cmp	r0, #1
   156f4:	strge	r0, [r9, #360]	; 0x168
   156f8:	ldr	r1, [r9, #352]	; 0x160
   156fc:	cmn	r1, #1
   15700:	beq	15748 <readstat_parse_sav+0x164>
   15704:	ldr	r0, [r9, #360]	; 0x168
   15708:	sub	r0, r1, r0
   1570c:	cmn	r0, #1
   15710:	strle	r1, [r9, #360]	; 0x168
   15714:	movle	r0, #0
   15718:	str	r0, [r9, #356]	; 0x164
   1571c:	ldr	r1, [r7, #44]	; 0x2c
   15720:	cmp	r1, r0
   15724:	mov	r2, r0
   15728:	movlt	r2, r1
   1572c:	cmp	r1, #0
   15730:	movle	r2, r0
   15734:	str	r2, [r9, #356]	; 0x164
   15738:	b	15754 <readstat_parse_sav+0x170>
   1573c:	mov	r8, #5
   15740:	mov	r9, #0
   15744:	b	15780 <readstat_parse_sav+0x19c>
   15748:	ldr	r0, [r7, #44]	; 0x2c
   1574c:	cmp	r0, #1
   15750:	strge	r0, [r9, #356]	; 0x164
   15754:	add	r7, sp, #68	; 0x44
   15758:	mov	r0, r9
   1575c:	mov	r1, r7
   15760:	bl	486c <sav_parse_timestamp@plt>
   15764:	cmp	r0, #0
   15768:	bne	1577c <readstat_parse_sav+0x198>
   1576c:	mov	r0, r9
   15770:	bl	15928 <sav_parse_records_pass1>
   15774:	cmp	r0, #0
   15778:	beq	157a8 <readstat_parse_sav+0x1c4>
   1577c:	mov	r8, r0
   15780:	ldr	r1, [r4, #4]
   15784:	ldr	r0, [r4, #20]
   15788:	blx	r1
   1578c:	cmp	r9, #0
   15790:	beq	1579c <readstat_parse_sav+0x1b8>
   15794:	mov	r0, r9
   15798:	bl	498c <sav_ctx_free@plt>
   1579c:	mov	r0, r8
   157a0:	sub	sp, fp, #24
   157a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   157a8:	ldr	r3, [r4, #8]
   157ac:	ldr	r2, [r4, #20]
   157b0:	mov	r0, #176	; 0xb0
   157b4:	mov	r1, #0
   157b8:	blx	r3
   157bc:	cmn	r0, #1
   157c0:	beq	15780 <readstat_parse_sav+0x19c>
   157c4:	mov	r0, r9
   157c8:	bl	15aec <sav_update_progress>
   157cc:	cmp	r0, #0
   157d0:	bne	1577c <readstat_parse_sav+0x198>
   157d4:	mov	r0, r9
   157d8:	bl	15b1c <sav_parse_records_pass2>
   157dc:	cmp	r0, #0
   157e0:	bne	1577c <readstat_parse_sav+0x198>
   157e4:	mov	r0, r9
   157e8:	bl	15e74 <sav_set_n_segments_and_var_count>
   157ec:	ldr	r0, [r9, #348]	; 0x15c
   157f0:	cmp	r0, #0
   157f4:	beq	1581c <readstat_parse_sav+0x238>
   157f8:	ldr	r0, [r9]
   157fc:	cmp	r0, #0
   15800:	beq	158d8 <readstat_parse_sav+0x2f4>
   15804:	ldr	r0, [r9, #352]	; 0x160
   15808:	cmn	r0, #1
   1580c:	beq	15824 <readstat_parse_sav+0x240>
   15810:	ldr	r0, [r9, #356]	; 0x164
   15814:	asr	r1, r0, #31
   15818:	b	1582c <readstat_parse_sav+0x248>
   1581c:	mov	r8, #5
   15820:	b	15780 <readstat_parse_sav+0x19c>
   15824:	mvn	r0, #0
   15828:	mvn	r1, #0
   1582c:	str	r0, [sp, #8]
   15830:	str	r1, [sp, #12]
   15834:	ldr	r0, [r9, #348]	; 0x15c
   15838:	str	r0, [sp, #16]
   1583c:	asr	r0, r0, #31
   15840:	str	r0, [sp, #20]
   15844:	ldr	r0, [r9, #324]	; 0x144
   15848:	str	r0, [sp, #28]
   1584c:	str	r0, [sp, #24]
   15850:	add	r2, r9, #424	; 0x1a8
   15854:	ldm	r2, {r0, r1, r2}
   15858:	str	r0, [sp, #32]
   1585c:	asr	r0, r0, #31
   15860:	str	r0, [sp, #36]	; 0x24
   15864:	str	r1, [sp, #40]	; 0x28
   15868:	mov	r0, #0
   1586c:	str	r0, [sp, #48]	; 0x30
   15870:	str	r0, [sp, #52]	; 0x34
   15874:	str	r2, [sp, #44]	; 0x2c
   15878:	ldr	r0, [r9, #56]	; 0x38
   1587c:	ldrb	r1, [sp, #60]	; 0x3c
   15880:	and	r1, r1, #254	; 0xfe
   15884:	strb	r1, [sp, #60]	; 0x3c
   15888:	str	r0, [sp, #56]	; 0x38
   1588c:	ldr	r0, [r9, #336]	; 0x150
   15890:	str	r0, [sp]
   15894:	add	r5, r9, #64	; 0x40
   15898:	add	r2, r7, #109	; 0x6d
   1589c:	mov	r0, r5
   158a0:	movw	r1, #257	; 0x101
   158a4:	mov	r3, #64	; 0x40
   158a8:	bl	4cbc <readstat_convert@plt>
   158ac:	mov	r8, r0
   158b0:	cmp	r0, #0
   158b4:	bne	15780 <readstat_parse_sav+0x19c>
   158b8:	str	r5, [sp, #52]	; 0x34
   158bc:	ldr	r2, [r9]
   158c0:	ldr	r1, [r9, #40]	; 0x28
   158c4:	add	r0, sp, #8
   158c8:	blx	r2
   158cc:	mov	r8, #4
   158d0:	cmp	r0, #0
   158d4:	bne	15780 <readstat_parse_sav+0x19c>
   158d8:	mov	r0, r9
   158dc:	bl	15ef8 <sav_parse_variable_display_parameter_record>
   158e0:	cmp	r0, #0
   158e4:	bne	1577c <readstat_parse_sav+0x198>
   158e8:	mov	r0, r9
   158ec:	bl	15fc4 <sav_handle_variables>
   158f0:	cmp	r0, #0
   158f4:	bne	1577c <readstat_parse_sav+0x198>
   158f8:	mov	r0, r9
   158fc:	bl	160c0 <sav_handle_fweight>
   15900:	cmp	r0, #0
   15904:	bne	1577c <readstat_parse_sav+0x198>
   15908:	ldr	r0, [r9, #16]
   1590c:	cmp	r0, #0
   15910:	beq	15920 <readstat_parse_sav+0x33c>
   15914:	mov	r0, r9
   15918:	bl	16160 <sav_read_data>
   1591c:	b	1577c <readstat_parse_sav+0x198>
   15920:	mov	r8, #0
   15924:	b	15780 <readstat_parse_sav+0x19c>

00015928 <sav_parse_records_pass1>:
   15928:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1592c:	add	fp, sp, #28
   15930:	sub	sp, sp, #20
   15934:	sub	sp, sp, #4096	; 0x1000
   15938:	mov	sl, r0
   1593c:	ldr	r4, [r0, #36]	; 0x24
   15940:	ldr	r3, [r4, #12]
   15944:	ldr	r2, [r4, #20]
   15948:	add	r0, sp, #12
   1594c:	mov	r1, #4
   15950:	blx	r3
   15954:	cmp	r0, #4
   15958:	bcc	15abc <sav_parse_records_pass1+0x194>
   1595c:	add	r9, sp, #12
   15960:	mov	r6, sp
   15964:	add	r8, sp, #16
   15968:	ldrb	r1, [sl, #436]	; 0x1b4
   1596c:	ldr	r0, [sp, #12]
   15970:	tst	r1, #1
   15974:	beq	15980 <sav_parse_records_pass1+0x58>
   15978:	bl	480c <byteswap4@plt>
   1597c:	str	r0, [sp, #12]
   15980:	sub	r1, r0, #2
   15984:	mov	r7, #5
   15988:	cmp	r1, #5
   1598c:	bhi	15ad4 <sav_parse_records_pass1+0x1ac>
   15990:	add	r0, pc, #4
   15994:	ldr	r1, [r0, r1, lsl #2]
   15998:	add	pc, r0, r1
   1599c:	.word	0x00000018
   159a0:	.word	0x0000002c
   159a4:	.word	0x00000124
   159a8:	.word	0x00000124
   159ac:	.word	0x00000040
   159b0:	.word	0x00000054
   159b4:	mov	r0, sl
   159b8:	bl	16260 <sav_skip_variable_record>
   159bc:	cmp	r0, #0
   159c0:	beq	15aa0 <sav_parse_records_pass1+0x178>
   159c4:	b	15acc <sav_parse_records_pass1+0x1a4>
   159c8:	mov	r0, sl
   159cc:	bl	16360 <sav_skip_value_label_record>
   159d0:	cmp	r0, #0
   159d4:	beq	15aa0 <sav_parse_records_pass1+0x178>
   159d8:	b	15acc <sav_parse_records_pass1+0x1a4>
   159dc:	mov	r0, sl
   159e0:	bl	164e4 <sav_skip_document_record>
   159e4:	cmp	r0, #0
   159e8:	beq	15aa0 <sav_parse_records_pass1+0x178>
   159ec:	b	15acc <sav_parse_records_pass1+0x1a4>
   159f0:	ldr	r3, [r4, #12]
   159f4:	ldr	r2, [r4, #20]
   159f8:	mov	r0, r6
   159fc:	mov	r1, #12
   15a00:	blx	r3
   15a04:	cmp	r0, #12
   15a08:	bcc	15abc <sav_parse_records_pass1+0x194>
   15a0c:	ldrb	r0, [sl, #436]	; 0x1b4
   15a10:	tst	r0, #1
   15a14:	beq	15a34 <sav_parse_records_pass1+0x10c>
   15a18:	mov	r5, #0
   15a1c:	ldr	r0, [r6, r5, lsl #2]
   15a20:	bl	480c <byteswap4@plt>
   15a24:	str	r0, [r6, r5, lsl #2]
   15a28:	add	r5, r5, #1
   15a2c:	cmp	r5, #3
   15a30:	bne	15a1c <sav_parse_records_pass1+0xf4>
   15a34:	ldm	sp, {r0, r1, r2}
   15a38:	mul	r5, r2, r1
   15a3c:	cmp	r0, #3
   15a40:	bne	15a84 <sav_parse_records_pass1+0x15c>
   15a44:	cmp	r5, #4096	; 0x1000
   15a48:	bhi	15ac0 <sav_parse_records_pass1+0x198>
   15a4c:	ldr	r3, [r4, #12]
   15a50:	ldr	r2, [r4, #20]
   15a54:	mov	r0, r8
   15a58:	mov	r1, r5
   15a5c:	blx	r3
   15a60:	cmp	r0, r5
   15a64:	bcc	15ac0 <sav_parse_records_pass1+0x198>
   15a68:	mov	r0, r8
   15a6c:	mov	r1, r5
   15a70:	mov	r2, sl
   15a74:	bl	16568 <sav_parse_machine_integer_info_record>
   15a78:	cmp	r0, #0
   15a7c:	beq	15aa0 <sav_parse_records_pass1+0x178>
   15a80:	b	15acc <sav_parse_records_pass1+0x1a4>
   15a84:	ldr	r3, [r4, #8]
   15a88:	ldr	r2, [r4, #20]
   15a8c:	mov	r0, r5
   15a90:	mov	r1, #1
   15a94:	blx	r3
   15a98:	cmn	r0, #1
   15a9c:	beq	15ae4 <sav_parse_records_pass1+0x1bc>
   15aa0:	ldr	r3, [r4, #12]
   15aa4:	ldr	r2, [r4, #20]
   15aa8:	mov	r0, r9
   15aac:	mov	r1, #4
   15ab0:	blx	r3
   15ab4:	cmp	r0, #4
   15ab8:	bcs	15968 <sav_parse_records_pass1+0x40>
   15abc:	mov	r7, #2
   15ac0:	mov	r0, r7
   15ac4:	sub	sp, fp, #28
   15ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15acc:	mov	r7, r0
   15ad0:	b	15ac0 <sav_parse_records_pass1+0x198>
   15ad4:	movw	r1, #999	; 0x3e7
   15ad8:	cmp	r0, r1
   15adc:	moveq	r7, #0
   15ae0:	b	15ac0 <sav_parse_records_pass1+0x198>
   15ae4:	mov	r7, #15
   15ae8:	b	15ac0 <sav_parse_records_pass1+0x198>

00015aec <sav_update_progress>:
   15aec:	push	{fp, lr}
   15af0:	mov	fp, sp
   15af4:	ldr	r1, [r0, #28]
   15af8:	ldr	ip, [r0, #32]
   15afc:	ldr	r3, [r0, #36]	; 0x24
   15b00:	ldr	r2, [r0, #40]	; 0x28
   15b04:	ldr	lr, [r3, #16]
   15b08:	ldr	r3, [r3, #20]
   15b0c:	mov	r0, ip
   15b10:	mov	ip, lr
   15b14:	pop	{fp, lr}
   15b18:	bx	ip

00015b1c <sav_parse_records_pass2>:
   15b1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b20:	add	fp, sp, #28
   15b24:	sub	sp, sp, #36	; 0x24
   15b28:	mov	r4, r0
   15b2c:	ldr	r7, [r0, #36]	; 0x24
   15b30:	mov	r0, #4096	; 0x1000
   15b34:	bl	4cb0 <readstat_malloc@plt>
   15b38:	cmp	r0, #0
   15b3c:	beq	15e28 <sav_parse_records_pass2+0x30c>
   15b40:	mov	r5, r0
   15b44:	ldr	r3, [r7, #12]
   15b48:	ldr	r2, [r7, #20]
   15b4c:	add	r0, sp, #32
   15b50:	mov	r1, #4
   15b54:	blx	r3
   15b58:	cmp	r0, #4
   15b5c:	str	r5, [sp, #12]
   15b60:	bcc	15e10 <sav_parse_records_pass2+0x2f4>
   15b64:	mov	r0, #4096	; 0x1000
   15b68:	str	r0, [sp, #8]
   15b6c:	add	r8, sp, #32
   15b70:	add	r5, sp, #20
   15b74:	str	r4, [sp, #16]
   15b78:	str	r7, [sp, #4]
   15b7c:	b	15d6c <sav_parse_records_pass2+0x250>
   15b80:	ldr	r3, [r7, #12]
   15b84:	ldr	r2, [r7, #20]
   15b88:	mov	r0, r5
   15b8c:	mov	r1, #12
   15b90:	blx	r3
   15b94:	cmp	r0, #12
   15b98:	bcc	15e10 <sav_parse_records_pass2+0x2f4>
   15b9c:	ldr	r7, [sp, #12]
   15ba0:	ldrb	r0, [r4, #436]	; 0x1b4
   15ba4:	tst	r0, #1
   15ba8:	beq	15bc8 <sav_parse_records_pass2+0xac>
   15bac:	mov	r4, #0
   15bb0:	ldr	r0, [r5, r4, lsl #2]
   15bb4:	bl	480c <byteswap4@plt>
   15bb8:	str	r0, [r5, r4, lsl #2]
   15bbc:	add	r4, r4, #1
   15bc0:	cmp	r4, #3
   15bc4:	bne	15bb0 <sav_parse_records_pass2+0x94>
   15bc8:	ldr	r9, [sp, #20]
   15bcc:	ldr	sl, [sp, #24]
   15bd0:	ldr	r4, [sp, #28]
   15bd4:	mul	r8, r4, sl
   15bd8:	ldr	r1, [sp, #8]
   15bdc:	cmp	r1, r8
   15be0:	str	sl, [sp]
   15be4:	bcs	15c04 <sav_parse_records_pass2+0xe8>
   15be8:	mov	r0, r7
   15bec:	mov	r1, r8
   15bf0:	bl	4d70 <readstat_realloc@plt>
   15bf4:	cmp	r0, #0
   15bf8:	mov	r1, r8
   15bfc:	bne	15c10 <sav_parse_records_pass2+0xf4>
   15c00:	b	15e64 <sav_parse_records_pass2+0x348>
   15c04:	cmp	r8, #0
   15c08:	mov	r0, r7
   15c0c:	beq	15e14 <sav_parse_records_pass2+0x2f8>
   15c10:	mov	sl, r4
   15c14:	str	r1, [sp, #8]
   15c18:	ldr	r1, [sp, #4]
   15c1c:	ldr	r3, [r1, #12]
   15c20:	ldr	r2, [r1, #20]
   15c24:	mov	r4, r0
   15c28:	mov	r1, r8
   15c2c:	blx	r3
   15c30:	cmp	r0, r8
   15c34:	str	r4, [sp, #12]
   15c38:	bcc	15e14 <sav_parse_records_pass2+0x2f8>
   15c3c:	sub	r0, r9, #4
   15c40:	cmp	r0, #18
   15c44:	bhi	15d60 <sav_parse_records_pass2+0x244>
   15c48:	add	r1, pc, #12
   15c4c:	ldr	r0, [r1, r0, lsl #2]
   15c50:	add	r8, sp, #32
   15c54:	ldr	r7, [sp, #4]
   15c58:	add	pc, r1, r0
   15c5c:	.word	0x0000004c
   15c60:	.word	0x00000194
   15c64:	.word	0x00000194
   15c68:	.word	0x00000194
   15c6c:	.word	0x00000194
   15c70:	.word	0x00000194
   15c74:	.word	0x00000194
   15c78:	.word	0x0000006c
   15c7c:	.word	0x00000194
   15c80:	.word	0x0000008c
   15c84:	.word	0x000000a8
   15c88:	.word	0x00000194
   15c8c:	.word	0x00000194
   15c90:	.word	0x00000194
   15c94:	.word	0x00000194
   15c98:	.word	0x00000194
   15c9c:	.word	0x00000194
   15ca0:	.word	0x000000c4
   15ca4:	.word	0x000000e4
   15ca8:	ldr	r0, [sp, #12]
   15cac:	ldr	r1, [sp]
   15cb0:	mov	r2, sl
   15cb4:	ldr	r3, [sp, #16]
   15cb8:	bl	16ea0 <sav_parse_machine_floating_point_record>
   15cbc:	cmp	r0, #0
   15cc0:	beq	15df0 <sav_parse_records_pass2+0x2d4>
   15cc4:	b	15e54 <sav_parse_records_pass2+0x338>
   15cc8:	ldr	r0, [sp, #12]
   15ccc:	ldr	r1, [sp]
   15cd0:	mov	r2, sl
   15cd4:	ldr	r3, [sp, #16]
   15cd8:	bl	16f4c <sav_store_variable_display_parameter_record>
   15cdc:	cmp	r0, #0
   15ce0:	beq	15df0 <sav_parse_records_pass2+0x2d4>
   15ce4:	b	15e54 <sav_parse_records_pass2+0x338>
   15ce8:	ldr	r0, [sp, #12]
   15cec:	mov	r1, sl
   15cf0:	ldr	r2, [sp, #16]
   15cf4:	bl	4c80 <sav_parse_long_variable_names_record@plt>
   15cf8:	cmp	r0, #0
   15cfc:	beq	15df0 <sav_parse_records_pass2+0x2d4>
   15d00:	b	15e54 <sav_parse_records_pass2+0x338>
   15d04:	ldr	r0, [sp, #12]
   15d08:	mov	r1, sl
   15d0c:	ldr	r2, [sp, #16]
   15d10:	bl	4d64 <sav_parse_very_long_string_record@plt>
   15d14:	cmp	r0, #0
   15d18:	beq	15df0 <sav_parse_records_pass2+0x2d4>
   15d1c:	b	15e54 <sav_parse_records_pass2+0x338>
   15d20:	ldr	r0, [sp, #12]
   15d24:	ldr	r1, [sp]
   15d28:	mov	r2, sl
   15d2c:	ldr	r3, [sp, #16]
   15d30:	bl	16fd4 <sav_parse_long_string_value_labels_record>
   15d34:	cmp	r0, #0
   15d38:	beq	15df0 <sav_parse_records_pass2+0x2d4>
   15d3c:	b	15e54 <sav_parse_records_pass2+0x338>
   15d40:	ldr	r0, [sp, #12]
   15d44:	ldr	r1, [sp]
   15d48:	mov	r2, sl
   15d4c:	ldr	r3, [sp, #16]
   15d50:	bl	17388 <sav_parse_long_string_missing_values_record>
   15d54:	cmp	r0, #0
   15d58:	beq	15df0 <sav_parse_records_pass2+0x2d4>
   15d5c:	b	15e54 <sav_parse_records_pass2+0x338>
   15d60:	add	r8, sp, #32
   15d64:	ldr	r7, [sp, #4]
   15d68:	b	15df0 <sav_parse_records_pass2+0x2d4>
   15d6c:	ldrb	r1, [r4, #436]	; 0x1b4
   15d70:	ldr	r0, [sp, #32]
   15d74:	tst	r1, #1
   15d78:	beq	15d84 <sav_parse_records_pass2+0x268>
   15d7c:	bl	480c <byteswap4@plt>
   15d80:	str	r0, [sp, #32]
   15d84:	sub	r1, r0, #2
   15d88:	mov	r6, #5
   15d8c:	cmp	r1, #5
   15d90:	bhi	15e38 <sav_parse_records_pass2+0x31c>
   15d94:	add	r0, pc, #4
   15d98:	ldr	r1, [r0, r1, lsl #2]
   15d9c:	add	pc, r0, r1
   15da0:	.word	0x00000018
   15da4:	.word	0x0000002c
   15da8:	.word	0x00000074
   15dac:	.word	0x00000074
   15db0:	.word	0x00000040
   15db4:	.word	0xfffffde0
   15db8:	mov	r0, r4
   15dbc:	bl	16688 <sav_read_variable_record>
   15dc0:	cmp	r0, #0
   15dc4:	beq	15df0 <sav_parse_records_pass2+0x2d4>
   15dc8:	b	15e54 <sav_parse_records_pass2+0x338>
   15dcc:	mov	r0, r4
   15dd0:	bl	16924 <sav_read_value_label_record>
   15dd4:	cmp	r0, #0
   15dd8:	beq	15df0 <sav_parse_records_pass2+0x2d4>
   15ddc:	b	15e54 <sav_parse_records_pass2+0x338>
   15de0:	mov	r0, r4
   15de4:	bl	16d5c <sav_read_document_record>
   15de8:	cmp	r0, #0
   15dec:	bne	15e54 <sav_parse_records_pass2+0x338>
   15df0:	ldr	r3, [r7, #12]
   15df4:	ldr	r2, [r7, #20]
   15df8:	mov	r0, r8
   15dfc:	mov	r1, #4
   15e00:	blx	r3
   15e04:	cmp	r0, #4
   15e08:	ldr	r4, [sp, #16]
   15e0c:	bcs	15d6c <sav_parse_records_pass2+0x250>
   15e10:	mov	r6, #2
   15e14:	ldr	r0, [sp, #12]
   15e18:	cmp	r0, #0
   15e1c:	beq	15e2c <sav_parse_records_pass2+0x310>
   15e20:	bl	4938 <free@plt>
   15e24:	b	15e2c <sav_parse_records_pass2+0x310>
   15e28:	mov	r6, #3
   15e2c:	mov	r0, r6
   15e30:	sub	sp, fp, #28
   15e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e38:	movw	r1, #999	; 0x3e7
   15e3c:	cmp	r0, r1
   15e40:	bne	15e14 <sav_parse_records_pass2+0x2f8>
   15e44:	mov	r0, r4
   15e48:	bl	16e64 <sav_read_dictionary_termination_record>
   15e4c:	cmp	r0, #0
   15e50:	beq	15e5c <sav_parse_records_pass2+0x340>
   15e54:	mov	r6, r0
   15e58:	b	15e14 <sav_parse_records_pass2+0x2f8>
   15e5c:	mov	r6, #0
   15e60:	b	15e14 <sav_parse_records_pass2+0x2f8>
   15e64:	mov	r0, #0
   15e68:	str	r0, [sp, #12]
   15e6c:	mov	r6, #3
   15e70:	b	15e14 <sav_parse_records_pass2+0x2f8>

00015e74 <sav_set_n_segments_and_var_count>:
   15e74:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15e78:	add	fp, sp, #24
   15e7c:	mov	r8, r0
   15e80:	mov	r0, #0
   15e84:	str	r0, [r8, #348]	; 0x15c
   15e88:	ldr	r1, [r8, #340]	; 0x154
   15e8c:	cmp	r1, #1
   15e90:	blt	15ee4 <sav_set_n_segments_and_var_count+0x70>
   15e94:	ldr	r1, [r8, #44]	; 0x2c
   15e98:	ldr	r3, [r8, #340]	; 0x154
   15e9c:	ldr	r2, [r8, #348]	; 0x15c
   15ea0:	movw	r4, #2081	; 0x821
   15ea4:	movt	r4, #8322	; 0x2082
   15ea8:	ldr	r5, [r1, r0, lsl #2]
   15eac:	ldr	r6, [r5, #20]
   15eb0:	cmp	r6, #0
   15eb4:	addne	r6, r6, #251	; 0xfb
   15eb8:	lsrne	r6, r6, #2
   15ebc:	umullne	r6, r7, r6, r4
   15ec0:	lsrne	r7, r7, #3
   15ec4:	strne	r7, [r5, #48]	; 0x30
   15ec8:	str	r2, [r5, #8]
   15ecc:	ldr	r7, [r5, #48]	; 0x30
   15ed0:	add	r0, r7, r0
   15ed4:	add	r2, r2, #1
   15ed8:	cmp	r0, r3
   15edc:	blt	15ea8 <sav_set_n_segments_and_var_count+0x34>
   15ee0:	str	r2, [r8, #348]	; 0x15c
   15ee4:	ldr	r0, [r8, #348]	; 0x15c
   15ee8:	mov	r1, #4
   15eec:	bl	4a34 <readstat_calloc@plt>
   15ef0:	str	r0, [r8, #52]	; 0x34
   15ef4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015ef8 <sav_parse_variable_display_parameter_record>:
   15ef8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15efc:	add	fp, sp, #24
   15f00:	mov	r4, r0
   15f04:	ldr	r0, [r0, #328]	; 0x148
   15f08:	cmp	r0, #0
   15f0c:	beq	15fbc <sav_parse_variable_display_parameter_record+0xc4>
   15f10:	ldr	r1, [r4, #332]	; 0x14c
   15f14:	ldr	r2, [r4, #340]	; 0x154
   15f18:	cmp	r1, r2, lsl #1
   15f1c:	addne	r3, r2, r2, lsl #1
   15f20:	movne	r0, #5
   15f24:	cmpne	r1, r3
   15f28:	bne	15fc0 <sav_parse_variable_display_parameter_record+0xc8>
   15f2c:	mov	r0, #0
   15f30:	cmp	r2, #1
   15f34:	mov	r8, #0
   15f38:	sdivge	r1, r1, r2
   15f3c:	subge	r1, r1, #3
   15f40:	clzge	r1, r1
   15f44:	lsrge	r8, r1, #5
   15f48:	ldr	r1, [r4, #340]	; 0x154
   15f4c:	cmp	r1, #1
   15f50:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
   15f54:	mov	r9, #2
   15f58:	cmp	r8, #0
   15f5c:	movwne	r9, #3
   15f60:	mov	r7, #0
   15f64:	ldr	r0, [r4, #44]	; 0x2c
   15f68:	ldr	r1, [r4, #328]	; 0x148
   15f6c:	ldr	r5, [r0, r7, lsl #2]
   15f70:	mul	r6, r7, r9
   15f74:	ldr	r0, [r1, r6, lsl #2]
   15f78:	bl	4e48 <spss_measure_to_readstat_measure@plt>
   15f7c:	str	r0, [r5, #268]	; 0x10c
   15f80:	add	r0, r6, #1
   15f84:	cmp	r8, #0
   15f88:	ldrne	r1, [r4, #328]	; 0x148
   15f8c:	ldrne	r0, [r1, r0, lsl #2]
   15f90:	strne	r0, [r5, #276]	; 0x114
   15f94:	addne	r0, r6, #2
   15f98:	ldr	r1, [r4, #328]	; 0x148
   15f9c:	ldr	r0, [r1, r0, lsl #2]
   15fa0:	bl	4e24 <spss_alignment_to_readstat_alignment@plt>
   15fa4:	str	r0, [r5, #272]	; 0x110
   15fa8:	ldr	r0, [r5, #48]	; 0x30
   15fac:	add	r7, r0, r7
   15fb0:	ldr	r0, [r4, #340]	; 0x154
   15fb4:	cmp	r7, r0
   15fb8:	blt	15f64 <sav_parse_variable_display_parameter_record+0x6c>
   15fbc:	mov	r0, #0
   15fc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015fc4 <sav_handle_variables>:
   15fc4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15fc8:	add	fp, sp, #28
   15fcc:	sub	sp, sp, #260	; 0x104
   15fd0:	mov	r4, r0
   15fd4:	ldr	r1, [r0, #8]
   15fd8:	mov	r0, #0
   15fdc:	cmp	r1, #0
   15fe0:	beq	160a8 <sav_handle_variables+0xe4>
   15fe4:	ldr	r1, [r4, #340]	; 0x154
   15fe8:	cmp	r1, #1
   15fec:	blt	160a8 <sav_handle_variables+0xe4>
   15ff0:	mov	r5, #0
   15ff4:	mov	r9, sp
   15ff8:	ldr	r8, [pc, #188]	; 160bc <sav_handle_variables+0xf8>
   15ffc:	add	r8, pc, r8
   16000:	mov	sl, #0
   16004:	ldr	r0, [r4, #44]	; 0x2c
   16008:	ldr	r2, [r4, #336]	; 0x150
   1600c:	ldr	r6, [r0, r5, lsl #2]
   16010:	mov	r0, r6
   16014:	mov	r1, sl
   16018:	bl	4cf8 <spss_init_variable_for_info@plt>
   1601c:	ldr	r1, [r6, #8]
   16020:	ldr	r2, [r4, #52]	; 0x34
   16024:	str	r0, [r2, r1, lsl #2]
   16028:	ldr	r3, [r6, #4]
   1602c:	mov	r0, r9
   16030:	mov	r1, #256	; 0x100
   16034:	mov	r2, r8
   16038:	bl	4d04 <snprintf@plt>
   1603c:	ldr	r1, [r6, #4]
   16040:	ldr	r0, [r6, #8]
   16044:	cmn	r1, #1
   16048:	mov	r2, r9
   1604c:	addeq	r2, r1, #1
   16050:	ldr	r7, [r4, #8]
   16054:	ldr	r3, [r4, #40]	; 0x28
   16058:	ldr	r1, [r4, #52]	; 0x34
   1605c:	ldr	r1, [r1, r0, lsl #2]
   16060:	blx	r7
   16064:	cmp	r0, #2
   16068:	beq	1607c <sav_handle_variables+0xb8>
   1606c:	cmp	r0, #1
   16070:	beq	160b0 <sav_handle_variables+0xec>
   16074:	add	sl, sl, #1
   16078:	b	16090 <sav_handle_variables+0xcc>
   1607c:	ldr	r0, [r6, #8]
   16080:	ldr	r1, [r4, #52]	; 0x34
   16084:	ldr	r0, [r1, r0, lsl #2]
   16088:	mov	r1, #1
   1608c:	str	r1, [r0, #2144]	; 0x860
   16090:	ldr	r0, [r6, #48]	; 0x30
   16094:	add	r5, r0, r5
   16098:	ldr	r0, [r4, #340]	; 0x154
   1609c:	cmp	r5, r0
   160a0:	blt	16004 <sav_handle_variables+0x40>
   160a4:	mov	r0, #0
   160a8:	sub	sp, fp, #28
   160ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160b0:	mov	r0, #4
   160b4:	sub	sp, fp, #28
   160b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   160bc:	.word	0x0000fed7

000160c0 <sav_handle_fweight>:
   160c0:	push	{fp, lr}
   160c4:	mov	fp, sp
   160c8:	ldr	r2, [r0, #12]
   160cc:	mov	r1, #0
   160d0:	cmp	r2, #0
   160d4:	beq	160ec <sav_handle_fweight+0x2c>
   160d8:	ldr	r2, [r0, #372]	; 0x174
   160dc:	cmp	r2, #0
   160e0:	ldrge	r2, [r0, #340]	; 0x154
   160e4:	cmpge	r2, #1
   160e8:	bge	160f4 <sav_handle_fweight+0x34>
   160ec:	mov	r0, r1
   160f0:	pop	{fp, pc}
   160f4:	ldr	ip, [r0, #44]	; 0x2c
   160f8:	ldr	r1, [r0, #372]	; 0x174
   160fc:	sub	lr, r1, #1
   16100:	mov	r3, #0
   16104:	ldr	r1, [ip, r3, lsl #2]
   16108:	ldr	r2, [r1, #12]
   1610c:	cmp	r2, lr
   16110:	beq	16134 <sav_handle_fweight+0x74>
   16114:	ldr	r1, [r1, #48]	; 0x30
   16118:	add	r3, r1, r3
   1611c:	ldr	r1, [r0, #340]	; 0x154
   16120:	cmp	r3, r1
   16124:	blt	16104 <sav_handle_fweight+0x44>
   16128:	mov	r1, #0
   1612c:	mov	r0, r1
   16130:	pop	{fp, pc}
   16134:	ldr	r2, [r1, #8]
   16138:	ldr	r3, [r0, #12]
   1613c:	ldr	r1, [r0, #40]	; 0x28
   16140:	ldr	r0, [r0, #52]	; 0x34
   16144:	ldr	r0, [r0, r2, lsl #2]
   16148:	blx	r3
   1614c:	mov	r1, r0
   16150:	cmp	r0, #0
   16154:	movwne	r1, #4
   16158:	mov	r0, r1
   1615c:	pop	{fp, pc}

00016160 <sav_read_data>:
   16160:	push	{r4, r5, r6, sl, fp, lr}
   16164:	add	fp, sp, #16
   16168:	mov	r6, r0
   1616c:	ldr	r0, [r0, #340]	; 0x154
   16170:	cmp	r0, #1
   16174:	blt	161ac <sav_read_data+0x4c>
   16178:	ldr	r0, [r6, #44]	; 0x2c
   1617c:	ldr	r1, [r6, #340]	; 0x154
   16180:	mov	r5, #256	; 0x100
   16184:	mov	r2, #0
   16188:	ldr	r3, [r0, r2, lsl #2]
   1618c:	ldr	r4, [r3, #20]
   16190:	ldr	r3, [r3, #48]	; 0x30
   16194:	add	r2, r3, r2
   16198:	cmp	r4, r5
   1619c:	movhi	r5, r4
   161a0:	cmp	r2, r1
   161a4:	blt	16188 <sav_read_data+0x28>
   161a8:	b	161b0 <sav_read_data+0x50>
   161ac:	mov	r5, #256	; 0x100
   161b0:	add	r0, r5, #7
   161b4:	str	r0, [r6, #380]	; 0x17c
   161b8:	bl	4cb0 <readstat_malloc@plt>
   161bc:	str	r0, [r6, #376]	; 0x178
   161c0:	mov	r0, #1
   161c4:	orr	r0, r0, r5, lsl #2
   161c8:	add	r0, r0, #7
   161cc:	str	r0, [r6, #388]	; 0x184
   161d0:	bl	4cb0 <readstat_malloc@plt>
   161d4:	mov	r1, r0
   161d8:	str	r0, [r6, #384]	; 0x180
   161dc:	mov	r0, #3
   161e0:	cmp	r1, #0
   161e4:	ldrne	r1, [r6, #376]	; 0x178
   161e8:	cmpne	r1, #0
   161ec:	bne	161f4 <sav_read_data+0x94>
   161f0:	pop	{r4, r5, r6, sl, fp, pc}
   161f4:	ldr	r0, [r6, #428]	; 0x1ac
   161f8:	cmp	r0, #2
   161fc:	beq	16214 <sav_read_data+0xb4>
   16200:	cmp	r0, #1
   16204:	bne	16228 <sav_read_data+0xc8>
   16208:	mov	r0, r6
   1620c:	bl	17a50 <sav_read_compressed_data>
   16210:	b	16230 <sav_read_data+0xd0>
   16214:	ldr	r1, [pc, #64]	; 1625c <sav_read_data+0xfc>
   16218:	add	r1, pc, r1
   1621c:	mov	r0, r6
   16220:	bl	4f5c <zsav_read_compressed_data@plt>
   16224:	b	16230 <sav_read_data+0xd0>
   16228:	mov	r0, r6
   1622c:	bl	17f04 <sav_read_uncompressed_data>
   16230:	cmp	r0, #0
   16234:	popne	{r4, r5, r6, sl, fp, pc}
   16238:	ldr	r1, [r6, #352]	; 0x160
   1623c:	cmn	r1, #1
   16240:	moveq	r0, #0
   16244:	popeq	{r4, r5, r6, sl, fp, pc}
   16248:	ldr	r1, [r6, #356]	; 0x164
   1624c:	ldr	r2, [r6, #364]	; 0x16c
   16250:	cmp	r2, r1
   16254:	movne	r0, #9
   16258:	pop	{r4, r5, r6, sl, fp, pc}
   1625c:	.word	0x000019f8

00016260 <sav_skip_variable_record>:
   16260:	push	{r4, r5, fp, lr}
   16264:	add	fp, sp, #8
   16268:	sub	sp, sp, #32
   1626c:	mov	r4, r0
   16270:	ldr	r5, [r0, #36]	; 0x24
   16274:	ldr	r3, [r5, #12]
   16278:	ldr	r2, [r5, #20]
   1627c:	add	r0, sp, #4
   16280:	mov	r1, #28
   16284:	blx	r3
   16288:	mov	r1, r0
   1628c:	mov	r0, #2
   16290:	cmp	r1, #28
   16294:	bcc	16358 <sav_skip_variable_record+0xf8>
   16298:	ldr	r0, [sp, #8]
   1629c:	cmp	r0, #0
   162a0:	beq	16308 <sav_skip_variable_record+0xa8>
   162a4:	ldr	r3, [r5, #12]
   162a8:	ldr	r2, [r5, #20]
   162ac:	mov	r0, sp
   162b0:	mov	r1, #4
   162b4:	blx	r3
   162b8:	mov	r1, r0
   162bc:	mov	r0, #2
   162c0:	cmp	r1, #4
   162c4:	bcc	16358 <sav_skip_variable_record+0xf8>
   162c8:	ldrb	r1, [r4, #436]	; 0x1b4
   162cc:	ldr	r0, [sp]
   162d0:	tst	r1, #1
   162d4:	beq	162dc <sav_skip_variable_record+0x7c>
   162d8:	bl	480c <byteswap4@plt>
   162dc:	str	r0, [sp]
   162e0:	ldr	r3, [r5, #8]
   162e4:	ldr	r2, [r5, #20]
   162e8:	add	r0, r0, #3
   162ec:	bic	r0, r0, #3
   162f0:	mov	r1, #1
   162f4:	blx	r3
   162f8:	cmn	r0, #1
   162fc:	moveq	r0, #15
   16300:	subeq	sp, fp, #8
   16304:	popeq	{r4, r5, fp, pc}
   16308:	ldr	r0, [sp, #12]
   1630c:	cmp	r0, #0
   16310:	moveq	r0, #0
   16314:	subeq	sp, fp, #8
   16318:	popeq	{r4, r5, fp, pc}
   1631c:	ldrb	r1, [r4, #436]	; 0x1b4
   16320:	tst	r1, #1
   16324:	beq	1632c <sav_skip_variable_record+0xcc>
   16328:	bl	480c <byteswap4@plt>
   1632c:	ldr	r3, [r5, #8]
   16330:	ldr	r2, [r5, #20]
   16334:	cmp	r0, #0
   16338:	rsbmi	r0, r0, #0
   1633c:	lsl	r0, r0, #3
   16340:	mov	r1, #1
   16344:	blx	r3
   16348:	mov	r1, r0
   1634c:	mov	r0, #0
   16350:	cmn	r1, #1
   16354:	movweq	r0, #15
   16358:	sub	sp, fp, #8
   1635c:	pop	{r4, r5, fp, pc}

00016360 <sav_skip_value_label_record>:
   16360:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16364:	add	fp, sp, #24
   16368:	sub	sp, sp, #16
   1636c:	mov	r8, r0
   16370:	ldr	r7, [r0, #36]	; 0x24
   16374:	ldr	r3, [r7, #12]
   16378:	ldr	r2, [r7, #20]
   1637c:	add	r0, sp, #12
   16380:	mov	r1, #4
   16384:	blx	r3
   16388:	cmp	r0, #4
   1638c:	bcc	16450 <sav_skip_value_label_record+0xf0>
   16390:	ldrb	r1, [r8, #436]	; 0x1b4
   16394:	ldr	r0, [sp, #12]
   16398:	tst	r1, #1
   1639c:	beq	163a8 <sav_skip_value_label_record+0x48>
   163a0:	bl	480c <byteswap4@plt>
   163a4:	str	r0, [sp, #12]
   163a8:	cmp	r0, #0
   163ac:	beq	16434 <sav_skip_value_label_record+0xd4>
   163b0:	mov	r9, #0
   163b4:	add	r6, sp, #3
   163b8:	mov	r4, #0
   163bc:	mov	r5, #15
   163c0:	strb	r9, [sp, #3]
   163c4:	ldr	r3, [r7, #8]
   163c8:	ldr	r2, [r7, #20]
   163cc:	mov	r0, #8
   163d0:	mov	r1, #1
   163d4:	blx	r3
   163d8:	cmn	r0, #1
   163dc:	beq	16454 <sav_skip_value_label_record+0xf4>
   163e0:	ldr	r3, [r7, #12]
   163e4:	ldr	r2, [r7, #20]
   163e8:	mov	r0, r6
   163ec:	mov	r1, #1
   163f0:	blx	r3
   163f4:	cmp	r0, #1
   163f8:	blt	16450 <sav_skip_value_label_record+0xf0>
   163fc:	ldr	r3, [r7, #8]
   16400:	ldr	r2, [r7, #20]
   16404:	ldrb	r0, [sp, #3]
   16408:	add	r0, r0, #8
   1640c:	and	r0, r0, #504	; 0x1f8
   16410:	sub	r0, r0, #1
   16414:	mov	r1, #1
   16418:	blx	r3
   1641c:	cmn	r0, #1
   16420:	beq	16454 <sav_skip_value_label_record+0xf4>
   16424:	add	r4, r4, #1
   16428:	ldr	r0, [sp, #12]
   1642c:	cmp	r4, r0
   16430:	bcc	163c0 <sav_skip_value_label_record+0x60>
   16434:	ldr	r3, [r7, #12]
   16438:	ldr	r2, [r7, #20]
   1643c:	add	r0, sp, #8
   16440:	mov	r1, #4
   16444:	blx	r3
   16448:	cmp	r0, #4
   1644c:	bcs	16460 <sav_skip_value_label_record+0x100>
   16450:	mov	r5, #2
   16454:	mov	r0, r5
   16458:	sub	sp, fp, #24
   1645c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16460:	ldrb	r1, [r8, #436]	; 0x1b4
   16464:	ldr	r0, [sp, #8]
   16468:	tst	r1, #1
   1646c:	beq	16478 <sav_skip_value_label_record+0x118>
   16470:	bl	480c <byteswap4@plt>
   16474:	str	r0, [sp, #8]
   16478:	mov	r5, #5
   1647c:	cmp	r0, #4
   16480:	bne	16454 <sav_skip_value_label_record+0xf4>
   16484:	ldr	r3, [r7, #12]
   16488:	ldr	r2, [r7, #20]
   1648c:	add	r0, sp, #4
   16490:	mov	r1, #4
   16494:	blx	r3
   16498:	cmp	r0, #4
   1649c:	mov	r5, #2
   164a0:	bcc	16454 <sav_skip_value_label_record+0xf4>
   164a4:	ldrb	r0, [r8, #436]	; 0x1b4
   164a8:	tst	r0, #1
   164ac:	beq	164bc <sav_skip_value_label_record+0x15c>
   164b0:	ldr	r0, [sp, #4]
   164b4:	bl	480c <byteswap4@plt>
   164b8:	str	r0, [sp, #4]
   164bc:	ldr	r3, [r7, #8]
   164c0:	ldr	r2, [r7, #20]
   164c4:	ldr	r0, [sp, #4]
   164c8:	lsl	r0, r0, #2
   164cc:	mov	r1, #1
   164d0:	blx	r3
   164d4:	mov	r5, #0
   164d8:	cmn	r0, #1
   164dc:	movweq	r5, #15
   164e0:	b	16454 <sav_skip_value_label_record+0xf4>

000164e4 <sav_skip_document_record>:
   164e4:	push	{r4, r5, fp, lr}
   164e8:	add	fp, sp, #8
   164ec:	sub	sp, sp, #8
   164f0:	mov	r4, r0
   164f4:	ldr	r5, [r0, #36]	; 0x24
   164f8:	ldr	r3, [r5, #12]
   164fc:	ldr	r2, [r5, #20]
   16500:	add	r0, sp, #4
   16504:	mov	r1, #4
   16508:	blx	r3
   1650c:	mov	r1, r0
   16510:	mov	r0, #2
   16514:	cmp	r1, #4
   16518:	bcc	16560 <sav_skip_document_record+0x7c>
   1651c:	ldrb	r0, [r4, #436]	; 0x1b4
   16520:	tst	r0, #1
   16524:	beq	16534 <sav_skip_document_record+0x50>
   16528:	ldr	r0, [sp, #4]
   1652c:	bl	480c <byteswap4@plt>
   16530:	str	r0, [sp, #4]
   16534:	ldr	r3, [r5, #8]
   16538:	ldr	r2, [r5, #20]
   1653c:	ldr	r0, [sp, #4]
   16540:	add	r0, r0, r0, lsl #2
   16544:	lsl	r0, r0, #4
   16548:	mov	r1, #1
   1654c:	blx	r3
   16550:	mov	r1, r0
   16554:	mov	r0, #0
   16558:	cmn	r1, #1
   1655c:	movweq	r0, #15
   16560:	sub	sp, fp, #8
   16564:	pop	{r4, r5, fp, pc}

00016568 <sav_parse_machine_integer_info_record>:
   16568:	push	{r4, r5, r6, sl, fp, lr}
   1656c:	add	fp, sp, #16
   16570:	sub	sp, sp, #1056	; 0x420
   16574:	mov	r4, r2
   16578:	mov	r2, r1
   1657c:	mov	r5, #5
   16580:	cmp	r1, #32
   16584:	bne	16640 <sav_parse_machine_integer_info_record+0xd8>
   16588:	mov	r1, r0
   1658c:	ldr	r6, [r4, #60]	; 0x3c
   16590:	sub	r0, fp, #48	; 0x30
   16594:	bl	4998 <memcpy@plt>
   16598:	ldrb	r0, [r4, #436]	; 0x1b4
   1659c:	tst	r0, #1
   165a0:	beq	165b0 <sav_parse_machine_integer_info_record+0x48>
   165a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   165a8:	bl	480c <byteswap4@plt>
   165ac:	str	r0, [fp, #-20]	; 0xffffffec
   165b0:	ldr	r1, [r4, #56]	; 0x38
   165b4:	cmp	r1, #0
   165b8:	bne	16630 <sav_parse_machine_integer_info_record+0xc8>
   165bc:	ldr	r0, [pc, #188]	; 16680 <sav_parse_machine_integer_info_record+0x118>
   165c0:	add	r0, pc, r0
   165c4:	add	r1, r0, #4
   165c8:	mov	r0, #0
   165cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   165d0:	ldr	r3, [r1, #-4]
   165d4:	cmp	r2, r3
   165d8:	beq	1662c <sav_parse_machine_integer_info_record+0xc4>
   165dc:	add	r1, r1, #36	; 0x24
   165e0:	add	r0, r0, #1
   165e4:	cmp	r0, #79	; 0x4f
   165e8:	bcc	165d0 <sav_parse_machine_integer_info_record+0x68>
   165ec:	ldr	r0, [r4, #24]
   165f0:	mov	r5, #7
   165f4:	cmp	r0, #0
   165f8:	beq	16640 <sav_parse_machine_integer_info_record+0xd8>
   165fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   16600:	mov	r6, sp
   16604:	ldr	r2, [pc, #120]	; 16684 <sav_parse_machine_integer_info_record+0x11c>
   16608:	add	r2, pc, r2
   1660c:	mov	r0, r6
   16610:	mov	r1, #1024	; 0x400
   16614:	bl	4d04 <snprintf@plt>
   16618:	ldr	r2, [r4, #24]
   1661c:	ldr	r1, [r4, #40]	; 0x28
   16620:	mov	r0, r6
   16624:	blx	r2
   16628:	b	16640 <sav_parse_machine_integer_info_record+0xd8>
   1662c:	str	r1, [r4, #56]	; 0x38
   16630:	mov	r5, #0
   16634:	cmp	r6, #0
   16638:	cmpne	r1, #0
   1663c:	bne	1664c <sav_parse_machine_integer_info_record+0xe4>
   16640:	mov	r0, r5
   16644:	sub	sp, fp, #16
   16648:	pop	{r4, r5, r6, sl, fp, pc}
   1664c:	mov	r0, r6
   16650:	bl	4bc0 <iconv_open@plt>
   16654:	cmn	r0, #1
   16658:	beq	16678 <sav_parse_machine_integer_info_record+0x110>
   1665c:	mov	r6, r0
   16660:	ldr	r0, [r4, #336]	; 0x150
   16664:	cmp	r0, #0
   16668:	beq	16670 <sav_parse_machine_integer_info_record+0x108>
   1666c:	bl	4848 <iconv_close@plt>
   16670:	str	r6, [r4, #336]	; 0x150
   16674:	b	16640 <sav_parse_machine_integer_info_record+0xd8>
   16678:	mov	r5, #7
   1667c:	b	16640 <sav_parse_machine_integer_info_record+0xd8>
   16680:	.word	0x0002f9a8
   16684:	.word	0x00010564

00016688 <sav_read_variable_record>:
   16688:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1668c:	add	fp, sp, #24
   16690:	sub	sp, sp, #40	; 0x28
   16694:	mov	r4, r0
   16698:	ldr	r5, [r0, #36]	; 0x24
   1669c:	vmov.i32	q8, #0	; 0x00000000
   166a0:	mov	r0, #12
   166a4:	add	r1, sp, #8
   166a8:	vst1.64	{d16-d17}, [r1], r0
   166ac:	vst1.32	{d16-d17}, [r1]
   166b0:	ldr	r1, [r4, #48]	; 0x30
   166b4:	ldr	r0, [r4, #340]	; 0x154
   166b8:	cmp	r0, r1
   166bc:	bne	166e0 <sav_read_variable_record+0x58>
   166c0:	lsl	r0, r1, #1
   166c4:	str	r0, [r4, #48]	; 0x30
   166c8:	ldr	r0, [r4, #44]	; 0x2c
   166cc:	lsl	r1, r1, #3
   166d0:	bl	4d70 <readstat_realloc@plt>
   166d4:	str	r0, [r4, #44]	; 0x2c
   166d8:	cmp	r0, #0
   166dc:	beq	167ec <sav_read_variable_record+0x164>
   166e0:	ldr	r3, [r5, #12]
   166e4:	ldr	r2, [r5, #20]
   166e8:	add	r8, sp, #8
   166ec:	mov	r0, r8
   166f0:	mov	r1, #28
   166f4:	blx	r3
   166f8:	cmp	r0, #28
   166fc:	bcs	1670c <sav_read_variable_record+0x84>
   16700:	mov	r6, #2
   16704:	mov	r5, #0
   16708:	b	16834 <sav_read_variable_record+0x1ac>
   1670c:	ldrb	r1, [r4, #436]	; 0x1b4
   16710:	ldr	r0, [sp, #20]
   16714:	tst	r1, #1
   16718:	beq	16720 <sav_read_variable_record+0x98>
   1671c:	bl	480c <byteswap4@plt>
   16720:	str	r0, [sp, #20]
   16724:	ldrb	r1, [r4, #436]	; 0x1b4
   16728:	ldr	r0, [sp, #24]
   1672c:	tst	r1, #1
   16730:	beq	16738 <sav_read_variable_record+0xb0>
   16734:	bl	480c <byteswap4@plt>
   16738:	str	r0, [sp, #24]
   1673c:	ldrb	r0, [r4, #436]	; 0x1b4
   16740:	ldr	r7, [sp, #8]
   16744:	tst	r0, #1
   16748:	beq	16758 <sav_read_variable_record+0xd0>
   1674c:	mov	r0, r7
   16750:	bl	480c <byteswap4@plt>
   16754:	mov	r7, r0
   16758:	cmn	r7, #1
   1675c:	ble	167f8 <sav_read_variable_record+0x170>
   16760:	mov	r6, #1
   16764:	mov	r0, #1
   16768:	mov	r1, #280	; 0x118
   1676c:	bl	4a34 <readstat_calloc@plt>
   16770:	mov	r5, r0
   16774:	cmp	r0, #0
   16778:	beq	16830 <sav_read_variable_record+0x1a8>
   1677c:	str	r6, [r5, #48]	; 0x30
   16780:	str	r6, [r5, #16]
   16784:	ldr	r0, [r4, #340]	; 0x154
   16788:	str	r0, [r5, #8]
   1678c:	ldr	r0, [r4, #344]	; 0x158
   16790:	mvn	r1, #0
   16794:	str	r1, [r5, #4]
   16798:	str	r0, [r5, #12]
   1679c:	mov	r9, #0
   167a0:	str	r9, [sp]
   167a4:	add	r0, r5, #187	; 0xbb
   167a8:	add	r8, r8, #20
   167ac:	mov	r1, #9
   167b0:	mov	r2, r8
   167b4:	mov	r3, #8
   167b8:	bl	4cbc <readstat_convert@plt>
   167bc:	cmp	r0, #0
   167c0:	bne	167e4 <sav_read_variable_record+0x15c>
   167c4:	str	r9, [sp]
   167c8:	add	r0, r5, #196	; 0xc4
   167cc:	mov	r1, #65	; 0x41
   167d0:	mov	r2, r8
   167d4:	mov	r3, #8
   167d8:	bl	4cbc <readstat_convert@plt>
   167dc:	cmp	r0, #0
   167e0:	beq	16850 <sav_read_variable_record+0x1c8>
   167e4:	mov	r6, r0
   167e8:	b	16834 <sav_read_variable_record+0x1ac>
   167ec:	mov	r6, #3
   167f0:	mov	r5, #0
   167f4:	b	16834 <sav_read_variable_record+0x1ac>
   167f8:	ldr	r0, [r4, #340]	; 0x154
   167fc:	cmp	r0, #0
   16800:	beq	16848 <sav_read_variable_record+0x1c0>
   16804:	ldr	r1, [r4, #44]	; 0x2c
   16808:	ldr	r2, [r4, #344]	; 0x158
   1680c:	add	r2, r2, #1
   16810:	str	r2, [r4, #344]	; 0x158
   16814:	add	r0, r1, r0, lsl #2
   16818:	ldr	r0, [r0, #-4]
   1681c:	ldr	r1, [r0, #16]
   16820:	add	r1, r1, #1
   16824:	str	r1, [r0, #16]
   16828:	mov	r6, #0
   1682c:	b	1683c <sav_read_variable_record+0x1b4>
   16830:	mov	r6, #3
   16834:	mov	r0, r5
   16838:	bl	4eb4 <spss_varinfo_free@plt>
   1683c:	mov	r0, r6
   16840:	sub	sp, fp, #24
   16844:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16848:	mov	r6, #5
   1684c:	b	1683c <sav_read_variable_record+0x1b4>
   16850:	ldr	r0, [sp, #20]
   16854:	ubfx	r1, r0, #8, #8
   16858:	str	r1, [r5, #28]
   1685c:	uxtb	r1, r0
   16860:	str	r1, [r5, #32]
   16864:	ubfx	r0, r0, #16, #8
   16868:	str	r0, [r5, #24]
   1686c:	ldr	r1, [sp, #24]
   16870:	ubfx	r2, r1, #8, #8
   16874:	str	r2, [r5, #40]	; 0x28
   16878:	uxtb	r2, r1
   1687c:	str	r2, [r5, #44]	; 0x2c
   16880:	ubfx	r2, r1, #16, #8
   16884:	str	r2, [r5, #36]	; 0x24
   16888:	mov	r1, #0
   1688c:	cmp	r7, #0
   16890:	bgt	168a4 <sav_read_variable_record+0x21c>
   16894:	subs	r2, r2, #1
   16898:	movwne	r2, #5
   1689c:	subs	r1, r0, #1
   168a0:	movne	r1, r2
   168a4:	str	r1, [r5]
   168a8:	ldr	r0, [sp, #12]
   168ac:	cmp	r0, #0
   168b0:	beq	168c8 <sav_read_variable_record+0x240>
   168b4:	mov	r0, r5
   168b8:	mov	r1, r4
   168bc:	bl	17554 <sav_read_variable_label>
   168c0:	cmp	r0, #0
   168c4:	bne	167e4 <sav_read_variable_record+0x15c>
   168c8:	ldr	r0, [sp, #16]
   168cc:	cmp	r0, #0
   168d0:	beq	168fc <sav_read_variable_record+0x274>
   168d4:	ldrb	r1, [r4, #436]	; 0x1b4
   168d8:	tst	r1, #1
   168dc:	beq	168e4 <sav_read_variable_record+0x25c>
   168e0:	bl	480c <byteswap4@plt>
   168e4:	str	r0, [r5, #52]	; 0x34
   168e8:	mov	r0, r5
   168ec:	mov	r1, r4
   168f0:	bl	17680 <sav_read_variable_missing_values>
   168f4:	cmp	r0, #0
   168f8:	bne	167e4 <sav_read_variable_record+0x15c>
   168fc:	ldr	r0, [r4, #44]	; 0x2c
   16900:	ldr	r1, [r4, #340]	; 0x154
   16904:	str	r5, [r0, r1, lsl #2]
   16908:	add	r0, r1, #1
   1690c:	str	r0, [r4, #340]	; 0x154
   16910:	ldr	r0, [r4, #344]	; 0x158
   16914:	add	r0, r0, #1
   16918:	str	r0, [r4, #344]	; 0x158
   1691c:	mov	r6, #0
   16920:	b	1683c <sav_read_variable_record+0x1b4>

00016924 <sav_read_value_label_record>:
   16924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16928:	add	fp, sp, #28
   1692c:	sub	sp, sp, #292	; 0x124
   16930:	mov	sl, r0
   16934:	ldr	r9, [r0, #36]	; 0x24
   16938:	ldr	r3, [r9, #12]
   1693c:	ldr	r2, [r9, #20]
   16940:	sub	r0, fp, #36	; 0x24
   16944:	mov	r1, #4
   16948:	blx	r3
   1694c:	mov	r6, #2
   16950:	cmp	r0, #4
   16954:	bcc	16b94 <sav_read_value_label_record+0x270>
   16958:	ldrb	r1, [sl, #436]	; 0x1b4
   1695c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16960:	tst	r1, #1
   16964:	beq	16970 <sav_read_value_label_record+0x4c>
   16968:	bl	480c <byteswap4@plt>
   1696c:	str	r0, [fp, #-36]	; 0xffffffdc
   16970:	cmp	r0, #0
   16974:	beq	16994 <sav_read_value_label_record+0x70>
   16978:	mov	r1, #72	; 0x48
   1697c:	bl	4a34 <readstat_calloc@plt>
   16980:	mov	r7, r0
   16984:	cmp	r0, #0
   16988:	beq	16b10 <sav_read_value_label_record+0x1ec>
   1698c:	str	r7, [sp, #12]
   16990:	b	1699c <sav_read_value_label_record+0x78>
   16994:	mov	r0, #0
   16998:	str	r0, [sp, #12]
   1699c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   169a0:	cmp	r0, #0
   169a4:	beq	16a74 <sav_read_value_label_record+0x150>
   169a8:	add	r4, sp, #20
   169ac:	ldr	r7, [sp, #12]
   169b0:	mov	r8, #0
   169b4:	mov	r0, #0
   169b8:	strb	r0, [fp, #-40]	; 0xffffffd8
   169bc:	ldr	r3, [r9, #12]
   169c0:	ldr	r2, [r9, #20]
   169c4:	mov	r0, r7
   169c8:	mov	r1, #8
   169cc:	blx	r3
   169d0:	mov	r6, #2
   169d4:	cmp	r0, #8
   169d8:	blt	16b48 <sav_read_value_label_record+0x224>
   169dc:	ldr	r3, [r9, #12]
   169e0:	ldr	r2, [r9, #20]
   169e4:	sub	r0, fp, #40	; 0x28
   169e8:	mov	r1, #1
   169ec:	blx	r3
   169f0:	cmp	r0, #1
   169f4:	blt	16b48 <sav_read_value_label_record+0x224>
   169f8:	ldr	r3, [r9, #12]
   169fc:	ldr	r2, [r9, #20]
   16a00:	ldrb	r0, [fp, #-40]	; 0xffffffd8
   16a04:	add	r0, r0, #8
   16a08:	and	r0, r0, #504	; 0x1f8
   16a0c:	sub	r5, r0, #1
   16a10:	mov	r0, r4
   16a14:	mov	r1, r5
   16a18:	blx	r3
   16a1c:	cmp	r0, r5
   16a20:	bcc	16b48 <sav_read_value_label_record+0x224>
   16a24:	mov	r0, #1
   16a28:	orr	r6, r0, r5, lsl #2
   16a2c:	mov	r0, r6
   16a30:	bl	4cb0 <readstat_malloc@plt>
   16a34:	str	r0, [r7, #64]	; 0x40
   16a38:	cmp	r0, #0
   16a3c:	beq	16b30 <sav_read_value_label_record+0x20c>
   16a40:	ldr	r1, [sl, #336]	; 0x150
   16a44:	str	r1, [sp]
   16a48:	mov	r1, r6
   16a4c:	mov	r2, r4
   16a50:	mov	r3, r5
   16a54:	bl	4cbc <readstat_convert@plt>
   16a58:	cmp	r0, #0
   16a5c:	bne	16b44 <sav_read_value_label_record+0x220>
   16a60:	add	r7, r7, #72	; 0x48
   16a64:	add	r8, r8, #1
   16a68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16a6c:	cmp	r8, r0
   16a70:	bcc	169b4 <sav_read_value_label_record+0x90>
   16a74:	ldr	r3, [r9, #12]
   16a78:	ldr	r2, [r9, #20]
   16a7c:	sub	r0, fp, #44	; 0x2c
   16a80:	mov	r1, #4
   16a84:	blx	r3
   16a88:	mov	r6, #2
   16a8c:	cmp	r0, #4
   16a90:	bcc	16b34 <sav_read_value_label_record+0x210>
   16a94:	ldrb	r1, [sl, #436]	; 0x1b4
   16a98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16a9c:	tst	r1, #1
   16aa0:	ldr	r7, [sp, #12]
   16aa4:	beq	16ab0 <sav_read_value_label_record+0x18c>
   16aa8:	bl	480c <byteswap4@plt>
   16aac:	str	r0, [fp, #-44]	; 0xffffffd4
   16ab0:	cmp	r0, #4
   16ab4:	bne	16b20 <sav_read_value_label_record+0x1fc>
   16ab8:	ldr	r3, [r9, #12]
   16abc:	ldr	r2, [r9, #20]
   16ac0:	sub	r0, fp, #40	; 0x28
   16ac4:	mov	r1, #4
   16ac8:	blx	r3
   16acc:	cmp	r0, #4
   16ad0:	bcc	16b4c <sav_read_value_label_record+0x228>
   16ad4:	ldrb	r1, [sl, #436]	; 0x1b4
   16ad8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16adc:	tst	r1, #1
   16ae0:	beq	16aec <sav_read_value_label_record+0x1c8>
   16ae4:	bl	480c <byteswap4@plt>
   16ae8:	str	r0, [fp, #-40]	; 0xffffffd8
   16aec:	cmp	r0, #0
   16af0:	beq	16ba0 <sav_read_value_label_record+0x27c>
   16af4:	lsl	r0, r0, #2
   16af8:	bl	4cb0 <readstat_malloc@plt>
   16afc:	mov	r8, r0
   16b00:	cmp	r0, #0
   16b04:	beq	16cf4 <sav_read_value_label_record+0x3d0>
   16b08:	mov	r4, r8
   16b0c:	b	16ba8 <sav_read_value_label_record+0x284>
   16b10:	mov	r6, #3
   16b14:	cmp	r7, #0
   16b18:	bne	16b54 <sav_read_value_label_record+0x230>
   16b1c:	b	16b94 <sav_read_value_label_record+0x270>
   16b20:	mov	r6, #5
   16b24:	cmp	r7, #0
   16b28:	bne	16b54 <sav_read_value_label_record+0x230>
   16b2c:	b	16b94 <sav_read_value_label_record+0x270>
   16b30:	mov	r6, #3
   16b34:	ldr	r7, [sp, #12]
   16b38:	cmp	r7, #0
   16b3c:	bne	16b54 <sav_read_value_label_record+0x230>
   16b40:	b	16b94 <sav_read_value_label_record+0x270>
   16b44:	mov	r6, r0
   16b48:	ldr	r7, [sp, #12]
   16b4c:	cmp	r7, #0
   16b50:	beq	16b94 <sav_read_value_label_record+0x270>
   16b54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16b58:	cmp	r0, #0
   16b5c:	beq	16b8c <sav_read_value_label_record+0x268>
   16b60:	add	r4, r7, #64	; 0x40
   16b64:	mov	r5, #0
   16b68:	ldr	r0, [r4]
   16b6c:	cmp	r0, #0
   16b70:	beq	16b78 <sav_read_value_label_record+0x254>
   16b74:	bl	4938 <free@plt>
   16b78:	add	r4, r4, #72	; 0x48
   16b7c:	add	r5, r5, #1
   16b80:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16b84:	cmp	r5, r0
   16b88:	bcc	16b68 <sav_read_value_label_record+0x244>
   16b8c:	mov	r0, r7
   16b90:	bl	4938 <free@plt>
   16b94:	mov	r0, r6
   16b98:	sub	sp, fp, #28
   16b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ba0:	mov	r4, #0
   16ba4:	mov	r8, #0
   16ba8:	ldr	r3, [r9, #12]
   16bac:	ldr	r2, [r9, #20]
   16bb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16bb4:	lsl	r1, r0, #2
   16bb8:	mov	r0, r4
   16bbc:	blx	r3
   16bc0:	mov	r6, #2
   16bc4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16bc8:	cmp	r0, r1, lsl #2
   16bcc:	bcc	16d3c <sav_read_value_label_record+0x418>
   16bd0:	str	r4, [sp, #8]
   16bd4:	mov	r6, #0
   16bd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16bdc:	cmp	r0, #0
   16be0:	mov	r9, #0
   16be4:	beq	16c60 <sav_read_value_label_record+0x33c>
   16be8:	mov	r9, #0
   16bec:	ldr	r5, [pc, #356]	; 16d58 <sav_read_value_label_record+0x434>
   16bf0:	ldr	r5, [pc, r5]
   16bf4:	add	r4, sp, #16
   16bf8:	mov	r7, #0
   16bfc:	ldr	r0, [r8, r7, lsl #2]
   16c00:	str	r0, [sp, #16]
   16c04:	ldrb	r1, [sl, #436]	; 0x1b4
   16c08:	tst	r1, #1
   16c0c:	beq	16c18 <sav_read_value_label_record+0x2f4>
   16c10:	bl	480c <byteswap4@plt>
   16c14:	str	r0, [sp, #16]
   16c18:	ldr	r0, [sp, #16]
   16c1c:	sub	r0, r0, #1
   16c20:	str	r0, [sp, #16]
   16c24:	ldr	r1, [sl, #44]	; 0x2c
   16c28:	ldr	r2, [sl, #340]	; 0x154
   16c2c:	str	r5, [sp]
   16c30:	mov	r0, r4
   16c34:	mov	r3, #4
   16c38:	bl	4d34 <bsearch@plt>
   16c3c:	cmp	r0, #0
   16c40:	ldrne	r0, [r0]
   16c44:	ldrne	r1, [sl, #368]	; 0x170
   16c48:	strne	r1, [r0, #4]
   16c4c:	ldrne	r9, [r0]
   16c50:	add	r7, r7, #1
   16c54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16c58:	cmp	r7, r0
   16c5c:	bcc	16bfc <sav_read_value_label_record+0x2d8>
   16c60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16c64:	cmp	r0, #0
   16c68:	ldr	r7, [sp, #12]
   16c6c:	beq	16d10 <sav_read_value_label_record+0x3ec>
   16c70:	add	r4, r7, #48	; 0x30
   16c74:	mov	r7, #0
   16c78:	str	r9, [r4, #8]
   16c7c:	cmp	r9, #5
   16c80:	bne	16cac <sav_read_value_label_record+0x388>
   16c84:	vldr	d0, [r4, #-48]	; 0xffffffd0
   16c88:	ldrb	r0, [sl, #436]	; 0x1b4
   16c8c:	tst	r0, #1
   16c90:	beq	16c98 <sav_read_value_label_record+0x374>
   16c94:	bl	4fa4 <byteswap_double@plt>
   16c98:	vstr	d0, [r4]
   16c9c:	mov	r0, r4
   16ca0:	mov	r1, sl
   16ca4:	bl	178a0 <sav_tag_missing_double>
   16ca8:	b	16cd8 <sav_read_value_label_record+0x3b4>
   16cac:	ldr	r0, [sl, #336]	; 0x150
   16cb0:	str	r0, [sp]
   16cb4:	sub	r5, r4, #40	; 0x28
   16cb8:	sub	r2, r4, #48	; 0x30
   16cbc:	mov	r0, r5
   16cc0:	mov	r1, #33	; 0x21
   16cc4:	mov	r3, #8
   16cc8:	bl	4cbc <readstat_convert@plt>
   16ccc:	cmp	r0, #0
   16cd0:	bne	16d08 <sav_read_value_label_record+0x3e4>
   16cd4:	str	r5, [r4]
   16cd8:	add	r4, r4, #72	; 0x48
   16cdc:	add	r7, r7, #1
   16ce0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16ce4:	cmp	r7, r0
   16ce8:	bcc	16c78 <sav_read_value_label_record+0x354>
   16cec:	mov	r6, #0
   16cf0:	b	16d0c <sav_read_value_label_record+0x3e8>
   16cf4:	mov	r6, #3
   16cf8:	mov	r4, #0
   16cfc:	cmp	r8, #0
   16d00:	bne	16d44 <sav_read_value_label_record+0x420>
   16d04:	b	16b4c <sav_read_value_label_record+0x228>
   16d08:	mov	r6, r0
   16d0c:	ldr	r7, [sp, #12]
   16d10:	ldr	r0, [sl, #20]
   16d14:	cmp	r0, #0
   16d18:	ldr	r4, [sp, #8]
   16d1c:	beq	16d30 <sav_read_value_label_record+0x40c>
   16d20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16d24:	mov	r0, r7
   16d28:	mov	r2, sl
   16d2c:	bl	1792c <sav_submit_value_labels>
   16d30:	ldr	r0, [sl, #368]	; 0x170
   16d34:	add	r0, r0, #1
   16d38:	str	r0, [sl, #368]	; 0x170
   16d3c:	cmp	r8, #0
   16d40:	beq	16b4c <sav_read_value_label_record+0x228>
   16d44:	mov	r0, r4
   16d48:	bl	4938 <free@plt>
   16d4c:	cmp	r7, #0
   16d50:	bne	16b54 <sav_read_value_label_record+0x230>
   16d54:	b	16b94 <sav_read_value_label_record+0x270>
   16d58:	.word	0x0002e704

00016d5c <sav_read_document_record>:
   16d5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16d60:	add	fp, sp, #24
   16d64:	sub	sp, sp, #416	; 0x1a0
   16d68:	mov	r4, r0
   16d6c:	ldr	r0, [r0, #4]
   16d70:	cmp	r0, #0
   16d74:	beq	16da4 <sav_read_document_record+0x48>
   16d78:	ldr	r7, [r4, #36]	; 0x24
   16d7c:	ldr	r3, [r7, #12]
   16d80:	ldr	r2, [r7, #20]
   16d84:	sub	r0, fp, #28
   16d88:	mov	r1, #4
   16d8c:	blx	r3
   16d90:	cmp	r0, #4
   16d94:	bcs	16db4 <sav_read_document_record+0x58>
   16d98:	mov	r0, #2
   16d9c:	sub	sp, fp, #24
   16da0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16da4:	mov	r0, r4
   16da8:	sub	sp, fp, #24
   16dac:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16db0:	b	164e4 <sav_skip_document_record>
   16db4:	ldrb	r1, [r4, #436]	; 0x1b4
   16db8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16dbc:	tst	r1, #1
   16dc0:	beq	16dcc <sav_read_document_record+0x70>
   16dc4:	bl	480c <byteswap4@plt>
   16dc8:	str	r0, [fp, #-28]	; 0xffffffe4
   16dcc:	cmp	r0, #0
   16dd0:	beq	16e4c <sav_read_document_record+0xf0>
   16dd4:	mov	r5, #0
   16dd8:	sub	r6, fp, #108	; 0x6c
   16ddc:	add	r8, sp, #11
   16de0:	ldr	r3, [r7, #12]
   16de4:	ldr	r2, [r7, #20]
   16de8:	mov	r0, r6
   16dec:	mov	r1, #80	; 0x50
   16df0:	blx	r3
   16df4:	cmp	r0, #80	; 0x50
   16df8:	blt	16d98 <sav_read_document_record+0x3c>
   16dfc:	ldr	r0, [r4, #336]	; 0x150
   16e00:	str	r0, [sp]
   16e04:	mov	r0, r8
   16e08:	movw	r1, #321	; 0x141
   16e0c:	mov	r2, r6
   16e10:	mov	r3, #80	; 0x50
   16e14:	bl	4cbc <readstat_convert@plt>
   16e18:	cmp	r0, #0
   16e1c:	bne	16e5c <sav_read_document_record+0x100>
   16e20:	ldr	r3, [r4, #4]
   16e24:	ldr	r2, [r4, #40]	; 0x28
   16e28:	mov	r0, r5
   16e2c:	mov	r1, r8
   16e30:	blx	r3
   16e34:	cmp	r0, #0
   16e38:	bne	16e58 <sav_read_document_record+0xfc>
   16e3c:	add	r5, r5, #1
   16e40:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16e44:	cmp	r5, r0
   16e48:	bcc	16de0 <sav_read_document_record+0x84>
   16e4c:	mov	r0, #0
   16e50:	sub	sp, fp, #24
   16e54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16e58:	mov	r0, #4
   16e5c:	sub	sp, fp, #24
   16e60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016e64 <sav_read_dictionary_termination_record>:
   16e64:	push	{fp, lr}
   16e68:	mov	fp, sp
   16e6c:	sub	sp, sp, #8
   16e70:	ldr	r0, [r0, #36]	; 0x24
   16e74:	ldr	r3, [r0, #12]
   16e78:	ldr	r2, [r0, #20]
   16e7c:	add	r0, sp, #4
   16e80:	mov	r1, #4
   16e84:	blx	r3
   16e88:	mov	r1, #0
   16e8c:	cmp	r0, #4
   16e90:	movwcc	r1, #1
   16e94:	lsl	r0, r1, #1
   16e98:	mov	sp, fp
   16e9c:	pop	{fp, pc}

00016ea0 <sav_parse_machine_floating_point_record>:
   16ea0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16ea4:	add	fp, sp, #24
   16ea8:	mov	r4, r3
   16eac:	mov	r3, r0
   16eb0:	mov	r0, #5
   16eb4:	cmp	r1, #8
   16eb8:	cmpeq	r2, #3
   16ebc:	beq	16ec4 <sav_parse_machine_floating_point_record+0x24>
   16ec0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ec4:	ldr	r8, [r3, #20]
   16ec8:	ldr	r6, [r3, #16]
   16ecc:	ldr	r0, [r3]
   16ed0:	ldr	r1, [r3, #4]
   16ed4:	ldr	r7, [r3, #8]
   16ed8:	ldr	r5, [r3, #12]
   16edc:	ldrb	r2, [r4, #436]	; 0x1b4
   16ee0:	tst	r2, #1
   16ee4:	beq	16eec <sav_parse_machine_floating_point_record+0x4c>
   16ee8:	bl	47f4 <byteswap8@plt>
   16eec:	str	r0, [r4, #392]	; 0x188
   16ef0:	str	r1, [r4, #396]	; 0x18c
   16ef4:	ldrb	r0, [r4, #436]	; 0x1b4
   16ef8:	tst	r0, #1
   16efc:	beq	16f14 <sav_parse_machine_floating_point_record+0x74>
   16f00:	mov	r0, r7
   16f04:	mov	r1, r5
   16f08:	bl	47f4 <byteswap8@plt>
   16f0c:	mov	r7, r0
   16f10:	mov	r5, r1
   16f14:	str	r7, [r4, #408]	; 0x198
   16f18:	str	r5, [r4, #412]	; 0x19c
   16f1c:	ldrb	r0, [r4, #436]	; 0x1b4
   16f20:	tst	r0, #1
   16f24:	beq	16f3c <sav_parse_machine_floating_point_record+0x9c>
   16f28:	mov	r0, r6
   16f2c:	mov	r1, r8
   16f30:	bl	47f4 <byteswap8@plt>
   16f34:	mov	r6, r0
   16f38:	mov	r8, r1
   16f3c:	str	r6, [r4, #400]	; 0x190
   16f40:	str	r8, [r4, #404]	; 0x194
   16f44:	mov	r0, #0
   16f48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016f4c <sav_store_variable_display_parameter_record>:
   16f4c:	push	{r4, r5, r6, r7, fp, lr}
   16f50:	add	fp, sp, #16
   16f54:	mov	r6, r0
   16f58:	mov	r0, #5
   16f5c:	cmp	r1, #4
   16f60:	bne	16fd0 <sav_store_variable_display_parameter_record+0x84>
   16f64:	mov	r4, r3
   16f68:	mov	r5, r2
   16f6c:	ldr	r0, [r3, #328]	; 0x148
   16f70:	lsl	r1, r2, #2
   16f74:	bl	4d70 <readstat_realloc@plt>
   16f78:	str	r0, [r4, #328]	; 0x148
   16f7c:	cmp	r5, #0
   16f80:	beq	16f94 <sav_store_variable_display_parameter_record+0x48>
   16f84:	mov	r1, r0
   16f88:	mov	r0, #3
   16f8c:	cmp	r1, #0
   16f90:	popeq	{r4, r5, r6, r7, fp, pc}
   16f94:	str	r5, [r4, #332]	; 0x14c
   16f98:	cmp	r5, #0
   16f9c:	beq	16fcc <sav_store_variable_display_parameter_record+0x80>
   16fa0:	mov	r7, #0
   16fa4:	ldr	r0, [r6, r7, lsl #2]
   16fa8:	ldrb	r1, [r4, #436]	; 0x1b4
   16fac:	tst	r1, #1
   16fb0:	beq	16fb8 <sav_store_variable_display_parameter_record+0x6c>
   16fb4:	bl	480c <byteswap4@plt>
   16fb8:	ldr	r1, [r4, #328]	; 0x148
   16fbc:	str	r0, [r1, r7, lsl #2]
   16fc0:	add	r7, r7, #1
   16fc4:	cmp	r5, r7
   16fc8:	bne	16fa4 <sav_store_variable_display_parameter_record+0x58>
   16fcc:	mov	r0, #0
   16fd0:	pop	{r4, r5, r6, r7, fp, pc}

00016fd4 <sav_parse_long_string_value_labels_record>:
   16fd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16fd8:	add	fp, sp, #28
   16fdc:	sub	sp, sp, #564	; 0x234
   16fe0:	mov	r6, r3
   16fe4:	ldr	r3, [r3, #20]
   16fe8:	cmp	r3, #0
   16fec:	beq	172b0 <sav_parse_long_string_value_labels_record+0x2dc>
   16ff0:	mov	sl, #5
   16ff4:	cmp	r1, #1
   16ff8:	bne	172f4 <sav_parse_long_string_value_labels_record+0x320>
   16ffc:	str	r0, [fp, #-36]	; 0xffffffdc
   17000:	add	r1, r0, r2
   17004:	str	r1, [sp, #28]
   17008:	cmp	r2, #1
   1700c:	blt	172b8 <sav_parse_long_string_value_labels_record+0x2e4>
   17010:	add	r8, sp, #40	; 0x28
   17014:	sub	lr, fp, #256	; 0x100
   17018:	sub	r5, lr, #37	; 0x25
   1701c:	sub	r4, fp, #36	; 0x24
   17020:	mov	r9, #0
   17024:	mov	r0, #0
   17028:	str	r0, [sp, #32]
   1702c:	mov	r0, r8
   17030:	mov	r1, #0
   17034:	mov	r2, #256	; 0x100
   17038:	bl	4d28 <memset@plt>
   1703c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17040:	ldr	r1, [sp, #28]
   17044:	sub	r2, r1, r0
   17048:	mov	r0, r5
   1704c:	mov	r1, r4
   17050:	mov	r3, r6
   17054:	bl	179bc <sav_read_pascal_string>
   17058:	mov	sl, r0
   1705c:	cmp	r0, #0
   17060:	bne	172d4 <sav_parse_long_string_value_labels_record+0x300>
   17064:	ldr	r0, [r6, #340]	; 0x154
   17068:	cmp	r0, #0
   1706c:	beq	170d0 <sav_parse_long_string_value_labels_record+0xfc>
   17070:	ldr	r4, [r6, #44]	; 0x2c
   17074:	mov	r5, #0
   17078:	ldr	r7, [r4, r5, lsl #2]
   1707c:	add	r1, r7, #196	; 0xc4
   17080:	sub	lr, fp, #256	; 0x100
   17084:	sub	r0, lr, #37	; 0x25
   17088:	bl	4878 <strcmp@plt>
   1708c:	cmp	r0, #0
   17090:	beq	170ac <sav_parse_long_string_value_labels_record+0xd8>
   17094:	ldr	r0, [r7, #48]	; 0x30
   17098:	add	r5, r0, r5
   1709c:	ldr	r0, [r6, #340]	; 0x154
   170a0:	cmp	r5, r0
   170a4:	bcc	17078 <sav_parse_long_string_value_labels_record+0xa4>
   170a8:	b	170d0 <sav_parse_long_string_value_labels_record+0xfc>
   170ac:	ldr	r3, [r6, #368]	; 0x170
   170b0:	add	r0, r3, #1
   170b4:	str	r0, [r6, #368]	; 0x170
   170b8:	str	r3, [r7, #4]
   170bc:	mov	r0, r8
   170c0:	mov	r1, #256	; 0x100
   170c4:	ldr	r2, [pc, #696]	; 17384 <sav_parse_long_string_value_labels_record+0x3b0>
   170c8:	add	r2, pc, r2
   170cc:	bl	4d04 <snprintf@plt>
   170d0:	ldrb	r0, [sp, #40]	; 0x28
   170d4:	cmp	r0, #0
   170d8:	beq	1733c <sav_parse_long_string_value_labels_record+0x368>
   170dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   170e0:	add	r0, r1, #4
   170e4:	str	r0, [fp, #-36]	; 0xffffffdc
   170e8:	add	r4, r1, #8
   170ec:	ldr	r1, [sp, #28]
   170f0:	cmp	r4, r1
   170f4:	bhi	1733c <sav_parse_long_string_value_labels_record+0x368>
   170f8:	ldr	r0, [r0]
   170fc:	ldrb	r1, [r6, #436]	; 0x1b4
   17100:	tst	r1, #1
   17104:	beq	1710c <sav_parse_long_string_value_labels_record+0x138>
   17108:	bl	480c <byteswap4@plt>
   1710c:	sub	lr, fp, #256	; 0x100
   17110:	sub	r5, lr, #37	; 0x25
   17114:	str	r4, [fp, #-36]	; 0xffffffdc
   17118:	cmp	r0, #0
   1711c:	beq	17298 <sav_parse_long_string_value_labels_record+0x2c4>
   17120:	str	r6, [sp, #24]
   17124:	mov	r6, #0
   17128:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1712c:	ldr	sl, [sp, #32]
   17130:	str	r0, [sp, #16]
   17134:	str	r9, [sp, #36]	; 0x24
   17138:	add	r8, r5, #4
   1713c:	ldr	r9, [sp, #28]
   17140:	cmp	r8, r9
   17144:	bhi	17310 <sav_parse_long_string_value_labels_record+0x33c>
   17148:	ldr	r7, [r5]
   1714c:	ldr	r0, [sp, #24]
   17150:	ldrb	r0, [r0, #436]	; 0x1b4
   17154:	tst	r0, #1
   17158:	beq	17168 <sav_parse_long_string_value_labels_record+0x194>
   1715c:	mov	r0, r7
   17160:	bl	480c <byteswap4@plt>
   17164:	mov	r7, r0
   17168:	mov	r0, #1
   1716c:	orr	r4, r0, r7, lsl #2
   17170:	mov	r0, sl
   17174:	mov	r1, r4
   17178:	bl	4d70 <readstat_realloc@plt>
   1717c:	cmp	r0, #0
   17180:	beq	17324 <sav_parse_long_string_value_labels_record+0x350>
   17184:	add	r5, r8, r7
   17188:	cmp	r5, r9
   1718c:	str	r0, [sp, #32]
   17190:	bhi	17300 <sav_parse_long_string_value_labels_record+0x32c>
   17194:	str	r6, [sp, #20]
   17198:	ldr	r6, [sp, #24]
   1719c:	ldr	r1, [r6, #336]	; 0x150
   171a0:	str	r1, [sp]
   171a4:	mov	r1, r4
   171a8:	mov	r2, r8
   171ac:	mov	r3, r7
   171b0:	bl	4cbc <readstat_convert@plt>
   171b4:	cmp	r0, #0
   171b8:	bne	17308 <sav_parse_long_string_value_labels_record+0x334>
   171bc:	add	r8, r5, #4
   171c0:	cmp	r8, r9
   171c4:	bhi	17344 <sav_parse_long_string_value_labels_record+0x370>
   171c8:	ldr	r7, [r5]
   171cc:	ldrb	r0, [r6, #436]	; 0x1b4
   171d0:	tst	r0, #1
   171d4:	beq	171e4 <sav_parse_long_string_value_labels_record+0x210>
   171d8:	mov	r0, r7
   171dc:	bl	480c <byteswap4@plt>
   171e0:	mov	r7, r0
   171e4:	mov	r0, #1
   171e8:	orr	r4, r0, r7, lsl #2
   171ec:	ldr	r0, [sp, #36]	; 0x24
   171f0:	mov	r1, r4
   171f4:	bl	4d70 <readstat_realloc@plt>
   171f8:	str	r0, [sp, #36]	; 0x24
   171fc:	cmp	r0, #0
   17200:	beq	17350 <sav_parse_long_string_value_labels_record+0x37c>
   17204:	add	r5, r8, r7
   17208:	cmp	r5, r9
   1720c:	bhi	17300 <sav_parse_long_string_value_labels_record+0x32c>
   17210:	ldr	r0, [r6, #336]	; 0x150
   17214:	str	r0, [sp]
   17218:	ldr	r9, [sp, #36]	; 0x24
   1721c:	mov	r0, r9
   17220:	mov	r1, r4
   17224:	mov	r2, r8
   17228:	mov	r3, r7
   1722c:	bl	4cbc <readstat_convert@plt>
   17230:	cmp	r0, #0
   17234:	bne	17308 <sav_parse_long_string_value_labels_record+0x334>
   17238:	ldr	r1, [r6, #20]
   1723c:	ldr	r0, [r6, #40]	; 0x28
   17240:	mov	r2, #0
   17244:	str	r2, [sp]
   17248:	stmib	sp, {r2, r9}
   1724c:	str	r0, [sp, #12]
   17250:	add	r8, sp, #40	; 0x28
   17254:	mov	r0, r8
   17258:	ldr	sl, [sp, #32]
   1725c:	mov	r2, sl
   17260:	mov	r3, #0
   17264:	blx	r1
   17268:	cmp	r0, #0
   1726c:	bne	17360 <sav_parse_long_string_value_labels_record+0x38c>
   17270:	ldr	r6, [sp, #20]
   17274:	add	r6, r6, #1
   17278:	ldr	r0, [sp, #16]
   1727c:	cmp	r6, r0
   17280:	bcc	17134 <sav_parse_long_string_value_labels_record+0x160>
   17284:	str	r5, [fp, #-36]	; 0xffffffdc
   17288:	mov	sl, #0
   1728c:	ldr	r6, [sp, #24]
   17290:	sub	lr, fp, #256	; 0x100
   17294:	sub	r5, lr, #37	; 0x25
   17298:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1729c:	ldr	r1, [sp, #28]
   172a0:	cmp	r0, r1
   172a4:	sub	r4, fp, #36	; 0x24
   172a8:	bcc	1702c <sav_parse_long_string_value_labels_record+0x58>
   172ac:	b	172c8 <sav_parse_long_string_value_labels_record+0x2f4>
   172b0:	mov	sl, #0
   172b4:	b	172f4 <sav_parse_long_string_value_labels_record+0x320>
   172b8:	mov	r1, #0
   172bc:	str	r1, [sp, #32]
   172c0:	mov	r9, #0
   172c4:	mov	sl, #0
   172c8:	ldr	r1, [sp, #28]
   172cc:	cmp	r0, r1
   172d0:	movne	sl, #5
   172d4:	ldr	r0, [sp, #32]
   172d8:	cmp	r0, #0
   172dc:	beq	172e4 <sav_parse_long_string_value_labels_record+0x310>
   172e0:	bl	4938 <free@plt>
   172e4:	cmp	r9, #0
   172e8:	beq	172f4 <sav_parse_long_string_value_labels_record+0x320>
   172ec:	mov	r0, r9
   172f0:	bl	4938 <free@plt>
   172f4:	mov	r0, sl
   172f8:	sub	sp, fp, #28
   172fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17300:	mov	sl, #5
   17304:	b	17368 <sav_parse_long_string_value_labels_record+0x394>
   17308:	mov	sl, r0
   1730c:	b	17368 <sav_parse_long_string_value_labels_record+0x394>
   17310:	str	sl, [sp, #32]
   17314:	str	r5, [fp, #-36]	; 0xffffffdc
   17318:	mov	sl, #5
   1731c:	ldr	r9, [sp, #36]	; 0x24
   17320:	b	172d4 <sav_parse_long_string_value_labels_record+0x300>
   17324:	str	r8, [fp, #-36]	; 0xffffffdc
   17328:	mov	sl, #3
   1732c:	ldr	r9, [sp, #36]	; 0x24
   17330:	cmp	r9, #0
   17334:	bne	172ec <sav_parse_long_string_value_labels_record+0x318>
   17338:	b	172f4 <sav_parse_long_string_value_labels_record+0x320>
   1733c:	mov	sl, #5
   17340:	b	172d4 <sav_parse_long_string_value_labels_record+0x300>
   17344:	mov	r8, r5
   17348:	mov	sl, #5
   1734c:	b	17368 <sav_parse_long_string_value_labels_record+0x394>
   17350:	mov	r0, #0
   17354:	str	r0, [sp, #36]	; 0x24
   17358:	mov	sl, #3
   1735c:	b	17368 <sav_parse_long_string_value_labels_record+0x394>
   17360:	mov	sl, #4
   17364:	mov	r8, r5
   17368:	str	r8, [fp, #-36]	; 0xffffffdc
   1736c:	ldr	r9, [sp, #36]	; 0x24
   17370:	ldr	r0, [sp, #32]
   17374:	bl	4938 <free@plt>
   17378:	cmp	r9, #0
   1737c:	bne	172ec <sav_parse_long_string_value_labels_record+0x318>
   17380:	b	172f4 <sav_parse_long_string_value_labels_record+0x320>
   17384:	.word	0x0000ee0b

00017388 <sav_parse_long_string_missing_values_record>:
   17388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1738c:	add	fp, sp, #28
   17390:	sub	sp, sp, #284	; 0x11c
   17394:	mov	sl, #5
   17398:	cmp	r1, #1
   1739c:	bne	17548 <sav_parse_long_string_missing_values_record+0x1c0>
   173a0:	mov	r5, r3
   173a4:	str	r0, [fp, #-36]	; 0xffffffdc
   173a8:	add	r8, r0, r2
   173ac:	add	r7, sp, #19
   173b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   173b4:	cmp	r0, r8
   173b8:	bcs	17538 <sav_parse_long_string_missing_values_record+0x1b0>
   173bc:	sub	r2, r8, r0
   173c0:	mov	r0, r7
   173c4:	sub	r1, fp, #36	; 0x24
   173c8:	mov	r3, r5
   173cc:	bl	179bc <sav_read_pascal_string>
   173d0:	cmp	r0, #0
   173d4:	bne	17544 <sav_parse_long_string_missing_values_record+0x1bc>
   173d8:	mov	sl, #5
   173dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   173e0:	cmp	r0, r8
   173e4:	beq	17548 <sav_parse_long_string_missing_values_record+0x1c0>
   173e8:	add	r1, r0, #1
   173ec:	str	r1, [fp, #-36]	; 0xffffffdc
   173f0:	ldrb	r0, [r0]
   173f4:	str	r0, [sp, #12]
   173f8:	sub	r0, r0, #1
   173fc:	uxtb	r0, r0
   17400:	cmp	r0, #2
   17404:	bhi	17548 <sav_parse_long_string_missing_values_record+0x1c0>
   17408:	ldr	r0, [r5, #340]	; 0x154
   1740c:	cmp	r0, #0
   17410:	beq	1744c <sav_parse_long_string_missing_values_record+0xc4>
   17414:	ldr	r6, [r5, #44]	; 0x2c
   17418:	mov	r9, #0
   1741c:	ldr	r4, [r6, r9, lsl #2]
   17420:	add	r1, r4, #196	; 0xc4
   17424:	mov	r0, r7
   17428:	bl	4878 <strcmp@plt>
   1742c:	cmp	r0, #0
   17430:	beq	17454 <sav_parse_long_string_missing_values_record+0xcc>
   17434:	ldr	r0, [r4, #48]	; 0x30
   17438:	add	r9, r0, r9
   1743c:	ldr	r0, [r5, #340]	; 0x154
   17440:	cmp	r9, r0
   17444:	bcc	1741c <sav_parse_long_string_missing_values_record+0x94>
   17448:	b	17510 <sav_parse_long_string_missing_values_record+0x188>
   1744c:	mov	r9, #0
   17450:	b	17510 <sav_parse_long_string_missing_values_record+0x188>
   17454:	ldr	r0, [sp, #12]
   17458:	str	r0, [r4, #52]	; 0x34
   1745c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17460:	add	r6, r0, #4
   17464:	cmp	r6, r8
   17468:	bhi	17548 <sav_parse_long_string_missing_values_record+0x1c0>
   1746c:	ldr	r3, [r0]
   17470:	ldrb	r0, [r5, #436]	; 0x1b4
   17474:	tst	r0, #1
   17478:	beq	17488 <sav_parse_long_string_missing_values_record+0x100>
   1747c:	mov	r0, r3
   17480:	bl	480c <byteswap4@plt>
   17484:	mov	r3, r0
   17488:	str	r6, [fp, #-36]	; 0xffffffdc
   1748c:	ldr	r0, [sp, #12]
   17490:	cmp	r0, #0
   17494:	beq	17510 <sav_parse_long_string_missing_values_record+0x188>
   17498:	str	r8, [sp, #8]
   1749c:	add	r4, r4, #88	; 0x58
   174a0:	mov	sl, #0
   174a4:	ldr	r7, [fp, #-36]	; 0xffffffdc
   174a8:	add	r6, r7, r3
   174ac:	ldr	r0, [sp, #8]
   174b0:	cmp	r6, r0
   174b4:	bhi	17520 <sav_parse_long_string_missing_values_record+0x198>
   174b8:	mov	r8, r5
   174bc:	ldr	r0, [r5, #336]	; 0x150
   174c0:	str	r0, [sp]
   174c4:	mov	r0, r4
   174c8:	mov	r1, #33	; 0x21
   174cc:	mov	r2, r7
   174d0:	mov	r5, r3
   174d4:	bl	4cbc <readstat_convert@plt>
   174d8:	cmp	r0, #0
   174dc:	bne	1752c <sav_parse_long_string_missing_values_record+0x1a4>
   174e0:	add	r4, r4, #33	; 0x21
   174e4:	add	sl, sl, #1
   174e8:	ldr	r0, [sp, #12]
   174ec:	cmp	sl, r0
   174f0:	mov	r7, r6
   174f4:	mov	r3, r5
   174f8:	mov	r5, r8
   174fc:	bcc	174a8 <sav_parse_long_string_missing_values_record+0x120>
   17500:	str	r6, [fp, #-36]	; 0xffffffdc
   17504:	mov	sl, #5
   17508:	ldr	r8, [sp, #8]
   1750c:	add	r7, sp, #19
   17510:	ldr	r0, [r5, #340]	; 0x154
   17514:	cmp	r9, r0
   17518:	bne	173b0 <sav_parse_long_string_missing_values_record+0x28>
   1751c:	b	17548 <sav_parse_long_string_missing_values_record+0x1c0>
   17520:	mov	sl, #5
   17524:	str	r7, [fp, #-36]	; 0xffffffdc
   17528:	b	17548 <sav_parse_long_string_missing_values_record+0x1c0>
   1752c:	mov	sl, r0
   17530:	str	r7, [fp, #-36]	; 0xffffffdc
   17534:	b	17548 <sav_parse_long_string_missing_values_record+0x1c0>
   17538:	sub	sl, r0, r8
   1753c:	movwne	sl, #5
   17540:	b	17548 <sav_parse_long_string_missing_values_record+0x1c0>
   17544:	mov	sl, r0
   17548:	mov	r0, sl
   1754c:	sub	sp, fp, #28
   17550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017554 <sav_read_variable_label>:
   17554:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17558:	add	fp, sp, #28
   1755c:	sub	sp, sp, #12
   17560:	mov	r5, r1
   17564:	mov	r4, r0
   17568:	ldr	r9, [r1, #36]	; 0x24
   1756c:	ldr	r3, [r9, #12]
   17570:	ldr	r2, [r9, #20]
   17574:	add	r0, sp, #8
   17578:	mov	r1, #4
   1757c:	blx	r3
   17580:	mov	r6, #2
   17584:	cmp	r0, #4
   17588:	bcc	17658 <sav_read_variable_label+0x104>
   1758c:	ldrb	r1, [r5, #436]	; 0x1b4
   17590:	ldr	r0, [sp, #8]
   17594:	tst	r1, #1
   17598:	beq	175a0 <sav_read_variable_label+0x4c>
   1759c:	bl	480c <byteswap4@plt>
   175a0:	str	r0, [sp, #8]
   175a4:	mov	r7, #0
   175a8:	cmp	r0, #0
   175ac:	beq	17674 <sav_read_variable_label+0x120>
   175b0:	add	r0, r0, #3
   175b4:	bic	sl, r0, #3
   175b8:	mov	r0, sl
   175bc:	bl	4cb0 <readstat_malloc@plt>
   175c0:	cmp	r0, #0
   175c4:	beq	17644 <sav_read_variable_label+0xf0>
   175c8:	mov	r8, r0
   175cc:	ldr	r0, [sp, #8]
   175d0:	mov	r1, #1
   175d4:	orr	r6, r1, r0, lsl #2
   175d8:	mov	r0, r6
   175dc:	bl	4cb0 <readstat_malloc@plt>
   175e0:	str	r0, [r4, #264]	; 0x108
   175e4:	cmp	r0, #0
   175e8:	beq	1764c <sav_read_variable_label+0xf8>
   175ec:	str	r6, [sp, #4]
   175f0:	ldr	r3, [r9, #12]
   175f4:	ldr	r2, [r9, #20]
   175f8:	mov	r0, r8
   175fc:	mov	r1, sl
   17600:	blx	r3
   17604:	mov	r6, #2
   17608:	cmp	r0, sl
   1760c:	bcc	17650 <sav_read_variable_label+0xfc>
   17610:	ldr	r0, [r4, #264]	; 0x108
   17614:	ldr	r1, [r5, #336]	; 0x150
   17618:	ldr	r3, [sp, #8]
   1761c:	str	r1, [sp]
   17620:	ldr	r1, [sp, #4]
   17624:	mov	r2, r8
   17628:	bl	4cbc <readstat_convert@plt>
   1762c:	mov	r6, r0
   17630:	mov	r0, r8
   17634:	bl	4938 <free@plt>
   17638:	cmp	r6, #0
   1763c:	bne	17658 <sav_read_variable_label+0x104>
   17640:	b	17674 <sav_read_variable_label+0x120>
   17644:	mov	r6, #3
   17648:	b	17658 <sav_read_variable_label+0x104>
   1764c:	mov	r6, #3
   17650:	mov	r0, r8
   17654:	bl	4938 <free@plt>
   17658:	ldr	r0, [r4, #264]	; 0x108
   1765c:	cmp	r0, #0
   17660:	beq	17670 <sav_read_variable_label+0x11c>
   17664:	bl	4938 <free@plt>
   17668:	mov	r0, #0
   1766c:	str	r0, [r4, #264]	; 0x108
   17670:	mov	r7, r6
   17674:	mov	r0, r7
   17678:	sub	sp, fp, #28
   1767c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017680 <sav_read_variable_missing_values>:
   17680:	ldr	r2, [r0, #52]	; 0x34
   17684:	add	r3, r2, #3
   17688:	cmp	r3, #6
   1768c:	movhi	r0, #5
   17690:	bxhi	lr
   17694:	cmn	r2, #1
   17698:	ble	176a8 <sav_read_variable_missing_values+0x28>
   1769c:	mov	r2, #0
   176a0:	str	r2, [r0, #56]	; 0x38
   176a4:	b	176b8 <sav_read_variable_missing_values+0x38>
   176a8:	mov	r3, #1
   176ac:	rsb	r2, r2, #0
   176b0:	str	r2, [r0, #52]	; 0x34
   176b4:	str	r3, [r0, #56]	; 0x38
   176b8:	ldr	r2, [r0]
   176bc:	cmp	r2, #5
   176c0:	bne	176c8 <sav_read_variable_missing_values+0x48>
   176c4:	b	176cc <sav_read_variable_missing_double_values>
   176c8:	b	17804 <sav_read_variable_missing_string_values>

000176cc <sav_read_variable_missing_double_values>:
   176cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176d0:	add	fp, sp, #28
   176d4:	sub	sp, sp, #4
   176d8:	mov	r7, r1
   176dc:	mov	r8, r0
   176e0:	ldr	r0, [r1, #36]	; 0x24
   176e4:	ldr	r3, [r0, #12]
   176e8:	ldr	r2, [r0, #20]
   176ec:	ldr	r0, [r8, #52]	; 0x34
   176f0:	add	r9, r8, #64	; 0x40
   176f4:	lsl	r1, r0, #3
   176f8:	mov	r0, r9
   176fc:	blx	r3
   17700:	mov	r1, r0
   17704:	ldr	r2, [r8, #52]	; 0x34
   17708:	mov	r0, #2
   1770c:	cmp	r1, r2, lsl #3
   17710:	bcc	177fc <sav_read_variable_missing_double_values+0x130>
   17714:	ldr	r0, [r8, #52]	; 0x34
   17718:	cmp	r0, #1
   1771c:	blt	177f8 <sav_read_variable_missing_double_values+0x12c>
   17720:	add	r5, r7, #408	; 0x198
   17724:	add	r6, r7, #400	; 0x190
   17728:	add	ip, r7, #392	; 0x188
   1772c:	mov	lr, #0
   17730:	mov	sl, #0
   17734:	str	r7, [sp]
   17738:	ldrb	r0, [r7, #436]	; 0x1b4
   1773c:	tst	r0, #1
   17740:	beq	17774 <sav_read_variable_missing_double_values+0xa8>
   17744:	mov	r7, r8
   17748:	add	r8, r9, sl, lsl #3
   1774c:	vldr	d0, [r8]
   17750:	mov	r4, r9
   17754:	mov	r9, ip
   17758:	bl	4fa4 <byteswap_double@plt>
   1775c:	mov	lr, #0
   17760:	mov	ip, r9
   17764:	mov	r9, r4
   17768:	vstr	d0, [r8]
   1776c:	mov	r8, r7
   17770:	ldr	r7, [sp]
   17774:	mov	r0, r9
   17778:	ldr	r1, [r0, sl, lsl #3]!
   1777c:	ldrd	r2, [ip]
   17780:	eor	r4, r1, r2
   17784:	ldr	r2, [r0, #4]
   17788:	eor	r3, r2, r3
   1778c:	orrs	r3, r4, r3
   17790:	movweq	r3, #0
   17794:	movteq	r3, #32760	; 0x7ff8
   17798:	streq	lr, [r0]
   1779c:	streq	r3, [r0, #4]
   177a0:	ldr	r4, [r6]
   177a4:	ldr	r3, [r6, #4]
   177a8:	eor	r3, r2, r3
   177ac:	eor	r4, r1, r4
   177b0:	orrs	r3, r4, r3
   177b4:	movweq	r3, #0
   177b8:	movteq	r3, #65520	; 0xfff0
   177bc:	streq	lr, [r0]
   177c0:	streq	r3, [r0, #4]
   177c4:	ldr	r4, [r5]
   177c8:	ldr	r3, [r5, #4]
   177cc:	eor	r2, r2, r3
   177d0:	eor	r1, r1, r4
   177d4:	orrs	r1, r1, r2
   177d8:	movweq	r1, #0
   177dc:	movteq	r1, #32752	; 0x7ff0
   177e0:	streq	lr, [r0]
   177e4:	streq	r1, [r0, #4]
   177e8:	add	sl, sl, #1
   177ec:	ldr	r0, [r8, #52]	; 0x34
   177f0:	cmp	sl, r0
   177f4:	blt	17738 <sav_read_variable_missing_double_values+0x6c>
   177f8:	mov	r0, #0
   177fc:	sub	sp, fp, #28
   17800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017804 <sav_read_variable_missing_string_values>:
   17804:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17808:	add	fp, sp, #24
   1780c:	sub	sp, sp, #16
   17810:	mov	r5, r0
   17814:	ldr	r0, [r0, #52]	; 0x34
   17818:	cmp	r0, #1
   1781c:	blt	17888 <sav_read_variable_missing_string_values+0x84>
   17820:	mov	r9, r1
   17824:	ldr	r7, [r1, #36]	; 0x24
   17828:	add	r6, r5, #88	; 0x58
   1782c:	mov	r4, #0
   17830:	add	r8, sp, #8
   17834:	ldr	r3, [r7, #12]
   17838:	ldr	r2, [r7, #20]
   1783c:	mov	r0, r8
   17840:	mov	r1, #8
   17844:	blx	r3
   17848:	cmp	r0, #8
   1784c:	bcc	17894 <sav_read_variable_missing_string_values+0x90>
   17850:	ldr	r0, [r9, #336]	; 0x150
   17854:	str	r0, [sp]
   17858:	mov	r0, r6
   1785c:	mov	r1, #33	; 0x21
   17860:	mov	r2, r8
   17864:	mov	r3, #8
   17868:	bl	4cbc <readstat_convert@plt>
   1786c:	cmp	r0, #0
   17870:	bne	1788c <sav_read_variable_missing_string_values+0x88>
   17874:	add	r6, r6, #33	; 0x21
   17878:	add	r4, r4, #1
   1787c:	ldr	r0, [r5, #52]	; 0x34
   17880:	cmp	r4, r0
   17884:	blt	17834 <sav_read_variable_missing_string_values+0x30>
   17888:	mov	r0, #0
   1788c:	sub	sp, fp, #24
   17890:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17894:	mov	r0, #2
   17898:	sub	sp, fp, #24
   1789c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000178a0 <sav_tag_missing_double>:
   178a0:	push	{r4, sl, fp, lr}
   178a4:	add	fp, sp, #8
   178a8:	mov	r4, r0
   178ac:	vldr	d0, [r0]
   178b0:	ldr	ip, [r1, #392]	; 0x188
   178b4:	ldr	r3, [r1, #396]	; 0x18c
   178b8:	vmov	r0, r2, d0
   178bc:	eor	lr, r3, r2
   178c0:	eor	r3, ip, r0
   178c4:	orrs	r3, r3, lr
   178c8:	ldrbeq	r3, [r4, #13]
   178cc:	orreq	r3, r3, #1
   178d0:	strbeq	r3, [r4, #13]
   178d4:	ldr	ip, [r1, #400]	; 0x190
   178d8:	ldr	r3, [r1, #404]	; 0x194
   178dc:	eor	lr, r3, r2
   178e0:	eor	r3, ip, r0
   178e4:	orrs	r3, r3, lr
   178e8:	ldrbeq	r3, [r4, #13]
   178ec:	orreq	r3, r3, #1
   178f0:	strbeq	r3, [r4, #13]
   178f4:	ldr	r3, [r1, #408]	; 0x198
   178f8:	ldr	r1, [r1, #412]	; 0x19c
   178fc:	eor	r1, r1, r2
   17900:	eor	r0, r3, r0
   17904:	orrs	r0, r0, r1
   17908:	ldrbeq	r0, [r4, #13]
   1790c:	orreq	r0, r0, #1
   17910:	strbeq	r0, [r4, #13]
   17914:	bl	4db8 <__isnan@plt>
   17918:	cmp	r0, #0
   1791c:	ldrbne	r0, [r4, #13]
   17920:	orrne	r0, r0, #1
   17924:	strbne	r0, [r4, #13]
   17928:	pop	{r4, sl, fp, pc}

0001792c <sav_submit_value_labels>:
   1792c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17930:	add	fp, sp, #28
   17934:	sub	sp, sp, #276	; 0x114
   17938:	mov	sl, r2
   1793c:	mov	r9, r1
   17940:	mov	r6, r0
   17944:	ldr	r3, [r2, #368]	; 0x170
   17948:	add	r0, sp, #16
   1794c:	ldr	r2, [pc, #100]	; 179b8 <sav_submit_value_labels+0x8c>
   17950:	add	r2, pc, r2
   17954:	mov	r1, #256	; 0x100
   17958:	bl	4d04 <snprintf@plt>
   1795c:	cmp	r9, #1
   17960:	blt	179b0 <sav_submit_value_labels+0x84>
   17964:	add	r7, r6, #64	; 0x40
   17968:	mov	r6, #1
   1796c:	add	r8, sp, #16
   17970:	ldr	r2, [r7, #-16]
   17974:	ldr	r3, [r7, #-12]
   17978:	ldmda	r7, {r0, r1, r5}
   1797c:	ldr	ip, [sl, #20]
   17980:	ldr	r4, [sl, #40]	; 0x28
   17984:	stm	sp, {r0, r1, r5}
   17988:	str	r4, [sp, #12]
   1798c:	mov	r0, r8
   17990:	blx	ip
   17994:	cmp	r0, #0
   17998:	bne	179b0 <sav_submit_value_labels+0x84>
   1799c:	add	r7, r7, #72	; 0x48
   179a0:	add	r0, r6, #1
   179a4:	cmp	r6, r9
   179a8:	mov	r6, r0
   179ac:	blt	17970 <sav_submit_value_labels+0x44>
   179b0:	sub	sp, fp, #28
   179b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179b8:	.word	0x0000e583

000179bc <sav_read_pascal_string>:
   179bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   179c0:	add	fp, sp, #28
   179c4:	sub	sp, sp, #4
   179c8:	mov	r4, r1
   179cc:	ldr	r6, [r1]
   179d0:	mov	r5, #5
   179d4:	cmp	r2, #4
   179d8:	blt	17a40 <sav_read_pascal_string+0x84>
   179dc:	mov	r8, r0
   179e0:	add	sl, r6, r2
   179e4:	add	r9, r6, #4
   179e8:	ldr	r7, [r6]
   179ec:	ldrb	r0, [r3, #436]	; 0x1b4
   179f0:	tst	r0, #1
   179f4:	beq	17a04 <sav_read_pascal_string+0x48>
   179f8:	mov	r0, r7
   179fc:	bl	480c <byteswap4@plt>
   17a00:	mov	r7, r0
   17a04:	add	r6, r9, r7
   17a08:	cmp	r6, sl
   17a0c:	bls	17a18 <sav_read_pascal_string+0x5c>
   17a10:	mov	r6, r9
   17a14:	b	17a40 <sav_read_pascal_string+0x84>
   17a18:	mov	r0, #0
   17a1c:	str	r0, [sp]
   17a20:	mov	r0, r8
   17a24:	movw	r1, #257	; 0x101
   17a28:	mov	r2, r9
   17a2c:	mov	r3, r7
   17a30:	bl	4cbc <readstat_convert@plt>
   17a34:	mov	r5, r0
   17a38:	cmp	r0, #0
   17a3c:	movne	r6, r9
   17a40:	str	r6, [r4]
   17a44:	mov	r0, r5
   17a48:	sub	sp, fp, #28
   17a4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017a50 <sav_read_compressed_data>:
   17a50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a54:	add	fp, sp, #28
   17a58:	sub	sp, sp, #68	; 0x44
   17a5c:	sub	sp, sp, #65536	; 0x10000
   17a60:	mov	r5, r0
   17a64:	ldr	r0, [r0, #36]	; 0x24
   17a68:	str	r0, [sp, #4]
   17a6c:	ldr	r0, [r5, #344]	; 0x158
   17a70:	vmov.i32	q8, #0	; 0x00000000
   17a74:	mov	r1, #48	; 0x30
   17a78:	add	r2, sp, #8
   17a7c:	vst1.64	{d16-d17}, [r2], r1
   17a80:	ldr	r1, [r5, #392]	; 0x188
   17a84:	ldr	r3, [r5, #396]	; 0x18c
   17a88:	str	r3, [sp, #28]
   17a8c:	str	r1, [sp, #24]
   17a90:	mov	r4, #0
   17a94:	vldr	d16, [r5, #416]	; 0x1a0
   17a98:	str	r4, [sp, #44]	; 0x2c
   17a9c:	str	r4, [sp, #40]	; 0x28
   17aa0:	str	r4, [sp, #48]	; 0x30
   17aa4:	vstr	d16, [sp, #32]
   17aa8:	ldrb	r1, [r5, #436]	; 0x1b4
   17aac:	str	r4, [r2]
   17ab0:	and	r1, r1, #1
   17ab4:	str	r1, [sp, #52]	; 0x34
   17ab8:	lsl	sl, r0, #3
   17abc:	cmp	r0, #0
   17ac0:	beq	17ad8 <sav_read_compressed_data+0x88>
   17ac4:	mov	r0, sl
   17ac8:	bl	4cb0 <readstat_malloc@plt>
   17acc:	mov	r4, r0
   17ad0:	cmp	r0, #0
   17ad4:	beq	17be0 <sav_read_compressed_data+0x190>
   17ad8:	mov	r0, r5
   17adc:	bl	15aec <sav_update_progress>
   17ae0:	mov	r6, r0
   17ae4:	cmp	r0, #0
   17ae8:	bne	17bec <sav_read_compressed_data+0x19c>
   17aec:	mov	r8, #0
   17af0:	ldr	r0, [sp, #4]
   17af4:	ldr	r3, [r0, #12]
   17af8:	ldr	r2, [r0, #20]
   17afc:	add	r0, sp, #64	; 0x40
   17b00:	mov	r1, #65536	; 0x10000
   17b04:	blx	r3
   17b08:	mov	r7, r0
   17b0c:	add	r0, r0, #1
   17b10:	cmp	r0, #2
   17b14:	bcc	17c08 <sav_read_compressed_data+0x1b8>
   17b18:	ands	r0, r7, #7
   17b1c:	bne	17c08 <sav_read_compressed_data+0x1b8>
   17b20:	mov	r0, #1
   17b24:	str	r0, [sp, #56]	; 0x38
   17b28:	mov	r0, #0
   17b2c:	sub	r1, r7, r0
   17b30:	str	r1, [sp, #12]
   17b34:	add	r1, sp, #64	; 0x40
   17b38:	add	r0, r1, r0
   17b3c:	str	r0, [sp, #8]
   17b40:	add	r0, r4, r8
   17b44:	str	r0, [sp, #16]
   17b48:	sub	r0, sl, r8
   17b4c:	str	r0, [sp, #20]
   17b50:	add	r0, sp, #8
   17b54:	bl	4c98 <sav_decompress_row@plt>
   17b58:	ldr	r9, [sp, #12]
   17b5c:	ldr	r0, [sp, #56]	; 0x38
   17b60:	cmp	r0, #2
   17b64:	bne	17b8c <sav_read_compressed_data+0x13c>
   17b68:	mov	r0, r4
   17b6c:	mov	r1, sl
   17b70:	mov	r2, r5
   17b74:	bl	17c18 <sav_process_row>
   17b78:	cmp	r0, #0
   17b7c:	bne	17be8 <sav_read_compressed_data+0x198>
   17b80:	mov	r8, #0
   17b84:	ldr	r0, [sp, #56]	; 0x38
   17b88:	b	17b94 <sav_read_compressed_data+0x144>
   17b8c:	ldr	r1, [sp, #20]
   17b90:	sub	r8, sl, r1
   17b94:	mov	r6, #0
   17b98:	cmp	r0, #3
   17b9c:	beq	17bec <sav_read_compressed_data+0x19c>
   17ba0:	ldr	r0, [r5, #356]	; 0x164
   17ba4:	cmp	r0, #1
   17ba8:	blt	17bb8 <sav_read_compressed_data+0x168>
   17bac:	ldr	r1, [r5, #364]	; 0x16c
   17bb0:	cmp	r1, r0
   17bb4:	beq	17bec <sav_read_compressed_data+0x19c>
   17bb8:	sub	r0, r7, r9
   17bbc:	ldr	r1, [sp, #56]	; 0x38
   17bc0:	cmp	r1, #0
   17bc4:	bne	17b2c <sav_read_compressed_data+0xdc>
   17bc8:	mov	r0, r5
   17bcc:	bl	15aec <sav_update_progress>
   17bd0:	mov	r6, r0
   17bd4:	cmp	r0, #0
   17bd8:	beq	17af0 <sav_read_compressed_data+0xa0>
   17bdc:	b	17bec <sav_read_compressed_data+0x19c>
   17be0:	mov	r6, #3
   17be4:	b	17bfc <sav_read_compressed_data+0x1ac>
   17be8:	mov	r6, r0
   17bec:	cmp	r4, #0
   17bf0:	beq	17bfc <sav_read_compressed_data+0x1ac>
   17bf4:	mov	r0, r4
   17bf8:	bl	4938 <free@plt>
   17bfc:	mov	r0, r6
   17c00:	sub	sp, fp, #28
   17c04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17c08:	mov	r6, #0
   17c0c:	cmp	r4, #0
   17c10:	bne	17bf4 <sav_read_compressed_data+0x1a4>
   17c14:	b	17bfc <sav_read_compressed_data+0x1ac>

00017c18 <sav_process_row>:
   17c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c1c:	add	fp, sp, #28
   17c20:	sub	sp, sp, #60	; 0x3c
   17c24:	mov	r8, r2
   17c28:	str	r0, [sp, #36]	; 0x24
   17c2c:	ldr	r0, [r2, #360]	; 0x168
   17c30:	cmp	r0, #0
   17c34:	beq	17c44 <sav_process_row+0x2c>
   17c38:	sub	r0, r0, #1
   17c3c:	str	r0, [r8, #360]	; 0x168
   17c40:	b	17ee0 <sav_process_row+0x2c8>
   17c44:	cmp	r1, #0
   17c48:	beq	17ed4 <sav_process_row+0x2bc>
   17c4c:	add	r0, sp, #40	; 0x28
   17c50:	add	r0, r0, #8
   17c54:	str	r0, [sp, #20]
   17c58:	mov	r7, #0
   17c5c:	mov	r3, #0
   17c60:	mov	ip, #0
   17c64:	mov	lr, #0
   17c68:	mov	sl, #0
   17c6c:	mov	r9, #0
   17c70:	mov	r4, #0
   17c74:	str	r1, [sp, #24]
   17c78:	ldr	r0, [r8, #340]	; 0x154
   17c7c:	cmp	r3, r0
   17c80:	cmplt	ip, r0
   17c84:	bge	17ed4 <sav_process_row+0x2bc>
   17c88:	ldr	r2, [r8, #44]	; 0x2c
   17c8c:	mov	r6, r3
   17c90:	ldr	r0, [r2, r3, lsl #2]
   17c94:	ldr	r5, [r2, ip, lsl #2]
   17c98:	str	r7, [sp, #44]	; 0x2c
   17c9c:	str	r7, [sp, #40]	; 0x28
   17ca0:	ldr	r3, [r5]
   17ca4:	strb	r7, [sp, #52]	; 0x34
   17ca8:	str	r3, [sp, #48]	; 0x30
   17cac:	ldrb	r2, [sp, #53]	; 0x35
   17cb0:	and	r2, r2, #252	; 0xfc
   17cb4:	strb	r2, [sp, #53]	; 0x35
   17cb8:	cmp	r4, #31
   17cbc:	bgt	17eec <sav_process_row+0x2d4>
   17cc0:	cmp	r3, #5
   17cc4:	beq	17ce8 <sav_process_row+0xd0>
   17cc8:	cmp	r3, #0
   17ccc:	bne	17ec4 <sav_process_row+0x2ac>
   17cd0:	ldr	r2, [r8, #380]	; 0x17c
   17cd4:	add	r3, sl, #8
   17cd8:	cmp	r3, r2
   17cdc:	bls	17dac <sav_process_row+0x194>
   17ce0:	mov	r3, sl
   17ce4:	b	17de0 <sav_process_row+0x1c8>
   17ce8:	ldr	r0, [r5, #8]
   17cec:	ldr	r2, [r8, #52]	; 0x34
   17cf0:	ldr	r0, [r2, r0, lsl #2]
   17cf4:	ldr	r0, [r0, #2144]	; 0x860
   17cf8:	cmp	r0, #0
   17cfc:	bne	17d98 <sav_process_row+0x180>
   17d00:	str	ip, [sp, #28]
   17d04:	str	r4, [sp, #32]
   17d08:	mov	r4, lr
   17d0c:	ldr	r0, [sp, #36]	; 0x24
   17d10:	add	r0, r0, r9
   17d14:	vld1.8	{d0}, [r0]
   17d18:	ldrb	r0, [r8, #436]	; 0x1b4
   17d1c:	tst	r0, #1
   17d20:	beq	17d28 <sav_process_row+0x110>
   17d24:	bl	4fa4 <byteswap_double@plt>
   17d28:	vstr	d0, [sp, #40]	; 0x28
   17d2c:	add	r0, sp, #40	; 0x28
   17d30:	mov	r1, r8
   17d34:	bl	178a0 <sav_tag_missing_double>
   17d38:	ldr	r1, [r5, #8]
   17d3c:	ldr	r0, [r8, #16]
   17d40:	str	r0, [sp, #16]
   17d44:	ldr	lr, [r8, #40]	; 0x28
   17d48:	ldr	r2, [r8, #52]	; 0x34
   17d4c:	ldr	r0, [r8, #364]	; 0x16c
   17d50:	ldr	ip, [r2, r1, lsl #2]
   17d54:	ldr	r1, [sp, #20]
   17d58:	ldr	r7, [r1]
   17d5c:	ldr	r1, [r1, #4]
   17d60:	ldr	r2, [sp, #40]	; 0x28
   17d64:	ldr	r3, [sp, #44]	; 0x2c
   17d68:	str	r7, [sp]
   17d6c:	stmib	sp, {r1, lr}
   17d70:	mov	r1, ip
   17d74:	ldr	r7, [sp, #16]
   17d78:	blx	r7
   17d7c:	cmp	r0, #0
   17d80:	ldr	r1, [sp, #24]
   17d84:	mov	r7, #0
   17d88:	mov	lr, r4
   17d8c:	ldr	r4, [sp, #32]
   17d90:	ldr	ip, [sp, #28]
   17d94:	bne	17ef8 <sav_process_row+0x2e0>
   17d98:	ldr	r0, [r5, #48]	; 0x30
   17d9c:	add	ip, r0, ip
   17da0:	mov	r3, r6
   17da4:	add	r3, r6, #1
   17da8:	b	17ec8 <sav_process_row+0x2b0>
   17dac:	ldr	r7, [sp, #36]	; 0x24
   17db0:	ldr	r2, [r7, r9]!
   17db4:	str	lr, [sp, #28]
   17db8:	str	r4, [sp, #32]
   17dbc:	mov	lr, ip
   17dc0:	ldr	ip, [r7, #4]
   17dc4:	ldr	r7, [r8, #376]	; 0x178
   17dc8:	str	r2, [r7, sl]!
   17dcc:	str	ip, [r7, #4]
   17dd0:	mov	ip, lr
   17dd4:	ldr	r4, [sp, #32]
   17dd8:	ldr	lr, [sp, #28]
   17ddc:	mov	r7, #0
   17de0:	ldr	r0, [r0, #16]
   17de4:	add	r4, r4, #1
   17de8:	cmp	r4, r0
   17dec:	bne	17e08 <sav_process_row+0x1f0>
   17df0:	ldr	r0, [r5, #48]	; 0x30
   17df4:	add	lr, lr, #1
   17df8:	cmp	lr, r0
   17dfc:	sublt	r3, r3, #1
   17e00:	add	r6, r6, #1
   17e04:	mov	r4, #0
   17e08:	ldr	r0, [r5, #48]	; 0x30
   17e0c:	cmp	lr, r0
   17e10:	bne	17ec0 <sav_process_row+0x2a8>
   17e14:	ldr	r0, [r5, #8]
   17e18:	ldr	r2, [r8, #52]	; 0x34
   17e1c:	ldr	r0, [r2, r0, lsl #2]
   17e20:	ldr	r0, [r0, #2144]	; 0x860
   17e24:	cmp	r0, #0
   17e28:	bne	17eac <sav_process_row+0x294>
   17e2c:	mov	sl, ip
   17e30:	ldr	r7, [r8, #336]	; 0x150
   17e34:	ldr	r2, [r8, #376]	; 0x178
   17e38:	ldr	r0, [r8, #384]	; 0x180
   17e3c:	ldr	r1, [r8, #388]	; 0x184
   17e40:	str	r7, [sp]
   17e44:	bl	4cbc <readstat_convert@plt>
   17e48:	cmp	r0, #0
   17e4c:	bne	17ee4 <sav_process_row+0x2cc>
   17e50:	ldr	r2, [r8, #384]	; 0x180
   17e54:	str	r2, [sp, #40]	; 0x28
   17e58:	ldr	r1, [r5, #8]
   17e5c:	ldr	r0, [r8, #16]
   17e60:	str	r0, [sp, #32]
   17e64:	ldr	lr, [r8, #40]	; 0x28
   17e68:	ldr	r3, [r8, #52]	; 0x34
   17e6c:	ldr	r0, [r8, #364]	; 0x16c
   17e70:	ldr	ip, [r3, r1, lsl #2]
   17e74:	ldr	r1, [sp, #20]
   17e78:	ldr	r7, [r1]
   17e7c:	ldr	r1, [r1, #4]
   17e80:	ldr	r3, [sp, #44]	; 0x2c
   17e84:	str	r7, [sp]
   17e88:	stmib	sp, {r1, lr}
   17e8c:	mov	r1, ip
   17e90:	ldr	r7, [sp, #32]
   17e94:	blx	r7
   17e98:	cmp	r0, #0
   17e9c:	ldr	r1, [sp, #24]
   17ea0:	mov	r7, #0
   17ea4:	mov	ip, sl
   17ea8:	bne	17ef8 <sav_process_row+0x2e0>
   17eac:	ldr	r0, [r5, #48]	; 0x30
   17eb0:	add	ip, r0, ip
   17eb4:	mov	sl, #0
   17eb8:	mov	lr, #0
   17ebc:	b	17ec4 <sav_process_row+0x2ac>
   17ec0:	mov	sl, r3
   17ec4:	mov	r3, r6
   17ec8:	add	r9, r9, #8
   17ecc:	cmp	r9, r1
   17ed0:	bcc	17c78 <sav_process_row+0x60>
   17ed4:	ldr	r0, [r8, #364]	; 0x16c
   17ed8:	add	r0, r0, #1
   17edc:	str	r0, [r8, #364]	; 0x16c
   17ee0:	mov	r0, #0
   17ee4:	sub	sp, fp, #28
   17ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17eec:	mov	r0, #5
   17ef0:	sub	sp, fp, #28
   17ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ef8:	mov	r0, #4
   17efc:	sub	sp, fp, #28
   17f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00017f04 <sav_read_uncompressed_data>:
   17f04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17f08:	add	fp, sp, #24
   17f0c:	mov	r5, r0
   17f10:	ldr	r4, [r0, #36]	; 0x24
   17f14:	ldr	r0, [r0, #344]	; 0x158
   17f18:	lsl	r6, r0, #3
   17f1c:	mov	r0, r6
   17f20:	bl	4cb0 <readstat_malloc@plt>
   17f24:	mov	r8, r0
   17f28:	ldr	r0, [r5, #360]	; 0x168
   17f2c:	cmp	r0, #0
   17f30:	beq	17f58 <sav_read_uncompressed_data+0x54>
   17f34:	mul	r0, r0, r6
   17f38:	ldr	r3, [r4, #8]
   17f3c:	ldr	r2, [r4, #20]
   17f40:	mov	r1, #1
   17f44:	blx	r3
   17f48:	cmn	r0, #1
   17f4c:	beq	17fe0 <sav_read_uncompressed_data+0xdc>
   17f50:	mov	r0, #0
   17f54:	str	r0, [r5, #360]	; 0x168
   17f58:	ldr	r0, [r5, #356]	; 0x164
   17f5c:	cmn	r0, #1
   17f60:	beq	17f70 <sav_read_uncompressed_data+0x6c>
   17f64:	ldr	r1, [r5, #364]	; 0x16c
   17f68:	cmp	r1, r0
   17f6c:	bge	17fd0 <sav_read_uncompressed_data+0xcc>
   17f70:	mov	r0, r5
   17f74:	bl	15aec <sav_update_progress>
   17f78:	cmp	r0, #0
   17f7c:	bne	17fb4 <sav_read_uncompressed_data+0xb0>
   17f80:	ldr	r3, [r4, #12]
   17f84:	ldr	r2, [r4, #20]
   17f88:	mov	r0, r8
   17f8c:	mov	r1, r6
   17f90:	blx	r3
   17f94:	cmp	r0, r6
   17f98:	bne	17fd0 <sav_read_uncompressed_data+0xcc>
   17f9c:	mov	r0, r8
   17fa0:	mov	r1, r6
   17fa4:	mov	r2, r5
   17fa8:	bl	17c18 <sav_process_row>
   17fac:	cmp	r0, #0
   17fb0:	beq	17f58 <sav_read_uncompressed_data+0x54>
   17fb4:	mov	r7, r0
   17fb8:	cmp	r8, #0
   17fbc:	beq	17fc8 <sav_read_uncompressed_data+0xc4>
   17fc0:	mov	r0, r8
   17fc4:	bl	4938 <free@plt>
   17fc8:	mov	r0, r7
   17fcc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17fd0:	mov	r7, #0
   17fd4:	cmp	r8, #0
   17fd8:	bne	17fc0 <sav_read_uncompressed_data+0xbc>
   17fdc:	b	17fc8 <sav_read_uncompressed_data+0xc4>
   17fe0:	mov	r7, #15
   17fe4:	cmp	r8, #0
   17fe8:	bne	17fc0 <sav_read_uncompressed_data+0xbc>
   17fec:	b	17fc8 <sav_read_uncompressed_data+0xc4>

00017ff0 <readstat_begin_writing_sav>:
   17ff0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17ff4:	add	fp, sp, #24
   17ff8:	ldr	ip, [pc, #272]	; 18110 <readstat_begin_writing_sav+0x120>
   17ffc:	add	ip, pc, ip
   18000:	ldr	r3, [pc, #268]	; 18114 <readstat_begin_writing_sav+0x124>
   18004:	add	r3, pc, r3
   18008:	str	r3, [r0, #292]	; 0x124
   1800c:	ldr	r3, [pc, #260]	; 18118 <readstat_begin_writing_sav+0x128>
   18010:	add	r3, pc, r3
   18014:	ldr	lr, [pc, #256]	; 1811c <readstat_begin_writing_sav+0x12c>
   18018:	add	lr, pc, lr
   1801c:	ldr	r4, [pc, #252]	; 18120 <readstat_begin_writing_sav+0x130>
   18020:	add	r4, pc, r4
   18024:	ldr	r5, [pc, #248]	; 18124 <readstat_begin_writing_sav+0x134>
   18028:	add	r5, pc, r5
   1802c:	ldr	r6, [pc, #244]	; 18128 <readstat_begin_writing_sav+0x138>
   18030:	add	r6, pc, r6
   18034:	ldr	r7, [pc, #240]	; 1812c <readstat_begin_writing_sav+0x13c>
   18038:	add	r7, pc, r7
   1803c:	ldr	r8, [pc, #236]	; 18130 <readstat_begin_writing_sav+0x140>
   18040:	add	r8, pc, r8
   18044:	str	ip, [r0, #228]	; 0xe4
   18048:	str	r3, [r0, #232]	; 0xe8
   1804c:	str	lr, [r0, #236]	; 0xec
   18050:	add	r3, r0, #240	; 0xf0
   18054:	stm	r3, {r4, r5, r6, r7, r8}
   18058:	ldr	r3, [pc, #212]	; 18134 <readstat_begin_writing_sav+0x144>
   1805c:	add	r3, pc, r3
   18060:	ldr	r7, [pc, #208]	; 18138 <readstat_begin_writing_sav+0x148>
   18064:	add	r7, pc, r7
   18068:	str	r3, [r0, #264]	; 0x108
   1806c:	str	r7, [r0, #268]	; 0x10c
   18070:	ldr	r3, [pc, #196]	; 1813c <readstat_begin_writing_sav+0x14c>
   18074:	add	r3, pc, r3
   18078:	str	r3, [r0, #276]	; 0x114
   1807c:	ldr	r3, [r0, #8]
   18080:	cmp	r3, #0
   18084:	beq	18098 <readstat_begin_writing_sav+0xa8>
   18088:	cmp	r3, #3
   1808c:	moveq	r3, #2
   18090:	streq	r3, [r0, #16]
   18094:	b	180ac <readstat_begin_writing_sav+0xbc>
   18098:	ldr	r3, [r0, #16]
   1809c:	mov	r7, #2
   180a0:	cmp	r3, #2
   180a4:	movweq	r7, #3
   180a8:	str	r7, [r0, #8]
   180ac:	ldr	r3, [r0, #16]
   180b0:	cmp	r3, #0
   180b4:	beq	18108 <readstat_begin_writing_sav+0x118>
   180b8:	cmp	r3, #2
   180bc:	beq	180e4 <readstat_begin_writing_sav+0xf4>
   180c0:	cmp	r3, #1
   180c4:	movne	r0, #6
   180c8:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   180cc:	ldr	r3, [pc, #108]	; 18140 <readstat_begin_writing_sav+0x150>
   180d0:	add	r3, pc, r3
   180d4:	str	r3, [r0, #280]	; 0x118
   180d8:	ldr	r3, [pc, #100]	; 18144 <readstat_begin_writing_sav+0x154>
   180dc:	ldr	r3, [pc, r3]
   180e0:	b	18104 <readstat_begin_writing_sav+0x114>
   180e4:	ldr	r3, [pc, #92]	; 18148 <readstat_begin_writing_sav+0x158>
   180e8:	ldr	r3, [pc, r3]
   180ec:	ldr	r7, [pc, #88]	; 1814c <readstat_begin_writing_sav+0x15c>
   180f0:	ldr	r7, [pc, r7]
   180f4:	str	r7, [r0, #280]	; 0x118
   180f8:	str	r3, [r0, #284]	; 0x11c
   180fc:	ldr	r3, [pc, #76]	; 18150 <readstat_begin_writing_sav+0x160>
   18100:	ldr	r3, [pc, r3]
   18104:	str	r3, [r0, #288]	; 0x120
   18108:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1810c:	b	49d4 <readstat_begin_writing_file@plt>
   18110:	.word	0x00000178
   18114:	.word	0x00000148
   18118:	.word	0x000001c0
   1811c:	.word	0x000001f8
   18120:	.word	0x00000204
   18124:	.word	0x00000210
   18128:	.word	0x0000021c
   1812c:	.word	0x00000224
   18130:	.word	0x00000228
   18134:	.word	0x000002a4
   18138:	.word	0x000002b8
   1813c:	.word	0x000002c0
   18140:	.word	0x000003fc
   18144:	.word	0x0002d1fc
   18148:	.word	0x0002d204
   1814c:	.word	0x0002d1f4
   18150:	.word	0x0002d1d4

00018154 <sav_metadata_ok>:
   18154:	ldr	r1, [r0, #8]
   18158:	cmp	r1, #2
   1815c:	ldreq	r0, [r0, #16]
   18160:	cmpeq	r0, #2
   18164:	moveq	r0, #6
   18168:	bxeq	lr
   1816c:	bic	r0, r1, #1
   18170:	subs	r0, r0, #2
   18174:	movwne	r0, #24
   18178:	bx	lr

0001817c <sav_variable_width>:
   1817c:	push	{r4, sl, fp, lr}
   18180:	add	fp, sp, #8
   18184:	mov	r4, r1
   18188:	mov	r1, r0
   1818c:	mov	r0, #8
   18190:	cmp	r1, #0
   18194:	popne	{r4, sl, fp, pc}
   18198:	cmp	r4, #256	; 0x100
   1819c:	bcc	181c8 <sav_variable_width+0x4c>
   181a0:	mov	r0, r1
   181a4:	mov	r1, r4
   181a8:	bl	18504 <sav_variable_segments>
   181ac:	sub	r0, r0, #1
   181b0:	sub	r1, r0, r0, lsl #6
   181b4:	add	r1, r4, r1, lsl #2
   181b8:	add	r1, r1, #7
   181bc:	bic	r1, r1, #7
   181c0:	add	r0, r1, r0, lsl #8
   181c4:	pop	{r4, sl, fp, pc}
   181c8:	cmp	r4, #0
   181cc:	addne	r0, r4, #7
   181d0:	bicne	r0, r0, #7
   181d4:	pop	{r4, sl, fp, pc}

000181d8 <sav_variable_ok>:
   181d8:	push	{r4, sl, fp, lr}
   181dc:	add	fp, sp, #8
   181e0:	add	r4, r0, #8
   181e4:	mov	r0, r4
   181e8:	bl	4c8c <strlen@plt>
   181ec:	bl	18538 <sav_validate_name_length>
   181f0:	cmp	r0, #0
   181f4:	popne	{r4, sl, fp, pc}
   181f8:	mov	r0, r4
   181fc:	bl	18554 <sav_validate_name_unreserved>
   18200:	cmp	r0, #0
   18204:	beq	1820c <sav_variable_ok+0x34>
   18208:	pop	{r4, sl, fp, pc}
   1820c:	mov	r0, r4
   18210:	pop	{r4, sl, fp, lr}
   18214:	b	186dc <sav_validate_name_chars>

00018218 <sav_write_int8>:
   18218:	vmov	s0, r2
   1821c:	vcvt.f64.s32	d16, s0
   18220:	vst1.8	{d16}, [r0]
   18224:	mov	r0, #0
   18228:	bx	lr

0001822c <sav_write_int16>:
   1822c:	vmov	s0, r2
   18230:	vcvt.f64.s32	d16, s0
   18234:	vst1.8	{d16}, [r0]
   18238:	mov	r0, #0
   1823c:	bx	lr

00018240 <sav_write_int32>:
   18240:	vmov	s0, r2
   18244:	vcvt.f64.s32	d16, s0
   18248:	vst1.8	{d16}, [r0]
   1824c:	mov	r0, #0
   18250:	bx	lr

00018254 <sav_write_float>:
   18254:	vcvt.f64.f32	d16, s0
   18258:	vst1.8	{d16}, [r0]
   1825c:	mov	r0, #0
   18260:	bx	lr

00018264 <sav_write_double>:
   18264:	vst1.8	{d0}, [r0]
   18268:	mov	r0, #0
   1826c:	bx	lr

00018270 <sav_write_string>:
   18270:	push	{r4, r5, r6, r7, fp, lr}
   18274:	add	fp, sp, #16
   18278:	mov	r4, r2
   1827c:	mov	r7, r1
   18280:	mov	r5, r0
   18284:	ldr	r2, [r1, #1596]	; 0x63c
   18288:	mov	r1, #32
   1828c:	bl	4d28 <memset@plt>
   18290:	mov	r0, #0
   18294:	cmp	r4, #0
   18298:	ldrbne	r1, [r4]
   1829c:	cmpne	r1, #0
   182a0:	bne	182a8 <sav_write_string+0x38>
   182a4:	pop	{r4, r5, r6, r7, fp, pc}
   182a8:	mov	r0, r4
   182ac:	bl	4c8c <strlen@plt>
   182b0:	mov	r6, r0
   182b4:	ldr	r1, [r7, #1596]	; 0x63c
   182b8:	mov	r0, #22
   182bc:	cmp	r6, r1
   182c0:	pophi	{r4, r5, r6, r7, fp, pc}
   182c4:	cmp	r6, #256	; 0x100
   182c8:	bcc	182f0 <sav_write_string+0x80>
   182cc:	mov	r0, r5
   182d0:	mov	r1, r4
   182d4:	mov	r2, #255	; 0xff
   182d8:	bl	4998 <memcpy@plt>
   182dc:	sub	r6, r6, #255	; 0xff
   182e0:	add	r5, r5, #256	; 0x100
   182e4:	add	r4, r4, #255	; 0xff
   182e8:	cmp	r6, #255	; 0xff
   182ec:	bhi	182cc <sav_write_string+0x5c>
   182f0:	mov	r0, r5
   182f4:	mov	r1, r4
   182f8:	mov	r2, r6
   182fc:	bl	4998 <memcpy@plt>
   18300:	mov	r0, #0
   18304:	pop	{r4, r5, r6, r7, fp, pc}

00018308 <sav_write_missing_string>:
   18308:	push	{fp, lr}
   1830c:	mov	fp, sp
   18310:	ldr	r2, [r1, #1596]	; 0x63c
   18314:	mov	r1, #32
   18318:	bl	4d28 <memset@plt>
   1831c:	mov	r0, #0
   18320:	pop	{fp, pc}

00018324 <sav_write_missing_number>:
   18324:	mvn	r1, #1048576	; 0x100000
   18328:	str	r1, [r0, #4]
   1832c:	mvn	r1, #0
   18330:	str	r1, [r0]
   18334:	mov	r0, #0
   18338:	bx	lr

0001833c <sav_begin_data>:
   1833c:	push	{r4, r5, r6, sl, fp, lr}
   18340:	add	fp, sp, #16
   18344:	mov	r4, r0
   18348:	ldr	r0, [r0, #308]	; 0x134
   1834c:	cmp	r0, #0
   18350:	moveq	r6, #14
   18354:	moveq	r0, r6
   18358:	popeq	{r4, r5, r6, sl, fp, pc}
   1835c:	mov	r0, r4
   18360:	bl	1880c <sav_varnames_init>
   18364:	mov	r5, r0
   18368:	mov	r0, r4
   1836c:	bl	1895c <sav_emit_header>
   18370:	mov	r6, r0
   18374:	cmp	r0, #0
   18378:	bne	18464 <sav_begin_data+0x128>
   1837c:	mov	r0, r4
   18380:	mov	r1, r5
   18384:	bl	18c54 <sav_emit_variable_records>
   18388:	mov	r6, r0
   1838c:	cmp	r0, #0
   18390:	bne	18464 <sav_begin_data+0x128>
   18394:	mov	r0, r4
   18398:	bl	18cb8 <sav_emit_value_label_records>
   1839c:	mov	r6, r0
   183a0:	cmp	r0, #0
   183a4:	bne	18464 <sav_begin_data+0x128>
   183a8:	mov	r0, r4
   183ac:	bl	18f4c <sav_emit_document_record>
   183b0:	mov	r6, r0
   183b4:	cmp	r0, #0
   183b8:	bne	18464 <sav_begin_data+0x128>
   183bc:	mov	r0, r4
   183c0:	bl	19030 <sav_emit_integer_info_record>
   183c4:	mov	r6, r0
   183c8:	cmp	r0, #0
   183cc:	bne	18464 <sav_begin_data+0x128>
   183d0:	mov	r0, r4
   183d4:	bl	190d4 <sav_emit_floating_point_info_record>
   183d8:	mov	r6, r0
   183dc:	cmp	r0, #0
   183e0:	bne	18464 <sav_begin_data+0x128>
   183e4:	mov	r0, r4
   183e8:	bl	19160 <sav_emit_variable_display_record>
   183ec:	mov	r6, r0
   183f0:	cmp	r0, #0
   183f4:	bne	18464 <sav_begin_data+0x128>
   183f8:	mov	r0, r4
   183fc:	mov	r1, r5
   18400:	bl	19300 <sav_emit_long_var_name_record>
   18404:	mov	r6, r0
   18408:	cmp	r0, #0
   1840c:	bne	18464 <sav_begin_data+0x128>
   18410:	mov	r0, r4
   18414:	mov	r1, r5
   18418:	bl	19524 <sav_emit_very_long_string_record>
   1841c:	mov	r6, r0
   18420:	cmp	r0, #0
   18424:	bne	18464 <sav_begin_data+0x128>
   18428:	mov	r0, r4
   1842c:	bl	19714 <sav_emit_long_string_value_labels_record>
   18430:	mov	r6, r0
   18434:	cmp	r0, #0
   18438:	bne	18464 <sav_begin_data+0x128>
   1843c:	mov	r0, r4
   18440:	bl	19a98 <sav_emit_long_string_missing_values_record>
   18444:	mov	r6, r0
   18448:	cmp	r0, #0
   1844c:	bne	18464 <sav_begin_data+0x128>
   18450:	mov	r0, r4
   18454:	bl	19e4c <sav_emit_number_of_cases_record>
   18458:	mov	r6, r0
   1845c:	cmp	r0, #0
   18460:	beq	18474 <sav_begin_data+0x138>
   18464:	mov	r0, r5
   18468:	bl	4938 <free@plt>
   1846c:	mov	r0, r6
   18470:	pop	{r4, r5, r6, sl, fp, pc}
   18474:	mov	r0, r4
   18478:	bl	19ee0 <sav_emit_termination_record>
   1847c:	mov	r6, r0
   18480:	mov	r0, r5
   18484:	bl	4938 <free@plt>
   18488:	cmp	r6, #0
   1848c:	bne	184cc <sav_begin_data+0x190>
   18490:	ldr	r0, [r4, #76]	; 0x4c
   18494:	bl	4a4c <sav_compressed_row_bound@plt>
   18498:	ldr	r1, [r4, #16]
   1849c:	cmp	r1, #2
   184a0:	beq	184b8 <sav_begin_data+0x17c>
   184a4:	mov	r6, #0
   184a8:	cmp	r1, #1
   184ac:	bne	184cc <sav_begin_data+0x190>
   184b0:	bl	4cb0 <readstat_malloc@plt>
   184b4:	b	184c8 <sav_begin_data+0x18c>
   184b8:	ldr	r2, [r4, #4]
   184bc:	mov	r6, #0
   184c0:	mov	r3, #0
   184c4:	bl	4b30 <zsav_ctx_init@plt>
   184c8:	str	r0, [r4, #300]	; 0x12c
   184cc:	mov	r0, r6
   184d0:	pop	{r4, r5, r6, sl, fp, pc}

000184d4 <sav_write_compressed_row>:
   184d4:	push	{r4, r5, fp, lr}
   184d8:	add	fp, sp, #8
   184dc:	mov	r4, r0
   184e0:	ldr	r5, [r0, #300]	; 0x12c
   184e4:	mov	r0, r5
   184e8:	mov	r3, r4
   184ec:	bl	4efc <sav_compress_row@plt>
   184f0:	mov	r2, r0
   184f4:	mov	r0, r4
   184f8:	mov	r1, r5
   184fc:	pop	{r4, r5, fp, lr}
   18500:	b	4ef0 <readstat_write_bytes@plt>

00018504 <sav_variable_segments>:
   18504:	mov	r2, r0
   18508:	mov	r0, #1
   1850c:	cmp	r2, #0
   18510:	bne	18534 <sav_variable_segments+0x30>
   18514:	cmp	r1, #256	; 0x100
   18518:	bxcc	lr
   1851c:	add	r0, r1, #251	; 0xfb
   18520:	lsr	r0, r0, #2
   18524:	movw	r1, #2081	; 0x821
   18528:	movt	r1, #8322	; 0x2082
   1852c:	umull	r0, r1, r0, r1
   18530:	lsr	r0, r1, #3
   18534:	bx	lr

00018538 <sav_validate_name_length>:
   18538:	mov	r1, #0
   1853c:	cmp	r0, #0
   18540:	movweq	r1, #38	; 0x26
   18544:	cmp	r0, #64	; 0x40
   18548:	movwhi	r1, #28
   1854c:	mov	r0, r1
   18550:	bx	lr

00018554 <sav_validate_name_unreserved>:
   18554:	push	{r4, sl, fp, lr}
   18558:	add	fp, sp, #8
   1855c:	mov	r4, r0
   18560:	ldr	r1, [pc, #320]	; 186a8 <sav_validate_name_unreserved+0x154>
   18564:	add	r1, pc, r1
   18568:	bl	4878 <strcmp@plt>
   1856c:	cmp	r0, #0
   18570:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   18574:	ldr	r1, [pc, #304]	; 186ac <sav_validate_name_unreserved+0x158>
   18578:	add	r1, pc, r1
   1857c:	mov	r0, r4
   18580:	bl	4878 <strcmp@plt>
   18584:	cmp	r0, #0
   18588:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   1858c:	ldr	r1, [pc, #284]	; 186b0 <sav_validate_name_unreserved+0x15c>
   18590:	add	r1, pc, r1
   18594:	mov	r0, r4
   18598:	bl	4878 <strcmp@plt>
   1859c:	cmp	r0, #0
   185a0:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   185a4:	ldr	r1, [pc, #264]	; 186b4 <sav_validate_name_unreserved+0x160>
   185a8:	add	r1, pc, r1
   185ac:	mov	r0, r4
   185b0:	bl	4878 <strcmp@plt>
   185b4:	cmp	r0, #0
   185b8:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   185bc:	ldr	r1, [pc, #244]	; 186b8 <sav_validate_name_unreserved+0x164>
   185c0:	add	r1, pc, r1
   185c4:	mov	r0, r4
   185c8:	bl	4878 <strcmp@plt>
   185cc:	cmp	r0, #0
   185d0:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   185d4:	ldr	r1, [pc, #224]	; 186bc <sav_validate_name_unreserved+0x168>
   185d8:	add	r1, pc, r1
   185dc:	mov	r0, r4
   185e0:	bl	4878 <strcmp@plt>
   185e4:	cmp	r0, #0
   185e8:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   185ec:	ldr	r1, [pc, #204]	; 186c0 <sav_validate_name_unreserved+0x16c>
   185f0:	add	r1, pc, r1
   185f4:	mov	r0, r4
   185f8:	bl	4878 <strcmp@plt>
   185fc:	cmp	r0, #0
   18600:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   18604:	ldr	r1, [pc, #184]	; 186c4 <sav_validate_name_unreserved+0x170>
   18608:	add	r1, pc, r1
   1860c:	mov	r0, r4
   18610:	bl	4878 <strcmp@plt>
   18614:	cmp	r0, #0
   18618:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   1861c:	ldr	r1, [pc, #164]	; 186c8 <sav_validate_name_unreserved+0x174>
   18620:	add	r1, pc, r1
   18624:	mov	r0, r4
   18628:	bl	4878 <strcmp@plt>
   1862c:	cmp	r0, #0
   18630:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   18634:	ldr	r1, [pc, #144]	; 186cc <sav_validate_name_unreserved+0x178>
   18638:	add	r1, pc, r1
   1863c:	mov	r0, r4
   18640:	bl	4878 <strcmp@plt>
   18644:	cmp	r0, #0
   18648:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   1864c:	ldr	r1, [pc, #124]	; 186d0 <sav_validate_name_unreserved+0x17c>
   18650:	add	r1, pc, r1
   18654:	mov	r0, r4
   18658:	bl	4878 <strcmp@plt>
   1865c:	cmp	r0, #0
   18660:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   18664:	ldr	r1, [pc, #104]	; 186d4 <sav_validate_name_unreserved+0x180>
   18668:	add	r1, pc, r1
   1866c:	mov	r0, r4
   18670:	bl	4878 <strcmp@plt>
   18674:	cmp	r0, #0
   18678:	beq	186a0 <sav_validate_name_unreserved+0x14c>
   1867c:	ldr	r1, [pc, #84]	; 186d8 <sav_validate_name_unreserved+0x184>
   18680:	add	r1, pc, r1
   18684:	mov	r0, r4
   18688:	bl	4878 <strcmp@plt>
   1868c:	mov	r1, #0
   18690:	cmp	r0, #0
   18694:	movweq	r1, #27
   18698:	mov	r0, r1
   1869c:	pop	{r4, sl, fp, pc}
   186a0:	mov	r0, #27
   186a4:	pop	{r4, sl, fp, pc}
   186a8:	.word	0x0000e627
   186ac:	.word	0x0000e617
   186b0:	.word	0x0000e603
   186b4:	.word	0x0000e5ee
   186b8:	.word	0x0000e5d9
   186bc:	.word	0x0000e5c4
   186c0:	.word	0x0000e5af
   186c4:	.word	0x0000e59a
   186c8:	.word	0x0000e585
   186cc:	.word	0x0000e570
   186d0:	.word	0x0000e55c
   186d4:	.word	0x0000e547
   186d8:	.word	0x0000e532

000186dc <sav_validate_name_chars>:
   186dc:	push	{fp, lr}
   186e0:	mov	fp, sp
   186e4:	mov	lr, r0
   186e8:	mov	ip, #26
   186ec:	b	186f4 <sav_validate_name_chars+0x18>
   186f0:	add	lr, lr, #1
   186f4:	ldrb	r3, [lr]
   186f8:	sub	r1, r3, #32
   186fc:	cmp	r1, #32
   18700:	bhi	18794 <sav_validate_name_chars+0xb8>
   18704:	add	r2, pc, #4
   18708:	ldr	r1, [r2, r1, lsl #2]
   1870c:	add	pc, r2, r1
   18710:	.word	0x000000b8
   18714:	.word	0x00000094
   18718:	.word	0x00000094
   1871c:	.word	0xffffffe0
   18720:	.word	0xffffffe0
   18724:	.word	0x00000094
   18728:	.word	0x00000094
   1872c:	.word	0x00000094
   18730:	.word	0x00000094
   18734:	.word	0x00000094
   18738:	.word	0x00000094
   1873c:	.word	0x00000094
   18740:	.word	0x00000094
   18744:	.word	0x00000094
   18748:	.word	0xffffffe0
   1874c:	.word	0x00000094
   18750:	.word	0x00000094
   18754:	.word	0x00000094
   18758:	.word	0x00000094
   1875c:	.word	0x00000094
   18760:	.word	0x00000094
   18764:	.word	0x00000094
   18768:	.word	0x00000094
   1876c:	.word	0x00000094
   18770:	.word	0x00000094
   18774:	.word	0x00000094
   18778:	.word	0x00000094
   1877c:	.word	0x00000094
   18780:	.word	0x00000094
   18784:	.word	0x00000094
   18788:	.word	0x00000094
   1878c:	.word	0x00000094
   18790:	.word	0xffffffe0
   18794:	cmp	r3, #95	; 0x5f
   18798:	beq	186f0 <sav_validate_name_chars+0x14>
   1879c:	cmp	r3, #0
   187a0:	beq	187d0 <sav_validate_name_chars+0xf4>
   187a4:	sub	r1, r3, #48	; 0x30
   187a8:	uxtb	r1, r1
   187ac:	cmp	r1, #10
   187b0:	bcc	186f0 <sav_validate_name_chars+0x14>
   187b4:	and	r1, r3, #223	; 0xdf
   187b8:	sub	r1, r1, #65	; 0x41
   187bc:	uxtb	r1, r1
   187c0:	cmp	r1, #25
   187c4:	bls	186f0 <sav_validate_name_chars+0x14>
   187c8:	mov	r0, ip
   187cc:	pop	{fp, pc}
   187d0:	ldrb	r0, [r0]
   187d4:	orr	r1, r0, #64	; 0x40
   187d8:	cmp	r1, #64	; 0x40
   187dc:	bne	187ec <sav_validate_name_chars+0x110>
   187e0:	mov	ip, #0
   187e4:	mov	r0, ip
   187e8:	pop	{fp, pc}
   187ec:	and	r0, r0, #223	; 0xdf
   187f0:	sub	r0, r0, #65	; 0x41
   187f4:	uxtb	r0, r0
   187f8:	mov	ip, #25
   187fc:	cmp	r0, #25
   18800:	movls	ip, #0
   18804:	mov	r0, ip
   18808:	pop	{fp, pc}

0001880c <sav_varnames_init>:
   1880c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18810:	add	fp, sp, #28
   18814:	sub	sp, sp, #12
   18818:	mov	r4, r0
   1881c:	ldr	r6, [r0, #28]
   18820:	mov	r0, r6
   18824:	mov	r1, #15
   18828:	bl	47d0 <calloc@plt>
   1882c:	str	r0, [sp, #4]
   18830:	mov	r0, r6
   18834:	bl	4c20 <ck_hash_table_init@plt>
   18838:	str	r0, [sp, #8]
   1883c:	ldr	r0, [r4, #28]
   18840:	cmp	r0, #1
   18844:	blt	1893c <sav_varnames_init+0x130>
   18848:	ldr	r0, [sp, #4]
   1884c:	add	r5, r0, #1
   18850:	mov	r7, #0
   18854:	mov	r6, r4
   18858:	mov	r0, r4
   1885c:	mov	r1, r7
   18860:	bl	4e18 <readstat_get_variable@plt>
   18864:	mov	sl, r0
   18868:	rsb	r0, r7, r7, lsl #4
   1886c:	ldr	r1, [sp, #4]
   18870:	add	r9, r1, r0
   18874:	add	r3, sl, #8
   18878:	mov	r0, r9
   1887c:	mov	r1, #9
   18880:	ldr	r2, [pc, #200]	; 18950 <sav_varnames_init+0x144>
   18884:	add	r2, pc, r2
   18888:	bl	4d04 <snprintf@plt>
   1888c:	mov	r8, r9
   18890:	ldrb	r4, [r8], #9
   18894:	cmp	r4, #0
   18898:	beq	188c4 <sav_varnames_init+0xb8>
   1889c:	bl	4c14 <__ctype_toupper_loc@plt>
   188a0:	mov	r1, r5
   188a4:	ldr	r2, [r0]
   188a8:	uxtb	r3, r4
   188ac:	ldr	r2, [r2, r3, lsl #2]
   188b0:	strb	r2, [r1, #-1]
   188b4:	ldrb	r4, [r1]
   188b8:	add	r1, r1, #1
   188bc:	cmp	r4, #0
   188c0:	bne	188a4 <sav_varnames_init+0x98>
   188c4:	mov	r0, r9
   188c8:	ldr	r1, [sp, #8]
   188cc:	bl	4a40 <ck_str_hash_lookup@plt>
   188d0:	cmp	r0, #0
   188d4:	beq	188f0 <sav_varnames_init+0xe4>
   188d8:	add	r3, r7, #1
   188dc:	mov	r0, r9
   188e0:	mov	r1, #9
   188e4:	ldr	r2, [pc, #104]	; 18954 <sav_varnames_init+0x148>
   188e8:	add	r2, pc, r2
   188ec:	bl	4d04 <snprintf@plt>
   188f0:	mov	r0, r9
   188f4:	mov	r1, sl
   188f8:	ldr	r2, [sp, #8]
   188fc:	bl	4f8c <ck_str_hash_insert@plt>
   18900:	ldr	r0, [sl, #1600]	; 0x640
   18904:	cmp	r0, #256	; 0x100
   18908:	mov	r4, r6
   1890c:	bcc	18928 <sav_varnames_init+0x11c>
   18910:	mov	r0, r8
   18914:	mov	r1, #6
   18918:	ldr	r2, [pc, #56]	; 18958 <sav_varnames_init+0x14c>
   1891c:	add	r2, pc, r2
   18920:	mov	r3, r9
   18924:	bl	4d04 <snprintf@plt>
   18928:	add	r5, r5, #15
   1892c:	add	r7, r7, #1
   18930:	ldr	r0, [r4, #28]
   18934:	cmp	r7, r0
   18938:	blt	18854 <sav_varnames_init+0x48>
   1893c:	ldr	r0, [sp, #8]
   18940:	bl	4cc8 <ck_hash_table_free@plt>
   18944:	ldr	r0, [sp, #4]
   18948:	sub	sp, fp, #28
   1894c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18950:	.word	0x0000e333
   18954:	.word	0x0000e2d4
   18958:	.word	0x0000e2a6

0001895c <sav_emit_header>:
   1895c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18960:	add	fp, sp, #24
   18964:	sub	sp, sp, #272	; 0x110
   18968:	mov	r4, r0
   1896c:	add	r8, sp, #96	; 0x60
   18970:	mov	r5, #0
   18974:	mov	r0, r8
   18978:	mov	r1, #0
   1897c:	mov	r2, #176	; 0xb0
   18980:	bl	4d28 <memset@plt>
   18984:	ldr	r0, [r4, #20]
   18988:	str	r0, [sp, #92]	; 0x5c
   1898c:	add	r0, sp, #92	; 0x5c
   18990:	bl	4bf0 <localtime@plt>
   18994:	mov	r6, r0
   18998:	ldr	r1, [pc, #672]	; 18c40 <sav_emit_header+0x2e4>
   1899c:	add	r1, pc, r1
   189a0:	add	r2, r1, #16
   189a4:	mov	r3, #32
   189a8:	vld1.64	{d16-d17}, [r1], r3
   189ac:	add	r0, sp, #40	; 0x28
   189b0:	vld1.64	{d18-d19}, [r2]
   189b4:	add	r2, r0, #16
   189b8:	vld1.64	{d20-d21}, [r1]
   189bc:	vst1.64	{d18-d19}, [r2]
   189c0:	mov	r1, r0
   189c4:	vst1.64	{d16-d17}, [r1], r3
   189c8:	vst1.64	{d20-d21}, [r1]
   189cc:	str	r5, [sp, #28]
   189d0:	str	r5, [sp, #24]
   189d4:	strh	r5, [sp, #32]
   189d8:	str	r5, [sp, #12]
   189dc:	str	r5, [sp, #8]
   189e0:	strb	r5, [sp, #16]
   189e4:	cmp	r6, #0
   189e8:	moveq	r0, #39	; 0x27
   189ec:	subeq	sp, fp, #24
   189f0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   189f4:	movw	r1, #17956	; 0x4624
   189f8:	movt	r1, #12876	; 0x324c
   189fc:	str	r1, [sp, #96]	; 0x60
   18a00:	ldr	r1, [r4, #16]
   18a04:	cmp	r1, #2
   18a08:	bne	18a84 <sav_emit_header+0x128>
   18a0c:	mov	r1, #43	; 0x2b
   18a10:	ldr	r2, [pc, #556]	; 18c44 <sav_emit_header+0x2e8>
   18a14:	add	r2, pc, r2
   18a18:	mov	r3, r2
   18a1c:	vld1.32	{d16-d17}, [r3], r1
   18a20:	orr	r1, r8, #4
   18a24:	add	r7, r2, #32
   18a28:	mov	ip, #32
   18a2c:	mov	r5, #59	; 0x3b
   18a30:	vld1.64	{d18-d19}, [r7]
   18a34:	vst1.32	{d16-d17}, [r1], r5
   18a38:	add	r2, r2, #16
   18a3c:	vld1.64	{d16-d17}, [r2]
   18a40:	vld1.8	{d20-d21}, [r3]
   18a44:	strb	ip, [r1]
   18a48:	add	r1, r8, #36	; 0x24
   18a4c:	vst1.32	{d18-d19}, [r1]
   18a50:	add	r1, r8, #20
   18a54:	vst1.32	{d16-d17}, [r1]
   18a58:	add	r1, r8, #47	; 0x2f
   18a5c:	vst1.8	{d20-d21}, [r1]
   18a60:	mov	r1, #51	; 0x33
   18a64:	strb	r1, [sp, #99]	; 0x63
   18a68:	mov	r2, #2
   18a6c:	str	r2, [sp, #160]	; 0xa0
   18a70:	ldr	r1, [r4, #76]	; 0x4c
   18a74:	lsr	r1, r1, #3
   18a78:	str	r1, [sp, #164]	; 0xa4
   18a7c:	str	r2, [sp, #168]	; 0xa8
   18a80:	b	18af4 <sav_emit_header+0x198>
   18a84:	ldr	r2, [pc, #444]	; 18c48 <sav_emit_header+0x2ec>
   18a88:	add	r2, pc, r2
   18a8c:	add	r3, r2, #32
   18a90:	mov	r7, #43	; 0x2b
   18a94:	vld1.64	{d16-d17}, [r3]
   18a98:	add	r3, r8, #36	; 0x24
   18a9c:	add	r5, r2, #16
   18aa0:	vld1.32	{d18-d19}, [r2], r7
   18aa4:	vld1.64	{d20-d21}, [r5]
   18aa8:	vld1.8	{d22-d23}, [r2]
   18aac:	vst1.32	{d16-d17}, [r3]
   18ab0:	add	r2, r8, #20
   18ab4:	vst1.32	{d20-d21}, [r2]
   18ab8:	orr	r2, r8, #4
   18abc:	mov	r3, #59	; 0x3b
   18ac0:	vst1.32	{d18-d19}, [r2], r3
   18ac4:	mov	r3, #32
   18ac8:	strb	r3, [r2]
   18acc:	add	r2, r8, #47	; 0x2f
   18ad0:	vst1.8	{d22-d23}, [r2]
   18ad4:	mov	r2, #2
   18ad8:	str	r2, [sp, #160]	; 0xa0
   18adc:	ldr	r2, [r4, #76]	; 0x4c
   18ae0:	lsr	r2, r2, #3
   18ae4:	str	r2, [sp, #164]	; 0xa4
   18ae8:	mov	r2, #1
   18aec:	cmp	r1, #1
   18af0:	streq	r2, [sp, #168]	; 0xa8
   18af4:	ldr	r2, [r4, #224]	; 0xe0
   18af8:	mov	r1, #0
   18afc:	cmp	r2, #0
   18b00:	mov	r3, #0
   18b04:	ldrne	r2, [r2, #1592]	; 0x638
   18b08:	asrne	r3, r2, #31
   18b0c:	addne	r2, r2, r3, lsr #29
   18b10:	movne	r3, #1
   18b14:	addne	r3, r3, r2, asr #3
   18b18:	str	r3, [sp, #172]	; 0xac
   18b1c:	ldr	r2, [r4, #80]	; 0x50
   18b20:	movw	r3, #0
   18b24:	movt	r3, #16473	; 0x4059
   18b28:	str	r3, [sp, #184]	; 0xb8
   18b2c:	str	r1, [sp, #180]	; 0xb4
   18b30:	str	r2, [sp, #176]	; 0xb0
   18b34:	add	r3, r6, #12
   18b38:	ldm	r3, {r1, r2, r3}
   18b3c:	add	r0, r0, r2, lsl #2
   18b40:	movw	r7, #34079	; 0x851f
   18b44:	movt	r7, #20971	; 0x51eb
   18b48:	umull	r2, r5, r3, r7
   18b4c:	lsr	r2, r5, #5
   18b50:	mov	r5, #100	; 0x64
   18b54:	mls	r2, r2, r5, r3
   18b58:	stm	sp, {r0, r2}
   18b5c:	umull	r0, r2, r1, r7
   18b60:	lsr	r0, r2, #5
   18b64:	mls	r3, r0, r5, r1
   18b68:	add	r0, sp, #24
   18b6c:	ldr	r2, [pc, #216]	; 18c4c <sav_emit_header+0x2f0>
   18b70:	add	r2, pc, r2
   18b74:	mov	r1, #10
   18b78:	bl	4d04 <snprintf@plt>
   18b7c:	vldr	d16, [sp, #24]
   18b80:	ldrb	r0, [sp, #32]
   18b84:	strb	r0, [sp, #196]	; 0xc4
   18b88:	vstr	d16, [sp, #188]	; 0xbc
   18b8c:	ldm	r6, {r0, r1, r2}
   18b90:	umull	r3, r6, r0, r7
   18b94:	lsr	r3, r6, #5
   18b98:	mls	r0, r3, r5, r0
   18b9c:	umull	r3, r6, r1, r7
   18ba0:	lsr	r3, r6, #5
   18ba4:	mls	r1, r3, r5, r1
   18ba8:	str	r1, [sp]
   18bac:	str	r0, [sp, #4]
   18bb0:	umull	r0, r1, r2, r7
   18bb4:	lsr	r0, r1, #5
   18bb8:	mls	r3, r0, r5, r2
   18bbc:	add	r0, sp, #8
   18bc0:	ldr	r2, [pc, #136]	; 18c50 <sav_emit_header+0x2f4>
   18bc4:	add	r2, pc, r2
   18bc8:	mov	r1, #9
   18bcc:	bl	4d04 <snprintf@plt>
   18bd0:	ldr	r0, [sp, #8]
   18bd4:	ldr	r1, [sp, #12]
   18bd8:	str	r1, [sp, #201]	; 0xc9
   18bdc:	str	r0, [sp, #197]	; 0xc5
   18be0:	add	r5, r8, #109	; 0x6d
   18be4:	mov	r6, #64	; 0x40
   18be8:	mov	r0, r5
   18bec:	mov	r1, #32
   18bf0:	mov	r2, #64	; 0x40
   18bf4:	bl	4d28 <memset@plt>
   18bf8:	add	r7, r4, #88	; 0x58
   18bfc:	mov	r0, r7
   18c00:	bl	4c8c <strlen@plt>
   18c04:	ldrb	r1, [r4, #88]	; 0x58
   18c08:	cmp	r1, #0
   18c0c:	beq	18c28 <sav_emit_header+0x2cc>
   18c10:	cmp	r0, #64	; 0x40
   18c14:	movcc	r6, r0
   18c18:	mov	r0, r5
   18c1c:	mov	r1, r7
   18c20:	mov	r2, r6
   18c24:	bl	4998 <memcpy@plt>
   18c28:	add	r1, sp, #96	; 0x60
   18c2c:	mov	r0, r4
   18c30:	mov	r2, #176	; 0xb0
   18c34:	bl	4ef0 <readstat_write_bytes@plt>
   18c38:	sub	sp, fp, #24
   18c3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18c40:	.word	0x0000e244
   18c44:	.word	0x0000e1fc
   18c48:	.word	0x0000e188
   18c4c:	.word	0x0000e057
   18c50:	.word	0x0000cfc1

00018c54 <sav_emit_variable_records>:
   18c54:	push	{r4, r5, r6, sl, fp, lr}
   18c58:	add	fp, sp, #16
   18c5c:	mov	r5, r0
   18c60:	ldr	r0, [r0, #28]
   18c64:	cmp	r0, #1
   18c68:	movlt	r0, #0
   18c6c:	poplt	{r4, r5, r6, sl, fp, pc}
   18c70:	mov	r4, r1
   18c74:	mov	r6, #0
   18c78:	mov	r0, r5
   18c7c:	mov	r1, r6
   18c80:	bl	4e18 <readstat_get_variable@plt>
   18c84:	mov	r1, r0
   18c88:	mov	r0, r5
   18c8c:	mov	r2, r4
   18c90:	bl	19f10 <sav_emit_full_variable_record>
   18c94:	cmp	r0, #0
   18c98:	popne	{r4, r5, r6, sl, fp, pc}
   18c9c:	add	r6, r6, #1
   18ca0:	add	r4, r4, #15
   18ca4:	ldr	r0, [r5, #28]
   18ca8:	cmp	r6, r0
   18cac:	movge	r0, #0
   18cb0:	popge	{r4, r5, r6, sl, fp, pc}
   18cb4:	b	18c78 <sav_emit_variable_records+0x24>

00018cb8 <sav_emit_value_label_records>:
   18cb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18cbc:	add	fp, sp, #28
   18cc0:	sub	sp, sp, #164	; 0xa4
   18cc4:	mov	r7, r0
   18cc8:	ldr	r0, [r0, #40]	; 0x28
   18ccc:	cmp	r0, #1
   18cd0:	blt	18f40 <sav_emit_value_label_records+0x288>
   18cd4:	mov	r4, #0
   18cd8:	mov	r9, #3
   18cdc:	mov	r1, #0
   18ce0:	mov	r0, r7
   18ce4:	str	r1, [sp, #4]
   18ce8:	bl	4ec0 <readstat_get_label_set@plt>
   18cec:	mov	r8, r0
   18cf0:	bl	1aa74 <readstat_label_set_needs_short_value_labels_record>
   18cf4:	cmp	r0, #0
   18cf8:	beq	18f2c <sav_emit_value_label_records+0x274>
   18cfc:	ldr	r5, [r8]
   18d00:	ldr	r0, [r8, #264]	; 0x108
   18d04:	str	r0, [fp, #-32]	; 0xffffffe0
   18d08:	str	r4, [fp, #-36]	; 0xffffffdc
   18d0c:	cmp	r0, #0
   18d10:	beq	18f2c <sav_emit_value_label_records+0x274>
   18d14:	str	r9, [fp, #-36]	; 0xffffffdc
   18d18:	mov	r0, r7
   18d1c:	sub	r1, fp, #36	; 0x24
   18d20:	mov	r2, #4
   18d24:	bl	4ef0 <readstat_write_bytes@plt>
   18d28:	cmp	r0, #0
   18d2c:	bne	18f44 <sav_emit_value_label_records+0x28c>
   18d30:	mov	r0, r7
   18d34:	sub	r1, fp, #32
   18d38:	mov	r2, #4
   18d3c:	bl	4ef0 <readstat_write_bytes@plt>
   18d40:	cmp	r0, #0
   18d44:	bne	18f44 <sav_emit_value_label_records+0x28c>
   18d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d4c:	cmp	r0, #1
   18d50:	blt	18e70 <sav_emit_value_label_records+0x1b8>
   18d54:	mov	r9, #0
   18d58:	mov	r0, r8
   18d5c:	mov	r1, r9
   18d60:	bl	4f68 <readstat_get_value_label@plt>
   18d64:	mov	sl, r0
   18d68:	cmp	r5, #5
   18d6c:	beq	18db4 <sav_emit_value_label_records+0xfc>
   18d70:	cmp	r5, #3
   18d74:	beq	18dbc <sav_emit_value_label_records+0x104>
   18d78:	cmp	r5, #0
   18d7c:	bne	18dc8 <sav_emit_value_label_records+0x110>
   18d80:	ldrd	r2, [sl, #16]
   18d84:	movw	r0, #8224	; 0x2020
   18d88:	movt	r0, #8224	; 0x2020
   18d8c:	str	r0, [fp, #-44]	; 0xffffffd4
   18d90:	str	r0, [fp, #-48]	; 0xffffffd0
   18d94:	cmp	r3, #8
   18d98:	mov	r0, #8
   18d9c:	movcs	r3, r0
   18da0:	sub	r0, fp, #48	; 0x30
   18da4:	mov	r1, r2
   18da8:	mov	r2, r3
   18dac:	bl	4998 <memcpy@plt>
   18db0:	b	18dc8 <sav_emit_value_label_records+0x110>
   18db4:	vldr	d16, [sl]
   18db8:	b	18dc4 <sav_emit_value_label_records+0x10c>
   18dbc:	vldr	s0, [sl, #8]
   18dc0:	vcvt.f64.s32	d16, s0
   18dc4:	vstr	d16, [fp, #-48]	; 0xffffffd0
   18dc8:	mov	r0, r7
   18dcc:	sub	r1, fp, #48	; 0x30
   18dd0:	mov	r2, #8
   18dd4:	bl	4ef0 <readstat_write_bytes@plt>
   18dd8:	ldr	r1, [sl, #28]
   18ddc:	ldr	sl, [sl, #24]
   18de0:	mov	r0, #120	; 0x78
   18de4:	strb	r0, [fp, #-49]	; 0xffffffcf
   18de8:	cmp	r1, #119	; 0x77
   18dec:	strbls	r1, [fp, #-49]	; 0xffffffcf
   18df0:	mov	r0, r7
   18df4:	sub	r1, fp, #49	; 0x31
   18df8:	mov	r2, #1
   18dfc:	bl	4ef0 <readstat_write_bytes@plt>
   18e00:	cmp	r0, #0
   18e04:	bne	18f44 <sav_emit_value_label_records+0x28c>
   18e08:	mov	r6, r5
   18e0c:	add	r5, sp, #8
   18e10:	mov	r0, r5
   18e14:	mov	r1, #32
   18e18:	mov	r2, #128	; 0x80
   18e1c:	bl	4d28 <memset@plt>
   18e20:	mov	r4, r7
   18e24:	ldrb	r7, [fp, #-49]	; 0xffffffcf
   18e28:	mov	r0, r5
   18e2c:	mov	r1, sl
   18e30:	mov	r2, r7
   18e34:	bl	4998 <memcpy@plt>
   18e38:	add	r0, r7, #8
   18e3c:	mov	r7, r4
   18e40:	and	r0, r0, #504	; 0x1f8
   18e44:	sub	r2, r0, #1
   18e48:	mov	r0, r4
   18e4c:	mov	r1, r5
   18e50:	bl	4ef0 <readstat_write_bytes@plt>
   18e54:	cmp	r0, #0
   18e58:	bne	18f44 <sav_emit_value_label_records+0x28c>
   18e5c:	add	r9, r9, #1
   18e60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18e64:	cmp	r9, r0
   18e68:	mov	r5, r6
   18e6c:	blt	18d58 <sav_emit_value_label_records+0xa0>
   18e70:	mov	r0, #4
   18e74:	str	r0, [fp, #-36]	; 0xffffffdc
   18e78:	mov	r0, r8
   18e7c:	bl	1aa94 <readstat_label_set_number_short_variables>
   18e80:	str	r0, [sp, #8]
   18e84:	mov	r0, r7
   18e88:	sub	r1, fp, #36	; 0x24
   18e8c:	mov	r2, #4
   18e90:	bl	4ef0 <readstat_write_bytes@plt>
   18e94:	cmp	r0, #0
   18e98:	bne	18f44 <sav_emit_value_label_records+0x28c>
   18e9c:	mov	r0, r7
   18ea0:	add	r1, sp, #8
   18ea4:	mov	r2, #4
   18ea8:	bl	4ef0 <readstat_write_bytes@plt>
   18eac:	cmp	r0, #0
   18eb0:	bne	18f44 <sav_emit_value_label_records+0x28c>
   18eb4:	mov	r6, r7
   18eb8:	ldr	r0, [r8, #276]	; 0x114
   18ebc:	cmp	r0, #1
   18ec0:	mov	r4, #0
   18ec4:	mov	r9, #3
   18ec8:	mov	r5, #1
   18ecc:	blt	18f28 <sav_emit_value_label_records+0x270>
   18ed0:	mov	r7, #0
   18ed4:	mov	r0, r8
   18ed8:	mov	r1, r7
   18edc:	bl	4ee4 <readstat_get_label_set_variable@plt>
   18ee0:	ldr	r1, [r0, #1596]	; 0x63c
   18ee4:	cmp	r1, #8
   18ee8:	bhi	18f18 <sav_emit_value_label_records+0x260>
   18eec:	ldr	r0, [r0, #1592]	; 0x638
   18ef0:	asr	r1, r0, #31
   18ef4:	add	r0, r0, r1, lsr #29
   18ef8:	add	r0, r5, r0, asr #3
   18efc:	str	r0, [fp, #-48]	; 0xffffffd0
   18f00:	mov	r0, r6
   18f04:	sub	r1, fp, #48	; 0x30
   18f08:	mov	r2, #4
   18f0c:	bl	4ef0 <readstat_write_bytes@plt>
   18f10:	cmp	r0, #0
   18f14:	bne	18f44 <sav_emit_value_label_records+0x28c>
   18f18:	ldr	r0, [r8, #276]	; 0x114
   18f1c:	add	r7, r7, #1
   18f20:	cmp	r7, r0
   18f24:	blt	18ed4 <sav_emit_value_label_records+0x21c>
   18f28:	mov	r7, r6
   18f2c:	ldr	r1, [sp, #4]
   18f30:	add	r1, r1, #1
   18f34:	ldr	r0, [r7, #40]	; 0x28
   18f38:	cmp	r1, r0
   18f3c:	blt	18ce0 <sav_emit_value_label_records+0x28>
   18f40:	mov	r0, #0
   18f44:	sub	sp, fp, #28
   18f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00018f4c <sav_emit_document_record>:
   18f4c:	push	{r4, r5, r6, r7, fp, lr}
   18f50:	add	fp, sp, #16
   18f54:	sub	sp, sp, #8
   18f58:	mov	r4, r0
   18f5c:	mov	r0, #6
   18f60:	str	r0, [sp, #4]
   18f64:	ldr	r1, [r4, #52]	; 0x34
   18f68:	str	r1, [sp]
   18f6c:	mov	r0, #0
   18f70:	cmp	r1, #0
   18f74:	beq	18fa8 <sav_emit_document_record+0x5c>
   18f78:	add	r1, sp, #4
   18f7c:	mov	r0, r4
   18f80:	mov	r2, #4
   18f84:	bl	4ef0 <readstat_write_bytes@plt>
   18f88:	cmp	r0, #0
   18f8c:	bne	18fa8 <sav_emit_document_record+0x5c>
   18f90:	mov	r1, sp
   18f94:	mov	r0, r4
   18f98:	mov	r2, #4
   18f9c:	bl	4ef0 <readstat_write_bytes@plt>
   18fa0:	cmp	r0, #0
   18fa4:	beq	18fb0 <sav_emit_document_record+0x64>
   18fa8:	sub	sp, fp, #16
   18fac:	pop	{r4, r5, r6, r7, fp, pc}
   18fb0:	ldr	r0, [r4, #52]	; 0x34
   18fb4:	cmp	r0, #1
   18fb8:	mov	r0, #0
   18fbc:	blt	18fa8 <sav_emit_document_record+0x5c>
   18fc0:	mov	r7, #0
   18fc4:	ldr	r0, [r4, #48]	; 0x30
   18fc8:	ldr	r6, [r0, r7, lsl #2]
   18fcc:	mov	r0, r6
   18fd0:	bl	4c8c <strlen@plt>
   18fd4:	cmp	r0, #80	; 0x50
   18fd8:	bhi	19024 <sav_emit_document_record+0xd8>
   18fdc:	mov	r5, r0
   18fe0:	mov	r0, r4
   18fe4:	mov	r1, r6
   18fe8:	mov	r2, r5
   18fec:	bl	4ef0 <readstat_write_bytes@plt>
   18ff0:	cmp	r0, #0
   18ff4:	bne	18fa8 <sav_emit_document_record+0x5c>
   18ff8:	rsb	r1, r5, #80	; 0x50
   18ffc:	mov	r0, r4
   19000:	bl	4854 <readstat_write_spaces@plt>
   19004:	cmp	r0, #0
   19008:	bne	18fa8 <sav_emit_document_record+0x5c>
   1900c:	add	r7, r7, #1
   19010:	ldr	r1, [r4, #52]	; 0x34
   19014:	mov	r0, #0
   19018:	cmp	r7, r1
   1901c:	blt	18fc4 <sav_emit_document_record+0x78>
   19020:	b	18fa8 <sav_emit_document_record+0x5c>
   19024:	mov	r0, #32
   19028:	sub	sp, fp, #16
   1902c:	pop	{r4, r5, r6, r7, fp, pc}

00019030 <sav_emit_integer_info_record>:
   19030:	push	{r4, r5, fp, lr}
   19034:	add	fp, sp, #8
   19038:	sub	sp, sp, #48	; 0x30
   1903c:	mov	r4, r0
   19040:	ldr	r0, [pc, #136]	; 190d0 <sav_emit_integer_info_record+0xa0>
   19044:	add	r0, pc, r0
   19048:	vld1.64	{d16-d17}, [r0]
   1904c:	sub	r5, fp, #24
   19050:	vst1.64	{d16-d17}, [r5]
   19054:	mov	r0, #0
   19058:	str	r0, [sp, #4]
   1905c:	mov	r1, #20
   19060:	str	r1, [sp]
   19064:	str	r0, [sp, #8]
   19068:	mvn	r0, #0
   1906c:	str	r0, [sp, #12]
   19070:	mov	r0, #1
   19074:	str	r0, [sp, #16]
   19078:	str	r0, [sp, #20]
   1907c:	bl	492c <machine_is_little_endian@plt>
   19080:	movw	r1, #65001	; 0xfde9
   19084:	str	r1, [sp, #28]
   19088:	mov	r1, #2
   1908c:	cmp	r0, #0
   19090:	movweq	r1, #1
   19094:	str	r1, [sp, #24]
   19098:	mov	r0, r4
   1909c:	mov	r1, r5
   190a0:	mov	r2, #16
   190a4:	bl	4ef0 <readstat_write_bytes@plt>
   190a8:	cmp	r0, #0
   190ac:	beq	190b8 <sav_emit_integer_info_record+0x88>
   190b0:	sub	sp, fp, #8
   190b4:	pop	{r4, r5, fp, pc}
   190b8:	mov	r1, sp
   190bc:	mov	r0, r4
   190c0:	mov	r2, #32
   190c4:	bl	4ef0 <readstat_write_bytes@plt>
   190c8:	sub	sp, fp, #8
   190cc:	pop	{r4, r5, fp, pc}
   190d0:	.word	0x0000dc0c

000190d4 <sav_emit_floating_point_info_record>:
   190d4:	push	{r4, sl, fp, lr}
   190d8:	add	fp, sp, #8
   190dc:	sub	sp, sp, #40	; 0x28
   190e0:	mov	r4, r0
   190e4:	ldr	r0, [pc, #112]	; 1915c <sav_emit_floating_point_info_record+0x88>
   190e8:	add	r0, pc, r0
   190ec:	vld1.64	{d16-d17}, [r0]
   190f0:	add	r1, sp, #24
   190f4:	vst1.64	{d16-d17}, [r1]
   190f8:	mov	r0, r4
   190fc:	mov	r2, #16
   19100:	bl	4ef0 <readstat_write_bytes@plt>
   19104:	cmp	r0, #0
   19108:	beq	19114 <sav_emit_floating_point_info_record+0x40>
   1910c:	sub	sp, fp, #8
   19110:	pop	{r4, sl, fp, pc}
   19114:	movw	r0, #65535	; 0xffff
   19118:	movt	r0, #32751	; 0x7fef
   1911c:	str	r0, [sp, #12]
   19120:	mvn	r0, #0
   19124:	str	r0, [sp, #8]
   19128:	mvn	r0, #1048576	; 0x100000
   1912c:	str	r0, [sp, #4]
   19130:	str	r0, [sp, #20]
   19134:	mvn	r0, #1
   19138:	str	r0, [sp, #16]
   1913c:	add	r0, r0, #1
   19140:	str	r0, [sp]
   19144:	mov	r1, sp
   19148:	mov	r0, r4
   1914c:	mov	r2, #24
   19150:	bl	4ef0 <readstat_write_bytes@plt>
   19154:	sub	sp, fp, #8
   19158:	pop	{r4, sl, fp, pc}
   1915c:	.word	0x0000db78

00019160 <sav_emit_variable_display_record>:
   19160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19164:	add	fp, sp, #28
   19168:	sub	sp, sp, #36	; 0x24
   1916c:	mov	r4, r0
   19170:	ldr	r0, [pc, #388]	; 192fc <sav_emit_variable_display_record+0x19c>
   19174:	add	r0, pc, r0
   19178:	vld1.64	{d16-d17}, [r0]
   1917c:	add	r0, sp, #16
   19180:	vst1.64	{d16-d17}, [r0]
   19184:	ldr	r0, [r4, #28]
   19188:	cmp	r0, #1
   1918c:	blt	191d0 <sav_emit_variable_display_record+0x70>
   19190:	mov	r5, #0
   19194:	mov	r6, #0
   19198:	mov	r0, r4
   1919c:	mov	r1, r5
   191a0:	bl	4e18 <readstat_get_variable@plt>
   191a4:	ldr	r2, [r0]
   191a8:	ldr	r1, [r0, #1600]	; 0x640
   191ac:	mov	r0, r2
   191b0:	bl	18504 <sav_variable_segments>
   191b4:	add	r6, r0, r6
   191b8:	add	r5, r5, #1
   191bc:	ldr	r0, [r4, #28]
   191c0:	cmp	r5, r0
   191c4:	blt	19198 <sav_emit_variable_display_record+0x38>
   191c8:	add	r0, r6, r6, lsl #1
   191cc:	b	191d4 <sav_emit_variable_display_record+0x74>
   191d0:	mov	r0, #0
   191d4:	str	r0, [sp, #28]
   191d8:	add	r1, sp, #16
   191dc:	mov	r0, r4
   191e0:	mov	r2, #16
   191e4:	bl	4ef0 <readstat_write_bytes@plt>
   191e8:	mov	r6, r0
   191ec:	cmp	r0, #0
   191f0:	beq	19200 <sav_emit_variable_display_record+0xa0>
   191f4:	mov	r0, r6
   191f8:	sub	sp, fp, #28
   191fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19200:	ldr	r0, [r4, #28]
   19204:	mov	r6, #0
   19208:	cmp	r0, #1
   1920c:	blt	191f4 <sav_emit_variable_display_record+0x94>
   19210:	add	sl, sp, #12
   19214:	add	r9, sp, #8
   19218:	mov	r7, #0
   1921c:	mov	r0, r4
   19220:	mov	r1, r7
   19224:	bl	4e18 <readstat_get_variable@plt>
   19228:	mov	r5, r0
   1922c:	bl	4dac <readstat_variable_get_measure@plt>
   19230:	bl	4ae8 <spss_measure_from_readstat_measure@plt>
   19234:	str	r0, [sp, #12]
   19238:	mov	r0, r5
   1923c:	bl	4ca4 <readstat_variable_get_display_width@plt>
   19240:	cmp	r0, #1
   19244:	movwlt	r0, #8
   19248:	str	r0, [sp, #8]
   1924c:	mov	r0, r5
   19250:	bl	4ecc <readstat_variable_get_alignment@plt>
   19254:	bl	48d8 <spss_alignment_from_readstat_alignment@plt>
   19258:	str	r0, [sp, #4]
   1925c:	ldr	r0, [r5]
   19260:	ldr	r1, [r5, #1600]	; 0x640
   19264:	bl	18504 <sav_variable_segments>
   19268:	mov	r5, r0
   1926c:	mov	r8, #1
   19270:	cmp	r0, #0
   19274:	beq	192e0 <sav_emit_variable_display_record+0x180>
   19278:	mov	r0, r4
   1927c:	mov	r1, sl
   19280:	mov	r2, #4
   19284:	bl	4ef0 <readstat_write_bytes@plt>
   19288:	cmp	r0, #0
   1928c:	bne	192d8 <sav_emit_variable_display_record+0x178>
   19290:	mov	r0, r4
   19294:	mov	r1, r9
   19298:	mov	r2, #4
   1929c:	bl	4ef0 <readstat_write_bytes@plt>
   192a0:	cmp	r0, #0
   192a4:	bne	192d8 <sav_emit_variable_display_record+0x178>
   192a8:	mov	r0, r4
   192ac:	add	r1, sp, #4
   192b0:	mov	r2, #4
   192b4:	bl	4ef0 <readstat_write_bytes@plt>
   192b8:	cmp	r0, #0
   192bc:	bne	192d8 <sav_emit_variable_display_record+0x178>
   192c0:	subs	r5, r5, #1
   192c4:	bne	19278 <sav_emit_variable_display_record+0x118>
   192c8:	mov	r6, #0
   192cc:	cmp	r8, #0
   192d0:	bne	192e8 <sav_emit_variable_display_record+0x188>
   192d4:	b	191f4 <sav_emit_variable_display_record+0x94>
   192d8:	mov	r6, r0
   192dc:	mov	r8, #0
   192e0:	cmp	r8, #0
   192e4:	beq	191f4 <sav_emit_variable_display_record+0x94>
   192e8:	add	r7, r7, #1
   192ec:	ldr	r0, [r4, #28]
   192f0:	cmp	r7, r0
   192f4:	blt	1921c <sav_emit_variable_display_record+0xbc>
   192f8:	b	191f4 <sav_emit_variable_display_record+0x94>
   192fc:	.word	0x0000dafc

00019300 <sav_emit_long_var_name_record>:
   19300:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19304:	add	fp, sp, #28
   19308:	sub	sp, sp, #36	; 0x24
   1930c:	mov	r9, r1
   19310:	mov	sl, r0
   19314:	ldr	r0, [pc, #516]	; 19520 <sav_emit_long_var_name_record+0x220>
   19318:	add	r0, pc, r0
   1931c:	vld1.64	{d16-d17}, [r0]
   19320:	add	r0, sp, #16
   19324:	vst1.64	{d16-d17}, [r0]
   19328:	ldr	r0, [sl, #28]
   1932c:	cmp	r0, #1
   19330:	blt	193a4 <sav_emit_long_var_name_record+0xa4>
   19334:	mov	r6, #0
   19338:	add	r8, sp, #7
   1933c:	mov	r4, r9
   19340:	mov	r0, sl
   19344:	mov	r1, r6
   19348:	bl	4e18 <readstat_get_variable@plt>
   1934c:	mov	r5, r0
   19350:	mov	r0, r8
   19354:	mov	r1, r4
   19358:	bl	1a1f0 <sav_format_variable_name>
   1935c:	mov	r7, r0
   19360:	add	r0, r5, #8
   19364:	bl	4c8c <strlen@plt>
   19368:	cmp	r7, #0
   1936c:	cmpne	r0, #0
   19370:	beq	19390 <sav_emit_long_var_name_record+0x90>
   19374:	cmp	r0, #64	; 0x40
   19378:	movcs	r0, #64	; 0x40
   1937c:	add	r0, r7, r0
   19380:	ldr	r1, [sp, #28]
   19384:	add	r0, r0, r1
   19388:	add	r0, r0, #2
   1938c:	str	r0, [sp, #28]
   19390:	add	r4, r4, #15
   19394:	add	r6, r6, #1
   19398:	ldr	r0, [sl, #28]
   1939c:	cmp	r6, r0
   193a0:	blt	19340 <sav_emit_long_var_name_record+0x40>
   193a4:	mov	r6, #0
   193a8:	ldr	r0, [sp, #28]
   193ac:	cmp	r0, #1
   193b0:	blt	193d8 <sav_emit_long_var_name_record+0xd8>
   193b4:	sub	r0, r0, #1
   193b8:	str	r0, [sp, #28]
   193bc:	add	r1, sp, #16
   193c0:	mov	r0, sl
   193c4:	mov	r2, #16
   193c8:	bl	4ef0 <readstat_write_bytes@plt>
   193cc:	mov	r6, r0
   193d0:	cmp	r0, #0
   193d4:	beq	193e4 <sav_emit_long_var_name_record+0xe4>
   193d8:	mov	r0, r6
   193dc:	sub	sp, fp, #28
   193e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   193e4:	ldr	r0, [sl, #28]
   193e8:	cmp	r0, #1
   193ec:	mov	r6, #0
   193f0:	blt	193d8 <sav_emit_long_var_name_record+0xd8>
   193f4:	mov	r0, #1
   193f8:	str	r0, [sp]
   193fc:	mov	r6, #0
   19400:	mov	r7, #0
   19404:	mov	r0, sl
   19408:	mov	r1, r7
   1940c:	bl	4e18 <readstat_get_variable@plt>
   19410:	mov	r5, r0
   19414:	add	r0, sp, #7
   19418:	mov	r4, r9
   1941c:	mov	r1, r9
   19420:	bl	1a1f0 <sav_format_variable_name>
   19424:	add	r8, r5, #8
   19428:	mov	r0, r8
   1942c:	bl	4c8c <strlen@plt>
   19430:	mov	r9, r0
   19434:	mov	r0, #61	; 0x3d
   19438:	strb	r0, [sp, #6]
   1943c:	mov	r0, #9
   19440:	strb	r0, [sp, #5]
   19444:	cmp	r9, #0
   19448:	beq	194f8 <sav_emit_long_var_name_record+0x1f8>
   1944c:	cmp	r9, #64	; 0x40
   19450:	movcs	r9, #64	; 0x40
   19454:	ldr	r0, [sp]
   19458:	cmp	r0, #0
   1945c:	beq	194b4 <sav_emit_long_var_name_record+0x1b4>
   19460:	mov	r0, sl
   19464:	add	r1, sp, #7
   19468:	bl	4be4 <readstat_write_string@plt>
   1946c:	mov	r5, #0
   19470:	cmp	r0, #0
   19474:	bne	194ac <sav_emit_long_var_name_record+0x1ac>
   19478:	mov	r0, sl
   1947c:	add	r1, sp, #6
   19480:	mov	r2, #1
   19484:	bl	4ef0 <readstat_write_bytes@plt>
   19488:	cmp	r0, #0
   1948c:	bne	194ac <sav_emit_long_var_name_record+0x1ac>
   19490:	mov	r0, sl
   19494:	mov	r1, r8
   19498:	mov	r2, r9
   1949c:	bl	4ef0 <readstat_write_bytes@plt>
   194a0:	mov	r5, #0
   194a4:	cmp	r0, #0
   194a8:	beq	194ec <sav_emit_long_var_name_record+0x1ec>
   194ac:	mov	r6, r0
   194b0:	b	194dc <sav_emit_long_var_name_record+0x1dc>
   194b4:	mov	r0, sl
   194b8:	add	r1, sp, #5
   194bc:	mov	r2, #1
   194c0:	bl	4ef0 <readstat_write_bytes@plt>
   194c4:	cmp	r0, #0
   194c8:	beq	19460 <sav_emit_long_var_name_record+0x160>
   194cc:	mov	r6, r0
   194d0:	mov	r0, #0
   194d4:	str	r0, [sp]
   194d8:	mov	r5, #0
   194dc:	mov	r9, r4
   194e0:	cmp	r5, #0
   194e4:	bne	19508 <sav_emit_long_var_name_record+0x208>
   194e8:	b	193d8 <sav_emit_long_var_name_record+0xd8>
   194ec:	mov	r0, #0
   194f0:	str	r0, [sp]
   194f4:	mov	r6, #0
   194f8:	mov	r9, r4
   194fc:	mov	r5, #1
   19500:	cmp	r5, #0
   19504:	beq	193d8 <sav_emit_long_var_name_record+0xd8>
   19508:	add	r7, r7, #1
   1950c:	add	r9, r9, #15
   19510:	ldr	r0, [sl, #28]
   19514:	cmp	r7, r0
   19518:	blt	19404 <sav_emit_long_var_name_record+0x104>
   1951c:	b	193d8 <sav_emit_long_var_name_record+0xd8>
   19520:	.word	0x0000d968

00019524 <sav_emit_very_long_string_record>:
   19524:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19528:	add	fp, sp, #28
   1952c:	sub	sp, sp, #52	; 0x34
   19530:	mov	sl, r1
   19534:	mov	r5, r0
   19538:	mov	r0, #2304	; 0x900
   1953c:	strh	r0, [fp, #-30]	; 0xffffffe2
   19540:	ldr	r0, [pc, #448]	; 19708 <sav_emit_very_long_string_record+0x1e4>
   19544:	add	r0, pc, r0
   19548:	vld1.64	{d16-d17}, [r0]
   1954c:	add	r0, sp, #32
   19550:	vst1.64	{d16-d17}, [r0]
   19554:	ldr	r0, [r5, #28]
   19558:	cmp	r0, #1
   1955c:	blt	19604 <sav_emit_very_long_string_record+0xe0>
   19560:	mov	r6, #0
   19564:	add	r9, sp, #23
   19568:	add	r4, sp, #8
   1956c:	mov	r7, sl
   19570:	mov	r0, r5
   19574:	mov	r1, r6
   19578:	bl	4e18 <readstat_get_variable@plt>
   1957c:	mov	r8, r0
   19580:	ldr	r0, [r0, #1600]	; 0x640
   19584:	cmp	r0, #256	; 0x100
   19588:	bcc	195f0 <sav_emit_very_long_string_record+0xcc>
   1958c:	mov	r0, r9
   19590:	mov	r1, r7
   19594:	bl	1a1f0 <sav_format_variable_name>
   19598:	ldr	r0, [r8, #1600]	; 0x640
   1959c:	lsr	r1, r0, #5
   195a0:	movw	r2, #23237	; 0x5ac5
   195a4:	movt	r2, #2684	; 0xa7c
   195a8:	umull	r1, r2, r1, r2
   195ac:	lsr	r1, r2, #7
   195b0:	movw	r2, #3125	; 0xc35
   195b4:	mul	r1, r1, r2
   195b8:	sub	r0, r0, r1, lsl #5
   195bc:	str	r0, [sp]
   195c0:	mov	r0, r4
   195c4:	mov	r1, #15
   195c8:	ldr	r2, [pc, #316]	; 1970c <sav_emit_very_long_string_record+0x1e8>
   195cc:	add	r2, pc, r2
   195d0:	mov	r3, r9
   195d4:	bl	4d04 <snprintf@plt>
   195d8:	mov	r0, r4
   195dc:	bl	4c8c <strlen@plt>
   195e0:	ldr	r1, [sp, #44]	; 0x2c
   195e4:	add	r0, r0, r1
   195e8:	add	r0, r0, #2
   195ec:	str	r0, [sp, #44]	; 0x2c
   195f0:	add	r7, r7, #15
   195f4:	add	r6, r6, #1
   195f8:	ldr	r0, [r5, #28]
   195fc:	cmp	r6, r0
   19600:	blt	19570 <sav_emit_very_long_string_record+0x4c>
   19604:	mov	r0, #0
   19608:	ldr	r1, [sp, #44]	; 0x2c
   1960c:	cmp	r1, #0
   19610:	beq	1962c <sav_emit_very_long_string_record+0x108>
   19614:	add	r1, sp, #32
   19618:	mov	r0, r5
   1961c:	mov	r2, #16
   19620:	bl	4ef0 <readstat_write_bytes@plt>
   19624:	cmp	r0, #0
   19628:	beq	19634 <sav_emit_very_long_string_record+0x110>
   1962c:	sub	sp, fp, #28
   19630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19634:	ldr	r0, [r5, #28]
   19638:	cmp	r0, #1
   1963c:	mov	r0, #0
   19640:	blt	1962c <sav_emit_very_long_string_record+0x108>
   19644:	mov	r6, #0
   19648:	add	r8, sp, #23
   1964c:	add	r7, sp, #8
   19650:	ldr	r9, [pc, #184]	; 19710 <sav_emit_very_long_string_record+0x1ec>
   19654:	add	r9, pc, r9
   19658:	mov	r0, r5
   1965c:	mov	r1, r6
   19660:	bl	4e18 <readstat_get_variable@plt>
   19664:	mov	r4, r0
   19668:	ldr	r0, [r0, #1600]	; 0x640
   1966c:	cmp	r0, #256	; 0x100
   19670:	bcc	196e8 <sav_emit_very_long_string_record+0x1c4>
   19674:	mov	r0, r8
   19678:	mov	r1, sl
   1967c:	bl	1a1f0 <sav_format_variable_name>
   19680:	ldr	r0, [r4, #1600]	; 0x640
   19684:	lsr	r1, r0, #5
   19688:	movw	r2, #23237	; 0x5ac5
   1968c:	movt	r2, #2684	; 0xa7c
   19690:	umull	r1, r2, r1, r2
   19694:	lsr	r1, r2, #7
   19698:	movw	r2, #3125	; 0xc35
   1969c:	mul	r1, r1, r2
   196a0:	sub	r0, r0, r1, lsl #5
   196a4:	str	r0, [sp]
   196a8:	mov	r0, r7
   196ac:	mov	r1, #15
   196b0:	mov	r2, r9
   196b4:	mov	r3, r8
   196b8:	bl	4d04 <snprintf@plt>
   196bc:	mov	r0, r5
   196c0:	mov	r1, r7
   196c4:	bl	4be4 <readstat_write_string@plt>
   196c8:	cmp	r0, #0
   196cc:	bne	1962c <sav_emit_very_long_string_record+0x108>
   196d0:	mov	r0, r5
   196d4:	sub	r1, fp, #30
   196d8:	mov	r2, #2
   196dc:	bl	4ef0 <readstat_write_bytes@plt>
   196e0:	cmp	r0, #0
   196e4:	bne	1962c <sav_emit_very_long_string_record+0x108>
   196e8:	add	sl, sl, #15
   196ec:	add	r6, r6, #1
   196f0:	ldr	r0, [r5, #28]
   196f4:	cmp	r6, r0
   196f8:	blt	19658 <sav_emit_very_long_string_record+0x134>
   196fc:	mov	r0, #0
   19700:	sub	sp, fp, #28
   19704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19708:	.word	0x0000d74c
   1970c:	.word	0x0000d60b
   19710:	.word	0x0000d583

00019714 <sav_emit_long_string_value_labels_record>:
   19714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19718:	add	fp, sp, #28
   1971c:	sub	sp, sp, #52	; 0x34
   19720:	mov	r4, r0
   19724:	ldr	r0, [pc, #872]	; 19a94 <sav_emit_long_string_value_labels_record+0x380>
   19728:	add	r0, pc, r0
   1972c:	vld1.64	{d16-d17}, [r0]
   19730:	add	r0, sp, #32
   19734:	vst1.64	{d16-d17}, [r0]
   19738:	ldr	r0, [r4, #40]	; 0x28
   1973c:	cmp	r0, #1
   19740:	blt	19820 <sav_emit_long_string_value_labels_record+0x10c>
   19744:	mov	r1, #0
   19748:	str	r4, [sp, #8]
   1974c:	mov	r0, r4
   19750:	str	r1, [sp, #12]
   19754:	bl	4ec0 <readstat_get_label_set@plt>
   19758:	mov	r6, r0
   1975c:	bl	1aae4 <readstat_label_set_needs_long_value_labels_record>
   19760:	cmp	r0, #0
   19764:	beq	19808 <sav_emit_long_string_value_labels_record+0xf4>
   19768:	ldr	sl, [r6, #276]	; 0x114
   1976c:	cmp	sl, #1
   19770:	blt	19808 <sav_emit_long_string_value_labels_record+0xf4>
   19774:	ldr	r9, [r6, #264]	; 0x108
   19778:	mov	r7, #0
   1977c:	mov	r0, r6
   19780:	mov	r1, r7
   19784:	bl	4ee4 <readstat_get_label_set_variable@plt>
   19788:	mov	r5, r0
   1978c:	add	r0, r0, #8
   19790:	bl	4c8c <strlen@plt>
   19794:	mov	r4, r0
   19798:	mov	r0, r5
   1979c:	bl	4d58 <readstat_variable_get_storage_width@plt>
   197a0:	cmp	r0, #9
   197a4:	blt	197fc <sav_emit_long_string_value_labels_record+0xe8>
   197a8:	ldr	r1, [sp, #44]	; 0x2c
   197ac:	add	r1, r4, r1
   197b0:	add	r1, r1, #12
   197b4:	str	r1, [sp, #44]	; 0x2c
   197b8:	cmp	r9, #1
   197bc:	blt	197fc <sav_emit_long_string_value_labels_record+0xe8>
   197c0:	add	r5, r0, #8
   197c4:	mov	r4, #0
   197c8:	ldr	r8, [sp, #44]	; 0x2c
   197cc:	mov	r0, r6
   197d0:	mov	r1, r4
   197d4:	bl	4f68 <readstat_get_value_label@plt>
   197d8:	add	r1, r5, r8
   197dc:	ldr	r0, [r0, #28]
   197e0:	cmp	r0, #120	; 0x78
   197e4:	movge	r0, #120	; 0x78
   197e8:	add	r8, r1, r0
   197ec:	add	r4, r4, #1
   197f0:	cmp	r9, r4
   197f4:	bne	197cc <sav_emit_long_string_value_labels_record+0xb8>
   197f8:	str	r8, [sp, #44]	; 0x2c
   197fc:	add	r7, r7, #1
   19800:	cmp	r7, sl
   19804:	bne	1977c <sav_emit_long_string_value_labels_record+0x68>
   19808:	ldr	r4, [sp, #8]
   1980c:	ldr	r0, [r4, #40]	; 0x28
   19810:	ldr	r1, [sp, #12]
   19814:	add	r1, r1, #1
   19818:	cmp	r1, r0
   1981c:	blt	1974c <sav_emit_long_string_value_labels_record+0x38>
   19820:	mov	sl, #0
   19824:	ldr	r0, [sp, #44]	; 0x2c
   19828:	cmp	r0, #0
   1982c:	beq	1984c <sav_emit_long_string_value_labels_record+0x138>
   19830:	add	r1, sp, #32
   19834:	mov	r0, r4
   19838:	mov	r2, #16
   1983c:	bl	4ef0 <readstat_write_bytes@plt>
   19840:	mov	sl, r0
   19844:	cmp	r0, #0
   19848:	beq	19858 <sav_emit_long_string_value_labels_record+0x144>
   1984c:	mov	r0, sl
   19850:	sub	sp, fp, #28
   19854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19858:	ldr	r0, [r4, #40]	; 0x28
   1985c:	cmp	r0, #1
   19860:	mov	sl, #0
   19864:	blt	1984c <sav_emit_long_string_value_labels_record+0x138>
   19868:	mov	r5, #0
   1986c:	add	sl, sp, #24
   19870:	mov	r7, #0
   19874:	mov	r0, r4
   19878:	mov	r1, r5
   1987c:	bl	4ec0 <readstat_get_label_set@plt>
   19880:	mov	r9, r0
   19884:	bl	1aae4 <readstat_label_set_needs_long_value_labels_record>
   19888:	cmp	r0, #0
   1988c:	beq	19a48 <sav_emit_long_string_value_labels_record+0x334>
   19890:	ldr	r0, [r9, #264]	; 0x108
   19894:	str	r0, [sp, #28]
   19898:	ldr	r0, [r9, #276]	; 0x114
   1989c:	str	r0, [sp, #4]
   198a0:	cmp	r0, #1
   198a4:	str	r5, [sp]
   198a8:	blt	19a44 <sav_emit_long_string_value_labels_record+0x330>
   198ac:	mov	r8, #0
   198b0:	mov	r0, r9
   198b4:	mov	r1, r8
   198b8:	bl	4ee4 <readstat_get_label_set_variable@plt>
   198bc:	mov	r6, r0
   198c0:	add	r5, r0, #8
   198c4:	mov	r0, r5
   198c8:	bl	4c8c <strlen@plt>
   198cc:	str	r0, [sp, #24]
   198d0:	mov	r0, r6
   198d4:	bl	4d58 <readstat_variable_get_storage_width@plt>
   198d8:	str	r0, [sp, #20]
   198dc:	cmp	r0, #9
   198e0:	blt	19a34 <sav_emit_long_string_value_labels_record+0x320>
   198e4:	mov	r1, r0
   198e8:	mov	r0, r7
   198ec:	bl	4a70 <realloc@plt>
   198f0:	mov	r7, r0
   198f4:	ldr	r2, [sp, #20]
   198f8:	mov	r1, #32
   198fc:	bl	4d28 <memset@plt>
   19900:	mov	r0, r4
   19904:	mov	r1, sl
   19908:	mov	r2, #4
   1990c:	bl	4ef0 <readstat_write_bytes@plt>
   19910:	cmp	r0, #0
   19914:	bne	19a84 <sav_emit_long_string_value_labels_record+0x370>
   19918:	ldr	r2, [sp, #24]
   1991c:	mov	r0, r4
   19920:	mov	r1, r5
   19924:	bl	4ef0 <readstat_write_bytes@plt>
   19928:	cmp	r0, #0
   1992c:	bne	19a84 <sav_emit_long_string_value_labels_record+0x370>
   19930:	mov	r0, r4
   19934:	add	r1, sp, #20
   19938:	mov	r2, #4
   1993c:	bl	4ef0 <readstat_write_bytes@plt>
   19940:	cmp	r0, #0
   19944:	bne	19a84 <sav_emit_long_string_value_labels_record+0x370>
   19948:	mov	r0, r4
   1994c:	add	r1, sp, #28
   19950:	mov	r2, #4
   19954:	bl	4ef0 <readstat_write_bytes@plt>
   19958:	cmp	r0, #0
   1995c:	bne	19a84 <sav_emit_long_string_value_labels_record+0x370>
   19960:	ldr	r0, [sp, #28]
   19964:	cmp	r0, #1
   19968:	blt	19a30 <sav_emit_long_string_value_labels_record+0x31c>
   1996c:	str	r7, [sp, #12]
   19970:	mov	r7, #0
   19974:	mov	r0, r9
   19978:	mov	r1, r7
   1997c:	bl	4f68 <readstat_get_value_label@plt>
   19980:	mov	r5, r0
   19984:	ldr	r6, [r0, #20]
   19988:	ldr	r0, [r0, #28]
   1998c:	cmp	r0, #120	; 0x78
   19990:	movge	r0, #120	; 0x78
   19994:	str	r0, [sp, #16]
   19998:	mov	r0, r4
   1999c:	add	r1, sp, #20
   199a0:	mov	r2, #4
   199a4:	bl	4ef0 <readstat_write_bytes@plt>
   199a8:	cmp	r0, #0
   199ac:	bne	19a68 <sav_emit_long_string_value_labels_record+0x354>
   199b0:	ldr	r1, [r5, #16]
   199b4:	mov	r0, r4
   199b8:	mov	r2, r6
   199bc:	bl	4ef0 <readstat_write_bytes@plt>
   199c0:	cmp	r0, #0
   199c4:	bne	19a68 <sav_emit_long_string_value_labels_record+0x354>
   199c8:	ldr	r0, [sp, #20]
   199cc:	cmp	r0, r6
   199d0:	ble	199ec <sav_emit_long_string_value_labels_record+0x2d8>
   199d4:	sub	r2, r0, r6
   199d8:	mov	r0, r4
   199dc:	ldr	r1, [sp, #12]
   199e0:	bl	4ef0 <readstat_write_bytes@plt>
   199e4:	cmp	r0, #0
   199e8:	bne	19a68 <sav_emit_long_string_value_labels_record+0x354>
   199ec:	mov	r0, r4
   199f0:	add	r1, sp, #16
   199f4:	mov	r2, #4
   199f8:	bl	4ef0 <readstat_write_bytes@plt>
   199fc:	cmp	r0, #0
   19a00:	bne	19a68 <sav_emit_long_string_value_labels_record+0x354>
   19a04:	ldr	r1, [r5, #24]
   19a08:	ldr	r2, [sp, #16]
   19a0c:	mov	r0, r4
   19a10:	bl	4ef0 <readstat_write_bytes@plt>
   19a14:	cmp	r0, #0
   19a18:	bne	19a68 <sav_emit_long_string_value_labels_record+0x354>
   19a1c:	add	r7, r7, #1
   19a20:	ldr	r0, [sp, #28]
   19a24:	cmp	r7, r0
   19a28:	blt	19974 <sav_emit_long_string_value_labels_record+0x260>
   19a2c:	ldr	r7, [sp, #12]
   19a30:	add	sl, sp, #24
   19a34:	add	r8, r8, #1
   19a38:	ldr	r0, [sp, #4]
   19a3c:	cmp	r8, r0
   19a40:	blt	198b0 <sav_emit_long_string_value_labels_record+0x19c>
   19a44:	ldr	r5, [sp]
   19a48:	add	r5, r5, #1
   19a4c:	ldr	r0, [r4, #40]	; 0x28
   19a50:	cmp	r5, r0
   19a54:	blt	19874 <sav_emit_long_string_value_labels_record+0x160>
   19a58:	mov	sl, #0
   19a5c:	cmp	r7, #0
   19a60:	bne	19a78 <sav_emit_long_string_value_labels_record+0x364>
   19a64:	b	1984c <sav_emit_long_string_value_labels_record+0x138>
   19a68:	mov	sl, r0
   19a6c:	ldr	r7, [sp, #12]
   19a70:	cmp	r7, #0
   19a74:	beq	1984c <sav_emit_long_string_value_labels_record+0x138>
   19a78:	mov	r0, r7
   19a7c:	bl	4938 <free@plt>
   19a80:	b	1984c <sav_emit_long_string_value_labels_record+0x138>
   19a84:	mov	sl, r0
   19a88:	cmp	r7, #0
   19a8c:	bne	19a78 <sav_emit_long_string_value_labels_record+0x364>
   19a90:	b	1984c <sav_emit_long_string_value_labels_record+0x138>
   19a94:	.word	0x0000d578

00019a98 <sav_emit_long_string_missing_values_record>:
   19a98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19a9c:	add	fp, sp, #28
   19aa0:	sub	sp, sp, #76	; 0x4c
   19aa4:	mov	r5, r0
   19aa8:	ldr	r0, [pc, #920]	; 19e48 <sav_emit_long_string_missing_values_record+0x3b0>
   19aac:	add	r0, pc, r0
   19ab0:	vld1.64	{d16-d17}, [r0]
   19ab4:	sub	r0, fp, #48	; 0x30
   19ab8:	vst1.64	{d16-d17}, [r0]
   19abc:	ldr	r0, [r5, #28]
   19ac0:	str	r0, [sp, #4]
   19ac4:	cmp	r0, #1
   19ac8:	str	r5, [sp]
   19acc:	blt	19bdc <sav_emit_long_string_missing_values_record+0x144>
   19ad0:	add	r0, sp, #24
   19ad4:	add	r8, r0, #8
   19ad8:	add	r0, sp, #40	; 0x28
   19adc:	add	r9, r0, #8
   19ae0:	mov	r7, #0
   19ae4:	mov	r0, r5
   19ae8:	mov	r1, r7
   19aec:	bl	4e18 <readstat_get_variable@plt>
   19af0:	mov	r4, r0
   19af4:	add	r0, r0, #8
   19af8:	bl	4c8c <strlen@plt>
   19afc:	str	r0, [sp, #8]
   19b00:	mov	r0, r4
   19b04:	bl	4d58 <readstat_variable_get_storage_width@plt>
   19b08:	cmp	r0, #9
   19b0c:	blt	19bcc <sav_emit_long_string_missing_values_record+0x134>
   19b10:	mov	r0, r4
   19b14:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   19b18:	cmp	r0, #1
   19b1c:	blt	19bcc <sav_emit_long_string_missing_values_record+0x134>
   19b20:	mov	r5, #0
   19b24:	mov	r6, #0
   19b28:	add	r0, sp, #40	; 0x28
   19b2c:	mov	r1, r4
   19b30:	mov	r2, r5
   19b34:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   19b38:	add	r0, sp, #24
   19b3c:	mov	r1, r4
   19b40:	mov	r2, r5
   19b44:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   19b48:	ldrd	r2, [r9]
   19b4c:	ldr	r0, [sp, #40]	; 0x28
   19b50:	ldr	r1, [sp, #44]	; 0x2c
   19b54:	bl	4a1c <readstat_string_value@plt>
   19b58:	mov	sl, r0
   19b5c:	ldrd	r2, [r8]
   19b60:	ldr	r0, [sp, #24]
   19b64:	ldr	r1, [sp, #28]
   19b68:	bl	4a1c <readstat_string_value@plt>
   19b6c:	cmp	sl, #0
   19b70:	movne	r1, r0
   19b74:	cmpne	r0, #0
   19b78:	beq	19b8c <sav_emit_long_string_missing_values_record+0xf4>
   19b7c:	mov	r0, sl
   19b80:	bl	4878 <strcmp@plt>
   19b84:	cmp	r0, #0
   19b88:	addeq	r6, r6, #1
   19b8c:	add	r5, r5, #1
   19b90:	mov	r0, r4
   19b94:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   19b98:	cmp	r5, r0
   19b9c:	blt	19b28 <sav_emit_long_string_missing_values_record+0x90>
   19ba0:	cmp	r6, #0
   19ba4:	ldr	r5, [sp]
   19ba8:	beq	19bcc <sav_emit_long_string_missing_values_record+0x134>
   19bac:	mov	r0, #4
   19bb0:	orr	r0, r0, r6, lsl #3
   19bb4:	ldr	r1, [sp, #8]
   19bb8:	add	r0, r1, r0
   19bbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19bc0:	add	r0, r0, r1
   19bc4:	add	r0, r0, #5
   19bc8:	str	r0, [fp, #-36]	; 0xffffffdc
   19bcc:	add	r7, r7, #1
   19bd0:	ldr	r0, [sp, #4]
   19bd4:	cmp	r7, r0
   19bd8:	bne	19ae4 <sav_emit_long_string_missing_values_record+0x4c>
   19bdc:	mov	r0, #0
   19be0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19be4:	cmp	r1, #0
   19be8:	beq	19c04 <sav_emit_long_string_missing_values_record+0x16c>
   19bec:	sub	r1, fp, #48	; 0x30
   19bf0:	mov	r0, r5
   19bf4:	mov	r2, #16
   19bf8:	bl	4ef0 <readstat_write_bytes@plt>
   19bfc:	cmp	r0, #0
   19c00:	beq	19c0c <sav_emit_long_string_missing_values_record+0x174>
   19c04:	sub	sp, fp, #28
   19c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19c0c:	ldr	r0, [sp, #4]
   19c10:	cmp	r0, #1
   19c14:	mov	r0, #0
   19c18:	blt	19c04 <sav_emit_long_string_missing_values_record+0x16c>
   19c1c:	add	r0, sp, #24
   19c20:	add	r6, r0, #8
   19c24:	add	sl, sp, #40	; 0x28
   19c28:	add	r8, sl, #8
   19c2c:	mov	r7, #0
   19c30:	mov	r0, r5
   19c34:	mov	r1, r7
   19c38:	bl	4e18 <readstat_get_variable@plt>
   19c3c:	mov	r9, r0
   19c40:	add	r4, r0, #8
   19c44:	mov	r0, r4
   19c48:	bl	4c8c <strlen@plt>
   19c4c:	str	r0, [sp, #20]
   19c50:	mov	r0, #0
   19c54:	strb	r0, [sp, #19]
   19c58:	mov	r0, r9
   19c5c:	bl	4d58 <readstat_variable_get_storage_width@plt>
   19c60:	cmp	r0, #9
   19c64:	blt	19e2c <sav_emit_long_string_missing_values_record+0x394>
   19c68:	str	r4, [sp, #8]
   19c6c:	mov	r0, r9
   19c70:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   19c74:	cmp	r0, #1
   19c78:	blt	19d00 <sav_emit_long_string_missing_values_record+0x268>
   19c7c:	mov	r4, #0
   19c80:	mov	r0, sl
   19c84:	mov	r1, r9
   19c88:	mov	r2, r4
   19c8c:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   19c90:	add	r0, sp, #24
   19c94:	mov	r1, r9
   19c98:	mov	r2, r4
   19c9c:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   19ca0:	ldrd	r2, [r8]
   19ca4:	ldr	r0, [sp, #40]	; 0x28
   19ca8:	ldr	r1, [sp, #44]	; 0x2c
   19cac:	bl	4a1c <readstat_string_value@plt>
   19cb0:	mov	r5, r0
   19cb4:	ldrd	r2, [r6]
   19cb8:	ldr	r0, [sp, #24]
   19cbc:	ldr	r1, [sp, #28]
   19cc0:	bl	4a1c <readstat_string_value@plt>
   19cc4:	cmp	r5, #0
   19cc8:	movne	r1, r0
   19ccc:	cmpne	r0, #0
   19cd0:	beq	19cec <sav_emit_long_string_missing_values_record+0x254>
   19cd4:	mov	r0, r5
   19cd8:	bl	4878 <strcmp@plt>
   19cdc:	cmp	r0, #0
   19ce0:	ldrbeq	r0, [sp, #19]
   19ce4:	addeq	r0, r0, #1
   19ce8:	strbeq	r0, [sp, #19]
   19cec:	add	r4, r4, #1
   19cf0:	mov	r0, r9
   19cf4:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   19cf8:	cmp	r4, r0
   19cfc:	blt	19c80 <sav_emit_long_string_missing_values_record+0x1e8>
   19d00:	ldrb	r0, [sp, #19]
   19d04:	cmp	r0, #0
   19d08:	ldr	r5, [sp]
   19d0c:	ldr	r4, [sp, #8]
   19d10:	beq	19e2c <sav_emit_long_string_missing_values_record+0x394>
   19d14:	mov	r0, r5
   19d18:	add	r1, sp, #20
   19d1c:	mov	r2, #4
   19d20:	bl	4ef0 <readstat_write_bytes@plt>
   19d24:	cmp	r0, #0
   19d28:	bne	19c04 <sav_emit_long_string_missing_values_record+0x16c>
   19d2c:	ldr	r2, [sp, #20]
   19d30:	mov	r0, r5
   19d34:	mov	r1, r4
   19d38:	bl	4ef0 <readstat_write_bytes@plt>
   19d3c:	cmp	r0, #0
   19d40:	bne	19c04 <sav_emit_long_string_missing_values_record+0x16c>
   19d44:	mov	r0, r5
   19d48:	add	r1, sp, #19
   19d4c:	mov	r2, #1
   19d50:	bl	4ef0 <readstat_write_bytes@plt>
   19d54:	cmp	r0, #0
   19d58:	bne	19c04 <sav_emit_long_string_missing_values_record+0x16c>
   19d5c:	mov	r0, #8
   19d60:	str	r0, [sp, #12]
   19d64:	mov	r0, r5
   19d68:	add	r1, sp, #12
   19d6c:	mov	r2, #4
   19d70:	bl	4ef0 <readstat_write_bytes@plt>
   19d74:	cmp	r0, #0
   19d78:	bne	19c04 <sav_emit_long_string_missing_values_record+0x16c>
   19d7c:	mov	r0, r9
   19d80:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   19d84:	cmp	r0, #1
   19d88:	blt	19e28 <sav_emit_long_string_missing_values_record+0x390>
   19d8c:	mov	r4, #0
   19d90:	mov	r0, sl
   19d94:	mov	r1, r9
   19d98:	mov	r2, r4
   19d9c:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   19da0:	add	r0, sp, #24
   19da4:	mov	r1, r9
   19da8:	mov	r2, r4
   19dac:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   19db0:	ldrd	r2, [r8]
   19db4:	ldr	r0, [sp, #40]	; 0x28
   19db8:	ldr	r1, [sp, #44]	; 0x2c
   19dbc:	bl	4a1c <readstat_string_value@plt>
   19dc0:	mov	r5, r0
   19dc4:	ldrd	r2, [r6]
   19dc8:	ldr	r0, [sp, #24]
   19dcc:	ldr	r1, [sp, #28]
   19dd0:	bl	4a1c <readstat_string_value@plt>
   19dd4:	cmp	r5, #0
   19dd8:	movne	r1, r0
   19ddc:	cmpne	r0, #0
   19de0:	bne	19dfc <sav_emit_long_string_missing_values_record+0x364>
   19de4:	add	r4, r4, #1
   19de8:	mov	r0, r9
   19dec:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   19df0:	cmp	r4, r0
   19df4:	blt	19d90 <sav_emit_long_string_missing_values_record+0x2f8>
   19df8:	b	19e28 <sav_emit_long_string_missing_values_record+0x390>
   19dfc:	mov	r0, r5
   19e00:	bl	4878 <strcmp@plt>
   19e04:	cmp	r0, #0
   19e08:	bne	19de4 <sav_emit_long_string_missing_values_record+0x34c>
   19e0c:	ldr	r2, [sp, #12]
   19e10:	ldr	r0, [sp]
   19e14:	mov	r1, r5
   19e18:	bl	4fec <readstat_write_space_padded_string@plt>
   19e1c:	cmp	r0, #0
   19e20:	beq	19de4 <sav_emit_long_string_missing_values_record+0x34c>
   19e24:	b	19c04 <sav_emit_long_string_missing_values_record+0x16c>
   19e28:	ldr	r5, [sp]
   19e2c:	add	r7, r7, #1
   19e30:	ldr	r0, [sp, #4]
   19e34:	cmp	r7, r0
   19e38:	blt	19c30 <sav_emit_long_string_missing_values_record+0x198>
   19e3c:	mov	r0, #0
   19e40:	sub	sp, fp, #28
   19e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e48:	.word	0x0000d204

00019e4c <sav_emit_number_of_cases_record>:
   19e4c:	push	{r4, sl, fp, lr}
   19e50:	add	fp, sp, #8
   19e54:	sub	sp, sp, #32
   19e58:	mov	r4, r0
   19e5c:	ldr	r0, [pc, #120]	; 19edc <sav_emit_number_of_cases_record+0x90>
   19e60:	add	r0, pc, r0
   19e64:	vld1.64	{d16-d17}, [r0]
   19e68:	add	r1, sp, #16
   19e6c:	vst1.64	{d16-d17}, [r1]
   19e70:	mov	r0, #0
   19e74:	str	r0, [sp, #12]
   19e78:	mov	r0, #1
   19e7c:	str	r0, [sp, #8]
   19e80:	ldr	r0, [r4, #80]	; 0x50
   19e84:	str	r0, [sp]
   19e88:	asr	r0, r0, #31
   19e8c:	str	r0, [sp, #4]
   19e90:	mov	r0, r4
   19e94:	mov	r2, #16
   19e98:	bl	4ef0 <readstat_write_bytes@plt>
   19e9c:	cmp	r0, #0
   19ea0:	bne	19ebc <sav_emit_number_of_cases_record+0x70>
   19ea4:	add	r1, sp, #8
   19ea8:	mov	r0, r4
   19eac:	mov	r2, #8
   19eb0:	bl	4ef0 <readstat_write_bytes@plt>
   19eb4:	cmp	r0, #0
   19eb8:	beq	19ec4 <sav_emit_number_of_cases_record+0x78>
   19ebc:	sub	sp, fp, #8
   19ec0:	pop	{r4, sl, fp, pc}
   19ec4:	mov	r1, sp
   19ec8:	mov	r0, r4
   19ecc:	mov	r2, #8
   19ed0:	bl	4ef0 <readstat_write_bytes@plt>
   19ed4:	sub	sp, fp, #8
   19ed8:	pop	{r4, sl, fp, pc}
   19edc:	.word	0x0000ce60

00019ee0 <sav_emit_termination_record>:
   19ee0:	push	{fp, lr}
   19ee4:	mov	fp, sp
   19ee8:	sub	sp, sp, #8
   19eec:	mov	r1, #0
   19ef0:	str	r1, [sp, #4]
   19ef4:	movw	r1, #999	; 0x3e7
   19ef8:	str	r1, [sp]
   19efc:	mov	r1, sp
   19f00:	mov	r2, #8
   19f04:	bl	4ef0 <readstat_write_bytes@plt>
   19f08:	mov	sp, fp
   19f0c:	pop	{fp, pc}

00019f10 <sav_emit_full_variable_record>:
   19f10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19f14:	add	fp, sp, #24
   19f18:	sub	sp, sp, #8
   19f1c:	mov	r9, r2
   19f20:	mov	r5, r1
   19f24:	mov	r6, r0
   19f28:	bl	19fb0 <sav_emit_base_variable_record>
   19f2c:	cmp	r0, #0
   19f30:	beq	19f3c <sav_emit_full_variable_record+0x2c>
   19f34:	sub	sp, fp, #24
   19f38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19f3c:	ldr	r1, [r5, #1600]	; 0x640
   19f40:	ldr	r0, [r5]
   19f44:	bl	18504 <sav_variable_segments>
   19f48:	cmp	r0, #2
   19f4c:	blt	19fa4 <sav_emit_full_variable_record+0x94>
   19f50:	mov	r7, r0
   19f54:	sub	r0, r0, r0, lsl #6
   19f58:	mov	r1, #252	; 0xfc
   19f5c:	add	r8, r1, r0, lsl #2
   19f60:	mov	r4, #2
   19f64:	sub	r3, r4, #1
   19f68:	mov	r0, #255	; 0xff
   19f6c:	cmp	r7, r4
   19f70:	ldreq	r0, [r5, #1600]	; 0x640
   19f74:	addeq	r0, r0, r8
   19f78:	str	r0, [sp]
   19f7c:	mov	r0, r6
   19f80:	mov	r1, r5
   19f84:	mov	r2, r9
   19f88:	bl	1a0f8 <sav_emit_ghost_variable_record>
   19f8c:	cmp	r0, #0
   19f90:	bne	19f34 <sav_emit_full_variable_record+0x24>
   19f94:	add	r0, r4, #1
   19f98:	cmp	r4, r7
   19f9c:	mov	r4, r0
   19fa0:	blt	19f64 <sav_emit_full_variable_record+0x54>
   19fa4:	mov	r0, #0
   19fa8:	sub	sp, fp, #24
   19fac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00019fb0 <sav_emit_base_variable_record>:
   19fb0:	push	{r4, r5, r6, r7, fp, lr}
   19fb4:	add	fp, sp, #16
   19fb8:	sub	sp, sp, #48	; 0x30
   19fbc:	mov	r5, r1
   19fc0:	mov	r4, r0
   19fc4:	mov	r0, #2
   19fc8:	str	r0, [fp, #-20]	; 0xffffffec
   19fcc:	add	r0, sp, #32
   19fd0:	mov	r1, r2
   19fd4:	bl	1a1f0 <sav_format_variable_name>
   19fd8:	mov	r6, r0
   19fdc:	sub	r1, fp, #20
   19fe0:	mov	r0, r4
   19fe4:	mov	r2, #4
   19fe8:	bl	4ef0 <readstat_write_bytes@plt>
   19fec:	cmp	r0, #0
   19ff0:	bne	1a0f0 <sav_emit_base_variable_record+0x140>
   19ff4:	vmov.i32	q8, #0	; 0x00000000
   19ff8:	mov	r0, #12
   19ffc:	mov	r7, sp
   1a000:	mov	r1, r7
   1a004:	vst1.64	{d16-d17}, [r1], r0
   1a008:	vst1.32	{d16-d17}, [r1]
   1a00c:	ldr	r0, [r5]
   1a010:	cmp	r0, #0
   1a014:	bne	1a028 <sav_emit_base_variable_record+0x78>
   1a018:	ldr	r0, [r5, #1600]	; 0x640
   1a01c:	cmp	r0, #255	; 0xff
   1a020:	movcs	r0, #255	; 0xff
   1a024:	str	r0, [sp]
   1a028:	ldrb	r0, [r5, #564]	; 0x234
   1a02c:	cmp	r0, #0
   1a030:	movwne	r0, #1
   1a034:	str	r0, [sp, #4]
   1a038:	add	r0, r7, #8
   1a03c:	mov	r1, r5
   1a040:	bl	1a220 <sav_n_missing_values>
   1a044:	cmp	r0, #0
   1a048:	bne	1a0f0 <sav_emit_base_variable_record+0x140>
   1a04c:	add	r1, r7, #12
   1a050:	mov	r0, r5
   1a054:	bl	1a294 <sav_encode_base_variable_format>
   1a058:	cmp	r0, #0
   1a05c:	bne	1a0f0 <sav_emit_base_variable_record+0x140>
   1a060:	movw	r0, #8224	; 0x2020
   1a064:	movt	r0, #8224	; 0x2020
   1a068:	str	r0, [sp, #24]
   1a06c:	str	r0, [sp, #20]
   1a070:	ldr	r0, [sp, #12]
   1a074:	str	r0, [sp, #16]
   1a078:	sub	r0, r6, #1
   1a07c:	cmp	r0, #7
   1a080:	bhi	1a094 <sav_emit_base_variable_record+0xe4>
   1a084:	add	r0, r7, #20
   1a088:	add	r1, sp, #32
   1a08c:	mov	r2, r6
   1a090:	bl	4998 <memcpy@plt>
   1a094:	mov	r1, sp
   1a098:	mov	r0, r4
   1a09c:	mov	r2, #28
   1a0a0:	bl	4ef0 <readstat_write_bytes@plt>
   1a0a4:	cmp	r0, #0
   1a0a8:	bne	1a0f0 <sav_emit_base_variable_record+0x140>
   1a0ac:	mov	r0, r4
   1a0b0:	mov	r1, r5
   1a0b4:	bl	1a2d8 <sav_emit_variable_label>
   1a0b8:	cmp	r0, #0
   1a0bc:	bne	1a0f0 <sav_emit_base_variable_record+0x140>
   1a0c0:	mov	r0, r4
   1a0c4:	mov	r1, r5
   1a0c8:	bl	1a36c <sav_emit_variable_missing_values>
   1a0cc:	cmp	r0, #0
   1a0d0:	bne	1a0f0 <sav_emit_base_variable_record+0x140>
   1a0d4:	ldr	r0, [r5, #1596]	; 0x63c
   1a0d8:	mvn	r1, #0
   1a0dc:	add	r1, r1, r0, lsr #3
   1a0e0:	cmp	r1, #31
   1a0e4:	movge	r1, #31
   1a0e8:	mov	r0, r4
   1a0ec:	bl	1a3bc <sav_emit_blank_variable_records>
   1a0f0:	sub	sp, fp, #16
   1a0f4:	pop	{r4, r5, r6, r7, fp, pc}

0001a0f8 <sav_emit_ghost_variable_record>:
   1a0f8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1a0fc:	add	fp, sp, #24
   1a100:	sub	sp, sp, #48	; 0x30
   1a104:	mov	r7, r1
   1a108:	mov	r4, r0
   1a10c:	mov	r0, #2
   1a110:	str	r0, [fp, #-28]	; 0xffffffe4
   1a114:	vmov.i32	q8, #0	; 0x00000000
   1a118:	mov	r0, #12
   1a11c:	add	r5, sp, #16
   1a120:	mov	r1, r5
   1a124:	vst1.64	{d16-d17}, [r1], r0
   1a128:	vst1.32	{d16-d17}, [r1]
   1a12c:	mov	r0, sp
   1a130:	mov	r1, r2
   1a134:	mov	r2, r3
   1a138:	bl	1a9c4 <sav_format_ghost_variable_name>
   1a13c:	mov	r6, r0
   1a140:	sub	r1, fp, #28
   1a144:	mov	r0, r4
   1a148:	mov	r2, #4
   1a14c:	bl	4ef0 <readstat_write_bytes@plt>
   1a150:	cmp	r0, #0
   1a154:	bne	1a1c4 <sav_emit_ghost_variable_record+0xcc>
   1a158:	ldr	r8, [fp, #8]
   1a15c:	str	r8, [sp, #16]
   1a160:	add	r2, r5, #12
   1a164:	mov	r0, r7
   1a168:	mov	r1, r8
   1a16c:	bl	1aa28 <sav_encode_ghost_variable_format>
   1a170:	cmp	r0, #0
   1a174:	bne	1a1c4 <sav_emit_ghost_variable_record+0xcc>
   1a178:	movw	r0, #8224	; 0x2020
   1a17c:	movt	r0, #8224	; 0x2020
   1a180:	str	r0, [sp, #40]	; 0x28
   1a184:	str	r0, [sp, #36]	; 0x24
   1a188:	ldr	r0, [sp, #28]
   1a18c:	str	r0, [sp, #32]
   1a190:	sub	r0, r6, #1
   1a194:	cmp	r0, #7
   1a198:	bhi	1a1ac <sav_emit_ghost_variable_record+0xb4>
   1a19c:	add	r0, r5, #20
   1a1a0:	mov	r1, sp
   1a1a4:	mov	r2, r6
   1a1a8:	bl	4998 <memcpy@plt>
   1a1ac:	add	r1, sp, #16
   1a1b0:	mov	r0, r4
   1a1b4:	mov	r2, #28
   1a1b8:	bl	4ef0 <readstat_write_bytes@plt>
   1a1bc:	cmp	r0, #0
   1a1c0:	beq	1a1cc <sav_emit_ghost_variable_record+0xd4>
   1a1c4:	sub	sp, fp, #24
   1a1c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1a1cc:	add	r0, r8, #7
   1a1d0:	mvn	r1, #0
   1a1d4:	add	r1, r1, r0, lsr #3
   1a1d8:	cmp	r1, #31
   1a1dc:	movge	r1, #31
   1a1e0:	mov	r0, r4
   1a1e4:	bl	1a3bc <sav_emit_blank_variable_records>
   1a1e8:	sub	sp, fp, #24
   1a1ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001a1f0 <sav_format_variable_name>:
   1a1f0:	push	{r4, sl, fp, lr}
   1a1f4:	add	fp, sp, #8
   1a1f8:	mov	r3, r1
   1a1fc:	mov	r4, r0
   1a200:	ldr	r2, [pc, #20]	; 1a21c <sav_format_variable_name+0x2c>
   1a204:	add	r2, pc, r2
   1a208:	mov	r1, #9
   1a20c:	bl	4d04 <snprintf@plt>
   1a210:	mov	r0, r4
   1a214:	pop	{r4, sl, fp, lr}
   1a218:	b	4c8c <strlen@plt>
   1a21c:	.word	0x0000c5a8

0001a220 <sav_n_missing_values>:
   1a220:	push	{r4, r5, fp, lr}
   1a224:	add	fp, sp, #8
   1a228:	mov	r5, r1
   1a22c:	mov	r4, r0
   1a230:	ldr	r0, [r1]
   1a234:	cmp	r0, #5
   1a238:	bne	1a248 <sav_n_missing_values+0x28>
   1a23c:	mov	r0, r5
   1a240:	bl	1a464 <sav_n_missing_double_values>
   1a244:	b	1a268 <sav_n_missing_values+0x48>
   1a248:	mov	r0, r5
   1a24c:	bl	4d58 <readstat_variable_get_storage_width@plt>
   1a250:	mov	r1, r0
   1a254:	mov	r0, #0
   1a258:	cmp	r1, #8
   1a25c:	bhi	1a280 <sav_n_missing_values+0x60>
   1a260:	mov	r0, r5
   1a264:	bl	1a534 <sav_n_missing_string_values>
   1a268:	cmp	r0, #0
   1a26c:	mov	r2, r0
   1a270:	rsbmi	r2, r0, #0
   1a274:	mov	r1, #31
   1a278:	cmp	r2, #3
   1a27c:	bgt	1a28c <sav_n_missing_values+0x6c>
   1a280:	mov	r1, #0
   1a284:	cmp	r4, #0
   1a288:	strne	r0, [r4]
   1a28c:	mov	r0, r1
   1a290:	pop	{r4, r5, fp, pc}

0001a294 <sav_encode_base_variable_format>:
   1a294:	push	{r4, r5, fp, lr}
   1a298:	add	fp, sp, #8
   1a29c:	sub	sp, sp, #16
   1a2a0:	mov	r4, r1
   1a2a4:	add	r1, sp, #4
   1a2a8:	bl	4b78 <spss_format_for_variable@plt>
   1a2ac:	mov	r5, r0
   1a2b0:	cmp	r4, #0
   1a2b4:	beq	1a2cc <sav_encode_base_variable_format+0x38>
   1a2b8:	cmp	r5, #0
   1a2bc:	bne	1a2cc <sav_encode_base_variable_format+0x38>
   1a2c0:	add	r0, sp, #4
   1a2c4:	bl	1a608 <sav_encode_format>
   1a2c8:	str	r0, [r4]
   1a2cc:	mov	r0, r5
   1a2d0:	sub	sp, fp, #8
   1a2d4:	pop	{r4, r5, fp, pc}

0001a2d8 <sav_emit_variable_label>:
   1a2d8:	push	{r4, r5, r6, sl, fp, lr}
   1a2dc:	add	fp, sp, #16
   1a2e0:	sub	sp, sp, #264	; 0x108
   1a2e4:	mov	r4, r0
   1a2e8:	add	r5, r1, #564	; 0x234
   1a2ec:	mov	r0, r5
   1a2f0:	bl	4c8c <strlen@plt>
   1a2f4:	cmp	r0, #0
   1a2f8:	moveq	r0, #0
   1a2fc:	subeq	sp, fp, #16
   1a300:	popeq	{r4, r5, r6, sl, fp, pc}
   1a304:	cmp	r0, #256	; 0x100
   1a308:	movcs	r0, #256	; 0x100
   1a30c:	str	r0, [sp, #4]
   1a310:	add	r1, sp, #4
   1a314:	mov	r0, r4
   1a318:	mov	r2, #4
   1a31c:	bl	4ef0 <readstat_write_bytes@plt>
   1a320:	cmp	r0, #0
   1a324:	beq	1a330 <sav_emit_variable_label+0x58>
   1a328:	sub	sp, fp, #16
   1a32c:	pop	{r4, r5, r6, sl, fp, pc}
   1a330:	ldr	r0, [sp, #4]
   1a334:	add	r0, r0, #3
   1a338:	bic	r2, r0, #3
   1a33c:	add	r6, sp, #8
   1a340:	mov	r0, r6
   1a344:	mov	r1, r5
   1a348:	bl	4d4c <strncpy@plt>
   1a34c:	ldr	r0, [sp, #4]
   1a350:	add	r0, r0, #3
   1a354:	bic	r2, r0, #3
   1a358:	mov	r0, r4
   1a35c:	mov	r1, r6
   1a360:	bl	4ef0 <readstat_write_bytes@plt>
   1a364:	sub	sp, fp, #16
   1a368:	pop	{r4, r5, r6, sl, fp, pc}

0001a36c <sav_emit_variable_missing_values>:
   1a36c:	push	{r4, r5, fp, lr}
   1a370:	add	fp, sp, #8
   1a374:	mov	r4, r1
   1a378:	mov	r5, r0
   1a37c:	ldr	r0, [r1]
   1a380:	cmp	r0, #5
   1a384:	bne	1a398 <sav_emit_variable_missing_values+0x2c>
   1a388:	mov	r0, r5
   1a38c:	mov	r1, r4
   1a390:	pop	{r4, r5, fp, lr}
   1a394:	b	1a62c <sav_emit_variable_missing_double_values>
   1a398:	mov	r0, r4
   1a39c:	bl	4d58 <readstat_variable_get_storage_width@plt>
   1a3a0:	cmp	r0, #8
   1a3a4:	movhi	r0, #0
   1a3a8:	pophi	{r4, r5, fp, pc}
   1a3ac:	mov	r0, r5
   1a3b0:	mov	r1, r4
   1a3b4:	pop	{r4, r5, fp, lr}
   1a3b8:	b	1a818 <sav_emit_variable_missing_string_values>

0001a3bc <sav_emit_blank_variable_records>:
   1a3bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a3c0:	add	fp, sp, #28
   1a3c4:	sub	sp, sp, #36	; 0x24
   1a3c8:	mov	r4, r0
   1a3cc:	mov	r0, #2
   1a3d0:	str	r0, [sp, #32]
   1a3d4:	mvn	r7, r1
   1a3d8:	add	r0, sp, #4
   1a3dc:	add	r6, r0, #4
   1a3e0:	add	r5, r0, #20
   1a3e4:	movw	sl, #7425	; 0x1d01
   1a3e8:	movt	sl, #1
   1a3ec:	mov	r8, #0
   1a3f0:	movw	r9, #8224	; 0x2020
   1a3f4:	movt	r9, #8224	; 0x2020
   1a3f8:	adds	r7, r7, #1
   1a3fc:	beq	1a458 <sav_emit_blank_variable_records+0x9c>
   1a400:	mov	r0, r4
   1a404:	add	r1, sp, #32
   1a408:	mov	r2, #4
   1a40c:	bl	4ef0 <readstat_write_bytes@plt>
   1a410:	cmp	r0, #0
   1a414:	bne	1a450 <sav_emit_blank_variable_records+0x94>
   1a418:	str	r8, [r6]
   1a41c:	str	r8, [r6, #4]
   1a420:	str	r9, [r5]
   1a424:	str	r9, [r5, #4]
   1a428:	str	sl, [sp, #20]
   1a42c:	mvn	r0, #0
   1a430:	str	r0, [sp, #4]
   1a434:	str	sl, [sp, #16]
   1a438:	mov	r0, r4
   1a43c:	add	r1, sp, #4
   1a440:	mov	r2, #28
   1a444:	bl	4ef0 <readstat_write_bytes@plt>
   1a448:	cmp	r0, #0
   1a44c:	beq	1a3f8 <sav_emit_blank_variable_records+0x3c>
   1a450:	sub	sp, fp, #28
   1a454:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a458:	mov	r0, #0
   1a45c:	sub	sp, fp, #28
   1a460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a464 <sav_n_missing_double_values>:
   1a464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a468:	add	fp, sp, #28
   1a46c:	sub	sp, sp, #44	; 0x2c
   1a470:	mov	r5, r0
   1a474:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   1a478:	mov	r9, r0
   1a47c:	cmp	r0, #1
   1a480:	blt	1a528 <sav_n_missing_double_values+0xc4>
   1a484:	add	r1, sp, #8
   1a488:	add	r1, r1, #8
   1a48c:	str	r1, [sp, #4]
   1a490:	add	r1, sp, #24
   1a494:	add	r1, r1, #8
   1a498:	str	r1, [sp]
   1a49c:	mov	r6, #0
   1a4a0:	mov	r8, #0
   1a4a4:	mov	sl, r9
   1a4a8:	add	r0, sp, #24
   1a4ac:	mov	r1, r5
   1a4b0:	mov	r2, r6
   1a4b4:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1a4b8:	add	r0, sp, #8
   1a4bc:	mov	r1, r5
   1a4c0:	mov	r2, r6
   1a4c4:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1a4c8:	ldr	r0, [sp]
   1a4cc:	ldrd	r2, [r0]
   1a4d0:	ldr	r0, [sp, #24]
   1a4d4:	ldr	r1, [sp, #28]
   1a4d8:	bl	4d40 <spss_64bit_value@plt>
   1a4dc:	mov	r7, r0
   1a4e0:	mov	r4, r1
   1a4e4:	ldr	r0, [sp, #4]
   1a4e8:	ldrd	r2, [r0]
   1a4ec:	ldr	r0, [sp, #8]
   1a4f0:	ldr	r1, [sp, #12]
   1a4f4:	bl	4d40 <spss_64bit_value@plt>
   1a4f8:	eor	r1, r4, r1
   1a4fc:	eor	r0, r7, r0
   1a500:	orrs	r0, r0, r1
   1a504:	movne	r8, #1
   1a508:	movwne	r0, #1
   1a50c:	add	sl, sl, r0
   1a510:	add	r6, r6, #1
   1a514:	cmp	r9, r6
   1a518:	bne	1a4a8 <sav_n_missing_double_values+0x44>
   1a51c:	cmp	r8, #0
   1a520:	moveq	r9, sl
   1a524:	rsbne	r9, sl, #0
   1a528:	mov	r0, r9
   1a52c:	sub	sp, fp, #28
   1a530:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a534 <sav_n_missing_string_values>:
   1a534:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a538:	add	fp, sp, #28
   1a53c:	sub	sp, sp, #44	; 0x2c
   1a540:	mov	r5, r0
   1a544:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   1a548:	mov	sl, r0
   1a54c:	cmp	r0, #1
   1a550:	blt	1a5fc <sav_n_missing_string_values+0xc8>
   1a554:	add	r0, sp, #8
   1a558:	add	r0, r0, #8
   1a55c:	str	r0, [sp, #4]
   1a560:	add	r0, sp, #24
   1a564:	add	r8, r0, #8
   1a568:	mov	r9, #0
   1a56c:	mov	r4, sl
   1a570:	mov	r6, #0
   1a574:	add	r0, sp, #24
   1a578:	mov	r1, r5
   1a57c:	mov	r2, r6
   1a580:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1a584:	add	r0, sp, #8
   1a588:	mov	r1, r5
   1a58c:	mov	r2, r6
   1a590:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1a594:	ldrd	r2, [r8]
   1a598:	ldr	r0, [sp, #24]
   1a59c:	ldr	r1, [sp, #28]
   1a5a0:	bl	4a1c <readstat_string_value@plt>
   1a5a4:	mov	r7, r0
   1a5a8:	ldr	r0, [sp, #4]
   1a5ac:	ldrd	r2, [r0]
   1a5b0:	ldr	r0, [sp, #8]
   1a5b4:	ldr	r1, [sp, #12]
   1a5b8:	bl	4a1c <readstat_string_value@plt>
   1a5bc:	cmp	r7, #0
   1a5c0:	movne	r1, r0
   1a5c4:	cmpne	r0, #0
   1a5c8:	beq	1a5e4 <sav_n_missing_string_values+0xb0>
   1a5cc:	mov	r0, r7
   1a5d0:	bl	4878 <strcmp@plt>
   1a5d4:	cmp	r0, #0
   1a5d8:	movne	r9, #1
   1a5dc:	movwne	r0, #1
   1a5e0:	add	r4, r4, r0
   1a5e4:	add	r6, r6, #1
   1a5e8:	cmp	sl, r6
   1a5ec:	bne	1a574 <sav_n_missing_string_values+0x40>
   1a5f0:	cmp	r9, #0
   1a5f4:	moveq	sl, r4
   1a5f8:	rsbne	sl, r4, #0
   1a5fc:	mov	r0, sl
   1a600:	sub	sp, fp, #28
   1a604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a608 <sav_encode_format>:
   1a608:	ldm	r0, {r1, r2}
   1a60c:	ldr	r0, [r0, #8]
   1a610:	lsl	r3, r2, #8
   1a614:	uxth	r3, r3
   1a618:	cmp	r2, #255	; 0xff
   1a61c:	movwgt	r3, #65280	; 0xff00
   1a620:	orr	r0, r0, r1, lsl #16
   1a624:	orr	r0, r0, r3
   1a628:	bx	lr

0001a62c <sav_emit_variable_missing_double_values>:
   1a62c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a630:	add	fp, sp, #28
   1a634:	sub	sp, sp, #60	; 0x3c
   1a638:	mov	r4, r1
   1a63c:	mov	r9, r0
   1a640:	mov	r0, r1
   1a644:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   1a648:	cmp	r0, #1
   1a64c:	blt	1a78c <sav_emit_variable_missing_double_values+0x160>
   1a650:	mov	r6, r0
   1a654:	add	r0, sp, #24
   1a658:	add	r0, r0, #8
   1a65c:	str	r0, [sp, #4]
   1a660:	add	r0, sp, #40	; 0x28
   1a664:	add	sl, r0, #8
   1a668:	mov	r7, #0
   1a66c:	add	r0, sp, #40	; 0x28
   1a670:	mov	r1, r4
   1a674:	mov	r2, r7
   1a678:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1a67c:	add	r0, sp, #24
   1a680:	mov	r1, r4
   1a684:	mov	r2, r7
   1a688:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1a68c:	ldrd	r2, [sl]
   1a690:	ldr	r0, [sp, #40]	; 0x28
   1a694:	ldr	r1, [sp, #44]	; 0x2c
   1a698:	bl	4d40 <spss_64bit_value@plt>
   1a69c:	mov	r5, r0
   1a6a0:	mov	r8, r1
   1a6a4:	ldr	r0, [sp, #4]
   1a6a8:	ldrd	r2, [r0]
   1a6ac:	ldr	r0, [sp, #24]
   1a6b0:	ldr	r1, [sp, #28]
   1a6b4:	bl	4d40 <spss_64bit_value@plt>
   1a6b8:	eor	r1, r8, r1
   1a6bc:	eor	r0, r5, r0
   1a6c0:	orrs	r0, r0, r1
   1a6c4:	bne	1a798 <sav_emit_variable_missing_double_values+0x16c>
   1a6c8:	add	r7, r7, #1
   1a6cc:	cmp	r7, r6
   1a6d0:	blt	1a66c <sav_emit_variable_missing_double_values+0x40>
   1a6d4:	str	r9, [sp]
   1a6d8:	mov	r9, #0
   1a6dc:	cmp	r6, #1
   1a6e0:	blt	1a78c <sav_emit_variable_missing_double_values+0x160>
   1a6e4:	mov	r7, #0
   1a6e8:	add	r0, sp, #40	; 0x28
   1a6ec:	mov	r1, r4
   1a6f0:	mov	r2, r7
   1a6f4:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1a6f8:	add	r0, sp, #24
   1a6fc:	mov	r1, r4
   1a700:	mov	r2, r7
   1a704:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1a708:	ldrd	r2, [sl]
   1a70c:	ldr	r0, [sp, #40]	; 0x28
   1a710:	ldr	r1, [sp, #44]	; 0x2c
   1a714:	bl	4d40 <spss_64bit_value@plt>
   1a718:	mov	r5, r0
   1a71c:	mov	r8, r1
   1a720:	ldr	r0, [sp, #4]
   1a724:	ldrd	r2, [r0]
   1a728:	ldr	r0, [sp, #24]
   1a72c:	ldr	r1, [sp, #28]
   1a730:	bl	4d40 <spss_64bit_value@plt>
   1a734:	eor	r1, r8, r1
   1a738:	eor	r0, r5, r0
   1a73c:	orrs	r0, r0, r1
   1a740:	bne	1a780 <sav_emit_variable_missing_double_values+0x154>
   1a744:	ldrd	r2, [sl]
   1a748:	ldr	r0, [sp, #40]	; 0x28
   1a74c:	ldr	r1, [sp, #44]	; 0x2c
   1a750:	bl	4d40 <spss_64bit_value@plt>
   1a754:	str	r1, [sp, #20]
   1a758:	str	r0, [sp, #16]
   1a75c:	ldr	r0, [sp]
   1a760:	add	r1, sp, #16
   1a764:	mov	r2, #8
   1a768:	bl	4ef0 <readstat_write_bytes@plt>
   1a76c:	cmp	r0, #0
   1a770:	bne	1a7fc <sav_emit_variable_missing_double_values+0x1d0>
   1a774:	add	r9, r9, #1
   1a778:	cmp	r9, #3
   1a77c:	beq	1a7fc <sav_emit_variable_missing_double_values+0x1d0>
   1a780:	add	r7, r7, #1
   1a784:	cmp	r7, r6
   1a788:	blt	1a6e8 <sav_emit_variable_missing_double_values+0xbc>
   1a78c:	mov	r0, #0
   1a790:	sub	sp, fp, #28
   1a794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a798:	ldrd	r2, [sl]
   1a79c:	ldr	r0, [sp, #40]	; 0x28
   1a7a0:	ldr	r1, [sp, #44]	; 0x2c
   1a7a4:	bl	4d40 <spss_64bit_value@plt>
   1a7a8:	str	r1, [sp, #20]
   1a7ac:	str	r0, [sp, #16]
   1a7b0:	add	r1, sp, #16
   1a7b4:	mov	r0, r9
   1a7b8:	mov	r2, #8
   1a7bc:	bl	4ef0 <readstat_write_bytes@plt>
   1a7c0:	cmp	r0, #0
   1a7c4:	bne	1a7fc <sav_emit_variable_missing_double_values+0x1d0>
   1a7c8:	ldr	r0, [sp, #4]
   1a7cc:	ldrd	r2, [r0]
   1a7d0:	ldr	r0, [sp, #24]
   1a7d4:	ldr	r1, [sp, #28]
   1a7d8:	bl	4d40 <spss_64bit_value@plt>
   1a7dc:	str	r1, [sp, #12]
   1a7e0:	str	r0, [sp, #8]
   1a7e4:	add	r1, sp, #8
   1a7e8:	mov	r0, r9
   1a7ec:	mov	r2, #8
   1a7f0:	bl	4ef0 <readstat_write_bytes@plt>
   1a7f4:	cmp	r0, #0
   1a7f8:	beq	1a804 <sav_emit_variable_missing_double_values+0x1d8>
   1a7fc:	sub	sp, fp, #28
   1a800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a804:	str	r9, [sp]
   1a808:	mov	r9, #2
   1a80c:	cmp	r6, #1
   1a810:	bge	1a6e4 <sav_emit_variable_missing_double_values+0xb8>
   1a814:	b	1a78c <sav_emit_variable_missing_double_values+0x160>

0001a818 <sav_emit_variable_missing_string_values>:
   1a818:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a81c:	add	fp, sp, #28
   1a820:	sub	sp, sp, #44	; 0x2c
   1a824:	mov	r4, r1
   1a828:	mov	r5, r0
   1a82c:	mov	r0, r1
   1a830:	bl	4d94 <readstat_variable_get_missing_ranges_count@plt>
   1a834:	cmp	r0, #1
   1a838:	blt	1a9b8 <sav_emit_variable_missing_string_values+0x1a0>
   1a83c:	mov	r6, r0
   1a840:	str	r5, [sp, #4]
   1a844:	add	r0, sp, #8
   1a848:	add	r9, r0, #8
   1a84c:	add	r0, sp, #24
   1a850:	add	sl, r0, #8
   1a854:	mov	r7, #0
   1a858:	add	r0, sp, #24
   1a85c:	mov	r1, r4
   1a860:	mov	r2, r7
   1a864:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1a868:	add	r0, sp, #8
   1a86c:	mov	r1, r4
   1a870:	mov	r2, r7
   1a874:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1a878:	ldrd	r2, [sl]
   1a87c:	ldr	r0, [sp, #24]
   1a880:	ldr	r1, [sp, #28]
   1a884:	bl	4a1c <readstat_string_value@plt>
   1a888:	mov	r8, r0
   1a88c:	ldrd	r2, [r9]
   1a890:	ldr	r0, [sp, #8]
   1a894:	ldr	r1, [sp, #12]
   1a898:	bl	4a1c <readstat_string_value@plt>
   1a89c:	cmp	r8, #0
   1a8a0:	movne	r5, r0
   1a8a4:	cmpne	r0, #0
   1a8a8:	beq	1a8c0 <sav_emit_variable_missing_string_values+0xa8>
   1a8ac:	mov	r0, r8
   1a8b0:	mov	r1, r5
   1a8b4:	bl	4878 <strcmp@plt>
   1a8b8:	cmp	r0, #0
   1a8bc:	bne	1a978 <sav_emit_variable_missing_string_values+0x160>
   1a8c0:	add	r7, r7, #1
   1a8c4:	cmp	r7, r6
   1a8c8:	blt	1a858 <sav_emit_variable_missing_string_values+0x40>
   1a8cc:	mov	r8, #0
   1a8d0:	cmp	r6, #1
   1a8d4:	blt	1a9b8 <sav_emit_variable_missing_string_values+0x1a0>
   1a8d8:	mov	r7, #0
   1a8dc:	add	r0, sp, #24
   1a8e0:	mov	r1, r4
   1a8e4:	mov	r2, r7
   1a8e8:	bl	49bc <readstat_variable_get_missing_range_lo@plt>
   1a8ec:	add	r0, sp, #8
   1a8f0:	mov	r1, r4
   1a8f4:	mov	r2, r7
   1a8f8:	bl	4dc4 <readstat_variable_get_missing_range_hi@plt>
   1a8fc:	ldrd	r2, [sl]
   1a900:	ldr	r0, [sp, #24]
   1a904:	ldr	r1, [sp, #28]
   1a908:	bl	4a1c <readstat_string_value@plt>
   1a90c:	mov	r5, r0
   1a910:	ldrd	r2, [r9]
   1a914:	ldr	r0, [sp, #8]
   1a918:	ldr	r1, [sp, #12]
   1a91c:	bl	4a1c <readstat_string_value@plt>
   1a920:	cmp	r5, #0
   1a924:	movne	r1, r0
   1a928:	cmpne	r0, #0
   1a92c:	bne	1a940 <sav_emit_variable_missing_string_values+0x128>
   1a930:	add	r7, r7, #1
   1a934:	cmp	r7, r6
   1a938:	blt	1a8dc <sav_emit_variable_missing_string_values+0xc4>
   1a93c:	b	1a9b8 <sav_emit_variable_missing_string_values+0x1a0>
   1a940:	mov	r0, r5
   1a944:	bl	4878 <strcmp@plt>
   1a948:	cmp	r0, #0
   1a94c:	bne	1a930 <sav_emit_variable_missing_string_values+0x118>
   1a950:	ldr	r0, [sp, #4]
   1a954:	mov	r1, r5
   1a958:	mov	r2, #8
   1a95c:	bl	4fec <readstat_write_space_padded_string@plt>
   1a960:	cmp	r0, #0
   1a964:	bne	1a9bc <sav_emit_variable_missing_string_values+0x1a4>
   1a968:	add	r8, r8, #1
   1a96c:	cmp	r8, #3
   1a970:	bne	1a930 <sav_emit_variable_missing_string_values+0x118>
   1a974:	b	1a9bc <sav_emit_variable_missing_string_values+0x1a4>
   1a978:	ldr	r7, [sp, #4]
   1a97c:	mov	r0, r7
   1a980:	mov	r1, r8
   1a984:	mov	r2, #8
   1a988:	bl	4fec <readstat_write_space_padded_string@plt>
   1a98c:	cmp	r0, #0
   1a990:	bne	1a9bc <sav_emit_variable_missing_string_values+0x1a4>
   1a994:	mov	r0, r7
   1a998:	mov	r1, r5
   1a99c:	mov	r2, #8
   1a9a0:	bl	4fec <readstat_write_space_padded_string@plt>
   1a9a4:	cmp	r0, #0
   1a9a8:	bne	1a9bc <sav_emit_variable_missing_string_values+0x1a4>
   1a9ac:	mov	r8, #2
   1a9b0:	cmp	r6, #1
   1a9b4:	bge	1a8d8 <sav_emit_variable_missing_string_values+0xc0>
   1a9b8:	mov	r0, #0
   1a9bc:	sub	sp, fp, #28
   1a9c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001a9c4 <sav_format_ghost_variable_name>:
   1a9c4:	push	{r4, r5, fp, lr}
   1a9c8:	add	fp, sp, #8
   1a9cc:	mov	r4, r2
   1a9d0:	mov	r5, r0
   1a9d4:	add	r3, r1, #9
   1a9d8:	ldr	r2, [pc, #68]	; 1aa24 <sav_format_ghost_variable_name+0x60>
   1a9dc:	add	r2, pc, r2
   1a9e0:	mov	r1, #9
   1a9e4:	bl	4d04 <snprintf@plt>
   1a9e8:	movw	r0, #36409	; 0x8e39
   1a9ec:	movt	r0, #14563	; 0x38e3
   1a9f0:	umull	r0, r1, r4, r0
   1a9f4:	lsr	r0, r1, #3
   1a9f8:	add	r0, r0, r0, lsl #3
   1a9fc:	sub	r0, r4, r0, lsl #2
   1aa00:	mov	r1, #55	; 0x37
   1aa04:	cmp	r0, #10
   1aa08:	movwcc	r1, #48	; 0x30
   1aa0c:	add	r4, r1, r0
   1aa10:	mov	r0, r5
   1aa14:	bl	4c8c <strlen@plt>
   1aa18:	strb	r4, [r5, r0]
   1aa1c:	add	r0, r0, #1
   1aa20:	pop	{r4, r5, fp, pc}
   1aa24:	.word	0x0000bdd0

0001aa28 <sav_encode_ghost_variable_format>:
   1aa28:	push	{r4, r5, r6, sl, fp, lr}
   1aa2c:	add	fp, sp, #16
   1aa30:	sub	sp, sp, #16
   1aa34:	mov	r4, r2
   1aa38:	mov	r6, r1
   1aa3c:	add	r1, sp, #4
   1aa40:	bl	4b78 <spss_format_for_variable@plt>
   1aa44:	mov	r5, r0
   1aa48:	str	r6, [sp, #8]
   1aa4c:	cmp	r4, #0
   1aa50:	beq	1aa68 <sav_encode_ghost_variable_format+0x40>
   1aa54:	cmp	r5, #0
   1aa58:	bne	1aa68 <sav_encode_ghost_variable_format+0x40>
   1aa5c:	add	r0, sp, #4
   1aa60:	bl	1a608 <sav_encode_format>
   1aa64:	str	r0, [r4]
   1aa68:	mov	r0, r5
   1aa6c:	sub	sp, fp, #16
   1aa70:	pop	{r4, r5, r6, sl, fp, pc}

0001aa74 <readstat_label_set_needs_short_value_labels_record>:
   1aa74:	push	{fp, lr}
   1aa78:	mov	fp, sp
   1aa7c:	bl	1aa94 <readstat_label_set_number_short_variables>
   1aa80:	mov	r1, #0
   1aa84:	cmp	r0, #0
   1aa88:	movwgt	r1, #1
   1aa8c:	mov	r0, r1
   1aa90:	pop	{fp, pc}

0001aa94 <readstat_label_set_number_short_variables>:
   1aa94:	push	{r4, r5, r6, sl, fp, lr}
   1aa98:	add	fp, sp, #16
   1aa9c:	mov	r4, r0
   1aaa0:	ldr	r0, [r0, #276]	; 0x114
   1aaa4:	mov	r5, #0
   1aaa8:	cmp	r0, #1
   1aaac:	blt	1aadc <readstat_label_set_number_short_variables+0x48>
   1aab0:	mov	r6, #0
   1aab4:	mov	r0, r4
   1aab8:	mov	r1, r6
   1aabc:	bl	4ee4 <readstat_get_label_set_variable@plt>
   1aac0:	ldr	r0, [r0, #1596]	; 0x63c
   1aac4:	cmp	r0, #9
   1aac8:	addcc	r5, r5, #1
   1aacc:	add	r6, r6, #1
   1aad0:	ldr	r0, [r4, #276]	; 0x114
   1aad4:	cmp	r6, r0
   1aad8:	blt	1aab4 <readstat_label_set_number_short_variables+0x20>
   1aadc:	mov	r0, r5
   1aae0:	pop	{r4, r5, r6, sl, fp, pc}

0001aae4 <readstat_label_set_needs_long_value_labels_record>:
   1aae4:	push	{r4, sl, fp, lr}
   1aae8:	add	fp, sp, #8
   1aaec:	mov	r4, r0
   1aaf0:	bl	1aa94 <readstat_label_set_number_short_variables>
   1aaf4:	ldr	r2, [r4, #276]	; 0x114
   1aaf8:	mov	r1, #0
   1aafc:	cmp	r0, r2
   1ab00:	movwlt	r1, #1
   1ab04:	mov	r0, r1
   1ab08:	pop	{r4, sl, fp, pc}

0001ab0c <spss_format>:
   1ab0c:	push	{r4, sl, fp, lr}
   1ab10:	add	fp, sp, #8
   1ab14:	sub	sp, sp, #8
   1ab18:	ldr	lr, [r2]
   1ab1c:	mov	ip, #0
   1ab20:	cmp	lr, #41	; 0x29
   1ab24:	bhi	1ab90 <spss_format+0x84>
   1ab28:	ldr	r3, [pc, #108]	; 1ab9c <spss_format+0x90>
   1ab2c:	add	r3, pc, r3
   1ab30:	ldrb	r4, [r3, lr, lsl #4]!
   1ab34:	cmp	r4, #0
   1ab38:	beq	1ab90 <spss_format+0x84>
   1ab3c:	ldr	ip, [r2, #4]
   1ab40:	ldr	r2, [r2, #8]
   1ab44:	cmp	lr, #5
   1ab48:	beq	1ab6c <spss_format+0x60>
   1ab4c:	cmp	r2, #0
   1ab50:	bne	1ab6c <spss_format+0x60>
   1ab54:	cmp	ip, #0
   1ab58:	beq	1ab80 <spss_format+0x74>
   1ab5c:	str	ip, [sp]
   1ab60:	ldr	r2, [pc, #60]	; 1aba4 <spss_format+0x98>
   1ab64:	add	r2, pc, r2
   1ab68:	b	1ab88 <spss_format+0x7c>
   1ab6c:	str	ip, [sp]
   1ab70:	str	r2, [sp, #4]
   1ab74:	ldr	r2, [pc, #36]	; 1aba0 <spss_format+0x94>
   1ab78:	add	r2, pc, r2
   1ab7c:	b	1ab88 <spss_format+0x7c>
   1ab80:	ldr	r2, [pc, #32]	; 1aba8 <spss_format+0x9c>
   1ab84:	add	r2, pc, r2
   1ab88:	bl	4d04 <snprintf@plt>
   1ab8c:	mov	ip, #1
   1ab90:	mov	r0, ip
   1ab94:	sub	sp, fp, #8
   1ab98:	pop	{r4, sl, fp, pc}
   1ab9c:	.word	0x0002bf58
   1aba0:	.word	0x0000b042
   1aba4:	.word	0x0000b05e
   1aba8:	.word	0x0000bc28

0001abac <spss_varinfo_compare>:
   1abac:	ldr	r2, [r0]
   1abb0:	ldr	r0, [r1]
   1abb4:	ldr	r1, [r0, #12]
   1abb8:	mov	r0, #0
   1abbc:	cmp	r2, r1
   1abc0:	movwgt	r0, #1
   1abc4:	mvnlt	r0, #0
   1abc8:	bx	lr

0001abcc <spss_varinfo_free>:
   1abcc:	cmp	r0, #0
   1abd0:	bxeq	lr
   1abd4:	push	{r4, sl, fp, lr}
   1abd8:	add	fp, sp, #8
   1abdc:	mov	r4, r0
   1abe0:	ldr	r0, [r0, #264]	; 0x108
   1abe4:	cmp	r0, #0
   1abe8:	beq	1abf0 <spss_varinfo_free+0x24>
   1abec:	bl	4938 <free@plt>
   1abf0:	mov	r0, r4
   1abf4:	pop	{r4, sl, fp, lr}
   1abf8:	b	4938 <free@plt>

0001abfc <spss_64bit_value>:
   1abfc:	push	{r4, r5, r6, r7, fp, lr}
   1ac00:	add	fp, sp, #16
   1ac04:	vpush	{d8}
   1ac08:	bl	4c44 <readstat_double_value@plt>
   1ac0c:	vmov.f64	d8, d0
   1ac10:	bl	4a64 <__isinf@plt>
   1ac14:	mov	r1, r0
   1ac18:	mvn	r2, #1048576	; 0x100000
   1ac1c:	mvn	r0, #1
   1ac20:	cmp	r1, #0
   1ac24:	beq	1ac48 <spss_64bit_value+0x4c>
   1ac28:	vcmpe.f64	d8, #0.0
   1ac2c:	vmrs	APSR_nzcv, fpscr
   1ac30:	mvnpl	r0, #0
   1ac34:	movw	r1, #65535	; 0xffff
   1ac38:	movt	r1, #32751	; 0x7fef
   1ac3c:	movmi	r1, r2
   1ac40:	vpop	{d8}
   1ac44:	pop	{r4, r5, r6, r7, fp, pc}
   1ac48:	adds	r6, r0, #1
   1ac4c:	adc	r7, r2, #0
   1ac50:	vmov	r4, r5, d8
   1ac54:	vmov.f64	d0, d8
   1ac58:	bl	4db8 <__isnan@plt>
   1ac5c:	cmp	r0, #0
   1ac60:	movne	r4, r6
   1ac64:	movne	r5, r7
   1ac68:	mov	r0, r4
   1ac6c:	mov	r1, r5
   1ac70:	vpop	{d8}
   1ac74:	pop	{r4, r5, r6, r7, fp, pc}

0001ac78 <spss_missingness_for_info>:
   1ac78:	push	{r4, r5, r6, r7, fp, lr}
   1ac7c:	add	fp, sp, #16
   1ac80:	sub	sp, sp, #16
   1ac84:	mov	r5, r1
   1ac88:	mov	r4, r0
   1ac8c:	mov	r1, #0
   1ac90:	mov	r2, #520	; 0x208
   1ac94:	bl	4d28 <memset@plt>
   1ac98:	ldr	r0, [r5, #56]	; 0x38
   1ac9c:	cmp	r0, #0
   1aca0:	beq	1ad24 <spss_missingness_for_info+0xac>
   1aca4:	ldr	r7, [r4, #512]	; 0x200
   1aca8:	add	r0, r7, #1
   1acac:	str	r0, [r4, #512]	; 0x200
   1acb0:	mov	r0, r4
   1acb4:	mov	r1, r5
   1acb8:	mov	r2, #0
   1acbc:	bl	1ad88 <spss_boxed_missing_value>
   1acc0:	mov	r6, sp
   1acc4:	mov	r0, r6
   1acc8:	mov	r1, r5
   1accc:	mov	r2, #1
   1acd0:	bl	1ad88 <spss_boxed_missing_value>
   1acd4:	vld1.64	{d16-d17}, [r6]
   1acd8:	add	r0, r4, #16
   1acdc:	vst1.64	{d16-d17}, [r0]
   1ace0:	ldr	r0, [r5, #52]	; 0x34
   1ace4:	cmp	r0, #3
   1ace8:	bne	1ad80 <spss_missingness_for_info+0x108>
   1acec:	add	r0, r7, #2
   1acf0:	str	r0, [r4, #512]	; 0x200
   1acf4:	mov	r0, r6
   1acf8:	mov	r1, r5
   1acfc:	mov	r2, #2
   1ad00:	bl	1ad88 <spss_boxed_missing_value>
   1ad04:	vld1.64	{d16-d17}, [r6]
   1ad08:	add	r0, r4, #48	; 0x30
   1ad0c:	vst1.64	{d16-d17}, [r0]
   1ad10:	vld1.64	{d16-d17}, [r0]
   1ad14:	add	r0, r4, #32
   1ad18:	vst1.64	{d16-d17}, [r0]
   1ad1c:	sub	sp, fp, #16
   1ad20:	pop	{r4, r5, r6, r7, fp, pc}
   1ad24:	ldr	r0, [r5, #52]	; 0x34
   1ad28:	cmp	r0, #1
   1ad2c:	blt	1ad80 <spss_missingness_for_info+0x108>
   1ad30:	str	r0, [r4, #512]	; 0x200
   1ad34:	ldr	r0, [r5, #52]	; 0x34
   1ad38:	cmp	r0, #1
   1ad3c:	blt	1ad80 <spss_missingness_for_info+0x108>
   1ad40:	mov	r6, #0
   1ad44:	mov	r7, sp
   1ad48:	mov	r0, r7
   1ad4c:	mov	r1, r5
   1ad50:	mov	r2, r6
   1ad54:	bl	1ad88 <spss_boxed_missing_value>
   1ad58:	vld1.64	{d16-d17}, [r7]
   1ad5c:	add	r0, r4, r6, lsl #5
   1ad60:	add	r1, r0, #16
   1ad64:	vst1.64	{d16-d17}, [r1]
   1ad68:	vld1.64	{d16-d17}, [r1]
   1ad6c:	vst1.64	{d16-d17}, [r0]
   1ad70:	add	r6, r6, #1
   1ad74:	ldr	r0, [r5, #52]	; 0x34
   1ad78:	cmp	r6, r0
   1ad7c:	blt	1ad48 <spss_missingness_for_info+0xd0>
   1ad80:	sub	sp, fp, #16
   1ad84:	pop	{r4, r5, r6, r7, fp, pc}

0001ad88 <spss_boxed_missing_value>:
   1ad88:	push	{fp, lr}
   1ad8c:	mov	fp, sp
   1ad90:	ldr	r3, [r1]
   1ad94:	cmp	r3, #5
   1ad98:	bne	1adac <spss_boxed_missing_value+0x24>
   1ad9c:	add	r1, r1, r2, lsl #3
   1ada0:	vldr	d0, [r1, #64]	; 0x40
   1ada4:	bl	1afd4 <spss_boxed_double_value>
   1ada8:	pop	{fp, pc}
   1adac:	add	r2, r2, r2, lsl #5
   1adb0:	add	r1, r1, r2
   1adb4:	add	r1, r1, #88	; 0x58
   1adb8:	bl	1b010 <spss_boxed_string_value>
   1adbc:	pop	{fp, pc}

0001adc0 <spss_init_variable_for_info>:
   1adc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1adc4:	add	fp, sp, #24
   1adc8:	sub	sp, sp, #528	; 0x210
   1adcc:	mov	r6, r2
   1add0:	mov	r7, r1
   1add4:	mov	r4, r0
   1add8:	mov	r0, #1
   1addc:	movw	r1, #2152	; 0x868
   1ade0:	bl	47d0 <calloc@plt>
   1ade4:	mov	r5, r0
   1ade8:	ldr	r1, [r4, #8]
   1adec:	str	r7, [r0, #2148]	; 0x864
   1adf0:	ldr	r0, [r4]
   1adf4:	strd	r0, [r5]
   1adf8:	ldr	r0, [r4, #20]
   1adfc:	cmp	r0, #0
   1ae00:	ldreq	r0, [r4, #16]
   1ae04:	lsleq	r0, r0, #3
   1ae08:	str	r0, [r5, #1596]	; 0x63c
   1ae0c:	add	r0, r5, #8
   1ae10:	mov	r2, r4
   1ae14:	ldrb	r1, [r2, #196]!	; 0xc4
   1ae18:	cmp	r1, #0
   1ae1c:	beq	1ae30 <spss_init_variable_for_info+0x70>
   1ae20:	str	r6, [sp]
   1ae24:	mov	r1, #300	; 0x12c
   1ae28:	mov	r3, #65	; 0x41
   1ae2c:	b	1ae40 <spss_init_variable_for_info+0x80>
   1ae30:	str	r6, [sp]
   1ae34:	add	r2, r4, #187	; 0xbb
   1ae38:	mov	r1, #300	; 0x12c
   1ae3c:	mov	r3, #9
   1ae40:	bl	4cbc <readstat_convert@plt>
   1ae44:	ldr	r3, [r4, #264]	; 0x108
   1ae48:	cmp	r3, #0
   1ae4c:	beq	1ae64 <spss_init_variable_for_info+0xa4>
   1ae50:	add	r0, r5, #564	; 0x234
   1ae54:	ldr	r2, [pc, #96]	; 1aebc <spss_init_variable_for_info+0xfc>
   1ae58:	add	r2, pc, r2
   1ae5c:	mov	r1, #1024	; 0x400
   1ae60:	bl	4d04 <snprintf@plt>
   1ae64:	add	r0, r5, #308	; 0x134
   1ae68:	add	r2, r4, #24
   1ae6c:	mov	r1, #256	; 0x100
   1ae70:	bl	4ea8 <spss_format@plt>
   1ae74:	add	r6, sp, #8
   1ae78:	mov	r0, r6
   1ae7c:	mov	r1, r4
   1ae80:	bl	4fc8 <spss_missingness_for_info@plt>
   1ae84:	movw	r0, #1608	; 0x648
   1ae88:	add	r0, r5, r0
   1ae8c:	mov	r1, r6
   1ae90:	mov	r2, #520	; 0x208
   1ae94:	bl	4998 <memcpy@plt>
   1ae98:	ldr	r0, [r4, #268]	; 0x10c
   1ae9c:	str	r0, [r5, #2128]	; 0x850
   1aea0:	ldr	r0, [r4, #276]	; 0x114
   1aea4:	cmp	r0, #0
   1aea8:	ldreq	r0, [r4, #28]
   1aeac:	str	r0, [r5, #2136]	; 0x858
   1aeb0:	mov	r0, r5
   1aeb4:	sub	sp, fp, #24
   1aeb8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1aebc:	.word	0x0000b954

0001aec0 <spss_measure_from_readstat_measure>:
   1aec0:	sub	r1, r0, #1
   1aec4:	cmp	r1, #3
   1aec8:	movcs	r0, #0
   1aecc:	bx	lr

0001aed0 <spss_measure_to_readstat_measure>:
   1aed0:	sub	r1, r0, #1
   1aed4:	cmp	r1, #3
   1aed8:	movcs	r0, #0
   1aedc:	bx	lr

0001aee0 <spss_alignment_from_readstat_alignment>:
   1aee0:	sub	r1, r0, #2
   1aee4:	clz	r1, r1
   1aee8:	lsr	r1, r1, #5
   1aeec:	lsl	r1, r1, #1
   1aef0:	cmp	r0, #3
   1aef4:	movweq	r1, #1
   1aef8:	mov	r0, r1
   1aefc:	bx	lr

0001af00 <spss_alignment_to_readstat_alignment>:
   1af00:	cmp	r0, #2
   1af04:	movhi	r0, #0
   1af08:	ldrls	r1, [pc, #8]	; 1af18 <spss_alignment_to_readstat_alignment+0x18>
   1af0c:	addls	r1, pc, r1
   1af10:	ldrls	r0, [r1, r0, lsl #2]
   1af14:	bx	lr
   1af18:	.word	0x0000bdc4

0001af1c <spss_format_for_variable>:
   1af1c:	push	{r4, r5, fp, lr}
   1af20:	add	fp, sp, #8
   1af24:	mov	r4, r1
   1af28:	mov	r5, r0
   1af2c:	mov	r0, #0
   1af30:	str	r0, [r1]
   1af34:	str	r0, [r1, #4]
   1af38:	str	r0, [r1, #8]
   1af3c:	ldr	r0, [r5]
   1af40:	cmp	r0, #0
   1af44:	beq	1af74 <spss_format_for_variable+0x58>
   1af48:	mov	r1, #5
   1af4c:	str	r1, [r4]
   1af50:	ldr	r1, [r5, #2136]	; 0x858
   1af54:	cmp	r1, #0
   1af58:	movweq	r1, #8
   1af5c:	str	r1, [r4, #4]
   1af60:	bic	r0, r0, #1
   1af64:	cmp	r0, #4
   1af68:	moveq	r0, #2
   1af6c:	streq	r0, [r4, #8]
   1af70:	b	1af98 <spss_format_for_variable+0x7c>
   1af74:	mov	r0, #1
   1af78:	str	r0, [r4]
   1af7c:	ldr	r0, [r5, #2136]	; 0x858
   1af80:	cmp	r0, #0
   1af84:	bne	1af94 <spss_format_for_variable+0x78>
   1af88:	ldr	r0, [r5, #1600]	; 0x640
   1af8c:	cmp	r0, #0
   1af90:	ldreq	r0, [r5, #1596]	; 0x63c
   1af94:	str	r0, [r4, #4]
   1af98:	ldrb	r0, [r5, #308]!	; 0x134
   1af9c:	cmp	r0, #0
   1afa0:	moveq	r0, #0
   1afa4:	popeq	{r4, r5, fp, pc}
   1afa8:	mov	r0, #0
   1afac:	str	r0, [r4, #8]
   1afb0:	mov	r0, r5
   1afb4:	bl	4c8c <strlen@plt>
   1afb8:	mov	r1, r0
   1afbc:	mov	r0, r5
   1afc0:	mov	r2, r4
   1afc4:	bl	49a4 <spss_parse_format@plt>
   1afc8:	cmp	r0, #0
   1afcc:	movwne	r0, #11
   1afd0:	pop	{r4, r5, fp, pc}

0001afd4 <spss_boxed_double_value>:
   1afd4:	push	{r4, sl, fp, lr}
   1afd8:	add	fp, sp, #8
   1afdc:	mov	r4, r0
   1afe0:	mov	r0, #5
   1afe4:	str	r0, [r4, #8]
   1afe8:	vstr	d0, [r4]
   1afec:	mov	r0, #0
   1aff0:	strb	r0, [r4, #12]
   1aff4:	bl	4db8 <__isnan@plt>
   1aff8:	and	r0, r0, #1
   1affc:	ldrb	r1, [r4, #13]
   1b000:	and	r1, r1, #252	; 0xfc
   1b004:	orr	r0, r1, r0
   1b008:	strb	r0, [r4, #13]
   1b00c:	pop	{r4, sl, fp, pc}

0001b010 <spss_boxed_string_value>:
   1b010:	mov	r2, #0
   1b014:	str	r2, [r0, #8]
   1b018:	str	r1, [r0]
   1b01c:	strb	r2, [r0, #12]
   1b020:	ldrb	r1, [r0, #13]
   1b024:	and	r1, r1, #252	; 0xfc
   1b028:	strb	r1, [r0, #13]
   1b02c:	bx	lr

0001b030 <spss_parse_format>:
   1b030:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b034:	add	fp, sp, #28
   1b038:	sub	sp, sp, #8
   1b03c:	add	r3, r0, r1
   1b040:	str	r3, [sp]
   1b044:	cmp	r1, #0
   1b048:	beq	1b4b0 <spss_parse_format+0x480>
   1b04c:	mov	r1, #0
   1b050:	str	r1, [sp, #4]
   1b054:	mov	ip, #1
   1b058:	ldr	r7, [pc, #1864]	; 1b7a8 <spss_parse_format+0x778>
   1b05c:	add	r7, pc, r7
   1b060:	ldr	r1, [pc, #1860]	; 1b7ac <spss_parse_format+0x77c>
   1b064:	add	r1, pc, r1
   1b068:	ldrb	r5, [r1, ip]
   1b06c:	ldr	r1, [pc, #1852]	; 1b7b0 <spss_parse_format+0x780>
   1b070:	add	r1, pc, r1
   1b074:	add	r1, r1, ip, lsl #1
   1b078:	ldrsh	r1, [r1]
   1b07c:	ldr	r3, [pc, #1840]	; 1b7b4 <spss_parse_format+0x784>
   1b080:	add	r3, pc, r3
   1b084:	add	lr, r3, r1
   1b088:	ldr	r1, [pc, #1832]	; 1b7b8 <spss_parse_format+0x788>
   1b08c:	add	r1, pc, r1
   1b090:	add	r1, r1, ip, lsl #1
   1b094:	ldrsh	r8, [r1]
   1b098:	cmp	r5, #0
   1b09c:	beq	1b0fc <spss_parse_format+0xcc>
   1b0a0:	add	sl, lr, r5
   1b0a4:	sub	r1, sl, #1
   1b0a8:	cmp	r1, lr
   1b0ac:	bcc	1b0ec <spss_parse_format+0xbc>
   1b0b0:	ldrb	r7, [r0]
   1b0b4:	mov	r4, lr
   1b0b8:	sub	r9, r1, r4
   1b0bc:	mov	r3, r4
   1b0c0:	ldrb	r6, [r3, r9, asr #1]!
   1b0c4:	cmp	r7, r6
   1b0c8:	bcs	1b0dc <spss_parse_format+0xac>
   1b0cc:	sub	r1, r3, #1
   1b0d0:	cmp	r1, r4
   1b0d4:	bcs	1b0b8 <spss_parse_format+0x88>
   1b0d8:	b	1b0ec <spss_parse_format+0xbc>
   1b0dc:	bls	1b174 <spss_parse_format+0x144>
   1b0e0:	add	r4, r3, #1
   1b0e4:	cmp	r1, r4
   1b0e8:	bcs	1b0b8 <spss_parse_format+0x88>
   1b0ec:	add	r8, r5, r8
   1b0f0:	ldr	r7, [pc, #1732]	; 1b7bc <spss_parse_format+0x78c>
   1b0f4:	add	r7, pc, r7
   1b0f8:	b	1b100 <spss_parse_format+0xd0>
   1b0fc:	mov	sl, lr
   1b100:	ldr	r1, [pc, #1720]	; 1b7c0 <spss_parse_format+0x790>
   1b104:	add	r1, pc, r1
   1b108:	ldrb	ip, [r1, ip]
   1b10c:	cmp	ip, #0
   1b110:	mvn	r5, #1
   1b114:	beq	1b19c <spss_parse_format+0x16c>
   1b118:	add	r1, sl, ip, lsl #1
   1b11c:	sub	r4, r1, #2
   1b120:	cmp	r4, sl
   1b124:	bcc	1b198 <spss_parse_format+0x168>
   1b128:	ldrb	r1, [r0]
   1b12c:	mov	r7, sl
   1b130:	sub	r3, r4, r7
   1b134:	and	r6, r5, r3, asr #1
   1b138:	mov	r3, r7
   1b13c:	ldrb	r6, [r3, r6]!
   1b140:	cmp	r1, r6
   1b144:	bcs	1b158 <spss_parse_format+0x128>
   1b148:	sub	r4, r3, #2
   1b14c:	cmp	r4, r7
   1b150:	bcs	1b130 <spss_parse_format+0x100>
   1b154:	b	1b190 <spss_parse_format+0x160>
   1b158:	ldrb	r7, [r3, #1]
   1b15c:	cmp	r1, r7
   1b160:	bls	1b188 <spss_parse_format+0x158>
   1b164:	add	r7, r3, #2
   1b168:	cmp	r4, r7
   1b16c:	bcs	1b130 <spss_parse_format+0x100>
   1b170:	b	1b190 <spss_parse_format+0x160>
   1b174:	sub	r1, r8, lr
   1b178:	add	r8, r1, r3
   1b17c:	ldr	r7, [pc, #1624]	; 1b7dc <spss_parse_format+0x7ac>
   1b180:	add	r7, pc, r7
   1b184:	b	1b19c <spss_parse_format+0x16c>
   1b188:	sub	r1, r3, sl
   1b18c:	asr	ip, r1, #1
   1b190:	ldr	r7, [pc, #1580]	; 1b7c4 <spss_parse_format+0x794>
   1b194:	add	r7, pc, r7
   1b198:	add	r8, ip, r8
   1b19c:	ldr	r1, [pc, #1572]	; 1b7c8 <spss_parse_format+0x798>
   1b1a0:	add	r1, pc, r1
   1b1a4:	ldrb	lr, [r1, r8]
   1b1a8:	ldr	r1, [pc, #1564]	; 1b7cc <spss_parse_format+0x79c>
   1b1ac:	add	r1, pc, r1
   1b1b0:	ldrb	r1, [r1, lr]
   1b1b4:	cmp	r1, #0
   1b1b8:	ldrbne	r3, [r7, r1]
   1b1bc:	cmpne	r3, #0
   1b1c0:	beq	1b488 <spss_parse_format+0x458>
   1b1c4:	add	r1, r7, r1
   1b1c8:	add	r6, r1, #1
   1b1cc:	rsb	r4, r3, #0
   1b1d0:	ldrb	r1, [r6]
   1b1d4:	cmp	r1, #40	; 0x28
   1b1d8:	bhi	1b47c <spss_parse_format+0x44c>
   1b1dc:	add	r3, pc, #4
   1b1e0:	ldr	r1, [r3, r1, lsl #2]
   1b1e4:	add	pc, r3, r1
   1b1e8:	.word	0x000000a4
   1b1ec:	.word	0x000000b0
   1b1f0:	.word	0x000000cc
   1b1f4:	.word	0x00000294
   1b1f8:	.word	0x000000d4
   1b1fc:	.word	0x000000e0
   1b200:	.word	0x000000ec
   1b204:	.word	0x000000f8
   1b208:	.word	0x00000104
   1b20c:	.word	0x00000110
   1b210:	.word	0x0000011c
   1b214:	.word	0x00000128
   1b218:	.word	0x00000134
   1b21c:	.word	0x00000140
   1b220:	.word	0x0000014c
   1b224:	.word	0x00000158
   1b228:	.word	0x00000164
   1b22c:	.word	0x00000170
   1b230:	.word	0x0000017c
   1b234:	.word	0x00000188
   1b238:	.word	0x00000194
   1b23c:	.word	0x000001a0
   1b240:	.word	0x000001ac
   1b244:	.word	0x000001b8
   1b248:	.word	0x000001c4
   1b24c:	.word	0x000001d0
   1b250:	.word	0x000001dc
   1b254:	.word	0x000001e8
   1b258:	.word	0x000001f4
   1b25c:	.word	0x00000200
   1b260:	.word	0x0000020c
   1b264:	.word	0x00000218
   1b268:	.word	0x00000224
   1b26c:	.word	0x00000230
   1b270:	.word	0x0000023c
   1b274:	.word	0x00000248
   1b278:	.word	0x00000254
   1b27c:	.word	0x00000260
   1b280:	.word	0x0000026c
   1b284:	.word	0x00000278
   1b288:	.word	0x00000284
   1b28c:	mov	r1, #0
   1b290:	str	r1, [sp, #4]
   1b294:	b	1b47c <spss_parse_format+0x44c>
   1b298:	ldrb	r1, [r0]
   1b29c:	ldr	r3, [sp, #4]
   1b2a0:	add	r3, r3, r3, lsl #2
   1b2a4:	add	r1, r1, r3, lsl #1
   1b2a8:	sub	r1, r1, #48	; 0x30
   1b2ac:	str	r1, [sp, #4]
   1b2b0:	b	1b47c <spss_parse_format+0x44c>
   1b2b4:	ldr	r1, [sp, #4]
   1b2b8:	b	1b478 <spss_parse_format+0x448>
   1b2bc:	mov	r1, #1
   1b2c0:	str	r1, [r2]
   1b2c4:	b	1b47c <spss_parse_format+0x44c>
   1b2c8:	mov	r1, #2
   1b2cc:	str	r1, [r2]
   1b2d0:	b	1b47c <spss_parse_format+0x44c>
   1b2d4:	mov	r1, #3
   1b2d8:	str	r1, [r2]
   1b2dc:	b	1b47c <spss_parse_format+0x44c>
   1b2e0:	mov	r1, #4
   1b2e4:	str	r1, [r2]
   1b2e8:	b	1b47c <spss_parse_format+0x44c>
   1b2ec:	mov	r1, #5
   1b2f0:	str	r1, [r2]
   1b2f4:	b	1b47c <spss_parse_format+0x44c>
   1b2f8:	mov	r1, #6
   1b2fc:	str	r1, [r2]
   1b300:	b	1b47c <spss_parse_format+0x44c>
   1b304:	mov	r1, #7
   1b308:	str	r1, [r2]
   1b30c:	b	1b47c <spss_parse_format+0x44c>
   1b310:	mov	r1, #8
   1b314:	str	r1, [r2]
   1b318:	b	1b47c <spss_parse_format+0x44c>
   1b31c:	mov	r1, #9
   1b320:	str	r1, [r2]
   1b324:	b	1b47c <spss_parse_format+0x44c>
   1b328:	mov	r1, #10
   1b32c:	str	r1, [r2]
   1b330:	b	1b47c <spss_parse_format+0x44c>
   1b334:	mov	r1, #11
   1b338:	str	r1, [r2]
   1b33c:	b	1b47c <spss_parse_format+0x44c>
   1b340:	mov	r1, #12
   1b344:	str	r1, [r2]
   1b348:	b	1b47c <spss_parse_format+0x44c>
   1b34c:	mov	r1, #15
   1b350:	str	r1, [r2]
   1b354:	b	1b47c <spss_parse_format+0x44c>
   1b358:	mov	r1, #16
   1b35c:	str	r1, [r2]
   1b360:	b	1b47c <spss_parse_format+0x44c>
   1b364:	mov	r1, #17
   1b368:	str	r1, [r2]
   1b36c:	b	1b47c <spss_parse_format+0x44c>
   1b370:	mov	r1, #11
   1b374:	mov	r3, #20
   1b378:	b	1b474 <spss_parse_format+0x444>
   1b37c:	mov	r1, #21
   1b380:	str	r1, [r2]
   1b384:	b	1b47c <spss_parse_format+0x44c>
   1b388:	mov	r1, #20
   1b38c:	mov	r3, #22
   1b390:	b	1b474 <spss_parse_format+0x444>
   1b394:	mov	r1, #19
   1b398:	mov	r3, #41	; 0x29
   1b39c:	b	1b474 <spss_parse_format+0x444>
   1b3a0:	mov	r1, #10
   1b3a4:	mov	r3, #23
   1b3a8:	b	1b474 <spss_parse_format+0x444>
   1b3ac:	mov	r1, #24
   1b3b0:	str	r1, [r2]
   1b3b4:	b	1b47c <spss_parse_format+0x44c>
   1b3b8:	mov	r1, #23
   1b3bc:	mov	r3, #25
   1b3c0:	b	1b474 <spss_parse_format+0x444>
   1b3c4:	mov	r1, #40	; 0x28
   1b3c8:	str	r1, [r2]
   1b3cc:	b	1b47c <spss_parse_format+0x44c>
   1b3d0:	mov	r1, #26
   1b3d4:	str	r1, [r2]
   1b3d8:	b	1b47c <spss_parse_format+0x44c>
   1b3dc:	mov	r1, #27
   1b3e0:	str	r1, [r2]
   1b3e4:	b	1b47c <spss_parse_format+0x44c>
   1b3e8:	mov	r1, #28
   1b3ec:	str	r1, [r2]
   1b3f0:	b	1b47c <spss_parse_format+0x44c>
   1b3f4:	mov	r1, #29
   1b3f8:	str	r1, [r2]
   1b3fc:	b	1b47c <spss_parse_format+0x44c>
   1b400:	mov	r1, #10
   1b404:	mov	r3, #30
   1b408:	b	1b474 <spss_parse_format+0x444>
   1b40c:	mov	r1, #31
   1b410:	str	r1, [r2]
   1b414:	b	1b47c <spss_parse_format+0x44c>
   1b418:	mov	r1, #32
   1b41c:	str	r1, [r2]
   1b420:	b	1b47c <spss_parse_format+0x44c>
   1b424:	mov	r1, #33	; 0x21
   1b428:	str	r1, [r2]
   1b42c:	b	1b47c <spss_parse_format+0x44c>
   1b430:	mov	r1, #34	; 0x22
   1b434:	str	r1, [r2]
   1b438:	b	1b47c <spss_parse_format+0x44c>
   1b43c:	mov	r1, #35	; 0x23
   1b440:	str	r1, [r2]
   1b444:	b	1b47c <spss_parse_format+0x44c>
   1b448:	mov	r1, #36	; 0x24
   1b44c:	str	r1, [r2]
   1b450:	b	1b47c <spss_parse_format+0x44c>
   1b454:	mov	r1, #37	; 0x25
   1b458:	str	r1, [r2]
   1b45c:	b	1b47c <spss_parse_format+0x44c>
   1b460:	mov	r1, #10
   1b464:	mov	r3, #38	; 0x26
   1b468:	b	1b474 <spss_parse_format+0x444>
   1b46c:	mov	r1, #10
   1b470:	mov	r3, #39	; 0x27
   1b474:	str	r3, [r2]
   1b478:	str	r1, [r2, #4]
   1b47c:	add	r6, r6, #1
   1b480:	adds	r4, r4, #1
   1b484:	bne	1b1d0 <spss_parse_format+0x1a0>
   1b488:	ldr	r1, [pc, #832]	; 1b7d0 <spss_parse_format+0x7a0>
   1b48c:	add	r1, pc, r1
   1b490:	ldrb	ip, [r1, lr]
   1b494:	cmp	lr, #1
   1b498:	beq	1b78c <spss_parse_format+0x75c>
   1b49c:	add	r0, r0, #1
   1b4a0:	ldr	r1, [sp]
   1b4a4:	cmp	r0, r1
   1b4a8:	bne	1b060 <spss_parse_format+0x30>
   1b4ac:	b	1b4bc <spss_parse_format+0x48c>
   1b4b0:	mov	r1, #0
   1b4b4:	str	r1, [sp, #4]
   1b4b8:	mov	ip, #1
   1b4bc:	ldr	r1, [sp]
   1b4c0:	cmp	r0, r1
   1b4c4:	bne	1b78c <spss_parse_format+0x75c>
   1b4c8:	ldr	r1, [pc, #772]	; 1b7d4 <spss_parse_format+0x7a4>
   1b4cc:	add	r1, pc, r1
   1b4d0:	ldrb	r1, [r1, ip]
   1b4d4:	ldr	r7, [pc, #764]	; 1b7d8 <spss_parse_format+0x7a8>
   1b4d8:	add	r7, pc, r7
   1b4dc:	ldrb	r3, [r7, r1]
   1b4e0:	cmp	r3, #0
   1b4e4:	beq	1b78c <spss_parse_format+0x75c>
   1b4e8:	add	r1, r7, r1
   1b4ec:	add	r7, r1, #1
   1b4f0:	rsb	r6, r3, #0
   1b4f4:	ldrb	r1, [r7]
   1b4f8:	sub	r1, r1, #2
   1b4fc:	cmp	r1, #38	; 0x26
   1b500:	bhi	1b780 <spss_parse_format+0x750>
   1b504:	add	r3, pc, #4
   1b508:	ldr	r1, [r3, r1, lsl #2]
   1b50c:	add	pc, r3, r1
   1b510:	.word	0x0000009c
   1b514:	.word	0x000000a4
   1b518:	.word	0x000000b0
   1b51c:	.word	0x000000bc
   1b520:	.word	0x000000c8
   1b524:	.word	0x000000d4
   1b528:	.word	0x000000e0
   1b52c:	.word	0x000000ec
   1b530:	.word	0x000000f8
   1b534:	.word	0x00000104
   1b538:	.word	0x00000110
   1b53c:	.word	0x0000011c
   1b540:	.word	0x00000128
   1b544:	.word	0x00000134
   1b548:	.word	0x00000140
   1b54c:	.word	0x0000014c
   1b550:	.word	0x00000158
   1b554:	.word	0x00000164
   1b558:	.word	0x00000170
   1b55c:	.word	0x0000017c
   1b560:	.word	0x00000188
   1b564:	.word	0x00000194
   1b568:	.word	0x000001a0
   1b56c:	.word	0x000001ac
   1b570:	.word	0x000001b8
   1b574:	.word	0x000001c4
   1b578:	.word	0x000001d0
   1b57c:	.word	0x000001dc
   1b580:	.word	0x000001e8
   1b584:	.word	0x000001f4
   1b588:	.word	0x00000200
   1b58c:	.word	0x0000020c
   1b590:	.word	0x00000218
   1b594:	.word	0x00000224
   1b598:	.word	0x00000230
   1b59c:	.word	0x0000023c
   1b5a0:	.word	0x00000248
   1b5a4:	.word	0x00000254
   1b5a8:	.word	0x00000260
   1b5ac:	ldr	r1, [sp, #4]
   1b5b0:	b	1b77c <spss_parse_format+0x74c>
   1b5b4:	ldr	r1, [sp, #4]
   1b5b8:	str	r1, [r2, #8]
   1b5bc:	b	1b780 <spss_parse_format+0x750>
   1b5c0:	mov	r1, #1
   1b5c4:	str	r1, [r2]
   1b5c8:	b	1b780 <spss_parse_format+0x750>
   1b5cc:	mov	r1, #2
   1b5d0:	str	r1, [r2]
   1b5d4:	b	1b780 <spss_parse_format+0x750>
   1b5d8:	mov	r1, #3
   1b5dc:	str	r1, [r2]
   1b5e0:	b	1b780 <spss_parse_format+0x750>
   1b5e4:	mov	r1, #4
   1b5e8:	str	r1, [r2]
   1b5ec:	b	1b780 <spss_parse_format+0x750>
   1b5f0:	mov	r1, #5
   1b5f4:	str	r1, [r2]
   1b5f8:	b	1b780 <spss_parse_format+0x750>
   1b5fc:	mov	r1, #6
   1b600:	str	r1, [r2]
   1b604:	b	1b780 <spss_parse_format+0x750>
   1b608:	mov	r1, #7
   1b60c:	str	r1, [r2]
   1b610:	b	1b780 <spss_parse_format+0x750>
   1b614:	mov	r1, #8
   1b618:	str	r1, [r2]
   1b61c:	b	1b780 <spss_parse_format+0x750>
   1b620:	mov	r1, #9
   1b624:	str	r1, [r2]
   1b628:	b	1b780 <spss_parse_format+0x750>
   1b62c:	mov	r1, #10
   1b630:	str	r1, [r2]
   1b634:	b	1b780 <spss_parse_format+0x750>
   1b638:	mov	r1, #11
   1b63c:	str	r1, [r2]
   1b640:	b	1b780 <spss_parse_format+0x750>
   1b644:	mov	r1, #12
   1b648:	str	r1, [r2]
   1b64c:	b	1b780 <spss_parse_format+0x750>
   1b650:	mov	r1, #15
   1b654:	str	r1, [r2]
   1b658:	b	1b780 <spss_parse_format+0x750>
   1b65c:	mov	r1, #16
   1b660:	str	r1, [r2]
   1b664:	b	1b780 <spss_parse_format+0x750>
   1b668:	mov	r1, #17
   1b66c:	str	r1, [r2]
   1b670:	b	1b780 <spss_parse_format+0x750>
   1b674:	mov	r1, #11
   1b678:	mov	r3, #20
   1b67c:	b	1b778 <spss_parse_format+0x748>
   1b680:	mov	r1, #21
   1b684:	str	r1, [r2]
   1b688:	b	1b780 <spss_parse_format+0x750>
   1b68c:	mov	r1, #20
   1b690:	mov	r3, #22
   1b694:	b	1b778 <spss_parse_format+0x748>
   1b698:	mov	r1, #19
   1b69c:	mov	r3, #41	; 0x29
   1b6a0:	b	1b778 <spss_parse_format+0x748>
   1b6a4:	mov	r1, #10
   1b6a8:	mov	r3, #23
   1b6ac:	b	1b778 <spss_parse_format+0x748>
   1b6b0:	mov	r1, #24
   1b6b4:	str	r1, [r2]
   1b6b8:	b	1b780 <spss_parse_format+0x750>
   1b6bc:	mov	r1, #23
   1b6c0:	mov	r3, #25
   1b6c4:	b	1b778 <spss_parse_format+0x748>
   1b6c8:	mov	r1, #40	; 0x28
   1b6cc:	str	r1, [r2]
   1b6d0:	b	1b780 <spss_parse_format+0x750>
   1b6d4:	mov	r1, #26
   1b6d8:	str	r1, [r2]
   1b6dc:	b	1b780 <spss_parse_format+0x750>
   1b6e0:	mov	r1, #27
   1b6e4:	str	r1, [r2]
   1b6e8:	b	1b780 <spss_parse_format+0x750>
   1b6ec:	mov	r1, #28
   1b6f0:	str	r1, [r2]
   1b6f4:	b	1b780 <spss_parse_format+0x750>
   1b6f8:	mov	r1, #29
   1b6fc:	str	r1, [r2]
   1b700:	b	1b780 <spss_parse_format+0x750>
   1b704:	mov	r1, #10
   1b708:	mov	r3, #30
   1b70c:	b	1b778 <spss_parse_format+0x748>
   1b710:	mov	r1, #31
   1b714:	str	r1, [r2]
   1b718:	b	1b780 <spss_parse_format+0x750>
   1b71c:	mov	r1, #32
   1b720:	str	r1, [r2]
   1b724:	b	1b780 <spss_parse_format+0x750>
   1b728:	mov	r1, #33	; 0x21
   1b72c:	str	r1, [r2]
   1b730:	b	1b780 <spss_parse_format+0x750>
   1b734:	mov	r1, #34	; 0x22
   1b738:	str	r1, [r2]
   1b73c:	b	1b780 <spss_parse_format+0x750>
   1b740:	mov	r1, #35	; 0x23
   1b744:	str	r1, [r2]
   1b748:	b	1b780 <spss_parse_format+0x750>
   1b74c:	mov	r1, #36	; 0x24
   1b750:	str	r1, [r2]
   1b754:	b	1b780 <spss_parse_format+0x750>
   1b758:	mov	r1, #37	; 0x25
   1b75c:	str	r1, [r2]
   1b760:	b	1b780 <spss_parse_format+0x750>
   1b764:	mov	r1, #10
   1b768:	mov	r3, #38	; 0x26
   1b76c:	b	1b778 <spss_parse_format+0x748>
   1b770:	mov	r1, #10
   1b774:	mov	r3, #39	; 0x27
   1b778:	str	r3, [r2]
   1b77c:	str	r1, [r2, #4]
   1b780:	add	r7, r7, #1
   1b784:	adds	r6, r6, #1
   1b788:	bne	1b4f4 <spss_parse_format+0x4c4>
   1b78c:	ldr	r1, [sp]
   1b790:	subs	r0, r0, r1
   1b794:	movwne	r0, #5
   1b798:	cmp	ip, #67	; 0x43
   1b79c:	movle	r0, #5
   1b7a0:	sub	sp, fp, #28
   1b7a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7a8:	.word	0x0000c2a0
   1b7ac:	.word	0x0000bf42
   1b7b0:	.word	0x0000bd8a
   1b7b4:	.word	0x0000bc5c
   1b7b8:	.word	0x0000be44
   1b7bc:	.word	0x0000c208
   1b7c0:	.word	0x0000bf0d
   1b7c4:	.word	0x0000c168
   1b7c8:	.word	0x0000bedc
   1b7cc:	.word	0x0000c0c0
   1b7d0:	.word	0x0000bd50
   1b7d4:	.word	0x0000bf18
   1b7d8:	.word	0x0000be24
   1b7dc:	.word	0x0000c17c

0001b7e0 <dta_ctx_alloc>:
   1b7e0:	push	{r4, sl, fp, lr}
   1b7e4:	add	fp, sp, #8
   1b7e8:	mov	r4, r0
   1b7ec:	mov	r0, #1
   1b7f0:	mov	r1, #544	; 0x220
   1b7f4:	bl	47d0 <calloc@plt>
   1b7f8:	cmp	r0, #0
   1b7fc:	strne	r4, [r0, #280]	; 0x118
   1b800:	moveq	r0, #0
   1b804:	pop	{r4, sl, fp, pc}

0001b808 <dta_ctx_init>:
   1b808:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1b80c:	add	fp, sp, #24
   1b810:	mov	r4, r0
   1b814:	ldr	r9, [fp, #12]
   1b818:	sub	r0, r9, #104	; 0x68
   1b81c:	uxtb	r0, r0
   1b820:	mov	r8, #24
   1b824:	cmp	r0, #15
   1b828:	bhi	1bc14 <dta_ctx_init+0x40c>
   1b82c:	mov	r7, r3
   1b830:	mov	r5, r2
   1b834:	mov	r6, r1
   1b838:	ldr	r8, [fp, #8]
   1b83c:	bl	492c <machine_is_little_endian@plt>
   1b840:	mov	r1, #2
   1b844:	cmp	r8, #2
   1b848:	mov	r2, #2
   1b84c:	movweq	r2, #1
   1b850:	str	r2, [r4, #232]	; 0xe8
   1b854:	str	r9, [r4, #144]	; 0x90
   1b858:	str	r6, [r4, #148]	; 0x94
   1b85c:	str	r5, [r4, #152]	; 0x98
   1b860:	str	r7, [r4, #156]	; 0x9c
   1b864:	cmp	r0, #0
   1b868:	movweq	r1, #1
   1b86c:	subs	r0, r1, r8
   1b870:	movwne	r0, #1
   1b874:	ldrb	r1, [r4, #192]	; 0xc0
   1b878:	and	r1, r1, #254	; 0xfe
   1b87c:	orr	r0, r1, r0
   1b880:	strb	r0, [r4, #192]	; 0xc0
   1b884:	cmp	r6, #0
   1b888:	beq	1b8ac <dta_ctx_init+0xa4>
   1b88c:	mov	r0, r6
   1b890:	mov	r1, #4
   1b894:	bl	4a34 <readstat_calloc@plt>
   1b898:	str	r0, [r4, #228]	; 0xe4
   1b89c:	cmp	r0, #0
   1b8a0:	moveq	r8, #3
   1b8a4:	moveq	r0, r8
   1b8a8:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   1b8ac:	ldr	r5, [fp, #20]
   1b8b0:	ldrb	r0, [r4, #192]	; 0xc0
   1b8b4:	and	r1, r0, #253	; 0xfd
   1b8b8:	strb	r1, [r4, #192]	; 0xc0
   1b8bc:	cmp	r9, #105	; 0x69
   1b8c0:	bcs	1b8fc <dta_ctx_init+0xf4>
   1b8c4:	mov	r2, #0
   1b8c8:	strb	r2, [r4, #20]
   1b8cc:	mov	r3, #7
   1b8d0:	str	r3, [r4, #80]	; 0x50
   1b8d4:	str	r2, [r4, #92]	; 0x5c
   1b8d8:	mov	r2, #9
   1b8dc:	str	r2, [r4, #76]	; 0x4c
   1b8e0:	str	r2, [r4, #84]	; 0x54
   1b8e4:	str	r2, [r4, #96]	; 0x60
   1b8e8:	add	r2, r4, #88	; 0x58
   1b8ec:	cmp	r9, #107	; 0x6b
   1b8f0:	bhi	1b980 <dta_ctx_init+0x178>
   1b8f4:	mov	r3, #32
   1b8f8:	b	1b984 <dta_ctx_init+0x17c>
   1b8fc:	cmp	r9, #114	; 0x72
   1b900:	bcs	1b928 <dta_ctx_init+0x120>
   1b904:	mov	r2, #12
   1b908:	str	r2, [r4, #80]	; 0x50
   1b90c:	cmp	r9, #110	; 0x6e
   1b910:	bhi	1b95c <dta_ctx_init+0x154>
   1b914:	mov	r2, #0
   1b918:	strb	r2, [r4, #20]
   1b91c:	beq	1b964 <dta_ctx_init+0x15c>
   1b920:	mov	r2, #2
   1b924:	b	1b8d4 <dta_ctx_init+0xcc>
   1b928:	cmp	r9, #117	; 0x75
   1b92c:	bhi	1b9c4 <dta_ctx_init+0x1bc>
   1b930:	mov	r2, #49	; 0x31
   1b934:	str	r2, [r4, #80]	; 0x50
   1b938:	bne	1b95c <dta_ctx_init+0x154>
   1b93c:	mov	r2, #1
   1b940:	str	r2, [r4, #8]
   1b944:	mov	r2, #117	; 0x75
   1b948:	strb	r2, [r4, #20]
   1b94c:	mov	r2, #4
   1b950:	str	r2, [r4, #112]	; 0x70
   1b954:	str	r2, [r4, #116]	; 0x74
   1b958:	b	1b964 <dta_ctx_init+0x15c>
   1b95c:	mov	r2, #111	; 0x6f
   1b960:	strb	r2, [r4, #20]
   1b964:	mov	r2, #33	; 0x21
   1b968:	str	r2, [r4, #84]	; 0x54
   1b96c:	mov	r3, #4
   1b970:	str	r2, [r4, #76]	; 0x4c
   1b974:	str	r3, [r4, #92]	; 0x5c
   1b978:	str	r2, [r4, #96]	; 0x60
   1b97c:	add	r2, r4, #88	; 0x58
   1b980:	mov	r3, #81	; 0x51
   1b984:	str	r3, [r2]
   1b988:	str	r3, [r4, #4]
   1b98c:	cmp	r9, #104	; 0x68
   1b990:	bhi	1ba08 <dta_ctx_init+0x200>
   1b994:	mov	r1, #2
   1b998:	mov	r2, #0
   1b99c:	str	r2, [r4, #16]
   1b9a0:	mov	r2, #12
   1b9a4:	str	r1, [r4, #100]	; 0x64
   1b9a8:	str	r2, [r4, #104]	; 0x68
   1b9ac:	str	r1, [r4, #108]	; 0x6c
   1b9b0:	mov	r1, #1
   1b9b4:	str	r1, [r4, #24]
   1b9b8:	and	r0, r0, #249	; 0xf9
   1b9bc:	strb	r0, [r4, #192]	; 0xc0
   1b9c0:	b	1ba50 <dta_ctx_init+0x248>
   1b9c4:	mov	r2, #117	; 0x75
   1b9c8:	strb	r2, [r4, #20]
   1b9cc:	mov	r2, #57	; 0x39
   1b9d0:	mov	r6, #2
   1b9d4:	str	r6, [r4, #8]
   1b9d8:	mov	r7, #6
   1b9dc:	strd	r6, [r4, #112]	; 0x70
   1b9e0:	mov	r3, #4
   1b9e4:	mov	r7, #129	; 0x81
   1b9e8:	movw	r6, #321	; 0x141
   1b9ec:	str	r7, [r4, #76]	; 0x4c
   1b9f0:	str	r2, [r4, #80]	; 0x50
   1b9f4:	str	r7, [r4, #84]	; 0x54
   1b9f8:	str	r6, [r4, #88]	; 0x58
   1b9fc:	str	r3, [r4, #92]	; 0x5c
   1ba00:	str	r7, [r4, #96]	; 0x60
   1ba04:	str	r6, [r4, #4]
   1ba08:	mov	r2, #4
   1ba0c:	mov	r3, #18
   1ba10:	str	r3, [r4, #16]
   1ba14:	mov	r3, #3
   1ba18:	mov	r7, #129	; 0x81
   1ba1c:	cmp	r9, #118	; 0x76
   1ba20:	movwcc	r7, #33	; 0x21
   1ba24:	str	r2, [r4, #100]	; 0x64
   1ba28:	str	r7, [r4, #104]	; 0x68
   1ba2c:	str	r3, [r4, #108]	; 0x6c
   1ba30:	cmp	r9, #117	; 0x75
   1ba34:	bcs	1ba8c <dta_ctx_init+0x284>
   1ba38:	mov	r1, #1
   1ba3c:	str	r1, [r4, #24]
   1ba40:	and	r0, r0, #249	; 0xf9
   1ba44:	strb	r0, [r4, #192]	; 0xc0
   1ba48:	cmp	r9, #112	; 0x70
   1ba4c:	bhi	1ba9c <dta_ctx_init+0x294>
   1ba50:	movw	r1, #65535	; 0xffff
   1ba54:	movt	r1, #32735	; 0x7fdf
   1ba58:	mvn	r0, #0
   1ba5c:	strd	r0, [r4, #208]	; 0xd0
   1ba60:	movw	r0, #32766	; 0x7ffe
   1ba64:	strh	r0, [r4, #194]	; 0xc2
   1ba68:	mov	r0, #126	; 0x7e
   1ba6c:	strb	r0, [r4, #193]	; 0xc1
   1ba70:	mvn	r0, #-2147483647	; 0x80000001
   1ba74:	mvn	r1, #-2130706432	; 0x81000000
   1ba78:	str	r0, [r4, #196]	; 0xc4
   1ba7c:	str	r1, [r4, #200]	; 0xc8
   1ba80:	cmp	r5, #0
   1ba84:	bne	1bae0 <dta_ctx_init+0x2d8>
   1ba88:	b	1bb38 <dta_ctx_init+0x330>
   1ba8c:	mov	r0, #2
   1ba90:	str	r0, [r4, #24]
   1ba94:	orr	r0, r1, #4
   1ba98:	strb	r0, [r4, #192]	; 0xc0
   1ba9c:	movw	r1, #65535	; 0xffff
   1baa0:	movt	r1, #32735	; 0x7fdf
   1baa4:	mvn	r2, #0
   1baa8:	str	r2, [r4, #208]	; 0xd0
   1baac:	str	r1, [r4, #212]	; 0xd4
   1bab0:	movw	r1, #32740	; 0x7fe4
   1bab4:	strh	r1, [r4, #194]	; 0xc2
   1bab8:	mov	r1, #100	; 0x64
   1babc:	strb	r1, [r4, #193]	; 0xc1
   1bac0:	mvn	r1, #-2147483621	; 0x8000001b
   1bac4:	mvn	r2, #-2130706432	; 0x81000000
   1bac8:	str	r1, [r4, #196]	; 0xc4
   1bacc:	str	r2, [r4, #200]	; 0xc8
   1bad0:	orr	r0, r0, #8
   1bad4:	strb	r0, [r4, #192]	; 0xc0
   1bad8:	cmp	r5, #0
   1badc:	beq	1bb38 <dta_ctx_init+0x330>
   1bae0:	ldr	r1, [fp, #16]
   1bae4:	cmp	r1, #0
   1bae8:	bne	1bb20 <dta_ctx_init+0x318>
   1baec:	cmp	r9, #117	; 0x75
   1baf0:	bhi	1bb00 <dta_ctx_init+0x2f8>
   1baf4:	ldr	r1, [pc, #308]	; 1bc30 <dta_ctx_init+0x428>
   1baf8:	add	r1, pc, r1
   1bafc:	b	1bb20 <dta_ctx_init+0x318>
   1bb00:	ldr	r1, [pc, #300]	; 1bc34 <dta_ctx_init+0x42c>
   1bb04:	add	r1, pc, r1
   1bb08:	mov	r0, r5
   1bb0c:	bl	4878 <strcmp@plt>
   1bb10:	cmp	r0, #0
   1bb14:	beq	1bb2c <dta_ctx_init+0x324>
   1bb18:	ldr	r1, [pc, #280]	; 1bc38 <dta_ctx_init+0x430>
   1bb1c:	add	r1, pc, r1
   1bb20:	mov	r0, r5
   1bb24:	bl	4bc0 <iconv_open@plt>
   1bb28:	str	r0, [r4, #236]	; 0xec
   1bb2c:	ldr	r0, [r4, #236]	; 0xec
   1bb30:	cmn	r0, #1
   1bb34:	beq	1bc1c <dta_ctx_init+0x414>
   1bb38:	mov	r0, #2
   1bb3c:	cmp	r9, #119	; 0x77
   1bb40:	movwcc	r0, #1
   1bb44:	ldr	r1, [r4, #148]	; 0x94
   1bb48:	add	r1, r1, #1
   1bb4c:	lsl	r0, r1, r0
   1bb50:	str	r0, [r4, #48]	; 0x30
   1bb54:	bl	4cb0 <readstat_malloc@plt>
   1bb58:	str	r0, [r4, #44]	; 0x2c
   1bb5c:	mov	r8, #3
   1bb60:	cmp	r0, #0
   1bb64:	beq	1bc14 <dta_ctx_init+0x40c>
   1bb68:	ldr	r1, [r4, #148]	; 0x94
   1bb6c:	cmp	r1, #1
   1bb70:	blt	1bc08 <dta_ctx_init+0x400>
   1bb74:	lsl	r0, r1, #1
   1bb78:	str	r0, [r4, #32]
   1bb7c:	add	r7, r4, #76	; 0x4c
   1bb80:	ldm	r7, {r2, r3, r7}
   1bb84:	ldr	r6, [r4, #88]	; 0x58
   1bb88:	mul	r2, r2, r1
   1bb8c:	str	r2, [r4, #40]	; 0x28
   1bb90:	mul	r2, r3, r1
   1bb94:	str	r2, [r4, #56]	; 0x38
   1bb98:	mul	r2, r7, r1
   1bb9c:	str	r2, [r4, #64]	; 0x40
   1bba0:	mul	r1, r6, r1
   1bba4:	str	r1, [r4, #72]	; 0x48
   1bba8:	bl	4cb0 <readstat_malloc@plt>
   1bbac:	str	r0, [r4, #28]
   1bbb0:	cmp	r0, #0
   1bbb4:	beq	1bc14 <dta_ctx_init+0x40c>
   1bbb8:	ldr	r0, [r4, #40]	; 0x28
   1bbbc:	bl	4cb0 <readstat_malloc@plt>
   1bbc0:	str	r0, [r4, #36]	; 0x24
   1bbc4:	cmp	r0, #0
   1bbc8:	beq	1bc14 <dta_ctx_init+0x40c>
   1bbcc:	ldr	r0, [r4, #56]	; 0x38
   1bbd0:	bl	4cb0 <readstat_malloc@plt>
   1bbd4:	str	r0, [r4, #52]	; 0x34
   1bbd8:	cmp	r0, #0
   1bbdc:	beq	1bc14 <dta_ctx_init+0x40c>
   1bbe0:	ldr	r0, [r4, #64]	; 0x40
   1bbe4:	bl	4cb0 <readstat_malloc@plt>
   1bbe8:	str	r0, [r4, #60]	; 0x3c
   1bbec:	cmp	r0, #0
   1bbf0:	beq	1bc14 <dta_ctx_init+0x40c>
   1bbf4:	ldr	r0, [r4, #72]	; 0x48
   1bbf8:	bl	4cb0 <readstat_malloc@plt>
   1bbfc:	str	r0, [r4, #68]	; 0x44
   1bc00:	cmp	r0, #0
   1bc04:	beq	1bc14 <dta_ctx_init+0x40c>
   1bc08:	mov	r0, #1
   1bc0c:	str	r0, [r4, #284]	; 0x11c
   1bc10:	mov	r8, #0
   1bc14:	mov	r0, r8
   1bc18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1bc1c:	mov	r0, #0
   1bc20:	str	r0, [r4, #236]	; 0xec
   1bc24:	mov	r8, #7
   1bc28:	mov	r0, r8
   1bc2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1bc30:	.word	0x0000b957
   1bc34:	.word	0x00009c62
   1bc38:	.word	0x00009c4a

0001bc3c <dta_ctx_free>:
   1bc3c:	push	{r4, r5, fp, lr}
   1bc40:	add	fp, sp, #8
   1bc44:	mov	r4, r0
   1bc48:	ldr	r0, [r0, #28]
   1bc4c:	cmp	r0, #0
   1bc50:	beq	1bc58 <dta_ctx_free+0x1c>
   1bc54:	bl	4938 <free@plt>
   1bc58:	ldr	r0, [r4, #36]	; 0x24
   1bc5c:	cmp	r0, #0
   1bc60:	beq	1bc68 <dta_ctx_free+0x2c>
   1bc64:	bl	4938 <free@plt>
   1bc68:	ldr	r0, [r4, #44]	; 0x2c
   1bc6c:	cmp	r0, #0
   1bc70:	beq	1bc78 <dta_ctx_free+0x3c>
   1bc74:	bl	4938 <free@plt>
   1bc78:	ldr	r0, [r4, #52]	; 0x34
   1bc7c:	cmp	r0, #0
   1bc80:	beq	1bc88 <dta_ctx_free+0x4c>
   1bc84:	bl	4938 <free@plt>
   1bc88:	ldr	r0, [r4, #60]	; 0x3c
   1bc8c:	cmp	r0, #0
   1bc90:	beq	1bc98 <dta_ctx_free+0x5c>
   1bc94:	bl	4938 <free@plt>
   1bc98:	ldr	r0, [r4, #68]	; 0x44
   1bc9c:	cmp	r0, #0
   1bca0:	beq	1bca8 <dta_ctx_free+0x6c>
   1bca4:	bl	4938 <free@plt>
   1bca8:	ldr	r0, [r4, #236]	; 0xec
   1bcac:	cmp	r0, #0
   1bcb0:	beq	1bcb8 <dta_ctx_free+0x7c>
   1bcb4:	bl	4848 <iconv_close@plt>
   1bcb8:	ldr	r0, [r4]
   1bcbc:	cmp	r0, #0
   1bcc0:	beq	1bcc8 <dta_ctx_free+0x8c>
   1bcc4:	bl	4938 <free@plt>
   1bcc8:	ldr	r0, [r4, #228]	; 0xe4
   1bccc:	cmp	r0, #0
   1bcd0:	beq	1bd10 <dta_ctx_free+0xd4>
   1bcd4:	ldr	r1, [r4, #148]	; 0x94
   1bcd8:	ldr	r0, [r4, #228]	; 0xe4
   1bcdc:	cmp	r1, #1
   1bce0:	blt	1bd0c <dta_ctx_free+0xd0>
   1bce4:	mov	r5, #0
   1bce8:	ldr	r0, [r0, r5, lsl #2]
   1bcec:	cmp	r0, #0
   1bcf0:	beq	1bcf8 <dta_ctx_free+0xbc>
   1bcf4:	bl	4938 <free@plt>
   1bcf8:	add	r5, r5, #1
   1bcfc:	ldr	r1, [r4, #148]	; 0x94
   1bd00:	ldr	r0, [r4, #228]	; 0xe4
   1bd04:	cmp	r5, r1
   1bd08:	blt	1bce8 <dta_ctx_free+0xac>
   1bd0c:	bl	4938 <free@plt>
   1bd10:	ldr	r0, [r4, #216]	; 0xd8
   1bd14:	cmp	r0, #0
   1bd18:	beq	1bd48 <dta_ctx_free+0x10c>
   1bd1c:	ldrd	r0, [r4, #216]	; 0xd8
   1bd20:	cmp	r1, #0
   1bd24:	beq	1bd44 <dta_ctx_free+0x108>
   1bd28:	mov	r5, #0
   1bd2c:	ldr	r0, [r0, r5, lsl #2]
   1bd30:	bl	4938 <free@plt>
   1bd34:	add	r5, r5, #1
   1bd38:	ldrd	r0, [r4, #216]	; 0xd8
   1bd3c:	cmp	r5, r1
   1bd40:	bcc	1bd2c <dta_ctx_free+0xf0>
   1bd44:	bl	4938 <free@plt>
   1bd48:	mov	r0, r4
   1bd4c:	pop	{r4, r5, fp, lr}
   1bd50:	b	4938 <free@plt>

0001bd54 <dta_type_info>:
   1bd54:	push	{r4, sl, fp, lr}
   1bd58:	add	fp, sp, #8
   1bd5c:	ldrb	r1, [r1, #20]
   1bd60:	cmp	r1, #111	; 0x6f
   1bd64:	bne	1bd98 <dta_type_info+0x44>
   1bd68:	sub	ip, r0, #251	; 0xfb
   1bd6c:	uxth	r1, ip
   1bd70:	cmp	r1, #5
   1bd74:	bcs	1be48 <dta_type_info+0xf4>
   1bd78:	mov	r0, #1
   1bd7c:	uxtah	lr, r0, ip
   1bd80:	sxth	r0, ip
   1bd84:	ldr	r1, [pc, #268]	; 1be98 <dta_type_info+0x144>
   1bd88:	add	r1, pc, r1
   1bd8c:	ldr	r0, [r1, r0, lsl #2]
   1bd90:	mov	ip, #0
   1bd94:	b	1be50 <dta_type_info+0xfc>
   1bd98:	cmp	r1, #117	; 0x75
   1bd9c:	bne	1bde8 <dta_type_info+0x94>
   1bda0:	movw	r1, #65526	; 0xfff6
   1bda4:	sub	r1, r0, r1
   1bda8:	mov	ip, #0
   1bdac:	cmp	r1, #4
   1bdb0:	bhi	1be34 <dta_type_info+0xe0>
   1bdb4:	mov	r0, #1
   1bdb8:	add	r4, pc, #8
   1bdbc:	ldr	r1, [r4, r1, lsl #2]
   1bdc0:	mov	lr, #1
   1bdc4:	add	pc, r4, r1
   1bdc8:	.word	0x00000014
   1bdcc:	.word	0x000000ac
   1bdd0:	.word	0x000000b8
   1bdd4:	.word	0x000000c4
   1bdd8:	.word	0x00000088
   1bddc:	mov	lr, #5
   1bde0:	mov	r0, #8
   1bde4:	b	1be50 <dta_type_info+0xfc>
   1bde8:	cmp	r0, #126	; 0x7e
   1bdec:	bhi	1be2c <dta_type_info+0xd8>
   1bdf0:	sub	r0, r0, #98	; 0x62
   1bdf4:	uxth	r1, r0
   1bdf8:	cmp	r1, #11
   1bdfc:	bcs	1be68 <dta_type_info+0x114>
   1be00:	sxth	r1, r0
   1be04:	ldr	r0, [pc, #144]	; 1be9c <dta_type_info+0x148>
   1be08:	add	r0, pc, r0
   1be0c:	ldr	lr, [r0, r1, lsl #2]
   1be10:	ldr	r0, [pc, #136]	; 1bea0 <dta_type_info+0x14c>
   1be14:	add	r0, pc, r0
   1be18:	ldr	r0, [r0, r1, lsl #2]
   1be1c:	ldr	r4, [pc, #128]	; 1bea4 <dta_type_info+0x150>
   1be20:	add	r4, pc, r4
   1be24:	ldr	ip, [r4, r1, lsl #2]
   1be28:	b	1be50 <dta_type_info+0xfc>
   1be2c:	sub	r0, r0, #127	; 0x7f
   1be30:	b	1be48 <dta_type_info+0xf4>
   1be34:	cmp	r0, #32768	; 0x8000
   1be38:	bne	1be48 <dta_type_info+0xf4>
   1be3c:	mov	lr, #6
   1be40:	mov	r0, #8
   1be44:	b	1be50 <dta_type_info+0xfc>
   1be48:	mov	ip, #0
   1be4c:	mov	lr, #0
   1be50:	cmp	r2, #0
   1be54:	strne	r0, [r2]
   1be58:	cmp	r3, #0
   1be5c:	strne	lr, [r3]
   1be60:	mov	r0, ip
   1be64:	pop	{r4, sl, fp, pc}
   1be68:	mov	r0, #0
   1be6c:	mov	ip, #5
   1be70:	b	1be4c <dta_type_info+0xf8>
   1be74:	mov	r0, #4
   1be78:	mov	lr, #4
   1be7c:	b	1be50 <dta_type_info+0xfc>
   1be80:	mov	lr, #3
   1be84:	mov	r0, #4
   1be88:	b	1be50 <dta_type_info+0xfc>
   1be8c:	mov	r0, #2
   1be90:	mov	lr, #2
   1be94:	b	1be50 <dta_type_info+0xfc>
   1be98:	.word	0x0000b6e0
   1be9c:	.word	0x0000b6e0
   1bea0:	.word	0x0000b6a4
   1bea4:	.word	0x0000b668

0001bea8 <dta_parse_timestamp>:
   1bea8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1beac:	add	fp, sp, #28
   1beb0:	sub	sp, sp, #36	; 0x24
   1beb4:	sub	sp, sp, #1024	; 0x400
   1beb8:	mov	r4, r3
   1bebc:	mov	r7, r1
   1bec0:	add	r1, r0, r1
   1bec4:	str	r1, [sp, #20]
   1bec8:	cmp	r7, #0
   1becc:	str	r0, [sp, #16]
   1bed0:	beq	1c1dc <dta_parse_timestamp+0x334>
   1bed4:	str	r7, [sp, #8]
   1bed8:	str	r4, [sp, #12]
   1bedc:	mov	sl, #1
   1bee0:	mov	r6, #0
   1bee4:	mov	r9, r0
   1bee8:	mov	lr, r0
   1beec:	str	lr, [sp, #28]
   1bef0:	ldr	r0, [pc, #952]	; 1c2b0 <dta_parse_timestamp+0x408>
   1bef4:	add	r0, pc, r0
   1bef8:	ldrb	lr, [r0, sl]
   1befc:	ldr	r0, [pc, #944]	; 1c2b4 <dta_parse_timestamp+0x40c>
   1bf00:	add	r0, pc, r0
   1bf04:	ldrb	r9, [r0, sl]
   1bf08:	ldr	r0, [pc, #936]	; 1c2b8 <dta_parse_timestamp+0x410>
   1bf0c:	add	r0, pc, r0
   1bf10:	ldrb	r0, [r0, sl]
   1bf14:	ldr	r1, [pc, #928]	; 1c2bc <dta_parse_timestamp+0x414>
   1bf18:	add	r1, pc, r1
   1bf1c:	add	r7, r1, r0
   1bf20:	cmp	lr, #0
   1bf24:	beq	1bf88 <dta_parse_timestamp+0xe0>
   1bf28:	str	r6, [sp, #24]
   1bf2c:	add	r8, r7, lr
   1bf30:	sub	r0, r8, #1
   1bf34:	cmp	r0, r7
   1bf38:	bcc	1bf7c <dta_parse_timestamp+0xd4>
   1bf3c:	ldr	r1, [sp, #28]
   1bf40:	ldrb	r6, [r1]
   1bf44:	mov	r3, r7
   1bf48:	sub	ip, r0, r3
   1bf4c:	mov	r1, r3
   1bf50:	ldrb	r5, [r1, ip, asr #1]!
   1bf54:	cmp	r6, r5
   1bf58:	bcs	1bf6c <dta_parse_timestamp+0xc4>
   1bf5c:	sub	r0, r1, #1
   1bf60:	cmp	r0, r3
   1bf64:	bcs	1bf48 <dta_parse_timestamp+0xa0>
   1bf68:	b	1bf7c <dta_parse_timestamp+0xd4>
   1bf6c:	bls	1c014 <dta_parse_timestamp+0x16c>
   1bf70:	add	r3, r1, #1
   1bf74:	cmp	r0, r3
   1bf78:	bcs	1bf48 <dta_parse_timestamp+0xa0>
   1bf7c:	add	r9, lr, r9
   1bf80:	ldr	r6, [sp, #24]
   1bf84:	b	1bf8c <dta_parse_timestamp+0xe4>
   1bf88:	mov	r8, r7
   1bf8c:	ldr	r0, [pc, #812]	; 1c2c0 <dta_parse_timestamp+0x418>
   1bf90:	add	r0, pc, r0
   1bf94:	ldrb	r7, [r0, sl]
   1bf98:	cmp	r7, #0
   1bf9c:	mvn	r4, #1
   1bfa0:	ldr	lr, [sp, #28]
   1bfa4:	beq	1c008 <dta_parse_timestamp+0x160>
   1bfa8:	add	r0, r8, r7, lsl #1
   1bfac:	sub	r0, r0, #2
   1bfb0:	cmp	r0, r8
   1bfb4:	bcc	1c03c <dta_parse_timestamp+0x194>
   1bfb8:	mov	ip, r6
   1bfbc:	ldrb	r6, [lr]
   1bfc0:	mov	r1, r8
   1bfc4:	sub	r3, r0, r1
   1bfc8:	and	r5, r4, r3, asr #1
   1bfcc:	mov	r3, r1
   1bfd0:	ldrb	r5, [r3, r5]!
   1bfd4:	cmp	r6, r5
   1bfd8:	bcs	1bfec <dta_parse_timestamp+0x144>
   1bfdc:	sub	r0, r3, #2
   1bfe0:	cmp	r0, r1
   1bfe4:	bcs	1bfc4 <dta_parse_timestamp+0x11c>
   1bfe8:	b	1c038 <dta_parse_timestamp+0x190>
   1bfec:	ldrb	r1, [r3, #1]
   1bff0:	cmp	r6, r1
   1bff4:	bls	1c030 <dta_parse_timestamp+0x188>
   1bff8:	add	r1, r3, #2
   1bffc:	cmp	r0, r1
   1c000:	bcs	1bfc4 <dta_parse_timestamp+0x11c>
   1c004:	b	1c038 <dta_parse_timestamp+0x190>
   1c008:	ldr	r3, [pc, #692]	; 1c2c4 <dta_parse_timestamp+0x41c>
   1c00c:	add	r3, pc, r3
   1c010:	b	1c048 <dta_parse_timestamp+0x1a0>
   1c014:	sub	r0, r9, r7
   1c018:	add	r9, r0, r1
   1c01c:	ldr	r6, [sp, #24]
   1c020:	ldr	lr, [sp, #28]
   1c024:	ldr	r3, [pc, #696]	; 1c2e4 <dta_parse_timestamp+0x43c>
   1c028:	add	r3, pc, r3
   1c02c:	b	1c048 <dta_parse_timestamp+0x1a0>
   1c030:	sub	r0, r3, r8
   1c034:	asr	r7, r0, #1
   1c038:	mov	r6, ip
   1c03c:	ldr	r3, [pc, #644]	; 1c2c8 <dta_parse_timestamp+0x420>
   1c040:	add	r3, pc, r3
   1c044:	add	r9, r7, r9
   1c048:	ldr	r0, [pc, #636]	; 1c2cc <dta_parse_timestamp+0x424>
   1c04c:	add	r0, pc, r0
   1c050:	ldrb	r4, [r0, r9]
   1c054:	ldr	r0, [pc, #628]	; 1c2d0 <dta_parse_timestamp+0x428>
   1c058:	add	r0, pc, r0
   1c05c:	ldrb	r0, [r0, r4]
   1c060:	cmp	r0, #0
   1c064:	ldrbne	r1, [r3, r0]
   1c068:	cmpne	r1, #0
   1c06c:	beq	1c1ac <dta_parse_timestamp+0x304>
   1c070:	add	r0, r3, r0
   1c074:	add	r7, r0, #1
   1c078:	rsb	r3, r1, #0
   1c07c:	ldrb	r0, [r7]
   1c080:	cmp	r0, #16
   1c084:	bhi	1c1a0 <dta_parse_timestamp+0x2f8>
   1c088:	add	r1, pc, #4
   1c08c:	ldr	r0, [r1, r0, lsl #2]
   1c090:	add	pc, r1, r0
   1c094:	.word	0x00000044
   1c098:	.word	0x00000058
   1c09c:	.word	0x00000060
   1c0a0:	.word	0x00000068
   1c0a4:	.word	0x00000074
   1c0a8:	.word	0x00000080
   1c0ac:	.word	0x0000008c
   1c0b0:	.word	0x00000098
   1c0b4:	.word	0x000000a4
   1c0b8:	.word	0x000000b0
   1c0bc:	.word	0x000000bc
   1c0c0:	.word	0x000000c8
   1c0c4:	.word	0x000000d4
   1c0c8:	.word	0x000000e0
   1c0cc:	.word	0x000000ec
   1c0d0:	.word	0x000000f8
   1c0d4:	.word	0x00000108
   1c0d8:	ldrb	r0, [lr]
   1c0dc:	add	r1, r6, r6, lsl #2
   1c0e0:	add	r0, r0, r1, lsl #1
   1c0e4:	sub	r6, r0, #48	; 0x30
   1c0e8:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c0ec:	mov	r6, #0
   1c0f0:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c0f4:	str	r6, [r2, #12]
   1c0f8:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c0fc:	mov	r0, #0
   1c100:	str	r0, [r2, #16]
   1c104:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c108:	mov	r0, #1
   1c10c:	str	r0, [r2, #16]
   1c110:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c114:	mov	r0, #2
   1c118:	str	r0, [r2, #16]
   1c11c:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c120:	mov	r0, #3
   1c124:	str	r0, [r2, #16]
   1c128:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c12c:	mov	r0, #4
   1c130:	str	r0, [r2, #16]
   1c134:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c138:	mov	r0, #5
   1c13c:	str	r0, [r2, #16]
   1c140:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c144:	mov	r0, #6
   1c148:	str	r0, [r2, #16]
   1c14c:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c150:	mov	r0, #7
   1c154:	str	r0, [r2, #16]
   1c158:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c15c:	mov	r0, #8
   1c160:	str	r0, [r2, #16]
   1c164:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c168:	mov	r0, #9
   1c16c:	str	r0, [r2, #16]
   1c170:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c174:	mov	r0, #10
   1c178:	str	r0, [r2, #16]
   1c17c:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c180:	mov	r0, #11
   1c184:	str	r0, [r2, #16]
   1c188:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c18c:	movw	r0, #1900	; 0x76c
   1c190:	sub	r0, r6, r0
   1c194:	str	r0, [r2, #20]
   1c198:	b	1c1a0 <dta_parse_timestamp+0x2f8>
   1c19c:	str	r6, [r2, #8]
   1c1a0:	add	r7, r7, #1
   1c1a4:	adds	r3, r3, #1
   1c1a8:	bne	1c07c <dta_parse_timestamp+0x1d4>
   1c1ac:	ldr	r0, [pc, #288]	; 1c2d4 <dta_parse_timestamp+0x42c>
   1c1b0:	add	r0, pc, r0
   1c1b4:	ldrb	sl, [r0, r4]
   1c1b8:	cmp	r4, #1
   1c1bc:	beq	1c240 <dta_parse_timestamp+0x398>
   1c1c0:	add	lr, lr, #1
   1c1c4:	ldr	r0, [sp, #20]
   1c1c8:	cmp	lr, r0
   1c1cc:	bne	1beec <dta_parse_timestamp+0x44>
   1c1d0:	ldr	r4, [sp, #12]
   1c1d4:	ldr	r7, [sp, #8]
   1c1d8:	b	1c1ec <dta_parse_timestamp+0x344>
   1c1dc:	mov	r6, #0
   1c1e0:	mov	sl, #1
   1c1e4:	mov	r9, r0
   1c1e8:	mov	lr, r0
   1c1ec:	ldr	r0, [sp, #20]
   1c1f0:	cmp	lr, r0
   1c1f4:	bne	1c248 <dta_parse_timestamp+0x3a0>
   1c1f8:	ldr	r0, [pc, #216]	; 1c2d8 <dta_parse_timestamp+0x430>
   1c1fc:	add	r0, pc, r0
   1c200:	ldrb	r0, [r0, sl]
   1c204:	ldr	r3, [pc, #208]	; 1c2dc <dta_parse_timestamp+0x434>
   1c208:	add	r3, pc, r3
   1c20c:	ldrb	r1, [r3, r0]
   1c210:	cmp	r1, #0
   1c214:	beq	1c248 <dta_parse_timestamp+0x3a0>
   1c218:	add	r0, r3, r0
   1c21c:	add	r0, r0, #1
   1c220:	rsb	r3, r1, #0
   1c224:	ldrb	r1, [r0]
   1c228:	cmp	r1, #17
   1c22c:	streq	r6, [r2, #4]
   1c230:	add	r0, r0, #1
   1c234:	adds	r3, r3, #1
   1c238:	bne	1c224 <dta_parse_timestamp+0x37c>
   1c23c:	b	1c248 <dta_parse_timestamp+0x3a0>
   1c240:	ldr	r4, [sp, #12]
   1c244:	ldr	r7, [sp, #8]
   1c248:	cmp	sl, #44	; 0x2c
   1c24c:	blt	1c260 <dta_parse_timestamp+0x3b8>
   1c250:	mov	r1, #0
   1c254:	ldr	r0, [sp, #20]
   1c258:	cmp	lr, r0
   1c25c:	beq	1c2a4 <dta_parse_timestamp+0x3fc>
   1c260:	cmp	r4, #0
   1c264:	beq	1c2a0 <dta_parse_timestamp+0x3f8>
   1c268:	ldr	r5, [fp, #8]
   1c26c:	str	r7, [sp]
   1c270:	ldr	r0, [sp, #16]
   1c274:	str	r0, [sp, #4]
   1c278:	add	r6, sp, #32
   1c27c:	ldr	r2, [pc, #92]	; 1c2e0 <dta_parse_timestamp+0x438>
   1c280:	add	r2, pc, r2
   1c284:	mov	r0, r6
   1c288:	mov	r1, #1024	; 0x400
   1c28c:	mov	r3, r7
   1c290:	bl	4d04 <snprintf@plt>
   1c294:	mov	r0, r6
   1c298:	mov	r1, r5
   1c29c:	blx	r4
   1c2a0:	mov	r1, #29
   1c2a4:	mov	r0, r1
   1c2a8:	sub	sp, fp, #28
   1c2ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2b0:	.word	0x0000b6f0
   1c2b4:	.word	0x0000b6b7
   1c2b8:	.word	0x0000b67e
   1c2bc:	.word	0x0000b5fc
   1c2c0:	.word	0x0000b681
   1c2c4:	.word	0x0000b743
   1c2c8:	.word	0x0000b70f
   1c2cc:	.word	0x0000b5f2
   1c2d0:	.word	0x0000b6bb
   1c2d4:	.word	0x0000b527
   1c2d8:	.word	0x0000b579
   1c2dc:	.word	0x0000b547
   1c2e0:	.word	0x0000b522
   1c2e4:	.word	0x0000b727

0001c2e8 <readstat_parse_dta>:
   1c2e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c2ec:	add	fp, sp, #28
   1c2f0:	sub	sp, sp, #84	; 0x54
   1c2f4:	mov	r8, r2
   1c2f8:	mov	r6, r1
   1c2fc:	mov	r7, r0
   1c300:	ldr	r5, [r0, #32]
   1c304:	mov	r0, r5
   1c308:	bl	4ff8 <dta_ctx_alloc@plt>
   1c30c:	mov	r4, r0
   1c310:	ldr	r2, [r5]
   1c314:	ldr	r1, [r5, #20]
   1c318:	mov	r0, r6
   1c31c:	blx	r2
   1c320:	cmn	r0, #1
   1c324:	beq	1c3e0 <readstat_parse_dta+0xf8>
   1c328:	ldr	r3, [r5, #12]
   1c32c:	ldr	r2, [r5, #20]
   1c330:	sub	r0, fp, #32
   1c334:	mov	r1, #4
   1c338:	blx	r3
   1c33c:	mov	r6, #2
   1c340:	cmp	r0, #4
   1c344:	bne	1c584 <readstat_parse_dta+0x29c>
   1c348:	ldr	r3, [r5, #8]
   1c34c:	ldr	r2, [r5, #20]
   1c350:	mov	r0, #0
   1c354:	mov	r1, #2
   1c358:	blx	r3
   1c35c:	cmn	r0, #1
   1c360:	beq	1c3e8 <readstat_parse_dta+0x100>
   1c364:	mov	r9, r0
   1c368:	ldr	r3, [r5, #8]
   1c36c:	ldr	r2, [r5, #20]
   1c370:	mov	r0, #0
   1c374:	mov	r1, #0
   1c378:	blx	r3
   1c37c:	cmn	r0, #1
   1c380:	beq	1c420 <readstat_parse_dta+0x138>
   1c384:	sub	r0, fp, #32
   1c388:	ldr	r1, [pc, #1060]	; 1c7b4 <readstat_parse_dta+0x4cc>
   1c38c:	add	r1, pc, r1
   1c390:	mov	r2, #4
   1c394:	bl	4f98 <strncmp@plt>
   1c398:	add	r1, sp, #24
   1c39c:	cmp	r0, #0
   1c3a0:	beq	1c45c <readstat_parse_dta+0x174>
   1c3a4:	mov	r0, r4
   1c3a8:	bl	1ca74 <dta_read_header>
   1c3ac:	cmp	r0, #0
   1c3b0:	bne	1c46c <readstat_parse_dta+0x184>
   1c3b4:	ldr	ip, [r7, #36]	; 0x24
   1c3b8:	ldr	r3, [r7, #40]	; 0x28
   1c3bc:	ldr	r2, [sp, #30]
   1c3c0:	ldrh	r1, [sp, #28]
   1c3c4:	ldrb	r6, [sp, #24]
   1c3c8:	ldrb	r0, [sp, #25]
   1c3cc:	stm	sp, {r0, r6, ip}
   1c3d0:	str	r3, [sp, #12]
   1c3d4:	mov	r0, r4
   1c3d8:	mov	r3, #0
   1c3dc:	b	1c498 <readstat_parse_dta+0x1b0>
   1c3e0:	mov	r6, #1
   1c3e4:	b	1c584 <readstat_parse_dta+0x29c>
   1c3e8:	ldr	r2, [r4, #264]	; 0x108
   1c3ec:	mov	r6, #15
   1c3f0:	cmp	r2, #0
   1c3f4:	beq	1c584 <readstat_parse_dta+0x29c>
   1c3f8:	mov	r0, #14
   1c3fc:	ldr	r1, [pc, #936]	; 1c7ac <readstat_parse_dta+0x4c4>
   1c400:	add	r1, pc, r1
   1c404:	vld1.64	{d16-d17}, [r1], r0
   1c408:	add	r0, r4, #288	; 0x120
   1c40c:	vld1.16	{d18-d19}, [r1]
   1c410:	vst1.8	{d16-d17}, [r0]
   1c414:	movw	r1, #302	; 0x12e
   1c418:	add	r1, r4, r1
   1c41c:	b	1c44c <readstat_parse_dta+0x164>
   1c420:	ldr	r2, [r4, #264]	; 0x108
   1c424:	mov	r6, #15
   1c428:	cmp	r2, #0
   1c42c:	beq	1c584 <readstat_parse_dta+0x29c>
   1c430:	ldr	r1, [pc, #888]	; 1c7b0 <readstat_parse_dta+0x4c8>
   1c434:	add	r1, pc, r1
   1c438:	vld1.64	{d16-d17}, [r1]!
   1c43c:	add	r0, r4, #288	; 0x120
   1c440:	vld1.64	{d18-d19}, [r1]
   1c444:	vst1.8	{d16-d17}, [r0]
   1c448:	add	r1, r4, #304	; 0x130
   1c44c:	vst1.8	{d18-d19}, [r1]
   1c450:	ldr	r1, [r4, #276]	; 0x114
   1c454:	blx	r2
   1c458:	b	1c584 <readstat_parse_dta+0x29c>
   1c45c:	mov	r0, r4
   1c460:	bl	1c7bc <dta_read_xmlish_header>
   1c464:	cmp	r0, #0
   1c468:	beq	1c474 <readstat_parse_dta+0x18c>
   1c46c:	mov	r6, r0
   1c470:	b	1c584 <readstat_parse_dta+0x29c>
   1c474:	ldr	ip, [r7, #36]	; 0x24
   1c478:	ldr	lr, [r7, #40]	; 0x28
   1c47c:	add	r3, sp, #28
   1c480:	ldm	r3, {r1, r2, r3}
   1c484:	ldrb	r0, [sp, #24]
   1c488:	ldrb	r6, [sp, #25]
   1c48c:	str	r6, [sp]
   1c490:	stmib	sp, {r0, ip, lr}
   1c494:	mov	r0, r4
   1c498:	bl	4c5c <dta_ctx_init@plt>
   1c49c:	mov	r6, r0
   1c4a0:	cmp	r0, #0
   1c4a4:	bne	1c584 <readstat_parse_dta+0x29c>
   1c4a8:	str	r9, [r4, #272]	; 0x110
   1c4ac:	str	r8, [r4, #276]	; 0x114
   1c4b0:	add	r0, r7, #16
   1c4b4:	vld1.32	{d16-d17}, [r0]
   1c4b8:	add	r0, r4, #256	; 0x100
   1c4bc:	mov	r1, #48	; 0x30
   1c4c0:	mov	r2, r7
   1c4c4:	vld1.32	{d18-d19}, [r2], r1
   1c4c8:	vst1.32	{d16-d17}, [r0]
   1c4cc:	add	r0, r4, #240	; 0xf0
   1c4d0:	str	r0, [sp, #20]
   1c4d4:	vst1.32	{d18-d19}, [r0]
   1c4d8:	ldr	r0, [r2]
   1c4dc:	cmp	r0, #1
   1c4e0:	asrge	r1, r0, #31
   1c4e4:	strdge	r0, [r4, #176]	; 0xb0
   1c4e8:	mov	r9, r4
   1c4ec:	ldr	r2, [r9, #152]!	; 0x98
   1c4f0:	ldr	r3, [r9, #4]
   1c4f4:	ldr	r1, [r9, #28]
   1c4f8:	mov	r6, r9
   1c4fc:	ldr	r0, [r6, #24]!
   1c500:	subs	r0, r2, r0
   1c504:	sbc	r1, r3, r1
   1c508:	cmn	r1, #1
   1c50c:	strdle	r2, [r6]
   1c510:	movle	r0, #0
   1c514:	movle	r1, #0
   1c518:	mov	sl, r4
   1c51c:	str	r0, [sl, #168]!	; 0xa8
   1c520:	str	r1, [sl, #4]
   1c524:	ldr	r2, [r7, #44]	; 0x2c
   1c528:	cmp	r2, #1
   1c52c:	blt	1c540 <readstat_parse_dta+0x258>
   1c530:	subs	r0, r2, r0
   1c534:	rscs	r0, r1, r2, asr #31
   1c538:	asrlt	r3, r2, #31
   1c53c:	strdlt	r2, [sl]
   1c540:	mov	r0, r4
   1c544:	bl	1caec <dta_update_progress>
   1c548:	mov	r6, r0
   1c54c:	cmp	r0, #0
   1c550:	bne	1c584 <readstat_parse_dta+0x29c>
   1c554:	mov	r0, r4
   1c558:	bl	1cb6c <dta_read_label_and_timestamp>
   1c55c:	mov	r6, r0
   1c560:	cmp	r0, #0
   1c564:	bne	1c584 <readstat_parse_dta+0x29c>
   1c568:	ldr	r1, [pc, #584]	; 1c7b8 <readstat_parse_dta+0x4d0>
   1c56c:	add	r1, pc, r1
   1c570:	mov	r0, r4
   1c574:	bl	1ce98 <dta_read_tag>
   1c578:	mov	r6, r0
   1c57c:	cmp	r0, #0
   1c580:	beq	1c5ac <readstat_parse_dta+0x2c4>
   1c584:	ldr	r1, [r5, #4]
   1c588:	ldr	r0, [r5, #20]
   1c58c:	blx	r1
   1c590:	cmp	r4, #0
   1c594:	beq	1c5a0 <readstat_parse_dta+0x2b8>
   1c598:	mov	r0, r4
   1c59c:	bl	48f0 <dta_ctx_free@plt>
   1c5a0:	mov	r0, r6
   1c5a4:	sub	sp, fp, #28
   1c5a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5ac:	ldr	r0, [sp, #20]
   1c5b0:	ldr	r0, [r0]
   1c5b4:	cmp	r0, #0
   1c5b8:	beq	1c648 <readstat_parse_dta+0x360>
   1c5bc:	ldrd	r0, [sl]
   1c5c0:	str	r1, [sp, #28]
   1c5c4:	str	r0, [sp, #24]
   1c5c8:	ldrd	r0, [r4, #144]	; 0x90
   1c5cc:	str	r1, [sp, #32]
   1c5d0:	asr	r1, r1, #31
   1c5d4:	str	r1, [sp, #36]	; 0x24
   1c5d8:	ldr	r1, [r4, #12]
   1c5dc:	str	r1, [sp, #44]	; 0x2c
   1c5e0:	str	r1, [sp, #40]	; 0x28
   1c5e4:	mov	r1, #0
   1c5e8:	str	r1, [sp, #56]	; 0x38
   1c5ec:	str	r0, [sp, #48]	; 0x30
   1c5f0:	asr	r2, r0, #31
   1c5f4:	str	r2, [sp, #52]	; 0x34
   1c5f8:	ldr	r2, [r4, #232]	; 0xe8
   1c5fc:	str	r1, [sp, #64]	; 0x40
   1c600:	str	r2, [sp, #60]	; 0x3c
   1c604:	ldr	r2, [r4]
   1c608:	str	r1, [sp, #72]	; 0x48
   1c60c:	str	r2, [sp, #68]	; 0x44
   1c610:	rsbs	r2, r0, #117	; 0x75
   1c614:	sbcs	r0, r1, r0, asr #31
   1c618:	movwlt	r1, #1
   1c61c:	ldrb	r0, [sp, #76]	; 0x4c
   1c620:	and	r0, r0, #254	; 0xfe
   1c624:	orr	r0, r0, r1
   1c628:	strb	r0, [sp, #76]	; 0x4c
   1c62c:	ldr	r2, [r4, #240]	; 0xf0
   1c630:	add	r0, sp, #24
   1c634:	mov	r1, r8
   1c638:	blx	r2
   1c63c:	mov	r6, #4
   1c640:	cmp	r0, #0
   1c644:	bne	1c584 <readstat_parse_dta+0x29c>
   1c648:	mov	r0, r4
   1c64c:	bl	1cf1c <dta_read_map>
   1c650:	mov	r6, #2
   1c654:	cmp	r0, #0
   1c658:	bne	1c584 <readstat_parse_dta+0x29c>
   1c65c:	mov	r0, r4
   1c660:	bl	1cfd4 <dta_read_descriptors>
   1c664:	mov	r6, r0
   1c668:	cmp	r0, #0
   1c66c:	bne	1c584 <readstat_parse_dta+0x29c>
   1c670:	ldr	r0, [r4, #148]	; 0x94
   1c674:	cmp	r0, #1
   1c678:	blt	1c6d8 <readstat_parse_dta+0x3f0>
   1c67c:	mov	sl, #0
   1c680:	add	r8, sp, #24
   1c684:	mov	r7, #0
   1c688:	ldr	r0, [r4, #28]
   1c68c:	add	r0, r0, sl
   1c690:	ldrh	r0, [r0]
   1c694:	mov	r1, r4
   1c698:	mov	r2, r8
   1c69c:	mov	r3, #0
   1c6a0:	bl	4c74 <dta_type_info@plt>
   1c6a4:	cmp	r0, #0
   1c6a8:	bne	1c46c <readstat_parse_dta+0x184>
   1c6ac:	ldr	r0, [r4, #160]	; 0xa0
   1c6b0:	ldr	r1, [sp, #24]
   1c6b4:	add	r0, r0, r1
   1c6b8:	str	r0, [r4, #160]	; 0xa0
   1c6bc:	add	sl, sl, #2
   1c6c0:	add	r7, r7, #1
   1c6c4:	ldr	r0, [r4, #148]	; 0x94
   1c6c8:	cmp	r7, r0
   1c6cc:	blt	1c688 <readstat_parse_dta+0x3a0>
   1c6d0:	cmp	r0, #0
   1c6d4:	bgt	1c6e8 <readstat_parse_dta+0x400>
   1c6d8:	ldrd	r0, [r9]
   1c6dc:	subs	r0, r0, #1
   1c6e0:	sbcs	r0, r1, #0
   1c6e4:	blt	1c6f4 <readstat_parse_dta+0x40c>
   1c6e8:	ldr	r0, [r4, #160]	; 0xa0
   1c6ec:	cmp	r0, #0
   1c6f0:	beq	1c79c <readstat_parse_dta+0x4b4>
   1c6f4:	mov	r0, r4
   1c6f8:	bl	1d22c <dta_handle_variables>
   1c6fc:	mov	r6, r0
   1c700:	cmp	r0, #0
   1c704:	bne	1c584 <readstat_parse_dta+0x29c>
   1c708:	mov	r0, r4
   1c70c:	bl	1d35c <dta_read_expansion_fields>
   1c710:	mov	r6, r0
   1c714:	cmp	r0, #0
   1c718:	bne	1c584 <readstat_parse_dta+0x29c>
   1c71c:	ldrb	r0, [r4, #192]	; 0xc0
   1c720:	tst	r0, #4
   1c724:	bne	1c768 <readstat_parse_dta+0x480>
   1c728:	ldr	r3, [r5, #8]
   1c72c:	ldr	r2, [r5, #20]
   1c730:	mov	r0, #0
   1c734:	mov	r1, #1
   1c738:	blx	r3
   1c73c:	asr	r1, r0, #31
   1c740:	strd	r0, [r4, #120]	; 0x78
   1c744:	cmn	r0, #1
   1c748:	beq	1c7a4 <readstat_parse_dta+0x4bc>
   1c74c:	ldr	r1, [r4, #160]	; 0xa0
   1c750:	ldrd	r2, [r9]
   1c754:	umull	r2, r7, r2, r1
   1c758:	adds	r2, r2, r0
   1c75c:	mla	r1, r3, r1, r7
   1c760:	adc	r3, r1, r0, asr #31
   1c764:	strd	r2, [r4, #136]	; 0x88
   1c768:	mov	r0, r4
   1c76c:	bl	1d714 <dta_read_strls>
   1c770:	mov	r6, r0
   1c774:	cmp	r0, #0
   1c778:	bne	1c584 <readstat_parse_dta+0x29c>
   1c77c:	mov	r0, r4
   1c780:	bl	1d98c <dta_read_data>
   1c784:	mov	r6, r0
   1c788:	cmp	r0, #0
   1c78c:	bne	1c584 <readstat_parse_dta+0x29c>
   1c790:	mov	r0, r4
   1c794:	bl	1da88 <dta_handle_value_labels>
   1c798:	b	1c46c <readstat_parse_dta+0x184>
   1c79c:	mov	r6, #5
   1c7a0:	b	1c584 <readstat_parse_dta+0x29c>
   1c7a4:	mov	r6, #15
   1c7a8:	b	1c584 <readstat_parse_dta+0x29c>
   1c7ac:	.word	0x0000b3d0
   1c7b0:	.word	0x0000b3bc
   1c7b4:	.word	0x0000b484
   1c7b8:	.word	0x0000b2a9

0001c7bc <dta_read_xmlish_header>:
   1c7bc:	push	{r4, r5, r6, r7, fp, lr}
   1c7c0:	add	fp, sp, #16
   1c7c4:	sub	sp, sp, #24
   1c7c8:	mov	r4, r1
   1c7cc:	mov	r5, r0
   1c7d0:	ldr	r1, [pc, #604]	; 1ca34 <dta_read_xmlish_header+0x278>
   1c7d4:	add	r1, pc, r1
   1c7d8:	bl	1ce98 <dta_read_tag>
   1c7dc:	mov	r7, r0
   1c7e0:	cmp	r0, #0
   1c7e4:	bne	1c88c <dta_read_xmlish_header+0xd0>
   1c7e8:	ldr	r1, [pc, #584]	; 1ca38 <dta_read_xmlish_header+0x27c>
   1c7ec:	add	r1, pc, r1
   1c7f0:	mov	r0, r5
   1c7f4:	bl	1ce98 <dta_read_tag>
   1c7f8:	mov	r7, r0
   1c7fc:	cmp	r0, #0
   1c800:	bne	1c88c <dta_read_xmlish_header+0xd0>
   1c804:	ldr	r0, [pc, #560]	; 1ca3c <dta_read_xmlish_header+0x280>
   1c808:	add	r0, pc, r0
   1c80c:	str	r0, [sp]
   1c810:	ldr	r1, [pc, #552]	; 1ca40 <dta_read_xmlish_header+0x284>
   1c814:	add	r1, pc, r1
   1c818:	sub	r2, fp, #19
   1c81c:	mov	r0, r5
   1c820:	mov	r3, #3
   1c824:	bl	1df68 <dta_read_chunk>
   1c828:	mov	r7, r0
   1c82c:	cmp	r0, #0
   1c830:	bne	1c88c <dta_read_xmlish_header+0xd0>
   1c834:	ldrb	r0, [fp, #-19]	; 0xffffffed
   1c838:	ldrb	r1, [fp, #-18]	; 0xffffffee
   1c83c:	ldrb	r2, [fp, #-17]	; 0xffffffef
   1c840:	mov	r3, #100	; 0x64
   1c844:	mul	r0, r0, r3
   1c848:	add	r1, r1, r1, lsl #2
   1c84c:	add	r0, r0, r1, lsl #1
   1c850:	add	r0, r0, r2
   1c854:	add	r0, r0, #48	; 0x30
   1c858:	strb	r0, [r4]
   1c85c:	ldr	r0, [pc, #480]	; 1ca44 <dta_read_xmlish_header+0x288>
   1c860:	add	r0, pc, r0
   1c864:	str	r0, [sp]
   1c868:	ldr	r1, [pc, #472]	; 1ca48 <dta_read_xmlish_header+0x28c>
   1c86c:	add	r1, pc, r1
   1c870:	add	r2, sp, #18
   1c874:	mov	r0, r5
   1c878:	mov	r3, #3
   1c87c:	bl	1df68 <dta_read_chunk>
   1c880:	mov	r7, r0
   1c884:	cmp	r0, #0
   1c888:	beq	1c898 <dta_read_xmlish_header+0xdc>
   1c88c:	mov	r0, r7
   1c890:	sub	sp, fp, #16
   1c894:	pop	{r4, r5, r6, r7, fp, pc}
   1c898:	add	r0, sp, #18
   1c89c:	ldr	r1, [pc, #424]	; 1ca4c <dta_read_xmlish_header+0x290>
   1c8a0:	add	r1, pc, r1
   1c8a4:	mov	r2, #3
   1c8a8:	bl	4f98 <strncmp@plt>
   1c8ac:	cmp	r0, #0
   1c8b0:	beq	1c8dc <dta_read_xmlish_header+0x120>
   1c8b4:	add	r0, sp, #18
   1c8b8:	ldr	r1, [pc, #400]	; 1ca50 <dta_read_xmlish_header+0x294>
   1c8bc:	add	r1, pc, r1
   1c8c0:	mov	r2, #3
   1c8c4:	bl	4f98 <strncmp@plt>
   1c8c8:	mov	r7, #5
   1c8cc:	cmp	r0, #0
   1c8d0:	bne	1c88c <dta_read_xmlish_header+0xd0>
   1c8d4:	mov	r7, #2
   1c8d8:	b	1c8e0 <dta_read_xmlish_header+0x124>
   1c8dc:	mov	r7, #1
   1c8e0:	strb	r7, [r4, #1]
   1c8e4:	bl	492c <machine_is_little_endian@plt>
   1c8e8:	mov	r6, r0
   1c8ec:	cmp	r7, #2
   1c8f0:	eoreq	r6, r6, #1
   1c8f4:	ldrb	r0, [r4]
   1c8f8:	cmp	r0, #119	; 0x77
   1c8fc:	bcc	1c940 <dta_read_xmlish_header+0x184>
   1c900:	ldr	r0, [pc, #332]	; 1ca54 <dta_read_xmlish_header+0x298>
   1c904:	add	r0, pc, r0
   1c908:	str	r0, [sp]
   1c90c:	ldr	r1, [pc, #324]	; 1ca58 <dta_read_xmlish_header+0x29c>
   1c910:	add	r1, pc, r1
   1c914:	add	r2, sp, #8
   1c918:	mov	r0, r5
   1c91c:	mov	r3, #4
   1c920:	bl	1df68 <dta_read_chunk>
   1c924:	cmp	r0, #0
   1c928:	bne	1c96c <dta_read_xmlish_header+0x1b0>
   1c92c:	ldr	r0, [sp, #8]
   1c930:	cmp	r6, #0
   1c934:	beq	1c984 <dta_read_xmlish_header+0x1c8>
   1c938:	bl	480c <byteswap4@plt>
   1c93c:	b	1c984 <dta_read_xmlish_header+0x1c8>
   1c940:	ldr	r0, [pc, #276]	; 1ca5c <dta_read_xmlish_header+0x2a0>
   1c944:	add	r0, pc, r0
   1c948:	str	r0, [sp]
   1c94c:	ldr	r1, [pc, #268]	; 1ca60 <dta_read_xmlish_header+0x2a4>
   1c950:	add	r1, pc, r1
   1c954:	add	r2, sp, #8
   1c958:	mov	r0, r5
   1c95c:	mov	r3, #2
   1c960:	bl	1df68 <dta_read_chunk>
   1c964:	cmp	r0, #0
   1c968:	beq	1c974 <dta_read_xmlish_header+0x1b8>
   1c96c:	mov	r7, r0
   1c970:	b	1c88c <dta_read_xmlish_header+0xd0>
   1c974:	ldrh	r0, [sp, #8]
   1c978:	cmp	r6, #0
   1c97c:	beq	1c984 <dta_read_xmlish_header+0x1c8>
   1c980:	bl	4920 <byteswap2@plt>
   1c984:	str	r0, [r4, #4]
   1c988:	ldrb	r0, [r4]
   1c98c:	cmp	r0, #118	; 0x76
   1c990:	bcc	1c9e4 <dta_read_xmlish_header+0x228>
   1c994:	ldr	r0, [pc, #200]	; 1ca64 <dta_read_xmlish_header+0x2a8>
   1c998:	add	r0, pc, r0
   1c99c:	str	r0, [sp]
   1c9a0:	ldr	r1, [pc, #192]	; 1ca68 <dta_read_xmlish_header+0x2ac>
   1c9a4:	add	r1, pc, r1
   1c9a8:	add	r2, sp, #8
   1c9ac:	mov	r0, r5
   1c9b0:	mov	r3, #8
   1c9b4:	bl	1df68 <dta_read_chunk>
   1c9b8:	mov	r7, r0
   1c9bc:	cmp	r0, #0
   1c9c0:	bne	1c88c <dta_read_xmlish_header+0xd0>
   1c9c4:	ldr	r0, [sp, #8]
   1c9c8:	ldr	r1, [sp, #12]
   1c9cc:	cmp	r6, #0
   1c9d0:	beq	1c9d8 <dta_read_xmlish_header+0x21c>
   1c9d4:	bl	47f4 <byteswap8@plt>
   1c9d8:	str	r0, [r4, #8]
   1c9dc:	str	r1, [r4, #12]
   1c9e0:	b	1c88c <dta_read_xmlish_header+0xd0>
   1c9e4:	ldr	r0, [pc, #128]	; 1ca6c <dta_read_xmlish_header+0x2b0>
   1c9e8:	add	r0, pc, r0
   1c9ec:	str	r0, [sp]
   1c9f0:	ldr	r1, [pc, #120]	; 1ca70 <dta_read_xmlish_header+0x2b4>
   1c9f4:	add	r1, pc, r1
   1c9f8:	add	r2, sp, #8
   1c9fc:	mov	r0, r5
   1ca00:	mov	r3, #4
   1ca04:	bl	1df68 <dta_read_chunk>
   1ca08:	mov	r7, r0
   1ca0c:	cmp	r0, #0
   1ca10:	bne	1c88c <dta_read_xmlish_header+0xd0>
   1ca14:	ldr	r0, [sp, #8]
   1ca18:	cmp	r6, #0
   1ca1c:	beq	1ca24 <dta_read_xmlish_header+0x268>
   1ca20:	bl	480c <byteswap4@plt>
   1ca24:	mov	r1, #0
   1ca28:	str	r1, [r4, #12]
   1ca2c:	str	r0, [r4, #8]
   1ca30:	b	1c88c <dta_read_xmlish_header+0xd0>
   1ca34:	.word	0x0000b04b
   1ca38:	.word	0x0000b03f
   1ca3c:	.word	0x0000b331
   1ca40:	.word	0x0000b020
   1ca44:	.word	0x0000afea
   1ca48:	.word	0x0000afd2
   1ca4c:	.word	0x0000afb7
   1ca50:	.word	0x0000af9f
   1ca54:	.word	0x0000af5f
   1ca58:	.word	0x0000af4f
   1ca5c:	.word	0x0000af1f
   1ca60:	.word	0x0000af0f
   1ca64:	.word	0x0000aed4
   1ca68:	.word	0x0000aec4
   1ca6c:	.word	0x0000ae84
   1ca70:	.word	0x0000ae74

0001ca74 <dta_read_header>:
   1ca74:	push	{r4, r5, fp, lr}
   1ca78:	add	fp, sp, #8
   1ca7c:	mov	r4, r1
   1ca80:	ldr	r0, [r0, #280]	; 0x118
   1ca84:	ldr	r3, [r0, #12]
   1ca88:	ldr	r2, [r0, #20]
   1ca8c:	mov	r0, r1
   1ca90:	mov	r1, #10
   1ca94:	blx	r3
   1ca98:	mov	r1, r0
   1ca9c:	mov	r0, #2
   1caa0:	cmp	r1, #10
   1caa4:	popne	{r4, r5, fp, pc}
   1caa8:	ldrb	r0, [r4, #1]
   1caac:	sub	r0, r0, #2
   1cab0:	clz	r0, r0
   1cab4:	lsr	r5, r0, #5
   1cab8:	bl	492c <machine_is_little_endian@plt>
   1cabc:	cmp	r0, r5
   1cac0:	bne	1cacc <dta_read_header+0x58>
   1cac4:	ldr	r0, [r4, #6]!
   1cac8:	b	1cae0 <dta_read_header+0x6c>
   1cacc:	ldrh	r0, [r4, #4]
   1cad0:	bl	4920 <byteswap2@plt>
   1cad4:	strh	r0, [r4, #4]
   1cad8:	ldr	r0, [r4, #6]!
   1cadc:	bl	480c <byteswap4@plt>
   1cae0:	str	r0, [r4]
   1cae4:	mov	r0, #0
   1cae8:	pop	{r4, r5, fp, pc}

0001caec <dta_update_progress>:
   1caec:	push	{r4, sl, fp, lr}
   1caf0:	add	fp, sp, #8
   1caf4:	vpush	{d8}
   1caf8:	mov	r4, r0
   1cafc:	ldrd	r0, [r0, #168]	; 0xa8
   1cb00:	subs	r2, r0, #1
   1cb04:	sbcs	r2, r1, #0
   1cb08:	blt	1cb30 <dta_update_progress+0x44>
   1cb0c:	bl	24c28 <__aeabi_l2d>
   1cb10:	ldrd	r2, [r4, #184]	; 0xb8
   1cb14:	vmov	d8, r0, r1
   1cb18:	mov	r0, r2
   1cb1c:	mov	r1, r3
   1cb20:	bl	24c28 <__aeabi_l2d>
   1cb24:	vmov	d16, r0, r1
   1cb28:	vdiv.f64	d0, d16, d8
   1cb2c:	b	1cb34 <dta_update_progress+0x48>
   1cb30:	vmov.i32	d0, #0	; 0x00000000
   1cb34:	ldr	r1, [r4, #268]	; 0x10c
   1cb38:	cmp	r1, #0
   1cb3c:	beq	1cb60 <dta_update_progress+0x74>
   1cb40:	ldr	r0, [r4, #276]	; 0x114
   1cb44:	blx	r1
   1cb48:	mov	r1, r0
   1cb4c:	mov	r0, #4
   1cb50:	cmp	r1, #0
   1cb54:	moveq	r0, #0
   1cb58:	vpop	{d8}
   1cb5c:	pop	{r4, sl, fp, pc}
   1cb60:	mov	r0, #0
   1cb64:	vpop	{d8}
   1cb68:	pop	{r4, sl, fp, pc}

0001cb6c <dta_read_label_and_timestamp>:
   1cb6c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1cb70:	add	fp, sp, #24
   1cb74:	sub	sp, sp, #56	; 0x38
   1cb78:	mov	r4, r0
   1cb7c:	ldr	r6, [r0, #280]	; 0x118
   1cb80:	mov	r0, #0
   1cb84:	strh	r0, [fp, #-26]	; 0xffffffe6
   1cb88:	strb	r0, [fp, #-27]	; 0xffffffe5
   1cb8c:	vmov.i32	q8, #0	; 0x00000000
   1cb90:	add	r0, sp, #8
   1cb94:	add	r1, r0, #28
   1cb98:	vst1.32	{d16-d17}, [r1]
   1cb9c:	add	r1, r0, #16
   1cba0:	vst1.64	{d16-d17}, [r1]
   1cba4:	mov	r1, #32
   1cba8:	vst1.64	{d16-d17}, [r0], r1
   1cbac:	mvn	r1, #0
   1cbb0:	str	r1, [r0]
   1cbb4:	ldrb	r0, [r4, #192]	; 0xc0
   1cbb8:	tst	r0, #4
   1cbbc:	bne	1cd30 <dta_read_label_and_timestamp+0x1c4>
   1cbc0:	ldr	r0, [r4, #4]
   1cbc4:	strh	r0, [fp, #-26]	; 0xffffffe6
   1cbc8:	ldrh	r0, [fp, #-26]	; 0xffffffe6
   1cbcc:	add	r0, r0, #1
   1cbd0:	bl	4cb0 <readstat_malloc@plt>
   1cbd4:	cmp	r0, #0
   1cbd8:	beq	1cd98 <dta_read_label_and_timestamp+0x22c>
   1cbdc:	mov	r5, r0
   1cbe0:	ldr	r3, [r6, #12]
   1cbe4:	ldr	r2, [r6, #20]
   1cbe8:	ldrh	r1, [fp, #-26]	; 0xffffffe6
   1cbec:	blx	r3
   1cbf0:	mov	r7, #2
   1cbf4:	ldrh	r1, [fp, #-26]	; 0xffffffe6
   1cbf8:	cmp	r0, r1
   1cbfc:	bne	1cda4 <dta_read_label_and_timestamp+0x238>
   1cc00:	ldrb	r0, [r4, #192]	; 0xc0
   1cc04:	mov	r9, #0
   1cc08:	tst	r0, #4
   1cc0c:	bne	1cc2c <dta_read_label_and_timestamp+0xc0>
   1cc10:	mov	r0, #0
   1cc14:	mov	r2, r5
   1cc18:	strb	r0, [r2, r1]!
   1cc1c:	ldrb	r9, [r2, #-1]
   1cc20:	mov	r0, r5
   1cc24:	bl	4c8c <strlen@plt>
   1cc28:	strh	r0, [fp, #-26]	; 0xffffffe6
   1cc2c:	ldrh	r0, [fp, #-26]	; 0xffffffe6
   1cc30:	mov	r7, #1
   1cc34:	orr	r0, r7, r0, lsl #2
   1cc38:	bl	4cb0 <readstat_malloc@plt>
   1cc3c:	str	r0, [r4]
   1cc40:	cmp	r0, #0
   1cc44:	beq	1cda0 <dta_read_label_and_timestamp+0x234>
   1cc48:	ldr	r1, [r4, #236]	; 0xec
   1cc4c:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   1cc50:	str	r1, [sp]
   1cc54:	orr	r1, r7, r3, lsl #2
   1cc58:	mov	r2, r5
   1cc5c:	bl	4cbc <readstat_convert@plt>
   1cc60:	mov	r7, r0
   1cc64:	cmp	r0, #0
   1cc68:	bne	1cda4 <dta_read_label_and_timestamp+0x238>
   1cc6c:	ldrb	r0, [r4, #192]	; 0xc0
   1cc70:	tst	r0, #4
   1cc74:	bne	1cde4 <dta_read_label_and_timestamp+0x278>
   1cc78:	ldr	r0, [r4, #16]
   1cc7c:	strb	r0, [fp, #-27]	; 0xffffffe5
   1cc80:	tst	r0, #255	; 0xff
   1cc84:	beq	1ce48 <dta_read_label_and_timestamp+0x2dc>
   1cc88:	uxtb	r0, r0
   1cc8c:	bl	4cb0 <readstat_malloc@plt>
   1cc90:	mov	r8, r0
   1cc94:	ldr	r3, [r6, #12]
   1cc98:	ldr	r2, [r6, #20]
   1cc9c:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   1cca0:	blx	r3
   1cca4:	mov	r7, #2
   1cca8:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   1ccac:	cmp	r0, r1
   1ccb0:	bne	1ce60 <dta_read_label_and_timestamp+0x2f4>
   1ccb4:	ldrb	r0, [r4, #192]	; 0xc0
   1ccb8:	tst	r0, #4
   1ccbc:	subeq	r0, r1, #1
   1ccc0:	strbeq	r0, [fp, #-27]	; 0xffffffe5
   1ccc4:	ldrb	r0, [r8]
   1ccc8:	cmp	r0, #0
   1cccc:	beq	1ce4c <dta_read_label_and_timestamp+0x2e0>
   1ccd0:	cmp	r9, #0
   1ccd4:	beq	1ccfc <dta_read_label_and_timestamp+0x190>
   1ccd8:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   1ccdc:	sub	r2, r0, #1
   1cce0:	ldrb	r0, [r8, r2]
   1cce4:	cmp	r0, #0
   1cce8:	bne	1ccfc <dta_read_label_and_timestamp+0x190>
   1ccec:	add	r0, r8, #1
   1ccf0:	mov	r1, r8
   1ccf4:	bl	4914 <memmove@plt>
   1ccf8:	strb	r9, [r8]
   1ccfc:	ldr	r3, [r4, #264]	; 0x108
   1cd00:	ldr	r0, [r4, #276]	; 0x114
   1cd04:	ldrb	r1, [fp, #-27]	; 0xffffffe5
   1cd08:	str	r0, [sp]
   1cd0c:	add	r2, sp, #8
   1cd10:	mov	r0, r8
   1cd14:	bl	4d7c <dta_parse_timestamp@plt>
   1cd18:	cmp	r0, #0
   1cd1c:	beq	1ce78 <dta_read_label_and_timestamp+0x30c>
   1cd20:	mov	r7, r0
   1cd24:	mov	r0, r5
   1cd28:	bl	4938 <free@plt>
   1cd2c:	b	1ce70 <dta_read_label_and_timestamp+0x304>
   1cd30:	ldr	r1, [pc, #336]	; 1ce88 <dta_read_label_and_timestamp+0x31c>
   1cd34:	add	r1, pc, r1
   1cd38:	mov	r0, r4
   1cd3c:	bl	1ce98 <dta_read_tag>
   1cd40:	mov	r7, r0
   1cd44:	cmp	r0, #0
   1cd48:	bne	1cdac <dta_read_label_and_timestamp+0x240>
   1cd4c:	ldr	r0, [r4, #8]
   1cd50:	cmp	r0, #1
   1cd54:	beq	1cdb8 <dta_read_label_and_timestamp+0x24c>
   1cd58:	cmp	r0, #2
   1cd5c:	bne	1cbc8 <dta_read_label_and_timestamp+0x5c>
   1cd60:	ldr	r3, [r6, #12]
   1cd64:	ldr	r2, [r6, #20]
   1cd68:	sub	r0, fp, #26
   1cd6c:	mov	r7, #2
   1cd70:	mov	r1, #2
   1cd74:	blx	r3
   1cd78:	cmp	r0, #2
   1cd7c:	bne	1cdac <dta_read_label_and_timestamp+0x240>
   1cd80:	ldrb	r1, [r4, #192]	; 0xc0
   1cd84:	ldrh	r0, [fp, #-26]	; 0xffffffe6
   1cd88:	tst	r1, #1
   1cd8c:	beq	1cbc4 <dta_read_label_and_timestamp+0x58>
   1cd90:	bl	4920 <byteswap2@plt>
   1cd94:	b	1cbc4 <dta_read_label_and_timestamp+0x58>
   1cd98:	mov	r7, #3
   1cd9c:	b	1cdac <dta_read_label_and_timestamp+0x240>
   1cda0:	mov	r7, #3
   1cda4:	mov	r0, r5
   1cda8:	bl	4938 <free@plt>
   1cdac:	mov	r0, r7
   1cdb0:	sub	sp, fp, #24
   1cdb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1cdb8:	ldr	r3, [r6, #12]
   1cdbc:	ldr	r2, [r6, #20]
   1cdc0:	add	r0, sp, #7
   1cdc4:	mov	r1, #1
   1cdc8:	blx	r3
   1cdcc:	cmp	r0, #1
   1cdd0:	bne	1cddc <dta_read_label_and_timestamp+0x270>
   1cdd4:	ldrb	r0, [sp, #7]
   1cdd8:	b	1cbc4 <dta_read_label_and_timestamp+0x58>
   1cddc:	mov	r7, #2
   1cde0:	b	1cdac <dta_read_label_and_timestamp+0x240>
   1cde4:	ldr	r1, [pc, #160]	; 1ce8c <dta_read_label_and_timestamp+0x320>
   1cde8:	add	r1, pc, r1
   1cdec:	mov	r0, r4
   1cdf0:	bl	1ce98 <dta_read_tag>
   1cdf4:	mov	r7, r0
   1cdf8:	cmp	r0, #0
   1cdfc:	bne	1cda4 <dta_read_label_and_timestamp+0x238>
   1ce00:	ldr	r1, [pc, #136]	; 1ce90 <dta_read_label_and_timestamp+0x324>
   1ce04:	add	r1, pc, r1
   1ce08:	mov	r0, r4
   1ce0c:	bl	1ce98 <dta_read_tag>
   1ce10:	mov	r7, r0
   1ce14:	cmp	r0, #0
   1ce18:	bne	1cda4 <dta_read_label_and_timestamp+0x238>
   1ce1c:	ldr	r3, [r6, #12]
   1ce20:	ldr	r2, [r6, #20]
   1ce24:	sub	r0, fp, #27
   1ce28:	mov	r1, #1
   1ce2c:	blx	r3
   1ce30:	cmp	r0, #1
   1ce34:	mov	r7, #2
   1ce38:	bne	1cda4 <dta_read_label_and_timestamp+0x238>
   1ce3c:	ldrb	r0, [fp, #-27]	; 0xffffffe5
   1ce40:	tst	r0, #255	; 0xff
   1ce44:	bne	1cc88 <dta_read_label_and_timestamp+0x11c>
   1ce48:	mov	r8, #0
   1ce4c:	ldr	r1, [pc, #64]	; 1ce94 <dta_read_label_and_timestamp+0x328>
   1ce50:	add	r1, pc, r1
   1ce54:	mov	r0, r4
   1ce58:	bl	1ce98 <dta_read_tag>
   1ce5c:	mov	r7, r0
   1ce60:	mov	r0, r5
   1ce64:	bl	4938 <free@plt>
   1ce68:	cmp	r8, #0
   1ce6c:	beq	1cdac <dta_read_label_and_timestamp+0x240>
   1ce70:	mov	r0, r8
   1ce74:	b	1cda8 <dta_read_label_and_timestamp+0x23c>
   1ce78:	add	r0, sp, #8
   1ce7c:	bl	48cc <mktime@plt>
   1ce80:	str	r0, [r4, #12]
   1ce84:	b	1ce4c <dta_read_label_and_timestamp+0x2e0>
   1ce88:	.word	0x0000ab3d
   1ce8c:	.word	0x0000aa91
   1ce90:	.word	0x0000aa7e
   1ce94:	.word	0x0000aa3e

0001ce98 <dta_read_tag>:
   1ce98:	push	{r4, r5, r6, sl, fp, lr}
   1ce9c:	add	fp, sp, #16
   1cea0:	sub	sp, sp, #256	; 0x100
   1cea4:	mov	r4, r1
   1cea8:	mov	r6, r0
   1ceac:	ldr	r0, [r0, #284]	; 0x11c
   1ceb0:	cmp	r0, #0
   1ceb4:	beq	1cec8 <dta_read_tag+0x30>
   1ceb8:	ldrb	r1, [r6, #192]	; 0xc0
   1cebc:	mov	r0, #0
   1cec0:	tst	r1, #4
   1cec4:	beq	1cf14 <dta_read_tag+0x7c>
   1cec8:	mov	r0, r4
   1cecc:	bl	4c8c <strlen@plt>
   1ced0:	mov	r5, r0
   1ced4:	ldr	r0, [r6, #280]	; 0x118
   1ced8:	ldr	r3, [r0, #12]
   1cedc:	ldr	r2, [r0, #20]
   1cee0:	mov	r0, sp
   1cee4:	mov	r1, r5
   1cee8:	blx	r3
   1ceec:	mov	r1, r0
   1cef0:	mov	r0, #2
   1cef4:	cmp	r1, r5
   1cef8:	bne	1cf14 <dta_read_tag+0x7c>
   1cefc:	mov	r0, sp
   1cf00:	mov	r1, r4
   1cf04:	mov	r2, r5
   1cf08:	bl	4f98 <strncmp@plt>
   1cf0c:	cmp	r0, #0
   1cf10:	movwne	r0, #5
   1cf14:	sub	sp, fp, #16
   1cf18:	pop	{r4, r5, r6, sl, fp, pc}

0001cf1c <dta_read_map>:
   1cf1c:	push	{r4, r5, fp, lr}
   1cf20:	add	fp, sp, #8
   1cf24:	sub	sp, sp, #120	; 0x78
   1cf28:	mov	r4, r0
   1cf2c:	ldrb	r0, [r0, #192]	; 0xc0
   1cf30:	mov	r5, #0
   1cf34:	tst	r0, #4
   1cf38:	beq	1cfc0 <dta_read_map+0xa4>
   1cf3c:	ldr	r0, [pc, #136]	; 1cfcc <dta_read_map+0xb0>
   1cf40:	add	r0, pc, r0
   1cf44:	str	r0, [sp]
   1cf48:	ldr	r1, [pc, #128]	; 1cfd0 <dta_read_map+0xb4>
   1cf4c:	add	r1, pc, r1
   1cf50:	add	r2, sp, #8
   1cf54:	mov	r0, r4
   1cf58:	mov	r3, #112	; 0x70
   1cf5c:	bl	1df68 <dta_read_chunk>
   1cf60:	mov	r5, r0
   1cf64:	cmp	r0, #0
   1cf68:	bne	1cfc0 <dta_read_map+0xa4>
   1cf6c:	ldrb	r2, [r4, #192]	; 0xc0
   1cf70:	ldr	r0, [sp, #80]	; 0x50
   1cf74:	ldr	r1, [sp, #84]	; 0x54
   1cf78:	tst	r2, #1
   1cf7c:	beq	1cf84 <dta_read_map+0x68>
   1cf80:	bl	47f4 <byteswap8@plt>
   1cf84:	strd	r0, [r4, #120]	; 0x78
   1cf88:	ldrb	r2, [r4, #192]	; 0xc0
   1cf8c:	ldr	r0, [sp, #88]	; 0x58
   1cf90:	ldr	r1, [sp, #92]	; 0x5c
   1cf94:	tst	r2, #1
   1cf98:	beq	1cfa0 <dta_read_map+0x84>
   1cf9c:	bl	47f4 <byteswap8@plt>
   1cfa0:	strd	r0, [r4, #128]	; 0x80
   1cfa4:	ldrb	r2, [r4, #192]	; 0xc0
   1cfa8:	ldr	r0, [sp, #96]	; 0x60
   1cfac:	ldr	r1, [sp, #100]	; 0x64
   1cfb0:	tst	r2, #1
   1cfb4:	beq	1cfbc <dta_read_map+0xa0>
   1cfb8:	bl	47f4 <byteswap8@plt>
   1cfbc:	strd	r0, [r4, #136]	; 0x88
   1cfc0:	mov	r0, r5
   1cfc4:	sub	sp, fp, #8
   1cfc8:	pop	{r4, r5, fp, pc}
   1cfcc:	.word	0x0000a961
   1cfd0:	.word	0x0000a94f

0001cfd4 <dta_read_descriptors>:
   1cfd4:	push	{r4, r5, r6, r7, fp, lr}
   1cfd8:	add	fp, sp, #16
   1cfdc:	sub	sp, sp, #8
   1cfe0:	mov	r5, r0
   1cfe4:	ldr	r0, [r0, #24]
   1cfe8:	ldr	r1, [r5, #148]	; 0x94
   1cfec:	mul	r7, r0, r1
   1cff0:	cmp	r1, #0
   1cff4:	beq	1d014 <dta_read_descriptors+0x40>
   1cff8:	mov	r0, r7
   1cffc:	bl	4cb0 <readstat_malloc@plt>
   1d000:	mov	r4, r0
   1d004:	cmp	r0, #0
   1d008:	bne	1d018 <dta_read_descriptors+0x44>
   1d00c:	mov	r6, #3
   1d010:	b	1d1f0 <dta_read_descriptors+0x21c>
   1d014:	mov	r4, #0
   1d018:	ldr	r0, [pc, #476]	; 1d1fc <dta_read_descriptors+0x228>
   1d01c:	add	r0, pc, r0
   1d020:	str	r0, [sp]
   1d024:	ldr	r1, [pc, #468]	; 1d200 <dta_read_descriptors+0x22c>
   1d028:	add	r1, pc, r1
   1d02c:	mov	r0, r5
   1d030:	mov	r2, r4
   1d034:	mov	r3, r7
   1d038:	bl	1df68 <dta_read_chunk>
   1d03c:	mov	r6, r0
   1d040:	cmp	r0, #0
   1d044:	bne	1d1e0 <dta_read_descriptors+0x20c>
   1d048:	ldr	r0, [r5, #24]
   1d04c:	cmp	r0, #2
   1d050:	beq	1d098 <dta_read_descriptors+0xc4>
   1d054:	cmp	r0, #1
   1d058:	bne	1d0f8 <dta_read_descriptors+0x124>
   1d05c:	ldr	r0, [r5, #148]	; 0x94
   1d060:	cmp	r0, #1
   1d064:	blt	1d0f8 <dta_read_descriptors+0x124>
   1d068:	mov	r0, #0
   1d06c:	mov	r1, #0
   1d070:	ldrb	r2, [r4, r1]
   1d074:	ldr	r3, [r5, #28]
   1d078:	add	r3, r3, r0
   1d07c:	strh	r2, [r3]
   1d080:	add	r0, r0, #2
   1d084:	add	r1, r1, #1
   1d088:	ldr	r2, [r5, #148]	; 0x94
   1d08c:	cmp	r1, r2
   1d090:	blt	1d070 <dta_read_descriptors+0x9c>
   1d094:	b	1d0f8 <dta_read_descriptors+0x124>
   1d098:	ldr	r0, [r5, #28]
   1d09c:	mov	r1, r4
   1d0a0:	mov	r2, r7
   1d0a4:	bl	4998 <memcpy@plt>
   1d0a8:	ldrb	r0, [r5, #192]	; 0xc0
   1d0ac:	tst	r0, #1
   1d0b0:	beq	1d0f8 <dta_read_descriptors+0x124>
   1d0b4:	ldr	r0, [r5, #148]	; 0x94
   1d0b8:	cmp	r0, #1
   1d0bc:	blt	1d0f8 <dta_read_descriptors+0x124>
   1d0c0:	mov	r6, #0
   1d0c4:	mov	r7, #0
   1d0c8:	ldr	r0, [r5, #28]
   1d0cc:	add	r0, r0, r6
   1d0d0:	ldrh	r0, [r0]
   1d0d4:	bl	4920 <byteswap2@plt>
   1d0d8:	ldr	r1, [r5, #28]
   1d0dc:	add	r1, r1, r6
   1d0e0:	strh	r0, [r1]
   1d0e4:	add	r6, r6, #2
   1d0e8:	add	r7, r7, #1
   1d0ec:	ldr	r0, [r5, #148]	; 0x94
   1d0f0:	cmp	r7, r0
   1d0f4:	blt	1d0c8 <dta_read_descriptors+0xf4>
   1d0f8:	ldr	r2, [r5, #36]	; 0x24
   1d0fc:	ldr	r3, [r5, #40]	; 0x28
   1d100:	ldr	r0, [pc, #252]	; 1d204 <dta_read_descriptors+0x230>
   1d104:	add	r0, pc, r0
   1d108:	str	r0, [sp]
   1d10c:	ldr	r1, [pc, #244]	; 1d208 <dta_read_descriptors+0x234>
   1d110:	add	r1, pc, r1
   1d114:	mov	r0, r5
   1d118:	bl	1df68 <dta_read_chunk>
   1d11c:	mov	r6, r0
   1d120:	cmp	r0, #0
   1d124:	bne	1d1e0 <dta_read_descriptors+0x20c>
   1d128:	ldr	r2, [r5, #44]	; 0x2c
   1d12c:	ldr	r3, [r5, #48]	; 0x30
   1d130:	ldr	r0, [pc, #212]	; 1d20c <dta_read_descriptors+0x238>
   1d134:	add	r0, pc, r0
   1d138:	str	r0, [sp]
   1d13c:	ldr	r1, [pc, #204]	; 1d210 <dta_read_descriptors+0x23c>
   1d140:	add	r1, pc, r1
   1d144:	mov	r0, r5
   1d148:	bl	1df68 <dta_read_chunk>
   1d14c:	mov	r6, r0
   1d150:	cmp	r0, #0
   1d154:	bne	1d1e0 <dta_read_descriptors+0x20c>
   1d158:	ldr	r2, [r5, #52]	; 0x34
   1d15c:	ldr	r3, [r5, #56]	; 0x38
   1d160:	ldr	r0, [pc, #172]	; 1d214 <dta_read_descriptors+0x240>
   1d164:	add	r0, pc, r0
   1d168:	str	r0, [sp]
   1d16c:	ldr	r1, [pc, #164]	; 1d218 <dta_read_descriptors+0x244>
   1d170:	add	r1, pc, r1
   1d174:	mov	r0, r5
   1d178:	bl	1df68 <dta_read_chunk>
   1d17c:	mov	r6, r0
   1d180:	cmp	r0, #0
   1d184:	bne	1d1e0 <dta_read_descriptors+0x20c>
   1d188:	ldr	r2, [r5, #60]	; 0x3c
   1d18c:	ldr	r3, [r5, #64]	; 0x40
   1d190:	ldr	r0, [pc, #132]	; 1d21c <dta_read_descriptors+0x248>
   1d194:	add	r0, pc, r0
   1d198:	str	r0, [sp]
   1d19c:	ldr	r1, [pc, #124]	; 1d220 <dta_read_descriptors+0x24c>
   1d1a0:	add	r1, pc, r1
   1d1a4:	mov	r0, r5
   1d1a8:	bl	1df68 <dta_read_chunk>
   1d1ac:	mov	r6, r0
   1d1b0:	cmp	r0, #0
   1d1b4:	bne	1d1e0 <dta_read_descriptors+0x20c>
   1d1b8:	ldr	r2, [r5, #68]	; 0x44
   1d1bc:	ldr	r3, [r5, #72]	; 0x48
   1d1c0:	ldr	r0, [pc, #92]	; 1d224 <dta_read_descriptors+0x250>
   1d1c4:	add	r0, pc, r0
   1d1c8:	str	r0, [sp]
   1d1cc:	ldr	r1, [pc, #84]	; 1d228 <dta_read_descriptors+0x254>
   1d1d0:	add	r1, pc, r1
   1d1d4:	mov	r0, r5
   1d1d8:	bl	1df68 <dta_read_chunk>
   1d1dc:	mov	r6, r0
   1d1e0:	cmp	r4, #0
   1d1e4:	beq	1d1f0 <dta_read_descriptors+0x21c>
   1d1e8:	mov	r0, r4
   1d1ec:	bl	4938 <free@plt>
   1d1f0:	mov	r0, r6
   1d1f4:	sub	sp, fp, #16
   1d1f8:	pop	{r4, r5, r6, r7, fp, pc}
   1d1fc:	.word	0x0000a89d
   1d200:	.word	0x0000a880
   1d204:	.word	0x0000a7d2
   1d208:	.word	0x0000a7bb
   1d20c:	.word	0x0000a7b9
   1d210:	.word	0x0000a7a2
   1d214:	.word	0x0000a79f
   1d218:	.word	0x0000a789
   1d21c:	.word	0x0000a78e
   1d220:	.word	0x0000a76e
   1d224:	.word	0x0000a785
   1d228:	.word	0x0000a767

0001d22c <dta_handle_variables>:
   1d22c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d230:	add	fp, sp, #28
   1d234:	sub	sp, sp, #12
   1d238:	mov	r4, r0
   1d23c:	ldr	r1, [r0, #248]	; 0xf8
   1d240:	mov	r0, #0
   1d244:	cmp	r1, #0
   1d248:	beq	1d348 <dta_handle_variables+0x11c>
   1d24c:	ldr	r1, [r4, #148]	; 0x94
   1d250:	cmp	r1, #1
   1d254:	blt	1d348 <dta_handle_variables+0x11c>
   1d258:	mov	r9, #0
   1d25c:	add	r8, sp, #8
   1d260:	add	sl, sp, #4
   1d264:	mov	r7, #0
   1d268:	mov	r5, #0
   1d26c:	ldr	r0, [r4, #28]
   1d270:	add	r0, r0, r5, lsl #1
   1d274:	ldrh	r0, [r0]
   1d278:	mov	r1, r4
   1d27c:	mov	r2, r8
   1d280:	mov	r3, sl
   1d284:	bl	4c74 <dta_type_info@plt>
   1d288:	cmp	r0, #0
   1d28c:	bne	1d348 <dta_handle_variables+0x11c>
   1d290:	ldr	r0, [sp, #4]
   1d294:	cmp	r0, #6
   1d298:	beq	1d2b0 <dta_handle_variables+0x84>
   1d29c:	cmp	r0, #0
   1d2a0:	ldreq	r0, [sp, #8]
   1d2a4:	addeq	r0, r0, #1
   1d2a8:	streq	r0, [sp, #8]
   1d2ac:	b	1d2b8 <dta_handle_variables+0x8c>
   1d2b0:	str	r9, [sp, #8]
   1d2b4:	str	r9, [sp, #4]
   1d2b8:	ldr	r3, [sp, #4]
   1d2bc:	ldr	r0, [sp, #8]
   1d2c0:	str	r0, [sp]
   1d2c4:	mov	r0, r4
   1d2c8:	mov	r1, r5
   1d2cc:	mov	r2, r7
   1d2d0:	bl	1dfc8 <dta_init_variable>
   1d2d4:	ldr	r1, [r4, #228]	; 0xe4
   1d2d8:	str	r0, [r1, r5, lsl #2]
   1d2dc:	ldr	r2, [r4, #60]	; 0x3c
   1d2e0:	ldr	r0, [r4, #84]	; 0x54
   1d2e4:	ldr	r1, [r4, #228]	; 0xe4
   1d2e8:	ldr	r6, [r4, #248]	; 0xf8
   1d2ec:	ldr	r1, [r1, r5, lsl #2]
   1d2f0:	mul	r0, r0, r5
   1d2f4:	ldrb	r0, [r2, r0]!
   1d2f8:	cmp	r0, #0
   1d2fc:	moveq	r2, r0
   1d300:	ldr	r3, [r4, #276]	; 0x114
   1d304:	mov	r0, r5
   1d308:	blx	r6
   1d30c:	cmp	r0, #2
   1d310:	beq	1d324 <dta_handle_variables+0xf8>
   1d314:	cmp	r0, #1
   1d318:	beq	1d350 <dta_handle_variables+0x124>
   1d31c:	add	r7, r7, #1
   1d320:	b	1d334 <dta_handle_variables+0x108>
   1d324:	ldr	r0, [r4, #228]	; 0xe4
   1d328:	ldr	r0, [r0, r5, lsl #2]
   1d32c:	mov	r1, #1
   1d330:	str	r1, [r0, #2144]	; 0x860
   1d334:	add	r5, r5, #1
   1d338:	ldr	r0, [r4, #148]	; 0x94
   1d33c:	cmp	r5, r0
   1d340:	blt	1d26c <dta_handle_variables+0x40>
   1d344:	mov	r0, #0
   1d348:	sub	sp, fp, #28
   1d34c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d350:	mov	r0, #4
   1d354:	sub	sp, fp, #28
   1d358:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001d35c <dta_read_expansion_fields>:
   1d35c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d360:	add	fp, sp, #28
   1d364:	sub	sp, sp, #28
   1d368:	mov	r4, r0
   1d36c:	ldr	r0, [r0, #92]	; 0x5c
   1d370:	cmp	r0, #0
   1d374:	beq	1d3c0 <dta_read_expansion_fields+0x64>
   1d378:	ldr	r7, [r4, #280]	; 0x118
   1d37c:	ldrb	r0, [r4, #192]	; 0xc0
   1d380:	tst	r0, #4
   1d384:	beq	1d394 <dta_read_expansion_fields+0x38>
   1d388:	ldr	r0, [r4, #244]	; 0xf4
   1d38c:	cmp	r0, #0
   1d390:	beq	1d620 <dta_read_expansion_fields+0x2c4>
   1d394:	ldr	r1, [pc, #868]	; 1d700 <dta_read_expansion_fields+0x3a4>
   1d398:	add	r1, pc, r1
   1d39c:	mov	r0, r4
   1d3a0:	bl	1ce98 <dta_read_tag>
   1d3a4:	mov	r8, r0
   1d3a8:	cmp	r0, #0
   1d3ac:	bne	1d6e0 <dta_read_expansion_fields+0x384>
   1d3b0:	add	r9, sp, #23
   1d3b4:	mov	r6, #0
   1d3b8:	mov	r5, #0
   1d3bc:	b	1d3ec <dta_read_expansion_fields+0x90>
   1d3c0:	mov	r8, #0
   1d3c4:	b	1d6e0 <dta_read_expansion_fields+0x384>
   1d3c8:	mov	r0, r4
   1d3cc:	ldr	r1, [pc, #816]	; 1d704 <dta_read_expansion_fields+0x3a8>
   1d3d0:	add	r1, pc, r1
   1d3d4:	bl	1ce98 <dta_read_tag>
   1d3d8:	mov	r8, r0
   1d3dc:	cmp	r0, #0
   1d3e0:	mov	r1, #2
   1d3e4:	movweq	r1, #4
   1d3e8:	b	1d604 <dta_read_expansion_fields+0x2a8>
   1d3ec:	ldrb	r0, [r4, #192]	; 0xc0
   1d3f0:	tst	r0, #4
   1d3f4:	bne	1d458 <dta_read_expansion_fields+0xfc>
   1d3f8:	ldr	r3, [r7, #12]
   1d3fc:	ldr	r2, [r7, #20]
   1d400:	add	r0, sp, #27
   1d404:	mov	r1, #1
   1d408:	blx	r3
   1d40c:	cmp	r0, #1
   1d410:	bne	1d688 <dta_read_expansion_fields+0x32c>
   1d414:	ldr	r0, [r4, #92]	; 0x5c
   1d418:	cmp	r0, #2
   1d41c:	bne	1d4b0 <dta_read_expansion_fields+0x154>
   1d420:	ldr	r3, [r7, #12]
   1d424:	ldr	r2, [r7, #20]
   1d428:	add	r0, sp, #20
   1d42c:	mov	r1, #2
   1d430:	blx	r3
   1d434:	cmp	r0, #2
   1d438:	bne	1d688 <dta_read_expansion_fields+0x32c>
   1d43c:	ldrb	r0, [r4, #192]	; 0xc0
   1d440:	ldrh	sl, [sp, #20]
   1d444:	tst	r0, #1
   1d448:	beq	1d4e8 <dta_read_expansion_fields+0x18c>
   1d44c:	mov	r0, sl
   1d450:	bl	4920 <byteswap2@plt>
   1d454:	b	1d4e4 <dta_read_expansion_fields+0x188>
   1d458:	ldr	r3, [r7, #12]
   1d45c:	ldr	r2, [r7, #20]
   1d460:	mov	r0, r9
   1d464:	mov	r1, #4
   1d468:	blx	r3
   1d46c:	mov	r1, #2
   1d470:	cmp	r0, #4
   1d474:	bne	1d544 <dta_read_expansion_fields+0x1e8>
   1d478:	ldr	r0, [sp, #23]
   1d47c:	movw	r2, #12092	; 0x2f3c
   1d480:	movt	r2, #26723	; 0x6863
   1d484:	cmp	r0, r2
   1d488:	beq	1d3c8 <dta_read_expansion_fields+0x6c>
   1d48c:	mov	r8, #5
   1d490:	ldr	r0, [sp, #23]
   1d494:	movw	r2, #25404	; 0x633c
   1d498:	movt	r2, #15976	; 0x3e68
   1d49c:	cmp	r0, r2
   1d4a0:	bne	1d604 <dta_read_expansion_fields+0x2a8>
   1d4a4:	mov	r0, #1
   1d4a8:	strb	r0, [sp, #27]
   1d4ac:	b	1d414 <dta_read_expansion_fields+0xb8>
   1d4b0:	ldr	r3, [r7, #12]
   1d4b4:	ldr	r2, [r7, #20]
   1d4b8:	add	r0, sp, #16
   1d4bc:	mov	r1, #4
   1d4c0:	blx	r3
   1d4c4:	cmp	r0, #4
   1d4c8:	bne	1d688 <dta_read_expansion_fields+0x32c>
   1d4cc:	ldrb	r0, [r4, #192]	; 0xc0
   1d4d0:	ldr	sl, [sp, #16]
   1d4d4:	tst	r0, #1
   1d4d8:	beq	1d4e8 <dta_read_expansion_fields+0x18c>
   1d4dc:	mov	r0, sl
   1d4e0:	bl	480c <byteswap4@plt>
   1d4e4:	mov	sl, r0
   1d4e8:	ldrb	r0, [sp, #27]
   1d4ec:	cmp	sl, #0
   1d4f0:	cmpeq	r0, #0
   1d4f4:	beq	1d698 <dta_read_expansion_fields+0x33c>
   1d4f8:	mov	r8, #32
   1d4fc:	cmp	sl, #1048576	; 0x100000
   1d500:	bhi	1d6d0 <dta_read_expansion_fields+0x374>
   1d504:	cmp	r0, #1
   1d508:	bne	1d6d0 <dta_read_expansion_fields+0x374>
   1d50c:	ldr	r0, [r4, #244]	; 0xf4
   1d510:	cmp	r0, #0
   1d514:	beq	1d524 <dta_read_expansion_fields+0x1c8>
   1d518:	ldr	r0, [r4, #96]	; 0x60
   1d51c:	cmp	sl, r0, lsl #1
   1d520:	bcs	1d54c <dta_read_expansion_fields+0x1f0>
   1d524:	ldr	r3, [r7, #8]
   1d528:	ldr	r2, [r7, #20]
   1d52c:	mov	r0, sl
   1d530:	mov	r1, #1
   1d534:	blx	r3
   1d538:	cmn	r0, #1
   1d53c:	bne	1d5e4 <dta_read_expansion_fields+0x288>
   1d540:	b	1d6a8 <dta_read_expansion_fields+0x34c>
   1d544:	mov	r8, #2
   1d548:	b	1d604 <dta_read_expansion_fields+0x2a8>
   1d54c:	add	r1, sl, #1
   1d550:	mov	r0, r5
   1d554:	bl	4d70 <readstat_realloc@plt>
   1d558:	cmp	r0, #0
   1d55c:	beq	1d6b8 <dta_read_expansion_fields+0x35c>
   1d560:	mov	r5, r0
   1d564:	mov	r6, #0
   1d568:	strb	r6, [r0, sl]
   1d56c:	ldr	r3, [r7, #12]
   1d570:	ldr	r2, [r7, #20]
   1d574:	mov	r1, sl
   1d578:	blx	r3
   1d57c:	cmp	r0, sl
   1d580:	bne	1d6cc <dta_read_expansion_fields+0x370>
   1d584:	str	r6, [sp, #12]
   1d588:	mov	r0, r5
   1d58c:	ldr	r1, [pc, #372]	; 1d708 <dta_read_expansion_fields+0x3ac>
   1d590:	add	r1, pc, r1
   1d594:	mov	r2, #4
   1d598:	bl	4f98 <strncmp@plt>
   1d59c:	cmp	r0, #0
   1d5a0:	bne	1d5e4 <dta_read_expansion_fields+0x288>
   1d5a4:	ldr	r0, [r4, #96]	; 0x60
   1d5a8:	add	r0, r5, r0
   1d5ac:	ldr	r1, [pc, #344]	; 1d70c <dta_read_expansion_fields+0x3b0>
   1d5b0:	add	r1, pc, r1
   1d5b4:	add	r2, sp, #12
   1d5b8:	bl	4d10 <__isoc99_sscanf@plt>
   1d5bc:	cmp	r0, #1
   1d5c0:	bne	1d5e4 <dta_read_expansion_fields+0x288>
   1d5c4:	ldr	r0, [r4, #96]	; 0x60
   1d5c8:	ldr	r3, [r4, #244]	; 0xf4
   1d5cc:	ldr	r2, [r4, #276]	; 0x114
   1d5d0:	add	r1, r5, r0, lsl #1
   1d5d4:	ldr	r0, [sp, #12]
   1d5d8:	blx	r3
   1d5dc:	cmp	r0, #0
   1d5e0:	bne	1d6ec <dta_read_expansion_fields+0x390>
   1d5e4:	mov	r0, r4
   1d5e8:	ldr	r1, [pc, #288]	; 1d710 <dta_read_expansion_fields+0x3b4>
   1d5ec:	add	r1, pc, r1
   1d5f0:	bl	1ce98 <dta_read_tag>
   1d5f4:	mov	r8, r0
   1d5f8:	cmp	r0, #0
   1d5fc:	mov	r1, r0
   1d600:	movwne	r1, #2
   1d604:	cmp	r1, #0
   1d608:	mov	r6, r8
   1d60c:	beq	1d3ec <dta_read_expansion_fields+0x90>
   1d610:	cmp	r1, #4
   1d614:	cmpne	r1, #2
   1d618:	beq	1d6d0 <dta_read_expansion_fields+0x374>
   1d61c:	b	1d6e0 <dta_read_expansion_fields+0x384>
   1d620:	mov	r5, r4
   1d624:	ldr	r0, [r5, #120]!	; 0x78
   1d628:	ldr	r3, [r7, #8]
   1d62c:	ldr	r2, [r7, #20]
   1d630:	mov	r8, #0
   1d634:	mov	r1, #0
   1d638:	blx	r3
   1d63c:	cmn	r0, #1
   1d640:	bne	1d6e0 <dta_read_expansion_fields+0x384>
   1d644:	ldr	r0, [r4, #264]	; 0x108
   1d648:	mov	r8, #15
   1d64c:	cmp	r0, #0
   1d650:	beq	1d6e0 <dta_read_expansion_fields+0x384>
   1d654:	ldrd	r0, [r5]
   1d658:	stm	sp, {r0, r1}
   1d65c:	add	r5, r4, #288	; 0x120
   1d660:	ldr	r2, [pc, #148]	; 1d6fc <dta_read_expansion_fields+0x3a0>
   1d664:	add	r2, pc, r2
   1d668:	mov	r0, r5
   1d66c:	mov	r1, #256	; 0x100
   1d670:	bl	4d04 <snprintf@plt>
   1d674:	ldr	r2, [r4, #264]	; 0x108
   1d678:	ldr	r1, [r4, #276]	; 0x114
   1d67c:	mov	r0, r5
   1d680:	blx	r2
   1d684:	b	1d6e0 <dta_read_expansion_fields+0x384>
   1d688:	mov	r8, #2
   1d68c:	cmp	r5, #0
   1d690:	bne	1d6d8 <dta_read_expansion_fields+0x37c>
   1d694:	b	1d6e0 <dta_read_expansion_fields+0x384>
   1d698:	mov	r8, r6
   1d69c:	cmp	r5, #0
   1d6a0:	bne	1d6d8 <dta_read_expansion_fields+0x37c>
   1d6a4:	b	1d6e0 <dta_read_expansion_fields+0x384>
   1d6a8:	mov	r8, #15
   1d6ac:	cmp	r5, #0
   1d6b0:	bne	1d6d8 <dta_read_expansion_fields+0x37c>
   1d6b4:	b	1d6e0 <dta_read_expansion_fields+0x384>
   1d6b8:	mov	r5, #0
   1d6bc:	mov	r8, #3
   1d6c0:	cmp	r5, #0
   1d6c4:	bne	1d6d8 <dta_read_expansion_fields+0x37c>
   1d6c8:	b	1d6e0 <dta_read_expansion_fields+0x384>
   1d6cc:	mov	r8, #2
   1d6d0:	cmp	r5, #0
   1d6d4:	beq	1d6e0 <dta_read_expansion_fields+0x384>
   1d6d8:	mov	r0, r5
   1d6dc:	bl	4938 <free@plt>
   1d6e0:	mov	r0, r8
   1d6e4:	sub	sp, fp, #28
   1d6e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d6ec:	mov	r8, #4
   1d6f0:	cmp	r5, #0
   1d6f4:	bne	1d6d8 <dta_read_expansion_fields+0x37c>
   1d6f8:	b	1d6e0 <dta_read_expansion_fields+0x384>
   1d6fc:	.word	0x0000a305
   1d700:	.word	0x0000a5fe
   1d704:	.word	0x0000a79d
   1d708:	.word	0x0000a422
   1d70c:	.word	0x0000a407
   1d710:	.word	0x0000a3d2

0001d714 <dta_read_strls>:
   1d714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d718:	add	fp, sp, #28
   1d71c:	sub	sp, sp, #44	; 0x2c
   1d720:	mov	r4, r0
   1d724:	ldrb	r0, [r0, #192]	; 0xc0
   1d728:	mov	r5, #0
   1d72c:	tst	r0, #4
   1d730:	beq	1d964 <dta_read_strls+0x250>
   1d734:	mov	r6, r4
   1d738:	ldr	r0, [r6, #128]!	; 0x80
   1d73c:	ldr	r8, [r6, #152]	; 0x98
   1d740:	ldr	r3, [r8, #8]
   1d744:	ldr	r2, [r8, #20]
   1d748:	mov	r1, #0
   1d74c:	blx	r3
   1d750:	cmn	r0, #1
   1d754:	beq	1d924 <dta_read_strls+0x210>
   1d758:	ldr	r1, [pc, #540]	; 1d97c <dta_read_strls+0x268>
   1d75c:	add	r1, pc, r1
   1d760:	mov	r0, r4
   1d764:	bl	1ce98 <dta_read_tag>
   1d768:	mov	r5, r0
   1d76c:	cmp	r0, #0
   1d770:	bne	1d964 <dta_read_strls+0x250>
   1d774:	mov	r0, #100	; 0x64
   1d778:	str	r0, [r4, #224]	; 0xe0
   1d77c:	mov	r0, #400	; 0x190
   1d780:	bl	4cb0 <readstat_malloc@plt>
   1d784:	str	r0, [r4, #216]	; 0xd8
   1d788:	ldr	r3, [r8, #12]
   1d78c:	ldr	r2, [r8, #20]
   1d790:	sub	r0, fp, #31
   1d794:	mov	r1, #3
   1d798:	blx	r3
   1d79c:	mov	r5, #2
   1d7a0:	cmp	r0, #3
   1d7a4:	bne	1d964 <dta_read_strls+0x250>
   1d7a8:	sub	r6, fp, #31
   1d7ac:	ldr	r9, [pc, #460]	; 1d980 <dta_read_strls+0x26c>
   1d7b0:	add	r9, pc, r9
   1d7b4:	add	r7, sp, #8
   1d7b8:	mov	r0, r6
   1d7bc:	mov	r1, r9
   1d7c0:	mov	r2, #3
   1d7c4:	bl	4a10 <memcmp@plt>
   1d7c8:	cmp	r0, #0
   1d7cc:	beq	1d810 <dta_read_strls+0xfc>
   1d7d0:	mov	r0, r6
   1d7d4:	ldr	r1, [pc, #424]	; 1d984 <dta_read_strls+0x270>
   1d7d8:	add	r1, pc, r1
   1d7dc:	mov	r2, #3
   1d7e0:	bl	4a10 <memcmp@plt>
   1d7e4:	cmp	r0, #0
   1d7e8:	bne	1d970 <dta_read_strls+0x25c>
   1d7ec:	mov	r0, r4
   1d7f0:	ldr	r1, [pc, #400]	; 1d988 <dta_read_strls+0x274>
   1d7f4:	add	r1, pc, r1
   1d7f8:	bl	1ce98 <dta_read_tag>
   1d7fc:	mov	r5, r0
   1d800:	cmp	r0, #0
   1d804:	mov	sl, #2
   1d808:	movweq	sl, #4
   1d80c:	b	1d8f4 <dta_read_strls+0x1e0>
   1d810:	mov	r0, r4
   1d814:	mov	r1, r7
   1d818:	bl	1e108 <dta_read_strl>
   1d81c:	mov	r5, r0
   1d820:	mov	sl, #2
   1d824:	cmp	r0, #0
   1d828:	bne	1d8f4 <dta_read_strls+0x1e0>
   1d82c:	ldrb	r0, [sp, #24]
   1d830:	cmp	r0, #130	; 0x82
   1d834:	bne	1d8e4 <dta_read_strls+0x1d0>
   1d838:	ldr	r0, [r4, #220]	; 0xdc
   1d83c:	ldr	r1, [r4, #224]	; 0xe0
   1d840:	cmp	r0, r1
   1d844:	bne	1d868 <dta_read_strls+0x154>
   1d848:	lsl	r0, r1, #1
   1d84c:	str	r0, [r4, #224]	; 0xe0
   1d850:	ldr	r0, [r4, #216]	; 0xd8
   1d854:	lsl	r1, r1, #3
   1d858:	bl	4d70 <readstat_realloc@plt>
   1d85c:	str	r0, [r4, #216]	; 0xd8
   1d860:	cmp	r0, #0
   1d864:	beq	1d8f0 <dta_read_strls+0x1dc>
   1d868:	ldr	r0, [sp, #28]
   1d86c:	add	r0, r0, #32
   1d870:	bl	4cb0 <readstat_malloc@plt>
   1d874:	cmp	r0, #0
   1d878:	beq	1d8f0 <dta_read_strls+0x1dc>
   1d87c:	mov	r1, r7
   1d880:	vld1.64	{d16-d17}, [r1]!
   1d884:	vld1.64	{d18-d19}, [r1]
   1d888:	add	r1, r0, #16
   1d88c:	vst1.64	{d18-d19}, [r1]
   1d890:	mov	sl, r7
   1d894:	mov	r7, r0
   1d898:	mov	r1, #20
   1d89c:	vst1.64	{d16-d17}, [r7], r1
   1d8a0:	ldrd	r2, [r4, #216]	; 0xd8
   1d8a4:	add	r1, r3, #1
   1d8a8:	str	r1, [r4, #220]	; 0xdc
   1d8ac:	str	r0, [r2, r3, lsl #2]
   1d8b0:	ldr	r1, [r7]
   1d8b4:	ldr	r3, [r8, #12]
   1d8b8:	ldr	r2, [r8, #20]
   1d8bc:	add	r0, r0, #24
   1d8c0:	blx	r3
   1d8c4:	ldr	r1, [r7]
   1d8c8:	mov	r7, sl
   1d8cc:	cmp	r0, r1
   1d8d0:	mov	r2, #2
   1d8d4:	movne	r5, r2
   1d8d8:	sub	sl, r0, r1
   1d8dc:	movwne	sl, #2
   1d8e0:	b	1d8f4 <dta_read_strls+0x1e0>
   1d8e4:	mov	sl, #3
   1d8e8:	mov	r5, #0
   1d8ec:	b	1d8f4 <dta_read_strls+0x1e0>
   1d8f0:	mov	r5, #3
   1d8f4:	cmp	sl, #3
   1d8f8:	cmpne	sl, #0
   1d8fc:	bne	1d964 <dta_read_strls+0x250>
   1d900:	ldr	r3, [r8, #12]
   1d904:	ldr	r2, [r8, #20]
   1d908:	mov	r0, r6
   1d90c:	mov	r1, #3
   1d910:	blx	r3
   1d914:	cmp	r0, #3
   1d918:	beq	1d7b8 <dta_read_strls+0xa4>
   1d91c:	mov	r5, #2
   1d920:	b	1d964 <dta_read_strls+0x250>
   1d924:	ldr	r0, [r4, #264]	; 0x108
   1d928:	mov	r5, #15
   1d92c:	cmp	r0, #0
   1d930:	beq	1d964 <dta_read_strls+0x250>
   1d934:	ldrd	r0, [r6]
   1d938:	stm	sp, {r0, r1}
   1d93c:	add	r6, r4, #288	; 0x120
   1d940:	ldr	r2, [pc, #48]	; 1d978 <dta_read_strls+0x264>
   1d944:	add	r2, pc, r2
   1d948:	mov	r0, r6
   1d94c:	mov	r1, #256	; 0x100
   1d950:	bl	4d04 <snprintf@plt>
   1d954:	ldr	r2, [r4, #264]	; 0x108
   1d958:	ldr	r1, [r4, #276]	; 0x114
   1d95c:	mov	r0, r6
   1d960:	blx	r2
   1d964:	mov	r0, r5
   1d968:	sub	sp, fp, #28
   1d96c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d970:	mov	r5, #5
   1d974:	b	1d964 <dta_read_strls+0x250>
   1d978:	.word	0x0000a080
   1d97c:	.word	0x0000a296
   1d980:	.word	0x0000a24a
   1d984:	.word	0x0000a226
   1d988:	.word	0x0000a38b

0001d98c <dta_read_data>:
   1d98c:	push	{r4, r5, r6, sl, fp, lr}
   1d990:	add	fp, sp, #16
   1d994:	sub	sp, sp, #8
   1d998:	mov	r4, r0
   1d99c:	ldr	r0, [r0, #256]	; 0x100
   1d9a0:	cmp	r0, #0
   1d9a4:	beq	1da28 <dta_read_data+0x9c>
   1d9a8:	ldr	r1, [r4, #280]	; 0x118
   1d9ac:	mov	r6, r4
   1d9b0:	ldr	r0, [r6, #120]!	; 0x78
   1d9b4:	ldr	r3, [r1, #8]
   1d9b8:	ldr	r2, [r1, #20]
   1d9bc:	mov	r1, #0
   1d9c0:	blx	r3
   1d9c4:	cmn	r0, #1
   1d9c8:	beq	1da30 <dta_read_data+0xa4>
   1d9cc:	ldr	r1, [pc, #172]	; 1da80 <dta_read_data+0xf4>
   1d9d0:	add	r1, pc, r1
   1d9d4:	mov	r0, r4
   1d9d8:	bl	1ce98 <dta_read_tag>
   1d9dc:	mov	r5, r0
   1d9e0:	cmp	r0, #0
   1d9e4:	bne	1da70 <dta_read_data+0xe4>
   1d9e8:	mov	r0, r4
   1d9ec:	bl	1caec <dta_update_progress>
   1d9f0:	mov	r5, r0
   1d9f4:	cmp	r0, #0
   1d9f8:	bne	1da70 <dta_read_data+0xe4>
   1d9fc:	mov	r0, r4
   1da00:	bl	1e258 <dta_handle_rows>
   1da04:	mov	r5, r0
   1da08:	cmp	r0, #0
   1da0c:	bne	1da70 <dta_read_data+0xe4>
   1da10:	ldr	r1, [pc, #108]	; 1da84 <dta_read_data+0xf8>
   1da14:	add	r1, pc, r1
   1da18:	mov	r0, r4
   1da1c:	sub	sp, fp, #16
   1da20:	pop	{r4, r5, r6, sl, fp, lr}
   1da24:	b	1ce98 <dta_read_tag>
   1da28:	mov	r5, #0
   1da2c:	b	1da70 <dta_read_data+0xe4>
   1da30:	ldr	r0, [r4, #264]	; 0x108
   1da34:	mov	r5, #15
   1da38:	cmp	r0, #0
   1da3c:	beq	1da70 <dta_read_data+0xe4>
   1da40:	ldrd	r0, [r6]
   1da44:	stm	sp, {r0, r1}
   1da48:	add	r6, r4, #288	; 0x120
   1da4c:	ldr	r2, [pc, #40]	; 1da7c <dta_read_data+0xf0>
   1da50:	add	r2, pc, r2
   1da54:	mov	r0, r6
   1da58:	mov	r1, #256	; 0x100
   1da5c:	bl	4d04 <snprintf@plt>
   1da60:	ldr	r2, [r4, #264]	; 0x108
   1da64:	ldr	r1, [r4, #276]	; 0x114
   1da68:	mov	r0, r6
   1da6c:	blx	r2
   1da70:	mov	r0, r5
   1da74:	sub	sp, fp, #16
   1da78:	pop	{r4, r5, r6, sl, fp, pc}
   1da7c:	.word	0x00009f19
   1da80:	.word	0x0000a032
   1da84:	.word	0x00009ff5

0001da88 <dta_handle_value_labels>:
   1da88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da8c:	add	fp, sp, #28
   1da90:	sub	sp, sp, #228	; 0xe4
   1da94:	mov	r6, r0
   1da98:	mov	r4, r0
   1da9c:	ldr	r0, [r4, #136]!	; 0x88
   1daa0:	ldr	sl, [r4, #144]	; 0x90
   1daa4:	ldr	r3, [sl, #8]
   1daa8:	ldr	r2, [sl, #20]
   1daac:	mov	r1, #0
   1dab0:	blx	r3
   1dab4:	cmn	r0, #1
   1dab8:	beq	1db00 <dta_handle_value_labels+0x78>
   1dabc:	ldr	r1, [pc, #1176]	; 1df5c <dta_handle_value_labels+0x4d4>
   1dac0:	add	r1, pc, r1
   1dac4:	mov	r0, r6
   1dac8:	bl	1ce98 <dta_read_tag>
   1dacc:	mov	r7, r0
   1dad0:	cmp	r0, #0
   1dad4:	bne	1defc <dta_handle_value_labels+0x474>
   1dad8:	ldr	r0, [r6, #260]	; 0x104
   1dadc:	cmp	r0, #0
   1dae0:	beq	1db44 <dta_handle_value_labels+0xbc>
   1dae4:	add	r0, sp, #56	; 0x38
   1dae8:	add	r0, r0, #8
   1daec:	str	r0, [sp, #44]	; 0x2c
   1daf0:	mov	r4, #0
   1daf4:	mov	r5, #0
   1daf8:	mov	r7, #0
   1dafc:	b	1db58 <dta_handle_value_labels+0xd0>
   1db00:	ldr	r0, [r6, #264]	; 0x108
   1db04:	mov	r7, #15
   1db08:	cmp	r0, #0
   1db0c:	beq	1defc <dta_handle_value_labels+0x474>
   1db10:	ldrd	r0, [r4]
   1db14:	stm	sp, {r0, r1}
   1db18:	add	r4, r6, #288	; 0x120
   1db1c:	ldr	r2, [pc, #1076]	; 1df58 <dta_handle_value_labels+0x4d0>
   1db20:	add	r2, pc, r2
   1db24:	mov	r0, r4
   1db28:	mov	r1, #256	; 0x100
   1db2c:	bl	4d04 <snprintf@plt>
   1db30:	ldr	r2, [r6, #264]	; 0x108
   1db34:	ldr	r1, [r6, #276]	; 0x114
   1db38:	mov	r0, r4
   1db3c:	blx	r2
   1db40:	b	1defc <dta_handle_value_labels+0x474>
   1db44:	mov	r7, #0
   1db48:	b	1defc <dta_handle_value_labels+0x474>
   1db4c:	mov	r7, #0
   1db50:	mov	r4, r8
   1db54:	ldr	r5, [sp, #48]	; 0x30
   1db58:	ldr	r0, [r6, #100]	; 0x64
   1db5c:	cmp	r0, #2
   1db60:	bne	1dba4 <dta_handle_value_labels+0x11c>
   1db64:	ldr	r3, [sl, #12]
   1db68:	ldr	r2, [sl, #20]
   1db6c:	add	r0, sp, #56	; 0x38
   1db70:	mov	r1, #2
   1db74:	blx	r3
   1db78:	cmp	r0, #2
   1db7c:	bcc	1dedc <dta_handle_value_labels+0x454>
   1db80:	ldrb	r0, [r6, #192]	; 0xc0
   1db84:	ldrsh	r8, [sp, #56]	; 0x38
   1db88:	tst	r0, #1
   1db8c:	beq	1db9c <dta_handle_value_labels+0x114>
   1db90:	uxth	r0, r8
   1db94:	bl	4920 <byteswap2@plt>
   1db98:	mov	r8, r0
   1db9c:	lsr	r9, r8, #3
   1dba0:	b	1dbf8 <dta_handle_value_labels+0x170>
   1dba4:	mov	r0, r6
   1dba8:	ldr	r1, [pc, #944]	; 1df60 <dta_handle_value_labels+0x4d8>
   1dbac:	add	r1, pc, r1
   1dbb0:	bl	1ce98 <dta_read_tag>
   1dbb4:	cmp	r0, #0
   1dbb8:	bne	1dedc <dta_handle_value_labels+0x454>
   1dbbc:	ldr	r3, [sl, #12]
   1dbc0:	ldr	r2, [sl, #20]
   1dbc4:	add	r0, sp, #56	; 0x38
   1dbc8:	mov	r1, #4
   1dbcc:	blx	r3
   1dbd0:	cmp	r0, #4
   1dbd4:	bcc	1dedc <dta_handle_value_labels+0x454>
   1dbd8:	ldrb	r0, [r6, #192]	; 0xc0
   1dbdc:	ldr	r8, [sp, #56]	; 0x38
   1dbe0:	tst	r0, #1
   1dbe4:	beq	1dbf4 <dta_handle_value_labels+0x16c>
   1dbe8:	mov	r0, r8
   1dbec:	bl	480c <byteswap4@plt>
   1dbf0:	mov	r8, r0
   1dbf4:	mov	r9, #0
   1dbf8:	ldr	r1, [r6, #104]	; 0x68
   1dbfc:	ldr	r3, [sl, #12]
   1dc00:	ldr	r2, [sl, #20]
   1dc04:	add	r0, sp, #95	; 0x5f
   1dc08:	blx	r3
   1dc0c:	ldr	r1, [r6, #104]	; 0x68
   1dc10:	cmp	r0, r1
   1dc14:	bcc	1dedc <dta_handle_value_labels+0x454>
   1dc18:	ldr	r0, [r6, #108]	; 0x6c
   1dc1c:	ldr	r3, [sl, #8]
   1dc20:	ldr	r2, [sl, #20]
   1dc24:	mov	r1, #1
   1dc28:	blx	r3
   1dc2c:	cmn	r0, #1
   1dc30:	beq	1dedc <dta_handle_value_labels+0x454>
   1dc34:	mov	r0, r5
   1dc38:	mov	r1, r8
   1dc3c:	bl	4d70 <readstat_realloc@plt>
   1dc40:	cmp	r0, #0
   1dc44:	beq	1df30 <dta_handle_value_labels+0x4a8>
   1dc48:	mov	r5, r0
   1dc4c:	ldr	r3, [sl, #12]
   1dc50:	ldr	r2, [sl, #20]
   1dc54:	mov	r1, r8
   1dc58:	blx	r3
   1dc5c:	cmp	r0, r8
   1dc60:	bcc	1dee4 <dta_handle_value_labels+0x45c>
   1dc64:	ldr	r0, [r6, #100]	; 0x64
   1dc68:	cmp	r0, #2
   1dc6c:	str	r5, [sp, #48]	; 0x30
   1dc70:	bne	1dd08 <dta_handle_value_labels+0x280>
   1dc74:	cmp	r9, #0
   1dc78:	beq	1db58 <dta_handle_value_labels+0xd0>
   1dc7c:	mov	r8, r4
   1dc80:	mov	r4, #0
   1dc84:	ldr	r0, [r6, #236]	; 0xec
   1dc88:	str	r0, [sp]
   1dc8c:	add	r0, sp, #56	; 0x38
   1dc90:	mov	r1, #33	; 0x21
   1dc94:	mov	r2, r5
   1dc98:	mov	r3, #8
   1dc9c:	bl	4cbc <readstat_convert@plt>
   1dca0:	cmp	r0, #0
   1dca4:	bne	1dec8 <dta_handle_value_labels+0x440>
   1dca8:	ldr	r7, [sp, #52]	; 0x34
   1dcac:	bfc	r7, #0, #10
   1dcb0:	ldrb	r0, [sp, #56]	; 0x38
   1dcb4:	cmp	r0, #0
   1dcb8:	beq	1dcf0 <dta_handle_value_labels+0x268>
   1dcbc:	ldr	r1, [r6, #260]	; 0x104
   1dcc0:	ldr	r0, [r6, #276]	; 0x114
   1dcc4:	mov	r2, #3
   1dcc8:	stm	sp, {r2, r7}
   1dccc:	add	r2, sp, #56	; 0x38
   1dcd0:	str	r2, [sp, #8]
   1dcd4:	str	r0, [sp, #12]
   1dcd8:	add	r0, sp, #95	; 0x5f
   1dcdc:	mov	r2, r4
   1dce0:	mov	r3, #0
   1dce4:	blx	r1
   1dce8:	cmp	r0, #0
   1dcec:	bne	1ded0 <dta_handle_value_labels+0x448>
   1dcf0:	str	r7, [sp, #52]	; 0x34
   1dcf4:	add	r5, r5, #8
   1dcf8:	add	r4, r4, #1
   1dcfc:	cmp	r4, r9
   1dd00:	bcc	1dc84 <dta_handle_value_labels+0x1fc>
   1dd04:	b	1db4c <dta_handle_value_labels+0xc4>
   1dd08:	cmp	r8, #9
   1dd0c:	bcc	1db58 <dta_handle_value_labels+0xd0>
   1dd10:	mov	r0, r6
   1dd14:	ldr	r1, [pc, #584]	; 1df64 <dta_handle_value_labels+0x4dc>
   1dd18:	add	r1, pc, r1
   1dd1c:	bl	1ce98 <dta_read_tag>
   1dd20:	mov	r7, r0
   1dd24:	cmp	r0, #0
   1dd28:	bne	1dee4 <dta_handle_value_labels+0x45c>
   1dd2c:	mov	r9, r4
   1dd30:	ldm	r5, {r0, r4}
   1dd34:	ldrb	r1, [r6, #192]	; 0xc0
   1dd38:	tst	r1, #1
   1dd3c:	bne	1dd48 <dta_handle_value_labels+0x2c0>
   1dd40:	str	r0, [sp, #40]	; 0x28
   1dd44:	b	1dd5c <dta_handle_value_labels+0x2d4>
   1dd48:	bl	480c <byteswap4@plt>
   1dd4c:	str	r0, [sp, #40]	; 0x28
   1dd50:	mov	r0, r4
   1dd54:	bl	480c <byteswap4@plt>
   1dd58:	mov	r4, r0
   1dd5c:	sub	r0, r8, #8
   1dd60:	cmp	r0, r4
   1dd64:	bcc	1df40 <dta_handle_value_labels+0x4b8>
   1dd68:	sub	r0, r0, r4
   1dd6c:	ldr	r8, [sp, #40]	; 0x28
   1dd70:	cmp	r8, r0, lsr #3
   1dd74:	bhi	1df40 <dta_handle_value_labels+0x4b8>
   1dd78:	mov	r0, #1
   1dd7c:	orr	r1, r0, r4, lsl #2
   1dd80:	movw	r0, #32001	; 0x7d01
   1dd84:	str	r4, [sp, #36]	; 0x24
   1dd88:	cmp	r4, r0
   1dd8c:	movwhi	r1, #62465	; 0xf401
   1dd90:	movthi	r1, #1
   1dd94:	mov	r0, r9
   1dd98:	str	r1, [sp, #32]
   1dd9c:	bl	4a70 <realloc@plt>
   1dda0:	cmp	r0, #0
   1dda4:	beq	1df4c <dta_handle_value_labels+0x4c4>
   1dda8:	str	r0, [sp, #20]
   1ddac:	add	r9, r5, #8
   1ddb0:	ldrb	r0, [r6, #192]	; 0xc0
   1ddb4:	tst	r0, #1
   1ddb8:	cmpne	r8, #0
   1ddbc:	beq	1dddc <dta_handle_value_labels+0x354>
   1ddc0:	mov	r4, r8
   1ddc4:	mov	r5, r9
   1ddc8:	ldr	r0, [r5]
   1ddcc:	bl	480c <byteswap4@plt>
   1ddd0:	str	r0, [r5], #4
   1ddd4:	subs	r4, r4, #1
   1ddd8:	bne	1ddc8 <dta_handle_value_labels+0x340>
   1dddc:	cmp	r8, #0
   1dde0:	beq	1debc <dta_handle_value_labels+0x434>
   1dde4:	str	sl, [sp, #16]
   1dde8:	ldr	r5, [sp, #48]	; 0x30
   1ddec:	add	r0, r5, r8, lsl #3
   1ddf0:	add	r0, r0, #8
   1ddf4:	str	r0, [sp, #28]
   1ddf8:	lsl	r0, r8, #2
   1ddfc:	str	r0, [sp, #24]
   1de00:	mov	r8, #0
   1de04:	ldr	r4, [sp, #20]
   1de08:	mov	sl, r5
   1de0c:	mov	r5, r4
   1de10:	ldr	r0, [r9]
   1de14:	ldr	r4, [sp, #36]	; 0x24
   1de18:	cmp	r0, r4
   1de1c:	bcs	1df08 <dta_handle_value_labels+0x480>
   1de20:	ldr	r0, [sp, #24]
   1de24:	add	r2, r9, r0
   1de28:	add	r0, sp, #56	; 0x38
   1de2c:	mov	r1, r6
   1de30:	bl	1e8e0 <dta_interpret_int32_bytes>
   1de34:	ldr	r0, [r9]
   1de38:	ldr	r1, [r6, #236]	; 0xec
   1de3c:	str	r1, [sp]
   1de40:	ldr	r1, [sp, #28]
   1de44:	add	r2, r1, r0
   1de48:	sub	r3, r4, r0
   1de4c:	cmp	r3, #32000	; 0x7d00
   1de50:	movcs	r3, #32000	; 0x7d00
   1de54:	mov	r4, r5
   1de58:	mov	r0, r5
   1de5c:	ldr	r1, [sp, #32]
   1de60:	bl	4cbc <readstat_convert@plt>
   1de64:	cmp	r0, #0
   1de68:	bne	1df18 <dta_handle_value_labels+0x490>
   1de6c:	ldr	r0, [sp, #44]	; 0x2c
   1de70:	ldrd	r0, [r0]
   1de74:	ldr	r7, [r6, #260]	; 0x104
   1de78:	ldr	r5, [r6, #276]	; 0x114
   1de7c:	ldr	r2, [sp, #56]	; 0x38
   1de80:	ldr	r3, [sp, #60]	; 0x3c
   1de84:	stm	sp, {r0, r1, r4, r5}
   1de88:	add	r0, sp, #95	; 0x5f
   1de8c:	blx	r7
   1de90:	cmp	r0, #0
   1de94:	bne	1df24 <dta_handle_value_labels+0x49c>
   1de98:	add	r9, r9, #4
   1de9c:	add	r8, r8, #1
   1dea0:	ldr	r0, [sp, #40]	; 0x28
   1dea4:	cmp	r8, r0
   1dea8:	ldr	r5, [sp, #48]	; 0x30
   1deac:	bcc	1de08 <dta_handle_value_labels+0x380>
   1deb0:	mov	r7, #0
   1deb4:	ldr	sl, [sp, #16]
   1deb8:	b	1db58 <dta_handle_value_labels+0xd0>
   1debc:	ldr	r4, [sp, #20]
   1dec0:	ldr	r5, [sp, #48]	; 0x30
   1dec4:	b	1db58 <dta_handle_value_labels+0xd0>
   1dec8:	mov	r7, r0
   1decc:	b	1ded4 <dta_handle_value_labels+0x44c>
   1ded0:	mov	r7, #4
   1ded4:	mov	r4, r8
   1ded8:	ldr	r5, [sp, #48]	; 0x30
   1dedc:	cmp	r5, #0
   1dee0:	beq	1deec <dta_handle_value_labels+0x464>
   1dee4:	mov	r0, r5
   1dee8:	bl	4938 <free@plt>
   1deec:	cmp	r4, #0
   1def0:	beq	1defc <dta_handle_value_labels+0x474>
   1def4:	mov	r0, r4
   1def8:	bl	4938 <free@plt>
   1defc:	mov	r0, r7
   1df00:	sub	sp, fp, #28
   1df04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df08:	mov	r7, #5
   1df0c:	mov	r4, r5
   1df10:	mov	r5, sl
   1df14:	b	1dee4 <dta_handle_value_labels+0x45c>
   1df18:	mov	r7, r0
   1df1c:	mov	r5, sl
   1df20:	b	1dee4 <dta_handle_value_labels+0x45c>
   1df24:	mov	r7, #4
   1df28:	ldr	r5, [sp, #48]	; 0x30
   1df2c:	b	1dee4 <dta_handle_value_labels+0x45c>
   1df30:	mov	r7, #3
   1df34:	cmp	r4, #0
   1df38:	bne	1def4 <dta_handle_value_labels+0x46c>
   1df3c:	b	1defc <dta_handle_value_labels+0x474>
   1df40:	mov	r7, #0
   1df44:	mov	r4, r9
   1df48:	b	1dee4 <dta_handle_value_labels+0x45c>
   1df4c:	mov	r7, #3
   1df50:	mov	r4, #0
   1df54:	b	1dee4 <dta_handle_value_labels+0x45c>
   1df58:	.word	0x00009ef1
   1df5c:	.word	0x00009f86
   1df60:	.word	0x00009ea9
   1df64:	.word	0x00009d43

0001df68 <dta_read_chunk>:
   1df68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1df6c:	add	fp, sp, #24
   1df70:	mov	r5, r3
   1df74:	mov	r6, r2
   1df78:	mov	r4, r0
   1df7c:	ldr	r7, [r0, #280]	; 0x118
   1df80:	bl	1ce98 <dta_read_tag>
   1df84:	cmp	r0, #0
   1df88:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1df8c:	ldr	r8, [fp, #8]
   1df90:	ldr	r3, [r7, #12]
   1df94:	ldr	r2, [r7, #20]
   1df98:	mov	r0, r6
   1df9c:	mov	r1, r5
   1dfa0:	blx	r3
   1dfa4:	mov	r1, r0
   1dfa8:	mov	r0, #2
   1dfac:	cmp	r1, r5
   1dfb0:	bne	1dfc4 <dta_read_chunk+0x5c>
   1dfb4:	mov	r0, r4
   1dfb8:	mov	r1, r8
   1dfbc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dfc0:	b	1ce98 <dta_read_tag>
   1dfc4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001dfc8 <dta_init_variable>:
   1dfc8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1dfcc:	add	fp, sp, #24
   1dfd0:	sub	sp, sp, #8
   1dfd4:	mov	r8, r3
   1dfd8:	mov	r6, r2
   1dfdc:	mov	r7, r1
   1dfe0:	mov	r5, r0
   1dfe4:	mov	r0, #1
   1dfe8:	movw	r1, #2152	; 0x868
   1dfec:	bl	47d0 <calloc@plt>
   1dff0:	mov	r4, r0
   1dff4:	str	r8, [r4]
   1dff8:	str	r7, [r4, #4]
   1dffc:	str	r6, [r0, #2148]	; 0x864
   1e000:	ldr	r0, [fp, #8]
   1e004:	str	r0, [r4, #1596]	; 0x63c
   1e008:	ldr	r0, [r5, #36]	; 0x24
   1e00c:	ldr	r3, [r5, #76]	; 0x4c
   1e010:	ldr	r1, [r5, #236]	; 0xec
   1e014:	str	r1, [sp]
   1e018:	mla	r2, r3, r7, r0
   1e01c:	add	r0, r4, #8
   1e020:	mov	r1, #300	; 0x12c
   1e024:	bl	4cbc <readstat_convert@plt>
   1e028:	ldr	r2, [r5, #68]	; 0x44
   1e02c:	ldr	r3, [r5, #88]	; 0x58
   1e030:	mul	r0, r3, r7
   1e034:	ldrb	r0, [r2, r0]!
   1e038:	cmp	r0, #0
   1e03c:	beq	1e054 <dta_init_variable+0x8c>
   1e040:	ldr	r0, [r5, #236]	; 0xec
   1e044:	str	r0, [sp]
   1e048:	add	r0, r4, #564	; 0x234
   1e04c:	mov	r1, #1024	; 0x400
   1e050:	bl	4cbc <readstat_convert@plt>
   1e054:	ldr	r2, [r5, #52]	; 0x34
   1e058:	ldr	r3, [r5, #80]	; 0x50
   1e05c:	mul	r0, r3, r7
   1e060:	ldrb	r0, [r2, r0]!
   1e064:	cmp	r0, #0
   1e068:	beq	1e0f4 <dta_init_variable+0x12c>
   1e06c:	ldr	r0, [r5, #236]	; 0xec
   1e070:	str	r0, [sp]
   1e074:	add	r5, r4, #308	; 0x134
   1e078:	mov	r0, r5
   1e07c:	mov	r1, #256	; 0x100
   1e080:	bl	4cbc <readstat_convert@plt>
   1e084:	ldrb	r0, [r4, #308]	; 0x134
   1e088:	cmp	r0, #37	; 0x25
   1e08c:	bne	1e0b4 <dta_init_variable+0xec>
   1e090:	ldrb	r0, [r4, #309]	; 0x135
   1e094:	cmp	r0, #45	; 0x2d
   1e098:	bne	1e0a4 <dta_init_variable+0xdc>
   1e09c:	mov	r0, #1
   1e0a0:	b	1e0b0 <dta_init_variable+0xe8>
   1e0a4:	cmp	r0, #126	; 0x7e
   1e0a8:	movne	r0, #3
   1e0ac:	moveq	r0, #2
   1e0b0:	str	r0, [r4, #2132]	; 0x854
   1e0b4:	ldr	r1, [pc, #68]	; 1e100 <dta_init_variable+0x138>
   1e0b8:	add	r1, pc, r1
   1e0bc:	add	r2, sp, #4
   1e0c0:	mov	r0, r5
   1e0c4:	bl	4d10 <__isoc99_sscanf@plt>
   1e0c8:	cmp	r0, #1
   1e0cc:	beq	1e0ec <dta_init_variable+0x124>
   1e0d0:	ldr	r1, [pc, #44]	; 1e104 <dta_init_variable+0x13c>
   1e0d4:	add	r1, pc, r1
   1e0d8:	add	r2, sp, #4
   1e0dc:	mov	r0, r5
   1e0e0:	bl	4d10 <__isoc99_sscanf@plt>
   1e0e4:	cmp	r0, #1
   1e0e8:	bne	1e0f4 <dta_init_variable+0x12c>
   1e0ec:	ldr	r0, [sp, #4]
   1e0f0:	str	r0, [r4, #2136]	; 0x858
   1e0f4:	mov	r0, r4
   1e0f8:	sub	sp, fp, #24
   1e0fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1e100:	.word	0x000098a4
   1e104:	.word	0x0000988e

0001e108 <dta_read_strl>:
   1e108:	ldr	r2, [r0, #116]	; 0x74
   1e10c:	cmp	r2, #5
   1e110:	bcc	1e118 <dta_read_strl+0x10>
   1e114:	b	1e11c <dta_118_read_strl>
   1e118:	b	1e1b8 <dta_117_read_strl>

0001e11c <dta_118_read_strl>:
   1e11c:	push	{r4, r5, fp, lr}
   1e120:	add	fp, sp, #8
   1e124:	sub	sp, sp, #24
   1e128:	mov	r4, r1
   1e12c:	mov	r5, r0
   1e130:	ldr	r0, [r0, #280]	; 0x118
   1e134:	ldr	r3, [r0, #12]
   1e138:	ldr	r2, [r0, #20]
   1e13c:	add	r0, sp, #4
   1e140:	mov	r1, #17
   1e144:	blx	r3
   1e148:	mov	r1, r0
   1e14c:	mov	r0, #2
   1e150:	cmp	r1, #17
   1e154:	bne	1e1b0 <dta_118_read_strl+0x94>
   1e158:	ldrb	r1, [r5, #192]	; 0xc0
   1e15c:	ldr	r0, [sp, #4]
   1e160:	tst	r1, #1
   1e164:	beq	1e16c <dta_118_read_strl+0x50>
   1e168:	bl	480c <byteswap4@plt>
   1e16c:	strh	r0, [r4]
   1e170:	ldrb	r2, [r5, #192]	; 0xc0
   1e174:	ldr	r0, [sp, #8]
   1e178:	ldr	r1, [sp, #12]
   1e17c:	tst	r2, #1
   1e180:	beq	1e188 <dta_118_read_strl+0x6c>
   1e184:	bl	47f4 <byteswap8@plt>
   1e188:	strd	r0, [r4, #8]
   1e18c:	ldrb	r0, [sp, #16]
   1e190:	strb	r0, [r4, #16]
   1e194:	ldrb	r1, [r5, #192]	; 0xc0
   1e198:	ldr	r0, [sp, #17]
   1e19c:	tst	r1, #1
   1e1a0:	beq	1e1a8 <dta_118_read_strl+0x8c>
   1e1a4:	bl	480c <byteswap4@plt>
   1e1a8:	str	r0, [r4, #20]
   1e1ac:	mov	r0, #0
   1e1b0:	sub	sp, fp, #8
   1e1b4:	pop	{r4, r5, fp, pc}

0001e1b8 <dta_117_read_strl>:
   1e1b8:	push	{r4, r5, r6, r7, fp, lr}
   1e1bc:	add	fp, sp, #16
   1e1c0:	sub	sp, sp, #16
   1e1c4:	mov	r4, r1
   1e1c8:	mov	r5, r0
   1e1cc:	ldr	r0, [r0, #280]	; 0x118
   1e1d0:	ldr	r3, [r0, #12]
   1e1d4:	ldr	r2, [r0, #20]
   1e1d8:	mov	r0, sp
   1e1dc:	mov	r1, #13
   1e1e0:	blx	r3
   1e1e4:	mov	r7, #2
   1e1e8:	cmp	r0, #13
   1e1ec:	bne	1e24c <dta_117_read_strl+0x94>
   1e1f0:	ldrb	r1, [r5, #192]	; 0xc0
   1e1f4:	ldr	r0, [sp]
   1e1f8:	tst	r1, #1
   1e1fc:	beq	1e204 <dta_117_read_strl+0x4c>
   1e200:	bl	480c <byteswap4@plt>
   1e204:	strh	r0, [r4]
   1e208:	ldrb	r0, [r5, #192]	; 0xc0
   1e20c:	ldr	r6, [sp, #4]
   1e210:	tst	r0, #1
   1e214:	beq	1e224 <dta_117_read_strl+0x6c>
   1e218:	mov	r0, r6
   1e21c:	bl	480c <byteswap4@plt>
   1e220:	mov	r6, r0
   1e224:	mov	r7, #0
   1e228:	strd	r6, [r4, #8]
   1e22c:	ldrb	r0, [sp, #8]
   1e230:	strb	r0, [r4, #16]
   1e234:	ldrb	r1, [r5, #192]	; 0xc0
   1e238:	ldr	r0, [sp, #9]
   1e23c:	tst	r1, #1
   1e240:	beq	1e248 <dta_117_read_strl+0x90>
   1e244:	bl	480c <byteswap4@plt>
   1e248:	str	r0, [r4, #20]
   1e24c:	mov	r0, r7
   1e250:	sub	sp, fp, #16
   1e254:	pop	{r4, r5, r6, r7, fp, pc}

0001e258 <dta_handle_rows>:
   1e258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e25c:	add	fp, sp, #28
   1e260:	sub	sp, sp, #4
   1e264:	mov	r5, r0
   1e268:	ldr	r0, [r0, #160]	; 0xa0
   1e26c:	ldr	sl, [r5, #280]	; 0x118
   1e270:	cmp	r0, #0
   1e274:	beq	1e290 <dta_handle_rows+0x38>
   1e278:	bl	4cb0 <readstat_malloc@plt>
   1e27c:	mov	r9, r0
   1e280:	cmp	r0, #0
   1e284:	bne	1e294 <dta_handle_rows+0x3c>
   1e288:	mov	r6, #3
   1e28c:	b	1e3b8 <dta_handle_rows+0x160>
   1e290:	mov	r9, #0
   1e294:	mov	r4, r5
   1e298:	ldr	r0, [r4, #176]!	; 0xb0
   1e29c:	ldr	r1, [r4, #4]
   1e2a0:	orrs	r1, r0, r1
   1e2a4:	beq	1e2c8 <dta_handle_rows+0x70>
   1e2a8:	ldr	r1, [r5, #160]	; 0xa0
   1e2ac:	mul	r0, r1, r0
   1e2b0:	ldr	r3, [sl, #8]
   1e2b4:	ldr	r2, [sl, #20]
   1e2b8:	mov	r1, #1
   1e2bc:	blx	r3
   1e2c0:	cmn	r0, #1
   1e2c4:	beq	1e3d4 <dta_handle_rows+0x17c>
   1e2c8:	str	r4, [sp]
   1e2cc:	mov	r4, r5
   1e2d0:	ldr	r0, [r4, #168]!	; 0xa8
   1e2d4:	ldr	r1, [r4, #4]
   1e2d8:	subs	r2, r0, #1
   1e2dc:	sbcs	r2, r1, #0
   1e2e0:	blt	1e358 <dta_handle_rows+0x100>
   1e2e4:	add	r7, r5, #184	; 0xb8
   1e2e8:	mov	r8, #1
   1e2ec:	ldr	r1, [r5, #160]	; 0xa0
   1e2f0:	ldr	r3, [sl, #12]
   1e2f4:	ldr	r2, [sl, #20]
   1e2f8:	mov	r0, r9
   1e2fc:	blx	r3
   1e300:	ldr	r1, [r5, #160]	; 0xa0
   1e304:	cmp	r0, r1
   1e308:	bne	1e3e4 <dta_handle_rows+0x18c>
   1e30c:	mov	r0, r9
   1e310:	mov	r1, r5
   1e314:	bl	1e3f4 <dta_handle_row>
   1e318:	cmp	r0, #0
   1e31c:	bne	1e3c4 <dta_handle_rows+0x16c>
   1e320:	ldrd	r0, [r7]
   1e324:	adds	r0, r0, #1
   1e328:	adc	r1, r1, #0
   1e32c:	strd	r0, [r7]
   1e330:	mov	r0, r5
   1e334:	bl	1caec <dta_update_progress>
   1e338:	cmp	r0, #0
   1e33c:	bne	1e3c4 <dta_handle_rows+0x16c>
   1e340:	add	r2, r8, #1
   1e344:	ldrd	r0, [r4]
   1e348:	subs	r3, r8, r0
   1e34c:	rscs	r3, r1, #0
   1e350:	mov	r8, r2
   1e354:	blt	1e2ec <dta_handle_rows+0x94>
   1e358:	ldr	r2, [sp]
   1e35c:	ldrd	r2, [r2]
   1e360:	ldr	r4, [r5, #152]	; 0x98
   1e364:	ldr	r7, [r5, #156]	; 0x9c
   1e368:	subs	r2, r4, r2
   1e36c:	sbc	r3, r7, r3
   1e370:	mov	r6, #0
   1e374:	subs	r7, r0, r2
   1e378:	sbcs	r1, r1, r3
   1e37c:	bge	1e3a8 <dta_handle_rows+0x150>
   1e380:	sub	r0, r2, r0
   1e384:	ldr	r1, [r5, #160]	; 0xa0
   1e388:	mul	r0, r1, r0
   1e38c:	ldr	r3, [sl, #8]
   1e390:	ldr	r2, [sl, #20]
   1e394:	mov	r1, #1
   1e398:	blx	r3
   1e39c:	mov	r6, #0
   1e3a0:	cmn	r0, #1
   1e3a4:	movweq	r6, #15
   1e3a8:	cmp	r9, #0
   1e3ac:	beq	1e3b8 <dta_handle_rows+0x160>
   1e3b0:	mov	r0, r9
   1e3b4:	bl	4938 <free@plt>
   1e3b8:	mov	r0, r6
   1e3bc:	sub	sp, fp, #28
   1e3c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e3c4:	mov	r6, r0
   1e3c8:	cmp	r9, #0
   1e3cc:	bne	1e3b0 <dta_handle_rows+0x158>
   1e3d0:	b	1e3b8 <dta_handle_rows+0x160>
   1e3d4:	mov	r6, #15
   1e3d8:	cmp	r9, #0
   1e3dc:	bne	1e3b0 <dta_handle_rows+0x158>
   1e3e0:	b	1e3b8 <dta_handle_rows+0x160>
   1e3e4:	mov	r6, #2
   1e3e8:	cmp	r9, #0
   1e3ec:	bne	1e3b0 <dta_handle_rows+0x158>
   1e3f0:	b	1e3b8 <dta_handle_rows+0x160>

0001e3f4 <dta_handle_row>:
   1e3f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e3f8:	add	fp, sp, #28
   1e3fc:	sub	sp, sp, #4
   1e400:	vpush	{d8-d9}
   1e404:	sub	sp, sp, #88	; 0x58
   1e408:	sub	sp, sp, #2048	; 0x800
   1e40c:	str	r0, [sp, #16]
   1e410:	ldr	r0, [r1, #148]	; 0x94
   1e414:	cmp	r0, #1
   1e418:	blt	1e6b4 <dta_handle_row+0x2c0>
   1e41c:	mov	r7, r1
   1e420:	add	r0, r1, #184	; 0xb8
   1e424:	str	r0, [sp, #12]
   1e428:	add	r5, sp, #64	; 0x40
   1e42c:	add	r0, r5, #8
   1e430:	str	r0, [sp, #28]
   1e434:	ldr	r0, [pc, #668]	; 1e6d8 <dta_handle_row+0x2e4>
   1e438:	add	r0, pc, r0
   1e43c:	vld1.64	{d8-d9}, [r0]
   1e440:	add	r6, sp, #80	; 0x50
   1e444:	add	r8, sp, #84	; 0x54
   1e448:	mov	r4, #0
   1e44c:	mov	r9, #0
   1e450:	str	r1, [sp, #20]
   1e454:	vst1.64	{d8-d9}, [r5]
   1e458:	ldr	r0, [r7, #28]
   1e45c:	add	r0, r0, r9, lsl #1
   1e460:	ldrh	r0, [r0]
   1e464:	mov	r1, r7
   1e468:	mov	r2, r6
   1e46c:	ldr	r3, [sp, #28]
   1e470:	bl	4c74 <dta_type_info@plt>
   1e474:	cmp	r0, #0
   1e478:	bne	1e6b8 <dta_handle_row+0x2c4>
   1e47c:	ldr	r0, [sp, #80]	; 0x50
   1e480:	add	r1, r0, r4
   1e484:	ldr	r2, [r7, #228]	; 0xe4
   1e488:	ldr	r2, [r2, r9, lsl #2]
   1e48c:	ldr	r2, [r2, #2144]	; 0x860
   1e490:	cmp	r2, #0
   1e494:	beq	1e4a0 <dta_handle_row+0xac>
   1e498:	mov	r4, r1
   1e49c:	b	1e610 <dta_handle_row+0x21c>
   1e4a0:	ldr	r2, [r7, #160]	; 0xa0
   1e4a4:	cmp	r1, r2
   1e4a8:	bhi	1e6c8 <dta_handle_row+0x2d4>
   1e4ac:	str	r4, [sp, #24]
   1e4b0:	ldr	r1, [sp, #72]	; 0x48
   1e4b4:	cmp	r1, #6
   1e4b8:	bhi	1e5c0 <dta_handle_row+0x1cc>
   1e4bc:	add	r2, pc, #4
   1e4c0:	ldr	r1, [r2, r1, lsl #2]
   1e4c4:	add	pc, r2, r1
   1e4c8:	.word	0x0000001c
   1e4cc:	.word	0x00000050
   1e4d0:	.word	0x00000070
   1e4d4:	.word	0x00000090
   1e4d8:	.word	0x000000b0
   1e4dc:	.word	0x000000d0
   1e4e0:	.word	0x0000015c
   1e4e4:	cmp	r0, #0
   1e4e8:	ldr	r4, [sp, #24]
   1e4ec:	beq	1e684 <dta_handle_row+0x290>
   1e4f0:	ldr	r1, [sp, #16]
   1e4f4:	add	r1, r1, r4
   1e4f8:	mov	r3, #0
   1e4fc:	ldrb	r2, [r1, r3]
   1e500:	cmp	r2, #0
   1e504:	beq	1e688 <dta_handle_row+0x294>
   1e508:	add	r3, r3, #1
   1e50c:	cmp	r3, r0
   1e510:	bcc	1e4fc <dta_handle_row+0x108>
   1e514:	b	1e688 <dta_handle_row+0x294>
   1e518:	ldr	r0, [sp, #16]
   1e51c:	ldr	r1, [sp, #24]
   1e520:	add	r2, r0, r1
   1e524:	add	sl, sp, #32
   1e528:	mov	r0, sl
   1e52c:	ldr	r1, [sp, #20]
   1e530:	bl	1e7d0 <dta_interpret_int8_bytes>
   1e534:	b	1e5b4 <dta_handle_row+0x1c0>
   1e538:	ldr	r0, [sp, #16]
   1e53c:	ldr	r1, [sp, #24]
   1e540:	add	r2, r0, r1
   1e544:	add	sl, sp, #32
   1e548:	mov	r0, sl
   1e54c:	ldr	r1, [sp, #20]
   1e550:	bl	1e84c <dta_interpret_int16_bytes>
   1e554:	b	1e5b4 <dta_handle_row+0x1c0>
   1e558:	ldr	r0, [sp, #16]
   1e55c:	ldr	r1, [sp, #24]
   1e560:	add	r2, r0, r1
   1e564:	add	sl, sp, #32
   1e568:	mov	r0, sl
   1e56c:	ldr	r1, [sp, #20]
   1e570:	bl	1e8e0 <dta_interpret_int32_bytes>
   1e574:	b	1e5b4 <dta_handle_row+0x1c0>
   1e578:	ldr	r0, [sp, #16]
   1e57c:	ldr	r1, [sp, #24]
   1e580:	add	r2, r0, r1
   1e584:	add	sl, sp, #32
   1e588:	mov	r0, sl
   1e58c:	ldr	r1, [sp, #20]
   1e590:	bl	1e968 <dta_interpret_float_bytes>
   1e594:	b	1e5b4 <dta_handle_row+0x1c0>
   1e598:	ldr	r0, [sp, #16]
   1e59c:	ldr	r1, [sp, #24]
   1e5a0:	add	r2, r0, r1
   1e5a4:	add	sl, sp, #32
   1e5a8:	mov	r0, sl
   1e5ac:	ldr	r1, [sp, #20]
   1e5b0:	bl	1e9f8 <dta_interpret_double_bytes>
   1e5b4:	vld1.64	{d16-d17}, [sl]
   1e5b8:	ldr	r7, [sp, #20]
   1e5bc:	vst1.64	{d16-d17}, [r5]
   1e5c0:	ldr	r0, [r7, #228]	; 0xe4
   1e5c4:	ldr	r4, [r7, #256]	; 0x100
   1e5c8:	ldr	lr, [r7, #276]	; 0x114
   1e5cc:	ldr	sl, [r0, r9, lsl #2]
   1e5d0:	ldr	r0, [sp, #12]
   1e5d4:	ldr	ip, [r0]
   1e5d8:	ldr	r0, [sp, #28]
   1e5dc:	ldrd	r0, [r0]
   1e5e0:	ldr	r2, [sp, #64]	; 0x40
   1e5e4:	ldr	r3, [sp, #68]	; 0x44
   1e5e8:	stm	sp, {r0, r1, lr}
   1e5ec:	mov	r0, ip
   1e5f0:	mov	r1, sl
   1e5f4:	blx	r4
   1e5f8:	cmp	r0, #0
   1e5fc:	bne	1e6d0 <dta_handle_row+0x2dc>
   1e600:	ldr	r0, [sp, #80]	; 0x50
   1e604:	ldr	r4, [sp, #24]
   1e608:	add	r4, r0, r4
   1e60c:	ldr	r7, [sp, #20]
   1e610:	add	r9, r9, #1
   1e614:	ldr	r0, [r7, #148]	; 0x94
   1e618:	cmp	r9, r0
   1e61c:	blt	1e454 <dta_handle_row+0x60>
   1e620:	b	1e6b4 <dta_handle_row+0x2c0>
   1e624:	ldr	r0, [sp, #16]
   1e628:	ldr	r1, [sp, #24]
   1e62c:	add	r2, r0, r1
   1e630:	add	sl, sp, #32
   1e634:	mov	r0, sl
   1e638:	mov	r1, r7
   1e63c:	bl	1e6e0 <dta_interpret_strl_vo_bytes>
   1e640:	ldrd	r2, [r7, #216]	; 0xd8
   1e644:	ldr	r0, [pc, #144]	; 1e6dc <dta_handle_row+0x2e8>
   1e648:	add	r0, pc, r0
   1e64c:	str	r0, [sp]
   1e650:	mov	r0, sl
   1e654:	mov	r1, r2
   1e658:	mov	r2, r3
   1e65c:	mov	r3, #4
   1e660:	bl	4d34 <bsearch@plt>
   1e664:	cmp	r0, #0
   1e668:	ldrne	r0, [r0]
   1e66c:	addne	r0, r0, #24
   1e670:	strne	r0, [sp, #64]	; 0x40
   1e674:	mov	r0, #0
   1e678:	str	r0, [sp, #72]	; 0x48
   1e67c:	ldr	r7, [sp, #20]
   1e680:	b	1e5c0 <dta_handle_row+0x1cc>
   1e684:	mov	r3, #0
   1e688:	ldr	r0, [r7, #236]	; 0xec
   1e68c:	str	r0, [sp]
   1e690:	ldr	r0, [sp, #16]
   1e694:	add	r2, r0, r4
   1e698:	mov	r0, r8
   1e69c:	mov	r1, #2048	; 0x800
   1e6a0:	bl	4cbc <readstat_convert@plt>
   1e6a4:	cmp	r0, #0
   1e6a8:	bne	1e6b8 <dta_handle_row+0x2c4>
   1e6ac:	str	r8, [sp, #64]	; 0x40
   1e6b0:	b	1e5c0 <dta_handle_row+0x1cc>
   1e6b4:	mov	r0, #0
   1e6b8:	sub	sp, fp, #48	; 0x30
   1e6bc:	vpop	{d8-d9}
   1e6c0:	add	sp, sp, #4
   1e6c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6c8:	mov	r0, #5
   1e6cc:	b	1e6b8 <dta_handle_row+0x2c4>
   1e6d0:	mov	r0, #4
   1e6d4:	b	1e6b8 <dta_handle_row+0x2c4>
   1e6d8:	.word	0x00009630
   1e6dc:	.word	0x0000015c

0001e6e0 <dta_interpret_strl_vo_bytes>:
   1e6e0:	push	{r4, r5, r6, r7, fp, lr}
   1e6e4:	add	fp, sp, #16
   1e6e8:	mov	r5, r1
   1e6ec:	mov	r4, r0
   1e6f0:	vmov.i32	q8, #0	; 0x00000000
   1e6f4:	vst1.64	{d16-d17}, [r0]!
   1e6f8:	vst1.64	{d16-d17}, [r0]
   1e6fc:	ldr	r0, [r1, #112]	; 0x70
   1e700:	cmp	r0, #4
   1e704:	beq	1e748 <dta_interpret_strl_vo_bytes+0x68>
   1e708:	cmp	r0, #2
   1e70c:	popne	{r4, r5, r6, r7, fp, pc}
   1e710:	ldrb	r0, [r2]
   1e714:	ldr	r1, [r5, #232]	; 0xe8
   1e718:	cmp	r1, #2
   1e71c:	bne	1e788 <dta_interpret_strl_vo_bytes+0xa8>
   1e720:	ldrb	r1, [r2, #1]
   1e724:	orr	r0, r1, r0, lsl #8
   1e728:	strh	r0, [r4]
   1e72c:	ldrb	r0, [r2, #2]
   1e730:	ldrb	r1, [r2, #3]
   1e734:	orr	r7, r1, r0, lsl #8
   1e738:	ldr	r0, [r2, #4]
   1e73c:	rev	r6, r0
   1e740:	strd	r6, [r4, #8]
   1e744:	pop	{r4, r5, r6, r7, fp, pc}
   1e748:	ldr	r0, [r2]
   1e74c:	ldr	r6, [r2, #4]
   1e750:	ldrb	r1, [r5, #192]	; 0xc0
   1e754:	tst	r1, #1
   1e758:	beq	1e760 <dta_interpret_strl_vo_bytes+0x80>
   1e75c:	bl	480c <byteswap4@plt>
   1e760:	strh	r0, [r4]
   1e764:	ldrb	r0, [r5, #192]	; 0xc0
   1e768:	tst	r0, #1
   1e76c:	beq	1e77c <dta_interpret_strl_vo_bytes+0x9c>
   1e770:	mov	r0, r6
   1e774:	bl	480c <byteswap4@plt>
   1e778:	mov	r6, r0
   1e77c:	mov	r7, #0
   1e780:	strd	r6, [r4, #8]
   1e784:	pop	{r4, r5, r6, r7, fp, pc}
   1e788:	ldrb	r1, [r2, #1]
   1e78c:	orr	r0, r0, r1, lsl #8
   1e790:	strh	r0, [r4]
   1e794:	ldrb	r0, [r2, #7]
   1e798:	ldrb	r1, [r2, #6]
   1e79c:	orr	r7, r1, r0, lsl #8
   1e7a0:	ldr	r6, [r2, #2]
   1e7a4:	strd	r6, [r4, #8]
   1e7a8:	pop	{r4, r5, r6, r7, fp, pc}

0001e7ac <dta_compare_strls>:
   1e7ac:	ldrh	r2, [r0]
   1e7b0:	ldr	r1, [r1]
   1e7b4:	ldrh	r3, [r1]
   1e7b8:	cmp	r2, r3
   1e7bc:	subne	r0, r2, r3
   1e7c0:	ldreq	r1, [r1, #8]
   1e7c4:	ldreq	r0, [r0, #8]
   1e7c8:	subeq	r0, r0, r1
   1e7cc:	bx	lr

0001e7d0 <dta_interpret_int8_bytes>:
   1e7d0:	push	{r4, r5, fp, lr}
   1e7d4:	add	fp, sp, #8
   1e7d8:	mov	r5, r1
   1e7dc:	mov	r4, r0
   1e7e0:	ldr	r0, [pc, #96]	; 1e848 <dta_interpret_int8_bytes+0x78>
   1e7e4:	add	r0, pc, r0
   1e7e8:	vld1.64	{d16-d17}, [r0]
   1e7ec:	vst1.64	{d16-d17}, [r4]
   1e7f0:	ldrb	r0, [r2]
   1e7f4:	ldrb	r1, [r1, #192]	; 0xc0
   1e7f8:	tst	r1, #2
   1e7fc:	beq	1e804 <dta_interpret_int8_bytes+0x34>
   1e800:	bl	4e0c <ones_to_twos_complement1@plt>
   1e804:	ldrsb	r1, [r5, #193]	; 0xc1
   1e808:	sxtb	r2, r0
   1e80c:	cmp	r2, r1
   1e810:	ble	1e840 <dta_interpret_int8_bytes+0x70>
   1e814:	mov	r1, #1
   1e818:	cmp	r2, #102	; 0x66
   1e81c:	blt	1e834 <dta_interpret_int8_bytes+0x64>
   1e820:	ldrb	r2, [r5, #192]	; 0xc0
   1e824:	ands	r2, r2, #8
   1e828:	subne	r1, r0, #5
   1e82c:	strbne	r1, [r4, #12]
   1e830:	movne	r1, #2
   1e834:	ldrb	r2, [r4, #13]
   1e838:	orr	r1, r2, r1
   1e83c:	strb	r1, [r4, #13]
   1e840:	strb	r0, [r4]
   1e844:	pop	{r4, r5, fp, pc}
   1e848:	.word	0x00009294

0001e84c <dta_interpret_int16_bytes>:
   1e84c:	push	{r4, r5, fp, lr}
   1e850:	add	fp, sp, #8
   1e854:	mov	r5, r1
   1e858:	mov	r4, r0
   1e85c:	ldr	r0, [pc, #120]	; 1e8dc <dta_interpret_int16_bytes+0x90>
   1e860:	add	r0, pc, r0
   1e864:	vld1.64	{d16-d17}, [r0]
   1e868:	vst1.64	{d16-d17}, [r4]
   1e86c:	ldrh	r0, [r2]
   1e870:	ldrb	r1, [r1, #192]	; 0xc0
   1e874:	tst	r1, #1
   1e878:	beq	1e880 <dta_interpret_int16_bytes+0x34>
   1e87c:	bl	4920 <byteswap2@plt>
   1e880:	ldrb	r1, [r5, #192]	; 0xc0
   1e884:	tst	r1, #2
   1e888:	beq	1e894 <dta_interpret_int16_bytes+0x48>
   1e88c:	sxth	r0, r0
   1e890:	bl	4980 <ones_to_twos_complement2@plt>
   1e894:	ldrsh	r1, [r5, #194]	; 0xc2
   1e898:	sxth	r2, r0
   1e89c:	cmp	r2, r1
   1e8a0:	ble	1e8d4 <dta_interpret_int16_bytes+0x88>
   1e8a4:	mov	r1, #1
   1e8a8:	movw	r3, #32742	; 0x7fe6
   1e8ac:	cmp	r2, r3
   1e8b0:	blt	1e8c8 <dta_interpret_int16_bytes+0x7c>
   1e8b4:	ldrb	r2, [r5, #192]	; 0xc0
   1e8b8:	ands	r2, r2, #8
   1e8bc:	addne	r1, r0, #123	; 0x7b
   1e8c0:	strbne	r1, [r4, #12]
   1e8c4:	movne	r1, #2
   1e8c8:	ldrb	r2, [r4, #13]
   1e8cc:	orr	r1, r2, r1
   1e8d0:	strb	r1, [r4, #13]
   1e8d4:	strh	r0, [r4]
   1e8d8:	pop	{r4, r5, fp, pc}
   1e8dc:	.word	0x00009228

0001e8e0 <dta_interpret_int32_bytes>:
   1e8e0:	push	{r4, r5, fp, lr}
   1e8e4:	add	fp, sp, #8
   1e8e8:	mov	r5, r1
   1e8ec:	mov	r4, r0
   1e8f0:	ldr	r0, [pc, #108]	; 1e964 <dta_interpret_int32_bytes+0x84>
   1e8f4:	add	r0, pc, r0
   1e8f8:	vld1.64	{d16-d17}, [r0]
   1e8fc:	vst1.64	{d16-d17}, [r4]
   1e900:	ldr	r0, [r2]
   1e904:	ldrb	r1, [r1, #192]	; 0xc0
   1e908:	tst	r1, #1
   1e90c:	beq	1e914 <dta_interpret_int32_bytes+0x34>
   1e910:	bl	480c <byteswap4@plt>
   1e914:	ldrb	r1, [r5, #192]	; 0xc0
   1e918:	tst	r1, #2
   1e91c:	beq	1e924 <dta_interpret_int32_bytes+0x44>
   1e920:	bl	4974 <ones_to_twos_complement4@plt>
   1e924:	ldr	r1, [r5, #196]	; 0xc4
   1e928:	cmp	r0, r1
   1e92c:	ble	1e95c <dta_interpret_int32_bytes+0x7c>
   1e930:	mov	r1, #1
   1e934:	cmn	r0, #-2147483622	; 0x8000001a
   1e938:	blt	1e950 <dta_interpret_int32_bytes+0x70>
   1e93c:	ldrb	r2, [r5, #192]	; 0xc0
   1e940:	ands	r2, r2, #8
   1e944:	addne	r1, r0, #123	; 0x7b
   1e948:	strbne	r1, [r4, #12]
   1e94c:	movne	r1, #2
   1e950:	ldrb	r2, [r4, #13]
   1e954:	orr	r1, r2, r1
   1e958:	strb	r1, [r4, #13]
   1e95c:	str	r0, [r4]
   1e960:	pop	{r4, r5, fp, pc}
   1e964:	.word	0x000091a4

0001e968 <dta_interpret_float_bytes>:
   1e968:	push	{r4, r5, fp, lr}
   1e96c:	add	fp, sp, #8
   1e970:	mov	r5, r1
   1e974:	mov	r4, r0
   1e978:	ldr	r0, [pc, #116]	; 1e9f4 <dta_interpret_float_bytes+0x8c>
   1e97c:	add	r0, pc, r0
   1e980:	vld1.64	{d16-d17}, [r0]
   1e984:	vst1.64	{d16-d17}, [r4]
   1e988:	ldr	r0, [r2]
   1e98c:	ldrb	r1, [r1, #192]	; 0xc0
   1e990:	tst	r1, #1
   1e994:	beq	1e99c <dta_interpret_float_bytes+0x34>
   1e998:	bl	480c <byteswap4@plt>
   1e99c:	ldr	r1, [r5, #200]	; 0xc8
   1e9a0:	cmp	r0, r1
   1e9a4:	ble	1e9ec <dta_interpret_float_bytes+0x84>
   1e9a8:	mov	r1, #1
   1e9ac:	cmp	r0, #2130706432	; 0x7f000000
   1e9b0:	ble	1e9d8 <dta_interpret_float_bytes+0x70>
   1e9b4:	ldrb	r2, [r5, #192]	; 0xc0
   1e9b8:	ands	r2, r2, #8
   1e9bc:	beq	1e9d8 <dta_interpret_float_bytes+0x70>
   1e9c0:	add	r0, r0, #260096	; 0x3f800
   1e9c4:	add	r0, r0, #262144	; 0x40000
   1e9c8:	mov	r1, #97	; 0x61
   1e9cc:	add	r0, r1, r0, lsr #11
   1e9d0:	strb	r0, [r4, #12]
   1e9d4:	mov	r1, #2
   1e9d8:	ldrb	r0, [r4, #13]
   1e9dc:	orr	r0, r0, r1
   1e9e0:	strb	r0, [r4, #13]
   1e9e4:	movw	r0, #0
   1e9e8:	movt	r0, #32704	; 0x7fc0
   1e9ec:	str	r0, [r4]
   1e9f0:	pop	{r4, r5, fp, pc}
   1e9f4:	.word	0x0000912c

0001e9f8 <dta_interpret_double_bytes>:
   1e9f8:	push	{r4, r5, fp, lr}
   1e9fc:	add	fp, sp, #8
   1ea00:	mov	r5, r1
   1ea04:	mov	r4, r0
   1ea08:	ldr	r0, [pc, #132]	; 1ea94 <dta_interpret_double_bytes+0x9c>
   1ea0c:	add	r0, pc, r0
   1ea10:	vld1.64	{d16-d17}, [r0]
   1ea14:	vst1.64	{d16-d17}, [r4]
   1ea18:	ldr	r0, [r2]
   1ea1c:	ldr	r1, [r2, #4]
   1ea20:	ldrb	r2, [r5, #192]	; 0xc0
   1ea24:	tst	r2, #1
   1ea28:	beq	1ea30 <dta_interpret_double_bytes+0x38>
   1ea2c:	bl	47f4 <byteswap8@plt>
   1ea30:	ldrd	r2, [r5, #208]	; 0xd0
   1ea34:	subs	r2, r2, r0
   1ea38:	sbcs	r2, r3, r1
   1ea3c:	bge	1ea8c <dta_interpret_double_bytes+0x94>
   1ea40:	mov	r2, #1
   1ea44:	movw	r3, #0
   1ea48:	movt	r3, #32736	; 0x7fe0
   1ea4c:	subs	r0, r0, #1
   1ea50:	sbcs	r0, r1, r3
   1ea54:	blt	1ea74 <dta_interpret_double_bytes+0x7c>
   1ea58:	ldrb	r0, [r5, #192]	; 0xc0
   1ea5c:	ands	r0, r0, #8
   1ea60:	addne	r0, r1, #65280	; 0xff00
   1ea64:	movne	r1, #97	; 0x61
   1ea68:	addne	r0, r1, r0, lsr #8
   1ea6c:	strbne	r0, [r4, #12]
   1ea70:	movne	r2, #2
   1ea74:	ldrb	r0, [r4, #13]
   1ea78:	orr	r0, r0, r2
   1ea7c:	strb	r0, [r4, #13]
   1ea80:	movw	r1, #0
   1ea84:	movt	r1, #32760	; 0x7ff8
   1ea88:	mov	r0, #0
   1ea8c:	strd	r0, [r4]
   1ea90:	pop	{r4, r5, fp, pc}
   1ea94:	.word	0x000090ac

0001ea98 <dta_metadata_ok>:
   1ea98:	ldr	r1, [r0, #16]
   1ea9c:	cmp	r1, #0
   1eaa0:	movne	r0, #6
   1eaa4:	bxne	lr
   1eaa8:	ldr	r0, [r0, #8]
   1eaac:	sub	r1, r0, #104	; 0x68
   1eab0:	mov	r0, #0
   1eab4:	cmp	r1, #15
   1eab8:	movwhi	r0, #24
   1eabc:	bx	lr

0001eac0 <readstat_begin_writing_dta>:
   1eac0:	push	{r4, sl, fp, lr}
   1eac4:	add	fp, sp, #8
   1eac8:	ldr	ip, [r0, #8]
   1eacc:	cmp	ip, #0
   1ead0:	beq	1eb10 <readstat_begin_writing_dta+0x50>
   1ead4:	ldr	r3, [pc, #412]	; 1ec78 <readstat_begin_writing_dta+0x1b8>
   1ead8:	ldr	r3, [pc, r3]
   1eadc:	str	r3, [r0, #292]	; 0x124
   1eae0:	cmp	ip, #116	; 0x74
   1eae4:	ble	1eb88 <readstat_begin_writing_dta+0xc8>
   1eae8:	ldr	r3, [pc, #408]	; 1ec88 <readstat_begin_writing_dta+0x1c8>
   1eaec:	add	r3, pc, r3
   1eaf0:	str	r3, [r0, #228]	; 0xe4
   1eaf4:	cmp	ip, #117	; 0x75
   1eaf8:	bne	1eb30 <readstat_begin_writing_dta+0x70>
   1eafc:	ldr	ip, [pc, #392]	; 1ec8c <readstat_begin_writing_dta+0x1cc>
   1eb00:	add	ip, pc, ip
   1eb04:	ldr	r3, [pc, #388]	; 1ec90 <readstat_begin_writing_dta+0x1d0>
   1eb08:	add	r3, pc, r3
   1eb0c:	b	1eb40 <readstat_begin_writing_dta+0x80>
   1eb10:	mov	r3, #118	; 0x76
   1eb14:	str	r3, [r0, #8]
   1eb18:	ldr	r3, [pc, #328]	; 1ec68 <readstat_begin_writing_dta+0x1a8>
   1eb1c:	add	r3, pc, r3
   1eb20:	str	r3, [r0, #228]	; 0xe4
   1eb24:	ldr	r3, [pc, #320]	; 1ec6c <readstat_begin_writing_dta+0x1ac>
   1eb28:	ldr	r3, [pc, r3]
   1eb2c:	str	r3, [r0, #292]	; 0x124
   1eb30:	ldr	ip, [pc, #312]	; 1ec70 <readstat_begin_writing_dta+0x1b0>
   1eb34:	add	ip, pc, ip
   1eb38:	ldr	r3, [pc, #308]	; 1ec74 <readstat_begin_writing_dta+0x1b4>
   1eb3c:	add	r3, pc, r3
   1eb40:	str	ip, [r0, #260]	; 0x104
   1eb44:	str	r3, [r0, #232]	; 0xe8
   1eb48:	ldr	ip, [pc, #324]	; 1ec94 <readstat_begin_writing_dta+0x1d4>
   1eb4c:	add	ip, pc, ip
   1eb50:	ldr	r4, [pc, #320]	; 1ec98 <readstat_begin_writing_dta+0x1d8>
   1eb54:	add	r4, pc, r4
   1eb58:	ldr	r3, [pc, #316]	; 1ec9c <readstat_begin_writing_dta+0x1dc>
   1eb5c:	add	r3, pc, r3
   1eb60:	str	r4, [r0, #236]	; 0xec
   1eb64:	str	ip, [r0, #240]	; 0xf0
   1eb68:	str	r3, [r0, #244]	; 0xf4
   1eb6c:	ldr	r3, [pc, #300]	; 1eca0 <readstat_begin_writing_dta+0x1e0>
   1eb70:	add	r3, pc, r3
   1eb74:	ldr	r4, [pc, #296]	; 1eca4 <readstat_begin_writing_dta+0x1e4>
   1eb78:	add	r4, pc, r4
   1eb7c:	str	r3, [r0, #268]	; 0x10c
   1eb80:	str	r4, [r0, #272]	; 0x110
   1eb84:	b	1ec0c <readstat_begin_writing_dta+0x14c>
   1eb88:	cmp	ip, #110	; 0x6e
   1eb8c:	ble	1ebb4 <readstat_begin_writing_dta+0xf4>
   1eb90:	ldr	r3, [pc, #272]	; 1eca8 <readstat_begin_writing_dta+0x1e8>
   1eb94:	add	r3, pc, r3
   1eb98:	ldr	r4, [pc, #268]	; 1ecac <readstat_begin_writing_dta+0x1ec>
   1eb9c:	add	r4, pc, r4
   1eba0:	str	r4, [r0, #228]	; 0xe4
   1eba4:	str	r3, [r0, #232]	; 0xe8
   1eba8:	cmp	ip, #112	; 0x70
   1ebac:	bgt	1eb48 <readstat_begin_writing_dta+0x88>
   1ebb0:	b	1ebdc <readstat_begin_writing_dta+0x11c>
   1ebb4:	ldr	lr, [pc, #192]	; 1ec7c <readstat_begin_writing_dta+0x1bc>
   1ebb8:	add	lr, pc, lr
   1ebbc:	ldr	r3, [pc, #188]	; 1ec80 <readstat_begin_writing_dta+0x1c0>
   1ebc0:	add	r3, pc, r3
   1ebc4:	ldr	r4, [pc, #184]	; 1ec84 <readstat_begin_writing_dta+0x1c4>
   1ebc8:	add	r4, pc, r4
   1ebcc:	cmp	ip, #110	; 0x6e
   1ebd0:	moveq	r4, r3
   1ebd4:	str	lr, [r0, #228]	; 0xe4
   1ebd8:	str	r4, [r0, #232]	; 0xe8
   1ebdc:	ldr	ip, [pc, #204]	; 1ecb0 <readstat_begin_writing_dta+0x1f0>
   1ebe0:	add	ip, pc, ip
   1ebe4:	ldr	r4, [pc, #200]	; 1ecb4 <readstat_begin_writing_dta+0x1f4>
   1ebe8:	add	r4, pc, r4
   1ebec:	ldr	r3, [pc, #196]	; 1ecb8 <readstat_begin_writing_dta+0x1f8>
   1ebf0:	add	r3, pc, r3
   1ebf4:	str	r4, [r0, #236]	; 0xec
   1ebf8:	str	ip, [r0, #240]	; 0xf0
   1ebfc:	str	r3, [r0, #244]	; 0xf4
   1ec00:	ldr	r3, [pc, #180]	; 1ecbc <readstat_begin_writing_dta+0x1fc>
   1ec04:	add	r3, pc, r3
   1ec08:	str	r3, [r0, #268]	; 0x10c
   1ec0c:	ldr	ip, [pc, #172]	; 1ecc0 <readstat_begin_writing_dta+0x200>
   1ec10:	add	ip, pc, ip
   1ec14:	ldr	r4, [pc, #168]	; 1ecc4 <readstat_begin_writing_dta+0x204>
   1ec18:	add	r4, pc, r4
   1ec1c:	ldr	r3, [pc, #164]	; 1ecc8 <readstat_begin_writing_dta+0x208>
   1ec20:	add	r3, pc, r3
   1ec24:	str	r4, [r0, #248]	; 0xf8
   1ec28:	str	ip, [r0, #252]	; 0xfc
   1ec2c:	str	r3, [r0, #256]	; 0x100
   1ec30:	ldr	r3, [pc, #148]	; 1eccc <readstat_begin_writing_dta+0x20c>
   1ec34:	add	r3, pc, r3
   1ec38:	str	r3, [r0, #264]	; 0x108
   1ec3c:	ldr	r3, [pc, #140]	; 1ecd0 <readstat_begin_writing_dta+0x210>
   1ec40:	add	r3, pc, r3
   1ec44:	str	r3, [r0, #276]	; 0x114
   1ec48:	ldr	r3, [pc, #132]	; 1ecd4 <readstat_begin_writing_dta+0x214>
   1ec4c:	add	r3, pc, r3
   1ec50:	ldr	r4, [pc, #128]	; 1ecd8 <readstat_begin_writing_dta+0x218>
   1ec54:	add	r4, pc, r4
   1ec58:	str	r3, [r0, #284]	; 0x11c
   1ec5c:	str	r4, [r0, #288]	; 0x120
   1ec60:	pop	{r4, sl, fp, lr}
   1ec64:	b	49d4 <readstat_begin_writing_file@plt>
   1ec68:	.word	0x000001b8
   1ec6c:	.word	0x000267dc
   1ec70:	.word	0x00000268
   1ec74:	.word	0x0000020c
   1ec78:	.word	0x0002682c
   1ec7c:	.word	0x00000170
   1ec80:	.word	0x000001a4
   1ec84:	.word	0x000001b8
   1ec88:	.word	0x000001e8
   1ec8c:	.word	0x000002e4
   1ec90:	.word	0x0000025c
   1ec94:	.word	0x000002e8
   1ec98:	.word	0x000002b4
   1ec9c:	.word	0x00000308
   1eca0:	.word	0x00000324
   1eca4:	.word	0x000003a4
   1eca8:	.word	0x000001d0
   1ecac:	.word	0x0000016c
   1ecb0:	.word	0x00000434
   1ecb4:	.word	0x00000400
   1ecb8:	.word	0x00000454
   1ecbc:	.word	0x00000470
   1ecc0:	.word	0x00000558
   1ecc4:	.word	0x000004e4
   1ecc8:	.word	0x000005b0
   1eccc:	.word	0x00000610
   1ecd0:	.word	0x0000060c
   1ecd4:	.word	0x00000738
   1ecd8:	.word	0x000007bc

0001ecdc <dta_117_variable_width>:
   1ecdc:	cmp	r0, #6
   1ece0:	moveq	r1, #8
   1ece4:	moveq	r0, r1
   1ece8:	bxeq	lr
   1ecec:	cmp	r0, #0
   1ecf0:	bne	1ed0c <dta_117_variable_width+0x30>
   1ecf4:	sub	r0, r1, #1
   1ecf8:	movw	r2, #2044	; 0x7fc
   1ecfc:	cmp	r0, r2
   1ed00:	movwhi	r1, #2045	; 0x7fd
   1ed04:	mov	r0, r1
   1ed08:	bx	lr
   1ed0c:	b	1f41c <dta_numeric_variable_width>

0001ed10 <dta_111_variable_width>:
   1ed10:	cmp	r0, #0
   1ed14:	beq	1ed1c <dta_111_variable_width+0xc>
   1ed18:	b	1f41c <dta_numeric_variable_width>
   1ed1c:	sub	r0, r1, #1
   1ed20:	cmp	r0, #243	; 0xf3
   1ed24:	movwhi	r1, #244	; 0xf4
   1ed28:	mov	r0, r1
   1ed2c:	bx	lr

0001ed30 <dta_old_variable_width>:
   1ed30:	cmp	r0, #0
   1ed34:	beq	1ed3c <dta_old_variable_width+0xc>
   1ed38:	b	1f41c <dta_numeric_variable_width>
   1ed3c:	sub	r0, r1, #1
   1ed40:	cmp	r0, #127	; 0x7f
   1ed44:	movwhi	r1, #128	; 0x80
   1ed48:	mov	r0, r1
   1ed4c:	bx	lr

0001ed50 <dta_118_variable_ok>:
   1ed50:	push	{fp, lr}
   1ed54:	mov	fp, sp
   1ed58:	bl	4e00 <readstat_variable_get_name@plt>
   1ed5c:	mov	r1, #1
   1ed60:	mov	r2, #129	; 0x81
   1ed64:	pop	{fp, lr}
   1ed68:	b	1f43c <dta_validate_name>

0001ed6c <dta_110_variable_ok>:
   1ed6c:	push	{fp, lr}
   1ed70:	mov	fp, sp
   1ed74:	bl	4e00 <readstat_variable_get_name@plt>
   1ed78:	mov	r1, #0
   1ed7c:	mov	r2, #33	; 0x21
   1ed80:	pop	{fp, lr}
   1ed84:	b	1f43c <dta_validate_name>

0001ed88 <dta_old_variable_ok>:
   1ed88:	push	{fp, lr}
   1ed8c:	mov	fp, sp
   1ed90:	bl	4e00 <readstat_variable_get_name@plt>
   1ed94:	mov	r1, #0
   1ed98:	mov	r2, #9
   1ed9c:	pop	{fp, lr}
   1eda0:	b	1f43c <dta_validate_name>

0001eda4 <dta_118_write_string_ref>:
   1eda4:	cmp	r2, #0
   1eda8:	moveq	r0, #34	; 0x22
   1edac:	bxeq	lr
   1edb0:	push	{r4, r5, r6, sl, fp, lr}
   1edb4:	add	fp, sp, #16
   1edb8:	mov	r4, r0
   1edbc:	ldr	r6, [r2, #8]
   1edc0:	ldr	r5, [r2, #12]
   1edc4:	ldrh	r0, [r2]
   1edc8:	strh	r0, [r4]
   1edcc:	bl	492c <machine_is_little_endian@plt>
   1edd0:	cmp	r0, #0
   1edd4:	lsreq	r5, r6, #16
   1edd8:	strh	r5, [r4, #6]
   1eddc:	lsleq	r6, r6, #16
   1ede0:	str	r6, [r4, #2]
   1ede4:	mov	r0, #0
   1ede8:	pop	{r4, r5, r6, sl, fp, pc}

0001edec <dta_117_write_string_ref>:
   1edec:	cmp	r2, #0
   1edf0:	moveq	r0, #34	; 0x22
   1edf4:	bxeq	lr
   1edf8:	ldr	r1, [r2]
   1edfc:	ldr	r2, [r2, #8]
   1ee00:	str	r2, [r0, #4]
   1ee04:	str	r1, [r0]
   1ee08:	mov	r0, #0
   1ee0c:	bx	lr

0001ee10 <dta_113_write_int8>:
   1ee10:	mov	r1, #20
   1ee14:	cmp	r2, #100	; 0x64
   1ee18:	bgt	1ee34 <dta_113_write_int8+0x24>
   1ee1c:	push	{fp, lr}
   1ee20:	mov	fp, sp
   1ee24:	mov	r1, r2
   1ee28:	bl	1f788 <dta_write_raw_int8>
   1ee2c:	mov	r1, #0
   1ee30:	pop	{fp, lr}
   1ee34:	mov	r0, r1
   1ee38:	bx	lr

0001ee3c <dta_113_write_int16>:
   1ee3c:	mov	r1, #20
   1ee40:	movw	r3, #32740	; 0x7fe4
   1ee44:	cmp	r2, r3
   1ee48:	bgt	1ee64 <dta_113_write_int16+0x28>
   1ee4c:	push	{fp, lr}
   1ee50:	mov	fp, sp
   1ee54:	mov	r1, r2
   1ee58:	bl	1f790 <dta_write_raw_int16>
   1ee5c:	mov	r1, #0
   1ee60:	pop	{fp, lr}
   1ee64:	mov	r0, r1
   1ee68:	bx	lr

0001ee6c <dta_113_write_int32>:
   1ee6c:	mov	r1, r0
   1ee70:	mov	r0, #20
   1ee74:	cmn	r2, #-2147483620	; 0x8000001c
   1ee78:	bxgt	lr
   1ee7c:	push	{fp, lr}
   1ee80:	mov	fp, sp
   1ee84:	mov	r0, r1
   1ee88:	mov	r1, r2
   1ee8c:	bl	1f798 <dta_write_raw_int32>
   1ee90:	mov	r0, #0
   1ee94:	pop	{fp, lr}
   1ee98:	bx	lr

0001ee9c <dta_113_write_missing_numeric>:
   1ee9c:	push	{fp, lr}
   1eea0:	mov	fp, sp
   1eea4:	ldr	r1, [r1]
   1eea8:	sub	r1, r1, #1
   1eeac:	cmp	r1, #4
   1eeb0:	bhi	1ef1c <dta_113_write_missing_numeric+0x80>
   1eeb4:	add	r2, pc, #4
   1eeb8:	ldr	r1, [r2, r1, lsl #2]
   1eebc:	add	pc, r2, r1
   1eec0:	.word	0x00000014
   1eec4:	.word	0x00000024
   1eec8:	.word	0x00000034
   1eecc:	.word	0x0000003c
   1eed0:	.word	0x0000004c
   1eed4:	mov	r1, #101	; 0x65
   1eed8:	bl	1f788 <dta_write_raw_int8>
   1eedc:	mov	r0, #0
   1eee0:	pop	{fp, pc}
   1eee4:	movw	r1, #32741	; 0x7fe5
   1eee8:	bl	1f790 <dta_write_raw_int16>
   1eeec:	mov	r0, #0
   1eef0:	pop	{fp, pc}
   1eef4:	mvn	r1, #-2147483622	; 0x8000001a
   1eef8:	b	1ef00 <dta_113_write_missing_numeric+0x64>
   1eefc:	mov	r1, #2130706432	; 0x7f000000
   1ef00:	bl	1f798 <dta_write_raw_int32>
   1ef04:	mov	r0, #0
   1ef08:	pop	{fp, pc}
   1ef0c:	movw	r3, #0
   1ef10:	movt	r3, #32736	; 0x7fe0
   1ef14:	mov	r2, #0
   1ef18:	bl	1f7a0 <dta_write_raw_int64>
   1ef1c:	mov	r0, #0
   1ef20:	pop	{fp, pc}

0001ef24 <dta_113_write_missing_tagged>:
   1ef24:	push	{r4, sl, fp, lr}
   1ef28:	add	fp, sp, #8
   1ef2c:	sub	r3, r2, #97	; 0x61
   1ef30:	uxtb	r3, r3
   1ef34:	mov	r4, #21
   1ef38:	cmp	r3, #25
   1ef3c:	bls	1ef48 <dta_113_write_missing_tagged+0x24>
   1ef40:	mov	r0, r4
   1ef44:	pop	{r4, sl, fp, pc}
   1ef48:	ldr	r1, [r1]
   1ef4c:	sub	r1, r1, #1
   1ef50:	cmp	r1, #4
   1ef54:	bhi	1ef88 <dta_113_write_missing_tagged+0x64>
   1ef58:	add	r3, pc, #4
   1ef5c:	ldr	r1, [r3, r1, lsl #2]
   1ef60:	add	pc, r3, r1
   1ef64:	.word	0x00000014
   1ef68:	.word	0x00000030
   1ef6c:	.word	0x00000044
   1ef70:	.word	0x00000050
   1ef74:	.word	0x0000006c
   1ef78:	add	r1, r2, #5
   1ef7c:	sxtb	r1, r1
   1ef80:	bl	1f788 <dta_write_raw_int8>
   1ef84:	b	1efc4 <dta_113_write_missing_tagged+0xa0>
   1ef88:	mov	r4, #23
   1ef8c:	mov	r0, r4
   1ef90:	pop	{r4, sl, fp, pc}
   1ef94:	movw	r1, #32645	; 0x7f85
   1ef98:	add	r1, r2, r1
   1ef9c:	sxth	r1, r1
   1efa0:	bl	1f790 <dta_write_raw_int16>
   1efa4:	b	1efc4 <dta_113_write_missing_tagged+0xa0>
   1efa8:	sub	r1, r2, #123	; 0x7b
   1efac:	sub	r1, r1, #-2147483648	; 0x80000000
   1efb0:	b	1efc0 <dta_113_write_missing_tagged+0x9c>
   1efb4:	movw	r1, #0
   1efb8:	movt	r1, #32509	; 0x7efd
   1efbc:	add	r1, r1, r2, lsl #11
   1efc0:	bl	1f798 <dta_write_raw_int32>
   1efc4:	mov	r4, #0
   1efc8:	mov	r0, r4
   1efcc:	pop	{r4, sl, fp, pc}
   1efd0:	movw	r1, #40960	; 0xa000
   1efd4:	movt	r1, #32735	; 0x7fdf
   1efd8:	add	r3, r1, r2, lsl #8
   1efdc:	mov	r4, #0
   1efe0:	mov	r2, #0
   1efe4:	bl	1f7a0 <dta_write_raw_int64>
   1efe8:	mov	r0, r4
   1efec:	pop	{r4, sl, fp, pc}

0001eff0 <dta_old_write_int8>:
   1eff0:	mov	r1, #20
   1eff4:	cmp	r2, #127	; 0x7f
   1eff8:	beq	1f014 <dta_old_write_int8+0x24>
   1effc:	push	{fp, lr}
   1f000:	mov	fp, sp
   1f004:	mov	r1, r2
   1f008:	bl	1f788 <dta_write_raw_int8>
   1f00c:	mov	r1, #0
   1f010:	pop	{fp, lr}
   1f014:	mov	r0, r1
   1f018:	bx	lr

0001f01c <dta_old_write_int16>:
   1f01c:	mov	r1, #20
   1f020:	movw	r3, #32767	; 0x7fff
   1f024:	cmp	r2, r3
   1f028:	beq	1f044 <dta_old_write_int16+0x28>
   1f02c:	push	{fp, lr}
   1f030:	mov	fp, sp
   1f034:	mov	r1, r2
   1f038:	bl	1f790 <dta_write_raw_int16>
   1f03c:	mov	r1, #0
   1f040:	pop	{fp, lr}
   1f044:	mov	r0, r1
   1f048:	bx	lr

0001f04c <dta_old_write_int32>:
   1f04c:	mov	r1, r0
   1f050:	mov	r0, #20
   1f054:	cmn	r2, #-2147483647	; 0x80000001
   1f058:	bxeq	lr
   1f05c:	push	{fp, lr}
   1f060:	mov	fp, sp
   1f064:	mov	r0, r1
   1f068:	mov	r1, r2
   1f06c:	bl	1f798 <dta_write_raw_int32>
   1f070:	mov	r0, #0
   1f074:	pop	{fp, lr}
   1f078:	bx	lr

0001f07c <dta_old_write_missing_numeric>:
   1f07c:	push	{fp, lr}
   1f080:	mov	fp, sp
   1f084:	ldr	r1, [r1]
   1f088:	sub	r1, r1, #1
   1f08c:	cmp	r1, #4
   1f090:	bhi	1f0fc <dta_old_write_missing_numeric+0x80>
   1f094:	add	r2, pc, #4
   1f098:	ldr	r1, [r2, r1, lsl #2]
   1f09c:	add	pc, r2, r1
   1f0a0:	.word	0x00000014
   1f0a4:	.word	0x00000024
   1f0a8:	.word	0x00000034
   1f0ac:	.word	0x0000003c
   1f0b0:	.word	0x0000004c
   1f0b4:	mov	r1, #127	; 0x7f
   1f0b8:	bl	1f788 <dta_write_raw_int8>
   1f0bc:	mov	r0, #0
   1f0c0:	pop	{fp, pc}
   1f0c4:	movw	r1, #32767	; 0x7fff
   1f0c8:	bl	1f790 <dta_write_raw_int16>
   1f0cc:	mov	r0, #0
   1f0d0:	pop	{fp, pc}
   1f0d4:	mvn	r1, #-2147483648	; 0x80000000
   1f0d8:	b	1f0e0 <dta_old_write_missing_numeric+0x64>
   1f0dc:	mov	r1, #2130706432	; 0x7f000000
   1f0e0:	bl	1f798 <dta_write_raw_int32>
   1f0e4:	mov	r0, #0
   1f0e8:	pop	{fp, pc}
   1f0ec:	movw	r3, #0
   1f0f0:	movt	r3, #32736	; 0x7fe0
   1f0f4:	mov	r2, #0
   1f0f8:	bl	1f7a0 <dta_write_raw_int64>
   1f0fc:	mov	r0, #0
   1f100:	pop	{fp, pc}

0001f104 <dta_write_float>:
   1f104:	push	{r4, r5, fp, lr}
   1f108:	add	fp, sp, #8
   1f10c:	vpush	{d8}
   1f110:	vmov.f32	s16, s0
   1f114:	mov	r4, r0
   1f118:	vldr	s0, [pc, #72]	; 1f168 <dta_write_float+0x64>
   1f11c:	mov	r0, #20
   1f120:	vcmpe.f32	s16, s0
   1f124:	vmrs	APSR_nzcv, fpscr
   1f128:	bgt	1f160 <dta_write_float+0x5c>
   1f12c:	mov	r5, r1
   1f130:	vmov.f32	s0, s16
   1f134:	bl	4944 <__isnanf@plt>
   1f138:	cmp	r0, #0
   1f13c:	beq	1f150 <dta_write_float+0x4c>
   1f140:	mov	r0, r4
   1f144:	mov	r1, r5
   1f148:	bl	1ee9c <dta_113_write_missing_numeric>
   1f14c:	b	1f15c <dta_write_float+0x58>
   1f150:	mov	r0, r4
   1f154:	vmov.f32	s0, s16
   1f158:	bl	1f7ac <dta_write_raw_float>
   1f15c:	mov	r0, #0
   1f160:	vpop	{d8}
   1f164:	pop	{r4, r5, fp, pc}
   1f168:	.word	0x7effffff
   1f16c:	.word	0xe320f000

0001f170 <dta_write_double>:
   1f170:	push	{r4, r5, fp, lr}
   1f174:	add	fp, sp, #8
   1f178:	vpush	{d8}
   1f17c:	mov	r4, r0
   1f180:	vldr	d16, [pc, #72]	; 1f1d0 <dta_write_double+0x60>
   1f184:	mov	r0, #20
   1f188:	vcmpe.f64	d0, d16
   1f18c:	vmrs	APSR_nzcv, fpscr
   1f190:	bgt	1f1c8 <dta_write_double+0x58>
   1f194:	vmov.f64	d8, d0
   1f198:	mov	r5, r1
   1f19c:	bl	4db8 <__isnan@plt>
   1f1a0:	cmp	r0, #0
   1f1a4:	beq	1f1b8 <dta_write_double+0x48>
   1f1a8:	mov	r0, r4
   1f1ac:	mov	r1, r5
   1f1b0:	bl	1ee9c <dta_113_write_missing_numeric>
   1f1b4:	b	1f1c4 <dta_write_double+0x54>
   1f1b8:	mov	r0, r4
   1f1bc:	vmov.f64	d0, d8
   1f1c0:	bl	1f7b8 <dta_write_raw_double>
   1f1c4:	mov	r0, #0
   1f1c8:	vpop	{d8}
   1f1cc:	pop	{r4, r5, fp, pc}
   1f1d0:	.word	0xffffffff
   1f1d4:	.word	0x7fdfffff

0001f1d8 <dta_write_string>:
   1f1d8:	push	{r4, r5, r6, r7, fp, lr}
   1f1dc:	add	fp, sp, #16
   1f1e0:	mov	r5, r0
   1f1e4:	ldr	r4, [r1, #1596]	; 0x63c
   1f1e8:	cmp	r2, #0
   1f1ec:	beq	1f230 <dta_write_string+0x58>
   1f1f0:	mov	r6, r2
   1f1f4:	ldrb	r0, [r2]
   1f1f8:	cmp	r0, #0
   1f1fc:	beq	1f230 <dta_write_string+0x58>
   1f200:	mov	r0, r6
   1f204:	bl	4c8c <strlen@plt>
   1f208:	mov	r7, #22
   1f20c:	cmp	r0, r4
   1f210:	bhi	1f228 <dta_write_string+0x50>
   1f214:	mov	r0, r5
   1f218:	mov	r1, r6
   1f21c:	mov	r2, r4
   1f220:	bl	4d4c <strncpy@plt>
   1f224:	mov	r7, #0
   1f228:	mov	r0, r7
   1f22c:	pop	{r4, r5, r6, r7, fp, pc}
   1f230:	mov	r7, #0
   1f234:	mov	r0, r5
   1f238:	mov	r1, #0
   1f23c:	mov	r2, r4
   1f240:	bl	4d28 <memset@plt>
   1f244:	mov	r0, r7
   1f248:	pop	{r4, r5, r6, r7, fp, pc}

0001f24c <dta_write_missing_string>:
   1f24c:	mov	r2, #0
   1f250:	b	1f1d8 <dta_write_string>

0001f254 <dta_begin_data>:
   1f254:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1f258:	add	fp, sp, #24
   1f25c:	sub	sp, sp, #16
   1f260:	mov	r4, r0
   1f264:	ldr	r0, [r0, #308]	; 0x134
   1f268:	cmp	r0, #0
   1f26c:	beq	1f36c <dta_begin_data+0x118>
   1f270:	mov	r5, #0
   1f274:	mov	r0, #0
   1f278:	bl	4ff8 <dta_ctx_alloc@plt>
   1f27c:	mov	r8, r0
   1f280:	ldr	r6, [r4, #28]
   1f284:	ldr	r7, [r4, #80]	; 0x50
   1f288:	bl	492c <machine_is_little_endian@plt>
   1f28c:	ldrb	r1, [r4, #8]
   1f290:	mov	r2, #2
   1f294:	cmp	r0, #0
   1f298:	movweq	r2, #1
   1f29c:	str	r2, [sp]
   1f2a0:	stmib	sp, {r1, r5}
   1f2a4:	str	r5, [sp, #12]
   1f2a8:	asr	r3, r7, #31
   1f2ac:	mov	r0, r8
   1f2b0:	mov	r1, r6
   1f2b4:	mov	r2, r7
   1f2b8:	bl	4c5c <dta_ctx_init@plt>
   1f2bc:	mov	r6, r0
   1f2c0:	cmp	r0, #0
   1f2c4:	bne	1f360 <dta_begin_data+0x10c>
   1f2c8:	mov	r0, r4
   1f2cc:	mov	r1, r8
   1f2d0:	bl	1f7c0 <dta_emit_header>
   1f2d4:	mov	r6, r0
   1f2d8:	cmp	r0, #0
   1f2dc:	bne	1f360 <dta_begin_data+0x10c>
   1f2e0:	mov	r0, r4
   1f2e4:	mov	r1, r8
   1f2e8:	bl	1f874 <dta_emit_map>
   1f2ec:	mov	r6, r0
   1f2f0:	cmp	r0, #0
   1f2f4:	bne	1f360 <dta_begin_data+0x10c>
   1f2f8:	mov	r0, r4
   1f2fc:	mov	r1, r8
   1f300:	bl	1fa28 <dta_emit_descriptors>
   1f304:	mov	r6, r0
   1f308:	cmp	r0, #0
   1f30c:	bne	1f360 <dta_begin_data+0x10c>
   1f310:	mov	r0, r4
   1f314:	mov	r1, r8
   1f318:	bl	1fa94 <dta_emit_variable_labels>
   1f31c:	mov	r6, r0
   1f320:	cmp	r0, #0
   1f324:	bne	1f360 <dta_begin_data+0x10c>
   1f328:	mov	r0, r4
   1f32c:	mov	r1, r8
   1f330:	bl	1fb38 <dta_emit_characteristics>
   1f334:	mov	r6, r0
   1f338:	cmp	r0, #0
   1f33c:	bne	1f360 <dta_begin_data+0x10c>
   1f340:	ldr	r2, [pc, #64]	; 1f388 <dta_begin_data+0x134>
   1f344:	add	r2, pc, r2
   1f348:	mov	r0, r4
   1f34c:	mov	r1, r8
   1f350:	bl	1fd68 <dta_write_tag>
   1f354:	mov	r6, r0
   1f358:	cmp	r0, #0
   1f35c:	beq	1f37c <dta_begin_data+0x128>
   1f360:	mov	r0, r8
   1f364:	bl	48f0 <dta_ctx_free@plt>
   1f368:	b	1f370 <dta_begin_data+0x11c>
   1f36c:	mov	r6, #14
   1f370:	mov	r0, r6
   1f374:	sub	sp, fp, #24
   1f378:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1f37c:	str	r8, [r4, #300]	; 0x12c
   1f380:	mov	r6, #0
   1f384:	b	1f370 <dta_begin_data+0x11c>
   1f388:	.word	0x000086be

0001f38c <dta_end_data>:
   1f38c:	push	{r4, r5, fp, lr}
   1f390:	add	fp, sp, #8
   1f394:	mov	r4, r0
   1f398:	ldr	r0, [r0, #308]	; 0x134
   1f39c:	cmp	r0, #0
   1f3a0:	beq	1f3dc <dta_end_data+0x50>
   1f3a4:	ldr	r5, [r4, #300]	; 0x12c
   1f3a8:	ldr	r2, [pc, #96]	; 1f410 <dta_end_data+0x84>
   1f3ac:	add	r2, pc, r2
   1f3b0:	mov	r0, r4
   1f3b4:	mov	r1, r5
   1f3b8:	bl	1fd68 <dta_write_tag>
   1f3bc:	cmp	r0, #0
   1f3c0:	bne	1f3d8 <dta_end_data+0x4c>
   1f3c4:	mov	r0, r4
   1f3c8:	mov	r1, r5
   1f3cc:	bl	20df4 <dta_emit_strls>
   1f3d0:	cmp	r0, #0
   1f3d4:	beq	1f3e4 <dta_end_data+0x58>
   1f3d8:	pop	{r4, r5, fp, pc}
   1f3dc:	mov	r0, #14
   1f3e0:	pop	{r4, r5, fp, pc}
   1f3e4:	mov	r0, r4
   1f3e8:	mov	r1, r5
   1f3ec:	bl	20edc <dta_emit_value_labels>
   1f3f0:	cmp	r0, #0
   1f3f4:	popne	{r4, r5, fp, pc}
   1f3f8:	ldr	r2, [pc, #20]	; 1f414 <dta_end_data+0x88>
   1f3fc:	add	r2, pc, r2
   1f400:	mov	r0, r4
   1f404:	mov	r1, r5
   1f408:	pop	{r4, r5, fp, lr}
   1f40c:	b	1fd68 <dta_write_tag>
   1f410:	.word	0x0000865d
   1f414:	.word	0x00008760

0001f418 <dta_module_ctx_free>:
   1f418:	b	48f0 <dta_ctx_free@plt>

0001f41c <dta_numeric_variable_width>:
   1f41c:	sub	r0, r0, #1
   1f420:	cmp	r0, #4
   1f424:	movhi	r0, #0
   1f428:	ldrls	r1, [pc, #8]	; 1f438 <dta_numeric_variable_width+0x1c>
   1f42c:	addls	r1, pc, r1
   1f430:	ldrls	r0, [r1, r0, lsl #2]
   1f434:	bx	lr
   1f438:	.word	0x000087bc

0001f43c <dta_validate_name>:
   1f43c:	push	{r4, r5, r6, sl, fp, lr}
   1f440:	add	fp, sp, #16
   1f444:	mov	r6, r2
   1f448:	mov	r5, r1
   1f44c:	mov	r4, r0
   1f450:	bl	4c8c <strlen@plt>
   1f454:	mov	r1, r0
   1f458:	mov	r0, #28
   1f45c:	cmp	r1, r6
   1f460:	bhi	1f490 <dta_validate_name+0x54>
   1f464:	cmp	r1, #0
   1f468:	beq	1f48c <dta_validate_name+0x50>
   1f46c:	mov	r0, r4
   1f470:	mov	r1, r5
   1f474:	bl	1f494 <dta_validate_name_chars>
   1f478:	cmp	r0, #0
   1f47c:	popne	{r4, r5, r6, sl, fp, pc}
   1f480:	mov	r0, r4
   1f484:	pop	{r4, r5, r6, sl, fp, lr}
   1f488:	b	1f518 <dta_validate_name_unreserved>
   1f48c:	mov	r0, #38	; 0x26
   1f490:	pop	{r4, r5, r6, sl, fp, pc}

0001f494 <dta_validate_name_chars>:
   1f494:	mov	ip, r0
   1f498:	b	1f4a0 <dta_validate_name_chars+0xc>
   1f49c:	add	ip, ip, #1
   1f4a0:	ldrb	r3, [ip]
   1f4a4:	cmp	r3, #95	; 0x5f
   1f4a8:	beq	1f49c <dta_validate_name_chars+0x8>
   1f4ac:	cmp	r3, #0
   1f4b0:	beq	1f4e0 <dta_validate_name_chars+0x4c>
   1f4b4:	sub	r2, r3, #48	; 0x30
   1f4b8:	uxtb	r2, r2
   1f4bc:	cmp	r2, #10
   1f4c0:	bcc	1f49c <dta_validate_name_chars+0x8>
   1f4c4:	and	r2, r3, #223	; 0xdf
   1f4c8:	sub	r2, r2, #65	; 0x41
   1f4cc:	uxtb	r2, r2
   1f4d0:	cmp	r2, #25
   1f4d4:	movhi	r0, #26
   1f4d8:	bxhi	lr
   1f4dc:	b	1f49c <dta_validate_name_chars+0x8>
   1f4e0:	ldrb	r2, [r0]
   1f4e4:	cmp	r2, #0
   1f4e8:	mov	r3, r2
   1f4ec:	movwne	r3, #25
   1f4f0:	cmp	r1, #0
   1f4f4:	moveq	r3, #25
   1f4f8:	subs	r0, r2, #95	; 0x5f
   1f4fc:	movne	r0, r3
   1f500:	and	r1, r2, #223	; 0xdf
   1f504:	sub	r1, r1, #65	; 0x41
   1f508:	uxtb	r1, r1
   1f50c:	cmp	r1, #26
   1f510:	movwcc	r0, #0
   1f514:	bx	lr

0001f518 <dta_validate_name_unreserved>:
   1f518:	push	{r4, r5, fp, lr}
   1f51c:	add	fp, sp, #8
   1f520:	sub	sp, sp, #8
   1f524:	mov	r5, r0
   1f528:	ldr	r1, [pc, #516]	; 1f734 <dta_validate_name_unreserved+0x21c>
   1f52c:	add	r1, pc, r1
   1f530:	bl	4878 <strcmp@plt>
   1f534:	mov	r4, #27
   1f538:	cmp	r0, #0
   1f53c:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f540:	ldr	r1, [pc, #496]	; 1f738 <dta_validate_name_unreserved+0x220>
   1f544:	add	r1, pc, r1
   1f548:	mov	r0, r5
   1f54c:	bl	4878 <strcmp@plt>
   1f550:	cmp	r0, #0
   1f554:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f558:	ldr	r1, [pc, #476]	; 1f73c <dta_validate_name_unreserved+0x224>
   1f55c:	add	r1, pc, r1
   1f560:	mov	r0, r5
   1f564:	bl	4878 <strcmp@plt>
   1f568:	cmp	r0, #0
   1f56c:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f570:	ldr	r1, [pc, #456]	; 1f740 <dta_validate_name_unreserved+0x228>
   1f574:	add	r1, pc, r1
   1f578:	mov	r0, r5
   1f57c:	bl	4878 <strcmp@plt>
   1f580:	cmp	r0, #0
   1f584:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f588:	ldr	r1, [pc, #436]	; 1f744 <dta_validate_name_unreserved+0x22c>
   1f58c:	add	r1, pc, r1
   1f590:	mov	r0, r5
   1f594:	bl	4878 <strcmp@plt>
   1f598:	cmp	r0, #0
   1f59c:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f5a0:	ldr	r1, [pc, #416]	; 1f748 <dta_validate_name_unreserved+0x230>
   1f5a4:	add	r1, pc, r1
   1f5a8:	mov	r0, r5
   1f5ac:	bl	4878 <strcmp@plt>
   1f5b0:	cmp	r0, #0
   1f5b4:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f5b8:	ldr	r1, [pc, #396]	; 1f74c <dta_validate_name_unreserved+0x234>
   1f5bc:	add	r1, pc, r1
   1f5c0:	mov	r0, r5
   1f5c4:	bl	4878 <strcmp@plt>
   1f5c8:	cmp	r0, #0
   1f5cc:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f5d0:	ldr	r1, [pc, #376]	; 1f750 <dta_validate_name_unreserved+0x238>
   1f5d4:	add	r1, pc, r1
   1f5d8:	mov	r0, r5
   1f5dc:	bl	4878 <strcmp@plt>
   1f5e0:	cmp	r0, #0
   1f5e4:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f5e8:	ldr	r1, [pc, #356]	; 1f754 <dta_validate_name_unreserved+0x23c>
   1f5ec:	add	r1, pc, r1
   1f5f0:	mov	r0, r5
   1f5f4:	bl	4878 <strcmp@plt>
   1f5f8:	cmp	r0, #0
   1f5fc:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f600:	ldr	r1, [pc, #336]	; 1f758 <dta_validate_name_unreserved+0x240>
   1f604:	add	r1, pc, r1
   1f608:	mov	r0, r5
   1f60c:	bl	4878 <strcmp@plt>
   1f610:	cmp	r0, #0
   1f614:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f618:	ldr	r1, [pc, #316]	; 1f75c <dta_validate_name_unreserved+0x244>
   1f61c:	add	r1, pc, r1
   1f620:	mov	r0, r5
   1f624:	bl	4878 <strcmp@plt>
   1f628:	cmp	r0, #0
   1f62c:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f630:	ldr	r1, [pc, #296]	; 1f760 <dta_validate_name_unreserved+0x248>
   1f634:	add	r1, pc, r1
   1f638:	mov	r0, r5
   1f63c:	bl	4878 <strcmp@plt>
   1f640:	cmp	r0, #0
   1f644:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f648:	ldr	r1, [pc, #276]	; 1f764 <dta_validate_name_unreserved+0x24c>
   1f64c:	add	r1, pc, r1
   1f650:	mov	r0, r5
   1f654:	bl	4878 <strcmp@plt>
   1f658:	cmp	r0, #0
   1f65c:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f660:	ldr	r1, [pc, #256]	; 1f768 <dta_validate_name_unreserved+0x250>
   1f664:	add	r1, pc, r1
   1f668:	mov	r0, r5
   1f66c:	bl	4878 <strcmp@plt>
   1f670:	cmp	r0, #0
   1f674:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f678:	ldr	r1, [pc, #236]	; 1f76c <dta_validate_name_unreserved+0x254>
   1f67c:	add	r1, pc, r1
   1f680:	mov	r0, r5
   1f684:	bl	4878 <strcmp@plt>
   1f688:	cmp	r0, #0
   1f68c:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f690:	ldr	r1, [pc, #216]	; 1f770 <dta_validate_name_unreserved+0x258>
   1f694:	add	r1, pc, r1
   1f698:	mov	r0, r5
   1f69c:	bl	4878 <strcmp@plt>
   1f6a0:	cmp	r0, #0
   1f6a4:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f6a8:	ldr	r1, [pc, #196]	; 1f774 <dta_validate_name_unreserved+0x25c>
   1f6ac:	add	r1, pc, r1
   1f6b0:	mov	r0, r5
   1f6b4:	bl	4878 <strcmp@plt>
   1f6b8:	cmp	r0, #0
   1f6bc:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f6c0:	ldr	r1, [pc, #176]	; 1f778 <dta_validate_name_unreserved+0x260>
   1f6c4:	add	r1, pc, r1
   1f6c8:	mov	r0, r5
   1f6cc:	bl	4878 <strcmp@plt>
   1f6d0:	cmp	r0, #0
   1f6d4:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f6d8:	ldr	r1, [pc, #156]	; 1f77c <dta_validate_name_unreserved+0x264>
   1f6dc:	add	r1, pc, r1
   1f6e0:	mov	r0, r5
   1f6e4:	bl	4878 <strcmp@plt>
   1f6e8:	cmp	r0, #0
   1f6ec:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f6f0:	ldr	r1, [pc, #136]	; 1f780 <dta_validate_name_unreserved+0x268>
   1f6f4:	add	r1, pc, r1
   1f6f8:	mov	r0, r5
   1f6fc:	bl	4878 <strcmp@plt>
   1f700:	cmp	r0, #0
   1f704:	beq	1f728 <dta_validate_name_unreserved+0x210>
   1f708:	ldr	r1, [pc, #116]	; 1f784 <dta_validate_name_unreserved+0x26c>
   1f70c:	add	r1, pc, r1
   1f710:	add	r2, sp, #4
   1f714:	mov	r0, r5
   1f718:	bl	4d10 <__isoc99_sscanf@plt>
   1f71c:	mov	r4, #0
   1f720:	cmp	r0, #1
   1f724:	movweq	r4, #27
   1f728:	mov	r0, r4
   1f72c:	sub	sp, fp, #8
   1f730:	pop	{r4, r5, fp, pc}
   1f734:	.word	0x0000859c
   1f738:	.word	0x00008589
   1f73c:	.word	0x00008574
   1f740:	.word	0x00008561
   1f744:	.word	0x0000854f
   1f748:	.word	0x0000853d
   1f74c:	.word	0x0000852c
   1f750:	.word	0x0000851a
   1f754:	.word	0x00008505
   1f758:	.word	0x000084f0
   1f75c:	.word	0x000084dc
   1f760:	.word	0x000084c9
   1f764:	.word	0x000084b4
   1f768:	.word	0x0000849f
   1f76c:	.word	0x0000848b
   1f770:	.word	0x00008479
   1f774:	.word	0x00008465
   1f778:	.word	0x00008453
   1f77c:	.word	0x00008440
   1f780:	.word	0x0000842e
   1f784:	.word	0x0000841b

0001f788 <dta_write_raw_int8>:
   1f788:	strb	r1, [r0]
   1f78c:	bx	lr

0001f790 <dta_write_raw_int16>:
   1f790:	strh	r1, [r0]
   1f794:	bx	lr

0001f798 <dta_write_raw_int32>:
   1f798:	str	r1, [r0]
   1f79c:	bx	lr

0001f7a0 <dta_write_raw_int64>:
   1f7a0:	str	r3, [r0, #4]
   1f7a4:	str	r2, [r0]
   1f7a8:	bx	lr

0001f7ac <dta_write_raw_float>:
   1f7ac:	vmov	r1, s0
   1f7b0:	str	r1, [r0]
   1f7b4:	bx	lr

0001f7b8 <dta_write_raw_double>:
   1f7b8:	vst1.8	{d0}, [r0]
   1f7bc:	bx	lr

0001f7c0 <dta_emit_header>:
   1f7c0:	push	{r4, r5, fp, lr}
   1f7c4:	add	fp, sp, #8
   1f7c8:	sub	sp, sp, #16
   1f7cc:	mov	r4, r1
   1f7d0:	mov	r5, r0
   1f7d4:	ldrb	r0, [r1, #192]	; 0xc0
   1f7d8:	tst	r0, #4
   1f7dc:	bne	1f860 <dta_emit_header+0xa0>
   1f7e0:	ldr	r0, [r5, #8]
   1f7e4:	strb	r0, [sp, #4]
   1f7e8:	bl	492c <machine_is_little_endian@plt>
   1f7ec:	mov	r1, #1
   1f7f0:	strh	r1, [sp, #6]
   1f7f4:	mov	r1, #2
   1f7f8:	cmp	r0, #0
   1f7fc:	movweq	r1, #1
   1f800:	strb	r1, [sp, #5]
   1f804:	ldr	r0, [r5, #28]
   1f808:	strh	r0, [sp, #8]
   1f80c:	ldr	r1, [r5, #80]	; 0x50
   1f810:	str	r1, [sp, #10]
   1f814:	cmp	r0, #32768	; 0x8000
   1f818:	bge	1f854 <dta_emit_header+0x94>
   1f81c:	add	r1, sp, #4
   1f820:	mov	r0, r5
   1f824:	mov	r2, #10
   1f828:	bl	4ef0 <readstat_write_bytes@plt>
   1f82c:	cmp	r0, #0
   1f830:	bne	1f854 <dta_emit_header+0x94>
   1f834:	mov	r0, r5
   1f838:	mov	r1, r4
   1f83c:	bl	1ff84 <dta_emit_header_data_label>
   1f840:	cmp	r0, #0
   1f844:	bne	1f854 <dta_emit_header+0x94>
   1f848:	mov	r0, r5
   1f84c:	mov	r1, r4
   1f850:	bl	200ac <dta_emit_header_time_stamp>
   1f854:	mov	r0, #0
   1f858:	sub	sp, fp, #8
   1f85c:	pop	{r4, r5, fp, pc}
   1f860:	mov	r0, r5
   1f864:	mov	r1, r4
   1f868:	sub	sp, fp, #8
   1f86c:	pop	{r4, r5, fp, lr}
   1f870:	b	1fd80 <dta_emit_xmlish_header>

0001f874 <dta_emit_map>:
   1f874:	push	{r4, r5, r6, r7, fp, lr}
   1f878:	add	fp, sp, #16
   1f87c:	sub	sp, sp, #120	; 0x78
   1f880:	mov	r4, r1
   1f884:	mov	r5, r0
   1f888:	ldrb	r1, [r1, #192]	; 0xc0
   1f88c:	mov	r0, #0
   1f890:	tst	r1, #4
   1f894:	beq	1fa14 <dta_emit_map+0x1a0>
   1f898:	mov	r6, #0
   1f89c:	str	r6, [sp, #12]
   1f8a0:	str	r6, [sp, #8]
   1f8a4:	ldr	r7, [r5, #4]
   1f8a8:	str	r6, [sp, #20]
   1f8ac:	str	r7, [sp, #16]
   1f8b0:	mov	r0, r4
   1f8b4:	bl	202a0 <dta_measure_map>
   1f8b8:	adds	r7, r0, r7
   1f8bc:	str	r7, [sp, #24]
   1f8c0:	adc	r6, r6, #0
   1f8c4:	str	r6, [sp, #28]
   1f8c8:	mov	r0, r4
   1f8cc:	bl	202e0 <dta_measure_typlist>
   1f8d0:	adds	r7, r7, r0
   1f8d4:	str	r7, [sp, #32]
   1f8d8:	adc	r6, r6, #0
   1f8dc:	str	r6, [sp, #36]	; 0x24
   1f8e0:	mov	r0, r4
   1f8e4:	bl	20324 <dta_measure_varlist>
   1f8e8:	adds	r7, r7, r0
   1f8ec:	str	r7, [sp, #40]	; 0x28
   1f8f0:	adc	r6, r6, #0
   1f8f4:	str	r6, [sp, #44]	; 0x2c
   1f8f8:	mov	r0, r4
   1f8fc:	bl	20364 <dta_measure_srtlist>
   1f900:	adds	r7, r7, r0
   1f904:	str	r7, [sp, #48]	; 0x30
   1f908:	adc	r6, r6, #0
   1f90c:	str	r6, [sp, #52]	; 0x34
   1f910:	mov	r0, r4
   1f914:	bl	203a4 <dta_measure_fmtlist>
   1f918:	adds	r7, r7, r0
   1f91c:	str	r7, [sp, #56]	; 0x38
   1f920:	adc	r6, r6, #0
   1f924:	str	r6, [sp, #60]	; 0x3c
   1f928:	mov	r0, r4
   1f92c:	bl	203e4 <dta_measure_lbllist>
   1f930:	adds	r7, r7, r0
   1f934:	str	r7, [sp, #64]	; 0x40
   1f938:	adc	r6, r6, #0
   1f93c:	str	r6, [sp, #68]	; 0x44
   1f940:	mov	r0, r4
   1f944:	bl	20424 <dta_measure_variable_labels>
   1f948:	adds	r7, r7, r0
   1f94c:	str	r7, [sp, #72]	; 0x48
   1f950:	adc	r6, r6, #0
   1f954:	str	r6, [sp, #76]	; 0x4c
   1f958:	mov	r0, r5
   1f95c:	mov	r1, r4
   1f960:	bl	20464 <dta_measure_characteristics>
   1f964:	adds	r7, r7, r0
   1f968:	str	r7, [sp, #80]	; 0x50
   1f96c:	adc	r6, r6, #0
   1f970:	str	r6, [sp, #84]	; 0x54
   1f974:	mov	r0, r5
   1f978:	mov	r1, r4
   1f97c:	bl	20548 <dta_measure_data>
   1f980:	adds	r7, r7, r0
   1f984:	str	r7, [sp, #88]	; 0x58
   1f988:	adc	r6, r6, #0
   1f98c:	str	r6, [sp, #92]	; 0x5c
   1f990:	mov	r0, r5
   1f994:	mov	r1, r4
   1f998:	bl	20618 <dta_measure_strls>
   1f99c:	adds	r7, r7, r0
   1f9a0:	str	r7, [sp, #96]	; 0x60
   1f9a4:	adc	r6, r6, #0
   1f9a8:	str	r6, [sp, #100]	; 0x64
   1f9ac:	mov	r0, r5
   1f9b0:	mov	r1, r4
   1f9b4:	bl	206a8 <dta_measure_value_labels>
   1f9b8:	adds	r7, r7, r0
   1f9bc:	str	r7, [sp, #104]	; 0x68
   1f9c0:	adc	r6, r6, #0
   1f9c4:	str	r6, [sp, #108]	; 0x6c
   1f9c8:	ldr	r1, [pc, #76]	; 1fa1c <dta_emit_map+0x1a8>
   1f9cc:	add	r1, pc, r1
   1f9d0:	mov	r0, r4
   1f9d4:	bl	207b0 <dta_measure_tag>
   1f9d8:	adds	r0, r7, r0
   1f9dc:	str	r0, [sp, #112]	; 0x70
   1f9e0:	adc	r0, r6, #0
   1f9e4:	str	r0, [sp, #116]	; 0x74
   1f9e8:	ldr	r0, [pc, #48]	; 1fa20 <dta_emit_map+0x1ac>
   1f9ec:	add	r0, pc, r0
   1f9f0:	mov	r1, #112	; 0x70
   1f9f4:	str	r1, [sp]
   1f9f8:	str	r0, [sp, #4]
   1f9fc:	ldr	r2, [pc, #32]	; 1fa24 <dta_emit_map+0x1b0>
   1fa00:	add	r2, pc, r2
   1fa04:	add	r3, sp, #8
   1fa08:	mov	r0, r5
   1fa0c:	mov	r1, r4
   1fa10:	bl	2024c <dta_write_chunk>
   1fa14:	sub	sp, fp, #16
   1fa18:	pop	{r4, r5, r6, r7, fp, pc}
   1fa1c:	.word	0x00008190
   1fa20:	.word	0x00007eb5
   1fa24:	.word	0x00007e9b

0001fa28 <dta_emit_descriptors>:
   1fa28:	push	{r4, r5, fp, lr}
   1fa2c:	add	fp, sp, #8
   1fa30:	mov	r4, r1
   1fa34:	mov	r5, r0
   1fa38:	bl	2098c <dta_emit_typlist>
   1fa3c:	cmp	r0, #0
   1fa40:	bne	1fa80 <dta_emit_descriptors+0x58>
   1fa44:	mov	r0, r5
   1fa48:	mov	r1, r4
   1fa4c:	bl	20ac0 <dta_emit_varlist>
   1fa50:	cmp	r0, #0
   1fa54:	bne	1fa80 <dta_emit_descriptors+0x58>
   1fa58:	mov	r0, r5
   1fa5c:	mov	r1, r4
   1fa60:	bl	20b64 <dta_emit_srtlist>
   1fa64:	cmp	r0, #0
   1fa68:	popne	{r4, r5, fp, pc}
   1fa6c:	mov	r0, r5
   1fa70:	mov	r1, r4
   1fa74:	bl	20bd4 <dta_emit_fmtlist>
   1fa78:	cmp	r0, #0
   1fa7c:	beq	1fa84 <dta_emit_descriptors+0x5c>
   1fa80:	pop	{r4, r5, fp, pc}
   1fa84:	mov	r0, r5
   1fa88:	mov	r1, r4
   1fa8c:	pop	{r4, r5, fp, lr}
   1fa90:	b	20d38 <dta_emit_lbllist>

0001fa94 <dta_emit_variable_labels>:
   1fa94:	push	{r4, r5, r6, sl, fp, lr}
   1fa98:	add	fp, sp, #16
   1fa9c:	mov	r4, r1
   1faa0:	mov	r5, r0
   1faa4:	ldr	r2, [pc, #132]	; 1fb30 <dta_emit_variable_labels+0x9c>
   1faa8:	add	r2, pc, r2
   1faac:	bl	1fd68 <dta_write_tag>
   1fab0:	cmp	r0, #0
   1fab4:	popne	{r4, r5, r6, sl, fp, pc}
   1fab8:	ldr	r0, [r4, #148]	; 0x94
   1fabc:	cmp	r0, #1
   1fac0:	blt	1fafc <dta_emit_variable_labels+0x68>
   1fac4:	mov	r6, #0
   1fac8:	mov	r0, r5
   1facc:	mov	r1, r6
   1fad0:	bl	4e18 <readstat_get_variable@plt>
   1fad4:	ldr	r1, [r4, #68]	; 0x44
   1fad8:	ldr	r2, [r4, #88]	; 0x58
   1fadc:	mla	r3, r2, r6, r1
   1fae0:	add	r1, r0, #564	; 0x234
   1fae4:	mov	r0, r3
   1fae8:	bl	4d4c <strncpy@plt>
   1faec:	add	r6, r6, #1
   1faf0:	ldr	r0, [r4, #148]	; 0x94
   1faf4:	cmp	r6, r0
   1faf8:	blt	1fac8 <dta_emit_variable_labels+0x34>
   1fafc:	ldr	r1, [r4, #68]	; 0x44
   1fb00:	ldr	r2, [r4, #72]	; 0x48
   1fb04:	mov	r0, r5
   1fb08:	bl	4ef0 <readstat_write_bytes@plt>
   1fb0c:	cmp	r0, #0
   1fb10:	beq	1fb18 <dta_emit_variable_labels+0x84>
   1fb14:	pop	{r4, r5, r6, sl, fp, pc}
   1fb18:	ldr	r2, [pc, #20]	; 1fb34 <dta_emit_variable_labels+0xa0>
   1fb1c:	add	r2, pc, r2
   1fb20:	mov	r0, r5
   1fb24:	mov	r1, r4
   1fb28:	pop	{r4, r5, r6, sl, fp, lr}
   1fb2c:	b	1fd68 <dta_write_tag>
   1fb30:	.word	0x00007e8f
   1fb34:	.word	0x00007e2d

0001fb38 <dta_emit_characteristics>:
   1fb38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fb3c:	add	fp, sp, #28
   1fb40:	sub	sp, sp, #12
   1fb44:	mov	r4, r0
   1fb48:	ldr	r0, [r1, #96]	; 0x60
   1fb4c:	add	r0, r0, #7
   1fb50:	bic	r0, r0, #7
   1fb54:	sub	r6, sp, r0
   1fb58:	mov	sp, r6
   1fb5c:	ldr	r0, [r1, #92]	; 0x5c
   1fb60:	cmp	r0, #0
   1fb64:	moveq	r0, #0
   1fb68:	subeq	sp, fp, #28
   1fb6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb70:	mov	r5, r1
   1fb74:	ldr	r2, [pc, #468]	; 1fd50 <dta_emit_characteristics+0x218>
   1fb78:	add	r2, pc, r2
   1fb7c:	mov	r0, r4
   1fb80:	bl	1fd68 <dta_write_tag>
   1fb84:	cmp	r0, #0
   1fb88:	beq	1fb94 <dta_emit_characteristics+0x5c>
   1fb8c:	sub	sp, fp, #28
   1fb90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fb94:	ldr	r1, [r4, #52]	; 0x34
   1fb98:	ldrb	r0, [r5, #192]	; 0xc0
   1fb9c:	ubfx	r0, r0, #2, #1
   1fba0:	cmp	r1, #1
   1fba4:	blt	1fd14 <dta_emit_characteristics+0x1dc>
   1fba8:	mov	sl, #0
   1fbac:	ldr	r7, [pc, #416]	; 1fd54 <dta_emit_characteristics+0x21c>
   1fbb0:	add	r7, pc, r7
   1fbb4:	tst	r0, #1
   1fbb8:	beq	1fbdc <dta_emit_characteristics+0xa4>
   1fbbc:	mov	r0, r4
   1fbc0:	mov	r1, r5
   1fbc4:	ldr	r2, [pc, #396]	; 1fd58 <dta_emit_characteristics+0x220>
   1fbc8:	add	r2, pc, r2
   1fbcc:	bl	1fd68 <dta_write_tag>
   1fbd0:	cmp	r0, #0
   1fbd4:	beq	1fbfc <dta_emit_characteristics+0xc4>
   1fbd8:	b	1fb8c <dta_emit_characteristics+0x54>
   1fbdc:	mov	r0, #1
   1fbe0:	strb	r0, [fp, #-33]	; 0xffffffdf
   1fbe4:	mov	r0, r4
   1fbe8:	sub	r1, fp, #33	; 0x21
   1fbec:	mov	r2, #1
   1fbf0:	bl	4ef0 <readstat_write_bytes@plt>
   1fbf4:	cmp	r0, #0
   1fbf8:	bne	1fb8c <dta_emit_characteristics+0x54>
   1fbfc:	ldr	r0, [r4, #48]	; 0x30
   1fc00:	ldr	r0, [r0, sl, lsl #2]
   1fc04:	bl	4c8c <strlen@plt>
   1fc08:	mov	r9, r0
   1fc0c:	ldr	r0, [r5, #92]	; 0x5c
   1fc10:	cmp	r0, #4
   1fc14:	beq	1fc40 <dta_emit_characteristics+0x108>
   1fc18:	cmp	r0, #2
   1fc1c:	bne	1fc68 <dta_emit_characteristics+0x130>
   1fc20:	ldr	r0, [r5, #96]	; 0x60
   1fc24:	add	r0, r9, r0, lsl #1
   1fc28:	add	r0, r0, #1
   1fc2c:	strh	r0, [fp, #-36]	; 0xffffffdc
   1fc30:	mov	r0, r4
   1fc34:	sub	r1, fp, #36	; 0x24
   1fc38:	mov	r2, #2
   1fc3c:	b	1fc5c <dta_emit_characteristics+0x124>
   1fc40:	ldr	r0, [r5, #96]	; 0x60
   1fc44:	add	r0, r9, r0, lsl #1
   1fc48:	add	r0, r0, #1
   1fc4c:	str	r0, [fp, #-40]	; 0xffffffd8
   1fc50:	mov	r0, r4
   1fc54:	sub	r1, fp, #40	; 0x28
   1fc58:	mov	r2, #4
   1fc5c:	bl	4ef0 <readstat_write_bytes@plt>
   1fc60:	cmp	r0, #0
   1fc64:	bne	1fb8c <dta_emit_characteristics+0x54>
   1fc68:	ldr	r2, [r5, #96]	; 0x60
   1fc6c:	mov	r0, r6
   1fc70:	mov	r1, r7
   1fc74:	bl	4d4c <strncpy@plt>
   1fc78:	ldr	r2, [r5, #96]	; 0x60
   1fc7c:	mov	r0, r4
   1fc80:	mov	r1, r6
   1fc84:	bl	4ef0 <readstat_write_bytes@plt>
   1fc88:	cmp	r0, #0
   1fc8c:	bne	1fb8c <dta_emit_characteristics+0x54>
   1fc90:	ldr	r1, [r5, #96]	; 0x60
   1fc94:	add	r8, sl, #1
   1fc98:	mov	r0, r6
   1fc9c:	ldr	r2, [pc, #184]	; 1fd5c <dta_emit_characteristics+0x224>
   1fca0:	add	r2, pc, r2
   1fca4:	mov	r3, r8
   1fca8:	bl	4d04 <snprintf@plt>
   1fcac:	ldr	r2, [r5, #96]	; 0x60
   1fcb0:	mov	r0, r4
   1fcb4:	mov	r1, r6
   1fcb8:	bl	4ef0 <readstat_write_bytes@plt>
   1fcbc:	cmp	r0, #0
   1fcc0:	bne	1fb8c <dta_emit_characteristics+0x54>
   1fcc4:	ldr	r0, [r4, #48]	; 0x30
   1fcc8:	ldr	r1, [r0, sl, lsl #2]
   1fccc:	add	r2, r9, #1
   1fcd0:	mov	r0, r4
   1fcd4:	bl	4ef0 <readstat_write_bytes@plt>
   1fcd8:	cmp	r0, #0
   1fcdc:	bne	1fb8c <dta_emit_characteristics+0x54>
   1fce0:	mov	r0, r4
   1fce4:	mov	r1, r5
   1fce8:	ldr	r2, [pc, #112]	; 1fd60 <dta_emit_characteristics+0x228>
   1fcec:	add	r2, pc, r2
   1fcf0:	bl	1fd68 <dta_write_tag>
   1fcf4:	cmp	r0, #0
   1fcf8:	bne	1fb8c <dta_emit_characteristics+0x54>
   1fcfc:	ldr	r1, [r4, #52]	; 0x34
   1fd00:	ldrb	r0, [r5, #192]	; 0xc0
   1fd04:	ubfx	r0, r0, #2, #1
   1fd08:	cmp	r8, r1
   1fd0c:	mov	sl, r8
   1fd10:	blt	1fbb4 <dta_emit_characteristics+0x7c>
   1fd14:	cmp	r0, #0
   1fd18:	beq	1fd38 <dta_emit_characteristics+0x200>
   1fd1c:	ldr	r2, [pc, #64]	; 1fd64 <dta_emit_characteristics+0x22c>
   1fd20:	add	r2, pc, r2
   1fd24:	mov	r0, r4
   1fd28:	mov	r1, r5
   1fd2c:	bl	1fd68 <dta_write_tag>
   1fd30:	sub	sp, fp, #28
   1fd34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd38:	ldr	r0, [r5, #92]	; 0x5c
   1fd3c:	add	r1, r0, #1
   1fd40:	mov	r0, r4
   1fd44:	bl	4a94 <readstat_write_zeros@plt>
   1fd48:	sub	sp, fp, #28
   1fd4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fd50:	.word	0x00007e1e
   1fd54:	.word	0x00007e02
   1fd58:	.word	0x00007de5
   1fd5c:	.word	0x00007d17
   1fd60:	.word	0x00007cd2
   1fd64:	.word	0x00007e49

0001fd68 <dta_write_tag>:
   1fd68:	ldrb	r1, [r1, #192]	; 0xc0
   1fd6c:	tst	r1, #4
   1fd70:	moveq	r0, #0
   1fd74:	bxeq	lr
   1fd78:	mov	r1, r2
   1fd7c:	b	4be4 <readstat_write_string@plt>

0001fd80 <dta_emit_xmlish_header>:
   1fd80:	push	{r4, r5, r6, sl, fp, lr}
   1fd84:	add	fp, sp, #16
   1fd88:	sub	sp, sp, #144	; 0x90
   1fd8c:	mov	r4, r1
   1fd90:	mov	r5, r0
   1fd94:	ldr	r2, [pc, #432]	; 1ff4c <dta_emit_xmlish_header+0x1cc>
   1fd98:	add	r2, pc, r2
   1fd9c:	bl	1fd68 <dta_write_tag>
   1fda0:	cmp	r0, #0
   1fda4:	bne	1ff44 <dta_emit_xmlish_header+0x1c4>
   1fda8:	ldr	r2, [pc, #416]	; 1ff50 <dta_emit_xmlish_header+0x1d0>
   1fdac:	add	r2, pc, r2
   1fdb0:	mov	r0, r5
   1fdb4:	mov	r1, r4
   1fdb8:	bl	1fd68 <dta_write_tag>
   1fdbc:	cmp	r0, #0
   1fdc0:	bne	1ff44 <dta_emit_xmlish_header+0x1c4>
   1fdc4:	ldr	r3, [r5, #8]
   1fdc8:	add	r6, sp, #16
   1fdcc:	ldr	r2, [pc, #384]	; 1ff54 <dta_emit_xmlish_header+0x1d4>
   1fdd0:	add	r2, pc, r2
   1fdd4:	mov	r0, r6
   1fdd8:	mov	r1, #128	; 0x80
   1fddc:	bl	4d04 <snprintf@plt>
   1fde0:	mov	r0, r5
   1fde4:	mov	r1, r6
   1fde8:	bl	4be4 <readstat_write_string@plt>
   1fdec:	cmp	r0, #0
   1fdf0:	bne	1ff44 <dta_emit_xmlish_header+0x1c4>
   1fdf4:	bl	492c <machine_is_little_endian@plt>
   1fdf8:	ldr	r1, [pc, #344]	; 1ff58 <dta_emit_xmlish_header+0x1d8>
   1fdfc:	add	r1, pc, r1
   1fe00:	mov	r2, #3
   1fe04:	str	r2, [sp]
   1fe08:	str	r1, [sp, #4]
   1fe0c:	ldr	r1, [pc, #328]	; 1ff5c <dta_emit_xmlish_header+0x1dc>
   1fe10:	add	r1, pc, r1
   1fe14:	ldr	r3, [pc, #324]	; 1ff60 <dta_emit_xmlish_header+0x1e0>
   1fe18:	add	r3, pc, r3
   1fe1c:	cmp	r0, #0
   1fe20:	moveq	r3, r1
   1fe24:	ldr	r2, [pc, #312]	; 1ff64 <dta_emit_xmlish_header+0x1e4>
   1fe28:	add	r2, pc, r2
   1fe2c:	mov	r0, r5
   1fe30:	mov	r1, r4
   1fe34:	bl	2024c <dta_write_chunk>
   1fe38:	cmp	r0, #0
   1fe3c:	bne	1ff44 <dta_emit_xmlish_header+0x1c4>
   1fe40:	ldr	r0, [r5, #8]
   1fe44:	cmp	r0, #119	; 0x77
   1fe48:	blt	1fe64 <dta_emit_xmlish_header+0xe4>
   1fe4c:	ldr	r0, [r5, #28]
   1fe50:	str	r0, [sp, #8]
   1fe54:	ldr	r0, [pc, #268]	; 1ff68 <dta_emit_xmlish_header+0x1e8>
   1fe58:	add	r0, pc, r0
   1fe5c:	mov	r1, #4
   1fe60:	b	1fe78 <dta_emit_xmlish_header+0xf8>
   1fe64:	ldr	r0, [r5, #28]
   1fe68:	strh	r0, [sp, #8]
   1fe6c:	ldr	r0, [pc, #248]	; 1ff6c <dta_emit_xmlish_header+0x1ec>
   1fe70:	add	r0, pc, r0
   1fe74:	mov	r1, #2
   1fe78:	str	r1, [sp]
   1fe7c:	str	r0, [sp, #4]
   1fe80:	ldr	r2, [pc, #232]	; 1ff70 <dta_emit_xmlish_header+0x1f0>
   1fe84:	add	r2, pc, r2
   1fe88:	add	r3, sp, #8
   1fe8c:	mov	r0, r5
   1fe90:	mov	r1, r4
   1fe94:	bl	2024c <dta_write_chunk>
   1fe98:	cmp	r0, #0
   1fe9c:	bne	1ff44 <dta_emit_xmlish_header+0x1c4>
   1fea0:	ldr	r0, [r5, #8]
   1fea4:	cmp	r0, #118	; 0x76
   1fea8:	blt	1fecc <dta_emit_xmlish_header+0x14c>
   1feac:	ldr	r0, [r5, #80]	; 0x50
   1feb0:	str	r0, [sp, #8]
   1feb4:	asr	r0, r0, #31
   1feb8:	str	r0, [sp, #12]
   1febc:	ldr	r0, [pc, #176]	; 1ff74 <dta_emit_xmlish_header+0x1f4>
   1fec0:	add	r0, pc, r0
   1fec4:	mov	r1, #8
   1fec8:	b	1fee0 <dta_emit_xmlish_header+0x160>
   1fecc:	ldr	r0, [r5, #80]	; 0x50
   1fed0:	str	r0, [sp, #8]
   1fed4:	ldr	r0, [pc, #156]	; 1ff78 <dta_emit_xmlish_header+0x1f8>
   1fed8:	add	r0, pc, r0
   1fedc:	mov	r1, #4
   1fee0:	str	r1, [sp]
   1fee4:	str	r0, [sp, #4]
   1fee8:	ldr	r2, [pc, #140]	; 1ff7c <dta_emit_xmlish_header+0x1fc>
   1feec:	add	r2, pc, r2
   1fef0:	add	r3, sp, #8
   1fef4:	mov	r0, r5
   1fef8:	mov	r1, r4
   1fefc:	bl	2024c <dta_write_chunk>
   1ff00:	cmp	r0, #0
   1ff04:	bne	1ff44 <dta_emit_xmlish_header+0x1c4>
   1ff08:	mov	r0, r5
   1ff0c:	mov	r1, r4
   1ff10:	bl	1ff84 <dta_emit_header_data_label>
   1ff14:	cmp	r0, #0
   1ff18:	bne	1ff44 <dta_emit_xmlish_header+0x1c4>
   1ff1c:	mov	r0, r5
   1ff20:	mov	r1, r4
   1ff24:	bl	200ac <dta_emit_header_time_stamp>
   1ff28:	cmp	r0, #0
   1ff2c:	bne	1ff44 <dta_emit_xmlish_header+0x1c4>
   1ff30:	ldr	r2, [pc, #72]	; 1ff80 <dta_emit_xmlish_header+0x200>
   1ff34:	add	r2, pc, r2
   1ff38:	mov	r0, r5
   1ff3c:	mov	r1, r4
   1ff40:	bl	1fd68 <dta_write_tag>
   1ff44:	sub	sp, fp, #16
   1ff48:	pop	{r4, r5, r6, sl, fp, pc}
   1ff4c:	.word	0x00007a87
   1ff50:	.word	0x00007a7f
   1ff54:	.word	0x00007d5d
   1ff58:	.word	0x00007a4e
   1ff5c:	.word	0x00007a47
   1ff60:	.word	0x00007a43
   1ff64:	.word	0x00007a16
   1ff68:	.word	0x00007a0b
   1ff6c:	.word	0x000079f3
   1ff70:	.word	0x000079db
   1ff74:	.word	0x000079ac
   1ff78:	.word	0x00007994
   1ff7c:	.word	0x0000797c
   1ff80:	.word	0x000078e1

0001ff84 <dta_emit_header_data_label>:
   1ff84:	push	{r4, r5, r6, r7, fp, lr}
   1ff88:	add	fp, sp, #16
   1ff8c:	sub	sp, sp, #8
   1ff90:	mov	r4, r1
   1ff94:	mov	r5, r0
   1ff98:	ldr	r2, [pc, #260]	; 200a4 <dta_emit_header_data_label+0x120>
   1ff9c:	add	r2, pc, r2
   1ffa0:	bl	1fd68 <dta_write_tag>
   1ffa4:	mov	r6, r0
   1ffa8:	cmp	r0, #0
   1ffac:	beq	1ffbc <dta_emit_header_data_label+0x38>
   1ffb0:	mov	r0, r6
   1ffb4:	sub	sp, fp, #16
   1ffb8:	pop	{r4, r5, r6, r7, fp, pc}
   1ffbc:	ldr	r0, [r4, #8]
   1ffc0:	cmp	r0, #0
   1ffc4:	beq	1fff4 <dta_emit_header_data_label+0x70>
   1ffc8:	cmp	r0, #2
   1ffcc:	beq	20034 <dta_emit_header_data_label+0xb0>
   1ffd0:	cmp	r0, #1
   1ffd4:	bne	2005c <dta_emit_header_data_label+0xd8>
   1ffd8:	add	r0, r5, #88	; 0x58
   1ffdc:	bl	4c8c <strlen@plt>
   1ffe0:	strb	r0, [sp, #7]
   1ffe4:	add	r1, sp, #7
   1ffe8:	mov	r0, r5
   1ffec:	mov	r2, #1
   1fff0:	b	2004c <dta_emit_header_data_label+0xc8>
   1fff4:	ldr	r6, [r4, #4]
   1fff8:	mov	r0, #1
   1fffc:	mov	r1, r6
   20000:	bl	47d0 <calloc@plt>
   20004:	mov	r7, r0
   20008:	add	r1, r5, #88	; 0x58
   2000c:	mov	r2, r6
   20010:	bl	4d4c <strncpy@plt>
   20014:	ldr	r2, [r4, #4]
   20018:	mov	r0, r5
   2001c:	mov	r1, r7
   20020:	bl	4ef0 <readstat_write_bytes@plt>
   20024:	mov	r6, r0
   20028:	cmp	r0, #0
   2002c:	bne	20090 <dta_emit_header_data_label+0x10c>
   20030:	b	20078 <dta_emit_header_data_label+0xf4>
   20034:	add	r0, r5, #88	; 0x58
   20038:	bl	4c8c <strlen@plt>
   2003c:	strh	r0, [sp, #4]
   20040:	add	r1, sp, #4
   20044:	mov	r0, r5
   20048:	mov	r2, #2
   2004c:	bl	4ef0 <readstat_write_bytes@plt>
   20050:	mov	r6, r0
   20054:	cmp	r0, #0
   20058:	bne	1ffb0 <dta_emit_header_data_label+0x2c>
   2005c:	add	r1, r5, #88	; 0x58
   20060:	mov	r0, r5
   20064:	bl	4be4 <readstat_write_string@plt>
   20068:	mov	r6, r0
   2006c:	cmp	r0, #0
   20070:	bne	1ffb0 <dta_emit_header_data_label+0x2c>
   20074:	mov	r7, #0
   20078:	ldr	r2, [pc, #40]	; 200a8 <dta_emit_header_data_label+0x124>
   2007c:	add	r2, pc, r2
   20080:	mov	r0, r5
   20084:	mov	r1, r4
   20088:	bl	1fd68 <dta_write_tag>
   2008c:	mov	r6, r0
   20090:	cmp	r7, #0
   20094:	beq	1ffb0 <dta_emit_header_data_label+0x2c>
   20098:	mov	r0, r7
   2009c:	bl	4938 <free@plt>
   200a0:	b	1ffb0 <dta_emit_header_data_label+0x2c>
   200a4:	.word	0x000078d5
   200a8:	.word	0x000077fd

000200ac <dta_emit_header_time_stamp>:
   200ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   200b0:	add	fp, sp, #24
   200b4:	sub	sp, sp, #80	; 0x50
   200b8:	mov	r8, r0
   200bc:	ldr	r0, [r1, #16]
   200c0:	cmp	r0, #0
   200c4:	beq	20198 <dta_emit_header_time_stamp+0xec>
   200c8:	mov	r6, r1
   200cc:	ldr	r0, [r8, #20]
   200d0:	str	r0, [fp, #-28]	; 0xffffffe4
   200d4:	sub	r0, fp, #28
   200d8:	bl	4bf0 <localtime@plt>
   200dc:	mov	r5, r0
   200e0:	ldr	r7, [r6, #16]
   200e4:	mov	r0, #1
   200e8:	mov	r1, r7
   200ec:	bl	47d0 <calloc@plt>
   200f0:	mov	r9, r0
   200f4:	ldr	r1, [pc, #320]	; 2023c <dta_emit_header_time_stamp+0x190>
   200f8:	add	r1, pc, r1
   200fc:	add	r2, r1, #16
   20100:	mov	r3, #32
   20104:	vld1.64	{d16-d17}, [r1], r3
   20108:	add	r0, sp, #24
   2010c:	vld1.64	{d18-d19}, [r2]
   20110:	add	r2, r0, #16
   20114:	vld1.64	{d20-d21}, [r1]
   20118:	vst1.64	{d18-d19}, [r2]
   2011c:	mov	r1, r0
   20120:	vst1.64	{d16-d17}, [r1], r3
   20124:	vst1.64	{d20-d21}, [r1]
   20128:	cmp	r5, #0
   2012c:	beq	201a0 <dta_emit_header_time_stamp+0xf4>
   20130:	cmp	r9, #0
   20134:	beq	201a8 <dta_emit_header_time_stamp+0xfc>
   20138:	ldr	ip, [r5, #4]
   2013c:	add	r5, r5, #8
   20140:	ldm	r5, {r2, r3, r4, r5}
   20144:	movw	r1, #1900	; 0x76c
   20148:	add	r1, r5, r1
   2014c:	add	r0, r0, r4, lsl #2
   20150:	stm	sp, {r0, r1, r2, ip}
   20154:	ldr	r2, [pc, #228]	; 20240 <dta_emit_header_time_stamp+0x194>
   20158:	add	r2, pc, r2
   2015c:	mov	r0, r9
   20160:	mov	r1, r7
   20164:	bl	4d04 <snprintf@plt>
   20168:	strb	r0, [sp, #23]
   2016c:	tst	r0, #255	; 0xff
   20170:	beq	201b0 <dta_emit_header_time_stamp+0x104>
   20174:	ldrb	r0, [r6, #192]	; 0xc0
   20178:	tst	r0, #4
   2017c:	bne	201b8 <dta_emit_header_time_stamp+0x10c>
   20180:	ldr	r2, [r6, #16]
   20184:	mov	r0, r8
   20188:	mov	r1, r9
   2018c:	bl	4ef0 <readstat_write_bytes@plt>
   20190:	mov	r7, r0
   20194:	b	20210 <dta_emit_header_time_stamp+0x164>
   20198:	mov	r7, #0
   2019c:	b	20218 <dta_emit_header_time_stamp+0x16c>
   201a0:	mov	r7, #39	; 0x27
   201a4:	b	20210 <dta_emit_header_time_stamp+0x164>
   201a8:	mov	r7, #3
   201ac:	b	20210 <dta_emit_header_time_stamp+0x164>
   201b0:	mov	r7, #13
   201b4:	b	20210 <dta_emit_header_time_stamp+0x164>
   201b8:	ldr	r2, [pc, #132]	; 20244 <dta_emit_header_time_stamp+0x198>
   201bc:	add	r2, pc, r2
   201c0:	mov	r0, r8
   201c4:	mov	r1, r6
   201c8:	bl	1fd68 <dta_write_tag>
   201cc:	mov	r7, r0
   201d0:	cmp	r0, #0
   201d4:	bne	20210 <dta_emit_header_time_stamp+0x164>
   201d8:	add	r1, sp, #23
   201dc:	mov	r0, r8
   201e0:	mov	r2, #1
   201e4:	bl	4ef0 <readstat_write_bytes@plt>
   201e8:	mov	r7, r0
   201ec:	cmp	r0, #0
   201f0:	bne	20210 <dta_emit_header_time_stamp+0x164>
   201f4:	ldrb	r2, [sp, #23]
   201f8:	mov	r0, r8
   201fc:	mov	r1, r9
   20200:	bl	4ef0 <readstat_write_bytes@plt>
   20204:	mov	r7, r0
   20208:	cmp	r0, #0
   2020c:	beq	20224 <dta_emit_header_time_stamp+0x178>
   20210:	mov	r0, r9
   20214:	bl	4938 <free@plt>
   20218:	mov	r0, r7
   2021c:	sub	sp, fp, #24
   20220:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20224:	ldr	r2, [pc, #28]	; 20248 <dta_emit_header_time_stamp+0x19c>
   20228:	add	r2, pc, r2
   2022c:	mov	r0, r8
   20230:	mov	r1, r6
   20234:	bl	1fd68 <dta_write_tag>
   20238:	b	20190 <dta_emit_header_time_stamp+0xe4>
   2023c:	.word	0x00007ac0
   20240:	.word	0x000079ec
   20244:	.word	0x000076c6
   20248:	.word	0x00007666

0002024c <dta_write_chunk>:
   2024c:	push	{r4, r5, r6, r7, fp, lr}
   20250:	add	fp, sp, #16
   20254:	mov	r6, r3
   20258:	mov	r4, r1
   2025c:	mov	r5, r0
   20260:	bl	1fd68 <dta_write_tag>
   20264:	cmp	r0, #0
   20268:	popne	{r4, r5, r6, r7, fp, pc}
   2026c:	ldr	r7, [fp, #12]
   20270:	ldr	r2, [fp, #8]
   20274:	mov	r0, r5
   20278:	mov	r1, r6
   2027c:	bl	4ef0 <readstat_write_bytes@plt>
   20280:	cmp	r0, #0
   20284:	beq	2028c <dta_write_chunk+0x40>
   20288:	pop	{r4, r5, r6, r7, fp, pc}
   2028c:	mov	r0, r5
   20290:	mov	r1, r4
   20294:	mov	r2, r7
   20298:	pop	{r4, r5, r6, r7, fp, lr}
   2029c:	b	1fd68 <dta_write_tag>

000202a0 <dta_measure_map>:
   202a0:	push	{r4, r5, fp, lr}
   202a4:	add	fp, sp, #8
   202a8:	mov	r4, r0
   202ac:	ldr	r1, [pc, #36]	; 202d8 <dta_measure_map+0x38>
   202b0:	add	r1, pc, r1
   202b4:	bl	207b0 <dta_measure_tag>
   202b8:	mov	r5, r0
   202bc:	ldr	r1, [pc, #24]	; 202dc <dta_measure_map+0x3c>
   202c0:	add	r1, pc, r1
   202c4:	mov	r0, r4
   202c8:	bl	207b0 <dta_measure_tag>
   202cc:	add	r0, r5, r0
   202d0:	add	r0, r0, #112	; 0x70
   202d4:	pop	{r4, r5, fp, pc}
   202d8:	.word	0x000075eb
   202dc:	.word	0x000075e1

000202e0 <dta_measure_typlist>:
   202e0:	push	{r4, r5, fp, lr}
   202e4:	add	fp, sp, #8
   202e8:	mov	r4, r0
   202ec:	ldr	r1, [pc, #40]	; 2031c <dta_measure_typlist+0x3c>
   202f0:	add	r1, pc, r1
   202f4:	bl	207b0 <dta_measure_tag>
   202f8:	ldr	r1, [r4, #24]
   202fc:	ldr	r2, [r4, #148]	; 0x94
   20300:	mla	r5, r2, r1, r0
   20304:	ldr	r1, [pc, #20]	; 20320 <dta_measure_typlist+0x40>
   20308:	add	r1, pc, r1
   2030c:	mov	r0, r4
   20310:	bl	207b0 <dta_measure_tag>
   20314:	add	r0, r5, r0
   20318:	pop	{r4, r5, fp, pc}
   2031c:	.word	0x000075b8
   20320:	.word	0x000075b1

00020324 <dta_measure_varlist>:
   20324:	push	{r4, r5, fp, lr}
   20328:	add	fp, sp, #8
   2032c:	mov	r4, r0
   20330:	ldr	r1, [pc, #36]	; 2035c <dta_measure_varlist+0x38>
   20334:	add	r1, pc, r1
   20338:	bl	207b0 <dta_measure_tag>
   2033c:	ldr	r1, [r4, #40]	; 0x28
   20340:	add	r5, r1, r0
   20344:	ldr	r1, [pc, #20]	; 20360 <dta_measure_varlist+0x3c>
   20348:	add	r1, pc, r1
   2034c:	mov	r0, r4
   20350:	bl	207b0 <dta_measure_tag>
   20354:	add	r0, r5, r0
   20358:	pop	{r4, r5, fp, pc}
   2035c:	.word	0x00007597
   20360:	.word	0x0000758e

00020364 <dta_measure_srtlist>:
   20364:	push	{r4, r5, fp, lr}
   20368:	add	fp, sp, #8
   2036c:	mov	r4, r0
   20370:	ldr	r1, [pc, #36]	; 2039c <dta_measure_srtlist+0x38>
   20374:	add	r1, pc, r1
   20378:	bl	207b0 <dta_measure_tag>
   2037c:	ldr	r1, [r4, #48]	; 0x30
   20380:	add	r5, r1, r0
   20384:	ldr	r1, [pc, #20]	; 203a0 <dta_measure_srtlist+0x3c>
   20388:	add	r1, pc, r1
   2038c:	mov	r0, r4
   20390:	bl	207b0 <dta_measure_tag>
   20394:	add	r0, r5, r0
   20398:	pop	{r4, r5, fp, pc}
   2039c:	.word	0x0000756e
   203a0:	.word	0x00007565

000203a4 <dta_measure_fmtlist>:
   203a4:	push	{r4, r5, fp, lr}
   203a8:	add	fp, sp, #8
   203ac:	mov	r4, r0
   203b0:	ldr	r1, [pc, #36]	; 203dc <dta_measure_fmtlist+0x38>
   203b4:	add	r1, pc, r1
   203b8:	bl	207b0 <dta_measure_tag>
   203bc:	ldr	r1, [r4, #56]	; 0x38
   203c0:	add	r5, r1, r0
   203c4:	ldr	r1, [pc, #20]	; 203e0 <dta_measure_fmtlist+0x3c>
   203c8:	add	r1, pc, r1
   203cc:	mov	r0, r4
   203d0:	bl	207b0 <dta_measure_tag>
   203d4:	add	r0, r5, r0
   203d8:	pop	{r4, r5, fp, pc}
   203dc:	.word	0x00007545
   203e0:	.word	0x0000753b

000203e4 <dta_measure_lbllist>:
   203e4:	push	{r4, r5, fp, lr}
   203e8:	add	fp, sp, #8
   203ec:	mov	r4, r0
   203f0:	ldr	r1, [pc, #36]	; 2041c <dta_measure_lbllist+0x38>
   203f4:	add	r1, pc, r1
   203f8:	bl	207b0 <dta_measure_tag>
   203fc:	ldr	r1, [r4, #64]	; 0x40
   20400:	add	r5, r1, r0
   20404:	ldr	r1, [pc, #20]	; 20420 <dta_measure_lbllist+0x3c>
   20408:	add	r1, pc, r1
   2040c:	mov	r0, r4
   20410:	bl	207b0 <dta_measure_tag>
   20414:	add	r0, r5, r0
   20418:	pop	{r4, r5, fp, pc}
   2041c:	.word	0x0000751a
   20420:	.word	0x0000751a

00020424 <dta_measure_variable_labels>:
   20424:	push	{r4, r5, fp, lr}
   20428:	add	fp, sp, #8
   2042c:	mov	r4, r0
   20430:	ldr	r1, [pc, #36]	; 2045c <dta_measure_variable_labels+0x38>
   20434:	add	r1, pc, r1
   20438:	bl	207b0 <dta_measure_tag>
   2043c:	ldr	r1, [r4, #72]	; 0x48
   20440:	add	r5, r1, r0
   20444:	ldr	r1, [pc, #20]	; 20460 <dta_measure_variable_labels+0x3c>
   20448:	add	r1, pc, r1
   2044c:	mov	r0, r4
   20450:	bl	207b0 <dta_measure_tag>
   20454:	add	r0, r5, r0
   20458:	pop	{r4, r5, fp, pc}
   2045c:	.word	0x00007503
   20460:	.word	0x00007501

00020464 <dta_measure_characteristics>:
   20464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20468:	add	fp, sp, #28
   2046c:	sub	sp, sp, #12
   20470:	mov	r4, r0
   20474:	ldr	r0, [r0, #52]	; 0x34
   20478:	cmp	r0, #1
   2047c:	str	r1, [sp, #4]
   20480:	blt	20500 <dta_measure_characteristics+0x9c>
   20484:	mov	r6, r1
   20488:	ldr	r1, [pc, #168]	; 20538 <dta_measure_characteristics+0xd4>
   2048c:	add	r1, pc, r1
   20490:	mov	r0, r6
   20494:	bl	207b0 <dta_measure_tag>
   20498:	str	r0, [sp, #8]
   2049c:	ldr	r9, [r4, #48]	; 0x30
   204a0:	ldr	r7, [r6, #92]	; 0x5c
   204a4:	ldr	r5, [r6, #96]	; 0x60
   204a8:	ldr	r1, [pc, #140]	; 2053c <dta_measure_characteristics+0xd8>
   204ac:	add	r1, pc, r1
   204b0:	mov	r0, r6
   204b4:	bl	207b0 <dta_measure_tag>
   204b8:	mov	r6, r0
   204bc:	lsl	r8, r5, #1
   204c0:	ldr	r4, [r4, #52]	; 0x34
   204c4:	mov	r5, #0
   204c8:	mov	sl, #0
   204cc:	ldr	r0, [r9, sl, lsl #2]
   204d0:	bl	4c8c <strlen@plt>
   204d4:	ldr	r1, [sp, #8]
   204d8:	add	r1, r5, r1
   204dc:	add	r1, r1, r7
   204e0:	add	r1, r1, r8
   204e4:	add	r0, r1, r0
   204e8:	add	r0, r0, r6
   204ec:	add	r5, r0, #1
   204f0:	add	sl, sl, #1
   204f4:	cmp	sl, r4
   204f8:	blt	204cc <dta_measure_characteristics+0x68>
   204fc:	b	20504 <dta_measure_characteristics+0xa0>
   20500:	mov	r5, #0
   20504:	ldr	r1, [pc, #52]	; 20540 <dta_measure_characteristics+0xdc>
   20508:	add	r1, pc, r1
   2050c:	ldr	r6, [sp, #4]
   20510:	mov	r0, r6
   20514:	bl	207b0 <dta_measure_tag>
   20518:	add	r4, r0, r5
   2051c:	ldr	r1, [pc, #32]	; 20544 <dta_measure_characteristics+0xe0>
   20520:	add	r1, pc, r1
   20524:	mov	r0, r6
   20528:	bl	207b0 <dta_measure_tag>
   2052c:	add	r0, r4, r0
   20530:	sub	sp, fp, #28
   20534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20538:	.word	0x00007521
   2053c:	.word	0x00007512
   20540:	.word	0x0000748e
   20544:	.word	0x00007649

00020548 <dta_measure_data>:
   20548:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2054c:	add	fp, sp, #24
   20550:	sub	sp, sp, #8
   20554:	mov	r4, r1
   20558:	mov	r5, r0
   2055c:	ldr	r0, [r1, #148]	; 0x94
   20560:	cmp	r0, #1
   20564:	blt	205d4 <dta_measure_data+0x8c>
   20568:	mov	r7, #0
   2056c:	add	r8, sp, #2
   20570:	add	r9, sp, #4
   20574:	mov	r6, #0
   20578:	str	r7, [sp, #4]
   2057c:	mov	r0, r5
   20580:	mov	r1, r6
   20584:	bl	4e18 <readstat_get_variable@plt>
   20588:	strh	r7, [sp, #2]
   2058c:	ldrb	r1, [r4, #20]
   20590:	mov	r2, r8
   20594:	bl	207c8 <dta_typecode_for_variable>
   20598:	ldrh	r0, [sp, #2]
   2059c:	mov	r1, r4
   205a0:	mov	r2, r9
   205a4:	mov	r3, #0
   205a8:	bl	4c74 <dta_type_info@plt>
   205ac:	cmp	r0, #0
   205b0:	bne	205c4 <dta_measure_data+0x7c>
   205b4:	ldr	r0, [r4, #160]	; 0xa0
   205b8:	ldr	r1, [sp, #4]
   205bc:	add	r0, r0, r1
   205c0:	str	r0, [r4, #160]	; 0xa0
   205c4:	add	r6, r6, #1
   205c8:	ldr	r0, [r4, #148]	; 0x94
   205cc:	cmp	r6, r0
   205d0:	blt	20578 <dta_measure_data+0x30>
   205d4:	ldr	r1, [pc, #52]	; 20610 <dta_measure_data+0xc8>
   205d8:	add	r1, pc, r1
   205dc:	mov	r0, r4
   205e0:	bl	207b0 <dta_measure_tag>
   205e4:	mov	r5, r0
   205e8:	ldr	r6, [r4, #152]	; 0x98
   205ec:	ldr	r7, [r4, #160]	; 0xa0
   205f0:	ldr	r1, [pc, #28]	; 20614 <dta_measure_data+0xcc>
   205f4:	add	r1, pc, r1
   205f8:	mov	r0, r4
   205fc:	bl	207b0 <dta_measure_tag>
   20600:	add	r0, r0, r5
   20604:	mla	r0, r7, r6, r0
   20608:	sub	sp, fp, #24
   2060c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20610:	.word	0x0000742a
   20614:	.word	0x00007415

00020618 <dta_measure_strls>:
   20618:	push	{r4, r5, r6, sl, fp, lr}
   2061c:	add	fp, sp, #16
   20620:	mov	r6, r1
   20624:	ldr	r1, [r0, #64]	; 0x40
   20628:	cmp	r1, #1
   2062c:	blt	20670 <dta_measure_strls+0x58>
   20630:	ldr	r2, [r6, #116]	; 0x74
   20634:	mov	r1, #16
   20638:	cmp	r2, #4
   2063c:	movwhi	r1, #20
   20640:	ldr	r2, [r0, #60]	; 0x3c
   20644:	ldr	r0, [r0, #64]	; 0x40
   20648:	mov	r3, #0
   2064c:	mov	r5, #0
   20650:	ldr	r4, [r2, r3, lsl #2]
   20654:	ldr	r4, [r4, #16]
   20658:	add	r5, r4, r5
   2065c:	add	r5, r5, r1
   20660:	add	r3, r3, #1
   20664:	cmp	r3, r0
   20668:	blt	20650 <dta_measure_strls+0x38>
   2066c:	b	20674 <dta_measure_strls+0x5c>
   20670:	mov	r5, #0
   20674:	ldr	r1, [pc, #36]	; 206a0 <dta_measure_strls+0x88>
   20678:	add	r1, pc, r1
   2067c:	mov	r0, r6
   20680:	bl	207b0 <dta_measure_tag>
   20684:	add	r4, r0, r5
   20688:	ldr	r1, [pc, #20]	; 206a4 <dta_measure_strls+0x8c>
   2068c:	add	r1, pc, r1
   20690:	mov	r0, r6
   20694:	bl	207b0 <dta_measure_tag>
   20698:	add	r0, r4, r0
   2069c:	pop	{r4, r5, r6, sl, fp, pc}
   206a0:	.word	0x0000737a
   206a4:	.word	0x000074f0

000206a8 <dta_measure_value_labels>:
   206a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   206ac:	add	fp, sp, #28
   206b0:	sub	sp, sp, #4
   206b4:	mov	r4, r1
   206b8:	mov	r5, r0
   206bc:	ldr	r1, [pc, #220]	; 207a0 <dta_measure_value_labels+0xf8>
   206c0:	add	r1, pc, r1
   206c4:	mov	r0, r4
   206c8:	bl	207b0 <dta_measure_tag>
   206cc:	mov	r6, r0
   206d0:	ldr	r0, [r5, #40]	; 0x28
   206d4:	cmp	r0, #1
   206d8:	blt	20784 <dta_measure_value_labels+0xdc>
   206dc:	mov	r7, #0
   206e0:	str	r5, [sp]
   206e4:	mov	r0, r5
   206e8:	mov	r1, r7
   206ec:	bl	4ec0 <readstat_get_label_set@plt>
   206f0:	ldr	r9, [r0, #264]	; 0x108
   206f4:	cmp	r9, #1
   206f8:	mov	sl, #0
   206fc:	blt	20730 <dta_measure_value_labels+0x88>
   20700:	mov	r5, r0
   20704:	mov	sl, #0
   20708:	mov	r8, #0
   2070c:	mov	r0, r5
   20710:	mov	r1, r8
   20714:	bl	4f68 <readstat_get_value_label@plt>
   20718:	ldr	r0, [r0, #28]
   2071c:	add	r0, sl, r0
   20720:	add	sl, r0, #1
   20724:	add	r8, r8, #1
   20728:	cmp	r9, r8
   2072c:	bne	2070c <dta_measure_value_labels+0x64>
   20730:	mov	r0, r4
   20734:	ldr	r1, [pc, #104]	; 207a4 <dta_measure_value_labels+0xfc>
   20738:	add	r1, pc, r1
   2073c:	bl	207b0 <dta_measure_tag>
   20740:	add	r1, r6, r9, lsl #3
   20744:	add	r1, r1, sl
   20748:	add	r0, r1, r0
   2074c:	ldrd	r2, [r4, #104]	; 0x68
   20750:	add	r0, r0, r2
   20754:	add	r5, r0, r3
   20758:	mov	r0, r4
   2075c:	ldr	r1, [pc, #68]	; 207a8 <dta_measure_value_labels+0x100>
   20760:	add	r1, pc, r1
   20764:	bl	207b0 <dta_measure_tag>
   20768:	add	r0, r5, r0
   2076c:	add	r6, r0, #12
   20770:	add	r7, r7, #1
   20774:	ldr	r5, [sp]
   20778:	ldr	r0, [r5, #40]	; 0x28
   2077c:	cmp	r7, r0
   20780:	blt	206e4 <dta_measure_value_labels+0x3c>
   20784:	ldr	r1, [pc, #32]	; 207ac <dta_measure_value_labels+0x104>
   20788:	add	r1, pc, r1
   2078c:	mov	r0, r4
   20790:	bl	207b0 <dta_measure_tag>
   20794:	add	r0, r0, r6
   20798:	sub	sp, fp, #28
   2079c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   207a0:	.word	0x00007386
   207a4:	.word	0x0000731d
   207a8:	.word	0x000072fb
   207ac:	.word	0x000073fd

000207b0 <dta_measure_tag>:
   207b0:	ldrb	r0, [r0, #192]	; 0xc0
   207b4:	tst	r0, #4
   207b8:	moveq	r0, #0
   207bc:	bxeq	lr
   207c0:	mov	r0, r1
   207c4:	b	4c8c <strlen@plt>

000207c8 <dta_typecode_for_variable>:
   207c8:	cmp	r1, #117	; 0x75
   207cc:	beq	207e0 <dta_typecode_for_variable+0x18>
   207d0:	cmp	r1, #111	; 0x6f
   207d4:	bne	207f8 <dta_typecode_for_variable+0x30>
   207d8:	mov	r1, r2
   207dc:	b	20800 <dta_111_typecode_for_variable>
   207e0:	push	{fp, lr}
   207e4:	mov	fp, sp
   207e8:	mov	r1, r2
   207ec:	bl	2087c <dta_117_typecode_for_variable>
   207f0:	mov	r0, #0
   207f4:	pop	{fp, pc}
   207f8:	mov	r1, r2
   207fc:	b	20908 <dta_old_typecode_for_variable>

00020800 <dta_111_typecode_for_variable>:
   20800:	ldr	r3, [r0]
   20804:	cmp	r3, #6
   20808:	mov	r2, #0
   2080c:	bhi	20868 <dta_111_typecode_for_variable+0x68>
   20810:	mov	ip, #33	; 0x21
   20814:	add	r2, pc, #4
   20818:	ldr	r3, [r2, r3, lsl #2]
   2081c:	add	pc, r2, r3
   20820:	.word	0x0000001c
   20824:	.word	0x00000024
   20828:	.word	0x0000002c
   2082c:	.word	0x00000034
   20830:	.word	0x0000003c
   20834:	.word	0x00000044
   20838:	.word	0x00000054
   2083c:	ldr	r2, [r0, #1596]	; 0x63c
   20840:	b	20868 <dta_111_typecode_for_variable+0x68>
   20844:	mov	r2, #251	; 0xfb
   20848:	b	20868 <dta_111_typecode_for_variable+0x68>
   2084c:	mov	r2, #252	; 0xfc
   20850:	b	20868 <dta_111_typecode_for_variable+0x68>
   20854:	mov	r2, #253	; 0xfd
   20858:	b	20868 <dta_111_typecode_for_variable+0x68>
   2085c:	mov	r2, #254	; 0xfe
   20860:	b	20868 <dta_111_typecode_for_variable+0x68>
   20864:	mov	r2, #255	; 0xff
   20868:	cmp	r1, #0
   2086c:	strhne	r2, [r1]
   20870:	mov	ip, #0
   20874:	mov	r0, ip
   20878:	bx	lr

0002087c <dta_117_typecode_for_variable>:
   2087c:	ldr	r2, [r0]
   20880:	cmp	r2, #6
   20884:	bhi	208b8 <dta_117_typecode_for_variable+0x3c>
   20888:	add	r3, pc, #4
   2088c:	ldr	r2, [r3, r2, lsl #2]
   20890:	add	pc, r3, r2
   20894:	.word	0x0000001c
   20898:	.word	0x0000002c
   2089c:	.word	0x00000038
   208a0:	.word	0x00000044
   208a4:	.word	0x00000050
   208a8:	.word	0x0000005c
   208ac:	.word	0x00000064
   208b0:	ldr	r0, [r0, #1596]	; 0x63c
   208b4:	b	208fc <dta_117_typecode_for_variable+0x80>
   208b8:	mov	r0, #0
   208bc:	b	208fc <dta_117_typecode_for_variable+0x80>
   208c0:	mvn	r0, #9
   208c4:	add	r0, r0, #4
   208c8:	b	208fc <dta_117_typecode_for_variable+0x80>
   208cc:	mvn	r0, #9
   208d0:	add	r0, r0, #3
   208d4:	b	208fc <dta_117_typecode_for_variable+0x80>
   208d8:	mvn	r0, #9
   208dc:	add	r0, r0, #2
   208e0:	b	208fc <dta_117_typecode_for_variable+0x80>
   208e4:	mvn	r0, #9
   208e8:	add	r0, r0, #1
   208ec:	b	208fc <dta_117_typecode_for_variable+0x80>
   208f0:	movw	r0, #65526	; 0xfff6
   208f4:	b	208fc <dta_117_typecode_for_variable+0x80>
   208f8:	mov	r0, #32768	; 0x8000
   208fc:	cmp	r1, #0
   20900:	strhne	r0, [r1]
   20904:	bx	lr

00020908 <dta_old_typecode_for_variable>:
   20908:	ldr	r3, [r0]
   2090c:	cmp	r3, #6
   20910:	mov	r2, #0
   20914:	bhi	20978 <dta_old_typecode_for_variable+0x70>
   20918:	mov	ip, #33	; 0x21
   2091c:	add	r2, pc, #4
   20920:	ldr	r3, [r2, r3, lsl #2]
   20924:	add	pc, r2, r3
   20928:	.word	0x0000001c
   2092c:	.word	0x0000002c
   20930:	.word	0x00000034
   20934:	.word	0x0000003c
   20938:	.word	0x00000044
   2093c:	.word	0x0000004c
   20940:	.word	0x0000005c
   20944:	movw	r2, #1596	; 0x63c
   20948:	ldrh	r0, [r0, r2]
   2094c:	add	r2, r0, #127	; 0x7f
   20950:	b	20978 <dta_old_typecode_for_variable+0x70>
   20954:	mov	r2, #98	; 0x62
   20958:	b	20978 <dta_old_typecode_for_variable+0x70>
   2095c:	mov	r2, #105	; 0x69
   20960:	b	20978 <dta_old_typecode_for_variable+0x70>
   20964:	mov	r2, #108	; 0x6c
   20968:	b	20978 <dta_old_typecode_for_variable+0x70>
   2096c:	mov	r2, #102	; 0x66
   20970:	b	20978 <dta_old_typecode_for_variable+0x70>
   20974:	mov	r2, #100	; 0x64
   20978:	cmp	r1, #0
   2097c:	strhne	r2, [r1]
   20980:	mov	ip, #0
   20984:	mov	r0, ip
   20988:	bx	lr

0002098c <dta_emit_typlist>:
   2098c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   20990:	add	fp, sp, #24
   20994:	sub	sp, sp, #8
   20998:	mov	r4, r1
   2099c:	mov	r5, r0
   209a0:	ldr	r2, [pc, #272]	; 20ab8 <dta_emit_typlist+0x12c>
   209a4:	add	r2, pc, r2
   209a8:	bl	1fd68 <dta_write_tag>
   209ac:	cmp	r0, #0
   209b0:	bne	20ab0 <dta_emit_typlist+0x124>
   209b4:	ldr	r0, [r4, #148]	; 0x94
   209b8:	cmp	r0, #1
   209bc:	blt	20a9c <dta_emit_typlist+0x110>
   209c0:	mov	r8, #0
   209c4:	add	r9, sp, #6
   209c8:	mov	r6, #0
   209cc:	mov	r7, #0
   209d0:	mov	r0, r5
   209d4:	mov	r1, r7
   209d8:	bl	4e18 <readstat_get_variable@plt>
   209dc:	strh	r8, [sp, #6]
   209e0:	ldrb	r1, [r4, #20]
   209e4:	mov	r2, r9
   209e8:	bl	207c8 <dta_typecode_for_variable>
   209ec:	cmp	r0, #0
   209f0:	bne	20ab0 <dta_emit_typlist+0x124>
   209f4:	ldr	r0, [r4, #28]
   209f8:	add	r0, r0, r6
   209fc:	ldrh	r1, [sp, #6]
   20a00:	strh	r1, [r0]
   20a04:	add	r6, r6, #2
   20a08:	add	r7, r7, #1
   20a0c:	ldr	r0, [r4, #148]	; 0x94
   20a10:	cmp	r7, r0
   20a14:	blt	209d0 <dta_emit_typlist+0x44>
   20a18:	cmp	r0, #1
   20a1c:	blt	20a9c <dta_emit_typlist+0x110>
   20a20:	mov	r6, #0
   20a24:	add	r8, sp, #2
   20a28:	add	r9, sp, #5
   20a2c:	mov	r7, #0
   20a30:	ldr	r0, [r4, #24]
   20a34:	cmp	r0, #2
   20a38:	beq	20a60 <dta_emit_typlist+0xd4>
   20a3c:	cmp	r0, #1
   20a40:	bne	20a88 <dta_emit_typlist+0xfc>
   20a44:	ldr	r0, [r4, #28]
   20a48:	ldrb	r0, [r0, r6]
   20a4c:	strb	r0, [sp, #5]
   20a50:	mov	r0, r5
   20a54:	mov	r1, r9
   20a58:	mov	r2, #1
   20a5c:	b	20a7c <dta_emit_typlist+0xf0>
   20a60:	ldr	r0, [r4, #28]
   20a64:	add	r0, r0, r6
   20a68:	ldrh	r0, [r0]
   20a6c:	strh	r0, [sp, #2]
   20a70:	mov	r0, r5
   20a74:	mov	r1, r8
   20a78:	mov	r2, #2
   20a7c:	bl	4ef0 <readstat_write_bytes@plt>
   20a80:	cmp	r0, #0
   20a84:	bne	20ab0 <dta_emit_typlist+0x124>
   20a88:	add	r6, r6, #2
   20a8c:	add	r7, r7, #1
   20a90:	ldr	r0, [r4, #148]	; 0x94
   20a94:	cmp	r7, r0
   20a98:	blt	20a30 <dta_emit_typlist+0xa4>
   20a9c:	ldr	r2, [pc, #24]	; 20abc <dta_emit_typlist+0x130>
   20aa0:	add	r2, pc, r2
   20aa4:	mov	r0, r5
   20aa8:	mov	r1, r4
   20aac:	bl	1fd68 <dta_write_tag>
   20ab0:	sub	sp, fp, #24
   20ab4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   20ab8:	.word	0x00006f04
   20abc:	.word	0x00006e19

00020ac0 <dta_emit_varlist>:
   20ac0:	push	{r4, r5, r6, sl, fp, lr}
   20ac4:	add	fp, sp, #16
   20ac8:	mov	r4, r1
   20acc:	mov	r5, r0
   20ad0:	ldr	r2, [pc, #132]	; 20b5c <dta_emit_varlist+0x9c>
   20ad4:	add	r2, pc, r2
   20ad8:	bl	1fd68 <dta_write_tag>
   20adc:	cmp	r0, #0
   20ae0:	popne	{r4, r5, r6, sl, fp, pc}
   20ae4:	ldr	r0, [r4, #148]	; 0x94
   20ae8:	cmp	r0, #1
   20aec:	blt	20b28 <dta_emit_varlist+0x68>
   20af0:	mov	r6, #0
   20af4:	mov	r0, r5
   20af8:	mov	r1, r6
   20afc:	bl	4e18 <readstat_get_variable@plt>
   20b00:	ldr	r1, [r4, #36]	; 0x24
   20b04:	ldr	r2, [r4, #76]	; 0x4c
   20b08:	mla	r3, r2, r6, r1
   20b0c:	add	r1, r0, #8
   20b10:	mov	r0, r3
   20b14:	bl	4d4c <strncpy@plt>
   20b18:	add	r6, r6, #1
   20b1c:	ldr	r0, [r4, #148]	; 0x94
   20b20:	cmp	r6, r0
   20b24:	blt	20af4 <dta_emit_varlist+0x34>
   20b28:	ldr	r1, [r4, #36]	; 0x24
   20b2c:	ldr	r2, [r4, #40]	; 0x28
   20b30:	mov	r0, r5
   20b34:	bl	4ef0 <readstat_write_bytes@plt>
   20b38:	cmp	r0, #0
   20b3c:	beq	20b44 <dta_emit_varlist+0x84>
   20b40:	pop	{r4, r5, r6, sl, fp, pc}
   20b44:	ldr	r2, [pc, #20]	; 20b60 <dta_emit_varlist+0xa0>
   20b48:	add	r2, pc, r2
   20b4c:	mov	r0, r5
   20b50:	mov	r1, r4
   20b54:	pop	{r4, r5, r6, sl, fp, lr}
   20b58:	b	1fd68 <dta_write_tag>
   20b5c:	.word	0x00006df7
   20b60:	.word	0x00006d8e

00020b64 <dta_emit_srtlist>:
   20b64:	push	{r4, r5, fp, lr}
   20b68:	add	fp, sp, #8
   20b6c:	mov	r4, r1
   20b70:	mov	r5, r0
   20b74:	ldr	r2, [pc, #80]	; 20bcc <dta_emit_srtlist+0x68>
   20b78:	add	r2, pc, r2
   20b7c:	bl	1fd68 <dta_write_tag>
   20b80:	cmp	r0, #0
   20b84:	popne	{r4, r5, fp, pc}
   20b88:	ldr	r0, [r4, #44]	; 0x2c
   20b8c:	ldr	r2, [r4, #48]	; 0x30
   20b90:	mov	r1, #0
   20b94:	bl	4d28 <memset@plt>
   20b98:	ldr	r1, [r4, #44]	; 0x2c
   20b9c:	ldr	r2, [r4, #48]	; 0x30
   20ba0:	mov	r0, r5
   20ba4:	bl	4ef0 <readstat_write_bytes@plt>
   20ba8:	cmp	r0, #0
   20bac:	beq	20bb4 <dta_emit_srtlist+0x50>
   20bb0:	pop	{r4, r5, fp, pc}
   20bb4:	ldr	r2, [pc, #20]	; 20bd0 <dta_emit_srtlist+0x6c>
   20bb8:	add	r2, pc, r2
   20bbc:	mov	r0, r5
   20bc0:	mov	r1, r4
   20bc4:	pop	{r4, r5, fp, lr}
   20bc8:	b	1fd68 <dta_write_tag>
   20bcc:	.word	0x00006d6a
   20bd0:	.word	0x00006d35

00020bd4 <dta_emit_fmtlist>:
   20bd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20bd8:	add	fp, sp, #28
   20bdc:	sub	sp, sp, #68	; 0x44
   20be0:	mov	r4, r1
   20be4:	mov	r5, r0
   20be8:	ldr	r2, [pc, #300]	; 20d1c <dta_emit_fmtlist+0x148>
   20bec:	add	r2, pc, r2
   20bf0:	bl	1fd68 <dta_write_tag>
   20bf4:	cmp	r0, #0
   20bf8:	bne	20cf8 <dta_emit_fmtlist+0x124>
   20bfc:	ldr	r0, [r4, #148]	; 0x94
   20c00:	cmp	r0, #1
   20c04:	blt	20ce0 <dta_emit_fmtlist+0x10c>
   20c08:	mov	r6, #0
   20c0c:	ldr	r9, [pc, #268]	; 20d20 <dta_emit_fmtlist+0x14c>
   20c10:	add	r9, pc, r9
   20c14:	add	sl, sp, #4
   20c18:	mov	r0, r5
   20c1c:	mov	r1, r6
   20c20:	bl	4e18 <readstat_get_variable@plt>
   20c24:	mov	r8, r0
   20c28:	mov	r1, r0
   20c2c:	ldrb	r0, [r1, #308]!	; 0x134
   20c30:	cmp	r0, #0
   20c34:	beq	20c48 <dta_emit_fmtlist+0x74>
   20c38:	ldr	r0, [r4, #52]	; 0x34
   20c3c:	ldr	r2, [r4, #80]	; 0x50
   20c40:	mla	r0, r2, r6, r0
   20c44:	b	20ccc <dta_emit_fmtlist+0xf8>
   20c48:	ldr	r7, [r8, #2136]	; 0x858
   20c4c:	ldr	r0, [r8]
   20c50:	bl	489c <readstat_type_class@plt>
   20c54:	cmp	r7, #0
   20c58:	bne	20c78 <dta_emit_fmtlist+0xa4>
   20c5c:	ldr	r1, [r8]
   20c60:	sub	r1, r1, #1
   20c64:	mov	r7, #9
   20c68:	cmp	r1, #4
   20c6c:	ldrls	r2, [pc, #176]	; 20d24 <dta_emit_fmtlist+0x150>
   20c70:	addls	r2, pc, r2
   20c74:	ldrls	r7, [r2, r1, lsl #2]
   20c78:	ldr	r1, [r8, #2132]	; 0x854
   20c7c:	cmp	r1, #1
   20c80:	mov	r2, r9
   20c84:	ldr	r1, [pc, #156]	; 20d28 <dta_emit_fmtlist+0x154>
   20c88:	add	r1, pc, r1
   20c8c:	moveq	r2, r1
   20c90:	cmp	r0, #0
   20c94:	beq	20ca8 <dta_emit_fmtlist+0xd4>
   20c98:	mov	r0, sl
   20c9c:	ldr	r1, [pc, #136]	; 20d2c <dta_emit_fmtlist+0x158>
   20ca0:	add	r1, pc, r1
   20ca4:	b	20cb4 <dta_emit_fmtlist+0xe0>
   20ca8:	mov	r0, sl
   20cac:	ldr	r1, [pc, #124]	; 20d30 <dta_emit_fmtlist+0x15c>
   20cb0:	add	r1, pc, r1
   20cb4:	mov	r3, r7
   20cb8:	bl	4e84 <sprintf@plt>
   20cbc:	ldr	r0, [r4, #52]	; 0x34
   20cc0:	ldr	r2, [r4, #80]	; 0x50
   20cc4:	mla	r0, r2, r6, r0
   20cc8:	mov	r1, sl
   20ccc:	bl	4d4c <strncpy@plt>
   20cd0:	ldr	r0, [r4, #148]	; 0x94
   20cd4:	add	r6, r6, #1
   20cd8:	cmp	r6, r0
   20cdc:	blt	20c18 <dta_emit_fmtlist+0x44>
   20ce0:	ldr	r1, [r4, #52]	; 0x34
   20ce4:	ldr	r2, [r4, #56]	; 0x38
   20ce8:	mov	r0, r5
   20cec:	bl	4ef0 <readstat_write_bytes@plt>
   20cf0:	cmp	r0, #0
   20cf4:	beq	20d00 <dta_emit_fmtlist+0x12c>
   20cf8:	sub	sp, fp, #28
   20cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20d00:	ldr	r2, [pc, #44]	; 20d34 <dta_emit_fmtlist+0x160>
   20d04:	add	r2, pc, r2
   20d08:	mov	r0, r5
   20d0c:	mov	r1, r4
   20d10:	sub	sp, fp, #28
   20d14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20d18:	b	1fd68 <dta_write_tag>
   20d1c:	.word	0x00006d0d
   20d20:	.word	0x00005396
   20d24:	.word	0x00006f98
   20d28:	.word	0x00006f17
   20d2c:	.word	0x00006ef5
   20d30:	.word	0x00006ef1
   20d34:	.word	0x00006bff

00020d38 <dta_emit_lbllist>:
   20d38:	push	{r4, r5, r6, sl, fp, lr}
   20d3c:	add	fp, sp, #16
   20d40:	mov	r4, r1
   20d44:	mov	r5, r0
   20d48:	ldr	r2, [pc, #156]	; 20dec <dta_emit_lbllist+0xb4>
   20d4c:	add	r2, pc, r2
   20d50:	bl	1fd68 <dta_write_tag>
   20d54:	cmp	r0, #0
   20d58:	popne	{r4, r5, r6, sl, fp, pc}
   20d5c:	ldr	r0, [r4, #148]	; 0x94
   20d60:	cmp	r0, #1
   20d64:	blt	20db8 <dta_emit_lbllist+0x80>
   20d68:	mov	r6, #0
   20d6c:	mov	r0, r5
   20d70:	mov	r1, r6
   20d74:	bl	4e18 <readstat_get_variable@plt>
   20d78:	mov	r1, r0
   20d7c:	ldr	r0, [r4, #60]	; 0x3c
   20d80:	ldr	r2, [r4, #84]	; 0x54
   20d84:	mla	r0, r2, r6, r0
   20d88:	ldr	r1, [r1, #1588]	; 0x634
   20d8c:	cmp	r1, #0
   20d90:	beq	20da0 <dta_emit_lbllist+0x68>
   20d94:	add	r1, r1, #4
   20d98:	bl	4d4c <strncpy@plt>
   20d9c:	b	20da8 <dta_emit_lbllist+0x70>
   20da0:	mov	r1, #0
   20da4:	bl	4d28 <memset@plt>
   20da8:	ldr	r0, [r4, #148]	; 0x94
   20dac:	add	r6, r6, #1
   20db0:	cmp	r6, r0
   20db4:	blt	20d6c <dta_emit_lbllist+0x34>
   20db8:	ldr	r1, [r4, #60]	; 0x3c
   20dbc:	ldr	r2, [r4, #64]	; 0x40
   20dc0:	mov	r0, r5
   20dc4:	bl	4ef0 <readstat_write_bytes@plt>
   20dc8:	cmp	r0, #0
   20dcc:	beq	20dd4 <dta_emit_lbllist+0x9c>
   20dd0:	pop	{r4, r5, r6, sl, fp, pc}
   20dd4:	ldr	r2, [pc, #20]	; 20df0 <dta_emit_lbllist+0xb8>
   20dd8:	add	r2, pc, r2
   20ddc:	mov	r0, r5
   20de0:	mov	r1, r4
   20de4:	pop	{r4, r5, r6, sl, fp, lr}
   20de8:	b	1fd68 <dta_write_tag>
   20dec:	.word	0x00006bc2
   20df0:	.word	0x00006b4a

00020df4 <dta_emit_strls>:
   20df4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20df8:	add	fp, sp, #24
   20dfc:	mov	r5, r1
   20e00:	mov	r4, r0
   20e04:	ldrb	r1, [r1, #192]	; 0xc0
   20e08:	mov	r0, #0
   20e0c:	tst	r1, #4
   20e10:	beq	20e2c <dta_emit_strls+0x38>
   20e14:	ldr	r1, [pc, #180]	; 20ed0 <dta_emit_strls+0xdc>
   20e18:	add	r1, pc, r1
   20e1c:	mov	r0, r4
   20e20:	bl	4be4 <readstat_write_string@plt>
   20e24:	cmp	r0, #0
   20e28:	beq	20e30 <dta_emit_strls+0x3c>
   20e2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   20e30:	ldr	r0, [r4, #64]	; 0x40
   20e34:	cmp	r0, #1
   20e38:	blt	20ebc <dta_emit_strls+0xc8>
   20e3c:	mov	r6, #0
   20e40:	ldr	r8, [pc, #140]	; 20ed4 <dta_emit_strls+0xe0>
   20e44:	add	r8, pc, r8
   20e48:	ldr	r0, [r4, #60]	; 0x3c
   20e4c:	ldr	r7, [r0, r6, lsl #2]
   20e50:	mov	r0, r4
   20e54:	mov	r1, r8
   20e58:	bl	4be4 <readstat_write_string@plt>
   20e5c:	cmp	r0, #0
   20e60:	bne	20e2c <dta_emit_strls+0x38>
   20e64:	ldr	r0, [r5, #116]	; 0x74
   20e68:	cmp	r0, #5
   20e6c:	bcc	20e80 <dta_emit_strls+0x8c>
   20e70:	mov	r0, r4
   20e74:	mov	r1, r7
   20e78:	bl	2132c <dta_118_emit_strl_header>
   20e7c:	b	20e8c <dta_emit_strls+0x98>
   20e80:	mov	r0, r4
   20e84:	mov	r1, r7
   20e88:	bl	21374 <dta_117_emit_strl_header>
   20e8c:	cmp	r0, #0
   20e90:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   20e94:	ldr	r2, [r7, #16]
   20e98:	add	r1, r7, #20
   20e9c:	mov	r0, r4
   20ea0:	bl	4ef0 <readstat_write_bytes@plt>
   20ea4:	cmp	r0, #0
   20ea8:	bne	20e2c <dta_emit_strls+0x38>
   20eac:	add	r6, r6, #1
   20eb0:	ldr	r0, [r4, #64]	; 0x40
   20eb4:	cmp	r6, r0
   20eb8:	blt	20e48 <dta_emit_strls+0x54>
   20ebc:	ldr	r1, [pc, #20]	; 20ed8 <dta_emit_strls+0xe4>
   20ec0:	add	r1, pc, r1
   20ec4:	mov	r0, r4
   20ec8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   20ecc:	b	4be4 <readstat_write_string@plt>
   20ed0:	.word	0x00006bda
   20ed4:	.word	0x00006bb6
   20ed8:	.word	0x00006cbc

00020edc <dta_emit_value_labels>:
   20edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ee0:	add	fp, sp, #28
   20ee4:	sub	sp, sp, #36	; 0x24
   20ee8:	mov	r7, r1
   20eec:	mov	r9, r0
   20ef0:	ldr	r0, [r1, #100]	; 0x64
   20ef4:	cmp	r0, #2
   20ef8:	bne	20f10 <dta_emit_value_labels+0x34>
   20efc:	mov	r0, r9
   20f00:	mov	r1, r7
   20f04:	sub	sp, fp, #28
   20f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f0c:	b	213b4 <dta_old_emit_value_labels>
   20f10:	ldrd	r0, [r7, #104]	; 0x68
   20f14:	add	r1, r1, r0
   20f18:	mov	r0, #1
   20f1c:	bl	47d0 <calloc@plt>
   20f20:	mov	r4, r0
   20f24:	ldr	r2, [pc, #1000]	; 21314 <dta_emit_value_labels+0x438>
   20f28:	add	r2, pc, r2
   20f2c:	mov	r0, r9
   20f30:	mov	r1, r7
   20f34:	bl	1fd68 <dta_write_tag>
   20f38:	mov	r8, r0
   20f3c:	cmp	r0, #0
   20f40:	bne	212cc <dta_emit_value_labels+0x3f0>
   20f44:	ldr	r0, [r9, #40]	; 0x28
   20f48:	cmp	r0, #1
   20f4c:	blt	21260 <dta_emit_value_labels+0x384>
   20f50:	mov	r6, #0
   20f54:	mov	r5, #0
   20f58:	mov	r0, #0
   20f5c:	str	r0, [sp, #20]
   20f60:	mov	r0, #0
   20f64:	str	r0, [sp, #16]
   20f68:	mov	r0, #0
   20f6c:	str	r0, [sp, #12]
   20f70:	str	r4, [sp]
   20f74:	str	r7, [sp, #8]
   20f78:	mov	r0, r9
   20f7c:	mov	r1, r5
   20f80:	bl	4ec0 <readstat_get_label_set@plt>
   20f84:	mov	sl, r0
   20f88:	ldr	r0, [r0, #264]	; 0x108
   20f8c:	str	r0, [sp, #32]
   20f90:	str	r6, [sp, #28]
   20f94:	cmp	r0, #1
   20f98:	blt	20fd0 <dta_emit_value_labels+0xf4>
   20f9c:	mov	r7, #0
   20fa0:	mov	r0, sl
   20fa4:	mov	r1, r7
   20fa8:	bl	4f68 <readstat_get_value_label@plt>
   20fac:	ldr	r0, [r0, #28]
   20fb0:	ldr	r1, [sp, #28]
   20fb4:	add	r0, r0, r1
   20fb8:	add	r0, r0, #1
   20fbc:	str	r0, [sp, #28]
   20fc0:	add	r7, r7, #1
   20fc4:	ldr	r0, [sp, #32]
   20fc8:	cmp	r7, r0
   20fcc:	blt	20fa0 <dta_emit_value_labels+0xc4>
   20fd0:	mov	r0, r9
   20fd4:	ldr	r7, [sp, #8]
   20fd8:	mov	r1, r7
   20fdc:	ldr	r2, [pc, #820]	; 21318 <dta_emit_value_labels+0x43c>
   20fe0:	add	r2, pc, r2
   20fe4:	bl	1fd68 <dta_write_tag>
   20fe8:	cmp	r0, #0
   20fec:	bne	21294 <dta_emit_value_labels+0x3b8>
   20ff0:	ldr	r0, [sp, #32]
   20ff4:	ldr	r1, [sp, #28]
   20ff8:	add	r0, r1, r0, lsl #3
   20ffc:	add	r0, r0, #8
   21000:	str	r0, [sp, #24]
   21004:	mov	r0, r9
   21008:	add	r1, sp, #24
   2100c:	mov	r2, #4
   21010:	bl	4ef0 <readstat_write_bytes@plt>
   21014:	cmp	r0, #0
   21018:	bne	21294 <dta_emit_value_labels+0x3b8>
   2101c:	ldr	r2, [r7, #104]	; 0x68
   21020:	add	r1, sl, #4
   21024:	mov	r0, r4
   21028:	bl	4d4c <strncpy@plt>
   2102c:	ldrd	r0, [r7, #104]	; 0x68
   21030:	add	r2, r1, r0
   21034:	mov	r0, r9
   21038:	mov	r1, r4
   2103c:	bl	4ef0 <readstat_write_bytes@plt>
   21040:	cmp	r0, #0
   21044:	bne	21294 <dta_emit_value_labels+0x3b8>
   21048:	str	r5, [sp, #4]
   2104c:	ldr	r0, [sp, #28]
   21050:	cmp	r0, #0
   21054:	beq	211e0 <dta_emit_value_labels+0x304>
   21058:	ldr	r0, [sp, #32]
   2105c:	lsl	r1, r0, #2
   21060:	ldr	r0, [sp, #20]
   21064:	bl	4a70 <realloc@plt>
   21068:	str	r0, [sp, #20]
   2106c:	ldr	r0, [sp, #32]
   21070:	lsl	r1, r0, #2
   21074:	ldr	r0, [sp, #16]
   21078:	bl	4a70 <realloc@plt>
   2107c:	mov	r8, r0
   21080:	ldr	r1, [sp, #28]
   21084:	ldr	r0, [sp, #12]
   21088:	bl	4a70 <realloc@plt>
   2108c:	mov	r6, r0
   21090:	mov	r0, sl
   21094:	ldr	r1, [pc, #644]	; 21320 <dta_emit_value_labels+0x444>
   21098:	add	r1, pc, r1
   2109c:	bl	4824 <readstat_sort_label_set@plt>
   210a0:	ldr	r0, [sp, #32]
   210a4:	cmp	r0, #1
   210a8:	str	r6, [sp, #12]
   210ac:	str	r8, [sp, #16]
   210b0:	blt	21138 <dta_emit_value_labels+0x25c>
   210b4:	mov	r5, #0
   210b8:	mov	r7, #0
   210bc:	mov	r0, sl
   210c0:	mov	r1, r7
   210c4:	bl	4f68 <readstat_get_value_label@plt>
   210c8:	ldr	r2, [r0, #24]
   210cc:	ldr	r4, [r0, #28]
   210d0:	ldr	r3, [sp, #20]
   210d4:	str	r5, [r3, r7, lsl #2]
   210d8:	ldrb	r1, [r0, #12]
   210dc:	cmp	r1, #0
   210e0:	beq	21100 <dta_emit_value_labels+0x224>
   210e4:	ldr	r0, [r9, #8]
   210e8:	cmp	r0, #113	; 0x71
   210ec:	blt	212e8 <dta_emit_value_labels+0x40c>
   210f0:	movw	r0, #65413	; 0xff85
   210f4:	movt	r0, #32767	; 0x7fff
   210f8:	add	r0, r1, r0
   210fc:	b	21104 <dta_emit_value_labels+0x228>
   21100:	ldr	r0, [r0, #8]
   21104:	str	r0, [r8, r7, lsl #2]
   21108:	add	r0, r6, r5
   2110c:	mov	r1, r2
   21110:	mov	r2, r4
   21114:	bl	4998 <memcpy@plt>
   21118:	add	r0, r4, r5
   2111c:	mov	r1, #0
   21120:	strb	r1, [r6, r0]
   21124:	add	r5, r0, #1
   21128:	add	r7, r7, #1
   2112c:	ldr	r0, [sp, #32]
   21130:	cmp	r7, r0
   21134:	blt	210bc <dta_emit_value_labels+0x1e0>
   21138:	mov	r0, r9
   2113c:	add	r1, sp, #32
   21140:	mov	r2, #4
   21144:	bl	4ef0 <readstat_write_bytes@plt>
   21148:	cmp	r0, #0
   2114c:	bne	212fc <dta_emit_value_labels+0x420>
   21150:	mov	r0, r9
   21154:	add	r1, sp, #28
   21158:	mov	r2, #4
   2115c:	bl	4ef0 <readstat_write_bytes@plt>
   21160:	cmp	r0, #0
   21164:	bne	212fc <dta_emit_value_labels+0x420>
   21168:	ldr	r0, [sp, #32]
   2116c:	lsl	r2, r0, #2
   21170:	mov	r0, r9
   21174:	ldr	r1, [sp, #20]
   21178:	bl	4ef0 <readstat_write_bytes@plt>
   2117c:	cmp	r0, #0
   21180:	ldr	r4, [sp]
   21184:	bne	21294 <dta_emit_value_labels+0x3b8>
   21188:	ldr	r0, [sp, #32]
   2118c:	lsl	r2, r0, #2
   21190:	mov	r0, r9
   21194:	ldr	r1, [sp, #16]
   21198:	bl	4ef0 <readstat_write_bytes@plt>
   2119c:	cmp	r0, #0
   211a0:	bne	21294 <dta_emit_value_labels+0x3b8>
   211a4:	ldr	r2, [sp, #28]
   211a8:	mov	r0, r9
   211ac:	ldr	r1, [sp, #12]
   211b0:	bl	4ef0 <readstat_write_bytes@plt>
   211b4:	cmp	r0, #0
   211b8:	bne	21294 <dta_emit_value_labels+0x3b8>
   211bc:	mov	r0, r9
   211c0:	ldr	r7, [sp, #8]
   211c4:	mov	r1, r7
   211c8:	ldr	r2, [pc, #340]	; 21324 <dta_emit_value_labels+0x448>
   211cc:	add	r2, pc, r2
   211d0:	bl	1fd68 <dta_write_tag>
   211d4:	mov	r8, r0
   211d8:	mov	r0, #0
   211dc:	b	21230 <dta_emit_value_labels+0x354>
   211e0:	mov	r0, r9
   211e4:	add	r5, sp, #28
   211e8:	mov	r1, r5
   211ec:	mov	r2, #4
   211f0:	bl	4ef0 <readstat_write_bytes@plt>
   211f4:	cmp	r0, #0
   211f8:	bne	21294 <dta_emit_value_labels+0x3b8>
   211fc:	mov	r0, r9
   21200:	mov	r1, r5
   21204:	mov	r2, #4
   21208:	bl	4ef0 <readstat_write_bytes@plt>
   2120c:	cmp	r0, #0
   21210:	bne	21294 <dta_emit_value_labels+0x3b8>
   21214:	mov	r0, r9
   21218:	mov	r1, r7
   2121c:	ldr	r2, [pc, #248]	; 2131c <dta_emit_value_labels+0x440>
   21220:	add	r2, pc, r2
   21224:	bl	1fd68 <dta_write_tag>
   21228:	mov	r8, r0
   2122c:	mov	r0, #5
   21230:	cmp	r8, #0
   21234:	movne	r0, #2
   21238:	cmp	r0, #0
   2123c:	ldr	r5, [sp, #4]
   21240:	cmpne	r0, #5
   21244:	bne	21308 <dta_emit_value_labels+0x42c>
   21248:	ldr	r0, [r9, #40]	; 0x28
   2124c:	add	r5, r5, #1
   21250:	cmp	r5, r0
   21254:	mov	r6, #0
   21258:	blt	20f78 <dta_emit_value_labels+0x9c>
   2125c:	b	21278 <dta_emit_value_labels+0x39c>
   21260:	mov	r0, #0
   21264:	str	r0, [sp, #12]
   21268:	mov	r0, #0
   2126c:	str	r0, [sp, #16]
   21270:	mov	r0, #0
   21274:	str	r0, [sp, #20]
   21278:	ldr	r2, [pc, #168]	; 21328 <dta_emit_value_labels+0x44c>
   2127c:	add	r2, pc, r2
   21280:	mov	r0, r9
   21284:	mov	r1, r7
   21288:	bl	1fd68 <dta_write_tag>
   2128c:	mov	r8, r0
   21290:	b	21298 <dta_emit_value_labels+0x3bc>
   21294:	mov	r8, r0
   21298:	ldr	r3, [sp, #20]
   2129c:	cmp	r3, #0
   212a0:	beq	212ac <dta_emit_value_labels+0x3d0>
   212a4:	mov	r0, r3
   212a8:	bl	4938 <free@plt>
   212ac:	ldr	r0, [sp, #16]
   212b0:	cmp	r0, #0
   212b4:	beq	212bc <dta_emit_value_labels+0x3e0>
   212b8:	bl	4938 <free@plt>
   212bc:	ldr	r0, [sp, #12]
   212c0:	cmp	r0, #0
   212c4:	beq	212cc <dta_emit_value_labels+0x3f0>
   212c8:	bl	4938 <free@plt>
   212cc:	cmp	r4, #0
   212d0:	beq	212dc <dta_emit_value_labels+0x400>
   212d4:	mov	r0, r4
   212d8:	bl	4938 <free@plt>
   212dc:	mov	r0, r8
   212e0:	sub	sp, fp, #28
   212e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   212e8:	mov	r8, #23
   212ec:	ldr	r4, [sp]
   212f0:	cmp	r3, #0
   212f4:	bne	212a4 <dta_emit_value_labels+0x3c8>
   212f8:	b	212ac <dta_emit_value_labels+0x3d0>
   212fc:	mov	r8, r0
   21300:	ldr	r4, [sp]
   21304:	b	21298 <dta_emit_value_labels+0x3bc>
   21308:	cmp	r0, #2
   2130c:	beq	21298 <dta_emit_value_labels+0x3bc>
   21310:	b	212dc <dta_emit_value_labels+0x400>
   21314:	.word	0x00006b1e
   21318:	.word	0x00006a75
   2131c:	.word	0x0000683b
   21320:	.word	0x000004fc
   21324:	.word	0x0000688f
   21328:	.word	0x00006909

0002132c <dta_118_emit_strl_header>:
   2132c:	push	{fp, lr}
   21330:	mov	fp, sp
   21334:	sub	sp, sp, #24
   21338:	ldr	r2, [r1]
   2133c:	str	r2, [sp, #4]
   21340:	ldr	ip, [r1, #8]
   21344:	ldr	r3, [r1, #12]
   21348:	ldr	r1, [r1, #16]
   2134c:	mov	r2, #130	; 0x82
   21350:	strb	r2, [sp, #16]
   21354:	str	r3, [sp, #12]
   21358:	str	ip, [sp, #8]
   2135c:	str	r1, [sp, #17]
   21360:	add	r1, sp, #4
   21364:	mov	r2, #17
   21368:	bl	4ef0 <readstat_write_bytes@plt>
   2136c:	mov	sp, fp
   21370:	pop	{fp, pc}

00021374 <dta_117_emit_strl_header>:
   21374:	push	{fp, lr}
   21378:	mov	fp, sp
   2137c:	sub	sp, sp, #16
   21380:	ldr	r2, [r1]
   21384:	str	r2, [sp]
   21388:	ldr	r2, [r1, #8]
   2138c:	mov	r3, #130	; 0x82
   21390:	strb	r3, [sp, #8]
   21394:	str	r2, [sp, #4]
   21398:	ldr	r1, [r1, #16]
   2139c:	str	r1, [sp, #9]
   213a0:	mov	r1, sp
   213a4:	mov	r2, #13
   213a8:	bl	4ef0 <readstat_write_bytes@plt>
   213ac:	mov	sp, fp
   213b0:	pop	{fp, pc}

000213b4 <dta_old_emit_value_labels>:
   213b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   213b8:	add	fp, sp, #28
   213bc:	sub	sp, sp, #28
   213c0:	str	r1, [sp]
   213c4:	mov	r7, r0
   213c8:	ldr	r0, [r0, #40]	; 0x28
   213cc:	cmp	r0, #1
   213d0:	blt	21554 <dta_old_emit_value_labels+0x1a0>
   213d4:	mov	sl, #8
   213d8:	mov	r9, #0
   213dc:	mov	r4, #0
   213e0:	mov	r8, r7
   213e4:	mov	r0, r7
   213e8:	mov	r1, r9
   213ec:	bl	4ec0 <readstat_get_label_set@plt>
   213f0:	mov	r5, r0
   213f4:	ldr	r0, [r0, #264]	; 0x108
   213f8:	cmp	r0, #1
   213fc:	mov	r7, #0
   21400:	blt	21448 <dta_old_emit_value_labels+0x94>
   21404:	mov	r7, #0
   21408:	mov	r6, #0
   2140c:	mov	r0, r5
   21410:	mov	r1, r6
   21414:	bl	4f68 <readstat_get_value_label@plt>
   21418:	ldrb	r1, [r0, #12]
   2141c:	cmp	r1, #0
   21420:	bne	2155c <dta_old_emit_value_labels+0x1a8>
   21424:	ldr	r0, [r0, #8]
   21428:	cmp	r0, #1024	; 0x400
   2142c:	bhi	2157c <dta_old_emit_value_labels+0x1c8>
   21430:	cmp	r0, r7
   21434:	movgt	r7, r0
   21438:	add	r6, r6, #1
   2143c:	ldr	r0, [r5, #264]	; 0x108
   21440:	cmp	r6, r0
   21444:	blt	2140c <dta_old_emit_value_labels+0x58>
   21448:	add	r0, sl, r7, lsl #3
   2144c:	strh	r0, [sp, #6]
   21450:	mov	r7, r8
   21454:	mov	r0, r8
   21458:	add	r1, sp, #6
   2145c:	mov	r2, #2
   21460:	bl	4ef0 <readstat_write_bytes@plt>
   21464:	cmp	r0, #0
   21468:	bne	2158c <dta_old_emit_value_labels+0x1d8>
   2146c:	mov	r0, #0
   21470:	str	r0, [sp, #12]
   21474:	str	r0, [sp, #8]
   21478:	str	r0, [sp, #18]
   2147c:	str	r0, [sp, #14]
   21480:	ldr	r6, [sp]
   21484:	ldr	r2, [r6, #104]	; 0x68
   21488:	add	r1, r5, #4
   2148c:	add	r8, sp, #8
   21490:	mov	r0, r8
   21494:	bl	4d4c <strncpy@plt>
   21498:	ldrd	r0, [r6, #104]	; 0x68
   2149c:	add	r2, r1, r0
   214a0:	mov	r0, r7
   214a4:	mov	r1, r8
   214a8:	bl	4ef0 <readstat_write_bytes@plt>
   214ac:	cmp	r0, #0
   214b0:	bne	2158c <dta_old_emit_value_labels+0x1d8>
   214b4:	ldrsh	r1, [sp, #6]
   214b8:	mov	r0, r4
   214bc:	bl	4a70 <realloc@plt>
   214c0:	mov	r4, r0
   214c4:	ldrsh	r2, [sp, #6]
   214c8:	mov	r1, #0
   214cc:	bl	4d28 <memset@plt>
   214d0:	ldr	r0, [r5, #264]	; 0x108
   214d4:	cmp	r0, #1
   214d8:	blt	2151c <dta_old_emit_value_labels+0x168>
   214dc:	mov	r6, #0
   214e0:	mov	r0, r5
   214e4:	mov	r1, r6
   214e8:	bl	4f68 <readstat_get_value_label@plt>
   214ec:	ldr	r1, [r0, #8]
   214f0:	ldrd	r2, [r0, #24]
   214f4:	add	r0, r4, r1, lsl #3
   214f8:	cmp	r3, #8
   214fc:	movcs	r3, sl
   21500:	mov	r1, r2
   21504:	mov	r2, r3
   21508:	bl	4998 <memcpy@plt>
   2150c:	add	r6, r6, #1
   21510:	ldr	r0, [r5, #264]	; 0x108
   21514:	cmp	r6, r0
   21518:	blt	214e0 <dta_old_emit_value_labels+0x12c>
   2151c:	ldrsh	r2, [sp, #6]
   21520:	mov	r0, r7
   21524:	mov	r1, r4
   21528:	bl	4ef0 <readstat_write_bytes@plt>
   2152c:	cmp	r0, #0
   21530:	bne	2158c <dta_old_emit_value_labels+0x1d8>
   21534:	add	r9, r9, #1
   21538:	ldr	r0, [r7, #40]	; 0x28
   2153c:	cmp	r9, r0
   21540:	blt	213e0 <dta_old_emit_value_labels+0x2c>
   21544:	mov	r8, #0
   21548:	cmp	r4, #0
   2154c:	bne	21568 <dta_old_emit_value_labels+0x1b4>
   21550:	b	21570 <dta_old_emit_value_labels+0x1bc>
   21554:	mov	r8, #0
   21558:	b	21570 <dta_old_emit_value_labels+0x1bc>
   2155c:	mov	r8, #23
   21560:	cmp	r4, #0
   21564:	beq	21570 <dta_old_emit_value_labels+0x1bc>
   21568:	mov	r0, r4
   2156c:	bl	4938 <free@plt>
   21570:	mov	r0, r8
   21574:	sub	sp, fp, #28
   21578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2157c:	mov	r8, #20
   21580:	cmp	r4, #0
   21584:	bne	21568 <dta_old_emit_value_labels+0x1b4>
   21588:	b	21570 <dta_old_emit_value_labels+0x1bc>
   2158c:	mov	r8, r0
   21590:	cmp	r4, #0
   21594:	bne	21568 <dta_old_emit_value_labels+0x1b4>
   21598:	b	21570 <dta_old_emit_value_labels+0x1bc>

0002159c <dta_compare_value_labels>:
   2159c:	mov	r2, r0
   215a0:	ldrb	r3, [r1, #12]
   215a4:	ldrb	r0, [r0, #12]
   215a8:	cmp	r0, #0
   215ac:	beq	215c0 <dta_compare_value_labels+0x24>
   215b0:	cmp	r3, #0
   215b4:	moveq	r0, #1
   215b8:	subne	r0, r0, r3
   215bc:	bx	lr
   215c0:	mvn	r0, #0
   215c4:	cmp	r3, #0
   215c8:	ldreq	r0, [r1, #8]
   215cc:	ldreq	r1, [r2, #8]
   215d0:	subeq	r0, r1, r0
   215d4:	bx	lr

000215d8 <submit_value_label>:
   215d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   215dc:	add	fp, sp, #28
   215e0:	sub	sp, sp, #20
   215e4:	mov	r8, r1
   215e8:	ldr	r1, [r0, #20]
   215ec:	cmp	r1, #0
   215f0:	beq	21724 <submit_value_label+0x14c>
   215f4:	mov	r5, r0
   215f8:	ldr	r9, [fp, #28]
   215fc:	add	r0, r2, #1
   21600:	cmp	r0, #4
   21604:	bhi	21640 <submit_value_label+0x68>
   21608:	add	r2, pc, #4
   2160c:	ldr	r0, [r2, r0, lsl #2]
   21610:	add	pc, r2, r0
   21614:	.word	0x00000014
   21618:	.word	0x0000003c
   2161c:	.word	0x0000004c
   21620:	.word	0x00000090
   21624:	.word	0x00000110
   21628:	mov	r0, #0
   2162c:	mov	r7, #5
   21630:	movw	r3, #0
   21634:	movt	r3, #32760	; 0x7ff8
   21638:	mov	r2, #0
   2163c:	b	21670 <submit_value_label+0x98>
   21640:	mov	r0, #0
   21644:	mov	r3, #0
   21648:	mov	r2, #0
   2164c:	b	2166c <submit_value_label+0x94>
   21650:	vmov	r2, r3, d0
   21654:	mov	r0, #0
   21658:	mov	r7, #5
   2165c:	b	21670 <submit_value_label+0x98>
   21660:	ldr	r2, [fp, #24]
   21664:	mov	r0, #0
   21668:	mov	r3, #0
   2166c:	mov	r7, #0
   21670:	str	r7, [sp]
   21674:	stmib	sp, {r0, r9}
   21678:	ldr	r7, [fp, #32]
   2167c:	str	r7, [sp, #12]
   21680:	orr	r2, r0, r2
   21684:	mov	r0, r8
   21688:	blx	r1
   2168c:	mov	r1, r0
   21690:	mov	r0, #4
   21694:	cmp	r1, #0
   21698:	moveq	r0, #0
   2169c:	sub	sp, fp, #28
   216a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   216a4:	ldr	r1, [fp, #20]
   216a8:	ldr	r0, [fp, #16]
   216ac:	ldr	r6, [fp, #12]
   216b0:	ldr	r7, [fp, #8]
   216b4:	subs	r0, r0, r7
   216b8:	sbcs	r0, r1, r6
   216bc:	blt	21724 <submit_value_label+0x14c>
   216c0:	mov	r0, r7
   216c4:	mov	r1, r6
   216c8:	bl	24c28 <__aeabi_l2d>
   216cc:	mov	r2, r0
   216d0:	ldr	r4, [r5, #20]
   216d4:	bfc	sl, #0, #10
   216d8:	mov	r0, #5
   216dc:	stm	sp, {r0, sl}
   216e0:	str	r9, [sp, #8]
   216e4:	ldr	r0, [fp, #32]
   216e8:	str	r0, [sp, #12]
   216ec:	mov	r0, r8
   216f0:	mov	r3, r1
   216f4:	blx	r4
   216f8:	cmp	r0, #0
   216fc:	bne	21730 <submit_value_label+0x158>
   21700:	adds	r0, r7, #1
   21704:	adc	r1, r6, #0
   21708:	ldr	r2, [fp, #16]
   2170c:	subs	r2, r7, r2
   21710:	ldr	r2, [fp, #20]
   21714:	sbcs	r2, r6, r2
   21718:	mov	r7, r0
   2171c:	mov	r6, r1
   21720:	blt	216c0 <submit_value_label+0xe8>
   21724:	mov	r0, #0
   21728:	sub	sp, fp, #28
   2172c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21730:	mov	r0, #4
   21734:	sub	sp, fp, #28
   21738:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002173c <submit_columns>:
   2173c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21740:	add	fp, sp, #28
   21744:	push	{r2}		; (str r2, [sp, #-4]!)
   21748:	mov	r5, r1
   2174c:	mov	sl, r0
   21750:	ldr	r0, [r1, #268]	; 0x10c
   21754:	cmp	r0, #1
   21758:	blt	2178c <submit_columns+0x50>
   2175c:	ldr	r0, [r5, #268]	; 0x10c
   21760:	ldr	r1, [r5, #276]	; 0x114
   21764:	mov	r2, #0
   21768:	ldr	r3, [r1]
   2176c:	ldr	r7, [r5, #256]	; 0x100
   21770:	cmp	r7, r3
   21774:	addle	r3, r3, #1
   21778:	strle	r3, [r5, #256]	; 0x100
   2177c:	add	r1, r1, #2208	; 0x8a0
   21780:	add	r2, r2, #1
   21784:	cmp	r2, r0
   21788:	blt	21768 <submit_columns+0x2c>
   2178c:	ldr	r1, [sl, #8]
   21790:	mov	r0, #0
   21794:	cmp	r1, #0
   21798:	beq	21830 <submit_columns+0xf4>
   2179c:	ldr	r1, [r5, #268]	; 0x10c
   217a0:	cmp	r1, #1
   217a4:	blt	21830 <submit_columns+0xf4>
   217a8:	mov	r4, #0
   217ac:	mov	r7, #0
   217b0:	mov	r8, #0
   217b4:	ldr	r0, [r5, #276]	; 0x114
   217b8:	add	r9, r0, r4
   217bc:	mov	r1, r9
   217c0:	ldr	r0, [r1, #16]!
   217c4:	str	r8, [r1, #2148]	; 0x864
   217c8:	str	r7, [r1, #4]
   217cc:	cmp	r0, #0
   217d0:	ldreq	r0, [r9, #8]
   217d4:	streq	r0, [r9, #1612]	; 0x64c
   217d8:	mov	r2, r9
   217dc:	ldrb	r0, [r2, #2168]!	; 0x878
   217e0:	cmp	r0, #0
   217e4:	moveq	r2, r0
   217e8:	ldr	r6, [sl, #8]
   217ec:	mov	r0, r7
   217f0:	ldr	r3, [sp]
   217f4:	blx	r6
   217f8:	cmp	r0, #2
   217fc:	beq	21810 <submit_columns+0xd4>
   21800:	cmp	r0, #1
   21804:	beq	21838 <submit_columns+0xfc>
   21808:	add	r8, r8, #1
   2180c:	b	21818 <submit_columns+0xdc>
   21810:	mov	r0, #1
   21814:	str	r0, [r9, #12]
   21818:	add	r4, r4, #2208	; 0x8a0
   2181c:	add	r7, r7, #1
   21820:	ldr	r0, [r5, #268]	; 0x10c
   21824:	cmp	r7, r0
   21828:	blt	217b4 <submit_columns+0x78>
   2182c:	mov	r0, #0
   21830:	sub	sp, fp, #28
   21834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21838:	mov	r0, #4
   2183c:	sub	sp, fp, #28
   21840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00021844 <readstat_copy>:
   21844:	push	{r4, r5, fp, lr}
   21848:	add	fp, sp, #8
   2184c:	mov	r4, r3
   21850:	mov	r5, r0
   21854:	cmp	r3, r1
   21858:	subcs	r4, r1, #1
   2185c:	mov	r1, r2
   21860:	mov	r2, r4
   21864:	bl	4998 <memcpy@plt>
   21868:	mov	r0, #0
   2186c:	strb	r0, [r5, r4]
   21870:	pop	{r4, r5, fp, pc}

00021874 <readstat_copy_lower>:
   21874:	push	{r4, r5, r6, r7, fp, lr}
   21878:	add	fp, sp, #16
   2187c:	mov	r4, r1
   21880:	mov	r5, r0
   21884:	bl	48e4 <readstat_copy@plt>
   21888:	cmp	r4, #0
   2188c:	beq	218bc <readstat_copy_lower+0x48>
   21890:	mov	r6, #0
   21894:	ldrb	r7, [r5, r6]
   21898:	cmp	r7, #0
   2189c:	popeq	{r4, r5, r6, r7, fp, pc}
   218a0:	bl	4bfc <__ctype_tolower_loc@plt>
   218a4:	ldr	r0, [r0]
   218a8:	ldr	r0, [r0, r7, lsl #2]
   218ac:	strb	r0, [r5, r6]
   218b0:	add	r6, r6, #1
   218b4:	cmp	r6, r4
   218b8:	bcc	21894 <readstat_copy_lower+0x20>
   218bc:	pop	{r4, r5, r6, r7, fp, pc}

000218c0 <readstat_copy_quoted>:
   218c0:	push	{r4, sl, fp, lr}
   218c4:	add	fp, sp, #8
   218c8:	cmp	r3, r1
   218cc:	subcs	r3, r1, #1
   218d0:	mov	ip, #0
   218d4:	cmp	r3, #0
   218d8:	mov	lr, #0
   218dc:	beq	21924 <readstat_copy_quoted+0x64>
   218e0:	mov	r1, #0
   218e4:	mov	lr, #0
   218e8:	ldrb	r4, [r2]
   218ec:	cmp	r1, #0
   218f0:	bne	21904 <readstat_copy_quoted+0x44>
   218f4:	mov	r1, #1
   218f8:	cmp	r4, #92	; 0x5c
   218fc:	bne	2190c <readstat_copy_quoted+0x4c>
   21900:	b	21918 <readstat_copy_quoted+0x58>
   21904:	cmp	r4, #116	; 0x74
   21908:	movweq	r4, #9
   2190c:	strb	r4, [r0, lr]
   21910:	add	lr, lr, #1
   21914:	mov	r1, #0
   21918:	subs	r3, r3, #1
   2191c:	add	r2, r2, #1
   21920:	bne	218e8 <readstat_copy_quoted+0x28>
   21924:	strb	ip, [r0, lr]
   21928:	pop	{r4, sl, fp, pc}
   2192c:	andeq	r0, r0, r0

00021930 <readstat_parse_sas_commands>:
   21930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21934:	add	fp, sp, #28
   21938:	sub	sp, sp, #4
   2193c:	vpush	{d8}
   21940:	sub	sp, sp, #2288	; 0x8f0
   21944:	mov	r8, r3
   21948:	str	r2, [sp, #48]	; 0x30
   2194c:	mov	r2, r1
   21950:	mov	r7, r0
   21954:	ldr	r0, [r0, #32]
   21958:	ldr	r3, [r0]
   2195c:	ldr	r1, [r0, #20]
   21960:	mov	r0, r2
   21964:	blx	r3
   21968:	cmn	r0, #1
   2196c:	beq	22014 <readstat_parse_sas_commands+0x6e4>
   21970:	ldr	r0, [r7, #32]
   21974:	ldr	r3, [r0, #8]
   21978:	ldr	r2, [r0, #20]
   2197c:	mov	r9, #0
   21980:	mov	r0, #0
   21984:	mov	r1, #2
   21988:	blx	r3
   2198c:	cmn	r0, #1
   21990:	beq	22028 <readstat_parse_sas_commands+0x6f8>
   21994:	mov	r4, r0
   21998:	ldr	r0, [r7, #32]
   2199c:	ldr	r3, [r0, #8]
   219a0:	ldr	r2, [r0, #20]
   219a4:	mov	r0, #0
   219a8:	mov	r1, #0
   219ac:	blx	r3
   219b0:	mov	r0, r4
   219b4:	bl	4b9c <malloc@plt>
   219b8:	mov	r9, r0
   219bc:	ldr	r0, [r7, #32]
   219c0:	ldr	r3, [r0, #12]
   219c4:	ldr	r2, [r0, #20]
   219c8:	mov	r0, r9
   219cc:	mov	r1, r4
   219d0:	blx	r3
   219d4:	mov	r5, #1
   219d8:	mov	r0, #1
   219dc:	mov	r1, #280	; 0x118
   219e0:	bl	47d0 <calloc@plt>
   219e4:	mov	r6, r0
   219e8:	cmp	r0, #0
   219ec:	beq	22034 <readstat_parse_sas_commands+0x704>
   219f0:	add	r0, r9, r4
   219f4:	str	r0, [sp, #68]	; 0x44
   219f8:	str	r5, [r6, #256]	; 0x100
   219fc:	cmp	r4, #0
   21a00:	str	r6, [sp, #76]	; 0x4c
   21a04:	beq	2203c <readstat_parse_sas_commands+0x70c>
   21a08:	str	r7, [sp, #36]	; 0x24
   21a0c:	str	r8, [sp, #32]
   21a10:	mov	r0, #0
   21a14:	str	r0, [sp, #88]	; 0x58
   21a18:	vldr	d8, [pc, #1016]	; 21e18 <readstat_parse_sas_commands+0x4e8>
   21a1c:	mov	r0, #5
   21a20:	str	r0, [sp, #64]	; 0x40
   21a24:	movw	lr, #1094	; 0x446
   21a28:	mov	r0, #0
   21a2c:	str	r0, [sp, #44]	; 0x2c
   21a30:	mov	r0, #0
   21a34:	str	r0, [sp, #40]	; 0x28
   21a38:	mov	r0, #0
   21a3c:	str	r0, [sp, #100]	; 0x64
   21a40:	mov	r0, #0
   21a44:	str	r0, [sp, #92]	; 0x5c
   21a48:	mov	r1, #0
   21a4c:	str	r1, [sp, #52]	; 0x34
   21a50:	mov	r5, r9
   21a54:	mov	r0, #0
   21a58:	str	r0, [sp, #84]	; 0x54
   21a5c:	mov	r0, #0
   21a60:	str	r0, [sp, #56]	; 0x38
   21a64:	mov	r0, #0
   21a68:	str	r0, [sp, #60]	; 0x3c
   21a6c:	mov	r0, #0
   21a70:	str	r0, [sp, #72]	; 0x48
   21a74:	mov	r0, #0
   21a78:	str	r0, [sp, #96]	; 0x60
   21a7c:	str	r9, [sp, #28]
   21a80:	mov	sl, r9
   21a84:	ldr	r1, [pc, #1840]	; 221bc <readstat_parse_sas_commands+0x88c>
   21a88:	add	r1, pc, r1
   21a8c:	ldrb	r2, [r1, lr]
   21a90:	ldr	r1, [pc, #1832]	; 221c0 <readstat_parse_sas_commands+0x890>
   21a94:	add	r1, pc, r1
   21a98:	add	r1, r1, lr, lsl #1
   21a9c:	ldrsh	r1, [r1]
   21aa0:	ldr	r3, [pc, #1820]	; 221c4 <readstat_parse_sas_commands+0x894>
   21aa4:	add	r3, pc, r3
   21aa8:	add	r6, r3, r1
   21aac:	ldr	r1, [pc, #1812]	; 221c8 <readstat_parse_sas_commands+0x898>
   21ab0:	add	r1, pc, r1
   21ab4:	add	r1, r1, lr, lsl #1
   21ab8:	ldrsh	r8, [r1]
   21abc:	cmp	r2, #0
   21ac0:	str	r5, [sp, #80]	; 0x50
   21ac4:	beq	21b28 <readstat_parse_sas_commands+0x1f8>
   21ac8:	add	ip, r6, r2
   21acc:	sub	r5, ip, #1
   21ad0:	cmp	r5, r6
   21ad4:	mvn	r0, #1
   21ad8:	ldr	r9, [pc, #1776]	; 221d0 <readstat_parse_sas_commands+0x8a0>
   21adc:	add	r9, pc, r9
   21ae0:	bcc	21b20 <readstat_parse_sas_commands+0x1f0>
   21ae4:	ldrb	r4, [sl]
   21ae8:	mov	r3, r6
   21aec:	sub	r7, r5, r3
   21af0:	mov	r1, r3
   21af4:	ldrb	r7, [r1, r7, asr #1]!
   21af8:	cmp	r4, r7
   21afc:	bcs	21b10 <readstat_parse_sas_commands+0x1e0>
   21b00:	sub	r5, r1, #1
   21b04:	cmp	r5, r3
   21b08:	bcs	21aec <readstat_parse_sas_commands+0x1bc>
   21b0c:	b	21b20 <readstat_parse_sas_commands+0x1f0>
   21b10:	bls	21ba8 <readstat_parse_sas_commands+0x278>
   21b14:	add	r3, r1, #1
   21b18:	cmp	r5, r3
   21b1c:	bcs	21aec <readstat_parse_sas_commands+0x1bc>
   21b20:	add	r8, r2, r8
   21b24:	b	21b38 <readstat_parse_sas_commands+0x208>
   21b28:	mov	ip, r6
   21b2c:	mvn	r0, #1
   21b30:	ldr	r9, [pc, #1684]	; 221cc <readstat_parse_sas_commands+0x89c>
   21b34:	add	r9, pc, r9
   21b38:	ldr	r1, [pc, #1684]	; 221d4 <readstat_parse_sas_commands+0x8a4>
   21b3c:	add	r1, pc, r1
   21b40:	ldrb	r4, [r1, lr]
   21b44:	cmp	r4, #0
   21b48:	beq	21bc0 <readstat_parse_sas_commands+0x290>
   21b4c:	add	r1, ip, r4, lsl #1
   21b50:	sub	r2, r1, #2
   21b54:	cmp	r2, ip
   21b58:	bcc	21bbc <readstat_parse_sas_commands+0x28c>
   21b5c:	ldrb	r3, [sl]
   21b60:	mov	r7, ip
   21b64:	sub	r1, r2, r7
   21b68:	and	r6, r0, r1, asr #1
   21b6c:	mov	r1, r7
   21b70:	ldrb	r6, [r1, r6]!
   21b74:	cmp	r3, r6
   21b78:	bcs	21b8c <readstat_parse_sas_commands+0x25c>
   21b7c:	sub	r2, r1, #2
   21b80:	cmp	r2, r7
   21b84:	bcs	21b64 <readstat_parse_sas_commands+0x234>
   21b88:	b	21bbc <readstat_parse_sas_commands+0x28c>
   21b8c:	ldrb	r7, [r1, #1]
   21b90:	cmp	r3, r7
   21b94:	bls	21bb4 <readstat_parse_sas_commands+0x284>
   21b98:	add	r7, r1, #2
   21b9c:	cmp	r2, r7
   21ba0:	bcs	21b64 <readstat_parse_sas_commands+0x234>
   21ba4:	b	21bbc <readstat_parse_sas_commands+0x28c>
   21ba8:	sub	r0, r8, r6
   21bac:	add	r8, r0, r1
   21bb0:	b	21bc0 <readstat_parse_sas_commands+0x290>
   21bb4:	sub	r0, r1, ip
   21bb8:	asr	r4, r0, #1
   21bbc:	add	r8, r4, r8
   21bc0:	ldr	r0, [pc, #1552]	; 221d8 <readstat_parse_sas_commands+0x8a8>
   21bc4:	add	r0, pc, r0
   21bc8:	ldrb	r0, [r0, r8]
   21bcc:	cmp	r0, #0
   21bd0:	ldrbne	r1, [r9, r0]
   21bd4:	cmpne	r1, #0
   21bd8:	beq	21fd4 <readstat_parse_sas_commands+0x6a4>
   21bdc:	add	r0, r9, r0
   21be0:	add	r4, r0, #1
   21be4:	rsb	r9, r1, #0
   21be8:	ldrb	r0, [r4]
   21bec:	cmp	r0, #34	; 0x22
   21bf0:	bhi	21fc8 <readstat_parse_sas_commands+0x698>
   21bf4:	add	r1, pc, #4
   21bf8:	ldr	r0, [r1, r0, lsl #2]
   21bfc:	add	pc, r1, r0
   21c00:	.word	0x0000012c
   21c04:	.word	0x0000013c
   21c08:	.word	0x0000016c
   21c0c:	.word	0x00000198
   21c10:	.word	0x000001b0
   21c14:	.word	0x000001c4
   21c18:	.word	0x000001d0
   21c1c:	.word	0x000001dc
   21c20:	.word	0x000001ec
   21c24:	.word	0x000001f4
   21c28:	.word	0x000001fc
   21c2c:	.word	0x000000b0
   21c30:	.word	0x00000220
   21c34:	.word	0x00000278
   21c38:	.word	0x000000c8
   21c3c:	.word	0x000002a8
   21c40:	.word	0x000000d8
   21c44:	.word	0x000002d0
   21c48:	.word	0x0000009c
   21c4c:	.word	0x0000008c
   21c50:	.word	0x0000009c
   21c54:	.word	0x0000008c
   21c58:	.word	0x0000032c
   21c5c:	.word	0x0000009c
   21c60:	.word	0x0000008c
   21c64:	.word	0x00000340
   21c68:	.word	0x00000354
   21c6c:	.word	0x00000100
   21c70:	.word	0x00000370
   21c74:	.word	0x000000a4
   21c78:	.word	0x000000a4
   21c7c:	.word	0x0000037c
   21c80:	.word	0x00000388
   21c84:	.word	0x00000114
   21c88:	.word	0x00000120
   21c8c:	ldr	r0, [sp, #96]	; 0x60
   21c90:	sub	r0, sl, r0
   21c94:	str	r0, [sp, #88]	; 0x58
   21c98:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21c9c:	str	sl, [sp, #96]	; 0x60
   21ca0:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21ca4:	mov	r0, #1
   21ca8:	str	r0, [sp, #84]	; 0x54
   21cac:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21cb0:	sub	r0, fp, #76	; 0x4c
   21cb4:	mov	r1, #32
   21cb8:	ldr	r2, [sp, #96]	; 0x60
   21cbc:	ldr	r3, [sp, #88]	; 0x58
   21cc0:	bl	4e78 <readstat_copy_lower@plt>
   21cc4:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21cc8:	sub	r1, fp, #76	; 0x4c
   21ccc:	ldr	r0, [sp, #76]	; 0x4c
   21cd0:	bl	4b54 <readstat_schema_find_or_create_entry@plt>
   21cd4:	b	21e9c <readstat_parse_sas_commands+0x56c>
   21cd8:	sub	r1, fp, #76	; 0x4c
   21cdc:	ldr	r0, [sp, #76]	; 0x4c
   21ce0:	bl	4b54 <readstat_schema_find_or_create_entry@plt>
   21ce4:	movw	r1, #2168	; 0x878
   21ce8:	add	r0, r0, r1
   21cec:	sub	r2, fp, #140	; 0x8c
   21cf0:	mov	r1, #32
   21cf4:	mov	r3, #32
   21cf8:	bl	48e4 <readstat_copy@plt>
   21cfc:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21d00:	ldr	r0, [sp, #100]	; 0x64
   21d04:	str	r0, [sp, #44]	; 0x2c
   21d08:	ldr	r0, [sp, #92]	; 0x5c
   21d0c:	str	r0, [sp, #40]	; 0x28
   21d10:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21d14:	ldr	r0, [sp, #100]	; 0x64
   21d18:	sub	r0, r0, #1
   21d1c:	b	21d24 <readstat_parse_sas_commands+0x3f4>
   21d20:	mov	r0, #0
   21d24:	str	r0, [sp, #56]	; 0x38
   21d28:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21d2c:	mov	r0, #0
   21d30:	str	r0, [sp, #100]	; 0x64
   21d34:	mov	r0, #0
   21d38:	b	21fc4 <readstat_parse_sas_commands+0x694>
   21d3c:	mov	r0, #10
   21d40:	ldr	r1, [sp, #100]	; 0x64
   21d44:	umull	r0, r1, r1, r0
   21d48:	ldr	r2, [sp, #92]	; 0x5c
   21d4c:	add	r2, r2, r2, lsl #2
   21d50:	add	r1, r1, r2, lsl #1
   21d54:	ldrb	r2, [sl]
   21d58:	sub	r2, r2, #48	; 0x30
   21d5c:	adds	r0, r0, r2
   21d60:	str	r0, [sp, #100]	; 0x64
   21d64:	adc	r0, r1, r2, asr #31
   21d68:	b	21fc4 <readstat_parse_sas_commands+0x694>
   21d6c:	ldrb	r1, [sl]
   21d70:	sub	r0, r1, #48	; 0x30
   21d74:	uxtb	r2, r0
   21d78:	cmp	r2, #9
   21d7c:	bls	21fa8 <readstat_parse_sas_commands+0x678>
   21d80:	sub	r0, r1, #65	; 0x41
   21d84:	uxtb	r0, r0
   21d88:	cmp	r0, #5
   21d8c:	bhi	21f94 <readstat_parse_sas_commands+0x664>
   21d90:	sub	r0, r1, #55	; 0x37
   21d94:	b	21fa8 <readstat_parse_sas_commands+0x678>
   21d98:	ldr	r0, [sp, #100]	; 0x64
   21d9c:	sub	r0, r0, #1
   21da0:	str	r0, [sp, #60]	; 0x3c
   21da4:	mov	r0, #1
   21da8:	str	r0, [sp, #72]	; 0x48
   21dac:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21db0:	ldr	r0, [sp, #100]	; 0x64
   21db4:	ldr	r1, [sp, #60]	; 0x3c
   21db8:	sub	r0, r0, r1
   21dbc:	str	r0, [sp, #72]	; 0x48
   21dc0:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21dc4:	mov	r0, #0
   21dc8:	str	r0, [sp, #64]	; 0x40
   21dcc:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21dd0:	mov	r0, #5
   21dd4:	str	r0, [sp, #64]	; 0x40
   21dd8:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21ddc:	add	lr, sp, #1024	; 0x400
   21de0:	add	r0, lr, #108	; 0x6c
   21de4:	mov	r1, #1024	; 0x400
   21de8:	b	21e04 <readstat_parse_sas_commands+0x4d4>
   21dec:	sub	r0, fp, #140	; 0x8c
   21df0:	b	21e00 <readstat_parse_sas_commands+0x4d0>
   21df4:	sub	r0, fp, #172	; 0xac
   21df8:	b	21e00 <readstat_parse_sas_commands+0x4d0>
   21dfc:	sub	r0, fp, #108	; 0x6c
   21e00:	mov	r1, #32
   21e04:	ldr	r2, [sp, #96]	; 0x60
   21e08:	ldr	r3, [sp, #88]	; 0x58
   21e0c:	bl	48e4 <readstat_copy@plt>
   21e10:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21e14:	nop	{0}
   21e18:	.word	0x00000000
   21e1c:	.word	0x7ff80000
   21e20:	sub	r0, fp, #108	; 0x6c
   21e24:	ldr	r1, [pc, #944]	; 221dc <readstat_parse_sas_commands+0x8ac>
   21e28:	add	r1, pc, r1
   21e2c:	bl	4aa0 <strcasecmp@plt>
   21e30:	cmp	r0, #0
   21e34:	ldreq	r0, [sp, #76]	; 0x4c
   21e38:	ldreq	r1, [sp, #100]	; 0x64
   21e3c:	streq	r1, [r0, #264]	; 0x108
   21e40:	sub	r0, fp, #108	; 0x6c
   21e44:	ldr	r1, [pc, #916]	; 221e0 <readstat_parse_sas_commands+0x8b0>
   21e48:	add	r1, pc, r1
   21e4c:	bl	4aa0 <strcasecmp@plt>
   21e50:	cmp	r0, #0
   21e54:	bne	21fc8 <readstat_parse_sas_commands+0x698>
   21e58:	ldr	r1, [sp, #100]	; 0x64
   21e5c:	ldr	r0, [sp, #92]	; 0x5c
   21e60:	orrs	r0, r1, r0
   21e64:	ldrb	r0, [sp, #1132]	; 0x46c
   21e68:	movne	r0, r1
   21e6c:	ldr	r1, [sp, #76]	; 0x4c
   21e70:	strb	r0, [r1, #272]	; 0x110
   21e74:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21e78:	sub	r1, fp, #76	; 0x4c
   21e7c:	ldr	r0, [sp, #76]	; 0x4c
   21e80:	bl	4b54 <readstat_schema_find_or_create_entry@plt>
   21e84:	ldr	r1, [sp, #64]	; 0x40
   21e88:	str	r1, [r0, #16]
   21e8c:	ldr	r1, [sp, #56]	; 0x38
   21e90:	str	r1, [r0]
   21e94:	ldr	r1, [sp, #60]	; 0x3c
   21e98:	str	r1, [r0, #4]
   21e9c:	ldr	r1, [sp, #72]	; 0x48
   21ea0:	str	r1, [r0, #8]
   21ea4:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21ea8:	sub	r1, fp, #76	; 0x4c
   21eac:	ldr	r0, [sp, #76]	; 0x4c
   21eb0:	bl	4b54 <readstat_schema_find_or_create_entry@plt>
   21eb4:	add	r0, r0, #580	; 0x244
   21eb8:	add	lr, sp, #1024	; 0x400
   21ebc:	add	r2, lr, #108	; 0x6c
   21ec0:	mov	r1, #1024	; 0x400
   21ec4:	mov	r3, #1024	; 0x400
   21ec8:	bl	48e4 <readstat_copy@plt>
   21ecc:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21ed0:	add	lr, sp, #1024	; 0x400
   21ed4:	add	r0, lr, #108	; 0x6c
   21ed8:	sub	r1, fp, #172	; 0xac
   21edc:	ldr	r2, [sp, #44]	; 0x2c
   21ee0:	str	r2, [sp]
   21ee4:	ldr	r2, [sp, #40]	; 0x28
   21ee8:	str	r2, [sp, #4]
   21eec:	ldr	r2, [sp, #100]	; 0x64
   21ef0:	str	r2, [sp, #8]
   21ef4:	ldr	r2, [sp, #92]	; 0x5c
   21ef8:	str	r2, [sp, #12]
   21efc:	str	r1, [sp, #16]
   21f00:	str	r0, [sp, #20]
   21f04:	ldr	r0, [sp, #48]	; 0x30
   21f08:	str	r0, [sp, #24]
   21f0c:	sub	r1, fp, #140	; 0x8c
   21f10:	ldr	r0, [sp, #36]	; 0x24
   21f14:	ldr	r2, [sp, #84]	; 0x54
   21f18:	vorr	d0, d8, d8
   21f1c:	bl	4ac4 <submit_value_label@plt>
   21f20:	cmp	r0, #0
   21f24:	beq	21fc8 <readstat_parse_sas_commands+0x698>
   21f28:	b	221a4 <readstat_parse_sas_commands+0x874>
   21f2c:	ldr	r0, [sp, #52]	; 0x34
   21f30:	add	r0, r0, #1
   21f34:	str	r0, [sp, #52]	; 0x34
   21f38:	str	sl, [sp, #80]	; 0x50
   21f3c:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21f40:	ldr	r0, [sp, #100]	; 0x64
   21f44:	rsbs	r0, r0, #0
   21f48:	ldr	r1, [sp, #92]	; 0x5c
   21f4c:	rsc	r1, r1, #0
   21f50:	b	21f5c <readstat_parse_sas_commands+0x62c>
   21f54:	ldr	r0, [sp, #100]	; 0x64
   21f58:	ldr	r1, [sp, #92]	; 0x5c
   21f5c:	bl	24c14 <__aeabi_ul2d>
   21f60:	mov	r2, #0
   21f64:	str	r2, [sp, #84]	; 0x54
   21f68:	vmov	d8, r0, r1
   21f6c:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21f70:	mov	r0, #2
   21f74:	str	r0, [sp, #84]	; 0x54
   21f78:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21f7c:	mov	r0, #3
   21f80:	str	r0, [sp, #84]	; 0x54
   21f84:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21f88:	ldr	r0, [sp, #100]	; 0x64
   21f8c:	str	r0, [sp, #72]	; 0x48
   21f90:	b	21fc8 <readstat_parse_sas_commands+0x698>
   21f94:	sub	r0, r1, #97	; 0x61
   21f98:	uxtb	r2, r0
   21f9c:	mov	r0, #0
   21fa0:	cmp	r2, #6
   21fa4:	subcc	r0, r1, #87	; 0x57
   21fa8:	ldr	r1, [sp, #92]	; 0x5c
   21fac:	lsl	r1, r1, #4
   21fb0:	ldr	r2, [sp, #100]	; 0x64
   21fb4:	orr	r1, r1, r2, lsr #28
   21fb8:	adds	r2, r0, r2, lsl #4
   21fbc:	str	r2, [sp, #100]	; 0x64
   21fc0:	adc	r0, r1, r0, asr #31
   21fc4:	str	r0, [sp, #92]	; 0x5c
   21fc8:	add	r4, r4, #1
   21fcc:	adds	r9, r9, #1
   21fd0:	bne	21be8 <readstat_parse_sas_commands+0x2b8>
   21fd4:	ldr	r0, [pc, #520]	; 221e4 <readstat_parse_sas_commands+0x8b4>
   21fd8:	add	r0, pc, r0
   21fdc:	add	r0, r0, r8, lsl #1
   21fe0:	ldrsh	lr, [r0]
   21fe4:	uxth	r1, lr
   21fe8:	cmp	r1, #0
   21fec:	beq	22064 <readstat_parse_sas_commands+0x734>
   21ff0:	add	sl, sl, #1
   21ff4:	ldr	r1, [sp, #68]	; 0x44
   21ff8:	cmp	sl, r1
   21ffc:	ldr	r5, [sp, #80]	; 0x50
   22000:	bne	21a84 <readstat_parse_sas_commands+0x154>
   22004:	ldr	r8, [sp, #32]
   22008:	ldr	r7, [sp, #36]	; 0x24
   2200c:	ldr	r9, [sp, #28]
   22010:	b	22050 <readstat_parse_sas_commands+0x720>
   22014:	mov	r6, #0
   22018:	cmp	r8, #0
   2201c:	movne	r0, #1
   22020:	strne	r0, [r8]
   22024:	b	22190 <readstat_parse_sas_commands+0x860>
   22028:	mov	r5, #15
   2202c:	mov	r6, #0
   22030:	b	2215c <readstat_parse_sas_commands+0x82c>
   22034:	mov	r5, #3
   22038:	b	2215c <readstat_parse_sas_commands+0x82c>
   2203c:	mov	r0, #0
   22040:	str	r0, [sp, #52]	; 0x34
   22044:	movw	lr, #1094	; 0x446
   22048:	mov	r5, r9
   2204c:	mov	sl, r9
   22050:	ldr	r1, [sp, #68]	; 0x44
   22054:	cmp	sl, r1
   22058:	beq	22078 <readstat_parse_sas_commands+0x748>
   2205c:	ldr	r6, [sp, #52]	; 0x34
   22060:	b	220c0 <readstat_parse_sas_commands+0x790>
   22064:	ldr	r8, [sp, #32]
   22068:	ldr	r7, [sp, #36]	; 0x24
   2206c:	ldr	r9, [sp, #28]
   22070:	ldr	r5, [sp, #80]	; 0x50
   22074:	b	220d0 <readstat_parse_sas_commands+0x7a0>
   22078:	ldr	r1, [pc, #360]	; 221e8 <readstat_parse_sas_commands+0x8b8>
   2207c:	add	r1, pc, r1
   22080:	ldrb	r1, [r1, lr]
   22084:	ldr	r3, [pc, #352]	; 221ec <readstat_parse_sas_commands+0x8bc>
   22088:	add	r3, pc, r3
   2208c:	ldrb	r2, [r3, r1]
   22090:	cmp	r2, #0
   22094:	beq	2205c <readstat_parse_sas_commands+0x72c>
   22098:	add	r1, r3, r1
   2209c:	add	r1, r1, #1
   220a0:	rsb	r2, r2, #0
   220a4:	ldr	r6, [sp, #52]	; 0x34
   220a8:	ldrb	r3, [r1], #1
   220ac:	cmp	r3, #22
   220b0:	moveq	r5, sl
   220b4:	addeq	r6, r6, #1
   220b8:	adds	r2, r2, #1
   220bc:	bne	220a8 <readstat_parse_sas_commands+0x778>
   220c0:	str	r6, [sp, #52]	; 0x34
   220c4:	movw	r1, #1093	; 0x445
   220c8:	cmp	lr, r1
   220cc:	bgt	2210c <readstat_parse_sas_commands+0x7dc>
   220d0:	ldr	r0, [sp, #68]	; 0x44
   220d4:	cmp	sl, r0
   220d8:	beq	22128 <readstat_parse_sas_commands+0x7f8>
   220dc:	ldrb	r0, [sl], #1
   220e0:	sub	r1, sl, r5
   220e4:	str	r1, [sp]
   220e8:	str	r0, [sp, #4]
   220ec:	ldr	r0, [sp, #52]	; 0x34
   220f0:	add	r3, r0, #1
   220f4:	add	r0, sp, #104	; 0x68
   220f8:	ldr	r2, [pc, #244]	; 221f4 <readstat_parse_sas_commands+0x8c4>
   220fc:	add	r2, pc, r2
   22100:	mov	r1, #1024	; 0x400
   22104:	bl	4d04 <snprintf@plt>
   22108:	b	2213c <readstat_parse_sas_commands+0x80c>
   2210c:	mov	r0, r7
   22110:	ldr	r6, [sp, #76]	; 0x4c
   22114:	mov	r1, r6
   22118:	ldr	r2, [sp, #48]	; 0x30
   2211c:	bl	49b0 <submit_columns@plt>
   22120:	mov	r5, r0
   22124:	b	2215c <readstat_parse_sas_commands+0x82c>
   22128:	add	r0, sp, #104	; 0x68
   2212c:	ldr	r1, [pc, #188]	; 221f0 <readstat_parse_sas_commands+0x8c0>
   22130:	add	r1, pc, r1
   22134:	mov	r2, #66	; 0x42
   22138:	bl	4998 <memcpy@plt>
   2213c:	ldr	r6, [sp, #76]	; 0x4c
   22140:	ldr	r2, [r7, #24]
   22144:	cmp	r2, #0
   22148:	beq	22158 <readstat_parse_sas_commands+0x828>
   2214c:	add	r0, sp, #104	; 0x68
   22150:	ldr	r1, [sp, #48]	; 0x30
   22154:	blx	r2
   22158:	mov	r5, #5
   2215c:	ldr	r0, [r7, #32]
   22160:	ldr	r1, [r0, #4]
   22164:	ldr	r0, [r0, #20]
   22168:	blx	r1
   2216c:	mov	r0, r9
   22170:	bl	4938 <free@plt>
   22174:	cmp	r5, #0
   22178:	beq	22190 <readstat_parse_sas_commands+0x860>
   2217c:	cmp	r8, #0
   22180:	strne	r5, [r8]
   22184:	mov	r0, r6
   22188:	bl	4a28 <readstat_schema_free@plt>
   2218c:	mov	r6, #0
   22190:	mov	r0, r6
   22194:	sub	sp, fp, #40	; 0x28
   22198:	vpop	{d8}
   2219c:	add	sp, sp, #4
   221a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   221a4:	mov	r5, r0
   221a8:	ldr	r8, [sp, #32]
   221ac:	ldr	r7, [sp, #36]	; 0x24
   221b0:	ldr	r9, [sp, #28]
   221b4:	ldr	r6, [sp, #76]	; 0x4c
   221b8:	b	2215c <readstat_parse_sas_commands+0x82c>
   221bc:	.word	0x00008832
   221c0:	.word	0x000076fe
   221c4:	.word	0x00006178
   221c8:	.word	0x00007f76
   221cc:	.word	0x0000cf29
   221d0:	.word	0x0000cf81
   221d4:	.word	0x0000d430
   221d8:	.word	0x0000b826
   221dc:	.word	0x0000d58e
   221e0:	.word	0x0000d577
   221e4:	.word	0x0000872c
   221e8:	.word	0x0000caa6
   221ec:	.word	0x0000c9d5
   221f0:	.word	0x0000d2d8
   221f4:	.word	0x0000d2c7

000221f8 <readstat_parse_spss_commands>:
   221f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   221fc:	add	fp, sp, #28
   22200:	sub	sp, sp, #4
   22204:	vpush	{d8}
   22208:	sub	sp, sp, #216	; 0xd8
   2220c:	sub	sp, sp, #2048	; 0x800
   22210:	mov	r6, r3
   22214:	str	r2, [sp, #56]	; 0x38
   22218:	mov	r2, r1
   2221c:	mov	r7, r0
   22220:	ldr	r0, [r0, #32]
   22224:	ldr	r3, [r0]
   22228:	ldr	r1, [r0, #20]
   2222c:	mov	r0, r2
   22230:	blx	r3
   22234:	cmn	r0, #1
   22238:	beq	22954 <readstat_parse_spss_commands+0x75c>
   2223c:	ldr	r0, [r7, #32]
   22240:	ldr	r3, [r0, #8]
   22244:	ldr	r2, [r0, #20]
   22248:	mov	r8, #0
   2224c:	mov	r0, #0
   22250:	mov	r1, #2
   22254:	blx	r3
   22258:	cmn	r0, #1
   2225c:	beq	22968 <readstat_parse_spss_commands+0x770>
   22260:	mov	r4, r0
   22264:	ldr	r0, [r7, #32]
   22268:	ldr	r3, [r0, #8]
   2226c:	ldr	r2, [r0, #20]
   22270:	mov	r0, #0
   22274:	str	r0, [sp, #76]	; 0x4c
   22278:	mov	r0, #0
   2227c:	mov	r1, #0
   22280:	blx	r3
   22284:	mov	r0, r4
   22288:	bl	4b9c <malloc@plt>
   2228c:	mov	r8, r0
   22290:	ldr	r0, [r7, #32]
   22294:	ldr	r3, [r0, #12]
   22298:	ldr	r2, [r0, #20]
   2229c:	mov	r0, r8
   222a0:	mov	r1, r4
   222a4:	blx	r3
   222a8:	mov	r5, #1
   222ac:	mov	r0, #1
   222b0:	mov	r1, #280	; 0x118
   222b4:	bl	47d0 <calloc@plt>
   222b8:	mov	sl, r0
   222bc:	cmp	r0, #0
   222c0:	beq	22974 <readstat_parse_spss_commands+0x77c>
   222c4:	add	r0, r8, r4
   222c8:	str	r0, [sp, #64]	; 0x40
   222cc:	str	r5, [sl, #256]	; 0x100
   222d0:	cmp	r4, #0
   222d4:	str	r6, [sp, #36]	; 0x24
   222d8:	str	r7, [sp, #40]	; 0x28
   222dc:	str	r8, [sp, #32]
   222e0:	beq	2297c <readstat_parse_spss_commands+0x784>
   222e4:	mov	r0, #0
   222e8:	str	r0, [sp, #96]	; 0x60
   222ec:	vldr	d8, [pc, #988]	; 226d0 <readstat_parse_spss_commands+0x4d8>
   222f0:	mov	r0, #5
   222f4:	str	r0, [sp, #100]	; 0x64
   222f8:	mov	r9, #628	; 0x274
   222fc:	mvn	r6, #1
   22300:	mov	r0, #0
   22304:	str	r0, [sp, #76]	; 0x4c
   22308:	mov	r0, #0
   2230c:	str	r0, [sp, #52]	; 0x34
   22310:	mov	r0, #0
   22314:	str	r0, [sp, #48]	; 0x30
   22318:	mov	r0, #0
   2231c:	str	r0, [sp, #108]	; 0x6c
   22320:	mov	r0, #0
   22324:	str	r0, [sp, #92]	; 0x5c
   22328:	str	r8, [sp, #44]	; 0x2c
   2232c:	mov	r0, #0
   22330:	str	r0, [sp, #72]	; 0x48
   22334:	mov	r0, #0
   22338:	str	r0, [sp, #60]	; 0x3c
   2233c:	mov	r0, #0
   22340:	str	r0, [sp, #68]	; 0x44
   22344:	mov	r0, #0
   22348:	str	r0, [sp, #84]	; 0x54
   2234c:	mov	r0, #0
   22350:	str	r0, [sp, #88]	; 0x58
   22354:	mov	r0, #0
   22358:	str	r0, [sp, #80]	; 0x50
   2235c:	mov	r0, #0
   22360:	str	r0, [sp, #104]	; 0x68
   22364:	ldr	r0, [pc, #2004]	; 22b40 <readstat_parse_spss_commands+0x948>
   22368:	add	r0, pc, r0
   2236c:	ldrb	r1, [r0, r9]
   22370:	ldr	r0, [pc, #1996]	; 22b44 <readstat_parse_spss_commands+0x94c>
   22374:	add	r0, pc, r0
   22378:	add	r0, r0, r9, lsl #1
   2237c:	ldrsh	r0, [r0]
   22380:	ldr	r2, [pc, #1984]	; 22b48 <readstat_parse_spss_commands+0x950>
   22384:	add	r2, pc, r2
   22388:	add	r7, r2, r0
   2238c:	ldr	r0, [pc, #1976]	; 22b4c <readstat_parse_spss_commands+0x954>
   22390:	add	r0, pc, r0
   22394:	add	r0, r0, r9, lsl #1
   22398:	ldrsh	lr, [r0]
   2239c:	cmp	r1, #0
   223a0:	beq	223f8 <readstat_parse_spss_commands+0x200>
   223a4:	add	ip, r7, r1
   223a8:	sub	r3, ip, #1
   223ac:	cmp	r3, r7
   223b0:	bcc	223f0 <readstat_parse_spss_commands+0x1f8>
   223b4:	ldrb	r5, [r8]
   223b8:	mov	r2, r7
   223bc:	sub	r4, r3, r2
   223c0:	mov	r0, r2
   223c4:	ldrb	r4, [r0, r4, asr #1]!
   223c8:	cmp	r5, r4
   223cc:	bcs	223e0 <readstat_parse_spss_commands+0x1e8>
   223d0:	sub	r3, r0, #1
   223d4:	cmp	r3, r2
   223d8:	bcs	223bc <readstat_parse_spss_commands+0x1c4>
   223dc:	b	223f0 <readstat_parse_spss_commands+0x1f8>
   223e0:	bls	2246c <readstat_parse_spss_commands+0x274>
   223e4:	add	r2, r0, #1
   223e8:	cmp	r3, r2
   223ec:	bcs	223bc <readstat_parse_spss_commands+0x1c4>
   223f0:	add	lr, r1, lr
   223f4:	b	223fc <readstat_parse_spss_commands+0x204>
   223f8:	mov	ip, r7
   223fc:	ldr	r0, [pc, #1868]	; 22b50 <readstat_parse_spss_commands+0x958>
   22400:	add	r0, pc, r0
   22404:	ldrb	r1, [r0, r9]
   22408:	cmp	r1, #0
   2240c:	beq	22484 <readstat_parse_spss_commands+0x28c>
   22410:	add	r0, ip, r1, lsl #1
   22414:	sub	r2, r0, #2
   22418:	cmp	r2, ip
   2241c:	bcc	22480 <readstat_parse_spss_commands+0x288>
   22420:	ldrb	r3, [r8]
   22424:	mov	r4, ip
   22428:	sub	r0, r2, r4
   2242c:	and	r7, r6, r0, asr #1
   22430:	mov	r0, r4
   22434:	ldrb	r7, [r0, r7]!
   22438:	cmp	r3, r7
   2243c:	bcs	22450 <readstat_parse_spss_commands+0x258>
   22440:	sub	r2, r0, #2
   22444:	cmp	r2, r4
   22448:	bcs	22428 <readstat_parse_spss_commands+0x230>
   2244c:	b	22480 <readstat_parse_spss_commands+0x288>
   22450:	ldrb	r7, [r0, #1]
   22454:	cmp	r3, r7
   22458:	bls	22478 <readstat_parse_spss_commands+0x280>
   2245c:	add	r4, r0, #2
   22460:	cmp	r2, r4
   22464:	bcs	22428 <readstat_parse_spss_commands+0x230>
   22468:	b	22480 <readstat_parse_spss_commands+0x288>
   2246c:	sub	r1, lr, r7
   22470:	add	lr, r1, r0
   22474:	b	22484 <readstat_parse_spss_commands+0x28c>
   22478:	sub	r0, r0, ip
   2247c:	asr	r1, r0, #1
   22480:	add	lr, r1, lr
   22484:	ldr	r0, [pc, #1736]	; 22b54 <readstat_parse_spss_commands+0x95c>
   22488:	add	r0, pc, r0
   2248c:	mov	r7, lr
   22490:	ldrb	r0, [r0, lr]
   22494:	cmp	r0, #0
   22498:	beq	22920 <readstat_parse_spss_commands+0x728>
   2249c:	ldr	r9, [pc, #1716]	; 22b58 <readstat_parse_spss_commands+0x960>
   224a0:	add	r9, pc, r9
   224a4:	ldrb	r6, [r9, r0]!
   224a8:	cmp	r6, #0
   224ac:	beq	22920 <readstat_parse_spss_commands+0x728>
   224b0:	ldrb	r0, [r9, #1]!
   224b4:	cmp	r0, #35	; 0x23
   224b8:	bhi	2285c <readstat_parse_spss_commands+0x664>
   224bc:	add	r1, pc, #4
   224c0:	ldr	r0, [r1, r0, lsl #2]
   224c4:	add	pc, r1, r0
   224c8:	.word	0x000000e0
   224cc:	.word	0x000000fc
   224d0:	.word	0x00000138
   224d4:	.word	0x00000158
   224d8:	.word	0x00000174
   224dc:	.word	0x00000184
   224e0:	.word	0x000001a4
   224e4:	.word	0x000001ac
   224e8:	.word	0x000001cc
   224ec:	.word	0x00000210
   224f0:	.word	0x00000240
   224f4:	.word	0x00000254
   224f8:	.word	0x00000270
   224fc:	.word	0x000002b4
   22500:	.word	0x00000320
   22504:	.word	0x000000d0
   22508:	.word	0x000000a4
   2250c:	.word	0x000000d0
   22510:	.word	0x000000a4
   22514:	.word	0x000003a0
   22518:	.word	0x000003bc
   2251c:	.word	0x000000a4
   22520:	.word	0x000000bc
   22524:	.word	0x000000bc
   22528:	.word	0x00000090
   2252c:	.word	0x00000090
   22530:	.word	0x000000bc
   22534:	.word	0x000003cc
   22538:	.word	0x00000090
   2253c:	.word	0x00000090
   22540:	.word	0x000003e4
   22544:	.word	0x000003ec
   22548:	.word	0x00000400
   2254c:	.word	0x00000424
   22550:	.word	0x00000440
   22554:	.word	0x00000448
   22558:	mov	r0, #5
   2255c:	str	r0, [sp, #100]	; 0x64
   22560:	subs	r6, r6, #1
   22564:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22568:	b	22920 <readstat_parse_spss_commands+0x728>
   2256c:	ldr	r0, [sp, #104]	; 0x68
   22570:	sub	r0, r8, r0
   22574:	str	r0, [sp, #96]	; 0x60
   22578:	subs	r6, r6, #1
   2257c:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22580:	b	22920 <readstat_parse_spss_commands+0x728>
   22584:	mov	r0, #0
   22588:	str	r0, [sp, #100]	; 0x64
   2258c:	subs	r6, r6, #1
   22590:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22594:	b	22920 <readstat_parse_spss_commands+0x728>
   22598:	str	r8, [sp, #104]	; 0x68
   2259c:	subs	r6, r6, #1
   225a0:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   225a4:	b	22920 <readstat_parse_spss_commands+0x728>
   225a8:	mov	r0, #0
   225ac:	str	r0, [sp, #108]	; 0x6c
   225b0:	mov	r0, #0
   225b4:	str	r0, [sp, #92]	; 0x5c
   225b8:	subs	r6, r6, #1
   225bc:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   225c0:	b	22920 <readstat_parse_spss_commands+0x728>
   225c4:	mov	r0, #10
   225c8:	ldr	r1, [sp, #108]	; 0x6c
   225cc:	umull	r0, r1, r1, r0
   225d0:	ldr	r2, [sp, #92]	; 0x5c
   225d4:	add	r2, r2, r2, lsl #2
   225d8:	add	r1, r1, r2, lsl #1
   225dc:	ldrb	r2, [r8]
   225e0:	sub	r2, r2, #48	; 0x30
   225e4:	adds	r0, r0, r2
   225e8:	str	r0, [sp, #108]	; 0x6c
   225ec:	adc	r0, r1, r2, asr #31
   225f0:	str	r0, [sp, #92]	; 0x5c
   225f4:	subs	r6, r6, #1
   225f8:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   225fc:	b	22920 <readstat_parse_spss_commands+0x728>
   22600:	ldr	r0, [sp, #108]	; 0x6c
   22604:	sub	r0, r0, #1
   22608:	str	r0, [sp, #72]	; 0x48
   2260c:	mov	r0, #1
   22610:	str	r0, [sp, #68]	; 0x44
   22614:	subs	r6, r6, #1
   22618:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   2261c:	b	22920 <readstat_parse_spss_commands+0x728>
   22620:	ldr	r0, [sp, #72]	; 0x48
   22624:	ldr	r1, [sp, #108]	; 0x6c
   22628:	sub	r0, r1, r0
   2262c:	str	r0, [sp, #68]	; 0x44
   22630:	subs	r6, r6, #1
   22634:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22638:	b	22920 <readstat_parse_spss_commands+0x728>
   2263c:	add	lr, sp, #1024	; 0x400
   22640:	add	r0, lr, #116	; 0x74
   22644:	mov	r1, #1024	; 0x400
   22648:	b	22654 <readstat_parse_spss_commands+0x45c>
   2264c:	sub	r0, fp, #140	; 0x8c
   22650:	mov	r1, #32
   22654:	ldr	r2, [sp, #104]	; 0x68
   22658:	ldr	r3, [sp, #96]	; 0x60
   2265c:	bl	4aac <readstat_copy_quoted@plt>
   22660:	subs	r6, r6, #1
   22664:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22668:	b	22920 <readstat_parse_spss_commands+0x728>
   2266c:	sub	r0, fp, #76	; 0x4c
   22670:	b	22678 <readstat_parse_spss_commands+0x480>
   22674:	sub	r0, fp, #108	; 0x6c
   22678:	mov	r1, #32
   2267c:	ldr	r2, [sp, #104]	; 0x68
   22680:	ldr	r3, [sp, #96]	; 0x60
   22684:	bl	48e4 <readstat_copy@plt>
   22688:	subs	r6, r6, #1
   2268c:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22690:	b	22920 <readstat_parse_spss_commands+0x728>
   22694:	sub	r1, fp, #76	; 0x4c
   22698:	mov	r0, sl
   2269c:	bl	4b54 <readstat_schema_find_or_create_entry@plt>
   226a0:	ldr	r1, [sp, #100]	; 0x64
   226a4:	str	r1, [r0, #16]
   226a8:	ldr	r1, [sp, #60]	; 0x3c
   226ac:	str	r1, [r0]
   226b0:	ldr	r1, [sp, #72]	; 0x48
   226b4:	str	r1, [r0, #4]
   226b8:	ldr	r1, [sp, #68]	; 0x44
   226bc:	str	r1, [r0, #8]
   226c0:	subs	r6, r6, #1
   226c4:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   226c8:	b	22920 <readstat_parse_spss_commands+0x728>
   226cc:	nop	{0}
   226d0:	.word	0x00000000
   226d4:	.word	0x7ff80000
   226d8:	sub	r1, fp, #76	; 0x4c
   226dc:	mov	r0, sl
   226e0:	bl	4b54 <readstat_schema_find_or_create_entry@plt>
   226e4:	add	r0, r0, #580	; 0x244
   226e8:	add	lr, sp, #1024	; 0x400
   226ec:	add	r2, lr, #116	; 0x74
   226f0:	mov	r1, #1024	; 0x400
   226f4:	mov	r3, #1024	; 0x400
   226f8:	bl	48e4 <readstat_copy@plt>
   226fc:	subs	r6, r6, #1
   22700:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22704:	b	22920 <readstat_parse_spss_commands+0x728>
   22708:	mov	r0, #0
   2270c:	str	r0, [sp, #84]	; 0x54
   22710:	subs	r6, r6, #1
   22714:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22718:	b	22920 <readstat_parse_spss_commands+0x728>
   2271c:	ldr	r0, [sp, #84]	; 0x54
   22720:	cmp	r0, #1024	; 0x400
   22724:	addcc	r0, r0, #1
   22728:	str	r0, [sp, #84]	; 0x54
   2272c:	subs	r6, r6, #1
   22730:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22734:	b	22920 <readstat_parse_spss_commands+0x728>
   22738:	sub	r0, fp, #108	; 0x6c
   2273c:	ldr	r1, [pc, #1048]	; 22b5c <readstat_parse_spss_commands+0x964>
   22740:	add	r1, pc, r1
   22744:	bl	4aa0 <strcasecmp@plt>
   22748:	cmp	r0, #0
   2274c:	ldreq	r0, [sp, #108]	; 0x6c
   22750:	streq	r0, [sl, #264]	; 0x108
   22754:	sub	r0, fp, #108	; 0x6c
   22758:	ldr	r1, [pc, #1024]	; 22b60 <readstat_parse_spss_commands+0x968>
   2275c:	add	r1, pc, r1
   22760:	bl	4aa0 <strcasecmp@plt>
   22764:	cmp	r0, #0
   22768:	ldrbeq	r0, [sp, #1140]	; 0x474
   2276c:	strbeq	r0, [sl, #272]	; 0x110
   22770:	subs	r6, r6, #1
   22774:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22778:	b	22920 <readstat_parse_spss_commands+0x728>
   2277c:	add	r0, sp, #112	; 0x70
   22780:	ldr	r2, [pc, #988]	; 22b64 <readstat_parse_spss_commands+0x96c>
   22784:	add	r2, pc, r2
   22788:	mov	r1, #256	; 0x100
   2278c:	ldr	r3, [sp, #80]	; 0x50
   22790:	bl	4d04 <snprintf@plt>
   22794:	ldr	r0, [sp, #84]	; 0x54
   22798:	cmp	r0, #1
   2279c:	blt	227d0 <readstat_parse_spss_commands+0x5d8>
   227a0:	ldr	r4, [sp, #84]	; 0x54
   227a4:	sub	r1, fp, #76	; 0x4c
   227a8:	mov	r0, sl
   227ac:	bl	4b54 <readstat_schema_find_or_create_entry@plt>
   227b0:	movw	r1, #2168	; 0x878
   227b4:	add	r0, r0, r1
   227b8:	add	r2, sp, #112	; 0x70
   227bc:	mov	r1, #32
   227c0:	mov	r3, #256	; 0x100
   227c4:	bl	48e4 <readstat_copy@plt>
   227c8:	subs	r4, r4, #1
   227cc:	bne	227a4 <readstat_parse_spss_commands+0x5ac>
   227d0:	ldr	r0, [sp, #80]	; 0x50
   227d4:	add	r0, r0, #1
   227d8:	str	r0, [sp, #80]	; 0x50
   227dc:	subs	r6, r6, #1
   227e0:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   227e4:	b	22920 <readstat_parse_spss_commands+0x728>
   227e8:	add	r5, sp, #112	; 0x70
   227ec:	ldr	r2, [pc, #884]	; 22b68 <readstat_parse_spss_commands+0x970>
   227f0:	add	r2, pc, r2
   227f4:	mov	r0, r5
   227f8:	mov	r1, #256	; 0x100
   227fc:	ldr	r3, [sp, #80]	; 0x50
   22800:	bl	4d04 <snprintf@plt>
   22804:	add	lr, sp, #1024	; 0x400
   22808:	add	r0, lr, #116	; 0x74
   2280c:	sub	r1, fp, #140	; 0x8c
   22810:	ldr	r2, [sp, #52]	; 0x34
   22814:	str	r2, [sp]
   22818:	ldr	r2, [sp, #48]	; 0x30
   2281c:	str	r2, [sp, #4]
   22820:	ldr	r2, [sp, #108]	; 0x6c
   22824:	str	r2, [sp, #8]
   22828:	ldr	r2, [sp, #92]	; 0x5c
   2282c:	str	r2, [sp, #12]
   22830:	str	r1, [sp, #16]
   22834:	str	r0, [sp, #20]
   22838:	ldr	r0, [sp, #56]	; 0x38
   2283c:	str	r0, [sp, #24]
   22840:	ldr	r0, [sp, #40]	; 0x28
   22844:	mov	r1, r5
   22848:	ldr	r2, [sp, #88]	; 0x58
   2284c:	vorr	d0, d8, d8
   22850:	bl	4ac4 <submit_value_label@plt>
   22854:	cmp	r0, #0
   22858:	bne	22ae8 <readstat_parse_spss_commands+0x8f0>
   2285c:	subs	r6, r6, #1
   22860:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22864:	b	22920 <readstat_parse_spss_commands+0x728>
   22868:	ldr	r0, [sp, #76]	; 0x4c
   2286c:	add	r0, r0, #1
   22870:	str	r0, [sp, #76]	; 0x4c
   22874:	str	r8, [sp, #44]	; 0x2c
   22878:	subs	r6, r6, #1
   2287c:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22880:	b	22920 <readstat_parse_spss_commands+0x728>
   22884:	str	r8, [sp, #104]	; 0x68
   22888:	subs	r6, r6, #1
   2288c:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22890:	b	22920 <readstat_parse_spss_commands+0x728>
   22894:	ldr	r0, [sp, #108]	; 0x6c
   22898:	sub	r0, r0, #1
   2289c:	str	r0, [sp, #60]	; 0x3c
   228a0:	subs	r6, r6, #1
   228a4:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   228a8:	b	22920 <readstat_parse_spss_commands+0x728>
   228ac:	mvn	r0, #0
   228b0:	b	22914 <readstat_parse_spss_commands+0x71c>
   228b4:	ldr	r0, [sp, #108]	; 0x6c
   228b8:	rsbs	r0, r0, #0
   228bc:	ldr	r1, [sp, #92]	; 0x5c
   228c0:	rsc	r1, r1, #0
   228c4:	b	228d0 <readstat_parse_spss_commands+0x6d8>
   228c8:	ldr	r0, [sp, #108]	; 0x6c
   228cc:	ldr	r1, [sp, #92]	; 0x5c
   228d0:	bl	24c14 <__aeabi_ul2d>
   228d4:	mov	r2, #0
   228d8:	str	r2, [sp, #88]	; 0x58
   228dc:	vmov	d8, r0, r1
   228e0:	subs	r6, r6, #1
   228e4:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   228e8:	b	22920 <readstat_parse_spss_commands+0x728>
   228ec:	ldr	r0, [sp, #108]	; 0x6c
   228f0:	str	r0, [sp, #52]	; 0x34
   228f4:	ldr	r0, [sp, #92]	; 0x5c
   228f8:	str	r0, [sp, #48]	; 0x30
   228fc:	subs	r6, r6, #1
   22900:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22904:	b	22920 <readstat_parse_spss_commands+0x728>
   22908:	mov	r0, #2
   2290c:	b	22914 <readstat_parse_spss_commands+0x71c>
   22910:	mov	r0, #1
   22914:	str	r0, [sp, #88]	; 0x58
   22918:	subs	r6, r6, #1
   2291c:	bne	224b0 <readstat_parse_spss_commands+0x2b8>
   22920:	ldr	r0, [pc, #580]	; 22b6c <readstat_parse_spss_commands+0x974>
   22924:	add	r0, pc, r0
   22928:	add	r0, r0, r7, lsl #1
   2292c:	ldrsh	r9, [r0]
   22930:	uxth	r0, r9
   22934:	cmp	r0, #0
   22938:	beq	22a48 <readstat_parse_spss_commands+0x850>
   2293c:	add	r8, r8, #1
   22940:	ldr	r0, [sp, #64]	; 0x40
   22944:	cmp	r8, r0
   22948:	mvn	r6, #1
   2294c:	bne	22364 <readstat_parse_spss_commands+0x16c>
   22950:	b	229a4 <readstat_parse_spss_commands+0x7ac>
   22954:	mov	sl, #0
   22958:	cmp	r6, #0
   2295c:	movne	r0, #1
   22960:	strne	r0, [r6]
   22964:	b	22b2c <readstat_parse_spss_commands+0x934>
   22968:	mov	r5, #15
   2296c:	mov	sl, #0
   22970:	b	22af8 <readstat_parse_spss_commands+0x900>
   22974:	mov	r5, #3
   22978:	b	22af8 <readstat_parse_spss_commands+0x900>
   2297c:	mov	r0, #5
   22980:	str	r0, [sp, #100]	; 0x64
   22984:	mov	r9, #628	; 0x274
   22988:	str	r8, [sp, #44]	; 0x2c
   2298c:	mov	r0, #0
   22990:	str	r0, [sp, #72]	; 0x48
   22994:	mov	r0, #0
   22998:	str	r0, [sp, #60]	; 0x3c
   2299c:	mov	r0, #0
   229a0:	str	r0, [sp, #68]	; 0x44
   229a4:	ldr	r0, [sp, #64]	; 0x40
   229a8:	cmp	r8, r0
   229ac:	bne	22a40 <readstat_parse_spss_commands+0x848>
   229b0:	ldr	r0, [pc, #440]	; 22b70 <readstat_parse_spss_commands+0x978>
   229b4:	add	r0, pc, r0
   229b8:	ldrb	r0, [r0, r9]
   229bc:	ldr	r2, [pc, #432]	; 22b74 <readstat_parse_spss_commands+0x97c>
   229c0:	add	r2, pc, r2
   229c4:	ldrb	r1, [r2, r0]
   229c8:	cmp	r1, #0
   229cc:	beq	22a40 <readstat_parse_spss_commands+0x848>
   229d0:	add	r0, r2, r0
   229d4:	add	r4, r0, #1
   229d8:	rsb	r5, r1, #0
   229dc:	sub	r6, fp, #76	; 0x4c
   229e0:	ldrb	r0, [r4]
   229e4:	cmp	r0, #19
   229e8:	beq	22a24 <readstat_parse_spss_commands+0x82c>
   229ec:	cmp	r0, #8
   229f0:	bne	22a34 <readstat_parse_spss_commands+0x83c>
   229f4:	mov	r0, sl
   229f8:	mov	r1, r6
   229fc:	bl	4b54 <readstat_schema_find_or_create_entry@plt>
   22a00:	ldr	r1, [sp, #100]	; 0x64
   22a04:	str	r1, [r0, #16]
   22a08:	ldr	r1, [sp, #60]	; 0x3c
   22a0c:	str	r1, [r0]
   22a10:	ldr	r1, [sp, #72]	; 0x48
   22a14:	str	r1, [r0, #4]
   22a18:	ldr	r1, [sp, #68]	; 0x44
   22a1c:	str	r1, [r0, #8]
   22a20:	b	22a34 <readstat_parse_spss_commands+0x83c>
   22a24:	ldr	r0, [sp, #76]	; 0x4c
   22a28:	add	r0, r0, #1
   22a2c:	str	r0, [sp, #76]	; 0x4c
   22a30:	str	r8, [sp, #44]	; 0x2c
   22a34:	add	r4, r4, #1
   22a38:	adds	r5, r5, #1
   22a3c:	bne	229e0 <readstat_parse_spss_commands+0x7e8>
   22a40:	cmp	r9, #628	; 0x274
   22a44:	bge	22a88 <readstat_parse_spss_commands+0x890>
   22a48:	ldr	r0, [sp, #64]	; 0x40
   22a4c:	cmp	r8, r0
   22a50:	beq	22aa8 <readstat_parse_spss_commands+0x8b0>
   22a54:	ldr	r0, [sp, #44]	; 0x2c
   22a58:	rsb	r0, r0, #1
   22a5c:	ldrb	r0, [r8], r0
   22a60:	str	r8, [sp]
   22a64:	str	r0, [sp, #4]
   22a68:	ldr	r0, [sp, #76]	; 0x4c
   22a6c:	add	r3, r0, #1
   22a70:	add	r0, sp, #112	; 0x70
   22a74:	ldr	r2, [pc, #256]	; 22b7c <readstat_parse_spss_commands+0x984>
   22a78:	add	r2, pc, r2
   22a7c:	mov	r1, #1024	; 0x400
   22a80:	bl	4d04 <snprintf@plt>
   22a84:	b	22abc <readstat_parse_spss_commands+0x8c4>
   22a88:	ldr	r7, [sp, #40]	; 0x28
   22a8c:	mov	r0, r7
   22a90:	mov	r1, sl
   22a94:	ldr	r2, [sp, #56]	; 0x38
   22a98:	bl	49b0 <submit_columns@plt>
   22a9c:	mov	r5, r0
   22aa0:	ldr	r6, [sp, #36]	; 0x24
   22aa4:	b	22af4 <readstat_parse_spss_commands+0x8fc>
   22aa8:	add	r0, sp, #112	; 0x70
   22aac:	ldr	r1, [pc, #196]	; 22b78 <readstat_parse_spss_commands+0x980>
   22ab0:	add	r1, pc, r1
   22ab4:	mov	r2, #67	; 0x43
   22ab8:	bl	4998 <memcpy@plt>
   22abc:	ldr	r6, [sp, #36]	; 0x24
   22ac0:	ldr	r7, [sp, #40]	; 0x28
   22ac4:	ldr	r8, [sp, #32]
   22ac8:	ldr	r2, [r7, #24]
   22acc:	cmp	r2, #0
   22ad0:	beq	22ae0 <readstat_parse_spss_commands+0x8e8>
   22ad4:	add	r0, sp, #112	; 0x70
   22ad8:	ldr	r1, [sp, #56]	; 0x38
   22adc:	blx	r2
   22ae0:	mov	r5, #5
   22ae4:	b	22af8 <readstat_parse_spss_commands+0x900>
   22ae8:	mov	r5, r0
   22aec:	ldr	r6, [sp, #36]	; 0x24
   22af0:	ldr	r7, [sp, #40]	; 0x28
   22af4:	ldr	r8, [sp, #32]
   22af8:	ldr	r0, [r7, #32]
   22afc:	ldr	r1, [r0, #4]
   22b00:	ldr	r0, [r0, #20]
   22b04:	blx	r1
   22b08:	mov	r0, r8
   22b0c:	bl	4938 <free@plt>
   22b10:	cmp	r5, #0
   22b14:	beq	22b2c <readstat_parse_spss_commands+0x934>
   22b18:	cmp	r6, #0
   22b1c:	strne	r5, [r6]
   22b20:	mov	r0, sl
   22b24:	bl	4a28 <readstat_schema_free@plt>
   22b28:	mov	sl, #0
   22b2c:	mov	r0, sl
   22b30:	sub	sp, fp, #40	; 0x28
   22b34:	vpop	{d8}
   22b38:	add	sp, sp, #4
   22b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b40:	.word	0x0000e69e
   22b44:	.word	0x0000dcb2
   22b48:	.word	0x0000d0c6
   22b4c:	.word	0x0000e186
   22b50:	.word	0x0000e87e
   22b54:	.word	0x0001041a
   22b58:	.word	0x000110d8
   22b5c:	.word	0x00011153
   22b60:	.word	0x00011141
   22b64:	.word	0x0000374f
   22b68:	.word	0x000036e3
   22b6c:	.word	0x0000e5d2
   22b70:	.word	0x00010c67
   22b74:	.word	0x00010bb8
   22b78:	.word	0x00010e38
   22b7c:	.word	0x00010e30

00022b80 <readstat_schema_free>:
   22b80:	cmp	r0, #0
   22b84:	bxeq	lr
   22b88:	push	{r4, sl, fp, lr}
   22b8c:	add	fp, sp, #8
   22b90:	mov	r4, r0
   22b94:	ldr	r0, [r0, #276]	; 0x114
   22b98:	bl	4938 <free@plt>
   22b9c:	mov	r0, r4
   22ba0:	pop	{r4, sl, fp, lr}
   22ba4:	b	4938 <free@plt>

00022ba8 <readstat_schema_find_or_create_entry>:
   22ba8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   22bac:	add	fp, sp, #24
   22bb0:	mov	r9, r1
   22bb4:	mov	r4, r0
   22bb8:	ldr	r7, [r0, #268]	; 0x10c
   22bbc:	cmp	r7, #1
   22bc0:	blt	22c30 <readstat_schema_find_or_create_entry+0x88>
   22bc4:	ldr	r8, [r4, #276]	; 0x114
   22bc8:	add	r0, r8, #24
   22bcc:	mov	r1, r9
   22bd0:	bl	4878 <strcmp@plt>
   22bd4:	cmp	r0, #0
   22bd8:	beq	22c14 <readstat_schema_find_or_create_entry+0x6c>
   22bdc:	movw	r0, #2232	; 0x8b8
   22be0:	add	r6, r8, r0
   22be4:	mov	r5, #0
   22be8:	add	r5, r5, #1
   22bec:	ldr	r7, [r4, #268]	; 0x10c
   22bf0:	cmp	r5, r7
   22bf4:	bge	22c30 <readstat_schema_find_or_create_entry+0x88>
   22bf8:	mov	r0, r6
   22bfc:	mov	r1, r9
   22c00:	bl	4878 <strcmp@plt>
   22c04:	add	r6, r6, #2208	; 0x8a0
   22c08:	cmp	r0, #0
   22c0c:	bne	22be8 <readstat_schema_find_or_create_entry+0x40>
   22c10:	b	22c18 <readstat_schema_find_or_create_entry+0x70>
   22c14:	mov	r5, #0
   22c18:	mov	r0, #2208	; 0x8a0
   22c1c:	mla	r6, r5, r0, r8
   22c20:	cmp	r6, #0
   22c24:	beq	22c30 <readstat_schema_find_or_create_entry+0x88>
   22c28:	mov	r0, r6
   22c2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   22c30:	mov	r5, #2208	; 0x8a0
   22c34:	mul	r0, r7, r5
   22c38:	add	r1, r0, #2208	; 0x8a0
   22c3c:	ldr	r0, [r4, #276]	; 0x114
   22c40:	bl	4a70 <realloc@plt>
   22c44:	str	r0, [r4, #276]	; 0x114
   22c48:	ldr	r1, [r4, #268]	; 0x10c
   22c4c:	mla	r6, r1, r5, r0
   22c50:	mov	r0, r6
   22c54:	mov	r1, #0
   22c58:	mov	r2, #2208	; 0x8a0
   22c5c:	bl	4d28 <memset@plt>
   22c60:	add	r7, r6, #24
   22c64:	mov	r0, r9
   22c68:	bl	4c8c <strlen@plt>
   22c6c:	mov	r3, r0
   22c70:	mov	r0, r7
   22c74:	mov	r1, #300	; 0x12c
   22c78:	mov	r2, r9
   22c7c:	bl	48e4 <readstat_copy@plt>
   22c80:	mov	r0, #46	; 0x2e
   22c84:	strb	r0, [r6, #2200]	; 0x898
   22c88:	ldr	r0, [r4, #268]	; 0x10c
   22c8c:	add	r1, r0, #1
   22c90:	str	r1, [r4, #268]	; 0x10c
   22c94:	str	r0, [r6, #20]
   22c98:	mov	r0, r6
   22c9c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00022ca0 <readstat_parse_stata_dictionary>:
   22ca0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ca4:	add	fp, sp, #28
   22ca8:	sub	sp, sp, #244	; 0xf4
   22cac:	sub	sp, sp, #3072	; 0xc00
   22cb0:	mov	r9, r3
   22cb4:	mov	r6, r2
   22cb8:	mov	r2, r1
   22cbc:	mov	r7, r0
   22cc0:	ldr	r0, [r0, #32]
   22cc4:	ldr	r3, [r0]
   22cc8:	ldr	r1, [r0, #20]
   22ccc:	mov	r0, r2
   22cd0:	blx	r3
   22cd4:	cmn	r0, #1
   22cd8:	beq	232f4 <readstat_parse_stata_dictionary+0x654>
   22cdc:	ldr	r0, [r7, #32]
   22ce0:	ldr	r3, [r0, #8]
   22ce4:	ldr	r2, [r0, #20]
   22ce8:	mov	r5, #0
   22cec:	mov	r0, #0
   22cf0:	mov	r1, #2
   22cf4:	blx	r3
   22cf8:	cmn	r0, #1
   22cfc:	beq	23314 <readstat_parse_stata_dictionary+0x674>
   22d00:	mov	r4, r0
   22d04:	ldr	r0, [r7, #32]
   22d08:	ldr	r3, [r0, #8]
   22d0c:	ldr	r2, [r0, #20]
   22d10:	mov	r0, #0
   22d14:	mov	r1, #0
   22d18:	blx	r3
   22d1c:	mov	r0, r4
   22d20:	bl	4b9c <malloc@plt>
   22d24:	mov	r5, r0
   22d28:	ldr	r0, [r7, #32]
   22d2c:	ldr	r3, [r0, #12]
   22d30:	ldr	r2, [r0, #20]
   22d34:	mov	r0, r5
   22d38:	mov	r1, r4
   22d3c:	blx	r3
   22d40:	mov	r8, #1
   22d44:	mov	r0, #1
   22d48:	mov	r1, #280	; 0x118
   22d4c:	bl	47d0 <calloc@plt>
   22d50:	cmp	r0, #0
   22d54:	beq	23320 <readstat_parse_stata_dictionary+0x680>
   22d58:	mov	r1, #0
   22d5c:	str	r1, [sp, #48]	; 0x30
   22d60:	str	r6, [sp, #20]
   22d64:	str	r7, [sp, #32]
   22d68:	str	r9, [sp, #8]
   22d6c:	add	r1, r5, r4
   22d70:	str	r1, [sp, #52]	; 0x34
   22d74:	str	r8, [r0, #256]	; 0x100
   22d78:	cmp	r4, #0
   22d7c:	str	r5, [sp, #36]	; 0x24
   22d80:	str	r5, [sp, #12]
   22d84:	mov	r7, r5
   22d88:	mov	r5, r0
   22d8c:	beq	232b0 <readstat_parse_stata_dictionary+0x610>
   22d90:	add	r0, sp, #1104	; 0x450
   22d94:	add	r1, r0, #16
   22d98:	str	r1, [sp, #16]
   22d9c:	add	r1, r0, #580	; 0x244
   22da0:	str	r1, [sp, #28]
   22da4:	add	r0, r0, #24
   22da8:	str	r0, [sp, #24]
   22dac:	mov	r0, #1
   22db0:	mov	r1, #0
   22db4:	str	r1, [sp, #56]	; 0x38
   22db8:	mvn	r4, #1
   22dbc:	ldr	r6, [pc, #1588]	; 233f8 <readstat_parse_stata_dictionary+0x758>
   22dc0:	add	r6, pc, r6
   22dc4:	mov	r1, #0
   22dc8:	str	r1, [sp, #44]	; 0x2c
   22dcc:	ldr	r1, [sp, #12]
   22dd0:	mov	r7, r1
   22dd4:	mov	sl, #0
   22dd8:	mov	r2, #0
   22ddc:	str	r2, [sp, #72]	; 0x48
   22de0:	mov	r8, #0
   22de4:	mov	r2, #0
   22de8:	str	r2, [sp, #68]	; 0x44
   22dec:	mov	r2, #0
   22df0:	str	r2, [sp, #60]	; 0x3c
   22df4:	mov	r2, #0
   22df8:	str	r2, [sp, #48]	; 0x30
   22dfc:	str	r1, [sp, #36]	; 0x24
   22e00:	str	r5, [sp, #40]	; 0x28
   22e04:	ldr	r1, [pc, #1520]	; 233fc <readstat_parse_stata_dictionary+0x75c>
   22e08:	add	r1, pc, r1
   22e0c:	ldrb	r2, [r1, r0]
   22e10:	ldr	r1, [pc, #1512]	; 23400 <readstat_parse_stata_dictionary+0x760>
   22e14:	add	r1, pc, r1
   22e18:	add	r1, r1, r0, lsl #1
   22e1c:	ldrsh	r1, [r1]
   22e20:	ldr	r3, [pc, #1500]	; 23404 <readstat_parse_stata_dictionary+0x764>
   22e24:	add	r3, pc, r3
   22e28:	add	lr, r3, r1
   22e2c:	ldr	r1, [pc, #1492]	; 23408 <readstat_parse_stata_dictionary+0x768>
   22e30:	add	r1, pc, r1
   22e34:	add	r1, r1, r0, lsl #1
   22e38:	ldrsh	r3, [r1]
   22e3c:	cmp	r2, #0
   22e40:	beq	22eb0 <readstat_parse_stata_dictionary+0x210>
   22e44:	str	r3, [sp, #76]	; 0x4c
   22e48:	mov	r9, r7
   22e4c:	add	ip, lr, r2
   22e50:	sub	r6, ip, #1
   22e54:	cmp	r6, lr
   22e58:	bcc	22e98 <readstat_parse_stata_dictionary+0x1f8>
   22e5c:	ldrb	r7, [r9]
   22e60:	mov	r3, lr
   22e64:	sub	r5, r6, r3
   22e68:	mov	r1, r3
   22e6c:	ldrb	r5, [r1, r5, asr #1]!
   22e70:	cmp	r7, r5
   22e74:	bcs	22e88 <readstat_parse_stata_dictionary+0x1e8>
   22e78:	sub	r6, r1, #1
   22e7c:	cmp	r6, r3
   22e80:	bcs	22e64 <readstat_parse_stata_dictionary+0x1c4>
   22e84:	b	22e98 <readstat_parse_stata_dictionary+0x1f8>
   22e88:	bls	22f40 <readstat_parse_stata_dictionary+0x2a0>
   22e8c:	add	r3, r1, #1
   22e90:	cmp	r6, r3
   22e94:	bcs	22e64 <readstat_parse_stata_dictionary+0x1c4>
   22e98:	ldr	r3, [sp, #76]	; 0x4c
   22e9c:	add	r3, r2, r3
   22ea0:	ldr	r5, [sp, #40]	; 0x28
   22ea4:	ldr	r6, [pc, #1376]	; 2340c <readstat_parse_stata_dictionary+0x76c>
   22ea8:	add	r6, pc, r6
   22eac:	b	22eb8 <readstat_parse_stata_dictionary+0x218>
   22eb0:	mov	r9, r7
   22eb4:	mov	ip, lr
   22eb8:	ldr	r1, [pc, #1360]	; 23410 <readstat_parse_stata_dictionary+0x770>
   22ebc:	add	r1, pc, r1
   22ec0:	ldrb	r0, [r1, r0]
   22ec4:	cmp	r0, #0
   22ec8:	beq	22ee4 <readstat_parse_stata_dictionary+0x244>
   22ecc:	add	r1, ip, r0, lsl #1
   22ed0:	sub	r2, r1, #2
   22ed4:	cmp	r2, ip
   22ed8:	bcs	22eec <readstat_parse_stata_dictionary+0x24c>
   22edc:	mov	r7, r9
   22ee0:	b	22f74 <readstat_parse_stata_dictionary+0x2d4>
   22ee4:	mov	r7, r9
   22ee8:	b	22f78 <readstat_parse_stata_dictionary+0x2d8>
   22eec:	str	r3, [sp, #76]	; 0x4c
   22ef0:	mov	lr, r5
   22ef4:	ldrb	r3, [r9]
   22ef8:	mov	r5, ip
   22efc:	sub	r1, r2, r5
   22f00:	and	r7, r4, r1, asr #1
   22f04:	mov	r1, r5
   22f08:	ldrb	r7, [r1, r7]!
   22f0c:	cmp	r3, r7
   22f10:	bcs	22f24 <readstat_parse_stata_dictionary+0x284>
   22f14:	sub	r2, r1, #2
   22f18:	cmp	r2, r5
   22f1c:	bcs	22efc <readstat_parse_stata_dictionary+0x25c>
   22f20:	b	22f68 <readstat_parse_stata_dictionary+0x2c8>
   22f24:	ldrb	r7, [r1, #1]
   22f28:	cmp	r3, r7
   22f2c:	bls	22f60 <readstat_parse_stata_dictionary+0x2c0>
   22f30:	add	r5, r1, #2
   22f34:	cmp	r2, r5
   22f38:	bcs	22efc <readstat_parse_stata_dictionary+0x25c>
   22f3c:	b	22f68 <readstat_parse_stata_dictionary+0x2c8>
   22f40:	ldr	r0, [sp, #76]	; 0x4c
   22f44:	sub	r0, r0, lr
   22f48:	add	r3, r0, r1
   22f4c:	ldr	r5, [sp, #40]	; 0x28
   22f50:	mov	r7, r9
   22f54:	ldr	r6, [pc, #1228]	; 23428 <readstat_parse_stata_dictionary+0x788>
   22f58:	add	r6, pc, r6
   22f5c:	b	22f78 <readstat_parse_stata_dictionary+0x2d8>
   22f60:	sub	r0, r1, ip
   22f64:	asr	r0, r0, #1
   22f68:	mov	r5, lr
   22f6c:	mov	r7, r9
   22f70:	ldr	r3, [sp, #76]	; 0x4c
   22f74:	add	r3, r0, r3
   22f78:	ldr	r0, [pc, #1172]	; 23414 <readstat_parse_stata_dictionary+0x774>
   22f7c:	add	r0, pc, r0
   22f80:	ldrb	r0, [r0, r3]
   22f84:	cmp	r0, #0
   22f88:	str	r3, [sp, #76]	; 0x4c
   22f8c:	ldrbne	r1, [r6, r0]
   22f90:	cmpne	r1, #0
   22f94:	beq	23270 <readstat_parse_stata_dictionary+0x5d0>
   22f98:	add	r0, r6, r0
   22f9c:	add	r9, r0, #1
   22fa0:	rsb	r6, r1, #0
   22fa4:	str	r7, [sp, #64]	; 0x40
   22fa8:	ldrb	r0, [r9]
   22fac:	cmp	r0, #28
   22fb0:	bhi	23264 <readstat_parse_stata_dictionary+0x5c4>
   22fb4:	add	r1, pc, #4
   22fb8:	ldr	r0, [r1, r0, lsl #2]
   22fbc:	add	pc, r1, r0
   22fc0:	.word	0x00000088
   22fc4:	.word	0x00000090
   22fc8:	.word	0x000000a4
   22fcc:	.word	0x000000d4
   22fd0:	.word	0x00000140
   22fd4:	.word	0x0000014c
   22fd8:	.word	0x00000158
   22fdc:	.word	0x00000080
   22fe0:	.word	0x00000074
   22fe4:	.word	0x00000080
   22fe8:	.word	0x00000074
   22fec:	.word	0x00000080
   22ff0:	.word	0x00000074
   22ff4:	.word	0x00000170
   22ff8:	.word	0x00000184
   22ffc:	.word	0x0000018c
   23000:	.word	0x00000198
   23004:	.word	0x000001a4
   23008:	.word	0x000001b4
   2300c:	.word	0x000001c8
   23010:	.word	0x000001d0
   23014:	.word	0x000001dc
   23018:	.word	0x000001e8
   2301c:	.word	0x000001f4
   23020:	.word	0x00000200
   23024:	.word	0x0000020c
   23028:	.word	0x00000218
   2302c:	.word	0x00000228
   23030:	.word	0x00000230
   23034:	sub	r0, r7, sl
   23038:	str	r0, [sp, #72]	; 0x48
   2303c:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   23040:	mov	sl, r7
   23044:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   23048:	mov	r8, #0
   2304c:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   23050:	ldrb	r0, [r7]
   23054:	add	r1, r8, r8, lsl #2
   23058:	add	r0, r0, r1, lsl #1
   2305c:	sub	r8, r0, #48	; 0x30
   23060:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   23064:	add	r0, sp, #1104	; 0x450
   23068:	mov	r1, #0
   2306c:	mov	r2, #2208	; 0x8a0
   23070:	bl	4d28 <memset@plt>
   23074:	ldr	r7, [sp, #64]	; 0x40
   23078:	mov	r0, #46	; 0x2e
   2307c:	strb	r0, [sp, #3304]	; 0xce8
   23080:	mov	r0, #5
   23084:	str	r0, [sp, #1120]	; 0x460
   23088:	ldr	r0, [sp, #56]	; 0x38
   2308c:	str	r0, [sp, #1124]	; 0x464
   23090:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   23094:	mov	r0, r5
   23098:	mov	r5, r8
   2309c:	mov	r4, r0
   230a0:	ldr	r0, [sp, #60]	; 0x3c
   230a4:	str	r0, [sp, #1108]	; 0x454
   230a8:	ldr	r0, [sp, #68]	; 0x44
   230ac:	str	r0, [sp, #1104]	; 0x450
   230b0:	ldr	r8, [sp, #1112]	; 0x458
   230b4:	ldr	r0, [sp, #32]
   230b8:	ldr	r7, [r0, #8]
   230bc:	cmp	r7, #0
   230c0:	beq	230f0 <readstat_parse_stata_dictionary+0x450>
   230c4:	ldr	r0, [sp, #44]	; 0x2c
   230c8:	str	r0, [sp, #3268]	; 0xcc4
   230cc:	ldr	r0, [sp, #56]	; 0x38
   230d0:	ldr	r1, [sp, #16]
   230d4:	mov	r2, #0
   230d8:	ldr	r3, [sp, #20]
   230dc:	blx	r7
   230e0:	cmp	r0, #2
   230e4:	beq	231fc <readstat_parse_stata_dictionary+0x55c>
   230e8:	cmp	r0, #1
   230ec:	beq	233e4 <readstat_parse_stata_dictionary+0x744>
   230f0:	ldr	r0, [sp, #44]	; 0x2c
   230f4:	add	r0, r0, #1
   230f8:	str	r0, [sp, #44]	; 0x2c
   230fc:	b	23204 <readstat_parse_stata_dictionary+0x564>
   23100:	mov	r0, r5
   23104:	mov	r1, #255	; 0xff
   23108:	b	23120 <readstat_parse_stata_dictionary+0x480>
   2310c:	ldr	r0, [sp, #24]
   23110:	mov	r1, #300	; 0x12c
   23114:	b	23120 <readstat_parse_stata_dictionary+0x480>
   23118:	ldr	r0, [sp, #28]
   2311c:	mov	r1, #1024	; 0x400
   23120:	mov	r2, sl
   23124:	ldr	r3, [sp, #72]	; 0x48
   23128:	bl	48e4 <readstat_copy@plt>
   2312c:	b	23260 <readstat_parse_stata_dictionary+0x5c0>
   23130:	ldr	r0, [sp, #48]	; 0x30
   23134:	add	r0, r0, #1
   23138:	str	r0, [sp, #48]	; 0x30
   2313c:	str	r7, [sp, #36]	; 0x24
   23140:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   23144:	str	r8, [r5, #256]	; 0x100
   23148:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   2314c:	sub	r0, r8, #1
   23150:	str	r0, [sp, #68]	; 0x44
   23154:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   23158:	sub	r0, r8, #1
   2315c:	str	r0, [sp, #60]	; 0x3c
   23160:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   23164:	ldr	r0, [sp, #68]	; 0x44
   23168:	add	r0, r0, #1
   2316c:	str	r0, [sp, #68]	; 0x44
   23170:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   23174:	ldr	r0, [sp, #68]	; 0x44
   23178:	add	r0, r8, r0
   2317c:	sub	r0, r0, #1
   23180:	str	r0, [sp, #68]	; 0x44
   23184:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   23188:	str	r8, [r5, #260]	; 0x104
   2318c:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   23190:	sub	r0, r8, #1
   23194:	str	r0, [r5, #264]	; 0x108
   23198:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   2319c:	mov	r0, #1
   231a0:	str	r0, [sp, #1120]	; 0x460
   231a4:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   231a8:	mov	r0, #2
   231ac:	str	r0, [sp, #1120]	; 0x460
   231b0:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   231b4:	mov	r0, #3
   231b8:	str	r0, [sp, #1120]	; 0x460
   231bc:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   231c0:	mov	r0, #4
   231c4:	str	r0, [sp, #1120]	; 0x460
   231c8:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   231cc:	mov	r0, #5
   231d0:	str	r0, [sp, #1120]	; 0x460
   231d4:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   231d8:	str	r8, [sp, #2716]	; 0xa9c
   231dc:	mov	r0, #0
   231e0:	str	r0, [sp, #1120]	; 0x460
   231e4:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   231e8:	str	r8, [sp, #1112]	; 0x458
   231ec:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   231f0:	mov	r0, #44	; 0x2c
   231f4:	strb	r0, [sp, #3304]	; 0xce8
   231f8:	b	23264 <readstat_parse_stata_dictionary+0x5c4>
   231fc:	mov	r0, #1
   23200:	str	r0, [sp, #1116]	; 0x45c
   23204:	ldr	r0, [sp, #60]	; 0x3c
   23208:	add	r0, r8, r0
   2320c:	str	r0, [sp, #60]	; 0x3c
   23210:	mov	r7, r4
   23214:	ldr	r1, [r4, #268]	; 0x10c
   23218:	ldr	r0, [r4, #276]	; 0x114
   2321c:	mov	r4, #2208	; 0x8a0
   23220:	mul	r1, r1, r4
   23224:	add	r1, r1, #2208	; 0x8a0
   23228:	bl	4a70 <realloc@plt>
   2322c:	str	r0, [r7, #276]	; 0x114
   23230:	ldr	r1, [r7, #268]	; 0x10c
   23234:	add	r2, r1, #1
   23238:	str	r2, [r7, #268]	; 0x10c
   2323c:	mla	r0, r1, r4, r0
   23240:	add	r1, sp, #1104	; 0x450
   23244:	mov	r2, #2208	; 0x8a0
   23248:	bl	4998 <memcpy@plt>
   2324c:	ldr	r0, [sp, #56]	; 0x38
   23250:	add	r0, r0, #1
   23254:	str	r0, [sp, #56]	; 0x38
   23258:	mov	r8, r5
   2325c:	mov	r5, r7
   23260:	ldr	r7, [sp, #64]	; 0x40
   23264:	add	r9, r9, #1
   23268:	adds	r6, r6, #1
   2326c:	bne	22fa8 <readstat_parse_stata_dictionary+0x308>
   23270:	ldr	r0, [pc, #416]	; 23418 <readstat_parse_stata_dictionary+0x778>
   23274:	add	r0, pc, r0
   23278:	ldr	r1, [sp, #76]	; 0x4c
   2327c:	ldrb	r0, [r0, r1]
   23280:	cmp	r0, #0
   23284:	beq	232b0 <readstat_parse_stata_dictionary+0x610>
   23288:	add	r7, r7, #1
   2328c:	ldr	r1, [sp, #52]	; 0x34
   23290:	cmp	r7, r1
   23294:	mvn	r4, #1
   23298:	ldr	r9, [pc, #380]	; 2341c <readstat_parse_stata_dictionary+0x77c>
   2329c:	add	r9, pc, r9
   232a0:	mov	r6, r9
   232a4:	bne	22e04 <readstat_parse_stata_dictionary+0x164>
   232a8:	cmp	r0, #155	; 0x9b
   232ac:	bhi	233d8 <readstat_parse_stata_dictionary+0x738>
   232b0:	ldr	r0, [sp, #52]	; 0x34
   232b4:	mov	r4, r5
   232b8:	cmp	r7, r0
   232bc:	beq	2332c <readstat_parse_stata_dictionary+0x68c>
   232c0:	ldrb	r0, [r7], #1
   232c4:	ldr	r1, [sp, #36]	; 0x24
   232c8:	sub	r1, r7, r1
   232cc:	str	r1, [sp]
   232d0:	str	r0, [sp, #4]
   232d4:	ldr	r0, [sp, #48]	; 0x30
   232d8:	add	r3, r0, #1
   232dc:	add	r0, sp, #80	; 0x50
   232e0:	ldr	r2, [pc, #316]	; 23424 <readstat_parse_stata_dictionary+0x784>
   232e4:	add	r2, pc, r2
   232e8:	mov	r1, #1024	; 0x400
   232ec:	bl	4d04 <snprintf@plt>
   232f0:	b	2336c <readstat_parse_stata_dictionary+0x6cc>
   232f4:	mov	r0, #0
   232f8:	cmp	r9, #0
   232fc:	movne	r1, #1
   23300:	strne	r1, [r9]
   23304:	subne	sp, fp, #28
   23308:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2330c:	sub	sp, fp, #28
   23310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23314:	mov	r6, #15
   23318:	mov	r4, #0
   2331c:	b	23394 <readstat_parse_stata_dictionary+0x6f4>
   23320:	mov	r6, #3
   23324:	mov	r4, r0
   23328:	b	23394 <readstat_parse_stata_dictionary+0x6f4>
   2332c:	ldr	r0, [pc, #236]	; 23420 <readstat_parse_stata_dictionary+0x780>
   23330:	add	r0, pc, r0
   23334:	add	r1, r0, #32
   23338:	add	r2, sp, #80	; 0x50
   2333c:	mov	r3, #43	; 0x2b
   23340:	vld1.64	{d16-d17}, [r1]
   23344:	add	r1, r2, #32
   23348:	add	r7, r0, #16
   2334c:	vld1.64	{d18-d19}, [r0], r3
   23350:	vld1.64	{d20-d21}, [r7]
   23354:	vld1.8	{d22-d23}, [r0]
   23358:	vst1.64	{d16-d17}, [r1]
   2335c:	add	r0, r2, #16
   23360:	vst1.64	{d20-d21}, [r0]
   23364:	vst1.64	{d18-d19}, [r2], r3
   23368:	vst1.8	{d22-d23}, [r2]
   2336c:	ldr	r9, [sp, #8]
   23370:	ldr	r7, [sp, #32]
   23374:	ldr	r5, [sp, #12]
   23378:	ldr	r1, [sp, #20]
   2337c:	ldr	r2, [r7, #24]
   23380:	cmp	r2, #0
   23384:	beq	23390 <readstat_parse_stata_dictionary+0x6f0>
   23388:	add	r0, sp, #80	; 0x50
   2338c:	blx	r2
   23390:	mov	r6, #5
   23394:	ldr	r0, [r7, #32]
   23398:	ldr	r1, [r0, #4]
   2339c:	ldr	r0, [r0, #20]
   233a0:	blx	r1
   233a4:	mov	r0, r5
   233a8:	bl	4938 <free@plt>
   233ac:	cmp	r6, #0
   233b0:	moveq	r0, r4
   233b4:	subeq	sp, fp, #28
   233b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   233bc:	cmp	r9, #0
   233c0:	strne	r6, [r9]
   233c4:	mov	r0, r4
   233c8:	bl	4a28 <readstat_schema_free@plt>
   233cc:	mov	r0, #0
   233d0:	sub	sp, fp, #28
   233d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   233d8:	mov	r4, r5
   233dc:	mov	r6, #0
   233e0:	b	233e8 <readstat_parse_stata_dictionary+0x748>
   233e4:	mov	r6, #4
   233e8:	ldr	r9, [sp, #8]
   233ec:	ldr	r7, [sp, #32]
   233f0:	ldr	r5, [sp, #12]
   233f4:	b	23394 <readstat_parse_stata_dictionary+0x6f4>
   233f8:	.word	0x0001185b
   233fc:	.word	0x000110d2
   23400:	.word	0x00010e52
   23404:	.word	0x00010b08
   23408:	.word	0x00010f70
   2340c:	.word	0x00011773
   23410:	.word	0x000117d6
   23414:	.word	0x0001134d
   23418:	.word	0x00010d03
   2341c:	.word	0x0001137f
   23420:	.word	0x00011400
   23424:	.word	0x0001148c
   23428:	.word	0x000116c3

0002342c <readstat_parse_txt>:
   2342c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23430:	add	fp, sp, #28
   23434:	sub	sp, sp, #92	; 0x5c
   23438:	mov	r8, r3
   2343c:	mov	r7, r2
   23440:	mov	r4, r1
   23444:	mov	r6, r0
   23448:	ldr	sl, [r0, #32]
   2344c:	mov	r5, #0
   23450:	str	r5, [fp, #-36]	; 0xffffffdc
   23454:	str	r5, [fp, #-40]	; 0xffffffd8
   23458:	str	r2, [fp, #-32]	; 0xffffffe0
   2345c:	ldr	r0, [r0, #40]	; 0x28
   23460:	cmp	r0, #0
   23464:	ldrne	r1, [r6, #36]	; 0x24
   23468:	cmpne	r1, #0
   2346c:	bne	2354c <readstat_parse_txt+0x120>
   23470:	ldr	r2, [sl]
   23474:	ldr	r1, [sl, #20]
   23478:	mov	r0, r4
   2347c:	blx	r2
   23480:	cmn	r0, #1
   23484:	beq	23544 <readstat_parse_txt+0x118>
   23488:	str	r6, [sp, #12]
   2348c:	str	r8, [sp, #16]
   23490:	ldr	r6, [r7, #256]	; 0x100
   23494:	lsl	r0, r6, #2
   23498:	bl	4b9c <malloc@plt>
   2349c:	mov	r8, r0
   234a0:	mov	r9, #0
   234a4:	cmp	r0, #0
   234a8:	beq	23574 <readstat_parse_txt+0x148>
   234ac:	cmp	r6, #1
   234b0:	blt	234cc <readstat_parse_txt+0xa0>
   234b4:	ldr	r0, [r7, #260]	; 0x104
   234b8:	mov	r1, r6
   234bc:	mov	r2, r8
   234c0:	str	r0, [r2], #4
   234c4:	subs	r1, r1, #1
   234c8:	bne	234c0 <readstat_parse_txt+0x94>
   234cc:	str	r7, [sp, #20]
   234d0:	ldr	r0, [r7, #268]	; 0x10c
   234d4:	cmp	r0, #1
   234d8:	blt	23518 <readstat_parse_txt+0xec>
   234dc:	ldr	r1, [sp, #20]
   234e0:	ldr	r0, [r1, #268]	; 0x10c
   234e4:	ldr	r1, [r1, #276]	; 0x114
   234e8:	add	r1, r1, #4
   234ec:	mov	r2, #0
   234f0:	sub	r7, r1, #4
   234f4:	ldm	r7, {r3, r5, r7}
   234f8:	ldr	r4, [r8, r3, lsl #2]
   234fc:	add	r5, r7, r5
   23500:	cmp	r4, r5
   23504:	strcc	r5, [r8, r3, lsl #2]
   23508:	add	r1, r1, #2208	; 0x8a0
   2350c:	add	r2, r2, #1
   23510:	cmp	r2, r0
   23514:	blt	234f0 <readstat_parse_txt+0xc4>
   23518:	cmp	r6, #1
   2351c:	blt	23580 <readstat_parse_txt+0x154>
   23520:	mov	r0, #0
   23524:	mov	r1, r8
   23528:	ldr	r2, [r1], #4
   2352c:	cmp	r0, r2
   23530:	movcc	r0, r2
   23534:	subs	r6, r6, #1
   23538:	bne	23528 <readstat_parse_txt+0xfc>
   2353c:	add	r0, r0, #2
   23540:	b	23584 <readstat_parse_txt+0x158>
   23544:	mov	r6, #1
   23548:	b	23568 <readstat_parse_txt+0x13c>
   2354c:	bl	4bc0 <iconv_open@plt>
   23550:	str	r0, [fp, #-36]	; 0xffffffdc
   23554:	cmn	r0, #1
   23558:	bne	23470 <readstat_parse_txt+0x44>
   2355c:	mov	r5, #0
   23560:	str	r5, [fp, #-36]	; 0xffffffdc
   23564:	mov	r6, #7
   23568:	mov	r8, #0
   2356c:	mov	r9, #0
   23570:	b	236c0 <readstat_parse_txt+0x294>
   23574:	mov	r5, #0
   23578:	mov	r6, #3
   2357c:	b	236c0 <readstat_parse_txt+0x294>
   23580:	mov	r0, #2
   23584:	ldr	r5, [sp, #20]
   23588:	mov	r6, #3
   2358c:	bl	4b9c <malloc@plt>
   23590:	cmp	r0, #0
   23594:	beq	2361c <readstat_parse_txt+0x1f0>
   23598:	mov	r7, r0
   2359c:	ldr	r0, [r5, #264]	; 0x108
   235a0:	cmp	r0, #2
   235a4:	ldr	r9, [sp, #16]
   235a8:	ldr	r4, [sp, #12]
   235ac:	blt	235fc <readstat_parse_txt+0x1d0>
   235b0:	str	r7, [sp, #8]
   235b4:	mov	r1, #0
   235b8:	strb	r1, [sp, #24]
   235bc:	sub	r6, r0, #1
   235c0:	add	r7, sp, #24
   235c4:	ldr	r3, [sl, #12]
   235c8:	ldr	r2, [sl, #20]
   235cc:	mov	r0, r7
   235d0:	mov	r1, #1
   235d4:	blx	r3
   235d8:	cmp	r0, #1
   235dc:	bne	235ec <readstat_parse_txt+0x1c0>
   235e0:	ldrb	r0, [sp, #24]
   235e4:	cmp	r0, #10
   235e8:	bne	235c4 <readstat_parse_txt+0x198>
   235ec:	subs	r6, r6, #1
   235f0:	bne	235c4 <readstat_parse_txt+0x198>
   235f4:	ldr	r5, [sp, #20]
   235f8:	ldr	r7, [sp, #8]
   235fc:	ldrb	r0, [r5, #272]	; 0x110
   23600:	cmp	r0, #0
   23604:	beq	23624 <readstat_parse_txt+0x1f8>
   23608:	sub	r1, fp, #40	; 0x28
   2360c:	mov	r0, r4
   23610:	mov	r2, r9
   23614:	bl	23708 <txt_parse_delimited>
   23618:	b	2363c <readstat_parse_txt+0x210>
   2361c:	mov	r5, r8
   23620:	b	236c0 <readstat_parse_txt+0x294>
   23624:	str	r7, [sp]
   23628:	sub	r1, fp, #40	; 0x28
   2362c:	mov	r0, r4
   23630:	mov	r2, r9
   23634:	mov	r3, r8
   23638:	bl	23870 <txt_parse_fixed_width>
   2363c:	mov	r6, r0
   23640:	cmp	r0, #0
   23644:	bne	236b8 <readstat_parse_txt+0x28c>
   23648:	ldr	r2, [r4]
   2364c:	cmp	r2, #0
   23650:	beq	236b4 <readstat_parse_txt+0x288>
   23654:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23658:	str	r0, [sp, #24]
   2365c:	asr	r0, r0, #31
   23660:	str	r0, [sp, #28]
   23664:	ldr	r1, [r5, #268]	; 0x10c
   23668:	add	r0, sp, #24
   2366c:	vmov.i32	q8, #0	; 0x00000000
   23670:	add	r3, r0, #32
   23674:	vst1.64	{d16-d17}, [r3]
   23678:	add	r3, r0, #16
   2367c:	vst1.64	{d16-d17}, [r3]
   23680:	mov	r3, #0
   23684:	str	r3, [sp, #72]	; 0x48
   23688:	ldrb	r3, [sp, #76]	; 0x4c
   2368c:	and	r3, r3, #254	; 0xfe
   23690:	strb	r3, [sp, #76]	; 0x4c
   23694:	str	r1, [sp, #32]
   23698:	asr	r1, r1, #31
   2369c:	str	r1, [sp, #36]	; 0x24
   236a0:	mov	r1, r9
   236a4:	blx	r2
   236a8:	cmp	r0, #1
   236ac:	movweq	r6, #4
   236b0:	b	236b8 <readstat_parse_txt+0x28c>
   236b4:	mov	r6, #0
   236b8:	mov	r5, r8
   236bc:	mov	r9, r7
   236c0:	ldr	r1, [sl, #4]
   236c4:	ldr	r0, [sl, #20]
   236c8:	blx	r1
   236cc:	cmp	r9, #0
   236d0:	beq	236dc <readstat_parse_txt+0x2b0>
   236d4:	mov	r0, r9
   236d8:	bl	4938 <free@plt>
   236dc:	cmp	r8, #0
   236e0:	beq	236ec <readstat_parse_txt+0x2c0>
   236e4:	mov	r0, r5
   236e8:	bl	4938 <free@plt>
   236ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   236f0:	cmp	r0, #0
   236f4:	beq	236fc <readstat_parse_txt+0x2d0>
   236f8:	bl	4848 <iconv_close@plt>
   236fc:	mov	r0, r6
   23700:	sub	sp, fp, #28
   23704:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023708 <txt_parse_delimited>:
   23708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2370c:	add	fp, sp, #28
   23710:	sub	sp, sp, #36	; 0x24
   23714:	str	r2, [sp, #16]
   23718:	mov	r4, r1
   2371c:	mov	r7, r0
   23720:	mov	r0, #4096	; 0x1000
   23724:	str	r0, [sp, #32]
   23728:	mov	r0, #4096	; 0x1000
   2372c:	bl	4b9c <malloc@plt>
   23730:	str	r0, [sp, #28]
   23734:	ldr	r6, [r7, #32]
   23738:	str	r4, [sp, #20]
   2373c:	ldr	r9, [r4, #8]
   23740:	mov	r0, #0
   23744:	str	r0, [sp, #24]
   23748:	ldr	r0, [r9, #268]	; 0x10c
   2374c:	cmp	r0, #1
   23750:	blt	2381c <txt_parse_delimited+0x114>
   23754:	mov	sl, #0
   23758:	mov	r4, #0
   2375c:	ldr	r5, [r9, #276]	; 0x114
   23760:	sub	r0, r0, #1
   23764:	mov	r2, #10
   23768:	cmp	r4, r0
   2376c:	ldrbne	r2, [r9, #272]	; 0x110
   23770:	add	r0, sp, #28
   23774:	add	r1, sp, #32
   23778:	mov	r3, r6
   2377c:	bl	23a3c <txt_getdelim>
   23780:	cmn	r0, #1
   23784:	beq	2383c <txt_parse_delimited+0x134>
   23788:	mov	r8, r0
   2378c:	cmp	r0, #0
   23790:	beq	23848 <txt_parse_delimited+0x140>
   23794:	ldr	r0, [r7, #16]
   23798:	cmp	r0, #0
   2379c:	beq	23808 <txt_parse_delimited+0x100>
   237a0:	add	r3, r5, sl
   237a4:	ldr	r0, [r3, #12]
   237a8:	cmp	r0, #0
   237ac:	bne	23808 <txt_parse_delimited+0x100>
   237b0:	sub	r0, r8, #1
   237b4:	cmp	r8, #2
   237b8:	blt	237d0 <txt_parse_delimited+0xc8>
   237bc:	sub	r1, r8, #2
   237c0:	ldr	r2, [sp, #28]
   237c4:	ldrb	r2, [r2, r1]
   237c8:	cmp	r2, #13
   237cc:	moveq	r0, r1
   237d0:	ldr	r2, [sp, #28]
   237d4:	mov	r1, #0
   237d8:	strb	r1, [r2, r0]
   237dc:	ldr	r1, [sp, #20]
   237e0:	ldr	r1, [r1, #4]
   237e4:	str	r2, [sp]
   237e8:	str	r0, [sp, #4]
   237ec:	ldr	r0, [sp, #16]
   237f0:	str	r0, [sp, #8]
   237f4:	mov	r0, r7
   237f8:	ldr	r2, [sp, #24]
   237fc:	bl	23b20 <handle_value>
   23800:	cmp	r0, #0
   23804:	bne	23844 <txt_parse_delimited+0x13c>
   23808:	add	sl, sl, #2208	; 0x8a0
   2380c:	add	r4, r4, #1
   23810:	ldr	r0, [r9, #268]	; 0x10c
   23814:	cmp	r4, r0
   23818:	blt	2375c <txt_parse_delimited+0x54>
   2381c:	ldr	r1, [sp, #24]
   23820:	add	r1, r1, #1
   23824:	ldr	r0, [r7, #44]	; 0x2c
   23828:	str	r1, [sp, #24]
   2382c:	cmp	r1, r0
   23830:	bne	23748 <txt_parse_delimited+0x40>
   23834:	mov	r8, #0
   23838:	b	23848 <txt_parse_delimited+0x140>
   2383c:	mov	r8, #2
   23840:	b	23848 <txt_parse_delimited+0x140>
   23844:	mov	r8, r0
   23848:	ldr	r0, [sp, #20]
   2384c:	ldr	r1, [sp, #24]
   23850:	str	r1, [r0]
   23854:	ldr	r0, [sp, #28]
   23858:	cmp	r0, #0
   2385c:	beq	23864 <txt_parse_delimited+0x15c>
   23860:	bl	4938 <free@plt>
   23864:	mov	r0, r8
   23868:	sub	sp, fp, #28
   2386c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023870 <txt_parse_fixed_width>:
   23870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23874:	add	fp, sp, #28
   23878:	sub	sp, sp, #44	; 0x2c
   2387c:	sub	sp, sp, #4096	; 0x1000
   23880:	mov	r8, r3
   23884:	str	r2, [sp, #16]
   23888:	str	r0, [sp, #32]
   2388c:	ldr	r4, [r0, #32]
   23890:	str	r1, [sp, #20]
   23894:	ldr	r5, [r1, #8]
   23898:	mov	r0, #0
   2389c:	str	r0, [sp, #28]
   238a0:	str	r3, [sp, #24]
   238a4:	ldr	r0, [r5, #256]	; 0x100
   238a8:	cmp	r0, #1
   238ac:	blt	23a00 <txt_parse_fixed_width+0x190>
   238b0:	mov	r6, #0
   238b4:	mov	r7, #0
   238b8:	ldr	r1, [r8, r7, lsl #2]
   238bc:	ldr	r3, [r4, #12]
   238c0:	ldr	r2, [r4, #20]
   238c4:	ldr	r0, [fp, #8]
   238c8:	blx	r3
   238cc:	cmp	r0, #0
   238d0:	beq	23a1c <txt_parse_fixed_width+0x1ac>
   238d4:	ldr	r1, [r8, r7, lsl #2]
   238d8:	cmp	r0, r1
   238dc:	bcc	23a24 <txt_parse_fixed_width+0x1b4>
   238e0:	ldr	r0, [r5, #268]	; 0x10c
   238e4:	cmp	r6, r0
   238e8:	bge	239a4 <txt_parse_fixed_width+0x134>
   238ec:	mov	r0, #2208	; 0x8a0
   238f0:	mul	r8, r6, r0
   238f4:	mov	r2, #0
   238f8:	ldr	r0, [r5, #276]	; 0x114
   238fc:	mov	r9, r0
   23900:	ldr	r1, [r9, r8]!
   23904:	cmp	r1, r7
   23908:	bne	239a8 <txt_parse_fixed_width+0x138>
   2390c:	add	r0, r0, r8
   23910:	ldr	sl, [r0, #8]
   23914:	cmp	r2, sl, lsr #12
   23918:	bne	2398c <txt_parse_fixed_width+0x11c>
   2391c:	ldr	r1, [sp, #32]
   23920:	ldr	r1, [r1, #16]
   23924:	cmp	r1, #0
   23928:	beq	2398c <txt_parse_fixed_width+0x11c>
   2392c:	ldr	r1, [r0, #12]
   23930:	cmp	r1, #0
   23934:	bne	2398c <txt_parse_fixed_width+0x11c>
   23938:	ldr	r0, [r0, #4]
   2393c:	ldr	r1, [fp, #8]
   23940:	add	r1, r1, r0
   23944:	add	r0, sp, #40	; 0x28
   23948:	mov	r2, sl
   2394c:	bl	4998 <memcpy@plt>
   23950:	mov	r0, #0
   23954:	add	r2, sp, #40	; 0x28
   23958:	strb	r0, [r2, sl]
   2395c:	ldr	r0, [sp, #20]
   23960:	ldr	r1, [r0, #4]
   23964:	stm	sp, {r2, sl}
   23968:	ldr	r0, [sp, #16]
   2396c:	str	r0, [sp, #8]
   23970:	ldr	r0, [sp, #32]
   23974:	ldr	r2, [sp, #28]
   23978:	mov	r3, r9
   2397c:	bl	23b20 <handle_value>
   23980:	mov	r2, #0
   23984:	cmp	r0, #0
   23988:	bne	23a28 <txt_parse_fixed_width+0x1b8>
   2398c:	add	r8, r8, #2208	; 0x8a0
   23990:	add	r6, r6, #1
   23994:	ldr	r0, [r5, #268]	; 0x10c
   23998:	cmp	r6, r0
   2399c:	blt	238f8 <txt_parse_fixed_width+0x88>
   239a0:	b	239a8 <txt_parse_fixed_width+0x138>
   239a4:	mov	r2, #0
   239a8:	ldr	r0, [r5, #260]	; 0x104
   239ac:	cmp	r0, #0
   239b0:	ldr	r8, [sp, #24]
   239b4:	mov	r9, r5
   239b8:	add	r5, sp, #39	; 0x27
   239bc:	bne	239ec <txt_parse_fixed_width+0x17c>
   239c0:	strb	r2, [sp, #39]	; 0x27
   239c4:	ldr	r3, [r4, #12]
   239c8:	ldr	r2, [r4, #20]
   239cc:	mov	r0, r5
   239d0:	mov	r1, #1
   239d4:	blx	r3
   239d8:	cmp	r0, #1
   239dc:	bne	239ec <txt_parse_fixed_width+0x17c>
   239e0:	ldrb	r0, [sp, #39]	; 0x27
   239e4:	cmp	r0, #10
   239e8:	bne	239c4 <txt_parse_fixed_width+0x154>
   239ec:	ldr	r0, [r9, #256]	; 0x100
   239f0:	add	r7, r7, #1
   239f4:	cmp	r7, r0
   239f8:	mov	r5, r9
   239fc:	blt	238b8 <txt_parse_fixed_width+0x48>
   23a00:	ldr	r1, [sp, #28]
   23a04:	add	r1, r1, #1
   23a08:	ldr	r0, [sp, #32]
   23a0c:	ldr	r0, [r0, #44]	; 0x2c
   23a10:	str	r1, [sp, #28]
   23a14:	cmp	r1, r0
   23a18:	bne	238a4 <txt_parse_fixed_width+0x34>
   23a1c:	mov	r0, #0
   23a20:	b	23a28 <txt_parse_fixed_width+0x1b8>
   23a24:	mov	r0, #2
   23a28:	ldr	r1, [sp, #20]
   23a2c:	ldr	r2, [sp, #28]
   23a30:	str	r2, [r1]
   23a34:	sub	sp, fp, #28
   23a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023a3c <txt_getdelim>:
   23a3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a40:	add	fp, sp, #28
   23a44:	sub	sp, sp, #12
   23a48:	mov	r7, r3
   23a4c:	str	r2, [sp, #8]
   23a50:	mov	r8, r1
   23a54:	mov	r9, r0
   23a58:	ldr	r5, [r1]
   23a5c:	ldr	r3, [r3, #12]
   23a60:	ldr	r2, [r7, #20]
   23a64:	ldr	r6, [r0]
   23a68:	mov	r4, #1
   23a6c:	mov	r0, r6
   23a70:	mov	r1, #1
   23a74:	blx	r3
   23a78:	cmp	r0, #1
   23a7c:	bne	23aec <txt_getdelim+0xb0>
   23a80:	str	r9, [sp]
   23a84:	str	r8, [sp, #4]
   23a88:	mov	r9, #0
   23a8c:	mov	r8, r6
   23a90:	mov	sl, r4
   23a94:	ldrb	r0, [r6]
   23a98:	ldr	r1, [sp, #8]
   23a9c:	cmp	r0, r1
   23aa0:	beq	23af4 <txt_getdelim+0xb8>
   23aa4:	add	r9, r9, #1
   23aa8:	cmp	sl, r5
   23aac:	bne	23ac4 <txt_getdelim+0x88>
   23ab0:	lsl	r5, r5, #1
   23ab4:	mov	r0, r8
   23ab8:	mov	r1, r5
   23abc:	bl	4a70 <realloc@plt>
   23ac0:	mov	r8, r0
   23ac4:	add	r6, r8, r9
   23ac8:	add	r0, r8, sl
   23acc:	ldr	r3, [r7, #12]
   23ad0:	ldr	r2, [r7, #20]
   23ad4:	mov	r1, #1
   23ad8:	blx	r3
   23adc:	add	r4, sl, #1
   23ae0:	cmp	r0, #1
   23ae4:	beq	23a90 <txt_getdelim+0x54>
   23ae8:	b	23af8 <txt_getdelim+0xbc>
   23aec:	mov	sl, #0
   23af0:	b	23b04 <txt_getdelim+0xc8>
   23af4:	mov	r0, #1
   23af8:	mov	r6, r8
   23afc:	ldr	r8, [sp, #4]
   23b00:	ldr	r9, [sp]
   23b04:	str	r6, [r9]
   23b08:	str	r5, [r8]
   23b0c:	cmn	r0, #1
   23b10:	moveq	sl, r0
   23b14:	mov	r0, sl
   23b18:	sub	sp, fp, #28
   23b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023b20 <handle_value>:
   23b20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23b24:	add	fp, sp, #28
   23b28:	sub	sp, sp, #12
   23b2c:	mov	r4, r3
   23b30:	str	r2, [fp, #-40]	; 0xffffffd8
   23b34:	mov	r8, r1
   23b38:	mov	r7, r0
   23b3c:	ldr	r6, [fp, #12]
   23b40:	mov	r0, #1
   23b44:	orr	r9, r0, r6, lsl #2
   23b48:	add	r0, r9, #7
   23b4c:	bic	r0, r0, #7
   23b50:	sub	r5, sp, r0
   23b54:	mov	sp, r5
   23b58:	ldr	sl, [r4, #16]!
   23b5c:	mov	r0, sl
   23b60:	bl	489c <readstat_type_class@plt>
   23b64:	ldr	r3, [fp, #8]
   23b68:	cmp	r0, #0
   23b6c:	beq	23ba8 <handle_value+0x88>
   23b70:	mov	r6, #0
   23b74:	str	r6, [fp, #-36]	; 0xffffffdc
   23b78:	ldr	r0, [r4]
   23b7c:	sub	r1, fp, #36	; 0x24
   23b80:	cmp	r0, #4
   23b84:	beq	23bd8 <handle_value+0xb8>
   23b88:	cmp	r0, #5
   23b8c:	bne	23bf0 <handle_value+0xd0>
   23b90:	mov	r0, r3
   23b94:	mov	r5, r3
   23b98:	bl	4d88 <strtod@plt>
   23b9c:	mov	r3, r5
   23ba0:	vmov	r5, r6, d0
   23ba4:	b	23c10 <handle_value+0xf0>
   23ba8:	sub	sp, sp, #8
   23bac:	str	r8, [sp]
   23bb0:	mov	r0, r5
   23bb4:	mov	r1, r9
   23bb8:	mov	r2, r3
   23bbc:	mov	r3, r6
   23bc0:	bl	4cbc <readstat_convert@plt>
   23bc4:	add	sp, sp, #8
   23bc8:	cmp	r0, #0
   23bcc:	beq	23c70 <handle_value+0x150>
   23bd0:	sub	sp, fp, #28
   23bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23bd8:	mov	r0, r3
   23bdc:	mov	r5, r3
   23be0:	bl	4b48 <strtof@plt>
   23be4:	mov	r3, r5
   23be8:	vmov	r5, s0
   23bec:	b	23c10 <handle_value+0xf0>
   23bf0:	mov	r0, r3
   23bf4:	mov	r2, #10
   23bf8:	mov	r5, r3
   23bfc:	bl	48a8 <strtol@plt>
   23c00:	mov	r3, r5
   23c04:	mov	r5, r0
   23c08:	mov	r6, #0
   23c0c:	mov	sl, #3
   23c10:	mov	r2, #0
   23c14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23c18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23c1c:	sub	r1, r1, r3
   23c20:	clz	r1, r1
   23c24:	lsr	r1, r1, #5
   23c28:	orr	r2, r2, r1, lsl #8
   23c2c:	ldr	r1, [fp, #16]
   23c30:	ldr	r7, [r7, #16]
   23c34:	sub	sp, sp, #16
   23c38:	str	sl, [sp]
   23c3c:	str	r2, [sp, #4]
   23c40:	str	r1, [sp, #8]
   23c44:	mov	r1, r4
   23c48:	mov	r2, r5
   23c4c:	mov	r3, r6
   23c50:	blx	r7
   23c54:	add	sp, sp, #16
   23c58:	sub	r0, r0, #1
   23c5c:	clz	r0, r0
   23c60:	lsr	r0, r0, #5
   23c64:	lsl	r0, r0, #2
   23c68:	sub	sp, fp, #28
   23c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c70:	mov	r6, #0
   23c74:	mov	r2, #0
   23c78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   23c7c:	b	23c2c <handle_value+0x10c>

00023c80 <zsav_ctx_init>:
   23c80:	push	{r4, r5, r6, r7, fp, lr}
   23c84:	add	fp, sp, #16
   23c88:	mov	r4, r3
   23c8c:	mov	r5, r2
   23c90:	mov	r6, r0
   23c94:	mov	r0, #1
   23c98:	mov	r1, #40	; 0x28
   23c9c:	bl	47d0 <calloc@plt>
   23ca0:	mov	r7, r0
   23ca4:	mov	r0, r6
   23ca8:	bl	4b9c <malloc@plt>
   23cac:	str	r0, [r7]
   23cb0:	mov	r0, #10
   23cb4:	str	r0, [r7, #12]
   23cb8:	mov	r0, #10
   23cbc:	mov	r1, #4
   23cc0:	bl	47d0 <calloc@plt>
   23cc4:	mov	r1, #0
   23cc8:	movw	r2, #61440	; 0xf000
   23ccc:	movt	r2, #63	; 0x3f
   23cd0:	str	r0, [r7, #4]
   23cd4:	mvn	r0, #0
   23cd8:	str	r2, [r7, #16]
   23cdc:	str	r1, [r7, #20]
   23ce0:	str	r5, [r7, #24]
   23ce4:	str	r4, [r7, #28]
   23ce8:	str	r0, [r7, #32]
   23cec:	mov	r0, r7
   23cf0:	pop	{r4, r5, r6, r7, fp, pc}

00023cf4 <zsav_ctx_free>:
   23cf4:	push	{r4, r5, r6, sl, fp, lr}
   23cf8:	add	fp, sp, #16
   23cfc:	mov	r4, r0
   23d00:	ldr	r0, [r0, #8]
   23d04:	cmp	r0, #1
   23d08:	blt	23d40 <zsav_ctx_free+0x4c>
   23d0c:	mov	r6, #0
   23d10:	ldr	r0, [r4, #4]
   23d14:	ldr	r5, [r0, r6, lsl #2]
   23d18:	add	r0, r5, #8
   23d1c:	bl	4da0 <deflateEnd@plt>
   23d20:	ldr	r0, [r5, #64]	; 0x40
   23d24:	bl	4938 <free@plt>
   23d28:	mov	r0, r5
   23d2c:	bl	4938 <free@plt>
   23d30:	add	r6, r6, #1
   23d34:	ldr	r0, [r4, #8]
   23d38:	cmp	r6, r0
   23d3c:	blt	23d10 <zsav_ctx_free+0x1c>
   23d40:	ldr	r0, [r4, #4]
   23d44:	bl	4938 <free@plt>
   23d48:	ldr	r0, [r4]
   23d4c:	bl	4938 <free@plt>
   23d50:	mov	r0, r4
   23d54:	pop	{r4, r5, r6, sl, fp, lr}
   23d58:	b	4938 <free@plt>

00023d5c <zsav_add_block>:
   23d5c:	push	{r4, r5, r6, sl, fp, lr}
   23d60:	add	fp, sp, #16
   23d64:	mov	r4, r0
   23d68:	ldrd	r0, [r0, #8]
   23d6c:	cmp	r0, r1
   23d70:	bne	23d8c <zsav_add_block+0x30>
   23d74:	lsl	r0, r1, #1
   23d78:	str	r0, [r4, #12]
   23d7c:	ldr	r0, [r4, #4]
   23d80:	lsl	r1, r1, #3
   23d84:	bl	4a70 <realloc@plt>
   23d88:	str	r0, [r4, #4]
   23d8c:	mov	r0, #1
   23d90:	mov	r1, #72	; 0x48
   23d94:	bl	47d0 <calloc@plt>
   23d98:	mov	r5, r0
   23d9c:	ldmib	r4, {r0, r1}
   23da0:	add	r2, r1, #1
   23da4:	str	r2, [r4, #8]
   23da8:	str	r5, [r0, r1, lsl #2]
   23dac:	add	r6, r5, #8
   23db0:	ldr	r1, [r4, #32]
   23db4:	ldr	r2, [pc, #44]	; 23de8 <zsav_add_block+0x8c>
   23db8:	add	r2, pc, r2
   23dbc:	mov	r0, r6
   23dc0:	mov	r3, #56	; 0x38
   23dc4:	bl	4bb4 <deflateInit_@plt>
   23dc8:	ldr	r1, [r4, #16]
   23dcc:	mov	r0, r6
   23dd0:	bl	48fc <deflateBound@plt>
   23dd4:	str	r0, [r5, #68]	; 0x44
   23dd8:	bl	4b9c <malloc@plt>
   23ddc:	str	r0, [r5, #64]	; 0x40
   23de0:	mov	r0, r5
   23de4:	pop	{r4, r5, r6, sl, fp, pc}
   23de8:	.word	0x000109ef

00023dec <zsav_current_block>:
   23dec:	ldr	r1, [r0, #8]
   23df0:	cmp	r1, #0
   23df4:	moveq	r0, #0
   23df8:	ldrne	r0, [r0, #4]
   23dfc:	addne	r0, r0, r1, lsl #2
   23e00:	ldrne	r0, [r0, #-4]
   23e04:	bx	lr

00023e08 <zsav_compress_row>:
   23e08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e0c:	add	fp, sp, #28
   23e10:	sub	sp, sp, #12
   23e14:	mov	r4, r3
   23e18:	str	r2, [sp]
   23e1c:	mov	r9, r1
   23e20:	mov	sl, r0
   23e24:	mov	r0, r3
   23e28:	bl	4b24 <zsav_current_block@plt>
   23e2c:	mov	r5, r0
   23e30:	cmp	r0, #0
   23e34:	bne	23e44 <zsav_compress_row+0x3c>
   23e38:	mov	r0, r4
   23e3c:	bl	4ba8 <zsav_add_block@plt>
   23e40:	mov	r5, r0
   23e44:	str	sl, [r5, #8]
   23e48:	str	r9, [r5, #12]
   23e4c:	ldr	r8, [r5]
   23e50:	ldr	r0, [r5, #4]
   23e54:	ldr	r1, [r5, #64]	; 0x40
   23e58:	ldr	r2, [r5, #68]	; 0x44
   23e5c:	add	r1, r1, r0
   23e60:	sub	r0, r2, r0
   23e64:	str	r1, [r5, #20]
   23e68:	str	r0, [r5, #24]
   23e6c:	mov	r7, r4
   23e70:	ldr	r6, [r7, #16]!
   23e74:	ldr	r1, [r7, #4]
   23e78:	subs	r0, r6, r8
   23e7c:	sbc	r1, r1, r8, asr #31
   23e80:	subs	r2, r0, r9
   23e84:	sbcs	r1, r1, #0
   23e88:	bge	23f2c <zsav_compress_row+0x124>
   23e8c:	str	sl, [sp, #4]
   23e90:	mov	sl, r9
   23e94:	str	r4, [sp, #8]
   23e98:	mov	r4, #0
   23e9c:	str	r0, [r5, #12]
   23ea0:	add	r0, r5, #8
   23ea4:	mov	r1, #4
   23ea8:	bl	4ab8 <deflate@plt>
   23eac:	cmp	r0, #1
   23eb0:	bne	23f64 <zsav_compress_row+0x15c>
   23eb4:	sub	r0, r6, r8
   23eb8:	add	r4, r0, r4
   23ebc:	ldr	r0, [r5, #12]
   23ec0:	ldr	r1, [r5, #24]
   23ec4:	ldr	r2, [r5, #68]	; 0x44
   23ec8:	sub	r1, r2, r1
   23ecc:	str	r1, [r5, #4]
   23ed0:	ldr	r1, [r7]
   23ed4:	sub	r0, r1, r0
   23ed8:	str	r0, [r5]
   23edc:	ldr	r0, [sp, #4]
   23ee0:	add	r6, r0, r4
   23ee4:	ldr	r0, [sp, #8]
   23ee8:	bl	4ba8 <zsav_add_block@plt>
   23eec:	mov	r5, r0
   23ef0:	sub	r9, sl, r4
   23ef4:	str	r6, [r0, #8]
   23ef8:	str	r9, [r0, #12]
   23efc:	ldr	r8, [r0]
   23f00:	ldr	r0, [r0, #64]	; 0x40
   23f04:	ldr	r1, [r5, #68]	; 0x44
   23f08:	str	r0, [r5, #20]
   23f0c:	str	r1, [r5, #24]
   23f10:	ldr	r6, [r7]
   23f14:	ldr	r1, [r7, #4]
   23f18:	subs	r0, r6, r8
   23f1c:	sbc	r1, r1, r8, asr #31
   23f20:	subs	r2, r0, r9
   23f24:	sbcs	r1, r1, #0
   23f28:	blt	23e9c <zsav_compress_row+0x94>
   23f2c:	add	r0, r5, #8
   23f30:	ldr	r1, [sp]
   23f34:	cmp	r1, #0
   23f38:	movwne	r1, #4
   23f3c:	bl	4ab8 <deflate@plt>
   23f40:	ldr	r1, [r5, #12]
   23f44:	ldr	r2, [r5, #24]
   23f48:	ldr	r3, [r5, #68]	; 0x44
   23f4c:	sub	r2, r3, r2
   23f50:	str	r2, [r5, #4]
   23f54:	sub	r1, r9, r1
   23f58:	ldr	r2, [r5]
   23f5c:	add	r1, r1, r2
   23f60:	str	r1, [r5]
   23f64:	sub	sp, fp, #28
   23f68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023f6c <zsav_read_compressed_data>:
   23f6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23f70:	add	fp, sp, #28
   23f74:	sub	sp, sp, #140	; 0x8c
   23f78:	mov	r8, r1
   23f7c:	mov	r5, r0
   23f80:	ldr	sl, [r0, #36]	; 0x24
   23f84:	ldr	r7, [r0, #344]	; 0x158
   23f88:	mov	r0, #0
   23f8c:	str	r0, [fp, #-32]	; 0xffffffe0
   23f90:	vmov.i32	q8, #0	; 0x00000000
   23f94:	mov	r1, #48	; 0x30
   23f98:	add	r2, sp, #80	; 0x50
   23f9c:	vst1.64	{d16-d17}, [r2], r1
   23fa0:	ldr	r1, [r5, #392]	; 0x188
   23fa4:	ldr	r3, [r5, #396]	; 0x18c
   23fa8:	str	r3, [sp, #100]	; 0x64
   23fac:	str	r1, [sp, #96]	; 0x60
   23fb0:	vldr	d16, [r5, #416]	; 0x1a0
   23fb4:	str	r0, [sp, #116]	; 0x74
   23fb8:	str	r0, [sp, #112]	; 0x70
   23fbc:	str	r0, [sp, #120]	; 0x78
   23fc0:	vstr	d16, [sp, #104]	; 0x68
   23fc4:	ldrb	r1, [r5, #436]	; 0x1b4
   23fc8:	str	r0, [r2]
   23fcc:	and	r0, r1, #1
   23fd0:	str	r0, [sp, #124]	; 0x7c
   23fd4:	ldr	r3, [sl, #12]
   23fd8:	ldr	r2, [sl, #20]
   23fdc:	add	r6, sp, #56	; 0x38
   23fe0:	mov	r0, r6
   23fe4:	mov	r1, #24
   23fe8:	blx	r3
   23fec:	mov	r2, #2
   23ff0:	cmp	r0, #24
   23ff4:	bcc	244f0 <zsav_read_compressed_data+0x584>
   23ff8:	ldrb	r2, [r5, #436]	; 0x1b4
   23ffc:	ldr	r0, [sp, #56]	; 0x38
   24000:	ldr	r1, [sp, #60]	; 0x3c
   24004:	tst	r2, #1
   24008:	beq	24010 <zsav_read_compressed_data+0xa4>
   2400c:	bl	47f4 <byteswap8@plt>
   24010:	str	r0, [sp, #56]	; 0x38
   24014:	str	r1, [sp, #60]	; 0x3c
   24018:	add	r4, r6, #8
   2401c:	ldrb	r2, [r5, #436]	; 0x1b4
   24020:	ldr	r0, [sp, #64]	; 0x40
   24024:	ldr	r1, [sp, #68]	; 0x44
   24028:	tst	r2, #1
   2402c:	beq	24034 <zsav_read_compressed_data+0xc8>
   24030:	bl	47f4 <byteswap8@plt>
   24034:	strd	r0, [r4]
   24038:	add	r6, r6, #16
   2403c:	ldrb	r2, [r5, #436]	; 0x1b4
   24040:	ldr	r0, [sp, #72]	; 0x48
   24044:	ldr	r1, [sp, #76]	; 0x4c
   24048:	tst	r2, #1
   2404c:	str	r8, [sp, #28]
   24050:	str	r7, [sp, #24]
   24054:	beq	2405c <zsav_read_compressed_data+0xf0>
   24058:	bl	47f4 <byteswap8@plt>
   2405c:	strd	r0, [r6]
   24060:	ldr	r3, [sl, #8]
   24064:	ldr	r2, [sl, #20]
   24068:	ldr	r9, [sp, #56]	; 0x38
   2406c:	ldr	r8, [sp, #60]	; 0x3c
   24070:	mov	r0, #0
   24074:	mov	r1, #1
   24078:	blx	r3
   2407c:	sub	r0, r0, #24
   24080:	eor	r0, r9, r0
   24084:	orrs	r0, r0, r8
   24088:	bne	24194 <zsav_read_compressed_data+0x228>
   2408c:	ldrd	r8, [r6]
   24090:	ldr	r0, [r4]
   24094:	ldr	r3, [sl, #8]
   24098:	ldr	r2, [sl, #20]
   2409c:	mov	r1, #0
   240a0:	blx	r3
   240a4:	mov	r6, r0
   240a8:	subs	r0, r8, #24
   240ac:	sbc	r1, r9, #0
   240b0:	mov	r2, #24
   240b4:	mov	r3, #0
   240b8:	bl	24d5c <__aeabi_uldivmod>
   240bc:	cmn	r6, #1
   240c0:	beq	2419c <zsav_read_compressed_data+0x230>
   240c4:	mov	r9, r0
   240c8:	ldr	r3, [sl, #12]
   240cc:	ldr	r2, [sl, #20]
   240d0:	add	r6, sp, #32
   240d4:	mov	r0, r6
   240d8:	mov	r1, #24
   240dc:	blx	r3
   240e0:	cmp	r0, #24
   240e4:	mov	r2, #2
   240e8:	bcc	244f0 <zsav_read_compressed_data+0x584>
   240ec:	ldrb	r2, [r5, #436]	; 0x1b4
   240f0:	ldr	r0, [sp, #32]
   240f4:	ldr	r1, [sp, #36]	; 0x24
   240f8:	tst	r2, #1
   240fc:	beq	24104 <zsav_read_compressed_data+0x198>
   24100:	bl	47f4 <byteswap8@plt>
   24104:	str	r0, [sp, #32]
   24108:	str	r1, [sp, #36]	; 0x24
   2410c:	add	r4, r6, #8
   24110:	ldrb	r2, [r5, #436]	; 0x1b4
   24114:	ldr	r0, [sp, #40]	; 0x28
   24118:	ldr	r1, [sp, #44]	; 0x2c
   2411c:	tst	r2, #1
   24120:	beq	24128 <zsav_read_compressed_data+0x1bc>
   24124:	bl	47f4 <byteswap8@plt>
   24128:	strd	r0, [r4]
   2412c:	ldrb	r1, [r5, #436]	; 0x1b4
   24130:	ldr	r0, [sp, #48]	; 0x30
   24134:	tst	r1, #1
   24138:	beq	24140 <zsav_read_compressed_data+0x1d4>
   2413c:	bl	480c <byteswap4@plt>
   24140:	str	r0, [sp, #48]	; 0x30
   24144:	ldrb	r1, [r5, #436]	; 0x1b4
   24148:	ldr	r0, [sp, #52]	; 0x34
   2414c:	tst	r1, #1
   24150:	beq	24158 <zsav_read_compressed_data+0x1ec>
   24154:	bl	480c <byteswap4@plt>
   24158:	str	r0, [sp, #52]	; 0x34
   2415c:	cmp	r0, r9
   24160:	mov	r2, #5
   24164:	bne	244f0 <zsav_read_compressed_data+0x584>
   24168:	mov	r7, #0
   2416c:	cmp	r9, #0
   24170:	beq	241a4 <zsav_read_compressed_data+0x238>
   24174:	add	r0, r9, r9, lsl #1
   24178:	lsl	r0, r0, #3
   2417c:	bl	4cb0 <readstat_malloc@plt>
   24180:	mov	r8, r0
   24184:	cmp	r0, #0
   24188:	beq	24444 <zsav_read_compressed_data+0x4d8>
   2418c:	mov	r6, r8
   24190:	b	241ac <zsav_read_compressed_data+0x240>
   24194:	mov	r2, #5
   24198:	b	244f0 <zsav_read_compressed_data+0x584>
   2419c:	mov	r2, #15
   241a0:	b	244f0 <zsav_read_compressed_data+0x584>
   241a4:	mov	r6, #0
   241a8:	mov	r8, #0
   241ac:	ldr	r3, [sl, #12]
   241b0:	ldr	r2, [sl, #20]
   241b4:	add	r4, r9, r9, lsl #1
   241b8:	lsl	r1, r4, #3
   241bc:	mov	r0, r6
   241c0:	blx	r3
   241c4:	mov	r2, #2
   241c8:	cmp	r0, r4, lsl #3
   241cc:	bcs	241d8 <zsav_read_compressed_data+0x26c>
   241d0:	mov	r5, #0
   241d4:	b	244b0 <zsav_read_compressed_data+0x544>
   241d8:	str	r6, [sp, #4]
   241dc:	cmp	r9, #1
   241e0:	blt	24264 <zsav_read_compressed_data+0x2f8>
   241e4:	mov	r6, #0
   241e8:	mov	r7, r8
   241ec:	ldrd	r0, [r7]
   241f0:	ldrb	r2, [r5, #436]	; 0x1b4
   241f4:	tst	r2, #1
   241f8:	beq	24200 <zsav_read_compressed_data+0x294>
   241fc:	bl	47f4 <byteswap8@plt>
   24200:	strd	r0, [r7]
   24204:	ldr	r1, [r7, #12]
   24208:	mov	r4, r7
   2420c:	ldr	r0, [r4, #8]!
   24210:	ldrb	r2, [r5, #436]	; 0x1b4
   24214:	tst	r2, #1
   24218:	beq	24220 <zsav_read_compressed_data+0x2b4>
   2421c:	bl	47f4 <byteswap8@plt>
   24220:	strd	r0, [r4]
   24224:	ldr	r0, [r7, #16]
   24228:	ldrb	r1, [r5, #436]	; 0x1b4
   2422c:	tst	r1, #1
   24230:	beq	24238 <zsav_read_compressed_data+0x2cc>
   24234:	bl	480c <byteswap4@plt>
   24238:	str	r0, [r7, #16]
   2423c:	ldr	r0, [r7, #20]
   24240:	ldrb	r1, [r5, #436]	; 0x1b4
   24244:	tst	r1, #1
   24248:	beq	24250 <zsav_read_compressed_data+0x2e4>
   2424c:	bl	480c <byteswap4@plt>
   24250:	str	r0, [r7, #20]
   24254:	add	r7, r7, #24
   24258:	add	r6, r6, #1
   2425c:	cmp	r6, r9
   24260:	blt	241ec <zsav_read_compressed_data+0x280>
   24264:	ldr	r0, [sp, #24]
   24268:	lsl	r6, r0, #3
   2426c:	mov	r1, #0
   24270:	str	r1, [sp, #12]
   24274:	cmp	r0, #0
   24278:	mov	r4, #0
   2427c:	beq	24294 <zsav_read_compressed_data+0x328>
   24280:	mov	r0, r6
   24284:	bl	4cb0 <readstat_malloc@plt>
   24288:	mov	r4, r0
   2428c:	cmp	r0, #0
   24290:	beq	24470 <zsav_read_compressed_data+0x504>
   24294:	str	r6, [sp, #20]
   24298:	str	r8, [sp, #8]
   2429c:	cmp	r9, #0
   242a0:	beq	24458 <zsav_read_compressed_data+0x4ec>
   242a4:	mov	r6, #0
   242a8:	mov	r0, #0
   242ac:	str	r0, [sp, #24]
   242b0:	mov	r0, #0
   242b4:	str	r0, [sp, #12]
   242b8:	mov	r8, #0
   242bc:	str	r4, [sp, #16]
   242c0:	add	r0, r6, r6, lsl #1
   242c4:	ldr	r1, [sp, #8]
   242c8:	add	r7, r1, r0, lsl #3
   242cc:	ldr	r0, [r7, #8]
   242d0:	ldr	r3, [sl, #8]
   242d4:	ldr	r2, [sl, #20]
   242d8:	mov	r1, #0
   242dc:	blx	r3
   242e0:	cmn	r0, #1
   242e4:	beq	244fc <zsav_read_compressed_data+0x590>
   242e8:	str	r6, [sp]
   242ec:	mov	r6, r7
   242f0:	ldr	r1, [r6, #20]!
   242f4:	ldr	r0, [sp, #12]
   242f8:	bl	4d70 <readstat_realloc@plt>
   242fc:	mov	r2, #3
   24300:	cmp	r0, #0
   24304:	beq	2450c <zsav_read_compressed_data+0x5a0>
   24308:	ldr	r1, [r6]
   2430c:	ldr	r3, [sl, #12]
   24310:	ldr	r2, [sl, #20]
   24314:	str	r0, [sp, #12]
   24318:	blx	r3
   2431c:	ldr	r1, [r6]
   24320:	cmp	r0, r1
   24324:	bne	24520 <zsav_read_compressed_data+0x5b4>
   24328:	ldr	r1, [r7, #16]!
   2432c:	str	r1, [fp, #-32]	; 0xffffffe0
   24330:	ldr	r0, [sp, #24]
   24334:	bl	4d70 <readstat_realloc@plt>
   24338:	cmp	r0, #0
   2433c:	beq	24530 <zsav_read_compressed_data+0x5c4>
   24340:	ldr	r3, [r6]
   24344:	str	r0, [sp, #24]
   24348:	sub	r1, fp, #32
   2434c:	ldr	r2, [sp, #12]
   24350:	bl	4a04 <uncompress@plt>
   24354:	mov	r2, #5
   24358:	cmp	r0, #0
   2435c:	ldreq	r0, [r7]
   24360:	ldreq	r1, [fp, #-32]	; 0xffffffe0
   24364:	cmpeq	r1, r0
   24368:	bne	2448c <zsav_read_compressed_data+0x520>
   2436c:	mov	r0, #1
   24370:	str	r0, [sp, #128]	; 0x80
   24374:	ldr	r0, [sp]
   24378:	add	r0, r0, #1
   2437c:	str	r0, [sp]
   24380:	mov	r0, #0
   24384:	ldr	r1, [sp, #24]
   24388:	add	r1, r1, r0
   2438c:	str	r1, [sp, #80]	; 0x50
   24390:	add	r1, r4, r8
   24394:	str	r1, [sp, #88]	; 0x58
   24398:	ldr	r7, [sp, #20]
   2439c:	sub	r1, r7, r8
   243a0:	str	r1, [sp, #92]	; 0x5c
   243a4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   243a8:	sub	r0, r1, r0
   243ac:	str	r0, [sp, #84]	; 0x54
   243b0:	add	r0, sp, #80	; 0x50
   243b4:	bl	4c98 <sav_decompress_row@plt>
   243b8:	ldr	r6, [sp, #84]	; 0x54
   243bc:	ldr	r3, [sp, #128]	; 0x80
   243c0:	mov	r0, r4
   243c4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   243c8:	cmp	r3, #2
   243cc:	bne	243f4 <zsav_read_compressed_data+0x488>
   243d0:	mov	r1, r7
   243d4:	mov	r2, r5
   243d8:	ldr	r3, [sp, #28]
   243dc:	blx	r3
   243e0:	cmp	r0, #0
   243e4:	bne	24484 <zsav_read_compressed_data+0x518>
   243e8:	mov	r8, #0
   243ec:	ldr	r3, [sp, #128]	; 0x80
   243f0:	b	243fc <zsav_read_compressed_data+0x490>
   243f4:	ldr	r1, [sp, #92]	; 0x5c
   243f8:	sub	r8, r7, r1
   243fc:	mov	r2, #0
   24400:	cmp	r3, #3
   24404:	beq	24488 <zsav_read_compressed_data+0x51c>
   24408:	ldr	r0, [r5, #356]	; 0x164
   2440c:	cmp	r0, #1
   24410:	blt	24420 <zsav_read_compressed_data+0x4b4>
   24414:	ldr	r1, [r5, #364]	; 0x16c
   24418:	cmp	r1, r0
   2441c:	beq	24488 <zsav_read_compressed_data+0x51c>
   24420:	sub	r0, r4, r6
   24424:	ldr	r1, [sp, #128]	; 0x80
   24428:	cmp	r1, #0
   2442c:	ldr	r4, [sp, #16]
   24430:	bne	24384 <zsav_read_compressed_data+0x418>
   24434:	ldr	r6, [sp]
   24438:	cmp	r6, r9
   2443c:	bne	242c0 <zsav_read_compressed_data+0x354>
   24440:	b	2448c <zsav_read_compressed_data+0x520>
   24444:	mov	r6, #0
   24448:	mov	r2, #3
   2444c:	mov	r7, #0
   24450:	mov	r5, #0
   24454:	b	244b0 <zsav_read_compressed_data+0x544>
   24458:	mov	r0, #0
   2445c:	str	r0, [sp, #24]
   24460:	mov	r2, #0
   24464:	cmp	r4, #0
   24468:	bne	24494 <zsav_read_compressed_data+0x528>
   2446c:	b	244a4 <zsav_read_compressed_data+0x538>
   24470:	mov	r7, #0
   24474:	mov	r2, #3
   24478:	mov	r5, #0
   2447c:	ldr	r6, [sp, #4]
   24480:	b	244b0 <zsav_read_compressed_data+0x544>
   24484:	mov	r2, r0
   24488:	ldr	r4, [sp, #16]
   2448c:	cmp	r4, #0
   24490:	beq	244a4 <zsav_read_compressed_data+0x538>
   24494:	mov	r0, r4
   24498:	mov	r4, r2
   2449c:	bl	4938 <free@plt>
   244a0:	mov	r2, r4
   244a4:	ldmib	sp, {r6, r8}
   244a8:	ldr	r7, [sp, #24]
   244ac:	ldr	r5, [sp, #12]
   244b0:	cmp	r8, #0
   244b4:	mov	r4, r2
   244b8:	beq	244c8 <zsav_read_compressed_data+0x55c>
   244bc:	mov	r0, r6
   244c0:	bl	4938 <free@plt>
   244c4:	mov	r2, r4
   244c8:	cmp	r5, #0
   244cc:	beq	244dc <zsav_read_compressed_data+0x570>
   244d0:	mov	r0, r5
   244d4:	bl	4938 <free@plt>
   244d8:	mov	r2, r4
   244dc:	cmp	r7, #0
   244e0:	beq	244f0 <zsav_read_compressed_data+0x584>
   244e4:	mov	r0, r7
   244e8:	bl	4938 <free@plt>
   244ec:	mov	r2, r4
   244f0:	mov	r0, r2
   244f4:	sub	sp, fp, #28
   244f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   244fc:	mov	r2, #15
   24500:	cmp	r4, #0
   24504:	bne	24494 <zsav_read_compressed_data+0x528>
   24508:	b	244a4 <zsav_read_compressed_data+0x538>
   2450c:	mov	r0, #0
   24510:	str	r0, [sp, #12]
   24514:	cmp	r4, #0
   24518:	bne	24494 <zsav_read_compressed_data+0x528>
   2451c:	b	244a4 <zsav_read_compressed_data+0x538>
   24520:	mov	r2, #2
   24524:	cmp	r4, #0
   24528:	bne	24494 <zsav_read_compressed_data+0x528>
   2452c:	b	244a4 <zsav_read_compressed_data+0x538>
   24530:	mov	r0, #0
   24534:	str	r0, [sp, #24]
   24538:	mov	r2, #3
   2453c:	cmp	r4, #0
   24540:	bne	24494 <zsav_read_compressed_data+0x528>
   24544:	b	244a4 <zsav_read_compressed_data+0x538>

00024548 <zsav_write_compressed_row>:
   24548:	push	{r4, r5, fp, lr}
   2454c:	add	fp, sp, #8
   24550:	mov	r4, r0
   24554:	ldr	r5, [r0, #300]	; 0x12c
   24558:	ldr	r0, [r5]
   2455c:	mov	r3, r4
   24560:	bl	4efc <sav_compress_row@plt>
   24564:	mov	r1, r0
   24568:	ldr	r0, [r4, #80]	; 0x50
   2456c:	ldr	r2, [r4, #84]	; 0x54
   24570:	add	r2, r2, #1
   24574:	sub	r0, r2, r0
   24578:	clz	r0, r0
   2457c:	lsr	r2, r0, #5
   24580:	ldr	r0, [r5]
   24584:	mov	r3, r5
   24588:	bl	4f50 <zsav_compress_row@plt>
   2458c:	mov	r1, #0
   24590:	cmp	r0, #1
   24594:	movwhi	r1, #13
   24598:	mov	r0, r1
   2459c:	pop	{r4, r5, fp, pc}

000245a0 <zsav_end_data>:
   245a0:	push	{r4, r5, fp, lr}
   245a4:	add	fp, sp, #8
   245a8:	mov	r5, r0
   245ac:	ldr	r4, [r0, #300]	; 0x12c
   245b0:	mov	r1, r4
   245b4:	bl	245e8 <zsav_write_data_header>
   245b8:	cmp	r0, #0
   245bc:	popne	{r4, r5, fp, pc}
   245c0:	mov	r0, r5
   245c4:	mov	r1, r4
   245c8:	bl	246b8 <zsav_write_data_blocks>
   245cc:	cmp	r0, #0
   245d0:	beq	245d8 <zsav_end_data+0x38>
   245d4:	pop	{r4, r5, fp, pc}
   245d8:	mov	r0, r5
   245dc:	mov	r1, r4
   245e0:	pop	{r4, r5, fp, lr}
   245e4:	b	24714 <zsav_write_data_trailer>

000245e8 <zsav_write_data_header>:
   245e8:	push	{r4, r5, fp, lr}
   245ec:	add	fp, sp, #8
   245f0:	sub	sp, sp, #24
   245f4:	mov	r5, r0
   245f8:	ldr	r0, [r1, #24]
   245fc:	ldr	r3, [r1, #28]
   24600:	str	r3, [sp, #20]
   24604:	str	r0, [sp, #16]
   24608:	adds	r0, r0, #24
   2460c:	adc	r2, r3, #0
   24610:	str	r2, [sp, #12]
   24614:	str	r0, [sp, #8]
   24618:	ldr	r0, [r1, #8]
   2461c:	add	r2, r0, r0, lsl #1
   24620:	mov	r3, #24
   24624:	add	r2, r3, r2, lsl #3
   24628:	str	r2, [sp]
   2462c:	asr	r2, r2, #31
   24630:	str	r2, [sp, #4]
   24634:	cmp	r0, #1
   24638:	blt	24668 <zsav_write_data_header+0x80>
   2463c:	ldr	r3, [r1, #4]
   24640:	ldr	r1, [sp, #8]
   24644:	ldr	r2, [sp, #12]
   24648:	ldr	r4, [r3], #4
   2464c:	ldr	r4, [r4, #4]
   24650:	adds	r1, r1, r4
   24654:	adc	r2, r2, r4, asr #31
   24658:	subs	r0, r0, #1
   2465c:	bne	24648 <zsav_write_data_header+0x60>
   24660:	str	r1, [sp, #8]
   24664:	str	r2, [sp, #12]
   24668:	add	r1, sp, #16
   2466c:	mov	r0, r5
   24670:	mov	r2, #8
   24674:	bl	4ef0 <readstat_write_bytes@plt>
   24678:	cmp	r0, #0
   2467c:	bne	24698 <zsav_write_data_header+0xb0>
   24680:	add	r1, sp, #8
   24684:	mov	r0, r5
   24688:	mov	r2, #8
   2468c:	bl	4ef0 <readstat_write_bytes@plt>
   24690:	cmp	r0, #0
   24694:	beq	246a0 <zsav_write_data_header+0xb8>
   24698:	sub	sp, fp, #8
   2469c:	pop	{r4, r5, fp, pc}
   246a0:	mov	r1, sp
   246a4:	mov	r0, r5
   246a8:	mov	r2, #8
   246ac:	bl	4ef0 <readstat_write_bytes@plt>
   246b0:	sub	sp, fp, #8
   246b4:	pop	{r4, r5, fp, pc}

000246b8 <zsav_write_data_blocks>:
   246b8:	push	{r4, r5, r6, sl, fp, lr}
   246bc:	add	fp, sp, #16
   246c0:	mov	r5, r0
   246c4:	ldr	r0, [r1, #8]
   246c8:	cmp	r0, #1
   246cc:	movlt	r0, #0
   246d0:	poplt	{r4, r5, r6, sl, fp, pc}
   246d4:	mov	r4, r1
   246d8:	mov	r6, #0
   246dc:	ldr	r0, [r4, #4]
   246e0:	ldr	r0, [r0, r6, lsl #2]
   246e4:	ldr	r2, [r0, #4]
   246e8:	ldr	r1, [r0, #64]	; 0x40
   246ec:	mov	r0, r5
   246f0:	bl	4ef0 <readstat_write_bytes@plt>
   246f4:	cmp	r0, #0
   246f8:	popne	{r4, r5, r6, sl, fp, pc}
   246fc:	add	r6, r6, #1
   24700:	ldr	r0, [r4, #8]
   24704:	cmp	r6, r0
   24708:	movge	r0, #0
   2470c:	popge	{r4, r5, r6, sl, fp, pc}
   24710:	b	246dc <zsav_write_data_blocks+0x24>

00024714 <zsav_write_data_trailer>:
   24714:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24718:	add	fp, sp, #28
   2471c:	sub	sp, sp, #52	; 0x34
   24720:	mov	r4, r1
   24724:	mov	r5, r0
   24728:	mvn	r0, #0
   2472c:	str	r0, [sp, #44]	; 0x2c
   24730:	mvn	r0, #99	; 0x63
   24734:	str	r0, [sp, #40]	; 0x28
   24738:	mov	r0, #0
   2473c:	str	r0, [sp, #36]	; 0x24
   24740:	str	r0, [sp, #32]
   24744:	ldr	r0, [r1, #16]
   24748:	str	r0, [sp, #28]
   2474c:	ldr	r0, [r1, #8]
   24750:	str	r0, [sp, #24]
   24754:	add	r1, sp, #40	; 0x28
   24758:	mov	r0, r5
   2475c:	mov	r2, #8
   24760:	bl	4ef0 <readstat_write_bytes@plt>
   24764:	cmp	r0, #0
   24768:	bne	247b4 <zsav_write_data_trailer+0xa0>
   2476c:	add	r1, sp, #32
   24770:	mov	r0, r5
   24774:	mov	r2, #8
   24778:	bl	4ef0 <readstat_write_bytes@plt>
   2477c:	cmp	r0, #0
   24780:	bne	247b4 <zsav_write_data_trailer+0xa0>
   24784:	add	r1, sp, #28
   24788:	mov	r0, r5
   2478c:	mov	r2, #4
   24790:	bl	4ef0 <readstat_write_bytes@plt>
   24794:	cmp	r0, #0
   24798:	bne	247b4 <zsav_write_data_trailer+0xa0>
   2479c:	add	r1, sp, #24
   247a0:	mov	r0, r5
   247a4:	mov	r2, #4
   247a8:	bl	4ef0 <readstat_write_bytes@plt>
   247ac:	cmp	r0, #0
   247b0:	beq	247bc <zsav_write_data_trailer+0xa8>
   247b4:	sub	sp, fp, #28
   247b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   247bc:	ldrd	r0, [r4, #24]
   247c0:	str	r1, [sp, #20]
   247c4:	str	r0, [sp, #16]
   247c8:	adds	r0, r0, #24
   247cc:	str	r0, [sp, #8]
   247d0:	adc	r0, r1, #0
   247d4:	str	r0, [sp, #12]
   247d8:	ldr	r0, [r4, #8]
   247dc:	cmp	r0, #1
   247e0:	movlt	r0, #0
   247e4:	sublt	sp, fp, #28
   247e8:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   247ec:	mov	r7, #0
   247f0:	add	r6, sp, #16
   247f4:	add	sl, sp, #8
   247f8:	add	r8, sp, #4
   247fc:	mov	r9, sp
   24800:	ldr	r0, [r4, #4]
   24804:	ldr	r0, [r0, r7, lsl #2]
   24808:	ldr	r1, [r0]
   2480c:	str	r1, [sp, #4]
   24810:	ldr	r0, [r0, #4]
   24814:	str	r0, [sp]
   24818:	mov	r0, r5
   2481c:	mov	r1, r6
   24820:	mov	r2, #8
   24824:	bl	4ef0 <readstat_write_bytes@plt>
   24828:	cmp	r0, #0
   2482c:	bne	247b4 <zsav_write_data_trailer+0xa0>
   24830:	mov	r0, r5
   24834:	mov	r1, sl
   24838:	mov	r2, #8
   2483c:	bl	4ef0 <readstat_write_bytes@plt>
   24840:	cmp	r0, #0
   24844:	bne	247b4 <zsav_write_data_trailer+0xa0>
   24848:	mov	r0, r5
   2484c:	mov	r1, r8
   24850:	mov	r2, #4
   24854:	bl	4ef0 <readstat_write_bytes@plt>
   24858:	cmp	r0, #0
   2485c:	bne	247b4 <zsav_write_data_trailer+0xa0>
   24860:	mov	r0, r5
   24864:	mov	r1, r9
   24868:	mov	r2, #4
   2486c:	bl	4ef0 <readstat_write_bytes@plt>
   24870:	cmp	r0, #0
   24874:	bne	247b4 <zsav_write_data_trailer+0xa0>
   24878:	ldr	r0, [sp, #4]
   2487c:	ldr	r1, [sp, #16]
   24880:	ldr	r2, [sp, #20]
   24884:	adds	r1, r1, r0
   24888:	str	r1, [sp, #16]
   2488c:	adc	r0, r2, r0, asr #31
   24890:	ldr	r1, [sp]
   24894:	ldr	r2, [sp, #8]
   24898:	ldr	r3, [sp, #12]
   2489c:	adds	r2, r2, r1
   248a0:	str	r2, [sp, #8]
   248a4:	str	r0, [sp, #20]
   248a8:	adc	r0, r3, r1, asr #31
   248ac:	str	r0, [sp, #12]
   248b0:	add	r7, r7, #1
   248b4:	ldr	r1, [r4, #8]
   248b8:	mov	r0, #0
   248bc:	cmp	r7, r1
   248c0:	blt	24800 <zsav_write_data_trailer+0xec>
   248c4:	b	247b4 <zsav_write_data_trailer+0xa0>

000248c8 <__aeabi_drsub>:
   248c8:	eor	r1, r1, #-2147483648	; 0x80000000
   248cc:	b	248d4 <__adddf3>

000248d0 <__aeabi_dsub>:
   248d0:	eor	r3, r3, #-2147483648	; 0x80000000

000248d4 <__adddf3>:
   248d4:	push	{r4, r5, lr}
   248d8:	lsl	r4, r1, #1
   248dc:	lsl	r5, r3, #1
   248e0:	teq	r4, r5
   248e4:	teqeq	r0, r2
   248e8:	orrsne	ip, r4, r0
   248ec:	orrsne	ip, r5, r2
   248f0:	mvnsne	ip, r4, asr #21
   248f4:	mvnsne	ip, r5, asr #21
   248f8:	beq	24ae4 <__adddf3+0x210>
   248fc:	lsr	r4, r4, #21
   24900:	rsbs	r5, r4, r5, lsr #21
   24904:	rsblt	r5, r5, #0
   24908:	ble	24928 <__adddf3+0x54>
   2490c:	add	r4, r4, r5
   24910:	eor	r2, r0, r2
   24914:	eor	r3, r1, r3
   24918:	eor	r0, r2, r0
   2491c:	eor	r1, r3, r1
   24920:	eor	r2, r0, r2
   24924:	eor	r3, r1, r3
   24928:	cmp	r5, #54	; 0x36
   2492c:	pophi	{r4, r5, pc}
   24930:	tst	r1, #-2147483648	; 0x80000000
   24934:	lsl	r1, r1, #12
   24938:	mov	ip, #1048576	; 0x100000
   2493c:	orr	r1, ip, r1, lsr #12
   24940:	beq	2494c <__adddf3+0x78>
   24944:	rsbs	r0, r0, #0
   24948:	rsc	r1, r1, #0
   2494c:	tst	r3, #-2147483648	; 0x80000000
   24950:	lsl	r3, r3, #12
   24954:	orr	r3, ip, r3, lsr #12
   24958:	beq	24964 <__adddf3+0x90>
   2495c:	rsbs	r2, r2, #0
   24960:	rsc	r3, r3, #0
   24964:	teq	r4, r5
   24968:	beq	24acc <__adddf3+0x1f8>
   2496c:	sub	r4, r4, #1
   24970:	rsbs	lr, r5, #32
   24974:	blt	24990 <__adddf3+0xbc>
   24978:	lsl	ip, r2, lr
   2497c:	adds	r0, r0, r2, lsr r5
   24980:	adc	r1, r1, #0
   24984:	adds	r0, r0, r3, lsl lr
   24988:	adcs	r1, r1, r3, asr r5
   2498c:	b	249ac <__adddf3+0xd8>
   24990:	sub	r5, r5, #32
   24994:	add	lr, lr, #32
   24998:	cmp	r2, #1
   2499c:	lsl	ip, r3, lr
   249a0:	orrcs	ip, ip, #2
   249a4:	adds	r0, r0, r3, asr r5
   249a8:	adcs	r1, r1, r3, asr #31
   249ac:	and	r5, r1, #-2147483648	; 0x80000000
   249b0:	bpl	249c0 <__adddf3+0xec>
   249b4:	rsbs	ip, ip, #0
   249b8:	rscs	r0, r0, #0
   249bc:	rsc	r1, r1, #0
   249c0:	cmp	r1, #1048576	; 0x100000
   249c4:	bcc	24a04 <__adddf3+0x130>
   249c8:	cmp	r1, #2097152	; 0x200000
   249cc:	bcc	249ec <__adddf3+0x118>
   249d0:	lsrs	r1, r1, #1
   249d4:	rrxs	r0, r0
   249d8:	rrx	ip, ip
   249dc:	add	r4, r4, #1
   249e0:	lsl	r2, r4, #21
   249e4:	cmn	r2, #4194304	; 0x400000
   249e8:	bcs	24b44 <__adddf3+0x270>
   249ec:	cmp	ip, #-2147483648	; 0x80000000
   249f0:	lsrseq	ip, r0, #1
   249f4:	adcs	r0, r0, #0
   249f8:	adc	r1, r1, r4, lsl #20
   249fc:	orr	r1, r1, r5
   24a00:	pop	{r4, r5, pc}
   24a04:	lsls	ip, ip, #1
   24a08:	adcs	r0, r0, r0
   24a0c:	adc	r1, r1, r1
   24a10:	tst	r1, #1048576	; 0x100000
   24a14:	sub	r4, r4, #1
   24a18:	bne	249ec <__adddf3+0x118>
   24a1c:	teq	r1, #0
   24a20:	moveq	r1, r0
   24a24:	moveq	r0, #0
   24a28:	clz	r3, r1
   24a2c:	addeq	r3, r3, #32
   24a30:	sub	r3, r3, #11
   24a34:	subs	r2, r3, #32
   24a38:	bge	24a5c <__adddf3+0x188>
   24a3c:	adds	r2, r2, #12
   24a40:	ble	24a58 <__adddf3+0x184>
   24a44:	add	ip, r2, #20
   24a48:	rsb	r2, r2, #12
   24a4c:	lsl	r0, r1, ip
   24a50:	lsr	r1, r1, r2
   24a54:	b	24a6c <__adddf3+0x198>
   24a58:	add	r2, r2, #20
   24a5c:	rsble	ip, r2, #32
   24a60:	lsl	r1, r1, r2
   24a64:	orrle	r1, r1, r0, lsr ip
   24a68:	lslle	r0, r0, r2
   24a6c:	subs	r4, r4, r3
   24a70:	addge	r1, r1, r4, lsl #20
   24a74:	orrge	r1, r1, r5
   24a78:	popge	{r4, r5, pc}
   24a7c:	mvn	r4, r4
   24a80:	subs	r4, r4, #31
   24a84:	bge	24ac0 <__adddf3+0x1ec>
   24a88:	adds	r4, r4, #12
   24a8c:	bgt	24aa8 <__adddf3+0x1d4>
   24a90:	add	r4, r4, #20
   24a94:	rsb	r2, r4, #32
   24a98:	lsr	r0, r0, r4
   24a9c:	orr	r0, r0, r1, lsl r2
   24aa0:	orr	r1, r5, r1, lsr r4
   24aa4:	pop	{r4, r5, pc}
   24aa8:	rsb	r4, r4, #12
   24aac:	rsb	r2, r4, #32
   24ab0:	lsr	r0, r0, r2
   24ab4:	orr	r0, r0, r1, lsl r4
   24ab8:	mov	r1, r5
   24abc:	pop	{r4, r5, pc}
   24ac0:	lsr	r0, r1, r4
   24ac4:	mov	r1, r5
   24ac8:	pop	{r4, r5, pc}
   24acc:	teq	r4, #0
   24ad0:	eor	r3, r3, #1048576	; 0x100000
   24ad4:	eoreq	r1, r1, #1048576	; 0x100000
   24ad8:	addeq	r4, r4, #1
   24adc:	subne	r5, r5, #1
   24ae0:	b	2496c <__adddf3+0x98>
   24ae4:	mvns	ip, r4, asr #21
   24ae8:	mvnsne	ip, r5, asr #21
   24aec:	beq	24b54 <__adddf3+0x280>
   24af0:	teq	r4, r5
   24af4:	teqeq	r0, r2
   24af8:	beq	24b0c <__adddf3+0x238>
   24afc:	orrs	ip, r4, r0
   24b00:	moveq	r1, r3
   24b04:	moveq	r0, r2
   24b08:	pop	{r4, r5, pc}
   24b0c:	teq	r1, r3
   24b10:	movne	r1, #0
   24b14:	movne	r0, #0
   24b18:	popne	{r4, r5, pc}
   24b1c:	lsrs	ip, r4, #21
   24b20:	bne	24b34 <__adddf3+0x260>
   24b24:	lsls	r0, r0, #1
   24b28:	adcs	r1, r1, r1
   24b2c:	orrcs	r1, r1, #-2147483648	; 0x80000000
   24b30:	pop	{r4, r5, pc}
   24b34:	adds	r4, r4, #4194304	; 0x400000
   24b38:	addcc	r1, r1, #1048576	; 0x100000
   24b3c:	popcc	{r4, r5, pc}
   24b40:	and	r5, r1, #-2147483648	; 0x80000000
   24b44:	orr	r1, r5, #2130706432	; 0x7f000000
   24b48:	orr	r1, r1, #15728640	; 0xf00000
   24b4c:	mov	r0, #0
   24b50:	pop	{r4, r5, pc}
   24b54:	mvns	ip, r4, asr #21
   24b58:	movne	r1, r3
   24b5c:	movne	r0, r2
   24b60:	mvnseq	ip, r5, asr #21
   24b64:	movne	r3, r1
   24b68:	movne	r2, r0
   24b6c:	orrs	r4, r0, r1, lsl #12
   24b70:	orrseq	r5, r2, r3, lsl #12
   24b74:	teqeq	r1, r3
   24b78:	orrne	r1, r1, #524288	; 0x80000
   24b7c:	pop	{r4, r5, pc}

00024b80 <__aeabi_ui2d>:
   24b80:	teq	r0, #0
   24b84:	moveq	r1, #0
   24b88:	bxeq	lr
   24b8c:	push	{r4, r5, lr}
   24b90:	mov	r4, #1024	; 0x400
   24b94:	add	r4, r4, #50	; 0x32
   24b98:	mov	r5, #0
   24b9c:	mov	r1, #0
   24ba0:	b	24a1c <__adddf3+0x148>

00024ba4 <__aeabi_i2d>:
   24ba4:	teq	r0, #0
   24ba8:	moveq	r1, #0
   24bac:	bxeq	lr
   24bb0:	push	{r4, r5, lr}
   24bb4:	mov	r4, #1024	; 0x400
   24bb8:	add	r4, r4, #50	; 0x32
   24bbc:	ands	r5, r0, #-2147483648	; 0x80000000
   24bc0:	rsbmi	r0, r0, #0
   24bc4:	mov	r1, #0
   24bc8:	b	24a1c <__adddf3+0x148>

00024bcc <__aeabi_f2d>:
   24bcc:	lsls	r2, r0, #1
   24bd0:	asr	r1, r2, #3
   24bd4:	rrx	r1, r1
   24bd8:	lsl	r0, r2, #28
   24bdc:	andsne	r3, r2, #-16777216	; 0xff000000
   24be0:	teqne	r3, #-16777216	; 0xff000000
   24be4:	eorne	r1, r1, #939524096	; 0x38000000
   24be8:	bxne	lr
   24bec:	bics	r2, r2, #-16777216	; 0xff000000
   24bf0:	bxeq	lr
   24bf4:	teq	r3, #-16777216	; 0xff000000
   24bf8:	orreq	r1, r1, #524288	; 0x80000
   24bfc:	bxeq	lr
   24c00:	push	{r4, r5, lr}
   24c04:	mov	r4, #896	; 0x380
   24c08:	and	r5, r1, #-2147483648	; 0x80000000
   24c0c:	bic	r1, r1, #-2147483648	; 0x80000000
   24c10:	b	24a1c <__adddf3+0x148>

00024c14 <__aeabi_ul2d>:
   24c14:	orrs	r2, r0, r1
   24c18:	bxeq	lr
   24c1c:	push	{r4, r5, lr}
   24c20:	mov	r5, #0
   24c24:	b	24c44 <__aeabi_l2d+0x1c>

00024c28 <__aeabi_l2d>:
   24c28:	orrs	r2, r0, r1
   24c2c:	bxeq	lr
   24c30:	push	{r4, r5, lr}
   24c34:	ands	r5, r1, #-2147483648	; 0x80000000
   24c38:	bpl	24c44 <__aeabi_l2d+0x1c>
   24c3c:	rsbs	r0, r0, #0
   24c40:	rsc	r1, r1, #0
   24c44:	mov	r4, #1024	; 0x400
   24c48:	add	r4, r4, #50	; 0x32
   24c4c:	lsrs	ip, r1, #22
   24c50:	beq	249c0 <__adddf3+0xec>
   24c54:	mov	r2, #3
   24c58:	lsrs	ip, ip, #3
   24c5c:	addne	r2, r2, #3
   24c60:	lsrs	ip, ip, #3
   24c64:	addne	r2, r2, #3
   24c68:	add	r2, r2, ip, lsr #3
   24c6c:	rsb	r3, r2, #32
   24c70:	lsl	ip, r0, r3
   24c74:	lsr	r0, r0, r2
   24c78:	orr	r0, r0, r1, lsl r3
   24c7c:	lsr	r1, r1, r2
   24c80:	add	r4, r4, r2
   24c84:	b	249c0 <__adddf3+0xec>

00024c88 <__aeabi_ldivmod>:
   24c88:	cmp	r3, #0
   24c8c:	cmpeq	r2, #0
   24c90:	bne	24cb4 <__aeabi_ldivmod+0x2c>
   24c94:	cmp	r1, #0
   24c98:	movlt	r1, #-2147483648	; 0x80000000
   24c9c:	movlt	r0, #0
   24ca0:	blt	24cb0 <__aeabi_ldivmod+0x28>
   24ca4:	cmpeq	r0, #0
   24ca8:	mvnne	r1, #-2147483648	; 0x80000000
   24cac:	mvnne	r0, #0
   24cb0:	b	24d98 <__aeabi_idiv0>
   24cb4:	sub	sp, sp, #8
   24cb8:	push	{sp, lr}
   24cbc:	cmp	r1, #0
   24cc0:	blt	24ce0 <__aeabi_ldivmod+0x58>
   24cc4:	cmp	r3, #0
   24cc8:	blt	24d14 <__aeabi_ldivmod+0x8c>
   24ccc:	bl	24e18 <__udivmoddi4>
   24cd0:	ldr	lr, [sp, #4]
   24cd4:	add	sp, sp, #8
   24cd8:	pop	{r2, r3}
   24cdc:	bx	lr
   24ce0:	rsbs	r0, r0, #0
   24ce4:	sbc	r1, r1, r1, lsl #1
   24ce8:	cmp	r3, #0
   24cec:	blt	24d38 <__aeabi_ldivmod+0xb0>
   24cf0:	bl	24e18 <__udivmoddi4>
   24cf4:	ldr	lr, [sp, #4]
   24cf8:	add	sp, sp, #8
   24cfc:	pop	{r2, r3}
   24d00:	rsbs	r0, r0, #0
   24d04:	sbc	r1, r1, r1, lsl #1
   24d08:	rsbs	r2, r2, #0
   24d0c:	sbc	r3, r3, r3, lsl #1
   24d10:	bx	lr
   24d14:	rsbs	r2, r2, #0
   24d18:	sbc	r3, r3, r3, lsl #1
   24d1c:	bl	24e18 <__udivmoddi4>
   24d20:	ldr	lr, [sp, #4]
   24d24:	add	sp, sp, #8
   24d28:	pop	{r2, r3}
   24d2c:	rsbs	r0, r0, #0
   24d30:	sbc	r1, r1, r1, lsl #1
   24d34:	bx	lr
   24d38:	rsbs	r2, r2, #0
   24d3c:	sbc	r3, r3, r3, lsl #1
   24d40:	bl	24e18 <__udivmoddi4>
   24d44:	ldr	lr, [sp, #4]
   24d48:	add	sp, sp, #8
   24d4c:	pop	{r2, r3}
   24d50:	rsbs	r2, r2, #0
   24d54:	sbc	r3, r3, r3, lsl #1
   24d58:	bx	lr

00024d5c <__aeabi_uldivmod>:
   24d5c:	cmp	r3, #0
   24d60:	cmpeq	r2, #0
   24d64:	bne	24d7c <__aeabi_uldivmod+0x20>
   24d68:	cmp	r1, #0
   24d6c:	cmpeq	r0, #0
   24d70:	mvnne	r1, #0
   24d74:	mvnne	r0, #0
   24d78:	b	24d98 <__aeabi_idiv0>
   24d7c:	sub	sp, sp, #8
   24d80:	push	{sp, lr}
   24d84:	bl	24e18 <__udivmoddi4>
   24d88:	ldr	lr, [sp, #4]
   24d8c:	add	sp, sp, #8
   24d90:	pop	{r2, r3}
   24d94:	bx	lr

00024d98 <__aeabi_idiv0>:
   24d98:	push	{r1, lr}
   24d9c:	mov	r0, #8
   24da0:	bl	4800 <raise@plt>
   24da4:	pop	{r1, pc}

00024da8 <__aeabi_d2lz>:
   24da8:	vmov	d7, r0, r1
   24dac:	vcmpe.f64	d7, #0.0
   24db0:	vmrs	APSR_nzcv, fpscr
   24db4:	bmi	24dbc <__aeabi_d2lz+0x14>
   24db8:	b	24dd8 <__aeabi_d2ulz>
   24dbc:	push	{r4, lr}
   24dc0:	eor	r1, r1, #-2147483648	; 0x80000000
   24dc4:	bl	24dd8 <__aeabi_d2ulz>
   24dc8:	rsbs	r0, r0, #0
   24dcc:	rsc	r1, r1, #0
   24dd0:	pop	{r4, pc}
   24dd4:	andeq	r0, r0, r0

00024dd8 <__aeabi_d2ulz>:
   24dd8:	vmov	d6, r0, r1
   24ddc:	vldr	d7, [pc, #36]	; 24e08 <__aeabi_d2ulz+0x30>
   24de0:	vldr	d5, [pc, #40]	; 24e10 <__aeabi_d2ulz+0x38>
   24de4:	vmul.f64	d7, d6, d7
   24de8:	vcvt.u32.f64	s14, d7
   24dec:	vcvt.f64.u32	d4, s14
   24df0:	vmov	r1, s14
   24df4:	vmls.f64	d6, d4, d5
   24df8:	vcvt.u32.f64	s15, d6
   24dfc:	vmov	r0, s15
   24e00:	bx	lr
   24e04:	nop			; (mov r0, r0)
   24e08:	.word	0x00000000
   24e0c:	.word	0x3df00000
   24e10:	.word	0x00000000
   24e14:	.word	0x41f00000

00024e18 <__udivmoddi4>:
   24e18:	cmp	r1, r3
   24e1c:	cmpeq	r0, r2
   24e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24e24:	mov	r4, r0
   24e28:	movcc	r0, #0
   24e2c:	mov	r5, r1
   24e30:	ldr	lr, [sp, #36]	; 0x24
   24e34:	movcc	r1, r0
   24e38:	bcc	24f34 <__udivmoddi4+0x11c>
   24e3c:	cmp	r3, #0
   24e40:	clzeq	ip, r2
   24e44:	clzne	ip, r3
   24e48:	addeq	ip, ip, #32
   24e4c:	cmp	r5, #0
   24e50:	clzeq	r1, r4
   24e54:	addeq	r1, r1, #32
   24e58:	clzne	r1, r5
   24e5c:	sub	ip, ip, r1
   24e60:	sub	sl, ip, #32
   24e64:	lsl	r9, r3, ip
   24e68:	rsb	fp, ip, #32
   24e6c:	orr	r9, r9, r2, lsl sl
   24e70:	orr	r9, r9, r2, lsr fp
   24e74:	lsl	r8, r2, ip
   24e78:	cmp	r5, r9
   24e7c:	cmpeq	r4, r8
   24e80:	movcc	r0, #0
   24e84:	movcc	r1, r0
   24e88:	bcc	24ea4 <__udivmoddi4+0x8c>
   24e8c:	mov	r0, #1
   24e90:	subs	r4, r4, r8
   24e94:	lsl	r1, r0, sl
   24e98:	orr	r1, r1, r0, lsr fp
   24e9c:	lsl	r0, r0, ip
   24ea0:	sbc	r5, r5, r9
   24ea4:	cmp	ip, #0
   24ea8:	beq	24f34 <__udivmoddi4+0x11c>
   24eac:	lsr	r6, r8, #1
   24eb0:	orr	r6, r6, r9, lsl #31
   24eb4:	lsr	r7, r9, #1
   24eb8:	mov	r2, ip
   24ebc:	b	24ee0 <__udivmoddi4+0xc8>
   24ec0:	subs	r3, r4, r6
   24ec4:	sbc	r8, r5, r7
   24ec8:	adds	r3, r3, r3
   24ecc:	adc	r8, r8, r8
   24ed0:	adds	r4, r3, #1
   24ed4:	adc	r5, r8, #0
   24ed8:	subs	r2, r2, #1
   24edc:	beq	24efc <__udivmoddi4+0xe4>
   24ee0:	cmp	r5, r7
   24ee4:	cmpeq	r4, r6
   24ee8:	bcs	24ec0 <__udivmoddi4+0xa8>
   24eec:	adds	r4, r4, r4
   24ef0:	adc	r5, r5, r5
   24ef4:	subs	r2, r2, #1
   24ef8:	bne	24ee0 <__udivmoddi4+0xc8>
   24efc:	lsr	r3, r4, ip
   24f00:	orr	r3, r3, r5, lsl fp
   24f04:	lsr	r2, r5, ip
   24f08:	orr	r3, r3, r5, lsr sl
   24f0c:	adds	r0, r0, r4
   24f10:	mov	r4, r3
   24f14:	lsl	r3, r2, ip
   24f18:	orr	r3, r3, r4, lsl sl
   24f1c:	lsl	ip, r4, ip
   24f20:	orr	r3, r3, r4, lsr fp
   24f24:	adc	r1, r1, r5
   24f28:	subs	r0, r0, ip
   24f2c:	mov	r5, r2
   24f30:	sbc	r1, r1, r3
   24f34:	cmp	lr, #0
   24f38:	strdne	r4, [lr]
   24f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00024f40 <_fini>:
   24f40:	push	{r3, lr}
   24f44:	pop	{r3, pc}
