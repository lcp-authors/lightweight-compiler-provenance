
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

000128e0 <.init>:
   128e0:	push	{r3, lr}
   128e4:	bl	129cc <_start@@Base+0x3c>
   128e8:	pop	{r3, pc}

Disassembly of section .plt:

000128ec <strcmp@plt-0x14>:
   128ec:	push	{lr}		; (str lr, [sp, #-4]!)
   128f0:	ldr	lr, [pc, #4]	; 128fc <strcmp@plt-0x4>
   128f4:	add	lr, pc, lr
   128f8:	ldr	pc, [lr, #8]!
   128fc:	andeq	r4, r1, r4, lsl #14

00012900 <strcmp@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #20, 20	; 0x14000
   12908:	ldr	pc, [ip, #1796]!	; 0x704

0001290c <printf@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #20, 20	; 0x14000
   12914:	ldr	pc, [ip, #1788]!	; 0x6fc

00012918 <free@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #20, 20	; 0x14000
   12920:	ldr	pc, [ip, #1780]!	; 0x6f4

00012924 <realloc@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #20, 20	; 0x14000
   1292c:	ldr	pc, [ip, #1772]!	; 0x6ec

00012930 <strcpy@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #20, 20	; 0x14000
   12938:	ldr	pc, [ip, #1764]!	; 0x6e4

0001293c <malloc@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #20, 20	; 0x14000
   12944:	ldr	pc, [ip, #1756]!	; 0x6dc

00012948 <__libc_start_main@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #20, 20	; 0x14000
   12950:	ldr	pc, [ip, #1748]!	; 0x6d4

00012954 <__gmon_start__@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #20, 20	; 0x14000
   1295c:	ldr	pc, [ip, #1740]!	; 0x6cc

00012960 <strlen@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #20, 20	; 0x14000
   12968:	ldr	pc, [ip, #1732]!	; 0x6c4

0001296c <snprintf@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #20, 20	; 0x14000
   12974:	ldr	pc, [ip, #1724]!	; 0x6bc

00012978 <__isoc99_sscanf@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #20, 20	; 0x14000
   12980:	ldr	pc, [ip, #1716]!	; 0x6b4

00012984 <abort@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #20, 20	; 0x14000
   1298c:	ldr	pc, [ip, #1708]!	; 0x6ac

Disassembly of section .text:

00012990 <_start@@Base>:
   12990:	mov	fp, #0
   12994:	mov	lr, #0
   12998:	pop	{r1}		; (ldr r1, [sp], #4)
   1299c:	mov	r2, sp
   129a0:	push	{r2}		; (str r2, [sp, #-4]!)
   129a4:	push	{r0}		; (str r0, [sp, #-4]!)
   129a8:	ldr	ip, [pc, #16]	; 129c0 <_start@@Base+0x30>
   129ac:	push	{ip}		; (str ip, [sp, #-4]!)
   129b0:	ldr	r0, [pc, #12]	; 129c4 <_start@@Base+0x34>
   129b4:	ldr	r3, [pc, #12]	; 129c8 <_start@@Base+0x38>
   129b8:	bl	12948 <__libc_start_main@plt>
   129bc:	bl	12984 <abort@plt>
   129c0:	andeq	r6, r1, r8, ror #24
   129c4:	andeq	r2, r1, r0, lsl #21
   129c8:	andeq	r6, r1, r8, lsl #24
   129cc:	ldr	r3, [pc, #20]	; 129e8 <_start@@Base+0x58>
   129d0:	ldr	r2, [pc, #20]	; 129ec <_start@@Base+0x5c>
   129d4:	add	r3, pc, r3
   129d8:	ldr	r2, [r3, r2]
   129dc:	cmp	r2, #0
   129e0:	bxeq	lr
   129e4:	b	12954 <__gmon_start__@plt>
   129e8:	andeq	r4, r1, r4, lsr #12
   129ec:	andeq	r0, r0, ip, lsr r0
   129f0:	ldr	r0, [pc, #24]	; 12a10 <_start@@Base+0x80>
   129f4:	ldr	r3, [pc, #24]	; 12a14 <_start@@Base+0x84>
   129f8:	cmp	r3, r0
   129fc:	bxeq	lr
   12a00:	ldr	r3, [pc, #16]	; 12a18 <_start@@Base+0x88>
   12a04:	cmp	r3, #0
   12a08:	bxeq	lr
   12a0c:	bx	r3
   12a10:	andeq	r7, r2, r8, asr #32
   12a14:	andeq	r7, r2, r8, asr #32
   12a18:	andeq	r0, r0, r0
   12a1c:	ldr	r0, [pc, #36]	; 12a48 <_start@@Base+0xb8>
   12a20:	ldr	r1, [pc, #36]	; 12a4c <_start@@Base+0xbc>
   12a24:	sub	r1, r1, r0
   12a28:	asr	r1, r1, #2
   12a2c:	add	r1, r1, r1, lsr #31
   12a30:	asrs	r1, r1, #1
   12a34:	bxeq	lr
   12a38:	ldr	r3, [pc, #16]	; 12a50 <_start@@Base+0xc0>
   12a3c:	cmp	r3, #0
   12a40:	bxeq	lr
   12a44:	bx	r3
   12a48:	andeq	r7, r2, r8, asr #32
   12a4c:	andeq	r7, r2, r8, asr #32
   12a50:	andeq	r0, r0, r0
   12a54:	push	{r4, lr}
   12a58:	ldr	r4, [pc, #24]	; 12a78 <_start@@Base+0xe8>
   12a5c:	ldrb	r3, [r4]
   12a60:	cmp	r3, #0
   12a64:	popne	{r4, pc}
   12a68:	bl	129f0 <_start@@Base+0x60>
   12a6c:	mov	r3, #1
   12a70:	strb	r3, [r4]
   12a74:	pop	{r4, pc}
   12a78:	andeq	r7, r2, r8, asr #32
   12a7c:	b	12a1c <_start@@Base+0x8c>

00012a80 <main@@Base>:
   12a80:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12a84:	strd	r6, [sp, #8]
   12a88:	strd	r8, [sp, #16]
   12a8c:	str	lr, [sp, #24]
   12a90:	vpush	{d8}
   12a94:	sub	sp, sp, #68	; 0x44
   12a98:	add	r0, sp, #8
   12a9c:	bl	12cc4 <table_init@@Base>
   12aa0:	mov	r2, #0
   12aa4:	movw	r1, #27768	; 0x6c78
   12aa8:	movt	r1, #1
   12aac:	add	r0, sp, #8
   12ab0:	bl	13798 <table_add_column@@Base>
   12ab4:	mov	r8, r0
   12ab8:	mov	r2, #16
   12abc:	movw	r1, #27772	; 0x6c7c
   12ac0:	movt	r1, #1
   12ac4:	add	r0, sp, #8
   12ac8:	bl	13798 <table_add_column@@Base>
   12acc:	mov	r7, r0
   12ad0:	mov	r4, #0
   12ad4:	vldr	s16, [pc, #476]	; 12cb8 <main@@Base+0x238>
   12ad8:	mov	r6, r4
   12adc:	movw	r9, #26215	; 0x6667
   12ae0:	movt	r9, #26214	; 0x6666
   12ae4:	vldr	s17, [pc, #464]	; 12cbc <main@@Base+0x23c>
   12ae8:	b	12c54 <main@@Base+0x1d4>
   12aec:	mov	r3, #0
   12af0:	mov	r2, #4
   12af4:	mov	r1, r8
   12af8:	add	r0, sp, #8
   12afc:	bl	14934 <table_sorted_find_int@@Base>
   12b00:	mov	r4, r0
   12b04:	mov	r3, #1
   12b08:	mov	r2, #4
   12b0c:	mov	r1, r8
   12b10:	add	r0, sp, #8
   12b14:	bl	14934 <table_sorted_find_int@@Base>
   12b18:	mov	r5, r0
   12b1c:	cmp	r4, #40	; 0x28
   12b20:	moveq	r6, #0
   12b24:	bne	12bac <main@@Base+0x12c>
   12b28:	cmp	r5, #49	; 0x31
   12b2c:	bne	12bc4 <main@@Base+0x144>
   12b30:	vldr	s16, [pc, #392]	; 12cc0 <main@@Base+0x240>
   12b34:	str	r5, [sp]
   12b38:	mov	r3, r4
   12b3c:	mov	r2, #0
   12b40:	vmov.f32	s0, s16
   12b44:	mov	r1, r7
   12b48:	add	r0, sp, #8
   12b4c:	bl	14e9c <table_sorted_subset_find_float@@Base>
   12b50:	mov	r8, r0
   12b54:	str	r5, [sp]
   12b58:	mov	r3, r4
   12b5c:	mov	r2, #1
   12b60:	vmov.f32	s0, s16
   12b64:	mov	r1, r7
   12b68:	add	r0, sp, #8
   12b6c:	bl	14e9c <table_sorted_subset_find_float@@Base>
   12b70:	mov	r4, r0
   12b74:	cmp	r8, #42	; 0x2a
   12b78:	bne	12bdc <main@@Base+0x15c>
   12b7c:	cmp	r4, #43	; 0x2b
   12b80:	bne	12bf4 <main@@Base+0x174>
   12b84:	add	r0, sp, #8
   12b88:	bl	12d34 <table_destroy@@Base>
   12b8c:	mov	r0, r6
   12b90:	add	sp, sp, #68	; 0x44
   12b94:	vpop	{d8}
   12b98:	ldrd	r4, [sp]
   12b9c:	ldrd	r6, [sp, #8]
   12ba0:	ldrd	r8, [sp, #16]
   12ba4:	add	sp, sp, #24
   12ba8:	pop	{pc}		; (ldr pc, [sp], #4)
   12bac:	mov	r1, r4
   12bb0:	movw	r0, #27776	; 0x6c80
   12bb4:	movt	r0, #1
   12bb8:	bl	1290c <printf@plt>
   12bbc:	mvn	r6, #0
   12bc0:	b	12b28 <main@@Base+0xa8>
   12bc4:	mov	r1, r5
   12bc8:	movw	r0, #27832	; 0x6cb8
   12bcc:	movt	r0, #1
   12bd0:	bl	1290c <printf@plt>
   12bd4:	mvn	r6, #0
   12bd8:	b	12b30 <main@@Base+0xb0>
   12bdc:	mov	r1, r8
   12be0:	movw	r0, #27888	; 0x6cf0
   12be4:	movt	r0, #1
   12be8:	bl	1290c <printf@plt>
   12bec:	mvn	r6, #0
   12bf0:	b	12b7c <main@@Base+0xfc>
   12bf4:	mov	r1, r4
   12bf8:	movw	r0, #27952	; 0x6d30
   12bfc:	movt	r0, #1
   12c00:	bl	1290c <printf@plt>
   12c04:	mvn	r6, #0
   12c08:	b	12b84 <main@@Base+0x104>
   12c0c:	tst	r4, #1
   12c10:	vaddeq.f32	s16, s16, s17
   12c14:	add	r0, sp, #8
   12c18:	bl	1531c <table_add_row@@Base>
   12c1c:	mov	r3, r6
   12c20:	mov	r2, r8
   12c24:	mov	r1, r5
   12c28:	add	r0, sp, #8
   12c2c:	bl	15cc0 <table_set_int@@Base>
   12c30:	vmov.f32	s0, s16
   12c34:	mov	r2, r7
   12c38:	mov	r1, r5
   12c3c:	add	r0, sp, #8
   12c40:	bl	15ef0 <table_set_float@@Base>
   12c44:	add	r3, r4, #1
   12c48:	cmp	r3, #99	; 0x63
   12c4c:	bgt	12aec <main@@Base+0x6c>
   12c50:	add	r4, r4, #1
   12c54:	mov	r5, r4
   12c58:	cmp	r4, #0
   12c5c:	beq	12c84 <main@@Base+0x204>
   12c60:	smull	r2, r3, r9, r4
   12c64:	asr	r2, r4, #31
   12c68:	rsb	r3, r2, r3, asr #2
   12c6c:	add	r3, r3, r3, lsl #2
   12c70:	cmp	r4, r3, lsl #1
   12c74:	bne	12c0c <main@@Base+0x18c>
   12c78:	add	r6, r6, #1
   12c7c:	vldr	s16, [pc, #52]	; 12cb8 <main@@Base+0x238>
   12c80:	b	12c0c <main@@Base+0x18c>
   12c84:	add	r0, sp, #8
   12c88:	bl	1531c <table_add_row@@Base>
   12c8c:	mov	r3, r6
   12c90:	mov	r2, r8
   12c94:	mov	r1, #0
   12c98:	add	r0, sp, #8
   12c9c:	bl	15cc0 <table_set_int@@Base>
   12ca0:	vmov.f32	s0, s16
   12ca4:	mov	r2, r7
   12ca8:	mov	r1, #0
   12cac:	add	r0, sp, #8
   12cb0:	bl	15ef0 <table_set_float@@Base>
   12cb4:	b	12c50 <main@@Base+0x1d0>
   12cb8:	andeq	r0, r0, r0
   12cbc:	cdpcc	0, 8, cr0, cr0, cr0, {0}
   12cc0:	svccc	0x00000000

00012cc4 <table_init@@Base>:
   12cc4:	mov	r3, #0
   12cc8:	str	r3, [r0]
   12ccc:	str	r3, [r0, #4]
   12cd0:	str	r3, [r0, #12]
   12cd4:	mov	r2, #10
   12cd8:	str	r2, [r0, #8]
   12cdc:	str	r3, [r0, #16]
   12ce0:	str	r3, [r0, #20]
   12ce4:	str	r3, [r0, #28]
   12ce8:	mov	r1, #20
   12cec:	str	r1, [r0, #24]
   12cf0:	str	r3, [r0, #36]	; 0x24
   12cf4:	str	r3, [r0, #40]	; 0x28
   12cf8:	str	r3, [r0, #44]	; 0x2c
   12cfc:	str	r3, [r0, #32]
   12d00:	str	r3, [r0, #52]	; 0x34
   12d04:	str	r2, [r0, #48]	; 0x30
   12d08:	bx	lr

00012d0c <table_new@@Base>:
   12d0c:	str	r4, [sp, #-8]!
   12d10:	str	lr, [sp, #4]
   12d14:	mov	r0, #56	; 0x38
   12d18:	bl	1293c <malloc@plt>
   12d1c:	mov	r4, r0
   12d20:	bl	12cc4 <table_init@@Base>
   12d24:	mov	r0, r4
   12d28:	ldr	r4, [sp]
   12d2c:	add	sp, sp, #4
   12d30:	pop	{pc}		; (ldr pc, [sp], #4)

00012d34 <table_destroy@@Base>:
   12d34:	strd	r4, [sp, #-16]!
   12d38:	str	r6, [sp, #8]
   12d3c:	str	lr, [sp, #12]
   12d40:	subs	r4, r0, #0
   12d44:	beq	12e04 <table_destroy@@Base+0xd0>
   12d48:	mov	r3, #64	; 0x40
   12d4c:	mvn	r2, #0
   12d50:	mov	r1, r2
   12d54:	mov	r0, r4
   12d58:	bl	135d0 <table_notify@@Base>
   12d5c:	mov	r0, r4
   12d60:	bl	15314 <table_get_row_length@@Base>
   12d64:	subs	r6, r0, #0
   12d68:	ble	12d88 <table_destroy@@Base+0x54>
   12d6c:	mov	r5, #0
   12d70:	mov	r1, r5
   12d74:	mov	r0, r4
   12d78:	bl	152a8 <table_row_destroy@@Base>
   12d7c:	add	r5, r5, #1
   12d80:	cmp	r6, r5
   12d84:	bne	12d70 <table_destroy@@Base+0x3c>
   12d88:	ldr	r0, [r4, #16]
   12d8c:	cmp	r0, #0
   12d90:	beq	12d98 <table_destroy@@Base+0x64>
   12d94:	bl	12918 <free@plt>
   12d98:	mov	r0, r4
   12d9c:	bl	13704 <table_get_column_length@@Base>
   12da0:	subs	r6, r0, #0
   12da4:	ble	12dc4 <table_destroy@@Base+0x90>
   12da8:	mov	r5, #0
   12dac:	mov	r1, r5
   12db0:	mov	r0, r4
   12db4:	bl	136d8 <table_column_destroy@@Base>
   12db8:	add	r5, r5, #1
   12dbc:	cmp	r6, r5
   12dc0:	bne	12dac <table_destroy@@Base+0x78>
   12dc4:	ldr	r0, [r4]
   12dc8:	cmp	r0, #0
   12dcc:	beq	12dd4 <table_destroy@@Base+0xa0>
   12dd0:	bl	12918 <free@plt>
   12dd4:	ldr	r0, [r4, #36]	; 0x24
   12dd8:	cmp	r0, #0
   12ddc:	beq	12de4 <table_destroy@@Base+0xb0>
   12de0:	bl	12918 <free@plt>
   12de4:	ldr	r0, [r4, #40]	; 0x28
   12de8:	cmp	r0, #0
   12dec:	beq	12df4 <table_destroy@@Base+0xc0>
   12df0:	bl	12918 <free@plt>
   12df4:	ldr	r0, [r4, #44]	; 0x2c
   12df8:	cmp	r0, #0
   12dfc:	beq	12e04 <table_destroy@@Base+0xd0>
   12e00:	bl	12918 <free@plt>
   12e04:	ldrd	r4, [sp]
   12e08:	ldr	r6, [sp, #8]
   12e0c:	add	sp, sp, #12
   12e10:	pop	{pc}		; (ldr pc, [sp], #4)

00012e14 <table_delete@@Base>:
   12e14:	str	r4, [sp, #-8]!
   12e18:	str	lr, [sp, #4]
   12e1c:	mov	r4, r0
   12e20:	bl	12d34 <table_destroy@@Base>
   12e24:	mov	r0, r4
   12e28:	bl	12918 <free@plt>
   12e2c:	ldr	r4, [sp]
   12e30:	add	sp, sp, #4
   12e34:	pop	{pc}		; (ldr pc, [sp], #4)

00012e38 <table_dupe@@Base>:
   12e38:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12e3c:	strd	r6, [sp, #8]
   12e40:	strd	r8, [sp, #16]
   12e44:	str	lr, [sp, #24]
   12e48:	sub	sp, sp, #20
   12e4c:	mov	r6, r0
   12e50:	bl	15314 <table_get_row_length@@Base>
   12e54:	mov	r9, r0
   12e58:	mov	r0, r6
   12e5c:	bl	13704 <table_get_column_length@@Base>
   12e60:	mov	r7, r0
   12e64:	bl	12d0c <table_new@@Base>
   12e68:	mov	r8, r0
   12e6c:	cmp	r7, #0
   12e70:	ble	12eb0 <table_dupe@@Base+0x78>
   12e74:	mov	r4, #0
   12e78:	mov	r1, r4
   12e7c:	mov	r0, r6
   12e80:	bl	13a70 <table_get_column_name@@Base>
   12e84:	mov	r5, r0
   12e88:	mov	r1, r4
   12e8c:	mov	r0, r6
   12e90:	bl	13784 <table_get_column_data_type@@Base>
   12e94:	mov	r2, r0
   12e98:	mov	r1, r5
   12e9c:	mov	r0, r8
   12ea0:	bl	13798 <table_add_column@@Base>
   12ea4:	add	r4, r4, #1
   12ea8:	cmp	r7, r4
   12eac:	bne	12e78 <table_dupe@@Base+0x40>
   12eb0:	cmp	r9, #0
   12eb4:	ble	1331c <table_dupe@@Base+0x4e4>
   12eb8:	mov	r5, #0
   12ebc:	b	13304 <table_dupe@@Base+0x4cc>
   12ec0:	mov	r2, r4
   12ec4:	mov	r1, r5
   12ec8:	mov	r0, r6
   12ecc:	bl	14ff8 <table_get_int@@Base>
   12ed0:	mov	r3, r0
   12ed4:	mov	r2, r4
   12ed8:	mov	r1, r5
   12edc:	mov	r0, r8
   12ee0:	bl	15cc0 <table_set_int@@Base>
   12ee4:	add	r4, r4, #1
   12ee8:	cmp	r7, r4
   12eec:	beq	132f8 <table_dupe@@Base+0x4c0>
   12ef0:	mov	r1, r4
   12ef4:	mov	r0, r6
   12ef8:	bl	13784 <table_get_column_data_type@@Base>
   12efc:	cmp	r0, #23
   12f00:	ldrls	pc, [pc, r0, lsl #2]
   12f04:	b	12ee4 <table_dupe@@Base+0xac>
   12f08:	andeq	r2, r1, r0, asr #29
   12f0c:	andeq	r2, r1, r8, ror #30
   12f10:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12f14:			; <UNDEFINED> instruction: 0x00012fb8
   12f18:	andeq	r2, r1, r0, ror #31
   12f1c:	andeq	r3, r1, r8
   12f20:	andeq	r3, r1, r0, lsr r0
   12f24:	andeq	r3, r1, r8, asr r0
   12f28:	andeq	r3, r1, r0, lsl #1
   12f2c:	andeq	r3, r1, r8, lsr #1
   12f30:	ldrdeq	r3, [r1], -r0
   12f34:	strdeq	r3, [r1], -r8
   12f38:	andeq	r3, r1, r0, lsr #2
   12f3c:	andeq	r3, r1, r8, asr #2
   12f40:	andeq	r3, r1, r0, ror r1
   12f44:	muleq	r1, r8, r1
   12f48:	andeq	r3, r1, r8, ror #3
   12f4c:	andeq	r3, r1, ip, lsl #4
   12f50:	andeq	r3, r1, r0, lsr r2
   12f54:	andeq	r3, r1, ip, ror r2
   12f58:	andeq	r3, r1, r4, lsr #5
   12f5c:	andeq	r3, r1, r0, asr #3
   12f60:	andeq	r3, r1, r4, asr r2
   12f64:	andeq	r3, r1, ip, asr #5
   12f68:	mov	r2, r4
   12f6c:	mov	r1, r5
   12f70:	mov	r0, r6
   12f74:	bl	15014 <table_get_uint@@Base>
   12f78:	mov	r3, r0
   12f7c:	mov	r2, r4
   12f80:	mov	r1, r5
   12f84:	mov	r0, r8
   12f88:	bl	15ce4 <table_set_uint@@Base>
   12f8c:	b	12ee4 <table_dupe@@Base+0xac>
   12f90:	mov	r2, r4
   12f94:	mov	r1, r5
   12f98:	mov	r0, r6
   12f9c:	bl	15030 <table_get_int8@@Base>
   12fa0:	mov	r3, r0
   12fa4:	mov	r2, r4
   12fa8:	mov	r1, r5
   12fac:	mov	r0, r8
   12fb0:	bl	15d08 <table_set_int8@@Base>
   12fb4:	b	12ee4 <table_dupe@@Base+0xac>
   12fb8:	mov	r2, r4
   12fbc:	mov	r1, r5
   12fc0:	mov	r0, r6
   12fc4:	bl	1504c <table_get_uint8@@Base>
   12fc8:	mov	r3, r0
   12fcc:	mov	r2, r4
   12fd0:	mov	r1, r5
   12fd4:	mov	r0, r8
   12fd8:	bl	15d2c <table_set_uint8@@Base>
   12fdc:	b	12ee4 <table_dupe@@Base+0xac>
   12fe0:	mov	r2, r4
   12fe4:	mov	r1, r5
   12fe8:	mov	r0, r6
   12fec:	bl	15068 <table_get_int16@@Base>
   12ff0:	mov	r3, r0
   12ff4:	mov	r2, r4
   12ff8:	mov	r1, r5
   12ffc:	mov	r0, r8
   13000:	bl	15d50 <table_set_int16@@Base>
   13004:	b	12ee4 <table_dupe@@Base+0xac>
   13008:	mov	r2, r4
   1300c:	mov	r1, r5
   13010:	mov	r0, r6
   13014:	bl	15084 <table_get_uint16@@Base>
   13018:	mov	r3, r0
   1301c:	mov	r2, r4
   13020:	mov	r1, r5
   13024:	mov	r0, r8
   13028:	bl	15d74 <table_set_uint16@@Base>
   1302c:	b	12ee4 <table_dupe@@Base+0xac>
   13030:	mov	r2, r4
   13034:	mov	r1, r5
   13038:	mov	r0, r6
   1303c:	bl	150a0 <table_get_int32@@Base>
   13040:	mov	r3, r0
   13044:	mov	r2, r4
   13048:	mov	r1, r5
   1304c:	mov	r0, r8
   13050:	bl	15d98 <table_set_int32@@Base>
   13054:	b	12ee4 <table_dupe@@Base+0xac>
   13058:	mov	r2, r4
   1305c:	mov	r1, r5
   13060:	mov	r0, r6
   13064:	bl	150bc <table_get_uint32@@Base>
   13068:	mov	r3, r0
   1306c:	mov	r2, r4
   13070:	mov	r1, r5
   13074:	mov	r0, r8
   13078:	bl	15dbc <table_set_uint32@@Base>
   1307c:	b	12ee4 <table_dupe@@Base+0xac>
   13080:	mov	r2, r4
   13084:	mov	r1, r5
   13088:	mov	r0, r6
   1308c:	bl	150d8 <table_get_int64@@Base>
   13090:	strd	r0, [sp]
   13094:	mov	r2, r4
   13098:	mov	r1, r5
   1309c:	mov	r0, r8
   130a0:	bl	15de0 <table_set_int64@@Base>
   130a4:	b	12ee4 <table_dupe@@Base+0xac>
   130a8:	mov	r2, r4
   130ac:	mov	r1, r5
   130b0:	mov	r0, r6
   130b4:	bl	150f4 <table_get_uint64@@Base>
   130b8:	strd	r0, [sp]
   130bc:	mov	r2, r4
   130c0:	mov	r1, r5
   130c4:	mov	r0, r8
   130c8:	bl	15e00 <table_set_uint64@@Base>
   130cc:	b	12ee4 <table_dupe@@Base+0xac>
   130d0:	mov	r2, r4
   130d4:	mov	r1, r5
   130d8:	mov	r0, r6
   130dc:	bl	15110 <table_get_short@@Base>
   130e0:	mov	r3, r0
   130e4:	mov	r2, r4
   130e8:	mov	r1, r5
   130ec:	mov	r0, r8
   130f0:	bl	15e20 <table_set_short@@Base>
   130f4:	b	12ee4 <table_dupe@@Base+0xac>
   130f8:	mov	r2, r4
   130fc:	mov	r1, r5
   13100:	mov	r0, r6
   13104:	bl	1512c <table_get_ushort@@Base>
   13108:	mov	r3, r0
   1310c:	mov	r2, r4
   13110:	mov	r1, r5
   13114:	mov	r0, r8
   13118:	bl	15e44 <table_set_ushort@@Base>
   1311c:	b	12ee4 <table_dupe@@Base+0xac>
   13120:	mov	r2, r4
   13124:	mov	r1, r5
   13128:	mov	r0, r6
   1312c:	bl	15148 <table_get_long@@Base>
   13130:	mov	r3, r0
   13134:	mov	r2, r4
   13138:	mov	r1, r5
   1313c:	mov	r0, r8
   13140:	bl	15e68 <table_set_long@@Base>
   13144:	b	12ee4 <table_dupe@@Base+0xac>
   13148:	mov	r2, r4
   1314c:	mov	r1, r5
   13150:	mov	r0, r6
   13154:	bl	15164 <table_get_ulong@@Base>
   13158:	mov	r3, r0
   1315c:	mov	r2, r4
   13160:	mov	r1, r5
   13164:	mov	r0, r8
   13168:	bl	15e8c <table_set_ulong@@Base>
   1316c:	b	12ee4 <table_dupe@@Base+0xac>
   13170:	mov	r2, r4
   13174:	mov	r1, r5
   13178:	mov	r0, r6
   1317c:	bl	15180 <table_get_llong@@Base>
   13180:	strd	r0, [sp]
   13184:	mov	r2, r4
   13188:	mov	r1, r5
   1318c:	mov	r0, r8
   13190:	bl	15eb0 <table_set_llong@@Base>
   13194:	b	12ee4 <table_dupe@@Base+0xac>
   13198:	mov	r2, r4
   1319c:	mov	r1, r5
   131a0:	mov	r0, r6
   131a4:	bl	1519c <table_get_ullong@@Base>
   131a8:	strd	r0, [sp]
   131ac:	mov	r2, r4
   131b0:	mov	r1, r5
   131b4:	mov	r0, r8
   131b8:	bl	15ed0 <table_set_ullong@@Base>
   131bc:	b	12ee4 <table_dupe@@Base+0xac>
   131c0:	mov	r2, r4
   131c4:	mov	r1, r5
   131c8:	mov	r0, r6
   131cc:	bl	15244 <table_get_string@@Base>
   131d0:	mov	r3, r0
   131d4:	mov	r2, r4
   131d8:	mov	r1, r5
   131dc:	mov	r0, r8
   131e0:	bl	15f5c <table_set_string@@Base>
   131e4:	b	12ee4 <table_dupe@@Base+0xac>
   131e8:	mov	r2, r4
   131ec:	mov	r1, r5
   131f0:	mov	r0, r6
   131f4:	bl	151b8 <table_get_float@@Base>
   131f8:	mov	r2, r4
   131fc:	mov	r1, r5
   13200:	mov	r0, r8
   13204:	bl	15ef0 <table_set_float@@Base>
   13208:	b	12ee4 <table_dupe@@Base+0xac>
   1320c:	mov	r2, r4
   13210:	mov	r1, r5
   13214:	mov	r0, r6
   13218:	bl	151d4 <table_get_double@@Base>
   1321c:	mov	r2, r4
   13220:	mov	r1, r5
   13224:	mov	r0, r8
   13228:	bl	15f14 <table_set_double@@Base>
   1322c:	b	12ee4 <table_dupe@@Base+0xac>
   13230:	mov	r2, r4
   13234:	mov	r1, r5
   13238:	mov	r0, r6
   1323c:	bl	151f0 <table_get_ldouble@@Base>
   13240:	mov	r2, r4
   13244:	mov	r1, r5
   13248:	mov	r0, r8
   1324c:	bl	15f38 <table_set_ldouble@@Base>
   13250:	b	12ee4 <table_dupe@@Base+0xac>
   13254:	mov	r2, r4
   13258:	mov	r1, r5
   1325c:	mov	r0, r6
   13260:	bl	14fdc <table_get_bool@@Base>
   13264:	mov	r3, r0
   13268:	mov	r2, r4
   1326c:	mov	r1, r5
   13270:	mov	r0, r8
   13274:	bl	15c9c <table_set_bool@@Base>
   13278:	b	12ee4 <table_dupe@@Base+0xac>
   1327c:	mov	r2, r4
   13280:	mov	r1, r5
   13284:	mov	r0, r6
   13288:	bl	1520c <table_get_char@@Base>
   1328c:	mov	r3, r0
   13290:	mov	r2, r4
   13294:	mov	r1, r5
   13298:	mov	r0, r8
   1329c:	bl	15f78 <table_set_char@@Base>
   132a0:	b	12ee4 <table_dupe@@Base+0xac>
   132a4:	mov	r2, r4
   132a8:	mov	r1, r5
   132ac:	mov	r0, r6
   132b0:	bl	15228 <table_get_uchar@@Base>
   132b4:	mov	r3, r0
   132b8:	mov	r2, r4
   132bc:	mov	r1, r5
   132c0:	mov	r0, r8
   132c4:	bl	15f9c <table_set_uchar@@Base>
   132c8:	b	12ee4 <table_dupe@@Base+0xac>
   132cc:	mov	r2, r4
   132d0:	mov	r1, r5
   132d4:	mov	r0, r6
   132d8:	bl	1525c <table_get_ptr@@Base>
   132dc:	str	r0, [sp, #12]
   132e0:	add	r3, sp, #12
   132e4:	mov	r2, r4
   132e8:	mov	r1, r5
   132ec:	mov	r0, r8
   132f0:	bl	15fc0 <table_set_ptr@@Base>
   132f4:	b	12ee4 <table_dupe@@Base+0xac>
   132f8:	add	r5, r5, #1
   132fc:	cmp	r9, r5
   13300:	beq	1331c <table_dupe@@Base+0x4e4>
   13304:	mov	r0, r8
   13308:	bl	1531c <table_add_row@@Base>
   1330c:	cmp	r7, #0
   13310:	ble	132f8 <table_dupe@@Base+0x4c0>
   13314:	mov	r4, #0
   13318:	b	12ef0 <table_dupe@@Base+0xb8>
   1331c:	mov	r0, r8
   13320:	add	sp, sp, #20
   13324:	ldrd	r4, [sp]
   13328:	ldrd	r6, [sp, #8]
   1332c:	ldrd	r8, [sp, #16]
   13330:	add	sp, sp, #24
   13334:	pop	{pc}		; (ldr pc, [sp], #4)

00013338 <table_get_major_version@@Base>:
   13338:	mov	r0, #0
   1333c:	bx	lr

00013340 <table_get_minor_version@@Base>:
   13340:	mov	r0, #0
   13344:	bx	lr

00013348 <table_get_patch_version@@Base>:
   13348:	mov	r0, #0
   1334c:	bx	lr

00013350 <table_get_version@@Base>:
   13350:	movw	r0, #28012	; 0x6d6c
   13354:	movt	r0, #1
   13358:	bx	lr

0001335c <table_get_callback_length@@Base>:
   1335c:	ldr	r0, [r0, #32]
   13360:	bx	lr

00013364 <table_register_callback@@Base>:
   13364:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13368:	strd	r6, [sp, #8]
   1336c:	str	r8, [sp, #16]
   13370:	str	lr, [sp, #20]
   13374:	ldr	r5, [r0, #32]
   13378:	cmp	r5, #0
   1337c:	ble	133d8 <table_register_callback@@Base+0x74>
   13380:	ldr	lr, [r0, #36]	; 0x24
   13384:	sub	lr, lr, #4
   13388:	mov	ip, #0
   1338c:	b	1339c <table_register_callback@@Base+0x38>
   13390:	add	ip, ip, #1
   13394:	cmp	ip, r5
   13398:	beq	133d8 <table_register_callback@@Base+0x74>
   1339c:	lsl	r6, ip, #2
   133a0:	ldr	r4, [lr, #4]!
   133a4:	cmp	r1, r4
   133a8:	bne	13390 <table_register_callback@@Base+0x2c>
   133ac:	ldr	r4, [r0, #40]	; 0x28
   133b0:	ldr	r4, [r4, ip, lsl #2]
   133b4:	cmp	r2, r4
   133b8:	bne	13390 <table_register_callback@@Base+0x2c>
   133bc:	cmp	ip, #0
   133c0:	ble	133d8 <table_register_callback@@Base+0x74>
   133c4:	ldr	r2, [r0, #44]	; 0x2c
   133c8:	ldr	r8, [r2, r6]
   133cc:	orr	r8, r8, r3
   133d0:	str	r8, [r2, r6]
   133d4:	b	13424 <table_register_callback@@Base+0xc0>
   133d8:	mov	r8, r3
   133dc:	mov	r7, r2
   133e0:	mov	r6, r1
   133e4:	mov	r4, r0
   133e8:	ldr	r1, [r0, #48]	; 0x30
   133ec:	udiv	r3, r5, r1
   133f0:	mls	r5, r1, r3, r5
   133f4:	cmp	r5, #0
   133f8:	beq	13438 <table_register_callback@@Base+0xd4>
   133fc:	ldr	r3, [r4, #32]
   13400:	ldr	r2, [r4, #36]	; 0x24
   13404:	str	r6, [r2, r3, lsl #2]
   13408:	ldr	r2, [r4, #40]	; 0x28
   1340c:	str	r7, [r2, r3, lsl #2]
   13410:	ldr	r2, [r4, #44]	; 0x2c
   13414:	str	r8, [r2, r3, lsl #2]
   13418:	ldr	r3, [r4, #32]
   1341c:	add	r3, r3, #1
   13420:	str	r3, [r4, #32]
   13424:	ldrd	r4, [sp]
   13428:	ldrd	r6, [sp, #8]
   1342c:	ldr	r8, [sp, #16]
   13430:	add	sp, sp, #20
   13434:	pop	{pc}		; (ldr pc, [sp], #4)
   13438:	ldr	r3, [r0, #52]	; 0x34
   1343c:	add	r1, r1, r3
   13440:	str	r1, [r0, #52]	; 0x34
   13444:	lsl	r1, r1, #2
   13448:	ldr	r0, [r0, #36]	; 0x24
   1344c:	bl	12924 <realloc@plt>
   13450:	str	r0, [r4, #36]	; 0x24
   13454:	ldr	r1, [r4, #52]	; 0x34
   13458:	lsl	r1, r1, #2
   1345c:	ldr	r0, [r4, #40]	; 0x28
   13460:	bl	12924 <realloc@plt>
   13464:	str	r0, [r4, #40]	; 0x28
   13468:	ldr	r1, [r4, #52]	; 0x34
   1346c:	lsl	r1, r1, #2
   13470:	ldr	r0, [r4, #44]	; 0x2c
   13474:	bl	12924 <realloc@plt>
   13478:	str	r0, [r4, #44]	; 0x2c
   1347c:	b	133fc <table_register_callback@@Base+0x98>

00013480 <table_unregister_callback@@Base>:
   13480:	strd	r4, [sp, #-16]!
   13484:	str	r6, [sp, #8]
   13488:	str	lr, [sp, #12]
   1348c:	ldr	lr, [r0, #32]
   13490:	cmp	lr, #0
   13494:	ble	13540 <table_unregister_callback@@Base+0xc0>
   13498:	ldr	r4, [r0, #36]	; 0x24
   1349c:	sub	r4, r4, #4
   134a0:	mov	r3, #0
   134a4:	b	134b4 <table_unregister_callback@@Base+0x34>
   134a8:	add	r3, r3, #1
   134ac:	cmp	r3, lr
   134b0:	beq	13540 <table_unregister_callback@@Base+0xc0>
   134b4:	ldr	r5, [r4, #4]!
   134b8:	cmp	r1, r5
   134bc:	bne	134a8 <table_unregister_callback@@Base+0x28>
   134c0:	ldr	r5, [r0, #40]	; 0x28
   134c4:	ldr	r5, [r5, r3, lsl #2]
   134c8:	cmp	r2, r5
   134cc:	bne	134a8 <table_unregister_callback@@Base+0x28>
   134d0:	cmn	r3, #1
   134d4:	beq	13540 <table_unregister_callback@@Base+0xc0>
   134d8:	sub	r1, lr, #1
   134dc:	cmp	r1, r3
   134e0:	ble	13528 <table_unregister_callback@@Base+0xa8>
   134e4:	add	r2, r3, #1
   134e8:	lsl	r2, r2, #2
   134ec:	ldr	r1, [r0, #36]	; 0x24
   134f0:	ldr	ip, [r1, r2]
   134f4:	str	ip, [r1, r3, lsl #2]
   134f8:	ldr	r1, [r0, #40]	; 0x28
   134fc:	ldr	ip, [r1, r2]
   13500:	str	ip, [r1, r3, lsl #2]
   13504:	ldr	r1, [r0, #44]	; 0x2c
   13508:	ldr	ip, [r1, r2]
   1350c:	str	ip, [r1, r3, lsl #2]
   13510:	add	r3, r3, #1
   13514:	ldr	r1, [r0, #32]
   13518:	sub	r1, r1, #1
   1351c:	add	r2, r2, #4
   13520:	cmp	r1, r3
   13524:	bgt	134ec <table_unregister_callback@@Base+0x6c>
   13528:	str	r1, [r0, #32]
   1352c:	ldr	r2, [r0, #48]	; 0x30
   13530:	udiv	r3, r1, r2
   13534:	mls	r1, r2, r3, r1
   13538:	cmp	r1, #0
   1353c:	beq	13550 <table_unregister_callback@@Base+0xd0>
   13540:	ldrd	r4, [sp]
   13544:	ldr	r6, [sp, #8]
   13548:	add	sp, sp, #12
   1354c:	pop	{pc}		; (ldr pc, [sp], #4)
   13550:	mov	r4, r0
   13554:	ldr	r1, [r0, #52]	; 0x34
   13558:	sub	r1, r1, r2
   1355c:	str	r1, [r0, #52]	; 0x34
   13560:	cmp	r1, #0
   13564:	beq	135a4 <table_unregister_callback@@Base+0x124>
   13568:	lsl	r1, r1, #2
   1356c:	ldr	r0, [r0, #36]	; 0x24
   13570:	bl	12924 <realloc@plt>
   13574:	str	r0, [r4, #36]	; 0x24
   13578:	ldr	r1, [r4, #52]	; 0x34
   1357c:	lsl	r1, r1, #2
   13580:	ldr	r0, [r4, #40]	; 0x28
   13584:	bl	12924 <realloc@plt>
   13588:	str	r0, [r4, #40]	; 0x28
   1358c:	ldr	r1, [r4, #52]	; 0x34
   13590:	lsl	r1, r1, #2
   13594:	ldr	r0, [r4, #44]	; 0x2c
   13598:	bl	12924 <realloc@plt>
   1359c:	str	r0, [r4, #44]	; 0x2c
   135a0:	b	13540 <table_unregister_callback@@Base+0xc0>
   135a4:	ldr	r0, [r0, #36]	; 0x24
   135a8:	bl	12918 <free@plt>
   135ac:	ldr	r0, [r4, #40]	; 0x28
   135b0:	bl	12918 <free@plt>
   135b4:	ldr	r0, [r4, #44]	; 0x2c
   135b8:	bl	12918 <free@plt>
   135bc:	mov	r3, #0
   135c0:	str	r3, [r4, #36]	; 0x24
   135c4:	str	r3, [r4, #40]	; 0x28
   135c8:	str	r3, [r4, #44]	; 0x2c
   135cc:	b	13540 <table_unregister_callback@@Base+0xc0>

000135d0 <table_notify@@Base>:
   135d0:	ldr	ip, [r0, #32]
   135d4:	cmp	ip, #0
   135d8:	bxle	lr
   135dc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   135e0:	strd	r6, [sp, #8]
   135e4:	strd	r8, [sp, #16]
   135e8:	str	lr, [sp, #24]
   135ec:	sub	sp, sp, #12
   135f0:	mov	r6, r3
   135f4:	mov	r8, r2
   135f8:	mov	r7, r1
   135fc:	mov	r5, r0
   13600:	mov	r4, #0
   13604:	b	13618 <table_notify@@Base+0x48>
   13608:	add	r4, r4, #1
   1360c:	ldr	r0, [r5, #32]
   13610:	cmp	r0, r4
   13614:	ble	13654 <table_notify@@Base+0x84>
   13618:	ldr	r0, [r5, #44]	; 0x2c
   1361c:	ldr	r0, [r0, r4, lsl #2]
   13620:	tst	r6, r0
   13624:	beq	13608 <table_notify@@Base+0x38>
   13628:	ldr	r3, [r5, #36]	; 0x24
   1362c:	ldr	r2, [r5, #40]	; 0x28
   13630:	ldr	r2, [r2, r4, lsl #2]
   13634:	str	r2, [sp]
   13638:	ldr	r9, [r3, r4, lsl #2]
   1363c:	mov	r3, r6
   13640:	mov	r2, r8
   13644:	mov	r1, r7
   13648:	mov	r0, r5
   1364c:	blx	r9
   13650:	b	13608 <table_notify@@Base+0x38>
   13654:	add	sp, sp, #12
   13658:	ldrd	r4, [sp]
   1365c:	ldrd	r6, [sp, #8]
   13660:	ldrd	r8, [sp, #16]
   13664:	add	sp, sp, #24
   13668:	pop	{pc}		; (ldr pc, [sp], #4)

0001366c <table_column_init@@Base>:
   1366c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13670:	strd	r6, [sp, #8]
   13674:	str	r8, [sp, #16]
   13678:	str	lr, [sp, #20]
   1367c:	mov	r7, r2
   13680:	mov	r8, r3
   13684:	add	r1, r1, r1, lsl #1
   13688:	lsl	r4, r1, #2
   1368c:	ldr	r6, [r0]
   13690:	add	r5, r6, r4
   13694:	mov	r0, r2
   13698:	bl	12960 <strlen@plt>
   1369c:	add	r0, r0, #1
   136a0:	bl	1293c <malloc@plt>
   136a4:	str	r0, [r6, r4]
   136a8:	cmp	r0, #0
   136ac:	beq	136b8 <table_column_init@@Base+0x4c>
   136b0:	mov	r1, r7
   136b4:	bl	12930 <strcpy@plt>
   136b8:	str	r8, [r5, #4]
   136bc:	ldr	r3, [sp, #24]
   136c0:	str	r3, [r5, #8]
   136c4:	ldrd	r4, [sp]
   136c8:	ldrd	r6, [sp, #8]
   136cc:	ldr	r8, [sp, #16]
   136d0:	add	sp, sp, #20
   136d4:	pop	{pc}		; (ldr pc, [sp], #4)

000136d8 <table_column_destroy@@Base>:
   136d8:	ldr	r3, [r0]
   136dc:	add	r1, r1, r1, lsl #1
   136e0:	ldr	r0, [r3, r1, lsl #2]
   136e4:	cmp	r0, #0
   136e8:	bxeq	lr
   136ec:	str	r4, [sp, #-8]!
   136f0:	str	lr, [sp, #4]
   136f4:	bl	12918 <free@plt>
   136f8:	ldr	r4, [sp]
   136fc:	add	sp, sp, #4
   13700:	pop	{pc}		; (ldr pc, [sp], #4)

00013704 <table_get_column_length@@Base>:
   13704:	ldr	r0, [r0, #4]
   13708:	bx	lr

0001370c <table_get_column@@Base>:
   1370c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13710:	strd	r6, [sp, #8]
   13714:	str	r8, [sp, #16]
   13718:	str	lr, [sp, #20]
   1371c:	ldr	r7, [r0, #4]
   13720:	cmp	r7, #0
   13724:	ble	13760 <table_get_column@@Base+0x54>
   13728:	mov	r6, r1
   1372c:	ldr	r5, [r0]
   13730:	mov	r4, #0
   13734:	mov	r1, r6
   13738:	ldr	r0, [r5]
   1373c:	bl	12900 <strcmp@plt>
   13740:	cmp	r0, #0
   13744:	beq	13764 <table_get_column@@Base+0x58>
   13748:	add	r4, r4, #1
   1374c:	add	r5, r5, #12
   13750:	cmp	r4, r7
   13754:	bne	13734 <table_get_column@@Base+0x28>
   13758:	mvn	r4, #0
   1375c:	b	1376c <table_get_column@@Base+0x60>
   13760:	mov	r4, #0
   13764:	cmp	r4, r7
   13768:	mvneq	r4, #0
   1376c:	mov	r0, r4
   13770:	ldrd	r4, [sp]
   13774:	ldrd	r6, [sp, #8]
   13778:	ldr	r8, [sp, #16]
   1377c:	add	sp, sp, #20
   13780:	pop	{pc}		; (ldr pc, [sp], #4)

00013784 <table_get_column_data_type@@Base>:
   13784:	ldr	r3, [r0]
   13788:	add	r1, r1, r1, lsl #1
   1378c:	add	r3, r3, r1, lsl #2
   13790:	ldr	r0, [r3, #4]
   13794:	bx	lr

00013798 <table_add_column@@Base>:
   13798:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1379c:	strd	r6, [sp, #8]
   137a0:	strd	r8, [sp, #16]
   137a4:	str	lr, [sp, #24]
   137a8:	sub	sp, sp, #12
   137ac:	mov	r4, r0
   137b0:	mov	r7, r1
   137b4:	mov	r6, r2
   137b8:	ldr	r1, [r0, #8]
   137bc:	ldr	r2, [r0, #4]
   137c0:	udiv	r3, r2, r1
   137c4:	mls	r3, r1, r3, r2
   137c8:	cmp	r3, #0
   137cc:	beq	13860 <table_add_column@@Base+0xc8>
   137d0:	mov	r0, r4
   137d4:	bl	15314 <table_get_row_length@@Base>
   137d8:	mov	r8, r0
   137dc:	ldr	r9, [r4, #4]
   137e0:	mov	r0, r6
   137e4:	bl	14220 <table_get_default_compare_function_for_data_type@@Base>
   137e8:	str	r0, [sp]
   137ec:	mov	r3, r6
   137f0:	mov	r2, r7
   137f4:	mov	r1, r9
   137f8:	mov	r0, r4
   137fc:	bl	1366c <table_column_init@@Base>
   13800:	cmp	r8, #0
   13804:	ble	13828 <table_add_column@@Base+0x90>
   13808:	mov	r5, #0
   1380c:	mov	r2, r9
   13810:	mov	r1, r5
   13814:	mov	r0, r4
   13818:	bl	16b54 <table_cell_init@@Base>
   1381c:	add	r5, r5, #1
   13820:	cmp	r8, r5
   13824:	bne	1380c <table_add_column@@Base+0x74>
   13828:	mov	r3, #8
   1382c:	ldr	r2, [r4, #4]
   13830:	mvn	r1, #0
   13834:	mov	r0, r4
   13838:	bl	135d0 <table_notify@@Base>
   1383c:	ldr	r0, [r4, #4]
   13840:	add	r3, r0, #1
   13844:	str	r3, [r4, #4]
   13848:	add	sp, sp, #12
   1384c:	ldrd	r4, [sp]
   13850:	ldrd	r6, [sp, #8]
   13854:	ldrd	r8, [sp, #16]
   13858:	add	sp, sp, #24
   1385c:	pop	{pc}		; (ldr pc, [sp], #4)
   13860:	ldr	r3, [r0, #12]
   13864:	add	r1, r1, r3
   13868:	str	r1, [r0, #12]
   1386c:	add	r1, r1, r1, lsl #1
   13870:	lsl	r1, r1, #2
   13874:	ldr	r0, [r0]
   13878:	bl	12924 <realloc@plt>
   1387c:	str	r0, [r4]
   13880:	mov	r0, r4
   13884:	bl	15314 <table_get_row_length@@Base>
   13888:	subs	r9, r0, #0
   1388c:	ble	137d0 <table_add_column@@Base+0x38>
   13890:	mov	r5, #0
   13894:	mov	r1, r5
   13898:	mov	r0, r4
   1389c:	bl	1550c <table_get_row_ptr@@Base>
   138a0:	mov	r8, r0
   138a4:	ldr	r1, [r4, #12]
   138a8:	lsl	r1, r1, #2
   138ac:	ldr	r0, [r0]
   138b0:	bl	12924 <realloc@plt>
   138b4:	str	r0, [r8]
   138b8:	add	r5, r5, #1
   138bc:	cmp	r9, r5
   138c0:	bne	13894 <table_add_column@@Base+0xfc>
   138c4:	b	137d0 <table_add_column@@Base+0x38>

000138c8 <table_remove_column@@Base>:
   138c8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   138cc:	strd	r6, [sp, #8]
   138d0:	strd	r8, [sp, #16]
   138d4:	str	sl, [sp, #24]
   138d8:	str	lr, [sp, #28]
   138dc:	mov	r4, r0
   138e0:	mov	r5, r1
   138e4:	bl	136d8 <table_column_destroy@@Base>
   138e8:	ldr	r6, [r4, #4]
   138ec:	sub	r7, r6, #1
   138f0:	cmp	r5, r7
   138f4:	bge	1393c <table_remove_column@@Base+0x74>
   138f8:	add	r2, r5, r5, lsl #1
   138fc:	lsl	r2, r2, #2
   13900:	mov	r8, r7
   13904:	mov	r0, r5
   13908:	ldr	r3, [r4]
   1390c:	add	r1, r3, r2
   13910:	add	r2, r2, #12
   13914:	add	r3, r3, r2
   13918:	ldr	lr, [r3]
   1391c:	ldr	ip, [r3, #4]
   13920:	ldr	r3, [r3, #8]
   13924:	str	lr, [r1]
   13928:	str	ip, [r1, #4]
   1392c:	str	r3, [r1, #8]
   13930:	add	r0, r0, #1
   13934:	cmp	r8, r0
   13938:	bne	13908 <table_remove_column@@Base+0x40>
   1393c:	mov	r0, r4
   13940:	bl	15314 <table_get_row_length@@Base>
   13944:	subs	r9, r0, #0
   13948:	ble	139b8 <table_remove_column@@Base+0xf0>
   1394c:	lsl	sl, r5, #2
   13950:	mov	r8, #0
   13954:	sub	r6, r6, #1
   13958:	b	13968 <table_remove_column@@Base+0xa0>
   1395c:	add	r8, r8, #1
   13960:	cmp	r9, r8
   13964:	beq	139b8 <table_remove_column@@Base+0xf0>
   13968:	mov	r2, r5
   1396c:	mov	r1, r8
   13970:	mov	r0, r4
   13974:	bl	16b74 <table_cell_destroy@@Base>
   13978:	mov	r1, r8
   1397c:	mov	r0, r4
   13980:	bl	1550c <table_get_row_ptr@@Base>
   13984:	cmp	r5, r7
   13988:	bge	1395c <table_remove_column@@Base+0x94>
   1398c:	mov	r3, sl
   13990:	mov	r2, r5
   13994:	ldr	r1, [r0]
   13998:	add	ip, r1, r3
   1399c:	add	r3, r3, #4
   139a0:	ldr	r1, [r1, r3]
   139a4:	str	r1, [ip]
   139a8:	add	r2, r2, #1
   139ac:	cmp	r6, r2
   139b0:	bne	13994 <table_remove_column@@Base+0xcc>
   139b4:	b	1395c <table_remove_column@@Base+0x94>
   139b8:	ldr	r3, [r4, #4]
   139bc:	sub	r3, r3, #1
   139c0:	str	r3, [r4, #4]
   139c4:	ldr	r1, [r4, #8]
   139c8:	udiv	r2, r3, r1
   139cc:	mls	r3, r1, r2, r3
   139d0:	cmp	r3, #0
   139d4:	beq	13a08 <table_remove_column@@Base+0x140>
   139d8:	mov	r3, #16
   139dc:	mov	r2, r5
   139e0:	mvn	r1, #0
   139e4:	mov	r0, r4
   139e8:	bl	135d0 <table_notify@@Base>
   139ec:	mov	r0, #0
   139f0:	ldrd	r4, [sp]
   139f4:	ldrd	r6, [sp, #8]
   139f8:	ldrd	r8, [sp, #16]
   139fc:	ldr	sl, [sp, #24]
   13a00:	add	sp, sp, #28
   13a04:	pop	{pc}		; (ldr pc, [sp], #4)
   13a08:	ldr	r3, [r4, #12]
   13a0c:	sub	r1, r3, r1
   13a10:	str	r1, [r4, #12]
   13a14:	add	r1, r1, r1, lsl #1
   13a18:	lsl	r1, r1, #2
   13a1c:	ldr	r0, [r4]
   13a20:	bl	12924 <realloc@plt>
   13a24:	str	r0, [r4]
   13a28:	mov	r0, r4
   13a2c:	bl	15314 <table_get_row_length@@Base>
   13a30:	subs	r8, r0, #0
   13a34:	ble	139d8 <table_remove_column@@Base+0x110>
   13a38:	mov	r6, #0
   13a3c:	mov	r1, r6
   13a40:	mov	r0, r4
   13a44:	bl	1550c <table_get_row_ptr@@Base>
   13a48:	mov	r7, r0
   13a4c:	ldr	r1, [r4, #12]
   13a50:	lsl	r1, r1, #2
   13a54:	ldr	r0, [r0]
   13a58:	bl	12924 <realloc@plt>
   13a5c:	str	r0, [r7]
   13a60:	add	r6, r6, #1
   13a64:	cmp	r8, r6
   13a68:	bne	13a3c <table_remove_column@@Base+0x174>
   13a6c:	b	139d8 <table_remove_column@@Base+0x110>

00013a70 <table_get_column_name@@Base>:
   13a70:	ldr	r3, [r0]
   13a74:	add	r1, r1, r1, lsl #1
   13a78:	ldr	r0, [r3, r1, lsl #2]
   13a7c:	bx	lr

00013a80 <table_get_col_ptr@@Base>:
   13a80:	add	r1, r1, r1, lsl #1
   13a84:	ldr	r0, [r0]
   13a88:	add	r0, r0, r1, lsl #2
   13a8c:	bx	lr

00013a90 <table_get_column_compare_function@@Base>:
   13a90:	ldr	r3, [r0]
   13a94:	add	r1, r1, r1, lsl #1
   13a98:	add	r3, r3, r1, lsl #2
   13a9c:	ldr	r0, [r3, #8]
   13aa0:	bx	lr

00013aa4 <table_set_column_compare_function@@Base>:
   13aa4:	ldr	r3, [r0]
   13aa8:	add	r1, r1, r1, lsl #1
   13aac:	add	r3, r3, r1, lsl #2
   13ab0:	str	r2, [r3, #8]
   13ab4:	bx	lr

00013ab8 <table_compare_bool@@Base>:
   13ab8:	cmp	r0, #0
   13abc:	beq	13ae8 <table_compare_bool@@Base+0x30>
   13ac0:	cmp	r1, #0
   13ac4:	beq	13af8 <table_compare_bool@@Base+0x40>
   13ac8:	ldrb	r0, [r0]
   13acc:	ldrb	r1, [r1]
   13ad0:	cmp	r0, r1
   13ad4:	bhi	13b00 <table_compare_bool@@Base+0x48>
   13ad8:	cmp	r0, r1
   13adc:	movcs	r0, #0
   13ae0:	mvncc	r0, #0
   13ae4:	bx	lr
   13ae8:	adds	r0, r1, #0
   13aec:	movne	r0, #1
   13af0:	rsb	r0, r0, #0
   13af4:	bx	lr
   13af8:	mov	r0, #1
   13afc:	bx	lr
   13b00:	mov	r0, #1
   13b04:	bx	lr

00013b08 <table_compare_int@@Base>:
   13b08:	cmp	r0, #0
   13b0c:	beq	13b38 <table_compare_int@@Base+0x30>
   13b10:	cmp	r1, #0
   13b14:	beq	13b48 <table_compare_int@@Base+0x40>
   13b18:	ldr	r0, [r0]
   13b1c:	ldr	r1, [r1]
   13b20:	cmp	r0, r1
   13b24:	bgt	13b50 <table_compare_int@@Base+0x48>
   13b28:	cmp	r0, r1
   13b2c:	movge	r0, #0
   13b30:	mvnlt	r0, #0
   13b34:	bx	lr
   13b38:	adds	r0, r1, #0
   13b3c:	movne	r0, #1
   13b40:	rsb	r0, r0, #0
   13b44:	bx	lr
   13b48:	mov	r0, #1
   13b4c:	bx	lr
   13b50:	mov	r0, #1
   13b54:	bx	lr

00013b58 <table_compare_uint@@Base>:
   13b58:	cmp	r0, #0
   13b5c:	beq	13b88 <table_compare_uint@@Base+0x30>
   13b60:	cmp	r1, #0
   13b64:	beq	13b98 <table_compare_uint@@Base+0x40>
   13b68:	ldr	r0, [r0]
   13b6c:	ldr	r1, [r1]
   13b70:	cmp	r0, r1
   13b74:	bhi	13ba0 <table_compare_uint@@Base+0x48>
   13b78:	cmp	r0, r1
   13b7c:	movcs	r0, #0
   13b80:	mvncc	r0, #0
   13b84:	bx	lr
   13b88:	adds	r0, r1, #0
   13b8c:	movne	r0, #1
   13b90:	rsb	r0, r0, #0
   13b94:	bx	lr
   13b98:	mov	r0, #1
   13b9c:	bx	lr
   13ba0:	mov	r0, #1
   13ba4:	bx	lr

00013ba8 <table_compare_int8@@Base>:
   13ba8:	cmp	r0, #0
   13bac:	beq	13bd8 <table_compare_int8@@Base+0x30>
   13bb0:	cmp	r1, #0
   13bb4:	beq	13be8 <table_compare_int8@@Base+0x40>
   13bb8:	ldrsb	r0, [r0]
   13bbc:	ldrsb	r1, [r1]
   13bc0:	cmp	r0, r1
   13bc4:	bgt	13bf0 <table_compare_int8@@Base+0x48>
   13bc8:	cmp	r0, r1
   13bcc:	movge	r0, #0
   13bd0:	mvnlt	r0, #0
   13bd4:	bx	lr
   13bd8:	adds	r0, r1, #0
   13bdc:	movne	r0, #1
   13be0:	rsb	r0, r0, #0
   13be4:	bx	lr
   13be8:	mov	r0, #1
   13bec:	bx	lr
   13bf0:	mov	r0, #1
   13bf4:	bx	lr

00013bf8 <table_compare_uint8@@Base>:
   13bf8:	cmp	r0, #0
   13bfc:	beq	13c28 <table_compare_uint8@@Base+0x30>
   13c00:	cmp	r1, #0
   13c04:	beq	13c38 <table_compare_uint8@@Base+0x40>
   13c08:	ldrb	r0, [r0]
   13c0c:	ldrb	r1, [r1]
   13c10:	cmp	r0, r1
   13c14:	bhi	13c40 <table_compare_uint8@@Base+0x48>
   13c18:	cmp	r0, r1
   13c1c:	movcs	r0, #0
   13c20:	mvncc	r0, #0
   13c24:	bx	lr
   13c28:	adds	r0, r1, #0
   13c2c:	movne	r0, #1
   13c30:	rsb	r0, r0, #0
   13c34:	bx	lr
   13c38:	mov	r0, #1
   13c3c:	bx	lr
   13c40:	mov	r0, #1
   13c44:	bx	lr

00013c48 <table_compare_int16@@Base>:
   13c48:	cmp	r0, #0
   13c4c:	beq	13c78 <table_compare_int16@@Base+0x30>
   13c50:	cmp	r1, #0
   13c54:	beq	13c88 <table_compare_int16@@Base+0x40>
   13c58:	ldrsh	r0, [r0]
   13c5c:	ldrsh	r1, [r1]
   13c60:	cmp	r0, r1
   13c64:	bgt	13c90 <table_compare_int16@@Base+0x48>
   13c68:	cmp	r0, r1
   13c6c:	movge	r0, #0
   13c70:	mvnlt	r0, #0
   13c74:	bx	lr
   13c78:	adds	r0, r1, #0
   13c7c:	movne	r0, #1
   13c80:	rsb	r0, r0, #0
   13c84:	bx	lr
   13c88:	mov	r0, #1
   13c8c:	bx	lr
   13c90:	mov	r0, #1
   13c94:	bx	lr

00013c98 <table_compare_uint16@@Base>:
   13c98:	cmp	r0, #0
   13c9c:	beq	13cc8 <table_compare_uint16@@Base+0x30>
   13ca0:	cmp	r1, #0
   13ca4:	beq	13cd8 <table_compare_uint16@@Base+0x40>
   13ca8:	ldrh	r0, [r0]
   13cac:	ldrh	r1, [r1]
   13cb0:	cmp	r0, r1
   13cb4:	bhi	13ce0 <table_compare_uint16@@Base+0x48>
   13cb8:	cmp	r0, r1
   13cbc:	movcs	r0, #0
   13cc0:	mvncc	r0, #0
   13cc4:	bx	lr
   13cc8:	adds	r0, r1, #0
   13ccc:	movne	r0, #1
   13cd0:	rsb	r0, r0, #0
   13cd4:	bx	lr
   13cd8:	mov	r0, #1
   13cdc:	bx	lr
   13ce0:	mov	r0, #1
   13ce4:	bx	lr

00013ce8 <table_compare_int32@@Base>:
   13ce8:	cmp	r0, #0
   13cec:	beq	13d18 <table_compare_int32@@Base+0x30>
   13cf0:	cmp	r1, #0
   13cf4:	beq	13d28 <table_compare_int32@@Base+0x40>
   13cf8:	ldr	r0, [r0]
   13cfc:	ldr	r1, [r1]
   13d00:	cmp	r0, r1
   13d04:	bgt	13d30 <table_compare_int32@@Base+0x48>
   13d08:	cmp	r0, r1
   13d0c:	movge	r0, #0
   13d10:	mvnlt	r0, #0
   13d14:	bx	lr
   13d18:	adds	r0, r1, #0
   13d1c:	movne	r0, #1
   13d20:	rsb	r0, r0, #0
   13d24:	bx	lr
   13d28:	mov	r0, #1
   13d2c:	bx	lr
   13d30:	mov	r0, #1
   13d34:	bx	lr

00013d38 <table_compare_uint32@@Base>:
   13d38:	cmp	r0, #0
   13d3c:	beq	13d68 <table_compare_uint32@@Base+0x30>
   13d40:	cmp	r1, #0
   13d44:	beq	13d78 <table_compare_uint32@@Base+0x40>
   13d48:	ldr	r0, [r0]
   13d4c:	ldr	r1, [r1]
   13d50:	cmp	r0, r1
   13d54:	bhi	13d80 <table_compare_uint32@@Base+0x48>
   13d58:	cmp	r0, r1
   13d5c:	movcs	r0, #0
   13d60:	mvncc	r0, #0
   13d64:	bx	lr
   13d68:	adds	r0, r1, #0
   13d6c:	movne	r0, #1
   13d70:	rsb	r0, r0, #0
   13d74:	bx	lr
   13d78:	mov	r0, #1
   13d7c:	bx	lr
   13d80:	mov	r0, #1
   13d84:	bx	lr

00013d88 <table_compare_int64@@Base>:
   13d88:	cmp	r0, #0
   13d8c:	beq	13dd0 <table_compare_int64@@Base+0x48>
   13d90:	cmp	r1, #0
   13d94:	beq	13de0 <table_compare_int64@@Base+0x58>
   13d98:	strd	r4, [sp, #-8]!
   13d9c:	ldrd	r4, [r0]
   13da0:	ldrd	r2, [r1]
   13da4:	cmp	r2, r4
   13da8:	sbcs	r1, r3, r5
   13dac:	movlt	r0, #1
   13db0:	blt	13dc4 <table_compare_int64@@Base+0x3c>
   13db4:	cmp	r4, r2
   13db8:	sbcs	r3, r5, r3
   13dbc:	mvnlt	r0, #0
   13dc0:	movge	r0, #0
   13dc4:	ldrd	r4, [sp]
   13dc8:	add	sp, sp, #8
   13dcc:	bx	lr
   13dd0:	adds	r1, r1, #0
   13dd4:	movne	r1, #1
   13dd8:	rsb	r0, r1, #0
   13ddc:	bx	lr
   13de0:	mov	r0, #1
   13de4:	bx	lr

00013de8 <table_compare_uint64@@Base>:
   13de8:	cmp	r0, #0
   13dec:	beq	13e28 <table_compare_uint64@@Base+0x40>
   13df0:	cmp	r1, #0
   13df4:	beq	13e38 <table_compare_uint64@@Base+0x50>
   13df8:	strd	r4, [sp, #-8]!
   13dfc:	ldrd	r4, [r0]
   13e00:	ldrd	r2, [r1]
   13e04:	cmp	r5, r3
   13e08:	cmpeq	r4, r2
   13e0c:	movhi	r0, #1
   13e10:	bhi	13e1c <table_compare_uint64@@Base+0x34>
   13e14:	mvncc	r0, #0
   13e18:	movcs	r0, #0
   13e1c:	ldrd	r4, [sp]
   13e20:	add	sp, sp, #8
   13e24:	bx	lr
   13e28:	adds	r1, r1, #0
   13e2c:	movne	r1, #1
   13e30:	rsb	r0, r1, #0
   13e34:	bx	lr
   13e38:	mov	r0, #1
   13e3c:	bx	lr

00013e40 <table_compare_short@@Base>:
   13e40:	cmp	r0, #0
   13e44:	beq	13e70 <table_compare_short@@Base+0x30>
   13e48:	cmp	r1, #0
   13e4c:	beq	13e80 <table_compare_short@@Base+0x40>
   13e50:	ldrsh	r0, [r0]
   13e54:	ldrsh	r1, [r1]
   13e58:	cmp	r0, r1
   13e5c:	bgt	13e88 <table_compare_short@@Base+0x48>
   13e60:	cmp	r0, r1
   13e64:	movge	r0, #0
   13e68:	mvnlt	r0, #0
   13e6c:	bx	lr
   13e70:	adds	r0, r1, #0
   13e74:	movne	r0, #1
   13e78:	rsb	r0, r0, #0
   13e7c:	bx	lr
   13e80:	mov	r0, #1
   13e84:	bx	lr
   13e88:	mov	r0, #1
   13e8c:	bx	lr

00013e90 <table_compare_ushort@@Base>:
   13e90:	cmp	r0, #0
   13e94:	beq	13ec0 <table_compare_ushort@@Base+0x30>
   13e98:	cmp	r1, #0
   13e9c:	beq	13ed0 <table_compare_ushort@@Base+0x40>
   13ea0:	ldrh	r0, [r0]
   13ea4:	ldrh	r1, [r1]
   13ea8:	cmp	r0, r1
   13eac:	bhi	13ed8 <table_compare_ushort@@Base+0x48>
   13eb0:	cmp	r0, r1
   13eb4:	movcs	r0, #0
   13eb8:	mvncc	r0, #0
   13ebc:	bx	lr
   13ec0:	adds	r0, r1, #0
   13ec4:	movne	r0, #1
   13ec8:	rsb	r0, r0, #0
   13ecc:	bx	lr
   13ed0:	mov	r0, #1
   13ed4:	bx	lr
   13ed8:	mov	r0, #1
   13edc:	bx	lr

00013ee0 <table_compare_long@@Base>:
   13ee0:	cmp	r0, #0
   13ee4:	beq	13f10 <table_compare_long@@Base+0x30>
   13ee8:	cmp	r1, #0
   13eec:	beq	13f20 <table_compare_long@@Base+0x40>
   13ef0:	ldr	r0, [r0]
   13ef4:	ldr	r1, [r1]
   13ef8:	cmp	r0, r1
   13efc:	bgt	13f28 <table_compare_long@@Base+0x48>
   13f00:	cmp	r0, r1
   13f04:	movge	r0, #0
   13f08:	mvnlt	r0, #0
   13f0c:	bx	lr
   13f10:	adds	r0, r1, #0
   13f14:	movne	r0, #1
   13f18:	rsb	r0, r0, #0
   13f1c:	bx	lr
   13f20:	mov	r0, #1
   13f24:	bx	lr
   13f28:	mov	r0, #1
   13f2c:	bx	lr

00013f30 <table_compare_ulong@@Base>:
   13f30:	cmp	r0, #0
   13f34:	beq	13f60 <table_compare_ulong@@Base+0x30>
   13f38:	cmp	r1, #0
   13f3c:	beq	13f70 <table_compare_ulong@@Base+0x40>
   13f40:	ldr	r0, [r0]
   13f44:	ldr	r1, [r1]
   13f48:	cmp	r0, r1
   13f4c:	bhi	13f78 <table_compare_ulong@@Base+0x48>
   13f50:	cmp	r0, r1
   13f54:	movcs	r0, #0
   13f58:	mvncc	r0, #0
   13f5c:	bx	lr
   13f60:	adds	r0, r1, #0
   13f64:	movne	r0, #1
   13f68:	rsb	r0, r0, #0
   13f6c:	bx	lr
   13f70:	mov	r0, #1
   13f74:	bx	lr
   13f78:	mov	r0, #1
   13f7c:	bx	lr

00013f80 <table_compare_llong@@Base>:
   13f80:	cmp	r0, #0
   13f84:	beq	13fc8 <table_compare_llong@@Base+0x48>
   13f88:	cmp	r1, #0
   13f8c:	beq	13fd8 <table_compare_llong@@Base+0x58>
   13f90:	strd	r4, [sp, #-8]!
   13f94:	ldrd	r4, [r0]
   13f98:	ldrd	r2, [r1]
   13f9c:	cmp	r2, r4
   13fa0:	sbcs	r1, r3, r5
   13fa4:	movlt	r0, #1
   13fa8:	blt	13fbc <table_compare_llong@@Base+0x3c>
   13fac:	cmp	r4, r2
   13fb0:	sbcs	r3, r5, r3
   13fb4:	mvnlt	r0, #0
   13fb8:	movge	r0, #0
   13fbc:	ldrd	r4, [sp]
   13fc0:	add	sp, sp, #8
   13fc4:	bx	lr
   13fc8:	adds	r1, r1, #0
   13fcc:	movne	r1, #1
   13fd0:	rsb	r0, r1, #0
   13fd4:	bx	lr
   13fd8:	mov	r0, #1
   13fdc:	bx	lr

00013fe0 <table_compare_ullong@@Base>:
   13fe0:	cmp	r0, #0
   13fe4:	beq	14010 <table_compare_ullong@@Base+0x30>
   13fe8:	cmp	r1, #0
   13fec:	beq	14020 <table_compare_ullong@@Base+0x40>
   13ff0:	ldr	r0, [r0]
   13ff4:	ldr	r1, [r1]
   13ff8:	cmp	r0, r1
   13ffc:	bhi	14028 <table_compare_ullong@@Base+0x48>
   14000:	cmp	r0, r1
   14004:	movcs	r0, #0
   14008:	mvncc	r0, #0
   1400c:	bx	lr
   14010:	adds	r0, r1, #0
   14014:	movne	r0, #1
   14018:	rsb	r0, r0, #0
   1401c:	bx	lr
   14020:	mov	r0, #1
   14024:	bx	lr
   14028:	mov	r0, #1
   1402c:	bx	lr

00014030 <table_compare_float@@Base>:
   14030:	cmp	r0, #0
   14034:	beq	14060 <table_compare_float@@Base+0x30>
   14038:	cmp	r1, #0
   1403c:	beq	14070 <table_compare_float@@Base+0x40>
   14040:	vldr	s14, [r0]
   14044:	vldr	s15, [r1]
   14048:	vcmpe.f32	s14, s15
   1404c:	vmrs	APSR_nzcv, fpscr
   14050:	bgt	14078 <table_compare_float@@Base+0x48>
   14054:	mvnmi	r0, #0
   14058:	movpl	r0, #0
   1405c:	bx	lr
   14060:	adds	r1, r1, #0
   14064:	movne	r1, #1
   14068:	rsb	r0, r1, #0
   1406c:	bx	lr
   14070:	mov	r0, #1
   14074:	bx	lr
   14078:	mov	r0, #1
   1407c:	bx	lr

00014080 <table_compare_double@@Base>:
   14080:	cmp	r0, #0
   14084:	beq	140b0 <table_compare_double@@Base+0x30>
   14088:	cmp	r1, #0
   1408c:	beq	140c0 <table_compare_double@@Base+0x40>
   14090:	vldr	d6, [r0]
   14094:	vldr	d7, [r1]
   14098:	vcmpe.f64	d6, d7
   1409c:	vmrs	APSR_nzcv, fpscr
   140a0:	bgt	140c8 <table_compare_double@@Base+0x48>
   140a4:	mvnmi	r0, #0
   140a8:	movpl	r0, #0
   140ac:	bx	lr
   140b0:	adds	r1, r1, #0
   140b4:	movne	r1, #1
   140b8:	rsb	r0, r1, #0
   140bc:	bx	lr
   140c0:	mov	r0, #1
   140c4:	bx	lr
   140c8:	mov	r0, #1
   140cc:	bx	lr

000140d0 <table_compare_ldouble@@Base>:
   140d0:	cmp	r0, #0
   140d4:	beq	14100 <table_compare_ldouble@@Base+0x30>
   140d8:	cmp	r1, #0
   140dc:	beq	14110 <table_compare_ldouble@@Base+0x40>
   140e0:	vldr	d6, [r0]
   140e4:	vldr	d7, [r1]
   140e8:	vcmpe.f64	d6, d7
   140ec:	vmrs	APSR_nzcv, fpscr
   140f0:	bgt	14118 <table_compare_ldouble@@Base+0x48>
   140f4:	mvnmi	r0, #0
   140f8:	movpl	r0, #0
   140fc:	bx	lr
   14100:	adds	r1, r1, #0
   14104:	movne	r1, #1
   14108:	rsb	r0, r1, #0
   1410c:	bx	lr
   14110:	mov	r0, #1
   14114:	bx	lr
   14118:	mov	r0, #1
   1411c:	bx	lr

00014120 <table_compare_char@@Base>:
   14120:	cmp	r0, #0
   14124:	beq	14150 <table_compare_char@@Base+0x30>
   14128:	cmp	r1, #0
   1412c:	beq	14160 <table_compare_char@@Base+0x40>
   14130:	ldrb	r0, [r0]
   14134:	ldrb	r1, [r1]
   14138:	cmp	r0, r1
   1413c:	bhi	14168 <table_compare_char@@Base+0x48>
   14140:	cmp	r0, r1
   14144:	movcs	r0, #0
   14148:	mvncc	r0, #0
   1414c:	bx	lr
   14150:	adds	r0, r1, #0
   14154:	movne	r0, #1
   14158:	rsb	r0, r0, #0
   1415c:	bx	lr
   14160:	mov	r0, #1
   14164:	bx	lr
   14168:	mov	r0, #1
   1416c:	bx	lr

00014170 <table_compare_uchar@@Base>:
   14170:	cmp	r0, #0
   14174:	beq	141a0 <table_compare_uchar@@Base+0x30>
   14178:	cmp	r1, #0
   1417c:	beq	141b0 <table_compare_uchar@@Base+0x40>
   14180:	ldrb	r0, [r0]
   14184:	ldrb	r1, [r1]
   14188:	cmp	r0, r1
   1418c:	bhi	141b8 <table_compare_uchar@@Base+0x48>
   14190:	cmp	r0, r1
   14194:	movcs	r0, #0
   14198:	mvncc	r0, #0
   1419c:	bx	lr
   141a0:	adds	r0, r1, #0
   141a4:	movne	r0, #1
   141a8:	rsb	r0, r0, #0
   141ac:	bx	lr
   141b0:	mov	r0, #1
   141b4:	bx	lr
   141b8:	mov	r0, #1
   141bc:	bx	lr

000141c0 <table_compare_ptr@@Base>:
   141c0:	cmp	r0, r1
   141c4:	bhi	141d8 <table_compare_ptr@@Base+0x18>
   141c8:	cmp	r0, r1
   141cc:	movcs	r0, #0
   141d0:	mvncc	r0, #0
   141d4:	bx	lr
   141d8:	mov	r0, #1
   141dc:	bx	lr

000141e0 <table_compare_string@@Base>:
   141e0:	cmp	r0, #0
   141e4:	beq	14208 <table_compare_string@@Base+0x28>
   141e8:	cmp	r1, #0
   141ec:	beq	14218 <table_compare_string@@Base+0x38>
   141f0:	str	r4, [sp, #-8]!
   141f4:	str	lr, [sp, #4]
   141f8:	bl	12900 <strcmp@plt>
   141fc:	ldr	r4, [sp]
   14200:	add	sp, sp, #4
   14204:	pop	{pc}		; (ldr pc, [sp], #4)
   14208:	adds	r1, r1, #0
   1420c:	movne	r1, #1
   14210:	rsb	r0, r1, #0
   14214:	bx	lr
   14218:	mov	r0, #1
   1421c:	bx	lr

00014220 <table_get_default_compare_function_for_data_type@@Base>:
   14220:	cmp	r0, #23
   14224:	ldrls	pc, [pc, r0, lsl #2]
   14228:	b	143ac <table_get_default_compare_function_for_data_type@@Base+0x18c>
   1422c:	andeq	r4, r1, ip, lsl #5
   14230:	muleq	r1, r8, r2
   14234:	andeq	r4, r1, r4, lsr #5
   14238:			; <UNDEFINED> instruction: 0x000142b0
   1423c:			; <UNDEFINED> instruction: 0x000142bc
   14240:	andeq	r4, r1, r8, asr #5
   14244:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14248:	andeq	r4, r1, r0, ror #5
   1424c:	andeq	r4, r1, ip, ror #5
   14250:	strdeq	r4, [r1], -r8
   14254:	andeq	r4, r1, r4, lsl #6
   14258:	andeq	r4, r1, r0, lsl r3
   1425c:	andeq	r4, r1, ip, lsl r3
   14260:	andeq	r4, r1, r8, lsr #6
   14264:	andeq	r4, r1, r4, lsr r3
   14268:	andeq	r4, r1, r0, asr #6
   1426c:	andeq	r4, r1, r8, asr r3
   14270:	andeq	r4, r1, r4, ror #6
   14274:	andeq	r4, r1, r0, ror r3
   14278:	andeq	r4, r1, r8, lsl #7
   1427c:	muleq	r1, r4, r3
   14280:	andeq	r4, r1, ip, asr #6
   14284:	andeq	r4, r1, ip, ror r3
   14288:	andeq	r4, r1, r0, lsr #7
   1428c:	movw	r0, #15112	; 0x3b08
   14290:	movt	r0, #1
   14294:	bx	lr
   14298:	movw	r0, #15192	; 0x3b58
   1429c:	movt	r0, #1
   142a0:	bx	lr
   142a4:	movw	r0, #15272	; 0x3ba8
   142a8:	movt	r0, #1
   142ac:	bx	lr
   142b0:	movw	r0, #15352	; 0x3bf8
   142b4:	movt	r0, #1
   142b8:	bx	lr
   142bc:	movw	r0, #15432	; 0x3c48
   142c0:	movt	r0, #1
   142c4:	bx	lr
   142c8:	movw	r0, #15512	; 0x3c98
   142cc:	movt	r0, #1
   142d0:	bx	lr
   142d4:	movw	r0, #15592	; 0x3ce8
   142d8:	movt	r0, #1
   142dc:	bx	lr
   142e0:	movw	r0, #15672	; 0x3d38
   142e4:	movt	r0, #1
   142e8:	bx	lr
   142ec:	movw	r0, #15752	; 0x3d88
   142f0:	movt	r0, #1
   142f4:	bx	lr
   142f8:	movw	r0, #15848	; 0x3de8
   142fc:	movt	r0, #1
   14300:	bx	lr
   14304:	movw	r0, #15936	; 0x3e40
   14308:	movt	r0, #1
   1430c:	bx	lr
   14310:	movw	r0, #16016	; 0x3e90
   14314:	movt	r0, #1
   14318:	bx	lr
   1431c:	movw	r0, #16096	; 0x3ee0
   14320:	movt	r0, #1
   14324:	bx	lr
   14328:	movw	r0, #16176	; 0x3f30
   1432c:	movt	r0, #1
   14330:	bx	lr
   14334:	movw	r0, #16256	; 0x3f80
   14338:	movt	r0, #1
   1433c:	bx	lr
   14340:	movw	r0, #16352	; 0x3fe0
   14344:	movt	r0, #1
   14348:	bx	lr
   1434c:	movw	r0, #16864	; 0x41e0
   14350:	movt	r0, #1
   14354:	bx	lr
   14358:	movw	r0, #16432	; 0x4030
   1435c:	movt	r0, #1
   14360:	bx	lr
   14364:	movw	r0, #16512	; 0x4080
   14368:	movt	r0, #1
   1436c:	bx	lr
   14370:	movw	r0, #16592	; 0x40d0
   14374:	movt	r0, #1
   14378:	bx	lr
   1437c:	movw	r0, #15032	; 0x3ab8
   14380:	movt	r0, #1
   14384:	bx	lr
   14388:	movw	r0, #16672	; 0x4120
   1438c:	movt	r0, #1
   14390:	bx	lr
   14394:	movw	r0, #16752	; 0x4170
   14398:	movt	r0, #1
   1439c:	bx	lr
   143a0:	movw	r0, #16832	; 0x41c0
   143a4:	movt	r0, #1
   143a8:	bx	lr
   143ac:	mov	r0, #0
   143b0:	bx	lr

000143b4 <table_subset_find@@Base>:
   143b4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   143b8:	strd	r6, [sp, #8]
   143bc:	strd	r8, [sp, #16]
   143c0:	str	sl, [sp, #24]
   143c4:	str	lr, [sp, #28]
   143c8:	mov	r7, r0
   143cc:	mov	r8, r1
   143d0:	mov	r9, r2
   143d4:	mov	sl, r3
   143d8:	ldr	r5, [sp, #32]
   143dc:	ldr	r4, [sp, #36]	; 0x24
   143e0:	bl	13a90 <table_get_column_compare_function@@Base>
   143e4:	mov	r6, r0
   143e8:	cmp	sl, #0
   143ec:	beq	14434 <table_subset_find@@Base+0x80>
   143f0:	cmp	r5, r4
   143f4:	mvngt	r0, #0
   143f8:	bgt	14480 <table_subset_find@@Base+0xcc>
   143fc:	mov	r2, r8
   14400:	mov	r1, r4
   14404:	mov	r0, r7
   14408:	bl	14fc0 <table_get@@Base>
   1440c:	mov	r1, r0
   14410:	mov	r0, r9
   14414:	blx	r6
   14418:	cmp	r0, #0
   1441c:	beq	14498 <table_subset_find@@Base+0xe4>
   14420:	sub	r4, r4, #1
   14424:	cmp	r5, r4
   14428:	ble	143fc <table_subset_find@@Base+0x48>
   1442c:	mvn	r0, #0
   14430:	b	14480 <table_subset_find@@Base+0xcc>
   14434:	cmp	r5, r4
   14438:	bgt	14474 <table_subset_find@@Base+0xc0>
   1443c:	mov	r2, r8
   14440:	mov	r1, r5
   14444:	mov	r0, r7
   14448:	bl	14fc0 <table_get@@Base>
   1444c:	mov	r1, r0
   14450:	mov	r0, r9
   14454:	blx	r6
   14458:	cmp	r0, #0
   1445c:	beq	1447c <table_subset_find@@Base+0xc8>
   14460:	add	r5, r5, #1
   14464:	cmp	r4, r5
   14468:	bge	1443c <table_subset_find@@Base+0x88>
   1446c:	mvn	r0, #0
   14470:	b	14480 <table_subset_find@@Base+0xcc>
   14474:	mvn	r0, #0
   14478:	b	14480 <table_subset_find@@Base+0xcc>
   1447c:	mov	r0, r5
   14480:	ldrd	r4, [sp]
   14484:	ldrd	r6, [sp, #8]
   14488:	ldrd	r8, [sp, #16]
   1448c:	ldr	sl, [sp, #24]
   14490:	add	sp, sp, #28
   14494:	pop	{pc}		; (ldr pc, [sp], #4)
   14498:	mov	r0, r4
   1449c:	b	14480 <table_subset_find@@Base+0xcc>

000144a0 <table_find@@Base>:
   144a0:	strd	r4, [sp, #-20]!	; 0xffffffec
   144a4:	strd	r6, [sp, #8]
   144a8:	str	lr, [sp, #16]
   144ac:	sub	sp, sp, #12
   144b0:	mov	r4, r0
   144b4:	mov	r5, r1
   144b8:	mov	r6, r2
   144bc:	mov	r7, r3
   144c0:	bl	15314 <table_get_row_length@@Base>
   144c4:	sub	r0, r0, #1
   144c8:	str	r0, [sp, #4]
   144cc:	mov	r3, #0
   144d0:	str	r3, [sp]
   144d4:	mov	r3, r7
   144d8:	mov	r2, r6
   144dc:	mov	r1, r5
   144e0:	mov	r0, r4
   144e4:	bl	143b4 <table_subset_find@@Base>
   144e8:	add	sp, sp, #12
   144ec:	ldrd	r4, [sp]
   144f0:	ldrd	r6, [sp, #8]
   144f4:	add	sp, sp, #16
   144f8:	pop	{pc}		; (ldr pc, [sp], #4)

000144fc <table_find_bool@@Base>:
   144fc:	push	{lr}		; (str lr, [sp, #-4]!)
   14500:	sub	sp, sp, #12
   14504:	strb	r2, [sp, #7]
   14508:	add	r2, sp, #7
   1450c:	bl	144a0 <table_find@@Base>
   14510:	add	sp, sp, #12
   14514:	pop	{pc}		; (ldr pc, [sp], #4)

00014518 <table_find_int@@Base>:
   14518:	push	{lr}		; (str lr, [sp, #-4]!)
   1451c:	sub	sp, sp, #12
   14520:	str	r2, [sp, #4]
   14524:	add	r2, sp, #4
   14528:	bl	144a0 <table_find@@Base>
   1452c:	add	sp, sp, #12
   14530:	pop	{pc}		; (ldr pc, [sp], #4)

00014534 <table_find_uint@@Base>:
   14534:	push	{lr}		; (str lr, [sp, #-4]!)
   14538:	sub	sp, sp, #12
   1453c:	str	r2, [sp, #4]
   14540:	add	r2, sp, #4
   14544:	bl	144a0 <table_find@@Base>
   14548:	add	sp, sp, #12
   1454c:	pop	{pc}		; (ldr pc, [sp], #4)

00014550 <table_find_int8@@Base>:
   14550:	push	{lr}		; (str lr, [sp, #-4]!)
   14554:	sub	sp, sp, #12
   14558:	strb	r2, [sp, #7]
   1455c:	add	r2, sp, #7
   14560:	bl	144a0 <table_find@@Base>
   14564:	add	sp, sp, #12
   14568:	pop	{pc}		; (ldr pc, [sp], #4)

0001456c <table_find_uint8@@Base>:
   1456c:	push	{lr}		; (str lr, [sp, #-4]!)
   14570:	sub	sp, sp, #12
   14574:	strb	r2, [sp, #7]
   14578:	add	r2, sp, #7
   1457c:	bl	144a0 <table_find@@Base>
   14580:	add	sp, sp, #12
   14584:	pop	{pc}		; (ldr pc, [sp], #4)

00014588 <table_find_int16@@Base>:
   14588:	push	{lr}		; (str lr, [sp, #-4]!)
   1458c:	sub	sp, sp, #12
   14590:	strh	r2, [sp, #6]
   14594:	add	r2, sp, #6
   14598:	bl	144a0 <table_find@@Base>
   1459c:	add	sp, sp, #12
   145a0:	pop	{pc}		; (ldr pc, [sp], #4)

000145a4 <table_find_uint16@@Base>:
   145a4:	push	{lr}		; (str lr, [sp, #-4]!)
   145a8:	sub	sp, sp, #12
   145ac:	strh	r2, [sp, #6]
   145b0:	add	r2, sp, #6
   145b4:	bl	144a0 <table_find@@Base>
   145b8:	add	sp, sp, #12
   145bc:	pop	{pc}		; (ldr pc, [sp], #4)

000145c0 <table_find_int32@@Base>:
   145c0:	push	{lr}		; (str lr, [sp, #-4]!)
   145c4:	sub	sp, sp, #12
   145c8:	str	r2, [sp, #4]
   145cc:	add	r2, sp, #4
   145d0:	bl	144a0 <table_find@@Base>
   145d4:	add	sp, sp, #12
   145d8:	pop	{pc}		; (ldr pc, [sp], #4)

000145dc <table_find_uint32@@Base>:
   145dc:	push	{lr}		; (str lr, [sp, #-4]!)
   145e0:	sub	sp, sp, #12
   145e4:	str	r2, [sp, #4]
   145e8:	add	r2, sp, #4
   145ec:	bl	144a0 <table_find@@Base>
   145f0:	add	sp, sp, #12
   145f4:	pop	{pc}		; (ldr pc, [sp], #4)

000145f8 <table_find_int64@@Base>:
   145f8:	push	{lr}		; (str lr, [sp, #-4]!)
   145fc:	sub	sp, sp, #12
   14600:	strd	r2, [sp]
   14604:	ldr	r3, [sp, #16]
   14608:	mov	r2, sp
   1460c:	bl	144a0 <table_find@@Base>
   14610:	add	sp, sp, #12
   14614:	pop	{pc}		; (ldr pc, [sp], #4)

00014618 <table_find_uint64@@Base>:
   14618:	push	{lr}		; (str lr, [sp, #-4]!)
   1461c:	sub	sp, sp, #12
   14620:	strd	r2, [sp]
   14624:	ldr	r3, [sp, #16]
   14628:	mov	r2, sp
   1462c:	bl	144a0 <table_find@@Base>
   14630:	add	sp, sp, #12
   14634:	pop	{pc}		; (ldr pc, [sp], #4)

00014638 <table_find_short@@Base>:
   14638:	push	{lr}		; (str lr, [sp, #-4]!)
   1463c:	sub	sp, sp, #12
   14640:	strh	r2, [sp, #6]
   14644:	add	r2, sp, #6
   14648:	bl	144a0 <table_find@@Base>
   1464c:	add	sp, sp, #12
   14650:	pop	{pc}		; (ldr pc, [sp], #4)

00014654 <table_find_ushort@@Base>:
   14654:	push	{lr}		; (str lr, [sp, #-4]!)
   14658:	sub	sp, sp, #12
   1465c:	strh	r2, [sp, #6]
   14660:	add	r2, sp, #6
   14664:	bl	144a0 <table_find@@Base>
   14668:	add	sp, sp, #12
   1466c:	pop	{pc}		; (ldr pc, [sp], #4)

00014670 <table_find_long@@Base>:
   14670:	push	{lr}		; (str lr, [sp, #-4]!)
   14674:	sub	sp, sp, #12
   14678:	str	r2, [sp, #4]
   1467c:	add	r2, sp, #4
   14680:	bl	144a0 <table_find@@Base>
   14684:	add	sp, sp, #12
   14688:	pop	{pc}		; (ldr pc, [sp], #4)

0001468c <table_find_ulong@@Base>:
   1468c:	push	{lr}		; (str lr, [sp, #-4]!)
   14690:	sub	sp, sp, #12
   14694:	str	r2, [sp, #4]
   14698:	add	r2, sp, #4
   1469c:	bl	144a0 <table_find@@Base>
   146a0:	add	sp, sp, #12
   146a4:	pop	{pc}		; (ldr pc, [sp], #4)

000146a8 <table_find_llong@@Base>:
   146a8:	push	{lr}		; (str lr, [sp, #-4]!)
   146ac:	sub	sp, sp, #12
   146b0:	strd	r2, [sp]
   146b4:	ldr	r3, [sp, #16]
   146b8:	mov	r2, sp
   146bc:	bl	144a0 <table_find@@Base>
   146c0:	add	sp, sp, #12
   146c4:	pop	{pc}		; (ldr pc, [sp], #4)

000146c8 <table_find_ullong@@Base>:
   146c8:	push	{lr}		; (str lr, [sp, #-4]!)
   146cc:	sub	sp, sp, #12
   146d0:	strd	r2, [sp]
   146d4:	ldr	r3, [sp, #16]
   146d8:	mov	r2, sp
   146dc:	bl	144a0 <table_find@@Base>
   146e0:	add	sp, sp, #12
   146e4:	pop	{pc}		; (ldr pc, [sp], #4)

000146e8 <table_find_float@@Base>:
   146e8:	push	{lr}		; (str lr, [sp, #-4]!)
   146ec:	sub	sp, sp, #12
   146f0:	vstr	s0, [sp, #4]
   146f4:	mov	r3, r2
   146f8:	add	r2, sp, #4
   146fc:	bl	144a0 <table_find@@Base>
   14700:	add	sp, sp, #12
   14704:	pop	{pc}		; (ldr pc, [sp], #4)

00014708 <table_find_double@@Base>:
   14708:	push	{lr}		; (str lr, [sp, #-4]!)
   1470c:	sub	sp, sp, #12
   14710:	vstr	d0, [sp]
   14714:	mov	r3, r2
   14718:	mov	r2, sp
   1471c:	bl	144a0 <table_find@@Base>
   14720:	add	sp, sp, #12
   14724:	pop	{pc}		; (ldr pc, [sp], #4)

00014728 <table_find_ldouble@@Base>:
   14728:	push	{lr}		; (str lr, [sp, #-4]!)
   1472c:	sub	sp, sp, #12
   14730:	vstr	d0, [sp]
   14734:	mov	r3, r2
   14738:	mov	r2, sp
   1473c:	bl	144a0 <table_find@@Base>
   14740:	add	sp, sp, #12
   14744:	pop	{pc}		; (ldr pc, [sp], #4)

00014748 <table_find_char@@Base>:
   14748:	push	{lr}		; (str lr, [sp, #-4]!)
   1474c:	sub	sp, sp, #12
   14750:	strb	r2, [sp, #7]
   14754:	add	r2, sp, #7
   14758:	bl	144a0 <table_find@@Base>
   1475c:	add	sp, sp, #12
   14760:	pop	{pc}		; (ldr pc, [sp], #4)

00014764 <table_find_uchar@@Base>:
   14764:	push	{lr}		; (str lr, [sp, #-4]!)
   14768:	sub	sp, sp, #12
   1476c:	strb	r2, [sp, #7]
   14770:	add	r2, sp, #7
   14774:	bl	144a0 <table_find@@Base>
   14778:	add	sp, sp, #12
   1477c:	pop	{pc}		; (ldr pc, [sp], #4)

00014780 <table_find_string@@Base>:
   14780:	push	{lr}		; (str lr, [sp, #-4]!)
   14784:	sub	sp, sp, #12
   14788:	str	r2, [sp, #4]
   1478c:	add	r2, sp, #4
   14790:	bl	144a0 <table_find@@Base>
   14794:	add	sp, sp, #12
   14798:	pop	{pc}		; (ldr pc, [sp], #4)

0001479c <table_find_ptr@@Base>:
   1479c:	str	r4, [sp, #-8]!
   147a0:	str	lr, [sp, #4]
   147a4:	bl	144a0 <table_find@@Base>
   147a8:	ldr	r4, [sp]
   147ac:	add	sp, sp, #4
   147b0:	pop	{pc}		; (ldr pc, [sp], #4)

000147b4 <table_sorted_subset_find@@Base>:
   147b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   147b8:	strd	r6, [sp, #8]
   147bc:	strd	r8, [sp, #16]
   147c0:	strd	sl, [sp, #24]
   147c4:	str	lr, [sp, #32]
   147c8:	sub	sp, sp, #12
   147cc:	mov	r6, r0
   147d0:	mov	r7, r1
   147d4:	mov	r8, r2
   147d8:	mov	fp, r3
   147dc:	ldr	r5, [sp, #48]	; 0x30
   147e0:	ldr	sl, [sp, #52]	; 0x34
   147e4:	bl	13a90 <table_get_column_compare_function@@Base>
   147e8:	mov	r9, r0
   147ec:	sub	r4, sl, r5
   147f0:	add	r4, r4, r4, lsr #31
   147f4:	add	r4, r5, r4, asr #1
   147f8:	mov	r2, r7
   147fc:	mov	r1, r4
   14800:	mov	r0, r6
   14804:	bl	14fc0 <table_get@@Base>
   14808:	mov	r1, r0
   1480c:	mov	r0, r8
   14810:	blx	r9
   14814:	cmp	sl, r5
   14818:	rsblt	r0, r4, #0
   1481c:	blt	1483c <table_sorted_subset_find@@Base+0x88>
   14820:	cmp	r0, #0
   14824:	beq	14858 <table_sorted_subset_find@@Base+0xa4>
   14828:	cmp	r0, #1
   1482c:	beq	14894 <table_sorted_subset_find@@Base+0xe0>
   14830:	cmn	r0, #1
   14834:	rsbne	r0, r4, #0
   14838:	beq	148b4 <table_sorted_subset_find@@Base+0x100>
   1483c:	add	sp, sp, #12
   14840:	ldrd	r4, [sp]
   14844:	ldrd	r6, [sp, #8]
   14848:	ldrd	r8, [sp, #16]
   1484c:	ldrd	sl, [sp, #24]
   14850:	add	sp, sp, #32
   14854:	pop	{pc}		; (ldr pc, [sp], #4)
   14858:	cmp	fp, #0
   1485c:	subeq	r4, r4, #1
   14860:	addne	r4, r4, #1
   14864:	mov	r2, r7
   14868:	mov	r1, r4
   1486c:	mov	r0, r6
   14870:	bl	14fc0 <table_get@@Base>
   14874:	mov	r1, r8
   14878:	blx	r9
   1487c:	cmp	r0, #0
   14880:	beq	14858 <table_sorted_subset_find@@Base+0xa4>
   14884:	cmp	fp, #0
   14888:	addeq	r0, r4, #1
   1488c:	subne	r0, r4, #1
   14890:	b	1483c <table_sorted_subset_find@@Base+0x88>
   14894:	str	sl, [sp, #4]
   14898:	str	r4, [sp]
   1489c:	mov	r3, fp
   148a0:	mov	r2, r8
   148a4:	mov	r1, r7
   148a8:	mov	r0, r6
   148ac:	bl	147b4 <table_sorted_subset_find@@Base>
   148b0:	b	1483c <table_sorted_subset_find@@Base+0x88>
   148b4:	sub	r4, r4, #1
   148b8:	str	r4, [sp, #4]
   148bc:	str	r5, [sp]
   148c0:	mov	r3, fp
   148c4:	mov	r2, r8
   148c8:	mov	r1, r7
   148cc:	mov	r0, r6
   148d0:	bl	147b4 <table_sorted_subset_find@@Base>
   148d4:	b	1483c <table_sorted_subset_find@@Base+0x88>

000148d8 <table_sorted_find@@Base>:
   148d8:	strd	r4, [sp, #-20]!	; 0xffffffec
   148dc:	strd	r6, [sp, #8]
   148e0:	str	lr, [sp, #16]
   148e4:	sub	sp, sp, #12
   148e8:	mov	r4, r0
   148ec:	mov	r5, r1
   148f0:	mov	r6, r2
   148f4:	mov	r7, r3
   148f8:	bl	15314 <table_get_row_length@@Base>
   148fc:	sub	r0, r0, #1
   14900:	str	r0, [sp, #4]
   14904:	mov	r3, #0
   14908:	str	r3, [sp]
   1490c:	mov	r3, r7
   14910:	mov	r2, r6
   14914:	mov	r1, r5
   14918:	mov	r0, r4
   1491c:	bl	147b4 <table_sorted_subset_find@@Base>
   14920:	add	sp, sp, #12
   14924:	ldrd	r4, [sp]
   14928:	ldrd	r6, [sp, #8]
   1492c:	add	sp, sp, #16
   14930:	pop	{pc}		; (ldr pc, [sp], #4)

00014934 <table_sorted_find_int@@Base>:
   14934:	push	{lr}		; (str lr, [sp, #-4]!)
   14938:	sub	sp, sp, #12
   1493c:	str	r2, [sp, #4]
   14940:	add	r2, sp, #4
   14944:	bl	148d8 <table_sorted_find@@Base>
   14948:	add	sp, sp, #12
   1494c:	pop	{pc}		; (ldr pc, [sp], #4)

00014950 <table_sorted_find_uint@@Base>:
   14950:	push	{lr}		; (str lr, [sp, #-4]!)
   14954:	sub	sp, sp, #12
   14958:	str	r2, [sp, #4]
   1495c:	add	r2, sp, #4
   14960:	bl	148d8 <table_sorted_find@@Base>
   14964:	add	sp, sp, #12
   14968:	pop	{pc}		; (ldr pc, [sp], #4)

0001496c <table_sorted_find_int8@@Base>:
   1496c:	push	{lr}		; (str lr, [sp, #-4]!)
   14970:	sub	sp, sp, #12
   14974:	strb	r2, [sp, #7]
   14978:	add	r2, sp, #7
   1497c:	bl	148d8 <table_sorted_find@@Base>
   14980:	add	sp, sp, #12
   14984:	pop	{pc}		; (ldr pc, [sp], #4)

00014988 <table_sorted_find_uint8@@Base>:
   14988:	push	{lr}		; (str lr, [sp, #-4]!)
   1498c:	sub	sp, sp, #12
   14990:	strb	r2, [sp, #7]
   14994:	add	r2, sp, #7
   14998:	bl	148d8 <table_sorted_find@@Base>
   1499c:	add	sp, sp, #12
   149a0:	pop	{pc}		; (ldr pc, [sp], #4)

000149a4 <table_sorted_find_int16@@Base>:
   149a4:	push	{lr}		; (str lr, [sp, #-4]!)
   149a8:	sub	sp, sp, #12
   149ac:	strh	r2, [sp, #6]
   149b0:	add	r2, sp, #6
   149b4:	bl	148d8 <table_sorted_find@@Base>
   149b8:	add	sp, sp, #12
   149bc:	pop	{pc}		; (ldr pc, [sp], #4)

000149c0 <table_sorted_find_uint16@@Base>:
   149c0:	push	{lr}		; (str lr, [sp, #-4]!)
   149c4:	sub	sp, sp, #12
   149c8:	strh	r2, [sp, #6]
   149cc:	add	r2, sp, #6
   149d0:	bl	148d8 <table_sorted_find@@Base>
   149d4:	add	sp, sp, #12
   149d8:	pop	{pc}		; (ldr pc, [sp], #4)

000149dc <table_sorted_find_int32@@Base>:
   149dc:	push	{lr}		; (str lr, [sp, #-4]!)
   149e0:	sub	sp, sp, #12
   149e4:	str	r2, [sp, #4]
   149e8:	add	r2, sp, #4
   149ec:	bl	148d8 <table_sorted_find@@Base>
   149f0:	add	sp, sp, #12
   149f4:	pop	{pc}		; (ldr pc, [sp], #4)

000149f8 <table_sorted_find_uint32@@Base>:
   149f8:	push	{lr}		; (str lr, [sp, #-4]!)
   149fc:	sub	sp, sp, #12
   14a00:	str	r2, [sp, #4]
   14a04:	add	r2, sp, #4
   14a08:	bl	148d8 <table_sorted_find@@Base>
   14a0c:	add	sp, sp, #12
   14a10:	pop	{pc}		; (ldr pc, [sp], #4)

00014a14 <table_sorted_find_int64@@Base>:
   14a14:	push	{lr}		; (str lr, [sp, #-4]!)
   14a18:	sub	sp, sp, #12
   14a1c:	strd	r2, [sp]
   14a20:	ldr	r3, [sp, #16]
   14a24:	mov	r2, sp
   14a28:	bl	148d8 <table_sorted_find@@Base>
   14a2c:	add	sp, sp, #12
   14a30:	pop	{pc}		; (ldr pc, [sp], #4)

00014a34 <table_sorted_find_uint64@@Base>:
   14a34:	push	{lr}		; (str lr, [sp, #-4]!)
   14a38:	sub	sp, sp, #12
   14a3c:	strd	r2, [sp]
   14a40:	ldr	r3, [sp, #16]
   14a44:	mov	r2, sp
   14a48:	bl	148d8 <table_sorted_find@@Base>
   14a4c:	add	sp, sp, #12
   14a50:	pop	{pc}		; (ldr pc, [sp], #4)

00014a54 <table_sorted_find_short@@Base>:
   14a54:	push	{lr}		; (str lr, [sp, #-4]!)
   14a58:	sub	sp, sp, #12
   14a5c:	strh	r2, [sp, #6]
   14a60:	add	r2, sp, #6
   14a64:	bl	148d8 <table_sorted_find@@Base>
   14a68:	add	sp, sp, #12
   14a6c:	pop	{pc}		; (ldr pc, [sp], #4)

00014a70 <table_sorted_find_ushort@@Base>:
   14a70:	push	{lr}		; (str lr, [sp, #-4]!)
   14a74:	sub	sp, sp, #12
   14a78:	strh	r2, [sp, #6]
   14a7c:	add	r2, sp, #6
   14a80:	bl	148d8 <table_sorted_find@@Base>
   14a84:	add	sp, sp, #12
   14a88:	pop	{pc}		; (ldr pc, [sp], #4)

00014a8c <table_sorted_find_long@@Base>:
   14a8c:	push	{lr}		; (str lr, [sp, #-4]!)
   14a90:	sub	sp, sp, #12
   14a94:	str	r2, [sp, #4]
   14a98:	add	r2, sp, #4
   14a9c:	bl	148d8 <table_sorted_find@@Base>
   14aa0:	add	sp, sp, #12
   14aa4:	pop	{pc}		; (ldr pc, [sp], #4)

00014aa8 <table_sorted_find_ulong@@Base>:
   14aa8:	push	{lr}		; (str lr, [sp, #-4]!)
   14aac:	sub	sp, sp, #12
   14ab0:	str	r2, [sp, #4]
   14ab4:	add	r2, sp, #4
   14ab8:	bl	148d8 <table_sorted_find@@Base>
   14abc:	add	sp, sp, #12
   14ac0:	pop	{pc}		; (ldr pc, [sp], #4)

00014ac4 <table_sorted_find_llong@@Base>:
   14ac4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ac8:	sub	sp, sp, #12
   14acc:	strd	r2, [sp]
   14ad0:	ldr	r3, [sp, #16]
   14ad4:	mov	r2, sp
   14ad8:	bl	148d8 <table_sorted_find@@Base>
   14adc:	add	sp, sp, #12
   14ae0:	pop	{pc}		; (ldr pc, [sp], #4)

00014ae4 <table_sorted_find_ullong@@Base>:
   14ae4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ae8:	sub	sp, sp, #12
   14aec:	strd	r2, [sp]
   14af0:	ldr	r3, [sp, #16]
   14af4:	mov	r2, sp
   14af8:	bl	148d8 <table_sorted_find@@Base>
   14afc:	add	sp, sp, #12
   14b00:	pop	{pc}		; (ldr pc, [sp], #4)

00014b04 <table_sorted_find_float@@Base>:
   14b04:	push	{lr}		; (str lr, [sp, #-4]!)
   14b08:	sub	sp, sp, #12
   14b0c:	vstr	s0, [sp, #4]
   14b10:	mov	r3, r2
   14b14:	add	r2, sp, #4
   14b18:	bl	148d8 <table_sorted_find@@Base>
   14b1c:	add	sp, sp, #12
   14b20:	pop	{pc}		; (ldr pc, [sp], #4)

00014b24 <table_sorted_find_double@@Base>:
   14b24:	push	{lr}		; (str lr, [sp, #-4]!)
   14b28:	sub	sp, sp, #12
   14b2c:	vstr	d0, [sp]
   14b30:	mov	r3, r2
   14b34:	mov	r2, sp
   14b38:	bl	148d8 <table_sorted_find@@Base>
   14b3c:	add	sp, sp, #12
   14b40:	pop	{pc}		; (ldr pc, [sp], #4)

00014b44 <table_sorted_find_ldouble@@Base>:
   14b44:	push	{lr}		; (str lr, [sp, #-4]!)
   14b48:	sub	sp, sp, #12
   14b4c:	vstr	d0, [sp]
   14b50:	mov	r3, r2
   14b54:	mov	r2, sp
   14b58:	bl	148d8 <table_sorted_find@@Base>
   14b5c:	add	sp, sp, #12
   14b60:	pop	{pc}		; (ldr pc, [sp], #4)

00014b64 <table_sorted_find_char@@Base>:
   14b64:	push	{lr}		; (str lr, [sp, #-4]!)
   14b68:	sub	sp, sp, #12
   14b6c:	strb	r2, [sp, #7]
   14b70:	add	r2, sp, #7
   14b74:	bl	148d8 <table_sorted_find@@Base>
   14b78:	add	sp, sp, #12
   14b7c:	pop	{pc}		; (ldr pc, [sp], #4)

00014b80 <table_sorted_find_uchar@@Base>:
   14b80:	push	{lr}		; (str lr, [sp, #-4]!)
   14b84:	sub	sp, sp, #12
   14b88:	strb	r2, [sp, #7]
   14b8c:	add	r2, sp, #7
   14b90:	bl	148d8 <table_sorted_find@@Base>
   14b94:	add	sp, sp, #12
   14b98:	pop	{pc}		; (ldr pc, [sp], #4)

00014b9c <table_sorted_find_string@@Base>:
   14b9c:	str	r4, [sp, #-8]!
   14ba0:	str	lr, [sp, #4]
   14ba4:	bl	148d8 <table_sorted_find@@Base>
   14ba8:	ldr	r4, [sp]
   14bac:	add	sp, sp, #4
   14bb0:	pop	{pc}		; (ldr pc, [sp], #4)

00014bb4 <table_sorted_find_ptr@@Base>:
   14bb4:	str	r4, [sp, #-8]!
   14bb8:	str	lr, [sp, #4]
   14bbc:	bl	148d8 <table_sorted_find@@Base>
   14bc0:	ldr	r4, [sp]
   14bc4:	add	sp, sp, #4
   14bc8:	pop	{pc}		; (ldr pc, [sp], #4)

00014bcc <table_sorted_subset_find_int@@Base>:
   14bcc:	push	{lr}		; (str lr, [sp, #-4]!)
   14bd0:	sub	sp, sp, #20
   14bd4:	str	r2, [sp, #12]
   14bd8:	ldr	r2, [sp, #28]
   14bdc:	str	r2, [sp, #4]
   14be0:	ldr	r2, [sp, #24]
   14be4:	str	r2, [sp]
   14be8:	add	r2, sp, #12
   14bec:	bl	147b4 <table_sorted_subset_find@@Base>
   14bf0:	add	sp, sp, #20
   14bf4:	pop	{pc}		; (ldr pc, [sp], #4)

00014bf8 <table_sorted_subset_find_uint@@Base>:
   14bf8:	push	{lr}		; (str lr, [sp, #-4]!)
   14bfc:	sub	sp, sp, #20
   14c00:	str	r2, [sp, #12]
   14c04:	ldr	r2, [sp, #28]
   14c08:	str	r2, [sp, #4]
   14c0c:	ldr	r2, [sp, #24]
   14c10:	str	r2, [sp]
   14c14:	add	r2, sp, #12
   14c18:	bl	147b4 <table_sorted_subset_find@@Base>
   14c1c:	add	sp, sp, #20
   14c20:	pop	{pc}		; (ldr pc, [sp], #4)

00014c24 <table_sorted_subset_find_int8@@Base>:
   14c24:	push	{lr}		; (str lr, [sp, #-4]!)
   14c28:	sub	sp, sp, #20
   14c2c:	strb	r2, [sp, #15]
   14c30:	ldr	r2, [sp, #28]
   14c34:	str	r2, [sp, #4]
   14c38:	ldr	r2, [sp, #24]
   14c3c:	str	r2, [sp]
   14c40:	add	r2, sp, #15
   14c44:	bl	147b4 <table_sorted_subset_find@@Base>
   14c48:	add	sp, sp, #20
   14c4c:	pop	{pc}		; (ldr pc, [sp], #4)

00014c50 <table_sorted_subset_find_uint8@@Base>:
   14c50:	push	{lr}		; (str lr, [sp, #-4]!)
   14c54:	sub	sp, sp, #20
   14c58:	strb	r2, [sp, #15]
   14c5c:	ldr	r2, [sp, #28]
   14c60:	str	r2, [sp, #4]
   14c64:	ldr	r2, [sp, #24]
   14c68:	str	r2, [sp]
   14c6c:	add	r2, sp, #15
   14c70:	bl	147b4 <table_sorted_subset_find@@Base>
   14c74:	add	sp, sp, #20
   14c78:	pop	{pc}		; (ldr pc, [sp], #4)

00014c7c <table_sorted_subset_find_int16@@Base>:
   14c7c:	push	{lr}		; (str lr, [sp, #-4]!)
   14c80:	sub	sp, sp, #20
   14c84:	strh	r2, [sp, #14]
   14c88:	ldr	r2, [sp, #28]
   14c8c:	str	r2, [sp, #4]
   14c90:	ldr	r2, [sp, #24]
   14c94:	str	r2, [sp]
   14c98:	add	r2, sp, #14
   14c9c:	bl	147b4 <table_sorted_subset_find@@Base>
   14ca0:	add	sp, sp, #20
   14ca4:	pop	{pc}		; (ldr pc, [sp], #4)

00014ca8 <table_sorted_subset_find_uint16@@Base>:
   14ca8:	push	{lr}		; (str lr, [sp, #-4]!)
   14cac:	sub	sp, sp, #20
   14cb0:	strh	r2, [sp, #14]
   14cb4:	ldr	r2, [sp, #28]
   14cb8:	str	r2, [sp, #4]
   14cbc:	ldr	r2, [sp, #24]
   14cc0:	str	r2, [sp]
   14cc4:	add	r2, sp, #14
   14cc8:	bl	147b4 <table_sorted_subset_find@@Base>
   14ccc:	add	sp, sp, #20
   14cd0:	pop	{pc}		; (ldr pc, [sp], #4)

00014cd4 <table_sorted_subset_find_int32@@Base>:
   14cd4:	push	{lr}		; (str lr, [sp, #-4]!)
   14cd8:	sub	sp, sp, #20
   14cdc:	str	r2, [sp, #12]
   14ce0:	ldr	r2, [sp, #28]
   14ce4:	str	r2, [sp, #4]
   14ce8:	ldr	r2, [sp, #24]
   14cec:	str	r2, [sp]
   14cf0:	add	r2, sp, #12
   14cf4:	bl	147b4 <table_sorted_subset_find@@Base>
   14cf8:	add	sp, sp, #20
   14cfc:	pop	{pc}		; (ldr pc, [sp], #4)

00014d00 <table_sorted_subset_find_uint32@@Base>:
   14d00:	push	{lr}		; (str lr, [sp, #-4]!)
   14d04:	sub	sp, sp, #20
   14d08:	str	r2, [sp, #12]
   14d0c:	ldr	r2, [sp, #28]
   14d10:	str	r2, [sp, #4]
   14d14:	ldr	r2, [sp, #24]
   14d18:	str	r2, [sp]
   14d1c:	add	r2, sp, #12
   14d20:	bl	147b4 <table_sorted_subset_find@@Base>
   14d24:	add	sp, sp, #20
   14d28:	pop	{pc}		; (ldr pc, [sp], #4)

00014d2c <table_sorted_subset_find_int64@@Base>:
   14d2c:	push	{lr}		; (str lr, [sp, #-4]!)
   14d30:	sub	sp, sp, #20
   14d34:	strd	r2, [sp, #8]
   14d38:	ldr	r3, [sp, #32]
   14d3c:	str	r3, [sp, #4]
   14d40:	ldr	r3, [sp, #28]
   14d44:	str	r3, [sp]
   14d48:	ldr	r3, [sp, #24]
   14d4c:	add	r2, sp, #8
   14d50:	bl	147b4 <table_sorted_subset_find@@Base>
   14d54:	add	sp, sp, #20
   14d58:	pop	{pc}		; (ldr pc, [sp], #4)

00014d5c <table_sorted_subset_find_uint64@@Base>:
   14d5c:	push	{lr}		; (str lr, [sp, #-4]!)
   14d60:	sub	sp, sp, #20
   14d64:	strd	r2, [sp, #8]
   14d68:	ldr	r3, [sp, #32]
   14d6c:	str	r3, [sp, #4]
   14d70:	ldr	r3, [sp, #28]
   14d74:	str	r3, [sp]
   14d78:	ldr	r3, [sp, #24]
   14d7c:	add	r2, sp, #8
   14d80:	bl	147b4 <table_sorted_subset_find@@Base>
   14d84:	add	sp, sp, #20
   14d88:	pop	{pc}		; (ldr pc, [sp], #4)

00014d8c <table_sorted_subset_find_short@@Base>:
   14d8c:	push	{lr}		; (str lr, [sp, #-4]!)
   14d90:	sub	sp, sp, #20
   14d94:	strh	r2, [sp, #14]
   14d98:	ldr	r2, [sp, #28]
   14d9c:	str	r2, [sp, #4]
   14da0:	ldr	r2, [sp, #24]
   14da4:	str	r2, [sp]
   14da8:	add	r2, sp, #14
   14dac:	bl	147b4 <table_sorted_subset_find@@Base>
   14db0:	add	sp, sp, #20
   14db4:	pop	{pc}		; (ldr pc, [sp], #4)

00014db8 <table_sorted_subset_find_ushort@@Base>:
   14db8:	push	{lr}		; (str lr, [sp, #-4]!)
   14dbc:	sub	sp, sp, #20
   14dc0:	strh	r2, [sp, #14]
   14dc4:	ldr	r2, [sp, #28]
   14dc8:	str	r2, [sp, #4]
   14dcc:	ldr	r2, [sp, #24]
   14dd0:	str	r2, [sp]
   14dd4:	add	r2, sp, #14
   14dd8:	bl	147b4 <table_sorted_subset_find@@Base>
   14ddc:	add	sp, sp, #20
   14de0:	pop	{pc}		; (ldr pc, [sp], #4)

00014de4 <table_sorted_subset_find_long@@Base>:
   14de4:	push	{lr}		; (str lr, [sp, #-4]!)
   14de8:	sub	sp, sp, #20
   14dec:	str	r2, [sp, #12]
   14df0:	ldr	r2, [sp, #28]
   14df4:	str	r2, [sp, #4]
   14df8:	ldr	r2, [sp, #24]
   14dfc:	str	r2, [sp]
   14e00:	add	r2, sp, #12
   14e04:	bl	147b4 <table_sorted_subset_find@@Base>
   14e08:	add	sp, sp, #20
   14e0c:	pop	{pc}		; (ldr pc, [sp], #4)

00014e10 <table_sorted_subset_find_ulong@@Base>:
   14e10:	push	{lr}		; (str lr, [sp, #-4]!)
   14e14:	sub	sp, sp, #20
   14e18:	str	r2, [sp, #12]
   14e1c:	ldr	r2, [sp, #28]
   14e20:	str	r2, [sp, #4]
   14e24:	ldr	r2, [sp, #24]
   14e28:	str	r2, [sp]
   14e2c:	add	r2, sp, #12
   14e30:	bl	147b4 <table_sorted_subset_find@@Base>
   14e34:	add	sp, sp, #20
   14e38:	pop	{pc}		; (ldr pc, [sp], #4)

00014e3c <table_sorted_subset_find_llong@@Base>:
   14e3c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e40:	sub	sp, sp, #20
   14e44:	strd	r2, [sp, #8]
   14e48:	ldr	r3, [sp, #32]
   14e4c:	str	r3, [sp, #4]
   14e50:	ldr	r3, [sp, #28]
   14e54:	str	r3, [sp]
   14e58:	ldr	r3, [sp, #24]
   14e5c:	add	r2, sp, #8
   14e60:	bl	147b4 <table_sorted_subset_find@@Base>
   14e64:	add	sp, sp, #20
   14e68:	pop	{pc}		; (ldr pc, [sp], #4)

00014e6c <table_sorted_subset_find_ullong@@Base>:
   14e6c:	push	{lr}		; (str lr, [sp, #-4]!)
   14e70:	sub	sp, sp, #20
   14e74:	strd	r2, [sp, #8]
   14e78:	ldr	r3, [sp, #32]
   14e7c:	str	r3, [sp, #4]
   14e80:	ldr	r3, [sp, #28]
   14e84:	str	r3, [sp]
   14e88:	ldr	r3, [sp, #24]
   14e8c:	add	r2, sp, #8
   14e90:	bl	147b4 <table_sorted_subset_find@@Base>
   14e94:	add	sp, sp, #20
   14e98:	pop	{pc}		; (ldr pc, [sp], #4)

00014e9c <table_sorted_subset_find_float@@Base>:
   14e9c:	push	{lr}		; (str lr, [sp, #-4]!)
   14ea0:	sub	sp, sp, #20
   14ea4:	vstr	s0, [sp, #12]
   14ea8:	ldr	ip, [sp, #24]
   14eac:	str	ip, [sp, #4]
   14eb0:	str	r3, [sp]
   14eb4:	mov	r3, r2
   14eb8:	add	r2, sp, #12
   14ebc:	bl	147b4 <table_sorted_subset_find@@Base>
   14ec0:	add	sp, sp, #20
   14ec4:	pop	{pc}		; (ldr pc, [sp], #4)

00014ec8 <table_sorted_subset_find_double@@Base>:
   14ec8:	push	{lr}		; (str lr, [sp, #-4]!)
   14ecc:	sub	sp, sp, #20
   14ed0:	vstr	d0, [sp, #8]
   14ed4:	ldr	ip, [sp, #24]
   14ed8:	str	ip, [sp, #4]
   14edc:	str	r3, [sp]
   14ee0:	mov	r3, r2
   14ee4:	add	r2, sp, #8
   14ee8:	bl	147b4 <table_sorted_subset_find@@Base>
   14eec:	add	sp, sp, #20
   14ef0:	pop	{pc}		; (ldr pc, [sp], #4)

00014ef4 <table_sorted_subset_find_ldouble@@Base>:
   14ef4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ef8:	sub	sp, sp, #20
   14efc:	vstr	d0, [sp, #8]
   14f00:	ldr	ip, [sp, #24]
   14f04:	str	ip, [sp, #4]
   14f08:	str	r3, [sp]
   14f0c:	mov	r3, r2
   14f10:	add	r2, sp, #8
   14f14:	bl	147b4 <table_sorted_subset_find@@Base>
   14f18:	add	sp, sp, #20
   14f1c:	pop	{pc}		; (ldr pc, [sp], #4)

00014f20 <table_sorted_subset_find_char@@Base>:
   14f20:	push	{lr}		; (str lr, [sp, #-4]!)
   14f24:	sub	sp, sp, #20
   14f28:	strb	r2, [sp, #15]
   14f2c:	ldr	r2, [sp, #28]
   14f30:	str	r2, [sp, #4]
   14f34:	ldr	r2, [sp, #24]
   14f38:	str	r2, [sp]
   14f3c:	add	r2, sp, #15
   14f40:	bl	147b4 <table_sorted_subset_find@@Base>
   14f44:	add	sp, sp, #20
   14f48:	pop	{pc}		; (ldr pc, [sp], #4)

00014f4c <table_sorted_subset_find_uchar@@Base>:
   14f4c:	push	{lr}		; (str lr, [sp, #-4]!)
   14f50:	sub	sp, sp, #20
   14f54:	strb	r2, [sp, #15]
   14f58:	ldr	r2, [sp, #28]
   14f5c:	str	r2, [sp, #4]
   14f60:	ldr	r2, [sp, #24]
   14f64:	str	r2, [sp]
   14f68:	add	r2, sp, #15
   14f6c:	bl	147b4 <table_sorted_subset_find@@Base>
   14f70:	add	sp, sp, #20
   14f74:	pop	{pc}		; (ldr pc, [sp], #4)

00014f78 <table_sorted_subset_find_string@@Base>:
   14f78:	push	{lr}		; (str lr, [sp, #-4]!)
   14f7c:	sub	sp, sp, #12
   14f80:	ldr	ip, [sp, #20]
   14f84:	str	ip, [sp, #4]
   14f88:	ldr	ip, [sp, #16]
   14f8c:	str	ip, [sp]
   14f90:	bl	147b4 <table_sorted_subset_find@@Base>
   14f94:	add	sp, sp, #12
   14f98:	pop	{pc}		; (ldr pc, [sp], #4)

00014f9c <table_sorted_subset_find_ptr@@Base>:
   14f9c:	push	{lr}		; (str lr, [sp, #-4]!)
   14fa0:	sub	sp, sp, #12
   14fa4:	ldr	ip, [sp, #20]
   14fa8:	str	ip, [sp, #4]
   14fac:	ldr	ip, [sp, #16]
   14fb0:	str	ip, [sp]
   14fb4:	bl	147b4 <table_sorted_subset_find@@Base>
   14fb8:	add	sp, sp, #12
   14fbc:	pop	{pc}		; (ldr pc, [sp], #4)

00014fc0 <table_get@@Base>:
   14fc0:	str	r4, [sp, #-8]!
   14fc4:	str	lr, [sp, #4]
   14fc8:	bl	16b30 <table_get_cell_ptr@@Base>
   14fcc:	ldr	r0, [r0]
   14fd0:	ldr	r4, [sp]
   14fd4:	add	sp, sp, #4
   14fd8:	pop	{pc}		; (ldr pc, [sp], #4)

00014fdc <table_get_bool@@Base>:
   14fdc:	str	r4, [sp, #-8]!
   14fe0:	str	lr, [sp, #4]
   14fe4:	bl	14fc0 <table_get@@Base>
   14fe8:	ldrb	r0, [r0]
   14fec:	ldr	r4, [sp]
   14ff0:	add	sp, sp, #4
   14ff4:	pop	{pc}		; (ldr pc, [sp], #4)

00014ff8 <table_get_int@@Base>:
   14ff8:	str	r4, [sp, #-8]!
   14ffc:	str	lr, [sp, #4]
   15000:	bl	14fc0 <table_get@@Base>
   15004:	ldr	r0, [r0]
   15008:	ldr	r4, [sp]
   1500c:	add	sp, sp, #4
   15010:	pop	{pc}		; (ldr pc, [sp], #4)

00015014 <table_get_uint@@Base>:
   15014:	str	r4, [sp, #-8]!
   15018:	str	lr, [sp, #4]
   1501c:	bl	14fc0 <table_get@@Base>
   15020:	ldr	r0, [r0]
   15024:	ldr	r4, [sp]
   15028:	add	sp, sp, #4
   1502c:	pop	{pc}		; (ldr pc, [sp], #4)

00015030 <table_get_int8@@Base>:
   15030:	str	r4, [sp, #-8]!
   15034:	str	lr, [sp, #4]
   15038:	bl	14fc0 <table_get@@Base>
   1503c:	ldrsb	r0, [r0]
   15040:	ldr	r4, [sp]
   15044:	add	sp, sp, #4
   15048:	pop	{pc}		; (ldr pc, [sp], #4)

0001504c <table_get_uint8@@Base>:
   1504c:	str	r4, [sp, #-8]!
   15050:	str	lr, [sp, #4]
   15054:	bl	14fc0 <table_get@@Base>
   15058:	ldrb	r0, [r0]
   1505c:	ldr	r4, [sp]
   15060:	add	sp, sp, #4
   15064:	pop	{pc}		; (ldr pc, [sp], #4)

00015068 <table_get_int16@@Base>:
   15068:	str	r4, [sp, #-8]!
   1506c:	str	lr, [sp, #4]
   15070:	bl	14fc0 <table_get@@Base>
   15074:	ldrsh	r0, [r0]
   15078:	ldr	r4, [sp]
   1507c:	add	sp, sp, #4
   15080:	pop	{pc}		; (ldr pc, [sp], #4)

00015084 <table_get_uint16@@Base>:
   15084:	str	r4, [sp, #-8]!
   15088:	str	lr, [sp, #4]
   1508c:	bl	14fc0 <table_get@@Base>
   15090:	ldrh	r0, [r0]
   15094:	ldr	r4, [sp]
   15098:	add	sp, sp, #4
   1509c:	pop	{pc}		; (ldr pc, [sp], #4)

000150a0 <table_get_int32@@Base>:
   150a0:	str	r4, [sp, #-8]!
   150a4:	str	lr, [sp, #4]
   150a8:	bl	14fc0 <table_get@@Base>
   150ac:	ldr	r0, [r0]
   150b0:	ldr	r4, [sp]
   150b4:	add	sp, sp, #4
   150b8:	pop	{pc}		; (ldr pc, [sp], #4)

000150bc <table_get_uint32@@Base>:
   150bc:	str	r4, [sp, #-8]!
   150c0:	str	lr, [sp, #4]
   150c4:	bl	14fc0 <table_get@@Base>
   150c8:	ldr	r0, [r0]
   150cc:	ldr	r4, [sp]
   150d0:	add	sp, sp, #4
   150d4:	pop	{pc}		; (ldr pc, [sp], #4)

000150d8 <table_get_int64@@Base>:
   150d8:	str	r4, [sp, #-8]!
   150dc:	str	lr, [sp, #4]
   150e0:	bl	14fc0 <table_get@@Base>
   150e4:	ldrd	r0, [r0]
   150e8:	ldr	r4, [sp]
   150ec:	add	sp, sp, #4
   150f0:	pop	{pc}		; (ldr pc, [sp], #4)

000150f4 <table_get_uint64@@Base>:
   150f4:	str	r4, [sp, #-8]!
   150f8:	str	lr, [sp, #4]
   150fc:	bl	14fc0 <table_get@@Base>
   15100:	ldrd	r0, [r0]
   15104:	ldr	r4, [sp]
   15108:	add	sp, sp, #4
   1510c:	pop	{pc}		; (ldr pc, [sp], #4)

00015110 <table_get_short@@Base>:
   15110:	str	r4, [sp, #-8]!
   15114:	str	lr, [sp, #4]
   15118:	bl	14fc0 <table_get@@Base>
   1511c:	ldrsh	r0, [r0]
   15120:	ldr	r4, [sp]
   15124:	add	sp, sp, #4
   15128:	pop	{pc}		; (ldr pc, [sp], #4)

0001512c <table_get_ushort@@Base>:
   1512c:	str	r4, [sp, #-8]!
   15130:	str	lr, [sp, #4]
   15134:	bl	14fc0 <table_get@@Base>
   15138:	ldrh	r0, [r0]
   1513c:	ldr	r4, [sp]
   15140:	add	sp, sp, #4
   15144:	pop	{pc}		; (ldr pc, [sp], #4)

00015148 <table_get_long@@Base>:
   15148:	str	r4, [sp, #-8]!
   1514c:	str	lr, [sp, #4]
   15150:	bl	14fc0 <table_get@@Base>
   15154:	ldr	r0, [r0]
   15158:	ldr	r4, [sp]
   1515c:	add	sp, sp, #4
   15160:	pop	{pc}		; (ldr pc, [sp], #4)

00015164 <table_get_ulong@@Base>:
   15164:	str	r4, [sp, #-8]!
   15168:	str	lr, [sp, #4]
   1516c:	bl	14fc0 <table_get@@Base>
   15170:	ldr	r0, [r0]
   15174:	ldr	r4, [sp]
   15178:	add	sp, sp, #4
   1517c:	pop	{pc}		; (ldr pc, [sp], #4)

00015180 <table_get_llong@@Base>:
   15180:	str	r4, [sp, #-8]!
   15184:	str	lr, [sp, #4]
   15188:	bl	14fc0 <table_get@@Base>
   1518c:	ldrd	r0, [r0]
   15190:	ldr	r4, [sp]
   15194:	add	sp, sp, #4
   15198:	pop	{pc}		; (ldr pc, [sp], #4)

0001519c <table_get_ullong@@Base>:
   1519c:	str	r4, [sp, #-8]!
   151a0:	str	lr, [sp, #4]
   151a4:	bl	14fc0 <table_get@@Base>
   151a8:	ldrd	r0, [r0]
   151ac:	ldr	r4, [sp]
   151b0:	add	sp, sp, #4
   151b4:	pop	{pc}		; (ldr pc, [sp], #4)

000151b8 <table_get_float@@Base>:
   151b8:	str	r4, [sp, #-8]!
   151bc:	str	lr, [sp, #4]
   151c0:	bl	14fc0 <table_get@@Base>
   151c4:	vldr	s0, [r0]
   151c8:	ldr	r4, [sp]
   151cc:	add	sp, sp, #4
   151d0:	pop	{pc}		; (ldr pc, [sp], #4)

000151d4 <table_get_double@@Base>:
   151d4:	str	r4, [sp, #-8]!
   151d8:	str	lr, [sp, #4]
   151dc:	bl	14fc0 <table_get@@Base>
   151e0:	vldr	d0, [r0]
   151e4:	ldr	r4, [sp]
   151e8:	add	sp, sp, #4
   151ec:	pop	{pc}		; (ldr pc, [sp], #4)

000151f0 <table_get_ldouble@@Base>:
   151f0:	str	r4, [sp, #-8]!
   151f4:	str	lr, [sp, #4]
   151f8:	bl	14fc0 <table_get@@Base>
   151fc:	vldr	d0, [r0]
   15200:	ldr	r4, [sp]
   15204:	add	sp, sp, #4
   15208:	pop	{pc}		; (ldr pc, [sp], #4)

0001520c <table_get_char@@Base>:
   1520c:	str	r4, [sp, #-8]!
   15210:	str	lr, [sp, #4]
   15214:	bl	14fc0 <table_get@@Base>
   15218:	ldrb	r0, [r0]
   1521c:	ldr	r4, [sp]
   15220:	add	sp, sp, #4
   15224:	pop	{pc}		; (ldr pc, [sp], #4)

00015228 <table_get_uchar@@Base>:
   15228:	str	r4, [sp, #-8]!
   1522c:	str	lr, [sp, #4]
   15230:	bl	14fc0 <table_get@@Base>
   15234:	ldrb	r0, [r0]
   15238:	ldr	r4, [sp]
   1523c:	add	sp, sp, #4
   15240:	pop	{pc}		; (ldr pc, [sp], #4)

00015244 <table_get_string@@Base>:
   15244:	str	r4, [sp, #-8]!
   15248:	str	lr, [sp, #4]
   1524c:	bl	14fc0 <table_get@@Base>
   15250:	ldr	r4, [sp]
   15254:	add	sp, sp, #4
   15258:	pop	{pc}		; (ldr pc, [sp], #4)

0001525c <table_get_ptr@@Base>:
   1525c:	str	r4, [sp, #-8]!
   15260:	str	lr, [sp, #4]
   15264:	bl	14fc0 <table_get@@Base>
   15268:	ldr	r4, [sp]
   1526c:	add	sp, sp, #4
   15270:	pop	{pc}		; (ldr pc, [sp], #4)

00015274 <table_row_init@@Base>:
   15274:	strd	r4, [sp, #-16]!
   15278:	str	r6, [sp, #8]
   1527c:	str	lr, [sp, #12]
   15280:	mov	r5, r1
   15284:	ldr	r4, [r0, #16]
   15288:	ldr	r0, [r0, #12]
   1528c:	lsl	r0, r0, #2
   15290:	bl	1293c <malloc@plt>
   15294:	str	r0, [r4, r5, lsl #2]
   15298:	ldrd	r4, [sp]
   1529c:	ldr	r6, [sp, #8]
   152a0:	add	sp, sp, #12
   152a4:	pop	{pc}		; (ldr pc, [sp], #4)

000152a8 <table_row_destroy@@Base>:
   152a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   152ac:	strd	r6, [sp, #8]
   152b0:	str	r8, [sp, #16]
   152b4:	str	lr, [sp, #20]
   152b8:	mov	r6, r0
   152bc:	mov	r5, r1
   152c0:	bl	13704 <table_get_column_length@@Base>
   152c4:	ldr	r8, [r6, #16]
   152c8:	subs	r7, r0, #0
   152cc:	ble	152f0 <table_row_destroy@@Base+0x48>
   152d0:	mov	r4, #0
   152d4:	mov	r2, r4
   152d8:	mov	r1, r5
   152dc:	mov	r0, r6
   152e0:	bl	16b74 <table_cell_destroy@@Base>
   152e4:	add	r4, r4, #1
   152e8:	cmp	r7, r4
   152ec:	bne	152d4 <table_row_destroy@@Base+0x2c>
   152f0:	ldr	r0, [r8, r5, lsl #2]
   152f4:	cmp	r0, #0
   152f8:	beq	15300 <table_row_destroy@@Base+0x58>
   152fc:	bl	12918 <free@plt>
   15300:	ldrd	r4, [sp]
   15304:	ldrd	r6, [sp, #8]
   15308:	ldr	r8, [sp, #16]
   1530c:	add	sp, sp, #20
   15310:	pop	{pc}		; (ldr pc, [sp], #4)

00015314 <table_get_row_length@@Base>:
   15314:	ldr	r0, [r0, #20]
   15318:	bx	lr

0001531c <table_add_row@@Base>:
   1531c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15320:	strd	r6, [sp, #8]
   15324:	str	r8, [sp, #16]
   15328:	str	lr, [sp, #20]
   1532c:	mov	r4, r0
   15330:	ldr	r1, [r0, #24]
   15334:	ldr	r2, [r0, #20]
   15338:	udiv	r3, r2, r1
   1533c:	mls	r3, r1, r3, r2
   15340:	cmp	r3, #0
   15344:	beq	153c0 <table_add_row@@Base+0xa4>
   15348:	ldr	r7, [r4, #20]
   1534c:	mov	r0, r4
   15350:	bl	13704 <table_get_column_length@@Base>
   15354:	mov	r6, r0
   15358:	mov	r1, r7
   1535c:	mov	r0, r4
   15360:	bl	15274 <table_row_init@@Base>
   15364:	cmp	r6, #0
   15368:	ble	1538c <table_add_row@@Base+0x70>
   1536c:	mov	r5, #0
   15370:	mov	r2, r5
   15374:	mov	r1, r7
   15378:	mov	r0, r4
   1537c:	bl	16b54 <table_cell_init@@Base>
   15380:	add	r5, r5, #1
   15384:	cmp	r6, r5
   15388:	bne	15370 <table_add_row@@Base+0x54>
   1538c:	mov	r3, #2
   15390:	mvn	r2, #0
   15394:	ldr	r1, [r4, #20]
   15398:	mov	r0, r4
   1539c:	bl	135d0 <table_notify@@Base>
   153a0:	ldr	r0, [r4, #20]
   153a4:	add	r3, r0, #1
   153a8:	str	r3, [r4, #20]
   153ac:	ldrd	r4, [sp]
   153b0:	ldrd	r6, [sp, #8]
   153b4:	ldr	r8, [sp, #16]
   153b8:	add	sp, sp, #20
   153bc:	pop	{pc}		; (ldr pc, [sp], #4)
   153c0:	ldr	r3, [r0, #28]
   153c4:	add	r1, r1, r3
   153c8:	str	r1, [r0, #28]
   153cc:	lsl	r1, r1, #2
   153d0:	ldr	r0, [r0, #16]
   153d4:	bl	12924 <realloc@plt>
   153d8:	str	r0, [r4, #16]
   153dc:	b	15348 <table_add_row@@Base+0x2c>

000153e0 <table_remove_row@@Base>:
   153e0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   153e4:	strd	r6, [sp, #8]
   153e8:	str	r8, [sp, #16]
   153ec:	str	lr, [sp, #20]
   153f0:	mov	r4, r0
   153f4:	mov	r5, r1
   153f8:	ldr	r7, [r0, #20]
   153fc:	bl	13704 <table_get_column_length@@Base>
   15400:	subs	r8, r0, #0
   15404:	ble	15454 <table_remove_row@@Base+0x74>
   15408:	mov	r6, #0
   1540c:	b	15420 <table_remove_row@@Base+0x40>
   15410:	bl	12918 <free@plt>
   15414:	add	r6, r6, #1
   15418:	cmp	r8, r6
   1541c:	beq	15454 <table_remove_row@@Base+0x74>
   15420:	mov	r1, r6
   15424:	mov	r0, r4
   15428:	bl	13784 <table_get_column_data_type@@Base>
   1542c:	cmp	r0, #23
   15430:	beq	15414 <table_remove_row@@Base+0x34>
   15434:	mov	r2, r6
   15438:	mov	r1, r5
   1543c:	mov	r0, r4
   15440:	bl	16b30 <table_get_cell_ptr@@Base>
   15444:	ldr	r0, [r0]
   15448:	cmp	r0, #0
   1544c:	bne	15410 <table_remove_row@@Base+0x30>
   15450:	b	15414 <table_remove_row@@Base+0x34>
   15454:	lsl	r6, r5, #2
   15458:	ldr	r3, [r4, #16]
   1545c:	ldr	r0, [r3, r5, lsl #2]
   15460:	cmp	r0, #0
   15464:	beq	1546c <table_remove_row@@Base+0x8c>
   15468:	bl	12918 <free@plt>
   1546c:	sub	r3, r7, #1
   15470:	cmp	r5, r3
   15474:	bge	154a0 <table_remove_row@@Base+0xc0>
   15478:	mov	r7, r3
   1547c:	mov	r3, r5
   15480:	ldr	r2, [r4, #16]
   15484:	add	r1, r2, r6
   15488:	add	r6, r6, #4
   1548c:	ldr	r2, [r2, r6]
   15490:	str	r2, [r1]
   15494:	add	r3, r3, #1
   15498:	cmp	r7, r3
   1549c:	bne	15480 <table_remove_row@@Base+0xa0>
   154a0:	ldr	r3, [r4, #20]
   154a4:	sub	r3, r3, #1
   154a8:	str	r3, [r4, #20]
   154ac:	ldr	r1, [r4, #24]
   154b0:	udiv	r2, r3, r1
   154b4:	mls	r3, r1, r2, r3
   154b8:	cmp	r3, #0
   154bc:	beq	154ec <table_remove_row@@Base+0x10c>
   154c0:	mov	r3, #4
   154c4:	mvn	r2, #0
   154c8:	mov	r1, r5
   154cc:	mov	r0, r4
   154d0:	bl	135d0 <table_notify@@Base>
   154d4:	mov	r0, #0
   154d8:	ldrd	r4, [sp]
   154dc:	ldrd	r6, [sp, #8]
   154e0:	ldr	r8, [sp, #16]
   154e4:	add	sp, sp, #20
   154e8:	pop	{pc}		; (ldr pc, [sp], #4)
   154ec:	ldr	r3, [r4, #28]
   154f0:	sub	r1, r3, r1
   154f4:	str	r1, [r4, #28]
   154f8:	lsl	r1, r1, #2
   154fc:	ldr	r0, [r4, #16]
   15500:	bl	12924 <realloc@plt>
   15504:	str	r0, [r4, #16]
   15508:	b	154c0 <table_remove_row@@Base+0xe0>

0001550c <table_get_row_ptr@@Base>:
   1550c:	ldr	r0, [r0, #16]
   15510:	add	r0, r0, r1, lsl #2
   15514:	bx	lr

00015518 <table_set_row_ptr@@Base>:
   15518:	ldr	r3, [r0, #16]
   1551c:	ldr	r2, [r2]
   15520:	str	r2, [r3, r1, lsl #2]
   15524:	bx	lr

00015528 <table_set@@Base>:
   15528:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1552c:	strd	r6, [sp, #8]
   15530:	strd	r8, [sp, #16]
   15534:	str	sl, [sp, #24]
   15538:	str	lr, [sp, #28]
   1553c:	mov	r5, r0
   15540:	mov	r9, r1
   15544:	mov	r6, r2
   15548:	mov	r7, r3
   1554c:	ldr	r4, [sp, #32]
   15550:	bl	16b30 <table_get_cell_ptr@@Base>
   15554:	mov	r8, r0
   15558:	mov	r1, r6
   1555c:	mov	r0, r5
   15560:	bl	13a80 <table_get_col_ptr@@Base>
   15564:	cmp	r4, #23
   15568:	ldrls	pc, [pc, r4, lsl #2]
   1556c:	b	15c24 <table_set@@Base+0x6fc>
   15570:	andeq	r5, r1, ip, lsr r6
   15574:	andeq	r5, r1, ip, ror r6
   15578:			; <UNDEFINED> instruction: 0x000156bc
   1557c:	strdeq	r5, [r1], -ip
   15580:	andeq	r5, r1, ip, lsr r7
   15584:	andeq	r5, r1, ip, ror r7
   15588:			; <UNDEFINED> instruction: 0x000157bc
   1558c:	strdeq	r5, [r1], -ip
   15590:	andeq	r5, r1, ip, lsr r8
   15594:	andeq	r5, r1, r4, lsl #17
   15598:	andeq	r5, r1, ip, asr #17
   1559c:	andeq	r5, r1, ip, lsl #18
   155a0:	andeq	r5, r1, ip, asr #18
   155a4:	muleq	r1, r0, r9
   155a8:	ldrdeq	r5, [r1], -r4
   155ac:	andeq	r5, r1, r0, lsr #20
   155b0:	andeq	r5, r1, ip, ror #20
   155b4:			; <UNDEFINED> instruction: 0x00015ab0
   155b8:	strdeq	r5, [r1], -ip
   155bc:	andeq	r5, r1, r4, lsl #23
   155c0:	andeq	r5, r1, r8, asr #23
   155c4:	andeq	r5, r1, r8, asr #22
   155c8:	ldrdeq	r5, [r1], -r0
   155cc:	andeq	r5, r1, ip, lsl #24
   155d0:	ldr	r3, [r0, #4]
   155d4:	cmp	r3, #22
   155d8:	bne	15c2c <table_set@@Base+0x704>
   155dc:	ldr	r0, [r8]
   155e0:	cmp	r0, #0
   155e4:	beq	15620 <table_set@@Base+0xf8>
   155e8:	ldrb	r3, [r7]
   155ec:	strb	r3, [r0]
   155f0:	mov	r3, #1
   155f4:	mov	r2, r6
   155f8:	mov	r1, r9
   155fc:	mov	r0, r5
   15600:	bl	135d0 <table_notify@@Base>
   15604:	mov	r0, #0
   15608:	ldrd	r4, [sp]
   1560c:	ldrd	r6, [sp, #8]
   15610:	ldrd	r8, [sp, #16]
   15614:	ldr	sl, [sp, #24]
   15618:	add	sp, sp, #28
   1561c:	pop	{pc}		; (ldr pc, [sp], #4)
   15620:	mov	r0, #1
   15624:	bl	1293c <malloc@plt>
   15628:	str	r0, [r8]
   1562c:	cmp	r0, #0
   15630:	bne	155e8 <table_set@@Base+0xc0>
   15634:	mvn	r0, #0
   15638:	b	15608 <table_set@@Base+0xe0>
   1563c:	ldr	r3, [r0, #4]
   15640:	cmp	r3, #0
   15644:	bne	15c34 <table_set@@Base+0x70c>
   15648:	ldr	r0, [r8]
   1564c:	cmp	r0, #0
   15650:	beq	15660 <table_set@@Base+0x138>
   15654:	ldr	r3, [r7]
   15658:	str	r3, [r0]
   1565c:	b	155f0 <table_set@@Base+0xc8>
   15660:	mov	r0, #4
   15664:	bl	1293c <malloc@plt>
   15668:	str	r0, [r8]
   1566c:	cmp	r0, #0
   15670:	bne	15654 <table_set@@Base+0x12c>
   15674:	mvn	r0, #0
   15678:	b	15608 <table_set@@Base+0xe0>
   1567c:	ldr	r3, [r0, #4]
   15680:	cmp	r3, #1
   15684:	bne	15c3c <table_set@@Base+0x714>
   15688:	ldr	r0, [r8]
   1568c:	cmp	r0, #0
   15690:	beq	156a0 <table_set@@Base+0x178>
   15694:	ldr	r3, [r7]
   15698:	str	r3, [r0]
   1569c:	b	155f0 <table_set@@Base+0xc8>
   156a0:	mov	r0, #4
   156a4:	bl	1293c <malloc@plt>
   156a8:	str	r0, [r8]
   156ac:	cmp	r0, #0
   156b0:	bne	15694 <table_set@@Base+0x16c>
   156b4:	mvn	r0, #0
   156b8:	b	15608 <table_set@@Base+0xe0>
   156bc:	ldr	r3, [r0, #4]
   156c0:	cmp	r3, #2
   156c4:	bne	15c44 <table_set@@Base+0x71c>
   156c8:	ldr	r0, [r8]
   156cc:	cmp	r0, #0
   156d0:	beq	156e0 <table_set@@Base+0x1b8>
   156d4:	ldrb	r3, [r7]
   156d8:	strb	r3, [r0]
   156dc:	b	155f0 <table_set@@Base+0xc8>
   156e0:	mov	r0, #1
   156e4:	bl	1293c <malloc@plt>
   156e8:	str	r0, [r8]
   156ec:	cmp	r0, #0
   156f0:	bne	156d4 <table_set@@Base+0x1ac>
   156f4:	mvn	r0, #0
   156f8:	b	15608 <table_set@@Base+0xe0>
   156fc:	ldr	r3, [r0, #4]
   15700:	cmp	r3, #3
   15704:	bne	15c4c <table_set@@Base+0x724>
   15708:	ldr	r0, [r8]
   1570c:	cmp	r0, #0
   15710:	beq	15720 <table_set@@Base+0x1f8>
   15714:	ldrb	r3, [r7]
   15718:	strb	r3, [r0]
   1571c:	b	155f0 <table_set@@Base+0xc8>
   15720:	mov	r0, #1
   15724:	bl	1293c <malloc@plt>
   15728:	str	r0, [r8]
   1572c:	cmp	r0, #0
   15730:	bne	15714 <table_set@@Base+0x1ec>
   15734:	mvn	r0, #0
   15738:	b	15608 <table_set@@Base+0xe0>
   1573c:	ldr	r3, [r0, #4]
   15740:	cmp	r3, #4
   15744:	bne	15c54 <table_set@@Base+0x72c>
   15748:	ldr	r0, [r8]
   1574c:	cmp	r0, #0
   15750:	beq	15760 <table_set@@Base+0x238>
   15754:	ldrh	r3, [r7]
   15758:	strh	r3, [r0]
   1575c:	b	155f0 <table_set@@Base+0xc8>
   15760:	mov	r0, #2
   15764:	bl	1293c <malloc@plt>
   15768:	str	r0, [r8]
   1576c:	cmp	r0, #0
   15770:	bne	15754 <table_set@@Base+0x22c>
   15774:	mvn	r0, #0
   15778:	b	15608 <table_set@@Base+0xe0>
   1577c:	ldr	r3, [r0, #4]
   15780:	cmp	r3, #5
   15784:	bne	15c5c <table_set@@Base+0x734>
   15788:	ldr	r0, [r8]
   1578c:	cmp	r0, #0
   15790:	beq	157a0 <table_set@@Base+0x278>
   15794:	ldrh	r3, [r7]
   15798:	strh	r3, [r0]
   1579c:	b	155f0 <table_set@@Base+0xc8>
   157a0:	mov	r0, #2
   157a4:	bl	1293c <malloc@plt>
   157a8:	str	r0, [r8]
   157ac:	cmp	r0, #0
   157b0:	bne	15794 <table_set@@Base+0x26c>
   157b4:	mvn	r0, #0
   157b8:	b	15608 <table_set@@Base+0xe0>
   157bc:	ldr	r3, [r0, #4]
   157c0:	cmp	r3, #6
   157c4:	bne	15c64 <table_set@@Base+0x73c>
   157c8:	ldr	r0, [r8]
   157cc:	cmp	r0, #0
   157d0:	beq	157e0 <table_set@@Base+0x2b8>
   157d4:	ldr	r3, [r7]
   157d8:	str	r3, [r0]
   157dc:	b	155f0 <table_set@@Base+0xc8>
   157e0:	mov	r0, #4
   157e4:	bl	1293c <malloc@plt>
   157e8:	str	r0, [r8]
   157ec:	cmp	r0, #0
   157f0:	bne	157d4 <table_set@@Base+0x2ac>
   157f4:	mvn	r0, #0
   157f8:	b	15608 <table_set@@Base+0xe0>
   157fc:	ldr	r3, [r0, #4]
   15800:	cmp	r3, #7
   15804:	bne	15c6c <table_set@@Base+0x744>
   15808:	ldr	r0, [r8]
   1580c:	cmp	r0, #0
   15810:	beq	15820 <table_set@@Base+0x2f8>
   15814:	ldr	r3, [r7]
   15818:	str	r3, [r0]
   1581c:	b	155f0 <table_set@@Base+0xc8>
   15820:	mov	r0, #4
   15824:	bl	1293c <malloc@plt>
   15828:	str	r0, [r8]
   1582c:	cmp	r0, #0
   15830:	bne	15814 <table_set@@Base+0x2ec>
   15834:	mvn	r0, #0
   15838:	b	15608 <table_set@@Base+0xe0>
   1583c:	ldr	r3, [r0, #4]
   15840:	cmp	r3, #8
   15844:	bne	15c74 <table_set@@Base+0x74c>
   15848:	ldr	r0, [r8]
   1584c:	cmp	r0, #0
   15850:	beq	15868 <table_set@@Base+0x340>
   15854:	ldr	r2, [r7]
   15858:	ldr	r3, [r7, #4]
   1585c:	str	r2, [r0]
   15860:	str	r3, [r0, #4]
   15864:	b	155f0 <table_set@@Base+0xc8>
   15868:	mov	r0, #8
   1586c:	bl	1293c <malloc@plt>
   15870:	str	r0, [r8]
   15874:	cmp	r0, #0
   15878:	bne	15854 <table_set@@Base+0x32c>
   1587c:	mvn	r0, #0
   15880:	b	15608 <table_set@@Base+0xe0>
   15884:	ldr	r3, [r0, #4]
   15888:	cmp	r3, #9
   1588c:	bne	15c7c <table_set@@Base+0x754>
   15890:	ldr	r0, [r8]
   15894:	cmp	r0, #0
   15898:	beq	158b0 <table_set@@Base+0x388>
   1589c:	ldr	r2, [r7]
   158a0:	ldr	r3, [r7, #4]
   158a4:	str	r2, [r0]
   158a8:	str	r3, [r0, #4]
   158ac:	b	155f0 <table_set@@Base+0xc8>
   158b0:	mov	r0, #8
   158b4:	bl	1293c <malloc@plt>
   158b8:	str	r0, [r8]
   158bc:	cmp	r0, #0
   158c0:	bne	1589c <table_set@@Base+0x374>
   158c4:	mvn	r0, #0
   158c8:	b	15608 <table_set@@Base+0xe0>
   158cc:	ldr	r3, [r0, #4]
   158d0:	cmp	r3, #10
   158d4:	bne	15c84 <table_set@@Base+0x75c>
   158d8:	ldr	r0, [r8]
   158dc:	cmp	r0, #0
   158e0:	beq	158f0 <table_set@@Base+0x3c8>
   158e4:	ldrh	r3, [r7]
   158e8:	strh	r3, [r0]
   158ec:	b	155f0 <table_set@@Base+0xc8>
   158f0:	mov	r0, #2
   158f4:	bl	1293c <malloc@plt>
   158f8:	str	r0, [r8]
   158fc:	cmp	r0, #0
   15900:	bne	158e4 <table_set@@Base+0x3bc>
   15904:	mvn	r0, #0
   15908:	b	15608 <table_set@@Base+0xe0>
   1590c:	ldr	r3, [r0, #4]
   15910:	cmp	r3, #11
   15914:	bne	15c8c <table_set@@Base+0x764>
   15918:	ldr	r0, [r8]
   1591c:	cmp	r0, #0
   15920:	beq	15930 <table_set@@Base+0x408>
   15924:	ldrh	r3, [r7]
   15928:	strh	r3, [r0]
   1592c:	b	155f0 <table_set@@Base+0xc8>
   15930:	mov	r0, #2
   15934:	bl	1293c <malloc@plt>
   15938:	str	r0, [r8]
   1593c:	cmp	r0, #0
   15940:	bne	15924 <table_set@@Base+0x3fc>
   15944:	mvn	r0, #0
   15948:	b	15608 <table_set@@Base+0xe0>
   1594c:	ldr	r3, [r0, #4]
   15950:	cmp	r3, #12
   15954:	mvnne	r0, #0
   15958:	bne	15608 <table_set@@Base+0xe0>
   1595c:	ldr	r0, [r8]
   15960:	cmp	r0, #0
   15964:	beq	15974 <table_set@@Base+0x44c>
   15968:	ldr	r3, [r7]
   1596c:	str	r3, [r0]
   15970:	b	155f0 <table_set@@Base+0xc8>
   15974:	mov	r0, #4
   15978:	bl	1293c <malloc@plt>
   1597c:	str	r0, [r8]
   15980:	cmp	r0, #0
   15984:	bne	15968 <table_set@@Base+0x440>
   15988:	mvn	r0, #0
   1598c:	b	15608 <table_set@@Base+0xe0>
   15990:	ldr	r3, [r0, #4]
   15994:	cmp	r3, #13
   15998:	mvnne	r0, #0
   1599c:	bne	15608 <table_set@@Base+0xe0>
   159a0:	ldr	r0, [r8]
   159a4:	cmp	r0, #0
   159a8:	beq	159b8 <table_set@@Base+0x490>
   159ac:	ldr	r3, [r7]
   159b0:	str	r3, [r0]
   159b4:	b	155f0 <table_set@@Base+0xc8>
   159b8:	mov	r0, #4
   159bc:	bl	1293c <malloc@plt>
   159c0:	str	r0, [r8]
   159c4:	cmp	r0, #0
   159c8:	bne	159ac <table_set@@Base+0x484>
   159cc:	mvn	r0, #0
   159d0:	b	15608 <table_set@@Base+0xe0>
   159d4:	ldr	r3, [r0, #4]
   159d8:	cmp	r3, #14
   159dc:	mvnne	r0, #0
   159e0:	bne	15608 <table_set@@Base+0xe0>
   159e4:	ldr	r0, [r8]
   159e8:	cmp	r0, #0
   159ec:	beq	15a04 <table_set@@Base+0x4dc>
   159f0:	ldr	r2, [r7]
   159f4:	ldr	r3, [r7, #4]
   159f8:	str	r2, [r0]
   159fc:	str	r3, [r0, #4]
   15a00:	b	155f0 <table_set@@Base+0xc8>
   15a04:	mov	r0, #8
   15a08:	bl	1293c <malloc@plt>
   15a0c:	str	r0, [r8]
   15a10:	cmp	r0, #0
   15a14:	bne	159f0 <table_set@@Base+0x4c8>
   15a18:	mvn	r0, #0
   15a1c:	b	15608 <table_set@@Base+0xe0>
   15a20:	ldr	r3, [r0, #4]
   15a24:	cmp	r3, #15
   15a28:	mvnne	r0, #0
   15a2c:	bne	15608 <table_set@@Base+0xe0>
   15a30:	ldr	r0, [r8]
   15a34:	cmp	r0, #0
   15a38:	beq	15a50 <table_set@@Base+0x528>
   15a3c:	ldr	r2, [r7]
   15a40:	ldr	r3, [r7, #4]
   15a44:	str	r2, [r0]
   15a48:	str	r3, [r0, #4]
   15a4c:	b	155f0 <table_set@@Base+0xc8>
   15a50:	mov	r0, #8
   15a54:	bl	1293c <malloc@plt>
   15a58:	str	r0, [r8]
   15a5c:	cmp	r0, #0
   15a60:	bne	15a3c <table_set@@Base+0x514>
   15a64:	mvn	r0, #0
   15a68:	b	15608 <table_set@@Base+0xe0>
   15a6c:	ldr	r3, [r0, #4]
   15a70:	cmp	r3, #16
   15a74:	mvnne	r0, #0
   15a78:	bne	15608 <table_set@@Base+0xe0>
   15a7c:	ldr	r0, [r8]
   15a80:	cmp	r0, #0
   15a84:	beq	15a94 <table_set@@Base+0x56c>
   15a88:	ldr	r3, [r7]
   15a8c:	str	r3, [r0]
   15a90:	b	155f0 <table_set@@Base+0xc8>
   15a94:	mov	r0, #4
   15a98:	bl	1293c <malloc@plt>
   15a9c:	str	r0, [r8]
   15aa0:	cmp	r0, #0
   15aa4:	bne	15a88 <table_set@@Base+0x560>
   15aa8:	mvn	r0, #0
   15aac:	b	15608 <table_set@@Base+0xe0>
   15ab0:	ldr	r3, [r0, #4]
   15ab4:	cmp	r3, #17
   15ab8:	mvnne	r0, #0
   15abc:	bne	15608 <table_set@@Base+0xe0>
   15ac0:	ldr	r0, [r8]
   15ac4:	cmp	r0, #0
   15ac8:	beq	15ae0 <table_set@@Base+0x5b8>
   15acc:	ldr	r2, [r7]
   15ad0:	ldr	r3, [r7, #4]
   15ad4:	str	r2, [r0]
   15ad8:	str	r3, [r0, #4]
   15adc:	b	155f0 <table_set@@Base+0xc8>
   15ae0:	mov	r0, #8
   15ae4:	bl	1293c <malloc@plt>
   15ae8:	str	r0, [r8]
   15aec:	cmp	r0, #0
   15af0:	bne	15acc <table_set@@Base+0x5a4>
   15af4:	mvn	r0, #0
   15af8:	b	15608 <table_set@@Base+0xe0>
   15afc:	ldr	r3, [r0, #4]
   15b00:	cmp	r3, #18
   15b04:	mvnne	r0, #0
   15b08:	bne	15608 <table_set@@Base+0xe0>
   15b0c:	ldr	r0, [r8]
   15b10:	cmp	r0, #0
   15b14:	beq	15b2c <table_set@@Base+0x604>
   15b18:	ldr	r2, [r7]
   15b1c:	ldr	r3, [r7, #4]
   15b20:	str	r2, [r0]
   15b24:	str	r3, [r0, #4]
   15b28:	b	155f0 <table_set@@Base+0xc8>
   15b2c:	mov	r0, #8
   15b30:	bl	1293c <malloc@plt>
   15b34:	str	r0, [r8]
   15b38:	cmp	r0, #0
   15b3c:	bne	15b18 <table_set@@Base+0x5f0>
   15b40:	mvn	r0, #0
   15b44:	b	15608 <table_set@@Base+0xe0>
   15b48:	ldr	r3, [r0, #4]
   15b4c:	cmp	r3, #21
   15b50:	mvnne	r0, #0
   15b54:	bne	15608 <table_set@@Base+0xe0>
   15b58:	mov	r0, r7
   15b5c:	bl	12960 <strlen@plt>
   15b60:	add	r1, r0, #1
   15b64:	ldr	r0, [r8]
   15b68:	bl	12924 <realloc@plt>
   15b6c:	str	r0, [r8]
   15b70:	cmp	r0, #0
   15b74:	beq	15c94 <table_set@@Base+0x76c>
   15b78:	mov	r1, r7
   15b7c:	bl	12930 <strcpy@plt>
   15b80:	b	155f0 <table_set@@Base+0xc8>
   15b84:	ldr	r3, [r0, #4]
   15b88:	cmp	r3, #19
   15b8c:	mvnne	r0, #0
   15b90:	bne	15608 <table_set@@Base+0xe0>
   15b94:	ldr	r0, [r8]
   15b98:	cmp	r0, #0
   15b9c:	beq	15bac <table_set@@Base+0x684>
   15ba0:	ldrb	r3, [r7]
   15ba4:	strb	r3, [r0]
   15ba8:	b	155f0 <table_set@@Base+0xc8>
   15bac:	mov	r0, #1
   15bb0:	bl	1293c <malloc@plt>
   15bb4:	str	r0, [r8]
   15bb8:	cmp	r0, #0
   15bbc:	bne	15ba0 <table_set@@Base+0x678>
   15bc0:	mvn	r0, #0
   15bc4:	b	15608 <table_set@@Base+0xe0>
   15bc8:	ldr	r3, [r0, #4]
   15bcc:	cmp	r3, #20
   15bd0:	mvnne	r0, #0
   15bd4:	bne	15608 <table_set@@Base+0xe0>
   15bd8:	ldr	r0, [r8]
   15bdc:	cmp	r0, #0
   15be0:	beq	15bf0 <table_set@@Base+0x6c8>
   15be4:	ldrb	r3, [r7]
   15be8:	strb	r3, [r0]
   15bec:	b	155f0 <table_set@@Base+0xc8>
   15bf0:	mov	r0, #1
   15bf4:	bl	1293c <malloc@plt>
   15bf8:	str	r0, [r8]
   15bfc:	cmp	r0, #0
   15c00:	bne	15be4 <table_set@@Base+0x6bc>
   15c04:	mvn	r0, #0
   15c08:	b	15608 <table_set@@Base+0xe0>
   15c0c:	ldr	r3, [r0, #4]
   15c10:	cmp	r3, #23
   15c14:	mvnne	r0, #0
   15c18:	bne	15608 <table_set@@Base+0xe0>
   15c1c:	str	r7, [r8]
   15c20:	b	155f0 <table_set@@Base+0xc8>
   15c24:	mvn	r0, #0
   15c28:	b	15608 <table_set@@Base+0xe0>
   15c2c:	mvn	r0, #0
   15c30:	b	15608 <table_set@@Base+0xe0>
   15c34:	mvn	r0, #0
   15c38:	b	15608 <table_set@@Base+0xe0>
   15c3c:	mvn	r0, #0
   15c40:	b	15608 <table_set@@Base+0xe0>
   15c44:	mvn	r0, #0
   15c48:	b	15608 <table_set@@Base+0xe0>
   15c4c:	mvn	r0, #0
   15c50:	b	15608 <table_set@@Base+0xe0>
   15c54:	mvn	r0, #0
   15c58:	b	15608 <table_set@@Base+0xe0>
   15c5c:	mvn	r0, #0
   15c60:	b	15608 <table_set@@Base+0xe0>
   15c64:	mvn	r0, #0
   15c68:	b	15608 <table_set@@Base+0xe0>
   15c6c:	mvn	r0, #0
   15c70:	b	15608 <table_set@@Base+0xe0>
   15c74:	mvn	r0, #0
   15c78:	b	15608 <table_set@@Base+0xe0>
   15c7c:	mvn	r0, #0
   15c80:	b	15608 <table_set@@Base+0xe0>
   15c84:	mvn	r0, #0
   15c88:	b	15608 <table_set@@Base+0xe0>
   15c8c:	mvn	r0, #0
   15c90:	b	15608 <table_set@@Base+0xe0>
   15c94:	mvn	r0, #0
   15c98:	b	15608 <table_set@@Base+0xe0>

00015c9c <table_set_bool@@Base>:
   15c9c:	push	{lr}		; (str lr, [sp, #-4]!)
   15ca0:	sub	sp, sp, #20
   15ca4:	strb	r3, [sp, #15]
   15ca8:	mov	r3, #22
   15cac:	str	r3, [sp]
   15cb0:	add	r3, sp, #15
   15cb4:	bl	15528 <table_set@@Base>
   15cb8:	add	sp, sp, #20
   15cbc:	pop	{pc}		; (ldr pc, [sp], #4)

00015cc0 <table_set_int@@Base>:
   15cc0:	push	{lr}		; (str lr, [sp, #-4]!)
   15cc4:	sub	sp, sp, #20
   15cc8:	str	r3, [sp, #12]
   15ccc:	mov	r3, #0
   15cd0:	str	r3, [sp]
   15cd4:	add	r3, sp, #12
   15cd8:	bl	15528 <table_set@@Base>
   15cdc:	add	sp, sp, #20
   15ce0:	pop	{pc}		; (ldr pc, [sp], #4)

00015ce4 <table_set_uint@@Base>:
   15ce4:	push	{lr}		; (str lr, [sp, #-4]!)
   15ce8:	sub	sp, sp, #20
   15cec:	str	r3, [sp, #12]
   15cf0:	mov	r3, #1
   15cf4:	str	r3, [sp]
   15cf8:	add	r3, sp, #12
   15cfc:	bl	15528 <table_set@@Base>
   15d00:	add	sp, sp, #20
   15d04:	pop	{pc}		; (ldr pc, [sp], #4)

00015d08 <table_set_int8@@Base>:
   15d08:	push	{lr}		; (str lr, [sp, #-4]!)
   15d0c:	sub	sp, sp, #20
   15d10:	strb	r3, [sp, #15]
   15d14:	mov	r3, #2
   15d18:	str	r3, [sp]
   15d1c:	add	r3, sp, #15
   15d20:	bl	15528 <table_set@@Base>
   15d24:	add	sp, sp, #20
   15d28:	pop	{pc}		; (ldr pc, [sp], #4)

00015d2c <table_set_uint8@@Base>:
   15d2c:	push	{lr}		; (str lr, [sp, #-4]!)
   15d30:	sub	sp, sp, #20
   15d34:	strb	r3, [sp, #15]
   15d38:	mov	r3, #3
   15d3c:	str	r3, [sp]
   15d40:	add	r3, sp, #15
   15d44:	bl	15528 <table_set@@Base>
   15d48:	add	sp, sp, #20
   15d4c:	pop	{pc}		; (ldr pc, [sp], #4)

00015d50 <table_set_int16@@Base>:
   15d50:	push	{lr}		; (str lr, [sp, #-4]!)
   15d54:	sub	sp, sp, #20
   15d58:	strh	r3, [sp, #14]
   15d5c:	mov	r3, #4
   15d60:	str	r3, [sp]
   15d64:	add	r3, sp, #14
   15d68:	bl	15528 <table_set@@Base>
   15d6c:	add	sp, sp, #20
   15d70:	pop	{pc}		; (ldr pc, [sp], #4)

00015d74 <table_set_uint16@@Base>:
   15d74:	push	{lr}		; (str lr, [sp, #-4]!)
   15d78:	sub	sp, sp, #20
   15d7c:	strh	r3, [sp, #14]
   15d80:	mov	r3, #5
   15d84:	str	r3, [sp]
   15d88:	add	r3, sp, #14
   15d8c:	bl	15528 <table_set@@Base>
   15d90:	add	sp, sp, #20
   15d94:	pop	{pc}		; (ldr pc, [sp], #4)

00015d98 <table_set_int32@@Base>:
   15d98:	push	{lr}		; (str lr, [sp, #-4]!)
   15d9c:	sub	sp, sp, #20
   15da0:	str	r3, [sp, #12]
   15da4:	mov	r3, #6
   15da8:	str	r3, [sp]
   15dac:	add	r3, sp, #12
   15db0:	bl	15528 <table_set@@Base>
   15db4:	add	sp, sp, #20
   15db8:	pop	{pc}		; (ldr pc, [sp], #4)

00015dbc <table_set_uint32@@Base>:
   15dbc:	push	{lr}		; (str lr, [sp, #-4]!)
   15dc0:	sub	sp, sp, #20
   15dc4:	str	r3, [sp, #12]
   15dc8:	mov	r3, #7
   15dcc:	str	r3, [sp]
   15dd0:	add	r3, sp, #12
   15dd4:	bl	15528 <table_set@@Base>
   15dd8:	add	sp, sp, #20
   15ddc:	pop	{pc}		; (ldr pc, [sp], #4)

00015de0 <table_set_int64@@Base>:
   15de0:	push	{lr}		; (str lr, [sp, #-4]!)
   15de4:	sub	sp, sp, #12
   15de8:	mov	r3, #8
   15dec:	str	r3, [sp]
   15df0:	add	r3, sp, #16
   15df4:	bl	15528 <table_set@@Base>
   15df8:	add	sp, sp, #12
   15dfc:	pop	{pc}		; (ldr pc, [sp], #4)

00015e00 <table_set_uint64@@Base>:
   15e00:	push	{lr}		; (str lr, [sp, #-4]!)
   15e04:	sub	sp, sp, #12
   15e08:	mov	r3, #9
   15e0c:	str	r3, [sp]
   15e10:	add	r3, sp, #16
   15e14:	bl	15528 <table_set@@Base>
   15e18:	add	sp, sp, #12
   15e1c:	pop	{pc}		; (ldr pc, [sp], #4)

00015e20 <table_set_short@@Base>:
   15e20:	push	{lr}		; (str lr, [sp, #-4]!)
   15e24:	sub	sp, sp, #20
   15e28:	strh	r3, [sp, #14]
   15e2c:	mov	r3, #10
   15e30:	str	r3, [sp]
   15e34:	add	r3, sp, #14
   15e38:	bl	15528 <table_set@@Base>
   15e3c:	add	sp, sp, #20
   15e40:	pop	{pc}		; (ldr pc, [sp], #4)

00015e44 <table_set_ushort@@Base>:
   15e44:	push	{lr}		; (str lr, [sp, #-4]!)
   15e48:	sub	sp, sp, #20
   15e4c:	strh	r3, [sp, #14]
   15e50:	mov	r3, #11
   15e54:	str	r3, [sp]
   15e58:	add	r3, sp, #14
   15e5c:	bl	15528 <table_set@@Base>
   15e60:	add	sp, sp, #20
   15e64:	pop	{pc}		; (ldr pc, [sp], #4)

00015e68 <table_set_long@@Base>:
   15e68:	push	{lr}		; (str lr, [sp, #-4]!)
   15e6c:	sub	sp, sp, #20
   15e70:	str	r3, [sp, #12]
   15e74:	mov	r3, #12
   15e78:	str	r3, [sp]
   15e7c:	add	r3, sp, r3
   15e80:	bl	15528 <table_set@@Base>
   15e84:	add	sp, sp, #20
   15e88:	pop	{pc}		; (ldr pc, [sp], #4)

00015e8c <table_set_ulong@@Base>:
   15e8c:	push	{lr}		; (str lr, [sp, #-4]!)
   15e90:	sub	sp, sp, #20
   15e94:	str	r3, [sp, #12]
   15e98:	mov	r3, #13
   15e9c:	str	r3, [sp]
   15ea0:	add	r3, sp, #12
   15ea4:	bl	15528 <table_set@@Base>
   15ea8:	add	sp, sp, #20
   15eac:	pop	{pc}		; (ldr pc, [sp], #4)

00015eb0 <table_set_llong@@Base>:
   15eb0:	push	{lr}		; (str lr, [sp, #-4]!)
   15eb4:	sub	sp, sp, #12
   15eb8:	mov	r3, #14
   15ebc:	str	r3, [sp]
   15ec0:	add	r3, sp, #16
   15ec4:	bl	15528 <table_set@@Base>
   15ec8:	add	sp, sp, #12
   15ecc:	pop	{pc}		; (ldr pc, [sp], #4)

00015ed0 <table_set_ullong@@Base>:
   15ed0:	push	{lr}		; (str lr, [sp, #-4]!)
   15ed4:	sub	sp, sp, #12
   15ed8:	mov	r3, #15
   15edc:	str	r3, [sp]
   15ee0:	add	r3, sp, #16
   15ee4:	bl	15528 <table_set@@Base>
   15ee8:	add	sp, sp, #12
   15eec:	pop	{pc}		; (ldr pc, [sp], #4)

00015ef0 <table_set_float@@Base>:
   15ef0:	push	{lr}		; (str lr, [sp, #-4]!)
   15ef4:	sub	sp, sp, #20
   15ef8:	vstr	s0, [sp, #12]
   15efc:	mov	r3, #16
   15f00:	str	r3, [sp]
   15f04:	add	r3, sp, #12
   15f08:	bl	15528 <table_set@@Base>
   15f0c:	add	sp, sp, #20
   15f10:	pop	{pc}		; (ldr pc, [sp], #4)

00015f14 <table_set_double@@Base>:
   15f14:	push	{lr}		; (str lr, [sp, #-4]!)
   15f18:	sub	sp, sp, #20
   15f1c:	vstr	d0, [sp, #8]
   15f20:	mov	r3, #17
   15f24:	str	r3, [sp]
   15f28:	add	r3, sp, #8
   15f2c:	bl	15528 <table_set@@Base>
   15f30:	add	sp, sp, #20
   15f34:	pop	{pc}		; (ldr pc, [sp], #4)

00015f38 <table_set_ldouble@@Base>:
   15f38:	push	{lr}		; (str lr, [sp, #-4]!)
   15f3c:	sub	sp, sp, #20
   15f40:	vstr	d0, [sp, #8]
   15f44:	mov	r3, #18
   15f48:	str	r3, [sp]
   15f4c:	add	r3, sp, #8
   15f50:	bl	15528 <table_set@@Base>
   15f54:	add	sp, sp, #20
   15f58:	pop	{pc}		; (ldr pc, [sp], #4)

00015f5c <table_set_string@@Base>:
   15f5c:	push	{lr}		; (str lr, [sp, #-4]!)
   15f60:	sub	sp, sp, #12
   15f64:	mov	ip, #21
   15f68:	str	ip, [sp]
   15f6c:	bl	15528 <table_set@@Base>
   15f70:	add	sp, sp, #12
   15f74:	pop	{pc}		; (ldr pc, [sp], #4)

00015f78 <table_set_char@@Base>:
   15f78:	push	{lr}		; (str lr, [sp, #-4]!)
   15f7c:	sub	sp, sp, #20
   15f80:	strb	r3, [sp, #15]
   15f84:	mov	r3, #19
   15f88:	str	r3, [sp]
   15f8c:	add	r3, sp, #15
   15f90:	bl	15528 <table_set@@Base>
   15f94:	add	sp, sp, #20
   15f98:	pop	{pc}		; (ldr pc, [sp], #4)

00015f9c <table_set_uchar@@Base>:
   15f9c:	push	{lr}		; (str lr, [sp, #-4]!)
   15fa0:	sub	sp, sp, #20
   15fa4:	strb	r3, [sp, #15]
   15fa8:	mov	r3, #20
   15fac:	str	r3, [sp]
   15fb0:	add	r3, sp, #15
   15fb4:	bl	15528 <table_set@@Base>
   15fb8:	add	sp, sp, #20
   15fbc:	pop	{pc}		; (ldr pc, [sp], #4)

00015fc0 <table_set_ptr@@Base>:
   15fc0:	push	{lr}		; (str lr, [sp, #-4]!)
   15fc4:	sub	sp, sp, #12
   15fc8:	mov	ip, #23
   15fcc:	str	ip, [sp]
   15fd0:	bl	15528 <table_set@@Base>
   15fd4:	add	sp, sp, #12
   15fd8:	pop	{pc}		; (ldr pc, [sp], #4)

00015fdc <table_cell_to_buffer@@Base>:
   15fdc:	strd	r4, [sp, #-20]!	; 0xffffffec
   15fe0:	strd	r6, [sp, #8]
   15fe4:	str	lr, [sp, #16]
   15fe8:	sub	sp, sp, #12
   15fec:	mov	r6, r0
   15ff0:	mov	r7, r1
   15ff4:	mov	r4, r2
   15ff8:	mov	r5, r3
   15ffc:	mov	r1, r2
   16000:	bl	13784 <table_get_column_data_type@@Base>
   16004:	cmp	r0, #23
   16008:	ldrls	pc, [pc, r0, lsl #2]
   1600c:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16010:	andeq	r6, r1, r0, ror r0
   16014:	strheq	r6, [r1], -r0
   16018:	ldrdeq	r6, [r1], -ip
   1601c:	andeq	r6, r1, r8, lsl #2
   16020:	andeq	r6, r1, r4, lsr r1
   16024:	andeq	r6, r1, r0, ror #2
   16028:	andeq	r6, r1, ip, lsl #3
   1602c:			; <UNDEFINED> instruction: 0x000161b8
   16030:	andeq	r6, r1, r4, ror #3
   16034:	andeq	r6, r1, r0, lsl r2
   16038:	andeq	r6, r1, ip, lsr r2
   1603c:	andeq	r6, r1, r8, ror #4
   16040:	muleq	r1, r4, r2
   16044:	andeq	r6, r1, r0, asr #5
   16048:	andeq	r6, r1, ip, ror #5
   1604c:	andeq	r6, r1, r8, lsl r3
   16050:	andeq	r6, r1, r0, ror r3
   16054:	andeq	r6, r1, r0, lsr #7
   16058:	andeq	r6, r1, ip, asr #7
   1605c:	andeq	r6, r1, r4, lsr #8
   16060:	andeq	r6, r1, r0, asr r4
   16064:	andeq	r6, r1, r4, asr #6
   16068:	strdeq	r6, [r1], -r8
   1606c:	andeq	r6, r1, ip, ror r4
   16070:	mov	r2, r4
   16074:	mov	r1, r7
   16078:	mov	r0, r6
   1607c:	bl	14ff8 <table_get_int@@Base>
   16080:	mov	r3, r0
   16084:	movw	r2, #27884	; 0x6cec
   16088:	movt	r2, #1
   1608c:	ldr	r1, [sp, #32]
   16090:	mov	r0, r5
   16094:	bl	1296c <snprintf@plt>
   16098:	mov	r0, #0
   1609c:	add	sp, sp, #12
   160a0:	ldrd	r4, [sp]
   160a4:	ldrd	r6, [sp, #8]
   160a8:	add	sp, sp, #16
   160ac:	pop	{pc}		; (ldr pc, [sp], #4)
   160b0:	mov	r2, r4
   160b4:	mov	r1, r7
   160b8:	mov	r0, r6
   160bc:	bl	15014 <table_get_uint@@Base>
   160c0:	mov	r3, r0
   160c4:	movw	r2, #28016	; 0x6d70
   160c8:	movt	r2, #1
   160cc:	ldr	r1, [sp, #32]
   160d0:	mov	r0, r5
   160d4:	bl	1296c <snprintf@plt>
   160d8:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   160dc:	mov	r2, r4
   160e0:	mov	r1, r7
   160e4:	mov	r0, r6
   160e8:	bl	15030 <table_get_int8@@Base>
   160ec:	mov	r3, r0
   160f0:	movw	r2, #27884	; 0x6cec
   160f4:	movt	r2, #1
   160f8:	ldr	r1, [sp, #32]
   160fc:	mov	r0, r5
   16100:	bl	1296c <snprintf@plt>
   16104:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16108:	mov	r2, r4
   1610c:	mov	r1, r7
   16110:	mov	r0, r6
   16114:	bl	1504c <table_get_uint8@@Base>
   16118:	mov	r3, r0
   1611c:	movw	r2, #28016	; 0x6d70
   16120:	movt	r2, #1
   16124:	ldr	r1, [sp, #32]
   16128:	mov	r0, r5
   1612c:	bl	1296c <snprintf@plt>
   16130:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16134:	mov	r2, r4
   16138:	mov	r1, r7
   1613c:	mov	r0, r6
   16140:	bl	15068 <table_get_int16@@Base>
   16144:	mov	r3, r0
   16148:	movw	r2, #27884	; 0x6cec
   1614c:	movt	r2, #1
   16150:	ldr	r1, [sp, #32]
   16154:	mov	r0, r5
   16158:	bl	1296c <snprintf@plt>
   1615c:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16160:	mov	r2, r4
   16164:	mov	r1, r7
   16168:	mov	r0, r6
   1616c:	bl	15084 <table_get_uint16@@Base>
   16170:	mov	r3, r0
   16174:	movw	r2, #28016	; 0x6d70
   16178:	movt	r2, #1
   1617c:	ldr	r1, [sp, #32]
   16180:	mov	r0, r5
   16184:	bl	1296c <snprintf@plt>
   16188:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   1618c:	mov	r2, r4
   16190:	mov	r1, r7
   16194:	mov	r0, r6
   16198:	bl	150a0 <table_get_int32@@Base>
   1619c:	mov	r3, r0
   161a0:	movw	r2, #27884	; 0x6cec
   161a4:	movt	r2, #1
   161a8:	ldr	r1, [sp, #32]
   161ac:	mov	r0, r5
   161b0:	bl	1296c <snprintf@plt>
   161b4:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   161b8:	mov	r2, r4
   161bc:	mov	r1, r7
   161c0:	mov	r0, r6
   161c4:	bl	150bc <table_get_uint32@@Base>
   161c8:	mov	r3, r0
   161cc:	movw	r2, #28016	; 0x6d70
   161d0:	movt	r2, #1
   161d4:	ldr	r1, [sp, #32]
   161d8:	mov	r0, r5
   161dc:	bl	1296c <snprintf@plt>
   161e0:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   161e4:	mov	r2, r4
   161e8:	mov	r1, r7
   161ec:	mov	r0, r6
   161f0:	bl	150d8 <table_get_int64@@Base>
   161f4:	strd	r0, [sp]
   161f8:	movw	r2, #28020	; 0x6d74
   161fc:	movt	r2, #1
   16200:	ldr	r1, [sp, #32]
   16204:	mov	r0, r5
   16208:	bl	1296c <snprintf@plt>
   1620c:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16210:	mov	r2, r4
   16214:	mov	r1, r7
   16218:	mov	r0, r6
   1621c:	bl	150f4 <table_get_uint64@@Base>
   16220:	strd	r0, [sp]
   16224:	movw	r2, #28028	; 0x6d7c
   16228:	movt	r2, #1
   1622c:	ldr	r1, [sp, #32]
   16230:	mov	r0, r5
   16234:	bl	1296c <snprintf@plt>
   16238:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   1623c:	mov	r2, r4
   16240:	mov	r1, r7
   16244:	mov	r0, r6
   16248:	bl	15110 <table_get_short@@Base>
   1624c:	mov	r3, r0
   16250:	movw	r2, #28036	; 0x6d84
   16254:	movt	r2, #1
   16258:	ldr	r1, [sp, #32]
   1625c:	mov	r0, r5
   16260:	bl	1296c <snprintf@plt>
   16264:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16268:	mov	r2, r4
   1626c:	mov	r1, r7
   16270:	mov	r0, r6
   16274:	bl	1512c <table_get_ushort@@Base>
   16278:	mov	r3, r0
   1627c:	movw	r2, #28040	; 0x6d88
   16280:	movt	r2, #1
   16284:	ldr	r1, [sp, #32]
   16288:	mov	r0, r5
   1628c:	bl	1296c <snprintf@plt>
   16290:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16294:	mov	r2, r4
   16298:	mov	r1, r7
   1629c:	mov	r0, r6
   162a0:	bl	15148 <table_get_long@@Base>
   162a4:	mov	r3, r0
   162a8:	movw	r2, #28044	; 0x6d8c
   162ac:	movt	r2, #1
   162b0:	ldr	r1, [sp, #32]
   162b4:	mov	r0, r5
   162b8:	bl	1296c <snprintf@plt>
   162bc:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   162c0:	mov	r2, r4
   162c4:	mov	r1, r7
   162c8:	mov	r0, r6
   162cc:	bl	15164 <table_get_ulong@@Base>
   162d0:	mov	r3, r0
   162d4:	movw	r2, #28048	; 0x6d90
   162d8:	movt	r2, #1
   162dc:	ldr	r1, [sp, #32]
   162e0:	mov	r0, r5
   162e4:	bl	1296c <snprintf@plt>
   162e8:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   162ec:	mov	r2, r4
   162f0:	mov	r1, r7
   162f4:	mov	r0, r6
   162f8:	bl	15180 <table_get_llong@@Base>
   162fc:	strd	r0, [sp]
   16300:	movw	r2, #28020	; 0x6d74
   16304:	movt	r2, #1
   16308:	ldr	r1, [sp, #32]
   1630c:	mov	r0, r5
   16310:	bl	1296c <snprintf@plt>
   16314:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16318:	mov	r2, r4
   1631c:	mov	r1, r7
   16320:	mov	r0, r6
   16324:	bl	1519c <table_get_ullong@@Base>
   16328:	strd	r0, [sp]
   1632c:	movw	r2, #28028	; 0x6d7c
   16330:	movt	r2, #1
   16334:	ldr	r1, [sp, #32]
   16338:	mov	r0, r5
   1633c:	bl	1296c <snprintf@plt>
   16340:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16344:	mov	r2, r4
   16348:	mov	r1, r7
   1634c:	mov	r0, r6
   16350:	bl	15244 <table_get_string@@Base>
   16354:	mov	r3, r0
   16358:	movw	r2, #28052	; 0x6d94
   1635c:	movt	r2, #1
   16360:	ldr	r1, [sp, #32]
   16364:	mov	r0, r5
   16368:	bl	1296c <snprintf@plt>
   1636c:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16370:	mov	r2, r4
   16374:	mov	r1, r7
   16378:	mov	r0, r6
   1637c:	bl	151b8 <table_get_float@@Base>
   16380:	vcvt.f64.f32	d0, s0
   16384:	vstr	d0, [sp]
   16388:	movw	r2, #28056	; 0x6d98
   1638c:	movt	r2, #1
   16390:	ldr	r1, [sp, #32]
   16394:	mov	r0, r5
   16398:	bl	1296c <snprintf@plt>
   1639c:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   163a0:	mov	r2, r4
   163a4:	mov	r1, r7
   163a8:	mov	r0, r6
   163ac:	bl	151d4 <table_get_double@@Base>
   163b0:	vstr	d0, [sp]
   163b4:	movw	r2, #28060	; 0x6d9c
   163b8:	movt	r2, #1
   163bc:	ldr	r1, [sp, #32]
   163c0:	mov	r0, r5
   163c4:	bl	1296c <snprintf@plt>
   163c8:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   163cc:	mov	r2, r4
   163d0:	mov	r1, r7
   163d4:	mov	r0, r6
   163d8:	bl	151f0 <table_get_ldouble@@Base>
   163dc:	vstr	d0, [sp]
   163e0:	movw	r2, #28064	; 0x6da0
   163e4:	movt	r2, #1
   163e8:	ldr	r1, [sp, #32]
   163ec:	mov	r0, r5
   163f0:	bl	1296c <snprintf@plt>
   163f4:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   163f8:	mov	r2, r4
   163fc:	mov	r1, r7
   16400:	mov	r0, r6
   16404:	bl	14fdc <table_get_bool@@Base>
   16408:	mov	r3, r0
   1640c:	movw	r2, #27884	; 0x6cec
   16410:	movt	r2, #1
   16414:	ldr	r1, [sp, #32]
   16418:	mov	r0, r5
   1641c:	bl	1296c <snprintf@plt>
   16420:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16424:	mov	r2, r4
   16428:	mov	r1, r7
   1642c:	mov	r0, r6
   16430:	bl	1520c <table_get_char@@Base>
   16434:	mov	r3, r0
   16438:	movw	r2, #28068	; 0x6da4
   1643c:	movt	r2, #1
   16440:	ldr	r1, [sp, #32]
   16444:	mov	r0, r5
   16448:	bl	1296c <snprintf@plt>
   1644c:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   16450:	mov	r2, r4
   16454:	mov	r1, r7
   16458:	mov	r0, r6
   1645c:	bl	15228 <table_get_uchar@@Base>
   16460:	mov	r3, r0
   16464:	movw	r2, #28068	; 0x6da4
   16468:	movt	r2, #1
   1646c:	ldr	r1, [sp, #32]
   16470:	mov	r0, r5
   16474:	bl	1296c <snprintf@plt>
   16478:	b	16098 <table_cell_to_buffer@@Base+0xbc>
   1647c:	mov	r2, r4
   16480:	mov	r1, r7
   16484:	mov	r0, r6
   16488:	bl	1525c <table_get_ptr@@Base>
   1648c:	mov	r3, r0
   16490:	movw	r2, #28072	; 0x6da8
   16494:	movt	r2, #1
   16498:	ldr	r1, [sp, #32]
   1649c:	mov	r0, r5
   164a0:	bl	1296c <snprintf@plt>
   164a4:	b	16098 <table_cell_to_buffer@@Base+0xbc>

000164a8 <table_cell_from_buffer@@Base>:
   164a8:	strd	r4, [sp, #-20]!	; 0xffffffec
   164ac:	strd	r6, [sp, #8]
   164b0:	str	lr, [sp, #16]
   164b4:	sub	sp, sp, #268	; 0x10c
   164b8:	mov	r6, r0
   164bc:	mov	r7, r1
   164c0:	mov	r4, r2
   164c4:	mov	r5, r3
   164c8:	mov	r1, r2
   164cc:	bl	13784 <table_get_column_data_type@@Base>
   164d0:	cmp	r0, #23
   164d4:	ldrls	pc, [pc, r0, lsl #2]
   164d8:	b	16b28 <table_cell_from_buffer@@Base+0x680>
   164dc:	andeq	r6, r1, ip, lsr r5
   164e0:	muleq	r1, r0, r5
   164e4:	andeq	r6, r1, ip, asr #11
   164e8:	andeq	r6, r1, r8, lsl #12
   164ec:	andeq	r6, r1, r4, asr #12
   164f0:	andeq	r6, r1, r0, lsl #13
   164f4:			; <UNDEFINED> instruction: 0x000166bc
   164f8:	strdeq	r6, [r1], -r8
   164fc:	andeq	r6, r1, r4, lsr r7
   16500:	andeq	r6, r1, r4, ror r7
   16504:			; <UNDEFINED> instruction: 0x000167b4
   16508:	strdeq	r6, [r1], -r0
   1650c:	andeq	r6, r1, ip, lsr #16
   16510:	andeq	r6, r1, r8, ror #16
   16514:	andeq	r6, r1, r4, lsr #17
   16518:	andeq	r6, r1, r4, ror #17
   1651c:	andeq	r6, r1, r0, ror #18
   16520:	muleq	r1, ip, r9
   16524:	ldrdeq	r6, [r1], -r8
   16528:	andeq	r6, r1, r4, ror sl
   1652c:			; <UNDEFINED> instruction: 0x00016ab0
   16530:	andeq	r6, r1, r4, lsr #18
   16534:	andeq	r6, r1, r4, lsl sl
   16538:	andeq	r6, r1, ip, ror #21
   1653c:	add	r2, sp, #8
   16540:	movw	r1, #27884	; 0x6cec
   16544:	movt	r1, #1
   16548:	mov	r0, r5
   1654c:	bl	12978 <__isoc99_sscanf@plt>
   16550:	cmp	r0, #1
   16554:	mvnne	r5, #0
   16558:	beq	16574 <table_cell_from_buffer@@Base+0xcc>
   1655c:	mov	r0, r5
   16560:	add	sp, sp, #268	; 0x10c
   16564:	ldrd	r4, [sp]
   16568:	ldrd	r6, [sp, #8]
   1656c:	add	sp, sp, #16
   16570:	pop	{pc}		; (ldr pc, [sp], #4)
   16574:	ldr	r3, [sp, #8]
   16578:	mov	r2, r4
   1657c:	mov	r1, r7
   16580:	mov	r0, r6
   16584:	bl	15cc0 <table_set_int@@Base>
   16588:	mov	r5, #0
   1658c:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16590:	add	r2, sp, #8
   16594:	movw	r1, #28016	; 0x6d70
   16598:	movt	r1, #1
   1659c:	mov	r0, r5
   165a0:	bl	12978 <__isoc99_sscanf@plt>
   165a4:	cmp	r0, #1
   165a8:	mvnne	r5, #0
   165ac:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   165b0:	ldr	r3, [sp, #8]
   165b4:	mov	r2, r4
   165b8:	mov	r1, r7
   165bc:	mov	r0, r6
   165c0:	bl	15ce4 <table_set_uint@@Base>
   165c4:	mov	r5, #0
   165c8:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   165cc:	add	r2, sp, #8
   165d0:	movw	r1, #28076	; 0x6dac
   165d4:	movt	r1, #1
   165d8:	mov	r0, r5
   165dc:	bl	12978 <__isoc99_sscanf@plt>
   165e0:	cmp	r0, #1
   165e4:	mvnne	r5, #0
   165e8:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   165ec:	ldrsb	r3, [sp, #8]
   165f0:	mov	r2, r4
   165f4:	mov	r1, r7
   165f8:	mov	r0, r6
   165fc:	bl	15d08 <table_set_int8@@Base>
   16600:	mov	r5, #0
   16604:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16608:	add	r2, sp, #8
   1660c:	movw	r1, #28084	; 0x6db4
   16610:	movt	r1, #1
   16614:	mov	r0, r5
   16618:	bl	12978 <__isoc99_sscanf@plt>
   1661c:	cmp	r0, #1
   16620:	mvnne	r5, #0
   16624:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16628:	ldrb	r3, [sp, #8]
   1662c:	mov	r2, r4
   16630:	mov	r1, r7
   16634:	mov	r0, r6
   16638:	bl	15d2c <table_set_uint8@@Base>
   1663c:	mov	r5, #0
   16640:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16644:	add	r2, sp, #8
   16648:	movw	r1, #28036	; 0x6d84
   1664c:	movt	r1, #1
   16650:	mov	r0, r5
   16654:	bl	12978 <__isoc99_sscanf@plt>
   16658:	cmp	r0, #1
   1665c:	mvnne	r5, #0
   16660:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16664:	ldrsh	r3, [sp, #8]
   16668:	mov	r2, r4
   1666c:	mov	r1, r7
   16670:	mov	r0, r6
   16674:	bl	15d50 <table_set_int16@@Base>
   16678:	mov	r5, #0
   1667c:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16680:	add	r2, sp, #8
   16684:	movw	r1, #28040	; 0x6d88
   16688:	movt	r1, #1
   1668c:	mov	r0, r5
   16690:	bl	12978 <__isoc99_sscanf@plt>
   16694:	cmp	r0, #1
   16698:	mvnne	r5, #0
   1669c:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   166a0:	ldrh	r3, [sp, #8]
   166a4:	mov	r2, r4
   166a8:	mov	r1, r7
   166ac:	mov	r0, r6
   166b0:	bl	15d74 <table_set_uint16@@Base>
   166b4:	mov	r5, #0
   166b8:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   166bc:	add	r2, sp, #8
   166c0:	movw	r1, #27884	; 0x6cec
   166c4:	movt	r1, #1
   166c8:	mov	r0, r5
   166cc:	bl	12978 <__isoc99_sscanf@plt>
   166d0:	cmp	r0, #1
   166d4:	mvnne	r5, #0
   166d8:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   166dc:	ldr	r3, [sp, #8]
   166e0:	mov	r2, r4
   166e4:	mov	r1, r7
   166e8:	mov	r0, r6
   166ec:	bl	15d98 <table_set_int32@@Base>
   166f0:	mov	r5, #0
   166f4:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   166f8:	add	r2, sp, #8
   166fc:	movw	r1, #28016	; 0x6d70
   16700:	movt	r1, #1
   16704:	mov	r0, r5
   16708:	bl	12978 <__isoc99_sscanf@plt>
   1670c:	cmp	r0, #1
   16710:	mvnne	r5, #0
   16714:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16718:	ldr	r3, [sp, #8]
   1671c:	mov	r2, r4
   16720:	mov	r1, r7
   16724:	mov	r0, r6
   16728:	bl	15dbc <table_set_uint32@@Base>
   1672c:	mov	r5, #0
   16730:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16734:	add	r2, sp, #8
   16738:	movw	r1, #28020	; 0x6d74
   1673c:	movt	r1, #1
   16740:	mov	r0, r5
   16744:	bl	12978 <__isoc99_sscanf@plt>
   16748:	cmp	r0, #1
   1674c:	mvnne	r5, #0
   16750:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16754:	ldrd	r2, [sp, #8]
   16758:	strd	r2, [sp]
   1675c:	mov	r2, r4
   16760:	mov	r1, r7
   16764:	mov	r0, r6
   16768:	bl	15de0 <table_set_int64@@Base>
   1676c:	mov	r5, #0
   16770:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16774:	add	r2, sp, #8
   16778:	movw	r1, #28028	; 0x6d7c
   1677c:	movt	r1, #1
   16780:	mov	r0, r5
   16784:	bl	12978 <__isoc99_sscanf@plt>
   16788:	cmp	r0, #1
   1678c:	mvnne	r5, #0
   16790:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16794:	ldrd	r2, [sp, #8]
   16798:	strd	r2, [sp]
   1679c:	mov	r2, r4
   167a0:	mov	r1, r7
   167a4:	mov	r0, r6
   167a8:	bl	15e00 <table_set_uint64@@Base>
   167ac:	mov	r5, #0
   167b0:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   167b4:	add	r2, sp, #8
   167b8:	movw	r1, #28036	; 0x6d84
   167bc:	movt	r1, #1
   167c0:	mov	r0, r5
   167c4:	bl	12978 <__isoc99_sscanf@plt>
   167c8:	cmp	r0, #1
   167cc:	mvnne	r5, #0
   167d0:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   167d4:	ldrsh	r3, [sp, #8]
   167d8:	mov	r2, r4
   167dc:	mov	r1, r7
   167e0:	mov	r0, r6
   167e4:	bl	15e20 <table_set_short@@Base>
   167e8:	mov	r5, #0
   167ec:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   167f0:	add	r2, sp, #8
   167f4:	movw	r1, #28040	; 0x6d88
   167f8:	movt	r1, #1
   167fc:	mov	r0, r5
   16800:	bl	12978 <__isoc99_sscanf@plt>
   16804:	cmp	r0, #1
   16808:	mvnne	r5, #0
   1680c:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16810:	ldrh	r3, [sp, #8]
   16814:	mov	r2, r4
   16818:	mov	r1, r7
   1681c:	mov	r0, r6
   16820:	bl	15e44 <table_set_ushort@@Base>
   16824:	mov	r5, #0
   16828:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   1682c:	add	r2, sp, #8
   16830:	movw	r1, #28044	; 0x6d8c
   16834:	movt	r1, #1
   16838:	mov	r0, r5
   1683c:	bl	12978 <__isoc99_sscanf@plt>
   16840:	cmp	r0, #1
   16844:	mvnne	r5, #0
   16848:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   1684c:	ldr	r3, [sp, #8]
   16850:	mov	r2, r4
   16854:	mov	r1, r7
   16858:	mov	r0, r6
   1685c:	bl	15e68 <table_set_long@@Base>
   16860:	mov	r5, #0
   16864:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16868:	add	r2, sp, #8
   1686c:	movw	r1, #28048	; 0x6d90
   16870:	movt	r1, #1
   16874:	mov	r0, r5
   16878:	bl	12978 <__isoc99_sscanf@plt>
   1687c:	cmp	r0, #1
   16880:	mvnne	r5, #0
   16884:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16888:	ldr	r3, [sp, #8]
   1688c:	mov	r2, r4
   16890:	mov	r1, r7
   16894:	mov	r0, r6
   16898:	bl	15e8c <table_set_ulong@@Base>
   1689c:	mov	r5, #0
   168a0:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   168a4:	add	r2, sp, #8
   168a8:	movw	r1, #28020	; 0x6d74
   168ac:	movt	r1, #1
   168b0:	mov	r0, r5
   168b4:	bl	12978 <__isoc99_sscanf@plt>
   168b8:	cmp	r0, #1
   168bc:	mvnne	r5, #0
   168c0:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   168c4:	ldrd	r2, [sp, #8]
   168c8:	strd	r2, [sp]
   168cc:	mov	r2, r4
   168d0:	mov	r1, r7
   168d4:	mov	r0, r6
   168d8:	bl	15eb0 <table_set_llong@@Base>
   168dc:	mov	r5, #0
   168e0:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   168e4:	add	r2, sp, #8
   168e8:	movw	r1, #28028	; 0x6d7c
   168ec:	movt	r1, #1
   168f0:	mov	r0, r5
   168f4:	bl	12978 <__isoc99_sscanf@plt>
   168f8:	cmp	r0, #1
   168fc:	mvnne	r5, #0
   16900:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16904:	ldrd	r2, [sp, #8]
   16908:	strd	r2, [sp]
   1690c:	mov	r2, r4
   16910:	mov	r1, r7
   16914:	mov	r0, r6
   16918:	bl	15ed0 <table_set_ullong@@Base>
   1691c:	mov	r5, #0
   16920:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16924:	add	r2, sp, #8
   16928:	movw	r1, #28052	; 0x6d94
   1692c:	movt	r1, #1
   16930:	mov	r0, r5
   16934:	bl	12978 <__isoc99_sscanf@plt>
   16938:	cmp	r0, #1
   1693c:	mvnne	r5, #0
   16940:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16944:	add	r3, sp, #8
   16948:	mov	r2, r4
   1694c:	mov	r1, r7
   16950:	mov	r0, r6
   16954:	bl	15f5c <table_set_string@@Base>
   16958:	mov	r5, #0
   1695c:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16960:	add	r2, sp, #8
   16964:	movw	r1, #28056	; 0x6d98
   16968:	movt	r1, #1
   1696c:	mov	r0, r5
   16970:	bl	12978 <__isoc99_sscanf@plt>
   16974:	cmp	r0, #1
   16978:	mvnne	r5, #0
   1697c:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16980:	vldr	s0, [sp, #8]
   16984:	mov	r2, r4
   16988:	mov	r1, r7
   1698c:	mov	r0, r6
   16990:	bl	15ef0 <table_set_float@@Base>
   16994:	mov	r5, #0
   16998:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   1699c:	add	r2, sp, #8
   169a0:	movw	r1, #28060	; 0x6d9c
   169a4:	movt	r1, #1
   169a8:	mov	r0, r5
   169ac:	bl	12978 <__isoc99_sscanf@plt>
   169b0:	cmp	r0, #1
   169b4:	mvnne	r5, #0
   169b8:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   169bc:	vldr	d0, [sp, #8]
   169c0:	mov	r2, r4
   169c4:	mov	r1, r7
   169c8:	mov	r0, r6
   169cc:	bl	15f14 <table_set_double@@Base>
   169d0:	mov	r5, #0
   169d4:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   169d8:	add	r2, sp, #8
   169dc:	movw	r1, #28064	; 0x6da0
   169e0:	movt	r1, #1
   169e4:	mov	r0, r5
   169e8:	bl	12978 <__isoc99_sscanf@plt>
   169ec:	cmp	r0, #1
   169f0:	mvnne	r5, #0
   169f4:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   169f8:	vldr	d0, [sp, #8]
   169fc:	mov	r2, r4
   16a00:	mov	r1, r7
   16a04:	mov	r0, r6
   16a08:	bl	15f38 <table_set_ldouble@@Base>
   16a0c:	mov	r5, #0
   16a10:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16a14:	add	r2, sp, #8
   16a18:	movw	r1, #27884	; 0x6cec
   16a1c:	movt	r1, #1
   16a20:	mov	r0, r5
   16a24:	bl	12978 <__isoc99_sscanf@plt>
   16a28:	cmp	r0, #1
   16a2c:	mvnne	r5, #0
   16a30:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16a34:	ldr	r5, [sp, #8]
   16a38:	cmp	r5, #0
   16a3c:	beq	16a5c <table_cell_from_buffer@@Base+0x5b4>
   16a40:	mov	r3, #1
   16a44:	mov	r2, r4
   16a48:	mov	r1, r7
   16a4c:	mov	r0, r6
   16a50:	bl	15c9c <table_set_bool@@Base>
   16a54:	mov	r5, #0
   16a58:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16a5c:	mov	r3, #0
   16a60:	mov	r2, r4
   16a64:	mov	r1, r7
   16a68:	mov	r0, r6
   16a6c:	bl	15c9c <table_set_bool@@Base>
   16a70:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16a74:	add	r2, sp, #8
   16a78:	movw	r1, #28068	; 0x6da4
   16a7c:	movt	r1, #1
   16a80:	mov	r0, r5
   16a84:	bl	12978 <__isoc99_sscanf@plt>
   16a88:	cmp	r0, #1
   16a8c:	mvnne	r5, #0
   16a90:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16a94:	ldrb	r3, [sp, #8]
   16a98:	mov	r2, r4
   16a9c:	mov	r1, r7
   16aa0:	mov	r0, r6
   16aa4:	bl	15f78 <table_set_char@@Base>
   16aa8:	mov	r5, #0
   16aac:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16ab0:	add	r2, sp, #8
   16ab4:	movw	r1, #28068	; 0x6da4
   16ab8:	movt	r1, #1
   16abc:	mov	r0, r5
   16ac0:	bl	12978 <__isoc99_sscanf@plt>
   16ac4:	cmp	r0, #1
   16ac8:	mvnne	r5, #0
   16acc:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16ad0:	ldrb	r3, [sp, #8]
   16ad4:	mov	r2, r4
   16ad8:	mov	r1, r7
   16adc:	mov	r0, r6
   16ae0:	bl	15f9c <table_set_uchar@@Base>
   16ae4:	mov	r5, #0
   16ae8:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16aec:	add	r2, sp, #8
   16af0:	movw	r1, #28072	; 0x6da8
   16af4:	movt	r1, #1
   16af8:	mov	r0, r5
   16afc:	bl	12978 <__isoc99_sscanf@plt>
   16b00:	cmp	r0, #1
   16b04:	mvnne	r5, #0
   16b08:	bne	1655c <table_cell_from_buffer@@Base+0xb4>
   16b0c:	ldr	r3, [sp, #8]
   16b10:	mov	r2, r4
   16b14:	mov	r1, r7
   16b18:	mov	r0, r6
   16b1c:	bl	15fc0 <table_set_ptr@@Base>
   16b20:	mov	r5, #0
   16b24:	b	1655c <table_cell_from_buffer@@Base+0xb4>
   16b28:	mov	r5, #0
   16b2c:	b	1655c <table_cell_from_buffer@@Base+0xb4>

00016b30 <table_get_cell_ptr@@Base>:
   16b30:	str	r4, [sp, #-8]!
   16b34:	str	lr, [sp, #4]
   16b38:	mov	r4, r2
   16b3c:	bl	1550c <table_get_row_ptr@@Base>
   16b40:	ldr	r0, [r0]
   16b44:	add	r0, r0, r4, lsl #2
   16b48:	ldr	r4, [sp]
   16b4c:	add	sp, sp, #4
   16b50:	pop	{pc}		; (ldr pc, [sp], #4)

00016b54 <table_cell_init@@Base>:
   16b54:	str	r4, [sp, #-8]!
   16b58:	str	lr, [sp, #4]
   16b5c:	bl	16b30 <table_get_cell_ptr@@Base>
   16b60:	mov	r3, #0
   16b64:	str	r3, [r0]
   16b68:	ldr	r4, [sp]
   16b6c:	add	sp, sp, #4
   16b70:	pop	{pc}		; (ldr pc, [sp], #4)

00016b74 <table_cell_destroy@@Base>:
   16b74:	strd	r4, [sp, #-16]!
   16b78:	str	r6, [sp, #8]
   16b7c:	str	lr, [sp, #12]
   16b80:	mov	r5, r0
   16b84:	mov	r6, r1
   16b88:	mov	r4, r2
   16b8c:	mov	r1, r2
   16b90:	bl	13784 <table_get_column_data_type@@Base>
   16b94:	cmp	r0, #23
   16b98:	bne	16bac <table_cell_destroy@@Base+0x38>
   16b9c:	ldrd	r4, [sp]
   16ba0:	ldr	r6, [sp, #8]
   16ba4:	add	sp, sp, #12
   16ba8:	pop	{pc}		; (ldr pc, [sp], #4)
   16bac:	mov	r2, r4
   16bb0:	mov	r1, r6
   16bb4:	mov	r0, r5
   16bb8:	bl	16b30 <table_get_cell_ptr@@Base>
   16bbc:	ldr	r0, [r0]
   16bc0:	cmp	r0, #0
   16bc4:	beq	16b9c <table_cell_destroy@@Base+0x28>
   16bc8:	bl	12918 <free@plt>
   16bcc:	b	16b9c <table_cell_destroy@@Base+0x28>

00016bd0 <table_cell_nullify@@Base>:
   16bd0:	str	r4, [sp, #-8]!
   16bd4:	str	lr, [sp, #4]
   16bd8:	bl	16b30 <table_get_cell_ptr@@Base>
   16bdc:	mov	r4, r0
   16be0:	ldr	r0, [r0]
   16be4:	cmp	r0, #0
   16be8:	beq	16bf8 <table_cell_nullify@@Base+0x28>
   16bec:	bl	12918 <free@plt>
   16bf0:	mov	r3, #0
   16bf4:	str	r3, [r4]
   16bf8:	mov	r0, #0
   16bfc:	ldr	r4, [sp]
   16c00:	add	sp, sp, #4
   16c04:	pop	{pc}		; (ldr pc, [sp], #4)

00016c08 <__libc_csu_init@@Base>:
   16c08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16c0c:	mov	r7, r0
   16c10:	ldr	r6, [pc, #72]	; 16c60 <__libc_csu_init@@Base+0x58>
   16c14:	ldr	r5, [pc, #72]	; 16c64 <__libc_csu_init@@Base+0x5c>
   16c18:	add	r6, pc, r6
   16c1c:	add	r5, pc, r5
   16c20:	sub	r6, r6, r5
   16c24:	mov	r8, r1
   16c28:	mov	r9, r2
   16c2c:	bl	128e0 <strcmp@plt-0x20>
   16c30:	asrs	r6, r6, #2
   16c34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16c38:	mov	r4, #0
   16c3c:	add	r4, r4, #1
   16c40:	ldr	r3, [r5], #4
   16c44:	mov	r2, r9
   16c48:	mov	r1, r8
   16c4c:	mov	r0, r7
   16c50:	blx	r3
   16c54:	cmp	r6, r4
   16c58:	bne	16c3c <__libc_csu_init@@Base+0x34>
   16c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16c60:	strdeq	r0, [r1], -r4
   16c64:	andeq	r0, r1, ip, ror #5

00016c68 <__libc_csu_fini@@Base>:
   16c68:	bx	lr

Disassembly of section .fini:

00016c6c <.fini>:
   16c6c:	push	{r3, lr}
   16c70:	pop	{r3, pc}
