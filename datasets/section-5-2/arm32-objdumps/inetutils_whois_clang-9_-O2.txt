
../repos/inetutils/whois/whois:     file format elf32-littlearm


Disassembly of section .init:

000112e0 <.init>:
   112e0:	push	{r3, lr}
   112e4:	bl	1163c <__assert_fail@plt+0x48>
   112e8:	pop	{r3, pc}

Disassembly of section .plt:

000112ec <fdopen@plt-0x14>:
   112ec:	push	{lr}		; (str lr, [sp, #-4]!)
   112f0:	ldr	lr, [pc, #4]	; 112fc <fdopen@plt-0x4>
   112f4:	add	lr, pc, lr
   112f8:	ldr	pc, [lr, #8]!
   112fc:	andeq	fp, r1, r4, lsl #26

00011300 <fdopen@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #110592	; 0x1b000
   11308:	ldr	pc, [ip, #3332]!	; 0xd04

0001130c <calloc@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #110592	; 0x1b000
   11314:	ldr	pc, [ip, #3324]!	; 0xcfc

00011318 <fputs_unlocked@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #110592	; 0x1b000
   11320:	ldr	pc, [ip, #3316]!	; 0xcf4

00011324 <inet_aton@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #110592	; 0x1b000
   1132c:	ldr	pc, [ip, #3308]!	; 0xcec

00011330 <strcmp@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #110592	; 0x1b000
   11338:	ldr	pc, [ip, #3300]!	; 0xce4

0001133c <strtol@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #110592	; 0x1b000
   11344:	ldr	pc, [ip, #3292]!	; 0xcdc

00011348 <printf@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #110592	; 0x1b000
   11350:	ldr	pc, [ip, #3284]!	; 0xcd4

00011354 <memmove@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #110592	; 0x1b000
   1135c:	ldr	pc, [ip, #3276]!	; 0xccc

00011360 <strchrnul@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #110592	; 0x1b000
   11368:	ldr	pc, [ip, #3268]!	; 0xcc4

0001136c <free@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #110592	; 0x1b000
   11374:	ldr	pc, [ip, #3260]!	; 0xcbc

00011378 <gai_strerror@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #110592	; 0x1b000
   11380:	ldr	pc, [ip, #3252]!	; 0xcb4

00011384 <fgets@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #110592	; 0x1b000
   1138c:	ldr	pc, [ip, #3244]!	; 0xcac

00011390 <ferror@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #110592	; 0x1b000
   11398:	ldr	pc, [ip, #3236]!	; 0xca4

0001139c <strndup@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #110592	; 0x1b000
   113a4:	ldr	pc, [ip, #3228]!	; 0xc9c

000113a8 <memcpy@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #110592	; 0x1b000
   113b0:	ldr	pc, [ip, #3220]!	; 0xc94

000113b4 <signal@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #110592	; 0x1b000
   113bc:	ldr	pc, [ip, #3212]!	; 0xc8c

000113c0 <fwrite_unlocked@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #110592	; 0x1b000
   113c8:	ldr	pc, [ip, #3204]!	; 0xc84

000113cc <sleep@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #110592	; 0x1b000
   113d4:	ldr	pc, [ip, #3196]!	; 0xc7c

000113d8 <realloc@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #110592	; 0x1b000
   113e0:	ldr	pc, [ip, #3188]!	; 0xc74

000113e4 <strcasecmp@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #110592	; 0x1b000
   113ec:	ldr	pc, [ip, #3180]!	; 0xc6c

000113f0 <funlockfile@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #110592	; 0x1b000
   113f8:	ldr	pc, [ip, #3172]!	; 0xc64

000113fc <fwrite@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #110592	; 0x1b000
   11404:	ldr	pc, [ip, #3164]!	; 0xc5c

00011408 <strcat@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #110592	; 0x1b000
   11410:	ldr	pc, [ip, #3156]!	; 0xc54

00011414 <strcpy@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #110592	; 0x1b000
   1141c:	ldr	pc, [ip, #3148]!	; 0xc4c

00011420 <error@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #110592	; 0x1b000
   11428:	ldr	pc, [ip, #3140]!	; 0xc44

0001142c <getenv@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #110592	; 0x1b000
   11434:	ldr	pc, [ip, #3132]!	; 0xc3c

00011438 <puts@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #110592	; 0x1b000
   11440:	ldr	pc, [ip, #3124]!	; 0xc34

00011444 <malloc@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #110592	; 0x1b000
   1144c:	ldr	pc, [ip, #3116]!	; 0xc2c

00011450 <__libc_start_main@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #110592	; 0x1b000
   11458:	ldr	pc, [ip, #3108]!	; 0xc24

0001145c <strerror@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #110592	; 0x1b000
   11464:	ldr	pc, [ip, #3100]!	; 0xc1c

00011468 <__ctype_tolower_loc@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #110592	; 0x1b000
   11470:	ldr	pc, [ip, #3092]!	; 0xc14

00011474 <__gmon_start__@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #110592	; 0x1b000
   1147c:	ldr	pc, [ip, #3084]!	; 0xc0c

00011480 <__ctype_b_loc@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #110592	; 0x1b000
   11488:	ldr	pc, [ip, #3076]!	; 0xc04

0001148c <exit@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #110592	; 0x1b000
   11494:	ldr	pc, [ip, #3068]!	; 0xbfc

00011498 <bcmp@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #110592	; 0x1b000
   114a0:	ldr	pc, [ip, #3060]!	; 0xbf4

000114a4 <strlen@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #110592	; 0x1b000
   114ac:	ldr	pc, [ip, #3052]!	; 0xbec

000114b0 <strchr@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #110592	; 0x1b000
   114b8:	ldr	pc, [ip, #3044]!	; 0xbe4

000114bc <fprintf@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #110592	; 0x1b000
   114c4:	ldr	pc, [ip, #3036]!	; 0xbdc

000114c8 <__errno_location@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #110592	; 0x1b000
   114d0:	ldr	pc, [ip, #3028]!	; 0xbd4

000114d4 <strncasecmp@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #110592	; 0x1b000
   114dc:	ldr	pc, [ip, #3020]!	; 0xbcc

000114e0 <strerror_r@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #110592	; 0x1b000
   114e8:	ldr	pc, [ip, #3012]!	; 0xbc4

000114ec <memset@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #110592	; 0x1b000
   114f4:	ldr	pc, [ip, #3004]!	; 0xbbc

000114f8 <write@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #110592	; 0x1b000
   11500:	ldr	pc, [ip, #2996]!	; 0xbb4

00011504 <memchr@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #110592	; 0x1b000
   1150c:	ldr	pc, [ip, #2988]!	; 0xbac

00011510 <__overflow@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #110592	; 0x1b000
   11518:	ldr	pc, [ip, #2980]!	; 0xba4

0001151c <strrchr@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #110592	; 0x1b000
   11524:	ldr	pc, [ip, #2972]!	; 0xb9c

00011528 <vfprintf@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #110592	; 0x1b000
   11530:	ldr	pc, [ip, #2964]!	; 0xb94

00011534 <fputc@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #110592	; 0x1b000
   1153c:	ldr	pc, [ip, #2956]!	; 0xb8c

00011540 <sscanf@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #110592	; 0x1b000
   11548:	ldr	pc, [ip, #2948]!	; 0xb84

0001154c <sprintf@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #110592	; 0x1b000
   11554:	ldr	pc, [ip, #2940]!	; 0xb7c

00011558 <flockfile@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #110592	; 0x1b000
   11560:	ldr	pc, [ip, #2932]!	; 0xb74

00011564 <vsnprintf@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #110592	; 0x1b000
   1156c:	ldr	pc, [ip, #2924]!	; 0xb6c

00011570 <qsort@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #110592	; 0x1b000
   11578:	ldr	pc, [ip, #2916]!	; 0xb64

0001157c <strpbrk@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #110592	; 0x1b000
   11584:	ldr	pc, [ip, #2908]!	; 0xb5c

00011588 <freeaddrinfo@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #110592	; 0x1b000
   11590:	ldr	pc, [ip, #2900]!	; 0xb54

00011594 <getaddrinfo@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #110592	; 0x1b000
   1159c:	ldr	pc, [ip, #2892]!	; 0xb4c

000115a0 <socket@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #110592	; 0x1b000
   115a8:	ldr	pc, [ip, #2884]!	; 0xb44

000115ac <gethostbyname@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #110592	; 0x1b000
   115b4:	ldr	pc, [ip, #2876]!	; 0xb3c

000115b8 <fputs@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #110592	; 0x1b000
   115c0:	ldr	pc, [ip, #2868]!	; 0xb34

000115c4 <strncmp@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #110592	; 0x1b000
   115cc:	ldr	pc, [ip, #2860]!	; 0xb2c

000115d0 <abort@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #110592	; 0x1b000
   115d8:	ldr	pc, [ip, #2852]!	; 0xb24

000115dc <close@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #110592	; 0x1b000
   115e4:	ldr	pc, [ip, #2844]!	; 0xb1c

000115e8 <connect@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #110592	; 0x1b000
   115f0:	ldr	pc, [ip, #2836]!	; 0xb14

000115f4 <__assert_fail@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #110592	; 0x1b000
   115fc:	ldr	pc, [ip, #2828]!	; 0xb0c

Disassembly of section .text:

00011600 <argp_parse@@Base-0x1964>:
   11600:	mov	fp, #0
   11604:	mov	lr, #0
   11608:	pop	{r1}		; (ldr r1, [sp], #4)
   1160c:	mov	r2, sp
   11610:	push	{r2}		; (str r2, [sp, #-4]!)
   11614:	push	{r0}		; (str r0, [sp, #-4]!)
   11618:	ldr	ip, [pc, #16]	; 11630 <__assert_fail@plt+0x3c>
   1161c:	push	{ip}		; (str ip, [sp, #-4]!)
   11620:	ldr	r0, [pc, #12]	; 11634 <__assert_fail@plt+0x40>
   11624:	ldr	r3, [pc, #12]	; 11638 <__assert_fail@plt+0x44>
   11628:	bl	11450 <__libc_start_main@plt>
   1162c:	bl	115d0 <abort@plt>
   11630:	andeq	sl, r1, ip, ror #10
   11634:	strdeq	r1, [r1], -r0
   11638:	andeq	sl, r1, ip, lsl #10
   1163c:	ldr	r3, [pc, #20]	; 11658 <__assert_fail@plt+0x64>
   11640:	ldr	r2, [pc, #20]	; 1165c <__assert_fail@plt+0x68>
   11644:	add	r3, pc, r3
   11648:	ldr	r2, [r3, r2]
   1164c:	cmp	r2, #0
   11650:	bxeq	lr
   11654:	b	11474 <__gmon_start__@plt>
   11658:			; <UNDEFINED> instruction: 0x0001b9b4
   1165c:	andeq	r0, r0, ip, lsl #2
   11660:	ldr	r0, [pc, #24]	; 11680 <__assert_fail@plt+0x8c>
   11664:	ldr	r3, [pc, #24]	; 11684 <__assert_fail@plt+0x90>
   11668:	cmp	r3, r0
   1166c:	bxeq	lr
   11670:	ldr	r3, [pc, #16]	; 11688 <__assert_fail@plt+0x94>
   11674:	cmp	r3, #0
   11678:	bxeq	lr
   1167c:	bx	r3
   11680:	andeq	r0, r3, ip, lsr #17
   11684:	andeq	r0, r3, ip, lsr #17
   11688:	andeq	r0, r0, r0
   1168c:	ldr	r0, [pc, #36]	; 116b8 <__assert_fail@plt+0xc4>
   11690:	ldr	r1, [pc, #36]	; 116bc <__assert_fail@plt+0xc8>
   11694:	sub	r1, r1, r0
   11698:	asr	r1, r1, #2
   1169c:	add	r1, r1, r1, lsr #31
   116a0:	asrs	r1, r1, #1
   116a4:	bxeq	lr
   116a8:	ldr	r3, [pc, #16]	; 116c0 <__assert_fail@plt+0xcc>
   116ac:	cmp	r3, #0
   116b0:	bxeq	lr
   116b4:	bx	r3
   116b8:	andeq	r0, r3, ip, lsr #17
   116bc:	andeq	r0, r3, ip, lsr #17
   116c0:	andeq	r0, r0, r0
   116c4:	push	{r4, lr}
   116c8:	ldr	r4, [pc, #24]	; 116e8 <__assert_fail@plt+0xf4>
   116cc:	ldrb	r3, [r4]
   116d0:	cmp	r3, #0
   116d4:	popne	{r4, pc}
   116d8:	bl	11660 <__assert_fail@plt+0x6c>
   116dc:	mov	r3, #1
   116e0:	strb	r3, [r4]
   116e4:	pop	{r4, pc}
   116e8:	andeq	r0, r3, r0, asr #17
   116ec:	b	1168c <__assert_fail@plt+0x98>
   116f0:	push	{fp, lr}
   116f4:	mov	fp, sp
   116f8:	sub	sp, sp, #16
   116fc:	mov	r9, r0
   11700:	ldr	r0, [r1]
   11704:	mov	r7, r1
   11708:	bl	14714 <_obstack_memory_used@@Base+0x60>
   1170c:	movw	r0, #16960	; 0x4240
   11710:	movw	r8, #2316	; 0x90c
   11714:	movw	r3, #21308	; 0x533c
   11718:	mov	r1, #0
   1171c:	mov	r2, #0
   11720:	mov	r4, #0
   11724:	movt	r0, #1
   11728:	movt	r8, #3
   1172c:	movt	r3, #1
   11730:	str	r0, [sp]
   11734:	mov	r0, r8
   11738:	bl	14330 <_obstack_begin@@Base>
   1173c:	movw	r0, #2364	; 0x93c
   11740:	movw	r1, #46931	; 0xb753
   11744:	movt	r0, #3
   11748:	movt	r1, #1
   1174c:	str	r1, [r0]
   11750:	movw	r0, #46654	; 0xb63e
   11754:	movw	r1, #1568	; 0x620
   11758:	movt	r0, #1
   1175c:	movt	r1, #3
   11760:	bl	14148 <argp_parse@@Base+0x11e4>
   11764:	sub	r0, fp, #4
   11768:	mov	r1, r9
   1176c:	mov	r2, r7
   11770:	mov	r3, #8
   11774:	stm	sp, {r0, r4}
   11778:	movw	r0, #1576	; 0x628
   1177c:	movt	r0, #3
   11780:	bl	12f64 <argp_parse@@Base>
   11784:	ldr	r0, [r8, #12]
   11788:	ldr	r1, [r8, #16]
   1178c:	cmp	r1, r0
   11790:	bne	117a4 <__assert_fail@plt+0x1b0>
   11794:	mov	r0, r8
   11798:	mov	r1, #1
   1179c:	bl	14484 <_obstack_newchunk@@Base>
   117a0:	ldr	r0, [r8, #12]
   117a4:	add	r1, r0, #1
   117a8:	str	r1, [r8, #12]
   117ac:	strb	r4, [r0]
   117b0:	ldr	r1, [r8, #8]
   117b4:	ldr	r0, [r8, #12]
   117b8:	cmp	r0, r1
   117bc:	str	r1, [sp, #8]
   117c0:	bne	117d0 <__assert_fail@plt+0x1dc>
   117c4:	ldrb	r1, [r8, #40]	; 0x28
   117c8:	orr	r1, r1, #2
   117cc:	strb	r1, [r8, #40]	; 0x28
   117d0:	ldr	r3, [r8, #24]
   117d4:	ldr	r1, [r8, #4]
   117d8:	ldr	r2, [r8, #16]
   117dc:	movw	r5, #2256	; 0x8d0
   117e0:	ldr	r6, [fp, #-4]
   117e4:	movt	r5, #3
   117e8:	add	r0, r3, r0
   117ec:	sub	r4, r9, r6
   117f0:	bic	r0, r0, r3
   117f4:	sub	r3, r0, r1
   117f8:	sub	r1, r2, r1
   117fc:	cmp	r3, r1
   11800:	movhi	r0, r2
   11804:	str	r0, [r8, #8]
   11808:	str	r0, [r8, #12]
   1180c:	ldr	r0, [r5]
   11810:	orrs	r1, r4, r0
   11814:	bne	11830 <__assert_fail@plt+0x23c>
   11818:	movw	r2, #46955	; 0xb76b
   1181c:	mov	r0, #1
   11820:	mov	r1, #0
   11824:	movt	r2, #1
   11828:	bl	11420 <error@plt>
   1182c:	ldr	r0, [r5]
   11830:	cmp	r0, #0
   11834:	bne	118d8 <__assert_fail@plt+0x2e4>
   11838:	cmp	r4, #0
   1183c:	beq	118d8 <__assert_fail@plt+0x2e4>
   11840:	sub	r0, r6, r9
   11844:	add	r4, r7, r6, lsl #2
   11848:	mov	r9, #32
   1184c:	add	r6, r0, #1
   11850:	b	11864 <__assert_fail@plt+0x270>
   11854:	add	r1, r0, #1
   11858:	add	r6, r6, #1
   1185c:	str	r1, [r8, #12]
   11860:	strb	r9, [r0]
   11864:	ldr	r5, [r4], #4
   11868:	mov	r0, r5
   1186c:	bl	114a4 <strlen@plt>
   11870:	mov	r7, r0
   11874:	ldr	r0, [r8, #12]
   11878:	ldr	r1, [r8, #16]
   1187c:	sub	r1, r1, r0
   11880:	cmp	r1, r7
   11884:	bcs	11898 <__assert_fail@plt+0x2a4>
   11888:	mov	r0, r8
   1188c:	mov	r1, r7
   11890:	bl	14484 <_obstack_newchunk@@Base>
   11894:	ldr	r0, [r8, #12]
   11898:	mov	r1, r5
   1189c:	mov	r2, r7
   118a0:	bl	113a8 <memcpy@plt>
   118a4:	ldr	r0, [r8, #12]
   118a8:	cmp	r6, #0
   118ac:	add	r0, r0, r7
   118b0:	str	r0, [r8, #12]
   118b4:	beq	118d8 <__assert_fail@plt+0x2e4>
   118b8:	ldr	r1, [r8, #16]
   118bc:	cmp	r1, r0
   118c0:	bne	11854 <__assert_fail@plt+0x260>
   118c4:	mov	r0, r8
   118c8:	mov	r1, #1
   118cc:	bl	14484 <_obstack_newchunk@@Base>
   118d0:	ldr	r0, [r8, #12]
   118d4:	b	11854 <__assert_fail@plt+0x260>
   118d8:	ldr	r0, [r8, #12]
   118dc:	ldr	r1, [r8, #16]
   118e0:	cmp	r1, r0
   118e4:	bne	118f8 <__assert_fail@plt+0x304>
   118e8:	mov	r0, r8
   118ec:	mov	r1, #1
   118f0:	bl	14484 <_obstack_newchunk@@Base>
   118f4:	ldr	r0, [r8, #12]
   118f8:	add	r1, r0, #1
   118fc:	str	r1, [r8, #12]
   11900:	mov	r1, #0
   11904:	strb	r1, [r0]
   11908:	ldr	r5, [r8, #8]
   1190c:	ldr	r0, [r8, #12]
   11910:	cmp	r0, r5
   11914:	bne	11924 <__assert_fail@plt+0x330>
   11918:	ldrb	r1, [r8, #40]	; 0x28
   1191c:	orr	r1, r1, #2
   11920:	strb	r1, [r8, #40]	; 0x28
   11924:	ldr	r3, [r8, #24]
   11928:	ldr	r1, [r8, #4]
   1192c:	ldr	r2, [r8, #16]
   11930:	add	r0, r3, r0
   11934:	bic	r0, r0, r3
   11938:	sub	r3, r0, r1
   1193c:	sub	r1, r2, r1
   11940:	cmp	r3, r1
   11944:	movhi	r0, r2
   11948:	str	r0, [r8, #8]
   1194c:	str	r0, [r8, #12]
   11950:	movw	r0, #2248	; 0x8c8
   11954:	movt	r0, #3
   11958:	ldr	r0, [r0]
   1195c:	cmp	r0, #0
   11960:	bne	11b5c <__assert_fail@plt+0x568>
   11964:	movw	r0, #53620	; 0xd174
   11968:	movt	r0, #2
   1196c:	ldr	r6, [r0]
   11970:	cmp	r6, #0
   11974:	beq	11a94 <__assert_fail@plt+0x4a0>
   11978:	sub	r8, r5, #1
   1197c:	mov	r9, #0
   11980:	b	1199c <__assert_fail@plt+0x3a8>
   11984:	movw	r0, #53620	; 0xd174
   11988:	add	r9, r9, #1
   1198c:	movt	r0, #2
   11990:	ldr	r6, [r0, r9, lsl #2]
   11994:	cmp	r6, #0
   11998:	beq	11a94 <__assert_fail@plt+0x4a0>
   1199c:	mov	r0, r8
   119a0:	mov	sl, r0
   119a4:	ldrb	r1, [r0, #1]!
   119a8:	cmp	r1, #0
   119ac:	bne	119a0 <__assert_fail@plt+0x3ac>
   119b0:	sub	r0, r6, #1
   119b4:	mov	r1, #1
   119b8:	ldrb	r2, [r0, #1]!
   119bc:	mov	r7, r1
   119c0:	add	r1, r1, #1
   119c4:	cmp	r2, #0
   119c8:	bne	119b8 <__assert_fail@plt+0x3c4>
   119cc:	sub	r4, r6, #2
   119d0:	add	r0, r4, r7
   119d4:	cmp	r0, r6
   119d8:	cmpcs	sl, r5
   119dc:	bcc	11984 <__assert_fail@plt+0x390>
   119e0:	bl	11468 <__ctype_tolower_loc@plt>
   119e4:	ldrb	r2, [sl]
   119e8:	ldr	r0, [r0]
   119ec:	ldrb	r1, [r4, r7]
   119f0:	ldr	r0, [r0, r2, lsl #2]
   119f4:	cmp	r0, r1
   119f8:	bne	11984 <__assert_fail@plt+0x390>
   119fc:	sub	r7, r7, #1
   11a00:	sub	sl, sl, #1
   11a04:	cmp	r7, #1
   11a08:	bne	119d0 <__assert_fail@plt+0x3dc>
   11a0c:	movw	r0, #2244	; 0x8c4
   11a10:	movt	r0, #3
   11a14:	ldr	r0, [r0]
   11a18:	cmp	r0, #0
   11a1c:	beq	11a2c <__assert_fail@plt+0x438>
   11a20:	movw	r0, #46976	; 0xb780
   11a24:	movt	r0, #1
   11a28:	bl	11438 <puts@plt>
   11a2c:	movw	r0, #47010	; 0xb7a2
   11a30:	mov	r1, #0
   11a34:	movt	r0, #1
   11a38:	bl	11cfc <__assert_fail@plt+0x708>
   11a3c:	movw	r1, #2360	; 0x938
   11a40:	movt	r1, #3
   11a44:	mov	r4, r1
   11a48:	str	r0, [r1]
   11a4c:	mov	r1, r5
   11a50:	bl	11e18 <__assert_fail@plt+0x824>
   11a54:	movw	r6, #2248	; 0x8c8
   11a58:	movt	r6, #3
   11a5c:	str	r0, [r6]
   11a60:	ldr	r0, [r4]
   11a64:	bl	115dc <close@plt>
   11a68:	ldr	r1, [r6]
   11a6c:	cmp	r1, #0
   11a70:	bne	11a7c <__assert_fail@plt+0x488>
   11a74:	mov	r0, #0
   11a78:	bl	1148c <exit@plt>
   11a7c:	movw	r0, #47029	; 0xb7b5
   11a80:	movt	r0, #1
   11a84:	bl	11348 <printf@plt>
   11a88:	ldr	r0, [r6]
   11a8c:	cmp	r0, #0
   11a90:	bne	11b5c <__assert_fail@plt+0x568>
   11a94:	mov	r0, r5
   11a98:	bl	11fcc <__assert_fail@plt+0x9d8>
   11a9c:	movw	r4, #2248	; 0x8c8
   11aa0:	mov	r1, r0
   11aa4:	movt	r4, #3
   11aa8:	str	r0, [r4]
   11aac:	ldrb	r0, [r0]
   11ab0:	cmp	r0, #3
   11ab4:	bhi	11b3c <__assert_fail@plt+0x548>
   11ab8:	add	r2, pc, #0
   11abc:	ldr	pc, [r2, r0, lsl #2]
   11ac0:	ldrdeq	r1, [r1], -r0
   11ac4:	andeq	r1, r1, r0, lsl fp
   11ac8:	andeq	r1, r1, r0, lsr #22
   11acc:	andeq	r1, r1, r8, lsr #22
   11ad0:	movw	r0, #47063	; 0xb7d7
   11ad4:	movt	r0, #1
   11ad8:	bl	1142c <getenv@plt>
   11adc:	movw	r1, #47010	; 0xb7a2
   11ae0:	cmp	r0, #0
   11ae4:	movt	r1, #1
   11ae8:	movne	r1, r0
   11aec:	movw	r0, #2244	; 0x8c4
   11af0:	movt	r0, #3
   11af4:	str	r1, [r4]
   11af8:	ldr	r0, [r0]
   11afc:	cmp	r0, #0
   11b00:	beq	11b5c <__assert_fail@plt+0x568>
   11b04:	movw	r0, #47076	; 0xb7e4
   11b08:	movt	r0, #1
   11b0c:	b	11b58 <__assert_fail@plt+0x564>
   11b10:	movw	r0, #47102	; 0xb7fe
   11b14:	movt	r0, #1
   11b18:	bl	11438 <puts@plt>
   11b1c:	ldr	r1, [r4]
   11b20:	add	r0, r1, #1
   11b24:	b	11b30 <__assert_fail@plt+0x53c>
   11b28:	movw	r0, #47173	; 0xb845
   11b2c:	movt	r0, #1
   11b30:	bl	11438 <puts@plt>
   11b34:	mov	r0, #0
   11b38:	bl	1148c <exit@plt>
   11b3c:	movw	r0, #2244	; 0x8c4
   11b40:	movt	r0, #3
   11b44:	ldr	r0, [r0]
   11b48:	cmp	r0, #0
   11b4c:	beq	11b5c <__assert_fail@plt+0x568>
   11b50:	movw	r0, #47203	; 0xb863
   11b54:	movt	r0, #1
   11b58:	bl	11348 <printf@plt>
   11b5c:	movw	r0, #47221	; 0xb875
   11b60:	movt	r0, #1
   11b64:	bl	1142c <getenv@plt>
   11b68:	cmp	r0, #0
   11b6c:	movw	r6, #2248	; 0x8c8
   11b70:	mov	r2, r5
   11b74:	movwne	r0, #1504	; 0x5e0
   11b78:	movt	r6, #3
   11b7c:	movne	r1, #0
   11b80:	movtne	r0, #3
   11b84:	strne	r1, [r0]
   11b88:	ldr	r0, [r6]
   11b8c:	ldr	r1, [sp, #8]
   11b90:	bl	1247c <__assert_fail@plt+0xe88>
   11b94:	mov	r4, r0
   11b98:	movw	r0, #2244	; 0x8c4
   11b9c:	movt	r0, #3
   11ba0:	ldr	r0, [r0]
   11ba4:	cmp	r0, #0
   11ba8:	beq	11bbc <__assert_fail@plt+0x5c8>
   11bac:	movw	r0, #47232	; 0xb880
   11bb0:	mov	r1, r4
   11bb4:	movt	r0, #1
   11bb8:	bl	11348 <printf@plt>
   11bbc:	mov	r0, r4
   11bc0:	bl	114a4 <strlen@plt>
   11bc4:	movw	r5, #10176	; 0x27c0
   11bc8:	movw	r1, #2573	; 0xa0d
   11bcc:	mov	r2, r4
   11bd0:	movt	r5, #1
   11bd4:	strh	r1, [r2, r0]!
   11bd8:	mov	r0, #0
   11bdc:	strb	r0, [r2, #2]
   11be0:	mov	r0, #15
   11be4:	mov	r1, r5
   11be8:	bl	113b4 <signal@plt>
   11bec:	mov	r0, #2
   11bf0:	mov	r1, r5
   11bf4:	bl	113b4 <signal@plt>
   11bf8:	movw	r1, #2252	; 0x8cc
   11bfc:	ldr	r0, [r6]
   11c00:	movt	r1, #3
   11c04:	ldr	r1, [r1]
   11c08:	bl	11cfc <__assert_fail@plt+0x708>
   11c0c:	movw	r1, #2360	; 0x938
   11c10:	movt	r1, #3
   11c14:	mov	r5, r1
   11c18:	str	r0, [r1]
   11c1c:	mov	r1, r4
   11c20:	bl	127ec <__assert_fail@plt+0x11f8>
   11c24:	ldr	r0, [r5]
   11c28:	bl	11fc8 <__assert_fail@plt+0x9d4>
   11c2c:	mov	r0, #0
   11c30:	bl	1148c <exit@plt>
   11c34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c38:	add	fp, sp, #28
   11c3c:	sub	sp, sp, #4
   11c40:	ldr	r6, [r1]
   11c44:	cmp	r6, #0
   11c48:	beq	11cf0 <__assert_fail@plt+0x6fc>
   11c4c:	mov	r5, r0
   11c50:	sub	r0, r0, #1
   11c54:	mov	r9, r1
   11c58:	mov	sl, #0
   11c5c:	str	r0, [sp]
   11c60:	b	11c74 <__assert_fail@plt+0x680>
   11c64:	add	sl, sl, #1
   11c68:	ldr	r6, [r9, sl, lsl #2]
   11c6c:	cmp	r6, #0
   11c70:	beq	11cf0 <__assert_fail@plt+0x6fc>
   11c74:	ldr	r0, [sp]
   11c78:	mov	r4, r0
   11c7c:	ldrb	r1, [r0, #1]!
   11c80:	cmp	r1, #0
   11c84:	bne	11c78 <__assert_fail@plt+0x684>
   11c88:	sub	r0, r6, #1
   11c8c:	mov	r1, #1
   11c90:	ldrb	r2, [r0, #1]!
   11c94:	mov	r7, r1
   11c98:	add	r1, r1, #1
   11c9c:	cmp	r2, #0
   11ca0:	bne	11c90 <__assert_fail@plt+0x69c>
   11ca4:	sub	r8, r6, #2
   11ca8:	add	r0, r8, r7
   11cac:	cmp	r0, r6
   11cb0:	cmpcs	r4, r5
   11cb4:	bcc	11c64 <__assert_fail@plt+0x670>
   11cb8:	bl	11468 <__ctype_tolower_loc@plt>
   11cbc:	ldrb	r2, [r4]
   11cc0:	ldr	r0, [r0]
   11cc4:	ldrb	r1, [r8, r7]
   11cc8:	ldr	r0, [r0, r2, lsl #2]
   11ccc:	cmp	r0, r1
   11cd0:	bne	11c64 <__assert_fail@plt+0x670>
   11cd4:	sub	r7, r7, #1
   11cd8:	sub	r4, r4, #1
   11cdc:	cmp	r7, #1
   11ce0:	bne	11ca8 <__assert_fail@plt+0x6b4>
   11ce4:	mov	r0, #1
   11ce8:	sub	sp, fp, #28
   11cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cf0:	mov	r0, #0
   11cf4:	sub	sp, fp, #28
   11cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cfc:	push	{r4, r5, fp, lr}
   11d00:	add	fp, sp, #8
   11d04:	sub	sp, sp, #40	; 0x28
   11d08:	vmov.i32	q8, #0	; 0x00000000
   11d0c:	add	r2, sp, #8
   11d10:	mov	r4, r0
   11d14:	mov	r5, r1
   11d18:	movw	r1, #46654	; 0xb63e
   11d1c:	add	r3, sp, #4
   11d20:	mov	r0, r2
   11d24:	cmp	r5, #0
   11d28:	movt	r1, #1
   11d2c:	movne	r1, r5
   11d30:	vst1.64	{d16-d17}, [r0]!
   11d34:	vst1.64	{d16-d17}, [r0]
   11d38:	mov	r0, #1
   11d3c:	str	r0, [sp, #16]
   11d40:	mov	r0, r4
   11d44:	bl	11594 <getaddrinfo@plt>
   11d48:	cmp	r0, #0
   11d4c:	beq	11d78 <__assert_fail@plt+0x784>
   11d50:	movw	r1, #47954	; 0xbb52
   11d54:	cmp	r5, #0
   11d58:	add	r2, sp, #8
   11d5c:	add	r3, sp, #4
   11d60:	mov	r0, r4
   11d64:	movt	r1, #1
   11d68:	movne	r1, r5
   11d6c:	bl	11594 <getaddrinfo@plt>
   11d70:	cmp	r0, #0
   11d74:	bne	11e04 <__assert_fail@plt+0x810>
   11d78:	ldr	r4, [sp, #4]
   11d7c:	cmp	r4, #0
   11d80:	beq	11df8 <__assert_fail@plt+0x804>
   11d84:	mov	r2, r4
   11d88:	b	11da8 <__assert_fail@plt+0x7b4>
   11d8c:	mov	r0, r5
   11d90:	bl	115dc <close@plt>
   11d94:	ldr	r0, [sp, #4]
   11d98:	ldr	r2, [r0, #28]
   11d9c:	cmp	r2, #0
   11da0:	str	r2, [sp, #4]
   11da4:	beq	11ddc <__assert_fail@plt+0x7e8>
   11da8:	ldmib	r2, {r0, r1, r2}
   11dac:	bl	115a0 <socket@plt>
   11db0:	mov	r5, r0
   11db4:	cmp	r0, #0
   11db8:	bmi	11d94 <__assert_fail@plt+0x7a0>
   11dbc:	ldr	r0, [sp, #4]
   11dc0:	ldr	r2, [r0, #16]
   11dc4:	ldr	r1, [r0, #20]
   11dc8:	mov	r0, r5
   11dcc:	bl	115e8 <connect@plt>
   11dd0:	cmp	r0, #0
   11dd4:	bne	11d8c <__assert_fail@plt+0x798>
   11dd8:	ldr	r2, [sp, #4]
   11ddc:	cmp	r2, #0
   11de0:	beq	11df8 <__assert_fail@plt+0x804>
   11de4:	mov	r0, r4
   11de8:	bl	11588 <freeaddrinfo@plt>
   11dec:	mov	r0, r5
   11df0:	sub	sp, fp, #8
   11df4:	pop	{r4, r5, fp, pc}
   11df8:	movw	r0, #47978	; 0xbb6a
   11dfc:	movt	r0, #1
   11e00:	bl	12ca0 <__assert_fail@plt+0x16ac>
   11e04:	bl	11378 <gai_strerror@plt>
   11e08:	mov	r1, r0
   11e0c:	movw	r0, #47962	; 0xbb5a
   11e10:	movt	r0, #1
   11e14:	bl	12d04 <__assert_fail@plt+0x1710>
   11e18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e1c:	add	fp, sp, #28
   11e20:	sub	sp, sp, #108	; 0x6c
   11e24:	mov	r4, r0
   11e28:	mov	r0, r1
   11e2c:	mov	r5, r1
   11e30:	bl	114a4 <strlen@plt>
   11e34:	add	r0, r0, #4
   11e38:	bl	14d7c <_obstack_memory_used@@Base+0x6c8>
   11e3c:	mov	r1, #61	; 0x3d
   11e40:	mov	r6, r0
   11e44:	strb	r1, [r0], #1
   11e48:	mov	r1, r5
   11e4c:	bl	11414 <strcpy@plt>
   11e50:	mov	r0, r6
   11e54:	bl	114a4 <strlen@plt>
   11e58:	movw	r1, #2573	; 0xa0d
   11e5c:	mov	r2, r6
   11e60:	mov	r7, #0
   11e64:	strh	r1, [r2, r0]!
   11e68:	movw	r1, #43751	; 0xaae7
   11e6c:	mov	r0, r4
   11e70:	movt	r1, #1
   11e74:	strb	r7, [r2, #2]
   11e78:	bl	11300 <fdopen@plt>
   11e7c:	mov	r5, r0
   11e80:	mov	r0, r6
   11e84:	bl	114a4 <strlen@plt>
   11e88:	mov	r2, r0
   11e8c:	mov	r0, r4
   11e90:	mov	r1, r6
   11e94:	str	r6, [sp, #4]
   11e98:	bl	114f8 <write@plt>
   11e9c:	cmp	r0, #0
   11ea0:	bmi	11fb0 <__assert_fail@plt+0x9bc>
   11ea4:	add	r6, sp, #8
   11ea8:	mov	r1, #100	; 0x64
   11eac:	mov	r2, r5
   11eb0:	mov	r0, r6
   11eb4:	bl	11384 <fgets@plt>
   11eb8:	cmp	r0, #0
   11ebc:	beq	11f8c <__assert_fail@plt+0x998>
   11ec0:	movw	r9, #47937	; 0xbb41
   11ec4:	movw	r8, #2236	; 0x8bc
   11ec8:	add	r4, r6, #1
   11ecc:	mov	r7, #0
   11ed0:	movt	r9, #1
   11ed4:	movt	r8, #3
   11ed8:	b	11f00 <__assert_fail@plt+0x90c>
   11edc:	ldr	r1, [r8]
   11ee0:	mov	r0, r6
   11ee4:	bl	115b8 <fputs@plt>
   11ee8:	mov	r0, r6
   11eec:	mov	r1, #100	; 0x64
   11ef0:	mov	r2, r5
   11ef4:	bl	11384 <fgets@plt>
   11ef8:	cmp	r0, #0
   11efc:	beq	11f8c <__assert_fail@plt+0x998>
   11f00:	mov	r0, r6
   11f04:	mov	r1, r9
   11f08:	mov	r2, #16
   11f0c:	bl	11498 <bcmp@plt>
   11f10:	cmp	r7, #0
   11f14:	cmpeq	r0, #0
   11f18:	bne	11edc <__assert_fail@plt+0x8e8>
   11f1c:	mov	r1, r4
   11f20:	mov	r2, r6
   11f24:	mov	r0, r2
   11f28:	ldrb	r3, [r2], #1
   11f2c:	mov	sl, r1
   11f30:	add	r1, r1, #1
   11f34:	cmp	r3, #58	; 0x3a
   11f38:	bne	11f24 <__assert_fail@plt+0x930>
   11f3c:	ldrb	r1, [r0, #1]!
   11f40:	add	sl, sl, #1
   11f44:	cmp	r1, #32
   11f48:	beq	11f3c <__assert_fail@plt+0x948>
   11f4c:	bl	114a4 <strlen@plt>
   11f50:	add	r0, r0, #1
   11f54:	bl	14d7c <_obstack_memory_used@@Base+0x6c8>
   11f58:	mov	r7, r0
   11f5c:	mov	r0, #0
   11f60:	b	11f6c <__assert_fail@plt+0x978>
   11f64:	strb	r1, [r7, r0]
   11f68:	add	r0, r0, #1
   11f6c:	add	r1, sl, r0
   11f70:	ldrb	r1, [r1, #-1]
   11f74:	cmp	r1, #10
   11f78:	cmpne	r1, #13
   11f7c:	bne	11f64 <__assert_fail@plt+0x970>
   11f80:	mov	r1, #0
   11f84:	strb	r1, [r7, r0]
   11f88:	b	11edc <__assert_fail@plt+0x8e8>
   11f8c:	mov	r0, r5
   11f90:	bl	11390 <ferror@plt>
   11f94:	cmp	r0, #0
   11f98:	bne	11fbc <__assert_fail@plt+0x9c8>
   11f9c:	ldr	r0, [sp, #4]
   11fa0:	bl	14240 <argp_parse@@Base+0x12dc>
   11fa4:	mov	r0, r7
   11fa8:	sub	sp, fp, #28
   11fac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fb0:	movw	r0, #47752	; 0xba88
   11fb4:	movt	r0, #1
   11fb8:	bl	12ca0 <__assert_fail@plt+0x16ac>
   11fbc:	movw	r0, #47847	; 0xbae7
   11fc0:	movt	r0, #1
   11fc4:	bl	12ca0 <__assert_fail@plt+0x16ac>
   11fc8:	b	115dc <close@plt>
   11fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11fd0:	add	fp, sp, #28
   11fd4:	sub	sp, sp, #28
   11fd8:	ldrb	r6, [r0]
   11fdc:	movw	r4, #42364	; 0xa57c
   11fe0:	movt	r4, #1
   11fe4:	cmp	r6, #0
   11fe8:	beq	1203c <__assert_fail@plt+0xa48>
   11fec:	ldrb	r1, [r0, #1]
   11ff0:	cmp	r1, #32
   11ff4:	bne	1201c <__assert_fail@plt+0xa28>
   11ff8:	mov	r5, r0
   11ffc:	ldrb	r6, [r5, #2]!
   12000:	cmp	r6, #0
   12004:	beq	1203c <__assert_fail@plt+0xa48>
   12008:	ldrb	r0, [r0, #3]
   1200c:	cmp	r0, #32
   12010:	mov	r0, r5
   12014:	beq	11ffc <__assert_fail@plt+0xa08>
   12018:	b	12020 <__assert_fail@plt+0xa2c>
   1201c:	mov	r5, r0
   12020:	mov	r0, r5
   12024:	mov	r1, #64	; 0x40
   12028:	bl	114b0 <strchr@plt>
   1202c:	movw	r4, #43532	; 0xaa0c
   12030:	cmp	r0, #0
   12034:	movt	r4, #1
   12038:	beq	12048 <__assert_fail@plt+0xa54>
   1203c:	mov	r0, r4
   12040:	sub	sp, fp, #28
   12044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12048:	movw	r1, #47256	; 0xb898
   1204c:	mov	r0, r5
   12050:	movt	r1, #1
   12054:	bl	1157c <strpbrk@plt>
   12058:	cmp	r0, #0
   1205c:	beq	120f8 <__assert_fail@plt+0xb04>
   12060:	mov	r0, r5
   12064:	mov	r1, #58	; 0x3a
   12068:	bl	114b0 <strchr@plt>
   1206c:	cmp	r0, #0
   12070:	beq	121fc <__assert_fail@plt+0xc08>
   12074:	movw	r1, #47276	; 0xb8ac
   12078:	mov	r0, #0
   1207c:	add	r2, sp, #24
   12080:	add	r3, sp, #20
   12084:	movt	r1, #1
   12088:	str	r0, [sp, #24]
   1208c:	str	r0, [sp, #20]
   12090:	mov	r0, r5
   12094:	bl	11540 <sscanf@plt>
   12098:	cmp	r0, #0
   1209c:	beq	122a4 <__assert_fail@plt+0xcb0>
   120a0:	movw	r1, #64528	; 0xfc10
   120a4:	movt	r1, #2
   120a8:	ldr	r4, [r1, #8]
   120ac:	cmp	r4, #0
   120b0:	beq	122b0 <__assert_fail@plt+0xcbc>
   120b4:	ldr	r0, [sp, #24]
   120b8:	ldrh	r2, [sp, #20]
   120bc:	orr	r0, r2, r0, lsl #16
   120c0:	ldm	r1, {r2, r3}
   120c4:	and	r3, r3, r0
   120c8:	cmp	r3, r2
   120cc:	beq	1203c <__assert_fail@plt+0xa48>
   120d0:	add	r1, r1, #12
   120d4:	ldr	r4, [r1, #8]
   120d8:	cmp	r4, #0
   120dc:	beq	122b0 <__assert_fail@plt+0xcbc>
   120e0:	ldm	r1, {r2, r3}
   120e4:	and	r3, r3, r0
   120e8:	add	r1, r1, #12
   120ec:	cmp	r3, r2
   120f0:	bne	120d4 <__assert_fail@plt+0xae0>
   120f4:	b	1203c <__assert_fail@plt+0xa48>
   120f8:	cmp	r6, #0
   120fc:	mov	r4, r5
   12100:	beq	12114 <__assert_fail@plt+0xb20>
   12104:	mov	r4, r5
   12108:	ldrb	r0, [r4, #1]!
   1210c:	cmp	r0, #0
   12110:	bne	12108 <__assert_fail@plt+0xb14>
   12114:	movw	r1, #43804	; 0xab1c
   12118:	mov	r0, r5
   1211c:	mov	r2, #2
   12120:	movt	r1, #1
   12124:	bl	114d4 <strncasecmp@plt>
   12128:	cmp	r0, #0
   1212c:	bne	121c4 <__assert_fail@plt+0xbd0>
   12130:	ldrb	r0, [r5, #2]!
   12134:	cmp	r0, #32
   12138:	subne	r0, r0, #48	; 0x30
   1213c:	uxtbne	r0, r0
   12140:	cmpne	r0, #9
   12144:	bhi	121c4 <__assert_fail@plt+0xbd0>
   12148:	mov	r0, r5
   1214c:	mov	r1, #0
   12150:	mov	r2, #10
   12154:	bl	1133c <strtol@plt>
   12158:	mov	r5, r0
   1215c:	movw	r0, #5072	; 0x13d0
   12160:	movt	r0, #6
   12164:	cmp	r5, r0
   12168:	blt	12178 <__assert_fail@plt+0xb84>
   1216c:	movw	r0, #47586	; 0xb9e2
   12170:	movt	r0, #1
   12174:	bl	11438 <puts@plt>
   12178:	movw	r1, #64816	; 0xfd30
   1217c:	movw	r0, #43192	; 0xa8b8
   12180:	movt	r1, #2
   12184:	movt	r0, #1
   12188:	ldr	r4, [r1, #4]
   1218c:	cmp	r4, #0
   12190:	beq	123f4 <__assert_fail@plt+0xe00>
   12194:	add	r1, r1, #12
   12198:	b	121a8 <__assert_fail@plt+0xbb4>
   1219c:	ldr	r4, [r1], #8
   121a0:	cmp	r4, #0
   121a4:	beq	123f4 <__assert_fail@plt+0xe00>
   121a8:	ldrh	r2, [r1, #-12]
   121ac:	cmp	r5, r2
   121b0:	blt	1219c <__assert_fail@plt+0xba8>
   121b4:	ldrh	r2, [r1, #-10]
   121b8:	cmp	r5, r2
   121bc:	bgt	1219c <__assert_fail@plt+0xba8>
   121c0:	b	1203c <__assert_fail@plt+0xa48>
   121c4:	movw	r1, #47273	; 0xb8a9
   121c8:	sub	r0, r4, #2
   121cc:	mov	r2, #2
   121d0:	movt	r1, #1
   121d4:	bl	114d4 <strncasecmp@plt>
   121d8:	movw	r2, #47260	; 0xb89c
   121dc:	movw	r1, #43532	; 0xaa0c
   121e0:	cmp	r0, #0
   121e4:	movt	r2, #1
   121e8:	movt	r1, #1
   121ec:	moveq	r1, r2
   121f0:	mov	r0, r1
   121f4:	sub	sp, fp, #28
   121f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121fc:	add	r1, sp, #16
   12200:	add	r0, sp, #12
   12204:	add	r2, sp, #24
   12208:	add	r3, sp, #20
   1220c:	str	r1, [sp]
   12210:	movw	r1, #48014	; 0xbb8e
   12214:	str	r0, [sp, #4]
   12218:	mov	r0, r5
   1221c:	movt	r1, #1
   12220:	bl	11540 <sscanf@plt>
   12224:	mov	r1, #0
   12228:	cmp	r0, #4
   1222c:	bne	12250 <__assert_fail@plt+0xc5c>
   12230:	ldr	r0, [sp, #20]
   12234:	ldr	r1, [sp, #24]
   12238:	lsl	r0, r0, #16
   1223c:	add	r0, r0, r1, lsl #24
   12240:	ldr	r1, [sp, #16]
   12244:	add	r0, r0, r1, lsl #8
   12248:	ldr	r1, [sp, #12]
   1224c:	add	r1, r0, r1
   12250:	cmp	r1, #0
   12254:	beq	122d8 <__assert_fail@plt+0xce4>
   12258:	movw	r0, #53812	; 0xd234
   1225c:	movt	r0, #2
   12260:	ldr	r4, [r0, #8]
   12264:	cmp	r4, #0
   12268:	beq	12398 <__assert_fail@plt+0xda4>
   1226c:	ldm	r0, {r2, r3}
   12270:	and	r3, r3, r1
   12274:	cmp	r3, r2
   12278:	beq	1203c <__assert_fail@plt+0xa48>
   1227c:	add	r0, r0, #12
   12280:	ldr	r4, [r0, #8]
   12284:	cmp	r4, #0
   12288:	beq	12398 <__assert_fail@plt+0xda4>
   1228c:	ldm	r0, {r2, r3}
   12290:	and	r3, r3, r1
   12294:	add	r0, r0, #12
   12298:	cmp	r3, r2
   1229c:	bne	12280 <__assert_fail@plt+0xc8c>
   122a0:	b	1203c <__assert_fail@plt+0xa48>
   122a4:	movw	r4, #43532	; 0xaa0c
   122a8:	movt	r4, #1
   122ac:	b	1203c <__assert_fail@plt+0xa48>
   122b0:	movw	r0, #2244	; 0x8c4
   122b4:	movw	r4, #43192	; 0xa8b8
   122b8:	movt	r0, #3
   122bc:	movt	r4, #1
   122c0:	ldr	r0, [r0]
   122c4:	cmp	r0, #0
   122c8:	beq	1203c <__assert_fail@plt+0xa48>
   122cc:	movw	r0, #47283	; 0xb8b3
   122d0:	movt	r0, #1
   122d4:	b	1246c <__assert_fail@plt+0xe78>
   122d8:	movw	r0, #65040	; 0xfe10
   122dc:	movt	r0, #2
   122e0:	ldr	r7, [r0]
   122e4:	cmp	r7, #0
   122e8:	beq	123c0 <__assert_fail@plt+0xdcc>
   122ec:	sub	r0, r5, #1
   122f0:	mov	sl, #0
   122f4:	str	r0, [sp, #8]
   122f8:	b	12314 <__assert_fail@plt+0xd20>
   122fc:	movw	r0, #65040	; 0xfe10
   12300:	add	sl, sl, #2
   12304:	movt	r0, #2
   12308:	ldr	r7, [r0, sl, lsl #2]
   1230c:	cmp	r7, #0
   12310:	beq	123c0 <__assert_fail@plt+0xdcc>
   12314:	ldr	r0, [sp, #8]
   12318:	mov	r6, r0
   1231c:	ldrb	r1, [r0, #1]!
   12320:	cmp	r1, #0
   12324:	bne	12318 <__assert_fail@plt+0xd24>
   12328:	sub	r0, r7, #1
   1232c:	mov	r1, #1
   12330:	ldrb	r2, [r0, #1]!
   12334:	mov	r8, r1
   12338:	add	r1, r1, #1
   1233c:	cmp	r2, #0
   12340:	bne	12330 <__assert_fail@plt+0xd3c>
   12344:	sub	r9, r7, #2
   12348:	add	r0, r9, r8
   1234c:	cmp	r0, r7
   12350:	cmpcs	r6, r5
   12354:	bcc	122fc <__assert_fail@plt+0xd08>
   12358:	bl	11468 <__ctype_tolower_loc@plt>
   1235c:	ldrb	r2, [r6]
   12360:	ldr	r0, [r0]
   12364:	ldrb	r1, [r9, r8]
   12368:	ldr	r0, [r0, r2, lsl #2]
   1236c:	cmp	r0, r1
   12370:	bne	122fc <__assert_fail@plt+0xd08>
   12374:	sub	r8, r8, #1
   12378:	sub	r6, r6, #1
   1237c:	cmp	r8, #1
   12380:	bne	12348 <__assert_fail@plt+0xd54>
   12384:	movw	r1, #65040	; 0xfe10
   12388:	orr	r0, sl, #1
   1238c:	movt	r1, #2
   12390:	ldr	r4, [r1, r0, lsl #2]
   12394:	b	1203c <__assert_fail@plt+0xa48>
   12398:	movw	r0, #2244	; 0x8c4
   1239c:	movw	r4, #43192	; 0xa8b8
   123a0:	movt	r0, #3
   123a4:	movt	r4, #1
   123a8:	ldr	r0, [r0]
   123ac:	cmp	r0, #0
   123b0:	beq	1203c <__assert_fail@plt+0xa48>
   123b4:	movw	r0, #47373	; 0xb90d
   123b8:	movt	r0, #1
   123bc:	b	1246c <__assert_fail@plt+0xe78>
   123c0:	mov	r0, r5
   123c4:	mov	r1, #46	; 0x2e
   123c8:	bl	114b0 <strchr@plt>
   123cc:	cmp	r0, #0
   123d0:	beq	123fc <__assert_fail@plt+0xe08>
   123d4:	movw	r0, #2244	; 0x8c4
   123d8:	movt	r0, #3
   123dc:	ldr	r0, [r0]
   123e0:	cmp	r0, #0
   123e4:	beq	1203c <__assert_fail@plt+0xa48>
   123e8:	movw	r0, #47526	; 0xb9a6
   123ec:	movt	r0, #1
   123f0:	b	1246c <__assert_fail@plt+0xe78>
   123f4:	mov	r4, r0
   123f8:	b	1203c <__assert_fail@plt+0xa48>
   123fc:	movw	r0, #53740	; 0xd1ec
   12400:	movt	r0, #2
   12404:	ldr	r4, [r0]
   12408:	cmp	r4, #0
   1240c:	beq	12448 <__assert_fail@plt+0xe54>
   12410:	add	r6, r0, #4
   12414:	mov	r0, r4
   12418:	bl	114a4 <strlen@plt>
   1241c:	mov	r2, r0
   12420:	mov	r0, r5
   12424:	mov	r1, r4
   12428:	bl	114d4 <strncasecmp@plt>
   1242c:	cmp	r0, #0
   12430:	beq	12474 <__assert_fail@plt+0xe80>
   12434:	ldr	r4, [r6, #4]
   12438:	add	r0, r6, #8
   1243c:	mov	r6, r0
   12440:	cmp	r4, #0
   12444:	bne	12414 <__assert_fail@plt+0xe20>
   12448:	movw	r0, #2244	; 0x8c4
   1244c:	movw	r4, #43192	; 0xa8b8
   12450:	movt	r0, #3
   12454:	movt	r4, #1
   12458:	ldr	r0, [r0]
   1245c:	cmp	r0, #0
   12460:	beq	1203c <__assert_fail@plt+0xa48>
   12464:	movw	r0, #47459	; 0xb963
   12468:	movt	r0, #1
   1246c:	bl	11438 <puts@plt>
   12470:	b	1203c <__assert_fail@plt+0xa48>
   12474:	ldr	r4, [r6]
   12478:	b	1203c <__assert_fail@plt+0xa48>
   1247c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12480:	add	fp, sp, #28
   12484:	sub	sp, sp, #12
   12488:	mov	r6, r0
   1248c:	mov	r0, r1
   12490:	mov	r8, r2
   12494:	mov	r9, r1
   12498:	bl	114a4 <strlen@plt>
   1249c:	mov	r4, r0
   124a0:	mov	r0, r8
   124a4:	bl	114a4 <strlen@plt>
   124a8:	add	r0, r4, r0
   124ac:	add	r0, r0, #13
   124b0:	bl	14d7c <_obstack_memory_used@@Base+0x6c8>
   124b4:	mov	sl, r0
   124b8:	mov	r0, #0
   124bc:	add	r1, sp, #4
   124c0:	strb	r0, [sl]
   124c4:	mov	r0, r6
   124c8:	bl	11324 <inet_aton@plt>
   124cc:	movw	r4, #53528	; 0xd118
   124d0:	movt	r4, #2
   124d4:	ldr	r7, [r4]
   124d8:	cmp	r7, #0
   124dc:	beq	12554 <__assert_fail@plt+0xf60>
   124e0:	mov	r5, r0
   124e4:	b	124f4 <__assert_fail@plt+0xf00>
   124e8:	ldr	r7, [r4, #4]!
   124ec:	cmp	r7, #0
   124f0:	beq	12554 <__assert_fail@plt+0xf60>
   124f4:	mov	r0, r7
   124f8:	mov	r1, r6
   124fc:	bl	11330 <strcmp@plt>
   12500:	cmp	r0, #0
   12504:	beq	125e8 <__assert_fail@plt+0xff4>
   12508:	cmp	r5, #0
   1250c:	beq	124e8 <__assert_fail@plt+0xef4>
   12510:	mov	r0, r7
   12514:	bl	115ac <gethostbyname@plt>
   12518:	cmp	r0, #0
   1251c:	beq	124e8 <__assert_fail@plt+0xef4>
   12520:	ldr	r0, [r0, #16]
   12524:	ldr	r2, [r0]
   12528:	cmp	r2, #0
   1252c:	beq	124e8 <__assert_fail@plt+0xef4>
   12530:	ldr	r1, [sp, #4]
   12534:	add	r0, r0, #4
   12538:	ldr	r2, [r2]
   1253c:	cmp	r2, r1
   12540:	beq	125e8 <__assert_fail@plt+0xff4>
   12544:	ldr	r2, [r0], #4
   12548:	cmp	r2, #0
   1254c:	bne	12538 <__assert_fail@plt+0xf44>
   12550:	b	124e8 <__assert_fail@plt+0xef4>
   12554:	add	r1, sp, #8
   12558:	mov	r0, r6
   1255c:	bl	11324 <inet_aton@plt>
   12560:	movw	r4, #53588	; 0xd154
   12564:	movt	r4, #2
   12568:	ldr	r7, [r4]
   1256c:	cmp	r7, #0
   12570:	beq	12614 <__assert_fail@plt+0x1020>
   12574:	mov	r5, r0
   12578:	b	12588 <__assert_fail@plt+0xf94>
   1257c:	ldr	r7, [r4, #4]!
   12580:	cmp	r7, #0
   12584:	beq	12614 <__assert_fail@plt+0x1020>
   12588:	mov	r0, r7
   1258c:	mov	r1, r6
   12590:	bl	11330 <strcmp@plt>
   12594:	cmp	r0, #0
   12598:	beq	125e8 <__assert_fail@plt+0xff4>
   1259c:	cmp	r5, #0
   125a0:	beq	1257c <__assert_fail@plt+0xf88>
   125a4:	mov	r0, r7
   125a8:	bl	115ac <gethostbyname@plt>
   125ac:	cmp	r0, #0
   125b0:	beq	1257c <__assert_fail@plt+0xf88>
   125b4:	ldr	r0, [r0, #16]
   125b8:	ldr	r2, [r0]
   125bc:	cmp	r2, #0
   125c0:	beq	1257c <__assert_fail@plt+0xf88>
   125c4:	ldr	r1, [sp, #8]
   125c8:	add	r0, r0, #4
   125cc:	ldr	r2, [r2]
   125d0:	cmp	r2, r1
   125d4:	beq	125e8 <__assert_fail@plt+0xff4>
   125d8:	ldr	r2, [r0], #4
   125dc:	cmp	r2, #0
   125e0:	bne	125cc <__assert_fail@plt+0xfd8>
   125e4:	b	1257c <__assert_fail@plt+0xf88>
   125e8:	mov	r0, sl
   125ec:	bl	114a4 <strlen@plt>
   125f0:	movw	r1, #48904	; 0xbf08
   125f4:	add	r0, sl, r0
   125f8:	movt	r1, #1
   125fc:	vldr	d16, [r1]
   12600:	mov	r1, #0
   12604:	strb	r1, [r0, #8]
   12608:	vst1.8	{d16}, [r0]
   1260c:	mov	r0, #1
   12610:	b	12618 <__assert_fail@plt+0x1024>
   12614:	mov	r0, #0
   12618:	ldrb	r1, [r9]
   1261c:	cmp	r1, #0
   12620:	beq	1263c <__assert_fail@plt+0x1048>
   12624:	cmp	r0, #0
   12628:	beq	12648 <__assert_fail@plt+0x1054>
   1262c:	mov	r0, sl
   12630:	mov	r1, r9
   12634:	bl	11408 <strcat@plt>
   12638:	b	1274c <__assert_fail@plt+0x1158>
   1263c:	cmp	r0, #0
   12640:	beq	1267c <__assert_fail@plt+0x1088>
   12644:	b	1274c <__assert_fail@plt+0x1158>
   12648:	movw	r1, #43235	; 0xa8e3
   1264c:	mov	r0, r6
   12650:	movt	r1, #1
   12654:	bl	11330 <strcmp@plt>
   12658:	cmp	r0, #0
   1265c:	beq	12670 <__assert_fail@plt+0x107c>
   12660:	movw	r0, #47634	; 0xba12
   12664:	movt	r0, #1
   12668:	bl	11438 <puts@plt>
   1266c:	b	1267c <__assert_fail@plt+0x1088>
   12670:	mov	r0, sl
   12674:	mov	r1, r9
   12678:	bl	11408 <strcat@plt>
   1267c:	movw	r1, #43192	; 0xa8b8
   12680:	mov	r0, r6
   12684:	movt	r1, #1
   12688:	bl	11330 <strcmp@plt>
   1268c:	cmp	r0, #0
   12690:	beq	126ac <__assert_fail@plt+0x10b8>
   12694:	movw	r1, #43500	; 0xa9ec
   12698:	mov	r0, r6
   1269c:	movt	r1, #1
   126a0:	bl	11330 <strcmp@plt>
   126a4:	cmp	r0, #0
   126a8:	bne	126f0 <__assert_fail@plt+0x10fc>
   126ac:	movw	r1, #47688	; 0xba48
   126b0:	mov	r0, r8
   126b4:	mov	r2, #2
   126b8:	movt	r1, #1
   126bc:	bl	114d4 <strncasecmp@plt>
   126c0:	cmp	r0, #0
   126c4:	bne	126f0 <__assert_fail@plt+0x10fc>
   126c8:	mov	r2, r8
   126cc:	ldrb	r0, [r2, #2]!
   126d0:	sub	r0, r0, #48	; 0x30
   126d4:	uxtb	r0, r0
   126d8:	cmp	r0, #9
   126dc:	bhi	126f0 <__assert_fail@plt+0x10fc>
   126e0:	movw	r1, #47691	; 0xba4b
   126e4:	mov	r0, sl
   126e8:	movt	r1, #1
   126ec:	b	127b0 <__assert_fail@plt+0x11bc>
   126f0:	movw	r1, #43235	; 0xa8e3
   126f4:	mov	r0, r6
   126f8:	movt	r1, #1
   126fc:	bl	11330 <strcmp@plt>
   12700:	cmp	r0, #0
   12704:	beq	1275c <__assert_fail@plt+0x1168>
   12708:	movw	r1, #47709	; 0xba5d
   1270c:	mov	r0, r6
   12710:	movt	r1, #1
   12714:	bl	11330 <strcmp@plt>
   12718:	cmp	r0, #0
   1271c:	bne	12734 <__assert_fail@plt+0x1140>
   12720:	mov	r0, r8
   12724:	mov	r1, #32
   12728:	bl	114b0 <strchr@plt>
   1272c:	cmp	r0, #0
   12730:	beq	127a0 <__assert_fail@plt+0x11ac>
   12734:	movw	r1, #47260	; 0xb89c
   12738:	mov	r0, r6
   1273c:	movt	r1, #1
   12740:	bl	11330 <strcmp@plt>
   12744:	cmp	r0, #0
   12748:	beq	12768 <__assert_fail@plt+0x1174>
   1274c:	mov	r0, sl
   12750:	mov	r1, r8
   12754:	bl	11408 <strcat@plt>
   12758:	b	127b4 <__assert_fail@plt+0x11c0>
   1275c:	movw	r1, #47696	; 0xba50
   12760:	movt	r1, #1
   12764:	b	127a8 <__assert_fail@plt+0x11b4>
   12768:	movw	r0, #47739	; 0xba7b
   1276c:	movt	r0, #1
   12770:	bl	1142c <getenv@plt>
   12774:	cmp	r0, #0
   12778:	beq	12794 <__assert_fail@plt+0x11a0>
   1277c:	movw	r1, #47744	; 0xba80
   12780:	mov	r2, #2
   12784:	movt	r1, #1
   12788:	bl	115c4 <strncmp@plt>
   1278c:	cmp	r0, #0
   12790:	beq	1274c <__assert_fail@plt+0x1158>
   12794:	movw	r1, #47747	; 0xba83
   12798:	movt	r1, #1
   1279c:	b	127a8 <__assert_fail@plt+0x11b4>
   127a0:	movw	r1, #47729	; 0xba71
   127a4:	movt	r1, #1
   127a8:	mov	r0, sl
   127ac:	mov	r2, r8
   127b0:	bl	1154c <sprintf@plt>
   127b4:	mov	r0, sl
   127b8:	sub	sp, fp, #28
   127bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127c0:	push	{fp, lr}
   127c4:	mov	fp, sp
   127c8:	mov	r4, r0
   127cc:	movw	r0, #2360	; 0x938
   127d0:	movt	r0, #3
   127d4:	ldr	r0, [r0]
   127d8:	bl	11fc8 <__assert_fail@plt+0x9d4>
   127dc:	movw	r0, #47986	; 0xbb72
   127e0:	mov	r1, r4
   127e4:	movt	r0, #1
   127e8:	bl	12d04 <__assert_fail@plt+0x1710>
   127ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127f0:	add	fp, sp, #28
   127f4:	sub	sp, sp, #484	; 0x1e4
   127f8:	sub	sp, sp, #1024	; 0x400
   127fc:	mov	r7, r0
   12800:	movw	r0, #1504	; 0x5e0
   12804:	mov	r5, r1
   12808:	movw	r1, #43751	; 0xaae7
   1280c:	movt	r0, #3
   12810:	movt	r1, #1
   12814:	ldr	r6, [r0]
   12818:	mov	r0, r7
   1281c:	bl	11300 <fdopen@plt>
   12820:	mov	r4, r0
   12824:	mov	r0, r5
   12828:	bl	114a4 <strlen@plt>
   1282c:	mov	r2, r0
   12830:	mov	r0, r7
   12834:	mov	r1, r5
   12838:	bl	114f8 <write@plt>
   1283c:	cmp	r0, #0
   12840:	bmi	12a58 <__assert_fail@plt+0x1464>
   12844:	sub	r5, fp, #232	; 0xe8
   12848:	mov	r1, #200	; 0xc8
   1284c:	mov	r2, r4
   12850:	mov	r0, r5
   12854:	bl	11384 <fgets@plt>
   12858:	cmp	r0, #0
   1285c:	beq	12a30 <__assert_fail@plt+0x143c>
   12860:	movw	r9, #53636	; 0xd184
   12864:	movw	r7, #9217	; 0x2401
   12868:	mov	sl, #0
   1286c:	movt	r9, #2
   12870:	add	r8, sl, #1
   12874:	cmp	r6, #1
   12878:	bne	128c0 <__assert_fail@plt+0x12cc>
   1287c:	ldr	r6, [r9, r8, lsl #2]
   12880:	mov	r0, r6
   12884:	bl	114a4 <strlen@plt>
   12888:	mov	r2, r0
   1288c:	mov	r0, r5
   12890:	mov	r1, r6
   12894:	bl	115c4 <strncmp@plt>
   12898:	mov	r6, r0
   1289c:	cmp	r0, #0
   128a0:	mov	r0, r5
   128a4:	mov	r1, #200	; 0xc8
   128a8:	mov	r2, r4
   128ac:	movwne	r6, #1
   128b0:	bl	11384 <fgets@plt>
   128b4:	cmp	r0, #0
   128b8:	bne	12874 <__assert_fail@plt+0x1280>
   128bc:	b	12a30 <__assert_fail@plt+0x143c>
   128c0:	cmp	r6, #0
   128c4:	bne	12918 <__assert_fail@plt+0x1324>
   128c8:	ldr	r6, [r9]
   128cc:	add	r8, sp, #8
   128d0:	mov	sl, #0
   128d4:	cmp	r6, #0
   128d8:	beq	12910 <__assert_fail@plt+0x131c>
   128dc:	mov	r0, r6
   128e0:	bl	114a4 <strlen@plt>
   128e4:	mov	r2, r0
   128e8:	mov	r0, r5
   128ec:	mov	r1, r6
   128f0:	bl	115c4 <strncmp@plt>
   128f4:	cmp	r0, #0
   128f8:	beq	12a28 <__assert_fail@plt+0x1434>
   128fc:	add	r0, r9, sl, lsl #2
   12900:	add	sl, sl, #2
   12904:	ldr	r6, [r0, #8]
   12908:	cmp	r6, #0
   1290c:	bne	128dc <__assert_fail@plt+0x12e8>
   12910:	mov	r6, #0
   12914:	b	1291c <__assert_fail@plt+0x1328>
   12918:	add	r8, sp, #8
   1291c:	movw	r1, #47758	; 0xba8e
   12920:	mov	r0, r5
   12924:	mov	r2, #10
   12928:	movt	r1, #1
   1292c:	bl	11498 <bcmp@plt>
   12930:	cmp	r0, #0
   12934:	bne	129c4 <__assert_fail@plt+0x13d0>
   12938:	movw	r1, #47769	; 0xba99
   1293c:	mov	r0, r5
   12940:	sub	r2, fp, #488	; 0x1e8
   12944:	sub	r3, fp, #504	; 0x1f8
   12948:	str	r8, [sp]
   1294c:	movt	r1, #1
   12950:	bl	11540 <sscanf@plt>
   12954:	cmp	r0, #3
   12958:	bne	129c4 <__assert_fail@plt+0x13d0>
   1295c:	movw	r0, #2244	; 0x8c4
   12960:	movt	r0, #3
   12964:	ldr	r0, [r0]
   12968:	cmp	r0, #0
   1296c:	beq	12984 <__assert_fail@plt+0x1390>
   12970:	movw	r0, #47815	; 0xbac7
   12974:	mov	r1, r8
   12978:	sub	r2, fp, #488	; 0x1e8
   1297c:	movt	r0, #1
   12980:	bl	11348 <printf@plt>
   12984:	mov	r0, r8
   12988:	bl	114a4 <strlen@plt>
   1298c:	add	r0, r8, r0
   12990:	movw	r1, #2573	; 0xa0d
   12994:	strh	r1, [r0]
   12998:	mov	r1, #0
   1299c:	strb	r1, [r0, #2]
   129a0:	sub	r0, fp, #488	; 0x1e8
   129a4:	sub	r1, fp, #504	; 0x1f8
   129a8:	bl	11cfc <__assert_fail@plt+0x708>
   129ac:	mov	r1, r8
   129b0:	str	r0, [sp, #4]
   129b4:	bl	127ec <__assert_fail@plt+0x11f8>
   129b8:	ldr	r0, [sp, #4]
   129bc:	bl	115dc <close@plt>
   129c0:	b	12a0c <__assert_fail@plt+0x1418>
   129c4:	mov	r0, r5
   129c8:	mov	r2, #1
   129cc:	b	129d4 <__assert_fail@plt+0x13e0>
   129d0:	add	r0, r0, #1
   129d4:	ldrb	r1, [r0]
   129d8:	cmp	r1, #13
   129dc:	bhi	129d0 <__assert_fail@plt+0x13dc>
   129e0:	tst	r7, r2, lsl r1
   129e4:	beq	129d0 <__assert_fail@plt+0x13dc>
   129e8:	mov	r1, #0
   129ec:	mov	r2, r5
   129f0:	strb	r1, [r0]
   129f4:	movw	r0, #2236	; 0x8bc
   129f8:	movw	r1, #49572	; 0xc1a4
   129fc:	movt	r0, #3
   12a00:	movt	r1, #1
   12a04:	ldr	r0, [r0]
   12a08:	bl	114bc <fprintf@plt>
   12a0c:	mov	r0, r5
   12a10:	mov	r1, #200	; 0xc8
   12a14:	mov	r2, r4
   12a18:	bl	11384 <fgets@plt>
   12a1c:	cmp	r0, #0
   12a20:	bne	12870 <__assert_fail@plt+0x127c>
   12a24:	b	12a30 <__assert_fail@plt+0x143c>
   12a28:	mov	r6, #1
   12a2c:	b	12a0c <__assert_fail@plt+0x1418>
   12a30:	mov	r0, r4
   12a34:	bl	11390 <ferror@plt>
   12a38:	cmp	r0, #0
   12a3c:	bne	12a64 <__assert_fail@plt+0x1470>
   12a40:	cmp	r6, #1
   12a44:	subne	sp, fp, #28
   12a48:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a4c:	movw	r0, #47853	; 0xbaed
   12a50:	movt	r0, #1
   12a54:	bl	12d04 <__assert_fail@plt+0x1710>
   12a58:	movw	r0, #47752	; 0xba88
   12a5c:	movt	r0, #1
   12a60:	bl	12ca0 <__assert_fail@plt+0x16ac>
   12a64:	movw	r0, #47847	; 0xbae7
   12a68:	movt	r0, #1
   12a6c:	bl	12ca0 <__assert_fail@plt+0x16ac>
   12a70:	push	{r4, r5, fp, lr}
   12a74:	add	fp, sp, #8
   12a78:	mov	r4, r0
   12a7c:	movw	r0, #5072	; 0x13d0
   12a80:	mov	r5, r1
   12a84:	movt	r0, #6
   12a88:	cmp	r4, r0
   12a8c:	blt	12a9c <__assert_fail@plt+0x14a8>
   12a90:	movw	r0, #47586	; 0xb9e2
   12a94:	movt	r0, #1
   12a98:	bl	11438 <puts@plt>
   12a9c:	ldr	r0, [r5, #4]
   12aa0:	movw	r1, #43192	; 0xa8b8
   12aa4:	movt	r1, #1
   12aa8:	cmp	r0, #0
   12aac:	beq	12ae0 <__assert_fail@plt+0x14ec>
   12ab0:	add	r2, r5, #12
   12ab4:	b	12ac4 <__assert_fail@plt+0x14d0>
   12ab8:	ldr	r0, [r2], #8
   12abc:	cmp	r0, #0
   12ac0:	beq	12ae0 <__assert_fail@plt+0x14ec>
   12ac4:	ldrh	r3, [r2, #-12]
   12ac8:	cmp	r3, r4
   12acc:	bgt	12ab8 <__assert_fail@plt+0x14c4>
   12ad0:	ldrh	r3, [r2, #-10]
   12ad4:	cmp	r3, r4
   12ad8:	blt	12ab8 <__assert_fail@plt+0x14c4>
   12adc:	pop	{r4, r5, fp, pc}
   12ae0:	mov	r0, r1
   12ae4:	pop	{r4, r5, fp, pc}
   12ae8:	push	{r4, sl, fp, lr}
   12aec:	add	fp, sp, #8
   12af0:	sub	sp, sp, #24
   12af4:	mov	r4, #0
   12af8:	cmp	r0, #0
   12afc:	beq	12b4c <__assert_fail@plt+0x1558>
   12b00:	add	r1, sp, #8
   12b04:	add	r2, sp, #12
   12b08:	add	r3, sp, #16
   12b0c:	str	r1, [sp, #4]
   12b10:	movw	r1, #48014	; 0xbb8e
   12b14:	str	r2, [sp]
   12b18:	sub	r2, fp, #12
   12b1c:	movt	r1, #1
   12b20:	bl	11540 <sscanf@plt>
   12b24:	cmp	r0, #4
   12b28:	bne	12b4c <__assert_fail@plt+0x1558>
   12b2c:	ldr	r0, [sp, #16]
   12b30:	ldr	r1, [fp, #-12]
   12b34:	lsl	r0, r0, #16
   12b38:	add	r0, r0, r1, lsl #24
   12b3c:	ldr	r1, [sp, #12]
   12b40:	add	r0, r0, r1, lsl #8
   12b44:	ldr	r1, [sp, #8]
   12b48:	add	r4, r0, r1
   12b4c:	mov	r0, r4
   12b50:	sub	sp, fp, #8
   12b54:	pop	{r4, sl, fp, pc}
   12b58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b5c:	add	fp, sp, #28
   12b60:	sub	sp, sp, #4
   12b64:	mov	r9, r1
   12b68:	mov	r8, r0
   12b6c:	mov	r7, r0
   12b70:	ldrb	r0, [r7], #1
   12b74:	cmp	r0, #0
   12b78:	bne	12b70 <__assert_fail@plt+0x157c>
   12b7c:	mov	r0, #0
   12b80:	mov	r4, r9
   12b84:	ldrb	r1, [r4], #1
   12b88:	mov	r5, r0
   12b8c:	sub	r0, r0, #1
   12b90:	cmp	r1, #0
   12b94:	bne	12b84 <__assert_fail@plt+0x1590>
   12b98:	mvn	r6, #1
   12b9c:	mov	sl, #0
   12ba0:	add	r0, r4, r6
   12ba4:	cmp	r0, r9
   12ba8:	addcs	r0, r7, r6
   12bac:	cmpcs	r0, r8
   12bb0:	bcc	12be0 <__assert_fail@plt+0x15ec>
   12bb4:	bl	11468 <__ctype_tolower_loc@plt>
   12bb8:	ldrb	r2, [r7, r6]
   12bbc:	ldr	r0, [r0]
   12bc0:	ldrb	r1, [r4, r6]
   12bc4:	ldr	r0, [r0, r2, lsl #2]
   12bc8:	cmp	r0, r1
   12bcc:	bne	12be0 <__assert_fail@plt+0x15ec>
   12bd0:	adds	r5, r5, #1
   12bd4:	sub	r6, r6, #1
   12bd8:	bne	12ba0 <__assert_fail@plt+0x15ac>
   12bdc:	mov	sl, #1
   12be0:	mov	r0, sl
   12be4:	sub	sp, fp, #28
   12be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12bf0:	add	fp, sp, #24
   12bf4:	sub	sp, sp, #8
   12bf8:	mov	r5, r1
   12bfc:	mov	r6, r0
   12c00:	add	r1, sp, #4
   12c04:	mov	r0, r5
   12c08:	bl	11324 <inet_aton@plt>
   12c0c:	ldr	r4, [r6]
   12c10:	mov	r8, #0
   12c14:	cmp	r4, #0
   12c18:	beq	12c94 <__assert_fail@plt+0x16a0>
   12c1c:	mov	r7, r0
   12c20:	b	12c30 <__assert_fail@plt+0x163c>
   12c24:	ldr	r4, [r6, #4]!
   12c28:	cmp	r4, #0
   12c2c:	beq	12c94 <__assert_fail@plt+0x16a0>
   12c30:	mov	r0, r4
   12c34:	mov	r1, r5
   12c38:	bl	11330 <strcmp@plt>
   12c3c:	cmp	r0, #0
   12c40:	beq	12c90 <__assert_fail@plt+0x169c>
   12c44:	cmp	r7, #0
   12c48:	beq	12c24 <__assert_fail@plt+0x1630>
   12c4c:	mov	r0, r4
   12c50:	bl	115ac <gethostbyname@plt>
   12c54:	cmp	r0, #0
   12c58:	beq	12c24 <__assert_fail@plt+0x1630>
   12c5c:	ldr	r0, [r0, #16]
   12c60:	ldr	r1, [r0]
   12c64:	cmp	r1, #0
   12c68:	beq	12c24 <__assert_fail@plt+0x1630>
   12c6c:	ldr	r2, [sp, #4]
   12c70:	add	r0, r0, #4
   12c74:	ldr	r1, [r1]
   12c78:	cmp	r1, r2
   12c7c:	beq	12c90 <__assert_fail@plt+0x169c>
   12c80:	ldr	r1, [r0], #4
   12c84:	cmp	r1, #0
   12c88:	bne	12c74 <__assert_fail@plt+0x1680>
   12c8c:	b	12c24 <__assert_fail@plt+0x1630>
   12c90:	mov	r8, #1
   12c94:	mov	r0, r8
   12c98:	sub	sp, fp, #24
   12c9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ca0:	sub	sp, sp, #12
   12ca4:	push	{fp, lr}
   12ca8:	mov	fp, sp
   12cac:	sub	sp, sp, #4
   12cb0:	movw	r4, #2232	; 0x8b8
   12cb4:	mov	ip, r0
   12cb8:	add	r0, fp, #8
   12cbc:	movt	r4, #3
   12cc0:	stm	r0, {r1, r2, r3}
   12cc4:	add	r2, fp, #8
   12cc8:	mov	r1, ip
   12ccc:	str	r2, [sp]
   12cd0:	ldr	r0, [r4]
   12cd4:	bl	11528 <vfprintf@plt>
   12cd8:	ldr	r4, [r4]
   12cdc:	bl	114c8 <__errno_location@plt>
   12ce0:	ldr	r0, [r0]
   12ce4:	bl	1145c <strerror@plt>
   12ce8:	movw	r1, #50185	; 0xc409
   12cec:	mov	r2, r0
   12cf0:	mov	r0, r4
   12cf4:	movt	r1, #1
   12cf8:	bl	114bc <fprintf@plt>
   12cfc:	mov	r0, #1
   12d00:	bl	1148c <exit@plt>
   12d04:	sub	sp, sp, #12
   12d08:	push	{fp, lr}
   12d0c:	mov	fp, sp
   12d10:	sub	sp, sp, #4
   12d14:	movw	r4, #2232	; 0x8b8
   12d18:	mov	ip, r0
   12d1c:	add	r0, fp, #8
   12d20:	movt	r4, #3
   12d24:	stm	r0, {r1, r2, r3}
   12d28:	add	r2, fp, #8
   12d2c:	mov	r1, ip
   12d30:	str	r2, [sp]
   12d34:	ldr	r0, [r4]
   12d38:	bl	11528 <vfprintf@plt>
   12d3c:	ldr	r1, [r4]
   12d40:	mov	r0, #10
   12d44:	bl	11534 <fputc@plt>
   12d48:	mov	r0, #1
   12d4c:	bl	1148c <exit@plt>
   12d50:	push	{r4, r5, r6, r7, fp, lr}
   12d54:	add	fp, sp, #16
   12d58:	mov	r6, #7
   12d5c:	cmp	r0, #1
   12d60:	blt	12e80 <__assert_fail@plt+0x188c>
   12d64:	mov	r7, r0
   12d68:	cmp	r0, #127	; 0x7f
   12d6c:	bhi	12e80 <__assert_fail@plt+0x188c>
   12d70:	mov	r4, r1
   12d74:	sub	r1, r7, #113	; 0x71
   12d78:	cmp	r1, #5
   12d7c:	bhi	12d98 <__assert_fail@plt+0x17a4>
   12d80:	mov	r0, #1
   12d84:	mov	r2, #41	; 0x29
   12d88:	tst	r2, r0, lsl r1
   12d8c:	movwne	r1, #2256	; 0x8d0
   12d90:	movtne	r1, #3
   12d94:	strne	r0, [r1]
   12d98:	movw	r5, #2316	; 0x90c
   12d9c:	movt	r5, #3
   12da0:	ldr	r0, [r5, #12]
   12da4:	ldr	r1, [r5, #16]
   12da8:	cmp	r1, r0
   12dac:	bne	12dc0 <__assert_fail@plt+0x17cc>
   12db0:	mov	r0, r5
   12db4:	mov	r1, #1
   12db8:	bl	14484 <_obstack_newchunk@@Base>
   12dbc:	ldr	r0, [r5, #12]
   12dc0:	add	r1, r0, #1
   12dc4:	str	r1, [r5, #12]
   12dc8:	mov	r1, #45	; 0x2d
   12dcc:	strb	r1, [r0]
   12dd0:	ldr	r0, [r5, #12]
   12dd4:	ldr	r1, [r5, #16]
   12dd8:	cmp	r1, r0
   12ddc:	bne	12df0 <__assert_fail@plt+0x17fc>
   12de0:	mov	r0, r5
   12de4:	mov	r1, #1
   12de8:	bl	14484 <_obstack_newchunk@@Base>
   12dec:	ldr	r0, [r5, #12]
   12df0:	add	r1, r0, #1
   12df4:	mov	r6, #0
   12df8:	cmp	r4, #0
   12dfc:	str	r1, [r5, #12]
   12e00:	strb	r7, [r0]
   12e04:	beq	12e80 <__assert_fail@plt+0x188c>
   12e08:	ldr	r0, [r5, #12]
   12e0c:	ldr	r1, [r5, #16]
   12e10:	cmp	r1, r0
   12e14:	bne	12e28 <__assert_fail@plt+0x1834>
   12e18:	mov	r0, r5
   12e1c:	mov	r1, #1
   12e20:	bl	14484 <_obstack_newchunk@@Base>
   12e24:	ldr	r0, [r5, #12]
   12e28:	add	r1, r0, #1
   12e2c:	str	r1, [r5, #12]
   12e30:	mov	r1, #32
   12e34:	strb	r1, [r0]
   12e38:	mov	r0, r4
   12e3c:	bl	114a4 <strlen@plt>
   12e40:	mov	r7, r0
   12e44:	ldr	r0, [r5, #12]
   12e48:	ldr	r1, [r5, #16]
   12e4c:	sub	r1, r1, r0
   12e50:	cmp	r1, r7
   12e54:	bcs	12e68 <__assert_fail@plt+0x1874>
   12e58:	mov	r0, r5
   12e5c:	mov	r1, r7
   12e60:	bl	14484 <_obstack_newchunk@@Base>
   12e64:	ldr	r0, [r5, #12]
   12e68:	mov	r1, r4
   12e6c:	mov	r2, r7
   12e70:	bl	113a8 <memcpy@plt>
   12e74:	ldr	r0, [r5, #12]
   12e78:	add	r0, r0, r7
   12e7c:	str	r0, [r5, #12]
   12e80:	mov	r0, r6
   12e84:	pop	{r4, r5, r6, r7, fp, pc}
   12e88:	push	{r4, r5, r6, sl, fp, lr}
   12e8c:	add	fp, sp, #16
   12e90:	mov	r5, r1
   12e94:	mov	r1, r0
   12e98:	mov	r0, #7
   12e9c:	cmp	r1, #103	; 0x67
   12ea0:	bgt	12ec8 <__assert_fail@plt+0x18d4>
   12ea4:	cmp	r1, #72	; 0x48
   12ea8:	beq	12f24 <__assert_fail@plt+0x1930>
   12eac:	cmp	r1, #86	; 0x56
   12eb0:	bne	12f48 <__assert_fail@plt+0x1954>
   12eb4:	movw	r0, #2244	; 0x8c4
   12eb8:	mov	r1, #1
   12ebc:	movt	r0, #3
   12ec0:	str	r1, [r0]
   12ec4:	b	12f44 <__assert_fail@plt+0x1950>
   12ec8:	cmp	r1, #112	; 0x70
   12ecc:	beq	12f38 <__assert_fail@plt+0x1944>
   12ed0:	cmp	r1, #104	; 0x68
   12ed4:	bne	12f48 <__assert_fail@plt+0x1954>
   12ed8:	mov	r0, r5
   12edc:	bl	114a4 <strlen@plt>
   12ee0:	add	r0, r0, #1
   12ee4:	bl	14d7c <_obstack_memory_used@@Base+0x6c8>
   12ee8:	mov	r4, r0
   12eec:	movw	r0, #2248	; 0x8c8
   12ef0:	movt	r0, #3
   12ef4:	str	r4, [r0]
   12ef8:	add	r5, r5, #1
   12efc:	ldrb	r6, [r5, #-1]
   12f00:	cmp	r6, #0
   12f04:	beq	12f58 <__assert_fail@plt+0x1964>
   12f08:	cmp	r6, #58	; 0x3a
   12f0c:	beq	12f4c <__assert_fail@plt+0x1958>
   12f10:	bl	11468 <__ctype_tolower_loc@plt>
   12f14:	ldr	r0, [r0]
   12f18:	ldr	r0, [r0, r6, lsl #2]
   12f1c:	strb	r0, [r4], #1
   12f20:	b	12ef8 <__assert_fail@plt+0x1904>
   12f24:	movw	r1, #1504	; 0x5e0
   12f28:	mov	r0, #0
   12f2c:	movt	r1, #3
   12f30:	str	r0, [r1]
   12f34:	pop	{r4, r5, r6, sl, fp, pc}
   12f38:	movw	r0, #2252	; 0x8cc
   12f3c:	movt	r0, #3
   12f40:	str	r5, [r0]
   12f44:	mov	r0, #0
   12f48:	pop	{r4, r5, r6, sl, fp, pc}
   12f4c:	movw	r0, #2252	; 0x8cc
   12f50:	movt	r0, #3
   12f54:	str	r5, [r0]
   12f58:	mov	r0, #0
   12f5c:	strb	r0, [r4]
   12f60:	pop	{r4, r5, r6, sl, fp, pc}

00012f64 <argp_parse@@Base>:
   12f64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f68:	add	fp, sp, #28
   12f6c:	sub	sp, sp, #212	; 0xd4
   12f70:	mov	r4, r3
   12f74:	mov	r6, r2
   12f78:	mov	r7, r1
   12f7c:	mov	r5, r0
   12f80:	tst	r3, #1
   12f84:	bne	12fc4 <argp_parse@@Base+0x60>
   12f88:	movw	r0, #2228	; 0x8b4
   12f8c:	movt	r0, #3
   12f90:	ldr	r1, [r0]
   12f94:	cmp	r1, #0
   12f98:	bne	12fa4 <argp_parse@@Base+0x40>
   12f9c:	ldr	r1, [r6]
   12fa0:	str	r1, [r0]
   12fa4:	movw	r8, #2224	; 0x8b0
   12fa8:	movt	r8, #3
   12fac:	ldr	r0, [r8]
   12fb0:	cmp	r0, #0
   12fb4:	bne	12fc4 <argp_parse@@Base+0x60>
   12fb8:	ldr	r0, [r6]
   12fbc:	bl	141bc <argp_parse@@Base+0x1258>
   12fc0:	str	r0, [r8]
   12fc4:	tst	r4, #16
   12fc8:	str	r6, [fp, #-228]	; 0xffffff1c
   12fcc:	str	r7, [fp, #-232]	; 0xffffff18
   12fd0:	bne	13080 <argp_parse@@Base+0x11c>
   12fd4:	mov	r1, sp
   12fd8:	sub	r3, r1, #64	; 0x40
   12fdc:	mov	sp, r3
   12fe0:	mov	r2, sp
   12fe4:	sub	r0, r2, #32
   12fe8:	mov	sp, r0
   12fec:	vmov.i32	q8, #0	; 0x00000000
   12ff0:	sub	r2, r2, #20
   12ff4:	cmp	r5, #0
   12ff8:	vst1.32	{d16-d17}, [r2]
   12ffc:	mov	r2, r0
   13000:	vst1.64	{d16-d17}, [r2]!
   13004:	str	r3, [r2]
   13008:	sub	r2, r1, #32
   1300c:	sub	r1, r1, #48	; 0x30
   13010:	vst1.64	{d16-d17}, [r2]
   13014:	vst1.64	{d16-d17}, [r1]
   13018:	mov	r1, #48	; 0x30
   1301c:	mov	r2, r3
   13020:	vst1.64	{d16-d17}, [r2], r1
   13024:	vst1.64	{d16-d17}, [r2]
   13028:	movw	r2, #48916	; 0xbf14
   1302c:	strne	r5, [r3], #16
   13030:	movt	r2, #1
   13034:	mov	r1, r3
   13038:	str	r2, [r1], #16
   1303c:	movw	r2, #2368	; 0x940
   13040:	movt	r2, #3
   13044:	ldr	r2, [r2]
   13048:	cmp	r2, #0
   1304c:	bne	13064 <argp_parse@@Base+0x100>
   13050:	movw	r2, #2264	; 0x8d8
   13054:	movt	r2, #3
   13058:	ldr	r2, [r2]
   1305c:	cmp	r2, #0
   13060:	beq	13074 <argp_parse@@Base+0x110>
   13064:	movw	r2, #48944	; 0xbf30
   13068:	mov	r3, r1
   1306c:	movt	r2, #1
   13070:	str	r2, [r1]
   13074:	mov	r1, #0
   13078:	str	r1, [r3, #16]
   1307c:	b	13084 <argp_parse@@Base+0x120>
   13080:	mov	r0, r5
   13084:	vmov.i32	q8, #0	; 0x00000000
   13088:	sub	r9, fp, #96	; 0x60
   1308c:	mov	r7, #12
   13090:	mov	r5, #0
   13094:	cmp	r0, #0
   13098:	str	r4, [fp, #-224]	; 0xffffff20
   1309c:	str	r0, [fp, #-236]	; 0xffffff14
   130a0:	mov	r1, r9
   130a4:	str	r5, [fp, #-52]	; 0xffffffcc
   130a8:	str	r5, [fp, #-56]	; 0xffffffc8
   130ac:	str	r5, [fp, #-60]	; 0xffffffc4
   130b0:	vst1.64	{d16-d17}, [r1], r7
   130b4:	vst1.32	{d16-d17}, [r1]
   130b8:	mov	r1, #1
   130bc:	bic	r3, r1, r4, lsr #2
   130c0:	str	r3, [fp, #-64]	; 0xffffffc0
   130c4:	beq	130fc <argp_parse@@Base+0x198>
   130c8:	sub	r1, fp, #64	; 0x40
   130cc:	bl	13db4 <argp_parse@@Base+0xe50>
   130d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   130d4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   130d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   130dc:	mov	r6, #16
   130e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   130e4:	add	r2, r2, r2, lsl #3
   130e8:	add	r1, r6, r1, lsl #4
   130ec:	mov	r6, #36	; 0x24
   130f0:	lsl	r5, r0, #2
   130f4:	add	r8, r6, r2, lsl #2
   130f8:	b	13104 <argp_parse@@Base+0x1a0>
   130fc:	mov	r8, #36	; 0x24
   13100:	mov	r1, #16
   13104:	add	r4, r8, r5
   13108:	add	sl, r4, r1
   1310c:	add	r0, r3, sl
   13110:	add	r0, r0, #1
   13114:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   13118:	cmp	r0, #0
   1311c:	str	r0, [fp, #-100]	; 0xffffff9c
   13120:	beq	13b54 <argp_parse@@Base+0xbf0>
   13124:	mov	r6, r0
   13128:	mov	r0, #12
   1312c:	sub	r1, fp, #220	; 0xdc
   13130:	mov	r2, r5
   13134:	vld1.64	{d16-d17}, [r9], r0
   13138:	add	r0, r1, #20
   1313c:	add	r7, r6, r8
   13140:	add	r8, r6, r4
   13144:	add	r4, r6, sl
   13148:	vld1.32	{d18-d19}, [r9]
   1314c:	mov	r9, r1
   13150:	vst1.32	{d16-d17}, [r0]
   13154:	add	r0, r1, #32
   13158:	mov	r1, #0
   1315c:	vst1.32	{d18-d19}, [r0]
   13160:	mov	r0, #1
   13164:	str	r6, [fp, #-172]	; 0xffffff54
   13168:	str	r0, [fp, #-204]	; 0xffffff34
   1316c:	str	r0, [fp, #-208]	; 0xffffff30
   13170:	mov	r0, r7
   13174:	str	r7, [fp, #-164]	; 0xffffff5c
   13178:	str	r8, [fp, #-212]	; 0xffffff2c
   1317c:	str	r4, [fp, #-216]	; 0xffffff28
   13180:	bl	114ec <memset@plt>
   13184:	ldr	sl, [fp, #-224]	; 0xffffff20
   13188:	mov	r0, #45	; 0x2d
   1318c:	str	r7, [fp, #-36]	; 0xffffffdc
   13190:	str	r8, [fp, #-40]	; 0xffffffd8
   13194:	str	r4, [fp, #-44]	; 0xffffffd4
   13198:	str	r9, [fp, #-48]	; 0xffffffd0
   1319c:	tst	sl, #8
   131a0:	moveq	r0, #43	; 0x2b
   131a4:	tsteq	sl, #4
   131a8:	beq	137a4 <argp_parse@@Base+0x840>
   131ac:	add	r1, r4, #1
   131b0:	strb	r0, [r4]
   131b4:	str	r1, [fp, #-44]	; 0xffffffd4
   131b8:	ldr	r0, [fp, #-236]	; 0xffffff14
   131bc:	ldr	r5, [fp, #-228]	; 0xffffff1c
   131c0:	ldr	r9, [fp, #-232]	; 0xffffff18
   131c4:	mov	r3, #0
   131c8:	strb	r3, [r1]
   131cc:	str	r3, [r8]
   131d0:	cmp	r0, #0
   131d4:	str	r0, [fp, #-220]	; 0xffffff24
   131d8:	beq	13210 <argp_parse@@Base+0x2ac>
   131dc:	sub	sp, sp, #8
   131e0:	sub	r1, fp, #48	; 0x30
   131e4:	mov	r2, #0
   131e8:	mov	r3, r6
   131ec:	str	r1, [sp]
   131f0:	mov	r1, #0
   131f4:	bl	13e94 <argp_parse@@Base+0xf30>
   131f8:	add	sp, sp, #8
   131fc:	str	r0, [fp, #-168]	; 0xffffff58
   13200:	mov	r6, r0
   13204:	ldr	r3, [fp, #-220]	; 0xffffff24
   13208:	ldr	r4, [fp, #-172]	; 0xffffff54
   1320c:	b	13218 <argp_parse@@Base+0x2b4>
   13210:	mov	r4, r6
   13214:	str	r6, [fp, #-168]	; 0xffffff58
   13218:	vmov.i32	q8, #0	; 0x00000000
   1321c:	sub	r1, fp, #220	; 0xdc
   13220:	mov	r7, #0
   13224:	mov	r0, #1
   13228:	mov	r8, r5
   1322c:	cmp	r4, r6
   13230:	mov	r2, r1
   13234:	add	r1, r1, #84	; 0x54
   13238:	str	r7, [fp, #-116]	; 0xffffff8c
   1323c:	str	r7, [fp, #-120]	; 0xffffff88
   13240:	vst1.32	{d16-d17}, [r1]
   13244:	str	sl, [fp, #-140]	; 0xffffff74
   13248:	str	r5, [fp, #-148]	; 0xffffff6c
   1324c:	str	r9, [fp, #-152]	; 0xffffff68
   13250:	str	r3, [fp, #-156]	; 0xffffff64
   13254:	str	r2, [fp, #-104]	; 0xffffff98
   13258:	str	r7, [fp, #-144]	; 0xffffff70
   1325c:	str	r0, [fp, #-160]	; 0xffffff60
   13260:	movw	r0, #2232	; 0x8b8
   13264:	add	sl, r2, #64	; 0x40
   13268:	movt	r0, #3
   1326c:	ldr	r0, [r0]
   13270:	str	r0, [fp, #-112]	; 0xffffff90
   13274:	movw	r0, #2236	; 0x8bc
   13278:	movt	r0, #3
   1327c:	ldr	r0, [r0]
   13280:	str	r0, [fp, #-108]	; 0xffffff94
   13284:	bcs	13364 <argp_parse@@Base+0x400>
   13288:	ldr	r0, [fp, #12]
   1328c:	str	r0, [r4, #24]
   13290:	b	132e8 <argp_parse@@Base+0x384>
   13294:	ldr	r0, [r4, #32]
   13298:	mov	r1, #0
   1329c:	mov	r2, sl
   132a0:	str	r0, [fp, #-120]	; 0xffffff88
   132a4:	ldr	r0, [r4, #24]
   132a8:	str	r0, [fp, #-128]	; 0xffffff80
   132ac:	ldr	r0, [r4, #28]
   132b0:	str	r0, [fp, #-124]	; 0xffffff84
   132b4:	ldr	r0, [r4, #12]
   132b8:	str	r0, [fp, #-136]	; 0xffffff78
   132bc:	movw	r0, #6
   132c0:	movt	r0, #256	; 0x100
   132c4:	sub	r0, r0, #3
   132c8:	blx	r3
   132cc:	mov	r7, r0
   132d0:	ldr	r0, [fp, #-120]	; 0xffffff88
   132d4:	str	r0, [r4, #32]
   132d8:	ldr	r0, [fp, #-168]	; 0xffffff58
   132dc:	add	r4, r4, #36	; 0x24
   132e0:	cmp	r4, r0
   132e4:	bcs	13358 <argp_parse@@Base+0x3f4>
   132e8:	cmp	r7, #7
   132ec:	cmpne	r7, #0
   132f0:	bne	13b54 <argp_parse@@Base+0xbf0>
   132f4:	ldr	r0, [r4, #16]
   132f8:	cmp	r0, #0
   132fc:	beq	13310 <argp_parse@@Base+0x3ac>
   13300:	ldr	r1, [r4, #20]
   13304:	ldr	r0, [r0, #28]
   13308:	ldr	r0, [r0, r1, lsl #2]
   1330c:	str	r0, [r4, #24]
   13310:	ldr	r3, [r4]
   13314:	cmp	r3, #0
   13318:	bne	13294 <argp_parse@@Base+0x330>
   1331c:	ldr	r0, [r4, #4]
   13320:	mov	r7, #7
   13324:	ldr	r0, [r0, #16]
   13328:	cmp	r0, #0
   1332c:	beq	132d8 <argp_parse@@Base+0x374>
   13330:	ldr	r0, [r0]
   13334:	cmp	r0, #0
   13338:	beq	132d8 <argp_parse@@Base+0x374>
   1333c:	ldr	r0, [r4, #24]
   13340:	ldr	r1, [r4, #28]
   13344:	str	r0, [r1]
   13348:	ldr	r3, [r4]
   1334c:	cmp	r3, #0
   13350:	bne	13294 <argp_parse@@Base+0x330>
   13354:	b	132d8 <argp_parse@@Base+0x374>
   13358:	cmp	r7, #7
   1335c:	cmpne	r7, #0
   13360:	bne	13b54 <argp_parse@@Base+0xbf0>
   13364:	ldr	r0, [fp, #-140]	; 0xffffff74
   13368:	tst	r0, #2
   1336c:	bne	1337c <argp_parse@@Base+0x418>
   13370:	mov	r0, #1
   13374:	str	r0, [fp, #-204]	; 0xffffff34
   13378:	b	133a4 <argp_parse@@Base+0x440>
   1337c:	mov	r1, #0
   13380:	tst	r0, #1
   13384:	str	r1, [fp, #-204]	; 0xffffff34
   13388:	beq	133a4 <argp_parse@@Base+0x440>
   1338c:	ldr	r0, [fp, #-152]	; 0xffffff68
   13390:	ldr	r1, [fp, #-148]	; 0xffffff6c
   13394:	sub	r1, r1, #4
   13398:	add	r0, r0, #1
   1339c:	str	r1, [fp, #-148]	; 0xffffff6c
   133a0:	str	r0, [fp, #-152]	; 0xffffff68
   133a4:	ldr	r0, [fp, #-148]	; 0xffffff6c
   133a8:	cmp	r0, r8
   133ac:	beq	133c0 <argp_parse@@Base+0x45c>
   133b0:	movw	r0, #2224	; 0x8b0
   133b4:	movt	r0, #3
   133b8:	ldr	r0, [r0]
   133bc:	b	133d0 <argp_parse@@Base+0x46c>
   133c0:	ldr	r0, [r8]
   133c4:	cmp	r0, #0
   133c8:	beq	133b0 <argp_parse@@Base+0x44c>
   133cc:	bl	141bc <argp_parse@@Base+0x1258>
   133d0:	str	r0, [fp, #-116]	; 0xffffff8c
   133d4:	sub	r0, fp, #220	; 0xdc
   133d8:	mov	r8, #0
   133dc:	add	r6, r0, #12
   133e0:	b	133f4 <argp_parse@@Base+0x490>
   133e4:	cmp	r0, #7
   133e8:	beq	137ac <argp_parse@@Base+0x848>
   133ec:	cmp	r0, #0
   133f0:	bne	13944 <argp_parse@@Base+0x9e0>
   133f4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   133f8:	cmp	r0, #0
   133fc:	beq	13410 <argp_parse@@Base+0x4ac>
   13400:	ldr	r9, [fp, #-144]	; 0xffffff70
   13404:	cmp	r9, r0
   13408:	bge	134c4 <argp_parse@@Base+0x560>
   1340c:	str	r8, [fp, #-132]	; 0xffffff7c
   13410:	ldr	r0, [fp, #-160]	; 0xffffff60
   13414:	ldr	r9, [fp, #-144]	; 0xffffff70
   13418:	cmp	r0, #0
   1341c:	beq	134c4 <argp_parse@@Base+0x560>
   13420:	mvn	r0, #0
   13424:	str	r0, [fp, #-200]	; 0xffffff38
   13428:	str	r9, [fp, #-208]	; 0xffffff30
   1342c:	ldr	r2, [fp, #-216]	; 0xffffff28
   13430:	ldr	r3, [fp, #-212]	; 0xffffff2c
   13434:	ldr	r0, [fp, #-152]	; 0xffffff68
   13438:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1343c:	ldrb	r7, [fp, #-140]	; 0xffffff74
   13440:	sub	sp, sp, #8
   13444:	tst	r7, #64	; 0x40
   13448:	bne	1345c <argp_parse@@Base+0x4f8>
   1344c:	str	r8, [sp]
   13450:	str	r6, [sp, #4]
   13454:	bl	14294 <argp_parse@@Base+0x1330>
   13458:	b	13468 <argp_parse@@Base+0x504>
   1345c:	str	r8, [sp]
   13460:	str	r6, [sp, #4]
   13464:	bl	142f8 <argp_parse@@Base+0x1394>
   13468:	add	sp, sp, #8
   1346c:	ldr	r9, [fp, #-208]	; 0xffffff30
   13470:	mov	r7, r0
   13474:	cmn	r0, #1
   13478:	str	r9, [fp, #-144]	; 0xffffff70
   1347c:	beq	13498 <argp_parse@@Base+0x534>
   13480:	cmp	r7, #63	; 0x3f
   13484:	beq	13660 <argp_parse@@Base+0x6fc>
   13488:	cmp	r7, #1
   1348c:	bne	13670 <argp_parse@@Base+0x70c>
   13490:	ldr	r7, [fp, #-196]	; 0xffffff3c
   13494:	b	134fc <argp_parse@@Base+0x598>
   13498:	cmp	r9, #2
   1349c:	str	r8, [fp, #-160]	; 0xffffff60
   134a0:	blt	134c4 <argp_parse@@Base+0x560>
   134a4:	ldr	r0, [fp, #-148]	; 0xffffff6c
   134a8:	movw	r1, #49404	; 0xc0fc
   134ac:	movt	r1, #1
   134b0:	add	r0, r0, r9, lsl #2
   134b4:	ldr	r0, [r0, #-4]
   134b8:	bl	11330 <strcmp@plt>
   134bc:	cmp	r0, #0
   134c0:	streq	r9, [fp, #-132]	; 0xffffff7c
   134c4:	ldr	r2, [fp, #-152]	; 0xffffff68
   134c8:	mov	r1, #1
   134cc:	mov	r0, #7
   134d0:	cmp	r9, r2
   134d4:	bge	137c8 <argp_parse@@Base+0x864>
   134d8:	ldrb	r2, [fp, #-140]	; 0xffffff74
   134dc:	tst	r2, #4
   134e0:	bne	137c8 <argp_parse@@Base+0x864>
   134e4:	add	r0, r9, #1
   134e8:	str	r0, [fp, #-144]	; 0xffffff70
   134ec:	ldr	r1, [fp, #-148]	; 0xffffff6c
   134f0:	ldr	r7, [r1, r9, lsl #2]
   134f4:	mov	r9, r0
   134f8:	str	r7, [fp, #-196]	; 0xffffff3c
   134fc:	sub	r0, r9, #1
   13500:	str	r0, [fp, #-144]	; 0xffffff70
   13504:	ldr	r1, [fp, #-172]	; 0xffffff54
   13508:	ldr	r2, [fp, #-168]	; 0xffffff58
   1350c:	cmp	r1, r2
   13510:	bcs	137ac <argp_parse@@Base+0x848>
   13514:	add	r4, r1, #24
   13518:	add	r1, r0, #1
   1351c:	str	r1, [fp, #-144]	; 0xffffff70
   13520:	ldr	r3, [r4, #-24]	; 0xffffffe8
   13524:	cmp	r3, #0
   13528:	beq	135c8 <argp_parse@@Base+0x664>
   1352c:	ldr	r0, [r4, #8]
   13530:	mov	r1, r7
   13534:	mov	r2, sl
   13538:	mov	r5, #0
   1353c:	str	r0, [fp, #-120]	; 0xffffff88
   13540:	ldr	r0, [r4]
   13544:	str	r0, [fp, #-128]	; 0xffffff80
   13548:	ldr	r0, [r4, #4]
   1354c:	str	r0, [fp, #-124]	; 0xffffff84
   13550:	ldr	r0, [r4, #-12]
   13554:	str	r0, [fp, #-136]	; 0xffffff78
   13558:	mov	r0, #0
   1355c:	blx	r3
   13560:	ldr	r1, [fp, #-120]	; 0xffffff88
   13564:	cmp	r0, #7
   13568:	str	r1, [r4, #8]
   1356c:	bne	135fc <argp_parse@@Base+0x698>
   13570:	ldr	r0, [fp, #-144]	; 0xffffff70
   13574:	ldr	r3, [r4, #-24]	; 0xffffffe8
   13578:	sub	r0, r0, #1
   1357c:	cmp	r3, #0
   13580:	str	r0, [fp, #-144]	; 0xffffff70
   13584:	beq	135cc <argp_parse@@Base+0x668>
   13588:	ldr	r0, [r4]
   1358c:	mov	r1, #0
   13590:	mov	r2, sl
   13594:	str	r0, [fp, #-128]	; 0xffffff80
   13598:	ldr	r0, [r4, #4]
   1359c:	str	r0, [fp, #-124]	; 0xffffff84
   135a0:	ldr	r0, [r4, #-12]
   135a4:	str	r0, [fp, #-136]	; 0xffffff78
   135a8:	movw	r0, #6
   135ac:	movt	r0, #256	; 0x100
   135b0:	blx	r3
   135b4:	ldr	r1, [fp, #-120]	; 0xffffff88
   135b8:	str	r1, [r4, #8]
   135bc:	cmp	r0, #7
   135c0:	beq	135d8 <argp_parse@@Base+0x674>
   135c4:	b	135f4 <argp_parse@@Base+0x690>
   135c8:	str	r0, [fp, #-144]	; 0xffffff70
   135cc:	mov	r0, #7
   135d0:	cmp	r0, #7
   135d4:	bne	135f4 <argp_parse@@Base+0x690>
   135d8:	ldr	r2, [fp, #-168]	; 0xffffff58
   135dc:	add	r1, r4, #12
   135e0:	cmp	r1, r2
   135e4:	bcs	135f4 <argp_parse@@Base+0x690>
   135e8:	ldr	r0, [fp, #-144]	; 0xffffff70
   135ec:	add	r4, r4, #36	; 0x24
   135f0:	b	13518 <argp_parse@@Base+0x5b4>
   135f4:	movw	r5, #6
   135f8:	movt	r5, #256	; 0x100
   135fc:	cmp	r0, #0
   13600:	bne	133e4 <argp_parse@@Base+0x480>
   13604:	movw	r0, #6
   13608:	movt	r0, #256	; 0x100
   1360c:	cmp	r5, r0
   13610:	bne	1363c <argp_parse@@Base+0x6d8>
   13614:	ldr	r0, [fp, #-152]	; 0xffffff68
   13618:	str	r0, [fp, #-144]	; 0xffffff70
   1361c:	cmp	r0, r9
   13620:	blt	13648 <argp_parse@@Base+0x6e4>
   13624:	ldr	r1, [r4, #-12]
   13628:	sub	r0, r0, r9
   1362c:	add	r0, r0, r1
   13630:	add	r0, r0, #1
   13634:	str	r0, [r4, #-12]
   13638:	b	13650 <argp_parse@@Base+0x6ec>
   1363c:	ldr	r0, [fp, #-144]	; 0xffffff70
   13640:	cmp	r0, r9
   13644:	bge	13624 <argp_parse@@Base+0x6c0>
   13648:	mov	r0, #1
   1364c:	str	r0, [fp, #-160]	; 0xffffff60
   13650:	mov	r0, #0
   13654:	cmp	r0, #0
   13658:	beq	133f4 <argp_parse@@Base+0x490>
   1365c:	b	13944 <argp_parse@@Base+0x9e0>
   13660:	ldr	r0, [fp, #-200]	; 0xffffff38
   13664:	cmn	r0, #1
   13668:	beq	136d8 <argp_parse@@Base+0x774>
   1366c:	b	13b94 <argp_parse@@Base+0xc30>
   13670:	cmp	r8, r7, asr #24
   13674:	beq	136d8 <argp_parse@@Base+0x774>
   13678:	asr	r0, r7, #24
   1367c:	ldr	r1, [fp, #-172]	; 0xffffff54
   13680:	sub	r0, r0, #1
   13684:	add	r0, r0, r0, lsl #3
   13688:	ldr	r3, [r1, r0, lsl #2]
   1368c:	cmp	r3, #0
   13690:	beq	13b60 <argp_parse@@Base+0xbfc>
   13694:	add	r4, r1, r0, lsl #2
   13698:	tst	r7, #8388608	; 0x800000
   1369c:	mov	r2, sl
   136a0:	ldr	r0, [r4, #32]!
   136a4:	str	r0, [fp, #-120]	; 0xffffff88
   136a8:	ldr	r0, [r4, #-8]
   136ac:	str	r0, [fp, #-128]	; 0xffffff80
   136b0:	ldr	r0, [r4, #-4]
   136b4:	str	r0, [fp, #-124]	; 0xffffff84
   136b8:	ldr	r0, [r4, #-20]	; 0xffffffec
   136bc:	str	r0, [fp, #-136]	; 0xffffff78
   136c0:	bic	r0, r7, #-16777216	; 0xff000000
   136c4:	ldr	r1, [fp, #-196]	; 0xffffff3c
   136c8:	orrne	r0, r0, #-16777216	; 0xff000000
   136cc:	blx	r3
   136d0:	mov	r1, #0
   136d4:	b	13768 <argp_parse@@Base+0x804>
   136d8:	ldr	r0, [fp, #-216]	; 0xffffff28
   136dc:	mov	r1, r7
   136e0:	bl	114b0 <strchr@plt>
   136e4:	cmp	r0, #0
   136e8:	beq	13780 <argp_parse@@Base+0x81c>
   136ec:	ldr	r1, [fp, #-172]	; 0xffffff54
   136f0:	ldr	r2, [fp, #-168]	; 0xffffff58
   136f4:	cmp	r1, r2
   136f8:	bcs	13780 <argp_parse@@Base+0x81c>
   136fc:	add	r1, r1, #24
   13700:	ldr	r3, [r1, #-16]
   13704:	cmp	r3, r0
   13708:	bhi	13724 <argp_parse@@Base+0x7c0>
   1370c:	add	r3, r1, #36	; 0x24
   13710:	add	r1, r1, #12
   13714:	cmp	r1, r2
   13718:	mov	r1, r3
   1371c:	bcc	13700 <argp_parse@@Base+0x79c>
   13720:	b	13780 <argp_parse@@Base+0x81c>
   13724:	ldr	r3, [r1, #-24]	; 0xffffffe8
   13728:	cmp	r3, #0
   1372c:	beq	13780 <argp_parse@@Base+0x81c>
   13730:	mov	r4, r1
   13734:	mov	r2, sl
   13738:	ldr	r0, [r4, #8]!
   1373c:	str	r0, [fp, #-120]	; 0xffffff88
   13740:	ldr	r0, [r1]
   13744:	str	r0, [fp, #-128]	; 0xffffff80
   13748:	ldr	r0, [r1, #4]
   1374c:	str	r0, [fp, #-124]	; 0xffffff84
   13750:	ldr	r0, [r1, #-12]
   13754:	str	r0, [fp, #-136]	; 0xffffff78
   13758:	mov	r0, r7
   1375c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   13760:	blx	r3
   13764:	mov	r1, #1
   13768:	ldr	r2, [fp, #-120]	; 0xffffff88
   1376c:	cmp	r0, #7
   13770:	str	r2, [r4]
   13774:	bne	133ec <argp_parse@@Base+0x488>
   13778:	cmp	r1, #0
   1377c:	beq	13b60 <argp_parse@@Base+0xbfc>
   13780:	movw	r1, #49407	; 0xc0ff
   13784:	movw	r3, #49140	; 0xbff4
   13788:	mov	r0, sl
   1378c:	mov	r2, r7
   13790:	movt	r1, #1
   13794:	movt	r3, #1
   13798:	bl	169bc <argp_error@@Base>
   1379c:	mov	r0, #0
   137a0:	b	137b4 <argp_parse@@Base+0x850>
   137a4:	mov	r1, r4
   137a8:	b	131b8 <argp_parse@@Base+0x254>
   137ac:	mov	r7, #1
   137b0:	mov	r0, #1
   137b4:	add	r1, r7, #1
   137b8:	clz	r1, r1
   137bc:	lsr	r1, r1, #5
   137c0:	orr	r1, r1, r0
   137c4:	mov	r0, #7
   137c8:	subs	r7, r0, #7
   137cc:	movne	r7, r0
   137d0:	cmp	r1, #0
   137d4:	moveq	r7, r0
   137d8:	cmp	r7, #0
   137dc:	beq	1387c <argp_parse@@Base+0x918>
   137e0:	cmp	r7, #0
   137e4:	beq	13a28 <argp_parse@@Base+0xac4>
   137e8:	cmp	r7, #7
   137ec:	bne	13804 <argp_parse@@Base+0x8a0>
   137f0:	ldr	r1, [fp, #-112]	; 0xffffff90
   137f4:	mov	r0, sl
   137f8:	mov	r2, #260	; 0x104
   137fc:	bl	16900 <argp_state_help@@Base>
   13800:	mov	r7, #7
   13804:	ldr	r4, [fp, #-172]	; 0xffffff54
   13808:	ldr	r0, [fp, #-168]	; 0xffffff58
   1380c:	cmp	r4, r0
   13810:	bcs	13acc <argp_parse@@Base+0xb68>
   13814:	movw	r1, #6
   13818:	movt	r1, #256	; 0x100
   1381c:	sub	r6, r1, #1
   13820:	b	13830 <argp_parse@@Base+0x8cc>
   13824:	add	r4, r4, #36	; 0x24
   13828:	cmp	r4, r0
   1382c:	bcs	13928 <argp_parse@@Base+0x9c4>
   13830:	ldr	r3, [r4]
   13834:	cmp	r3, #0
   13838:	beq	13824 <argp_parse@@Base+0x8c0>
   1383c:	ldr	r0, [r4, #32]
   13840:	mov	r1, #0
   13844:	mov	r2, sl
   13848:	str	r0, [fp, #-120]	; 0xffffff88
   1384c:	ldr	r0, [r4, #24]
   13850:	str	r0, [fp, #-128]	; 0xffffff80
   13854:	ldr	r0, [r4, #28]
   13858:	str	r0, [fp, #-124]	; 0xffffff84
   1385c:	ldr	r0, [r4, #12]
   13860:	str	r0, [fp, #-136]	; 0xffffff78
   13864:	mov	r0, r6
   13868:	blx	r3
   1386c:	ldr	r0, [fp, #-120]	; 0xffffff88
   13870:	str	r0, [r4, #32]
   13874:	ldr	r0, [fp, #-168]	; 0xffffff58
   13878:	b	13824 <argp_parse@@Base+0x8c0>
   1387c:	ldr	r1, [fp, #-152]	; 0xffffff68
   13880:	ldr	r0, [fp, #-144]	; 0xffffff70
   13884:	cmp	r0, r1
   13888:	bne	13930 <argp_parse@@Base+0x9cc>
   1388c:	ldr	r4, [fp, #-172]	; 0xffffff54
   13890:	ldr	r1, [fp, #-168]	; 0xffffff58
   13894:	mov	r0, #0
   13898:	cmp	r4, r1
   1389c:	bcs	13950 <argp_parse@@Base+0x9ec>
   138a0:	movw	r0, #6
   138a4:	mov	r7, #0
   138a8:	movt	r0, #256	; 0x100
   138ac:	sub	r6, r0, #4
   138b0:	mov	r0, #0
   138b4:	b	138fc <argp_parse@@Base+0x998>
   138b8:	ldr	r0, [r4, #32]
   138bc:	mov	r1, #0
   138c0:	mov	r2, sl
   138c4:	str	r0, [fp, #-120]	; 0xffffff88
   138c8:	ldr	r0, [r4, #24]
   138cc:	str	r0, [fp, #-128]	; 0xffffff80
   138d0:	ldr	r0, [r4, #28]
   138d4:	str	r7, [fp, #-136]	; 0xffffff78
   138d8:	str	r0, [fp, #-124]	; 0xffffff84
   138dc:	mov	r0, r6
   138e0:	blx	r3
   138e4:	ldr	r1, [fp, #-120]	; 0xffffff88
   138e8:	str	r1, [r4, #32]
   138ec:	ldr	r1, [fp, #-168]	; 0xffffff58
   138f0:	add	r4, r4, #36	; 0x24
   138f4:	cmp	r4, r1
   138f8:	bcs	1394c <argp_parse@@Base+0x9e8>
   138fc:	cmp	r0, #7
   13900:	cmpne	r0, #0
   13904:	bne	1394c <argp_parse@@Base+0x9e8>
   13908:	ldr	r2, [r4, #12]
   1390c:	cmp	r2, #0
   13910:	bne	138f0 <argp_parse@@Base+0x98c>
   13914:	ldr	r3, [r4]
   13918:	cmp	r3, #0
   1391c:	bne	138b8 <argp_parse@@Base+0x954>
   13920:	mov	r0, #7
   13924:	b	138f0 <argp_parse@@Base+0x98c>
   13928:	ldr	r4, [fp, #-172]	; 0xffffff54
   1392c:	b	13acc <argp_parse@@Base+0xb68>
   13930:	ldr	r1, [fp, #8]
   13934:	cmp	r1, #0
   13938:	beq	139e0 <argp_parse@@Base+0xa7c>
   1393c:	str	r0, [r1]
   13940:	b	13a28 <argp_parse@@Base+0xac4>
   13944:	mov	r1, #0
   13948:	b	137c8 <argp_parse@@Base+0x864>
   1394c:	ldr	r4, [fp, #-172]	; 0xffffff54
   13950:	sub	r7, r1, #36	; 0x24
   13954:	cmp	r7, r4
   13958:	bcc	139d4 <argp_parse@@Base+0xa70>
   1395c:	movw	r1, #6
   13960:	movt	r1, #256	; 0x100
   13964:	sub	r6, r1, #5
   13968:	b	139b4 <argp_parse@@Base+0xa50>
   1396c:	ldr	r0, [r7, #32]
   13970:	mov	r1, #0
   13974:	mov	r2, sl
   13978:	str	r0, [fp, #-120]	; 0xffffff88
   1397c:	ldr	r0, [r7, #24]
   13980:	str	r0, [fp, #-128]	; 0xffffff80
   13984:	ldr	r0, [r7, #28]
   13988:	str	r0, [fp, #-124]	; 0xffffff84
   1398c:	ldr	r0, [r7, #12]
   13990:	str	r0, [fp, #-136]	; 0xffffff78
   13994:	mov	r0, r6
   13998:	blx	r3
   1399c:	ldr	r1, [fp, #-120]	; 0xffffff88
   139a0:	str	r1, [r7, #32]
   139a4:	ldr	r4, [fp, #-172]	; 0xffffff54
   139a8:	sub	r7, r7, #36	; 0x24
   139ac:	cmp	r7, r4
   139b0:	bcc	139d4 <argp_parse@@Base+0xa70>
   139b4:	cmp	r0, #7
   139b8:	cmpne	r0, #0
   139bc:	bne	13a0c <argp_parse@@Base+0xaa8>
   139c0:	ldr	r3, [r7]
   139c4:	cmp	r3, #0
   139c8:	bne	1396c <argp_parse@@Base+0xa08>
   139cc:	mov	r0, #7
   139d0:	b	139a8 <argp_parse@@Base+0xa44>
   139d4:	subs	r7, r0, #7
   139d8:	movne	r7, r0
   139dc:	b	13a10 <argp_parse@@Base+0xaac>
   139e0:	ldrb	r0, [fp, #-140]	; 0xffffff74
   139e4:	tst	r0, #2
   139e8:	bne	137f0 <argp_parse@@Base+0x88c>
   139ec:	ldr	r0, [fp, #-112]	; 0xffffff90
   139f0:	cmp	r0, #0
   139f4:	beq	137f0 <argp_parse@@Base+0x88c>
   139f8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   139fc:	movw	r1, #49428	; 0xc114
   13a00:	movt	r1, #1
   13a04:	bl	114bc <fprintf@plt>
   13a08:	b	137f0 <argp_parse@@Base+0x88c>
   13a0c:	mov	r7, r0
   13a10:	ldr	r1, [fp, #8]
   13a14:	cmp	r1, #0
   13a18:	ldrne	r0, [fp, #-144]	; 0xffffff70
   13a1c:	strne	r0, [r1]
   13a20:	cmp	r7, #0
   13a24:	bne	137e8 <argp_parse@@Base+0x884>
   13a28:	ldr	r0, [fp, #-168]	; 0xffffff58
   13a2c:	ldr	r4, [fp, #-172]	; 0xffffff54
   13a30:	mov	r7, #0
   13a34:	sub	r5, r0, #36	; 0x24
   13a38:	cmp	r5, r4
   13a3c:	bcc	13acc <argp_parse@@Base+0xb68>
   13a40:	movw	r1, #6
   13a44:	mov	r0, #0
   13a48:	movt	r1, #256	; 0x100
   13a4c:	sub	r6, r1, #2
   13a50:	b	13a9c <argp_parse@@Base+0xb38>
   13a54:	ldr	r0, [r5, #32]
   13a58:	mov	r1, #0
   13a5c:	mov	r2, sl
   13a60:	str	r0, [fp, #-120]	; 0xffffff88
   13a64:	ldr	r0, [r5, #24]
   13a68:	str	r0, [fp, #-128]	; 0xffffff80
   13a6c:	ldr	r0, [r5, #28]
   13a70:	str	r0, [fp, #-124]	; 0xffffff84
   13a74:	ldr	r0, [r5, #12]
   13a78:	str	r0, [fp, #-136]	; 0xffffff78
   13a7c:	mov	r0, r6
   13a80:	blx	r3
   13a84:	ldr	r1, [fp, #-120]	; 0xffffff88
   13a88:	str	r1, [r5, #32]
   13a8c:	ldr	r4, [fp, #-172]	; 0xffffff54
   13a90:	sub	r5, r5, #36	; 0x24
   13a94:	cmp	r5, r4
   13a98:	bcc	13ac4 <argp_parse@@Base+0xb60>
   13a9c:	cmp	r0, #7
   13aa0:	cmpne	r0, #0
   13aa4:	bne	13abc <argp_parse@@Base+0xb58>
   13aa8:	ldr	r3, [r5]
   13aac:	cmp	r3, #0
   13ab0:	bne	13a54 <argp_parse@@Base+0xaf0>
   13ab4:	mov	r0, #7
   13ab8:	b	13a90 <argp_parse@@Base+0xb2c>
   13abc:	mov	r7, r0
   13ac0:	b	13acc <argp_parse@@Base+0xb68>
   13ac4:	subs	r7, r0, #7
   13ac8:	movne	r7, r0
   13acc:	ldr	r0, [fp, #-168]	; 0xffffff58
   13ad0:	sub	r6, r0, #36	; 0x24
   13ad4:	cmp	r6, r4
   13ad8:	bcc	13b44 <argp_parse@@Base+0xbe0>
   13adc:	movw	r0, #6
   13ae0:	movt	r0, #256	; 0x100
   13ae4:	add	r5, r0, #1
   13ae8:	b	13af8 <argp_parse@@Base+0xb94>
   13aec:	sub	r6, r6, #36	; 0x24
   13af0:	cmp	r6, r4
   13af4:	bcc	13b44 <argp_parse@@Base+0xbe0>
   13af8:	ldr	r3, [r6]
   13afc:	cmp	r3, #0
   13b00:	beq	13aec <argp_parse@@Base+0xb88>
   13b04:	ldr	r0, [r6, #32]
   13b08:	mov	r1, #0
   13b0c:	mov	r2, sl
   13b10:	str	r0, [fp, #-120]	; 0xffffff88
   13b14:	ldr	r0, [r6, #24]
   13b18:	str	r0, [fp, #-128]	; 0xffffff80
   13b1c:	ldr	r0, [r6, #28]
   13b20:	str	r0, [fp, #-124]	; 0xffffff84
   13b24:	ldr	r0, [r6, #12]
   13b28:	str	r0, [fp, #-136]	; 0xffffff78
   13b2c:	mov	r0, r5
   13b30:	blx	r3
   13b34:	ldr	r0, [fp, #-120]	; 0xffffff88
   13b38:	str	r0, [r6, #32]
   13b3c:	ldr	r4, [fp, #-172]	; 0xffffff54
   13b40:	b	13aec <argp_parse@@Base+0xb88>
   13b44:	ldr	r0, [fp, #-100]	; 0xffffff9c
   13b48:	bl	14240 <argp_parse@@Base+0x12dc>
   13b4c:	cmp	r7, #7
   13b50:	movweq	r7, #22
   13b54:	mov	r0, r7
   13b58:	sub	sp, fp, #28
   13b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b60:	ldr	r0, [fp, #-212]	; 0xffffff2c
   13b64:	ldr	r1, [r0, #12]
   13b68:	cmp	r1, r7
   13b6c:	beq	13b9c <argp_parse@@Base+0xc38>
   13b70:	ldr	r1, [r0]
   13b74:	cmp	r1, #0
   13b78:	beq	13b9c <argp_parse@@Base+0xc38>
   13b7c:	add	r1, r0, #16
   13b80:	ldr	r0, [r0, #28]
   13b84:	cmp	r0, r7
   13b88:	mov	r0, r1
   13b8c:	bne	13b70 <argp_parse@@Base+0xc0c>
   13b90:	b	13ba0 <argp_parse@@Base+0xc3c>
   13b94:	mov	r1, #0
   13b98:	b	137c4 <argp_parse@@Base+0x860>
   13b9c:	mov	r1, r0
   13ba0:	ldr	r0, [r1]
   13ba4:	movw	r1, #49415	; 0xc107
   13ba8:	movw	r3, #49140	; 0xbff4
   13bac:	movw	r2, #49424	; 0xc110
   13bb0:	movt	r1, #1
   13bb4:	movt	r3, #1
   13bb8:	movt	r2, #1
   13bbc:	cmp	r0, #0
   13bc0:	movne	r2, r0
   13bc4:	mov	r0, sl
   13bc8:	b	13798 <argp_parse@@Base+0x834>
   13bcc:	mov	ip, r0
   13bd0:	mov	r0, #0
   13bd4:	cmp	r1, #0
   13bd8:	beq	13c08 <argp_parse@@Base+0xca4>
   13bdc:	ldr	r3, [r1, #52]	; 0x34
   13be0:	ldr	r1, [r3, #48]	; 0x30
   13be4:	ldr	r3, [r3, #52]	; 0x34
   13be8:	cmp	r1, r3
   13bec:	bxcs	lr
   13bf0:	ldr	r2, [r1, #4]
   13bf4:	cmp	r2, ip
   13bf8:	beq	13c04 <argp_parse@@Base+0xca0>
   13bfc:	add	r1, r1, #36	; 0x24
   13c00:	b	13be8 <argp_parse@@Base+0xc84>
   13c04:	ldr	r0, [r1, #24]
   13c08:	bx	lr
   13c0c:	push	{r4, r5, r6, sl, fp, lr}
   13c10:	add	fp, sp, #16
   13c14:	mov	r5, r2
   13c18:	mov	r6, r1
   13c1c:	mov	r4, #7
   13c20:	cmn	r0, #3
   13c24:	bgt	13c48 <argp_parse@@Base+0xce4>
   13c28:	cmn	r0, #4
   13c2c:	beq	13c74 <argp_parse@@Base+0xd10>
   13c30:	cmn	r0, #3
   13c34:	bne	13d10 <argp_parse@@Base+0xdac>
   13c38:	ldr	r1, [r5, #48]	; 0x30
   13c3c:	mov	r0, r5
   13c40:	movw	r2, #513	; 0x201
   13c44:	b	13c64 <argp_parse@@Base+0xd00>
   13c48:	cmn	r0, #2
   13c4c:	beq	13cd0 <argp_parse@@Base+0xd6c>
   13c50:	cmp	r0, #63	; 0x3f
   13c54:	bne	13d10 <argp_parse@@Base+0xdac>
   13c58:	ldr	r1, [r5, #48]	; 0x30
   13c5c:	mov	r0, r5
   13c60:	movw	r2, #634	; 0x27a
   13c64:	bl	16900 <argp_state_help@@Base>
   13c68:	mov	r4, #0
   13c6c:	mov	r0, r4
   13c70:	pop	{r4, r5, r6, sl, fp, pc}
   13c74:	movw	r0, #49342	; 0xc0be
   13c78:	cmp	r6, #0
   13c7c:	mov	r1, #0
   13c80:	mov	r2, #10
   13c84:	mov	r4, #0
   13c88:	movt	r0, #1
   13c8c:	movne	r0, r6
   13c90:	bl	1133c <strtol@plt>
   13c94:	movw	r5, #2260	; 0x8d4
   13c98:	movt	r5, #3
   13c9c:	str	r0, [r5]
   13ca0:	ldr	r0, [r5]
   13ca4:	subs	r0, r0, #1
   13ca8:	str	r0, [r5]
   13cac:	blt	13d10 <argp_parse@@Base+0xdac>
   13cb0:	mov	r0, #1
   13cb4:	bl	113cc <sleep@plt>
   13cb8:	ldr	r0, [r5]
   13cbc:	sub	r1, r0, #1
   13cc0:	cmp	r0, #0
   13cc4:	str	r1, [r5]
   13cc8:	bgt	13cb0 <argp_parse@@Base+0xd4c>
   13ccc:	b	13d10 <argp_parse@@Base+0xdac>
   13cd0:	movw	r0, #2228	; 0x8b4
   13cd4:	movt	r0, #3
   13cd8:	str	r6, [r0]
   13cdc:	mov	r0, r6
   13ce0:	bl	141bc <argp_parse@@Base+0x1258>
   13ce4:	movw	r1, #2224	; 0x8b0
   13ce8:	str	r0, [r5, #40]	; 0x28
   13cec:	mov	r4, #0
   13cf0:	movt	r1, #3
   13cf4:	str	r0, [r1]
   13cf8:	ldr	r0, [r5, #16]
   13cfc:	and	r0, r0, #3
   13d00:	cmp	r0, #1
   13d04:	bne	13d10 <argp_parse@@Base+0xdac>
   13d08:	ldr	r0, [r5, #8]
   13d0c:	str	r6, [r0]
   13d10:	mov	r0, r4
   13d14:	pop	{r4, r5, r6, sl, fp, pc}
   13d18:	push	{r4, sl, fp, lr}
   13d1c:	add	fp, sp, #8
   13d20:	mov	r1, r0
   13d24:	mov	r0, #7
   13d28:	cmp	r1, #86	; 0x56
   13d2c:	popne	{r4, sl, fp, pc}
   13d30:	movw	r0, #2264	; 0x8d8
   13d34:	mov	r4, r2
   13d38:	movt	r0, #3
   13d3c:	ldr	r2, [r0]
   13d40:	cmp	r2, #0
   13d44:	beq	13d58 <argp_parse@@Base+0xdf4>
   13d48:	ldr	r0, [r4, #48]	; 0x30
   13d4c:	mov	r1, r4
   13d50:	blx	r2
   13d54:	b	13d98 <argp_parse@@Base+0xe34>
   13d58:	movw	r0, #2368	; 0x940
   13d5c:	movt	r0, #3
   13d60:	ldr	r2, [r0]
   13d64:	cmp	r2, #0
   13d68:	beq	13d80 <argp_parse@@Base+0xe1c>
   13d6c:	ldr	r0, [r4, #48]	; 0x30
   13d70:	movw	r1, #49572	; 0xc1a4
   13d74:	movt	r1, #1
   13d78:	bl	114bc <fprintf@plt>
   13d7c:	b	13d98 <argp_parse@@Base+0xe34>
   13d80:	movw	r1, #50628	; 0xc5c4
   13d84:	movw	r2, #49369	; 0xc0d9
   13d88:	mov	r0, r4
   13d8c:	movt	r1, #1
   13d90:	movt	r2, #1
   13d94:	bl	169bc <argp_error@@Base>
   13d98:	ldrb	r1, [r4, #16]
   13d9c:	mov	r0, #0
   13da0:	tst	r1, #32
   13da4:	beq	13dac <argp_parse@@Base+0xe48>
   13da8:	pop	{r4, sl, fp, pc}
   13dac:	mov	r0, #0
   13db0:	bl	1148c <exit@plt>
   13db4:	push	{r4, r5, fp, lr}
   13db8:	add	fp, sp, #8
   13dbc:	ldr	r2, [r0]
   13dc0:	ldr	ip, [r0, #16]
   13dc4:	mov	r4, r1
   13dc8:	cmp	r2, #0
   13dcc:	beq	13e38 <argp_parse@@Base+0xed4>
   13dd0:	ldr	r0, [r4, #8]
   13dd4:	mov	r3, #0
   13dd8:	add	r0, r0, #1
   13ddc:	str	r0, [r4, #8]
   13de0:	mov	r0, #0
   13de4:	b	13df0 <argp_parse@@Base+0xe8c>
   13de8:	add	r3, r3, #3
   13dec:	add	r0, r0, #1
   13df0:	add	r5, r2, r3, lsl #3
   13df4:	ldr	r1, [r5, #4]
   13df8:	cmp	r1, #0
   13dfc:	bne	13de8 <argp_parse@@Base+0xe84>
   13e00:	ldr	r1, [r2, r3, lsl #3]
   13e04:	cmp	r1, #0
   13e08:	bne	13de8 <argp_parse@@Base+0xe84>
   13e0c:	ldr	r1, [r5, #16]
   13e10:	cmp	r1, #0
   13e14:	bne	13de8 <argp_parse@@Base+0xe84>
   13e18:	ldr	r1, [r5, #20]
   13e1c:	cmp	r1, #0
   13e20:	bne	13de8 <argp_parse@@Base+0xe84>
   13e24:	ldr	r1, [r4]
   13e28:	mov	r2, r4
   13e2c:	add	r1, r1, r3
   13e30:	str	r1, [r2], #4
   13e34:	b	13e4c <argp_parse@@Base+0xee8>
   13e38:	ldr	r0, [r0, #4]
   13e3c:	cmp	r0, #0
   13e40:	beq	13e58 <argp_parse@@Base+0xef4>
   13e44:	add	r2, r4, #8
   13e48:	mov	r0, #1
   13e4c:	ldr	r1, [r2]
   13e50:	add	r0, r1, r0
   13e54:	str	r0, [r2]
   13e58:	cmp	ip, #0
   13e5c:	beq	13e90 <argp_parse@@Base+0xf2c>
   13e60:	ldr	r0, [ip]
   13e64:	cmp	r0, #0
   13e68:	popeq	{r4, r5, fp, pc}
   13e6c:	add	r5, ip, #16
   13e70:	mov	r1, r4
   13e74:	bl	13db4 <argp_parse@@Base+0xe50>
   13e78:	ldr	r0, [r4, #12]
   13e7c:	add	r0, r0, #1
   13e80:	str	r0, [r4, #12]
   13e84:	ldr	r0, [r5], #16
   13e88:	cmp	r0, #0
   13e8c:	bne	13e70 <argp_parse@@Base+0xf0c>
   13e90:	pop	{r4, r5, fp, pc}
   13e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13e98:	add	fp, sp, #28
   13e9c:	sub	sp, sp, #28
   13ea0:	ldr	sl, [r0]
   13ea4:	ldr	r5, [r0, #16]
   13ea8:	ldr	r6, [fp, #8]
   13eac:	mov	r7, r3
   13eb0:	cmp	sl, #0
   13eb4:	beq	14084 <argp_parse@@Base+0x1120>
   13eb8:	str	r0, [sp, #8]
   13ebc:	add	r0, sp, #16
   13ec0:	mov	r8, sl
   13ec4:	str	r2, [sp, #12]
   13ec8:	stm	r0, {r1, r5, r7}
   13ecc:	b	13f40 <argp_parse@@Base+0xfdc>
   13ed0:	ldr	r0, [r6, #8]
   13ed4:	str	r5, [r0]
   13ed8:	ldr	r1, [sl, #8]
   13edc:	cmp	r1, #0
   13ee0:	beq	14064 <argp_parse@@Base+0x1100>
   13ee4:	ldrb	r1, [sl, #12]
   13ee8:	tst	r1, #1
   13eec:	mov	r1, #2
   13ef0:	movweq	r1, #1
   13ef4:	mov	r5, #0
   13ef8:	stmib	r0, {r1, r5}
   13efc:	ldr	r1, [r8, #4]
   13f00:	ldr	r2, [r7, #48]	; 0x30
   13f04:	ldr	r3, [sp, #24]
   13f08:	cmp	r1, #0
   13f0c:	sub	r2, r3, r2
   13f10:	mov	r3, #956301312	; 0x39000000
   13f14:	ldreq	r1, [sl, #4]
   13f18:	lsr	r2, r2, #2
   13f1c:	mul	r2, r2, r3
   13f20:	bic	r1, r1, #-16777216	; 0xff000000
   13f24:	orr	r1, r2, r1
   13f28:	add	r1, r1, #16777216	; 0x1000000
   13f2c:	str	r1, [r0, #12]
   13f30:	add	r1, r0, #16
   13f34:	str	r1, [r6, #8]
   13f38:	str	r5, [r0, #16]
   13f3c:	add	r8, r8, #24
   13f40:	ldr	r5, [r8, #4]
   13f44:	cmp	r5, #0
   13f48:	bne	13f70 <argp_parse@@Base+0x100c>
   13f4c:	ldr	r0, [r8]
   13f50:	cmp	r0, #0
   13f54:	bne	13f70 <argp_parse@@Base+0x100c>
   13f58:	ldr	r0, [r8, #16]
   13f5c:	cmp	r0, #0
   13f60:	bne	13f70 <argp_parse@@Base+0x100c>
   13f64:	ldr	r0, [r8, #20]
   13f68:	cmp	r0, #0
   13f6c:	beq	1406c <argp_parse@@Base+0x1108>
   13f70:	ldr	r0, [r8, #12]
   13f74:	tst	r0, #4
   13f78:	moveq	sl, r8
   13f7c:	ldrb	r1, [sl, #12]
   13f80:	tst	r1, #8
   13f84:	bne	13f3c <argp_parse@@Base+0xfd8>
   13f88:	sub	r1, r5, #1
   13f8c:	cmp	r1, #254	; 0xfe
   13f90:	bhi	14010 <argp_parse@@Base+0x10ac>
   13f94:	ands	r0, r0, #8
   13f98:	bne	14010 <argp_parse@@Base+0x10ac>
   13f9c:	bl	11480 <__ctype_b_loc@plt>
   13fa0:	ldr	r0, [r0]
   13fa4:	add	r0, r0, r5, lsl #1
   13fa8:	ldrb	r0, [r0, #1]
   13fac:	tst	r0, #64	; 0x40
   13fb0:	beq	14010 <argp_parse@@Base+0x10ac>
   13fb4:	ldr	r0, [r6, #4]
   13fb8:	add	r1, r0, #1
   13fbc:	str	r1, [r6, #4]
   13fc0:	strb	r5, [r0]
   13fc4:	ldr	r0, [sl, #8]
   13fc8:	cmp	r0, #0
   13fcc:	beq	14004 <argp_parse@@Base+0x10a0>
   13fd0:	ldr	r0, [r6, #4]
   13fd4:	add	r1, r0, #1
   13fd8:	str	r1, [r6, #4]
   13fdc:	mov	r1, #58	; 0x3a
   13fe0:	strb	r1, [r0]
   13fe4:	ldrb	r0, [sl, #12]
   13fe8:	tst	r0, #1
   13fec:	beq	14004 <argp_parse@@Base+0x10a0>
   13ff0:	ldr	r0, [r6, #4]
   13ff4:	add	r1, r0, #1
   13ff8:	str	r1, [r6, #4]
   13ffc:	mov	r1, #58	; 0x3a
   14000:	strb	r1, [r0]
   14004:	ldr	r0, [r6, #4]
   14008:	mov	r1, #0
   1400c:	strb	r1, [r0]
   14010:	ldr	r5, [r8]
   14014:	cmp	r5, #0
   14018:	beq	13f3c <argp_parse@@Base+0xfd8>
   1401c:	ldr	r7, [r6]
   14020:	ldr	r9, [r7, #8]
   14024:	ldr	r0, [r9]
   14028:	cmp	r0, #0
   1402c:	beq	13ed0 <argp_parse@@Base+0xf6c>
   14030:	mov	r4, r9
   14034:	mov	r1, r5
   14038:	bl	11330 <strcmp@plt>
   1403c:	cmp	r0, #0
   14040:	beq	14054 <argp_parse@@Base+0x10f0>
   14044:	ldr	r0, [r4, #16]!
   14048:	cmp	r0, #0
   1404c:	bne	14034 <argp_parse@@Base+0x10d0>
   14050:	b	13ed0 <argp_parse@@Base+0xf6c>
   14054:	sub	r0, r4, r9
   14058:	cmn	r0, #1
   1405c:	bgt	13f3c <argp_parse@@Base+0xfd8>
   14060:	b	13ed0 <argp_parse@@Base+0xf6c>
   14064:	mov	r1, #0
   14068:	b	13ef4 <argp_parse@@Base+0xf90>
   1406c:	ldr	r0, [sp, #8]
   14070:	add	r7, sp, #16
   14074:	ldr	r2, [sp, #12]
   14078:	ldm	r7, {r1, r5, r7}
   1407c:	ldr	r3, [r0, #4]
   14080:	b	14090 <argp_parse@@Base+0x112c>
   14084:	ldr	r3, [r0, #4]
   14088:	cmp	r3, #0
   1408c:	beq	14134 <argp_parse@@Base+0x11d0>
   14090:	str	r0, [r7, #4]
   14094:	str	r3, [r7]
   14098:	mov	r0, #0
   1409c:	cmp	r5, #0
   140a0:	add	ip, r7, #12
   140a4:	ldr	r3, [r6, #4]
   140a8:	str	r0, [r7, #32]
   140ac:	str	r0, [r7, #24]
   140b0:	stm	ip, {r0, r1, r2}
   140b4:	str	r0, [r7, #28]
   140b8:	str	r3, [r7, #8]
   140bc:	beq	140e4 <argp_parse@@Base+0x1180>
   140c0:	ldr	r1, [r5, r0, lsl #2]
   140c4:	add	r0, r0, #4
   140c8:	cmp	r1, #0
   140cc:	bne	140c0 <argp_parse@@Base+0x115c>
   140d0:	ldr	r1, [r6, #12]
   140d4:	add	r0, r1, r0
   140d8:	str	r1, [r7, #28]
   140dc:	sub	r0, r0, #4
   140e0:	str	r0, [r6, #12]
   140e4:	add	r3, r7, #36	; 0x24
   140e8:	cmp	r5, #0
   140ec:	beq	14128 <argp_parse@@Base+0x11c4>
   140f0:	ldr	r0, [r5]
   140f4:	cmp	r0, #0
   140f8:	beq	14128 <argp_parse@@Base+0x11c4>
   140fc:	add	r4, r5, #16
   14100:	mov	r5, #0
   14104:	mov	r1, r7
   14108:	mov	r2, r5
   1410c:	str	r6, [sp]
   14110:	bl	13e94 <argp_parse@@Base+0xf30>
   14114:	mov	r3, r0
   14118:	ldr	r0, [r4, r5, lsl #4]
   1411c:	add	r5, r5, #1
   14120:	cmp	r0, #0
   14124:	bne	14104 <argp_parse@@Base+0x11a0>
   14128:	mov	r0, r3
   1412c:	sub	sp, fp, #28
   14130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14134:	mov	r3, r7
   14138:	mov	r7, #0
   1413c:	cmp	r5, #0
   14140:	bne	140f0 <argp_parse@@Base+0x118c>
   14144:	b	14128 <argp_parse@@Base+0x11c4>
   14148:	movw	r2, #2268	; 0x8dc
   1414c:	movt	r2, #3
   14150:	str	r0, [r2]
   14154:	movw	r0, #2264	; 0x8d8
   14158:	movw	r2, #16760	; 0x4178
   1415c:	movt	r0, #3
   14160:	movt	r2, #1
   14164:	str	r2, [r0]
   14168:	movw	r0, #2272	; 0x8e0
   1416c:	movt	r0, #3
   14170:	str	r1, [r0]
   14174:	bx	lr
   14178:	push	{fp, lr}
   1417c:	mov	fp, sp
   14180:	sub	sp, sp, #8
   14184:	movw	r2, #2272	; 0x8e0
   14188:	movw	r1, #2268	; 0x8dc
   1418c:	movw	r3, #49466	; 0xc13a
   14190:	movt	r2, #3
   14194:	movt	r1, #3
   14198:	movt	r3, #1
   1419c:	ldr	r2, [r2]
   141a0:	ldr	r1, [r1]
   141a4:	str	r2, [sp]
   141a8:	movw	r2, #49452	; 0xc12c
   141ac:	movt	r2, #1
   141b0:	bl	14a38 <_obstack_memory_used@@Base+0x384>
   141b4:	mov	sp, fp
   141b8:	pop	{fp, pc}
   141bc:	sub	r0, r0, #1
   141c0:	ldrb	r3, [r0, #1]!
   141c4:	cmp	r3, #47	; 0x2f
   141c8:	beq	141c0 <argp_parse@@Base+0x125c>
   141cc:	mov	r2, #0
   141d0:	mov	r1, r0
   141d4:	b	141e0 <argp_parse@@Base+0x127c>
   141d8:	ldrb	r3, [r1, #1]!
   141dc:	mov	r2, #1
   141e0:	uxtb	r3, r3
   141e4:	cmp	r3, #47	; 0x2f
   141e8:	beq	141d8 <argp_parse@@Base+0x1274>
   141ec:	cmp	r3, #0
   141f0:	bxeq	lr
   141f4:	tst	r2, #1
   141f8:	mov	r2, #0
   141fc:	movne	r0, r1
   14200:	ldrb	r3, [r1, #1]!
   14204:	b	141e0 <argp_parse@@Base+0x127c>
   14208:	push	{r4, sl, fp, lr}
   1420c:	add	fp, sp, #8
   14210:	mov	r4, r0
   14214:	bl	114a4 <strlen@plt>
   14218:	mov	r1, r0
   1421c:	sub	r2, r4, #1
   14220:	mov	r0, r1
   14224:	cmp	r1, #2
   14228:	bcc	1423c <argp_parse@@Base+0x12d8>
   1422c:	ldrb	r3, [r2, r0]
   14230:	sub	r1, r0, #1
   14234:	cmp	r3, #47	; 0x2f
   14238:	beq	14220 <argp_parse@@Base+0x12bc>
   1423c:	pop	{r4, sl, fp, pc}
   14240:	push	{r4, r5, r6, sl, fp, lr}
   14244:	add	fp, sp, #16
   14248:	mov	r4, r0
   1424c:	bl	114c8 <__errno_location@plt>
   14250:	ldr	r6, [r0]
   14254:	mov	r5, r0
   14258:	mov	r0, r4
   1425c:	bl	1136c <free@plt>
   14260:	str	r6, [r5]
   14264:	pop	{r4, r5, r6, sl, fp, pc}
   14268:	push	{fp, lr}
   1426c:	mov	fp, sp
   14270:	sub	sp, sp, #16
   14274:	mov	ip, #0
   14278:	str	ip, [sp, #8]
   1427c:	str	ip, [sp, #4]
   14280:	ldr	ip, [fp, #8]
   14284:	str	ip, [sp]
   14288:	bl	19c64 <argp_failure@@Base+0x3164>
   1428c:	mov	sp, fp
   14290:	pop	{fp, pc}
   14294:	push	{fp, lr}
   14298:	mov	fp, sp
   1429c:	sub	sp, sp, #16
   142a0:	mov	ip, #0
   142a4:	str	ip, [sp, #12]
   142a8:	str	ip, [sp, #4]
   142ac:	ldr	ip, [fp, #12]
   142b0:	str	ip, [sp, #8]
   142b4:	ldr	ip, [fp, #8]
   142b8:	str	ip, [sp]
   142bc:	bl	189c8 <argp_failure@@Base+0x1ec8>
   142c0:	mov	sp, fp
   142c4:	pop	{fp, pc}
   142c8:	push	{fp, lr}
   142cc:	mov	fp, sp
   142d0:	sub	sp, sp, #16
   142d4:	mov	ip, #0
   142d8:	str	ip, [sp, #8]
   142dc:	mov	ip, #1
   142e0:	str	ip, [sp, #4]
   142e4:	ldr	ip, [fp, #8]
   142e8:	str	ip, [sp]
   142ec:	bl	19c64 <argp_failure@@Base+0x3164>
   142f0:	mov	sp, fp
   142f4:	pop	{fp, pc}
   142f8:	push	{fp, lr}
   142fc:	mov	fp, sp
   14300:	sub	sp, sp, #16
   14304:	mov	ip, #0
   14308:	str	ip, [sp, #12]
   1430c:	mov	ip, #1
   14310:	str	ip, [sp, #4]
   14314:	ldr	ip, [fp, #12]
   14318:	str	ip, [sp, #8]
   1431c:	ldr	ip, [fp, #8]
   14320:	str	ip, [sp]
   14324:	bl	189c8 <argp_failure@@Base+0x1ec8>
   14328:	mov	sp, fp
   1432c:	pop	{fp, pc}

00014330 <_obstack_begin@@Base>:
   14330:	push	{r4, r5, r6, sl, fp, lr}
   14334:	add	fp, sp, #16
   14338:	cmp	r1, #0
   1433c:	mov	r4, r0
   14340:	str	r3, [r0, #28]
   14344:	mov	r5, r2
   14348:	movweq	r1, #4072	; 0xfe8
   1434c:	cmp	r2, #0
   14350:	str	r1, [r0]
   14354:	ldr	r0, [fp, #8]
   14358:	movweq	r5, #8
   1435c:	sub	r6, r5, #1
   14360:	str	r0, [r4, #32]
   14364:	str	r6, [r4, #24]
   14368:	ldrb	r0, [r4, #40]	; 0x28
   1436c:	and	r0, r0, #254	; 0xfe
   14370:	strb	r0, [r4, #40]	; 0x28
   14374:	mov	r0, r1
   14378:	blx	r3
   1437c:	cmp	r0, #0
   14380:	str	r0, [r4, #4]
   14384:	addne	r1, r0, r6
   14388:	rsbne	r2, r5, #0
   1438c:	addne	r1, r1, #8
   14390:	andne	r1, r1, r2
   14394:	strne	r1, [r4, #12]
   14398:	strne	r1, [r4, #8]
   1439c:	ldrne	r1, [r4]
   143a0:	addne	r1, r0, r1
   143a4:	strne	r1, [r0]
   143a8:	strne	r1, [r4, #16]
   143ac:	movne	r1, #0
   143b0:	strne	r1, [r0, #4]
   143b4:	ldrbne	r0, [r4, #40]	; 0x28
   143b8:	andne	r0, r0, #249	; 0xf9
   143bc:	strbne	r0, [r4, #40]	; 0x28
   143c0:	movne	r0, #1
   143c4:	popne	{r4, r5, r6, sl, fp, pc}
   143c8:	movw	r0, #2156	; 0x86c
   143cc:	movt	r0, #3
   143d0:	ldr	r0, [r0]
   143d4:	blx	r0

000143d8 <_obstack_begin_1@@Base>:
   143d8:	push	{r4, r5, r6, sl, fp, lr}
   143dc:	add	fp, sp, #16
   143e0:	cmp	r1, #0
   143e4:	mov	r5, r2
   143e8:	mov	r4, r0
   143ec:	str	r3, [r0, #28]
   143f0:	ldr	r2, [fp, #8]
   143f4:	movweq	r1, #4072	; 0xfe8
   143f8:	cmp	r5, #0
   143fc:	str	r1, [r0]
   14400:	ldr	r0, [fp, #12]
   14404:	movweq	r5, #8
   14408:	sub	r6, r5, #1
   1440c:	str	r0, [r4, #36]	; 0x24
   14410:	str	r2, [r4, #32]
   14414:	str	r6, [r4, #24]
   14418:	ldrb	r2, [r4, #40]	; 0x28
   1441c:	orr	r2, r2, #1
   14420:	strb	r2, [r4, #40]	; 0x28
   14424:	blx	r3
   14428:	cmp	r0, #0
   1442c:	str	r0, [r4, #4]
   14430:	addne	r1, r0, r6
   14434:	rsbne	r2, r5, #0
   14438:	addne	r1, r1, #8
   1443c:	andne	r1, r1, r2
   14440:	strne	r1, [r4, #12]
   14444:	strne	r1, [r4, #8]
   14448:	ldrne	r1, [r4]
   1444c:	addne	r1, r0, r1
   14450:	strne	r1, [r0]
   14454:	strne	r1, [r4, #16]
   14458:	movne	r1, #0
   1445c:	strne	r1, [r0, #4]
   14460:	ldrbne	r0, [r4, #40]	; 0x28
   14464:	andne	r0, r0, #249	; 0xf9
   14468:	strbne	r0, [r4, #40]	; 0x28
   1446c:	movne	r0, #1
   14470:	popne	{r4, r5, r6, sl, fp, pc}
   14474:	movw	r0, #2156	; 0x86c
   14478:	movt	r0, #3
   1447c:	ldr	r0, [r0]
   14480:	blx	r0

00014484 <_obstack_newchunk@@Base>:
   14484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14488:	add	fp, sp, #28
   1448c:	sub	sp, sp, #4
   14490:	mov	r4, r0
   14494:	ldr	r2, [r0]
   14498:	ldr	r0, [r0, #8]
   1449c:	ldr	r3, [r4, #12]
   144a0:	sub	r9, r3, r0
   144a4:	ldr	r0, [r4, #24]
   144a8:	mov	r3, #0
   144ac:	add	r1, r9, r1
   144b0:	adds	r6, r1, r0
   144b4:	adc	r0, r3, #0
   144b8:	mov	r3, #100	; 0x64
   144bc:	add	r3, r3, r9, lsr #3
   144c0:	adds	r7, r3, r6
   144c4:	movcs	r7, r6
   144c8:	cmp	r7, r2
   144cc:	movcc	r7, r2
   144d0:	cmp	r1, r9
   144d4:	bcc	145cc <_obstack_newchunk@@Base+0x148>
   144d8:	cmp	r0, #0
   144dc:	bne	145cc <_obstack_newchunk@@Base+0x148>
   144e0:	ldrb	r0, [r4, #40]	; 0x28
   144e4:	ldr	r8, [r4, #4]
   144e8:	tst	r0, #1
   144ec:	bne	14500 <_obstack_newchunk@@Base+0x7c>
   144f0:	ldr	r1, [r4, #28]
   144f4:	mov	r0, r7
   144f8:	blx	r1
   144fc:	b	14510 <_obstack_newchunk@@Base+0x8c>
   14500:	ldr	r2, [r4, #28]
   14504:	ldr	r0, [r4, #36]	; 0x24
   14508:	mov	r1, r7
   1450c:	blx	r2
   14510:	mov	r6, r0
   14514:	cmp	r0, #0
   14518:	beq	145cc <_obstack_newchunk@@Base+0x148>
   1451c:	add	r0, r6, r7
   14520:	str	r6, [r4, #4]
   14524:	str	r8, [r6, #4]
   14528:	mov	r2, r9
   1452c:	str	r0, [r4, #16]
   14530:	str	r0, [r6]
   14534:	ldr	r5, [r4, #24]
   14538:	ldr	sl, [r4, #8]
   1453c:	add	r0, r6, r5
   14540:	mov	r1, sl
   14544:	add	r0, r0, #8
   14548:	bic	r7, r0, r5
   1454c:	mov	r0, r7
   14550:	bl	113a8 <memcpy@plt>
   14554:	ldrb	r0, [r4, #40]	; 0x28
   14558:	tst	r0, #2
   1455c:	bne	145ac <_obstack_newchunk@@Base+0x128>
   14560:	add	r1, r8, r5
   14564:	mvn	r0, r5
   14568:	add	r1, r1, #8
   1456c:	and	r0, r1, r0
   14570:	cmp	sl, r0
   14574:	bne	145ac <_obstack_newchunk@@Base+0x128>
   14578:	ldr	r0, [r8, #4]
   1457c:	str	r0, [r6, #4]
   14580:	ldrb	r0, [r4, #40]	; 0x28
   14584:	tst	r0, #1
   14588:	bne	1459c <_obstack_newchunk@@Base+0x118>
   1458c:	ldr	r1, [r4, #32]
   14590:	mov	r0, r8
   14594:	blx	r1
   14598:	b	145ac <_obstack_newchunk@@Base+0x128>
   1459c:	ldr	r2, [r4, #32]
   145a0:	ldr	r0, [r4, #36]	; 0x24
   145a4:	mov	r1, r8
   145a8:	blx	r2
   145ac:	add	r0, r7, r9
   145b0:	str	r7, [r4, #8]
   145b4:	str	r0, [r4, #12]
   145b8:	ldrb	r0, [r4, #40]	; 0x28
   145bc:	and	r0, r0, #253	; 0xfd
   145c0:	strb	r0, [r4, #40]	; 0x28
   145c4:	sub	sp, fp, #28
   145c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   145cc:	movw	r0, #2156	; 0x86c
   145d0:	movt	r0, #3
   145d4:	ldr	r0, [r0]
   145d8:	blx	r0

000145dc <_obstack_allocated_p@@Base>:
   145dc:	ldr	r2, [r0, #4]
   145e0:	mov	r0, #0
   145e4:	b	145ec <_obstack_allocated_p@@Base+0x10>
   145e8:	ldr	r2, [r2, #4]
   145ec:	cmp	r2, #0
   145f0:	bxeq	lr
   145f4:	cmp	r2, r1
   145f8:	bcs	145e8 <_obstack_allocated_p@@Base+0xc>
   145fc:	ldr	r3, [r2]
   14600:	cmp	r3, r1
   14604:	bcc	145e8 <_obstack_allocated_p@@Base+0xc>
   14608:	mov	r0, #1
   1460c:	bx	lr

00014610 <_obstack_free@@Base>:
   14610:	push	{r4, r5, r6, sl, fp, lr}
   14614:	add	fp, sp, #16
   14618:	mov	r5, r1
   1461c:	ldr	r1, [r0, #4]
   14620:	cmp	r1, #0
   14624:	beq	14690 <_obstack_free@@Base+0x80>
   14628:	mov	r4, r0
   1462c:	cmp	r1, r5
   14630:	bcs	14670 <_obstack_free@@Base+0x60>
   14634:	b	14664 <_obstack_free@@Base+0x54>
   14638:	ldr	r2, [r4, #32]
   1463c:	mov	r0, r1
   14640:	blx	r2
   14644:	ldrb	r0, [r4, #40]	; 0x28
   14648:	cmp	r6, #0
   1464c:	mov	r1, r6
   14650:	orr	r0, r0, #2
   14654:	strb	r0, [r4, #40]	; 0x28
   14658:	beq	14690 <_obstack_free@@Base+0x80>
   1465c:	cmp	r1, r5
   14660:	bcs	14670 <_obstack_free@@Base+0x60>
   14664:	ldr	r0, [r1]
   14668:	cmp	r0, r5
   1466c:	bcs	1469c <_obstack_free@@Base+0x8c>
   14670:	ldrb	r0, [r4, #40]	; 0x28
   14674:	ldr	r6, [r1, #4]
   14678:	tst	r0, #1
   1467c:	beq	14638 <_obstack_free@@Base+0x28>
   14680:	ldr	r2, [r4, #32]
   14684:	ldr	r0, [r4, #36]	; 0x24
   14688:	blx	r2
   1468c:	b	14644 <_obstack_free@@Base+0x34>
   14690:	cmp	r5, #0
   14694:	popeq	{r4, r5, r6, sl, fp, pc}
   14698:	bl	115d0 <abort@plt>
   1469c:	str	r5, [r4, #8]
   146a0:	str	r5, [r4, #12]
   146a4:	ldr	r0, [r1]
   146a8:	str	r1, [r4, #4]
   146ac:	str	r0, [r4, #16]
   146b0:	pop	{r4, r5, r6, sl, fp, pc}

000146b4 <_obstack_memory_used@@Base>:
   146b4:	ldr	r1, [r0, #4]
   146b8:	mov	r0, #0
   146bc:	b	146d0 <_obstack_memory_used@@Base+0x1c>
   146c0:	ldr	r2, [r1]
   146c4:	sub	r0, r0, r1
   146c8:	ldr	r1, [r1, #4]
   146cc:	add	r0, r0, r2
   146d0:	cmp	r1, #0
   146d4:	bxeq	lr
   146d8:	b	146c0 <_obstack_memory_used@@Base+0xc>
   146dc:	push	{fp, lr}
   146e0:	mov	fp, sp
   146e4:	movw	r0, #2232	; 0x8b8
   146e8:	movw	r1, #49572	; 0xc1a4
   146ec:	movw	r2, #49479	; 0xc147
   146f0:	movt	r0, #3
   146f4:	movt	r1, #1
   146f8:	movt	r2, #1
   146fc:	ldr	r0, [r0]
   14700:	bl	114bc <fprintf@plt>
   14704:	movw	r0, #2200	; 0x898
   14708:	movt	r0, #3
   1470c:	ldr	r0, [r0]
   14710:	bl	1148c <exit@plt>
   14714:	push	{r4, r5, fp, lr}
   14718:	add	fp, sp, #8
   1471c:	cmp	r0, #0
   14720:	beq	147b4 <_obstack_memory_used@@Base+0x100>
   14724:	mov	r1, #47	; 0x2f
   14728:	mov	r4, r0
   1472c:	bl	1151c <strrchr@plt>
   14730:	cmp	r0, #0
   14734:	mov	r5, r4
   14738:	addne	r5, r0, #1
   1473c:	sub	r0, r5, r4
   14740:	cmp	r0, #7
   14744:	blt	14798 <_obstack_memory_used@@Base+0xe4>
   14748:	movw	r1, #49552	; 0xc190
   1474c:	sub	r0, r5, #7
   14750:	mov	r2, #7
   14754:	movt	r1, #1
   14758:	bl	115c4 <strncmp@plt>
   1475c:	cmp	r0, #0
   14760:	bne	14798 <_obstack_memory_used@@Base+0xe4>
   14764:	movw	r1, #49560	; 0xc198
   14768:	mov	r0, r5
   1476c:	mov	r2, #3
   14770:	movt	r1, #1
   14774:	bl	115c4 <strncmp@plt>
   14778:	cmp	r0, #0
   1477c:	beq	14788 <_obstack_memory_used@@Base+0xd4>
   14780:	mov	r4, r5
   14784:	b	14798 <_obstack_memory_used@@Base+0xe4>
   14788:	movw	r0, #2224	; 0x8b0
   1478c:	add	r4, r5, #3
   14790:	movt	r0, #3
   14794:	str	r4, [r0]
   14798:	movw	r0, #2228	; 0x8b4
   1479c:	movt	r0, #3
   147a0:	str	r4, [r0]
   147a4:	movw	r0, #2276	; 0x8e4
   147a8:	movt	r0, #3
   147ac:	str	r4, [r0]
   147b0:	pop	{r4, r5, fp, pc}
   147b4:	movw	r0, #2232	; 0x8b8
   147b8:	mov	r1, #55	; 0x37
   147bc:	mov	r2, #1
   147c0:	movt	r0, #3
   147c4:	ldr	r3, [r0]
   147c8:	movw	r0, #49496	; 0xc158
   147cc:	movt	r0, #1
   147d0:	bl	113fc <fwrite@plt>
   147d4:	bl	115d0 <abort@plt>
   147d8:	push	{r4, r5, r6, r7, fp, lr}
   147dc:	add	fp, sp, #16
   147e0:	sub	sp, sp, #32
   147e4:	ldr	r7, [fp, #12]
   147e8:	ldr	r6, [fp, #8]
   147ec:	mov	r4, r2
   147f0:	mov	r5, r0
   147f4:	cmp	r1, #0
   147f8:	beq	14818 <_obstack_memory_used@@Base+0x164>
   147fc:	mov	r2, r1
   14800:	movw	r1, #49564	; 0xc19c
   14804:	str	r3, [sp]
   14808:	mov	r0, r5
   1480c:	mov	r3, r4
   14810:	movt	r1, #1
   14814:	b	14828 <_obstack_memory_used@@Base+0x174>
   14818:	movw	r1, #49576	; 0xc1a8
   1481c:	mov	r0, r5
   14820:	mov	r2, r4
   14824:	movt	r1, #1
   14828:	bl	114bc <fprintf@plt>
   1482c:	movw	r1, #50340	; 0xc4a4
   14830:	movw	r2, #49583	; 0xc1af
   14834:	mov	r0, r5
   14838:	movw	r3, #2022	; 0x7e6
   1483c:	movt	r1, #1
   14840:	movt	r2, #1
   14844:	bl	114bc <fprintf@plt>
   14848:	mov	r0, #10
   1484c:	mov	r1, r5
   14850:	bl	11534 <fputc@plt>
   14854:	movw	r1, #49587	; 0xc1b3
   14858:	movw	r2, #49758	; 0xc25e
   1485c:	mov	r0, r5
   14860:	movt	r1, #1
   14864:	movt	r2, #1
   14868:	bl	114bc <fprintf@plt>
   1486c:	mov	r0, #10
   14870:	mov	r1, r5
   14874:	bl	11534 <fputc@plt>
   14878:	cmp	r7, #9
   1487c:	bhi	148b8 <_obstack_memory_used@@Base+0x204>
   14880:	add	r0, pc, #0
   14884:	ldr	pc, [r0, r7, lsl #2]
   14888:			; <UNDEFINED> instruction: 0x000148b0
   1488c:	andeq	r4, r1, ip, ror #17
   14890:	andeq	r4, r1, r8, lsl #18
   14894:	andeq	r4, r1, r4, lsr #18
   14898:	andeq	r4, r1, ip, lsr r9
   1489c:	andeq	r4, r1, r8, asr r9
   148a0:	andeq	r4, r1, r4, ror r9
   148a4:	muleq	r1, r8, r9
   148a8:	strdeq	r4, [r1], -r8
   148ac:	andeq	r4, r1, r4, asr #19
   148b0:	sub	sp, fp, #16
   148b4:	pop	{r4, r5, r6, r7, fp, pc}
   148b8:	add	r7, r6, #8
   148bc:	add	lr, r6, #20
   148c0:	ldm	r6, {r2, r3}
   148c4:	ldr	r6, [r6, #32]
   148c8:	ldm	r7, {r0, r1, r7}
   148cc:	ldm	lr, {r4, ip, lr}
   148d0:	stm	sp, {r0, r1, r7}
   148d4:	movw	r1, #50111	; 0xc3bf
   148d8:	add	r0, sp, #12
   148dc:	stm	r0, {r4, ip, lr}
   148e0:	str	r6, [sp, #24]
   148e4:	movt	r1, #1
   148e8:	b	14a28 <_obstack_memory_used@@Base+0x374>
   148ec:	ldr	r2, [r6]
   148f0:	movw	r1, #49792	; 0xc280
   148f4:	mov	r0, r5
   148f8:	movt	r1, #1
   148fc:	sub	sp, fp, #16
   14900:	pop	{r4, r5, r6, r7, fp, lr}
   14904:	b	114bc <fprintf@plt>
   14908:	ldm	r6, {r2, r3}
   1490c:	movw	r1, #49808	; 0xc290
   14910:	mov	r0, r5
   14914:	movt	r1, #1
   14918:	sub	sp, fp, #16
   1491c:	pop	{r4, r5, r6, r7, fp, lr}
   14920:	b	114bc <fprintf@plt>
   14924:	ldr	r0, [r6, #8]
   14928:	movw	r1, #49831	; 0xc2a7
   1492c:	ldm	r6, {r2, r3}
   14930:	movt	r1, #1
   14934:	str	r0, [sp]
   14938:	b	14a28 <_obstack_memory_used@@Base+0x374>
   1493c:	ldr	r0, [r6, #8]
   14940:	ldm	r6, {r2, r3}
   14944:	ldr	r1, [r6, #12]
   14948:	stm	sp, {r0, r1}
   1494c:	movw	r1, #49859	; 0xc2c3
   14950:	movt	r1, #1
   14954:	b	14a28 <_obstack_memory_used@@Base+0x374>
   14958:	add	r7, r6, #8
   1495c:	ldm	r6, {r2, r3}
   14960:	ldm	r7, {r0, r1, r7}
   14964:	stm	sp, {r0, r1, r7}
   14968:	movw	r1, #49891	; 0xc2e3
   1496c:	movt	r1, #1
   14970:	b	14a28 <_obstack_memory_used@@Base+0x374>
   14974:	add	r7, r6, #8
   14978:	ldm	r6, {r2, r3}
   1497c:	ldr	r6, [r6, #20]
   14980:	ldm	r7, {r0, r1, r7}
   14984:	stm	sp, {r0, r1, r7}
   14988:	movw	r1, #49927	; 0xc307
   1498c:	str	r6, [sp, #12]
   14990:	movt	r1, #1
   14994:	b	14a28 <_obstack_memory_used@@Base+0x374>
   14998:	add	r7, r6, #8
   1499c:	ldm	r6, {r2, r3}
   149a0:	ldr	r4, [r6, #20]
   149a4:	ldr	r6, [r6, #24]
   149a8:	ldm	r7, {r0, r1, r7}
   149ac:	stm	sp, {r0, r1, r7}
   149b0:	movw	r1, #49967	; 0xc32f
   149b4:	str	r4, [sp, #12]
   149b8:	str	r6, [sp, #16]
   149bc:	movt	r1, #1
   149c0:	b	14a28 <_obstack_memory_used@@Base+0x374>
   149c4:	add	r7, r6, #8
   149c8:	add	lr, r6, #20
   149cc:	ldm	r6, {r2, r3}
   149d0:	ldr	r6, [r6, #32]
   149d4:	ldm	r7, {r0, r1, r7}
   149d8:	ldm	lr, {r4, ip, lr}
   149dc:	stm	sp, {r0, r1, r7}
   149e0:	movw	r1, #50059	; 0xc38b
   149e4:	add	r0, sp, #12
   149e8:	stm	r0, {r4, ip, lr}
   149ec:	str	r6, [sp, #24]
   149f0:	movt	r1, #1
   149f4:	b	14a28 <_obstack_memory_used@@Base+0x374>
   149f8:	add	r7, r6, #8
   149fc:	ldm	r6, {r2, r3}
   14a00:	ldr	r4, [r6, #20]
   14a04:	ldr	ip, [r6, #24]
   14a08:	ldr	r6, [r6, #28]
   14a0c:	ldm	r7, {r0, r1, r7}
   14a10:	stm	sp, {r0, r1, r7}
   14a14:	movw	r1, #50011	; 0xc35b
   14a18:	str	r4, [sp, #12]
   14a1c:	str	ip, [sp, #16]
   14a20:	str	r6, [sp, #20]
   14a24:	movt	r1, #1
   14a28:	mov	r0, r5
   14a2c:	bl	114bc <fprintf@plt>
   14a30:	sub	sp, fp, #16
   14a34:	pop	{r4, r5, r6, r7, fp, pc}
   14a38:	push	{r4, sl, fp, lr}
   14a3c:	add	fp, sp, #8
   14a40:	sub	sp, sp, #8
   14a44:	ldr	ip, [fp, #8]
   14a48:	mov	lr, #0
   14a4c:	ldr	r4, [ip, lr, lsl #2]
   14a50:	add	lr, lr, #1
   14a54:	cmp	r4, #0
   14a58:	bne	14a4c <_obstack_memory_used@@Base+0x398>
   14a5c:	sub	r4, lr, #1
   14a60:	str	ip, [sp]
   14a64:	str	r4, [sp, #4]
   14a68:	bl	147d8 <_obstack_memory_used@@Base+0x124>
   14a6c:	sub	sp, fp, #8
   14a70:	pop	{r4, sl, fp, pc}
   14a74:	push	{fp, lr}
   14a78:	mov	fp, sp
   14a7c:	sub	sp, sp, #48	; 0x30
   14a80:	ldr	ip, [fp, #8]
   14a84:	ldr	lr, [ip]
   14a88:	cmp	lr, #0
   14a8c:	str	lr, [sp, #8]
   14a90:	beq	14b2c <_obstack_memory_used@@Base+0x478>
   14a94:	ldr	lr, [ip, #4]
   14a98:	cmp	lr, #0
   14a9c:	str	lr, [sp, #12]
   14aa0:	beq	14b34 <_obstack_memory_used@@Base+0x480>
   14aa4:	ldr	lr, [ip, #8]
   14aa8:	cmp	lr, #0
   14aac:	str	lr, [sp, #16]
   14ab0:	beq	14b3c <_obstack_memory_used@@Base+0x488>
   14ab4:	ldr	lr, [ip, #12]
   14ab8:	cmp	lr, #0
   14abc:	str	lr, [sp, #20]
   14ac0:	beq	14b44 <_obstack_memory_used@@Base+0x490>
   14ac4:	ldr	lr, [ip, #16]
   14ac8:	cmp	lr, #0
   14acc:	str	lr, [sp, #24]
   14ad0:	beq	14b4c <_obstack_memory_used@@Base+0x498>
   14ad4:	ldr	lr, [ip, #20]
   14ad8:	cmp	lr, #0
   14adc:	str	lr, [sp, #28]
   14ae0:	beq	14b54 <_obstack_memory_used@@Base+0x4a0>
   14ae4:	ldr	lr, [ip, #24]
   14ae8:	cmp	lr, #0
   14aec:	str	lr, [sp, #32]
   14af0:	beq	14b5c <_obstack_memory_used@@Base+0x4a8>
   14af4:	ldr	lr, [ip, #28]
   14af8:	cmp	lr, #0
   14afc:	str	lr, [sp, #36]	; 0x24
   14b00:	beq	14b64 <_obstack_memory_used@@Base+0x4b0>
   14b04:	ldr	lr, [ip, #32]
   14b08:	cmp	lr, #0
   14b0c:	str	lr, [sp, #40]	; 0x28
   14b10:	beq	14b6c <_obstack_memory_used@@Base+0x4b8>
   14b14:	ldr	lr, [ip, #36]	; 0x24
   14b18:	mov	ip, #10
   14b1c:	cmp	lr, #0
   14b20:	str	lr, [sp, #44]	; 0x2c
   14b24:	movweq	ip, #9
   14b28:	b	14b70 <_obstack_memory_used@@Base+0x4bc>
   14b2c:	mov	ip, #0
   14b30:	b	14b70 <_obstack_memory_used@@Base+0x4bc>
   14b34:	mov	ip, #1
   14b38:	b	14b70 <_obstack_memory_used@@Base+0x4bc>
   14b3c:	mov	ip, #2
   14b40:	b	14b70 <_obstack_memory_used@@Base+0x4bc>
   14b44:	mov	ip, #3
   14b48:	b	14b70 <_obstack_memory_used@@Base+0x4bc>
   14b4c:	mov	ip, #4
   14b50:	b	14b70 <_obstack_memory_used@@Base+0x4bc>
   14b54:	mov	ip, #5
   14b58:	b	14b70 <_obstack_memory_used@@Base+0x4bc>
   14b5c:	mov	ip, #6
   14b60:	b	14b70 <_obstack_memory_used@@Base+0x4bc>
   14b64:	mov	ip, #7
   14b68:	b	14b70 <_obstack_memory_used@@Base+0x4bc>
   14b6c:	mov	ip, #8
   14b70:	add	lr, sp, #8
   14b74:	str	ip, [sp, #4]
   14b78:	str	lr, [sp]
   14b7c:	bl	147d8 <_obstack_memory_used@@Base+0x124>
   14b80:	mov	sp, fp
   14b84:	pop	{fp, pc}
   14b88:	push	{fp, lr}
   14b8c:	mov	fp, sp
   14b90:	sub	sp, sp, #56	; 0x38
   14b94:	add	ip, fp, #8
   14b98:	str	ip, [sp, #12]
   14b9c:	ldr	lr, [fp, #8]
   14ba0:	cmp	lr, #0
   14ba4:	str	lr, [sp, #16]
   14ba8:	beq	14c44 <_obstack_memory_used@@Base+0x590>
   14bac:	ldr	lr, [ip, #4]
   14bb0:	cmp	lr, #0
   14bb4:	str	lr, [sp, #20]
   14bb8:	beq	14c4c <_obstack_memory_used@@Base+0x598>
   14bbc:	ldr	lr, [ip, #8]
   14bc0:	cmp	lr, #0
   14bc4:	str	lr, [sp, #24]
   14bc8:	beq	14c54 <_obstack_memory_used@@Base+0x5a0>
   14bcc:	ldr	lr, [ip, #12]
   14bd0:	cmp	lr, #0
   14bd4:	str	lr, [sp, #28]
   14bd8:	beq	14c5c <_obstack_memory_used@@Base+0x5a8>
   14bdc:	ldr	lr, [ip, #16]
   14be0:	cmp	lr, #0
   14be4:	str	lr, [sp, #32]
   14be8:	beq	14c64 <_obstack_memory_used@@Base+0x5b0>
   14bec:	ldr	lr, [ip, #20]
   14bf0:	cmp	lr, #0
   14bf4:	str	lr, [sp, #36]	; 0x24
   14bf8:	beq	14c6c <_obstack_memory_used@@Base+0x5b8>
   14bfc:	ldr	lr, [ip, #24]
   14c00:	cmp	lr, #0
   14c04:	str	lr, [sp, #40]	; 0x28
   14c08:	beq	14c74 <_obstack_memory_used@@Base+0x5c0>
   14c0c:	ldr	lr, [ip, #28]
   14c10:	cmp	lr, #0
   14c14:	str	lr, [sp, #44]	; 0x2c
   14c18:	beq	14c7c <_obstack_memory_used@@Base+0x5c8>
   14c1c:	ldr	lr, [ip, #32]
   14c20:	cmp	lr, #0
   14c24:	str	lr, [sp, #48]	; 0x30
   14c28:	beq	14c84 <_obstack_memory_used@@Base+0x5d0>
   14c2c:	ldr	lr, [ip, #36]	; 0x24
   14c30:	mov	ip, #10
   14c34:	cmp	lr, #0
   14c38:	str	lr, [sp, #52]	; 0x34
   14c3c:	movweq	ip, #9
   14c40:	b	14c88 <_obstack_memory_used@@Base+0x5d4>
   14c44:	mov	ip, #0
   14c48:	b	14c88 <_obstack_memory_used@@Base+0x5d4>
   14c4c:	mov	ip, #1
   14c50:	b	14c88 <_obstack_memory_used@@Base+0x5d4>
   14c54:	mov	ip, #2
   14c58:	b	14c88 <_obstack_memory_used@@Base+0x5d4>
   14c5c:	mov	ip, #3
   14c60:	b	14c88 <_obstack_memory_used@@Base+0x5d4>
   14c64:	mov	ip, #4
   14c68:	b	14c88 <_obstack_memory_used@@Base+0x5d4>
   14c6c:	mov	ip, #5
   14c70:	b	14c88 <_obstack_memory_used@@Base+0x5d4>
   14c74:	mov	ip, #6
   14c78:	b	14c88 <_obstack_memory_used@@Base+0x5d4>
   14c7c:	mov	ip, #7
   14c80:	b	14c88 <_obstack_memory_used@@Base+0x5d4>
   14c84:	mov	ip, #8
   14c88:	add	lr, sp, #16
   14c8c:	str	ip, [sp, #4]
   14c90:	str	lr, [sp]
   14c94:	bl	147d8 <_obstack_memory_used@@Base+0x124>
   14c98:	mov	sp, fp
   14c9c:	pop	{fp, pc}
   14ca0:	push	{fp, lr}
   14ca4:	mov	fp, sp
   14ca8:	movw	r0, #2236	; 0x8bc
   14cac:	movt	r0, #3
   14cb0:	ldr	r1, [r0]
   14cb4:	mov	r0, #10
   14cb8:	bl	11534 <fputc@plt>
   14cbc:	movw	r0, #50171	; 0xc3fb
   14cc0:	movw	r1, #50191	; 0xc40f
   14cc4:	movt	r0, #1
   14cc8:	movt	r1, #1
   14ccc:	bl	11348 <printf@plt>
   14cd0:	movw	r0, #50213	; 0xc425
   14cd4:	movw	r1, #49452	; 0xc12c
   14cd8:	movw	r2, #50233	; 0xc439
   14cdc:	movt	r0, #1
   14ce0:	movt	r1, #1
   14ce4:	movt	r2, #1
   14ce8:	bl	11348 <printf@plt>
   14cec:	movw	r0, #50272	; 0xc460
   14cf0:	movw	r1, #50311	; 0xc487
   14cf4:	movt	r0, #1
   14cf8:	movt	r1, #1
   14cfc:	pop	{fp, lr}
   14d00:	b	11348 <printf@plt>
   14d04:	push	{r4, r5, r6, sl, fp, lr}
   14d08:	add	fp, sp, #16
   14d0c:	mov	r4, r2
   14d10:	mov	r5, r1
   14d14:	mov	r6, r0
   14d18:	bl	19d60 <argp_failure@@Base+0x3260>
   14d1c:	cmp	r0, #0
   14d20:	popne	{r4, r5, r6, sl, fp, pc}
   14d24:	cmp	r6, #0
   14d28:	beq	14d3c <_obstack_memory_used@@Base+0x688>
   14d2c:	cmp	r5, #0
   14d30:	cmpne	r4, #0
   14d34:	bne	14d3c <_obstack_memory_used@@Base+0x688>
   14d38:	pop	{r4, r5, r6, sl, fp, pc}
   14d3c:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14d40:	push	{r4, r5, r6, sl, fp, lr}
   14d44:	add	fp, sp, #16
   14d48:	mov	r4, r2
   14d4c:	mov	r5, r1
   14d50:	mov	r6, r0
   14d54:	bl	19d60 <argp_failure@@Base+0x3260>
   14d58:	cmp	r0, #0
   14d5c:	popne	{r4, r5, r6, sl, fp, pc}
   14d60:	cmp	r6, #0
   14d64:	beq	14d78 <_obstack_memory_used@@Base+0x6c4>
   14d68:	cmp	r5, #0
   14d6c:	cmpne	r4, #0
   14d70:	bne	14d78 <_obstack_memory_used@@Base+0x6c4>
   14d74:	pop	{r4, r5, r6, sl, fp, pc}
   14d78:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14d7c:	push	{fp, lr}
   14d80:	mov	fp, sp
   14d84:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   14d88:	cmp	r0, #0
   14d8c:	popne	{fp, pc}
   14d90:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14d94:	push	{fp, lr}
   14d98:	mov	fp, sp
   14d9c:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   14da0:	cmp	r0, #0
   14da4:	popne	{fp, pc}
   14da8:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14dac:	push	{fp, lr}
   14db0:	mov	fp, sp
   14db4:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   14db8:	cmp	r0, #0
   14dbc:	popne	{fp, pc}
   14dc0:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14dc4:	push	{r4, r5, fp, lr}
   14dc8:	add	fp, sp, #8
   14dcc:	mov	r4, r1
   14dd0:	mov	r5, r0
   14dd4:	bl	1536c <_obstack_memory_used@@Base+0xcb8>
   14dd8:	cmp	r0, #0
   14ddc:	popne	{r4, r5, fp, pc}
   14de0:	cmp	r5, #0
   14de4:	beq	14df4 <_obstack_memory_used@@Base+0x740>
   14de8:	cmp	r4, #0
   14dec:	bne	14df4 <_obstack_memory_used@@Base+0x740>
   14df0:	pop	{r4, r5, fp, pc}
   14df4:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14df8:	push	{fp, lr}
   14dfc:	mov	fp, sp
   14e00:	cmp	r1, #0
   14e04:	orreq	r1, r1, #1
   14e08:	bl	1536c <_obstack_memory_used@@Base+0xcb8>
   14e0c:	cmp	r0, #0
   14e10:	popne	{fp, pc}
   14e14:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14e18:	push	{fp, lr}
   14e1c:	mov	fp, sp
   14e20:	clz	r3, r2
   14e24:	lsr	ip, r3, #5
   14e28:	clz	r3, r1
   14e2c:	lsr	r3, r3, #5
   14e30:	orrs	r3, r3, ip
   14e34:	movwne	r1, #1
   14e38:	movwne	r2, #1
   14e3c:	bl	19d60 <argp_failure@@Base+0x3260>
   14e40:	cmp	r0, #0
   14e44:	popne	{fp, pc}
   14e48:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14e4c:	push	{fp, lr}
   14e50:	mov	fp, sp
   14e54:	mov	r2, r1
   14e58:	mov	r1, r0
   14e5c:	mov	r0, #0
   14e60:	bl	19d60 <argp_failure@@Base+0x3260>
   14e64:	cmp	r0, #0
   14e68:	popne	{fp, pc}
   14e6c:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14e70:	push	{fp, lr}
   14e74:	mov	fp, sp
   14e78:	mov	r2, r1
   14e7c:	mov	r1, r0
   14e80:	clz	r0, r2
   14e84:	clz	r3, r1
   14e88:	lsr	r0, r0, #5
   14e8c:	lsr	r3, r3, #5
   14e90:	orrs	r0, r3, r0
   14e94:	mov	r0, #0
   14e98:	movwne	r1, #1
   14e9c:	movwne	r2, #1
   14ea0:	bl	19d60 <argp_failure@@Base+0x3260>
   14ea4:	cmp	r0, #0
   14ea8:	popne	{fp, pc}
   14eac:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14eb0:	push	{r4, r5, r6, sl, fp, lr}
   14eb4:	add	fp, sp, #16
   14eb8:	ldr	r5, [r1]
   14ebc:	mov	r4, r1
   14ec0:	mov	r6, r0
   14ec4:	cmp	r0, #0
   14ec8:	beq	14ee0 <_obstack_memory_used@@Base+0x82c>
   14ecc:	mov	r0, #1
   14ed0:	add	r0, r0, r5, lsr #1
   14ed4:	adds	r5, r5, r0
   14ed8:	bcc	14ee8 <_obstack_memory_used@@Base+0x834>
   14edc:	b	14f24 <_obstack_memory_used@@Base+0x870>
   14ee0:	cmp	r5, #0
   14ee4:	movweq	r5, #64	; 0x40
   14ee8:	mov	r0, r6
   14eec:	mov	r1, r5
   14ef0:	mov	r2, #1
   14ef4:	bl	19d60 <argp_failure@@Base+0x3260>
   14ef8:	cmp	r5, #0
   14efc:	mov	r1, r5
   14f00:	movwne	r1, #1
   14f04:	cmp	r0, #0
   14f08:	bne	14f1c <_obstack_memory_used@@Base+0x868>
   14f0c:	clz	r2, r6
   14f10:	lsr	r2, r2, #5
   14f14:	orrs	r1, r2, r1
   14f18:	bne	14f24 <_obstack_memory_used@@Base+0x870>
   14f1c:	str	r5, [r4]
   14f20:	pop	{r4, r5, r6, sl, fp, pc}
   14f24:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14f28:	push	{r4, r5, r6, r7, fp, lr}
   14f2c:	add	fp, sp, #16
   14f30:	ldr	r5, [r1]
   14f34:	mov	r6, r2
   14f38:	mov	r4, r1
   14f3c:	mov	r7, r0
   14f40:	cmp	r0, #0
   14f44:	beq	14f5c <_obstack_memory_used@@Base+0x8a8>
   14f48:	mov	r0, #1
   14f4c:	add	r0, r0, r5, lsr #1
   14f50:	adds	r5, r5, r0
   14f54:	bcc	14f74 <_obstack_memory_used@@Base+0x8c0>
   14f58:	b	14fa8 <_obstack_memory_used@@Base+0x8f4>
   14f5c:	cmp	r5, #0
   14f60:	bne	14f74 <_obstack_memory_used@@Base+0x8c0>
   14f64:	mov	r0, #64	; 0x40
   14f68:	cmp	r6, #64	; 0x40
   14f6c:	udiv	r5, r0, r6
   14f70:	addhi	r5, r5, #1
   14f74:	mov	r0, r7
   14f78:	mov	r1, r5
   14f7c:	mov	r2, r6
   14f80:	bl	19d60 <argp_failure@@Base+0x3260>
   14f84:	cmp	r0, #0
   14f88:	bne	14fa0 <_obstack_memory_used@@Base+0x8ec>
   14f8c:	cmp	r7, #0
   14f90:	beq	14fa8 <_obstack_memory_used@@Base+0x8f4>
   14f94:	cmp	r6, #0
   14f98:	cmpne	r5, #0
   14f9c:	bne	14fa8 <_obstack_memory_used@@Base+0x8f4>
   14fa0:	str	r5, [r4]
   14fa4:	pop	{r4, r5, r6, r7, fp, pc}
   14fa8:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   14fac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14fb0:	add	fp, sp, #24
   14fb4:	mov	r8, r1
   14fb8:	ldr	r1, [r1]
   14fbc:	mov	r5, r0
   14fc0:	add	r0, r1, r1, asr #1
   14fc4:	cmp	r0, r1
   14fc8:	mvnvs	r0, #-2147483648	; 0x80000000
   14fcc:	cmp	r0, r3
   14fd0:	mov	r7, r0
   14fd4:	movgt	r7, r3
   14fd8:	cmn	r3, #1
   14fdc:	movle	r7, r0
   14fe0:	ldr	r0, [fp, #8]
   14fe4:	cmn	r0, #1
   14fe8:	ble	15010 <_obstack_memory_used@@Base+0x95c>
   14fec:	cmp	r0, #0
   14ff0:	beq	15064 <_obstack_memory_used@@Base+0x9b0>
   14ff4:	cmn	r7, #1
   14ff8:	ble	15038 <_obstack_memory_used@@Base+0x984>
   14ffc:	mvn	r4, #-2147483648	; 0x80000000
   15000:	udiv	r6, r4, r0
   15004:	cmp	r6, r7
   15008:	bge	15064 <_obstack_memory_used@@Base+0x9b0>
   1500c:	b	15074 <_obstack_memory_used@@Base+0x9c0>
   15010:	cmn	r7, #1
   15014:	ble	15054 <_obstack_memory_used@@Base+0x9a0>
   15018:	cmn	r0, #1
   1501c:	beq	15064 <_obstack_memory_used@@Base+0x9b0>
   15020:	mov	r6, #-2147483648	; 0x80000000
   15024:	mvn	r4, #-2147483648	; 0x80000000
   15028:	sdiv	r6, r6, r0
   1502c:	cmp	r6, r7
   15030:	bge	15064 <_obstack_memory_used@@Base+0x9b0>
   15034:	b	15074 <_obstack_memory_used@@Base+0x9c0>
   15038:	beq	15064 <_obstack_memory_used@@Base+0x9b0>
   1503c:	mov	r6, #-2147483648	; 0x80000000
   15040:	mvn	r4, #-2147483648	; 0x80000000
   15044:	sdiv	r6, r6, r7
   15048:	cmp	r6, r0
   1504c:	bge	15064 <_obstack_memory_used@@Base+0x9b0>
   15050:	b	15074 <_obstack_memory_used@@Base+0x9c0>
   15054:	mvn	r4, #-2147483648	; 0x80000000
   15058:	sdiv	r6, r4, r0
   1505c:	cmp	r7, r6
   15060:	blt	15074 <_obstack_memory_used@@Base+0x9c0>
   15064:	mul	r6, r7, r0
   15068:	mov	r4, #64	; 0x40
   1506c:	cmp	r6, #63	; 0x3f
   15070:	bgt	1507c <_obstack_memory_used@@Base+0x9c8>
   15074:	sdiv	r7, r4, r0
   15078:	mul	r6, r7, r0
   1507c:	cmp	r5, #0
   15080:	moveq	r4, #0
   15084:	streq	r4, [r8]
   15088:	sub	r4, r7, r1
   1508c:	cmp	r4, r2
   15090:	bge	1513c <_obstack_memory_used@@Base+0xa88>
   15094:	add	r7, r1, r2
   15098:	mov	r6, #0
   1509c:	mov	r2, #0
   150a0:	cmp	r7, r3
   150a4:	movwgt	r6, #1
   150a8:	cmn	r3, #1
   150ac:	movwgt	r2, #1
   150b0:	cmp	r7, r1
   150b4:	bvs	15170 <_obstack_memory_used@@Base+0xabc>
   150b8:	ands	r1, r2, r6
   150bc:	bne	15170 <_obstack_memory_used@@Base+0xabc>
   150c0:	cmn	r0, #1
   150c4:	ble	150ec <_obstack_memory_used@@Base+0xa38>
   150c8:	cmp	r0, #0
   150cc:	beq	15138 <_obstack_memory_used@@Base+0xa84>
   150d0:	cmn	r7, #1
   150d4:	ble	15110 <_obstack_memory_used@@Base+0xa5c>
   150d8:	mvn	r1, #-2147483648	; 0x80000000
   150dc:	udiv	r1, r1, r0
   150e0:	cmp	r1, r7
   150e4:	bge	15138 <_obstack_memory_used@@Base+0xa84>
   150e8:	b	15170 <_obstack_memory_used@@Base+0xabc>
   150ec:	cmn	r7, #1
   150f0:	ble	15128 <_obstack_memory_used@@Base+0xa74>
   150f4:	cmn	r0, #1
   150f8:	beq	15138 <_obstack_memory_used@@Base+0xa84>
   150fc:	mov	r1, #-2147483648	; 0x80000000
   15100:	sdiv	r1, r1, r0
   15104:	cmp	r1, r7
   15108:	bge	15138 <_obstack_memory_used@@Base+0xa84>
   1510c:	b	15170 <_obstack_memory_used@@Base+0xabc>
   15110:	beq	15138 <_obstack_memory_used@@Base+0xa84>
   15114:	mov	r1, #-2147483648	; 0x80000000
   15118:	sdiv	r1, r1, r7
   1511c:	cmp	r1, r0
   15120:	bge	15138 <_obstack_memory_used@@Base+0xa84>
   15124:	b	15170 <_obstack_memory_used@@Base+0xabc>
   15128:	mvn	r1, #-2147483648	; 0x80000000
   1512c:	sdiv	r1, r1, r0
   15130:	cmp	r7, r1
   15134:	blt	15170 <_obstack_memory_used@@Base+0xabc>
   15138:	mul	r6, r7, r0
   1513c:	mov	r0, r5
   15140:	mov	r1, r6
   15144:	bl	1536c <_obstack_memory_used@@Base+0xcb8>
   15148:	cmp	r6, #0
   1514c:	movwne	r6, #1
   15150:	cmp	r0, #0
   15154:	bne	15168 <_obstack_memory_used@@Base+0xab4>
   15158:	clz	r1, r5
   1515c:	lsr	r1, r1, #5
   15160:	orrs	r1, r1, r6
   15164:	bne	15170 <_obstack_memory_used@@Base+0xabc>
   15168:	str	r7, [r8]
   1516c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15170:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   15174:	push	{fp, lr}
   15178:	mov	fp, sp
   1517c:	mov	r1, #1
   15180:	bl	152e8 <_obstack_memory_used@@Base+0xc34>
   15184:	cmp	r0, #0
   15188:	popne	{fp, pc}
   1518c:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   15190:	push	{fp, lr}
   15194:	mov	fp, sp
   15198:	bl	152e8 <_obstack_memory_used@@Base+0xc34>
   1519c:	cmp	r0, #0
   151a0:	popne	{fp, pc}
   151a4:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   151a8:	push	{fp, lr}
   151ac:	mov	fp, sp
   151b0:	mov	r1, #1
   151b4:	bl	152e8 <_obstack_memory_used@@Base+0xc34>
   151b8:	cmp	r0, #0
   151bc:	popne	{fp, pc}
   151c0:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   151c4:	push	{fp, lr}
   151c8:	mov	fp, sp
   151cc:	bl	152e8 <_obstack_memory_used@@Base+0xc34>
   151d0:	cmp	r0, #0
   151d4:	popne	{fp, pc}
   151d8:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   151dc:	push	{r4, r5, fp, lr}
   151e0:	add	fp, sp, #8
   151e4:	mov	r5, r0
   151e8:	mov	r0, r1
   151ec:	mov	r4, r1
   151f0:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   151f4:	cmp	r0, #0
   151f8:	beq	1520c <_obstack_memory_used@@Base+0xb58>
   151fc:	mov	r1, r5
   15200:	mov	r2, r4
   15204:	pop	{r4, r5, fp, lr}
   15208:	b	113a8 <memcpy@plt>
   1520c:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   15210:	push	{r4, r5, fp, lr}
   15214:	add	fp, sp, #8
   15218:	mov	r5, r0
   1521c:	mov	r0, r1
   15220:	mov	r4, r1
   15224:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   15228:	cmp	r0, #0
   1522c:	beq	15240 <_obstack_memory_used@@Base+0xb8c>
   15230:	mov	r1, r5
   15234:	mov	r2, r4
   15238:	pop	{r4, r5, fp, lr}
   1523c:	b	113a8 <memcpy@plt>
   15240:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   15244:	push	{r4, r5, fp, lr}
   15248:	add	fp, sp, #8
   1524c:	mov	r5, r0
   15250:	add	r0, r1, #1
   15254:	mov	r4, r1
   15258:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   1525c:	cmp	r0, #0
   15260:	beq	1527c <_obstack_memory_used@@Base+0xbc8>
   15264:	mov	r1, #0
   15268:	mov	r2, r4
   1526c:	strb	r1, [r0, r4]
   15270:	mov	r1, r5
   15274:	pop	{r4, r5, fp, lr}
   15278:	b	113a8 <memcpy@plt>
   1527c:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   15280:	push	{r4, r5, fp, lr}
   15284:	add	fp, sp, #8
   15288:	mov	r4, r0
   1528c:	bl	114a4 <strlen@plt>
   15290:	add	r5, r0, #1
   15294:	mov	r0, r5
   15298:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   1529c:	cmp	r0, #0
   152a0:	beq	152b4 <_obstack_memory_used@@Base+0xc00>
   152a4:	mov	r1, r4
   152a8:	mov	r2, r5
   152ac:	pop	{r4, r5, fp, lr}
   152b0:	b	113a8 <memcpy@plt>
   152b4:	bl	152b8 <_obstack_memory_used@@Base+0xc04>
   152b8:	push	{fp, lr}
   152bc:	mov	fp, sp
   152c0:	movw	r0, #2200	; 0x898
   152c4:	movw	r2, #50628	; 0xc5c4
   152c8:	movw	r3, #49479	; 0xc147
   152cc:	mov	r1, #0
   152d0:	movt	r0, #3
   152d4:	movt	r2, #1
   152d8:	movt	r3, #1
   152dc:	ldr	r0, [r0]
   152e0:	bl	11420 <error@plt>
   152e4:	bl	115d0 <abort@plt>
   152e8:	clz	r2, r1
   152ec:	clz	r3, r0
   152f0:	lsr	r2, r2, #5
   152f4:	lsr	r3, r3, #5
   152f8:	orrs	r2, r3, r2
   152fc:	movwne	r1, #1
   15300:	movwne	r0, #1
   15304:	cmp	r1, #0
   15308:	beq	15338 <_obstack_memory_used@@Base+0xc84>
   1530c:	mvn	r2, #-2147483648	; 0x80000000
   15310:	udiv	r2, r2, r1
   15314:	cmp	r2, r0
   15318:	bcs	15338 <_obstack_memory_used@@Base+0xc84>
   1531c:	push	{fp, lr}
   15320:	mov	fp, sp
   15324:	bl	114c8 <__errno_location@plt>
   15328:	mov	r1, #12
   1532c:	str	r1, [r0]
   15330:	mov	r0, #0
   15334:	pop	{fp, pc}
   15338:	b	1130c <calloc@plt>
   1533c:	cmp	r0, #0
   15340:	movweq	r0, #1
   15344:	cmn	r0, #1
   15348:	ble	15350 <_obstack_memory_used@@Base+0xc9c>
   1534c:	b	11444 <malloc@plt>
   15350:	push	{fp, lr}
   15354:	mov	fp, sp
   15358:	bl	114c8 <__errno_location@plt>
   1535c:	mov	r1, #12
   15360:	str	r1, [r0]
   15364:	mov	r0, #0
   15368:	pop	{fp, pc}
   1536c:	push	{fp, lr}
   15370:	mov	fp, sp
   15374:	cmp	r0, #0
   15378:	beq	15394 <_obstack_memory_used@@Base+0xce0>
   1537c:	cmp	r1, #0
   15380:	beq	153a0 <_obstack_memory_used@@Base+0xcec>
   15384:	cmn	r1, #1
   15388:	ble	153ac <_obstack_memory_used@@Base+0xcf8>
   1538c:	pop	{fp, lr}
   15390:	b	113d8 <realloc@plt>
   15394:	mov	r0, r1
   15398:	pop	{fp, lr}
   1539c:	b	1533c <_obstack_memory_used@@Base+0xc88>
   153a0:	bl	14240 <argp_parse@@Base+0x12dc>
   153a4:	mov	r0, #0
   153a8:	pop	{fp, pc}
   153ac:	bl	114c8 <__errno_location@plt>
   153b0:	mov	r1, #12
   153b4:	str	r1, [r0]
   153b8:	mov	r0, #0
   153bc:	pop	{fp, pc}

000153c0 <argp_help@@Base>:
   153c0:	push	{fp, lr}
   153c4:	mov	fp, sp
   153c8:	sub	sp, sp, #8
   153cc:	mov	ip, r2
   153d0:	mov	r2, r1
   153d4:	str	r3, [sp]
   153d8:	mov	r1, #0
   153dc:	mov	r3, ip
   153e0:	bl	153ec <argp_help@@Base+0x2c>
   153e4:	mov	sp, fp
   153e8:	pop	{fp, pc}
   153ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153f0:	add	fp, sp, #28
   153f4:	sub	sp, sp, #108	; 0x6c
   153f8:	cmp	r2, #0
   153fc:	str	r3, [fp, #-92]	; 0xffffffa4
   15400:	str	r1, [fp, #-100]	; 0xffffff9c
   15404:	str	r0, [fp, #-108]	; 0xffffff94
   15408:	beq	16788 <argp_help@@Base+0x13c8>
   1540c:	ldr	r0, [fp, #8]
   15410:	mov	r4, r2
   15414:	str	r0, [fp, #-96]	; 0xffffffa0
   15418:	mov	r0, r2
   1541c:	bl	11558 <flockfile@plt>
   15420:	movw	r9, #2160	; 0x870
   15424:	movt	r9, #3
   15428:	ldr	r0, [r9, #36]	; 0x24
   1542c:	cmp	r0, #0
   15430:	bne	1594c <argp_help@@Base+0x58c>
   15434:	movw	r0, #50503	; 0xc547
   15438:	movt	r0, #1
   1543c:	bl	1142c <getenv@plt>
   15440:	mov	r8, r0
   15444:	mov	r0, #32
   15448:	mov	r1, r9
   1544c:	add	r3, r9, #16
   15450:	sub	r2, fp, #88	; 0x58
   15454:	vld1.64	{d16-d17}, [r1], r0
   15458:	vld1.64	{d18-d19}, [r3]
   1545c:	add	r7, r2, #16
   15460:	cmp	r8, #0
   15464:	vldr	d20, [r1]
   15468:	mov	r1, r2
   1546c:	vst1.64	{d16-d17}, [r1], r0
   15470:	vst1.64	{d18-d19}, [r7]
   15474:	vstr	d20, [r1]
   15478:	beq	1594c <argp_help@@Base+0x58c>
   1547c:	ldrb	r5, [r8]
   15480:	str	r7, [fp, #-116]	; 0xffffff8c
   15484:	str	r3, [fp, #-112]	; 0xffffff90
   15488:	str	r4, [fp, #-132]	; 0xffffff7c
   1548c:	cmp	r5, #0
   15490:	beq	1585c <argp_help@@Base+0x49c>
   15494:	movw	r7, #51168	; 0xc7e0
   15498:	movt	r7, #1
   1549c:	bl	11480 <__ctype_b_loc@plt>
   154a0:	str	r0, [fp, #-104]	; 0xffffff98
   154a4:	b	154d8 <argp_help@@Base+0x118>
   154a8:	ldrb	r0, [r6, #15]
   154ac:	sub	r1, fp, #88	; 0x58
   154b0:	str	r5, [r1, r0]
   154b4:	mov	r8, r4
   154b8:	movw	r9, #2160	; 0x870
   154bc:	ldrb	r0, [r8], #1
   154c0:	movt	r9, #3
   154c4:	cmp	r0, #44	; 0x2c
   154c8:	movne	r8, r4
   154cc:	ldrb	r5, [r8]
   154d0:	cmp	r5, #0
   154d4:	beq	1585c <argp_help@@Base+0x49c>
   154d8:	ldr	r0, [fp, #-104]	; 0xffffff98
   154dc:	uxtb	r1, r5
   154e0:	ldr	r0, [r0]
   154e4:	add	r1, r0, r1, lsl #1
   154e8:	ldrh	r1, [r1]
   154ec:	tst	r1, #8192	; 0x2000
   154f0:	beq	15500 <argp_help@@Base+0x140>
   154f4:	ldrb	r5, [r8, #1]!
   154f8:	add	r1, r0, r5, lsl #1
   154fc:	b	154e8 <argp_help@@Base+0x128>
   15500:	tst	r1, #1024	; 0x400
   15504:	beq	15830 <argp_help@@Base+0x470>
   15508:	mov	r3, r5
   1550c:	mov	r2, r8
   15510:	b	15518 <argp_help@@Base+0x158>
   15514:	ldrb	r3, [r2, #1]!
   15518:	uxtb	r6, r3
   1551c:	add	r1, r0, r6, lsl #1
   15520:	ldrh	r1, [r1]
   15524:	tst	r1, #8
   15528:	bne	15514 <argp_help@@Base+0x154>
   1552c:	cmp	r6, #95	; 0x5f
   15530:	cmpne	r6, #45	; 0x2d
   15534:	beq	15514 <argp_help@@Base+0x154>
   15538:	tst	r1, #8192	; 0x2000
   1553c:	mov	r4, r2
   15540:	beq	1555c <argp_help@@Base+0x19c>
   15544:	mov	r4, r2
   15548:	ldrb	r3, [r4, #1]!
   1554c:	add	r1, r0, r3, lsl #1
   15550:	ldrh	r1, [r1]
   15554:	tst	r1, #8192	; 0x2000
   15558:	bne	15548 <argp_help@@Base+0x188>
   1555c:	sub	r9, r2, r8
   15560:	uxtb	r2, r3
   15564:	cmp	r2, #0
   15568:	cmpne	r2, #44	; 0x2c
   1556c:	bne	155bc <argp_help@@Base+0x1fc>
   15570:	uxtb	r0, r5
   15574:	mov	sl, #1
   15578:	cmp	r0, #110	; 0x6e
   1557c:	bne	155b4 <argp_help@@Base+0x1f4>
   15580:	ldrb	r0, [r8, #1]
   15584:	mov	sl, #1
   15588:	cmp	r0, #111	; 0x6f
   1558c:	bne	155b4 <argp_help@@Base+0x1f4>
   15590:	ldrb	r0, [r8, #2]
   15594:	mov	sl, #1
   15598:	cmp	r0, #45	; 0x2d
   1559c:	bne	155b4 <argp_help@@Base+0x1f4>
   155a0:	sub	r9, r9, #3
   155a4:	add	r8, r8, #3
   155a8:	mov	r5, #0
   155ac:	mov	sl, #1
   155b0:	b	15640 <argp_help@@Base+0x280>
   155b4:	mov	r5, #1
   155b8:	b	15640 <argp_help@@Base+0x280>
   155bc:	cmp	r2, #61	; 0x3d
   155c0:	bne	155d8 <argp_help@@Base+0x218>
   155c4:	ldrb	r1, [r4, #1]!
   155c8:	add	r1, r0, r1, lsl #1
   155cc:	ldrh	r1, [r1]
   155d0:	tst	r1, #8192	; 0x2000
   155d4:	bne	155c4 <argp_help@@Base+0x204>
   155d8:	mov	sl, #0
   155dc:	tst	r1, #2048	; 0x800
   155e0:	bne	155ec <argp_help@@Base+0x22c>
   155e4:	mov	r5, #0
   155e8:	b	15640 <argp_help@@Base+0x280>
   155ec:	mov	r0, r4
   155f0:	mov	r1, #0
   155f4:	mov	r2, #10
   155f8:	bl	1133c <strtol@plt>
   155fc:	mov	r5, r0
   15600:	ldr	r0, [fp, #-104]	; 0xffffff98
   15604:	sub	r4, r4, #1
   15608:	ldr	r0, [r0]
   1560c:	ldrb	r1, [r4, #1]!
   15610:	add	r1, r0, r1, lsl #1
   15614:	ldrh	r1, [r1]
   15618:	tst	r1, #2048	; 0x800
   1561c:	bne	1560c <argp_help@@Base+0x24c>
   15620:	mov	sl, #0
   15624:	tst	r1, #8192	; 0x2000
   15628:	beq	15640 <argp_help@@Base+0x280>
   1562c:	ldrb	r1, [r4, #1]!
   15630:	add	r1, r0, r1, lsl #1
   15634:	ldrb	r1, [r1, #1]
   15638:	tst	r1, #32
   1563c:	bne	1562c <argp_help@@Base+0x26c>
   15640:	mov	r0, r7
   15644:	bl	114a4 <strlen@plt>
   15648:	cmp	r0, r9
   1564c:	bne	1566c <argp_help@@Base+0x2ac>
   15650:	mov	r0, r8
   15654:	mov	r1, r7
   15658:	mov	r2, r9
   1565c:	bl	115c4 <strncmp@plt>
   15660:	cmp	r0, #0
   15664:	mov	r6, r7
   15668:	beq	157f0 <argp_help@@Base+0x430>
   1566c:	add	r6, r7, #16
   15670:	mov	r0, r6
   15674:	bl	114a4 <strlen@plt>
   15678:	cmp	r0, r9
   1567c:	bne	15698 <argp_help@@Base+0x2d8>
   15680:	mov	r0, r8
   15684:	mov	r1, r6
   15688:	mov	r2, r9
   1568c:	bl	115c4 <strncmp@plt>
   15690:	cmp	r0, #0
   15694:	beq	157f0 <argp_help@@Base+0x430>
   15698:	add	r6, r7, #32
   1569c:	mov	r0, r6
   156a0:	bl	114a4 <strlen@plt>
   156a4:	cmp	r0, r9
   156a8:	bne	156c4 <argp_help@@Base+0x304>
   156ac:	mov	r0, r8
   156b0:	mov	r1, r6
   156b4:	mov	r2, r9
   156b8:	bl	115c4 <strncmp@plt>
   156bc:	cmp	r0, #0
   156c0:	beq	157f0 <argp_help@@Base+0x430>
   156c4:	add	r6, r7, #48	; 0x30
   156c8:	mov	r0, r6
   156cc:	bl	114a4 <strlen@plt>
   156d0:	cmp	r0, r9
   156d4:	bne	156f0 <argp_help@@Base+0x330>
   156d8:	mov	r0, r8
   156dc:	mov	r1, r6
   156e0:	mov	r2, r9
   156e4:	bl	115c4 <strncmp@plt>
   156e8:	cmp	r0, #0
   156ec:	beq	157f0 <argp_help@@Base+0x430>
   156f0:	add	r6, r7, #64	; 0x40
   156f4:	mov	r0, r6
   156f8:	bl	114a4 <strlen@plt>
   156fc:	cmp	r0, r9
   15700:	bne	1571c <argp_help@@Base+0x35c>
   15704:	mov	r0, r8
   15708:	mov	r1, r6
   1570c:	mov	r2, r9
   15710:	bl	115c4 <strncmp@plt>
   15714:	cmp	r0, #0
   15718:	beq	157f0 <argp_help@@Base+0x430>
   1571c:	add	r6, r7, #80	; 0x50
   15720:	mov	r0, r6
   15724:	bl	114a4 <strlen@plt>
   15728:	cmp	r0, r9
   1572c:	bne	15748 <argp_help@@Base+0x388>
   15730:	mov	r0, r8
   15734:	mov	r1, r6
   15738:	mov	r2, r9
   1573c:	bl	115c4 <strncmp@plt>
   15740:	cmp	r0, #0
   15744:	beq	157f0 <argp_help@@Base+0x430>
   15748:	add	r6, r7, #96	; 0x60
   1574c:	mov	r0, r6
   15750:	bl	114a4 <strlen@plt>
   15754:	cmp	r0, r9
   15758:	bne	15774 <argp_help@@Base+0x3b4>
   1575c:	mov	r0, r8
   15760:	mov	r1, r6
   15764:	mov	r2, r9
   15768:	bl	115c4 <strncmp@plt>
   1576c:	cmp	r0, #0
   15770:	beq	157f0 <argp_help@@Base+0x430>
   15774:	add	r6, r7, #112	; 0x70
   15778:	mov	r0, r6
   1577c:	bl	114a4 <strlen@plt>
   15780:	cmp	r0, r9
   15784:	bne	157a0 <argp_help@@Base+0x3e0>
   15788:	mov	r0, r8
   1578c:	mov	r1, r6
   15790:	mov	r2, r9
   15794:	bl	115c4 <strncmp@plt>
   15798:	cmp	r0, #0
   1579c:	beq	157f0 <argp_help@@Base+0x430>
   157a0:	add	r6, r7, #128	; 0x80
   157a4:	mov	r0, r6
   157a8:	bl	114a4 <strlen@plt>
   157ac:	cmp	r0, r9
   157b0:	bne	157cc <argp_help@@Base+0x40c>
   157b4:	mov	r0, r8
   157b8:	mov	r1, r6
   157bc:	mov	r2, r9
   157c0:	bl	115c4 <strncmp@plt>
   157c4:	cmp	r0, #0
   157c8:	beq	157f0 <argp_help@@Base+0x430>
   157cc:	sub	sp, sp, #8
   157d0:	str	r9, [sp]
   157d4:	str	r8, [sp, #4]
   157d8:	movw	r3, #50564	; 0xc584
   157dc:	mov	r1, #0
   157e0:	mov	r2, #0
   157e4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   157e8:	movt	r3, #1
   157ec:	b	15824 <argp_help@@Base+0x464>
   157f0:	cmp	sl, #0
   157f4:	beq	154a8 <argp_help@@Base+0xe8>
   157f8:	ldrb	r0, [r6, #14]
   157fc:	cmp	r0, #0
   15800:	bne	154a8 <argp_help@@Base+0xe8>
   15804:	sub	sp, sp, #8
   15808:	str	r9, [sp]
   1580c:	str	r8, [sp, #4]
   15810:	movw	r3, #50517	; 0xc555
   15814:	mov	r1, #0
   15818:	mov	r2, #0
   1581c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15820:	movt	r3, #1
   15824:	bl	16b00 <argp_failure@@Base>
   15828:	add	sp, sp, #8
   1582c:	b	154b4 <argp_help@@Base+0xf4>
   15830:	tst	r5, #255	; 0xff
   15834:	beq	1585c <argp_help@@Base+0x49c>
   15838:	sub	sp, sp, #8
   1583c:	str	r8, [sp]
   15840:	movw	r3, #50602	; 0xc5aa
   15844:	mov	r1, #0
   15848:	mov	r2, #0
   1584c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15850:	movt	r3, #1
   15854:	bl	16b00 <argp_failure@@Base>
   15858:	add	sp, sp, #8
   1585c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15860:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15864:	movw	r0, #51168	; 0xc7e0
   15868:	movt	r0, #1
   1586c:	cmp	r2, r1
   15870:	bge	158f4 <argp_help@@Base+0x534>
   15874:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15878:	cmp	r2, r1
   1587c:	bge	158fc <argp_help@@Base+0x53c>
   15880:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15884:	cmp	r2, r1
   15888:	bge	15904 <argp_help@@Base+0x544>
   1588c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15890:	cmp	r2, r1
   15894:	bge	1590c <argp_help@@Base+0x54c>
   15898:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1589c:	cmp	r2, r1
   158a0:	bge	15914 <argp_help@@Base+0x554>
   158a4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   158a8:	ldr	r4, [fp, #-132]	; 0xffffff7c
   158ac:	cmp	r2, r1
   158b0:	bge	168f8 <argp_help@@Base+0x1538>
   158b4:	ldr	r0, [fp, #-116]	; 0xffffff8c
   158b8:	sub	r1, fp, #88	; 0x58
   158bc:	mov	r2, r1
   158c0:	mov	r1, r9
   158c4:	vld1.64	{d16-d17}, [r0]
   158c8:	mov	r0, #32
   158cc:	vld1.64	{d18-d19}, [r2], r0
   158d0:	ldr	r0, [fp, #-112]	; 0xffffff90
   158d4:	vst1.64	{d16-d17}, [r0]
   158d8:	mov	r0, #36	; 0x24
   158dc:	vst1.64	{d18-d19}, [r1], r0
   158e0:	mov	r0, #1
   158e4:	str	r0, [r1]
   158e8:	ldr	r0, [r2]
   158ec:	str	r0, [r9, #32]
   158f0:	b	1594c <argp_help@@Base+0x58c>
   158f4:	add	r0, r0, #32
   158f8:	b	15918 <argp_help@@Base+0x558>
   158fc:	add	r0, r0, #48	; 0x30
   15900:	b	15918 <argp_help@@Base+0x558>
   15904:	add	r0, r0, #64	; 0x40
   15908:	b	15918 <argp_help@@Base+0x558>
   1590c:	add	r0, r0, #80	; 0x50
   15910:	b	15918 <argp_help@@Base+0x558>
   15914:	add	r0, r0, #96	; 0x60
   15918:	ldr	r4, [fp, #-132]	; 0xffffff7c
   1591c:	sub	sp, sp, #8
   15920:	movw	r1, #50683	; 0xc5fb
   15924:	str	r0, [sp, #4]
   15928:	movw	r3, #50631	; 0xc5c7
   1592c:	mov	r2, #0
   15930:	movt	r1, #1
   15934:	movt	r3, #1
   15938:	str	r1, [sp]
   1593c:	mov	r1, #0
   15940:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15944:	bl	16b00 <argp_failure@@Base>
   15948:	add	sp, sp, #8
   1594c:	ldr	r2, [r9, #32]
   15950:	mov	r0, r4
   15954:	mov	r1, #0
   15958:	mov	r3, #0
   1595c:	mov	r5, #0
   15960:	bl	19d9c <argp_failure@@Base+0x329c>
   15964:	cmp	r0, #0
   15968:	beq	15d38 <argp_help@@Base+0x978>
   1596c:	mov	sl, r0
   15970:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15974:	str	r4, [fp, #-132]	; 0xffffff7c
   15978:	tst	r0, #11
   1597c:	beq	15b24 <argp_help@@Base+0x764>
   15980:	ldr	r0, [fp, #-108]	; 0xffffff94
   15984:	mov	r1, #0
   15988:	bl	16cf4 <argp_failure@@Base+0x1f4>
   1598c:	ldr	r9, [r0, #4]
   15990:	mov	r5, r0
   15994:	cmp	r9, #0
   15998:	beq	15b1c <argp_help@@Base+0x75c>
   1599c:	ldr	r4, [r5]
   159a0:	movw	r7, #49198	; 0xc02e
   159a4:	str	r5, [fp, #-112]	; 0xffffff90
   159a8:	mov	r5, r9
   159ac:	movt	r7, #1
   159b0:	str	r4, [fp, #-104]	; 0xffffff98
   159b4:	b	159c4 <argp_help@@Base+0x604>
   159b8:	subs	r5, r5, #1
   159bc:	add	r4, r4, #28
   159c0:	beq	15a1c <argp_help@@Base+0x65c>
   159c4:	ldr	r6, [r4, #4]
   159c8:	cmp	r6, #0
   159cc:	beq	159b8 <argp_help@@Base+0x5f8>
   159d0:	ldr	r0, [r4]
   159d4:	add	r8, r0, #12
   159d8:	b	159e8 <argp_help@@Base+0x628>
   159dc:	subs	r6, r6, #1
   159e0:	add	r8, r8, #24
   159e4:	beq	159b8 <argp_help@@Base+0x5f8>
   159e8:	ldr	r0, [r8, #-12]
   159ec:	cmp	r0, #0
   159f0:	beq	159dc <argp_help@@Base+0x61c>
   159f4:	ldrb	r1, [r8]
   159f8:	tst	r1, #2
   159fc:	bne	159dc <argp_help@@Base+0x61c>
   15a00:	mov	r1, r7
   15a04:	bl	11330 <strcmp@plt>
   15a08:	cmp	r0, #0
   15a0c:	bne	159dc <argp_help@@Base+0x61c>
   15a10:	cmp	r4, #0
   15a14:	mvnne	r0, #0
   15a18:	strne	r0, [r4, #12]
   15a1c:	ldr	r4, [fp, #-104]	; 0xffffff98
   15a20:	movw	r8, #49361	; 0xc0d1
   15a24:	mov	r5, r9
   15a28:	movt	r8, #1
   15a2c:	b	15a3c <argp_help@@Base+0x67c>
   15a30:	subs	r5, r5, #1
   15a34:	add	r4, r4, #28
   15a38:	beq	15a94 <argp_help@@Base+0x6d4>
   15a3c:	ldr	r6, [r4, #4]
   15a40:	cmp	r6, #0
   15a44:	beq	15a30 <argp_help@@Base+0x670>
   15a48:	ldr	r0, [r4]
   15a4c:	add	r7, r0, #12
   15a50:	b	15a60 <argp_help@@Base+0x6a0>
   15a54:	subs	r6, r6, #1
   15a58:	add	r7, r7, #24
   15a5c:	beq	15a30 <argp_help@@Base+0x670>
   15a60:	ldr	r0, [r7, #-12]
   15a64:	cmp	r0, #0
   15a68:	beq	15a54 <argp_help@@Base+0x694>
   15a6c:	ldrb	r1, [r7]
   15a70:	tst	r1, #2
   15a74:	bne	15a54 <argp_help@@Base+0x694>
   15a78:	mov	r1, r8
   15a7c:	bl	11330 <strcmp@plt>
   15a80:	cmp	r0, #0
   15a84:	bne	15a54 <argp_help@@Base+0x694>
   15a88:	cmp	r4, #0
   15a8c:	mvnne	r0, #0
   15a90:	strne	r0, [r4, #12]
   15a94:	ldr	r0, [fp, #-104]	; 0xffffff98
   15a98:	ldr	r5, [fp, #-112]	; 0xffffff90
   15a9c:	sub	r2, r9, #1
   15aa0:	and	r6, r9, #3
   15aa4:	mov	r1, #0
   15aa8:	cmp	r2, #3
   15aac:	mov	r2, r0
   15ab0:	bcc	15aec <argp_help@@Base+0x72c>
   15ab4:	sub	r3, r9, r6
   15ab8:	mov	r1, #0
   15abc:	mov	r2, r0
   15ac0:	add	r7, r1, #3
   15ac4:	str	r1, [r2, #24]
   15ac8:	str	r7, [r2, #108]	; 0x6c
   15acc:	add	r7, r1, #2
   15ad0:	str	r7, [r2, #80]	; 0x50
   15ad4:	add	r7, r1, #1
   15ad8:	add	r1, r1, #4
   15adc:	str	r7, [r2, #52]	; 0x34
   15ae0:	add	r2, r2, #112	; 0x70
   15ae4:	cmp	r3, r1
   15ae8:	bne	15ac0 <argp_help@@Base+0x700>
   15aec:	cmp	r6, #0
   15af0:	beq	15b08 <argp_help@@Base+0x748>
   15af4:	add	r2, r2, #24
   15af8:	str	r1, [r2], #28
   15afc:	subs	r6, r6, #1
   15b00:	add	r1, r1, #1
   15b04:	bne	15af8 <argp_help@@Base+0x738>
   15b08:	movw	r3, #32640	; 0x7f80
   15b0c:	mov	r1, r9
   15b10:	mov	r2, #28
   15b14:	movt	r3, #1
   15b18:	bl	11570 <qsort@plt>
   15b1c:	movw	r9, #2160	; 0x870
   15b20:	movt	r9, #3
   15b24:	ldr	r0, [fp, #-92]	; 0xffffffa4
   15b28:	str	r5, [fp, #-112]	; 0xffffff90
   15b2c:	tst	r0, #3
   15b30:	beq	15d48 <argp_help@@Base+0x988>
   15b34:	ldr	r0, [fp, #-108]	; 0xffffff94
   15b38:	bl	173b4 <argp_failure@@Base+0x8b4>
   15b3c:	mov	r2, r0
   15b40:	add	r0, r0, #7
   15b44:	bic	r0, r0, #7
   15b48:	sub	r5, sp, r0
   15b4c:	mov	sp, r5
   15b50:	mov	r0, r5
   15b54:	mov	r1, #0
   15b58:	bl	114ec <memset@plt>
   15b5c:	movw	r7, #50414	; 0xc4ee
   15b60:	movw	r6, #50421	; 0xc4f5
   15b64:	movt	r7, #1
   15b68:	movt	r6, #1
   15b6c:	b	15b90 <argp_help@@Base+0x7d0>
   15b70:	add	r1, r0, #1
   15b74:	str	r1, [sl, #28]
   15b78:	mov	r1, #10
   15b7c:	strb	r1, [r0]
   15b80:	cmp	r7, #0
   15b84:	mov	r7, r6
   15b88:	str	r4, [fp, #-92]	; 0xffffffa4
   15b8c:	beq	15d30 <argp_help@@Base+0x970>
   15b90:	ldr	r1, [sl, #24]
   15b94:	ldr	r2, [sl, #28]
   15b98:	ldr	r0, [sl, #16]
   15b9c:	ldr	r4, [r9, #28]
   15ba0:	sub	r1, r2, r1
   15ba4:	cmp	r1, r0
   15ba8:	bls	15bb4 <argp_help@@Base+0x7f4>
   15bac:	mov	r0, sl
   15bb0:	bl	19e68 <argp_failure@@Base+0x3368>
   15bb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15bb8:	movw	r1, #50408	; 0xc4e8
   15bbc:	ldr	r9, [sl, #12]
   15bc0:	mov	r0, sl
   15bc4:	mov	r2, r7
   15bc8:	str	r4, [sl, #12]
   15bcc:	str	r5, [fp, #-88]	; 0xffffffa8
   15bd0:	movt	r1, #1
   15bd4:	bl	1a484 <argp_failure@@Base+0x3984>
   15bd8:	movw	r0, #2160	; 0x870
   15bdc:	ldr	r1, [sl, #24]
   15be0:	ldr	r2, [sl, #28]
   15be4:	movt	r0, #3
   15be8:	ldr	r4, [r0, #28]
   15bec:	ldr	r0, [sl, #16]
   15bf0:	sub	r1, r2, r1
   15bf4:	cmp	r1, r0
   15bf8:	bls	15c04 <argp_help@@Base+0x844>
   15bfc:	mov	r0, sl
   15c00:	bl	19e68 <argp_failure@@Base+0x3368>
   15c04:	ldr	r8, [sl, #4]
   15c08:	str	r4, [sl, #4]
   15c0c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   15c10:	tst	r4, #2
   15c14:	bne	15c2c <argp_help@@Base+0x86c>
   15c18:	ldr	r0, [fp, #-112]	; 0xffffff90
   15c1c:	mov	r1, sl
   15c20:	bl	17428 <argp_failure@@Base+0x928>
   15c24:	orr	r4, r4, #2
   15c28:	b	15c90 <argp_help@@Base+0x8d0>
   15c2c:	ldr	r0, [fp, #-112]	; 0xffffff90
   15c30:	ldr	r0, [r0, #4]
   15c34:	cmp	r0, #0
   15c38:	beq	15c90 <argp_help@@Base+0x8d0>
   15c3c:	ldr	r0, [sl, #28]
   15c40:	ldr	r1, [sl, #32]
   15c44:	add	r2, r0, #12
   15c48:	cmp	r2, r1
   15c4c:	bls	15c68 <argp_help@@Base+0x8a8>
   15c50:	mov	r0, sl
   15c54:	mov	r1, #12
   15c58:	bl	1a398 <argp_failure@@Base+0x3898>
   15c5c:	cmp	r0, #0
   15c60:	beq	15c90 <argp_help@@Base+0x8d0>
   15c64:	ldr	r0, [sl, #28]
   15c68:	movw	r1, #51152	; 0xc7d0
   15c6c:	movt	r1, #1
   15c70:	vldr	d16, [r1]
   15c74:	movw	r1, #11822	; 0x2e2e
   15c78:	movt	r1, #23854	; 0x5d2e
   15c7c:	str	r1, [r0, #8]
   15c80:	vst1.8	{d16}, [r0]
   15c84:	ldr	r0, [sl, #28]
   15c88:	add	r0, r0, #12
   15c8c:	str	r0, [sl, #28]
   15c90:	sub	sp, sp, #8
   15c94:	str	sl, [sp]
   15c98:	sub	r2, fp, #88	; 0x58
   15c9c:	mov	r3, #1
   15ca0:	ldr	r0, [fp, #-108]	; 0xffffff94
   15ca4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15ca8:	bl	177f8 <argp_failure@@Base+0xcf8>
   15cac:	add	sp, sp, #8
   15cb0:	mov	r7, r0
   15cb4:	ldr	r2, [sl, #24]
   15cb8:	ldr	r0, [sl, #28]
   15cbc:	ldr	r1, [sl, #16]
   15cc0:	sub	r2, r0, r2
   15cc4:	cmp	r2, r1
   15cc8:	bls	15ce4 <argp_help@@Base+0x924>
   15ccc:	mov	r0, sl
   15cd0:	bl	19e68 <argp_failure@@Base+0x3368>
   15cd4:	ldr	r2, [sl, #24]
   15cd8:	ldr	r0, [sl, #28]
   15cdc:	ldr	r1, [sl, #16]
   15ce0:	sub	r2, r0, r2
   15ce4:	cmp	r2, r1
   15ce8:	str	r9, [sl, #12]
   15cec:	bls	15cfc <argp_help@@Base+0x93c>
   15cf0:	mov	r0, sl
   15cf4:	bl	19e68 <argp_failure@@Base+0x3368>
   15cf8:	ldr	r0, [sl, #28]
   15cfc:	str	r8, [sl, #4]
   15d00:	movw	r9, #2160	; 0x870
   15d04:	ldr	r1, [sl, #32]
   15d08:	movt	r9, #3
   15d0c:	cmp	r0, r1
   15d10:	bcc	15b70 <argp_help@@Base+0x7b0>
   15d14:	mov	r0, sl
   15d18:	mov	r1, #1
   15d1c:	bl	1a398 <argp_failure@@Base+0x3898>
   15d20:	cmp	r0, #0
   15d24:	beq	15b80 <argp_help@@Base+0x7c0>
   15d28:	ldr	r0, [sl, #28]
   15d2c:	b	15b70 <argp_help@@Base+0x7b0>
   15d30:	mov	r5, #1
   15d34:	b	15d4c <argp_help@@Base+0x98c>
   15d38:	mov	r0, r4
   15d3c:	sub	sp, fp, #28
   15d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d44:	b	113f0 <funlockfile@plt>
   15d48:	mov	r5, #0
   15d4c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   15d50:	tst	r4, #16
   15d54:	bne	15d6c <argp_help@@Base+0x9ac>
   15d58:	tst	r4, #4
   15d5c:	bne	15d9c <argp_help@@Base+0x9dc>
   15d60:	tst	r4, #8
   15d64:	bne	15dc0 <argp_help@@Base+0xa00>
   15d68:	b	16688 <argp_help@@Base+0x12c8>
   15d6c:	sub	sp, sp, #8
   15d70:	mov	r0, #1
   15d74:	mov	r2, #0
   15d78:	mov	r3, #0
   15d7c:	stm	sp, {r0, sl}
   15d80:	ldr	r0, [fp, #-108]	; 0xffffff94
   15d84:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15d88:	bl	17af0 <argp_failure@@Base+0xff0>
   15d8c:	add	sp, sp, #8
   15d90:	orr	r5, r0, r5
   15d94:	tst	r4, #4
   15d98:	beq	15d60 <argp_help@@Base+0x9a0>
   15d9c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15da0:	movw	r1, #50428	; 0xc4fc
   15da4:	mov	r0, sl
   15da8:	movt	r1, #1
   15dac:	mov	r3, r2
   15db0:	bl	1a484 <argp_failure@@Base+0x3984>
   15db4:	mov	r5, #1
   15db8:	tst	r4, #8
   15dbc:	beq	16688 <argp_help@@Base+0x12c8>
   15dc0:	ldr	r0, [fp, #-112]	; 0xffffff90
   15dc4:	ldr	r1, [r0, #4]
   15dc8:	cmp	r1, #0
   15dcc:	beq	16688 <argp_help@@Base+0x12c8>
   15dd0:	cmp	r5, #0
   15dd4:	beq	15e34 <argp_help@@Base+0xa74>
   15dd8:	ldr	r0, [sl, #28]
   15ddc:	ldr	r1, [sl, #32]
   15de0:	ldr	r5, [fp, #-112]	; 0xffffff90
   15de4:	cmp	r0, r1
   15de8:	bcc	15e04 <argp_help@@Base+0xa44>
   15dec:	mov	r0, sl
   15df0:	mov	r1, #1
   15df4:	bl	1a398 <argp_failure@@Base+0x3898>
   15df8:	cmp	r0, #0
   15dfc:	beq	15e14 <argp_help@@Base+0xa54>
   15e00:	ldr	r0, [sl, #28]
   15e04:	add	r1, r0, #1
   15e08:	str	r1, [sl, #28]
   15e0c:	mov	r1, #10
   15e10:	strb	r1, [r0]
   15e14:	ldr	r1, [r5, #4]
   15e18:	mov	r0, #0
   15e1c:	str	r0, [fp, #-44]	; 0xffffffd4
   15e20:	str	r0, [fp, #-48]	; 0xffffffd0
   15e24:	str	r0, [fp, #-40]	; 0xffffffd8
   15e28:	cmp	r1, #0
   15e2c:	bne	15e44 <argp_help@@Base+0xa84>
   15e30:	b	16684 <argp_help@@Base+0x12c4>
   15e34:	mov	r0, #0
   15e38:	str	r0, [fp, #-44]	; 0xffffffd4
   15e3c:	str	r0, [fp, #-48]	; 0xffffffd0
   15e40:	str	r0, [fp, #-40]	; 0xffffffd8
   15e44:	add	r0, sl, #28
   15e48:	str	r0, [fp, #-96]	; 0xffffffa0
   15e4c:	ldr	r0, [fp, #-112]	; 0xffffff90
   15e50:	str	r4, [fp, #-92]	; 0xffffffa4
   15e54:	ldr	r5, [r0]
   15e58:	b	15e74 <argp_help@@Base+0xab4>
   15e5c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   15e60:	ldr	r0, [fp, #-120]	; 0xffffff88
   15e64:	add	r5, r5, #28
   15e68:	subs	r1, r1, #1
   15e6c:	str	r0, [sl, #12]
   15e70:	beq	16670 <argp_help@@Base+0x12b0>
   15e74:	str	r1, [fp, #-116]	; 0xffffff8c
   15e78:	ldr	r1, [sl, #24]
   15e7c:	ldr	r2, [sl, #28]
   15e80:	ldr	r0, [sl, #16]
   15e84:	ldr	r8, [r5]
   15e88:	mov	r4, r5
   15e8c:	ldr	r5, [r5, #8]
   15e90:	sub	r1, r2, r1
   15e94:	cmp	r1, r0
   15e98:	bls	15ea4 <argp_help@@Base+0xae4>
   15e9c:	mov	r0, sl
   15ea0:	bl	19e68 <argp_failure@@Base+0x3368>
   15ea4:	mov	r0, #0
   15ea8:	mov	r3, #0
   15eac:	ldr	r2, [sl, #4]
   15eb0:	ldr	r1, [sl, #12]
   15eb4:	str	r0, [fp, #-128]	; 0xffffff80
   15eb8:	str	r3, [sl, #4]
   15ebc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15ec0:	str	r4, [fp, #-104]	; 0xffffff98
   15ec4:	str	r1, [fp, #-120]	; 0xffffff88
   15ec8:	str	r2, [fp, #-124]	; 0xffffff84
   15ecc:	str	r0, [fp, #-72]	; 0xffffffb8
   15ed0:	mov	r0, #1
   15ed4:	str	r0, [fp, #-76]	; 0xffffffb4
   15ed8:	sub	r0, fp, #48	; 0x30
   15edc:	str	r0, [fp, #-80]	; 0xffffffb0
   15ee0:	str	sl, [fp, #-84]	; 0xffffffac
   15ee4:	str	r4, [fp, #-88]	; 0xffffffa8
   15ee8:	ldrb	r0, [r8, #12]
   15eec:	tst	r0, #8
   15ef0:	bne	15f34 <argp_help@@Base+0xb74>
   15ef4:	ldr	r0, [r4, #4]
   15ef8:	cmp	r0, #0
   15efc:	beq	15f34 <argp_help@@Base+0xb74>
   15f00:	add	r1, r8, #12
   15f04:	b	15f14 <argp_help@@Base+0xb54>
   15f08:	add	r1, r1, #24
   15f0c:	subs	r0, r0, #1
   15f10:	beq	15f34 <argp_help@@Base+0xb74>
   15f14:	ldr	r2, [r1, #-12]
   15f18:	cmp	r2, #0
   15f1c:	beq	15f08 <argp_help@@Base+0xb48>
   15f20:	ldrb	r2, [r1]
   15f24:	tst	r2, #2
   15f28:	bne	15f08 <argp_help@@Base+0xb48>
   15f2c:	mov	r0, #1
   15f30:	str	r0, [fp, #-128]	; 0xffffff80
   15f34:	ldr	r1, [sl, #24]
   15f38:	ldr	r2, [sl, #28]
   15f3c:	ldr	r0, [sl, #16]
   15f40:	ldr	r4, [r9, #8]
   15f44:	sub	r1, r2, r1
   15f48:	cmp	r1, r0
   15f4c:	bls	15f58 <argp_help@@Base+0xb98>
   15f50:	mov	r0, sl
   15f54:	bl	19e68 <argp_failure@@Base+0x3368>
   15f58:	ldr	r0, [fp, #-104]	; 0xffffff98
   15f5c:	str	r4, [sl, #12]
   15f60:	ldr	r7, [r0, #4]
   15f64:	cmp	r7, #0
   15f68:	beq	160cc <argp_help@@Base+0xd0c>
   15f6c:	add	r9, r8, #12
   15f70:	b	15f90 <argp_help@@Base+0xbd0>
   15f74:	cmp	r2, #0
   15f78:	movne	r0, #1
   15f7c:	strne	r0, [fp, #-40]	; 0xffffffd8
   15f80:	add	r5, r5, #1
   15f84:	add	r9, r9, #24
   15f88:	subs	r7, r7, #1
   15f8c:	beq	160cc <argp_help@@Base+0xd0c>
   15f90:	ldr	r4, [r9]
   15f94:	tst	r4, #8
   15f98:	bne	15f84 <argp_help@@Base+0xbc4>
   15f9c:	ldr	r6, [r9, #-8]
   15fa0:	sub	r0, r6, #1
   15fa4:	cmp	r0, #254	; 0xfe
   15fa8:	bhi	15f84 <argp_help@@Base+0xbc4>
   15fac:	bl	11480 <__ctype_b_loc@plt>
   15fb0:	ldr	r0, [r0]
   15fb4:	add	r0, r0, r6, lsl #1
   15fb8:	ldrb	r0, [r0, #1]
   15fbc:	tst	r0, #64	; 0x40
   15fc0:	beq	15f84 <argp_help@@Base+0xbc4>
   15fc4:	ldrb	r0, [r5]
   15fc8:	cmp	r6, r0
   15fcc:	bne	15f84 <argp_help@@Base+0xbc4>
   15fd0:	tst	r4, #2
   15fd4:	bne	15f80 <argp_help@@Base+0xbc0>
   15fd8:	movw	r0, #2160	; 0x870
   15fdc:	sub	r1, fp, #88	; 0x58
   15fe0:	movt	r0, #3
   15fe4:	ldr	r0, [r0, #8]
   15fe8:	bl	18510 <argp_failure@@Base+0x1a10>
   15fec:	ldr	r0, [sl, #28]
   15ff0:	ldr	r1, [sl, #32]
   15ff4:	cmp	r0, r1
   15ff8:	bcc	16018 <argp_help@@Base+0xc58>
   15ffc:	mov	r0, sl
   16000:	mov	r1, #1
   16004:	bl	1a398 <argp_failure@@Base+0x3898>
   16008:	cmp	r0, #0
   1600c:	beq	1602c <argp_help@@Base+0xc6c>
   16010:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16014:	ldr	r0, [r0]
   16018:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1601c:	add	r1, r0, #1
   16020:	str	r1, [r2]
   16024:	mov	r1, #45	; 0x2d
   16028:	strb	r1, [r0]
   1602c:	ldr	r0, [sl, #28]
   16030:	ldr	r1, [sl, #32]
   16034:	ldrb	r4, [r5]
   16038:	cmp	r0, r1
   1603c:	bcc	1605c <argp_help@@Base+0xc9c>
   16040:	mov	r0, sl
   16044:	mov	r1, #1
   16048:	bl	1a398 <argp_failure@@Base+0x3898>
   1604c:	cmp	r0, #0
   16050:	beq	1606c <argp_help@@Base+0xcac>
   16054:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16058:	ldr	r0, [r0]
   1605c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16060:	add	r1, r0, #1
   16064:	str	r1, [r2]
   16068:	strb	r4, [r0]
   1606c:	ldr	r0, [fp, #-128]	; 0xffffff80
   16070:	ldr	r2, [r8, #8]
   16074:	cmp	r0, #0
   16078:	beq	16090 <argp_help@@Base+0xcd0>
   1607c:	movw	r0, #2160	; 0x870
   16080:	movt	r0, #3
   16084:	ldr	r0, [r0]
   16088:	cmp	r0, #0
   1608c:	beq	15f74 <argp_help@@Base+0xbb4>
   16090:	cmp	r2, #0
   16094:	beq	15f80 <argp_help@@Base+0xbc0>
   16098:	ldrb	r0, [r8, #12]
   1609c:	tst	r0, #1
   160a0:	bne	160b8 <argp_help@@Base+0xcf8>
   160a4:	movw	r1, #50627	; 0xc5c3
   160a8:	mov	r0, sl
   160ac:	movt	r1, #1
   160b0:	bl	1a484 <argp_failure@@Base+0x3984>
   160b4:	b	15f80 <argp_help@@Base+0xbc0>
   160b8:	movw	r1, #51123	; 0xc7b3
   160bc:	mov	r0, sl
   160c0:	movt	r1, #1
   160c4:	bl	1a484 <argp_failure@@Base+0x3984>
   160c8:	b	15f80 <argp_help@@Base+0xbc0>
   160cc:	ldrb	r0, [r8, #12]
   160d0:	movw	r9, #2160	; 0x870
   160d4:	movt	r9, #3
   160d8:	tst	r0, #8
   160dc:	bne	1619c <argp_help@@Base+0xddc>
   160e0:	ldr	r1, [sl, #24]
   160e4:	ldr	r2, [sl, #28]
   160e8:	ldr	r0, [sl, #16]
   160ec:	ldr	r4, [r9, #12]
   160f0:	sub	r1, r2, r1
   160f4:	cmp	r1, r0
   160f8:	bls	16104 <argp_help@@Base+0xd44>
   160fc:	mov	r0, sl
   16100:	bl	19e68 <argp_failure@@Base+0x3368>
   16104:	ldr	r0, [fp, #-104]	; 0xffffff98
   16108:	str	r4, [sl, #12]
   1610c:	ldr	r4, [r0, #4]
   16110:	cmp	r4, #0
   16114:	beq	16274 <argp_help@@Base+0xeb4>
   16118:	add	r5, r8, #12
   1611c:	b	1613c <argp_help@@Base+0xd7c>
   16120:	movw	r1, #51133	; 0xc7bd
   16124:	mov	r0, sl
   16128:	movt	r1, #1
   1612c:	bl	1a484 <argp_failure@@Base+0x3984>
   16130:	add	r5, r5, #24
   16134:	subs	r4, r4, #1
   16138:	beq	16274 <argp_help@@Base+0xeb4>
   1613c:	ldr	r0, [r5, #-12]
   16140:	cmp	r0, #0
   16144:	beq	16130 <argp_help@@Base+0xd70>
   16148:	ldrb	r0, [r5]
   1614c:	tst	r0, #2
   16150:	bne	16130 <argp_help@@Base+0xd70>
   16154:	ldr	r0, [r9, #12]
   16158:	sub	r1, fp, #88	; 0x58
   1615c:	bl	18510 <argp_failure@@Base+0x1a10>
   16160:	ldr	r2, [r5, #-12]
   16164:	movw	r1, #51128	; 0xc7b8
   16168:	mov	r0, sl
   1616c:	movt	r1, #1
   16170:	bl	1a484 <argp_failure@@Base+0x3984>
   16174:	ldr	r2, [r8, #8]
   16178:	cmp	r2, #0
   1617c:	beq	16130 <argp_help@@Base+0xd70>
   16180:	ldrb	r0, [r8, #12]
   16184:	tst	r0, #1
   16188:	beq	16120 <argp_help@@Base+0xd60>
   1618c:	movw	r1, #51137	; 0xc7c1
   16190:	mov	r0, sl
   16194:	movt	r1, #1
   16198:	b	1612c <argp_help@@Base+0xd6c>
   1619c:	ldr	r1, [sl, #24]
   161a0:	ldr	r2, [sl, #28]
   161a4:	ldr	r0, [sl, #16]
   161a8:	ldr	r4, [r9, #16]
   161ac:	sub	r1, r2, r1
   161b0:	cmp	r1, r0
   161b4:	bls	161c0 <argp_help@@Base+0xe00>
   161b8:	mov	r0, sl
   161bc:	bl	19e68 <argp_failure@@Base+0x3368>
   161c0:	ldr	r0, [fp, #-104]	; 0xffffff98
   161c4:	str	r4, [sl, #12]
   161c8:	ldr	r6, [r0, #4]
   161cc:	cmp	r6, #0
   161d0:	beq	16274 <argp_help@@Base+0xeb4>
   161d4:	add	r4, r8, #12
   161d8:	b	16204 <argp_help@@Base+0xe44>
   161dc:	mov	r1, r5
   161e0:	mov	r2, r7
   161e4:	bl	113a8 <memcpy@plt>
   161e8:	ldr	r1, [fp, #-96]	; 0xffffffa0
   161ec:	ldr	r0, [r1]
   161f0:	add	r0, r0, r7
   161f4:	str	r0, [r1]
   161f8:	add	r4, r4, #24
   161fc:	subs	r6, r6, #1
   16200:	beq	16274 <argp_help@@Base+0xeb4>
   16204:	ldr	r0, [r4, #-12]
   16208:	cmp	r0, #0
   1620c:	beq	161f8 <argp_help@@Base+0xe38>
   16210:	ldrb	r0, [r4]
   16214:	tst	r0, #2
   16218:	bne	161f8 <argp_help@@Base+0xe38>
   1621c:	ldr	r0, [r9, #16]
   16220:	sub	r1, fp, #88	; 0x58
   16224:	bl	18510 <argp_failure@@Base+0x1a10>
   16228:	ldr	r5, [r4, #-12]
   1622c:	mov	r0, r5
   16230:	bl	114a4 <strlen@plt>
   16234:	cmp	r0, #0
   16238:	beq	161f8 <argp_help@@Base+0xe38>
   1623c:	mov	r7, r0
   16240:	ldr	r0, [sl, #28]
   16244:	ldr	r1, [sl, #32]
   16248:	add	r2, r0, r7
   1624c:	cmp	r2, r1
   16250:	bls	161dc <argp_help@@Base+0xe1c>
   16254:	mov	r0, sl
   16258:	mov	r1, r7
   1625c:	bl	1a398 <argp_failure@@Base+0x3898>
   16260:	cmp	r0, #0
   16264:	beq	161f8 <argp_help@@Base+0xe38>
   16268:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1626c:	ldr	r0, [r0]
   16270:	b	161dc <argp_help@@Base+0xe1c>
   16274:	ldr	r1, [sl, #24]
   16278:	ldr	r2, [sl, #28]
   1627c:	ldr	r0, [sl, #16]
   16280:	sub	r1, r2, r1
   16284:	cmp	r1, r0
   16288:	bls	16294 <argp_help@@Base+0xed4>
   1628c:	mov	r0, sl
   16290:	bl	19e68 <argp_failure@@Base+0x3368>
   16294:	mov	r0, #0
   16298:	ldr	r5, [fp, #-104]	; 0xffffff98
   1629c:	str	r0, [sl, #4]
   162a0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   162a4:	cmp	r0, #0
   162a8:	beq	16300 <argp_help@@Base+0xf40>
   162ac:	ldrb	r0, [r8, #12]
   162b0:	tst	r0, #8
   162b4:	bne	162e0 <argp_help@@Base+0xf20>
   162b8:	ldr	r4, [r8, #4]
   162bc:	sub	r0, r4, #1
   162c0:	cmp	r0, #254	; 0xfe
   162c4:	bhi	162e0 <argp_help@@Base+0xf20>
   162c8:	bl	11480 <__ctype_b_loc@plt>
   162cc:	ldr	r0, [r0]
   162d0:	add	r0, r0, r4, lsl #1
   162d4:	ldrb	r0, [r0, #1]
   162d8:	tst	r0, #64	; 0x40
   162dc:	bne	16620 <argp_help@@Base+0x1260>
   162e0:	ldr	r0, [r8]
   162e4:	cmp	r0, #0
   162e8:	bne	16620 <argp_help@@Base+0x1260>
   162ec:	ldr	r1, [r5, #20]
   162f0:	ldr	r0, [r8, #16]
   162f4:	sub	r2, fp, #88	; 0x58
   162f8:	bl	1871c <argp_failure@@Base+0x1c1c>
   162fc:	b	1661c <argp_help@@Base+0x125c>
   16300:	ldr	r6, [r5, #20]
   16304:	ldr	r9, [r8, #16]
   16308:	cmp	r6, #0
   1630c:	mov	r7, r9
   16310:	beq	1634c <argp_help@@Base+0xf8c>
   16314:	ldr	r0, [r6, #20]
   16318:	mov	r7, r9
   1631c:	cmp	r0, #0
   16320:	beq	1634c <argp_help@@Base+0xf8c>
   16324:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16328:	ldr	r7, [r8, #4]
   1632c:	mov	r0, r6
   16330:	bl	13bcc <argp_parse@@Base+0xc68>
   16334:	ldr	r3, [r6, #20]
   16338:	mov	r2, r0
   1633c:	mov	r0, r7
   16340:	mov	r1, r9
   16344:	blx	r3
   16348:	mov	r7, r0
   1634c:	cmp	r7, #0
   16350:	beq	165ac <argp_help@@Base+0x11ec>
   16354:	ldrb	r0, [r7]
   16358:	cmp	r0, #0
   1635c:	beq	1659c <argp_help@@Base+0x11dc>
   16360:	ldr	r1, [sl, #24]
   16364:	ldr	r2, [sl, #28]
   16368:	ldr	r0, [sl, #16]
   1636c:	mov	r8, r5
   16370:	sub	r1, r2, r1
   16374:	cmp	r1, r0
   16378:	bls	16394 <argp_help@@Base+0xfd4>
   1637c:	mov	r0, sl
   16380:	bl	19e68 <argp_failure@@Base+0x3368>
   16384:	ldr	r1, [sl, #24]
   16388:	ldr	r2, [sl, #28]
   1638c:	ldr	r0, [sl, #16]
   16390:	sub	r1, r2, r1
   16394:	movw	r2, #2160	; 0x870
   16398:	ldr	r5, [sl, #20]
   1639c:	cmp	r1, r0
   163a0:	movt	r2, #3
   163a4:	ldr	r4, [r2, #20]
   163a8:	mov	r6, r4
   163ac:	bls	163d4 <argp_help@@Base+0x1014>
   163b0:	mov	r0, sl
   163b4:	bl	19e68 <argp_failure@@Base+0x3368>
   163b8:	movw	r0, #2160	; 0x870
   163bc:	ldr	r1, [sl, #24]
   163c0:	ldr	r2, [sl, #28]
   163c4:	movt	r0, #3
   163c8:	ldr	r6, [r0, #20]
   163cc:	ldr	r0, [sl, #16]
   163d0:	sub	r1, r2, r1
   163d4:	bic	r5, r5, r5, asr #31
   163d8:	str	r4, [sl, #4]
   163dc:	cmp	r1, r0
   163e0:	mov	r4, r6
   163e4:	bls	163fc <argp_help@@Base+0x103c>
   163e8:	mov	r0, sl
   163ec:	bl	19e68 <argp_failure@@Base+0x3368>
   163f0:	movw	r0, #2160	; 0x870
   163f4:	movt	r0, #3
   163f8:	ldr	r4, [r0, #20]
   163fc:	add	r0, r4, #3
   16400:	str	r6, [sl, #12]
   16404:	cmp	r5, r0
   16408:	bls	16454 <argp_help@@Base+0x1094>
   1640c:	ldr	r0, [sl, #28]
   16410:	ldr	r1, [sl, #32]
   16414:	mov	r5, r8
   16418:	cmp	r0, r1
   1641c:	bcc	1643c <argp_help@@Base+0x107c>
   16420:	mov	r0, sl
   16424:	mov	r1, #1
   16428:	bl	1a398 <argp_failure@@Base+0x3898>
   1642c:	cmp	r0, #0
   16430:	beq	1653c <argp_help@@Base+0x117c>
   16434:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16438:	ldr	r0, [r0]
   1643c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16440:	add	r1, r0, #1
   16444:	str	r1, [r2]
   16448:	mov	r1, #10
   1644c:	strb	r1, [r0]
   16450:	b	1653c <argp_help@@Base+0x117c>
   16454:	cmp	r5, r4
   16458:	bcs	164e8 <argp_help@@Base+0x1128>
   1645c:	ldr	r1, [sl, #24]
   16460:	ldr	r2, [sl, #28]
   16464:	ldr	r0, [sl, #16]
   16468:	sub	r1, r2, r1
   1646c:	cmp	r1, r0
   16470:	bls	1647c <argp_help@@Base+0x10bc>
   16474:	mov	r0, sl
   16478:	bl	19e68 <argp_failure@@Base+0x3368>
   1647c:	ldr	r0, [sl, #20]
   16480:	mov	r5, r8
   16484:	cmp	r0, #0
   16488:	subgt	r4, r4, r0
   1648c:	cmp	r4, #1
   16490:	bge	164b4 <argp_help@@Base+0x10f4>
   16494:	b	1653c <argp_help@@Base+0x117c>
   16498:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1649c:	add	r1, r0, #1
   164a0:	str	r1, [r2]
   164a4:	mov	r1, #32
   164a8:	strb	r1, [r0]
   164ac:	cmp	r4, #0
   164b0:	ble	1653c <argp_help@@Base+0x117c>
   164b4:	ldr	r0, [sl, #28]
   164b8:	ldr	r1, [sl, #32]
   164bc:	sub	r4, r4, #1
   164c0:	cmp	r0, r1
   164c4:	bcc	16498 <argp_help@@Base+0x10d8>
   164c8:	mov	r0, sl
   164cc:	mov	r1, #1
   164d0:	bl	1a398 <argp_failure@@Base+0x3898>
   164d4:	cmp	r0, #0
   164d8:	beq	164ac <argp_help@@Base+0x10ec>
   164dc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   164e0:	ldr	r0, [r0]
   164e4:	b	16498 <argp_help@@Base+0x10d8>
   164e8:	ldr	r0, [sl, #28]
   164ec:	ldr	r1, [sl, #32]
   164f0:	mov	r5, r8
   164f4:	add	r2, r0, #3
   164f8:	cmp	r2, r1
   164fc:	bls	1651c <argp_help@@Base+0x115c>
   16500:	mov	r0, sl
   16504:	mov	r1, #3
   16508:	bl	1a398 <argp_failure@@Base+0x3898>
   1650c:	cmp	r0, #0
   16510:	beq	1653c <argp_help@@Base+0x117c>
   16514:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16518:	ldr	r0, [r0]
   1651c:	mov	r1, #32
   16520:	strb	r1, [r0, #2]
   16524:	movw	r1, #8224	; 0x2020
   16528:	strh	r1, [r0]
   1652c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16530:	ldr	r0, [r1]
   16534:	add	r0, r0, #3
   16538:	str	r0, [r1]
   1653c:	mov	r0, r7
   16540:	bl	114a4 <strlen@plt>
   16544:	cmp	r0, #0
   16548:	beq	1659c <argp_help@@Base+0x11dc>
   1654c:	mov	r8, r0
   16550:	ldr	r0, [sl, #28]
   16554:	ldr	r1, [sl, #32]
   16558:	add	r2, r0, r8
   1655c:	cmp	r2, r1
   16560:	bls	16580 <argp_help@@Base+0x11c0>
   16564:	mov	r0, sl
   16568:	mov	r1, r8
   1656c:	bl	1a398 <argp_failure@@Base+0x3898>
   16570:	cmp	r0, #0
   16574:	beq	1659c <argp_help@@Base+0x11dc>
   16578:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1657c:	ldr	r0, [r0]
   16580:	mov	r1, r7
   16584:	mov	r2, r8
   16588:	bl	113a8 <memcpy@plt>
   1658c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16590:	ldr	r0, [r1]
   16594:	add	r0, r0, r8
   16598:	str	r0, [r1]
   1659c:	cmp	r7, r9
   165a0:	beq	165ac <argp_help@@Base+0x11ec>
   165a4:	mov	r0, r7
   165a8:	bl	14240 <argp_parse@@Base+0x12dc>
   165ac:	ldr	r2, [sl, #24]
   165b0:	ldr	r0, [sl, #28]
   165b4:	ldr	r1, [sl, #16]
   165b8:	sub	r2, r0, r2
   165bc:	cmp	r2, r1
   165c0:	bls	165d0 <argp_help@@Base+0x1210>
   165c4:	mov	r0, sl
   165c8:	bl	19e68 <argp_failure@@Base+0x3368>
   165cc:	ldr	r0, [sl, #28]
   165d0:	mov	r1, #0
   165d4:	movw	r9, #2160	; 0x870
   165d8:	str	r1, [sl, #4]
   165dc:	movt	r9, #3
   165e0:	ldr	r1, [sl, #32]
   165e4:	cmp	r0, r1
   165e8:	bcc	16608 <argp_help@@Base+0x1248>
   165ec:	mov	r0, sl
   165f0:	mov	r1, #1
   165f4:	bl	1a398 <argp_failure@@Base+0x3898>
   165f8:	cmp	r0, #0
   165fc:	beq	1661c <argp_help@@Base+0x125c>
   16600:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16604:	ldr	r0, [r0]
   16608:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1660c:	add	r1, r0, #1
   16610:	str	r1, [r2]
   16614:	mov	r1, #10
   16618:	strb	r1, [r0]
   1661c:	str	r5, [fp, #-48]	; 0xffffffd0
   16620:	ldr	r1, [sl, #24]
   16624:	ldr	r2, [sl, #28]
   16628:	ldr	r0, [sl, #16]
   1662c:	sub	r1, r2, r1
   16630:	cmp	r1, r0
   16634:	bls	16650 <argp_help@@Base+0x1290>
   16638:	mov	r0, sl
   1663c:	bl	19e68 <argp_failure@@Base+0x3368>
   16640:	ldr	r1, [sl, #24]
   16644:	ldr	r2, [sl, #28]
   16648:	ldr	r0, [sl, #16]
   1664c:	sub	r1, r2, r1
   16650:	ldr	r2, [fp, #-124]	; 0xffffff84
   16654:	ldr	r4, [fp, #-92]	; 0xffffffa4
   16658:	cmp	r1, r0
   1665c:	str	r2, [sl, #4]
   16660:	bls	15e5c <argp_help@@Base+0xa9c>
   16664:	mov	r0, sl
   16668:	bl	19e68 <argp_failure@@Base+0x3368>
   1666c:	b	15e5c <argp_help@@Base+0xa9c>
   16670:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16674:	cmp	r0, #0
   16678:	ldrne	r0, [r9, #4]
   1667c:	cmpne	r0, #0
   16680:	bne	16790 <argp_help@@Base+0x13d0>
   16684:	mov	r5, #1
   16688:	tst	r4, #32
   1668c:	beq	166b8 <argp_help@@Base+0x12f8>
   16690:	sub	sp, sp, #8
   16694:	mov	r0, #0
   16698:	mov	r2, #1
   1669c:	mov	r3, r5
   166a0:	stm	sp, {r0, sl}
   166a4:	ldr	r0, [fp, #-108]	; 0xffffff94
   166a8:	ldr	r1, [fp, #-100]	; 0xffffff9c
   166ac:	bl	17af0 <argp_failure@@Base+0xff0>
   166b0:	add	sp, sp, #8
   166b4:	orr	r5, r0, r5
   166b8:	tst	r4, #64	; 0x40
   166bc:	beq	16728 <argp_help@@Base+0x1368>
   166c0:	movw	r4, #2364	; 0x93c
   166c4:	movt	r4, #3
   166c8:	ldr	r0, [r4]
   166cc:	cmp	r0, #0
   166d0:	beq	16728 <argp_help@@Base+0x1368>
   166d4:	cmp	r5, #0
   166d8:	beq	16714 <argp_help@@Base+0x1354>
   166dc:	ldr	r0, [sl, #28]
   166e0:	ldr	r1, [sl, #32]
   166e4:	cmp	r0, r1
   166e8:	bcc	16704 <argp_help@@Base+0x1344>
   166ec:	mov	r0, sl
   166f0:	mov	r1, #1
   166f4:	bl	1a398 <argp_failure@@Base+0x3898>
   166f8:	cmp	r0, #0
   166fc:	beq	16714 <argp_help@@Base+0x1354>
   16700:	ldr	r0, [sl, #28]
   16704:	add	r1, r0, #1
   16708:	str	r1, [sl, #28]
   1670c:	mov	r1, #10
   16710:	strb	r1, [r0]
   16714:	ldr	r2, [r4]
   16718:	movw	r1, #50483	; 0xc533
   1671c:	mov	r0, sl
   16720:	movt	r1, #1
   16724:	bl	1a484 <argp_failure@@Base+0x3984>
   16728:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1672c:	bl	113f0 <funlockfile@plt>
   16730:	ldr	r5, [fp, #-112]	; 0xffffff90
   16734:	cmp	r5, #0
   16738:	beq	16780 <argp_help@@Base+0x13c0>
   1673c:	ldr	r0, [r5, #12]
   16740:	cmp	r0, #0
   16744:	beq	1675c <argp_help@@Base+0x139c>
   16748:	ldr	r4, [r0, #24]
   1674c:	bl	14240 <argp_parse@@Base+0x12dc>
   16750:	cmp	r4, #0
   16754:	mov	r0, r4
   16758:	bne	16748 <argp_help@@Base+0x1388>
   1675c:	ldr	r0, [r5, #4]
   16760:	cmp	r0, #0
   16764:	beq	16778 <argp_help@@Base+0x13b8>
   16768:	ldr	r0, [r5]
   1676c:	bl	14240 <argp_parse@@Base+0x12dc>
   16770:	ldr	r0, [r5, #8]
   16774:	bl	14240 <argp_parse@@Base+0x12dc>
   16778:	mov	r0, r5
   1677c:	bl	14240 <argp_parse@@Base+0x12dc>
   16780:	mov	r0, sl
   16784:	bl	19e24 <argp_failure@@Base+0x3324>
   16788:	sub	sp, fp, #28
   1678c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16790:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16794:	movw	r5, #51007	; 0xc73f
   16798:	movt	r5, #1
   1679c:	cmp	r0, #0
   167a0:	beq	167f0 <argp_help@@Base+0x1430>
   167a4:	ldr	r6, [r0]
   167a8:	cmp	r6, #0
   167ac:	beq	167f0 <argp_help@@Base+0x1430>
   167b0:	ldr	r0, [r6, #20]
   167b4:	cmp	r0, #0
   167b8:	beq	167f0 <argp_help@@Base+0x1430>
   167bc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   167c0:	mov	r0, r6
   167c4:	bl	13bcc <argp_parse@@Base+0xc68>
   167c8:	ldr	r3, [r6, #20]
   167cc:	movw	r1, #51007	; 0xc73f
   167d0:	mov	r2, r0
   167d4:	movw	r0, #5
   167d8:	movt	r0, #512	; 0x200
   167dc:	movt	r1, #1
   167e0:	blx	r3
   167e4:	mov	r5, r0
   167e8:	cmp	r0, #0
   167ec:	beq	16684 <argp_help@@Base+0x12c4>
   167f0:	ldrb	r0, [r5]
   167f4:	cmp	r0, #0
   167f8:	beq	168dc <argp_help@@Base+0x151c>
   167fc:	ldr	r0, [sl, #28]
   16800:	ldr	r1, [sl, #32]
   16804:	cmp	r0, r1
   16808:	bcc	16828 <argp_help@@Base+0x1468>
   1680c:	mov	r0, sl
   16810:	mov	r1, #1
   16814:	bl	1a398 <argp_failure@@Base+0x3898>
   16818:	cmp	r0, #0
   1681c:	beq	1683c <argp_help@@Base+0x147c>
   16820:	ldr	r0, [fp, #-96]	; 0xffffffa0
   16824:	ldr	r0, [r0]
   16828:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1682c:	add	r1, r0, #1
   16830:	str	r1, [r2]
   16834:	mov	r1, #10
   16838:	strb	r1, [r0]
   1683c:	mov	r0, r5
   16840:	bl	114a4 <strlen@plt>
   16844:	cmp	r0, #0
   16848:	beq	1689c <argp_help@@Base+0x14dc>
   1684c:	mov	r6, r0
   16850:	ldr	r0, [sl, #28]
   16854:	ldr	r1, [sl, #32]
   16858:	add	r2, r0, r6
   1685c:	cmp	r2, r1
   16860:	bls	16880 <argp_help@@Base+0x14c0>
   16864:	mov	r0, sl
   16868:	mov	r1, r6
   1686c:	bl	1a398 <argp_failure@@Base+0x3898>
   16870:	cmp	r0, #0
   16874:	beq	1689c <argp_help@@Base+0x14dc>
   16878:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1687c:	ldr	r0, [r0]
   16880:	mov	r1, r5
   16884:	mov	r2, r6
   16888:	bl	113a8 <memcpy@plt>
   1688c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16890:	ldr	r0, [r1]
   16894:	add	r0, r0, r6
   16898:	str	r0, [r1]
   1689c:	ldr	r0, [sl, #28]
   168a0:	ldr	r1, [sl, #32]
   168a4:	cmp	r0, r1
   168a8:	bcc	168c8 <argp_help@@Base+0x1508>
   168ac:	mov	r0, sl
   168b0:	mov	r1, #1
   168b4:	bl	1a398 <argp_failure@@Base+0x3898>
   168b8:	cmp	r0, #0
   168bc:	beq	168dc <argp_help@@Base+0x151c>
   168c0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   168c4:	ldr	r0, [r0]
   168c8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   168cc:	add	r1, r0, #1
   168d0:	str	r1, [r2]
   168d4:	mov	r1, #10
   168d8:	strb	r1, [r0]
   168dc:	movw	r0, #51007	; 0xc73f
   168e0:	movt	r0, #1
   168e4:	cmp	r5, r0
   168e8:	beq	16684 <argp_help@@Base+0x12c4>
   168ec:	mov	r0, r5
   168f0:	bl	14240 <argp_parse@@Base+0x12dc>
   168f4:	b	16684 <argp_help@@Base+0x12c4>
   168f8:	add	r0, r0, #112	; 0x70
   168fc:	b	1591c <argp_help@@Base+0x55c>

00016900 <argp_state_help@@Base>:
   16900:	push	{r4, r5, fp, lr}
   16904:	add	fp, sp, #8
   16908:	sub	sp, sp, #8
   1690c:	mov	r4, r2
   16910:	mov	r2, r1
   16914:	cmp	r0, #0
   16918:	beq	16964 <argp_state_help@@Base+0x64>
   1691c:	cmp	r2, #0
   16920:	beq	1699c <argp_state_help@@Base+0x9c>
   16924:	ldr	r1, [r0, #16]
   16928:	mov	r5, r0
   1692c:	ands	r0, r1, #2
   16930:	bne	1699c <argp_state_help@@Base+0x9c>
   16934:	ldr	r3, [r5, #40]	; 0x28
   16938:	ldr	r0, [r5]
   1693c:	and	r1, r1, #64	; 0x40
   16940:	orr	r4, r4, r1, lsl #1
   16944:	mov	r1, r5
   16948:	str	r3, [sp]
   1694c:	mov	r3, r4
   16950:	bl	153ec <argp_help@@Base+0x2c>
   16954:	ldrb	r0, [r5, #16]
   16958:	tst	r0, #32
   1695c:	beq	1698c <argp_state_help@@Base+0x8c>
   16960:	b	1699c <argp_state_help@@Base+0x9c>
   16964:	cmp	r2, #0
   16968:	beq	1699c <argp_state_help@@Base+0x9c>
   1696c:	movw	r0, #2224	; 0x8b0
   16970:	mov	r1, #0
   16974:	mov	r3, r4
   16978:	movt	r0, #3
   1697c:	ldr	r0, [r0]
   16980:	str	r0, [sp]
   16984:	mov	r0, #0
   16988:	bl	153ec <argp_help@@Base+0x2c>
   1698c:	tst	r4, #256	; 0x100
   16990:	bne	169a4 <argp_state_help@@Base+0xa4>
   16994:	tst	r4, #512	; 0x200
   16998:	bne	169b4 <argp_state_help@@Base+0xb4>
   1699c:	sub	sp, fp, #8
   169a0:	pop	{r4, r5, fp, pc}
   169a4:	movw	r0, #2216	; 0x8a8
   169a8:	movt	r0, #3
   169ac:	ldr	r0, [r0]
   169b0:	bl	1148c <exit@plt>
   169b4:	mov	r0, #0
   169b8:	bl	1148c <exit@plt>

000169bc <argp_error@@Base>:
   169bc:	sub	sp, sp, #8
   169c0:	push	{r4, r5, r6, sl, fp, lr}
   169c4:	add	fp, sp, #16
   169c8:	sub	sp, sp, #8
   169cc:	mov	r6, r1
   169d0:	mov	r4, r0
   169d4:	cmp	r0, #0
   169d8:	str	r2, [fp, #8]
   169dc:	str	r3, [fp, #12]
   169e0:	beq	169f8 <argp_error@@Base+0x3c>
   169e4:	ldrb	r0, [r4, #16]
   169e8:	tst	r0, #2
   169ec:	bne	16ac0 <argp_error@@Base+0x104>
   169f0:	add	r0, r4, #44	; 0x2c
   169f4:	b	16a00 <argp_error@@Base+0x44>
   169f8:	movw	r0, #2232	; 0x8b8
   169fc:	movt	r0, #3
   16a00:	ldr	r5, [r0]
   16a04:	cmp	r5, #0
   16a08:	beq	16ac0 <argp_error@@Base+0x104>
   16a0c:	mov	r0, r5
   16a10:	bl	11558 <flockfile@plt>
   16a14:	add	r0, fp, #8
   16a18:	cmp	r4, #0
   16a1c:	mov	r1, r5
   16a20:	str	r0, [sp, #4]
   16a24:	movw	r0, #2224	; 0x8b0
   16a28:	movt	r0, #3
   16a2c:	addne	r0, r4, #40	; 0x28
   16a30:	ldr	r0, [r0]
   16a34:	bl	11318 <fputs_unlocked@plt>
   16a38:	ldr	r0, [r5, #20]
   16a3c:	ldr	r1, [r5, #24]
   16a40:	cmp	r0, r1
   16a44:	bcs	16ad0 <argp_error@@Base+0x114>
   16a48:	add	r1, r0, #1
   16a4c:	str	r1, [r5, #20]
   16a50:	mov	r1, #58	; 0x3a
   16a54:	strb	r1, [r0]
   16a58:	ldr	r0, [r5, #20]
   16a5c:	ldr	r1, [r5, #24]
   16a60:	cmp	r0, r1
   16a64:	bcs	16ae0 <argp_error@@Base+0x124>
   16a68:	add	r1, r0, #1
   16a6c:	str	r1, [r5, #20]
   16a70:	mov	r1, #32
   16a74:	strb	r1, [r0]
   16a78:	ldr	r2, [sp, #4]
   16a7c:	mov	r0, r5
   16a80:	mov	r1, r6
   16a84:	bl	11528 <vfprintf@plt>
   16a88:	ldr	r0, [r5, #20]
   16a8c:	ldr	r1, [r5, #24]
   16a90:	cmp	r0, r1
   16a94:	bcs	16af0 <argp_error@@Base+0x134>
   16a98:	add	r1, r0, #1
   16a9c:	str	r1, [r5, #20]
   16aa0:	mov	r1, #10
   16aa4:	strb	r1, [r0]
   16aa8:	mov	r0, r4
   16aac:	mov	r1, r5
   16ab0:	mov	r2, #260	; 0x104
   16ab4:	bl	16900 <argp_state_help@@Base>
   16ab8:	mov	r0, r5
   16abc:	bl	113f0 <funlockfile@plt>
   16ac0:	sub	sp, fp, #16
   16ac4:	pop	{r4, r5, r6, sl, fp, lr}
   16ac8:	add	sp, sp, #8
   16acc:	bx	lr
   16ad0:	mov	r0, r5
   16ad4:	mov	r1, #58	; 0x3a
   16ad8:	bl	11510 <__overflow@plt>
   16adc:	b	16a58 <argp_error@@Base+0x9c>
   16ae0:	mov	r0, r5
   16ae4:	mov	r1, #32
   16ae8:	bl	11510 <__overflow@plt>
   16aec:	b	16a78 <argp_error@@Base+0xbc>
   16af0:	mov	r0, r5
   16af4:	mov	r1, #10
   16af8:	bl	11510 <__overflow@plt>
   16afc:	b	16aa8 <argp_error@@Base+0xec>

00016b00 <argp_failure@@Base>:
   16b00:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16b04:	add	fp, sp, #24
   16b08:	sub	sp, sp, #200	; 0xc8
   16b0c:	mov	r4, r3
   16b10:	mov	r7, r2
   16b14:	mov	r8, r1
   16b18:	mov	r5, r0
   16b1c:	cmp	r0, #0
   16b20:	beq	16b38 <argp_failure@@Base+0x38>
   16b24:	ldrb	r0, [r5, #16]
   16b28:	tst	r0, #2
   16b2c:	bne	16c9c <argp_failure@@Base+0x19c>
   16b30:	add	r0, r5, #44	; 0x2c
   16b34:	b	16b40 <argp_failure@@Base+0x40>
   16b38:	movw	r0, #2232	; 0x8b8
   16b3c:	movt	r0, #3
   16b40:	ldr	r6, [r0]
   16b44:	cmp	r6, #0
   16b48:	beq	16c9c <argp_failure@@Base+0x19c>
   16b4c:	mov	r0, r6
   16b50:	bl	11558 <flockfile@plt>
   16b54:	movw	r0, #2224	; 0x8b0
   16b58:	cmp	r5, #0
   16b5c:	mov	r1, r6
   16b60:	movt	r0, #3
   16b64:	addne	r0, r5, #40	; 0x28
   16b68:	ldr	r0, [r0]
   16b6c:	bl	11318 <fputs_unlocked@plt>
   16b70:	cmp	r4, #0
   16b74:	beq	16bd0 <argp_failure@@Base+0xd0>
   16b78:	add	r0, fp, #8
   16b7c:	str	r0, [sp]
   16b80:	ldr	r0, [r6, #20]
   16b84:	ldr	r1, [r6, #24]
   16b88:	cmp	r0, r1
   16b8c:	bcs	16cb4 <argp_failure@@Base+0x1b4>
   16b90:	add	r1, r0, #1
   16b94:	str	r1, [r6, #20]
   16b98:	mov	r1, #58	; 0x3a
   16b9c:	strb	r1, [r0]
   16ba0:	ldr	r0, [r6, #20]
   16ba4:	ldr	r1, [r6, #24]
   16ba8:	cmp	r0, r1
   16bac:	bcs	16cc4 <argp_failure@@Base+0x1c4>
   16bb0:	add	r1, r0, #1
   16bb4:	str	r1, [r6, #20]
   16bb8:	mov	r1, #32
   16bbc:	strb	r1, [r0]
   16bc0:	ldr	r2, [sp]
   16bc4:	mov	r0, r6
   16bc8:	mov	r1, r4
   16bcc:	bl	11528 <vfprintf@plt>
   16bd0:	cmp	r7, #0
   16bd4:	beq	16c54 <argp_failure@@Base+0x154>
   16bd8:	ldr	r0, [r6, #20]
   16bdc:	ldr	r1, [r6, #24]
   16be0:	cmp	r0, r1
   16be4:	bcs	16cd4 <argp_failure@@Base+0x1d4>
   16be8:	add	r1, r0, #1
   16bec:	str	r1, [r6, #20]
   16bf0:	mov	r1, #58	; 0x3a
   16bf4:	strb	r1, [r0]
   16bf8:	ldr	r0, [r6, #20]
   16bfc:	ldr	r1, [r6, #24]
   16c00:	cmp	r0, r1
   16c04:	bcs	16ce4 <argp_failure@@Base+0x1e4>
   16c08:	add	r1, r0, #1
   16c0c:	str	r1, [r6, #20]
   16c10:	mov	r1, #32
   16c14:	strb	r1, [r0]
   16c18:	mov	r1, sp
   16c1c:	mov	r0, r7
   16c20:	mov	r2, #200	; 0xc8
   16c24:	bl	114e0 <strerror_r@plt>
   16c28:	cmp	r0, #0
   16c2c:	bne	16c4c <argp_failure@@Base+0x14c>
   16c30:	mov	r0, r7
   16c34:	bl	1145c <strerror@plt>
   16c38:	mov	r1, r0
   16c3c:	movw	r0, #50387	; 0xc4d3
   16c40:	cmp	r1, #0
   16c44:	movt	r0, #1
   16c48:	movne	r0, r1
   16c4c:	mov	r1, r6
   16c50:	bl	11318 <fputs_unlocked@plt>
   16c54:	ldr	r0, [r6, #20]
   16c58:	ldr	r1, [r6, #24]
   16c5c:	cmp	r0, r1
   16c60:	bcs	16ca4 <argp_failure@@Base+0x1a4>
   16c64:	add	r1, r0, #1
   16c68:	str	r1, [r6, #20]
   16c6c:	mov	r1, #10
   16c70:	strb	r1, [r0]
   16c74:	mov	r0, r6
   16c78:	bl	113f0 <funlockfile@plt>
   16c7c:	cmp	r8, #0
   16c80:	beq	16c9c <argp_failure@@Base+0x19c>
   16c84:	cmp	r5, #0
   16c88:	ldrbne	r0, [r5, #16]
   16c8c:	tstne	r0, #32
   16c90:	bne	16c9c <argp_failure@@Base+0x19c>
   16c94:	mov	r0, r8
   16c98:	bl	1148c <exit@plt>
   16c9c:	sub	sp, fp, #24
   16ca0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   16ca4:	mov	r0, r6
   16ca8:	mov	r1, #10
   16cac:	bl	11510 <__overflow@plt>
   16cb0:	b	16c74 <argp_failure@@Base+0x174>
   16cb4:	mov	r0, r6
   16cb8:	mov	r1, #58	; 0x3a
   16cbc:	bl	11510 <__overflow@plt>
   16cc0:	b	16ba0 <argp_failure@@Base+0xa0>
   16cc4:	mov	r0, r6
   16cc8:	mov	r1, #32
   16ccc:	bl	11510 <__overflow@plt>
   16cd0:	b	16bc0 <argp_failure@@Base+0xc0>
   16cd4:	mov	r0, r6
   16cd8:	mov	r1, #58	; 0x3a
   16cdc:	bl	11510 <__overflow@plt>
   16ce0:	b	16bf8 <argp_failure@@Base+0xf8>
   16ce4:	mov	r0, r6
   16ce8:	mov	r1, #32
   16cec:	bl	11510 <__overflow@plt>
   16cf0:	b	16c18 <argp_failure@@Base+0x118>
   16cf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16cf8:	add	fp, sp, #28
   16cfc:	sub	sp, sp, #44	; 0x2c
   16d00:	ldr	r4, [r0]
   16d04:	ldr	r7, [r0, #16]
   16d08:	mov	r8, r0
   16d0c:	mov	r0, #16
   16d10:	mov	sl, r1
   16d14:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   16d18:	cmp	r0, #0
   16d1c:	beq	17354 <argp_failure@@Base+0x854>
   16d20:	mov	r9, r0
   16d24:	mov	r0, #0
   16d28:	cmp	r4, #0
   16d2c:	str	r8, [sp, #32]
   16d30:	mov	r1, r9
   16d34:	str	r9, [fp, #-32]	; 0xffffffe0
   16d38:	str	r0, [r1, #12]!
   16d3c:	str	r1, [sp, #12]
   16d40:	str	r0, [r1, #-8]
   16d44:	beq	16f9c <argp_failure@@Base+0x49c>
   16d48:	ldrb	r0, [r4, #12]
   16d4c:	str	r7, [sp, #8]
   16d50:	tst	r0, #4
   16d54:	bne	1736c <argp_failure@@Base+0x86c>
   16d58:	add	r5, r4, #12
   16d5c:	mov	r6, #0
   16d60:	mov	r9, #0
   16d64:	b	16d6c <argp_failure@@Base+0x26c>
   16d68:	add	r5, r5, #24
   16d6c:	ldr	r7, [r5, #-8]
   16d70:	cmp	r7, #0
   16d74:	bne	16d9c <argp_failure@@Base+0x29c>
   16d78:	ldr	r0, [r5, #-12]
   16d7c:	cmp	r0, #0
   16d80:	bne	16d9c <argp_failure@@Base+0x29c>
   16d84:	ldr	r0, [r5, #4]
   16d88:	cmp	r0, #0
   16d8c:	bne	16d9c <argp_failure@@Base+0x29c>
   16d90:	ldr	r0, [r5, #8]
   16d94:	cmp	r0, #0
   16d98:	beq	16de4 <argp_failure@@Base+0x2e4>
   16d9c:	ldr	r0, [r5]
   16da0:	tst	r0, #4
   16da4:	bne	16db4 <argp_failure@@Base+0x2b4>
   16da8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16dac:	add	r6, r6, #1
   16db0:	str	r6, [r1, #4]
   16db4:	sub	r1, r7, #1
   16db8:	cmp	r1, #254	; 0xfe
   16dbc:	bhi	16d68 <argp_failure@@Base+0x268>
   16dc0:	ands	r0, r0, #8
   16dc4:	bne	16d68 <argp_failure@@Base+0x268>
   16dc8:	bl	11480 <__ctype_b_loc@plt>
   16dcc:	ldr	r0, [r0]
   16dd0:	add	r0, r0, r7, lsl #1
   16dd4:	ldrb	r0, [r0, #1]
   16dd8:	tst	r0, #64	; 0x40
   16ddc:	addne	r9, r9, #1
   16de0:	b	16d68 <argp_failure@@Base+0x268>
   16de4:	rsb	r0, r6, r6, lsl #3
   16de8:	lsl	r0, r0, #2
   16dec:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   16df0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16df4:	mov	r5, r0
   16df8:	str	r0, [r1]
   16dfc:	add	r0, r9, #1
   16e00:	mov	r8, r1
   16e04:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   16e08:	cmp	r5, #0
   16e0c:	str	r0, [r8, #8]
   16e10:	movne	r7, r0
   16e14:	cmpne	r0, #0
   16e18:	bne	16e3c <argp_failure@@Base+0x33c>
   16e1c:	movw	r0, #50787	; 0xc663
   16e20:	movw	r1, #50695	; 0xc607
   16e24:	movw	r3, #50707	; 0xc613
   16e28:	movw	r2, #474	; 0x1da
   16e2c:	movt	r0, #1
   16e30:	movt	r1, #1
   16e34:	movt	r3, #1
   16e38:	bl	115f4 <__assert_fail@plt>
   16e3c:	movw	r0, #37450	; 0x924a
   16e40:	movt	r0, #2340	; 0x924
   16e44:	cmp	r6, r0
   16e48:	bcs	17384 <argp_failure@@Base+0x884>
   16e4c:	mov	r9, #0
   16e50:	mov	r0, #0
   16e54:	b	16e64 <argp_failure@@Base+0x364>
   16e58:	mov	r4, r0
   16e5c:	add	r5, r5, #28
   16e60:	mov	r0, r8
   16e64:	ldr	r1, [r4, #4]
   16e68:	cmp	r1, #0
   16e6c:	bne	16e94 <argp_failure@@Base+0x394>
   16e70:	ldr	r2, [r4]
   16e74:	cmp	r2, #0
   16e78:	bne	16e94 <argp_failure@@Base+0x394>
   16e7c:	ldr	r2, [r4, #16]
   16e80:	cmp	r2, #0
   16e84:	bne	16e94 <argp_failure@@Base+0x394>
   16e88:	ldr	r2, [r4, #20]
   16e8c:	cmp	r2, #0
   16e90:	beq	16f88 <argp_failure@@Base+0x488>
   16e94:	stm	r5, {r4, r9}
   16e98:	str	r7, [r5, #8]
   16e9c:	ldr	r8, [r4, #20]
   16ea0:	cmp	r8, #0
   16ea4:	bne	16ec0 <argp_failure@@Base+0x3c0>
   16ea8:	ldr	r2, [r4]
   16eac:	cmp	r2, #0
   16eb0:	bne	16ebc <argp_failure@@Base+0x3bc>
   16eb4:	cmp	r1, #0
   16eb8:	addeq	r0, r0, #1
   16ebc:	mov	r8, r0
   16ec0:	ldr	r0, [sp, #32]
   16ec4:	mov	r1, #0
   16ec8:	str	r8, [r5, #12]
   16ecc:	str	sl, [r5, #16]
   16ed0:	str	r0, [r5, #20]
   16ed4:	add	r0, r1, #1
   16ed8:	str	r0, [r5, #4]
   16edc:	ldrb	r0, [r4, #12]
   16ee0:	tst	r0, #8
   16ee4:	bne	16f3c <argp_failure@@Base+0x43c>
   16ee8:	ldr	r6, [r4, #4]
   16eec:	sub	r0, r6, #1
   16ef0:	cmp	r0, #254	; 0xfe
   16ef4:	bhi	16f3c <argp_failure@@Base+0x43c>
   16ef8:	bl	11480 <__ctype_b_loc@plt>
   16efc:	ldr	r0, [r0]
   16f00:	add	r0, r0, r6, lsl #1
   16f04:	ldrb	r0, [r0, #1]
   16f08:	tst	r0, #64	; 0x40
   16f0c:	beq	16f3c <argp_failure@@Base+0x43c>
   16f10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f14:	ldr	r0, [r0, #8]
   16f18:	cmp	r0, r7
   16f1c:	bcs	16f38 <argp_failure@@Base+0x438>
   16f20:	ldrb	r1, [r0], #1
   16f24:	uxtb	r2, r6
   16f28:	cmp	r1, r2
   16f2c:	beq	16f3c <argp_failure@@Base+0x43c>
   16f30:	cmp	r7, r0
   16f34:	bne	16f20 <argp_failure@@Base+0x420>
   16f38:	strb	r6, [r7], #1
   16f3c:	ldr	r1, [r4, #28]
   16f40:	add	r0, r4, #24
   16f44:	cmp	r1, #0
   16f48:	bne	16f70 <argp_failure@@Base+0x470>
   16f4c:	ldr	r1, [r0]
   16f50:	cmp	r1, #0
   16f54:	bne	16f70 <argp_failure@@Base+0x470>
   16f58:	ldr	r1, [r4, #40]	; 0x28
   16f5c:	cmp	r1, #0
   16f60:	bne	16f70 <argp_failure@@Base+0x470>
   16f64:	ldr	r1, [r4, #44]	; 0x2c
   16f68:	cmp	r1, #0
   16f6c:	beq	16e58 <argp_failure@@Base+0x358>
   16f70:	ldrb	r1, [r4, #36]	; 0x24
   16f74:	tst	r1, #4
   16f78:	beq	16e58 <argp_failure@@Base+0x358>
   16f7c:	ldr	r1, [r5, #4]
   16f80:	mov	r4, r0
   16f84:	b	16ed4 <argp_failure@@Base+0x3d4>
   16f88:	mov	r0, #0
   16f8c:	ldr	r8, [sp, #32]
   16f90:	ldr	r9, [fp, #-32]	; 0xffffffe0
   16f94:	strb	r0, [r7]
   16f98:	ldr	r7, [sp, #8]
   16f9c:	cmp	r7, #0
   16fa0:	beq	17328 <argp_failure@@Base+0x828>
   16fa4:	ldr	r0, [r7]
   16fa8:	cmp	r0, #0
   16fac:	beq	17328 <argp_failure@@Base+0x828>
   16fb0:	str	sl, [sp]
   16fb4:	b	16fec <argp_failure@@Base+0x4ec>
   16fb8:	ldr	r5, [sp, #20]
   16fbc:	mov	r9, r6
   16fc0:	ldr	r1, [r5]
   16fc4:	ldr	r2, [r5, #8]
   16fc8:	str	r1, [r6]
   16fcc:	stmib	r6, {r0, r2}
   16fd0:	mov	r0, #0
   16fd4:	str	r0, [r5, #4]
   16fd8:	mov	r0, r5
   16fdc:	bl	14240 <argp_parse@@Base+0x12dc>
   16fe0:	ldr	r0, [r7, #16]!
   16fe4:	cmp	r0, #0
   16fe8:	beq	17328 <argp_failure@@Base+0x828>
   16fec:	ldr	r4, [r7, #12]
   16ff0:	cmp	r4, #0
   16ff4:	beq	17000 <argp_failure@@Base+0x500>
   16ff8:	ldr	r5, [r7, #8]
   16ffc:	b	17010 <argp_failure@@Base+0x510>
   17000:	ldr	r5, [r7, #8]
   17004:	mov	r1, sl
   17008:	cmp	r5, #0
   1700c:	beq	17068 <argp_failure@@Base+0x568>
   17010:	ldr	r6, [r8, #16]
   17014:	mov	r0, #28
   17018:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   1701c:	mov	r1, r0
   17020:	cmp	r0, #0
   17024:	beq	17068 <argp_failure@@Base+0x568>
   17028:	sub	r0, r7, r6
   1702c:	cmp	sl, #0
   17030:	str	r5, [r1]
   17034:	asr	r0, r0, #4
   17038:	stmib	r1, {r0, r4, sl}
   1703c:	str	r8, [r1, #16]
   17040:	beq	17050 <argp_failure@@Base+0x550>
   17044:	ldr	r0, [sl, #20]
   17048:	add	r0, r0, #1
   1704c:	b	17054 <argp_failure@@Base+0x554>
   17050:	mov	r0, #0
   17054:	ldr	r3, [sp, #12]
   17058:	str	r0, [r1, #20]
   1705c:	ldr	r2, [r3]
   17060:	str	r1, [r3]
   17064:	str	r2, [r1, #24]
   17068:	ldr	r0, [r7]
   1706c:	bl	16cf4 <argp_failure@@Base+0x1f4>
   17070:	ldr	r1, [sp, #12]
   17074:	mov	r5, r0
   17078:	ldr	r2, [r1]
   1707c:	mov	r0, r1
   17080:	add	r1, r2, #24
   17084:	cmp	r2, #0
   17088:	bne	17078 <argp_failure@@Base+0x578>
   1708c:	ldr	r1, [r5, #12]
   17090:	str	r1, [r0]
   17094:	mov	r0, #0
   17098:	str	r0, [r5, #12]
   1709c:	ldr	r0, [r5, #4]
   170a0:	cmp	r0, #0
   170a4:	beq	16fd8 <argp_failure@@Base+0x4d8>
   170a8:	mov	r6, r9
   170ac:	ldr	r9, [r9, #4]
   170b0:	str	r5, [sp, #20]
   170b4:	cmp	r9, #0
   170b8:	beq	16fb8 <argp_failure@@Base+0x4b8>
   170bc:	add	r4, r9, r0
   170c0:	rsb	r0, r4, r4, lsl #3
   170c4:	lsl	r0, r0, #2
   170c8:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   170cc:	ldr	r5, [r6, #8]
   170d0:	str	r0, [sp, #16]
   170d4:	mov	r8, r6
   170d8:	mov	r0, r5
   170dc:	bl	114a4 <strlen@plt>
   170e0:	mov	r6, r0
   170e4:	ldr	r0, [sp, #20]
   170e8:	ldr	r0, [r0, #8]
   170ec:	bl	114a4 <strlen@plt>
   170f0:	add	r0, r6, r0
   170f4:	str	r6, [sp, #24]
   170f8:	add	r0, r0, #1
   170fc:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   17100:	ldr	r1, [sp, #16]
   17104:	cmp	r1, #0
   17108:	cmpne	r0, #0
   1710c:	beq	17334 <argp_failure@@Base+0x834>
   17110:	str	r0, [sp, #28]
   17114:	movw	r0, #37450	; 0x924a
   17118:	str	r4, [sp, #4]
   1711c:	movt	r0, #2340	; 0x924
   17120:	cmp	r4, r0
   17124:	bcs	1739c <argp_failure@@Base+0x89c>
   17128:	ldr	r1, [r8]
   1712c:	ldr	r8, [sp, #16]
   17130:	rsb	r4, r9, r9, lsl #3
   17134:	lsl	r2, r4, #2
   17138:	mov	r0, r8
   1713c:	bl	113a8 <memcpy@plt>
   17140:	ldr	r2, [sp, #20]
   17144:	add	r0, r8, r4, lsl #2
   17148:	ldm	r2, {r1, r2}
   1714c:	rsb	r2, r2, r2, lsl #3
   17150:	lsl	r2, r2, #2
   17154:	bl	113a8 <memcpy@plt>
   17158:	ldr	r6, [sp, #28]
   1715c:	ldr	r2, [sp, #24]
   17160:	mov	r1, r5
   17164:	mov	r0, r6
   17168:	bl	113a8 <memcpy@plt>
   1716c:	tst	r9, #1
   17170:	mov	r0, r9
   17174:	mov	r4, r8
   17178:	beq	17198 <argp_failure@@Base+0x698>
   1717c:	ldr	r1, [sp, #16]
   17180:	ldr	r0, [r1, #8]
   17184:	add	r4, r1, #28
   17188:	sub	r0, r0, r5
   1718c:	add	r0, r6, r0
   17190:	str	r0, [r1, #8]
   17194:	sub	r0, r9, #1
   17198:	cmp	r9, #1
   1719c:	beq	171cc <argp_failure@@Base+0x6cc>
   171a0:	ldr	r1, [r4, #8]
   171a4:	ldr	r2, [r4, #36]	; 0x24
   171a8:	subs	r0, r0, #2
   171ac:	sub	r1, r1, r5
   171b0:	add	r1, r6, r1
   171b4:	str	r1, [r4, #8]
   171b8:	sub	r1, r2, r5
   171bc:	add	r1, r6, r1
   171c0:	str	r1, [r4, #36]	; 0x24
   171c4:	add	r4, r4, #56	; 0x38
   171c8:	bne	171a0 <argp_failure@@Base+0x6a0>
   171cc:	ldr	r0, [sp, #24]
   171d0:	str	r7, [sp, #8]
   171d4:	add	r0, r6, r0
   171d8:	str	r0, [sp, #36]	; 0x24
   171dc:	ldr	r0, [sp, #20]
   171e0:	ldr	r5, [r0, #4]
   171e4:	cmp	r5, #0
   171e8:	beq	172a0 <argp_failure@@Base+0x7a0>
   171ec:	ldr	r6, [r0, #8]
   171f0:	b	17200 <argp_failure@@Base+0x700>
   171f4:	subs	r5, r5, #1
   171f8:	add	r4, r4, #28
   171fc:	beq	172a0 <argp_failure@@Base+0x7a0>
   17200:	ldr	r0, [sp, #36]	; 0x24
   17204:	str	r0, [r4, #8]
   17208:	ldr	sl, [r4, #4]
   1720c:	cmp	sl, #0
   17210:	beq	171f4 <argp_failure@@Base+0x6f4>
   17214:	ldr	r9, [r4]
   17218:	b	17238 <argp_failure@@Base+0x738>
   1721c:	ldr	r0, [sp, #36]	; 0x24
   17220:	strb	r8, [r0], #1
   17224:	str	r0, [sp, #36]	; 0x24
   17228:	add	r6, r6, #1
   1722c:	subs	sl, sl, #1
   17230:	add	r9, r9, #24
   17234:	beq	171f4 <argp_failure@@Base+0x6f4>
   17238:	ldrb	r0, [r9, #12]
   1723c:	tst	r0, #8
   17240:	bne	1722c <argp_failure@@Base+0x72c>
   17244:	ldr	r7, [r9, #4]
   17248:	sub	r0, r7, #1
   1724c:	cmp	r0, #254	; 0xfe
   17250:	bhi	1722c <argp_failure@@Base+0x72c>
   17254:	ldrb	r8, [r6]
   17258:	bl	11480 <__ctype_b_loc@plt>
   1725c:	cmp	r7, r8
   17260:	bne	1722c <argp_failure@@Base+0x72c>
   17264:	ldr	r0, [r0]
   17268:	add	r0, r0, r7, lsl #1
   1726c:	ldrh	r0, [r0]
   17270:	ands	r0, r0, #16384	; 0x4000
   17274:	beq	1722c <argp_failure@@Base+0x72c>
   17278:	ldr	r0, [sp, #24]
   1727c:	ldr	r1, [sp, #28]
   17280:	cmp	r0, #1
   17284:	blt	1721c <argp_failure@@Base+0x71c>
   17288:	ldrb	r2, [r1], #1
   1728c:	cmp	r2, r8
   17290:	beq	17228 <argp_failure@@Base+0x728>
   17294:	subs	r0, r0, #1
   17298:	bne	17288 <argp_failure@@Base+0x788>
   1729c:	b	1721c <argp_failure@@Base+0x71c>
   172a0:	ldr	r1, [sp, #36]	; 0x24
   172a4:	ldr	r9, [fp, #-32]	; 0xffffffe0
   172a8:	mov	r0, #0
   172ac:	strb	r0, [r1]
   172b0:	ldr	r0, [r9]
   172b4:	bl	14240 <argp_parse@@Base+0x12dc>
   172b8:	ldr	r0, [r9, #8]
   172bc:	bl	14240 <argp_parse@@Base+0x12dc>
   172c0:	ldr	r0, [sp, #16]
   172c4:	ldr	r5, [sp, #20]
   172c8:	str	r0, [r9]
   172cc:	ldr	r0, [sp, #4]
   172d0:	str	r0, [r9, #4]
   172d4:	ldr	r0, [sp, #28]
   172d8:	str	r0, [r9, #8]
   172dc:	ldr	r0, [r5, #12]
   172e0:	cmp	r0, #0
   172e4:	beq	172fc <argp_failure@@Base+0x7fc>
   172e8:	ldr	r4, [r0, #24]
   172ec:	bl	14240 <argp_parse@@Base+0x12dc>
   172f0:	cmp	r4, #0
   172f4:	mov	r0, r4
   172f8:	bne	172e8 <argp_failure@@Base+0x7e8>
   172fc:	ldr	r0, [r5, #4]
   17300:	ldr	sl, [sp]
   17304:	ldr	r8, [sp, #32]
   17308:	ldr	r7, [sp, #8]
   1730c:	cmp	r0, #0
   17310:	beq	16fd8 <argp_failure@@Base+0x4d8>
   17314:	ldr	r0, [r5]
   17318:	bl	14240 <argp_parse@@Base+0x12dc>
   1731c:	ldr	r0, [r5, #8]
   17320:	bl	14240 <argp_parse@@Base+0x12dc>
   17324:	b	16fd8 <argp_failure@@Base+0x4d8>
   17328:	mov	r0, r9
   1732c:	sub	sp, fp, #28
   17330:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17334:	movw	r0, #50879	; 0xc6bf
   17338:	movw	r1, #50695	; 0xc607
   1733c:	movw	r3, #50904	; 0xc6d8
   17340:	movw	r2, #970	; 0x3ca
   17344:	movt	r0, #1
   17348:	movt	r1, #1
   1734c:	movt	r3, #1
   17350:	bl	115f4 <__assert_fail@plt>
   17354:	movw	r0, #50691	; 0xc603
   17358:	movw	r1, #50695	; 0xc607
   1735c:	movw	r3, #50707	; 0xc613
   17360:	movw	r2, #450	; 0x1c2
   17364:	movt	r0, #1
   17368:	b	16e30 <argp_failure@@Base+0x330>
   1736c:	movw	r0, #50771	; 0xc653
   17370:	movw	r1, #50695	; 0xc607
   17374:	movw	r3, #50707	; 0xc613
   17378:	mov	r2, #460	; 0x1cc
   1737c:	movt	r0, #1
   17380:	b	16e30 <argp_failure@@Base+0x330>
   17384:	movw	r0, #50822	; 0xc686
   17388:	movw	r1, #50695	; 0xc607
   1738c:	movw	r3, #50707	; 0xc613
   17390:	mov	r2, #476	; 0x1dc
   17394:	movt	r0, #1
   17398:	b	16e30 <argp_failure@@Base+0x330>
   1739c:	movw	r0, #50827	; 0xc68b
   173a0:	movw	r1, #50695	; 0xc607
   173a4:	movw	r3, #50904	; 0xc6d8
   173a8:	mov	r2, #972	; 0x3cc
   173ac:	movt	r0, #1
   173b0:	b	17348 <argp_failure@@Base+0x848>
   173b4:	push	{r4, r5, fp, lr}
   173b8:	add	fp, sp, #8
   173bc:	mov	r1, r0
   173c0:	ldr	r0, [r0, #8]
   173c4:	ldr	r5, [r1, #16]
   173c8:	cmp	r0, #0
   173cc:	beq	173f0 <argp_failure@@Base+0x8f0>
   173d0:	mov	r1, #10
   173d4:	bl	114b0 <strchr@plt>
   173d8:	cmp	r0, #0
   173dc:	mov	r4, r0
   173e0:	movwne	r4, #1
   173e4:	cmp	r5, #0
   173e8:	bne	173fc <argp_failure@@Base+0x8fc>
   173ec:	b	17420 <argp_failure@@Base+0x920>
   173f0:	mov	r4, #0
   173f4:	cmp	r5, #0
   173f8:	beq	17420 <argp_failure@@Base+0x920>
   173fc:	ldr	r0, [r5]
   17400:	cmp	r0, #0
   17404:	beq	17420 <argp_failure@@Base+0x920>
   17408:	add	r5, r5, #16
   1740c:	bl	173b4 <argp_failure@@Base+0x8b4>
   17410:	add	r4, r0, r4
   17414:	ldr	r0, [r5], #16
   17418:	cmp	r0, #0
   1741c:	bne	1740c <argp_failure@@Base+0x90c>
   17420:	mov	r0, r4
   17424:	pop	{r4, r5, fp, pc}
   17428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1742c:	add	fp, sp, #28
   17430:	sub	sp, sp, #28
   17434:	ldr	r4, [r0, #4]
   17438:	str	r1, [fp, #-40]	; 0xffffffd8
   1743c:	cmp	r4, #0
   17440:	beq	177f0 <argp_failure@@Base+0xcf0>
   17444:	mov	r5, r0
   17448:	ldr	r0, [r0, #8]
   1744c:	bl	114a4 <strlen@plt>
   17450:	add	r0, r0, #8
   17454:	bic	r0, r0, #7
   17458:	sub	r0, sp, r0
   1745c:	mov	sp, r0
   17460:	ldr	r7, [r5]
   17464:	str	r0, [fp, #-52]	; 0xffffffcc
   17468:	str	r0, [fp, #-48]	; 0xffffffd0
   1746c:	str	r5, [fp, #-44]	; 0xffffffd4
   17470:	b	17488 <argp_failure@@Base+0x988>
   17474:	ldr	r4, [fp, #-36]	; 0xffffffdc
   17478:	ldr	r6, [fp, #-44]	; 0xffffffd4
   1747c:	add	r7, r7, #28
   17480:	subs	r4, r4, #1
   17484:	beq	17540 <argp_failure@@Base+0xa40>
   17488:	ldr	r6, [r7, #4]
   1748c:	str	r4, [fp, #-36]	; 0xffffffdc
   17490:	cmp	r6, #0
   17494:	beq	17474 <argp_failure@@Base+0x974>
   17498:	ldr	r4, [r7]
   1749c:	ldr	r5, [r7, #8]
   174a0:	mov	sl, r4
   174a4:	b	174b8 <argp_failure@@Base+0x9b8>
   174a8:	add	r5, r5, #1
   174ac:	subs	r6, r6, #1
   174b0:	add	sl, sl, #24
   174b4:	beq	17474 <argp_failure@@Base+0x974>
   174b8:	ldr	r8, [sl, #12]
   174bc:	tst	r8, #8
   174c0:	bne	174ac <argp_failure@@Base+0x9ac>
   174c4:	ldr	r9, [sl, #4]
   174c8:	sub	r0, r9, #1
   174cc:	cmp	r0, #254	; 0xfe
   174d0:	bhi	174ac <argp_failure@@Base+0x9ac>
   174d4:	bl	11480 <__ctype_b_loc@plt>
   174d8:	ldr	r0, [r0]
   174dc:	add	r0, r0, r9, lsl #1
   174e0:	ldrb	r0, [r0, #1]
   174e4:	tst	r0, #64	; 0x40
   174e8:	beq	174ac <argp_failure@@Base+0x9ac>
   174ec:	ldrb	r0, [r5]
   174f0:	cmp	r9, r0
   174f4:	bne	174ac <argp_failure@@Base+0x9ac>
   174f8:	tst	r8, #4
   174fc:	moveq	r4, sl
   17500:	tst	r8, #2
   17504:	bne	174a8 <argp_failure@@Base+0x9a8>
   17508:	ldr	r0, [sl, #8]
   1750c:	cmp	r0, #0
   17510:	bne	174a8 <argp_failure@@Base+0x9a8>
   17514:	ldr	r0, [r4, #8]
   17518:	cmp	r0, #0
   1751c:	bne	174a8 <argp_failure@@Base+0x9a8>
   17520:	ldr	r0, [r4, #12]
   17524:	orr	r0, r0, r8
   17528:	tst	r0, #16
   1752c:	bne	174a8 <argp_failure@@Base+0x9a8>
   17530:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17534:	strb	r9, [r0], #1
   17538:	str	r0, [fp, #-48]	; 0xffffffd0
   1753c:	b	174a8 <argp_failure@@Base+0x9a8>
   17540:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17544:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17548:	cmp	r1, r2
   1754c:	bls	17568 <argp_failure@@Base+0xa68>
   17550:	mov	r0, #0
   17554:	strb	r0, [r1]
   17558:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1755c:	movw	r1, #50948	; 0xc704
   17560:	movt	r1, #1
   17564:	bl	1a484 <argp_failure@@Base+0x3984>
   17568:	ldr	r5, [r6, #4]
   1756c:	cmp	r5, #0
   17570:	beq	177f0 <argp_failure@@Base+0xcf0>
   17574:	ldr	r8, [r6]
   17578:	b	17588 <argp_failure@@Base+0xa88>
   1757c:	subs	r5, r5, #1
   17580:	add	r8, r8, #28
   17584:	beq	1772c <argp_failure@@Base+0xc2c>
   17588:	ldr	r9, [r8, #4]
   1758c:	cmp	r9, #0
   17590:	beq	1757c <argp_failure@@Base+0xa7c>
   17594:	ldr	sl, [r8]
   17598:	ldr	r4, [r8, #8]
   1759c:	str	sl, [fp, #-36]	; 0xffffffdc
   175a0:	b	175c8 <argp_failure@@Base+0xac8>
   175a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   175a8:	movw	r1, #50955	; 0xc70b
   175ac:	mov	r2, r7
   175b0:	movt	r1, #1
   175b4:	bl	1a484 <argp_failure@@Base+0x3984>
   175b8:	add	r4, r4, #1
   175bc:	subs	r9, r9, #1
   175c0:	add	sl, sl, #24
   175c4:	beq	1757c <argp_failure@@Base+0xa7c>
   175c8:	ldr	r6, [sl, #12]
   175cc:	tst	r6, #8
   175d0:	bne	175bc <argp_failure@@Base+0xabc>
   175d4:	ldr	r7, [sl, #4]
   175d8:	sub	r0, r7, #1
   175dc:	cmp	r0, #254	; 0xfe
   175e0:	bhi	175bc <argp_failure@@Base+0xabc>
   175e4:	bl	11480 <__ctype_b_loc@plt>
   175e8:	ldr	r0, [r0]
   175ec:	add	r0, r0, r7, lsl #1
   175f0:	ldrb	r0, [r0, #1]
   175f4:	tst	r0, #64	; 0x40
   175f8:	beq	175bc <argp_failure@@Base+0xabc>
   175fc:	ldrb	r0, [r4]
   17600:	cmp	r7, r0
   17604:	bne	175bc <argp_failure@@Base+0xabc>
   17608:	tst	r6, #4
   1760c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17610:	moveq	r0, sl
   17614:	tst	r6, #2
   17618:	str	r0, [fp, #-36]	; 0xffffffdc
   1761c:	bne	175b8 <argp_failure@@Base+0xab8>
   17620:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17624:	ldr	r3, [sl, #8]
   17628:	ldr	r0, [r0, #12]
   1762c:	cmp	r3, #0
   17630:	orr	r0, r0, r6
   17634:	bne	17640 <argp_failure@@Base+0xb40>
   17638:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1763c:	ldr	r3, [r1, #8]
   17640:	tst	r0, #16
   17644:	bne	175b8 <argp_failure@@Base+0xab8>
   17648:	cmp	r3, #0
   1764c:	beq	175b8 <argp_failure@@Base+0xab8>
   17650:	tst	r0, #1
   17654:	bne	175a4 <argp_failure@@Base+0xaa4>
   17658:	mov	r0, r3
   1765c:	str	r3, [fp, #-48]	; 0xffffffd0
   17660:	bl	114a4 <strlen@plt>
   17664:	ldr	r7, [fp, #-40]	; 0xffffffd8
   17668:	add	r6, r0, #6
   1766c:	ldr	r2, [r7, #24]
   17670:	ldr	r0, [r7, #28]
   17674:	ldr	r1, [r7, #16]
   17678:	sub	r2, r0, r2
   1767c:	cmp	r2, r1
   17680:	bls	17690 <argp_failure@@Base+0xb90>
   17684:	mov	r0, r7
   17688:	bl	19e68 <argp_failure@@Base+0x3368>
   1768c:	ldr	r0, [r7, #28]
   17690:	ldr	r3, [r7, #20]
   17694:	ldr	r2, [r7, #8]
   17698:	ldr	r1, [r7, #32]
   1769c:	cmp	r3, #0
   176a0:	addgt	r6, r6, r3
   176a4:	cmp	r6, r2
   176a8:	bcs	176e0 <argp_failure@@Base+0xbe0>
   176ac:	ldr	r6, [fp, #-48]	; 0xffffffd0
   176b0:	cmp	r0, r1
   176b4:	bcc	176d0 <argp_failure@@Base+0xbd0>
   176b8:	mov	r0, r7
   176bc:	mov	r1, #1
   176c0:	bl	1a398 <argp_failure@@Base+0x3898>
   176c4:	cmp	r0, #0
   176c8:	beq	17714 <argp_failure@@Base+0xc14>
   176cc:	ldr	r0, [r7, #28]
   176d0:	add	r1, r0, #1
   176d4:	str	r1, [r7, #28]
   176d8:	mov	r1, #32
   176dc:	b	17710 <argp_failure@@Base+0xc10>
   176e0:	ldr	r6, [fp, #-48]	; 0xffffffd0
   176e4:	cmp	r0, r1
   176e8:	bcc	17704 <argp_failure@@Base+0xc04>
   176ec:	mov	r0, r7
   176f0:	mov	r1, #1
   176f4:	bl	1a398 <argp_failure@@Base+0x3898>
   176f8:	cmp	r0, #0
   176fc:	beq	17714 <argp_failure@@Base+0xc14>
   17700:	ldr	r0, [r7, #28]
   17704:	add	r1, r0, #1
   17708:	str	r1, [r7, #28]
   1770c:	mov	r1, #10
   17710:	strb	r1, [r0]
   17714:	ldr	r2, [sl, #4]
   17718:	movw	r1, #50966	; 0xc716
   1771c:	mov	r0, r7
   17720:	mov	r3, r6
   17724:	movt	r1, #1
   17728:	b	175b4 <argp_failure@@Base+0xab4>
   1772c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17730:	ldr	r4, [r0, #4]
   17734:	cmp	r4, #0
   17738:	beq	177f0 <argp_failure@@Base+0xcf0>
   1773c:	ldr	r6, [r0]
   17740:	movw	sl, #50999	; 0xc737
   17744:	movw	r9, #50975	; 0xc71f
   17748:	movt	sl, #1
   1774c:	movt	r9, #1
   17750:	b	17760 <argp_failure@@Base+0xc60>
   17754:	subs	r4, r4, #1
   17758:	add	r6, r6, #28
   1775c:	beq	177f0 <argp_failure@@Base+0xcf0>
   17760:	ldr	r7, [r6, #4]
   17764:	cmp	r7, #0
   17768:	beq	17754 <argp_failure@@Base+0xc54>
   1776c:	ldr	r8, [r6]
   17770:	mov	r5, r8
   17774:	b	17790 <argp_failure@@Base+0xc90>
   17778:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1777c:	mov	r1, sl
   17780:	bl	1a484 <argp_failure@@Base+0x3984>
   17784:	subs	r7, r7, #1
   17788:	add	r5, r5, #24
   1778c:	beq	17754 <argp_failure@@Base+0xc54>
   17790:	ldr	r2, [r5]
   17794:	cmp	r2, #0
   17798:	beq	17784 <argp_failure@@Base+0xc84>
   1779c:	ldr	r0, [r5, #12]
   177a0:	tst	r0, #4
   177a4:	moveq	r8, r5
   177a8:	tst	r0, #2
   177ac:	bne	17784 <argp_failure@@Base+0xc84>
   177b0:	ldr	r3, [r5, #8]
   177b4:	ldr	r1, [r8, #12]
   177b8:	cmp	r3, #0
   177bc:	orr	r0, r1, r0
   177c0:	ldreq	r3, [r8, #8]
   177c4:	tst	r0, #16
   177c8:	bne	17784 <argp_failure@@Base+0xc84>
   177cc:	cmp	r3, #0
   177d0:	beq	17778 <argp_failure@@Base+0xc78>
   177d4:	tst	r0, #1
   177d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   177dc:	movne	r1, r9
   177e0:	movweq	r1, #50988	; 0xc72c
   177e4:	movteq	r1, #1
   177e8:	bl	1a484 <argp_failure@@Base+0x3984>
   177ec:	b	17784 <argp_failure@@Base+0xc84>
   177f0:	sub	sp, fp, #28
   177f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177fc:	add	fp, sp, #28
   17800:	sub	sp, sp, #28
   17804:	ldr	r5, [r0, #8]
   17808:	mov	r7, r0
   1780c:	ldr	sl, [r0, #16]
   17810:	ldr	r0, [r2]
   17814:	mov	r4, r3
   17818:	mov	r9, r2
   1781c:	mov	r8, r1
   17820:	cmp	r7, #0
   17824:	mov	r6, r5
   17828:	str	r0, [sp, #20]
   1782c:	beq	17868 <argp_failure@@Base+0xd68>
   17830:	ldr	r0, [r7, #20]
   17834:	mov	r6, r5
   17838:	cmp	r0, #0
   1783c:	beq	17868 <argp_failure@@Base+0xd68>
   17840:	mov	r0, r7
   17844:	mov	r1, r8
   17848:	bl	13bcc <argp_parse@@Base+0xc68>
   1784c:	ldr	r3, [r7, #20]
   17850:	mov	r2, r0
   17854:	movw	r0, #6
   17858:	mov	r1, r5
   1785c:	movt	r0, #512	; 0x200
   17860:	blx	r3
   17864:	mov	r6, r0
   17868:	cmp	r6, #0
   1786c:	beq	178d0 <argp_failure@@Base+0xdd0>
   17870:	mov	r0, r6
   17874:	mov	r1, #10
   17878:	bl	11360 <strchrnul@plt>
   1787c:	mov	r7, r0
   17880:	ldrb	r0, [r0]
   17884:	str	r5, [sp, #12]
   17888:	str	r6, [sp, #16]
   1788c:	stmib	sp, {r8, sl}
   17890:	cmp	r0, #0
   17894:	beq	178e8 <argp_failure@@Base+0xde8>
   17898:	ldr	r0, [sp, #20]
   1789c:	ldrb	r6, [r0]
   178a0:	cmp	r6, #0
   178a4:	beq	178f4 <argp_failure@@Base+0xdf4>
   178a8:	mov	r8, #0
   178ac:	add	sl, r7, #1
   178b0:	mov	r1, #10
   178b4:	mov	r0, sl
   178b8:	bl	11360 <strchrnul@plt>
   178bc:	add	r8, r8, #1
   178c0:	mov	r7, r0
   178c4:	cmp	r8, r6
   178c8:	bcc	178ac <argp_failure@@Base+0xdac>
   178cc:	b	178f8 <argp_failure@@Base+0xdf8>
   178d0:	mov	r0, #0
   178d4:	mov	r7, #0
   178d8:	str	r0, [sp, #24]
   178dc:	cmp	sl, #0
   178e0:	bne	17a58 <argp_failure@@Base+0xf58>
   178e4:	b	17a9c <argp_failure@@Base+0xf9c>
   178e8:	mov	r0, #0
   178ec:	mov	sl, r6
   178f0:	b	17908 <argp_failure@@Base+0xe08>
   178f4:	ldr	sl, [sp, #16]
   178f8:	ldr	r0, [r9]
   178fc:	add	r0, r0, #1
   17900:	str	r0, [r9]
   17904:	mov	r0, #1
   17908:	str	r0, [sp, #24]
   1790c:	ldr	r8, [fp, #8]
   17910:	sub	r2, r7, sl
   17914:	add	r6, r2, #1
   17918:	ldr	r3, [r8, #24]
   1791c:	ldr	r0, [r8, #28]
   17920:	ldr	r1, [r8, #16]
   17924:	sub	r3, r0, r3
   17928:	cmp	r3, r1
   1792c:	bls	17944 <argp_failure@@Base+0xe44>
   17930:	mov	r0, r8
   17934:	mov	r5, r2
   17938:	bl	19e68 <argp_failure@@Base+0x3368>
   1793c:	ldr	r0, [r8, #28]
   17940:	mov	r2, r5
   17944:	ldr	r3, [r8, #20]
   17948:	ldr	r5, [r8, #8]
   1794c:	ldr	r1, [r8, #32]
   17950:	cmp	r3, #0
   17954:	addgt	r6, r6, r3
   17958:	cmp	r6, r5
   1795c:	bcs	179a4 <argp_failure@@Base+0xea4>
   17960:	ldr	r8, [sp, #4]
   17964:	cmp	r0, r1
   17968:	bcc	17990 <argp_failure@@Base+0xe90>
   1796c:	ldr	r6, [fp, #8]
   17970:	mov	r1, #1
   17974:	mov	r5, r2
   17978:	mov	r0, r6
   1797c:	bl	1a398 <argp_failure@@Base+0x3898>
   17980:	mov	r2, r5
   17984:	cmp	r0, #0
   17988:	beq	179e8 <argp_failure@@Base+0xee8>
   1798c:	ldr	r0, [r6, #28]
   17990:	ldr	r6, [fp, #8]
   17994:	add	r1, r0, #1
   17998:	str	r1, [r6, #28]
   1799c:	mov	r1, #32
   179a0:	b	179e4 <argp_failure@@Base+0xee4>
   179a4:	ldr	r8, [sp, #4]
   179a8:	cmp	r0, r1
   179ac:	bcc	179d4 <argp_failure@@Base+0xed4>
   179b0:	ldr	r6, [fp, #8]
   179b4:	mov	r1, #1
   179b8:	mov	r5, r2
   179bc:	mov	r0, r6
   179c0:	bl	1a398 <argp_failure@@Base+0x3898>
   179c4:	mov	r2, r5
   179c8:	cmp	r0, #0
   179cc:	beq	179e8 <argp_failure@@Base+0xee8>
   179d0:	ldr	r0, [r6, #28]
   179d4:	ldr	r6, [fp, #8]
   179d8:	add	r1, r0, #1
   179dc:	str	r1, [r6, #28]
   179e0:	mov	r1, #10
   179e4:	strb	r1, [r0]
   179e8:	ldr	r0, [r6, #28]
   179ec:	ldr	r1, [r6, #32]
   179f0:	add	r3, r0, r2
   179f4:	cmp	r3, r1
   179f8:	bls	17a20 <argp_failure@@Base+0xf20>
   179fc:	mov	r0, r6
   17a00:	mov	r1, r2
   17a04:	mov	r5, r2
   17a08:	bl	1a398 <argp_failure@@Base+0x3898>
   17a0c:	cmp	r0, #0
   17a10:	beq	17a38 <argp_failure@@Base+0xf38>
   17a14:	ldr	r6, [fp, #8]
   17a18:	mov	r2, r5
   17a1c:	ldr	r0, [r6, #28]
   17a20:	mov	r1, sl
   17a24:	mov	r5, r2
   17a28:	bl	113a8 <memcpy@plt>
   17a2c:	ldr	r0, [r6, #28]
   17a30:	add	r0, r0, r5
   17a34:	str	r0, [r6, #28]
   17a38:	ldr	r0, [sp, #16]
   17a3c:	ldr	r1, [sp, #12]
   17a40:	cmp	r0, r1
   17a44:	beq	17a4c <argp_failure@@Base+0xf4c>
   17a48:	bl	14240 <argp_parse@@Base+0x12dc>
   17a4c:	ldr	sl, [sp, #8]
   17a50:	cmp	sl, #0
   17a54:	beq	17a9c <argp_failure@@Base+0xf9c>
   17a58:	ldr	r0, [sl]
   17a5c:	cmp	r0, #0
   17a60:	beq	17a9c <argp_failure@@Base+0xf9c>
   17a64:	add	r6, sl, #16
   17a68:	ldr	r5, [fp, #8]
   17a6c:	ldr	sl, [sp, #24]
   17a70:	mov	r1, r8
   17a74:	mov	r2, r9
   17a78:	mov	r3, r4
   17a7c:	str	r5, [sp]
   17a80:	bl	177f8 <argp_failure@@Base+0xcf8>
   17a84:	clz	r0, r0
   17a88:	lsr	r4, r0, #5
   17a8c:	ldr	r0, [r6], #16
   17a90:	cmp	r0, #0
   17a94:	bne	17a70 <argp_failure@@Base+0xf70>
   17a98:	b	17aa0 <argp_failure@@Base+0xfa0>
   17a9c:	ldr	sl, [sp, #24]
   17aa0:	cmp	sl, #0
   17aa4:	cmpne	r4, #0
   17aa8:	bne	17abc <argp_failure@@Base+0xfbc>
   17aac:	clz	r0, r4
   17ab0:	lsr	r0, r0, #5
   17ab4:	sub	sp, fp, #28
   17ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17abc:	ldr	r2, [sp, #20]
   17ac0:	ldrb	r1, [r7]
   17ac4:	ldrb	r0, [r2]
   17ac8:	cmp	r1, #0
   17acc:	beq	17ae0 <argp_failure@@Base+0xfe0>
   17ad0:	add	r0, r0, #1
   17ad4:	mov	r4, #0
   17ad8:	strb	r0, [r2]
   17adc:	b	17aac <argp_failure@@Base+0xfac>
   17ae0:	cmp	r0, #0
   17ae4:	movne	r0, #0
   17ae8:	strbne	r0, [r2]
   17aec:	b	17aac <argp_failure@@Base+0xfac>
   17af0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17af4:	add	fp, sp, #28
   17af8:	sub	sp, sp, #28
   17afc:	ldr	r5, [r0, #12]
   17b00:	mov	r4, r0
   17b04:	ldr	r0, [r0, #16]
   17b08:	mov	sl, #0
   17b0c:	str	r3, [sp, #24]
   17b10:	str	r1, [sp, #20]
   17b14:	str	r2, [sp, #16]
   17b18:	cmp	r5, #0
   17b1c:	str	r0, [sp, #8]
   17b20:	beq	17b60 <argp_failure@@Base+0x1060>
   17b24:	mov	r0, r5
   17b28:	mov	r1, #11
   17b2c:	mov	r6, r2
   17b30:	bl	114b0 <strchr@plt>
   17b34:	cmp	r0, #0
   17b38:	mov	r8, r0
   17b3c:	mov	r9, r0
   17b40:	subne	r8, r8, r5
   17b44:	cmp	r6, #0
   17b48:	movne	r8, #0
   17b4c:	cmp	r0, #0
   17b50:	addne	r9, r9, #1
   17b54:	cmp	r6, #0
   17b58:	moveq	r9, r5
   17b5c:	b	17b68 <argp_failure@@Base+0x1068>
   17b60:	mov	r8, #0
   17b64:	mov	r9, #0
   17b68:	ldr	r0, [r4, #20]
   17b6c:	movw	r5, #1
   17b70:	str	r4, [sp, #12]
   17b74:	movt	r5, #512	; 0x200
   17b78:	cmp	r0, #0
   17b7c:	beq	17c78 <argp_failure@@Base+0x1178>
   17b80:	cmp	r8, #0
   17b84:	beq	17b98 <argp_failure@@Base+0x1098>
   17b88:	mov	r0, r9
   17b8c:	mov	r1, r8
   17b90:	bl	1139c <strndup@plt>
   17b94:	mov	r9, r0
   17b98:	ldr	r1, [sp, #20]
   17b9c:	mov	r0, r4
   17ba0:	bl	13bcc <argp_parse@@Base+0xc68>
   17ba4:	mov	sl, r0
   17ba8:	ldr	r0, [sp, #16]
   17bac:	ldr	r3, [r4, #20]
   17bb0:	mov	r1, r9
   17bb4:	mov	r2, sl
   17bb8:	cmp	r0, #0
   17bbc:	mov	r0, r5
   17bc0:	addne	r0, r0, #1
   17bc4:	blx	r3
   17bc8:	mov	r6, r0
   17bcc:	cmp	r6, #0
   17bd0:	beq	17c84 <argp_failure@@Base+0x1184>
   17bd4:	ldr	r0, [sp, #24]
   17bd8:	cmp	r0, #0
   17bdc:	beq	17c1c <argp_failure@@Base+0x111c>
   17be0:	ldr	r0, [fp, #12]
   17be4:	ldr	r2, [r0, #28]
   17be8:	ldr	r1, [r0, #32]
   17bec:	cmp	r2, r1
   17bf0:	bcc	17c0c <argp_failure@@Base+0x110c>
   17bf4:	mov	r1, #1
   17bf8:	bl	1a398 <argp_failure@@Base+0x3898>
   17bfc:	cmp	r0, #0
   17c00:	beq	17c1c <argp_failure@@Base+0x111c>
   17c04:	ldr	r0, [fp, #12]
   17c08:	ldr	r2, [r0, #28]
   17c0c:	add	r1, r2, #1
   17c10:	str	r1, [r0, #28]
   17c14:	mov	r1, #10
   17c18:	strb	r1, [r2]
   17c1c:	cmp	r8, #0
   17c20:	beq	17c90 <argp_failure@@Base+0x1190>
   17c24:	cmp	r6, r9
   17c28:	bne	17c90 <argp_failure@@Base+0x1190>
   17c2c:	ldr	r4, [fp, #12]
   17c30:	mov	r7, r5
   17c34:	ldr	r0, [r4, #28]
   17c38:	ldr	r1, [r4, #32]
   17c3c:	add	r2, r0, r8
   17c40:	cmp	r2, r1
   17c44:	bls	17c60 <argp_failure@@Base+0x1160>
   17c48:	mov	r0, r4
   17c4c:	mov	r1, r8
   17c50:	bl	1a398 <argp_failure@@Base+0x3898>
   17c54:	cmp	r0, #0
   17c58:	beq	17cf0 <argp_failure@@Base+0x11f0>
   17c5c:	ldr	r0, [r4, #28]
   17c60:	mov	r1, r9
   17c64:	mov	r2, r8
   17c68:	bl	113a8 <memcpy@plt>
   17c6c:	ldr	r0, [r4, #28]
   17c70:	add	r0, r0, r8
   17c74:	b	17cec <argp_failure@@Base+0x11ec>
   17c78:	mov	r6, r9
   17c7c:	cmp	r6, #0
   17c80:	bne	17bd4 <argp_failure@@Base+0x10d4>
   17c84:	mov	r4, sl
   17c88:	mov	sl, #0
   17c8c:	b	17d78 <argp_failure@@Base+0x1278>
   17c90:	mov	r0, r6
   17c94:	mov	r7, r5
   17c98:	bl	114a4 <strlen@plt>
   17c9c:	ldr	r4, [fp, #12]
   17ca0:	cmp	r0, #0
   17ca4:	beq	17cf0 <argp_failure@@Base+0x11f0>
   17ca8:	mov	r5, r0
   17cac:	ldr	r0, [r4, #28]
   17cb0:	ldr	r1, [r4, #32]
   17cb4:	add	r2, r0, r5
   17cb8:	cmp	r2, r1
   17cbc:	bls	17cd8 <argp_failure@@Base+0x11d8>
   17cc0:	mov	r0, r4
   17cc4:	mov	r1, r5
   17cc8:	bl	1a398 <argp_failure@@Base+0x3898>
   17ccc:	cmp	r0, #0
   17cd0:	beq	17cf0 <argp_failure@@Base+0x11f0>
   17cd4:	ldr	r0, [r4, #28]
   17cd8:	mov	r1, r6
   17cdc:	mov	r2, r5
   17ce0:	bl	113a8 <memcpy@plt>
   17ce4:	ldr	r0, [r4, #28]
   17ce8:	add	r0, r0, r5
   17cec:	str	r0, [r4, #28]
   17cf0:	ldr	r1, [r4, #24]
   17cf4:	ldr	r2, [r4, #28]
   17cf8:	ldr	r0, [r4, #16]
   17cfc:	sub	r1, r2, r1
   17d00:	cmp	r1, r0
   17d04:	bls	17d10 <argp_failure@@Base+0x1210>
   17d08:	mov	r0, r4
   17d0c:	bl	19e68 <argp_failure@@Base+0x3368>
   17d10:	ldr	r1, [r4, #20]
   17d14:	ldr	r0, [r4, #4]
   17d18:	mov	r5, r7
   17d1c:	bic	r1, r1, r1, asr #31
   17d20:	cmp	r1, r0
   17d24:	bls	17d60 <argp_failure@@Base+0x1260>
   17d28:	ldr	r0, [r4, #28]
   17d2c:	ldr	r1, [r4, #32]
   17d30:	cmp	r0, r1
   17d34:	bcc	17d50 <argp_failure@@Base+0x1250>
   17d38:	mov	r0, r4
   17d3c:	mov	r1, #1
   17d40:	bl	1a398 <argp_failure@@Base+0x3898>
   17d44:	cmp	r0, #0
   17d48:	beq	17d60 <argp_failure@@Base+0x1260>
   17d4c:	ldr	r0, [r4, #28]
   17d50:	add	r1, r0, #1
   17d54:	str	r1, [r4, #28]
   17d58:	mov	r1, #10
   17d5c:	strb	r1, [r0]
   17d60:	mov	r4, sl
   17d64:	mov	sl, #1
   17d68:	cmp	r6, r9
   17d6c:	beq	17d78 <argp_failure@@Base+0x1278>
   17d70:	mov	r0, r6
   17d74:	bl	14240 <argp_parse@@Base+0x12dc>
   17d78:	cmp	r8, #0
   17d7c:	cmpne	r9, #0
   17d80:	bne	17f64 <argp_failure@@Base+0x1464>
   17d84:	ldr	r7, [sp, #16]
   17d88:	ldr	r6, [sp, #24]
   17d8c:	ldr	r9, [sp, #20]
   17d90:	ldr	r8, [fp, #12]
   17d94:	cmp	r7, #0
   17d98:	beq	17f00 <argp_failure@@Base+0x1400>
   17d9c:	ldr	r0, [sp, #12]
   17da0:	ldr	r3, [r0, #20]
   17da4:	cmp	r3, #0
   17da8:	beq	17ef0 <argp_failure@@Base+0x13f0>
   17dac:	add	r0, r5, #3
   17db0:	mov	r1, #0
   17db4:	mov	r2, r4
   17db8:	blx	r3
   17dbc:	cmp	r0, #0
   17dc0:	beq	17ef0 <argp_failure@@Base+0x13f0>
   17dc4:	mov	r4, r0
   17dc8:	orrs	r0, sl, r6
   17dcc:	beq	17e08 <argp_failure@@Base+0x1308>
   17dd0:	ldr	r0, [r8, #28]
   17dd4:	ldr	r1, [r8, #32]
   17dd8:	cmp	r0, r1
   17ddc:	bcc	17df8 <argp_failure@@Base+0x12f8>
   17de0:	mov	r0, r8
   17de4:	mov	r1, #1
   17de8:	bl	1a398 <argp_failure@@Base+0x3898>
   17dec:	cmp	r0, #0
   17df0:	beq	17e08 <argp_failure@@Base+0x1308>
   17df4:	ldr	r0, [r8, #28]
   17df8:	add	r1, r0, #1
   17dfc:	str	r1, [r8, #28]
   17e00:	mov	r1, #10
   17e04:	strb	r1, [r0]
   17e08:	mov	r0, r4
   17e0c:	bl	114a4 <strlen@plt>
   17e10:	cmp	r0, #0
   17e14:	beq	17e60 <argp_failure@@Base+0x1360>
   17e18:	mov	r5, r0
   17e1c:	ldr	r0, [r8, #28]
   17e20:	ldr	r1, [r8, #32]
   17e24:	add	r2, r0, r5
   17e28:	cmp	r2, r1
   17e2c:	bls	17e48 <argp_failure@@Base+0x1348>
   17e30:	mov	r0, r8
   17e34:	mov	r1, r5
   17e38:	bl	1a398 <argp_failure@@Base+0x3898>
   17e3c:	cmp	r0, #0
   17e40:	beq	17e60 <argp_failure@@Base+0x1360>
   17e44:	ldr	r0, [r8, #28]
   17e48:	mov	r1, r4
   17e4c:	mov	r2, r5
   17e50:	bl	113a8 <memcpy@plt>
   17e54:	ldr	r0, [r8, #28]
   17e58:	add	r0, r0, r5
   17e5c:	str	r0, [r8, #28]
   17e60:	mov	r0, r4
   17e64:	bl	14240 <argp_parse@@Base+0x12dc>
   17e68:	ldr	r1, [r8, #24]
   17e6c:	ldr	r2, [r8, #28]
   17e70:	ldr	r0, [r8, #16]
   17e74:	sub	r1, r2, r1
   17e78:	cmp	r1, r0
   17e7c:	bls	17e88 <argp_failure@@Base+0x1388>
   17e80:	mov	r0, r8
   17e84:	bl	19e68 <argp_failure@@Base+0x3368>
   17e88:	ldr	r1, [r8, #20]
   17e8c:	ldr	r0, [r8, #4]
   17e90:	ldr	r4, [sp, #8]
   17e94:	mov	sl, #1
   17e98:	bic	r1, r1, r1, asr #31
   17e9c:	cmp	r1, r0
   17ea0:	bls	17f04 <argp_failure@@Base+0x1404>
   17ea4:	ldr	r0, [r8, #28]
   17ea8:	ldr	r1, [r8, #32]
   17eac:	cmp	r0, r1
   17eb0:	bcc	17ed0 <argp_failure@@Base+0x13d0>
   17eb4:	mov	r0, r8
   17eb8:	mov	r1, #1
   17ebc:	mov	sl, #1
   17ec0:	bl	1a398 <argp_failure@@Base+0x3898>
   17ec4:	cmp	r0, #0
   17ec8:	beq	17f04 <argp_failure@@Base+0x1404>
   17ecc:	ldr	r0, [r8, #28]
   17ed0:	add	r1, r0, #1
   17ed4:	mov	sl, #1
   17ed8:	str	r1, [r8, #28]
   17edc:	mov	r1, #10
   17ee0:	strb	r1, [r0]
   17ee4:	cmp	r4, #0
   17ee8:	bne	17f0c <argp_failure@@Base+0x140c>
   17eec:	b	17f58 <argp_failure@@Base+0x1458>
   17ef0:	ldr	r4, [sp, #8]
   17ef4:	cmp	r4, #0
   17ef8:	bne	17f0c <argp_failure@@Base+0x140c>
   17efc:	b	17f58 <argp_failure@@Base+0x1458>
   17f00:	ldr	r4, [sp, #8]
   17f04:	cmp	r4, #0
   17f08:	beq	17f58 <argp_failure@@Base+0x1458>
   17f0c:	ldr	r0, [r4]
   17f10:	cmp	r0, #0
   17f14:	beq	17f58 <argp_failure@@Base+0x1458>
   17f18:	mov	r1, r4
   17f1c:	ldr	r4, [fp, #8]
   17f20:	add	r5, r1, #16
   17f24:	cmp	r4, #0
   17f28:	cmpne	sl, #0
   17f2c:	bne	17f58 <argp_failure@@Base+0x1458>
   17f30:	orrs	r3, sl, r6
   17f34:	mov	r1, r9
   17f38:	mov	r2, r7
   17f3c:	stm	sp, {r4, r8}
   17f40:	movwne	r3, #1
   17f44:	bl	17af0 <argp_failure@@Base+0xff0>
   17f48:	orr	sl, r0, sl
   17f4c:	ldr	r0, [r5], #16
   17f50:	cmp	r0, #0
   17f54:	bne	17f24 <argp_failure@@Base+0x1424>
   17f58:	mov	r0, sl
   17f5c:	sub	sp, fp, #28
   17f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17f64:	ldr	r0, [sp, #12]
   17f68:	ldr	r0, [r0, #20]
   17f6c:	cmp	r0, #0
   17f70:	beq	17d84 <argp_failure@@Base+0x1284>
   17f74:	mov	r0, r9
   17f78:	bl	14240 <argp_parse@@Base+0x12dc>
   17f7c:	b	17d84 <argp_failure@@Base+0x1284>
   17f80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f84:	add	fp, sp, #28
   17f88:	sub	sp, sp, #28
   17f8c:	mov	r7, r0
   17f90:	ldr	r0, [r0, #16]
   17f94:	mov	r6, r1
   17f98:	cmp	r0, #0
   17f9c:	beq	17fbc <argp_failure@@Base+0x14bc>
   17fa0:	mov	r2, r0
   17fa4:	mov	r1, r2
   17fa8:	ldr	r2, [r2, #12]
   17fac:	cmp	r2, #0
   17fb0:	bne	17fa4 <argp_failure@@Base+0x14a4>
   17fb4:	add	r2, r1, #8
   17fb8:	b	17fc0 <argp_failure@@Base+0x14c0>
   17fbc:	add	r2, r7, #12
   17fc0:	ldr	r1, [r6, #16]
   17fc4:	ldr	r3, [r2]
   17fc8:	cmp	r1, #0
   17fcc:	beq	17fec <argp_failure@@Base+0x14ec>
   17fd0:	mov	r2, r1
   17fd4:	mov	r5, r2
   17fd8:	ldr	r2, [r2, #12]
   17fdc:	cmp	r2, #0
   17fe0:	bne	17fd4 <argp_failure@@Base+0x14d4>
   17fe4:	add	r2, r5, #8
   17fe8:	b	17ff0 <argp_failure@@Base+0x14f0>
   17fec:	add	r2, r6, #12
   17ff0:	ldr	r5, [r2]
   17ff4:	orr	r4, r5, r3
   17ff8:	sub	r2, r3, r5
   17ffc:	cmn	r4, #1
   18000:	mov	r4, r2
   18004:	suble	r4, r5, r3
   18008:	ands	r3, r5, r3
   1800c:	movmi	r4, r2
   18010:	cmp	r4, #0
   18014:	bne	18034 <argp_failure@@Base+0x1534>
   18018:	cmp	r0, #0
   1801c:	mov	r4, r0
   18020:	movwne	r4, #1
   18024:	cmp	r1, #0
   18028:	subne	r4, r4, #1
   1802c:	cmp	r4, #0
   18030:	beq	18040 <argp_failure@@Base+0x1540>
   18034:	mov	r0, r4
   18038:	sub	sp, fp, #28
   1803c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18040:	cmp	r0, #0
   18044:	beq	180b4 <argp_failure@@Base+0x15b4>
   18048:	ldr	r3, [r1, #20]
   1804c:	ldr	r2, [r0, #20]
   18050:	cmp	r2, r3
   18054:	ble	1807c <argp_failure@@Base+0x157c>
   18058:	ldr	r0, [r0, #12]
   1805c:	ldr	r2, [r0, #20]
   18060:	cmp	r2, r3
   18064:	bgt	18058 <argp_failure@@Base+0x1558>
   18068:	bl	184a4 <argp_failure@@Base+0x19a4>
   1806c:	cmp	r0, #0
   18070:	mov	r4, r0
   18074:	movweq	r4, #1
   18078:	b	18034 <argp_failure@@Base+0x1534>
   1807c:	bge	180a4 <argp_failure@@Base+0x15a4>
   18080:	ldr	r1, [r1, #12]
   18084:	ldr	r3, [r1, #20]
   18088:	cmp	r2, r3
   1808c:	blt	18080 <argp_failure@@Base+0x1580>
   18090:	bl	184a4 <argp_failure@@Base+0x19a4>
   18094:	cmp	r0, #0
   18098:	mov	r4, r0
   1809c:	mvneq	r4, #0
   180a0:	b	18034 <argp_failure@@Base+0x1534>
   180a4:	bl	184a4 <argp_failure@@Base+0x19a4>
   180a8:	mov	r4, r0
   180ac:	cmp	r0, #0
   180b0:	bne	18034 <argp_failure@@Base+0x1534>
   180b4:	ldr	r0, [r7, #12]
   180b8:	ldr	r1, [r6, #12]
   180bc:	orr	r2, r1, r0
   180c0:	sub	r3, r0, r1
   180c4:	cmn	r2, #1
   180c8:	mov	r4, r3
   180cc:	suble	r4, r1, r0
   180d0:	ands	r0, r1, r0
   180d4:	movmi	r4, r3
   180d8:	cmp	r4, #0
   180dc:	bne	18034 <argp_failure@@Base+0x1534>
   180e0:	ldr	r3, [r7, #4]
   180e4:	mov	sl, #0
   180e8:	cmp	r3, #0
   180ec:	beq	1812c <argp_failure@@Base+0x162c>
   180f0:	ldr	r0, [r7]
   180f4:	mov	r1, r3
   180f8:	add	r0, r0, #12
   180fc:	b	1810c <argp_failure@@Base+0x160c>
   18100:	add	r0, r0, #24
   18104:	subs	r1, r1, #1
   18108:	beq	18128 <argp_failure@@Base+0x1628>
   1810c:	ldr	sl, [r0, #-12]
   18110:	cmp	sl, #0
   18114:	beq	18100 <argp_failure@@Base+0x1600>
   18118:	ldrb	r2, [r0]
   1811c:	tst	r2, #2
   18120:	bne	18100 <argp_failure@@Base+0x1600>
   18124:	b	1812c <argp_failure@@Base+0x162c>
   18128:	mov	sl, #0
   1812c:	ldr	r8, [r6, #4]
   18130:	cmp	r8, #0
   18134:	beq	18170 <argp_failure@@Base+0x1670>
   18138:	ldr	r0, [r6]
   1813c:	mov	r1, r8
   18140:	add	r0, r0, #12
   18144:	b	18154 <argp_failure@@Base+0x1654>
   18148:	add	r0, r0, #24
   1814c:	subs	r1, r1, #1
   18150:	beq	18170 <argp_failure@@Base+0x1670>
   18154:	ldr	r5, [r0, #-12]
   18158:	cmp	r5, #0
   1815c:	beq	18148 <argp_failure@@Base+0x1648>
   18160:	ldrb	r2, [r0]
   18164:	tst	r2, #2
   18168:	bne	18148 <argp_failure@@Base+0x1648>
   1816c:	b	18174 <argp_failure@@Base+0x1674>
   18170:	mov	r5, #0
   18174:	ldr	r4, [r7]
   18178:	mov	r9, #0
   1817c:	cmp	sl, #0
   18180:	str	r3, [sp, #20]
   18184:	str	r8, [sp, #16]
   18188:	ldr	r1, [r4, #12]
   1818c:	str	r4, [sp, #4]
   18190:	beq	181f8 <argp_failure@@Base+0x16f8>
   18194:	ands	r0, r1, #8
   18198:	beq	181f8 <argp_failure@@Base+0x16f8>
   1819c:	str	r1, [sp, #24]
   181a0:	bl	11480 <__ctype_b_loc@plt>
   181a4:	ldrb	r1, [sl]
   181a8:	ldr	r0, [r0]
   181ac:	add	r2, r0, r1, lsl #1
   181b0:	ldrb	r2, [r2, #1]
   181b4:	tst	r2, #32
   181b8:	beq	181c4 <argp_failure@@Base+0x16c4>
   181bc:	ldrb	r1, [sl, #1]!
   181c0:	b	181ac <argp_failure@@Base+0x16ac>
   181c4:	subs	r4, r1, #45	; 0x2d
   181c8:	movwne	r4, #1
   181cc:	cmp	r1, #0
   181d0:	beq	181f0 <argp_failure@@Base+0x16f0>
   181d4:	uxtb	r1, r1
   181d8:	ldrb	r1, [r0, r1, lsl #1]
   181dc:	tst	r1, #8
   181e0:	bne	181f0 <argp_failure@@Base+0x16f0>
   181e4:	ldrb	r1, [sl, #1]!
   181e8:	cmp	r1, #0
   181ec:	bne	181d4 <argp_failure@@Base+0x16d4>
   181f0:	ldr	r1, [sp, #24]
   181f4:	b	181fc <argp_failure@@Base+0x16fc>
   181f8:	mov	r4, #0
   181fc:	ldr	r0, [r6]
   18200:	cmp	r5, #0
   18204:	str	r0, [sp, #8]
   18208:	ldr	r0, [r0, #12]
   1820c:	str	r0, [sp, #12]
   18210:	andsne	r0, r0, #8
   18214:	beq	18270 <argp_failure@@Base+0x1770>
   18218:	mov	r8, r1
   1821c:	bl	11480 <__ctype_b_loc@plt>
   18220:	ldrb	r1, [r5]
   18224:	ldr	r0, [r0]
   18228:	add	r2, r0, r1, lsl #1
   1822c:	ldrb	r2, [r2, #1]
   18230:	tst	r2, #32
   18234:	beq	18240 <argp_failure@@Base+0x1740>
   18238:	ldrb	r1, [r5, #1]!
   1823c:	b	18228 <argp_failure@@Base+0x1728>
   18240:	subs	r9, r1, #45	; 0x2d
   18244:	movwne	r9, #1
   18248:	cmp	r1, #0
   1824c:	beq	1826c <argp_failure@@Base+0x176c>
   18250:	uxtb	r1, r1
   18254:	ldrb	r1, [r0, r1, lsl #1]
   18258:	tst	r1, #8
   1825c:	bne	1826c <argp_failure@@Base+0x176c>
   18260:	ldrb	r1, [r5, #1]!
   18264:	cmp	r1, #0
   18268:	bne	18250 <argp_failure@@Base+0x1750>
   1826c:	mov	r1, r8
   18270:	subs	r4, r4, r9
   18274:	bne	18034 <argp_failure@@Base+0x1534>
   18278:	ldr	r0, [sp, #20]
   1827c:	mov	r2, #0
   18280:	cmp	r0, #0
   18284:	beq	1831c <argp_failure@@Base+0x181c>
   18288:	sub	r8, r0, #1
   1828c:	ldr	r0, [sp, #4]
   18290:	ldr	r4, [r7, #8]
   18294:	add	r9, r0, #36	; 0x24
   18298:	tst	r1, #8
   1829c:	beq	182c4 <argp_failure@@Base+0x17c4>
   182a0:	mov	r2, #0
   182a4:	cmp	r8, #0
   182a8:	beq	1831c <argp_failure@@Base+0x181c>
   182ac:	cmp	r2, #0
   182b0:	bne	1831c <argp_failure@@Base+0x181c>
   182b4:	ldr	r1, [r9], #24
   182b8:	sub	r8, r8, #1
   182bc:	tst	r1, #8
   182c0:	bne	182a0 <argp_failure@@Base+0x17a0>
   182c4:	ldr	r7, [r9, #-32]	; 0xffffffe0
   182c8:	sub	r0, r7, #1
   182cc:	cmp	r0, #254	; 0xfe
   182d0:	bhi	182a0 <argp_failure@@Base+0x17a0>
   182d4:	str	r1, [sp, #24]
   182d8:	bl	11480 <__ctype_b_loc@plt>
   182dc:	ldr	r0, [r0]
   182e0:	add	r0, r0, r7, lsl #1
   182e4:	ldrb	r0, [r0, #1]
   182e8:	tst	r0, #64	; 0x40
   182ec:	beq	182a0 <argp_failure@@Base+0x17a0>
   182f0:	ldrb	r0, [r4]
   182f4:	mov	r2, r7
   182f8:	cmp	r7, r0
   182fc:	bne	182a0 <argp_failure@@Base+0x17a0>
   18300:	ldr	r0, [sp, #24]
   18304:	add	r4, r4, #1
   18308:	tst	r0, #2
   1830c:	mov	r0, #0
   18310:	movne	r2, r0
   18314:	cmp	r8, #0
   18318:	bne	182ac <argp_failure@@Base+0x17ac>
   1831c:	ldr	r3, [sp, #16]
   18320:	mov	r9, #0
   18324:	mov	r0, r2
   18328:	str	r2, [sp, #24]
   1832c:	cmp	r3, #0
   18330:	beq	183cc <argp_failure@@Base+0x18cc>
   18334:	ldr	r0, [sp, #8]
   18338:	ldr	r6, [r6, #8]
   1833c:	ldr	r4, [sp, #12]
   18340:	sub	r7, r3, #1
   18344:	add	r8, r0, #36	; 0x24
   18348:	tst	r4, #8
   1834c:	bne	18358 <argp_failure@@Base+0x1858>
   18350:	b	1837c <argp_failure@@Base+0x187c>
   18354:	ldr	r2, [sp, #24]
   18358:	mov	r9, #0
   1835c:	cmp	r7, #0
   18360:	beq	183cc <argp_failure@@Base+0x18cc>
   18364:	cmp	r9, #0
   18368:	bne	183cc <argp_failure@@Base+0x18cc>
   1836c:	ldr	r4, [r8], #24
   18370:	sub	r7, r7, #1
   18374:	tst	r4, #8
   18378:	bne	18358 <argp_failure@@Base+0x1858>
   1837c:	ldr	r9, [r8, #-32]	; 0xffffffe0
   18380:	sub	r0, r9, #1
   18384:	cmp	r0, #254	; 0xfe
   18388:	bhi	18358 <argp_failure@@Base+0x1858>
   1838c:	bl	11480 <__ctype_b_loc@plt>
   18390:	ldr	r0, [r0]
   18394:	add	r0, r0, r9, lsl #1
   18398:	ldrb	r0, [r0, #1]
   1839c:	tst	r0, #64	; 0x40
   183a0:	beq	18354 <argp_failure@@Base+0x1854>
   183a4:	ldrb	r0, [r6]
   183a8:	ldr	r2, [sp, #24]
   183ac:	cmp	r9, r0
   183b0:	bne	18358 <argp_failure@@Base+0x1858>
   183b4:	tst	r4, #2
   183b8:	mov	r0, #0
   183bc:	add	r6, r6, #1
   183c0:	movne	r9, r0
   183c4:	cmp	r7, #0
   183c8:	bne	18364 <argp_failure@@Base+0x1864>
   183cc:	tst	r2, #255	; 0xff
   183d0:	mov	r6, r2
   183d4:	bne	183ec <argp_failure@@Base+0x18ec>
   183d8:	cmp	sl, #0
   183dc:	beq	183e8 <argp_failure@@Base+0x18e8>
   183e0:	ldrb	r6, [sl]
   183e4:	b	183ec <argp_failure@@Base+0x18ec>
   183e8:	mov	r6, #0
   183ec:	tst	r9, #255	; 0xff
   183f0:	mov	r7, r9
   183f4:	bne	1840c <argp_failure@@Base+0x190c>
   183f8:	cmp	r5, #0
   183fc:	beq	18408 <argp_failure@@Base+0x1908>
   18400:	ldrb	r7, [r5]
   18404:	b	1840c <argp_failure@@Base+0x190c>
   18408:	mov	r7, #0
   1840c:	bl	11468 <__ctype_tolower_loc@plt>
   18410:	ldr	r2, [r0]
   18414:	uxtb	r0, r7
   18418:	uxtb	r1, r6
   1841c:	ldr	r3, [r2, r0, lsl #2]
   18420:	ldr	r2, [r2, r1, lsl #2]
   18424:	subs	r4, r2, r3
   18428:	subseq	r4, r0, r1
   1842c:	bne	18034 <argp_failure@@Base+0x1534>
   18430:	ldr	r0, [sp, #24]
   18434:	uxtb	r4, r0
   18438:	cmp	r4, #0
   1843c:	movwne	r4, #1
   18440:	tst	r9, #255	; 0xff
   18444:	subne	r4, r4, #1
   18448:	cmp	r4, #0
   1844c:	bne	18034 <argp_failure@@Base+0x1534>
   18450:	ldr	r0, [sp, #24]
   18454:	tst	r0, #255	; 0xff
   18458:	beq	18464 <argp_failure@@Base+0x1964>
   1845c:	mov	r4, #0
   18460:	b	18034 <argp_failure@@Base+0x1534>
   18464:	cmp	sl, #0
   18468:	mov	r4, sl
   1846c:	movwne	r4, #1
   18470:	cmp	r5, #0
   18474:	subne	r4, r4, #1
   18478:	cmp	r4, #0
   1847c:	bne	18034 <argp_failure@@Base+0x1534>
   18480:	cmp	sl, #0
   18484:	beq	1845c <argp_failure@@Base+0x195c>
   18488:	mov	r0, sl
   1848c:	mov	r1, r5
   18490:	bl	113e4 <strcasecmp@plt>
   18494:	cmp	r0, #0
   18498:	mov	r4, r0
   1849c:	moveq	r4, #0
   184a0:	b	18034 <argp_failure@@Base+0x1534>
   184a4:	push	{r4, r5, fp, lr}
   184a8:	add	fp, sp, #8
   184ac:	mov	r4, r1
   184b0:	mov	r5, r0
   184b4:	ldr	r1, [r1, #12]
   184b8:	ldr	r0, [r0, #12]
   184bc:	cmp	r0, r1
   184c0:	beq	184d4 <argp_failure@@Base+0x19d4>
   184c4:	bl	184a4 <argp_failure@@Base+0x19a4>
   184c8:	cmp	r0, #0
   184cc:	beq	184d4 <argp_failure@@Base+0x19d4>
   184d0:	pop	{r4, r5, fp, pc}
   184d4:	ldr	r1, [r5, #8]
   184d8:	ldr	r2, [r4, #8]
   184dc:	orr	r0, r2, r1
   184e0:	sub	r3, r1, r2
   184e4:	cmn	r0, #1
   184e8:	mov	r0, r3
   184ec:	suble	r0, r2, r1
   184f0:	ands	r1, r2, r1
   184f4:	movmi	r0, r3
   184f8:	cmp	r0, #0
   184fc:	popne	{r4, r5, fp, pc}
   18500:	ldr	r0, [r5, #4]
   18504:	ldr	r1, [r4, #4]
   18508:	sub	r0, r1, r0
   1850c:	pop	{r4, r5, fp, pc}
   18510:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   18514:	add	fp, sp, #24
   18518:	mov	r4, r0
   1851c:	ldr	r0, [r1, #12]
   18520:	mov	r5, r1
   18524:	cmp	r0, #0
   18528:	beq	185a4 <argp_failure@@Base+0x1aa4>
   1852c:	ldr	r1, [r5, #8]
   18530:	ldr	r0, [r5]
   18534:	ldr	r6, [r1]
   18538:	ldr	r7, [r0, #16]
   1853c:	cmp	r6, #0
   18540:	ldrne	r1, [r1, #4]
   18544:	cmpne	r1, #0
   18548:	bne	185ec <argp_failure@@Base+0x1aec>
   1854c:	cmp	r7, #0
   18550:	beq	1868c <argp_failure@@Base+0x1b8c>
   18554:	ldr	r0, [r7]
   18558:	cmp	r0, #0
   1855c:	beq	1868c <argp_failure@@Base+0x1b8c>
   18560:	ldrb	r1, [r0]
   18564:	cmp	r1, #0
   18568:	beq	1868c <argp_failure@@Base+0x1b8c>
   1856c:	cmp	r6, #0
   18570:	beq	18650 <argp_failure@@Base+0x1b50>
   18574:	ldr	r1, [r6, #16]
   18578:	cmp	r1, r7
   1857c:	beq	1868c <argp_failure@@Base+0x1b8c>
   18580:	cmp	r1, #0
   18584:	beq	18644 <argp_failure@@Base+0x1b44>
   18588:	ldr	r1, [r1, #12]
   1858c:	cmp	r1, r7
   18590:	cmpne	r1, #0
   18594:	bne	18588 <argp_failure@@Base+0x1a88>
   18598:	cmp	r1, r7
   1859c:	bne	18650 <argp_failure@@Base+0x1b50>
   185a0:	b	1868c <argp_failure@@Base+0x1b8c>
   185a4:	ldr	r6, [r5, #4]
   185a8:	ldr	r0, [r6, #28]
   185ac:	ldr	r1, [r6, #32]
   185b0:	add	r2, r0, #2
   185b4:	cmp	r2, r1
   185b8:	bls	185d4 <argp_failure@@Base+0x1ad4>
   185bc:	mov	r0, r6
   185c0:	mov	r1, #2
   185c4:	bl	1a398 <argp_failure@@Base+0x3898>
   185c8:	cmp	r0, #0
   185cc:	beq	18694 <argp_failure@@Base+0x1b94>
   185d0:	ldr	r0, [r6, #28]
   185d4:	movw	r1, #8236	; 0x202c
   185d8:	strh	r1, [r0]
   185dc:	ldr	r0, [r6, #28]
   185e0:	add	r0, r0, #2
   185e4:	str	r0, [r6, #28]
   185e8:	b	18694 <argp_failure@@Base+0x1b94>
   185ec:	ldr	r1, [r6, #12]
   185f0:	ldr	r0, [r0, #12]
   185f4:	cmp	r0, r1
   185f8:	beq	1854c <argp_failure@@Base+0x1a4c>
   185fc:	ldr	r8, [r5, #4]
   18600:	ldr	r0, [r8, #28]
   18604:	ldr	r1, [r8, #32]
   18608:	cmp	r0, r1
   1860c:	bcc	18628 <argp_failure@@Base+0x1b28>
   18610:	mov	r0, r8
   18614:	mov	r1, #1
   18618:	bl	1a398 <argp_failure@@Base+0x3898>
   1861c:	cmp	r0, #0
   18620:	beq	1854c <argp_failure@@Base+0x1a4c>
   18624:	ldr	r0, [r8, #28]
   18628:	add	r1, r0, #1
   1862c:	str	r1, [r8, #28]
   18630:	mov	r1, #10
   18634:	strb	r1, [r0]
   18638:	cmp	r7, #0
   1863c:	bne	18554 <argp_failure@@Base+0x1a54>
   18640:	b	1868c <argp_failure@@Base+0x1b8c>
   18644:	mov	r1, #0
   18648:	cmp	r1, r7
   1864c:	beq	1868c <argp_failure@@Base+0x1b8c>
   18650:	ldr	r1, [r5, #4]
   18654:	mov	r2, r5
   18658:	ldr	r8, [r1, #12]
   1865c:	ldr	r1, [r7, #16]
   18660:	bl	1871c <argp_failure@@Base+0x1c1c>
   18664:	ldr	r6, [r5, #4]
   18668:	ldr	r1, [r6, #24]
   1866c:	ldr	r2, [r6, #28]
   18670:	ldr	r0, [r6, #16]
   18674:	sub	r1, r2, r1
   18678:	cmp	r1, r0
   1867c:	bls	18688 <argp_failure@@Base+0x1b88>
   18680:	mov	r0, r6
   18684:	bl	19e68 <argp_failure@@Base+0x3368>
   18688:	str	r8, [r6, #12]
   1868c:	mov	r0, #0
   18690:	str	r0, [r5, #12]
   18694:	ldr	r5, [r5, #4]
   18698:	ldr	r1, [r5, #24]
   1869c:	ldr	r2, [r5, #28]
   186a0:	ldr	r0, [r5, #16]
   186a4:	sub	r1, r2, r1
   186a8:	cmp	r1, r0
   186ac:	bls	186b8 <argp_failure@@Base+0x1bb8>
   186b0:	mov	r0, r5
   186b4:	bl	19e68 <argp_failure@@Base+0x3368>
   186b8:	ldr	r0, [r5, #20]
   186bc:	cmp	r0, #0
   186c0:	subgt	r4, r4, r0
   186c4:	cmp	r4, #1
   186c8:	blt	18718 <argp_failure@@Base+0x1c18>
   186cc:	mov	r6, #32
   186d0:	b	186e8 <argp_failure@@Base+0x1be8>
   186d4:	add	r1, r0, #1
   186d8:	str	r1, [r5, #28]
   186dc:	strb	r6, [r0]
   186e0:	cmp	r4, #0
   186e4:	ble	18718 <argp_failure@@Base+0x1c18>
   186e8:	ldr	r0, [r5, #28]
   186ec:	ldr	r1, [r5, #32]
   186f0:	sub	r4, r4, #1
   186f4:	cmp	r0, r1
   186f8:	bcc	186d4 <argp_failure@@Base+0x1bd4>
   186fc:	mov	r0, r5
   18700:	mov	r1, #1
   18704:	bl	1a398 <argp_failure@@Base+0x3898>
   18708:	cmp	r0, #0
   1870c:	beq	186e0 <argp_failure@@Base+0x1be0>
   18710:	ldr	r0, [r5, #28]
   18714:	b	186d4 <argp_failure@@Base+0x1bd4>
   18718:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1871c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18720:	add	fp, sp, #28
   18724:	sub	sp, sp, #4
   18728:	mov	r9, r2
   1872c:	mov	r8, r0
   18730:	cmp	r1, #0
   18734:	mov	r6, r0
   18738:	beq	18778 <argp_failure@@Base+0x1c78>
   1873c:	ldr	r0, [r1, #20]
   18740:	mov	r4, r1
   18744:	mov	r6, r8
   18748:	cmp	r0, #0
   1874c:	beq	18778 <argp_failure@@Base+0x1c78>
   18750:	ldr	r1, [r9, #16]
   18754:	mov	r0, r4
   18758:	bl	13bcc <argp_parse@@Base+0xc68>
   1875c:	ldr	r3, [r4, #20]
   18760:	mov	r2, r0
   18764:	movw	r0, #3
   18768:	mov	r1, r8
   1876c:	movt	r0, #512	; 0x200
   18770:	blx	r3
   18774:	mov	r6, r0
   18778:	cmp	r6, #0
   1877c:	beq	189a8 <argp_failure@@Base+0x1ea8>
   18780:	ldrb	r0, [r6]
   18784:	cmp	r0, #0
   18788:	beq	1899c <argp_failure@@Base+0x1e9c>
   1878c:	ldr	r0, [r9, #8]
   18790:	ldr	r0, [r0]
   18794:	cmp	r0, #0
   18798:	beq	187d8 <argp_failure@@Base+0x1cd8>
   1879c:	ldr	r4, [r9, #4]
   187a0:	ldr	r0, [r4, #28]
   187a4:	ldr	r1, [r4, #32]
   187a8:	cmp	r0, r1
   187ac:	bcc	187c8 <argp_failure@@Base+0x1cc8>
   187b0:	mov	r0, r4
   187b4:	mov	r1, #1
   187b8:	bl	1a398 <argp_failure@@Base+0x3898>
   187bc:	cmp	r0, #0
   187c0:	beq	187d8 <argp_failure@@Base+0x1cd8>
   187c4:	ldr	r0, [r4, #28]
   187c8:	add	r1, r0, #1
   187cc:	str	r1, [r4, #28]
   187d0:	mov	r1, #10
   187d4:	strb	r1, [r0]
   187d8:	ldr	r7, [r9, #4]
   187dc:	movw	sl, #2160	; 0x870
   187e0:	movt	sl, #3
   187e4:	ldr	r4, [sl, #24]
   187e8:	ldr	r1, [r7, #24]
   187ec:	ldr	r2, [r7, #28]
   187f0:	ldr	r0, [r7, #16]
   187f4:	sub	r1, r2, r1
   187f8:	cmp	r1, r0
   187fc:	bls	18808 <argp_failure@@Base+0x1d08>
   18800:	mov	r0, r7
   18804:	bl	19e68 <argp_failure@@Base+0x3368>
   18808:	ldr	r0, [r7, #20]
   1880c:	cmp	r0, #0
   18810:	subgt	r4, r4, r0
   18814:	cmp	r4, #1
   18818:	blt	18868 <argp_failure@@Base+0x1d68>
   1881c:	mov	r5, #32
   18820:	b	18838 <argp_failure@@Base+0x1d38>
   18824:	add	r1, r0, #1
   18828:	str	r1, [r7, #28]
   1882c:	strb	r5, [r0]
   18830:	cmp	r4, #0
   18834:	ble	18868 <argp_failure@@Base+0x1d68>
   18838:	ldr	r0, [r7, #28]
   1883c:	ldr	r1, [r7, #32]
   18840:	sub	r4, r4, #1
   18844:	cmp	r0, r1
   18848:	bcc	18824 <argp_failure@@Base+0x1d24>
   1884c:	mov	r0, r7
   18850:	mov	r1, #1
   18854:	bl	1a398 <argp_failure@@Base+0x3898>
   18858:	cmp	r0, #0
   1885c:	beq	18830 <argp_failure@@Base+0x1d30>
   18860:	ldr	r0, [r7, #28]
   18864:	b	18824 <argp_failure@@Base+0x1d24>
   18868:	ldr	r4, [r9, #4]
   1886c:	ldr	r5, [sl, #24]
   18870:	ldr	r1, [r4, #24]
   18874:	ldr	r2, [r4, #28]
   18878:	ldr	r0, [r4, #16]
   1887c:	mov	r7, r4
   18880:	sub	r1, r2, r1
   18884:	mov	r2, sl
   18888:	mov	sl, r5
   1888c:	cmp	r1, r0
   18890:	bls	188b8 <argp_failure@@Base+0x1db8>
   18894:	mov	r0, r4
   18898:	mov	r7, r2
   1889c:	bl	19e68 <argp_failure@@Base+0x3368>
   188a0:	ldr	sl, [r7, #24]
   188a4:	ldr	r7, [r9, #4]
   188a8:	ldr	r1, [r7, #24]
   188ac:	ldr	r2, [r7, #28]
   188b0:	ldr	r0, [r7, #16]
   188b4:	sub	r1, r2, r1
   188b8:	str	r5, [r4, #4]
   188bc:	cmp	r1, r0
   188c0:	mov	r5, r7
   188c4:	bls	188d4 <argp_failure@@Base+0x1dd4>
   188c8:	mov	r0, r7
   188cc:	bl	19e68 <argp_failure@@Base+0x3368>
   188d0:	ldr	r5, [r9, #4]
   188d4:	mov	r0, r6
   188d8:	str	sl, [r7, #12]
   188dc:	bl	114a4 <strlen@plt>
   188e0:	cmp	r0, #0
   188e4:	beq	18930 <argp_failure@@Base+0x1e30>
   188e8:	mov	r4, r0
   188ec:	ldr	r0, [r5, #28]
   188f0:	ldr	r1, [r5, #32]
   188f4:	add	r2, r0, r4
   188f8:	cmp	r2, r1
   188fc:	bls	18918 <argp_failure@@Base+0x1e18>
   18900:	mov	r0, r5
   18904:	mov	r1, r4
   18908:	bl	1a398 <argp_failure@@Base+0x3898>
   1890c:	cmp	r0, #0
   18910:	beq	18930 <argp_failure@@Base+0x1e30>
   18914:	ldr	r0, [r5, #28]
   18918:	mov	r1, r6
   1891c:	mov	r2, r4
   18920:	bl	113a8 <memcpy@plt>
   18924:	ldr	r0, [r5, #28]
   18928:	add	r0, r0, r4
   1892c:	str	r0, [r5, #28]
   18930:	ldr	r5, [r9, #4]
   18934:	ldr	r2, [r5, #24]
   18938:	ldr	r0, [r5, #28]
   1893c:	ldr	r1, [r5, #16]
   18940:	mov	r4, r5
   18944:	sub	r2, r0, r2
   18948:	cmp	r2, r1
   1894c:	bls	18960 <argp_failure@@Base+0x1e60>
   18950:	mov	r0, r5
   18954:	bl	19e68 <argp_failure@@Base+0x3368>
   18958:	ldr	r4, [r9, #4]
   1895c:	ldr	r0, [r4, #28]
   18960:	mov	r1, #0
   18964:	str	r1, [r5, #4]
   18968:	ldr	r1, [r4, #32]
   1896c:	cmp	r0, r1
   18970:	bcc	1898c <argp_failure@@Base+0x1e8c>
   18974:	mov	r0, r4
   18978:	mov	r1, #1
   1897c:	bl	1a398 <argp_failure@@Base+0x3898>
   18980:	cmp	r0, #0
   18984:	beq	1899c <argp_failure@@Base+0x1e9c>
   18988:	ldr	r0, [r4, #28]
   1898c:	add	r1, r0, #1
   18990:	str	r1, [r4, #28]
   18994:	mov	r1, #10
   18998:	strb	r1, [r0]
   1899c:	ldr	r0, [r9, #8]
   189a0:	mov	r1, #1
   189a4:	str	r1, [r0, #4]
   189a8:	cmp	r6, r8
   189ac:	beq	189c0 <argp_failure@@Base+0x1ec0>
   189b0:	mov	r0, r6
   189b4:	sub	sp, fp, #28
   189b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189bc:	b	14240 <argp_parse@@Base+0x12dc>
   189c0:	sub	sp, fp, #28
   189c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   189cc:	add	fp, sp, #28
   189d0:	sub	sp, sp, #92	; 0x5c
   189d4:	mvn	r4, #0
   189d8:	cmp	r0, #1
   189dc:	blt	194c0 <argp_failure@@Base+0x29c0>
   189e0:	ldr	ip, [fp, #16]
   189e4:	mov	r9, r2
   189e8:	mov	r2, r0
   189ec:	mov	r8, r1
   189f0:	mov	r0, #0
   189f4:	str	r3, [fp, #-48]	; 0xffffffd0
   189f8:	ldr	r6, [ip]
   189fc:	ldr	r4, [ip, #4]
   18a00:	str	r0, [ip, #12]
   18a04:	cmp	r6, #0
   18a08:	beq	18a2c <argp_failure@@Base+0x1f2c>
   18a0c:	ldr	r0, [ip, #16]
   18a10:	cmp	r0, #0
   18a14:	beq	18a34 <argp_failure@@Base+0x1f34>
   18a18:	ldrb	r0, [r9]
   18a1c:	cmp	r0, #45	; 0x2d
   18a20:	cmpne	r0, #43	; 0x2b
   18a24:	addeq	r9, r9, #1
   18a28:	b	18aa8 <argp_failure@@Base+0x1fa8>
   18a2c:	mov	r6, #1
   18a30:	str	r6, [ip]
   18a34:	mov	r0, #0
   18a38:	str	r6, [ip, #28]
   18a3c:	str	r6, [ip, #32]
   18a40:	str	r0, [ip, #20]
   18a44:	ldrb	r1, [r9]
   18a48:	cmp	r1, #43	; 0x2b
   18a4c:	beq	18a5c <argp_failure@@Base+0x1f5c>
   18a50:	cmp	r1, #45	; 0x2d
   18a54:	bne	18a68 <argp_failure@@Base+0x1f68>
   18a58:	mov	r0, #2
   18a5c:	str	r0, [ip, #24]
   18a60:	add	r9, r9, #1
   18a64:	b	18aa0 <argp_failure@@Base+0x1fa0>
   18a68:	ldr	r0, [fp, #20]
   18a6c:	cmp	r0, #0
   18a70:	bne	18a98 <argp_failure@@Base+0x1f98>
   18a74:	movw	r0, #51385	; 0xc8b9
   18a78:	mov	r5, ip
   18a7c:	mov	r7, r2
   18a80:	movt	r0, #1
   18a84:	bl	1142c <getenv@plt>
   18a88:	mov	r2, r7
   18a8c:	mov	ip, r5
   18a90:	cmp	r0, #0
   18a94:	beq	194cc <argp_failure@@Base+0x29cc>
   18a98:	mov	r0, #0
   18a9c:	str	r0, [ip, #24]
   18aa0:	mov	r0, #1
   18aa4:	str	r0, [ip, #16]
   18aa8:	ldrb	r0, [r9]
   18aac:	ldr	r5, [ip, #20]
   18ab0:	str	r8, [fp, #-32]	; 0xffffffe0
   18ab4:	subs	r1, r0, #58	; 0x3a
   18ab8:	movne	r1, r4
   18abc:	cmp	r5, #0
   18ac0:	str	r1, [fp, #-44]	; 0xffffffd4
   18ac4:	beq	18b30 <argp_failure@@Base+0x2030>
   18ac8:	ldrb	r0, [r5]
   18acc:	cmp	r0, #0
   18ad0:	beq	18b30 <argp_failure@@Base+0x2030>
   18ad4:	str	r2, [fp, #-36]	; 0xffffffdc
   18ad8:	add	r8, r5, #1
   18adc:	mov	r0, r9
   18ae0:	mov	r7, ip
   18ae4:	str	r8, [ip, #20]
   18ae8:	ldrb	r4, [r5]
   18aec:	mov	r1, r4
   18af0:	bl	114b0 <strchr@plt>
   18af4:	ldrb	r1, [r5, #1]
   18af8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18afc:	cmp	r1, #0
   18b00:	orr	r1, r4, #1
   18b04:	addeq	r6, r6, #1
   18b08:	streq	r6, [r7]
   18b0c:	cmp	r1, #59	; 0x3b
   18b10:	cmpne	r0, #0
   18b14:	bne	18b90 <argp_failure@@Base+0x2090>
   18b18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18b1c:	cmp	r0, #0
   18b20:	bne	19500 <argp_failure@@Base+0x2a00>
   18b24:	str	r4, [r7, #8]
   18b28:	mov	r4, #63	; 0x3f
   18b2c:	b	194c0 <argp_failure@@Base+0x29c0>
   18b30:	mov	r3, ip
   18b34:	str	r9, [sp, #48]	; 0x30
   18b38:	mov	r5, ip
   18b3c:	ldr	r9, [r3, #32]!
   18b40:	cmp	r9, r6
   18b44:	strgt	r6, [r3]
   18b48:	movgt	r9, r6
   18b4c:	ldr	r7, [r5, #28]!
   18b50:	cmp	r7, r6
   18b54:	strgt	r6, [r5]
   18b58:	movgt	r7, r6
   18b5c:	ldr	r4, [ip, #24]
   18b60:	cmp	r4, #1
   18b64:	bne	19008 <argp_failure@@Base+0x2508>
   18b68:	cmp	r7, r9
   18b6c:	cmpne	r9, r6
   18b70:	bne	18c14 <argp_failure@@Base+0x2114>
   18b74:	cmp	r9, r6
   18b78:	mov	r1, r5
   18b7c:	mov	r0, r6
   18b80:	bne	18fb4 <argp_failure@@Base+0x24b4>
   18b84:	cmp	r6, r2
   18b88:	blt	18fd8 <argp_failure@@Base+0x24d8>
   18b8c:	b	18ff4 <argp_failure@@Base+0x24f4>
   18b90:	ldrb	r2, [r0]
   18b94:	ldrb	r1, [r0, #1]
   18b98:	cmp	r2, #87	; 0x57
   18b9c:	bne	18bec <argp_failure@@Base+0x20ec>
   18ba0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18ba4:	cmp	r2, #0
   18ba8:	beq	18bec <argp_failure@@Base+0x20ec>
   18bac:	cmp	r1, #59	; 0x3b
   18bb0:	bne	18bec <argp_failure@@Base+0x20ec>
   18bb4:	ldrb	r0, [r8]
   18bb8:	cmp	r0, #0
   18bbc:	bne	19530 <argp_failure@@Base+0x2a30>
   18bc0:	cmp	r6, r3
   18bc4:	bne	19528 <argp_failure@@Base+0x2a28>
   18bc8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18bcc:	cmp	r0, #0
   18bd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18bd4:	bne	19628 <argp_failure@@Base+0x2b28>
   18bd8:	str	r4, [r7, #8]
   18bdc:	ldrb	r4, [r9]
   18be0:	cmp	r4, #58	; 0x3a
   18be4:	movwne	r4, #63	; 0x3f
   18be8:	b	194c0 <argp_failure@@Base+0x29c0>
   18bec:	cmp	r1, #58	; 0x3a
   18bf0:	bne	194c0 <argp_failure@@Base+0x29c0>
   18bf4:	ldrb	r0, [r0, #2]
   18bf8:	ldrb	r1, [r8]
   18bfc:	cmp	r0, #58	; 0x3a
   18c00:	bne	19110 <argp_failure@@Base+0x2610>
   18c04:	cmp	r1, #0
   18c08:	bne	19118 <argp_failure@@Base+0x2618>
   18c0c:	mov	r0, #0
   18c10:	b	195f0 <argp_failure@@Base+0x2af0>
   18c14:	cmp	r6, r9
   18c18:	str	r4, [sp, #28]
   18c1c:	str	r5, [sp, #56]	; 0x38
   18c20:	str	r7, [fp, #-40]	; 0xffffffd8
   18c24:	str	r3, [sp, #52]	; 0x34
   18c28:	str	r2, [fp, #-36]	; 0xffffffdc
   18c2c:	ble	18f90 <argp_failure@@Base+0x2490>
   18c30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c34:	cmp	r0, r9
   18c38:	bge	18f90 <argp_failure@@Base+0x2490>
   18c3c:	add	r0, r8, r9, lsl #2
   18c40:	ldr	lr, [fp, #-40]	; 0xffffffd8
   18c44:	mov	r2, r6
   18c48:	str	r0, [fp, #-52]	; 0xffffffcc
   18c4c:	sub	r0, r8, r9, lsl #2
   18c50:	str	r0, [sp, #32]
   18c54:	rsb	r0, r9, #1
   18c58:	add	r0, r8, r0, lsl #2
   18c5c:	str	r0, [sp, #44]	; 0x2c
   18c60:	mvn	r0, r9
   18c64:	str	r0, [fp, #-56]	; 0xffffffc8
   18c68:	add	r0, r8, r0, lsl #2
   18c6c:	add	r0, r0, #4
   18c70:	str	r0, [sp, #24]
   18c74:	add	r0, r8, #4
   18c78:	str	r0, [sp, #60]	; 0x3c
   18c7c:	b	18c90 <argp_failure@@Base+0x2190>
   18c80:	mov	r2, sl
   18c84:	cmp	r2, r9
   18c88:	cmpgt	r9, lr
   18c8c:	ble	18f90 <argp_failure@@Base+0x2490>
   18c90:	sub	r4, r9, lr
   18c94:	sub	r0, r2, r9
   18c98:	cmp	r0, r4
   18c9c:	ble	18d4c <argp_failure@@Base+0x224c>
   18ca0:	sub	sl, r2, r4
   18ca4:	cmp	r4, #1
   18ca8:	blt	18c80 <argp_failure@@Base+0x2180>
   18cac:	mov	r3, #0
   18cb0:	cmp	r4, #4
   18cb4:	bcc	18e34 <argp_failure@@Base+0x2334>
   18cb8:	add	r5, r8, r2, lsl #2
   18cbc:	add	r1, r8, lr, lsl #2
   18cc0:	cmp	r1, r5
   18cc4:	bcs	18cd8 <argp_failure@@Base+0x21d8>
   18cc8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18ccc:	add	r5, r8, sl, lsl #2
   18cd0:	cmp	r5, r0
   18cd4:	bcc	18e34 <argp_failure@@Base+0x2334>
   18cd8:	bic	r3, r4, #3
   18cdc:	mov	r0, #1
   18ce0:	str	sl, [sp, #40]	; 0x28
   18ce4:	subs	r5, r3, #4
   18ce8:	add	r5, r0, r5, lsr #2
   18cec:	and	r0, r5, #1
   18cf0:	str	r0, [sp, #36]	; 0x24
   18cf4:	beq	18df0 <argp_failure@@Base+0x22f0>
   18cf8:	sub	r8, r5, r0
   18cfc:	ldr	r0, [sp, #24]
   18d00:	add	r5, r2, lr
   18d04:	mov	r7, #0
   18d08:	add	sl, r0, r5, lsl #2
   18d0c:	mov	r5, #0
   18d10:	add	ip, r1, r5
   18d14:	add	r0, sl, r5
   18d18:	add	r5, r5, #32
   18d1c:	subs	r8, r8, #2
   18d20:	add	r7, r7, #8
   18d24:	vld1.32	{d16-d17}, [r0]
   18d28:	vld1.32	{d18-d19}, [ip]
   18d2c:	vst1.32	{d16-d17}, [ip]!
   18d30:	vst1.32	{d18-d19}, [r0]!
   18d34:	vld1.32	{d16-d17}, [r0]
   18d38:	vld1.32	{d18-d19}, [ip]
   18d3c:	vst1.32	{d16-d17}, [ip]
   18d40:	vst1.32	{d18-d19}, [r0]
   18d44:	bne	18d10 <argp_failure@@Base+0x2210>
   18d48:	b	18df4 <argp_failure@@Base+0x22f4>
   18d4c:	cmp	r0, #1
   18d50:	blt	18f84 <argp_failure@@Base+0x2484>
   18d54:	mov	sl, #0
   18d58:	cmp	r0, #3
   18d5c:	bls	18f00 <argp_failure@@Base+0x2400>
   18d60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18d64:	add	r1, r3, r2, lsl #2
   18d68:	add	r8, r3, lr, lsl #2
   18d6c:	cmp	r8, r1
   18d70:	bcs	18d8c <argp_failure@@Base+0x228c>
   18d74:	ldr	r3, [sp, #32]
   18d78:	add	r1, r2, lr
   18d7c:	add	r1, r3, r1, lsl #2
   18d80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18d84:	cmp	r3, r1
   18d88:	bcc	18f00 <argp_failure@@Base+0x2400>
   18d8c:	bic	sl, r0, #3
   18d90:	mov	r3, #1
   18d94:	subs	r1, sl, #4
   18d98:	add	r1, r3, r1, lsr #2
   18d9c:	and	r3, r1, #1
   18da0:	str	r3, [sp, #40]	; 0x28
   18da4:	beq	18ec0 <argp_failure@@Base+0x23c0>
   18da8:	sub	r7, r3, r1
   18dac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18db0:	mov	r1, #0
   18db4:	mov	ip, #32
   18db8:	mov	r5, r3
   18dbc:	mov	r4, r8
   18dc0:	adds	r7, r7, #2
   18dc4:	add	r1, r1, #8
   18dc8:	vld1.32	{d16-d17}, [r5]!
   18dcc:	vld1.32	{d18-d19}, [r4]!
   18dd0:	vst1.32	{d16-d17}, [r8], ip
   18dd4:	vst1.32	{d18-d19}, [r3], ip
   18dd8:	vld1.32	{d16-d17}, [r5]
   18ddc:	vld1.32	{d18-d19}, [r4]
   18de0:	vst1.32	{d16-d17}, [r4]
   18de4:	vst1.32	{d18-d19}, [r5]
   18de8:	bne	18db8 <argp_failure@@Base+0x22b8>
   18dec:	b	18ec4 <argp_failure@@Base+0x23c4>
   18df0:	mov	r7, #0
   18df4:	ldr	r0, [sp, #36]	; 0x24
   18df8:	ldr	r8, [fp, #-32]	; 0xffffffe0
   18dfc:	ldr	sl, [sp, #40]	; 0x28
   18e00:	cmp	r0, #0
   18e04:	beq	18e28 <argp_failure@@Base+0x2328>
   18e08:	add	r0, r7, lr
   18e0c:	add	r1, r7, sl
   18e10:	add	r0, r8, r0, lsl #2
   18e14:	add	r1, r8, r1, lsl #2
   18e18:	vld1.32	{d16-d17}, [r1]
   18e1c:	vld1.32	{d18-d19}, [r0]
   18e20:	vst1.32	{d16-d17}, [r0]
   18e24:	vst1.32	{d18-d19}, [r1]
   18e28:	ldr	ip, [fp, #16]
   18e2c:	cmp	r4, r3
   18e30:	beq	18c80 <argp_failure@@Base+0x2180>
   18e34:	mvn	r0, r3
   18e38:	tst	r4, #1
   18e3c:	add	r1, r9, r0
   18e40:	beq	18e60 <argp_failure@@Base+0x2360>
   18e44:	add	r0, r3, lr
   18e48:	add	r5, r3, sl
   18e4c:	orr	r3, r3, #1
   18e50:	ldr	r7, [r8, r0, lsl #2]
   18e54:	ldr	r4, [r8, r5, lsl #2]
   18e58:	str	r4, [r8, r0, lsl #2]
   18e5c:	str	r7, [r8, r5, lsl #2]
   18e60:	cmp	r1, lr
   18e64:	beq	18c80 <argp_failure@@Base+0x2180>
   18e68:	ldr	r4, [sp, #60]	; 0x3c
   18e6c:	add	r0, lr, r3
   18e70:	sub	r1, r9, r3
   18e74:	add	r4, r4, r0, lsl #2
   18e78:	add	r0, r2, lr
   18e7c:	ldr	r2, [sp, #44]	; 0x2c
   18e80:	add	r0, r0, r3
   18e84:	add	r2, r2, r0, lsl #2
   18e88:	ldr	r0, [r4, #-4]
   18e8c:	ldr	r3, [r2, #-4]
   18e90:	sub	r1, r1, #2
   18e94:	cmp	lr, r1
   18e98:	str	r3, [r4, #-4]
   18e9c:	str	r0, [r2, #-4]
   18ea0:	ldr	r0, [r4]
   18ea4:	ldr	r3, [r2]
   18ea8:	str	r3, [r4]
   18eac:	str	r0, [r2]
   18eb0:	add	r2, r2, #8
   18eb4:	add	r4, r4, #8
   18eb8:	bne	18e88 <argp_failure@@Base+0x2388>
   18ebc:	b	18c80 <argp_failure@@Base+0x2180>
   18ec0:	mov	r1, #0
   18ec4:	ldr	r3, [sp, #40]	; 0x28
   18ec8:	ldr	ip, [fp, #16]
   18ecc:	cmp	r3, #0
   18ed0:	beq	18ef8 <argp_failure@@Base+0x23f8>
   18ed4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   18ed8:	add	r3, r1, lr
   18edc:	add	r1, r1, r9
   18ee0:	add	r3, r4, r3, lsl #2
   18ee4:	add	r1, r4, r1, lsl #2
   18ee8:	vld1.32	{d16-d17}, [r1]
   18eec:	vld1.32	{d18-d19}, [r3]
   18ef0:	vst1.32	{d16-d17}, [r3]
   18ef4:	vst1.32	{d18-d19}, [r1]
   18ef8:	cmp	r0, sl
   18efc:	beq	18f84 <argp_failure@@Base+0x2484>
   18f00:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18f04:	tst	r0, #1
   18f08:	mov	r4, sl
   18f0c:	add	r1, r2, r1
   18f10:	beq	18f34 <argp_failure@@Base+0x2434>
   18f14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18f18:	add	r7, sl, r9
   18f1c:	add	r4, sl, lr
   18f20:	ldr	r5, [r3, r7, lsl #2]
   18f24:	ldr	r8, [r3, r4, lsl #2]
   18f28:	str	r5, [r3, r4, lsl #2]
   18f2c:	orr	r4, sl, #1
   18f30:	str	r8, [r3, r7, lsl #2]
   18f34:	cmp	r1, sl
   18f38:	beq	18f84 <argp_failure@@Base+0x2484>
   18f3c:	ldr	r3, [sp, #60]	; 0x3c
   18f40:	add	r1, lr, r4
   18f44:	add	r4, r9, r4
   18f48:	add	r1, r3, r1, lsl #2
   18f4c:	add	r3, r3, r4, lsl #2
   18f50:	sub	r4, r4, r2
   18f54:	ldr	r7, [r1, #-4]
   18f58:	ldr	r5, [r3, #-4]
   18f5c:	adds	r4, r4, #2
   18f60:	str	r5, [r1, #-4]
   18f64:	str	r7, [r3, #-4]
   18f68:	ldr	r7, [r1]
   18f6c:	ldr	r5, [r3]
   18f70:	str	r5, [r1]
   18f74:	str	r7, [r3]
   18f78:	add	r1, r1, #8
   18f7c:	add	r3, r3, #8
   18f80:	bne	18f54 <argp_failure@@Base+0x2454>
   18f84:	ldr	r8, [fp, #-32]	; 0xffffffe0
   18f88:	add	lr, r0, lr
   18f8c:	b	18c84 <argp_failure@@Base+0x2184>
   18f90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18f94:	ldr	r3, [sp, #52]	; 0x34
   18f98:	ldr	r5, [sp, #56]	; 0x38
   18f9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18fa0:	ldr	r4, [sp, #28]
   18fa4:	add	r0, r0, r6
   18fa8:	mov	r1, r3
   18fac:	sub	r0, r0, r9
   18fb0:	str	r0, [r5]
   18fb4:	mov	r7, r0
   18fb8:	str	r6, [r1]
   18fbc:	cmp	r6, r2
   18fc0:	blt	18fd8 <argp_failure@@Base+0x24d8>
   18fc4:	b	18ff4 <argp_failure@@Base+0x24f4>
   18fc8:	add	r6, r6, #1
   18fcc:	cmp	r2, r6
   18fd0:	str	r6, [ip]
   18fd4:	beq	18ffc <argp_failure@@Base+0x24fc>
   18fd8:	ldr	r0, [r8, r6, lsl #2]
   18fdc:	ldrb	r1, [r0]
   18fe0:	cmp	r1, #45	; 0x2d
   18fe4:	bne	18fc8 <argp_failure@@Base+0x24c8>
   18fe8:	ldrb	r0, [r0, #1]
   18fec:	cmp	r0, #0
   18ff0:	beq	18fc8 <argp_failure@@Base+0x24c8>
   18ff4:	mov	r9, r6
   18ff8:	b	19000 <argp_failure@@Base+0x2500>
   18ffc:	mov	r9, r2
   19000:	mov	r6, r9
   19004:	str	r9, [r3]
   19008:	cmp	r6, r2
   1900c:	beq	194b4 <argp_failure@@Base+0x29b4>
   19010:	mov	sl, r4
   19014:	movw	r4, #49404	; 0xc0fc
   19018:	ldr	r0, [r8, r6, lsl #2]
   1901c:	str	r5, [sp, #56]	; 0x38
   19020:	str	r7, [fp, #-40]	; 0xffffffd8
   19024:	str	r3, [sp, #52]	; 0x34
   19028:	str	r2, [fp, #-36]	; 0xffffffdc
   1902c:	movt	r4, #1
   19030:	mov	r1, r4
   19034:	bl	11330 <strcmp@plt>
   19038:	cmp	r0, #0
   1903c:	beq	190c0 <argp_failure@@Base+0x25c0>
   19040:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19044:	ldr	ip, [fp, #16]
   19048:	ldr	r7, [fp, #-40]	; 0xffffffd8
   1904c:	cmp	r6, r2
   19050:	beq	194b4 <argp_failure@@Base+0x29b4>
   19054:	ldr	r5, [r8, r6, lsl #2]
   19058:	mov	r3, r4
   1905c:	mvn	r4, #0
   19060:	ldrb	r0, [r5]
   19064:	cmp	r0, #45	; 0x2d
   19068:	bne	190f8 <argp_failure@@Base+0x25f8>
   1906c:	mov	r7, r5
   19070:	ldrb	r1, [r7, #1]!
   19074:	cmp	r1, #0
   19078:	beq	190f8 <argp_failure@@Base+0x25f8>
   1907c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   19080:	cmp	r0, #0
   19084:	beq	19618 <argp_failure@@Base+0x2b18>
   19088:	ldr	r9, [fp, #12]
   1908c:	cmp	r1, #45	; 0x2d
   19090:	bne	1957c <argp_failure@@Base+0x2a7c>
   19094:	add	r0, r5, #2
   19098:	mov	r1, r8
   1909c:	str	r0, [ip, #20]
   190a0:	ldr	r0, [fp, #8]
   190a4:	stm	sp, {r0, r9, ip}
   190a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   190ac:	str	r3, [sp, #16]
   190b0:	str	r0, [sp, #12]
   190b4:	mov	r0, r2
   190b8:	ldr	r2, [sp, #48]	; 0x30
   190bc:	b	1956c <argp_failure@@Base+0x2a6c>
   190c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190c4:	ldr	ip, [fp, #16]
   190c8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   190cc:	add	r2, r6, #1
   190d0:	cmp	r0, r9
   190d4:	str	r2, [ip]
   190d8:	cmpne	r9, r2
   190dc:	bne	19128 <argp_failure@@Base+0x2628>
   190e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190e4:	ldr	r1, [sp, #56]	; 0x38
   190e8:	cmp	r0, r9
   190ec:	mov	r0, r2
   190f0:	beq	1949c <argp_failure@@Base+0x299c>
   190f4:	b	194a4 <argp_failure@@Base+0x29a4>
   190f8:	cmp	sl, #0
   190fc:	addne	r0, r6, #1
   19100:	strne	r5, [ip, #12]
   19104:	movne	r4, #1
   19108:	strne	r0, [ip]
   1910c:	b	194c0 <argp_failure@@Base+0x29c0>
   19110:	cmp	r1, #0
   19114:	beq	194d4 <argp_failure@@Base+0x29d4>
   19118:	add	r0, r6, #1
   1911c:	str	r8, [r7, #12]
   19120:	str	r0, [r7]
   19124:	b	195f4 <argp_failure@@Base+0x2af4>
   19128:	cmp	r6, r9
   1912c:	str	r2, [sp, #48]	; 0x30
   19130:	blt	1947c <argp_failure@@Base+0x297c>
   19134:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19138:	cmp	r0, r9
   1913c:	bge	1947c <argp_failure@@Base+0x297c>
   19140:	add	r0, r8, r9, lsl #2
   19144:	ldr	ip, [fp, #-40]	; 0xffffffd8
   19148:	str	r0, [fp, #-44]	; 0xffffffd4
   1914c:	sub	r0, r8, r9, lsl #2
   19150:	str	r0, [sp, #44]	; 0x2c
   19154:	rsb	r0, r9, #1
   19158:	add	r0, r8, r0, lsl #2
   1915c:	str	r0, [fp, #-56]	; 0xffffffc8
   19160:	mvn	r0, r9
   19164:	str	r0, [fp, #-48]	; 0xffffffd0
   19168:	add	r0, r8, r0, lsl #2
   1916c:	add	r0, r0, #4
   19170:	str	r0, [sp, #40]	; 0x28
   19174:	add	r0, r8, #4
   19178:	str	r0, [fp, #-52]	; 0xffffffcc
   1917c:	ldr	r0, [sp, #48]	; 0x30
   19180:	b	19194 <argp_failure@@Base+0x2694>
   19184:	mov	r0, r3
   19188:	cmp	r0, r9
   1918c:	cmpgt	r9, ip
   19190:	ble	1947c <argp_failure@@Base+0x297c>
   19194:	sub	r4, r9, ip
   19198:	sub	sl, r0, r9
   1919c:	cmp	sl, r4
   191a0:	ble	1924c <argp_failure@@Base+0x274c>
   191a4:	sub	r3, r0, r4
   191a8:	cmp	r4, #1
   191ac:	blt	19184 <argp_failure@@Base+0x2684>
   191b0:	mov	r1, #0
   191b4:	cmp	r4, #4
   191b8:	bcc	1932c <argp_failure@@Base+0x282c>
   191bc:	add	r2, r8, r0, lsl #2
   191c0:	add	r7, r8, ip, lsl #2
   191c4:	cmp	r7, r2
   191c8:	bcs	191dc <argp_failure@@Base+0x26dc>
   191cc:	ldr	r5, [fp, #-44]	; 0xffffffd4
   191d0:	add	r2, r8, r3, lsl #2
   191d4:	cmp	r2, r5
   191d8:	bcc	1932c <argp_failure@@Base+0x282c>
   191dc:	bic	r1, r4, #3
   191e0:	mov	r6, #1
   191e4:	subs	r2, r1, #4
   191e8:	add	r2, r6, r2, lsr #2
   191ec:	and	r6, r2, #1
   191f0:	str	r6, [sp, #60]	; 0x3c
   191f4:	beq	192ec <argp_failure@@Base+0x27ec>
   191f8:	ldr	r5, [sp, #40]	; 0x28
   191fc:	sub	r2, r6, r2
   19200:	add	r6, ip, r0
   19204:	add	lr, r5, r6, lsl #2
   19208:	mov	r5, #0
   1920c:	mov	r6, #0
   19210:	add	sl, r7, r5
   19214:	add	r8, lr, r5
   19218:	adds	r2, r2, #2
   1921c:	add	r5, r5, #32
   19220:	add	r6, r6, #8
   19224:	vld1.32	{d16-d17}, [r8]
   19228:	vld1.32	{d18-d19}, [sl]
   1922c:	vst1.32	{d16-d17}, [sl]!
   19230:	vst1.32	{d18-d19}, [r8]!
   19234:	vld1.32	{d16-d17}, [r8]
   19238:	vld1.32	{d18-d19}, [sl]
   1923c:	vst1.32	{d16-d17}, [sl]
   19240:	vst1.32	{d18-d19}, [r8]
   19244:	bne	19210 <argp_failure@@Base+0x2710>
   19248:	b	192f0 <argp_failure@@Base+0x27f0>
   1924c:	cmp	sl, #1
   19250:	blt	19474 <argp_failure@@Base+0x2974>
   19254:	mov	r1, #0
   19258:	cmp	sl, #3
   1925c:	bls	193f4 <argp_failure@@Base+0x28f4>
   19260:	add	r2, r8, r0, lsl #2
   19264:	add	r7, r8, ip, lsl #2
   19268:	cmp	r7, r2
   1926c:	bcs	19288 <argp_failure@@Base+0x2788>
   19270:	ldr	r3, [sp, #44]	; 0x2c
   19274:	add	r2, ip, r0
   19278:	add	r2, r3, r2, lsl #2
   1927c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19280:	cmp	r3, r2
   19284:	bcc	193f4 <argp_failure@@Base+0x28f4>
   19288:	bic	r1, sl, #3
   1928c:	mov	r3, #1
   19290:	subs	r2, r1, #4
   19294:	add	r2, r3, r2, lsr #2
   19298:	and	r3, r2, #1
   1929c:	str	r3, [sp, #60]	; 0x3c
   192a0:	beq	193b8 <argp_failure@@Base+0x28b8>
   192a4:	ldr	r5, [fp, #-44]	; 0xffffffd4
   192a8:	sub	r6, r3, r2
   192ac:	mov	r4, #0
   192b0:	mov	lr, #32
   192b4:	mov	r2, r5
   192b8:	mov	r3, r7
   192bc:	adds	r6, r6, #2
   192c0:	add	r4, r4, #8
   192c4:	vld1.32	{d16-d17}, [r2]!
   192c8:	vld1.32	{d18-d19}, [r3]!
   192cc:	vst1.32	{d16-d17}, [r7], lr
   192d0:	vst1.32	{d18-d19}, [r5], lr
   192d4:	vld1.32	{d16-d17}, [r2]
   192d8:	vld1.32	{d18-d19}, [r3]
   192dc:	vst1.32	{d16-d17}, [r3]
   192e0:	vst1.32	{d18-d19}, [r2]
   192e4:	bne	192b4 <argp_failure@@Base+0x27b4>
   192e8:	b	193bc <argp_failure@@Base+0x28bc>
   192ec:	mov	r6, #0
   192f0:	ldr	r2, [sp, #60]	; 0x3c
   192f4:	ldr	r8, [fp, #-32]	; 0xffffffe0
   192f8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   192fc:	cmp	r2, #0
   19300:	beq	19324 <argp_failure@@Base+0x2824>
   19304:	add	r2, r6, ip
   19308:	add	r7, r6, r3
   1930c:	add	r2, r8, r2, lsl #2
   19310:	add	r7, r8, r7, lsl #2
   19314:	vld1.32	{d16-d17}, [r7]
   19318:	vld1.32	{d18-d19}, [r2]
   1931c:	vst1.32	{d16-d17}, [r2]
   19320:	vst1.32	{d18-d19}, [r7]
   19324:	cmp	r4, r1
   19328:	beq	19184 <argp_failure@@Base+0x2684>
   1932c:	mvn	r2, r1
   19330:	tst	r4, #1
   19334:	add	r2, r9, r2
   19338:	beq	19358 <argp_failure@@Base+0x2858>
   1933c:	add	r7, r1, ip
   19340:	add	r5, r1, r3
   19344:	orr	r1, r1, #1
   19348:	ldr	r6, [r8, r7, lsl #2]
   1934c:	ldr	r4, [r8, r5, lsl #2]
   19350:	str	r4, [r8, r7, lsl #2]
   19354:	str	r6, [r8, r5, lsl #2]
   19358:	cmp	r2, ip
   1935c:	beq	19184 <argp_failure@@Base+0x2684>
   19360:	add	r0, ip, r0
   19364:	sub	r2, r9, r1
   19368:	add	r7, ip, r1
   1936c:	ldr	r4, [fp, #-52]	; 0xffffffcc
   19370:	add	r0, r0, r1
   19374:	ldr	r1, [fp, #-56]	; 0xffffffc8
   19378:	add	r7, r4, r7, lsl #2
   1937c:	add	r0, r1, r0, lsl #2
   19380:	ldr	r1, [r7, #-4]
   19384:	ldr	r6, [r0, #-4]
   19388:	sub	r2, r2, #2
   1938c:	cmp	ip, r2
   19390:	str	r6, [r7, #-4]
   19394:	str	r1, [r0, #-4]
   19398:	ldr	r1, [r7]
   1939c:	ldr	r6, [r0]
   193a0:	str	r6, [r7]
   193a4:	str	r1, [r0]
   193a8:	add	r0, r0, #8
   193ac:	add	r7, r7, #8
   193b0:	bne	19380 <argp_failure@@Base+0x2880>
   193b4:	b	19184 <argp_failure@@Base+0x2684>
   193b8:	mov	r4, #0
   193bc:	ldr	r2, [sp, #60]	; 0x3c
   193c0:	cmp	r2, #0
   193c4:	beq	193e8 <argp_failure@@Base+0x28e8>
   193c8:	add	r2, r4, ip
   193cc:	add	r3, r4, r9
   193d0:	add	r2, r8, r2, lsl #2
   193d4:	add	r3, r8, r3, lsl #2
   193d8:	vld1.32	{d16-d17}, [r3]
   193dc:	vld1.32	{d18-d19}, [r2]
   193e0:	vst1.32	{d16-d17}, [r2]
   193e4:	vst1.32	{d18-d19}, [r3]
   193e8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   193ec:	cmp	sl, r1
   193f0:	beq	19474 <argp_failure@@Base+0x2974>
   193f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   193f8:	tst	sl, #1
   193fc:	mov	r3, r1
   19400:	add	r2, r0, r2
   19404:	beq	19424 <argp_failure@@Base+0x2924>
   19408:	add	r6, r1, r9
   1940c:	add	r3, r1, ip
   19410:	ldr	r5, [r8, r6, lsl #2]
   19414:	ldr	r7, [r8, r3, lsl #2]
   19418:	str	r5, [r8, r3, lsl #2]
   1941c:	orr	r3, r1, #1
   19420:	str	r7, [r8, r6, lsl #2]
   19424:	cmp	r2, r1
   19428:	beq	19474 <argp_failure@@Base+0x2974>
   1942c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19430:	add	r1, ip, r3
   19434:	add	r3, r9, r3
   19438:	add	r1, r2, r1, lsl #2
   1943c:	add	r2, r2, r3, lsl #2
   19440:	sub	r3, r3, r0
   19444:	ldr	r7, [r1, #-4]
   19448:	ldr	r6, [r2, #-4]
   1944c:	adds	r3, r3, #2
   19450:	str	r6, [r1, #-4]
   19454:	str	r7, [r2, #-4]
   19458:	ldr	r7, [r1]
   1945c:	ldr	r6, [r2]
   19460:	str	r6, [r1]
   19464:	str	r7, [r2]
   19468:	add	r1, r1, #8
   1946c:	add	r2, r2, #8
   19470:	bne	19444 <argp_failure@@Base+0x2944>
   19474:	add	ip, sl, ip
   19478:	b	19188 <argp_failure@@Base+0x2688>
   1947c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19480:	ldr	r2, [sp, #48]	; 0x30
   19484:	ldr	r1, [sp, #56]	; 0x38
   19488:	ldr	ip, [fp, #16]
   1948c:	add	r0, r0, r2
   19490:	sub	r0, r0, r9
   19494:	str	r0, [r1]
   19498:	ldr	r1, [sp, #52]	; 0x34
   1949c:	str	r2, [r1]
   194a0:	str	r0, [fp, #-40]	; 0xffffffd8
   194a4:	ldr	r7, [fp, #-40]	; 0xffffffd8
   194a8:	str	lr, [ip]
   194ac:	str	lr, [ip, #32]
   194b0:	mov	r9, lr
   194b4:	cmp	r7, r9
   194b8:	mvn	r4, #0
   194bc:	strne	r7, [ip]
   194c0:	mov	r0, r4
   194c4:	sub	sp, fp, #28
   194c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   194cc:	mov	r0, #1
   194d0:	b	18a9c <argp_failure@@Base+0x1f9c>
   194d4:	cmp	r6, r3
   194d8:	bne	195e0 <argp_failure@@Base+0x2ae0>
   194dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   194e0:	cmp	r0, #0
   194e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   194e8:	bne	1964c <argp_failure@@Base+0x2b4c>
   194ec:	str	r4, [r7, #8]
   194f0:	ldrb	r4, [r9]
   194f4:	cmp	r4, #58	; 0x3a
   194f8:	movwne	r4, #63	; 0x3f
   194fc:	b	195f4 <argp_failure@@Base+0x2af4>
   19500:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19504:	movw	r1, #51312	; 0xc870
   19508:	mov	r3, r4
   1950c:	movt	r1, #1
   19510:	ldr	r2, [r0]
   19514:	movw	r0, #2232	; 0x8b8
   19518:	movt	r0, #3
   1951c:	ldr	r0, [r0]
   19520:	bl	114bc <fprintf@plt>
   19524:	b	18b24 <argp_failure@@Base+0x2024>
   19528:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1952c:	ldr	r8, [r0, r6, lsl #2]
   19530:	ldr	r2, [fp, #8]
   19534:	movw	r1, #51381	; 0xc8b5
   19538:	str	r8, [r7, #12]
   1953c:	mov	r0, #0
   19540:	movt	r1, #1
   19544:	str	r0, [r7, #12]
   19548:	str	r8, [r7, #20]
   1954c:	str	r2, [sp]
   19550:	stmib	sp, {r0, r7}
   19554:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19558:	str	r1, [sp, #16]
   1955c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19560:	mov	r2, r9
   19564:	str	r0, [sp, #12]
   19568:	mov	r0, r3
   1956c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19570:	bl	19670 <argp_failure@@Base+0x2b70>
   19574:	sub	sp, fp, #28
   19578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1957c:	cmp	r9, #0
   19580:	beq	19618 <argp_failure@@Base+0x2b18>
   19584:	ldrb	r0, [r5, #2]
   19588:	cmp	r0, #0
   1958c:	beq	19600 <argp_failure@@Base+0x2b00>
   19590:	ldr	r1, [fp, #8]
   19594:	movw	r0, #49405	; 0xc0fd
   19598:	str	r7, [ip, #20]
   1959c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   195a0:	movt	r0, #1
   195a4:	stm	sp, {r1, r9, ip}
   195a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   195ac:	str	r0, [sp, #16]
   195b0:	mov	r0, r2
   195b4:	ldr	r2, [sp, #48]	; 0x30
   195b8:	str	r1, [sp, #12]
   195bc:	mov	r1, r8
   195c0:	bl	19670 <argp_failure@@Base+0x2b70>
   195c4:	ldr	ip, [fp, #16]
   195c8:	mov	r4, r0
   195cc:	cmn	r0, #1
   195d0:	bne	194c0 <argp_failure@@Base+0x29c0>
   195d4:	ldr	r6, [ip]
   195d8:	ldr	r5, [r8, r6, lsl #2]
   195dc:	b	19618 <argp_failure@@Base+0x2b18>
   195e0:	add	r0, r6, #1
   195e4:	str	r0, [r7]
   195e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   195ec:	ldr	r0, [r0, r6, lsl #2]
   195f0:	str	r0, [r7, #12]
   195f4:	mov	r0, #0
   195f8:	str	r0, [r7, #20]
   195fc:	b	194c0 <argp_failure@@Base+0x29c0>
   19600:	ldr	r0, [sp, #48]	; 0x30
   19604:	bl	114b0 <strchr@plt>
   19608:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1960c:	ldr	ip, [fp, #16]
   19610:	cmp	r0, #0
   19614:	beq	19590 <argp_failure@@Base+0x2a90>
   19618:	ldr	r9, [sp, #48]	; 0x30
   1961c:	add	r5, r5, #1
   19620:	str	r5, [ip, #20]
   19624:	b	18ad8 <argp_failure@@Base+0x1fd8>
   19628:	ldr	r2, [r0]
   1962c:	movw	r0, #2232	; 0x8b8
   19630:	movw	r1, #51340	; 0xc88c
   19634:	mov	r3, r4
   19638:	movt	r0, #3
   1963c:	movt	r1, #1
   19640:	ldr	r0, [r0]
   19644:	bl	114bc <fprintf@plt>
   19648:	b	18bd8 <argp_failure@@Base+0x20d8>
   1964c:	ldr	r2, [r0]
   19650:	movw	r0, #2232	; 0x8b8
   19654:	movw	r1, #51340	; 0xc88c
   19658:	mov	r3, r4
   1965c:	movt	r0, #3
   19660:	movt	r1, #1
   19664:	ldr	r0, [r0]
   19668:	bl	114bc <fprintf@plt>
   1966c:	b	194ec <argp_failure@@Base+0x29ec>
   19670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19674:	add	fp, sp, #28
   19678:	sub	sp, sp, #44	; 0x2c
   1967c:	str	r0, [sp, #12]
   19680:	ldr	r0, [fp, #16]
   19684:	ldr	r5, [fp, #8]
   19688:	str	r2, [sp, #16]
   1968c:	str	r1, [sp, #20]
   19690:	ldr	r9, [r0, #20]
   19694:	mov	r6, r9
   19698:	b	196a0 <argp_failure@@Base+0x2ba0>
   1969c:	add	r6, r6, #1
   196a0:	ldrb	r0, [r6]
   196a4:	cmp	r0, #0
   196a8:	cmpne	r0, #61	; 0x3d
   196ac:	bne	1969c <argp_failure@@Base+0x2b9c>
   196b0:	ldr	sl, [r3]
   196b4:	mvn	ip, #0
   196b8:	str	r3, [fp, #-32]	; 0xffffffe0
   196bc:	cmp	sl, #0
   196c0:	beq	198d0 <argp_failure@@Base+0x2dd0>
   196c4:	sub	r4, r6, r9
   196c8:	mov	r8, #0
   196cc:	mov	r5, sl
   196d0:	mov	r7, r3
   196d4:	b	196e8 <argp_failure@@Base+0x2be8>
   196d8:	ldr	r5, [r7, #16]!
   196dc:	add	r8, r8, #1
   196e0:	cmp	r5, #0
   196e4:	beq	1971c <argp_failure@@Base+0x2c1c>
   196e8:	mov	r0, r5
   196ec:	mov	r1, r9
   196f0:	mov	r2, r4
   196f4:	bl	115c4 <strncmp@plt>
   196f8:	cmp	r0, #0
   196fc:	bne	196d8 <argp_failure@@Base+0x2bd8>
   19700:	mov	r0, r5
   19704:	bl	114a4 <strlen@plt>
   19708:	cmp	r4, r0
   1970c:	bne	196d8 <argp_failure@@Base+0x2bd8>
   19710:	ldr	r5, [fp, #8]
   19714:	mov	ip, r8
   19718:	b	19980 <argp_failure@@Base+0x2e80>
   1971c:	cmp	sl, #0
   19720:	beq	198fc <argp_failure@@Base+0x2dfc>
   19724:	mvn	r0, #0
   19728:	str	r4, [sp, #36]	; 0x24
   1972c:	mov	r4, #0
   19730:	mov	r5, #0
   19734:	mov	r7, #0
   19738:	str	r0, [sp, #24]
   1973c:	mov	r0, #0
   19740:	str	r0, [sp, #32]
   19744:	mov	r0, #0
   19748:	str	r0, [sp, #8]
   1974c:	mov	r0, #0
   19750:	str	r0, [sp, #28]
   19754:	ldr	r2, [sp, #36]	; 0x24
   19758:	mov	r0, sl
   1975c:	mov	r1, r9
   19760:	bl	115c4 <strncmp@plt>
   19764:	cmp	r0, #0
   19768:	beq	1979c <argp_failure@@Base+0x2c9c>
   1976c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19770:	mov	r1, r4
   19774:	add	r0, r3, r5, lsl #4
   19778:	ldr	sl, [r0, #16]
   1977c:	cmp	sl, #0
   19780:	beq	198e8 <argp_failure@@Base+0x2de8>
   19784:	ldr	r0, [fp, #16]
   19788:	add	r1, r1, #16
   1978c:	add	r5, r5, #1
   19790:	mov	r4, r1
   19794:	ldr	r9, [r0, #20]
   19798:	b	19754 <argp_failure@@Base+0x2c54>
   1979c:	cmp	r7, #0
   197a0:	beq	19854 <argp_failure@@Base+0x2d54>
   197a4:	ldr	r0, [fp, #12]
   197a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   197ac:	cmp	r0, #0
   197b0:	bne	197d8 <argp_failure@@Base+0x2cd8>
   197b4:	add	r0, r3, r5, lsl #4
   197b8:	ldr	r2, [r7, #4]
   197bc:	ldr	r1, [r0, #4]
   197c0:	cmp	r2, r1
   197c4:	bne	197d8 <argp_failure@@Base+0x2cd8>
   197c8:	ldr	r1, [r0, #8]
   197cc:	ldr	r2, [r7, #8]
   197d0:	cmp	r2, r1
   197d4:	beq	1988c <argp_failure@@Base+0x2d8c>
   197d8:	ldr	r0, [sp, #32]
   197dc:	mov	r1, r4
   197e0:	cmp	r0, #0
   197e4:	bne	19774 <argp_failure@@Base+0x2c74>
   197e8:	ldr	r0, [fp, #20]
   197ec:	cmp	r0, #0
   197f0:	beq	19868 <argp_failure@@Base+0x2d68>
   197f4:	ldr	r9, [sp, #28]
   197f8:	mov	r0, #0
   197fc:	str	r0, [sp, #32]
   19800:	cmp	r9, #0
   19804:	bne	1987c <argp_failure@@Base+0x2d7c>
   19808:	mov	r0, r8
   1980c:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   19810:	cmp	r0, #0
   19814:	beq	198bc <argp_failure@@Base+0x2dbc>
   19818:	mov	r9, r0
   1981c:	mov	r0, #0
   19820:	mov	r1, #0
   19824:	mov	r2, r8
   19828:	str	r0, [sp, #32]
   1982c:	mov	r0, r9
   19830:	bl	114ec <memset@plt>
   19834:	ldr	r0, [sp, #24]
   19838:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1983c:	mov	r1, #1
   19840:	mov	r2, #1
   19844:	str	r1, [sp, #8]
   19848:	mov	r1, r4
   1984c:	strb	r2, [r9, r0]
   19850:	b	1987c <argp_failure@@Base+0x2d7c>
   19854:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19858:	mov	r1, r4
   1985c:	str	r5, [sp, #24]
   19860:	add	r7, r3, r4
   19864:	b	19774 <argp_failure@@Base+0x2c74>
   19868:	ldr	r9, [sp, #28]
   1986c:	mov	r0, #1
   19870:	str	r0, [sp, #32]
   19874:	cmp	r9, #0
   19878:	beq	198b0 <argp_failure@@Base+0x2db0>
   1987c:	mov	r0, #1
   19880:	str	r9, [sp, #28]
   19884:	strb	r0, [r9, r5]
   19888:	b	19774 <argp_failure@@Base+0x2c74>
   1988c:	ldr	r1, [sp, #32]
   19890:	cmp	r1, #0
   19894:	bne	19770 <argp_failure@@Base+0x2c70>
   19898:	ldr	r0, [r0, #12]
   1989c:	ldr	r1, [r7, #12]
   198a0:	cmp	r1, r0
   198a4:	mov	r1, r4
   198a8:	bne	197e8 <argp_failure@@Base+0x2ce8>
   198ac:	b	19774 <argp_failure@@Base+0x2c74>
   198b0:	mov	r0, #0
   198b4:	str	r0, [sp, #28]
   198b8:	b	19774 <argp_failure@@Base+0x2c74>
   198bc:	mov	r0, #1
   198c0:	str	r0, [sp, #32]
   198c4:	mov	r0, #0
   198c8:	str	r0, [sp, #28]
   198cc:	b	1976c <argp_failure@@Base+0x2c6c>
   198d0:	mov	r0, #0
   198d4:	mov	r8, #0
   198d8:	mov	r7, #0
   198dc:	mov	sl, #0
   198e0:	mov	r4, #0
   198e4:	b	19914 <argp_failure@@Base+0x2e14>
   198e8:	ldr	r5, [fp, #8]
   198ec:	ldr	ip, [sp, #24]
   198f0:	ldr	sl, [sp, #28]
   198f4:	ldr	r4, [sp, #8]
   198f8:	b	19918 <argp_failure@@Base+0x2e18>
   198fc:	ldr	r5, [fp, #8]
   19900:	mov	r0, #0
   19904:	mov	r7, #0
   19908:	mov	sl, #0
   1990c:	mov	r4, #0
   19910:	mvn	ip, #0
   19914:	str	r0, [sp, #32]
   19918:	cmp	sl, #0
   1991c:	ldreq	r0, [sp, #32]
   19920:	cmpeq	r0, #0
   19924:	beq	19978 <argp_failure@@Base+0x2e78>
   19928:	ldr	r0, [fp, #20]
   1992c:	cmp	r0, #0
   19930:	bne	19ae4 <argp_failure@@Base+0x2fe4>
   19934:	cmp	r4, #0
   19938:	beq	19944 <argp_failure@@Base+0x2e44>
   1993c:	mov	r0, sl
   19940:	bl	14240 <argp_parse@@Base+0x12dc>
   19944:	ldr	r0, [fp, #16]
   19948:	ldr	r4, [r0, #20]
   1994c:	mov	r5, r0
   19950:	mov	r0, r4
   19954:	bl	114a4 <strlen@plt>
   19958:	mov	r1, #0
   1995c:	add	r0, r4, r0
   19960:	str	r1, [r5, #8]
   19964:	str	r0, [r5, #20]
   19968:	ldr	r0, [r5]
   1996c:	add	r0, r0, #1
   19970:	str	r0, [r5]
   19974:	b	19aa8 <argp_failure@@Base+0x2fa8>
   19978:	cmp	r7, #0
   1997c:	beq	19a18 <argp_failure@@Base+0x2f18>
   19980:	ldr	r1, [fp, #16]
   19984:	mov	r0, #0
   19988:	str	r0, [r1, #20]
   1998c:	mov	r2, r1
   19990:	ldr	r1, [r1]
   19994:	add	r0, r1, #1
   19998:	str	r0, [r2]
   1999c:	ldrb	r3, [r6]
   199a0:	ldr	r2, [r7, #4]
   199a4:	cmp	r3, #0
   199a8:	beq	199c4 <argp_failure@@Base+0x2ec4>
   199ac:	cmp	r2, #0
   199b0:	beq	19a90 <argp_failure@@Base+0x2f90>
   199b4:	ldr	r1, [fp, #16]
   199b8:	add	r0, r6, #1
   199bc:	str	r0, [r1, #12]
   199c0:	b	199f0 <argp_failure@@Base+0x2ef0>
   199c4:	cmp	r2, #1
   199c8:	bne	199f0 <argp_failure@@Base+0x2ef0>
   199cc:	ldr	r2, [sp, #12]
   199d0:	cmp	r0, r2
   199d4:	bge	19ab4 <argp_failure@@Base+0x2fb4>
   199d8:	ldr	r2, [fp, #16]
   199dc:	add	r1, r1, #2
   199e0:	str	r1, [r2]
   199e4:	ldr	r1, [sp, #20]
   199e8:	ldr	r0, [r1, r0, lsl #2]
   199ec:	str	r0, [r2, #12]
   199f0:	cmp	r5, #0
   199f4:	strne	ip, [r5]
   199f8:	ldr	r1, [r7, #8]
   199fc:	ldr	r0, [r7, #12]
   19a00:	cmp	r1, #0
   19a04:	beq	19adc <argp_failure@@Base+0x2fdc>
   19a08:	str	r0, [r1]
   19a0c:	mov	r0, #0
   19a10:	sub	sp, fp, #28
   19a14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a18:	ldr	r0, [fp, #12]
   19a1c:	cmp	r0, #0
   19a20:	beq	19a64 <argp_failure@@Base+0x2f64>
   19a24:	ldr	r0, [fp, #16]
   19a28:	ldr	r1, [sp, #20]
   19a2c:	ldr	r0, [r0]
   19a30:	ldr	r0, [r1, r0, lsl #2]
   19a34:	ldrb	r0, [r0, #1]
   19a38:	cmp	r0, #45	; 0x2d
   19a3c:	beq	19a64 <argp_failure@@Base+0x2f64>
   19a40:	ldr	r0, [fp, #16]
   19a44:	ldr	r0, [r0, #20]
   19a48:	ldrb	r1, [r0]
   19a4c:	ldr	r0, [sp, #16]
   19a50:	bl	114b0 <strchr@plt>
   19a54:	mov	r1, r0
   19a58:	mvn	r0, #0
   19a5c:	cmp	r1, #0
   19a60:	bne	19adc <argp_failure@@Base+0x2fdc>
   19a64:	ldr	r0, [fp, #20]
   19a68:	cmp	r0, #0
   19a6c:	bne	19bd0 <argp_failure@@Base+0x30d0>
   19a70:	ldr	r1, [fp, #16]
   19a74:	mov	r0, #0
   19a78:	str	r0, [r1, #20]
   19a7c:	str	r0, [r1, #8]
   19a80:	ldr	r0, [r1]
   19a84:	add	r0, r0, #1
   19a88:	str	r0, [r1]
   19a8c:	b	19aa8 <argp_failure@@Base+0x2fa8>
   19a90:	ldr	r0, [fp, #20]
   19a94:	cmp	r0, #0
   19a98:	bne	19c04 <argp_failure@@Base+0x3104>
   19a9c:	ldr	r0, [r7, #12]
   19aa0:	ldr	r1, [fp, #16]
   19aa4:	str	r0, [r1, #8]
   19aa8:	mov	r0, #63	; 0x3f
   19aac:	sub	sp, fp, #28
   19ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ab4:	ldr	r0, [fp, #20]
   19ab8:	cmp	r0, #0
   19abc:	bne	19c34 <argp_failure@@Base+0x3134>
   19ac0:	ldr	r0, [r7, #12]
   19ac4:	ldr	r1, [fp, #16]
   19ac8:	str	r0, [r1, #8]
   19acc:	ldr	r0, [sp, #16]
   19ad0:	ldrb	r0, [r0]
   19ad4:	cmp	r0, #58	; 0x3a
   19ad8:	movwne	r0, #63	; 0x3f
   19adc:	sub	sp, fp, #28
   19ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ae4:	movw	r5, #2232	; 0x8b8
   19ae8:	ldr	r1, [sp, #32]
   19aec:	movt	r5, #3
   19af0:	ldr	r0, [r5]
   19af4:	cmp	r1, #0
   19af8:	beq	19b2c <argp_failure@@Base+0x302c>
   19afc:	ldr	r1, [sp, #20]
   19b00:	ldr	r3, [fp, #24]
   19b04:	ldr	r2, [r1]
   19b08:	ldr	r1, [fp, #16]
   19b0c:	ldr	r1, [r1, #20]
   19b10:	str	r1, [sp]
   19b14:	movw	r1, #51401	; 0xc8c9
   19b18:	movt	r1, #1
   19b1c:	bl	114bc <fprintf@plt>
   19b20:	cmp	r4, #0
   19b24:	bne	1993c <argp_failure@@Base+0x2e3c>
   19b28:	b	19944 <argp_failure@@Base+0x2e44>
   19b2c:	bl	11558 <flockfile@plt>
   19b30:	ldr	r1, [fp, #16]
   19b34:	ldr	r0, [sp, #20]
   19b38:	ldr	r9, [fp, #24]
   19b3c:	ldr	r1, [r1, #20]
   19b40:	ldr	r2, [r0]
   19b44:	ldr	r0, [r5]
   19b48:	mov	r3, r9
   19b4c:	str	r1, [sp]
   19b50:	movw	r1, #51433	; 0xc8e9
   19b54:	movt	r1, #1
   19b58:	bl	114bc <fprintf@plt>
   19b5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19b60:	cmp	r8, #0
   19b64:	beq	19bb0 <argp_failure@@Base+0x30b0>
   19b68:	mov	r6, sl
   19b6c:	ldrb	r0, [r6]
   19b70:	cmp	r0, #0
   19b74:	bne	19b8c <argp_failure@@Base+0x308c>
   19b78:	add	r1, r1, #16
   19b7c:	add	r6, r6, #1
   19b80:	subs	r8, r8, #1
   19b84:	bne	19b6c <argp_failure@@Base+0x306c>
   19b88:	b	19bb0 <argp_failure@@Base+0x30b0>
   19b8c:	ldr	r3, [r1]
   19b90:	ldr	r0, [r5]
   19b94:	mov	r7, r1
   19b98:	movw	r1, #51480	; 0xc918
   19b9c:	mov	r2, r9
   19ba0:	movt	r1, #1
   19ba4:	bl	114bc <fprintf@plt>
   19ba8:	mov	r1, r7
   19bac:	b	19b78 <argp_failure@@Base+0x3078>
   19bb0:	ldr	r1, [r5]
   19bb4:	mov	r0, #10
   19bb8:	bl	11534 <fputc@plt>
   19bbc:	ldr	r0, [r5]
   19bc0:	bl	113f0 <funlockfile@plt>
   19bc4:	cmp	r4, #0
   19bc8:	bne	1993c <argp_failure@@Base+0x2e3c>
   19bcc:	b	19944 <argp_failure@@Base+0x2e44>
   19bd0:	ldr	r1, [fp, #16]
   19bd4:	ldr	r0, [sp, #20]
   19bd8:	ldr	r3, [fp, #24]
   19bdc:	ldr	r2, [r0]
   19be0:	movw	r0, #2232	; 0x8b8
   19be4:	ldr	r1, [r1, #20]
   19be8:	movt	r0, #3
   19bec:	ldr	r0, [r0]
   19bf0:	str	r1, [sp]
   19bf4:	movw	r1, #51488	; 0xc920
   19bf8:	movt	r1, #1
   19bfc:	bl	114bc <fprintf@plt>
   19c00:	b	19a70 <argp_failure@@Base+0x2f70>
   19c04:	ldr	r0, [sp, #20]
   19c08:	ldr	r1, [r7]
   19c0c:	ldr	r3, [fp, #24]
   19c10:	ldr	r2, [r0]
   19c14:	movw	r0, #2232	; 0x8b8
   19c18:	str	r1, [sp]
   19c1c:	movw	r1, #51520	; 0xc940
   19c20:	movt	r0, #3
   19c24:	movt	r1, #1
   19c28:	ldr	r0, [r0]
   19c2c:	bl	114bc <fprintf@plt>
   19c30:	b	19a9c <argp_failure@@Base+0x2f9c>
   19c34:	ldr	r0, [sp, #20]
   19c38:	ldr	r1, [r7]
   19c3c:	ldr	r3, [fp, #24]
   19c40:	ldr	r2, [r0]
   19c44:	movw	r0, #2232	; 0x8b8
   19c48:	str	r1, [sp]
   19c4c:	movw	r1, #51565	; 0xc96d
   19c50:	movt	r0, #3
   19c54:	movt	r1, #1
   19c58:	ldr	r0, [r0]
   19c5c:	bl	114bc <fprintf@plt>
   19c60:	b	19ac0 <argp_failure@@Base+0x2fc0>
   19c64:	push	{r4, r5, r6, r7, fp, lr}
   19c68:	add	fp, sp, #16
   19c6c:	sub	sp, sp, #16
   19c70:	movw	r7, #2204	; 0x89c
   19c74:	movw	r6, #2280	; 0x8e8
   19c78:	movw	r5, #2208	; 0x8a0
   19c7c:	movt	r7, #3
   19c80:	movt	r5, #3
   19c84:	movt	r6, #3
   19c88:	ldr	r4, [r7]
   19c8c:	ldr	r5, [r5]
   19c90:	str	r6, [sp, #8]
   19c94:	stm	r6, {r4, r5}
   19c98:	ldr	r5, [fp, #16]
   19c9c:	str	r5, [sp, #12]
   19ca0:	ldr	r5, [fp, #12]
   19ca4:	str	r5, [sp, #4]
   19ca8:	ldr	r5, [fp, #8]
   19cac:	str	r5, [sp]
   19cb0:	bl	189c8 <argp_failure@@Base+0x1ec8>
   19cb4:	ldr	r1, [r6]
   19cb8:	ldr	r3, [r6, #12]
   19cbc:	ldr	r2, [r6, #8]
   19cc0:	str	r1, [r7]
   19cc4:	movw	r1, #2372	; 0x944
   19cc8:	movt	r1, #3
   19ccc:	str	r3, [r1]
   19cd0:	movw	r1, #2212	; 0x8a4
   19cd4:	movt	r1, #3
   19cd8:	str	r2, [r1]
   19cdc:	sub	sp, fp, #16
   19ce0:	pop	{r4, r5, r6, r7, fp, pc}
   19ce4:	push	{r4, r5, r6, sl, fp, lr}
   19ce8:	add	fp, sp, #16
   19cec:	sub	sp, sp, #16
   19cf0:	movw	r6, #2204	; 0x89c
   19cf4:	movw	r5, #2280	; 0x8e8
   19cf8:	movw	r4, #2208	; 0x8a0
   19cfc:	movt	r6, #3
   19d00:	movt	r4, #3
   19d04:	movt	r5, #3
   19d08:	ldr	r3, [r6]
   19d0c:	ldr	r4, [r4]
   19d10:	stm	r5, {r3, r4}
   19d14:	mov	r4, #0
   19d18:	mov	r3, #1
   19d1c:	str	r4, [sp]
   19d20:	stmib	sp, {r4, r5}
   19d24:	str	r3, [sp, #12]
   19d28:	mov	r3, #0
   19d2c:	bl	189c8 <argp_failure@@Base+0x1ec8>
   19d30:	ldr	r1, [r5]
   19d34:	ldr	r3, [r5, #12]
   19d38:	ldr	r2, [r5, #8]
   19d3c:	str	r1, [r6]
   19d40:	movw	r1, #2372	; 0x944
   19d44:	movt	r1, #3
   19d48:	str	r3, [r1]
   19d4c:	movw	r1, #2212	; 0x8a4
   19d50:	movt	r1, #3
   19d54:	str	r2, [r1]
   19d58:	sub	sp, fp, #16
   19d5c:	pop	{r4, r5, r6, sl, fp, pc}
   19d60:	cmp	r2, #0
   19d64:	beq	19d94 <argp_failure@@Base+0x3294>
   19d68:	mvn	r3, #0
   19d6c:	udiv	r3, r3, r2
   19d70:	cmp	r3, r1
   19d74:	bcs	19d94 <argp_failure@@Base+0x3294>
   19d78:	push	{fp, lr}
   19d7c:	mov	fp, sp
   19d80:	bl	114c8 <__errno_location@plt>
   19d84:	mov	r1, #12
   19d88:	str	r1, [r0]
   19d8c:	mov	r0, #0
   19d90:	pop	{fp, pc}
   19d94:	mul	r1, r2, r1
   19d98:	b	1536c <_obstack_memory_used@@Base+0xcb8>
   19d9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   19da0:	add	fp, sp, #24
   19da4:	mov	r7, r0
   19da8:	mov	r0, #36	; 0x24
   19dac:	mov	r8, r3
   19db0:	mov	r9, r2
   19db4:	mov	r6, r1
   19db8:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   19dbc:	cmp	r0, #0
   19dc0:	beq	19e08 <argp_failure@@Base+0x3308>
   19dc4:	mov	r5, #0
   19dc8:	str	r7, [r0]
   19dcc:	stmib	r0, {r6, r9}
   19dd0:	str	r8, [r0, #12]
   19dd4:	mov	r4, r0
   19dd8:	str	r5, [r0, #16]
   19ddc:	str	r5, [r0, #20]
   19de0:	mov	r0, #200	; 0xc8
   19de4:	bl	1533c <_obstack_memory_used@@Base+0xc88>
   19de8:	cmp	r0, #0
   19dec:	str	r0, [r4, #24]
   19df0:	beq	19e14 <argp_failure@@Base+0x3314>
   19df4:	add	r1, r0, #200	; 0xc8
   19df8:	str	r0, [r4, #28]
   19dfc:	mov	r0, r4
   19e00:	str	r1, [r4, #32]
   19e04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19e08:	mov	r5, #0
   19e0c:	mov	r0, r5
   19e10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19e14:	mov	r0, r4
   19e18:	bl	14240 <argp_parse@@Base+0x12dc>
   19e1c:	mov	r0, r5
   19e20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   19e24:	push	{r4, sl, fp, lr}
   19e28:	add	fp, sp, #8
   19e2c:	mov	r4, r0
   19e30:	bl	19e68 <argp_failure@@Base+0x3368>
   19e34:	ldr	r0, [r4, #24]
   19e38:	ldr	r1, [r4, #28]
   19e3c:	cmp	r1, r0
   19e40:	bls	19e54 <argp_failure@@Base+0x3354>
   19e44:	ldr	r3, [r4]
   19e48:	sub	r2, r1, r0
   19e4c:	mov	r1, #1
   19e50:	bl	113c0 <fwrite_unlocked@plt>
   19e54:	ldr	r0, [r4, #24]
   19e58:	bl	14240 <argp_parse@@Base+0x12dc>
   19e5c:	mov	r0, r4
   19e60:	pop	{r4, sl, fp, lr}
   19e64:	b	14240 <argp_parse@@Base+0x12dc>
   19e68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e6c:	add	fp, sp, #28
   19e70:	sub	sp, sp, #12
   19e74:	mov	sl, r0
   19e78:	ldr	r0, [r0, #16]
   19e7c:	ldr	r1, [sl, #24]
   19e80:	ldr	r8, [sl, #28]
   19e84:	add	r5, r1, r0
   19e88:	cmp	r5, r8
   19e8c:	bcs	1a384 <argp_failure@@Base+0x3884>
   19e90:	ldr	r7, [sl, #20]
   19e94:	mov	r3, #32
   19e98:	cmp	r7, #0
   19e9c:	bne	19ed4 <argp_failure@@Base+0x33d4>
   19ea0:	b	19edc <argp_failure@@Base+0x33dc>
   19ea4:	ldr	r0, [sp, #8]
   19ea8:	cmp	r7, #0
   19eac:	mvneq	r7, #0
   19eb0:	str	r7, [sl, #20]
   19eb4:	sub	r0, r0, r6
   19eb8:	add	r0, r0, r9
   19ebc:	add	r8, r5, r0
   19ec0:	str	r8, [sl, #28]
   19ec4:	cmp	r5, r8
   19ec8:	bcs	1a384 <argp_failure@@Base+0x3884>
   19ecc:	cmp	r7, #0
   19ed0:	beq	19edc <argp_failure@@Base+0x33dc>
   19ed4:	mov	r9, r5
   19ed8:	b	19f7c <argp_failure@@Base+0x347c>
   19edc:	ldr	r7, [sl, #4]
   19ee0:	cmp	r7, #0
   19ee4:	beq	1a0ac <argp_failure@@Base+0x35ac>
   19ee8:	ldr	r1, [sl, #32]
   19eec:	add	r0, r8, r7
   19ef0:	mov	r4, r7
   19ef4:	cmp	r0, r1
   19ef8:	bcs	19f30 <argp_failure@@Base+0x3430>
   19efc:	add	r9, r5, r7
   19f00:	sub	r2, r8, r5
   19f04:	mov	r1, r5
   19f08:	mov	r0, r9
   19f0c:	bl	11354 <memmove@plt>
   19f10:	ldr	r0, [sl, #28]
   19f14:	mov	r1, #32
   19f18:	mov	r2, r7
   19f1c:	add	r0, r0, r7
   19f20:	str	r0, [sl, #28]
   19f24:	mov	r0, r5
   19f28:	bl	114ec <memset@plt>
   19f2c:	b	19f74 <argp_failure@@Base+0x3474>
   19f30:	ldr	r0, [sl]
   19f34:	ldr	r1, [r0, #20]
   19f38:	ldr	r2, [r0, #24]
   19f3c:	cmp	r1, r2
   19f40:	bcs	19f5c <argp_failure@@Base+0x345c>
   19f44:	add	r2, r1, #1
   19f48:	str	r2, [r0, #20]
   19f4c:	strb	r3, [r1]
   19f50:	subs	r4, r4, #1
   19f54:	bne	19f30 <argp_failure@@Base+0x3430>
   19f58:	b	19f70 <argp_failure@@Base+0x3470>
   19f5c:	mov	r1, #32
   19f60:	bl	11510 <__overflow@plt>
   19f64:	mov	r3, #32
   19f68:	subs	r4, r4, #1
   19f6c:	bne	19f30 <argp_failure@@Base+0x3430>
   19f70:	mov	r9, r5
   19f74:	str	r7, [sl, #20]
   19f78:	ldr	r8, [sl, #28]
   19f7c:	sub	r6, r8, r9
   19f80:	mov	r0, r9
   19f84:	mov	r1, #10
   19f88:	mov	r2, r6
   19f8c:	bl	11504 <memchr@plt>
   19f90:	cmn	r7, #1
   19f94:	mov	r4, r0
   19f98:	movle	r7, #0
   19f9c:	strle	r7, [sl, #20]
   19fa0:	cmp	r4, #0
   19fa4:	beq	19fd8 <argp_failure@@Base+0x34d8>
   19fa8:	ldr	r5, [sl, #8]
   19fac:	sub	r0, r4, r9
   19fb0:	mov	r3, #32
   19fb4:	add	r0, r0, r7
   19fb8:	cmp	r0, r5
   19fbc:	bge	19fec <argp_failure@@Base+0x34ec>
   19fc0:	mov	r7, #0
   19fc4:	add	r5, r4, #1
   19fc8:	str	r7, [sl, #20]
   19fcc:	cmp	r5, r8
   19fd0:	bcc	19ecc <argp_failure@@Base+0x33cc>
   19fd4:	b	1a384 <argp_failure@@Base+0x3884>
   19fd8:	ldr	r5, [sl, #8]
   19fdc:	add	r0, r7, r6
   19fe0:	mov	r4, r8
   19fe4:	cmp	r0, r5
   19fe8:	bcc	1a368 <argp_failure@@Base+0x3868>
   19fec:	ldr	r0, [sl, #12]
   19ff0:	cmn	r0, #1
   19ff4:	str	r0, [sp, #4]
   19ff8:	ble	1a048 <argp_failure@@Base+0x3548>
   19ffc:	subs	r0, r5, r7
   1a000:	mov	r1, #0
   1a004:	str	r6, [sp, #8]
   1a008:	add	r5, r9, r0
   1a00c:	bmi	1a0a4 <argp_failure@@Base+0x35a4>
   1a010:	str	r0, [sp]
   1a014:	bl	11480 <__ctype_b_loc@plt>
   1a018:	ldr	r0, [r0]
   1a01c:	mov	r7, r5
   1a020:	ldrb	r1, [r7]
   1a024:	ldrb	r1, [r0, r1, lsl #1]
   1a028:	tst	r1, #1
   1a02c:	bne	1a0b4 <argp_failure@@Base+0x35b4>
   1a030:	sub	r7, r7, #1
   1a034:	cmp	r7, r9
   1a038:	bcs	1a020 <argp_failure@@Base+0x3520>
   1a03c:	ldr	r0, [sp]
   1a040:	mov	r1, #0
   1a044:	b	1a0bc <argp_failure@@Base+0x35bc>
   1a048:	mov	r0, r6
   1a04c:	sub	r6, r5, #1
   1a050:	cmp	r4, r8
   1a054:	bcs	1a370 <argp_failure@@Base+0x3870>
   1a058:	sub	r0, r6, r7
   1a05c:	sub	r2, r8, r4
   1a060:	mov	r1, r4
   1a064:	add	r0, r9, r0
   1a068:	bl	11354 <memmove@plt>
   1a06c:	ldr	r0, [sl, #20]
   1a070:	ldr	r1, [sl, #28]
   1a074:	mov	r7, #0
   1a078:	mov	r3, #32
   1a07c:	add	r5, r9, r5
   1a080:	str	r7, [sl, #20]
   1a084:	sub	r0, r6, r0
   1a088:	add	r0, r9, r0
   1a08c:	sub	r0, r4, r0
   1a090:	add	r8, r1, r0
   1a094:	str	r8, [sl, #28]
   1a098:	cmp	r5, r8
   1a09c:	bcc	19ecc <argp_failure@@Base+0x33cc>
   1a0a0:	b	1a384 <argp_failure@@Base+0x3884>
   1a0a4:	mov	r7, r5
   1a0a8:	b	1a0bc <argp_failure@@Base+0x35bc>
   1a0ac:	mov	r7, #0
   1a0b0:	b	19ed4 <argp_failure@@Base+0x33d4>
   1a0b4:	ldr	r0, [sp]
   1a0b8:	mov	r1, #1
   1a0bc:	add	r6, r7, #1
   1a0c0:	cmp	r6, r9
   1a0c4:	bls	1a104 <argp_failure@@Base+0x3604>
   1a0c8:	cmp	r1, #0
   1a0cc:	beq	1a168 <argp_failure@@Base+0x3668>
   1a0d0:	ldr	r4, [sp, #4]
   1a0d4:	sub	r1, r7, #1
   1a0d8:	mov	r7, r1
   1a0dc:	cmp	r1, r9
   1a0e0:	bcc	1a16c <argp_failure@@Base+0x366c>
   1a0e4:	bl	11480 <__ctype_b_loc@plt>
   1a0e8:	mov	r1, r7
   1a0ec:	ldr	r0, [r0]
   1a0f0:	ldrb	r2, [r1], #-1
   1a0f4:	ldrb	r0, [r0, r2, lsl #1]
   1a0f8:	tst	r0, #1
   1a0fc:	bne	1a0d8 <argp_failure@@Base+0x35d8>
   1a100:	b	1a16c <argp_failure@@Base+0x366c>
   1a104:	cmp	r5, r4
   1a108:	bcs	1a13c <argp_failure@@Base+0x363c>
   1a10c:	add	r0, r9, r0
   1a110:	add	r1, r0, #1
   1a114:	mov	r5, r1
   1a118:	cmp	r1, r4
   1a11c:	bcs	1a13c <argp_failure@@Base+0x363c>
   1a120:	bl	11480 <__ctype_b_loc@plt>
   1a124:	mov	r1, r5
   1a128:	ldr	r0, [r0]
   1a12c:	ldrb	r2, [r1], #1
   1a130:	ldrb	r0, [r0, r2, lsl #1]
   1a134:	tst	r0, #1
   1a138:	beq	1a114 <argp_failure@@Base+0x3614>
   1a13c:	cmp	r5, r4
   1a140:	beq	1a33c <argp_failure@@Base+0x383c>
   1a144:	bl	11480 <__ctype_b_loc@plt>
   1a148:	ldr	r0, [r0]
   1a14c:	mov	r6, r5
   1a150:	ldrb	r1, [r6, #1]!
   1a154:	ldrb	r1, [r0, r1, lsl #1]
   1a158:	tst	r1, #1
   1a15c:	bne	1a150 <argp_failure@@Base+0x3650>
   1a160:	ldr	r4, [sp, #4]
   1a164:	b	1a170 <argp_failure@@Base+0x3670>
   1a168:	ldr	r4, [sp, #4]
   1a16c:	add	r5, r7, #1
   1a170:	mov	r3, #32
   1a174:	add	r0, r8, #1
   1a178:	cmp	r6, r0
   1a17c:	beq	1a1a0 <argp_failure@@Base+0x36a0>
   1a180:	cmp	r8, r6
   1a184:	bls	1a208 <argp_failure@@Base+0x3708>
   1a188:	mvn	r0, r5
   1a18c:	add	r0, r0, r6
   1a190:	cmp	r0, r4
   1a194:	bge	1a208 <argp_failure@@Base+0x3708>
   1a198:	ldr	r0, [sl, #32]
   1a19c:	b	1a1b8 <argp_failure@@Base+0x36b8>
   1a1a0:	cmp	r8, r6
   1a1a4:	bls	1a208 <argp_failure@@Base+0x3708>
   1a1a8:	ldr	r0, [sl, #32]
   1a1ac:	sub	r1, r0, r5
   1a1b0:	cmp	r1, r4
   1a1b4:	bgt	1a208 <argp_failure@@Base+0x3708>
   1a1b8:	sub	r0, r0, r8
   1a1bc:	add	r1, r4, #1
   1a1c0:	cmp	r0, r1
   1a1c4:	ble	1a214 <argp_failure@@Base+0x3714>
   1a1c8:	mov	r0, r4
   1a1cc:	sub	r4, r8, r6
   1a1d0:	add	r7, r5, #1
   1a1d4:	mov	r1, r6
   1a1d8:	add	r0, r7, r0
   1a1dc:	mov	r2, r4
   1a1e0:	bl	11354 <memmove@plt>
   1a1e4:	ldr	r0, [sl, #12]
   1a1e8:	mov	r1, #10
   1a1ec:	mov	r3, #32
   1a1f0:	strb	r1, [r5]
   1a1f4:	mov	r5, r7
   1a1f8:	add	r6, r7, r0
   1a1fc:	add	r0, r6, r4
   1a200:	sub	r0, r0, r9
   1a204:	b	1a264 <argp_failure@@Base+0x3764>
   1a208:	mov	r0, #10
   1a20c:	strb	r0, [r5], #1
   1a210:	b	1a268 <argp_failure@@Base+0x3768>
   1a214:	ldr	r0, [sl, #24]
   1a218:	cmp	r5, r0
   1a21c:	bls	1a234 <argp_failure@@Base+0x3734>
   1a220:	ldr	r3, [sl]
   1a224:	sub	r2, r5, r0
   1a228:	mov	r1, #1
   1a22c:	bl	113c0 <fwrite_unlocked@plt>
   1a230:	mov	r3, #32
   1a234:	ldr	r0, [sl]
   1a238:	ldr	r1, [r0, #20]
   1a23c:	ldr	r2, [r0, #24]
   1a240:	cmp	r1, r2
   1a244:	bcs	1a358 <argp_failure@@Base+0x3858>
   1a248:	add	r2, r1, #1
   1a24c:	str	r2, [r0, #20]
   1a250:	mov	r0, #10
   1a254:	strb	r0, [r1]
   1a258:	ldr	r5, [sl, #24]
   1a25c:	sub	r0, r8, r5
   1a260:	mov	r9, r5
   1a264:	str	r0, [sp, #8]
   1a268:	ldr	r7, [sl, #12]
   1a26c:	sub	r0, r6, r5
   1a270:	cmp	r0, r7
   1a274:	bge	1a2ec <argp_failure@@Base+0x37ec>
   1a278:	ldr	r0, [sp, #8]
   1a27c:	add	r0, r9, r0
   1a280:	add	r0, r0, #1
   1a284:	cmp	r6, r0
   1a288:	bne	1a29c <argp_failure@@Base+0x379c>
   1a28c:	ldr	r0, [sl, #32]
   1a290:	sub	r0, r0, r6
   1a294:	cmp	r0, r7
   1a298:	bge	1a2ec <argp_failure@@Base+0x37ec>
   1a29c:	cmp	r7, #1
   1a2a0:	blt	1a310 <argp_failure@@Base+0x3810>
   1a2a4:	mov	r4, #0
   1a2a8:	ldr	r0, [sl]
   1a2ac:	ldr	r1, [r0, #20]
   1a2b0:	ldr	r2, [r0, #24]
   1a2b4:	cmp	r1, r2
   1a2b8:	bcs	1a2dc <argp_failure@@Base+0x37dc>
   1a2bc:	add	r2, r1, #1
   1a2c0:	str	r2, [r0, #20]
   1a2c4:	strb	r3, [r1]
   1a2c8:	ldr	r7, [sl, #12]
   1a2cc:	add	r4, r4, #1
   1a2d0:	cmp	r4, r7
   1a2d4:	blt	1a2a8 <argp_failure@@Base+0x37a8>
   1a2d8:	b	1a310 <argp_failure@@Base+0x3810>
   1a2dc:	mov	r1, #32
   1a2e0:	bl	11510 <__overflow@plt>
   1a2e4:	mov	r3, #32
   1a2e8:	b	1a2c8 <argp_failure@@Base+0x37c8>
   1a2ec:	cmp	r7, #1
   1a2f0:	blt	1a310 <argp_failure@@Base+0x3810>
   1a2f4:	mov	r0, #0
   1a2f8:	strb	r3, [r5, r0]
   1a2fc:	add	r0, r0, #1
   1a300:	ldr	r7, [sl, #12]
   1a304:	cmp	r0, r7
   1a308:	blt	1a2f8 <argp_failure@@Base+0x37f8>
   1a30c:	add	r5, r5, r0
   1a310:	cmp	r5, r6
   1a314:	bcs	19ea4 <argp_failure@@Base+0x33a4>
   1a318:	ldr	r0, [sp, #8]
   1a31c:	mov	r1, r6
   1a320:	add	r0, r9, r0
   1a324:	sub	r2, r0, r6
   1a328:	mov	r0, r5
   1a32c:	bl	11354 <memmove@plt>
   1a330:	ldr	r7, [sl, #12]
   1a334:	mov	r3, #32
   1a338:	b	19ea4 <argp_failure@@Base+0x33a4>
   1a33c:	mov	r7, #0
   1a340:	add	r5, r4, #1
   1a344:	mov	r3, #32
   1a348:	str	r7, [sl, #20]
   1a34c:	cmp	r5, r8
   1a350:	bcc	19ecc <argp_failure@@Base+0x33cc>
   1a354:	b	1a384 <argp_failure@@Base+0x3884>
   1a358:	mov	r1, #10
   1a35c:	bl	11510 <__overflow@plt>
   1a360:	mov	r3, #32
   1a364:	b	1a258 <argp_failure@@Base+0x3758>
   1a368:	str	r0, [sl, #20]
   1a36c:	b	1a384 <argp_failure@@Base+0x3884>
   1a370:	add	r0, r7, r0
   1a374:	str	r0, [sl, #20]
   1a378:	sub	r0, r6, r0
   1a37c:	add	r8, r8, r0
   1a380:	str	r8, [sl, #28]
   1a384:	ldr	r0, [sl, #24]
   1a388:	sub	r0, r8, r0
   1a38c:	str	r0, [sl, #16]
   1a390:	sub	sp, fp, #28
   1a394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a398:	push	{r4, r5, r6, sl, fp, lr}
   1a39c:	add	fp, sp, #16
   1a3a0:	mov	r4, r0
   1a3a4:	mov	r5, r1
   1a3a8:	ldr	r0, [r0, #28]
   1a3ac:	mov	r6, #1
   1a3b0:	ldr	r1, [r4, #32]
   1a3b4:	sub	r0, r1, r0
   1a3b8:	cmp	r0, r5
   1a3bc:	bcs	1a47c <argp_failure@@Base+0x397c>
   1a3c0:	mov	r0, r4
   1a3c4:	bl	19e68 <argp_failure@@Base+0x3368>
   1a3c8:	ldr	r0, [r4, #24]
   1a3cc:	ldr	r1, [r4, #28]
   1a3d0:	ldr	r3, [r4]
   1a3d4:	sub	r2, r1, r0
   1a3d8:	mov	r1, #1
   1a3dc:	bl	113c0 <fwrite_unlocked@plt>
   1a3e0:	mov	r1, r0
   1a3e4:	ldr	r0, [r4, #24]
   1a3e8:	ldr	r2, [r4, #28]
   1a3ec:	sub	r3, r2, r0
   1a3f0:	cmp	r1, r3
   1a3f4:	bne	1a448 <argp_failure@@Base+0x3948>
   1a3f8:	mov	r1, #0
   1a3fc:	mov	r6, #1
   1a400:	str	r1, [r4, #16]
   1a404:	str	r0, [r4, #28]
   1a408:	ldr	r1, [r4, #32]
   1a40c:	sub	r1, r1, r0
   1a410:	cmp	r1, r5
   1a414:	bcs	1a47c <argp_failure@@Base+0x397c>
   1a418:	adds	r5, r1, r5
   1a41c:	bcs	1a46c <argp_failure@@Base+0x396c>
   1a420:	mov	r1, r5
   1a424:	bl	1536c <_obstack_memory_used@@Base+0xcb8>
   1a428:	cmp	r0, #0
   1a42c:	beq	1a46c <argp_failure@@Base+0x396c>
   1a430:	str	r0, [r4, #24]
   1a434:	add	r1, r0, r5
   1a438:	str	r0, [r4, #28]
   1a43c:	mov	r0, r6
   1a440:	str	r1, [r4, #32]
   1a444:	pop	{r4, r5, r6, sl, fp, pc}
   1a448:	sub	r2, r2, r1
   1a44c:	str	r2, [r4, #28]
   1a450:	sub	r2, r2, r0
   1a454:	ldr	r3, [r4, #16]
   1a458:	sub	r3, r3, r1
   1a45c:	add	r1, r0, r1
   1a460:	str	r3, [r4, #16]
   1a464:	bl	11354 <memmove@plt>
   1a468:	b	1a478 <argp_failure@@Base+0x3978>
   1a46c:	bl	114c8 <__errno_location@plt>
   1a470:	mov	r1, #12
   1a474:	str	r1, [r0]
   1a478:	mov	r6, #0
   1a47c:	mov	r0, r6
   1a480:	pop	{r4, r5, r6, sl, fp, pc}
   1a484:	sub	sp, sp, #8
   1a488:	push	{r4, r5, r6, r7, fp, lr}
   1a48c:	add	fp, sp, #16
   1a490:	sub	sp, sp, #8
   1a494:	mov	r5, r1
   1a498:	mov	r4, r0
   1a49c:	mov	r1, #150	; 0x96
   1a4a0:	add	r6, fp, #8
   1a4a4:	str	r2, [fp, #8]
   1a4a8:	str	r3, [fp, #12]
   1a4ac:	mov	r0, r4
   1a4b0:	bl	1a398 <argp_failure@@Base+0x3898>
   1a4b4:	cmp	r0, #0
   1a4b8:	beq	1a4f8 <argp_failure@@Base+0x39f8>
   1a4bc:	str	r6, [sp, #4]
   1a4c0:	mov	r2, r5
   1a4c4:	mov	r3, r6
   1a4c8:	ldr	r0, [r4, #28]
   1a4cc:	ldr	r1, [r4, #32]
   1a4d0:	sub	r7, r1, r0
   1a4d4:	mov	r1, r7
   1a4d8:	bl	11564 <vsnprintf@plt>
   1a4dc:	add	r1, r0, #1
   1a4e0:	cmp	r0, r7
   1a4e4:	bcs	1a4ac <argp_failure@@Base+0x39ac>
   1a4e8:	ldr	r1, [r4, #28]
   1a4ec:	add	r1, r1, r0
   1a4f0:	str	r1, [r4, #28]
   1a4f4:	b	1a4fc <argp_failure@@Base+0x39fc>
   1a4f8:	mvn	r0, #0
   1a4fc:	sub	sp, fp, #16
   1a500:	pop	{r4, r5, r6, r7, fp, lr}
   1a504:	add	sp, sp, #8
   1a508:	bx	lr
   1a50c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a510:	mov	r7, r0
   1a514:	ldr	r6, [pc, #72]	; 1a564 <argp_failure@@Base+0x3a64>
   1a518:	ldr	r5, [pc, #72]	; 1a568 <argp_failure@@Base+0x3a68>
   1a51c:	add	r6, pc, r6
   1a520:	add	r5, pc, r5
   1a524:	sub	r6, r6, r5
   1a528:	mov	r8, r1
   1a52c:	mov	r9, r2
   1a530:	bl	112e0 <fdopen@plt-0x20>
   1a534:	asrs	r6, r6, #2
   1a538:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a53c:	mov	r4, #0
   1a540:	add	r4, r4, #1
   1a544:	ldr	r3, [r5], #4
   1a548:	mov	r2, r9
   1a54c:	mov	r1, r8
   1a550:	mov	r0, r7
   1a554:	blx	r3
   1a558:	cmp	r6, r4
   1a55c:	bne	1a540 <argp_failure@@Base+0x3a40>
   1a560:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a564:	andeq	r2, r1, r8, ror #19
   1a568:	andeq	r2, r1, r0, ror #19
   1a56c:	bx	lr

Disassembly of section .fini:

0001a570 <.fini>:
   1a570:	push	{r3, lr}
   1a574:	pop	{r3, pc}
