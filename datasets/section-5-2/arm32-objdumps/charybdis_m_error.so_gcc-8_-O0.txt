
../repos/charybdis/modules/core/.libs/m_error.so:     file format elf32-littlearm


Disassembly of section .init:

00000530 <_init>:
 530:	push	{r3, lr}
 534:	bl	5e0 <call_weak_fn>
 538:	pop	{r3, pc}

Disassembly of section .plt:

0000053c <.plt>:
 53c:	push	{lr}		; (str lr, [sp, #-4]!)
 540:	ldr	lr, [pc, #4]	; 54c <.plt+0x10>
 544:	add	lr, pc, lr
 548:	ldr	pc, [lr, #8]!
 54c:	.word	0x00010ab4

00000550 <__cxa_finalize@plt>:
 550:	add	ip, pc, #0, 12
 554:	add	ip, ip, #16, 20	; 0x10000
 558:	ldr	pc, [ip, #2740]!	; 0xab4

0000055c <rb_strncasecmp@plt>:
 55c:	add	ip, pc, #0, 12
 560:	add	ip, ip, #16, 20	; 0x10000
 564:	ldr	pc, [ip, #2732]!	; 0xaac

00000568 <sendto_realops_snomask@plt>:
 568:	add	ip, pc, #0, 12
 56c:	add	ip, ip, #16, 20	; 0x10000
 570:	ldr	pc, [ip, #2724]!	; 0xaa4

00000574 <__gmon_start__@plt>:
 574:	add	ip, pc, #0, 12
 578:	add	ip, ip, #16, 20	; 0x10000
 57c:	ldr	pc, [ip, #2716]!	; 0xa9c

00000580 <strlen@plt>:
 580:	add	ip, pc, #0, 12
 584:	add	ip, ip, #16, 20	; 0x10000
 588:	ldr	pc, [ip, #2708]!	; 0xa94

0000058c <strchr@plt>:
 58c:	add	ip, pc, #0, 12
 590:	add	ip, ip, #16, 20	; 0x10000
 594:	ldr	pc, [ip, #2700]!	; 0xa8c

00000598 <snprintf@plt>:
 598:	add	ip, pc, #0, 12
 59c:	add	ip, ip, #16, 20	; 0x10000
 5a0:	ldr	pc, [ip, #2692]!	; 0xa84

000005a4 <is_remote_connect@plt>:
 5a4:	add	ip, pc, #0, 12
 5a8:	add	ip, ip, #16, 20	; 0x10000
 5ac:	ldr	pc, [ip, #2684]!	; 0xa7c

000005b0 <ilog@plt>:
 5b0:	add	ip, pc, #0, 12
 5b4:	add	ip, ip, #16, 20	; 0x10000
 5b8:	ldr	pc, [ip, #2676]!	; 0xa74

000005bc <log_client_name@plt>:
 5bc:	add	ip, pc, #0, 12
 5c0:	add	ip, ip, #16, 20	; 0x10000
 5c4:	ldr	pc, [ip, #2668]!	; 0xa6c

000005c8 <exit_client@plt>:
 5c8:	add	ip, pc, #0, 12
 5cc:	add	ip, ip, #16, 20	; 0x10000
 5d0:	ldr	pc, [ip, #2660]!	; 0xa64

000005d4 <strncmp@plt>:
 5d4:	add	ip, pc, #0, 12
 5d8:	add	ip, ip, #16, 20	; 0x10000
 5dc:	ldr	pc, [ip, #2652]!	; 0xa5c

Disassembly of section .text:

000005e0 <call_weak_fn>:
 5e0:	ldr	r3, [pc, #20]	; 5fc <call_weak_fn+0x1c>
 5e4:	ldr	r2, [pc, #20]	; 600 <call_weak_fn+0x20>
 5e8:	add	r3, pc, r3
 5ec:	ldr	r2, [r3, r2]
 5f0:	cmp	r2, #0
 5f4:	bxeq	lr
 5f8:	b	574 <__gmon_start__@plt>
 5fc:	.word	0x00010a10
 600:	.word	0x00000044

00000604 <deregister_tm_clones>:
 604:	ldr	r0, [pc, #44]	; 638 <deregister_tm_clones+0x34>
 608:	ldr	r3, [pc, #44]	; 63c <deregister_tm_clones+0x38>
 60c:	add	r0, pc, r0
 610:	add	r3, pc, r3
 614:	cmp	r3, r0
 618:	ldr	r3, [pc, #32]	; 640 <deregister_tm_clones+0x3c>
 61c:	add	r3, pc, r3
 620:	bxeq	lr
 624:	ldr	r2, [pc, #24]	; 644 <deregister_tm_clones+0x40>
 628:	ldr	r3, [r3, r2]
 62c:	cmp	r3, #0
 630:	bxeq	lr
 634:	bx	r3
 638:	.word	0x00010ab8
 63c:	.word	0x00010ab4
 640:	.word	0x000109dc
 644:	.word	0x00000040

00000648 <register_tm_clones>:
 648:	ldr	r0, [pc, #56]	; 688 <register_tm_clones+0x40>
 64c:	ldr	r3, [pc, #56]	; 68c <register_tm_clones+0x44>
 650:	add	r0, pc, r0
 654:	add	r3, pc, r3
 658:	sub	r1, r3, r0
 65c:	ldr	r3, [pc, #44]	; 690 <register_tm_clones+0x48>
 660:	asr	r1, r1, #2
 664:	add	r3, pc, r3
 668:	add	r1, r1, r1, lsr #31
 66c:	asrs	r1, r1, #1
 670:	bxeq	lr
 674:	ldr	r2, [pc, #24]	; 694 <register_tm_clones+0x4c>
 678:	ldr	r3, [r3, r2]
 67c:	cmp	r3, #0
 680:	bxeq	lr
 684:	bx	r3
 688:	.word	0x00010a74
 68c:	.word	0x00010a70
 690:	.word	0x00010994
 694:	.word	0x00000048

00000698 <__do_global_dtors_aux>:
 698:	ldr	r3, [pc, #76]	; 6ec <__do_global_dtors_aux+0x54>
 69c:	ldr	r2, [pc, #76]	; 6f0 <__do_global_dtors_aux+0x58>
 6a0:	add	r3, pc, r3
 6a4:	add	r2, pc, r2
 6a8:	ldrb	r3, [r3]
 6ac:	cmp	r3, #0
 6b0:	bxne	lr
 6b4:	ldr	r3, [pc, #56]	; 6f4 <__do_global_dtors_aux+0x5c>
 6b8:	push	{r4, lr}
 6bc:	ldr	r3, [r2, r3]
 6c0:	cmp	r3, #0
 6c4:	beq	6d4 <__do_global_dtors_aux+0x3c>
 6c8:	ldr	r3, [pc, #40]	; 6f8 <__do_global_dtors_aux+0x60>
 6cc:	ldr	r0, [pc, r3]
 6d0:	bl	550 <__cxa_finalize@plt>
 6d4:	bl	604 <deregister_tm_clones>
 6d8:	ldr	r3, [pc, #28]	; 6fc <__do_global_dtors_aux+0x64>
 6dc:	mov	r2, #1
 6e0:	add	r3, pc, r3
 6e4:	strb	r2, [r3]
 6e8:	pop	{r4, pc}
 6ec:	.word	0x00010a24
 6f0:	.word	0x00010954
 6f4:	.word	0x0000003c
 6f8:	.word	0x00010980
 6fc:	.word	0x000109e4

00000700 <frame_dummy>:
 700:	b	648 <register_tm_clones>

00000704 <is_safe_error>:
 704:	str	r4, [sp, #-12]!
 708:	str	fp, [sp, #4]
 70c:	str	lr, [sp, #8]
 710:	add	fp, sp, #8
 714:	sub	sp, sp, #116	; 0x74
 718:	str	r0, [fp, #-120]	; 0xffffff88
 71c:	ldr	r4, [pc, #408]	; 8bc <is_safe_error+0x1b8>
 720:	add	r4, pc, r4
 724:	mov	r2, #25
 728:	ldr	r3, [pc, #400]	; 8c0 <is_safe_error+0x1bc>
 72c:	add	r3, pc, r3
 730:	mov	r1, r3
 734:	ldr	r0, [fp, #-120]	; 0xffffff88
 738:	bl	5d4 <strncmp@plt>
 73c:	mov	r3, r0
 740:	cmp	r3, #0
 744:	bne	750 <is_safe_error+0x4c>
 748:	mov	r3, #1
 74c:	b	8a4 <is_safe_error+0x1a0>
 750:	sub	r0, fp, #116	; 0x74
 754:	ldr	r3, [pc, #360]	; 8c4 <is_safe_error+0x1c0>
 758:	ldr	r3, [r4, r3]
 75c:	add	r3, r3, #88	; 0x58
 760:	ldr	r2, [pc, #352]	; 8c8 <is_safe_error+0x1c4>
 764:	add	r2, pc, r2
 768:	mov	r1, #100	; 0x64
 76c:	bl	598 <snprintf@plt>
 770:	sub	r3, fp, #116	; 0x74
 774:	mov	r0, r3
 778:	bl	580 <strlen@plt>
 77c:	mov	r2, r0
 780:	sub	r3, fp, #116	; 0x74
 784:	mov	r1, r3
 788:	ldr	r0, [fp, #-120]	; 0xffffff88
 78c:	bl	5d4 <strncmp@plt>
 790:	mov	r3, r0
 794:	cmp	r3, #0
 798:	bne	7a4 <is_safe_error+0xa0>
 79c:	mov	r3, #1
 7a0:	b	8a4 <is_safe_error+0x1a0>
 7a4:	mov	r2, #11
 7a8:	ldr	r3, [pc, #284]	; 8cc <is_safe_error+0x1c8>
 7ac:	add	r3, pc, r3
 7b0:	mov	r1, r3
 7b4:	ldr	r0, [fp, #-120]	; 0xffffff88
 7b8:	bl	5d4 <strncmp@plt>
 7bc:	mov	r3, r0
 7c0:	cmp	r3, #0
 7c4:	bne	7d0 <is_safe_error+0xcc>
 7c8:	mov	r3, #1
 7cc:	b	8a4 <is_safe_error+0x1a0>
 7d0:	mov	r2, #14
 7d4:	ldr	r3, [pc, #244]	; 8d0 <is_safe_error+0x1cc>
 7d8:	add	r3, pc, r3
 7dc:	mov	r1, r3
 7e0:	ldr	r0, [fp, #-120]	; 0xffffff88
 7e4:	bl	5d4 <strncmp@plt>
 7e8:	mov	r3, r0
 7ec:	cmp	r3, #0
 7f0:	bne	7fc <is_safe_error+0xf8>
 7f4:	mov	r3, #1
 7f8:	b	8a4 <is_safe_error+0x1a0>
 7fc:	mov	r2, #12
 800:	ldr	r3, [pc, #204]	; 8d4 <is_safe_error+0x1d0>
 804:	add	r3, pc, r3
 808:	mov	r1, r3
 80c:	ldr	r0, [fp, #-120]	; 0xffffff88
 810:	bl	55c <rb_strncasecmp@plt>
 814:	mov	r3, r0
 818:	cmp	r3, #0
 81c:	bne	828 <is_safe_error+0x124>
 820:	mov	r3, #0
 824:	b	8a4 <is_safe_error+0x1a0>
 828:	mov	r1, #91	; 0x5b
 82c:	ldr	r0, [fp, #-120]	; 0xffffff88
 830:	bl	58c <strchr@plt>
 834:	mov	r3, r0
 838:	cmp	r3, #0
 83c:	beq	848 <is_safe_error+0x144>
 840:	mov	r3, #0
 844:	b	8a4 <is_safe_error+0x1a0>
 848:	mov	r1, #46	; 0x2e
 84c:	ldr	r0, [fp, #-120]	; 0xffffff88
 850:	bl	58c <strchr@plt>
 854:	str	r0, [fp, #-16]
 858:	ldr	r3, [fp, #-16]
 85c:	cmp	r3, #0
 860:	beq	880 <is_safe_error+0x17c>
 864:	ldr	r3, [fp, #-16]
 868:	add	r3, r3, #1
 86c:	ldrb	r3, [r3]
 870:	cmp	r3, #0
 874:	beq	880 <is_safe_error+0x17c>
 878:	mov	r3, #0
 87c:	b	8a4 <is_safe_error+0x1a0>
 880:	mov	r1, #58	; 0x3a
 884:	ldr	r0, [fp, #-120]	; 0xffffff88
 888:	bl	58c <strchr@plt>
 88c:	mov	r3, r0
 890:	cmp	r3, #0
 894:	beq	8a0 <is_safe_error+0x19c>
 898:	mov	r3, #0
 89c:	b	8a4 <is_safe_error+0x1a0>
 8a0:	mov	r3, #1
 8a4:	mov	r0, r3
 8a8:	sub	sp, fp, #8
 8ac:	ldr	r4, [sp]
 8b0:	ldr	fp, [sp, #4]
 8b4:	add	sp, sp, #8
 8b8:	pop	{pc}		; (ldr pc, [sp], #4)
 8bc:	.word	0x000108d8
 8c0:	.word	0x00000598
 8c4:	.word	0x0000004c
 8c8:	.word	0x0000057c
 8cc:	.word	0x00000554
 8d0:	.word	0x00000534
 8d4:	.word	0x00000518

000008d8 <m_error>:
 8d8:	str	r4, [sp, #-12]!
 8dc:	str	fp, [sp, #4]
 8e0:	str	lr, [sp, #8]
 8e4:	add	fp, sp, #8
 8e8:	sub	sp, sp, #36	; 0x24
 8ec:	str	r0, [fp, #-24]	; 0xffffffe8
 8f0:	str	r1, [fp, #-28]	; 0xffffffe4
 8f4:	str	r2, [fp, #-32]	; 0xffffffe0
 8f8:	str	r3, [fp, #-36]	; 0xffffffdc
 8fc:	ldr	r2, [pc, #480]	; ae4 <m_error+0x20c>
 900:	add	r2, pc, r2
 904:	ldr	r3, [pc, #476]	; ae8 <m_error+0x210>
 908:	ldr	r3, [r2, r3]
 90c:	ldr	r3, [r3, #208]	; 0xd0
 910:	str	r3, [fp, #-16]
 914:	ldr	r3, [fp, #-36]	; 0xffffffdc
 918:	cmp	r3, #1
 91c:	ble	944 <m_error+0x6c>
 920:	ldr	r3, [fp, #4]
 924:	add	r3, r3, #4
 928:	ldr	r3, [r3]
 92c:	ldrb	r3, [r3]
 930:	cmp	r3, #0
 934:	beq	944 <m_error+0x6c>
 938:	ldr	r3, [fp, #4]
 93c:	ldr	r3, [r3, #4]
 940:	b	94c <m_error+0x74>
 944:	ldr	r3, [pc, #416]	; aec <m_error+0x214>
 948:	add	r3, pc, r3
 94c:	str	r3, [fp, #-20]	; 0xffffffec
 950:	ldr	r3, [fp, #-28]	; 0xffffffe4
 954:	ldrh	r3, [r3, #80]	; 0x50
 958:	cmp	r3, #32
 95c:	beq	980 <m_error+0xa8>
 960:	ldr	r3, [fp, #-28]	; 0xffffffe4
 964:	ldrh	r3, [r3, #80]	; 0x50
 968:	cmp	r3, #2
 96c:	beq	980 <m_error+0xa8>
 970:	ldr	r3, [fp, #-28]	; 0xffffffe4
 974:	ldrh	r3, [r3, #80]	; 0x50
 978:	cmp	r3, #1
 97c:	bne	9a4 <m_error+0xcc>
 980:	mov	r1, #1
 984:	ldr	r0, [fp, #-32]	; 0xffffffe0
 988:	bl	5bc <log_client_name@plt>
 98c:	mov	r2, r0
 990:	ldr	r3, [fp, #-20]	; 0xffffffec
 994:	ldr	r1, [pc, #340]	; af0 <m_error+0x218>
 998:	add	r1, pc, r1
 99c:	mov	r0, #5
 9a0:	bl	5b0 <ilog@plt>
 9a4:	ldr	r0, [fp, #-20]	; 0xffffffec
 9a8:	bl	704 <is_safe_error>
 9ac:	mov	r3, r0
 9b0:	cmp	r3, #0
 9b4:	beq	9c0 <m_error+0xe8>
 9b8:	mov	r3, #0
 9bc:	str	r3, [fp, #-16]
 9c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9c4:	ldrh	r3, [r3, #80]	; 0x50
 9c8:	cmp	r3, #32
 9cc:	beq	9f0 <m_error+0x118>
 9d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9d4:	ldrh	r3, [r3, #80]	; 0x50
 9d8:	cmp	r3, #2
 9dc:	beq	9f0 <m_error+0x118>
 9e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
 9e4:	ldrh	r3, [r3, #80]	; 0x50
 9e8:	cmp	r3, #1
 9ec:	bne	ab4 <m_error+0x1dc>
 9f0:	ldr	r3, [fp, #-16]
 9f4:	cmp	r3, #1
 9f8:	bgt	a54 <m_error+0x17c>
 9fc:	ldr	r3, [fp, #-16]
 a00:	cmp	r3, #0
 a04:	bne	a2c <m_error+0x154>
 a08:	ldr	r0, [fp, #-28]	; 0xffffffe4
 a0c:	bl	5a4 <is_remote_connect@plt>
 a10:	mov	r3, r0
 a14:	cmp	r3, #0
 a18:	beq	a24 <m_error+0x14c>
 a1c:	mov	r1, #256	; 0x100
 a20:	b	a30 <m_error+0x158>
 a24:	mov	r1, #0
 a28:	b	a30 <m_error+0x158>
 a2c:	mov	r1, #2
 a30:	ldr	r3, [fp, #-28]	; 0xffffffe4
 a34:	add	r2, r3, #88	; 0x58
 a38:	ldr	r3, [fp, #-20]	; 0xffffffec
 a3c:	str	r3, [sp]
 a40:	mov	r3, r2
 a44:	ldr	r2, [pc, #168]	; af4 <m_error+0x21c>
 a48:	add	r2, pc, r2
 a4c:	mov	r0, #256	; 0x100
 a50:	bl	568 <sendto_realops_snomask@plt>
 a54:	ldr	r3, [fp, #-16]
 a58:	cmp	r3, #0
 a5c:	ble	ab4 <m_error+0x1dc>
 a60:	ldr	r3, [fp, #-16]
 a64:	cmp	r3, #1
 a68:	moveq	r3, #1
 a6c:	movne	r3, #0
 a70:	uxtb	r3, r3
 a74:	mov	r4, r3
 a78:	ldr	r0, [fp, #-28]	; 0xffffffe4
 a7c:	bl	5a4 <is_remote_connect@plt>
 a80:	mov	r3, r0
 a84:	cmp	r3, #0
 a88:	beq	a94 <m_error+0x1bc>
 a8c:	mov	r3, #256	; 0x100
 a90:	b	a98 <m_error+0x1c0>
 a94:	mov	r3, #0
 a98:	orr	r1, r3, r4
 a9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 aa0:	add	r3, r3, #88	; 0x58
 aa4:	ldr	r2, [pc, #76]	; af8 <m_error+0x220>
 aa8:	add	r2, pc, r2
 aac:	mov	r0, #256	; 0x100
 ab0:	bl	568 <sendto_realops_snomask@plt>
 ab4:	ldr	r3, [pc, #64]	; afc <m_error+0x224>
 ab8:	add	r3, pc, r3
 abc:	ldr	r2, [fp, #-32]	; 0xffffffe0
 ac0:	ldr	r1, [fp, #-32]	; 0xffffffe0
 ac4:	ldr	r0, [fp, #-28]	; 0xffffffe4
 ac8:	bl	5c8 <exit_client@plt>
 acc:	nop	{0}
 ad0:	sub	sp, fp, #8
 ad4:	ldr	r4, [sp]
 ad8:	ldr	fp, [sp, #4]
 adc:	add	sp, sp, #8
 ae0:	pop	{pc}		; (ldr pc, [sp], #4)
 ae4:	.word	0x000106f8
 ae8:	.word	0x00000050
 aec:	.word	0x000003e4
 af0:	.word	0x00000398
 af4:	.word	0x0000030c
 af8:	.word	0x000002c4
 afc:	.word	0x00000204

00000b00 <ms_error>:
 b00:	str	fp, [sp, #-8]!
 b04:	str	lr, [sp, #4]
 b08:	add	fp, sp, #4
 b0c:	sub	sp, sp, #32
 b10:	str	r0, [fp, #-16]
 b14:	str	r1, [fp, #-20]	; 0xffffffec
 b18:	str	r2, [fp, #-24]	; 0xffffffe8
 b1c:	str	r3, [fp, #-28]	; 0xffffffe4
 b20:	ldr	r2, [pc, #328]	; c70 <ms_error+0x170>
 b24:	add	r2, pc, r2
 b28:	ldr	r3, [pc, #324]	; c74 <ms_error+0x174>
 b2c:	ldr	r3, [r2, r3]
 b30:	ldr	r3, [r3, #208]	; 0xd0
 b34:	str	r3, [fp, #-8]
 b38:	ldr	r3, [fp, #-28]	; 0xffffffe4
 b3c:	cmp	r3, #1
 b40:	ble	b68 <ms_error+0x68>
 b44:	ldr	r3, [fp, #4]
 b48:	add	r3, r3, #4
 b4c:	ldr	r3, [r3]
 b50:	ldrb	r3, [r3]
 b54:	cmp	r3, #0
 b58:	beq	b68 <ms_error+0x68>
 b5c:	ldr	r3, [fp, #4]
 b60:	ldr	r3, [r3, #4]
 b64:	b	b70 <ms_error+0x70>
 b68:	ldr	r3, [pc, #264]	; c78 <ms_error+0x178>
 b6c:	add	r3, pc, r3
 b70:	str	r3, [fp, #-12]
 b74:	mov	r1, #1
 b78:	ldr	r0, [fp, #-24]	; 0xffffffe8
 b7c:	bl	5bc <log_client_name@plt>
 b80:	mov	r2, r0
 b84:	ldr	r3, [fp, #-12]
 b88:	ldr	r1, [pc, #236]	; c7c <ms_error+0x17c>
 b8c:	add	r1, pc, r1
 b90:	mov	r0, #5
 b94:	bl	5b0 <ilog@plt>
 b98:	ldr	r0, [fp, #-12]
 b9c:	bl	704 <is_safe_error>
 ba0:	mov	r3, r0
 ba4:	cmp	r3, #0
 ba8:	beq	bb4 <ms_error+0xb4>
 bac:	mov	r3, #0
 bb0:	str	r3, [fp, #-8]
 bb4:	ldr	r3, [fp, #-8]
 bb8:	cmp	r3, #2
 bbc:	beq	c5c <ms_error+0x15c>
 bc0:	ldr	r2, [fp, #-20]	; 0xffffffec
 bc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 bc8:	cmp	r2, r3
 bcc:	bne	c10 <ms_error+0x110>
 bd0:	ldr	r3, [fp, #-8]
 bd4:	cmp	r3, #0
 bd8:	beq	be4 <ms_error+0xe4>
 bdc:	mov	r1, #2
 be0:	b	be8 <ms_error+0xe8>
 be4:	mov	r1, #0
 be8:	ldr	r3, [fp, #-20]	; 0xffffffec
 bec:	add	r2, r3, #88	; 0x58
 bf0:	ldr	r3, [fp, #-12]
 bf4:	str	r3, [sp]
 bf8:	mov	r3, r2
 bfc:	ldr	r2, [pc, #124]	; c80 <ms_error+0x180>
 c00:	add	r2, pc, r2
 c04:	mov	r0, #256	; 0x100
 c08:	bl	568 <sendto_realops_snomask@plt>
 c0c:	b	c60 <ms_error+0x160>
 c10:	ldr	r3, [fp, #-8]
 c14:	cmp	r3, #0
 c18:	beq	c24 <ms_error+0x124>
 c1c:	mov	r1, #2
 c20:	b	c28 <ms_error+0x128>
 c24:	mov	r1, #0
 c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
 c2c:	add	r0, r3, #88	; 0x58
 c30:	ldr	r3, [fp, #-20]	; 0xffffffec
 c34:	add	r3, r3, #88	; 0x58
 c38:	ldr	r2, [fp, #-12]
 c3c:	str	r2, [sp, #4]
 c40:	str	r3, [sp]
 c44:	mov	r3, r0
 c48:	ldr	r2, [pc, #52]	; c84 <ms_error+0x184>
 c4c:	add	r2, pc, r2
 c50:	mov	r0, #256	; 0x100
 c54:	bl	568 <sendto_realops_snomask@plt>
 c58:	b	c60 <ms_error+0x160>
 c5c:	nop	{0}
 c60:	sub	sp, fp, #4
 c64:	ldr	fp, [sp]
 c68:	add	sp, sp, #4
 c6c:	pop	{pc}		; (ldr pc, [sp], #4)
 c70:	.word	0x000104d4
 c74:	.word	0x00000050
 c78:	.word	0x000001c0
 c7c:	.word	0x000001a4
 c80:	.word	0x00000154
 c84:	.word	0x0000013c

Disassembly of section .fini:

00000c88 <_fini>:
 c88:	push	{r3, lr}
 c8c:	pop	{r3, pc}
