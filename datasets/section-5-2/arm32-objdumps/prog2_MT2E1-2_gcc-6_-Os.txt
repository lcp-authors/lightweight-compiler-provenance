
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

00010e74 <.init>:
   10e74:	push	{r3, lr}
   10e78:	bl	111c8 <_start@@Base+0x3c>
   10e7c:	pop	{r3, pc}

Disassembly of section .plt:

00010e80 <calloc@plt-0x14>:
   10e80:	push	{lr}		; (str lr, [sp, #-4]!)
   10e84:	ldr	lr, [pc, #4]	; 10e90 <calloc@plt-0x4>
   10e88:	add	lr, pc, lr
   10e8c:	ldr	pc, [lr, #8]!
   10e90:	andeq	r2, r1, r0, ror r1

00010e94 <calloc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #73728	; 0x12000
   10e9c:	ldr	pc, [ip, #368]!	; 0x170

00010ea0 <raise@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #73728	; 0x12000
   10ea8:	ldr	pc, [ip, #360]!	; 0x168

00010eac <strcmp@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #73728	; 0x12000
   10eb4:	ldr	pc, [ip, #352]!	; 0x160

00010eb8 <printf@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #73728	; 0x12000
   10ec0:	ldr	pc, [ip, #344]!	; 0x158

00010ec4 <__isoc99_fscanf@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #73728	; 0x12000
   10ecc:	ldr	pc, [ip, #336]!	; 0x150

00010ed0 <fopen@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #328]!	; 0x148

00010edc <free@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #320]!	; 0x140

00010ee8 <realloc@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #312]!	; 0x138

00010ef4 <strcpy@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #304]!	; 0x130

00010f00 <puts@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #296]!	; 0x128

00010f0c <malloc@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #288]!	; 0x120

00010f18 <__libc_start_main@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #280]!	; 0x118

00010f24 <__gmon_start__@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #272]!	; 0x110

00010f30 <strlen@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #264]!	; 0x108

00010f3c <setvbuf@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #256]!	; 0x100

00010f48 <putchar@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #248]!	; 0xf8

00010f54 <fclose@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #240]!	; 0xf0

00010f60 <atoi@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #73728	; 0x12000
   10f68:	ldr	pc, [ip, #232]!	; 0xe8

00010f6c <getline@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #73728	; 0x12000
   10f74:	ldr	pc, [ip, #224]!	; 0xe0

00010f78 <abort@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #73728	; 0x12000
   10f80:	ldr	pc, [ip, #216]!	; 0xd8

Disassembly of section .text:

00010f84 <main@@Base>:
   10f84:	ldr	r0, [pc, #464]	; 1115c <main@@Base+0x1d8>
   10f88:	mov	r3, #0
   10f8c:	push	{r4, r5, r6, r7, r8, r9, lr}
   10f90:	mov	r1, r3
   10f94:	sub	sp, sp, #36	; 0x24
   10f98:	mov	r2, #2
   10f9c:	ldr	r0, [r0]
   10fa0:	bl	10f3c <setvbuf@plt>
   10fa4:	ldr	r1, [pc, #436]	; 11160 <main@@Base+0x1dc>
   10fa8:	ldr	r0, [pc, #436]	; 11164 <main@@Base+0x1e0>
   10fac:	bl	10ed0 <fopen@plt>
   10fb0:	add	r7, sp, #32
   10fb4:	mov	r8, r0
   10fb8:	bl	11f9c <lista_nova@@Base>
   10fbc:	mov	r3, #0
   10fc0:	mov	r5, r3
   10fc4:	str	r3, [sp, #4]
   10fc8:	str	r3, [r7, #-24]!	; 0xffffffe8
   10fcc:	mov	r4, r0
   10fd0:	mov	r2, r8
   10fd4:	mov	r1, r7
   10fd8:	add	r0, sp, #4
   10fdc:	bl	10f6c <getline@plt>
   10fe0:	cmn	r0, #1
   10fe4:	bne	110d4 <main@@Base+0x150>
   10fe8:	ldr	r0, [sp, #4]
   10fec:	bl	10edc <free@plt>
   10ff0:	mov	r0, r8
   10ff4:	bl	10f54 <fclose@plt>
   10ff8:	ldr	r1, [pc, #360]	; 11168 <main@@Base+0x1e4>
   10ffc:	mov	r0, r4
   11000:	bl	11484 <carrega_rotas@@Base>
   11004:	ldr	r9, [pc, #352]	; 1116c <main@@Base+0x1e8>
   11008:	mov	r7, r0
   1100c:	ldr	r0, [pc, #348]	; 11170 <main@@Base+0x1ec>
   11010:	bl	10f00 <puts@plt>
   11014:	ldr	r1, [pc, #324]	; 11160 <main@@Base+0x1dc>
   11018:	ldr	r0, [pc, #340]	; 11174 <main@@Base+0x1f0>
   1101c:	bl	10ed0 <fopen@plt>
   11020:	mov	r8, r0
   11024:	bl	11f9c <lista_nova@@Base>
   11028:	mov	r6, r0
   1102c:	bl	11f9c <lista_nova@@Base>
   11030:	mov	r5, r0
   11034:	add	r3, sp, #20
   11038:	add	r2, sp, #12
   1103c:	mov	r1, r9
   11040:	mov	r0, r8
   11044:	bl	10ec4 <__isoc99_fscanf@plt>
   11048:	cmp	r0, #2
   1104c:	beq	110fc <main@@Base+0x178>
   11050:	mov	r3, #5
   11054:	mov	r2, r4
   11058:	mov	r1, r5
   1105c:	mov	r0, r6
   11060:	bl	112b4 <proximas_n_chegadas@@Base>
   11064:	cmp	r0, #1
   11068:	beq	11074 <main@@Base+0xf0>
   1106c:	ldr	r0, [pc, #260]	; 11178 <main@@Base+0x1f4>
   11070:	bl	10f00 <puts@plt>
   11074:	mov	r0, r6
   11078:	bl	11fc0 <lista_apaga@@Base>
   1107c:	mov	r0, r5
   11080:	bl	11fc0 <lista_apaga@@Base>
   11084:	mov	r0, r8
   11088:	bl	10f54 <fclose@plt>
   1108c:	ldr	r0, [pc, #232]	; 1117c <main@@Base+0x1f8>
   11090:	bl	10f00 <puts@plt>
   11094:	ldr	r2, [pc, #228]	; 11180 <main@@Base+0x1fc>
   11098:	mov	r1, r4
   1109c:	mov	r0, r7
   110a0:	bl	113c8 <pesquisa_destinos@@Base>
   110a4:	subs	r6, r0, #0
   110a8:	bne	11120 <main@@Base+0x19c>
   110ac:	ldr	r1, [pc, #204]	; 11180 <main@@Base+0x1fc>
   110b0:	ldr	r0, [pc, #204]	; 11184 <main@@Base+0x200>
   110b4:	bl	10eb8 <printf@plt>
   110b8:	mov	r0, r7
   110bc:	bl	115a8 <grafo_apaga@@Base>
   110c0:	mov	r0, r4
   110c4:	bl	11fc0 <lista_apaga@@Base>
   110c8:	mov	r0, #0
   110cc:	add	sp, sp, #36	; 0x24
   110d0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   110d4:	ldr	r6, [sp, #4]
   110d8:	mov	r0, r6
   110dc:	bl	10f30 <strlen@plt>
   110e0:	mov	r2, #0
   110e4:	add	r0, r6, r0
   110e8:	strb	r5, [r0, #-1]
   110ec:	ldr	r1, [sp, #4]
   110f0:	mov	r0, r4
   110f4:	bl	12028 <lista_insere@@Base>
   110f8:	b	10fd0 <main@@Base+0x4c>
   110fc:	add	r1, sp, #12
   11100:	mov	r2, #0
   11104:	mov	r0, r6
   11108:	bl	12028 <lista_insere@@Base>
   1110c:	mov	r2, #0
   11110:	add	r1, sp, #20
   11114:	mov	r0, r5
   11118:	bl	12028 <lista_insere@@Base>
   1111c:	b	11034 <main@@Base+0xb0>
   11120:	bl	12000 <lista_tamanho@@Base>
   11124:	ldr	r1, [pc, #84]	; 11180 <main@@Base+0x1fc>
   11128:	mov	r2, r0
   1112c:	ldr	r0, [pc, #84]	; 11188 <main@@Base+0x204>
   11130:	bl	10eb8 <printf@plt>
   11134:	ldr	r5, [r6]
   11138:	cmp	r5, #0
   1113c:	bne	1114c <main@@Base+0x1c8>
   11140:	mov	r0, r6
   11144:	bl	11fc0 <lista_apaga@@Base>
   11148:	b	110b8 <main@@Base+0x134>
   1114c:	ldr	r0, [r5]
   11150:	bl	10f00 <puts@plt>
   11154:	ldr	r5, [r5, #4]
   11158:	b	11138 <main@@Base+0x1b4>
   1115c:	andeq	r3, r2, r8, rrx
   11160:	andeq	r2, r1, r2, lsr r8
   11164:	andeq	r2, r1, r4, ror r8
   11168:	andeq	r2, r1, r3, lsl #17
   1116c:	andeq	r2, r1, fp, lsr #17
   11170:	andeq	r2, r1, sp, lsl #17
   11174:	muleq	r1, lr, r8
   11178:			; <UNDEFINED> instruction: 0x000128b1
   1117c:	andeq	r2, r1, fp, asr #17
   11180:	ldrdeq	r2, [r1], -sp
   11184:	andeq	r2, r1, r8, ror #17
   11188:	andeq	r2, r1, sp, lsl #18

0001118c <_start@@Base>:
   1118c:	mov	fp, #0
   11190:	mov	lr, #0
   11194:	pop	{r1}		; (ldr r1, [sp], #4)
   11198:	mov	r2, sp
   1119c:	push	{r2}		; (str r2, [sp, #-4]!)
   111a0:	push	{r0}		; (str r0, [sp, #-4]!)
   111a4:	ldr	ip, [pc, #16]	; 111bc <_start@@Base+0x30>
   111a8:	push	{ip}		; (str ip, [sp, #-4]!)
   111ac:	ldr	r0, [pc, #12]	; 111c0 <_start@@Base+0x34>
   111b0:	ldr	r3, [pc, #12]	; 111c4 <_start@@Base+0x38>
   111b4:	bl	10f18 <__libc_start_main@plt>
   111b8:	bl	10f78 <abort@plt>
   111bc:	andeq	r2, r1, r8, lsl r8
   111c0:	andeq	r0, r1, r4, lsl #31
   111c4:			; <UNDEFINED> instruction: 0x000127b8
   111c8:	ldr	r3, [pc, #20]	; 111e4 <_start@@Base+0x58>
   111cc:	ldr	r2, [pc, #20]	; 111e8 <_start@@Base+0x5c>
   111d0:	add	r3, pc, r3
   111d4:	ldr	r2, [r3, r2]
   111d8:	cmp	r2, #0
   111dc:	bxeq	lr
   111e0:	b	10f24 <__gmon_start__@plt>
   111e4:	andeq	r1, r1, r8, lsr #28
   111e8:	andeq	r0, r0, ip, asr r0
   111ec:	ldr	r3, [pc, #28]	; 11210 <_start@@Base+0x84>
   111f0:	ldr	r0, [pc, #28]	; 11214 <_start@@Base+0x88>
   111f4:	sub	r3, r3, r0
   111f8:	cmp	r3, #6
   111fc:	bxls	lr
   11200:	ldr	r3, [pc, #16]	; 11218 <_start@@Base+0x8c>
   11204:	cmp	r3, #0
   11208:	bxeq	lr
   1120c:	bx	r3
   11210:	andeq	r3, r2, fp, rrx
   11214:	andeq	r3, r2, r8, rrx
   11218:	andeq	r0, r0, r0
   1121c:	ldr	r1, [pc, #36]	; 11248 <_start@@Base+0xbc>
   11220:	ldr	r0, [pc, #36]	; 1124c <_start@@Base+0xc0>
   11224:	sub	r1, r1, r0
   11228:	asr	r1, r1, #2
   1122c:	add	r1, r1, r1, lsr #31
   11230:	asrs	r1, r1, #1
   11234:	bxeq	lr
   11238:	ldr	r3, [pc, #16]	; 11250 <_start@@Base+0xc4>
   1123c:	cmp	r3, #0
   11240:	bxeq	lr
   11244:	bx	r3
   11248:	andeq	r3, r2, r8, rrx
   1124c:	andeq	r3, r2, r8, rrx
   11250:	andeq	r0, r0, r0
   11254:	push	{r4, lr}
   11258:	ldr	r4, [pc, #24]	; 11278 <_start@@Base+0xec>
   1125c:	ldrb	r3, [r4]
   11260:	cmp	r3, #0
   11264:	popne	{r4, pc}
   11268:	bl	111ec <_start@@Base+0x60>
   1126c:	mov	r3, #1
   11270:	strb	r3, [r4]
   11274:	pop	{r4, pc}
   11278:	andeq	r3, r2, ip, rrx
   1127c:	ldr	r0, [pc, #40]	; 112ac <_start@@Base+0x120>
   11280:	ldr	r3, [r0]
   11284:	cmp	r3, #0
   11288:	bne	11290 <_start@@Base+0x104>
   1128c:	b	1121c <_start@@Base+0x90>
   11290:	ldr	r3, [pc, #24]	; 112b0 <_start@@Base+0x124>
   11294:	cmp	r3, #0
   11298:	beq	1128c <_start@@Base+0x100>
   1129c:	push	{r4, lr}
   112a0:	blx	r3
   112a4:	pop	{r4, lr}
   112a8:	b	1121c <_start@@Base+0x90>
   112ac:	andeq	r2, r2, r4, lsl pc
   112b0:	andeq	r0, r0, r0

000112b4 <proximas_n_chegadas@@Base>:
   112b4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112b8:	mov	r9, r0
   112bc:	ldr	r0, [r2, #8]
   112c0:	mov	sl, r1
   112c4:	mov	r7, r2
   112c8:	lsl	r0, r0, #2
   112cc:	mov	r8, r3
   112d0:	ldr	r4, [r2]
   112d4:	bl	10f0c <malloc@plt>
   112d8:	mov	fp, #200	; 0xc8
   112dc:	mov	r5, r0
   112e0:	sub	r6, r0, #4
   112e4:	cmp	r4, #0
   112e8:	bne	1133c <proximas_n_chegadas@@Base+0x88>
   112ec:	ldr	r0, [r9, #8]
   112f0:	bl	11bfc <heap_nova@@Base>
   112f4:	ldr	r4, [r9]
   112f8:	ldr	r9, [sl]
   112fc:	mov	r6, r0
   11300:	cmp	r4, #0
   11304:	bne	11358 <proximas_n_chegadas@@Base+0xa4>
   11308:	ldr	r3, [r7, #8]
   1130c:	cmp	r4, r3
   11310:	blt	11388 <proximas_n_chegadas@@Base+0xd4>
   11314:	mov	r0, r5
   11318:	bl	10edc <free@plt>
   1131c:	ldr	r7, [pc, #160]	; 113c4 <proximas_n_chegadas@@Base+0x110>
   11320:	mov	r4, #0
   11324:	cmp	r4, r8
   11328:	blt	11398 <proximas_n_chegadas@@Base+0xe4>
   1132c:	mov	r0, r6
   11330:	bl	11c4c <heap_apaga@@Base>
   11334:	mov	r0, #1
   11338:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1133c:	mov	r0, fp
   11340:	bl	10f0c <malloc@plt>
   11344:	ldr	r1, [r4]
   11348:	str	r0, [r6, #4]!
   1134c:	bl	10ef4 <strcpy@plt>
   11350:	ldr	r4, [r4, #4]
   11354:	b	112e4 <proximas_n_chegadas@@Base+0x30>
   11358:	ldr	r0, [r9]
   1135c:	bl	10f60 <atoi@plt>
   11360:	mov	sl, r0
   11364:	ldr	r0, [r4]
   11368:	bl	10f60 <atoi@plt>
   1136c:	ldr	r1, [r5, sl, lsl #2]
   11370:	mov	r2, r0
   11374:	mov	r0, r6
   11378:	bl	11df0 <heap_insere@@Base>
   1137c:	ldr	r4, [r4, #4]
   11380:	ldr	r9, [r9, #4]
   11384:	b	11300 <proximas_n_chegadas@@Base+0x4c>
   11388:	ldr	r0, [r5, r4, lsl #2]
   1138c:	bl	10edc <free@plt>
   11390:	add	r4, r4, #1
   11394:	b	11308 <proximas_n_chegadas@@Base+0x54>
   11398:	mov	r0, r6
   1139c:	bl	11e7c <heap_remove@@Base>
   113a0:	add	r4, r4, #1
   113a4:	mov	r1, r4
   113a8:	mov	r5, r0
   113ac:	mov	r2, r0
   113b0:	mov	r0, r7
   113b4:	bl	10eb8 <printf@plt>
   113b8:	mov	r0, r5
   113bc:	bl	10edc <free@plt>
   113c0:	b	11324 <proximas_n_chegadas@@Base+0x70>
   113c4:	andeq	r2, r1, r8, lsr #16

000113c8 <pesquisa_destinos@@Base>:
   113c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113cc:	mov	r9, r1
   113d0:	mov	r6, r0
   113d4:	mov	r7, r2
   113d8:	bl	11f9c <lista_nova@@Base>
   113dc:	ldr	r4, [r9]
   113e0:	mov	r5, #0
   113e4:	mov	r8, r0
   113e8:	cmp	r4, #0
   113ec:	bne	11424 <pesquisa_destinos@@Base+0x5c>
   113f0:	mov	r1, r5
   113f4:	mov	r0, r6
   113f8:	bl	11824 <v_sucessores@@Base>
   113fc:	mov	r4, #0
   11400:	mov	sl, r4
   11404:	mov	r5, r0
   11408:	ldr	r3, [r5]
   1140c:	cmp	r4, r3
   11410:	blt	11444 <pesquisa_destinos@@Base+0x7c>
   11414:	mov	r0, r5
   11418:	bl	122f0 <vetor_apaga@@Base>
   1141c:	mov	r0, r8
   11420:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11424:	mov	r1, r7
   11428:	ldr	r0, [r4]
   1142c:	bl	10eac <strcmp@plt>
   11430:	cmp	r0, #0
   11434:	beq	113f0 <pesquisa_destinos@@Base+0x28>
   11438:	add	r5, r5, #1
   1143c:	ldr	r4, [r4, #4]
   11440:	b	113e8 <pesquisa_destinos@@Base+0x20>
   11444:	ldr	r6, [r9]
   11448:	mov	r7, #0
   1144c:	mov	r1, r4
   11450:	mov	r0, r5
   11454:	bl	12354 <vetor_elemento@@Base>
   11458:	cmp	r7, r0
   1145c:	blt	11478 <pesquisa_destinos@@Base+0xb0>
   11460:	mov	r2, sl
   11464:	ldr	r1, [r6]
   11468:	mov	r0, r8
   1146c:	bl	12028 <lista_insere@@Base>
   11470:	add	r4, r4, #1
   11474:	b	11408 <pesquisa_destinos@@Base+0x40>
   11478:	ldr	r6, [r6, #4]
   1147c:	add	r7, r7, #1
   11480:	b	1144c <pesquisa_destinos@@Base+0x84>

00011484 <carrega_rotas@@Base>:
   11484:	push	{r0, r1, r4, r5, r6, lr}
   11488:	subs	r4, r1, #0
   1148c:	beq	114b8 <carrega_rotas@@Base+0x34>
   11490:	mov	r6, r0
   11494:	ldr	r1, [pc, #132]	; 11520 <carrega_rotas@@Base+0x9c>
   11498:	mov	r0, r4
   1149c:	bl	10ed0 <fopen@plt>
   114a0:	subs	r5, r0, #0
   114a4:	bne	114c4 <carrega_rotas@@Base+0x40>
   114a8:	mov	r1, r4
   114ac:	ldr	r0, [pc, #112]	; 11524 <carrega_rotas@@Base+0xa0>
   114b0:	bl	10eb8 <printf@plt>
   114b4:	mov	r4, r5
   114b8:	mov	r0, r4
   114bc:	add	sp, sp, #8
   114c0:	pop	{r4, r5, r6, pc}
   114c4:	mov	r0, r6
   114c8:	bl	12000 <lista_tamanho@@Base>
   114cc:	mov	r1, #0
   114d0:	bl	11554 <grafo_novo@@Base>
   114d4:	subs	r4, r0, #0
   114d8:	ldrne	r6, [pc, #72]	; 11528 <carrega_rotas@@Base+0xa4>
   114dc:	bne	114f8 <carrega_rotas@@Base+0x74>
   114e0:	ldr	r0, [pc, #68]	; 1152c <carrega_rotas@@Base+0xa8>
   114e4:	bl	10f00 <puts@plt>
   114e8:	b	114b8 <carrega_rotas@@Base+0x34>
   114ec:	ldm	sp, {r1, r2}
   114f0:	mov	r0, r4
   114f4:	bl	1171c <grafo_adiciona@@Base>
   114f8:	add	r3, sp, #4
   114fc:	mov	r2, sp
   11500:	mov	r1, r6
   11504:	mov	r0, r5
   11508:	bl	10ec4 <__isoc99_fscanf@plt>
   1150c:	cmp	r0, #2
   11510:	beq	114ec <carrega_rotas@@Base+0x68>
   11514:	mov	r0, r5
   11518:	bl	10f54 <fclose@plt>
   1151c:	b	114b8 <carrega_rotas@@Base+0x34>
   11520:	andeq	r2, r1, r2, lsr r8
   11524:	andeq	r2, r1, r4, lsr r8
   11528:	andeq	r2, r1, lr, ror #16
   1152c:	andeq	r2, r1, r5, asr r8

00011530 <cria_no@@Base>:
   11530:	push	{r4, lr}
   11534:	mov	r4, r0
   11538:	mov	r0, #8
   1153c:	bl	10f0c <malloc@plt>
   11540:	cmp	r0, #0
   11544:	movne	r3, #0
   11548:	strne	r4, [r0]
   1154c:	strne	r3, [r0, #4]
   11550:	pop	{r4, pc}

00011554 <grafo_novo@@Base>:
   11554:	push	{r4, r5, r6, lr}
   11558:	mov	r5, r0
   1155c:	mov	r0, #12
   11560:	mov	r6, r1
   11564:	bl	10f0c <malloc@plt>
   11568:	subs	r4, r0, #0
   1156c:	beq	115a0 <grafo_novo@@Base+0x4c>
   11570:	str	r5, [r4, #4]
   11574:	mov	r0, r5
   11578:	str	r6, [r4]
   1157c:	mov	r1, #8
   11580:	bl	10e94 <calloc@plt>
   11584:	cmp	r0, #0
   11588:	mov	r5, r0
   1158c:	str	r0, [r4, #8]
   11590:	bne	115a0 <grafo_novo@@Base+0x4c>
   11594:	mov	r0, r4
   11598:	bl	10edc <free@plt>
   1159c:	mov	r4, r5
   115a0:	mov	r0, r4
   115a4:	pop	{r4, r5, r6, pc}

000115a8 <grafo_apaga@@Base>:
   115a8:	push	{r4, r5, r6, lr}
   115ac:	subs	r4, r0, #0
   115b0:	popeq	{r4, r5, r6, pc}
   115b4:	ldr	r3, [r4, #8]
   115b8:	cmp	r3, #0
   115bc:	movne	r5, #0
   115c0:	bne	115f4 <grafo_apaga@@Base+0x4c>
   115c4:	mov	r0, r4
   115c8:	pop	{r4, r5, r6, lr}
   115cc:	b	10edc <free@plt>
   115d0:	ldr	r2, [r0, #4]
   115d4:	str	r2, [r3, #4]
   115d8:	bl	10edc <free@plt>
   115dc:	ldr	r3, [r4, #8]
   115e0:	add	r3, r3, r6
   115e4:	ldr	r0, [r3, #4]
   115e8:	cmp	r0, #0
   115ec:	bne	115d0 <grafo_apaga@@Base+0x28>
   115f0:	add	r5, r5, #1
   115f4:	ldr	r3, [r4, #4]
   115f8:	cmp	r5, r3
   115fc:	lsllt	r6, r5, #3
   11600:	blt	115dc <grafo_apaga@@Base+0x34>
   11604:	ldr	r0, [r4, #8]
   11608:	bl	10edc <free@plt>
   1160c:	b	115c4 <grafo_apaga@@Base+0x1c>

00011610 <grafo_remove@@Base>:
   11610:	push	{r4, r5, r6, lr}
   11614:	subs	r6, r0, #0
   11618:	popeq	{r4, r5, r6, pc}
   1161c:	ldr	ip, [r6, #8]
   11620:	add	ip, ip, r1, lsl #3
   11624:	ldr	r0, [ip, #4]
   11628:	cmp	r0, #0
   1162c:	popeq	{r4, r5, r6, pc}
   11630:	ldr	r3, [r0]
   11634:	mov	r5, r2
   11638:	cmp	r3, r2
   1163c:	ldr	r3, [r0, #4]
   11640:	mov	r4, r1
   11644:	streq	r3, [ip, #4]
   11648:	beq	1166c <grafo_remove@@Base+0x5c>
   1164c:	cmp	r3, #0
   11650:	beq	11670 <grafo_remove@@Base+0x60>
   11654:	ldr	r2, [r3]
   11658:	cmp	r5, r2
   1165c:	ldr	r2, [r3, #4]
   11660:	bne	116b0 <grafo_remove@@Base+0xa0>
   11664:	str	r2, [r0, #4]
   11668:	mov	r0, r3
   1166c:	bl	10edc <free@plt>
   11670:	ldr	r3, [r6]
   11674:	cmp	r3, #0
   11678:	popne	{r4, r5, r6, pc}
   1167c:	ldr	r2, [r6, #8]
   11680:	add	r5, r2, r5, lsl #3
   11684:	ldr	ip, [r5, #4]
   11688:	ldr	r3, [ip]
   1168c:	cmp	r4, r3
   11690:	ldr	r3, [ip, #4]
   11694:	moveq	r0, ip
   11698:	streq	r3, [r5, #4]
   1169c:	beq	116d0 <grafo_remove@@Base+0xc0>
   116a0:	cmp	r3, #0
   116a4:	mov	r0, r3
   116a8:	bne	116bc <grafo_remove@@Base+0xac>
   116ac:	pop	{r4, r5, r6, pc}
   116b0:	mov	r0, r3
   116b4:	mov	r3, r2
   116b8:	b	1164c <grafo_remove@@Base+0x3c>
   116bc:	ldr	r3, [r0]
   116c0:	cmp	r4, r3
   116c4:	ldr	r3, [r0, #4]
   116c8:	bne	116d8 <grafo_remove@@Base+0xc8>
   116cc:	str	r3, [ip, #4]
   116d0:	pop	{r4, r5, r6, lr}
   116d4:	b	10edc <free@plt>
   116d8:	mov	ip, r0
   116dc:	b	116a0 <grafo_remove@@Base+0x90>

000116e0 <grafo_aresta@@Base>:
   116e0:	cmp	r0, #0
   116e4:	ldrne	r3, [r0, #8]
   116e8:	addne	r1, r3, r1, lsl #3
   116ec:	ldrne	r0, [r1, #4]
   116f0:	bne	11708 <grafo_aresta@@Base+0x28>
   116f4:	bx	lr
   116f8:	ldr	r3, [r0]
   116fc:	cmp	r3, r2
   11700:	beq	11714 <grafo_aresta@@Base+0x34>
   11704:	ldr	r0, [r0, #4]
   11708:	cmp	r0, #0
   1170c:	bne	116f8 <grafo_aresta@@Base+0x18>
   11710:	bx	lr
   11714:	mov	r0, #1
   11718:	bx	lr

0001171c <grafo_adiciona@@Base>:
   1171c:	push	{r4, r5, r6, lr}
   11720:	subs	r6, r0, #0
   11724:	popeq	{r4, r5, r6, pc}
   11728:	mov	r5, r1
   1172c:	bl	116e0 <grafo_aresta@@Base>
   11730:	cmp	r0, #0
   11734:	popne	{r4, r5, r6, pc}
   11738:	mov	r0, r2
   1173c:	mov	r4, r2
   11740:	bl	11530 <cria_no@@Base>
   11744:	ldr	r3, [r6, #8]
   11748:	add	r2, r3, r5, lsl #3
   1174c:	ldr	r1, [r2, #4]
   11750:	str	r1, [r0, #4]
   11754:	str	r0, [r2, #4]
   11758:	ldr	r2, [r3, r5, lsl #3]
   1175c:	add	r2, r2, #1
   11760:	str	r2, [r3, r5, lsl #3]
   11764:	ldr	r3, [r6]
   11768:	cmp	r3, #0
   1176c:	popne	{r4, r5, r6, pc}
   11770:	mov	r0, r5
   11774:	bl	11530 <cria_no@@Base>
   11778:	ldr	r3, [r6, #8]
   1177c:	add	r2, r3, r4, lsl #3
   11780:	ldr	r1, [r2, #4]
   11784:	str	r1, [r0, #4]
   11788:	str	r0, [r2, #4]
   1178c:	ldr	r2, [r3, r4, lsl #3]
   11790:	add	r2, r2, #1
   11794:	str	r2, [r3, r4, lsl #3]
   11798:	pop	{r4, r5, r6, pc}

0001179c <grafo_imprime@@Base>:
   1179c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   117a0:	mov	r6, r0
   117a4:	ldr	r7, [pc, #108]	; 11818 <grafo_imprime@@Base+0x7c>
   117a8:	ldr	r8, [pc, #108]	; 1181c <grafo_imprime@@Base+0x80>
   117ac:	ldr	r9, [pc, #108]	; 11820 <grafo_imprime@@Base+0x84>
   117b0:	mov	r4, #0
   117b4:	ldr	r3, [r6, #4]
   117b8:	cmp	r4, r3
   117bc:	blt	117c4 <grafo_imprime@@Base+0x28>
   117c0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117c4:	ldr	r3, [r6, #8]
   117c8:	mov	r1, r4
   117cc:	add	r3, r3, r4, lsl #3
   117d0:	mov	r0, r7
   117d4:	ldr	r5, [r3, #4]
   117d8:	bl	10eb8 <printf@plt>
   117dc:	cmp	r5, #0
   117e0:	movne	r0, r8
   117e4:	ldrne	r1, [r5]
   117e8:	bne	11804 <grafo_imprime@@Base+0x68>
   117ec:	mov	r0, #10
   117f0:	bl	10f48 <putchar@plt>
   117f4:	add	r4, r4, #1
   117f8:	b	117b4 <grafo_imprime@@Base+0x18>
   117fc:	ldr	r1, [r5]
   11800:	mov	r0, r9
   11804:	bl	10eb8 <printf@plt>
   11808:	ldr	r5, [r5, #4]
   1180c:	cmp	r5, #0
   11810:	bne	117fc <grafo_imprime@@Base+0x60>
   11814:	b	117ec <grafo_imprime@@Base+0x50>
   11818:	andeq	r2, r1, r3, lsr r9
   1181c:	andeq	r2, r1, r1, ror r8
   11820:	andeq	r2, r1, r8, lsr r9

00011824 <v_sucessores@@Base>:
   11824:	push	{r4, r5, r6, r7, r8, lr}
   11828:	lsr	r4, r1, #31
   1182c:	cmp	r0, #0
   11830:	orreq	r4, r4, #1
   11834:	cmp	r4, #0
   11838:	movne	r7, #0
   1183c:	bne	11870 <v_sucessores@@Base+0x4c>
   11840:	ldr	r3, [r0, #4]
   11844:	cmp	r1, r3
   11848:	movge	r7, r4
   1184c:	bge	11870 <v_sucessores@@Base+0x4c>
   11850:	mov	r5, r0
   11854:	mov	r6, r1
   11858:	bl	122cc <vetor_novo@@Base>
   1185c:	mvn	r8, #0
   11860:	mov	r7, r0
   11864:	ldr	r3, [r5, #4]
   11868:	cmp	r4, r3
   1186c:	blt	11878 <v_sucessores@@Base+0x54>
   11870:	mov	r0, r7
   11874:	pop	{r4, r5, r6, r7, r8, pc}
   11878:	mov	r2, r4
   1187c:	mov	r1, r6
   11880:	mov	r0, r5
   11884:	bl	116e0 <grafo_aresta@@Base>
   11888:	cmp	r0, #0
   1188c:	beq	118a0 <v_sucessores@@Base+0x7c>
   11890:	mov	r2, r8
   11894:	mov	r1, r4
   11898:	mov	r0, r7
   1189c:	bl	12388 <vetor_insere@@Base>
   118a0:	add	r4, r4, #1
   118a4:	b	11864 <v_sucessores@@Base+0x40>

000118a8 <v_antecessores@@Base>:
   118a8:	push	{r4, r5, r6, r7, r8, lr}
   118ac:	lsr	r4, r1, #31
   118b0:	cmp	r0, #0
   118b4:	orreq	r4, r4, #1
   118b8:	cmp	r4, #0
   118bc:	movne	r7, #0
   118c0:	bne	118f4 <v_antecessores@@Base+0x4c>
   118c4:	ldr	r3, [r0, #4]
   118c8:	cmp	r1, r3
   118cc:	movge	r7, r4
   118d0:	bge	118f4 <v_antecessores@@Base+0x4c>
   118d4:	mov	r5, r0
   118d8:	mov	r6, r1
   118dc:	bl	122cc <vetor_novo@@Base>
   118e0:	mvn	r8, #0
   118e4:	mov	r7, r0
   118e8:	ldr	r3, [r5, #4]
   118ec:	cmp	r4, r3
   118f0:	blt	118fc <v_antecessores@@Base+0x54>
   118f4:	mov	r0, r7
   118f8:	pop	{r4, r5, r6, r7, r8, pc}
   118fc:	mov	r2, r6
   11900:	mov	r1, r4
   11904:	mov	r0, r5
   11908:	bl	116e0 <grafo_aresta@@Base>
   1190c:	cmp	r0, #0
   11910:	beq	11924 <v_antecessores@@Base+0x7c>
   11914:	mov	r2, r8
   11918:	mov	r1, r4
   1191c:	mov	r0, r7
   11920:	bl	12388 <vetor_insere@@Base>
   11924:	add	r4, r4, #1
   11928:	b	118e8 <v_antecessores@@Base+0x40>

0001192c <dfs_helper@@Base>:
   1192c:	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   11930:	ldr	r6, [sp, #40]	; 0x28
   11934:	ldr	r7, [r6, r1, lsl #2]
   11938:	cmp	r7, #0
   1193c:	movne	r0, #0
   11940:	bne	119c0 <dfs_helper@@Base+0x94>
   11944:	cmp	r1, r2
   11948:	str	r3, [r6, r1, lsl #2]
   1194c:	moveq	r0, r3
   11950:	beq	119c0 <dfs_helper@@Base+0x94>
   11954:	mov	r8, r2
   11958:	mov	r9, r1
   1195c:	mov	r5, r0
   11960:	mov	r4, r7
   11964:	add	sl, r3, #1
   11968:	ldr	r3, [r5, #4]
   1196c:	cmp	r4, r3
   11970:	movge	r3, #0
   11974:	strge	r3, [r6, r9, lsl #2]
   11978:	movge	r0, r7
   1197c:	bge	119c0 <dfs_helper@@Base+0x94>
   11980:	mov	r2, r4
   11984:	mov	r1, r9
   11988:	mov	r0, r5
   1198c:	bl	116e0 <grafo_aresta@@Base>
   11990:	cmp	r0, #0
   11994:	bne	119a0 <dfs_helper@@Base+0x74>
   11998:	add	r4, r4, #1
   1199c:	b	11968 <dfs_helper@@Base+0x3c>
   119a0:	str	r6, [sp]
   119a4:	mov	r3, sl
   119a8:	mov	r2, r8
   119ac:	mov	r1, r4
   119b0:	mov	r0, r5
   119b4:	bl	1192c <dfs_helper@@Base>
   119b8:	cmp	r0, #0
   119bc:	beq	11998 <dfs_helper@@Base+0x6c>
   119c0:	add	sp, sp, #8
   119c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000119c8 <grafo_dfs@@Base>:
   119c8:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   119cc:	subs	r4, r0, #0
   119d0:	beq	11a24 <grafo_dfs@@Base+0x5c>
   119d4:	mov	r8, r4
   119d8:	mov	r4, r1
   119dc:	ldr	r0, [r8, #4]
   119e0:	mov	r1, #4
   119e4:	mov	r7, r2
   119e8:	mov	r6, r3
   119ec:	bl	10e94 <calloc@plt>
   119f0:	mov	r2, r7
   119f4:	mov	r3, #1
   119f8:	mov	r1, r4
   119fc:	str	r0, [sp]
   11a00:	mov	r5, r0
   11a04:	mov	r0, r8
   11a08:	bl	1192c <dfs_helper@@Base>
   11a0c:	subs	r7, r0, #0
   11a10:	bne	11a30 <grafo_dfs@@Base+0x68>
   11a14:	mov	r4, r7
   11a18:	mov	r0, r5
   11a1c:	bl	10edc <free@plt>
   11a20:	str	r7, [r6]
   11a24:	mov	r0, r4
   11a28:	add	sp, sp, #8
   11a2c:	pop	{r4, r5, r6, r7, r8, pc}
   11a30:	mov	r1, #4
   11a34:	bl	10e94 <calloc@plt>
   11a38:	mov	r3, #0
   11a3c:	mov	r4, r0
   11a40:	cmp	r3, r7
   11a44:	bge	11a7c <grafo_dfs@@Base+0xb4>
   11a48:	ldr	r0, [r8, #4]
   11a4c:	mov	r2, #0
   11a50:	add	r1, r3, #1
   11a54:	b	11a5c <grafo_dfs@@Base+0x94>
   11a58:	add	r2, r2, #1
   11a5c:	cmp	r2, r0
   11a60:	bge	11a74 <grafo_dfs@@Base+0xac>
   11a64:	ldr	ip, [r5, r2, lsl #2]
   11a68:	cmp	ip, r1
   11a6c:	bne	11a58 <grafo_dfs@@Base+0x90>
   11a70:	str	r2, [r4, r3, lsl #2]
   11a74:	mov	r3, r1
   11a78:	b	11a40 <grafo_dfs@@Base+0x78>
   11a7c:	str	r7, [r6]
   11a80:	mov	r0, r5
   11a84:	bl	10edc <free@plt>
   11a88:	b	11a24 <grafo_dfs@@Base+0x5c>

00011a8c <grafo_bfs@@Base>:
   11a8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a90:	sub	sp, sp, #20
   11a94:	subs	fp, r0, #0
   11a98:	str	r3, [sp, #8]
   11a9c:	moveq	r8, fp
   11aa0:	beq	11be4 <grafo_bfs@@Base+0x158>
   11aa4:	ldr	r6, [fp, #4]
   11aa8:	mov	r5, r1
   11aac:	mov	r0, r6
   11ab0:	mov	r1, #4
   11ab4:	mov	r7, r2
   11ab8:	bl	10e94 <calloc@plt>
   11abc:	mov	r1, #4
   11ac0:	mov	r4, r0
   11ac4:	mov	r0, r6
   11ac8:	bl	10e94 <calloc@plt>
   11acc:	mov	r3, #0
   11ad0:	mvn	r2, #0
   11ad4:	mov	r9, r0
   11ad8:	cmp	r3, r6
   11adc:	blt	11b40 <grafo_bfs@@Base+0xb4>
   11ae0:	mov	r3, #1
   11ae4:	mov	sl, #0
   11ae8:	str	r5, [r4, r5, lsl #2]
   11aec:	str	r5, [r9]
   11af0:	str	r3, [sp, #12]
   11af4:	ldr	r3, [r9, sl, lsl #2]
   11af8:	add	r0, sl, #1
   11afc:	mov	r1, r6
   11b00:	str	r3, [sp, #4]
   11b04:	bl	12788 <vetor_ordena@@Base+0x280>
   11b08:	ldr	r3, [sp, #12]
   11b0c:	mov	r5, #0
   11b10:	mov	sl, r1
   11b14:	cmp	r5, r6
   11b18:	blt	11b4c <grafo_bfs@@Base+0xc0>
   11b1c:	cmp	r3, sl
   11b20:	bne	11af0 <grafo_bfs@@Base+0x64>
   11b24:	ldr	r3, [r4, r7, lsl #2]
   11b28:	cmp	r3, #0
   11b2c:	movge	r3, r7
   11b30:	movge	r6, #1
   11b34:	bge	11ba4 <grafo_bfs@@Base+0x118>
   11b38:	mov	r6, #0
   11b3c:	b	11bcc <grafo_bfs@@Base+0x140>
   11b40:	str	r2, [r4, r3, lsl #2]
   11b44:	add	r3, r3, #1
   11b48:	b	11ad8 <grafo_bfs@@Base+0x4c>
   11b4c:	mov	r2, r5
   11b50:	ldr	r1, [sp, #4]
   11b54:	mov	r0, fp
   11b58:	str	r3, [sp, #12]
   11b5c:	bl	116e0 <grafo_aresta@@Base>
   11b60:	ldr	r3, [sp, #12]
   11b64:	cmp	r0, #0
   11b68:	beq	11b94 <grafo_bfs@@Base+0x108>
   11b6c:	ldr	r2, [r4, r5, lsl #2]
   11b70:	cmn	r2, #1
   11b74:	bne	11b94 <grafo_bfs@@Base+0x108>
   11b78:	ldr	r2, [sp, #4]
   11b7c:	add	r0, r3, #1
   11b80:	mov	r1, r6
   11b84:	str	r5, [r9, r3, lsl #2]
   11b88:	str	r2, [r4, r5, lsl #2]
   11b8c:	bl	12788 <vetor_ordena@@Base+0x280>
   11b90:	mov	r3, r1
   11b94:	add	r5, r5, #1
   11b98:	b	11b14 <grafo_bfs@@Base+0x88>
   11b9c:	add	r6, r6, #1
   11ba0:	mov	r3, r2
   11ba4:	ldr	r2, [r4, r3, lsl #2]
   11ba8:	cmp	r3, r2
   11bac:	bne	11b9c <grafo_bfs@@Base+0x110>
   11bb0:	lsl	r5, r6, #2
   11bb4:	mov	r0, r5
   11bb8:	bl	10f0c <malloc@plt>
   11bbc:	mov	r8, r0
   11bc0:	add	r0, r0, r5
   11bc4:	cmp	r8, r0
   11bc8:	bne	11bf0 <grafo_bfs@@Base+0x164>
   11bcc:	mov	r0, r9
   11bd0:	bl	10edc <free@plt>
   11bd4:	mov	r0, r4
   11bd8:	bl	10edc <free@plt>
   11bdc:	ldr	r3, [sp, #8]
   11be0:	str	r6, [r3]
   11be4:	mov	r0, r8
   11be8:	add	sp, sp, #20
   11bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11bf0:	str	r7, [r0, #-4]!
   11bf4:	ldr	r7, [r4, r7, lsl #2]
   11bf8:	b	11bc4 <grafo_bfs@@Base+0x138>

00011bfc <heap_nova@@Base>:
   11bfc:	push	{r4, r5, r6, lr}
   11c00:	mov	r5, r0
   11c04:	mov	r0, #12
   11c08:	bl	10f0c <malloc@plt>
   11c0c:	subs	r4, r0, #0
   11c10:	beq	11c44 <heap_nova@@Base+0x48>
   11c14:	mov	r3, #0
   11c18:	mov	r0, r5
   11c1c:	stm	r4, {r3, r5}
   11c20:	mov	r1, #4
   11c24:	bl	10e94 <calloc@plt>
   11c28:	cmp	r0, #0
   11c2c:	mov	r5, r0
   11c30:	str	r0, [r4, #8]
   11c34:	bne	11c44 <heap_nova@@Base+0x48>
   11c38:	mov	r0, r4
   11c3c:	bl	10edc <free@plt>
   11c40:	mov	r4, r5
   11c44:	mov	r0, r4
   11c48:	pop	{r4, r5, r6, pc}

00011c4c <heap_apaga@@Base>:
   11c4c:	push	{r4, r5, r6, lr}
   11c50:	subs	r4, r0, #0
   11c54:	movne	r5, #0
   11c58:	movne	r6, r5
   11c5c:	bne	11c8c <heap_apaga@@Base+0x40>
   11c60:	pop	{r4, r5, r6, pc}
   11c64:	ldr	r3, [r4, #8]
   11c68:	ldr	r3, [r3, r5, lsl #2]
   11c6c:	ldr	r0, [r3, #4]
   11c70:	bl	10edc <free@plt>
   11c74:	ldr	r3, [r4, #8]
   11c78:	ldr	r0, [r3, r5, lsl #2]
   11c7c:	bl	10edc <free@plt>
   11c80:	ldr	r3, [r4, #8]
   11c84:	str	r6, [r3, r5, lsl #2]
   11c88:	add	r5, r5, #1
   11c8c:	ldr	r3, [r4]
   11c90:	cmp	r5, r3
   11c94:	blt	11c64 <heap_apaga@@Base+0x18>
   11c98:	ldr	r0, [r4, #8]
   11c9c:	bl	10edc <free@plt>
   11ca0:	mov	r0, r4
   11ca4:	pop	{r4, r5, r6, lr}
   11ca8:	b	10edc <free@plt>

00011cac <elemento_cria@@Base>:
   11cac:	push	{r4, r5, r6, r7, r8, lr}
   11cb0:	mov	r7, r0
   11cb4:	mov	r0, #8
   11cb8:	mov	r6, r1
   11cbc:	bl	10f0c <malloc@plt>
   11cc0:	subs	r4, r0, #0
   11cc4:	beq	11cf8 <elemento_cria@@Base+0x4c>
   11cc8:	mov	r0, r6
   11ccc:	bl	10f30 <strlen@plt>
   11cd0:	mov	r1, #1
   11cd4:	add	r0, r0, r1
   11cd8:	bl	10e94 <calloc@plt>
   11cdc:	cmp	r0, #0
   11ce0:	mov	r5, r0
   11ce4:	str	r0, [r4, #4]
   11ce8:	bne	11d00 <elemento_cria@@Base+0x54>
   11cec:	mov	r0, r4
   11cf0:	bl	10edc <free@plt>
   11cf4:	mov	r4, r5
   11cf8:	mov	r0, r4
   11cfc:	pop	{r4, r5, r6, r7, r8, pc}
   11d00:	mov	r1, r6
   11d04:	bl	10ef4 <strcpy@plt>
   11d08:	str	r7, [r4]
   11d0c:	b	11cf8 <elemento_cria@@Base+0x4c>

00011d10 <mostraHeap@@Base>:
   11d10:	ldr	r3, [r0]
   11d14:	cmp	r3, r1
   11d18:	ble	11db4 <mostraHeap@@Base+0xa4>
   11d1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d20:	mov	r3, r1
   11d24:	mov	r7, #0
   11d28:	cmp	r3, #0
   11d2c:	bgt	11d94 <mostraHeap@@Base+0x84>
   11d30:	lsl	r8, r1, #1
   11d34:	mov	r6, r1
   11d38:	add	r1, r8, #1
   11d3c:	mov	r4, r0
   11d40:	bl	11d10 <mostraHeap@@Base>
   11d44:	ldr	sl, [pc, #112]	; 11dbc <mostraHeap@@Base+0xac>
   11d48:	add	r9, r7, r7, lsl #1
   11d4c:	mov	r5, #0
   11d50:	cmp	r5, r9
   11d54:	bne	11da4 <mostraHeap@@Base+0x94>
   11d58:	ldr	r3, [r4, #8]
   11d5c:	ldr	r0, [pc, #92]	; 11dc0 <mostraHeap@@Base+0xb0>
   11d60:	ldr	r3, [r3, r6, lsl #2]
   11d64:	ldr	r1, [r3, #4]
   11d68:	ldr	r2, [r3]
   11d6c:	bl	10eb8 <printf@plt>
   11d70:	add	r1, r8, #2
   11d74:	mov	r0, r4
   11d78:	bl	11d10 <mostraHeap@@Base>
   11d7c:	cmp	r7, #0
   11d80:	beq	11d88 <mostraHeap@@Base+0x78>
   11d84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d88:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d8c:	mov	r0, #10
   11d90:	b	10f48 <putchar@plt>
   11d94:	sub	r3, r3, #1
   11d98:	add	r7, r7, #1
   11d9c:	asr	r3, r3, #1
   11da0:	b	11d28 <mostraHeap@@Base+0x18>
   11da4:	mov	r0, sl
   11da8:	bl	10eb8 <printf@plt>
   11dac:	add	r5, r5, #1
   11db0:	b	11d50 <mostraHeap@@Base+0x40>
   11db4:	mov	r0, #10
   11db8:	b	11d90 <mostraHeap@@Base+0x80>
   11dbc:	andeq	r2, r1, sp, lsr r9
   11dc0:	andeq	r2, r1, r3, asr #18

00011dc4 <menor_que@@Base>:
   11dc4:	cmp	r1, #0
   11dc8:	cmpne	r0, #0
   11dcc:	beq	11de8 <menor_que@@Base+0x24>
   11dd0:	ldr	r0, [r0]
   11dd4:	ldr	r3, [r1]
   11dd8:	cmp	r0, r3
   11ddc:	movge	r0, #0
   11de0:	movlt	r0, #1
   11de4:	bx	lr
   11de8:	mov	r0, #0
   11dec:	bx	lr

00011df0 <heap_insere@@Base>:
   11df0:	push	{r4, r5, r6, r7, r8, lr}
   11df4:	mov	r4, r0
   11df8:	ldr	r0, [r0]
   11dfc:	ldr	r3, [r4, #4]
   11e00:	cmp	r0, r3
   11e04:	blt	11e10 <heap_insere@@Base+0x20>
   11e08:	mov	r0, #0
   11e0c:	pop	{r4, r5, r6, r7, r8, pc}
   11e10:	mov	r0, r2
   11e14:	bl	11cac <elemento_cria@@Base>
   11e18:	cmp	r0, #0
   11e1c:	beq	11e08 <heap_insere@@Base+0x18>
   11e20:	ldr	r2, [r4]
   11e24:	ldr	r5, [r4, #8]
   11e28:	add	r3, r2, #1
   11e2c:	str	r0, [r5, r2, lsl #2]
   11e30:	str	r3, [r4]
   11e34:	cmp	r2, #0
   11e38:	beq	11e68 <heap_insere@@Base+0x78>
   11e3c:	ldr	r4, [r5, r2, lsl #2]
   11e40:	lsl	r7, r2, #2
   11e44:	sub	r2, r2, #1
   11e48:	mov	r0, r4
   11e4c:	add	r2, r2, r2, lsr #31
   11e50:	asr	r2, r2, #1
   11e54:	ldr	r6, [r5, r2, lsl #2]
   11e58:	mov	r1, r6
   11e5c:	bl	11dc4 <menor_que@@Base>
   11e60:	cmp	r0, #0
   11e64:	bne	11e70 <heap_insere@@Base+0x80>
   11e68:	mov	r0, #1
   11e6c:	pop	{r4, r5, r6, r7, r8, pc}
   11e70:	str	r4, [r5, r2, lsl #2]
   11e74:	str	r6, [r5, r7]
   11e78:	b	11e34 <heap_insere@@Base+0x44>

00011e7c <heap_remove@@Base>:
   11e7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e80:	subs	r4, r0, #0
   11e84:	beq	11f30 <heap_remove@@Base+0xb4>
   11e88:	ldr	r3, [r4]
   11e8c:	cmp	r3, #0
   11e90:	ble	11f30 <heap_remove@@Base+0xb4>
   11e94:	ldr	r3, [r4, #8]
   11e98:	mov	r5, #0
   11e9c:	ldr	r0, [r3]
   11ea0:	ldr	r9, [r0, #4]
   11ea4:	bl	10edc <free@plt>
   11ea8:	ldr	r6, [r4]
   11eac:	ldr	r2, [r4, #8]
   11eb0:	sub	r6, r6, #1
   11eb4:	str	r6, [r4]
   11eb8:	ldr	r3, [r2, r6, lsl #2]
   11ebc:	str	r3, [r2]
   11ec0:	str	r5, [r2, r6, lsl #2]
   11ec4:	lsl	r8, r5, #1
   11ec8:	add	r7, r8, #1
   11ecc:	cmp	r6, r7
   11ed0:	bgt	11edc <heap_remove@@Base+0x60>
   11ed4:	mov	r0, r9
   11ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11edc:	add	r8, r8, #2
   11ee0:	cmp	r6, r8
   11ee4:	ble	11f04 <heap_remove@@Base+0x88>
   11ee8:	add	r3, r5, #1
   11eec:	add	r1, r2, r3, lsl #3
   11ef0:	ldr	r0, [r2, r3, lsl #3]
   11ef4:	ldr	r1, [r1, #-4]
   11ef8:	bl	11dc4 <menor_que@@Base>
   11efc:	cmp	r0, #0
   11f00:	movne	r7, r8
   11f04:	ldr	r4, [r2, r7, lsl #2]
   11f08:	ldr	r8, [r2, r5, lsl #2]
   11f0c:	mov	r0, r4
   11f10:	mov	r1, r8
   11f14:	bl	11dc4 <menor_que@@Base>
   11f18:	cmp	r0, #0
   11f1c:	beq	11ed4 <heap_remove@@Base+0x58>
   11f20:	str	r8, [r2, r7, lsl #2]
   11f24:	str	r4, [r2, r5, lsl #2]
   11f28:	mov	r5, r7
   11f2c:	b	11ec4 <heap_remove@@Base+0x48>
   11f30:	mov	r9, #0
   11f34:	b	11ed4 <heap_remove@@Base+0x58>

00011f38 <novo_str@@Base>:
   11f38:	push	{r4, r5, r6, r7, r8, lr}
   11f3c:	mov	r7, r0
   11f40:	mov	r0, #12
   11f44:	bl	10f0c <malloc@plt>
   11f48:	subs	r4, r0, #0
   11f4c:	beq	11f80 <novo_str@@Base+0x48>
   11f50:	mov	r0, r7
   11f54:	bl	10f30 <strlen@plt>
   11f58:	mov	r6, #0
   11f5c:	add	r0, r0, #1
   11f60:	bl	10f0c <malloc@plt>
   11f64:	cmp	r0, #0
   11f68:	mov	r5, r0
   11f6c:	str	r0, [r4]
   11f70:	bne	11f88 <novo_str@@Base+0x50>
   11f74:	mov	r0, r4
   11f78:	bl	10edc <free@plt>
   11f7c:	mov	r4, r5
   11f80:	mov	r0, r4
   11f84:	pop	{r4, r5, r6, r7, r8, pc}
   11f88:	mov	r1, r7
   11f8c:	bl	10ef4 <strcpy@plt>
   11f90:	str	r6, [r4, #4]
   11f94:	str	r6, [r4, #8]
   11f98:	b	11f80 <novo_str@@Base+0x48>

00011f9c <lista_nova@@Base>:
   11f9c:	push	{r4, lr}
   11fa0:	mov	r0, #12
   11fa4:	bl	10f0c <malloc@plt>
   11fa8:	cmp	r0, #0
   11fac:	movne	r3, #0
   11fb0:	strne	r3, [r0]
   11fb4:	strne	r3, [r0, #4]
   11fb8:	strne	r3, [r0, #8]
   11fbc:	pop	{r4, pc}

00011fc0 <lista_apaga@@Base>:
   11fc0:	push	{r4, r5, r6, lr}
   11fc4:	subs	r5, r0, #0
   11fc8:	bne	11fe8 <lista_apaga@@Base+0x28>
   11fcc:	pop	{r4, r5, r6, pc}
   11fd0:	ldr	r3, [r4, #4]
   11fd4:	ldr	r0, [r4]
   11fd8:	str	r3, [r5]
   11fdc:	bl	10edc <free@plt>
   11fe0:	mov	r0, r4
   11fe4:	bl	10edc <free@plt>
   11fe8:	ldr	r4, [r5]
   11fec:	cmp	r4, #0
   11ff0:	bne	11fd0 <lista_apaga@@Base+0x10>
   11ff4:	mov	r0, r5
   11ff8:	pop	{r4, r5, r6, lr}
   11ffc:	b	10edc <free@plt>

00012000 <lista_tamanho@@Base>:
   12000:	cmp	r0, #0
   12004:	ldrne	r0, [r0, #8]
   12008:	mvneq	r0, #0
   1200c:	bx	lr

00012010 <lista_inicio@@Base>:
   12010:	cmp	r0, #0
   12014:	ldrne	r0, [r0]
   12018:	bx	lr

0001201c <lista_fim@@Base>:
   1201c:	cmp	r0, #0
   12020:	ldrne	r0, [r0, #4]
   12024:	bx	lr

00012028 <lista_insere@@Base>:
   12028:	cmp	r1, #0
   1202c:	cmpne	r0, #0
   12030:	bne	12044 <lista_insere@@Base+0x1c>
   12034:	mov	r0, #0
   12038:	bx	lr
   1203c:	mov	r0, #0
   12040:	pop	{r4, r5, r6, pc}
   12044:	push	{r4, r5, r6, lr}
   12048:	mov	r4, r0
   1204c:	mov	r0, r1
   12050:	mov	r5, r2
   12054:	bl	11f38 <novo_str@@Base>
   12058:	cmp	r0, #0
   1205c:	beq	1203c <lista_insere@@Base+0x14>
   12060:	ldr	r3, [r4, #8]
   12064:	cmp	r5, #0
   12068:	add	r3, r3, #1
   1206c:	str	r3, [r4, #8]
   12070:	ldr	r3, [r4]
   12074:	bne	12098 <lista_insere@@Base+0x70>
   12078:	cmp	r3, #0
   1207c:	streq	r0, [r4, #4]
   12080:	beq	120a8 <lista_insere@@Base+0x80>
   12084:	ldr	r3, [r4, #4]
   12088:	str	r3, [r0, #8]
   1208c:	str	r0, [r3, #4]
   12090:	str	r0, [r4, #4]
   12094:	pop	{r4, r5, r6, pc}
   12098:	cmp	r5, r3
   1209c:	bne	120b0 <lista_insere@@Base+0x88>
   120a0:	str	r5, [r0, #4]
   120a4:	str	r0, [r5, #8]
   120a8:	str	r0, [r4]
   120ac:	pop	{r4, r5, r6, pc}
   120b0:	ldr	r3, [r5, #8]
   120b4:	str	r5, [r0, #4]
   120b8:	str	r3, [r0, #8]
   120bc:	ldr	r3, [r5, #8]
   120c0:	str	r0, [r3, #4]
   120c4:	str	r0, [r5, #8]
   120c8:	pop	{r4, r5, r6, pc}

000120cc <lista_remove@@Base>:
   120cc:	cmp	r1, #0
   120d0:	cmpne	r0, #0
   120d4:	push	{r4, r5, r6, lr}
   120d8:	moveq	r5, #0
   120dc:	beq	12124 <lista_remove@@Base+0x58>
   120e0:	ldr	r3, [r0, #8]
   120e4:	ldr	r2, [r1, #4]
   120e8:	sub	r3, r3, #1
   120ec:	str	r3, [r0, #8]
   120f0:	ldr	r3, [r1, #8]
   120f4:	mov	r4, r1
   120f8:	cmp	r3, #0
   120fc:	strne	r2, [r3, #4]
   12100:	ldr	r5, [r1, #4]
   12104:	streq	r2, [r0]
   12108:	cmp	r5, #0
   1210c:	streq	r3, [r0, #4]
   12110:	strne	r3, [r5, #8]
   12114:	ldr	r0, [r1]
   12118:	bl	10edc <free@plt>
   1211c:	mov	r0, r4
   12120:	bl	10edc <free@plt>
   12124:	mov	r0, r5
   12128:	pop	{r4, r5, r6, pc}

0001212c <lista_pesquisa@@Base>:
   1212c:	cmp	r1, #0
   12130:	cmpne	r0, #0
   12134:	push	{r4, r5, r6, lr}
   12138:	moveq	r4, #1
   1213c:	movne	r4, #0
   12140:	moveq	r4, #0
   12144:	beq	121a8 <lista_pesquisa@@Base+0x7c>
   12148:	cmp	r2, #1
   1214c:	bhi	121a8 <lista_pesquisa@@Base+0x7c>
   12150:	cmp	r2, #0
   12154:	mov	r5, r1
   12158:	ldreq	r4, [r0]
   1215c:	beq	121a0 <lista_pesquisa@@Base+0x74>
   12160:	ldr	r4, [r0, #4]
   12164:	cmp	r4, #0
   12168:	beq	121a8 <lista_pesquisa@@Base+0x7c>
   1216c:	mov	r1, r5
   12170:	ldr	r0, [r4]
   12174:	bl	10eac <strcmp@plt>
   12178:	cmp	r0, #0
   1217c:	beq	121a8 <lista_pesquisa@@Base+0x7c>
   12180:	ldr	r4, [r4, #8]
   12184:	b	12164 <lista_pesquisa@@Base+0x38>
   12188:	mov	r1, r5
   1218c:	ldr	r0, [r4]
   12190:	bl	10eac <strcmp@plt>
   12194:	cmp	r0, #0
   12198:	beq	121a8 <lista_pesquisa@@Base+0x7c>
   1219c:	ldr	r4, [r4, #4]
   121a0:	cmp	r4, #0
   121a4:	bne	12188 <lista_pesquisa@@Base+0x5c>
   121a8:	mov	r0, r4
   121ac:	pop	{r4, r5, r6, pc}

000121b0 <lista_ordena@@Base>:
   121b0:	cmp	r0, #0
   121b4:	beq	1222c <lista_ordena@@Base+0x7c>
   121b8:	ldr	r3, [r0, #8]
   121bc:	cmp	r3, #0
   121c0:	bne	121cc <lista_ordena@@Base+0x1c>
   121c4:	mov	r0, #0
   121c8:	bx	lr
   121cc:	push	{r4, r5, r6, r7, r8, lr}
   121d0:	ldr	r4, [r0]
   121d4:	ldr	r7, [r4, #4]
   121d8:	cmp	r7, #0
   121dc:	bne	121e8 <lista_ordena@@Base+0x38>
   121e0:	mov	r0, #0
   121e4:	pop	{r4, r5, r6, r7, r8, pc}
   121e8:	mov	r5, r4
   121ec:	mov	r6, r7
   121f0:	ldr	r1, [r5]
   121f4:	ldr	r0, [r6]
   121f8:	bl	10eac <strcmp@plt>
   121fc:	cmp	r0, #0
   12200:	movlt	r5, r6
   12204:	ldr	r6, [r6, #4]
   12208:	cmp	r6, #0
   1220c:	bne	121f0 <lista_ordena@@Base+0x40>
   12210:	cmp	r4, r5
   12214:	ldrne	r3, [r4]
   12218:	ldrne	r2, [r5]
   1221c:	strne	r2, [r4]
   12220:	strne	r3, [r5]
   12224:	mov	r4, r7
   12228:	b	121d4 <lista_ordena@@Base+0x24>
   1222c:	mvn	r0, #0
   12230:	bx	lr

00012234 <lista_inverte@@Base>:
   12234:	subs	r3, r0, #0
   12238:	beq	122bc <lista_inverte@@Base+0x88>
   1223c:	ldr	r1, [r3, #8]
   12240:	cmp	r1, #1
   12244:	ble	122c4 <lista_inverte@@Base+0x90>
   12248:	ldr	r2, [r3]
   1224c:	mov	ip, #0
   12250:	sub	r0, r1, #2
   12254:	ldr	r2, [r2, #4]
   12258:	push	{r4, lr}
   1225c:	cmp	ip, r0
   12260:	ldr	r1, [r3]
   12264:	blt	12290 <lista_inverte@@Base+0x5c>
   12268:	ldr	r2, [r3, #4]
   1226c:	mov	r0, #0
   12270:	ldr	ip, [r2, #8]
   12274:	str	ip, [r3, #4]
   12278:	str	r0, [ip, #4]
   1227c:	str	r0, [r2, #8]
   12280:	str	r1, [r2, #4]
   12284:	str	r2, [r1, #8]
   12288:	str	r2, [r3]
   1228c:	pop	{r4, pc}
   12290:	ldr	r4, [r2, #8]
   12294:	ldr	lr, [r2, #4]
   12298:	add	ip, ip, #1
   1229c:	str	lr, [r4, #4]
   122a0:	ldr	lr, [r2, #4]
   122a4:	str	r4, [lr, #8]
   122a8:	str	r1, [r2, #4]
   122ac:	str	r2, [r1, #8]
   122b0:	str	r2, [r3]
   122b4:	mov	r2, lr
   122b8:	b	1225c <lista_inverte@@Base+0x28>
   122bc:	mvn	r0, #0
   122c0:	bx	lr
   122c4:	mov	r0, #0
   122c8:	bx	lr

000122cc <vetor_novo@@Base>:
   122cc:	push	{r4, lr}
   122d0:	mov	r0, #12
   122d4:	bl	10f0c <malloc@plt>
   122d8:	cmp	r0, #0
   122dc:	movne	r3, #0
   122e0:	strne	r3, [r0]
   122e4:	strne	r3, [r0, #4]
   122e8:	strne	r3, [r0, #8]
   122ec:	pop	{r4, pc}

000122f0 <vetor_apaga@@Base>:
   122f0:	push	{r4, lr}
   122f4:	subs	r4, r0, #0
   122f8:	popeq	{r4, pc}
   122fc:	ldr	r0, [r4, #8]
   12300:	bl	10edc <free@plt>
   12304:	mov	r0, r4
   12308:	pop	{r4, lr}
   1230c:	b	10edc <free@plt>

00012310 <vetor_atribui@@Base>:
   12310:	mov	r3, r0
   12314:	clz	r0, r0
   12318:	lsr	r0, r0, #5
   1231c:	orrs	r0, r0, r1, lsr #31
   12320:	bne	12338 <vetor_atribui@@Base+0x28>
   12324:	ldr	r0, [r3]
   12328:	cmp	r1, r0
   1232c:	ldrlt	r3, [r3, #8]
   12330:	strlt	r2, [r3, r1, lsl #2]
   12334:	blt	1233c <vetor_atribui@@Base+0x2c>
   12338:	mvn	r1, #0
   1233c:	mov	r0, r1
   12340:	bx	lr

00012344 <vetor_tamanho@@Base>:
   12344:	cmp	r0, #0
   12348:	ldrne	r0, [r0]
   1234c:	mvneq	r0, #0
   12350:	bx	lr

00012354 <vetor_elemento@@Base>:
   12354:	mov	r3, r0
   12358:	clz	r0, r0
   1235c:	lsr	r0, r0, #5
   12360:	orrs	r2, r0, r1, lsr #31
   12364:	bne	12380 <vetor_elemento@@Base+0x2c>
   12368:	ldr	r2, [r3]
   1236c:	cmp	r1, r2
   12370:	bge	12380 <vetor_elemento@@Base+0x2c>
   12374:	ldr	r3, [r3, #8]
   12378:	ldr	r0, [r3, r1, lsl #2]
   1237c:	bx	lr
   12380:	mov	r0, #-2147483648	; 0x80000000
   12384:	bx	lr

00012388 <vetor_insere@@Base>:
   12388:	cmn	r2, #1
   1238c:	movge	r3, #0
   12390:	movlt	r3, #1
   12394:	cmp	r0, #0
   12398:	orreq	r3, r3, #1
   1239c:	cmp	r3, #0
   123a0:	push	{r4, r5, r6, lr}
   123a4:	beq	123b4 <vetor_insere@@Base+0x2c>
   123a8:	mvn	r5, #0
   123ac:	mov	r0, r5
   123b0:	pop	{r4, r5, r6, pc}
   123b4:	ldr	r3, [r0]
   123b8:	mov	r5, r2
   123bc:	cmp	r2, r3
   123c0:	mov	r4, r0
   123c4:	bgt	123a8 <vetor_insere@@Base+0x20>
   123c8:	cmn	r2, #1
   123cc:	ldr	r2, [r0, #4]
   123d0:	moveq	r5, r3
   123d4:	cmp	r3, r2
   123d8:	mov	r6, r1
   123dc:	beq	1240c <vetor_insere@@Base+0x84>
   123e0:	ldr	r3, [r4]
   123e4:	sub	r1, r3, #1
   123e8:	lsl	r0, r3, #2
   123ec:	cmp	r5, r1
   123f0:	sub	ip, r0, #4
   123f4:	ldr	r2, [r4, #8]
   123f8:	ble	1243c <vetor_insere@@Base+0xb4>
   123fc:	add	r3, r3, #1
   12400:	str	r6, [r2, r5, lsl #2]
   12404:	str	r3, [r4]
   12408:	b	123ac <vetor_insere@@Base+0x24>
   1240c:	cmp	r3, #0
   12410:	moveq	r3, #1
   12414:	lslne	r3, r3, #1
   12418:	str	r3, [r0, #4]
   1241c:	ldr	r1, [r0, #4]
   12420:	ldr	r0, [r0, #8]
   12424:	lsl	r1, r1, #2
   12428:	bl	10ee8 <realloc@plt>
   1242c:	cmp	r0, #0
   12430:	str	r0, [r4, #8]
   12434:	bne	123e0 <vetor_insere@@Base+0x58>
   12438:	b	123a8 <vetor_insere@@Base+0x20>
   1243c:	ldr	lr, [r2, ip]
   12440:	sub	r1, r1, #1
   12444:	str	lr, [r2, r0]
   12448:	mov	r0, ip
   1244c:	b	123ec <vetor_insere@@Base+0x64>

00012450 <vetor_remove@@Base>:
   12450:	mov	r2, r0
   12454:	clz	r0, r0
   12458:	lsr	r0, r0, #5
   1245c:	orrs	r3, r0, r1, lsr #31
   12460:	bne	12478 <vetor_remove@@Base+0x28>
   12464:	ldr	r0, [r2]
   12468:	cmp	r1, r0
   1246c:	addlt	r3, r1, #1
   12470:	lsllt	r1, r1, #2
   12474:	blt	12480 <vetor_remove@@Base+0x30>
   12478:	mvn	r0, #0
   1247c:	bx	lr
   12480:	cmp	r3, r0
   12484:	add	ip, r1, #4
   12488:	bne	1249c <vetor_remove@@Base+0x4c>
   1248c:	sub	r3, r3, #1
   12490:	str	r3, [r2]
   12494:	mov	r0, #0
   12498:	bx	lr
   1249c:	push	{r4, lr}
   124a0:	add	r3, r3, #1
   124a4:	ldr	lr, [r2, #8]
   124a8:	cmp	r3, r0
   124ac:	ldr	r4, [lr, ip]
   124b0:	str	r4, [lr, r1]
   124b4:	mov	r1, ip
   124b8:	add	ip, ip, #4
   124bc:	bne	124a0 <vetor_remove@@Base+0x50>
   124c0:	sub	r3, r3, #1
   124c4:	str	r3, [r2]
   124c8:	mov	r0, #0
   124cc:	pop	{r4, pc}

000124d0 <vetor_pesquisa@@Base>:
   124d0:	subs	r3, r0, #0
   124d4:	movne	r0, #0
   124d8:	ldrne	r2, [r3]
   124dc:	bne	124fc <vetor_pesquisa@@Base+0x2c>
   124e0:	mvn	r0, #0
   124e4:	bx	lr
   124e8:	ldr	ip, [r3, #8]
   124ec:	ldr	ip, [ip, r0, lsl #2]
   124f0:	cmp	ip, r1
   124f4:	bxeq	lr
   124f8:	add	r0, r0, #1
   124fc:	cmp	r0, r2
   12500:	blt	124e8 <vetor_pesquisa@@Base+0x18>
   12504:	b	124e0 <vetor_pesquisa@@Base+0x10>

00012508 <vetor_ordena@@Base>:
   12508:	cmp	r0, #0
   1250c:	beq	12560 <vetor_ordena@@Base+0x58>
   12510:	push	{r4, r5, lr}
   12514:	mov	r3, #1
   12518:	ldr	r5, [r0]
   1251c:	cmp	r3, r5
   12520:	blt	1252c <vetor_ordena@@Base+0x24>
   12524:	mov	r0, #0
   12528:	pop	{r4, r5, pc}
   1252c:	ldr	r1, [r0, #8]
   12530:	mov	r2, r3
   12534:	add	ip, r1, r3, lsl #2
   12538:	ldr	lr, [r1, r3, lsl #2]
   1253c:	ldr	r4, [ip, #-4]
   12540:	cmp	lr, r4
   12544:	bge	12554 <vetor_ordena@@Base+0x4c>
   12548:	subs	r2, r2, #1
   1254c:	str	r4, [ip], #-4
   12550:	bne	1253c <vetor_ordena@@Base+0x34>
   12554:	str	lr, [r1, r2, lsl #2]
   12558:	add	r3, r3, #1
   1255c:	b	1251c <vetor_ordena@@Base+0x14>
   12560:	mvn	r0, #0
   12564:	bx	lr
   12568:	cmp	r1, #0
   1256c:	beq	12778 <vetor_ordena@@Base+0x270>
   12570:	eor	ip, r0, r1
   12574:	rsbmi	r1, r1, #0
   12578:	subs	r2, r1, #1
   1257c:	beq	12744 <vetor_ordena@@Base+0x23c>
   12580:	movs	r3, r0
   12584:	rsbmi	r3, r0, #0
   12588:	cmp	r3, r1
   1258c:	bls	12750 <vetor_ordena@@Base+0x248>
   12590:	tst	r1, r2
   12594:	beq	12760 <vetor_ordena@@Base+0x258>
   12598:	clz	r2, r3
   1259c:	clz	r0, r1
   125a0:	sub	r2, r0, r2
   125a4:	rsbs	r2, r2, #31
   125a8:	addne	r2, r2, r2, lsl #1
   125ac:	mov	r0, #0
   125b0:	addne	pc, pc, r2, lsl #2
   125b4:	nop			; (mov r0, r0)
   125b8:	cmp	r3, r1, lsl #31
   125bc:	adc	r0, r0, r0
   125c0:	subcs	r3, r3, r1, lsl #31
   125c4:	cmp	r3, r1, lsl #30
   125c8:	adc	r0, r0, r0
   125cc:	subcs	r3, r3, r1, lsl #30
   125d0:	cmp	r3, r1, lsl #29
   125d4:	adc	r0, r0, r0
   125d8:	subcs	r3, r3, r1, lsl #29
   125dc:	cmp	r3, r1, lsl #28
   125e0:	adc	r0, r0, r0
   125e4:	subcs	r3, r3, r1, lsl #28
   125e8:	cmp	r3, r1, lsl #27
   125ec:	adc	r0, r0, r0
   125f0:	subcs	r3, r3, r1, lsl #27
   125f4:	cmp	r3, r1, lsl #26
   125f8:	adc	r0, r0, r0
   125fc:	subcs	r3, r3, r1, lsl #26
   12600:	cmp	r3, r1, lsl #25
   12604:	adc	r0, r0, r0
   12608:	subcs	r3, r3, r1, lsl #25
   1260c:	cmp	r3, r1, lsl #24
   12610:	adc	r0, r0, r0
   12614:	subcs	r3, r3, r1, lsl #24
   12618:	cmp	r3, r1, lsl #23
   1261c:	adc	r0, r0, r0
   12620:	subcs	r3, r3, r1, lsl #23
   12624:	cmp	r3, r1, lsl #22
   12628:	adc	r0, r0, r0
   1262c:	subcs	r3, r3, r1, lsl #22
   12630:	cmp	r3, r1, lsl #21
   12634:	adc	r0, r0, r0
   12638:	subcs	r3, r3, r1, lsl #21
   1263c:	cmp	r3, r1, lsl #20
   12640:	adc	r0, r0, r0
   12644:	subcs	r3, r3, r1, lsl #20
   12648:	cmp	r3, r1, lsl #19
   1264c:	adc	r0, r0, r0
   12650:	subcs	r3, r3, r1, lsl #19
   12654:	cmp	r3, r1, lsl #18
   12658:	adc	r0, r0, r0
   1265c:	subcs	r3, r3, r1, lsl #18
   12660:	cmp	r3, r1, lsl #17
   12664:	adc	r0, r0, r0
   12668:	subcs	r3, r3, r1, lsl #17
   1266c:	cmp	r3, r1, lsl #16
   12670:	adc	r0, r0, r0
   12674:	subcs	r3, r3, r1, lsl #16
   12678:	cmp	r3, r1, lsl #15
   1267c:	adc	r0, r0, r0
   12680:	subcs	r3, r3, r1, lsl #15
   12684:	cmp	r3, r1, lsl #14
   12688:	adc	r0, r0, r0
   1268c:	subcs	r3, r3, r1, lsl #14
   12690:	cmp	r3, r1, lsl #13
   12694:	adc	r0, r0, r0
   12698:	subcs	r3, r3, r1, lsl #13
   1269c:	cmp	r3, r1, lsl #12
   126a0:	adc	r0, r0, r0
   126a4:	subcs	r3, r3, r1, lsl #12
   126a8:	cmp	r3, r1, lsl #11
   126ac:	adc	r0, r0, r0
   126b0:	subcs	r3, r3, r1, lsl #11
   126b4:	cmp	r3, r1, lsl #10
   126b8:	adc	r0, r0, r0
   126bc:	subcs	r3, r3, r1, lsl #10
   126c0:	cmp	r3, r1, lsl #9
   126c4:	adc	r0, r0, r0
   126c8:	subcs	r3, r3, r1, lsl #9
   126cc:	cmp	r3, r1, lsl #8
   126d0:	adc	r0, r0, r0
   126d4:	subcs	r3, r3, r1, lsl #8
   126d8:	cmp	r3, r1, lsl #7
   126dc:	adc	r0, r0, r0
   126e0:	subcs	r3, r3, r1, lsl #7
   126e4:	cmp	r3, r1, lsl #6
   126e8:	adc	r0, r0, r0
   126ec:	subcs	r3, r3, r1, lsl #6
   126f0:	cmp	r3, r1, lsl #5
   126f4:	adc	r0, r0, r0
   126f8:	subcs	r3, r3, r1, lsl #5
   126fc:	cmp	r3, r1, lsl #4
   12700:	adc	r0, r0, r0
   12704:	subcs	r3, r3, r1, lsl #4
   12708:	cmp	r3, r1, lsl #3
   1270c:	adc	r0, r0, r0
   12710:	subcs	r3, r3, r1, lsl #3
   12714:	cmp	r3, r1, lsl #2
   12718:	adc	r0, r0, r0
   1271c:	subcs	r3, r3, r1, lsl #2
   12720:	cmp	r3, r1, lsl #1
   12724:	adc	r0, r0, r0
   12728:	subcs	r3, r3, r1, lsl #1
   1272c:	cmp	r3, r1
   12730:	adc	r0, r0, r0
   12734:	subcs	r3, r3, r1
   12738:	cmp	ip, #0
   1273c:	rsbmi	r0, r0, #0
   12740:	bx	lr
   12744:	teq	ip, r0
   12748:	rsbmi	r0, r0, #0
   1274c:	bx	lr
   12750:	movcc	r0, #0
   12754:	asreq	r0, ip, #31
   12758:	orreq	r0, r0, #1
   1275c:	bx	lr
   12760:	clz	r2, r1
   12764:	rsb	r2, r2, #31
   12768:	cmp	ip, #0
   1276c:	lsr	r0, r3, r2
   12770:	rsbmi	r0, r0, #0
   12774:	bx	lr
   12778:	cmp	r0, #0
   1277c:	mvngt	r0, #-2147483648	; 0x80000000
   12780:	movlt	r0, #-2147483648	; 0x80000000
   12784:	b	127a8 <vetor_ordena@@Base+0x2a0>
   12788:	cmp	r1, #0
   1278c:	beq	12778 <vetor_ordena@@Base+0x270>
   12790:	push	{r0, r1, lr}
   12794:	bl	12570 <vetor_ordena@@Base+0x68>
   12798:	pop	{r1, r2, lr}
   1279c:	mul	r3, r2, r0
   127a0:	sub	r1, r1, r3
   127a4:	bx	lr
   127a8:	push	{r1, lr}
   127ac:	mov	r0, #8
   127b0:	bl	10ea0 <raise@plt>
   127b4:	pop	{r1, pc}

000127b8 <__libc_csu_init@@Base>:
   127b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127bc:	mov	r7, r0
   127c0:	ldr	r6, [pc, #72]	; 12810 <__libc_csu_init@@Base+0x58>
   127c4:	ldr	r5, [pc, #72]	; 12814 <__libc_csu_init@@Base+0x5c>
   127c8:	add	r6, pc, r6
   127cc:	add	r5, pc, r5
   127d0:	sub	r6, r6, r5
   127d4:	mov	r8, r1
   127d8:	mov	r9, r2
   127dc:	bl	10e74 <calloc@plt-0x20>
   127e0:	asrs	r6, r6, #2
   127e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   127e8:	mov	r4, #0
   127ec:	add	r4, r4, #1
   127f0:	ldr	r3, [r5], #4
   127f4:	mov	r2, r9
   127f8:	mov	r1, r8
   127fc:	mov	r0, r7
   12800:	blx	r3
   12804:	cmp	r6, r4
   12808:	bne	127ec <__libc_csu_init@@Base+0x34>
   1280c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12810:	andeq	r0, r1, r0, asr #14
   12814:	andeq	r0, r1, r8, lsr r7

00012818 <__libc_csu_fini@@Base>:
   12818:	bx	lr

Disassembly of section .fini:

0001281c <.fini>:
   1281c:	push	{r3, lr}
   12820:	pop	{r3, pc}
