
../repos/charybdis/modules/.libs/m_resv.so:     file format elf32-littlearm


Disassembly of section .init:

00000d0c <_init>:
 d0c:	push	{r3, lr}
 d10:	bl	f18 <call_weak_fn>
 d14:	pop	{r3, pc}

Disassembly of section .plt:

00000d18 <.plt>:
 d18:	push	{lr}		; (str lr, [sp, #-4]!)
 d1c:	ldr	lr, [pc, #4]	; d28 <.plt+0x10>
 d20:	add	lr, pc, lr
 d24:	ldr	pc, [lr, #8]!
 d28:	.word	0x000122d8

00000d2c <propagate_generic@plt>:
 d2c:	add	ip, pc, #0, 12
 d30:	add	ip, ip, #73728	; 0x12000
 d34:	ldr	pc, [ip, #728]!	; 0x2d8

00000d38 <make_conf@plt>:
 d38:	add	ip, pc, #0, 12
 d3c:	add	ip, ip, #73728	; 0x12000
 d40:	ldr	pc, [ip, #720]!	; 0x2d0

00000d44 <rb_current_time@plt>:
 d44:	add	ip, pc, #0, 12
 d48:	add	ip, ip, #73728	; 0x12000
 d4c:	ldr	pc, [ip, #712]!	; 0x2c8

00000d50 <add_to_resv_hash@plt>:
 d50:	add	ip, pc, #0, 12
 d54:	add	ip, ip, #73728	; 0x12000
 d58:	ldr	pc, [ip, #704]!	; 0x2c0

00000d5c <sendto_match_servs@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #73728	; 0x12000
 d64:	ldr	pc, [ip, #696]!	; 0x2b8

00000d68 <__cxa_finalize@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #73728	; 0x12000
 d70:	ldr	pc, [ip, #688]!	; 0x2b0

00000d74 <sendto_one@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #73728	; 0x12000
 d7c:	ldr	pc, [ip, #680]!	; 0x2a8

00000d80 <replace_old_ban@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #73728	; 0x12000
 d88:	ldr	pc, [ip, #672]!	; 0x2a0

00000d8c <rb_outofmemory@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #73728	; 0x12000
 d94:	ldr	pc, [ip, #664]!	; 0x298

00000d98 <resv_nick_fnc@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #73728	; 0x12000
 da0:	ldr	pc, [ip, #656]!	; 0x290

00000da4 <operhash_delete@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #73728	; 0x12000
 dac:	ldr	pc, [ip, #648]!	; 0x288

00000db0 <sendto_realops_snomask@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #73728	; 0x12000
 db8:	ldr	pc, [ip, #640]!	; 0x280

00000dbc <bandb_add@plt>:
 dbc:	add	ip, pc, #0, 12
 dc0:	add	ip, ip, #73728	; 0x12000
 dc4:	ldr	pc, [ip, #632]!	; 0x278

00000dc8 <resv_chan_forcepart@plt>:
 dc8:	add	ip, pc, #0, 12
 dcc:	add	ip, ip, #73728	; 0x12000
 dd0:	ldr	pc, [ip, #624]!	; 0x270

00000dd4 <deactivate_conf@plt>:
 dd4:	add	ip, pc, #0, 12
 dd8:	add	ip, ip, #73728	; 0x12000
 ddc:	ldr	pc, [ip, #616]!	; 0x268

00000de0 <get_oper_name@plt>:
 de0:	add	ip, pc, #0, 12
 de4:	add	ip, ip, #73728	; 0x12000
 de8:	ldr	pc, [ip, #608]!	; 0x260

00000dec <rb_free_rb_dlink_node@plt>:
 dec:	add	ip, pc, #0, 12
 df0:	add	ip, ip, #73728	; 0x12000
 df4:	ldr	pc, [ip, #600]!	; 0x258

00000df8 <cluster_generic@plt>:
 df8:	add	ip, pc, #0, 12
 dfc:	add	ip, ip, #73728	; 0x12000
 e00:	ldr	pc, [ip, #592]!	; 0x250

00000e04 <operhash_add@plt>:
 e04:	add	ip, pc, #0, 12
 e08:	add	ip, ip, #73728	; 0x12000
 e0c:	ldr	pc, [ip, #584]!	; 0x248

00000e10 <strcpy@plt>:
 e10:	add	ip, pc, #0, 12
 e14:	add	ip, ip, #73728	; 0x12000
 e18:	ldr	pc, [ip, #576]!	; 0x240

00000e1c <sendto_server@plt>:
 e1c:	add	ip, pc, #0, 12
 e20:	add	ip, ip, #73728	; 0x12000
 e24:	ldr	pc, [ip, #568]!	; 0x238

00000e28 <malloc@plt>:
 e28:	add	ip, pc, #0, 12
 e2c:	add	ip, ip, #73728	; 0x12000
 e30:	ldr	pc, [ip, #560]!	; 0x230

00000e34 <__gmon_start__@plt>:
 e34:	add	ip, pc, #0, 12
 e38:	add	ip, ip, #73728	; 0x12000
 e3c:	ldr	pc, [ip, #552]!	; 0x228

00000e40 <free_conf@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #73728	; 0x12000
 e48:	ldr	pc, [ip, #544]!	; 0x220

00000e4c <rb_make_rb_dlink_node@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #73728	; 0x12000
 e54:	ldr	pc, [ip, #536]!	; 0x218

00000e58 <strlen@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #73728	; 0x12000
 e60:	ldr	pc, [ip, #528]!	; 0x210

00000e64 <ilog@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #73728	; 0x12000
 e6c:	ldr	pc, [ip, #520]!	; 0x208

00000e70 <match@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #73728	; 0x12000
 e78:	ldr	pc, [ip, #512]!	; 0x200

00000e7c <del_from_resv_hash@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #73728	; 0x12000
 e84:	ldr	pc, [ip, #504]!	; 0x1f8

00000e88 <find_nick_resv_mask@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #73728	; 0x12000
 e90:	ldr	pc, [ip, #496]!	; 0x1f0

00000e94 <valid_temp_time@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #73728	; 0x12000
 e9c:	ldr	pc, [ip, #488]!	; 0x1e8

00000ea0 <sendto_one_notice@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #73728	; 0x12000
 ea8:	ldr	pc, [ip, #480]!	; 0x1e0

00000eac <bandb_del@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #73728	; 0x12000
 eb4:	ldr	pc, [ip, #472]!	; 0x1d8

00000eb8 <atoi@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #73728	; 0x12000
 ec0:	ldr	pc, [ip, #464]!	; 0x1d0

00000ec4 <valid_wild_card_simple@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #73728	; 0x12000
 ecc:	ldr	pc, [ip, #456]!	; 0x1c8

00000ed0 <find_shared_conf@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #73728	; 0x12000
 ed8:	ldr	pc, [ip, #448]!	; 0x1c0

00000edc <privilegeset_in_set@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #73728	; 0x12000
 ee4:	ldr	pc, [ip, #440]!	; 0x1b8

00000ee8 <hash_find_resv@plt>:
 ee8:	add	ip, pc, #0, 12
 eec:	add	ip, ip, #73728	; 0x12000
 ef0:	ldr	pc, [ip, #432]!	; 0x1b0

00000ef4 <irccmp@plt>:
 ef4:	add	ip, pc, #0, 12
 ef8:	add	ip, ip, #73728	; 0x12000
 efc:	ldr	pc, [ip, #424]!	; 0x1a8

00000f00 <clean_resv_nick@plt>:
 f00:	add	ip, pc, #0, 12
 f04:	add	ip, ip, #73728	; 0x12000
 f08:	ldr	pc, [ip, #416]!	; 0x1a0

00000f0c <__assert_fail@plt>:
 f0c:	add	ip, pc, #0, 12
 f10:	add	ip, ip, #73728	; 0x12000
 f14:	ldr	pc, [ip, #408]!	; 0x198

Disassembly of section .text:

00000f18 <call_weak_fn>:
     f18:	ldr	r3, [pc, #20]	; f34 <call_weak_fn+0x1c>
     f1c:	ldr	r2, [pc, #20]	; f38 <call_weak_fn+0x20>
     f20:	add	r3, pc, r3
     f24:	ldr	r2, [r3, r2]
     f28:	cmp	r2, #0
     f2c:	bxeq	lr
     f30:	b	e34 <__gmon_start__@plt>
     f34:	.word	0x000120d8
     f38:	.word	0x000000cc

00000f3c <deregister_tm_clones>:
     f3c:	ldr	r0, [pc, #44]	; f70 <deregister_tm_clones+0x34>
     f40:	ldr	r3, [pc, #44]	; f74 <deregister_tm_clones+0x38>
     f44:	add	r0, pc, r0
     f48:	add	r3, pc, r3
     f4c:	cmp	r3, r0
     f50:	ldr	r3, [pc, #32]	; f78 <deregister_tm_clones+0x3c>
     f54:	add	r3, pc, r3
     f58:	bxeq	lr
     f5c:	ldr	r2, [pc, #24]	; f7c <deregister_tm_clones+0x40>
     f60:	ldr	r3, [r3, r2]
     f64:	cmp	r3, #0
     f68:	bxeq	lr
     f6c:	bx	r3
     f70:	.word	0x0001225c
     f74:	.word	0x00012258
     f78:	.word	0x000120a4
     f7c:	.word	0x000000b4

00000f80 <register_tm_clones>:
     f80:	ldr	r0, [pc, #56]	; fc0 <register_tm_clones+0x40>
     f84:	ldr	r3, [pc, #56]	; fc4 <register_tm_clones+0x44>
     f88:	add	r0, pc, r0
     f8c:	add	r3, pc, r3
     f90:	sub	r1, r3, r0
     f94:	ldr	r3, [pc, #44]	; fc8 <register_tm_clones+0x48>
     f98:	asr	r1, r1, #2
     f9c:	add	r3, pc, r3
     fa0:	add	r1, r1, r1, lsr #31
     fa4:	asrs	r1, r1, #1
     fa8:	bxeq	lr
     fac:	ldr	r2, [pc, #24]	; fcc <register_tm_clones+0x4c>
     fb0:	ldr	r3, [r3, r2]
     fb4:	cmp	r3, #0
     fb8:	bxeq	lr
     fbc:	bx	r3
     fc0:	.word	0x00012218
     fc4:	.word	0x00012214
     fc8:	.word	0x0001205c
     fcc:	.word	0x000000d8

00000fd0 <__do_global_dtors_aux>:
     fd0:	ldr	r3, [pc, #76]	; 1024 <__do_global_dtors_aux+0x54>
     fd4:	ldr	r2, [pc, #76]	; 1028 <__do_global_dtors_aux+0x58>
     fd8:	add	r3, pc, r3
     fdc:	add	r2, pc, r2
     fe0:	ldrb	r3, [r3]
     fe4:	cmp	r3, #0
     fe8:	bxne	lr
     fec:	ldr	r3, [pc, #56]	; 102c <__do_global_dtors_aux+0x5c>
     ff0:	push	{r4, lr}
     ff4:	ldr	r3, [r2, r3]
     ff8:	cmp	r3, #0
     ffc:	beq	100c <__do_global_dtors_aux+0x3c>
    1000:	ldr	r3, [pc, #40]	; 1030 <__do_global_dtors_aux+0x60>
    1004:	ldr	r0, [pc, r3]
    1008:	bl	d68 <__cxa_finalize@plt>
    100c:	bl	f3c <deregister_tm_clones>
    1010:	ldr	r3, [pc, #28]	; 1034 <__do_global_dtors_aux+0x64>
    1014:	mov	r2, #1
    1018:	add	r3, pc, r3
    101c:	strb	r2, [r3]
    1020:	pop	{r4, pc}
    1024:	.word	0x000121c8
    1028:	.word	0x0001201c
    102c:	.word	0x000000b0
    1030:	.word	0x000120dc
    1034:	.word	0x00012188

00001038 <frame_dummy>:
    1038:	b	f80 <register_tm_clones>

0000103c <ms_resv>:
    103c:	push	{r4, r5, fp, lr}
    1040:	add	fp, sp, #8
    1044:	sub	sp, sp, #8
    1048:	mov	r4, r2
    104c:	ldr	r5, [fp, #8]
    1050:	ldmib	r5, {r1, r3}
    1054:	ldr	r0, [r5, #12]
    1058:	str	r0, [sp]
    105c:	mov	r0, r2
    1060:	mov	r2, #0
    1064:	bl	15e4 <propagate_resv>
    1068:	ldr	r0, [r5, #4]
    106c:	ldr	r1, [pc, #76]	; 10c0 <ms_resv+0x84>
    1070:	ldr	r1, [pc, r1]
    1074:	add	r1, r1, #88	; 0x58
    1078:	bl	e70 <match@plt>
    107c:	cmp	r0, #0
    1080:	beq	10b8 <ms_resv+0x7c>
    1084:	ldrh	r0, [r4, #80]	; 0x50
    1088:	cmp	r0, #64	; 0x40
    108c:	bne	10b8 <ms_resv+0x7c>
    1090:	ldr	r0, [r4, #24]
    1094:	cmp	r0, #0
    1098:	beq	10b8 <ms_resv+0x7c>
    109c:	ldr	r1, [r5, #8]
    10a0:	ldr	r2, [r5, #12]
    10a4:	mov	r0, #0
    10a8:	str	r0, [sp]
    10ac:	mov	r0, r4
    10b0:	mov	r3, #0
    10b4:	bl	17d0 <parse_resv>
    10b8:	sub	sp, fp, #8
    10bc:	pop	{r4, r5, fp, pc}
    10c0:	.word	0x00012064

000010c4 <me_resv>:
    10c4:	push	{r4, r5, r6, sl, fp, lr}
    10c8:	add	fp, sp, #16
    10cc:	sub	sp, sp, #8
    10d0:	ldrh	r0, [r2, #80]	; 0x50
    10d4:	cmp	r0, #64	; 0x40
    10d8:	bne	1118 <me_resv+0x54>
    10dc:	mov	r4, r2
    10e0:	ldr	r0, [r2, #24]
    10e4:	cmp	r0, #0
    10e8:	beq	1118 <me_resv+0x54>
    10ec:	ldr	r1, [fp, #8]
    10f0:	ldmib	r1, {r0, r5}
    10f4:	ldr	r6, [r1, #16]
    10f8:	bl	eb8 <atoi@plt>
    10fc:	mov	r3, r0
    1100:	mov	r0, #0
    1104:	str	r0, [sp]
    1108:	mov	r0, r4
    110c:	mov	r1, r5
    1110:	mov	r2, r6
    1114:	bl	17d0 <parse_resv>
    1118:	sub	sp, fp, #16
    111c:	pop	{r4, r5, r6, sl, fp, pc}

00001120 <mo_resv>:
    1120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1124:	add	fp, sp, #28
    1128:	sub	sp, sp, #12
    112c:	mov	r4, r2
    1130:	ldr	r0, [r2, #24]
    1134:	cmp	r0, #0
    1138:	beq	1230 <mo_resv+0x110>
    113c:	ldr	r0, [r0, #36]	; 0x24
    1140:	cmp	r0, #0
    1144:	beq	1230 <mo_resv+0x110>
    1148:	mov	r7, r3
    114c:	ldr	r1, [pc, #528]	; 1364 <mo_resv+0x244>
    1150:	ldr	r1, [pc, r1]
    1154:	ldr	r5, [r1, #324]	; 0x144
    1158:	ldr	r6, [fp, #8]
    115c:	ldr	r1, [pc, #516]	; 1368 <mo_resv+0x248>
    1160:	add	r1, pc, r1
    1164:	bl	edc <privilegeset_in_set@plt>
    1168:	cmp	r0, #0
    116c:	beq	1230 <mo_resv+0x110>
    1170:	str	r5, [sp, #8]
    1174:	ldr	r0, [r6, #4]
    1178:	bl	e94 <valid_temp_time@plt>
    117c:	mov	r5, r0
    1180:	mov	r1, #0
    1184:	cmn	r0, #1
    1188:	movle	r5, r1
    118c:	mov	r8, #1
    1190:	movwgt	r8, #2
    1194:	ldr	r0, [r6, r8, lsl #2]
    1198:	str	r0, [sp, #4]
    119c:	add	sl, r8, #3
    11a0:	add	r9, r8, #1
    11a4:	cmp	sl, r7
    11a8:	bgt	11c8 <mo_resv+0xa8>
    11ac:	ldr	r0, [r6, r9, lsl #2]
    11b0:	ldr	r1, [pc, #448]	; 1378 <mo_resv+0x258>
    11b4:	add	r1, pc, r1
    11b8:	bl	ef4 <irccmp@plt>
    11bc:	mov	r1, #0
    11c0:	cmp	r0, #0
    11c4:	beq	1264 <mo_resv+0x144>
    11c8:	cmp	r9, r7
    11cc:	bge	12ac <mo_resv+0x18c>
    11d0:	ldr	r7, [r6, r9, lsl #2]
    11d4:	cmp	r7, #0
    11d8:	beq	12ac <mo_resv+0x18c>
    11dc:	ldrb	r0, [r7]
    11e0:	cmp	r0, #0
    11e4:	beq	12ac <mo_resv+0x18c>
    11e8:	cmp	r1, #0
    11ec:	beq	12e0 <mo_resv+0x1c0>
    11f0:	str	r7, [sp]
    11f4:	mov	r0, r4
    11f8:	mov	r6, r1
    11fc:	mov	r2, r5
    1200:	ldr	r8, [sp, #4]
    1204:	mov	r3, r8
    1208:	bl	15e4 <propagate_resv>
    120c:	ldr	r0, [pc, #380]	; 1390 <mo_resv+0x270>
    1210:	ldr	r0, [pc, r0]
    1214:	add	r1, r0, #88	; 0x58
    1218:	mov	r0, r6
    121c:	bl	e70 <match@plt>
    1220:	cmp	r0, #0
    1224:	ldr	r6, [sp, #8]
    1228:	bne	131c <mo_resv+0x1fc>
    122c:	b	135c <mo_resv+0x23c>
    1230:	ldr	r0, [pc, #308]	; 136c <mo_resv+0x24c>
    1234:	add	r0, pc, r0
    1238:	str	r0, [sp]
    123c:	add	r3, r4, #88	; 0x58
    1240:	ldr	r0, [pc, #296]	; 1370 <mo_resv+0x250>
    1244:	ldr	r0, [pc, r0]
    1248:	add	r2, r0, #88	; 0x58
    124c:	ldr	r1, [pc, #288]	; 1374 <mo_resv+0x254>
    1250:	add	r1, pc, r1
    1254:	mov	r0, r4
    1258:	bl	d74 <sendto_one@plt>
    125c:	sub	sp, fp, #28
    1260:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1264:	ldr	r0, [r4, #24]
    1268:	cmp	r0, #0
    126c:	beq	12d4 <mo_resv+0x1b4>
    1270:	ldr	r0, [r0, #36]	; 0x24
    1274:	cmp	r0, #0
    1278:	beq	12d4 <mo_resv+0x1b4>
    127c:	ldr	r1, [pc, #248]	; 137c <mo_resv+0x25c>
    1280:	add	r1, pc, r1
    1284:	bl	edc <privilegeset_in_set@plt>
    1288:	cmp	r0, #0
    128c:	beq	12d4 <mo_resv+0x1b4>
    1290:	add	r0, r6, r8, lsl #2
    1294:	ldr	r1, [r0, #8]
    1298:	mov	r0, #0
    129c:	str	r0, [sp, #8]
    12a0:	mov	r9, sl
    12a4:	cmp	r9, r7
    12a8:	blt	11d0 <mo_resv+0xb0>
    12ac:	ldr	r0, [pc, #208]	; 1384 <mo_resv+0x264>
    12b0:	add	r0, pc, r0
    12b4:	str	r0, [sp]
    12b8:	add	r3, r4, #88	; 0x58
    12bc:	ldr	r0, [pc, #196]	; 1388 <mo_resv+0x268>
    12c0:	ldr	r0, [pc, r0]
    12c4:	add	r2, r0, #88	; 0x58
    12c8:	ldr	r1, [pc, #188]	; 138c <mo_resv+0x26c>
    12cc:	add	r1, pc, r1
    12d0:	b	1254 <mo_resv+0x134>
    12d4:	ldr	r0, [pc, #164]	; 1380 <mo_resv+0x260>
    12d8:	add	r0, pc, r0
    12dc:	b	1238 <mo_resv+0x118>
    12e0:	ldr	r6, [sp, #8]
    12e4:	cmp	r6, #0
    12e8:	ldr	r8, [sp, #4]
    12ec:	bne	131c <mo_resv+0x1fc>
    12f0:	ldr	r0, [pc, #160]	; 1398 <mo_resv+0x278>
    12f4:	ldr	r0, [pc, r0]
    12f8:	ldr	r0, [r0, #8]
    12fc:	cmp	r0, #0
    1300:	beq	131c <mo_resv+0x1fc>
    1304:	mov	r0, r4
    1308:	mov	r1, r5
    130c:	mov	r2, r8
    1310:	mov	r3, r7
    1314:	bl	16b8 <cluster_resv>
    1318:	b	1344 <mo_resv+0x224>
    131c:	cmp	r5, #0
    1320:	bne	1344 <mo_resv+0x224>
    1324:	cmp	r6, #0
    1328:	beq	1344 <mo_resv+0x224>
    132c:	ldr	r1, [pc, #96]	; 1394 <mo_resv+0x274>
    1330:	add	r1, pc, r1
    1334:	mov	r0, r4
    1338:	sub	sp, fp, #28
    133c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1340:	b	ea0 <sendto_one_notice@plt>
    1344:	str	r6, [sp]
    1348:	mov	r0, r4
    134c:	mov	r1, r8
    1350:	mov	r2, r7
    1354:	mov	r3, r5
    1358:	bl	17d0 <parse_resv>
    135c:	sub	sp, fp, #28
    1360:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1364:	.word	0x00011f8c
    1368:	.word	0x00001493
    136c:	.word	0x00001614
    1370:	.word	0x00011e90
    1374:	.word	0x000013ad
    1378:	.word	0x00001470
    137c:	.word	0x000013a7
    1380:	.word	0x00001354
    1384:	.word	0x0000133e
    1388:	.word	0x00011e14
    138c:	.word	0x0000136a
    1390:	.word	0x00011ec4
    1394:	.word	0x0000132b
    1398:	.word	0x00011dd4

0000139c <ms_unresv>:
    139c:	push	{r4, r5, fp, lr}
    13a0:	add	fp, sp, #8
    13a4:	sub	sp, sp, #8
    13a8:	mov	r4, r2
    13ac:	ldr	r0, [pc, #128]	; 1434 <ms_unresv+0x98>
    13b0:	ldr	r0, [pc, r0]
    13b4:	ldr	r3, [r0]
    13b8:	ldr	r5, [fp, #8]
    13bc:	ldr	r2, [r5, #4]
    13c0:	ldr	r0, [r5, #8]
    13c4:	ldr	r1, [pc, #108]	; 1438 <ms_unresv+0x9c>
    13c8:	add	r1, pc, r1
    13cc:	str	r1, [sp]
    13d0:	str	r0, [sp, #4]
    13d4:	ldr	r1, [pc, #96]	; 143c <ms_unresv+0xa0>
    13d8:	add	r1, pc, r1
    13dc:	mov	r0, r4
    13e0:	bl	d2c <propagate_generic@plt>
    13e4:	ldr	r0, [r5, #4]
    13e8:	ldr	r1, [pc, #80]	; 1440 <ms_unresv+0xa4>
    13ec:	ldr	r1, [pc, r1]
    13f0:	add	r1, r1, #88	; 0x58
    13f4:	bl	e70 <match@plt>
    13f8:	cmp	r0, #0
    13fc:	beq	142c <ms_unresv+0x90>
    1400:	ldrh	r0, [r4, #80]	; 0x50
    1404:	cmp	r0, #64	; 0x40
    1408:	bne	142c <ms_unresv+0x90>
    140c:	ldr	r0, [r4, #24]
    1410:	cmp	r0, #0
    1414:	beq	142c <ms_unresv+0x90>
    1418:	ldr	r1, [r5, #8]
    141c:	mov	r0, r4
    1420:	sub	sp, fp, #8
    1424:	pop	{r4, r5, fp, lr}
    1428:	b	25a8 <handle_remote_unresv>
    142c:	sub	sp, fp, #8
    1430:	pop	{r4, r5, fp, pc}
    1434:	.word	0x00011d08
    1438:	.word	0x0000133d
    143c:	.word	0x00001214
    1440:	.word	0x00011ce8

00001444 <me_unresv>:
    1444:	ldrh	r0, [r2, #80]	; 0x50
    1448:	cmp	r0, #64	; 0x40
    144c:	bxne	lr
    1450:	ldr	r0, [r2, #24]
    1454:	cmp	r0, #0
    1458:	beq	146c <me_unresv+0x28>
    145c:	ldr	r0, [sp]
    1460:	ldr	r1, [r0, #4]
    1464:	mov	r0, r2
    1468:	b	25a8 <handle_remote_unresv>
    146c:	bx	lr

00001470 <mo_unresv>:
    1470:	push	{r4, r5, r6, r7, fp, lr}
    1474:	add	fp, sp, #16
    1478:	sub	sp, sp, #8
    147c:	mov	r4, r2
    1480:	ldr	r0, [r2, #24]
    1484:	cmp	r0, #0
    1488:	beq	14f0 <mo_unresv+0x80>
    148c:	ldr	r0, [r0, #36]	; 0x24
    1490:	cmp	r0, #0
    1494:	beq	14f0 <mo_unresv+0x80>
    1498:	mov	r6, r3
    149c:	ldr	r7, [fp, #8]
    14a0:	ldr	r1, [pc, #272]	; 15b8 <mo_unresv+0x148>
    14a4:	add	r1, pc, r1
    14a8:	bl	edc <privilegeset_in_set@plt>
    14ac:	cmp	r0, #0
    14b0:	beq	14f0 <mo_unresv+0x80>
    14b4:	mov	r5, #1
    14b8:	cmp	r6, #4
    14bc:	bne	14d8 <mo_unresv+0x68>
    14c0:	ldr	r0, [r7, #8]
    14c4:	ldr	r1, [pc, #252]	; 15c8 <mo_unresv+0x158>
    14c8:	add	r1, pc, r1
    14cc:	bl	ef4 <irccmp@plt>
    14d0:	cmp	r0, #0
    14d4:	beq	1524 <mo_unresv+0xb4>
    14d8:	ldr	r1, [r7, #4]
    14dc:	mov	r0, r4
    14e0:	mov	r2, r5
    14e4:	sub	sp, fp, #16
    14e8:	pop	{r4, r5, r6, r7, fp, lr}
    14ec:	b	200c <remove_resv>
    14f0:	ldr	r0, [pc, #196]	; 15bc <mo_unresv+0x14c>
    14f4:	add	r0, pc, r0
    14f8:	str	r0, [sp]
    14fc:	add	r3, r4, #88	; 0x58
    1500:	ldr	r0, [pc, #184]	; 15c0 <mo_unresv+0x150>
    1504:	ldr	r0, [pc, r0]
    1508:	add	r2, r0, #88	; 0x58
    150c:	ldr	r1, [pc, #176]	; 15c4 <mo_unresv+0x154>
    1510:	add	r1, pc, r1
    1514:	mov	r0, r4
    1518:	bl	d74 <sendto_one@plt>
    151c:	sub	sp, fp, #16
    1520:	pop	{r4, r5, r6, r7, fp, pc}
    1524:	ldr	r0, [r4, #24]
    1528:	cmp	r0, #0
    152c:	beq	15ac <mo_unresv+0x13c>
    1530:	ldr	r0, [r0, #36]	; 0x24
    1534:	cmp	r0, #0
    1538:	beq	15ac <mo_unresv+0x13c>
    153c:	ldr	r1, [pc, #136]	; 15cc <mo_unresv+0x15c>
    1540:	add	r1, pc, r1
    1544:	bl	edc <privilegeset_in_set@plt>
    1548:	cmp	r0, #0
    154c:	beq	15ac <mo_unresv+0x13c>
    1550:	ldr	r0, [pc, #124]	; 15d4 <mo_unresv+0x164>
    1554:	ldr	r0, [pc, r0]
    1558:	ldr	r3, [r0]
    155c:	ldr	r0, [r7, #4]
    1560:	ldr	r2, [r7, #12]
    1564:	ldr	r1, [pc, #108]	; 15d8 <mo_unresv+0x168>
    1568:	add	r1, pc, r1
    156c:	str	r1, [sp]
    1570:	str	r0, [sp, #4]
    1574:	ldr	r1, [pc, #96]	; 15dc <mo_unresv+0x16c>
    1578:	add	r1, pc, r1
    157c:	mov	r0, r4
    1580:	bl	d2c <propagate_generic@plt>
    1584:	ldr	r0, [r7, #12]
    1588:	ldr	r1, [pc, #80]	; 15e0 <mo_unresv+0x170>
    158c:	ldr	r1, [pc, r1]
    1590:	add	r1, r1, #88	; 0x58
    1594:	bl	e70 <match@plt>
    1598:	mov	r5, #0
    159c:	cmp	r0, #0
    15a0:	bne	14d8 <mo_unresv+0x68>
    15a4:	sub	sp, fp, #16
    15a8:	pop	{r4, r5, r6, r7, fp, pc}
    15ac:	ldr	r0, [pc, #28]	; 15d0 <mo_unresv+0x160>
    15b0:	add	r0, pc, r0
    15b4:	b	14f8 <mo_unresv+0x88>
    15b8:	.word	0x0000114f
    15bc:	.word	0x00001354
    15c0:	.word	0x00011bd0
    15c4:	.word	0x000010ed
    15c8:	.word	0x0000115c
    15cc:	.word	0x000010e7
    15d0:	.word	0x0000107c
    15d4:	.word	0x00011b64
    15d8:	.word	0x0000119d
    15dc:	.word	0x00001074
    15e0:	.word	0x00011b48

000015e4 <propagate_resv>:
    15e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    15e8:	add	fp, sp, #24
    15ec:	sub	sp, sp, #24
    15f0:	mov	r6, r3
    15f4:	mov	r4, r1
    15f8:	mov	r5, r0
    15fc:	ldr	r7, [fp, #8]
    1600:	cmp	r2, #0
    1604:	beq	163c <propagate_resv+0x58>
    1608:	ldr	r0, [pc, #160]	; 16b0 <propagate_resv+0xcc>
    160c:	ldr	r0, [pc, r0]
    1610:	ldr	r3, [r0]
    1614:	ldr	r0, [pc, #152]	; 16b4 <propagate_resv+0xd0>
    1618:	add	r0, pc, r0
    161c:	stm	sp, {r0, r4}
    1620:	add	r0, sp, #8
    1624:	stm	r0, {r2, r6, r7}
    1628:	mov	r0, r5
    162c:	mov	r1, r4
    1630:	mov	r2, r3
    1634:	mov	r3, #0
    1638:	b	1694 <propagate_resv+0xb0>
    163c:	ldr	r8, [pc, #92]	; 16a0 <propagate_resv+0xbc>
    1640:	ldr	r8, [pc, r8]
    1644:	ldr	r2, [r8]
    1648:	ldr	r0, [pc, #84]	; 16a4 <propagate_resv+0xc0>
    164c:	add	r0, pc, r0
    1650:	stm	sp, {r0, r4, r6, r7}
    1654:	mov	r9, #0
    1658:	mov	r0, r5
    165c:	mov	r1, r4
    1660:	mov	r3, #0
    1664:	bl	d5c <sendto_match_servs@plt>
    1668:	ldr	r3, [r8]
    166c:	ldr	r0, [pc, #52]	; 16a8 <propagate_resv+0xc4>
    1670:	ldr	r0, [pc, r0]
    1674:	ldr	r2, [r0]
    1678:	ldr	r0, [pc, #44]	; 16ac <propagate_resv+0xc8>
    167c:	add	r0, pc, r0
    1680:	stm	sp, {r0, r4, r9}
    1684:	str	r6, [sp, #12]
    1688:	str	r7, [sp, #16]
    168c:	mov	r0, r5
    1690:	mov	r1, r4
    1694:	bl	d5c <sendto_match_servs@plt>
    1698:	sub	sp, fp, #24
    169c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    16a0:	.word	0x00011a78
    16a4:	.word	0x00001032
    16a8:	.word	0x00011a68
    16ac:	.word	0x00001011
    16b0:	.word	0x00011acc
    16b4:	.word	0x00001075

000016b8 <cluster_resv>:
    16b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    16bc:	add	fp, sp, #28
    16c0:	sub	sp, sp, #36	; 0x24
    16c4:	add	ip, sp, #24
    16c8:	stm	ip, {r0, r2, r3}
    16cc:	ldr	r0, [pc, #224]	; 17b4 <cluster_resv+0xfc>
    16d0:	ldr	r0, [pc, r0]
    16d4:	ldr	r4, [r0]
    16d8:	cmp	r4, #0
    16dc:	beq	17ac <cluster_resv+0xf4>
    16e0:	mov	r6, r1
    16e4:	ldr	r5, [pc, #204]	; 17b8 <cluster_resv+0x100>
    16e8:	ldr	r5, [pc, r5]
    16ec:	ldr	r7, [sp, #28]
    16f0:	ldr	r8, [sp, #32]
    16f4:	ldr	sl, [sp, #24]
    16f8:	b	170c <cluster_resv+0x54>
    16fc:	bl	d5c <sendto_match_servs@plt>
    1700:	ldr	r4, [r4, #8]
    1704:	cmp	r4, #0
    1708:	beq	17ac <cluster_resv+0xf4>
    170c:	ldr	r9, [r4]
    1710:	ldr	r0, [r9, #12]
    1714:	cmp	r6, #0
    1718:	beq	1754 <cluster_resv+0x9c>
    171c:	tst	r0, #128	; 0x80
    1720:	beq	1700 <cluster_resv+0x48>
    1724:	ldr	r2, [r5]
    1728:	ldr	r1, [r9, #8]
    172c:	ldr	r0, [pc, #152]	; 17cc <cluster_resv+0x114>
    1730:	add	r0, pc, r0
    1734:	stm	sp, {r0, r1, r6}
    1738:	ldr	r0, [sp, #28]
    173c:	str	r0, [sp, #12]
    1740:	ldr	r0, [sp, #32]
    1744:	str	r0, [sp, #16]
    1748:	ldr	r0, [sp, #24]
    174c:	mov	r3, #0
    1750:	b	16fc <cluster_resv+0x44>
    1754:	tst	r0, #256	; 0x100
    1758:	beq	1700 <cluster_resv+0x48>
    175c:	ldr	r0, [pc, #88]	; 17bc <cluster_resv+0x104>
    1760:	ldr	r0, [pc, r0]
    1764:	ldr	r2, [r0]
    1768:	ldr	r1, [r9, #8]
    176c:	ldr	r0, [pc, #76]	; 17c0 <cluster_resv+0x108>
    1770:	add	r0, pc, r0
    1774:	stm	sp, {r0, r1, r7, r8}
    1778:	mov	r0, sl
    177c:	mov	r3, #0
    1780:	bl	d5c <sendto_match_servs@plt>
    1784:	ldr	r0, [pc, #56]	; 17c4 <cluster_resv+0x10c>
    1788:	ldr	r0, [pc, r0]
    178c:	ldr	r3, [r0]
    1790:	ldr	r2, [r5]
    1794:	ldr	r1, [r9, #8]
    1798:	ldr	r0, [pc, #40]	; 17c8 <cluster_resv+0x110>
    179c:	add	r0, pc, r0
    17a0:	stm	sp, {r0, r1, r7, r8}
    17a4:	mov	r0, sl
    17a8:	b	16fc <cluster_resv+0x44>
    17ac:	sub	sp, fp, #28
    17b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    17b4:	.word	0x000119f8
    17b8:	.word	0x000119f0
    17bc:	.word	0x00011958
    17c0:	.word	0x00000f0e
    17c4:	.word	0x00011930
    17c8:	.word	0x00000f0b
    17cc:	.word	0x00000f5d

000017d0 <parse_resv>:
    17d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    17d4:	add	fp, sp, #28
    17d8:	sub	sp, sp, #28
    17dc:	mov	r4, r3
    17e0:	mov	sl, r2
    17e4:	mov	r6, r1
    17e8:	mov	r5, r0
    17ec:	ldrb	r0, [r0, #65]	; 0x41
    17f0:	ldr	r7, [fp, #8]
    17f4:	tst	r0, #32
    17f8:	beq	1808 <parse_resv+0x38>
    17fc:	ldrh	r0, [r5, #80]	; 0x50
    1800:	cmp	r0, #64	; 0x40
    1804:	beq	1830 <parse_resv+0x60>
    1808:	mov	r3, #256	; 0x100
    180c:	cmp	r4, #0
    1810:	movwgt	r3, #128	; 0x80
    1814:	ldr	r2, [r5, #32]
    1818:	add	r0, r5, #152	; 0x98
    181c:	add	r1, r5, #163	; 0xa3
    1820:	add	r2, r2, #88	; 0x58
    1824:	bl	ed0 <find_shared_conf@plt>
    1828:	cmp	r0, #0
    182c:	beq	18a0 <parse_resv+0xd0>
    1830:	cmp	r6, #0
    1834:	beq	1854 <parse_resv+0x84>
    1838:	ldrb	r0, [r6]
    183c:	ldr	r1, [pc, #1568]	; 1e64 <parse_resv+0x694>
    1840:	ldr	r1, [pc, r1]
    1844:	add	r0, r1, r0, lsl #2
    1848:	ldrb	r0, [r0, #1]
    184c:	tst	r0, #2
    1850:	bne	18a8 <parse_resv+0xd8>
    1854:	mov	r0, r6
    1858:	bl	f00 <clean_resv_nick@plt>
    185c:	cmp	r0, #0
    1860:	beq	18c4 <parse_resv+0xf4>
    1864:	mov	r0, r6
    1868:	bl	e58 <strlen@plt>
    186c:	cmp	r0, #65	; 0x41
    1870:	bcs	18e0 <parse_resv+0x110>
    1874:	mov	r0, r6
    1878:	bl	ec4 <valid_wild_card_simple@plt>
    187c:	cmp	r0, #0
    1880:	beq	18fc <parse_resv+0x12c>
    1884:	mov	r0, r6
    1888:	bl	e88 <find_nick_resv_mask@plt>
    188c:	cmp	r0, #0
    1890:	beq	1a88 <parse_resv+0x2b8>
    1894:	ldr	r1, [pc, #1552]	; 1eac <parse_resv+0x6dc>
    1898:	add	r1, pc, r1
    189c:	b	18e8 <parse_resv+0x118>
    18a0:	sub	sp, fp, #28
    18a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    18a8:	mov	r0, r6
    18ac:	bl	ee8 <hash_find_resv@plt>
    18b0:	cmp	r0, #0
    18b4:	beq	18d0 <parse_resv+0x100>
    18b8:	ldr	r1, [pc, #1448]	; 1e68 <parse_resv+0x698>
    18bc:	add	r1, pc, r1
    18c0:	b	18e8 <parse_resv+0x118>
    18c4:	ldr	r1, [pc, #1564]	; 1ee8 <parse_resv+0x718>
    18c8:	add	r1, pc, r1
    18cc:	b	18e8 <parse_resv+0x118>
    18d0:	mov	r0, r6
    18d4:	bl	e58 <strlen@plt>
    18d8:	cmp	r0, #201	; 0xc9
    18dc:	bcc	1918 <parse_resv+0x148>
    18e0:	ldr	r1, [pc, #1412]	; 1e6c <parse_resv+0x69c>
    18e4:	add	r1, pc, r1
    18e8:	mov	r0, r5
    18ec:	mov	r2, r6
    18f0:	sub	sp, fp, #28
    18f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    18f8:	b	ea0 <sendto_one_notice@plt>
    18fc:	ldr	r0, [pc, #1440]	; 1ea4 <parse_resv+0x6d4>
    1900:	ldr	r0, [pc, r0]
    1904:	ldr	r2, [r0, #240]	; 0xf0
    1908:	ldr	r1, [pc, #1432]	; 1ea8 <parse_resv+0x6d8>
    190c:	add	r1, pc, r1
    1910:	mov	r0, r5
    1914:	b	18f0 <parse_resv+0x120>
    1918:	bl	d38 <make_conf@plt>
    191c:	mov	r8, r0
    1920:	mov	r0, #0
    1924:	str	r0, [r8, #32]
    1928:	mov	r0, #256	; 0x100
    192c:	str	r0, [r8]
    1930:	bl	d44 <rb_current_time@plt>
    1934:	str	r0, [r8, #40]	; 0x28
    1938:	mov	r0, r6
    193c:	bl	1eec <rb_strdup>
    1940:	str	r0, [r8, #16]
    1944:	mov	r0, sl
    1948:	bl	1eec <rb_strdup>
    194c:	str	r0, [r8, #20]
    1950:	mov	r0, r5
    1954:	bl	de0 <get_oper_name@plt>
    1958:	bl	e04 <operhash_add@plt>
    195c:	str	r0, [r8, #12]
    1960:	cmp	r7, #0
    1964:	beq	1bf8 <parse_resv+0x428>
    1968:	ldr	r0, [r8, #4]
    196c:	orr	r0, r0, #8912896	; 0x880000
    1970:	str	r0, [r8, #4]
    1974:	bl	d44 <rb_current_time@plt>
    1978:	add	r0, r0, r4
    197c:	str	r0, [r8, #44]	; 0x2c
    1980:	str	r0, [r8, #36]	; 0x24
    1984:	mov	r0, r8
    1988:	bl	d80 <replace_old_ban@plt>
    198c:	bl	e4c <rb_make_rb_dlink_node@plt>
    1990:	mov	r1, r0
    1994:	ldr	r2, [pc, #1236]	; 1e70 <parse_resv+0x6a0>
    1998:	ldr	r2, [pc, r2]
    199c:	mov	r0, r8
    19a0:	bl	1f1c <rb_dlinkAdd>
    19a4:	mov	r0, r5
    19a8:	bl	de0 <get_oper_name@plt>
    19ac:	mov	r3, r0
    19b0:	movw	r0, #34953	; 0x8889
    19b4:	movt	r0, #34952	; 0x8888
    19b8:	smmla	r0, r4, r0, r4
    19bc:	asr	r1, r0, #5
    19c0:	add	r9, r1, r0, lsr #31
    19c4:	str	r9, [sp]
    19c8:	stmib	sp, {r6, sl}
    19cc:	ldr	r2, [pc, #1184]	; 1e74 <parse_resv+0x6a4>
    19d0:	add	r2, pc, r2
    19d4:	mov	r0, #256	; 0x100
    19d8:	mov	r1, #0
    19dc:	bl	db0 <sendto_realops_snomask@plt>
    19e0:	mov	r0, r5
    19e4:	bl	de0 <get_oper_name@plt>
    19e8:	mov	r2, r0
    19ec:	stm	sp, {r6, sl}
    19f0:	ldr	r1, [pc, #1152]	; 1e78 <parse_resv+0x6a8>
    19f4:	add	r1, pc, r1
    19f8:	mov	r0, #7
    19fc:	mov	r3, r9
    1a00:	bl	e64 <ilog@plt>
    1a04:	ldr	r1, [pc, #1136]	; 1e7c <parse_resv+0x6ac>
    1a08:	add	r1, pc, r1
    1a0c:	mov	r0, r5
    1a10:	mov	r2, r9
    1a14:	mov	r3, r6
    1a18:	bl	ea0 <sendto_one_notice@plt>
    1a1c:	ldr	r0, [pc, #1116]	; 1e80 <parse_resv+0x6b0>
    1a20:	ldr	r0, [pc, r0]
    1a24:	ldr	r0, [r0]
    1a28:	ldr	r1, [pc, #1108]	; 1e84 <parse_resv+0x6b4>
    1a2c:	ldr	r1, [pc, r1]
    1a30:	ldr	r1, [r1]
    1a34:	ldr	r2, [r8, #16]
    1a38:	ldr	r3, [r8, #36]	; 0x24
    1a3c:	ldr	r7, [r8, #40]	; 0x28
    1a40:	ldr	r6, [r8, #44]	; 0x2c
    1a44:	add	r5, r5, #396	; 0x18c
    1a48:	ldr	ip, [pc, #1080]	; 1e88 <parse_resv+0x6b8>
    1a4c:	add	ip, pc, ip
    1a50:	sub	r6, r6, r7
    1a54:	sub	r3, r3, r7
    1a58:	str	ip, [sp]
    1a5c:	str	r5, [sp, #4]
    1a60:	str	r2, [sp, #8]
    1a64:	str	r7, [sp, #12]
    1a68:	add	r2, sp, #16
    1a6c:	stm	r2, {r3, r6, sl}
    1a70:	orr	r2, r0, r1
    1a74:	mov	r0, #0
    1a78:	mov	r1, #0
    1a7c:	mov	r3, #0
    1a80:	bl	e1c <sendto_server@plt>
    1a84:	b	1d90 <parse_resv+0x5c0>
    1a88:	bl	d38 <make_conf@plt>
    1a8c:	mov	r8, r0
    1a90:	mov	r0, #0
    1a94:	str	r0, [r8, #32]
    1a98:	mov	r0, #512	; 0x200
    1a9c:	str	r0, [r8]
    1aa0:	bl	d44 <rb_current_time@plt>
    1aa4:	str	r0, [r8, #40]	; 0x28
    1aa8:	mov	r0, r6
    1aac:	bl	1eec <rb_strdup>
    1ab0:	str	r0, [r8, #16]
    1ab4:	mov	r0, sl
    1ab8:	bl	1eec <rb_strdup>
    1abc:	str	r0, [r8, #20]
    1ac0:	mov	r0, r5
    1ac4:	bl	de0 <get_oper_name@plt>
    1ac8:	bl	e04 <operhash_add@plt>
    1acc:	str	r0, [r8, #12]
    1ad0:	cmp	r7, #0
    1ad4:	beq	1c84 <parse_resv+0x4b4>
    1ad8:	ldr	r0, [r8, #4]
    1adc:	orr	r0, r0, #8912896	; 0x880000
    1ae0:	str	r0, [r8, #4]
    1ae4:	bl	d44 <rb_current_time@plt>
    1ae8:	add	r0, r0, r4
    1aec:	str	r0, [r8, #44]	; 0x2c
    1af0:	str	r0, [r8, #36]	; 0x24
    1af4:	mov	r0, r8
    1af8:	bl	d80 <replace_old_ban@plt>
    1afc:	bl	e4c <rb_make_rb_dlink_node@plt>
    1b00:	mov	r1, r0
    1b04:	ldr	r2, [pc, #932]	; 1eb0 <parse_resv+0x6e0>
    1b08:	ldr	r2, [pc, r2]
    1b0c:	mov	r0, r8
    1b10:	bl	1f1c <rb_dlinkAdd>
    1b14:	mov	r0, r5
    1b18:	bl	de0 <get_oper_name@plt>
    1b1c:	mov	r3, r0
    1b20:	movw	r0, #34953	; 0x8889
    1b24:	movt	r0, #34952	; 0x8888
    1b28:	smmla	r0, r4, r0, r4
    1b2c:	asr	r1, r0, #5
    1b30:	add	r9, r1, r0, lsr #31
    1b34:	str	r9, [sp]
    1b38:	stmib	sp, {r6, sl}
    1b3c:	ldr	r2, [pc, #880]	; 1eb4 <parse_resv+0x6e4>
    1b40:	add	r2, pc, r2
    1b44:	mov	r0, #256	; 0x100
    1b48:	mov	r1, #0
    1b4c:	bl	db0 <sendto_realops_snomask@plt>
    1b50:	mov	r0, r5
    1b54:	bl	de0 <get_oper_name@plt>
    1b58:	mov	r2, r0
    1b5c:	stm	sp, {r6, sl}
    1b60:	ldr	r1, [pc, #848]	; 1eb8 <parse_resv+0x6e8>
    1b64:	add	r1, pc, r1
    1b68:	mov	r0, #7
    1b6c:	mov	r3, r9
    1b70:	bl	e64 <ilog@plt>
    1b74:	ldr	r1, [pc, #832]	; 1ebc <parse_resv+0x6ec>
    1b78:	add	r1, pc, r1
    1b7c:	mov	r0, r5
    1b80:	mov	r2, r9
    1b84:	mov	r3, r6
    1b88:	bl	ea0 <sendto_one_notice@plt>
    1b8c:	ldr	r0, [pc, #812]	; 1ec0 <parse_resv+0x6f0>
    1b90:	ldr	r0, [pc, r0]
    1b94:	ldr	r0, [r0]
    1b98:	ldr	r1, [pc, #804]	; 1ec4 <parse_resv+0x6f4>
    1b9c:	ldr	r1, [pc, r1]
    1ba0:	ldr	r1, [r1]
    1ba4:	ldr	r2, [r8, #16]
    1ba8:	ldr	r3, [r8, #36]	; 0x24
    1bac:	ldr	r7, [r8, #40]	; 0x28
    1bb0:	ldr	r6, [r8, #44]	; 0x2c
    1bb4:	add	r5, r5, #396	; 0x18c
    1bb8:	ldr	ip, [pc, #776]	; 1ec8 <parse_resv+0x6f8>
    1bbc:	add	ip, pc, ip
    1bc0:	sub	r6, r6, r7
    1bc4:	sub	r3, r3, r7
    1bc8:	str	ip, [sp]
    1bcc:	str	r5, [sp, #4]
    1bd0:	str	r2, [sp, #8]
    1bd4:	str	r7, [sp, #12]
    1bd8:	add	r2, sp, #16
    1bdc:	stm	r2, {r3, r6, sl}
    1be0:	orr	r2, r0, r1
    1be4:	mov	r0, #0
    1be8:	mov	r1, #0
    1bec:	mov	r3, #0
    1bf0:	bl	e1c <sendto_server@plt>
    1bf4:	b	1e34 <parse_resv+0x664>
    1bf8:	cmp	r4, #1
    1bfc:	blt	1d10 <parse_resv+0x540>
    1c00:	bl	d44 <rb_current_time@plt>
    1c04:	add	r0, r0, r4
    1c08:	str	r0, [r8, #36]	; 0x24
    1c0c:	mov	r0, r5
    1c10:	bl	de0 <get_oper_name@plt>
    1c14:	mov	r3, r0
    1c18:	movw	r0, #34953	; 0x8889
    1c1c:	movt	r0, #34952	; 0x8888
    1c20:	umull	r0, r1, r4, r0
    1c24:	lsr	r9, r1, #5
    1c28:	str	r9, [sp]
    1c2c:	stmib	sp, {r6, sl}
    1c30:	ldr	r2, [pc, #596]	; 1e8c <parse_resv+0x6bc>
    1c34:	add	r2, pc, r2
    1c38:	mov	r0, #256	; 0x100
    1c3c:	mov	r1, #0
    1c40:	bl	db0 <sendto_realops_snomask@plt>
    1c44:	mov	r0, r5
    1c48:	bl	de0 <get_oper_name@plt>
    1c4c:	mov	r2, r0
    1c50:	stm	sp, {r6, sl}
    1c54:	ldr	r1, [pc, #564]	; 1e90 <parse_resv+0x6c0>
    1c58:	add	r1, pc, r1
    1c5c:	mov	r0, #7
    1c60:	mov	r3, r9
    1c64:	bl	e64 <ilog@plt>
    1c68:	ldr	r1, [pc, #548]	; 1e94 <parse_resv+0x6c4>
    1c6c:	add	r1, pc, r1
    1c70:	mov	r0, r5
    1c74:	mov	r2, r9
    1c78:	mov	r3, r6
    1c7c:	bl	ea0 <sendto_one_notice@plt>
    1c80:	b	1d90 <parse_resv+0x5c0>
    1c84:	cmp	r4, #1
    1c88:	blt	1db4 <parse_resv+0x5e4>
    1c8c:	bl	d44 <rb_current_time@plt>
    1c90:	add	r0, r0, r4
    1c94:	str	r0, [r8, #36]	; 0x24
    1c98:	mov	r0, r5
    1c9c:	bl	de0 <get_oper_name@plt>
    1ca0:	mov	r3, r0
    1ca4:	movw	r0, #34953	; 0x8889
    1ca8:	movt	r0, #34952	; 0x8888
    1cac:	umull	r0, r1, r4, r0
    1cb0:	lsr	r9, r1, #5
    1cb4:	str	r9, [sp]
    1cb8:	stmib	sp, {r6, sl}
    1cbc:	ldr	r2, [pc, #520]	; 1ecc <parse_resv+0x6fc>
    1cc0:	add	r2, pc, r2
    1cc4:	mov	r0, #256	; 0x100
    1cc8:	mov	r1, #0
    1ccc:	bl	db0 <sendto_realops_snomask@plt>
    1cd0:	mov	r0, r5
    1cd4:	bl	de0 <get_oper_name@plt>
    1cd8:	mov	r2, r0
    1cdc:	stm	sp, {r6, sl}
    1ce0:	ldr	r1, [pc, #488]	; 1ed0 <parse_resv+0x700>
    1ce4:	add	r1, pc, r1
    1ce8:	mov	r0, #7
    1cec:	mov	r3, r9
    1cf0:	bl	e64 <ilog@plt>
    1cf4:	ldr	r1, [pc, #472]	; 1ed4 <parse_resv+0x704>
    1cf8:	add	r1, pc, r1
    1cfc:	mov	r0, r5
    1d00:	mov	r2, r9
    1d04:	mov	r3, r6
    1d08:	bl	ea0 <sendto_one_notice@plt>
    1d0c:	b	1e34 <parse_resv+0x664>
    1d10:	mov	r0, r5
    1d14:	bl	de0 <get_oper_name@plt>
    1d18:	mov	r3, r0
    1d1c:	stm	sp, {r6, sl}
    1d20:	mov	r7, #0
    1d24:	ldr	r2, [pc, #364]	; 1e98 <parse_resv+0x6c8>
    1d28:	add	r2, pc, r2
    1d2c:	mov	r0, #256	; 0x100
    1d30:	mov	r1, #0
    1d34:	bl	db0 <sendto_realops_snomask@plt>
    1d38:	mov	r0, r5
    1d3c:	bl	de0 <get_oper_name@plt>
    1d40:	mov	r2, r0
    1d44:	str	sl, [sp]
    1d48:	ldr	r1, [pc, #332]	; 1e9c <parse_resv+0x6cc>
    1d4c:	add	r1, pc, r1
    1d50:	mov	r0, #7
    1d54:	mov	r3, r6
    1d58:	bl	e64 <ilog@plt>
    1d5c:	ldr	r1, [pc, #316]	; 1ea0 <parse_resv+0x6d0>
    1d60:	add	r1, pc, r1
    1d64:	mov	r0, r5
    1d68:	mov	r2, r6
    1d6c:	bl	ea0 <sendto_one_notice@plt>
    1d70:	ldr	r2, [r8, #16]
    1d74:	ldr	r0, [r8, #20]
    1d78:	stm	sp, {r0, r7}
    1d7c:	str	r7, [sp, #8]
    1d80:	mov	r0, #3
    1d84:	mov	r1, r5
    1d88:	mov	r3, #0
    1d8c:	bl	dbc <bandb_add@plt>
    1d90:	ldr	r0, [r8, #16]
    1d94:	mov	r1, r8
    1d98:	bl	d50 <add_to_resv_hash@plt>
    1d9c:	ldr	r0, [r8, #16]
    1da0:	ldr	r1, [r8, #20]
    1da4:	mov	r2, r4
    1da8:	sub	sp, fp, #28
    1dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1db0:	b	dc8 <resv_chan_forcepart@plt>
    1db4:	mov	r0, r5
    1db8:	bl	de0 <get_oper_name@plt>
    1dbc:	mov	r3, r0
    1dc0:	stm	sp, {r6, sl}
    1dc4:	mov	r7, #0
    1dc8:	ldr	r2, [pc, #264]	; 1ed8 <parse_resv+0x708>
    1dcc:	add	r2, pc, r2
    1dd0:	mov	r0, #256	; 0x100
    1dd4:	mov	r1, #0
    1dd8:	bl	db0 <sendto_realops_snomask@plt>
    1ddc:	mov	r0, r5
    1de0:	bl	de0 <get_oper_name@plt>
    1de4:	mov	r2, r0
    1de8:	str	sl, [sp]
    1dec:	ldr	r1, [pc, #232]	; 1edc <parse_resv+0x70c>
    1df0:	add	r1, pc, r1
    1df4:	mov	r0, #7
    1df8:	mov	r3, r6
    1dfc:	bl	e64 <ilog@plt>
    1e00:	ldr	r1, [pc, #216]	; 1ee0 <parse_resv+0x710>
    1e04:	add	r1, pc, r1
    1e08:	mov	r0, r5
    1e0c:	mov	r2, r6
    1e10:	bl	ea0 <sendto_one_notice@plt>
    1e14:	ldr	r2, [r8, #16]
    1e18:	ldr	r0, [r8, #20]
    1e1c:	stm	sp, {r0, r7}
    1e20:	str	r7, [sp, #8]
    1e24:	mov	r0, #3
    1e28:	mov	r1, r5
    1e2c:	mov	r3, #0
    1e30:	bl	dbc <bandb_add@plt>
    1e34:	bl	e4c <rb_make_rb_dlink_node@plt>
    1e38:	mov	r1, r0
    1e3c:	ldr	r2, [pc, #160]	; 1ee4 <parse_resv+0x714>
    1e40:	ldr	r2, [pc, r2]
    1e44:	mov	r0, r8
    1e48:	bl	1f1c <rb_dlinkAdd>
    1e4c:	ldr	r0, [r8, #16]
    1e50:	ldr	r1, [r8, #20]
    1e54:	mov	r2, r4
    1e58:	sub	sp, fp, #28
    1e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1e60:	b	d98 <resv_nick_fnc@plt>
    1e64:	.word	0x0001188c
    1e68:	.word	0x00000e04
    1e6c:	.word	0x00000e0b
    1e70:	.word	0x0001171c
    1e74:	.word	0x00000d38
    1e78:	.word	0x00000d3f
    1e7c:	.word	0x00000d39
    1e80:	.word	0x000116a0
    1e84:	.word	0x00011690
    1e88:	.word	0x00000d15
    1e8c:	.word	0x00000b4c
    1e90:	.word	0x00000adb
    1e94:	.word	0x00000b42
    1e98:	.word	0x00000aa9
    1e9c:	.word	0x00000aa1
    1ea0:	.word	0x00000a9a
    1ea4:	.word	0x000117dc
    1ea8:	.word	0x00000eff
    1eac:	.word	0x00000fb5
    1eb0:	.word	0x000115ac
    1eb4:	.word	0x00000bc8
    1eb8:	.word	0x00000bcf
    1ebc:	.word	0x00000bc9
    1ec0:	.word	0x00011530
    1ec4:	.word	0x00011520
    1ec8:	.word	0x00000ba5
    1ecc:	.word	0x00000ac0
    1ed0:	.word	0x00000a4f
    1ed4:	.word	0x00000ab6
    1ed8:	.word	0x00000a05
    1edc:	.word	0x000009fd
    1ee0:	.word	0x000009f6
    1ee4:	.word	0x00011270
    1ee8:	.word	0x00000fb1

00001eec <rb_strdup>:
    1eec:	push	{r4, sl, fp, lr}
    1ef0:	add	fp, sp, #8
    1ef4:	mov	r4, r0
    1ef8:	bl	e58 <strlen@plt>
    1efc:	add	r0, r0, #1
    1f00:	bl	e28 <malloc@plt>
    1f04:	cmp	r0, #0
    1f08:	beq	1f18 <rb_strdup+0x2c>
    1f0c:	mov	r1, r4
    1f10:	pop	{r4, sl, fp, lr}
    1f14:	b	e10 <strcpy@plt>
    1f18:	bl	d8c <rb_outofmemory@plt>

00001f1c <rb_dlinkAdd>:
    1f1c:	push	{fp, lr}
    1f20:	mov	fp, sp
    1f24:	cmp	r0, #0
    1f28:	beq	1f88 <rb_dlinkAdd+0x6c>
    1f2c:	cmp	r1, #0
    1f30:	beq	1fa8 <rb_dlinkAdd+0x8c>
    1f34:	cmp	r2, #0
    1f38:	beq	1fc8 <rb_dlinkAdd+0xac>
    1f3c:	mov	r3, #0
    1f40:	stm	r1, {r0, r3}
    1f44:	ldr	r0, [r2]
    1f48:	str	r0, [r1, #8]
    1f4c:	ldr	r0, [r2]
    1f50:	cmp	r0, #0
    1f54:	beq	1f64 <rb_dlinkAdd+0x48>
    1f58:	add	r0, r0, #4
    1f5c:	str	r1, [r0]
    1f60:	b	1f74 <rb_dlinkAdd+0x58>
    1f64:	mov	r0, r2
    1f68:	ldr	r3, [r0, #4]!
    1f6c:	cmp	r3, #0
    1f70:	streq	r1, [r0]
    1f74:	str	r1, [r2]
    1f78:	ldr	r0, [r2, #8]
    1f7c:	add	r0, r0, #1
    1f80:	str	r0, [r2, #8]
    1f84:	pop	{fp, pc}
    1f88:	ldr	r0, [pc, #88]	; 1fe8 <rb_dlinkAdd+0xcc>
    1f8c:	add	r0, pc, r0
    1f90:	ldr	r1, [pc, #84]	; 1fec <rb_dlinkAdd+0xd0>
    1f94:	add	r1, pc, r1
    1f98:	ldr	r3, [pc, #80]	; 1ff0 <rb_dlinkAdd+0xd4>
    1f9c:	add	r3, pc, r3
    1fa0:	mov	r2, #143	; 0x8f
    1fa4:	bl	f0c <__assert_fail@plt>
    1fa8:	ldr	r0, [pc, #68]	; 1ff4 <rb_dlinkAdd+0xd8>
    1fac:	add	r0, pc, r0
    1fb0:	ldr	r1, [pc, #64]	; 1ff8 <rb_dlinkAdd+0xdc>
    1fb4:	add	r1, pc, r1
    1fb8:	ldr	r3, [pc, #60]	; 1ffc <rb_dlinkAdd+0xe0>
    1fbc:	add	r3, pc, r3
    1fc0:	mov	r2, #144	; 0x90
    1fc4:	bl	f0c <__assert_fail@plt>
    1fc8:	ldr	r0, [pc, #48]	; 2000 <rb_dlinkAdd+0xe4>
    1fcc:	add	r0, pc, r0
    1fd0:	ldr	r1, [pc, #44]	; 2004 <rb_dlinkAdd+0xe8>
    1fd4:	add	r1, pc, r1
    1fd8:	ldr	r3, [pc, #40]	; 2008 <rb_dlinkAdd+0xec>
    1fdc:	add	r3, pc, r3
    1fe0:	mov	r2, #145	; 0x91
    1fe4:	bl	f0c <__assert_fail@plt>
    1fe8:	.word	0x00000917
    1fec:	.word	0x0000091c
    1ff0:	.word	0x00000930
    1ff4:	.word	0x0000095b
    1ff8:	.word	0x000008fc
    1ffc:	.word	0x00000910
    2000:	.word	0x00000945
    2004:	.word	0x000008dc
    2008:	.word	0x000008f0

0000200c <remove_resv>:
    200c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2010:	add	fp, sp, #28
    2014:	sub	sp, sp, #28
    2018:	mov	r4, r2
    201c:	mov	r6, r1
    2020:	mov	r8, r0
    2024:	cmp	r1, #0
    2028:	beq	2048 <remove_resv+0x3c>
    202c:	ldrb	r0, [r6]
    2030:	ldr	r1, [pc, #1004]	; 2424 <remove_resv+0x418>
    2034:	ldr	r1, [pc, r1]
    2038:	add	r0, r1, r0, lsl #2
    203c:	ldrb	r0, [r0, #1]
    2040:	tst	r0, #2
    2044:	bne	2084 <remove_resv+0x78>
    2048:	ldr	r0, [pc, #1064]	; 2478 <remove_resv+0x46c>
    204c:	ldr	r0, [pc, r0]
    2050:	ldr	r7, [r0]
    2054:	cmp	r7, #0
    2058:	beq	2278 <remove_resv+0x26c>
    205c:	ldr	r5, [r7]
    2060:	ldr	r0, [r5, #16]
    2064:	mov	r1, r6
    2068:	bl	ef4 <irccmp@plt>
    206c:	cmp	r0, #0
    2070:	beq	2138 <remove_resv+0x12c>
    2074:	ldr	r7, [r7, #8]
    2078:	cmp	r7, #0
    207c:	bne	205c <remove_resv+0x50>
    2080:	b	2278 <remove_resv+0x26c>
    2084:	mov	r0, r6
    2088:	bl	ee8 <hash_find_resv@plt>
    208c:	cmp	r0, #0
    2090:	beq	2278 <remove_resv+0x26c>
    2094:	mov	r5, r0
    2098:	ldr	r0, [r0, #44]	; 0x2c
    209c:	cmp	r0, #0
    20a0:	bne	214c <remove_resv+0x140>
    20a4:	cmp	r4, #0
    20a8:	beq	20ec <remove_resv+0xe0>
    20ac:	ldr	r0, [pc, #932]	; 2458 <remove_resv+0x44c>
    20b0:	ldr	r0, [pc, r0]
    20b4:	ldr	r0, [r0, #8]
    20b8:	cmp	r0, #0
    20bc:	beq	20ec <remove_resv+0xe0>
    20c0:	ldr	r0, [pc, #916]	; 245c <remove_resv+0x450>
    20c4:	ldr	r0, [pc, r0]
    20c8:	ldr	r3, [r0]
    20cc:	ldr	r0, [pc, #908]	; 2460 <remove_resv+0x454>
    20d0:	add	r0, pc, r0
    20d4:	stm	sp, {r0, r6}
    20d8:	ldr	r1, [pc, #900]	; 2464 <remove_resv+0x458>
    20dc:	add	r1, pc, r1
    20e0:	mov	r0, r8
    20e4:	mov	r2, #512	; 0x200
    20e8:	bl	df8 <cluster_generic@plt>
    20ec:	ldr	r1, [pc, #884]	; 2468 <remove_resv+0x45c>
    20f0:	add	r1, pc, r1
    20f4:	mov	r0, r8
    20f8:	mov	r2, r6
    20fc:	bl	ea0 <sendto_one_notice@plt>
    2100:	mov	r0, r8
    2104:	bl	de0 <get_oper_name@plt>
    2108:	mov	r2, r0
    210c:	ldr	r1, [pc, #856]	; 246c <remove_resv+0x460>
    2110:	add	r1, pc, r1
    2114:	mov	r0, #7
    2118:	mov	r3, r6
    211c:	bl	e64 <ilog@plt>
    2120:	ldr	r0, [r5, #36]	; 0x24
    2124:	cmp	r0, #0
    2128:	beq	2384 <remove_resv+0x378>
    212c:	ldr	r4, [pc, #828]	; 2470 <remove_resv+0x464>
    2130:	add	r4, pc, r4
    2134:	b	239c <remove_resv+0x390>
    2138:	cmp	r5, #0
    213c:	beq	2278 <remove_resv+0x26c>
    2140:	ldr	r0, [r5, #44]	; 0x2c
    2144:	cmp	r0, #0
    2148:	beq	22e8 <remove_resv+0x2dc>
    214c:	cmp	r4, #0
    2150:	beq	22dc <remove_resv+0x2d0>
    2154:	mov	r0, r5
    2158:	bl	249c <rb_dlinkFind>
    215c:	cmp	r0, #0
    2160:	beq	237c <remove_resv+0x370>
    2164:	mov	sl, r0
    2168:	ldr	r1, [pc, #720]	; 2440 <remove_resv+0x434>
    216c:	add	r1, pc, r1
    2170:	mov	r0, r8
    2174:	mov	r2, r6
    2178:	bl	ea0 <sendto_one_notice@plt>
    217c:	mov	r0, r8
    2180:	bl	de0 <get_oper_name@plt>
    2184:	mov	r3, r0
    2188:	str	r6, [sp]
    218c:	mov	r9, #0
    2190:	ldr	r2, [pc, #684]	; 2444 <remove_resv+0x438>
    2194:	add	r2, pc, r2
    2198:	mov	r0, #256	; 0x100
    219c:	mov	r1, #0
    21a0:	bl	db0 <sendto_realops_snomask@plt>
    21a4:	mov	r0, r8
    21a8:	bl	de0 <get_oper_name@plt>
    21ac:	mov	r2, r0
    21b0:	ldr	r1, [pc, #656]	; 2448 <remove_resv+0x43c>
    21b4:	add	r1, pc, r1
    21b8:	mov	r0, #7
    21bc:	mov	r3, r6
    21c0:	bl	e64 <ilog@plt>
    21c4:	bl	d44 <rb_current_time@plt>
    21c8:	mov	r4, r0
    21cc:	ldr	r0, [r5, #12]
    21d0:	ldr	r1, [r5, #40]	; 0x28
    21d4:	cmp	r1, r4
    21d8:	mov	r2, r4
    21dc:	addge	r2, r1, #1
    21e0:	str	r2, [r5, #36]	; 0x24
    21e4:	str	r2, [r5, #40]	; 0x28
    21e8:	bl	da4 <operhash_delete@plt>
    21ec:	mov	r0, r8
    21f0:	bl	de0 <get_oper_name@plt>
    21f4:	bl	e04 <operhash_add@plt>
    21f8:	str	r0, [r5, #12]
    21fc:	ldr	r0, [r5, #4]
    2200:	ldr	ip, [r5, #16]
    2204:	ldr	r2, [r5, #40]	; 0x28
    2208:	ldr	r3, [r5, #44]	; 0x2c
    220c:	orr	r0, r0, #8912896	; 0x880000
    2210:	str	r0, [r5, #4]
    2214:	ldr	r0, [pc, #560]	; 244c <remove_resv+0x440>
    2218:	ldr	r0, [pc, r0]
    221c:	ldr	r0, [r0]
    2220:	ldr	r6, [pc, #552]	; 2450 <remove_resv+0x444>
    2224:	ldr	r6, [pc, r6]
    2228:	ldr	r6, [r6]
    222c:	sub	r3, r3, r2
    2230:	add	r7, r8, #396	; 0x18c
    2234:	ldr	r1, [pc, #536]	; 2454 <remove_resv+0x448>
    2238:	add	r1, pc, r1
    223c:	stm	sp, {r1, r7, ip}
    2240:	str	r2, [sp, #12]
    2244:	str	r9, [sp, #16]
    2248:	str	r3, [sp, #20]
    224c:	orr	r2, r6, r0
    2250:	mov	r0, #0
    2254:	mov	r1, #0
    2258:	mov	r3, #0
    225c:	bl	e1c <sendto_server@plt>
    2260:	mov	r0, r5
    2264:	mov	r1, sl
    2268:	mov	r2, r4
    226c:	sub	sp, fp, #28
    2270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2274:	b	dd4 <deactivate_conf@plt>
    2278:	cmp	r4, #0
    227c:	beq	22c0 <remove_resv+0x2b4>
    2280:	ldr	r0, [pc, #416]	; 2428 <remove_resv+0x41c>
    2284:	ldr	r0, [pc, r0]
    2288:	ldr	r0, [r0, #8]
    228c:	cmp	r0, #0
    2290:	beq	22c0 <remove_resv+0x2b4>
    2294:	ldr	r0, [pc, #400]	; 242c <remove_resv+0x420>
    2298:	ldr	r0, [pc, r0]
    229c:	ldr	r3, [r0]
    22a0:	ldr	r0, [pc, #392]	; 2430 <remove_resv+0x424>
    22a4:	add	r0, pc, r0
    22a8:	stm	sp, {r0, r6}
    22ac:	ldr	r1, [pc, #384]	; 2434 <remove_resv+0x428>
    22b0:	add	r1, pc, r1
    22b4:	mov	r0, r8
    22b8:	mov	r2, #512	; 0x200
    22bc:	bl	df8 <cluster_generic@plt>
    22c0:	ldr	r1, [pc, #368]	; 2438 <remove_resv+0x42c>
    22c4:	add	r1, pc, r1
    22c8:	mov	r0, r8
    22cc:	mov	r2, r6
    22d0:	sub	sp, fp, #28
    22d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    22d8:	b	ea0 <sendto_one_notice@plt>
    22dc:	ldr	r1, [pc, #344]	; 243c <remove_resv+0x430>
    22e0:	add	r1, pc, r1
    22e4:	b	22c8 <remove_resv+0x2bc>
    22e8:	cmp	r4, #0
    22ec:	beq	2330 <remove_resv+0x324>
    22f0:	ldr	r0, [pc, #388]	; 247c <remove_resv+0x470>
    22f4:	ldr	r0, [pc, r0]
    22f8:	ldr	r0, [r0, #8]
    22fc:	cmp	r0, #0
    2300:	beq	2330 <remove_resv+0x324>
    2304:	ldr	r0, [pc, #372]	; 2480 <remove_resv+0x474>
    2308:	ldr	r0, [pc, r0]
    230c:	ldr	r3, [r0]
    2310:	ldr	r0, [pc, #364]	; 2484 <remove_resv+0x478>
    2314:	add	r0, pc, r0
    2318:	stm	sp, {r0, r6}
    231c:	ldr	r1, [pc, #356]	; 2488 <remove_resv+0x47c>
    2320:	add	r1, pc, r1
    2324:	mov	r0, r8
    2328:	mov	r2, #512	; 0x200
    232c:	bl	df8 <cluster_generic@plt>
    2330:	ldr	r1, [pc, #340]	; 248c <remove_resv+0x480>
    2334:	add	r1, pc, r1
    2338:	mov	r0, r8
    233c:	mov	r2, r6
    2340:	bl	ea0 <sendto_one_notice@plt>
    2344:	mov	r0, r8
    2348:	bl	de0 <get_oper_name@plt>
    234c:	mov	r2, r0
    2350:	ldr	r1, [pc, #312]	; 2490 <remove_resv+0x484>
    2354:	add	r1, pc, r1
    2358:	mov	r0, #7
    235c:	mov	r3, r6
    2360:	bl	e64 <ilog@plt>
    2364:	ldr	r0, [r5, #36]	; 0x24
    2368:	cmp	r0, #0
    236c:	beq	23cc <remove_resv+0x3c0>
    2370:	ldr	r4, [pc, #284]	; 2494 <remove_resv+0x488>
    2374:	add	r4, pc, r4
    2378:	b	23e4 <remove_resv+0x3d8>
    237c:	sub	sp, fp, #28
    2380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2384:	ldr	r1, [r5, #16]
    2388:	mov	r0, #3
    238c:	mov	r2, #0
    2390:	bl	eac <bandb_del@plt>
    2394:	ldr	r4, [pc, #216]	; 2474 <remove_resv+0x468>
    2398:	add	r4, pc, r4
    239c:	mov	r0, r8
    23a0:	bl	de0 <get_oper_name@plt>
    23a4:	mov	r3, r0
    23a8:	str	r6, [sp]
    23ac:	mov	r0, #256	; 0x100
    23b0:	mov	r1, #0
    23b4:	mov	r2, r4
    23b8:	bl	db0 <sendto_realops_snomask@plt>
    23bc:	mov	r0, r6
    23c0:	mov	r1, r5
    23c4:	bl	e7c <del_from_resv_hash@plt>
    23c8:	b	2414 <remove_resv+0x408>
    23cc:	ldr	r1, [r5, #16]
    23d0:	mov	r0, #3
    23d4:	mov	r2, #0
    23d8:	bl	eac <bandb_del@plt>
    23dc:	ldr	r4, [pc, #180]	; 2498 <remove_resv+0x48c>
    23e0:	add	r4, pc, r4
    23e4:	mov	r0, r8
    23e8:	bl	de0 <get_oper_name@plt>
    23ec:	mov	r3, r0
    23f0:	str	r6, [sp]
    23f4:	mov	r0, #256	; 0x100
    23f8:	mov	r1, #0
    23fc:	mov	r2, r4
    2400:	bl	db0 <sendto_realops_snomask@plt>
    2404:	mov	r0, r7
    2408:	bl	251c <rb_dlinkDelete>
    240c:	mov	r0, r7
    2410:	bl	dec <rb_free_rb_dlink_node@plt>
    2414:	mov	r0, r5
    2418:	sub	sp, fp, #28
    241c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2420:	b	e40 <free_conf@plt>
    2424:	.word	0x00011098
    2428:	.word	0x00010e44
    242c:	.word	0x00010e20
    2430:	.word	0x00000461
    2434:	.word	0x0000033c
    2438:	.word	0x0000065a
    243c:	.word	0x0000064e
    2440:	.word	0x000007f4
    2444:	.word	0x000007e6
    2448:	.word	0x000007ef
    244c:	.word	0x00010ea4
    2450:	.word	0x00010e9c
    2454:	.word	0x00000774
    2458:	.word	0x00011018
    245c:	.word	0x00010ff4
    2460:	.word	0x00000635
    2464:	.word	0x00000510
    2468:	.word	0x00000870
    246c:	.word	0x00000893
    2470:	.word	0x000008bc
    2474:	.word	0x00000632
    2478:	.word	0x00011064
    247c:	.word	0x00010dd4
    2480:	.word	0x00010db0
    2484:	.word	0x000003f1
    2488:	.word	0x000002cc
    248c:	.word	0x0000062c
    2490:	.word	0x0000064f
    2494:	.word	0x00000678
    2498:	.word	0x000005ea

0000249c <rb_dlinkFind>:
    249c:	push	{fp, lr}
    24a0:	mov	fp, sp
    24a4:	cmp	r0, #0
    24a8:	beq	24ec <rb_dlinkFind+0x50>
    24ac:	mov	r1, r0
    24b0:	ldr	r0, [pc, #84]	; 250c <rb_dlinkFind+0x70>
    24b4:	ldr	r0, [pc, r0]
    24b8:	ldr	r2, [r0]
    24bc:	mov	r0, #0
    24c0:	cmp	r2, #0
    24c4:	beq	24e0 <rb_dlinkFind+0x44>
    24c8:	ldr	r3, [r2]
    24cc:	cmp	r3, r1
    24d0:	beq	24e4 <rb_dlinkFind+0x48>
    24d4:	ldr	r2, [r2, #8]
    24d8:	cmp	r2, #0
    24dc:	bne	24c8 <rb_dlinkFind+0x2c>
    24e0:	pop	{fp, pc}
    24e4:	mov	r0, r2
    24e8:	pop	{fp, pc}
    24ec:	ldr	r0, [pc, #28]	; 2510 <rb_dlinkFind+0x74>
    24f0:	add	r0, pc, r0
    24f4:	ldr	r1, [pc, #24]	; 2514 <rb_dlinkFind+0x78>
    24f8:	add	r1, pc, r1
    24fc:	ldr	r3, [pc, #20]	; 2518 <rb_dlinkFind+0x7c>
    2500:	add	r3, pc, r3
    2504:	movw	r2, #311	; 0x137
    2508:	bl	f0c <__assert_fail@plt>
    250c:	.word	0x00010c00
    2510:	.word	0x000003b3
    2514:	.word	0x000003b8
    2518:	.word	0x00000518

0000251c <rb_dlinkDelete>:
    251c:	push	{fp, lr}
    2520:	mov	fp, sp
    2524:	cmp	r0, #0
    2528:	beq	2578 <rb_dlinkDelete+0x5c>
    252c:	ldr	ip, [pc, #100]	; 2598 <rb_dlinkDelete+0x7c>
    2530:	ldr	ip, [pc, ip]
    2534:	ldmib	r0, {r2, r3}
    2538:	add	r1, r3, #4
    253c:	cmp	r3, #0
    2540:	addeq	r1, ip, #4
    2544:	str	r2, [r1]
    2548:	ldmib	r0, {r1, r2}
    254c:	cmp	r1, #0
    2550:	mov	r3, ip
    2554:	addne	r3, r1, #8
    2558:	str	r2, [r3]
    255c:	mov	r1, #0
    2560:	str	r1, [r0, #4]
    2564:	str	r1, [r0, #8]
    2568:	ldr	r0, [ip, #8]
    256c:	sub	r0, r0, #1
    2570:	str	r0, [ip, #8]
    2574:	pop	{fp, pc}
    2578:	ldr	r0, [pc, #28]	; 259c <rb_dlinkDelete+0x80>
    257c:	add	r0, pc, r0
    2580:	ldr	r1, [pc, #24]	; 25a0 <rb_dlinkDelete+0x84>
    2584:	add	r1, pc, r1
    2588:	ldr	r3, [pc, #20]	; 25a4 <rb_dlinkDelete+0x88>
    258c:	add	r3, pc, r3
    2590:	mov	r2, #235	; 0xeb
    2594:	bl	f0c <__assert_fail@plt>
    2598:	.word	0x00010b80
    259c:	.word	0x0000038b
    25a0:	.word	0x0000032c
    25a4:	.word	0x000004c1

000025a8 <handle_remote_unresv>:
    25a8:	push	{r4, r5, fp, lr}
    25ac:	add	fp, sp, #8
    25b0:	mov	r4, r1
    25b4:	mov	r5, r0
    25b8:	ldr	r2, [r0, #32]
    25bc:	add	r0, r0, #152	; 0x98
    25c0:	add	r1, r5, #163	; 0xa3
    25c4:	add	r2, r2, #88	; 0x58
    25c8:	mov	r3, #512	; 0x200
    25cc:	bl	ed0 <find_shared_conf@plt>
    25d0:	cmp	r0, #0
    25d4:	popeq	{r4, r5, fp, pc}
    25d8:	mov	r0, r5
    25dc:	mov	r1, r4
    25e0:	mov	r2, #0
    25e4:	pop	{r4, r5, fp, lr}
    25e8:	b	200c <remove_resv>

Disassembly of section .fini:

000025ec <_fini>:
    25ec:	push	{r3, lr}
    25f0:	pop	{r3, pc}
