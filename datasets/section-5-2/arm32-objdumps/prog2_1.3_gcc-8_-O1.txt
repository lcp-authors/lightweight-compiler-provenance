
../repos/prog2/1.3:     file format elf32-littlearm


Disassembly of section .init:

000105e8 <.init>:
   105e8:	push	{r3, lr}
   105ec:	bl	106b0 <_start@@Base+0x3c>
   105f0:	pop	{r3, pc}

Disassembly of section .plt:

000105f4 <printf@plt-0x14>:
   105f4:	push	{lr}		; (str lr, [sp, #-4]!)
   105f8:	ldr	lr, [pc, #4]	; 10604 <printf@plt-0x4>
   105fc:	add	lr, pc, lr
   10600:	ldr	pc, [lr, #8]!
   10604:	strdeq	r0, [r1], -ip

00010608 <printf@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2556]!	; 0x9fc

00010614 <fopen@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #16, 20	; 0x10000
   1061c:	ldr	pc, [ip, #2548]!	; 0x9f4

00010620 <strcpy@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #16, 20	; 0x10000
   10628:	ldr	pc, [ip, #2540]!	; 0x9ec

0001062c <__libc_start_main@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #16, 20	; 0x10000
   10634:	ldr	pc, [ip, #2532]!	; 0x9e4

00010638 <__gmon_start__@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #16, 20	; 0x10000
   10640:	ldr	pc, [ip, #2524]!	; 0x9dc

00010644 <fclose@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #16, 20	; 0x10000
   1064c:	ldr	pc, [ip, #2516]!	; 0x9d4

00010650 <fseek@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2508]!	; 0x9cc

0001065c <abort@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2500]!	; 0x9c4

00010668 <getc@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2492]!	; 0x9bc

Disassembly of section .text:

00010674 <_start@@Base>:
   10674:	mov	fp, #0
   10678:	mov	lr, #0
   1067c:	pop	{r1}		; (ldr r1, [sp], #4)
   10680:	mov	r2, sp
   10684:	push	{r2}		; (str r2, [sp, #-4]!)
   10688:	push	{r0}		; (str r0, [sp, #-4]!)
   1068c:	ldr	ip, [pc, #16]	; 106a4 <_start@@Base+0x30>
   10690:	push	{ip}		; (str ip, [sp, #-4]!)
   10694:	ldr	r0, [pc, #12]	; 106a8 <_start@@Base+0x34>
   10698:	ldr	r3, [pc, #12]	; 106ac <_start@@Base+0x38>
   1069c:	bl	1062c <__libc_start_main@plt>
   106a0:	bl	1065c <abort@plt>
   106a4:	andeq	r0, r1, r4, lsr #19
   106a8:	andeq	r0, r1, r8, lsl #15
   106ac:	andeq	r0, r1, r4, asr #18
   106b0:	ldr	r3, [pc, #20]	; 106cc <_start@@Base+0x58>
   106b4:	ldr	r2, [pc, #20]	; 106d0 <_start@@Base+0x5c>
   106b8:	add	r3, pc, r3
   106bc:	ldr	r2, [r3, r2]
   106c0:	cmp	r2, #0
   106c4:	bxeq	lr
   106c8:	b	10638 <__gmon_start__@plt>
   106cc:	andeq	r0, r1, r0, asr #18
   106d0:	andeq	r0, r0, r0, lsr r0
   106d4:	ldr	r0, [pc, #24]	; 106f4 <_start@@Base+0x80>
   106d8:	ldr	r3, [pc, #24]	; 106f8 <_start@@Base+0x84>
   106dc:	cmp	r3, r0
   106e0:	bxeq	lr
   106e4:	ldr	r3, [pc, #16]	; 106fc <_start@@Base+0x88>
   106e8:	cmp	r3, #0
   106ec:	bxeq	lr
   106f0:	bx	r3
   106f4:	andeq	r1, r2, ip, lsr r0
   106f8:	andeq	r1, r2, ip, lsr r0
   106fc:	andeq	r0, r0, r0
   10700:	ldr	r0, [pc, #36]	; 1072c <_start@@Base+0xb8>
   10704:	ldr	r1, [pc, #36]	; 10730 <_start@@Base+0xbc>
   10708:	sub	r1, r1, r0
   1070c:	asr	r1, r1, #2
   10710:	add	r1, r1, r1, lsr #31
   10714:	asrs	r1, r1, #1
   10718:	bxeq	lr
   1071c:	ldr	r3, [pc, #16]	; 10734 <_start@@Base+0xc0>
   10720:	cmp	r3, #0
   10724:	bxeq	lr
   10728:	bx	r3
   1072c:	andeq	r1, r2, ip, lsr r0
   10730:	andeq	r1, r2, ip, lsr r0
   10734:	andeq	r0, r0, r0
   10738:	push	{r4, lr}
   1073c:	ldr	r4, [pc, #24]	; 1075c <_start@@Base+0xe8>
   10740:	ldrb	r3, [r4]
   10744:	cmp	r3, #0
   10748:	popne	{r4, pc}
   1074c:	bl	106d4 <_start@@Base+0x60>
   10750:	mov	r3, #1
   10754:	strb	r3, [r4]
   10758:	pop	{r4, pc}
   1075c:	andeq	r1, r2, ip, lsr r0
   10760:	b	10700 <_start@@Base+0x8c>

00010764 <esvaziastring@@Base>:
   10764:	cmp	r1, #0
   10768:	ble	10784 <esvaziastring@@Base+0x20>
   1076c:	sub	r0, r0, #1
   10770:	add	r1, r0, r1
   10774:	mov	r3, #0
   10778:	strb	r3, [r0, #1]!
   1077c:	cmp	r0, r1
   10780:	bne	10778 <esvaziastring@@Base+0x14>
   10784:	bx	lr

00010788 <main@@Base>:
   10788:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1078c:	strd	r6, [sp, #8]
   10790:	strd	r8, [sp, #16]
   10794:	str	sl, [sp, #24]
   10798:	str	lr, [sp, #28]
   1079c:	sub	sp, sp, #2256	; 0x8d0
   107a0:	movw	r1, #2484	; 0x9b4
   107a4:	movt	r1, #1
   107a8:	movw	r0, #2488	; 0x9b8
   107ac:	movt	r0, #1
   107b0:	bl	10614 <fopen@plt>
   107b4:	mov	r4, r0
   107b8:	add	r7, sp, #4
   107bc:	mvn	r8, #60	; 0x3c
   107c0:	movw	r6, #2512	; 0x9d0
   107c4:	movt	r6, #1
   107c8:	mov	r0, r4
   107cc:	bl	10668 <getc@plt>
   107d0:	cmn	r0, #1
   107d4:	beq	1091c <main@@Base+0x194>
   107d8:	cmp	r0, #60	; 0x3c
   107dc:	bne	107c8 <main@@Base+0x40>
   107e0:	mov	r0, r4
   107e4:	bl	10668 <getc@plt>
   107e8:	cmp	r0, #97	; 0x61
   107ec:	bne	107c8 <main@@Base+0x40>
   107f0:	mov	r1, #200	; 0xc8
   107f4:	add	r0, sp, #2048	; 0x800
   107f8:	add	r0, r0, #8
   107fc:	bl	10764 <esvaziastring@@Base>
   10800:	mov	r2, #1
   10804:	mov	r1, #7
   10808:	mov	r0, r4
   1080c:	bl	10650 <fseek@plt>
   10810:	add	r9, sp, #2048	; 0x800
   10814:	add	r9, r9, #8
   10818:	mov	r5, #0
   1081c:	mov	r0, r4
   10820:	bl	10668 <getc@plt>
   10824:	cmp	r0, #34	; 0x22
   10828:	beq	10838 <main@@Base+0xb0>
   1082c:	strb	r0, [r9], #1
   10830:	add	r5, r5, #1
   10834:	b	1081c <main@@Base+0x94>
   10838:	add	r3, sp, #2256	; 0x8d0
   1083c:	add	r3, r3, r5
   10840:	mov	r5, #0
   10844:	strb	r5, [r3, #-200]	; 0xffffff38
   10848:	mov	r9, r7
   1084c:	add	r1, sp, #2048	; 0x800
   10850:	add	r1, r1, #8
   10854:	mov	r0, r7
   10858:	bl	10620 <strcpy@plt>
   1085c:	mov	r1, #200	; 0xc8
   10860:	add	r0, sp, #2048	; 0x800
   10864:	add	r0, r0, #8
   10868:	bl	10764 <esvaziastring@@Base>
   1086c:	mov	r2, #1
   10870:	mov	r1, r2
   10874:	mov	r0, r4
   10878:	bl	10650 <fseek@plt>
   1087c:	mvn	sl, #94	; 0x5e
   10880:	b	10888 <main@@Base+0x100>
   10884:	add	r5, r5, #1
   10888:	mov	r0, r4
   1088c:	bl	10668 <getc@plt>
   10890:	cmp	r0, #60	; 0x3c
   10894:	beq	108cc <main@@Base+0x144>
   10898:	cmp	r0, #225	; 0xe1
   1089c:	addne	r3, sp, #2256	; 0x8d0
   108a0:	addne	r3, r3, r5
   108a4:	strbne	r0, [r3, #-200]	; 0xffffff38
   108a8:	bne	10884 <main@@Base+0xfc>
   108ac:	add	r3, sp, #2256	; 0x8d0
   108b0:	add	r3, r3, r5
   108b4:	strb	r8, [r3, #-200]	; 0xffffff38
   108b8:	add	r5, r5, #1
   108bc:	add	r3, sp, #2256	; 0x8d0
   108c0:	add	r3, r3, r5
   108c4:	strb	sl, [r3, #-200]	; 0xffffff38
   108c8:	b	10884 <main@@Base+0xfc>
   108cc:	add	r3, sp, #2256	; 0x8d0
   108d0:	add	r5, r3, r5
   108d4:	mov	r3, #0
   108d8:	strb	r3, [r5, #-200]	; 0xffffff38
   108dc:	add	r5, r7, #205	; 0xcd
   108e0:	add	r1, sp, #2048	; 0x800
   108e4:	add	r1, r1, #8
   108e8:	mov	r0, r5
   108ec:	bl	10620 <strcpy@plt>
   108f0:	mov	r1, #80	; 0x50
   108f4:	add	r0, sp, #2048	; 0x800
   108f8:	add	r0, r0, #8
   108fc:	bl	10764 <esvaziastring@@Base>
   10900:	mov	r2, r9
   10904:	mov	r1, r5
   10908:	mov	r0, r6
   1090c:	bl	10608 <printf@plt>
   10910:	add	r7, r7, #408	; 0x198
   10914:	add	r7, r7, #2
   10918:	b	107c8 <main@@Base+0x40>
   1091c:	mov	r0, r4
   10920:	bl	10644 <fclose@plt>
   10924:	mov	r0, #0
   10928:	add	sp, sp, #2256	; 0x8d0
   1092c:	ldrd	r4, [sp]
   10930:	ldrd	r6, [sp, #8]
   10934:	ldrd	r8, [sp, #16]
   10938:	ldr	sl, [sp, #24]
   1093c:	add	sp, sp, #28
   10940:	pop	{pc}		; (ldr pc, [sp], #4)

00010944 <__libc_csu_init@@Base>:
   10944:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10948:	mov	r7, r0
   1094c:	ldr	r6, [pc, #72]	; 1099c <__libc_csu_init@@Base+0x58>
   10950:	ldr	r5, [pc, #72]	; 109a0 <__libc_csu_init@@Base+0x5c>
   10954:	add	r6, pc, r6
   10958:	add	r5, pc, r5
   1095c:	sub	r6, r6, r5
   10960:	mov	r8, r1
   10964:	mov	r9, r2
   10968:	bl	105e8 <printf@plt-0x20>
   1096c:	asrs	r6, r6, #2
   10970:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10974:	mov	r4, #0
   10978:	add	r4, r4, #1
   1097c:	ldr	r3, [r5], #4
   10980:	mov	r2, r9
   10984:	mov	r1, r8
   10988:	mov	r0, r7
   1098c:	blx	r3
   10990:	cmp	r6, r4
   10994:	bne	10978 <__libc_csu_init@@Base+0x34>
   10998:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1099c:			; <UNDEFINED> instruction: 0x000105b8
   109a0:			; <UNDEFINED> instruction: 0x000105b0

000109a4 <__libc_csu_fini@@Base>:
   109a4:	bx	lr

Disassembly of section .fini:

000109a8 <.fini>:
   109a8:	push	{r3, lr}
   109ac:	pop	{r3, pc}
