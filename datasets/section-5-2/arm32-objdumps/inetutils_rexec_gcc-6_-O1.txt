
../repos/inetutils/src/rexec:     file format elf32-littlearm


Disassembly of section .init:

00010fbc <.init>:
   10fbc:	push	{r3, lr}
   10fc0:	bl	1130c <tcgetattr@plt+0x48>
   10fc4:	pop	{r3, pc}

Disassembly of section .plt:

00010fc8 <fputs_unlocked@plt-0x14>:
   10fc8:	push	{lr}		; (str lr, [sp, #-4]!)
   10fcc:	ldr	lr, [pc, #4]	; 10fd8 <fputs_unlocked@plt-0x4>
   10fd0:	add	lr, pc, lr
   10fd4:	ldr	pc, [lr, #8]!
   10fd8:	andeq	r8, r1, r8, lsr #32

00010fdc <fputs_unlocked@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #24, 20	; 0x18000
   10fe4:	ldr	pc, [ip, #40]!	; 0x28

00010fe8 <strcmp@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #24, 20	; 0x18000
   10ff0:	ldr	pc, [ip, #32]!

00010ff4 <strtol@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #24, 20	; 0x18000
   10ffc:	ldr	pc, [ip, #24]!

00011000 <setsockopt@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #24, 20	; 0x18000
   11008:	ldr	pc, [ip, #16]!

0001100c <printf@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #24, 20	; 0x18000
   11014:	ldr	pc, [ip, #8]!

00011018 <read@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #24, 20	; 0x18000
   11020:	ldr	pc, [ip, #0]!

00011024 <memmove@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #94208	; 0x17000
   1102c:	ldr	pc, [ip, #4088]!	; 0xff8

00011030 <strchrnul@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #94208	; 0x17000
   11038:	ldr	pc, [ip, #4080]!	; 0xff0

0001103c <free@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #94208	; 0x17000
   11044:	ldr	pc, [ip, #4072]!	; 0xfe8

00011048 <gai_strerror@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #94208	; 0x17000
   11050:	ldr	pc, [ip, #4064]!	; 0xfe0

00011054 <fgets@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #94208	; 0x17000
   1105c:	ldr	pc, [ip, #4056]!	; 0xfd8

00011060 <strndup@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #94208	; 0x17000
   11068:	ldr	pc, [ip, #4048]!	; 0xfd0

0001106c <memcpy@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #94208	; 0x17000
   11074:	ldr	pc, [ip, #4040]!	; 0xfc8

00011078 <fwrite_unlocked@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #94208	; 0x17000
   11080:	ldr	pc, [ip, #4032]!	; 0xfc0

00011084 <select@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #94208	; 0x17000
   1108c:	ldr	pc, [ip, #4024]!	; 0xfb8

00011090 <sleep@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #94208	; 0x17000
   11098:	ldr	pc, [ip, #4016]!	; 0xfb0

0001109c <alarm@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #94208	; 0x17000
   110a4:	ldr	pc, [ip, #4008]!	; 0xfa8

000110a8 <realloc@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #94208	; 0x17000
   110b0:	ldr	pc, [ip, #4000]!	; 0xfa0

000110b4 <strcasecmp@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #94208	; 0x17000
   110bc:	ldr	pc, [ip, #3992]!	; 0xf98

000110c0 <funlockfile@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #94208	; 0x17000
   110c8:	ldr	pc, [ip, #3984]!	; 0xf90

000110cc <accept@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #94208	; 0x17000
   110d4:	ldr	pc, [ip, #3976]!	; 0xf88

000110d8 <fwrite@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #94208	; 0x17000
   110e0:	ldr	pc, [ip, #3968]!	; 0xf80

000110e4 <tcsetattr@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #94208	; 0x17000
   110ec:	ldr	pc, [ip, #3960]!	; 0xf78

000110f0 <error@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #94208	; 0x17000
   110f8:	ldr	pc, [ip, #3952]!	; 0xf70

000110fc <getenv@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #94208	; 0x17000
   11104:	ldr	pc, [ip, #3944]!	; 0xf68

00011108 <malloc@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #94208	; 0x17000
   11110:	ldr	pc, [ip, #3936]!	; 0xf60

00011114 <__libc_start_main@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #94208	; 0x17000
   1111c:	ldr	pc, [ip, #3928]!	; 0xf58

00011120 <strerror@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #94208	; 0x17000
   11128:	ldr	pc, [ip, #3920]!	; 0xf50

0001112c <__ctype_tolower_loc@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #94208	; 0x17000
   11134:	ldr	pc, [ip, #3912]!	; 0xf48

00011138 <__gmon_start__@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #94208	; 0x17000
   11140:	ldr	pc, [ip, #3904]!	; 0xf40

00011144 <mempcpy@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #94208	; 0x17000
   1114c:	ldr	pc, [ip, #3896]!	; 0xf38

00011150 <__ctype_b_loc@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #94208	; 0x17000
   11158:	ldr	pc, [ip, #3888]!	; 0xf30

0001115c <exit@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #94208	; 0x17000
   11164:	ldr	pc, [ip, #3880]!	; 0xf28

00011168 <strlen@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #94208	; 0x17000
   11170:	ldr	pc, [ip, #3872]!	; 0xf20

00011174 <strchr@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #94208	; 0x17000
   1117c:	ldr	pc, [ip, #3864]!	; 0xf18

00011180 <fprintf@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #94208	; 0x17000
   11188:	ldr	pc, [ip, #3856]!	; 0xf10

0001118c <__errno_location@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #94208	; 0x17000
   11194:	ldr	pc, [ip, #3848]!	; 0xf08

00011198 <snprintf@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #94208	; 0x17000
   111a0:	ldr	pc, [ip, #3840]!	; 0xf00

000111a4 <strerror_r@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #94208	; 0x17000
   111ac:	ldr	pc, [ip, #3832]!	; 0xef8

000111b0 <bind@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #94208	; 0x17000
   111b8:	ldr	pc, [ip, #3824]!	; 0xef0

000111bc <memset@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #94208	; 0x17000
   111c4:	ldr	pc, [ip, #3816]!	; 0xee8

000111c8 <write@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #94208	; 0x17000
   111d0:	ldr	pc, [ip, #3808]!	; 0xee0

000111d4 <memchr@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #94208	; 0x17000
   111dc:	ldr	pc, [ip, #3800]!	; 0xed8

000111e0 <shutdown@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #94208	; 0x17000
   111e8:	ldr	pc, [ip, #3792]!	; 0xed0

000111ec <__overflow@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #94208	; 0x17000
   111f4:	ldr	pc, [ip, #3784]!	; 0xec8

000111f8 <strrchr@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #94208	; 0x17000
   11200:	ldr	pc, [ip, #3776]!	; 0xec0

00011204 <listen@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #94208	; 0x17000
   1120c:	ldr	pc, [ip, #3768]!	; 0xeb8

00011210 <vfprintf@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #94208	; 0x17000
   11218:	ldr	pc, [ip, #3760]!	; 0xeb0

0001121c <fputc@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #94208	; 0x17000
   11224:	ldr	pc, [ip, #3752]!	; 0xea8

00011228 <getsockname@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #94208	; 0x17000
   11230:	ldr	pc, [ip, #3744]!	; 0xea0

00011234 <flockfile@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #94208	; 0x17000
   1123c:	ldr	pc, [ip, #3736]!	; 0xe98

00011240 <vsnprintf@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #94208	; 0x17000
   11248:	ldr	pc, [ip, #3728]!	; 0xe90

0001124c <qsort@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #94208	; 0x17000
   11254:	ldr	pc, [ip, #3720]!	; 0xe88

00011258 <freeaddrinfo@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #94208	; 0x17000
   11260:	ldr	pc, [ip, #3712]!	; 0xe80

00011264 <getaddrinfo@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #94208	; 0x17000
   1126c:	ldr	pc, [ip, #3704]!	; 0xe78

00011270 <socket@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #94208	; 0x17000
   11278:	ldr	pc, [ip, #3696]!	; 0xe70

0001127c <isatty@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #94208	; 0x17000
   11284:	ldr	pc, [ip, #3688]!	; 0xe68

00011288 <strncmp@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #94208	; 0x17000
   11290:	ldr	pc, [ip, #3680]!	; 0xe60

00011294 <abort@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #94208	; 0x17000
   1129c:	ldr	pc, [ip, #3672]!	; 0xe58

000112a0 <close@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #94208	; 0x17000
   112a8:	ldr	pc, [ip, #3664]!	; 0xe50

000112ac <connect@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #94208	; 0x17000
   112b4:	ldr	pc, [ip, #3656]!	; 0xe48

000112b8 <__assert_fail@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #94208	; 0x17000
   112c0:	ldr	pc, [ip, #3648]!	; 0xe40

000112c4 <tcgetattr@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #94208	; 0x17000
   112cc:	ldr	pc, [ip, #3640]!	; 0xe38

Disassembly of section .text:

000112d0 <argp_parse@@Base-0x1398>:
   112d0:	mov	fp, #0
   112d4:	mov	lr, #0
   112d8:	pop	{r1}		; (ldr r1, [sp], #4)
   112dc:	mov	r2, sp
   112e0:	push	{r2}		; (str r2, [sp, #-4]!)
   112e4:	push	{r0}		; (str r0, [sp, #-4]!)
   112e8:	ldr	ip, [pc, #16]	; 11300 <tcgetattr@plt+0x3c>
   112ec:	push	{ip}		; (str ip, [sp, #-4]!)
   112f0:	ldr	r0, [pc, #12]	; 11304 <tcgetattr@plt+0x40>
   112f4:	ldr	r3, [pc, #12]	; 11308 <tcgetattr@plt+0x44>
   112f8:	bl	11114 <__libc_start_main@plt>
   112fc:	bl	11294 <abort@plt>
   11300:	andeq	r7, r1, r4, asr #28
   11304:	andeq	r1, r1, r4, lsl #10
   11308:	andeq	r7, r1, r4, ror #27
   1130c:	ldr	r3, [pc, #20]	; 11328 <tcgetattr@plt+0x64>
   11310:	ldr	r2, [pc, #20]	; 1132c <tcgetattr@plt+0x68>
   11314:	add	r3, pc, r3
   11318:	ldr	r2, [r3, r2]
   1131c:	cmp	r2, #0
   11320:	bxeq	lr
   11324:	b	11138 <__gmon_start__@plt>
   11328:	andeq	r7, r1, r4, ror #25
   1132c:	andeq	r0, r0, r8, lsl #2
   11330:	ldr	r3, [pc, #28]	; 11354 <tcgetattr@plt+0x90>
   11334:	ldr	r0, [pc, #28]	; 11358 <tcgetattr@plt+0x94>
   11338:	sub	r3, r3, r0
   1133c:	cmp	r3, #6
   11340:	bxls	lr
   11344:	ldr	r3, [pc, #16]	; 1135c <tcgetattr@plt+0x98>
   11348:	cmp	r3, #0
   1134c:	bxeq	lr
   11350:	bx	r3
   11354:	andeq	r9, r2, fp, ror #4
   11358:	andeq	r9, r2, r8, ror #4
   1135c:	andeq	r0, r0, r0
   11360:	ldr	r1, [pc, #36]	; 1138c <tcgetattr@plt+0xc8>
   11364:	ldr	r0, [pc, #36]	; 11390 <tcgetattr@plt+0xcc>
   11368:	sub	r1, r1, r0
   1136c:	asr	r1, r1, #2
   11370:	add	r1, r1, r1, lsr #31
   11374:	asrs	r1, r1, #1
   11378:	bxeq	lr
   1137c:	ldr	r3, [pc, #16]	; 11394 <tcgetattr@plt+0xd0>
   11380:	cmp	r3, #0
   11384:	bxeq	lr
   11388:	bx	r3
   1138c:	andeq	r9, r2, r8, ror #4
   11390:	andeq	r9, r2, r8, ror #4
   11394:	andeq	r0, r0, r0
   11398:	push	{r4, lr}
   1139c:	ldr	r4, [pc, #24]	; 113bc <tcgetattr@plt+0xf8>
   113a0:	ldrb	r3, [r4]
   113a4:	cmp	r3, #0
   113a8:	popne	{r4, pc}
   113ac:	bl	11330 <tcgetattr@plt+0x6c>
   113b0:	mov	r3, #1
   113b4:	strb	r3, [r4]
   113b8:	pop	{r4, pc}
   113bc:	andeq	r9, r2, r0, lsl #5
   113c0:	ldr	r0, [pc, #40]	; 113f0 <tcgetattr@plt+0x12c>
   113c4:	ldr	r3, [r0]
   113c8:	cmp	r3, #0
   113cc:	bne	113d4 <tcgetattr@plt+0x110>
   113d0:	b	11360 <tcgetattr@plt+0x9c>
   113d4:	ldr	r3, [pc, #24]	; 113f4 <tcgetattr@plt+0x130>
   113d8:	cmp	r3, #0
   113dc:	beq	113d0 <tcgetattr@plt+0x10c>
   113e0:	push	{r4, lr}
   113e4:	blx	r3
   113e8:	pop	{r4, lr}
   113ec:	b	11360 <tcgetattr@plt+0x9c>
   113f0:	andeq	r8, r2, ip, lsl #30
   113f4:	andeq	r0, r0, r0
   113f8:	push	{r4, lr}
   113fc:	ldr	r4, [r2, #28]
   11400:	cmp	r0, #97	; 0x61
   11404:	beq	114cc <tcgetattr@plt+0x208>
   11408:	mov	r3, r1
   1140c:	ble	11434 <tcgetattr@plt+0x170>
   11410:	cmp	r0, #110	; 0x6e
   11414:	beq	114b4 <tcgetattr@plt+0x1f0>
   11418:	bgt	11484 <tcgetattr@plt+0x1c0>
   1141c:	cmp	r0, #101	; 0x65
   11420:	beq	1149c <tcgetattr@plt+0x1d8>
   11424:	cmp	r0, #104	; 0x68
   11428:	streq	r1, [r4]
   1142c:	mov	r0, #0
   11430:	pop	{r4, pc}
   11434:	cmp	r0, #52	; 0x34
   11438:	beq	114c0 <tcgetattr@plt+0x1fc>
   1143c:	ble	11470 <tcgetattr@plt+0x1ac>
   11440:	cmp	r0, #54	; 0x36
   11444:	moveq	r3, #10
   11448:	streq	r3, [r4, #16]
   1144c:	beq	1142c <tcgetattr@plt+0x168>
   11450:	cmp	r0, #80	; 0x50
   11454:	bne	1142c <tcgetattr@plt+0x168>
   11458:	mov	r2, #10
   1145c:	mov	r1, #0
   11460:	mov	r0, r3
   11464:	bl	10ff4 <strtol@plt>
   11468:	str	r0, [r4, #20]
   1146c:	b	1142c <tcgetattr@plt+0x168>
   11470:	cmp	r0, #0
   11474:	streq	r1, [r4, #12]
   11478:	ldreq	r3, [r2, #4]
   1147c:	streq	r3, [r2, #12]
   11480:	b	1142c <tcgetattr@plt+0x168>
   11484:	cmp	r0, #112	; 0x70
   11488:	streq	r1, [r4, #8]
   1148c:	beq	1142c <tcgetattr@plt+0x168>
   11490:	cmp	r0, #117	; 0x75
   11494:	streq	r1, [r4, #4]
   11498:	b	1142c <tcgetattr@plt+0x168>
   1149c:	mov	r2, #10
   114a0:	mov	r1, #0
   114a4:	mov	r0, r3
   114a8:	bl	10ff4 <strtol@plt>
   114ac:	str	r0, [r4, #28]
   114b0:	b	1142c <tcgetattr@plt+0x168>
   114b4:	mov	r3, #0
   114b8:	str	r3, [r4, #24]
   114bc:	b	1142c <tcgetattr@plt+0x168>
   114c0:	mov	r3, #2
   114c4:	str	r3, [r4, #16]
   114c8:	b	1142c <tcgetattr@plt+0x168>
   114cc:	mov	r3, #0
   114d0:	str	r3, [r4, #16]
   114d4:	b	1142c <tcgetattr@plt+0x168>
   114d8:	push	{r4, lr}
   114dc:	bl	111c8 <write@plt>
   114e0:	cmp	r0, #0
   114e4:	popge	{r4, pc}
   114e8:	bl	1118c <__errno_location@plt>
   114ec:	ldr	r2, [pc, #12]	; 11500 <tcgetattr@plt+0x23c>
   114f0:	ldr	r1, [r0]
   114f4:	mov	r0, #1
   114f8:	bl	110f0 <error@plt>
   114fc:	pop	{r4, pc}
   11500:	andeq	r7, r1, ip, ror #28
   11504:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11508:	sub	sp, sp, #1440	; 0x5a0
   1150c:	sub	sp, sp, #4
   11510:	mov	r7, r0
   11514:	mov	r6, r1
   11518:	ldr	r0, [r1]
   1151c:	bl	1336c <argp_parse@@Base+0xd04>
   11520:	ldr	r2, [pc, #2780]	; 12004 <tcgetattr@plt+0xd40>
   11524:	ldr	r3, [pc, #2780]	; 12008 <tcgetattr@plt+0xd44>
   11528:	str	r2, [r3]
   1152c:	ldr	r5, [pc, #2776]	; 1200c <tcgetattr@plt+0xd48>
   11530:	mov	r1, r5
   11534:	ldr	r0, [pc, #2772]	; 12010 <tcgetattr@plt+0xd4c>
   11538:	bl	13174 <argp_parse@@Base+0xb0c>
   1153c:	mov	r3, #0
   11540:	str	r3, [sp, #1412]	; 0x584
   11544:	str	r3, [sp, #1416]	; 0x588
   11548:	str	r3, [sp, #1408]	; 0x580
   1154c:	str	r3, [sp, #1420]	; 0x58c
   11550:	str	r3, [sp, #1424]	; 0x590
   11554:	str	r3, [sp, #1436]	; 0x59c
   11558:	mov	r2, #1
   1155c:	str	r2, [sp, #1432]	; 0x598
   11560:	mov	r2, #512	; 0x200
   11564:	str	r2, [sp, #1428]	; 0x594
   11568:	add	r2, sp, #1408	; 0x580
   1156c:	str	r2, [sp, #4]
   11570:	str	r3, [sp]
   11574:	mov	r3, #8
   11578:	mov	r2, r6
   1157c:	mov	r1, r7
   11580:	add	r0, r5, r3
   11584:	bl	12668 <argp_parse@@Base>
   11588:	ldr	r3, [sp, #1412]	; 0x584
   1158c:	cmp	r3, #0
   11590:	movne	r5, #0
   11594:	beq	115cc <tcgetattr@plt+0x308>
   11598:	ldr	r3, [sp, #1416]	; 0x588
   1159c:	cmp	r3, #0
   115a0:	beq	115e4 <tcgetattr@plt+0x320>
   115a4:	ldr	r3, [sp, #1408]	; 0x580
   115a8:	cmp	r3, #0
   115ac:	beq	115fc <tcgetattr@plt+0x338>
   115b0:	ldr	r3, [sp, #1420]	; 0x58c
   115b4:	cmp	r3, #0
   115b8:	beq	11614 <tcgetattr@plt+0x350>
   115bc:	cmp	r5, #0
   115c0:	ble	1162c <tcgetattr@plt+0x368>
   115c4:	mov	r0, #1
   115c8:	bl	1115c <exit@plt>
   115cc:	ldr	r2, [pc, #2624]	; 12014 <tcgetattr@plt+0xd50>
   115d0:	mov	r1, #0
   115d4:	mov	r0, r1
   115d8:	bl	110f0 <error@plt>
   115dc:	mov	r5, #1
   115e0:	b	11598 <tcgetattr@plt+0x2d4>
   115e4:	ldr	r2, [pc, #2604]	; 12018 <tcgetattr@plt+0xd54>
   115e8:	mov	r1, #0
   115ec:	mov	r0, r1
   115f0:	bl	110f0 <error@plt>
   115f4:	add	r5, r5, #1
   115f8:	b	115a4 <tcgetattr@plt+0x2e0>
   115fc:	ldr	r2, [pc, #2584]	; 1201c <tcgetattr@plt+0xd58>
   11600:	mov	r1, #0
   11604:	mov	r0, r1
   11608:	bl	110f0 <error@plt>
   1160c:	add	r5, r5, #1
   11610:	b	115b0 <tcgetattr@plt+0x2ec>
   11614:	ldr	r2, [pc, #2564]	; 12020 <tcgetattr@plt+0xd5c>
   11618:	mov	r1, #0
   1161c:	mov	r0, r1
   11620:	bl	110f0 <error@plt>
   11624:	add	r5, r5, #1
   11628:	b	115bc <tcgetattr@plt+0x2f8>
   1162c:	ldr	r1, [sp, #1416]	; 0x588
   11630:	ldr	r0, [pc, #2540]	; 12024 <tcgetattr@plt+0xd60>
   11634:	bl	10fe8 <strcmp@plt>
   11638:	cmp	r0, #0
   1163c:	beq	116a4 <tcgetattr@plt+0x3e0>
   11640:	ldr	r3, [sp, #1428]	; 0x594
   11644:	ldr	r2, [pc, #2524]	; 12028 <tcgetattr@plt+0xd64>
   11648:	mov	r1, #12
   1164c:	add	r0, sp, #20
   11650:	bl	11198 <snprintf@plt>
   11654:	mov	r2, #32
   11658:	mov	r1, #0
   1165c:	add	r0, sp, r2
   11660:	bl	111bc <memset@plt>
   11664:	ldr	r3, [sp, #1424]	; 0x590
   11668:	str	r3, [sp, #36]	; 0x24
   1166c:	mov	r3, #1
   11670:	str	r3, [sp, #40]	; 0x28
   11674:	add	r3, sp, #12
   11678:	add	r2, sp, #32
   1167c:	add	r1, sp, #20
   11680:	ldr	r0, [sp, #1408]	; 0x580
   11684:	bl	11264 <getaddrinfo@plt>
   11688:	subs	r5, r0, #0
   1168c:	bne	11820 <tcgetattr@plt+0x55c>
   11690:	ldr	r5, [sp, #12]
   11694:	cmp	r5, #0
   11698:	beq	11fdc <tcgetattr@plt+0xd18>
   1169c:	mvn	r6, #0
   116a0:	b	11860 <tcgetattr@plt+0x59c>
   116a4:	mov	r5, #0
   116a8:	strb	r5, [sp, #1344]	; 0x540
   116ac:	mov	r0, #15
   116b0:	bl	1109c <alarm@plt>
   116b4:	mov	r0, r5
   116b8:	bl	1127c <isatty@plt>
   116bc:	cmp	r0, r5
   116c0:	beq	11794 <tcgetattr@plt+0x4d0>
   116c4:	add	r1, sp, #192	; 0xc0
   116c8:	mov	r0, r5
   116cc:	bl	112c4 <tcgetattr@plt>
   116d0:	cmp	r0, r5
   116d4:	blt	11fb0 <tcgetattr@plt+0xcec>
   116d8:	add	ip, sp, #320	; 0x140
   116dc:	add	lr, sp, #192	; 0xc0
   116e0:	ldm	lr!, {r0, r1, r2, r3}
   116e4:	stmia	ip!, {r0, r1, r2, r3}
   116e8:	ldm	lr!, {r0, r1, r2, r3}
   116ec:	stmia	ip!, {r0, r1, r2, r3}
   116f0:	ldm	lr!, {r0, r1, r2, r3}
   116f4:	stmia	ip!, {r0, r1, r2, r3}
   116f8:	ldm	lr, {r0, r1, r2}
   116fc:	stm	ip, {r0, r1, r2}
   11700:	ldr	r3, [sp, #332]	; 0x14c
   11704:	bic	r3, r3, #8
   11708:	orr	r3, r3, #64	; 0x40
   1170c:	str	r3, [sp, #332]	; 0x14c
   11710:	add	r2, sp, #320	; 0x140
   11714:	mov	r1, r5
   11718:	mov	r0, r5
   1171c:	bl	110e4 <tcsetattr@plt>
   11720:	cmp	r0, r5
   11724:	beq	1173c <tcgetattr@plt+0x478>
   11728:	bl	1118c <__errno_location@plt>
   1172c:	ldr	r2, [pc, #2296]	; 1202c <tcgetattr@plt+0xd68>
   11730:	ldr	r1, [r0]
   11734:	mov	r0, r5
   11738:	bl	110f0 <error@plt>
   1173c:	ldr	r0, [pc, #2284]	; 12030 <tcgetattr@plt+0xd6c>
   11740:	bl	1100c <printf@plt>
   11744:	ldr	r3, [pc, #2280]	; 12034 <tcgetattr@plt+0xd70>
   11748:	ldr	r2, [r3]
   1174c:	mov	r1, #64	; 0x40
   11750:	add	r0, sp, #1344	; 0x540
   11754:	bl	11054 <fgets@plt>
   11758:	cmp	r0, #0
   1175c:	moveq	r3, #0
   11760:	strbeq	r3, [sp, #1344]	; 0x540
   11764:	add	r2, sp, #192	; 0xc0
   11768:	mov	r1, #0
   1176c:	mov	r0, r1
   11770:	bl	110e4 <tcsetattr@plt>
   11774:	cmp	r0, #0
   11778:	bge	117b4 <tcgetattr@plt+0x4f0>
   1177c:	bl	1118c <__errno_location@plt>
   11780:	ldr	r2, [pc, #2224]	; 12038 <tcgetattr@plt+0xd74>
   11784:	ldr	r1, [r0]
   11788:	mov	r0, #0
   1178c:	bl	110f0 <error@plt>
   11790:	b	117b4 <tcgetattr@plt+0x4f0>
   11794:	ldr	r3, [pc, #2200]	; 12034 <tcgetattr@plt+0xd70>
   11798:	ldr	r2, [r3]
   1179c:	mov	r1, #64	; 0x40
   117a0:	add	r0, sp, #1344	; 0x540
   117a4:	bl	11054 <fgets@plt>
   117a8:	cmp	r0, #0
   117ac:	moveq	r3, #0
   117b0:	strbeq	r3, [sp, #1344]	; 0x540
   117b4:	mov	r0, #0
   117b8:	bl	1109c <alarm@plt>
   117bc:	add	r0, sp, #1344	; 0x540
   117c0:	bl	11168 <strlen@plt>
   117c4:	mov	r3, r0
   117c8:	cmp	r0, #0
   117cc:	ble	11804 <tcgetattr@plt+0x540>
   117d0:	sub	r3, r0, #1
   117d4:	add	r2, sp, #1440	; 0x5a0
   117d8:	add	r2, r2, r3
   117dc:	ldrb	r2, [r2, #-96]	; 0xffffffa0
   117e0:	cmp	r2, #10
   117e4:	beq	117f4 <tcgetattr@plt+0x530>
   117e8:	add	r3, sp, #1344	; 0x540
   117ec:	str	r3, [sp, #1416]	; 0x588
   117f0:	b	11640 <tcgetattr@plt+0x37c>
   117f4:	mov	r1, #0
   117f8:	add	r2, sp, #1440	; 0x5a0
   117fc:	add	r2, r2, r3
   11800:	strb	r1, [r2, #-96]	; 0xffffffa0
   11804:	cmp	r3, #0
   11808:	bne	117e8 <tcgetattr@plt+0x524>
   1180c:	ldr	r2, [pc, #2088]	; 1203c <tcgetattr@plt+0xd78>
   11810:	mov	r1, #0
   11814:	mov	r0, #1
   11818:	bl	110f0 <error@plt>
   1181c:	b	11640 <tcgetattr@plt+0x37c>
   11820:	bl	1118c <__errno_location@plt>
   11824:	ldr	r6, [r0]
   11828:	mov	r0, r5
   1182c:	bl	11048 <gai_strerror@plt>
   11830:	mov	r3, r0
   11834:	ldr	r2, [pc, #2052]	; 12040 <tcgetattr@plt+0xd7c>
   11838:	mov	r1, r6
   1183c:	mov	r0, #1
   11840:	bl	110f0 <error@plt>
   11844:	b	11690 <tcgetattr@plt+0x3cc>
   11848:	mov	r0, r4
   1184c:	bl	112a0 <close@plt>
   11850:	mov	r4, r6
   11854:	ldr	r5, [r5, #28]
   11858:	cmp	r5, #0
   1185c:	beq	11fdc <tcgetattr@plt+0xd18>
   11860:	ldr	r2, [r5, #12]
   11864:	ldr	r1, [r5, #8]
   11868:	ldr	r0, [r5, #4]
   1186c:	bl	11270 <socket@plt>
   11870:	subs	r4, r0, #0
   11874:	blt	11854 <tcgetattr@plt+0x590>
   11878:	ldr	r2, [r5, #16]
   1187c:	ldr	r1, [r5, #20]
   11880:	mov	r0, r4
   11884:	bl	112ac <connect@plt>
   11888:	cmp	r0, #0
   1188c:	blt	11848 <tcgetattr@plt+0x584>
   11890:	cmp	r5, #0
   11894:	beq	11fe0 <tcgetattr@plt+0xd1c>
   11898:	ldr	r7, [r5, #16]
   1189c:	mov	r2, r7
   118a0:	ldr	r1, [r5, #20]
   118a4:	add	r0, sp, #64	; 0x40
   118a8:	bl	1106c <memcpy@plt>
   118ac:	ldr	r0, [sp, #12]
   118b0:	bl	11258 <freeaddrinfo@plt>
   118b4:	ldr	r3, [sp, #1432]	; 0x598
   118b8:	cmp	r3, #0
   118bc:	bne	11950 <tcgetattr@plt+0x68c>
   118c0:	mov	r3, #48	; 0x30
   118c4:	strb	r3, [sp, #20]
   118c8:	mov	r5, #0
   118cc:	strb	r5, [sp, #21]
   118d0:	mov	r2, #2
   118d4:	add	r1, sp, #20
   118d8:	mov	r0, r4
   118dc:	bl	114d8 <tcgetattr@plt+0x214>
   118e0:	str	r5, [sp, #1436]	; 0x59c
   118e4:	mvn	r5, #0
   118e8:	ldr	r6, [sp, #1412]	; 0x584
   118ec:	mov	r0, r6
   118f0:	bl	11168 <strlen@plt>
   118f4:	add	r2, r0, #1
   118f8:	mov	r1, r6
   118fc:	mov	r0, r4
   11900:	bl	114d8 <tcgetattr@plt+0x214>
   11904:	ldr	r6, [sp, #1416]	; 0x588
   11908:	mov	r0, r6
   1190c:	bl	11168 <strlen@plt>
   11910:	add	r2, r0, #1
   11914:	mov	r1, r6
   11918:	mov	r0, r4
   1191c:	bl	114d8 <tcgetattr@plt+0x214>
   11920:	ldr	r6, [sp, #1420]	; 0x58c
   11924:	mov	r0, r6
   11928:	bl	11168 <strlen@plt>
   1192c:	add	r2, r0, #1
   11930:	mov	r1, r6
   11934:	mov	r0, r4
   11938:	bl	114d8 <tcgetattr@plt+0x214>
   1193c:	mov	r6, #0
   11940:	ldr	sl, [pc, #1788]	; 12044 <tcgetattr@plt+0xd80>
   11944:	ldr	r9, [pc, #1788]	; 12048 <tcgetattr@plt+0xd84>
   11948:	ldr	fp, [pc, #1788]	; 1204c <tcgetattr@plt+0xd88>
   1194c:	b	11d3c <tcgetattr@plt+0xa78>
   11950:	mov	r1, #1
   11954:	str	r1, [sp, #192]	; 0xc0
   11958:	ldrh	r5, [sp, #64]	; 0x40
   1195c:	mov	r2, #0
   11960:	mov	r0, r5
   11964:	bl	11270 <socket@plt>
   11968:	subs	r6, r0, #0
   1196c:	blt	119c0 <tcgetattr@plt+0x6fc>
   11970:	mov	r3, #4
   11974:	str	r3, [sp]
   11978:	add	r3, sp, #192	; 0xc0
   1197c:	mov	r2, #2
   11980:	mov	r1, #1
   11984:	mov	r0, r6
   11988:	bl	11000 <setsockopt@plt>
   1198c:	mov	r2, #128	; 0x80
   11990:	mov	r1, #0
   11994:	add	r0, sp, #320	; 0x140
   11998:	bl	111bc <memset@plt>
   1199c:	cmp	r5, #2
   119a0:	beq	119d8 <tcgetattr@plt+0x714>
   119a4:	cmp	r5, #10
   119a8:	beq	11a64 <tcgetattr@plt+0x7a0>
   119ac:	ldr	r2, [pc, #1692]	; 12050 <tcgetattr@plt+0xd8c>
   119b0:	mov	r1, #97	; 0x61
   119b4:	mov	r0, #1
   119b8:	bl	110f0 <error@plt>
   119bc:	b	119ec <tcgetattr@plt+0x728>
   119c0:	bl	1118c <__errno_location@plt>
   119c4:	ldr	r2, [pc, #1672]	; 12054 <tcgetattr@plt+0xd90>
   119c8:	ldr	r1, [r0]
   119cc:	mov	r0, #1
   119d0:	bl	110f0 <error@plt>
   119d4:	b	11970 <tcgetattr@plt+0x6ac>
   119d8:	add	r3, sp, #320	; 0x140
   119dc:	mov	r2, #2
   119e0:	strh	r2, [r3]
   119e4:	ldr	r2, [sp, #1436]	; 0x59c
   119e8:	strh	r2, [r3, #2]
   119ec:	mov	r2, r7
   119f0:	add	r1, sp, #320	; 0x140
   119f4:	mov	r0, r6
   119f8:	bl	111b0 <bind@plt>
   119fc:	cmp	r0, #0
   11a00:	blt	11a7c <tcgetattr@plt+0x7b8>
   11a04:	mov	r3, #128	; 0x80
   11a08:	str	r3, [sp, #16]
   11a0c:	add	r2, sp, #16
   11a10:	add	r1, sp, #320	; 0x140
   11a14:	mov	r0, r6
   11a18:	bl	11228 <getsockname@plt>
   11a1c:	cmp	r0, #0
   11a20:	bne	11a94 <tcgetattr@plt+0x7d0>
   11a24:	mov	r1, #1
   11a28:	mov	r0, r6
   11a2c:	bl	11204 <listen@plt>
   11a30:	cmp	r0, #0
   11a34:	bne	11aac <tcgetattr@plt+0x7e8>
   11a38:	add	r3, sp, #320	; 0x140
   11a3c:	ldrh	r3, [r3]
   11a40:	cmp	r3, #2
   11a44:	beq	11ac4 <tcgetattr@plt+0x800>
   11a48:	cmp	r3, #10
   11a4c:	beq	11b44 <tcgetattr@plt+0x880>
   11a50:	ldr	r2, [pc, #1528]	; 12050 <tcgetattr@plt+0xd8c>
   11a54:	mov	r1, #97	; 0x61
   11a58:	mov	r0, #1
   11a5c:	bl	110f0 <error@plt>
   11a60:	b	11ad8 <tcgetattr@plt+0x814>
   11a64:	add	r3, sp, #320	; 0x140
   11a68:	mov	r2, #10
   11a6c:	strh	r2, [r3]
   11a70:	ldr	r2, [sp, #1436]	; 0x59c
   11a74:	strh	r2, [r3, #2]
   11a78:	b	119ec <tcgetattr@plt+0x728>
   11a7c:	bl	1118c <__errno_location@plt>
   11a80:	ldr	r2, [pc, #1488]	; 12058 <tcgetattr@plt+0xd94>
   11a84:	ldr	r1, [r0]
   11a88:	mov	r0, #1
   11a8c:	bl	110f0 <error@plt>
   11a90:	b	11a04 <tcgetattr@plt+0x740>
   11a94:	bl	1118c <__errno_location@plt>
   11a98:	ldr	r2, [pc, #1468]	; 1205c <tcgetattr@plt+0xd98>
   11a9c:	ldr	r1, [r0]
   11aa0:	mov	r0, #1
   11aa4:	bl	110f0 <error@plt>
   11aa8:	b	11a24 <tcgetattr@plt+0x760>
   11aac:	bl	1118c <__errno_location@plt>
   11ab0:	ldr	r2, [pc, #1448]	; 12060 <tcgetattr@plt+0xd9c>
   11ab4:	ldr	r1, [r0]
   11ab8:	mov	r0, #1
   11abc:	bl	110f0 <error@plt>
   11ac0:	b	11a38 <tcgetattr@plt+0x774>
   11ac4:	add	r3, sp, #320	; 0x140
   11ac8:	ldrh	r3, [r3, #2]
   11acc:	rev16	r3, r3
   11ad0:	uxth	r3, r3
   11ad4:	str	r3, [sp, #1436]	; 0x59c
   11ad8:	ldr	r3, [sp, #1436]	; 0x59c
   11adc:	ldr	r2, [pc, #1408]	; 12064 <tcgetattr@plt+0xda0>
   11ae0:	mov	r1, #12
   11ae4:	add	r0, sp, #20
   11ae8:	bl	11198 <snprintf@plt>
   11aec:	add	r0, sp, #20
   11af0:	bl	11168 <strlen@plt>
   11af4:	add	r2, r0, #1
   11af8:	add	r1, sp, #20
   11afc:	mov	r0, r4
   11b00:	bl	114d8 <tcgetattr@plt+0x214>
   11b04:	mov	r0, #5
   11b08:	bl	1109c <alarm@plt>
   11b0c:	add	r2, sp, #16
   11b10:	add	r1, sp, #320	; 0x140
   11b14:	mov	r0, r6
   11b18:	bl	110cc <accept@plt>
   11b1c:	subs	r5, r0, #0
   11b20:	blt	11b5c <tcgetattr@plt+0x898>
   11b24:	mov	r0, #0
   11b28:	bl	1109c <alarm@plt>
   11b2c:	mov	r1, #1
   11b30:	mov	r0, r5
   11b34:	bl	111e0 <shutdown@plt>
   11b38:	mov	r0, r6
   11b3c:	bl	112a0 <close@plt>
   11b40:	b	118e8 <tcgetattr@plt+0x624>
   11b44:	add	r3, sp, #320	; 0x140
   11b48:	ldrh	r3, [r3, #2]
   11b4c:	rev16	r3, r3
   11b50:	uxth	r3, r3
   11b54:	str	r3, [sp, #1436]	; 0x59c
   11b58:	b	11ad8 <tcgetattr@plt+0x814>
   11b5c:	bl	1118c <__errno_location@plt>
   11b60:	ldr	r2, [pc, #1280]	; 12068 <tcgetattr@plt+0xda4>
   11b64:	ldr	r1, [r0]
   11b68:	mov	r0, #1
   11b6c:	bl	110f0 <error@plt>
   11b70:	b	11b24 <tcgetattr@plt+0x860>
   11b74:	bl	1118c <__errno_location@plt>
   11b78:	mov	r2, sl
   11b7c:	ldr	r1, [r0]
   11b80:	mov	r0, #1
   11b84:	bl	110f0 <error@plt>
   11b88:	b	11e44 <tcgetattr@plt+0xb80>
   11b8c:	mov	r2, #1024	; 0x400
   11b90:	add	r1, sp, #320	; 0x140
   11b94:	mov	r0, r6
   11b98:	bl	11018 <read@plt>
   11b9c:	subs	r7, r0, #0
   11ba0:	blt	11bc8 <tcgetattr@plt+0x904>
   11ba4:	cmp	r7, #0
   11ba8:	bne	11bdc <tcgetattr@plt+0x918>
   11bac:	mov	r1, #1
   11bb0:	mov	r0, r4
   11bb4:	bl	111e0 <shutdown@plt>
   11bb8:	mov	r0, r6
   11bbc:	bl	112a0 <close@plt>
   11bc0:	mvn	r6, #0
   11bc4:	b	11d3c <tcgetattr@plt+0xa78>
   11bc8:	bl	1118c <__errno_location@plt>
   11bcc:	ldr	r2, [pc, #1176]	; 1206c <tcgetattr@plt+0xda8>
   11bd0:	ldr	r1, [r0]
   11bd4:	mov	r0, #1
   11bd8:	bl	110f0 <error@plt>
   11bdc:	mov	r2, r7
   11be0:	add	r1, sp, #320	; 0x140
   11be4:	mov	r0, r4
   11be8:	bl	111c8 <write@plt>
   11bec:	cmp	r0, #0
   11bf0:	bge	11e70 <tcgetattr@plt+0xbac>
   11bf4:	bl	1118c <__errno_location@plt>
   11bf8:	mov	r2, fp
   11bfc:	ldr	r1, [r0]
   11c00:	mov	r0, #1
   11c04:	bl	110f0 <error@plt>
   11c08:	b	11e70 <tcgetattr@plt+0xbac>
   11c0c:	mov	r2, #1024	; 0x400
   11c10:	add	r1, sp, #320	; 0x140
   11c14:	mov	r0, r4
   11c18:	bl	11018 <read@plt>
   11c1c:	subs	r7, r0, #0
   11c20:	blt	11c84 <tcgetattr@plt+0x9c0>
   11c24:	cmp	r7, #0
   11c28:	beq	11c9c <tcgetattr@plt+0x9d8>
   11c2c:	cmp	r7, #0
   11c30:	movle	r1, #0
   11c34:	ble	11cb0 <tcgetattr@plt+0x9ec>
   11c38:	ldrb	r3, [sp, #320]	; 0x140
   11c3c:	cmp	r3, #1
   11c40:	bhi	11ce4 <tcgetattr@plt+0xa20>
   11c44:	add	r2, sp, #320	; 0x140
   11c48:	mov	r1, #0
   11c4c:	add	r1, r1, #1
   11c50:	mov	r0, r3
   11c54:	cmp	r7, r1
   11c58:	movle	r3, #0
   11c5c:	movgt	r3, #1
   11c60:	cmp	r1, #1
   11c64:	movgt	r3, #0
   11c68:	cmp	r3, #0
   11c6c:	beq	11cac <tcgetattr@plt+0x9e8>
   11c70:	ldrb	r3, [r2, #1]!
   11c74:	cmp	r3, #1
   11c78:	bls	11c4c <tcgetattr@plt+0x988>
   11c7c:	str	r0, [r9]
   11c80:	b	11cb0 <tcgetattr@plt+0x9ec>
   11c84:	bl	1118c <__errno_location@plt>
   11c88:	ldr	r2, [pc, #992]	; 12070 <tcgetattr@plt+0xdac>
   11c8c:	ldr	r1, [r0]
   11c90:	mov	r0, #1
   11c94:	bl	110f0 <error@plt>
   11c98:	b	11c2c <tcgetattr@plt+0x968>
   11c9c:	mov	r0, r4
   11ca0:	bl	112a0 <close@plt>
   11ca4:	mvn	r4, #0
   11ca8:	b	11d3c <tcgetattr@plt+0xa78>
   11cac:	str	r0, [r9]
   11cb0:	sub	r2, r7, r1
   11cb4:	add	r3, sp, #320	; 0x140
   11cb8:	add	r1, r3, r1
   11cbc:	mov	r0, #1
   11cc0:	bl	111c8 <write@plt>
   11cc4:	cmp	r0, #0
   11cc8:	bge	11eb8 <tcgetattr@plt+0xbf4>
   11ccc:	bl	1118c <__errno_location@plt>
   11cd0:	mov	r2, fp
   11cd4:	ldr	r1, [r0]
   11cd8:	mov	r0, #1
   11cdc:	bl	110f0 <error@plt>
   11ce0:	b	11eb8 <tcgetattr@plt+0xbf4>
   11ce4:	mov	r1, #0
   11ce8:	b	11cb0 <tcgetattr@plt+0x9ec>
   11cec:	mov	r7, #0
   11cf0:	b	11eb8 <tcgetattr@plt+0xbf4>
   11cf4:	bl	1118c <__errno_location@plt>
   11cf8:	ldr	r2, [pc, #884]	; 12074 <tcgetattr@plt+0xdb0>
   11cfc:	ldr	r1, [r0]
   11d00:	mov	r0, #1
   11d04:	bl	110f0 <error@plt>
   11d08:	b	11f1c <tcgetattr@plt+0xc58>
   11d0c:	mov	r0, r5
   11d10:	bl	112a0 <close@plt>
   11d14:	mvn	r5, #0
   11d18:	b	11d3c <tcgetattr@plt+0xa78>
   11d1c:	str	r0, [r9]
   11d20:	sub	r2, r8, r1
   11d24:	add	r3, sp, #320	; 0x140
   11d28:	add	r1, r3, r1
   11d2c:	mov	r0, #2
   11d30:	bl	111c8 <write@plt>
   11d34:	cmp	r0, #0
   11d38:	blt	11f8c <tcgetattr@plt+0xcc8>
   11d3c:	tst	r4, r5
   11d40:	bmi	11fa4 <tcgetattr@plt+0xce0>
   11d44:	add	r3, sp, #188	; 0xbc
   11d48:	add	r2, sp, #316	; 0x13c
   11d4c:	mov	r1, #0
   11d50:	str	r1, [r3, #4]!
   11d54:	cmp	r2, r3
   11d58:	bne	11d50 <tcgetattr@plt+0xa8c>
   11d5c:	cmp	r4, #0
   11d60:	blt	11da0 <tcgetattr@plt+0xadc>
   11d64:	add	r3, r4, #31
   11d68:	cmp	r4, #0
   11d6c:	movge	r3, r4
   11d70:	asr	r3, r3, #5
   11d74:	add	r2, sp, #1440	; 0x5a0
   11d78:	add	r3, r2, r3, lsl #2
   11d7c:	asr	r2, r4, #31
   11d80:	lsr	r1, r2, #27
   11d84:	add	r2, r4, r1
   11d88:	and	r2, r2, #31
   11d8c:	sub	r2, r2, r1
   11d90:	ldr	r1, [r3, #-1248]	; 0xfffffb20
   11d94:	mov	r0, #1
   11d98:	orr	r2, r1, r0, lsl r2
   11d9c:	str	r2, [r3, #-1248]	; 0xfffffb20
   11da0:	cmp	r6, #0
   11da4:	blt	11dcc <tcgetattr@plt+0xb08>
   11da8:	asr	r3, r6, #31
   11dac:	lsr	r2, r3, #27
   11db0:	add	r3, r6, r2
   11db4:	and	r3, r3, #31
   11db8:	sub	r3, r3, r2
   11dbc:	ldr	r2, [sp, #192]	; 0xc0
   11dc0:	mov	r1, #1
   11dc4:	orr	r3, r2, r1, lsl r3
   11dc8:	str	r3, [sp, #192]	; 0xc0
   11dcc:	cmp	r5, #0
   11dd0:	blt	11e10 <tcgetattr@plt+0xb4c>
   11dd4:	add	r3, r5, #31
   11dd8:	cmp	r5, #0
   11ddc:	movge	r3, r5
   11de0:	asr	r3, r3, #5
   11de4:	add	r2, sp, #1440	; 0x5a0
   11de8:	add	r3, r2, r3, lsl #2
   11dec:	asr	r2, r5, #31
   11df0:	lsr	r1, r2, #27
   11df4:	add	r2, r5, r1
   11df8:	and	r2, r2, #31
   11dfc:	sub	r2, r2, r1
   11e00:	ldr	r1, [r3, #-1248]	; 0xfffffb20
   11e04:	mov	r0, #1
   11e08:	orr	r2, r1, r0, lsl r2
   11e0c:	str	r2, [r3, #-1248]	; 0xfffffb20
   11e10:	cmp	r4, r5
   11e14:	movge	r0, r4
   11e18:	movlt	r0, r5
   11e1c:	cmp	r0, r6
   11e20:	movlt	r0, r6
   11e24:	mov	r2, #0
   11e28:	str	r2, [sp]
   11e2c:	mov	r3, r2
   11e30:	add	r1, sp, #192	; 0xc0
   11e34:	add	r0, r0, #1
   11e38:	bl	11084 <select@plt>
   11e3c:	cmn	r0, #1
   11e40:	beq	11b74 <tcgetattr@plt+0x8b0>
   11e44:	cmp	r6, #0
   11e48:	blt	11e70 <tcgetattr@plt+0xbac>
   11e4c:	asr	r3, r6, #31
   11e50:	lsr	r2, r3, #27
   11e54:	add	r3, r6, r2
   11e58:	and	r3, r3, #31
   11e5c:	sub	r3, r3, r2
   11e60:	ldr	r2, [sp, #192]	; 0xc0
   11e64:	mov	r1, #1
   11e68:	ands	r3, r2, r1, lsl r3
   11e6c:	bne	11b8c <tcgetattr@plt+0x8c8>
   11e70:	cmp	r4, #0
   11e74:	blt	11cec <tcgetattr@plt+0xa28>
   11e78:	add	r3, r4, #31
   11e7c:	cmp	r4, #0
   11e80:	movge	r3, r4
   11e84:	asr	r3, r3, #5
   11e88:	add	r2, sp, #1440	; 0x5a0
   11e8c:	add	r3, r2, r3, lsl #2
   11e90:	asr	r2, r4, #31
   11e94:	lsr	r1, r2, #27
   11e98:	add	r2, r4, r1
   11e9c:	and	r2, r2, #31
   11ea0:	sub	r2, r2, r1
   11ea4:	ldr	r3, [r3, #-1248]	; 0xfffffb20
   11ea8:	mov	r1, #1
   11eac:	ands	r3, r3, r1, lsl r2
   11eb0:	moveq	r7, #0
   11eb4:	bne	11c0c <tcgetattr@plt+0x948>
   11eb8:	cmp	r5, #0
   11ebc:	blt	11d3c <tcgetattr@plt+0xa78>
   11ec0:	add	r3, r5, #31
   11ec4:	cmp	r5, #0
   11ec8:	movge	r3, r5
   11ecc:	asr	r3, r3, #5
   11ed0:	add	r2, sp, #1440	; 0x5a0
   11ed4:	add	r3, r2, r3, lsl #2
   11ed8:	asr	r2, r5, #31
   11edc:	lsr	r1, r2, #27
   11ee0:	add	r2, r5, r1
   11ee4:	and	r2, r2, #31
   11ee8:	sub	r2, r2, r1
   11eec:	ldr	r3, [r3, #-1248]	; 0xfffffb20
   11ef0:	mov	r1, #1
   11ef4:	ands	r3, r3, r1, lsl r2
   11ef8:	beq	11d3c <tcgetattr@plt+0xa78>
   11efc:	mov	r2, #1024	; 0x400
   11f00:	add	r1, sp, #320	; 0x140
   11f04:	mov	r0, r5
   11f08:	bl	11018 <read@plt>
   11f0c:	subs	r8, r0, #0
   11f10:	blt	11cf4 <tcgetattr@plt+0xa30>
   11f14:	cmp	r8, #0
   11f18:	beq	11d0c <tcgetattr@plt+0xa48>
   11f1c:	cmp	r7, #1
   11f20:	movgt	r1, #0
   11f24:	bgt	11d20 <tcgetattr@plt+0xa5c>
   11f28:	cmp	r8, #0
   11f2c:	ble	11f7c <tcgetattr@plt+0xcb8>
   11f30:	ldrb	r3, [sp, #320]	; 0x140
   11f34:	cmp	r3, #1
   11f38:	bhi	11f84 <tcgetattr@plt+0xcc0>
   11f3c:	add	r2, sp, #320	; 0x140
   11f40:	mov	r1, #0
   11f44:	add	r1, r1, #1
   11f48:	mov	r0, r3
   11f4c:	cmp	r8, r1
   11f50:	movle	r3, #0
   11f54:	movgt	r3, #1
   11f58:	cmp	r1, #1
   11f5c:	movgt	r3, #0
   11f60:	cmp	r3, #0
   11f64:	beq	11d1c <tcgetattr@plt+0xa58>
   11f68:	ldrb	r3, [r2, #1]!
   11f6c:	cmp	r3, #1
   11f70:	bls	11f44 <tcgetattr@plt+0xc80>
   11f74:	str	r0, [r9]
   11f78:	b	11d20 <tcgetattr@plt+0xa5c>
   11f7c:	mov	r1, #0
   11f80:	b	11d20 <tcgetattr@plt+0xa5c>
   11f84:	mov	r1, #0
   11f88:	b	11d20 <tcgetattr@plt+0xa5c>
   11f8c:	bl	1118c <__errno_location@plt>
   11f90:	ldr	r2, [pc, #224]	; 12078 <tcgetattr@plt+0xdb4>
   11f94:	ldr	r1, [r0]
   11f98:	mov	r0, #1
   11f9c:	bl	110f0 <error@plt>
   11fa0:	b	11d3c <tcgetattr@plt+0xa78>
   11fa4:	ldr	r3, [pc, #156]	; 12048 <tcgetattr@plt+0xd84>
   11fa8:	ldr	r0, [r3]
   11fac:	bl	1115c <exit@plt>
   11fb0:	ldr	r0, [pc, #120]	; 12030 <tcgetattr@plt+0xd6c>
   11fb4:	bl	1100c <printf@plt>
   11fb8:	ldr	r3, [pc, #116]	; 12034 <tcgetattr@plt+0xd70>
   11fbc:	ldr	r2, [r3]
   11fc0:	mov	r1, #64	; 0x40
   11fc4:	add	r0, sp, #1344	; 0x540
   11fc8:	bl	11054 <fgets@plt>
   11fcc:	cmp	r0, #0
   11fd0:	moveq	r3, #0
   11fd4:	strbeq	r3, [sp, #1344]	; 0x540
   11fd8:	b	117b4 <tcgetattr@plt+0x4f0>
   11fdc:	mov	r5, #0
   11fe0:	ldr	r0, [sp, #12]
   11fe4:	bl	11258 <freeaddrinfo@plt>
   11fe8:	bl	1118c <__errno_location@plt>
   11fec:	ldr	r3, [sp, #1408]	; 0x580
   11ff0:	ldr	r2, [pc, #132]	; 1207c <tcgetattr@plt+0xdb8>
   11ff4:	ldr	r1, [r0]
   11ff8:	mov	r0, #1
   11ffc:	bl	110f0 <error@plt>
   12000:	b	11898 <tcgetattr@plt+0x5d4>
   12004:	andeq	r7, r1, r0, lsl #29
   12008:	andeq	r9, r2, r0, asr #5
   1200c:	andeq	r9, r2, r4, lsl r1
   12010:	muleq	r1, r8, lr
   12014:	andeq	r7, r1, r0, lsr #29
   12018:			; <UNDEFINED> instruction: 0x00017eb4
   1201c:	andeq	r7, r1, ip, asr #29
   12020:	andeq	r7, r1, r0, ror #29
   12024:	strdeq	r7, [r1], -r8
   12028:	andeq	r7, r1, r0, asr #30
   1202c:	strdeq	r7, [r1], -ip
   12030:	andeq	r8, r1, r4, lsl #1
   12034:	andeq	r9, r2, r8, ror r2
   12038:	andeq	r7, r1, r4, lsl pc
   1203c:	andeq	r7, r1, r0, lsr pc
   12040:	andeq	r7, r1, r4, asr #30
   12044:	andeq	r8, r1, r0
   12048:	andeq	r9, r2, r4, lsl #5
   1204c:	andeq	r8, r1, r4, lsr #32
   12050:	andeq	r7, r1, ip, ror pc
   12054:	andeq	r7, r1, r8, ror #30
   12058:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1205c:	andeq	r7, r1, r8, lsr #31
   12060:	andeq	r7, r1, r4, asr #31
   12064:	andeq	r7, r1, r0, ror #31
   12068:	andeq	r7, r1, r4, ror #31
   1206c:	andeq	r8, r1, r0, lsl r0
   12070:	andeq	r8, r1, r4, lsr r0
   12074:	andeq	r8, r1, r0, asr r0
   12078:	andeq	r8, r1, ip, rrx
   1207c:	andeq	r7, r1, r4, asr pc
   12080:	ldr	ip, [r0]
   12084:	cmp	ip, #0
   12088:	beq	120dc <tcgetattr@plt+0xe18>
   1208c:	push	{r4, r5, r6, lr}
   12090:	mov	ip, r2
   12094:	mov	r5, r1
   12098:	mov	r4, r0
   1209c:	ldr	r2, [r0, #32]
   120a0:	str	r2, [r1, #36]	; 0x24
   120a4:	ldr	r2, [r0, #24]
   120a8:	str	r2, [r1, #28]
   120ac:	ldr	r2, [r0, #28]
   120b0:	str	r2, [r1, #32]
   120b4:	ldr	r2, [r0, #12]
   120b8:	str	r2, [r1, #20]
   120bc:	ldr	r6, [r0]
   120c0:	mov	r2, r1
   120c4:	mov	r1, r3
   120c8:	mov	r0, ip
   120cc:	blx	r6
   120d0:	ldr	r3, [r5, #36]	; 0x24
   120d4:	str	r3, [r4, #32]
   120d8:	pop	{r4, r5, r6, pc}
   120dc:	mov	r0, #7
   120e0:	bx	lr
   120e4:	push	{r4, r5, r6, lr}
   120e8:	ldr	r5, [r0, #16]
   120ec:	ldr	r3, [r0]
   120f0:	cmp	r3, #0
   120f4:	beq	1210c <tcgetattr@plt+0xe48>
   120f8:	ldr	r2, [r1, #8]
   120fc:	add	r2, r2, #1
   12100:	str	r2, [r1, #8]
   12104:	mov	r2, #0
   12108:	b	12160 <tcgetattr@plt+0xe9c>
   1210c:	ldr	r3, [r0, #4]
   12110:	cmp	r3, #0
   12114:	ldrne	r3, [r1, #8]
   12118:	addne	r3, r3, #1
   1211c:	strne	r3, [r1, #8]
   12120:	cmp	r5, #0
   12124:	popeq	{r4, r5, r6, pc}
   12128:	ldr	r0, [r5]
   1212c:	cmp	r0, #0
   12130:	popeq	{r4, r5, r6, pc}
   12134:	mov	r4, r1
   12138:	mov	r1, r4
   1213c:	bl	120e4 <tcgetattr@plt+0xe20>
   12140:	ldr	r3, [r4, #12]
   12144:	add	r3, r3, #1
   12148:	str	r3, [r4, #12]
   1214c:	ldr	r0, [r5, #16]!
   12150:	cmp	r0, #0
   12154:	bne	12138 <tcgetattr@plt+0xe74>
   12158:	pop	{r4, r5, r6, pc}
   1215c:	add	r2, r2, #1
   12160:	add	r3, r3, #24
   12164:	ldr	r0, [r3, #-20]	; 0xffffffec
   12168:	cmp	r0, #0
   1216c:	bne	1215c <tcgetattr@plt+0xe98>
   12170:	ldr	r0, [r3, #-24]	; 0xffffffe8
   12174:	cmp	r0, #0
   12178:	bne	1215c <tcgetattr@plt+0xe98>
   1217c:	ldr	r0, [r3, #-8]
   12180:	cmp	r0, #0
   12184:	bne	1215c <tcgetattr@plt+0xe98>
   12188:	ldr	r0, [r3, #-4]
   1218c:	cmp	r0, #0
   12190:	bne	1215c <tcgetattr@plt+0xe98>
   12194:	add	r0, r2, r2, lsl #1
   12198:	ldr	r3, [r1]
   1219c:	add	r3, r3, r0
   121a0:	str	r3, [r1]
   121a4:	ldr	r3, [r1, #4]
   121a8:	add	r2, r3, r2
   121ac:	str	r2, [r1, #4]
   121b0:	b	12120 <tcgetattr@plt+0xe5c>
   121b4:	cmp	r0, #86	; 0x56
   121b8:	beq	121c4 <tcgetattr@plt+0xf00>
   121bc:	mov	r0, #7
   121c0:	bx	lr
   121c4:	push	{r4, lr}
   121c8:	mov	r4, r2
   121cc:	ldr	r3, [pc, #100]	; 12238 <tcgetattr@plt+0xf74>
   121d0:	ldr	r3, [r3]
   121d4:	cmp	r3, #0
   121d8:	beq	121fc <tcgetattr@plt+0xf38>
   121dc:	mov	r1, r2
   121e0:	ldr	r0, [r2, #48]	; 0x30
   121e4:	blx	r3
   121e8:	ldr	r3, [r4, #16]
   121ec:	tst	r3, #32
   121f0:	beq	12230 <tcgetattr@plt+0xf6c>
   121f4:	mov	r0, #0
   121f8:	pop	{r4, pc}
   121fc:	ldr	r3, [pc, #56]	; 1223c <tcgetattr@plt+0xf78>
   12200:	ldr	r2, [r3]
   12204:	cmp	r2, #0
   12208:	beq	1221c <tcgetattr@plt+0xf58>
   1220c:	ldr	r1, [pc, #44]	; 12240 <tcgetattr@plt+0xf7c>
   12210:	ldr	r0, [r4, #48]	; 0x30
   12214:	bl	11180 <fprintf@plt>
   12218:	b	121e8 <tcgetattr@plt+0xf24>
   1221c:	ldr	r2, [pc, #32]	; 12244 <tcgetattr@plt+0xf80>
   12220:	ldr	r1, [pc, #32]	; 12248 <tcgetattr@plt+0xf84>
   12224:	mov	r0, r4
   12228:	bl	168f4 <argp_error@@Base>
   1222c:	b	121e8 <tcgetattr@plt+0xf24>
   12230:	mov	r0, #0
   12234:	bl	1115c <exit@plt>
   12238:	andeq	r9, r2, ip, lsl #5
   1223c:	andeq	r9, r2, r4, asr #5
   12240:	andeq	r8, r1, r4, lsl #9
   12244:	andeq	r8, r1, r4, ror #5
   12248:	andeq	r8, r1, r8, lsl #6
   1224c:	push	{r4, r5, r6, lr}
   12250:	mov	r4, r2
   12254:	cmn	r0, #3
   12258:	beq	122f4 <tcgetattr@plt+0x1030>
   1225c:	mov	r5, r1
   12260:	ble	1228c <tcgetattr@plt+0xfc8>
   12264:	cmn	r0, #2
   12268:	beq	1230c <tcgetattr@plt+0x1048>
   1226c:	cmp	r0, #63	; 0x3f
   12270:	bne	12350 <tcgetattr@plt+0x108c>
   12274:	ldr	r2, [pc, #228]	; 12360 <tcgetattr@plt+0x109c>
   12278:	ldr	r1, [r4, #48]	; 0x30
   1227c:	mov	r0, r4
   12280:	bl	16838 <argp_state_help@@Base>
   12284:	mov	r0, #0
   12288:	pop	{r4, r5, r6, pc}
   1228c:	cmn	r0, #4
   12290:	bne	12350 <tcgetattr@plt+0x108c>
   12294:	mov	r2, #10
   12298:	mov	r1, #0
   1229c:	ldr	r0, [pc, #192]	; 12364 <tcgetattr@plt+0x10a0>
   122a0:	cmp	r5, r1
   122a4:	movne	r0, r5
   122a8:	bl	10ff4 <strtol@plt>
   122ac:	ldr	r3, [pc, #180]	; 12368 <tcgetattr@plt+0x10a4>
   122b0:	str	r0, [r3]
   122b4:	ldr	r2, [r3]
   122b8:	sub	r1, r2, #1
   122bc:	str	r1, [r3]
   122c0:	cmp	r2, #0
   122c4:	ble	12358 <tcgetattr@plt+0x1094>
   122c8:	mov	r5, #1
   122cc:	mov	r4, r3
   122d0:	mov	r0, r5
   122d4:	bl	11090 <sleep@plt>
   122d8:	ldr	r3, [r4]
   122dc:	sub	r2, r3, #1
   122e0:	str	r2, [r4]
   122e4:	cmp	r3, #0
   122e8:	bgt	122d0 <tcgetattr@plt+0x100c>
   122ec:	mov	r0, #0
   122f0:	pop	{r4, r5, r6, pc}
   122f4:	ldr	r2, [pc, #112]	; 1236c <tcgetattr@plt+0x10a8>
   122f8:	ldr	r1, [r4, #48]	; 0x30
   122fc:	mov	r0, r4
   12300:	bl	16838 <argp_state_help@@Base>
   12304:	mov	r0, #0
   12308:	pop	{r4, r5, r6, pc}
   1230c:	ldr	r3, [pc, #92]	; 12370 <tcgetattr@plt+0x10ac>
   12310:	str	r1, [r3]
   12314:	mov	r0, r1
   12318:	bl	1319c <argp_parse@@Base+0xb34>
   1231c:	str	r0, [r4, #40]	; 0x28
   12320:	ldr	r3, [pc, #76]	; 12374 <tcgetattr@plt+0x10b0>
   12324:	str	r0, [r3]
   12328:	ldr	r3, [r4, #16]
   1232c:	and	r3, r3, #3
   12330:	cmp	r3, #1
   12334:	beq	12340 <tcgetattr@plt+0x107c>
   12338:	mov	r0, #0
   1233c:	pop	{r4, r5, r6, pc}
   12340:	ldr	r3, [r4, #8]
   12344:	str	r5, [r3]
   12348:	mov	r0, #0
   1234c:	pop	{r4, r5, r6, pc}
   12350:	mov	r0, #7
   12354:	pop	{r4, r5, r6, pc}
   12358:	mov	r0, #0
   1235c:	pop	{r4, r5, r6, pc}
   12360:	andeq	r0, r0, sl, ror r2
   12364:	andeq	r8, r1, ip, lsl #6
   12368:	andeq	r9, r2, r8, lsl #5
   1236c:	andeq	r0, r0, r1, lsl #4
   12370:	andeq	r9, r2, ip, ror #4
   12374:	andeq	r9, r2, r8, ror #4
   12378:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1237c:	sub	sp, sp, #36	; 0x24
   12380:	str	r0, [sp, #12]
   12384:	str	r1, [sp, #16]
   12388:	str	r2, [sp, #20]
   1238c:	mov	r8, r3
   12390:	ldr	sl, [sp, #72]	; 0x48
   12394:	ldr	r9, [r0]
   12398:	ldr	r5, [r0, #16]
   1239c:	cmp	r9, #0
   123a0:	addne	r6, r9, #24
   123a4:	strne	r5, [sp, #28]
   123a8:	strne	r8, [sp, #24]
   123ac:	bne	124b8 <tcgetattr@plt+0x11f4>
   123b0:	ldr	r3, [sp, #12]
   123b4:	ldr	r3, [r3, #4]
   123b8:	cmp	r3, #0
   123bc:	moveq	r0, r8
   123c0:	moveq	r8, #0
   123c4:	beq	12444 <tcgetattr@plt+0x1180>
   123c8:	ldr	r2, [sp, #12]
   123cc:	ldr	r3, [r2, #4]
   123d0:	str	r3, [r8]
   123d4:	str	r2, [r8, #4]
   123d8:	ldr	r3, [sl, #4]
   123dc:	str	r3, [r8, #8]
   123e0:	mov	r3, #0
   123e4:	str	r3, [r8, #12]
   123e8:	ldr	r2, [sp, #16]
   123ec:	str	r2, [r8, #16]
   123f0:	ldr	r2, [sp, #20]
   123f4:	str	r2, [r8, #20]
   123f8:	str	r3, [r8, #24]
   123fc:	str	r3, [r8, #32]
   12400:	str	r3, [r8, #28]
   12404:	cmp	r5, r3
   12408:	beq	12440 <tcgetattr@plt+0x117c>
   1240c:	ldr	r3, [r5]
   12410:	cmp	r3, #0
   12414:	beq	12660 <tcgetattr@plt+0x139c>
   12418:	mov	r3, #0
   1241c:	add	r3, r3, #1
   12420:	ldr	r2, [r5, r3, lsl #4]
   12424:	cmp	r2, #0
   12428:	bne	1241c <tcgetattr@plt+0x1158>
   1242c:	ldr	r2, [sl, #12]
   12430:	str	r2, [r8, #28]
   12434:	ldr	r2, [sl, #12]
   12438:	add	r3, r2, r3, lsl #2
   1243c:	str	r3, [sl, #12]
   12440:	add	r0, r8, #36	; 0x24
   12444:	cmp	r5, #0
   12448:	beq	12484 <tcgetattr@plt+0x11c0>
   1244c:	ldr	ip, [r5]
   12450:	cmp	ip, #0
   12454:	beq	12484 <tcgetattr@plt+0x11c0>
   12458:	mov	r2, #0
   1245c:	add	r4, r2, #1
   12460:	str	sl, [sp]
   12464:	mov	r3, r0
   12468:	mov	r1, r8
   1246c:	mov	r0, ip
   12470:	bl	12378 <tcgetattr@plt+0x10b4>
   12474:	ldr	ip, [r5, r4, lsl #4]
   12478:	mov	r2, r4
   1247c:	cmp	ip, #0
   12480:	bne	1245c <tcgetattr@plt+0x1198>
   12484:	add	sp, sp, #36	; 0x24
   12488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1248c:	ldr	r0, [r4, #16]!
   12490:	cmp	r0, #0
   12494:	beq	125a0 <tcgetattr@plt+0x12dc>
   12498:	mov	r1, r7
   1249c:	bl	10fe8 <strcmp@plt>
   124a0:	cmp	r0, #0
   124a4:	bne	1248c <tcgetattr@plt+0x11c8>
   124a8:	sub	r4, r4, fp
   124ac:	cmn	r4, #15
   124b0:	blt	125a0 <tcgetattr@plt+0x12dc>
   124b4:	add	r6, r6, #24
   124b8:	sub	r2, r6, #24
   124bc:	mov	r8, r6
   124c0:	ldr	r4, [r6, #-20]	; 0xffffffec
   124c4:	cmp	r4, #0
   124c8:	bne	124d8 <tcgetattr@plt+0x1214>
   124cc:	ldr	r3, [r6, #-24]	; 0xffffffe8
   124d0:	cmp	r3, #0
   124d4:	beq	1263c <tcgetattr@plt+0x1378>
   124d8:	ldr	r3, [r8, #-12]
   124dc:	and	r1, r3, #4
   124e0:	cmp	r1, #0
   124e4:	moveq	r9, r2
   124e8:	ldr	r5, [r9, #12]
   124ec:	ands	r5, r5, #8
   124f0:	bne	124b4 <tcgetattr@plt+0x11f0>
   124f4:	tst	r3, #8
   124f8:	bne	1257c <tcgetattr@plt+0x12b8>
   124fc:	sub	r3, r4, #1
   12500:	cmp	r3, #254	; 0xfe
   12504:	bhi	1257c <tcgetattr@plt+0x12b8>
   12508:	bl	11150 <__ctype_b_loc@plt>
   1250c:	ldr	r3, [r0]
   12510:	lsl	r4, r4, #1
   12514:	ldrh	r3, [r3, r4]
   12518:	tst	r3, #16384	; 0x4000
   1251c:	beq	1257c <tcgetattr@plt+0x12b8>
   12520:	ldr	r3, [sl, #4]
   12524:	add	r2, r3, #1
   12528:	str	r2, [sl, #4]
   1252c:	ldr	r2, [r8, #-20]	; 0xffffffec
   12530:	strb	r2, [r3]
   12534:	ldr	r3, [r9, #8]
   12538:	cmp	r3, #0
   1253c:	beq	12570 <tcgetattr@plt+0x12ac>
   12540:	ldr	r3, [sl, #4]
   12544:	add	r2, r3, #1
   12548:	str	r2, [sl, #4]
   1254c:	mov	r2, #58	; 0x3a
   12550:	strb	r2, [r3]
   12554:	ldr	r3, [r9, #12]
   12558:	tst	r3, #1
   1255c:	ldrne	r3, [sl, #4]
   12560:	addne	r2, r3, #1
   12564:	strne	r2, [sl, #4]
   12568:	movne	r2, #58	; 0x3a
   1256c:	strbne	r2, [r3]
   12570:	ldr	r3, [sl, #4]
   12574:	mov	r2, #0
   12578:	strb	r2, [r3]
   1257c:	ldr	r7, [r8, #-24]	; 0xffffffe8
   12580:	cmp	r7, #0
   12584:	beq	124b4 <tcgetattr@plt+0x11f0>
   12588:	ldr	r3, [sl]
   1258c:	ldr	fp, [r3, #8]
   12590:	ldr	r0, [fp]
   12594:	cmp	r0, #0
   12598:	movne	r4, fp
   1259c:	bne	12498 <tcgetattr@plt+0x11d4>
   125a0:	ldr	r3, [sl, #8]
   125a4:	str	r7, [r3]
   125a8:	ldr	r3, [sl, #8]
   125ac:	ldr	r2, [r9, #8]
   125b0:	cmp	r2, #0
   125b4:	beq	125cc <tcgetattr@plt+0x1308>
   125b8:	ldr	r5, [r9, #12]
   125bc:	and	r5, r5, #1
   125c0:	cmp	r5, #0
   125c4:	movne	r5, #2
   125c8:	moveq	r5, #1
   125cc:	str	r5, [r3, #4]
   125d0:	ldr	r3, [sl, #8]
   125d4:	mov	r2, #0
   125d8:	str	r2, [r3, #8]
   125dc:	ldr	r1, [sl, #8]
   125e0:	ldr	r0, [r8, #-20]	; 0xffffffec
   125e4:	cmp	r0, r2
   125e8:	ldreq	r0, [r9, #4]
   125ec:	bic	r0, r0, #-16777216	; 0xff000000
   125f0:	ldr	r3, [sl]
   125f4:	ldr	r3, [r3, #48]	; 0x30
   125f8:	ldr	r2, [sp, #24]
   125fc:	sub	r3, r2, r3
   12600:	asr	r3, r3, #2
   12604:	rsb	r2, r3, r3, lsl #3
   12608:	add	r2, r2, r2, lsl #6
   1260c:	add	r2, r3, r2, lsl #3
   12610:	rsb	r2, r2, r2, lsl #15
   12614:	add	r3, r3, r2, lsl #3
   12618:	add	r3, r3, #1
   1261c:	add	r3, r0, r3, lsl #24
   12620:	str	r3, [r1, #12]
   12624:	ldr	r3, [sl, #8]
   12628:	add	r2, r3, #16
   1262c:	str	r2, [sl, #8]
   12630:	mov	r2, #0
   12634:	str	r2, [r3, #16]
   12638:	b	124b4 <tcgetattr@plt+0x11f0>
   1263c:	ldr	r3, [r6, #-8]
   12640:	cmp	r3, #0
   12644:	bne	124d8 <tcgetattr@plt+0x1214>
   12648:	ldr	r3, [r6, #-4]
   1264c:	cmp	r3, #0
   12650:	bne	124d8 <tcgetattr@plt+0x1214>
   12654:	ldr	r5, [sp, #28]
   12658:	ldr	r8, [sp, #24]
   1265c:	b	123c8 <tcgetattr@plt+0x1104>
   12660:	mov	r3, #0
   12664:	b	1242c <tcgetattr@plt+0x1168>

00012668 <argp_parse@@Base>:
   12668:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1266c:	add	fp, sp, #32
   12670:	sub	sp, sp, #220	; 0xdc
   12674:	mov	r8, r0
   12678:	str	r1, [fp, #-236]	; 0xffffff14
   1267c:	str	r2, [fp, #-232]	; 0xffffff18
   12680:	mov	r6, r3
   12684:	tst	r3, #1
   12688:	bne	126b8 <argp_parse@@Base+0x50>
   1268c:	ldr	r3, [pc, #2548]	; 13088 <argp_parse@@Base+0xa20>
   12690:	ldr	r3, [r3]
   12694:	cmp	r3, #0
   12698:	moveq	r3, r2
   1269c:	ldreq	r2, [r3]
   126a0:	ldreq	r3, [pc, #2528]	; 13088 <argp_parse@@Base+0xa20>
   126a4:	streq	r2, [r3]
   126a8:	ldr	r3, [pc, #2524]	; 1308c <argp_parse@@Base+0xa24>
   126ac:	ldr	r3, [r3]
   126b0:	cmp	r3, #0
   126b4:	beq	128a8 <argp_parse@@Base+0x240>
   126b8:	tst	r6, #16
   126bc:	beq	128c0 <argp_parse@@Base+0x258>
   126c0:	mov	r2, #36	; 0x24
   126c4:	mov	r1, #0
   126c8:	sub	r0, fp, #196	; 0xc4
   126cc:	bl	111bc <memset@plt>
   126d0:	ands	r3, r6, #4
   126d4:	str	r3, [fp, #-240]	; 0xffffff10
   126d8:	moveq	r3, #1
   126dc:	movne	r3, #0
   126e0:	str	r3, [fp, #-228]	; 0xffffff1c
   126e4:	mov	r3, #0
   126e8:	str	r3, [fp, #-224]	; 0xffffff20
   126ec:	str	r3, [fp, #-220]	; 0xffffff24
   126f0:	str	r3, [fp, #-216]	; 0xffffff28
   126f4:	cmp	r8, r3
   126f8:	beq	12708 <argp_parse@@Base+0xa0>
   126fc:	sub	r1, fp, #228	; 0xe4
   12700:	mov	r0, r8
   12704:	bl	120e4 <tcgetattr@plt+0xe20>
   12708:	ldr	r4, [fp, #-220]	; 0xffffff24
   1270c:	add	r4, r4, #1
   12710:	add	r4, r4, r4, lsl #3
   12714:	lsl	r4, r4, #2
   12718:	ldr	r9, [fp, #-216]	; 0xffffff28
   1271c:	lsl	r9, r9, #2
   12720:	add	sl, r9, r4
   12724:	ldr	r5, [fp, #-224]	; 0xffffff20
   12728:	add	r5, r5, #1
   1272c:	add	r5, sl, r5, lsl #4
   12730:	ldr	r0, [fp, #-228]	; 0xffffff1c
   12734:	add	r0, r0, #1
   12738:	add	r0, r0, r5
   1273c:	bl	13844 <argp_parse@@Base+0x11dc>
   12740:	mov	r7, r0
   12744:	str	r0, [fp, #-40]	; 0xffffffd8
   12748:	cmp	r0, #0
   1274c:	moveq	r4, #12
   12750:	beq	12ed8 <argp_parse@@Base+0x870>
   12754:	str	r0, [fp, #-112]	; 0xffffff90
   12758:	add	r4, r0, r4
   1275c:	str	r4, [fp, #-104]	; 0xffffff98
   12760:	add	r3, r0, sl
   12764:	str	r3, [fp, #-244]	; 0xffffff0c
   12768:	str	r3, [fp, #-152]	; 0xffffff68
   1276c:	add	sl, r0, r5
   12770:	str	sl, [fp, #-156]	; 0xffffff64
   12774:	mov	r3, #1
   12778:	str	r3, [fp, #-196]	; 0xffffff3c
   1277c:	str	r3, [fp, #-192]	; 0xffffff40
   12780:	sub	ip, fp, #148	; 0x94
   12784:	sub	lr, fp, #196	; 0xc4
   12788:	ldm	lr!, {r0, r1, r2, r3}
   1278c:	stmia	ip!, {r0, r1, r2, r3}
   12790:	ldm	lr!, {r0, r1, r2, r3}
   12794:	stmia	ip!, {r0, r1, r2, r3}
   12798:	ldr	r3, [lr]
   1279c:	str	r3, [ip]
   127a0:	mov	r2, r9
   127a4:	mov	r1, #0
   127a8:	mov	r0, r4
   127ac:	bl	111bc <memset@plt>
   127b0:	sub	r3, fp, #160	; 0xa0
   127b4:	str	r3, [fp, #-212]	; 0xffffff2c
   127b8:	str	sl, [fp, #-208]	; 0xffffff30
   127bc:	ldr	r3, [fp, #-244]	; 0xffffff0c
   127c0:	str	r3, [fp, #-204]	; 0xffffff34
   127c4:	str	r4, [fp, #-200]	; 0xffffff38
   127c8:	tst	r6, #8
   127cc:	beq	12958 <argp_parse@@Base+0x2f0>
   127d0:	add	sl, sl, #1
   127d4:	str	sl, [fp, #-208]	; 0xffffff30
   127d8:	mov	r3, #45	; 0x2d
   127dc:	strb	r3, [r7, r5]
   127e0:	mov	r3, #0
   127e4:	ldr	r2, [fp, #-208]	; 0xffffff30
   127e8:	strb	r3, [r2]
   127ec:	ldr	r2, [fp, #-204]	; 0xffffff34
   127f0:	str	r3, [r2]
   127f4:	str	r8, [fp, #-160]	; 0xffffff60
   127f8:	cmp	r8, r3
   127fc:	beq	12974 <argp_parse@@Base+0x30c>
   12800:	sub	r3, fp, #212	; 0xd4
   12804:	str	r3, [sp]
   12808:	ldr	r3, [fp, #-112]	; 0xffffff90
   1280c:	mov	r2, #0
   12810:	mov	r1, r2
   12814:	mov	r0, r8
   12818:	bl	12378 <tcgetattr@plt+0x10b4>
   1281c:	str	r0, [fp, #-108]	; 0xffffff94
   12820:	mov	r2, #56	; 0x38
   12824:	mov	r1, #0
   12828:	sub	r0, fp, #96	; 0x60
   1282c:	bl	111bc <memset@plt>
   12830:	ldr	r3, [fp, #-160]	; 0xffffff60
   12834:	str	r3, [fp, #-96]	; 0xffffffa0
   12838:	ldr	r3, [fp, #-236]	; 0xffffff14
   1283c:	str	r3, [fp, #-92]	; 0xffffffa4
   12840:	ldr	r3, [fp, #-232]	; 0xffffff18
   12844:	str	r3, [fp, #-88]	; 0xffffffa8
   12848:	str	r6, [fp, #-80]	; 0xffffffb0
   1284c:	ldr	r3, [pc, #2108]	; 13090 <argp_parse@@Base+0xa28>
   12850:	ldr	r3, [r3]
   12854:	str	r3, [fp, #-52]	; 0xffffffcc
   12858:	ldr	r3, [pc, #2100]	; 13094 <argp_parse@@Base+0xa2c>
   1285c:	ldr	r3, [r3]
   12860:	str	r3, [fp, #-48]	; 0xffffffd0
   12864:	sub	r3, fp, #160	; 0xa0
   12868:	str	r3, [fp, #-44]	; 0xffffffd4
   1286c:	mov	r3, #1
   12870:	str	r3, [fp, #-100]	; 0xffffff9c
   12874:	ldr	r3, [fp, #-112]	; 0xffffff90
   12878:	ldr	r2, [fp, #-108]	; 0xffffff94
   1287c:	cmp	r3, r2
   12880:	bcs	12a0c <argp_parse@@Base+0x3a4>
   12884:	ldr	r2, [fp, #8]
   12888:	str	r2, [r3, #24]
   1288c:	ldr	r5, [fp, #-112]	; 0xffffff90
   12890:	ldr	r3, [fp, #-108]	; 0xffffff94
   12894:	cmp	r5, r3
   12898:	bcs	12a18 <argp_parse@@Base+0x3b0>
   1289c:	ldr	r7, [pc, #2036]	; 13098 <argp_parse@@Base+0xa30>
   128a0:	mov	r6, #0
   128a4:	b	129b0 <argp_parse@@Base+0x348>
   128a8:	ldr	r3, [fp, #-232]	; 0xffffff18
   128ac:	ldr	r0, [r3]
   128b0:	bl	1319c <argp_parse@@Base+0xb34>
   128b4:	ldr	r3, [pc, #2000]	; 1308c <argp_parse@@Base+0xa24>
   128b8:	str	r0, [r3]
   128bc:	b	126b8 <argp_parse@@Base+0x50>
   128c0:	sub	sp, sp, #72	; 0x48
   128c4:	add	r5, sp, #8
   128c8:	sub	sp, sp, #40	; 0x28
   128cc:	add	r4, sp, #8
   128d0:	mov	r1, #0
   128d4:	str	r1, [r4]
   128d8:	str	r1, [r4, #4]
   128dc:	str	r1, [r4, #8]
   128e0:	str	r1, [r4, #12]
   128e4:	str	r1, [r4, #20]
   128e8:	str	r1, [r4, #24]
   128ec:	str	r5, [r4, #16]
   128f0:	mov	r2, #64	; 0x40
   128f4:	mov	r0, r5
   128f8:	bl	111bc <memset@plt>
   128fc:	cmp	r8, #0
   12900:	addne	r3, r5, #16
   12904:	strne	r8, [r5]
   12908:	moveq	r3, r5
   1290c:	ldr	r2, [pc, #1928]	; 1309c <argp_parse@@Base+0xa34>
   12910:	str	r2, [r3]
   12914:	ldr	r2, [pc, #1924]	; 130a0 <argp_parse@@Base+0xa38>
   12918:	ldr	r2, [r2]
   1291c:	cmp	r2, #0
   12920:	beq	12940 <argp_parse@@Base+0x2d8>
   12924:	add	r2, r3, #32
   12928:	ldr	r1, [pc, #1908]	; 130a4 <argp_parse@@Base+0xa3c>
   1292c:	str	r1, [r3, #16]
   12930:	mov	r3, #0
   12934:	str	r3, [r2]
   12938:	mov	r8, r4
   1293c:	b	126c0 <argp_parse@@Base+0x58>
   12940:	ldr	r2, [pc, #1888]	; 130a8 <argp_parse@@Base+0xa40>
   12944:	ldr	r2, [r2]
   12948:	cmp	r2, #0
   1294c:	addeq	r2, r3, #16
   12950:	bne	12924 <argp_parse@@Base+0x2bc>
   12954:	b	12930 <argp_parse@@Base+0x2c8>
   12958:	ldr	r3, [fp, #-240]	; 0xffffff10
   1295c:	cmp	r3, #0
   12960:	addne	sl, sl, #1
   12964:	strne	sl, [fp, #-208]	; 0xffffff30
   12968:	movne	r3, #43	; 0x2b
   1296c:	strbne	r3, [r7, r5]
   12970:	b	127e0 <argp_parse@@Base+0x178>
   12974:	ldr	r3, [fp, #-112]	; 0xffffff90
   12978:	str	r3, [fp, #-108]	; 0xffffff94
   1297c:	b	12820 <argp_parse@@Base+0x1b8>
   12980:	mov	r3, r6
   12984:	mov	r2, r7
   12988:	sub	r1, fp, #96	; 0x60
   1298c:	mov	r0, r5
   12990:	bl	12080 <tcgetattr@plt+0xdbc>
   12994:	add	r5, r5, #36	; 0x24
   12998:	ldr	r3, [fp, #-108]	; 0xffffff94
   1299c:	cmp	r5, r3
   129a0:	bcs	129fc <argp_parse@@Base+0x394>
   129a4:	cmp	r0, #7
   129a8:	cmpne	r0, #0
   129ac:	bne	129fc <argp_parse@@Base+0x394>
   129b0:	ldr	r3, [r5, #16]
   129b4:	cmp	r3, #0
   129b8:	ldrne	r2, [r5, #20]
   129bc:	ldrne	r3, [r3, #28]
   129c0:	ldrne	r3, [r3, r2, lsl #2]
   129c4:	strne	r3, [r5, #24]
   129c8:	ldr	r3, [r5]
   129cc:	cmp	r3, #0
   129d0:	bne	12980 <argp_parse@@Base+0x318>
   129d4:	ldr	r3, [r5, #4]
   129d8:	ldr	r3, [r3, #16]
   129dc:	cmp	r3, #0
   129e0:	beq	12980 <argp_parse@@Base+0x318>
   129e4:	ldr	r3, [r3]
   129e8:	cmp	r3, #0
   129ec:	ldrne	r3, [r5, #28]
   129f0:	ldrne	r2, [r5, #24]
   129f4:	strne	r2, [r3]
   129f8:	b	12980 <argp_parse@@Base+0x318>
   129fc:	mov	r4, r0
   12a00:	cmp	r0, #7
   12a04:	beq	12a18 <argp_parse@@Base+0x3b0>
   12a08:	b	12a10 <argp_parse@@Base+0x3a8>
   12a0c:	mov	r4, #0
   12a10:	cmp	r4, #0
   12a14:	bne	12ed8 <argp_parse@@Base+0x870>
   12a18:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12a1c:	tst	r3, #2
   12a20:	moveq	r3, #1
   12a24:	streq	r3, [fp, #-144]	; 0xffffff70
   12a28:	beq	12a54 <argp_parse@@Base+0x3ec>
   12a2c:	mov	r2, #0
   12a30:	str	r2, [fp, #-144]	; 0xffffff70
   12a34:	tst	r3, #1
   12a38:	beq	12a54 <argp_parse@@Base+0x3ec>
   12a3c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12a40:	sub	r3, r3, #4
   12a44:	str	r3, [fp, #-88]	; 0xffffffa8
   12a48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12a4c:	add	r3, r3, #1
   12a50:	str	r3, [fp, #-92]	; 0xffffffa4
   12a54:	ldr	r3, [fp, #-88]	; 0xffffffa8
   12a58:	ldr	r2, [fp, #-232]	; 0xffffff18
   12a5c:	cmp	r2, r3
   12a60:	beq	12a80 <argp_parse@@Base+0x418>
   12a64:	ldr	r3, [pc, #1568]	; 1308c <argp_parse@@Base+0xa24>
   12a68:	ldr	r3, [r3]
   12a6c:	str	r3, [fp, #-56]	; 0xffffffc8
   12a70:	mov	r6, #0
   12a74:	mov	sl, #1
   12a78:	mvn	r9, #0
   12a7c:	b	12cf0 <argp_parse@@Base+0x688>
   12a80:	ldr	r0, [r2]
   12a84:	cmp	r0, #0
   12a88:	beq	12a64 <argp_parse@@Base+0x3fc>
   12a8c:	bl	1319c <argp_parse@@Base+0xb34>
   12a90:	str	r0, [fp, #-56]	; 0xffffffc8
   12a94:	b	12a70 <argp_parse@@Base+0x408>
   12a98:	ldr	r3, [fp, #-84]	; 0xffffffac
   12a9c:	str	r3, [fp, #-148]	; 0xffffff6c
   12aa0:	str	r9, [fp, #-140]	; 0xffffff74
   12aa4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12aa8:	tst	r3, #64	; 0x40
   12aac:	beq	12b78 <argp_parse@@Base+0x510>
   12ab0:	sub	r3, fp, #148	; 0x94
   12ab4:	str	r3, [sp, #4]
   12ab8:	str	r6, [sp]
   12abc:	ldr	r3, [fp, #-152]	; 0xffffff68
   12ac0:	ldr	r2, [fp, #-156]	; 0xffffff64
   12ac4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12ac8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12acc:	bl	13338 <argp_parse@@Base+0xcd0>
   12ad0:	mov	r5, r0
   12ad4:	ldr	r4, [fp, #-148]	; 0xffffff6c
   12ad8:	str	r4, [fp, #-84]	; 0xffffffac
   12adc:	cmn	r5, #1
   12ae0:	beq	12ba0 <argp_parse@@Base+0x538>
   12ae4:	cmp	r5, #63	; 0x3f
   12ae8:	beq	12bcc <argp_parse@@Base+0x564>
   12aec:	cmp	r5, #1
   12af0:	beq	12c04 <argp_parse@@Base+0x59c>
   12af4:	ldr	r4, [fp, #-136]	; 0xffffff78
   12af8:	asrs	r3, r5, #24
   12afc:	bne	12cb0 <argp_parse@@Base+0x648>
   12b00:	mov	r1, r5
   12b04:	ldr	r0, [fp, #-156]	; 0xffffff64
   12b08:	bl	11174 <strchr@plt>
   12b0c:	subs	r1, r0, #0
   12b10:	beq	12b60 <argp_parse@@Base+0x4f8>
   12b14:	ldr	r0, [fp, #-112]	; 0xffffff90
   12b18:	ldr	r2, [fp, #-108]	; 0xffffff94
   12b1c:	cmp	r2, r0
   12b20:	bls	12b60 <argp_parse@@Base+0x4f8>
   12b24:	ldr	r3, [r0, #8]
   12b28:	cmp	r1, r3
   12b2c:	bcc	12b48 <argp_parse@@Base+0x4e0>
   12b30:	add	r0, r0, #36	; 0x24
   12b34:	cmp	r2, r0
   12b38:	bls	12b60 <argp_parse@@Base+0x4f8>
   12b3c:	ldr	r3, [r0, #8]
   12b40:	cmp	r1, r3
   12b44:	bcs	12b30 <argp_parse@@Base+0x4c8>
   12b48:	mov	r3, r4
   12b4c:	mov	r2, r5
   12b50:	sub	r1, fp, #96	; 0x60
   12b54:	bl	12080 <tcgetattr@plt+0xdbc>
   12b58:	cmp	r0, #7
   12b5c:	bne	12ce8 <argp_parse@@Base+0x680>
   12b60:	ldr	r3, [pc, #1348]	; 130ac <argp_parse@@Base+0xa44>
   12b64:	mov	r2, r5
   12b68:	ldr	r1, [pc, #1344]	; 130b0 <argp_parse@@Base+0xa48>
   12b6c:	sub	r0, fp, #96	; 0x60
   12b70:	bl	168f4 <argp_error@@Base>
   12b74:	b	12d90 <argp_parse@@Base+0x728>
   12b78:	sub	r3, fp, #148	; 0x94
   12b7c:	str	r3, [sp, #4]
   12b80:	str	r6, [sp]
   12b84:	ldr	r3, [fp, #-152]	; 0xffffff68
   12b88:	ldr	r2, [fp, #-156]	; 0xffffff64
   12b8c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   12b90:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12b94:	bl	132dc <argp_parse@@Base+0xc74>
   12b98:	mov	r5, r0
   12b9c:	b	12ad4 <argp_parse@@Base+0x46c>
   12ba0:	str	r6, [fp, #-100]	; 0xffffff9c
   12ba4:	cmp	r4, #1
   12ba8:	ble	12d18 <argp_parse@@Base+0x6b0>
   12bac:	sub	r3, r4, #-1073741823	; 0xc0000001
   12bb0:	ldr	r1, [pc, #1276]	; 130b4 <argp_parse@@Base+0xa4c>
   12bb4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12bb8:	ldr	r0, [r2, r3, lsl #2]
   12bbc:	bl	10fe8 <strcmp@plt>
   12bc0:	cmp	r0, #0
   12bc4:	streq	r4, [fp, #-72]	; 0xffffffb8
   12bc8:	b	12d18 <argp_parse@@Base+0x6b0>
   12bcc:	ldr	r3, [fp, #-140]	; 0xffffff74
   12bd0:	cmn	r3, #1
   12bd4:	beq	12af4 <argp_parse@@Base+0x48c>
   12bd8:	mov	r3, #0
   12bdc:	b	12da0 <argp_parse@@Base+0x738>
   12be0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   12be4:	tst	r2, #4
   12be8:	movne	r3, #1
   12bec:	bne	12da0 <argp_parse@@Base+0x738>
   12bf0:	add	r2, r3, #1
   12bf4:	str	r2, [fp, #-84]	; 0xffffffac
   12bf8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   12bfc:	ldr	r3, [r2, r3, lsl #2]
   12c00:	str	r3, [fp, #-136]	; 0xffffff78
   12c04:	ldr	r7, [fp, #-136]	; 0xffffff78
   12c08:	ldr	r8, [fp, #-84]	; 0xffffffac
   12c0c:	sub	r8, r8, #1
   12c10:	str	r8, [fp, #-84]	; 0xffffffac
   12c14:	ldr	r5, [fp, #-112]	; 0xffffff90
   12c18:	ldr	r3, [fp, #-108]	; 0xffffff94
   12c1c:	cmp	r3, r5
   12c20:	bhi	12c6c <argp_parse@@Base+0x604>
   12c24:	b	12ca8 <argp_parse@@Base+0x640>
   12c28:	ldr	r3, [fp, #-84]	; 0xffffffac
   12c2c:	sub	r3, r3, #1
   12c30:	str	r3, [fp, #-84]	; 0xffffffac
   12c34:	mov	r3, r6
   12c38:	ldr	r2, [pc, #1144]	; 130b8 <argp_parse@@Base+0xa50>
   12c3c:	sub	r1, fp, #96	; 0x60
   12c40:	mov	r0, r5
   12c44:	bl	12080 <tcgetattr@plt+0xdbc>
   12c48:	add	r5, r5, #36	; 0x24
   12c4c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12c50:	cmp	r5, r3
   12c54:	movcs	r3, #0
   12c58:	movcc	r3, #1
   12c5c:	cmp	r0, #7
   12c60:	movne	r3, #0
   12c64:	cmp	r3, #0
   12c68:	beq	1304c <argp_parse@@Base+0x9e4>
   12c6c:	ldr	r3, [fp, #-84]	; 0xffffffac
   12c70:	add	r3, r3, #1
   12c74:	str	r3, [fp, #-84]	; 0xffffffac
   12c78:	mov	r3, r7
   12c7c:	mov	r2, r6
   12c80:	sub	r1, fp, #96	; 0x60
   12c84:	mov	r0, r5
   12c88:	bl	12080 <tcgetattr@plt+0xdbc>
   12c8c:	cmp	r0, #7
   12c90:	beq	12c28 <argp_parse@@Base+0x5c0>
   12c94:	add	r5, r5, #36	; 0x24
   12c98:	cmp	r0, #0
   12c9c:	beq	1305c <argp_parse@@Base+0x9f4>
   12ca0:	cmp	r0, #7
   12ca4:	bne	12ce8 <argp_parse@@Base+0x680>
   12ca8:	mov	r5, #1
   12cac:	b	12d90 <argp_parse@@Base+0x728>
   12cb0:	ands	r1, r5, #8388608	; 0x800000
   12cb4:	movne	r1, #-16777216	; 0xff000000
   12cb8:	bic	r2, r5, #-16777216	; 0xff000000
   12cbc:	add	r0, r3, r3, lsl #3
   12cc0:	lsl	r0, r0, #2
   12cc4:	sub	r0, r0, #36	; 0x24
   12cc8:	mov	r3, r4
   12ccc:	orr	r2, r2, r1
   12cd0:	sub	r1, fp, #96	; 0x60
   12cd4:	ldr	ip, [fp, #-112]	; 0xffffff90
   12cd8:	add	r0, ip, r0
   12cdc:	bl	12080 <tcgetattr@plt+0xdbc>
   12ce0:	cmp	r0, #7
   12ce4:	beq	12d30 <argp_parse@@Base+0x6c8>
   12ce8:	cmp	r0, #0
   12cec:	bne	12e40 <argp_parse@@Base+0x7d8>
   12cf0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12cf4:	cmp	r3, #0
   12cf8:	beq	12d0c <argp_parse@@Base+0x6a4>
   12cfc:	ldr	r2, [fp, #-84]	; 0xffffffac
   12d00:	cmp	r3, r2
   12d04:	strgt	r6, [fp, #-72]	; 0xffffffb8
   12d08:	ble	12d18 <argp_parse@@Base+0x6b0>
   12d0c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12d10:	cmp	r3, #0
   12d14:	bne	12a98 <argp_parse@@Base+0x430>
   12d18:	ldr	r3, [fp, #-84]	; 0xffffffac
   12d1c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12d20:	cmp	r3, r2
   12d24:	blt	12be0 <argp_parse@@Base+0x578>
   12d28:	mov	r3, #1
   12d2c:	b	12da0 <argp_parse@@Base+0x738>
   12d30:	ldr	r3, [fp, #-152]	; 0xffffff68
   12d34:	ldr	r2, [r3, #12]
   12d38:	cmp	r2, r5
   12d3c:	beq	12d70 <argp_parse@@Base+0x708>
   12d40:	ldr	r2, [r3]
   12d44:	cmp	r2, #0
   12d48:	beq	12e38 <argp_parse@@Base+0x7d0>
   12d4c:	add	r3, r3, #16
   12d50:	ldr	r2, [r3, #12]
   12d54:	cmp	r2, r5
   12d58:	beq	12d70 <argp_parse@@Base+0x708>
   12d5c:	ldr	r2, [r3]
   12d60:	cmp	r2, #0
   12d64:	bne	12d4c <argp_parse@@Base+0x6e4>
   12d68:	ldr	r2, [pc, #844]	; 130bc <argp_parse@@Base+0xa54>
   12d6c:	b	12d80 <argp_parse@@Base+0x718>
   12d70:	ldr	r2, [r3]
   12d74:	ldr	r3, [pc, #832]	; 130bc <argp_parse@@Base+0xa54>
   12d78:	cmp	r2, #0
   12d7c:	moveq	r2, r3
   12d80:	ldr	r3, [pc, #804]	; 130ac <argp_parse@@Base+0xa44>
   12d84:	ldr	r1, [pc, #820]	; 130c0 <argp_parse@@Base+0xa58>
   12d88:	sub	r0, fp, #96	; 0x60
   12d8c:	bl	168f4 <argp_error@@Base>
   12d90:	add	r5, r5, #1
   12d94:	bics	r3, r5, #2
   12d98:	moveq	r3, #1
   12d9c:	movne	r3, #0
   12da0:	cmp	r3, #0
   12da4:	moveq	r4, #7
   12da8:	beq	12e44 <argp_parse@@Base+0x7dc>
   12dac:	ldr	r3, [fp, #-84]	; 0xffffffac
   12db0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   12db4:	cmp	r3, r2
   12db8:	beq	12ee4 <argp_parse@@Base+0x87c>
   12dbc:	ldr	r2, [fp, #4]
   12dc0:	cmp	r2, #0
   12dc4:	strne	r3, [r2]
   12dc8:	beq	12fe0 <argp_parse@@Base+0x978>
   12dcc:	ldr	r5, [fp, #-108]	; 0xffffff94
   12dd0:	sub	r5, r5, #36	; 0x24
   12dd4:	ldr	r3, [fp, #-112]	; 0xffffff90
   12dd8:	cmp	r5, r3
   12ddc:	bcc	1301c <argp_parse@@Base+0x9b4>
   12de0:	ldr	r7, [pc, #732]	; 130c4 <argp_parse@@Base+0xa5c>
   12de4:	mov	r6, #0
   12de8:	mov	r3, r6
   12dec:	mov	r2, r7
   12df0:	sub	r1, fp, #96	; 0x60
   12df4:	mov	r0, r5
   12df8:	bl	12080 <tcgetattr@plt+0xdbc>
   12dfc:	sub	r5, r5, #36	; 0x24
   12e00:	ldr	r3, [fp, #-112]	; 0xffffff90
   12e04:	cmp	r5, r3
   12e08:	bcc	12e18 <argp_parse@@Base+0x7b0>
   12e0c:	cmp	r0, #7
   12e10:	cmpne	r0, #0
   12e14:	beq	12de8 <argp_parse@@Base+0x780>
   12e18:	mov	r4, r0
   12e1c:	cmp	r0, #7
   12e20:	moveq	r4, #0
   12e24:	ldr	r5, [fp, #-108]	; 0xffffff94
   12e28:	sub	r5, r5, #36	; 0x24
   12e2c:	cmp	r3, r5
   12e30:	bls	12e9c <argp_parse@@Base+0x834>
   12e34:	b	12ed0 <argp_parse@@Base+0x868>
   12e38:	ldr	r2, [pc, #636]	; 130bc <argp_parse@@Base+0xa54>
   12e3c:	b	12d80 <argp_parse@@Base+0x718>
   12e40:	mov	r4, r0
   12e44:	cmp	r4, #7
   12e48:	beq	13004 <argp_parse@@Base+0x99c>
   12e4c:	ldr	r5, [fp, #-112]	; 0xffffff90
   12e50:	ldr	r3, [fp, #-108]	; 0xffffff94
   12e54:	cmp	r3, r5
   12e58:	bls	12e88 <argp_parse@@Base+0x820>
   12e5c:	ldr	r7, [pc, #612]	; 130c8 <argp_parse@@Base+0xa60>
   12e60:	mov	r6, #0
   12e64:	mov	r3, r6
   12e68:	mov	r2, r7
   12e6c:	sub	r1, fp, #96	; 0x60
   12e70:	mov	r0, r5
   12e74:	bl	12080 <tcgetattr@plt+0xdbc>
   12e78:	add	r5, r5, #36	; 0x24
   12e7c:	ldr	r3, [fp, #-108]	; 0xffffff94
   12e80:	cmp	r5, r3
   12e84:	bcc	12e64 <argp_parse@@Base+0x7fc>
   12e88:	ldr	r5, [fp, #-108]	; 0xffffff94
   12e8c:	sub	r5, r5, #36	; 0x24
   12e90:	ldr	r3, [fp, #-112]	; 0xffffff90
   12e94:	cmp	r3, r5
   12e98:	bhi	12ec8 <argp_parse@@Base+0x860>
   12e9c:	ldr	r7, [pc, #552]	; 130cc <argp_parse@@Base+0xa64>
   12ea0:	mov	r6, #0
   12ea4:	mov	r3, r6
   12ea8:	mov	r2, r7
   12eac:	sub	r1, fp, #96	; 0x60
   12eb0:	mov	r0, r5
   12eb4:	bl	12080 <tcgetattr@plt+0xdbc>
   12eb8:	sub	r5, r5, #36	; 0x24
   12ebc:	ldr	r3, [fp, #-112]	; 0xffffff90
   12ec0:	cmp	r5, r3
   12ec4:	bcs	12ea4 <argp_parse@@Base+0x83c>
   12ec8:	cmp	r4, #7
   12ecc:	moveq	r4, #22
   12ed0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12ed4:	bl	1325c <argp_parse@@Base+0xbf4>
   12ed8:	mov	r0, r4
   12edc:	sub	sp, fp, #32
   12ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ee4:	ldr	r6, [fp, #-112]	; 0xffffff90
   12ee8:	ldr	r5, [fp, #-108]	; 0xffffff94
   12eec:	cmp	r6, r5
   12ef0:	bcs	13024 <argp_parse@@Base+0x9bc>
   12ef4:	mov	r4, #0
   12ef8:	ldr	r8, [pc, #464]	; 130d0 <argp_parse@@Base+0xa68>
   12efc:	mov	r7, r4
   12f00:	mov	r0, r4
   12f04:	b	12f24 <argp_parse@@Base+0x8bc>
   12f08:	add	r6, r6, #36	; 0x24
   12f0c:	ldr	r5, [fp, #-108]	; 0xffffff94
   12f10:	cmp	r6, r5
   12f14:	bcs	12f50 <argp_parse@@Base+0x8e8>
   12f18:	cmp	r0, #7
   12f1c:	cmpne	r0, #0
   12f20:	bne	12f48 <argp_parse@@Base+0x8e0>
   12f24:	ldr	r3, [r6, #12]
   12f28:	cmp	r3, #0
   12f2c:	bne	12f08 <argp_parse@@Base+0x8a0>
   12f30:	mov	r3, r7
   12f34:	mov	r2, r8
   12f38:	sub	r1, fp, #96	; 0x60
   12f3c:	mov	r0, r6
   12f40:	bl	12080 <tcgetattr@plt+0xdbc>
   12f44:	b	12f08 <argp_parse@@Base+0x8a0>
   12f48:	mov	r4, r0
   12f4c:	b	12fb4 <argp_parse@@Base+0x94c>
   12f50:	mov	r4, r0
   12f54:	sub	r5, r5, #36	; 0x24
   12f58:	ldr	r3, [fp, #-112]	; 0xffffff90
   12f5c:	cmp	r3, r5
   12f60:	bhi	12fb4 <argp_parse@@Base+0x94c>
   12f64:	cmp	r0, #0
   12f68:	cmpne	r0, #7
   12f6c:	bne	12fb4 <argp_parse@@Base+0x94c>
   12f70:	ldr	r7, [pc, #348]	; 130d4 <argp_parse@@Base+0xa6c>
   12f74:	mov	r6, #0
   12f78:	mov	r3, r6
   12f7c:	mov	r2, r7
   12f80:	sub	r1, fp, #96	; 0x60
   12f84:	mov	r0, r5
   12f88:	bl	12080 <tcgetattr@plt+0xdbc>
   12f8c:	sub	r5, r5, #36	; 0x24
   12f90:	ldr	r3, [fp, #-112]	; 0xffffff90
   12f94:	cmp	r5, r3
   12f98:	bcc	12fb0 <argp_parse@@Base+0x948>
   12f9c:	cmp	r0, #7
   12fa0:	cmpne	r0, #0
   12fa4:	beq	12f78 <argp_parse@@Base+0x910>
   12fa8:	mov	r4, r0
   12fac:	b	12fb4 <argp_parse@@Base+0x94c>
   12fb0:	mov	r4, r0
   12fb4:	cmp	r4, #7
   12fb8:	beq	13038 <argp_parse@@Base+0x9d0>
   12fbc:	ldr	r3, [fp, #4]
   12fc0:	cmp	r3, #0
   12fc4:	beq	1307c <argp_parse@@Base+0xa14>
   12fc8:	ldr	r3, [fp, #-84]	; 0xffffffac
   12fcc:	ldr	r2, [fp, #4]
   12fd0:	str	r3, [r2]
   12fd4:	cmp	r4, #0
   12fd8:	beq	12dcc <argp_parse@@Base+0x764>
   12fdc:	b	12e44 <argp_parse@@Base+0x7dc>
   12fe0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12fe4:	tst	r3, #2
   12fe8:	bne	13004 <argp_parse@@Base+0x99c>
   12fec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12ff0:	cmp	r0, #0
   12ff4:	beq	13004 <argp_parse@@Base+0x99c>
   12ff8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12ffc:	ldr	r1, [pc, #212]	; 130d8 <argp_parse@@Base+0xa70>
   13000:	bl	11180 <fprintf@plt>
   13004:	mov	r2, #260	; 0x104
   13008:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1300c:	sub	r0, fp, #96	; 0x60
   13010:	bl	16838 <argp_state_help@@Base>
   13014:	mov	r4, #7
   13018:	b	12e4c <argp_parse@@Base+0x7e4>
   1301c:	mov	r4, #0
   13020:	b	12ec8 <argp_parse@@Base+0x860>
   13024:	sub	r5, r5, #36	; 0x24
   13028:	cmp	r6, r5
   1302c:	movhi	r4, #0
   13030:	bls	12f70 <argp_parse@@Base+0x908>
   13034:	b	12fbc <argp_parse@@Base+0x954>
   13038:	ldr	r3, [fp, #4]
   1303c:	cmp	r3, #0
   13040:	movne	r4, #0
   13044:	bne	12fc8 <argp_parse@@Base+0x960>
   13048:	b	12dcc <argp_parse@@Base+0x764>
   1304c:	cmp	r0, #0
   13050:	bne	12ca0 <argp_parse@@Base+0x638>
   13054:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13058:	str	r3, [fp, #-84]	; 0xffffffac
   1305c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13060:	cmp	r8, r3
   13064:	sublt	r8, r3, r8
   13068:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   1306c:	addlt	r8, r3, r8
   13070:	strlt	r8, [r5, #-24]	; 0xffffffe8
   13074:	strge	sl, [fp, #-100]	; 0xffffff9c
   13078:	b	12cf0 <argp_parse@@Base+0x688>
   1307c:	cmp	r4, #0
   13080:	beq	12dcc <argp_parse@@Base+0x764>
   13084:	b	12e4c <argp_parse@@Base+0x7e4>
   13088:	andeq	r9, r2, ip, ror #4
   1308c:	andeq	r9, r2, r8, ror #4
   13090:	andeq	r9, r2, r0, ror r2
   13094:	andeq	r9, r2, ip, ror r2
   13098:	tsteq	r0, r3
   1309c:	andeq	r8, r1, ip, asr #3
   130a0:	andeq	r9, r2, r4, asr #5
   130a4:	andeq	r8, r1, r8, ror #3
   130a8:	andeq	r9, r2, ip, lsl #5
   130ac:	andeq	r8, r1, r4, lsl #4
   130b0:	andeq	r8, r1, ip, lsl r3
   130b4:	andeq	r8, r1, r8, lsl r3
   130b8:	tsteq	r0, r6
   130bc:	andeq	r8, r1, r4, lsl r3
   130c0:	andeq	r8, r1, r4, lsr #6
   130c4:	tsteq	r0, r4
   130c8:	tsteq	r0, r5
   130cc:	tsteq	r0, r7
   130d0:	tsteq	r0, r2
   130d4:	tsteq	r0, r1
   130d8:	andeq	r8, r1, r0, lsr r3
   130dc:	cmp	r1, #0
   130e0:	beq	1312c <argp_parse@@Base+0xac4>
   130e4:	ldr	r2, [r1, #52]	; 0x34
   130e8:	ldr	r3, [r2, #48]	; 0x30
   130ec:	ldr	r1, [r2, #52]	; 0x34
   130f0:	cmp	r3, r1
   130f4:	bcs	13134 <argp_parse@@Base+0xacc>
   130f8:	ldr	r2, [r3, #4]
   130fc:	cmp	r0, r2
   13100:	beq	1311c <argp_parse@@Base+0xab4>
   13104:	add	r3, r3, #36	; 0x24
   13108:	cmp	r3, r1
   1310c:	bcs	13124 <argp_parse@@Base+0xabc>
   13110:	ldr	r2, [r3, #4]
   13114:	cmp	r2, r0
   13118:	bne	13104 <argp_parse@@Base+0xa9c>
   1311c:	ldr	r0, [r3, #24]
   13120:	bx	lr
   13124:	mov	r0, #0
   13128:	bx	lr
   1312c:	mov	r0, #0
   13130:	bx	lr
   13134:	mov	r0, #0
   13138:	bx	lr
   1313c:	push	{lr}		; (str lr, [sp, #-4]!)
   13140:	sub	sp, sp, #12
   13144:	ldr	r3, [pc, #28]	; 13168 <argp_parse@@Base+0xb00>
   13148:	ldr	r1, [r3]
   1314c:	ldr	r3, [r3, #4]
   13150:	str	r3, [sp]
   13154:	ldr	r3, [pc, #16]	; 1316c <argp_parse@@Base+0xb04>
   13158:	ldr	r2, [pc, #16]	; 13170 <argp_parse@@Base+0xb08>
   1315c:	bl	1371c <argp_parse@@Base+0x10b4>
   13160:	add	sp, sp, #12
   13164:	pop	{pc}		; (ldr pc, [sp], #4)
   13168:	muleq	r2, r0, r2
   1316c:	andeq	r8, r1, r8, lsl r4
   13170:	andeq	r8, r1, r8, lsr #8
   13174:	ldr	r2, [pc, #20]	; 13190 <argp_parse@@Base+0xb28>
   13178:	ldr	r3, [pc, #20]	; 13194 <argp_parse@@Base+0xb2c>
   1317c:	str	r2, [r3]
   13180:	ldr	r3, [pc, #16]	; 13198 <argp_parse@@Base+0xb30>
   13184:	str	r0, [r3]
   13188:	str	r1, [r3, #4]
   1318c:	bx	lr
   13190:	andeq	r3, r1, ip, lsr r1
   13194:	andeq	r9, r2, ip, lsl #5
   13198:	muleq	r2, r0, r2
   1319c:	ldrb	r3, [r0]
   131a0:	cmp	r3, #47	; 0x2f
   131a4:	bne	131b4 <argp_parse@@Base+0xb4c>
   131a8:	ldrb	r3, [r0, #1]!
   131ac:	cmp	r3, #47	; 0x2f
   131b0:	beq	131a8 <argp_parse@@Base+0xb40>
   131b4:	ldrb	r2, [r0]
   131b8:	cmp	r2, #0
   131bc:	bxeq	lr
   131c0:	push	{lr}		; (str lr, [sp, #-4]!)
   131c4:	mov	r1, r0
   131c8:	mov	r3, #0
   131cc:	mov	lr, #1
   131d0:	mov	ip, r3
   131d4:	b	131e4 <argp_parse@@Base+0xb7c>
   131d8:	ldrb	r2, [r1, #1]!
   131dc:	cmp	r2, #0
   131e0:	beq	13200 <argp_parse@@Base+0xb98>
   131e4:	cmp	r2, #47	; 0x2f
   131e8:	moveq	r3, lr
   131ec:	beq	131d8 <argp_parse@@Base+0xb70>
   131f0:	cmp	r3, #0
   131f4:	movne	r0, r1
   131f8:	movne	r3, ip
   131fc:	b	131d8 <argp_parse@@Base+0xb70>
   13200:	pop	{pc}		; (ldr pc, [sp], #4)
   13204:	push	{r4, lr}
   13208:	mov	r4, r0
   1320c:	bl	11168 <strlen@plt>
   13210:	cmp	r0, #1
   13214:	popls	{r4, pc}
   13218:	sub	r3, r0, #1
   1321c:	add	r2, r4, r3
   13220:	ldrb	r1, [r4, r3]
   13224:	cmp	r1, #47	; 0x2f
   13228:	popne	{r4, pc}
   1322c:	cmp	r3, #1
   13230:	beq	13254 <argp_parse@@Base+0xbec>
   13234:	sub	r0, r3, #1
   13238:	ldrb	r1, [r2, #-1]!
   1323c:	cmp	r1, #47	; 0x2f
   13240:	beq	1324c <argp_parse@@Base+0xbe4>
   13244:	mov	r0, r3
   13248:	pop	{r4, pc}
   1324c:	mov	r3, r0
   13250:	b	1322c <argp_parse@@Base+0xbc4>
   13254:	mov	r0, #1
   13258:	pop	{r4, pc}
   1325c:	push	{r4, r5, lr}
   13260:	sub	sp, sp, #12
   13264:	mov	r5, r0
   13268:	bl	1118c <__errno_location@plt>
   1326c:	mov	r4, r0
   13270:	ldr	r3, [r0]
   13274:	str	r3, [sp]
   13278:	str	r3, [sp, #4]
   1327c:	mov	r3, #0
   13280:	str	r3, [r0]
   13284:	mov	r0, r5
   13288:	bl	1103c <free@plt>
   1328c:	ldr	r3, [r4]
   13290:	cmp	r3, #0
   13294:	moveq	r3, #4
   13298:	movne	r3, #0
   1329c:	add	r2, sp, #8
   132a0:	add	r3, r2, r3
   132a4:	ldr	r3, [r3, #-8]
   132a8:	str	r3, [r4]
   132ac:	add	sp, sp, #12
   132b0:	pop	{r4, r5, pc}
   132b4:	push	{lr}		; (str lr, [sp, #-4]!)
   132b8:	sub	sp, sp, #20
   132bc:	mov	ip, #0
   132c0:	str	ip, [sp, #8]
   132c4:	str	ip, [sp, #4]
   132c8:	ldr	ip, [sp, #24]
   132cc:	str	ip, [sp]
   132d0:	bl	17570 <argp_error@@Base+0xc7c>
   132d4:	add	sp, sp, #20
   132d8:	pop	{pc}		; (ldr pc, [sp], #4)
   132dc:	push	{lr}		; (str lr, [sp, #-4]!)
   132e0:	sub	sp, sp, #20
   132e4:	mov	ip, #0
   132e8:	str	ip, [sp, #12]
   132ec:	ldr	lr, [sp, #28]
   132f0:	str	lr, [sp, #8]
   132f4:	str	ip, [sp, #4]
   132f8:	ldr	ip, [sp, #24]
   132fc:	str	ip, [sp]
   13300:	bl	16ff4 <argp_error@@Base+0x700>
   13304:	add	sp, sp, #20
   13308:	pop	{pc}		; (ldr pc, [sp], #4)
   1330c:	push	{lr}		; (str lr, [sp, #-4]!)
   13310:	sub	sp, sp, #20
   13314:	mov	ip, #0
   13318:	str	ip, [sp, #8]
   1331c:	mov	ip, #1
   13320:	str	ip, [sp, #4]
   13324:	ldr	ip, [sp, #24]
   13328:	str	ip, [sp]
   1332c:	bl	17570 <argp_error@@Base+0xc7c>
   13330:	add	sp, sp, #20
   13334:	pop	{pc}		; (ldr pc, [sp], #4)
   13338:	push	{lr}		; (str lr, [sp, #-4]!)
   1333c:	sub	sp, sp, #20
   13340:	mov	ip, #0
   13344:	str	ip, [sp, #12]
   13348:	ldr	ip, [sp, #28]
   1334c:	str	ip, [sp, #8]
   13350:	mov	ip, #1
   13354:	str	ip, [sp, #4]
   13358:	ldr	ip, [sp, #24]
   1335c:	str	ip, [sp]
   13360:	bl	16ff4 <argp_error@@Base+0x700>
   13364:	add	sp, sp, #20
   13368:	pop	{pc}		; (ldr pc, [sp], #4)
   1336c:	push	{r4, r5, r6, lr}
   13370:	subs	r4, r0, #0
   13374:	beq	133ec <argp_parse@@Base+0xd84>
   13378:	mov	r1, #47	; 0x2f
   1337c:	mov	r0, r4
   13380:	bl	111f8 <strrchr@plt>
   13384:	cmp	r0, #0
   13388:	addne	r5, r0, #1
   1338c:	moveq	r5, r4
   13390:	sub	r3, r5, r4
   13394:	cmp	r3, #6
   13398:	ble	133d8 <argp_parse@@Base+0xd70>
   1339c:	mov	r2, #7
   133a0:	ldr	r1, [pc, #96]	; 13408 <argp_parse@@Base+0xda0>
   133a4:	sub	r0, r5, #7
   133a8:	bl	11288 <strncmp@plt>
   133ac:	cmp	r0, #0
   133b0:	bne	133d8 <argp_parse@@Base+0xd70>
   133b4:	mov	r2, #3
   133b8:	ldr	r1, [pc, #76]	; 1340c <argp_parse@@Base+0xda4>
   133bc:	mov	r0, r5
   133c0:	bl	11288 <strncmp@plt>
   133c4:	cmp	r0, #0
   133c8:	addeq	r4, r5, #3
   133cc:	ldreq	r3, [pc, #60]	; 13410 <argp_parse@@Base+0xda8>
   133d0:	streq	r4, [r3]
   133d4:	movne	r4, r5
   133d8:	ldr	r3, [pc, #52]	; 13414 <argp_parse@@Base+0xdac>
   133dc:	str	r4, [r3]
   133e0:	ldr	r3, [pc, #48]	; 13418 <argp_parse@@Base+0xdb0>
   133e4:	str	r4, [r3]
   133e8:	pop	{r4, r5, r6, pc}
   133ec:	ldr	r3, [pc, #40]	; 1341c <argp_parse@@Base+0xdb4>
   133f0:	ldr	r3, [r3]
   133f4:	mov	r2, #55	; 0x37
   133f8:	mov	r1, #1
   133fc:	ldr	r0, [pc, #28]	; 13420 <argp_parse@@Base+0xdb8>
   13400:	bl	110d8 <fwrite@plt>
   13404:	bl	11294 <abort@plt>
   13408:	andeq	r8, r1, r0, ror r4
   1340c:	andeq	r8, r1, r8, ror r4
   13410:	andeq	r9, r2, r8, ror #4
   13414:	muleq	r2, r8, r2
   13418:	andeq	r9, r2, ip, ror #4
   1341c:	andeq	r9, r2, r0, ror r2
   13420:	andeq	r8, r1, r8, lsr r4
   13424:	push	{r4, r5, r6, lr}
   13428:	sub	sp, sp, #32
   1342c:	mov	r4, r0
   13430:	ldr	r5, [sp, #48]	; 0x30
   13434:	ldr	r6, [sp, #52]	; 0x34
   13438:	cmp	r1, #0
   1343c:	beq	134c4 <argp_parse@@Base+0xe5c>
   13440:	str	r3, [sp]
   13444:	mov	r3, r2
   13448:	mov	r2, r1
   1344c:	ldr	r1, [pc, #644]	; 136d8 <argp_parse@@Base+0x1070>
   13450:	bl	11180 <fprintf@plt>
   13454:	ldr	r3, [pc, #640]	; 136dc <argp_parse@@Base+0x1074>
   13458:	ldr	r2, [pc, #640]	; 136e0 <argp_parse@@Base+0x1078>
   1345c:	ldr	r1, [pc, #640]	; 136e4 <argp_parse@@Base+0x107c>
   13460:	mov	r0, r4
   13464:	bl	11180 <fprintf@plt>
   13468:	mov	r1, r4
   1346c:	mov	r0, #10
   13470:	bl	1121c <fputc@plt>
   13474:	ldr	r2, [pc, #620]	; 136e8 <argp_parse@@Base+0x1080>
   13478:	ldr	r1, [pc, #620]	; 136ec <argp_parse@@Base+0x1084>
   1347c:	mov	r0, r4
   13480:	bl	11180 <fprintf@plt>
   13484:	mov	r1, r4
   13488:	mov	r0, #10
   1348c:	bl	1121c <fputc@plt>
   13490:	cmp	r6, #9
   13494:	ldrls	pc, [pc, r6, lsl #2]
   13498:	b	13688 <argp_parse@@Base+0x1020>
   1349c:	andeq	r3, r1, r0, ror #9
   134a0:	ldrdeq	r3, [r1], -r0
   134a4:	andeq	r3, r1, r8, ror #9
   134a8:	andeq	r3, r1, r0, lsl #10
   134ac:	andeq	r3, r1, r0, lsr #10
   134b0:	andeq	r3, r1, r8, asr #10
   134b4:	andeq	r3, r1, r8, ror r5
   134b8:			; <UNDEFINED> instruction: 0x000135b0
   134bc:	strdeq	r3, [r1], -r0
   134c0:	andeq	r3, r1, r8, lsr r6
   134c4:	ldr	r1, [pc, #548]	; 136f0 <argp_parse@@Base+0x1088>
   134c8:	bl	11180 <fprintf@plt>
   134cc:	b	13454 <argp_parse@@Base+0xdec>
   134d0:	ldr	r2, [r5]
   134d4:	ldr	r1, [pc, #536]	; 136f4 <argp_parse@@Base+0x108c>
   134d8:	mov	r0, r4
   134dc:	bl	11180 <fprintf@plt>
   134e0:	add	sp, sp, #32
   134e4:	pop	{r4, r5, r6, pc}
   134e8:	ldr	r3, [r5, #4]
   134ec:	ldr	r2, [r5]
   134f0:	ldr	r1, [pc, #512]	; 136f8 <argp_parse@@Base+0x1090>
   134f4:	mov	r0, r4
   134f8:	bl	11180 <fprintf@plt>
   134fc:	b	134e0 <argp_parse@@Base+0xe78>
   13500:	ldr	r3, [r5, #4]
   13504:	ldr	r2, [r5]
   13508:	ldr	r1, [r5, #8]
   1350c:	str	r1, [sp]
   13510:	ldr	r1, [pc, #484]	; 136fc <argp_parse@@Base+0x1094>
   13514:	mov	r0, r4
   13518:	bl	11180 <fprintf@plt>
   1351c:	b	134e0 <argp_parse@@Base+0xe78>
   13520:	ldr	r3, [r5, #4]
   13524:	ldr	r2, [r5]
   13528:	ldr	r1, [r5, #12]
   1352c:	str	r1, [sp, #4]
   13530:	ldr	r1, [r5, #8]
   13534:	str	r1, [sp]
   13538:	ldr	r1, [pc, #448]	; 13700 <argp_parse@@Base+0x1098>
   1353c:	mov	r0, r4
   13540:	bl	11180 <fprintf@plt>
   13544:	b	134e0 <argp_parse@@Base+0xe78>
   13548:	ldr	r3, [r5, #4]
   1354c:	ldr	r2, [r5]
   13550:	ldr	r1, [r5, #16]
   13554:	str	r1, [sp, #8]
   13558:	ldr	r1, [r5, #12]
   1355c:	str	r1, [sp, #4]
   13560:	ldr	r1, [r5, #8]
   13564:	str	r1, [sp]
   13568:	ldr	r1, [pc, #404]	; 13704 <argp_parse@@Base+0x109c>
   1356c:	mov	r0, r4
   13570:	bl	11180 <fprintf@plt>
   13574:	b	134e0 <argp_parse@@Base+0xe78>
   13578:	ldr	r3, [r5, #4]
   1357c:	ldr	r2, [r5]
   13580:	ldr	r1, [r5, #20]
   13584:	str	r1, [sp, #12]
   13588:	ldr	r1, [r5, #16]
   1358c:	str	r1, [sp, #8]
   13590:	ldr	r1, [r5, #12]
   13594:	str	r1, [sp, #4]
   13598:	ldr	r1, [r5, #8]
   1359c:	str	r1, [sp]
   135a0:	ldr	r1, [pc, #352]	; 13708 <argp_parse@@Base+0x10a0>
   135a4:	mov	r0, r4
   135a8:	bl	11180 <fprintf@plt>
   135ac:	b	134e0 <argp_parse@@Base+0xe78>
   135b0:	ldr	r3, [r5, #4]
   135b4:	ldr	r2, [r5]
   135b8:	ldr	r1, [r5, #24]
   135bc:	str	r1, [sp, #16]
   135c0:	ldr	r1, [r5, #20]
   135c4:	str	r1, [sp, #12]
   135c8:	ldr	r1, [r5, #16]
   135cc:	str	r1, [sp, #8]
   135d0:	ldr	r1, [r5, #12]
   135d4:	str	r1, [sp, #4]
   135d8:	ldr	r1, [r5, #8]
   135dc:	str	r1, [sp]
   135e0:	ldr	r1, [pc, #292]	; 1370c <argp_parse@@Base+0x10a4>
   135e4:	mov	r0, r4
   135e8:	bl	11180 <fprintf@plt>
   135ec:	b	134e0 <argp_parse@@Base+0xe78>
   135f0:	ldr	r3, [r5, #4]
   135f4:	ldr	r2, [r5]
   135f8:	ldr	r1, [r5, #28]
   135fc:	str	r1, [sp, #20]
   13600:	ldr	r1, [r5, #24]
   13604:	str	r1, [sp, #16]
   13608:	ldr	r1, [r5, #20]
   1360c:	str	r1, [sp, #12]
   13610:	ldr	r1, [r5, #16]
   13614:	str	r1, [sp, #8]
   13618:	ldr	r1, [r5, #12]
   1361c:	str	r1, [sp, #4]
   13620:	ldr	r1, [r5, #8]
   13624:	str	r1, [sp]
   13628:	ldr	r1, [pc, #224]	; 13710 <argp_parse@@Base+0x10a8>
   1362c:	mov	r0, r4
   13630:	bl	11180 <fprintf@plt>
   13634:	b	134e0 <argp_parse@@Base+0xe78>
   13638:	ldr	r3, [r5, #4]
   1363c:	ldr	r2, [r5]
   13640:	ldr	r1, [r5, #32]
   13644:	str	r1, [sp, #24]
   13648:	ldr	r1, [r5, #28]
   1364c:	str	r1, [sp, #20]
   13650:	ldr	r1, [r5, #24]
   13654:	str	r1, [sp, #16]
   13658:	ldr	r1, [r5, #20]
   1365c:	str	r1, [sp, #12]
   13660:	ldr	r1, [r5, #16]
   13664:	str	r1, [sp, #8]
   13668:	ldr	r1, [r5, #12]
   1366c:	str	r1, [sp, #4]
   13670:	ldr	r1, [r5, #8]
   13674:	str	r1, [sp]
   13678:	ldr	r1, [pc, #148]	; 13714 <argp_parse@@Base+0x10ac>
   1367c:	mov	r0, r4
   13680:	bl	11180 <fprintf@plt>
   13684:	b	134e0 <argp_parse@@Base+0xe78>
   13688:	ldr	r3, [r5, #4]
   1368c:	ldr	r2, [r5]
   13690:	ldr	r1, [r5, #32]
   13694:	str	r1, [sp, #24]
   13698:	ldr	r1, [r5, #28]
   1369c:	str	r1, [sp, #20]
   136a0:	ldr	r1, [r5, #24]
   136a4:	str	r1, [sp, #16]
   136a8:	ldr	r1, [r5, #20]
   136ac:	str	r1, [sp, #12]
   136b0:	ldr	r1, [r5, #16]
   136b4:	str	r1, [sp, #8]
   136b8:	ldr	r1, [r5, #12]
   136bc:	str	r1, [sp, #4]
   136c0:	ldr	r1, [r5, #8]
   136c4:	str	r1, [sp]
   136c8:	ldr	r1, [pc, #72]	; 13718 <argp_parse@@Base+0x10b0>
   136cc:	mov	r0, r4
   136d0:	bl	11180 <fprintf@plt>
   136d4:	b	134e0 <argp_parse@@Base+0xe78>
   136d8:	andeq	r8, r1, ip, ror r4
   136dc:	andeq	r0, r0, r6, ror #15
   136e0:	muleq	r1, r0, r4
   136e4:	muleq	r1, r0, r7
   136e8:	muleq	r1, r4, r4
   136ec:			; <UNDEFINED> instruction: 0x000184b8
   136f0:	andeq	r8, r1, r8, lsl #9
   136f4:	andeq	r8, r1, r4, ror #10
   136f8:	andeq	r8, r1, r4, ror r5
   136fc:	andeq	r8, r1, ip, lsl #11
   13700:	andeq	r8, r1, r8, lsr #11
   13704:	andeq	r8, r1, r8, asr #11
   13708:	andeq	r8, r1, ip, ror #11
   1370c:	andeq	r8, r1, r4, lsl r6
   13710:	andeq	r8, r1, r0, asr #12
   13714:	andeq	r8, r1, r0, ror r6
   13718:	andeq	r8, r1, r4, lsr #13
   1371c:	push	{r4, r5, lr}
   13720:	sub	sp, sp, #12
   13724:	ldr	r5, [sp, #24]
   13728:	ldr	ip, [r5]
   1372c:	cmp	ip, #0
   13730:	beq	13760 <argp_parse@@Base+0x10f8>
   13734:	mov	lr, r5
   13738:	mov	ip, #0
   1373c:	add	ip, ip, #1
   13740:	ldr	r4, [lr, #4]!
   13744:	cmp	r4, #0
   13748:	bne	1373c <argp_parse@@Base+0x10d4>
   1374c:	str	ip, [sp, #4]
   13750:	str	r5, [sp]
   13754:	bl	13424 <argp_parse@@Base+0xdbc>
   13758:	add	sp, sp, #12
   1375c:	pop	{r4, r5, pc}
   13760:	mov	ip, #0
   13764:	b	1374c <argp_parse@@Base+0x10e4>
   13768:	push	{r4, r5, lr}
   1376c:	sub	sp, sp, #52	; 0x34
   13770:	ldr	r4, [sp, #64]	; 0x40
   13774:	sub	r4, r4, #4
   13778:	add	r5, sp, #4
   1377c:	mov	ip, #0
   13780:	ldr	lr, [r4, #4]!
   13784:	str	lr, [r5, #4]!
   13788:	cmp	lr, #0
   1378c:	beq	1379c <argp_parse@@Base+0x1134>
   13790:	add	ip, ip, #1
   13794:	cmp	ip, #10
   13798:	bne	13780 <argp_parse@@Base+0x1118>
   1379c:	str	ip, [sp, #4]
   137a0:	add	ip, sp, #8
   137a4:	str	ip, [sp]
   137a8:	bl	13424 <argp_parse@@Base+0xdbc>
   137ac:	add	sp, sp, #52	; 0x34
   137b0:	pop	{r4, r5, pc}
   137b4:	push	{r3}		; (str r3, [sp, #-4]!)
   137b8:	push	{lr}		; (str lr, [sp, #-4]!)
   137bc:	sub	sp, sp, #16
   137c0:	add	r3, sp, #24
   137c4:	str	r3, [sp, #12]
   137c8:	str	r3, [sp]
   137cc:	ldr	r3, [sp, #20]
   137d0:	bl	13768 <argp_parse@@Base+0x1100>
   137d4:	add	sp, sp, #16
   137d8:	pop	{lr}		; (ldr lr, [sp], #4)
   137dc:	add	sp, sp, #4
   137e0:	bx	lr
   137e4:	push	{r4, lr}
   137e8:	ldr	r3, [pc, #52]	; 13824 <argp_parse@@Base+0x11bc>
   137ec:	ldr	r1, [r3]
   137f0:	mov	r0, #10
   137f4:	bl	1121c <fputc@plt>
   137f8:	ldr	r1, [pc, #40]	; 13828 <argp_parse@@Base+0x11c0>
   137fc:	ldr	r0, [pc, #40]	; 1382c <argp_parse@@Base+0x11c4>
   13800:	bl	1100c <printf@plt>
   13804:	ldr	r2, [pc, #36]	; 13830 <argp_parse@@Base+0x11c8>
   13808:	ldr	r1, [pc, #36]	; 13834 <argp_parse@@Base+0x11cc>
   1380c:	ldr	r0, [pc, #36]	; 13838 <argp_parse@@Base+0x11d0>
   13810:	bl	1100c <printf@plt>
   13814:	ldr	r1, [pc, #32]	; 1383c <argp_parse@@Base+0x11d4>
   13818:	ldr	r0, [pc, #32]	; 13840 <argp_parse@@Base+0x11d8>
   1381c:	bl	1100c <printf@plt>
   13820:	pop	{r4, pc}
   13824:	andeq	r9, r2, ip, ror r2
   13828:	andeq	r8, r1, r0, ror #13
   1382c:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   13830:	andeq	r8, r1, ip, lsl #14
   13834:	andeq	r8, r1, r8, lsr #8
   13838:	andeq	r8, r1, r4, lsr r7
   1383c:	andeq	r8, r1, r8, asr #14
   13840:	andeq	r8, r1, r8, ror #14
   13844:	push	{r4, lr}
   13848:	cmp	r0, #0
   1384c:	moveq	r0, #1
   13850:	cmp	r0, #0
   13854:	blt	13860 <argp_parse@@Base+0x11f8>
   13858:	bl	11108 <malloc@plt>
   1385c:	pop	{r4, pc}
   13860:	bl	1118c <__errno_location@plt>
   13864:	mov	r3, #12
   13868:	str	r3, [r0]
   1386c:	mov	r0, #0
   13870:	pop	{r4, pc}
   13874:	ldr	r3, [r0]
   13878:	ldr	r2, [r0, #4]
   1387c:	cmp	r2, #0
   13880:	beq	138bc <argp_parse@@Base+0x1254>
   13884:	add	r3, r3, #24
   13888:	b	13898 <argp_parse@@Base+0x1230>
   1388c:	add	r3, r3, #24
   13890:	subs	r2, r2, #1
   13894:	beq	138b4 <argp_parse@@Base+0x124c>
   13898:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1389c:	cmp	r0, #0
   138a0:	beq	1388c <argp_parse@@Base+0x1224>
   138a4:	ldr	r1, [r3, #-12]
   138a8:	tst	r1, #2
   138ac:	bne	1388c <argp_parse@@Base+0x1224>
   138b0:	bx	lr
   138b4:	mov	r0, #0
   138b8:	bx	lr
   138bc:	mov	r0, #0
   138c0:	bx	lr
   138c4:	ldr	r2, [r0, #8]
   138c8:	cmp	r2, #0
   138cc:	beq	138d8 <argp_parse@@Base+0x1270>
   138d0:	mov	r0, #0
   138d4:	bx	lr
   138d8:	ldr	r2, [r1, #8]
   138dc:	cmp	r2, #0
   138e0:	bne	138d0 <argp_parse@@Base+0x1268>
   138e4:	ldr	r2, [r0, #12]
   138e8:	ldr	r1, [r1, #12]
   138ec:	orr	r2, r2, r1
   138f0:	tst	r2, #16
   138f4:	ldreq	r2, [r3]
   138f8:	addeq	r1, r2, #1
   138fc:	streq	r1, [r3]
   13900:	ldreq	r3, [r0, #4]
   13904:	strbeq	r3, [r2]
   13908:	b	138d0 <argp_parse@@Base+0x1268>
   1390c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13910:	sub	sp, sp, #12
   13914:	ldr	r4, [r0]
   13918:	ldr	r9, [r0, #8]
   1391c:	ldr	r5, [r0, #4]
   13920:	cmp	r5, #0
   13924:	beq	13978 <argp_parse@@Base+0x1310>
   13928:	str	r3, [sp, #4]
   1392c:	str	r2, [sp]
   13930:	mov	fp, r1
   13934:	mov	sl, r4
   13938:	mov	r8, #0
   1393c:	b	139b8 <argp_parse@@Base+0x1350>
   13940:	and	r3, r6, #4
   13944:	cmp	r3, #0
   13948:	moveq	sl, r4
   1394c:	tst	r6, #2
   13950:	beq	1395c <argp_parse@@Base+0x12f4>
   13954:	add	r9, r9, #1
   13958:	b	13994 <argp_parse@@Base+0x132c>
   1395c:	ldr	r3, [sp, #4]
   13960:	ldr	r2, [sp]
   13964:	mov	r1, sl
   13968:	mov	r0, r4
   1396c:	blx	fp
   13970:	mov	r8, r0
   13974:	b	13954 <argp_parse@@Base+0x12ec>
   13978:	mov	r8, #0
   1397c:	mov	r0, r8
   13980:	add	sp, sp, #12
   13984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13988:	ldrb	r3, [r9]
   1398c:	cmp	r3, r7
   13990:	beq	13940 <argp_parse@@Base+0x12d8>
   13994:	add	r4, r4, #24
   13998:	subs	r5, r5, #1
   1399c:	movne	r3, #1
   139a0:	moveq	r3, #0
   139a4:	cmp	r8, #0
   139a8:	movne	r3, #0
   139ac:	andeq	r3, r3, #1
   139b0:	cmp	r3, #0
   139b4:	beq	1397c <argp_parse@@Base+0x1314>
   139b8:	ldr	r6, [r4, #12]
   139bc:	tst	r6, #8
   139c0:	bne	13994 <argp_parse@@Base+0x132c>
   139c4:	ldr	r7, [r4, #4]
   139c8:	sub	r3, r7, #1
   139cc:	cmp	r3, #254	; 0xfe
   139d0:	bhi	13994 <argp_parse@@Base+0x132c>
   139d4:	bl	11150 <__ctype_b_loc@plt>
   139d8:	ldr	r2, [r0]
   139dc:	lsl	r3, r7, #1
   139e0:	ldrh	r3, [r2, r3]
   139e4:	tst	r3, #16384	; 0x4000
   139e8:	bne	13988 <argp_parse@@Base+0x1320>
   139ec:	b	13994 <argp_parse@@Base+0x132c>
   139f0:	push	{r4, r5, r6, lr}
   139f4:	ldr	r4, [r0, #12]
   139f8:	ands	r4, r4, #8
   139fc:	movne	r4, #0
   13a00:	bne	13a30 <argp_parse@@Base+0x13c8>
   13a04:	ldr	r5, [r0, #4]
   13a08:	sub	r3, r5, #1
   13a0c:	cmp	r3, #254	; 0xfe
   13a10:	bhi	13a30 <argp_parse@@Base+0x13c8>
   13a14:	bl	11150 <__ctype_b_loc@plt>
   13a18:	ldr	r2, [r0]
   13a1c:	lsl	r3, r5, #1
   13a20:	ldrh	r3, [r2, r3]
   13a24:	and	r3, r3, #16384	; 0x4000
   13a28:	cmp	r3, #0
   13a2c:	movne	r4, r5
   13a30:	mov	r0, r4
   13a34:	pop	{r4, r5, r6, pc}
   13a38:	push	{r4, lr}
   13a3c:	mov	r4, r0
   13a40:	bl	11150 <__ctype_b_loc@plt>
   13a44:	b	13a50 <argp_parse@@Base+0x13e8>
   13a48:	add	r3, r3, #1
   13a4c:	str	r3, [r4]
   13a50:	ldr	r3, [r4]
   13a54:	ldrb	r2, [r3]
   13a58:	ldr	ip, [r0]
   13a5c:	lsl	r1, r2, #1
   13a60:	ldrh	r1, [ip, r1]
   13a64:	tst	r1, #8192	; 0x2000
   13a68:	bne	13a48 <argp_parse@@Base+0x13e0>
   13a6c:	subs	ip, r2, #45	; 0x2d
   13a70:	movne	ip, #1
   13a74:	cmp	r2, #0
   13a78:	beq	13aac <argp_parse@@Base+0x1444>
   13a7c:	tst	r1, #8
   13a80:	bne	13aac <argp_parse@@Base+0x1444>
   13a84:	add	r3, r3, #1
   13a88:	str	r3, [r4]
   13a8c:	ldrb	r2, [r3]
   13a90:	cmp	r2, #0
   13a94:	beq	13aac <argp_parse@@Base+0x1444>
   13a98:	ldr	r1, [r0]
   13a9c:	lsl	r2, r2, #1
   13aa0:	ldrh	r2, [r1, r2]
   13aa4:	tst	r2, #8
   13aa8:	beq	13a84 <argp_parse@@Base+0x141c>
   13aac:	mov	r0, ip
   13ab0:	pop	{r4, pc}
   13ab4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ab8:	add	fp, sp, #32
   13abc:	sub	sp, sp, #12
   13ac0:	ldr	r5, [r0, #4]
   13ac4:	cmp	r5, #0
   13ac8:	bne	13ad4 <argp_parse@@Base+0x146c>
   13acc:	sub	sp, fp, #32
   13ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ad4:	mov	r9, r1
   13ad8:	mov	r6, r0
   13adc:	ldr	r0, [r0, #8]
   13ae0:	bl	11168 <strlen@plt>
   13ae4:	add	r3, r0, #15
   13ae8:	bic	r3, r3, #7
   13aec:	sub	sp, sp, r3
   13af0:	mov	sl, sp
   13af4:	sub	r7, fp, #36	; 0x24
   13af8:	str	sp, [r7, #-4]!
   13afc:	ldr	r4, [r6]
   13b00:	ldr	r8, [pc, #336]	; 13c58 <argp_parse@@Base+0x15f0>
   13b04:	ldr	r2, [r4, #20]
   13b08:	mov	r3, r7
   13b0c:	ldr	r2, [r2, #24]
   13b10:	mov	r1, r8
   13b14:	mov	r0, r4
   13b18:	bl	1390c <argp_parse@@Base+0x12a4>
   13b1c:	add	r4, r4, #28
   13b20:	subs	r5, r5, #1
   13b24:	bne	13b04 <argp_parse@@Base+0x149c>
   13b28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13b2c:	cmp	sl, r3
   13b30:	bcc	13b88 <argp_parse@@Base+0x1520>
   13b34:	ldr	r4, [r6]
   13b38:	ldr	r5, [r6, #4]
   13b3c:	cmp	r5, #0
   13b40:	beq	13acc <argp_parse@@Base+0x1464>
   13b44:	ldr	r7, [pc, #272]	; 13c5c <argp_parse@@Base+0x15f4>
   13b48:	ldr	r2, [r4, #20]
   13b4c:	mov	r3, r9
   13b50:	ldr	r2, [r2, #24]
   13b54:	mov	r1, r7
   13b58:	mov	r0, r4
   13b5c:	bl	1390c <argp_parse@@Base+0x12a4>
   13b60:	add	r4, r4, #28
   13b64:	subs	r5, r5, #1
   13b68:	bne	13b48 <argp_parse@@Base+0x14e0>
   13b6c:	ldr	r7, [r6]
   13b70:	ldr	r8, [r6, #4]
   13b74:	cmp	r8, #0
   13b78:	beq	13acc <argp_parse@@Base+0x1464>
   13b7c:	add	r7, r7, #28
   13b80:	ldr	sl, [pc, #216]	; 13c60 <argp_parse@@Base+0x15f8>
   13b84:	b	13c40 <argp_parse@@Base+0x15d8>
   13b88:	add	r2, r3, #1
   13b8c:	str	r2, [fp, #-40]	; 0xffffffd8
   13b90:	mov	r2, #0
   13b94:	strb	r2, [r3]
   13b98:	mov	r2, sl
   13b9c:	ldr	r1, [pc, #192]	; 13c64 <argp_parse@@Base+0x15fc>
   13ba0:	mov	r0, r9
   13ba4:	bl	17d14 <argp_error@@Base+0x1420>
   13ba8:	b	13b34 <argp_parse@@Base+0x14cc>
   13bac:	tst	r1, #16
   13bb0:	bne	13bd4 <argp_parse@@Base+0x156c>
   13bb4:	ldr	r3, [r6, #8]
   13bb8:	cmp	r3, #0
   13bbc:	beq	13c24 <argp_parse@@Base+0x15bc>
   13bc0:	tst	r1, #1
   13bc4:	ldrne	r1, [pc, #156]	; 13c68 <argp_parse@@Base+0x1600>
   13bc8:	moveq	r1, sl
   13bcc:	mov	r0, r9
   13bd0:	bl	17d14 <argp_error@@Base+0x1420>
   13bd4:	add	r4, r4, #24
   13bd8:	subs	r5, r5, #1
   13bdc:	beq	13c34 <argp_parse@@Base+0x15cc>
   13be0:	ldr	r2, [r4]
   13be4:	cmp	r2, #0
   13be8:	beq	13bd4 <argp_parse@@Base+0x156c>
   13bec:	ldr	r1, [r4, #12]
   13bf0:	and	r3, r1, #4
   13bf4:	cmp	r3, #0
   13bf8:	moveq	r6, r4
   13bfc:	tst	r1, #2
   13c00:	bne	13bd4 <argp_parse@@Base+0x156c>
   13c04:	ldr	r3, [r4, #8]
   13c08:	ldr	r0, [r6, #12]
   13c0c:	orr	r1, r1, r0
   13c10:	cmp	r3, #0
   13c14:	beq	13bac <argp_parse@@Base+0x1544>
   13c18:	tst	r1, #16
   13c1c:	beq	13bc0 <argp_parse@@Base+0x1558>
   13c20:	b	13bd4 <argp_parse@@Base+0x156c>
   13c24:	ldr	r1, [pc, #64]	; 13c6c <argp_parse@@Base+0x1604>
   13c28:	mov	r0, r9
   13c2c:	bl	17d14 <argp_error@@Base+0x1420>
   13c30:	b	13bd4 <argp_parse@@Base+0x156c>
   13c34:	add	r7, r7, #28
   13c38:	subs	r8, r8, #1
   13c3c:	beq	13acc <argp_parse@@Base+0x1464>
   13c40:	ldr	r4, [r7, #-28]	; 0xffffffe4
   13c44:	ldr	r5, [r7, #-24]	; 0xffffffe8
   13c48:	cmp	r5, #0
   13c4c:	beq	13c34 <argp_parse@@Base+0x15cc>
   13c50:	mov	r6, r4
   13c54:	b	13be0 <argp_parse@@Base+0x1578>
   13c58:	andeq	r3, r1, r4, asr #17
   13c5c:	andeq	r3, r1, r4, lsl #30
   13c60:	andeq	r8, r1, r0, lsl #17
   13c64:	andeq	r8, r1, r8, ror #16
   13c68:	andeq	r8, r1, r0, ror r8
   13c6c:	andeq	r8, r1, ip, lsl #17
   13c70:	push	{r4, r5, r6, lr}
   13c74:	mov	r5, r0
   13c78:	ldr	r0, [r0, #12]
   13c7c:	cmp	r0, #0
   13c80:	beq	13c98 <argp_parse@@Base+0x1630>
   13c84:	ldr	r4, [r0, #24]
   13c88:	bl	1325c <argp_parse@@Base+0xbf4>
   13c8c:	mov	r0, r4
   13c90:	cmp	r4, #0
   13c94:	bne	13c84 <argp_parse@@Base+0x161c>
   13c98:	ldr	r3, [r5, #4]
   13c9c:	cmp	r3, #0
   13ca0:	bne	13cb0 <argp_parse@@Base+0x1648>
   13ca4:	mov	r0, r5
   13ca8:	bl	1325c <argp_parse@@Base+0xbf4>
   13cac:	pop	{r4, r5, r6, pc}
   13cb0:	ldr	r0, [r5]
   13cb4:	bl	1325c <argp_parse@@Base+0xbf4>
   13cb8:	ldr	r0, [r5, #8]
   13cbc:	bl	1325c <argp_parse@@Base+0xbf4>
   13cc0:	b	13ca4 <argp_parse@@Base+0x163c>
   13cc4:	push	{r4, r5, r6, r7, r8, lr}
   13cc8:	mov	r6, r1
   13ccc:	ldr	r7, [r0]
   13cd0:	ldr	r3, [r0, #4]
   13cd4:	sub	r8, r3, #1
   13cd8:	cmp	r3, #0
   13cdc:	bne	13d38 <argp_parse@@Base+0x16d0>
   13ce0:	mov	r7, #0
   13ce4:	b	13d20 <argp_parse@@Base+0x16b8>
   13ce8:	sub	r5, r5, #1
   13cec:	add	r4, r4, #24
   13cf0:	cmn	r5, #1
   13cf4:	beq	13d28 <argp_parse@@Base+0x16c0>
   13cf8:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13cfc:	cmp	r0, #0
   13d00:	beq	13ce8 <argp_parse@@Base+0x1680>
   13d04:	ldr	r3, [r4, #-12]
   13d08:	tst	r3, #2
   13d0c:	bne	13ce8 <argp_parse@@Base+0x1680>
   13d10:	mov	r1, r6
   13d14:	bl	10fe8 <strcmp@plt>
   13d18:	cmp	r0, #0
   13d1c:	bne	13ce8 <argp_parse@@Base+0x1680>
   13d20:	mov	r0, r7
   13d24:	pop	{r4, r5, r6, r7, r8, pc}
   13d28:	add	r7, r7, #28
   13d2c:	sub	r8, r8, #1
   13d30:	cmn	r8, #1
   13d34:	beq	13d54 <argp_parse@@Base+0x16ec>
   13d38:	ldr	r4, [r7]
   13d3c:	ldr	r3, [r7, #4]
   13d40:	sub	r5, r3, #1
   13d44:	cmp	r3, #0
   13d48:	beq	13d28 <argp_parse@@Base+0x16c0>
   13d4c:	add	r4, r4, #24
   13d50:	b	13cf8 <argp_parse@@Base+0x1690>
   13d54:	mov	r7, #0
   13d58:	b	13d20 <argp_parse@@Base+0x16b8>
   13d5c:	push	{r4, r5, r6, lr}
   13d60:	ldr	r4, [r0, #16]
   13d64:	ldr	r0, [r0, #8]
   13d68:	cmp	r0, #0
   13d6c:	moveq	r5, #0
   13d70:	beq	13d84 <argp_parse@@Base+0x171c>
   13d74:	mov	r1, #10
   13d78:	bl	11174 <strchr@plt>
   13d7c:	adds	r5, r0, #0
   13d80:	movne	r5, #1
   13d84:	cmp	r4, #0
   13d88:	beq	13dac <argp_parse@@Base+0x1744>
   13d8c:	ldr	r0, [r4]
   13d90:	cmp	r0, #0
   13d94:	beq	13dac <argp_parse@@Base+0x1744>
   13d98:	bl	13d5c <argp_parse@@Base+0x16f4>
   13d9c:	add	r5, r5, r0
   13da0:	ldr	r0, [r4, #16]!
   13da4:	cmp	r0, #0
   13da8:	bne	13d98 <argp_parse@@Base+0x1730>
   13dac:	mov	r0, r5
   13db0:	pop	{r4, r5, r6, pc}
   13db4:	push	{r4, r5, r6, r7, r8, lr}
   13db8:	mov	r4, r0
   13dbc:	mov	r5, r1
   13dc0:	ldr	r3, [r0, #28]
   13dc4:	ldr	r2, [r0, #24]
   13dc8:	sub	r3, r3, r2
   13dcc:	ldr	r2, [r0, #16]
   13dd0:	cmp	r3, r2
   13dd4:	bhi	13df0 <argp_parse@@Base+0x1788>
   13dd8:	ldr	r3, [r4, #20]
   13ddc:	cmp	r3, #0
   13de0:	subge	r5, r5, r3
   13de4:	mov	r6, #32
   13de8:	mov	r7, #1
   13dec:	b	13e0c <argp_parse@@Base+0x17a4>
   13df0:	bl	17680 <argp_error@@Base+0xd8c>
   13df4:	b	13dd8 <argp_parse@@Base+0x1770>
   13df8:	ldr	r3, [r4, #28]
   13dfc:	add	r2, r3, #1
   13e00:	str	r2, [r4, #28]
   13e04:	strb	r6, [r3]
   13e08:	sub	r5, r5, #1
   13e0c:	cmp	r5, #0
   13e10:	ble	13e3c <argp_parse@@Base+0x17d4>
   13e14:	ldr	r2, [r4, #28]
   13e18:	ldr	r3, [r4, #32]
   13e1c:	cmp	r2, r3
   13e20:	bcc	13df8 <argp_parse@@Base+0x1790>
   13e24:	mov	r1, r7
   13e28:	mov	r0, r4
   13e2c:	bl	17c24 <argp_error@@Base+0x1330>
   13e30:	cmp	r0, #0
   13e34:	beq	13e08 <argp_parse@@Base+0x17a0>
   13e38:	b	13df8 <argp_parse@@Base+0x1790>
   13e3c:	pop	{r4, r5, r6, r7, r8, pc}
   13e40:	push	{r4, r5, r6, lr}
   13e44:	mov	r4, r0
   13e48:	mov	r5, r1
   13e4c:	ldr	r3, [r0, #28]
   13e50:	ldr	r2, [r0, #24]
   13e54:	sub	r3, r3, r2
   13e58:	ldr	r2, [r0, #16]
   13e5c:	cmp	r3, r2
   13e60:	bhi	13ea4 <argp_parse@@Base+0x183c>
   13e64:	ldr	r3, [r4, #20]
   13e68:	cmp	r3, #0
   13e6c:	addge	r5, r5, r3
   13e70:	ldr	r3, [r4, #8]
   13e74:	cmp	r5, r3
   13e78:	bcc	13ec4 <argp_parse@@Base+0x185c>
   13e7c:	ldr	r2, [r4, #28]
   13e80:	ldr	r3, [r4, #32]
   13e84:	cmp	r2, r3
   13e88:	bcs	13eac <argp_parse@@Base+0x1844>
   13e8c:	ldr	r3, [r4, #28]
   13e90:	add	r2, r3, #1
   13e94:	str	r2, [r4, #28]
   13e98:	mov	r2, #10
   13e9c:	strb	r2, [r3]
   13ea0:	pop	{r4, r5, r6, pc}
   13ea4:	bl	17680 <argp_error@@Base+0xd8c>
   13ea8:	b	13e64 <argp_parse@@Base+0x17fc>
   13eac:	mov	r1, #1
   13eb0:	mov	r0, r4
   13eb4:	bl	17c24 <argp_error@@Base+0x1330>
   13eb8:	cmp	r0, #0
   13ebc:	popeq	{r4, r5, r6, pc}
   13ec0:	b	13e8c <argp_parse@@Base+0x1824>
   13ec4:	ldr	r2, [r4, #28]
   13ec8:	ldr	r3, [r4, #32]
   13ecc:	cmp	r2, r3
   13ed0:	bcs	13eec <argp_parse@@Base+0x1884>
   13ed4:	ldr	r3, [r4, #28]
   13ed8:	add	r2, r3, #1
   13edc:	str	r2, [r4, #28]
   13ee0:	mov	r2, #32
   13ee4:	strb	r2, [r3]
   13ee8:	pop	{r4, r5, r6, pc}
   13eec:	mov	r1, #1
   13ef0:	mov	r0, r4
   13ef4:	bl	17c24 <argp_error@@Base+0x1330>
   13ef8:	cmp	r0, #0
   13efc:	bne	13ed4 <argp_parse@@Base+0x186c>
   13f00:	pop	{r4, r5, r6, pc}
   13f04:	push	{r4, r5, r6, lr}
   13f08:	ldr	r5, [r0, #8]
   13f0c:	ldr	r2, [r0, #12]
   13f10:	ldr	ip, [r1, #12]
   13f14:	orr	r2, r2, ip
   13f18:	cmp	r5, #0
   13f1c:	beq	13f68 <argp_parse@@Base+0x1900>
   13f20:	tst	r2, #16
   13f24:	bne	13f60 <argp_parse@@Base+0x18f8>
   13f28:	mov	r6, r3
   13f2c:	mov	r4, r0
   13f30:	tst	r2, #1
   13f34:	bne	13f78 <argp_parse@@Base+0x1910>
   13f38:	mov	r0, r5
   13f3c:	bl	11168 <strlen@plt>
   13f40:	add	r1, r0, #6
   13f44:	mov	r0, r6
   13f48:	bl	13e40 <argp_parse@@Base+0x17d8>
   13f4c:	mov	r3, r5
   13f50:	ldr	r2, [r4, #4]
   13f54:	ldr	r1, [pc, #52]	; 13f90 <argp_parse@@Base+0x1928>
   13f58:	mov	r0, r6
   13f5c:	bl	17d14 <argp_error@@Base+0x1420>
   13f60:	mov	r0, #0
   13f64:	pop	{r4, r5, r6, pc}
   13f68:	ldr	r5, [r1, #8]
   13f6c:	cmp	r5, #0
   13f70:	beq	13f60 <argp_parse@@Base+0x18f8>
   13f74:	b	13f20 <argp_parse@@Base+0x18b8>
   13f78:	mov	r3, r5
   13f7c:	ldr	r2, [r0, #4]
   13f80:	ldr	r1, [pc, #12]	; 13f94 <argp_parse@@Base+0x192c>
   13f84:	mov	r0, r6
   13f88:	bl	17d14 <argp_error@@Base+0x1420>
   13f8c:	b	13f60 <argp_parse@@Base+0x18f8>
   13f90:	andeq	r8, r1, r0, lsr #17
   13f94:	muleq	r1, r4, r8
   13f98:	push	{r4, r5, r6, lr}
   13f9c:	subs	r5, r2, #0
   13fa0:	popeq	{r4, r5, r6, pc}
   13fa4:	ldr	ip, [r5, #20]
   13fa8:	cmp	ip, #0
   13fac:	popeq	{r4, r5, r6, pc}
   13fb0:	mov	r6, r1
   13fb4:	mov	r4, r0
   13fb8:	mov	r1, r3
   13fbc:	mov	r0, r5
   13fc0:	bl	130dc <argp_parse@@Base+0xa74>
   13fc4:	ldr	r3, [r5, #20]
   13fc8:	mov	r2, r0
   13fcc:	mov	r1, r4
   13fd0:	mov	r0, r6
   13fd4:	blx	r3
   13fd8:	pop	{r4, r5, r6, pc}
   13fdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13fe0:	sub	sp, sp, #28
   13fe4:	str	r1, [sp, #16]
   13fe8:	mov	r8, r2
   13fec:	mov	r4, r3
   13ff0:	ldr	r5, [sp, #64]	; 0x40
   13ff4:	ldr	r3, [r2]
   13ff8:	mov	r6, r3
   13ffc:	str	r3, [sp, #20]
   14000:	ldr	sl, [r0, #16]
   14004:	ldr	r2, [r0, #8]
   14008:	mov	ip, r2
   1400c:	str	r2, [sp, #12]
   14010:	mov	r3, r1
   14014:	mov	r2, r0
   14018:	ldr	r1, [pc, #424]	; 141c8 <argp_parse@@Base+0x1b60>
   1401c:	mov	r0, ip
   14020:	bl	13f98 <argp_parse@@Base+0x1930>
   14024:	subs	r3, r0, #0
   14028:	str	r3, [sp, #8]
   1402c:	beq	141b4 <argp_parse@@Base+0x1b4c>
   14030:	mov	r1, #10
   14034:	mov	r0, r3
   14038:	bl	11030 <strchrnul@plt>
   1403c:	mov	r7, r0
   14040:	ldrb	r3, [r0]
   14044:	cmp	r3, #0
   14048:	beq	14184 <argp_parse@@Base+0x1b1c>
   1404c:	ldrb	fp, [r6]
   14050:	cmp	fp, #0
   14054:	ble	1417c <argp_parse@@Base+0x1b14>
   14058:	mov	r6, #0
   1405c:	add	r9, r0, #1
   14060:	mov	r1, #10
   14064:	mov	r0, r9
   14068:	bl	11030 <strchrnul@plt>
   1406c:	add	r6, r6, #1
   14070:	cmp	r6, fp
   14074:	bne	1405c <argp_parse@@Base+0x19f4>
   14078:	mov	r7, r0
   1407c:	ldr	r3, [r8]
   14080:	add	r3, r3, #1
   14084:	str	r3, [r8]
   14088:	mov	fp, #1
   1408c:	add	r1, r7, #1
   14090:	sub	r1, r1, r9
   14094:	mov	r0, r5
   14098:	bl	13e40 <argp_parse@@Base+0x17d8>
   1409c:	sub	r6, r7, r9
   140a0:	ldr	r3, [r5, #28]
   140a4:	add	r3, r3, r6
   140a8:	ldr	r2, [r5, #32]
   140ac:	cmp	r2, r3
   140b0:	bcs	140c8 <argp_parse@@Base+0x1a60>
   140b4:	mov	r1, r6
   140b8:	mov	r0, r5
   140bc:	bl	17c24 <argp_error@@Base+0x1330>
   140c0:	cmp	r0, #0
   140c4:	beq	140e4 <argp_parse@@Base+0x1a7c>
   140c8:	mov	r2, r6
   140cc:	mov	r1, r9
   140d0:	ldr	r0, [r5, #28]
   140d4:	bl	1106c <memcpy@plt>
   140d8:	ldr	r3, [r5, #28]
   140dc:	add	r6, r3, r6
   140e0:	str	r6, [r5, #28]
   140e4:	ldr	r3, [sp, #12]
   140e8:	ldr	r2, [sp, #8]
   140ec:	cmp	r3, r2
   140f0:	bne	14190 <argp_parse@@Base+0x1b28>
   140f4:	cmp	sl, #0
   140f8:	beq	14138 <argp_parse@@Base+0x1ad0>
   140fc:	ldr	r0, [sl]
   14100:	cmp	r0, #0
   14104:	beq	14138 <argp_parse@@Base+0x1ad0>
   14108:	mov	r3, r4
   1410c:	ldr	r4, [sp, #16]
   14110:	str	r5, [sp]
   14114:	mov	r2, r8
   14118:	mov	r1, r4
   1411c:	bl	13fdc <argp_parse@@Base+0x1974>
   14120:	clz	r3, r0
   14124:	lsr	r3, r3, #5
   14128:	ldr	r0, [sl, #16]!
   1412c:	cmp	r0, #0
   14130:	bne	14110 <argp_parse@@Base+0x1aa8>
   14134:	mov	r4, r3
   14138:	cmp	r4, #0
   1413c:	moveq	fp, #0
   14140:	andne	fp, fp, #1
   14144:	cmp	fp, #0
   14148:	beq	1416c <argp_parse@@Base+0x1b04>
   1414c:	ldrb	r3, [r7]
   14150:	cmp	r3, #0
   14154:	bne	1419c <argp_parse@@Base+0x1b34>
   14158:	ldr	r2, [sp, #20]
   1415c:	ldrb	r3, [r2]
   14160:	cmp	r3, #0
   14164:	movne	r3, #0
   14168:	strbne	r3, [r2]
   1416c:	clz	r0, r4
   14170:	lsr	r0, r0, #5
   14174:	add	sp, sp, #28
   14178:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1417c:	ldr	r9, [sp, #8]
   14180:	b	1407c <argp_parse@@Base+0x1a14>
   14184:	ldr	r9, [sp, #8]
   14188:	mov	fp, #0
   1418c:	b	1408c <argp_parse@@Base+0x1a24>
   14190:	mov	r0, r2
   14194:	bl	1325c <argp_parse@@Base+0xbf4>
   14198:	b	140f4 <argp_parse@@Base+0x1a8c>
   1419c:	ldr	r2, [sp, #20]
   141a0:	ldrb	r3, [r2]
   141a4:	add	r3, r3, #1
   141a8:	strb	r3, [r2]
   141ac:	mov	r4, #0
   141b0:	b	1416c <argp_parse@@Base+0x1b04>
   141b4:	cmp	sl, #0
   141b8:	beq	1416c <argp_parse@@Base+0x1b04>
   141bc:	ldr	r7, [sp, #8]
   141c0:	mov	fp, #0
   141c4:	b	140fc <argp_parse@@Base+0x1a94>
   141c8:	andeq	r0, r0, #6
   141cc:	push	{r4, r5, r6, r7, r8, lr}
   141d0:	mov	r7, r0
   141d4:	mov	r4, r2
   141d8:	ldr	r3, [r2, #16]
   141dc:	mov	r2, r1
   141e0:	ldr	r1, [pc, #448]	; 143a8 <argp_parse@@Base+0x1d40>
   141e4:	bl	13f98 <argp_parse@@Base+0x1930>
   141e8:	subs	r5, r0, #0
   141ec:	beq	14340 <argp_parse@@Base+0x1cd8>
   141f0:	ldrb	r3, [r5]
   141f4:	cmp	r3, #0
   141f8:	beq	14334 <argp_parse@@Base+0x1ccc>
   141fc:	ldr	r3, [r4, #8]
   14200:	ldr	r3, [r3]
   14204:	cmp	r3, #0
   14208:	beq	14234 <argp_parse@@Base+0x1bcc>
   1420c:	ldr	r6, [r4, #4]
   14210:	ldr	r2, [r6, #28]
   14214:	ldr	r3, [r6, #32]
   14218:	cmp	r2, r3
   1421c:	bcs	14354 <argp_parse@@Base+0x1cec>
   14220:	ldr	r3, [r6, #28]
   14224:	add	r2, r3, #1
   14228:	str	r2, [r6, #28]
   1422c:	mov	r2, #10
   14230:	strb	r2, [r3]
   14234:	ldr	r8, [pc, #368]	; 143ac <argp_parse@@Base+0x1d44>
   14238:	ldr	r1, [r8, #24]
   1423c:	ldr	r0, [r4, #4]
   14240:	bl	13db4 <argp_parse@@Base+0x174c>
   14244:	ldr	r6, [r4, #4]
   14248:	ldr	r8, [r8, #24]
   1424c:	ldr	r3, [r6, #28]
   14250:	ldr	r2, [r6, #24]
   14254:	sub	r3, r3, r2
   14258:	ldr	r2, [r6, #16]
   1425c:	cmp	r3, r2
   14260:	bhi	1436c <argp_parse@@Base+0x1d04>
   14264:	str	r8, [r6, #4]
   14268:	ldr	r6, [r4, #4]
   1426c:	ldr	r3, [pc, #312]	; 143ac <argp_parse@@Base+0x1d44>
   14270:	ldr	r8, [r3, #24]
   14274:	ldr	r3, [r6, #28]
   14278:	ldr	r2, [r6, #24]
   1427c:	sub	r3, r3, r2
   14280:	ldr	r2, [r6, #16]
   14284:	cmp	r3, r2
   14288:	bhi	14378 <argp_parse@@Base+0x1d10>
   1428c:	str	r8, [r6, #12]
   14290:	mov	r0, r5
   14294:	bl	11168 <strlen@plt>
   14298:	subs	r8, r0, #0
   1429c:	beq	142e8 <argp_parse@@Base+0x1c80>
   142a0:	ldr	r6, [r4, #4]
   142a4:	ldr	r3, [r6, #28]
   142a8:	add	r3, r3, r8
   142ac:	ldr	r2, [r6, #32]
   142b0:	cmp	r2, r3
   142b4:	bcs	142cc <argp_parse@@Base+0x1c64>
   142b8:	mov	r1, r8
   142bc:	mov	r0, r6
   142c0:	bl	17c24 <argp_error@@Base+0x1330>
   142c4:	cmp	r0, #0
   142c8:	beq	142e8 <argp_parse@@Base+0x1c80>
   142cc:	mov	r2, r8
   142d0:	mov	r1, r5
   142d4:	ldr	r0, [r6, #28]
   142d8:	bl	1106c <memcpy@plt>
   142dc:	ldr	r3, [r6, #28]
   142e0:	add	r8, r3, r8
   142e4:	str	r8, [r6, #28]
   142e8:	ldr	r6, [r4, #4]
   142ec:	ldr	r3, [r6, #28]
   142f0:	ldr	r2, [r6, #24]
   142f4:	sub	r3, r3, r2
   142f8:	ldr	r2, [r6, #16]
   142fc:	cmp	r3, r2
   14300:	bhi	14384 <argp_parse@@Base+0x1d1c>
   14304:	mov	r3, #0
   14308:	str	r3, [r6, #4]
   1430c:	ldr	r6, [r4, #4]
   14310:	ldr	r2, [r6, #28]
   14314:	ldr	r3, [r6, #32]
   14318:	cmp	r2, r3
   1431c:	bcs	14390 <argp_parse@@Base+0x1d28>
   14320:	ldr	r3, [r6, #28]
   14324:	add	r2, r3, #1
   14328:	str	r2, [r6, #28]
   1432c:	mov	r2, #10
   14330:	strb	r2, [r3]
   14334:	ldr	r3, [r4, #8]
   14338:	mov	r2, #1
   1433c:	str	r2, [r3, #4]
   14340:	cmp	r7, r5
   14344:	popeq	{r4, r5, r6, r7, r8, pc}
   14348:	mov	r0, r5
   1434c:	bl	1325c <argp_parse@@Base+0xbf4>
   14350:	pop	{r4, r5, r6, r7, r8, pc}
   14354:	mov	r1, #1
   14358:	mov	r0, r6
   1435c:	bl	17c24 <argp_error@@Base+0x1330>
   14360:	cmp	r0, #0
   14364:	beq	14234 <argp_parse@@Base+0x1bcc>
   14368:	b	14220 <argp_parse@@Base+0x1bb8>
   1436c:	mov	r0, r6
   14370:	bl	17680 <argp_error@@Base+0xd8c>
   14374:	b	14264 <argp_parse@@Base+0x1bfc>
   14378:	mov	r0, r6
   1437c:	bl	17680 <argp_error@@Base+0xd8c>
   14380:	b	1428c <argp_parse@@Base+0x1c24>
   14384:	mov	r0, r6
   14388:	bl	17680 <argp_error@@Base+0xd8c>
   1438c:	b	14304 <argp_parse@@Base+0x1c9c>
   14390:	mov	r1, #1
   14394:	mov	r0, r6
   14398:	bl	17c24 <argp_error@@Base+0x1330>
   1439c:	cmp	r0, #0
   143a0:	beq	14334 <argp_parse@@Base+0x1ccc>
   143a4:	b	14320 <argp_parse@@Base+0x1cb8>
   143a8:	andeq	r0, r0, #3
   143ac:	andeq	r9, r2, r0, lsr r2
   143b0:	push	{r4, r5, r6, r7, r8, lr}
   143b4:	mov	r6, r0
   143b8:	mov	r4, r1
   143bc:	ldr	r3, [r1, #12]
   143c0:	cmp	r3, #0
   143c4:	beq	144e4 <argp_parse@@Base+0x1e7c>
   143c8:	ldr	r3, [r1, #8]
   143cc:	ldr	r7, [r3]
   143d0:	ldr	r2, [r1]
   143d4:	ldr	r5, [r2, #16]
   143d8:	ldr	r3, [r3, #4]
   143dc:	cmp	r3, #0
   143e0:	cmpne	r7, #0
   143e4:	beq	14420 <argp_parse@@Base+0x1db8>
   143e8:	ldr	r2, [r2, #12]
   143ec:	ldr	r3, [r7, #12]
   143f0:	cmp	r2, r3
   143f4:	beq	14420 <argp_parse@@Base+0x1db8>
   143f8:	ldr	r8, [r1, #4]
   143fc:	ldr	r2, [r8, #28]
   14400:	ldr	r3, [r8, #32]
   14404:	cmp	r2, r3
   14408:	bcs	144c0 <argp_parse@@Base+0x1e58>
   1440c:	ldr	r3, [r8, #28]
   14410:	add	r2, r3, #1
   14414:	str	r2, [r8, #28]
   14418:	mov	r2, #10
   1441c:	strb	r2, [r3]
   14420:	cmp	r5, #0
   14424:	beq	144a8 <argp_parse@@Base+0x1e40>
   14428:	ldr	r0, [r5]
   1442c:	cmp	r0, #0
   14430:	beq	144a8 <argp_parse@@Base+0x1e40>
   14434:	ldrb	r3, [r0]
   14438:	cmp	r3, #0
   1443c:	beq	144a8 <argp_parse@@Base+0x1e40>
   14440:	cmp	r7, #0
   14444:	beq	14474 <argp_parse@@Base+0x1e0c>
   14448:	ldr	r3, [r7, #16]
   1444c:	cmp	r5, r3
   14450:	beq	144a8 <argp_parse@@Base+0x1e40>
   14454:	cmp	r3, #0
   14458:	beq	14474 <argp_parse@@Base+0x1e0c>
   1445c:	ldr	r3, [r3, #12]
   14460:	cmp	r3, #0
   14464:	cmpne	r5, r3
   14468:	bne	1445c <argp_parse@@Base+0x1df4>
   1446c:	cmp	r5, r3
   14470:	beq	144a8 <argp_parse@@Base+0x1e40>
   14474:	ldr	r3, [r4, #4]
   14478:	ldr	r7, [r3, #12]
   1447c:	mov	r2, r4
   14480:	ldr	r1, [r5, #16]
   14484:	bl	141cc <argp_parse@@Base+0x1b64>
   14488:	ldr	r5, [r4, #4]
   1448c:	ldr	r3, [r5, #28]
   14490:	ldr	r2, [r5, #24]
   14494:	sub	r3, r3, r2
   14498:	ldr	r2, [r5, #16]
   1449c:	cmp	r3, r2
   144a0:	bhi	144d8 <argp_parse@@Base+0x1e70>
   144a4:	str	r7, [r5, #12]
   144a8:	mov	r3, #0
   144ac:	str	r3, [r4, #12]
   144b0:	mov	r1, r6
   144b4:	ldr	r0, [r4, #4]
   144b8:	bl	13db4 <argp_parse@@Base+0x174c>
   144bc:	pop	{r4, r5, r6, r7, r8, pc}
   144c0:	mov	r1, #1
   144c4:	mov	r0, r8
   144c8:	bl	17c24 <argp_error@@Base+0x1330>
   144cc:	cmp	r0, #0
   144d0:	beq	14420 <argp_parse@@Base+0x1db8>
   144d4:	b	1440c <argp_parse@@Base+0x1da4>
   144d8:	mov	r0, r5
   144dc:	bl	17680 <argp_error@@Base+0xd8c>
   144e0:	b	144a4 <argp_parse@@Base+0x1e3c>
   144e4:	ldr	r5, [r1, #4]
   144e8:	ldr	r3, [r5, #28]
   144ec:	add	r3, r3, #2
   144f0:	ldr	r2, [r5, #32]
   144f4:	cmp	r2, r3
   144f8:	bcs	14510 <argp_parse@@Base+0x1ea8>
   144fc:	mov	r1, #2
   14500:	mov	r0, r5
   14504:	bl	17c24 <argp_error@@Base+0x1330>
   14508:	cmp	r0, #0
   1450c:	beq	144b0 <argp_parse@@Base+0x1e48>
   14510:	ldr	r3, [r5, #28]
   14514:	ldr	r2, [pc, #20]	; 14530 <argp_parse@@Base+0x1ec8>
   14518:	ldrh	r2, [r2]
   1451c:	strh	r2, [r3]
   14520:	ldr	r3, [r5, #28]
   14524:	add	r3, r3, #2
   14528:	str	r3, [r5, #28]
   1452c:	b	144b0 <argp_parse@@Base+0x1e48>
   14530:	andeq	r8, r1, ip, lsr #17
   14534:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14538:	sub	sp, sp, #28
   1453c:	mov	fp, r0
   14540:	str	r1, [sp, #8]
   14544:	mov	r6, r2
   14548:	mov	r8, r3
   1454c:	ldr	r7, [sp, #64]	; 0x40
   14550:	ldr	r5, [sp, #68]	; 0x44
   14554:	ldr	r9, [r0, #12]
   14558:	ldr	r3, [r0, #16]
   1455c:	str	r3, [sp, #16]
   14560:	cmp	r9, #0
   14564:	beq	149c0 <argp_parse@@Base+0x2358>
   14568:	mov	r1, #11
   1456c:	mov	r0, r9
   14570:	bl	11174 <strchr@plt>
   14574:	cmp	r6, #0
   14578:	beq	14870 <argp_parse@@Base+0x2208>
   1457c:	cmp	r0, #0
   14580:	addne	r9, r0, #1
   14584:	beq	149a8 <argp_parse@@Base+0x2340>
   14588:	ldr	r3, [fp, #20]
   1458c:	cmp	r3, #0
   14590:	movne	sl, #0
   14594:	beq	149b0 <argp_parse@@Base+0x2348>
   14598:	ldr	r1, [sp, #8]
   1459c:	mov	r0, fp
   145a0:	bl	130dc <argp_parse@@Base+0xa74>
   145a4:	str	r0, [sp, #12]
   145a8:	ldr	r3, [fp, #20]
   145ac:	ldr	r2, [pc, #1140]	; 14a28 <argp_parse@@Base+0x23c0>
   145b0:	ldr	r0, [pc, #1140]	; 14a2c <argp_parse@@Base+0x23c4>
   145b4:	cmp	r6, #0
   145b8:	moveq	r0, r2
   145bc:	ldr	r2, [sp, #12]
   145c0:	mov	r1, r9
   145c4:	blx	r3
   145c8:	mov	r4, r0
   145cc:	cmp	r4, #0
   145d0:	beq	14960 <argp_parse@@Base+0x22f8>
   145d4:	cmp	r8, #0
   145d8:	beq	14600 <argp_parse@@Base+0x1f98>
   145dc:	ldr	r2, [r5, #28]
   145e0:	ldr	r3, [r5, #32]
   145e4:	cmp	r2, r3
   145e8:	bcs	148b4 <argp_parse@@Base+0x224c>
   145ec:	ldr	r3, [r5, #28]
   145f0:	add	r2, r3, #1
   145f4:	str	r2, [r5, #28]
   145f8:	mov	r2, #10
   145fc:	strb	r2, [r3]
   14600:	cmp	r4, r9
   14604:	movne	r3, #0
   14608:	moveq	r3, #1
   1460c:	cmp	sl, #0
   14610:	moveq	r3, #0
   14614:	cmp	r3, #0
   14618:	beq	148cc <argp_parse@@Base+0x2264>
   1461c:	ldr	r3, [r5, #28]
   14620:	add	r3, r3, sl
   14624:	ldr	r2, [r5, #32]
   14628:	cmp	r2, r3
   1462c:	bcs	14644 <argp_parse@@Base+0x1fdc>
   14630:	mov	r1, sl
   14634:	mov	r0, r5
   14638:	bl	17c24 <argp_error@@Base+0x1330>
   1463c:	cmp	r0, #0
   14640:	beq	14660 <argp_parse@@Base+0x1ff8>
   14644:	mov	r2, sl
   14648:	mov	r1, r9
   1464c:	ldr	r0, [r5, #28]
   14650:	bl	1106c <memcpy@plt>
   14654:	ldr	r3, [r5, #28]
   14658:	add	r3, r3, sl
   1465c:	str	r3, [r5, #28]
   14660:	ldr	r3, [r5, #28]
   14664:	ldr	r2, [r5, #24]
   14668:	sub	r3, r3, r2
   1466c:	ldr	r2, [r5, #16]
   14670:	cmp	r3, r2
   14674:	bhi	1492c <argp_parse@@Base+0x22c4>
   14678:	ldr	r3, [r5, #20]
   1467c:	bic	r3, r3, r3, asr #31
   14680:	ldr	r2, [r5, #4]
   14684:	cmp	r2, r3
   14688:	bcs	146b0 <argp_parse@@Base+0x2048>
   1468c:	ldr	r2, [r5, #28]
   14690:	ldr	r3, [r5, #32]
   14694:	cmp	r2, r3
   14698:	bcs	14938 <argp_parse@@Base+0x22d0>
   1469c:	ldr	r3, [r5, #28]
   146a0:	add	r2, r3, #1
   146a4:	str	r2, [r5, #28]
   146a8:	mov	r2, #10
   146ac:	strb	r2, [r3]
   146b0:	cmp	r4, r9
   146b4:	moveq	r4, #1
   146b8:	bne	14950 <argp_parse@@Base+0x22e8>
   146bc:	cmp	r9, #0
   146c0:	cmpne	sl, #0
   146c4:	beq	146dc <argp_parse@@Base+0x2074>
   146c8:	ldr	r3, [fp, #20]
   146cc:	cmp	r3, #0
   146d0:	beq	147e8 <argp_parse@@Base+0x2180>
   146d4:	mov	r0, r9
   146d8:	bl	1325c <argp_parse@@Base+0xbf4>
   146dc:	cmp	r6, #0
   146e0:	beq	147e8 <argp_parse@@Base+0x2180>
   146e4:	ldr	r3, [fp, #20]
   146e8:	cmp	r3, #0
   146ec:	beq	147e8 <argp_parse@@Base+0x2180>
   146f0:	ldr	r2, [sp, #12]
   146f4:	mov	r1, #0
   146f8:	ldr	r0, [pc, #816]	; 14a30 <argp_parse@@Base+0x23c8>
   146fc:	blx	r3
   14700:	subs	r9, r0, #0
   14704:	beq	147e8 <argp_parse@@Base+0x2180>
   14708:	orrs	r3, r8, r4
   1470c:	beq	14734 <argp_parse@@Base+0x20cc>
   14710:	ldr	r2, [r5, #28]
   14714:	ldr	r3, [r5, #32]
   14718:	cmp	r2, r3
   1471c:	bcs	14968 <argp_parse@@Base+0x2300>
   14720:	ldr	r3, [r5, #28]
   14724:	add	r2, r3, #1
   14728:	str	r2, [r5, #28]
   1472c:	mov	r2, #10
   14730:	strb	r2, [r3]
   14734:	mov	r0, r9
   14738:	bl	11168 <strlen@plt>
   1473c:	subs	r4, r0, #0
   14740:	beq	14788 <argp_parse@@Base+0x2120>
   14744:	ldr	r3, [r5, #28]
   14748:	add	r3, r3, r4
   1474c:	ldr	r2, [r5, #32]
   14750:	cmp	r2, r3
   14754:	bcs	1476c <argp_parse@@Base+0x2104>
   14758:	mov	r1, r4
   1475c:	mov	r0, r5
   14760:	bl	17c24 <argp_error@@Base+0x1330>
   14764:	cmp	r0, #0
   14768:	beq	14788 <argp_parse@@Base+0x2120>
   1476c:	mov	r2, r4
   14770:	mov	r1, r9
   14774:	ldr	r0, [r5, #28]
   14778:	bl	1106c <memcpy@plt>
   1477c:	ldr	r3, [r5, #28]
   14780:	add	r4, r3, r4
   14784:	str	r4, [r5, #28]
   14788:	mov	r0, r9
   1478c:	bl	1325c <argp_parse@@Base+0xbf4>
   14790:	ldr	r3, [r5, #28]
   14794:	ldr	r2, [r5, #24]
   14798:	sub	r3, r3, r2
   1479c:	ldr	r2, [r5, #16]
   147a0:	cmp	r3, r2
   147a4:	bhi	14980 <argp_parse@@Base+0x2318>
   147a8:	ldr	r3, [r5, #20]
   147ac:	bic	r3, r3, r3, asr #31
   147b0:	ldr	r2, [r5, #4]
   147b4:	cmp	r2, r3
   147b8:	movcs	r4, #1
   147bc:	bcs	147e8 <argp_parse@@Base+0x2180>
   147c0:	ldr	r2, [r5, #28]
   147c4:	ldr	r3, [r5, #32]
   147c8:	cmp	r2, r3
   147cc:	bcs	1498c <argp_parse@@Base+0x2324>
   147d0:	ldr	r3, [r5, #28]
   147d4:	add	r2, r3, #1
   147d8:	str	r2, [r5, #28]
   147dc:	mov	r2, #10
   147e0:	strb	r2, [r3]
   147e4:	mov	r4, #1
   147e8:	ldr	r3, [sp, #16]
   147ec:	cmp	r3, #0
   147f0:	beq	14864 <argp_parse@@Base+0x21fc>
   147f4:	ldr	r0, [r3]
   147f8:	cmp	r0, #0
   147fc:	beq	14864 <argp_parse@@Base+0x21fc>
   14800:	clz	r9, r7
   14804:	lsr	r9, r9, #5
   14808:	cmp	r7, #0
   1480c:	cmpne	r4, #0
   14810:	bne	14864 <argp_parse@@Base+0x21fc>
   14814:	mov	sl, r3
   14818:	ldr	fp, [sp, #8]
   1481c:	orrs	r3, r8, r4
   14820:	str	r5, [sp, #4]
   14824:	str	r7, [sp]
   14828:	movne	r3, #1
   1482c:	moveq	r3, #0
   14830:	mov	r2, r6
   14834:	mov	r1, fp
   14838:	bl	14534 <argp_parse@@Base+0x1ecc>
   1483c:	orr	r4, r4, r0
   14840:	ldr	r0, [sl, #16]
   14844:	cmp	r0, #0
   14848:	beq	14864 <argp_parse@@Base+0x21fc>
   1484c:	add	sl, sl, #16
   14850:	cmp	r4, #0
   14854:	movne	r3, r9
   14858:	orreq	r3, r9, #1
   1485c:	cmp	r3, #0
   14860:	bne	1481c <argp_parse@@Base+0x21b4>
   14864:	mov	r0, r4
   14868:	add	sp, sp, #28
   1486c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14870:	cmp	r0, #0
   14874:	beq	149f8 <argp_parse@@Base+0x2390>
   14878:	sub	sl, r0, r9
   1487c:	ldr	r3, [fp, #20]
   14880:	cmp	r3, #0
   14884:	beq	148a4 <argp_parse@@Base+0x223c>
   14888:	cmp	sl, #0
   1488c:	beq	14598 <argp_parse@@Base+0x1f30>
   14890:	mov	r1, sl
   14894:	mov	r0, r9
   14898:	bl	11060 <strndup@plt>
   1489c:	mov	r9, r0
   148a0:	b	14598 <argp_parse@@Base+0x1f30>
   148a4:	mov	r4, r9
   148a8:	mov	r3, #0
   148ac:	str	r3, [sp, #12]
   148b0:	b	145d4 <argp_parse@@Base+0x1f6c>
   148b4:	mov	r1, #1
   148b8:	mov	r0, r5
   148bc:	bl	17c24 <argp_error@@Base+0x1330>
   148c0:	cmp	r0, #0
   148c4:	beq	14600 <argp_parse@@Base+0x1f98>
   148c8:	b	145ec <argp_parse@@Base+0x1f84>
   148cc:	mov	r0, r4
   148d0:	bl	11168 <strlen@plt>
   148d4:	subs	r3, r0, #0
   148d8:	mov	r1, r3
   148dc:	str	r3, [sp, #20]
   148e0:	beq	14660 <argp_parse@@Base+0x1ff8>
   148e4:	ldr	r3, [r5, #28]
   148e8:	add	r3, r3, r1
   148ec:	ldr	r2, [r5, #32]
   148f0:	cmp	r2, r3
   148f4:	bcs	14908 <argp_parse@@Base+0x22a0>
   148f8:	mov	r0, r5
   148fc:	bl	17c24 <argp_error@@Base+0x1330>
   14900:	cmp	r0, #0
   14904:	beq	14660 <argp_parse@@Base+0x1ff8>
   14908:	ldr	r2, [sp, #20]
   1490c:	mov	r1, r4
   14910:	ldr	r0, [r5, #28]
   14914:	bl	1106c <memcpy@plt>
   14918:	ldr	r3, [r5, #28]
   1491c:	ldr	r2, [sp, #20]
   14920:	add	r3, r3, r2
   14924:	str	r3, [r5, #28]
   14928:	b	14660 <argp_parse@@Base+0x1ff8>
   1492c:	mov	r0, r5
   14930:	bl	17680 <argp_error@@Base+0xd8c>
   14934:	b	14678 <argp_parse@@Base+0x2010>
   14938:	mov	r1, #1
   1493c:	mov	r0, r5
   14940:	bl	17c24 <argp_error@@Base+0x1330>
   14944:	cmp	r0, #0
   14948:	beq	146b0 <argp_parse@@Base+0x2048>
   1494c:	b	1469c <argp_parse@@Base+0x2034>
   14950:	mov	r0, r4
   14954:	bl	1325c <argp_parse@@Base+0xbf4>
   14958:	mov	r4, #1
   1495c:	b	146bc <argp_parse@@Base+0x2054>
   14960:	mov	r4, #0
   14964:	b	146bc <argp_parse@@Base+0x2054>
   14968:	mov	r1, #1
   1496c:	mov	r0, r5
   14970:	bl	17c24 <argp_error@@Base+0x1330>
   14974:	cmp	r0, #0
   14978:	beq	14734 <argp_parse@@Base+0x20cc>
   1497c:	b	14720 <argp_parse@@Base+0x20b8>
   14980:	mov	r0, r5
   14984:	bl	17680 <argp_error@@Base+0xd8c>
   14988:	b	147a8 <argp_parse@@Base+0x2140>
   1498c:	mov	r1, #1
   14990:	mov	r0, r5
   14994:	bl	17c24 <argp_error@@Base+0x1330>
   14998:	cmp	r0, #0
   1499c:	moveq	r4, #1
   149a0:	beq	147e8 <argp_parse@@Base+0x2180>
   149a4:	b	147d0 <argp_parse@@Base+0x2168>
   149a8:	mov	r9, #0
   149ac:	b	14588 <argp_parse@@Base+0x1f20>
   149b0:	mov	r4, r9
   149b4:	mov	sl, #0
   149b8:	str	sl, [sp, #12]
   149bc:	b	145cc <argp_parse@@Base+0x1f64>
   149c0:	ldr	r3, [r0, #20]
   149c4:	cmp	r3, #0
   149c8:	movne	sl, #0
   149cc:	bne	14598 <argp_parse@@Base+0x1f30>
   149d0:	mov	r3, r9
   149d4:	cmp	r9, #0
   149d8:	moveq	r4, #0
   149dc:	streq	r4, [sp, #12]
   149e0:	beq	146dc <argp_parse@@Base+0x2074>
   149e4:	mov	r4, r9
   149e8:	mov	r9, r3
   149ec:	mov	sl, #0
   149f0:	str	sl, [sp, #12]
   149f4:	b	145d4 <argp_parse@@Base+0x1f6c>
   149f8:	ldr	r3, [fp, #20]
   149fc:	cmp	r3, #0
   14a00:	moveq	r3, r9
   14a04:	beq	149d4 <argp_parse@@Base+0x236c>
   14a08:	ldr	r1, [sp, #8]
   14a0c:	mov	r0, fp
   14a10:	bl	130dc <argp_parse@@Base+0xa74>
   14a14:	str	r0, [sp, #12]
   14a18:	ldr	r3, [fp, #20]
   14a1c:	mov	sl, #0
   14a20:	ldr	r0, [pc]	; 14a28 <argp_parse@@Base+0x23c0>
   14a24:	b	145bc <argp_parse@@Base+0x1f54>
   14a28:	andeq	r0, r0, #1
   14a2c:	andeq	r0, r0, #2
   14a30:	andeq	r0, r0, #4
   14a34:	ldr	r3, [r0, #12]
   14a38:	ldr	r2, [r1, #12]
   14a3c:	cmp	r3, r2
   14a40:	beq	14a98 <argp_parse@@Base+0x2430>
   14a44:	push	{r4, r5, r6, lr}
   14a48:	mov	r5, r1
   14a4c:	mov	r4, r0
   14a50:	mov	r1, r2
   14a54:	mov	r0, r3
   14a58:	bl	14a34 <argp_parse@@Base+0x23cc>
   14a5c:	subs	r3, r0, #0
   14a60:	bne	14a90 <argp_parse@@Base+0x2428>
   14a64:	ldr	r0, [r4, #8]
   14a68:	ldr	r3, [r5, #8]
   14a6c:	mvn	r2, r3
   14a70:	lsr	r2, r2, #31
   14a74:	cmp	r2, r0, lsr #31
   14a78:	subne	r3, r0, r3
   14a7c:	subeq	r3, r3, r0
   14a80:	cmp	r3, #0
   14a84:	ldreq	r3, [r5, #4]
   14a88:	ldreq	r0, [r4, #4]
   14a8c:	subeq	r3, r3, r0
   14a90:	mov	r0, r3
   14a94:	pop	{r4, r5, r6, pc}
   14a98:	ldr	r2, [r0, #8]
   14a9c:	ldr	r3, [r1, #8]
   14aa0:	mvn	ip, r3
   14aa4:	lsr	ip, ip, #31
   14aa8:	cmp	ip, r2, lsr #31
   14aac:	subne	r3, r2, r3
   14ab0:	subeq	r3, r3, r2
   14ab4:	cmp	r3, #0
   14ab8:	ldreq	r3, [r1, #4]
   14abc:	ldreq	r0, [r0, #4]
   14ac0:	subeq	r3, r3, r0
   14ac4:	mov	r0, r3
   14ac8:	bx	lr
   14acc:	push	{r4, r5, r6, r7, r8, lr}
   14ad0:	sub	sp, sp, #8
   14ad4:	ldr	lr, [r0, #16]
   14ad8:	cmp	lr, #0
   14adc:	movne	r2, lr
   14ae0:	bne	14af0 <argp_parse@@Base+0x2488>
   14ae4:	ldr	ip, [r0, #12]
   14ae8:	b	14b00 <argp_parse@@Base+0x2498>
   14aec:	mov	r2, r3
   14af0:	ldr	r3, [r2, #12]
   14af4:	cmp	r3, #0
   14af8:	bne	14aec <argp_parse@@Base+0x2484>
   14afc:	ldr	ip, [r2, #8]
   14b00:	ldr	r5, [r1, #16]
   14b04:	cmp	r5, #0
   14b08:	movne	r2, r5
   14b0c:	bne	14b1c <argp_parse@@Base+0x24b4>
   14b10:	ldr	r4, [r1, #12]
   14b14:	b	14b2c <argp_parse@@Base+0x24c4>
   14b18:	mov	r2, r3
   14b1c:	ldr	r3, [r2, #12]
   14b20:	cmp	r3, #0
   14b24:	bne	14b18 <argp_parse@@Base+0x24b0>
   14b28:	ldr	r4, [r2, #8]
   14b2c:	mvn	r3, r4
   14b30:	lsr	r3, r3, #31
   14b34:	cmp	r3, ip, lsr #31
   14b38:	subne	r4, ip, r4
   14b3c:	subeq	r4, r4, ip
   14b40:	cmp	r4, #0
   14b44:	bne	14bac <argp_parse@@Base+0x2544>
   14b48:	adds	r4, r5, #0
   14b4c:	movne	r4, #1
   14b50:	cmp	lr, #0
   14b54:	rsbeq	r4, r4, #0
   14b58:	rsbne	r4, r4, #1
   14b5c:	cmp	r4, #0
   14b60:	bne	14bac <argp_parse@@Base+0x2544>
   14b64:	mov	r6, r1
   14b68:	mov	r7, r0
   14b6c:	cmp	lr, #0
   14b70:	beq	14bfc <argp_parse@@Base+0x2594>
   14b74:	ldr	ip, [lr, #20]
   14b78:	ldr	r2, [r5, #20]
   14b7c:	cmp	ip, r2
   14b80:	ble	14bb8 <argp_parse@@Base+0x2550>
   14b84:	mov	r0, lr
   14b88:	ldr	r0, [r0, #12]
   14b8c:	ldr	r3, [r0, #20]
   14b90:	cmp	r2, r3
   14b94:	blt	14b88 <argp_parse@@Base+0x2520>
   14b98:	mov	r1, r5
   14b9c:	bl	14a34 <argp_parse@@Base+0x23cc>
   14ba0:	subs	r4, r0, #0
   14ba4:	cmp	r0, #0
   14ba8:	moveq	r4, #1
   14bac:	mov	r0, r4
   14bb0:	add	sp, sp, #8
   14bb4:	pop	{r4, r5, r6, r7, r8, pc}
   14bb8:	cmp	ip, r2
   14bbc:	bge	14be8 <argp_parse@@Base+0x2580>
   14bc0:	mov	r1, r5
   14bc4:	ldr	r1, [r1, #12]
   14bc8:	ldr	r3, [r1, #20]
   14bcc:	cmp	ip, r3
   14bd0:	blt	14bc4 <argp_parse@@Base+0x255c>
   14bd4:	mov	r0, lr
   14bd8:	bl	14a34 <argp_parse@@Base+0x23cc>
   14bdc:	subs	r4, r0, #0
   14be0:	mvneq	r4, #0
   14be4:	b	14bac <argp_parse@@Base+0x2544>
   14be8:	mov	r1, r5
   14bec:	mov	r0, lr
   14bf0:	bl	14a34 <argp_parse@@Base+0x23cc>
   14bf4:	subs	r4, r0, #0
   14bf8:	bne	14bac <argp_parse@@Base+0x2544>
   14bfc:	ldr	r3, [r7, #12]
   14c00:	ldr	r4, [r6, #12]
   14c04:	mvn	r2, r4
   14c08:	lsr	r2, r2, #31
   14c0c:	cmp	r2, r3, lsr #31
   14c10:	subne	r4, r3, r4
   14c14:	subeq	r4, r4, r3
   14c18:	cmp	r4, #0
   14c1c:	bne	14bac <argp_parse@@Base+0x2544>
   14c20:	mov	r0, r7
   14c24:	bl	13874 <argp_parse@@Base+0x120c>
   14c28:	mov	r5, r0
   14c2c:	str	r0, [sp]
   14c30:	mov	r0, r6
   14c34:	bl	13874 <argp_parse@@Base+0x120c>
   14c38:	str	r0, [sp, #4]
   14c3c:	ldr	r3, [r7]
   14c40:	ldr	r3, [r3, #12]
   14c44:	adds	r5, r5, #0
   14c48:	movne	r5, #1
   14c4c:	ands	r3, r5, r3, lsr #3
   14c50:	beq	14d94 <argp_parse@@Base+0x272c>
   14c54:	mov	r0, sp
   14c58:	bl	13a38 <argp_parse@@Base+0x13d0>
   14c5c:	adds	r5, r0, #0
   14c60:	movne	r5, #1
   14c64:	ldr	r3, [r6]
   14c68:	ldr	r0, [r3, #12]
   14c6c:	ands	r0, r0, #8
   14c70:	beq	14c90 <argp_parse@@Base+0x2628>
   14c74:	ldr	r3, [sp, #4]
   14c78:	cmp	r3, #0
   14c7c:	beq	14d8c <argp_parse@@Base+0x2724>
   14c80:	add	r0, sp, #4
   14c84:	bl	13a38 <argp_parse@@Base+0x13d0>
   14c88:	adds	r0, r0, #0
   14c8c:	movne	r0, #1
   14c90:	subs	r4, r5, r0
   14c94:	bne	14bac <argp_parse@@Base+0x2544>
   14c98:	ldr	r2, [r7, #20]
   14c9c:	ldr	r4, [pc, #276]	; 14db8 <argp_parse@@Base+0x2750>
   14ca0:	mov	r3, #0
   14ca4:	ldr	r2, [r2, #24]
   14ca8:	mov	r1, r4
   14cac:	mov	r0, r7
   14cb0:	bl	1390c <argp_parse@@Base+0x12a4>
   14cb4:	mov	r5, r0
   14cb8:	uxtb	r8, r0
   14cbc:	ldr	r2, [r6, #20]
   14cc0:	mov	r3, #0
   14cc4:	ldr	r2, [r2, #24]
   14cc8:	mov	r1, r4
   14ccc:	mov	r0, r6
   14cd0:	bl	1390c <argp_parse@@Base+0x12a4>
   14cd4:	uxtb	r7, r0
   14cd8:	cmp	r8, #0
   14cdc:	movne	r5, r8
   14ce0:	bne	14cf4 <argp_parse@@Base+0x268c>
   14ce4:	ldr	r3, [sp]
   14ce8:	cmp	r3, #0
   14cec:	ldrbne	r5, [r3]
   14cf0:	moveq	r5, #0
   14cf4:	cmp	r7, #0
   14cf8:	uxtbne	r6, r0
   14cfc:	bne	14d10 <argp_parse@@Base+0x26a8>
   14d00:	ldr	r3, [sp, #4]
   14d04:	cmp	r3, #0
   14d08:	ldrbne	r6, [r3]
   14d0c:	moveq	r6, #0
   14d10:	bl	1112c <__ctype_tolower_loc@plt>
   14d14:	ldr	r3, [r0]
   14d18:	ldr	r4, [r3, r5, lsl #2]
   14d1c:	ldr	r3, [r3, r6, lsl #2]
   14d20:	subs	r4, r4, r3
   14d24:	bne	14bac <argp_parse@@Base+0x2544>
   14d28:	subs	r4, r6, r5
   14d2c:	bne	14bac <argp_parse@@Base+0x2544>
   14d30:	adds	r4, r7, #0
   14d34:	movne	r4, #1
   14d38:	cmp	r8, #0
   14d3c:	rsbeq	r4, r4, #0
   14d40:	rsbne	r4, r4, #1
   14d44:	cmp	r4, #0
   14d48:	bne	14bac <argp_parse@@Base+0x2544>
   14d4c:	cmp	r8, #0
   14d50:	bne	14bac <argp_parse@@Base+0x2544>
   14d54:	ldr	r0, [sp]
   14d58:	ldr	r1, [sp, #4]
   14d5c:	adds	r4, r1, #0
   14d60:	movne	r4, #1
   14d64:	cmp	r0, #0
   14d68:	rsbeq	r4, r4, #0
   14d6c:	rsbne	r4, r4, #1
   14d70:	cmp	r4, #0
   14d74:	bne	14bac <argp_parse@@Base+0x2544>
   14d78:	cmp	r0, #0
   14d7c:	beq	14bac <argp_parse@@Base+0x2544>
   14d80:	bl	110b4 <strcasecmp@plt>
   14d84:	mov	r4, r0
   14d88:	b	14bac <argp_parse@@Base+0x2544>
   14d8c:	mov	r0, r4
   14d90:	b	14c90 <argp_parse@@Base+0x2628>
   14d94:	ldr	r3, [r6]
   14d98:	ldr	r3, [r3, #12]
   14d9c:	tst	r3, #8
   14da0:	beq	14c98 <argp_parse@@Base+0x2630>
   14da4:	ldr	r3, [sp, #4]
   14da8:	cmp	r3, #0
   14dac:	movne	r5, r4
   14db0:	bne	14c80 <argp_parse@@Base+0x2618>
   14db4:	b	14c98 <argp_parse@@Base+0x2630>
   14db8:	strdeq	r3, [r1], -r0
   14dbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14dc0:	sub	sp, sp, #52	; 0x34
   14dc4:	str	r0, [sp, #24]
   14dc8:	str	r1, [sp, #28]
   14dcc:	ldr	r2, [r0, #16]
   14dd0:	str	r2, [sp, #8]
   14dd4:	ldr	r5, [r0]
   14dd8:	mov	r0, #16
   14ddc:	bl	13844 <argp_parse@@Base+0x11dc>
   14de0:	subs	fp, r0, #0
   14de4:	beq	14e14 <argp_parse@@Base+0x27ac>
   14de8:	mov	r3, #0
   14dec:	str	r3, [fp, #4]
   14df0:	str	r3, [fp, #12]
   14df4:	cmp	r5, r3
   14df8:	beq	14fec <argp_parse@@Base+0x2984>
   14dfc:	ldr	r4, [r5, #12]
   14e00:	ands	r4, r4, #4
   14e04:	bne	14e28 <argp_parse@@Base+0x27c0>
   14e08:	add	r6, r5, #24
   14e0c:	mov	r8, r3
   14e10:	b	14e50 <argp_parse@@Base+0x27e8>
   14e14:	ldr	r3, [pc, #1576]	; 15444 <argp_parse@@Base+0x2ddc>
   14e18:	ldr	r2, [pc, #1576]	; 15448 <argp_parse@@Base+0x2de0>
   14e1c:	ldr	r1, [pc, #1576]	; 1544c <argp_parse@@Base+0x2de4>
   14e20:	ldr	r0, [pc, #1576]	; 15450 <argp_parse@@Base+0x2de8>
   14e24:	bl	112b8 <__assert_fail@plt>
   14e28:	ldr	r3, [pc, #1556]	; 15444 <argp_parse@@Base+0x2ddc>
   14e2c:	mov	r2, #460	; 0x1cc
   14e30:	ldr	r1, [pc, #1556]	; 1544c <argp_parse@@Base+0x2de4>
   14e34:	ldr	r0, [pc, #1560]	; 15454 <argp_parse@@Base+0x2dec>
   14e38:	bl	112b8 <__assert_fail@plt>
   14e3c:	ldr	r2, [fp, #4]
   14e40:	add	r2, r2, #1
   14e44:	str	r2, [fp, #4]
   14e48:	b	14e78 <argp_parse@@Base+0x2810>
   14e4c:	add	r6, r6, #24
   14e50:	mov	r3, r6
   14e54:	ldr	r2, [r6, #-20]	; 0xffffffec
   14e58:	cmp	r2, #0
   14e5c:	bne	14e6c <argp_parse@@Base+0x2804>
   14e60:	ldr	r2, [r6, #-24]	; 0xffffffe8
   14e64:	cmp	r2, #0
   14e68:	beq	14eb0 <argp_parse@@Base+0x2848>
   14e6c:	ldr	r2, [r3, #-12]
   14e70:	tst	r2, #4
   14e74:	beq	14e3c <argp_parse@@Base+0x27d4>
   14e78:	ldr	r2, [r3, #-12]
   14e7c:	tst	r2, #8
   14e80:	bne	14e4c <argp_parse@@Base+0x27e4>
   14e84:	ldr	r7, [r3, #-20]	; 0xffffffec
   14e88:	sub	r3, r7, #1
   14e8c:	cmp	r3, #254	; 0xfe
   14e90:	bhi	14e4c <argp_parse@@Base+0x27e4>
   14e94:	bl	11150 <__ctype_b_loc@plt>
   14e98:	ldr	r3, [r0]
   14e9c:	lsl	r7, r7, #1
   14ea0:	ldrh	r3, [r3, r7]
   14ea4:	tst	r3, #16384	; 0x4000
   14ea8:	addne	r8, r8, #1
   14eac:	b	14e4c <argp_parse@@Base+0x27e4>
   14eb0:	ldr	r2, [r6, #-8]
   14eb4:	cmp	r2, #0
   14eb8:	bne	14e6c <argp_parse@@Base+0x2804>
   14ebc:	ldr	r2, [r6, #-4]
   14ec0:	cmp	r2, #0
   14ec4:	bne	14e6c <argp_parse@@Base+0x2804>
   14ec8:	ldr	r0, [fp, #4]
   14ecc:	rsb	r0, r0, r0, lsl #3
   14ed0:	lsl	r0, r0, #2
   14ed4:	bl	13844 <argp_parse@@Base+0x11dc>
   14ed8:	str	r0, [fp]
   14edc:	add	r0, r8, #1
   14ee0:	bl	13844 <argp_parse@@Base+0x11dc>
   14ee4:	str	r0, [fp, #8]
   14ee8:	ldr	r8, [fp]
   14eec:	cmp	r0, #0
   14ef0:	cmpne	r8, #0
   14ef4:	bne	14f0c <argp_parse@@Base+0x28a4>
   14ef8:	ldr	r3, [pc, #1348]	; 15444 <argp_parse@@Base+0x2ddc>
   14efc:	ldr	r2, [pc, #1364]	; 15458 <argp_parse@@Base+0x2df0>
   14f00:	ldr	r1, [pc, #1348]	; 1544c <argp_parse@@Base+0x2de4>
   14f04:	ldr	r0, [pc, #1360]	; 1545c <argp_parse@@Base+0x2df4>
   14f08:	bl	112b8 <__assert_fail@plt>
   14f0c:	ldr	r2, [fp, #4]
   14f10:	ldr	r3, [pc, #1352]	; 15460 <argp_parse@@Base+0x2df8>
   14f14:	cmp	r2, r3
   14f18:	addls	r8, r8, #28
   14f1c:	movls	r7, r0
   14f20:	movls	sl, #0
   14f24:	bls	14f70 <argp_parse@@Base+0x2908>
   14f28:	ldr	r3, [pc, #1300]	; 15444 <argp_parse@@Base+0x2ddc>
   14f2c:	mov	r2, #476	; 0x1dc
   14f30:	ldr	r1, [pc, #1300]	; 1544c <argp_parse@@Base+0x2de4>
   14f34:	ldr	r0, [pc, #1320]	; 15464 <argp_parse@@Base+0x2dfc>
   14f38:	bl	112b8 <__assert_fail@plt>
   14f3c:	ldr	r3, [r5, #4]
   14f40:	cmp	r3, #0
   14f44:	addeq	r9, r4, #1
   14f48:	movne	r9, r4
   14f4c:	b	14fb4 <argp_parse@@Base+0x294c>
   14f50:	ldr	r3, [r5, #16]
   14f54:	cmp	r3, #0
   14f58:	bne	15360 <argp_parse@@Base+0x2cf8>
   14f5c:	ldr	r3, [r5, #20]
   14f60:	cmp	r3, #0
   14f64:	bne	15360 <argp_parse@@Base+0x2cf8>
   14f68:	add	r8, r8, #28
   14f6c:	mov	r4, r9
   14f70:	ldr	r3, [r5, #4]
   14f74:	cmp	r3, #0
   14f78:	bne	14f88 <argp_parse@@Base+0x2920>
   14f7c:	ldr	r3, [r5]
   14f80:	cmp	r3, #0
   14f84:	beq	14fcc <argp_parse@@Base+0x2964>
   14f88:	mov	r6, r8
   14f8c:	str	r5, [r8, #-28]	; 0xffffffe4
   14f90:	str	sl, [r8, #-24]	; 0xffffffe8
   14f94:	str	r7, [r8, #-20]	; 0xffffffec
   14f98:	ldr	r9, [r5, #20]
   14f9c:	cmp	r9, #0
   14fa0:	bne	14fb4 <argp_parse@@Base+0x294c>
   14fa4:	ldr	r3, [r5]
   14fa8:	cmp	r3, #0
   14fac:	movne	r9, r4
   14fb0:	beq	14f3c <argp_parse@@Base+0x28d4>
   14fb4:	str	r9, [r6, #-16]
   14fb8:	ldr	r3, [sp, #28]
   14fbc:	str	r3, [r6, #-12]
   14fc0:	ldr	r3, [sp, #24]
   14fc4:	str	r3, [r6, #-8]
   14fc8:	b	1536c <argp_parse@@Base+0x2d04>
   14fcc:	ldr	r3, [r5, #16]
   14fd0:	cmp	r3, #0
   14fd4:	bne	14f88 <argp_parse@@Base+0x2920>
   14fd8:	ldr	r3, [r5, #20]
   14fdc:	cmp	r3, #0
   14fe0:	bne	14f88 <argp_parse@@Base+0x2920>
   14fe4:	mov	r3, #0
   14fe8:	strb	r3, [r7]
   14fec:	ldr	r3, [sp, #8]
   14ff0:	cmp	r3, #0
   14ff4:	beq	15330 <argp_parse@@Base+0x2cc8>
   14ff8:	ldr	r3, [r3]
   14ffc:	cmp	r3, #0
   15000:	beq	15330 <argp_parse@@Base+0x2cc8>
   15004:	add	r3, fp, #12
   15008:	str	r3, [sp, #44]	; 0x2c
   1500c:	str	fp, [sp, #20]
   15010:	b	150a0 <argp_parse@@Base+0x2a38>
   15014:	ldr	r1, [sp, #28]
   15018:	b	15120 <argp_parse@@Base+0x2ab8>
   1501c:	mov	r2, r3
   15020:	ldr	r3, [r2, #24]
   15024:	cmp	r3, #0
   15028:	bne	1501c <argp_parse@@Base+0x29b4>
   1502c:	add	r2, r2, #24
   15030:	ldr	r1, [sp, #16]
   15034:	ldr	r3, [r1, #12]
   15038:	str	r3, [r2]
   1503c:	mov	r2, #0
   15040:	str	r2, [r1, #12]
   15044:	ldr	r3, [r1, #4]
   15048:	cmp	r3, r2
   1504c:	beq	15084 <argp_parse@@Base+0x2a1c>
   15050:	ldr	r0, [sp, #20]
   15054:	ldr	r2, [r0, #4]
   15058:	cmp	r2, #0
   1505c:	bne	15148 <argp_parse@@Base+0x2ae0>
   15060:	str	r3, [r0, #4]
   15064:	mov	r2, r1
   15068:	ldr	r3, [r1]
   1506c:	str	r3, [r0]
   15070:	ldr	r3, [r2, #8]
   15074:	str	r3, [r0, #8]
   15078:	mov	r3, r2
   1507c:	mov	r2, #0
   15080:	str	r2, [r3, #4]
   15084:	ldr	r0, [sp, #16]
   15088:	bl	13c70 <argp_parse@@Base+0x1608>
   1508c:	ldr	r2, [sp, #8]
   15090:	ldr	r3, [r2, #16]!
   15094:	str	r2, [sp, #8]
   15098:	cmp	r3, #0
   1509c:	beq	1532c <argp_parse@@Base+0x2cc4>
   150a0:	ldr	r3, [sp, #8]
   150a4:	ldr	r4, [r3, #12]
   150a8:	cmp	r4, #0
   150ac:	bne	150bc <argp_parse@@Base+0x2a54>
   150b0:	ldr	r3, [r3, #8]
   150b4:	cmp	r3, #0
   150b8:	beq	15014 <argp_parse@@Base+0x29ac>
   150bc:	ldr	r2, [sp, #8]
   150c0:	ldr	r5, [r2, #8]
   150c4:	ldr	r7, [sp, #24]
   150c8:	ldr	r3, [r7, #16]
   150cc:	sub	r3, r2, r3
   150d0:	asr	r6, r3, #4
   150d4:	mov	r0, #28
   150d8:	bl	13844 <argp_parse@@Base+0x11dc>
   150dc:	subs	r1, r0, #0
   150e0:	beq	15120 <argp_parse@@Base+0x2ab8>
   150e4:	str	r4, [r1, #8]
   150e8:	str	r5, [r1]
   150ec:	str	r6, [r1, #4]
   150f0:	ldr	r3, [sp, #28]
   150f4:	str	r3, [r1, #12]
   150f8:	str	r7, [r1, #16]
   150fc:	cmp	r3, #0
   15100:	ldrne	r3, [r3, #20]
   15104:	addne	r3, r3, #1
   15108:	moveq	r3, #0
   1510c:	str	r3, [r1, #20]
   15110:	ldr	r2, [sp, #20]
   15114:	ldr	r3, [r2, #12]
   15118:	str	r3, [r1, #24]
   1511c:	str	r1, [r2, #12]
   15120:	ldr	r3, [sp, #8]
   15124:	ldr	r0, [r3]
   15128:	bl	14dbc <argp_parse@@Base+0x2754>
   1512c:	str	r0, [sp, #16]
   15130:	ldr	r3, [sp, #20]
   15134:	ldr	r2, [r3, #12]
   15138:	cmp	r2, #0
   1513c:	ldreq	r2, [sp, #44]	; 0x2c
   15140:	bne	15020 <argp_parse@@Base+0x29b8>
   15144:	b	15030 <argp_parse@@Base+0x29c8>
   15148:	add	r3, r3, r2
   1514c:	str	r3, [sp, #36]	; 0x24
   15150:	rsb	r0, r3, r3, lsl #3
   15154:	lsl	r0, r0, #2
   15158:	bl	13844 <argp_parse@@Base+0x11dc>
   1515c:	mov	r4, r0
   15160:	str	r0, [sp, #32]
   15164:	ldr	r3, [sp, #20]
   15168:	ldr	r0, [r3, #8]
   1516c:	bl	11168 <strlen@plt>
   15170:	mov	r6, r0
   15174:	ldr	r3, [sp, #16]
   15178:	ldr	r0, [r3, #8]
   1517c:	bl	11168 <strlen@plt>
   15180:	add	r0, r6, r0
   15184:	add	r0, r0, #1
   15188:	bl	13844 <argp_parse@@Base+0x11dc>
   1518c:	mov	sl, r0
   15190:	cmp	r4, #0
   15194:	cmpne	r0, #0
   15198:	beq	15264 <argp_parse@@Base+0x2bfc>
   1519c:	ldr	r3, [sp, #36]	; 0x24
   151a0:	ldr	r2, [pc, #696]	; 15460 <argp_parse@@Base+0x2df8>
   151a4:	cmp	r3, r2
   151a8:	bhi	15278 <argp_parse@@Base+0x2c10>
   151ac:	ldr	r5, [sp, #20]
   151b0:	ldr	r2, [r5]
   151b4:	mov	r1, r2
   151b8:	str	r2, [sp, #40]	; 0x28
   151bc:	ldr	r4, [r5, #4]
   151c0:	rsb	r7, r4, r4, lsl #3
   151c4:	lsl	r7, r7, #2
   151c8:	mov	r2, r7
   151cc:	ldr	r8, [sp, #32]
   151d0:	mov	r0, r8
   151d4:	bl	11144 <mempcpy@plt>
   151d8:	ldr	r3, [sp, #16]
   151dc:	ldr	r1, [r3, #4]
   151e0:	str	r1, [sp, #4]
   151e4:	rsb	r2, r1, r1, lsl #3
   151e8:	lsl	r2, r2, #2
   151ec:	ldr	r1, [r3]
   151f0:	bl	1106c <memcpy@plt>
   151f4:	ldr	r5, [r5, #8]
   151f8:	mov	r2, r6
   151fc:	mov	r1, r5
   15200:	mov	r0, sl
   15204:	bl	1106c <memcpy@plt>
   15208:	cmp	r4, #0
   1520c:	beq	1528c <argp_parse@@Base+0x2c24>
   15210:	mov	r2, r8
   15214:	ldr	r3, [r2, #8]
   15218:	sub	r3, r3, r5
   1521c:	add	r3, sl, r3
   15220:	str	r3, [r2, #8]
   15224:	add	r2, r2, #28
   15228:	subs	r4, r4, #1
   1522c:	bne	15214 <argp_parse@@Base+0x2bac>
   15230:	ldr	r3, [sp, #32]
   15234:	add	r7, r3, r7
   15238:	add	r3, sl, r6
   1523c:	str	r3, [sp, #12]
   15240:	ldr	r2, [sp, #16]
   15244:	ldr	r8, [r2, #8]
   15248:	ldr	r2, [sp, #4]
   1524c:	cmp	r2, #0
   15250:	beq	152f4 <argp_parse@@Base+0x2c8c>
   15254:	add	r9, r7, #28
   15258:	mov	fp, r3
   1525c:	sub	r7, r3, #1
   15260:	b	152dc <argp_parse@@Base+0x2c74>
   15264:	ldr	r3, [pc, #508]	; 15468 <argp_parse@@Base+0x2e00>
   15268:	ldr	r2, [pc, #508]	; 1546c <argp_parse@@Base+0x2e04>
   1526c:	ldr	r1, [pc, #472]	; 1544c <argp_parse@@Base+0x2de4>
   15270:	ldr	r0, [pc, #504]	; 15470 <argp_parse@@Base+0x2e08>
   15274:	bl	112b8 <__assert_fail@plt>
   15278:	ldr	r3, [pc, #488]	; 15468 <argp_parse@@Base+0x2e00>
   1527c:	mov	r2, #972	; 0x3cc
   15280:	ldr	r1, [pc, #452]	; 1544c <argp_parse@@Base+0x2de4>
   15284:	ldr	r0, [pc, #488]	; 15474 <argp_parse@@Base+0x2e0c>
   15288:	bl	112b8 <__assert_fail@plt>
   1528c:	ldr	r7, [sp, #32]
   15290:	b	15238 <argp_parse@@Base+0x2bd0>
   15294:	ldr	r3, [sp, #12]
   15298:	cmp	sl, r3
   1529c:	bcs	15434 <argp_parse@@Base+0x2dcc>
   152a0:	ldrb	r3, [sl]
   152a4:	cmp	r3, r1
   152a8:	beq	1543c <argp_parse@@Base+0x2dd4>
   152ac:	mov	r3, sl
   152b0:	cmp	r7, r3
   152b4:	beq	15434 <argp_parse@@Base+0x2dcc>
   152b8:	ldrb	r2, [r3, #1]!
   152bc:	cmp	r2, r1
   152c0:	bne	152b0 <argp_parse@@Base+0x2c48>
   152c4:	b	1543c <argp_parse@@Base+0x2dd4>
   152c8:	add	r9, r9, #28
   152cc:	ldr	r3, [sp, #4]
   152d0:	subs	r3, r3, #1
   152d4:	str	r3, [sp, #4]
   152d8:	beq	152f8 <argp_parse@@Base+0x2c90>
   152dc:	str	fp, [r9, #-20]	; 0xffffffec
   152e0:	ldr	r5, [r9, #-24]	; 0xffffffe8
   152e4:	ldr	r4, [r9, #-28]	; 0xffffffe4
   152e8:	cmp	r5, #0
   152ec:	bne	153fc <argp_parse@@Base+0x2d94>
   152f0:	b	152c8 <argp_parse@@Base+0x2c60>
   152f4:	ldr	fp, [sp, #12]
   152f8:	mov	r3, #0
   152fc:	strb	r3, [fp]
   15300:	ldr	r0, [sp, #40]	; 0x28
   15304:	bl	1325c <argp_parse@@Base+0xbf4>
   15308:	ldr	r4, [sp, #20]
   1530c:	ldr	r0, [r4, #8]
   15310:	bl	1325c <argp_parse@@Base+0xbf4>
   15314:	ldr	r2, [sp, #32]
   15318:	str	r2, [r4]
   1531c:	ldr	r2, [sp, #36]	; 0x24
   15320:	str	r2, [r4, #4]
   15324:	str	sl, [r4, #8]
   15328:	b	15084 <argp_parse@@Base+0x2a1c>
   1532c:	ldr	fp, [sp, #20]
   15330:	mov	r0, fp
   15334:	add	sp, sp, #52	; 0x34
   15338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1533c:	strb	r4, [r7]
   15340:	add	r7, r7, #1
   15344:	add	r5, r5, #24
   15348:	ldr	r3, [r5, #4]
   1534c:	cmp	r3, #0
   15350:	bne	15360 <argp_parse@@Base+0x2cf8>
   15354:	ldr	r3, [r5]
   15358:	cmp	r3, #0
   1535c:	beq	14f50 <argp_parse@@Base+0x28e8>
   15360:	ldr	r3, [r5, #12]
   15364:	tst	r3, #4
   15368:	beq	14f68 <argp_parse@@Base+0x2900>
   1536c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15370:	add	r3, r3, #1
   15374:	str	r3, [r6, #-24]	; 0xffffffe8
   15378:	ldr	r3, [r5, #12]
   1537c:	tst	r3, #8
   15380:	bne	15344 <argp_parse@@Base+0x2cdc>
   15384:	ldr	r4, [r5, #4]
   15388:	sub	r3, r4, #1
   1538c:	cmp	r3, #254	; 0xfe
   15390:	bhi	15344 <argp_parse@@Base+0x2cdc>
   15394:	bl	11150 <__ctype_b_loc@plt>
   15398:	ldr	r2, [r0]
   1539c:	lsl	r3, r4, #1
   153a0:	ldrh	r3, [r2, r3]
   153a4:	tst	r3, #16384	; 0x4000
   153a8:	beq	15344 <argp_parse@@Base+0x2cdc>
   153ac:	uxtb	r4, r4
   153b0:	ldr	r3, [fp, #8]
   153b4:	cmp	r3, r7
   153b8:	bcs	1533c <argp_parse@@Base+0x2cd4>
   153bc:	ldrb	r2, [r3]
   153c0:	cmp	r2, r4
   153c4:	beq	15344 <argp_parse@@Base+0x2cdc>
   153c8:	sub	r1, r7, #1
   153cc:	cmp	r3, r1
   153d0:	beq	1533c <argp_parse@@Base+0x2cd4>
   153d4:	ldrb	r2, [r3, #1]!
   153d8:	cmp	r2, r4
   153dc:	bne	153cc <argp_parse@@Base+0x2d64>
   153e0:	b	15344 <argp_parse@@Base+0x2cdc>
   153e4:	ldrb	r1, [r8]
   153e8:	cmp	r1, r6
   153ec:	beq	15294 <argp_parse@@Base+0x2c2c>
   153f0:	add	r4, r4, #24
   153f4:	subs	r5, r5, #1
   153f8:	beq	152c8 <argp_parse@@Base+0x2c60>
   153fc:	ldr	r3, [r4, #12]
   15400:	tst	r3, #8
   15404:	bne	153f0 <argp_parse@@Base+0x2d88>
   15408:	ldr	r6, [r4, #4]
   1540c:	sub	r3, r6, #1
   15410:	cmp	r3, #254	; 0xfe
   15414:	bhi	153f0 <argp_parse@@Base+0x2d88>
   15418:	bl	11150 <__ctype_b_loc@plt>
   1541c:	ldr	r2, [r0]
   15420:	lsl	r3, r6, #1
   15424:	ldrh	r3, [r2, r3]
   15428:	tst	r3, #16384	; 0x4000
   1542c:	bne	153e4 <argp_parse@@Base+0x2d7c>
   15430:	b	153f0 <argp_parse@@Base+0x2d88>
   15434:	strb	r1, [fp]
   15438:	add	fp, fp, #1
   1543c:	add	r8, r8, #1
   15440:	b	153f0 <argp_parse@@Base+0x2d88>
   15444:	andeq	r8, r1, r0, asr #15
   15448:	andeq	r0, r0, r2, asr #3
   1544c:			; <UNDEFINED> instruction: 0x000188b0
   15450:			; <UNDEFINED> instruction: 0x000188bc
   15454:	andeq	r8, r1, r0, asr #17
   15458:	ldrdeq	r0, [r0], -sl
   1545c:	ldrdeq	r8, [r1], -r0
   15460:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   15464:	strdeq	r8, [r1], -r4
   15468:	andeq	r8, r1, ip, asr #15
   1546c:	andeq	r0, r0, sl, asr #7
   15470:	andeq	r8, r1, r0, lsr r9
   15474:	andeq	r8, r1, ip, asr #18

00015478 <argp_failure@@Base>:
   15478:	push	{r3}		; (str r3, [sp, #-4]!)
   1547c:	push	{r4, r5, r6, r7, lr}
   15480:	sub	sp, sp, #200	; 0xc8
   15484:	mov	r7, r1
   15488:	mov	r6, r2
   1548c:	subs	r5, r0, #0
   15490:	beq	155e0 <argp_failure@@Base+0x168>
   15494:	ldr	r3, [r5, #16]
   15498:	tst	r3, #2
   1549c:	bne	155d0 <argp_failure@@Base+0x158>
   154a0:	ldr	r4, [r5, #44]	; 0x2c
   154a4:	cmp	r4, #0
   154a8:	beq	155d0 <argp_failure@@Base+0x158>
   154ac:	mov	r0, r4
   154b0:	bl	11234 <flockfile@plt>
   154b4:	ldr	r0, [r5, #40]	; 0x28
   154b8:	mov	r1, r4
   154bc:	bl	10fdc <fputs_unlocked@plt>
   154c0:	ldr	r3, [sp, #220]	; 0xdc
   154c4:	cmp	r3, #0
   154c8:	beq	15524 <argp_failure@@Base+0xac>
   154cc:	add	r3, sp, #224	; 0xe0
   154d0:	str	r3, [sp]
   154d4:	ldr	r3, [r4, #20]
   154d8:	ldr	r2, [r4, #24]
   154dc:	cmp	r3, r2
   154e0:	addcc	r2, r3, #1
   154e4:	strcc	r2, [r4, #20]
   154e8:	movcc	r2, #58	; 0x3a
   154ec:	strbcc	r2, [r3]
   154f0:	bcs	15604 <argp_failure@@Base+0x18c>
   154f4:	ldr	r3, [r4, #20]
   154f8:	ldr	r2, [r4, #24]
   154fc:	cmp	r3, r2
   15500:	addcc	r2, r3, #1
   15504:	strcc	r2, [r4, #20]
   15508:	movcc	r2, #32
   1550c:	strbcc	r2, [r3]
   15510:	bcs	15614 <argp_failure@@Base+0x19c>
   15514:	ldr	r2, [sp]
   15518:	ldr	r1, [sp, #220]	; 0xdc
   1551c:	mov	r0, r4
   15520:	bl	11210 <vfprintf@plt>
   15524:	cmp	r6, #0
   15528:	beq	1558c <argp_failure@@Base+0x114>
   1552c:	ldr	r3, [r4, #20]
   15530:	ldr	r2, [r4, #24]
   15534:	cmp	r3, r2
   15538:	addcc	r2, r3, #1
   1553c:	strcc	r2, [r4, #20]
   15540:	movcc	r2, #58	; 0x3a
   15544:	strbcc	r2, [r3]
   15548:	bcs	15624 <argp_failure@@Base+0x1ac>
   1554c:	ldr	r3, [r4, #20]
   15550:	ldr	r2, [r4, #24]
   15554:	cmp	r3, r2
   15558:	addcc	r2, r3, #1
   1555c:	strcc	r2, [r4, #20]
   15560:	movcc	r2, #32
   15564:	strbcc	r2, [r3]
   15568:	bcs	15634 <argp_failure@@Base+0x1bc>
   1556c:	mov	r2, #200	; 0xc8
   15570:	mov	r1, sp
   15574:	mov	r0, r6
   15578:	bl	111a4 <strerror_r@plt>
   1557c:	cmp	r0, #0
   15580:	beq	15644 <argp_failure@@Base+0x1cc>
   15584:	mov	r1, r4
   15588:	bl	10fdc <fputs_unlocked@plt>
   1558c:	ldr	r3, [r4, #20]
   15590:	ldr	r2, [r4, #24]
   15594:	cmp	r3, r2
   15598:	addcc	r2, r3, #1
   1559c:	strcc	r2, [r4, #20]
   155a0:	movcc	r2, #10
   155a4:	strbcc	r2, [r3]
   155a8:	bcs	1565c <argp_failure@@Base+0x1e4>
   155ac:	mov	r0, r4
   155b0:	bl	110c0 <funlockfile@plt>
   155b4:	cmp	r7, #0
   155b8:	beq	155d0 <argp_failure@@Base+0x158>
   155bc:	cmp	r5, #0
   155c0:	beq	1566c <argp_failure@@Base+0x1f4>
   155c4:	ldr	r3, [r5, #16]
   155c8:	tst	r3, #32
   155cc:	beq	1566c <argp_failure@@Base+0x1f4>
   155d0:	add	sp, sp, #200	; 0xc8
   155d4:	pop	{r4, r5, r6, r7, lr}
   155d8:	add	sp, sp, #4
   155dc:	bx	lr
   155e0:	ldr	r3, [pc, #140]	; 15674 <argp_failure@@Base+0x1fc>
   155e4:	ldr	r4, [r3]
   155e8:	cmp	r4, #0
   155ec:	beq	155d0 <argp_failure@@Base+0x158>
   155f0:	mov	r0, r4
   155f4:	bl	11234 <flockfile@plt>
   155f8:	ldr	r3, [pc, #120]	; 15678 <argp_failure@@Base+0x200>
   155fc:	ldr	r0, [r3]
   15600:	b	154b8 <argp_failure@@Base+0x40>
   15604:	mov	r1, #58	; 0x3a
   15608:	mov	r0, r4
   1560c:	bl	111ec <__overflow@plt>
   15610:	b	154f4 <argp_failure@@Base+0x7c>
   15614:	mov	r1, #32
   15618:	mov	r0, r4
   1561c:	bl	111ec <__overflow@plt>
   15620:	b	15514 <argp_failure@@Base+0x9c>
   15624:	mov	r1, #58	; 0x3a
   15628:	mov	r0, r4
   1562c:	bl	111ec <__overflow@plt>
   15630:	b	1554c <argp_failure@@Base+0xd4>
   15634:	mov	r1, #32
   15638:	mov	r0, r4
   1563c:	bl	111ec <__overflow@plt>
   15640:	b	1556c <argp_failure@@Base+0xf4>
   15644:	mov	r0, r6
   15648:	bl	11120 <strerror@plt>
   1564c:	ldr	r3, [pc, #40]	; 1567c <argp_failure@@Base+0x204>
   15650:	cmp	r0, #0
   15654:	moveq	r0, r3
   15658:	b	15584 <argp_failure@@Base+0x10c>
   1565c:	mov	r1, #10
   15660:	mov	r0, r4
   15664:	bl	111ec <__overflow@plt>
   15668:	b	155ac <argp_failure@@Base+0x134>
   1566c:	mov	r0, r7
   15670:	bl	1115c <exit@plt>
   15674:	andeq	r9, r2, r0, ror r2
   15678:	andeq	r9, r2, r8, ror #4
   1567c:	andeq	r8, r1, r0, lsl #19
   15680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15684:	add	fp, sp, #32
   15688:	sub	sp, sp, #108	; 0x6c
   1568c:	str	r0, [fp, #-112]	; 0xffffff90
   15690:	str	r1, [fp, #-100]	; 0xffffff9c
   15694:	str	r3, [fp, #-104]	; 0xffffff98
   15698:	subs	r3, r2, #0
   1569c:	str	r3, [fp, #-132]	; 0xffffff7c
   156a0:	beq	1670c <argp_failure@@Base+0x1294>
   156a4:	mov	r0, r3
   156a8:	bl	11234 <flockfile@plt>
   156ac:	ldr	r3, [pc, #3772]	; 16570 <argp_failure@@Base+0x10f8>
   156b0:	ldr	r3, [r3, #36]	; 0x24
   156b4:	str	r3, [fp, #-108]	; 0xffffff94
   156b8:	cmp	r3, #0
   156bc:	beq	15794 <argp_failure@@Base+0x31c>
   156c0:	mov	r3, #0
   156c4:	ldr	r2, [pc, #3748]	; 16570 <argp_failure@@Base+0x10f8>
   156c8:	ldr	r2, [r2, #32]
   156cc:	mov	r1, r3
   156d0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   156d4:	bl	17608 <argp_error@@Base+0xd14>
   156d8:	subs	sl, r0, #0
   156dc:	beq	15b40 <argp_failure@@Base+0x6c8>
   156e0:	ldr	r3, [fp, #-104]	; 0xffffff98
   156e4:	tst	r3, #11
   156e8:	moveq	r3, #0
   156ec:	streq	r3, [fp, #-108]	; 0xffffff94
   156f0:	bne	15b4c <argp_failure@@Base+0x6d4>
   156f4:	ldr	r3, [fp, #-104]	; 0xffffff98
   156f8:	tst	r3, #3
   156fc:	moveq	r4, #0
   15700:	bne	15bd0 <argp_failure@@Base+0x758>
   15704:	ldr	r3, [fp, #-104]	; 0xffffff98
   15708:	tst	r3, #16
   1570c:	bne	15dcc <argp_failure@@Base+0x954>
   15710:	ldr	r3, [fp, #-104]	; 0xffffff98
   15714:	tst	r3, #4
   15718:	bne	15df4 <argp_failure@@Base+0x97c>
   1571c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15720:	tst	r3, #8
   15724:	beq	16680 <argp_failure@@Base+0x1208>
   15728:	ldr	r3, [fp, #-108]	; 0xffffff94
   1572c:	ldr	r3, [r3, #4]
   15730:	cmp	r3, #0
   15734:	beq	16680 <argp_failure@@Base+0x1208>
   15738:	cmp	r4, #0
   1573c:	beq	15764 <argp_failure@@Base+0x2ec>
   15740:	ldr	r2, [sl, #28]
   15744:	ldr	r3, [sl, #32]
   15748:	cmp	r2, r3
   1574c:	bcs	15e10 <argp_failure@@Base+0x998>
   15750:	ldr	r3, [sl, #28]
   15754:	add	r2, r3, #1
   15758:	str	r2, [sl, #28]
   1575c:	mov	r2, #10
   15760:	strb	r2, [r3]
   15764:	mov	r3, #0
   15768:	str	r3, [fp, #-88]	; 0xffffffa8
   1576c:	str	r3, [fp, #-84]	; 0xffffffac
   15770:	str	r3, [fp, #-80]	; 0xffffffb0
   15774:	ldr	r3, [fp, #-108]	; 0xffffff94
   15778:	ldr	r2, [r3]
   1577c:	str	r2, [fp, #-96]	; 0xffffffa0
   15780:	ldr	r3, [r3, #4]
   15784:	str	r3, [fp, #-120]	; 0xffffff88
   15788:	cmp	r3, #0
   1578c:	bne	161f8 <argp_failure@@Base+0xd80>
   15790:	b	1667c <argp_failure@@Base+0x1204>
   15794:	ldr	r0, [pc, #3452]	; 16518 <argp_failure@@Base+0x10a0>
   15798:	bl	110fc <getenv@plt>
   1579c:	mov	r9, r0
   157a0:	sub	ip, fp, #76	; 0x4c
   157a4:	ldr	lr, [pc, #3524]	; 16570 <argp_failure@@Base+0x10f8>
   157a8:	ldm	lr!, {r0, r1, r2, r3}
   157ac:	stmia	ip!, {r0, r1, r2, r3}
   157b0:	ldm	lr!, {r0, r1, r2, r3}
   157b4:	stmia	ip!, {r0, r1, r2, r3}
   157b8:	ldm	lr, {r0, r1}
   157bc:	stm	ip, {r0, r1}
   157c0:	cmp	r9, #0
   157c4:	ldrne	sl, [pc, #3408]	; 1651c <argp_failure@@Base+0x10a4>
   157c8:	addne	r8, sl, #168	; 0xa8
   157cc:	bne	15a70 <argp_failure@@Base+0x5f8>
   157d0:	b	156c0 <argp_failure@@Base+0x248>
   157d4:	mov	r5, r3
   157d8:	mov	r9, r5
   157dc:	mov	r3, r5
   157e0:	ldrb	r0, [r3], #1
   157e4:	lsl	r2, r0, #1
   157e8:	ldrh	r2, [r1, r2]
   157ec:	tst	r2, #8192	; 0x2000
   157f0:	bne	157d4 <argp_failure@@Base+0x35c>
   157f4:	tst	r2, #1024	; 0x400
   157f8:	beq	15a68 <argp_failure@@Base+0x5f0>
   157fc:	cmp	r0, #95	; 0x5f
   15800:	cmpne	r0, #45	; 0x2d
   15804:	moveq	r3, #1
   15808:	movne	r3, #0
   1580c:	lsl	r2, r2, #28
   15810:	orrs	r3, r3, r2, lsr #31
   15814:	beq	16790 <argp_failure@@Base+0x1318>
   15818:	mov	r4, r5
   1581c:	ldrb	r3, [r4, #1]!
   15820:	lsl	r2, r3, #1
   15824:	ldrh	r2, [r1, r2]
   15828:	lsl	r2, r2, #28
   1582c:	cmp	r3, #95	; 0x5f
   15830:	cmpne	r3, #45	; 0x2d
   15834:	moveq	r3, #1
   15838:	movne	r3, #0
   1583c:	orrs	r3, r3, r2, lsr #31
   15840:	bne	1581c <argp_failure@@Base+0x3a4>
   15844:	sub	r5, r4, r5
   15848:	ldrb	r3, [r4]
   1584c:	lsl	r2, r3, #1
   15850:	ldrh	r2, [r1, r2]
   15854:	tst	r2, #8192	; 0x2000
   15858:	beq	15870 <argp_failure@@Base+0x3f8>
   1585c:	ldrb	r3, [r4, #1]!
   15860:	lsl	r2, r3, #1
   15864:	ldrh	r2, [r1, r2]
   15868:	tst	r2, #8192	; 0x2000
   1586c:	bne	1585c <argp_failure@@Base+0x3e4>
   15870:	cmp	r3, #44	; 0x2c
   15874:	cmpne	r3, #0
   15878:	beq	167a8 <argp_failure@@Base+0x1330>
   1587c:	cmp	r3, #61	; 0x3d
   15880:	beq	158a8 <argp_failure@@Base+0x430>
   15884:	ldrb	r3, [r4]
   15888:	lsl	r3, r3, #1
   1588c:	ldrh	r3, [r1, r3]
   15890:	tst	r3, #2048	; 0x800
   15894:	bne	15928 <argp_failure@@Base+0x4b0>
   15898:	ldr	r3, [fp, #-108]	; 0xffffff94
   1589c:	str	r3, [fp, #-96]	; 0xffffffa0
   158a0:	str	r3, [fp, #-116]	; 0xffffff8c
   158a4:	b	167bc <argp_failure@@Base+0x1344>
   158a8:	add	r2, r4, #1
   158ac:	ldrb	r3, [r4, #1]
   158b0:	lsl	r3, r3, #1
   158b4:	ldrh	r3, [r1, r3]
   158b8:	tst	r3, #8192	; 0x2000
   158bc:	beq	167a0 <argp_failure@@Base+0x1328>
   158c0:	ldrb	r3, [r2, #1]!
   158c4:	lsl	r3, r3, #1
   158c8:	ldrh	r3, [r1, r3]
   158cc:	tst	r3, #8192	; 0x2000
   158d0:	bne	158c0 <argp_failure@@Base+0x448>
   158d4:	mov	r4, r2
   158d8:	b	15884 <argp_failure@@Base+0x40c>
   158dc:	ldrb	r3, [r9, #1]
   158e0:	cmp	r3, #111	; 0x6f
   158e4:	movne	r3, #1
   158e8:	strne	r3, [fp, #-96]	; 0xffffffa0
   158ec:	strne	r3, [fp, #-116]	; 0xffffff8c
   158f0:	bne	167bc <argp_failure@@Base+0x1344>
   158f4:	ldrb	r3, [r9, #2]
   158f8:	cmp	r3, #45	; 0x2d
   158fc:	movne	r3, #1
   15900:	strne	r3, [fp, #-96]	; 0xffffffa0
   15904:	strne	r3, [fp, #-116]	; 0xffffff8c
   15908:	bne	167bc <argp_failure@@Base+0x1344>
   1590c:	add	r9, r9, #3
   15910:	sub	r5, r5, #3
   15914:	ldr	r3, [fp, #-108]	; 0xffffff94
   15918:	str	r3, [fp, #-116]	; 0xffffff8c
   1591c:	mov	r3, #1
   15920:	str	r3, [fp, #-96]	; 0xffffffa0
   15924:	b	167bc <argp_failure@@Base+0x1344>
   15928:	mov	r2, #10
   1592c:	mov	r1, #0
   15930:	mov	r0, r4
   15934:	bl	10ff4 <strtol@plt>
   15938:	str	r0, [fp, #-116]	; 0xffffff8c
   1593c:	ldr	r2, [r6]
   15940:	ldrb	r3, [r4]
   15944:	lsl	r3, r3, #1
   15948:	ldrh	r3, [r2, r3]
   1594c:	tst	r3, #2048	; 0x800
   15950:	beq	15968 <argp_failure@@Base+0x4f0>
   15954:	ldrb	r3, [r4, #1]!
   15958:	lsl	r3, r3, #1
   1595c:	ldrh	r3, [r2, r3]
   15960:	tst	r3, #2048	; 0x800
   15964:	bne	15954 <argp_failure@@Base+0x4dc>
   15968:	ldrb	r3, [r4]
   1596c:	lsl	r3, r3, #1
   15970:	ldrh	r3, [r2, r3]
   15974:	tst	r3, #8192	; 0x2000
   15978:	beq	1599c <argp_failure@@Base+0x524>
   1597c:	ldrb	r3, [r4, #1]!
   15980:	lsl	r3, r3, #1
   15984:	ldrh	r3, [r2, r3]
   15988:	tst	r3, #8192	; 0x2000
   1598c:	bne	1597c <argp_failure@@Base+0x504>
   15990:	ldr	r3, [fp, #-108]	; 0xffffff94
   15994:	str	r3, [fp, #-96]	; 0xffffffa0
   15998:	b	167bc <argp_failure@@Base+0x1344>
   1599c:	ldr	r3, [fp, #-108]	; 0xffffff94
   159a0:	str	r3, [fp, #-96]	; 0xffffffa0
   159a4:	b	167bc <argp_failure@@Base+0x1344>
   159a8:	str	r9, [sp, #4]
   159ac:	str	r7, [sp]
   159b0:	ldr	r3, [pc, #2920]	; 16520 <argp_failure@@Base+0x10a8>
   159b4:	mov	r2, #0
   159b8:	mov	r1, r2
   159bc:	ldr	r0, [fp, #-100]	; 0xffffff9c
   159c0:	bl	15478 <argp_failure@@Base>
   159c4:	b	15a2c <argp_failure@@Base+0x5b4>
   159c8:	add	r6, r6, #16
   159cc:	cmp	r6, r8
   159d0:	beq	15a48 <argp_failure@@Base+0x5d0>
   159d4:	mov	r0, r6
   159d8:	bl	11168 <strlen@plt>
   159dc:	mov	r7, r0
   159e0:	cmp	r0, r5
   159e4:	bne	159c8 <argp_failure@@Base+0x550>
   159e8:	mov	r2, r5
   159ec:	mov	r1, r6
   159f0:	mov	r0, r9
   159f4:	bl	11288 <strncmp@plt>
   159f8:	cmp	r0, #0
   159fc:	bne	159c8 <argp_failure@@Base+0x550>
   15a00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15a04:	cmp	r3, #0
   15a08:	beq	15a18 <argp_failure@@Base+0x5a0>
   15a0c:	ldrb	r3, [r6, #14]
   15a10:	cmp	r3, #0
   15a14:	beq	159a8 <argp_failure@@Base+0x530>
   15a18:	ldrb	r3, [r6, #15]
   15a1c:	sub	r2, fp, #36	; 0x24
   15a20:	add	r3, r2, r3
   15a24:	ldr	r2, [fp, #-116]	; 0xffffff8c
   15a28:	str	r2, [r3, #-40]	; 0xffffffd8
   15a2c:	cmp	r6, r8
   15a30:	beq	15a48 <argp_failure@@Base+0x5d0>
   15a34:	ldrb	r3, [r4]
   15a38:	cmp	r3, #44	; 0x2c
   15a3c:	addeq	r9, r4, #1
   15a40:	movne	r9, r4
   15a44:	b	15a70 <argp_failure@@Base+0x5f8>
   15a48:	str	r9, [sp, #4]
   15a4c:	str	r5, [sp]
   15a50:	ldr	r3, [pc, #2764]	; 16524 <argp_failure@@Base+0x10ac>
   15a54:	mov	r2, #0
   15a58:	mov	r1, r2
   15a5c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15a60:	bl	15478 <argp_failure@@Base>
   15a64:	b	15a34 <argp_failure@@Base+0x5bc>
   15a68:	cmp	r0, #0
   15a6c:	bne	15a90 <argp_failure@@Base+0x618>
   15a70:	ldrb	r3, [r9]
   15a74:	cmp	r3, #0
   15a78:	beq	15aa8 <argp_failure@@Base+0x630>
   15a7c:	bl	11150 <__ctype_b_loc@plt>
   15a80:	mov	r6, r0
   15a84:	ldr	r1, [r0]
   15a88:	mov	r5, r9
   15a8c:	b	157d8 <argp_failure@@Base+0x360>
   15a90:	str	r5, [sp]
   15a94:	ldr	r3, [pc, #2700]	; 16528 <argp_failure@@Base+0x10b0>
   15a98:	mov	r2, #0
   15a9c:	mov	r1, r2
   15aa0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15aa4:	bl	15478 <argp_failure@@Base>
   15aa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15aac:	ldr	r3, [pc, #2680]	; 1652c <argp_failure@@Base+0x10b4>
   15ab0:	add	r1, r3, #144	; 0x90
   15ab4:	add	r3, r3, #16
   15ab8:	cmp	r3, r1
   15abc:	beq	15b10 <argp_failure@@Base+0x698>
   15ac0:	ldrb	r2, [r3, #14]
   15ac4:	cmp	r2, #0
   15ac8:	bne	15ab4 <argp_failure@@Base+0x63c>
   15acc:	ldrb	r2, [r3, #15]
   15ad0:	cmp	r2, #32
   15ad4:	beq	15ab4 <argp_failure@@Base+0x63c>
   15ad8:	sub	ip, fp, #36	; 0x24
   15adc:	add	r2, ip, r2
   15ae0:	ldr	r2, [r2, #-40]	; 0xffffffd8
   15ae4:	cmp	r2, r0
   15ae8:	blt	15ab4 <argp_failure@@Base+0x63c>
   15aec:	str	r3, [sp, #4]
   15af0:	ldr	r3, [pc, #2616]	; 16530 <argp_failure@@Base+0x10b8>
   15af4:	str	r3, [sp]
   15af8:	ldr	r3, [pc, #2612]	; 16534 <argp_failure@@Base+0x10bc>
   15afc:	mov	r2, #0
   15b00:	mov	r1, r2
   15b04:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15b08:	bl	15478 <argp_failure@@Base>
   15b0c:	b	156c0 <argp_failure@@Base+0x248>
   15b10:	ldr	r4, [pc, #2648]	; 16570 <argp_failure@@Base+0x10f8>
   15b14:	mov	ip, r4
   15b18:	sub	lr, fp, #76	; 0x4c
   15b1c:	ldm	lr!, {r0, r1, r2, r3}
   15b20:	stmia	ip!, {r0, r1, r2, r3}
   15b24:	ldm	lr!, {r0, r1, r2, r3}
   15b28:	stmia	ip!, {r0, r1, r2, r3}
   15b2c:	ldm	lr, {r0, r1}
   15b30:	stm	ip, {r0, r1}
   15b34:	mov	r3, #1
   15b38:	str	r3, [r4, #36]	; 0x24
   15b3c:	b	156c0 <argp_failure@@Base+0x248>
   15b40:	ldr	r0, [fp, #-132]	; 0xffffff7c
   15b44:	bl	110c0 <funlockfile@plt>
   15b48:	b	1670c <argp_failure@@Base+0x1294>
   15b4c:	mov	r1, #0
   15b50:	ldr	r0, [fp, #-112]	; 0xffffff90
   15b54:	bl	14dbc <argp_parse@@Base+0x2754>
   15b58:	str	r0, [fp, #-108]	; 0xffffff94
   15b5c:	ldr	r1, [pc, #2516]	; 16538 <argp_failure@@Base+0x10c0>
   15b60:	bl	13cc4 <argp_parse@@Base+0x165c>
   15b64:	cmp	r0, #0
   15b68:	mvnne	r3, #0
   15b6c:	strne	r3, [r0, #12]
   15b70:	ldr	r1, [pc, #2500]	; 1653c <argp_failure@@Base+0x10c4>
   15b74:	ldr	r0, [fp, #-108]	; 0xffffff94
   15b78:	bl	13cc4 <argp_parse@@Base+0x165c>
   15b7c:	cmp	r0, #0
   15b80:	mvnne	r3, #0
   15b84:	strne	r3, [r0, #12]
   15b88:	ldr	r0, [fp, #-108]	; 0xffffff94
   15b8c:	ldr	r3, [r0, #4]
   15b90:	cmp	r3, #0
   15b94:	beq	156f4 <argp_failure@@Base+0x27c>
   15b98:	ldr	r2, [r0]
   15b9c:	mov	r3, #0
   15ba0:	str	r3, [r2, #24]
   15ba4:	add	r3, r3, #1
   15ba8:	add	r2, r2, #28
   15bac:	ldr	r1, [r0, #4]
   15bb0:	cmp	r3, r1
   15bb4:	bcc	15ba0 <argp_failure@@Base+0x728>
   15bb8:	ldr	r3, [pc, #2432]	; 16540 <argp_failure@@Base+0x10c8>
   15bbc:	mov	r2, #28
   15bc0:	ldr	r0, [fp, #-108]	; 0xffffff94
   15bc4:	ldr	r0, [r0]
   15bc8:	bl	1124c <qsort@plt>
   15bcc:	b	156f4 <argp_failure@@Base+0x27c>
   15bd0:	ldr	r0, [fp, #-112]	; 0xffffff90
   15bd4:	bl	13d5c <argp_parse@@Base+0x16f4>
   15bd8:	mov	r2, r0
   15bdc:	add	r3, r0, #14
   15be0:	bic	r3, r3, #7
   15be4:	sub	sp, sp, r3
   15be8:	add	r8, sp, #8
   15bec:	mov	r1, #0
   15bf0:	mov	r0, r8
   15bf4:	bl	111bc <memset@plt>
   15bf8:	mov	r5, #1
   15bfc:	ldr	r4, [pc, #2412]	; 16570 <argp_failure@@Base+0x10f8>
   15c00:	ldr	r9, [pc, #2364]	; 16544 <argp_failure@@Base+0x10cc>
   15c04:	str	r8, [fp, #-96]	; 0xffffffa0
   15c08:	ldr	r8, [fp, #-104]	; 0xffffff98
   15c0c:	b	15cbc <argp_failure@@Base+0x844>
   15c10:	mov	r0, sl
   15c14:	bl	17680 <argp_error@@Base+0xd8c>
   15c18:	b	15cd8 <argp_failure@@Base+0x860>
   15c1c:	mov	r0, sl
   15c20:	bl	17680 <argp_error@@Base+0xd8c>
   15c24:	b	15d20 <argp_failure@@Base+0x8a8>
   15c28:	mov	r1, sl
   15c2c:	ldr	r0, [fp, #-108]	; 0xffffff94
   15c30:	bl	13ab4 <argp_parse@@Base+0x144c>
   15c34:	orr	r8, r8, #2
   15c38:	str	sl, [sp]
   15c3c:	mov	r3, #1
   15c40:	sub	r2, fp, #76	; 0x4c
   15c44:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15c48:	ldr	r0, [fp, #-112]	; 0xffffff90
   15c4c:	bl	13fdc <argp_parse@@Base+0x1974>
   15c50:	mov	r6, r0
   15c54:	ldr	r3, [sl, #28]
   15c58:	ldr	r2, [sl, #24]
   15c5c:	sub	r3, r3, r2
   15c60:	ldr	r2, [sl, #16]
   15c64:	cmp	r3, r2
   15c68:	bhi	15d90 <argp_failure@@Base+0x918>
   15c6c:	str	r7, [sl, #12]
   15c70:	ldr	r3, [sl, #28]
   15c74:	ldr	r2, [sl, #24]
   15c78:	sub	r3, r3, r2
   15c7c:	ldr	r2, [sl, #16]
   15c80:	cmp	r3, r2
   15c84:	bhi	15d9c <argp_failure@@Base+0x924>
   15c88:	str	r5, [sl, #4]
   15c8c:	ldr	r2, [sl, #28]
   15c90:	ldr	r3, [sl, #32]
   15c94:	cmp	r2, r3
   15c98:	bcs	15da8 <argp_failure@@Base+0x930>
   15c9c:	ldr	r3, [sl, #28]
   15ca0:	add	r2, r3, #1
   15ca4:	str	r2, [sl, #28]
   15ca8:	mov	r2, #10
   15cac:	strb	r2, [r3]
   15cb0:	mov	r5, #0
   15cb4:	cmp	r6, r5
   15cb8:	beq	15dc0 <argp_failure@@Base+0x948>
   15cbc:	ldr	r6, [r4, #28]
   15cc0:	ldr	r3, [sl, #28]
   15cc4:	ldr	r2, [sl, #24]
   15cc8:	sub	r3, r3, r2
   15ccc:	ldr	r2, [sl, #16]
   15cd0:	cmp	r3, r2
   15cd4:	bhi	15c10 <argp_failure@@Base+0x798>
   15cd8:	ldr	r7, [sl, #12]
   15cdc:	str	r6, [sl, #12]
   15ce0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ce4:	str	r3, [fp, #-76]	; 0xffffffb4
   15ce8:	cmp	r5, #0
   15cec:	ldr	r3, [fp, #4]
   15cf0:	ldrne	r2, [pc, #2128]	; 16548 <argp_failure@@Base+0x10d0>
   15cf4:	ldreq	r2, [pc, #2128]	; 1654c <argp_failure@@Base+0x10d4>
   15cf8:	mov	r1, r9
   15cfc:	mov	r0, sl
   15d00:	bl	17d14 <argp_error@@Base+0x1420>
   15d04:	ldr	r6, [r4, #28]
   15d08:	ldr	r3, [sl, #28]
   15d0c:	ldr	r2, [sl, #24]
   15d10:	sub	r3, r3, r2
   15d14:	ldr	r2, [sl, #16]
   15d18:	cmp	r3, r2
   15d1c:	bhi	15c1c <argp_failure@@Base+0x7a4>
   15d20:	ldr	r5, [sl, #4]
   15d24:	str	r6, [sl, #4]
   15d28:	tst	r8, #2
   15d2c:	beq	15c28 <argp_failure@@Base+0x7b0>
   15d30:	ldr	r3, [fp, #-108]	; 0xffffff94
   15d34:	ldr	r3, [r3, #4]
   15d38:	cmp	r3, #0
   15d3c:	beq	15c38 <argp_failure@@Base+0x7c0>
   15d40:	ldr	r3, [sl, #28]
   15d44:	add	r3, r3, #12
   15d48:	ldr	r2, [sl, #32]
   15d4c:	cmp	r2, r3
   15d50:	bcs	15d68 <argp_failure@@Base+0x8f0>
   15d54:	mov	r1, #12
   15d58:	mov	r0, sl
   15d5c:	bl	17c24 <argp_error@@Base+0x1330>
   15d60:	cmp	r0, #0
   15d64:	beq	15c38 <argp_failure@@Base+0x7c0>
   15d68:	ldr	ip, [sl, #28]
   15d6c:	ldr	r3, [pc, #2012]	; 16550 <argp_failure@@Base+0x10d8>
   15d70:	ldm	r3!, {r0, r1, r2}
   15d74:	str	r0, [ip]
   15d78:	str	r1, [ip, #4]
   15d7c:	str	r2, [ip, #8]
   15d80:	ldr	r3, [sl, #28]
   15d84:	add	r3, r3, #12
   15d88:	str	r3, [sl, #28]
   15d8c:	b	15c38 <argp_failure@@Base+0x7c0>
   15d90:	mov	r0, sl
   15d94:	bl	17680 <argp_error@@Base+0xd8c>
   15d98:	b	15c6c <argp_failure@@Base+0x7f4>
   15d9c:	mov	r0, sl
   15da0:	bl	17680 <argp_error@@Base+0xd8c>
   15da4:	b	15c88 <argp_failure@@Base+0x810>
   15da8:	mov	r1, #1
   15dac:	mov	r0, sl
   15db0:	bl	17c24 <argp_error@@Base+0x1330>
   15db4:	cmp	r0, #0
   15db8:	beq	15cb0 <argp_failure@@Base+0x838>
   15dbc:	b	15c9c <argp_failure@@Base+0x824>
   15dc0:	str	r8, [fp, #-104]	; 0xffffff98
   15dc4:	mov	r4, #1
   15dc8:	b	15704 <argp_failure@@Base+0x28c>
   15dcc:	str	sl, [sp, #4]
   15dd0:	mov	r3, #1
   15dd4:	str	r3, [sp]
   15dd8:	mov	r3, #0
   15ddc:	mov	r2, r3
   15de0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15de4:	ldr	r0, [fp, #-112]	; 0xffffff90
   15de8:	bl	14534 <argp_parse@@Base+0x1ecc>
   15dec:	orr	r4, r4, r0
   15df0:	b	15710 <argp_failure@@Base+0x298>
   15df4:	ldr	r3, [fp, #4]
   15df8:	mov	r2, r3
   15dfc:	ldr	r1, [pc, #1872]	; 16554 <argp_failure@@Base+0x10dc>
   15e00:	mov	r0, sl
   15e04:	bl	17d14 <argp_error@@Base+0x1420>
   15e08:	mov	r4, #1
   15e0c:	b	1571c <argp_failure@@Base+0x2a4>
   15e10:	mov	r1, #1
   15e14:	mov	r0, sl
   15e18:	bl	17c24 <argp_error@@Base+0x1330>
   15e1c:	cmp	r0, #0
   15e20:	beq	15764 <argp_failure@@Base+0x2ec>
   15e24:	b	15750 <argp_failure@@Base+0x2d8>
   15e28:	mov	r0, sl
   15e2c:	bl	17680 <argp_error@@Base+0xd8c>
   15e30:	b	1621c <argp_failure@@Base+0xda4>
   15e34:	add	r3, r3, #24
   15e38:	subs	r2, r2, #1
   15e3c:	beq	15e60 <argp_failure@@Base+0x9e8>
   15e40:	ldr	r1, [r3, #-24]	; 0xffffffe8
   15e44:	cmp	r1, #0
   15e48:	beq	15e34 <argp_failure@@Base+0x9bc>
   15e4c:	ldr	r1, [r3, #-12]
   15e50:	tst	r1, #2
   15e54:	bne	15e34 <argp_failure@@Base+0x9bc>
   15e58:	mov	r3, #1
   15e5c:	str	r3, [fp, #-116]	; 0xffffff8c
   15e60:	ldr	r3, [pc, #1800]	; 16570 <argp_failure@@Base+0x10f8>
   15e64:	ldr	r4, [r3, #8]
   15e68:	ldr	r3, [sl, #28]
   15e6c:	ldr	r2, [sl, #24]
   15e70:	sub	r3, r3, r2
   15e74:	ldr	r2, [sl, #16]
   15e78:	cmp	r3, r2
   15e7c:	bhi	15e9c <argp_failure@@Base+0xa24>
   15e80:	str	r4, [sl, #12]
   15e84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15e88:	ldr	r5, [r3, #4]
   15e8c:	cmp	r5, #0
   15e90:	beq	15f98 <argp_failure@@Base+0xb20>
   15e94:	mov	r4, r8
   15e98:	b	167dc <argp_failure@@Base+0x1364>
   15e9c:	mov	r0, sl
   15ea0:	bl	17680 <argp_error@@Base+0xd8c>
   15ea4:	b	15e80 <argp_failure@@Base+0xa08>
   15ea8:	tst	r6, #2
   15eac:	beq	15eb8 <argp_failure@@Base+0xa40>
   15eb0:	add	r9, r9, #1
   15eb4:	b	167d0 <argp_failure@@Base+0x1358>
   15eb8:	sub	r1, fp, #76	; 0x4c
   15ebc:	ldr	r3, [pc, #1708]	; 16570 <argp_failure@@Base+0x10f8>
   15ec0:	ldr	r0, [r3, #8]
   15ec4:	bl	143b0 <argp_parse@@Base+0x1d48>
   15ec8:	ldr	r2, [sl, #28]
   15ecc:	ldr	r3, [sl, #32]
   15ed0:	cmp	r2, r3
   15ed4:	bcs	15f54 <argp_failure@@Base+0xadc>
   15ed8:	ldr	r3, [sl, #28]
   15edc:	add	r2, r3, #1
   15ee0:	str	r2, [sl, #28]
   15ee4:	mov	r2, #45	; 0x2d
   15ee8:	strb	r2, [r3]
   15eec:	ldrb	r6, [r9]
   15ef0:	ldr	r2, [sl, #28]
   15ef4:	ldr	r3, [sl, #32]
   15ef8:	cmp	r2, r3
   15efc:	bcs	15f6c <argp_failure@@Base+0xaf4>
   15f00:	ldr	r3, [sl, #28]
   15f04:	add	r2, r3, #1
   15f08:	str	r2, [sl, #28]
   15f0c:	strb	r6, [r3]
   15f10:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15f14:	cmp	r3, #0
   15f18:	beq	15f2c <argp_failure@@Base+0xab4>
   15f1c:	ldr	r3, [pc, #1612]	; 16570 <argp_failure@@Base+0x10f8>
   15f20:	ldr	r3, [r3]
   15f24:	cmp	r3, #0
   15f28:	beq	15f84 <argp_failure@@Base+0xb0c>
   15f2c:	ldr	r2, [r8, #8]
   15f30:	cmp	r2, #0
   15f34:	beq	15eb0 <argp_failure@@Base+0xa38>
   15f38:	ldr	r3, [r8, #12]
   15f3c:	tst	r3, #1
   15f40:	ldrne	r1, [pc, #1552]	; 16558 <argp_failure@@Base+0x10e0>
   15f44:	ldreq	r1, [pc, #1552]	; 1655c <argp_failure@@Base+0x10e4>
   15f48:	mov	r0, sl
   15f4c:	bl	17d14 <argp_error@@Base+0x1420>
   15f50:	b	15eb0 <argp_failure@@Base+0xa38>
   15f54:	mov	r1, #1
   15f58:	mov	r0, sl
   15f5c:	bl	17c24 <argp_error@@Base+0x1330>
   15f60:	cmp	r0, #0
   15f64:	beq	15eec <argp_failure@@Base+0xa74>
   15f68:	b	15ed8 <argp_failure@@Base+0xa60>
   15f6c:	mov	r1, #1
   15f70:	mov	r0, sl
   15f74:	bl	17c24 <argp_error@@Base+0x1330>
   15f78:	cmp	r0, #0
   15f7c:	beq	15f10 <argp_failure@@Base+0xa98>
   15f80:	b	15f00 <argp_failure@@Base+0xa88>
   15f84:	ldr	r3, [r8, #8]
   15f88:	cmp	r3, #0
   15f8c:	movne	r3, #1
   15f90:	strne	r3, [fp, #-80]	; 0xffffffb0
   15f94:	b	15eb0 <argp_failure@@Base+0xa38>
   15f98:	ldr	r3, [r8, #12]
   15f9c:	tst	r3, #8
   15fa0:	beq	1607c <argp_failure@@Base+0xc04>
   15fa4:	ldr	r3, [pc, #1476]	; 16570 <argp_failure@@Base+0x10f8>
   15fa8:	ldr	r4, [r3, #16]
   15fac:	ldr	r3, [sl, #28]
   15fb0:	ldr	r2, [sl, #24]
   15fb4:	sub	r3, r3, r2
   15fb8:	ldr	r2, [sl, #16]
   15fbc:	cmp	r3, r2
   15fc0:	bhi	15fe0 <argp_failure@@Base+0xb68>
   15fc4:	str	r4, [sl, #12]
   15fc8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15fcc:	ldr	r5, [r3, #4]
   15fd0:	cmp	r5, #0
   15fd4:	beq	16130 <argp_failure@@Base+0xcb8>
   15fd8:	add	r4, r8, #24
   15fdc:	b	16014 <argp_failure@@Base+0xb9c>
   15fe0:	mov	r0, sl
   15fe4:	bl	17680 <argp_error@@Base+0xd8c>
   15fe8:	b	15fc4 <argp_failure@@Base+0xb4c>
   15fec:	mov	r2, r6
   15ff0:	mov	r1, r7
   15ff4:	ldr	r0, [sl, #28]
   15ff8:	bl	1106c <memcpy@plt>
   15ffc:	ldr	r3, [sl, #28]
   16000:	add	r6, r3, r6
   16004:	str	r6, [sl, #28]
   16008:	add	r4, r4, #24
   1600c:	subs	r5, r5, #1
   16010:	beq	16130 <argp_failure@@Base+0xcb8>
   16014:	ldr	r3, [r4, #-24]	; 0xffffffe8
   16018:	cmp	r3, #0
   1601c:	beq	16008 <argp_failure@@Base+0xb90>
   16020:	ldr	r3, [r4, #-12]
   16024:	tst	r3, #2
   16028:	bne	16008 <argp_failure@@Base+0xb90>
   1602c:	sub	r1, fp, #76	; 0x4c
   16030:	ldr	r3, [pc, #1336]	; 16570 <argp_failure@@Base+0x10f8>
   16034:	ldr	r0, [r3, #16]
   16038:	bl	143b0 <argp_parse@@Base+0x1d48>
   1603c:	ldr	r7, [r4, #-24]	; 0xffffffe8
   16040:	mov	r0, r7
   16044:	bl	11168 <strlen@plt>
   16048:	subs	r6, r0, #0
   1604c:	beq	16008 <argp_failure@@Base+0xb90>
   16050:	ldr	r3, [sl, #28]
   16054:	add	r3, r3, r6
   16058:	ldr	r2, [sl, #32]
   1605c:	cmp	r2, r3
   16060:	bcs	15fec <argp_failure@@Base+0xb74>
   16064:	mov	r1, r6
   16068:	mov	r0, sl
   1606c:	bl	17c24 <argp_error@@Base+0x1330>
   16070:	cmp	r0, #0
   16074:	beq	16008 <argp_failure@@Base+0xb90>
   16078:	b	15fec <argp_failure@@Base+0xb74>
   1607c:	ldr	r3, [pc, #1260]	; 16570 <argp_failure@@Base+0x10f8>
   16080:	ldr	r4, [r3, #12]
   16084:	ldr	r3, [sl, #28]
   16088:	ldr	r2, [sl, #24]
   1608c:	sub	r3, r3, r2
   16090:	ldr	r2, [sl, #16]
   16094:	cmp	r3, r2
   16098:	bhi	160b8 <argp_failure@@Base+0xc40>
   1609c:	str	r4, [sl, #12]
   160a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   160a4:	ldr	r5, [r3, #4]
   160a8:	cmp	r5, #0
   160ac:	beq	16130 <argp_failure@@Base+0xcb8>
   160b0:	add	r4, r8, #24
   160b4:	b	160d0 <argp_failure@@Base+0xc58>
   160b8:	mov	r0, sl
   160bc:	bl	17680 <argp_error@@Base+0xd8c>
   160c0:	b	1609c <argp_failure@@Base+0xc24>
   160c4:	add	r4, r4, #24
   160c8:	subs	r5, r5, #1
   160cc:	beq	16130 <argp_failure@@Base+0xcb8>
   160d0:	ldr	r3, [r4, #-24]	; 0xffffffe8
   160d4:	cmp	r3, #0
   160d8:	beq	160c4 <argp_failure@@Base+0xc4c>
   160dc:	ldr	r3, [r4, #-12]
   160e0:	tst	r3, #2
   160e4:	bne	160c4 <argp_failure@@Base+0xc4c>
   160e8:	sub	r1, fp, #76	; 0x4c
   160ec:	ldr	r3, [pc, #1148]	; 16570 <argp_failure@@Base+0x10f8>
   160f0:	ldr	r0, [r3, #12]
   160f4:	bl	143b0 <argp_parse@@Base+0x1d48>
   160f8:	ldr	r2, [r4, #-24]	; 0xffffffe8
   160fc:	ldr	r1, [pc, #1116]	; 16560 <argp_failure@@Base+0x10e8>
   16100:	mov	r0, sl
   16104:	bl	17d14 <argp_error@@Base+0x1420>
   16108:	ldr	r2, [r8, #8]
   1610c:	cmp	r2, #0
   16110:	beq	160c4 <argp_failure@@Base+0xc4c>
   16114:	ldr	r3, [r8, #12]
   16118:	tst	r3, #1
   1611c:	ldrne	r1, [pc, #1088]	; 16564 <argp_failure@@Base+0x10ec>
   16120:	ldreq	r1, [pc, #1088]	; 16568 <argp_failure@@Base+0x10f0>
   16124:	mov	r0, sl
   16128:	bl	17d14 <argp_error@@Base+0x1420>
   1612c:	b	160c4 <argp_failure@@Base+0xc4c>
   16130:	ldr	r3, [sl, #28]
   16134:	ldr	r2, [sl, #24]
   16138:	sub	r3, r3, r2
   1613c:	ldr	r2, [sl, #16]
   16140:	cmp	r3, r2
   16144:	bhi	16284 <argp_failure@@Base+0xe0c>
   16148:	mov	r3, #0
   1614c:	str	r3, [sl, #4]
   16150:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16154:	cmp	r3, #0
   16158:	beq	162a8 <argp_failure@@Base+0xe30>
   1615c:	ldr	r3, [r8, #12]
   16160:	tst	r3, #8
   16164:	bne	16190 <argp_failure@@Base+0xd18>
   16168:	ldr	r4, [r8, #4]
   1616c:	sub	r3, r4, #1
   16170:	cmp	r3, #254	; 0xfe
   16174:	bhi	16190 <argp_failure@@Base+0xd18>
   16178:	bl	11150 <__ctype_b_loc@plt>
   1617c:	ldr	r3, [r0]
   16180:	lsl	r4, r4, #1
   16184:	ldrh	r3, [r3, r4]
   16188:	tst	r3, #16384	; 0x4000
   1618c:	bne	1619c <argp_failure@@Base+0xd24>
   16190:	ldr	r3, [r8]
   16194:	cmp	r3, #0
   16198:	beq	16290 <argp_failure@@Base+0xe18>
   1619c:	ldr	r3, [sl, #28]
   161a0:	ldr	r2, [sl, #24]
   161a4:	sub	r3, r3, r2
   161a8:	ldr	r2, [sl, #16]
   161ac:	cmp	r3, r2
   161b0:	bhi	16500 <argp_failure@@Base+0x1088>
   161b4:	ldr	r3, [fp, #-124]	; 0xffffff84
   161b8:	str	r3, [sl, #4]
   161bc:	ldr	r3, [sl, #28]
   161c0:	ldr	r2, [sl, #24]
   161c4:	sub	r3, r3, r2
   161c8:	ldr	r2, [sl, #16]
   161cc:	cmp	r3, r2
   161d0:	bhi	1650c <argp_failure@@Base+0x1094>
   161d4:	ldr	r3, [fp, #-128]	; 0xffffff80
   161d8:	str	r3, [sl, #12]
   161dc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   161e0:	add	r3, r3, #28
   161e4:	str	r3, [fp, #-96]	; 0xffffffa0
   161e8:	ldr	r3, [fp, #-120]	; 0xffffff88
   161ec:	subs	r3, r3, #1
   161f0:	str	r3, [fp, #-120]	; 0xffffff88
   161f4:	beq	16584 <argp_failure@@Base+0x110c>
   161f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   161fc:	ldr	r8, [r3]
   16200:	ldr	r9, [r3, #8]
   16204:	ldr	r3, [sl, #28]
   16208:	ldr	r2, [sl, #24]
   1620c:	sub	r3, r3, r2
   16210:	ldr	r2, [sl, #16]
   16214:	cmp	r3, r2
   16218:	bhi	15e28 <argp_failure@@Base+0x9b0>
   1621c:	ldr	r3, [sl, #4]
   16220:	str	r3, [fp, #-124]	; 0xffffff84
   16224:	mov	r3, #0
   16228:	str	r3, [sl, #4]
   1622c:	ldr	r3, [sl, #12]
   16230:	str	r3, [fp, #-128]	; 0xffffff80
   16234:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16238:	str	r2, [fp, #-76]	; 0xffffffb4
   1623c:	str	sl, [fp, #-72]	; 0xffffffb8
   16240:	sub	r3, fp, #88	; 0x58
   16244:	str	r3, [fp, #-68]	; 0xffffffbc
   16248:	mov	r3, #1
   1624c:	str	r3, [fp, #-64]	; 0xffffffc0
   16250:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16254:	str	r3, [fp, #-60]	; 0xffffffc4
   16258:	ldr	r3, [r8, #12]
   1625c:	ands	r3, r3, #8
   16260:	str	r3, [fp, #-116]	; 0xffffff8c
   16264:	movne	r3, #0
   16268:	strne	r3, [fp, #-116]	; 0xffffff8c
   1626c:	bne	15e60 <argp_failure@@Base+0x9e8>
   16270:	ldr	r2, [r2, #4]
   16274:	cmp	r2, #0
   16278:	beq	15e60 <argp_failure@@Base+0x9e8>
   1627c:	add	r3, r8, #24
   16280:	b	15e40 <argp_failure@@Base+0x9c8>
   16284:	mov	r0, sl
   16288:	bl	17680 <argp_error@@Base+0xd8c>
   1628c:	b	16148 <argp_failure@@Base+0xcd0>
   16290:	sub	r2, fp, #76	; 0x4c
   16294:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16298:	ldr	r1, [r3, #20]
   1629c:	ldr	r0, [r8, #16]
   162a0:	bl	141cc <argp_parse@@Base+0x1b64>
   162a4:	b	16400 <argp_failure@@Base+0xf88>
   162a8:	ldr	r7, [r8, #16]
   162ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   162b0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   162b4:	ldr	r2, [r2, #20]
   162b8:	ldr	r1, [r8, #4]
   162bc:	mov	r0, r7
   162c0:	bl	13f98 <argp_parse@@Base+0x1930>
   162c4:	subs	r4, r0, #0
   162c8:	beq	163bc <argp_failure@@Base+0xf44>
   162cc:	ldrb	r3, [r4]
   162d0:	cmp	r3, #0
   162d4:	beq	163b4 <argp_failure@@Base+0xf3c>
   162d8:	ldr	r3, [sl, #28]
   162dc:	ldr	r2, [sl, #24]
   162e0:	sub	r3, r3, r2
   162e4:	ldr	r2, [sl, #16]
   162e8:	cmp	r3, r2
   162ec:	bhi	1640c <argp_failure@@Base+0xf94>
   162f0:	ldr	r5, [sl, #20]
   162f4:	bic	r5, r5, r5, asr #31
   162f8:	ldr	r3, [pc, #624]	; 16570 <argp_failure@@Base+0x10f8>
   162fc:	ldr	r6, [r3, #20]
   16300:	str	r6, [sl, #4]
   16304:	ldr	r3, [pc, #612]	; 16570 <argp_failure@@Base+0x10f8>
   16308:	ldr	r6, [r3, #20]
   1630c:	ldr	r3, [sl, #28]
   16310:	ldr	r2, [sl, #24]
   16314:	sub	r3, r3, r2
   16318:	ldr	r2, [sl, #16]
   1631c:	cmp	r3, r2
   16320:	bhi	16448 <argp_failure@@Base+0xfd0>
   16324:	str	r6, [sl, #12]
   16328:	ldr	r3, [pc, #576]	; 16570 <argp_failure@@Base+0x10f8>
   1632c:	ldr	r1, [r3, #20]
   16330:	add	r3, r1, #3
   16334:	cmp	r3, r5
   16338:	bcs	1646c <argp_failure@@Base+0xff4>
   1633c:	ldr	r2, [sl, #28]
   16340:	ldr	r3, [sl, #32]
   16344:	cmp	r2, r3
   16348:	bcs	16454 <argp_failure@@Base+0xfdc>
   1634c:	ldr	r3, [sl, #28]
   16350:	add	r2, r3, #1
   16354:	str	r2, [sl, #28]
   16358:	mov	r2, #10
   1635c:	strb	r2, [r3]
   16360:	mov	r0, r4
   16364:	bl	11168 <strlen@plt>
   16368:	subs	r5, r0, #0
   1636c:	beq	163b4 <argp_failure@@Base+0xf3c>
   16370:	ldr	r3, [sl, #28]
   16374:	add	r3, r3, r5
   16378:	ldr	r2, [sl, #32]
   1637c:	cmp	r2, r3
   16380:	bcs	16398 <argp_failure@@Base+0xf20>
   16384:	mov	r1, r5
   16388:	mov	r0, sl
   1638c:	bl	17c24 <argp_error@@Base+0x1330>
   16390:	cmp	r0, #0
   16394:	beq	163b4 <argp_failure@@Base+0xf3c>
   16398:	mov	r2, r5
   1639c:	mov	r1, r4
   163a0:	ldr	r0, [sl, #28]
   163a4:	bl	1106c <memcpy@plt>
   163a8:	ldr	r3, [sl, #28]
   163ac:	add	r5, r3, r5
   163b0:	str	r5, [sl, #28]
   163b4:	cmp	r7, r4
   163b8:	bne	164d0 <argp_failure@@Base+0x1058>
   163bc:	ldr	r3, [sl, #28]
   163c0:	ldr	r2, [sl, #24]
   163c4:	sub	r3, r3, r2
   163c8:	ldr	r2, [sl, #16]
   163cc:	cmp	r3, r2
   163d0:	bhi	164dc <argp_failure@@Base+0x1064>
   163d4:	mov	r3, #0
   163d8:	str	r3, [sl, #4]
   163dc:	ldr	r2, [sl, #28]
   163e0:	ldr	r3, [sl, #32]
   163e4:	cmp	r2, r3
   163e8:	bcs	164e8 <argp_failure@@Base+0x1070>
   163ec:	ldr	r3, [sl, #28]
   163f0:	add	r2, r3, #1
   163f4:	str	r2, [sl, #28]
   163f8:	mov	r2, #10
   163fc:	strb	r2, [r3]
   16400:	ldr	r3, [fp, #-96]	; 0xffffffa0
   16404:	str	r3, [fp, #-88]	; 0xffffffa8
   16408:	b	1619c <argp_failure@@Base+0xd24>
   1640c:	mov	r0, sl
   16410:	bl	17680 <argp_error@@Base+0xd8c>
   16414:	ldr	r5, [sl, #20]
   16418:	bic	r5, r5, r5, asr #31
   1641c:	ldr	r3, [pc, #332]	; 16570 <argp_failure@@Base+0x10f8>
   16420:	ldr	r6, [r3, #20]
   16424:	ldr	r3, [sl, #28]
   16428:	ldr	r2, [sl, #24]
   1642c:	sub	r3, r3, r2
   16430:	ldr	r2, [sl, #16]
   16434:	cmp	r3, r2
   16438:	bls	16300 <argp_failure@@Base+0xe88>
   1643c:	mov	r0, sl
   16440:	bl	17680 <argp_error@@Base+0xd8c>
   16444:	b	16300 <argp_failure@@Base+0xe88>
   16448:	mov	r0, sl
   1644c:	bl	17680 <argp_error@@Base+0xd8c>
   16450:	b	16324 <argp_failure@@Base+0xeac>
   16454:	mov	r1, #1
   16458:	mov	r0, sl
   1645c:	bl	17c24 <argp_error@@Base+0x1330>
   16460:	cmp	r0, #0
   16464:	beq	16360 <argp_failure@@Base+0xee8>
   16468:	b	1634c <argp_failure@@Base+0xed4>
   1646c:	cmp	r1, r5
   16470:	bhi	164c4 <argp_failure@@Base+0x104c>
   16474:	ldr	r3, [sl, #28]
   16478:	add	r3, r3, #3
   1647c:	ldr	r2, [sl, #32]
   16480:	cmp	r2, r3
   16484:	bcs	1649c <argp_failure@@Base+0x1024>
   16488:	mov	r1, #3
   1648c:	mov	r0, sl
   16490:	bl	17c24 <argp_error@@Base+0x1330>
   16494:	cmp	r0, #0
   16498:	beq	16360 <argp_failure@@Base+0xee8>
   1649c:	ldr	r3, [sl, #28]
   164a0:	ldr	r2, [pc, #196]	; 1656c <argp_failure@@Base+0x10f4>
   164a4:	ldrh	r1, [r2]
   164a8:	ldrb	r2, [r2, #2]
   164ac:	strh	r1, [r3]
   164b0:	strb	r2, [r3, #2]
   164b4:	ldr	r3, [sl, #28]
   164b8:	add	r3, r3, #3
   164bc:	str	r3, [sl, #28]
   164c0:	b	16360 <argp_failure@@Base+0xee8>
   164c4:	mov	r0, sl
   164c8:	bl	13db4 <argp_parse@@Base+0x174c>
   164cc:	b	16360 <argp_failure@@Base+0xee8>
   164d0:	mov	r0, r4
   164d4:	bl	1325c <argp_parse@@Base+0xbf4>
   164d8:	b	163bc <argp_failure@@Base+0xf44>
   164dc:	mov	r0, sl
   164e0:	bl	17680 <argp_error@@Base+0xd8c>
   164e4:	b	163d4 <argp_failure@@Base+0xf5c>
   164e8:	mov	r1, #1
   164ec:	mov	r0, sl
   164f0:	bl	17c24 <argp_error@@Base+0x1330>
   164f4:	cmp	r0, #0
   164f8:	beq	16400 <argp_failure@@Base+0xf88>
   164fc:	b	163ec <argp_failure@@Base+0xf74>
   16500:	mov	r0, sl
   16504:	bl	17680 <argp_error@@Base+0xd8c>
   16508:	b	161b4 <argp_failure@@Base+0xd3c>
   1650c:	mov	r0, sl
   16510:	bl	17680 <argp_error@@Base+0xd8c>
   16514:	b	161d4 <argp_failure@@Base+0xd5c>
   16518:	muleq	r1, r8, r9
   1651c:	andeq	r8, r1, r0, asr #15
   16520:	andeq	r8, r1, r8, lsr #19
   16524:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   16528:	andeq	r8, r1, r0, lsl #20
   1652c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   16530:	andeq	r8, r1, r4, asr sl
   16534:	andeq	r8, r1, r0, lsr #20
   16538:	andeq	r8, r1, r0, ror r3
   1653c:	andeq	r8, r1, r0, asr r3
   16540:	andeq	r4, r1, ip, asr #21
   16544:	andeq	r8, r1, r4, ror #20
   16548:	andeq	r8, r1, ip, asr sl
   1654c:	andeq	r8, r1, ip, ror #20
   16550:	andeq	r8, r1, r4, ror sl
   16554:	andeq	r8, r1, r4, lsl #21
   16558:			; <UNDEFINED> instruction: 0x00018abc
   1655c:	andeq	r8, r1, r0, lsr #6
   16560:	andeq	r8, r1, r4, asr #21
   16564:	andeq	r8, r1, ip, asr #21
   16568:	ldrdeq	r8, [r1], -r4
   1656c:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   16570:	andeq	r9, r2, r0, lsr r2
   16574:	andeq	r0, r0, #5
   16578:	ldrdeq	r8, [r1], -ip
   1657c:	andeq	r9, r2, r0, asr #5
   16580:	andeq	r8, r1, r0, asr fp
   16584:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16588:	cmp	r3, #0
   1658c:	beq	1667c <argp_failure@@Base+0x1204>
   16590:	ldr	r3, [pc, #-40]	; 16570 <argp_failure@@Base+0x10f8>
   16594:	ldr	r3, [r3, #4]
   16598:	cmp	r3, #0
   1659c:	beq	1667c <argp_failure@@Base+0x1204>
   165a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   165a4:	cmp	r3, #0
   165a8:	ldrne	r2, [r3]
   165ac:	moveq	r2, #0
   165b0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   165b4:	ldr	r1, [pc, #-72]	; 16574 <argp_failure@@Base+0x10fc>
   165b8:	ldr	r0, [pc, #-72]	; 16578 <argp_failure@@Base+0x1100>
   165bc:	bl	13f98 <argp_parse@@Base+0x1930>
   165c0:	subs	r4, r0, #0
   165c4:	beq	1667c <argp_failure@@Base+0x1204>
   165c8:	ldrb	r3, [r4]
   165cc:	cmp	r3, #0
   165d0:	beq	16670 <argp_failure@@Base+0x11f8>
   165d4:	ldr	r2, [sl, #28]
   165d8:	ldr	r3, [sl, #32]
   165dc:	cmp	r2, r3
   165e0:	bcs	16714 <argp_failure@@Base+0x129c>
   165e4:	ldr	r3, [sl, #28]
   165e8:	add	r2, r3, #1
   165ec:	str	r2, [sl, #28]
   165f0:	mov	r2, #10
   165f4:	strb	r2, [r3]
   165f8:	mov	r0, r4
   165fc:	bl	11168 <strlen@plt>
   16600:	subs	r5, r0, #0
   16604:	beq	1664c <argp_failure@@Base+0x11d4>
   16608:	ldr	r3, [sl, #28]
   1660c:	add	r3, r3, r5
   16610:	ldr	r2, [sl, #32]
   16614:	cmp	r2, r3
   16618:	bcs	16630 <argp_failure@@Base+0x11b8>
   1661c:	mov	r1, r5
   16620:	mov	r0, sl
   16624:	bl	17c24 <argp_error@@Base+0x1330>
   16628:	cmp	r0, #0
   1662c:	beq	1664c <argp_failure@@Base+0x11d4>
   16630:	mov	r2, r5
   16634:	mov	r1, r4
   16638:	ldr	r0, [sl, #28]
   1663c:	bl	1106c <memcpy@plt>
   16640:	ldr	r3, [sl, #28]
   16644:	add	r5, r3, r5
   16648:	str	r5, [sl, #28]
   1664c:	ldr	r2, [sl, #28]
   16650:	ldr	r3, [sl, #32]
   16654:	cmp	r2, r3
   16658:	bcs	1672c <argp_failure@@Base+0x12b4>
   1665c:	ldr	r3, [sl, #28]
   16660:	add	r2, r3, #1
   16664:	str	r2, [sl, #28]
   16668:	mov	r2, #10
   1666c:	strb	r2, [r3]
   16670:	ldr	r3, [pc, #-256]	; 16578 <argp_failure@@Base+0x1100>
   16674:	cmp	r4, r3
   16678:	bne	16744 <argp_failure@@Base+0x12cc>
   1667c:	mov	r4, #1
   16680:	ldr	r3, [fp, #-104]	; 0xffffff98
   16684:	tst	r3, #32
   16688:	bne	16750 <argp_failure@@Base+0x12d8>
   1668c:	ldr	r3, [fp, #-104]	; 0xffffff98
   16690:	tst	r3, #64	; 0x40
   16694:	beq	166e8 <argp_failure@@Base+0x1270>
   16698:	ldr	r3, [pc, #-292]	; 1657c <argp_failure@@Base+0x1104>
   1669c:	ldr	r3, [r3]
   166a0:	cmp	r3, #0
   166a4:	beq	166e8 <argp_failure@@Base+0x1270>
   166a8:	cmp	r4, #0
   166ac:	beq	166d4 <argp_failure@@Base+0x125c>
   166b0:	ldr	r2, [sl, #28]
   166b4:	ldr	r3, [sl, #32]
   166b8:	cmp	r2, r3
   166bc:	bcs	16778 <argp_failure@@Base+0x1300>
   166c0:	ldr	r3, [sl, #28]
   166c4:	add	r2, r3, #1
   166c8:	str	r2, [sl, #28]
   166cc:	mov	r2, #10
   166d0:	strb	r2, [r3]
   166d4:	ldr	r3, [pc, #-352]	; 1657c <argp_failure@@Base+0x1104>
   166d8:	ldr	r2, [r3]
   166dc:	ldr	r1, [pc, #-356]	; 16580 <argp_failure@@Base+0x1108>
   166e0:	mov	r0, sl
   166e4:	bl	17d14 <argp_error@@Base+0x1420>
   166e8:	ldr	r0, [fp, #-132]	; 0xffffff7c
   166ec:	bl	110c0 <funlockfile@plt>
   166f0:	ldr	r3, [fp, #-108]	; 0xffffff94
   166f4:	cmp	r3, #0
   166f8:	beq	16704 <argp_failure@@Base+0x128c>
   166fc:	mov	r0, r3
   16700:	bl	13c70 <argp_parse@@Base+0x1608>
   16704:	mov	r0, sl
   16708:	bl	17be4 <argp_error@@Base+0x12f0>
   1670c:	sub	sp, fp, #32
   16710:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16714:	mov	r1, #1
   16718:	mov	r0, sl
   1671c:	bl	17c24 <argp_error@@Base+0x1330>
   16720:	cmp	r0, #0
   16724:	beq	165f8 <argp_failure@@Base+0x1180>
   16728:	b	165e4 <argp_failure@@Base+0x116c>
   1672c:	mov	r1, #1
   16730:	mov	r0, sl
   16734:	bl	17c24 <argp_error@@Base+0x1330>
   16738:	cmp	r0, #0
   1673c:	beq	16670 <argp_failure@@Base+0x11f8>
   16740:	b	1665c <argp_failure@@Base+0x11e4>
   16744:	mov	r0, r4
   16748:	bl	1325c <argp_parse@@Base+0xbf4>
   1674c:	b	1667c <argp_failure@@Base+0x1204>
   16750:	str	sl, [sp, #4]
   16754:	mov	r3, #0
   16758:	str	r3, [sp]
   1675c:	mov	r3, r4
   16760:	mov	r2, #1
   16764:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16768:	ldr	r0, [fp, #-112]	; 0xffffff90
   1676c:	bl	14534 <argp_parse@@Base+0x1ecc>
   16770:	orr	r4, r4, r0
   16774:	b	1668c <argp_failure@@Base+0x1214>
   16778:	mov	r1, #1
   1677c:	mov	r0, sl
   16780:	bl	17c24 <argp_error@@Base+0x1330>
   16784:	cmp	r0, #0
   16788:	beq	166d4 <argp_failure@@Base+0x125c>
   1678c:	b	166c0 <argp_failure@@Base+0x1248>
   16790:	ldrb	r3, [r5]
   16794:	mov	r4, r5
   16798:	mov	r5, #0
   1679c:	b	15870 <argp_failure@@Base+0x3f8>
   167a0:	mov	r4, r2
   167a4:	b	15884 <argp_failure@@Base+0x40c>
   167a8:	cmp	r0, #110	; 0x6e
   167ac:	beq	158dc <argp_failure@@Base+0x464>
   167b0:	mov	r3, #1
   167b4:	str	r3, [fp, #-96]	; 0xffffffa0
   167b8:	str	r3, [fp, #-116]	; 0xffffff8c
   167bc:	add	r6, sl, #24
   167c0:	b	159d4 <argp_failure@@Base+0x55c>
   167c4:	ldrb	r3, [r9]
   167c8:	cmp	r7, r3
   167cc:	beq	15ea8 <argp_failure@@Base+0xa30>
   167d0:	add	r4, r4, #24
   167d4:	subs	r5, r5, #1
   167d8:	beq	15f98 <argp_failure@@Base+0xb20>
   167dc:	ldr	r6, [r4, #12]
   167e0:	tst	r6, #8
   167e4:	bne	167d0 <argp_failure@@Base+0x1358>
   167e8:	ldr	r7, [r4, #4]
   167ec:	sub	r3, r7, #1
   167f0:	cmp	r3, #254	; 0xfe
   167f4:	bhi	167d0 <argp_failure@@Base+0x1358>
   167f8:	bl	11150 <__ctype_b_loc@plt>
   167fc:	ldr	r2, [r0]
   16800:	lsl	r3, r7, #1
   16804:	ldrh	r3, [r2, r3]
   16808:	tst	r3, #16384	; 0x4000
   1680c:	bne	167c4 <argp_failure@@Base+0x134c>
   16810:	b	167d0 <argp_failure@@Base+0x1358>

00016814 <argp_help@@Base>:
   16814:	push	{lr}		; (str lr, [sp, #-4]!)
   16818:	sub	sp, sp, #12
   1681c:	str	r3, [sp]
   16820:	mov	r3, r2
   16824:	mov	r2, r1
   16828:	mov	r1, #0
   1682c:	bl	15680 <argp_failure@@Base+0x208>
   16830:	add	sp, sp, #12
   16834:	pop	{pc}		; (ldr pc, [sp], #4)

00016838 <argp_state_help@@Base>:
   16838:	push	{r4, r5, lr}
   1683c:	sub	sp, sp, #12
   16840:	mov	r5, r2
   16844:	subs	r4, r0, #0
   16848:	beq	168ac <argp_state_help@@Base+0x74>
   1684c:	ldr	r3, [r4, #16]
   16850:	tst	r3, #2
   16854:	bne	168a4 <argp_state_help@@Base+0x6c>
   16858:	cmp	r1, #0
   1685c:	beq	168a4 <argp_state_help@@Base+0x6c>
   16860:	ldr	r3, [r4, #16]
   16864:	tst	r3, #64	; 0x40
   16868:	orrne	r5, r5, #128	; 0x80
   1686c:	ldr	r0, [r4]
   16870:	ldr	r3, [r4, #40]	; 0x28
   16874:	str	r3, [sp]
   16878:	mov	r3, r5
   1687c:	mov	r2, r1
   16880:	mov	r1, r4
   16884:	bl	15680 <argp_failure@@Base+0x208>
   16888:	ldr	r3, [r4, #16]
   1688c:	tst	r3, #32
   16890:	bne	168a4 <argp_state_help@@Base+0x6c>
   16894:	tst	r5, #256	; 0x100
   16898:	bne	168d8 <argp_state_help@@Base+0xa0>
   1689c:	tst	r5, #512	; 0x200
   168a0:	bne	168e4 <argp_state_help@@Base+0xac>
   168a4:	add	sp, sp, #12
   168a8:	pop	{r4, r5, pc}
   168ac:	cmp	r1, #0
   168b0:	beq	168a4 <argp_state_help@@Base+0x6c>
   168b4:	ldr	r3, [pc, #48]	; 168ec <argp_state_help@@Base+0xb4>
   168b8:	ldr	r3, [r3]
   168bc:	str	r3, [sp]
   168c0:	mov	r3, r2
   168c4:	mov	r2, r1
   168c8:	mov	r1, #0
   168cc:	mov	r0, r1
   168d0:	bl	15680 <argp_failure@@Base+0x208>
   168d4:	b	16894 <argp_state_help@@Base+0x5c>
   168d8:	ldr	r3, [pc, #16]	; 168f0 <argp_state_help@@Base+0xb8>
   168dc:	ldr	r0, [r3]
   168e0:	bl	1115c <exit@plt>
   168e4:	mov	r0, #0
   168e8:	bl	1115c <exit@plt>
   168ec:	andeq	r9, r2, r8, ror #4
   168f0:	andeq	r9, r2, r4, ror #4

000168f4 <argp_error@@Base>:
   168f4:	push	{r1, r2, r3}
   168f8:	push	{r4, r5, lr}
   168fc:	sub	sp, sp, #8
   16900:	subs	r5, r0, #0
   16904:	beq	169d4 <argp_error@@Base+0xe0>
   16908:	ldr	r3, [r5, #16]
   1690c:	tst	r3, #2
   16910:	bne	169c4 <argp_error@@Base+0xd0>
   16914:	ldr	r4, [r5, #44]	; 0x2c
   16918:	cmp	r4, #0
   1691c:	beq	169c4 <argp_error@@Base+0xd0>
   16920:	mov	r0, r4
   16924:	bl	11234 <flockfile@plt>
   16928:	add	r3, sp, #24
   1692c:	str	r3, [sp, #4]
   16930:	ldr	r0, [r5, #40]	; 0x28
   16934:	mov	r1, r4
   16938:	bl	10fdc <fputs_unlocked@plt>
   1693c:	ldr	r3, [r4, #20]
   16940:	ldr	r2, [r4, #24]
   16944:	cmp	r3, r2
   16948:	addcc	r2, r3, #1
   1694c:	strcc	r2, [r4, #20]
   16950:	movcc	r2, #58	; 0x3a
   16954:	strbcc	r2, [r3]
   16958:	bcs	16a00 <argp_error@@Base+0x10c>
   1695c:	ldr	r3, [r4, #20]
   16960:	ldr	r2, [r4, #24]
   16964:	cmp	r3, r2
   16968:	addcc	r2, r3, #1
   1696c:	strcc	r2, [r4, #20]
   16970:	movcc	r2, #32
   16974:	strbcc	r2, [r3]
   16978:	bcs	16a10 <argp_error@@Base+0x11c>
   1697c:	ldr	r2, [sp, #4]
   16980:	ldr	r1, [sp, #20]
   16984:	mov	r0, r4
   16988:	bl	11210 <vfprintf@plt>
   1698c:	ldr	r3, [r4, #20]
   16990:	ldr	r2, [r4, #24]
   16994:	cmp	r3, r2
   16998:	addcc	r2, r3, #1
   1699c:	strcc	r2, [r4, #20]
   169a0:	movcc	r2, #10
   169a4:	strbcc	r2, [r3]
   169a8:	bcs	16a20 <argp_error@@Base+0x12c>
   169ac:	mov	r2, #260	; 0x104
   169b0:	mov	r1, r4
   169b4:	mov	r0, r5
   169b8:	bl	16838 <argp_state_help@@Base>
   169bc:	mov	r0, r4
   169c0:	bl	110c0 <funlockfile@plt>
   169c4:	add	sp, sp, #8
   169c8:	pop	{r4, r5, lr}
   169cc:	add	sp, sp, #12
   169d0:	bx	lr
   169d4:	ldr	r3, [pc, #84]	; 16a30 <argp_error@@Base+0x13c>
   169d8:	ldr	r4, [r3]
   169dc:	cmp	r4, #0
   169e0:	beq	169c4 <argp_error@@Base+0xd0>
   169e4:	mov	r0, r4
   169e8:	bl	11234 <flockfile@plt>
   169ec:	add	r3, sp, #24
   169f0:	str	r3, [sp, #4]
   169f4:	ldr	r3, [pc, #56]	; 16a34 <argp_error@@Base+0x140>
   169f8:	ldr	r0, [r3]
   169fc:	b	16934 <argp_error@@Base+0x40>
   16a00:	mov	r1, #58	; 0x3a
   16a04:	mov	r0, r4
   16a08:	bl	111ec <__overflow@plt>
   16a0c:	b	1695c <argp_error@@Base+0x68>
   16a10:	mov	r1, #32
   16a14:	mov	r0, r4
   16a18:	bl	111ec <__overflow@plt>
   16a1c:	b	1697c <argp_error@@Base+0x88>
   16a20:	mov	r1, #10
   16a24:	mov	r0, r4
   16a28:	bl	111ec <__overflow@plt>
   16a2c:	b	169ac <argp_error@@Base+0xb8>
   16a30:	andeq	r9, r2, r0, ror r2
   16a34:	andeq	r9, r2, r8, ror #4
   16a38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16a3c:	ldr	r4, [r1, #28]
   16a40:	ldr	r5, [r1, #32]
   16a44:	ldr	r6, [r1]
   16a48:	add	r7, r0, r5, lsl #2
   16a4c:	b	16a84 <argp_error@@Base+0x190>
   16a50:	cmp	sl, #0
   16a54:	ble	16a80 <argp_error@@Base+0x18c>
   16a58:	add	r2, r0, r4, lsl #2
   16a5c:	sub	r3, r6, sl
   16a60:	add	r3, r0, r3, lsl #2
   16a64:	add	r8, r0, r6, lsl #2
   16a68:	ldr	ip, [r2]
   16a6c:	ldr	lr, [r3]
   16a70:	str	lr, [r2], #4
   16a74:	str	ip, [r3], #4
   16a78:	cmp	r3, r8
   16a7c:	bne	16a68 <argp_error@@Base+0x174>
   16a80:	sub	r6, r6, sl
   16a84:	cmp	r6, r5
   16a88:	movle	r3, #0
   16a8c:	movgt	r3, #1
   16a90:	cmp	r4, r5
   16a94:	movge	r3, #0
   16a98:	cmp	r3, #0
   16a9c:	beq	16ae8 <argp_error@@Base+0x1f4>
   16aa0:	sub	r9, r6, r5
   16aa4:	sub	sl, r5, r4
   16aa8:	cmp	r9, sl
   16aac:	bgt	16a50 <argp_error@@Base+0x15c>
   16ab0:	cmp	r9, #0
   16ab4:	addgt	r3, r0, r4, lsl #2
   16ab8:	addgt	r8, r9, r4
   16abc:	addgt	r8, r0, r8, lsl #2
   16ac0:	movgt	r2, r7
   16ac4:	ble	16ae0 <argp_error@@Base+0x1ec>
   16ac8:	ldr	ip, [r3]
   16acc:	ldr	lr, [r2]
   16ad0:	str	lr, [r3], #4
   16ad4:	str	ip, [r2], #4
   16ad8:	cmp	r3, r8
   16adc:	bne	16ac8 <argp_error@@Base+0x1d4>
   16ae0:	add	r4, r4, r9
   16ae4:	b	16a84 <argp_error@@Base+0x190>
   16ae8:	ldr	r0, [r1]
   16aec:	ldr	r3, [r1, #32]
   16af0:	sub	r2, r0, r3
   16af4:	ldr	r3, [r1, #28]
   16af8:	add	r3, r3, r2
   16afc:	str	r3, [r1, #28]
   16b00:	str	r0, [r1, #32]
   16b04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16b08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b0c:	sub	sp, sp, #44	; 0x2c
   16b10:	str	r0, [sp, #20]
   16b14:	str	r1, [sp, #12]
   16b18:	str	r2, [sp, #24]
   16b1c:	str	r3, [sp, #8]
   16b20:	ldr	fp, [sp, #88]	; 0x58
   16b24:	ldr	sl, [fp, #20]
   16b28:	ldrb	r3, [sl]
   16b2c:	cmp	r3, #0
   16b30:	cmpne	r3, #61	; 0x3d
   16b34:	beq	16b70 <argp_error@@Base+0x27c>
   16b38:	mov	r8, sl
   16b3c:	ldrb	r3, [r8, #1]!
   16b40:	cmp	r3, #0
   16b44:	cmpne	r3, #61	; 0x3d
   16b48:	bne	16b3c <argp_error@@Base+0x248>
   16b4c:	sub	r7, r8, sl
   16b50:	ldr	r5, [sp, #8]
   16b54:	ldr	r3, [r5]
   16b58:	str	r3, [sp, #16]
   16b5c:	cmp	r3, #0
   16b60:	beq	16e64 <argp_error@@Base+0x570>
   16b64:	mov	r4, r3
   16b68:	mov	r6, #0
   16b6c:	b	16b88 <argp_error@@Base+0x294>
   16b70:	mov	r8, sl
   16b74:	b	16b4c <argp_error@@Base+0x258>
   16b78:	add	r6, r6, #1
   16b7c:	ldr	r4, [r5, #16]!
   16b80:	cmp	r4, #0
   16b84:	beq	16bc0 <argp_error@@Base+0x2cc>
   16b88:	mov	r9, r5
   16b8c:	mov	r2, r7
   16b90:	mov	r1, sl
   16b94:	mov	r0, r4
   16b98:	bl	11288 <strncmp@plt>
   16b9c:	cmp	r0, #0
   16ba0:	bne	16b78 <argp_error@@Base+0x284>
   16ba4:	mov	r0, r4
   16ba8:	bl	11168 <strlen@plt>
   16bac:	cmp	r7, r0
   16bb0:	bne	16b78 <argp_error@@Base+0x284>
   16bb4:	cmp	r5, #0
   16bb8:	strne	r6, [sp, #28]
   16bbc:	bne	16e14 <argp_error@@Base+0x520>
   16bc0:	ldr	r4, [sp, #8]
   16bc4:	mvn	r3, #0
   16bc8:	str	r3, [sp, #28]
   16bcc:	mov	sl, #0
   16bd0:	str	sl, [sp, #36]	; 0x24
   16bd4:	mov	r5, sl
   16bd8:	mov	r9, sl
   16bdc:	str	r8, [sp, #32]
   16be0:	mov	r8, sl
   16be4:	ldr	r0, [sp, #16]
   16be8:	b	16c38 <argp_error@@Base+0x344>
   16bec:	ldr	r2, [r9, #8]
   16bf0:	ldr	r3, [r4, #8]
   16bf4:	cmp	r2, r3
   16bf8:	bne	16c70 <argp_error@@Base+0x37c>
   16bfc:	ldr	r2, [r9, #12]
   16c00:	ldr	r3, [r4, #12]
   16c04:	cmp	r2, r3
   16c08:	bne	16c70 <argp_error@@Base+0x37c>
   16c0c:	b	16c28 <argp_error@@Base+0x334>
   16c10:	cmp	r8, #0
   16c14:	moveq	sl, #1
   16c18:	beq	16c28 <argp_error@@Base+0x334>
   16c1c:	mov	sl, #1
   16c20:	mov	r3, #1
   16c24:	strb	r3, [r8, r5]
   16c28:	add	r5, r5, #1
   16c2c:	ldr	r0, [r4, #16]!
   16c30:	cmp	r0, #0
   16c34:	beq	16cd8 <argp_error@@Base+0x3e4>
   16c38:	mov	r2, r7
   16c3c:	ldr	r1, [fp, #20]
   16c40:	bl	11288 <strncmp@plt>
   16c44:	cmp	r0, #0
   16c48:	bne	16c28 <argp_error@@Base+0x334>
   16c4c:	cmp	r9, #0
   16c50:	beq	16cc4 <argp_error@@Base+0x3d0>
   16c54:	ldr	r3, [sp, #84]	; 0x54
   16c58:	cmp	r3, #0
   16c5c:	bne	16c70 <argp_error@@Base+0x37c>
   16c60:	ldr	r2, [r9, #4]
   16c64:	ldr	r3, [r4, #4]
   16c68:	cmp	r2, r3
   16c6c:	beq	16bec <argp_error@@Base+0x2f8>
   16c70:	cmp	sl, #0
   16c74:	bne	16c28 <argp_error@@Base+0x334>
   16c78:	ldr	r3, [sp, #92]	; 0x5c
   16c7c:	cmp	r3, #0
   16c80:	beq	16c10 <argp_error@@Base+0x31c>
   16c84:	cmp	r8, #0
   16c88:	bne	16c20 <argp_error@@Base+0x32c>
   16c8c:	mov	r0, r6
   16c90:	bl	13844 <argp_parse@@Base+0x11dc>
   16c94:	subs	r8, r0, #0
   16c98:	beq	16cd0 <argp_error@@Base+0x3dc>
   16c9c:	mov	r2, r6
   16ca0:	mov	r1, #0
   16ca4:	mov	r0, r8
   16ca8:	bl	111bc <memset@plt>
   16cac:	ldr	r3, [sp, #28]
   16cb0:	mov	r2, #1
   16cb4:	strb	r2, [r8, r3]
   16cb8:	mov	r3, #1
   16cbc:	str	r3, [sp, #36]	; 0x24
   16cc0:	b	16c20 <argp_error@@Base+0x32c>
   16cc4:	str	r5, [sp, #28]
   16cc8:	mov	r9, r4
   16ccc:	b	16c28 <argp_error@@Base+0x334>
   16cd0:	mov	sl, #1
   16cd4:	b	16c28 <argp_error@@Base+0x334>
   16cd8:	mov	r3, r8
   16cdc:	str	r8, [sp, #16]
   16ce0:	ldr	r8, [sp, #32]
   16ce4:	cmp	sl, #0
   16ce8:	cmpeq	r3, #0
   16cec:	beq	16e0c <argp_error@@Base+0x518>
   16cf0:	ldr	r3, [sp, #92]	; 0x5c
   16cf4:	cmp	r3, #0
   16cf8:	beq	16d28 <argp_error@@Base+0x434>
   16cfc:	cmp	sl, #0
   16d00:	beq	16d64 <argp_error@@Base+0x470>
   16d04:	ldr	r3, [sp, #12]
   16d08:	ldr	r2, [r3]
   16d0c:	ldr	r3, [pc, #708]	; 16fd8 <argp_error@@Base+0x6e4>
   16d10:	ldr	r0, [r3]
   16d14:	ldr	r3, [fp, #20]
   16d18:	str	r3, [sp]
   16d1c:	ldr	r3, [sp, #96]	; 0x60
   16d20:	ldr	r1, [pc, #692]	; 16fdc <argp_error@@Base+0x6e8>
   16d24:	bl	11180 <fprintf@plt>
   16d28:	ldr	r3, [sp, #36]	; 0x24
   16d2c:	cmp	r3, #0
   16d30:	bne	16e00 <argp_error@@Base+0x50c>
   16d34:	ldr	r4, [fp, #20]
   16d38:	mov	r0, r4
   16d3c:	bl	11168 <strlen@plt>
   16d40:	add	r0, r4, r0
   16d44:	str	r0, [fp, #20]
   16d48:	ldr	r3, [fp]
   16d4c:	add	r3, r3, #1
   16d50:	str	r3, [fp]
   16d54:	mov	r3, #0
   16d58:	str	r3, [fp, #8]
   16d5c:	mov	r0, #63	; 0x3f
   16d60:	b	16f58 <argp_error@@Base+0x664>
   16d64:	ldr	r4, [pc, #620]	; 16fd8 <argp_error@@Base+0x6e4>
   16d68:	ldr	r0, [r4]
   16d6c:	bl	11234 <flockfile@plt>
   16d70:	ldr	r3, [sp, #12]
   16d74:	ldr	r2, [r3]
   16d78:	ldr	r0, [r4]
   16d7c:	ldr	r3, [fp, #20]
   16d80:	str	r3, [sp]
   16d84:	ldr	r3, [sp, #96]	; 0x60
   16d88:	ldr	r1, [pc, #592]	; 16fe0 <argp_error@@Base+0x6ec>
   16d8c:	bl	11180 <fprintf@plt>
   16d90:	cmp	r6, #0
   16d94:	ble	16de4 <argp_error@@Base+0x4f0>
   16d98:	ldr	r3, [sp, #16]
   16d9c:	mov	r4, r3
   16da0:	add	r6, r3, r6
   16da4:	ldr	r7, [pc, #568]	; 16fe4 <argp_error@@Base+0x6f0>
   16da8:	ldr	r5, [pc, #552]	; 16fd8 <argp_error@@Base+0x6e4>
   16dac:	ldr	r8, [sp, #8]
   16db0:	b	16dc0 <argp_error@@Base+0x4cc>
   16db4:	add	sl, sl, #1
   16db8:	cmp	r4, r6
   16dbc:	beq	16de4 <argp_error@@Base+0x4f0>
   16dc0:	ldrb	r3, [r4], #1
   16dc4:	cmp	r3, #0
   16dc8:	beq	16db4 <argp_error@@Base+0x4c0>
   16dcc:	ldr	r3, [r8, sl, lsl #4]
   16dd0:	ldr	r2, [sp, #96]	; 0x60
   16dd4:	mov	r1, r7
   16dd8:	ldr	r0, [r5]
   16ddc:	bl	11180 <fprintf@plt>
   16de0:	b	16db4 <argp_error@@Base+0x4c0>
   16de4:	ldr	r4, [pc, #492]	; 16fd8 <argp_error@@Base+0x6e4>
   16de8:	ldr	r1, [r4]
   16dec:	mov	r0, #10
   16df0:	bl	1121c <fputc@plt>
   16df4:	ldr	r0, [r4]
   16df8:	bl	110c0 <funlockfile@plt>
   16dfc:	b	16d28 <argp_error@@Base+0x434>
   16e00:	ldr	r0, [sp, #16]
   16e04:	bl	1325c <argp_parse@@Base+0xbf4>
   16e08:	b	16d34 <argp_error@@Base+0x440>
   16e0c:	cmp	r9, #0
   16e10:	beq	16e64 <argp_error@@Base+0x570>
   16e14:	ldr	r2, [fp]
   16e18:	add	r3, r2, #1
   16e1c:	str	r3, [fp]
   16e20:	mov	r1, #0
   16e24:	str	r1, [fp, #20]
   16e28:	ldrb	r1, [r8]
   16e2c:	cmp	r1, #0
   16e30:	beq	16f24 <argp_error@@Base+0x630>
   16e34:	ldr	r3, [r9, #4]
   16e38:	cmp	r3, #0
   16e3c:	addne	r8, r8, #1
   16e40:	strne	r8, [fp, #12]
   16e44:	bne	16f30 <argp_error@@Base+0x63c>
   16e48:	ldr	r3, [sp, #92]	; 0x5c
   16e4c:	cmp	r3, #0
   16e50:	bne	16efc <argp_error@@Base+0x608>
   16e54:	ldr	r3, [r9, #12]
   16e58:	str	r3, [fp, #8]
   16e5c:	mov	r0, #63	; 0x3f
   16e60:	b	16f58 <argp_error@@Base+0x664>
   16e64:	ldr	r3, [sp, #84]	; 0x54
   16e68:	cmp	r3, #0
   16e6c:	bne	16e9c <argp_error@@Base+0x5a8>
   16e70:	ldr	r3, [sp, #92]	; 0x5c
   16e74:	cmp	r3, #0
   16e78:	bne	16ed4 <argp_error@@Base+0x5e0>
   16e7c:	mov	r2, #0
   16e80:	str	r2, [fp, #20]
   16e84:	ldr	r3, [fp]
   16e88:	add	r3, r3, #1
   16e8c:	str	r3, [fp]
   16e90:	str	r2, [fp, #8]
   16e94:	mov	r0, #63	; 0x3f
   16e98:	b	16f58 <argp_error@@Base+0x664>
   16e9c:	ldr	r3, [fp]
   16ea0:	ldr	r2, [sp, #12]
   16ea4:	ldr	r3, [r2, r3, lsl #2]
   16ea8:	ldrb	r3, [r3, #1]
   16eac:	cmp	r3, #45	; 0x2d
   16eb0:	beq	16e70 <argp_error@@Base+0x57c>
   16eb4:	ldr	r3, [fp, #20]
   16eb8:	ldrb	r1, [r3]
   16ebc:	ldr	r0, [sp, #24]
   16ec0:	bl	11174 <strchr@plt>
   16ec4:	cmp	r0, #0
   16ec8:	beq	16e70 <argp_error@@Base+0x57c>
   16ecc:	mvn	r0, #0
   16ed0:	b	16f58 <argp_error@@Base+0x664>
   16ed4:	ldr	r3, [sp, #12]
   16ed8:	ldr	r2, [r3]
   16edc:	ldr	r3, [pc, #244]	; 16fd8 <argp_error@@Base+0x6e4>
   16ee0:	ldr	r0, [r3]
   16ee4:	ldr	r3, [fp, #20]
   16ee8:	str	r3, [sp]
   16eec:	ldr	r3, [sp, #96]	; 0x60
   16ef0:	ldr	r1, [pc, #240]	; 16fe8 <argp_error@@Base+0x6f4>
   16ef4:	bl	11180 <fprintf@plt>
   16ef8:	b	16e7c <argp_error@@Base+0x588>
   16efc:	ldr	r3, [sp, #12]
   16f00:	ldr	r2, [r3]
   16f04:	ldr	r3, [pc, #204]	; 16fd8 <argp_error@@Base+0x6e4>
   16f08:	ldr	r0, [r3]
   16f0c:	ldr	r3, [r9]
   16f10:	str	r3, [sp]
   16f14:	ldr	r3, [sp, #96]	; 0x60
   16f18:	ldr	r1, [pc, #204]	; 16fec <argp_error@@Base+0x6f8>
   16f1c:	bl	11180 <fprintf@plt>
   16f20:	b	16e54 <argp_error@@Base+0x560>
   16f24:	ldr	r1, [r9, #4]
   16f28:	cmp	r1, #1
   16f2c:	beq	16f60 <argp_error@@Base+0x66c>
   16f30:	ldr	r3, [sp, #80]	; 0x50
   16f34:	cmp	r3, #0
   16f38:	ldrne	r2, [sp, #28]
   16f3c:	strne	r2, [r3]
   16f40:	ldr	r3, [r9, #8]
   16f44:	cmp	r3, #0
   16f48:	ldrne	r2, [r9, #12]
   16f4c:	strne	r2, [r3]
   16f50:	movne	r0, #0
   16f54:	ldreq	r0, [r9, #12]
   16f58:	add	sp, sp, #44	; 0x2c
   16f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f60:	ldr	r1, [sp, #20]
   16f64:	cmp	r3, r1
   16f68:	bge	16f84 <argp_error@@Base+0x690>
   16f6c:	add	r2, r2, #2
   16f70:	str	r2, [fp]
   16f74:	ldr	r2, [sp, #12]
   16f78:	ldr	r3, [r2, r3, lsl #2]
   16f7c:	str	r3, [fp, #12]
   16f80:	b	16f30 <argp_error@@Base+0x63c>
   16f84:	ldr	r3, [sp, #92]	; 0x5c
   16f88:	cmp	r3, #0
   16f8c:	bne	16fb0 <argp_error@@Base+0x6bc>
   16f90:	ldr	r3, [r9, #12]
   16f94:	str	r3, [fp, #8]
   16f98:	ldr	r3, [sp, #24]
   16f9c:	ldrb	r0, [r3]
   16fa0:	cmp	r0, #58	; 0x3a
   16fa4:	moveq	r0, #58	; 0x3a
   16fa8:	movne	r0, #63	; 0x3f
   16fac:	b	16f58 <argp_error@@Base+0x664>
   16fb0:	ldr	r3, [sp, #12]
   16fb4:	ldr	r2, [r3]
   16fb8:	ldr	r3, [pc, #24]	; 16fd8 <argp_error@@Base+0x6e4>
   16fbc:	ldr	r0, [r3]
   16fc0:	ldr	r3, [r9]
   16fc4:	str	r3, [sp]
   16fc8:	ldr	r3, [sp, #96]	; 0x60
   16fcc:	ldr	r1, [pc, #28]	; 16ff0 <argp_error@@Base+0x6fc>
   16fd0:	bl	11180 <fprintf@plt>
   16fd4:	b	16f90 <argp_error@@Base+0x69c>
   16fd8:	andeq	r9, r2, r0, ror r2
   16fdc:	andeq	r8, r1, r4, ror #22
   16fe0:	andeq	r8, r1, r4, lsl #23
   16fe4:			; <UNDEFINED> instruction: 0x00018bb4
   16fe8:			; <UNDEFINED> instruction: 0x00018bbc
   16fec:	ldrdeq	r8, [r1], -ip
   16ff0:	andeq	r8, r1, ip, lsl #24
   16ff4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ff8:	sub	sp, sp, #36	; 0x24
   16ffc:	str	r3, [sp, #24]
   17000:	ldr	r4, [sp, #80]	; 0x50
   17004:	ldr	r8, [r4, #4]
   17008:	subs	r5, r0, #0
   1700c:	ble	17514 <argp_error@@Base+0xc20>
   17010:	mov	r9, r1
   17014:	mov	r6, r2
   17018:	mov	r3, #0
   1701c:	str	r3, [r4, #12]
   17020:	ldr	r3, [r4]
   17024:	cmp	r3, #0
   17028:	beq	1704c <argp_error@@Base+0x758>
   1702c:	ldr	r3, [r4, #16]
   17030:	cmp	r3, #0
   17034:	beq	17054 <argp_error@@Base+0x760>
   17038:	ldrb	r3, [r2]
   1703c:	sub	r3, r3, #43	; 0x2b
   17040:	tst	r3, #253	; 0xfd
   17044:	addeq	r6, r2, #1
   17048:	b	170b0 <argp_error@@Base+0x7bc>
   1704c:	mov	r3, #1
   17050:	str	r3, [r4]
   17054:	ldr	r3, [r4]
   17058:	str	r3, [r4, #32]
   1705c:	str	r3, [r4, #28]
   17060:	mov	r3, #0
   17064:	str	r3, [r4, #20]
   17068:	ldrb	r3, [r6]
   1706c:	cmp	r3, #45	; 0x2d
   17070:	moveq	r3, #2
   17074:	streq	r3, [r4, #24]
   17078:	addeq	r6, r6, #1
   1707c:	beq	170a8 <argp_error@@Base+0x7b4>
   17080:	cmp	r3, #43	; 0x2b
   17084:	moveq	r3, #0
   17088:	streq	r3, [r4, #24]
   1708c:	addeq	r6, r6, #1
   17090:	beq	170a8 <argp_error@@Base+0x7b4>
   17094:	ldr	r3, [sp, #84]	; 0x54
   17098:	cmp	r3, #0
   1709c:	beq	1714c <argp_error@@Base+0x858>
   170a0:	mov	r3, #0
   170a4:	str	r3, [r4, #24]
   170a8:	mov	r3, #1
   170ac:	str	r3, [r4, #16]
   170b0:	ldrb	r3, [r6]
   170b4:	cmp	r3, #58	; 0x3a
   170b8:	moveq	r8, #0
   170bc:	ldr	r3, [r4, #20]
   170c0:	cmp	r3, #0
   170c4:	beq	170d4 <argp_error@@Base+0x7e0>
   170c8:	ldrb	r3, [r3]
   170cc:	cmp	r3, #0
   170d0:	bne	17260 <argp_error@@Base+0x96c>
   170d4:	ldr	r3, [r4]
   170d8:	ldr	r2, [r4, #32]
   170dc:	cmp	r2, r3
   170e0:	strgt	r3, [r4, #32]
   170e4:	ldr	r2, [r4, #28]
   170e8:	cmp	r3, r2
   170ec:	strlt	r3, [r4, #28]
   170f0:	ldr	r2, [r4, #24]
   170f4:	cmp	r2, #1
   170f8:	beq	17168 <argp_error@@Base+0x874>
   170fc:	ldr	r7, [r4]
   17100:	cmp	r5, r7
   17104:	beq	171ec <argp_error@@Base+0x8f8>
   17108:	ldr	sl, [r9, r7, lsl #2]
   1710c:	ldr	r1, [pc, #1088]	; 17554 <argp_error@@Base+0xc60>
   17110:	mov	r0, sl
   17114:	bl	10fe8 <strcmp@plt>
   17118:	cmp	r0, #0
   1711c:	bne	17524 <argp_error@@Base+0xc30>
   17120:	add	r7, r7, #1
   17124:	str	r7, [r4]
   17128:	ldr	r2, [r4, #28]
   1712c:	ldr	r3, [r4, #32]
   17130:	cmp	r7, r3
   17134:	cmpne	r2, r3
   17138:	beq	171dc <argp_error@@Base+0x8e8>
   1713c:	mov	r1, r4
   17140:	mov	r0, r9
   17144:	bl	16a38 <argp_error@@Base+0x144>
   17148:	b	171e4 <argp_error@@Base+0x8f0>
   1714c:	ldr	r0, [pc, #1028]	; 17558 <argp_error@@Base+0xc64>
   17150:	bl	110fc <getenv@plt>
   17154:	cmp	r0, #0
   17158:	bne	170a0 <argp_error@@Base+0x7ac>
   1715c:	mov	r3, #1
   17160:	str	r3, [r4, #24]
   17164:	b	170a8 <argp_error@@Base+0x7b4>
   17168:	ldr	r2, [r4, #32]
   1716c:	ldr	r1, [r4, #28]
   17170:	cmp	r1, r2
   17174:	cmpne	r3, r2
   17178:	beq	1718c <argp_error@@Base+0x898>
   1717c:	mov	r1, r4
   17180:	mov	r0, r9
   17184:	bl	16a38 <argp_error@@Base+0x144>
   17188:	b	17194 <argp_error@@Base+0x8a0>
   1718c:	cmp	r3, r2
   17190:	strne	r3, [r4, #28]
   17194:	ldr	r3, [r4]
   17198:	cmp	r5, r3
   1719c:	ble	171d4 <argp_error@@Base+0x8e0>
   171a0:	add	r1, r9, r3, lsl #2
   171a4:	b	171b8 <argp_error@@Base+0x8c4>
   171a8:	add	r3, r3, #1
   171ac:	str	r3, [r4]
   171b0:	cmp	r5, r3
   171b4:	beq	171d4 <argp_error@@Base+0x8e0>
   171b8:	ldr	r2, [r1], #4
   171bc:	ldrb	r0, [r2]
   171c0:	cmp	r0, #45	; 0x2d
   171c4:	bne	171a8 <argp_error@@Base+0x8b4>
   171c8:	ldrb	r2, [r2, #1]
   171cc:	cmp	r2, #0
   171d0:	beq	171a8 <argp_error@@Base+0x8b4>
   171d4:	str	r3, [r4, #32]
   171d8:	b	170fc <argp_error@@Base+0x808>
   171dc:	cmp	r2, r3
   171e0:	streq	r7, [r4, #28]
   171e4:	str	r5, [r4, #32]
   171e8:	str	r5, [r4]
   171ec:	ldr	r3, [r4, #28]
   171f0:	ldr	r2, [r4, #32]
   171f4:	cmp	r3, r2
   171f8:	mvneq	r0, #0
   171fc:	strne	r3, [r4]
   17200:	mvnne	r0, #0
   17204:	b	17364 <argp_error@@Base+0xa70>
   17208:	ldrb	r1, [sl, #1]
   1720c:	cmp	r1, #0
   17210:	beq	17530 <argp_error@@Base+0xc3c>
   17214:	ldr	r3, [sp, #24]
   17218:	cmp	r3, #0
   1721c:	beq	17250 <argp_error@@Base+0x95c>
   17220:	cmp	r1, #45	; 0x2d
   17224:	beq	172c8 <argp_error@@Base+0x9d4>
   17228:	ldr	r3, [sp, #76]	; 0x4c
   1722c:	cmp	r3, #0
   17230:	beq	17250 <argp_error@@Base+0x95c>
   17234:	ldrb	r3, [sl, #2]
   17238:	cmp	r3, #0
   1723c:	bne	17308 <argp_error@@Base+0xa14>
   17240:	mov	r0, r6
   17244:	bl	11174 <strchr@plt>
   17248:	cmp	r0, #0
   1724c:	beq	17308 <argp_error@@Base+0xa14>
   17250:	ldr	r3, [r4]
   17254:	ldr	r3, [r9, r3, lsl #2]
   17258:	add	r3, r3, #1
   1725c:	str	r3, [r4, #20]
   17260:	ldr	sl, [r4, #20]
   17264:	add	fp, sl, #1
   17268:	str	fp, [r4, #20]
   1726c:	ldrb	r7, [sl]
   17270:	str	r7, [sp, #28]
   17274:	mov	r1, r7
   17278:	mov	r0, r6
   1727c:	bl	11174 <strchr@plt>
   17280:	ldrb	r3, [sl, #1]
   17284:	cmp	r3, #0
   17288:	ldreq	r3, [r4]
   1728c:	addeq	r3, r3, #1
   17290:	streq	r3, [r4]
   17294:	sub	r3, r7, #58	; 0x3a
   17298:	uxtb	r3, r3
   1729c:	cmp	r0, #0
   172a0:	cmpne	r3, #1
   172a4:	bls	17350 <argp_error@@Base+0xa5c>
   172a8:	ldrb	r3, [r0]
   172ac:	cmp	r3, #87	; 0x57
   172b0:	beq	17388 <argp_error@@Base+0xa94>
   172b4:	ldrb	r3, [r0, #1]
   172b8:	cmp	r3, #58	; 0x3a
   172bc:	beq	17454 <argp_error@@Base+0xb60>
   172c0:	mov	r0, r7
   172c4:	b	17364 <argp_error@@Base+0xa70>
   172c8:	add	sl, sl, #2
   172cc:	str	sl, [r4, #20]
   172d0:	ldr	r3, [pc, #636]	; 17554 <argp_error@@Base+0xc60>
   172d4:	str	r3, [sp, #16]
   172d8:	str	r8, [sp, #12]
   172dc:	str	r4, [sp, #8]
   172e0:	ldr	r3, [sp, #76]	; 0x4c
   172e4:	str	r3, [sp, #4]
   172e8:	ldr	r3, [sp, #72]	; 0x48
   172ec:	str	r3, [sp]
   172f0:	ldr	r3, [sp, #24]
   172f4:	mov	r2, r6
   172f8:	mov	r1, r9
   172fc:	mov	r0, r5
   17300:	bl	16b08 <argp_error@@Base+0x214>
   17304:	b	17364 <argp_error@@Base+0xa70>
   17308:	add	sl, sl, #1
   1730c:	str	sl, [r4, #20]
   17310:	ldr	r3, [pc, #580]	; 1755c <argp_error@@Base+0xc68>
   17314:	str	r3, [sp, #16]
   17318:	str	r8, [sp, #12]
   1731c:	str	r4, [sp, #8]
   17320:	ldr	r3, [sp, #76]	; 0x4c
   17324:	str	r3, [sp, #4]
   17328:	ldr	r3, [sp, #72]	; 0x48
   1732c:	str	r3, [sp]
   17330:	ldr	r3, [sp, #24]
   17334:	mov	r2, r6
   17338:	mov	r1, r9
   1733c:	mov	r0, r5
   17340:	bl	16b08 <argp_error@@Base+0x214>
   17344:	cmn	r0, #1
   17348:	bne	17364 <argp_error@@Base+0xa70>
   1734c:	b	17250 <argp_error@@Base+0x95c>
   17350:	cmp	r8, #0
   17354:	bne	1736c <argp_error@@Base+0xa78>
   17358:	ldr	r3, [sp, #28]
   1735c:	str	r3, [r4, #8]
   17360:	mov	r0, #63	; 0x3f
   17364:	add	sp, sp, #36	; 0x24
   17368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1736c:	ldr	r3, [sp, #28]
   17370:	ldr	r2, [r9]
   17374:	ldr	r1, [pc, #484]	; 17560 <argp_error@@Base+0xc6c>
   17378:	ldr	r0, [pc, #484]	; 17564 <argp_error@@Base+0xc70>
   1737c:	ldr	r0, [r0]
   17380:	bl	11180 <fprintf@plt>
   17384:	b	17358 <argp_error@@Base+0xa64>
   17388:	ldrb	r3, [r0, #1]
   1738c:	ldr	r2, [sp, #24]
   17390:	cmp	r3, #59	; 0x3b
   17394:	movne	r3, #0
   17398:	moveq	r3, #1
   1739c:	cmp	r2, #0
   173a0:	moveq	r3, #0
   173a4:	cmp	r3, #0
   173a8:	beq	172b4 <argp_error@@Base+0x9c0>
   173ac:	ldrb	r3, [sl, #1]
   173b0:	cmp	r3, #0
   173b4:	strne	fp, [r4, #12]
   173b8:	bne	173d0 <argp_error@@Base+0xadc>
   173bc:	ldr	r3, [r4]
   173c0:	cmp	r5, r3
   173c4:	beq	17414 <argp_error@@Base+0xb20>
   173c8:	ldr	r3, [r9, r3, lsl #2]
   173cc:	str	r3, [r4, #12]
   173d0:	ldr	r3, [r4, #12]
   173d4:	str	r3, [r4, #20]
   173d8:	mov	r3, #0
   173dc:	str	r3, [r4, #12]
   173e0:	ldr	r2, [pc, #384]	; 17568 <argp_error@@Base+0xc74>
   173e4:	str	r2, [sp, #16]
   173e8:	str	r8, [sp, #12]
   173ec:	str	r4, [sp, #8]
   173f0:	str	r3, [sp, #4]
   173f4:	ldr	r3, [sp, #72]	; 0x48
   173f8:	str	r3, [sp]
   173fc:	ldr	r3, [sp, #24]
   17400:	mov	r2, r6
   17404:	mov	r1, r9
   17408:	mov	r0, r5
   1740c:	bl	16b08 <argp_error@@Base+0x214>
   17410:	b	17364 <argp_error@@Base+0xa70>
   17414:	cmp	r8, #0
   17418:	bne	17438 <argp_error@@Base+0xb44>
   1741c:	ldr	r3, [sp, #28]
   17420:	str	r3, [r4, #8]
   17424:	ldrb	r0, [r6]
   17428:	cmp	r0, #58	; 0x3a
   1742c:	moveq	r0, #58	; 0x3a
   17430:	movne	r0, #63	; 0x3f
   17434:	b	17364 <argp_error@@Base+0xa70>
   17438:	ldr	r3, [sp, #28]
   1743c:	ldr	r2, [r9]
   17440:	ldr	r1, [pc, #292]	; 1756c <argp_error@@Base+0xc78>
   17444:	ldr	r0, [pc, #280]	; 17564 <argp_error@@Base+0xc70>
   17448:	ldr	r0, [r0]
   1744c:	bl	11180 <fprintf@plt>
   17450:	b	1741c <argp_error@@Base+0xb28>
   17454:	ldrb	r3, [r0, #2]
   17458:	cmp	r3, #58	; 0x3a
   1745c:	beq	17488 <argp_error@@Base+0xb94>
   17460:	ldrb	r3, [sl, #1]
   17464:	cmp	r3, #0
   17468:	beq	174b4 <argp_error@@Base+0xbc0>
   1746c:	str	fp, [r4, #12]
   17470:	ldr	r3, [r4]
   17474:	add	r3, r3, #1
   17478:	str	r3, [r4]
   1747c:	mov	r3, #0
   17480:	str	r3, [r4, #20]
   17484:	b	172c0 <argp_error@@Base+0x9cc>
   17488:	ldrb	r3, [sl, #1]
   1748c:	cmp	r3, #0
   17490:	strne	fp, [r4, #12]
   17494:	ldrne	r3, [r4]
   17498:	addne	r3, r3, #1
   1749c:	strne	r3, [r4]
   174a0:	moveq	r3, #0
   174a4:	streq	r3, [r4, #12]
   174a8:	mov	r3, #0
   174ac:	str	r3, [r4, #20]
   174b0:	b	172c0 <argp_error@@Base+0x9cc>
   174b4:	ldr	r3, [r4]
   174b8:	cmp	r5, r3
   174bc:	beq	174d4 <argp_error@@Base+0xbe0>
   174c0:	add	r2, r3, #1
   174c4:	str	r2, [r4]
   174c8:	ldr	r3, [r9, r3, lsl #2]
   174cc:	str	r3, [r4, #12]
   174d0:	b	1747c <argp_error@@Base+0xb88>
   174d4:	cmp	r8, #0
   174d8:	bne	174f8 <argp_error@@Base+0xc04>
   174dc:	ldr	r3, [sp, #28]
   174e0:	str	r3, [r4, #8]
   174e4:	ldrb	r7, [r6]
   174e8:	cmp	r7, #58	; 0x3a
   174ec:	moveq	r7, #58	; 0x3a
   174f0:	movne	r7, #63	; 0x3f
   174f4:	b	1747c <argp_error@@Base+0xb88>
   174f8:	ldr	r3, [sp, #28]
   174fc:	ldr	r2, [r9]
   17500:	ldr	r1, [pc, #100]	; 1756c <argp_error@@Base+0xc78>
   17504:	ldr	r0, [pc, #88]	; 17564 <argp_error@@Base+0xc70>
   17508:	ldr	r0, [r0]
   1750c:	bl	11180 <fprintf@plt>
   17510:	b	174dc <argp_error@@Base+0xbe8>
   17514:	mvn	r0, #0
   17518:	b	17364 <argp_error@@Base+0xa70>
   1751c:	mvn	r0, #0
   17520:	b	17364 <argp_error@@Base+0xa70>
   17524:	ldrb	r3, [sl]
   17528:	cmp	r3, #45	; 0x2d
   1752c:	beq	17208 <argp_error@@Base+0x914>
   17530:	ldr	r3, [r4, #24]
   17534:	cmp	r3, #0
   17538:	beq	1751c <argp_error@@Base+0xc28>
   1753c:	add	r3, r7, #1
   17540:	str	r3, [r4]
   17544:	ldr	r3, [r9, r7, lsl #2]
   17548:	str	r3, [r4, #12]
   1754c:	mov	r0, #1
   17550:	b	17364 <argp_error@@Base+0xa70>
   17554:	andeq	r8, r1, r8, lsl r3
   17558:	andeq	r8, r1, r4, lsr ip
   1755c:	strdeq	r7, [r1], -r8
   17560:	andeq	r8, r1, r4, asr #24
   17564:	andeq	r9, r2, r0, ror r2
   17568:	andeq	r8, r1, ip, lsl #25
   1756c:	andeq	r8, r1, r0, ror #24
   17570:	push	{r4, r5, lr}
   17574:	sub	sp, sp, #20
   17578:	ldr	r4, [pc, #84]	; 175d4 <argp_error@@Base+0xce0>
   1757c:	ldr	r5, [pc, #84]	; 175d8 <argp_error@@Base+0xce4>
   17580:	ldr	ip, [r5]
   17584:	str	ip, [r4]
   17588:	ldr	ip, [r5, #4]
   1758c:	str	ip, [r4, #4]
   17590:	ldr	ip, [sp, #40]	; 0x28
   17594:	str	ip, [sp, #12]
   17598:	str	r4, [sp, #8]
   1759c:	ldr	ip, [sp, #36]	; 0x24
   175a0:	str	ip, [sp, #4]
   175a4:	ldr	ip, [sp, #32]
   175a8:	str	ip, [sp]
   175ac:	bl	16ff4 <argp_error@@Base+0x700>
   175b0:	ldr	r3, [r4]
   175b4:	str	r3, [r5]
   175b8:	ldr	r2, [r4, #12]
   175bc:	ldr	r3, [pc, #24]	; 175dc <argp_error@@Base+0xce8>
   175c0:	str	r2, [r3]
   175c4:	ldr	r3, [r4, #8]
   175c8:	str	r3, [r5, #8]
   175cc:	add	sp, sp, #20
   175d0:	pop	{r4, r5, pc}
   175d4:	muleq	r2, ip, r2
   175d8:	andeq	r9, r2, r8, asr r2
   175dc:	andeq	r9, r2, r8, asr #5
   175e0:	push	{lr}		; (str lr, [sp, #-4]!)
   175e4:	sub	sp, sp, #20
   175e8:	mov	r3, #1
   175ec:	str	r3, [sp, #8]
   175f0:	mov	r3, #0
   175f4:	str	r3, [sp, #4]
   175f8:	str	r3, [sp]
   175fc:	bl	17570 <argp_error@@Base+0xc7c>
   17600:	add	sp, sp, #20
   17604:	pop	{pc}		; (ldr pc, [sp], #4)
   17608:	push	{r4, r5, r6, r7, r8, lr}
   1760c:	mov	r8, r0
   17610:	mov	r7, r1
   17614:	mov	r6, r2
   17618:	mov	r5, r3
   1761c:	mov	r0, #36	; 0x24
   17620:	bl	13844 <argp_parse@@Base+0x11dc>
   17624:	subs	r4, r0, #0
   17628:	beq	17668 <argp_error@@Base+0xd74>
   1762c:	str	r8, [r4]
   17630:	str	r7, [r4, #4]
   17634:	str	r6, [r4, #8]
   17638:	str	r5, [r4, #12]
   1763c:	mov	r3, #0
   17640:	str	r3, [r4, #20]
   17644:	str	r3, [r4, #16]
   17648:	mov	r0, #200	; 0xc8
   1764c:	bl	13844 <argp_parse@@Base+0x11dc>
   17650:	str	r0, [r4, #24]
   17654:	cmp	r0, #0
   17658:	strne	r0, [r4, #28]
   1765c:	addne	r0, r0, #200	; 0xc8
   17660:	strne	r0, [r4, #32]
   17664:	beq	17670 <argp_error@@Base+0xd7c>
   17668:	mov	r0, r4
   1766c:	pop	{r4, r5, r6, r7, r8, pc}
   17670:	mov	r0, r4
   17674:	bl	1325c <argp_parse@@Base+0xbf4>
   17678:	mov	r4, #0
   1767c:	b	17668 <argp_error@@Base+0xd74>
   17680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17684:	sub	sp, sp, #20
   17688:	mov	r4, r0
   1768c:	ldr	r2, [r0, #24]
   17690:	ldr	r3, [r0, #16]
   17694:	add	r9, r2, r3
   17698:	mov	sl, #32
   1769c:	b	17748 <argp_error@@Base+0xe54>
   176a0:	add	r5, r5, #1
   176a4:	cmp	r6, r5
   176a8:	beq	176d8 <argp_error@@Base+0xde4>
   176ac:	ldr	r0, [r4]
   176b0:	ldr	r3, [r0, #20]
   176b4:	ldr	r2, [r0, #24]
   176b8:	cmp	r3, r2
   176bc:	addcc	r2, r3, #1
   176c0:	strcc	r2, [r0, #20]
   176c4:	strbcc	sl, [r3]
   176c8:	bcc	176a0 <argp_error@@Base+0xdac>
   176cc:	mov	r1, sl
   176d0:	bl	111ec <__overflow@plt>
   176d4:	b	176a0 <argp_error@@Base+0xdac>
   176d8:	str	r6, [r4, #20]
   176dc:	ldr	fp, [r4, #28]
   176e0:	str	fp, [sp, #8]
   176e4:	str	r9, [sp, #4]
   176e8:	sub	r3, fp, r9
   176ec:	str	r3, [sp]
   176f0:	mov	r2, r3
   176f4:	mov	r1, #10
   176f8:	mov	r0, r9
   176fc:	bl	111d4 <memchr@plt>
   17700:	mov	r7, r0
   17704:	ldr	r3, [r4, #20]
   17708:	cmp	r3, #0
   1770c:	movlt	r3, #0
   17710:	strlt	r3, [r4, #20]
   17714:	cmp	r7, #0
   17718:	beq	177b8 <argp_error@@Base+0xec4>
   1771c:	ldr	r0, [r4, #20]
   17720:	mov	r5, r7
   17724:	ldr	r8, [r4, #8]
   17728:	ldr	r3, [sp, #4]
   1772c:	sub	r3, r7, r3
   17730:	add	r3, r3, r0
   17734:	cmp	r3, r8
   17738:	bge	17808 <argp_error@@Base+0xf14>
   1773c:	mov	r3, #0
   17740:	str	r3, [r4, #20]
   17744:	add	r9, r7, #1
   17748:	ldr	fp, [r4, #28]
   1774c:	cmp	r9, fp
   17750:	bcs	177f0 <argp_error@@Base+0xefc>
   17754:	ldr	r3, [r4, #20]
   17758:	cmp	r3, #0
   1775c:	bne	176dc <argp_error@@Base+0xde8>
   17760:	ldr	r6, [r4, #4]
   17764:	cmp	r6, #0
   17768:	beq	17bb4 <argp_error@@Base+0x12c0>
   1776c:	add	r3, fp, r6
   17770:	ldr	r2, [r4, #32]
   17774:	cmp	r2, r3
   17778:	movls	r5, #0
   1777c:	bls	176ac <argp_error@@Base+0xdb8>
   17780:	add	r5, r9, r6
   17784:	sub	r2, fp, r9
   17788:	mov	r1, r9
   1778c:	mov	r0, r5
   17790:	bl	11024 <memmove@plt>
   17794:	ldr	r3, [r4, #28]
   17798:	add	r3, r3, r6
   1779c:	str	r3, [r4, #28]
   177a0:	mov	r2, r6
   177a4:	mov	r1, sl
   177a8:	mov	r0, r9
   177ac:	bl	111bc <memset@plt>
   177b0:	mov	r9, r5
   177b4:	b	176d8 <argp_error@@Base+0xde4>
   177b8:	ldr	r3, [r4, #20]
   177bc:	ldr	r2, [sp]
   177c0:	add	r3, r2, r3
   177c4:	ldr	r6, [r4, #8]
   177c8:	cmp	r3, r6
   177cc:	bcc	177ec <argp_error@@Base+0xef8>
   177d0:	sub	r6, r6, #1
   177d4:	ldr	r3, [r4, #12]
   177d8:	str	r3, [sp, #12]
   177dc:	cmp	r3, #0
   177e0:	blt	178fc <argp_error@@Base+0x1008>
   177e4:	mov	r7, fp
   177e8:	b	1781c <argp_error@@Base+0xf28>
   177ec:	str	r3, [r4, #20]
   177f0:	ldr	r3, [r4, #28]
   177f4:	ldr	r2, [r4, #24]
   177f8:	sub	r3, r3, r2
   177fc:	str	r3, [r4, #16]
   17800:	add	sp, sp, #20
   17804:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17808:	sub	r6, r8, #1
   1780c:	ldr	r3, [r4, #12]
   17810:	str	r3, [sp, #12]
   17814:	cmp	r3, #0
   17818:	blt	178b0 <argp_error@@Base+0xfbc>
   1781c:	ldr	r5, [r4, #20]
   17820:	rsb	r5, r5, #1
   17824:	add	r5, r5, r6
   17828:	adds	r5, r9, r5
   1782c:	bcs	17bdc <argp_error@@Base+0x12e8>
   17830:	bl	11150 <__ctype_b_loc@plt>
   17834:	ldr	r0, [r0]
   17838:	mov	r3, r5
   1783c:	mov	r1, r3
   17840:	sub	r3, r3, #1
   17844:	ldrb	r2, [r1]
   17848:	lsl	r2, r2, #1
   1784c:	ldrh	r2, [r0, r2]
   17850:	tst	r2, #1
   17854:	bne	1791c <argp_error@@Base+0x1028>
   17858:	mov	r1, r3
   1785c:	cmp	r3, r9
   17860:	bcs	1783c <argp_error@@Base+0xf48>
   17864:	add	r6, r1, #1
   17868:	cmp	r6, r9
   1786c:	bhi	17958 <argp_error@@Base+0x1064>
   17870:	cmp	r5, r7
   17874:	bcs	17a08 <argp_error@@Base+0x1114>
   17878:	add	r6, r5, #1
   1787c:	mov	r8, r7
   17880:	mov	r5, r6
   17884:	cmp	r8, r6
   17888:	beq	17a08 <argp_error@@Base+0x1114>
   1788c:	bl	11150 <__ctype_b_loc@plt>
   17890:	add	r6, r6, #1
   17894:	ldrb	r3, [r5]
   17898:	ldr	r2, [r0]
   1789c:	lsl	r3, r3, #1
   178a0:	ldrh	r3, [r2, r3]
   178a4:	tst	r3, #1
   178a8:	beq	17880 <argp_error@@Base+0xf8c>
   178ac:	b	17a1c <argp_error@@Base+0x1128>
   178b0:	cmp	fp, r7
   178b4:	bls	178fc <argp_error@@Base+0x1008>
   178b8:	sub	r0, r6, r0
   178bc:	ldr	r3, [sp, #8]
   178c0:	sub	r2, r3, r7
   178c4:	mov	r1, r7
   178c8:	add	r0, r9, r0
   178cc:	bl	11024 <memmove@plt>
   178d0:	ldr	r3, [r4, #20]
   178d4:	sub	r6, r6, r3
   178d8:	add	r6, r9, r6
   178dc:	sub	r5, r6, r7
   178e0:	ldr	r3, [r4, #28]
   178e4:	sub	r5, r3, r5
   178e8:	str	r5, [r4, #28]
   178ec:	mov	r3, #0
   178f0:	str	r3, [r4, #20]
   178f4:	add	r9, r9, r8
   178f8:	b	17748 <argp_error@@Base+0xe54>
   178fc:	ldr	r3, [r4, #20]
   17900:	ldr	r2, [sp]
   17904:	add	r3, r2, r3
   17908:	str	r3, [r4, #20]
   1790c:	sub	r3, r6, r3
   17910:	add	r3, fp, r3
   17914:	str	r3, [r4, #28]
   17918:	b	177f0 <argp_error@@Base+0xefc>
   1791c:	add	r6, r1, #1
   17920:	cmp	r6, r9
   17924:	bls	17870 <argp_error@@Base+0xf7c>
   17928:	cmp	r1, r9
   1792c:	bcc	17958 <argp_error@@Base+0x1064>
   17930:	sub	ip, r9, #1
   17934:	mov	r1, r3
   17938:	cmp	ip, r3
   1793c:	beq	17958 <argp_error@@Base+0x1064>
   17940:	sub	r3, r3, #1
   17944:	ldrb	r2, [r1]
   17948:	lsl	r2, r2, #1
   1794c:	ldrh	r2, [r0, r2]
   17950:	tst	r2, #1
   17954:	bne	17934 <argp_error@@Base+0x1040>
   17958:	add	r5, r1, #1
   1795c:	ldr	r3, [sp]
   17960:	add	r3, r3, #1
   17964:	add	r3, r9, r3
   17968:	cmp	r6, r3
   1796c:	beq	17a40 <argp_error@@Base+0x114c>
   17970:	add	r3, r5, #1
   17974:	sub	r3, r6, r3
   17978:	ldr	r2, [sp, #12]
   1797c:	cmp	r3, r2
   17980:	bge	17a58 <argp_error@@Base+0x1164>
   17984:	cmp	r6, fp
   17988:	bcs	17a58 <argp_error@@Base+0x1164>
   1798c:	ldr	r3, [r4, #32]
   17990:	ldr	r2, [sp, #8]
   17994:	sub	r3, r3, r2
   17998:	ldr	r2, [sp, #12]
   1799c:	add	r2, r2, #1
   179a0:	cmp	r3, r2
   179a4:	bgt	17aa0 <argp_error@@Base+0x11ac>
   179a8:	ldr	r0, [r4, #24]
   179ac:	cmp	r5, r0
   179b0:	bls	179c4 <argp_error@@Base+0x10d0>
   179b4:	ldr	r3, [r4]
   179b8:	sub	r2, r5, r0
   179bc:	mov	r1, #1
   179c0:	bl	11078 <fwrite_unlocked@plt>
   179c4:	ldr	r0, [r4]
   179c8:	ldr	r3, [r0, #20]
   179cc:	ldr	r2, [r0, #24]
   179d0:	cmp	r3, r2
   179d4:	addcc	r2, r3, #1
   179d8:	strcc	r2, [r0, #20]
   179dc:	movcc	r2, #10
   179e0:	strbcc	r2, [r3]
   179e4:	bcs	17aec <argp_error@@Base+0x11f8>
   179e8:	ldr	r7, [r4, #24]
   179ec:	ldr	r3, [sp, #4]
   179f0:	sub	r3, r3, r7
   179f4:	ldr	r2, [sp]
   179f8:	add	r3, r2, r3
   179fc:	str	r3, [sp]
   17a00:	mov	r9, r7
   17a04:	b	17a68 <argp_error@@Base+0x1174>
   17a08:	cmp	r5, r7
   17a0c:	moveq	r3, #0
   17a10:	streq	r3, [r4, #20]
   17a14:	addeq	r9, r7, #1
   17a18:	beq	17748 <argp_error@@Base+0xe54>
   17a1c:	bl	11150 <__ctype_b_loc@plt>
   17a20:	ldr	r2, [r0]
   17a24:	mov	r6, r5
   17a28:	ldrb	r3, [r6, #1]!
   17a2c:	lsl	r3, r3, #1
   17a30:	ldrh	r3, [r2, r3]
   17a34:	tst	r3, #1
   17a38:	bne	17a28 <argp_error@@Base+0x1134>
   17a3c:	b	1795c <argp_error@@Base+0x1068>
   17a40:	ldr	r3, [r4, #32]
   17a44:	sub	r3, r3, r5
   17a48:	ldr	r2, [sp, #12]
   17a4c:	add	r2, r2, #1
   17a50:	cmp	r3, r2
   17a54:	blt	17984 <argp_error@@Base+0x1090>
   17a58:	mov	r3, #10
   17a5c:	strb	r3, [r5]
   17a60:	mov	r7, r9
   17a64:	add	r9, r5, #1
   17a68:	mov	r8, r6
   17a6c:	ldr	r3, [r4, #12]
   17a70:	sub	r2, r6, r9
   17a74:	cmp	r2, r3
   17a78:	bge	17b08 <argp_error@@Base+0x1214>
   17a7c:	ldr	r2, [sp]
   17a80:	add	r2, r2, #1
   17a84:	add	r2, r7, r2
   17a88:	cmp	r6, r2
   17a8c:	beq	17af8 <argp_error@@Base+0x1204>
   17a90:	cmp	r3, #0
   17a94:	movgt	r5, #0
   17a98:	bgt	17b6c <argp_error@@Base+0x1278>
   17a9c:	b	17b2c <argp_error@@Base+0x1238>
   17aa0:	ldr	r3, [sp, #8]
   17aa4:	sub	r7, r3, r6
   17aa8:	mov	r0, r2
   17aac:	mov	r2, r7
   17ab0:	mov	r1, r6
   17ab4:	add	r0, r5, r0
   17ab8:	bl	11024 <memmove@plt>
   17abc:	ldr	r6, [r4, #12]
   17ac0:	add	r6, r6, #1
   17ac4:	add	r6, r5, r6
   17ac8:	add	r7, r6, r7
   17acc:	ldr	r3, [sp, #4]
   17ad0:	sub	r3, r7, r3
   17ad4:	str	r3, [sp]
   17ad8:	mov	r3, #10
   17adc:	strb	r3, [r5]
   17ae0:	mov	r7, r9
   17ae4:	add	r9, r5, #1
   17ae8:	b	17a68 <argp_error@@Base+0x1174>
   17aec:	mov	r1, #10
   17af0:	bl	111ec <__overflow@plt>
   17af4:	b	179e8 <argp_error@@Base+0x10f4>
   17af8:	ldr	r2, [r4, #32]
   17afc:	sub	r2, r2, r6
   17b00:	cmp	r3, r2
   17b04:	bgt	17a90 <argp_error@@Base+0x119c>
   17b08:	cmp	r3, #0
   17b0c:	ble	17b2c <argp_error@@Base+0x1238>
   17b10:	mov	r3, r9
   17b14:	strb	sl, [r3], #1
   17b18:	sub	r1, r3, r9
   17b1c:	ldr	r2, [r4, #12]
   17b20:	cmp	r1, r2
   17b24:	blt	17b14 <argp_error@@Base+0x1220>
   17b28:	mov	r9, r3
   17b2c:	cmp	r9, r6
   17b30:	bcc	17b98 <argp_error@@Base+0x12a4>
   17b34:	sub	r7, r8, r7
   17b38:	ldr	r3, [sp]
   17b3c:	sub	r7, r3, r7
   17b40:	add	r7, r9, r7
   17b44:	str	r7, [r4, #28]
   17b48:	ldr	r3, [r4, #12]
   17b4c:	cmp	r3, #0
   17b50:	mvneq	r3, #0
   17b54:	str	r3, [r4, #20]
   17b58:	b	17748 <argp_error@@Base+0xe54>
   17b5c:	add	r5, r5, #1
   17b60:	ldr	r3, [r4, #12]
   17b64:	cmp	r3, r5
   17b68:	ble	17b2c <argp_error@@Base+0x1238>
   17b6c:	ldr	r0, [r4]
   17b70:	ldr	r3, [r0, #20]
   17b74:	ldr	r2, [r0, #24]
   17b78:	cmp	r3, r2
   17b7c:	addcc	r2, r3, #1
   17b80:	strcc	r2, [r0, #20]
   17b84:	strbcc	sl, [r3]
   17b88:	bcc	17b5c <argp_error@@Base+0x1268>
   17b8c:	mov	r1, sl
   17b90:	bl	111ec <__overflow@plt>
   17b94:	b	17b5c <argp_error@@Base+0x1268>
   17b98:	ldr	r3, [sp]
   17b9c:	add	r2, r7, r3
   17ba0:	sub	r2, r2, r8
   17ba4:	mov	r1, r6
   17ba8:	mov	r0, r9
   17bac:	bl	11024 <memmove@plt>
   17bb0:	b	17b34 <argp_error@@Base+0x1240>
   17bb4:	str	fp, [sp, #8]
   17bb8:	str	r9, [sp, #4]
   17bbc:	sub	r3, fp, r9
   17bc0:	str	r3, [sp]
   17bc4:	mov	r2, r3
   17bc8:	mov	r1, #10
   17bcc:	mov	r0, r9
   17bd0:	bl	111d4 <memchr@plt>
   17bd4:	mov	r7, r0
   17bd8:	b	17714 <argp_error@@Base+0xe20>
   17bdc:	mov	r1, r5
   17be0:	b	17864 <argp_error@@Base+0xf70>
   17be4:	push	{r4, lr}
   17be8:	mov	r4, r0
   17bec:	bl	17680 <argp_error@@Base+0xd8c>
   17bf0:	ldr	r2, [r4, #28]
   17bf4:	ldr	r0, [r4, #24]
   17bf8:	cmp	r2, r0
   17bfc:	bls	17c10 <argp_error@@Base+0x131c>
   17c00:	ldr	r3, [r4]
   17c04:	sub	r2, r2, r0
   17c08:	mov	r1, #1
   17c0c:	bl	11078 <fwrite_unlocked@plt>
   17c10:	ldr	r0, [r4, #24]
   17c14:	bl	1325c <argp_parse@@Base+0xbf4>
   17c18:	mov	r0, r4
   17c1c:	bl	1325c <argp_parse@@Base+0xbf4>
   17c20:	pop	{r4, pc}
   17c24:	ldr	r3, [r0, #32]
   17c28:	ldr	r2, [r0, #28]
   17c2c:	sub	r3, r3, r2
   17c30:	cmp	r3, r1
   17c34:	bcc	17c40 <argp_error@@Base+0x134c>
   17c38:	mov	r0, #1
   17c3c:	bx	lr
   17c40:	push	{r4, r5, r6, lr}
   17c44:	mov	r5, r1
   17c48:	mov	r4, r0
   17c4c:	bl	17680 <argp_error@@Base+0xd8c>
   17c50:	ldr	r0, [r4, #24]
   17c54:	ldr	r2, [r4, #28]
   17c58:	ldr	r3, [r4]
   17c5c:	sub	r2, r2, r0
   17c60:	mov	r1, #1
   17c64:	bl	11078 <fwrite_unlocked@plt>
   17c68:	ldr	r2, [r4, #28]
   17c6c:	ldr	r3, [r4, #24]
   17c70:	sub	r1, r2, r3
   17c74:	cmp	r0, r1
   17c78:	bne	17cbc <argp_error@@Base+0x13c8>
   17c7c:	str	r3, [r4, #28]
   17c80:	mov	r2, #0
   17c84:	str	r2, [r4, #16]
   17c88:	ldr	r1, [r4, #32]
   17c8c:	sub	r1, r1, r3
   17c90:	cmp	r5, r1
   17c94:	bls	17cb4 <argp_error@@Base+0x13c0>
   17c98:	adds	r5, r5, r1
   17c9c:	bcc	17ce8 <argp_error@@Base+0x13f4>
   17ca0:	bl	1118c <__errno_location@plt>
   17ca4:	mov	r3, #12
   17ca8:	str	r3, [r0]
   17cac:	mov	r0, #0
   17cb0:	pop	{r4, r5, r6, pc}
   17cb4:	mov	r0, #1
   17cb8:	pop	{r4, r5, r6, pc}
   17cbc:	sub	r2, r2, r0
   17cc0:	str	r2, [r4, #28]
   17cc4:	ldr	r1, [r4, #16]
   17cc8:	sub	r1, r1, r0
   17ccc:	str	r1, [r4, #16]
   17cd0:	sub	r2, r2, r3
   17cd4:	add	r1, r3, r0
   17cd8:	mov	r0, r3
   17cdc:	bl	11024 <memmove@plt>
   17ce0:	mov	r0, #0
   17ce4:	pop	{r4, r5, r6, pc}
   17ce8:	mov	r1, r5
   17cec:	mov	r0, r3
   17cf0:	bl	17d94 <argp_error@@Base+0x14a0>
   17cf4:	cmp	r0, #0
   17cf8:	beq	17ca0 <argp_error@@Base+0x13ac>
   17cfc:	str	r0, [r4, #24]
   17d00:	add	r5, r0, r5
   17d04:	str	r5, [r4, #32]
   17d08:	str	r0, [r4, #28]
   17d0c:	mov	r0, #1
   17d10:	pop	{r4, r5, r6, pc}
   17d14:	push	{r1, r2, r3}
   17d18:	push	{r4, r5, r6, r7, lr}
   17d1c:	sub	sp, sp, #8
   17d20:	mov	r5, r0
   17d24:	ldr	r7, [sp, #28]
   17d28:	mov	r1, #150	; 0x96
   17d2c:	add	r6, sp, #32
   17d30:	mov	r0, r5
   17d34:	bl	17c24 <argp_error@@Base+0x1330>
   17d38:	cmp	r0, #0
   17d3c:	beq	17d70 <argp_error@@Base+0x147c>
   17d40:	str	r6, [sp, #4]
   17d44:	ldr	r0, [r5, #28]
   17d48:	ldr	r4, [r5, #32]
   17d4c:	sub	r4, r4, r0
   17d50:	mov	r3, r6
   17d54:	mov	r2, r7
   17d58:	mov	r1, r4
   17d5c:	bl	11240 <vsnprintf@plt>
   17d60:	cmp	r4, r0
   17d64:	bhi	17d78 <argp_error@@Base+0x1484>
   17d68:	add	r1, r0, #1
   17d6c:	b	17d30 <argp_error@@Base+0x143c>
   17d70:	mvn	r0, #0
   17d74:	b	17d84 <argp_error@@Base+0x1490>
   17d78:	ldr	r3, [r5, #28]
   17d7c:	add	r3, r3, r0
   17d80:	str	r3, [r5, #28]
   17d84:	add	sp, sp, #8
   17d88:	pop	{r4, r5, r6, r7, lr}
   17d8c:	add	sp, sp, #12
   17d90:	bx	lr
   17d94:	push	{r4, lr}
   17d98:	cmp	r0, #0
   17d9c:	beq	17db8 <argp_error@@Base+0x14c4>
   17da0:	cmp	r1, #0
   17da4:	beq	17dc4 <argp_error@@Base+0x14d0>
   17da8:	cmp	r1, #0
   17dac:	blt	17dd0 <argp_error@@Base+0x14dc>
   17db0:	bl	110a8 <realloc@plt>
   17db4:	pop	{r4, pc}
   17db8:	mov	r0, r1
   17dbc:	bl	13844 <argp_parse@@Base+0x11dc>
   17dc0:	pop	{r4, pc}
   17dc4:	bl	1325c <argp_parse@@Base+0xbf4>
   17dc8:	mov	r0, #0
   17dcc:	pop	{r4, pc}
   17dd0:	bl	1118c <__errno_location@plt>
   17dd4:	mov	r3, #12
   17dd8:	str	r3, [r0]
   17ddc:	mov	r0, #0
   17de0:	pop	{r4, pc}
   17de4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17de8:	mov	r7, r0
   17dec:	ldr	r6, [pc, #72]	; 17e3c <argp_error@@Base+0x1548>
   17df0:	ldr	r5, [pc, #72]	; 17e40 <argp_error@@Base+0x154c>
   17df4:	add	r6, pc, r6
   17df8:	add	r5, pc, r5
   17dfc:	sub	r6, r6, r5
   17e00:	mov	r8, r1
   17e04:	mov	r9, r2
   17e08:	bl	10fbc <fputs_unlocked@plt-0x20>
   17e0c:	asrs	r6, r6, #2
   17e10:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17e14:	mov	r4, #0
   17e18:	add	r4, r4, #1
   17e1c:	ldr	r3, [r5], #4
   17e20:	mov	r2, r9
   17e24:	mov	r1, r8
   17e28:	mov	r0, r7
   17e2c:	blx	r3
   17e30:	cmp	r6, r4
   17e34:	bne	17e18 <argp_error@@Base+0x1524>
   17e38:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17e3c:	andeq	r1, r1, ip, lsl #2
   17e40:	andeq	r1, r1, r4, lsl #2
   17e44:	bx	lr

Disassembly of section .fini:

00017e48 <.fini>:
   17e48:	push	{r3, lr}
   17e4c:	pop	{r3, pc}
