
../repos/greatscottgadgets-libbtbb-9d66440/lib/src/libbtbb.so.1.0:     file format elf32-littlearm


Disassembly of section .init:

000044ac <.init>:
    44ac:	push	{r3, lr}
    44b0:	bl	4810 <__assert_fail@plt+0x14>
    44b4:	pop	{r3, pc}

Disassembly of section .plt:

000044b8 <calloc@plt-0x14>:
    44b8:	push	{lr}		; (str lr, [sp, #-4]!)
    44bc:	ldr	lr, [pc, #4]	; 44c8 <calloc@plt-0x4>
    44c0:	add	lr, pc, lr
    44c4:	ldr	pc, [lr, #8]!
    44c8:	andeq	r8, r2, r8, lsr fp

000044cc <calloc@plt>:
    44cc:	add	ip, pc, #0, 12
    44d0:	add	ip, ip, #40, 20	; 0x28000
    44d4:	ldr	pc, [ip, #2872]!	; 0xb38

000044d8 <raise@plt>:
    44d8:	add	ip, pc, #0, 12
    44dc:	add	ip, ip, #40, 20	; 0x28000
    44e0:	ldr	pc, [ip, #2864]!	; 0xb30

000044e4 <gen_hop_pattern@plt>:
    44e4:	add	ip, pc, #0, 12
    44e8:	add	ip, ip, #40, 20	; 0x28000
    44ec:	ldr	pc, [ip, #2856]!	; 0xb28

000044f0 <__cxa_finalize@plt>:
    44f0:	add	ip, pc, #0, 12
    44f4:	add	ip, ip, #40, 20	; 0x28000
    44f8:	ldr	pc, [ip, #2848]!	; 0xb20

000044fc <btbb_get_payload_packed@plt>:
    44fc:	add	ip, pc, #0, 12
    4500:	add	ip, ip, #40, 20	; 0x28000
    4504:	ldr	pc, [ip, #2840]!	; 0xb18

00004508 <printf@plt>:
    4508:	add	ip, pc, #0, 12
    450c:	add	ip, ip, #40, 20	; 0x28000
    4510:	ldr	pc, [ip, #2832]!	; 0xb10

00004514 <fopen@plt>:
    4514:	add	ip, pc, #0, 12
    4518:	add	ip, ip, #40, 20	; 0x28000
    451c:	ldr	pc, [ip, #2824]!	; 0xb08

00004520 <lell_packet_is_data@plt>:
    4520:	add	ip, pc, #0, 12
    4524:	add	ip, ip, #40, 20	; 0x28000
    4528:	ldr	pc, [ip, #2816]!	; 0xb00

0000452c <fflush@plt>:
    452c:	add	ip, pc, #0, 12
    4530:	add	ip, ip, #40, 20	; 0x28000
    4534:	ldr	pc, [ip, #2808]!	; 0xaf8

00004538 <btbb_packet_set_flag@plt>:
    4538:	add	ip, pc, #0, 12
    453c:	add	ip, ip, #40, 20	; 0x28000
    4540:	ldr	pc, [ip, #2800]!	; 0xaf0

00004544 <pcapng_append_interface_option@plt>:
    4544:	add	ip, pc, #0, 12
    4548:	add	ip, ip, #40, 20	; 0x28000
    454c:	ldr	pc, [ip, #2792]!	; 0xae8

00004550 <free@plt>:
    4550:	add	ip, pc, #0, 12
    4554:	add	ip, ip, #40, 20	; 0x28000
    4558:	ldr	pc, [ip, #2784]!	; 0xae0

0000455c <btbb_packet_get_modulation@plt>:
    455c:	add	ip, pc, #0, 12
    4560:	add	ip, ip, #40, 20	; 0x28000
    4564:	ldr	pc, [ip, #2776]!	; 0xad8

00004568 <btbb_packet_get_ac_errors@plt>:
    4568:	add	ip, pc, #0, 12
    456c:	add	ip, ip, #40, 20	; 0x28000
    4570:	ldr	pc, [ip, #2768]!	; 0xad0

00004574 <memcpy@plt>:
    4574:	add	ip, pc, #0, 12
    4578:	add	ip, ip, #40, 20	; 0x28000
    457c:	ldr	pc, [ip, #2760]!	; 0xac8

00004580 <btbb_uap_from_header@plt>:
    4580:	add	ip, pc, #0, 12
    4584:	add	ip, ip, #40, 20	; 0x28000
    4588:	ldr	pc, [ip, #2752]!	; 0xac0

0000458c <fhs@plt>:
    458c:	add	ip, pc, #0, 12
    4590:	add	ip, ip, #40, 20	; 0x28000
    4594:	ldr	pc, [ip, #2744]!	; 0xab8

00004598 <EV4@plt>:
    4598:	add	ip, pc, #0, 12
    459c:	add	ip, ip, #40, 20	; 0x28000
    45a0:	ldr	pc, [ip, #2736]!	; 0xab0

000045a4 <btbb_header_present@plt>:
    45a4:	add	ip, pc, #0, 12
    45a8:	add	ip, ip, #40, 20	; 0x28000
    45ac:	ldr	pc, [ip, #2728]!	; 0xaa8

000045b0 <pcapng_create@plt>:
    45b0:	add	ip, pc, #0, 12
    45b4:	add	ip, ip, #40, 20	; 0x28000
    45b8:	ldr	pc, [ip, #2720]!	; 0xaa0

000045bc <DM@plt>:
    45bc:	add	ip, pc, #0, 12
    45c0:	add	ip, ip, #40, 20	; 0x28000
    45c4:	ldr	pc, [ip, #2712]!	; 0xa98

000045c8 <HV@plt>:
    45c8:	add	ip, pc, #0, 12
    45cc:	add	ip, ip, #40, 20	; 0x28000
    45d0:	ldr	pc, [ip, #2704]!	; 0xa90

000045d4 <perror@plt>:
    45d4:	add	ip, pc, #0, 12
    45d8:	add	ip, ip, #40, 20	; 0x28000
    45dc:	ldr	pc, [ip, #2696]!	; 0xa88

000045e0 <perm_table_init@plt>:
    45e0:	add	ip, pc, #0, 12
    45e4:	add	ip, ip, #40, 20	; 0x28000
    45e8:	ldr	pc, [ip, #2688]!	; 0xa80

000045ec <btbb_packet_set_uap@plt>:
    45ec:	add	ip, pc, #0, 12
    45f0:	add	ip, ip, #40, 20	; 0x28000
    45f4:	ldr	pc, [ip, #2680]!	; 0xa78

000045f8 <fwrite@plt>:
    45f8:	add	ip, pc, #0, 12
    45fc:	add	ip, ip, #40, 20	; 0x28000
    4600:	ldr	pc, [ip, #2672]!	; 0xa70

00004604 <btbb_gen_syncword@plt>:
    4604:	add	ip, pc, #0, 12
    4608:	add	ip, ip, #40, 20	; 0x28000
    460c:	ldr	pc, [ip, #2664]!	; 0xa68

00004610 <crc_check@plt>:
    4610:	add	ip, pc, #0, 12
    4614:	add	ip, ip, #40, 20	; 0x28000
    4618:	ldr	pc, [ip, #2656]!	; 0xa60

0000461c <btbb_decode@plt>:
    461c:	add	ip, pc, #0, 12
    4620:	add	ip, ip, #40, 20	; 0x28000
    4624:	ldr	pc, [ip, #2648]!	; 0xa58

00004628 <btbb_winnow@plt>:
    4628:	add	ip, pc, #0, 12
    462c:	add	ip, ip, #40, 20	; 0x28000
    4630:	ldr	pc, [ip, #2640]!	; 0xa50

00004634 <get_hop_pattern@plt>:
    4634:	add	ip, pc, #0, 12
    4638:	add	ip, ip, #40, 20	; 0x28000
    463c:	ldr	pc, [ip, #2632]!	; 0xa48

00004640 <puts@plt>:
    4640:	add	ip, pc, #0, 12
    4644:	add	ip, ip, #40, 20	; 0x28000
    4648:	ldr	pc, [ip, #2624]!	; 0xa40

0000464c <malloc@plt>:
    464c:	add	ip, pc, #0, 12
    4650:	add	ip, ip, #40, 20	; 0x28000
    4654:	ldr	pc, [ip, #2616]!	; 0xa38

00004658 <try_hop@plt>:
    4658:	add	ip, pc, #0, 12
    465c:	add	ip, ip, #40, 20	; 0x28000
    4660:	ldr	pc, [ip, #2608]!	; 0xa30

00004664 <__gmon_start__@plt>:
    4664:	add	ip, pc, #0, 12
    4668:	add	ip, ip, #40, 20	; 0x28000
    466c:	ldr	pc, [ip, #2600]!	; 0xa28

00004670 <open@plt>:
    4670:	add	ip, pc, #0, 12
    4674:	add	ip, ip, #40, 20	; 0x28000
    4678:	ldr	pc, [ip, #2592]!	; 0xa20

0000467c <__ctype_b_loc@plt>:
    467c:	add	ip, pc, #0, 12
    4680:	add	ip, ip, #40, 20	; 0x28000
    4684:	ldr	pc, [ip, #2584]!	; 0xa18

00004688 <exit@plt>:
    4688:	add	ip, pc, #0, 12
    468c:	add	ip, ip, #40, 20	; 0x28000
    4690:	ldr	pc, [ip, #2576]!	; 0xa10

00004694 <btbb_packet_get_payload_length@plt>:
    4694:	add	ip, pc, #0, 12
    4698:	add	ip, ip, #40, 20	; 0x28000
    469c:	ldr	pc, [ip, #2568]!	; 0xa08

000046a0 <bcmp@plt>:
    46a0:	add	ip, pc, #0, 12
    46a4:	add	ip, ip, #40, 20	; 0x28000
    46a8:	ldr	pc, [ip, #2560]!	; 0xa00

000046ac <strlen@plt>:
    46ac:	add	ip, pc, #0, 12
    46b0:	add	ip, ip, #40, 20	; 0x28000
    46b4:	ldr	pc, [ip, #2552]!	; 0x9f8

000046b8 <btbb_decode_header@plt>:
    46b8:	add	ip, pc, #0, 12
    46bc:	add	ip, ip, #40, 20	; 0x28000
    46c0:	ldr	pc, [ip, #2544]!	; 0x9f0

000046c4 <mmap@plt>:
    46c4:	add	ip, pc, #0, 12
    46c8:	add	ip, ip, #40, 20	; 0x28000
    46cc:	ldr	pc, [ip, #2536]!	; 0x9e8

000046d0 <btbb_packet_get_header_packed@plt>:
    46d0:	add	ip, pc, #0, 12
    46d4:	add	ip, ip, #40, 20	; 0x28000
    46d8:	ldr	pc, [ip, #2528]!	; 0x9e0

000046dc <lell_get_channel_k@plt>:
    46dc:	add	ip, pc, #0, 12
    46e0:	add	ip, ip, #40, 20	; 0x28000
    46e4:	ldr	pc, [ip, #2520]!	; 0x9d8

000046e8 <fprintf@plt>:
    46e8:	add	ip, pc, #0, 12
    46ec:	add	ip, ip, #40, 20	; 0x28000
    46f0:	ldr	pc, [ip, #2512]!	; 0x9d0

000046f4 <getpagesize@plt>:
    46f4:	add	ip, pc, #0, 12
    46f8:	add	ip, ip, #40, 20	; 0x28000
    46fc:	ldr	pc, [ip, #2504]!	; 0x9c8

00004700 <pcapng_append_packet@plt>:
    4700:	add	ip, pc, #0, 12
    4704:	add	ip, ip, #40, 20	; 0x28000
    4708:	ldr	pc, [ip, #2496]!	; 0x9c0

0000470c <btbb_packet_get_transport@plt>:
    470c:	add	ip, pc, #0, 12
    4710:	add	ip, ip, #40, 20	; 0x28000
    4714:	ldr	pc, [ip, #2488]!	; 0x9b8

00004718 <memset@plt>:
    4718:	add	ip, pc, #0, 12
    471c:	add	ip, ip, #40, 20	; 0x28000
    4720:	ldr	pc, [ip, #2480]!	; 0x9b0

00004724 <putchar@plt>:
    4724:	add	ip, pc, #0, 12
    4728:	add	ip, ip, #40, 20	; 0x28000
    472c:	ldr	pc, [ip, #2472]!	; 0x9a8

00004730 <strncpy@plt>:
    4730:	add	ip, pc, #0, 12
    4734:	add	ip, ip, #40, 20	; 0x28000
    4738:	ldr	pc, [ip, #2464]!	; 0x9a0

0000473c <EV3@plt>:
    473c:	add	ip, pc, #0, 12
    4740:	add	ip, ip, #40, 20	; 0x28000
    4744:	ldr	pc, [ip, #2456]!	; 0x998

00004748 <btbb_packet_get_lap@plt>:
    4748:	add	ip, pc, #0, 12
    474c:	add	ip, ip, #40, 20	; 0x28000
    4750:	ldr	pc, [ip, #2448]!	; 0x990

00004754 <bt_compidtostr@plt>:
    4754:	add	ip, pc, #0, 12
    4758:	add	ip, ip, #40, 20	; 0x28000
    475c:	ldr	pc, [ip, #2440]!	; 0x988

00004760 <write@plt>:
    4760:	add	ip, pc, #0, 12
    4764:	add	ip, ip, #40, 20	; 0x28000
    4768:	ldr	pc, [ip, #2432]!	; 0x980

0000476c <get_piconet@plt>:
    476c:	add	ip, pc, #0, 12
    4770:	add	ip, ip, #40, 20	; 0x28000
    4774:	ldr	pc, [ip, #2424]!	; 0x978

00004778 <fclose@plt>:
    4778:	add	ip, pc, #0, 12
    477c:	add	ip, ip, #40, 20	; 0x28000
    4780:	ldr	pc, [ip, #2416]!	; 0x970

00004784 <EV5@plt>:
    4784:	add	ip, pc, #0, 12
    4788:	add	ip, ip, #40, 20	; 0x28000
    478c:	ldr	pc, [ip, #2408]!	; 0x968

00004790 <munmap@plt>:
    4790:	add	ip, pc, #0, 12
    4794:	add	ip, ip, #40, 20	; 0x28000
    4798:	ldr	pc, [ip, #2400]!	; 0x960

0000479c <DH@plt>:
    479c:	add	ip, pc, #0, 12
    47a0:	add	ip, ip, #40, 20	; 0x28000
    47a4:	ldr	pc, [ip, #2392]!	; 0x958

000047a8 <btbb_packet_get_channel@plt>:
    47a8:	add	ip, pc, #0, 12
    47ac:	add	ip, ip, #40, 20	; 0x28000
    47b0:	ldr	pc, [ip, #2384]!	; 0x950

000047b4 <btbb_decode_payload@plt>:
    47b4:	add	ip, pc, #0, 12
    47b8:	add	ip, ip, #40, 20	; 0x28000
    47bc:	ldr	pc, [ip, #2376]!	; 0x948

000047c0 <promiscuous_packet_search@plt>:
    47c0:	add	ip, pc, #0, 12
    47c4:	add	ip, ip, #40, 20	; 0x28000
    47c8:	ldr	pc, [ip, #2368]!	; 0x940

000047cc <pcapng_close@plt>:
    47cc:	add	ip, pc, #0, 12
    47d0:	add	ip, ip, #40, 20	; 0x28000
    47d4:	ldr	pc, [ip, #2360]!	; 0x938

000047d8 <btbb_print_packet@plt>:
    47d8:	add	ip, pc, #0, 12
    47dc:	add	ip, ip, #40, 20	; 0x28000
    47e0:	ldr	pc, [ip, #2352]!	; 0x930

000047e4 <try_clock@plt>:
    47e4:	add	ip, pc, #0, 12
    47e8:	add	ip, ip, #40, 20	; 0x28000
    47ec:	ldr	pc, [ip, #2344]!	; 0x928

000047f0 <close@plt>:
    47f0:	add	ip, pc, #0, 12
    47f4:	add	ip, ip, #40, 20	; 0x28000
    47f8:	ldr	pc, [ip, #2336]!	; 0x920

000047fc <__assert_fail@plt>:
    47fc:	add	ip, pc, #0, 12
    4800:	add	ip, ip, #40, 20	; 0x28000
    4804:	ldr	pc, [ip, #2328]!	; 0x918

Disassembly of section .text:

00004810 <btbb_gen_syncword@@Base-0x130>:
    4810:	ldr	r3, [pc, #20]	; 482c <__assert_fail@plt+0x30>
    4814:	ldr	r2, [pc, #20]	; 4830 <__assert_fail@plt+0x34>
    4818:	add	r3, pc, r3
    481c:	ldr	r2, [r3, r2]
    4820:	cmp	r2, #0
    4824:	bxeq	lr
    4828:	b	4664 <__gmon_start__@plt>
    482c:	andeq	r8, r2, r0, ror #15
    4830:	andeq	r0, r0, r4, lsr r1
    4834:	ldr	r0, [pc, #44]	; 4868 <__assert_fail@plt+0x6c>
    4838:	ldr	r3, [pc, #44]	; 486c <__assert_fail@plt+0x70>
    483c:	add	r0, pc, r0
    4840:	add	r3, pc, r3
    4844:	cmp	r3, r0
    4848:	ldr	r3, [pc, #32]	; 4870 <__assert_fail@plt+0x74>
    484c:	add	r3, pc, r3
    4850:	bxeq	lr
    4854:	ldr	r2, [pc, #24]	; 4874 <__assert_fail@plt+0x78>
    4858:	ldr	r3, [r3, r2]
    485c:	cmp	r3, #0
    4860:	bxeq	lr
    4864:	bx	r3
    4868:	andeq	r8, r2, r4, lsl #18
    486c:	andeq	r8, r2, r0, lsl #18
    4870:	andeq	r8, r2, ip, lsr #15
    4874:	andeq	r0, r0, r4, lsr #2
    4878:	ldr	r0, [pc, #56]	; 48b8 <__assert_fail@plt+0xbc>
    487c:	ldr	r3, [pc, #56]	; 48bc <__assert_fail@plt+0xc0>
    4880:	add	r0, pc, r0
    4884:	add	r3, pc, r3
    4888:	sub	r1, r3, r0
    488c:	ldr	r3, [pc, #44]	; 48c0 <__assert_fail@plt+0xc4>
    4890:	asr	r1, r1, #2
    4894:	add	r3, pc, r3
    4898:	add	r1, r1, r1, lsr #31
    489c:	asrs	r1, r1, #1
    48a0:	bxeq	lr
    48a4:	ldr	r2, [pc, #24]	; 48c4 <__assert_fail@plt+0xc8>
    48a8:	ldr	r3, [r3, r2]
    48ac:	cmp	r3, #0
    48b0:	bxeq	lr
    48b4:	bx	r3
    48b8:	andeq	r8, r2, r0, asr #17
    48bc:			; <UNDEFINED> instruction: 0x000288bc
    48c0:	andeq	r8, r2, r4, ror #14
    48c4:	andeq	r0, r0, ip, lsr r1
    48c8:	ldr	r3, [pc, #76]	; 491c <__assert_fail@plt+0x120>
    48cc:	ldr	r2, [pc, #76]	; 4920 <__assert_fail@plt+0x124>
    48d0:	add	r3, pc, r3
    48d4:	add	r2, pc, r2
    48d8:	ldrb	r3, [r3]
    48dc:	cmp	r3, #0
    48e0:	bxne	lr
    48e4:	ldr	r3, [pc, #56]	; 4924 <__assert_fail@plt+0x128>
    48e8:	push	{r4, lr}
    48ec:	ldr	r3, [r2, r3]
    48f0:	cmp	r3, #0
    48f4:	beq	4904 <__assert_fail@plt+0x108>
    48f8:	ldr	r3, [pc, #40]	; 4928 <__assert_fail@plt+0x12c>
    48fc:	ldr	r0, [pc, r3]
    4900:	bl	44f0 <__cxa_finalize@plt>
    4904:	bl	4834 <__assert_fail@plt+0x38>
    4908:	ldr	r3, [pc, #28]	; 492c <__assert_fail@plt+0x130>
    490c:	mov	r2, #1
    4910:	add	r3, pc, r3
    4914:	strb	r2, [r3]
    4918:	pop	{r4, pc}
    491c:	andeq	r8, r2, r0, ror r8
    4920:	andeq	r8, r2, r4, lsr #14
    4924:	andeq	r0, r0, r0, lsr #2
    4928:	andeq	r8, r2, ip, lsr r8
    492c:	andeq	r8, r2, r0, lsr r8
    4930:	b	4878 <__assert_fail@plt+0x7c>
	...

00004940 <btbb_gen_syncword@@Base>:
    4940:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4944:	add	fp, sp, #28
    4948:	sub	sp, sp, #60	; 0x3c
    494c:	mov	r1, r0
    4950:	ands	r0, r0, #8388608	; 0x800000
    4954:	movw	r2, #8223	; 0x201f
    4958:	str	r0, [fp, #-32]	; 0xffffffe0
    495c:	movw	r0, #52842	; 0xce6a
    4960:	movt	r2, #61625	; 0xf0b9
    4964:	movt	r0, #26451	; 0x6753
    4968:	movweq	r0, #3710	; 0xe7e
    496c:	movteq	r0, #51074	; 0xc782
    4970:	ands	r3, r1, #4194304	; 0x400000
    4974:	str	r3, [fp, #-36]	; 0xffffffdc
    4978:	eorne	r0, r0, r2
    497c:	movw	r2, #3803	; 0xedb
    4980:	ands	r3, r1, #2097152	; 0x200000
    4984:	ldr	r7, [fp, #-36]	; 0xffffffdc
    4988:	movt	r2, #15076	; 0x3ae4
    498c:	str	r3, [fp, #-40]	; 0xffffffd8
    4990:	eorne	r0, r0, r2
    4994:	movw	r2, #39353	; 0x99b9
    4998:	ands	r3, r1, #1048576	; 0x100000
    499c:	movt	r2, #24522	; 0x5fca
    49a0:	str	r3, [sp, #44]	; 0x2c
    49a4:	eorne	r0, r0, r2
    49a8:	movw	r2, #53768	; 0xd208
    49ac:	ands	r3, r1, #524288	; 0x80000
    49b0:	movt	r2, #27997	; 0x6d5d
    49b4:	str	r3, [sp, #40]	; 0x28
    49b8:	eorne	r0, r0, r2
    49bc:	movw	r2, #59652	; 0xe904
    49c0:	ands	r3, r1, #262144	; 0x40000
    49c4:	movt	r2, #46766	; 0xb6ae
    49c8:	str	r3, [sp, #36]	; 0x24
    49cc:	eorne	r0, r0, r2
    49d0:	movw	r2, #29826	; 0x7482
    49d4:	ands	r3, r1, #131072	; 0x20000
    49d8:	movt	r2, #56151	; 0xdb57
    49dc:	str	r3, [sp, #32]
    49e0:	eorne	r0, r0, r2
    49e4:	movw	r2, #47681	; 0xba41
    49e8:	ands	r3, r1, #65536	; 0x10000
    49ec:	movt	r2, #28075	; 0x6dab
    49f0:	str	r3, [sp, #28]
    49f4:	eorne	r0, r0, r2
    49f8:	movw	r2, #17396	; 0x43f4
    49fc:	ands	r3, r1, #32768	; 0x8000
    4a00:	movt	r2, #62573	; 0xf46d
    4a04:	str	r3, [sp, #24]
    4a08:	eorne	r0, r0, r2
    4a0c:	movw	r2, #41466	; 0xa1fa
    4a10:	ands	r3, r1, #16384	; 0x4000
    4a14:	movt	r2, #31286	; 0x7a36
    4a18:	str	r3, [sp, #20]
    4a1c:	eorne	r0, r0, r2
    4a20:	movw	r2, #20733	; 0x50fd
    4a24:	ands	r3, r1, #8192	; 0x2000
    4a28:	movt	r2, #48411	; 0xbd1b
    4a2c:	str	r3, [sp, #16]
    4a30:	eorne	r0, r0, r2
    4a34:	movw	r2, #13994	; 0x36aa
    4a38:	ands	r8, r1, #4096	; 0x1000
    4a3c:	movt	r2, #39989	; 0x9c35
    4a40:	eorne	r0, r0, r2
    4a44:	movw	r2, #39765	; 0x9b55
    4a48:	ands	r9, r1, #2048	; 0x800
    4a4c:	movt	r2, #19994	; 0x4e1a
    4a50:	eorne	r0, r0, r2
    4a54:	movw	r2, #54142	; 0xd37e
    4a58:	ands	sl, r1, #1024	; 0x400
    4a5c:	movt	r2, #26037	; 0x65b5
    4a60:	eorne	r0, r0, r2
    4a64:	movw	r2, #59839	; 0xe9bf
    4a68:	ands	r3, r1, #512	; 0x200
    4a6c:	movt	r2, #13018	; 0x32da
    4a70:	str	r3, [sp, #12]
    4a74:	eorne	r0, r0, r2
    4a78:	movw	r2, #59915	; 0xea0b
    4a7c:	ands	r3, r1, #256	; 0x100
    4a80:	movt	r2, #23509	; 0x5bd5
    4a84:	str	r3, [sp, #8]
    4a88:	eorne	r0, r0, r2
    4a8c:	movw	r2, #27601	; 0x6bd1
    4a90:	ands	r3, r1, #128	; 0x80
    4a94:	movt	r2, #61266	; 0xef52
    4a98:	str	r3, [sp, #4]
    4a9c:	eorne	r0, r0, r2
    4aa0:	movw	r2, #43836	; 0xab3c
    4aa4:	ands	r3, r1, #64	; 0x40
    4aa8:	movt	r2, #13585	; 0x3511
    4aac:	str	r3, [sp]
    4ab0:	eorne	r0, r0, r2
    4ab4:	movw	r2, #54686	; 0xd59e
    4ab8:	ands	r6, r1, #32
    4abc:	movt	r2, #39560	; 0x9a88
    4ac0:	eorne	r0, r0, r2
    4ac4:	movw	r2, #27343	; 0x6acf
    4ac8:	ands	r5, r1, #16
    4acc:	movt	r2, #52548	; 0xcd44
    4ad0:	eorne	r0, r0, r2
    4ad4:	movw	r2, #43955	; 0xabb3
    4ad8:	ands	r4, r1, #8
    4adc:	movt	r2, #42010	; 0xa41a
    4ae0:	eorne	r0, r0, r2
    4ae4:	movw	r2, #51981	; 0xcb0d
    4ae8:	ands	lr, r1, #4
    4aec:	movt	r2, #37045	; 0x90b5
    4af0:	eorne	r0, r0, r2
    4af4:	movw	r2, #31570	; 0x7b52
    4af8:	ands	ip, r1, #2
    4afc:	movt	r2, #2786	; 0xae2
    4b00:	eorne	r0, r0, r2
    4b04:	movw	r2, #15785	; 0x3da9
    4b08:	ands	r3, r1, #1
    4b0c:	mov	r1, #1308622848	; 0x4e000000
    4b10:	movt	r2, #34161	; 0x8571
    4b14:	eorne	r0, r0, r2
    4b18:	ldr	r2, [fp, #-32]	; 0xffffffe0
    4b1c:	cmp	r2, #0
    4b20:	moveq	r1, #-1342177278	; 0xb0000002
    4b24:	cmp	r7, #0
    4b28:	ldr	r7, [fp, #-40]	; 0xffffffd8
    4b2c:	eor	r2, r1, #3
    4b30:	eorne	r1, r2, #16777216	; 0x1000000
    4b34:	eor	r2, r1, #3
    4b38:	cmp	r7, #0
    4b3c:	ldr	r7, [sp, #44]	; 0x2c
    4b40:	eorne	r1, r2, #8388608	; 0x800000
    4b44:	eor	r2, r1, #3
    4b48:	cmp	r7, #0
    4b4c:	ldr	r7, [sp, #40]	; 0x28
    4b50:	eorne	r1, r2, #4194304	; 0x400000
    4b54:	eor	r2, r1, #3
    4b58:	cmp	r7, #0
    4b5c:	ldr	r7, [sp, #36]	; 0x24
    4b60:	eorne	r1, r2, #2097152	; 0x200000
    4b64:	eor	r2, r1, #1
    4b68:	cmp	r7, #0
    4b6c:	ldr	r7, [sp, #24]
    4b70:	eorne	r1, r2, #1048576	; 0x100000
    4b74:	ldr	r2, [sp, #32]
    4b78:	cmp	r2, #0
    4b7c:	ldr	r2, [sp, #28]
    4b80:	eorne	r1, r1, #524288	; 0x80000
    4b84:	cmp	r2, #0
    4b88:	eorne	r1, r1, #262144	; 0x40000
    4b8c:	cmp	r7, #0
    4b90:	ldr	r7, [sp, #20]
    4b94:	eor	r2, r1, #2
    4b98:	eorne	r1, r2, #131072	; 0x20000
    4b9c:	eor	r2, r1, #1
    4ba0:	cmp	r7, #0
    4ba4:	ldr	r7, [sp, #12]
    4ba8:	eorne	r1, r2, #65536	; 0x10000
    4bac:	ldr	r2, [sp, #16]
    4bb0:	cmp	r2, #0
    4bb4:	movw	r2, #16386	; 0x4002
    4bb8:	eorne	r1, r1, #32768	; 0x8000
    4bbc:	cmp	r8, #0
    4bc0:	eorne	r1, r1, r2
    4bc4:	movw	r2, #8193	; 0x2001
    4bc8:	cmp	r9, #0
    4bcc:	eorne	r1, r1, r2
    4bd0:	movw	r2, #4098	; 0x1002
    4bd4:	cmp	sl, #0
    4bd8:	eorne	r1, r1, r2
    4bdc:	cmp	r7, #0
    4be0:	ldr	r7, [sp, #8]
    4be4:	movw	r2, #2049	; 0x801
    4be8:	eorne	r1, r1, r2
    4bec:	movw	r2, #1026	; 0x402
    4bf0:	cmp	r7, #0
    4bf4:	ldr	r7, [sp, #4]
    4bf8:	eorne	r1, r1, r2
    4bfc:	movw	r2, #515	; 0x203
    4c00:	cmp	r7, #0
    4c04:	ldr	r7, [sp]
    4c08:	eorne	r1, r1, r2
    4c0c:	movw	r2, #259	; 0x103
    4c10:	cmp	r7, #0
    4c14:	eorne	r1, r1, r2
    4c18:	cmp	r6, #0
    4c1c:	eorne	r1, r1, #129	; 0x81
    4c20:	cmp	r5, #0
    4c24:	eorne	r1, r1, #64	; 0x40
    4c28:	cmp	r4, #0
    4c2c:	eorne	r1, r1, #34	; 0x22
    4c30:	cmp	lr, #0
    4c34:	eorne	r1, r1, #19
    4c38:	cmp	ip, #0
    4c3c:	eorne	r1, r1, #11
    4c40:	cmp	r3, #0
    4c44:	eorne	r1, r1, #5
    4c48:	sub	sp, fp, #28
    4c4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00004c50 <btbb_get_release@@Base>:
    4c50:	ldr	r0, [pc, #4]	; 4c5c <btbb_get_release@@Base+0xc>
    4c54:	add	r0, pc, r0
    4c58:	bx	lr
    4c5c:			; <UNDEFINED> instruction: 0x0000e7b4

00004c60 <btbb_get_version@@Base>:
    4c60:	ldr	r0, [pc, #4]	; 4c6c <btbb_get_version@@Base+0xc>
    4c64:	add	r0, pc, r0
    4c68:	bx	lr
    4c6c:	andeq	lr, r0, pc, lsr #15

00004c70 <btbb_init@@Base>:
    4c70:	push	{r4, r5, r6, sl, fp, lr}
    4c74:	add	fp, sp, #16
    4c78:	cmp	r0, #6
    4c7c:	bcs	4cd0 <btbb_init@@Base+0x60>
    4c80:	mov	r5, r0
    4c84:	mov	r4, #0
    4c88:	cmp	r0, #0
    4c8c:	beq	4cc8 <btbb_init@@Base+0x58>
    4c90:	ldr	r0, [pc, #112]	; 4d08 <btbb_init@@Base+0x98>
    4c94:	ldr	r0, [pc, r0]
    4c98:	cmp	r0, #0
    4c9c:	bne	4cc8 <btbb_init@@Base+0x58>
    4ca0:	mov	r4, #0
    4ca4:	mov	r6, #0
    4ca8:	add	r6, r6, #1
    4cac:	mov	r0, #0
    4cb0:	mov	r1, #0
    4cb4:	mov	r2, #0
    4cb8:	mov	r3, r6
    4cbc:	bl	a944 <clock_from_fhs@@Base+0xd0>
    4cc0:	cmp	r5, r6
    4cc4:	bne	4ca8 <btbb_init@@Base+0x38>
    4cc8:	mov	r0, r4
    4ccc:	pop	{r4, r5, r6, sl, fp, pc}
    4cd0:	ldr	r0, [pc, #36]	; 4cfc <btbb_init@@Base+0x8c>
    4cd4:	ldr	r0, [pc, r0]
    4cd8:	ldr	r0, [r0]
    4cdc:	ldr	r1, [pc, #28]	; 4d00 <btbb_init@@Base+0x90>
    4ce0:	ldr	r2, [pc, #28]	; 4d04 <btbb_init@@Base+0x94>
    4ce4:	add	r1, pc, r1
    4ce8:	add	r2, pc, r2
    4cec:	bl	46e8 <fprintf@plt>
    4cf0:	mvn	r4, #0
    4cf4:	mov	r0, r4
    4cf8:	pop	{r4, r5, r6, sl, fp, pc}
    4cfc:	andeq	r8, r2, ip, asr #8
    4d00:	andeq	lr, r0, r3, lsr r7
    4d04:	andeq	lr, r0, pc, asr #14
    4d08:			; <UNDEFINED> instruction: 0x000284b0

00004d0c <btbb_packet_new@@Base>:
    4d0c:	push	{r4, r5, fp, lr}
    4d10:	add	fp, sp, #8
    4d14:	mov	r0, #1
    4d18:	mov	r1, #5952	; 0x1740
    4d1c:	mov	r5, #1
    4d20:	bl	44cc <calloc@plt>
    4d24:	mov	r4, r0
    4d28:	cmp	r0, #0
    4d2c:	movne	r0, r4
    4d30:	strne	r5, [r4]
    4d34:	popne	{r4, r5, fp, pc}
    4d38:	ldr	r0, [pc, #32]	; 4d60 <btbb_packet_new@@Base+0x54>
    4d3c:	mov	r1, #25
    4d40:	mov	r2, #1
    4d44:	ldr	r0, [pc, r0]
    4d48:	ldr	r3, [r0]
    4d4c:	ldr	r0, [pc, #16]	; 4d64 <btbb_packet_new@@Base+0x58>
    4d50:	add	r0, pc, r0
    4d54:	bl	45f8 <fwrite@plt>
    4d58:	mov	r0, r4
    4d5c:	pop	{r4, r5, fp, pc}
    4d60:	ldrdeq	r8, [r2], -ip
    4d64:	strdeq	lr, [r0], -r1

00004d68 <btbb_packet_ref@@Base>:
    4d68:	ldr	r1, [r0]
    4d6c:	add	r1, r1, #1
    4d70:	str	r1, [r0]
    4d74:	bx	lr

00004d78 <btbb_packet_unref@@Base>:
    4d78:	ldr	r1, [r0]
    4d7c:	subs	r1, r1, #1
    4d80:	str	r1, [r0]
    4d84:	bxne	lr
    4d88:	b	4550 <free@plt>

00004d8c <btbb_packet_get_lap@@Base>:
    4d8c:	ldr	r0, [r0, #12]
    4d90:	bx	lr

00004d94 <btbb_packet_set_uap@@Base>:
    4d94:	strb	r1, [r0, #9]
    4d98:	ldr	r1, [r0, #4]
    4d9c:	orr	r1, r1, #4
    4da0:	str	r1, [r0, #4]
    4da4:	bx	lr

00004da8 <btbb_packet_set_flag@@Base>:
    4da8:	push	{fp, lr}
    4dac:	mov	fp, sp
    4db0:	ldr	lr, [r0, #4]
    4db4:	mov	ip, #1
    4db8:	cmp	r2, #0
    4dbc:	orr	r3, lr, ip, lsl r1
    4dc0:	biceq	r3, lr, ip, lsl r1
    4dc4:	str	r3, [r0, #4]
    4dc8:	pop	{fp, pc}

00004dcc <btbb_packet_get_uap@@Base>:
    4dcc:	ldrb	r0, [r0, #9]
    4dd0:	bx	lr

00004dd4 <btbb_packet_get_nap@@Base>:
    4dd4:	ldrh	r0, [r0, #10]
    4dd8:	bx	lr

00004ddc <btbb_packet_get_clkn@@Base>:
    4ddc:	ldr	r0, [r0, #2816]	; 0xb00
    4de0:	bx	lr

00004de4 <btbb_packet_get_channel@@Base>:
    4de4:	ldrb	r0, [r0, #8]
    4de8:	bx	lr

00004dec <btbb_packet_set_modulation@@Base>:
    4dec:	strb	r1, [r0, #16]
    4df0:	bx	lr

00004df4 <btbb_packet_get_modulation@@Base>:
    4df4:	ldrb	r0, [r0, #16]
    4df8:	bx	lr

00004dfc <btbb_packet_set_transport@@Base>:
    4dfc:	strb	r1, [r0, #17]
    4e00:	bx	lr

00004e04 <btbb_packet_get_transport@@Base>:
    4e04:	ldrb	r0, [r0, #17]
    4e08:	bx	lr

00004e0c <btbb_packet_get_ac_errors@@Base>:
    4e0c:	ldrb	r0, [r0, #2820]	; 0xb04
    4e10:	bx	lr
    4e14:	nop	{0}
    4e18:	nop	{0}
    4e1c:	nop	{0}

00004e20 <promiscuous_packet_search@@Base>:
    4e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    4e24:	add	fp, sp, #28
    4e28:	sub	sp, sp, #156	; 0x9c
    4e2c:	cmp	r1, #1
    4e30:	str	r3, [sp, #12]
    4e34:	blt	587c <promiscuous_packet_search@@Base+0xa5c>
    4e38:	mov	r7, r1
    4e3c:	ldrb	r6, [r0, #57]	; 0x39
    4e40:	ldrb	r1, [r0, #58]	; 0x3a
    4e44:	str	r2, [sp]
    4e48:	ldrb	r2, [r0, #59]	; 0x3b
    4e4c:	ldrb	r3, [r0, #60]	; 0x3c
    4e50:	mov	r9, #0
    4e54:	orr	r1, r6, r1, lsl #1
    4e58:	orr	r1, r1, r2, lsl #2
    4e5c:	orr	r2, r1, r3, lsl #3
    4e60:	ldrb	r1, [r0, #61]	; 0x3d
    4e64:	orr	r2, r2, r1, lsl #4
    4e68:	ldrb	r1, [r0, #62]	; 0x3e
    4e6c:	ldr	r3, [pc, #2732]	; 5920 <promiscuous_packet_search@@Base+0xb00>
    4e70:	stmib	sp, {r0, r7}
    4e74:	orr	r1, r2, r1, lsl #5
    4e78:	add	r3, pc, r3
    4e7c:	lsl	r8, r1, #1
    4e80:	b	4fe4 <promiscuous_packet_search@@Base+0x1c4>
    4e84:	nop	{0}
    4e88:	nop	{0}
    4e8c:	nop	{0}
    4e90:	andeq	r0, r0, r4
    4e94:	andeq	r0, r0, r0
    4e98:	andeq	r0, r0, r5
    4e9c:	andeq	r0, r0, r0
    4ea0:	andeq	r0, r0, r2
    4ea4:	andeq	r0, r0, r0
    4ea8:	andeq	r0, r0, r3
	...
    4eb8:	andeq	r0, r0, r1
    4ebc:	andeq	r0, r0, r0
    4ec0:	andeq	r0, r0, r6
    4ec4:	andeq	r0, r0, r0
    4ec8:	andeq	r0, r0, r7
    4ecc:	andeq	r0, r0, r0
    4ed0:	andeq	r0, r0, r8
    4ed4:	andeq	r0, r0, r0
    4ed8:	andeq	r0, r0, r9
    4edc:	andeq	r0, r0, r0
    4ee0:	andeq	r0, r0, sl
    4ee4:	andeq	r0, r0, r0
    4ee8:	andeq	r0, r0, fp
    4eec:	andeq	r0, r0, r0
    4ef0:	andeq	r0, r0, ip
    4ef4:	andeq	r0, r0, r0
    4ef8:	andeq	r0, r0, sp
    4efc:	andeq	r0, r0, r0
    4f00:	andeq	r0, r0, lr
    4f04:	andeq	r0, r0, r0
    4f08:	andeq	r0, r0, pc
    4f0c:	andeq	r0, r0, r0
    4f10:	andeq	r0, r0, r2, lsl r0
    4f14:	andeq	r0, r0, r0
    4f18:	andeq	r0, r0, r3, lsl r0
    4f1c:	andeq	r0, r0, r0
    4f20:	andeq	r0, r0, r0, lsl r0
    4f24:	andeq	r0, r0, r0
    4f28:	andeq	r0, r0, r1, lsl r0
    4f2c:	andeq	r0, r0, r0
    4f30:	andeq	r0, r0, r4, lsl r0
    4f34:	andeq	r0, r0, r0
    4f38:	andeq	r0, r0, r5, lsl r0
    4f3c:	andeq	r0, r0, r0
    4f40:	andeq	r0, r0, r6, lsl r0
    4f44:	andeq	r0, r0, r0
    4f48:	andeq	r0, r0, r7, lsl r0
    4f4c:	andeq	r0, r0, r0
    4f50:	andeq	r0, r0, r0, lsr #32
    4f54:	andeq	r0, r0, r0
    4f58:	andeq	r0, r0, r1, lsr #32
    4f5c:	andeq	r0, r0, r0
    4f60:	andeq	r0, r0, sl, lsl r0
    4f64:	andeq	r0, r0, r0
    4f68:	andeq	r0, r0, fp, lsl r0
    4f6c:	andeq	r0, r0, r0
    4f70:	andeq	r0, r0, r8, lsl r0
    4f74:	andeq	r0, r0, r0
    4f78:	andeq	r0, r0, r9, lsl r0
    4f7c:	andeq	r0, r0, r0
    4f80:	andeq	r0, r0, lr, lsl r0
    4f84:	andeq	r0, r0, r0
    4f88:	andeq	r0, r0, pc, lsl r0
    4f8c:	andeq	r0, r0, r0
    4f90:	andeq	r0, r0, ip, lsl r0
    4f94:	andeq	r0, r0, r0
    4f98:	andeq	r0, r0, sp, lsl r0
    4f9c:	andeq	r0, r0, r0
    4fa0:	andeq	r0, r0, r2, lsr #32
    4fa4:	andeq	r0, r0, r0
    4fa8:	andeq	r0, r0, r3, lsr #32
    4fac:	andeq	r0, r0, r0
    4fb0:	ldr	r0, [fp, #8]
    4fb4:	mov	ip, #255	; 0xff
    4fb8:	strb	ip, [r0]
    4fbc:	ldmib	sp, {r0, r7}
    4fc0:	ldr	r3, [pc, #2420]	; 593c <promiscuous_packet_search@@Base+0xb1c>
    4fc4:	ldr	r1, [sp, #12]
    4fc8:	uxtb	r2, ip
    4fcc:	add	r3, pc, r3
    4fd0:	cmp	r2, r1
    4fd4:	ble	588c <promiscuous_packet_search@@Base+0xa6c>
    4fd8:	add	r9, r9, #1
    4fdc:	cmp	r9, r7
    4fe0:	beq	587c <promiscuous_packet_search@@Base+0xa5c>
    4fe4:	add	r4, r0, r9
    4fe8:	uxtb	r2, r8
    4fec:	ldrb	r1, [r4, #63]	; 0x3f
    4ff0:	lsl	r1, r1, #6
    4ff4:	orr	r8, r1, r2, lsr #1
    4ff8:	uxtb	r1, r8
    4ffc:	ldrb	r1, [r3, r1]
    5000:	cmp	r1, #1
    5004:	bhi	4fd8 <promiscuous_packet_search@@Base+0x1b8>
    5008:	ldrh	r1, [r4]
    500c:	add	r0, sp, #16
    5010:	mov	ip, #0
    5014:	strh	r1, [sp, #16]
    5018:	ldrh	r1, [r4, #2]
    501c:	strh	r1, [fp, #-44]	; 0xffffffd4
    5020:	ldrh	r1, [r4, #4]
    5024:	strh	r1, [fp, #-48]	; 0xffffffd0
    5028:	ldrh	r3, [r4, #10]
    502c:	ldrh	r2, [r4, #6]
    5030:	vld1.16	{d16[0]}, [r0 :16]
    5034:	ldrh	r1, [r4, #12]
    5038:	sub	r0, fp, #44	; 0x2c
    503c:	strh	r3, [fp, #-60]	; 0xffffffc4
    5040:	vld1.16	{d17[0]}, [r0 :16]
    5044:	strh	r2, [fp, #-52]	; 0xffffffcc
    5048:	sub	r0, fp, #48	; 0x30
    504c:	ldrh	r2, [r4, #8]
    5050:	vld1.16	{d18[0]}, [r0 :16]
    5054:	sub	r0, fp, #60	; 0x3c
    5058:	vmovl.u8	q10, d16
    505c:	strh	r2, [fp, #-56]	; 0xffffffc8
    5060:	strh	r1, [fp, #-64]	; 0xffffffc0
    5064:	vld1.16	{d16[0]}, [r0 :16]
    5068:	sub	r0, fp, #52	; 0x34
    506c:	ldrh	r1, [r4, #14]
    5070:	vmovl.u16	q10, d20
    5074:	vld1.16	{d22[0]}, [r0 :16]
    5078:	sub	r0, fp, #56	; 0x38
    507c:	vmovl.u8	q12, d17
    5080:	vld1.16	{d17[0]}, [r0 :16]
    5084:	sub	r0, fp, #64	; 0x40
    5088:	vld1.16	{d23[0]}, [r0 :16]
    508c:	vmovl.u8	q13, d18
    5090:	vmovl.u32	q10, d20
    5094:	sub	r0, fp, #68	; 0x44
    5098:	strh	r1, [fp, #-68]	; 0xffffffbc
    509c:	vmovl.u16	q12, d24
    50a0:	ldrh	r1, [r4, #20]
    50a4:	ldrh	r2, [r4, #16]
    50a8:	sub	r3, pc, #544	; 0x220
    50ac:	sub	r6, pc, #532	; 0x214
    50b0:	sub	r5, pc, #520	; 0x208
    50b4:	vld1.64	{d0-d1}, [r6 :128]
    50b8:	vld1.64	{d4-d5}, [r3 :128]
    50bc:	vmovl.u8	q9, d16
    50c0:	vmovl.u32	q12, d24
    50c4:	vmovl.u8	q14, d22
    50c8:	strh	r2, [fp, #-72]	; 0xffffffb8
    50cc:	sub	r2, pc, #532	; 0x214
    50d0:	vld1.16	{d2[0]}, [r0 :16]
    50d4:	sub	r0, fp, #72	; 0x48
    50d8:	vmovl.u8	q15, d17
    50dc:	vmovl.u8	q8, d23
    50e0:	vmovl.u16	q11, d26
    50e4:	vld1.64	{d26-d27}, [r5 :128]
    50e8:	vshl.u64	q12, q12, q0
    50ec:	vld1.16	{d0[0]}, [r0 :16]
    50f0:	strh	r1, [fp, #-80]	; 0xffffffb0
    50f4:	vmovl.u16	q9, d18
    50f8:	sub	r0, fp, #80	; 0x50
    50fc:	vmovl.u16	q14, d28
    5100:	ldrh	r1, [r4, #18]
    5104:	vmovl.u16	q15, d30
    5108:	vmovl.u32	q11, d22
    510c:	vmovl.u32	q9, d18
    5110:	vmovl.u16	q8, d16
    5114:	vmovl.u32	q14, d28
    5118:	vshl.u64	q10, q10, q13
    511c:	vld1.64	{d26-d27}, [r2 :128]
    5120:	sub	r2, pc, #600	; 0x258
    5124:	strh	r1, [fp, #-76]	; 0xffffffb4
    5128:	sub	r1, pc, #592	; 0x250
    512c:	vmovl.u32	q15, d30
    5130:	vshl.u64	q11, q11, q2
    5134:	vmovl.u8	q1, d2
    5138:	vmovl.u32	q8, d16
    513c:	vorr	q10, q12, q10
    5140:	vld1.64	{d24-d25}, [r2 :128]
    5144:	ldrh	r2, [r4, #24]
    5148:	vmovl.u16	q1, d2
    514c:	vshl.u64	q13, q14, q13
    5150:	vld1.64	{d28-d29}, [r1 :128]
    5154:	ldrh	r1, [r4, #22]
    5158:	sub	r3, pc, #624	; 0x270
    515c:	vorr	q10, q11, q10
    5160:	vmovl.u8	q11, d0
    5164:	vld1.16	{d0[0]}, [r0 :16]
    5168:	sub	r0, fp, #76	; 0x4c
    516c:	vshl.u64	q12, q15, q12
    5170:	vld1.64	{d30-d31}, [r3 :128]
    5174:	vorr	q10, q13, q10
    5178:	vld1.16	{d26[0]}, [r0 :16]
    517c:	strh	r2, [fp, #-88]	; 0xffffffa8
    5180:	strh	r1, [fp, #-84]	; 0xffffffac
    5184:	sub	r0, fp, #88	; 0x58
    5188:	vshl.u64	q9, q9, q14
    518c:	vmovl.u16	q11, d22
    5190:	ldrh	r1, [r4, #28]
    5194:	ldrh	r2, [r4, #26]
    5198:	sub	r3, pc, #672	; 0x2a0
    519c:	vld1.16	{d28[0]}, [r0 :16]
    51a0:	sub	r0, fp, #84	; 0x54
    51a4:	vld1.16	{d29[0]}, [r0 :16]
    51a8:	add	r0, sp, #92	; 0x5c
    51ac:	vorr	q10, q12, q10
    51b0:	vmovl.u32	q11, d22
    51b4:	vshl.u64	q15, q8, q15
    51b8:	strh	r2, [sp, #92]	; 0x5c
    51bc:	strh	r1, [sp, #88]	; 0x58
    51c0:	vmovl.u8	q12, d0
    51c4:	vmovl.u32	q0, d2
    51c8:	ldrh	r1, [r4, #32]
    51cc:	vorr	q9, q9, q10
    51d0:	vld1.64	{d20-d21}, [r3 :128]
    51d4:	vmovl.u8	q13, d26
    51d8:	vorr	q15, q15, q9
    51dc:	vmovl.u16	q9, d24
    51e0:	vmovl.u8	q8, d28
    51e4:	strh	r1, [sp, #80]	; 0x50
    51e8:	vmovl.u8	q14, d29
    51ec:	ldrh	r1, [r4, #30]
    51f0:	sub	r2, pc, #744	; 0x2e8
    51f4:	sub	r3, pc, #732	; 0x2dc
    51f8:	vmovl.u16	q12, d26
    51fc:	vld1.16	{d26[0]}, [r0 :16]
    5200:	vshl.u64	q10, q0, q10
    5204:	add	r0, sp, #88	; 0x58
    5208:	vld1.64	{d0-d1}, [r3 :128]
    520c:	vld1.64	{d2-d3}, [r2 :128]
    5210:	vmovl.u32	q9, d18
    5214:	vmovl.u16	q8, d16
    5218:	vmovl.u16	q14, d28
    521c:	vmovl.u32	q12, d24
    5220:	strh	r1, [sp, #84]	; 0x54
    5224:	vorr	q10, q10, q15
    5228:	vmovl.u32	q8, d16
    522c:	ldrh	r1, [r4, #34]	; 0x22
    5230:	vmovl.u32	q14, d28
    5234:	vshl.u64	q11, q11, q0
    5238:	vshl.u64	q12, q12, q1
    523c:	vmovl.u8	q13, d26
    5240:	strh	r1, [sp, #76]	; 0x4c
    5244:	ldrh	r1, [r4, #36]	; 0x24
    5248:	sub	r2, pc, #800	; 0x320
    524c:	vld1.16	{d30[0]}, [r0 :16]
    5250:	add	r0, sp, #80	; 0x50
    5254:	vorr	q10, q11, q10
    5258:	vld1.16	{d31[0]}, [r0 :16]
    525c:	add	r0, sp, #84	; 0x54
    5260:	vld1.64	{d0-d1}, [r2 :128]
    5264:	vmovl.u16	q13, d26
    5268:	vld1.16	{d22[0]}, [r0 :16]
    526c:	add	r0, sp, #76	; 0x4c
    5270:	vld1.16	{d23[0]}, [r0 :16]
    5274:	add	r0, sp, #72	; 0x48
    5278:	vorr	q10, q12, q10
    527c:	strh	r1, [sp, #72]	; 0x48
    5280:	vmovl.u32	q13, d26
    5284:	ldrh	r1, [r4, #38]	; 0x26
    5288:	sub	r2, pc, #848	; 0x350
    528c:	vld1.64	{d24-d25}, [r2 :128]
    5290:	sub	r2, pc, #840	; 0x348
    5294:	sub	r3, pc, #828	; 0x33c
    5298:	sub	r6, pc, #816	; 0x330
    529c:	vld1.16	{d6[0]}, [r0 :16]
    52a0:	vshl.u64	q9, q9, q0
    52a4:	add	r0, sp, #68	; 0x44
    52a8:	vld1.64	{d4-d5}, [r6 :128]
    52ac:	vmovl.u8	q1, d30
    52b0:	strh	r1, [sp, #68]	; 0x44
    52b4:	vmovl.u8	q15, d31
    52b8:	ldrh	r6, [r4, #40]	; 0x28
    52bc:	ldrh	r1, [r4, #42]	; 0x2a
    52c0:	vorr	q9, q9, q10
    52c4:	vmovl.u8	q0, d22
    52c8:	vshl.u64	q12, q14, q12
    52cc:	vmovl.u16	q10, d2
    52d0:	vld1.64	{d28-d29}, [r3 :128]
    52d4:	vmovl.u8	q11, d23
    52d8:	vshl.u64	q1, q8, q2
    52dc:	vmovl.u16	q15, d30
    52e0:	vmovl.u16	q0, d0
    52e4:	strh	r6, [sp, #64]	; 0x40
    52e8:	vmovl.u16	q8, d22
    52ec:	vmovl.u32	q10, d20
    52f0:	vld1.16	{d4[0]}, [r0 :16]
    52f4:	vorr	q9, q12, q9
    52f8:	strh	r1, [sp, #60]	; 0x3c
    52fc:	vmovl.u8	q12, d6
    5300:	vld1.64	{d6-d7}, [r2 :128]
    5304:	add	r0, sp, #64	; 0x40
    5308:	ldrh	r1, [r4, #48]	; 0x30
    530c:	sub	r2, pc, #916	; 0x394
    5310:	sub	r3, pc, #904	; 0x388
    5314:	vshl.u64	q11, q13, q14
    5318:	vmovl.u32	q13, d30
    531c:	vld1.16	{d30[0]}, [r0 :16]
    5320:	add	r0, sp, #60	; 0x3c
    5324:	vmovl.u32	q0, d0
    5328:	vld1.64	{d28-d29}, [r3 :128]
    532c:	vmovl.u32	q8, d16
    5330:	vorr	q9, q1, q9
    5334:	vshl.u64	q13, q13, q3
    5338:	vorr	q11, q11, q9
    533c:	vmovl.u16	q9, d24
    5340:	vld1.16	{d24[0]}, [r0 :16]
    5344:	strh	r1, [sp, #48]	; 0x30
    5348:	add	r0, sp, #56	; 0x38
    534c:	vshl.u64	q10, q10, q14
    5350:	ldrh	r1, [r4, #46]	; 0x2e
    5354:	vmovl.u8	q1, d4
    5358:	vld1.64	{d4-d5}, [r2 :128]
    535c:	ldrh	r2, [r4, #44]	; 0x2c
    5360:	sub	r3, pc, #968	; 0x3c8
    5364:	vmovl.u8	q14, d30
    5368:	vmovl.u32	q9, d18
    536c:	vorr	q10, q10, q11
    5370:	vld1.64	{d22-d23}, [r3 :128]
    5374:	strh	r2, [sp, #56]	; 0x38
    5378:	strh	r1, [sp, #52]	; 0x34
    537c:	vmovl.u16	q14, d28
    5380:	vshl.u64	q15, q0, q2
    5384:	ldrh	r1, [r4, #50]	; 0x32
    5388:	vmovl.u16	q0, d2
    538c:	vmovl.u8	q12, d24
    5390:	vmovl.u32	q14, d28
    5394:	vshl.u64	q8, q8, q11
    5398:	vmovl.u32	q0, d0
    539c:	vorr	q10, q15, q10
    53a0:	vld1.16	{d30[0]}, [r0 :16]
    53a4:	strh	r1, [sp, #44]	; 0x2c
    53a8:	add	r0, sp, #48	; 0x30
    53ac:	vmovl.u16	q12, d24
    53b0:	vorr	q10, q13, q10
    53b4:	vld1.16	{d26[0]}, [r0 :16]
    53b8:	add	r1, pc, #672	; 0x2a0
    53bc:	add	r2, pc, #684	; 0x2ac
    53c0:	add	r3, pc, #696	; 0x2b8
    53c4:	add	r0, sp, #52	; 0x34
    53c8:	vld1.64	{d2-d3}, [r3 :128]
    53cc:	vld1.16	{d22[0]}, [r0 :16]
    53d0:	add	r0, sp, #44	; 0x2c
    53d4:	vld1.64	{d4-d5}, [r2 :128]
    53d8:	ldrh	r3, [r4, #52]	; 0x34
    53dc:	vld1.16	{d23[0]}, [r0 :16]
    53e0:	add	r0, sp, #40	; 0x28
    53e4:	vorr	q8, q8, q10
    53e8:	strh	r3, [sp, #40]	; 0x28
    53ec:	add	r2, pc, #668	; 0x29c
    53f0:	vmovl.u8	q15, d30
    53f4:	vshl.u64	q9, q9, q1
    53f8:	vld1.64	{d2-d3}, [r1 :128]
    53fc:	vshl.u64	q0, q0, q2
    5400:	vld1.64	{d6-d7}, [r2 :128]
    5404:	ldrh	r1, [r4, #56]	; 0x38
    5408:	ldrh	r2, [r4, #54]	; 0x36
    540c:	vmovl.u16	q15, d30
    5410:	vmovl.u8	q13, d26
    5414:	vmovl.u8	q10, d22
    5418:	vorr	q8, q9, q8
    541c:	vmovl.u8	q9, d23
    5420:	vmovl.u32	q11, d24
    5424:	vld1.16	{d24[0]}, [r0 :16]
    5428:	strh	r2, [sp, #36]	; 0x24
    542c:	strh	r1, [sp, #32]
    5430:	add	r0, sp, #36	; 0x24
    5434:	vshl.u64	q14, q14, q1
    5438:	ldrh	r1, [r4, #60]	; 0x3c
    543c:	ldrh	r2, [r4, #58]	; 0x3a
    5440:	add	r3, pc, #600	; 0x258
    5444:	vmovl.u32	q15, d30
    5448:	vmovl.u16	q13, d26
    544c:	vmovl.u16	q10, d20
    5450:	vorr	q8, q0, q8
    5454:	vld1.16	{d0[0]}, [r0 :16]
    5458:	vshl.u64	q11, q11, q3
    545c:	add	r0, sp, #32
    5460:	vmovl.u16	q9, d18
    5464:	vmovl.u32	q13, d26
    5468:	strh	r2, [sp, #28]
    546c:	add	r2, pc, #572	; 0x23c
    5470:	vmovl.u32	q10, d20
    5474:	vorr	q8, q14, q8
    5478:	vld1.64	{d28-d29}, [r3 :128]
    547c:	add	r3, pc, #572	; 0x23c
    5480:	vmovl.u32	q9, d18
    5484:	vld1.64	{d2-d3}, [r3 :128]
    5488:	vmovl.u8	q12, d24
    548c:	vorr	q8, q11, q8
    5490:	vld1.16	{d22[0]}, [r0 :16]
    5494:	strh	r1, [sp, #24]
    5498:	add	r1, sp, #28
    549c:	ldrh	r0, [r4, #62]	; 0x3e
    54a0:	vld1.16	{d23[0]}, [r1 :16]
    54a4:	vshl.u64	q14, q15, q14
    54a8:	vmovl.u8	q15, d0
    54ac:	vld1.64	{d0-d1}, [r2 :128]
    54b0:	vmovl.u16	q12, d24
    54b4:	vshl.u64	q10, q10, q1
    54b8:	strh	r0, [sp, #20]
    54bc:	add	r0, sp, #24
    54c0:	vmovl.u32	q12, d24
    54c4:	vmovl.u16	q15, d30
    54c8:	vorr	q8, q14, q8
    54cc:	vld1.16	{d28[0]}, [r0 :16]
    54d0:	add	r0, pc, #984	; 0x3d8
    54d4:	add	r1, pc, #996	; 0x3e4
    54d8:	vld1.64	{d4-d5}, [r1 :128]
    54dc:	vshl.u64	q13, q13, q0
    54e0:	vld1.64	{d0-d1}, [r0 :128]
    54e4:	add	r1, sp, #20
    54e8:	vmovl.u8	q1, d22
    54ec:	vmovl.u32	q15, d30
    54f0:	vorr	q8, q10, q8
    54f4:	vld1.16	{d20[0]}, [r1 :16]
    54f8:	add	r0, pc, #976	; 0x3d0
    54fc:	add	r1, pc, #988	; 0x3dc
    5500:	vmovl.u8	q11, d23
    5504:	vshl.u64	q9, q9, q2
    5508:	vorr	q8, q13, q8
    550c:	vshl.u64	q12, q12, q0
    5510:	vmovl.u16	q13, d2
    5514:	vld1.64	{d0-d1}, [r0 :128]
    5518:	vmovl.u16	q11, d22
    551c:	add	r0, pc, #972	; 0x3cc
    5520:	vmovl.u8	q14, d28
    5524:	vmovl.u32	q11, d22
    5528:	vorr	q8, q9, q8
    552c:	vld1.64	{d18-d19}, [r1 :128]
    5530:	add	r1, pc, #968	; 0x3c8
    5534:	add	r2, pc, #980	; 0x3d4
    5538:	vmovl.u8	q10, d20
    553c:	vmovl.u16	q14, d28
    5540:	vorr	q8, q12, q8
    5544:	vmovl.u32	q12, d26
    5548:	vld1.64	{d26-d27}, [r2 :128]
    554c:	vmovl.u16	q10, d20
    5550:	vmovl.u32	q14, d28
    5554:	vshl.u64	q9, q15, q9
    5558:	vld1.64	{d30-d31}, [r1 :128]
    555c:	vshl.u64	q12, q12, q0
    5560:	vmovl.u32	q10, d20
    5564:	vshl.u64	q11, q11, q13
    5568:	vorr	q8, q9, q8
    556c:	vld1.64	{d18-d19}, [r0 :128]
    5570:	ldr	r0, [fp, #8]
    5574:	vorr	q8, q12, q8
    5578:	vshl.u64	q12, q14, q15
    557c:	strb	ip, [r0]
    5580:	mvn	r0, #7
    5584:	vshl.u64	q9, q10, q9
    5588:	ldr	r3, [pc, #916]	; 5924 <promiscuous_packet_search@@Base+0xb04>
    558c:	ldr	r6, [pc, #916]	; 5928 <promiscuous_packet_search@@Base+0xb08>
    5590:	vorr	q8, q11, q8
    5594:	vorr	q8, q12, q8
    5598:	add	r3, pc, r3
    559c:	add	r6, pc, r6
    55a0:	vorr	q8, q9, q8
    55a4:	vext.8	q9, q8, q8, #8
    55a8:	vorr	q8, q8, q9
    55ac:	vmov.32	r1, d16[1]
    55b0:	and	r2, r0, r1, lsr #22
    55b4:	bic	r1, r1, #-33554432	; 0xfe000000
    55b8:	ldr	r2, [r3, r2]!
    55bc:	ldr	r3, [r3, #4]
    55c0:	orr	sl, r3, r1
    55c4:	movw	r1, #36246	; 0x8d96
    55c8:	movt	r1, #33668	; 0x8384
    55cc:	lsr	r4, sl, #2
    55d0:	eor	r1, sl, r1
    55d4:	ubfx	r5, r1, #8, #8
    55d8:	ldr	r7, [pc, #844]	; 592c <promiscuous_packet_search@@Base+0xb0c>
    55dc:	uxtb	r3, r1
    55e0:	ldr	r3, [r6, r3, lsl #3]!
    55e4:	add	r7, pc, r7
    55e8:	ldr	r5, [r7, r5, lsl #3]!
    55ec:	ldr	r7, [r7, #4]
    55f0:	eor	r3, r5, r3
    55f4:	vmov.32	r5, d16[0]
    55f8:	orr	r2, r2, r5
    55fc:	eor	r2, r2, r3
    5600:	ubfx	r3, r1, #16, #8
    5604:	ldr	r5, [pc, #804]	; 5930 <promiscuous_packet_search@@Base+0xb10>
    5608:	and	r1, r0, r1, lsr #21
    560c:	movw	r0, #21756	; 0x54fc
    5610:	movt	r0, #48076	; 0xbbcc
    5614:	add	r5, pc, r5
    5618:	ldr	r3, [r5, r3, lsl #3]!
    561c:	eor	r2, r2, r3
    5620:	ldr	r3, [pc, #780]	; 5934 <promiscuous_packet_search@@Base+0xb14>
    5624:	add	r3, pc, r3
    5628:	ldr	r1, [r3, r1]!
    562c:	ldr	r3, [r3, #4]
    5630:	eor	r1, r2, r1
    5634:	ldr	r2, [r6, #4]
    5638:	eor	r1, r1, r0
    563c:	eor	r2, r7, r2
    5640:	ldr	r7, [r5, #4]
    5644:	eor	r2, r2, r7
    5648:	eor	r2, r2, r3
    564c:	orrs	r3, r1, r2
    5650:	beq	4fbc <promiscuous_packet_search@@Base+0x19c>
    5654:	b	56d0 <promiscuous_packet_search@@Base+0x8b0>
    5658:	nop	{0}
    565c:	nop	{0}
    5660:	andeq	r0, r0, r8, lsr #32
    5664:	andeq	r0, r0, r0
    5668:	andeq	r0, r0, r9, lsr #32
    566c:	andeq	r0, r0, r0
    5670:	andeq	r0, r0, r6, lsr #32
    5674:	andeq	r0, r0, r0
    5678:	andeq	r0, r0, r7, lsr #32
    567c:	andeq	r0, r0, r0
    5680:	andeq	r0, r0, r4, lsr #32
    5684:	andeq	r0, r0, r0
    5688:	andeq	r0, r0, r5, lsr #32
    568c:	andeq	r0, r0, r0
    5690:	andeq	r0, r0, sl, lsr #32
    5694:	andeq	r0, r0, r0
    5698:	andeq	r0, r0, fp, lsr #32
    569c:	andeq	r0, r0, r0
    56a0:	andeq	r0, r0, ip, lsr #32
    56a4:	andeq	r0, r0, r0
    56a8:	andeq	r0, r0, sp, lsr #32
    56ac:	andeq	r0, r0, r0
    56b0:	andeq	r0, r0, r0, lsr r0
    56b4:	andeq	r0, r0, r0
    56b8:	andeq	r0, r0, r1, lsr r0
    56bc:	andeq	r0, r0, r0
    56c0:	andeq	r0, r0, lr, lsr #32
    56c4:	andeq	r0, r0, r0
    56c8:	andeq	r0, r0, pc, lsr #32
    56cc:	andeq	r0, r0, r0
    56d0:	str	r1, [fp, #-40]	; 0xffffffd8
    56d4:	str	r2, [fp, #-36]	; 0xffffffdc
    56d8:	ldr	r0, [pc, #600]	; 5938 <promiscuous_packet_search@@Base+0xb18>
    56dc:	ldr	r0, [pc, r0]
    56e0:	cmp	r0, #0
    56e4:	beq	4fb0 <promiscuous_packet_search@@Base+0x190>
    56e8:	movw	r3, #31161	; 0x79b9
    56ec:	movw	r7, #48887	; 0xbef7
    56f0:	movt	r3, #40503	; 0x9e37
    56f4:	movt	r7, #65261	; 0xfeed
    56f8:	add	r2, r2, r3
    56fc:	movw	r3, #47810	; 0xbac2
    5700:	movt	r3, #40777	; 0x9f49
    5704:	sub	r1, r1, r2
    5708:	add	r1, r1, r3
    570c:	movw	r3, #63341	; 0xf76d
    5710:	movt	r3, #7
    5714:	eor	r1, r1, r3
    5718:	movw	r3, #16649	; 0x4109
    571c:	movt	r3, #274	; 0x112
    5720:	sub	r2, r2, r1
    5724:	add	r2, r2, r3
    5728:	eor	r2, r2, r1, lsl #8
    572c:	add	r3, r1, r2
    5730:	sub	r1, r1, r2
    5734:	sub	r3, r7, r3
    5738:	sub	r7, fp, #40	; 0x28
    573c:	eor	r3, r3, r2, lsr #13
    5740:	sub	r1, r1, r3
    5744:	sub	r2, r2, r3
    5748:	eor	r1, r1, r3, lsr #12
    574c:	sub	r2, r2, r1
    5750:	sub	r3, r3, r1
    5754:	eor	r2, r2, r1, lsl #16
    5758:	sub	r3, r3, r2
    575c:	sub	r1, r1, r2
    5760:	eor	r3, r3, r2, lsr #5
    5764:	sub	r1, r1, r3
    5768:	sub	r2, r2, r3
    576c:	eor	r1, r1, r3, lsr #3
    5770:	sub	r2, r2, r1
    5774:	eor	r2, r2, r1, lsl #10
    5778:	sub	r1, r3, r1
    577c:	sub	r1, r1, r2
    5780:	eor	r2, r1, r2, lsr #15
    5784:	ldr	r1, [r0, #16]
    5788:	ldm	r1, {r0, r3}
    578c:	sub	r3, r3, #1
    5790:	and	r2, r3, r2
    5794:	add	r2, r2, r2, lsl #1
    5798:	ldr	r0, [r0, r2, lsl #2]
    579c:	cmp	r0, #0
    57a0:	beq	4fb0 <promiscuous_packet_search@@Base+0x190>
    57a4:	ldr	r1, [r1, #20]
    57a8:	rsb	r5, r1, #0
    57ac:	add	r6, r0, r5
    57b0:	ldr	r0, [r6, #40]	; 0x28
    57b4:	cmp	r0, #8
    57b8:	beq	57d8 <promiscuous_packet_search@@Base+0x9b8>
    57bc:	ldr	r0, [r6, #32]
    57c0:	cmp	r0, #0
    57c4:	beq	4fb0 <promiscuous_packet_search@@Base+0x190>
    57c8:	add	r6, r0, r5
    57cc:	ldr	r0, [r6, #40]	; 0x28
    57d0:	cmp	r0, #8
    57d4:	bne	57bc <promiscuous_packet_search@@Base+0x99c>
    57d8:	ldr	r0, [r6, #36]	; 0x24
    57dc:	mov	r1, r7
    57e0:	mov	r2, #8
    57e4:	bl	46a0 <bcmp@plt>
    57e8:	cmp	r0, #0
    57ec:	bne	57bc <promiscuous_packet_search@@Base+0x99c>
    57f0:	ldrd	r0, [r6, #8]
    57f4:	movw	r2, #21845	; 0x5555
    57f8:	movw	r3, #13107	; 0x3333
    57fc:	movt	r2, #21845	; 0x5555
    5800:	movt	r3, #13107	; 0x3333
    5804:	mov	r7, r2
    5808:	mov	r6, r3
    580c:	and	r2, r2, r1, lsr #1
    5810:	sub	r2, r1, r2
    5814:	eor	r1, r1, sl
    5818:	and	r3, r3, r2, lsr #2
    581c:	and	r2, r2, r6
    5820:	add	r2, r2, r3
    5824:	movw	r3, #3855	; 0xf0f
    5828:	movt	r3, #3855	; 0xf0f
    582c:	add	r2, r2, r2, lsr #4
    5830:	mov	r5, r3
    5834:	and	r2, r2, r3
    5838:	movw	r3, #257	; 0x101
    583c:	movt	r3, #257	; 0x101
    5840:	mov	r4, r3
    5844:	mul	r2, r2, r3
    5848:	and	r3, r7, r0, lsr #1
    584c:	sub	r0, r0, r3
    5850:	and	r3, r6, r0, lsr #2
    5854:	and	r0, r0, r6
    5858:	add	r0, r0, r3
    585c:	add	r0, r0, r0, lsr #4
    5860:	and	r0, r0, r5
    5864:	mul	r0, r0, r4
    5868:	lsr	r4, r1, #2
    586c:	lsr	r0, r0, #24
    5870:	add	ip, r0, r2, lsr #24
    5874:	ldr	r0, [fp, #8]
    5878:	b	4fb8 <promiscuous_packet_search@@Base+0x198>
    587c:	mvn	r9, #0
    5880:	mov	r0, r9
    5884:	sub	sp, fp, #28
    5888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    588c:	ldr	r1, [sp]
    5890:	bic	r0, r4, #-16777216	; 0xff000000
    5894:	str	r0, [r1]
    5898:	mov	r0, r9
    589c:	sub	sp, fp, #28
    58a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    58a4:	nop	{0}
    58a8:	nop	{0}
    58ac:	nop	{0}
    58b0:	andeq	r0, r0, r4, lsr r0
    58b4:	andeq	r0, r0, r0
    58b8:	andeq	r0, r0, r5, lsr r0
    58bc:	andeq	r0, r0, r0
    58c0:	andeq	r0, r0, r2, lsr r0
    58c4:	andeq	r0, r0, r0
    58c8:	andeq	r0, r0, r3, lsr r0
    58cc:	andeq	r0, r0, r0
    58d0:	andeq	r0, r0, r8, lsr r0
    58d4:	andeq	r0, r0, r0
    58d8:	andeq	r0, r0, r9, lsr r0
    58dc:	andeq	r0, r0, r0
    58e0:	andeq	r0, r0, r6, lsr r0
    58e4:	andeq	r0, r0, r0
    58e8:	andeq	r0, r0, r7, lsr r0
    58ec:	andeq	r0, r0, r0
    58f0:	andeq	r0, r0, lr, lsr r0
    58f4:	andeq	r0, r0, r0
    58f8:	andeq	r0, r0, pc, lsr r0
    58fc:	andeq	r0, r0, r0
    5900:	andeq	r0, r0, ip, lsr r0
    5904:	andeq	r0, r0, r0
    5908:	andeq	r0, r0, sp, lsr r0
    590c:	andeq	r0, r0, r0
    5910:	andeq	r0, r0, sl, lsr r0
    5914:	andeq	r0, r0, r0
    5918:	andeq	r0, r0, fp, lsr r0
    591c:	andeq	r0, r0, r0
    5920:	andeq	lr, r0, r8, lsl r7
    5924:	andeq	lr, r0, r8, ror r0
    5928:	andeq	lr, r0, r4, ror r4
    592c:	andeq	lr, r0, ip, lsr #24
    5930:	strdeq	pc, [r0], -ip
    5934:	andeq	pc, r0, ip, ror #23
    5938:	andeq	r7, r2, r8, ror #20
    593c:	andeq	lr, r0, r4, asr #11

00005940 <find_known_lap@@Base>:
    5940:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5944:	add	fp, sp, #28
    5948:	sub	sp, sp, #148	; 0x94
    594c:	str	r0, [sp, #12]
    5950:	mov	r0, r2
    5954:	str	r3, [sp, #16]
    5958:	mov	r8, r1
    595c:	bl	4604 <btbb_gen_syncword@plt>
    5960:	str	r0, [sp, #8]
    5964:	mvn	r0, #0
    5968:	cmp	r8, #1
    596c:	str	r1, [sp, #4]
    5970:	blt	60b8 <find_known_lap@@Base+0x778>
    5974:	movw	r1, #21845	; 0x5555
    5978:	movw	ip, #13107	; 0x3333
    597c:	movw	sl, #3855	; 0xf0f
    5980:	movw	lr, #257	; 0x101
    5984:	mov	r3, #0
    5988:	movt	r1, #21845	; 0x5555
    598c:	movt	ip, #13107	; 0x3333
    5990:	movt	sl, #3855	; 0xf0f
    5994:	movt	lr, #257	; 0x101
    5998:	ldr	r6, [sp, #12]
    599c:	add	r0, sp, #20
    59a0:	ldrh	r9, [r6, r3]!
    59a4:	strh	r9, [sp, #20]
    59a8:	ldrh	r4, [r6, #2]
    59ac:	strh	r4, [fp, #-32]	; 0xffffffe0
    59b0:	ldrh	r7, [r6, #4]
    59b4:	vld1.16	{d16[0]}, [r0 :16]
    59b8:	ldrh	r4, [r6, #12]
    59bc:	ldrh	r2, [r6, #6]
    59c0:	sub	r0, fp, #32
    59c4:	strh	r7, [fp, #-36]	; 0xffffffdc
    59c8:	ldrh	r7, [r6, #10]
    59cc:	vmovl.u8	q10, d16
    59d0:	strh	r7, [fp, #-48]	; 0xffffffd0
    59d4:	vld1.16	{d17[0]}, [r0 :16]
    59d8:	strh	r2, [fp, #-40]	; 0xffffffd8
    59dc:	sub	r0, fp, #36	; 0x24
    59e0:	ldrh	r2, [r6, #8]
    59e4:	vld1.16	{d18[0]}, [r0 :16]
    59e8:	sub	r0, fp, #48	; 0x30
    59ec:	vmovl.u16	q10, d20
    59f0:	vmovl.u32	q10, d20
    59f4:	strh	r2, [fp, #-44]	; 0xffffffd4
    59f8:	strh	r4, [fp, #-52]	; 0xffffffcc
    59fc:	vld1.16	{d16[0]}, [r0 :16]
    5a00:	sub	r0, fp, #40	; 0x28
    5a04:	ldrh	r2, [r6, #14]
    5a08:	vld1.16	{d22[0]}, [r0 :16]
    5a0c:	sub	r0, fp, #44	; 0x2c
    5a10:	vmovl.u8	q12, d17
    5a14:	vld1.16	{d17[0]}, [r0 :16]
    5a18:	sub	r0, fp, #52	; 0x34
    5a1c:	vld1.16	{d23[0]}, [r0 :16]
    5a20:	vmovl.u8	q13, d18
    5a24:	strh	r2, [fp, #-56]	; 0xffffffc8
    5a28:	vmovl.u16	q12, d24
    5a2c:	ldrh	r2, [r6, #20]
    5a30:	ldrh	r4, [r6, #16]
    5a34:	add	r7, pc, #964	; 0x3c4
    5a38:	add	r0, pc, #976	; 0x3d0
    5a3c:	add	r5, pc, #988	; 0x3dc
    5a40:	vld1.64	{d0-d1}, [r0 :128]
    5a44:	vld1.64	{d4-d5}, [r7 :128]
    5a48:	vmovl.u8	q9, d16
    5a4c:	vmovl.u32	q12, d24
    5a50:	vmovl.u8	q14, d22
    5a54:	strh	r4, [fp, #-60]	; 0xffffffc4
    5a58:	add	r0, pc, #976	; 0x3d0
    5a5c:	sub	r4, fp, #56	; 0x38
    5a60:	vmovl.u8	q15, d17
    5a64:	vld1.16	{d2[0]}, [r4 :16]
    5a68:	vmovl.u8	q8, d23
    5a6c:	vmovl.u16	q11, d26
    5a70:	vld1.64	{d26-d27}, [r5 :128]
    5a74:	vshl.u64	q12, q12, q0
    5a78:	vmovl.u16	q9, d18
    5a7c:	sub	r5, fp, #68	; 0x44
    5a80:	vmovl.u16	q14, d28
    5a84:	vmovl.u16	q15, d30
    5a88:	vmovl.u32	q11, d22
    5a8c:	vmovl.u32	q9, d18
    5a90:	vmovl.u16	q8, d16
    5a94:	vmovl.u32	q14, d28
    5a98:	vshl.u64	q10, q10, q13
    5a9c:	vld1.64	{d26-d27}, [r0 :128]
    5aa0:	sub	r0, fp, #60	; 0x3c
    5aa4:	vmovl.u32	q15, d30
    5aa8:	vld1.16	{d0[0]}, [r0 :16]
    5aac:	strh	r2, [fp, #-68]	; 0xffffffbc
    5ab0:	vshl.u64	q11, q11, q2
    5ab4:	vmovl.u32	q8, d16
    5ab8:	ldrh	r0, [r6, #18]
    5abc:	add	r2, pc, #892	; 0x37c
    5ac0:	vmovl.u8	q1, d2
    5ac4:	vorr	q10, q12, q10
    5ac8:	vld1.64	{d24-d25}, [r2 :128]
    5acc:	vshl.u64	q13, q14, q13
    5ad0:	vmovl.u16	q1, d2
    5ad4:	strh	r0, [fp, #-64]	; 0xffffffc0
    5ad8:	add	r0, pc, #880	; 0x370
    5adc:	ldrh	r2, [r6, #24]
    5ae0:	vorr	q10, q11, q10
    5ae4:	vld1.64	{d28-d29}, [r0 :128]
    5ae8:	ldrh	r0, [r6, #22]
    5aec:	add	r4, pc, #876	; 0x36c
    5af0:	vshl.u64	q12, q15, q12
    5af4:	vmovl.u8	q11, d0
    5af8:	vld1.16	{d0[0]}, [r5 :16]
    5afc:	sub	r5, fp, #64	; 0x40
    5b00:	vld1.64	{d30-d31}, [r4 :128]
    5b04:	vorr	q10, q13, q10
    5b08:	vld1.16	{d26[0]}, [r5 :16]
    5b0c:	strh	r2, [fp, #-76]	; 0xffffffb4
    5b10:	sub	r5, fp, #76	; 0x4c
    5b14:	strh	r0, [fp, #-72]	; 0xffffffb8
    5b18:	vshl.u64	q9, q9, q14
    5b1c:	ldrh	r0, [r6, #28]
    5b20:	ldrh	r2, [r6, #26]
    5b24:	add	r4, pc, #836	; 0x344
    5b28:	vld1.16	{d28[0]}, [r5 :16]
    5b2c:	vmovl.u16	q11, d22
    5b30:	sub	r5, fp, #80	; 0x50
    5b34:	vorr	q10, q12, q10
    5b38:	vshl.u64	q15, q8, q15
    5b3c:	vmovl.u32	q11, d22
    5b40:	vorr	q9, q9, q10
    5b44:	vld1.64	{d20-d21}, [r4 :128]
    5b48:	sub	r4, fp, #72	; 0x48
    5b4c:	vld1.16	{d29[0]}, [r4 :16]
    5b50:	strh	r2, [fp, #-80]	; 0xffffffb0
    5b54:	strh	r0, [fp, #-84]	; 0xffffffac
    5b58:	vmovl.u8	q12, d0
    5b5c:	vmovl.u32	q0, d2
    5b60:	ldrh	r0, [r6, #32]
    5b64:	vmovl.u8	q13, d26
    5b68:	vorr	q15, q15, q9
    5b6c:	vmovl.u16	q9, d24
    5b70:	vmovl.u8	q8, d28
    5b74:	vmovl.u16	q12, d26
    5b78:	vshl.u64	q10, q0, q10
    5b7c:	strh	r0, [sp, #84]	; 0x54
    5b80:	ldrh	r0, [r6, #30]
    5b84:	add	r2, pc, #756	; 0x2f4
    5b88:	add	r4, pc, #768	; 0x300
    5b8c:	vld1.16	{d26[0]}, [r5 :16]
    5b90:	vmovl.u32	q9, d18
    5b94:	vmovl.u16	q8, d16
    5b98:	vld1.64	{d0-d1}, [r4 :128]
    5b9c:	vld1.64	{d2-d3}, [r2 :128]
    5ba0:	vmovl.u32	q12, d24
    5ba4:	sub	r4, fp, #84	; 0x54
    5ba8:	vorr	q10, q10, q15
    5bac:	vmovl.u8	q14, d29
    5bb0:	vmovl.u32	q8, d16
    5bb4:	strh	r0, [sp, #88]	; 0x58
    5bb8:	ldrh	r0, [r6, #34]	; 0x22
    5bbc:	vmovl.u16	q14, d28
    5bc0:	vshl.u64	q11, q11, q0
    5bc4:	vshl.u64	q12, q12, q1
    5bc8:	vmovl.u8	q13, d26
    5bcc:	vmovl.u32	q14, d28
    5bd0:	strh	r0, [sp, #80]	; 0x50
    5bd4:	ldrh	r0, [r6, #36]	; 0x24
    5bd8:	add	r2, pc, #704	; 0x2c0
    5bdc:	vld1.16	{d30[0]}, [r4 :16]
    5be0:	vorr	q10, q11, q10
    5be4:	add	r4, sp, #84	; 0x54
    5be8:	vld1.64	{d0-d1}, [r2 :128]
    5bec:	add	r2, sp, #88	; 0x58
    5bf0:	vld1.16	{d31[0]}, [r4 :16]
    5bf4:	vmovl.u16	q13, d26
    5bf8:	vld1.16	{d22[0]}, [r2 :16]
    5bfc:	add	r2, sp, #80	; 0x50
    5c00:	vld1.16	{d23[0]}, [r2 :16]
    5c04:	vorr	q10, q12, q10
    5c08:	strh	r0, [sp, #76]	; 0x4c
    5c0c:	vmovl.u32	q13, d26
    5c10:	ldrh	r0, [r6, #38]	; 0x26
    5c14:	add	r2, pc, #660	; 0x294
    5c18:	vld1.64	{d24-d25}, [r2 :128]
    5c1c:	add	r2, pc, #668	; 0x29c
    5c20:	add	r4, pc, #680	; 0x2a8
    5c24:	add	r5, pc, #692	; 0x2b4
    5c28:	vshl.u64	q9, q9, q0
    5c2c:	vld1.64	{d4-d5}, [r5 :128]
    5c30:	add	r5, sp, #76	; 0x4c
    5c34:	vld1.16	{d6[0]}, [r5 :16]
    5c38:	vmovl.u8	q1, d30
    5c3c:	strh	r0, [sp, #72]	; 0x48
    5c40:	vmovl.u8	q15, d31
    5c44:	ldrh	r5, [r6, #40]	; 0x28
    5c48:	ldrh	r0, [r6, #42]	; 0x2a
    5c4c:	vorr	q9, q9, q10
    5c50:	vmovl.u8	q0, d22
    5c54:	vshl.u64	q12, q14, q12
    5c58:	vld1.64	{d28-d29}, [r4 :128]
    5c5c:	add	r4, sp, #72	; 0x48
    5c60:	vmovl.u16	q10, d2
    5c64:	vmovl.u8	q11, d23
    5c68:	vshl.u64	q1, q8, q2
    5c6c:	vmovl.u16	q15, d30
    5c70:	vmovl.u16	q0, d0
    5c74:	strh	r5, [sp, #68]	; 0x44
    5c78:	vmovl.u16	q8, d22
    5c7c:	vmovl.u32	q10, d20
    5c80:	add	r5, sp, #56	; 0x38
    5c84:	vld1.16	{d4[0]}, [r4 :16]
    5c88:	strh	r0, [sp, #64]	; 0x40
    5c8c:	vorr	q9, q12, q9
    5c90:	vmovl.u8	q12, d6
    5c94:	vld1.64	{d6-d7}, [r2 :128]
    5c98:	ldrh	r0, [r6, #48]	; 0x30
    5c9c:	add	r2, pc, #588	; 0x24c
    5ca0:	add	r4, pc, #600	; 0x258
    5ca4:	vshl.u64	q11, q13, q14
    5ca8:	vmovl.u32	q13, d30
    5cac:	vmovl.u32	q0, d0
    5cb0:	vld1.64	{d28-d29}, [r4 :128]
    5cb4:	add	r4, sp, #68	; 0x44
    5cb8:	vmovl.u32	q8, d16
    5cbc:	vld1.16	{d30[0]}, [r4 :16]
    5cc0:	vorr	q9, q1, q9
    5cc4:	vorr	q11, q11, q9
    5cc8:	vmovl.u16	q9, d24
    5ccc:	vshl.u64	q13, q13, q3
    5cd0:	vshl.u64	q10, q10, q14
    5cd4:	vmovl.u8	q1, d4
    5cd8:	vld1.64	{d4-d5}, [r2 :128]
    5cdc:	add	r2, sp, #64	; 0x40
    5ce0:	vld1.16	{d24[0]}, [r2 :16]
    5ce4:	strh	r0, [sp, #52]	; 0x34
    5ce8:	vmovl.u32	q9, d18
    5cec:	ldrh	r0, [r6, #46]	; 0x2e
    5cf0:	ldrh	r2, [r6, #44]	; 0x2c
    5cf4:	add	r4, pc, #980	; 0x3d4
    5cf8:	vmovl.u8	q14, d30
    5cfc:	vorr	q10, q10, q11
    5d00:	vld1.64	{d22-d23}, [r4 :128]
    5d04:	vshl.u64	q15, q0, q2
    5d08:	vmovl.u16	q0, d2
    5d0c:	strh	r2, [sp, #60]	; 0x3c
    5d10:	strh	r0, [sp, #56]	; 0x38
    5d14:	add	r2, sp, #60	; 0x3c
    5d18:	vmovl.u16	q14, d28
    5d1c:	ldrh	r0, [r6, #50]	; 0x32
    5d20:	vshl.u64	q8, q8, q11
    5d24:	vmovl.u32	q0, d0
    5d28:	vorr	q10, q15, q10
    5d2c:	vld1.16	{d30[0]}, [r2 :16]
    5d30:	vmovl.u8	q12, d24
    5d34:	vmovl.u32	q14, d28
    5d38:	strh	r0, [sp, #48]	; 0x30
    5d3c:	add	r0, sp, #52	; 0x34
    5d40:	vorr	q10, q13, q10
    5d44:	vld1.16	{d26[0]}, [r0 :16]
    5d48:	add	r0, pc, #912	; 0x390
    5d4c:	add	r2, pc, #924	; 0x39c
    5d50:	add	r4, pc, #936	; 0x3a8
    5d54:	vld1.16	{d22[0]}, [r5 :16]
    5d58:	vmovl.u16	q12, d24
    5d5c:	vld1.64	{d2-d3}, [r4 :128]
    5d60:	vld1.64	{d4-d5}, [r2 :128]
    5d64:	add	r2, sp, #48	; 0x30
    5d68:	ldrh	r4, [r6, #52]	; 0x34
    5d6c:	vld1.16	{d23[0]}, [r2 :16]
    5d70:	vorr	q8, q8, q10
    5d74:	strh	r4, [sp, #44]	; 0x2c
    5d78:	add	r2, pc, #912	; 0x390
    5d7c:	add	r4, sp, #44	; 0x2c
    5d80:	vmovl.u8	q15, d30
    5d84:	vshl.u64	q9, q9, q1
    5d88:	vld1.64	{d2-d3}, [r0 :128]
    5d8c:	vshl.u64	q0, q0, q2
    5d90:	vld1.64	{d6-d7}, [r2 :128]
    5d94:	ldrh	r0, [r6, #56]	; 0x38
    5d98:	ldrh	r2, [r6, #54]	; 0x36
    5d9c:	vmovl.u8	q10, d22
    5da0:	vmovl.u16	q15, d30
    5da4:	vmovl.u8	q13, d26
    5da8:	vorr	q8, q9, q8
    5dac:	vmovl.u8	q9, d23
    5db0:	vmovl.u32	q11, d24
    5db4:	vld1.16	{d24[0]}, [r4 :16]
    5db8:	strh	r2, [sp, #40]	; 0x28
    5dbc:	strh	r0, [sp, #36]	; 0x24
    5dc0:	vshl.u64	q14, q14, q1
    5dc4:	ldrh	r0, [r6, #60]	; 0x3c
    5dc8:	ldrh	r2, [r6, #58]	; 0x3a
    5dcc:	add	r4, pc, #844	; 0x34c
    5dd0:	vmovl.u32	q15, d30
    5dd4:	vmovl.u16	q10, d20
    5dd8:	vmovl.u16	q13, d26
    5ddc:	vorr	q8, q0, q8
    5de0:	vshl.u64	q11, q11, q3
    5de4:	vmovl.u16	q9, d18
    5de8:	vmovl.u32	q10, d20
    5dec:	vmovl.u32	q13, d26
    5df0:	vorr	q8, q14, q8
    5df4:	vld1.64	{d28-d29}, [r4 :128]
    5df8:	add	r4, sp, #40	; 0x28
    5dfc:	b	5f10 <find_known_lap@@Base+0x5d0>
    5e00:	andeq	r0, r0, r4
    5e04:	andeq	r0, r0, r0
    5e08:	andeq	r0, r0, r5
    5e0c:	andeq	r0, r0, r0
    5e10:	andeq	r0, r0, r2
    5e14:	andeq	r0, r0, r0
    5e18:	andeq	r0, r0, r3
	...
    5e28:	andeq	r0, r0, r1
    5e2c:	andeq	r0, r0, r0
    5e30:	andeq	r0, r0, r6
    5e34:	andeq	r0, r0, r0
    5e38:	andeq	r0, r0, r7
    5e3c:	andeq	r0, r0, r0
    5e40:	andeq	r0, r0, r8
    5e44:	andeq	r0, r0, r0
    5e48:	andeq	r0, r0, r9
    5e4c:	andeq	r0, r0, r0
    5e50:	andeq	r0, r0, sl
    5e54:	andeq	r0, r0, r0
    5e58:	andeq	r0, r0, fp
    5e5c:	andeq	r0, r0, r0
    5e60:	andeq	r0, r0, ip
    5e64:	andeq	r0, r0, r0
    5e68:	andeq	r0, r0, sp
    5e6c:	andeq	r0, r0, r0
    5e70:	andeq	r0, r0, lr
    5e74:	andeq	r0, r0, r0
    5e78:	andeq	r0, r0, pc
    5e7c:	andeq	r0, r0, r0
    5e80:	andeq	r0, r0, r2, lsl r0
    5e84:	andeq	r0, r0, r0
    5e88:	andeq	r0, r0, r3, lsl r0
    5e8c:	andeq	r0, r0, r0
    5e90:	andeq	r0, r0, r0, lsl r0
    5e94:	andeq	r0, r0, r0
    5e98:	andeq	r0, r0, r1, lsl r0
    5e9c:	andeq	r0, r0, r0
    5ea0:	andeq	r0, r0, r4, lsl r0
    5ea4:	andeq	r0, r0, r0
    5ea8:	andeq	r0, r0, r5, lsl r0
    5eac:	andeq	r0, r0, r0
    5eb0:	andeq	r0, r0, r6, lsl r0
    5eb4:	andeq	r0, r0, r0
    5eb8:	andeq	r0, r0, r7, lsl r0
    5ebc:	andeq	r0, r0, r0
    5ec0:	andeq	r0, r0, r0, lsr #32
    5ec4:	andeq	r0, r0, r0
    5ec8:	andeq	r0, r0, r1, lsr #32
    5ecc:	andeq	r0, r0, r0
    5ed0:	andeq	r0, r0, sl, lsl r0
    5ed4:	andeq	r0, r0, r0
    5ed8:	andeq	r0, r0, fp, lsl r0
    5edc:	andeq	r0, r0, r0
    5ee0:	andeq	r0, r0, r8, lsl r0
    5ee4:	andeq	r0, r0, r0
    5ee8:	andeq	r0, r0, r9, lsl r0
    5eec:	andeq	r0, r0, r0
    5ef0:	andeq	r0, r0, lr, lsl r0
    5ef4:	andeq	r0, r0, r0
    5ef8:	andeq	r0, r0, pc, lsl r0
    5efc:	andeq	r0, r0, r0
    5f00:	andeq	r0, r0, ip, lsl r0
    5f04:	andeq	r0, r0, r0
    5f08:	andeq	r0, r0, sp, lsl r0
    5f0c:	andeq	r0, r0, r0
    5f10:	vmovl.u32	q9, d18
    5f14:	vld1.16	{d0[0]}, [r4 :16]
    5f18:	strh	r2, [sp, #32]
    5f1c:	add	r2, pc, #524	; 0x20c
    5f20:	add	r4, pc, #536	; 0x218
    5f24:	vld1.64	{d2-d3}, [r4 :128]
    5f28:	add	r4, sp, #36	; 0x24
    5f2c:	vmovl.u8	q12, d24
    5f30:	vorr	q8, q11, q8
    5f34:	vld1.16	{d22[0]}, [r4 :16]
    5f38:	strh	r0, [sp, #28]
    5f3c:	add	r4, sp, #32
    5f40:	ldrh	r0, [r6, #62]	; 0x3e
    5f44:	vld1.16	{d23[0]}, [r4 :16]
    5f48:	vshl.u64	q14, q15, q14
    5f4c:	vmovl.u16	q12, d24
    5f50:	vshl.u64	q10, q10, q1
    5f54:	strh	r0, [sp, #24]
    5f58:	add	r0, sp, #28
    5f5c:	vmovl.u32	q12, d24
    5f60:	vmovl.u8	q15, d0
    5f64:	vld1.64	{d0-d1}, [r2 :128]
    5f68:	vorr	q8, q14, q8
    5f6c:	vld1.16	{d28[0]}, [r0 :16]
    5f70:	add	r0, pc, #472	; 0x1d8
    5f74:	add	r2, pc, #484	; 0x1e4
    5f78:	vld1.64	{d4-d5}, [r2 :128]
    5f7c:	add	r2, sp, #24
    5f80:	vmovl.u8	q1, d22
    5f84:	vorr	q8, q10, q8
    5f88:	vld1.16	{d20[0]}, [r2 :16]
    5f8c:	vmovl.u16	q15, d30
    5f90:	vmovl.u8	q11, d23
    5f94:	vshl.u64	q13, q13, q0
    5f98:	vld1.64	{d0-d1}, [r0 :128]
    5f9c:	add	r0, pc, #460	; 0x1cc
    5fa0:	add	r2, pc, #472	; 0x1d8
    5fa4:	vshl.u64	q9, q9, q2
    5fa8:	vmovl.u32	q15, d30
    5fac:	vmovl.u16	q11, d22
    5fb0:	vmovl.u8	q14, d28
    5fb4:	vorr	q8, q13, q8
    5fb8:	vmovl.u16	q13, d2
    5fbc:	vmovl.u32	q11, d22
    5fc0:	vshl.u64	q12, q12, q0
    5fc4:	vld1.64	{d0-d1}, [r0 :128]
    5fc8:	add	r0, pc, #448	; 0x1c0
    5fcc:	vmovl.u8	q10, d20
    5fd0:	vmovl.u16	q14, d28
    5fd4:	vorr	q8, q9, q8
    5fd8:	vld1.64	{d18-d19}, [r2 :128]
    5fdc:	add	r2, pc, #444	; 0x1bc
    5fe0:	add	r4, pc, #456	; 0x1c8
    5fe4:	vmovl.u16	q10, d20
    5fe8:	vmovl.u32	q14, d28
    5fec:	vorr	q8, q12, q8
    5ff0:	vmovl.u32	q12, d26
    5ff4:	vld1.64	{d26-d27}, [r4 :128]
    5ff8:	ldr	r4, [sp, #8]
    5ffc:	vshl.u64	q9, q15, q9
    6000:	vld1.64	{d30-d31}, [r2 :128]
    6004:	vmovl.u32	q10, d20
    6008:	ldr	r2, [sp, #4]
    600c:	vshl.u64	q12, q12, q0
    6010:	vshl.u64	q11, q11, q13
    6014:	vorr	q8, q9, q8
    6018:	vld1.64	{d18-d19}, [r0 :128]
    601c:	vorr	q8, q12, q8
    6020:	vshl.u64	q12, q14, q15
    6024:	vshl.u64	q9, q10, q9
    6028:	vorr	q8, q11, q8
    602c:	vorr	q8, q12, q8
    6030:	vorr	q8, q9, q8
    6034:	vext.8	q9, q8, q8, #8
    6038:	vorr	q8, q8, q9
    603c:	vmov.32	r0, d16[1]
    6040:	eor	r0, r0, r2
    6044:	and	r2, r1, r0, lsr #1
    6048:	sub	r0, r0, r2
    604c:	and	r2, ip, r0, lsr #2
    6050:	and	r0, r0, ip
    6054:	add	r0, r0, r2
    6058:	vmov.32	r2, d16[0]
    605c:	add	r0, r0, r0, lsr #4
    6060:	and	r0, r0, sl
    6064:	mul	r0, r0, lr
    6068:	eor	r2, r2, r4
    606c:	and	r4, r1, r2, lsr #1
    6070:	sub	r2, r2, r4
    6074:	and	r4, ip, r2, lsr #2
    6078:	and	r2, r2, ip
    607c:	add	r2, r2, r4
    6080:	add	r2, r2, r2, lsr #4
    6084:	and	r2, r2, sl
    6088:	mul	r2, r2, lr
    608c:	lsr	r2, r2, #24
    6090:	add	r0, r2, r0, lsr #24
    6094:	ldr	r2, [fp, #8]
    6098:	strb	r0, [r2]
    609c:	ldr	r2, [sp, #16]
    60a0:	cmp	r0, r2
    60a4:	ble	60c0 <find_known_lap@@Base+0x780>
    60a8:	add	r3, r3, #1
    60ac:	cmp	r8, r3
    60b0:	bne	5998 <find_known_lap@@Base+0x58>
    60b4:	mvn	r0, #0
    60b8:	sub	sp, fp, #28
    60bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    60c0:	mov	r0, r3
    60c4:	sub	sp, fp, #28
    60c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    60cc:	nop	{0}
    60d0:	andeq	r0, r0, r2, lsr #32
    60d4:	andeq	r0, r0, r0
    60d8:	andeq	r0, r0, r3, lsr #32
    60dc:	andeq	r0, r0, r0
    60e0:	andeq	r0, r0, r8, lsr #32
    60e4:	andeq	r0, r0, r0
    60e8:	andeq	r0, r0, r9, lsr #32
    60ec:	andeq	r0, r0, r0
    60f0:	andeq	r0, r0, r6, lsr #32
    60f4:	andeq	r0, r0, r0
    60f8:	andeq	r0, r0, r7, lsr #32
    60fc:	andeq	r0, r0, r0
    6100:	andeq	r0, r0, r4, lsr #32
    6104:	andeq	r0, r0, r0
    6108:	andeq	r0, r0, r5, lsr #32
    610c:	andeq	r0, r0, r0
    6110:	andeq	r0, r0, sl, lsr #32
    6114:	andeq	r0, r0, r0
    6118:	andeq	r0, r0, fp, lsr #32
    611c:	andeq	r0, r0, r0
    6120:	andeq	r0, r0, ip, lsr #32
    6124:	andeq	r0, r0, r0
    6128:	andeq	r0, r0, sp, lsr #32
    612c:	andeq	r0, r0, r0
    6130:	andeq	r0, r0, r0, lsr r0
    6134:	andeq	r0, r0, r0
    6138:	andeq	r0, r0, r1, lsr r0
    613c:	andeq	r0, r0, r0
    6140:	andeq	r0, r0, lr, lsr #32
    6144:	andeq	r0, r0, r0
    6148:	andeq	r0, r0, pc, lsr #32
    614c:	andeq	r0, r0, r0
    6150:	andeq	r0, r0, r4, lsr r0
    6154:	andeq	r0, r0, r0
    6158:	andeq	r0, r0, r5, lsr r0
    615c:	andeq	r0, r0, r0
    6160:	andeq	r0, r0, r2, lsr r0
    6164:	andeq	r0, r0, r0
    6168:	andeq	r0, r0, r3, lsr r0
    616c:	andeq	r0, r0, r0
    6170:	andeq	r0, r0, r8, lsr r0
    6174:	andeq	r0, r0, r0
    6178:	andeq	r0, r0, r9, lsr r0
    617c:	andeq	r0, r0, r0
    6180:	andeq	r0, r0, r6, lsr r0
    6184:	andeq	r0, r0, r0
    6188:	andeq	r0, r0, r7, lsr r0
    618c:	andeq	r0, r0, r0
    6190:	andeq	r0, r0, lr, lsr r0
    6194:	andeq	r0, r0, r0
    6198:	andeq	r0, r0, pc, lsr r0
    619c:	andeq	r0, r0, r0
    61a0:	andeq	r0, r0, ip, lsr r0
    61a4:	andeq	r0, r0, r0
    61a8:	andeq	r0, r0, sp, lsr r0
    61ac:	andeq	r0, r0, r0
    61b0:	andeq	r0, r0, sl, lsr r0
    61b4:	andeq	r0, r0, r0
    61b8:	andeq	r0, r0, fp, lsr r0
    61bc:	andeq	r0, r0, r0

000061c0 <btbb_find_ac@@Base>:
    61c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    61c4:	add	fp, sp, #28
    61c8:	sub	sp, sp, #148	; 0x94
    61cc:	mov	sl, r3
    61d0:	mov	r6, r1
    61d4:	mov	r8, r0
    61d8:	cmn	r2, #1
    61dc:	str	r2, [fp, #-32]	; 0xffffffe0
    61e0:	beq	6a24 <btbb_find_ac@@Base+0x864>
    61e4:	mov	r0, r2
    61e8:	bl	4604 <btbb_gen_syncword@plt>
    61ec:	mvn	r4, #0
    61f0:	cmp	r6, #1
    61f4:	str	r0, [sp, #8]
    61f8:	str	r1, [sp, #4]
    61fc:	blt	6a98 <btbb_find_ac@@Base+0x8d8>
    6200:	movw	r1, #21845	; 0x5555
    6204:	movw	r3, #13107	; 0x3333
    6208:	movw	r9, #3855	; 0xf0f
    620c:	movw	ip, #257	; 0x101
    6210:	vmov.i64	q8, #0x00000000000000ff
    6214:	mov	r4, #0
    6218:	movt	r1, #21845	; 0x5555
    621c:	movt	r3, #13107	; 0x3333
    6220:	movt	r9, #3855	; 0xf0f
    6224:	movt	ip, #257	; 0x101
    6228:	mov	r7, r8
    622c:	add	r0, sp, #12
    6230:	ldrh	lr, [r7, r4]!
    6234:	strh	lr, [sp, #12]
    6238:	ldrh	r2, [r7, #4]
    623c:	strh	r2, [fp, #-44]	; 0xffffffd4
    6240:	ldrh	r2, [r7, #6]
    6244:	strh	r2, [fp, #-48]	; 0xffffffd0
    6248:	ldrh	r5, [r7, #2]
    624c:	ldrh	r2, [r7, #8]
    6250:	vld1.16	{d18[0]}, [r0 :16]
    6254:	sub	r0, fp, #44	; 0x2c
    6258:	strh	r5, [fp, #-40]	; 0xffffffd8
    625c:	vld1.16	{d19[0]}, [r0 :16]
    6260:	strh	r2, [fp, #-52]	; 0xffffffcc
    6264:	sub	r0, fp, #40	; 0x28
    6268:	ldrh	r2, [r7, #10]
    626c:	vld1.16	{d20[0]}, [r0 :16]
    6270:	sub	r0, fp, #48	; 0x30
    6274:	vld1.16	{d21[0]}, [r0 :16]
    6278:	sub	r0, fp, #52	; 0x34
    627c:	vmovl.u8	q11, d18
    6280:	strh	r2, [fp, #-56]	; 0xffffffc8
    6284:	ldrh	r2, [r7, #12]
    6288:	vld1.16	{d24[0]}, [r0 :16]
    628c:	sub	r0, fp, #56	; 0x38
    6290:	vmovl.u16	q11, d22
    6294:	vld1.16	{d25[0]}, [r0 :16]
    6298:	sub	r0, fp, #60	; 0x3c
    629c:	vmovl.u8	q9, d19
    62a0:	vmovl.u8	q13, d20
    62a4:	vmovl.u32	q11, d22
    62a8:	strh	r2, [fp, #-60]	; 0xffffffc4
    62ac:	vmovl.u8	q10, d21
    62b0:	ldrh	r2, [r7, #14]
    62b4:	vmovl.u16	q9, d18
    62b8:	vmovl.u16	q13, d26
    62bc:	vand	q11, q11, q8
    62c0:	vmovl.u16	q10, d20
    62c4:	vmovl.u32	q9, d18
    62c8:	vmovl.u8	q14, d24
    62cc:	strh	r2, [fp, #-64]	; 0xffffffc0
    62d0:	vmovl.u32	q13, d26
    62d4:	vmovl.u8	q12, d25
    62d8:	ldrh	r2, [r7, #16]
    62dc:	add	r5, pc, #1004	; 0x3ec
    62e0:	vld1.16	{d30[0]}, [r0 :16]
    62e4:	sub	r0, fp, #64	; 0x40
    62e8:	vmovl.u32	q10, d20
    62ec:	vld1.16	{d31[0]}, [r0 :16]
    62f0:	vld1.64	{d2-d3}, [r5 :128]
    62f4:	vand	q9, q9, q8
    62f8:	vmovl.u16	q14, d28
    62fc:	vand	q13, q13, q8
    6300:	vmovl.u16	q12, d24
    6304:	vand	q10, q10, q8
    6308:	strh	r2, [fp, #-68]	; 0xffffffbc
    630c:	vmovl.u32	q14, d28
    6310:	ldrh	r2, [r7, #18]
    6314:	add	r5, pc, #964	; 0x3c4
    6318:	add	r0, pc, #976	; 0x3d0
    631c:	vmovl.u32	q12, d24
    6320:	vld1.64	{d4-d5}, [r0 :128]
    6324:	sub	r0, fp, #68	; 0x44
    6328:	vshl.u64	q11, q11, q1
    632c:	vld1.64	{d2-d3}, [r5 :128]
    6330:	sub	r5, fp, #72	; 0x48
    6334:	vld1.16	{d6[0]}, [r0 :16]
    6338:	vand	q14, q14, q8
    633c:	vmovl.u8	q0, d30
    6340:	vand	q12, q12, q8
    6344:	strh	r2, [fp, #-72]	; 0xffffffb8
    6348:	vmovl.u8	q15, d31
    634c:	ldrh	r0, [r7, #20]
    6350:	add	r2, pc, #936	; 0x3a8
    6354:	vshl.u64	q13, q13, q2
    6358:	vshl.u64	q9, q9, q1
    635c:	vld1.64	{d2-d3}, [r2 :128]
    6360:	vmovl.u16	q0, d0
    6364:	vmovl.u16	q15, d30
    6368:	vmovl.u32	q0, d0
    636c:	vmovl.u8	q2, d6
    6370:	vld1.16	{d6[0]}, [r5 :16]
    6374:	strh	r0, [fp, #-76]	; 0xffffffb4
    6378:	sub	r5, fp, #76	; 0x4c
    637c:	vorr	q11, q13, q11
    6380:	vmovl.u32	q15, d30
    6384:	ldrh	r0, [r7, #22]
    6388:	add	r2, pc, #896	; 0x380
    638c:	vshl.u64	q10, q10, q1
    6390:	vld1.64	{d2-d3}, [r2 :128]
    6394:	vand	q0, q0, q8
    6398:	vorr	q9, q9, q11
    639c:	vand	q15, q15, q8
    63a0:	vmovl.u16	q2, d4
    63a4:	vorr	q9, q10, q9
    63a8:	vmovl.u32	q2, d4
    63ac:	vshl.u64	q14, q14, q1
    63b0:	vmovl.u8	q13, d6
    63b4:	vld1.16	{d6[0]}, [r5 :16]
    63b8:	strh	r0, [fp, #-80]	; 0xffffffb0
    63bc:	sub	r5, fp, #80	; 0x50
    63c0:	ldrh	r0, [r7, #24]
    63c4:	add	r2, pc, #852	; 0x354
    63c8:	vand	q2, q2, q8
    63cc:	vld1.64	{d2-d3}, [r2 :128]
    63d0:	vorr	q9, q14, q9
    63d4:	vmovl.u16	q13, d26
    63d8:	vmovl.u32	q13, d26
    63dc:	vshl.u64	q12, q12, q1
    63e0:	vmovl.u8	q11, d6
    63e4:	vld1.16	{d6[0]}, [r5 :16]
    63e8:	strh	r0, [fp, #-84]	; 0xffffffac
    63ec:	sub	r5, fp, #84	; 0x54
    63f0:	ldrh	r0, [r7, #26]
    63f4:	add	r2, pc, #820	; 0x334
    63f8:	vand	q13, q13, q8
    63fc:	vld1.64	{d2-d3}, [r2 :128]
    6400:	vorr	q9, q12, q9
    6404:	vmovl.u16	q11, d22
    6408:	vmovl.u32	q11, d22
    640c:	vshl.u64	q0, q0, q1
    6410:	vmovl.u8	q10, d6
    6414:	vld1.16	{d6[0]}, [r5 :16]
    6418:	strh	r0, [sp, #88]	; 0x58
    641c:	add	r5, sp, #88	; 0x58
    6420:	ldrh	r0, [r7, #28]
    6424:	add	r2, pc, #788	; 0x314
    6428:	vand	q11, q11, q8
    642c:	vld1.64	{d2-d3}, [r2 :128]
    6430:	vorr	q9, q0, q9
    6434:	vmovl.u16	q10, d20
    6438:	vmovl.u32	q10, d20
    643c:	vshl.u64	q15, q15, q1
    6440:	vmovl.u8	q14, d6
    6444:	vld1.16	{d6[0]}, [r5 :16]
    6448:	strh	r0, [sp, #84]	; 0x54
    644c:	add	r5, sp, #84	; 0x54
    6450:	ldrh	r0, [r7, #30]
    6454:	add	r2, pc, #756	; 0x2f4
    6458:	vand	q10, q10, q8
    645c:	vld1.64	{d2-d3}, [r2 :128]
    6460:	vorr	q9, q15, q9
    6464:	vmovl.u16	q14, d28
    6468:	vmovl.u32	q14, d28
    646c:	vshl.u64	q1, q2, q1
    6470:	vmovl.u8	q12, d6
    6474:	vld1.16	{d6[0]}, [r5 :16]
    6478:	strh	r0, [sp, #80]	; 0x50
    647c:	add	r5, sp, #80	; 0x50
    6480:	ldrh	r0, [r7, #32]
    6484:	add	r2, pc, #724	; 0x2d4
    6488:	vand	q14, q14, q8
    648c:	vld1.64	{d4-d5}, [r2 :128]
    6490:	vorr	q9, q1, q9
    6494:	vmovl.u16	q12, d24
    6498:	vmovl.u32	q12, d24
    649c:	vshl.u64	q13, q13, q2
    64a0:	vmovl.u8	q0, d6
    64a4:	vld1.16	{d6[0]}, [r5 :16]
    64a8:	strh	r0, [sp, #76]	; 0x4c
    64ac:	add	r5, sp, #76	; 0x4c
    64b0:	ldrh	r0, [r7, #34]	; 0x22
    64b4:	add	r2, pc, #692	; 0x2b4
    64b8:	vand	q12, q12, q8
    64bc:	vld1.64	{d4-d5}, [r2 :128]
    64c0:	vorr	q9, q13, q9
    64c4:	vmovl.u16	q0, d0
    64c8:	vmovl.u32	q0, d0
    64cc:	vshl.u64	q11, q11, q2
    64d0:	vmovl.u8	q15, d6
    64d4:	vld1.16	{d6[0]}, [r5 :16]
    64d8:	strh	r0, [sp, #72]	; 0x48
    64dc:	add	r5, sp, #72	; 0x48
    64e0:	ldrh	r0, [r7, #36]	; 0x24
    64e4:	add	r2, pc, #660	; 0x294
    64e8:	vand	q0, q0, q8
    64ec:	vld1.64	{d4-d5}, [r2 :128]
    64f0:	vorr	q9, q11, q9
    64f4:	vmovl.u16	q15, d30
    64f8:	vmovl.u32	q15, d30
    64fc:	vshl.u64	q10, q10, q2
    6500:	vmovl.u8	q1, d6
    6504:	vld1.16	{d6[0]}, [r5 :16]
    6508:	strh	r0, [sp, #68]	; 0x44
    650c:	add	r5, sp, #68	; 0x44
    6510:	ldrh	r0, [r7, #38]	; 0x26
    6514:	add	r2, pc, #628	; 0x274
    6518:	vand	q15, q15, q8
    651c:	vld1.64	{d4-d5}, [r2 :128]
    6520:	vorr	q9, q10, q9
    6524:	vmovl.u16	q1, d2
    6528:	vmovl.u32	q1, d2
    652c:	vshl.u64	q14, q14, q2
    6530:	vmovl.u8	q13, d6
    6534:	vld1.16	{d6[0]}, [r5 :16]
    6538:	strh	r0, [sp, #64]	; 0x40
    653c:	add	r5, sp, #64	; 0x40
    6540:	ldrh	r0, [r7, #40]	; 0x28
    6544:	add	r2, pc, #596	; 0x254
    6548:	vand	q1, q1, q8
    654c:	vld1.64	{d4-d5}, [r2 :128]
    6550:	vorr	q9, q14, q9
    6554:	vmovl.u16	q13, d26
    6558:	vmovl.u32	q13, d26
    655c:	vshl.u64	q12, q12, q2
    6560:	vmovl.u8	q11, d6
    6564:	vld1.16	{d6[0]}, [r5 :16]
    6568:	strh	r0, [sp, #60]	; 0x3c
    656c:	add	r5, sp, #60	; 0x3c
    6570:	ldrh	r0, [r7, #42]	; 0x2a
    6574:	add	r2, pc, #564	; 0x234
    6578:	vand	q13, q13, q8
    657c:	vld1.64	{d4-d5}, [r2 :128]
    6580:	vorr	q9, q12, q9
    6584:	vmovl.u16	q11, d22
    6588:	vmovl.u32	q11, d22
    658c:	vshl.u64	q0, q0, q2
    6590:	vmovl.u8	q10, d6
    6594:	vld1.16	{d6[0]}, [r5 :16]
    6598:	strh	r0, [sp, #56]	; 0x38
    659c:	add	r5, sp, #56	; 0x38
    65a0:	ldrh	r0, [r7, #44]	; 0x2c
    65a4:	add	r2, pc, #532	; 0x214
    65a8:	vand	q11, q11, q8
    65ac:	vld1.64	{d4-d5}, [r2 :128]
    65b0:	vorr	q9, q0, q9
    65b4:	vmovl.u16	q10, d20
    65b8:	vmovl.u32	q10, d20
    65bc:	vshl.u64	q15, q15, q2
    65c0:	vmovl.u8	q14, d6
    65c4:	vld1.16	{d6[0]}, [r5 :16]
    65c8:	strh	r0, [sp, #52]	; 0x34
    65cc:	add	r5, sp, #52	; 0x34
    65d0:	ldrh	r0, [r7, #46]	; 0x2e
    65d4:	add	r2, pc, #500	; 0x1f4
    65d8:	vand	q10, q10, q8
    65dc:	vld1.64	{d4-d5}, [r2 :128]
    65e0:	vorr	q9, q15, q9
    65e4:	vmovl.u16	q14, d28
    65e8:	vmovl.u32	q14, d28
    65ec:	vshl.u64	q1, q1, q2
    65f0:	vmovl.u8	q12, d6
    65f4:	vld1.16	{d6[0]}, [r5 :16]
    65f8:	strh	r0, [sp, #48]	; 0x30
    65fc:	add	r5, sp, #48	; 0x30
    6600:	ldrh	r0, [r7, #48]	; 0x30
    6604:	add	r2, pc, #468	; 0x1d4
    6608:	vand	q14, q14, q8
    660c:	vld1.64	{d4-d5}, [r2 :128]
    6610:	vorr	q9, q1, q9
    6614:	vmovl.u16	q12, d24
    6618:	vmovl.u32	q12, d24
    661c:	vshl.u64	q13, q13, q2
    6620:	vmovl.u8	q0, d6
    6624:	vld1.16	{d6[0]}, [r5 :16]
    6628:	strh	r0, [sp, #44]	; 0x2c
    662c:	add	r5, sp, #44	; 0x2c
    6630:	ldrh	r0, [r7, #50]	; 0x32
    6634:	add	r2, pc, #436	; 0x1b4
    6638:	vand	q12, q12, q8
    663c:	vld1.64	{d4-d5}, [r2 :128]
    6640:	vorr	q9, q13, q9
    6644:	vmovl.u16	q0, d0
    6648:	vmovl.u32	q0, d0
    664c:	vshl.u64	q11, q11, q2
    6650:	vmovl.u8	q15, d6
    6654:	vld1.16	{d6[0]}, [r5 :16]
    6658:	strh	r0, [sp, #40]	; 0x28
    665c:	add	r5, sp, #40	; 0x28
    6660:	ldrh	r0, [r7, #52]	; 0x34
    6664:	add	r2, pc, #404	; 0x194
    6668:	vld1.64	{d4-d5}, [r2 :128]
    666c:	vmovl.u16	q15, d30
    6670:	vorr	q9, q11, q9
    6674:	vshl.u64	q10, q10, q2
    6678:	vmovl.u8	q1, d6
    667c:	vld1.16	{d6[0]}, [r5 :16]
    6680:	strh	r0, [sp, #36]	; 0x24
    6684:	add	r5, sp, #36	; 0x24
    6688:	ldrh	r0, [r7, #54]	; 0x36
    668c:	add	r2, pc, #380	; 0x17c
    6690:	vld1.64	{d4-d5}, [r2 :128]
    6694:	vorr	q9, q10, q9
    6698:	vmovl.u16	q1, d2
    669c:	vmovl.u32	q1, d2
    66a0:	vshl.u64	q14, q14, q2
    66a4:	vmovl.u8	q13, d6
    66a8:	vld1.16	{d6[0]}, [r5 :16]
    66ac:	strh	r0, [sp, #32]
    66b0:	add	r5, sp, #32
    66b4:	ldrh	r0, [r7, #56]	; 0x38
    66b8:	add	r2, pc, #352	; 0x160
    66bc:	vand	q1, q1, q8
    66c0:	vld1.64	{d4-d5}, [r2 :128]
    66c4:	b	6830 <btbb_find_ac@@Base+0x670>
    66c8:	nop	{0}
    66cc:	nop	{0}
	...
    66d8:	andeq	r0, r0, r1
    66dc:	andeq	r0, r0, r0
    66e0:	andeq	r0, r0, r4
    66e4:	andeq	r0, r0, r0
    66e8:	andeq	r0, r0, r5
    66ec:	andeq	r0, r0, r0
    66f0:	andeq	r0, r0, r2
    66f4:	andeq	r0, r0, r0
    66f8:	andeq	r0, r0, r3
    66fc:	andeq	r0, r0, r0
    6700:	andeq	r0, r0, r6
    6704:	andeq	r0, r0, r0
    6708:	andeq	r0, r0, r7
    670c:	andeq	r0, r0, r0
    6710:	andeq	r0, r0, r8
    6714:	andeq	r0, r0, r0
    6718:	andeq	r0, r0, r9
    671c:	andeq	r0, r0, r0
    6720:	andeq	r0, r0, sl
    6724:	andeq	r0, r0, r0
    6728:	andeq	r0, r0, fp
    672c:	andeq	r0, r0, r0
    6730:	andeq	r0, r0, ip
    6734:	andeq	r0, r0, r0
    6738:	andeq	r0, r0, sp
    673c:	andeq	r0, r0, r0
    6740:	andeq	r0, r0, lr
    6744:	andeq	r0, r0, r0
    6748:	andeq	r0, r0, pc
    674c:	andeq	r0, r0, r0
    6750:	andeq	r0, r0, r0, lsl r0
    6754:	andeq	r0, r0, r0
    6758:	andeq	r0, r0, r1, lsl r0
    675c:	andeq	r0, r0, r0
    6760:	andeq	r0, r0, r2, lsl r0
    6764:	andeq	r0, r0, r0
    6768:	andeq	r0, r0, r3, lsl r0
    676c:	andeq	r0, r0, r0
    6770:	andeq	r0, r0, r4, lsl r0
    6774:	andeq	r0, r0, r0
    6778:	andeq	r0, r0, r5, lsl r0
    677c:	andeq	r0, r0, r0
    6780:	andeq	r0, r0, r6, lsl r0
    6784:	andeq	r0, r0, r0
    6788:	andeq	r0, r0, r7, lsl r0
    678c:	andeq	r0, r0, r0
    6790:	andeq	r0, r0, r8, lsl r0
    6794:	andeq	r0, r0, r0
    6798:	andeq	r0, r0, r9, lsl r0
    679c:	andeq	r0, r0, r0
    67a0:	andeq	r0, r0, sl, lsl r0
    67a4:	andeq	r0, r0, r0
    67a8:	andeq	r0, r0, fp, lsl r0
    67ac:	andeq	r0, r0, r0
    67b0:	andeq	r0, r0, ip, lsl r0
    67b4:	andeq	r0, r0, r0
    67b8:	andeq	r0, r0, sp, lsl r0
    67bc:	andeq	r0, r0, r0
    67c0:	andeq	r0, r0, lr, lsl r0
    67c4:	andeq	r0, r0, r0
    67c8:	andeq	r0, r0, pc, lsl r0
    67cc:	andeq	r0, r0, r0
    67d0:	andeq	r0, r0, r0, lsr #32
    67d4:	andeq	r0, r0, r0
    67d8:	andeq	r0, r0, r1, lsr #32
    67dc:	andeq	r0, r0, r0
    67e0:	andeq	r0, r0, r2, lsr #32
    67e4:	andeq	r0, r0, r0
    67e8:	andeq	r0, r0, r3, lsr #32
    67ec:	andeq	r0, r0, r0
    67f0:	andeq	r0, r0, r4, lsr #32
    67f4:	andeq	r0, r0, r0
    67f8:	andeq	r0, r0, r5, lsr #32
    67fc:	andeq	r0, r0, r0
    6800:	andeq	r0, r0, r6, lsr #32
    6804:	andeq	r0, r0, r0
    6808:	andeq	r0, r0, r7, lsr #32
    680c:	andeq	r0, r0, r0
    6810:	andeq	r0, r0, r8, lsr #32
    6814:	andeq	r0, r0, r0
    6818:	andeq	r0, r0, r9, lsr #32
    681c:	andeq	r0, r0, r0
    6820:	andeq	r0, r0, sl, lsr #32
    6824:	andeq	r0, r0, r0
    6828:	andeq	r0, r0, fp, lsr #32
    682c:	andeq	r0, r0, r0
    6830:	vmovl.u16	q10, d26
    6834:	vmovl.u32	q13, d30
    6838:	vand	q15, q0, q8
    683c:	vorr	q9, q14, q9
    6840:	strh	r0, [sp, #28]
    6844:	ldrh	r0, [r7, #58]	; 0x3a
    6848:	add	r2, pc, #656	; 0x290
    684c:	vand	q13, q13, q8
    6850:	vmovl.u32	q10, d20
    6854:	vld1.64	{d0-d1}, [r2 :128]
    6858:	vshl.u64	q12, q12, q2
    685c:	vmovl.u8	q11, d6
    6860:	vld1.16	{d6[0]}, [r5 :16]
    6864:	add	r5, sp, #28
    6868:	vand	q10, q10, q8
    686c:	strh	r0, [sp, #24]
    6870:	ldrh	r0, [r7, #60]	; 0x3c
    6874:	add	r2, pc, #628	; 0x274
    6878:	vld1.16	{d4[0]}, [r5 :16]
    687c:	add	r5, sp, #24
    6880:	vorr	q9, q12, q9
    6884:	vmovl.u16	q11, d22
    6888:	vld1.16	{d5[0]}, [r5 :16]
    688c:	vshl.u64	q15, q15, q0
    6890:	vld1.64	{d0-d1}, [r2 :128]
    6894:	vmovl.u32	q11, d22
    6898:	strh	r0, [sp, #20]
    689c:	ldrh	r0, [r7, #62]	; 0x3e
    68a0:	add	r7, sp, #20
    68a4:	vmovl.u8	q14, d6
    68a8:	add	r2, pc, #592	; 0x250
    68ac:	vorr	q9, q15, q9
    68b0:	vld1.16	{d6[0]}, [r7 :16]
    68b4:	vshl.u64	q13, q13, q0
    68b8:	vld1.64	{d0-d1}, [r2 :128]
    68bc:	add	r2, sp, #16
    68c0:	vand	q11, q11, q8
    68c4:	vmovl.u8	q12, d4
    68c8:	vmovl.u16	q14, d28
    68cc:	strh	r0, [sp, #16]
    68d0:	add	r0, pc, #568	; 0x238
    68d4:	vmovl.u8	q2, d5
    68d8:	vorr	q9, q13, q9
    68dc:	vshl.u64	q0, q1, q0
    68e0:	vld1.64	{d2-d3}, [r0 :128]
    68e4:	vmovl.u16	q12, d24
    68e8:	vmovl.u32	q14, d28
    68ec:	vmovl.u8	q15, d6
    68f0:	vld1.16	{d6[0]}, [r2 :16]
    68f4:	add	r0, pc, #548	; 0x224
    68f8:	vmovl.u32	q12, d24
    68fc:	vand	q14, q14, q8
    6900:	vorr	q9, q0, q9
    6904:	vshl.u64	q10, q10, q1
    6908:	vmovl.u16	q1, d4
    690c:	vmovl.u16	q15, d30
    6910:	vmovl.u32	q1, d2
    6914:	vorr	q9, q10, q9
    6918:	vmovl.u8	q13, d6
    691c:	vld1.64	{d6-d7}, [r0 :128]
    6920:	add	r0, pc, #520	; 0x208
    6924:	add	r2, pc, #532	; 0x214
    6928:	vld1.64	{d20-d21}, [r0 :128]
    692c:	vld1.64	{d0-d1}, [r2 :128]
    6930:	add	r0, pc, #536	; 0x218
    6934:	add	r2, pc, #548	; 0x224
    6938:	add	r7, pc, #560	; 0x230
    693c:	vmovl.u16	q13, d26
    6940:	vshl.u64	q11, q11, q3
    6944:	vshl.u64	q10, q14, q10
    6948:	vmovl.u32	q14, d30
    694c:	vand	q15, q1, q8
    6950:	vld1.64	{d2-d3}, [r2 :128]
    6954:	ldr	r2, [sp, #4]
    6958:	vorr	q9, q11, q9
    695c:	vand	q11, q12, q8
    6960:	vld1.64	{d24-d25}, [r7 :128]
    6964:	vand	q14, q14, q8
    6968:	ldr	r7, [sp, #8]
    696c:	vshl.u64	q11, q11, q0
    6970:	vorr	q9, q10, q9
    6974:	vmovl.u32	q10, d26
    6978:	vld1.64	{d26-d27}, [r0 :128]
    697c:	vshl.u64	q12, q15, q12
    6980:	vand	q10, q10, q8
    6984:	vorr	q9, q11, q9
    6988:	vshl.u64	q11, q14, q1
    698c:	vshl.u64	q10, q10, q13
    6990:	vorr	q9, q12, q9
    6994:	vorr	q9, q11, q9
    6998:	vorr	q9, q10, q9
    699c:	vext.8	q10, q9, q8, #8
    69a0:	vorr	q9, q9, q10
    69a4:	vmov.32	r0, d18[1]
    69a8:	eor	r0, r0, r2
    69ac:	and	r2, r1, r0, lsr #1
    69b0:	sub	r0, r0, r2
    69b4:	and	r2, r3, r0, lsr #2
    69b8:	and	r0, r0, r3
    69bc:	add	r0, r0, r2
    69c0:	vmov.32	r2, d18[0]
    69c4:	add	r0, r0, r0, lsr #4
    69c8:	and	r0, r0, r9
    69cc:	mul	r0, r0, ip
    69d0:	eor	r2, r2, r7
    69d4:	and	r7, r1, r2, lsr #1
    69d8:	sub	r2, r2, r7
    69dc:	and	r7, r3, r2, lsr #2
    69e0:	and	r2, r2, r3
    69e4:	add	r2, r2, r7
    69e8:	add	r2, r2, r2, lsr #4
    69ec:	and	r2, r2, r9
    69f0:	mul	r2, r2, ip
    69f4:	lsr	r2, r2, #24
    69f8:	add	r7, r2, r0, lsr #24
    69fc:	cmp	r7, sl
    6a00:	ble	6aa4 <btbb_find_ac@@Base+0x8e4>
    6a04:	add	r4, r4, #1
    6a08:	cmp	r6, r4
    6a0c:	bne	6228 <btbb_find_ac@@Base+0x68>
    6a10:	strb	r7, [fp, #-33]	; 0xffffffdf
    6a14:	mvn	r4, #0
    6a18:	mov	r0, r4
    6a1c:	sub	sp, fp, #28
    6a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6a24:	sub	r0, fp, #33	; 0x21
    6a28:	sub	r2, fp, #32
    6a2c:	mov	r1, r6
    6a30:	mov	r3, sl
    6a34:	str	r0, [sp]
    6a38:	mov	r0, r8
    6a3c:	bl	47c0 <promiscuous_packet_search@plt>
    6a40:	mov	r4, r0
    6a44:	cmp	r4, #0
    6a48:	bmi	6a98 <btbb_find_ac@@Base+0x8d8>
    6a4c:	ldr	r6, [fp, #8]
    6a50:	ldr	r5, [r6]
    6a54:	cmp	r5, #0
    6a58:	bne	6a80 <btbb_find_ac@@Base+0x8c0>
    6a5c:	mov	r0, #1
    6a60:	mov	r1, #5952	; 0x1740
    6a64:	mov	r7, #1
    6a68:	bl	44cc <calloc@plt>
    6a6c:	mov	r5, r0
    6a70:	cmp	r0, #0
    6a74:	beq	6ab4 <btbb_find_ac@@Base+0x8f4>
    6a78:	str	r7, [r5]
    6a7c:	str	r5, [r6]
    6a80:	ldr	r0, [fp, #-32]	; 0xffffffe0
    6a84:	ldrb	r1, [fp, #-33]	; 0xffffffdf
    6a88:	mov	r2, #1
    6a8c:	str	r2, [r5, #4]
    6a90:	strb	r1, [r5, #2820]	; 0xb04
    6a94:	str	r0, [r5, #12]
    6a98:	mov	r0, r4
    6a9c:	sub	sp, fp, #28
    6aa0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6aa4:	strb	r7, [fp, #-33]	; 0xffffffdf
    6aa8:	cmp	r4, #0
    6aac:	bpl	6a4c <btbb_find_ac@@Base+0x88c>
    6ab0:	b	6a98 <btbb_find_ac@@Base+0x8d8>
    6ab4:	ldr	r0, [pc, #196]	; 6b80 <btbb_find_ac@@Base+0x9c0>
    6ab8:	mov	r1, #25
    6abc:	mov	r2, #1
    6ac0:	ldr	r0, [pc, r0]
    6ac4:	ldr	r3, [r0]
    6ac8:	ldr	r0, [pc, #180]	; 6b84 <btbb_find_ac@@Base+0x9c4>
    6acc:	add	r0, pc, r0
    6ad0:	bl	45f8 <fwrite@plt>
    6ad4:	b	6a7c <btbb_find_ac@@Base+0x8bc>
    6ad8:	nop	{0}
    6adc:	nop	{0}
    6ae0:	andeq	r0, r0, ip, lsr #32
    6ae4:	andeq	r0, r0, r0
    6ae8:	andeq	r0, r0, sp, lsr #32
    6aec:	andeq	r0, r0, r0
    6af0:	andeq	r0, r0, lr, lsr #32
    6af4:	andeq	r0, r0, r0
    6af8:	andeq	r0, r0, pc, lsr #32
    6afc:	andeq	r0, r0, r0
    6b00:	andeq	r0, r0, r0, lsr r0
    6b04:	andeq	r0, r0, r0
    6b08:	andeq	r0, r0, r1, lsr r0
    6b0c:	andeq	r0, r0, r0
    6b10:	andeq	r0, r0, r2, lsr r0
    6b14:	andeq	r0, r0, r0
    6b18:	andeq	r0, r0, r3, lsr r0
    6b1c:	andeq	r0, r0, r0
    6b20:	andeq	r0, r0, r4, lsr r0
    6b24:	andeq	r0, r0, r0
    6b28:	andeq	r0, r0, r5, lsr r0
    6b2c:	andeq	r0, r0, r0
    6b30:	andeq	r0, r0, r6, lsr r0
    6b34:	andeq	r0, r0, r0
    6b38:	andeq	r0, r0, r7, lsr r0
    6b3c:	andeq	r0, r0, r0
    6b40:	andeq	r0, r0, r8, lsr r0
    6b44:	andeq	r0, r0, r0
    6b48:	andeq	r0, r0, r9, lsr r0
    6b4c:	andeq	r0, r0, r0
    6b50:	andeq	r0, r0, lr, lsr r0
    6b54:	andeq	r0, r0, r0
    6b58:	andeq	r0, r0, pc, lsr r0
    6b5c:	andeq	r0, r0, r0
    6b60:	andeq	r0, r0, ip, lsr r0
    6b64:	andeq	r0, r0, r0
    6b68:	andeq	r0, r0, sp, lsr r0
    6b6c:	andeq	r0, r0, r0
    6b70:	andeq	r0, r0, sl, lsr r0
    6b74:	andeq	r0, r0, r0
    6b78:	andeq	r0, r0, fp, lsr r0
    6b7c:	andeq	r0, r0, r0
    6b80:	andeq	r6, r2, r0, ror #12
    6b84:	andeq	ip, r0, r5, ror r9

00006b88 <btbb_packet_set_data@@Base>:
    6b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6b8c:	add	fp, sp, #28
    6b90:	sub	sp, sp, #4
    6b94:	ldr	r6, [fp, #8]
    6b98:	movw	ip, #3125	; 0xc35
    6b9c:	cmp	r2, ip
    6ba0:	movlt	ip, r2
    6ba4:	cmp	r2, #1
    6ba8:	blt	6c98 <btbb_packet_set_data@@Base+0x110>
    6bac:	cmp	ip, #1
    6bb0:	mov	r9, #1
    6bb4:	mov	r4, #1
    6bb8:	mov	r2, #0
    6bbc:	movgt	r9, ip
    6bc0:	cmp	r9, #16
    6bc4:	bcc	6c7c <btbb_packet_set_data@@Base+0xf4>
    6bc8:	cmp	ip, #1
    6bcc:	movw	lr, #2824	; 0xb08
    6bd0:	movgt	r4, ip
    6bd4:	add	r5, r0, lr
    6bd8:	add	r7, r1, r4
    6bdc:	cmp	r5, r7
    6be0:	bcs	6bf4 <btbb_packet_set_data@@Base+0x6c>
    6be4:	add	r4, r4, r0
    6be8:	add	r4, r4, lr
    6bec:	cmp	r4, r1
    6bf0:	bhi	6c7c <btbb_packet_set_data@@Base+0xf4>
    6bf4:	bic	r2, r9, #-2147483633	; 0x8000000f
    6bf8:	mov	r5, #1
    6bfc:	subs	r4, r2, #16
    6c00:	add	r4, r5, r4, lsr #4
    6c04:	and	r7, r4, #1
    6c08:	str	r7, [sp]
    6c0c:	beq	6cb4 <btbb_packet_set_data@@Base+0x12c>
    6c10:	sub	r7, r7, r4
    6c14:	movw	r4, #2840	; 0xb18
    6c18:	mov	r6, #0
    6c1c:	mov	sl, #32
    6c20:	add	r5, r0, r4
    6c24:	mov	r4, r1
    6c28:	add	r8, r4, #16
    6c2c:	vld1.8	{d16-d17}, [r4], sl
    6c30:	sub	lr, r5, #16
    6c34:	adds	r7, r7, #2
    6c38:	add	r6, r6, #32
    6c3c:	vst1.8	{d16-d17}, [lr]
    6c40:	vld1.8	{d16-d17}, [r8]
    6c44:	vst1.8	{d16-d17}, [r5], sl
    6c48:	bne	6c28 <btbb_packet_set_data@@Base+0xa0>
    6c4c:	ldr	r7, [sp]
    6c50:	cmp	r7, #0
    6c54:	beq	6c70 <btbb_packet_set_data@@Base+0xe8>
    6c58:	add	r7, r1, r6
    6c5c:	vld1.8	{d16-d17}, [r7]
    6c60:	add	r7, r0, r6
    6c64:	movw	r6, #2824	; 0xb08
    6c68:	add	r7, r7, r6
    6c6c:	vst1.8	{d16-d17}, [r7]
    6c70:	ldr	r6, [fp, #8]
    6c74:	cmp	r9, r2
    6c78:	beq	6c98 <btbb_packet_set_data@@Base+0x110>
    6c7c:	movw	r7, #2824	; 0xb08
    6c80:	add	r4, r0, r7
    6c84:	ldrb	r7, [r1, r2]
    6c88:	strb	r7, [r4, r2]
    6c8c:	add	r2, r2, #1
    6c90:	cmp	r2, ip
    6c94:	blt	6c84 <btbb_packet_set_data@@Base+0xfc>
    6c98:	movw	r1, #2822	; 0xb06
    6c9c:	strh	ip, [r0, r1]
    6ca0:	lsr	r1, r6, #1
    6ca4:	strb	r3, [r0, #8]
    6ca8:	str	r1, [r0, #2816]	; 0xb00
    6cac:	sub	sp, fp, #28
    6cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6cb4:	mov	r6, #0
    6cb8:	ldr	r7, [sp]
    6cbc:	cmp	r7, #0
    6cc0:	bne	6c58 <btbb_packet_set_data@@Base+0xd0>
    6cc4:	b	6c70 <btbb_packet_set_data@@Base+0xe8>

00006cc8 <btbb_packet_get_flag@@Base>:
    6cc8:	ldr	r0, [r0, #4]
    6ccc:	mov	r2, #1
    6cd0:	and	r0, r0, r2, lsl r1
    6cd4:	cmp	r0, #0
    6cd8:	movwne	r0, #1
    6cdc:	bx	lr

00006ce0 <btbb_get_symbols@@Base>:
    6ce0:	movw	r1, #2824	; 0xb08
    6ce4:	add	r0, r0, r1
    6ce8:	bx	lr

00006cec <btbb_packet_get_payload_length@@Base>:
    6cec:	ldr	r0, [r0, #64]	; 0x40
    6cf0:	bx	lr

00006cf4 <btbb_get_payload@@Base>:
    6cf4:	add	r0, r0, #68	; 0x44
    6cf8:	bx	lr

00006cfc <btbb_get_payload_packed@@Base>:
    6cfc:	push	{r4, r5, r6, sl, fp, lr}
    6d00:	add	fp, sp, #16
    6d04:	ldr	r2, [r0, #64]	; 0x40
    6d08:	cmp	r2, #1
    6d0c:	blt	6d68 <btbb_get_payload_packed@@Base+0x6c>
    6d10:	mov	r3, #0
    6d14:	add	r2, r0, r3, lsl #3
    6d18:	ldrb	ip, [r2, #68]	; 0x44
    6d1c:	ldrb	lr, [r2, #69]	; 0x45
    6d20:	ldrb	r6, [r2, #70]	; 0x46
    6d24:	ldrb	r5, [r2, #71]	; 0x47
    6d28:	orr	r4, ip, lr, lsl #1
    6d2c:	orr	r6, r4, r6, lsl #2
    6d30:	orr	r6, r6, r5, lsl #3
    6d34:	ldrb	r5, [r2, #72]	; 0x48
    6d38:	orr	r6, r6, r5, lsl #4
    6d3c:	ldrb	r5, [r2, #73]	; 0x49
    6d40:	orr	r6, r6, r5, lsl #5
    6d44:	ldrb	r5, [r2, #74]	; 0x4a
    6d48:	ldrb	r2, [r2, #75]	; 0x4b
    6d4c:	orr	r6, r6, r5, lsl #6
    6d50:	orr	r2, r6, r2, lsl #7
    6d54:	strb	r2, [r1, r3]
    6d58:	add	r3, r3, #1
    6d5c:	ldr	r2, [r0, #64]	; 0x40
    6d60:	cmp	r3, r2
    6d64:	blt	6d14 <btbb_get_payload_packed@@Base+0x18>
    6d68:	mov	r0, r2
    6d6c:	pop	{r4, r5, r6, sl, fp, pc}

00006d70 <btbb_packet_get_type@@Base>:
    6d70:	ldrb	r0, [r0, #18]
    6d74:	bx	lr

00006d78 <btbb_packet_get_lt_addr@@Base>:
    6d78:	ldrb	r0, [r0, #19]
    6d7c:	bx	lr

00006d80 <btbb_packet_get_header_flags@@Base>:
    6d80:	ldrb	r0, [r0, #20]
    6d84:	bx	lr

00006d88 <btbb_packet_get_hec@@Base>:
    6d88:	ldrb	r0, [r0, #21]
    6d8c:	bx	lr

00006d90 <btbb_packet_get_header_packed@@Base>:
    6d90:	ldrb	ip, [r0, #22]
    6d94:	ldrb	r2, [r0, #23]
    6d98:	ldrb	r3, [r0, #24]
    6d9c:	ldrb	r1, [r0, #25]
    6da0:	orr	r2, ip, r2, lsl #1
    6da4:	orr	r2, r2, r3, lsl #2
    6da8:	orr	r1, r2, r1, lsl #3
    6dac:	ldrb	r2, [r0, #26]
    6db0:	orr	r1, r1, r2, lsl #4
    6db4:	ldrb	r2, [r0, #27]
    6db8:	orr	r1, r1, r2, lsl #5
    6dbc:	ldrb	r2, [r0, #28]
    6dc0:	orr	r1, r1, r2, lsl #6
    6dc4:	ldrb	r2, [r0, #29]
    6dc8:	orr	r1, r1, r2, lsl #7
    6dcc:	ldrb	r2, [r0, #30]
    6dd0:	orr	r1, r1, r2, lsl #8
    6dd4:	ldrb	r2, [r0, #31]
    6dd8:	orr	r1, r1, r2, lsl #9
    6ddc:	ldrb	r2, [r0, #32]
    6de0:	orr	r1, r1, r2, lsl #10
    6de4:	ldrb	r2, [r0, #33]	; 0x21
    6de8:	orr	r1, r1, r2, lsl #11
    6dec:	ldrb	r2, [r0, #34]	; 0x22
    6df0:	orr	r1, r1, r2, lsl #12
    6df4:	ldrb	r2, [r0, #35]	; 0x23
    6df8:	orr	r1, r1, r2, lsl #13
    6dfc:	ldrb	r2, [r0, #36]	; 0x24
    6e00:	orr	r1, r1, r2, lsl #14
    6e04:	ldrb	r2, [r0, #37]	; 0x25
    6e08:	orr	r1, r1, r2, lsl #15
    6e0c:	ldrb	r2, [r0, #38]	; 0x26
    6e10:	ldrb	r0, [r0, #39]	; 0x27
    6e14:	orr	r1, r1, r2, lsl #16
    6e18:	orr	r0, r1, r0, lsl #17
    6e1c:	bx	lr

00006e20 <crc_check@@Base>:
    6e20:	push	{r4, sl, fp, lr}
    6e24:	add	fp, sp, #8
    6e28:	mov	r4, r1
    6e2c:	mov	r1, r0
    6e30:	ldrb	r0, [r4, #18]
    6e34:	sub	r2, r0, #2
    6e38:	mov	r0, #1
    6e3c:	cmp	r2, #13
    6e40:	bhi	6eb8 <crc_check@@Base+0x98>
    6e44:	add	r3, pc, #4
    6e48:	ldr	r2, [r3, r2, lsl #2]
    6e4c:	add	pc, r3, r2
    6e50:	strheq	r0, [r0], -r4
    6e54:	andeq	r0, r0, r8, lsr r0
    6e58:	andeq	r0, r0, r4, ror r0
    6e5c:	andeq	r0, r0, ip, asr #1
    6e60:	andeq	r0, r0, r8, rrx
    6e64:	andeq	r0, r0, r4, ror #1
    6e68:	andeq	r0, r0, r8, lsr r0
    6e6c:	andeq	r0, r0, r8, rrx
    6e70:	andeq	r0, r0, r8, lsr r0
    6e74:	andeq	r0, r0, r4, ror r0
    6e78:	strdeq	r0, [r0], -ip
    6e7c:	andeq	r0, r0, r4, lsl r1
    6e80:	andeq	r0, r0, r8, lsr r0
    6e84:	andeq	r0, r0, r4, ror r0
    6e88:	mov	r0, r1
    6e8c:	mov	r1, r4
    6e90:	bl	45bc <DM@plt>
    6e94:	cmp	r0, #0
    6e98:	beq	6ed8 <crc_check@@Base+0xb8>
    6e9c:	cmp	r0, #2
    6ea0:	blt	6eb8 <crc_check@@Base+0x98>
    6ea4:	ldrb	r2, [r4, #18]
    6ea8:	mov	r1, #1
    6eac:	cmp	r2, #7
    6eb0:	cmpne	r2, #13
    6eb4:	beq	6efc <crc_check@@Base+0xdc>
    6eb8:	mov	r1, r0
    6ebc:	mov	r0, r1
    6ec0:	pop	{r4, sl, fp, pc}
    6ec4:	mov	r0, r1
    6ec8:	mov	r1, r4
    6ecc:	bl	479c <DH@plt>
    6ed0:	cmp	r0, #0
    6ed4:	bne	6e9c <crc_check@@Base+0x7c>
    6ed8:	ldrb	r2, [r4, #18]
    6edc:	mov	r1, #1
    6ee0:	cmp	r2, #5
    6ee4:	bhi	6efc <crc_check@@Base+0xdc>
    6ee8:	mov	r3, #1
    6eec:	mov	r4, #44	; 0x2c
    6ef0:	mov	r0, #0
    6ef4:	tst	r4, r3, lsl r2
    6ef8:	movne	r1, r0
    6efc:	mov	r0, r1
    6f00:	pop	{r4, sl, fp, pc}
    6f04:	mov	r0, r1
    6f08:	mov	r1, r4
    6f0c:	bl	458c <fhs@plt>
    6f10:	cmp	r0, #0
    6f14:	bne	6e9c <crc_check@@Base+0x7c>
    6f18:	b	6ed8 <crc_check@@Base+0xb8>
    6f1c:	mov	r0, r1
    6f20:	mov	r1, r4
    6f24:	bl	45c8 <HV@plt>
    6f28:	cmp	r0, #0
    6f2c:	bne	6e9c <crc_check@@Base+0x7c>
    6f30:	b	6ed8 <crc_check@@Base+0xb8>
    6f34:	mov	r0, r1
    6f38:	mov	r1, r4
    6f3c:	bl	473c <EV3@plt>
    6f40:	cmp	r0, #0
    6f44:	bne	6e9c <crc_check@@Base+0x7c>
    6f48:	b	6ed8 <crc_check@@Base+0xb8>
    6f4c:	mov	r0, r1
    6f50:	mov	r1, r4
    6f54:	bl	4598 <EV4@plt>
    6f58:	cmp	r0, #0
    6f5c:	bne	6e9c <crc_check@@Base+0x7c>
    6f60:	b	6ed8 <crc_check@@Base+0xb8>
    6f64:	mov	r0, r1
    6f68:	mov	r1, r4
    6f6c:	bl	4784 <EV5@plt>
    6f70:	cmp	r0, #0
    6f74:	bne	6e9c <crc_check@@Base+0x7c>
    6f78:	b	6ed8 <crc_check@@Base+0xb8>

00006f7c <fhs@@Base>:
    6f7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6f80:	add	fp, sp, #28
    6f84:	sub	sp, sp, #4
    6f88:	mov	r7, r0
    6f8c:	mov	r0, #20
    6f90:	mov	r5, r1
    6f94:	str	r0, [r1, #64]	; 0x40
    6f98:	movw	r0, #2822	; 0xb06
    6f9c:	ldrh	r0, [r1, r0]
    6fa0:	lsr	r1, r0, #1
    6fa4:	mov	r0, #1
    6fa8:	cmp	r1, #181	; 0xb5
    6fac:	bcc	7128 <fhs@@Base+0x1ac>
    6fb0:	movw	r0, #2946	; 0xb82
    6fb4:	mov	r1, #160	; 0xa0
    6fb8:	add	r0, r5, r0
    6fbc:	bl	8060 <HV@@Base+0x350>
    6fc0:	mov	r8, r0
    6fc4:	mov	r0, #0
    6fc8:	cmp	r8, #0
    6fcc:	beq	7128 <fhs@@Base+0x1ac>
    6fd0:	ldr	r9, [r5, #64]	; 0x40
    6fd4:	cmp	r9, #1
    6fd8:	blt	704c <fhs@@Base+0xd0>
    6fdc:	ldr	r1, [pc, #332]	; 7130 <fhs@@Base+0x1b4>
    6fe0:	and	r0, r7, #63	; 0x3f
    6fe4:	ldr	r2, [r5, #4]
    6fe8:	ldr	ip, [pc, #324]	; 7134 <fhs@@Base+0x1b8>
    6fec:	movw	lr, #1033	; 0x409
    6ff0:	mov	r6, r8
    6ff4:	movt	lr, #33026	; 0x8102
    6ff8:	add	r1, pc, r1
    6ffc:	and	r2, r2, #1
    7000:	add	ip, pc, ip
    7004:	ldrb	r0, [r1, r0]
    7008:	add	r1, r5, #68	; 0x44
    700c:	add	r4, r0, #18
    7010:	lsl	r0, r9, #3
    7014:	smmla	r7, r4, lr, r4
    7018:	cmp	r2, #0
    701c:	asr	r3, r7, #6
    7020:	add	r3, r3, r7, lsr #31
    7024:	ldrb	r7, [r6]
    7028:	add	r6, r6, #1
    702c:	rsb	r3, r3, r3, lsl #7
    7030:	sub	r4, r4, r3
    7034:	ldrbne	r3, [ip, r4]
    7038:	add	r4, r4, #1
    703c:	eorne	r7, r3, r7
    7040:	subs	r0, r0, #1
    7044:	strb	r7, [r1], #1
    7048:	bne	7014 <fhs@@Base+0x98>
    704c:	mov	r0, r5
    7050:	bl	8298 <HV@@Base+0x588>
    7054:	cmp	r0, #0
    7058:	beq	7070 <fhs@@Base+0xf4>
    705c:	mov	r0, r8
    7060:	bl	4550 <free@plt>
    7064:	mov	r0, #1000	; 0x3e8
    7068:	sub	sp, fp, #28
    706c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7070:	cmp	r9, #0
    7074:	ble	710c <fhs@@Base+0x190>
    7078:	mov	r0, #0
    707c:	movw	sl, #1033	; 0x409
    7080:	mov	r6, #32
    7084:	sub	r7, r0, r9, lsl #3
    7088:	ldr	r0, [r5, #4]
    708c:	ldr	r9, [pc, #164]	; 7138 <fhs@@Base+0x1bc>
    7090:	movt	sl, #33026	; 0x8102
    7094:	and	r4, r0, #1
    7098:	add	r9, pc, r9
    709c:	ldr	r0, [pc, #152]	; 713c <fhs@@Base+0x1c0>
    70a0:	add	r0, pc, r0
    70a4:	ldrb	r0, [r0, r6]
    70a8:	add	r1, r0, #18
    70ac:	mov	r0, #0
    70b0:	smmla	r2, r1, sl, r1
    70b4:	cmp	r4, #0
    70b8:	asr	r3, r2, #6
    70bc:	add	r2, r3, r2, lsr #31
    70c0:	rsb	r2, r2, r2, lsl #7
    70c4:	sub	r1, r1, r2
    70c8:	ldrb	r2, [r8, -r0]
    70cc:	ldrbne	r3, [r9, r1]
    70d0:	add	r1, r1, #1
    70d4:	eorne	r2, r3, r2
    70d8:	sub	r3, r5, r0
    70dc:	sub	r0, r0, #1
    70e0:	cmp	r7, r0
    70e4:	strb	r2, [r3, #68]	; 0x44
    70e8:	bne	70b0 <fhs@@Base+0x134>
    70ec:	mov	r0, r5
    70f0:	bl	8298 <HV@@Base+0x588>
    70f4:	cmp	r0, #0
    70f8:	bne	705c <fhs@@Base+0xe0>
    70fc:	add	r6, r6, #1
    7100:	cmp	r6, #64	; 0x40
    7104:	bne	709c <fhs@@Base+0x120>
    7108:	b	711c <fhs@@Base+0x1a0>
    710c:	mov	r0, r5
    7110:	bl	8298 <HV@@Base+0x588>
    7114:	cmp	r0, #0
    7118:	bne	705c <fhs@@Base+0xe0>
    711c:	mov	r0, r8
    7120:	bl	4550 <free@plt>
    7124:	mov	r0, #0
    7128:	sub	sp, fp, #28
    712c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7130:	ldrdeq	ip, [r0], -r6
    7134:	andeq	lr, r0, r0, lsl sl
    7138:	andeq	lr, r0, r8, ror r9
    713c:	andeq	ip, r0, lr, lsr #8

00007140 <DM@@Base>:
    7140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7144:	add	fp, sp, #28
    7148:	sub	sp, sp, #12
    714c:	mov	r8, r0
    7150:	ldrb	r0, [r1, #18]
    7154:	mov	r4, r1
    7158:	sub	r1, r0, #3
    715c:	cmp	r1, #11
    7160:	bhi	72d0 <DM@@Base+0x190>
    7164:	movw	r0, #2946	; 0xb82
    7168:	mov	r7, #20
    716c:	mov	r2, #1
    7170:	mov	r5, #0
    7174:	add	r9, r4, r0
    7178:	movw	r0, #2822	; 0xb06
    717c:	ldrh	r0, [r4, r0]
    7180:	add	r3, pc, #8
    7184:	ldr	r1, [r3, r1, lsl #2]
    7188:	sub	sl, r0, #122	; 0x7a
    718c:	add	pc, r3, r1
    7190:	andeq	r0, r0, r4, asr r0
    7194:	andeq	r0, r0, r4, lsr r1
    7198:	andeq	r0, r0, r4, lsr r1
    719c:	andeq	r0, r0, r4, lsr r1
    71a0:	andeq	r0, r0, r4, lsr r1
    71a4:	andeq	r0, r0, r0, lsr r0
    71a8:	andeq	r0, r0, r4, lsr r1
    71ac:	andeq	r0, r0, r4, asr #32
    71b0:	andeq	r0, r0, r4, lsr r1
    71b4:	andeq	r0, r0, r4, lsr r1
    71b8:	andeq	r0, r0, r4, lsr r1
    71bc:	andeq	r0, r0, ip, asr #32
    71c0:	movw	r1, #3026	; 0xbd2
    71c4:	sub	sl, r0, #202	; 0xca
    71c8:	mov	r7, #12
    71cc:	add	r9, r4, r1
    71d0:	b	71e4 <DM@@Base+0xa4>
    71d4:	mov	r7, #125	; 0x7d
    71d8:	b	71e0 <DM@@Base+0xa0>
    71dc:	mov	r7, #228	; 0xe4
    71e0:	mov	r2, #2
    71e4:	mov	r5, #1
    71e8:	mov	r0, r9
    71ec:	mov	r1, r8
    71f0:	mov	r3, sl
    71f4:	str	r4, [sp, #4]
    71f8:	str	r5, [sp]
    71fc:	bl	83d4 <HV@@Base+0x6c4>
    7200:	cmp	r0, #0
    7204:	beq	72d0 <DM@@Base+0x190>
    7208:	ldr	r6, [r4, #64]	; 0x40
    720c:	cmp	r6, r7
    7210:	bgt	72c4 <DM@@Base+0x184>
    7214:	cmp	sl, r6, lsl #3
    7218:	blt	72c4 <DM@@Base+0x184>
    721c:	lsl	r7, r6, #3
    7220:	mov	r0, r9
    7224:	mov	r1, r7
    7228:	bl	8060 <HV@@Base+0x350>
    722c:	cmp	r0, #0
    7230:	mov	r5, #0
    7234:	beq	72c4 <DM@@Base+0x184>
    7238:	cmp	r6, #1
    723c:	blt	72ac <DM@@Base+0x16c>
    7240:	ldr	r2, [pc, #152]	; 72e0 <DM@@Base+0x1a0>
    7244:	and	r1, r8, #63	; 0x3f
    7248:	movw	lr, #1033	; 0x409
    724c:	mov	r5, r0
    7250:	movt	lr, #33026	; 0x8102
    7254:	add	r2, pc, r2
    7258:	ldrb	r1, [r2, r1]
    725c:	ldr	r2, [r4, #4]
    7260:	ldr	ip, [pc, #124]	; 72e4 <DM@@Base+0x1a4>
    7264:	add	r6, r1, #18
    7268:	add	r1, r4, #68	; 0x44
    726c:	and	r8, r2, #1
    7270:	add	ip, pc, ip
    7274:	smmla	r3, r6, lr, r6
    7278:	cmp	r8, #0
    727c:	asr	r2, r3, #6
    7280:	add	r2, r2, r3, lsr #31
    7284:	ldrb	r3, [r5]
    7288:	add	r5, r5, #1
    728c:	rsb	r2, r2, r2, lsl #7
    7290:	sub	r6, r6, r2
    7294:	ldrbne	r2, [ip, r6]
    7298:	add	r6, r6, #1
    729c:	eorne	r3, r2, r3
    72a0:	subs	r7, r7, #1
    72a4:	strb	r3, [r1], #1
    72a8:	bne	7274 <DM@@Base+0x134>
    72ac:	bl	4550 <free@plt>
    72b0:	mov	r0, r4
    72b4:	bl	8298 <HV@@Base+0x588>
    72b8:	cmp	r0, #0
    72bc:	mov	r5, #10
    72c0:	movweq	r5, #2
    72c4:	mov	r0, r5
    72c8:	sub	sp, fp, #28
    72cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    72d0:	mov	r5, #0
    72d4:	mov	r0, r5
    72d8:	sub	sp, fp, #28
    72dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    72e0:	andeq	ip, r0, sl, ror r2
    72e4:	andeq	lr, r0, r0, lsr #15

000072e8 <DH@@Base>:
    72e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    72ec:	add	fp, sp, #24
    72f0:	sub	sp, sp, #8
    72f4:	mov	r9, r0
    72f8:	ldrb	r0, [r1, #18]
    72fc:	mov	r4, r1
    7300:	mov	r7, #0
    7304:	sub	r1, r0, #4
    7308:	cmp	r1, #11
    730c:	bhi	7504 <DH@@Base+0x21c>
    7310:	movw	r0, #2822	; 0xb06
    7314:	mov	r2, #1
    7318:	mov	r6, #30
    731c:	ldrh	r0, [r4, r0]
    7320:	add	r3, pc, #4
    7324:	ldr	r1, [r3, r1, lsl #2]
    7328:	add	pc, r3, r1
    732c:	andeq	r0, r0, r4, asr #32
    7330:	ldrdeq	r0, [r0], -r8
    7334:	ldrdeq	r0, [r0], -r8
    7338:	ldrdeq	r0, [r0], -r8
    733c:	ldrdeq	r0, [r0], -r8
    7340:	andeq	r0, r0, r4, asr #32
    7344:	ldrdeq	r0, [r0], -r8
    7348:	andeq	r0, r0, r0, lsr r0
    734c:	ldrdeq	r0, [r0], -r8
    7350:	ldrdeq	r0, [r0], -r8
    7354:	ldrdeq	r0, [r0], -r8
    7358:	andeq	r0, r0, ip, lsr r0
    735c:	mov	r2, #2
    7360:	mov	r6, #187	; 0xbb
    7364:	b	7370 <DH@@Base+0x88>
    7368:	mov	r2, #2
    736c:	movw	r6, #343	; 0x157
    7370:	movw	r1, #2946	; 0xb82
    7374:	sub	r5, r0, #122	; 0x7a
    7378:	mov	r7, #0
    737c:	str	r4, [sp, #4]
    7380:	add	r8, r4, r1
    7384:	mov	r1, r9
    7388:	mov	r3, r5
    738c:	str	r7, [sp]
    7390:	mov	r0, r8
    7394:	bl	83d4 <HV@@Base+0x6c4>
    7398:	cmp	r0, #0
    739c:	beq	7504 <DH@@Base+0x21c>
    73a0:	ldr	r0, [r4, #64]	; 0x40
    73a4:	mov	r7, #1
    73a8:	cmp	r0, r6
    73ac:	bgt	7504 <DH@@Base+0x21c>
    73b0:	cmp	r5, r0, lsl #3
    73b4:	blt	7504 <DH@@Base+0x21c>
    73b8:	cmp	r0, #1
    73bc:	blt	74e0 <DH@@Base+0x1f8>
    73c0:	ldrb	r1, [r4, #4]
    73c4:	tst	r1, #1
    73c8:	bne	7438 <DH@@Base+0x150>
    73cc:	lsl	lr, r0, #3
    73d0:	mov	r1, #0
    73d4:	cmp	lr, #15
    73d8:	bls	74c4 <DH@@Base+0x1dc>
    73dc:	bic	r1, lr, #15
    73e0:	mov	r3, #1
    73e4:	subs	r2, r1, #16
    73e8:	add	r3, r3, r2, lsr #4
    73ec:	and	ip, r3, #1
    73f0:	beq	749c <DH@@Base+0x1b4>
    73f4:	movw	r7, #2962	; 0xb92
    73f8:	sub	r6, r3, ip
    73fc:	mov	r3, #0
    7400:	mov	r5, #32
    7404:	add	r7, r4, r7
    7408:	sub	r2, r7, #16
    740c:	subs	r6, r6, #2
    7410:	vld1.8	{d16-d17}, [r2]
    7414:	add	r2, r4, r3
    7418:	add	r3, r3, #32
    741c:	add	r0, r2, #68	; 0x44
    7420:	vst1.8	{d16-d17}, [r0]
    7424:	add	r0, r2, #84	; 0x54
    7428:	vld1.8	{d16-d17}, [r7], r5
    742c:	vst1.8	{d16-d17}, [r0]
    7430:	bne	7408 <DH@@Base+0x120>
    7434:	b	74a0 <DH@@Base+0x1b8>
    7438:	ldr	r2, [pc, #208]	; 7510 <DH@@Base+0x228>
    743c:	and	r1, r9, #63	; 0x3f
    7440:	lsl	r0, r0, #3
    7444:	mov	r3, r4
    7448:	add	r2, pc, r2
    744c:	ldrb	r1, [r2, r1]
    7450:	ldr	r2, [pc, #188]	; 7514 <DH@@Base+0x22c>
    7454:	add	r7, r1, #18
    7458:	movw	r1, #1033	; 0x409
    745c:	add	r2, pc, r2
    7460:	movt	r1, #33026	; 0x8102
    7464:	smmla	r6, r7, r1, r7
    7468:	subs	r0, r0, #1
    746c:	asr	r5, r6, #6
    7470:	add	r6, r5, r6, lsr #31
    7474:	ldrb	r5, [r3, #2946]	; 0xb82
    7478:	sub	r6, r6, r6, lsl #7
    747c:	add	r7, r7, r6
    7480:	ldrb	r6, [r2, r7]
    7484:	add	r7, r7, #1
    7488:	eor	r6, r6, r5
    748c:	strb	r6, [r3, #68]	; 0x44
    7490:	add	r3, r3, #1
    7494:	bne	7464 <DH@@Base+0x17c>
    7498:	b	74e0 <DH@@Base+0x1f8>
    749c:	mov	r3, #0
    74a0:	cmp	ip, #0
    74a4:	beq	74bc <DH@@Base+0x1d4>
    74a8:	add	r0, r8, r3
    74ac:	vld1.8	{d16-d17}, [r0]
    74b0:	add	r0, r4, r3
    74b4:	add	r0, r0, #68	; 0x44
    74b8:	vst1.8	{d16-d17}, [r0]
    74bc:	cmp	lr, r1
    74c0:	beq	74e0 <DH@@Base+0x1f8>
    74c4:	add	r2, r4, r1
    74c8:	sub	r0, r1, lr
    74cc:	ldrb	r1, [r2, #2946]	; 0xb82
    74d0:	adds	r0, r0, #1
    74d4:	strb	r1, [r2, #68]	; 0x44
    74d8:	add	r2, r2, #1
    74dc:	bcc	74cc <DH@@Base+0x1e4>
    74e0:	ldrb	r0, [r4, #18]
    74e4:	mov	r7, #2
    74e8:	cmp	r0, #9
    74ec:	beq	7504 <DH@@Base+0x21c>
    74f0:	mov	r0, r4
    74f4:	bl	8298 <HV@@Base+0x588>
    74f8:	cmp	r0, #0
    74fc:	mov	r7, #10
    7500:	movweq	r7, #2
    7504:	mov	r0, r7
    7508:	sub	sp, fp, #24
    750c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    7510:	andeq	ip, r0, r6, lsl #1
    7514:			; <UNDEFINED> instruction: 0x0000e5b4

00007518 <EV3@@Base>:
    7518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    751c:	add	fp, sp, #28
    7520:	sub	sp, sp, #4
    7524:	mov	r4, r1
    7528:	mov	r1, #0
    752c:	movw	r2, #2822	; 0xb06
    7530:	movw	r7, #1033	; 0x409
    7534:	and	r9, r0, #63	; 0x3f
    7538:	str	r1, [r4, #64]	; 0x40
    753c:	movt	r7, #33026	; 0x8102
    7540:	ldrh	r2, [r4, r2]
    7544:	ldr	r8, [pc, #536]	; 7764 <EV3@@Base+0x24c>
    7548:	ldr	r6, [pc, #536]	; 7768 <EV3@@Base+0x250>
    754c:	sub	sl, r2, #122	; 0x7a
    7550:	add	r8, pc, r8
    7554:	add	r6, pc, r6
    7558:	add	r0, r1, #1
    755c:	lsl	r0, r0, #3
    7560:	cmp	r0, sl
    7564:	ble	7594 <EV3@@Base+0x7c>
    7568:	mov	r0, #1
    756c:	sub	sp, fp, #28
    7570:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7574:	add	r1, r5, #1
    7578:	cmp	r1, #32
    757c:	str	r1, [r4, #64]	; 0x40
    7580:	bge	7758 <EV3@@Base+0x240>
    7584:	add	r0, r1, #1
    7588:	lsl	r0, r0, #3
    758c:	cmp	r0, sl
    7590:	bgt	7568 <EV3@@Base+0x50>
    7594:	lsl	r0, r1, #3
    7598:	ldrb	r1, [r8, r9]
    759c:	add	r1, r0, r1
    75a0:	add	r0, r4, r0
    75a4:	add	r1, r1, #18
    75a8:	add	r0, r0, #68	; 0x44
    75ac:	smmla	r2, r1, r7, r1
    75b0:	asr	r3, r2, #6
    75b4:	add	r2, r3, r2, lsr #31
    75b8:	ldrb	r3, [r4, #4]
    75bc:	sub	r2, r2, r2, lsl #7
    75c0:	add	r1, r1, r2
    75c4:	tst	r3, #1
    75c8:	ldrb	r2, [r4, #2946]	; 0xb82
    75cc:	ldrbne	r3, [r6, r1]
    75d0:	add	r1, r1, #1
    75d4:	eorne	r2, r3, r2
    75d8:	strb	r2, [r0]
    75dc:	smmla	r2, r1, r7, r1
    75e0:	asr	r3, r2, #6
    75e4:	add	r2, r3, r2, lsr #31
    75e8:	ldrb	r3, [r4, #4]
    75ec:	sub	r2, r2, r2, lsl #7
    75f0:	add	r1, r1, r2
    75f4:	tst	r3, #1
    75f8:	ldrb	r2, [r4, #2947]	; 0xb83
    75fc:	ldrbne	r3, [r6, r1]
    7600:	add	r1, r1, #1
    7604:	eorne	r2, r3, r2
    7608:	strb	r2, [r0, #1]
    760c:	smmla	r2, r1, r7, r1
    7610:	asr	r3, r2, #6
    7614:	add	r2, r3, r2, lsr #31
    7618:	ldrb	r3, [r4, #4]
    761c:	sub	r2, r2, r2, lsl #7
    7620:	add	r1, r1, r2
    7624:	tst	r3, #1
    7628:	ldrb	r2, [r4, #2948]	; 0xb84
    762c:	ldrbne	r3, [r6, r1]
    7630:	add	r1, r1, #1
    7634:	eorne	r2, r3, r2
    7638:	strb	r2, [r0, #2]
    763c:	smmla	r2, r1, r7, r1
    7640:	asr	r3, r2, #6
    7644:	add	r2, r3, r2, lsr #31
    7648:	ldrb	r3, [r4, #4]
    764c:	sub	r2, r2, r2, lsl #7
    7650:	add	r1, r1, r2
    7654:	tst	r3, #1
    7658:	ldrb	r2, [r4, #2949]	; 0xb85
    765c:	ldrbne	r3, [r6, r1]
    7660:	eorne	r2, r3, r2
    7664:	strb	r2, [r0, #3]
    7668:	ldrb	r3, [r4, #4]
    766c:	ldrb	r2, [r4, #2950]	; 0xb86
    7670:	tst	r3, #1
    7674:	bne	7694 <EV3@@Base+0x17c>
    7678:	strb	r2, [r0, #4]
    767c:	ldrb	r1, [r4, #2951]	; 0xb87
    7680:	strb	r1, [r0, #5]
    7684:	ldrb	r1, [r4, #2952]	; 0xb88
    7688:	strb	r1, [r0, #6]
    768c:	ldrb	r1, [r4, #2953]	; 0xb89
    7690:	b	772c <EV3@@Base+0x214>
    7694:	add	r1, r1, #1
    7698:	smmla	r3, r1, r7, r1
    769c:	asr	r5, r3, #6
    76a0:	add	r3, r5, r3, lsr #31
    76a4:	sub	r3, r3, r3, lsl #7
    76a8:	add	r1, r1, r3
    76ac:	ldrb	r3, [r6, r1]
    76b0:	add	r1, r1, #1
    76b4:	eor	r2, r3, r2
    76b8:	strb	r2, [r0, #4]
    76bc:	smmla	r2, r1, r7, r1
    76c0:	asr	r3, r2, #6
    76c4:	add	r2, r3, r2, lsr #31
    76c8:	ldrb	r3, [r4, #2951]	; 0xb87
    76cc:	sub	r2, r2, r2, lsl #7
    76d0:	add	r1, r1, r2
    76d4:	ldrb	r2, [r6, r1]
    76d8:	add	r1, r1, #1
    76dc:	eor	r2, r2, r3
    76e0:	strb	r2, [r0, #5]
    76e4:	smmla	r2, r1, r7, r1
    76e8:	asr	r3, r2, #6
    76ec:	add	r2, r3, r2, lsr #31
    76f0:	ldrb	r3, [r4, #2952]	; 0xb88
    76f4:	sub	r2, r2, r2, lsl #7
    76f8:	add	r1, r1, r2
    76fc:	ldrb	r2, [r6, r1]
    7700:	add	r1, r1, #1
    7704:	eor	r2, r2, r3
    7708:	strb	r2, [r0, #6]
    770c:	smmla	r2, r1, r7, r1
    7710:	asr	r3, r2, #6
    7714:	add	r2, r3, r2, lsr #31
    7718:	sub	r2, r2, r2, lsl #7
    771c:	add	r1, r1, r2
    7720:	ldrb	r2, [r4, #2953]	; 0xb89
    7724:	ldrb	r1, [r6, r1]
    7728:	eor	r1, r1, r2
    772c:	strb	r1, [r0, #7]
    7730:	ldr	r5, [r4, #64]	; 0x40
    7734:	cmp	r5, #2
    7738:	ble	7574 <EV3@@Base+0x5c>
    773c:	mov	r0, r4
    7740:	bl	8298 <HV@@Base+0x588>
    7744:	cmp	r0, #0
    7748:	beq	7574 <EV3@@Base+0x5c>
    774c:	mov	r0, #10
    7750:	sub	sp, fp, #28
    7754:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7758:	mov	r0, #2
    775c:	sub	sp, fp, #28
    7760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7764:	andeq	fp, r0, lr, ror pc
    7768:			; <UNDEFINED> instruction: 0x0000e4bc

0000776c <EV4@@Base>:
    776c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7770:	add	fp, sp, #28
    7774:	sub	sp, sp, #12
    7778:	mov	r5, r1
    777c:	mov	r1, #1
    7780:	and	r0, r0, #63	; 0x3f
    7784:	movw	sl, #2065	; 0x811
    7788:	mov	r4, #0
    778c:	mov	r6, #0
    7790:	str	r1, [r5, #64]	; 0x40
    7794:	movw	r1, #2946	; 0xb82
    7798:	str	r0, [sp]
    779c:	movt	sl, #516	; 0x204
    77a0:	add	r1, r5, r1
    77a4:	str	r1, [sp, #4]
    77a8:	movw	r1, #2822	; 0xb06
    77ac:	ldrh	r1, [r5, r1]
    77b0:	sub	r1, r1, #122	; 0x7a
    77b4:	str	r1, [sp, #8]
    77b8:	ldr	r8, [pc, #756]	; 7ab4 <EV4@@Base+0x348>
    77bc:	add	r8, pc, r8
    77c0:	ldr	r0, [sp, #8]
    77c4:	add	r9, r6, #15
    77c8:	cmp	r9, r0
    77cc:	ble	7800 <EV4@@Base+0x94>
    77d0:	mov	r0, #1
    77d4:	sub	sp, fp, #28
    77d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    77dc:	movw	r0, #1470	; 0x5be
    77e0:	add	r4, r4, #10
    77e4:	mov	r6, r9
    77e8:	cmp	r9, r0
    77ec:	bcs	7aa8 <EV4@@Base+0x33c>
    77f0:	ldr	r0, [sp, #8]
    77f4:	add	r9, r6, #15
    77f8:	cmp	r9, r0
    77fc:	bgt	77d0 <EV4@@Base+0x64>
    7800:	ldr	r0, [sp, #4]
    7804:	mov	r1, #10
    7808:	add	r0, r0, r6
    780c:	bl	8060 <HV@@Base+0x350>
    7810:	cmp	r0, #0
    7814:	beq	7a94 <EV4@@Base+0x328>
    7818:	ldr	r1, [sp]
    781c:	ldr	r2, [pc, #660]	; 7ab8 <EV4@@Base+0x34c>
    7820:	ldrb	r6, [r5, #4]
    7824:	add	r2, pc, r2
    7828:	tst	r6, #1
    782c:	ldrb	r1, [r2, r1]
    7830:	ldrb	r2, [r0]
    7834:	add	r1, r4, r1
    7838:	add	r3, r1, #18
    783c:	umull	r1, r7, r3, sl
    7840:	add	r1, r5, r4
    7844:	add	r1, r1, #68	; 0x44
    7848:	bne	7898 <EV4@@Base+0x12c>
    784c:	strb	r2, [r1]
    7850:	ldrb	r2, [r0, #1]
    7854:	strb	r2, [r1, #1]
    7858:	ldrb	r2, [r0, #2]
    785c:	strb	r2, [r1, #2]
    7860:	ldrb	r2, [r0, #3]
    7864:	strb	r2, [r1, #3]
    7868:	ldrb	r2, [r0, #4]
    786c:	strb	r2, [r1, #4]
    7870:	ldrb	r2, [r0, #5]
    7874:	strb	r2, [r1, #5]
    7878:	ldrb	r2, [r0, #6]
    787c:	strb	r2, [r1, #6]
    7880:	ldrb	r2, [r0, #7]
    7884:	strb	r2, [r1, #7]
    7888:	ldrb	r2, [r0, #8]
    788c:	strb	r2, [r1, #8]
    7890:	ldrb	r2, [r0, #9]
    7894:	b	7a44 <EV4@@Base+0x2d8>
    7898:	sub	r6, r3, r7
    789c:	add	r7, r7, r6, lsr #1
    78a0:	lsr	r7, r7, #6
    78a4:	sub	r7, r7, r7, lsl #7
    78a8:	add	r3, r3, r7
    78ac:	ldrb	r7, [r8, r3]
    78b0:	eor	r2, r7, r2
    78b4:	strb	r2, [r1]
    78b8:	add	r2, r3, #1
    78bc:	uxtb	r3, r2
    78c0:	umull	r7, r6, r3, sl
    78c4:	ldrb	r7, [r0, #1]
    78c8:	sub	r3, r3, r6
    78cc:	add	r3, r6, r3, lsr #1
    78d0:	lsr	r3, r3, #6
    78d4:	sub	r3, r3, r3, lsl #7
    78d8:	uxtab	r2, r3, r2
    78dc:	ldrb	r3, [r8, r2]
    78e0:	add	r2, r2, #1
    78e4:	eor	r3, r3, r7
    78e8:	strb	r3, [r1, #1]
    78ec:	umull	r3, r7, r2, sl
    78f0:	sub	r3, r2, r7
    78f4:	add	r3, r7, r3, lsr #1
    78f8:	ldrb	r7, [r0, #2]
    78fc:	lsr	r3, r3, #6
    7900:	sub	r3, r3, r3, lsl #7
    7904:	add	r2, r2, r3
    7908:	ldrb	r3, [r8, r2]
    790c:	add	r2, r2, #1
    7910:	eor	r3, r3, r7
    7914:	strb	r3, [r1, #2]
    7918:	umull	r3, r7, r2, sl
    791c:	sub	r3, r2, r7
    7920:	add	r3, r7, r3, lsr #1
    7924:	ldrb	r7, [r0, #3]
    7928:	lsr	r3, r3, #6
    792c:	sub	r3, r3, r3, lsl #7
    7930:	add	r2, r2, r3
    7934:	ldrb	r3, [r8, r2]
    7938:	add	r2, r2, #1
    793c:	eor	r3, r3, r7
    7940:	strb	r3, [r1, #3]
    7944:	umull	r3, r7, r2, sl
    7948:	sub	r3, r2, r7
    794c:	add	r3, r7, r3, lsr #1
    7950:	ldrb	r7, [r0, #4]
    7954:	lsr	r3, r3, #6
    7958:	sub	r3, r3, r3, lsl #7
    795c:	add	r2, r2, r3
    7960:	ldrb	r3, [r8, r2]
    7964:	add	r2, r2, #1
    7968:	eor	r3, r3, r7
    796c:	strb	r3, [r1, #4]
    7970:	umull	r3, r7, r2, sl
    7974:	sub	r3, r2, r7
    7978:	add	r3, r7, r3, lsr #1
    797c:	ldrb	r7, [r0, #5]
    7980:	lsr	r3, r3, #6
    7984:	sub	r3, r3, r3, lsl #7
    7988:	add	r2, r2, r3
    798c:	ldrb	r3, [r8, r2]
    7990:	add	r2, r2, #1
    7994:	eor	r3, r3, r7
    7998:	strb	r3, [r1, #5]
    799c:	umull	r3, r7, r2, sl
    79a0:	sub	r3, r2, r7
    79a4:	add	r3, r7, r3, lsr #1
    79a8:	ldrb	r7, [r0, #6]
    79ac:	lsr	r3, r3, #6
    79b0:	sub	r3, r3, r3, lsl #7
    79b4:	add	r2, r2, r3
    79b8:	ldrb	r3, [r8, r2]
    79bc:	add	r2, r2, #1
    79c0:	eor	r3, r3, r7
    79c4:	strb	r3, [r1, #6]
    79c8:	umull	r3, r7, r2, sl
    79cc:	sub	r3, r2, r7
    79d0:	add	r3, r7, r3, lsr #1
    79d4:	ldrb	r7, [r0, #7]
    79d8:	lsr	r3, r3, #6
    79dc:	sub	r3, r3, r3, lsl #7
    79e0:	add	r2, r2, r3
    79e4:	ldrb	r3, [r8, r2]
    79e8:	add	r2, r2, #1
    79ec:	eor	r3, r3, r7
    79f0:	strb	r3, [r1, #7]
    79f4:	umull	r3, r7, r2, sl
    79f8:	sub	r3, r2, r7
    79fc:	add	r3, r7, r3, lsr #1
    7a00:	ldrb	r7, [r0, #8]
    7a04:	lsr	r3, r3, #6
    7a08:	sub	r3, r3, r3, lsl #7
    7a0c:	add	r2, r2, r3
    7a10:	ldrb	r3, [r8, r2]
    7a14:	add	r2, r2, #1
    7a18:	eor	r3, r3, r7
    7a1c:	strb	r3, [r1, #8]
    7a20:	umull	r3, r7, r2, sl
    7a24:	sub	r3, r2, r7
    7a28:	add	r3, r7, r3, lsr #1
    7a2c:	lsr	r3, r3, #6
    7a30:	sub	r3, r3, r3, lsl #7
    7a34:	add	r2, r2, r3
    7a38:	ldrb	r3, [r0, #9]
    7a3c:	ldrb	r2, [r8, r2]
    7a40:	eor	r2, r2, r3
    7a44:	strb	r2, [r1, #9]
    7a48:	bl	4550 <free@plt>
    7a4c:	ldr	r0, [r5, #64]	; 0x40
    7a50:	cmp	r4, r0, lsl #3
    7a54:	blt	77dc <EV4@@Base+0x70>
    7a58:	add	r6, r0, #1
    7a5c:	lsl	r7, r0, #3
    7a60:	mov	r0, r5
    7a64:	bl	8298 <HV@@Base+0x588>
    7a68:	cmp	r0, #0
    7a6c:	bne	7a88 <EV4@@Base+0x31c>
    7a70:	add	r7, r7, #8
    7a74:	str	r6, [r5, #64]	; 0x40
    7a78:	add	r6, r6, #1
    7a7c:	cmp	r7, r4
    7a80:	ble	7a60 <EV4@@Base+0x2f4>
    7a84:	b	77dc <EV4@@Base+0x70>
    7a88:	mov	r0, #10
    7a8c:	sub	sp, fp, #28
    7a90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7a94:	cmp	r6, #44	; 0x2c
    7a98:	mov	r0, #0
    7a9c:	movwhi	r0, #1
    7aa0:	sub	sp, fp, #28
    7aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7aa8:	mov	r0, #2
    7aac:	sub	sp, fp, #28
    7ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7ab4:	andeq	lr, r0, r4, asr r2
    7ab8:	andeq	fp, r0, sl, lsr #25

00007abc <EV5@@Base>:
    7abc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7ac0:	add	fp, sp, #28
    7ac4:	sub	sp, sp, #4
    7ac8:	mov	r4, r1
    7acc:	mov	r1, #0
    7ad0:	movw	r2, #2822	; 0xb06
    7ad4:	movw	r7, #1033	; 0x409
    7ad8:	and	r9, r0, #63	; 0x3f
    7adc:	str	r1, [r4, #64]	; 0x40
    7ae0:	movt	r7, #33026	; 0x8102
    7ae4:	ldrh	r2, [r4, r2]
    7ae8:	ldr	r8, [pc, #536]	; 7d08 <EV5@@Base+0x24c>
    7aec:	ldr	r6, [pc, #536]	; 7d0c <EV5@@Base+0x250>
    7af0:	sub	sl, r2, #122	; 0x7a
    7af4:	add	r8, pc, r8
    7af8:	add	r6, pc, r6
    7afc:	add	r0, r1, #1
    7b00:	lsl	r0, r0, #3
    7b04:	cmp	r0, sl
    7b08:	ble	7b38 <EV5@@Base+0x7c>
    7b0c:	mov	r0, #1
    7b10:	sub	sp, fp, #28
    7b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7b18:	add	r1, r5, #1
    7b1c:	cmp	r1, #182	; 0xb6
    7b20:	str	r1, [r4, #64]	; 0x40
    7b24:	bge	7cfc <EV5@@Base+0x240>
    7b28:	add	r0, r1, #1
    7b2c:	lsl	r0, r0, #3
    7b30:	cmp	r0, sl
    7b34:	bgt	7b0c <EV5@@Base+0x50>
    7b38:	lsl	r0, r1, #3
    7b3c:	ldrb	r1, [r8, r9]
    7b40:	add	r1, r0, r1
    7b44:	add	r0, r4, r0
    7b48:	add	r1, r1, #18
    7b4c:	add	r0, r0, #68	; 0x44
    7b50:	smmla	r2, r1, r7, r1
    7b54:	asr	r3, r2, #6
    7b58:	add	r2, r3, r2, lsr #31
    7b5c:	ldrb	r3, [r4, #4]
    7b60:	sub	r2, r2, r2, lsl #7
    7b64:	add	r1, r1, r2
    7b68:	tst	r3, #1
    7b6c:	ldrb	r2, [r4, #2946]	; 0xb82
    7b70:	ldrbne	r3, [r6, r1]
    7b74:	add	r1, r1, #1
    7b78:	eorne	r2, r3, r2
    7b7c:	strb	r2, [r0]
    7b80:	smmla	r2, r1, r7, r1
    7b84:	asr	r3, r2, #6
    7b88:	add	r2, r3, r2, lsr #31
    7b8c:	ldrb	r3, [r4, #4]
    7b90:	sub	r2, r2, r2, lsl #7
    7b94:	add	r1, r1, r2
    7b98:	tst	r3, #1
    7b9c:	ldrb	r2, [r4, #2947]	; 0xb83
    7ba0:	ldrbne	r3, [r6, r1]
    7ba4:	add	r1, r1, #1
    7ba8:	eorne	r2, r3, r2
    7bac:	strb	r2, [r0, #1]
    7bb0:	smmla	r2, r1, r7, r1
    7bb4:	asr	r3, r2, #6
    7bb8:	add	r2, r3, r2, lsr #31
    7bbc:	ldrb	r3, [r4, #4]
    7bc0:	sub	r2, r2, r2, lsl #7
    7bc4:	add	r1, r1, r2
    7bc8:	tst	r3, #1
    7bcc:	ldrb	r2, [r4, #2948]	; 0xb84
    7bd0:	ldrbne	r3, [r6, r1]
    7bd4:	add	r1, r1, #1
    7bd8:	eorne	r2, r3, r2
    7bdc:	strb	r2, [r0, #2]
    7be0:	smmla	r2, r1, r7, r1
    7be4:	asr	r3, r2, #6
    7be8:	add	r2, r3, r2, lsr #31
    7bec:	ldrb	r3, [r4, #4]
    7bf0:	sub	r2, r2, r2, lsl #7
    7bf4:	add	r1, r1, r2
    7bf8:	tst	r3, #1
    7bfc:	ldrb	r2, [r4, #2949]	; 0xb85
    7c00:	ldrbne	r3, [r6, r1]
    7c04:	eorne	r2, r3, r2
    7c08:	strb	r2, [r0, #3]
    7c0c:	ldrb	r3, [r4, #4]
    7c10:	ldrb	r2, [r4, #2950]	; 0xb86
    7c14:	tst	r3, #1
    7c18:	bne	7c38 <EV5@@Base+0x17c>
    7c1c:	strb	r2, [r0, #4]
    7c20:	ldrb	r1, [r4, #2951]	; 0xb87
    7c24:	strb	r1, [r0, #5]
    7c28:	ldrb	r1, [r4, #2952]	; 0xb88
    7c2c:	strb	r1, [r0, #6]
    7c30:	ldrb	r1, [r4, #2953]	; 0xb89
    7c34:	b	7cd0 <EV5@@Base+0x214>
    7c38:	add	r1, r1, #1
    7c3c:	smmla	r3, r1, r7, r1
    7c40:	asr	r5, r3, #6
    7c44:	add	r3, r5, r3, lsr #31
    7c48:	sub	r3, r3, r3, lsl #7
    7c4c:	add	r1, r1, r3
    7c50:	ldrb	r3, [r6, r1]
    7c54:	add	r1, r1, #1
    7c58:	eor	r2, r3, r2
    7c5c:	strb	r2, [r0, #4]
    7c60:	smmla	r2, r1, r7, r1
    7c64:	asr	r3, r2, #6
    7c68:	add	r2, r3, r2, lsr #31
    7c6c:	ldrb	r3, [r4, #2951]	; 0xb87
    7c70:	sub	r2, r2, r2, lsl #7
    7c74:	add	r1, r1, r2
    7c78:	ldrb	r2, [r6, r1]
    7c7c:	add	r1, r1, #1
    7c80:	eor	r2, r2, r3
    7c84:	strb	r2, [r0, #5]
    7c88:	smmla	r2, r1, r7, r1
    7c8c:	asr	r3, r2, #6
    7c90:	add	r2, r3, r2, lsr #31
    7c94:	ldrb	r3, [r4, #2952]	; 0xb88
    7c98:	sub	r2, r2, r2, lsl #7
    7c9c:	add	r1, r1, r2
    7ca0:	ldrb	r2, [r6, r1]
    7ca4:	add	r1, r1, #1
    7ca8:	eor	r2, r2, r3
    7cac:	strb	r2, [r0, #6]
    7cb0:	smmla	r2, r1, r7, r1
    7cb4:	asr	r3, r2, #6
    7cb8:	add	r2, r3, r2, lsr #31
    7cbc:	sub	r2, r2, r2, lsl #7
    7cc0:	add	r1, r1, r2
    7cc4:	ldrb	r2, [r4, #2953]	; 0xb89
    7cc8:	ldrb	r1, [r6, r1]
    7ccc:	eor	r1, r1, r2
    7cd0:	strb	r1, [r0, #7]
    7cd4:	ldr	r5, [r4, #64]	; 0x40
    7cd8:	cmp	r5, #2
    7cdc:	ble	7b18 <EV5@@Base+0x5c>
    7ce0:	mov	r0, r4
    7ce4:	bl	8298 <HV@@Base+0x588>
    7ce8:	cmp	r0, #0
    7cec:	beq	7b18 <EV5@@Base+0x5c>
    7cf0:	mov	r0, #10
    7cf4:	sub	sp, fp, #28
    7cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7cfc:	mov	r0, #2
    7d00:	sub	sp, fp, #28
    7d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7d08:	ldrdeq	fp, [r0], -sl
    7d0c:	andeq	sp, r0, r8, lsl pc

00007d10 <HV@@Base>:
    7d10:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7d14:	add	fp, sp, #24
    7d18:	sub	sp, sp, #80	; 0x50
    7d1c:	mov	r6, r0
    7d20:	mov	r0, #0
    7d24:	mov	r5, r1
    7d28:	str	r0, [r1, #40]	; 0x28
    7d2c:	movw	r1, #2822	; 0xb06
    7d30:	ldrh	r1, [r5, r1]
    7d34:	lsr	r1, r1, #1
    7d38:	cmp	r1, #180	; 0xb4
    7d3c:	bhi	7d54 <HV@@Base+0x44>
    7d40:	str	r0, [r5, #64]	; 0x40
    7d44:	mov	r8, #1
    7d48:	mov	r0, r8
    7d4c:	sub	sp, fp, #24
    7d50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7d54:	movw	r0, #2946	; 0xb82
    7d58:	mov	r8, #2
    7d5c:	add	r1, r5, r0
    7d60:	ldrb	r0, [r5, #18]
    7d64:	cmp	r0, #7
    7d68:	beq	7e5c <HV@@Base+0x14c>
    7d6c:	cmp	r0, #6
    7d70:	beq	7e90 <HV@@Base+0x180>
    7d74:	cmp	r0, #5
    7d78:	bne	8020 <HV@@Base+0x310>
    7d7c:	vldr	d18, [pc, #684]	; 8030 <HV@@Base+0x320>
    7d80:	vldr	d19, [pc, #688]	; 8038 <HV@@Base+0x328>
    7d84:	vldr	d20, [pc, #692]	; 8040 <HV@@Base+0x330>
    7d88:	vmov.i32	q8, #0	; 0x00000000
    7d8c:	vmov.i32	q11, #255	; 0x000000ff
    7d90:	movw	r0, #2946	; 0xb82
    7d94:	mov	r2, #0
    7d98:	add	r1, r5, r0
    7d9c:	mov	r0, sp
    7da0:	mov	r3, r1
    7da4:	add	r1, r1, #12
    7da8:	vld1.8	{d24}, [r3]!
    7dac:	ldr	r3, [r3]
    7db0:	vmov.32	d25[0], r3
    7db4:	add	r3, r0, r2
    7db8:	add	r2, r2, #4
    7dbc:	cmp	r2, #80	; 0x50
    7dc0:	vtbl.8	d21, {d24-d25}, d18
    7dc4:	vtbl.8	d26, {d24-d25}, d19
    7dc8:	vtbl.8	d24, {d24-d25}, d20
    7dcc:	veor	d25, d26, d21
    7dd0:	veor	d27, d24, d26
    7dd4:	veor	d28, d24, d21
    7dd8:	vorr	d25, d27, d25
    7ddc:	vorr	d27, d24, d21
    7de0:	vand	d21, d24, d21
    7de4:	vorr	d25, d25, d28
    7de8:	vand	d24, d27, d26
    7dec:	vmovl.u16	q13, d25
    7df0:	vorr	d21, d24, d21
    7df4:	vand	q12, q13, q11
    7df8:	vuzp.8	d21, d26
    7dfc:	vadd.i32	q8, q8, q12
    7e00:	vst1.32	{d21[0]}, [r3]
    7e04:	bne	7da0 <HV@@Base+0x90>
    7e08:	vext.8	q9, q8, q8, #8
    7e0c:	vadd.i32	q8, q8, q9
    7e10:	vdup.32	q9, d16[1]
    7e14:	vadd.i32	q8, q8, q9
    7e18:	vmov.32	r1, d16[0]
    7e1c:	cmp	r1, #19
    7e20:	bhi	7ed8 <HV@@Base+0x1c8>
    7e24:	mov	r1, #10
    7e28:	str	r1, [r5, #64]	; 0x40
    7e2c:	ldr	r1, [r5, #4]
    7e30:	orr	r2, r1, #128	; 0x80
    7e34:	tst	r1, #1
    7e38:	str	r2, [r5, #4]
    7e3c:	bne	7fc0 <HV@@Base+0x2b0>
    7e40:	add	r0, r5, #68	; 0x44
    7e44:	mov	r1, sp
    7e48:	mov	r2, #80	; 0x50
    7e4c:	bl	4574 <memcpy@plt>
    7e50:	mov	r0, r8
    7e54:	sub	sp, fp, #24
    7e58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7e5c:	mov	r0, #30
    7e60:	str	r0, [r5, #64]	; 0x40
    7e64:	ldr	r0, [r5, #4]
    7e68:	orr	r2, r0, #128	; 0x80
    7e6c:	tst	r0, #1
    7e70:	str	r2, [r5, #4]
    7e74:	bne	7ee8 <HV@@Base+0x1d8>
    7e78:	add	r0, r5, #68	; 0x44
    7e7c:	mov	r2, #240	; 0xf0
    7e80:	bl	4574 <memcpy@plt>
    7e84:	mov	r0, r8
    7e88:	sub	sp, fp, #24
    7e8c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7e90:	mov	r0, r1
    7e94:	mov	r1, #160	; 0xa0
    7e98:	bl	8060 <HV@@Base+0x350>
    7e9c:	cmp	r0, #0
    7ea0:	beq	7ed8 <HV@@Base+0x1c8>
    7ea4:	mov	r7, r0
    7ea8:	mov	r0, #20
    7eac:	str	r0, [r5, #64]	; 0x40
    7eb0:	ldr	r0, [r5, #4]
    7eb4:	orr	r1, r0, #128	; 0x80
    7eb8:	tst	r0, #1
    7ebc:	str	r1, [r5, #4]
    7ec0:	bne	7f4c <HV@@Base+0x23c>
    7ec4:	add	r0, r5, #68	; 0x44
    7ec8:	mov	r1, r7
    7ecc:	mov	r2, #160	; 0xa0
    7ed0:	bl	4574 <memcpy@plt>
    7ed4:	b	7fac <HV@@Base+0x29c>
    7ed8:	mov	r8, #0
    7edc:	mov	r0, r8
    7ee0:	sub	sp, fp, #24
    7ee4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7ee8:	ldr	r1, [pc, #360]	; 8058 <HV@@Base+0x348>
    7eec:	and	r0, r6, #63	; 0x3f
    7ef0:	ldr	r2, [pc, #356]	; 805c <HV@@Base+0x34c>
    7ef4:	add	r1, pc, r1
    7ef8:	add	r2, pc, r2
    7efc:	ldrb	r0, [r1, r0]
    7f00:	movw	r1, #1033	; 0x409
    7f04:	movt	r1, #33026	; 0x8102
    7f08:	add	r3, r0, #18
    7f0c:	mov	r0, #0
    7f10:	smmla	r7, r3, r1, r3
    7f14:	asr	r6, r7, #6
    7f18:	add	r7, r6, r7, lsr #31
    7f1c:	add	r6, r5, r0
    7f20:	add	r0, r0, #1
    7f24:	ldrb	r4, [r6, #2946]	; 0xb82
    7f28:	cmp	r0, #240	; 0xf0
    7f2c:	sub	r7, r7, r7, lsl #7
    7f30:	add	r3, r3, r7
    7f34:	ldrb	r7, [r2, r3]
    7f38:	add	r3, r3, #1
    7f3c:	eor	r7, r7, r4
    7f40:	strb	r7, [r6, #68]	; 0x44
    7f44:	bne	7f10 <HV@@Base+0x200>
    7f48:	b	8020 <HV@@Base+0x310>
    7f4c:	ldr	r1, [pc, #252]	; 8050 <HV@@Base+0x340>
    7f50:	and	r0, r6, #63	; 0x3f
    7f54:	ldr	r3, [pc, #248]	; 8054 <HV@@Base+0x344>
    7f58:	movw	r2, #1033	; 0x409
    7f5c:	movt	r2, #33026	; 0x8102
    7f60:	add	r1, pc, r1
    7f64:	add	r3, pc, r3
    7f68:	ldrb	r0, [r1, r0]
    7f6c:	mov	r1, #0
    7f70:	add	r6, r0, #18
    7f74:	add	r0, r5, #68	; 0x44
    7f78:	smmla	r5, r6, r2, r6
    7f7c:	asr	r4, r5, #6
    7f80:	add	r5, r4, r5, lsr #31
    7f84:	ldrb	r4, [r7, r1]
    7f88:	sub	r5, r5, r5, lsl #7
    7f8c:	add	r6, r6, r5
    7f90:	ldrb	r5, [r3, r6]
    7f94:	add	r6, r6, #1
    7f98:	eor	r5, r5, r4
    7f9c:	strb	r5, [r0, r1]
    7fa0:	add	r1, r1, #1
    7fa4:	cmp	r1, #160	; 0xa0
    7fa8:	bne	7f78 <HV@@Base+0x268>
    7fac:	mov	r0, r7
    7fb0:	bl	4550 <free@plt>
    7fb4:	mov	r0, r8
    7fb8:	sub	sp, fp, #24
    7fbc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7fc0:	ldr	r2, [pc, #128]	; 8048 <HV@@Base+0x338>
    7fc4:	and	r1, r6, #63	; 0x3f
    7fc8:	ldr	r7, [pc, #124]	; 804c <HV@@Base+0x33c>
    7fcc:	movw	r3, #1033	; 0x409
    7fd0:	movt	r3, #33026	; 0x8102
    7fd4:	add	r2, pc, r2
    7fd8:	add	r7, pc, r7
    7fdc:	ldrb	r1, [r2, r1]
    7fe0:	mov	r2, #0
    7fe4:	add	r6, r1, #18
    7fe8:	add	r1, r5, #68	; 0x44
    7fec:	smmla	r5, r6, r3, r6
    7ff0:	asr	r4, r5, #6
    7ff4:	add	r5, r4, r5, lsr #31
    7ff8:	ldrb	r4, [r0, r2]
    7ffc:	sub	r5, r5, r5, lsl #7
    8000:	add	r6, r6, r5
    8004:	ldrb	r5, [r7, r6]
    8008:	add	r6, r6, #1
    800c:	eor	r5, r5, r4
    8010:	strb	r5, [r1, r2]
    8014:	add	r2, r2, #1
    8018:	cmp	r2, #80	; 0x50
    801c:	bne	7fec <HV@@Base+0x2dc>
    8020:	mov	r0, r8
    8024:	sub	sp, fp, #24
    8028:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    802c:	nop	{0}
    8030:			; <UNDEFINED> instruction: 0xff03ff00
    8034:			; <UNDEFINED> instruction: 0xff09ff06
    8038:			; <UNDEFINED> instruction: 0xff04ff01
    803c:			; <UNDEFINED> instruction: 0xff0aff07
    8040:			; <UNDEFINED> instruction: 0xff05ff02
    8044:			; <UNDEFINED> instruction: 0xff0bff08
    8048:	strdeq	fp, [r0], -sl
    804c:	andeq	sp, r0, r8, lsr sl
    8050:	andeq	fp, r0, lr, ror #10
    8054:	andeq	sp, r0, ip, lsr #21
    8058:	ldrdeq	fp, [r0], -sl
    805c:	andeq	sp, r0, r8, lsl fp
    8060:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    8064:	add	fp, sp, #24
    8068:	mov	r5, r0
    806c:	movw	r0, #26215	; 0x6667
    8070:	mov	r8, r1
    8074:	movt	r0, #26214	; 0x6666
    8078:	smmul	r0, r1, r0
    807c:	lsr	r1, r0, #2
    8080:	add	r0, r1, r0, lsr #31
    8084:	add	r0, r0, r0, lsl #2
    8088:	sub	r0, r8, r0, lsl #1
    808c:	uxtb	r0, r0
    8090:	sub	r1, r8, r0
    8094:	cmp	r0, #0
    8098:	addne	r8, r1, #10
    809c:	mov	r0, r8
    80a0:	bl	464c <malloc@plt>
    80a4:	cmp	r8, #1
    80a8:	blt	8288 <HV@@Base+0x578>
    80ac:	mov	r1, #0
    80b0:	mvn	ip, #6
    80b4:	b	80d8 <HV@@Base+0x3c8>
    80b8:	mov	r3, r1
    80bc:	ldrb	r2, [r0, r3]
    80c0:	eor	r2, r2, #1
    80c4:	strb	r2, [r0, r3]
    80c8:	add	r1, r1, #10
    80cc:	add	r5, r5, #15
    80d0:	cmp	r1, r8
    80d4:	bge	8288 <HV@@Base+0x578>
    80d8:	vld1.8	{d16}, [r5]
    80dc:	ldrh	r2, [r5, #8]
    80e0:	add	r3, r0, r1
    80e4:	strh	r2, [r3, #8]
    80e8:	vst1.8	{d16}, [r3]
    80ec:	ldrb	r2, [r5]
    80f0:	ldrb	r3, [r5, #1]
    80f4:	ldrb	r4, [r5, #2]
    80f8:	ldrb	r6, [r5, #3]
    80fc:	orr	r7, r2, r3, lsl #1
    8100:	and	r2, r2, #1
    8104:	rsb	r2, r2, #0
    8108:	and	r3, r2, #11
    810c:	tst	r7, #2
    8110:	orr	r2, r7, r4, lsl #2
    8114:	ldrb	r7, [r5, #4]
    8118:	eorne	r3, r3, #22
    811c:	tst	r2, #4
    8120:	orr	r2, r2, r6, lsl #3
    8124:	eorne	r3, r3, #7
    8128:	tst	r2, #8
    812c:	orr	r2, r2, r7, lsl #4
    8130:	ldrb	r7, [r5, #5]
    8134:	eorne	r3, r3, #14
    8138:	tst	r2, #16
    813c:	eorne	r3, r3, #28
    8140:	orr	r2, r2, r7, lsl #5
    8144:	ldrb	r7, [r5, #6]
    8148:	tst	r2, #32
    814c:	eorne	r3, r3, #19
    8150:	orr	r2, r2, r7, lsl #6
    8154:	ldrb	r7, [r5, #7]
    8158:	tst	r2, #64	; 0x40
    815c:	eorne	r3, r3, #13
    8160:	orr	r2, r2, r7, lsl #7
    8164:	ldrb	r7, [r5, #8]
    8168:	tst	r2, #128	; 0x80
    816c:	eorne	r3, r3, #26
    8170:	orr	r2, r2, r7, lsl #8
    8174:	ldrb	r7, [r5, #9]
    8178:	tst	r2, #256	; 0x100
    817c:	eorne	r3, r3, #31
    8180:	orr	r2, r2, r7, lsl #9
    8184:	ldrb	r7, [r5, #10]
    8188:	tst	r2, #512	; 0x200
    818c:	ldrb	r2, [r5, #11]
    8190:	eorne	r3, r3, #21
    8194:	orr	r2, r7, r2, lsl #1
    8198:	ldrb	r7, [r5, #12]
    819c:	orr	r2, r2, r7, lsl #2
    81a0:	ldrb	r7, [r5, #13]
    81a4:	orr	r2, r2, r7, lsl #3
    81a8:	ldrb	r7, [r5, #14]
    81ac:	orr	r2, r2, r7, lsl #4
    81b0:	eor	r3, r2, r3
    81b4:	sub	r2, r3, #1
    81b8:	and	r2, r3, r2
    81bc:	tst	r2, #255	; 0xff
    81c0:	beq	80c8 <HV@@Base+0x3b8>
    81c4:	uxtab	r3, ip, r3
    81c8:	cmp	r3, #24
    81cc:	bhi	828c <HV@@Base+0x57c>
    81d0:	add	r2, pc, #4
    81d4:	ldr	r3, [r2, r3, lsl #2]
    81d8:	add	pc, r2, r3
    81dc:	andeq	r0, r0, r4, rrx
    81e0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    81e4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    81e8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    81ec:			; <UNDEFINED> instruction: 0xfffffedc
    81f0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    81f4:	andeq	r0, r0, ip, rrx
    81f8:	andeq	r0, r0, r4, ror r0
    81fc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    8200:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    8204:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    8208:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    820c:	andeq	r0, r0, ip, ror r0
    8210:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    8214:	andeq	r0, r0, r4, lsl #1
    8218:	andeq	r0, r0, ip, lsl #1
    821c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    8220:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    8224:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    8228:	muleq	r0, r4, r0
    822c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    8230:	muleq	r0, ip, r0
    8234:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    8238:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    823c:	andeq	r0, r0, r4, lsr #1
    8240:	add	r3, r1, #2
    8244:	b	80bc <HV@@Base+0x3ac>
    8248:	add	r3, r1, #6
    824c:	b	80bc <HV@@Base+0x3ac>
    8250:	add	r3, r1, #3
    8254:	b	80bc <HV@@Base+0x3ac>
    8258:	add	r3, r1, #5
    825c:	b	80bc <HV@@Base+0x3ac>
    8260:	add	r3, r1, #9
    8264:	b	80bc <HV@@Base+0x3ac>
    8268:	orr	r3, r1, #1
    826c:	b	80bc <HV@@Base+0x3ac>
    8270:	add	r3, r1, #7
    8274:	b	80bc <HV@@Base+0x3ac>
    8278:	add	r3, r1, #4
    827c:	b	80bc <HV@@Base+0x3ac>
    8280:	add	r3, r1, #8
    8284:	b	80bc <HV@@Base+0x3ac>
    8288:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    828c:	bl	4550 <free@plt>
    8290:	mov	r0, #0
    8294:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    8298:	push	{r4, sl, fp, lr}
    829c:	add	fp, sp, #8
    82a0:	ldrb	r1, [r0, #9]
    82a4:	mov	r2, #2
    82a8:	lsl	r3, r1, #7
    82ac:	and	r2, r2, r1, lsr #5
    82b0:	orr	r3, r3, r1, lsr #7
    82b4:	orr	r2, r3, r2
    82b8:	mov	r3, #4
    82bc:	and	r3, r3, r1, lsr #3
    82c0:	orr	r2, r2, r3
    82c4:	mov	r3, #8
    82c8:	and	r3, r3, r1, lsr #1
    82cc:	orr	r2, r2, r3
    82d0:	and	r3, r1, #8
    82d4:	orr	r2, r2, r3, lsl #1
    82d8:	and	r3, r1, #4
    82dc:	and	r1, r1, #2
    82e0:	orr	r2, r2, r3, lsl #3
    82e4:	mvn	r3, #15
    82e8:	orr	r1, r2, r1, lsl #5
    82ec:	ldr	r2, [r0, #64]	; 0x40
    82f0:	lsl	lr, r1, #8
    82f4:	add	ip, r3, r2, lsl #3
    82f8:	cmp	ip, #1
    82fc:	blt	833c <HV@@Base+0x62c>
    8300:	mov	r2, #0
    8304:	mov	r3, #0
    8308:	add	r2, r0, r2
    830c:	uxth	r1, lr
    8310:	add	r3, r3, #1
    8314:	ldrb	r2, [r2, #68]	; 0x44
    8318:	eor	r2, lr, r2
    831c:	lsl	r4, r2, #15
    8320:	and	r2, r2, #1
    8324:	orr	r1, r4, r1, lsr #1
    8328:	eor	r1, r1, r2, lsl #10
    832c:	eor	lr, r1, r2, lsl #3
    8330:	uxth	r2, r3
    8334:	cmp	ip, r2
    8338:	bgt	8308 <HV@@Base+0x5f8>
    833c:	add	r0, r0, ip
    8340:	ldrb	r1, [r0, #68]	; 0x44
    8344:	ldrb	r2, [r0, #69]	; 0x45
    8348:	ldrb	r3, [r0, #70]	; 0x46
    834c:	ldrb	r4, [r0, #71]	; 0x47
    8350:	orr	r1, r1, r2, lsl #1
    8354:	ldrb	r2, [r0, #72]	; 0x48
    8358:	orr	r1, r1, r3, lsl #2
    835c:	orr	r1, r1, r4, lsl #3
    8360:	orr	r1, r1, r2, lsl #4
    8364:	ldrb	r2, [r0, #73]	; 0x49
    8368:	orr	r1, r1, r2, lsl #5
    836c:	ldrb	r2, [r0, #74]	; 0x4a
    8370:	orr	r1, r1, r2, lsl #6
    8374:	ldrb	r2, [r0, #75]	; 0x4b
    8378:	orr	r1, r1, r2, lsl #7
    837c:	ldrb	r2, [r0, #76]	; 0x4c
    8380:	orr	r1, r1, r2, lsl #8
    8384:	ldrb	r2, [r0, #77]	; 0x4d
    8388:	orr	r1, r1, r2, lsl #9
    838c:	ldrb	r2, [r0, #78]	; 0x4e
    8390:	orr	r1, r1, r2, lsl #10
    8394:	ldrb	r2, [r0, #79]	; 0x4f
    8398:	orr	r1, r1, r2, lsl #11
    839c:	ldrb	r2, [r0, #80]	; 0x50
    83a0:	orr	r1, r1, r2, lsl #12
    83a4:	ldrb	r2, [r0, #81]	; 0x51
    83a8:	orr	r1, r1, r2, lsl #13
    83ac:	ldrb	r2, [r0, #82]	; 0x52
    83b0:	ldrb	r0, [r0, #83]	; 0x53
    83b4:	orr	r1, r1, r2, lsl #14
    83b8:	orr	r0, r1, r0, lsl #15
    83bc:	uxth	r1, lr
    83c0:	uxth	r0, r0
    83c4:	sub	r0, r1, r0
    83c8:	clz	r0, r0
    83cc:	lsr	r0, r0, #5
    83d0:	pop	{r4, sl, fp, pc}
    83d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    83d8:	add	fp, sp, #28
    83dc:	sub	sp, sp, #36	; 0x24
    83e0:	mov	r6, r1
    83e4:	ldr	sl, [fp, #12]
    83e8:	ldr	r1, [fp, #8]
    83ec:	mov	r9, r2
    83f0:	mov	r5, #0
    83f4:	cmp	r2, #2
    83f8:	bne	84d0 <HV@@Base+0x7c0>
    83fc:	cmp	r3, #16
    8400:	blt	9070 <HV@@Base+0x1360>
    8404:	cmp	r1, #0
    8408:	beq	8564 <HV@@Base+0x854>
    840c:	cmp	r3, #30
    8410:	blt	9070 <HV@@Base+0x1360>
    8414:	mov	r1, #16
    8418:	bl	8060 <HV@@Base+0x350>
    841c:	cmp	r0, #0
    8420:	beq	9070 <HV@@Base+0x1360>
    8424:	ldr	r2, [pc, #3152]	; 907c <HV@@Base+0x136c>
    8428:	and	r1, r6, #63	; 0x3f
    842c:	ldrb	r5, [sl, #4]
    8430:	add	r2, pc, r2
    8434:	tst	r5, #1
    8438:	ldrb	r1, [r2, r1]
    843c:	add	r2, r1, #18
    8440:	movw	r1, #2065	; 0x811
    8444:	movt	r1, #516	; 0x204
    8448:	umull	r3, r6, r2, r1
    844c:	ldrb	r3, [r0]
    8450:	bne	8b34 <HV@@Base+0xe24>
    8454:	strb	r3, [sl, #44]	; 0x2c
    8458:	ldrb	r1, [r0, #1]
    845c:	strb	r1, [sl, #45]	; 0x2d
    8460:	ldrb	r1, [r0, #2]
    8464:	strb	r1, [sl, #46]	; 0x2e
    8468:	ldrb	r1, [r0, #3]
    846c:	strb	r1, [sl, #47]	; 0x2f
    8470:	ldrb	r1, [r0, #4]
    8474:	strb	r1, [sl, #48]	; 0x30
    8478:	ldrb	r1, [r0, #5]
    847c:	strb	r1, [sl, #49]	; 0x31
    8480:	ldrb	r1, [r0, #6]
    8484:	strb	r1, [sl, #50]	; 0x32
    8488:	ldrb	r1, [r0, #7]
    848c:	strb	r1, [sl, #51]	; 0x33
    8490:	ldrb	r1, [r0, #8]
    8494:	strb	r1, [sl, #52]	; 0x34
    8498:	ldrb	r1, [r0, #9]
    849c:	strb	r1, [sl, #53]	; 0x35
    84a0:	ldrb	r1, [r0, #10]
    84a4:	strb	r1, [sl, #54]	; 0x36
    84a8:	ldrb	r1, [r0, #11]
    84ac:	strb	r1, [sl, #55]	; 0x37
    84b0:	ldrb	r1, [r0, #12]
    84b4:	strb	r1, [sl, #56]	; 0x38
    84b8:	ldrb	r1, [r0, #13]
    84bc:	strb	r1, [sl, #57]	; 0x39
    84c0:	ldrb	r1, [r0, #14]
    84c4:	strb	r1, [sl, #58]	; 0x3a
    84c8:	ldrb	r1, [r0, #15]
    84cc:	b	8df4 <HV@@Base+0x10e4>
    84d0:	cmp	r3, #8
    84d4:	blt	9070 <HV@@Base+0x1360>
    84d8:	cmp	r1, #0
    84dc:	beq	8618 <HV@@Base+0x908>
    84e0:	cmp	r3, #15
    84e4:	blt	9070 <HV@@Base+0x1360>
    84e8:	mov	r1, #8
    84ec:	bl	8060 <HV@@Base+0x350>
    84f0:	cmp	r0, #0
    84f4:	beq	9070 <HV@@Base+0x1360>
    84f8:	ldr	r2, [pc, #2948]	; 9084 <HV@@Base+0x1374>
    84fc:	and	r1, r6, #63	; 0x3f
    8500:	ldrb	r5, [sl, #4]
    8504:	add	r2, pc, r2
    8508:	tst	r5, #1
    850c:	ldrb	r1, [r2, r1]
    8510:	add	r2, r1, #18
    8514:	movw	r1, #2065	; 0x811
    8518:	movt	r1, #516	; 0x204
    851c:	umull	r3, r6, r2, r1
    8520:	ldrb	r3, [r0]
    8524:	bne	8e84 <HV@@Base+0x1174>
    8528:	strb	r3, [sl, #44]	; 0x2c
    852c:	ldrb	r1, [r0, #1]
    8530:	strb	r1, [sl, #45]	; 0x2d
    8534:	ldrb	r1, [r0, #2]
    8538:	strb	r1, [sl, #46]	; 0x2e
    853c:	ldrb	r1, [r0, #3]
    8540:	strb	r1, [sl, #47]	; 0x2f
    8544:	ldrb	r1, [r0, #4]
    8548:	strb	r1, [sl, #48]	; 0x30
    854c:	ldrb	r1, [r0, #5]
    8550:	strb	r1, [sl, #49]	; 0x31
    8554:	ldrb	r1, [r0, #6]
    8558:	strb	r1, [sl, #50]	; 0x32
    855c:	ldrb	r1, [r0, #7]
    8560:	b	8fe4 <HV@@Base+0x12d4>
    8564:	ldr	r2, [pc, #2836]	; 9080 <HV@@Base+0x1370>
    8568:	and	r1, r6, #63	; 0x3f
    856c:	movw	r8, #2065	; 0x811
    8570:	ldrb	r5, [sl, #4]
    8574:	movt	r8, #516	; 0x204
    8578:	add	r2, pc, r2
    857c:	tst	r5, #1
    8580:	ldrb	r1, [r2, r1]
    8584:	add	r3, r1, #18
    8588:	umull	r2, r6, r3, r8
    858c:	ldrb	r2, [r0]
    8590:	bne	8684 <HV@@Base+0x974>
    8594:	strb	r2, [sl, #44]	; 0x2c
    8598:	ldrb	r1, [r0, #1]
    859c:	strb	r1, [sl, #45]	; 0x2d
    85a0:	ldrb	r1, [r0, #2]
    85a4:	strb	r1, [sl, #46]	; 0x2e
    85a8:	ldrb	r4, [r0, #3]
    85ac:	strb	r4, [sl, #47]	; 0x2f
    85b0:	ldrb	r7, [r0, #4]
    85b4:	strb	r7, [sl, #48]	; 0x30
    85b8:	ldrb	ip, [r0, #5]
    85bc:	strb	ip, [sl, #49]	; 0x31
    85c0:	ldrb	r5, [r0, #6]
    85c4:	strb	r5, [sl, #50]	; 0x32
    85c8:	ldrb	r8, [r0, #7]
    85cc:	strb	r8, [sl, #51]	; 0x33
    85d0:	ldrb	r1, [r0, #8]
    85d4:	strb	r1, [sl, #52]	; 0x34
    85d8:	str	r1, [sp, #28]
    85dc:	ldrb	r1, [r0, #9]
    85e0:	strb	r1, [sl, #53]	; 0x35
    85e4:	str	r1, [sp, #32]
    85e8:	ldrb	r3, [r0, #10]
    85ec:	strb	r3, [sl, #54]	; 0x36
    85f0:	ldrb	r6, [r0, #11]
    85f4:	strb	r6, [sl, #55]	; 0x37
    85f8:	ldrb	r2, [r0, #12]
    85fc:	strb	r2, [sl, #56]	; 0x38
    8600:	ldrb	r1, [r0, #13]
    8604:	strb	r1, [sl, #57]	; 0x39
    8608:	ldrb	r1, [r0, #14]
    860c:	strb	r1, [sl, #58]	; 0x3a
    8610:	ldrb	r0, [r0, #15]
    8614:	b	89c4 <HV@@Base+0xcb4>
    8618:	ldr	r2, [pc, #2664]	; 9088 <HV@@Base+0x1378>
    861c:	and	r1, r6, #63	; 0x3f
    8620:	ldrb	r5, [sl, #4]
    8624:	add	r2, pc, r2
    8628:	tst	r5, #1
    862c:	ldrb	r1, [r2, r1]
    8630:	add	r3, r1, #18
    8634:	movw	r1, #2065	; 0x811
    8638:	movt	r1, #516	; 0x204
    863c:	umull	r2, r6, r3, r1
    8640:	ldrb	r2, [r0]
    8644:	bne	89cc <HV@@Base+0xcbc>
    8648:	strb	r2, [sl, #44]	; 0x2c
    864c:	ldrb	r1, [r0, #1]
    8650:	strb	r1, [sl, #45]	; 0x2d
    8654:	ldrb	r1, [r0, #2]
    8658:	strb	r1, [sl, #46]	; 0x2e
    865c:	ldrb	r3, [r0, #3]
    8660:	strb	r3, [sl, #47]	; 0x2f
    8664:	ldrb	r6, [r0, #4]
    8668:	strb	r6, [sl, #48]	; 0x30
    866c:	ldrb	r5, [r0, #5]
    8670:	strb	r5, [sl, #49]	; 0x31
    8674:	ldrb	r2, [r0, #6]
    8678:	strb	r2, [sl, #50]	; 0x32
    867c:	ldrb	r0, [r0, #7]
    8680:	b	8b2c <HV@@Base+0xe1c>
    8684:	sub	r5, r3, r6
    8688:	ldr	r7, [pc, #2560]	; 9090 <HV@@Base+0x1380>
    868c:	add	r6, r6, r5, lsr #1
    8690:	lsr	r6, r6, #6
    8694:	sub	r6, r6, r6, lsl #7
    8698:	add	r7, pc, r7
    869c:	add	r3, r3, r6
    86a0:	uxth	r6, r3
    86a4:	ldrb	r6, [r7, r6]
    86a8:	eor	r2, r6, r2
    86ac:	strb	r2, [sl, #44]	; 0x2c
    86b0:	add	r2, r3, #1
    86b4:	uxtb	r3, r2
    86b8:	umull	r6, r5, r3, r8
    86bc:	ldrb	r6, [r0, #1]
    86c0:	sub	r3, r3, r5
    86c4:	add	r3, r5, r3, lsr #1
    86c8:	lsr	r3, r3, #6
    86cc:	sub	r3, r3, r3, lsl #7
    86d0:	uxtab	r2, r3, r2
    86d4:	ldrb	r3, [r7, r2]
    86d8:	add	r2, r2, #1
    86dc:	eor	r3, r3, r6
    86e0:	strb	r3, [sl, #45]	; 0x2d
    86e4:	umull	r3, r6, r2, r8
    86e8:	sub	r3, r2, r6
    86ec:	add	r3, r6, r3, lsr #1
    86f0:	ldrb	r6, [r0, #2]
    86f4:	lsr	r3, r3, #6
    86f8:	sub	r3, r3, r3, lsl #7
    86fc:	add	r2, r2, r3
    8700:	ldrb	r3, [r7, r2]
    8704:	add	r2, r2, #1
    8708:	eor	r3, r3, r6
    870c:	strb	r3, [sl, #46]	; 0x2e
    8710:	umull	r3, r6, r2, r8
    8714:	sub	r3, r2, r6
    8718:	add	r3, r6, r3, lsr #1
    871c:	lsr	r3, r3, #6
    8720:	sub	r3, r3, r3, lsl #7
    8724:	add	r2, r2, r3
    8728:	str	r2, [sp, #32]
    872c:	add	r2, r2, #1
    8730:	umull	r3, r6, r2, r8
    8734:	sub	r3, r2, r6
    8738:	add	r3, r6, r3, lsr #1
    873c:	lsr	r3, r3, #6
    8740:	sub	r3, r3, r3, lsl #7
    8744:	add	r2, r2, r3
    8748:	str	r2, [sp, #28]
    874c:	add	r2, r2, #1
    8750:	umull	r3, r6, r2, r8
    8754:	sub	r3, r2, r6
    8758:	add	r3, r6, r3, lsr #1
    875c:	lsr	r3, r3, #6
    8760:	sub	r3, r3, r3, lsl #7
    8764:	add	r2, r2, r3
    8768:	str	r2, [sp, #24]
    876c:	add	r2, r2, #1
    8770:	umull	r3, r6, r2, r8
    8774:	sub	r3, r2, r6
    8778:	add	r3, r6, r3, lsr #1
    877c:	lsr	r3, r3, #6
    8780:	sub	r3, r3, r3, lsl #7
    8784:	add	r2, r2, r3
    8788:	str	r2, [sp, #20]
    878c:	add	r2, r2, #1
    8790:	umull	r3, r6, r2, r8
    8794:	sub	r3, r2, r6
    8798:	add	r3, r6, r3, lsr #1
    879c:	lsr	r3, r3, #6
    87a0:	sub	r3, r3, r3, lsl #7
    87a4:	add	lr, r2, r3
    87a8:	add	r3, lr, #1
    87ac:	umull	r6, r1, r3, r8
    87b0:	sub	r6, r3, r1
    87b4:	add	r1, r1, r6, lsr #1
    87b8:	lsr	r1, r1, #6
    87bc:	sub	r1, r1, r1, lsl #7
    87c0:	add	r3, r3, r1
    87c4:	add	r1, r3, #1
    87c8:	umull	r6, r4, r1, r8
    87cc:	sub	r6, r1, r4
    87d0:	add	r6, r4, r6, lsr #1
    87d4:	lsr	r6, r6, #6
    87d8:	sub	r6, r6, r6, lsl #7
    87dc:	add	r6, r1, r6
    87e0:	add	r1, r6, #1
    87e4:	umull	r4, r7, r1, r8
    87e8:	sub	r4, r1, r7
    87ec:	add	r7, r7, r4, lsr #1
    87f0:	lsr	r7, r7, #6
    87f4:	sub	r7, r7, r7, lsl #7
    87f8:	add	r4, r1, r7
    87fc:	add	r1, r4, #1
    8800:	umull	r7, ip, r1, r8
    8804:	sub	r7, r1, ip
    8808:	add	r7, ip, r7, lsr #1
    880c:	lsr	r7, r7, #6
    8810:	sub	r7, r7, r7, lsl #7
    8814:	add	ip, r1, r7
    8818:	add	r1, ip, #1
    881c:	umull	r5, r7, r1, r8
    8820:	sub	r5, r1, r7
    8824:	add	r5, r7, r5, lsr #1
    8828:	lsr	r5, r5, #6
    882c:	sub	r5, r5, r5, lsl #7
    8830:	add	r1, r1, r5
    8834:	add	r5, r1, #1
    8838:	umull	r7, r8, r5, r8
    883c:	sub	r7, r5, r8
    8840:	add	r7, r8, r7, lsr #1
    8844:	lsr	r7, r7, #6
    8848:	sub	r7, r7, r7, lsl #7
    884c:	add	r2, r5, r7
    8850:	str	r2, [sp, #16]
    8854:	ldr	r8, [pc, #2104]	; 9094 <HV@@Base+0x1384>
    8858:	ldr	r2, [sp, #20]
    885c:	add	r8, pc, r8
    8860:	ldrb	r1, [r8, r1]
    8864:	mov	r5, r8
    8868:	ldrb	r3, [r8, r3]
    886c:	str	r1, [sp, #12]
    8870:	ldrb	r1, [r8, ip]
    8874:	str	r1, [sp, #8]
    8878:	ldrb	r1, [r8, r4]
    887c:	str	r1, [sp, #4]
    8880:	ldrb	r1, [r8, r6]
    8884:	ldrb	r6, [r8, lr]
    8888:	ldrb	lr, [r8, r2]
    888c:	ldr	r2, [sp, #24]
    8890:	ldrb	r7, [r8, r2]
    8894:	ldr	r2, [sp, #28]
    8898:	ldrb	r4, [r8, r2]
    889c:	ldr	r2, [sp, #32]
    88a0:	ldrb	r2, [r8, r2]
    88a4:	ldrb	r8, [r0, #3]
    88a8:	eor	r2, r2, r8
    88ac:	strb	r2, [sl, #47]	; 0x2f
    88b0:	str	r2, [sp, #24]
    88b4:	ldrb	r2, [r0, #4]
    88b8:	eor	r2, r4, r2
    88bc:	strb	r2, [sl, #48]	; 0x30
    88c0:	str	r2, [sp, #20]
    88c4:	ldrb	r2, [r0, #5]
    88c8:	eor	ip, r7, r2
    88cc:	strb	ip, [sl, #49]	; 0x31
    88d0:	ldrb	r2, [r0, #6]
    88d4:	eor	r5, lr, r2
    88d8:	strb	r5, [sl, #50]	; 0x32
    88dc:	ldrb	r7, [r0, #7]
    88e0:	eor	r7, r6, r7
    88e4:	strb	r7, [sl, #51]	; 0x33
    88e8:	ldrb	r6, [r0, #8]
    88ec:	eor	r2, r3, r6
    88f0:	strb	r2, [sl, #52]	; 0x34
    88f4:	str	r2, [sp, #28]
    88f8:	ldr	r2, [sp, #8]
    88fc:	ldrb	r3, [r0, #9]
    8900:	eor	r1, r1, r3
    8904:	strb	r1, [sl, #53]	; 0x35
    8908:	str	r1, [sp, #32]
    890c:	ldr	r1, [sp, #4]
    8910:	ldrb	r3, [r0, #10]
    8914:	eor	r3, r1, r3
    8918:	strb	r3, [sl, #54]	; 0x36
    891c:	ldrb	r1, [r0, #11]
    8920:	eor	r6, r2, r1
    8924:	ldr	r2, [sp, #12]
    8928:	strb	r6, [sl, #55]	; 0x37
    892c:	ldrb	r1, [r0, #12]
    8930:	eor	r2, r2, r1
    8934:	strb	r2, [sl, #56]	; 0x38
    8938:	ldr	lr, [pc, #1880]	; 9098 <HV@@Base+0x1388>
    893c:	ldr	r8, [sp, #16]
    8940:	ldrb	r4, [r0, #13]
    8944:	add	lr, pc, lr
    8948:	ldrb	r1, [lr, r8]
    894c:	eor	r1, r1, r4
    8950:	movw	r4, #2065	; 0x811
    8954:	movt	r4, #516	; 0x204
    8958:	strb	r1, [sl, #57]	; 0x39
    895c:	add	r1, r8, #1
    8960:	umull	r4, r8, r1, r4
    8964:	sub	r4, r1, r8
    8968:	add	r4, r8, r4, lsr #1
    896c:	mov	r8, r7
    8970:	ldrb	r7, [r0, #14]
    8974:	lsr	r4, r4, #6
    8978:	sub	r4, r4, r4, lsl #7
    897c:	add	r1, r1, r4
    8980:	ldrb	r4, [lr, r1]
    8984:	add	r1, r1, #1
    8988:	eor	r4, r4, r7
    898c:	strb	r4, [sl, #58]	; 0x3a
    8990:	movw	r4, #2065	; 0x811
    8994:	movt	r4, #516	; 0x204
    8998:	ldrb	r0, [r0, #15]
    899c:	umull	r4, r7, r1, r4
    89a0:	sub	r4, r1, r7
    89a4:	add	r4, r7, r4, lsr #1
    89a8:	ldr	r7, [sp, #20]
    89ac:	lsr	r4, r4, #6
    89b0:	sub	r4, r4, r4, lsl #7
    89b4:	add	r1, r1, r4
    89b8:	ldr	r4, [sp, #24]
    89bc:	ldrb	r1, [lr, r1]
    89c0:	eor	r0, r1, r0
    89c4:	strb	r0, [sl, #59]	; 0x3b
    89c8:	b	8e2c <HV@@Base+0x111c>
    89cc:	sub	r7, r3, r6
    89d0:	ldr	ip, [pc, #1736]	; 90a0 <HV@@Base+0x1390>
    89d4:	add	r7, r6, r7, lsr #1
    89d8:	lsr	r7, r7, #6
    89dc:	sub	r7, r7, r7, lsl #7
    89e0:	add	ip, pc, ip
    89e4:	add	r3, r3, r7
    89e8:	uxth	r7, r3
    89ec:	ldrb	r7, [ip, r7]
    89f0:	eor	r2, r7, r2
    89f4:	strb	r2, [sl, #44]	; 0x2c
    89f8:	add	r2, r3, #1
    89fc:	uxtb	r3, r2
    8a00:	umull	r7, r6, r3, r1
    8a04:	ldrb	r7, [r0, #1]
    8a08:	sub	r3, r3, r6
    8a0c:	add	r3, r6, r3, lsr #1
    8a10:	lsr	r3, r3, #6
    8a14:	sub	r3, r3, r3, lsl #7
    8a18:	uxtab	r2, r3, r2
    8a1c:	ldrb	r3, [ip, r2]
    8a20:	add	r2, r2, #1
    8a24:	eor	r3, r3, r7
    8a28:	strb	r3, [sl, #45]	; 0x2d
    8a2c:	umull	r3, r7, r2, r1
    8a30:	sub	r3, r2, r7
    8a34:	add	r3, r7, r3, lsr #1
    8a38:	ldrb	r7, [r0, #2]
    8a3c:	lsr	r3, r3, #6
    8a40:	sub	r3, r3, r3, lsl #7
    8a44:	add	r2, r2, r3
    8a48:	ldrb	r3, [ip, r2]
    8a4c:	add	r2, r2, #1
    8a50:	eor	r3, r3, r7
    8a54:	strb	r3, [sl, #46]	; 0x2e
    8a58:	umull	r3, r7, r2, r1
    8a5c:	sub	r3, r2, r7
    8a60:	add	r3, r7, r3, lsr #1
    8a64:	lsr	r3, r3, #6
    8a68:	sub	r3, r3, r3, lsl #7
    8a6c:	add	r2, r2, r3
    8a70:	add	r3, r2, #1
    8a74:	ldrb	r2, [ip, r2]
    8a78:	umull	r7, r6, r3, r1
    8a7c:	sub	r7, r3, r6
    8a80:	add	r7, r6, r7, lsr #1
    8a84:	lsr	r7, r7, #6
    8a88:	sub	r7, r7, r7, lsl #7
    8a8c:	add	r3, r3, r7
    8a90:	add	r7, r3, #1
    8a94:	umull	r6, r5, r7, r1
    8a98:	sub	r6, r7, r5
    8a9c:	add	r6, r5, r6, lsr #1
    8aa0:	lsr	r6, r6, #6
    8aa4:	sub	r6, r6, r6, lsl #7
    8aa8:	add	r7, r7, r6
    8aac:	add	r6, r7, #1
    8ab0:	ldrb	r7, [ip, r7]
    8ab4:	umull	r5, r4, r6, r1
    8ab8:	sub	r5, r6, r4
    8abc:	add	r5, r4, r5, lsr #1
    8ac0:	lsr	r5, r5, #6
    8ac4:	sub	r5, r5, r5, lsl #7
    8ac8:	add	r4, r6, r5
    8acc:	ldrb	r6, [ip, r3]
    8ad0:	ldrb	r3, [r0, #3]
    8ad4:	eor	r3, r2, r3
    8ad8:	strb	r3, [sl, #47]	; 0x2f
    8adc:	ldrb	r2, [r0, #4]
    8ae0:	eor	r6, r6, r2
    8ae4:	strb	r6, [sl, #48]	; 0x30
    8ae8:	ldrb	r2, [r0, #5]
    8aec:	eor	r5, r7, r2
    8af0:	ldrb	r2, [ip, r4]
    8af4:	strb	r5, [sl, #49]	; 0x31
    8af8:	ldrb	r7, [r0, #6]
    8afc:	eor	r2, r2, r7
    8b00:	add	r7, r4, #1
    8b04:	umull	r1, r4, r7, r1
    8b08:	strb	r2, [sl, #50]	; 0x32
    8b0c:	ldrb	r0, [r0, #7]
    8b10:	sub	r1, r7, r4
    8b14:	add	r1, r4, r1, lsr #1
    8b18:	lsr	r1, r1, #6
    8b1c:	sub	r1, r1, r1, lsl #7
    8b20:	add	r1, r7, r1
    8b24:	ldrb	r1, [ip, r1]
    8b28:	eor	r0, r1, r0
    8b2c:	strb	r0, [sl, #51]	; 0x33
    8b30:	b	9000 <HV@@Base+0x12f0>
    8b34:	sub	r7, r2, r6
    8b38:	add	r7, r6, r7, lsr #1
    8b3c:	lsr	r7, r7, #6
    8b40:	sub	r7, r7, r7, lsl #7
    8b44:	add	r7, r2, r7
    8b48:	ldr	r2, [pc, #1356]	; 909c <HV@@Base+0x138c>
    8b4c:	uxth	r6, r7
    8b50:	add	r2, pc, r2
    8b54:	ldrb	r6, [r2, r6]
    8b58:	eor	r3, r6, r3
    8b5c:	strb	r3, [sl, #44]	; 0x2c
    8b60:	add	r3, r7, #1
    8b64:	uxtb	r7, r3
    8b68:	umull	r6, r5, r7, r1
    8b6c:	ldrb	r6, [r0, #1]
    8b70:	sub	r7, r7, r5
    8b74:	add	r7, r5, r7, lsr #1
    8b78:	lsr	r7, r7, #6
    8b7c:	sub	r7, r7, r7, lsl #7
    8b80:	uxtab	r3, r7, r3
    8b84:	ldrb	r7, [r2, r3]
    8b88:	add	r3, r3, #1
    8b8c:	eor	r7, r7, r6
    8b90:	strb	r7, [sl, #45]	; 0x2d
    8b94:	umull	r7, r6, r3, r1
    8b98:	sub	r7, r3, r6
    8b9c:	add	r7, r6, r7, lsr #1
    8ba0:	ldrb	r6, [r0, #2]
    8ba4:	lsr	r7, r7, #6
    8ba8:	sub	r7, r7, r7, lsl #7
    8bac:	add	r3, r3, r7
    8bb0:	ldrb	r7, [r2, r3]
    8bb4:	add	r3, r3, #1
    8bb8:	eor	r7, r7, r6
    8bbc:	strb	r7, [sl, #46]	; 0x2e
    8bc0:	umull	r7, r6, r3, r1
    8bc4:	sub	r7, r3, r6
    8bc8:	add	r7, r6, r7, lsr #1
    8bcc:	ldrb	r6, [r0, #3]
    8bd0:	lsr	r7, r7, #6
    8bd4:	sub	r7, r7, r7, lsl #7
    8bd8:	add	r3, r3, r7
    8bdc:	ldrb	r7, [r2, r3]
    8be0:	add	r3, r3, #1
    8be4:	eor	r7, r7, r6
    8be8:	strb	r7, [sl, #47]	; 0x2f
    8bec:	umull	r7, r6, r3, r1
    8bf0:	sub	r7, r3, r6
    8bf4:	add	r7, r6, r7, lsr #1
    8bf8:	ldrb	r6, [r0, #4]
    8bfc:	lsr	r7, r7, #6
    8c00:	sub	r7, r7, r7, lsl #7
    8c04:	add	r3, r3, r7
    8c08:	ldrb	r7, [r2, r3]
    8c0c:	add	r3, r3, #1
    8c10:	eor	r7, r7, r6
    8c14:	strb	r7, [sl, #48]	; 0x30
    8c18:	umull	r7, r6, r3, r1
    8c1c:	sub	r7, r3, r6
    8c20:	add	r7, r6, r7, lsr #1
    8c24:	ldrb	r6, [r0, #5]
    8c28:	lsr	r7, r7, #6
    8c2c:	sub	r7, r7, r7, lsl #7
    8c30:	add	r3, r3, r7
    8c34:	ldrb	r7, [r2, r3]
    8c38:	add	r3, r3, #1
    8c3c:	eor	r7, r7, r6
    8c40:	strb	r7, [sl, #49]	; 0x31
    8c44:	umull	r7, r6, r3, r1
    8c48:	sub	r7, r3, r6
    8c4c:	add	r7, r6, r7, lsr #1
    8c50:	ldrb	r6, [r0, #6]
    8c54:	lsr	r7, r7, #6
    8c58:	sub	r7, r7, r7, lsl #7
    8c5c:	add	r3, r3, r7
    8c60:	ldrb	r7, [r2, r3]
    8c64:	add	r3, r3, #1
    8c68:	eor	r7, r7, r6
    8c6c:	strb	r7, [sl, #50]	; 0x32
    8c70:	umull	r7, r6, r3, r1
    8c74:	sub	r7, r3, r6
    8c78:	add	r7, r6, r7, lsr #1
    8c7c:	ldrb	r6, [r0, #7]
    8c80:	lsr	r7, r7, #6
    8c84:	sub	r7, r7, r7, lsl #7
    8c88:	add	r3, r3, r7
    8c8c:	ldrb	r7, [r2, r3]
    8c90:	add	r3, r3, #1
    8c94:	eor	r7, r7, r6
    8c98:	strb	r7, [sl, #51]	; 0x33
    8c9c:	umull	r7, r6, r3, r1
    8ca0:	sub	r7, r3, r6
    8ca4:	add	r7, r6, r7, lsr #1
    8ca8:	ldrb	r6, [r0, #8]
    8cac:	lsr	r7, r7, #6
    8cb0:	sub	r7, r7, r7, lsl #7
    8cb4:	add	r3, r3, r7
    8cb8:	ldrb	r7, [r2, r3]
    8cbc:	add	r3, r3, #1
    8cc0:	eor	r7, r7, r6
    8cc4:	strb	r7, [sl, #52]	; 0x34
    8cc8:	umull	r7, r6, r3, r1
    8ccc:	sub	r7, r3, r6
    8cd0:	add	r7, r6, r7, lsr #1
    8cd4:	ldrb	r6, [r0, #9]
    8cd8:	lsr	r7, r7, #6
    8cdc:	sub	r7, r7, r7, lsl #7
    8ce0:	add	r3, r3, r7
    8ce4:	ldrb	r7, [r2, r3]
    8ce8:	add	r3, r3, #1
    8cec:	eor	r7, r7, r6
    8cf0:	strb	r7, [sl, #53]	; 0x35
    8cf4:	umull	r7, r6, r3, r1
    8cf8:	sub	r7, r3, r6
    8cfc:	add	r7, r6, r7, lsr #1
    8d00:	ldrb	r6, [r0, #10]
    8d04:	lsr	r7, r7, #6
    8d08:	sub	r7, r7, r7, lsl #7
    8d0c:	add	r3, r3, r7
    8d10:	ldrb	r7, [r2, r3]
    8d14:	add	r3, r3, #1
    8d18:	eor	r7, r7, r6
    8d1c:	strb	r7, [sl, #54]	; 0x36
    8d20:	umull	r7, r6, r3, r1
    8d24:	sub	r7, r3, r6
    8d28:	add	r7, r6, r7, lsr #1
    8d2c:	ldrb	r6, [r0, #11]
    8d30:	lsr	r7, r7, #6
    8d34:	sub	r7, r7, r7, lsl #7
    8d38:	add	r3, r3, r7
    8d3c:	ldrb	r7, [r2, r3]
    8d40:	add	r3, r3, #1
    8d44:	eor	r7, r7, r6
    8d48:	strb	r7, [sl, #55]	; 0x37
    8d4c:	umull	r7, r6, r3, r1
    8d50:	sub	r7, r3, r6
    8d54:	add	r7, r6, r7, lsr #1
    8d58:	ldrb	r6, [r0, #12]
    8d5c:	lsr	r7, r7, #6
    8d60:	sub	r7, r7, r7, lsl #7
    8d64:	add	r3, r3, r7
    8d68:	ldrb	r7, [r2, r3]
    8d6c:	add	r3, r3, #1
    8d70:	eor	r7, r7, r6
    8d74:	strb	r7, [sl, #56]	; 0x38
    8d78:	umull	r7, r6, r3, r1
    8d7c:	sub	r7, r3, r6
    8d80:	add	r7, r6, r7, lsr #1
    8d84:	ldrb	r6, [r0, #13]
    8d88:	lsr	r7, r7, #6
    8d8c:	sub	r7, r7, r7, lsl #7
    8d90:	add	r3, r3, r7
    8d94:	ldrb	r7, [r2, r3]
    8d98:	add	r3, r3, #1
    8d9c:	eor	r7, r7, r6
    8da0:	strb	r7, [sl, #57]	; 0x39
    8da4:	umull	r7, r6, r3, r1
    8da8:	sub	r7, r3, r6
    8dac:	add	r7, r6, r7, lsr #1
    8db0:	ldrb	r6, [r0, #14]
    8db4:	lsr	r7, r7, #6
    8db8:	sub	r7, r7, r7, lsl #7
    8dbc:	add	r3, r3, r7
    8dc0:	ldrb	r7, [r2, r3]
    8dc4:	add	r3, r3, #1
    8dc8:	eor	r7, r7, r6
    8dcc:	strb	r7, [sl, #58]	; 0x3a
    8dd0:	umull	r1, r7, r3, r1
    8dd4:	sub	r1, r3, r7
    8dd8:	add	r1, r7, r1, lsr #1
    8ddc:	lsr	r1, r1, #6
    8de0:	sub	r1, r1, r1, lsl #7
    8de4:	add	r1, r3, r1
    8de8:	ldrb	r1, [r2, r1]
    8dec:	ldrb	r2, [r0, #15]
    8df0:	eor	r1, r1, r2
    8df4:	strb	r1, [sl, #59]	; 0x3b
    8df8:	bl	4550 <free@plt>
    8dfc:	ldrb	r0, [sl, #53]	; 0x35
    8e00:	ldrb	r2, [sl, #56]	; 0x38
    8e04:	ldrb	r6, [sl, #55]	; 0x37
    8e08:	ldrb	r3, [sl, #54]	; 0x36
    8e0c:	ldrb	r8, [sl, #51]	; 0x33
    8e10:	ldrb	r4, [sl, #47]	; 0x2f
    8e14:	ldrb	r7, [sl, #48]	; 0x30
    8e18:	ldrb	ip, [sl, #49]	; 0x31
    8e1c:	ldrb	r5, [sl, #50]	; 0x32
    8e20:	str	r0, [sp, #32]
    8e24:	ldrb	r0, [sl, #52]	; 0x34
    8e28:	str	r0, [sp, #28]
    8e2c:	uxtb	r0, r7
    8e30:	uxtb	r1, r4
    8e34:	orr	r0, r1, r0, lsl #1
    8e38:	uxtb	r1, ip
    8e3c:	orr	r0, r0, r1, lsl #2
    8e40:	uxtb	r1, r5
    8e44:	orr	r0, r0, r1, lsl #3
    8e48:	uxtb	r1, r8
    8e4c:	orr	r0, r0, r1, lsl #4
    8e50:	ldr	r1, [sp, #28]
    8e54:	uxtb	r1, r1
    8e58:	orr	r0, r0, r1, lsl #5
    8e5c:	ldr	r1, [sp, #32]
    8e60:	uxtb	r1, r1
    8e64:	orr	r0, r0, r1, lsl #6
    8e68:	uxtb	r1, r3
    8e6c:	orr	r0, r0, r1, lsl #7
    8e70:	mov	r1, #4
    8e74:	orr	r0, r0, r6, lsl #8
    8e78:	orr	r0, r0, r2, lsl #9
    8e7c:	uxtah	r0, r1, r0
    8e80:	b	9018 <HV@@Base+0x1308>
    8e84:	sub	r7, r2, r6
    8e88:	add	r7, r6, r7, lsr #1
    8e8c:	lsr	r7, r7, #6
    8e90:	sub	r7, r7, r7, lsl #7
    8e94:	add	r7, r2, r7
    8e98:	ldr	r2, [pc, #516]	; 90a4 <HV@@Base+0x1394>
    8e9c:	uxth	r6, r7
    8ea0:	add	r2, pc, r2
    8ea4:	ldrb	r6, [r2, r6]
    8ea8:	eor	r3, r6, r3
    8eac:	strb	r3, [sl, #44]	; 0x2c
    8eb0:	add	r3, r7, #1
    8eb4:	uxtb	r7, r3
    8eb8:	umull	r6, r5, r7, r1
    8ebc:	ldrb	r6, [r0, #1]
    8ec0:	sub	r7, r7, r5
    8ec4:	add	r7, r5, r7, lsr #1
    8ec8:	lsr	r7, r7, #6
    8ecc:	sub	r7, r7, r7, lsl #7
    8ed0:	uxtab	r3, r7, r3
    8ed4:	ldrb	r7, [r2, r3]
    8ed8:	add	r3, r3, #1
    8edc:	eor	r7, r7, r6
    8ee0:	strb	r7, [sl, #45]	; 0x2d
    8ee4:	umull	r7, r6, r3, r1
    8ee8:	sub	r7, r3, r6
    8eec:	add	r7, r6, r7, lsr #1
    8ef0:	ldrb	r6, [r0, #2]
    8ef4:	lsr	r7, r7, #6
    8ef8:	sub	r7, r7, r7, lsl #7
    8efc:	add	r3, r3, r7
    8f00:	ldrb	r7, [r2, r3]
    8f04:	add	r3, r3, #1
    8f08:	eor	r7, r7, r6
    8f0c:	strb	r7, [sl, #46]	; 0x2e
    8f10:	umull	r7, r6, r3, r1
    8f14:	sub	r7, r3, r6
    8f18:	add	r7, r6, r7, lsr #1
    8f1c:	ldrb	r6, [r0, #3]
    8f20:	lsr	r7, r7, #6
    8f24:	sub	r7, r7, r7, lsl #7
    8f28:	add	r3, r3, r7
    8f2c:	ldrb	r7, [r2, r3]
    8f30:	add	r3, r3, #1
    8f34:	eor	r7, r7, r6
    8f38:	strb	r7, [sl, #47]	; 0x2f
    8f3c:	umull	r7, r6, r3, r1
    8f40:	sub	r7, r3, r6
    8f44:	add	r7, r6, r7, lsr #1
    8f48:	ldrb	r6, [r0, #4]
    8f4c:	lsr	r7, r7, #6
    8f50:	sub	r7, r7, r7, lsl #7
    8f54:	add	r3, r3, r7
    8f58:	ldrb	r7, [r2, r3]
    8f5c:	add	r3, r3, #1
    8f60:	eor	r7, r7, r6
    8f64:	strb	r7, [sl, #48]	; 0x30
    8f68:	umull	r7, r6, r3, r1
    8f6c:	sub	r7, r3, r6
    8f70:	add	r7, r6, r7, lsr #1
    8f74:	ldrb	r6, [r0, #5]
    8f78:	lsr	r7, r7, #6
    8f7c:	sub	r7, r7, r7, lsl #7
    8f80:	add	r3, r3, r7
    8f84:	ldrb	r7, [r2, r3]
    8f88:	add	r3, r3, #1
    8f8c:	eor	r7, r7, r6
    8f90:	strb	r7, [sl, #49]	; 0x31
    8f94:	umull	r7, r6, r3, r1
    8f98:	sub	r7, r3, r6
    8f9c:	add	r7, r6, r7, lsr #1
    8fa0:	ldrb	r6, [r0, #6]
    8fa4:	lsr	r7, r7, #6
    8fa8:	sub	r7, r7, r7, lsl #7
    8fac:	add	r3, r3, r7
    8fb0:	ldrb	r7, [r2, r3]
    8fb4:	add	r3, r3, #1
    8fb8:	eor	r7, r7, r6
    8fbc:	strb	r7, [sl, #50]	; 0x32
    8fc0:	umull	r1, r7, r3, r1
    8fc4:	sub	r1, r3, r7
    8fc8:	add	r1, r7, r1, lsr #1
    8fcc:	lsr	r1, r1, #6
    8fd0:	sub	r1, r1, r1, lsl #7
    8fd4:	add	r1, r3, r1
    8fd8:	ldrb	r1, [r2, r1]
    8fdc:	ldrb	r2, [r0, #7]
    8fe0:	eor	r1, r1, r2
    8fe4:	strb	r1, [sl, #51]	; 0x33
    8fe8:	bl	4550 <free@plt>
    8fec:	ldrb	r0, [sl, #51]	; 0x33
    8ff0:	ldrb	r3, [sl, #47]	; 0x2f
    8ff4:	ldrb	r6, [sl, #48]	; 0x30
    8ff8:	ldrb	r5, [sl, #49]	; 0x31
    8ffc:	ldrb	r2, [sl, #50]	; 0x32
    9000:	orr	r1, r3, r6, lsl #1
    9004:	orr	r1, r1, r5, lsl #2
    9008:	orr	r1, r1, r2, lsl #3
    900c:	orr	r0, r1, r0, lsl #4
    9010:	mov	r1, #3
    9014:	uxtab	r0, r1, r0
    9018:	str	r0, [sl, #64]	; 0x40
    901c:	ldrb	r1, [sl, #18]
    9020:	sub	r2, r1, #3
    9024:	mov	r1, #0
    9028:	uxtb	r3, r2
    902c:	cmp	r3, #12
    9030:	bhi	9044 <HV@@Base+0x1334>
    9034:	sxtb	r1, r2
    9038:	ldr	r2, [pc, #76]	; 908c <HV@@Base+0x137c>
    903c:	add	r2, pc, r2
    9040:	ldr	r1, [r2, r1, lsl #2]
    9044:	cmp	r0, r1
    9048:	str	r9, [sl, #40]	; 0x28
    904c:	mov	r5, #1
    9050:	movlt	r1, r0
    9054:	str	r1, [sl, #64]	; 0x40
    9058:	ldrb	r0, [sl, #44]	; 0x2c
    905c:	ldrb	r1, [sl, #45]	; 0x2d
    9060:	ldrb	r2, [sl, #46]	; 0x2e
    9064:	orr	r0, r0, r1, lsl #1
    9068:	strb	r2, [sl, #61]	; 0x3d
    906c:	strb	r0, [sl, #60]	; 0x3c
    9070:	mov	r0, r5
    9074:	sub	sp, fp, #28
    9078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    907c:	muleq	r0, lr, r0
    9080:	andeq	sl, r0, r6, asr pc
    9084:	andeq	sl, r0, sl, asr #31
    9088:	andeq	sl, r0, sl, lsr #29
    908c:	andeq	ip, r0, r4, asr sl
    9090:	andeq	sp, r0, r8, ror r3
    9094:			; <UNDEFINED> instruction: 0x0000d1b4
    9098:	andeq	sp, r0, ip, asr #1
    909c:	andeq	ip, r0, r0, asr #29
    90a0:	andeq	sp, r0, r0, lsr r0
    90a4:	andeq	ip, r0, r0, ror fp

000090a8 <try_clock@@Base>:
    90a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    90ac:	add	fp, sp, #28
    90b0:	sub	sp, sp, #68	; 0x44
    90b4:	mov	r9, r1
    90b8:	movw	r1, #2892	; 0xb4c
    90bc:	vldr	d18, [pc, #596]	; 9318 <try_clock@@Base+0x270>
    90c0:	vldr	d19, [pc, #600]	; 9320 <try_clock@@Base+0x278>
    90c4:	vldr	d20, [pc, #604]	; 9328 <try_clock@@Base+0x280>
    90c8:	add	ip, sp, #48	; 0x30
    90cc:	ldr	r2, [r9, #2900]	; 0xb54
    90d0:	add	r1, r9, r1
    90d4:	vld1.8	{d16}, [r1]
    90d8:	movw	r1, #2904	; 0xb58
    90dc:	add	r1, r9, r1
    90e0:	vmov.32	d17[0], r2
    90e4:	vtbl.8	d21, {d16-d17}, d18
    90e8:	vtbl.8	d22, {d16-d17}, d19
    90ec:	vtbl.8	d16, {d16-d17}, d20
    90f0:	vorr	d17, d22, d21
    90f4:	vand	d23, d22, d21
    90f8:	vand	d17, d17, d16
    90fc:	vorr	d17, d17, d23
    9100:	vuzp.8	d17, d23
    9104:	vst1.32	{d17[0]}, [ip :32]
    9108:	vld1.8	{d24}, [r1]
    910c:	ldr	r1, [r9, #2912]	; 0xb60
    9110:	vmov.32	d25[0], r1
    9114:	orr	r1, ip, #4
    9118:	vtbl.8	d17, {d24-d25}, d18
    911c:	vtbl.8	d23, {d24-d25}, d19
    9120:	vtbl.8	d24, {d24-d25}, d20
    9124:	vorr	d25, d23, d17
    9128:	vand	d26, d23, d17
    912c:	vand	d25, d25, d24
    9130:	vorr	d25, d25, d26
    9134:	vuzp.8	d25, d26
    9138:	vst1.32	{d25[0]}, [r1 :32]
    913c:	movw	r1, #2916	; 0xb64
    9140:	add	r1, r9, r1
    9144:	vld1.8	{d26}, [r1]
    9148:	ldr	r1, [r9, #2924]	; 0xb6c
    914c:	vmov.32	d27[0], r1
    9150:	add	r1, ip, #8
    9154:	vtbl.8	d25, {d26-d27}, d18
    9158:	vtbl.8	d28, {d26-d27}, d19
    915c:	vtbl.8	d26, {d26-d27}, d20
    9160:	vorr	d27, d28, d25
    9164:	vand	d29, d28, d25
    9168:	vand	d27, d27, d26
    916c:	vorr	d27, d27, d29
    9170:	vuzp.8	d27, d29
    9174:	vst1.32	{d27[0]}, [r1 :32]
    9178:	add	r1, r9, #2928	; 0xb70
    917c:	vld1.8	{d30}, [r1]
    9180:	ldr	r1, [r9, #2936]	; 0xb78
    9184:	vmov.32	d31[0], r1
    9188:	add	r1, ip, #12
    918c:	vtbl.8	d18, {d30-d31}, d18
    9190:	vtbl.8	d19, {d30-d31}, d19
    9194:	vtbl.8	d20, {d30-d31}, d20
    9198:	veor	d30, d16, d21
    919c:	veor	d16, d22, d16
    91a0:	veor	d31, d24, d17
    91a4:	veor	d24, d23, d24
    91a8:	veor	d21, d22, d21
    91ac:	veor	d17, d23, d17
    91b0:	veor	d23, d26, d25
    91b4:	vorr	d27, d19, d18
    91b8:	vand	d29, d19, d18
    91bc:	vorr	d16, d16, d30
    91c0:	vorr	d22, d24, d31
    91c4:	veor	d24, d28, d26
    91c8:	vand	d27, d27, d20
    91cc:	vorr	d16, d16, d21
    91d0:	vorr	d17, d22, d17
    91d4:	vorr	d22, d24, d23
    91d8:	veor	d21, d28, d25
    91dc:	veor	d23, d20, d18
    91e0:	veor	d20, d19, d20
    91e4:	veor	d18, d19, d18
    91e8:	vmov.i32	q12, #255	; 0x000000ff
    91ec:	vorr	d27, d27, d29
    91f0:	vorr	d19, d20, d23
    91f4:	vorr	d21, d22, d21
    91f8:	vuzp.8	d27, d26
    91fc:	vorr	d18, d19, d18
    9200:	vmovl.u16	q10, d21
    9204:	vst1.32	{d27[0]}, [r1 :32]
    9208:	vmovl.u16	q13, d16
    920c:	vmovl.u16	q8, d17
    9210:	vmovl.u16	q9, d18
    9214:	vand	q10, q10, q12
    9218:	ldrb	r1, [r9, #2940]	; 0xb7c
    921c:	ldrb	r3, [r9, #2942]	; 0xb7e
    9220:	ldrb	lr, [r9, #2941]	; 0xb7d
    9224:	vand	q11, q13, q12
    9228:	vand	q8, q8, q12
    922c:	vand	q9, q9, q12
    9230:	orr	r6, r3, r1
    9234:	and	r5, r3, r1
    9238:	vadd.i32	q8, q11, q8
    923c:	and	r6, r6, lr
    9240:	orr	r6, r6, r5
    9244:	strb	r6, [sp, #64]	; 0x40
    9248:	vadd.i32	q8, q8, q10
    924c:	ldrb	r6, [r9, #2943]	; 0xb7f
    9250:	ldrb	r4, [r9, #2945]	; 0xb81
    9254:	ldrb	r5, [r9, #2944]	; 0xb80
    9258:	vadd.i32	q8, q8, q9
    925c:	orr	r2, r4, r6
    9260:	and	r7, r4, r6
    9264:	and	r2, r2, r5
    9268:	vext.8	q9, q8, q8, #8
    926c:	orr	r2, r2, r7
    9270:	eor	r7, lr, r1
    9274:	eor	r1, r3, r1
    9278:	strb	r2, [sp, #65]	; 0x41
    927c:	eor	r2, r3, lr
    9280:	eor	r3, r4, r5
    9284:	orr	r2, r2, r7
    9288:	vadd.i32	q8, q8, q9
    928c:	orr	r1, r2, r1
    9290:	eor	r2, r5, r6
    9294:	orr	r2, r3, r2
    9298:	eor	r3, r4, r6
    929c:	orr	r2, r2, r3
    92a0:	vdup.32	q9, d16[1]
    92a4:	vadd.i32	q8, q8, q9
    92a8:	vmov.32	r8, d16[0]
    92ac:	uxtab	r1, r8, r1
    92b0:	uxtab	r2, r1, r2
    92b4:	mov	r1, #0
    92b8:	cmp	r2, #3
    92bc:	bhi	9710 <try_clock@@Base+0x668>
    92c0:	ldrb	r1, [r9, #4]
    92c4:	tst	r1, #1
    92c8:	bne	9330 <try_clock@@Base+0x288>
    92cc:	vld1.64	{d16-d17}, [ip]!
    92d0:	add	r1, sp, #24
    92d4:	ldrh	r0, [ip]
    92d8:	strh	r0, [sp, #40]	; 0x28
    92dc:	mov	r0, #17
    92e0:	vst1.64	{d16-d17}, [r1], r0
    92e4:	ldrb	ip, [r1]
    92e8:	ldrb	r8, [sp, #39]	; 0x27
    92ec:	ldrb	r6, [sp, #38]	; 0x26
    92f0:	ldrb	r7, [sp, #37]	; 0x25
    92f4:	ldrb	r3, [sp, #36]	; 0x24
    92f8:	ldrb	r1, [sp, #35]	; 0x23
    92fc:	ldrb	sl, [sp, #31]
    9300:	ldrb	lr, [sp, #32]
    9304:	ldrb	r0, [sp, #33]	; 0x21
    9308:	ldrb	r2, [sp, #34]	; 0x22
    930c:	ldrb	r5, [sp, #40]	; 0x28
    9310:	b	968c <try_clock@@Base+0x5e4>
    9314:	nop	{0}
    9318:			; <UNDEFINED> instruction: 0xff03ff00
    931c:			; <UNDEFINED> instruction: 0xff09ff06
    9320:			; <UNDEFINED> instruction: 0xff05ff02
    9324:			; <UNDEFINED> instruction: 0xff0bff08
    9328:			; <UNDEFINED> instruction: 0xff04ff01
    932c:			; <UNDEFINED> instruction: 0xff0aff07
    9330:	ldr	r1, [pc, #996]	; 971c <try_clock@@Base+0x674>
    9334:	and	r0, r0, #63	; 0x3f
    9338:	movw	r8, #2065	; 0x811
    933c:	movt	r8, #516	; 0x204
    9340:	add	r1, pc, r1
    9344:	ldrb	r0, [r1, r0]
    9348:	umull	r2, r3, r0, r8
    934c:	sub	r2, r0, r3
    9350:	add	r2, r3, r2, lsr #1
    9354:	lsr	r2, r2, #6
    9358:	sub	r2, r2, r2, lsl #7
    935c:	add	r3, r0, r2
    9360:	ldr	r0, [pc, #952]	; 9720 <try_clock@@Base+0x678>
    9364:	ldrb	r6, [sp, #48]	; 0x30
    9368:	ldrb	r5, [sp, #49]	; 0x31
    936c:	ldrb	r4, [sp, #50]	; 0x32
    9370:	ldrb	r2, [sp, #51]	; 0x33
    9374:	add	r0, pc, r0
    9378:	ldrb	r7, [r0, r3]
    937c:	add	r3, r3, #1
    9380:	eor	r7, r7, r6
    9384:	strb	r7, [sp, #24]
    9388:	umull	r7, r6, r3, r8
    938c:	sub	r7, r3, r6
    9390:	add	r7, r6, r7, lsr #1
    9394:	lsr	r7, r7, #6
    9398:	sub	r7, r7, r7, lsl #7
    939c:	add	r3, r3, r7
    93a0:	ldrb	r7, [r0, r3]
    93a4:	add	r3, r3, #1
    93a8:	eor	r7, r7, r5
    93ac:	strb	r7, [sp, #25]
    93b0:	umull	r7, r6, r3, r8
    93b4:	sub	r7, r3, r6
    93b8:	add	r7, r6, r7, lsr #1
    93bc:	lsr	r7, r7, #6
    93c0:	sub	r7, r7, r7, lsl #7
    93c4:	add	r3, r3, r7
    93c8:	ldrb	r7, [r0, r3]
    93cc:	add	r3, r3, #1
    93d0:	eor	r7, r7, r4
    93d4:	strb	r7, [sp, #26]
    93d8:	umull	r7, r6, r3, r8
    93dc:	sub	r7, r3, r6
    93e0:	add	r7, r6, r7, lsr #1
    93e4:	lsr	r7, r7, #6
    93e8:	sub	r7, r7, r7, lsl #7
    93ec:	add	r3, r3, r7
    93f0:	ldrb	r7, [r0, r3]
    93f4:	eor	r2, r7, r2
    93f8:	strb	r2, [sp, #27]
    93fc:	add	r2, r3, #1
    9400:	umull	r3, r7, r2, r8
    9404:	sub	r3, r2, r7
    9408:	add	r3, r7, r3, lsr #1
    940c:	ldrb	r7, [sp, #52]	; 0x34
    9410:	lsr	r3, r3, #6
    9414:	sub	r3, r3, r3, lsl #7
    9418:	add	r2, r2, r3
    941c:	ldrb	r3, [r0, r2]
    9420:	add	r2, r2, #1
    9424:	eor	r3, r3, r7
    9428:	strb	r3, [sp, #28]
    942c:	umull	r3, r7, r2, r8
    9430:	sub	r3, r2, r7
    9434:	add	r3, r7, r3, lsr #1
    9438:	ldrb	r7, [sp, #53]	; 0x35
    943c:	lsr	r3, r3, #6
    9440:	sub	r3, r3, r3, lsl #7
    9444:	add	r2, r2, r3
    9448:	ldrb	r3, [r0, r2]
    944c:	add	r2, r2, #1
    9450:	eor	r3, r3, r7
    9454:	strb	r3, [sp, #29]
    9458:	umull	r3, r7, r2, r8
    945c:	sub	r3, r2, r7
    9460:	add	r3, r7, r3, lsr #1
    9464:	ldrb	r7, [sp, #54]	; 0x36
    9468:	lsr	r3, r3, #6
    946c:	sub	r3, r3, r3, lsl #7
    9470:	add	r2, r2, r3
    9474:	ldrb	r3, [r0, r2]
    9478:	add	r2, r2, #1
    947c:	eor	r3, r3, r7
    9480:	strb	r3, [sp, #30]
    9484:	umull	r3, r7, r2, r8
    9488:	sub	r3, r2, r7
    948c:	add	r3, r7, r3, lsr #1
    9490:	lsr	r3, r3, #6
    9494:	sub	r3, r3, r3, lsl #7
    9498:	add	ip, r2, r3
    949c:	add	r2, ip, #1
    94a0:	umull	r3, r7, r2, r8
    94a4:	sub	r3, r2, r7
    94a8:	add	r3, r7, r3, lsr #1
    94ac:	lsr	r3, r3, #6
    94b0:	sub	r3, r3, r3, lsl #7
    94b4:	add	lr, r2, r3
    94b8:	add	r2, lr, #1
    94bc:	umull	r3, r6, r2, r8
    94c0:	sub	r3, r2, r6
    94c4:	add	r3, r6, r3, lsr #1
    94c8:	lsr	r3, r3, #6
    94cc:	sub	r3, r3, r3, lsl #7
    94d0:	add	r1, r2, r3
    94d4:	add	r2, r1, #1
    94d8:	str	r1, [sp, #20]
    94dc:	umull	r3, r6, r2, r8
    94e0:	sub	r3, r2, r6
    94e4:	add	r3, r6, r3, lsr #1
    94e8:	lsr	r3, r3, #6
    94ec:	sub	r3, r3, r3, lsl #7
    94f0:	add	r1, r2, r3
    94f4:	add	r2, r1, #1
    94f8:	str	r1, [sp, #16]
    94fc:	umull	r3, r6, r2, r8
    9500:	sub	r3, r2, r6
    9504:	add	r3, r6, r3, lsr #1
    9508:	lsr	r3, r3, #6
    950c:	sub	r3, r3, r3, lsl #7
    9510:	add	r1, r2, r3
    9514:	add	r2, r1, #1
    9518:	str	r1, [sp, #12]
    951c:	umull	r3, r6, r2, r8
    9520:	sub	r3, r2, r6
    9524:	add	r3, r6, r3, lsr #1
    9528:	lsr	r3, r3, #6
    952c:	sub	r3, r3, r3, lsl #7
    9530:	add	r1, r2, r3
    9534:	ldrb	r3, [sp, #56]	; 0x38
    9538:	add	r2, r1, #1
    953c:	str	r1, [sp, #8]
    9540:	umull	r6, r5, r2, r8
    9544:	sub	r6, r2, r5
    9548:	add	r6, r5, r6, lsr #1
    954c:	lsr	r6, r6, #6
    9550:	sub	r6, r6, r6, lsl #7
    9554:	add	r2, r2, r6
    9558:	add	r6, r2, #1
    955c:	umull	r5, r7, r6, r8
    9560:	sub	r5, r6, r7
    9564:	add	r5, r7, r5, lsr #1
    9568:	lsr	r5, r5, #6
    956c:	sub	r5, r5, r5, lsl #7
    9570:	add	r6, r6, r5
    9574:	add	r5, r6, #1
    9578:	umull	r7, r1, r5, r8
    957c:	sub	r7, r5, r1
    9580:	add	r1, r1, r7, lsr #1
    9584:	lsr	r1, r1, #6
    9588:	sub	r1, r1, r1, lsl #7
    958c:	add	r1, r5, r1
    9590:	add	r5, r1, #1
    9594:	ldrb	r1, [r0, r1]
    9598:	umull	r7, sl, r5, r8
    959c:	sub	r7, r5, sl
    95a0:	add	r7, sl, r7, lsr #1
    95a4:	lsr	r7, r7, #6
    95a8:	sub	r7, r7, r7, lsl #7
    95ac:	add	r5, r5, r7
    95b0:	add	r7, r5, #1
    95b4:	umull	r4, r8, r7, r8
    95b8:	sub	r4, r7, r8
    95bc:	add	r4, r8, r4, lsr #1
    95c0:	lsr	r4, r4, #6
    95c4:	sub	r4, r4, r4, lsl #7
    95c8:	add	r4, r7, r4
    95cc:	ldrb	r7, [r0, lr]
    95d0:	ldrb	r4, [r0, r4]
    95d4:	eor	lr, r7, r3
    95d8:	ldrb	r3, [r0, ip]
    95dc:	ldrb	r7, [sp, #55]	; 0x37
    95e0:	eor	sl, r3, r7
    95e4:	ldrb	r3, [sp, #57]	; 0x39
    95e8:	ldrb	r7, [sp, #61]	; 0x3d
    95ec:	strb	sl, [sp, #31]
    95f0:	strb	lr, [sp, #32]
    95f4:	str	r3, [sp, #4]
    95f8:	ldrb	r3, [sp, #65]	; 0x41
    95fc:	eor	ip, r4, r3
    9600:	ldrb	r3, [r0, r5]
    9604:	ldrb	r4, [sp, #64]	; 0x40
    9608:	eor	r5, r3, r4
    960c:	ldrb	r3, [sp, #63]	; 0x3f
    9610:	ldrb	r4, [sp, #59]	; 0x3b
    9614:	eor	r8, r1, r3
    9618:	ldrb	r1, [r0, r6]
    961c:	ldrb	r3, [sp, #62]	; 0x3e
    9620:	eor	r6, r1, r3
    9624:	ldrb	r1, [r0, r2]
    9628:	ldrb	r3, [sp, #60]	; 0x3c
    962c:	ldrb	r2, [sp, #58]	; 0x3a
    9630:	eor	r7, r1, r7
    9634:	ldr	r1, [sp, #8]
    9638:	ldrb	r1, [r0, r1]
    963c:	eor	r3, r1, r3
    9640:	ldr	r1, [sp, #12]
    9644:	ldrb	r1, [r0, r1]
    9648:	eor	r1, r1, r4
    964c:	ldr	r4, [sp, #16]
    9650:	ldrb	r4, [r0, r4]
    9654:	eor	r2, r4, r2
    9658:	ldr	r4, [sp, #20]
    965c:	ldrb	r0, [r0, r4]
    9660:	ldr	r4, [sp, #4]
    9664:	eor	r0, r0, r4
    9668:	strb	r0, [sp, #33]	; 0x21
    966c:	strb	r2, [sp, #34]	; 0x22
    9670:	strb	r1, [sp, #35]	; 0x23
    9674:	strb	r3, [sp, #36]	; 0x24
    9678:	strb	r7, [sp, #37]	; 0x25
    967c:	strb	r6, [sp, #38]	; 0x26
    9680:	strb	r8, [sp, #39]	; 0x27
    9684:	strb	r5, [sp, #40]	; 0x28
    9688:	strb	ip, [sp, #41]	; 0x29
    968c:	orr	r1, r2, r1, lsl #1
    9690:	ldrb	r2, [sp, #24]
    9694:	ldrb	r4, [sp, #27]
    9698:	orr	r1, r1, r3, lsl #2
    969c:	ldrb	r3, [sp, #25]
    96a0:	orr	r1, r1, r7, lsl #3
    96a4:	ldrb	r7, [sp, #26]
    96a8:	orr	r1, r1, r6, lsl #4
    96ac:	orr	r2, r2, r3, lsl #1
    96b0:	ldrb	r6, [sp, #29]
    96b4:	uxtb	r3, sl
    96b8:	orr	r1, r1, r8, lsl #5
    96bc:	orr	r2, r2, r7, lsl #2
    96c0:	ldrb	r7, [sp, #30]
    96c4:	orr	r1, r1, r5, lsl #6
    96c8:	ldrb	r5, [sp, #28]
    96cc:	orr	r2, r2, r4, lsl #3
    96d0:	orr	r1, r1, ip, lsl #7
    96d4:	orr	r2, r2, r5, lsl #4
    96d8:	uxtb	r1, r1
    96dc:	orr	r2, r2, r6, lsl #5
    96e0:	orr	r2, r2, r7, lsl #6
    96e4:	orr	r2, r2, r3, lsl #7
    96e8:	orr	r2, r2, lr, lsl #8
    96ec:	orr	r0, r2, r0, lsl #9
    96f0:	uxth	r0, r0
    96f4:	bl	9724 <try_clock@@Base+0x67c>
    96f8:	mov	r1, r0
    96fc:	orr	r0, r4, r5, lsl #1
    9700:	orr	r0, r0, r6, lsl #2
    9704:	orr	r0, r0, r7, lsl #3
    9708:	strb	r0, [r9, #18]
    970c:	strb	r1, [r9, #9]
    9710:	mov	r0, r1
    9714:	sub	sp, fp, #28
    9718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    971c:	andeq	sl, r0, lr, lsl #3
    9720:	muleq	r0, ip, r6
    9724:	sxtb	r2, r1
    9728:	mov	r3, #2
    972c:	cmn	r2, #1
    9730:	ubfx	r2, r0, #9, #1
    9734:	eorle	r1, r1, #101	; 0x65
    9738:	eor	r2, r2, r1, lsr #7
    973c:	orr	r2, r2, r1, lsl #1
    9740:	lsl	r1, r1, #1
    9744:	sxtb	r1, r1
    9748:	cmn	r1, #1
    974c:	eorle	r2, r2, #101	; 0x65
    9750:	uxtb	r1, r2
    9754:	ubfx	r2, r0, #8, #1
    9758:	eor	r2, r2, r1, lsr #7
    975c:	orr	r2, r2, r1, lsl #1
    9760:	lsl	r1, r1, #1
    9764:	sxtb	r1, r1
    9768:	cmn	r1, #1
    976c:	eorle	r2, r2, #101	; 0x65
    9770:	uxtb	r1, r2
    9774:	ubfx	r2, r0, #7, #1
    9778:	eor	r2, r2, r1, lsr #7
    977c:	orr	r2, r2, r1, lsl #1
    9780:	lsl	r1, r1, #1
    9784:	sxtb	r1, r1
    9788:	cmn	r1, #1
    978c:	eorle	r2, r2, #101	; 0x65
    9790:	uxtb	r1, r2
    9794:	ubfx	r2, r0, #6, #1
    9798:	eor	r2, r2, r1, lsr #7
    979c:	orr	r2, r2, r1, lsl #1
    97a0:	lsl	r1, r1, #1
    97a4:	sxtb	r1, r1
    97a8:	cmn	r1, #1
    97ac:	eorle	r2, r2, #101	; 0x65
    97b0:	uxtb	r1, r2
    97b4:	ubfx	r2, r0, #5, #1
    97b8:	eor	r2, r2, r1, lsr #7
    97bc:	orr	r2, r2, r1, lsl #1
    97c0:	lsl	r1, r1, #1
    97c4:	sxtb	r1, r1
    97c8:	cmn	r1, #1
    97cc:	eorle	r2, r2, #101	; 0x65
    97d0:	uxtb	r1, r2
    97d4:	ubfx	r2, r0, #4, #1
    97d8:	eor	r2, r2, r1, lsr #7
    97dc:	orr	r2, r2, r1, lsl #1
    97e0:	lsl	r1, r1, #1
    97e4:	sxtb	r1, r1
    97e8:	cmn	r1, #1
    97ec:	eorle	r2, r2, #101	; 0x65
    97f0:	uxtb	r1, r2
    97f4:	ubfx	r2, r0, #3, #1
    97f8:	eor	r2, r2, r1, lsr #7
    97fc:	orr	r2, r2, r1, lsl #1
    9800:	lsl	r1, r1, #1
    9804:	sxtb	r1, r1
    9808:	cmn	r1, #1
    980c:	eorle	r2, r2, #101	; 0x65
    9810:	uxtb	r1, r2
    9814:	ubfx	r2, r0, #2, #1
    9818:	eor	r2, r2, r1, lsr #7
    981c:	orr	r2, r2, r1, lsl #1
    9820:	lsl	r1, r1, #1
    9824:	sxtb	r1, r1
    9828:	cmn	r1, #1
    982c:	eorle	r2, r2, #101	; 0x65
    9830:	uxtb	r1, r2
    9834:	ubfx	r2, r0, #1, #1
    9838:	and	r0, r0, #1
    983c:	eor	r2, r2, r1, lsr #7
    9840:	orr	r2, r2, r1, lsl #1
    9844:	lsl	r1, r1, #1
    9848:	sxtb	r1, r1
    984c:	cmn	r1, #1
    9850:	eorle	r2, r2, #101	; 0x65
    9854:	uxtb	r1, r2
    9858:	eor	r0, r0, r1, lsr #7
    985c:	orr	r0, r0, r1, lsl #1
    9860:	uxtb	r1, r0
    9864:	lsl	r2, r0, #7
    9868:	orr	r2, r2, r1, lsr #7
    986c:	and	r3, r3, r1, lsr #5
    9870:	orr	r2, r2, r3
    9874:	mov	r3, #4
    9878:	and	r3, r3, r1, lsr #3
    987c:	orr	r2, r2, r3
    9880:	mov	r3, #8
    9884:	and	r1, r3, r1, lsr #1
    9888:	orr	r1, r2, r1
    988c:	and	r2, r0, #8
    9890:	orr	r1, r1, r2, lsl #1
    9894:	and	r2, r0, #4
    9898:	and	r0, r0, #2
    989c:	orr	r1, r1, r2, lsl #3
    98a0:	orr	r0, r1, r0, lsl #5
    98a4:	uxtb	r0, r0
    98a8:	bx	lr
    98ac:	nop	{0}

000098b0 <btbb_decode_header@@Base>:
    98b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    98b4:	add	fp, sp, #28
    98b8:	sub	sp, sp, #52	; 0x34
    98bc:	ldr	lr, [r0, #4]
    98c0:	mov	sl, r0
    98c4:	mov	r0, #0
    98c8:	tst	lr, #16
    98cc:	beq	9fc4 <btbb_decode_header@@Base+0x714>
    98d0:	movw	r0, #2892	; 0xb4c
    98d4:	mov	r6, #20
    98d8:	vldr	d18, [pc, #616]	; 9b48 <btbb_decode_header@@Base+0x298>
    98dc:	vldr	d19, [pc, #620]	; 9b50 <btbb_decode_header@@Base+0x2a0>
    98e0:	vldr	d20, [pc, #624]	; 9b58 <btbb_decode_header@@Base+0x2a8>
    98e4:	add	ip, sp, #32
    98e8:	add	r3, sl, r0
    98ec:	orr	r2, ip, #4
    98f0:	ldr	r7, [r3, #8]
    98f4:	mov	r5, r3
    98f8:	vld1.8	{d16}, [r5], r6
    98fc:	vmov.32	d17[0], r7
    9900:	add	r7, r3, #12
    9904:	vtbl.8	d21, {d16-d17}, d18
    9908:	vtbl.8	d22, {d16-d17}, d19
    990c:	vtbl.8	d16, {d16-d17}, d20
    9910:	vorr	d17, d22, d21
    9914:	vand	d23, d22, d21
    9918:	vand	d17, d17, d16
    991c:	vorr	d17, d17, d23
    9920:	vuzp.8	d17, d23
    9924:	vst1.32	{d17[0]}, [ip :32]
    9928:	vld1.8	{d24}, [r7]
    992c:	ldr	r7, [r5]
    9930:	vmov.32	d25[0], r7
    9934:	add	r7, r3, #24
    9938:	vtbl.8	d17, {d24-d25}, d18
    993c:	vtbl.8	d23, {d24-d25}, d19
    9940:	vtbl.8	d24, {d24-d25}, d20
    9944:	vorr	d25, d23, d17
    9948:	vand	d26, d23, d17
    994c:	vand	d25, d25, d24
    9950:	vorr	d25, d25, d26
    9954:	vuzp.8	d25, d26
    9958:	vst1.32	{d25[0]}, [r2 :32]
    995c:	vld1.8	{d26}, [r7]
    9960:	ldr	r7, [r3, #32]
    9964:	vmov.32	d27[0], r7
    9968:	add	r7, r2, #4
    996c:	add	r2, r2, #8
    9970:	vtbl.8	d25, {d26-d27}, d18
    9974:	vtbl.8	d28, {d26-d27}, d19
    9978:	vtbl.8	d26, {d26-d27}, d20
    997c:	vorr	d27, d28, d25
    9980:	vand	d29, d28, d25
    9984:	vand	d27, d27, d26
    9988:	vorr	d27, d27, d29
    998c:	vuzp.8	d27, d29
    9990:	vst1.32	{d27[0]}, [r7 :32]
    9994:	add	r7, r3, #36	; 0x24
    9998:	ldr	r3, [r3, #44]	; 0x2c
    999c:	vld1.8	{d30}, [r7]
    99a0:	vmov.32	d31[0], r3
    99a4:	vtbl.8	d18, {d30-d31}, d18
    99a8:	vtbl.8	d19, {d30-d31}, d19
    99ac:	vtbl.8	d20, {d30-d31}, d20
    99b0:	veor	d30, d16, d21
    99b4:	veor	d16, d22, d16
    99b8:	veor	d31, d24, d17
    99bc:	veor	d24, d23, d24
    99c0:	veor	d21, d22, d21
    99c4:	veor	d17, d23, d17
    99c8:	veor	d23, d26, d25
    99cc:	vorr	d27, d19, d18
    99d0:	vand	d29, d19, d18
    99d4:	vorr	d16, d16, d30
    99d8:	vorr	d22, d24, d31
    99dc:	veor	d24, d28, d26
    99e0:	vand	d27, d27, d20
    99e4:	vorr	d16, d16, d21
    99e8:	vorr	d17, d22, d17
    99ec:	vorr	d22, d24, d23
    99f0:	veor	d21, d28, d25
    99f4:	veor	d23, d20, d18
    99f8:	veor	d20, d19, d20
    99fc:	veor	d18, d19, d18
    9a00:	vmov.i32	q12, #255	; 0x000000ff
    9a04:	vorr	d27, d27, d29
    9a08:	vorr	d19, d20, d23
    9a0c:	vorr	d21, d22, d21
    9a10:	vuzp.8	d27, d26
    9a14:	vorr	d18, d19, d18
    9a18:	vmovl.u16	q10, d21
    9a1c:	vst1.32	{d27[0]}, [r2 :32]
    9a20:	vmovl.u16	q13, d16
    9a24:	vmovl.u16	q8, d17
    9a28:	vmovl.u16	q9, d18
    9a2c:	vand	q10, q10, q12
    9a30:	ldrb	r2, [sl, #2940]	; 0xb7c
    9a34:	ldrb	r3, [sl, #2942]	; 0xb7e
    9a38:	ldrb	r7, [sl, #2941]	; 0xb7d
    9a3c:	vand	q11, q13, q12
    9a40:	vand	q8, q8, q12
    9a44:	vand	q9, q9, q12
    9a48:	orr	r6, r3, r2
    9a4c:	and	r5, r3, r2
    9a50:	vadd.i32	q8, q11, q8
    9a54:	and	r6, r6, r7
    9a58:	orr	r6, r6, r5
    9a5c:	strb	r6, [sp, #48]	; 0x30
    9a60:	vadd.i32	q8, q8, q10
    9a64:	ldrb	r6, [sl, #2943]	; 0xb7f
    9a68:	ldrb	r0, [sl, #2945]	; 0xb81
    9a6c:	ldrb	r5, [sl, #2944]	; 0xb80
    9a70:	vadd.i32	q8, q8, q9
    9a74:	orr	r1, r0, r6
    9a78:	and	r4, r0, r6
    9a7c:	and	r1, r1, r5
    9a80:	vext.8	q9, q8, q8, #8
    9a84:	orr	r1, r1, r4
    9a88:	eor	r4, r7, r2
    9a8c:	eor	r7, r3, r7
    9a90:	eor	r2, r3, r2
    9a94:	eor	r3, r0, r5
    9a98:	eor	r0, r0, r6
    9a9c:	strb	r1, [sp, #49]	; 0x31
    9aa0:	orr	r4, r7, r4
    9aa4:	orr	r2, r4, r2
    9aa8:	vadd.i32	q8, q8, q9
    9aac:	vdup.32	q9, d16[1]
    9ab0:	vadd.i32	q8, q8, q9
    9ab4:	vmov.32	r1, d16[0]
    9ab8:	uxtab	r1, r1, r2
    9abc:	eor	r2, r5, r6
    9ac0:	orr	r2, r3, r2
    9ac4:	orr	r0, r2, r0
    9ac8:	uxtab	r0, r1, r0
    9acc:	cmp	r0, #3
    9ad0:	bls	9ae0 <btbb_decode_header@@Base+0x230>
    9ad4:	mov	r0, #0
    9ad8:	sub	sp, fp, #28
    9adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9ae0:	tst	lr, #1
    9ae4:	bne	9b60 <btbb_decode_header@@Base+0x2b0>
    9ae8:	vld1.64	{d16-d17}, [ip]!
    9aec:	add	r0, sl, #22
    9af0:	vst1.8	{d16-d17}, [r0]
    9af4:	ldrh	r0, [ip]
    9af8:	strh	r0, [sl, #38]	; 0x26
    9afc:	ldrb	r0, [sl, #36]	; 0x24
    9b00:	ldrb	ip, [sl, #37]	; 0x25
    9b04:	ldrb	r1, [sl, #29]
    9b08:	ldrb	r2, [sl, #32]
    9b0c:	ldrb	r3, [sl, #38]	; 0x26
    9b10:	ldrb	lr, [sl, #39]	; 0x27
    9b14:	str	r0, [sp, #8]
    9b18:	ldrb	r0, [sl, #35]	; 0x23
    9b1c:	str	r0, [sp, #12]
    9b20:	ldrb	r0, [sl, #34]	; 0x22
    9b24:	str	r0, [sp, #16]
    9b28:	ldrb	r0, [sl, #33]	; 0x21
    9b2c:	str	r0, [sp, #20]
    9b30:	ldrb	r0, [sl, #30]
    9b34:	str	r0, [sp, #28]
    9b38:	ldrb	r0, [sl, #31]
    9b3c:	str	r0, [sp, #24]
    9b40:	b	9edc <btbb_decode_header@@Base+0x62c>
    9b44:	nop	{0}
    9b48:			; <UNDEFINED> instruction: 0xff03ff00
    9b4c:			; <UNDEFINED> instruction: 0xff09ff06
    9b50:			; <UNDEFINED> instruction: 0xff05ff02
    9b54:			; <UNDEFINED> instruction: 0xff0bff08
    9b58:			; <UNDEFINED> instruction: 0xff04ff01
    9b5c:			; <UNDEFINED> instruction: 0xff0aff07
    9b60:	ldr	r0, [sl, #2816]	; 0xb00
    9b64:	ldr	r1, [pc, #1120]	; 9fcc <btbb_decode_header@@Base+0x71c>
    9b68:	movw	r8, #2065	; 0x811
    9b6c:	ldr	ip, [pc, #1116]	; 9fd0 <btbb_decode_header@@Base+0x720>
    9b70:	ldrb	r7, [sp, #32]
    9b74:	movt	r8, #516	; 0x204
    9b78:	and	r0, r0, #63	; 0x3f
    9b7c:	add	r1, pc, r1
    9b80:	add	ip, pc, ip
    9b84:	ldrb	r0, [r1, r0]
    9b88:	umull	r2, r3, r0, r8
    9b8c:	sub	r2, r0, r3
    9b90:	add	r2, r3, r2, lsr #1
    9b94:	lsr	r2, r2, #6
    9b98:	sub	r2, r2, r2, lsl #7
    9b9c:	add	r2, r0, r2
    9ba0:	ldrb	r3, [ip, r2]
    9ba4:	add	r2, r2, #1
    9ba8:	eor	r3, r3, r7
    9bac:	strb	r3, [sl, #22]
    9bb0:	umull	r3, r7, r2, r8
    9bb4:	sub	r3, r2, r7
    9bb8:	add	r3, r7, r3, lsr #1
    9bbc:	ldrb	r7, [sp, #33]	; 0x21
    9bc0:	lsr	r3, r3, #6
    9bc4:	sub	r3, r3, r3, lsl #7
    9bc8:	add	r2, r2, r3
    9bcc:	ldrb	r3, [ip, r2]
    9bd0:	add	r2, r2, #1
    9bd4:	eor	r3, r3, r7
    9bd8:	strb	r3, [sl, #23]
    9bdc:	umull	r3, r7, r2, r8
    9be0:	sub	r3, r2, r7
    9be4:	add	r3, r7, r3, lsr #1
    9be8:	ldrb	r7, [sp, #34]	; 0x22
    9bec:	lsr	r3, r3, #6
    9bf0:	sub	r3, r3, r3, lsl #7
    9bf4:	add	r2, r2, r3
    9bf8:	ldrb	r3, [ip, r2]
    9bfc:	add	r2, r2, #1
    9c00:	eor	r3, r3, r7
    9c04:	strb	r3, [sl, #24]
    9c08:	umull	r3, r7, r2, r8
    9c0c:	sub	r3, r2, r7
    9c10:	add	r3, r7, r3, lsr #1
    9c14:	ldrb	r7, [sp, #35]	; 0x23
    9c18:	lsr	r3, r3, #6
    9c1c:	sub	r3, r3, r3, lsl #7
    9c20:	add	r2, r2, r3
    9c24:	ldrb	r3, [ip, r2]
    9c28:	add	r2, r2, #1
    9c2c:	eor	r3, r3, r7
    9c30:	strb	r3, [sl, #25]
    9c34:	umull	r3, r7, r2, r8
    9c38:	sub	r3, r2, r7
    9c3c:	add	r3, r7, r3, lsr #1
    9c40:	ldrb	r7, [sp, #36]	; 0x24
    9c44:	lsr	r3, r3, #6
    9c48:	sub	r3, r3, r3, lsl #7
    9c4c:	add	r2, r2, r3
    9c50:	ldrb	r3, [ip, r2]
    9c54:	add	r2, r2, #1
    9c58:	eor	r3, r3, r7
    9c5c:	strb	r3, [sl, #26]
    9c60:	umull	r3, r7, r2, r8
    9c64:	sub	r3, r2, r7
    9c68:	add	r3, r7, r3, lsr #1
    9c6c:	ldrb	r7, [sp, #37]	; 0x25
    9c70:	lsr	r3, r3, #6
    9c74:	sub	r3, r3, r3, lsl #7
    9c78:	add	r2, r2, r3
    9c7c:	ldrb	r3, [ip, r2]
    9c80:	add	r2, r2, #1
    9c84:	eor	r3, r3, r7
    9c88:	strb	r3, [sl, #27]
    9c8c:	umull	r3, r7, r2, r8
    9c90:	sub	r3, r2, r7
    9c94:	add	r3, r7, r3, lsr #1
    9c98:	ldrb	r7, [sp, #38]	; 0x26
    9c9c:	lsr	r3, r3, #6
    9ca0:	sub	r3, r3, r3, lsl #7
    9ca4:	add	r2, r2, r3
    9ca8:	ldrb	r3, [ip, r2]
    9cac:	add	r2, r2, #1
    9cb0:	eor	r3, r3, r7
    9cb4:	strb	r3, [sl, #28]
    9cb8:	umull	r3, r7, r2, r8
    9cbc:	sub	r3, r2, r7
    9cc0:	add	r3, r7, r3, lsr #1
    9cc4:	lsr	r3, r3, #6
    9cc8:	sub	r3, r3, r3, lsl #7
    9ccc:	add	r0, r2, r3
    9cd0:	add	r2, r0, #1
    9cd4:	str	r0, [sp, #28]
    9cd8:	umull	r3, r7, r2, r8
    9cdc:	sub	r3, r2, r7
    9ce0:	add	r3, r7, r3, lsr #1
    9ce4:	lsr	r3, r3, #6
    9ce8:	sub	r3, r3, r3, lsl #7
    9cec:	add	r0, r2, r3
    9cf0:	add	r2, r0, #1
    9cf4:	str	r0, [sp, #24]
    9cf8:	umull	r3, r4, r2, r8
    9cfc:	sub	r3, r2, r4
    9d00:	add	r3, r4, r3, lsr #1
    9d04:	lsr	r3, r3, #6
    9d08:	sub	r3, r3, r3, lsl #7
    9d0c:	add	r9, r2, r3
    9d10:	add	r2, r9, #1
    9d14:	umull	r3, r4, r2, r8
    9d18:	sub	r3, r2, r4
    9d1c:	add	r3, r4, r3, lsr #1
    9d20:	lsr	r3, r3, #6
    9d24:	sub	r3, r3, r3, lsl #7
    9d28:	add	r6, r2, r3
    9d2c:	add	r2, r6, #1
    9d30:	ldrb	r6, [ip, r6]
    9d34:	umull	r3, r4, r2, r8
    9d38:	sub	r3, r2, r4
    9d3c:	add	r3, r4, r3, lsr #1
    9d40:	lsr	r3, r3, #6
    9d44:	sub	r3, r3, r3, lsl #7
    9d48:	add	r5, r2, r3
    9d4c:	add	r2, r5, #1
    9d50:	ldrb	r5, [ip, r5]
    9d54:	umull	r3, r4, r2, r8
    9d58:	sub	r3, r2, r4
    9d5c:	add	r3, r4, r3, lsr #1
    9d60:	lsr	r3, r3, #6
    9d64:	sub	r3, r3, r3, lsl #7
    9d68:	add	lr, r2, r3
    9d6c:	add	r3, lr, #1
    9d70:	ldrb	lr, [ip, lr]
    9d74:	umull	r4, r7, r3, r8
    9d78:	sub	r4, r3, r7
    9d7c:	add	r4, r7, r4, lsr #1
    9d80:	lsr	r4, r4, #6
    9d84:	sub	r4, r4, r4, lsl #7
    9d88:	add	r7, r3, r4
    9d8c:	add	r3, r7, #1
    9d90:	umull	r4, r1, r3, r8
    9d94:	sub	r4, r3, r1
    9d98:	add	r1, r1, r4, lsr #1
    9d9c:	lsr	r1, r1, #6
    9da0:	sub	r1, r1, r1, lsl #7
    9da4:	add	r2, r3, r1
    9da8:	add	r3, r2, #1
    9dac:	umull	r4, r0, r3, r8
    9db0:	sub	r4, r3, r0
    9db4:	add	r0, r0, r4, lsr #1
    9db8:	lsr	r0, r0, #6
    9dbc:	sub	r0, r0, r0, lsl #7
    9dc0:	add	r1, r3, r0
    9dc4:	add	r3, r1, #1
    9dc8:	umull	r4, r0, r3, r8
    9dcc:	sub	r4, r3, r0
    9dd0:	add	r0, r0, r4, lsr #1
    9dd4:	lsr	r0, r0, #6
    9dd8:	sub	r0, r0, r0, lsl #7
    9ddc:	add	r0, r3, r0
    9de0:	add	r3, r0, #1
    9de4:	ldrb	r0, [ip, r0]
    9de8:	umull	r4, r8, r3, r8
    9dec:	str	r0, [sp]
    9df0:	ldrb	r0, [ip, r2]
    9df4:	ldrb	r2, [ip, r7]
    9df8:	sub	r4, r3, r8
    9dfc:	add	r4, r8, r4, lsr #1
    9e00:	ldrb	r8, [ip, r1]
    9e04:	ldr	r1, [sp, #24]
    9e08:	lsr	r4, r4, #6
    9e0c:	str	r0, [sp, #8]
    9e10:	ldrb	r0, [ip, r9]
    9e14:	sub	r4, r4, r4, lsl #7
    9e18:	add	r3, r3, r4
    9e1c:	ldrb	r4, [ip, r1]
    9e20:	ldr	r1, [sp, #28]
    9e24:	ldrb	r3, [ip, r3]
    9e28:	ldrb	r7, [ip, r1]
    9e2c:	str	r3, [sp, #4]
    9e30:	ldrb	r3, [sp, #39]	; 0x27
    9e34:	eor	r1, r7, r3
    9e38:	strb	r1, [sl, #29]
    9e3c:	ldrb	r3, [sp, #40]	; 0x28
    9e40:	eor	r3, r4, r3
    9e44:	strb	r3, [sl, #30]
    9e48:	str	r3, [sp, #28]
    9e4c:	ldrb	r3, [sp, #41]	; 0x29
    9e50:	eor	r0, r0, r3
    9e54:	strb	r0, [sl, #31]
    9e58:	str	r0, [sp, #24]
    9e5c:	ldrb	r3, [sp, #42]	; 0x2a
    9e60:	eor	r4, r6, r3
    9e64:	strb	r4, [sl, #32]
    9e68:	ldrb	r3, [sp, #43]	; 0x2b
    9e6c:	eor	r0, r5, r3
    9e70:	strb	r0, [sl, #33]	; 0x21
    9e74:	str	r0, [sp, #20]
    9e78:	ldrb	r3, [sp, #44]	; 0x2c
    9e7c:	eor	r0, lr, r3
    9e80:	strb	r0, [sl, #34]	; 0x22
    9e84:	str	r0, [sp, #16]
    9e88:	ldrb	r3, [sp, #45]	; 0x2d
    9e8c:	eor	r0, r2, r3
    9e90:	strb	r0, [sl, #35]	; 0x23
    9e94:	str	r0, [sp, #12]
    9e98:	ldr	r0, [sp, #8]
    9e9c:	ldrb	r2, [sp, #46]	; 0x2e
    9ea0:	eor	r0, r0, r2
    9ea4:	strb	r0, [sl, #36]	; 0x24
    9ea8:	str	r0, [sp, #8]
    9eac:	ldr	r0, [sp]
    9eb0:	ldrb	r2, [sp, #47]	; 0x2f
    9eb4:	eor	ip, r8, r2
    9eb8:	mov	r2, r4
    9ebc:	strb	ip, [sl, #37]	; 0x25
    9ec0:	ldrb	r3, [sp, #48]	; 0x30
    9ec4:	eor	r3, r0, r3
    9ec8:	ldr	r0, [sp, #4]
    9ecc:	strb	r3, [sl, #38]	; 0x26
    9ed0:	ldrb	r7, [sp, #49]	; 0x31
    9ed4:	eor	lr, r0, r7
    9ed8:	strb	lr, [sl, #39]	; 0x27
    9edc:	ldrb	r0, [sl, #22]
    9ee0:	ldrb	r6, [sl, #23]
    9ee4:	ldrb	r7, [sl, #24]
    9ee8:	ldrb	r5, [sl, #25]
    9eec:	ldrb	r8, [sl, #28]
    9ef0:	uxtb	r9, r1
    9ef4:	ldr	r1, [sp, #28]
    9ef8:	orr	r4, r0, r6, lsl #1
    9efc:	str	r5, [sp]
    9f00:	str	r0, [sp, #4]
    9f04:	orr	r4, r4, r7, lsl #2
    9f08:	orr	r5, r4, r5, lsl #3
    9f0c:	ldrb	r4, [sl, #26]
    9f10:	orr	r0, r5, r4, lsl #4
    9f14:	ldrb	r5, [sl, #27]
    9f18:	orr	r0, r0, r5, lsl #5
    9f1c:	orr	r0, r0, r8, lsl #6
    9f20:	orr	r0, r0, r9, lsl #7
    9f24:	orr	r0, r0, r1, lsl #8
    9f28:	ldr	r1, [sp, #24]
    9f2c:	orr	r0, r0, r1, lsl #9
    9f30:	ldr	r1, [sp, #20]
    9f34:	uxth	r0, r0
    9f38:	orr	r1, r2, r1, lsl #1
    9f3c:	ldr	r2, [sp, #16]
    9f40:	orr	r1, r1, r2, lsl #2
    9f44:	ldr	r2, [sp, #12]
    9f48:	orr	r1, r1, r2, lsl #3
    9f4c:	ldr	r2, [sp, #8]
    9f50:	orr	r1, r1, r2, lsl #4
    9f54:	orr	r1, r1, ip, lsl #5
    9f58:	orr	r1, r1, r3, lsl #6
    9f5c:	orr	r9, r1, lr, lsl #7
    9f60:	uxtb	r1, r9
    9f64:	bl	9724 <try_clock@@Base+0x67c>
    9f68:	ldrb	r1, [sl, #9]
    9f6c:	cmp	r0, r1
    9f70:	mov	r0, #0
    9f74:	bne	9fc4 <btbb_decode_header@@Base+0x714>
    9f78:	ldr	r2, [sp, #4]
    9f7c:	lsl	r1, r6, #1
    9f80:	lsl	r0, r7, #2
    9f84:	strb	r9, [sl, #21]
    9f88:	orr	r1, r2, r1
    9f8c:	orr	r0, r1, r0
    9f90:	strb	r0, [sl, #19]
    9f94:	ldr	r0, [sp]
    9f98:	orr	r0, r0, r4, lsl #1
    9f9c:	orr	r0, r0, r5, lsl #2
    9fa0:	orr	r0, r0, r8, lsl #3
    9fa4:	strb	r0, [sl, #18]
    9fa8:	ldrb	r0, [sl, #29]
    9fac:	ldrb	r1, [sl, #30]
    9fb0:	ldrb	r2, [sl, #31]
    9fb4:	orr	r0, r0, r1, lsl #1
    9fb8:	orr	r0, r0, r2, lsl #2
    9fbc:	strb	r0, [sl, #20]
    9fc0:	mov	r0, #1
    9fc4:	sub	sp, fp, #28
    9fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9fcc:	andeq	r9, r0, r2, asr r9
    9fd0:	muleq	r0, r0, lr

00009fd4 <btbb_decode_payload@@Base>:
    9fd4:	push	{r4, sl, fp, lr}
    9fd8:	add	fp, sp, #8
    9fdc:	mov	r4, r0
    9fe0:	mov	r0, #0
    9fe4:	str	r0, [r4, #40]	; 0x28
    9fe8:	ldrb	r1, [r4, #18]
    9fec:	cmp	r1, #15
    9ff0:	bhi	a0d0 <btbb_decode_payload@@Base+0xfc>
    9ff4:	add	r0, pc, #4
    9ff8:	ldr	r1, [r0, r1, lsl #2]
    9ffc:	add	pc, r0, r1
    a000:	andeq	r0, r0, r8, ror r0
    a004:	andeq	r0, r0, r8, ror r0
    a008:	muleq	r0, r4, r0
    a00c:	andeq	r0, r0, r0, asr #32
    a010:	andeq	r0, r0, ip, asr r0
    a014:	andeq	r0, r0, r4, asr #1
    a018:	andeq	r0, r0, r4, asr #1
    a01c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    a020:	andeq	r0, r0, r0, asr #32
    a024:	andeq	r0, r0, ip, asr r0
    a028:	andeq	r0, r0, r0, asr #32
    a02c:	andeq	r0, r0, ip, asr r0
    a030:	strdeq	r0, [r0], -ip
    a034:	andeq	r0, r0, r0, ror #1
    a038:	andeq	r0, r0, r0, asr #32
    a03c:	andeq	r0, r0, ip, asr r0
    a040:	ldr	r0, [r4, #2816]	; 0xb00
    a044:	mov	r1, r4
    a048:	bl	45bc <DM@plt>
    a04c:	ldr	r1, [r4, #4]
    a050:	orr	r1, r1, #128	; 0x80
    a054:	str	r1, [r4, #4]
    a058:	pop	{r4, sl, fp, pc}
    a05c:	ldr	r0, [r4, #2816]	; 0xb00
    a060:	mov	r1, r4
    a064:	bl	479c <DH@plt>
    a068:	ldr	r1, [r4, #4]
    a06c:	orr	r1, r1, #128	; 0x80
    a070:	str	r1, [r4, #4]
    a074:	pop	{r4, sl, fp, pc}
    a078:	mov	r0, #0
    a07c:	str	r0, [r4, #64]	; 0x40
    a080:	mov	r0, #1
    a084:	ldr	r1, [r4, #4]
    a088:	orr	r1, r1, #128	; 0x80
    a08c:	str	r1, [r4, #4]
    a090:	pop	{r4, sl, fp, pc}
    a094:	ldr	r0, [r4, #2816]	; 0xb00
    a098:	mov	r1, r4
    a09c:	bl	458c <fhs@plt>
    a0a0:	ldr	r1, [r4, #4]
    a0a4:	orr	r1, r1, #128	; 0x80
    a0a8:	str	r1, [r4, #4]
    a0ac:	pop	{r4, sl, fp, pc}
    a0b0:	ldr	r0, [r4, #2816]	; 0xb00
    a0b4:	mov	r1, r4
    a0b8:	bl	473c <EV3@plt>
    a0bc:	cmp	r0, #1
    a0c0:	bgt	a0d0 <btbb_decode_payload@@Base+0xfc>
    a0c4:	ldr	r0, [r4, #2816]	; 0xb00
    a0c8:	mov	r1, r4
    a0cc:	bl	45c8 <HV@plt>
    a0d0:	ldr	r1, [r4, #4]
    a0d4:	orr	r1, r1, #128	; 0x80
    a0d8:	str	r1, [r4, #4]
    a0dc:	pop	{r4, sl, fp, pc}
    a0e0:	ldr	r0, [r4, #2816]	; 0xb00
    a0e4:	mov	r1, r4
    a0e8:	bl	4784 <EV5@plt>
    a0ec:	ldr	r1, [r4, #4]
    a0f0:	orr	r1, r1, #128	; 0x80
    a0f4:	str	r1, [r4, #4]
    a0f8:	pop	{r4, sl, fp, pc}
    a0fc:	ldr	r0, [r4, #2816]	; 0xb00
    a100:	mov	r1, r4
    a104:	bl	4598 <EV4@plt>
    a108:	ldr	r1, [r4, #4]
    a10c:	orr	r1, r1, #128	; 0x80
    a110:	str	r1, [r4, #4]
    a114:	pop	{r4, sl, fp, pc}

0000a118 <btbb_decode@@Base>:
    a118:	push	{r4, r5, fp, lr}
    a11c:	add	fp, sp, #8
    a120:	mov	r4, r0
    a124:	ldr	r0, [r0, #4]
    a128:	bic	r0, r0, #128	; 0x80
    a12c:	str	r0, [r4, #4]
    a130:	mov	r0, r4
    a134:	bl	46b8 <btbb_decode_header@plt>
    a138:	cmp	r0, #0
    a13c:	beq	a17c <btbb_decode@@Base+0x64>
    a140:	mov	r0, r4
    a144:	bl	47b4 <btbb_decode_payload@plt>
    a148:	mov	r5, r0
    a14c:	cmp	r0, #1
    a150:	blt	a174 <btbb_decode@@Base+0x5c>
    a154:	ldr	r0, [r4, #2816]	; 0xb00
    a158:	mov	r2, r5
    a15c:	and	r1, r0, #63	; 0x3f
    a160:	ldr	r0, [pc, #32]	; a188 <btbb_decode@@Base+0x70>
    a164:	add	r0, pc, r0
    a168:	bl	4508 <printf@plt>
    a16c:	mov	r0, r4
    a170:	bl	47d8 <btbb_print_packet@plt>
    a174:	mov	r0, r5
    a178:	pop	{r4, r5, fp, pc}
    a17c:	mov	r5, #0
    a180:	mov	r0, r5
    a184:	pop	{r4, r5, fp, pc}
    a188:	strdeq	r9, [r0], -r7

0000a18c <btbb_print_packet@@Base>:
    a18c:	push	{r4, r5, r6, r7, fp, lr}
    a190:	add	fp, sp, #16
    a194:	mov	r4, r0
    a198:	ldrb	r0, [r0, #4]
    a19c:	tst	r0, #128	; 0x80
    a1a0:	popeq	{r4, r5, r6, r7, fp, pc}
    a1a4:	ldrb	r0, [r4, #18]
    a1a8:	ldr	r1, [pc, #248]	; a2a8 <btbb_print_packet@@Base+0x11c>
    a1ac:	add	r1, pc, r1
    a1b0:	ldr	r1, [r1, r0, lsl #2]
    a1b4:	ldr	r0, [pc, #240]	; a2ac <btbb_print_packet@@Base+0x120>
    a1b8:	add	r0, pc, r0
    a1bc:	bl	4508 <printf@plt>
    a1c0:	ldr	r0, [r4, #40]	; 0x28
    a1c4:	cmp	r0, #1
    a1c8:	blt	a20c <btbb_print_packet@@Base+0x80>
    a1cc:	ldrb	r1, [r4, #19]
    a1d0:	ldr	r0, [pc, #216]	; a2b0 <btbb_print_packet@@Base+0x124>
    a1d4:	add	r0, pc, r0
    a1d8:	bl	4508 <printf@plt>
    a1dc:	ldrb	r1, [r4, #60]	; 0x3c
    a1e0:	ldr	r0, [pc, #204]	; a2b4 <btbb_print_packet@@Base+0x128>
    a1e4:	add	r0, pc, r0
    a1e8:	bl	4508 <printf@plt>
    a1ec:	ldrb	r1, [r4, #61]	; 0x3d
    a1f0:	ldr	r0, [pc, #192]	; a2b8 <btbb_print_packet@@Base+0x12c>
    a1f4:	add	r0, pc, r0
    a1f8:	bl	4508 <printf@plt>
    a1fc:	ldr	r1, [r4, #64]	; 0x40
    a200:	ldr	r0, [pc, #180]	; a2bc <btbb_print_packet@@Base+0x130>
    a204:	add	r0, pc, r0
    a208:	bl	4508 <printf@plt>
    a20c:	ldr	r0, [r4, #64]	; 0x40
    a210:	cmp	r0, #0
    a214:	beq	a2a4 <btbb_print_packet@@Base+0x118>
    a218:	ldr	r0, [pc, #160]	; a2c0 <btbb_print_packet@@Base+0x134>
    a21c:	add	r0, pc, r0
    a220:	bl	4508 <printf@plt>
    a224:	ldr	r0, [r4, #64]	; 0x40
    a228:	cmp	r0, #1
    a22c:	blt	a298 <btbb_print_packet@@Base+0x10c>
    a230:	ldr	r7, [pc, #140]	; a2c4 <btbb_print_packet@@Base+0x138>
    a234:	mov	r6, #0
    a238:	add	r7, pc, r7
    a23c:	add	r0, r4, r6, lsl #3
    a240:	ldrb	r1, [r0, #68]	; 0x44
    a244:	ldrb	r2, [r0, #69]	; 0x45
    a248:	ldrb	r3, [r0, #70]	; 0x46
    a24c:	ldrb	r5, [r0, #71]	; 0x47
    a250:	orr	r1, r1, r2, lsl #1
    a254:	ldrb	r2, [r0, #72]	; 0x48
    a258:	orr	r1, r1, r3, lsl #2
    a25c:	orr	r1, r1, r5, lsl #3
    a260:	orr	r1, r1, r2, lsl #4
    a264:	ldrb	r2, [r0, #73]	; 0x49
    a268:	orr	r1, r1, r2, lsl #5
    a26c:	ldrb	r2, [r0, #74]	; 0x4a
    a270:	ldrb	r0, [r0, #75]	; 0x4b
    a274:	orr	r1, r1, r2, lsl #6
    a278:	orr	r0, r1, r0, lsl #7
    a27c:	uxtb	r1, r0
    a280:	mov	r0, r7
    a284:	bl	4508 <printf@plt>
    a288:	ldr	r0, [r4, #64]	; 0x40
    a28c:	add	r6, r6, #1
    a290:	cmp	r6, r0
    a294:	blt	a23c <btbb_print_packet@@Base+0xb0>
    a298:	mov	r0, #10
    a29c:	pop	{r4, r5, r6, r7, fp, lr}
    a2a0:	b	4724 <putchar@plt>
    a2a4:	pop	{r4, r5, r6, r7, fp, pc}
    a2a8:	andeq	r1, r2, r0, asr #24
    a2ac:	andeq	r9, r0, sp, asr #5
    a2b0:			; <UNDEFINED> instruction: 0x000092bd
    a2b4:			; <UNDEFINED> instruction: 0x000092bc
    a2b8:			; <UNDEFINED> instruction: 0x000092b8
    a2bc:			; <UNDEFINED> instruction: 0x000092b4
    a2c0:			; <UNDEFINED> instruction: 0x0000bdb2
    a2c4:	andeq	ip, r0, pc, lsl r0

0000a2c8 <tun_format@@Base>:
    a2c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    a2cc:	add	fp, sp, #24
    a2d0:	ldr	r6, [r0, #64]	; 0x40
    a2d4:	mov	r8, r0
    a2d8:	add	r0, r6, #9
    a2dc:	bl	464c <malloc@plt>
    a2e0:	ldr	r1, [r8, #2816]	; 0xb00
    a2e4:	cmp	r6, #1
    a2e8:	str	r1, [r0]
    a2ec:	ldrb	r1, [r8, #8]
    a2f0:	strb	r1, [r0, #4]
    a2f4:	ldr	r1, [r8, #4]
    a2f8:	and	r2, r1, #2
    a2fc:	ubfx	r1, r1, #5, #1
    a300:	orr	r1, r1, r2
    a304:	strb	r1, [r0, #5]
    a308:	ldrb	r1, [r8, #22]
    a30c:	ldrb	r2, [r8, #23]
    a310:	ldrb	r3, [r8, #24]
    a314:	ldrb	r5, [r8, #25]
    a318:	orr	r1, r1, r2, lsl #1
    a31c:	ldrb	r2, [r8, #26]
    a320:	orr	r1, r1, r3, lsl #2
    a324:	orr	r1, r1, r5, lsl #3
    a328:	orr	r1, r1, r2, lsl #4
    a32c:	ldrb	r2, [r8, #27]
    a330:	orr	r1, r1, r2, lsl #5
    a334:	ldrb	r2, [r8, #28]
    a338:	orr	r1, r1, r2, lsl #6
    a33c:	strb	r1, [r0, #6]
    a340:	ldrb	r1, [r8, #29]
    a344:	ldrb	r2, [r8, #30]
    a348:	ldrb	r3, [r8, #31]
    a34c:	orr	r1, r1, r2, lsl #1
    a350:	orr	r1, r1, r3, lsl #2
    a354:	strb	r1, [r0, #7]
    a358:	ldrb	r1, [r8, #32]
    a35c:	ldrb	r2, [r8, #33]	; 0x21
    a360:	ldrb	r3, [r8, #34]	; 0x22
    a364:	ldrb	r5, [r8, #35]	; 0x23
    a368:	orr	r1, r1, r2, lsl #1
    a36c:	ldrb	r2, [r8, #36]	; 0x24
    a370:	orr	r1, r1, r3, lsl #2
    a374:	orr	r1, r1, r5, lsl #3
    a378:	orr	r1, r1, r2, lsl #4
    a37c:	ldrb	r2, [r8, #37]	; 0x25
    a380:	orr	r1, r1, r2, lsl #5
    a384:	ldrb	r2, [r8, #38]	; 0x26
    a388:	orr	r1, r1, r2, lsl #6
    a38c:	ldrb	r2, [r8, #39]	; 0x27
    a390:	orr	r1, r1, r2, lsl #7
    a394:	strb	r1, [r0, #8]
    a398:	blt	a3f8 <tun_format@@Base+0x130>
    a39c:	add	ip, r0, #9
    a3a0:	rsb	r2, r6, #0
    a3a4:	mov	r3, #0
    a3a8:	sub	r6, r8, r3, lsl #3
    a3ac:	ldrb	r5, [r6, #68]	; 0x44
    a3b0:	ldrb	r4, [r6, #69]	; 0x45
    a3b4:	ldrb	r7, [r6, #70]	; 0x46
    a3b8:	ldrb	r1, [r6, #71]	; 0x47
    a3bc:	orr	r5, r5, r4, lsl #1
    a3c0:	orr	r7, r5, r7, lsl #2
    a3c4:	orr	r1, r7, r1, lsl #3
    a3c8:	ldrb	r7, [r6, #72]	; 0x48
    a3cc:	orr	r1, r1, r7, lsl #4
    a3d0:	ldrb	r7, [r6, #73]	; 0x49
    a3d4:	orr	r1, r1, r7, lsl #5
    a3d8:	ldrb	r7, [r6, #74]	; 0x4a
    a3dc:	orr	r1, r1, r7, lsl #6
    a3e0:	ldrb	r7, [r6, #75]	; 0x4b
    a3e4:	orr	r1, r1, r7, lsl #7
    a3e8:	strb	r1, [ip, -r3]
    a3ec:	sub	r3, r3, #1
    a3f0:	cmp	r2, r3
    a3f4:	bne	a3a8 <tun_format@@Base+0xe0>
    a3f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000a3fc <btbb_header_present@@Base>:
    a3fc:	push	{r4, sl, fp, lr}
    a400:	add	fp, sp, #8
    a404:	movw	r1, #2822	; 0xb06
    a408:	ldrh	r2, [r0, r1]
    a40c:	mov	r1, #0
    a410:	cmp	r2, #122	; 0x7a
    a414:	bcc	a6e4 <btbb_header_present@@Base+0x2e8>
    a418:	ldrb	r1, [r0, #2892]	; 0xb4c
    a41c:	ldrb	r2, [r0, #2893]	; 0xb4d
    a420:	ldrb	r3, [r0, #2894]	; 0xb4e
    a424:	ldrb	lr, [r0, #2889]	; 0xb49
    a428:	eor	ip, r2, r1
    a42c:	eor	r2, r3, r2
    a430:	eor	r1, r3, r1
    a434:	ldrb	r3, [r0, #2888]	; 0xb48
    a438:	orr	r2, r2, ip
    a43c:	orr	ip, r2, r1
    a440:	ldrb	r2, [r0, #2887]	; 0xb47
    a444:	ldrb	r1, [r0, #2890]	; 0xb4a
    a448:	clz	r4, r2
    a44c:	lsr	r4, r4, #5
    a450:	eor	r1, r1, r4
    a454:	eor	r3, r3, r4
    a458:	eor	r4, lr, r2
    a45c:	uxtab	r3, r3, r4
    a460:	add	r1, r3, r1
    a464:	ldrb	r3, [r0, #2891]	; 0xb4b
    a468:	eor	r2, r3, r2
    a46c:	ldrb	r3, [r0, #2896]	; 0xb50
    a470:	uxtab	r1, r1, r2
    a474:	ldrb	r2, [r0, #2895]	; 0xb4f
    a478:	uxtab	ip, r1, ip
    a47c:	ldrb	r1, [r0, #2897]	; 0xb51
    a480:	eor	r4, r3, r2
    a484:	eor	r3, r1, r3
    a488:	eor	r1, r1, r2
    a48c:	ldrb	r2, [r0, #2898]	; 0xb52
    a490:	orr	r3, r3, r4
    a494:	orr	r1, r3, r1
    a498:	ldrb	r3, [r0, #2899]	; 0xb53
    a49c:	uxtab	ip, ip, r1
    a4a0:	ldrb	r1, [r0, #2900]	; 0xb54
    a4a4:	eor	r4, r3, r2
    a4a8:	eor	r3, r1, r3
    a4ac:	eor	r1, r1, r2
    a4b0:	ldrb	r2, [r0, #2901]	; 0xb55
    a4b4:	orr	r3, r3, r4
    a4b8:	orr	r1, r3, r1
    a4bc:	ldrb	r3, [r0, #2902]	; 0xb56
    a4c0:	uxtab	ip, ip, r1
    a4c4:	ldrb	r1, [r0, #2903]	; 0xb57
    a4c8:	eor	r4, r3, r2
    a4cc:	eor	r3, r1, r3
    a4d0:	eor	r1, r1, r2
    a4d4:	ldrb	r2, [r0, #2904]	; 0xb58
    a4d8:	orr	r3, r3, r4
    a4dc:	orr	r1, r3, r1
    a4e0:	ldrb	r3, [r0, #2905]	; 0xb59
    a4e4:	uxtab	ip, ip, r1
    a4e8:	ldrb	r1, [r0, #2906]	; 0xb5a
    a4ec:	eor	r4, r3, r2
    a4f0:	eor	r3, r1, r3
    a4f4:	eor	r1, r1, r2
    a4f8:	ldrb	r2, [r0, #2907]	; 0xb5b
    a4fc:	orr	r3, r3, r4
    a500:	orr	r1, r3, r1
    a504:	ldrb	r3, [r0, #2908]	; 0xb5c
    a508:	uxtab	ip, ip, r1
    a50c:	ldrb	r1, [r0, #2909]	; 0xb5d
    a510:	eor	r4, r3, r2
    a514:	eor	r3, r1, r3
    a518:	eor	r1, r1, r2
    a51c:	ldrb	r2, [r0, #2910]	; 0xb5e
    a520:	orr	r3, r3, r4
    a524:	orr	r1, r3, r1
    a528:	ldrb	r3, [r0, #2911]	; 0xb5f
    a52c:	uxtab	ip, ip, r1
    a530:	ldrb	r1, [r0, #2912]	; 0xb60
    a534:	eor	r4, r3, r2
    a538:	eor	r3, r1, r3
    a53c:	eor	r1, r1, r2
    a540:	ldrb	r2, [r0, #2913]	; 0xb61
    a544:	orr	r3, r3, r4
    a548:	orr	r1, r3, r1
    a54c:	ldrb	r3, [r0, #2914]	; 0xb62
    a550:	uxtab	ip, ip, r1
    a554:	ldrb	r1, [r0, #2915]	; 0xb63
    a558:	eor	r4, r3, r2
    a55c:	eor	r3, r1, r3
    a560:	eor	r1, r1, r2
    a564:	ldrb	r2, [r0, #2916]	; 0xb64
    a568:	orr	r3, r3, r4
    a56c:	orr	r1, r3, r1
    a570:	ldrb	r3, [r0, #2917]	; 0xb65
    a574:	uxtab	ip, ip, r1
    a578:	ldrb	r1, [r0, #2918]	; 0xb66
    a57c:	eor	r4, r3, r2
    a580:	eor	r3, r1, r3
    a584:	eor	r1, r1, r2
    a588:	ldrb	r2, [r0, #2919]	; 0xb67
    a58c:	orr	r3, r3, r4
    a590:	orr	r1, r3, r1
    a594:	ldrb	r3, [r0, #2920]	; 0xb68
    a598:	uxtab	ip, ip, r1
    a59c:	ldrb	r1, [r0, #2921]	; 0xb69
    a5a0:	eor	r4, r3, r2
    a5a4:	eor	r3, r1, r3
    a5a8:	eor	r1, r1, r2
    a5ac:	ldrb	r2, [r0, #2922]	; 0xb6a
    a5b0:	orr	r3, r3, r4
    a5b4:	orr	r1, r3, r1
    a5b8:	ldrb	r3, [r0, #2923]	; 0xb6b
    a5bc:	uxtab	ip, ip, r1
    a5c0:	ldrb	r1, [r0, #2924]	; 0xb6c
    a5c4:	eor	r4, r3, r2
    a5c8:	eor	r3, r1, r3
    a5cc:	eor	r1, r1, r2
    a5d0:	ldrb	r2, [r0, #2925]	; 0xb6d
    a5d4:	orr	r3, r3, r4
    a5d8:	orr	r1, r3, r1
    a5dc:	ldrb	r3, [r0, #2926]	; 0xb6e
    a5e0:	uxtab	ip, ip, r1
    a5e4:	ldrb	r1, [r0, #2927]	; 0xb6f
    a5e8:	eor	r4, r3, r2
    a5ec:	eor	r3, r1, r3
    a5f0:	eor	r1, r1, r2
    a5f4:	ldrb	r2, [r0, #2928]	; 0xb70
    a5f8:	orr	r3, r3, r4
    a5fc:	orr	r1, r3, r1
    a600:	ldrb	r3, [r0, #2929]	; 0xb71
    a604:	uxtab	ip, ip, r1
    a608:	ldrb	r1, [r0, #2930]	; 0xb72
    a60c:	eor	r4, r3, r2
    a610:	eor	r3, r1, r3
    a614:	eor	r1, r1, r2
    a618:	ldrb	r2, [r0, #2931]	; 0xb73
    a61c:	orr	r3, r3, r4
    a620:	orr	r1, r3, r1
    a624:	ldrb	r3, [r0, #2932]	; 0xb74
    a628:	uxtab	ip, ip, r1
    a62c:	ldrb	r1, [r0, #2933]	; 0xb75
    a630:	eor	r4, r3, r2
    a634:	eor	r3, r1, r3
    a638:	eor	r1, r1, r2
    a63c:	ldrb	r2, [r0, #2934]	; 0xb76
    a640:	orr	r3, r3, r4
    a644:	orr	r1, r3, r1
    a648:	ldrb	r3, [r0, #2935]	; 0xb77
    a64c:	uxtab	ip, ip, r1
    a650:	ldrb	r1, [r0, #2936]	; 0xb78
    a654:	eor	r4, r3, r2
    a658:	eor	r3, r1, r3
    a65c:	eor	r1, r1, r2
    a660:	ldrb	r2, [r0, #2937]	; 0xb79
    a664:	orr	r3, r3, r4
    a668:	orr	r1, r3, r1
    a66c:	ldrb	r3, [r0, #2938]	; 0xb7a
    a670:	uxtab	ip, ip, r1
    a674:	ldrb	r1, [r0, #2939]	; 0xb7b
    a678:	eor	r4, r3, r2
    a67c:	eor	r3, r1, r3
    a680:	eor	r1, r1, r2
    a684:	ldrb	r2, [r0, #2940]	; 0xb7c
    a688:	orr	r3, r3, r4
    a68c:	orr	r1, r3, r1
    a690:	ldrb	r3, [r0, #2941]	; 0xb7d
    a694:	uxtab	ip, ip, r1
    a698:	ldrb	r1, [r0, #2942]	; 0xb7e
    a69c:	eor	r4, r3, r2
    a6a0:	eor	r3, r1, r3
    a6a4:	eor	r1, r1, r2
    a6a8:	ldrb	r2, [r0, #2943]	; 0xb7f
    a6ac:	orr	r3, r3, r4
    a6b0:	orr	r1, r3, r1
    a6b4:	ldrb	r3, [r0, #2944]	; 0xb80
    a6b8:	ldrb	r0, [r0, #2945]	; 0xb81
    a6bc:	uxtab	r1, ip, r1
    a6c0:	eor	r4, r3, r2
    a6c4:	eor	r3, r0, r3
    a6c8:	eor	r0, r0, r2
    a6cc:	orr	r3, r3, r4
    a6d0:	orr	r0, r3, r0
    a6d4:	uxtab	r0, r1, r0
    a6d8:	mov	r1, #0
    a6dc:	cmp	r0, #5
    a6e0:	movwlt	r1, #1
    a6e4:	mov	r0, r1
    a6e8:	pop	{r4, sl, fp, pc}

0000a6ec <lap_from_fhs@@Base>:
    a6ec:	ldrb	ip, [r0, #102]	; 0x66
    a6f0:	ldrb	r2, [r0, #103]	; 0x67
    a6f4:	ldrb	r3, [r0, #104]	; 0x68
    a6f8:	ldrb	r1, [r0, #105]	; 0x69
    a6fc:	orr	r2, ip, r2, lsl #1
    a700:	orr	r2, r2, r3, lsl #2
    a704:	orr	r1, r2, r1, lsl #3
    a708:	ldrb	r2, [r0, #106]	; 0x6a
    a70c:	orr	r1, r1, r2, lsl #4
    a710:	ldrb	r2, [r0, #107]	; 0x6b
    a714:	orr	r1, r1, r2, lsl #5
    a718:	ldrb	r2, [r0, #108]	; 0x6c
    a71c:	orr	r1, r1, r2, lsl #6
    a720:	ldrb	r2, [r0, #109]	; 0x6d
    a724:	orr	r1, r1, r2, lsl #7
    a728:	ldrb	r2, [r0, #110]	; 0x6e
    a72c:	orr	r1, r1, r2, lsl #8
    a730:	ldrb	r2, [r0, #111]	; 0x6f
    a734:	orr	r1, r1, r2, lsl #9
    a738:	ldrb	r2, [r0, #112]	; 0x70
    a73c:	orr	r1, r1, r2, lsl #10
    a740:	ldrb	r2, [r0, #113]	; 0x71
    a744:	orr	r1, r1, r2, lsl #11
    a748:	ldrb	r2, [r0, #114]	; 0x72
    a74c:	orr	r1, r1, r2, lsl #12
    a750:	ldrb	r2, [r0, #115]	; 0x73
    a754:	orr	r1, r1, r2, lsl #13
    a758:	ldrb	r2, [r0, #116]	; 0x74
    a75c:	orr	r1, r1, r2, lsl #14
    a760:	ldrb	r2, [r0, #117]	; 0x75
    a764:	orr	r1, r1, r2, lsl #15
    a768:	ldrb	r2, [r0, #118]	; 0x76
    a76c:	orr	r1, r1, r2, lsl #16
    a770:	ldrb	r2, [r0, #119]	; 0x77
    a774:	orr	r1, r1, r2, lsl #17
    a778:	ldrb	r2, [r0, #120]	; 0x78
    a77c:	orr	r1, r1, r2, lsl #18
    a780:	ldrb	r2, [r0, #121]	; 0x79
    a784:	orr	r1, r1, r2, lsl #19
    a788:	ldrb	r2, [r0, #122]	; 0x7a
    a78c:	orr	r1, r1, r2, lsl #20
    a790:	ldrb	r2, [r0, #123]	; 0x7b
    a794:	orr	r1, r1, r2, lsl #21
    a798:	ldrb	r2, [r0, #124]	; 0x7c
    a79c:	ldrb	r0, [r0, #125]	; 0x7d
    a7a0:	orr	r1, r1, r2, lsl #22
    a7a4:	orr	r0, r1, r0, lsl #23
    a7a8:	bx	lr

0000a7ac <uap_from_fhs@@Base>:
    a7ac:	ldrb	ip, [r0, #132]	; 0x84
    a7b0:	ldrb	r2, [r0, #133]	; 0x85
    a7b4:	ldrb	r3, [r0, #134]	; 0x86
    a7b8:	ldrb	r1, [r0, #135]	; 0x87
    a7bc:	orr	r2, ip, r2, lsl #1
    a7c0:	orr	r2, r2, r3, lsl #2
    a7c4:	orr	r1, r2, r1, lsl #3
    a7c8:	ldrb	r2, [r0, #136]	; 0x88
    a7cc:	orr	r1, r1, r2, lsl #4
    a7d0:	ldrb	r2, [r0, #137]	; 0x89
    a7d4:	orr	r1, r1, r2, lsl #5
    a7d8:	ldrb	r2, [r0, #138]	; 0x8a
    a7dc:	ldrb	r0, [r0, #139]	; 0x8b
    a7e0:	orr	r1, r1, r2, lsl #6
    a7e4:	orr	r0, r1, r0, lsl #7
    a7e8:	uxtb	r0, r0
    a7ec:	bx	lr

0000a7f0 <nap_from_fhs@@Base>:
    a7f0:	ldrb	ip, [r0, #140]	; 0x8c
    a7f4:	ldrb	r2, [r0, #141]	; 0x8d
    a7f8:	ldrb	r3, [r0, #142]	; 0x8e
    a7fc:	ldrb	r1, [r0, #143]	; 0x8f
    a800:	orr	r2, ip, r2, lsl #1
    a804:	orr	r2, r2, r3, lsl #2
    a808:	orr	r1, r2, r1, lsl #3
    a80c:	ldrb	r2, [r0, #144]	; 0x90
    a810:	orr	r1, r1, r2, lsl #4
    a814:	ldrb	r2, [r0, #145]	; 0x91
    a818:	orr	r1, r1, r2, lsl #5
    a81c:	ldrb	r2, [r0, #146]	; 0x92
    a820:	orr	r1, r1, r2, lsl #6
    a824:	ldrb	r2, [r0, #147]	; 0x93
    a828:	orr	r1, r1, r2, lsl #7
    a82c:	ldrb	r2, [r0, #148]	; 0x94
    a830:	orr	r1, r1, r2, lsl #8
    a834:	ldrb	r2, [r0, #149]	; 0x95
    a838:	orr	r1, r1, r2, lsl #9
    a83c:	ldrb	r2, [r0, #150]	; 0x96
    a840:	orr	r1, r1, r2, lsl #10
    a844:	ldrb	r2, [r0, #151]	; 0x97
    a848:	orr	r1, r1, r2, lsl #11
    a84c:	ldrb	r2, [r0, #152]	; 0x98
    a850:	orr	r1, r1, r2, lsl #12
    a854:	ldrb	r2, [r0, #153]	; 0x99
    a858:	orr	r1, r1, r2, lsl #13
    a85c:	ldrb	r2, [r0, #154]	; 0x9a
    a860:	ldrb	r0, [r0, #155]	; 0x9b
    a864:	orr	r1, r1, r2, lsl #14
    a868:	orr	r0, r1, r0, lsl #15
    a86c:	uxth	r0, r0
    a870:	bx	lr

0000a874 <clock_from_fhs@@Base>:
    a874:	ldrb	ip, [r0, #183]	; 0xb7
    a878:	ldrb	r2, [r0, #184]	; 0xb8
    a87c:	ldrb	r3, [r0, #185]	; 0xb9
    a880:	ldrb	r1, [r0, #186]	; 0xba
    a884:	orr	r2, ip, r2, lsl #1
    a888:	orr	r2, r2, r3, lsl #2
    a88c:	orr	r1, r2, r1, lsl #3
    a890:	ldrb	r2, [r0, #187]	; 0xbb
    a894:	orr	r1, r1, r2, lsl #4
    a898:	ldrb	r2, [r0, #188]	; 0xbc
    a89c:	orr	r1, r1, r2, lsl #5
    a8a0:	ldrb	r2, [r0, #189]	; 0xbd
    a8a4:	orr	r1, r1, r2, lsl #6
    a8a8:	ldrb	r2, [r0, #190]	; 0xbe
    a8ac:	orr	r1, r1, r2, lsl #7
    a8b0:	ldrb	r2, [r0, #191]	; 0xbf
    a8b4:	orr	r1, r1, r2, lsl #8
    a8b8:	ldrb	r2, [r0, #192]	; 0xc0
    a8bc:	orr	r1, r1, r2, lsl #9
    a8c0:	ldrb	r2, [r0, #193]	; 0xc1
    a8c4:	orr	r1, r1, r2, lsl #10
    a8c8:	ldrb	r2, [r0, #194]	; 0xc2
    a8cc:	orr	r1, r1, r2, lsl #11
    a8d0:	ldrb	r2, [r0, #195]	; 0xc3
    a8d4:	orr	r1, r1, r2, lsl #12
    a8d8:	ldrb	r2, [r0, #196]	; 0xc4
    a8dc:	orr	r1, r1, r2, lsl #13
    a8e0:	ldrb	r2, [r0, #197]	; 0xc5
    a8e4:	orr	r1, r1, r2, lsl #14
    a8e8:	ldrb	r2, [r0, #198]	; 0xc6
    a8ec:	orr	r1, r1, r2, lsl #15
    a8f0:	ldrb	r2, [r0, #199]	; 0xc7
    a8f4:	orr	r1, r1, r2, lsl #16
    a8f8:	ldrb	r2, [r0, #200]	; 0xc8
    a8fc:	orr	r1, r1, r2, lsl #17
    a900:	ldrb	r2, [r0, #201]	; 0xc9
    a904:	orr	r1, r1, r2, lsl #18
    a908:	ldrb	r2, [r0, #202]	; 0xca
    a90c:	orr	r1, r1, r2, lsl #19
    a910:	ldrb	r2, [r0, #203]	; 0xcb
    a914:	orr	r1, r1, r2, lsl #20
    a918:	ldrb	r2, [r0, #204]	; 0xcc
    a91c:	orr	r1, r1, r2, lsl #21
    a920:	ldrb	r2, [r0, #205]	; 0xcd
    a924:	orr	r1, r1, r2, lsl #22
    a928:	ldrb	r2, [r0, #206]	; 0xce
    a92c:	orr	r1, r1, r2, lsl #23
    a930:	ldrb	r2, [r0, #207]	; 0xcf
    a934:	ldrb	r0, [r0, #208]	; 0xd0
    a938:	orr	r1, r1, r2, lsl #24
    a93c:	orr	r0, r1, r0, lsl #25
    a940:	bx	lr
    a944:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a948:	add	fp, sp, #28
    a94c:	sub	sp, sp, #4
    a950:	vpush	{d8-d9}
    a954:	sub	sp, sp, #24
    a958:	cmp	r2, #57	; 0x39
    a95c:	str	r1, [sp, #12]
    a960:	bgt	ae00 <clock_from_fhs@@Base+0x58c>
    a964:	vmov.i32	q4, #0	; 0x00000000
    a968:	sub	r3, r3, #1
    a96c:	mov	sl, r2
    a970:	mov	r5, r0
    a974:	mov	r9, #0
    a978:	stmib	sp, {r0, r3}
    a97c:	b	a9a0 <clock_from_fhs@@Base+0x12c>
    a980:	add	r2, sl, #1
    a984:	mov	r0, r6
    a988:	mov	r1, r7
    a98c:	bl	a944 <clock_from_fhs@@Base+0xd0>
    a990:	ldr	r3, [sp, #8]
    a994:	add	sl, sl, #1
    a998:	cmp	sl, #58	; 0x3a
    a99c:	beq	ae00 <clock_from_fhs@@Base+0x58c>
    a9a0:	mov	r2, #1
    a9a4:	subs	r1, sl, #32
    a9a8:	lsl	r0, r2, sl
    a9ac:	movwpl	r0, #0
    a9b0:	orr	r6, r0, r5
    a9b4:	rsb	r0, sl, #32
    a9b8:	lsr	r0, r2, r0
    a9bc:	lslpl	r0, r2, r1
    a9c0:	ldr	r1, [sp, #12]
    a9c4:	cmp	r3, #0
    a9c8:	orr	r7, r0, r1
    a9cc:	bne	a980 <clock_from_fhs@@Base+0x10c>
    a9d0:	mov	r0, #48	; 0x30
    a9d4:	bl	464c <malloc@plt>
    a9d8:	mov	r5, r0
    a9dc:	mov	r0, #8
    a9e0:	str	r0, [r5, #40]	; 0x28
    a9e4:	movw	r0, #29288	; 0x7268
    a9e8:	str	r9, [r5, #24]
    a9ec:	str	r7, [r5, #12]
    a9f0:	str	r6, [r5, #8]
    a9f4:	add	r4, r5, #16
    a9f8:	movt	r0, #52347	; 0xcc7b
    a9fc:	eor	r0, r7, r0
    aa00:	ubfx	r1, r0, #8, #8
    aa04:	ldr	r2, [pc, #1036]	; ae18 <clock_from_fhs@@Base+0x5a4>
    aa08:	ldr	r7, [pc, #1036]	; ae1c <clock_from_fhs@@Base+0x5a8>
    aa0c:	uxtb	r3, r0
    aa10:	add	r7, pc, r7
    aa14:	add	r2, pc, r2
    aa18:	ldr	r3, [r7, r3, lsl #3]!
    aa1c:	ldr	r1, [r2, r1, lsl #3]!
    aa20:	eor	r3, r6, r3
    aa24:	eor	r1, r3, r1
    aa28:	ubfx	r3, r0, #16, #8
    aa2c:	ldr	r6, [pc, #1004]	; ae20 <clock_from_fhs@@Base+0x5ac>
    aa30:	add	r6, pc, r6
    aa34:	ldr	r3, [r6, r3, lsl #3]!
    aa38:	eor	r1, r1, r3
    aa3c:	mvn	r3, #7
    aa40:	and	r0, r3, r0, lsr #21
    aa44:	ldr	r3, [pc, #984]	; ae24 <clock_from_fhs@@Base+0x5b0>
    aa48:	add	r3, pc, r3
    aa4c:	ldr	r0, [r3, r0]!
    aa50:	eor	r0, r1, r0
    aa54:	movw	r1, #19995	; 0x4e1b
    aa58:	movt	r1, #65377	; 0xff61
    aa5c:	eor	r0, r0, r1
    aa60:	ldr	r1, [r7, #4]
    aa64:	str	r0, [r5]
    aa68:	ldr	r0, [r2, #4]
    aa6c:	eor	r0, r1, r0
    aa70:	ldr	r1, [r6, #4]
    aa74:	eor	r0, r0, r1
    aa78:	ldr	r1, [r3, #4]
    aa7c:	eor	r0, r0, r1
    aa80:	str	r0, [r5, #4]
    aa84:	str	r5, [r5, #36]	; 0x24
    aa88:	ldr	r0, [pc, #920]	; ae28 <clock_from_fhs@@Base+0x5b4>
    aa8c:	ldr	r0, [pc, r0]
    aa90:	cmp	r0, #0
    aa94:	beq	aab8 <clock_from_fhs@@Base+0x244>
    aa98:	ldr	r6, [r0, #16]
    aa9c:	ldr	r1, [r6, #16]
    aaa0:	str	r5, [r1, #8]
    aaa4:	ldr	r2, [r6, #20]
    aaa8:	sub	r1, r1, r2
    aaac:	str	r1, [r5, #20]
    aab0:	str	r4, [r6, #16]
    aab4:	b	ab3c <clock_from_fhs@@Base+0x2c8>
    aab8:	ldr	r0, [pc, #876]	; ae2c <clock_from_fhs@@Base+0x5b8>
    aabc:	str	r9, [r5, #20]
    aac0:	add	r0, pc, r0
    aac4:	str	r5, [r0]
    aac8:	mov	r0, #44	; 0x2c
    aacc:	bl	464c <malloc@plt>
    aad0:	cmp	r0, #0
    aad4:	str	r0, [r5, #16]
    aad8:	beq	ae10 <clock_from_fhs@@Base+0x59c>
    aadc:	mov	r6, r0
    aae0:	add	r0, r0, #12
    aae4:	vst1.32	{d8-d9}, [r0]
    aae8:	mov	r0, #32
    aaec:	str	r0, [r6, #4]
    aaf0:	mov	r0, #5
    aaf4:	str	r0, [r6, #8]
    aaf8:	add	r0, r6, #28
    aafc:	vst1.32	{d8-d9}, [r0]
    ab00:	mov	r0, #16
    ab04:	str	r4, [r6, #16]
    ab08:	str	r0, [r6, #20]
    ab0c:	mov	r0, #384	; 0x180
    ab10:	bl	464c <malloc@plt>
    ab14:	cmp	r0, #0
    ab18:	str	r0, [r6]
    ab1c:	beq	ae10 <clock_from_fhs@@Base+0x59c>
    ab20:	mov	r1, #0
    ab24:	mov	r2, #384	; 0x180
    ab28:	bl	4718 <memset@plt>
    ab2c:	movw	r0, #8161	; 0x1fe1
    ab30:	movt	r0, #40977	; 0xa011
    ab34:	str	r0, [r6, #40]	; 0x28
    ab38:	mov	r0, r5
    ab3c:	ldr	r1, [r6, #12]
    ab40:	movw	r2, #31161	; 0x79b9
    ab44:	movt	r2, #40503	; 0x9e37
    ab48:	add	r1, r1, #1
    ab4c:	str	r1, [r6, #12]
    ab50:	ldr	r1, [r5, #4]
    ab54:	ldrb	r6, [r5, #3]
    ab58:	ldrb	r7, [r5, #2]
    ab5c:	ldrb	r3, [r5, #1]
    ab60:	ldr	r8, [r0, #16]
    ab64:	add	r1, r1, r2
    ab68:	ldrb	r2, [r5]
    ab6c:	str	r8, [r5, #16]
    ab70:	rsb	r6, r1, r6, lsl #24
    ab74:	add	r7, r6, r7, lsl #16
    ab78:	add	r3, r7, r3, lsl #8
    ab7c:	movw	r7, #48887	; 0xbef7
    ab80:	movt	r7, #65261	; 0xfeed
    ab84:	add	r2, r3, r2
    ab88:	movw	r3, #47810	; 0xbac2
    ab8c:	movt	r3, #40777	; 0x9f49
    ab90:	add	r2, r2, r3
    ab94:	movw	r3, #63341	; 0xf76d
    ab98:	movt	r3, #7
    ab9c:	eor	r2, r2, r3
    aba0:	movw	r3, #16649	; 0x4109
    aba4:	movt	r3, #274	; 0x112
    aba8:	sub	r1, r1, r2
    abac:	add	r1, r1, r3
    abb0:	eor	r1, r1, r2, lsl #8
    abb4:	add	r3, r2, r1
    abb8:	sub	r2, r2, r1
    abbc:	sub	r3, r7, r3
    abc0:	eor	r3, r3, r1, lsr #13
    abc4:	sub	r2, r2, r3
    abc8:	sub	r1, r1, r3
    abcc:	eor	r2, r2, r3, lsr #12
    abd0:	sub	r1, r1, r2
    abd4:	sub	r3, r3, r2
    abd8:	eor	r1, r1, r2, lsl #16
    abdc:	sub	r3, r3, r1
    abe0:	sub	r2, r2, r1
    abe4:	eor	r3, r3, r1, lsr #5
    abe8:	sub	r2, r2, r3
    abec:	sub	r1, r1, r3
    abf0:	eor	r2, r2, r3, lsr #3
    abf4:	sub	r1, r1, r2
    abf8:	eor	r1, r1, r2, lsl #10
    abfc:	sub	r2, r3, r2
    ac00:	sub	r2, r2, r1
    ac04:	eor	r1, r2, r1, lsr #15
    ac08:	str	r1, [r5, #44]	; 0x2c
    ac0c:	ldr	r2, [r0, #16]
    ac10:	ldm	r2, {r0, r2}
    ac14:	sub	r2, r2, #1
    ac18:	and	r1, r1, r2
    ac1c:	add	r2, r1, r1, lsl #1
    ac20:	mov	r3, r0
    ac24:	add	r0, r0, r2, lsl #2
    ac28:	ldr	r7, [r3, r2, lsl #2]!
    ac2c:	mov	r2, #10
    ac30:	ldr	r1, [r3, #4]
    ac34:	cmp	r7, #0
    ac38:	add	r1, r1, #1
    ac3c:	str	r1, [r3, #4]
    ac40:	str	r9, [r5, #28]
    ac44:	str	r7, [r5, #32]
    ac48:	strne	r4, [r7, #12]
    ac4c:	str	r4, [r3]
    ac50:	ldr	r5, [sp, #4]
    ac54:	ldr	r0, [r0, #8]
    ac58:	add	r0, r0, r0, lsl #2
    ac5c:	add	r0, r2, r0, lsl #1
    ac60:	cmp	r1, r0
    ac64:	bcc	a990 <clock_from_fhs@@Base+0x11c>
    ac68:	ldr	r0, [r8, #36]	; 0x24
    ac6c:	cmp	r0, #1
    ac70:	beq	a990 <clock_from_fhs@@Base+0x11c>
    ac74:	ldr	r0, [r8, #4]
    ac78:	str	r4, [sp]
    ac7c:	add	r0, r0, r0, lsl #1
    ac80:	lsl	r0, r0, #3
    ac84:	bl	464c <malloc@plt>
    ac88:	cmp	r0, #0
    ac8c:	beq	ae10 <clock_from_fhs@@Base+0x59c>
    ac90:	mov	r5, r0
    ac94:	ldr	r0, [r8, #4]
    ac98:	mov	r1, #0
    ac9c:	add	r0, r0, r0, lsl #1
    aca0:	lsl	r2, r0, #3
    aca4:	mov	r0, r5
    aca8:	bl	4718 <memset@plt>
    acac:	str	r9, [r8, #28]
    acb0:	mvn	r2, #0
    acb4:	mov	r7, #1
    acb8:	ldr	r0, [r8]
    acbc:	ldr	r6, [r8, #4]
    acc0:	ldr	r1, [r8, #12]
    acc4:	str	r0, [sp, #20]
    acc8:	ldr	r0, [r8, #8]
    accc:	add	r2, r2, r6, lsl #1
    acd0:	str	r6, [sp, #16]
    acd4:	tst	r2, r1
    acd8:	add	r0, r0, #1
    acdc:	lsr	r3, r1, r0
    ace0:	addne	r3, r7, r1, lsr r0
    ace4:	cmp	r6, #0
    ace8:	str	r3, [r8, #24]
    acec:	beq	ad84 <clock_from_fhs@@Base+0x510>
    acf0:	mov	r7, #0
    acf4:	mov	lr, #0
    acf8:	b	ad0c <clock_from_fhs@@Base+0x498>
    acfc:	ldr	r0, [sp, #16]
    ad00:	add	lr, lr, #1
    ad04:	cmp	lr, r0
    ad08:	beq	ad84 <clock_from_fhs@@Base+0x510>
    ad0c:	ldr	r1, [sp, #20]
    ad10:	add	r0, lr, lr, lsl #1
    ad14:	ldr	r4, [r1, r0, lsl #2]
    ad18:	cmp	r4, #0
    ad1c:	bne	ad48 <clock_from_fhs@@Base+0x4d4>
    ad20:	b	acfc <clock_from_fhs@@Base+0x488>
    ad24:	str	r9, [r4, #12]
    ad28:	ldr	r0, [r1]
    ad2c:	cmp	r0, #0
    ad30:	str	r0, [r4, #16]
    ad34:	strne	r4, [r0, #12]
    ad38:	str	r4, [r1]
    ad3c:	cmp	r6, #0
    ad40:	mov	r4, r6
    ad44:	beq	acfc <clock_from_fhs@@Base+0x488>
    ad48:	ldr	r0, [r4, #28]
    ad4c:	ldr	r6, [r4, #16]
    ad50:	and	r0, r0, r2
    ad54:	add	r0, r0, r0, lsl #1
    ad58:	add	r1, r5, r0, lsl #2
    ad5c:	ldr	r0, [r1, #4]
    ad60:	add	ip, r0, #1
    ad64:	cmp	ip, r3
    ad68:	str	ip, [r1, #4]
    ad6c:	bls	ad24 <clock_from_fhs@@Base+0x4b0>
    ad70:	udiv	r0, ip, r3
    ad74:	add	r7, r7, #1
    ad78:	str	r7, [r8, #28]
    ad7c:	str	r0, [r1, #8]
    ad80:	b	ad24 <clock_from_fhs@@Base+0x4b0>
    ad84:	ldr	r0, [sp, #20]
    ad88:	bl	4550 <free@plt>
    ad8c:	ldr	r0, [sp]
    ad90:	ldr	r0, [r0]
    ad94:	str	r5, [r0]
    ad98:	ldr	r7, [r0, #28]
    ad9c:	ldmib	r0, {r1, r2, r3}
    ada0:	lsl	r1, r1, #1
    ada4:	cmp	r7, r3, lsr #1
    ada8:	str	r1, [r0, #4]
    adac:	add	r1, r2, #1
    adb0:	str	r1, [r0, #8]
    adb4:	bls	ade8 <clock_from_fhs@@Base+0x574>
    adb8:	ldr	r1, [r0, #32]
    adbc:	ldr	r5, [sp, #4]
    adc0:	add	r1, r1, #1
    adc4:	cmp	r1, #2
    adc8:	str	r1, [r0, #32]
    adcc:	movcs	r1, #1
    add0:	strcs	r1, [r0, #36]	; 0x24
    add4:	ldr	r3, [sp, #8]
    add8:	add	sl, sl, #1
    addc:	cmp	sl, #58	; 0x3a
    ade0:	bne	a9a0 <clock_from_fhs@@Base+0x12c>
    ade4:	b	ae00 <clock_from_fhs@@Base+0x58c>
    ade8:	ldr	r5, [sp, #4]
    adec:	str	r9, [r0, #32]
    adf0:	ldr	r3, [sp, #8]
    adf4:	add	sl, sl, #1
    adf8:	cmp	sl, #58	; 0x3a
    adfc:	bne	a9a0 <clock_from_fhs@@Base+0x12c>
    ae00:	sub	sp, fp, #48	; 0x30
    ae04:	vpop	{d8-d9}
    ae08:	add	sp, sp, #4
    ae0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ae10:	mvn	r0, #0
    ae14:	bl	4688 <exit@plt>
    ae18:	strdeq	r9, [r0], -ip
    ae1c:	andeq	r9, r0, r0
    ae20:	andeq	r9, r0, r0, ror #31
    ae24:	andeq	sl, r0, r8, asr #15
    ae28:			; <UNDEFINED> instruction: 0x000226b8
    ae2c:	andeq	r2, r2, r4, lsl #13

0000ae30 <count_bits@@Base>:
    ae30:	mov	r1, #0
    ae34:	cmp	r0, #0
    ae38:	beq	ae50 <count_bits@@Base+0x20>
    ae3c:	sub	r2, r0, #1
    ae40:	add	r1, r1, #1
    ae44:	and	r0, r2, r0
    ae48:	tst	r0, #255	; 0xff
    ae4c:	bne	ae3c <count_bits@@Base+0xc>
    ae50:	mov	r0, r1
    ae54:	bx	lr

0000ae58 <btbb_piconet_new@@Base>:
    ae58:	push	{r4, sl, fp, lr}
    ae5c:	add	fp, sp, #8
    ae60:	mov	r0, #1
    ae64:	movw	r1, #5660	; 0x161c
    ae68:	mov	r4, #1
    ae6c:	bl	44cc <calloc@plt>
    ae70:	str	r4, [r0]
    ae74:	pop	{r4, sl, fp, pc}

0000ae78 <btbb_piconet_ref@@Base>:
    ae78:	ldr	r1, [r0]
    ae7c:	add	r1, r1, #1
    ae80:	str	r1, [r0]
    ae84:	bx	lr

0000ae88 <btbb_piconet_unref@@Base>:
    ae88:	ldr	r1, [r0]
    ae8c:	subs	r1, r1, #1
    ae90:	str	r1, [r0]
    ae94:	bxne	lr
    ae98:	b	4550 <free@plt>

0000ae9c <btbb_init_survey@@Base>:
    ae9c:	ldr	r0, [pc, #16]	; aeb4 <btbb_init_survey@@Base+0x18>
    aea0:	mov	r1, #1
    aea4:	add	r0, pc, r0
    aea8:	strb	r1, [r0]
    aeac:	mov	r0, #0
    aeb0:	bx	lr
    aeb4:	andeq	r2, r2, r8, lsr #5

0000aeb8 <btbb_init_piconet@@Base>:
    aeb8:	str	r1, [r0, #24]
    aebc:	ldr	r1, [r0, #4]
    aec0:	orr	r1, r1, #8
    aec4:	str	r1, [r0, #4]
    aec8:	bx	lr

0000aecc <btbb_piconet_set_flag@@Base>:
    aecc:	push	{fp, lr}
    aed0:	mov	fp, sp
    aed4:	ldr	lr, [r0, #4]
    aed8:	mov	ip, #1
    aedc:	cmp	r2, #0
    aee0:	orr	r3, lr, ip, lsl r1
    aee4:	biceq	r3, lr, ip, lsl r1
    aee8:	str	r3, [r0, #4]
    aeec:	pop	{fp, pc}

0000aef0 <btbb_piconet_get_flag@@Base>:
    aef0:	ldr	r0, [r0, #4]
    aef4:	mov	r2, #1
    aef8:	and	r0, r0, r2, lsl r1
    aefc:	cmp	r0, #0
    af00:	movwne	r0, #1
    af04:	bx	lr

0000af08 <btbb_piconet_set_uap@@Base>:
    af08:	strb	r1, [r0, #28]
    af0c:	ldr	r1, [r0, #4]
    af10:	orr	r1, r1, #4
    af14:	str	r1, [r0, #4]
    af18:	bx	lr

0000af1c <btbb_piconet_get_uap@@Base>:
    af1c:	ldrb	r0, [r0, #28]
    af20:	bx	lr

0000af24 <btbb_piconet_get_lap@@Base>:
    af24:	ldr	r0, [r0, #24]
    af28:	bx	lr

0000af2c <btbb_piconet_get_nap@@Base>:
    af2c:	ldrh	r0, [r0, #30]
    af30:	bx	lr

0000af34 <btbb_piconet_get_bdaddr@@Base>:
    af34:	ldrb	r1, [r0, #28]
    af38:	ldr	r2, [r0, #24]
    af3c:	orr	r2, r2, r1, lsl #24
    af40:	ldrh	r1, [r0, #30]
    af44:	mov	r0, r2
    af48:	bx	lr

0000af4c <btbb_piconet_get_clk_offset@@Base>:
    af4c:	movw	r1, #5648	; 0x1610
    af50:	ldr	r0, [r0, r1]
    af54:	bx	lr

0000af58 <btbb_piconet_set_clk_offset@@Base>:
    af58:	movw	r2, #5648	; 0x1610
    af5c:	str	r1, [r0, r2]
    af60:	bx	lr

0000af64 <btbb_piconet_set_afh_map@@Base>:
    af64:	push	{r4, sl, fp, lr}
    af68:	add	fp, sp, #8
    af6c:	mov	ip, #0
    af70:	mov	lr, #0
    af74:	strb	ip, [r0, #22]
    af78:	ldrb	r2, [r1]
    af7c:	cmp	r2, #0
    af80:	strb	r2, [r0, #12]
    af84:	beq	afa0 <btbb_piconet_set_afh_map@@Base+0x3c>
    af88:	mov	lr, #0
    af8c:	sub	r3, r2, #1
    af90:	add	lr, lr, #1
    af94:	and	r2, r3, r2
    af98:	tst	r2, #255	; 0xff
    af9c:	bne	af8c <btbb_piconet_set_afh_map@@Base+0x28>
    afa0:	strb	lr, [r0, #22]
    afa4:	ldrb	r2, [r1, #1]
    afa8:	cmp	r2, #0
    afac:	strb	r2, [r0, #13]
    afb0:	beq	afcc <btbb_piconet_set_afh_map@@Base+0x68>
    afb4:	mov	ip, #0
    afb8:	sub	r3, r2, #1
    afbc:	add	ip, ip, #1
    afc0:	and	r2, r3, r2
    afc4:	tst	r2, #255	; 0xff
    afc8:	bne	afb8 <btbb_piconet_set_afh_map@@Base+0x54>
    afcc:	add	ip, lr, ip
    afd0:	mov	lr, #0
    afd4:	mov	r2, #0
    afd8:	strb	ip, [r0, #22]
    afdc:	ldrb	r3, [r1, #2]
    afe0:	cmp	r3, #0
    afe4:	strb	r3, [r0, #14]
    afe8:	beq	b004 <btbb_piconet_set_afh_map@@Base+0xa0>
    afec:	mov	r2, #0
    aff0:	sub	r4, r3, #1
    aff4:	add	r2, r2, #1
    aff8:	and	r3, r4, r3
    affc:	tst	r3, #255	; 0xff
    b000:	bne	aff0 <btbb_piconet_set_afh_map@@Base+0x8c>
    b004:	add	r3, ip, r2
    b008:	strb	r3, [r0, #22]
    b00c:	ldrb	r2, [r1, #3]
    b010:	cmp	r2, #0
    b014:	strb	r2, [r0, #15]
    b018:	beq	b034 <btbb_piconet_set_afh_map@@Base+0xd0>
    b01c:	mov	lr, #0
    b020:	sub	r4, r2, #1
    b024:	add	lr, lr, #1
    b028:	and	r2, r4, r2
    b02c:	tst	r2, #255	; 0xff
    b030:	bne	b020 <btbb_piconet_set_afh_map@@Base+0xbc>
    b034:	add	ip, r3, lr
    b038:	mov	lr, #0
    b03c:	mov	r2, #0
    b040:	strb	ip, [r0, #22]
    b044:	ldrb	r3, [r1, #4]
    b048:	cmp	r3, #0
    b04c:	strb	r3, [r0, #16]
    b050:	beq	b06c <btbb_piconet_set_afh_map@@Base+0x108>
    b054:	mov	r2, #0
    b058:	sub	r4, r3, #1
    b05c:	add	r2, r2, #1
    b060:	and	r3, r4, r3
    b064:	tst	r3, #255	; 0xff
    b068:	bne	b058 <btbb_piconet_set_afh_map@@Base+0xf4>
    b06c:	add	r3, ip, r2
    b070:	strb	r3, [r0, #22]
    b074:	ldrb	r2, [r1, #5]
    b078:	cmp	r2, #0
    b07c:	strb	r2, [r0, #17]
    b080:	beq	b09c <btbb_piconet_set_afh_map@@Base+0x138>
    b084:	mov	lr, #0
    b088:	sub	r4, r2, #1
    b08c:	add	lr, lr, #1
    b090:	and	r2, r4, r2
    b094:	tst	r2, #255	; 0xff
    b098:	bne	b088 <btbb_piconet_set_afh_map@@Base+0x124>
    b09c:	add	ip, r3, lr
    b0a0:	mov	lr, #0
    b0a4:	mov	r2, #0
    b0a8:	strb	ip, [r0, #22]
    b0ac:	ldrb	r3, [r1, #6]
    b0b0:	cmp	r3, #0
    b0b4:	strb	r3, [r0, #18]
    b0b8:	beq	b0d4 <btbb_piconet_set_afh_map@@Base+0x170>
    b0bc:	mov	r2, #0
    b0c0:	sub	r4, r3, #1
    b0c4:	add	r2, r2, #1
    b0c8:	and	r3, r4, r3
    b0cc:	tst	r3, #255	; 0xff
    b0d0:	bne	b0c0 <btbb_piconet_set_afh_map@@Base+0x15c>
    b0d4:	add	r3, ip, r2
    b0d8:	strb	r3, [r0, #22]
    b0dc:	ldrb	r2, [r1, #7]
    b0e0:	cmp	r2, #0
    b0e4:	strb	r2, [r0, #19]
    b0e8:	beq	b104 <btbb_piconet_set_afh_map@@Base+0x1a0>
    b0ec:	mov	lr, #0
    b0f0:	sub	r4, r2, #1
    b0f4:	add	lr, lr, #1
    b0f8:	and	r2, r4, r2
    b0fc:	tst	r2, #255	; 0xff
    b100:	bne	b0f0 <btbb_piconet_set_afh_map@@Base+0x18c>
    b104:	add	ip, r3, lr
    b108:	mov	lr, #0
    b10c:	mov	r2, #0
    b110:	strb	ip, [r0, #22]
    b114:	ldrb	r3, [r1, #8]
    b118:	cmp	r3, #0
    b11c:	strb	r3, [r0, #20]
    b120:	beq	b13c <btbb_piconet_set_afh_map@@Base+0x1d8>
    b124:	mov	r2, #0
    b128:	sub	r4, r3, #1
    b12c:	add	r2, r2, #1
    b130:	and	r3, r4, r3
    b134:	tst	r3, #255	; 0xff
    b138:	bne	b128 <btbb_piconet_set_afh_map@@Base+0x1c4>
    b13c:	add	r3, ip, r2
    b140:	strb	r3, [r0, #22]
    b144:	ldrb	r1, [r1, #9]
    b148:	cmp	r1, #0
    b14c:	strb	r1, [r0, #21]
    b150:	beq	b16c <btbb_piconet_set_afh_map@@Base+0x208>
    b154:	mov	lr, #0
    b158:	sub	r2, r1, #1
    b15c:	add	lr, lr, #1
    b160:	and	r1, r2, r1
    b164:	tst	r1, #255	; 0xff
    b168:	bne	b158 <btbb_piconet_set_afh_map@@Base+0x1f4>
    b16c:	add	r1, r3, lr
    b170:	strb	r1, [r0, #22]
    b174:	ldrb	r1, [r0, #4]
    b178:	tst	r1, #4
    b17c:	popeq	{r4, sl, fp, pc}
    b180:	pop	{r4, sl, fp, lr}
    b184:	b	b188 <get_hop_pattern@@Base>

0000b188 <get_hop_pattern@@Base>:
    b188:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b18c:	add	fp, sp, #28
    b190:	sub	sp, sp, #20
    b194:	mov	r5, r0
    b198:	ldrb	r0, [r0, #28]
    b19c:	movw	r7, #16653	; 0x410d
    b1a0:	ldr	r1, [r5, #24]
    b1a4:	ldr	r2, [r5, #4]
    b1a8:	movt	r7, #274	; 0x112
    b1ac:	orr	r6, r1, r0, lsl #24
    b1b0:	ldrb	r0, [r5, #22]
    b1b4:	str	r6, [sp, #8]
    b1b8:	ubfx	r2, r2, #11, #1
    b1bc:	orr	r8, r0, r2, lsl #7
    b1c0:	str	r8, [sp, #12]
    b1c4:	ldr	r0, [pc, #1196]	; b678 <get_hop_pattern@@Base+0x4f0>
    b1c8:	ldr	r0, [pc, r0]
    b1cc:	cmp	r0, #0
    b1d0:	beq	b2dc <get_hop_pattern@@Base+0x154>
    b1d4:	and	r2, r6, #-16777216	; 0xff000000
    b1d8:	and	r3, r1, #16711680	; 0xff0000
    b1dc:	ldr	r9, [r0, #12]
    b1e0:	add	r2, r2, r7
    b1e4:	add	r2, r2, r3
    b1e8:	and	r3, r1, #65280	; 0xff00
    b1ec:	add	r2, r2, r3
    b1f0:	movw	r3, #48883	; 0xbef3
    b1f4:	uxtab	r1, r2, r1
    b1f8:	movw	r2, #63341	; 0xf76d
    b1fc:	movt	r3, #65261	; 0xfeed
    b200:	movt	r2, #7
    b204:	eor	r1, r1, r2
    b208:	movw	r2, #47814	; 0xbac6
    b20c:	movt	r2, #40777	; 0x9f49
    b210:	sub	r3, r3, r1
    b214:	sub	r2, r2, r1
    b218:	eor	r2, r2, r1, lsl #8
    b21c:	sub	r3, r3, r2
    b220:	sub	r1, r1, r2
    b224:	eor	r3, r3, r2, lsr #13
    b228:	sub	r1, r1, r3
    b22c:	sub	r2, r2, r3
    b230:	eor	r1, r1, r3, lsr #12
    b234:	sub	r2, r2, r1
    b238:	sub	r3, r3, r1
    b23c:	eor	r2, r2, r1, lsl #16
    b240:	sub	r3, r3, r2
    b244:	sub	r1, r1, r2
    b248:	eor	r3, r3, r2, lsr #5
    b24c:	sub	r1, r1, r3
    b250:	sub	r2, r2, r3
    b254:	eor	r1, r1, r3, lsr #3
    b258:	sub	r2, r2, r1
    b25c:	eor	r2, r2, r1, lsl #10
    b260:	sub	r1, r3, r1
    b264:	sub	r1, r1, r2
    b268:	eor	r1, r1, r2, lsr #15
    b26c:	ldm	r9, {r0, r2}
    b270:	sub	r2, r2, #1
    b274:	and	r1, r1, r2
    b278:	add	r1, r1, r1, lsl #1
    b27c:	ldr	r0, [r0, r1, lsl #2]
    b280:	cmp	r0, #0
    b284:	beq	b2dc <get_hop_pattern@@Base+0x154>
    b288:	ldr	r1, [r9, #20]
    b28c:	add	r4, sp, #8
    b290:	sub	sl, r0, r1
    b294:	ldr	r0, [sl, #36]	; 0x24
    b298:	cmp	r0, #4
    b29c:	bne	b2b8 <get_hop_pattern@@Base+0x130>
    b2a0:	ldr	r0, [sl, #32]
    b2a4:	mov	r1, r4
    b2a8:	mov	r2, #4
    b2ac:	bl	46a0 <bcmp@plt>
    b2b0:	cmp	r0, #0
    b2b4:	beq	b644 <get_hop_pattern@@Base+0x4bc>
    b2b8:	ldr	r0, [sl, #28]
    b2bc:	cmp	r0, #0
    b2c0:	beq	b2dc <get_hop_pattern@@Base+0x154>
    b2c4:	ldr	r1, [r9, #20]
    b2c8:	sub	sl, r0, r1
    b2cc:	ldr	r0, [sl, #36]	; 0x24
    b2d0:	cmp	r0, #4
    b2d4:	beq	b2a0 <get_hop_pattern@@Base+0x118>
    b2d8:	b	b2b8 <get_hop_pattern@@Base+0x130>
    b2dc:	mov	r0, r5
    b2e0:	bl	44e4 <gen_hop_pattern@plt>
    b2e4:	mov	r0, #48	; 0x30
    b2e8:	bl	464c <malloc@plt>
    b2ec:	mov	r4, r0
    b2f0:	ldr	r0, [r5, #372]	; 0x174
    b2f4:	mov	r1, #0
    b2f8:	mov	r2, #4
    b2fc:	str	r1, [r4, #20]
    b300:	stm	r4, {r6, r8}
    b304:	add	r8, r4, #12
    b308:	str	r0, [r4, #8]
    b30c:	str	r4, [r4, #32]
    b310:	str	r2, [r4, #36]	; 0x24
    b314:	ldr	r0, [pc, #864]	; b67c <get_hop_pattern@@Base+0x4f4>
    b318:	ldr	r0, [pc, r0]
    b31c:	cmp	r0, #0
    b320:	beq	b344 <get_hop_pattern@@Base+0x1bc>
    b324:	ldr	r5, [r0, #12]
    b328:	ldr	r1, [r5, #16]
    b32c:	str	r4, [r1, #8]
    b330:	ldr	r2, [r5, #20]
    b334:	sub	r1, r1, r2
    b338:	str	r1, [r4, #16]
    b33c:	str	r8, [r5, #16]
    b340:	b	b3cc <get_hop_pattern@@Base+0x244>
    b344:	ldr	r0, [pc, #820]	; b680 <get_hop_pattern@@Base+0x4f8>
    b348:	str	r1, [r4, #16]
    b34c:	add	r0, pc, r0
    b350:	str	r4, [r0]
    b354:	mov	r0, #44	; 0x2c
    b358:	bl	464c <malloc@plt>
    b35c:	cmp	r0, #0
    b360:	str	r0, [r4, #12]
    b364:	beq	b670 <get_hop_pattern@@Base+0x4e8>
    b368:	vmov.i32	q8, #0	; 0x00000000
    b36c:	mov	r5, r0
    b370:	add	r0, r0, #12
    b374:	mov	r1, #32
    b378:	vst1.32	{d16-d17}, [r0]
    b37c:	mov	r0, #5
    b380:	str	r1, [r5, #4]
    b384:	str	r0, [r5, #8]
    b388:	add	r0, r5, #28
    b38c:	vst1.32	{d16-d17}, [r0]
    b390:	mov	r0, #12
    b394:	str	r8, [r5, #16]
    b398:	str	r0, [r5, #20]
    b39c:	mov	r0, #384	; 0x180
    b3a0:	bl	464c <malloc@plt>
    b3a4:	cmp	r0, #0
    b3a8:	str	r0, [r5]
    b3ac:	beq	b670 <get_hop_pattern@@Base+0x4e8>
    b3b0:	mov	r1, #0
    b3b4:	mov	r2, #384	; 0x180
    b3b8:	bl	4718 <memset@plt>
    b3bc:	movw	r0, #8161	; 0x1fe1
    b3c0:	movt	r0, #40977	; 0xa011
    b3c4:	str	r0, [r5, #40]	; 0x28
    b3c8:	mov	r0, r4
    b3cc:	ldr	r1, [r5, #12]
    b3d0:	add	r1, r1, #1
    b3d4:	str	r1, [r5, #12]
    b3d8:	ldr	r5, [r0, #12]
    b3dc:	str	r5, [r4, #12]
    b3e0:	ldrb	r6, [r4, #3]
    b3e4:	ldrb	r3, [r4, #2]
    b3e8:	ldrb	r2, [r4, #1]
    b3ec:	ldrb	r1, [r4]
    b3f0:	add	r7, r7, r6, lsl #24
    b3f4:	mov	r6, #0
    b3f8:	add	r3, r7, r3, lsl #16
    b3fc:	add	r2, r3, r2, lsl #8
    b400:	movw	r3, #48883	; 0xbef3
    b404:	movt	r3, #65261	; 0xfeed
    b408:	add	r1, r2, r1
    b40c:	movw	r2, #63341	; 0xf76d
    b410:	movt	r2, #7
    b414:	eor	r1, r1, r2
    b418:	movw	r2, #47814	; 0xbac6
    b41c:	movt	r2, #40777	; 0x9f49
    b420:	sub	r3, r3, r1
    b424:	sub	r2, r2, r1
    b428:	eor	r2, r2, r1, lsl #8
    b42c:	sub	r3, r3, r2
    b430:	sub	r1, r1, r2
    b434:	eor	r3, r3, r2, lsr #13
    b438:	sub	r1, r1, r3
    b43c:	sub	r2, r2, r3
    b440:	eor	r1, r1, r3, lsr #12
    b444:	sub	r2, r2, r1
    b448:	sub	r3, r3, r1
    b44c:	eor	r2, r2, r1, lsl #16
    b450:	sub	r3, r3, r2
    b454:	sub	r1, r1, r2
    b458:	eor	r3, r3, r2, lsr #5
    b45c:	sub	r1, r1, r3
    b460:	sub	r2, r2, r3
    b464:	eor	r1, r1, r3, lsr #3
    b468:	sub	r2, r2, r1
    b46c:	eor	r2, r2, r1, lsl #10
    b470:	sub	r1, r3, r1
    b474:	sub	r1, r1, r2
    b478:	eor	r1, r1, r2, lsr #15
    b47c:	str	r1, [r4, #40]	; 0x28
    b480:	ldr	r2, [r0, #12]
    b484:	ldm	r2, {r0, r2}
    b488:	sub	r2, r2, #1
    b48c:	and	r1, r1, r2
    b490:	add	r2, r1, r1, lsl #1
    b494:	mov	r3, r0
    b498:	add	r0, r0, r2, lsl #2
    b49c:	ldr	r7, [r3, r2, lsl #2]!
    b4a0:	mov	r2, #10
    b4a4:	ldr	r1, [r3, #4]
    b4a8:	cmp	r7, #0
    b4ac:	add	r1, r1, #1
    b4b0:	str	r1, [r3, #4]
    b4b4:	str	r6, [r4, #24]
    b4b8:	str	r7, [r4, #28]
    b4bc:	strne	r8, [r7, #12]
    b4c0:	str	r8, [r3]
    b4c4:	ldr	r0, [r0, #8]
    b4c8:	add	r0, r0, r0, lsl #2
    b4cc:	add	r0, r2, r0, lsl #1
    b4d0:	cmp	r1, r0
    b4d4:	bcc	b658 <get_hop_pattern@@Base+0x4d0>
    b4d8:	ldr	r0, [r5, #36]	; 0x24
    b4dc:	cmp	r0, #1
    b4e0:	beq	b658 <get_hop_pattern@@Base+0x4d0>
    b4e4:	ldr	r0, [r5, #4]
    b4e8:	str	r8, [sp]
    b4ec:	add	r0, r0, r0, lsl #1
    b4f0:	lsl	r0, r0, #3
    b4f4:	bl	464c <malloc@plt>
    b4f8:	cmp	r0, #0
    b4fc:	beq	b670 <get_hop_pattern@@Base+0x4e8>
    b500:	mov	r9, r0
    b504:	ldr	r0, [r5, #4]
    b508:	mov	r1, #0
    b50c:	mov	sl, #0
    b510:	add	r0, r0, r0, lsl #1
    b514:	lsl	r2, r0, #3
    b518:	mov	r0, r9
    b51c:	bl	4718 <memset@plt>
    b520:	str	sl, [r5, #28]
    b524:	mvn	r2, #0
    b528:	mov	r6, #1
    b52c:	ldr	r0, [r5]
    b530:	str	r0, [sp, #4]
    b534:	ldmib	r5, {r0, r1, r7}
    b538:	add	r1, r1, #1
    b53c:	lsr	r3, r7, r1
    b540:	add	r2, r2, r0, lsl #1
    b544:	tst	r2, r7
    b548:	addne	r3, r6, r7, lsr r1
    b54c:	cmp	r0, #0
    b550:	str	r3, [r5, #24]
    b554:	beq	b5ec <get_hop_pattern@@Base+0x464>
    b558:	mov	ip, r5
    b55c:	mov	r6, #0
    b560:	mov	lr, #0
    b564:	b	b574 <get_hop_pattern@@Base+0x3ec>
    b568:	add	lr, lr, #1
    b56c:	cmp	lr, r0
    b570:	beq	b5ec <get_hop_pattern@@Base+0x464>
    b574:	ldr	r4, [sp, #4]
    b578:	add	r1, lr, lr, lsl #1
    b57c:	ldr	r5, [r4, r1, lsl #2]
    b580:	cmp	r5, #0
    b584:	bne	b5b0 <get_hop_pattern@@Base+0x428>
    b588:	b	b568 <get_hop_pattern@@Base+0x3e0>
    b58c:	str	sl, [r5, #12]
    b590:	ldr	r4, [r1]
    b594:	cmp	r4, #0
    b598:	str	r4, [r5, #16]
    b59c:	strne	r5, [r4, #12]
    b5a0:	str	r5, [r1]
    b5a4:	cmp	r7, #0
    b5a8:	mov	r5, r7
    b5ac:	beq	b568 <get_hop_pattern@@Base+0x3e0>
    b5b0:	ldr	r1, [r5, #28]
    b5b4:	ldr	r7, [r5, #16]
    b5b8:	and	r1, r1, r2
    b5bc:	add	r1, r1, r1, lsl #1
    b5c0:	add	r1, r9, r1, lsl #2
    b5c4:	ldr	r4, [r1, #4]
    b5c8:	add	r8, r4, #1
    b5cc:	cmp	r8, r3
    b5d0:	str	r8, [r1, #4]
    b5d4:	bls	b58c <get_hop_pattern@@Base+0x404>
    b5d8:	udiv	r4, r8, r3
    b5dc:	add	r6, r6, #1
    b5e0:	str	r6, [ip, #28]
    b5e4:	str	r4, [r1, #8]
    b5e8:	b	b58c <get_hop_pattern@@Base+0x404>
    b5ec:	ldr	r0, [sp, #4]
    b5f0:	bl	4550 <free@plt>
    b5f4:	ldr	r0, [sp]
    b5f8:	ldr	r0, [r0]
    b5fc:	str	r9, [r0]
    b600:	ldr	r7, [r0, #28]
    b604:	ldmib	r0, {r1, r2, r3}
    b608:	lsl	r1, r1, #1
    b60c:	cmp	r7, r3, lsr #1
    b610:	str	r1, [r0, #4]
    b614:	add	r1, r2, #1
    b618:	str	r1, [r0, #8]
    b61c:	bls	b660 <get_hop_pattern@@Base+0x4d8>
    b620:	ldr	r1, [r0, #32]
    b624:	add	r1, r1, #1
    b628:	cmp	r1, #2
    b62c:	str	r1, [r0, #32]
    b630:	bcc	b658 <get_hop_pattern@@Base+0x4d0>
    b634:	mov	r1, #1
    b638:	str	r1, [r0, #36]	; 0x24
    b63c:	sub	sp, fp, #28
    b640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b644:	ldr	r0, [pc, #56]	; b684 <get_hop_pattern@@Base+0x4fc>
    b648:	add	r0, pc, r0
    b64c:	bl	4640 <puts@plt>
    b650:	ldr	r0, [sl, #8]
    b654:	str	r0, [r5, #372]	; 0x174
    b658:	sub	sp, fp, #28
    b65c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b660:	mov	r1, #0
    b664:	str	r1, [r0, #32]
    b668:	sub	sp, fp, #28
    b66c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b670:	mvn	r0, #0
    b674:	bl	4688 <exit@plt>
    b678:	andeq	r1, r2, r8, lsl #31
    b67c:	andeq	r1, r2, r8, lsr lr
    b680:	andeq	r1, r2, r4, lsl #28
    b684:	andeq	sl, r0, pc, ror #10

0000b688 <btbb_piconet_get_afh_map@@Base>:
    b688:	add	r0, r0, #12
    b68c:	bx	lr

0000b690 <btbb_piconet_set_channel_seen@@Base>:
    b690:	push	{fp, lr}
    b694:	mov	fp, sp
    b698:	add	r2, r0, r1, lsr #3
    b69c:	and	lr, r1, #7
    b6a0:	mov	ip, #1
    b6a4:	mov	r1, #0
    b6a8:	ldrb	r3, [r2, #12]!
    b6ac:	tst	r3, ip, lsl lr
    b6b0:	beq	b6bc <btbb_piconet_set_channel_seen@@Base+0x2c>
    b6b4:	mov	r0, r1
    b6b8:	pop	{fp, pc}
    b6bc:	lsl	r1, ip, lr
    b6c0:	orr	r1, r3, r1
    b6c4:	strb	r1, [r2]
    b6c8:	ldrb	r1, [r0, #22]
    b6cc:	add	r1, r1, #1
    b6d0:	strb	r1, [r0, #22]
    b6d4:	mov	r1, #1
    b6d8:	mov	r0, r1
    b6dc:	pop	{fp, pc}

0000b6e0 <btbb_piconet_clear_channel_seen@@Base>:
    b6e0:	push	{fp, lr}
    b6e4:	mov	fp, sp
    b6e8:	mov	lr, r0
    b6ec:	and	ip, r1, #7
    b6f0:	mov	r0, #1
    b6f4:	add	r1, lr, r1, lsr #3
    b6f8:	ldrb	r3, [r1, #12]!
    b6fc:	tst	r3, r0, lsl ip
    b700:	beq	b720 <btbb_piconet_clear_channel_seen@@Base+0x40>
    b704:	lsl	r2, r0, ip
    b708:	bic	r2, r3, r2
    b70c:	strb	r2, [r1]
    b710:	ldrb	r1, [lr, #22]
    b714:	sub	r1, r1, #1
    b718:	strb	r1, [lr, #22]
    b71c:	pop	{fp, pc}
    b720:	mov	r0, #0
    b724:	pop	{fp, pc}

0000b728 <btbb_piconet_get_channel_seen@@Base>:
    b728:	mov	r2, r0
    b72c:	mov	r0, #1
    b730:	cmp	r1, #78	; 0x4e
    b734:	bxhi	lr
    b738:	add	r0, r2, r1, lsr #3
    b73c:	and	r1, r1, #7
    b740:	mov	r2, #1
    b744:	ldrb	r0, [r0, #12]
    b748:	and	r0, r0, r2, lsl r1
    b74c:	cmp	r0, #0
    b750:	movwne	r0, #1
    b754:	bx	lr

0000b758 <precalc@@Base>:
    b758:	push	{r4, r5, r6, sl, fp, lr}
    b75c:	add	fp, sp, #16
    b760:	movw	lr, #29865	; 0x74a9
    b764:	mov	r1, #0
    b768:	mov	r3, #79	; 0x4f
    b76c:	mov	ip, #1
    b770:	mov	r2, #0
    b774:	movt	lr, #53092	; 0xcf64
    b778:	b	b794 <precalc@@Base+0x3c>
    b77c:	mov	r5, r1
    b780:	add	r5, r0, r5, lsl #2
    b784:	str	r4, [r5, #56]	; 0x38
    b788:	add	r1, r1, #1
    b78c:	cmp	r1, #79	; 0x4f
    b790:	beq	b7d8 <precalc@@Base+0x80>
    b794:	lsl	r4, r1, #1
    b798:	uxtb	r4, r4
    b79c:	umull	r5, r6, r4, lr
    b7a0:	lsr	r5, r6, #6
    b7a4:	mls	r4, r5, r3, r4
    b7a8:	ldrb	r5, [r0, #5]
    b7ac:	tst	r5, #8
    b7b0:	beq	b77c <precalc@@Base+0x24>
    b7b4:	add	r5, r0, r4, lsr #3
    b7b8:	and	r6, r4, #7
    b7bc:	ldrb	r5, [r5, #12]
    b7c0:	tst	r5, ip, lsl r6
    b7c4:	beq	b788 <precalc@@Base+0x30>
    b7c8:	add	r6, r2, #1
    b7cc:	mov	r5, r2
    b7d0:	mov	r2, r6
    b7d4:	b	b780 <precalc@@Base+0x28>
    b7d8:	pop	{r4, r5, r6, sl, fp, pc}

0000b7dc <address_precalc@@Base>:
    b7dc:	push	{r4, r5, fp, lr}
    b7e0:	add	fp, sp, #8
    b7e4:	ubfx	r2, r0, #10, #9
    b7e8:	mov	ip, #8
    b7ec:	mov	lr, #16
    b7f0:	and	r4, r0, #1
    b7f4:	str	r2, [r1, #52]	; 0x34
    b7f8:	ubfx	r2, r0, #19, #4
    b7fc:	and	r3, lr, r0, asr #4
    b800:	str	r2, [r1, #36]	; 0x24
    b804:	ubfx	r2, r0, #23, #5
    b808:	str	r2, [r1, #44]	; 0x2c
    b80c:	and	r2, ip, r0, asr #3
    b810:	orr	r2, r2, r4
    b814:	orr	r2, r2, r3
    b818:	mov	r3, #4
    b81c:	and	r4, r3, r0, asr #2
    b820:	and	r3, r3, r0, asr #3
    b824:	orr	r2, r2, r4
    b828:	mov	r4, #2
    b82c:	and	r5, r4, r0, asr #1
    b830:	orr	r2, r2, r5
    b834:	mov	r5, #64	; 0x40
    b838:	str	r2, [r1, #48]	; 0x30
    b83c:	mov	r2, #32
    b840:	and	r5, r5, r0, lsr #7
    b844:	and	r2, r2, r0, lsr #6
    b848:	orr	r2, r5, r2
    b84c:	and	r5, lr, r0, lsr #5
    b850:	orr	r2, r2, r5
    b854:	and	r5, ip, r0, asr #4
    b858:	orr	r2, r2, r5
    b85c:	orr	r2, r2, r3
    b860:	and	r3, r4, r0, asr #2
    b864:	orr	r2, r2, r3
    b868:	mov	r3, #1
    b86c:	and	r0, r3, r0, asr #1
    b870:	orr	r0, r2, r0
    b874:	str	r0, [r1, #40]	; 0x28
    b878:	pop	{r4, r5, fp, pc}

0000b87c <perm5@@Base>:
    b87c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b880:	add	fp, sp, #28
    b884:	sub	sp, sp, #4
    b888:	ubfx	r3, r0, #1, #1
    b88c:	ubfx	r9, r0, #2, #1
    b890:	ands	lr, r1, #16
    b894:	and	r7, r0, #1
    b898:	ubfx	ip, r0, #3, #1
    b89c:	mov	r6, r9
    b8a0:	moveq	r6, r3
    b8a4:	ands	r8, r1, #8
    b8a8:	mov	r4, r7
    b8ac:	moveq	r4, ip
    b8b0:	ands	r5, r1, #4
    b8b4:	mov	r5, r4
    b8b8:	moveq	r5, r6
    b8bc:	movne	r4, r6
    b8c0:	cmp	lr, #0
    b8c4:	moveq	r3, r9
    b8c8:	cmp	r8, #0
    b8cc:	and	r8, r1, #2
    b8d0:	ubfx	r9, r0, #4, #1
    b8d4:	moveq	ip, r7
    b8d8:	ands	r0, r1, #1
    b8dc:	mov	r1, r5
    b8e0:	mov	r7, ip
    b8e4:	moveq	r7, r4
    b8e8:	cmp	r8, #0
    b8ec:	str	r0, [sp]
    b8f0:	mov	r0, r3
    b8f4:	moveq	r0, r9
    b8f8:	ands	sl, r2, #256	; 0x100
    b8fc:	moveq	r1, r0
    b900:	ands	r6, r2, #128	; 0x80
    b904:	mov	lr, r1
    b908:	movne	r1, r7
    b90c:	moveq	lr, r7
    b910:	cmp	sl, #0
    b914:	moveq	r0, r5
    b918:	ldr	r5, [sp]
    b91c:	mov	r6, r1
    b920:	mov	r7, lr
    b924:	cmp	r5, #0
    b928:	movne	ip, r4
    b92c:	cmp	r8, #0
    b930:	movne	r3, r9
    b934:	ands	r4, r2, #64	; 0x40
    b938:	mov	sl, ip
    b93c:	moveq	sl, r3
    b940:	moveq	r3, ip
    b944:	ands	ip, r2, #16
    b948:	moveq	r6, r3
    b94c:	ands	r9, r2, #32
    b950:	mov	r4, sl
    b954:	moveq	r7, r0
    b958:	ands	r8, r2, #4
    b95c:	moveq	r4, r7
    b960:	ands	r5, r2, #1
    b964:	mov	r5, r6
    b968:	moveq	r5, r4
    b96c:	moveq	r4, r6
    b970:	cmp	r9, #0
    b974:	moveq	r0, lr
    b978:	cmp	ip, #0
    b97c:	add	r4, r4, r5, lsl #1
    b980:	moveq	r3, r1
    b984:	ands	r1, r2, #8
    b988:	mov	r6, r3
    b98c:	moveq	r6, r0
    b990:	cmp	r8, #0
    b994:	moveq	r7, sl
    b998:	ands	r2, r2, #2
    b99c:	mov	r2, r6
    b9a0:	moveq	r2, r7
    b9a4:	moveq	r7, r6
    b9a8:	cmp	r1, #0
    b9ac:	add	r2, r4, r2, lsl #2
    b9b0:	movne	r3, r0
    b9b4:	add	r2, r2, r7, lsl #3
    b9b8:	add	r0, r2, r3, lsl #4
    b9bc:	sub	sp, fp, #28
    b9c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b9c4:	nop	{0}
    b9c8:	nop	{0}
    b9cc:	nop	{0}

0000b9d0 <perm_table_init@@Base>:
    b9d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b9d4:	add	fp, sp, #28
    b9d8:	sub	sp, sp, #4
    b9dc:	vpush	{d8-d15}
    b9e0:	sub	sp, sp, #200	; 0xc8
    b9e4:	bfc	sp, #0, #4
    b9e8:	ldr	r5, [pc, #1596]	; c02c <perm_table_init@@Base+0x65c>
    b9ec:	vmov.i32	q8, #256	; 0x00000100
    b9f0:	vmov.i32	q12, #16	; 0x00000010
    b9f4:	vmov.i32	q6, #8	; 0x00000008
    b9f8:	mov	r0, #0
    b9fc:	ldr	r5, [pc, r5]
    ba00:	ubfx	r1, r0, #4, #1
    ba04:	and	lr, r0, #1
    ba08:	mov	r9, #0
    ba0c:	str	r1, [sp, #28]
    ba10:	ubfx	r1, r0, #3, #1
    ba14:	str	r1, [sp, #24]
    ba18:	ubfx	r1, r0, #2, #1
    ba1c:	str	r1, [sp, #20]
    ba20:	ubfx	r1, r0, #1, #1
    ba24:	str	r0, [sp, #12]
    ba28:	str	r5, [sp, #8]
    ba2c:	str	r1, [sp, #16]
    ba30:	ldr	r0, [sp, #24]
    ba34:	ldr	r3, [sp, #20]
    ba38:	ldr	r6, [sp, #16]
    ba3c:	ands	r1, r9, #8
    ba40:	mov	r4, lr
    ba44:	mov	r7, r0
    ba48:	moveq	r7, lr
    ba4c:	moveq	r4, r0
    ba50:	ands	r2, r9, #16
    ba54:	mov	sl, r3
    ba58:	moveq	sl, r6
    ba5c:	ands	ip, r9, #4
    ba60:	mov	r0, r7
    ba64:	mov	r1, sl
    ba68:	moveq	r1, r4
    ba6c:	ands	r8, r9, #1
    ba70:	moveq	r0, r1
    ba74:	moveq	r1, r7
    ba78:	cmp	ip, #0
    ba7c:	movne	sl, r4
    ba80:	cmp	r2, #0
    ba84:	mov	r2, r6
    ba88:	moveq	r2, r3
    ba8c:	ldr	r3, [sp, #28]
    ba90:	ands	r7, r9, #2
    ba94:	mov	r7, #0
    ba98:	mov	r4, r2
    ba9c:	movne	r2, r3
    baa0:	moveq	r4, r3
    baa4:	add	r3, pc, #100	; 0x64
    baa8:	add	r6, pc, #112	; 0x70
    baac:	vdup.32	q10, r2
    bab0:	vld1.64	{d2-d3}, [r6 :128]
    bab4:	add	r6, pc, #116	; 0x74
    bab8:	add	r2, sp, #32
    babc:	vld1.64	{d8-d9}, [r3 :128]
    bac0:	vld1.64	{d18-d19}, [r6 :128]
    bac4:	add	r6, pc, #116	; 0x74
    bac8:	vld1.64	{d6-d7}, [r6 :128]
    bacc:	vst1.64	{d20-d21}, [r2 :128]
    bad0:	vdup.32	q10, r4
    bad4:	add	r2, sp, #112	; 0x70
    bad8:	vst1.64	{d20-d21}, [r2 :128]
    badc:	vdup.32	q10, sl
    bae0:	add	r2, sp, #160	; 0xa0
    bae4:	vst1.64	{d20-d21}, [r2 :128]
    bae8:	vdup.32	q10, r1
    baec:	add	r1, sp, #144	; 0x90
    baf0:	vst1.64	{d20-d21}, [r1 :128]
    baf4:	vdup.32	q10, r0
    baf8:	add	r0, sp, #128	; 0x80
    bafc:	vst1.64	{d20-d21}, [r0 :128]
    bb00:	b	bb50 <perm_table_init@@Base+0x180>
    bb04:	nop	{0}
    bb08:	nop	{0}
    bb0c:	nop	{0}
    bb10:	andeq	r0, r0, r0
    bb14:	andeq	r0, r0, r1
    bb18:	andeq	r0, r0, r2
    bb1c:	andeq	r0, r0, r3
    bb20:	andeq	r0, r0, ip
    bb24:	andeq	r0, r0, sp
    bb28:	andeq	r0, r0, lr
    bb2c:	andeq	r0, r0, pc
    bb30:	andeq	r0, r0, r8
    bb34:	andeq	r0, r0, r9
    bb38:	andeq	r0, r0, sl
    bb3c:	andeq	r0, r0, fp
    bb40:	andeq	r0, r0, r4
    bb44:	andeq	r0, r0, r5
    bb48:	andeq	r0, r0, r6
    bb4c:	andeq	r0, r0, r7
    bb50:	vtst.32	q13, q9, q8
    bb54:	add	r0, sp, #176	; 0xb0
    bb58:	vmov.i32	q8, #128	; 0x00000080
    bb5c:	vst1.64	{d18-d19}, [r0 :128]
    bb60:	add	r0, sp, #64	; 0x40
    bb64:	vst1.64	{d2-d3}, [r0 :128]
    bb68:	add	r0, sp, #112	; 0x70
    bb6c:	vtst.32	q14, q9, q8
    bb70:	vld1.64	{d18-d19}, [r0 :128]
    bb74:	add	r0, sp, #160	; 0xa0
    bb78:	vorr	q10, q13, q13
    bb7c:	vld1.64	{d16-d17}, [r0 :128]
    bb80:	add	r0, sp, #128	; 0x80
    bb84:	vld1.64	{d22-d23}, [r0 :128]
    bb88:	add	r0, sp, #176	; 0xb0
    bb8c:	vorr	q15, q14, q14
    bb90:	vbsl	q10, q8, q9
    bb94:	vbsl	q13, q9, q8
    bb98:	vmov.i32	q8, #64	; 0x00000040
    bb9c:	vbsl	q15, q10, q11
    bba0:	vbsl	q14, q11, q10
    bba4:	vld1.64	{d20-d21}, [r0 :128]
    bba8:	add	r0, sp, #176	; 0xb0
    bbac:	vtst.32	q11, q10, q8
    bbb0:	vld1.64	{d16-d17}, [r0 :128]
    bbb4:	add	r0, sp, #32
    bbb8:	vld1.64	{d2-d3}, [r0 :128]
    bbbc:	add	r0, sp, #144	; 0x90
    bbc0:	vld1.64	{d20-d21}, [r0 :128]
    bbc4:	add	r0, sp, #176	; 0xb0
    bbc8:	vtst.32	q0, q8, q12
    bbcc:	vorr	q12, q11, q11
    bbd0:	vmov.i32	q8, #32	; 0x00000020
    bbd4:	vorr	q2, q10, q10
    bbd8:	vbsl	q12, q1, q10
    bbdc:	vld1.64	{d20-d21}, [r0 :128]
    bbe0:	add	r0, sp, #176	; 0xb0
    bbe4:	vbsl	q11, q2, q1
    bbe8:	vorr	q2, q1, q1
    bbec:	vtst.32	q5, q10, q8
    bbf0:	vld1.64	{d16-d17}, [r0 :128]
    bbf4:	add	r0, sp, #64	; 0x40
    bbf8:	vld1.64	{d2-d3}, [r0 :128]
    bbfc:	add	r0, sp, #176	; 0xb0
    bc00:	vorr	q7, q5, q5
    bc04:	vbsl	q5, q15, q13
    bc08:	vtst.32	q8, q8, q6
    bc0c:	vorr	q6, q0, q0
    bc10:	vbsl	q0, q14, q12
    bc14:	vbsl	q7, q13, q15
    bc18:	vld1.64	{d26-d27}, [r0 :128]
    bc1c:	add	r0, sp, #176	; 0xb0
    bc20:	vbsl	q6, q12, q14
    bc24:	vmov.i32	q12, #4	; 0x00000004
    bc28:	vld1.64	{d28-d29}, [r0 :128]
    bc2c:	vorr	q10, q8, q8
    bc30:	add	r0, sp, #176	; 0xb0
    bc34:	vtst.32	q12, q13, q12
    bc38:	vmov.i32	q13, #1	; 0x00000001
    bc3c:	vbsl	q10, q7, q6
    bc40:	vbsl	q8, q6, q7
    bc44:	vtst.32	q13, q14, q13
    bc48:	vorr	q14, q12, q12
    bc4c:	vshl.s32	q10, q10, #4
    bc50:	vbsl	q12, q5, q11
    bc54:	vbsl	q14, q11, q5
    bc58:	vorr	q15, q13, q13
    bc5c:	vmov.i32	q11, #2	; 0x00000002
    bc60:	vbsl	q13, q0, q14
    bc64:	vbsl	q15, q14, q0
    bc68:	vadd.i32	q10, q10, q15
    bc6c:	vshl.s32	q13, q13, #1
    bc70:	vadd.i32	q10, q10, q13
    bc74:	vld1.64	{d26-d27}, [r0 :128]
    bc78:	add	r0, sp, #96	; 0x60
    bc7c:	vtst.32	q11, q13, q11
    bc80:	vorr	q13, q11, q11
    bc84:	vbsl	q11, q12, q8
    bc88:	vbsl	q13, q8, q12
    bc8c:	vshl.s32	q8, q11, #3
    bc90:	vshl.s32	q13, q13, #2
    bc94:	vadd.i32	q10, q10, q13
    bc98:	vadd.i32	q8, q10, q8
    bc9c:	vmov.i32	q10, #128	; 0x00000080
    bca0:	vst1.64	{d16-d17}, [r0 :128]
    bca4:	vmov.i32	q8, #256	; 0x00000100
    bca8:	add	r0, sp, #160	; 0xa0
    bcac:	vtst.32	q11, q3, q10
    bcb0:	vld1.64	{d26-d27}, [r0 :128]
    bcb4:	add	r0, sp, #128	; 0x80
    bcb8:	vld1.64	{d20-d21}, [r0 :128]
    bcbc:	add	r0, sp, #144	; 0x90
    bcc0:	vtst.32	q8, q3, q8
    bcc4:	vorr	q14, q11, q11
    bcc8:	vorr	q12, q8, q8
    bccc:	vbsl	q8, q9, q13
    bcd0:	vbsl	q12, q13, q9
    bcd4:	vmov.i32	q9, #64	; 0x00000040
    bcd8:	vtst.32	q13, q3, q9
    bcdc:	vmov.i32	q9, #16	; 0x00000010
    bce0:	vbsl	q14, q12, q10
    bce4:	vbsl	q11, q10, q12
    bce8:	vld1.64	{d20-d21}, [r0 :128]
    bcec:	add	r0, sp, #80	; 0x50
    bcf0:	vtst.32	q15, q3, q9
    bcf4:	vmov.i32	q9, #32	; 0x00000020
    bcf8:	vorr	q0, q13, q13
    bcfc:	vbsl	q13, q10, q2
    bd00:	vtst.32	q5, q3, q9
    bd04:	vmov.i32	q9, #8	; 0x00000008
    bd08:	vbsl	q0, q2, q10
    bd0c:	vorr	q6, q15, q15
    bd10:	vmov.i32	q10, #1	; 0x00000001
    bd14:	vorr	q7, q5, q5
    bd18:	vbsl	q5, q14, q8
    bd1c:	vtst.32	q9, q3, q9
    bd20:	vbsl	q6, q0, q11
    bd24:	vbsl	q15, q11, q0
    bd28:	vtst.32	q11, q3, q10
    bd2c:	vmov.i32	q10, #2	; 0x00000002
    bd30:	vbsl	q7, q8, q14
    bd34:	vmov.i32	q8, #4	; 0x00000004
    bd38:	vorr	q12, q9, q9
    bd3c:	vorr	q0, q11, q11
    bd40:	vtst.32	q8, q3, q8
    bd44:	vbsl	q12, q7, q6
    bd48:	vbsl	q9, q6, q7
    bd4c:	vorr	q14, q8, q8
    bd50:	vshl.s32	q12, q12, #4
    bd54:	vbsl	q8, q5, q13
    bd58:	vbsl	q14, q13, q5
    bd5c:	vbsl	q11, q15, q14
    bd60:	vbsl	q0, q14, q15
    bd64:	vadd.i32	q12, q12, q0
    bd68:	vshl.s32	q11, q11, #1
    bd6c:	vadd.i32	q11, q12, q11
    bd70:	vtst.32	q12, q3, q10
    bd74:	vorr	q13, q12, q12
    bd78:	vbsl	q12, q8, q9
    bd7c:	vbsl	q13, q9, q8
    bd80:	vshl.s32	q8, q12, #3
    bd84:	vmov.i32	q9, #128	; 0x00000080
    bd88:	vshl.s32	q13, q13, #2
    bd8c:	vtst.32	q9, q4, q9
    bd90:	vadd.i32	q11, q11, q13
    bd94:	vorr	q15, q9, q9
    bd98:	vadd.i32	q8, q11, q8
    bd9c:	vst1.64	{d16-d17}, [r0 :128]
    bda0:	vmov.i32	q8, #256	; 0x00000100
    bda4:	add	r0, sp, #112	; 0x70
    bda8:	vld1.64	{d20-d21}, [r0 :128]
    bdac:	add	r0, sp, #160	; 0xa0
    bdb0:	vld1.64	{d26-d27}, [r0 :128]
    bdb4:	add	r0, sp, #128	; 0x80
    bdb8:	vtst.32	q8, q4, q8
    bdbc:	vld1.64	{d24-d25}, [r0 :128]
    bdc0:	add	r0, sp, #144	; 0x90
    bdc4:	vorr	q11, q8, q8
    bdc8:	vbsl	q8, q10, q13
    bdcc:	vbsl	q11, q13, q10
    bdd0:	vmov.i32	q10, #64	; 0x00000040
    bdd4:	vtst.32	q14, q4, q10
    bdd8:	vmov.i32	q10, #16	; 0x00000010
    bddc:	vbsl	q15, q11, q12
    bde0:	vbsl	q9, q12, q11
    bde4:	vorr	q12, q2, q2
    bde8:	vld1.64	{d4-d5}, [r0 :128]
    bdec:	add	r0, sp, #48	; 0x30
    bdf0:	vtst.32	q11, q4, q10
    bdf4:	vmov.i32	q10, #32	; 0x00000020
    bdf8:	vorr	q0, q14, q14
    bdfc:	vbsl	q14, q2, q12
    be00:	vtst.32	q5, q4, q10
    be04:	vmov.i32	q10, #8	; 0x00000008
    be08:	vbsl	q0, q12, q2
    be0c:	vorr	q6, q11, q11
    be10:	vorr	q2, q12, q12
    be14:	vorr	q7, q5, q5
    be18:	vbsl	q5, q15, q8
    be1c:	vtst.32	q10, q4, q10
    be20:	vbsl	q6, q0, q9
    be24:	vbsl	q11, q9, q0
    be28:	vmov.i32	q9, #1	; 0x00000001
    be2c:	vbsl	q7, q8, q15
    be30:	vmov.i32	q8, #4	; 0x00000004
    be34:	vorr	q13, q10, q10
    be38:	vtst.32	q9, q4, q9
    be3c:	vtst.32	q8, q4, q8
    be40:	vbsl	q13, q7, q6
    be44:	vorr	q0, q9, q9
    be48:	vbsl	q10, q6, q7
    be4c:	vorr	q15, q8, q8
    be50:	vshl.s32	q13, q13, #4
    be54:	vbsl	q8, q5, q14
    be58:	vbsl	q15, q14, q5
    be5c:	vbsl	q9, q11, q15
    be60:	vbsl	q0, q15, q11
    be64:	vmov.i32	q11, #2	; 0x00000002
    be68:	vadd.i32	q13, q13, q0
    be6c:	vshl.s32	q9, q9, #1
    be70:	vtst.32	q11, q4, q11
    be74:	vadd.i32	q9, q13, q9
    be78:	vorr	q13, q11, q11
    be7c:	vbsl	q11, q8, q10
    be80:	vbsl	q13, q10, q8
    be84:	vshl.s32	q8, q11, #3
    be88:	vshl.s32	q13, q13, #2
    be8c:	vadd.i32	q9, q9, q13
    be90:	vadd.i32	q8, q9, q8
    be94:	vmov.i32	q9, #256	; 0x00000100
    be98:	vst1.64	{d16-d17}, [r0 :128]
    be9c:	add	r0, sp, #112	; 0x70
    bea0:	vmov.i32	q8, #128	; 0x00000080
    bea4:	vtst.32	q9, q1, q9
    bea8:	vld1.64	{d26-d27}, [r0 :128]
    beac:	add	r0, sp, #160	; 0xa0
    beb0:	vld1.64	{d28-d29}, [r0 :128]
    beb4:	add	r0, sp, #128	; 0x80
    beb8:	vorr	q10, q9, q9
    bebc:	vtst.32	q8, q1, q8
    bec0:	vld1.64	{d24-d25}, [r0 :128]
    bec4:	add	r0, sp, #144	; 0x90
    bec8:	vorr	q11, q8, q8
    becc:	vbsl	q10, q14, q13
    bed0:	vbsl	q9, q13, q14
    bed4:	vmov.i32	q14, #64	; 0x00000040
    bed8:	vld1.64	{d26-d27}, [r0 :128]
    bedc:	add	r0, sp, #48	; 0x30
    bee0:	vbsl	q11, q10, q12
    bee4:	vbsl	q8, q12, q10
    bee8:	vmov.i32	q10, #8	; 0x00000008
    beec:	vtst.32	q15, q1, q14
    bef0:	vmov.i32	q14, #16	; 0x00000010
    bef4:	vtst.32	q12, q1, q10
    bef8:	vmov.i32	q10, #32	; 0x00000020
    befc:	vorr	q5, q15, q15
    bf00:	vtst.32	q0, q1, q14
    bf04:	vbsl	q15, q13, q2
    bf08:	vtst.32	q10, q1, q10
    bf0c:	vbsl	q5, q2, q13
    bf10:	vorr	q6, q0, q0
    bf14:	vorr	q14, q12, q12
    bf18:	vorr	q7, q10, q10
    bf1c:	vbsl	q10, q11, q9
    bf20:	vbsl	q6, q5, q8
    bf24:	vbsl	q0, q8, q5
    bf28:	vmov.i32	q8, #1	; 0x00000001
    bf2c:	vbsl	q7, q9, q11
    bf30:	vmov.i32	q9, #4	; 0x00000004
    bf34:	vtst.32	q8, q1, q8
    bf38:	vtst.32	q9, q1, q9
    bf3c:	vorr	q5, q8, q8
    bf40:	vbsl	q14, q7, q6
    bf44:	vbsl	q12, q6, q7
    bf48:	vmov.i32	q6, #8	; 0x00000008
    bf4c:	vorr	q11, q9, q9
    bf50:	vbsl	q9, q10, q15
    bf54:	vshl.s32	q14, q14, #4
    bf58:	vbsl	q11, q15, q10
    bf5c:	vbsl	q8, q0, q11
    bf60:	vbsl	q5, q11, q0
    bf64:	vmov.i32	q11, #2	; 0x00000002
    bf68:	vtst.32	q10, q1, q11
    bf6c:	vadd.i32	q14, q14, q5
    bf70:	vshl.s32	q8, q8, #1
    bf74:	vorr	q11, q10, q10
    bf78:	vadd.i32	q8, q14, q8
    bf7c:	vbsl	q10, q9, q12
    bf80:	vbsl	q11, q12, q9
    bf84:	vshl.s32	q9, q10, #3
    bf88:	vmov.i32	q12, #16	; 0x00000010
    bf8c:	vshl.s32	q11, q11, #2
    bf90:	vadd.i32	q4, q4, q12
    bf94:	vadd.i32	q3, q3, q12
    bf98:	vadd.i32	q1, q1, q12
    bf9c:	vadd.i32	q8, q8, q11
    bfa0:	vadd.i32	q8, q8, q9
    bfa4:	vld1.64	{d18-d19}, [r0 :128]
    bfa8:	add	r0, sp, #80	; 0x50
    bfac:	vld1.64	{d20-d21}, [r0 :128]
    bfb0:	add	r0, sp, #96	; 0x60
    bfb4:	vmovn.i32	d18, q9
    bfb8:	vmovn.i32	d19, q10
    bfbc:	vld1.64	{d20-d21}, [r0 :128]
    bfc0:	add	r0, sp, #176	; 0xb0
    bfc4:	vmovn.i32	d20, q10
    bfc8:	vmovn.i32	d21, q8
    bfcc:	vmovn.i16	d16, q9
    bfd0:	vld1.64	{d18-d19}, [r0 :128]
    bfd4:	add	r0, r5, r7
    bfd8:	add	r7, r7, #16
    bfdc:	cmp	r7, #512	; 0x200
    bfe0:	vmovn.i16	d17, q10
    bfe4:	vadd.i32	q9, q9, q12
    bfe8:	vst1.8	{d16-d17}, [r0]
    bfec:	vmov.i32	q8, #256	; 0x00000100
    bff0:	bne	bb50 <perm_table_init@@Base+0x180>
    bff4:	add	r9, r9, #1
    bff8:	add	r5, r5, #512	; 0x200
    bffc:	cmp	r9, #32
    c000:	bne	ba30 <perm_table_init@@Base+0x60>
    c004:	ldr	r0, [sp, #12]
    c008:	ldr	r5, [sp, #8]
    c00c:	add	r0, r0, #1
    c010:	add	r5, r5, #16384	; 0x4000
    c014:	cmp	r0, #32
    c018:	bne	ba00 <perm_table_init@@Base+0x30>
    c01c:	sub	sp, fp, #96	; 0x60
    c020:	vpop	{d8-d15}
    c024:	add	sp, sp, #4
    c028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c02c:	andeq	r1, r2, r8, lsr #14

0000c030 <fast_perm@@Base>:
    c030:	push	{r4, r5, r6, r7, fp, lr}
    c034:	add	fp, sp, #16
    c038:	ldr	r7, [pc, #60]	; c07c <fast_perm@@Base+0x4c>
    c03c:	mov	r6, r0
    c040:	mov	r4, r2
    c044:	mov	r5, r1
    c048:	ldr	r7, [pc, r7]
    c04c:	ldr	r0, [r7]
    c050:	cmp	r0, #0
    c054:	bne	c064 <fast_perm@@Base+0x34>
    c058:	bl	45e0 <perm_table_init@plt>
    c05c:	mov	r0, #1
    c060:	str	r0, [r7]
    c064:	ldr	r0, [pc, #20]	; c080 <fast_perm@@Base+0x50>
    c068:	ldr	r0, [pc, r0]
    c06c:	add	r0, r0, r6, lsl #14
    c070:	add	r0, r0, r5, lsl #9
    c074:	ldrb	r0, [r0, r4]
    c078:	pop	{r4, r5, r6, r7, fp, pc}
    c07c:	andeq	r1, r2, r0, ror #1
    c080:	strheq	r1, [r2], -ip

0000c084 <gen_hop_pattern@@Base>:
    c084:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c088:	add	fp, sp, #28
    c08c:	sub	sp, sp, #36	; 0x24
    c090:	mov	r4, r0
    c094:	ldr	r0, [pc, #892]	; c418 <gen_hop_pattern@@Base+0x394>
    c098:	add	r0, pc, r0
    c09c:	bl	4640 <puts@plt>
    c0a0:	mov	r0, #134217728	; 0x8000000
    c0a4:	bl	464c <malloc@plt>
    c0a8:	str	r0, [r4, #372]	; 0x174
    c0ac:	mov	r0, #0
    c0b0:	mov	r1, #79	; 0x4f
    c0b4:	mov	ip, #1
    c0b8:	mov	r2, #0
    c0bc:	b	c0d8 <gen_hop_pattern@@Base+0x54>
    c0c0:	mov	r3, r0
    c0c4:	add	r3, r4, r3, lsl #2
    c0c8:	str	r7, [r3, #56]	; 0x38
    c0cc:	add	r0, r0, #1
    c0d0:	cmp	r0, #79	; 0x4f
    c0d4:	beq	c124 <gen_hop_pattern@@Base+0xa0>
    c0d8:	lsl	r3, r0, #1
    c0dc:	movw	r7, #29865	; 0x74a9
    c0e0:	uxtb	r3, r3
    c0e4:	movt	r7, #53092	; 0xcf64
    c0e8:	umull	r7, r5, r3, r7
    c0ec:	lsr	r7, r5, #6
    c0f0:	mls	r7, r7, r1, r3
    c0f4:	ldrb	r3, [r4, #5]
    c0f8:	tst	r3, #8
    c0fc:	beq	c0c0 <gen_hop_pattern@@Base+0x3c>
    c100:	add	r3, r4, r7, lsr #3
    c104:	and	r5, r7, #7
    c108:	ldrb	r3, [r3, #12]
    c10c:	tst	r3, ip, lsl r5
    c110:	beq	c0cc <gen_hop_pattern@@Base+0x48>
    c114:	add	r6, r2, #1
    c118:	mov	r3, r2
    c11c:	mov	r2, r6
    c120:	b	c0c4 <gen_hop_pattern@@Base+0x40>
    c124:	ldr	r0, [r4, #24]
    c128:	mov	r7, #8
    c12c:	mov	ip, #16
    c130:	ubfx	r1, r0, #10, #9
    c134:	and	r5, r0, #1
    c138:	str	r1, [r4, #52]	; 0x34
    c13c:	ubfx	r1, r0, #19, #4
    c140:	str	r1, [r4, #36]	; 0x24
    c144:	ldrb	r1, [r4, #28]
    c148:	orr	r1, r0, r1, lsl #24
    c14c:	ubfx	r2, r1, #23, #5
    c150:	bic	r1, r1, #-268435456	; 0xf0000000
    c154:	and	r6, r7, r1, lsr #3
    c158:	and	r3, ip, r1, lsr #4
    c15c:	str	r2, [r4, #44]	; 0x2c
    c160:	orr	r6, r6, r5
    c164:	orr	r3, r6, r3
    c168:	mov	r6, #4
    c16c:	and	r5, r6, r1, lsr #2
    c170:	orr	r3, r3, r5
    c174:	mov	r5, #2
    c178:	and	r2, r5, r1, lsr #1
    c17c:	orr	r2, r3, r2
    c180:	mov	r3, #64	; 0x40
    c184:	str	r2, [r4, #48]	; 0x30
    c188:	mov	r2, #32
    c18c:	and	r3, r3, r0, lsr #7
    c190:	and	r2, r2, r0, lsr #6
    c194:	and	r0, ip, r0, lsr #5
    c198:	orr	r2, r3, r2
    c19c:	orr	r0, r2, r0
    c1a0:	and	r2, r7, r1, lsr #4
    c1a4:	mov	r7, #0
    c1a8:	orr	r0, r0, r2
    c1ac:	and	r2, r6, r1, lsr #3
    c1b0:	mov	r6, #0
    c1b4:	orr	r0, r0, r2
    c1b8:	and	r2, r5, r1, lsr #2
    c1bc:	ubfx	r1, r1, #1, #1
    c1c0:	orr	r0, r0, r2
    c1c4:	orr	r0, r0, r1
    c1c8:	mov	r1, #0
    c1cc:	str	r0, [r4, #40]	; 0x28
    c1d0:	mov	r0, #0
    c1d4:	ldr	r3, [pc, #576]	; c41c <gen_hop_pattern@@Base+0x398>
    c1d8:	ldr	r3, [pc, r3]
    c1dc:	str	r1, [sp, #28]
    c1e0:	mov	r1, #0
    c1e4:	str	r1, [sp, #32]
    c1e8:	b	c1fc <gen_hop_pattern@@Base+0x178>
    c1ec:	ldr	r0, [sp, #4]
    c1f0:	add	r0, r0, #1
    c1f4:	cmp	r0, #4
    c1f8:	beq	c404 <gen_hop_pattern@@Base+0x380>
    c1fc:	mov	r1, #0
    c200:	str	r0, [sp, #4]
    c204:	b	c218 <gen_hop_pattern@@Base+0x194>
    c208:	ldr	r1, [sp, #8]
    c20c:	add	r1, r1, #1
    c210:	cmp	r1, #32
    c214:	beq	c1ec <gen_hop_pattern@@Base+0x168>
    c218:	ldr	r0, [r4, #44]	; 0x2c
    c21c:	str	r1, [sp, #8]
    c220:	eor	r0, r0, r1
    c224:	mov	r1, #0
    c228:	str	r0, [sp, #24]
    c22c:	b	c240 <gen_hop_pattern@@Base+0x1bc>
    c230:	ldr	r1, [sp, #12]
    c234:	add	r1, r1, #1
    c238:	cmp	r1, #32
    c23c:	beq	c208 <gen_hop_pattern@@Base+0x184>
    c240:	ldr	r0, [r4, #48]	; 0x30
    c244:	str	r1, [sp, #12]
    c248:	eor	r5, r0, r1
    c24c:	mov	r1, #0
    c250:	eor	r9, r5, #31
    c254:	b	c2a0 <gen_hop_pattern@@Base+0x21c>
    c258:	ldr	r7, [sp, #20]
    c25c:	movw	r0, #29865	; 0x74a9
    c260:	movt	r0, #53092	; 0xcf64
    c264:	add	r7, r7, #16
    c268:	umull	r0, r1, r7, r0
    c26c:	lsr	r0, r1, #6
    c270:	mov	r1, #79	; 0x4f
    c274:	mls	r0, r0, r1, r7
    c278:	ldrb	r1, [r4, #22]
    c27c:	str	r0, [sp, #32]
    c280:	uxtb	r0, r0
    c284:	udiv	r2, r0, r1
    c288:	mls	r0, r2, r1, r0
    c28c:	str	r0, [sp, #28]
    c290:	ldr	r1, [sp, #16]
    c294:	add	r1, r1, #1
    c298:	cmp	r1, #512	; 0x200
    c29c:	beq	c230 <gen_hop_pattern@@Base+0x1ac>
    c2a0:	ldr	r0, [r4, #52]	; 0x34
    c2a4:	mov	sl, #0
    c2a8:	str	r7, [sp, #20]
    c2ac:	str	r1, [sp, #16]
    c2b0:	eor	r8, r0, r1
    c2b4:	b	c2fc <gen_hop_pattern@@Base+0x278>
    c2b8:	ldr	r1, [sp, #32]
    c2bc:	add	r0, r0, r1
    c2c0:	movw	r1, #29865	; 0x74a9
    c2c4:	movt	r1, #53092	; 0xcf64
    c2c8:	umull	r1, r2, r0, r1
    c2cc:	lsr	r1, r2, #6
    c2d0:	mov	r2, #79	; 0x4f
    c2d4:	mls	r0, r1, r2, r0
    c2d8:	add	r0, r4, r0, lsl #2
    c2dc:	ldr	r1, [r4, #372]	; 0x174
    c2e0:	add	sl, sl, #1
    c2e4:	cmp	sl, #32
    c2e8:	ldr	r0, [r0, #56]	; 0x38
    c2ec:	add	r1, r1, r6
    c2f0:	add	r6, r6, #2
    c2f4:	strb	r0, [r1, #1]
    c2f8:	beq	c258 <gen_hop_pattern@@Base+0x1d4>
    c2fc:	ldr	r0, [sp, #24]
    c300:	add	r0, r0, sl
    c304:	asr	r1, r0, #31
    c308:	add	r1, r0, r1, lsr #27
    c30c:	bic	r1, r1, #31
    c310:	sub	r0, r0, r1
    c314:	ldr	r1, [r4, #36]	; 0x24
    c318:	eor	r7, r0, r1
    c31c:	ldr	r0, [r3]
    c320:	cmp	r0, #0
    c324:	bne	c33c <gen_hop_pattern@@Base+0x2b8>
    c328:	bl	45e0 <perm_table_init@plt>
    c32c:	ldr	r3, [pc, #236]	; c420 <gen_hop_pattern@@Base+0x39c>
    c330:	mov	r0, #1
    c334:	ldr	r3, [pc, r3]
    c338:	str	r0, [r3]
    c33c:	ldr	r0, [pc, #224]	; c424 <gen_hop_pattern@@Base+0x3a0>
    c340:	ldr	r0, [pc, r0]
    c344:	ldr	r1, [r4, #40]	; 0x28
    c348:	add	r7, r0, r7, lsl #14
    c34c:	add	r0, r7, r5, lsl #9
    c350:	ldrb	r0, [r0, r8]
    c354:	add	r0, r1, r0
    c358:	ldrb	r1, [r4, #5]
    c35c:	tst	r1, #8
    c360:	bne	c388 <gen_hop_pattern@@Base+0x304>
    c364:	ldr	r1, [sp, #32]
    c368:	add	r0, r0, r1
    c36c:	movw	r1, #29865	; 0x74a9
    c370:	movt	r1, #53092	; 0xcf64
    c374:	umull	r1, r2, r0, r1
    c378:	lsr	r1, r2, #6
    c37c:	mov	r2, #79	; 0x4f
    c380:	mls	r0, r1, r2, r0
    c384:	b	c39c <gen_hop_pattern@@Base+0x318>
    c388:	ldr	r1, [sp, #28]
    c38c:	add	r0, r0, r1
    c390:	ldrb	r1, [r4, #22]
    c394:	udiv	r2, r0, r1
    c398:	mls	r0, r2, r1, r0
    c39c:	add	r0, r4, r0, lsl #2
    c3a0:	ldr	r1, [r4, #372]	; 0x174
    c3a4:	ldr	r0, [r0, #56]	; 0x38
    c3a8:	strb	r0, [r1, r6]
    c3ac:	ldr	r0, [r3]
    c3b0:	cmp	r0, #0
    c3b4:	bne	c3cc <gen_hop_pattern@@Base+0x348>
    c3b8:	bl	45e0 <perm_table_init@plt>
    c3bc:	ldr	r3, [pc, #100]	; c428 <gen_hop_pattern@@Base+0x3a4>
    c3c0:	mov	r0, #1
    c3c4:	ldr	r3, [pc, r3]
    c3c8:	str	r0, [r3]
    c3cc:	add	r0, r7, r9, lsl #9
    c3d0:	ldr	r1, [r4, #40]	; 0x28
    c3d4:	ldrb	r0, [r0, r8]
    c3d8:	add	r0, r0, r1
    c3dc:	ldrb	r1, [r4, #5]
    c3e0:	add	r0, r0, #32
    c3e4:	tst	r1, #8
    c3e8:	beq	c2b8 <gen_hop_pattern@@Base+0x234>
    c3ec:	ldr	r1, [sp, #28]
    c3f0:	add	r0, r0, r1
    c3f4:	ldrb	r1, [r4, #22]
    c3f8:	udiv	r2, r0, r1
    c3fc:	mls	r0, r2, r1, r0
    c400:	b	c2d8 <gen_hop_pattern@@Base+0x254>
    c404:	ldr	r0, [pc, #32]	; c42c <gen_hop_pattern@@Base+0x3a8>
    c408:	add	r0, pc, r0
    c40c:	sub	sp, fp, #28
    c410:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c414:	b	4640 <puts@plt>
    c418:	andeq	r9, r0, r1, asr #22
    c41c:	andeq	r0, r2, r0, asr pc
    c420:	strdeq	r0, [r2], -r4
    c424:	andeq	r0, r2, r4, ror #27
    c428:	andeq	r0, r2, r4, ror #26
    c42c:	strdeq	r9, [r0], -r9	; <UNPREDICTABLE>

0000c430 <single_hop@@Base>:
    c430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c434:	add	fp, sp, #28
    c438:	sub	sp, sp, #4
    c43c:	mov	r4, r1
    c440:	mov	r5, r0
    c444:	ldr	r0, [r1, #36]	; 0x24
    c448:	ldr	r1, [r1, #44]	; 0x2c
    c44c:	movw	ip, #65520	; 0xfff0
    c450:	ldr	r2, [r4, #48]	; 0x30
    c454:	ldr	r3, [r4, #52]	; 0x34
    c458:	ubfx	r6, r5, #1, #1
    c45c:	ldr	r8, [pc, #168]	; c50c <single_hop@@Base+0xdc>
    c460:	movt	ip, #511	; 0x1ff
    c464:	rsb	r7, r6, r6, lsl #5
    c468:	eor	r1, r1, r5, lsr #21
    c46c:	ldr	r8, [pc, r8]
    c470:	eor	r2, r2, r5, lsr #16
    c474:	add	r1, r1, r5, lsr #2
    c478:	and	r2, r2, #31
    c47c:	and	r1, r1, #31
    c480:	eor	r9, r2, r7
    c484:	eor	r7, r3, r5, lsr #7
    c488:	eor	sl, r1, r0
    c48c:	ldr	r0, [r8]
    c490:	bfc	r7, #9, #23
    c494:	cmp	r0, #0
    c498:	bne	c4b0 <single_hop@@Base+0x80>
    c49c:	bl	45e0 <perm_table_init@plt>
    c4a0:	movw	ip, #65520	; 0xfff0
    c4a4:	mov	r0, #1
    c4a8:	movt	ip, #511	; 0x1ff
    c4ac:	str	r0, [r8]
    c4b0:	ldr	r2, [pc, #88]	; c510 <single_hop@@Base+0xe0>
    c4b4:	and	r1, ip, r5, lsr #3
    c4b8:	lsl	r0, r6, #5
    c4bc:	ldr	r2, [pc, r2]
    c4c0:	add	r2, r2, sl, lsl #14
    c4c4:	add	r2, r2, r9, lsl #9
    c4c8:	ldrb	r3, [r2, r7]
    c4cc:	ldrb	r7, [r4, #5]
    c4d0:	mov	r2, #79	; 0x4f
    c4d4:	tst	r7, #8
    c4d8:	add	r0, r0, r3
    c4dc:	ldrbne	r2, [r4, #22]
    c4e0:	udiv	r7, r1, r2
    c4e4:	mls	r1, r7, r2, r1
    c4e8:	add	r0, r0, r1
    c4ec:	ldr	r1, [r4, #40]	; 0x28
    c4f0:	add	r0, r0, r1
    c4f4:	udiv	r1, r0, r2
    c4f8:	mls	r0, r1, r2, r0
    c4fc:	add	r0, r4, r0, lsl #2
    c500:	ldrb	r0, [r0, #56]	; 0x38
    c504:	sub	sp, fp, #28
    c508:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c50c:			; <UNDEFINED> instruction: 0x00020cbc
    c510:	andeq	r0, r2, r8, ror #24

0000c514 <hop@@Base>:
    c514:	ldr	r1, [r1, #372]	; 0x174
    c518:	ldrb	r0, [r1, r0]
    c51c:	bx	lr

0000c520 <btbb_init_hop_reversal@@Base>:
    c520:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    c524:	add	fp, sp, #24
    c528:	mov	r8, r0
    c52c:	mov	r0, r1
    c530:	mov	r9, r1
    c534:	bl	4634 <get_hop_pattern@plt>
    c538:	movw	r0, #15728	; 0x3d70
    c53c:	cmp	r8, #0
    c540:	movt	r0, #10
    c544:	movweq	r0, #15760	; 0x3d90
    c548:	movteq	r0, #3
    c54c:	bl	464c <malloc@plt>
    c550:	movw	r1, #4648	; 0x1228
    c554:	mov	r7, r9
    c558:	movw	ip, #34079	; 0x851f
    c55c:	mov	lr, #25
    c560:	ldrb	r2, [r7, r1]!
    c564:	movw	r1, #60920	; 0xedf8
    c568:	movt	ip, #20971	; 0x51eb
    c56c:	movt	r1, #65535	; 0xffff
    c570:	str	r0, [r7, r1]
    c574:	movw	r1, #61260	; 0xef4c
    c578:	movt	r1, #65535	; 0xffff
    c57c:	ldr	r3, [r7, r1]
    c580:	ldr	r1, [r7, #1000]	; 0x3e8
    c584:	ldr	r7, [r7, #1004]	; 0x3ec
    c588:	add	r1, r7, r1
    c58c:	and	r5, r1, #63	; 0x3f
    c590:	mov	r1, #0
    c594:	ldr	r7, [r9, #8]
    c598:	ldrb	r6, [r3, r5]
    c59c:	cmp	r7, #0
    c5a0:	bne	c5d0 <btbb_init_hop_reversal@@Base+0xb0>
    c5a4:	uxtb	r4, r6
    c5a8:	cmp	r4, r2
    c5ac:	streq	r5, [r0, r1, lsl #2]
    c5b0:	add	r5, r5, #64	; 0x40
    c5b4:	addeq	r1, r1, #1
    c5b8:	cmp	r5, #134217728	; 0x8000000
    c5bc:	bcs	c5e8 <btbb_init_hop_reversal@@Base+0xc8>
    c5c0:	ldr	r7, [r9, #8]
    c5c4:	ldrb	r6, [r3, r5]
    c5c8:	cmp	r7, #0
    c5cc:	beq	c5a4 <btbb_init_hop_reversal@@Base+0x84>
    c5d0:	add	r6, r6, #24
    c5d4:	umull	r7, r4, r6, ip
    c5d8:	lsr	r4, r4, #3
    c5dc:	mls	r4, r4, lr, r6
    c5e0:	add	r6, r4, #26
    c5e4:	b	c5a4 <btbb_init_hop_reversal@@Base+0x84>
    c5e8:	mov	r0, #0
    c5ec:	movw	r3, #56799	; 0xdddf
    c5f0:	cmp	r8, #0
    c5f4:	str	r0, [r9, #388]	; 0x184
    c5f8:	str	r1, [r9, #376]	; 0x178
    c5fc:	movt	r3, #65535	; 0xffff
    c600:	mov	r0, #8704	; 0x2200
    c604:	movweq	r0, #512	; 0x200
    c608:	ldr	r2, [r9, #4]
    c60c:	and	r2, r2, r3
    c610:	orr	r0, r2, r0
    c614:	str	r0, [r9, #4]
    c618:	ldr	r0, [pc, #12]	; c62c <btbb_init_hop_reversal@@Base+0x10c>
    c61c:	add	r0, pc, r0
    c620:	bl	4508 <printf@plt>
    c624:	ldr	r0, [r9, #376]	; 0x178
    c628:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    c62c:	andeq	r9, r0, r8, lsr #9

0000c630 <try_hop@@Base>:
    c630:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c634:	add	fp, sp, #28
    c638:	sub	sp, sp, #4
    c63c:	ldrb	r8, [r1, #28]
    c640:	mov	r4, r1
    c644:	mov	r5, r0
    c648:	bl	461c <btbb_decode@plt>
    c64c:	ldr	r6, [r4, #4]
    c650:	movw	r0, #4648	; 0x1228
    c654:	add	r7, r4, r0
    c658:	tst	r6, #512	; 0x200
    c65c:	bne	c718 <try_hop@@Base+0xe8>
    c660:	mov	r0, r5
    c664:	mov	r1, r4
    c668:	bl	4580 <btbb_uap_from_header@plt>
    c66c:	tst	r6, #16
    c670:	bne	c760 <try_hop@@Base+0x130>
    c674:	cmp	r0, #0
    c678:	beq	c788 <try_hop@@Base+0x158>
    c67c:	ldrb	r0, [r4, #28]
    c680:	cmp	r8, r0
    c684:	bne	c7a4 <try_hop@@Base+0x174>
    c688:	mov	r0, r4
    c68c:	bl	4634 <get_hop_pattern@plt>
    c690:	movw	r0, #15760	; 0x3d90
    c694:	movt	r0, #3
    c698:	bl	464c <malloc@plt>
    c69c:	str	r0, [r4, #32]
    c6a0:	movw	ip, #34079	; 0x851f
    c6a4:	mov	lr, #25
    c6a8:	ldr	r1, [r7, #1000]	; 0x3e8
    c6ac:	ldr	r2, [r7, #1004]	; 0x3ec
    c6b0:	ldr	r9, [r4, #8]
    c6b4:	ldr	sl, [r4, #372]	; 0x174
    c6b8:	ldrb	r7, [r7]
    c6bc:	movt	ip, #20971	; 0x51eb
    c6c0:	add	r1, r2, r1
    c6c4:	and	r2, r1, #63	; 0x3f
    c6c8:	mov	r1, #0
    c6cc:	ldrb	r6, [sl, r2]
    c6d0:	cmp	r9, #0
    c6d4:	bne	c700 <try_hop@@Base+0xd0>
    c6d8:	uxtb	r3, r6
    c6dc:	cmp	r3, r7
    c6e0:	streq	r2, [r0, r1, lsl #2]
    c6e4:	add	r2, r2, #64	; 0x40
    c6e8:	addeq	r1, r1, #1
    c6ec:	cmp	r2, #134217728	; 0x8000000
    c6f0:	bcs	c7b4 <try_hop@@Base+0x184>
    c6f4:	ldrb	r6, [sl, r2]
    c6f8:	cmp	r9, #0
    c6fc:	beq	c6d8 <try_hop@@Base+0xa8>
    c700:	add	r6, r6, #24
    c704:	umull	r3, r5, r6, ip
    c708:	lsr	r3, r5, #3
    c70c:	mls	r3, r3, lr, r6
    c710:	add	r6, r3, #26
    c714:	b	c6d8 <try_hop@@Base+0xa8>
    c718:	ldr	r1, [r4, #380]	; 0x17c
    c71c:	ldr	r2, [r7, #1004]	; 0x3ec
    c720:	ldr	r3, [r5, #2816]	; 0xb00
    c724:	add	r1, r4, r1, lsl #2
    c728:	sub	r2, r3, r2
    c72c:	str	r2, [r1, #648]	; 0x288
    c730:	ldr	r1, [r4, #380]	; 0x17c
    c734:	ldrb	r2, [r5, #8]
    c738:	add	r1, r4, r1
    c73c:	strb	r2, [r1, r0]
    c740:	ldr	r0, [r4, #380]	; 0x17c
    c744:	ldr	r1, [r4, #384]	; 0x180
    c748:	add	r0, r0, #1
    c74c:	add	r1, r1, #1
    c750:	str	r0, [r4, #380]	; 0x17c
    c754:	mov	r0, r4
    c758:	str	r1, [r4, #384]	; 0x180
    c75c:	bl	4628 <btbb_winnow@plt>
    c760:	ldrb	r0, [r4, #4]
    c764:	tst	r0, #32
    c768:	beq	c788 <try_hop@@Base+0x158>
    c76c:	ldr	r0, [pc, #124]	; c7f0 <try_hop@@Base+0x1c0>
    c770:	add	r0, pc, r0
    c774:	bl	4640 <puts@plt>
    c778:	ldr	r1, [r7, #1000]	; 0x3e8
    c77c:	ldr	r0, [pc, #112]	; c7f4 <try_hop@@Base+0x1c4>
    c780:	add	r0, pc, r0
    c784:	bl	4508 <printf@plt>
    c788:	ldr	r0, [r4, #4]
    c78c:	tst	r0, #4
    c790:	orreq	r0, r0, #4
    c794:	strbeq	r8, [r4, #28]
    c798:	streq	r0, [r4, #4]
    c79c:	sub	sp, fp, #28
    c7a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c7a4:	ldr	r0, [pc, #80]	; c7fc <try_hop@@Base+0x1cc>
    c7a8:	add	r0, pc, r0
    c7ac:	bl	4640 <puts@plt>
    c7b0:	b	c788 <try_hop@@Base+0x158>
    c7b4:	mov	r0, #0
    c7b8:	movw	r2, #56799	; 0xdddf
    c7bc:	str	r0, [r4, #388]	; 0x184
    c7c0:	str	r1, [r4, #376]	; 0x178
    c7c4:	movt	r2, #65535	; 0xffff
    c7c8:	ldr	r0, [r4, #4]
    c7cc:	and	r0, r0, r2
    c7d0:	orr	r0, r0, #512	; 0x200
    c7d4:	str	r0, [r4, #4]
    c7d8:	ldr	r0, [pc, #24]	; c7f8 <try_hop@@Base+0x1c8>
    c7dc:	add	r0, pc, r0
    c7e0:	bl	4508 <printf@plt>
    c7e4:	mov	r0, r4
    c7e8:	bl	4628 <btbb_winnow@plt>
    c7ec:	b	c788 <try_hop@@Base+0x158>
    c7f0:	andeq	r9, r0, r4, asr #9
    c7f4:	andeq	r9, r0, r3, ror #6
    c7f8:	andeq	r9, r0, r8, ror #5
    c7fc:	andeq	r9, r0, r6, ror r4

0000c800 <btbb_winnow@@Base>:
    c800:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c804:	add	fp, sp, #28
    c808:	sub	sp, sp, #4
    c80c:	mov	sl, r0
    c810:	ldr	r0, [r0, #376]	; 0x178
    c814:	ldr	r2, [sl, #380]	; 0x17c
    c818:	ldr	r1, [sl, #388]	; 0x184
    c81c:	cmp	r1, r2
    c820:	bge	c9b4 <btbb_winnow@@Base+0x1b4>
    c824:	cmp	r0, #1
    c828:	blt	c95c <btbb_winnow@@Base+0x15c>
    c82c:	movw	r2, #5648	; 0x1610
    c830:	mov	r9, #25
    c834:	add	r2, sl, r2
    c838:	str	r2, [sp]
    c83c:	add	r2, sl, r1
    c840:	add	r1, sl, r1, lsl #2
    c844:	movw	r3, #4648	; 0x1228
    c848:	ldr	r5, [sl, #372]	; 0x174
    c84c:	mov	r6, #0
    c850:	mov	r7, #0
    c854:	ldrb	lr, [r2, r3]
    c858:	ldr	r3, [sl, #32]
    c85c:	ldr	ip, [r1, #648]	; 0x288
    c860:	b	c870 <btbb_winnow@@Base+0x70>
    c864:	add	r7, r7, #1
    c868:	cmp	r7, r0
    c86c:	bge	c8c4 <btbb_winnow@@Base+0xc4>
    c870:	ldr	r4, [r3, r7, lsl #2]
    c874:	ldr	r2, [sl, #8]
    c878:	add	r1, r4, ip
    c87c:	cmp	r2, #0
    c880:	bic	r1, r1, #-134217728	; 0xf8000000
    c884:	ldrb	r1, [r5, r1]
    c888:	beq	c8a8 <btbb_winnow@@Base+0xa8>
    c88c:	movw	r2, #34079	; 0x851f
    c890:	add	r1, r1, #24
    c894:	movt	r2, #20971	; 0x51eb
    c898:	umull	r2, r8, r1, r2
    c89c:	lsr	r2, r8, #3
    c8a0:	mls	r1, r2, r9, r1
    c8a4:	add	r1, r1, #26
    c8a8:	uxtb	r1, r1
    c8ac:	cmp	r1, lr
    c8b0:	bne	c864 <btbb_winnow@@Base+0x64>
    c8b4:	str	r4, [r3, r6, lsl #2]
    c8b8:	add	r6, r6, #1
    c8bc:	ldr	r0, [sl, #376]	; 0x178
    c8c0:	b	c864 <btbb_winnow@@Base+0x64>
    c8c4:	cmp	r6, #0
    c8c8:	str	r6, [sl, #376]	; 0x178
    c8cc:	beq	c964 <btbb_winnow@@Base+0x164>
    c8d0:	cmp	r6, #1
    c8d4:	beq	c9c4 <btbb_winnow@@Base+0x1c4>
    c8d8:	cmp	r6, #2
    c8dc:	blt	c9a8 <btbb_winnow@@Base+0x1a8>
    c8e0:	ldr	r0, [sl, #380]	; 0x17c
    c8e4:	cmp	r0, #1
    c8e8:	blt	c93c <btbb_winnow@@Base+0x13c>
    c8ec:	ldr	r1, [sl, #388]	; 0x184
    c8f0:	movw	r3, #4648	; 0x1228
    c8f4:	sub	r1, r1, #1
    c8f8:	add	r2, sl, r1
    c8fc:	ldrb	r2, [r2, r3]
    c900:	cmp	lr, r2
    c904:	bne	c93c <btbb_winnow@@Base+0x13c>
    c908:	add	r1, sl, r1, lsl #2
    c90c:	ldr	r1, [r1, #648]	; 0x288
    c910:	add	r1, r1, #1
    c914:	cmp	ip, r1
    c918:	ldreq	r1, [sl, #4]
    c91c:	andseq	r2, r1, #4096	; 0x1000
    c920:	bne	c93c <btbb_winnow@@Base+0x13c>
    c924:	orr	r0, r1, #4096	; 0x1000
    c928:	str	r0, [sl, #4]
    c92c:	ldr	r0, [pc, #216]	; ca0c <btbb_winnow@@Base+0x20c>
    c930:	add	r0, pc, r0
    c934:	bl	4640 <puts@plt>
    c938:	ldr	r0, [sl, #380]	; 0x17c
    c93c:	ldr	r1, [sl, #388]	; 0x184
    c940:	add	r1, r1, #1
    c944:	cmp	r1, r0
    c948:	str	r1, [sl, #388]	; 0x184
    c94c:	bge	c9a8 <btbb_winnow@@Base+0x1a8>
    c950:	ldr	r0, [sl, #376]	; 0x178
    c954:	cmp	r0, #0
    c958:	bgt	c83c <btbb_winnow@@Base+0x3c>
    c95c:	mov	r0, #0
    c960:	str	r0, [sl, #376]	; 0x178
    c964:	ldr	r0, [sl, #4]
    c968:	tst	r0, #512	; 0x200
    c96c:	beq	c984 <btbb_winnow@@Base+0x184>
    c970:	ldr	r0, [sl, #32]
    c974:	bl	4550 <free@plt>
    c978:	mov	r0, #0
    c97c:	str	r0, [sl, #372]	; 0x174
    c980:	ldr	r0, [sl, #4]
    c984:	movw	r1, #61899	; 0xf1cb
    c988:	mov	r2, #2048	; 0x800
    c98c:	mov	r6, #0
    c990:	movt	r1, #65535	; 0xffff
    c994:	str	r6, [sl, #380]	; 0x17c
    c998:	and	r1, r0, r1
    c99c:	and	r0, r2, r0, lsr #1
    c9a0:	orr	r0, r0, r1
    c9a4:	str	r0, [sl, #4]
    c9a8:	mov	r0, r6
    c9ac:	sub	sp, fp, #28
    c9b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c9b4:	mov	r6, r0
    c9b8:	mov	r0, r6
    c9bc:	sub	sp, fp, #28
    c9c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c9c4:	ldr	r2, [sp]
    c9c8:	ldr	r1, [r3]
    c9cc:	ldr	r0, [r2, #4]
    c9d0:	sub	r0, r1, r0
    c9d4:	lsl	r0, r0, #1
    c9d8:	str	r0, [r2]
    c9dc:	ldr	r1, [r3]
    c9e0:	ldr	r0, [pc, #32]	; ca08 <btbb_winnow@@Base+0x208>
    c9e4:	add	r0, pc, r0
    c9e8:	bl	4508 <printf@plt>
    c9ec:	ldr	r0, [sl, #4]
    c9f0:	mov	r6, #1
    c9f4:	orr	r0, r0, #32
    c9f8:	str	r0, [sl, #4]
    c9fc:	mov	r0, r6
    ca00:	sub	sp, fp, #28
    ca04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ca08:			; <UNDEFINED> instruction: 0x000091b7
    ca0c:	andeq	r9, r0, r0, lsl r3

0000ca10 <btbb_uap_from_header@@Base>:
    ca10:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ca14:	add	fp, sp, #28
    ca18:	sub	sp, sp, #12
    ca1c:	mov	r5, r0
    ca20:	movw	r0, #5648	; 0x1610
    ca24:	mov	r4, r1
    ca28:	mov	r2, #1
    ca2c:	add	r0, r1, r0
    ca30:	ldr	r9, [r5, #2816]	; 0xb00
    ca34:	str	r0, [sp, #8]
    ca38:	ldrb	r0, [r1, #5]
    ca3c:	tst	r0, #4
    ca40:	ldreq	r0, [sp, #8]
    ca44:	streq	r9, [r0, #4]
    ca48:	ldrb	r0, [r5, #8]
    ca4c:	and	r1, r0, #7
    ca50:	add	r0, r4, r0, lsr #3
    ca54:	ldrb	r3, [r0, #12]!
    ca58:	tst	r3, r2, lsl r1
    ca5c:	beq	cbf4 <btbb_uap_from_header@@Base+0x1e4>
    ca60:	ldr	r0, [r4, #380]	; 0x17c
    ca64:	cmp	r0, #1000	; 0x3e8
    ca68:	bge	cc18 <btbb_uap_from_header@@Base+0x208>
    ca6c:	ldr	r1, [sp, #8]
    ca70:	add	r0, r4, r0, lsl #2
    ca74:	movw	r2, #4648	; 0x1228
    ca78:	add	r8, r4, #392	; 0x188
    ca7c:	mov	sl, #0
    ca80:	ldr	r1, [r1, #4]
    ca84:	sub	r1, r9, r1
    ca88:	str	r1, [r0, #648]	; 0x288
    ca8c:	ldr	r0, [r4, #380]	; 0x17c
    ca90:	ldrb	r1, [r5, #8]
    ca94:	add	r0, r4, r0
    ca98:	strb	r1, [r0, r2]
    ca9c:	ldr	r0, [r4, #380]	; 0x17c
    caa0:	ldr	r1, [r4, #384]	; 0x180
    caa4:	add	r0, r0, #1
    caa8:	add	r1, r1, #1
    caac:	str	r0, [r4, #380]	; 0x17c
    cab0:	mov	r0, #0
    cab4:	str	r1, [r4, #384]	; 0x180
    cab8:	str	r0, [sp, #4]
    cabc:	mov	r0, #0
    cac0:	str	r0, [sp]
    cac4:	ldr	r0, [r8, sl, lsl #2]
    cac8:	cmn	r0, #1
    cacc:	bgt	cb0c <btbb_uap_from_header@@Base+0xfc>
    cad0:	b	cb00 <btbb_uap_from_header@@Base+0xf0>
    cad4:	ldr	r0, [sp, #4]
    cad8:	str	r6, [r8, sl, lsl #2]
    cadc:	str	sl, [sp]
    cae0:	add	r0, r0, #1
    cae4:	str	r0, [sp, #4]
    cae8:	add	sl, sl, #1
    caec:	cmp	sl, #64	; 0x40
    caf0:	beq	cb9c <btbb_uap_from_header@@Base+0x18c>
    caf4:	ldr	r0, [r8, sl, lsl #2]
    caf8:	cmn	r0, #1
    cafc:	bgt	cb0c <btbb_uap_from_header@@Base+0xfc>
    cb00:	ldr	r2, [r4, #4]
    cb04:	tst	r2, #1024	; 0x400
    cb08:	bne	cae8 <btbb_uap_from_header@@Base+0xd8>
    cb0c:	ldr	r1, [sp, #8]
    cb10:	add	r0, r9, sl
    cb14:	ldr	r1, [r1, #4]
    cb18:	sub	r0, r0, r1
    cb1c:	mov	r1, r5
    cb20:	and	r7, r0, #63	; 0x3f
    cb24:	mov	r0, r7
    cb28:	bl	47e4 <try_clock@plt>
    cb2c:	ldr	r2, [r4, #4]
    cb30:	mov	r6, r0
    cb34:	tst	r2, #1024	; 0x400
    cb38:	beq	cb4c <btbb_uap_from_header@@Base+0x13c>
    cb3c:	ldr	r1, [r8, sl, lsl #2]
    cb40:	mvn	r0, #0
    cb44:	cmp	r1, r6
    cb48:	bne	cb5c <btbb_uap_from_header@@Base+0x14c>
    cb4c:	mov	r0, r7
    cb50:	mov	r1, r5
    cb54:	bl	4610 <crc_check@plt>
    cb58:	ldr	r2, [r4, #4]
    cb5c:	ands	r3, r2, #4
    cb60:	beq	cb70 <btbb_uap_from_header@@Base+0x160>
    cb64:	ldrb	r1, [r4, #28]
    cb68:	cmp	r6, r1
    cb6c:	bne	cb88 <btbb_uap_from_header@@Base+0x178>
    cb70:	sub	r1, r0, #1
    cb74:	cmp	r1, #2
    cb78:	bcc	cad4 <btbb_uap_from_header@@Base+0xc4>
    cb7c:	add	r0, r0, #1
    cb80:	cmp	r0, #1
    cb84:	bhi	cc70 <btbb_uap_from_header@@Base+0x260>
    cb88:	mvn	r0, #0
    cb8c:	str	r0, [r8, sl, lsl #2]
    cb90:	add	sl, sl, #1
    cb94:	cmp	sl, #64	; 0x40
    cb98:	bne	caf4 <btbb_uap_from_header@@Base+0xe4>
    cb9c:	ldr	r3, [sp, #4]
    cba0:	orr	r1, r2, #1024	; 0x400
    cba4:	str	r1, [r4, #4]
    cba8:	cmp	r3, #0
    cbac:	beq	cca0 <btbb_uap_from_header@@Base+0x290>
    cbb0:	mov	r0, #0
    cbb4:	cmp	r3, #1
    cbb8:	bne	cc68 <btbb_uap_from_header@@Base+0x258>
    cbbc:	ldr	r3, [sp, #8]
    cbc0:	ldr	r5, [sp]
    cbc4:	tst	r2, #4
    cbc8:	ldr	r0, [r3, #4]
    cbcc:	sub	r0, r5, r0
    cbd0:	and	r1, r0, #63	; 0x3f
    cbd4:	str	r1, [r3]
    cbd8:	bne	cccc <btbb_uap_from_header@@Base+0x2bc>
    cbdc:	add	r0, r4, r5, lsl #2
    cbe0:	ldr	r2, [r4, #384]	; 0x180
    cbe4:	ldr	r1, [r0, #392]	; 0x188
    cbe8:	ldr	r0, [pc, #292]	; cd14 <btbb_uap_from_header@@Base+0x304>
    cbec:	add	r0, pc, r0
    cbf0:	b	ccd8 <btbb_uap_from_header@@Base+0x2c8>
    cbf4:	lsl	r1, r2, r1
    cbf8:	orr	r1, r3, r1
    cbfc:	strb	r1, [r0]
    cc00:	ldrb	r0, [r4, #22]
    cc04:	add	r0, r0, #1
    cc08:	strb	r0, [r4, #22]
    cc0c:	ldr	r0, [r4, #380]	; 0x17c
    cc10:	cmp	r0, #1000	; 0x3e8
    cc14:	blt	ca6c <btbb_uap_from_header@@Base+0x5c>
    cc18:	ldr	r0, [pc, #232]	; cd08 <btbb_uap_from_header@@Base+0x2f8>
    cc1c:	add	r0, pc, r0
    cc20:	bl	4640 <puts@plt>
    cc24:	ldr	r1, [r4, #4]
    cc28:	tst	r1, #512	; 0x200
    cc2c:	beq	cc44 <btbb_uap_from_header@@Base+0x234>
    cc30:	ldr	r0, [r4, #32]
    cc34:	bl	4550 <free@plt>
    cc38:	mov	r0, #0
    cc3c:	str	r0, [r4, #372]	; 0x174
    cc40:	ldr	r1, [r4, #4]
    cc44:	movw	r2, #61899	; 0xf1cb
    cc48:	mov	r3, #2048	; 0x800
    cc4c:	mov	r0, #0
    cc50:	movt	r2, #65535	; 0xffff
    cc54:	str	r0, [r4, #380]	; 0x17c
    cc58:	and	r2, r1, r2
    cc5c:	and	r1, r3, r1, lsr #1
    cc60:	orr	r1, r1, r2
    cc64:	str	r1, [r4, #4]
    cc68:	sub	sp, fp, #28
    cc6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cc70:	ldr	r2, [sp, #8]
    cc74:	cmp	r3, #0
    cc78:	ldr	r0, [r2, #4]
    cc7c:	sub	r0, sl, r0
    cc80:	and	r1, r0, #63	; 0x3f
    cc84:	str	r1, [r2]
    cc88:	bne	ccac <btbb_uap_from_header@@Base+0x29c>
    cc8c:	ldr	r2, [r4, #384]	; 0x180
    cc90:	ldr	r0, [pc, #116]	; cd0c <btbb_uap_from_header@@Base+0x2fc>
    cc94:	mov	r1, r6
    cc98:	add	r0, pc, r0
    cc9c:	b	ccb8 <btbb_uap_from_header@@Base+0x2a8>
    cca0:	tst	r2, #512	; 0x200
    cca4:	bne	cc30 <btbb_uap_from_header@@Base+0x220>
    cca8:	b	cc44 <btbb_uap_from_header@@Base+0x234>
    ccac:	ldr	r2, [r4, #384]	; 0x180
    ccb0:	ldr	r0, [pc, #88]	; cd10 <btbb_uap_from_header@@Base+0x300>
    ccb4:	add	r0, pc, r0
    ccb8:	bl	4508 <printf@plt>
    ccbc:	mov	r0, #0
    ccc0:	strb	r6, [r4, #28]
    ccc4:	str	r0, [r4, #384]	; 0x180
    ccc8:	b	ccf0 <btbb_uap_from_header@@Base+0x2e0>
    cccc:	ldr	r2, [r4, #384]	; 0x180
    ccd0:	ldr	r0, [pc, #64]	; cd18 <btbb_uap_from_header@@Base+0x308>
    ccd4:	add	r0, pc, r0
    ccd8:	bl	4508 <printf@plt>
    ccdc:	add	r0, r4, r5, lsl #2
    cce0:	mov	r1, #0
    cce4:	ldr	r0, [r0, #392]	; 0x188
    cce8:	str	r1, [r4, #384]	; 0x180
    ccec:	strb	r0, [r4, #28]
    ccf0:	ldr	r0, [r4, #4]
    ccf4:	orr	r0, r0, #20
    ccf8:	str	r0, [r4, #4]
    ccfc:	mov	r0, #1
    cd00:	sub	sp, fp, #28
    cd04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cd08:	andeq	r9, r0, r6, asr #32
    cd0c:	andeq	r8, r0, pc, asr lr
    cd10:	andeq	r8, r0, sl, ror lr
    cd14:	andeq	r8, r0, r8, lsl pc
    cd18:	andeq	r8, r0, r7, ror #28

0000cd1c <btbb_print_afh_map@@Base>:
    cd1c:	push	{r4, r5, r6, r7, fp, lr}
    cd20:	add	fp, sp, #16
    cd24:	sub	sp, sp, #32
    cd28:	ldrb	ip, [r0, #15]
    cd2c:	ldrb	r1, [r0, #12]
    cd30:	ldrb	r2, [r0, #13]
    cd34:	ldrb	r3, [r0, #14]
    cd38:	ldrb	lr, [r0, #16]
    cd3c:	ldrb	r4, [r0, #17]
    cd40:	ldrb	r5, [r0, #18]
    cd44:	ldrb	r6, [r0, #19]
    cd48:	ldrb	r7, [r0, #20]
    cd4c:	ldrb	r0, [r0, #21]
    cd50:	stm	sp, {ip, lr}
    cd54:	add	ip, sp, #8
    cd58:	stm	ip, {r4, r5, r6, r7}
    cd5c:	str	r0, [sp, #24]
    cd60:	ldr	r0, [pc, #12]	; cd74 <btbb_print_afh_map@@Base+0x58>
    cd64:	add	r0, pc, r0
    cd68:	bl	4508 <printf@plt>
    cd6c:	sub	sp, fp, #16
    cd70:	pop	{r4, r5, r6, r7, fp, pc}
    cd74:	andeq	r8, r0, r2, lsl #28

0000cd78 <get_piconet@@Base>:
    cd78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cd7c:	add	fp, sp, #28
    cd80:	sub	sp, sp, #20
    cd84:	str	r0, [sp, #16]
    cd88:	movw	r8, #63341	; 0xf76d
    cd8c:	movw	sl, #48883	; 0xbef3
    cd90:	mov	r6, r0
    cd94:	ldr	r9, [pc, #1216]	; d25c <get_piconet@@Base+0x4e4>
    cd98:	movt	r8, #7
    cd9c:	movt	sl, #65261	; 0xfeed
    cda0:	ldr	r9, [pc, r9]
    cda4:	cmp	r9, #0
    cda8:	beq	ceac <get_piconet@@Base+0x134>
    cdac:	movw	r1, #16653	; 0x410d
    cdb0:	and	r0, r6, #-16777216	; 0xff000000
    cdb4:	ldr	r5, [r9, #8]
    cdb8:	movt	r1, #274	; 0x112
    cdbc:	add	r0, r0, r1
    cdc0:	and	r1, r6, #16711680	; 0xff0000
    cdc4:	add	r0, r0, r1
    cdc8:	and	r1, r6, #65280	; 0xff00
    cdcc:	add	r0, r0, r1
    cdd0:	movw	r1, #47814	; 0xbac6
    cdd4:	uxtab	r0, r0, r6
    cdd8:	movt	r1, #40777	; 0x9f49
    cddc:	eor	r0, r0, r8
    cde0:	sub	r1, r1, r0
    cde4:	sub	r2, sl, r0
    cde8:	eor	r1, r1, r0, lsl #8
    cdec:	sub	r2, r2, r1
    cdf0:	sub	r0, r0, r1
    cdf4:	eor	r2, r2, r1, lsr #13
    cdf8:	sub	r0, r0, r2
    cdfc:	sub	r1, r1, r2
    ce00:	eor	r0, r0, r2, lsr #12
    ce04:	sub	r1, r1, r0
    ce08:	sub	r2, r2, r0
    ce0c:	eor	r1, r1, r0, lsl #16
    ce10:	sub	r2, r2, r1
    ce14:	sub	r0, r0, r1
    ce18:	eor	r2, r2, r1, lsr #5
    ce1c:	sub	r0, r0, r2
    ce20:	sub	r1, r1, r2
    ce24:	eor	r0, r0, r2, lsr #3
    ce28:	sub	r1, r1, r0
    ce2c:	eor	r1, r1, r0, lsl #10
    ce30:	sub	r0, r2, r0
    ce34:	sub	r0, r0, r1
    ce38:	eor	r0, r0, r1, lsr #15
    ce3c:	ldm	r5, {r1, r2}
    ce40:	sub	r2, r2, #1
    ce44:	and	r0, r0, r2
    ce48:	add	r0, r0, r0, lsl #1
    ce4c:	ldr	r0, [r1, r0, lsl #2]
    ce50:	cmp	r0, #0
    ce54:	beq	ceac <get_piconet@@Base+0x134>
    ce58:	ldr	r1, [r5, #20]
    ce5c:	add	r4, sp, #16
    ce60:	sub	r7, r0, r1
    ce64:	ldr	r0, [r7, #32]
    ce68:	cmp	r0, #4
    ce6c:	bne	ce88 <get_piconet@@Base+0x110>
    ce70:	ldr	r0, [r7, #28]
    ce74:	mov	r1, r4
    ce78:	mov	r2, #4
    ce7c:	bl	46a0 <bcmp@plt>
    ce80:	cmp	r0, #0
    ce84:	beq	d22c <get_piconet@@Base+0x4b4>
    ce88:	ldr	r0, [r7, #24]
    ce8c:	cmp	r0, #0
    ce90:	beq	ceac <get_piconet@@Base+0x134>
    ce94:	ldr	r1, [r5, #20]
    ce98:	sub	r7, r0, r1
    ce9c:	ldr	r0, [r7, #32]
    cea0:	cmp	r0, #4
    cea4:	beq	ce70 <get_piconet@@Base+0xf8>
    cea8:	b	ce88 <get_piconet@@Base+0x110>
    ceac:	mov	r0, #1
    ceb0:	movw	r1, #5660	; 0x161c
    ceb4:	mov	r7, r8
    ceb8:	mov	r5, #1
    cebc:	bl	44cc <calloc@plt>
    cec0:	mov	r4, r0
    cec4:	str	r6, [r0, #24]
    cec8:	mov	r0, #8
    cecc:	str	r5, [r4]
    ced0:	str	r0, [r4, #4]
    ced4:	mov	r0, #40	; 0x28
    ced8:	bl	464c <malloc@plt>
    cedc:	mov	r5, r0
    cee0:	mov	r0, #0
    cee4:	mov	r1, #4
    cee8:	cmp	r9, #0
    ceec:	add	r8, r5, #8
    cef0:	str	r0, [r5, #16]
    cef4:	str	r6, [r5]
    cef8:	str	r4, [r5, #4]
    cefc:	str	r5, [r5, #28]
    cf00:	str	r1, [r5, #32]
    cf04:	beq	cf28 <get_piconet@@Base+0x1b0>
    cf08:	ldr	r6, [r9, #8]
    cf0c:	ldr	r0, [r6, #16]
    cf10:	str	r5, [r0, #8]
    cf14:	ldr	r1, [r6, #20]
    cf18:	sub	r0, r0, r1
    cf1c:	str	r0, [r5, #12]
    cf20:	str	r8, [r6, #16]
    cf24:	b	cfb0 <get_piconet@@Base+0x238>
    cf28:	ldr	r1, [pc, #816]	; d260 <get_piconet@@Base+0x4e8>
    cf2c:	str	r0, [r5, #12]
    cf30:	mov	r0, #44	; 0x2c
    cf34:	add	r1, pc, r1
    cf38:	str	r5, [r1]
    cf3c:	bl	464c <malloc@plt>
    cf40:	cmp	r0, #0
    cf44:	str	r0, [r5, #8]
    cf48:	beq	d254 <get_piconet@@Base+0x4dc>
    cf4c:	vmov.i32	q8, #0	; 0x00000000
    cf50:	mov	r6, r0
    cf54:	add	r0, r0, #12
    cf58:	mov	r1, #32
    cf5c:	vst1.32	{d16-d17}, [r0]
    cf60:	mov	r0, #5
    cf64:	str	r1, [r6, #4]
    cf68:	str	r0, [r6, #8]
    cf6c:	add	r0, r6, #28
    cf70:	vst1.32	{d16-d17}, [r0]
    cf74:	mov	r0, #8
    cf78:	str	r8, [r6, #16]
    cf7c:	str	r0, [r6, #20]
    cf80:	mov	r0, #384	; 0x180
    cf84:	bl	464c <malloc@plt>
    cf88:	cmp	r0, #0
    cf8c:	str	r0, [r6]
    cf90:	beq	d254 <get_piconet@@Base+0x4dc>
    cf94:	mov	r1, #0
    cf98:	mov	r2, #384	; 0x180
    cf9c:	bl	4718 <memset@plt>
    cfa0:	movw	r0, #8161	; 0x1fe1
    cfa4:	mov	r9, r5
    cfa8:	movt	r0, #40977	; 0xa011
    cfac:	str	r0, [r6, #40]	; 0x28
    cfb0:	ldr	r0, [r6, #12]
    cfb4:	add	r0, r0, #1
    cfb8:	str	r0, [r6, #12]
    cfbc:	movw	r6, #16653	; 0x410d
    cfc0:	ldr	ip, [r9, #8]
    cfc4:	movt	r6, #274	; 0x112
    cfc8:	str	ip, [r5, #8]
    cfcc:	ldrb	r3, [r5, #3]
    cfd0:	ldrb	r2, [r5, #2]
    cfd4:	ldrb	r1, [r5, #1]
    cfd8:	ldrb	r0, [r5]
    cfdc:	add	r3, r6, r3, lsl #24
    cfe0:	mov	r6, #0
    cfe4:	add	r2, r3, r2, lsl #16
    cfe8:	add	r1, r2, r1, lsl #8
    cfec:	add	r0, r1, r0
    cff0:	movw	r1, #47814	; 0xbac6
    cff4:	movt	r1, #40777	; 0x9f49
    cff8:	eor	r0, r0, r7
    cffc:	sub	r2, sl, r0
    d000:	sub	r1, r1, r0
    d004:	eor	r1, r1, r0, lsl #8
    d008:	sub	r2, r2, r1
    d00c:	sub	r0, r0, r1
    d010:	eor	r2, r2, r1, lsr #13
    d014:	sub	r0, r0, r2
    d018:	sub	r1, r1, r2
    d01c:	eor	r0, r0, r2, lsr #12
    d020:	sub	r1, r1, r0
    d024:	sub	r2, r2, r0
    d028:	eor	r1, r1, r0, lsl #16
    d02c:	sub	r2, r2, r1
    d030:	sub	r0, r0, r1
    d034:	eor	r2, r2, r1, lsr #5
    d038:	sub	r0, r0, r2
    d03c:	sub	r1, r1, r2
    d040:	eor	r0, r0, r2, lsr #3
    d044:	sub	r1, r1, r0
    d048:	eor	r1, r1, r0, lsl #10
    d04c:	sub	r0, r2, r0
    d050:	sub	r0, r0, r1
    d054:	eor	r1, r0, r1, lsr #15
    d058:	str	r1, [r5, #36]	; 0x24
    d05c:	ldr	r2, [r9, #8]
    d060:	ldm	r2, {r0, r2}
    d064:	sub	r2, r2, #1
    d068:	and	r1, r1, r2
    d06c:	add	r2, r1, r1, lsl #1
    d070:	mov	r3, r0
    d074:	add	r0, r0, r2, lsl #2
    d078:	ldr	r7, [r3, r2, lsl #2]!
    d07c:	mov	r2, #10
    d080:	ldr	r1, [r3, #4]
    d084:	cmp	r7, #0
    d088:	add	r1, r1, #1
    d08c:	str	r1, [r3, #4]
    d090:	str	r6, [r5, #20]
    d094:	str	r7, [r5, #24]
    d098:	strne	r8, [r7, #12]
    d09c:	str	r8, [r3]
    d0a0:	ldr	r0, [r0, #8]
    d0a4:	add	r0, r0, r0, lsl #2
    d0a8:	add	r0, r2, r0, lsl #1
    d0ac:	cmp	r1, r0
    d0b0:	bcc	d220 <get_piconet@@Base+0x4a8>
    d0b4:	ldr	r0, [ip, #36]	; 0x24
    d0b8:	cmp	r0, #1
    d0bc:	beq	d220 <get_piconet@@Base+0x4a8>
    d0c0:	ldr	r0, [ip, #4]
    d0c4:	str	r4, [sp, #8]
    d0c8:	str	r8, [sp, #4]
    d0cc:	mov	r4, ip
    d0d0:	add	r0, r0, r0, lsl #1
    d0d4:	lsl	r0, r0, #3
    d0d8:	bl	464c <malloc@plt>
    d0dc:	cmp	r0, #0
    d0e0:	beq	d254 <get_piconet@@Base+0x4dc>
    d0e4:	mov	sl, r0
    d0e8:	ldr	r0, [r4, #4]
    d0ec:	mov	r1, #0
    d0f0:	mov	r9, #0
    d0f4:	add	r0, r0, r0, lsl #1
    d0f8:	lsl	r2, r0, #3
    d0fc:	mov	r0, sl
    d100:	bl	4718 <memset@plt>
    d104:	str	r9, [r4, #28]
    d108:	mvn	r2, #0
    d10c:	mov	r6, #1
    d110:	ldr	r0, [r4]
    d114:	str	r0, [sp, #12]
    d118:	ldmib	r4, {r0, r1, r7}
    d11c:	add	r1, r1, #1
    d120:	lsr	r3, r7, r1
    d124:	add	r2, r2, r0, lsl #1
    d128:	tst	r2, r7
    d12c:	addne	r3, r6, r7, lsr r1
    d130:	cmp	r0, #0
    d134:	str	r3, [r4, #24]
    d138:	beq	d1d0 <get_piconet@@Base+0x458>
    d13c:	mov	ip, r4
    d140:	mov	r4, #0
    d144:	mov	lr, #0
    d148:	b	d158 <get_piconet@@Base+0x3e0>
    d14c:	add	lr, lr, #1
    d150:	cmp	lr, r0
    d154:	beq	d1d0 <get_piconet@@Base+0x458>
    d158:	ldr	r5, [sp, #12]
    d15c:	add	r1, lr, lr, lsl #1
    d160:	ldr	r6, [r5, r1, lsl #2]
    d164:	cmp	r6, #0
    d168:	bne	d194 <get_piconet@@Base+0x41c>
    d16c:	b	d14c <get_piconet@@Base+0x3d4>
    d170:	str	r9, [r6, #12]
    d174:	ldr	r5, [r1]
    d178:	cmp	r5, #0
    d17c:	str	r5, [r6, #16]
    d180:	strne	r6, [r5, #12]
    d184:	str	r6, [r1]
    d188:	cmp	r7, #0
    d18c:	mov	r6, r7
    d190:	beq	d14c <get_piconet@@Base+0x3d4>
    d194:	ldr	r1, [r6, #28]
    d198:	ldr	r7, [r6, #16]
    d19c:	and	r1, r1, r2
    d1a0:	add	r1, r1, r1, lsl #1
    d1a4:	add	r1, sl, r1, lsl #2
    d1a8:	ldr	r5, [r1, #4]
    d1ac:	add	r8, r5, #1
    d1b0:	cmp	r8, r3
    d1b4:	str	r8, [r1, #4]
    d1b8:	bls	d170 <get_piconet@@Base+0x3f8>
    d1bc:	udiv	r5, r8, r3
    d1c0:	add	r4, r4, #1
    d1c4:	str	r4, [ip, #28]
    d1c8:	str	r5, [r1, #8]
    d1cc:	b	d170 <get_piconet@@Base+0x3f8>
    d1d0:	ldr	r0, [sp, #12]
    d1d4:	bl	4550 <free@plt>
    d1d8:	ldr	r0, [sp, #4]
    d1dc:	ldr	r0, [r0]
    d1e0:	str	sl, [r0]
    d1e4:	ldr	r7, [r0, #28]
    d1e8:	ldmib	r0, {r1, r2, r3}
    d1ec:	lsl	r1, r1, #1
    d1f0:	cmp	r7, r3, lsr #1
    d1f4:	str	r1, [r0, #4]
    d1f8:	add	r1, r2, #1
    d1fc:	str	r1, [r0, #8]
    d200:	bls	d23c <get_piconet@@Base+0x4c4>
    d204:	ldr	r1, [r0, #32]
    d208:	ldr	r4, [sp, #8]
    d20c:	add	r1, r1, #1
    d210:	cmp	r1, #2
    d214:	str	r1, [r0, #32]
    d218:	movcs	r1, #1
    d21c:	strcs	r1, [r0, #36]	; 0x24
    d220:	mov	r0, r4
    d224:	sub	sp, fp, #28
    d228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d22c:	ldr	r4, [r7, #4]
    d230:	mov	r0, r4
    d234:	sub	sp, fp, #28
    d238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d23c:	ldr	r4, [sp, #8]
    d240:	mov	r1, #0
    d244:	str	r1, [r0, #32]
    d248:	mov	r0, r4
    d24c:	sub	sp, fp, #28
    d250:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d254:	mvn	r0, #0
    d258:	bl	4688 <exit@plt>
    d25c:			; <UNDEFINED> instruction: 0x000203b4
    d260:	andeq	r0, r2, r0, lsr #4

0000d264 <btbb_next_survey_result@@Base>:
    d264:	push	{r4, sl, fp, lr}
    d268:	add	fp, sp, #8
    d26c:	ldr	r0, [pc, #52]	; d2a8 <btbb_next_survey_result@@Base+0x44>
    d270:	ldr	r0, [pc, r0]
    d274:	cmp	r0, #0
    d278:	beq	d29c <btbb_next_survey_result@@Base+0x38>
    d27c:	ldr	r4, [r0, #4]
    d280:	ldr	r1, [r0, #16]
    d284:	ldr	r2, [pc, #32]	; d2ac <btbb_next_survey_result@@Base+0x48>
    d288:	add	r2, pc, r2
    d28c:	str	r1, [r2]
    d290:	bl	4550 <free@plt>
    d294:	mov	r0, r4
    d298:	pop	{r4, sl, fp, pc}
    d29c:	mov	r4, #0
    d2a0:	mov	r0, r4
    d2a4:	pop	{r4, sl, fp, pc}
    d2a8:	andeq	pc, r1, r4, ror #29
    d2ac:	andeq	pc, r1, ip, asr #29

0000d2b0 <btbb_process_packet@@Base>:
    d2b0:	push	{r4, r5, r6, sl, fp, lr}
    d2b4:	add	fp, sp, #16
    d2b8:	mov	r5, r0
    d2bc:	ldr	r0, [pc, #408]	; d45c <btbb_process_packet@@Base+0x1ac>
    d2c0:	add	r0, pc, r0
    d2c4:	ldrb	r0, [r0]
    d2c8:	cmp	r0, #1
    d2cc:	bne	d348 <btbb_process_packet@@Base+0x98>
    d2d0:	mov	r0, r5
    d2d4:	bl	4748 <btbb_packet_get_lap@plt>
    d2d8:	bl	476c <get_piconet@plt>
    d2dc:	mov	r6, r0
    d2e0:	ldrb	r0, [r5, #8]
    d2e4:	mov	r2, #1
    d2e8:	and	r1, r0, #7
    d2ec:	add	r0, r6, r0, lsr #3
    d2f0:	ldrb	r3, [r0, #12]!
    d2f4:	tst	r3, r2, lsl r1
    d2f8:	bne	d314 <btbb_process_packet@@Base+0x64>
    d2fc:	lsl	r1, r2, r1
    d300:	orr	r1, r3, r1
    d304:	strb	r1, [r0]
    d308:	ldrb	r0, [r6, #22]
    d30c:	add	r0, r0, #1
    d310:	strb	r0, [r6, #22]
    d314:	mov	r0, r5
    d318:	bl	45a4 <btbb_header_present@plt>
    d31c:	mov	r4, #0
    d320:	cmp	r0, #0
    d324:	beq	d3f8 <btbb_process_packet@@Base+0x148>
    d328:	ldrb	r0, [r6, #4]
    d32c:	tst	r0, #4
    d330:	bne	d3f8 <btbb_process_packet@@Base+0x148>
    d334:	mov	r0, r5
    d338:	mov	r1, r6
    d33c:	bl	4580 <btbb_uap_from_header@plt>
    d340:	mov	r0, r4
    d344:	pop	{r4, r5, r6, sl, fp, pc}
    d348:	mov	r6, r1
    d34c:	mov	r4, #0
    d350:	cmp	r1, #0
    d354:	beq	d3f8 <btbb_process_packet@@Base+0x148>
    d358:	ldrb	r0, [r5, #8]
    d35c:	mov	r2, #1
    d360:	and	r1, r0, #7
    d364:	add	r0, r6, r0, lsr #3
    d368:	ldrb	r3, [r0, #12]!
    d36c:	tst	r3, r2, lsl r1
    d370:	beq	d3d4 <btbb_process_packet@@Base+0x124>
    d374:	ldrb	r0, [r6, #4]
    d378:	tst	r0, #8
    d37c:	beq	d3f8 <btbb_process_packet@@Base+0x148>
    d380:	mov	r0, r5
    d384:	bl	45a4 <btbb_header_present@plt>
    d388:	cmp	r0, #0
    d38c:	beq	d3f8 <btbb_process_packet@@Base+0x148>
    d390:	ldrb	r0, [r6, #5]
    d394:	ldrb	r1, [r6, #28]
    d398:	tst	r0, #64	; 0x40
    d39c:	bne	d400 <btbb_process_packet@@Base+0x150>
    d3a0:	cmp	r1, #0
    d3a4:	beq	d334 <btbb_process_packet@@Base+0x84>
    d3a8:	mov	r0, r5
    d3ac:	mov	r1, r6
    d3b0:	bl	4658 <try_hop@plt>
    d3b4:	ldr	r0, [r6, #4]
    d3b8:	and	r1, r0, #48	; 0x30
    d3bc:	cmp	r1, #48	; 0x30
    d3c0:	orreq	r0, r0, #16384	; 0x4000
    d3c4:	mvneq	r4, #0
    d3c8:	streq	r0, [r6, #4]
    d3cc:	mov	r0, r4
    d3d0:	pop	{r4, r5, r6, sl, fp, pc}
    d3d4:	lsl	r1, r2, r1
    d3d8:	orr	r1, r3, r1
    d3dc:	strb	r1, [r0]
    d3e0:	ldrb	r0, [r6, #22]
    d3e4:	add	r0, r0, #1
    d3e8:	strb	r0, [r6, #22]
    d3ec:	ldrb	r0, [r6, #4]
    d3f0:	tst	r0, #8
    d3f4:	bne	d380 <btbb_process_packet@@Base+0xd0>
    d3f8:	mov	r0, r4
    d3fc:	pop	{r4, r5, r6, sl, fp, pc}
    d400:	mov	r0, r5
    d404:	bl	45ec <btbb_packet_set_uap@plt>
    d408:	mov	r0, r5
    d40c:	mov	r1, #4
    d410:	mov	r2, #1
    d414:	bl	4538 <btbb_packet_set_flag@plt>
    d418:	mov	r0, r5
    d41c:	mov	r1, #5
    d420:	mov	r2, #1
    d424:	bl	4538 <btbb_packet_set_flag@plt>
    d428:	mov	r0, r5
    d42c:	bl	461c <btbb_decode@plt>
    d430:	cmp	r0, #0
    d434:	beq	d448 <btbb_process_packet@@Base+0x198>
    d438:	mov	r0, r5
    d43c:	bl	47d8 <btbb_print_packet@plt>
    d440:	mov	r0, r4
    d444:	pop	{r4, r5, r6, sl, fp, pc}
    d448:	ldr	r0, [pc, #16]	; d460 <btbb_process_packet@@Base+0x1b0>
    d44c:	add	r0, pc, r0
    d450:	bl	4640 <puts@plt>
    d454:	mov	r0, r4
    d458:	pop	{r4, r5, r6, sl, fp, pc}
    d45c:	andeq	pc, r1, ip, lsl #29
    d460:	andeq	r8, r0, ip, lsr r8

0000d464 <lell_packet_new@@Base>:
    d464:	push	{r4, sl, fp, lr}
    d468:	add	fp, sp, #8
    d46c:	mov	r0, #1
    d470:	mov	r1, #104	; 0x68
    d474:	mov	r4, #1
    d478:	bl	44cc <calloc@plt>
    d47c:	str	r4, [r0, #96]	; 0x60
    d480:	pop	{r4, sl, fp, pc}

0000d484 <lell_packet_ref@@Base>:
    d484:	ldr	r1, [r0, #96]	; 0x60
    d488:	add	r1, r1, #1
    d48c:	str	r1, [r0, #96]	; 0x60
    d490:	bx	lr

0000d494 <lell_packet_unref@@Base>:
    d494:	ldr	r1, [r0, #96]	; 0x60
    d498:	subs	r1, r1, #1
    d49c:	str	r1, [r0, #96]	; 0x60
    d4a0:	bxne	lr
    d4a4:	b	4550 <free@plt>

0000d4a8 <lell_allocate_and_decode@@Base>:
    d4a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    d4ac:	add	fp, sp, #24
    d4b0:	mov	r5, r1
    d4b4:	mov	r6, r0
    d4b8:	mov	r0, #1
    d4bc:	mov	r1, #104	; 0x68
    d4c0:	mov	r7, r3
    d4c4:	mov	r8, r2
    d4c8:	mov	r9, #1
    d4cc:	bl	44cc <calloc@plt>
    d4d0:	str	r9, [r0, #96]	; 0x60
    d4d4:	mov	r4, r0
    d4d8:	str	r0, [r7]
    d4dc:	add	r0, r6, #32
    d4e0:	add	r2, r6, #16
    d4e4:	mov	r1, #48	; 0x30
    d4e8:	vld1.8	{d18-d19}, [r0]
    d4ec:	vld1.8	{d20-d21}, [r2]
    d4f0:	vld1.8	{d16-d17}, [r6], r1
    d4f4:	add	r0, r4, #32
    d4f8:	vld1.8	{d22-d23}, [r6]
    d4fc:	vst1.8	{d18-d19}, [r0]
    d500:	add	r0, r4, #16
    d504:	vst1.8	{d20-d21}, [r0]
    d508:	mov	r0, r4
    d50c:	vst1.8	{d16-d17}, [r0], r1
    d510:	mov	r1, #37	; 0x25
    d514:	vst1.8	{d22-d23}, [r0]
    d518:	movw	r0, #2402	; 0x962
    d51c:	cmp	r5, r0
    d520:	beq	d578 <lell_allocate_and_decode@@Base+0xd0>
    d524:	movw	r1, #2425	; 0x979
    d528:	cmp	r5, r1
    d52c:	bhi	d544 <lell_allocate_and_decode@@Base+0x9c>
    d530:	movw	r1, #2404	; 0x964
    d534:	sub	r1, r5, r1
    d538:	add	r1, r1, r1, lsr #31
    d53c:	asr	r1, r1, #1
    d540:	b	d578 <lell_allocate_and_decode@@Base+0xd0>
    d544:	movw	r2, #2426	; 0x97a
    d548:	mov	r1, #38	; 0x26
    d54c:	cmp	r5, r2
    d550:	beq	d578 <lell_allocate_and_decode@@Base+0xd0>
    d554:	lsr	r2, r5, #4
    d558:	mov	r1, #39	; 0x27
    d55c:	cmp	r2, #154	; 0x9a
    d560:	bhi	d578 <lell_allocate_and_decode@@Base+0xd0>
    d564:	movw	r1, #2428	; 0x97c
    d568:	mov	r2, #11
    d56c:	sub	r1, r5, r1
    d570:	add	r1, r1, r1, lsr #31
    d574:	add	r1, r2, r1, lsr #1
    d578:	sub	r0, r5, r0
    d57c:	str	r8, [r4, #76]	; 0x4c
    d580:	strb	r1, [r4, #68]	; 0x44
    d584:	uxtb	r1, r1
    d588:	add	r0, r0, r0, lsr #31
    d58c:	cmp	r1, #36	; 0x24
    d590:	lsr	r0, r0, #1
    d594:	strb	r0, [r4, #69]	; 0x45
    d598:	ldr	r0, [r4]
    d59c:	str	r0, [r4, #64]	; 0x40
    d5a0:	ldrb	r2, [r4, #5]
    d5a4:	bls	d620 <lell_allocate_and_decode@@Base+0x178>
    d5a8:	and	r1, r2, #63	; 0x3f
    d5ac:	str	r1, [r4, #72]	; 0x48
    d5b0:	movw	r1, #48854	; 0xbed6
    d5b4:	movt	r1, #36489	; 0x8e89
    d5b8:	subs	r2, r0, r1
    d5bc:	clz	r2, r2
    d5c0:	lsr	r2, r2, #5
    d5c4:	strb	r2, [r4, #100]	; 0x64
    d5c8:	ldrb	r2, [r4, #4]
    d5cc:	lsr	r3, r2, #7
    d5d0:	str	r3, [r4, #88]	; 0x58
    d5d4:	ubfx	r3, r2, #6, #1
    d5d8:	and	r2, r2, #15
    d5dc:	str	r3, [r4, #84]	; 0x54
    d5e0:	strb	r2, [r4, #80]	; 0x50
    d5e4:	mov	r2, #0
    d5e8:	beq	d618 <lell_allocate_and_decode@@Base+0x170>
    d5ec:	eors	r0, r0, r1
    d5f0:	beq	d614 <lell_allocate_and_decode@@Base+0x16c>
    d5f4:	mov	r1, #0
    d5f8:	mov	r2, r1
    d5fc:	sub	r1, r0, #1
    d600:	ands	r0, r1, r0
    d604:	add	r1, r2, #1
    d608:	bne	d5f8 <lell_allocate_and_decode@@Base+0x150>
    d60c:	tst	r2, #255	; 0xff
    d610:	beq	d640 <lell_allocate_and_decode@@Base+0x198>
    d614:	mov	r2, #32
    d618:	str	r2, [r4, #92]	; 0x5c
    d61c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    d620:	and	r1, r2, #31
    d624:	str	r1, [r4, #72]	; 0x48
    d628:	bl	d660 <lell_packet_is_data@@Base+0x14>
    d62c:	str	r0, [r4, #92]	; 0x5c
    d630:	clz	r0, r0
    d634:	lsr	r0, r0, #5
    d638:	strb	r0, [r4, #100]	; 0x64
    d63c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    d640:	mov	r2, #1
    d644:	str	r2, [r4, #92]	; 0x5c
    d648:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000d64c <lell_packet_is_data@@Base>:
    d64c:	ldrb	r1, [r0, #68]	; 0x44
    d650:	mov	r0, #0
    d654:	cmp	r1, #37	; 0x25
    d658:	movwcc	r0, #1
    d65c:	bx	lr
    d660:	push	{r4, r5, r6, sl, fp, lr}
    d664:	add	fp, sp, #16
    d668:	ldr	r6, [pc, #4048]	; e640 <lell_packet_is_data@@Base+0xff4>
    d66c:	ldr	r1, [pc, #4048]	; e644 <lell_packet_is_data@@Base+0xff8>
    d670:	tst	r0, #1
    d674:	uxtb	r3, r0
    d678:	ubfx	r4, r0, #8, #8
    d67c:	mov	ip, r0
    d680:	movw	lr, #48854	; 0xbed6
    d684:	movt	lr, #36489	; 0x8e89
    d688:	add	r1, pc, r1
    d68c:	add	r6, pc, r6
    d690:	mov	r2, r1
    d694:	moveq	r2, r6
    d698:	tst	r0, #128	; 0x80
    d69c:	mov	r5, r1
    d6a0:	moveq	r5, r6
    d6a4:	ldrb	r2, [r2, r3]
    d6a8:	tst	r0, #32768	; 0x8000
    d6ac:	ubfx	r0, r0, #16, #8
    d6b0:	ldrb	r5, [r5, r4]
    d6b4:	add	r2, r5, r2
    d6b8:	mov	r5, r1
    d6bc:	moveq	r5, r6
    d6c0:	tst	ip, #8388608	; 0x800000
    d6c4:	moveq	r1, r6
    d6c8:	ldrb	r5, [r5, r0]
    d6cc:	eor	r0, r3, r0
    d6d0:	ldrb	r1, [r1, ip, lsr #24]
    d6d4:	add	r2, r2, r5
    d6d8:	add	r1, r2, r1
    d6dc:	eor	r2, r3, r4
    d6e0:	orr	r0, r2, r0
    d6e4:	eor	r2, r3, ip, lsr #24
    d6e8:	subs	r6, r1, #24
    d6ec:	mov	r1, #0
    d6f0:	movls	r6, r1
    d6f4:	eors	r4, ip, lr
    d6f8:	orr	r0, r2, r0
    d6fc:	clz	r0, r0
    d700:	lsr	r2, r0, #5
    d704:	ldr	r0, [pc, #4064]	; e6ec <lell_packet_is_data@@Base+0x10a0>
    d708:	add	r0, pc, r0
    d70c:	ldrb	r3, [r0, ip, lsr #26]
    d710:	beq	d738 <lell_packet_is_data@@Base+0xec>
    d714:	mov	r1, #0
    d718:	sub	r0, r4, #1
    d71c:	mov	r5, r1
    d720:	add	r1, r1, #1
    d724:	ands	r4, r0, r4
    d728:	bne	d718 <lell_packet_is_data@@Base+0xcc>
    d72c:	uxtb	r0, r5
    d730:	clz	r0, r0
    d734:	lsr	r1, r0, #5
    d738:	cmp	ip, lr
    d73c:	mov	r0, #1
    d740:	movweq	r0, #2
    d744:	add	r0, r0, r2
    d748:	mov	r2, ip
    d74c:	sub	r0, r0, r3
    d750:	bfc	r2, #12, #20
    d754:	add	r0, r0, r6
    d758:	add	r0, r0, r1
    d75c:	movw	r1, #2035	; 0x7f3
    d760:	cmp	r2, r1
    d764:	ble	d7a4 <lell_packet_is_data@@Base+0x158>
    d768:	movw	r1, #3063	; 0xbf7
    d76c:	cmp	r2, r1
    d770:	ble	ddc8 <lell_packet_is_data@@Base+0x77c>
    d774:	cmp	r2, #3712	; 0xe80
    d778:	bge	de34 <lell_packet_is_data@@Base+0x7e8>
    d77c:	movw	r1, #3325	; 0xcfd
    d780:	cmp	r2, r1
    d784:	bgt	debc <lell_packet_is_data@@Base+0x870>
    d788:	movw	r1, #3064	; 0xbf8
    d78c:	sub	r1, r2, r1
    d790:	cmp	r1, #16
    d794:	bcc	df94 <lell_packet_is_data@@Base+0x948>
    d798:	cmp	r2, #3200	; 0xc80
    d79c:	beq	df94 <lell_packet_is_data@@Base+0x948>
    d7a0:	b	df98 <lell_packet_is_data@@Base+0x94c>
    d7a4:	movw	r1, #765	; 0x2fd
    d7a8:	cmp	r2, r1
    d7ac:	bgt	ddfc <lell_packet_is_data@@Base+0x7b0>
    d7b0:	cmp	r2, #384	; 0x180
    d7b4:	bhi	df0c <lell_packet_is_data@@Base+0x8c0>
    d7b8:	add	r1, pc, #4
    d7bc:	ldr	r2, [r1, r2, lsl #2]
    d7c0:	add	pc, r1, r2
    d7c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7e4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7e8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7ec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7f0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d7fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d800:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d804:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d808:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d80c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d810:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d814:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d818:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d81c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d820:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d824:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d828:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d82c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d830:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d834:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d838:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d83c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d840:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d844:	ldrdeq	r0, [r0], -r4
    d848:	ldrdeq	r0, [r0], -r4
    d84c:	ldrdeq	r0, [r0], -r4
    d850:	ldrdeq	r0, [r0], -r4
    d854:	ldrdeq	r0, [r0], -r4
    d858:	ldrdeq	r0, [r0], -r4
    d85c:	ldrdeq	r0, [r0], -r4
    d860:	ldrdeq	r0, [r0], -r4
    d864:	ldrdeq	r0, [r0], -r4
    d868:	ldrdeq	r0, [r0], -r4
    d86c:	ldrdeq	r0, [r0], -r4
    d870:	ldrdeq	r0, [r0], -r4
    d874:	ldrdeq	r0, [r0], -r4
    d878:	ldrdeq	r0, [r0], -r4
    d87c:	ldrdeq	r0, [r0], -r4
    d880:	ldrdeq	r0, [r0], -r4
    d884:	ldrdeq	r0, [r0], -r4
    d888:	ldrdeq	r0, [r0], -r4
    d88c:	ldrdeq	r0, [r0], -r4
    d890:	ldrdeq	r0, [r0], -r4
    d894:	ldrdeq	r0, [r0], -r4
    d898:	ldrdeq	r0, [r0], -r4
    d89c:	ldrdeq	r0, [r0], -r4
    d8a0:	ldrdeq	r0, [r0], -r4
    d8a4:	ldrdeq	r0, [r0], -r4
    d8a8:	ldrdeq	r0, [r0], -r4
    d8ac:	ldrdeq	r0, [r0], -r4
    d8b0:	ldrdeq	r0, [r0], -r4
    d8b4:	ldrdeq	r0, [r0], -r4
    d8b8:	ldrdeq	r0, [r0], -r4
    d8bc:	ldrdeq	r0, [r0], -r4
    d8c0:	ldrdeq	r0, [r0], -r4
    d8c4:	ldrdeq	r0, [r0], -r4
    d8c8:	ldrdeq	r0, [r0], -r4
    d8cc:	ldrdeq	r0, [r0], -r4
    d8d0:	ldrdeq	r0, [r0], -r4
    d8d4:	ldrdeq	r0, [r0], -r4
    d8d8:	ldrdeq	r0, [r0], -r4
    d8dc:	ldrdeq	r0, [r0], -r4
    d8e0:	ldrdeq	r0, [r0], -r4
    d8e4:	ldrdeq	r0, [r0], -r4
    d8e8:	ldrdeq	r0, [r0], -r4
    d8ec:	ldrdeq	r0, [r0], -r4
    d8f0:	ldrdeq	r0, [r0], -r4
    d8f4:	ldrdeq	r0, [r0], -r4
    d8f8:	ldrdeq	r0, [r0], -r4
    d8fc:	ldrdeq	r0, [r0], -r4
    d900:	ldrdeq	r0, [r0], -r4
    d904:	ldrdeq	r0, [r0], -r4
    d908:	ldrdeq	r0, [r0], -r4
    d90c:	ldrdeq	r0, [r0], -r4
    d910:	ldrdeq	r0, [r0], -r4
    d914:	ldrdeq	r0, [r0], -r4
    d918:	ldrdeq	r0, [r0], -r4
    d91c:	ldrdeq	r0, [r0], -r4
    d920:	ldrdeq	r0, [r0], -r4
    d924:	ldrdeq	r0, [r0], -r4
    d928:	ldrdeq	r0, [r0], -r4
    d92c:	ldrdeq	r0, [r0], -r4
    d930:	ldrdeq	r0, [r0], -r4
    d934:	ldrdeq	r0, [r0], -r4
    d938:	ldrdeq	r0, [r0], -r4
    d93c:	ldrdeq	r0, [r0], -r4
    d940:	ldrdeq	r0, [r0], -r4
    d944:	ldrdeq	r0, [r0], -r4
    d948:	ldrdeq	r0, [r0], -r4
    d94c:	ldrdeq	r0, [r0], -r4
    d950:	ldrdeq	r0, [r0], -r4
    d954:	ldrdeq	r0, [r0], -r4
    d958:	ldrdeq	r0, [r0], -r4
    d95c:	ldrdeq	r0, [r0], -r4
    d960:	ldrdeq	r0, [r0], -r4
    d964:	ldrdeq	r0, [r0], -r4
    d968:	ldrdeq	r0, [r0], -r4
    d96c:	ldrdeq	r0, [r0], -r4
    d970:	ldrdeq	r0, [r0], -r4
    d974:	ldrdeq	r0, [r0], -r4
    d978:	ldrdeq	r0, [r0], -r4
    d97c:	ldrdeq	r0, [r0], -r4
    d980:	ldrdeq	r0, [r0], -r4
    d984:	ldrdeq	r0, [r0], -r4
    d988:	ldrdeq	r0, [r0], -r4
    d98c:	ldrdeq	r0, [r0], -r4
    d990:	ldrdeq	r0, [r0], -r4
    d994:	ldrdeq	r0, [r0], -r4
    d998:	ldrdeq	r0, [r0], -r4
    d99c:	ldrdeq	r0, [r0], -r4
    d9a0:	ldrdeq	r0, [r0], -r4
    d9a4:	ldrdeq	r0, [r0], -r4
    d9a8:	ldrdeq	r0, [r0], -r4
    d9ac:	ldrdeq	r0, [r0], -r4
    d9b0:	ldrdeq	r0, [r0], -r4
    d9b4:	ldrdeq	r0, [r0], -r4
    d9b8:	ldrdeq	r0, [r0], -r4
    d9bc:	ldrdeq	r0, [r0], -r4
    d9c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d9c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d9c8:	ldrdeq	r0, [r0], -r4
    d9cc:	ldrdeq	r0, [r0], -r4
    d9d0:	ldrdeq	r0, [r0], -r4
    d9d4:	ldrdeq	r0, [r0], -r4
    d9d8:	ldrdeq	r0, [r0], -r4
    d9dc:	ldrdeq	r0, [r0], -r4
    d9e0:	ldrdeq	r0, [r0], -r4
    d9e4:	ldrdeq	r0, [r0], -r4
    d9e8:	ldrdeq	r0, [r0], -r4
    d9ec:	ldrdeq	r0, [r0], -r4
    d9f0:	ldrdeq	r0, [r0], -r4
    d9f4:	ldrdeq	r0, [r0], -r4
    d9f8:	ldrdeq	r0, [r0], -r4
    d9fc:	ldrdeq	r0, [r0], -r4
    da00:	ldrdeq	r0, [r0], -r4
    da04:	ldrdeq	r0, [r0], -r4
    da08:	ldrdeq	r0, [r0], -r4
    da0c:	ldrdeq	r0, [r0], -r4
    da10:	ldrdeq	r0, [r0], -r4
    da14:	ldrdeq	r0, [r0], -r4
    da18:	ldrdeq	r0, [r0], -r4
    da1c:	ldrdeq	r0, [r0], -r4
    da20:	ldrdeq	r0, [r0], -r4
    da24:	ldrdeq	r0, [r0], -r4
    da28:	ldrdeq	r0, [r0], -r4
    da2c:	ldrdeq	r0, [r0], -r4
    da30:	ldrdeq	r0, [r0], -r4
    da34:	ldrdeq	r0, [r0], -r4
    da38:	ldrdeq	r0, [r0], -r4
    da3c:	ldrdeq	r0, [r0], -r4
    da40:	ldrdeq	r0, [r0], -r4
    da44:	ldrdeq	r0, [r0], -r4
    da48:	ldrdeq	r0, [r0], -r4
    da4c:	ldrdeq	r0, [r0], -r4
    da50:	ldrdeq	r0, [r0], -r4
    da54:	ldrdeq	r0, [r0], -r4
    da58:	ldrdeq	r0, [r0], -r4
    da5c:	ldrdeq	r0, [r0], -r4
    da60:	ldrdeq	r0, [r0], -r4
    da64:	ldrdeq	r0, [r0], -r4
    da68:	ldrdeq	r0, [r0], -r4
    da6c:	ldrdeq	r0, [r0], -r4
    da70:	ldrdeq	r0, [r0], -r4
    da74:	ldrdeq	r0, [r0], -r4
    da78:	ldrdeq	r0, [r0], -r4
    da7c:	ldrdeq	r0, [r0], -r4
    da80:	ldrdeq	r0, [r0], -r4
    da84:	ldrdeq	r0, [r0], -r4
    da88:	ldrdeq	r0, [r0], -r4
    da8c:	ldrdeq	r0, [r0], -r4
    da90:	ldrdeq	r0, [r0], -r4
    da94:	ldrdeq	r0, [r0], -r4
    da98:	ldrdeq	r0, [r0], -r4
    da9c:	ldrdeq	r0, [r0], -r4
    daa0:	ldrdeq	r0, [r0], -r4
    daa4:	ldrdeq	r0, [r0], -r4
    daa8:	ldrdeq	r0, [r0], -r4
    daac:	ldrdeq	r0, [r0], -r4
    dab0:	ldrdeq	r0, [r0], -r4
    dab4:	ldrdeq	r0, [r0], -r4
    dab8:	ldrdeq	r0, [r0], -r4
    dabc:	ldrdeq	r0, [r0], -r4
    dac0:	ldrdeq	r0, [r0], -r4
    dac4:	ldrdeq	r0, [r0], -r4
    dac8:	ldrdeq	r0, [r0], -r4
    dacc:	ldrdeq	r0, [r0], -r4
    dad0:	ldrdeq	r0, [r0], -r4
    dad4:	ldrdeq	r0, [r0], -r4
    dad8:	ldrdeq	r0, [r0], -r4
    dadc:	ldrdeq	r0, [r0], -r4
    dae0:	ldrdeq	r0, [r0], -r4
    dae4:	ldrdeq	r0, [r0], -r4
    dae8:	ldrdeq	r0, [r0], -r4
    daec:	ldrdeq	r0, [r0], -r4
    daf0:	ldrdeq	r0, [r0], -r4
    daf4:	ldrdeq	r0, [r0], -r4
    daf8:	ldrdeq	r0, [r0], -r4
    dafc:	ldrdeq	r0, [r0], -r4
    db00:	ldrdeq	r0, [r0], -r4
    db04:	ldrdeq	r0, [r0], -r4
    db08:	ldrdeq	r0, [r0], -r4
    db0c:	ldrdeq	r0, [r0], -r4
    db10:	ldrdeq	r0, [r0], -r4
    db14:	ldrdeq	r0, [r0], -r4
    db18:	ldrdeq	r0, [r0], -r4
    db1c:	ldrdeq	r0, [r0], -r4
    db20:	ldrdeq	r0, [r0], -r4
    db24:	ldrdeq	r0, [r0], -r4
    db28:	ldrdeq	r0, [r0], -r4
    db2c:	ldrdeq	r0, [r0], -r4
    db30:	ldrdeq	r0, [r0], -r4
    db34:	ldrdeq	r0, [r0], -r4
    db38:	ldrdeq	r0, [r0], -r4
    db3c:	ldrdeq	r0, [r0], -r4
    db40:	ldrdeq	r0, [r0], -r4
    db44:	ldrdeq	r0, [r0], -r4
    db48:	ldrdeq	r0, [r0], -r4
    db4c:	ldrdeq	r0, [r0], -r4
    db50:	ldrdeq	r0, [r0], -r4
    db54:	ldrdeq	r0, [r0], -r4
    db58:	ldrdeq	r0, [r0], -r4
    db5c:	ldrdeq	r0, [r0], -r4
    db60:	ldrdeq	r0, [r0], -r4
    db64:	ldrdeq	r0, [r0], -r4
    db68:	ldrdeq	r0, [r0], -r4
    db6c:	ldrdeq	r0, [r0], -r4
    db70:	ldrdeq	r0, [r0], -r4
    db74:	ldrdeq	r0, [r0], -r4
    db78:	ldrdeq	r0, [r0], -r4
    db7c:	ldrdeq	r0, [r0], -r4
    db80:	ldrdeq	r0, [r0], -r4
    db84:	ldrdeq	r0, [r0], -r4
    db88:	ldrdeq	r0, [r0], -r4
    db8c:	ldrdeq	r0, [r0], -r4
    db90:	ldrdeq	r0, [r0], -r4
    db94:	ldrdeq	r0, [r0], -r4
    db98:	ldrdeq	r0, [r0], -r4
    db9c:	ldrdeq	r0, [r0], -r4
    dba0:	ldrdeq	r0, [r0], -r4
    dba4:	ldrdeq	r0, [r0], -r4
    dba8:	ldrdeq	r0, [r0], -r4
    dbac:	ldrdeq	r0, [r0], -r4
    dbb0:	ldrdeq	r0, [r0], -r4
    dbb4:	ldrdeq	r0, [r0], -r4
    dbb8:	ldrdeq	r0, [r0], -r4
    dbbc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dbc0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dbc4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dbc8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    dbcc:	ldrdeq	r0, [r0], -r4
    dbd0:	ldrdeq	r0, [r0], -r4
    dbd4:	ldrdeq	r0, [r0], -r4
    dbd8:	ldrdeq	r0, [r0], -r4
    dbdc:	ldrdeq	r0, [r0], -r4
    dbe0:	ldrdeq	r0, [r0], -r4
    dbe4:	ldrdeq	r0, [r0], -r4
    dbe8:	ldrdeq	r0, [r0], -r4
    dbec:	ldrdeq	r0, [r0], -r4
    dbf0:	ldrdeq	r0, [r0], -r4
    dbf4:	ldrdeq	r0, [r0], -r4
    dbf8:	ldrdeq	r0, [r0], -r4
    dbfc:	ldrdeq	r0, [r0], -r4
    dc00:	ldrdeq	r0, [r0], -r4
    dc04:	ldrdeq	r0, [r0], -r4
    dc08:	ldrdeq	r0, [r0], -r4
    dc0c:	ldrdeq	r0, [r0], -r4
    dc10:	ldrdeq	r0, [r0], -r4
    dc14:	ldrdeq	r0, [r0], -r4
    dc18:	ldrdeq	r0, [r0], -r4
    dc1c:	ldrdeq	r0, [r0], -r4
    dc20:	ldrdeq	r0, [r0], -r4
    dc24:	ldrdeq	r0, [r0], -r4
    dc28:	ldrdeq	r0, [r0], -r4
    dc2c:	ldrdeq	r0, [r0], -r4
    dc30:	ldrdeq	r0, [r0], -r4
    dc34:	ldrdeq	r0, [r0], -r4
    dc38:	ldrdeq	r0, [r0], -r4
    dc3c:	ldrdeq	r0, [r0], -r4
    dc40:	ldrdeq	r0, [r0], -r4
    dc44:	ldrdeq	r0, [r0], -r4
    dc48:	ldrdeq	r0, [r0], -r4
    dc4c:	ldrdeq	r0, [r0], -r4
    dc50:	ldrdeq	r0, [r0], -r4
    dc54:	ldrdeq	r0, [r0], -r4
    dc58:	ldrdeq	r0, [r0], -r4
    dc5c:	ldrdeq	r0, [r0], -r4
    dc60:	ldrdeq	r0, [r0], -r4
    dc64:	ldrdeq	r0, [r0], -r4
    dc68:	ldrdeq	r0, [r0], -r4
    dc6c:	ldrdeq	r0, [r0], -r4
    dc70:	ldrdeq	r0, [r0], -r4
    dc74:	ldrdeq	r0, [r0], -r4
    dc78:	ldrdeq	r0, [r0], -r4
    dc7c:	ldrdeq	r0, [r0], -r4
    dc80:	ldrdeq	r0, [r0], -r4
    dc84:	ldrdeq	r0, [r0], -r4
    dc88:	ldrdeq	r0, [r0], -r4
    dc8c:	ldrdeq	r0, [r0], -r4
    dc90:	ldrdeq	r0, [r0], -r4
    dc94:	ldrdeq	r0, [r0], -r4
    dc98:	ldrdeq	r0, [r0], -r4
    dc9c:	ldrdeq	r0, [r0], -r4
    dca0:	ldrdeq	r0, [r0], -r4
    dca4:	ldrdeq	r0, [r0], -r4
    dca8:	ldrdeq	r0, [r0], -r4
    dcac:	ldrdeq	r0, [r0], -r4
    dcb0:	ldrdeq	r0, [r0], -r4
    dcb4:	ldrdeq	r0, [r0], -r4
    dcb8:	ldrdeq	r0, [r0], -r4
    dcbc:	ldrdeq	r0, [r0], -r4
    dcc0:	ldrdeq	r0, [r0], -r4
    dcc4:	ldrdeq	r0, [r0], -r4
    dcc8:	ldrdeq	r0, [r0], -r4
    dccc:	ldrdeq	r0, [r0], -r4
    dcd0:	ldrdeq	r0, [r0], -r4
    dcd4:	ldrdeq	r0, [r0], -r4
    dcd8:	ldrdeq	r0, [r0], -r4
    dcdc:	ldrdeq	r0, [r0], -r4
    dce0:	ldrdeq	r0, [r0], -r4
    dce4:	ldrdeq	r0, [r0], -r4
    dce8:	ldrdeq	r0, [r0], -r4
    dcec:	ldrdeq	r0, [r0], -r4
    dcf0:	ldrdeq	r0, [r0], -r4
    dcf4:	ldrdeq	r0, [r0], -r4
    dcf8:	ldrdeq	r0, [r0], -r4
    dcfc:	ldrdeq	r0, [r0], -r4
    dd00:	ldrdeq	r0, [r0], -r4
    dd04:	ldrdeq	r0, [r0], -r4
    dd08:	ldrdeq	r0, [r0], -r4
    dd0c:	ldrdeq	r0, [r0], -r4
    dd10:	ldrdeq	r0, [r0], -r4
    dd14:	ldrdeq	r0, [r0], -r4
    dd18:	ldrdeq	r0, [r0], -r4
    dd1c:	ldrdeq	r0, [r0], -r4
    dd20:	ldrdeq	r0, [r0], -r4
    dd24:	ldrdeq	r0, [r0], -r4
    dd28:	ldrdeq	r0, [r0], -r4
    dd2c:	ldrdeq	r0, [r0], -r4
    dd30:	ldrdeq	r0, [r0], -r4
    dd34:	ldrdeq	r0, [r0], -r4
    dd38:	ldrdeq	r0, [r0], -r4
    dd3c:	ldrdeq	r0, [r0], -r4
    dd40:	ldrdeq	r0, [r0], -r4
    dd44:	ldrdeq	r0, [r0], -r4
    dd48:	ldrdeq	r0, [r0], -r4
    dd4c:	ldrdeq	r0, [r0], -r4
    dd50:	ldrdeq	r0, [r0], -r4
    dd54:	ldrdeq	r0, [r0], -r4
    dd58:	ldrdeq	r0, [r0], -r4
    dd5c:	ldrdeq	r0, [r0], -r4
    dd60:	ldrdeq	r0, [r0], -r4
    dd64:	ldrdeq	r0, [r0], -r4
    dd68:	ldrdeq	r0, [r0], -r4
    dd6c:	ldrdeq	r0, [r0], -r4
    dd70:	ldrdeq	r0, [r0], -r4
    dd74:	ldrdeq	r0, [r0], -r4
    dd78:	ldrdeq	r0, [r0], -r4
    dd7c:	ldrdeq	r0, [r0], -r4
    dd80:	ldrdeq	r0, [r0], -r4
    dd84:	ldrdeq	r0, [r0], -r4
    dd88:	ldrdeq	r0, [r0], -r4
    dd8c:	ldrdeq	r0, [r0], -r4
    dd90:	ldrdeq	r0, [r0], -r4
    dd94:	ldrdeq	r0, [r0], -r4
    dd98:	ldrdeq	r0, [r0], -r4
    dd9c:	ldrdeq	r0, [r0], -r4
    dda0:	ldrdeq	r0, [r0], -r4
    dda4:	ldrdeq	r0, [r0], -r4
    dda8:	ldrdeq	r0, [r0], -r4
    ddac:	ldrdeq	r0, [r0], -r4
    ddb0:	ldrdeq	r0, [r0], -r4
    ddb4:	ldrdeq	r0, [r0], -r4
    ddb8:	ldrdeq	r0, [r0], -r4
    ddbc:	ldrdeq	r0, [r0], -r4
    ddc0:	ldrdeq	r0, [r0], -r4
    ddc4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ddc8:	cmp	r2, #2432	; 0x980
    ddcc:	bge	de90 <lell_packet_is_data@@Base+0x844>
    ddd0:	movw	r1, #2036	; 0x7f4
    ddd4:	sub	r1, r2, r1
    ddd8:	cmp	r1, #28
    dddc:	bcc	df94 <lell_packet_is_data@@Base+0x948>
    dde0:	movw	r1, #2302	; 0x8fe
    dde4:	sub	r1, r2, r1
    dde8:	cmp	r1, #4
    ddec:	bcc	df94 <lell_packet_is_data@@Base+0x948>
    ddf0:	cmp	r2, #2176	; 0x880
    ddf4:	beq	df94 <lell_packet_is_data@@Base+0x948>
    ddf8:	b	df98 <lell_packet_is_data@@Base+0x94c>
    ddfc:	cmp	r2, #1152	; 0x480
    de00:	bge	de60 <lell_packet_is_data@@Base+0x814>
    de04:	sub	r1, r2, #1016	; 0x3f8
    de08:	cmp	r1, #15
    de0c:	bhi	de18 <lell_packet_is_data@@Base+0x7cc>
    de10:	cmp	r1, #9
    de14:	bne	df94 <lell_packet_is_data@@Base+0x948>
    de18:	movw	r1, #766	; 0x2fe
    de1c:	sub	r1, r2, r1
    de20:	cmp	r1, #4
    de24:	bcc	df94 <lell_packet_is_data@@Base+0x948>
    de28:	cmp	r2, #896	; 0x380
    de2c:	beq	df94 <lell_packet_is_data@@Base+0x948>
    de30:	b	df98 <lell_packet_is_data@@Base+0x94c>
    de34:	cmp	r2, #4064	; 0xfe0
    de38:	blt	df74 <lell_packet_is_data@@Base+0x928>
    de3c:	sub	r1, r2, #4064	; 0xfe0
    de40:	cmp	r1, #31
    de44:	bhi	df98 <lell_packet_is_data@@Base+0x94c>
    de48:	movw	r3, #1
    de4c:	mov	r2, #1
    de50:	movt	r3, #65535	; 0xffff
    de54:	tst	r3, r2, lsl r1
    de58:	addne	r0, r0, #1
    de5c:	b	df98 <lell_packet_is_data@@Base+0x94c>
    de60:	movw	r1, #1531	; 0x5fb
    de64:	cmp	r2, r1
    de68:	ble	df2c <lell_packet_is_data@@Base+0x8e0>
    de6c:	cmp	r2, #1664	; 0x680
    de70:	bge	df50 <lell_packet_is_data@@Base+0x904>
    de74:	movw	r1, #1532	; 0x5fc
    de78:	sub	r1, r2, r1
    de7c:	cmp	r1, #7
    de80:	bhi	df98 <lell_packet_is_data@@Base+0x94c>
    de84:	cmp	r1, #4
    de88:	bne	df94 <lell_packet_is_data@@Base+0x948>
    de8c:	b	df98 <lell_packet_is_data@@Base+0x94c>
    de90:	cmp	r2, #2688	; 0xa80
    de94:	bge	dee8 <lell_packet_is_data@@Base+0x89c>
    de98:	movw	r1, #2556	; 0x9fc
    de9c:	sub	r1, r2, r1
    dea0:	cmp	r1, #7
    dea4:	bhi	deb0 <lell_packet_is_data@@Base+0x864>
    dea8:	cmp	r1, #4
    deac:	bne	df94 <lell_packet_is_data@@Base+0x948>
    deb0:	cmp	r2, #2432	; 0x980
    deb4:	beq	df94 <lell_packet_is_data@@Base+0x948>
    deb8:	b	df98 <lell_packet_is_data@@Base+0x94c>
    debc:	movw	r1, #3580	; 0xdfc
    dec0:	sub	r1, r2, r1
    dec4:	cmp	r1, #8
    dec8:	bcc	df94 <lell_packet_is_data@@Base+0x948>
    decc:	movw	r1, #3326	; 0xcfe
    ded0:	sub	r1, r2, r1
    ded4:	cmp	r1, #4
    ded8:	bcc	df94 <lell_packet_is_data@@Base+0x948>
    dedc:	cmp	r2, #3456	; 0xd80
    dee0:	beq	df94 <lell_packet_is_data@@Base+0x948>
    dee4:	b	df98 <lell_packet_is_data@@Base+0x94c>
    dee8:	movw	r1, #2814	; 0xafe
    deec:	sub	r1, r2, r1
    def0:	cmp	r1, #4
    def4:	bcc	df94 <lell_packet_is_data@@Base+0x948>
    def8:	cmp	r2, #2688	; 0xa80
    defc:	beq	df94 <lell_packet_is_data@@Base+0x948>
    df00:	cmp	r2, #2944	; 0xb80
    df04:	beq	df94 <lell_packet_is_data@@Base+0x948>
    df08:	b	df98 <lell_packet_is_data@@Base+0x94c>
    df0c:	sub	r1, r2, #508	; 0x1fc
    df10:	cmp	r1, #7
    df14:	bhi	df20 <lell_packet_is_data@@Base+0x8d4>
    df18:	cmp	r1, #4
    df1c:	bne	df94 <lell_packet_is_data@@Base+0x948>
    df20:	cmp	r2, #640	; 0x280
    df24:	beq	df94 <lell_packet_is_data@@Base+0x948>
    df28:	b	df98 <lell_packet_is_data@@Base+0x94c>
    df2c:	movw	r1, #1278	; 0x4fe
    df30:	sub	r1, r2, r1
    df34:	cmp	r1, #4
    df38:	bcc	df94 <lell_packet_is_data@@Base+0x948>
    df3c:	cmp	r2, #1152	; 0x480
    df40:	beq	df94 <lell_packet_is_data@@Base+0x948>
    df44:	cmp	r2, #1408	; 0x580
    df48:	beq	df94 <lell_packet_is_data@@Base+0x948>
    df4c:	b	df98 <lell_packet_is_data@@Base+0x94c>
    df50:	movw	r1, #1790	; 0x6fe
    df54:	sub	r1, r2, r1
    df58:	cmp	r1, #4
    df5c:	bcc	df94 <lell_packet_is_data@@Base+0x948>
    df60:	cmp	r2, #1664	; 0x680
    df64:	beq	df94 <lell_packet_is_data@@Base+0x948>
    df68:	cmp	r2, #1920	; 0x780
    df6c:	beq	df94 <lell_packet_is_data@@Base+0x948>
    df70:	b	df98 <lell_packet_is_data@@Base+0x94c>
    df74:	movw	r1, #3838	; 0xefe
    df78:	sub	r1, r2, r1
    df7c:	cmp	r1, #4
    df80:	bcc	df94 <lell_packet_is_data@@Base+0x948>
    df84:	cmp	r2, #3712	; 0xe80
    df88:	beq	df94 <lell_packet_is_data@@Base+0x948>
    df8c:	cmp	r2, #3968	; 0xf80
    df90:	bne	df98 <lell_packet_is_data@@Base+0x94c>
    df94:	add	r0, r0, #1
    df98:	ubfx	r3, ip, #4, #12
    df9c:	movw	r1, #2035	; 0x7f3
    dfa0:	lsr	r2, ip, #8
    dfa4:	cmp	r3, r1
    dfa8:	ble	dfe8 <lell_packet_is_data@@Base+0x99c>
    dfac:	movw	r1, #3063	; 0xbf7
    dfb0:	cmp	r3, r1
    dfb4:	ble	e60c <lell_packet_is_data@@Base+0xfc0>
    dfb8:	cmp	r3, #3712	; 0xe80
    dfbc:	bge	e680 <lell_packet_is_data@@Base+0x1034>
    dfc0:	movw	r1, #3325	; 0xcfd
    dfc4:	cmp	r3, r1
    dfc8:	bgt	e71c <lell_packet_is_data@@Base+0x10d0>
    dfcc:	movw	r1, #3064	; 0xbf8
    dfd0:	sub	r1, r3, r1
    dfd4:	cmp	r1, #16
    dfd8:	bcc	e7f4 <lell_packet_is_data@@Base+0x11a8>
    dfdc:	cmp	r3, #3200	; 0xc80
    dfe0:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    dfe4:	b	e7f8 <lell_packet_is_data@@Base+0x11ac>
    dfe8:	movw	r1, #765	; 0x2fd
    dfec:	cmp	r3, r1
    dff0:	bgt	e648 <lell_packet_is_data@@Base+0xffc>
    dff4:	cmp	r3, #384	; 0x180
    dff8:	bhi	e76c <lell_packet_is_data@@Base+0x1120>
    dffc:	add	r1, pc, #4
    e000:	ldr	r3, [r1, r3, lsl #2]
    e004:	add	pc, r1, r3
    e008:	andeq	r0, r0, ip, ror #15
    e00c:	andeq	r0, r0, ip, ror #15
    e010:	andeq	r0, r0, ip, ror #15
    e014:	andeq	r0, r0, ip, ror #15
    e018:	andeq	r0, r0, ip, ror #15
    e01c:	andeq	r0, r0, ip, ror #15
    e020:	andeq	r0, r0, ip, ror #15
    e024:	andeq	r0, r0, ip, ror #15
    e028:	andeq	r0, r0, ip, ror #15
    e02c:	andeq	r0, r0, ip, ror #15
    e030:	andeq	r0, r0, ip, ror #15
    e034:	andeq	r0, r0, ip, ror #15
    e038:	andeq	r0, r0, ip, ror #15
    e03c:	andeq	r0, r0, ip, ror #15
    e040:	andeq	r0, r0, ip, ror #15
    e044:	andeq	r0, r0, ip, ror #15
    e048:	andeq	r0, r0, ip, ror #15
    e04c:	andeq	r0, r0, ip, ror #15
    e050:	andeq	r0, r0, ip, ror #15
    e054:	andeq	r0, r0, ip, ror #15
    e058:	andeq	r0, r0, ip, ror #15
    e05c:	andeq	r0, r0, ip, ror #15
    e060:	andeq	r0, r0, ip, ror #15
    e064:	andeq	r0, r0, ip, ror #15
    e068:	andeq	r0, r0, ip, ror #15
    e06c:	andeq	r0, r0, ip, ror #15
    e070:	andeq	r0, r0, ip, ror #15
    e074:	andeq	r0, r0, ip, ror #15
    e078:	andeq	r0, r0, ip, ror #15
    e07c:	andeq	r0, r0, ip, ror #15
    e080:	andeq	r0, r0, ip, ror #15
    e084:	andeq	r0, r0, ip, ror #15
    e088:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e08c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e090:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e094:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e098:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e09c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e100:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e104:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e108:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e10c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e110:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e114:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e118:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e11c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e120:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e124:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e128:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e12c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e130:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e134:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e138:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e13c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e140:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e144:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e148:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e14c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e150:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e154:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e158:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e15c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e160:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e164:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e168:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e16c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e170:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e174:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e178:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e17c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e180:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e184:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e188:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e18c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e190:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e194:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e198:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e19c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e1fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e200:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e204:	andeq	r0, r0, ip, ror #15
    e208:	andeq	r0, r0, ip, ror #15
    e20c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e210:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e214:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e218:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e21c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e220:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e224:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e228:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e22c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e230:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e234:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e238:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e23c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e240:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e244:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e248:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e24c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e250:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e254:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e258:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e25c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e260:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e264:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e268:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e26c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e270:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e274:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e278:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e27c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e280:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e284:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e288:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e28c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e290:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e294:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e298:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e29c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e2fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e300:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e304:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e308:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e30c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e310:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e314:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e318:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e31c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e320:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e324:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e328:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e32c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e330:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e334:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e338:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e33c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e340:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e344:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e348:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e34c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e350:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e354:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e358:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e35c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e360:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e364:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e368:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e36c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e370:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e374:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e378:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e37c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e380:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e384:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e388:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e38c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e390:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e394:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e398:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e39c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e3fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e400:	andeq	r0, r0, ip, ror #15
    e404:	andeq	r0, r0, ip, ror #15
    e408:	andeq	r0, r0, ip, ror #15
    e40c:	andeq	r0, r0, ip, ror #15
    e410:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e414:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e418:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e41c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e420:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e424:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e428:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e42c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e430:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e434:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e438:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e43c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e440:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e444:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e448:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e44c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e450:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e454:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e458:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e45c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e460:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e464:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e468:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e46c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e470:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e474:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e478:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e47c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e480:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e484:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e488:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e48c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e490:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e494:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e498:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e49c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e4fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e500:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e504:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e508:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e50c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e510:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e514:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e518:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e51c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e520:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e524:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e528:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e52c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e530:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e534:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e538:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e53c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e540:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e544:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e548:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e54c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e550:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e554:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e558:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e55c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e560:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e564:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e568:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e56c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e570:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e574:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e578:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e57c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e580:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e584:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e588:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e58c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e590:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e594:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e598:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e59c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5a4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5a8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5ac:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5b0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5b4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5b8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5bc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5c4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5d8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5e0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5e8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5f0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e5fc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e600:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e604:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e608:	andeq	r0, r0, ip, ror #15
    e60c:	cmp	r3, #2432	; 0x980
    e610:	bge	e6f0 <lell_packet_is_data@@Base+0x10a4>
    e614:	movw	r1, #2036	; 0x7f4
    e618:	sub	r1, r3, r1
    e61c:	cmp	r1, #28
    e620:	bcc	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e624:	movw	r1, #2302	; 0x8fe
    e628:	sub	r1, r3, r1
    e62c:	cmp	r1, #4
    e630:	bcc	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e634:	cmp	r3, #2176	; 0x880
    e638:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e63c:	b	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e640:	andeq	r8, r0, r1, asr #29
    e644:	andeq	r8, r0, sl, asr r9
    e648:	cmp	r3, #1152	; 0x480
    e64c:	bge	e6bc <lell_packet_is_data@@Base+0x1070>
    e650:	sub	r1, r3, #1016	; 0x3f8
    e654:	cmp	r1, #15
    e658:	bhi	e664 <lell_packet_is_data@@Base+0x1018>
    e65c:	cmp	r1, #9
    e660:	bne	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e664:	movw	r1, #766	; 0x2fe
    e668:	sub	r1, r3, r1
    e66c:	cmp	r1, #4
    e670:	bcc	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e674:	cmp	r3, #896	; 0x380
    e678:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e67c:	b	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e680:	cmp	r3, #4064	; 0xfe0
    e684:	blt	e7d4 <lell_packet_is_data@@Base+0x1188>
    e688:	sub	r1, r3, #4064	; 0xfe0
    e68c:	cmp	r1, #31
    e690:	bhi	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e694:	movw	r6, #1
    e698:	mov	r3, #1
    e69c:	movt	r6, #65535	; 0xffff
    e6a0:	tst	r6, r3, lsl r1
    e6a4:	addne	r0, r0, #1
    e6a8:	bfc	r2, #12, #20
    e6ac:	movw	r1, #2035	; 0x7f3
    e6b0:	cmp	r2, r1
    e6b4:	bgt	e808 <lell_packet_is_data@@Base+0x11bc>
    e6b8:	b	e844 <lell_packet_is_data@@Base+0x11f8>
    e6bc:	movw	r1, #1531	; 0x5fb
    e6c0:	cmp	r3, r1
    e6c4:	ble	e78c <lell_packet_is_data@@Base+0x1140>
    e6c8:	cmp	r3, #1664	; 0x680
    e6cc:	bge	e7b0 <lell_packet_is_data@@Base+0x1164>
    e6d0:	movw	r1, #1532	; 0x5fc
    e6d4:	sub	r1, r3, r1
    e6d8:	cmp	r1, #7
    e6dc:	bhi	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e6e0:	cmp	r1, #4
    e6e4:	bne	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e6e8:	b	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e6ec:	andeq	r8, r0, r5, asr #30
    e6f0:	cmp	r3, #2688	; 0xa80
    e6f4:	bge	e748 <lell_packet_is_data@@Base+0x10fc>
    e6f8:	movw	r1, #2556	; 0x9fc
    e6fc:	sub	r1, r3, r1
    e700:	cmp	r1, #7
    e704:	bhi	e710 <lell_packet_is_data@@Base+0x10c4>
    e708:	cmp	r1, #4
    e70c:	bne	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e710:	cmp	r3, #2432	; 0x980
    e714:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e718:	b	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e71c:	movw	r1, #3580	; 0xdfc
    e720:	sub	r1, r3, r1
    e724:	cmp	r1, #8
    e728:	bcc	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e72c:	movw	r1, #3326	; 0xcfe
    e730:	sub	r1, r3, r1
    e734:	cmp	r1, #4
    e738:	bcc	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e73c:	cmp	r3, #3456	; 0xd80
    e740:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e744:	b	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e748:	movw	r1, #2814	; 0xafe
    e74c:	sub	r1, r3, r1
    e750:	cmp	r1, #4
    e754:	bcc	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e758:	cmp	r3, #2688	; 0xa80
    e75c:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e760:	cmp	r3, #2944	; 0xb80
    e764:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e768:	b	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e76c:	sub	r1, r3, #508	; 0x1fc
    e770:	cmp	r1, #7
    e774:	bhi	e780 <lell_packet_is_data@@Base+0x1134>
    e778:	cmp	r1, #4
    e77c:	bne	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e780:	cmp	r3, #640	; 0x280
    e784:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e788:	b	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e78c:	movw	r1, #1278	; 0x4fe
    e790:	sub	r1, r3, r1
    e794:	cmp	r1, #4
    e798:	bcc	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e79c:	cmp	r3, #1152	; 0x480
    e7a0:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e7a4:	cmp	r3, #1408	; 0x580
    e7a8:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e7ac:	b	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e7b0:	movw	r1, #1790	; 0x6fe
    e7b4:	sub	r1, r3, r1
    e7b8:	cmp	r1, #4
    e7bc:	bcc	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e7c0:	cmp	r3, #1664	; 0x680
    e7c4:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e7c8:	cmp	r3, #1920	; 0x780
    e7cc:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e7d0:	b	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e7d4:	movw	r1, #3838	; 0xefe
    e7d8:	sub	r1, r3, r1
    e7dc:	cmp	r1, #4
    e7e0:	bcc	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e7e4:	cmp	r3, #3712	; 0xe80
    e7e8:	beq	e7f4 <lell_packet_is_data@@Base+0x11a8>
    e7ec:	cmp	r3, #3968	; 0xf80
    e7f0:	bne	e7f8 <lell_packet_is_data@@Base+0x11ac>
    e7f4:	add	r0, r0, #1
    e7f8:	bfc	r2, #12, #20
    e7fc:	movw	r1, #2035	; 0x7f3
    e800:	cmp	r2, r1
    e804:	ble	e844 <lell_packet_is_data@@Base+0x11f8>
    e808:	movw	r1, #3063	; 0xbf7
    e80c:	cmp	r2, r1
    e810:	ble	ee68 <lell_packet_is_data@@Base+0x181c>
    e814:	cmp	r2, #3712	; 0xe80
    e818:	bge	eed4 <lell_packet_is_data@@Base+0x1888>
    e81c:	movw	r1, #3325	; 0xcfd
    e820:	cmp	r2, r1
    e824:	bgt	ef5c <lell_packet_is_data@@Base+0x1910>
    e828:	movw	r1, #3064	; 0xbf8
    e82c:	sub	r1, r2, r1
    e830:	cmp	r1, #16
    e834:	bcc	f034 <lell_packet_is_data@@Base+0x19e8>
    e838:	cmp	r2, #3200	; 0xc80
    e83c:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    e840:	b	f038 <lell_packet_is_data@@Base+0x19ec>
    e844:	movw	r1, #765	; 0x2fd
    e848:	cmp	r2, r1
    e84c:	bgt	ee9c <lell_packet_is_data@@Base+0x1850>
    e850:	cmp	r2, #384	; 0x180
    e854:	bhi	efac <lell_packet_is_data@@Base+0x1960>
    e858:	add	r1, pc, #4
    e85c:	ldr	r2, [r1, r2, lsl #2]
    e860:	add	pc, r1, r2
    e864:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e868:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e86c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e870:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e874:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e878:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e87c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e880:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e884:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e888:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e88c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e890:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e894:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e898:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e89c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8d0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8dc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e8e4:	ldrdeq	r0, [r0], -r4
    e8e8:	ldrdeq	r0, [r0], -r4
    e8ec:	ldrdeq	r0, [r0], -r4
    e8f0:	ldrdeq	r0, [r0], -r4
    e8f4:	ldrdeq	r0, [r0], -r4
    e8f8:	ldrdeq	r0, [r0], -r4
    e8fc:	ldrdeq	r0, [r0], -r4
    e900:	ldrdeq	r0, [r0], -r4
    e904:	ldrdeq	r0, [r0], -r4
    e908:	ldrdeq	r0, [r0], -r4
    e90c:	ldrdeq	r0, [r0], -r4
    e910:	ldrdeq	r0, [r0], -r4
    e914:	ldrdeq	r0, [r0], -r4
    e918:	ldrdeq	r0, [r0], -r4
    e91c:	ldrdeq	r0, [r0], -r4
    e920:	ldrdeq	r0, [r0], -r4
    e924:	ldrdeq	r0, [r0], -r4
    e928:	ldrdeq	r0, [r0], -r4
    e92c:	ldrdeq	r0, [r0], -r4
    e930:	ldrdeq	r0, [r0], -r4
    e934:	ldrdeq	r0, [r0], -r4
    e938:	ldrdeq	r0, [r0], -r4
    e93c:	ldrdeq	r0, [r0], -r4
    e940:	ldrdeq	r0, [r0], -r4
    e944:	ldrdeq	r0, [r0], -r4
    e948:	ldrdeq	r0, [r0], -r4
    e94c:	ldrdeq	r0, [r0], -r4
    e950:	ldrdeq	r0, [r0], -r4
    e954:	ldrdeq	r0, [r0], -r4
    e958:	ldrdeq	r0, [r0], -r4
    e95c:	ldrdeq	r0, [r0], -r4
    e960:	ldrdeq	r0, [r0], -r4
    e964:	ldrdeq	r0, [r0], -r4
    e968:	ldrdeq	r0, [r0], -r4
    e96c:	ldrdeq	r0, [r0], -r4
    e970:	ldrdeq	r0, [r0], -r4
    e974:	ldrdeq	r0, [r0], -r4
    e978:	ldrdeq	r0, [r0], -r4
    e97c:	ldrdeq	r0, [r0], -r4
    e980:	ldrdeq	r0, [r0], -r4
    e984:	ldrdeq	r0, [r0], -r4
    e988:	ldrdeq	r0, [r0], -r4
    e98c:	ldrdeq	r0, [r0], -r4
    e990:	ldrdeq	r0, [r0], -r4
    e994:	ldrdeq	r0, [r0], -r4
    e998:	ldrdeq	r0, [r0], -r4
    e99c:	ldrdeq	r0, [r0], -r4
    e9a0:	ldrdeq	r0, [r0], -r4
    e9a4:	ldrdeq	r0, [r0], -r4
    e9a8:	ldrdeq	r0, [r0], -r4
    e9ac:	ldrdeq	r0, [r0], -r4
    e9b0:	ldrdeq	r0, [r0], -r4
    e9b4:	ldrdeq	r0, [r0], -r4
    e9b8:	ldrdeq	r0, [r0], -r4
    e9bc:	ldrdeq	r0, [r0], -r4
    e9c0:	ldrdeq	r0, [r0], -r4
    e9c4:	ldrdeq	r0, [r0], -r4
    e9c8:	ldrdeq	r0, [r0], -r4
    e9cc:	ldrdeq	r0, [r0], -r4
    e9d0:	ldrdeq	r0, [r0], -r4
    e9d4:	ldrdeq	r0, [r0], -r4
    e9d8:	ldrdeq	r0, [r0], -r4
    e9dc:	ldrdeq	r0, [r0], -r4
    e9e0:	ldrdeq	r0, [r0], -r4
    e9e4:	ldrdeq	r0, [r0], -r4
    e9e8:	ldrdeq	r0, [r0], -r4
    e9ec:	ldrdeq	r0, [r0], -r4
    e9f0:	ldrdeq	r0, [r0], -r4
    e9f4:	ldrdeq	r0, [r0], -r4
    e9f8:	ldrdeq	r0, [r0], -r4
    e9fc:	ldrdeq	r0, [r0], -r4
    ea00:	ldrdeq	r0, [r0], -r4
    ea04:	ldrdeq	r0, [r0], -r4
    ea08:	ldrdeq	r0, [r0], -r4
    ea0c:	ldrdeq	r0, [r0], -r4
    ea10:	ldrdeq	r0, [r0], -r4
    ea14:	ldrdeq	r0, [r0], -r4
    ea18:	ldrdeq	r0, [r0], -r4
    ea1c:	ldrdeq	r0, [r0], -r4
    ea20:	ldrdeq	r0, [r0], -r4
    ea24:	ldrdeq	r0, [r0], -r4
    ea28:	ldrdeq	r0, [r0], -r4
    ea2c:	ldrdeq	r0, [r0], -r4
    ea30:	ldrdeq	r0, [r0], -r4
    ea34:	ldrdeq	r0, [r0], -r4
    ea38:	ldrdeq	r0, [r0], -r4
    ea3c:	ldrdeq	r0, [r0], -r4
    ea40:	ldrdeq	r0, [r0], -r4
    ea44:	ldrdeq	r0, [r0], -r4
    ea48:	ldrdeq	r0, [r0], -r4
    ea4c:	ldrdeq	r0, [r0], -r4
    ea50:	ldrdeq	r0, [r0], -r4
    ea54:	ldrdeq	r0, [r0], -r4
    ea58:	ldrdeq	r0, [r0], -r4
    ea5c:	ldrdeq	r0, [r0], -r4
    ea60:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ea64:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ea68:	ldrdeq	r0, [r0], -r4
    ea6c:	ldrdeq	r0, [r0], -r4
    ea70:	ldrdeq	r0, [r0], -r4
    ea74:	ldrdeq	r0, [r0], -r4
    ea78:	ldrdeq	r0, [r0], -r4
    ea7c:	ldrdeq	r0, [r0], -r4
    ea80:	ldrdeq	r0, [r0], -r4
    ea84:	ldrdeq	r0, [r0], -r4
    ea88:	ldrdeq	r0, [r0], -r4
    ea8c:	ldrdeq	r0, [r0], -r4
    ea90:	ldrdeq	r0, [r0], -r4
    ea94:	ldrdeq	r0, [r0], -r4
    ea98:	ldrdeq	r0, [r0], -r4
    ea9c:	ldrdeq	r0, [r0], -r4
    eaa0:	ldrdeq	r0, [r0], -r4
    eaa4:	ldrdeq	r0, [r0], -r4
    eaa8:	ldrdeq	r0, [r0], -r4
    eaac:	ldrdeq	r0, [r0], -r4
    eab0:	ldrdeq	r0, [r0], -r4
    eab4:	ldrdeq	r0, [r0], -r4
    eab8:	ldrdeq	r0, [r0], -r4
    eabc:	ldrdeq	r0, [r0], -r4
    eac0:	ldrdeq	r0, [r0], -r4
    eac4:	ldrdeq	r0, [r0], -r4
    eac8:	ldrdeq	r0, [r0], -r4
    eacc:	ldrdeq	r0, [r0], -r4
    ead0:	ldrdeq	r0, [r0], -r4
    ead4:	ldrdeq	r0, [r0], -r4
    ead8:	ldrdeq	r0, [r0], -r4
    eadc:	ldrdeq	r0, [r0], -r4
    eae0:	ldrdeq	r0, [r0], -r4
    eae4:	ldrdeq	r0, [r0], -r4
    eae8:	ldrdeq	r0, [r0], -r4
    eaec:	ldrdeq	r0, [r0], -r4
    eaf0:	ldrdeq	r0, [r0], -r4
    eaf4:	ldrdeq	r0, [r0], -r4
    eaf8:	ldrdeq	r0, [r0], -r4
    eafc:	ldrdeq	r0, [r0], -r4
    eb00:	ldrdeq	r0, [r0], -r4
    eb04:	ldrdeq	r0, [r0], -r4
    eb08:	ldrdeq	r0, [r0], -r4
    eb0c:	ldrdeq	r0, [r0], -r4
    eb10:	ldrdeq	r0, [r0], -r4
    eb14:	ldrdeq	r0, [r0], -r4
    eb18:	ldrdeq	r0, [r0], -r4
    eb1c:	ldrdeq	r0, [r0], -r4
    eb20:	ldrdeq	r0, [r0], -r4
    eb24:	ldrdeq	r0, [r0], -r4
    eb28:	ldrdeq	r0, [r0], -r4
    eb2c:	ldrdeq	r0, [r0], -r4
    eb30:	ldrdeq	r0, [r0], -r4
    eb34:	ldrdeq	r0, [r0], -r4
    eb38:	ldrdeq	r0, [r0], -r4
    eb3c:	ldrdeq	r0, [r0], -r4
    eb40:	ldrdeq	r0, [r0], -r4
    eb44:	ldrdeq	r0, [r0], -r4
    eb48:	ldrdeq	r0, [r0], -r4
    eb4c:	ldrdeq	r0, [r0], -r4
    eb50:	ldrdeq	r0, [r0], -r4
    eb54:	ldrdeq	r0, [r0], -r4
    eb58:	ldrdeq	r0, [r0], -r4
    eb5c:	ldrdeq	r0, [r0], -r4
    eb60:	ldrdeq	r0, [r0], -r4
    eb64:	ldrdeq	r0, [r0], -r4
    eb68:	ldrdeq	r0, [r0], -r4
    eb6c:	ldrdeq	r0, [r0], -r4
    eb70:	ldrdeq	r0, [r0], -r4
    eb74:	ldrdeq	r0, [r0], -r4
    eb78:	ldrdeq	r0, [r0], -r4
    eb7c:	ldrdeq	r0, [r0], -r4
    eb80:	ldrdeq	r0, [r0], -r4
    eb84:	ldrdeq	r0, [r0], -r4
    eb88:	ldrdeq	r0, [r0], -r4
    eb8c:	ldrdeq	r0, [r0], -r4
    eb90:	ldrdeq	r0, [r0], -r4
    eb94:	ldrdeq	r0, [r0], -r4
    eb98:	ldrdeq	r0, [r0], -r4
    eb9c:	ldrdeq	r0, [r0], -r4
    eba0:	ldrdeq	r0, [r0], -r4
    eba4:	ldrdeq	r0, [r0], -r4
    eba8:	ldrdeq	r0, [r0], -r4
    ebac:	ldrdeq	r0, [r0], -r4
    ebb0:	ldrdeq	r0, [r0], -r4
    ebb4:	ldrdeq	r0, [r0], -r4
    ebb8:	ldrdeq	r0, [r0], -r4
    ebbc:	ldrdeq	r0, [r0], -r4
    ebc0:	ldrdeq	r0, [r0], -r4
    ebc4:	ldrdeq	r0, [r0], -r4
    ebc8:	ldrdeq	r0, [r0], -r4
    ebcc:	ldrdeq	r0, [r0], -r4
    ebd0:	ldrdeq	r0, [r0], -r4
    ebd4:	ldrdeq	r0, [r0], -r4
    ebd8:	ldrdeq	r0, [r0], -r4
    ebdc:	ldrdeq	r0, [r0], -r4
    ebe0:	ldrdeq	r0, [r0], -r4
    ebe4:	ldrdeq	r0, [r0], -r4
    ebe8:	ldrdeq	r0, [r0], -r4
    ebec:	ldrdeq	r0, [r0], -r4
    ebf0:	ldrdeq	r0, [r0], -r4
    ebf4:	ldrdeq	r0, [r0], -r4
    ebf8:	ldrdeq	r0, [r0], -r4
    ebfc:	ldrdeq	r0, [r0], -r4
    ec00:	ldrdeq	r0, [r0], -r4
    ec04:	ldrdeq	r0, [r0], -r4
    ec08:	ldrdeq	r0, [r0], -r4
    ec0c:	ldrdeq	r0, [r0], -r4
    ec10:	ldrdeq	r0, [r0], -r4
    ec14:	ldrdeq	r0, [r0], -r4
    ec18:	ldrdeq	r0, [r0], -r4
    ec1c:	ldrdeq	r0, [r0], -r4
    ec20:	ldrdeq	r0, [r0], -r4
    ec24:	ldrdeq	r0, [r0], -r4
    ec28:	ldrdeq	r0, [r0], -r4
    ec2c:	ldrdeq	r0, [r0], -r4
    ec30:	ldrdeq	r0, [r0], -r4
    ec34:	ldrdeq	r0, [r0], -r4
    ec38:	ldrdeq	r0, [r0], -r4
    ec3c:	ldrdeq	r0, [r0], -r4
    ec40:	ldrdeq	r0, [r0], -r4
    ec44:	ldrdeq	r0, [r0], -r4
    ec48:	ldrdeq	r0, [r0], -r4
    ec4c:	ldrdeq	r0, [r0], -r4
    ec50:	ldrdeq	r0, [r0], -r4
    ec54:	ldrdeq	r0, [r0], -r4
    ec58:	ldrdeq	r0, [r0], -r4
    ec5c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ec60:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ec64:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ec68:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ec6c:	ldrdeq	r0, [r0], -r4
    ec70:	ldrdeq	r0, [r0], -r4
    ec74:	ldrdeq	r0, [r0], -r4
    ec78:	ldrdeq	r0, [r0], -r4
    ec7c:	ldrdeq	r0, [r0], -r4
    ec80:	ldrdeq	r0, [r0], -r4
    ec84:	ldrdeq	r0, [r0], -r4
    ec88:	ldrdeq	r0, [r0], -r4
    ec8c:	ldrdeq	r0, [r0], -r4
    ec90:	ldrdeq	r0, [r0], -r4
    ec94:	ldrdeq	r0, [r0], -r4
    ec98:	ldrdeq	r0, [r0], -r4
    ec9c:	ldrdeq	r0, [r0], -r4
    eca0:	ldrdeq	r0, [r0], -r4
    eca4:	ldrdeq	r0, [r0], -r4
    eca8:	ldrdeq	r0, [r0], -r4
    ecac:	ldrdeq	r0, [r0], -r4
    ecb0:	ldrdeq	r0, [r0], -r4
    ecb4:	ldrdeq	r0, [r0], -r4
    ecb8:	ldrdeq	r0, [r0], -r4
    ecbc:	ldrdeq	r0, [r0], -r4
    ecc0:	ldrdeq	r0, [r0], -r4
    ecc4:	ldrdeq	r0, [r0], -r4
    ecc8:	ldrdeq	r0, [r0], -r4
    eccc:	ldrdeq	r0, [r0], -r4
    ecd0:	ldrdeq	r0, [r0], -r4
    ecd4:	ldrdeq	r0, [r0], -r4
    ecd8:	ldrdeq	r0, [r0], -r4
    ecdc:	ldrdeq	r0, [r0], -r4
    ece0:	ldrdeq	r0, [r0], -r4
    ece4:	ldrdeq	r0, [r0], -r4
    ece8:	ldrdeq	r0, [r0], -r4
    ecec:	ldrdeq	r0, [r0], -r4
    ecf0:	ldrdeq	r0, [r0], -r4
    ecf4:	ldrdeq	r0, [r0], -r4
    ecf8:	ldrdeq	r0, [r0], -r4
    ecfc:	ldrdeq	r0, [r0], -r4
    ed00:	ldrdeq	r0, [r0], -r4
    ed04:	ldrdeq	r0, [r0], -r4
    ed08:	ldrdeq	r0, [r0], -r4
    ed0c:	ldrdeq	r0, [r0], -r4
    ed10:	ldrdeq	r0, [r0], -r4
    ed14:	ldrdeq	r0, [r0], -r4
    ed18:	ldrdeq	r0, [r0], -r4
    ed1c:	ldrdeq	r0, [r0], -r4
    ed20:	ldrdeq	r0, [r0], -r4
    ed24:	ldrdeq	r0, [r0], -r4
    ed28:	ldrdeq	r0, [r0], -r4
    ed2c:	ldrdeq	r0, [r0], -r4
    ed30:	ldrdeq	r0, [r0], -r4
    ed34:	ldrdeq	r0, [r0], -r4
    ed38:	ldrdeq	r0, [r0], -r4
    ed3c:	ldrdeq	r0, [r0], -r4
    ed40:	ldrdeq	r0, [r0], -r4
    ed44:	ldrdeq	r0, [r0], -r4
    ed48:	ldrdeq	r0, [r0], -r4
    ed4c:	ldrdeq	r0, [r0], -r4
    ed50:	ldrdeq	r0, [r0], -r4
    ed54:	ldrdeq	r0, [r0], -r4
    ed58:	ldrdeq	r0, [r0], -r4
    ed5c:	ldrdeq	r0, [r0], -r4
    ed60:	ldrdeq	r0, [r0], -r4
    ed64:	ldrdeq	r0, [r0], -r4
    ed68:	ldrdeq	r0, [r0], -r4
    ed6c:	ldrdeq	r0, [r0], -r4
    ed70:	ldrdeq	r0, [r0], -r4
    ed74:	ldrdeq	r0, [r0], -r4
    ed78:	ldrdeq	r0, [r0], -r4
    ed7c:	ldrdeq	r0, [r0], -r4
    ed80:	ldrdeq	r0, [r0], -r4
    ed84:	ldrdeq	r0, [r0], -r4
    ed88:	ldrdeq	r0, [r0], -r4
    ed8c:	ldrdeq	r0, [r0], -r4
    ed90:	ldrdeq	r0, [r0], -r4
    ed94:	ldrdeq	r0, [r0], -r4
    ed98:	ldrdeq	r0, [r0], -r4
    ed9c:	ldrdeq	r0, [r0], -r4
    eda0:	ldrdeq	r0, [r0], -r4
    eda4:	ldrdeq	r0, [r0], -r4
    eda8:	ldrdeq	r0, [r0], -r4
    edac:	ldrdeq	r0, [r0], -r4
    edb0:	ldrdeq	r0, [r0], -r4
    edb4:	ldrdeq	r0, [r0], -r4
    edb8:	ldrdeq	r0, [r0], -r4
    edbc:	ldrdeq	r0, [r0], -r4
    edc0:	ldrdeq	r0, [r0], -r4
    edc4:	ldrdeq	r0, [r0], -r4
    edc8:	ldrdeq	r0, [r0], -r4
    edcc:	ldrdeq	r0, [r0], -r4
    edd0:	ldrdeq	r0, [r0], -r4
    edd4:	ldrdeq	r0, [r0], -r4
    edd8:	ldrdeq	r0, [r0], -r4
    eddc:	ldrdeq	r0, [r0], -r4
    ede0:	ldrdeq	r0, [r0], -r4
    ede4:	ldrdeq	r0, [r0], -r4
    ede8:	ldrdeq	r0, [r0], -r4
    edec:	ldrdeq	r0, [r0], -r4
    edf0:	ldrdeq	r0, [r0], -r4
    edf4:	ldrdeq	r0, [r0], -r4
    edf8:	ldrdeq	r0, [r0], -r4
    edfc:	ldrdeq	r0, [r0], -r4
    ee00:	ldrdeq	r0, [r0], -r4
    ee04:	ldrdeq	r0, [r0], -r4
    ee08:	ldrdeq	r0, [r0], -r4
    ee0c:	ldrdeq	r0, [r0], -r4
    ee10:	ldrdeq	r0, [r0], -r4
    ee14:	ldrdeq	r0, [r0], -r4
    ee18:	ldrdeq	r0, [r0], -r4
    ee1c:	ldrdeq	r0, [r0], -r4
    ee20:	ldrdeq	r0, [r0], -r4
    ee24:	ldrdeq	r0, [r0], -r4
    ee28:	ldrdeq	r0, [r0], -r4
    ee2c:	ldrdeq	r0, [r0], -r4
    ee30:	ldrdeq	r0, [r0], -r4
    ee34:	ldrdeq	r0, [r0], -r4
    ee38:	ldrdeq	r0, [r0], -r4
    ee3c:	ldrdeq	r0, [r0], -r4
    ee40:	ldrdeq	r0, [r0], -r4
    ee44:	ldrdeq	r0, [r0], -r4
    ee48:	ldrdeq	r0, [r0], -r4
    ee4c:	ldrdeq	r0, [r0], -r4
    ee50:	ldrdeq	r0, [r0], -r4
    ee54:	ldrdeq	r0, [r0], -r4
    ee58:	ldrdeq	r0, [r0], -r4
    ee5c:	ldrdeq	r0, [r0], -r4
    ee60:	ldrdeq	r0, [r0], -r4
    ee64:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    ee68:	cmp	r2, #2432	; 0x980
    ee6c:	bge	ef30 <lell_packet_is_data@@Base+0x18e4>
    ee70:	movw	r1, #2036	; 0x7f4
    ee74:	sub	r1, r2, r1
    ee78:	cmp	r1, #28
    ee7c:	bcc	f034 <lell_packet_is_data@@Base+0x19e8>
    ee80:	movw	r1, #2302	; 0x8fe
    ee84:	sub	r1, r2, r1
    ee88:	cmp	r1, #4
    ee8c:	bcc	f034 <lell_packet_is_data@@Base+0x19e8>
    ee90:	cmp	r2, #2176	; 0x880
    ee94:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    ee98:	b	f038 <lell_packet_is_data@@Base+0x19ec>
    ee9c:	cmp	r2, #1152	; 0x480
    eea0:	bge	ef00 <lell_packet_is_data@@Base+0x18b4>
    eea4:	sub	r1, r2, #1016	; 0x3f8
    eea8:	cmp	r1, #15
    eeac:	bhi	eeb8 <lell_packet_is_data@@Base+0x186c>
    eeb0:	cmp	r1, #9
    eeb4:	bne	f034 <lell_packet_is_data@@Base+0x19e8>
    eeb8:	movw	r1, #766	; 0x2fe
    eebc:	sub	r1, r2, r1
    eec0:	cmp	r1, #4
    eec4:	bcc	f034 <lell_packet_is_data@@Base+0x19e8>
    eec8:	cmp	r2, #896	; 0x380
    eecc:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    eed0:	b	f038 <lell_packet_is_data@@Base+0x19ec>
    eed4:	cmp	r2, #4064	; 0xfe0
    eed8:	blt	f014 <lell_packet_is_data@@Base+0x19c8>
    eedc:	sub	r1, r2, #4064	; 0xfe0
    eee0:	cmp	r1, #31
    eee4:	bhi	f038 <lell_packet_is_data@@Base+0x19ec>
    eee8:	movw	r3, #1
    eeec:	mov	r2, #1
    eef0:	movt	r3, #65535	; 0xffff
    eef4:	tst	r3, r2, lsl r1
    eef8:	addne	r0, r0, #1
    eefc:	b	f038 <lell_packet_is_data@@Base+0x19ec>
    ef00:	movw	r1, #1531	; 0x5fb
    ef04:	cmp	r2, r1
    ef08:	ble	efcc <lell_packet_is_data@@Base+0x1980>
    ef0c:	cmp	r2, #1664	; 0x680
    ef10:	bge	eff0 <lell_packet_is_data@@Base+0x19a4>
    ef14:	movw	r1, #1532	; 0x5fc
    ef18:	sub	r1, r2, r1
    ef1c:	cmp	r1, #7
    ef20:	bhi	f038 <lell_packet_is_data@@Base+0x19ec>
    ef24:	cmp	r1, #4
    ef28:	bne	f034 <lell_packet_is_data@@Base+0x19e8>
    ef2c:	b	f038 <lell_packet_is_data@@Base+0x19ec>
    ef30:	cmp	r2, #2688	; 0xa80
    ef34:	bge	ef88 <lell_packet_is_data@@Base+0x193c>
    ef38:	movw	r1, #2556	; 0x9fc
    ef3c:	sub	r1, r2, r1
    ef40:	cmp	r1, #7
    ef44:	bhi	ef50 <lell_packet_is_data@@Base+0x1904>
    ef48:	cmp	r1, #4
    ef4c:	bne	f034 <lell_packet_is_data@@Base+0x19e8>
    ef50:	cmp	r2, #2432	; 0x980
    ef54:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    ef58:	b	f038 <lell_packet_is_data@@Base+0x19ec>
    ef5c:	movw	r1, #3580	; 0xdfc
    ef60:	sub	r1, r2, r1
    ef64:	cmp	r1, #8
    ef68:	bcc	f034 <lell_packet_is_data@@Base+0x19e8>
    ef6c:	movw	r1, #3326	; 0xcfe
    ef70:	sub	r1, r2, r1
    ef74:	cmp	r1, #4
    ef78:	bcc	f034 <lell_packet_is_data@@Base+0x19e8>
    ef7c:	cmp	r2, #3456	; 0xd80
    ef80:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    ef84:	b	f038 <lell_packet_is_data@@Base+0x19ec>
    ef88:	movw	r1, #2814	; 0xafe
    ef8c:	sub	r1, r2, r1
    ef90:	cmp	r1, #4
    ef94:	bcc	f034 <lell_packet_is_data@@Base+0x19e8>
    ef98:	cmp	r2, #2688	; 0xa80
    ef9c:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    efa0:	cmp	r2, #2944	; 0xb80
    efa4:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    efa8:	b	f038 <lell_packet_is_data@@Base+0x19ec>
    efac:	sub	r1, r2, #508	; 0x1fc
    efb0:	cmp	r1, #7
    efb4:	bhi	efc0 <lell_packet_is_data@@Base+0x1974>
    efb8:	cmp	r1, #4
    efbc:	bne	f034 <lell_packet_is_data@@Base+0x19e8>
    efc0:	cmp	r2, #640	; 0x280
    efc4:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    efc8:	b	f038 <lell_packet_is_data@@Base+0x19ec>
    efcc:	movw	r1, #1278	; 0x4fe
    efd0:	sub	r1, r2, r1
    efd4:	cmp	r1, #4
    efd8:	bcc	f034 <lell_packet_is_data@@Base+0x19e8>
    efdc:	cmp	r2, #1152	; 0x480
    efe0:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    efe4:	cmp	r2, #1408	; 0x580
    efe8:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    efec:	b	f038 <lell_packet_is_data@@Base+0x19ec>
    eff0:	movw	r1, #1790	; 0x6fe
    eff4:	sub	r1, r2, r1
    eff8:	cmp	r1, #4
    effc:	bcc	f034 <lell_packet_is_data@@Base+0x19e8>
    f000:	cmp	r2, #1664	; 0x680
    f004:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    f008:	cmp	r2, #1920	; 0x780
    f00c:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    f010:	b	f038 <lell_packet_is_data@@Base+0x19ec>
    f014:	movw	r1, #3838	; 0xefe
    f018:	sub	r1, r2, r1
    f01c:	cmp	r1, #4
    f020:	bcc	f034 <lell_packet_is_data@@Base+0x19e8>
    f024:	cmp	r2, #3712	; 0xe80
    f028:	beq	f034 <lell_packet_is_data@@Base+0x19e8>
    f02c:	cmp	r2, #3968	; 0xf80
    f030:	bne	f038 <lell_packet_is_data@@Base+0x19ec>
    f034:	add	r0, r0, #1
    f038:	ubfx	r3, ip, #12, #12
    f03c:	movw	r1, #2035	; 0x7f3
    f040:	lsr	r2, ip, #16
    f044:	cmp	r3, r1
    f048:	ble	f088 <lell_packet_is_data@@Base+0x1a3c>
    f04c:	movw	r1, #3063	; 0xbf7
    f050:	cmp	r3, r1
    f054:	ble	f6ac <lell_packet_is_data@@Base+0x2060>
    f058:	cmp	r3, #3712	; 0xe80
    f05c:	bge	f718 <lell_packet_is_data@@Base+0x20cc>
    f060:	movw	r1, #3325	; 0xcfd
    f064:	cmp	r3, r1
    f068:	bgt	f7b0 <lell_packet_is_data@@Base+0x2164>
    f06c:	movw	r1, #3064	; 0xbf8
    f070:	sub	r1, r3, r1
    f074:	cmp	r1, #16
    f078:	bcc	f888 <lell_packet_is_data@@Base+0x223c>
    f07c:	cmp	r3, #3200	; 0xc80
    f080:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f084:	b	f88c <lell_packet_is_data@@Base+0x2240>
    f088:	movw	r1, #765	; 0x2fd
    f08c:	cmp	r3, r1
    f090:	bgt	f6e0 <lell_packet_is_data@@Base+0x2094>
    f094:	cmp	r3, #384	; 0x180
    f098:	bhi	f800 <lell_packet_is_data@@Base+0x21b4>
    f09c:	add	r1, pc, #4
    f0a0:	ldr	r3, [r1, r3, lsl #2]
    f0a4:	add	pc, r1, r3
    f0a8:	andeq	r0, r0, r0, ror #15
    f0ac:	andeq	r0, r0, r0, ror #15
    f0b0:	andeq	r0, r0, r0, ror #15
    f0b4:	andeq	r0, r0, r0, ror #15
    f0b8:	andeq	r0, r0, r0, ror #15
    f0bc:	andeq	r0, r0, r0, ror #15
    f0c0:	andeq	r0, r0, r0, ror #15
    f0c4:	andeq	r0, r0, r0, ror #15
    f0c8:	andeq	r0, r0, r0, ror #15
    f0cc:	andeq	r0, r0, r0, ror #15
    f0d0:	andeq	r0, r0, r0, ror #15
    f0d4:	andeq	r0, r0, r0, ror #15
    f0d8:	andeq	r0, r0, r0, ror #15
    f0dc:	andeq	r0, r0, r0, ror #15
    f0e0:	andeq	r0, r0, r0, ror #15
    f0e4:	andeq	r0, r0, r0, ror #15
    f0e8:	andeq	r0, r0, r0, ror #15
    f0ec:	andeq	r0, r0, r0, ror #15
    f0f0:	andeq	r0, r0, r0, ror #15
    f0f4:	andeq	r0, r0, r0, ror #15
    f0f8:	andeq	r0, r0, r0, ror #15
    f0fc:	andeq	r0, r0, r0, ror #15
    f100:	andeq	r0, r0, r0, ror #15
    f104:	andeq	r0, r0, r0, ror #15
    f108:	andeq	r0, r0, r0, ror #15
    f10c:	andeq	r0, r0, r0, ror #15
    f110:	andeq	r0, r0, r0, ror #15
    f114:	andeq	r0, r0, r0, ror #15
    f118:	andeq	r0, r0, r0, ror #15
    f11c:	andeq	r0, r0, r0, ror #15
    f120:	andeq	r0, r0, r0, ror #15
    f124:	andeq	r0, r0, r0, ror #15
    f128:	andeq	r0, r0, r4, ror #15
    f12c:	andeq	r0, r0, r4, ror #15
    f130:	andeq	r0, r0, r4, ror #15
    f134:	andeq	r0, r0, r4, ror #15
    f138:	andeq	r0, r0, r4, ror #15
    f13c:	andeq	r0, r0, r4, ror #15
    f140:	andeq	r0, r0, r4, ror #15
    f144:	andeq	r0, r0, r4, ror #15
    f148:	andeq	r0, r0, r4, ror #15
    f14c:	andeq	r0, r0, r4, ror #15
    f150:	andeq	r0, r0, r4, ror #15
    f154:	andeq	r0, r0, r4, ror #15
    f158:	andeq	r0, r0, r4, ror #15
    f15c:	andeq	r0, r0, r4, ror #15
    f160:	andeq	r0, r0, r4, ror #15
    f164:	andeq	r0, r0, r4, ror #15
    f168:	andeq	r0, r0, r4, ror #15
    f16c:	andeq	r0, r0, r4, ror #15
    f170:	andeq	r0, r0, r4, ror #15
    f174:	andeq	r0, r0, r4, ror #15
    f178:	andeq	r0, r0, r4, ror #15
    f17c:	andeq	r0, r0, r4, ror #15
    f180:	andeq	r0, r0, r4, ror #15
    f184:	andeq	r0, r0, r4, ror #15
    f188:	andeq	r0, r0, r4, ror #15
    f18c:	andeq	r0, r0, r4, ror #15
    f190:	andeq	r0, r0, r4, ror #15
    f194:	andeq	r0, r0, r4, ror #15
    f198:	andeq	r0, r0, r4, ror #15
    f19c:	andeq	r0, r0, r4, ror #15
    f1a0:	andeq	r0, r0, r4, ror #15
    f1a4:	andeq	r0, r0, r4, ror #15
    f1a8:	andeq	r0, r0, r4, ror #15
    f1ac:	andeq	r0, r0, r4, ror #15
    f1b0:	andeq	r0, r0, r4, ror #15
    f1b4:	andeq	r0, r0, r4, ror #15
    f1b8:	andeq	r0, r0, r4, ror #15
    f1bc:	andeq	r0, r0, r4, ror #15
    f1c0:	andeq	r0, r0, r4, ror #15
    f1c4:	andeq	r0, r0, r4, ror #15
    f1c8:	andeq	r0, r0, r4, ror #15
    f1cc:	andeq	r0, r0, r4, ror #15
    f1d0:	andeq	r0, r0, r4, ror #15
    f1d4:	andeq	r0, r0, r4, ror #15
    f1d8:	andeq	r0, r0, r4, ror #15
    f1dc:	andeq	r0, r0, r4, ror #15
    f1e0:	andeq	r0, r0, r4, ror #15
    f1e4:	andeq	r0, r0, r4, ror #15
    f1e8:	andeq	r0, r0, r4, ror #15
    f1ec:	andeq	r0, r0, r4, ror #15
    f1f0:	andeq	r0, r0, r4, ror #15
    f1f4:	andeq	r0, r0, r4, ror #15
    f1f8:	andeq	r0, r0, r4, ror #15
    f1fc:	andeq	r0, r0, r4, ror #15
    f200:	andeq	r0, r0, r4, ror #15
    f204:	andeq	r0, r0, r4, ror #15
    f208:	andeq	r0, r0, r4, ror #15
    f20c:	andeq	r0, r0, r4, ror #15
    f210:	andeq	r0, r0, r4, ror #15
    f214:	andeq	r0, r0, r4, ror #15
    f218:	andeq	r0, r0, r4, ror #15
    f21c:	andeq	r0, r0, r4, ror #15
    f220:	andeq	r0, r0, r4, ror #15
    f224:	andeq	r0, r0, r4, ror #15
    f228:	andeq	r0, r0, r4, ror #15
    f22c:	andeq	r0, r0, r4, ror #15
    f230:	andeq	r0, r0, r4, ror #15
    f234:	andeq	r0, r0, r4, ror #15
    f238:	andeq	r0, r0, r4, ror #15
    f23c:	andeq	r0, r0, r4, ror #15
    f240:	andeq	r0, r0, r4, ror #15
    f244:	andeq	r0, r0, r4, ror #15
    f248:	andeq	r0, r0, r4, ror #15
    f24c:	andeq	r0, r0, r4, ror #15
    f250:	andeq	r0, r0, r4, ror #15
    f254:	andeq	r0, r0, r4, ror #15
    f258:	andeq	r0, r0, r4, ror #15
    f25c:	andeq	r0, r0, r4, ror #15
    f260:	andeq	r0, r0, r4, ror #15
    f264:	andeq	r0, r0, r4, ror #15
    f268:	andeq	r0, r0, r4, ror #15
    f26c:	andeq	r0, r0, r4, ror #15
    f270:	andeq	r0, r0, r4, ror #15
    f274:	andeq	r0, r0, r4, ror #15
    f278:	andeq	r0, r0, r4, ror #15
    f27c:	andeq	r0, r0, r4, ror #15
    f280:	andeq	r0, r0, r4, ror #15
    f284:	andeq	r0, r0, r4, ror #15
    f288:	andeq	r0, r0, r4, ror #15
    f28c:	andeq	r0, r0, r4, ror #15
    f290:	andeq	r0, r0, r4, ror #15
    f294:	andeq	r0, r0, r4, ror #15
    f298:	andeq	r0, r0, r4, ror #15
    f29c:	andeq	r0, r0, r4, ror #15
    f2a0:	andeq	r0, r0, r4, ror #15
    f2a4:	andeq	r0, r0, r0, ror #15
    f2a8:	andeq	r0, r0, r0, ror #15
    f2ac:	andeq	r0, r0, r4, ror #15
    f2b0:	andeq	r0, r0, r4, ror #15
    f2b4:	andeq	r0, r0, r4, ror #15
    f2b8:	andeq	r0, r0, r4, ror #15
    f2bc:	andeq	r0, r0, r4, ror #15
    f2c0:	andeq	r0, r0, r4, ror #15
    f2c4:	andeq	r0, r0, r4, ror #15
    f2c8:	andeq	r0, r0, r4, ror #15
    f2cc:	andeq	r0, r0, r4, ror #15
    f2d0:	andeq	r0, r0, r4, ror #15
    f2d4:	andeq	r0, r0, r4, ror #15
    f2d8:	andeq	r0, r0, r4, ror #15
    f2dc:	andeq	r0, r0, r4, ror #15
    f2e0:	andeq	r0, r0, r4, ror #15
    f2e4:	andeq	r0, r0, r4, ror #15
    f2e8:	andeq	r0, r0, r4, ror #15
    f2ec:	andeq	r0, r0, r4, ror #15
    f2f0:	andeq	r0, r0, r4, ror #15
    f2f4:	andeq	r0, r0, r4, ror #15
    f2f8:	andeq	r0, r0, r4, ror #15
    f2fc:	andeq	r0, r0, r4, ror #15
    f300:	andeq	r0, r0, r4, ror #15
    f304:	andeq	r0, r0, r4, ror #15
    f308:	andeq	r0, r0, r4, ror #15
    f30c:	andeq	r0, r0, r4, ror #15
    f310:	andeq	r0, r0, r4, ror #15
    f314:	andeq	r0, r0, r4, ror #15
    f318:	andeq	r0, r0, r4, ror #15
    f31c:	andeq	r0, r0, r4, ror #15
    f320:	andeq	r0, r0, r4, ror #15
    f324:	andeq	r0, r0, r4, ror #15
    f328:	andeq	r0, r0, r4, ror #15
    f32c:	andeq	r0, r0, r4, ror #15
    f330:	andeq	r0, r0, r4, ror #15
    f334:	andeq	r0, r0, r4, ror #15
    f338:	andeq	r0, r0, r4, ror #15
    f33c:	andeq	r0, r0, r4, ror #15
    f340:	andeq	r0, r0, r4, ror #15
    f344:	andeq	r0, r0, r4, ror #15
    f348:	andeq	r0, r0, r4, ror #15
    f34c:	andeq	r0, r0, r4, ror #15
    f350:	andeq	r0, r0, r4, ror #15
    f354:	andeq	r0, r0, r4, ror #15
    f358:	andeq	r0, r0, r4, ror #15
    f35c:	andeq	r0, r0, r4, ror #15
    f360:	andeq	r0, r0, r4, ror #15
    f364:	andeq	r0, r0, r4, ror #15
    f368:	andeq	r0, r0, r4, ror #15
    f36c:	andeq	r0, r0, r4, ror #15
    f370:	andeq	r0, r0, r4, ror #15
    f374:	andeq	r0, r0, r4, ror #15
    f378:	andeq	r0, r0, r4, ror #15
    f37c:	andeq	r0, r0, r4, ror #15
    f380:	andeq	r0, r0, r4, ror #15
    f384:	andeq	r0, r0, r4, ror #15
    f388:	andeq	r0, r0, r4, ror #15
    f38c:	andeq	r0, r0, r4, ror #15
    f390:	andeq	r0, r0, r4, ror #15
    f394:	andeq	r0, r0, r4, ror #15
    f398:	andeq	r0, r0, r4, ror #15
    f39c:	andeq	r0, r0, r4, ror #15
    f3a0:	andeq	r0, r0, r4, ror #15
    f3a4:	andeq	r0, r0, r4, ror #15
    f3a8:	andeq	r0, r0, r4, ror #15
    f3ac:	andeq	r0, r0, r4, ror #15
    f3b0:	andeq	r0, r0, r4, ror #15
    f3b4:	andeq	r0, r0, r4, ror #15
    f3b8:	andeq	r0, r0, r4, ror #15
    f3bc:	andeq	r0, r0, r4, ror #15
    f3c0:	andeq	r0, r0, r4, ror #15
    f3c4:	andeq	r0, r0, r4, ror #15
    f3c8:	andeq	r0, r0, r4, ror #15
    f3cc:	andeq	r0, r0, r4, ror #15
    f3d0:	andeq	r0, r0, r4, ror #15
    f3d4:	andeq	r0, r0, r4, ror #15
    f3d8:	andeq	r0, r0, r4, ror #15
    f3dc:	andeq	r0, r0, r4, ror #15
    f3e0:	andeq	r0, r0, r4, ror #15
    f3e4:	andeq	r0, r0, r4, ror #15
    f3e8:	andeq	r0, r0, r4, ror #15
    f3ec:	andeq	r0, r0, r4, ror #15
    f3f0:	andeq	r0, r0, r4, ror #15
    f3f4:	andeq	r0, r0, r4, ror #15
    f3f8:	andeq	r0, r0, r4, ror #15
    f3fc:	andeq	r0, r0, r4, ror #15
    f400:	andeq	r0, r0, r4, ror #15
    f404:	andeq	r0, r0, r4, ror #15
    f408:	andeq	r0, r0, r4, ror #15
    f40c:	andeq	r0, r0, r4, ror #15
    f410:	andeq	r0, r0, r4, ror #15
    f414:	andeq	r0, r0, r4, ror #15
    f418:	andeq	r0, r0, r4, ror #15
    f41c:	andeq	r0, r0, r4, ror #15
    f420:	andeq	r0, r0, r4, ror #15
    f424:	andeq	r0, r0, r4, ror #15
    f428:	andeq	r0, r0, r4, ror #15
    f42c:	andeq	r0, r0, r4, ror #15
    f430:	andeq	r0, r0, r4, ror #15
    f434:	andeq	r0, r0, r4, ror #15
    f438:	andeq	r0, r0, r4, ror #15
    f43c:	andeq	r0, r0, r4, ror #15
    f440:	andeq	r0, r0, r4, ror #15
    f444:	andeq	r0, r0, r4, ror #15
    f448:	andeq	r0, r0, r4, ror #15
    f44c:	andeq	r0, r0, r4, ror #15
    f450:	andeq	r0, r0, r4, ror #15
    f454:	andeq	r0, r0, r4, ror #15
    f458:	andeq	r0, r0, r4, ror #15
    f45c:	andeq	r0, r0, r4, ror #15
    f460:	andeq	r0, r0, r4, ror #15
    f464:	andeq	r0, r0, r4, ror #15
    f468:	andeq	r0, r0, r4, ror #15
    f46c:	andeq	r0, r0, r4, ror #15
    f470:	andeq	r0, r0, r4, ror #15
    f474:	andeq	r0, r0, r4, ror #15
    f478:	andeq	r0, r0, r4, ror #15
    f47c:	andeq	r0, r0, r4, ror #15
    f480:	andeq	r0, r0, r4, ror #15
    f484:	andeq	r0, r0, r4, ror #15
    f488:	andeq	r0, r0, r4, ror #15
    f48c:	andeq	r0, r0, r4, ror #15
    f490:	andeq	r0, r0, r4, ror #15
    f494:	andeq	r0, r0, r4, ror #15
    f498:	andeq	r0, r0, r4, ror #15
    f49c:	andeq	r0, r0, r4, ror #15
    f4a0:	andeq	r0, r0, r0, ror #15
    f4a4:	andeq	r0, r0, r0, ror #15
    f4a8:	andeq	r0, r0, r0, ror #15
    f4ac:	andeq	r0, r0, r0, ror #15
    f4b0:	andeq	r0, r0, r4, ror #15
    f4b4:	andeq	r0, r0, r4, ror #15
    f4b8:	andeq	r0, r0, r4, ror #15
    f4bc:	andeq	r0, r0, r4, ror #15
    f4c0:	andeq	r0, r0, r4, ror #15
    f4c4:	andeq	r0, r0, r4, ror #15
    f4c8:	andeq	r0, r0, r4, ror #15
    f4cc:	andeq	r0, r0, r4, ror #15
    f4d0:	andeq	r0, r0, r4, ror #15
    f4d4:	andeq	r0, r0, r4, ror #15
    f4d8:	andeq	r0, r0, r4, ror #15
    f4dc:	andeq	r0, r0, r4, ror #15
    f4e0:	andeq	r0, r0, r4, ror #15
    f4e4:	andeq	r0, r0, r4, ror #15
    f4e8:	andeq	r0, r0, r4, ror #15
    f4ec:	andeq	r0, r0, r4, ror #15
    f4f0:	andeq	r0, r0, r4, ror #15
    f4f4:	andeq	r0, r0, r4, ror #15
    f4f8:	andeq	r0, r0, r4, ror #15
    f4fc:	andeq	r0, r0, r4, ror #15
    f500:	andeq	r0, r0, r4, ror #15
    f504:	andeq	r0, r0, r4, ror #15
    f508:	andeq	r0, r0, r4, ror #15
    f50c:	andeq	r0, r0, r4, ror #15
    f510:	andeq	r0, r0, r4, ror #15
    f514:	andeq	r0, r0, r4, ror #15
    f518:	andeq	r0, r0, r4, ror #15
    f51c:	andeq	r0, r0, r4, ror #15
    f520:	andeq	r0, r0, r4, ror #15
    f524:	andeq	r0, r0, r4, ror #15
    f528:	andeq	r0, r0, r4, ror #15
    f52c:	andeq	r0, r0, r4, ror #15
    f530:	andeq	r0, r0, r4, ror #15
    f534:	andeq	r0, r0, r4, ror #15
    f538:	andeq	r0, r0, r4, ror #15
    f53c:	andeq	r0, r0, r4, ror #15
    f540:	andeq	r0, r0, r4, ror #15
    f544:	andeq	r0, r0, r4, ror #15
    f548:	andeq	r0, r0, r4, ror #15
    f54c:	andeq	r0, r0, r4, ror #15
    f550:	andeq	r0, r0, r4, ror #15
    f554:	andeq	r0, r0, r4, ror #15
    f558:	andeq	r0, r0, r4, ror #15
    f55c:	andeq	r0, r0, r4, ror #15
    f560:	andeq	r0, r0, r4, ror #15
    f564:	andeq	r0, r0, r4, ror #15
    f568:	andeq	r0, r0, r4, ror #15
    f56c:	andeq	r0, r0, r4, ror #15
    f570:	andeq	r0, r0, r4, ror #15
    f574:	andeq	r0, r0, r4, ror #15
    f578:	andeq	r0, r0, r4, ror #15
    f57c:	andeq	r0, r0, r4, ror #15
    f580:	andeq	r0, r0, r4, ror #15
    f584:	andeq	r0, r0, r4, ror #15
    f588:	andeq	r0, r0, r4, ror #15
    f58c:	andeq	r0, r0, r4, ror #15
    f590:	andeq	r0, r0, r4, ror #15
    f594:	andeq	r0, r0, r4, ror #15
    f598:	andeq	r0, r0, r4, ror #15
    f59c:	andeq	r0, r0, r4, ror #15
    f5a0:	andeq	r0, r0, r4, ror #15
    f5a4:	andeq	r0, r0, r4, ror #15
    f5a8:	andeq	r0, r0, r4, ror #15
    f5ac:	andeq	r0, r0, r4, ror #15
    f5b0:	andeq	r0, r0, r4, ror #15
    f5b4:	andeq	r0, r0, r4, ror #15
    f5b8:	andeq	r0, r0, r4, ror #15
    f5bc:	andeq	r0, r0, r4, ror #15
    f5c0:	andeq	r0, r0, r4, ror #15
    f5c4:	andeq	r0, r0, r4, ror #15
    f5c8:	andeq	r0, r0, r4, ror #15
    f5cc:	andeq	r0, r0, r4, ror #15
    f5d0:	andeq	r0, r0, r4, ror #15
    f5d4:	andeq	r0, r0, r4, ror #15
    f5d8:	andeq	r0, r0, r4, ror #15
    f5dc:	andeq	r0, r0, r4, ror #15
    f5e0:	andeq	r0, r0, r4, ror #15
    f5e4:	andeq	r0, r0, r4, ror #15
    f5e8:	andeq	r0, r0, r4, ror #15
    f5ec:	andeq	r0, r0, r4, ror #15
    f5f0:	andeq	r0, r0, r4, ror #15
    f5f4:	andeq	r0, r0, r4, ror #15
    f5f8:	andeq	r0, r0, r4, ror #15
    f5fc:	andeq	r0, r0, r4, ror #15
    f600:	andeq	r0, r0, r4, ror #15
    f604:	andeq	r0, r0, r4, ror #15
    f608:	andeq	r0, r0, r4, ror #15
    f60c:	andeq	r0, r0, r4, ror #15
    f610:	andeq	r0, r0, r4, ror #15
    f614:	andeq	r0, r0, r4, ror #15
    f618:	andeq	r0, r0, r4, ror #15
    f61c:	andeq	r0, r0, r4, ror #15
    f620:	andeq	r0, r0, r4, ror #15
    f624:	andeq	r0, r0, r4, ror #15
    f628:	andeq	r0, r0, r4, ror #15
    f62c:	andeq	r0, r0, r4, ror #15
    f630:	andeq	r0, r0, r4, ror #15
    f634:	andeq	r0, r0, r4, ror #15
    f638:	andeq	r0, r0, r4, ror #15
    f63c:	andeq	r0, r0, r4, ror #15
    f640:	andeq	r0, r0, r4, ror #15
    f644:	andeq	r0, r0, r4, ror #15
    f648:	andeq	r0, r0, r4, ror #15
    f64c:	andeq	r0, r0, r4, ror #15
    f650:	andeq	r0, r0, r4, ror #15
    f654:	andeq	r0, r0, r4, ror #15
    f658:	andeq	r0, r0, r4, ror #15
    f65c:	andeq	r0, r0, r4, ror #15
    f660:	andeq	r0, r0, r4, ror #15
    f664:	andeq	r0, r0, r4, ror #15
    f668:	andeq	r0, r0, r4, ror #15
    f66c:	andeq	r0, r0, r4, ror #15
    f670:	andeq	r0, r0, r4, ror #15
    f674:	andeq	r0, r0, r4, ror #15
    f678:	andeq	r0, r0, r4, ror #15
    f67c:	andeq	r0, r0, r4, ror #15
    f680:	andeq	r0, r0, r4, ror #15
    f684:	andeq	r0, r0, r4, ror #15
    f688:	andeq	r0, r0, r4, ror #15
    f68c:	andeq	r0, r0, r4, ror #15
    f690:	andeq	r0, r0, r4, ror #15
    f694:	andeq	r0, r0, r4, ror #15
    f698:	andeq	r0, r0, r4, ror #15
    f69c:	andeq	r0, r0, r4, ror #15
    f6a0:	andeq	r0, r0, r4, ror #15
    f6a4:	andeq	r0, r0, r4, ror #15
    f6a8:	andeq	r0, r0, r0, ror #15
    f6ac:	cmp	r3, #2432	; 0x980
    f6b0:	bge	f784 <lell_packet_is_data@@Base+0x2138>
    f6b4:	movw	r1, #2036	; 0x7f4
    f6b8:	sub	r1, r3, r1
    f6bc:	cmp	r1, #28
    f6c0:	bcc	f888 <lell_packet_is_data@@Base+0x223c>
    f6c4:	movw	r1, #2302	; 0x8fe
    f6c8:	sub	r1, r3, r1
    f6cc:	cmp	r1, #4
    f6d0:	bcc	f888 <lell_packet_is_data@@Base+0x223c>
    f6d4:	cmp	r3, #2176	; 0x880
    f6d8:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f6dc:	b	f88c <lell_packet_is_data@@Base+0x2240>
    f6e0:	cmp	r3, #1152	; 0x480
    f6e4:	bge	f754 <lell_packet_is_data@@Base+0x2108>
    f6e8:	sub	r1, r3, #1016	; 0x3f8
    f6ec:	cmp	r1, #15
    f6f0:	bhi	f6fc <lell_packet_is_data@@Base+0x20b0>
    f6f4:	cmp	r1, #9
    f6f8:	bne	f888 <lell_packet_is_data@@Base+0x223c>
    f6fc:	movw	r1, #766	; 0x2fe
    f700:	sub	r1, r3, r1
    f704:	cmp	r1, #4
    f708:	bcc	f888 <lell_packet_is_data@@Base+0x223c>
    f70c:	cmp	r3, #896	; 0x380
    f710:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f714:	b	f88c <lell_packet_is_data@@Base+0x2240>
    f718:	cmp	r3, #4064	; 0xfe0
    f71c:	blt	f868 <lell_packet_is_data@@Base+0x221c>
    f720:	sub	r1, r3, #4064	; 0xfe0
    f724:	cmp	r1, #31
    f728:	bhi	f88c <lell_packet_is_data@@Base+0x2240>
    f72c:	movw	r6, #1
    f730:	mov	r3, #1
    f734:	movt	r6, #65535	; 0xffff
    f738:	tst	r6, r3, lsl r1
    f73c:	addne	r0, r0, #1
    f740:	bfc	r2, #12, #20
    f744:	movw	r1, #2035	; 0x7f3
    f748:	cmp	r2, r1
    f74c:	bgt	f89c <lell_packet_is_data@@Base+0x2250>
    f750:	b	f8d8 <lell_packet_is_data@@Base+0x228c>
    f754:	movw	r1, #1531	; 0x5fb
    f758:	cmp	r3, r1
    f75c:	ble	f820 <lell_packet_is_data@@Base+0x21d4>
    f760:	cmp	r3, #1664	; 0x680
    f764:	bge	f844 <lell_packet_is_data@@Base+0x21f8>
    f768:	movw	r1, #1532	; 0x5fc
    f76c:	sub	r1, r3, r1
    f770:	cmp	r1, #7
    f774:	bhi	f88c <lell_packet_is_data@@Base+0x2240>
    f778:	cmp	r1, #4
    f77c:	bne	f888 <lell_packet_is_data@@Base+0x223c>
    f780:	b	f88c <lell_packet_is_data@@Base+0x2240>
    f784:	cmp	r3, #2688	; 0xa80
    f788:	bge	f7dc <lell_packet_is_data@@Base+0x2190>
    f78c:	movw	r1, #2556	; 0x9fc
    f790:	sub	r1, r3, r1
    f794:	cmp	r1, #7
    f798:	bhi	f7a4 <lell_packet_is_data@@Base+0x2158>
    f79c:	cmp	r1, #4
    f7a0:	bne	f888 <lell_packet_is_data@@Base+0x223c>
    f7a4:	cmp	r3, #2432	; 0x980
    f7a8:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f7ac:	b	f88c <lell_packet_is_data@@Base+0x2240>
    f7b0:	movw	r1, #3580	; 0xdfc
    f7b4:	sub	r1, r3, r1
    f7b8:	cmp	r1, #8
    f7bc:	bcc	f888 <lell_packet_is_data@@Base+0x223c>
    f7c0:	movw	r1, #3326	; 0xcfe
    f7c4:	sub	r1, r3, r1
    f7c8:	cmp	r1, #4
    f7cc:	bcc	f888 <lell_packet_is_data@@Base+0x223c>
    f7d0:	cmp	r3, #3456	; 0xd80
    f7d4:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f7d8:	b	f88c <lell_packet_is_data@@Base+0x2240>
    f7dc:	movw	r1, #2814	; 0xafe
    f7e0:	sub	r1, r3, r1
    f7e4:	cmp	r1, #4
    f7e8:	bcc	f888 <lell_packet_is_data@@Base+0x223c>
    f7ec:	cmp	r3, #2688	; 0xa80
    f7f0:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f7f4:	cmp	r3, #2944	; 0xb80
    f7f8:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f7fc:	b	f88c <lell_packet_is_data@@Base+0x2240>
    f800:	sub	r1, r3, #508	; 0x1fc
    f804:	cmp	r1, #7
    f808:	bhi	f814 <lell_packet_is_data@@Base+0x21c8>
    f80c:	cmp	r1, #4
    f810:	bne	f888 <lell_packet_is_data@@Base+0x223c>
    f814:	cmp	r3, #640	; 0x280
    f818:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f81c:	b	f88c <lell_packet_is_data@@Base+0x2240>
    f820:	movw	r1, #1278	; 0x4fe
    f824:	sub	r1, r3, r1
    f828:	cmp	r1, #4
    f82c:	bcc	f888 <lell_packet_is_data@@Base+0x223c>
    f830:	cmp	r3, #1152	; 0x480
    f834:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f838:	cmp	r3, #1408	; 0x580
    f83c:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f840:	b	f88c <lell_packet_is_data@@Base+0x2240>
    f844:	movw	r1, #1790	; 0x6fe
    f848:	sub	r1, r3, r1
    f84c:	cmp	r1, #4
    f850:	bcc	f888 <lell_packet_is_data@@Base+0x223c>
    f854:	cmp	r3, #1664	; 0x680
    f858:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f85c:	cmp	r3, #1920	; 0x780
    f860:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f864:	b	f88c <lell_packet_is_data@@Base+0x2240>
    f868:	movw	r1, #3838	; 0xefe
    f86c:	sub	r1, r3, r1
    f870:	cmp	r1, #4
    f874:	bcc	f888 <lell_packet_is_data@@Base+0x223c>
    f878:	cmp	r3, #3712	; 0xe80
    f87c:	beq	f888 <lell_packet_is_data@@Base+0x223c>
    f880:	cmp	r3, #3968	; 0xf80
    f884:	bne	f88c <lell_packet_is_data@@Base+0x2240>
    f888:	add	r0, r0, #1
    f88c:	bfc	r2, #12, #20
    f890:	movw	r1, #2035	; 0x7f3
    f894:	cmp	r2, r1
    f898:	ble	f8d8 <lell_packet_is_data@@Base+0x228c>
    f89c:	movw	r1, #3063	; 0xbf7
    f8a0:	cmp	r2, r1
    f8a4:	ble	fefc <lell_packet_is_data@@Base+0x28b0>
    f8a8:	cmp	r2, #3712	; 0xe80
    f8ac:	bge	ff68 <lell_packet_is_data@@Base+0x291c>
    f8b0:	movw	r1, #3325	; 0xcfd
    f8b4:	cmp	r2, r1
    f8b8:	bgt	10000 <lell_packet_is_data@@Base+0x29b4>
    f8bc:	movw	r1, #3064	; 0xbf8
    f8c0:	sub	r1, r2, r1
    f8c4:	cmp	r1, #16
    f8c8:	bcc	100d8 <lell_packet_is_data@@Base+0x2a8c>
    f8cc:	cmp	r2, #3200	; 0xc80
    f8d0:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
    f8d4:	b	100dc <lell_packet_is_data@@Base+0x2a90>
    f8d8:	movw	r1, #765	; 0x2fd
    f8dc:	cmp	r2, r1
    f8e0:	bgt	ff30 <lell_packet_is_data@@Base+0x28e4>
    f8e4:	cmp	r2, #384	; 0x180
    f8e8:	bhi	10050 <lell_packet_is_data@@Base+0x2a04>
    f8ec:	add	r1, pc, #4
    f8f0:	ldr	r2, [r1, r2, lsl #2]
    f8f4:	add	pc, r1, r2
    f8f8:	andeq	r0, r0, r0, ror #15
    f8fc:	andeq	r0, r0, r0, ror #15
    f900:	andeq	r0, r0, r0, ror #15
    f904:	andeq	r0, r0, r0, ror #15
    f908:	andeq	r0, r0, r0, ror #15
    f90c:	andeq	r0, r0, r0, ror #15
    f910:	andeq	r0, r0, r0, ror #15
    f914:	andeq	r0, r0, r0, ror #15
    f918:	andeq	r0, r0, r0, ror #15
    f91c:	andeq	r0, r0, r0, ror #15
    f920:	andeq	r0, r0, r0, ror #15
    f924:	andeq	r0, r0, r0, ror #15
    f928:	andeq	r0, r0, r0, ror #15
    f92c:	andeq	r0, r0, r0, ror #15
    f930:	andeq	r0, r0, r0, ror #15
    f934:	andeq	r0, r0, r0, ror #15
    f938:	andeq	r0, r0, r0, ror #15
    f93c:	andeq	r0, r0, r0, ror #15
    f940:	andeq	r0, r0, r0, ror #15
    f944:	andeq	r0, r0, r0, ror #15
    f948:	andeq	r0, r0, r0, ror #15
    f94c:	andeq	r0, r0, r0, ror #15
    f950:	andeq	r0, r0, r0, ror #15
    f954:	andeq	r0, r0, r0, ror #15
    f958:	andeq	r0, r0, r0, ror #15
    f95c:	andeq	r0, r0, r0, ror #15
    f960:	andeq	r0, r0, r0, ror #15
    f964:	andeq	r0, r0, r0, ror #15
    f968:	andeq	r0, r0, r0, ror #15
    f96c:	andeq	r0, r0, r0, ror #15
    f970:	andeq	r0, r0, r0, ror #15
    f974:	andeq	r0, r0, r0, ror #15
    f978:	andeq	r0, r0, r4, ror #15
    f97c:	andeq	r0, r0, r4, ror #15
    f980:	andeq	r0, r0, r4, ror #15
    f984:	andeq	r0, r0, r4, ror #15
    f988:	andeq	r0, r0, r4, ror #15
    f98c:	andeq	r0, r0, r4, ror #15
    f990:	andeq	r0, r0, r4, ror #15
    f994:	andeq	r0, r0, r4, ror #15
    f998:	andeq	r0, r0, r4, ror #15
    f99c:	andeq	r0, r0, r4, ror #15
    f9a0:	andeq	r0, r0, r4, ror #15
    f9a4:	andeq	r0, r0, r4, ror #15
    f9a8:	andeq	r0, r0, r4, ror #15
    f9ac:	andeq	r0, r0, r4, ror #15
    f9b0:	andeq	r0, r0, r4, ror #15
    f9b4:	andeq	r0, r0, r4, ror #15
    f9b8:	andeq	r0, r0, r4, ror #15
    f9bc:	andeq	r0, r0, r4, ror #15
    f9c0:	andeq	r0, r0, r4, ror #15
    f9c4:	andeq	r0, r0, r4, ror #15
    f9c8:	andeq	r0, r0, r4, ror #15
    f9cc:	andeq	r0, r0, r4, ror #15
    f9d0:	andeq	r0, r0, r4, ror #15
    f9d4:	andeq	r0, r0, r4, ror #15
    f9d8:	andeq	r0, r0, r4, ror #15
    f9dc:	andeq	r0, r0, r4, ror #15
    f9e0:	andeq	r0, r0, r4, ror #15
    f9e4:	andeq	r0, r0, r4, ror #15
    f9e8:	andeq	r0, r0, r4, ror #15
    f9ec:	andeq	r0, r0, r4, ror #15
    f9f0:	andeq	r0, r0, r4, ror #15
    f9f4:	andeq	r0, r0, r4, ror #15
    f9f8:	andeq	r0, r0, r4, ror #15
    f9fc:	andeq	r0, r0, r4, ror #15
    fa00:	andeq	r0, r0, r4, ror #15
    fa04:	andeq	r0, r0, r4, ror #15
    fa08:	andeq	r0, r0, r4, ror #15
    fa0c:	andeq	r0, r0, r4, ror #15
    fa10:	andeq	r0, r0, r4, ror #15
    fa14:	andeq	r0, r0, r4, ror #15
    fa18:	andeq	r0, r0, r4, ror #15
    fa1c:	andeq	r0, r0, r4, ror #15
    fa20:	andeq	r0, r0, r4, ror #15
    fa24:	andeq	r0, r0, r4, ror #15
    fa28:	andeq	r0, r0, r4, ror #15
    fa2c:	andeq	r0, r0, r4, ror #15
    fa30:	andeq	r0, r0, r4, ror #15
    fa34:	andeq	r0, r0, r4, ror #15
    fa38:	andeq	r0, r0, r4, ror #15
    fa3c:	andeq	r0, r0, r4, ror #15
    fa40:	andeq	r0, r0, r4, ror #15
    fa44:	andeq	r0, r0, r4, ror #15
    fa48:	andeq	r0, r0, r4, ror #15
    fa4c:	andeq	r0, r0, r4, ror #15
    fa50:	andeq	r0, r0, r4, ror #15
    fa54:	andeq	r0, r0, r4, ror #15
    fa58:	andeq	r0, r0, r4, ror #15
    fa5c:	andeq	r0, r0, r4, ror #15
    fa60:	andeq	r0, r0, r4, ror #15
    fa64:	andeq	r0, r0, r4, ror #15
    fa68:	andeq	r0, r0, r4, ror #15
    fa6c:	andeq	r0, r0, r4, ror #15
    fa70:	andeq	r0, r0, r4, ror #15
    fa74:	andeq	r0, r0, r4, ror #15
    fa78:	andeq	r0, r0, r4, ror #15
    fa7c:	andeq	r0, r0, r4, ror #15
    fa80:	andeq	r0, r0, r4, ror #15
    fa84:	andeq	r0, r0, r4, ror #15
    fa88:	andeq	r0, r0, r4, ror #15
    fa8c:	andeq	r0, r0, r4, ror #15
    fa90:	andeq	r0, r0, r4, ror #15
    fa94:	andeq	r0, r0, r4, ror #15
    fa98:	andeq	r0, r0, r4, ror #15
    fa9c:	andeq	r0, r0, r4, ror #15
    faa0:	andeq	r0, r0, r4, ror #15
    faa4:	andeq	r0, r0, r4, ror #15
    faa8:	andeq	r0, r0, r4, ror #15
    faac:	andeq	r0, r0, r4, ror #15
    fab0:	andeq	r0, r0, r4, ror #15
    fab4:	andeq	r0, r0, r4, ror #15
    fab8:	andeq	r0, r0, r4, ror #15
    fabc:	andeq	r0, r0, r4, ror #15
    fac0:	andeq	r0, r0, r4, ror #15
    fac4:	andeq	r0, r0, r4, ror #15
    fac8:	andeq	r0, r0, r4, ror #15
    facc:	andeq	r0, r0, r4, ror #15
    fad0:	andeq	r0, r0, r4, ror #15
    fad4:	andeq	r0, r0, r4, ror #15
    fad8:	andeq	r0, r0, r4, ror #15
    fadc:	andeq	r0, r0, r4, ror #15
    fae0:	andeq	r0, r0, r4, ror #15
    fae4:	andeq	r0, r0, r4, ror #15
    fae8:	andeq	r0, r0, r4, ror #15
    faec:	andeq	r0, r0, r4, ror #15
    faf0:	andeq	r0, r0, r4, ror #15
    faf4:	andeq	r0, r0, r0, ror #15
    faf8:	andeq	r0, r0, r0, ror #15
    fafc:	andeq	r0, r0, r4, ror #15
    fb00:	andeq	r0, r0, r4, ror #15
    fb04:	andeq	r0, r0, r4, ror #15
    fb08:	andeq	r0, r0, r4, ror #15
    fb0c:	andeq	r0, r0, r4, ror #15
    fb10:	andeq	r0, r0, r4, ror #15
    fb14:	andeq	r0, r0, r4, ror #15
    fb18:	andeq	r0, r0, r4, ror #15
    fb1c:	andeq	r0, r0, r4, ror #15
    fb20:	andeq	r0, r0, r4, ror #15
    fb24:	andeq	r0, r0, r4, ror #15
    fb28:	andeq	r0, r0, r4, ror #15
    fb2c:	andeq	r0, r0, r4, ror #15
    fb30:	andeq	r0, r0, r4, ror #15
    fb34:	andeq	r0, r0, r4, ror #15
    fb38:	andeq	r0, r0, r4, ror #15
    fb3c:	andeq	r0, r0, r4, ror #15
    fb40:	andeq	r0, r0, r4, ror #15
    fb44:	andeq	r0, r0, r4, ror #15
    fb48:	andeq	r0, r0, r4, ror #15
    fb4c:	andeq	r0, r0, r4, ror #15
    fb50:	andeq	r0, r0, r4, ror #15
    fb54:	andeq	r0, r0, r4, ror #15
    fb58:	andeq	r0, r0, r4, ror #15
    fb5c:	andeq	r0, r0, r4, ror #15
    fb60:	andeq	r0, r0, r4, ror #15
    fb64:	andeq	r0, r0, r4, ror #15
    fb68:	andeq	r0, r0, r4, ror #15
    fb6c:	andeq	r0, r0, r4, ror #15
    fb70:	andeq	r0, r0, r4, ror #15
    fb74:	andeq	r0, r0, r4, ror #15
    fb78:	andeq	r0, r0, r4, ror #15
    fb7c:	andeq	r0, r0, r4, ror #15
    fb80:	andeq	r0, r0, r4, ror #15
    fb84:	andeq	r0, r0, r4, ror #15
    fb88:	andeq	r0, r0, r4, ror #15
    fb8c:	andeq	r0, r0, r4, ror #15
    fb90:	andeq	r0, r0, r4, ror #15
    fb94:	andeq	r0, r0, r4, ror #15
    fb98:	andeq	r0, r0, r4, ror #15
    fb9c:	andeq	r0, r0, r4, ror #15
    fba0:	andeq	r0, r0, r4, ror #15
    fba4:	andeq	r0, r0, r4, ror #15
    fba8:	andeq	r0, r0, r4, ror #15
    fbac:	andeq	r0, r0, r4, ror #15
    fbb0:	andeq	r0, r0, r4, ror #15
    fbb4:	andeq	r0, r0, r4, ror #15
    fbb8:	andeq	r0, r0, r4, ror #15
    fbbc:	andeq	r0, r0, r4, ror #15
    fbc0:	andeq	r0, r0, r4, ror #15
    fbc4:	andeq	r0, r0, r4, ror #15
    fbc8:	andeq	r0, r0, r4, ror #15
    fbcc:	andeq	r0, r0, r4, ror #15
    fbd0:	andeq	r0, r0, r4, ror #15
    fbd4:	andeq	r0, r0, r4, ror #15
    fbd8:	andeq	r0, r0, r4, ror #15
    fbdc:	andeq	r0, r0, r4, ror #15
    fbe0:	andeq	r0, r0, r4, ror #15
    fbe4:	andeq	r0, r0, r4, ror #15
    fbe8:	andeq	r0, r0, r4, ror #15
    fbec:	andeq	r0, r0, r4, ror #15
    fbf0:	andeq	r0, r0, r4, ror #15
    fbf4:	andeq	r0, r0, r4, ror #15
    fbf8:	andeq	r0, r0, r4, ror #15
    fbfc:	andeq	r0, r0, r4, ror #15
    fc00:	andeq	r0, r0, r4, ror #15
    fc04:	andeq	r0, r0, r4, ror #15
    fc08:	andeq	r0, r0, r4, ror #15
    fc0c:	andeq	r0, r0, r4, ror #15
    fc10:	andeq	r0, r0, r4, ror #15
    fc14:	andeq	r0, r0, r4, ror #15
    fc18:	andeq	r0, r0, r4, ror #15
    fc1c:	andeq	r0, r0, r4, ror #15
    fc20:	andeq	r0, r0, r4, ror #15
    fc24:	andeq	r0, r0, r4, ror #15
    fc28:	andeq	r0, r0, r4, ror #15
    fc2c:	andeq	r0, r0, r4, ror #15
    fc30:	andeq	r0, r0, r4, ror #15
    fc34:	andeq	r0, r0, r4, ror #15
    fc38:	andeq	r0, r0, r4, ror #15
    fc3c:	andeq	r0, r0, r4, ror #15
    fc40:	andeq	r0, r0, r4, ror #15
    fc44:	andeq	r0, r0, r4, ror #15
    fc48:	andeq	r0, r0, r4, ror #15
    fc4c:	andeq	r0, r0, r4, ror #15
    fc50:	andeq	r0, r0, r4, ror #15
    fc54:	andeq	r0, r0, r4, ror #15
    fc58:	andeq	r0, r0, r4, ror #15
    fc5c:	andeq	r0, r0, r4, ror #15
    fc60:	andeq	r0, r0, r4, ror #15
    fc64:	andeq	r0, r0, r4, ror #15
    fc68:	andeq	r0, r0, r4, ror #15
    fc6c:	andeq	r0, r0, r4, ror #15
    fc70:	andeq	r0, r0, r4, ror #15
    fc74:	andeq	r0, r0, r4, ror #15
    fc78:	andeq	r0, r0, r4, ror #15
    fc7c:	andeq	r0, r0, r4, ror #15
    fc80:	andeq	r0, r0, r4, ror #15
    fc84:	andeq	r0, r0, r4, ror #15
    fc88:	andeq	r0, r0, r4, ror #15
    fc8c:	andeq	r0, r0, r4, ror #15
    fc90:	andeq	r0, r0, r4, ror #15
    fc94:	andeq	r0, r0, r4, ror #15
    fc98:	andeq	r0, r0, r4, ror #15
    fc9c:	andeq	r0, r0, r4, ror #15
    fca0:	andeq	r0, r0, r4, ror #15
    fca4:	andeq	r0, r0, r4, ror #15
    fca8:	andeq	r0, r0, r4, ror #15
    fcac:	andeq	r0, r0, r4, ror #15
    fcb0:	andeq	r0, r0, r4, ror #15
    fcb4:	andeq	r0, r0, r4, ror #15
    fcb8:	andeq	r0, r0, r4, ror #15
    fcbc:	andeq	r0, r0, r4, ror #15
    fcc0:	andeq	r0, r0, r4, ror #15
    fcc4:	andeq	r0, r0, r4, ror #15
    fcc8:	andeq	r0, r0, r4, ror #15
    fccc:	andeq	r0, r0, r4, ror #15
    fcd0:	andeq	r0, r0, r4, ror #15
    fcd4:	andeq	r0, r0, r4, ror #15
    fcd8:	andeq	r0, r0, r4, ror #15
    fcdc:	andeq	r0, r0, r4, ror #15
    fce0:	andeq	r0, r0, r4, ror #15
    fce4:	andeq	r0, r0, r4, ror #15
    fce8:	andeq	r0, r0, r4, ror #15
    fcec:	andeq	r0, r0, r4, ror #15
    fcf0:	andeq	r0, r0, r0, ror #15
    fcf4:	andeq	r0, r0, r0, ror #15
    fcf8:	andeq	r0, r0, r0, ror #15
    fcfc:	andeq	r0, r0, r0, ror #15
    fd00:	andeq	r0, r0, r4, ror #15
    fd04:	andeq	r0, r0, r4, ror #15
    fd08:	andeq	r0, r0, r4, ror #15
    fd0c:	andeq	r0, r0, r4, ror #15
    fd10:	andeq	r0, r0, r4, ror #15
    fd14:	andeq	r0, r0, r4, ror #15
    fd18:	andeq	r0, r0, r4, ror #15
    fd1c:	andeq	r0, r0, r4, ror #15
    fd20:	andeq	r0, r0, r4, ror #15
    fd24:	andeq	r0, r0, r4, ror #15
    fd28:	andeq	r0, r0, r4, ror #15
    fd2c:	andeq	r0, r0, r4, ror #15
    fd30:	andeq	r0, r0, r4, ror #15
    fd34:	andeq	r0, r0, r4, ror #15
    fd38:	andeq	r0, r0, r4, ror #15
    fd3c:	andeq	r0, r0, r4, ror #15
    fd40:	andeq	r0, r0, r4, ror #15
    fd44:	andeq	r0, r0, r4, ror #15
    fd48:	andeq	r0, r0, r4, ror #15
    fd4c:	andeq	r0, r0, r4, ror #15
    fd50:	andeq	r0, r0, r4, ror #15
    fd54:	andeq	r0, r0, r4, ror #15
    fd58:	andeq	r0, r0, r4, ror #15
    fd5c:	andeq	r0, r0, r4, ror #15
    fd60:	andeq	r0, r0, r4, ror #15
    fd64:	andeq	r0, r0, r4, ror #15
    fd68:	andeq	r0, r0, r4, ror #15
    fd6c:	andeq	r0, r0, r4, ror #15
    fd70:	andeq	r0, r0, r4, ror #15
    fd74:	andeq	r0, r0, r4, ror #15
    fd78:	andeq	r0, r0, r4, ror #15
    fd7c:	andeq	r0, r0, r4, ror #15
    fd80:	andeq	r0, r0, r4, ror #15
    fd84:	andeq	r0, r0, r4, ror #15
    fd88:	andeq	r0, r0, r4, ror #15
    fd8c:	andeq	r0, r0, r4, ror #15
    fd90:	andeq	r0, r0, r4, ror #15
    fd94:	andeq	r0, r0, r4, ror #15
    fd98:	andeq	r0, r0, r4, ror #15
    fd9c:	andeq	r0, r0, r4, ror #15
    fda0:	andeq	r0, r0, r4, ror #15
    fda4:	andeq	r0, r0, r4, ror #15
    fda8:	andeq	r0, r0, r4, ror #15
    fdac:	andeq	r0, r0, r4, ror #15
    fdb0:	andeq	r0, r0, r4, ror #15
    fdb4:	andeq	r0, r0, r4, ror #15
    fdb8:	andeq	r0, r0, r4, ror #15
    fdbc:	andeq	r0, r0, r4, ror #15
    fdc0:	andeq	r0, r0, r4, ror #15
    fdc4:	andeq	r0, r0, r4, ror #15
    fdc8:	andeq	r0, r0, r4, ror #15
    fdcc:	andeq	r0, r0, r4, ror #15
    fdd0:	andeq	r0, r0, r4, ror #15
    fdd4:	andeq	r0, r0, r4, ror #15
    fdd8:	andeq	r0, r0, r4, ror #15
    fddc:	andeq	r0, r0, r4, ror #15
    fde0:	andeq	r0, r0, r4, ror #15
    fde4:	andeq	r0, r0, r4, ror #15
    fde8:	andeq	r0, r0, r4, ror #15
    fdec:	andeq	r0, r0, r4, ror #15
    fdf0:	andeq	r0, r0, r4, ror #15
    fdf4:	andeq	r0, r0, r4, ror #15
    fdf8:	andeq	r0, r0, r4, ror #15
    fdfc:	andeq	r0, r0, r4, ror #15
    fe00:	andeq	r0, r0, r4, ror #15
    fe04:	andeq	r0, r0, r4, ror #15
    fe08:	andeq	r0, r0, r4, ror #15
    fe0c:	andeq	r0, r0, r4, ror #15
    fe10:	andeq	r0, r0, r4, ror #15
    fe14:	andeq	r0, r0, r4, ror #15
    fe18:	andeq	r0, r0, r4, ror #15
    fe1c:	andeq	r0, r0, r4, ror #15
    fe20:	andeq	r0, r0, r4, ror #15
    fe24:	andeq	r0, r0, r4, ror #15
    fe28:	andeq	r0, r0, r4, ror #15
    fe2c:	andeq	r0, r0, r4, ror #15
    fe30:	andeq	r0, r0, r4, ror #15
    fe34:	andeq	r0, r0, r4, ror #15
    fe38:	andeq	r0, r0, r4, ror #15
    fe3c:	andeq	r0, r0, r4, ror #15
    fe40:	andeq	r0, r0, r4, ror #15
    fe44:	andeq	r0, r0, r4, ror #15
    fe48:	andeq	r0, r0, r4, ror #15
    fe4c:	andeq	r0, r0, r4, ror #15
    fe50:	andeq	r0, r0, r4, ror #15
    fe54:	andeq	r0, r0, r4, ror #15
    fe58:	andeq	r0, r0, r4, ror #15
    fe5c:	andeq	r0, r0, r4, ror #15
    fe60:	andeq	r0, r0, r4, ror #15
    fe64:	andeq	r0, r0, r4, ror #15
    fe68:	andeq	r0, r0, r4, ror #15
    fe6c:	andeq	r0, r0, r4, ror #15
    fe70:	andeq	r0, r0, r4, ror #15
    fe74:	andeq	r0, r0, r4, ror #15
    fe78:	andeq	r0, r0, r4, ror #15
    fe7c:	andeq	r0, r0, r4, ror #15
    fe80:	andeq	r0, r0, r4, ror #15
    fe84:	andeq	r0, r0, r4, ror #15
    fe88:	andeq	r0, r0, r4, ror #15
    fe8c:	andeq	r0, r0, r4, ror #15
    fe90:	andeq	r0, r0, r4, ror #15
    fe94:	andeq	r0, r0, r4, ror #15
    fe98:	andeq	r0, r0, r4, ror #15
    fe9c:	andeq	r0, r0, r4, ror #15
    fea0:	andeq	r0, r0, r4, ror #15
    fea4:	andeq	r0, r0, r4, ror #15
    fea8:	andeq	r0, r0, r4, ror #15
    feac:	andeq	r0, r0, r4, ror #15
    feb0:	andeq	r0, r0, r4, ror #15
    feb4:	andeq	r0, r0, r4, ror #15
    feb8:	andeq	r0, r0, r4, ror #15
    febc:	andeq	r0, r0, r4, ror #15
    fec0:	andeq	r0, r0, r4, ror #15
    fec4:	andeq	r0, r0, r4, ror #15
    fec8:	andeq	r0, r0, r4, ror #15
    fecc:	andeq	r0, r0, r4, ror #15
    fed0:	andeq	r0, r0, r4, ror #15
    fed4:	andeq	r0, r0, r4, ror #15
    fed8:	andeq	r0, r0, r4, ror #15
    fedc:	andeq	r0, r0, r4, ror #15
    fee0:	andeq	r0, r0, r4, ror #15
    fee4:	andeq	r0, r0, r4, ror #15
    fee8:	andeq	r0, r0, r4, ror #15
    feec:	andeq	r0, r0, r4, ror #15
    fef0:	andeq	r0, r0, r4, ror #15
    fef4:	andeq	r0, r0, r4, ror #15
    fef8:	andeq	r0, r0, r0, ror #15
    fefc:	cmp	r2, #2432	; 0x980
    ff00:	bge	ffd4 <lell_packet_is_data@@Base+0x2988>
    ff04:	movw	r1, #2036	; 0x7f4
    ff08:	sub	r1, r2, r1
    ff0c:	cmp	r1, #28
    ff10:	bcc	100d8 <lell_packet_is_data@@Base+0x2a8c>
    ff14:	movw	r1, #2302	; 0x8fe
    ff18:	sub	r1, r2, r1
    ff1c:	cmp	r1, #4
    ff20:	bcc	100d8 <lell_packet_is_data@@Base+0x2a8c>
    ff24:	cmp	r2, #2176	; 0x880
    ff28:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
    ff2c:	b	100dc <lell_packet_is_data@@Base+0x2a90>
    ff30:	cmp	r2, #1152	; 0x480
    ff34:	bge	ffa4 <lell_packet_is_data@@Base+0x2958>
    ff38:	sub	r1, r2, #1016	; 0x3f8
    ff3c:	cmp	r1, #15
    ff40:	bhi	ff4c <lell_packet_is_data@@Base+0x2900>
    ff44:	cmp	r1, #9
    ff48:	bne	100d8 <lell_packet_is_data@@Base+0x2a8c>
    ff4c:	movw	r1, #766	; 0x2fe
    ff50:	sub	r1, r2, r1
    ff54:	cmp	r1, #4
    ff58:	bcc	100d8 <lell_packet_is_data@@Base+0x2a8c>
    ff5c:	cmp	r2, #896	; 0x380
    ff60:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
    ff64:	b	100dc <lell_packet_is_data@@Base+0x2a90>
    ff68:	cmp	r2, #4064	; 0xfe0
    ff6c:	blt	100b8 <lell_packet_is_data@@Base+0x2a6c>
    ff70:	sub	r1, r2, #4064	; 0xfe0
    ff74:	cmp	r1, #31
    ff78:	bhi	100dc <lell_packet_is_data@@Base+0x2a90>
    ff7c:	movw	r3, #1
    ff80:	mov	r2, #1
    ff84:	movt	r3, #65535	; 0xffff
    ff88:	tst	r3, r2, lsl r1
    ff8c:	addne	r0, r0, #1
    ff90:	lsr	r1, ip, #20
    ff94:	movw	r2, #2035	; 0x7f3
    ff98:	cmp	r1, r2
    ff9c:	bgt	100ec <lell_packet_is_data@@Base+0x2aa0>
    ffa0:	b	10128 <lell_packet_is_data@@Base+0x2adc>
    ffa4:	movw	r1, #1531	; 0x5fb
    ffa8:	cmp	r2, r1
    ffac:	ble	10070 <lell_packet_is_data@@Base+0x2a24>
    ffb0:	cmp	r2, #1664	; 0x680
    ffb4:	bge	10094 <lell_packet_is_data@@Base+0x2a48>
    ffb8:	movw	r1, #1532	; 0x5fc
    ffbc:	sub	r1, r2, r1
    ffc0:	cmp	r1, #7
    ffc4:	bhi	100dc <lell_packet_is_data@@Base+0x2a90>
    ffc8:	cmp	r1, #4
    ffcc:	bne	100d8 <lell_packet_is_data@@Base+0x2a8c>
    ffd0:	b	100dc <lell_packet_is_data@@Base+0x2a90>
    ffd4:	cmp	r2, #2688	; 0xa80
    ffd8:	bge	1002c <lell_packet_is_data@@Base+0x29e0>
    ffdc:	movw	r1, #2556	; 0x9fc
    ffe0:	sub	r1, r2, r1
    ffe4:	cmp	r1, #7
    ffe8:	bhi	fff4 <lell_packet_is_data@@Base+0x29a8>
    ffec:	cmp	r1, #4
    fff0:	bne	100d8 <lell_packet_is_data@@Base+0x2a8c>
    fff4:	cmp	r2, #2432	; 0x980
    fff8:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
    fffc:	b	100dc <lell_packet_is_data@@Base+0x2a90>
   10000:	movw	r1, #3580	; 0xdfc
   10004:	sub	r1, r2, r1
   10008:	cmp	r1, #8
   1000c:	bcc	100d8 <lell_packet_is_data@@Base+0x2a8c>
   10010:	movw	r1, #3326	; 0xcfe
   10014:	sub	r1, r2, r1
   10018:	cmp	r1, #4
   1001c:	bcc	100d8 <lell_packet_is_data@@Base+0x2a8c>
   10020:	cmp	r2, #3456	; 0xd80
   10024:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
   10028:	b	100dc <lell_packet_is_data@@Base+0x2a90>
   1002c:	movw	r1, #2814	; 0xafe
   10030:	sub	r1, r2, r1
   10034:	cmp	r1, #4
   10038:	bcc	100d8 <lell_packet_is_data@@Base+0x2a8c>
   1003c:	cmp	r2, #2688	; 0xa80
   10040:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
   10044:	cmp	r2, #2944	; 0xb80
   10048:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
   1004c:	b	100dc <lell_packet_is_data@@Base+0x2a90>
   10050:	sub	r1, r2, #508	; 0x1fc
   10054:	cmp	r1, #7
   10058:	bhi	10064 <lell_packet_is_data@@Base+0x2a18>
   1005c:	cmp	r1, #4
   10060:	bne	100d8 <lell_packet_is_data@@Base+0x2a8c>
   10064:	cmp	r2, #640	; 0x280
   10068:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
   1006c:	b	100dc <lell_packet_is_data@@Base+0x2a90>
   10070:	movw	r1, #1278	; 0x4fe
   10074:	sub	r1, r2, r1
   10078:	cmp	r1, #4
   1007c:	bcc	100d8 <lell_packet_is_data@@Base+0x2a8c>
   10080:	cmp	r2, #1152	; 0x480
   10084:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
   10088:	cmp	r2, #1408	; 0x580
   1008c:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
   10090:	b	100dc <lell_packet_is_data@@Base+0x2a90>
   10094:	movw	r1, #1790	; 0x6fe
   10098:	sub	r1, r2, r1
   1009c:	cmp	r1, #4
   100a0:	bcc	100d8 <lell_packet_is_data@@Base+0x2a8c>
   100a4:	cmp	r2, #1664	; 0x680
   100a8:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
   100ac:	cmp	r2, #1920	; 0x780
   100b0:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
   100b4:	b	100dc <lell_packet_is_data@@Base+0x2a90>
   100b8:	movw	r1, #3838	; 0xefe
   100bc:	sub	r1, r2, r1
   100c0:	cmp	r1, #4
   100c4:	bcc	100d8 <lell_packet_is_data@@Base+0x2a8c>
   100c8:	cmp	r2, #3712	; 0xe80
   100cc:	beq	100d8 <lell_packet_is_data@@Base+0x2a8c>
   100d0:	cmp	r2, #3968	; 0xf80
   100d4:	bne	100dc <lell_packet_is_data@@Base+0x2a90>
   100d8:	add	r0, r0, #1
   100dc:	lsr	r1, ip, #20
   100e0:	movw	r2, #2035	; 0x7f3
   100e4:	cmp	r1, r2
   100e8:	ble	10128 <lell_packet_is_data@@Base+0x2adc>
   100ec:	movw	r2, #3063	; 0xbf7
   100f0:	cmp	r1, r2
   100f4:	ble	1074c <lell_packet_is_data@@Base+0x3100>
   100f8:	cmp	r1, #3712	; 0xe80
   100fc:	bge	107b8 <lell_packet_is_data@@Base+0x316c>
   10100:	movw	r2, #3325	; 0xcfd
   10104:	cmp	r1, r2
   10108:	bgt	10840 <lell_packet_is_data@@Base+0x31f4>
   1010c:	movw	r2, #3064	; 0xbf8
   10110:	sub	r2, r1, r2
   10114:	cmp	r2, #16
   10118:	bcc	10918 <lell_packet_is_data@@Base+0x32cc>
   1011c:	cmp	r1, #3200	; 0xc80
   10120:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   10124:	b	1091c <lell_packet_is_data@@Base+0x32d0>
   10128:	movw	r2, #765	; 0x2fd
   1012c:	cmp	r1, r2
   10130:	bgt	10780 <lell_packet_is_data@@Base+0x3134>
   10134:	cmp	r1, #384	; 0x180
   10138:	bhi	10890 <lell_packet_is_data@@Base+0x3244>
   1013c:	add	r2, pc, #4
   10140:	ldr	r1, [r2, r1, lsl #2]
   10144:	add	pc, r2, r1
   10148:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1014c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10150:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10154:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10158:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1015c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10160:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10164:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10168:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1016c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10170:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10174:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10178:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1017c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10180:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10184:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10188:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1018c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10190:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10194:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10198:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1019c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101a4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101a8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101ac:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101b0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101b4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101b8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101bc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   101c8:	ldrdeq	r0, [r0], -r4
   101cc:	ldrdeq	r0, [r0], -r4
   101d0:	ldrdeq	r0, [r0], -r4
   101d4:	ldrdeq	r0, [r0], -r4
   101d8:	ldrdeq	r0, [r0], -r4
   101dc:	ldrdeq	r0, [r0], -r4
   101e0:	ldrdeq	r0, [r0], -r4
   101e4:	ldrdeq	r0, [r0], -r4
   101e8:	ldrdeq	r0, [r0], -r4
   101ec:	ldrdeq	r0, [r0], -r4
   101f0:	ldrdeq	r0, [r0], -r4
   101f4:	ldrdeq	r0, [r0], -r4
   101f8:	ldrdeq	r0, [r0], -r4
   101fc:	ldrdeq	r0, [r0], -r4
   10200:	ldrdeq	r0, [r0], -r4
   10204:	ldrdeq	r0, [r0], -r4
   10208:	ldrdeq	r0, [r0], -r4
   1020c:	ldrdeq	r0, [r0], -r4
   10210:	ldrdeq	r0, [r0], -r4
   10214:	ldrdeq	r0, [r0], -r4
   10218:	ldrdeq	r0, [r0], -r4
   1021c:	ldrdeq	r0, [r0], -r4
   10220:	ldrdeq	r0, [r0], -r4
   10224:	ldrdeq	r0, [r0], -r4
   10228:	ldrdeq	r0, [r0], -r4
   1022c:	ldrdeq	r0, [r0], -r4
   10230:	ldrdeq	r0, [r0], -r4
   10234:	ldrdeq	r0, [r0], -r4
   10238:	ldrdeq	r0, [r0], -r4
   1023c:	ldrdeq	r0, [r0], -r4
   10240:	ldrdeq	r0, [r0], -r4
   10244:	ldrdeq	r0, [r0], -r4
   10248:	ldrdeq	r0, [r0], -r4
   1024c:	ldrdeq	r0, [r0], -r4
   10250:	ldrdeq	r0, [r0], -r4
   10254:	ldrdeq	r0, [r0], -r4
   10258:	ldrdeq	r0, [r0], -r4
   1025c:	ldrdeq	r0, [r0], -r4
   10260:	ldrdeq	r0, [r0], -r4
   10264:	ldrdeq	r0, [r0], -r4
   10268:	ldrdeq	r0, [r0], -r4
   1026c:	ldrdeq	r0, [r0], -r4
   10270:	ldrdeq	r0, [r0], -r4
   10274:	ldrdeq	r0, [r0], -r4
   10278:	ldrdeq	r0, [r0], -r4
   1027c:	ldrdeq	r0, [r0], -r4
   10280:	ldrdeq	r0, [r0], -r4
   10284:	ldrdeq	r0, [r0], -r4
   10288:	ldrdeq	r0, [r0], -r4
   1028c:	ldrdeq	r0, [r0], -r4
   10290:	ldrdeq	r0, [r0], -r4
   10294:	ldrdeq	r0, [r0], -r4
   10298:	ldrdeq	r0, [r0], -r4
   1029c:	ldrdeq	r0, [r0], -r4
   102a0:	ldrdeq	r0, [r0], -r4
   102a4:	ldrdeq	r0, [r0], -r4
   102a8:	ldrdeq	r0, [r0], -r4
   102ac:	ldrdeq	r0, [r0], -r4
   102b0:	ldrdeq	r0, [r0], -r4
   102b4:	ldrdeq	r0, [r0], -r4
   102b8:	ldrdeq	r0, [r0], -r4
   102bc:	ldrdeq	r0, [r0], -r4
   102c0:	ldrdeq	r0, [r0], -r4
   102c4:	ldrdeq	r0, [r0], -r4
   102c8:	ldrdeq	r0, [r0], -r4
   102cc:	ldrdeq	r0, [r0], -r4
   102d0:	ldrdeq	r0, [r0], -r4
   102d4:	ldrdeq	r0, [r0], -r4
   102d8:	ldrdeq	r0, [r0], -r4
   102dc:	ldrdeq	r0, [r0], -r4
   102e0:	ldrdeq	r0, [r0], -r4
   102e4:	ldrdeq	r0, [r0], -r4
   102e8:	ldrdeq	r0, [r0], -r4
   102ec:	ldrdeq	r0, [r0], -r4
   102f0:	ldrdeq	r0, [r0], -r4
   102f4:	ldrdeq	r0, [r0], -r4
   102f8:	ldrdeq	r0, [r0], -r4
   102fc:	ldrdeq	r0, [r0], -r4
   10300:	ldrdeq	r0, [r0], -r4
   10304:	ldrdeq	r0, [r0], -r4
   10308:	ldrdeq	r0, [r0], -r4
   1030c:	ldrdeq	r0, [r0], -r4
   10310:	ldrdeq	r0, [r0], -r4
   10314:	ldrdeq	r0, [r0], -r4
   10318:	ldrdeq	r0, [r0], -r4
   1031c:	ldrdeq	r0, [r0], -r4
   10320:	ldrdeq	r0, [r0], -r4
   10324:	ldrdeq	r0, [r0], -r4
   10328:	ldrdeq	r0, [r0], -r4
   1032c:	ldrdeq	r0, [r0], -r4
   10330:	ldrdeq	r0, [r0], -r4
   10334:	ldrdeq	r0, [r0], -r4
   10338:	ldrdeq	r0, [r0], -r4
   1033c:	ldrdeq	r0, [r0], -r4
   10340:	ldrdeq	r0, [r0], -r4
   10344:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10348:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1034c:	ldrdeq	r0, [r0], -r4
   10350:	ldrdeq	r0, [r0], -r4
   10354:	ldrdeq	r0, [r0], -r4
   10358:	ldrdeq	r0, [r0], -r4
   1035c:	ldrdeq	r0, [r0], -r4
   10360:	ldrdeq	r0, [r0], -r4
   10364:	ldrdeq	r0, [r0], -r4
   10368:	ldrdeq	r0, [r0], -r4
   1036c:	ldrdeq	r0, [r0], -r4
   10370:	ldrdeq	r0, [r0], -r4
   10374:	ldrdeq	r0, [r0], -r4
   10378:	ldrdeq	r0, [r0], -r4
   1037c:	ldrdeq	r0, [r0], -r4
   10380:	ldrdeq	r0, [r0], -r4
   10384:	ldrdeq	r0, [r0], -r4
   10388:	ldrdeq	r0, [r0], -r4
   1038c:	ldrdeq	r0, [r0], -r4
   10390:	ldrdeq	r0, [r0], -r4
   10394:	ldrdeq	r0, [r0], -r4
   10398:	ldrdeq	r0, [r0], -r4
   1039c:	ldrdeq	r0, [r0], -r4
   103a0:	ldrdeq	r0, [r0], -r4
   103a4:	ldrdeq	r0, [r0], -r4
   103a8:	ldrdeq	r0, [r0], -r4
   103ac:	ldrdeq	r0, [r0], -r4
   103b0:	ldrdeq	r0, [r0], -r4
   103b4:	ldrdeq	r0, [r0], -r4
   103b8:	ldrdeq	r0, [r0], -r4
   103bc:	ldrdeq	r0, [r0], -r4
   103c0:	ldrdeq	r0, [r0], -r4
   103c4:	ldrdeq	r0, [r0], -r4
   103c8:	ldrdeq	r0, [r0], -r4
   103cc:	ldrdeq	r0, [r0], -r4
   103d0:	ldrdeq	r0, [r0], -r4
   103d4:	ldrdeq	r0, [r0], -r4
   103d8:	ldrdeq	r0, [r0], -r4
   103dc:	ldrdeq	r0, [r0], -r4
   103e0:	ldrdeq	r0, [r0], -r4
   103e4:	ldrdeq	r0, [r0], -r4
   103e8:	ldrdeq	r0, [r0], -r4
   103ec:	ldrdeq	r0, [r0], -r4
   103f0:	ldrdeq	r0, [r0], -r4
   103f4:	ldrdeq	r0, [r0], -r4
   103f8:	ldrdeq	r0, [r0], -r4
   103fc:	ldrdeq	r0, [r0], -r4
   10400:	ldrdeq	r0, [r0], -r4
   10404:	ldrdeq	r0, [r0], -r4
   10408:	ldrdeq	r0, [r0], -r4
   1040c:	ldrdeq	r0, [r0], -r4
   10410:	ldrdeq	r0, [r0], -r4
   10414:	ldrdeq	r0, [r0], -r4
   10418:	ldrdeq	r0, [r0], -r4
   1041c:	ldrdeq	r0, [r0], -r4
   10420:	ldrdeq	r0, [r0], -r4
   10424:	ldrdeq	r0, [r0], -r4
   10428:	ldrdeq	r0, [r0], -r4
   1042c:	ldrdeq	r0, [r0], -r4
   10430:	ldrdeq	r0, [r0], -r4
   10434:	ldrdeq	r0, [r0], -r4
   10438:	ldrdeq	r0, [r0], -r4
   1043c:	ldrdeq	r0, [r0], -r4
   10440:	ldrdeq	r0, [r0], -r4
   10444:	ldrdeq	r0, [r0], -r4
   10448:	ldrdeq	r0, [r0], -r4
   1044c:	ldrdeq	r0, [r0], -r4
   10450:	ldrdeq	r0, [r0], -r4
   10454:	ldrdeq	r0, [r0], -r4
   10458:	ldrdeq	r0, [r0], -r4
   1045c:	ldrdeq	r0, [r0], -r4
   10460:	ldrdeq	r0, [r0], -r4
   10464:	ldrdeq	r0, [r0], -r4
   10468:	ldrdeq	r0, [r0], -r4
   1046c:	ldrdeq	r0, [r0], -r4
   10470:	ldrdeq	r0, [r0], -r4
   10474:	ldrdeq	r0, [r0], -r4
   10478:	ldrdeq	r0, [r0], -r4
   1047c:	ldrdeq	r0, [r0], -r4
   10480:	ldrdeq	r0, [r0], -r4
   10484:	ldrdeq	r0, [r0], -r4
   10488:	ldrdeq	r0, [r0], -r4
   1048c:	ldrdeq	r0, [r0], -r4
   10490:	ldrdeq	r0, [r0], -r4
   10494:	ldrdeq	r0, [r0], -r4
   10498:	ldrdeq	r0, [r0], -r4
   1049c:	ldrdeq	r0, [r0], -r4
   104a0:	ldrdeq	r0, [r0], -r4
   104a4:	ldrdeq	r0, [r0], -r4
   104a8:	ldrdeq	r0, [r0], -r4
   104ac:	ldrdeq	r0, [r0], -r4
   104b0:	ldrdeq	r0, [r0], -r4
   104b4:	ldrdeq	r0, [r0], -r4
   104b8:	ldrdeq	r0, [r0], -r4
   104bc:	ldrdeq	r0, [r0], -r4
   104c0:	ldrdeq	r0, [r0], -r4
   104c4:	ldrdeq	r0, [r0], -r4
   104c8:	ldrdeq	r0, [r0], -r4
   104cc:	ldrdeq	r0, [r0], -r4
   104d0:	ldrdeq	r0, [r0], -r4
   104d4:	ldrdeq	r0, [r0], -r4
   104d8:	ldrdeq	r0, [r0], -r4
   104dc:	ldrdeq	r0, [r0], -r4
   104e0:	ldrdeq	r0, [r0], -r4
   104e4:	ldrdeq	r0, [r0], -r4
   104e8:	ldrdeq	r0, [r0], -r4
   104ec:	ldrdeq	r0, [r0], -r4
   104f0:	ldrdeq	r0, [r0], -r4
   104f4:	ldrdeq	r0, [r0], -r4
   104f8:	ldrdeq	r0, [r0], -r4
   104fc:	ldrdeq	r0, [r0], -r4
   10500:	ldrdeq	r0, [r0], -r4
   10504:	ldrdeq	r0, [r0], -r4
   10508:	ldrdeq	r0, [r0], -r4
   1050c:	ldrdeq	r0, [r0], -r4
   10510:	ldrdeq	r0, [r0], -r4
   10514:	ldrdeq	r0, [r0], -r4
   10518:	ldrdeq	r0, [r0], -r4
   1051c:	ldrdeq	r0, [r0], -r4
   10520:	ldrdeq	r0, [r0], -r4
   10524:	ldrdeq	r0, [r0], -r4
   10528:	ldrdeq	r0, [r0], -r4
   1052c:	ldrdeq	r0, [r0], -r4
   10530:	ldrdeq	r0, [r0], -r4
   10534:	ldrdeq	r0, [r0], -r4
   10538:	ldrdeq	r0, [r0], -r4
   1053c:	ldrdeq	r0, [r0], -r4
   10540:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10544:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10548:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1054c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10550:	ldrdeq	r0, [r0], -r4
   10554:	ldrdeq	r0, [r0], -r4
   10558:	ldrdeq	r0, [r0], -r4
   1055c:	ldrdeq	r0, [r0], -r4
   10560:	ldrdeq	r0, [r0], -r4
   10564:	ldrdeq	r0, [r0], -r4
   10568:	ldrdeq	r0, [r0], -r4
   1056c:	ldrdeq	r0, [r0], -r4
   10570:	ldrdeq	r0, [r0], -r4
   10574:	ldrdeq	r0, [r0], -r4
   10578:	ldrdeq	r0, [r0], -r4
   1057c:	ldrdeq	r0, [r0], -r4
   10580:	ldrdeq	r0, [r0], -r4
   10584:	ldrdeq	r0, [r0], -r4
   10588:	ldrdeq	r0, [r0], -r4
   1058c:	ldrdeq	r0, [r0], -r4
   10590:	ldrdeq	r0, [r0], -r4
   10594:	ldrdeq	r0, [r0], -r4
   10598:	ldrdeq	r0, [r0], -r4
   1059c:	ldrdeq	r0, [r0], -r4
   105a0:	ldrdeq	r0, [r0], -r4
   105a4:	ldrdeq	r0, [r0], -r4
   105a8:	ldrdeq	r0, [r0], -r4
   105ac:	ldrdeq	r0, [r0], -r4
   105b0:	ldrdeq	r0, [r0], -r4
   105b4:	ldrdeq	r0, [r0], -r4
   105b8:	ldrdeq	r0, [r0], -r4
   105bc:	ldrdeq	r0, [r0], -r4
   105c0:	ldrdeq	r0, [r0], -r4
   105c4:	ldrdeq	r0, [r0], -r4
   105c8:	ldrdeq	r0, [r0], -r4
   105cc:	ldrdeq	r0, [r0], -r4
   105d0:	ldrdeq	r0, [r0], -r4
   105d4:	ldrdeq	r0, [r0], -r4
   105d8:	ldrdeq	r0, [r0], -r4
   105dc:	ldrdeq	r0, [r0], -r4
   105e0:	ldrdeq	r0, [r0], -r4
   105e4:	ldrdeq	r0, [r0], -r4
   105e8:	ldrdeq	r0, [r0], -r4
   105ec:	ldrdeq	r0, [r0], -r4
   105f0:	ldrdeq	r0, [r0], -r4
   105f4:	ldrdeq	r0, [r0], -r4
   105f8:	ldrdeq	r0, [r0], -r4
   105fc:	ldrdeq	r0, [r0], -r4
   10600:	ldrdeq	r0, [r0], -r4
   10604:	ldrdeq	r0, [r0], -r4
   10608:	ldrdeq	r0, [r0], -r4
   1060c:	ldrdeq	r0, [r0], -r4
   10610:	ldrdeq	r0, [r0], -r4
   10614:	ldrdeq	r0, [r0], -r4
   10618:	ldrdeq	r0, [r0], -r4
   1061c:	ldrdeq	r0, [r0], -r4
   10620:	ldrdeq	r0, [r0], -r4
   10624:	ldrdeq	r0, [r0], -r4
   10628:	ldrdeq	r0, [r0], -r4
   1062c:	ldrdeq	r0, [r0], -r4
   10630:	ldrdeq	r0, [r0], -r4
   10634:	ldrdeq	r0, [r0], -r4
   10638:	ldrdeq	r0, [r0], -r4
   1063c:	ldrdeq	r0, [r0], -r4
   10640:	ldrdeq	r0, [r0], -r4
   10644:	ldrdeq	r0, [r0], -r4
   10648:	ldrdeq	r0, [r0], -r4
   1064c:	ldrdeq	r0, [r0], -r4
   10650:	ldrdeq	r0, [r0], -r4
   10654:	ldrdeq	r0, [r0], -r4
   10658:	ldrdeq	r0, [r0], -r4
   1065c:	ldrdeq	r0, [r0], -r4
   10660:	ldrdeq	r0, [r0], -r4
   10664:	ldrdeq	r0, [r0], -r4
   10668:	ldrdeq	r0, [r0], -r4
   1066c:	ldrdeq	r0, [r0], -r4
   10670:	ldrdeq	r0, [r0], -r4
   10674:	ldrdeq	r0, [r0], -r4
   10678:	ldrdeq	r0, [r0], -r4
   1067c:	ldrdeq	r0, [r0], -r4
   10680:	ldrdeq	r0, [r0], -r4
   10684:	ldrdeq	r0, [r0], -r4
   10688:	ldrdeq	r0, [r0], -r4
   1068c:	ldrdeq	r0, [r0], -r4
   10690:	ldrdeq	r0, [r0], -r4
   10694:	ldrdeq	r0, [r0], -r4
   10698:	ldrdeq	r0, [r0], -r4
   1069c:	ldrdeq	r0, [r0], -r4
   106a0:	ldrdeq	r0, [r0], -r4
   106a4:	ldrdeq	r0, [r0], -r4
   106a8:	ldrdeq	r0, [r0], -r4
   106ac:	ldrdeq	r0, [r0], -r4
   106b0:	ldrdeq	r0, [r0], -r4
   106b4:	ldrdeq	r0, [r0], -r4
   106b8:	ldrdeq	r0, [r0], -r4
   106bc:	ldrdeq	r0, [r0], -r4
   106c0:	ldrdeq	r0, [r0], -r4
   106c4:	ldrdeq	r0, [r0], -r4
   106c8:	ldrdeq	r0, [r0], -r4
   106cc:	ldrdeq	r0, [r0], -r4
   106d0:	ldrdeq	r0, [r0], -r4
   106d4:	ldrdeq	r0, [r0], -r4
   106d8:	ldrdeq	r0, [r0], -r4
   106dc:	ldrdeq	r0, [r0], -r4
   106e0:	ldrdeq	r0, [r0], -r4
   106e4:	ldrdeq	r0, [r0], -r4
   106e8:	ldrdeq	r0, [r0], -r4
   106ec:	ldrdeq	r0, [r0], -r4
   106f0:	ldrdeq	r0, [r0], -r4
   106f4:	ldrdeq	r0, [r0], -r4
   106f8:	ldrdeq	r0, [r0], -r4
   106fc:	ldrdeq	r0, [r0], -r4
   10700:	ldrdeq	r0, [r0], -r4
   10704:	ldrdeq	r0, [r0], -r4
   10708:	ldrdeq	r0, [r0], -r4
   1070c:	ldrdeq	r0, [r0], -r4
   10710:	ldrdeq	r0, [r0], -r4
   10714:	ldrdeq	r0, [r0], -r4
   10718:	ldrdeq	r0, [r0], -r4
   1071c:	ldrdeq	r0, [r0], -r4
   10720:	ldrdeq	r0, [r0], -r4
   10724:	ldrdeq	r0, [r0], -r4
   10728:	ldrdeq	r0, [r0], -r4
   1072c:	ldrdeq	r0, [r0], -r4
   10730:	ldrdeq	r0, [r0], -r4
   10734:	ldrdeq	r0, [r0], -r4
   10738:	ldrdeq	r0, [r0], -r4
   1073c:	ldrdeq	r0, [r0], -r4
   10740:	ldrdeq	r0, [r0], -r4
   10744:	ldrdeq	r0, [r0], -r4
   10748:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1074c:	cmp	r1, #2432	; 0x980
   10750:	bge	10814 <lell_packet_is_data@@Base+0x31c8>
   10754:	movw	r2, #2036	; 0x7f4
   10758:	sub	r2, r1, r2
   1075c:	cmp	r2, #28
   10760:	bcc	10918 <lell_packet_is_data@@Base+0x32cc>
   10764:	movw	r2, #2302	; 0x8fe
   10768:	sub	r2, r1, r2
   1076c:	cmp	r2, #4
   10770:	bcc	10918 <lell_packet_is_data@@Base+0x32cc>
   10774:	cmp	r1, #2176	; 0x880
   10778:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   1077c:	b	1091c <lell_packet_is_data@@Base+0x32d0>
   10780:	cmp	r1, #1152	; 0x480
   10784:	bge	107e4 <lell_packet_is_data@@Base+0x3198>
   10788:	sub	r2, r1, #1016	; 0x3f8
   1078c:	cmp	r2, #15
   10790:	bhi	1079c <lell_packet_is_data@@Base+0x3150>
   10794:	cmp	r2, #9
   10798:	bne	10918 <lell_packet_is_data@@Base+0x32cc>
   1079c:	movw	r2, #766	; 0x2fe
   107a0:	sub	r2, r1, r2
   107a4:	cmp	r2, #4
   107a8:	bcc	10918 <lell_packet_is_data@@Base+0x32cc>
   107ac:	cmp	r1, #896	; 0x380
   107b0:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   107b4:	b	1091c <lell_packet_is_data@@Base+0x32d0>
   107b8:	cmp	r1, #4064	; 0xfe0
   107bc:	blt	108f8 <lell_packet_is_data@@Base+0x32ac>
   107c0:	sub	r1, r1, #4064	; 0xfe0
   107c4:	cmp	r1, #31
   107c8:	bhi	1091c <lell_packet_is_data@@Base+0x32d0>
   107cc:	movw	r3, #1
   107d0:	mov	r2, #1
   107d4:	movt	r3, #65535	; 0xffff
   107d8:	tst	r3, r2, lsl r1
   107dc:	addne	r0, r0, #1
   107e0:	pop	{r4, r5, r6, sl, fp, pc}
   107e4:	movw	r2, #1531	; 0x5fb
   107e8:	cmp	r1, r2
   107ec:	ble	108b0 <lell_packet_is_data@@Base+0x3264>
   107f0:	cmp	r1, #1664	; 0x680
   107f4:	bge	108d4 <lell_packet_is_data@@Base+0x3288>
   107f8:	movw	r2, #1532	; 0x5fc
   107fc:	sub	r1, r1, r2
   10800:	cmp	r1, #7
   10804:	bhi	1091c <lell_packet_is_data@@Base+0x32d0>
   10808:	cmp	r1, #4
   1080c:	bne	10918 <lell_packet_is_data@@Base+0x32cc>
   10810:	b	1091c <lell_packet_is_data@@Base+0x32d0>
   10814:	cmp	r1, #2688	; 0xa80
   10818:	bge	1086c <lell_packet_is_data@@Base+0x3220>
   1081c:	movw	r2, #2556	; 0x9fc
   10820:	sub	r2, r1, r2
   10824:	cmp	r2, #7
   10828:	bhi	10834 <lell_packet_is_data@@Base+0x31e8>
   1082c:	cmp	r2, #4
   10830:	bne	10918 <lell_packet_is_data@@Base+0x32cc>
   10834:	cmp	r1, #2432	; 0x980
   10838:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   1083c:	b	1091c <lell_packet_is_data@@Base+0x32d0>
   10840:	movw	r2, #3580	; 0xdfc
   10844:	sub	r2, r1, r2
   10848:	cmp	r2, #8
   1084c:	bcc	10918 <lell_packet_is_data@@Base+0x32cc>
   10850:	movw	r2, #3326	; 0xcfe
   10854:	sub	r2, r1, r2
   10858:	cmp	r2, #4
   1085c:	bcc	10918 <lell_packet_is_data@@Base+0x32cc>
   10860:	cmp	r1, #3456	; 0xd80
   10864:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   10868:	b	1091c <lell_packet_is_data@@Base+0x32d0>
   1086c:	movw	r2, #2814	; 0xafe
   10870:	sub	r2, r1, r2
   10874:	cmp	r2, #4
   10878:	bcc	10918 <lell_packet_is_data@@Base+0x32cc>
   1087c:	cmp	r1, #2688	; 0xa80
   10880:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   10884:	cmp	r1, #2944	; 0xb80
   10888:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   1088c:	b	1091c <lell_packet_is_data@@Base+0x32d0>
   10890:	sub	r2, r1, #508	; 0x1fc
   10894:	cmp	r2, #7
   10898:	bhi	108a4 <lell_packet_is_data@@Base+0x3258>
   1089c:	cmp	r2, #4
   108a0:	bne	10918 <lell_packet_is_data@@Base+0x32cc>
   108a4:	cmp	r1, #640	; 0x280
   108a8:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   108ac:	b	1091c <lell_packet_is_data@@Base+0x32d0>
   108b0:	movw	r2, #1278	; 0x4fe
   108b4:	sub	r2, r1, r2
   108b8:	cmp	r2, #4
   108bc:	bcc	10918 <lell_packet_is_data@@Base+0x32cc>
   108c0:	cmp	r1, #1152	; 0x480
   108c4:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   108c8:	cmp	r1, #1408	; 0x580
   108cc:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   108d0:	b	1091c <lell_packet_is_data@@Base+0x32d0>
   108d4:	movw	r2, #1790	; 0x6fe
   108d8:	sub	r2, r1, r2
   108dc:	cmp	r2, #4
   108e0:	bcc	10918 <lell_packet_is_data@@Base+0x32cc>
   108e4:	cmp	r1, #1664	; 0x680
   108e8:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   108ec:	cmp	r1, #1920	; 0x780
   108f0:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   108f4:	b	1091c <lell_packet_is_data@@Base+0x32d0>
   108f8:	movw	r2, #3838	; 0xefe
   108fc:	sub	r2, r1, r2
   10900:	cmp	r2, #4
   10904:	bcc	10918 <lell_packet_is_data@@Base+0x32cc>
   10908:	cmp	r1, #3712	; 0xe80
   1090c:	beq	10918 <lell_packet_is_data@@Base+0x32cc>
   10910:	cmp	r1, #3968	; 0xf80
   10914:	bne	1091c <lell_packet_is_data@@Base+0x32d0>
   10918:	add	r0, r0, #1
   1091c:	pop	{r4, r5, r6, sl, fp, pc}

00010920 <lell_get_access_address@@Base>:
   10920:	ldr	r0, [r0, #64]	; 0x40
   10924:	bx	lr

00010928 <lell_get_access_address_offenses@@Base>:
   10928:	ldr	r0, [r0, #92]	; 0x5c
   1092c:	bx	lr

00010930 <lell_get_channel_index@@Base>:
   10930:	ldrb	r0, [r0, #68]	; 0x44
   10934:	bx	lr

00010938 <lell_get_channel_k@@Base>:
   10938:	ldrb	r0, [r0, #69]	; 0x45
   1093c:	bx	lr

00010940 <lell_get_adv_type_str@@Base>:
   10940:	ldrb	r2, [r0, #68]	; 0x44
   10944:	mov	r1, r0
   10948:	mov	r0, #0
   1094c:	cmp	r2, #37	; 0x25
   10950:	bxcc	lr
   10954:	ldrb	r0, [r1, #80]	; 0x50
   10958:	cmp	r0, #6
   1095c:	bhi	10970 <lell_get_adv_type_str@@Base+0x30>
   10960:	ldr	r1, [pc, #24]	; 10980 <lell_get_adv_type_str@@Base+0x40>
   10964:	add	r1, pc, r1
   10968:	ldr	r0, [r1, r0, lsl #2]
   1096c:	bx	lr
   10970:	ldr	r0, [pc, #4]	; 1097c <lell_get_adv_type_str@@Base+0x3c>
   10974:	add	r0, pc, r0
   10978:	bx	lr
   1097c:	andeq	r5, r0, ip, lsr #6
   10980:	andeq	fp, r1, r8, asr #9

00010984 <lell_print@@Base>:
   10984:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10988:	add	fp, sp, #28
   1098c:	sub	sp, sp, #4
   10990:	mov	r4, r0
   10994:	ldrb	r0, [r0, #68]	; 0x44
   10998:	cmp	r0, #36	; 0x24
   1099c:	bls	10a0c <lell_print@@Base+0x88>
   109a0:	ldrb	r0, [r4, #100]	; 0x64
   109a4:	ldr	r1, [pc, #2048]	; 111ac <lell_print@@Base+0x828>
   109a8:	ldr	r2, [pc, #2048]	; 111b0 <lell_print@@Base+0x82c>
   109ac:	ldr	r3, [r4, #72]	; 0x48
   109b0:	add	r1, pc, r1
   109b4:	tst	r0, #1
   109b8:	add	r2, pc, r2
   109bc:	moveq	r2, r1
   109c0:	ldr	r1, [r4, #64]	; 0x40
   109c4:	ldr	r0, [pc, #2024]	; 111b4 <lell_print@@Base+0x830>
   109c8:	add	r0, pc, r0
   109cc:	bl	4508 <printf@plt>
   109d0:	ldrb	r1, [r4, #68]	; 0x44
   109d4:	ldr	r0, [pc, #2012]	; 111b8 <lell_print@@Base+0x834>
   109d8:	add	r0, pc, r0
   109dc:	bl	4508 <printf@plt>
   109e0:	ldrb	r0, [r4, #68]	; 0x44
   109e4:	mov	r1, #0
   109e8:	cmp	r0, #37	; 0x25
   109ec:	bcc	10ac8 <lell_print@@Base+0x144>
   109f0:	ldrb	r0, [r4, #80]	; 0x50
   109f4:	cmp	r0, #6
   109f8:	bhi	10ac0 <lell_print@@Base+0x13c>
   109fc:	ldr	r1, [pc, #1980]	; 111c0 <lell_print@@Base+0x83c>
   10a00:	add	r1, pc, r1
   10a04:	ldr	r1, [r1, r0, lsl #2]
   10a08:	b	10ac8 <lell_print@@Base+0x144>
   10a0c:	ldrb	r0, [r4, #100]	; 0x64
   10a10:	ldr	r1, [pc, #1904]	; 11188 <lell_print@@Base+0x804>
   10a14:	ldr	r2, [pc, #1904]	; 1118c <lell_print@@Base+0x808>
   10a18:	ldrb	r5, [r4, #4]
   10a1c:	ldr	r3, [r4, #72]	; 0x48
   10a20:	add	r1, pc, r1
   10a24:	tst	r0, #1
   10a28:	add	r2, pc, r2
   10a2c:	moveq	r2, r1
   10a30:	ldr	r1, [r4, #64]	; 0x40
   10a34:	ldr	r0, [pc, #1876]	; 11190 <lell_print@@Base+0x80c>
   10a38:	add	r0, pc, r0
   10a3c:	bl	4508 <printf@plt>
   10a40:	ldrb	r1, [r4, #68]	; 0x44
   10a44:	ldr	r0, [pc, #1864]	; 11194 <lell_print@@Base+0x810>
   10a48:	add	r0, pc, r0
   10a4c:	bl	4508 <printf@plt>
   10a50:	ldr	r0, [pc, #1856]	; 11198 <lell_print@@Base+0x814>
   10a54:	and	r5, r5, #3
   10a58:	mov	r1, r5
   10a5c:	add	r0, pc, r0
   10a60:	ldr	r2, [r0, r5, lsl #2]
   10a64:	ldr	r0, [pc, #1840]	; 1119c <lell_print@@Base+0x818>
   10a68:	add	r0, pc, r0
   10a6c:	bl	4508 <printf@plt>
   10a70:	ldrb	r0, [r4, #4]
   10a74:	ubfx	r1, r0, #2, #1
   10a78:	ubfx	r2, r0, #3, #1
   10a7c:	ubfx	r3, r0, #4, #1
   10a80:	ldr	r0, [pc, #1816]	; 111a0 <lell_print@@Base+0x81c>
   10a84:	add	r0, pc, r0
   10a88:	bl	4508 <printf@plt>
   10a8c:	cmp	r5, #3
   10a90:	bne	10e68 <lell_print@@Base+0x4e4>
   10a94:	ldrb	r1, [r4, #6]
   10a98:	ldr	r2, [pc, #1796]	; 111a4 <lell_print@@Base+0x820>
   10a9c:	cmp	r1, #20
   10aa0:	mov	r0, r1
   10aa4:	add	r2, pc, r2
   10aa8:	movcs	r0, #20
   10aac:	ldr	r2, [r2, r0, lsl #2]
   10ab0:	ldr	r0, [pc, #1776]	; 111a8 <lell_print@@Base+0x824>
   10ab4:	add	r0, pc, r0
   10ab8:	bl	4508 <printf@plt>
   10abc:	b	10e68 <lell_print@@Base+0x4e4>
   10ac0:	ldr	r1, [pc, #1780]	; 111bc <lell_print@@Base+0x838>
   10ac4:	add	r1, pc, r1
   10ac8:	ldr	r0, [pc, #1780]	; 111c4 <lell_print@@Base+0x840>
   10acc:	add	r0, pc, r0
   10ad0:	bl	4508 <printf@plt>
   10ad4:	ldrb	r0, [r4, #80]	; 0x50
   10ad8:	cmp	r0, #6
   10adc:	bhi	10e68 <lell_print@@Base+0x4e4>
   10ae0:	add	r1, pc, #4
   10ae4:	ldr	r0, [r1, r0, lsl #2]
   10ae8:	add	pc, r1, r0
   10aec:	andeq	r0, r0, ip, lsl r0
   10af0:	strdeq	r0, [r0], -r8
   10af4:	andeq	r0, r0, ip, lsl r0
   10af8:	muleq	r0, ip, r1
   10afc:	muleq	r0, r8, r2
   10b00:	andeq	r0, r0, r4, lsr r4
   10b04:	andeq	r0, r0, ip, lsl r0
   10b08:	ldr	r6, [r4, #84]	; 0x54
   10b0c:	ldrb	r2, [r4, #11]
   10b10:	ldr	r0, [pc, #1712]	; 111c8 <lell_print@@Base+0x844>
   10b14:	ldr	r1, [pc, #1712]	; 111cc <lell_print@@Base+0x848>
   10b18:	add	r0, pc, r0
   10b1c:	add	r1, pc, r1
   10b20:	bl	4508 <printf@plt>
   10b24:	ldrb	r1, [r4, #10]
   10b28:	ldr	r5, [pc, #1696]	; 111d0 <lell_print@@Base+0x84c>
   10b2c:	add	r5, pc, r5
   10b30:	mov	r0, r5
   10b34:	bl	4508 <printf@plt>
   10b38:	ldrb	r1, [r4, #9]
   10b3c:	mov	r0, r5
   10b40:	bl	4508 <printf@plt>
   10b44:	ldrb	r1, [r4, #8]
   10b48:	mov	r0, r5
   10b4c:	bl	4508 <printf@plt>
   10b50:	ldrb	r1, [r4, #7]
   10b54:	mov	r0, r5
   10b58:	bl	4508 <printf@plt>
   10b5c:	ldrb	r1, [r4, #6]
   10b60:	mov	r0, r5
   10b64:	bl	4508 <printf@plt>
   10b68:	ldr	r0, [pc, #1636]	; 111d4 <lell_print@@Base+0x850>
   10b6c:	ldr	r1, [pc, #1636]	; 111d8 <lell_print@@Base+0x854>
   10b70:	cmp	r6, #0
   10b74:	add	r0, pc, r0
   10b78:	add	r1, pc, r1
   10b7c:	moveq	r1, r0
   10b80:	ldr	r0, [pc, #1620]	; 111dc <lell_print@@Base+0x858>
   10b84:	add	r0, pc, r0
   10b88:	bl	4508 <printf@plt>
   10b8c:	ldr	r0, [r4, #72]	; 0x48
   10b90:	cmp	r0, #7
   10b94:	blt	10e68 <lell_print@@Base+0x4e4>
   10b98:	ldr	r0, [pc, #1600]	; 111e0 <lell_print@@Base+0x85c>
   10b9c:	add	r0, pc, r0
   10ba0:	bl	4508 <printf@plt>
   10ba4:	ldr	r0, [r4, #72]	; 0x48
   10ba8:	cmp	r0, #7
   10bac:	blt	10e50 <lell_print@@Base+0x4cc>
   10bb0:	ldr	r5, [pc, #1580]	; 111e4 <lell_print@@Base+0x860>
   10bb4:	add	r6, r4, #12
   10bb8:	mov	r7, #0
   10bbc:	add	r5, pc, r5
   10bc0:	ldrb	r1, [r6, r7]
   10bc4:	mov	r0, r5
   10bc8:	bl	4508 <printf@plt>
   10bcc:	ldr	r0, [r4, #72]	; 0x48
   10bd0:	add	r7, r7, #1
   10bd4:	sub	r0, r0, #6
   10bd8:	cmp	r7, r0
   10bdc:	blt	10bc0 <lell_print@@Base+0x23c>
   10be0:	b	10e50 <lell_print@@Base+0x4cc>
   10be4:	ldr	r7, [r4, #84]	; 0x54
   10be8:	ldrb	r2, [r4, #11]
   10bec:	ldr	r8, [pc, #1524]	; 111e8 <lell_print@@Base+0x864>
   10bf0:	ldr	r1, [pc, #1524]	; 111ec <lell_print@@Base+0x868>
   10bf4:	add	r8, pc, r8
   10bf8:	add	r1, pc, r1
   10bfc:	mov	r0, r8
   10c00:	bl	4508 <printf@plt>
   10c04:	ldrb	r1, [r4, #10]
   10c08:	ldr	r5, [pc, #1504]	; 111f0 <lell_print@@Base+0x86c>
   10c0c:	add	r5, pc, r5
   10c10:	mov	r0, r5
   10c14:	bl	4508 <printf@plt>
   10c18:	ldrb	r1, [r4, #9]
   10c1c:	mov	r0, r5
   10c20:	bl	4508 <printf@plt>
   10c24:	ldrb	r1, [r4, #8]
   10c28:	mov	r0, r5
   10c2c:	bl	4508 <printf@plt>
   10c30:	ldrb	r1, [r4, #7]
   10c34:	mov	r0, r5
   10c38:	bl	4508 <printf@plt>
   10c3c:	ldrb	r1, [r4, #6]
   10c40:	mov	r0, r5
   10c44:	bl	4508 <printf@plt>
   10c48:	ldr	r9, [pc, #1444]	; 111f4 <lell_print@@Base+0x870>
   10c4c:	ldr	r6, [pc, #1444]	; 111f8 <lell_print@@Base+0x874>
   10c50:	ldr	sl, [pc, #1444]	; 111fc <lell_print@@Base+0x878>
   10c54:	cmp	r7, #0
   10c58:	add	r6, pc, r6
   10c5c:	add	sl, pc, sl
   10c60:	add	r9, pc, r9
   10c64:	mov	r1, r6
   10c68:	moveq	r1, r9
   10c6c:	mov	r0, sl
   10c70:	bl	4508 <printf@plt>
   10c74:	ldr	r7, [r4, #88]	; 0x58
   10c78:	ldrb	r2, [r4, #17]
   10c7c:	ldr	r1, [pc, #1404]	; 11200 <lell_print@@Base+0x87c>
   10c80:	add	r1, pc, r1
   10c84:	b	10d28 <lell_print@@Base+0x3a4>
   10c88:	ldr	r7, [r4, #84]	; 0x54
   10c8c:	ldrb	r2, [r4, #11]
   10c90:	ldr	r8, [pc, #1388]	; 11204 <lell_print@@Base+0x880>
   10c94:	ldr	r1, [pc, #1388]	; 11208 <lell_print@@Base+0x884>
   10c98:	add	r8, pc, r8
   10c9c:	add	r1, pc, r1
   10ca0:	mov	r0, r8
   10ca4:	bl	4508 <printf@plt>
   10ca8:	ldrb	r1, [r4, #10]
   10cac:	ldr	r5, [pc, #1368]	; 1120c <lell_print@@Base+0x888>
   10cb0:	add	r5, pc, r5
   10cb4:	mov	r0, r5
   10cb8:	bl	4508 <printf@plt>
   10cbc:	ldrb	r1, [r4, #9]
   10cc0:	mov	r0, r5
   10cc4:	bl	4508 <printf@plt>
   10cc8:	ldrb	r1, [r4, #8]
   10ccc:	mov	r0, r5
   10cd0:	bl	4508 <printf@plt>
   10cd4:	ldrb	r1, [r4, #7]
   10cd8:	mov	r0, r5
   10cdc:	bl	4508 <printf@plt>
   10ce0:	ldrb	r1, [r4, #6]
   10ce4:	mov	r0, r5
   10ce8:	bl	4508 <printf@plt>
   10cec:	ldr	r9, [pc, #1308]	; 11210 <lell_print@@Base+0x88c>
   10cf0:	ldr	r6, [pc, #1308]	; 11214 <lell_print@@Base+0x890>
   10cf4:	ldr	sl, [pc, #1308]	; 11218 <lell_print@@Base+0x894>
   10cf8:	cmp	r7, #0
   10cfc:	add	r6, pc, r6
   10d00:	add	sl, pc, sl
   10d04:	add	r9, pc, r9
   10d08:	mov	r1, r6
   10d0c:	moveq	r1, r9
   10d10:	mov	r0, sl
   10d14:	bl	4508 <printf@plt>
   10d18:	ldr	r7, [r4, #88]	; 0x58
   10d1c:	ldrb	r2, [r4, #17]
   10d20:	ldr	r1, [pc, #1268]	; 1121c <lell_print@@Base+0x898>
   10d24:	add	r1, pc, r1
   10d28:	mov	r0, r8
   10d2c:	bl	4508 <printf@plt>
   10d30:	ldrb	r1, [r4, #16]
   10d34:	mov	r0, r5
   10d38:	bl	4508 <printf@plt>
   10d3c:	ldrb	r1, [r4, #15]
   10d40:	mov	r0, r5
   10d44:	bl	4508 <printf@plt>
   10d48:	ldrb	r1, [r4, #14]
   10d4c:	mov	r0, r5
   10d50:	bl	4508 <printf@plt>
   10d54:	ldrb	r1, [r4, #13]
   10d58:	mov	r0, r5
   10d5c:	bl	4508 <printf@plt>
   10d60:	ldrb	r1, [r4, #12]
   10d64:	mov	r0, r5
   10d68:	bl	4508 <printf@plt>
   10d6c:	cmp	r7, #0
   10d70:	mov	r0, sl
   10d74:	moveq	r6, r9
   10d78:	mov	r1, r6
   10d7c:	bl	4508 <printf@plt>
   10d80:	b	10e68 <lell_print@@Base+0x4e4>
   10d84:	ldr	r6, [r4, #84]	; 0x54
   10d88:	ldrb	r2, [r4, #11]
   10d8c:	ldr	r0, [pc, #1164]	; 11220 <lell_print@@Base+0x89c>
   10d90:	ldr	r1, [pc, #1164]	; 11224 <lell_print@@Base+0x8a0>
   10d94:	add	r0, pc, r0
   10d98:	add	r1, pc, r1
   10d9c:	bl	4508 <printf@plt>
   10da0:	ldrb	r1, [r4, #10]
   10da4:	ldr	r5, [pc, #1148]	; 11228 <lell_print@@Base+0x8a4>
   10da8:	add	r5, pc, r5
   10dac:	mov	r0, r5
   10db0:	bl	4508 <printf@plt>
   10db4:	ldrb	r1, [r4, #9]
   10db8:	mov	r0, r5
   10dbc:	bl	4508 <printf@plt>
   10dc0:	ldrb	r1, [r4, #8]
   10dc4:	mov	r0, r5
   10dc8:	bl	4508 <printf@plt>
   10dcc:	ldrb	r1, [r4, #7]
   10dd0:	mov	r0, r5
   10dd4:	bl	4508 <printf@plt>
   10dd8:	ldrb	r1, [r4, #6]
   10ddc:	mov	r0, r5
   10de0:	bl	4508 <printf@plt>
   10de4:	ldr	r0, [pc, #1088]	; 1122c <lell_print@@Base+0x8a8>
   10de8:	ldr	r1, [pc, #1088]	; 11230 <lell_print@@Base+0x8ac>
   10dec:	cmp	r6, #0
   10df0:	add	r0, pc, r0
   10df4:	add	r1, pc, r1
   10df8:	moveq	r1, r0
   10dfc:	ldr	r0, [pc, #1072]	; 11234 <lell_print@@Base+0x8b0>
   10e00:	add	r0, pc, r0
   10e04:	bl	4508 <printf@plt>
   10e08:	ldr	r0, [pc, #1064]	; 11238 <lell_print@@Base+0x8b4>
   10e0c:	add	r0, pc, r0
   10e10:	bl	4508 <printf@plt>
   10e14:	ldr	r0, [r4, #72]	; 0x48
   10e18:	cmp	r0, #7
   10e1c:	blt	10e50 <lell_print@@Base+0x4cc>
   10e20:	ldr	r5, [pc, #1044]	; 1123c <lell_print@@Base+0x8b8>
   10e24:	add	r6, r4, #12
   10e28:	mov	r7, #0
   10e2c:	add	r5, pc, r5
   10e30:	ldrb	r1, [r6, r7]
   10e34:	mov	r0, r5
   10e38:	bl	4508 <printf@plt>
   10e3c:	ldr	r0, [r4, #72]	; 0x48
   10e40:	add	r7, r7, #1
   10e44:	sub	r0, r0, #6
   10e48:	cmp	r7, r0
   10e4c:	blt	10e30 <lell_print@@Base+0x4ac>
   10e50:	mov	r0, #10
   10e54:	bl	4724 <putchar@plt>
   10e58:	ldr	r1, [r4, #72]	; 0x48
   10e5c:	add	r0, r4, #12
   10e60:	sub	r1, r1, #6
   10e64:	bl	112ac <lell_print@@Base+0x928>
   10e68:	mov	r0, #10
   10e6c:	bl	4724 <putchar@plt>
   10e70:	ldr	r0, [pc, #1060]	; 1129c <lell_print@@Base+0x918>
   10e74:	add	r0, pc, r0
   10e78:	bl	4508 <printf@plt>
   10e7c:	ldr	r0, [r4, #72]	; 0x48
   10e80:	cmp	r0, #1
   10e84:	blt	10eb8 <lell_print@@Base+0x534>
   10e88:	ldr	r5, [pc, #1040]	; 112a0 <lell_print@@Base+0x91c>
   10e8c:	mov	r6, #6
   10e90:	add	r5, pc, r5
   10e94:	ldrb	r1, [r4, r6]
   10e98:	mov	r0, r5
   10e9c:	bl	4508 <printf@plt>
   10ea0:	ldr	r1, [r4, #72]	; 0x48
   10ea4:	add	r0, r6, #1
   10ea8:	add	r1, r1, #5
   10eac:	cmp	r6, r1
   10eb0:	mov	r6, r0
   10eb4:	blt	10e94 <lell_print@@Base+0x510>
   10eb8:	mov	r0, #10
   10ebc:	bl	4724 <putchar@plt>
   10ec0:	ldr	r0, [pc, #988]	; 112a4 <lell_print@@Base+0x920>
   10ec4:	add	r0, pc, r0
   10ec8:	bl	4508 <printf@plt>
   10ecc:	ldr	r0, [r4, #72]	; 0x48
   10ed0:	add	r0, r0, r4
   10ed4:	ldrb	r1, [r0, #6]
   10ed8:	ldr	r5, [pc, #968]	; 112a8 <lell_print@@Base+0x924>
   10edc:	add	r5, pc, r5
   10ee0:	mov	r0, r5
   10ee4:	bl	4508 <printf@plt>
   10ee8:	ldr	r0, [r4, #72]	; 0x48
   10eec:	add	r0, r0, r4
   10ef0:	ldrb	r1, [r0, #7]
   10ef4:	mov	r0, r5
   10ef8:	bl	4508 <printf@plt>
   10efc:	ldr	r0, [r4, #72]	; 0x48
   10f00:	add	r0, r0, r4
   10f04:	ldrb	r1, [r0, #8]
   10f08:	mov	r0, r5
   10f0c:	bl	4508 <printf@plt>
   10f10:	mov	r0, #10
   10f14:	sub	sp, fp, #28
   10f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f1c:	b	4724 <putchar@plt>
   10f20:	ldr	r7, [r4, #84]	; 0x54
   10f24:	ldrb	r2, [r4, #11]
   10f28:	ldr	r8, [pc, #784]	; 11240 <lell_print@@Base+0x8bc>
   10f2c:	ldr	r1, [pc, #784]	; 11244 <lell_print@@Base+0x8c0>
   10f30:	add	r8, pc, r8
   10f34:	add	r1, pc, r1
   10f38:	mov	r0, r8
   10f3c:	bl	4508 <printf@plt>
   10f40:	ldrb	r1, [r4, #10]
   10f44:	ldr	r5, [pc, #764]	; 11248 <lell_print@@Base+0x8c4>
   10f48:	add	r5, pc, r5
   10f4c:	mov	r0, r5
   10f50:	bl	4508 <printf@plt>
   10f54:	ldrb	r1, [r4, #9]
   10f58:	mov	r0, r5
   10f5c:	bl	4508 <printf@plt>
   10f60:	ldrb	r1, [r4, #8]
   10f64:	mov	r0, r5
   10f68:	bl	4508 <printf@plt>
   10f6c:	ldrb	r1, [r4, #7]
   10f70:	mov	r0, r5
   10f74:	bl	4508 <printf@plt>
   10f78:	ldrb	r1, [r4, #6]
   10f7c:	mov	r0, r5
   10f80:	bl	4508 <printf@plt>
   10f84:	ldr	r9, [pc, #704]	; 1124c <lell_print@@Base+0x8c8>
   10f88:	ldr	r6, [pc, #704]	; 11250 <lell_print@@Base+0x8cc>
   10f8c:	ldr	sl, [pc, #704]	; 11254 <lell_print@@Base+0x8d0>
   10f90:	cmp	r7, #0
   10f94:	add	r6, pc, r6
   10f98:	add	sl, pc, sl
   10f9c:	add	r9, pc, r9
   10fa0:	mov	r1, r6
   10fa4:	moveq	r1, r9
   10fa8:	mov	r0, sl
   10fac:	bl	4508 <printf@plt>
   10fb0:	ldr	r7, [r4, #88]	; 0x58
   10fb4:	ldrb	r2, [r4, #17]
   10fb8:	ldr	r1, [pc, #664]	; 11258 <lell_print@@Base+0x8d4>
   10fbc:	mov	r0, r8
   10fc0:	add	r1, pc, r1
   10fc4:	bl	4508 <printf@plt>
   10fc8:	ldrb	r1, [r4, #16]
   10fcc:	mov	r0, r5
   10fd0:	bl	4508 <printf@plt>
   10fd4:	ldrb	r1, [r4, #15]
   10fd8:	mov	r0, r5
   10fdc:	bl	4508 <printf@plt>
   10fe0:	ldrb	r1, [r4, #14]
   10fe4:	mov	r0, r5
   10fe8:	bl	4508 <printf@plt>
   10fec:	ldrb	r1, [r4, #13]
   10ff0:	mov	r0, r5
   10ff4:	bl	4508 <printf@plt>
   10ff8:	ldrb	r1, [r4, #12]
   10ffc:	mov	r0, r5
   11000:	bl	4508 <printf@plt>
   11004:	cmp	r7, #0
   11008:	mov	r0, sl
   1100c:	moveq	r6, r9
   11010:	mov	r1, r6
   11014:	bl	4508 <printf@plt>
   11018:	ldr	r2, [r4, #18]
   1101c:	ldr	r0, [pc, #568]	; 1125c <lell_print@@Base+0x8d8>
   11020:	ldr	r1, [pc, #568]	; 11260 <lell_print@@Base+0x8dc>
   11024:	add	r0, pc, r0
   11028:	add	r1, pc, r1
   1102c:	bl	4508 <printf@plt>
   11030:	ldrb	r0, [r4, #22]
   11034:	ldrb	r1, [r4, #23]
   11038:	ldrb	r2, [r4, #24]
   1103c:	orr	r0, r0, r1, lsl #8
   11040:	orr	r2, r0, r2, lsl #16
   11044:	ldr	r0, [pc, #536]	; 11264 <lell_print@@Base+0x8e0>
   11048:	ldr	r1, [pc, #536]	; 11268 <lell_print@@Base+0x8e4>
   1104c:	add	r0, pc, r0
   11050:	add	r1, pc, r1
   11054:	bl	4508 <printf@plt>
   11058:	ldrb	r2, [r4, #25]
   1105c:	ldr	r0, [pc, #520]	; 1126c <lell_print@@Base+0x8e8>
   11060:	ldr	r1, [pc, #520]	; 11270 <lell_print@@Base+0x8ec>
   11064:	add	r0, pc, r0
   11068:	add	r1, pc, r1
   1106c:	mov	r3, r2
   11070:	bl	4508 <printf@plt>
   11074:	ldrb	r0, [r4, #26]
   11078:	ldrb	r1, [r4, #27]
   1107c:	ldr	r5, [pc, #496]	; 11274 <lell_print@@Base+0x8f0>
   11080:	orr	r2, r0, r1, lsl #8
   11084:	ldr	r1, [pc, #492]	; 11278 <lell_print@@Base+0x8f4>
   11088:	add	r5, pc, r5
   1108c:	mov	r0, r5
   11090:	mov	r3, r2
   11094:	add	r1, pc, r1
   11098:	bl	4508 <printf@plt>
   1109c:	ldrb	r0, [r4, #28]
   110a0:	ldrb	r1, [r4, #29]
   110a4:	orr	r2, r0, r1, lsl #8
   110a8:	ldr	r1, [pc, #460]	; 1127c <lell_print@@Base+0x8f8>
   110ac:	mov	r0, r5
   110b0:	mov	r3, r2
   110b4:	add	r1, pc, r1
   110b8:	bl	4508 <printf@plt>
   110bc:	ldrb	r0, [r4, #30]
   110c0:	ldrb	r1, [r4, #31]
   110c4:	orr	r2, r0, r1, lsl #8
   110c8:	ldr	r1, [pc, #432]	; 11280 <lell_print@@Base+0x8fc>
   110cc:	mov	r0, r5
   110d0:	mov	r3, r2
   110d4:	add	r1, pc, r1
   110d8:	bl	4508 <printf@plt>
   110dc:	ldrb	r0, [r4, #32]
   110e0:	ldrb	r1, [r4, #33]	; 0x21
   110e4:	orr	r2, r0, r1, lsl #8
   110e8:	ldr	r1, [pc, #404]	; 11284 <lell_print@@Base+0x900>
   110ec:	mov	r0, r5
   110f0:	mov	r3, r2
   110f4:	add	r1, pc, r1
   110f8:	bl	4508 <printf@plt>
   110fc:	ldr	r0, [pc, #388]	; 11288 <lell_print@@Base+0x904>
   11100:	add	r0, pc, r0
   11104:	bl	4508 <printf@plt>
   11108:	ldrb	r1, [r4, #34]	; 0x22
   1110c:	ldr	r5, [pc, #376]	; 1128c <lell_print@@Base+0x908>
   11110:	add	r5, pc, r5
   11114:	mov	r0, r5
   11118:	bl	4508 <printf@plt>
   1111c:	ldrb	r1, [r4, #35]	; 0x23
   11120:	mov	r0, r5
   11124:	bl	4508 <printf@plt>
   11128:	ldrb	r1, [r4, #36]	; 0x24
   1112c:	mov	r0, r5
   11130:	bl	4508 <printf@plt>
   11134:	ldrb	r1, [r4, #37]	; 0x25
   11138:	mov	r0, r5
   1113c:	bl	4508 <printf@plt>
   11140:	ldrb	r1, [r4, #38]	; 0x26
   11144:	mov	r0, r5
   11148:	bl	4508 <printf@plt>
   1114c:	mov	r0, #10
   11150:	bl	4724 <putchar@plt>
   11154:	ldrb	r0, [r4, #39]	; 0x27
   11158:	and	r1, r0, #31
   1115c:	ldr	r0, [pc, #300]	; 11290 <lell_print@@Base+0x90c>
   11160:	add	r0, pc, r0
   11164:	bl	4508 <printf@plt>
   11168:	ldrb	r0, [r4, #39]	; 0x27
   1116c:	lsr	r1, r0, #5
   11170:	ldr	r0, [pc, #284]	; 11294 <lell_print@@Base+0x910>
   11174:	add	r0, pc, r0
   11178:	ldr	r2, [r0, r1, lsl #2]
   1117c:	ldr	r0, [pc, #276]	; 11298 <lell_print@@Base+0x914>
   11180:	add	r0, pc, r0
   11184:	b	10ab8 <lell_print@@Base+0x134>
   11188:	andeq	r5, r0, r5, lsl #6
   1118c:	strdeq	r5, [r0], -pc	; <UNPREDICTABLE>
   11190:	andeq	r5, r0, ip, asr #5
   11194:	andeq	r5, r0, r5, ror #5
   11198:	andeq	fp, r1, ip, ror #7
   1119c:	ldrdeq	r5, [r0], -ip
   111a0:	ldrdeq	r5, [r0], -r3
   111a4:			; <UNDEFINED> instruction: 0x0001b3b4
   111a8:	andeq	r5, r0, r9, lsr #8
   111ac:	andeq	r5, r0, r5, ror r3
   111b0:	andeq	r5, r0, pc, ror #6
   111b4:	andeq	r5, r0, sl, lsr #10
   111b8:	andeq	r5, r0, r5, asr r3
   111bc:	ldrdeq	r5, [r0], -ip
   111c0:	andeq	fp, r1, ip, lsr #8
   111c4:	andeq	r5, r0, sp, asr #8
   111c8:	andeq	r5, r0, ip, lsl r6
   111cc:	andeq	r5, r0, ip, lsl #8
   111d0:	andeq	r5, r0, r3, lsl r6
   111d4:	ldrdeq	r5, [r0], -pc	; <UNPREDICTABLE>
   111d8:	ldrdeq	r5, [r0], -r4
   111dc:	andeq	r5, r0, r1, asr #11
   111e0:	muleq	r0, r4, r3
   111e4:	muleq	r0, fp, r6
   111e8:	andeq	r5, r0, r0, asr #10
   111ec:	andeq	r5, r0, r0, lsr r3
   111f0:	andeq	r5, r0, r3, lsr r5
   111f4:	strdeq	r5, [r0], -r3
   111f8:	strdeq	r5, [r0], -r4
   111fc:	andeq	r5, r0, r9, ror #9
   11200:			; <UNDEFINED> instruction: 0x000052bd
   11204:	muleq	r0, ip, r4
   11208:	andeq	r5, r0, r9, lsr #5
   1120c:	andeq	r5, r0, pc, lsl #9
   11210:	andeq	r5, r0, pc, asr #8
   11214:	andeq	r5, r0, r0, asr r4
   11218:	andeq	r5, r0, r5, asr #8
   1121c:	andeq	r5, r0, r4, lsl #4
   11220:	andeq	r5, r0, r0, lsr #7
   11224:	muleq	r0, r0, r1
   11228:	muleq	r0, r7, r3
   1122c:	andeq	r5, r0, r3, ror #6
   11230:	andeq	r5, r0, r8, asr r3
   11234:	andeq	r5, r0, r5, asr #6
   11238:	andeq	r5, r0, r1, asr #2
   1123c:	andeq	r5, r0, fp, lsr #8
   11240:	andeq	r5, r0, r4, lsl #4
   11244:	andeq	r5, r0, r9
   11248:	strdeq	r5, [r0], -r7
   1124c:			; <UNDEFINED> instruction: 0x000051b7
   11250:			; <UNDEFINED> instruction: 0x000051b8
   11254:	andeq	r5, r0, sp, lsr #3
   11258:	andeq	r4, r0, r8, ror #30
   1125c:	andeq	r5, r0, lr, lsr r3
   11260:	andeq	r4, r0, r6, lsr pc
   11264:	andeq	r5, r0, r2, lsr #6
   11268:	andeq	r4, r0, r6, lsl pc
   1126c:	andeq	r5, r0, r6, lsl r3
   11270:	andeq	r4, r0, r8, lsl #30
   11274:	andeq	r5, r0, r3, lsl #6
   11278:	andeq	r4, r0, r6, ror #29
   1127c:	ldrdeq	r4, [r0], -r2
   11280:			; <UNDEFINED> instruction: 0x00004ebd
   11284:	andeq	r4, r0, r7, lsr #29
   11288:	andeq	r4, r0, r5, lsr #29
   1128c:	andeq	r5, r0, r7, asr #2
   11290:	andeq	r4, r0, lr, asr #28
   11294:	andeq	sl, r1, r8, lsr sp
   11298:	andeq	r4, r0, fp, lsr lr
   1129c:	andeq	r5, r0, r8, asr r1
   112a0:	andeq	r5, r0, r7, asr #7
   112a4:	andeq	r5, r0, r3, lsl r1
   112a8:	andeq	r5, r0, fp, ror r3
   112ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112b0:	add	fp, sp, #28
   112b4:	sub	sp, sp, #4
   112b8:	vpush	{d8}
   112bc:	sub	sp, sp, #32
   112c0:	cmp	r1, #1
   112c4:	blt	11a34 <lell_print@@Base+0x10b0>
   112c8:	mov	r7, r0
   112cc:	add	r0, r0, #2
   112d0:	vmov.f64	d8, #116	; 0x3fa00000  1.250
   112d4:	mov	r3, r1
   112d8:	mov	r8, #0
   112dc:	str	r0, [sp, #4]
   112e0:	add	r0, r7, #4
   112e4:	str	r0, [sp]
   112e8:	ldr	r4, [pc, #1936]	; 11a80 <lell_print@@Base+0x10fc>
   112ec:	ldr	r2, [pc, #1936]	; 11a84 <lell_print@@Base+0x1100>
   112f0:	ldr	sl, [pc, #1936]	; 11a88 <lell_print@@Base+0x1104>
   112f4:	str	r1, [sp, #8]
   112f8:	str	r7, [sp, #12]
   112fc:	add	r4, pc, r4
   11300:	add	r2, pc, r2
   11304:	add	sl, pc, sl
   11308:	b	11330 <lell_print@@Base+0x9ac>
   1130c:	mov	r0, #10
   11310:	bl	4724 <putchar@plt>
   11314:	mov	r2, r5
   11318:	ldr	r3, [sp, #8]
   1131c:	ldr	r4, [pc, #1964]	; 11ad0 <lell_print@@Base+0x114c>
   11320:	ldr	r7, [sp, #12]
   11324:	cmp	r8, r3
   11328:	add	r4, pc, r4
   1132c:	bge	11a34 <lell_print@@Base+0x10b0>
   11330:	ldrb	r6, [r7, r8]
   11334:	add	r1, r8, #1
   11338:	mov	r9, r8
   1133c:	add	r8, r1, r6
   11340:	cmp	r8, r3
   11344:	bgt	11a44 <lell_print@@Base+0x10c0>
   11348:	cmp	r6, #0
   1134c:	beq	11a64 <lell_print@@Base+0x10e0>
   11350:	ldrb	r7, [r7, r1]
   11354:	ldr	r0, [pc, #1840]	; 11a8c <lell_print@@Base+0x1108>
   11358:	mov	r5, r2
   1135c:	add	r0, pc, r0
   11360:	mov	r1, r7
   11364:	bl	4508 <printf@plt>
   11368:	sub	r0, r7, #1
   1136c:	cmp	r0, #21
   11370:	bhi	114ec <lell_print@@Base+0xb68>
   11374:	add	r2, pc, #28
   11378:	ldr	r3, [r2, r0, lsl #2]
   1137c:	ldr	r0, [pc, #1808]	; 11a94 <lell_print@@Base+0x1110>
   11380:	ldr	r1, [pc, #1808]	; 11a98 <lell_print@@Base+0x1114>
   11384:	ldr	r7, [pc, #1808]	; 11a9c <lell_print@@Base+0x1118>
   11388:	add	r0, pc, r0
   1138c:	add	r1, pc, r1
   11390:	add	r7, pc, r7
   11394:	add	pc, r2, r3
   11398:	andeq	r0, r0, r8, asr r0
   1139c:	andeq	r0, r0, r8, lsr #4
   113a0:	andeq	r0, r0, r0, lsr #4
   113a4:	andeq	r0, r0, r4, ror #3
   113a8:	andeq	r0, r0, r4, ror #3
   113ac:	andeq	r0, r0, ip, ror r2
   113b0:	andeq	r0, r0, r4, ror r2
   113b4:	andeq	r0, r0, r4, ror #3
   113b8:	andeq	r0, r0, r0, lsr #5
   113bc:	strdeq	r0, [r0], -r8
   113c0:	andeq	r0, r0, r4, ror #3
   113c4:	andeq	r0, r0, r4, ror #3
   113c8:	andeq	r0, r0, r4, ror #3
   113cc:	andeq	r0, r0, r4, ror #3
   113d0:	andeq	r0, r0, r4, ror #3
   113d4:	andeq	r0, r0, r4, ror #3
   113d8:	andeq	r0, r0, r4, ror #3
   113dc:	andeq	r0, r0, r0, lsr r3
   113e0:	andeq	r0, r0, r4, ror #3
   113e4:	andeq	r0, r0, r4, ror #3
   113e8:	andeq	r0, r0, r4, ror #3
   113ec:	andeq	r0, r0, ip, lsr #7
   113f0:	ldr	r0, [pc, #1704]	; 11aa0 <lell_print@@Base+0x111c>
   113f4:	add	r0, pc, r0
   113f8:	bl	4640 <puts@plt>
   113fc:	mov	r0, r4
   11400:	bl	4508 <printf@plt>
   11404:	ldr	r7, [sp, #12]
   11408:	add	r6, r9, #2
   1140c:	ldrb	r0, [r7, r6]
   11410:	ldr	r4, [pc, #1676]	; 11aa4 <lell_print@@Base+0x1120>
   11414:	add	r4, pc, r4
   11418:	lsr	r1, r0, #7
   1141c:	mov	r0, r4
   11420:	bl	4508 <printf@plt>
   11424:	ldrb	r0, [r7, r6]
   11428:	ubfx	r1, r0, #6, #1
   1142c:	mov	r0, r4
   11430:	bl	4508 <printf@plt>
   11434:	ldrb	r0, [r7, r6]
   11438:	ubfx	r1, r0, #5, #1
   1143c:	mov	r0, r4
   11440:	bl	4508 <printf@plt>
   11444:	ldrb	r0, [r7, r6]
   11448:	ubfx	r1, r0, #4, #1
   1144c:	mov	r0, r4
   11450:	bl	4508 <printf@plt>
   11454:	ldrb	r0, [r7, r6]
   11458:	ubfx	r1, r0, #3, #1
   1145c:	mov	r0, r4
   11460:	bl	4508 <printf@plt>
   11464:	ldrb	r0, [r7, r6]
   11468:	ubfx	r1, r0, #2, #1
   1146c:	mov	r0, r4
   11470:	bl	4508 <printf@plt>
   11474:	ldrb	r0, [r7, r6]
   11478:	ubfx	r1, r0, #1, #1
   1147c:	mov	r0, r4
   11480:	bl	4508 <printf@plt>
   11484:	ldrb	r0, [r7, r6]
   11488:	and	r1, r0, #1
   1148c:	mov	r0, r4
   11490:	bl	4508 <printf@plt>
   11494:	mov	r0, #10
   11498:	bl	4724 <putchar@plt>
   1149c:	ldrb	r0, [r7, r6]
   114a0:	ldr	r4, [pc, #1536]	; 11aa8 <lell_print@@Base+0x1124>
   114a4:	tst	r0, #1
   114a8:	add	r4, pc, r4
   114ac:	bne	11904 <lell_print@@Base+0xf80>
   114b0:	tst	r0, #2
   114b4:	bne	11924 <lell_print@@Base+0xfa0>
   114b8:	tst	r0, #4
   114bc:	bne	11944 <lell_print@@Base+0xfc0>
   114c0:	tst	r0, #8
   114c4:	bne	11964 <lell_print@@Base+0xfe0>
   114c8:	tst	r0, #16
   114cc:	bne	11984 <lell_print@@Base+0x1000>
   114d0:	tst	r0, #32
   114d4:	bne	119a4 <lell_print@@Base+0x1020>
   114d8:	tst	r0, #64	; 0x40
   114dc:	bne	119c4 <lell_print@@Base+0x1040>
   114e0:	tst	r0, #128	; 0x80
   114e4:	bne	119e4 <lell_print@@Base+0x1060>
   114e8:	b	1130c <lell_print@@Base+0x988>
   114ec:	cmp	r7, #255	; 0xff
   114f0:	ldr	r7, [pc, #1432]	; 11a90 <lell_print@@Base+0x110c>
   114f4:	add	r7, pc, r7
   114f8:	bne	1157c <lell_print@@Base+0xbf8>
   114fc:	ldr	r0, [pc, #1552]	; 11b14 <lell_print@@Base+0x1190>
   11500:	add	r0, pc, r0
   11504:	bl	4640 <puts@plt>
   11508:	mov	r0, r4
   1150c:	bl	4508 <printf@plt>
   11510:	sub	r1, r6, #1
   11514:	cmp	r1, #2
   11518:	blt	11a24 <lell_print@@Base+0x10a0>
   1151c:	ldr	r0, [sp, #12]
   11520:	add	r0, r9, r0
   11524:	ldrh	r0, [r0, #2]
   11528:	bl	4754 <bt_compidtostr@plt>
   1152c:	mov	r1, r0
   11530:	ldr	r0, [pc, #1504]	; 11b18 <lell_print@@Base+0x1194>
   11534:	add	r0, pc, r0
   11538:	bl	4508 <printf@plt>
   1153c:	mov	r0, r4
   11540:	bl	4508 <printf@plt>
   11544:	ldr	r0, [pc, #1488]	; 11b1c <lell_print@@Base+0x1198>
   11548:	add	r0, pc, r0
   1154c:	bl	4508 <printf@plt>
   11550:	cmp	r6, #4
   11554:	bcc	1130c <lell_print@@Base+0x988>
   11558:	ldr	r0, [sp]
   1155c:	sub	r6, r6, #3
   11560:	add	r4, r0, r9
   11564:	ldrb	r1, [r4], #1
   11568:	mov	r0, r7
   1156c:	bl	4508 <printf@plt>
   11570:	subs	r6, r6, #1
   11574:	bne	11564 <lell_print@@Base+0xbe0>
   11578:	b	1130c <lell_print@@Base+0x988>
   1157c:	mov	r0, #10
   11580:	bl	4724 <putchar@plt>
   11584:	mov	r0, r4
   11588:	bl	4508 <printf@plt>
   1158c:	cmp	r6, #2
   11590:	bcc	1130c <lell_print@@Base+0x988>
   11594:	ldr	r0, [sp, #4]
   11598:	sub	r6, r6, #1
   1159c:	add	r4, r0, r9
   115a0:	ldrb	r1, [r4], #1
   115a4:	mov	r0, r7
   115a8:	bl	4508 <printf@plt>
   115ac:	subs	r6, r6, #1
   115b0:	bne	115a0 <lell_print@@Base+0xc1c>
   115b4:	b	1130c <lell_print@@Base+0x988>
   115b8:	ldr	r0, [pc, #1292]	; 11acc <lell_print@@Base+0x1148>
   115bc:	add	r0, pc, r0
   115c0:	bl	4640 <puts@plt>
   115c4:	sub	r4, r6, #1
   115c8:	mov	r2, r5
   115cc:	tst	r4, #1
   115d0:	bne	11318 <lell_print@@Base+0x994>
   115d4:	cmp	r4, #1
   115d8:	blt	11318 <lell_print@@Base+0x994>
   115dc:	ldr	r0, [sp, #4]
   115e0:	mov	r7, #0
   115e4:	add	r6, r0, r9
   115e8:	add	r0, r6, r7
   115ec:	ldrh	r1, [r0]
   115f0:	mov	r0, r2
   115f4:	bl	4508 <printf@plt>
   115f8:	add	r7, r7, #2
   115fc:	mov	r2, r5
   11600:	cmp	r7, r4
   11604:	blt	115e8 <lell_print@@Base+0xc64>
   11608:	b	11318 <lell_print@@Base+0x994>
   1160c:	ldr	r1, [pc, #1216]	; 11ad4 <lell_print@@Base+0x1150>
   11610:	add	r1, pc, r1
   11614:	mov	r0, r1
   11618:	bl	4640 <puts@plt>
   1161c:	sub	r6, r6, #1
   11620:	tst	r6, #15
   11624:	beq	117cc <lell_print@@Base+0xe48>
   11628:	ldr	r0, [pc, #1196]	; 11adc <lell_print@@Base+0x1158>
   1162c:	mov	r1, r6
   11630:	add	r0, pc, r0
   11634:	b	11a2c <lell_print@@Base+0x10a8>
   11638:	ldr	r0, [pc, #1184]	; 11ae0 <lell_print@@Base+0x115c>
   1163c:	add	r0, pc, r0
   11640:	bl	4640 <puts@plt>
   11644:	mov	r0, r4
   11648:	bl	4508 <printf@plt>
   1164c:	cmp	r6, #2
   11650:	bcc	1130c <lell_print@@Base+0x988>
   11654:	ldr	r0, [sp, #4]
   11658:	sub	r7, r6, #1
   1165c:	add	r4, r0, r9
   11660:	bl	467c <__ctype_b_loc@plt>
   11664:	mov	r6, r0
   11668:	ldrb	r0, [r4], #1
   1166c:	ldr	r1, [r6]
   11670:	add	r1, r1, r0, lsl #1
   11674:	ldrh	r1, [r1]
   11678:	tst	r1, #16384	; 0x4000
   1167c:	movweq	r0, #46	; 0x2e
   11680:	bl	4724 <putchar@plt>
   11684:	subs	r7, r7, #1
   11688:	bne	11668 <lell_print@@Base+0xce4>
   1168c:	b	1130c <lell_print@@Base+0x988>
   11690:	ldr	r0, [pc, #1100]	; 11ae4 <lell_print@@Base+0x1160>
   11694:	add	r0, pc, r0
   11698:	bl	4640 <puts@plt>
   1169c:	mov	r0, r4
   116a0:	bl	4508 <printf@plt>
   116a4:	sub	r1, r6, #1
   116a8:	cmp	r1, #1
   116ac:	bne	119fc <lell_print@@Base+0x1078>
   116b0:	ldr	r0, [sp, #12]
   116b4:	add	r0, r9, r0
   116b8:	ldrb	r1, [r0, #2]
   116bc:	ldr	r0, [pc, #1060]	; 11ae8 <lell_print@@Base+0x1164>
   116c0:	add	r0, pc, r0
   116c4:	b	11a2c <lell_print@@Base+0x10a8>
   116c8:	ldr	r0, [pc, #1056]	; 11af0 <lell_print@@Base+0x116c>
   116cc:	add	r0, pc, r0
   116d0:	bl	4640 <puts@plt>
   116d4:	mov	r0, r4
   116d8:	bl	4508 <printf@plt>
   116dc:	sub	r1, r6, #1
   116e0:	cmp	r1, #4
   116e4:	bne	11a08 <lell_print@@Base+0x1084>
   116e8:	ldr	r0, [sp, #12]
   116ec:	add	r4, r9, r0
   116f0:	ldrb	r0, [r4, #2]
   116f4:	ldrb	r1, [r4, #3]
   116f8:	orr	r0, r0, r1, lsl #8
   116fc:	vmov	s0, r0
   11700:	vcvt.f64.s32	d16, s0
   11704:	ldr	r0, [pc, #1000]	; 11af4 <lell_print@@Base+0x1170>
   11708:	add	r0, pc, r0
   1170c:	vmul.f64	d16, d16, d8
   11710:	vmov	r2, r3, d16
   11714:	bl	4508 <printf@plt>
   11718:	ldrb	r0, [r4, #4]
   1171c:	ldrb	r1, [r4, #5]
   11720:	orr	r0, r0, r1, lsl #8
   11724:	vmov	s0, r0
   11728:	vcvt.f64.s32	d16, s0
   1172c:	ldr	r0, [pc, #964]	; 11af8 <lell_print@@Base+0x1174>
   11730:	add	r0, pc, r0
   11734:	vmul.f64	d16, d16, d8
   11738:	vmov	r2, r3, d16
   1173c:	bl	4508 <printf@plt>
   11740:	b	11314 <lell_print@@Base+0x990>
   11744:	ldr	r0, [pc, #948]	; 11b00 <lell_print@@Base+0x117c>
   11748:	add	r0, pc, r0
   1174c:	bl	4640 <puts@plt>
   11750:	mov	r0, r4
   11754:	bl	4508 <printf@plt>
   11758:	sub	r7, r6, #1
   1175c:	cmp	r7, #2
   11760:	blt	11a14 <lell_print@@Base+0x1090>
   11764:	ldr	r0, [sp, #12]
   11768:	add	r0, r9, r0
   1176c:	ldrb	r1, [r0, #2]
   11770:	ldrb	r0, [r0, #3]
   11774:	orr	r1, r1, r0, lsl #8
   11778:	ldr	r0, [pc, #900]	; 11b04 <lell_print@@Base+0x1180>
   1177c:	add	r0, pc, r0
   11780:	bl	4508 <printf@plt>
   11784:	cmp	r7, #2
   11788:	ldr	r7, [pc, #888]	; 11b08 <lell_print@@Base+0x1184>
   1178c:	add	r7, pc, r7
   11790:	beq	1130c <lell_print@@Base+0x988>
   11794:	ldr	r0, [pc, #880]	; 11b0c <lell_print@@Base+0x1188>
   11798:	add	r0, pc, r0
   1179c:	bl	4508 <printf@plt>
   117a0:	cmp	r6, #4
   117a4:	bcc	1130c <lell_print@@Base+0x988>
   117a8:	ldr	r0, [sp]
   117ac:	sub	r6, r6, #3
   117b0:	add	r4, r0, r9
   117b4:	ldrb	r1, [r4], #1
   117b8:	mov	r0, r7
   117bc:	bl	4508 <printf@plt>
   117c0:	subs	r6, r6, #1
   117c4:	bne	117b4 <lell_print@@Base+0xe30>
   117c8:	b	1130c <lell_print@@Base+0x988>
   117cc:	cmp	r6, #1
   117d0:	blt	11314 <lell_print@@Base+0x990>
   117d4:	ldr	r0, [sp, #4]
   117d8:	mov	r4, #0
   117dc:	add	r7, r0, r9
   117e0:	b	117f0 <lell_print@@Base+0xe6c>
   117e4:	add	r4, r4, #1
   117e8:	cmp	r6, r4
   117ec:	beq	11314 <lell_print@@Base+0x990>
   117f0:	ldrb	r0, [r7, r4]
   117f4:	and	r1, r4, #15
   117f8:	add	r3, sp, #16
   117fc:	eor	r2, r1, #15
   11800:	cmp	r1, #15
   11804:	strb	r0, [r3, r2]
   11808:	bne	117e4 <lell_print@@Base+0xe60>
   1180c:	ldr	r0, [pc, #708]	; 11ad8 <lell_print@@Base+0x1154>
   11810:	add	r0, pc, r0
   11814:	bl	4508 <printf@plt>
   11818:	ldrb	r1, [sp, #16]
   1181c:	mov	r0, sl
   11820:	bl	4508 <printf@plt>
   11824:	ldrb	r1, [sp, #17]
   11828:	mov	r0, sl
   1182c:	bl	4508 <printf@plt>
   11830:	ldrb	r1, [sp, #18]
   11834:	mov	r0, sl
   11838:	bl	4508 <printf@plt>
   1183c:	ldrb	r1, [sp, #19]
   11840:	mov	r0, sl
   11844:	bl	4508 <printf@plt>
   11848:	mov	r0, #45	; 0x2d
   1184c:	bl	4724 <putchar@plt>
   11850:	ldrb	r1, [sp, #20]
   11854:	mov	r0, sl
   11858:	bl	4508 <printf@plt>
   1185c:	ldrb	r1, [sp, #21]
   11860:	mov	r0, sl
   11864:	bl	4508 <printf@plt>
   11868:	mov	r0, #45	; 0x2d
   1186c:	bl	4724 <putchar@plt>
   11870:	ldrb	r1, [sp, #22]
   11874:	mov	r0, sl
   11878:	bl	4508 <printf@plt>
   1187c:	ldrb	r1, [sp, #23]
   11880:	mov	r0, sl
   11884:	bl	4508 <printf@plt>
   11888:	mov	r0, #45	; 0x2d
   1188c:	bl	4724 <putchar@plt>
   11890:	ldrb	r1, [sp, #24]
   11894:	mov	r0, sl
   11898:	bl	4508 <printf@plt>
   1189c:	ldrb	r1, [sp, #25]
   118a0:	mov	r0, sl
   118a4:	bl	4508 <printf@plt>
   118a8:	mov	r0, #45	; 0x2d
   118ac:	bl	4724 <putchar@plt>
   118b0:	ldrb	r1, [sp, #26]
   118b4:	mov	r0, sl
   118b8:	bl	4508 <printf@plt>
   118bc:	ldrb	r1, [sp, #27]
   118c0:	mov	r0, sl
   118c4:	bl	4508 <printf@plt>
   118c8:	ldrb	r1, [sp, #28]
   118cc:	mov	r0, sl
   118d0:	bl	4508 <printf@plt>
   118d4:	ldrb	r1, [sp, #29]
   118d8:	mov	r0, sl
   118dc:	bl	4508 <printf@plt>
   118e0:	ldrb	r1, [sp, #30]
   118e4:	mov	r0, sl
   118e8:	bl	4508 <printf@plt>
   118ec:	ldrb	r1, [sp, #31]
   118f0:	mov	r0, sl
   118f4:	bl	4508 <printf@plt>
   118f8:	mov	r0, #10
   118fc:	bl	4724 <putchar@plt>
   11900:	b	117e4 <lell_print@@Base+0xe60>
   11904:	mov	r0, r4
   11908:	bl	4508 <printf@plt>
   1190c:	ldr	r0, [pc, #408]	; 11aac <lell_print@@Base+0x1128>
   11910:	add	r0, pc, r0
   11914:	bl	4640 <puts@plt>
   11918:	ldrb	r0, [r7, r6]
   1191c:	tst	r0, #2
   11920:	beq	114b8 <lell_print@@Base+0xb34>
   11924:	mov	r0, r4
   11928:	bl	4508 <printf@plt>
   1192c:	ldr	r0, [pc, #380]	; 11ab0 <lell_print@@Base+0x112c>
   11930:	add	r0, pc, r0
   11934:	bl	4640 <puts@plt>
   11938:	ldrb	r0, [r7, r6]
   1193c:	tst	r0, #4
   11940:	beq	114c0 <lell_print@@Base+0xb3c>
   11944:	mov	r0, r4
   11948:	bl	4508 <printf@plt>
   1194c:	ldr	r0, [pc, #352]	; 11ab4 <lell_print@@Base+0x1130>
   11950:	add	r0, pc, r0
   11954:	bl	4640 <puts@plt>
   11958:	ldrb	r0, [r7, r6]
   1195c:	tst	r0, #8
   11960:	beq	114c8 <lell_print@@Base+0xb44>
   11964:	mov	r0, r4
   11968:	bl	4508 <printf@plt>
   1196c:	ldr	r0, [pc, #324]	; 11ab8 <lell_print@@Base+0x1134>
   11970:	add	r0, pc, r0
   11974:	bl	4640 <puts@plt>
   11978:	ldrb	r0, [r7, r6]
   1197c:	tst	r0, #16
   11980:	beq	114d0 <lell_print@@Base+0xb4c>
   11984:	mov	r0, r4
   11988:	bl	4508 <printf@plt>
   1198c:	ldr	r0, [pc, #296]	; 11abc <lell_print@@Base+0x1138>
   11990:	add	r0, pc, r0
   11994:	bl	4640 <puts@plt>
   11998:	ldrb	r0, [r7, r6]
   1199c:	tst	r0, #32
   119a0:	beq	114d8 <lell_print@@Base+0xb54>
   119a4:	mov	r0, r4
   119a8:	bl	4508 <printf@plt>
   119ac:	ldr	r0, [pc, #268]	; 11ac0 <lell_print@@Base+0x113c>
   119b0:	add	r0, pc, r0
   119b4:	bl	4640 <puts@plt>
   119b8:	ldrb	r0, [r7, r6]
   119bc:	tst	r0, #64	; 0x40
   119c0:	beq	114e0 <lell_print@@Base+0xb5c>
   119c4:	mov	r0, r4
   119c8:	bl	4508 <printf@plt>
   119cc:	ldr	r0, [pc, #240]	; 11ac4 <lell_print@@Base+0x1140>
   119d0:	add	r0, pc, r0
   119d4:	bl	4640 <puts@plt>
   119d8:	ldrb	r0, [r7, r6]
   119dc:	tst	r0, #128	; 0x80
   119e0:	beq	1130c <lell_print@@Base+0x988>
   119e4:	mov	r0, r4
   119e8:	bl	4508 <printf@plt>
   119ec:	ldr	r0, [pc, #212]	; 11ac8 <lell_print@@Base+0x1144>
   119f0:	add	r0, pc, r0
   119f4:	bl	4640 <puts@plt>
   119f8:	b	1130c <lell_print@@Base+0x988>
   119fc:	ldr	r0, [pc, #232]	; 11aec <lell_print@@Base+0x1168>
   11a00:	add	r0, pc, r0
   11a04:	b	11a2c <lell_print@@Base+0x10a8>
   11a08:	ldr	r0, [pc, #236]	; 11afc <lell_print@@Base+0x1178>
   11a0c:	add	r0, pc, r0
   11a10:	b	11a2c <lell_print@@Base+0x10a8>
   11a14:	ldr	r0, [pc, #244]	; 11b10 <lell_print@@Base+0x118c>
   11a18:	mov	r1, r7
   11a1c:	add	r0, pc, r0
   11a20:	b	11a2c <lell_print@@Base+0x10a8>
   11a24:	ldr	r0, [pc, #244]	; 11b20 <lell_print@@Base+0x119c>
   11a28:	add	r0, pc, r0
   11a2c:	bl	4508 <printf@plt>
   11a30:	b	11314 <lell_print@@Base+0x990>
   11a34:	sub	sp, fp, #40	; 0x28
   11a38:	vpop	{d8}
   11a3c:	add	sp, sp, #4
   11a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a44:	ldr	r0, [pc, #216]	; 11b24 <lell_print@@Base+0x11a0>
   11a48:	mov	r2, r6
   11a4c:	add	r0, pc, r0
   11a50:	sub	sp, fp, #40	; 0x28
   11a54:	vpop	{d8}
   11a58:	add	sp, sp, #4
   11a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a60:	b	4508 <printf@plt>
   11a64:	ldr	r0, [pc, #188]	; 11b28 <lell_print@@Base+0x11a4>
   11a68:	add	r0, pc, r0
   11a6c:	sub	sp, fp, #40	; 0x28
   11a70:	vpop	{d8}
   11a74:	add	sp, sp, #4
   11a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a7c:	b	4640 <puts@plt>
   11a80:			; <UNDEFINED> instruction: 0x00004eb1
   11a84:			; <UNDEFINED> instruction: 0x00004eb9
   11a88:	andeq	r4, r0, r4, asr pc
   11a8c:	andeq	r4, r0, r8, lsr lr
   11a90:	andeq	r4, r0, r3, ror #26
   11a94:	andeq	r5, r0, r7, ror r1
   11a98:	andeq	r5, r0, r1, lsr r1
   11a9c:	andeq	r4, r0, r7, asr #29
   11aa0:	andeq	r5, r0, r3, lsr r1
   11aa4:	muleq	r0, r2, sp
   11aa8:	andeq	r4, r0, r1, lsl #26
   11aac:	andeq	r4, r0, fp, lsl #19
   11ab0:	andeq	r4, r0, r8, lsl #19
   11ab4:	andeq	r4, r0, r5, lsl #19
   11ab8:	andeq	r4, r0, sl, ror r9
   11abc:	muleq	r0, r9, r9
   11ac0:	strdeq	r4, [r0], -r8
   11ac4:	ldrdeq	r4, [r0], -r8
   11ac8:			; <UNDEFINED> instruction: 0x000042b8
   11acc:	andeq	r4, r0, sl, lsr #30
   11ad0:	andeq	r4, r0, r5, lsl #29
   11ad4:	muleq	r0, r4, lr
   11ad8:	muleq	r0, sp, r9
   11adc:	muleq	r0, sl, fp
   11ae0:	andeq	r4, r0, r1, asr lr
   11ae4:	andeq	r4, r0, r7, ror #27
   11ae8:	andeq	r4, r0, r6, lsr fp
   11aec:	strdeq	r4, [r0], -lr
   11af0:	andeq	r4, r0, ip, lsl #27
   11af4:	andeq	r4, r0, r6, lsl fp
   11af8:	strdeq	r4, [r0], -r7
   11afc:	andeq	r4, r0, r6, lsr #16
   11b00:	andeq	r4, r0, r0, lsl #26
   11b04:	ldrdeq	r4, [r0], -r6
   11b08:	andeq	r4, r0, fp, asr #21
   11b0c:	andeq	r4, r0, r5, asr #21
   11b10:	andeq	r4, r0, pc, asr #16
   11b14:	andeq	r4, r0, sl, lsr #30
   11b18:	andeq	r4, r0, sl, asr sp
   11b1c:	andeq	r4, r0, r0, lsl sl
   11b20:	andeq	r4, r0, r3, asr #16
   11b24:	andeq	r4, r0, lr, lsl #14
   11b28:	andeq	r4, r0, r8, asr #21

00011b2c <bt_compidtostr@@Base>:
   11b2c:	add	r0, r0, #1
   11b30:	movw	r2, #1038	; 0x40e
   11b34:	uxth	r1, r0
   11b38:	cmp	r1, r2
   11b3c:	bhi	11b54 <bt_compidtostr@@Base+0x28>
   11b40:	ldr	r1, [pc, #24]	; 11b60 <bt_compidtostr@@Base+0x34>
   11b44:	sxth	r0, r0
   11b48:	add	r1, pc, r1
   11b4c:	ldr	r0, [r1, r0, lsl #2]
   11b50:	bx	lr
   11b54:	ldr	r0, [pc, #8]	; 11b64 <bt_compidtostr@@Base+0x38>
   11b58:	add	r0, pc, r0
   11b5c:	bx	lr
   11b60:	andeq	sl, r1, r4, lsl #7
   11b64:	andeq	r9, r0, r0, ror #18
	...

00011b70 <btbb_pcap_open@@Base>:
   11b70:	push	{r4, sl, fp, lr}
   11b74:	add	fp, sp, #8
   11b78:	sub	sp, sp, #24
   11b7c:	str	r1, [sp, #20]
   11b80:	mov	r1, #0
   11b84:	str	r2, [sp, #16]
   11b88:	str	r1, [sp, #12]
   11b8c:	str	r1, [sp, #8]
   11b90:	movw	r1, #2
   11b94:	movt	r1, #4
   11b98:	str	r1, [sp, #4]
   11b9c:	movw	r1, #15437	; 0x3c4d
   11ba0:	movt	r1, #41394	; 0xa1b2
   11ba4:	str	r1, [sp]
   11ba8:	ldr	r1, [pc, #48]	; 11be0 <btbb_pcap_open@@Base+0x70>
   11bac:	add	r1, pc, r1
   11bb0:	bl	4514 <fopen@plt>
   11bb4:	mov	r4, r0
   11bb8:	cmp	r0, #0
   11bbc:	beq	11bd4 <btbb_pcap_open@@Base+0x64>
   11bc0:	mov	r0, sp
   11bc4:	mov	r1, #24
   11bc8:	mov	r2, #1
   11bcc:	mov	r3, r4
   11bd0:	bl	45f8 <fwrite@plt>
   11bd4:	mov	r0, r4
   11bd8:	sub	sp, fp, #8
   11bdc:	pop	{r4, sl, fp, pc}
   11be0:	andeq	r9, r0, r9, lsl r9
   11be4:	nop	{0}
   11be8:	nop	{0}
   11bec:	nop	{0}

00011bf0 <btbb_pcap_create_file@@Base>:
   11bf0:	push	{r4, r5, r6, r7, fp, lr}
   11bf4:	add	fp, sp, #16
   11bf8:	sub	sp, sp, #24
   11bfc:	mov	r7, r0
   11c00:	mov	r0, #4
   11c04:	mov	r5, r1
   11c08:	bl	464c <malloc@plt>
   11c0c:	cmp	r0, #0
   11c10:	beq	11c90 <btbb_pcap_create_file@@Base+0xa0>
   11c14:	mov	r6, #0
   11c18:	mov	r4, r0
   11c1c:	str	r6, [r0]
   11c20:	add	r0, pc, #184	; 0xb8
   11c24:	vld1.64	{d16-d17}, [r0 :128]
   11c28:	mov	r0, sp
   11c2c:	add	r0, r0, #8
   11c30:	vst1.32	{d16-d17}, [r0]
   11c34:	movw	r0, #2
   11c38:	movt	r0, #4
   11c3c:	str	r0, [sp, #4]
   11c40:	movw	r0, #15437	; 0x3c4d
   11c44:	movt	r0, #41394	; 0xa1b2
   11c48:	str	r0, [sp]
   11c4c:	mov	r0, r7
   11c50:	ldr	r1, [pc, #152]	; 11cf0 <btbb_pcap_create_file@@Base+0x100>
   11c54:	add	r1, pc, r1
   11c58:	bl	4514 <fopen@plt>
   11c5c:	cmp	r0, #0
   11c60:	beq	11ca0 <btbb_pcap_create_file@@Base+0xb0>
   11c64:	mov	r7, r0
   11c68:	mov	r0, sp
   11c6c:	mov	r1, #24
   11c70:	mov	r2, #1
   11c74:	mov	r3, r7
   11c78:	bl	45f8 <fwrite@plt>
   11c7c:	str	r7, [r4]
   11c80:	str	r4, [r5]
   11c84:	mov	r0, r6
   11c88:	sub	sp, fp, #16
   11c8c:	pop	{r4, r5, r6, r7, fp, pc}
   11c90:	mvn	r6, #2
   11c94:	mov	r0, r6
   11c98:	sub	sp, fp, #16
   11c9c:	pop	{r4, r5, r6, r7, fp, pc}
   11ca0:	mov	r0, #0
   11ca4:	str	r0, [r4]
   11ca8:	ldr	r0, [pc, #68]	; 11cf4 <btbb_pcap_create_file@@Base+0x104>
   11cac:	add	r0, pc, r0
   11cb0:	bl	45d4 <perror@plt>
   11cb4:	ldr	r0, [r4]
   11cb8:	cmp	r0, #0
   11cbc:	beq	11cc4 <btbb_pcap_create_file@@Base+0xd4>
   11cc0:	bl	4778 <fclose@plt>
   11cc4:	mov	r0, r4
   11cc8:	bl	4550 <free@plt>
   11ccc:	mvn	r6, #1
   11cd0:	mov	r0, r6
   11cd4:	sub	sp, fp, #16
   11cd8:	pop	{r4, r5, r6, r7, fp, pc}
   11cdc:	nop	{0}
	...
   11ce8:	muleq	r0, r0, r1
   11cec:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11cf0:	andeq	r9, r0, r1, ror r8
   11cf4:	andeq	r9, r0, fp, lsl r8

00011cf8 <btbb_pcap_close@@Base>:
   11cf8:	cmp	r0, #0
   11cfc:	mvneq	r0, #0
   11d00:	bxeq	lr
   11d04:	push	{r4, sl, fp, lr}
   11d08:	add	fp, sp, #8
   11d0c:	mov	r4, r0
   11d10:	ldr	r0, [r0]
   11d14:	cmp	r0, #0
   11d18:	beq	11d20 <btbb_pcap_close@@Base+0x28>
   11d1c:	bl	4778 <fclose@plt>
   11d20:	mov	r0, r4
   11d24:	bl	4550 <free@plt>
   11d28:	mov	r0, #0
   11d2c:	pop	{r4, sl, fp, pc}

00011d30 <btbb_pcap_dump@@Base>:
   11d30:	push	{r4, r5, r6, sl, fp, lr}
   11d34:	add	fp, sp, #16
   11d38:	mov	r6, r0
   11d3c:	mov	r4, r2
   11d40:	mov	r5, r1
   11d44:	mov	r0, r1
   11d48:	mov	r1, #16
   11d4c:	mov	r2, #1
   11d50:	mov	r3, r6
   11d54:	bl	45f8 <fwrite@plt>
   11d58:	ldr	r1, [r5, #8]
   11d5c:	mov	r0, r4
   11d60:	mov	r2, #1
   11d64:	mov	r3, r6
   11d68:	bl	45f8 <fwrite@plt>
   11d6c:	mov	r0, r6
   11d70:	pop	{r4, r5, r6, sl, fp, lr}
   11d74:	b	452c <fflush@plt>

00011d78 <btbb_pcap_append_packet@@Base>:
   11d78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d7c:	add	fp, sp, #28
   11d80:	sub	sp, sp, #468	; 0x1d4
   11d84:	mvn	r6, #0
   11d88:	cmp	r0, #0
   11d8c:	beq	11f3c <btbb_pcap_append_packet@@Base+0x1c4>
   11d90:	mov	r8, r0
   11d94:	ldr	r0, [r0]
   11d98:	cmp	r0, #0
   11d9c:	beq	11f3c <btbb_pcap_append_packet@@Base+0x1c4>
   11da0:	ldr	r6, [fp, #24]
   11da4:	ldr	r5, [fp, #16]
   11da8:	str	r2, [fp, #-484]	; 0xfffffe1c
   11dac:	str	r3, [fp, #-480]	; 0xfffffe20
   11db0:	mov	r0, r6
   11db4:	bl	4694 <btbb_packet_get_payload_length@plt>
   11db8:	mov	r7, r0
   11dbc:	add	r0, r0, #7
   11dc0:	str	sp, [fp, #-476]	; 0xfffffe24
   11dc4:	bic	r0, r0, #7
   11dc8:	sub	r1, sp, r0
   11dcc:	mov	sp, r1
   11dd0:	mov	r0, r6
   11dd4:	str	r1, [fp, #-496]	; 0xfffffe10
   11dd8:	bl	44fc <btbb_get_payload_packed@plt>
   11ddc:	mov	r0, r6
   11de0:	bl	47a8 <btbb_packet_get_channel@plt>
   11de4:	str	r0, [fp, #-488]	; 0xfffffe18
   11de8:	mov	r0, r6
   11dec:	bl	4568 <btbb_packet_get_ac_errors@plt>
   11df0:	str	r0, [fp, #-492]	; 0xfffffe14
   11df4:	mov	r0, r6
   11df8:	bl	470c <btbb_packet_get_transport@plt>
   11dfc:	mov	r4, r0
   11e00:	mov	r0, r6
   11e04:	bl	455c <btbb_packet_get_modulation@plt>
   11e08:	mov	sl, r0
   11e0c:	mov	r0, r6
   11e10:	bl	4748 <btbb_packet_get_lap@plt>
   11e14:	mov	r9, r0
   11e18:	mov	r0, r6
   11e1c:	bl	46d0 <btbb_packet_get_header_packed@plt>
   11e20:	ldr	r6, [fp, #20]
   11e24:	str	r0, [fp, #-440]	; 0xfffffe48
   11e28:	bic	r0, r5, #-16777216	; 0xff000000
   11e2c:	ldr	r2, [fp, #8]
   11e30:	ldr	r3, [fp, #12]
   11e34:	mvn	r1, #0
   11e38:	orr	r0, r0, r6, lsl #24
   11e3c:	cmp	r3, r2
   11e40:	str	r0, [fp, #-444]	; 0xfffffe44
   11e44:	orr	r0, sl, r4, lsl #4
   11e48:	str	r9, [fp, #-448]	; 0xfffffe40
   11e4c:	sub	r9, fp, #436	; 0x1b4
   11e50:	ldr	r4, [fp, #-484]	; 0xfffffe1c
   11e54:	movw	sl, #51712	; 0xca00
   11e58:	movt	sl, #15258	; 0x3b9a
   11e5c:	strb	r0, [fp, #-452]	; 0xfffffe3c
   11e60:	mov	r0, #3
   11e64:	movwlt	r0, #7
   11e68:	subs	r1, r5, r1
   11e6c:	movwne	r1, #1
   11e70:	orr	r0, r0, r1, lsl #4
   11e74:	subs	r1, r6, #255	; 0xff
   11e78:	mov	r6, #0
   11e7c:	movwne	r1, #1
   11e80:	cmp	r7, #400	; 0x190
   11e84:	orr	r5, r0, r1, lsl #7
   11e88:	ldr	r0, [fp, #-492]	; 0xfffffe14
   11e8c:	ldr	r1, [fp, #-480]	; 0xfffffe20
   11e90:	movcs	r7, #400	; 0x190
   11e94:	strh	r5, [r9]
   11e98:	strb	r0, [fp, #-453]	; 0xfffffe3b
   11e9c:	ldr	r0, [fp, #-488]	; 0xfffffe18
   11ea0:	strh	r6, [r9, #-14]
   11ea4:	strb	r6, [fp, #-451]	; 0xfffffe3d
   11ea8:	strb	r3, [fp, #-454]	; 0xfffffe3a
   11eac:	strb	r2, [fp, #-455]	; 0xfffffe39
   11eb0:	mov	r2, sl
   11eb4:	mov	r3, #0
   11eb8:	strb	r0, [fp, #-456]	; 0xfffffe38
   11ebc:	add	r0, r7, #22
   11ec0:	str	r0, [fp, #-460]	; 0xfffffe34
   11ec4:	str	r0, [fp, #-464]	; 0xfffffe30
   11ec8:	mov	r0, r4
   11ecc:	bl	13294 <lell_pcapng_close@@Base+0x28>
   11ed0:	mls	r1, r0, sl, r4
   11ed4:	cmp	r7, #0
   11ed8:	str	r1, [fp, #-468]	; 0xfffffe2c
   11edc:	str	r0, [fp, #-472]	; 0xfffffe28
   11ee0:	sub	r0, fp, #472	; 0x1d8
   11ee4:	add	sl, r0, #16
   11ee8:	beq	11f00 <btbb_pcap_append_packet@@Base+0x188>
   11eec:	ldr	r1, [fp, #-496]	; 0xfffffe10
   11ef0:	add	r0, r0, #38	; 0x26
   11ef4:	mov	r2, r7
   11ef8:	bl	4574 <memcpy@plt>
   11efc:	orr	r5, r5, #32
   11f00:	strh	r5, [r9]
   11f04:	sub	r0, fp, #472	; 0x1d8
   11f08:	mov	r1, #16
   11f0c:	mov	r2, #1
   11f10:	ldr	r4, [r8]
   11f14:	mov	r3, r4
   11f18:	bl	45f8 <fwrite@plt>
   11f1c:	ldr	r1, [fp, #-464]	; 0xfffffe30
   11f20:	mov	r0, sl
   11f24:	mov	r2, #1
   11f28:	mov	r3, r4
   11f2c:	bl	45f8 <fwrite@plt>
   11f30:	mov	r0, r4
   11f34:	bl	452c <fflush@plt>
   11f38:	ldr	sp, [fp, #-476]	; 0xfffffe24
   11f3c:	mov	r0, r6
   11f40:	sub	sp, fp, #28
   11f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f48:	nop	{0}
   11f4c:	nop	{0}

00011f50 <lell_pcap_create_file@@Base>:
   11f50:	push	{r4, r5, r6, r7, fp, lr}
   11f54:	add	fp, sp, #16
   11f58:	sub	sp, sp, #24
   11f5c:	mov	r7, r0
   11f60:	mov	r0, #12
   11f64:	mov	r4, r1
   11f68:	bl	464c <malloc@plt>
   11f6c:	cmp	r0, #0
   11f70:	beq	12000 <lell_pcap_create_file@@Base+0xb0>
   11f74:	mov	r5, #0
   11f78:	mov	r6, r0
   11f7c:	str	r5, [r0]
   11f80:	str	r5, [r0, #4]
   11f84:	str	r5, [r0, #8]
   11f88:	add	r0, pc, #160	; 0xa0
   11f8c:	vld1.64	{d16-d17}, [r0 :128]
   11f90:	mov	r0, sp
   11f94:	add	r0, r0, #8
   11f98:	vst1.32	{d16-d17}, [r0]
   11f9c:	movw	r0, #2
   11fa0:	movt	r0, #4
   11fa4:	str	r0, [sp, #4]
   11fa8:	movw	r0, #15437	; 0x3c4d
   11fac:	movt	r0, #41394	; 0xa1b2
   11fb0:	str	r0, [sp]
   11fb4:	mov	r0, r7
   11fb8:	ldr	r1, [pc, #128]	; 12040 <lell_pcap_create_file@@Base+0xf0>
   11fbc:	add	r1, pc, r1
   11fc0:	bl	4514 <fopen@plt>
   11fc4:	cmp	r0, #0
   11fc8:	beq	12010 <lell_pcap_create_file@@Base+0xc0>
   11fcc:	mov	r7, r0
   11fd0:	mov	r0, sp
   11fd4:	mov	r1, #24
   11fd8:	mov	r2, #1
   11fdc:	mov	r3, r7
   11fe0:	bl	45f8 <fwrite@plt>
   11fe4:	mov	r0, #256	; 0x100
   11fe8:	str	r7, [r6]
   11fec:	str	r0, [r6, #4]
   11ff0:	str	r6, [r4]
   11ff4:	mov	r0, r5
   11ff8:	sub	sp, fp, #16
   11ffc:	pop	{r4, r5, r6, r7, fp, pc}
   12000:	mvn	r5, #2
   12004:	mov	r0, r5
   12008:	sub	sp, fp, #16
   1200c:	pop	{r4, r5, r6, r7, fp, pc}
   12010:	mov	r0, r6
   12014:	bl	4550 <free@plt>
   12018:	mvn	r5, #1
   1201c:	mov	r0, r5
   12020:	sub	sp, fp, #16
   12024:	pop	{r4, r5, r6, r7, fp, pc}
   12028:	nop	{0}
   1202c:	nop	{0}
	...
   12038:	muleq	r0, r0, r1
   1203c:	andeq	r0, r0, r0, lsl #2
   12040:	andeq	r9, r0, r9, lsl #10
   12044:	nop	{0}
   12048:	nop	{0}
   1204c:	nop	{0}

00012050 <lell_pcap_ppi_create_file@@Base>:
   12050:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12054:	add	fp, sp, #24
   12058:	sub	sp, sp, #24
   1205c:	mov	r4, r0
   12060:	mov	r0, #12
   12064:	mov	r5, r2
   12068:	mov	r8, r1
   1206c:	bl	464c <malloc@plt>
   12070:	cmp	r0, #0
   12074:	beq	12108 <lell_pcap_ppi_create_file@@Base+0xb8>
   12078:	mov	r6, #0
   1207c:	mov	r7, r0
   12080:	str	r6, [r0]
   12084:	str	r6, [r0, #4]
   12088:	str	r6, [r0, #8]
   1208c:	add	r0, pc, #156	; 0x9c
   12090:	vld1.64	{d16-d17}, [r0 :128]
   12094:	mov	r0, sp
   12098:	add	r0, r0, #8
   1209c:	vst1.32	{d16-d17}, [r0]
   120a0:	movw	r0, #2
   120a4:	movt	r0, #4
   120a8:	str	r0, [sp, #4]
   120ac:	movw	r0, #15437	; 0x3c4d
   120b0:	movt	r0, #41394	; 0xa1b2
   120b4:	str	r0, [sp]
   120b8:	mov	r0, r4
   120bc:	ldr	r1, [pc, #124]	; 12140 <lell_pcap_ppi_create_file@@Base+0xf0>
   120c0:	add	r1, pc, r1
   120c4:	bl	4514 <fopen@plt>
   120c8:	cmp	r0, #0
   120cc:	beq	12118 <lell_pcap_ppi_create_file@@Base+0xc8>
   120d0:	mov	r4, r0
   120d4:	mov	r0, sp
   120d8:	mov	r1, #24
   120dc:	mov	r2, #1
   120e0:	mov	r3, r4
   120e4:	bl	45f8 <fwrite@plt>
   120e8:	mov	r0, #192	; 0xc0
   120ec:	str	r4, [r7]
   120f0:	str	r0, [r7, #4]
   120f4:	str	r7, [r5]
   120f8:	strb	r8, [r7, #8]
   120fc:	mov	r0, r6
   12100:	sub	sp, fp, #24
   12104:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12108:	mvn	r6, #2
   1210c:	mov	r0, r6
   12110:	sub	sp, fp, #24
   12114:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12118:	mov	r0, r7
   1211c:	bl	4550 <free@plt>
   12120:	mvn	r6, #1
   12124:	mov	r0, r6
   12128:	sub	sp, fp, #24
   1212c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
	...
   12138:	muleq	r0, r0, r1
   1213c:	andeq	r0, r0, r0, asr #1
   12140:	andeq	r9, r0, r5, lsl #8

00012144 <lell_pcap_append_packet@@Base>:
   12144:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12148:	add	fp, sp, #28
   1214c:	sub	sp, sp, #300	; 0x12c
   12150:	mvn	r4, #0
   12154:	cmp	r0, #0
   12158:	beq	12274 <lell_pcap_append_packet@@Base+0x130>
   1215c:	mov	r5, r0
   12160:	ldr	r0, [r0]
   12164:	cmp	r0, #0
   12168:	beq	12274 <lell_pcap_append_packet@@Base+0x130>
   1216c:	ldr	r0, [r5, #4]
   12170:	cmp	r0, #256	; 0x100
   12174:	bne	12274 <lell_pcap_append_packet@@Base+0x130>
   12178:	ldr	r4, [fp, #20]
   1217c:	ldr	sl, [fp, #16]
   12180:	mov	r6, r3
   12184:	mov	r7, r2
   12188:	mov	r0, r4
   1218c:	bl	4520 <lell_packet_is_data@plt>
   12190:	mov	r9, r0
   12194:	ldrb	r0, [r4, #69]	; 0x45
   12198:	ldr	r8, [r4, #72]	; 0x48
   1219c:	mov	r1, r6
   121a0:	mov	r3, #0
   121a4:	str	r0, [sp, #8]
   121a8:	ldr	r0, [r4, #92]	; 0x5c
   121ac:	str	sl, [sp, #32]
   121b0:	movw	sl, #51712	; 0xca00
   121b4:	mov	r4, #0
   121b8:	movt	sl, #15258	; 0x3b9a
   121bc:	mov	r2, sl
   121c0:	str	r0, [sp, #4]
   121c4:	mov	r0, r7
   121c8:	bl	13294 <lell_pcapng_close@@Base+0x28>
   121cc:	mls	r1, r0, sl, r7
   121d0:	ldr	r2, [fp, #8]
   121d4:	add	r6, sp, #12
   121d8:	str	r1, [sp, #16]
   121dc:	ldr	r1, [fp, #12]
   121e0:	strb	r1, [sp, #30]
   121e4:	cmp	r1, r2
   121e8:	clz	r1, r9
   121ec:	str	r0, [sp, #12]
   121f0:	mov	r0, #35	; 0x23
   121f4:	strb	r2, [sp, #29]
   121f8:	add	r2, r8, #9
   121fc:	movwlt	r0, #39	; 0x27
   12200:	lsr	r1, r1, #5
   12204:	cmp	r2, #255	; 0xff
   12208:	orr	r0, r0, r1, lsl #4
   1220c:	ldr	r1, [fp, #20]
   12210:	movcs	r2, #255	; 0xff
   12214:	strh	r0, [sp, #36]	; 0x24
   12218:	ldr	r0, [sp, #4]
   1221c:	strb	r0, [sp, #31]
   12220:	ldr	r0, [sp, #8]
   12224:	strb	r0, [sp, #28]
   12228:	add	r0, r8, #19
   1222c:	str	r0, [sp, #20]
   12230:	add	r0, r2, #10
   12234:	str	r0, [sp, #24]
   12238:	add	r0, r6, #26
   1223c:	bl	4574 <memcpy@plt>
   12240:	ldr	r5, [r5]
   12244:	mov	r0, r6
   12248:	mov	r1, #16
   1224c:	mov	r2, #1
   12250:	mov	r3, r5
   12254:	bl	45f8 <fwrite@plt>
   12258:	ldr	r1, [sp, #20]
   1225c:	add	r0, r6, #16
   12260:	mov	r2, #1
   12264:	mov	r3, r5
   12268:	bl	45f8 <fwrite@plt>
   1226c:	mov	r0, r5
   12270:	bl	452c <fflush@plt>
   12274:	mov	r0, r4
   12278:	sub	sp, fp, #28
   1227c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012280 <lell_pcap_append_ppi_packet@@Base>:
   12280:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12284:	add	fp, sp, #28
   12288:	sub	sp, sp, #300	; 0x12c
   1228c:	mvn	r4, #0
   12290:	cmp	r0, #0
   12294:	beq	123b8 <lell_pcap_append_ppi_packet@@Base+0x138>
   12298:	mov	r5, r0
   1229c:	ldr	r0, [r0]
   122a0:	cmp	r0, #0
   122a4:	beq	123b8 <lell_pcap_append_ppi_packet@@Base+0x138>
   122a8:	ldr	r0, [r5, #4]
   122ac:	cmp	r0, #192	; 0xc0
   122b0:	bne	123b8 <lell_pcap_append_ppi_packet@@Base+0x138>
   122b4:	movw	r9, #51712	; 0xca00
   122b8:	ldr	r8, [fp, #28]
   122bc:	ldr	sl, [fp, #8]
   122c0:	mov	r1, r3
   122c4:	mov	r7, r2
   122c8:	mov	r0, r2
   122cc:	mov	r3, #0
   122d0:	mov	r4, #0
   122d4:	movt	r9, #15258	; 0x3b9a
   122d8:	mov	r2, r9
   122dc:	bl	13294 <lell_pcapng_close@@Base+0x28>
   122e0:	mov	r6, r0
   122e4:	mov	r0, r8
   122e8:	bl	46dc <lell_get_channel_k@plt>
   122ec:	mls	r2, r6, r9, r7
   122f0:	ldr	r1, [r8, #72]	; 0x48
   122f4:	str	r6, [sp]
   122f8:	movw	r3, #2402	; 0x962
   122fc:	mov	r6, sp
   12300:	add	r0, r3, r0, lsl #1
   12304:	str	r2, [sp, #4]
   12308:	mov	r2, #147	; 0x93
   1230c:	str	r2, [sp, #20]
   12310:	movw	r2, #30006	; 0x7536
   12314:	movt	r2, #12
   12318:	str	r2, [sp, #24]
   1231c:	mov	r2, #1572864	; 0x180000
   12320:	str	r2, [sp, #16]
   12324:	add	r2, r1, #33	; 0x21
   12328:	str	r2, [sp, #12]
   1232c:	add	r2, r1, #9
   12330:	cmp	r2, #255	; 0xff
   12334:	movcs	r2, #255	; 0xff
   12338:	add	r1, r2, #24
   1233c:	str	r1, [sp, #8]
   12340:	ldrb	r1, [r5, #8]
   12344:	strb	sl, [sp, #31]
   12348:	strh	r0, [sp, #29]
   1234c:	strb	r1, [sp, #28]
   12350:	ldr	r1, [fp, #24]
   12354:	ldr	r0, [r8, #76]	; 0x4c
   12358:	strb	r1, [sp, #39]	; 0x27
   1235c:	ldr	r1, [fp, #20]
   12360:	strb	r1, [sp, #38]	; 0x26
   12364:	ldr	r1, [fp, #12]
   12368:	strb	r1, [sp, #37]	; 0x25
   1236c:	ldr	r1, [fp, #16]
   12370:	strb	r1, [sp, #36]	; 0x24
   12374:	str	r0, [sp, #32]
   12378:	add	r0, r6, #40	; 0x28
   1237c:	mov	r1, r8
   12380:	bl	4574 <memcpy@plt>
   12384:	ldr	r5, [r5]
   12388:	mov	r0, r6
   1238c:	mov	r1, #16
   12390:	mov	r2, #1
   12394:	mov	r3, r5
   12398:	bl	45f8 <fwrite@plt>
   1239c:	ldr	r1, [sp, #8]
   123a0:	add	r0, r6, #16
   123a4:	mov	r2, #1
   123a8:	mov	r3, r5
   123ac:	bl	45f8 <fwrite@plt>
   123b0:	mov	r0, r5
   123b4:	bl	452c <fflush@plt>
   123b8:	mov	r0, r4
   123bc:	sub	sp, fp, #28
   123c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000123c4 <lell_pcap_close@@Base>:
   123c4:	cmp	r0, #0
   123c8:	mvneq	r0, #0
   123cc:	bxeq	lr
   123d0:	push	{r4, sl, fp, lr}
   123d4:	add	fp, sp, #8
   123d8:	mov	r4, r0
   123dc:	ldr	r0, [r0]
   123e0:	cmp	r0, #0
   123e4:	beq	123ec <lell_pcap_close@@Base+0x28>
   123e8:	bl	4778 <fclose@plt>
   123ec:	mov	r0, r4
   123f0:	bl	4550 <free@plt>
   123f4:	mov	r0, #0
   123f8:	pop	{r4, sl, fp, pc}

000123fc <pcapng_create@@Base>:
   123fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12400:	add	fp, sp, #28
   12404:	sub	sp, sp, #4
   12408:	vpush	{d8-d9}
   1240c:	sub	sp, sp, #48	; 0x30
   12410:	mov	r7, r3
   12414:	mov	r8, r2
   12418:	mov	r5, r1
   1241c:	mov	r4, r0
   12420:	vmov.i32	q4, #0	; 0x00000000
   12424:	add	sl, r0, #4
   12428:	bl	46f4 <getpagesize@plt>
   1242c:	mov	r6, r0
   12430:	mov	r0, #0
   12434:	mov	r1, #194	; 0xc2
   12438:	mov	r2, #432	; 0x1b0
   1243c:	vst1.32	{d8-d9}, [sl]
   12440:	str	r0, [r4, #20]
   12444:	str	r0, [r4, #24]
   12448:	mov	r0, r5
   1244c:	bl	4670 <open@plt>
   12450:	mov	r9, #6
   12454:	cmn	r0, #1
   12458:	str	r0, [r4]
   1245c:	beq	12858 <pcapng_create@@Base+0x45c>
   12460:	ldr	r1, [pc, #1124]	; 128cc <pcapng_create@@Base+0x4d0>
   12464:	add	r1, pc, r1
   12468:	vld1.64	{d16-d17}, [r1]!
   1246c:	vldr	d18, [r1]
   12470:	add	r1, sp, #24
   12474:	mov	r2, r1
   12478:	vst1.64	{d16-d17}, [r2]!
   1247c:	vstr	d18, [r2]
   12480:	mov	r2, #24
   12484:	str	r2, [r4, #8]
   12488:	mov	r2, #24
   1248c:	bl	4760 <write@plt>
   12490:	cmn	r0, #1
   12494:	mov	r5, r0
   12498:	str	r6, [sp, #20]
   1249c:	cmpne	r8, #0
   124a0:	bne	124b8 <pcapng_create@@Base+0xbc>
   124a4:	ldr	r0, [r4, #8]
   124a8:	cmn	r5, #1
   124ac:	str	r0, [r4, #12]
   124b0:	bne	1257c <pcapng_create@@Base+0x180>
   124b4:	b	12858 <pcapng_create@@Base+0x45c>
   124b8:	ldrh	r0, [r8]
   124bc:	str	r7, [sp, #12]
   124c0:	str	sl, [sp, #16]
   124c4:	cmp	r0, #0
   124c8:	beq	12564 <pcapng_create@@Base+0x168>
   124cc:	ldr	r7, [pc, #1020]	; 128d0 <pcapng_create@@Base+0x4d4>
   124d0:	add	r7, pc, r7
   124d4:	ldrh	sl, [r8, #2]
   124d8:	cmp	sl, #0
   124dc:	beq	12564 <pcapng_create@@Base+0x168>
   124e0:	ldr	r0, [r4]
   124e4:	add	r2, sl, #4
   124e8:	mov	r1, r8
   124ec:	bl	4760 <write@plt>
   124f0:	movw	r1, #65532	; 0xfffc
   124f4:	mov	r5, r0
   124f8:	add	r0, sl, #3
   124fc:	movt	r1, #1
   12500:	and	r9, r0, r1
   12504:	subs	r0, r9, sl
   12508:	cmnne	r5, #1
   1250c:	beq	1253c <pcapng_create@@Base+0x140>
   12510:	sub	r0, sl, r9
   12514:	add	r6, r0, #1
   12518:	ldr	r0, [r4]
   1251c:	mov	r1, r7
   12520:	mov	r2, #1
   12524:	bl	4760 <write@plt>
   12528:	cmp	r6, #0
   1252c:	mov	r5, r0
   12530:	addne	r6, r6, #1
   12534:	cmnne	r5, #1
   12538:	bne	12518 <pcapng_create@@Base+0x11c>
   1253c:	ldr	r1, [r4, #8]
   12540:	add	r0, r9, #4
   12544:	cmn	r5, #1
   12548:	add	r1, r1, r0
   1254c:	str	r1, [r4, #8]
   12550:	beq	12840 <pcapng_create@@Base+0x444>
   12554:	add	r8, r8, r0
   12558:	ldrh	r0, [r8]
   1255c:	cmp	r0, #0
   12560:	bne	124d4 <pcapng_create@@Base+0xd8>
   12564:	ldr	r0, [r4, #8]
   12568:	ldr	sl, [sp, #16]
   1256c:	ldr	r6, [sp, #20]
   12570:	ldr	r7, [sp, #12]
   12574:	mov	r9, #6
   12578:	str	r0, [r4, #12]
   1257c:	add	r1, r7, r6
   12580:	add	r1, r1, r0
   12584:	add	r1, r1, #3
   12588:	udiv	r1, r1, r6
   1258c:	mul	r1, r1, r6
   12590:	subs	r7, r1, r0
   12594:	str	r1, [r4, #8]
   12598:	cmnne	r5, #1
   1259c:	beq	125cc <pcapng_create@@Base+0x1d0>
   125a0:	ldr	r6, [pc, #812]	; 128d4 <pcapng_create@@Base+0x4d8>
   125a4:	add	r6, pc, r6
   125a8:	ldr	r0, [r4]
   125ac:	mov	r1, r6
   125b0:	mov	r2, #1
   125b4:	bl	4760 <write@plt>
   125b8:	mov	r5, r0
   125bc:	subs	r7, r7, #1
   125c0:	cmnne	r5, #1
   125c4:	bne	125a8 <pcapng_create@@Base+0x1ac>
   125c8:	ldr	r1, [r4, #8]
   125cc:	ldr	r0, [r4]
   125d0:	mov	r2, #0
   125d4:	mov	r3, #1
   125d8:	stm	sp, {r0, r2}
   125dc:	mov	r0, #0
   125e0:	mov	r2, #3
   125e4:	bl	46c4 <mmap@plt>
   125e8:	cmn	r5, #1
   125ec:	str	r0, [r4, #4]
   125f0:	beq	12858 <pcapng_create@@Base+0x45c>
   125f4:	cmn	r0, #1
   125f8:	beq	12660 <pcapng_create@@Base+0x264>
   125fc:	ldr	r0, [fp, #12]
   12600:	ldr	r1, [fp, #8]
   12604:	mov	r2, #16
   12608:	str	r0, [sp, #36]	; 0x24
   1260c:	mov	r0, #0
   12610:	strh	r0, [sp, #34]	; 0x22
   12614:	strh	r1, [sp, #32]
   12618:	str	r0, [sp, #28]
   1261c:	mov	r0, #1
   12620:	add	r1, sp, #24
   12624:	str	r0, [sp, #24]
   12628:	mov	r0, #16
   1262c:	str	r0, [r4, #20]
   12630:	ldr	r0, [r4]
   12634:	bl	4760 <write@plt>
   12638:	cmn	r0, #1
   1263c:	mov	r5, r0
   12640:	ldrne	r6, [fp, #16]
   12644:	cmpne	r6, #0
   12648:	bne	12678 <pcapng_create@@Base+0x27c>
   1264c:	ldr	r0, [r4, #20]
   12650:	cmn	r5, #1
   12654:	str	r0, [r4, #24]
   12658:	bne	12730 <pcapng_create@@Base+0x334>
   1265c:	b	12858 <pcapng_create@@Base+0x45c>
   12660:	mov	r9, #7
   12664:	ldr	r0, [r4, #16]
   12668:	add	r1, r0, #1
   1266c:	cmp	r1, #2
   12670:	bcc	12868 <pcapng_create@@Base+0x46c>
   12674:	b	1289c <pcapng_create@@Base+0x4a0>
   12678:	ldrh	r0, [r6]
   1267c:	str	sl, [sp, #16]
   12680:	cmp	r0, #0
   12684:	beq	12720 <pcapng_create@@Base+0x324>
   12688:	ldr	sl, [pc, #584]	; 128d8 <pcapng_create@@Base+0x4dc>
   1268c:	movw	r8, #65532	; 0xfffc
   12690:	movt	r8, #1
   12694:	add	sl, pc, sl
   12698:	ldrh	r7, [r6, #2]
   1269c:	cmp	r7, #0
   126a0:	beq	12720 <pcapng_create@@Base+0x324>
   126a4:	ldr	r0, [r4]
   126a8:	add	r2, r7, #4
   126ac:	mov	r1, r6
   126b0:	bl	4760 <write@plt>
   126b4:	mov	r5, r0
   126b8:	add	r0, r7, #3
   126bc:	and	r9, r0, r8
   126c0:	subs	r0, r9, r7
   126c4:	cmnne	r5, #1
   126c8:	beq	126f8 <pcapng_create@@Base+0x2fc>
   126cc:	sub	r0, r7, r9
   126d0:	add	r7, r0, #1
   126d4:	ldr	r0, [r4]
   126d8:	mov	r1, sl
   126dc:	mov	r2, #1
   126e0:	bl	4760 <write@plt>
   126e4:	cmp	r7, #0
   126e8:	mov	r5, r0
   126ec:	addne	r7, r7, #1
   126f0:	cmnne	r5, #1
   126f4:	bne	126d4 <pcapng_create@@Base+0x2d8>
   126f8:	ldr	r1, [r4, #20]
   126fc:	add	r0, r9, #4
   12700:	cmn	r5, #1
   12704:	add	r1, r1, r0
   12708:	str	r1, [r4, #20]
   1270c:	beq	12848 <pcapng_create@@Base+0x44c>
   12710:	add	r6, r6, r0
   12714:	ldrh	r0, [r6]
   12718:	cmp	r0, #0
   1271c:	bne	12698 <pcapng_create@@Base+0x29c>
   12720:	ldr	r0, [r4, #20]
   12724:	ldr	sl, [sp, #16]
   12728:	mov	r9, #6
   1272c:	str	r0, [r4, #24]
   12730:	ldr	r1, [fp, #20]
   12734:	ldr	r2, [sp, #20]
   12738:	add	r1, r1, r2
   1273c:	add	r1, r1, r0
   12740:	add	r1, r1, #3
   12744:	udiv	r1, r1, r2
   12748:	mul	r1, r1, r2
   1274c:	subs	r7, r1, r0
   12750:	str	r1, [r4, #20]
   12754:	beq	12784 <pcapng_create@@Base+0x388>
   12758:	ldr	r6, [pc, #380]	; 128dc <pcapng_create@@Base+0x4e0>
   1275c:	add	r6, pc, r6
   12760:	ldr	r0, [r4]
   12764:	mov	r1, r6
   12768:	mov	r2, #1
   1276c:	bl	4760 <write@plt>
   12770:	mov	r5, r0
   12774:	subs	r7, r7, #1
   12778:	cmnne	r5, #1
   1277c:	bne	12760 <pcapng_create@@Base+0x364>
   12780:	ldr	r1, [r4, #20]
   12784:	ldr	r0, [r4]
   12788:	ldr	r2, [r4, #8]
   1278c:	mov	r3, #1
   12790:	stm	sp, {r0, r2}
   12794:	mov	r0, #0
   12798:	mov	r2, #3
   1279c:	bl	46c4 <mmap@plt>
   127a0:	cmn	r5, #1
   127a4:	str	r0, [r4, #16]
   127a8:	beq	12858 <pcapng_create@@Base+0x45c>
   127ac:	cmn	r0, #1
   127b0:	mov	r9, #7
   127b4:	beq	12858 <pcapng_create@@Base+0x45c>
   127b8:	ldmib	r4, {r0, r1, r2}
   127bc:	ldr	r3, [pc, #284]	; 128e0 <pcapng_create@@Base+0x4e4>
   127c0:	sub	r1, r1, r2
   127c4:	mov	r9, #0
   127c8:	sub	r1, r1, #12
   127cc:	add	r3, pc, r3
   127d0:	strh	r1, [r3, #2]
   127d4:	ldr	r1, [pc, #264]	; 128e4 <pcapng_create@@Base+0x4e8>
   127d8:	ldr	r1, [pc, r1]
   127dc:	str	r1, [r0, r2]
   127e0:	ldmib	r4, {r0, r1}
   127e4:	bic	r2, r1, #3
   127e8:	str	r1, [r0, #4]
   127ec:	add	r0, r2, r0
   127f0:	add	r2, r4, #16
   127f4:	str	r1, [r0, #-4]
   127f8:	ldm	r2, {r0, r1, r2}
   127fc:	sub	r1, r1, r2
   12800:	sub	r1, r1, #12
   12804:	strh	r1, [r3, #2]
   12808:	ldr	r1, [pc, #216]	; 128e8 <pcapng_create@@Base+0x4ec>
   1280c:	ldr	r1, [pc, r1]
   12810:	str	r1, [r0, r2]
   12814:	ldr	r1, [r4, #20]
   12818:	ldr	r0, [r4, #16]
   1281c:	bic	r2, r1, #3
   12820:	str	r1, [r0, #4]
   12824:	add	r0, r2, r0
   12828:	str	r1, [r0, #-4]
   1282c:	ldr	r0, [r4, #4]
   12830:	ldr	r1, [r4, #20]
   12834:	str	r9, [r0, #20]
   12838:	str	r1, [r0, #16]
   1283c:	b	12888 <pcapng_create@@Base+0x48c>
   12840:	str	r1, [r4, #12]
   12844:	b	12850 <pcapng_create@@Base+0x454>
   12848:	ldr	r0, [r4, #20]
   1284c:	str	r0, [r4, #24]
   12850:	ldr	sl, [sp, #16]
   12854:	mov	r9, #6
   12858:	ldr	r0, [r4, #16]
   1285c:	add	r1, r0, #1
   12860:	cmp	r1, #2
   12864:	bcs	1289c <pcapng_create@@Base+0x4a0>
   12868:	ldr	r0, [sl]
   1286c:	add	r1, r0, #1
   12870:	cmp	r1, #2
   12874:	bcs	128b4 <pcapng_create@@Base+0x4b8>
   12878:	ldr	r0, [r4]
   1287c:	cmn	r0, #1
   12880:	beq	12888 <pcapng_create@@Base+0x48c>
   12884:	bl	47f0 <close@plt>
   12888:	mov	r0, r9
   1288c:	sub	sp, fp, #48	; 0x30
   12890:	vpop	{d8-d9}
   12894:	add	sp, sp, #4
   12898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1289c:	ldr	r1, [r4, #20]
   128a0:	bl	4790 <munmap@plt>
   128a4:	ldr	r0, [sl]
   128a8:	add	r1, r0, #1
   128ac:	cmp	r1, #2
   128b0:	bcc	12878 <pcapng_create@@Base+0x47c>
   128b4:	ldr	r1, [r4, #8]
   128b8:	bl	4790 <munmap@plt>
   128bc:	ldr	r0, [r4]
   128c0:	cmn	r0, #1
   128c4:	bne	12884 <pcapng_create@@Base+0x488>
   128c8:	b	12888 <pcapng_create@@Base+0x48c>
   128cc:	andeq	r9, r0, r4, ror r0
   128d0:	andeq	r9, r0, r0, lsr #32
   128d4:	andeq	r8, r0, ip, asr #30
   128d8:	andeq	r8, r0, ip, asr lr
   128dc:	muleq	r0, r4, sp
   128e0:	andeq	sl, r1, r0, ror r9
   128e4:	andeq	sl, r1, r4, ror #18
   128e8:	andeq	sl, r1, r0, lsr r9

000128ec <pcapng_close@@Base>:
   128ec:	push	{r4, sl, fp, lr}
   128f0:	add	fp, sp, #8
   128f4:	mov	r4, r0
   128f8:	ldr	r0, [r0, #16]
   128fc:	add	r1, r0, #1
   12900:	cmp	r1, #2
   12904:	bcs	12930 <pcapng_close@@Base+0x44>
   12908:	ldr	r0, [r4, #4]
   1290c:	add	r1, r0, #1
   12910:	cmp	r1, #2
   12914:	bcs	12948 <pcapng_close@@Base+0x5c>
   12918:	ldr	r0, [r4]
   1291c:	cmn	r0, #1
   12920:	beq	12928 <pcapng_close@@Base+0x3c>
   12924:	bl	47f0 <close@plt>
   12928:	mov	r0, #0
   1292c:	pop	{r4, sl, fp, pc}
   12930:	ldr	r1, [r4, #20]
   12934:	bl	4790 <munmap@plt>
   12938:	ldr	r0, [r4, #4]
   1293c:	add	r1, r0, #1
   12940:	cmp	r1, #2
   12944:	bcc	12918 <pcapng_close@@Base+0x2c>
   12948:	ldr	r1, [r4, #8]
   1294c:	bl	4790 <munmap@plt>
   12950:	ldr	r0, [r4]
   12954:	cmn	r0, #1
   12958:	bne	12924 <pcapng_close@@Base+0x38>
   1295c:	b	12928 <pcapng_close@@Base+0x3c>

00012960 <pcapng_append_section_option@@Base>:
   12960:	push	{r4, r5, fp, lr}
   12964:	add	fp, sp, #8
   12968:	mov	r4, r0
   1296c:	mov	r0, #1
   12970:	cmp	r4, #0
   12974:	beq	129a8 <pcapng_append_section_option@@Base+0x48>
   12978:	ldr	r2, [r4]
   1297c:	cmn	r2, #1
   12980:	beq	129a8 <pcapng_append_section_option@@Base+0x48>
   12984:	ldr	r2, [r4, #4]
   12988:	mov	r0, #5
   1298c:	add	r3, r2, #1
   12990:	cmp	r3, #2
   12994:	popcc	{r4, r5, fp, pc}
   12998:	cmp	r1, #0
   1299c:	ldrne	r3, [r4, #12]
   129a0:	cmpne	r3, #0
   129a4:	bne	129ac <pcapng_append_section_option@@Base+0x4c>
   129a8:	pop	{r4, r5, fp, pc}
   129ac:	ldrh	r5, [r1, #2]
   129b0:	add	r0, r2, r3
   129b4:	add	r2, r5, #4
   129b8:	bl	4574 <memcpy@plt>
   129bc:	add	r3, r5, #7
   129c0:	ldmib	r4, {r0, r1, r2}
   129c4:	bic	r3, r3, #3
   129c8:	add	r2, r3, r2
   129cc:	str	r2, [r4, #12]
   129d0:	sub	r1, r1, r2
   129d4:	ldr	r3, [pc, #28]	; 129f8 <pcapng_append_section_option@@Base+0x98>
   129d8:	sub	r1, r1, #12
   129dc:	add	r3, pc, r3
   129e0:	strh	r1, [r3, #2]
   129e4:	ldr	r1, [pc, #16]	; 129fc <pcapng_append_section_option@@Base+0x9c>
   129e8:	ldr	r1, [pc, r1]
   129ec:	str	r1, [r0, r2]
   129f0:	mov	r0, #0
   129f4:	pop	{r4, r5, fp, pc}
   129f8:	andeq	sl, r1, r0, ror #14
   129fc:	andeq	sl, r1, r4, asr r7

00012a00 <pcapng_append_interface_option@@Base>:
   12a00:	push	{r4, r5, fp, lr}
   12a04:	add	fp, sp, #8
   12a08:	mov	r4, r0
   12a0c:	mov	r0, #1
   12a10:	cmp	r4, #0
   12a14:	beq	12a48 <pcapng_append_interface_option@@Base+0x48>
   12a18:	ldr	r2, [r4]
   12a1c:	cmn	r2, #1
   12a20:	beq	12a48 <pcapng_append_interface_option@@Base+0x48>
   12a24:	ldr	r2, [r4, #16]
   12a28:	mov	r0, #5
   12a2c:	add	r3, r2, #1
   12a30:	cmp	r3, #2
   12a34:	popcc	{r4, r5, fp, pc}
   12a38:	cmp	r1, #0
   12a3c:	ldrne	r3, [r4, #24]
   12a40:	cmpne	r3, #0
   12a44:	bne	12a4c <pcapng_append_interface_option@@Base+0x4c>
   12a48:	pop	{r4, r5, fp, pc}
   12a4c:	ldrh	r5, [r1, #2]
   12a50:	add	r0, r2, r3
   12a54:	add	r2, r5, #4
   12a58:	bl	4574 <memcpy@plt>
   12a5c:	add	r3, r5, #7
   12a60:	add	r2, r4, #16
   12a64:	bic	r3, r3, #3
   12a68:	ldm	r2, {r0, r1, r2}
   12a6c:	add	r2, r3, r2
   12a70:	str	r2, [r4, #24]
   12a74:	sub	r1, r1, r2
   12a78:	ldr	r3, [pc, #28]	; 12a9c <pcapng_append_interface_option@@Base+0x9c>
   12a7c:	sub	r1, r1, #12
   12a80:	add	r3, pc, r3
   12a84:	strh	r1, [r3, #2]
   12a88:	ldr	r1, [pc, #16]	; 12aa0 <pcapng_append_interface_option@@Base+0xa0>
   12a8c:	ldr	r1, [pc, r1]
   12a90:	str	r1, [r0, r2]
   12a94:	mov	r0, #0
   12a98:	pop	{r4, r5, fp, pc}
   12a9c:			; <UNDEFINED> instruction: 0x0001a6bc
   12aa0:			; <UNDEFINED> instruction: 0x0001a6b0

00012aa4 <pcapng_append_packet@@Base>:
   12aa4:	push	{r4, r5, fp, lr}
   12aa8:	add	fp, sp, #8
   12aac:	mov	r4, r0
   12ab0:	mov	r0, #1
   12ab4:	cmp	r4, #0
   12ab8:	beq	12b04 <pcapng_append_packet@@Base+0x60>
   12abc:	ldr	r2, [r4]
   12ac0:	cmn	r2, #1
   12ac4:	beq	12b04 <pcapng_append_packet@@Base+0x60>
   12ac8:	ldr	r5, [r1, #4]
   12acc:	mov	r0, r2
   12ad0:	mov	r2, r5
   12ad4:	bl	4760 <write@plt>
   12ad8:	mov	r1, r0
   12adc:	mov	r0, #0
   12ae0:	cmn	r1, #1
   12ae4:	beq	12b04 <pcapng_append_packet@@Base+0x60>
   12ae8:	ldr	r1, [r4, #4]
   12aec:	ldr	r2, [r1, #16]
   12af0:	ldr	r3, [r1, #20]
   12af4:	adds	r2, r2, r5
   12af8:	str	r2, [r1, #16]
   12afc:	adc	r2, r3, #0
   12b00:	str	r2, [r1, #20]
   12b04:	pop	{r4, r5, fp, pc}

00012b08 <btbb_pcapng_create_file@@Base>:
   12b08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b0c:	add	fp, sp, #24
   12b10:	sub	sp, sp, #288	; 0x120
   12b14:	mov	r6, r0
   12b18:	mov	r0, #28
   12b1c:	mov	r8, r2
   12b20:	mov	r7, r1
   12b24:	bl	464c <malloc@plt>
   12b28:	cmp	r0, #0
   12b2c:	beq	12bcc <btbb_pcapng_create_file@@Base+0xc4>
   12b30:	add	r9, sp, #16
   12b34:	mov	r4, r0
   12b38:	mov	r1, #0
   12b3c:	movw	r2, #258	; 0x102
   12b40:	mov	r5, #0
   12b44:	orr	r0, r9, #2
   12b48:	bl	4718 <memset@plt>
   12b4c:	mov	r0, #3
   12b50:	cmp	r7, #0
   12b54:	strh	r0, [sp, #16]
   12b58:	beq	12b80 <btbb_pcapng_create_file@@Base+0x78>
   12b5c:	add	r0, r9, #4
   12b60:	mov	r1, r7
   12b64:	mov	r2, #256	; 0x100
   12b68:	bl	4730 <strncpy@plt>
   12b6c:	mov	r1, #0
   12b70:	strb	r1, [sp, #275]	; 0x113
   12b74:	bl	46ac <strlen@plt>
   12b78:	mov	r5, r9
   12b7c:	strh	r0, [sp, #18]
   12b80:	bl	46f4 <getpagesize@plt>
   12b84:	mov	r3, r0
   12b88:	mov	r1, #255	; 0xff
   12b8c:	mov	r0, #400	; 0x190
   12b90:	str	r1, [sp]
   12b94:	stmib	sp, {r0, r5}
   12b98:	str	r3, [sp, #12]
   12b9c:	mov	r0, r4
   12ba0:	mov	r1, r6
   12ba4:	ldr	r2, [pc, #184]	; 12c64 <btbb_pcapng_create_file@@Base+0x15c>
   12ba8:	ldr	r2, [pc, r2]
   12bac:	bl	45b0 <pcapng_create@plt>
   12bb0:	mov	r6, r0
   12bb4:	cmp	r0, #0
   12bb8:	bne	12c40 <btbb_pcapng_create_file@@Base+0x138>
   12bbc:	cmp	r5, #0
   12bc0:	beq	12c04 <btbb_pcapng_create_file@@Base+0xfc>
   12bc4:	ldrh	r0, [r5]
   12bc8:	b	12bf4 <btbb_pcapng_create_file@@Base+0xec>
   12bcc:	mvn	r0, #4
   12bd0:	sub	sp, fp, #24
   12bd4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12bd8:	uxth	r0, r0
   12bdc:	cmp	r0, #9
   12be0:	beq	12c54 <btbb_pcapng_create_file@@Base+0x14c>
   12be4:	add	r0, r1, #3
   12be8:	bic	r0, r0, #3
   12bec:	add	r5, r0, r5
   12bf0:	ldrh	r0, [r5, #4]!
   12bf4:	cmp	r0, #0
   12bf8:	ldrhne	r1, [r5, #2]
   12bfc:	cmpne	r1, #0
   12c00:	bne	12bd8 <btbb_pcapng_create_file@@Base+0xd0>
   12c04:	ldr	r0, [pc, #92]	; 12c68 <btbb_pcapng_create_file@@Base+0x160>
   12c08:	sub	r1, fp, #36	; 0x24
   12c0c:	ldr	r0, [pc, r0]
   12c10:	str	r0, [fp, #-36]	; 0xffffffdc
   12c14:	ldr	r0, [pc, #80]	; 12c6c <btbb_pcapng_create_file@@Base+0x164>
   12c18:	add	r0, pc, r0
   12c1c:	ldrb	r0, [r0, #4]
   12c20:	strb	r0, [fp, #-32]	; 0xffffffe0
   12c24:	mov	r0, r4
   12c28:	bl	4544 <pcapng_append_interface_option@plt>
   12c2c:	cmp	r0, #0
   12c30:	beq	12c54 <btbb_pcapng_create_file@@Base+0x14c>
   12c34:	mov	r6, r0
   12c38:	mov	r0, r4
   12c3c:	bl	47cc <pcapng_close@plt>
   12c40:	mov	r0, r4
   12c44:	bl	4550 <free@plt>
   12c48:	rsb	r0, r6, #0
   12c4c:	sub	sp, fp, #24
   12c50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12c54:	str	r4, [r8]
   12c58:	mov	r0, #0
   12c5c:	sub	sp, fp, #24
   12c60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12c64:	andeq	sl, r1, r8, lsl #11
   12c68:	strdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   12c6c:	andeq	r8, r0, ip, ror #17

00012c70 <btbb_pcapng_append_packet@@Base>:
   12c70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c74:	add	fp, sp, #28
   12c78:	sub	sp, sp, #484	; 0x1e4
   12c7c:	ldr	r8, [fp, #24]
   12c80:	str	r0, [fp, #-488]	; 0xfffffe18
   12c84:	sub	r4, fp, #436	; 0x1b4
   12c88:	str	r3, [fp, #-492]	; 0xfffffe14
   12c8c:	str	r2, [fp, #-496]	; 0xfffffe10
   12c90:	mov	r0, r8
   12c94:	bl	4694 <btbb_packet_get_payload_length@plt>
   12c98:	mov	r5, r0
   12c9c:	add	r0, r0, #7
   12ca0:	bic	r0, r0, #7
   12ca4:	sub	r1, sp, r0
   12ca8:	mov	sp, r1
   12cac:	mov	r0, r8
   12cb0:	str	r1, [fp, #-508]	; 0xfffffe04
   12cb4:	bl	44fc <btbb_get_payload_packed@plt>
   12cb8:	mov	r0, r8
   12cbc:	bl	47a8 <btbb_packet_get_channel@plt>
   12cc0:	str	r0, [fp, #-500]	; 0xfffffe0c
   12cc4:	mov	r0, r8
   12cc8:	bl	4568 <btbb_packet_get_ac_errors@plt>
   12ccc:	str	r0, [fp, #-504]	; 0xfffffe08
   12cd0:	mov	r0, r8
   12cd4:	bl	470c <btbb_packet_get_transport@plt>
   12cd8:	mov	r9, r0
   12cdc:	mov	r0, r8
   12ce0:	bl	455c <btbb_packet_get_modulation@plt>
   12ce4:	mov	sl, r0
   12ce8:	mov	r0, r8
   12cec:	bl	4748 <btbb_packet_get_lap@plt>
   12cf0:	mov	r7, r0
   12cf4:	mov	r0, r8
   12cf8:	bl	46d0 <btbb_packet_get_header_packed@plt>
   12cfc:	str	r0, [fp, #-440]	; 0xfffffe48
   12d00:	ldr	r0, [fp, #16]
   12d04:	ldr	r2, [fp, #20]
   12d08:	ldr	r3, [fp, #12]
   12d0c:	mvn	r6, #0
   12d10:	mov	r8, #0
   12d14:	bic	r1, r0, #-16777216	; 0xff000000
   12d18:	orr	r1, r1, r2, lsl #24
   12d1c:	str	r1, [fp, #-444]	; 0xfffffe44
   12d20:	ldr	r1, [fp, #8]
   12d24:	str	r7, [fp, #-448]	; 0xfffffe40
   12d28:	mov	r7, #3
   12d2c:	cmp	r3, r1
   12d30:	movwlt	r7, #7
   12d34:	subs	r0, r0, r6
   12d38:	movwne	r0, #1
   12d3c:	subs	r2, r2, #255	; 0xff
   12d40:	orr	r0, r7, r0, lsl #4
   12d44:	movwne	r2, #1
   12d48:	cmp	r5, #400	; 0x190
   12d4c:	movge	r5, #400	; 0x190
   12d50:	orr	r7, r0, r2, lsl #7
   12d54:	orr	r0, sl, r9, lsl #4
   12d58:	mov	r9, r4
   12d5c:	cmp	r5, #0
   12d60:	strh	r7, [r4]
   12d64:	strb	r0, [fp, #-452]	; 0xfffffe3c
   12d68:	ldr	r0, [fp, #-504]	; 0xfffffe08
   12d6c:	strh	r8, [r4, #-14]
   12d70:	strb	r8, [fp, #-451]	; 0xfffffe3d
   12d74:	add	r4, r5, #61	; 0x3d
   12d78:	bic	r6, r4, #3
   12d7c:	strb	r0, [fp, #-453]	; 0xfffffe3b
   12d80:	ldr	r0, [fp, #-500]	; 0xfffffe0c
   12d84:	strb	r3, [fp, #-454]	; 0xfffffe3a
   12d88:	strb	r1, [fp, #-455]	; 0xfffffe39
   12d8c:	strb	r0, [fp, #-456]	; 0xfffffe38
   12d90:	add	r0, r5, #22
   12d94:	str	r0, [fp, #-460]	; 0xfffffe34
   12d98:	str	r0, [fp, #-464]	; 0xfffffe30
   12d9c:	ldr	r0, [fp, #-496]	; 0xfffffe10
   12da0:	str	r0, [fp, #-468]	; 0xfffffe2c
   12da4:	ldr	r0, [fp, #-492]	; 0xfffffe14
   12da8:	str	r0, [fp, #-472]	; 0xfffffe28
   12dac:	mov	r0, #6
   12db0:	str	r8, [fp, #-476]	; 0xfffffe24
   12db4:	str	r6, [fp, #-480]	; 0xfffffe20
   12db8:	str	r0, [fp, #-484]	; 0xfffffe1c
   12dbc:	beq	12de0 <btbb_pcapng_append_packet@@Base+0x170>
   12dc0:	cmp	r5, #400	; 0x190
   12dc4:	bhi	12e0c <btbb_pcapng_append_packet@@Base+0x19c>
   12dc8:	ldr	r1, [fp, #-508]	; 0xfffffe04
   12dcc:	sub	r0, fp, #484	; 0x1e4
   12dd0:	mov	r2, r5
   12dd4:	add	r0, r0, #50	; 0x32
   12dd8:	bl	4574 <memcpy@plt>
   12ddc:	orr	r7, r7, #32
   12de0:	lsr	r0, r4, #2
   12de4:	sub	r1, fp, #484	; 0x1e4
   12de8:	strh	r7, [r9]
   12dec:	add	r0, r1, r0, lsl #2
   12df0:	str	r8, [r0, #-8]
   12df4:	str	r6, [r0, #-4]
   12df8:	ldr	r0, [fp, #-488]	; 0xfffffe18
   12dfc:	bl	4700 <pcapng_append_packet@plt>
   12e00:	rsb	r0, r0, #0
   12e04:	sub	sp, fp, #28
   12e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e0c:	ldr	r0, [pc, #24]	; 12e2c <btbb_pcapng_append_packet@@Base+0x1bc>
   12e10:	ldr	r1, [pc, #24]	; 12e30 <btbb_pcapng_append_packet@@Base+0x1c0>
   12e14:	ldr	r3, [pc, #24]	; 12e34 <btbb_pcapng_append_packet@@Base+0x1c4>
   12e18:	mov	r2, #221	; 0xdd
   12e1c:	add	r0, pc, r0
   12e20:	add	r1, pc, r1
   12e24:	add	r3, pc, r3
   12e28:	bl	47fc <__assert_fail@plt>
   12e2c:	andeq	r8, r0, sp, ror #13
   12e30:	andeq	r8, r0, lr, lsl r7
   12e34:	andeq	r8, r0, r7, ror #14

00012e38 <btbb_pcapng_record_bdaddr@@Base>:
   12e38:	push	{fp, lr}
   12e3c:	mov	fp, sp
   12e40:	sub	sp, sp, #16
   12e44:	movw	r1, #54080	; 0xd340
   12e48:	strb	r3, [sp, #12]
   12e4c:	strb	r2, [sp, #8]
   12e50:	movt	r1, #12
   12e54:	str	r1, [sp, #4]
   12e58:	lsr	r1, r3, #8
   12e5c:	strb	r1, [sp, #13]
   12e60:	lsr	r1, r2, #24
   12e64:	strb	r1, [sp, #11]
   12e68:	lsr	r1, r2, #16
   12e6c:	strb	r1, [sp, #10]
   12e70:	lsr	r1, r2, #8
   12e74:	strb	r1, [sp, #9]
   12e78:	ldr	r1, [fp, #12]
   12e7c:	strb	r1, [sp, #15]
   12e80:	ldr	r1, [fp, #8]
   12e84:	strb	r1, [sp, #14]
   12e88:	add	r1, sp, #4
   12e8c:	bl	4544 <pcapng_append_interface_option@plt>
   12e90:	rsb	r0, r0, #0
   12e94:	mov	sp, fp
   12e98:	pop	{fp, pc}

00012e9c <btbb_pcapng_record_btclock@@Base>:
   12e9c:	push	{fp, lr}
   12ea0:	mov	fp, sp
   12ea4:	sub	sp, sp, #24
   12ea8:	movw	r1, #54081	; 0xd341
   12eac:	str	r2, [sp, #12]
   12eb0:	movt	r1, #24
   12eb4:	str	r1, [sp]
   12eb8:	ldr	r1, [fp, #12]
   12ebc:	str	r1, [sp, #8]
   12ec0:	ldr	r1, [fp, #8]
   12ec4:	str	r1, [sp, #4]
   12ec8:	ldr	r1, [fp, #20]
   12ecc:	str	r1, [sp, #20]
   12ed0:	ldr	r1, [fp, #16]
   12ed4:	str	r1, [sp, #16]
   12ed8:	mov	r1, sp
   12edc:	bl	4544 <pcapng_append_interface_option@plt>
   12ee0:	rsb	r0, r0, #0
   12ee4:	mov	sp, fp
   12ee8:	pop	{fp, pc}

00012eec <btbb_pcapng_close@@Base>:
   12eec:	push	{r4, sl, fp, lr}
   12ef0:	add	fp, sp, #8
   12ef4:	mov	r4, r0
   12ef8:	bl	47cc <pcapng_close@plt>
   12efc:	cmp	r4, #0
   12f00:	beq	12f0c <btbb_pcapng_close@@Base+0x20>
   12f04:	mov	r0, r4
   12f08:	bl	4550 <free@plt>
   12f0c:	mvn	r0, #0
   12f10:	pop	{r4, sl, fp, pc}

00012f14 <lell_pcapng_create_file@@Base>:
   12f14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12f18:	add	fp, sp, #24
   12f1c:	sub	sp, sp, #288	; 0x120
   12f20:	mov	r6, r0
   12f24:	mov	r0, #28
   12f28:	mov	r8, r2
   12f2c:	mov	r7, r1
   12f30:	bl	464c <malloc@plt>
   12f34:	cmp	r0, #0
   12f38:	beq	12fd8 <lell_pcapng_create_file@@Base+0xc4>
   12f3c:	add	r9, sp, #16
   12f40:	mov	r4, r0
   12f44:	mov	r1, #0
   12f48:	movw	r2, #258	; 0x102
   12f4c:	mov	r5, #0
   12f50:	orr	r0, r9, #2
   12f54:	bl	4718 <memset@plt>
   12f58:	mov	r0, #3
   12f5c:	cmp	r7, #0
   12f60:	strh	r0, [sp, #16]
   12f64:	beq	12f8c <lell_pcapng_create_file@@Base+0x78>
   12f68:	add	r0, r9, #4
   12f6c:	mov	r1, r7
   12f70:	mov	r2, #256	; 0x100
   12f74:	bl	4730 <strncpy@plt>
   12f78:	mov	r1, #0
   12f7c:	strb	r1, [sp, #275]	; 0x113
   12f80:	bl	46ac <strlen@plt>
   12f84:	mov	r5, r9
   12f88:	strh	r0, [sp, #18]
   12f8c:	bl	46f4 <getpagesize@plt>
   12f90:	mov	r3, r0
   12f94:	mov	r1, #256	; 0x100
   12f98:	mov	r0, #64	; 0x40
   12f9c:	str	r1, [sp]
   12fa0:	stmib	sp, {r0, r5}
   12fa4:	str	r3, [sp, #12]
   12fa8:	mov	r0, r4
   12fac:	mov	r1, r6
   12fb0:	ldr	r2, [pc, #184]	; 13070 <lell_pcapng_create_file@@Base+0x15c>
   12fb4:	ldr	r2, [pc, r2]
   12fb8:	bl	45b0 <pcapng_create@plt>
   12fbc:	mov	r6, r0
   12fc0:	cmp	r0, #0
   12fc4:	bne	1304c <lell_pcapng_create_file@@Base+0x138>
   12fc8:	cmp	r5, #0
   12fcc:	beq	13010 <lell_pcapng_create_file@@Base+0xfc>
   12fd0:	ldrh	r0, [r5]
   12fd4:	b	13000 <lell_pcapng_create_file@@Base+0xec>
   12fd8:	mvn	r0, #4
   12fdc:	sub	sp, fp, #24
   12fe0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12fe4:	uxth	r0, r0
   12fe8:	cmp	r0, #9
   12fec:	beq	13060 <lell_pcapng_create_file@@Base+0x14c>
   12ff0:	add	r0, r1, #3
   12ff4:	bic	r0, r0, #3
   12ff8:	add	r5, r0, r5
   12ffc:	ldrh	r0, [r5, #4]!
   13000:	cmp	r0, #0
   13004:	ldrhne	r1, [r5, #2]
   13008:	cmpne	r1, #0
   1300c:	bne	12fe4 <lell_pcapng_create_file@@Base+0xd0>
   13010:	ldr	r0, [pc, #92]	; 13074 <lell_pcapng_create_file@@Base+0x160>
   13014:	sub	r1, fp, #36	; 0x24
   13018:	ldr	r0, [pc, r0]
   1301c:	str	r0, [fp, #-36]	; 0xffffffdc
   13020:	ldr	r0, [pc, #80]	; 13078 <lell_pcapng_create_file@@Base+0x164>
   13024:	add	r0, pc, r0
   13028:	ldrb	r0, [r0, #4]
   1302c:	strb	r0, [fp, #-32]	; 0xffffffe0
   13030:	mov	r0, r4
   13034:	bl	4544 <pcapng_append_interface_option@plt>
   13038:	cmp	r0, #0
   1303c:	beq	13060 <lell_pcapng_create_file@@Base+0x14c>
   13040:	mov	r6, r0
   13044:	mov	r0, r4
   13048:	bl	47cc <pcapng_close@plt>
   1304c:	mov	r0, r4
   13050:	bl	4550 <free@plt>
   13054:	rsb	r0, r6, #0
   13058:	sub	sp, fp, #24
   1305c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13060:	str	r4, [r8]
   13064:	mov	r0, #0
   13068:	sub	sp, fp, #24
   1306c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13070:	andeq	sl, r1, ip, ror r1
   13074:	andeq	r8, r0, ip, ror #9
   13078:	andeq	r8, r0, r0, ror #9

0001307c <lell_pcapng_append_packet@@Base>:
   1307c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13080:	add	fp, sp, #28
   13084:	sub	sp, sp, #372	; 0x174
   13088:	ldr	r5, [fp, #20]
   1308c:	mov	sl, r0
   13090:	mov	r7, r3
   13094:	mov	r8, r2
   13098:	mov	r0, r5
   1309c:	bl	4520 <lell_packet_is_data@plt>
   130a0:	ldr	r1, [r5, #72]	; 0x48
   130a4:	add	r2, r1, #9
   130a8:	cmp	r2, #256	; 0x100
   130ac:	bcs	131e4 <lell_pcapng_append_packet@@Base+0x168>
   130b0:	ldr	ip, [fp, #16]
   130b4:	ldr	lr, [fp, #12]
   130b8:	ldr	r9, [fp, #8]
   130bc:	add	r3, r1, #19
   130c0:	add	r1, r1, #58	; 0x3a
   130c4:	clz	r0, r0
   130c8:	ldr	r4, [r5, #92]	; 0x5c
   130cc:	str	r7, [sp, #8]
   130d0:	str	r8, [sp, #4]
   130d4:	bic	r6, r1, #3
   130d8:	lsr	r1, r1, #2
   130dc:	lsr	r0, r0, #5
   130e0:	str	r1, [sp, #12]
   130e4:	ldrb	r1, [r5, #69]	; 0x45
   130e8:	str	ip, [sp, #48]	; 0x30
   130ec:	strb	lr, [sp, #46]	; 0x2e
   130f0:	strb	r9, [sp, #45]	; 0x2d
   130f4:	str	r3, [sp, #40]	; 0x28
   130f8:	str	r3, [sp, #36]	; 0x24
   130fc:	str	r8, [sp, #32]
   13100:	str	r7, [sp, #28]
   13104:	mov	r7, #0
   13108:	mov	r3, #6
   1310c:	cmp	lr, r9
   13110:	str	r7, [sp, #24]
   13114:	str	r6, [sp, #20]
   13118:	str	r3, [sp, #16]
   1311c:	mov	r3, #35	; 0x23
   13120:	movwlt	r3, #39	; 0x27
   13124:	orr	r0, r3, r0, lsl #4
   13128:	strh	r0, [sp, #52]	; 0x34
   1312c:	strb	r4, [sp, #47]	; 0x2f
   13130:	add	r4, sp, #16
   13134:	strb	r1, [sp, #44]	; 0x2c
   13138:	mov	r1, r5
   1313c:	add	r0, r4, #38	; 0x26
   13140:	bl	4574 <memcpy@plt>
   13144:	ldr	r0, [sp, #12]
   13148:	mov	r1, r4
   1314c:	add	r0, r4, r0, lsl #2
   13150:	str	r7, [r0, #-8]
   13154:	str	r6, [r0, #-4]
   13158:	mov	r0, sl
   1315c:	bl	4700 <pcapng_append_packet@plt>
   13160:	rsb	r4, r0, #0
   13164:	cmp	r0, #0
   13168:	bne	131d8 <lell_pcapng_append_packet@@Base+0x15c>
   1316c:	mov	r0, r5
   13170:	bl	4520 <lell_packet_is_data@plt>
   13174:	cmp	r0, #0
   13178:	bne	131d8 <lell_pcapng_append_packet@@Base+0x15c>
   1317c:	ldrb	r0, [r5, #80]	; 0x50
   13180:	cmp	r0, #5
   13184:	bne	131d8 <lell_pcapng_append_packet@@Base+0x15c>
   13188:	ldr	r0, [sp, #4]
   1318c:	add	r2, r5, #16
   13190:	sub	r1, fp, #80	; 0x50
   13194:	str	r0, [fp, #-76]	; 0xffffffb4
   13198:	movw	r0, #54144	; 0xd380
   1319c:	movt	r0, #46	; 0x2e
   131a0:	str	r0, [fp, #-80]	; 0xffffffb0
   131a4:	ldr	r0, [sp, #8]
   131a8:	str	r0, [fp, #-72]	; 0xffffffb8
   131ac:	mov	r0, #32
   131b0:	vld1.8	{d16-d17}, [r5], r0
   131b4:	vld1.8	{d18-d19}, [r2]
   131b8:	add	r0, r1, #12
   131bc:	vst1.32	{d16-d17}, [r0]
   131c0:	add	r0, r1, #28
   131c4:	vst1.32	{d18-d19}, [r0]
   131c8:	ldrh	r0, [r5]
   131cc:	strh	r0, [fp, #-36]	; 0xffffffdc
   131d0:	mov	r0, sl
   131d4:	bl	4544 <pcapng_append_interface_option@plt>
   131d8:	mov	r0, r4
   131dc:	sub	sp, fp, #28
   131e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   131e4:	ldr	r0, [pc, #24]	; 13204 <lell_pcapng_append_packet@@Base+0x188>
   131e8:	ldr	r1, [pc, #24]	; 13208 <lell_pcapng_append_packet@@Base+0x18c>
   131ec:	ldr	r3, [pc, #24]	; 1320c <lell_pcapng_append_packet@@Base+0x190>
   131f0:	movw	r2, #441	; 0x1b9
   131f4:	add	r0, pc, r0
   131f8:	add	r1, pc, r1
   131fc:	add	r3, pc, r3
   13200:	bl	47fc <__assert_fail@plt>
   13204:	ldrdeq	r8, [r0], -r3
   13208:	andeq	r8, r0, r6, asr #6
   1320c:	andeq	r8, r0, r4, ror #9

00013210 <lell_pcapng_record_connect_req@@Base>:
   13210:	push	{fp, lr}
   13214:	mov	fp, sp
   13218:	sub	sp, sp, #48	; 0x30
   1321c:	movw	r1, #54144	; 0xd380
   13220:	stmib	sp, {r2, r3}
   13224:	ldr	r2, [fp, #8]
   13228:	mov	ip, #32
   1322c:	movt	r1, #46	; 0x2e
   13230:	str	r1, [sp]
   13234:	mov	r1, sp
   13238:	add	lr, r2, #16
   1323c:	vld1.8	{d16-d17}, [r2], ip
   13240:	add	r3, r1, #12
   13244:	vld1.8	{d18-d19}, [lr]
   13248:	vst1.32	{d16-d17}, [r3]
   1324c:	add	r3, r1, #28
   13250:	vst1.32	{d18-d19}, [r3]
   13254:	ldrh	r2, [r2]
   13258:	strh	r2, [sp, #44]	; 0x2c
   1325c:	bl	4544 <pcapng_append_interface_option@plt>
   13260:	rsb	r0, r0, #0
   13264:	mov	sp, fp
   13268:	pop	{fp, pc}

0001326c <lell_pcapng_close@@Base>:
   1326c:	push	{r4, sl, fp, lr}
   13270:	add	fp, sp, #8
   13274:	mov	r4, r0
   13278:	bl	47cc <pcapng_close@plt>
   1327c:	cmp	r4, #0
   13280:	beq	1328c <lell_pcapng_close@@Base+0x20>
   13284:	mov	r0, r4
   13288:	bl	4550 <free@plt>
   1328c:	mvn	r0, #0
   13290:	pop	{r4, sl, fp, pc}
   13294:	cmp	r3, #0
   13298:	cmpeq	r2, #0
   1329c:	bne	132b4 <lell_pcapng_close@@Base+0x48>
   132a0:	cmp	r1, #0
   132a4:	cmpeq	r0, #0
   132a8:	mvnne	r1, #0
   132ac:	mvnne	r0, #0
   132b0:	b	132d0 <lell_pcapng_close@@Base+0x64>
   132b4:	sub	sp, sp, #8
   132b8:	push	{sp, lr}
   132bc:	bl	132e0 <lell_pcapng_close@@Base+0x74>
   132c0:	ldr	lr, [sp, #4]
   132c4:	add	sp, sp, #8
   132c8:	pop	{r2, r3}
   132cc:	bx	lr
   132d0:	push	{r1, lr}
   132d4:	mov	r0, #8
   132d8:	bl	44d8 <raise@plt>
   132dc:	pop	{r1, pc}
   132e0:	cmp	r1, r3
   132e4:	cmpeq	r0, r2
   132e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132ec:	mov	r4, r0
   132f0:	movcc	r0, #0
   132f4:	mov	r5, r1
   132f8:	ldr	lr, [sp, #36]	; 0x24
   132fc:	movcc	r1, r0
   13300:	bcc	133fc <lell_pcapng_close@@Base+0x190>
   13304:	cmp	r3, #0
   13308:	clzeq	ip, r2
   1330c:	clzne	ip, r3
   13310:	addeq	ip, ip, #32
   13314:	cmp	r5, #0
   13318:	clzeq	r1, r4
   1331c:	addeq	r1, r1, #32
   13320:	clzne	r1, r5
   13324:	sub	ip, ip, r1
   13328:	sub	sl, ip, #32
   1332c:	lsl	r9, r3, ip
   13330:	rsb	fp, ip, #32
   13334:	orr	r9, r9, r2, lsl sl
   13338:	orr	r9, r9, r2, lsr fp
   1333c:	lsl	r8, r2, ip
   13340:	cmp	r5, r9
   13344:	cmpeq	r4, r8
   13348:	movcc	r0, #0
   1334c:	movcc	r1, r0
   13350:	bcc	1336c <lell_pcapng_close@@Base+0x100>
   13354:	mov	r0, #1
   13358:	subs	r4, r4, r8
   1335c:	lsl	r1, r0, sl
   13360:	orr	r1, r1, r0, lsr fp
   13364:	lsl	r0, r0, ip
   13368:	sbc	r5, r5, r9
   1336c:	cmp	ip, #0
   13370:	beq	133fc <lell_pcapng_close@@Base+0x190>
   13374:	lsr	r6, r8, #1
   13378:	orr	r6, r6, r9, lsl #31
   1337c:	lsr	r7, r9, #1
   13380:	mov	r2, ip
   13384:	b	133a8 <lell_pcapng_close@@Base+0x13c>
   13388:	subs	r3, r4, r6
   1338c:	sbc	r8, r5, r7
   13390:	adds	r3, r3, r3
   13394:	adc	r8, r8, r8
   13398:	adds	r4, r3, #1
   1339c:	adc	r5, r8, #0
   133a0:	subs	r2, r2, #1
   133a4:	beq	133c4 <lell_pcapng_close@@Base+0x158>
   133a8:	cmp	r5, r7
   133ac:	cmpeq	r4, r6
   133b0:	bcs	13388 <lell_pcapng_close@@Base+0x11c>
   133b4:	adds	r4, r4, r4
   133b8:	adc	r5, r5, r5
   133bc:	subs	r2, r2, #1
   133c0:	bne	133a8 <lell_pcapng_close@@Base+0x13c>
   133c4:	lsr	r3, r4, ip
   133c8:	orr	r3, r3, r5, lsl fp
   133cc:	lsr	r2, r5, ip
   133d0:	orr	r3, r3, r5, lsr sl
   133d4:	adds	r0, r0, r4
   133d8:	mov	r4, r3
   133dc:	lsl	r3, r2, ip
   133e0:	orr	r3, r3, r4, lsl sl
   133e4:	lsl	ip, r4, ip
   133e8:	orr	r3, r3, r4, lsr fp
   133ec:	adc	r1, r1, r5
   133f0:	subs	r0, r0, ip
   133f4:	mov	r5, r2
   133f8:	sbc	r1, r1, r3
   133fc:	cmp	lr, #0
   13400:	strdne	r4, [lr]
   13404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00013408 <.fini>:
   13408:	push	{r3, lr}
   1340c:	pop	{r3, pc}
