
../repos/coreutils/src/id:     file format elf32-littlearm


Disassembly of section .init:

000110fc <.init>:
   110fc:	push	{r3, lr}
   11100:	bl	11458 <__assert_fail@plt+0x48>
   11104:	pop	{r3, pc}

Disassembly of section .plt:

00011108 <calloc@plt-0x14>:
   11108:	push	{lr}		; (str lr, [sp, #-4]!)
   1110c:	ldr	lr, [pc, #4]	; 11118 <calloc@plt-0x4>
   11110:	add	lr, pc, lr
   11114:	ldr	pc, [lr, #8]!
   11118:	andeq	sp, r1, r8, ror #29

0001111c <calloc@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #118784	; 0x1d000
   11124:	ldr	pc, [ip, #3816]!	; 0xee8

00011128 <endgrent@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #118784	; 0x1d000
   11130:	ldr	pc, [ip, #3808]!	; 0xee0

00011134 <fputs_unlocked@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #118784	; 0x1d000
   1113c:	ldr	pc, [ip, #3800]!	; 0xed8

00011140 <raise@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #118784	; 0x1d000
   11148:	ldr	pc, [ip, #3792]!	; 0xed0

0001114c <getpwnam@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #118784	; 0x1d000
   11154:	ldr	pc, [ip, #3784]!	; 0xec8

00011158 <is_selinux_enabled@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #118784	; 0x1d000
   11160:	ldr	pc, [ip, #3776]!	; 0xec0

00011164 <strcmp@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #118784	; 0x1d000
   1116c:	ldr	pc, [ip, #3768]!	; 0xeb8

00011170 <getpwuid@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #118784	; 0x1d000
   11178:	ldr	pc, [ip, #3760]!	; 0xeb0

0001117c <printf@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #118784	; 0x1d000
   11184:	ldr	pc, [ip, #3752]!	; 0xea8

00011188 <fflush@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #118784	; 0x1d000
   11190:	ldr	pc, [ip, #3744]!	; 0xea0

00011194 <getuid@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #118784	; 0x1d000
   1119c:	ldr	pc, [ip, #3736]!	; 0xe98

000111a0 <free@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #118784	; 0x1d000
   111a8:	ldr	pc, [ip, #3728]!	; 0xe90

000111ac <_exit@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #118784	; 0x1d000
   111b4:	ldr	pc, [ip, #3720]!	; 0xe88

000111b8 <memcpy@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #118784	; 0x1d000
   111c0:	ldr	pc, [ip, #3712]!	; 0xe80

000111c4 <mbsinit@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #118784	; 0x1d000
   111cc:	ldr	pc, [ip, #3704]!	; 0xe78

000111d0 <memcmp@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #118784	; 0x1d000
   111d8:	ldr	pc, [ip, #3696]!	; 0xe70

000111dc <realloc@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #118784	; 0x1d000
   111e4:	ldr	pc, [ip, #3688]!	; 0xe68

000111e8 <textdomain@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #118784	; 0x1d000
   111f0:	ldr	pc, [ip, #3680]!	; 0xe60

000111f4 <geteuid@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #118784	; 0x1d000
   111fc:	ldr	pc, [ip, #3672]!	; 0xe58

00011200 <iswprint@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #118784	; 0x1d000
   11208:	ldr	pc, [ip, #3664]!	; 0xe50

0001120c <getegid@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #118784	; 0x1d000
   11214:	ldr	pc, [ip, #3656]!	; 0xe48

00011218 <lseek64@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #118784	; 0x1d000
   11220:	ldr	pc, [ip, #3648]!	; 0xe40

00011224 <__ctype_get_mb_cur_max@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #118784	; 0x1d000
   1122c:	ldr	pc, [ip, #3640]!	; 0xe38

00011230 <getcon@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #118784	; 0x1d000
   11238:	ldr	pc, [ip, #3632]!	; 0xe30

0001123c <__fpending@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #118784	; 0x1d000
   11244:	ldr	pc, [ip, #3624]!	; 0xe28

00011248 <ferror_unlocked@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #118784	; 0x1d000
   11250:	ldr	pc, [ip, #3616]!	; 0xe20

00011254 <mbrtowc@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #118784	; 0x1d000
   1125c:	ldr	pc, [ip, #3608]!	; 0xe18

00011260 <error@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #118784	; 0x1d000
   11268:	ldr	pc, [ip, #3600]!	; 0xe10

0001126c <getenv@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #118784	; 0x1d000
   11274:	ldr	pc, [ip, #3592]!	; 0xe08

00011278 <malloc@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #118784	; 0x1d000
   11280:	ldr	pc, [ip, #3584]!	; 0xe00

00011284 <__libc_start_main@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #118784	; 0x1d000
   1128c:	ldr	pc, [ip, #3576]!	; 0xdf8

00011290 <__freading@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #118784	; 0x1d000
   11298:	ldr	pc, [ip, #3568]!	; 0xdf0

0001129c <__gmon_start__@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #118784	; 0x1d000
   112a4:	ldr	pc, [ip, #3560]!	; 0xde8

000112a8 <getopt_long@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #118784	; 0x1d000
   112b0:	ldr	pc, [ip, #3552]!	; 0xde0

000112b4 <__ctype_b_loc@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #118784	; 0x1d000
   112bc:	ldr	pc, [ip, #3544]!	; 0xdd8

000112c0 <exit@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #118784	; 0x1d000
   112c8:	ldr	pc, [ip, #3536]!	; 0xdd0

000112cc <gettext@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #118784	; 0x1d000
   112d4:	ldr	pc, [ip, #3528]!	; 0xdc8

000112d8 <strtoul@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #118784	; 0x1d000
   112e0:	ldr	pc, [ip, #3520]!	; 0xdc0

000112e4 <strlen@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #118784	; 0x1d000
   112ec:	ldr	pc, [ip, #3512]!	; 0xdb8

000112f0 <strchr@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #118784	; 0x1d000
   112f8:	ldr	pc, [ip, #3504]!	; 0xdb0

000112fc <fprintf@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #118784	; 0x1d000
   11304:	ldr	pc, [ip, #3496]!	; 0xda8

00011308 <__errno_location@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #118784	; 0x1d000
   11310:	ldr	pc, [ip, #3488]!	; 0xda0

00011314 <__cxa_atexit@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #118784	; 0x1d000
   1131c:	ldr	pc, [ip, #3480]!	; 0xd98

00011320 <getgid@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #118784	; 0x1d000
   11328:	ldr	pc, [ip, #3472]!	; 0xd90

0001132c <getgrouplist@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #118784	; 0x1d000
   11334:	ldr	pc, [ip, #3464]!	; 0xd88

00011338 <memset@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #118784	; 0x1d000
   11340:	ldr	pc, [ip, #3456]!	; 0xd80

00011344 <setgrent@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #118784	; 0x1d000
   1134c:	ldr	pc, [ip, #3448]!	; 0xd78

00011350 <getgrent@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #118784	; 0x1d000
   11358:	ldr	pc, [ip, #3440]!	; 0xd70

0001135c <fileno@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #118784	; 0x1d000
   11364:	ldr	pc, [ip, #3432]!	; 0xd68

00011368 <fclose@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #118784	; 0x1d000
   11370:	ldr	pc, [ip, #3424]!	; 0xd60

00011374 <fseeko64@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #118784	; 0x1d000
   1137c:	ldr	pc, [ip, #3416]!	; 0xd58

00011380 <setlocale@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #118784	; 0x1d000
   11388:	ldr	pc, [ip, #3408]!	; 0xd50

0001138c <endpwent@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #118784	; 0x1d000
   11394:	ldr	pc, [ip, #3400]!	; 0xd48

00011398 <strrchr@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #118784	; 0x1d000
   113a0:	ldr	pc, [ip, #3392]!	; 0xd40

000113a4 <nl_langinfo@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #118784	; 0x1d000
   113ac:	ldr	pc, [ip, #3384]!	; 0xd38

000113b0 <getgroups@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #118784	; 0x1d000
   113b8:	ldr	pc, [ip, #3376]!	; 0xd30

000113bc <bindtextdomain@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #118784	; 0x1d000
   113c4:	ldr	pc, [ip, #3368]!	; 0xd28

000113c8 <fputs@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #118784	; 0x1d000
   113d0:	ldr	pc, [ip, #3360]!	; 0xd20

000113d4 <strncmp@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #118784	; 0x1d000
   113dc:	ldr	pc, [ip, #3352]!	; 0xd18

000113e0 <abort@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #118784	; 0x1d000
   113e8:	ldr	pc, [ip, #3344]!	; 0xd10

000113ec <getgrgid@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #118784	; 0x1d000
   113f4:	ldr	pc, [ip, #3336]!	; 0xd08

000113f8 <getgrnam@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #118784	; 0x1d000
   11400:	ldr	pc, [ip, #3328]!	; 0xd00

00011404 <putchar_unlocked@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #118784	; 0x1d000
   1140c:	ldr	pc, [ip, #3320]!	; 0xcf8

00011410 <__assert_fail@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #118784	; 0x1d000
   11418:	ldr	pc, [ip, #3312]!	; 0xcf0

Disassembly of section .text:

0001141c <.text>:
   1141c:	mov	fp, #0
   11420:	mov	lr, #0
   11424:	pop	{r1}		; (ldr r1, [sp], #4)
   11428:	mov	r2, sp
   1142c:	push	{r2}		; (str r2, [sp, #-4]!)
   11430:	push	{r0}		; (str r0, [sp, #-4]!)
   11434:	ldr	ip, [pc, #16]	; 1144c <__assert_fail@plt+0x3c>
   11438:	push	{ip}		; (str ip, [sp, #-4]!)
   1143c:	ldr	r0, [pc, #12]	; 11450 <__assert_fail@plt+0x40>
   11440:	ldr	r3, [pc, #12]	; 11454 <__assert_fail@plt+0x44>
   11444:	bl	11284 <__libc_start_main@plt>
   11448:	bl	113e0 <abort@plt>
   1144c:	ldrdeq	sp, [r1], -ip
   11450:	andeq	r1, r1, r8, lsl #16
   11454:	andeq	sp, r1, ip, ror lr
   11458:	ldr	r3, [pc, #20]	; 11474 <__assert_fail@plt+0x64>
   1145c:	ldr	r2, [pc, #20]	; 11478 <__assert_fail@plt+0x68>
   11460:	add	r3, pc, r3
   11464:	ldr	r2, [r3, r2]
   11468:	cmp	r2, #0
   1146c:	bxeq	lr
   11470:	b	1129c <__gmon_start__@plt>
   11474:	muleq	r1, r8, fp
   11478:	andeq	r0, r0, ip, lsl #2
   1147c:	ldr	r0, [pc, #24]	; 1149c <__assert_fail@plt+0x8c>
   11480:	ldr	r3, [pc, #24]	; 114a0 <__assert_fail@plt+0x90>
   11484:	cmp	r3, r0
   11488:	bxeq	lr
   1148c:	ldr	r3, [pc, #16]	; 114a4 <__assert_fail@plt+0x94>
   11490:	cmp	r3, #0
   11494:	bxeq	lr
   11498:	bx	r3
   1149c:	andeq	pc, r2, r0, ror r1	; <UNPREDICTABLE>
   114a0:	andeq	pc, r2, r0, ror r1	; <UNPREDICTABLE>
   114a4:	andeq	r0, r0, r0
   114a8:	ldr	r0, [pc, #36]	; 114d4 <__assert_fail@plt+0xc4>
   114ac:	ldr	r1, [pc, #36]	; 114d8 <__assert_fail@plt+0xc8>
   114b0:	sub	r1, r1, r0
   114b4:	asr	r1, r1, #2
   114b8:	add	r1, r1, r1, lsr #31
   114bc:	asrs	r1, r1, #1
   114c0:	bxeq	lr
   114c4:	ldr	r3, [pc, #16]	; 114dc <__assert_fail@plt+0xcc>
   114c8:	cmp	r3, #0
   114cc:	bxeq	lr
   114d0:	bx	r3
   114d4:	andeq	pc, r2, r0, ror r1	; <UNPREDICTABLE>
   114d8:	andeq	pc, r2, r0, ror r1	; <UNPREDICTABLE>
   114dc:	andeq	r0, r0, r0
   114e0:	push	{r4, lr}
   114e4:	ldr	r4, [pc, #24]	; 11504 <__assert_fail@plt+0xf4>
   114e8:	ldrb	r3, [r4]
   114ec:	cmp	r3, #0
   114f0:	popne	{r4, pc}
   114f4:	bl	1147c <__assert_fail@plt+0x6c>
   114f8:	mov	r3, #1
   114fc:	strb	r3, [r4]
   11500:	pop	{r4, pc}
   11504:	andeq	pc, r2, r8, lsl #3
   11508:	b	114a8 <__assert_fail@plt+0x98>
   1150c:	push	{fp, lr}
   11510:	mov	fp, sp
   11514:	sub	sp, sp, #40	; 0x28
   11518:	str	r0, [fp, #-4]
   1151c:	ldr	r0, [fp, #-4]
   11520:	cmp	r0, #0
   11524:	beq	11570 <__assert_fail@plt+0x160>
   11528:	b	1152c <__assert_fail@plt+0x11c>
   1152c:	movw	r0, #61824	; 0xf180
   11530:	movt	r0, #2
   11534:	ldr	r0, [r0]
   11538:	movw	r1, #57092	; 0xdf04
   1153c:	movt	r1, #1
   11540:	str	r0, [fp, #-8]
   11544:	mov	r0, r1
   11548:	bl	112cc <gettext@plt>
   1154c:	movw	r1, #61940	; 0xf1f4
   11550:	movt	r1, #2
   11554:	ldr	r2, [r1]
   11558:	ldr	r1, [fp, #-8]
   1155c:	str	r0, [fp, #-12]
   11560:	mov	r0, r1
   11564:	ldr	r1, [fp, #-12]
   11568:	bl	112fc <fprintf@plt>
   1156c:	b	11654 <__assert_fail@plt+0x244>
   11570:	movw	r0, #57131	; 0xdf2b
   11574:	movt	r0, #1
   11578:	bl	112cc <gettext@plt>
   1157c:	movw	r1, #61940	; 0xf1f4
   11580:	movt	r1, #2
   11584:	ldr	r1, [r1]
   11588:	bl	1117c <printf@plt>
   1158c:	movw	r1, #57164	; 0xdf4c
   11590:	movt	r1, #1
   11594:	str	r0, [fp, #-16]
   11598:	mov	r0, r1
   1159c:	bl	112cc <gettext@plt>
   115a0:	movw	r1, #61828	; 0xf184
   115a4:	movt	r1, #2
   115a8:	ldr	r1, [r1]
   115ac:	bl	11134 <fputs_unlocked@plt>
   115b0:	movw	r1, #57272	; 0xdfb8
   115b4:	movt	r1, #1
   115b8:	str	r0, [sp, #20]
   115bc:	mov	r0, r1
   115c0:	bl	112cc <gettext@plt>
   115c4:	movw	r1, #61828	; 0xf184
   115c8:	movt	r1, #2
   115cc:	ldr	r1, [r1]
   115d0:	bl	11134 <fputs_unlocked@plt>
   115d4:	movw	r1, #57793	; 0xe1c1
   115d8:	movt	r1, #1
   115dc:	str	r0, [sp, #16]
   115e0:	mov	r0, r1
   115e4:	bl	112cc <gettext@plt>
   115e8:	movw	r1, #61828	; 0xf184
   115ec:	movt	r1, #2
   115f0:	ldr	r1, [r1]
   115f4:	bl	11134 <fputs_unlocked@plt>
   115f8:	movw	r1, #57838	; 0xe1ee
   115fc:	movt	r1, #1
   11600:	str	r0, [sp, #12]
   11604:	mov	r0, r1
   11608:	bl	112cc <gettext@plt>
   1160c:	movw	r1, #61828	; 0xf184
   11610:	movt	r1, #2
   11614:	ldr	r1, [r1]
   11618:	bl	11134 <fputs_unlocked@plt>
   1161c:	movw	r1, #57892	; 0xe224
   11620:	movt	r1, #1
   11624:	str	r0, [sp, #8]
   11628:	mov	r0, r1
   1162c:	bl	112cc <gettext@plt>
   11630:	movw	r1, #61828	; 0xf184
   11634:	movt	r1, #2
   11638:	ldr	r1, [r1]
   1163c:	bl	11134 <fputs_unlocked@plt>
   11640:	movw	r1, #57963	; 0xe26b
   11644:	movt	r1, #1
   11648:	str	r0, [sp, #4]
   1164c:	mov	r0, r1
   11650:	bl	1165c <__assert_fail@plt+0x24c>
   11654:	ldr	r0, [fp, #-4]
   11658:	bl	112c0 <exit@plt>
   1165c:	push	{fp, lr}
   11660:	mov	fp, sp
   11664:	sub	sp, sp, #88	; 0x58
   11668:	add	r1, sp, #28
   1166c:	movw	r2, #59112	; 0xe6e8
   11670:	movt	r2, #1
   11674:	str	r0, [fp, #-4]
   11678:	mov	r0, r1
   1167c:	str	r1, [sp, #12]
   11680:	mov	r1, r2
   11684:	movw	r2, #56	; 0x38
   11688:	bl	111b8 <memcpy@plt>
   1168c:	ldr	r0, [fp, #-4]
   11690:	str	r0, [sp, #24]
   11694:	ldr	r0, [sp, #12]
   11698:	str	r0, [sp, #20]
   1169c:	ldr	r0, [sp, #20]
   116a0:	ldr	r0, [r0]
   116a4:	movw	r1, #0
   116a8:	cmp	r0, r1
   116ac:	movw	r0, #0
   116b0:	str	r0, [sp, #8]
   116b4:	beq	116e0 <__assert_fail@plt+0x2d0>
   116b8:	ldr	r0, [fp, #-4]
   116bc:	ldr	r1, [sp, #20]
   116c0:	ldr	r1, [r1]
   116c4:	bl	11164 <strcmp@plt>
   116c8:	cmp	r0, #0
   116cc:	movw	r0, #0
   116d0:	moveq	r0, #1
   116d4:	mvn	r1, #0
   116d8:	eor	r0, r0, r1
   116dc:	str	r0, [sp, #8]
   116e0:	ldr	r0, [sp, #8]
   116e4:	tst	r0, #1
   116e8:	beq	116fc <__assert_fail@plt+0x2ec>
   116ec:	ldr	r0, [sp, #20]
   116f0:	add	r0, r0, #8
   116f4:	str	r0, [sp, #20]
   116f8:	b	1169c <__assert_fail@plt+0x28c>
   116fc:	ldr	r0, [sp, #20]
   11700:	ldr	r0, [r0, #4]
   11704:	movw	r1, #0
   11708:	cmp	r0, r1
   1170c:	beq	1171c <__assert_fail@plt+0x30c>
   11710:	ldr	r0, [sp, #20]
   11714:	ldr	r0, [r0, #4]
   11718:	str	r0, [sp, #24]
   1171c:	movw	r0, #58537	; 0xe4a9
   11720:	movt	r0, #1
   11724:	bl	112cc <gettext@plt>
   11728:	movw	r1, #58054	; 0xe2c6
   1172c:	movt	r1, #1
   11730:	movw	r2, #58560	; 0xe4c0
   11734:	movt	r2, #1
   11738:	bl	1117c <printf@plt>
   1173c:	movw	r1, #5
   11740:	str	r0, [sp, #4]
   11744:	mov	r0, r1
   11748:	movw	r1, #0
   1174c:	bl	11380 <setlocale@plt>
   11750:	str	r0, [sp, #16]
   11754:	ldr	r0, [sp, #16]
   11758:	movw	r1, #0
   1175c:	cmp	r0, r1
   11760:	beq	1179c <__assert_fail@plt+0x38c>
   11764:	ldr	r0, [sp, #16]
   11768:	movw	r1, #58600	; 0xe4e8
   1176c:	movt	r1, #1
   11770:	movw	r2, #3
   11774:	bl	113d4 <strncmp@plt>
   11778:	cmp	r0, #0
   1177c:	beq	1179c <__assert_fail@plt+0x38c>
   11780:	movw	r0, #58604	; 0xe4ec
   11784:	movt	r0, #1
   11788:	bl	112cc <gettext@plt>
   1178c:	movw	r1, #61828	; 0xf184
   11790:	movt	r1, #2
   11794:	ldr	r1, [r1]
   11798:	bl	11134 <fputs_unlocked@plt>
   1179c:	movw	r0, #58675	; 0xe533
   117a0:	movt	r0, #1
   117a4:	bl	112cc <gettext@plt>
   117a8:	ldr	r2, [fp, #-4]
   117ac:	movw	r1, #58560	; 0xe4c0
   117b0:	movt	r1, #1
   117b4:	bl	1117c <printf@plt>
   117b8:	movw	r1, #58702	; 0xe54e
   117bc:	movt	r1, #1
   117c0:	str	r0, [sp]
   117c4:	mov	r0, r1
   117c8:	bl	112cc <gettext@plt>
   117cc:	ldr	r1, [sp, #24]
   117d0:	ldr	r2, [sp, #24]
   117d4:	ldr	r3, [fp, #-4]
   117d8:	cmp	r2, r3
   117dc:	movw	r2, #0
   117e0:	moveq	r2, #1
   117e4:	tst	r2, #1
   117e8:	movw	r2, #57271	; 0xdfb7
   117ec:	movt	r2, #1
   117f0:	movw	r3, #58470	; 0xe466
   117f4:	movt	r3, #1
   117f8:	movne	r2, r3
   117fc:	bl	1117c <printf@plt>
   11800:	mov	sp, fp
   11804:	pop	{fp, pc}
   11808:	push	{fp, lr}
   1180c:	mov	fp, sp
   11810:	sub	sp, sp, #160	; 0xa0
   11814:	movw	r2, #0
   11818:	str	r2, [fp, #-4]
   1181c:	str	r0, [fp, #-8]
   11820:	str	r1, [fp, #-12]
   11824:	bl	11158 <is_selinux_enabled@plt>
   11828:	cmp	r0, #0
   1182c:	movw	r0, #0
   11830:	movgt	r0, #1
   11834:	and	r0, r0, #1
   11838:	str	r0, [fp, #-20]	; 0xffffffec
   1183c:	bl	12278 <__assert_fail@plt+0xe68>
   11840:	and	r0, r0, #1
   11844:	strb	r0, [fp, #-21]	; 0xffffffeb
   11848:	movw	r0, #0
   1184c:	str	r0, [fp, #-28]	; 0xffffffe4
   11850:	ldr	r0, [fp, #-12]
   11854:	ldr	r0, [r0]
   11858:	bl	13134 <__assert_fail@plt+0x1d24>
   1185c:	movw	r0, #6
   11860:	movw	r1, #57271	; 0xdfb7
   11864:	movt	r1, #1
   11868:	bl	11380 <setlocale@plt>
   1186c:	movw	r1, #58058	; 0xe2ca
   11870:	movt	r1, #1
   11874:	str	r0, [fp, #-56]	; 0xffffffc8
   11878:	mov	r0, r1
   1187c:	movw	r1, #57966	; 0xe26e
   11880:	movt	r1, #1
   11884:	bl	113bc <bindtextdomain@plt>
   11888:	movw	r1, #58058	; 0xe2ca
   1188c:	movt	r1, #1
   11890:	str	r0, [fp, #-60]	; 0xffffffc4
   11894:	mov	r0, r1
   11898:	bl	111e8 <textdomain@plt>
   1189c:	movw	r1, #11940	; 0x2ea4
   118a0:	movt	r1, #1
   118a4:	str	r0, [fp, #-64]	; 0xffffffc0
   118a8:	mov	r0, r1
   118ac:	bl	1dee0 <__assert_fail@plt+0xcad0>
   118b0:	ldr	r0, [fp, #-8]
   118b4:	ldr	r1, [fp, #-12]
   118b8:	movw	r2, #57990	; 0xe286
   118bc:	movt	r2, #1
   118c0:	movw	r3, #58952	; 0xe648
   118c4:	movt	r3, #1
   118c8:	movw	ip, #0
   118cc:	str	ip, [sp]
   118d0:	bl	112a8 <getopt_long@plt>
   118d4:	str	r0, [fp, #-16]
   118d8:	cmn	r0, #1
   118dc:	beq	11aac <__assert_fail@plt+0x69c>
   118e0:	ldr	r0, [fp, #-16]
   118e4:	cmn	r0, #3
   118e8:	str	r0, [fp, #-68]	; 0xffffffbc
   118ec:	beq	11a4c <__assert_fail@plt+0x63c>
   118f0:	b	118f4 <__assert_fail@plt+0x4e4>
   118f4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   118f8:	cmn	r0, #2
   118fc:	beq	11a44 <__assert_fail@plt+0x634>
   11900:	b	11904 <__assert_fail@plt+0x4f4>
   11904:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11908:	cmp	r0, #71	; 0x47
   1190c:	beq	11a30 <__assert_fail@plt+0x620>
   11910:	b	11914 <__assert_fail@plt+0x504>
   11914:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11918:	cmp	r0, #90	; 0x5a
   1191c:	beq	11988 <__assert_fail@plt+0x578>
   11920:	b	11924 <__assert_fail@plt+0x514>
   11924:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11928:	cmp	r0, #97	; 0x61
   1192c:	beq	11984 <__assert_fail@plt+0x574>
   11930:	b	11934 <__assert_fail@plt+0x524>
   11934:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11938:	cmp	r0, #103	; 0x67
   1193c:	beq	119cc <__assert_fail@plt+0x5bc>
   11940:	b	11944 <__assert_fail@plt+0x534>
   11944:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11948:	cmp	r0, #110	; 0x6e
   1194c:	beq	119e0 <__assert_fail@plt+0x5d0>
   11950:	b	11954 <__assert_fail@plt+0x544>
   11954:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11958:	cmp	r0, #114	; 0x72
   1195c:	beq	119f4 <__assert_fail@plt+0x5e4>
   11960:	b	11964 <__assert_fail@plt+0x554>
   11964:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11968:	cmp	r0, #117	; 0x75
   1196c:	beq	11a08 <__assert_fail@plt+0x5f8>
   11970:	b	11974 <__assert_fail@plt+0x564>
   11974:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11978:	cmp	r0, #122	; 0x7a
   1197c:	beq	11a1c <__assert_fail@plt+0x60c>
   11980:	b	11aa0 <__assert_fail@plt+0x690>
   11984:	b	11aa8 <__assert_fail@plt+0x698>
   11988:	ldr	r0, [fp, #-20]	; 0xffffffec
   1198c:	cmp	r0, #0
   11990:	bne	119b8 <__assert_fail@plt+0x5a8>
   11994:	movw	r0, #57999	; 0xe28f
   11998:	movt	r0, #1
   1199c:	bl	112cc <gettext@plt>
   119a0:	movw	r1, #1
   119a4:	str	r0, [fp, #-72]	; 0xffffffb8
   119a8:	mov	r0, r1
   119ac:	movw	r1, #0
   119b0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   119b4:	bl	11260 <error@plt>
   119b8:	movw	r0, #61836	; 0xf18c
   119bc:	movt	r0, #2
   119c0:	movw	r1, #1
   119c4:	strb	r1, [r0]
   119c8:	b	11aa8 <__assert_fail@plt+0x698>
   119cc:	movw	r0, #61837	; 0xf18d
   119d0:	movt	r0, #2
   119d4:	movw	r1, #1
   119d8:	strb	r1, [r0]
   119dc:	b	11aa8 <__assert_fail@plt+0x698>
   119e0:	movw	r0, #61838	; 0xf18e
   119e4:	movt	r0, #2
   119e8:	movw	r1, #1
   119ec:	strb	r1, [r0]
   119f0:	b	11aa8 <__assert_fail@plt+0x698>
   119f4:	movw	r0, #61839	; 0xf18f
   119f8:	movt	r0, #2
   119fc:	movw	r1, #1
   11a00:	strb	r1, [r0]
   11a04:	b	11aa8 <__assert_fail@plt+0x698>
   11a08:	movw	r0, #61840	; 0xf190
   11a0c:	movt	r0, #2
   11a10:	movw	r1, #1
   11a14:	strb	r1, [r0]
   11a18:	b	11aa8 <__assert_fail@plt+0x698>
   11a1c:	movw	r0, #61841	; 0xf191
   11a20:	movt	r0, #2
   11a24:	movw	r1, #1
   11a28:	strb	r1, [r0]
   11a2c:	b	11aa8 <__assert_fail@plt+0x698>
   11a30:	movw	r0, #61842	; 0xf192
   11a34:	movt	r0, #2
   11a38:	movw	r1, #1
   11a3c:	strb	r1, [r0]
   11a40:	b	11aa8 <__assert_fail@plt+0x698>
   11a44:	movw	r0, #0
   11a48:	bl	1150c <__assert_fail@plt+0xfc>
   11a4c:	movw	r0, #61828	; 0xf184
   11a50:	movt	r0, #2
   11a54:	ldr	r0, [r0]
   11a58:	movw	r1, #61724	; 0xf11c
   11a5c:	movt	r1, #2
   11a60:	ldr	r3, [r1]
   11a64:	movw	r1, #57963	; 0xe26b
   11a68:	movt	r1, #1
   11a6c:	movw	r2, #58054	; 0xe2c6
   11a70:	movt	r2, #1
   11a74:	movw	ip, #58068	; 0xe2d4
   11a78:	movt	ip, #1
   11a7c:	str	ip, [sp]
   11a80:	movw	ip, #58083	; 0xe2e3
   11a84:	movt	ip, #1
   11a88:	str	ip, [sp, #4]
   11a8c:	movw	ip, #0
   11a90:	str	ip, [sp, #8]
   11a94:	bl	165cc <__assert_fail@plt+0x51bc>
   11a98:	movw	r0, #0
   11a9c:	bl	112c0 <exit@plt>
   11aa0:	movw	r0, #1
   11aa4:	bl	1150c <__assert_fail@plt+0xfc>
   11aa8:	b	118b0 <__assert_fail@plt+0x4a0>
   11aac:	ldr	r0, [fp, #-8]
   11ab0:	movw	r1, #61816	; 0xf178
   11ab4:	movt	r1, #2
   11ab8:	ldr	r1, [r1]
   11abc:	sub	r0, r0, r1
   11ac0:	str	r0, [fp, #-32]	; 0xffffffe0
   11ac4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ac8:	cmp	r0, #0
   11acc:	beq	11b08 <__assert_fail@plt+0x6f8>
   11ad0:	movw	r0, #61836	; 0xf18c
   11ad4:	movt	r0, #2
   11ad8:	ldrb	r0, [r0]
   11adc:	tst	r0, #1
   11ae0:	beq	11b08 <__assert_fail@plt+0x6f8>
   11ae4:	movw	r0, #58099	; 0xe2f3
   11ae8:	movt	r0, #1
   11aec:	bl	112cc <gettext@plt>
   11af0:	movw	r1, #1
   11af4:	str	r0, [fp, #-76]	; 0xffffffb4
   11af8:	mov	r0, r1
   11afc:	movw	r1, #0
   11b00:	ldr	r2, [fp, #-76]	; 0xffffffb4
   11b04:	bl	11260 <error@plt>
   11b08:	movw	r0, #61840	; 0xf190
   11b0c:	movt	r0, #2
   11b10:	ldrb	r0, [r0]
   11b14:	and	r0, r0, #1
   11b18:	movw	r1, #61837	; 0xf18d
   11b1c:	movt	r1, #2
   11b20:	ldrb	r1, [r1]
   11b24:	and	r1, r1, #1
   11b28:	add	r0, r0, r1
   11b2c:	movw	r1, #61842	; 0xf192
   11b30:	movt	r1, #2
   11b34:	ldrb	r1, [r1]
   11b38:	and	r1, r1, #1
   11b3c:	add	r0, r0, r1
   11b40:	movw	r1, #61836	; 0xf18c
   11b44:	movt	r1, #2
   11b48:	ldrb	r1, [r1]
   11b4c:	and	r1, r1, #1
   11b50:	add	r0, r0, r1
   11b54:	cmp	r0, #1
   11b58:	ble	11b80 <__assert_fail@plt+0x770>
   11b5c:	movw	r0, #58149	; 0xe325
   11b60:	movt	r0, #1
   11b64:	bl	112cc <gettext@plt>
   11b68:	movw	r1, #1
   11b6c:	str	r0, [sp, #80]	; 0x50
   11b70:	mov	r0, r1
   11b74:	movw	r1, #0
   11b78:	ldr	r2, [sp, #80]	; 0x50
   11b7c:	bl	11260 <error@plt>
   11b80:	movw	r0, #61840	; 0xf190
   11b84:	movt	r0, #2
   11b88:	ldrb	r0, [r0]
   11b8c:	tst	r0, #1
   11b90:	movw	r0, #1
   11b94:	str	r0, [sp, #76]	; 0x4c
   11b98:	bne	11be4 <__assert_fail@plt+0x7d4>
   11b9c:	movw	r0, #61837	; 0xf18d
   11ba0:	movt	r0, #2
   11ba4:	ldrb	r0, [r0]
   11ba8:	tst	r0, #1
   11bac:	movw	r0, #1
   11bb0:	str	r0, [sp, #76]	; 0x4c
   11bb4:	bne	11be4 <__assert_fail@plt+0x7d4>
   11bb8:	movw	r0, #61842	; 0xf192
   11bbc:	movt	r0, #2
   11bc0:	ldrb	r0, [r0]
   11bc4:	tst	r0, #1
   11bc8:	movw	r0, #1
   11bcc:	str	r0, [sp, #76]	; 0x4c
   11bd0:	bne	11be4 <__assert_fail@plt+0x7d4>
   11bd4:	movw	r0, #61836	; 0xf18c
   11bd8:	movt	r0, #2
   11bdc:	ldrb	r0, [r0]
   11be0:	str	r0, [sp, #76]	; 0x4c
   11be4:	ldr	r0, [sp, #76]	; 0x4c
   11be8:	mvn	r1, #0
   11bec:	eor	r0, r0, r1
   11bf0:	and	r0, r0, #1
   11bf4:	strb	r0, [fp, #-33]	; 0xffffffdf
   11bf8:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   11bfc:	tst	r0, #1
   11c00:	beq	11c50 <__assert_fail@plt+0x840>
   11c04:	movw	r0, #61839	; 0xf18f
   11c08:	movt	r0, #2
   11c0c:	ldrb	r0, [r0]
   11c10:	tst	r0, #1
   11c14:	bne	11c2c <__assert_fail@plt+0x81c>
   11c18:	movw	r0, #61838	; 0xf18e
   11c1c:	movt	r0, #2
   11c20:	ldrb	r0, [r0]
   11c24:	tst	r0, #1
   11c28:	beq	11c50 <__assert_fail@plt+0x840>
   11c2c:	movw	r0, #58193	; 0xe351
   11c30:	movt	r0, #1
   11c34:	bl	112cc <gettext@plt>
   11c38:	movw	r1, #1
   11c3c:	str	r0, [sp, #72]	; 0x48
   11c40:	mov	r0, r1
   11c44:	movw	r1, #0
   11c48:	ldr	r2, [sp, #72]	; 0x48
   11c4c:	bl	11260 <error@plt>
   11c50:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   11c54:	tst	r0, #1
   11c58:	beq	11c94 <__assert_fail@plt+0x884>
   11c5c:	movw	r0, #61841	; 0xf191
   11c60:	movt	r0, #2
   11c64:	ldrb	r0, [r0]
   11c68:	tst	r0, #1
   11c6c:	beq	11c94 <__assert_fail@plt+0x884>
   11c70:	movw	r0, #58247	; 0xe387
   11c74:	movt	r0, #1
   11c78:	bl	112cc <gettext@plt>
   11c7c:	movw	r1, #1
   11c80:	str	r0, [sp, #68]	; 0x44
   11c84:	mov	r0, r1
   11c88:	movw	r1, #0
   11c8c:	ldr	r2, [sp, #68]	; 0x44
   11c90:	bl	11260 <error@plt>
   11c94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c98:	cmp	r0, #0
   11c9c:	bne	11d68 <__assert_fail@plt+0x958>
   11ca0:	movw	r0, #61836	; 0xf18c
   11ca4:	movt	r0, #2
   11ca8:	ldrb	r0, [r0]
   11cac:	tst	r0, #1
   11cb0:	bne	11cd8 <__assert_fail@plt+0x8c8>
   11cb4:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   11cb8:	tst	r0, #1
   11cbc:	beq	11d68 <__assert_fail@plt+0x958>
   11cc0:	movw	r0, #58293	; 0xe3b5
   11cc4:	movt	r0, #1
   11cc8:	bl	1126c <getenv@plt>
   11ccc:	movw	r1, #0
   11cd0:	cmp	r0, r1
   11cd4:	bne	11d68 <__assert_fail@plt+0x958>
   11cd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11cdc:	cmp	r0, #0
   11ce0:	beq	11d0c <__assert_fail@plt+0x8fc>
   11ce4:	movw	r0, #61844	; 0xf194
   11ce8:	movt	r0, #2
   11cec:	bl	11230 <getcon@plt>
   11cf0:	cmp	r0, #0
   11cf4:	beq	11d0c <__assert_fail@plt+0x8fc>
   11cf8:	movw	r0, #61836	; 0xf18c
   11cfc:	movt	r0, #2
   11d00:	ldrb	r0, [r0]
   11d04:	tst	r0, #1
   11d08:	bne	11d40 <__assert_fail@plt+0x930>
   11d0c:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   11d10:	tst	r0, #1
   11d14:	beq	11d64 <__assert_fail@plt+0x954>
   11d18:	movw	r0, #61844	; 0xf194
   11d1c:	movt	r0, #2
   11d20:	bl	12284 <__assert_fail@plt+0xe74>
   11d24:	cmp	r0, #0
   11d28:	bge	11d64 <__assert_fail@plt+0x954>
   11d2c:	movw	r0, #61836	; 0xf18c
   11d30:	movt	r0, #2
   11d34:	ldrb	r0, [r0]
   11d38:	tst	r0, #1
   11d3c:	beq	11d64 <__assert_fail@plt+0x954>
   11d40:	movw	r0, #58309	; 0xe3c5
   11d44:	movt	r0, #1
   11d48:	bl	112cc <gettext@plt>
   11d4c:	movw	r1, #1
   11d50:	str	r0, [sp, #64]	; 0x40
   11d54:	mov	r0, r1
   11d58:	movw	r1, #0
   11d5c:	ldr	r2, [sp, #64]	; 0x40
   11d60:	bl	11260 <error@plt>
   11d64:	b	11d68 <__assert_fail@plt+0x958>
   11d68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d6c:	cmp	r0, #1
   11d70:	bcc	11f68 <__assert_fail@plt+0xb58>
   11d74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d78:	cmp	r0, #1
   11d7c:	movw	r0, #0
   11d80:	movhi	r0, #1
   11d84:	tst	r0, #1
   11d88:	movw	r0, #1
   11d8c:	moveq	r0, #0
   11d90:	cmp	r0, #0
   11d94:	movw	r0, #0
   11d98:	movne	r0, #1
   11d9c:	and	r0, r0, #1
   11da0:	movw	r1, #61848	; 0xf198
   11da4:	movt	r1, #2
   11da8:	strb	r0, [r1]
   11dac:	movw	r0, #61816	; 0xf178
   11db0:	movt	r0, #2
   11db4:	ldr	r0, [r0]
   11db8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11dbc:	add	r0, r1, r0
   11dc0:	str	r0, [fp, #-32]	; 0xffffffe0
   11dc4:	movw	r0, #61816	; 0xf178
   11dc8:	movt	r0, #2
   11dcc:	ldr	r0, [r0]
   11dd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11dd4:	cmp	r0, r1
   11dd8:	bcs	11f64 <__assert_fail@plt+0xb54>
   11ddc:	mov	r0, #0
   11de0:	str	r0, [fp, #-40]	; 0xffffffd8
   11de4:	ldr	r0, [fp, #-12]
   11de8:	movw	r1, #61816	; 0xf178
   11dec:	movt	r1, #2
   11df0:	ldr	r1, [r1]
   11df4:	add	r0, r0, r1, lsl #2
   11df8:	ldr	r0, [r0]
   11dfc:	str	r0, [fp, #-44]	; 0xffffffd4
   11e00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11e04:	ldrsb	r0, [r0]
   11e08:	cmp	r0, #0
   11e0c:	beq	11e58 <__assert_fail@plt+0xa48>
   11e10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11e14:	movw	r1, #61852	; 0xf19c
   11e18:	movt	r1, #2
   11e1c:	movw	r2, #0
   11e20:	str	r2, [sp, #60]	; 0x3c
   11e24:	ldr	r3, [sp, #60]	; 0x3c
   11e28:	ldr	ip, [sp, #60]	; 0x3c
   11e2c:	str	ip, [sp]
   11e30:	bl	158c8 <__assert_fail@plt+0x44b8>
   11e34:	movw	r1, #0
   11e38:	cmp	r0, r1
   11e3c:	bne	11e54 <__assert_fail@plt+0xa44>
   11e40:	movw	r0, #61852	; 0xf19c
   11e44:	movt	r0, #2
   11e48:	ldr	r0, [r0]
   11e4c:	bl	11170 <getpwuid@plt>
   11e50:	str	r0, [fp, #-40]	; 0xffffffd8
   11e54:	b	11e58 <__assert_fail@plt+0xa48>
   11e58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11e5c:	movw	r1, #0
   11e60:	cmp	r0, r1
   11e64:	bne	11eec <__assert_fail@plt+0xadc>
   11e68:	bl	11308 <__errno_location@plt>
   11e6c:	ldr	r1, [r0]
   11e70:	movw	r0, #58335	; 0xe3df
   11e74:	movt	r0, #1
   11e78:	str	r1, [sp, #56]	; 0x38
   11e7c:	bl	112cc <gettext@plt>
   11e80:	ldr	r1, [fp, #-12]
   11e84:	movw	r2, #61816	; 0xf178
   11e88:	movt	r2, #2
   11e8c:	ldr	r2, [r2]
   11e90:	add	r1, r1, r2, lsl #2
   11e94:	ldr	r1, [r1]
   11e98:	str	r0, [sp, #52]	; 0x34
   11e9c:	mov	r0, r1
   11ea0:	bl	15790 <__assert_fail@plt+0x4380>
   11ea4:	movw	r1, #0
   11ea8:	str	r0, [sp, #48]	; 0x30
   11eac:	mov	r0, r1
   11eb0:	ldr	r1, [sp, #56]	; 0x38
   11eb4:	ldr	r2, [sp, #52]	; 0x34
   11eb8:	ldr	r3, [sp, #48]	; 0x30
   11ebc:	bl	11260 <error@plt>
   11ec0:	movw	r0, #61720	; 0xf118
   11ec4:	movt	r0, #2
   11ec8:	ldrb	r1, [r0]
   11ecc:	and	r1, r1, #1
   11ed0:	and	r1, r1, #0
   11ed4:	cmp	r1, #0
   11ed8:	movw	r1, #0
   11edc:	movne	r1, #1
   11ee0:	and	r1, r1, #1
   11ee4:	strb	r1, [r0]
   11ee8:	b	11f4c <__assert_fail@plt+0xb3c>
   11eec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11ef0:	ldr	r0, [r0]
   11ef4:	bl	19454 <__assert_fail@plt+0x8044>
   11ef8:	str	r0, [fp, #-28]	; 0xffffffe4
   11efc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f00:	ldr	r0, [r0, #8]
   11f04:	movw	r1, #61852	; 0xf19c
   11f08:	movt	r1, #2
   11f0c:	str	r0, [r1]
   11f10:	movw	r1, #61856	; 0xf1a0
   11f14:	movt	r1, #2
   11f18:	str	r0, [r1]
   11f1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f20:	ldr	r0, [r0, #12]
   11f24:	movw	r1, #61860	; 0xf1a4
   11f28:	movt	r1, #2
   11f2c:	str	r0, [r1]
   11f30:	movw	r1, #61864	; 0xf1a8
   11f34:	movt	r1, #2
   11f38:	str	r0, [r1]
   11f3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f40:	bl	12298 <__assert_fail@plt+0xe88>
   11f44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f48:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   11f4c:	movw	r0, #61816	; 0xf178
   11f50:	movt	r0, #2
   11f54:	ldr	r1, [r0]
   11f58:	add	r1, r1, #1
   11f5c:	str	r1, [r0]
   11f60:	b	11dc4 <__assert_fail@plt+0x9b4>
   11f64:	b	12258 <__assert_fail@plt+0xe48>
   11f68:	mvn	r0, #0
   11f6c:	str	r0, [fp, #-48]	; 0xffffffd0
   11f70:	str	r0, [fp, #-52]	; 0xffffffcc
   11f74:	movw	r0, #61840	; 0xf190
   11f78:	movt	r0, #2
   11f7c:	ldrb	r0, [r0]
   11f80:	tst	r0, #1
   11f84:	beq	11fa0 <__assert_fail@plt+0xb90>
   11f88:	movw	r0, #61839	; 0xf18f
   11f8c:	movt	r0, #2
   11f90:	ldrb	r0, [r0]
   11f94:	tst	r0, #1
   11f98:	bne	1204c <__assert_fail@plt+0xc3c>
   11f9c:	b	11fdc <__assert_fail@plt+0xbcc>
   11fa0:	movw	r0, #61837	; 0xf18d
   11fa4:	movt	r0, #2
   11fa8:	ldrb	r0, [r0]
   11fac:	tst	r0, #1
   11fb0:	bne	1204c <__assert_fail@plt+0xc3c>
   11fb4:	movw	r0, #61842	; 0xf192
   11fb8:	movt	r0, #2
   11fbc:	ldrb	r0, [r0]
   11fc0:	tst	r0, #1
   11fc4:	bne	1204c <__assert_fail@plt+0xc3c>
   11fc8:	movw	r0, #61836	; 0xf18c
   11fcc:	movt	r0, #2
   11fd0:	ldrb	r0, [r0]
   11fd4:	tst	r0, #1
   11fd8:	bne	1204c <__assert_fail@plt+0xc3c>
   11fdc:	bl	11308 <__errno_location@plt>
   11fe0:	movw	r1, #0
   11fe4:	str	r1, [r0]
   11fe8:	bl	111f4 <geteuid@plt>
   11fec:	movw	r1, #61852	; 0xf19c
   11ff0:	movt	r1, #2
   11ff4:	str	r0, [r1]
   11ff8:	ldr	r0, [r1]
   11ffc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12000:	cmp	r0, r1
   12004:	bne	12048 <__assert_fail@plt+0xc38>
   12008:	bl	11308 <__errno_location@plt>
   1200c:	ldr	r0, [r0]
   12010:	cmp	r0, #0
   12014:	beq	12048 <__assert_fail@plt+0xc38>
   12018:	bl	11308 <__errno_location@plt>
   1201c:	ldr	r1, [r0]
   12020:	movw	r0, #58352	; 0xe3f0
   12024:	movt	r0, #1
   12028:	str	r1, [sp, #44]	; 0x2c
   1202c:	bl	112cc <gettext@plt>
   12030:	movw	r1, #1
   12034:	str	r0, [sp, #40]	; 0x28
   12038:	mov	r0, r1
   1203c:	ldr	r1, [sp, #44]	; 0x2c
   12040:	ldr	r2, [sp, #40]	; 0x28
   12044:	bl	11260 <error@plt>
   12048:	b	1204c <__assert_fail@plt+0xc3c>
   1204c:	movw	r0, #61840	; 0xf190
   12050:	movt	r0, #2
   12054:	ldrb	r0, [r0]
   12058:	tst	r0, #1
   1205c:	beq	12078 <__assert_fail@plt+0xc68>
   12060:	movw	r0, #61839	; 0xf18f
   12064:	movt	r0, #2
   12068:	ldrb	r0, [r0]
   1206c:	tst	r0, #1
   12070:	bne	120b4 <__assert_fail@plt+0xca4>
   12074:	b	12124 <__assert_fail@plt+0xd14>
   12078:	movw	r0, #61837	; 0xf18d
   1207c:	movt	r0, #2
   12080:	ldrb	r0, [r0]
   12084:	tst	r0, #1
   12088:	bne	12124 <__assert_fail@plt+0xd14>
   1208c:	movw	r0, #61842	; 0xf192
   12090:	movt	r0, #2
   12094:	ldrb	r0, [r0]
   12098:	tst	r0, #1
   1209c:	bne	120b4 <__assert_fail@plt+0xca4>
   120a0:	movw	r0, #61836	; 0xf18c
   120a4:	movt	r0, #2
   120a8:	ldrb	r0, [r0]
   120ac:	tst	r0, #1
   120b0:	bne	12124 <__assert_fail@plt+0xd14>
   120b4:	bl	11308 <__errno_location@plt>
   120b8:	movw	r1, #0
   120bc:	str	r1, [r0]
   120c0:	bl	11194 <getuid@plt>
   120c4:	movw	r1, #61856	; 0xf1a0
   120c8:	movt	r1, #2
   120cc:	str	r0, [r1]
   120d0:	ldr	r0, [r1]
   120d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   120d8:	cmp	r0, r1
   120dc:	bne	12120 <__assert_fail@plt+0xd10>
   120e0:	bl	11308 <__errno_location@plt>
   120e4:	ldr	r0, [r0]
   120e8:	cmp	r0, #0
   120ec:	beq	12120 <__assert_fail@plt+0xd10>
   120f0:	bl	11308 <__errno_location@plt>
   120f4:	ldr	r1, [r0]
   120f8:	movw	r0, #58377	; 0xe409
   120fc:	movt	r0, #1
   12100:	str	r1, [sp, #36]	; 0x24
   12104:	bl	112cc <gettext@plt>
   12108:	movw	r1, #1
   1210c:	str	r0, [sp, #32]
   12110:	mov	r0, r1
   12114:	ldr	r1, [sp, #36]	; 0x24
   12118:	ldr	r2, [sp, #32]
   1211c:	bl	11260 <error@plt>
   12120:	b	12124 <__assert_fail@plt+0xd14>
   12124:	movw	r0, #61840	; 0xf190
   12128:	movt	r0, #2
   1212c:	ldrb	r0, [r0]
   12130:	tst	r0, #1
   12134:	bne	12250 <__assert_fail@plt+0xe40>
   12138:	movw	r0, #61837	; 0xf18d
   1213c:	movt	r0, #2
   12140:	ldrb	r0, [r0]
   12144:	tst	r0, #1
   12148:	bne	12174 <__assert_fail@plt+0xd64>
   1214c:	movw	r0, #61842	; 0xf192
   12150:	movt	r0, #2
   12154:	ldrb	r0, [r0]
   12158:	tst	r0, #1
   1215c:	bne	12174 <__assert_fail@plt+0xd64>
   12160:	movw	r0, #61836	; 0xf18c
   12164:	movt	r0, #2
   12168:	ldrb	r0, [r0]
   1216c:	tst	r0, #1
   12170:	bne	12250 <__assert_fail@plt+0xe40>
   12174:	bl	11308 <__errno_location@plt>
   12178:	movw	r1, #0
   1217c:	str	r1, [r0]
   12180:	bl	1120c <getegid@plt>
   12184:	movw	r1, #61860	; 0xf1a4
   12188:	movt	r1, #2
   1218c:	str	r0, [r1]
   12190:	ldr	r0, [r1]
   12194:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12198:	cmp	r0, r1
   1219c:	bne	121e0 <__assert_fail@plt+0xdd0>
   121a0:	bl	11308 <__errno_location@plt>
   121a4:	ldr	r0, [r0]
   121a8:	cmp	r0, #0
   121ac:	beq	121e0 <__assert_fail@plt+0xdd0>
   121b0:	bl	11308 <__errno_location@plt>
   121b4:	ldr	r1, [r0]
   121b8:	movw	r0, #58397	; 0xe41d
   121bc:	movt	r0, #1
   121c0:	str	r1, [sp, #28]
   121c4:	bl	112cc <gettext@plt>
   121c8:	movw	r1, #1
   121cc:	str	r0, [sp, #24]
   121d0:	mov	r0, r1
   121d4:	ldr	r1, [sp, #28]
   121d8:	ldr	r2, [sp, #24]
   121dc:	bl	11260 <error@plt>
   121e0:	bl	11308 <__errno_location@plt>
   121e4:	movw	r1, #0
   121e8:	str	r1, [r0]
   121ec:	bl	11320 <getgid@plt>
   121f0:	movw	r1, #61864	; 0xf1a8
   121f4:	movt	r1, #2
   121f8:	str	r0, [r1]
   121fc:	ldr	r0, [r1]
   12200:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12204:	cmp	r0, r1
   12208:	bne	1224c <__assert_fail@plt+0xe3c>
   1220c:	bl	11308 <__errno_location@plt>
   12210:	ldr	r0, [r0]
   12214:	cmp	r0, #0
   12218:	beq	1224c <__assert_fail@plt+0xe3c>
   1221c:	bl	11308 <__errno_location@plt>
   12220:	ldr	r1, [r0]
   12224:	movw	r0, #58422	; 0xe436
   12228:	movt	r0, #1
   1222c:	str	r1, [sp, #20]
   12230:	bl	112cc <gettext@plt>
   12234:	movw	r1, #1
   12238:	str	r0, [sp, #16]
   1223c:	mov	r0, r1
   12240:	ldr	r1, [sp, #20]
   12244:	ldr	r2, [sp, #16]
   12248:	bl	11260 <error@plt>
   1224c:	b	12250 <__assert_fail@plt+0xe40>
   12250:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12254:	bl	12298 <__assert_fail@plt+0xe88>
   12258:	movw	r0, #61720	; 0xf118
   1225c:	movt	r0, #2
   12260:	ldrb	r0, [r0]
   12264:	tst	r0, #1
   12268:	movw	r0, #0
   1226c:	moveq	r0, #1
   12270:	mov	sp, fp
   12274:	pop	{fp, pc}
   12278:	movw	r0, #0
   1227c:	and	r0, r0, #1
   12280:	bx	lr
   12284:	sub	sp, sp, #4
   12288:	str	r0, [sp]
   1228c:	mvn	r0, #0
   12290:	add	sp, sp, #4
   12294:	bx	lr
   12298:	push	{fp, lr}
   1229c:	mov	fp, sp
   122a0:	sub	sp, sp, #24
   122a4:	str	r0, [fp, #-4]
   122a8:	movw	r0, #61840	; 0xf190
   122ac:	movt	r0, #2
   122b0:	ldrb	r0, [r0]
   122b4:	tst	r0, #1
   122b8:	beq	12300 <__assert_fail@plt+0xef0>
   122bc:	movw	r0, #61839	; 0xf18f
   122c0:	movt	r0, #2
   122c4:	ldrb	r0, [r0]
   122c8:	tst	r0, #1
   122cc:	beq	122e4 <__assert_fail@plt+0xed4>
   122d0:	movw	r0, #61856	; 0xf1a0
   122d4:	movt	r0, #2
   122d8:	ldr	r0, [r0]
   122dc:	str	r0, [fp, #-8]
   122e0:	b	122f4 <__assert_fail@plt+0xee4>
   122e4:	movw	r0, #61852	; 0xf19c
   122e8:	movt	r0, #2
   122ec:	ldr	r0, [r0]
   122f0:	str	r0, [fp, #-8]
   122f4:	ldr	r0, [fp, #-8]
   122f8:	bl	124fc <__assert_fail@plt+0x10ec>
   122fc:	b	12480 <__assert_fail@plt+0x1070>
   12300:	movw	r0, #61837	; 0xf18d
   12304:	movt	r0, #2
   12308:	ldrb	r0, [r0]
   1230c:	tst	r0, #1
   12310:	beq	12394 <__assert_fail@plt+0xf84>
   12314:	movw	r0, #61839	; 0xf18f
   12318:	movt	r0, #2
   1231c:	ldrb	r0, [r0]
   12320:	tst	r0, #1
   12324:	beq	1233c <__assert_fail@plt+0xf2c>
   12328:	movw	r0, #61864	; 0xf1a8
   1232c:	movt	r0, #2
   12330:	ldr	r0, [r0]
   12334:	str	r0, [sp, #12]
   12338:	b	1234c <__assert_fail@plt+0xf3c>
   1233c:	movw	r0, #61860	; 0xf1a4
   12340:	movt	r0, #2
   12344:	ldr	r0, [r0]
   12348:	str	r0, [sp, #12]
   1234c:	ldr	r0, [sp, #12]
   12350:	movw	r1, #61838	; 0xf18e
   12354:	movt	r1, #2
   12358:	ldrb	r1, [r1]
   1235c:	and	r1, r1, #1
   12360:	bl	12d4c <__assert_fail@plt+0x193c>
   12364:	and	r0, r0, #1
   12368:	movw	r1, #61720	; 0xf118
   1236c:	movt	r1, #2
   12370:	ldrb	r2, [r1]
   12374:	and	r2, r2, #1
   12378:	and	r0, r2, r0
   1237c:	cmp	r0, #0
   12380:	movw	r0, #0
   12384:	movne	r0, #1
   12388:	and	r0, r0, #1
   1238c:	strb	r0, [r1]
   12390:	b	1247c <__assert_fail@plt+0x106c>
   12394:	movw	r0, #61842	; 0xf192
   12398:	movt	r0, #2
   1239c:	ldrb	r0, [r0]
   123a0:	tst	r0, #1
   123a4:	beq	12438 <__assert_fail@plt+0x1028>
   123a8:	ldr	r0, [fp, #-4]
   123ac:	movw	r1, #61856	; 0xf1a0
   123b0:	movt	r1, #2
   123b4:	ldr	r1, [r1]
   123b8:	movw	r2, #61864	; 0xf1a8
   123bc:	movt	r2, #2
   123c0:	ldr	r2, [r2]
   123c4:	movw	r3, #61860	; 0xf1a4
   123c8:	movt	r3, #2
   123cc:	ldr	r3, [r3]
   123d0:	movw	ip, #61838	; 0xf18e
   123d4:	movt	ip, #2
   123d8:	ldrb	ip, [ip]
   123dc:	movw	lr, #61841	; 0xf191
   123e0:	movt	lr, #2
   123e4:	ldrb	lr, [lr]
   123e8:	tst	lr, #1
   123ec:	movw	lr, #0
   123f0:	moveq	lr, #32
   123f4:	and	ip, ip, #1
   123f8:	str	ip, [sp]
   123fc:	and	ip, lr, #255	; 0xff
   12400:	str	ip, [sp, #4]
   12404:	bl	12ab8 <__assert_fail@plt+0x16a8>
   12408:	and	r0, r0, #1
   1240c:	movw	r1, #61720	; 0xf118
   12410:	movt	r1, #2
   12414:	ldrb	r2, [r1]
   12418:	and	r2, r2, #1
   1241c:	and	r0, r2, r0
   12420:	cmp	r0, #0
   12424:	movw	r0, #0
   12428:	movne	r0, #1
   1242c:	and	r0, r0, #1
   12430:	strb	r0, [r1]
   12434:	b	12478 <__assert_fail@plt+0x1068>
   12438:	movw	r0, #61836	; 0xf18c
   1243c:	movt	r0, #2
   12440:	ldrb	r0, [r0]
   12444:	tst	r0, #1
   12448:	beq	1246c <__assert_fail@plt+0x105c>
   1244c:	movw	r0, #61844	; 0xf194
   12450:	movt	r0, #2
   12454:	ldr	r0, [r0]
   12458:	movw	r1, #61828	; 0xf184
   1245c:	movt	r1, #2
   12460:	ldr	r1, [r1]
   12464:	bl	11134 <fputs_unlocked@plt>
   12468:	b	12474 <__assert_fail@plt+0x1064>
   1246c:	ldr	r0, [fp, #-4]
   12470:	bl	125f4 <__assert_fail@plt+0x11e4>
   12474:	b	12478 <__assert_fail@plt+0x1068>
   12478:	b	1247c <__assert_fail@plt+0x106c>
   1247c:	b	12480 <__assert_fail@plt+0x1070>
   12480:	movw	r0, #61841	; 0xf191
   12484:	movt	r0, #2
   12488:	ldrb	r0, [r0]
   1248c:	tst	r0, #1
   12490:	beq	124d8 <__assert_fail@plt+0x10c8>
   12494:	movw	r0, #61842	; 0xf192
   12498:	movt	r0, #2
   1249c:	ldrb	r0, [r0]
   124a0:	tst	r0, #1
   124a4:	beq	124d8 <__assert_fail@plt+0x10c8>
   124a8:	movw	r0, #61848	; 0xf198
   124ac:	movt	r0, #2
   124b0:	ldrb	r0, [r0]
   124b4:	tst	r0, #1
   124b8:	beq	124d8 <__assert_fail@plt+0x10c8>
   124bc:	movw	r0, #0
   124c0:	bl	11404 <putchar_unlocked@plt>
   124c4:	movw	r1, #0
   124c8:	str	r0, [sp, #8]
   124cc:	mov	r0, r1
   124d0:	bl	11404 <putchar_unlocked@plt>
   124d4:	b	124f4 <__assert_fail@plt+0x10e4>
   124d8:	movw	r0, #61841	; 0xf191
   124dc:	movt	r0, #2
   124e0:	ldrb	r0, [r0]
   124e4:	tst	r0, #1
   124e8:	movw	r0, #0
   124ec:	moveq	r0, #10
   124f0:	bl	11404 <putchar_unlocked@plt>
   124f4:	mov	sp, fp
   124f8:	pop	{fp, pc}
   124fc:	push	{fp, lr}
   12500:	mov	fp, sp
   12504:	sub	sp, sp, #24
   12508:	str	r0, [fp, #-4]
   1250c:	movw	r0, #0
   12510:	str	r0, [fp, #-8]
   12514:	movw	r0, #61838	; 0xf18e
   12518:	movt	r0, #2
   1251c:	ldrb	r0, [r0]
   12520:	tst	r0, #1
   12524:	beq	125a4 <__assert_fail@plt+0x1194>
   12528:	ldr	r0, [fp, #-4]
   1252c:	bl	11170 <getpwuid@plt>
   12530:	str	r0, [fp, #-8]
   12534:	ldr	r0, [fp, #-8]
   12538:	movw	r1, #0
   1253c:	cmp	r0, r1
   12540:	bne	125a0 <__assert_fail@plt+0x1190>
   12544:	movw	r0, #58788	; 0xe5a4
   12548:	movt	r0, #1
   1254c:	bl	112cc <gettext@plt>
   12550:	sub	r1, fp, #4
   12554:	str	r0, [sp, #8]
   12558:	mov	r0, r1
   1255c:	bl	12a58 <__assert_fail@plt+0x1648>
   12560:	movw	r1, #0
   12564:	str	r0, [sp, #4]
   12568:	mov	r0, r1
   1256c:	ldr	r2, [sp, #8]
   12570:	ldr	r3, [sp, #4]
   12574:	bl	11260 <error@plt>
   12578:	movw	r0, #61720	; 0xf118
   1257c:	movt	r0, #2
   12580:	ldrb	r1, [r0]
   12584:	and	r1, r1, #1
   12588:	and	r1, r1, #0
   1258c:	cmp	r1, #0
   12590:	movw	r1, #0
   12594:	movne	r1, #1
   12598:	and	r1, r1, #1
   1259c:	strb	r1, [r0]
   125a0:	b	125a4 <__assert_fail@plt+0x1194>
   125a4:	ldr	r0, [fp, #-8]
   125a8:	movw	r1, #0
   125ac:	cmp	r0, r1
   125b0:	beq	125c4 <__assert_fail@plt+0x11b4>
   125b4:	ldr	r0, [fp, #-8]
   125b8:	ldr	r0, [r0]
   125bc:	str	r0, [sp]
   125c0:	b	125d0 <__assert_fail@plt+0x11c0>
   125c4:	sub	r0, fp, #4
   125c8:	bl	12a58 <__assert_fail@plt+0x1648>
   125cc:	str	r0, [sp]
   125d0:	ldr	r0, [sp]
   125d4:	str	r0, [sp, #12]
   125d8:	ldr	r0, [sp, #12]
   125dc:	movw	r1, #61828	; 0xf184
   125e0:	movt	r1, #2
   125e4:	ldr	r1, [r1]
   125e8:	bl	11134 <fputs_unlocked@plt>
   125ec:	mov	sp, fp
   125f0:	pop	{fp, pc}
   125f4:	push	{fp, lr}
   125f8:	mov	fp, sp
   125fc:	sub	sp, sp, #104	; 0x68
   12600:	str	r0, [fp, #-4]
   12604:	movw	r0, #58835	; 0xe5d3
   12608:	movt	r0, #1
   1260c:	bl	112cc <gettext@plt>
   12610:	movw	r1, #61856	; 0xf1a0
   12614:	movt	r1, #2
   12618:	str	r0, [fp, #-32]	; 0xffffffe0
   1261c:	mov	r0, r1
   12620:	bl	12a58 <__assert_fail@plt+0x1648>
   12624:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12628:	str	r0, [fp, #-36]	; 0xffffffdc
   1262c:	mov	r0, r1
   12630:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12634:	bl	1117c <printf@plt>
   12638:	movw	r1, #61856	; 0xf1a0
   1263c:	movt	r1, #2
   12640:	ldr	r1, [r1]
   12644:	str	r0, [fp, #-40]	; 0xffffffd8
   12648:	mov	r0, r1
   1264c:	bl	11170 <getpwuid@plt>
   12650:	str	r0, [fp, #-8]
   12654:	ldr	r0, [fp, #-8]
   12658:	movw	r1, #0
   1265c:	cmp	r0, r1
   12660:	beq	12678 <__assert_fail@plt+0x1268>
   12664:	ldr	r0, [fp, #-8]
   12668:	ldr	r1, [r0]
   1266c:	movw	r0, #58820	; 0xe5c4
   12670:	movt	r0, #1
   12674:	bl	1117c <printf@plt>
   12678:	movw	r0, #58825	; 0xe5c9
   1267c:	movt	r0, #1
   12680:	bl	112cc <gettext@plt>
   12684:	movw	r1, #61864	; 0xf1a8
   12688:	movt	r1, #2
   1268c:	str	r0, [fp, #-44]	; 0xffffffd4
   12690:	mov	r0, r1
   12694:	bl	12a88 <__assert_fail@plt+0x1678>
   12698:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1269c:	str	r0, [fp, #-48]	; 0xffffffd0
   126a0:	mov	r0, r1
   126a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   126a8:	bl	1117c <printf@plt>
   126ac:	movw	r1, #61864	; 0xf1a8
   126b0:	movt	r1, #2
   126b4:	ldr	r1, [r1]
   126b8:	str	r0, [sp, #52]	; 0x34
   126bc:	mov	r0, r1
   126c0:	bl	113ec <getgrgid@plt>
   126c4:	str	r0, [fp, #-12]
   126c8:	ldr	r0, [fp, #-12]
   126cc:	movw	r1, #0
   126d0:	cmp	r0, r1
   126d4:	beq	126ec <__assert_fail@plt+0x12dc>
   126d8:	ldr	r0, [fp, #-12]
   126dc:	ldr	r1, [r0]
   126e0:	movw	r0, #58820	; 0xe5c4
   126e4:	movt	r0, #1
   126e8:	bl	1117c <printf@plt>
   126ec:	movw	r0, #61852	; 0xf19c
   126f0:	movt	r0, #2
   126f4:	ldr	r0, [r0]
   126f8:	movw	r1, #61856	; 0xf1a0
   126fc:	movt	r1, #2
   12700:	ldr	r1, [r1]
   12704:	cmp	r0, r1
   12708:	beq	12784 <__assert_fail@plt+0x1374>
   1270c:	movw	r0, #58833	; 0xe5d1
   12710:	movt	r0, #1
   12714:	bl	112cc <gettext@plt>
   12718:	movw	r1, #61852	; 0xf19c
   1271c:	movt	r1, #2
   12720:	str	r0, [sp, #48]	; 0x30
   12724:	mov	r0, r1
   12728:	bl	12a58 <__assert_fail@plt+0x1648>
   1272c:	ldr	r1, [sp, #48]	; 0x30
   12730:	str	r0, [sp, #44]	; 0x2c
   12734:	mov	r0, r1
   12738:	ldr	r1, [sp, #44]	; 0x2c
   1273c:	bl	1117c <printf@plt>
   12740:	movw	r1, #61852	; 0xf19c
   12744:	movt	r1, #2
   12748:	ldr	r1, [r1]
   1274c:	str	r0, [sp, #40]	; 0x28
   12750:	mov	r0, r1
   12754:	bl	11170 <getpwuid@plt>
   12758:	str	r0, [fp, #-8]
   1275c:	ldr	r0, [fp, #-8]
   12760:	movw	r1, #0
   12764:	cmp	r0, r1
   12768:	beq	12780 <__assert_fail@plt+0x1370>
   1276c:	ldr	r0, [fp, #-8]
   12770:	ldr	r1, [r0]
   12774:	movw	r0, #58820	; 0xe5c4
   12778:	movt	r0, #1
   1277c:	bl	1117c <printf@plt>
   12780:	b	12784 <__assert_fail@plt+0x1374>
   12784:	movw	r0, #61860	; 0xf1a4
   12788:	movt	r0, #2
   1278c:	ldr	r0, [r0]
   12790:	movw	r1, #61864	; 0xf1a8
   12794:	movt	r1, #2
   12798:	ldr	r1, [r1]
   1279c:	cmp	r0, r1
   127a0:	beq	1281c <__assert_fail@plt+0x140c>
   127a4:	movw	r0, #58842	; 0xe5da
   127a8:	movt	r0, #1
   127ac:	bl	112cc <gettext@plt>
   127b0:	movw	r1, #61860	; 0xf1a4
   127b4:	movt	r1, #2
   127b8:	str	r0, [sp, #36]	; 0x24
   127bc:	mov	r0, r1
   127c0:	bl	12a88 <__assert_fail@plt+0x1678>
   127c4:	ldr	r1, [sp, #36]	; 0x24
   127c8:	str	r0, [sp, #32]
   127cc:	mov	r0, r1
   127d0:	ldr	r1, [sp, #32]
   127d4:	bl	1117c <printf@plt>
   127d8:	movw	r1, #61860	; 0xf1a4
   127dc:	movt	r1, #2
   127e0:	ldr	r1, [r1]
   127e4:	str	r0, [sp, #28]
   127e8:	mov	r0, r1
   127ec:	bl	113ec <getgrgid@plt>
   127f0:	str	r0, [fp, #-12]
   127f4:	ldr	r0, [fp, #-12]
   127f8:	movw	r1, #0
   127fc:	cmp	r0, r1
   12800:	beq	12818 <__assert_fail@plt+0x1408>
   12804:	ldr	r0, [fp, #-12]
   12808:	ldr	r1, [r0]
   1280c:	movw	r0, #58820	; 0xe5c4
   12810:	movt	r0, #1
   12814:	bl	1117c <printf@plt>
   12818:	b	1281c <__assert_fail@plt+0x140c>
   1281c:	ldr	r0, [fp, #-4]
   12820:	movw	r1, #0
   12824:	cmp	r0, r1
   12828:	beq	12864 <__assert_fail@plt+0x1454>
   1282c:	ldr	r0, [fp, #-8]
   12830:	movw	r1, #0
   12834:	cmp	r0, r1
   12838:	beq	1284c <__assert_fail@plt+0x143c>
   1283c:	ldr	r0, [fp, #-8]
   12840:	ldr	r0, [r0, #12]
   12844:	str	r0, [sp, #24]
   12848:	b	12858 <__assert_fail@plt+0x1448>
   1284c:	mvn	r0, #0
   12850:	str	r0, [sp, #24]
   12854:	b	12858 <__assert_fail@plt+0x1448>
   12858:	ldr	r0, [sp, #24]
   1285c:	str	r0, [fp, #-20]	; 0xffffffec
   12860:	b	12874 <__assert_fail@plt+0x1464>
   12864:	movw	r0, #61860	; 0xf1a4
   12868:	movt	r0, #2
   1286c:	ldr	r0, [r0]
   12870:	str	r0, [fp, #-20]	; 0xffffffec
   12874:	ldr	r0, [fp, #-4]
   12878:	ldr	r1, [fp, #-20]	; 0xffffffec
   1287c:	sub	r2, fp, #16
   12880:	bl	194dc <__assert_fail@plt+0x80cc>
   12884:	str	r0, [fp, #-24]	; 0xffffffe8
   12888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1288c:	cmp	r0, #0
   12890:	bge	12948 <__assert_fail@plt+0x1538>
   12894:	ldr	r0, [fp, #-4]
   12898:	movw	r1, #0
   1289c:	cmp	r0, r1
   128a0:	beq	128ec <__assert_fail@plt+0x14dc>
   128a4:	bl	11308 <__errno_location@plt>
   128a8:	ldr	r1, [r0]
   128ac:	movw	r0, #58851	; 0xe5e3
   128b0:	movt	r0, #1
   128b4:	str	r1, [sp, #20]
   128b8:	bl	112cc <gettext@plt>
   128bc:	ldr	r1, [fp, #-4]
   128c0:	str	r0, [sp, #16]
   128c4:	mov	r0, r1
   128c8:	bl	15790 <__assert_fail@plt+0x4380>
   128cc:	movw	r1, #0
   128d0:	str	r0, [sp, #12]
   128d4:	mov	r0, r1
   128d8:	ldr	r1, [sp, #20]
   128dc:	ldr	r2, [sp, #16]
   128e0:	ldr	r3, [sp, #12]
   128e4:	bl	11260 <error@plt>
   128e8:	b	1291c <__assert_fail@plt+0x150c>
   128ec:	bl	11308 <__errno_location@plt>
   128f0:	ldr	r1, [r0]
   128f4:	movw	r0, #58884	; 0xe604
   128f8:	movt	r0, #1
   128fc:	str	r1, [sp, #8]
   12900:	bl	112cc <gettext@plt>
   12904:	movw	r1, #0
   12908:	str	r0, [sp, #4]
   1290c:	mov	r0, r1
   12910:	ldr	r1, [sp, #8]
   12914:	ldr	r2, [sp, #4]
   12918:	bl	11260 <error@plt>
   1291c:	movw	r0, #61720	; 0xf118
   12920:	movt	r0, #2
   12924:	ldrb	r1, [r0]
   12928:	and	r1, r1, #1
   1292c:	and	r1, r1, #0
   12930:	cmp	r1, #0
   12934:	movw	r1, #0
   12938:	movne	r1, #1
   1293c:	and	r1, r1, #1
   12940:	strb	r1, [r0]
   12944:	b	12a50 <__assert_fail@plt+0x1640>
   12948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1294c:	cmp	r0, #0
   12950:	ble	12970 <__assert_fail@plt+0x1560>
   12954:	movw	r0, #58929	; 0xe631
   12958:	movt	r0, #1
   1295c:	bl	112cc <gettext@plt>
   12960:	movw	r1, #61828	; 0xf184
   12964:	movt	r1, #2
   12968:	ldr	r1, [r1]
   1296c:	bl	11134 <fputs_unlocked@plt>
   12970:	movw	r0, #0
   12974:	str	r0, [fp, #-28]	; 0xffffffe4
   12978:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1297c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12980:	cmp	r0, r1
   12984:	bge	12a14 <__assert_fail@plt+0x1604>
   12988:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1298c:	cmp	r0, #0
   12990:	ble	1299c <__assert_fail@plt+0x158c>
   12994:	movw	r0, #44	; 0x2c
   12998:	bl	11404 <putchar_unlocked@plt>
   1299c:	ldr	r0, [fp, #-16]
   129a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129a4:	add	r0, r0, r1, lsl #2
   129a8:	bl	12a88 <__assert_fail@plt+0x1678>
   129ac:	movw	r1, #61828	; 0xf184
   129b0:	movt	r1, #2
   129b4:	ldr	r1, [r1]
   129b8:	bl	11134 <fputs_unlocked@plt>
   129bc:	ldr	r1, [fp, #-16]
   129c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   129c4:	add	r1, r1, r2, lsl #2
   129c8:	ldr	r1, [r1]
   129cc:	str	r0, [sp]
   129d0:	mov	r0, r1
   129d4:	bl	113ec <getgrgid@plt>
   129d8:	str	r0, [fp, #-12]
   129dc:	ldr	r0, [fp, #-12]
   129e0:	movw	r1, #0
   129e4:	cmp	r0, r1
   129e8:	beq	12a00 <__assert_fail@plt+0x15f0>
   129ec:	ldr	r0, [fp, #-12]
   129f0:	ldr	r1, [r0]
   129f4:	movw	r0, #58820	; 0xe5c4
   129f8:	movt	r0, #1
   129fc:	bl	1117c <printf@plt>
   12a00:	b	12a04 <__assert_fail@plt+0x15f4>
   12a04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12a08:	add	r0, r0, #1
   12a0c:	str	r0, [fp, #-28]	; 0xffffffe4
   12a10:	b	12978 <__assert_fail@plt+0x1568>
   12a14:	ldr	r0, [fp, #-16]
   12a18:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   12a1c:	movw	r0, #61844	; 0xf194
   12a20:	movt	r0, #2
   12a24:	ldr	r0, [r0]
   12a28:	movw	r1, #0
   12a2c:	cmp	r0, r1
   12a30:	beq	12a50 <__assert_fail@plt+0x1640>
   12a34:	movw	r0, #58938	; 0xe63a
   12a38:	movt	r0, #1
   12a3c:	bl	112cc <gettext@plt>
   12a40:	movw	r1, #61844	; 0xf194
   12a44:	movt	r1, #2
   12a48:	ldr	r1, [r1]
   12a4c:	bl	1117c <printf@plt>
   12a50:	mov	sp, fp
   12a54:	pop	{fp, pc}
   12a58:	push	{fp, lr}
   12a5c:	mov	fp, sp
   12a60:	sub	sp, sp, #8
   12a64:	str	r0, [sp, #4]
   12a68:	ldr	r0, [sp, #4]
   12a6c:	ldr	r0, [r0]
   12a70:	mov	r1, #0
   12a74:	movw	r2, #61868	; 0xf1ac
   12a78:	movt	r2, #2
   12a7c:	bl	13004 <__assert_fail@plt+0x1bf4>
   12a80:	mov	sp, fp
   12a84:	pop	{fp, pc}
   12a88:	push	{fp, lr}
   12a8c:	mov	fp, sp
   12a90:	sub	sp, sp, #8
   12a94:	str	r0, [sp, #4]
   12a98:	ldr	r0, [sp, #4]
   12a9c:	ldr	r0, [r0]
   12aa0:	mov	r1, #0
   12aa4:	movw	r2, #61889	; 0xf1c1
   12aa8:	movt	r2, #2
   12aac:	bl	13004 <__assert_fail@plt+0x1bf4>
   12ab0:	mov	sp, fp
   12ab4:	pop	{fp, pc}
   12ab8:	push	{fp, lr}
   12abc:	mov	fp, sp
   12ac0:	sub	sp, sp, #80	; 0x50
   12ac4:	ldr	ip, [fp, #12]
   12ac8:	ldr	lr, [fp, #8]
   12acc:	str	r0, [fp, #-8]
   12ad0:	str	r1, [fp, #-12]
   12ad4:	str	r2, [fp, #-16]
   12ad8:	str	r3, [fp, #-20]	; 0xffffffec
   12adc:	and	r0, lr, #1
   12ae0:	strb	r0, [fp, #-21]	; 0xffffffeb
   12ae4:	strb	ip, [fp, #-22]	; 0xffffffea
   12ae8:	movw	r0, #1
   12aec:	strb	r0, [fp, #-23]	; 0xffffffe9
   12af0:	movw	r0, #0
   12af4:	str	r0, [fp, #-28]	; 0xffffffe4
   12af8:	ldr	r1, [fp, #-8]
   12afc:	cmp	r1, r0
   12b00:	beq	12b2c <__assert_fail@plt+0x171c>
   12b04:	ldr	r0, [fp, #-12]
   12b08:	bl	11170 <getpwuid@plt>
   12b0c:	str	r0, [fp, #-28]	; 0xffffffe4
   12b10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b14:	movw	r1, #0
   12b18:	cmp	r0, r1
   12b1c:	bne	12b28 <__assert_fail@plt+0x1718>
   12b20:	movw	r0, #0
   12b24:	strb	r0, [fp, #-23]	; 0xffffffe9
   12b28:	b	12b2c <__assert_fail@plt+0x171c>
   12b2c:	ldr	r0, [fp, #-16]
   12b30:	ldrb	r1, [fp, #-21]	; 0xffffffeb
   12b34:	and	r1, r1, #1
   12b38:	bl	12d4c <__assert_fail@plt+0x193c>
   12b3c:	tst	r0, #1
   12b40:	bne	12b4c <__assert_fail@plt+0x173c>
   12b44:	movw	r0, #0
   12b48:	strb	r0, [fp, #-23]	; 0xffffffe9
   12b4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12b50:	ldr	r1, [fp, #-16]
   12b54:	cmp	r0, r1
   12b58:	beq	12b90 <__assert_fail@plt+0x1780>
   12b5c:	ldrb	r0, [fp, #-22]	; 0xffffffea
   12b60:	bl	11404 <putchar_unlocked@plt>
   12b64:	ldr	r1, [fp, #-20]	; 0xffffffec
   12b68:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   12b6c:	str	r0, [sp, #36]	; 0x24
   12b70:	mov	r0, r1
   12b74:	and	r1, r2, #1
   12b78:	bl	12d4c <__assert_fail@plt+0x193c>
   12b7c:	tst	r0, #1
   12b80:	bne	12b8c <__assert_fail@plt+0x177c>
   12b84:	movw	r0, #0
   12b88:	strb	r0, [fp, #-23]	; 0xffffffe9
   12b8c:	b	12b90 <__assert_fail@plt+0x1780>
   12b90:	ldr	r0, [fp, #-8]
   12b94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12b98:	movw	r2, #0
   12b9c:	cmp	r1, r2
   12ba0:	str	r0, [sp, #32]
   12ba4:	beq	12bb8 <__assert_fail@plt+0x17a8>
   12ba8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12bac:	ldr	r0, [r0, #12]
   12bb0:	str	r0, [sp, #28]
   12bb4:	b	12bc0 <__assert_fail@plt+0x17b0>
   12bb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   12bbc:	str	r0, [sp, #28]
   12bc0:	ldr	r0, [sp, #28]
   12bc4:	ldr	r1, [sp, #32]
   12bc8:	str	r0, [sp, #24]
   12bcc:	mov	r0, r1
   12bd0:	ldr	r1, [sp, #24]
   12bd4:	sub	r2, fp, #32
   12bd8:	bl	194dc <__assert_fail@plt+0x80cc>
   12bdc:	str	r0, [fp, #-36]	; 0xffffffdc
   12be0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12be4:	cmp	r0, #0
   12be8:	bge	12c84 <__assert_fail@plt+0x1874>
   12bec:	ldr	r0, [fp, #-8]
   12bf0:	movw	r1, #0
   12bf4:	cmp	r0, r1
   12bf8:	beq	12c44 <__assert_fail@plt+0x1834>
   12bfc:	bl	11308 <__errno_location@plt>
   12c00:	ldr	r1, [r0]
   12c04:	movw	r0, #58851	; 0xe5e3
   12c08:	movt	r0, #1
   12c0c:	str	r1, [sp, #20]
   12c10:	bl	112cc <gettext@plt>
   12c14:	ldr	r1, [fp, #-8]
   12c18:	str	r0, [sp, #16]
   12c1c:	mov	r0, r1
   12c20:	bl	15790 <__assert_fail@plt+0x4380>
   12c24:	movw	r1, #0
   12c28:	str	r0, [sp, #12]
   12c2c:	mov	r0, r1
   12c30:	ldr	r1, [sp, #20]
   12c34:	ldr	r2, [sp, #16]
   12c38:	ldr	r3, [sp, #12]
   12c3c:	bl	11260 <error@plt>
   12c40:	b	12c74 <__assert_fail@plt+0x1864>
   12c44:	bl	11308 <__errno_location@plt>
   12c48:	ldr	r1, [r0]
   12c4c:	movw	r0, #58884	; 0xe604
   12c50:	movt	r0, #1
   12c54:	str	r1, [sp, #8]
   12c58:	bl	112cc <gettext@plt>
   12c5c:	movw	r1, #0
   12c60:	str	r0, [sp, #4]
   12c64:	mov	r0, r1
   12c68:	ldr	r1, [sp, #8]
   12c6c:	ldr	r2, [sp, #4]
   12c70:	bl	11260 <error@plt>
   12c74:	movw	r0, #0
   12c78:	and	r0, r0, #1
   12c7c:	strb	r0, [fp, #-1]
   12c80:	b	12d3c <__assert_fail@plt+0x192c>
   12c84:	movw	r0, #0
   12c88:	str	r0, [sp, #40]	; 0x28
   12c8c:	ldr	r0, [sp, #40]	; 0x28
   12c90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12c94:	cmp	r0, r1
   12c98:	bge	12d28 <__assert_fail@plt+0x1918>
   12c9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ca0:	ldr	r1, [sp, #40]	; 0x28
   12ca4:	add	r0, r0, r1, lsl #2
   12ca8:	ldr	r0, [r0]
   12cac:	ldr	r1, [fp, #-16]
   12cb0:	cmp	r0, r1
   12cb4:	beq	12d14 <__assert_fail@plt+0x1904>
   12cb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12cbc:	ldr	r1, [sp, #40]	; 0x28
   12cc0:	add	r0, r0, r1, lsl #2
   12cc4:	ldr	r0, [r0]
   12cc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ccc:	cmp	r0, r1
   12cd0:	beq	12d14 <__assert_fail@plt+0x1904>
   12cd4:	ldrb	r0, [fp, #-22]	; 0xffffffea
   12cd8:	bl	11404 <putchar_unlocked@plt>
   12cdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12ce0:	ldr	r2, [sp, #40]	; 0x28
   12ce4:	add	r1, r1, r2, lsl #2
   12ce8:	ldr	r1, [r1]
   12cec:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   12cf0:	str	r0, [sp]
   12cf4:	mov	r0, r1
   12cf8:	and	r1, r2, #1
   12cfc:	bl	12d4c <__assert_fail@plt+0x193c>
   12d00:	tst	r0, #1
   12d04:	bne	12d10 <__assert_fail@plt+0x1900>
   12d08:	movw	r0, #0
   12d0c:	strb	r0, [fp, #-23]	; 0xffffffe9
   12d10:	b	12d14 <__assert_fail@plt+0x1904>
   12d14:	b	12d18 <__assert_fail@plt+0x1908>
   12d18:	ldr	r0, [sp, #40]	; 0x28
   12d1c:	add	r0, r0, #1
   12d20:	str	r0, [sp, #40]	; 0x28
   12d24:	b	12c8c <__assert_fail@plt+0x187c>
   12d28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d2c:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   12d30:	ldrb	r0, [fp, #-23]	; 0xffffffe9
   12d34:	and	r0, r0, #1
   12d38:	strb	r0, [fp, #-1]
   12d3c:	ldrb	r0, [fp, #-1]
   12d40:	and	r0, r0, #1
   12d44:	mov	sp, fp
   12d48:	pop	{fp, pc}
   12d4c:	push	{fp, lr}
   12d50:	mov	fp, sp
   12d54:	sub	sp, sp, #32
   12d58:	str	r0, [fp, #-4]
   12d5c:	and	r0, r1, #1
   12d60:	strb	r0, [fp, #-5]
   12d64:	movw	r0, #0
   12d68:	str	r0, [fp, #-12]
   12d6c:	movw	r0, #1
   12d70:	strb	r0, [fp, #-13]
   12d74:	ldrb	r0, [fp, #-5]
   12d78:	tst	r0, #1
   12d7c:	beq	12dcc <__assert_fail@plt+0x19bc>
   12d80:	ldr	r0, [fp, #-4]
   12d84:	bl	113ec <getgrgid@plt>
   12d88:	str	r0, [fp, #-12]
   12d8c:	ldr	r0, [fp, #-12]
   12d90:	movw	r1, #0
   12d94:	cmp	r0, r1
   12d98:	bne	12dc8 <__assert_fail@plt+0x19b8>
   12d9c:	movw	r0, #59168	; 0xe720
   12da0:	movt	r0, #1
   12da4:	bl	112cc <gettext@plt>
   12da8:	ldr	r3, [fp, #-4]
   12dac:	movw	r1, #0
   12db0:	str	r0, [sp, #8]
   12db4:	mov	r0, r1
   12db8:	ldr	r2, [sp, #8]
   12dbc:	bl	11260 <error@plt>
   12dc0:	movw	r0, #0
   12dc4:	strb	r0, [fp, #-13]
   12dc8:	b	12dcc <__assert_fail@plt+0x19bc>
   12dcc:	ldr	r0, [fp, #-12]
   12dd0:	movw	r1, #0
   12dd4:	cmp	r0, r1
   12dd8:	beq	12dec <__assert_fail@plt+0x19dc>
   12ddc:	ldr	r0, [fp, #-12]
   12de0:	ldr	r0, [r0]
   12de4:	str	r0, [sp, #4]
   12de8:	b	12df8 <__assert_fail@plt+0x19e8>
   12dec:	sub	r0, fp, #4
   12df0:	bl	12e2c <__assert_fail@plt+0x1a1c>
   12df4:	str	r0, [sp, #4]
   12df8:	ldr	r0, [sp, #4]
   12dfc:	str	r0, [sp, #12]
   12e00:	ldr	r0, [sp, #12]
   12e04:	movw	r1, #61828	; 0xf184
   12e08:	movt	r1, #2
   12e0c:	ldr	r1, [r1]
   12e10:	bl	11134 <fputs_unlocked@plt>
   12e14:	ldrb	r1, [fp, #-13]
   12e18:	and	r1, r1, #1
   12e1c:	str	r0, [sp]
   12e20:	mov	r0, r1
   12e24:	mov	sp, fp
   12e28:	pop	{fp, pc}
   12e2c:	push	{fp, lr}
   12e30:	mov	fp, sp
   12e34:	sub	sp, sp, #8
   12e38:	str	r0, [sp, #4]
   12e3c:	ldr	r0, [sp, #4]
   12e40:	ldr	r0, [r0]
   12e44:	mov	r1, #0
   12e48:	movw	r2, #61910	; 0xf1d6
   12e4c:	movt	r2, #2
   12e50:	bl	13004 <__assert_fail@plt+0x1bf4>
   12e54:	mov	sp, fp
   12e58:	pop	{fp, pc}
   12e5c:	sub	sp, sp, #4
   12e60:	str	r0, [sp]
   12e64:	ldr	r0, [sp]
   12e68:	movw	r1, #61932	; 0xf1ec
   12e6c:	movt	r1, #2
   12e70:	str	r0, [r1]
   12e74:	add	sp, sp, #4
   12e78:	bx	lr
   12e7c:	sub	sp, sp, #4
   12e80:	and	r0, r0, #1
   12e84:	strb	r0, [sp, #3]
   12e88:	ldrb	r0, [sp, #3]
   12e8c:	and	r0, r0, #1
   12e90:	movw	r1, #61936	; 0xf1f0
   12e94:	movt	r1, #2
   12e98:	strb	r0, [r1]
   12e9c:	add	sp, sp, #4
   12ea0:	bx	lr
   12ea4:	push	{fp, lr}
   12ea8:	mov	fp, sp
   12eac:	sub	sp, sp, #24
   12eb0:	movw	r0, #61828	; 0xf184
   12eb4:	movt	r0, #2
   12eb8:	ldr	r0, [r0]
   12ebc:	bl	1b454 <__assert_fail@plt+0xa044>
   12ec0:	cmp	r0, #0
   12ec4:	beq	12f94 <__assert_fail@plt+0x1b84>
   12ec8:	movw	r0, #61936	; 0xf1f0
   12ecc:	movt	r0, #2
   12ed0:	ldrb	r0, [r0]
   12ed4:	tst	r0, #1
   12ed8:	beq	12eec <__assert_fail@plt+0x1adc>
   12edc:	bl	11308 <__errno_location@plt>
   12ee0:	ldr	r0, [r0]
   12ee4:	cmp	r0, #32
   12ee8:	beq	12f94 <__assert_fail@plt+0x1b84>
   12eec:	movw	r0, #59217	; 0xe751
   12ef0:	movt	r0, #1
   12ef4:	bl	112cc <gettext@plt>
   12ef8:	str	r0, [fp, #-4]
   12efc:	movw	r0, #61932	; 0xf1ec
   12f00:	movt	r0, #2
   12f04:	ldr	r0, [r0]
   12f08:	movw	r1, #0
   12f0c:	cmp	r0, r1
   12f10:	beq	12f68 <__assert_fail@plt+0x1b58>
   12f14:	bl	11308 <__errno_location@plt>
   12f18:	ldr	r1, [r0]
   12f1c:	movw	r0, #61932	; 0xf1ec
   12f20:	movt	r0, #2
   12f24:	ldr	r0, [r0]
   12f28:	str	r1, [fp, #-8]
   12f2c:	bl	154f4 <__assert_fail@plt+0x40e4>
   12f30:	ldr	r1, [fp, #-4]
   12f34:	movw	r2, #0
   12f38:	str	r0, [sp, #12]
   12f3c:	mov	r0, r2
   12f40:	ldr	r2, [fp, #-8]
   12f44:	str	r1, [sp, #8]
   12f48:	mov	r1, r2
   12f4c:	movw	r2, #59229	; 0xe75d
   12f50:	movt	r2, #1
   12f54:	ldr	r3, [sp, #12]
   12f58:	ldr	ip, [sp, #8]
   12f5c:	str	ip, [sp]
   12f60:	bl	11260 <error@plt>
   12f64:	b	12f84 <__assert_fail@plt+0x1b74>
   12f68:	bl	11308 <__errno_location@plt>
   12f6c:	ldr	r1, [r0]
   12f70:	ldr	r3, [fp, #-4]
   12f74:	movw	r0, #0
   12f78:	movw	r2, #59233	; 0xe761
   12f7c:	movt	r2, #1
   12f80:	bl	11260 <error@plt>
   12f84:	movw	r0, #61728	; 0xf120
   12f88:	movt	r0, #2
   12f8c:	ldr	r0, [r0]
   12f90:	bl	111ac <_exit@plt>
   12f94:	movw	r0, #61824	; 0xf180
   12f98:	movt	r0, #2
   12f9c:	ldr	r0, [r0]
   12fa0:	bl	1b454 <__assert_fail@plt+0xa044>
   12fa4:	cmp	r0, #0
   12fa8:	beq	12fbc <__assert_fail@plt+0x1bac>
   12fac:	movw	r0, #61728	; 0xf120
   12fb0:	movt	r0, #2
   12fb4:	ldr	r0, [r0]
   12fb8:	bl	111ac <_exit@plt>
   12fbc:	mov	sp, fp
   12fc0:	pop	{fp, pc}
   12fc4:	push	{fp, lr}
   12fc8:	mov	fp, sp
   12fcc:	sub	sp, sp, #16
   12fd0:	str	r0, [fp, #-4]
   12fd4:	bl	11308 <__errno_location@plt>
   12fd8:	ldr	r0, [r0]
   12fdc:	str	r0, [sp, #8]
   12fe0:	ldr	r0, [fp, #-4]
   12fe4:	bl	111a0 <free@plt>
   12fe8:	ldr	r0, [sp, #8]
   12fec:	str	r0, [sp, #4]
   12ff0:	bl	11308 <__errno_location@plt>
   12ff4:	ldr	r1, [sp, #4]
   12ff8:	str	r1, [r0]
   12ffc:	mov	sp, fp
   13000:	pop	{fp, pc}
   13004:	push	{fp, lr}
   13008:	mov	fp, sp
   1300c:	sub	sp, sp, #16
   13010:	str	r0, [sp, #8]
   13014:	str	r1, [sp, #12]
   13018:	str	r2, [sp, #4]
   1301c:	ldr	r0, [sp, #4]
   13020:	add	r0, r0, #20
   13024:	str	r0, [sp]
   13028:	ldr	r0, [sp]
   1302c:	mov	r1, #0
   13030:	strb	r1, [r0]
   13034:	mov	r0, #1
   13038:	cmp	r0, #0
   1303c:	bne	130c4 <__assert_fail@plt+0x1cb4>
   13040:	b	13044 <__assert_fail@plt+0x1c34>
   13044:	b	13048 <__assert_fail@plt+0x1c38>
   13048:	ldr	r0, [sp, #8]
   1304c:	ldr	r1, [sp, #12]
   13050:	mov	r2, #10
   13054:	mov	r3, #0
   13058:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1305c:	rsb	r2, r2, #48	; 0x30
   13060:	ldr	r3, [sp]
   13064:	mvn	ip, #0
   13068:	add	lr, r3, ip
   1306c:	str	lr, [sp]
   13070:	add	r3, r3, ip
   13074:	strb	r2, [r3]
   13078:	ldr	r0, [sp, #8]
   1307c:	ldr	r1, [sp, #12]
   13080:	mov	r2, #10
   13084:	mov	r3, #0
   13088:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1308c:	str	r1, [sp, #12]
   13090:	str	r0, [sp, #8]
   13094:	orr	r0, r0, r1
   13098:	cmp	r0, #0
   1309c:	bne	13048 <__assert_fail@plt+0x1c38>
   130a0:	b	130a4 <__assert_fail@plt+0x1c94>
   130a4:	ldr	r0, [sp]
   130a8:	mvn	r1, #0
   130ac:	add	r2, r0, r1
   130b0:	str	r2, [sp]
   130b4:	add	r0, r0, r1
   130b8:	movw	r1, #45	; 0x2d
   130bc:	strb	r1, [r0]
   130c0:	b	13128 <__assert_fail@plt+0x1d18>
   130c4:	b	130c8 <__assert_fail@plt+0x1cb8>
   130c8:	ldr	r0, [sp, #8]
   130cc:	ldr	r1, [sp, #12]
   130d0:	mov	r2, #10
   130d4:	mov	r3, #0
   130d8:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   130dc:	orr	r2, r2, #48	; 0x30
   130e0:	ldr	r3, [sp]
   130e4:	mvn	ip, #0
   130e8:	add	lr, r3, ip
   130ec:	str	lr, [sp]
   130f0:	add	r3, r3, ip
   130f4:	strb	r2, [r3]
   130f8:	ldr	r0, [sp, #8]
   130fc:	ldr	r1, [sp, #12]
   13100:	mov	r2, #10
   13104:	mov	r3, #0
   13108:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1310c:	str	r1, [sp, #12]
   13110:	str	r0, [sp, #8]
   13114:	orr	r0, r0, r1
   13118:	cmp	r0, #0
   1311c:	bne	130c8 <__assert_fail@plt+0x1cb8>
   13120:	b	13124 <__assert_fail@plt+0x1d14>
   13124:	b	13128 <__assert_fail@plt+0x1d18>
   13128:	ldr	r0, [sp]
   1312c:	mov	sp, fp
   13130:	pop	{fp, pc}
   13134:	push	{fp, lr}
   13138:	mov	fp, sp
   1313c:	sub	sp, sp, #24
   13140:	str	r0, [fp, #-4]
   13144:	ldr	r0, [fp, #-4]
   13148:	movw	r1, #0
   1314c:	cmp	r0, r1
   13150:	bne	13174 <__assert_fail@plt+0x1d64>
   13154:	movw	r0, #61824	; 0xf180
   13158:	movt	r0, #2
   1315c:	ldr	r1, [r0]
   13160:	movw	r0, #59236	; 0xe764
   13164:	movt	r0, #1
   13168:	bl	113c8 <fputs@plt>
   1316c:	str	r0, [sp, #8]
   13170:	bl	113e0 <abort@plt>
   13174:	ldr	r0, [fp, #-4]
   13178:	movw	r1, #47	; 0x2f
   1317c:	bl	11398 <strrchr@plt>
   13180:	str	r0, [fp, #-8]
   13184:	ldr	r0, [fp, #-8]
   13188:	movw	r1, #0
   1318c:	cmp	r0, r1
   13190:	beq	131a4 <__assert_fail@plt+0x1d94>
   13194:	ldr	r0, [fp, #-8]
   13198:	add	r0, r0, #1
   1319c:	str	r0, [sp, #4]
   131a0:	b	131ac <__assert_fail@plt+0x1d9c>
   131a4:	ldr	r0, [fp, #-4]
   131a8:	str	r0, [sp, #4]
   131ac:	ldr	r0, [sp, #4]
   131b0:	str	r0, [sp, #12]
   131b4:	ldr	r0, [sp, #12]
   131b8:	ldr	r1, [fp, #-4]
   131bc:	sub	r0, r0, r1
   131c0:	cmp	r0, #7
   131c4:	blt	13230 <__assert_fail@plt+0x1e20>
   131c8:	ldr	r0, [sp, #12]
   131cc:	mvn	r1, #6
   131d0:	add	r0, r0, r1
   131d4:	movw	r1, #59292	; 0xe79c
   131d8:	movt	r1, #1
   131dc:	movw	r2, #7
   131e0:	bl	113d4 <strncmp@plt>
   131e4:	cmp	r0, #0
   131e8:	bne	13230 <__assert_fail@plt+0x1e20>
   131ec:	ldr	r0, [sp, #12]
   131f0:	str	r0, [fp, #-4]
   131f4:	ldr	r0, [sp, #12]
   131f8:	movw	r1, #59300	; 0xe7a4
   131fc:	movt	r1, #1
   13200:	movw	r2, #3
   13204:	bl	113d4 <strncmp@plt>
   13208:	cmp	r0, #0
   1320c:	bne	1322c <__assert_fail@plt+0x1e1c>
   13210:	ldr	r0, [sp, #12]
   13214:	add	r0, r0, #3
   13218:	str	r0, [fp, #-4]
   1321c:	ldr	r0, [fp, #-4]
   13220:	movw	r1, #61808	; 0xf170
   13224:	movt	r1, #2
   13228:	str	r0, [r1]
   1322c:	b	13230 <__assert_fail@plt+0x1e20>
   13230:	ldr	r0, [fp, #-4]
   13234:	movw	r1, #61940	; 0xf1f4
   13238:	movt	r1, #2
   1323c:	str	r0, [r1]
   13240:	ldr	r0, [fp, #-4]
   13244:	movw	r1, #61812	; 0xf174
   13248:	movt	r1, #2
   1324c:	str	r0, [r1]
   13250:	mov	sp, fp
   13254:	pop	{fp, pc}
   13258:	push	{fp, lr}
   1325c:	mov	fp, sp
   13260:	sub	sp, sp, #24
   13264:	str	r0, [fp, #-4]
   13268:	bl	11308 <__errno_location@plt>
   1326c:	ldr	r0, [r0]
   13270:	str	r0, [fp, #-8]
   13274:	ldr	r0, [fp, #-4]
   13278:	movw	r1, #0
   1327c:	cmp	r0, r1
   13280:	beq	13290 <__assert_fail@plt+0x1e80>
   13284:	ldr	r0, [fp, #-4]
   13288:	str	r0, [sp, #8]
   1328c:	b	132a0 <__assert_fail@plt+0x1e90>
   13290:	movw	r0, #61944	; 0xf1f8
   13294:	movt	r0, #2
   13298:	str	r0, [sp, #8]
   1329c:	b	132a0 <__assert_fail@plt+0x1e90>
   132a0:	ldr	r0, [sp, #8]
   132a4:	movw	r1, #48	; 0x30
   132a8:	bl	1938c <__assert_fail@plt+0x7f7c>
   132ac:	str	r0, [sp, #12]
   132b0:	ldr	r0, [fp, #-8]
   132b4:	str	r0, [sp, #4]
   132b8:	bl	11308 <__errno_location@plt>
   132bc:	ldr	r1, [sp, #4]
   132c0:	str	r1, [r0]
   132c4:	ldr	r0, [sp, #12]
   132c8:	mov	sp, fp
   132cc:	pop	{fp, pc}
   132d0:	sub	sp, sp, #8
   132d4:	str	r0, [sp, #4]
   132d8:	ldr	r0, [sp, #4]
   132dc:	movw	r1, #0
   132e0:	cmp	r0, r1
   132e4:	beq	132f4 <__assert_fail@plt+0x1ee4>
   132e8:	ldr	r0, [sp, #4]
   132ec:	str	r0, [sp]
   132f0:	b	13304 <__assert_fail@plt+0x1ef4>
   132f4:	movw	r0, #61944	; 0xf1f8
   132f8:	movt	r0, #2
   132fc:	str	r0, [sp]
   13300:	b	13304 <__assert_fail@plt+0x1ef4>
   13304:	ldr	r0, [sp]
   13308:	ldr	r0, [r0]
   1330c:	add	sp, sp, #8
   13310:	bx	lr
   13314:	sub	sp, sp, #16
   13318:	str	r0, [sp, #12]
   1331c:	str	r1, [sp, #8]
   13320:	ldr	r0, [sp, #8]
   13324:	ldr	r1, [sp, #12]
   13328:	movw	r2, #0
   1332c:	cmp	r1, r2
   13330:	str	r0, [sp, #4]
   13334:	beq	13344 <__assert_fail@plt+0x1f34>
   13338:	ldr	r0, [sp, #12]
   1333c:	str	r0, [sp]
   13340:	b	13354 <__assert_fail@plt+0x1f44>
   13344:	movw	r0, #61944	; 0xf1f8
   13348:	movt	r0, #2
   1334c:	str	r0, [sp]
   13350:	b	13354 <__assert_fail@plt+0x1f44>
   13354:	ldr	r0, [sp]
   13358:	ldr	r1, [sp, #4]
   1335c:	str	r1, [r0]
   13360:	add	sp, sp, #16
   13364:	bx	lr
   13368:	sub	sp, sp, #32
   1336c:	str	r0, [sp, #28]
   13370:	strb	r1, [sp, #27]
   13374:	str	r2, [sp, #20]
   13378:	ldrb	r0, [sp, #27]
   1337c:	strb	r0, [sp, #19]
   13380:	ldr	r0, [sp, #28]
   13384:	movw	r1, #0
   13388:	cmp	r0, r1
   1338c:	beq	1339c <__assert_fail@plt+0x1f8c>
   13390:	ldr	r0, [sp, #28]
   13394:	str	r0, [sp]
   13398:	b	133ac <__assert_fail@plt+0x1f9c>
   1339c:	movw	r0, #61944	; 0xf1f8
   133a0:	movt	r0, #2
   133a4:	str	r0, [sp]
   133a8:	b	133ac <__assert_fail@plt+0x1f9c>
   133ac:	ldr	r0, [sp]
   133b0:	add	r0, r0, #8
   133b4:	ldrb	r1, [sp, #19]
   133b8:	lsr	r1, r1, #5
   133bc:	add	r0, r0, r1, lsl #2
   133c0:	str	r0, [sp, #12]
   133c4:	ldrb	r0, [sp, #19]
   133c8:	and	r0, r0, #31
   133cc:	str	r0, [sp, #8]
   133d0:	ldr	r0, [sp, #12]
   133d4:	ldr	r0, [r0]
   133d8:	ldr	r1, [sp, #8]
   133dc:	lsr	r0, r0, r1
   133e0:	and	r0, r0, #1
   133e4:	str	r0, [sp, #4]
   133e8:	ldr	r0, [sp, #20]
   133ec:	and	r0, r0, #1
   133f0:	ldr	r1, [sp, #4]
   133f4:	eor	r0, r0, r1
   133f8:	ldr	r1, [sp, #8]
   133fc:	lsl	r0, r0, r1
   13400:	ldr	r1, [sp, #12]
   13404:	ldr	r2, [r1]
   13408:	eor	r0, r2, r0
   1340c:	str	r0, [r1]
   13410:	ldr	r0, [sp, #4]
   13414:	add	sp, sp, #32
   13418:	bx	lr
   1341c:	sub	sp, sp, #12
   13420:	str	r0, [sp, #8]
   13424:	str	r1, [sp, #4]
   13428:	ldr	r0, [sp, #8]
   1342c:	movw	r1, #0
   13430:	cmp	r0, r1
   13434:	bne	13444 <__assert_fail@plt+0x2034>
   13438:	movw	r0, #61944	; 0xf1f8
   1343c:	movt	r0, #2
   13440:	str	r0, [sp, #8]
   13444:	ldr	r0, [sp, #8]
   13448:	ldr	r0, [r0, #4]
   1344c:	str	r0, [sp]
   13450:	ldr	r0, [sp, #4]
   13454:	ldr	r1, [sp, #8]
   13458:	str	r0, [r1, #4]
   1345c:	ldr	r0, [sp]
   13460:	add	sp, sp, #12
   13464:	bx	lr
   13468:	push	{fp, lr}
   1346c:	mov	fp, sp
   13470:	sub	sp, sp, #16
   13474:	str	r0, [fp, #-4]
   13478:	str	r1, [sp, #8]
   1347c:	str	r2, [sp, #4]
   13480:	ldr	r0, [fp, #-4]
   13484:	movw	r1, #0
   13488:	cmp	r0, r1
   1348c:	bne	1349c <__assert_fail@plt+0x208c>
   13490:	movw	r0, #61944	; 0xf1f8
   13494:	movt	r0, #2
   13498:	str	r0, [fp, #-4]
   1349c:	ldr	r0, [fp, #-4]
   134a0:	movw	r1, #10
   134a4:	str	r1, [r0]
   134a8:	ldr	r0, [sp, #8]
   134ac:	movw	r1, #0
   134b0:	cmp	r0, r1
   134b4:	beq	134c8 <__assert_fail@plt+0x20b8>
   134b8:	ldr	r0, [sp, #4]
   134bc:	movw	r1, #0
   134c0:	cmp	r0, r1
   134c4:	bne	134cc <__assert_fail@plt+0x20bc>
   134c8:	bl	113e0 <abort@plt>
   134cc:	ldr	r0, [sp, #8]
   134d0:	ldr	r1, [fp, #-4]
   134d4:	str	r0, [r1, #40]	; 0x28
   134d8:	ldr	r0, [sp, #4]
   134dc:	ldr	r1, [fp, #-4]
   134e0:	str	r0, [r1, #44]	; 0x2c
   134e4:	mov	sp, fp
   134e8:	pop	{fp, pc}
   134ec:	push	{r4, r5, r6, sl, fp, lr}
   134f0:	add	fp, sp, #16
   134f4:	sub	sp, sp, #56	; 0x38
   134f8:	ldr	ip, [fp, #8]
   134fc:	str	r0, [fp, #-20]	; 0xffffffec
   13500:	str	r1, [fp, #-24]	; 0xffffffe8
   13504:	str	r2, [fp, #-28]	; 0xffffffe4
   13508:	str	r3, [fp, #-32]	; 0xffffffe0
   1350c:	ldr	r0, [fp, #8]
   13510:	movw	r1, #0
   13514:	cmp	r0, r1
   13518:	beq	13528 <__assert_fail@plt+0x2118>
   1351c:	ldr	r0, [fp, #8]
   13520:	str	r0, [sp, #24]
   13524:	b	13538 <__assert_fail@plt+0x2128>
   13528:	movw	r0, #61944	; 0xf1f8
   1352c:	movt	r0, #2
   13530:	str	r0, [sp, #24]
   13534:	b	13538 <__assert_fail@plt+0x2128>
   13538:	ldr	r0, [sp, #24]
   1353c:	str	r0, [sp, #36]	; 0x24
   13540:	bl	11308 <__errno_location@plt>
   13544:	ldr	r0, [r0]
   13548:	str	r0, [sp, #32]
   1354c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13554:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13558:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1355c:	ldr	ip, [sp, #36]	; 0x24
   13560:	ldr	ip, [ip]
   13564:	ldr	lr, [sp, #36]	; 0x24
   13568:	ldr	lr, [lr, #4]
   1356c:	ldr	r4, [sp, #36]	; 0x24
   13570:	add	r4, r4, #8
   13574:	ldr	r5, [sp, #36]	; 0x24
   13578:	ldr	r5, [r5, #40]	; 0x28
   1357c:	ldr	r6, [sp, #36]	; 0x24
   13580:	ldr	r6, [r6, #44]	; 0x2c
   13584:	str	ip, [sp]
   13588:	str	lr, [sp, #4]
   1358c:	str	r4, [sp, #8]
   13590:	str	r5, [sp, #12]
   13594:	str	r6, [sp, #16]
   13598:	bl	135c0 <__assert_fail@plt+0x21b0>
   1359c:	str	r0, [sp, #28]
   135a0:	ldr	r0, [sp, #32]
   135a4:	str	r0, [sp, #20]
   135a8:	bl	11308 <__errno_location@plt>
   135ac:	ldr	r1, [sp, #20]
   135b0:	str	r1, [r0]
   135b4:	ldr	r0, [sp, #28]
   135b8:	sub	sp, fp, #16
   135bc:	pop	{r4, r5, r6, sl, fp, pc}
   135c0:	push	{r4, r5, r6, sl, fp, lr}
   135c4:	add	fp, sp, #16
   135c8:	sub	sp, sp, #160	; 0xa0
   135cc:	ldr	ip, [fp, #24]
   135d0:	ldr	lr, [fp, #20]
   135d4:	ldr	r4, [fp, #16]
   135d8:	ldr	r5, [fp, #12]
   135dc:	ldr	r6, [fp, #8]
   135e0:	str	r0, [fp, #-24]	; 0xffffffe8
   135e4:	str	r1, [fp, #-28]	; 0xffffffe4
   135e8:	str	r2, [fp, #-32]	; 0xffffffe0
   135ec:	str	r3, [fp, #-36]	; 0xffffffdc
   135f0:	movw	r0, #0
   135f4:	str	r0, [fp, #-44]	; 0xffffffd4
   135f8:	str	r0, [fp, #-48]	; 0xffffffd0
   135fc:	str	r0, [fp, #-52]	; 0xffffffcc
   13600:	str	r0, [fp, #-56]	; 0xffffffc8
   13604:	movw	r0, #0
   13608:	strb	r0, [fp, #-57]	; 0xffffffc7
   1360c:	str	ip, [sp, #72]	; 0x48
   13610:	str	lr, [sp, #68]	; 0x44
   13614:	str	r4, [sp, #64]	; 0x40
   13618:	str	r5, [sp, #60]	; 0x3c
   1361c:	str	r6, [sp, #56]	; 0x38
   13620:	bl	11224 <__ctype_get_mb_cur_max@plt>
   13624:	cmp	r0, #1
   13628:	movw	r0, #0
   1362c:	moveq	r0, #1
   13630:	and	r0, r0, #1
   13634:	strb	r0, [fp, #-58]	; 0xffffffc6
   13638:	ldr	r0, [fp, #12]
   1363c:	and	r0, r0, #2
   13640:	cmp	r0, #0
   13644:	movw	r0, #0
   13648:	movne	r0, #1
   1364c:	and	r0, r0, #1
   13650:	strb	r0, [fp, #-59]	; 0xffffffc5
   13654:	movw	r0, #0
   13658:	strb	r0, [fp, #-60]	; 0xffffffc4
   1365c:	strb	r0, [fp, #-61]	; 0xffffffc3
   13660:	movw	r0, #1
   13664:	strb	r0, [fp, #-62]	; 0xffffffc2
   13668:	ldr	r0, [fp, #8]
   1366c:	cmp	r0, #10
   13670:	str	r0, [sp, #52]	; 0x34
   13674:	bhi	1389c <__assert_fail@plt+0x248c>
   13678:	add	r0, pc, #8
   1367c:	ldr	r1, [sp, #52]	; 0x34
   13680:	ldr	r0, [r0, r1, lsl #2]
   13684:	mov	pc, r0
   13688:	muleq	r1, r0, r8
   1368c:	andeq	r3, r1, ip, lsl #16
   13690:	andeq	r3, r1, ip, lsr #16
   13694:	andeq	r3, r1, r4, lsl #16
   13698:	andeq	r3, r1, r4, lsl r8
   1369c:	andeq	r3, r1, r4, asr #13
   136a0:			; <UNDEFINED> instruction: 0x000136b4
   136a4:	andeq	r3, r1, r8, lsr #14
   136a8:	andeq	r3, r1, ip, lsr r7
   136ac:	andeq	r3, r1, ip, lsr r7
   136b0:	andeq	r3, r1, ip, lsr r7
   136b4:	movw	r0, #5
   136b8:	str	r0, [fp, #8]
   136bc:	movw	r0, #1
   136c0:	strb	r0, [fp, #-59]	; 0xffffffc5
   136c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   136c8:	tst	r0, #1
   136cc:	bne	13708 <__assert_fail@plt+0x22f8>
   136d0:	b	136d4 <__assert_fail@plt+0x22c4>
   136d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136dc:	cmp	r0, r1
   136e0:	bcs	136f8 <__assert_fail@plt+0x22e8>
   136e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   136ec:	add	r0, r0, r1
   136f0:	movw	r1, #34	; 0x22
   136f4:	strb	r1, [r0]
   136f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136fc:	add	r0, r0, #1
   13700:	str	r0, [fp, #-44]	; 0xffffffd4
   13704:	b	13708 <__assert_fail@plt+0x22f8>
   13708:	movw	r0, #1
   1370c:	strb	r0, [fp, #-57]	; 0xffffffc7
   13710:	movw	r0, #59380	; 0xe7f4
   13714:	movt	r0, #1
   13718:	str	r0, [fp, #-52]	; 0xffffffcc
   1371c:	movw	r0, #1
   13720:	str	r0, [fp, #-56]	; 0xffffffc8
   13724:	b	138a0 <__assert_fail@plt+0x2490>
   13728:	movw	r0, #1
   1372c:	strb	r0, [fp, #-57]	; 0xffffffc7
   13730:	movw	r0, #0
   13734:	strb	r0, [fp, #-59]	; 0xffffffc5
   13738:	b	138a0 <__assert_fail@plt+0x2490>
   1373c:	ldr	r0, [fp, #8]
   13740:	cmp	r0, #10
   13744:	beq	13770 <__assert_fail@plt+0x2360>
   13748:	ldr	r1, [fp, #8]
   1374c:	movw	r0, #59382	; 0xe7f6
   13750:	movt	r0, #1
   13754:	bl	157b4 <__assert_fail@plt+0x43a4>
   13758:	str	r0, [fp, #20]
   1375c:	ldr	r1, [fp, #8]
   13760:	movw	r0, #59384	; 0xe7f8
   13764:	movt	r0, #1
   13768:	bl	157b4 <__assert_fail@plt+0x43a4>
   1376c:	str	r0, [fp, #24]
   13770:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13774:	tst	r0, #1
   13778:	bne	137e4 <__assert_fail@plt+0x23d4>
   1377c:	ldr	r0, [fp, #20]
   13780:	str	r0, [fp, #-52]	; 0xffffffcc
   13784:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13788:	ldrsb	r0, [r0]
   1378c:	cmp	r0, #0
   13790:	beq	137e0 <__assert_fail@plt+0x23d0>
   13794:	b	13798 <__assert_fail@plt+0x2388>
   13798:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1379c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   137a0:	cmp	r0, r1
   137a4:	bcs	137c0 <__assert_fail@plt+0x23b0>
   137a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   137ac:	ldrb	r0, [r0]
   137b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   137b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   137b8:	add	r1, r1, r2
   137bc:	strb	r0, [r1]
   137c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137c4:	add	r0, r0, #1
   137c8:	str	r0, [fp, #-44]	; 0xffffffd4
   137cc:	b	137d0 <__assert_fail@plt+0x23c0>
   137d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   137d4:	add	r0, r0, #1
   137d8:	str	r0, [fp, #-52]	; 0xffffffcc
   137dc:	b	13784 <__assert_fail@plt+0x2374>
   137e0:	b	137e4 <__assert_fail@plt+0x23d4>
   137e4:	movw	r0, #1
   137e8:	strb	r0, [fp, #-57]	; 0xffffffc7
   137ec:	ldr	r0, [fp, #24]
   137f0:	str	r0, [fp, #-52]	; 0xffffffcc
   137f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   137f8:	bl	112e4 <strlen@plt>
   137fc:	str	r0, [fp, #-56]	; 0xffffffc8
   13800:	b	138a0 <__assert_fail@plt+0x2490>
   13804:	movw	r0, #1
   13808:	strb	r0, [fp, #-57]	; 0xffffffc7
   1380c:	movw	r0, #1
   13810:	strb	r0, [fp, #-59]	; 0xffffffc5
   13814:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13818:	tst	r0, #1
   1381c:	bne	13828 <__assert_fail@plt+0x2418>
   13820:	movw	r0, #1
   13824:	strb	r0, [fp, #-57]	; 0xffffffc7
   13828:	b	1382c <__assert_fail@plt+0x241c>
   1382c:	movw	r0, #2
   13830:	str	r0, [fp, #8]
   13834:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13838:	tst	r0, #1
   1383c:	bne	13878 <__assert_fail@plt+0x2468>
   13840:	b	13844 <__assert_fail@plt+0x2434>
   13844:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13848:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1384c:	cmp	r0, r1
   13850:	bcs	13868 <__assert_fail@plt+0x2458>
   13854:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13858:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1385c:	add	r0, r0, r1
   13860:	movw	r1, #39	; 0x27
   13864:	strb	r1, [r0]
   13868:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1386c:	add	r0, r0, #1
   13870:	str	r0, [fp, #-44]	; 0xffffffd4
   13874:	b	13878 <__assert_fail@plt+0x2468>
   13878:	movw	r0, #59384	; 0xe7f8
   1387c:	movt	r0, #1
   13880:	str	r0, [fp, #-52]	; 0xffffffcc
   13884:	movw	r0, #1
   13888:	str	r0, [fp, #-56]	; 0xffffffc8
   1388c:	b	138a0 <__assert_fail@plt+0x2490>
   13890:	movw	r0, #0
   13894:	strb	r0, [fp, #-59]	; 0xffffffc5
   13898:	b	138a0 <__assert_fail@plt+0x2490>
   1389c:	bl	113e0 <abort@plt>
   138a0:	movw	r0, #0
   138a4:	str	r0, [fp, #-40]	; 0xffffffd8
   138a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   138ac:	cmn	r0, #1
   138b0:	bne	138dc <__assert_fail@plt+0x24cc>
   138b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   138b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   138bc:	add	r0, r0, r1
   138c0:	ldrb	r0, [r0]
   138c4:	cmp	r0, #0
   138c8:	movw	r0, #0
   138cc:	moveq	r0, #1
   138d0:	and	r0, r0, #1
   138d4:	str	r0, [sp, #48]	; 0x30
   138d8:	b	138f8 <__assert_fail@plt+0x24e8>
   138dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   138e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   138e4:	cmp	r0, r1
   138e8:	movw	r0, #0
   138ec:	moveq	r0, #1
   138f0:	and	r0, r0, #1
   138f4:	str	r0, [sp, #48]	; 0x30
   138f8:	ldr	r0, [sp, #48]	; 0x30
   138fc:	cmp	r0, #0
   13900:	movw	r0, #0
   13904:	movne	r0, #1
   13908:	mvn	r1, #0
   1390c:	eor	r0, r0, r1
   13910:	tst	r0, #1
   13914:	beq	14b00 <__assert_fail@plt+0x36f0>
   13918:	movw	r0, #0
   1391c:	strb	r0, [fp, #-65]	; 0xffffffbf
   13920:	strb	r0, [fp, #-66]	; 0xffffffbe
   13924:	strb	r0, [fp, #-67]	; 0xffffffbd
   13928:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1392c:	tst	r0, #1
   13930:	beq	139dc <__assert_fail@plt+0x25cc>
   13934:	ldr	r0, [fp, #8]
   13938:	cmp	r0, #2
   1393c:	beq	139dc <__assert_fail@plt+0x25cc>
   13940:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13944:	cmp	r0, #0
   13948:	beq	139dc <__assert_fail@plt+0x25cc>
   1394c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13950:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13954:	add	r0, r0, r1
   13958:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1395c:	cmn	r1, #1
   13960:	str	r0, [sp, #44]	; 0x2c
   13964:	bne	1398c <__assert_fail@plt+0x257c>
   13968:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1396c:	movw	r1, #1
   13970:	cmp	r1, r0
   13974:	bcs	1398c <__assert_fail@plt+0x257c>
   13978:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1397c:	bl	112e4 <strlen@plt>
   13980:	str	r0, [fp, #-36]	; 0xffffffdc
   13984:	str	r0, [sp, #40]	; 0x28
   13988:	b	13994 <__assert_fail@plt+0x2584>
   1398c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13990:	str	r0, [sp, #40]	; 0x28
   13994:	ldr	r0, [sp, #40]	; 0x28
   13998:	ldr	r1, [sp, #44]	; 0x2c
   1399c:	cmp	r1, r0
   139a0:	bhi	139dc <__assert_fail@plt+0x25cc>
   139a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139ac:	add	r0, r0, r1
   139b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   139b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   139b8:	bl	111d0 <memcmp@plt>
   139bc:	cmp	r0, #0
   139c0:	bne	139dc <__assert_fail@plt+0x25cc>
   139c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   139c8:	tst	r0, #1
   139cc:	beq	139d4 <__assert_fail@plt+0x25c4>
   139d0:	b	14c80 <__assert_fail@plt+0x3870>
   139d4:	movw	r0, #1
   139d8:	strb	r0, [fp, #-65]	; 0xffffffbf
   139dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139e4:	ldrb	r0, [r0, r1]
   139e8:	strb	r0, [fp, #-63]	; 0xffffffc1
   139ec:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   139f0:	mov	r1, r0
   139f4:	cmp	r0, #126	; 0x7e
   139f8:	str	r1, [sp, #36]	; 0x24
   139fc:	bhi	1426c <__assert_fail@plt+0x2e5c>
   13a00:	add	r0, pc, #8
   13a04:	ldr	r1, [sp, #36]	; 0x24
   13a08:	ldr	r0, [r0, r1, lsl #2]
   13a0c:	mov	pc, r0
   13a10:	andeq	r3, r1, ip, lsl #24
   13a14:	andeq	r4, r1, ip, ror #4
   13a18:	andeq	r4, r1, ip, ror #4
   13a1c:	andeq	r4, r1, ip, ror #4
   13a20:	andeq	r4, r1, ip, ror #4
   13a24:	andeq	r4, r1, ip, ror #4
   13a28:	andeq	r4, r1, ip, ror #4
   13a2c:	andeq	r4, r1, r4, lsl r0
   13a30:	andeq	r4, r1, r0, lsr #32
   13a34:	andeq	r4, r1, r0, asr r0
   13a38:	andeq	r4, r1, r8, lsr r0
   13a3c:	andeq	r4, r1, ip, asr r0
   13a40:	andeq	r4, r1, ip, lsr #32
   13a44:	andeq	r4, r1, r4, asr #32
   13a48:	andeq	r4, r1, ip, ror #4
   13a4c:	andeq	r4, r1, ip, ror #4
   13a50:	andeq	r4, r1, ip, ror #4
   13a54:	andeq	r4, r1, ip, ror #4
   13a58:	andeq	r4, r1, ip, ror #4
   13a5c:	andeq	r4, r1, ip, ror #4
   13a60:	andeq	r4, r1, ip, ror #4
   13a64:	andeq	r4, r1, ip, ror #4
   13a68:	andeq	r4, r1, ip, ror #4
   13a6c:	andeq	r4, r1, ip, ror #4
   13a70:	andeq	r4, r1, ip, ror #4
   13a74:	andeq	r4, r1, ip, ror #4
   13a78:	andeq	r4, r1, ip, ror #4
   13a7c:	andeq	r4, r1, ip, ror #4
   13a80:	andeq	r4, r1, ip, ror #4
   13a84:	andeq	r4, r1, ip, ror #4
   13a88:	andeq	r4, r1, ip, ror #4
   13a8c:	andeq	r4, r1, ip, ror #4
   13a90:	andeq	r4, r1, r0, asr #2
   13a94:	andeq	r4, r1, r8, asr #2
   13a98:	andeq	r4, r1, r8, asr #2
   13a9c:	andeq	r4, r1, ip, lsr #2
   13aa0:	andeq	r4, r1, r8, asr #2
   13aa4:	andeq	r4, r1, r0, ror #4
   13aa8:	andeq	r4, r1, r8, asr #2
   13aac:	andeq	r4, r1, r8, ror #2
   13ab0:	andeq	r4, r1, r8, asr #2
   13ab4:	andeq	r4, r1, r8, asr #2
   13ab8:	andeq	r4, r1, r8, asr #2
   13abc:	andeq	r4, r1, r0, ror #4
   13ac0:	andeq	r4, r1, r0, ror #4
   13ac4:	andeq	r4, r1, r0, ror #4
   13ac8:	andeq	r4, r1, r0, ror #4
   13acc:	andeq	r4, r1, r0, ror #4
   13ad0:	andeq	r4, r1, r0, ror #4
   13ad4:	andeq	r4, r1, r0, ror #4
   13ad8:	andeq	r4, r1, r0, ror #4
   13adc:	andeq	r4, r1, r0, ror #4
   13ae0:	andeq	r4, r1, r0, ror #4
   13ae4:	andeq	r4, r1, r0, ror #4
   13ae8:	andeq	r4, r1, r0, ror #4
   13aec:	andeq	r4, r1, r0, ror #4
   13af0:	andeq	r4, r1, r0, ror #4
   13af4:	andeq	r4, r1, r0, ror #4
   13af8:	andeq	r4, r1, r0, ror #4
   13afc:	andeq	r4, r1, r8, asr #2
   13b00:	andeq	r4, r1, r8, asr #2
   13b04:	andeq	r4, r1, r8, asr #2
   13b08:	andeq	r4, r1, r8, asr #2
   13b0c:	andeq	r3, r1, r8, lsl lr
   13b10:	andeq	r4, r1, ip, ror #4
   13b14:	andeq	r4, r1, r0, ror #4
   13b18:	andeq	r4, r1, r0, ror #4
   13b1c:	andeq	r4, r1, r0, ror #4
   13b20:	andeq	r4, r1, r0, ror #4
   13b24:	andeq	r4, r1, r0, ror #4
   13b28:	andeq	r4, r1, r0, ror #4
   13b2c:	andeq	r4, r1, r0, ror #4
   13b30:	andeq	r4, r1, r0, ror #4
   13b34:	andeq	r4, r1, r0, ror #4
   13b38:	andeq	r4, r1, r0, ror #4
   13b3c:	andeq	r4, r1, r0, ror #4
   13b40:	andeq	r4, r1, r0, ror #4
   13b44:	andeq	r4, r1, r0, ror #4
   13b48:	andeq	r4, r1, r0, ror #4
   13b4c:	andeq	r4, r1, r0, ror #4
   13b50:	andeq	r4, r1, r0, ror #4
   13b54:	andeq	r4, r1, r0, ror #4
   13b58:	andeq	r4, r1, r0, ror #4
   13b5c:	andeq	r4, r1, r0, ror #4
   13b60:	andeq	r4, r1, r0, ror #4
   13b64:	andeq	r4, r1, r0, ror #4
   13b68:	andeq	r4, r1, r0, ror #4
   13b6c:	andeq	r4, r1, r0, ror #4
   13b70:	andeq	r4, r1, r0, ror #4
   13b74:	andeq	r4, r1, r0, ror #4
   13b78:	andeq	r4, r1, r0, ror #4
   13b7c:	andeq	r4, r1, r8, asr #2
   13b80:	andeq	r4, r1, r8, rrx
   13b84:	andeq	r4, r1, r0, ror #4
   13b88:	andeq	r4, r1, r8, asr #2
   13b8c:	andeq	r4, r1, r0, ror #4
   13b90:	andeq	r4, r1, r8, asr #2
   13b94:	andeq	r4, r1, r0, ror #4
   13b98:	andeq	r4, r1, r0, ror #4
   13b9c:	andeq	r4, r1, r0, ror #4
   13ba0:	andeq	r4, r1, r0, ror #4
   13ba4:	andeq	r4, r1, r0, ror #4
   13ba8:	andeq	r4, r1, r0, ror #4
   13bac:	andeq	r4, r1, r0, ror #4
   13bb0:	andeq	r4, r1, r0, ror #4
   13bb4:	andeq	r4, r1, r0, ror #4
   13bb8:	andeq	r4, r1, r0, ror #4
   13bbc:	andeq	r4, r1, r0, ror #4
   13bc0:	andeq	r4, r1, r0, ror #4
   13bc4:	andeq	r4, r1, r0, ror #4
   13bc8:	andeq	r4, r1, r0, ror #4
   13bcc:	andeq	r4, r1, r0, ror #4
   13bd0:	andeq	r4, r1, r0, ror #4
   13bd4:	andeq	r4, r1, r0, ror #4
   13bd8:	andeq	r4, r1, r0, ror #4
   13bdc:	andeq	r4, r1, r0, ror #4
   13be0:	andeq	r4, r1, r0, ror #4
   13be4:	andeq	r4, r1, r0, ror #4
   13be8:	andeq	r4, r1, r0, ror #4
   13bec:	andeq	r4, r1, r0, ror #4
   13bf0:	andeq	r4, r1, r0, ror #4
   13bf4:	andeq	r4, r1, r0, ror #4
   13bf8:	andeq	r4, r1, r0, ror #4
   13bfc:	strdeq	r4, [r1], -r8
   13c00:	andeq	r4, r1, r8, asr #2
   13c04:	strdeq	r4, [r1], -r8
   13c08:	andeq	r4, r1, ip, lsr #2
   13c0c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13c10:	tst	r0, #1
   13c14:	beq	13dfc <__assert_fail@plt+0x29ec>
   13c18:	b	13c1c <__assert_fail@plt+0x280c>
   13c1c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c20:	tst	r0, #1
   13c24:	beq	13c2c <__assert_fail@plt+0x281c>
   13c28:	b	14c80 <__assert_fail@plt+0x3870>
   13c2c:	movw	r0, #1
   13c30:	strb	r0, [fp, #-66]	; 0xffffffbe
   13c34:	ldr	r0, [fp, #8]
   13c38:	cmp	r0, #2
   13c3c:	bne	13cf0 <__assert_fail@plt+0x28e0>
   13c40:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13c44:	tst	r0, #1
   13c48:	bne	13cf0 <__assert_fail@plt+0x28e0>
   13c4c:	b	13c50 <__assert_fail@plt+0x2840>
   13c50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c58:	cmp	r0, r1
   13c5c:	bcs	13c74 <__assert_fail@plt+0x2864>
   13c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c68:	add	r0, r0, r1
   13c6c:	movw	r1, #39	; 0x27
   13c70:	strb	r1, [r0]
   13c74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c78:	add	r0, r0, #1
   13c7c:	str	r0, [fp, #-44]	; 0xffffffd4
   13c80:	b	13c84 <__assert_fail@plt+0x2874>
   13c84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c8c:	cmp	r0, r1
   13c90:	bcs	13ca8 <__assert_fail@plt+0x2898>
   13c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c9c:	add	r0, r0, r1
   13ca0:	movw	r1, #36	; 0x24
   13ca4:	strb	r1, [r0]
   13ca8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cac:	add	r0, r0, #1
   13cb0:	str	r0, [fp, #-44]	; 0xffffffd4
   13cb4:	b	13cb8 <__assert_fail@plt+0x28a8>
   13cb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cc0:	cmp	r0, r1
   13cc4:	bcs	13cdc <__assert_fail@plt+0x28cc>
   13cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ccc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cd0:	add	r0, r0, r1
   13cd4:	movw	r1, #39	; 0x27
   13cd8:	strb	r1, [r0]
   13cdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ce0:	add	r0, r0, #1
   13ce4:	str	r0, [fp, #-44]	; 0xffffffd4
   13ce8:	movw	r0, #1
   13cec:	strb	r0, [fp, #-60]	; 0xffffffc4
   13cf0:	b	13cf4 <__assert_fail@plt+0x28e4>
   13cf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cfc:	cmp	r0, r1
   13d00:	bcs	13d18 <__assert_fail@plt+0x2908>
   13d04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d0c:	add	r0, r0, r1
   13d10:	movw	r1, #92	; 0x5c
   13d14:	strb	r1, [r0]
   13d18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d1c:	add	r0, r0, #1
   13d20:	str	r0, [fp, #-44]	; 0xffffffd4
   13d24:	b	13d28 <__assert_fail@plt+0x2918>
   13d28:	ldr	r0, [fp, #8]
   13d2c:	cmp	r0, #2
   13d30:	beq	13df0 <__assert_fail@plt+0x29e0>
   13d34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13d38:	add	r0, r0, #1
   13d3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13d40:	cmp	r0, r1
   13d44:	bcs	13df0 <__assert_fail@plt+0x29e0>
   13d48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d4c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13d50:	add	r1, r1, #1
   13d54:	add	r0, r0, r1
   13d58:	ldrb	r0, [r0]
   13d5c:	movw	r1, #48	; 0x30
   13d60:	cmp	r1, r0
   13d64:	bgt	13df0 <__assert_fail@plt+0x29e0>
   13d68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13d70:	add	r1, r1, #1
   13d74:	add	r0, r0, r1
   13d78:	ldrb	r0, [r0]
   13d7c:	cmp	r0, #57	; 0x39
   13d80:	bgt	13df0 <__assert_fail@plt+0x29e0>
   13d84:	b	13d88 <__assert_fail@plt+0x2978>
   13d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d90:	cmp	r0, r1
   13d94:	bcs	13dac <__assert_fail@plt+0x299c>
   13d98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13da0:	add	r0, r0, r1
   13da4:	movw	r1, #48	; 0x30
   13da8:	strb	r1, [r0]
   13dac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13db0:	add	r0, r0, #1
   13db4:	str	r0, [fp, #-44]	; 0xffffffd4
   13db8:	b	13dbc <__assert_fail@plt+0x29ac>
   13dbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13dc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13dc4:	cmp	r0, r1
   13dc8:	bcs	13de0 <__assert_fail@plt+0x29d0>
   13dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13dd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13dd4:	add	r0, r0, r1
   13dd8:	movw	r1, #48	; 0x30
   13ddc:	strb	r1, [r0]
   13de0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13de4:	add	r0, r0, #1
   13de8:	str	r0, [fp, #-44]	; 0xffffffd4
   13dec:	b	13df0 <__assert_fail@plt+0x29e0>
   13df0:	movw	r0, #48	; 0x30
   13df4:	strb	r0, [fp, #-63]	; 0xffffffc1
   13df8:	b	13e14 <__assert_fail@plt+0x2a04>
   13dfc:	ldr	r0, [fp, #12]
   13e00:	and	r0, r0, #1
   13e04:	cmp	r0, #0
   13e08:	beq	13e10 <__assert_fail@plt+0x2a00>
   13e0c:	b	14af0 <__assert_fail@plt+0x36e0>
   13e10:	b	13e14 <__assert_fail@plt+0x2a04>
   13e14:	b	1488c <__assert_fail@plt+0x347c>
   13e18:	ldr	r0, [fp, #8]
   13e1c:	cmp	r0, #2
   13e20:	str	r0, [sp, #32]
   13e24:	beq	13e3c <__assert_fail@plt+0x2a2c>
   13e28:	b	13e2c <__assert_fail@plt+0x2a1c>
   13e2c:	ldr	r0, [sp, #32]
   13e30:	cmp	r0, #5
   13e34:	beq	13e50 <__assert_fail@plt+0x2a40>
   13e38:	b	1400c <__assert_fail@plt+0x2bfc>
   13e3c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13e40:	tst	r0, #1
   13e44:	beq	13e4c <__assert_fail@plt+0x2a3c>
   13e48:	b	14c80 <__assert_fail@plt+0x3870>
   13e4c:	b	14010 <__assert_fail@plt+0x2c00>
   13e50:	ldr	r0, [fp, #12]
   13e54:	and	r0, r0, #4
   13e58:	cmp	r0, #0
   13e5c:	beq	14008 <__assert_fail@plt+0x2bf8>
   13e60:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e64:	add	r0, r0, #2
   13e68:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13e6c:	cmp	r0, r1
   13e70:	bcs	14008 <__assert_fail@plt+0x2bf8>
   13e74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e7c:	add	r1, r1, #1
   13e80:	add	r0, r0, r1
   13e84:	ldrb	r0, [r0]
   13e88:	cmp	r0, #63	; 0x3f
   13e8c:	bne	14008 <__assert_fail@plt+0x2bf8>
   13e90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e98:	add	r0, r1, r0
   13e9c:	ldrb	r0, [r0, #2]
   13ea0:	mov	r1, r0
   13ea4:	cmp	r0, #33	; 0x21
   13ea8:	str	r1, [sp, #28]
   13eac:	beq	13efc <__assert_fail@plt+0x2aec>
   13eb0:	b	13eb4 <__assert_fail@plt+0x2aa4>
   13eb4:	ldr	r0, [sp, #28]
   13eb8:	sub	r1, r0, #39	; 0x27
   13ebc:	cmp	r1, #3
   13ec0:	bcc	13efc <__assert_fail@plt+0x2aec>
   13ec4:	b	13ec8 <__assert_fail@plt+0x2ab8>
   13ec8:	ldr	r0, [sp, #28]
   13ecc:	cmp	r0, #45	; 0x2d
   13ed0:	beq	13efc <__assert_fail@plt+0x2aec>
   13ed4:	b	13ed8 <__assert_fail@plt+0x2ac8>
   13ed8:	ldr	r0, [sp, #28]
   13edc:	cmp	r0, #47	; 0x2f
   13ee0:	beq	13efc <__assert_fail@plt+0x2aec>
   13ee4:	b	13ee8 <__assert_fail@plt+0x2ad8>
   13ee8:	ldr	r0, [sp, #28]
   13eec:	sub	r1, r0, #60	; 0x3c
   13ef0:	cmp	r1, #2
   13ef4:	bhi	14000 <__assert_fail@plt+0x2bf0>
   13ef8:	b	13efc <__assert_fail@plt+0x2aec>
   13efc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13f00:	tst	r0, #1
   13f04:	beq	13f0c <__assert_fail@plt+0x2afc>
   13f08:	b	14c80 <__assert_fail@plt+0x3870>
   13f0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13f14:	add	r1, r1, #2
   13f18:	add	r0, r0, r1
   13f1c:	ldrb	r0, [r0]
   13f20:	strb	r0, [fp, #-63]	; 0xffffffc1
   13f24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f28:	add	r0, r0, #2
   13f2c:	str	r0, [fp, #-40]	; 0xffffffd8
   13f30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f38:	cmp	r0, r1
   13f3c:	bcs	13f54 <__assert_fail@plt+0x2b44>
   13f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13f48:	add	r0, r0, r1
   13f4c:	movw	r1, #63	; 0x3f
   13f50:	strb	r1, [r0]
   13f54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f58:	add	r0, r0, #1
   13f5c:	str	r0, [fp, #-44]	; 0xffffffd4
   13f60:	b	13f64 <__assert_fail@plt+0x2b54>
   13f64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f6c:	cmp	r0, r1
   13f70:	bcs	13f88 <__assert_fail@plt+0x2b78>
   13f74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13f7c:	add	r0, r0, r1
   13f80:	movw	r1, #34	; 0x22
   13f84:	strb	r1, [r0]
   13f88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f8c:	add	r0, r0, #1
   13f90:	str	r0, [fp, #-44]	; 0xffffffd4
   13f94:	b	13f98 <__assert_fail@plt+0x2b88>
   13f98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fa0:	cmp	r0, r1
   13fa4:	bcs	13fbc <__assert_fail@plt+0x2bac>
   13fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13fb0:	add	r0, r0, r1
   13fb4:	movw	r1, #34	; 0x22
   13fb8:	strb	r1, [r0]
   13fbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fc0:	add	r0, r0, #1
   13fc4:	str	r0, [fp, #-44]	; 0xffffffd4
   13fc8:	b	13fcc <__assert_fail@plt+0x2bbc>
   13fcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fd4:	cmp	r0, r1
   13fd8:	bcs	13ff0 <__assert_fail@plt+0x2be0>
   13fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fe0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13fe4:	add	r0, r0, r1
   13fe8:	movw	r1, #63	; 0x3f
   13fec:	strb	r1, [r0]
   13ff0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ff4:	add	r0, r0, #1
   13ff8:	str	r0, [fp, #-44]	; 0xffffffd4
   13ffc:	b	14004 <__assert_fail@plt+0x2bf4>
   14000:	b	14004 <__assert_fail@plt+0x2bf4>
   14004:	b	14008 <__assert_fail@plt+0x2bf8>
   14008:	b	14010 <__assert_fail@plt+0x2c00>
   1400c:	b	14010 <__assert_fail@plt+0x2c00>
   14010:	b	1488c <__assert_fail@plt+0x347c>
   14014:	movw	r0, #97	; 0x61
   14018:	strb	r0, [fp, #-64]	; 0xffffffc0
   1401c:	b	140dc <__assert_fail@plt+0x2ccc>
   14020:	movw	r0, #98	; 0x62
   14024:	strb	r0, [fp, #-64]	; 0xffffffc0
   14028:	b	140dc <__assert_fail@plt+0x2ccc>
   1402c:	movw	r0, #102	; 0x66
   14030:	strb	r0, [fp, #-64]	; 0xffffffc0
   14034:	b	140dc <__assert_fail@plt+0x2ccc>
   14038:	movw	r0, #110	; 0x6e
   1403c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14040:	b	140bc <__assert_fail@plt+0x2cac>
   14044:	movw	r0, #114	; 0x72
   14048:	strb	r0, [fp, #-64]	; 0xffffffc0
   1404c:	b	140bc <__assert_fail@plt+0x2cac>
   14050:	movw	r0, #116	; 0x74
   14054:	strb	r0, [fp, #-64]	; 0xffffffc0
   14058:	b	140bc <__assert_fail@plt+0x2cac>
   1405c:	movw	r0, #118	; 0x76
   14060:	strb	r0, [fp, #-64]	; 0xffffffc0
   14064:	b	140dc <__assert_fail@plt+0x2ccc>
   14068:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1406c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14070:	ldr	r0, [fp, #8]
   14074:	cmp	r0, #2
   14078:	bne	14090 <__assert_fail@plt+0x2c80>
   1407c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14080:	tst	r0, #1
   14084:	beq	1408c <__assert_fail@plt+0x2c7c>
   14088:	b	14c80 <__assert_fail@plt+0x3870>
   1408c:	b	14a14 <__assert_fail@plt+0x3604>
   14090:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14094:	tst	r0, #1
   14098:	beq	140b8 <__assert_fail@plt+0x2ca8>
   1409c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   140a0:	tst	r0, #1
   140a4:	beq	140b8 <__assert_fail@plt+0x2ca8>
   140a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   140ac:	cmp	r0, #0
   140b0:	beq	140b8 <__assert_fail@plt+0x2ca8>
   140b4:	b	14a14 <__assert_fail@plt+0x3604>
   140b8:	b	140bc <__assert_fail@plt+0x2cac>
   140bc:	ldr	r0, [fp, #8]
   140c0:	cmp	r0, #2
   140c4:	bne	140d8 <__assert_fail@plt+0x2cc8>
   140c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   140cc:	tst	r0, #1
   140d0:	beq	140d8 <__assert_fail@plt+0x2cc8>
   140d4:	b	14c80 <__assert_fail@plt+0x3870>
   140d8:	b	140dc <__assert_fail@plt+0x2ccc>
   140dc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   140e0:	tst	r0, #1
   140e4:	beq	140f4 <__assert_fail@plt+0x2ce4>
   140e8:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   140ec:	strb	r0, [fp, #-63]	; 0xffffffc1
   140f0:	b	14900 <__assert_fail@plt+0x34f0>
   140f4:	b	1488c <__assert_fail@plt+0x347c>
   140f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   140fc:	cmn	r0, #1
   14100:	bne	14118 <__assert_fail@plt+0x2d08>
   14104:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14108:	ldrb	r0, [r0, #1]
   1410c:	cmp	r0, #0
   14110:	beq	14128 <__assert_fail@plt+0x2d18>
   14114:	b	14124 <__assert_fail@plt+0x2d14>
   14118:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1411c:	cmp	r0, #1
   14120:	beq	14128 <__assert_fail@plt+0x2d18>
   14124:	b	1488c <__assert_fail@plt+0x347c>
   14128:	b	1412c <__assert_fail@plt+0x2d1c>
   1412c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14130:	cmp	r0, #0
   14134:	beq	1413c <__assert_fail@plt+0x2d2c>
   14138:	b	1488c <__assert_fail@plt+0x347c>
   1413c:	b	14140 <__assert_fail@plt+0x2d30>
   14140:	movw	r0, #1
   14144:	strb	r0, [fp, #-67]	; 0xffffffbd
   14148:	ldr	r0, [fp, #8]
   1414c:	cmp	r0, #2
   14150:	bne	14164 <__assert_fail@plt+0x2d54>
   14154:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14158:	tst	r0, #1
   1415c:	beq	14164 <__assert_fail@plt+0x2d54>
   14160:	b	14c80 <__assert_fail@plt+0x3870>
   14164:	b	1488c <__assert_fail@plt+0x347c>
   14168:	movw	r0, #1
   1416c:	strb	r0, [fp, #-61]	; 0xffffffc3
   14170:	strb	r0, [fp, #-67]	; 0xffffffbd
   14174:	ldr	r0, [fp, #8]
   14178:	cmp	r0, #2
   1417c:	bne	1425c <__assert_fail@plt+0x2e4c>
   14180:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14184:	tst	r0, #1
   14188:	beq	14190 <__assert_fail@plt+0x2d80>
   1418c:	b	14c80 <__assert_fail@plt+0x3870>
   14190:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14194:	cmp	r0, #0
   14198:	beq	141b8 <__assert_fail@plt+0x2da8>
   1419c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   141a0:	cmp	r0, #0
   141a4:	bne	141b8 <__assert_fail@plt+0x2da8>
   141a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   141ac:	str	r0, [fp, #-48]	; 0xffffffd0
   141b0:	movw	r0, #0
   141b4:	str	r0, [fp, #-28]	; 0xffffffe4
   141b8:	b	141bc <__assert_fail@plt+0x2dac>
   141bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141c4:	cmp	r0, r1
   141c8:	bcs	141e0 <__assert_fail@plt+0x2dd0>
   141cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   141d4:	add	r0, r0, r1
   141d8:	movw	r1, #39	; 0x27
   141dc:	strb	r1, [r0]
   141e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141e4:	add	r0, r0, #1
   141e8:	str	r0, [fp, #-44]	; 0xffffffd4
   141ec:	b	141f0 <__assert_fail@plt+0x2de0>
   141f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141f8:	cmp	r0, r1
   141fc:	bcs	14214 <__assert_fail@plt+0x2e04>
   14200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14204:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14208:	add	r0, r0, r1
   1420c:	movw	r1, #92	; 0x5c
   14210:	strb	r1, [r0]
   14214:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14218:	add	r0, r0, #1
   1421c:	str	r0, [fp, #-44]	; 0xffffffd4
   14220:	b	14224 <__assert_fail@plt+0x2e14>
   14224:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14228:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1422c:	cmp	r0, r1
   14230:	bcs	14248 <__assert_fail@plt+0x2e38>
   14234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14238:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1423c:	add	r0, r0, r1
   14240:	movw	r1, #39	; 0x27
   14244:	strb	r1, [r0]
   14248:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1424c:	add	r0, r0, #1
   14250:	str	r0, [fp, #-44]	; 0xffffffd4
   14254:	movw	r0, #0
   14258:	strb	r0, [fp, #-60]	; 0xffffffc4
   1425c:	b	1488c <__assert_fail@plt+0x347c>
   14260:	movw	r0, #1
   14264:	strb	r0, [fp, #-67]	; 0xffffffbd
   14268:	b	1488c <__assert_fail@plt+0x347c>
   1426c:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   14270:	tst	r0, #1
   14274:	beq	142b4 <__assert_fail@plt+0x2ea4>
   14278:	mov	r0, #1
   1427c:	str	r0, [fp, #-72]	; 0xffffffb8
   14280:	bl	112b4 <__ctype_b_loc@plt>
   14284:	ldr	r0, [r0]
   14288:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1428c:	mov	r2, r1
   14290:	add	r0, r0, r1, lsl #1
   14294:	ldrh	r0, [r0]
   14298:	and	r0, r0, #16384	; 0x4000
   1429c:	cmp	r0, #0
   142a0:	movw	r0, #0
   142a4:	movne	r0, #1
   142a8:	and	r0, r0, #1
   142ac:	strb	r0, [fp, #-73]	; 0xffffffb7
   142b0:	b	14540 <__assert_fail@plt+0x3130>
   142b4:	sub	r0, fp, #84	; 0x54
   142b8:	movw	r1, #0
   142bc:	and	r1, r1, #255	; 0xff
   142c0:	movw	r2, #8
   142c4:	bl	11338 <memset@plt>
   142c8:	movw	r0, #0
   142cc:	str	r0, [fp, #-72]	; 0xffffffb8
   142d0:	movw	r0, #1
   142d4:	strb	r0, [fp, #-73]	; 0xffffffb7
   142d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   142dc:	cmn	r0, #1
   142e0:	bne	142f0 <__assert_fail@plt+0x2ee0>
   142e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142e8:	bl	112e4 <strlen@plt>
   142ec:	str	r0, [fp, #-36]	; 0xffffffdc
   142f0:	b	142f4 <__assert_fail@plt+0x2ee4>
   142f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   142fc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14300:	add	r1, r1, r2
   14304:	add	r1, r0, r1
   14308:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1430c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14310:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14314:	add	r2, r2, r3
   14318:	sub	r2, r0, r2
   1431c:	add	r0, sp, #88	; 0x58
   14320:	sub	r3, fp, #84	; 0x54
   14324:	bl	1b9f4 <__assert_fail@plt+0xa5e4>
   14328:	str	r0, [sp, #84]	; 0x54
   1432c:	ldr	r0, [sp, #84]	; 0x54
   14330:	cmp	r0, #0
   14334:	bne	1433c <__assert_fail@plt+0x2f2c>
   14338:	b	1453c <__assert_fail@plt+0x312c>
   1433c:	ldr	r0, [sp, #84]	; 0x54
   14340:	cmn	r0, #1
   14344:	bne	14354 <__assert_fail@plt+0x2f44>
   14348:	movw	r0, #0
   1434c:	strb	r0, [fp, #-73]	; 0xffffffb7
   14350:	b	1453c <__assert_fail@plt+0x312c>
   14354:	ldr	r0, [sp, #84]	; 0x54
   14358:	cmn	r0, #2
   1435c:	bne	143d0 <__assert_fail@plt+0x2fc0>
   14360:	movw	r0, #0
   14364:	strb	r0, [fp, #-73]	; 0xffffffb7
   14368:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1436c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14370:	add	r0, r0, r1
   14374:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14378:	cmp	r0, r1
   1437c:	movw	r0, #0
   14380:	str	r0, [sp, #24]
   14384:	bcs	143b0 <__assert_fail@plt+0x2fa0>
   14388:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1438c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14390:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14394:	add	r1, r1, r2
   14398:	add	r0, r0, r1
   1439c:	ldrb	r0, [r0]
   143a0:	cmp	r0, #0
   143a4:	movw	r0, #0
   143a8:	movne	r0, #1
   143ac:	str	r0, [sp, #24]
   143b0:	ldr	r0, [sp, #24]
   143b4:	tst	r0, #1
   143b8:	beq	143cc <__assert_fail@plt+0x2fbc>
   143bc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   143c0:	add	r0, r0, #1
   143c4:	str	r0, [fp, #-72]	; 0xffffffb8
   143c8:	b	14368 <__assert_fail@plt+0x2f58>
   143cc:	b	1453c <__assert_fail@plt+0x312c>
   143d0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   143d4:	tst	r0, #1
   143d8:	beq	144e4 <__assert_fail@plt+0x30d4>
   143dc:	ldr	r0, [fp, #8]
   143e0:	cmp	r0, #2
   143e4:	bne	144e4 <__assert_fail@plt+0x30d4>
   143e8:	movw	r0, #1
   143ec:	str	r0, [sp, #80]	; 0x50
   143f0:	ldr	r0, [sp, #80]	; 0x50
   143f4:	ldr	r1, [sp, #84]	; 0x54
   143f8:	cmp	r0, r1
   143fc:	bcs	144e0 <__assert_fail@plt+0x30d0>
   14400:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14404:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14408:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1440c:	add	r1, r1, r2
   14410:	ldr	r2, [sp, #80]	; 0x50
   14414:	add	r1, r1, r2
   14418:	ldrb	r0, [r0, r1]
   1441c:	sub	r0, r0, #91	; 0x5b
   14420:	cmp	r0, #33	; 0x21
   14424:	str	r0, [sp, #20]
   14428:	bhi	144c8 <__assert_fail@plt+0x30b8>
   1442c:	add	r0, pc, #8
   14430:	ldr	r1, [sp, #20]
   14434:	ldr	r0, [r0, r1, lsl #2]
   14438:	mov	pc, r0
   1443c:	andeq	r4, r1, r4, asr #9
   14440:	andeq	r4, r1, r4, asr #9
   14444:	andeq	r4, r1, r8, asr #9
   14448:	andeq	r4, r1, r4, asr #9
   1444c:	andeq	r4, r1, r8, asr #9
   14450:	andeq	r4, r1, r4, asr #9
   14454:	andeq	r4, r1, r8, asr #9
   14458:	andeq	r4, r1, r8, asr #9
   1445c:	andeq	r4, r1, r8, asr #9
   14460:	andeq	r4, r1, r8, asr #9
   14464:	andeq	r4, r1, r8, asr #9
   14468:	andeq	r4, r1, r8, asr #9
   1446c:	andeq	r4, r1, r8, asr #9
   14470:	andeq	r4, r1, r8, asr #9
   14474:	andeq	r4, r1, r8, asr #9
   14478:	andeq	r4, r1, r8, asr #9
   1447c:	andeq	r4, r1, r8, asr #9
   14480:	andeq	r4, r1, r8, asr #9
   14484:	andeq	r4, r1, r8, asr #9
   14488:	andeq	r4, r1, r8, asr #9
   1448c:	andeq	r4, r1, r8, asr #9
   14490:	andeq	r4, r1, r8, asr #9
   14494:	andeq	r4, r1, r8, asr #9
   14498:	andeq	r4, r1, r8, asr #9
   1449c:	andeq	r4, r1, r8, asr #9
   144a0:	andeq	r4, r1, r8, asr #9
   144a4:	andeq	r4, r1, r8, asr #9
   144a8:	andeq	r4, r1, r8, asr #9
   144ac:	andeq	r4, r1, r8, asr #9
   144b0:	andeq	r4, r1, r8, asr #9
   144b4:	andeq	r4, r1, r8, asr #9
   144b8:	andeq	r4, r1, r8, asr #9
   144bc:	andeq	r4, r1, r8, asr #9
   144c0:	andeq	r4, r1, r4, asr #9
   144c4:	b	14c80 <__assert_fail@plt+0x3870>
   144c8:	b	144cc <__assert_fail@plt+0x30bc>
   144cc:	b	144d0 <__assert_fail@plt+0x30c0>
   144d0:	ldr	r0, [sp, #80]	; 0x50
   144d4:	add	r0, r0, #1
   144d8:	str	r0, [sp, #80]	; 0x50
   144dc:	b	143f0 <__assert_fail@plt+0x2fe0>
   144e0:	b	144e4 <__assert_fail@plt+0x30d4>
   144e4:	ldr	r0, [sp, #88]	; 0x58
   144e8:	bl	11200 <iswprint@plt>
   144ec:	cmp	r0, #0
   144f0:	bne	144fc <__assert_fail@plt+0x30ec>
   144f4:	movw	r0, #0
   144f8:	strb	r0, [fp, #-73]	; 0xffffffb7
   144fc:	ldr	r0, [sp, #84]	; 0x54
   14500:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14504:	add	r0, r1, r0
   14508:	str	r0, [fp, #-72]	; 0xffffffb8
   1450c:	b	14510 <__assert_fail@plt+0x3100>
   14510:	b	14514 <__assert_fail@plt+0x3104>
   14514:	b	14518 <__assert_fail@plt+0x3108>
   14518:	sub	r0, fp, #84	; 0x54
   1451c:	bl	111c4 <mbsinit@plt>
   14520:	cmp	r0, #0
   14524:	movw	r0, #0
   14528:	movne	r0, #1
   1452c:	mvn	r1, #0
   14530:	eor	r0, r0, r1
   14534:	tst	r0, #1
   14538:	bne	142f4 <__assert_fail@plt+0x2ee4>
   1453c:	b	14540 <__assert_fail@plt+0x3130>
   14540:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14544:	and	r0, r0, #1
   14548:	strb	r0, [fp, #-67]	; 0xffffffbd
   1454c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14550:	movw	r1, #1
   14554:	cmp	r1, r0
   14558:	bcc	14574 <__assert_fail@plt+0x3164>
   1455c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14560:	tst	r0, #1
   14564:	beq	14888 <__assert_fail@plt+0x3478>
   14568:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1456c:	tst	r0, #1
   14570:	bne	14888 <__assert_fail@plt+0x3478>
   14574:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14578:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1457c:	add	r0, r0, r1
   14580:	str	r0, [sp, #76]	; 0x4c
   14584:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14588:	tst	r0, #1
   1458c:	beq	1473c <__assert_fail@plt+0x332c>
   14590:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14594:	tst	r0, #1
   14598:	bne	1473c <__assert_fail@plt+0x332c>
   1459c:	b	145a0 <__assert_fail@plt+0x3190>
   145a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   145a4:	tst	r0, #1
   145a8:	beq	145b0 <__assert_fail@plt+0x31a0>
   145ac:	b	14c80 <__assert_fail@plt+0x3870>
   145b0:	movw	r0, #1
   145b4:	strb	r0, [fp, #-66]	; 0xffffffbe
   145b8:	ldr	r0, [fp, #8]
   145bc:	cmp	r0, #2
   145c0:	bne	14674 <__assert_fail@plt+0x3264>
   145c4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   145c8:	tst	r0, #1
   145cc:	bne	14674 <__assert_fail@plt+0x3264>
   145d0:	b	145d4 <__assert_fail@plt+0x31c4>
   145d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   145dc:	cmp	r0, r1
   145e0:	bcs	145f8 <__assert_fail@plt+0x31e8>
   145e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   145ec:	add	r0, r0, r1
   145f0:	movw	r1, #39	; 0x27
   145f4:	strb	r1, [r0]
   145f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145fc:	add	r0, r0, #1
   14600:	str	r0, [fp, #-44]	; 0xffffffd4
   14604:	b	14608 <__assert_fail@plt+0x31f8>
   14608:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1460c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14610:	cmp	r0, r1
   14614:	bcs	1462c <__assert_fail@plt+0x321c>
   14618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1461c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14620:	add	r0, r0, r1
   14624:	movw	r1, #36	; 0x24
   14628:	strb	r1, [r0]
   1462c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14630:	add	r0, r0, #1
   14634:	str	r0, [fp, #-44]	; 0xffffffd4
   14638:	b	1463c <__assert_fail@plt+0x322c>
   1463c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14640:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14644:	cmp	r0, r1
   14648:	bcs	14660 <__assert_fail@plt+0x3250>
   1464c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14650:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14654:	add	r0, r0, r1
   14658:	movw	r1, #39	; 0x27
   1465c:	strb	r1, [r0]
   14660:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14664:	add	r0, r0, #1
   14668:	str	r0, [fp, #-44]	; 0xffffffd4
   1466c:	movw	r0, #1
   14670:	strb	r0, [fp, #-60]	; 0xffffffc4
   14674:	b	14678 <__assert_fail@plt+0x3268>
   14678:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1467c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14680:	cmp	r0, r1
   14684:	bcs	1469c <__assert_fail@plt+0x328c>
   14688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1468c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14690:	add	r0, r0, r1
   14694:	movw	r1, #92	; 0x5c
   14698:	strb	r1, [r0]
   1469c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146a0:	add	r0, r0, #1
   146a4:	str	r0, [fp, #-44]	; 0xffffffd4
   146a8:	b	146ac <__assert_fail@plt+0x329c>
   146ac:	b	146b0 <__assert_fail@plt+0x32a0>
   146b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146b8:	cmp	r0, r1
   146bc:	bcs	146dc <__assert_fail@plt+0x32cc>
   146c0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   146c4:	asr	r0, r0, #6
   146c8:	add	r0, r0, #48	; 0x30
   146cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   146d0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   146d4:	add	r1, r1, r2
   146d8:	strb	r0, [r1]
   146dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146e0:	add	r0, r0, #1
   146e4:	str	r0, [fp, #-44]	; 0xffffffd4
   146e8:	b	146ec <__assert_fail@plt+0x32dc>
   146ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146f4:	cmp	r0, r1
   146f8:	bcs	1471c <__assert_fail@plt+0x330c>
   146fc:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14700:	asr	r0, r0, #3
   14704:	and	r0, r0, #7
   14708:	add	r0, r0, #48	; 0x30
   1470c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14710:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14714:	add	r1, r1, r2
   14718:	strb	r0, [r1]
   1471c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14720:	add	r0, r0, #1
   14724:	str	r0, [fp, #-44]	; 0xffffffd4
   14728:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1472c:	and	r0, r0, #7
   14730:	add	r0, r0, #48	; 0x30
   14734:	strb	r0, [fp, #-63]	; 0xffffffc1
   14738:	b	14788 <__assert_fail@plt+0x3378>
   1473c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14740:	tst	r0, #1
   14744:	beq	14784 <__assert_fail@plt+0x3374>
   14748:	b	1474c <__assert_fail@plt+0x333c>
   1474c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14750:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14754:	cmp	r0, r1
   14758:	bcs	14770 <__assert_fail@plt+0x3360>
   1475c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14760:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14764:	add	r0, r0, r1
   14768:	movw	r1, #92	; 0x5c
   1476c:	strb	r1, [r0]
   14770:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14774:	add	r0, r0, #1
   14778:	str	r0, [fp, #-44]	; 0xffffffd4
   1477c:	movw	r0, #0
   14780:	strb	r0, [fp, #-65]	; 0xffffffbf
   14784:	b	14788 <__assert_fail@plt+0x3378>
   14788:	ldr	r0, [sp, #76]	; 0x4c
   1478c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14790:	add	r1, r1, #1
   14794:	cmp	r0, r1
   14798:	bhi	147a0 <__assert_fail@plt+0x3390>
   1479c:	b	14884 <__assert_fail@plt+0x3474>
   147a0:	b	147a4 <__assert_fail@plt+0x3394>
   147a4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   147a8:	tst	r0, #1
   147ac:	beq	1482c <__assert_fail@plt+0x341c>
   147b0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   147b4:	tst	r0, #1
   147b8:	bne	1482c <__assert_fail@plt+0x341c>
   147bc:	b	147c0 <__assert_fail@plt+0x33b0>
   147c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147c8:	cmp	r0, r1
   147cc:	bcs	147e4 <__assert_fail@plt+0x33d4>
   147d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147d8:	add	r0, r0, r1
   147dc:	movw	r1, #39	; 0x27
   147e0:	strb	r1, [r0]
   147e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147e8:	add	r0, r0, #1
   147ec:	str	r0, [fp, #-44]	; 0xffffffd4
   147f0:	b	147f4 <__assert_fail@plt+0x33e4>
   147f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147fc:	cmp	r0, r1
   14800:	bcs	14818 <__assert_fail@plt+0x3408>
   14804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14808:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1480c:	add	r0, r0, r1
   14810:	movw	r1, #39	; 0x27
   14814:	strb	r1, [r0]
   14818:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1481c:	add	r0, r0, #1
   14820:	str	r0, [fp, #-44]	; 0xffffffd4
   14824:	movw	r0, #0
   14828:	strb	r0, [fp, #-60]	; 0xffffffc4
   1482c:	b	14830 <__assert_fail@plt+0x3420>
   14830:	b	14834 <__assert_fail@plt+0x3424>
   14834:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14838:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1483c:	cmp	r0, r1
   14840:	bcs	14858 <__assert_fail@plt+0x3448>
   14844:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1484c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14850:	add	r1, r1, r2
   14854:	strb	r0, [r1]
   14858:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1485c:	add	r0, r0, #1
   14860:	str	r0, [fp, #-44]	; 0xffffffd4
   14864:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14868:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1486c:	add	r1, r1, #1
   14870:	str	r1, [fp, #-40]	; 0xffffffd8
   14874:	add	r0, r0, r1
   14878:	ldrb	r0, [r0]
   1487c:	strb	r0, [fp, #-63]	; 0xffffffc1
   14880:	b	14584 <__assert_fail@plt+0x3174>
   14884:	b	14a14 <__assert_fail@plt+0x3604>
   14888:	b	1488c <__assert_fail@plt+0x347c>
   1488c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14890:	tst	r0, #1
   14894:	beq	148a4 <__assert_fail@plt+0x3494>
   14898:	ldr	r0, [fp, #8]
   1489c:	cmp	r0, #2
   148a0:	bne	148b0 <__assert_fail@plt+0x34a0>
   148a4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   148a8:	tst	r0, #1
   148ac:	beq	148ec <__assert_fail@plt+0x34dc>
   148b0:	ldr	r0, [fp, #16]
   148b4:	movw	r1, #0
   148b8:	cmp	r0, r1
   148bc:	beq	148ec <__assert_fail@plt+0x34dc>
   148c0:	ldr	r0, [fp, #16]
   148c4:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   148c8:	lsr	r1, r1, #5
   148cc:	add	r0, r0, r1, lsl #2
   148d0:	ldr	r0, [r0]
   148d4:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   148d8:	and	r1, r1, #31
   148dc:	lsr	r0, r0, r1
   148e0:	and	r0, r0, #1
   148e4:	cmp	r0, #0
   148e8:	bne	148fc <__assert_fail@plt+0x34ec>
   148ec:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   148f0:	tst	r0, #1
   148f4:	bne	148fc <__assert_fail@plt+0x34ec>
   148f8:	b	14a14 <__assert_fail@plt+0x3604>
   148fc:	b	14900 <__assert_fail@plt+0x34f0>
   14900:	b	14904 <__assert_fail@plt+0x34f4>
   14904:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14908:	tst	r0, #1
   1490c:	beq	14914 <__assert_fail@plt+0x3504>
   14910:	b	14c80 <__assert_fail@plt+0x3870>
   14914:	movw	r0, #1
   14918:	strb	r0, [fp, #-66]	; 0xffffffbe
   1491c:	ldr	r0, [fp, #8]
   14920:	cmp	r0, #2
   14924:	bne	149d8 <__assert_fail@plt+0x35c8>
   14928:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1492c:	tst	r0, #1
   14930:	bne	149d8 <__assert_fail@plt+0x35c8>
   14934:	b	14938 <__assert_fail@plt+0x3528>
   14938:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1493c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14940:	cmp	r0, r1
   14944:	bcs	1495c <__assert_fail@plt+0x354c>
   14948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1494c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14950:	add	r0, r0, r1
   14954:	movw	r1, #39	; 0x27
   14958:	strb	r1, [r0]
   1495c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14960:	add	r0, r0, #1
   14964:	str	r0, [fp, #-44]	; 0xffffffd4
   14968:	b	1496c <__assert_fail@plt+0x355c>
   1496c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14970:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14974:	cmp	r0, r1
   14978:	bcs	14990 <__assert_fail@plt+0x3580>
   1497c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14980:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14984:	add	r0, r0, r1
   14988:	movw	r1, #36	; 0x24
   1498c:	strb	r1, [r0]
   14990:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14994:	add	r0, r0, #1
   14998:	str	r0, [fp, #-44]	; 0xffffffd4
   1499c:	b	149a0 <__assert_fail@plt+0x3590>
   149a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149a8:	cmp	r0, r1
   149ac:	bcs	149c4 <__assert_fail@plt+0x35b4>
   149b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149b8:	add	r0, r0, r1
   149bc:	movw	r1, #39	; 0x27
   149c0:	strb	r1, [r0]
   149c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149c8:	add	r0, r0, #1
   149cc:	str	r0, [fp, #-44]	; 0xffffffd4
   149d0:	movw	r0, #1
   149d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   149d8:	b	149dc <__assert_fail@plt+0x35cc>
   149dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149e4:	cmp	r0, r1
   149e8:	bcs	14a00 <__assert_fail@plt+0x35f0>
   149ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149f4:	add	r0, r0, r1
   149f8:	movw	r1, #92	; 0x5c
   149fc:	strb	r1, [r0]
   14a00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a04:	add	r0, r0, #1
   14a08:	str	r0, [fp, #-44]	; 0xffffffd4
   14a0c:	b	14a10 <__assert_fail@plt+0x3600>
   14a10:	b	14a14 <__assert_fail@plt+0x3604>
   14a14:	b	14a18 <__assert_fail@plt+0x3608>
   14a18:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14a1c:	tst	r0, #1
   14a20:	beq	14aa0 <__assert_fail@plt+0x3690>
   14a24:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14a28:	tst	r0, #1
   14a2c:	bne	14aa0 <__assert_fail@plt+0x3690>
   14a30:	b	14a34 <__assert_fail@plt+0x3624>
   14a34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a3c:	cmp	r0, r1
   14a40:	bcs	14a58 <__assert_fail@plt+0x3648>
   14a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a4c:	add	r0, r0, r1
   14a50:	movw	r1, #39	; 0x27
   14a54:	strb	r1, [r0]
   14a58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a5c:	add	r0, r0, #1
   14a60:	str	r0, [fp, #-44]	; 0xffffffd4
   14a64:	b	14a68 <__assert_fail@plt+0x3658>
   14a68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a70:	cmp	r0, r1
   14a74:	bcs	14a8c <__assert_fail@plt+0x367c>
   14a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a80:	add	r0, r0, r1
   14a84:	movw	r1, #39	; 0x27
   14a88:	strb	r1, [r0]
   14a8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a90:	add	r0, r0, #1
   14a94:	str	r0, [fp, #-44]	; 0xffffffd4
   14a98:	movw	r0, #0
   14a9c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14aa0:	b	14aa4 <__assert_fail@plt+0x3694>
   14aa4:	b	14aa8 <__assert_fail@plt+0x3698>
   14aa8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14aac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ab0:	cmp	r0, r1
   14ab4:	bcs	14acc <__assert_fail@plt+0x36bc>
   14ab8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14abc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14ac0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14ac4:	add	r1, r1, r2
   14ac8:	strb	r0, [r1]
   14acc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ad0:	add	r0, r0, #1
   14ad4:	str	r0, [fp, #-44]	; 0xffffffd4
   14ad8:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14adc:	tst	r0, #1
   14ae0:	bne	14aec <__assert_fail@plt+0x36dc>
   14ae4:	movw	r0, #0
   14ae8:	strb	r0, [fp, #-62]	; 0xffffffc2
   14aec:	b	14af0 <__assert_fail@plt+0x36e0>
   14af0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14af4:	add	r0, r0, #1
   14af8:	str	r0, [fp, #-40]	; 0xffffffd8
   14afc:	b	138a8 <__assert_fail@plt+0x2498>
   14b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b04:	cmp	r0, #0
   14b08:	bne	14b28 <__assert_fail@plt+0x3718>
   14b0c:	ldr	r0, [fp, #8]
   14b10:	cmp	r0, #2
   14b14:	bne	14b28 <__assert_fail@plt+0x3718>
   14b18:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b1c:	tst	r0, #1
   14b20:	beq	14b28 <__assert_fail@plt+0x3718>
   14b24:	b	14c80 <__assert_fail@plt+0x3870>
   14b28:	ldr	r0, [fp, #8]
   14b2c:	cmp	r0, #2
   14b30:	bne	14bd0 <__assert_fail@plt+0x37c0>
   14b34:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b38:	tst	r0, #1
   14b3c:	bne	14bd0 <__assert_fail@plt+0x37c0>
   14b40:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   14b44:	tst	r0, #1
   14b48:	beq	14bd0 <__assert_fail@plt+0x37c0>
   14b4c:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   14b50:	tst	r0, #1
   14b54:	beq	14b9c <__assert_fail@plt+0x378c>
   14b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b5c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14b60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14b64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14b68:	ldr	ip, [fp, #12]
   14b6c:	ldr	lr, [fp, #16]
   14b70:	ldr	r4, [fp, #20]
   14b74:	ldr	r5, [fp, #24]
   14b78:	movw	r6, #5
   14b7c:	str	r6, [sp]
   14b80:	str	ip, [sp, #4]
   14b84:	str	lr, [sp, #8]
   14b88:	str	r4, [sp, #12]
   14b8c:	str	r5, [sp, #16]
   14b90:	bl	135c0 <__assert_fail@plt+0x21b0>
   14b94:	str	r0, [fp, #-20]	; 0xffffffec
   14b98:	b	14ce8 <__assert_fail@plt+0x38d8>
   14b9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14ba0:	cmp	r0, #0
   14ba4:	bne	14bc8 <__assert_fail@plt+0x37b8>
   14ba8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14bac:	cmp	r0, #0
   14bb0:	beq	14bc8 <__assert_fail@plt+0x37b8>
   14bb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14bb8:	str	r0, [fp, #-28]	; 0xffffffe4
   14bbc:	movw	r0, #0
   14bc0:	str	r0, [fp, #-44]	; 0xffffffd4
   14bc4:	b	13668 <__assert_fail@plt+0x2258>
   14bc8:	b	14bcc <__assert_fail@plt+0x37bc>
   14bcc:	b	14bd0 <__assert_fail@plt+0x37c0>
   14bd0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14bd4:	movw	r1, #0
   14bd8:	cmp	r0, r1
   14bdc:	beq	14c50 <__assert_fail@plt+0x3840>
   14be0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14be4:	tst	r0, #1
   14be8:	bne	14c50 <__assert_fail@plt+0x3840>
   14bec:	b	14bf0 <__assert_fail@plt+0x37e0>
   14bf0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14bf4:	ldrsb	r0, [r0]
   14bf8:	cmp	r0, #0
   14bfc:	beq	14c4c <__assert_fail@plt+0x383c>
   14c00:	b	14c04 <__assert_fail@plt+0x37f4>
   14c04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c0c:	cmp	r0, r1
   14c10:	bcs	14c2c <__assert_fail@plt+0x381c>
   14c14:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14c18:	ldrb	r0, [r0]
   14c1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14c20:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14c24:	add	r1, r1, r2
   14c28:	strb	r0, [r1]
   14c2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c30:	add	r0, r0, #1
   14c34:	str	r0, [fp, #-44]	; 0xffffffd4
   14c38:	b	14c3c <__assert_fail@plt+0x382c>
   14c3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14c40:	add	r0, r0, #1
   14c44:	str	r0, [fp, #-52]	; 0xffffffcc
   14c48:	b	14bf0 <__assert_fail@plt+0x37e0>
   14c4c:	b	14c50 <__assert_fail@plt+0x3840>
   14c50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c58:	cmp	r0, r1
   14c5c:	bcs	14c74 <__assert_fail@plt+0x3864>
   14c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c68:	add	r0, r0, r1
   14c6c:	movw	r1, #0
   14c70:	strb	r1, [r0]
   14c74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c78:	str	r0, [fp, #-20]	; 0xffffffec
   14c7c:	b	14ce8 <__assert_fail@plt+0x38d8>
   14c80:	ldr	r0, [fp, #8]
   14c84:	cmp	r0, #2
   14c88:	bne	14ca0 <__assert_fail@plt+0x3890>
   14c8c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14c90:	tst	r0, #1
   14c94:	beq	14ca0 <__assert_fail@plt+0x3890>
   14c98:	movw	r0, #4
   14c9c:	str	r0, [fp, #8]
   14ca0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ca8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14cac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14cb0:	ldr	ip, [fp, #8]
   14cb4:	ldr	lr, [fp, #12]
   14cb8:	mvn	r4, #2
   14cbc:	and	lr, lr, r4
   14cc0:	ldr	r4, [fp, #20]
   14cc4:	ldr	r5, [fp, #24]
   14cc8:	str	ip, [sp]
   14ccc:	str	lr, [sp, #4]
   14cd0:	movw	ip, #0
   14cd4:	str	ip, [sp, #8]
   14cd8:	str	r4, [sp, #12]
   14cdc:	str	r5, [sp, #16]
   14ce0:	bl	135c0 <__assert_fail@plt+0x21b0>
   14ce4:	str	r0, [fp, #-20]	; 0xffffffec
   14ce8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cec:	sub	sp, fp, #16
   14cf0:	pop	{r4, r5, r6, sl, fp, pc}
   14cf4:	push	{fp, lr}
   14cf8:	mov	fp, sp
   14cfc:	sub	sp, sp, #16
   14d00:	str	r0, [fp, #-4]
   14d04:	str	r1, [sp, #8]
   14d08:	str	r2, [sp, #4]
   14d0c:	ldr	r0, [fp, #-4]
   14d10:	ldr	r1, [sp, #8]
   14d14:	ldr	r3, [sp, #4]
   14d18:	movw	r2, #0
   14d1c:	bl	14d28 <__assert_fail@plt+0x3918>
   14d20:	mov	sp, fp
   14d24:	pop	{fp, pc}
   14d28:	push	{r4, r5, r6, sl, fp, lr}
   14d2c:	add	fp, sp, #16
   14d30:	sub	sp, sp, #80	; 0x50
   14d34:	str	r0, [fp, #-20]	; 0xffffffec
   14d38:	str	r1, [fp, #-24]	; 0xffffffe8
   14d3c:	str	r2, [fp, #-28]	; 0xffffffe4
   14d40:	str	r3, [fp, #-32]	; 0xffffffe0
   14d44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d48:	movw	r1, #0
   14d4c:	cmp	r0, r1
   14d50:	beq	14d60 <__assert_fail@plt+0x3950>
   14d54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d58:	str	r0, [sp, #40]	; 0x28
   14d5c:	b	14d70 <__assert_fail@plt+0x3960>
   14d60:	movw	r0, #61944	; 0xf1f8
   14d64:	movt	r0, #2
   14d68:	str	r0, [sp, #40]	; 0x28
   14d6c:	b	14d70 <__assert_fail@plt+0x3960>
   14d70:	ldr	r0, [sp, #40]	; 0x28
   14d74:	str	r0, [fp, #-36]	; 0xffffffdc
   14d78:	bl	11308 <__errno_location@plt>
   14d7c:	ldr	r0, [r0]
   14d80:	str	r0, [fp, #-40]	; 0xffffffd8
   14d84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d88:	ldr	r0, [r0, #4]
   14d8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d90:	movw	r2, #0
   14d94:	cmp	r1, r2
   14d98:	movw	r1, #0
   14d9c:	movne	r1, #1
   14da0:	tst	r1, #1
   14da4:	mov	r1, r2
   14da8:	moveq	r1, #1
   14dac:	orr	r0, r0, r1
   14db0:	str	r0, [fp, #-44]	; 0xffffffd4
   14db4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14db8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14dbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14dc0:	ldr	r1, [r1]
   14dc4:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14dc8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14dcc:	add	lr, lr, #8
   14dd0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14dd4:	ldr	r4, [r4, #40]	; 0x28
   14dd8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14ddc:	ldr	r5, [r5, #44]	; 0x2c
   14de0:	str	r0, [sp, #36]	; 0x24
   14de4:	mov	r0, r2
   14de8:	str	r1, [sp, #32]
   14dec:	mov	r1, r2
   14df0:	ldr	r2, [sp, #36]	; 0x24
   14df4:	ldr	r6, [sp, #32]
   14df8:	str	r6, [sp]
   14dfc:	str	ip, [sp, #4]
   14e00:	str	lr, [sp, #8]
   14e04:	str	r4, [sp, #12]
   14e08:	str	r5, [sp, #16]
   14e0c:	bl	135c0 <__assert_fail@plt+0x21b0>
   14e10:	add	r0, r0, #1
   14e14:	str	r0, [sp, #48]	; 0x30
   14e18:	ldr	r0, [sp, #48]	; 0x30
   14e1c:	bl	167cc <__assert_fail@plt+0x53bc>
   14e20:	str	r0, [sp, #44]	; 0x2c
   14e24:	ldr	r0, [sp, #44]	; 0x2c
   14e28:	ldr	r1, [sp, #48]	; 0x30
   14e2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e34:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14e38:	ldr	ip, [ip]
   14e3c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   14e40:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14e44:	add	r4, r4, #8
   14e48:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14e4c:	ldr	r5, [r5, #40]	; 0x28
   14e50:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14e54:	ldr	r6, [r6, #44]	; 0x2c
   14e58:	str	ip, [sp]
   14e5c:	str	lr, [sp, #4]
   14e60:	str	r4, [sp, #8]
   14e64:	str	r5, [sp, #12]
   14e68:	str	r6, [sp, #16]
   14e6c:	bl	135c0 <__assert_fail@plt+0x21b0>
   14e70:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e74:	str	r0, [sp, #28]
   14e78:	str	r1, [sp, #24]
   14e7c:	bl	11308 <__errno_location@plt>
   14e80:	ldr	r1, [sp, #24]
   14e84:	str	r1, [r0]
   14e88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14e8c:	movw	r2, #0
   14e90:	cmp	r0, r2
   14e94:	beq	14ea8 <__assert_fail@plt+0x3a98>
   14e98:	ldr	r0, [sp, #48]	; 0x30
   14e9c:	sub	r0, r0, #1
   14ea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14ea4:	str	r0, [r1]
   14ea8:	ldr	r0, [sp, #44]	; 0x2c
   14eac:	sub	sp, fp, #16
   14eb0:	pop	{r4, r5, r6, sl, fp, pc}
   14eb4:	push	{fp, lr}
   14eb8:	mov	fp, sp
   14ebc:	sub	sp, sp, #8
   14ec0:	movw	r0, #61732	; 0xf124
   14ec4:	movt	r0, #2
   14ec8:	ldr	r0, [r0]
   14ecc:	str	r0, [sp, #4]
   14ed0:	movw	r0, #1
   14ed4:	str	r0, [sp]
   14ed8:	ldr	r0, [sp]
   14edc:	movw	r1, #61736	; 0xf128
   14ee0:	movt	r1, #2
   14ee4:	ldr	r1, [r1]
   14ee8:	cmp	r0, r1
   14eec:	bge	14f14 <__assert_fail@plt+0x3b04>
   14ef0:	ldr	r0, [sp, #4]
   14ef4:	ldr	r1, [sp]
   14ef8:	add	r0, r0, r1, lsl #3
   14efc:	ldr	r0, [r0, #4]
   14f00:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   14f04:	ldr	r0, [sp]
   14f08:	add	r0, r0, #1
   14f0c:	str	r0, [sp]
   14f10:	b	14ed8 <__assert_fail@plt+0x3ac8>
   14f14:	ldr	r0, [sp, #4]
   14f18:	ldr	r0, [r0, #4]
   14f1c:	movw	r1, #61992	; 0xf228
   14f20:	movt	r1, #2
   14f24:	cmp	r0, r1
   14f28:	beq	14f54 <__assert_fail@plt+0x3b44>
   14f2c:	ldr	r0, [sp, #4]
   14f30:	ldr	r0, [r0, #4]
   14f34:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   14f38:	movw	r0, #256	; 0x100
   14f3c:	movw	r1, #61740	; 0xf12c
   14f40:	movt	r1, #2
   14f44:	str	r0, [r1]
   14f48:	movw	r0, #61992	; 0xf228
   14f4c:	movt	r0, #2
   14f50:	str	r0, [r1, #4]
   14f54:	ldr	r0, [sp, #4]
   14f58:	movw	r1, #61740	; 0xf12c
   14f5c:	movt	r1, #2
   14f60:	cmp	r0, r1
   14f64:	beq	14f84 <__assert_fail@plt+0x3b74>
   14f68:	ldr	r0, [sp, #4]
   14f6c:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   14f70:	movw	r0, #61732	; 0xf124
   14f74:	movt	r0, #2
   14f78:	movw	r1, #61740	; 0xf12c
   14f7c:	movt	r1, #2
   14f80:	str	r1, [r0]
   14f84:	movw	r0, #61736	; 0xf128
   14f88:	movt	r0, #2
   14f8c:	movw	r1, #1
   14f90:	str	r1, [r0]
   14f94:	mov	sp, fp
   14f98:	pop	{fp, pc}
   14f9c:	push	{fp, lr}
   14fa0:	mov	fp, sp
   14fa4:	sub	sp, sp, #8
   14fa8:	str	r0, [sp, #4]
   14fac:	str	r1, [sp]
   14fb0:	ldr	r0, [sp, #4]
   14fb4:	ldr	r1, [sp]
   14fb8:	mvn	r2, #0
   14fbc:	movw	r3, #61944	; 0xf1f8
   14fc0:	movt	r3, #2
   14fc4:	bl	14fd0 <__assert_fail@plt+0x3bc0>
   14fc8:	mov	sp, fp
   14fcc:	pop	{fp, pc}
   14fd0:	push	{r4, r5, r6, sl, fp, lr}
   14fd4:	add	fp, sp, #16
   14fd8:	sub	sp, sp, #80	; 0x50
   14fdc:	str	r0, [fp, #-20]	; 0xffffffec
   14fe0:	str	r1, [fp, #-24]	; 0xffffffe8
   14fe4:	str	r2, [fp, #-28]	; 0xffffffe4
   14fe8:	str	r3, [fp, #-32]	; 0xffffffe0
   14fec:	bl	11308 <__errno_location@plt>
   14ff0:	ldr	r1, [pc, #672]	; 15298 <__assert_fail@plt+0x3e88>
   14ff4:	ldr	r0, [r0]
   14ff8:	str	r0, [fp, #-36]	; 0xffffffdc
   14ffc:	movw	r0, #61732	; 0xf124
   15000:	movt	r0, #2
   15004:	ldr	r0, [r0]
   15008:	str	r0, [fp, #-40]	; 0xffffffd8
   1500c:	str	r1, [fp, #-44]	; 0xffffffd4
   15010:	ldr	r0, [fp, #-20]	; 0xffffffec
   15014:	movw	r1, #0
   15018:	cmp	r1, r0
   1501c:	bgt	15030 <__assert_fail@plt+0x3c20>
   15020:	ldr	r0, [fp, #-20]	; 0xffffffec
   15024:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15028:	cmp	r0, r1
   1502c:	blt	15034 <__assert_fail@plt+0x3c24>
   15030:	bl	113e0 <abort@plt>
   15034:	movw	r0, #61736	; 0xf128
   15038:	movt	r0, #2
   1503c:	ldr	r0, [r0]
   15040:	ldr	r1, [fp, #-20]	; 0xffffffec
   15044:	cmp	r0, r1
   15048:	bgt	15140 <__assert_fail@plt+0x3d30>
   1504c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15050:	movw	r1, #61740	; 0xf12c
   15054:	movt	r1, #2
   15058:	cmp	r0, r1
   1505c:	movw	r0, #0
   15060:	moveq	r0, #1
   15064:	and	r0, r0, #1
   15068:	strb	r0, [fp, #-45]	; 0xffffffd3
   1506c:	movw	r0, #61736	; 0xf128
   15070:	movt	r0, #2
   15074:	ldr	r0, [r0]
   15078:	str	r0, [sp, #44]	; 0x2c
   1507c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15080:	tst	r0, #1
   15084:	beq	15094 <__assert_fail@plt+0x3c84>
   15088:	movw	r0, #0
   1508c:	str	r0, [sp, #24]
   15090:	b	1509c <__assert_fail@plt+0x3c8c>
   15094:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15098:	str	r0, [sp, #24]
   1509c:	ldr	r0, [sp, #24]
   150a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   150a4:	movw	r2, #61736	; 0xf128
   150a8:	movt	r2, #2
   150ac:	ldr	r2, [r2]
   150b0:	sub	r1, r1, r2
   150b4:	add	r2, r1, #1
   150b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150bc:	add	r1, sp, #44	; 0x2c
   150c0:	movw	ip, #8
   150c4:	str	ip, [sp]
   150c8:	bl	16a08 <__assert_fail@plt+0x55f8>
   150cc:	str	r0, [fp, #-40]	; 0xffffffd8
   150d0:	movw	r1, #61732	; 0xf124
   150d4:	movt	r1, #2
   150d8:	str	r0, [r1]
   150dc:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   150e0:	tst	r0, #1
   150e4:	beq	15104 <__assert_fail@plt+0x3cf4>
   150e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150ec:	movw	r1, #61740	; 0xf12c
   150f0:	movt	r1, #2
   150f4:	ldr	r2, [r1]
   150f8:	str	r2, [r0]
   150fc:	ldr	r1, [r1, #4]
   15100:	str	r1, [r0, #4]
   15104:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15108:	movw	r1, #61736	; 0xf128
   1510c:	movt	r1, #2
   15110:	ldr	r1, [r1]
   15114:	add	r0, r0, r1, lsl #3
   15118:	ldr	r2, [sp, #44]	; 0x2c
   1511c:	sub	r1, r2, r1
   15120:	lsl	r2, r1, #3
   15124:	movw	r1, #0
   15128:	and	r1, r1, #255	; 0xff
   1512c:	bl	11338 <memset@plt>
   15130:	ldr	r0, [sp, #44]	; 0x2c
   15134:	movw	r1, #61736	; 0xf128
   15138:	movt	r1, #2
   1513c:	str	r0, [r1]
   15140:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15144:	ldr	r1, [fp, #-20]	; 0xffffffec
   15148:	ldr	r0, [r0, r1, lsl #3]
   1514c:	str	r0, [sp, #40]	; 0x28
   15150:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15154:	ldr	r1, [fp, #-20]	; 0xffffffec
   15158:	add	r0, r0, r1, lsl #3
   1515c:	ldr	r0, [r0, #4]
   15160:	str	r0, [sp, #36]	; 0x24
   15164:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15168:	ldr	r0, [r0, #4]
   1516c:	orr	r0, r0, #1
   15170:	str	r0, [sp, #32]
   15174:	ldr	r0, [sp, #36]	; 0x24
   15178:	ldr	r1, [sp, #40]	; 0x28
   1517c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15180:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15184:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15188:	ldr	ip, [ip]
   1518c:	ldr	lr, [sp, #32]
   15190:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15194:	add	r4, r4, #8
   15198:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1519c:	ldr	r5, [r5, #40]	; 0x28
   151a0:	ldr	r6, [fp, #-32]	; 0xffffffe0
   151a4:	ldr	r6, [r6, #44]	; 0x2c
   151a8:	str	ip, [sp]
   151ac:	str	lr, [sp, #4]
   151b0:	str	r4, [sp, #8]
   151b4:	str	r5, [sp, #12]
   151b8:	str	r6, [sp, #16]
   151bc:	bl	135c0 <__assert_fail@plt+0x21b0>
   151c0:	str	r0, [sp, #28]
   151c4:	ldr	r0, [sp, #40]	; 0x28
   151c8:	ldr	r1, [sp, #28]
   151cc:	cmp	r0, r1
   151d0:	bhi	15278 <__assert_fail@plt+0x3e68>
   151d4:	ldr	r0, [sp, #28]
   151d8:	add	r0, r0, #1
   151dc:	str	r0, [sp, #40]	; 0x28
   151e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   151e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   151e8:	add	r1, r1, r2, lsl #3
   151ec:	str	r0, [r1]
   151f0:	ldr	r0, [sp, #36]	; 0x24
   151f4:	movw	r1, #61992	; 0xf228
   151f8:	movt	r1, #2
   151fc:	cmp	r0, r1
   15200:	beq	1520c <__assert_fail@plt+0x3dfc>
   15204:	ldr	r0, [sp, #36]	; 0x24
   15208:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   1520c:	ldr	r0, [sp, #40]	; 0x28
   15210:	bl	167cc <__assert_fail@plt+0x53bc>
   15214:	mov	r1, r0
   15218:	str	r0, [sp, #36]	; 0x24
   1521c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15220:	ldr	r2, [fp, #-20]	; 0xffffffec
   15224:	add	r0, r0, r2, lsl #3
   15228:	str	r1, [r0, #4]
   1522c:	ldr	r0, [sp, #36]	; 0x24
   15230:	ldr	r1, [sp, #40]	; 0x28
   15234:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15238:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1523c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15240:	ldr	ip, [ip]
   15244:	ldr	lr, [sp, #32]
   15248:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1524c:	add	r4, r4, #8
   15250:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15254:	ldr	r5, [r5, #40]	; 0x28
   15258:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1525c:	ldr	r6, [r6, #44]	; 0x2c
   15260:	str	ip, [sp]
   15264:	str	lr, [sp, #4]
   15268:	str	r4, [sp, #8]
   1526c:	str	r5, [sp, #12]
   15270:	str	r6, [sp, #16]
   15274:	bl	135c0 <__assert_fail@plt+0x21b0>
   15278:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1527c:	str	r0, [sp, #20]
   15280:	bl	11308 <__errno_location@plt>
   15284:	ldr	r1, [sp, #20]
   15288:	str	r1, [r0]
   1528c:	ldr	r0, [sp, #36]	; 0x24
   15290:	sub	sp, fp, #16
   15294:	pop	{r4, r5, r6, sl, fp, pc}
   15298:	svcvc	0x00ffffff
   1529c:	push	{fp, lr}
   152a0:	mov	fp, sp
   152a4:	sub	sp, sp, #16
   152a8:	str	r0, [fp, #-4]
   152ac:	str	r1, [sp, #8]
   152b0:	str	r2, [sp, #4]
   152b4:	ldr	r0, [fp, #-4]
   152b8:	ldr	r1, [sp, #8]
   152bc:	ldr	r2, [sp, #4]
   152c0:	movw	r3, #61944	; 0xf1f8
   152c4:	movt	r3, #2
   152c8:	bl	14fd0 <__assert_fail@plt+0x3bc0>
   152cc:	mov	sp, fp
   152d0:	pop	{fp, pc}
   152d4:	push	{fp, lr}
   152d8:	mov	fp, sp
   152dc:	sub	sp, sp, #8
   152e0:	str	r0, [sp, #4]
   152e4:	ldr	r1, [sp, #4]
   152e8:	movw	r0, #0
   152ec:	bl	14f9c <__assert_fail@plt+0x3b8c>
   152f0:	mov	sp, fp
   152f4:	pop	{fp, pc}
   152f8:	push	{fp, lr}
   152fc:	mov	fp, sp
   15300:	sub	sp, sp, #8
   15304:	str	r0, [sp, #4]
   15308:	str	r1, [sp]
   1530c:	ldr	r1, [sp, #4]
   15310:	ldr	r2, [sp]
   15314:	movw	r0, #0
   15318:	bl	1529c <__assert_fail@plt+0x3e8c>
   1531c:	mov	sp, fp
   15320:	pop	{fp, pc}
   15324:	push	{fp, lr}
   15328:	mov	fp, sp
   1532c:	sub	sp, sp, #64	; 0x40
   15330:	str	r0, [fp, #-4]
   15334:	str	r1, [fp, #-8]
   15338:	str	r2, [fp, #-12]
   1533c:	ldr	r1, [fp, #-8]
   15340:	add	r0, sp, #4
   15344:	bl	15364 <__assert_fail@plt+0x3f54>
   15348:	ldr	r0, [fp, #-4]
   1534c:	ldr	r1, [fp, #-12]
   15350:	mvn	r2, #0
   15354:	add	r3, sp, #4
   15358:	bl	14fd0 <__assert_fail@plt+0x3bc0>
   1535c:	mov	sp, fp
   15360:	pop	{fp, pc}
   15364:	push	{fp, lr}
   15368:	mov	fp, sp
   1536c:	sub	sp, sp, #8
   15370:	str	r1, [sp, #4]
   15374:	mov	r1, r0
   15378:	str	r0, [sp]
   1537c:	mov	r0, r1
   15380:	movw	r1, #0
   15384:	and	r1, r1, #255	; 0xff
   15388:	movw	r2, #48	; 0x30
   1538c:	bl	11338 <memset@plt>
   15390:	ldr	r0, [sp, #4]
   15394:	cmp	r0, #10
   15398:	bne	153a0 <__assert_fail@plt+0x3f90>
   1539c:	bl	113e0 <abort@plt>
   153a0:	ldr	r0, [sp, #4]
   153a4:	ldr	r1, [sp]
   153a8:	str	r0, [r1]
   153ac:	mov	sp, fp
   153b0:	pop	{fp, pc}
   153b4:	push	{fp, lr}
   153b8:	mov	fp, sp
   153bc:	sub	sp, sp, #64	; 0x40
   153c0:	str	r0, [fp, #-4]
   153c4:	str	r1, [fp, #-8]
   153c8:	str	r2, [fp, #-12]
   153cc:	str	r3, [fp, #-16]
   153d0:	ldr	r1, [fp, #-8]
   153d4:	mov	r0, sp
   153d8:	bl	15364 <__assert_fail@plt+0x3f54>
   153dc:	ldr	r0, [fp, #-4]
   153e0:	ldr	r1, [fp, #-12]
   153e4:	ldr	r2, [fp, #-16]
   153e8:	mov	r3, sp
   153ec:	bl	14fd0 <__assert_fail@plt+0x3bc0>
   153f0:	mov	sp, fp
   153f4:	pop	{fp, pc}
   153f8:	push	{fp, lr}
   153fc:	mov	fp, sp
   15400:	sub	sp, sp, #8
   15404:	str	r0, [sp, #4]
   15408:	str	r1, [sp]
   1540c:	ldr	r1, [sp, #4]
   15410:	ldr	r2, [sp]
   15414:	movw	r0, #0
   15418:	bl	15324 <__assert_fail@plt+0x3f14>
   1541c:	mov	sp, fp
   15420:	pop	{fp, pc}
   15424:	push	{fp, lr}
   15428:	mov	fp, sp
   1542c:	sub	sp, sp, #16
   15430:	str	r0, [fp, #-4]
   15434:	str	r1, [sp, #8]
   15438:	str	r2, [sp, #4]
   1543c:	ldr	r1, [fp, #-4]
   15440:	ldr	r2, [sp, #8]
   15444:	ldr	r3, [sp, #4]
   15448:	movw	r0, #0
   1544c:	bl	153b4 <__assert_fail@plt+0x3fa4>
   15450:	mov	sp, fp
   15454:	pop	{fp, pc}
   15458:	push	{fp, lr}
   1545c:	mov	fp, sp
   15460:	sub	sp, sp, #72	; 0x48
   15464:	movw	r3, #61944	; 0xf1f8
   15468:	movt	r3, #2
   1546c:	str	r0, [fp, #-4]
   15470:	str	r1, [fp, #-8]
   15474:	strb	r2, [fp, #-9]
   15478:	add	r0, sp, #12
   1547c:	mov	r1, r0
   15480:	str	r0, [sp, #8]
   15484:	mov	r0, r1
   15488:	mov	r1, r3
   1548c:	movw	r2, #48	; 0x30
   15490:	bl	111b8 <memcpy@plt>
   15494:	ldr	r0, [sp, #8]
   15498:	ldrb	r1, [fp, #-9]
   1549c:	movw	r2, #1
   154a0:	bl	13368 <__assert_fail@plt+0x1f58>
   154a4:	ldr	r1, [fp, #-4]
   154a8:	ldr	r2, [fp, #-8]
   154ac:	movw	r3, #0
   154b0:	str	r0, [sp, #4]
   154b4:	mov	r0, r3
   154b8:	add	r3, sp, #12
   154bc:	bl	14fd0 <__assert_fail@plt+0x3bc0>
   154c0:	mov	sp, fp
   154c4:	pop	{fp, pc}
   154c8:	push	{fp, lr}
   154cc:	mov	fp, sp
   154d0:	sub	sp, sp, #8
   154d4:	str	r0, [sp, #4]
   154d8:	strb	r1, [sp, #3]
   154dc:	ldr	r0, [sp, #4]
   154e0:	mvn	r1, #0
   154e4:	ldrb	r2, [sp, #3]
   154e8:	bl	15458 <__assert_fail@plt+0x4048>
   154ec:	mov	sp, fp
   154f0:	pop	{fp, pc}
   154f4:	push	{fp, lr}
   154f8:	mov	fp, sp
   154fc:	sub	sp, sp, #8
   15500:	str	r0, [sp, #4]
   15504:	ldr	r0, [sp, #4]
   15508:	movw	r1, #58	; 0x3a
   1550c:	and	r1, r1, #255	; 0xff
   15510:	bl	154c8 <__assert_fail@plt+0x40b8>
   15514:	mov	sp, fp
   15518:	pop	{fp, pc}
   1551c:	push	{fp, lr}
   15520:	mov	fp, sp
   15524:	sub	sp, sp, #8
   15528:	str	r0, [sp, #4]
   1552c:	str	r1, [sp]
   15530:	ldr	r0, [sp, #4]
   15534:	ldr	r1, [sp]
   15538:	movw	r2, #58	; 0x3a
   1553c:	and	r2, r2, #255	; 0xff
   15540:	bl	15458 <__assert_fail@plt+0x4048>
   15544:	mov	sp, fp
   15548:	pop	{fp, pc}
   1554c:	push	{fp, lr}
   15550:	mov	fp, sp
   15554:	sub	sp, sp, #120	; 0x78
   15558:	str	r0, [fp, #-4]
   1555c:	str	r1, [fp, #-8]
   15560:	str	r2, [fp, #-12]
   15564:	ldr	r1, [fp, #-8]
   15568:	add	r0, sp, #12
   1556c:	bl	15364 <__assert_fail@plt+0x3f54>
   15570:	add	r0, sp, #60	; 0x3c
   15574:	mov	r1, r0
   15578:	add	r2, sp, #12
   1557c:	str	r0, [sp, #8]
   15580:	mov	r0, r1
   15584:	mov	r1, r2
   15588:	movw	r2, #48	; 0x30
   1558c:	bl	111b8 <memcpy@plt>
   15590:	ldr	r0, [sp, #8]
   15594:	movw	r1, #58	; 0x3a
   15598:	and	r1, r1, #255	; 0xff
   1559c:	movw	r2, #1
   155a0:	bl	13368 <__assert_fail@plt+0x1f58>
   155a4:	ldr	r1, [fp, #-4]
   155a8:	ldr	r2, [fp, #-12]
   155ac:	str	r0, [sp, #4]
   155b0:	mov	r0, r1
   155b4:	mov	r1, r2
   155b8:	mvn	r2, #0
   155bc:	add	r3, sp, #60	; 0x3c
   155c0:	bl	14fd0 <__assert_fail@plt+0x3bc0>
   155c4:	mov	sp, fp
   155c8:	pop	{fp, pc}
   155cc:	push	{fp, lr}
   155d0:	mov	fp, sp
   155d4:	sub	sp, sp, #24
   155d8:	str	r0, [fp, #-4]
   155dc:	str	r1, [fp, #-8]
   155e0:	str	r2, [sp, #12]
   155e4:	str	r3, [sp, #8]
   155e8:	ldr	r0, [fp, #-4]
   155ec:	ldr	r1, [fp, #-8]
   155f0:	ldr	r2, [sp, #12]
   155f4:	ldr	r3, [sp, #8]
   155f8:	mvn	ip, #0
   155fc:	str	ip, [sp]
   15600:	bl	1560c <__assert_fail@plt+0x41fc>
   15604:	mov	sp, fp
   15608:	pop	{fp, pc}
   1560c:	push	{fp, lr}
   15610:	mov	fp, sp
   15614:	sub	sp, sp, #72	; 0x48
   15618:	ldr	ip, [fp, #8]
   1561c:	movw	lr, #61944	; 0xf1f8
   15620:	movt	lr, #2
   15624:	str	r0, [fp, #-4]
   15628:	str	r1, [fp, #-8]
   1562c:	str	r2, [fp, #-12]
   15630:	str	r3, [fp, #-16]
   15634:	add	r0, sp, #8
   15638:	mov	r1, r0
   1563c:	str	r0, [sp, #4]
   15640:	mov	r0, r1
   15644:	mov	r1, lr
   15648:	movw	r2, #48	; 0x30
   1564c:	str	ip, [sp]
   15650:	bl	111b8 <memcpy@plt>
   15654:	ldr	r1, [fp, #-8]
   15658:	ldr	r2, [fp, #-12]
   1565c:	ldr	r0, [sp, #4]
   15660:	bl	13468 <__assert_fail@plt+0x2058>
   15664:	ldr	r0, [fp, #-4]
   15668:	ldr	r1, [fp, #-16]
   1566c:	ldr	r2, [fp, #8]
   15670:	add	r3, sp, #8
   15674:	bl	14fd0 <__assert_fail@plt+0x3bc0>
   15678:	mov	sp, fp
   1567c:	pop	{fp, pc}
   15680:	push	{fp, lr}
   15684:	mov	fp, sp
   15688:	sub	sp, sp, #16
   1568c:	str	r0, [fp, #-4]
   15690:	str	r1, [sp, #8]
   15694:	str	r2, [sp, #4]
   15698:	ldr	r1, [fp, #-4]
   1569c:	ldr	r2, [sp, #8]
   156a0:	ldr	r3, [sp, #4]
   156a4:	movw	r0, #0
   156a8:	bl	155cc <__assert_fail@plt+0x41bc>
   156ac:	mov	sp, fp
   156b0:	pop	{fp, pc}
   156b4:	push	{fp, lr}
   156b8:	mov	fp, sp
   156bc:	sub	sp, sp, #24
   156c0:	str	r0, [fp, #-4]
   156c4:	str	r1, [fp, #-8]
   156c8:	str	r2, [sp, #12]
   156cc:	str	r3, [sp, #8]
   156d0:	ldr	r1, [fp, #-4]
   156d4:	ldr	r2, [fp, #-8]
   156d8:	ldr	r3, [sp, #12]
   156dc:	ldr	r0, [sp, #8]
   156e0:	movw	ip, #0
   156e4:	str	r0, [sp, #4]
   156e8:	mov	r0, ip
   156ec:	ldr	ip, [sp, #4]
   156f0:	str	ip, [sp]
   156f4:	bl	1560c <__assert_fail@plt+0x41fc>
   156f8:	mov	sp, fp
   156fc:	pop	{fp, pc}
   15700:	push	{fp, lr}
   15704:	mov	fp, sp
   15708:	sub	sp, sp, #16
   1570c:	str	r0, [fp, #-4]
   15710:	str	r1, [sp, #8]
   15714:	str	r2, [sp, #4]
   15718:	ldr	r0, [fp, #-4]
   1571c:	ldr	r1, [sp, #8]
   15720:	ldr	r2, [sp, #4]
   15724:	movw	r3, #61748	; 0xf134
   15728:	movt	r3, #2
   1572c:	bl	14fd0 <__assert_fail@plt+0x3bc0>
   15730:	mov	sp, fp
   15734:	pop	{fp, pc}
   15738:	push	{fp, lr}
   1573c:	mov	fp, sp
   15740:	sub	sp, sp, #8
   15744:	str	r0, [sp, #4]
   15748:	str	r1, [sp]
   1574c:	ldr	r1, [sp, #4]
   15750:	ldr	r2, [sp]
   15754:	movw	r0, #0
   15758:	bl	15700 <__assert_fail@plt+0x42f0>
   1575c:	mov	sp, fp
   15760:	pop	{fp, pc}
   15764:	push	{fp, lr}
   15768:	mov	fp, sp
   1576c:	sub	sp, sp, #8
   15770:	str	r0, [sp, #4]
   15774:	str	r1, [sp]
   15778:	ldr	r0, [sp, #4]
   1577c:	ldr	r1, [sp]
   15780:	mvn	r2, #0
   15784:	bl	15700 <__assert_fail@plt+0x42f0>
   15788:	mov	sp, fp
   1578c:	pop	{fp, pc}
   15790:	push	{fp, lr}
   15794:	mov	fp, sp
   15798:	sub	sp, sp, #8
   1579c:	str	r0, [sp, #4]
   157a0:	ldr	r1, [sp, #4]
   157a4:	movw	r0, #0
   157a8:	bl	15764 <__assert_fail@plt+0x4354>
   157ac:	mov	sp, fp
   157b0:	pop	{fp, pc}
   157b4:	push	{fp, lr}
   157b8:	mov	fp, sp
   157bc:	sub	sp, sp, #24
   157c0:	str	r0, [fp, #-8]
   157c4:	str	r1, [sp, #12]
   157c8:	ldr	r0, [fp, #-8]
   157cc:	bl	112cc <gettext@plt>
   157d0:	str	r0, [sp, #8]
   157d4:	ldr	r0, [sp, #8]
   157d8:	ldr	r1, [fp, #-8]
   157dc:	cmp	r0, r1
   157e0:	beq	157f0 <__assert_fail@plt+0x43e0>
   157e4:	ldr	r0, [sp, #8]
   157e8:	str	r0, [fp, #-4]
   157ec:	b	158bc <__assert_fail@plt+0x44ac>
   157f0:	bl	1b998 <__assert_fail@plt+0xa588>
   157f4:	str	r0, [sp, #4]
   157f8:	ldr	r0, [sp, #4]
   157fc:	movw	r1, #59386	; 0xe7fa
   15800:	movt	r1, #1
   15804:	bl	1b39c <__assert_fail@plt+0x9f8c>
   15808:	cmp	r0, #0
   1580c:	bne	15844 <__assert_fail@plt+0x4434>
   15810:	ldr	r0, [fp, #-8]
   15814:	ldrb	r0, [r0]
   15818:	cmp	r0, #96	; 0x60
   1581c:	movw	r0, #0
   15820:	moveq	r0, #1
   15824:	tst	r0, #1
   15828:	movw	r0, #59396	; 0xe804
   1582c:	movt	r0, #1
   15830:	movw	r1, #59392	; 0xe800
   15834:	movt	r1, #1
   15838:	movne	r0, r1
   1583c:	str	r0, [fp, #-4]
   15840:	b	158bc <__assert_fail@plt+0x44ac>
   15844:	ldr	r0, [sp, #4]
   15848:	movw	r1, #59400	; 0xe808
   1584c:	movt	r1, #1
   15850:	bl	1b39c <__assert_fail@plt+0x9f8c>
   15854:	cmp	r0, #0
   15858:	bne	15890 <__assert_fail@plt+0x4480>
   1585c:	ldr	r0, [fp, #-8]
   15860:	ldrb	r0, [r0]
   15864:	cmp	r0, #96	; 0x60
   15868:	movw	r0, #0
   1586c:	moveq	r0, #1
   15870:	tst	r0, #1
   15874:	movw	r0, #59412	; 0xe814
   15878:	movt	r0, #1
   1587c:	movw	r1, #59408	; 0xe810
   15880:	movt	r1, #1
   15884:	movne	r0, r1
   15888:	str	r0, [fp, #-4]
   1588c:	b	158bc <__assert_fail@plt+0x44ac>
   15890:	ldr	r0, [sp, #12]
   15894:	cmp	r0, #9
   15898:	movw	r0, #0
   1589c:	moveq	r0, #1
   158a0:	tst	r0, #1
   158a4:	movw	r0, #59384	; 0xe7f8
   158a8:	movt	r0, #1
   158ac:	movw	r1, #59380	; 0xe7f4
   158b0:	movt	r1, #1
   158b4:	movne	r0, r1
   158b8:	str	r0, [fp, #-4]
   158bc:	ldr	r0, [fp, #-4]
   158c0:	mov	sp, fp
   158c4:	pop	{fp, pc}
   158c8:	push	{fp, lr}
   158cc:	mov	fp, sp
   158d0:	sub	sp, sp, #40	; 0x28
   158d4:	ldr	ip, [fp, #8]
   158d8:	str	r0, [fp, #-4]
   158dc:	str	r1, [fp, #-8]
   158e0:	str	r2, [fp, #-12]
   158e4:	str	r3, [fp, #-16]
   158e8:	ldr	r0, [fp, #-12]
   158ec:	movw	r1, #0
   158f0:	cmp	r0, r1
   158f4:	beq	1590c <__assert_fail@plt+0x44fc>
   158f8:	ldr	r0, [fp, #-4]
   158fc:	movw	r1, #58	; 0x3a
   15900:	bl	112f0 <strchr@plt>
   15904:	str	r0, [sp, #8]
   15908:	b	15918 <__assert_fail@plt+0x4508>
   1590c:	movw	r0, #0
   15910:	str	r0, [sp, #8]
   15914:	b	15918 <__assert_fail@plt+0x4508>
   15918:	ldr	r0, [sp, #8]
   1591c:	str	r0, [sp, #20]
   15920:	ldr	r0, [fp, #-4]
   15924:	ldr	r1, [sp, #20]
   15928:	ldr	r2, [fp, #-8]
   1592c:	ldr	r3, [fp, #-12]
   15930:	ldr	ip, [fp, #-16]
   15934:	ldr	lr, [fp, #8]
   15938:	str	ip, [sp]
   1593c:	str	lr, [sp, #4]
   15940:	bl	159e0 <__assert_fail@plt+0x45d0>
   15944:	str	r0, [sp, #16]
   15948:	ldr	r0, [fp, #-12]
   1594c:	movw	r1, #0
   15950:	cmp	r0, r1
   15954:	beq	159d4 <__assert_fail@plt+0x45c4>
   15958:	ldr	r0, [sp, #20]
   1595c:	movw	r1, #0
   15960:	cmp	r0, r1
   15964:	bne	159d4 <__assert_fail@plt+0x45c4>
   15968:	ldr	r0, [sp, #16]
   1596c:	movw	r1, #0
   15970:	cmp	r0, r1
   15974:	beq	159d4 <__assert_fail@plt+0x45c4>
   15978:	ldr	r0, [fp, #-4]
   1597c:	movw	r1, #46	; 0x2e
   15980:	bl	112f0 <strchr@plt>
   15984:	str	r0, [sp, #12]
   15988:	ldr	r0, [sp, #12]
   1598c:	movw	r1, #0
   15990:	cmp	r0, r1
   15994:	beq	159d0 <__assert_fail@plt+0x45c0>
   15998:	ldr	r0, [fp, #-4]
   1599c:	ldr	r1, [sp, #12]
   159a0:	ldr	r2, [fp, #-8]
   159a4:	ldr	r3, [fp, #-12]
   159a8:	ldr	ip, [fp, #-16]
   159ac:	ldr	lr, [fp, #8]
   159b0:	str	ip, [sp]
   159b4:	str	lr, [sp, #4]
   159b8:	bl	159e0 <__assert_fail@plt+0x45d0>
   159bc:	movw	r1, #0
   159c0:	cmp	r0, r1
   159c4:	bne	159d0 <__assert_fail@plt+0x45c0>
   159c8:	movw	r0, #0
   159cc:	str	r0, [sp, #16]
   159d0:	b	159d4 <__assert_fail@plt+0x45c4>
   159d4:	ldr	r0, [sp, #16]
   159d8:	mov	sp, fp
   159dc:	pop	{fp, pc}
   159e0:	push	{fp, lr}
   159e4:	mov	fp, sp
   159e8:	sub	sp, sp, #120	; 0x78
   159ec:	ldr	ip, [fp, #12]
   159f0:	ldr	lr, [fp, #8]
   159f4:	str	r0, [fp, #-4]
   159f8:	str	r1, [fp, #-8]
   159fc:	str	r2, [fp, #-12]
   15a00:	str	r3, [fp, #-16]
   15a04:	movw	r0, #0
   15a08:	str	r0, [fp, #-40]	; 0xffffffd8
   15a0c:	ldr	r1, [fp, #-12]
   15a10:	ldr	r1, [r1]
   15a14:	str	r1, [fp, #-44]	; 0xffffffd4
   15a18:	ldr	r1, [fp, #-16]
   15a1c:	cmp	r1, r0
   15a20:	beq	15a34 <__assert_fail@plt+0x4624>
   15a24:	ldr	r0, [fp, #-16]
   15a28:	ldr	r0, [r0]
   15a2c:	str	r0, [sp, #28]
   15a30:	b	15a40 <__assert_fail@plt+0x4630>
   15a34:	mvn	r0, #0
   15a38:	str	r0, [sp, #28]
   15a3c:	b	15a40 <__assert_fail@plt+0x4630>
   15a40:	ldr	r0, [sp, #28]
   15a44:	str	r0, [fp, #-48]	; 0xffffffd0
   15a48:	movw	r0, #0
   15a4c:	str	r0, [fp, #-20]	; 0xffffffec
   15a50:	ldr	r1, [fp, #8]
   15a54:	cmp	r1, r0
   15a58:	beq	15a68 <__assert_fail@plt+0x4658>
   15a5c:	ldr	r0, [fp, #8]
   15a60:	movw	r1, #0
   15a64:	str	r1, [r0]
   15a68:	ldr	r0, [fp, #12]
   15a6c:	movw	r1, #0
   15a70:	cmp	r0, r1
   15a74:	beq	15a84 <__assert_fail@plt+0x4674>
   15a78:	ldr	r0, [fp, #12]
   15a7c:	movw	r1, #0
   15a80:	str	r1, [r0]
   15a84:	movw	r0, #0
   15a88:	str	r0, [fp, #-32]	; 0xffffffe0
   15a8c:	ldr	r1, [fp, #-8]
   15a90:	cmp	r1, r0
   15a94:	bne	15ab8 <__assert_fail@plt+0x46a8>
   15a98:	ldr	r0, [fp, #-4]
   15a9c:	ldrsb	r0, [r0]
   15aa0:	cmp	r0, #0
   15aa4:	beq	15ab4 <__assert_fail@plt+0x46a4>
   15aa8:	ldr	r0, [fp, #-4]
   15aac:	bl	19454 <__assert_fail@plt+0x8044>
   15ab0:	str	r0, [fp, #-32]	; 0xffffffe0
   15ab4:	b	15b00 <__assert_fail@plt+0x46f0>
   15ab8:	ldr	r0, [fp, #-8]
   15abc:	ldr	r1, [fp, #-4]
   15ac0:	sub	r0, r0, r1
   15ac4:	str	r0, [fp, #-52]	; 0xffffffcc
   15ac8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15acc:	cmp	r0, #0
   15ad0:	beq	15afc <__assert_fail@plt+0x46ec>
   15ad4:	ldr	r0, [fp, #-4]
   15ad8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15adc:	add	r1, r1, #1
   15ae0:	bl	193c4 <__assert_fail@plt+0x7fb4>
   15ae4:	str	r0, [fp, #-32]	; 0xffffffe0
   15ae8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15aec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15af0:	add	r0, r0, r1
   15af4:	movw	r1, #0
   15af8:	strb	r1, [r0]
   15afc:	b	15b00 <__assert_fail@plt+0x46f0>
   15b00:	ldr	r0, [fp, #-8]
   15b04:	movw	r1, #0
   15b08:	cmp	r0, r1
   15b0c:	beq	15b20 <__assert_fail@plt+0x4710>
   15b10:	ldr	r0, [fp, #-8]
   15b14:	ldrb	r0, [r0, #1]
   15b18:	cmp	r0, #0
   15b1c:	bne	15b2c <__assert_fail@plt+0x471c>
   15b20:	movw	r0, #0
   15b24:	str	r0, [sp, #24]
   15b28:	b	15b38 <__assert_fail@plt+0x4728>
   15b2c:	ldr	r0, [fp, #-8]
   15b30:	add	r0, r0, #1
   15b34:	str	r0, [sp, #24]
   15b38:	ldr	r0, [sp, #24]
   15b3c:	str	r0, [fp, #-36]	; 0xffffffdc
   15b40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b44:	movw	r1, #0
   15b48:	cmp	r0, r1
   15b4c:	beq	15ce0 <__assert_fail@plt+0x48d0>
   15b50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b54:	ldrb	r0, [r0]
   15b58:	cmp	r0, #43	; 0x2b
   15b5c:	bne	15b6c <__assert_fail@plt+0x475c>
   15b60:	movw	r0, #0
   15b64:	str	r0, [sp, #20]
   15b68:	b	15b78 <__assert_fail@plt+0x4768>
   15b6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b70:	bl	1114c <getpwnam@plt>
   15b74:	str	r0, [sp, #20]
   15b78:	ldr	r0, [sp, #20]
   15b7c:	str	r0, [fp, #-24]	; 0xffffffe8
   15b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15b84:	movw	r1, #0
   15b88:	cmp	r0, r1
   15b8c:	bne	15c50 <__assert_fail@plt+0x4840>
   15b90:	ldr	r0, [fp, #-8]
   15b94:	movw	r1, #0
   15b98:	cmp	r0, r1
   15b9c:	movw	r0, #0
   15ba0:	str	r0, [sp, #16]
   15ba4:	beq	15bc0 <__assert_fail@plt+0x47b0>
   15ba8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15bac:	movw	r1, #0
   15bb0:	cmp	r0, r1
   15bb4:	movw	r0, #0
   15bb8:	moveq	r0, #1
   15bbc:	str	r0, [sp, #16]
   15bc0:	ldr	r0, [sp, #16]
   15bc4:	and	r0, r0, #1
   15bc8:	strb	r0, [fp, #-53]	; 0xffffffcb
   15bcc:	ldrb	r0, [fp, #-53]	; 0xffffffcb
   15bd0:	tst	r0, #1
   15bd4:	beq	15bec <__assert_fail@plt+0x47dc>
   15bd8:	movw	r0, #61804	; 0xf16c
   15bdc:	movt	r0, #2
   15be0:	ldr	r0, [r0]
   15be4:	str	r0, [fp, #-20]	; 0xffffffec
   15be8:	b	15c4c <__assert_fail@plt+0x483c>
   15bec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bf0:	movw	r1, #0
   15bf4:	movw	r2, #10
   15bf8:	add	r3, sp, #60	; 0x3c
   15bfc:	movw	ip, #57271	; 0xdfb7
   15c00:	movt	ip, #1
   15c04:	str	ip, [sp]
   15c08:	bl	19534 <__assert_fail@plt+0x8124>
   15c0c:	cmp	r0, #0
   15c10:	bne	15c38 <__assert_fail@plt+0x4828>
   15c14:	ldr	r0, [sp, #60]	; 0x3c
   15c18:	cmn	r0, #1
   15c1c:	bhi	15c38 <__assert_fail@plt+0x4828>
   15c20:	ldr	r0, [sp, #60]	; 0x3c
   15c24:	cmn	r0, #1
   15c28:	beq	15c38 <__assert_fail@plt+0x4828>
   15c2c:	ldr	r0, [sp, #60]	; 0x3c
   15c30:	str	r0, [fp, #-44]	; 0xffffffd4
   15c34:	b	15c48 <__assert_fail@plt+0x4838>
   15c38:	movw	r0, #61796	; 0xf164
   15c3c:	movt	r0, #2
   15c40:	ldr	r0, [r0]
   15c44:	str	r0, [fp, #-20]	; 0xffffffec
   15c48:	b	15c4c <__assert_fail@plt+0x483c>
   15c4c:	b	15cdc <__assert_fail@plt+0x48cc>
   15c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c54:	ldr	r0, [r0, #8]
   15c58:	str	r0, [fp, #-44]	; 0xffffffd4
   15c5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c60:	movw	r1, #0
   15c64:	cmp	r0, r1
   15c68:	bne	15cd8 <__assert_fail@plt+0x48c8>
   15c6c:	ldr	r0, [fp, #-8]
   15c70:	movw	r1, #0
   15c74:	cmp	r0, r1
   15c78:	beq	15cd8 <__assert_fail@plt+0x48c8>
   15c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c80:	ldr	r0, [r0, #12]
   15c84:	str	r0, [fp, #-48]	; 0xffffffd0
   15c88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15c8c:	bl	113ec <getgrgid@plt>
   15c90:	str	r0, [fp, #-28]	; 0xffffffe4
   15c94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15c98:	movw	r1, #0
   15c9c:	cmp	r0, r1
   15ca0:	beq	15cb4 <__assert_fail@plt+0x48a4>
   15ca4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15ca8:	ldr	r0, [r0]
   15cac:	str	r0, [sp, #12]
   15cb0:	b	15cc8 <__assert_fail@plt+0x48b8>
   15cb4:	add	r2, sp, #39	; 0x27
   15cb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15cbc:	mov	r1, #0
   15cc0:	bl	13004 <__assert_fail@plt+0x1bf4>
   15cc4:	str	r0, [sp, #12]
   15cc8:	ldr	r0, [sp, #12]
   15ccc:	bl	19454 <__assert_fail@plt+0x8044>
   15cd0:	str	r0, [fp, #-40]	; 0xffffffd8
   15cd4:	bl	11128 <endgrent@plt>
   15cd8:	b	15cdc <__assert_fail@plt+0x48cc>
   15cdc:	bl	1138c <endpwent@plt>
   15ce0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ce4:	movw	r1, #0
   15ce8:	cmp	r0, r1
   15cec:	beq	15dbc <__assert_fail@plt+0x49ac>
   15cf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   15cf4:	movw	r1, #0
   15cf8:	cmp	r0, r1
   15cfc:	bne	15dbc <__assert_fail@plt+0x49ac>
   15d00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d04:	ldrb	r0, [r0]
   15d08:	cmp	r0, #43	; 0x2b
   15d0c:	bne	15d1c <__assert_fail@plt+0x490c>
   15d10:	movw	r0, #0
   15d14:	str	r0, [sp, #8]
   15d18:	b	15d28 <__assert_fail@plt+0x4918>
   15d1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d20:	bl	113f8 <getgrnam@plt>
   15d24:	str	r0, [sp, #8]
   15d28:	ldr	r0, [sp, #8]
   15d2c:	str	r0, [fp, #-28]	; 0xffffffe4
   15d30:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15d34:	movw	r1, #0
   15d38:	cmp	r0, r1
   15d3c:	bne	15da0 <__assert_fail@plt+0x4990>
   15d40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15d44:	movw	r1, #0
   15d48:	movw	r2, #10
   15d4c:	add	r3, sp, #32
   15d50:	movw	ip, #57271	; 0xdfb7
   15d54:	movt	ip, #1
   15d58:	str	ip, [sp]
   15d5c:	bl	19534 <__assert_fail@plt+0x8124>
   15d60:	cmp	r0, #0
   15d64:	bne	15d8c <__assert_fail@plt+0x497c>
   15d68:	ldr	r0, [sp, #32]
   15d6c:	cmn	r0, #1
   15d70:	bhi	15d8c <__assert_fail@plt+0x497c>
   15d74:	ldr	r0, [sp, #32]
   15d78:	cmn	r0, #1
   15d7c:	beq	15d8c <__assert_fail@plt+0x497c>
   15d80:	ldr	r0, [sp, #32]
   15d84:	str	r0, [fp, #-48]	; 0xffffffd0
   15d88:	b	15d9c <__assert_fail@plt+0x498c>
   15d8c:	movw	r0, #61800	; 0xf168
   15d90:	movt	r0, #2
   15d94:	ldr	r0, [r0]
   15d98:	str	r0, [fp, #-20]	; 0xffffffec
   15d9c:	b	15dac <__assert_fail@plt+0x499c>
   15da0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15da4:	ldr	r0, [r0, #8]
   15da8:	str	r0, [fp, #-48]	; 0xffffffd0
   15dac:	bl	11128 <endgrent@plt>
   15db0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15db4:	bl	19454 <__assert_fail@plt+0x8044>
   15db8:	str	r0, [fp, #-40]	; 0xffffffd8
   15dbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   15dc0:	movw	r1, #0
   15dc4:	cmp	r0, r1
   15dc8:	bne	15e40 <__assert_fail@plt+0x4a30>
   15dcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15dd0:	ldr	r1, [fp, #-12]
   15dd4:	str	r0, [r1]
   15dd8:	ldr	r0, [fp, #-16]
   15ddc:	movw	r1, #0
   15de0:	cmp	r0, r1
   15de4:	beq	15df4 <__assert_fail@plt+0x49e4>
   15de8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15dec:	ldr	r1, [fp, #-16]
   15df0:	str	r0, [r1]
   15df4:	ldr	r0, [fp, #8]
   15df8:	movw	r1, #0
   15dfc:	cmp	r0, r1
   15e00:	beq	15e18 <__assert_fail@plt+0x4a08>
   15e04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e08:	ldr	r1, [fp, #8]
   15e0c:	str	r0, [r1]
   15e10:	movw	r0, #0
   15e14:	str	r0, [fp, #-32]	; 0xffffffe0
   15e18:	ldr	r0, [fp, #12]
   15e1c:	movw	r1, #0
   15e20:	cmp	r0, r1
   15e24:	beq	15e3c <__assert_fail@plt+0x4a2c>
   15e28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15e2c:	ldr	r1, [fp, #12]
   15e30:	str	r0, [r1]
   15e34:	movw	r0, #0
   15e38:	str	r0, [fp, #-40]	; 0xffffffd8
   15e3c:	b	15e40 <__assert_fail@plt+0x4a30>
   15e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e44:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   15e48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15e4c:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   15e50:	ldr	r0, [fp, #-20]	; 0xffffffec
   15e54:	movw	r1, #0
   15e58:	cmp	r0, r1
   15e5c:	beq	15e70 <__assert_fail@plt+0x4a60>
   15e60:	ldr	r0, [fp, #-20]	; 0xffffffec
   15e64:	bl	112cc <gettext@plt>
   15e68:	str	r0, [sp, #4]
   15e6c:	b	15e7c <__assert_fail@plt+0x4a6c>
   15e70:	movw	r0, #0
   15e74:	str	r0, [sp, #4]
   15e78:	b	15e7c <__assert_fail@plt+0x4a6c>
   15e7c:	ldr	r0, [sp, #4]
   15e80:	mov	sp, fp
   15e84:	pop	{fp, pc}
   15e88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e8c:	add	fp, sp, #28
   15e90:	sub	sp, sp, #196	; 0xc4
   15e94:	ldr	ip, [fp, #12]
   15e98:	ldr	lr, [fp, #8]
   15e9c:	str	r0, [fp, #-32]	; 0xffffffe0
   15ea0:	str	r1, [fp, #-36]	; 0xffffffdc
   15ea4:	str	r2, [fp, #-40]	; 0xffffffd8
   15ea8:	str	r3, [fp, #-44]	; 0xffffffd4
   15eac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15eb0:	movw	r1, #0
   15eb4:	cmp	r0, r1
   15eb8:	beq	15eec <__assert_fail@plt+0x4adc>
   15ebc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ec0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15ec4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15ec8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ecc:	movw	ip, #59540	; 0xe894
   15ed0:	movt	ip, #1
   15ed4:	str	r1, [fp, #-48]	; 0xffffffd0
   15ed8:	mov	r1, ip
   15edc:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15ee0:	str	ip, [sp]
   15ee4:	bl	112fc <fprintf@plt>
   15ee8:	b	15f04 <__assert_fail@plt+0x4af4>
   15eec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ef0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15ef4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15ef8:	movw	r1, #59552	; 0xe8a0
   15efc:	movt	r1, #1
   15f00:	bl	112fc <fprintf@plt>
   15f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f08:	movw	r1, #59559	; 0xe8a7
   15f0c:	movt	r1, #1
   15f10:	str	r0, [fp, #-52]	; 0xffffffcc
   15f14:	mov	r0, r1
   15f18:	bl	112cc <gettext@plt>
   15f1c:	movw	r1, #60277	; 0xeb75
   15f20:	movt	r1, #1
   15f24:	movw	r3, #2022	; 0x7e6
   15f28:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15f2c:	str	r0, [fp, #-56]	; 0xffffffc8
   15f30:	mov	r0, r2
   15f34:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15f38:	bl	112fc <fprintf@plt>
   15f3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15f40:	movw	r2, #57270	; 0xdfb6
   15f44:	movt	r2, #1
   15f48:	str	r0, [fp, #-60]	; 0xffffffc4
   15f4c:	mov	r0, r2
   15f50:	str	r2, [fp, #-64]	; 0xffffffc0
   15f54:	bl	11134 <fputs_unlocked@plt>
   15f58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15f5c:	movw	r2, #59563	; 0xe8ab
   15f60:	movt	r2, #1
   15f64:	str	r0, [fp, #-68]	; 0xffffffbc
   15f68:	mov	r0, r2
   15f6c:	str	r1, [fp, #-72]	; 0xffffffb8
   15f70:	bl	112cc <gettext@plt>
   15f74:	movw	r2, #59734	; 0xe956
   15f78:	movt	r2, #1
   15f7c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15f80:	str	r0, [fp, #-76]	; 0xffffffb4
   15f84:	mov	r0, r1
   15f88:	ldr	r1, [fp, #-76]	; 0xffffffb4
   15f8c:	bl	112fc <fprintf@plt>
   15f90:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15f94:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15f98:	str	r0, [fp, #-80]	; 0xffffffb0
   15f9c:	mov	r0, r2
   15fa0:	bl	11134 <fputs_unlocked@plt>
   15fa4:	ldr	r1, [fp, #12]
   15fa8:	cmp	r1, #9
   15fac:	str	r1, [fp, #-84]	; 0xffffffac
   15fb0:	bhi	163cc <__assert_fail@plt+0x4fbc>
   15fb4:	add	r0, pc, #8
   15fb8:	ldr	r1, [fp, #-84]	; 0xffffffac
   15fbc:	ldr	r0, [r0, r1, lsl #2]
   15fc0:	mov	pc, r0
   15fc4:	andeq	r5, r1, ip, ror #31
   15fc8:	strdeq	r5, [r1], -r0
   15fcc:	andeq	r6, r1, r8, lsr #32
   15fd0:	andeq	r6, r1, r8, rrx
   15fd4:	andeq	r6, r1, r0, asr #1
   15fd8:	andeq	r6, r1, r4, lsr #2
   15fdc:	muleq	r1, r4, r1
   15fe0:	andeq	r6, r1, r0, lsl r2
   15fe4:	muleq	r1, r8, r2
   15fe8:	andeq	r6, r1, ip, lsr #6
   15fec:	b	16468 <__assert_fail@plt+0x5058>
   15ff0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ff4:	movw	r1, #59768	; 0xe978
   15ff8:	movt	r1, #1
   15ffc:	str	r0, [fp, #-88]	; 0xffffffa8
   16000:	mov	r0, r1
   16004:	bl	112cc <gettext@plt>
   16008:	ldr	r1, [fp, #8]
   1600c:	ldr	r2, [r1]
   16010:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16014:	str	r0, [fp, #-92]	; 0xffffffa4
   16018:	mov	r0, r1
   1601c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16020:	bl	112fc <fprintf@plt>
   16024:	b	16468 <__assert_fail@plt+0x5058>
   16028:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1602c:	movw	r1, #59784	; 0xe988
   16030:	movt	r1, #1
   16034:	str	r0, [fp, #-96]	; 0xffffffa0
   16038:	mov	r0, r1
   1603c:	bl	112cc <gettext@plt>
   16040:	ldr	r1, [fp, #8]
   16044:	ldr	r2, [r1]
   16048:	ldr	r1, [fp, #8]
   1604c:	ldr	r3, [r1, #4]
   16050:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16054:	str	r0, [fp, #-100]	; 0xffffff9c
   16058:	mov	r0, r1
   1605c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16060:	bl	112fc <fprintf@plt>
   16064:	b	16468 <__assert_fail@plt+0x5058>
   16068:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1606c:	movw	r1, #59807	; 0xe99f
   16070:	movt	r1, #1
   16074:	str	r0, [fp, #-104]	; 0xffffff98
   16078:	mov	r0, r1
   1607c:	bl	112cc <gettext@plt>
   16080:	ldr	r1, [fp, #8]
   16084:	ldr	r2, [r1]
   16088:	ldr	r1, [fp, #8]
   1608c:	ldr	r3, [r1, #4]
   16090:	ldr	r1, [fp, #8]
   16094:	ldr	r1, [r1, #8]
   16098:	ldr	ip, [fp, #-104]	; 0xffffff98
   1609c:	str	r0, [fp, #-108]	; 0xffffff94
   160a0:	mov	r0, ip
   160a4:	ldr	lr, [fp, #-108]	; 0xffffff94
   160a8:	str	r1, [sp, #112]	; 0x70
   160ac:	mov	r1, lr
   160b0:	ldr	r4, [sp, #112]	; 0x70
   160b4:	str	r4, [sp]
   160b8:	bl	112fc <fprintf@plt>
   160bc:	b	16468 <__assert_fail@plt+0x5058>
   160c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160c4:	movw	r1, #59835	; 0xe9bb
   160c8:	movt	r1, #1
   160cc:	str	r0, [sp, #108]	; 0x6c
   160d0:	mov	r0, r1
   160d4:	bl	112cc <gettext@plt>
   160d8:	ldr	r1, [fp, #8]
   160dc:	ldr	r2, [r1]
   160e0:	ldr	r1, [fp, #8]
   160e4:	ldr	r3, [r1, #4]
   160e8:	ldr	r1, [fp, #8]
   160ec:	ldr	r1, [r1, #8]
   160f0:	ldr	ip, [fp, #8]
   160f4:	ldr	ip, [ip, #12]
   160f8:	ldr	lr, [sp, #108]	; 0x6c
   160fc:	str	r0, [sp, #104]	; 0x68
   16100:	mov	r0, lr
   16104:	ldr	r4, [sp, #104]	; 0x68
   16108:	str	r1, [sp, #100]	; 0x64
   1610c:	mov	r1, r4
   16110:	ldr	r5, [sp, #100]	; 0x64
   16114:	str	r5, [sp]
   16118:	str	ip, [sp, #4]
   1611c:	bl	112fc <fprintf@plt>
   16120:	b	16468 <__assert_fail@plt+0x5058>
   16124:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16128:	movw	r1, #59867	; 0xe9db
   1612c:	movt	r1, #1
   16130:	str	r0, [sp, #96]	; 0x60
   16134:	mov	r0, r1
   16138:	bl	112cc <gettext@plt>
   1613c:	ldr	r1, [fp, #8]
   16140:	ldr	r2, [r1]
   16144:	ldr	r1, [fp, #8]
   16148:	ldr	r3, [r1, #4]
   1614c:	ldr	r1, [fp, #8]
   16150:	ldr	r1, [r1, #8]
   16154:	ldr	ip, [fp, #8]
   16158:	ldr	ip, [ip, #12]
   1615c:	ldr	lr, [fp, #8]
   16160:	ldr	lr, [lr, #16]
   16164:	ldr	r4, [sp, #96]	; 0x60
   16168:	str	r0, [sp, #92]	; 0x5c
   1616c:	mov	r0, r4
   16170:	ldr	r5, [sp, #92]	; 0x5c
   16174:	str	r1, [sp, #88]	; 0x58
   16178:	mov	r1, r5
   1617c:	ldr	r6, [sp, #88]	; 0x58
   16180:	str	r6, [sp]
   16184:	str	ip, [sp, #4]
   16188:	str	lr, [sp, #8]
   1618c:	bl	112fc <fprintf@plt>
   16190:	b	16468 <__assert_fail@plt+0x5058>
   16194:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16198:	movw	r1, #59903	; 0xe9ff
   1619c:	movt	r1, #1
   161a0:	str	r0, [sp, #84]	; 0x54
   161a4:	mov	r0, r1
   161a8:	bl	112cc <gettext@plt>
   161ac:	ldr	r1, [fp, #8]
   161b0:	ldr	r2, [r1]
   161b4:	ldr	r1, [fp, #8]
   161b8:	ldr	r3, [r1, #4]
   161bc:	ldr	r1, [fp, #8]
   161c0:	ldr	r1, [r1, #8]
   161c4:	ldr	ip, [fp, #8]
   161c8:	ldr	ip, [ip, #12]
   161cc:	ldr	lr, [fp, #8]
   161d0:	ldr	lr, [lr, #16]
   161d4:	ldr	r4, [fp, #8]
   161d8:	ldr	r4, [r4, #20]
   161dc:	ldr	r5, [sp, #84]	; 0x54
   161e0:	str	r0, [sp, #80]	; 0x50
   161e4:	mov	r0, r5
   161e8:	ldr	r6, [sp, #80]	; 0x50
   161ec:	str	r1, [sp, #76]	; 0x4c
   161f0:	mov	r1, r6
   161f4:	ldr	r7, [sp, #76]	; 0x4c
   161f8:	str	r7, [sp]
   161fc:	str	ip, [sp, #4]
   16200:	str	lr, [sp, #8]
   16204:	str	r4, [sp, #12]
   16208:	bl	112fc <fprintf@plt>
   1620c:	b	16468 <__assert_fail@plt+0x5058>
   16210:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16214:	movw	r1, #59943	; 0xea27
   16218:	movt	r1, #1
   1621c:	str	r0, [sp, #72]	; 0x48
   16220:	mov	r0, r1
   16224:	bl	112cc <gettext@plt>
   16228:	ldr	r1, [fp, #8]
   1622c:	ldr	r2, [r1]
   16230:	ldr	r1, [fp, #8]
   16234:	ldr	r3, [r1, #4]
   16238:	ldr	r1, [fp, #8]
   1623c:	ldr	r1, [r1, #8]
   16240:	ldr	ip, [fp, #8]
   16244:	ldr	ip, [ip, #12]
   16248:	ldr	lr, [fp, #8]
   1624c:	ldr	lr, [lr, #16]
   16250:	ldr	r4, [fp, #8]
   16254:	ldr	r4, [r4, #20]
   16258:	ldr	r5, [fp, #8]
   1625c:	ldr	r5, [r5, #24]
   16260:	ldr	r6, [sp, #72]	; 0x48
   16264:	str	r0, [sp, #68]	; 0x44
   16268:	mov	r0, r6
   1626c:	ldr	r7, [sp, #68]	; 0x44
   16270:	str	r1, [sp, #64]	; 0x40
   16274:	mov	r1, r7
   16278:	ldr	r8, [sp, #64]	; 0x40
   1627c:	str	r8, [sp]
   16280:	str	ip, [sp, #4]
   16284:	str	lr, [sp, #8]
   16288:	str	r4, [sp, #12]
   1628c:	str	r5, [sp, #16]
   16290:	bl	112fc <fprintf@plt>
   16294:	b	16468 <__assert_fail@plt+0x5058>
   16298:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1629c:	movw	r1, #59987	; 0xea53
   162a0:	movt	r1, #1
   162a4:	str	r0, [sp, #60]	; 0x3c
   162a8:	mov	r0, r1
   162ac:	bl	112cc <gettext@plt>
   162b0:	ldr	r1, [fp, #8]
   162b4:	ldr	r2, [r1]
   162b8:	ldr	r1, [fp, #8]
   162bc:	ldr	r3, [r1, #4]
   162c0:	ldr	r1, [fp, #8]
   162c4:	ldr	r1, [r1, #8]
   162c8:	ldr	ip, [fp, #8]
   162cc:	ldr	ip, [ip, #12]
   162d0:	ldr	lr, [fp, #8]
   162d4:	ldr	lr, [lr, #16]
   162d8:	ldr	r4, [fp, #8]
   162dc:	ldr	r4, [r4, #20]
   162e0:	ldr	r5, [fp, #8]
   162e4:	ldr	r5, [r5, #24]
   162e8:	ldr	r6, [fp, #8]
   162ec:	ldr	r6, [r6, #28]
   162f0:	ldr	r7, [sp, #60]	; 0x3c
   162f4:	str	r0, [sp, #56]	; 0x38
   162f8:	mov	r0, r7
   162fc:	ldr	r8, [sp, #56]	; 0x38
   16300:	str	r1, [sp, #52]	; 0x34
   16304:	mov	r1, r8
   16308:	ldr	r9, [sp, #52]	; 0x34
   1630c:	str	r9, [sp]
   16310:	str	ip, [sp, #4]
   16314:	str	lr, [sp, #8]
   16318:	str	r4, [sp, #12]
   1631c:	str	r5, [sp, #16]
   16320:	str	r6, [sp, #20]
   16324:	bl	112fc <fprintf@plt>
   16328:	b	16468 <__assert_fail@plt+0x5058>
   1632c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16330:	movw	r1, #60035	; 0xea83
   16334:	movt	r1, #1
   16338:	str	r0, [sp, #48]	; 0x30
   1633c:	mov	r0, r1
   16340:	bl	112cc <gettext@plt>
   16344:	ldr	r1, [fp, #8]
   16348:	ldr	r2, [r1]
   1634c:	ldr	r1, [fp, #8]
   16350:	ldr	r3, [r1, #4]
   16354:	ldr	r1, [fp, #8]
   16358:	ldr	r1, [r1, #8]
   1635c:	ldr	ip, [fp, #8]
   16360:	ldr	ip, [ip, #12]
   16364:	ldr	lr, [fp, #8]
   16368:	ldr	lr, [lr, #16]
   1636c:	ldr	r4, [fp, #8]
   16370:	ldr	r4, [r4, #20]
   16374:	ldr	r5, [fp, #8]
   16378:	ldr	r5, [r5, #24]
   1637c:	ldr	r6, [fp, #8]
   16380:	ldr	r6, [r6, #28]
   16384:	ldr	r7, [fp, #8]
   16388:	ldr	r7, [r7, #32]
   1638c:	ldr	r8, [sp, #48]	; 0x30
   16390:	str	r0, [sp, #44]	; 0x2c
   16394:	mov	r0, r8
   16398:	ldr	r9, [sp, #44]	; 0x2c
   1639c:	str	r1, [sp, #40]	; 0x28
   163a0:	mov	r1, r9
   163a4:	ldr	sl, [sp, #40]	; 0x28
   163a8:	str	sl, [sp]
   163ac:	str	ip, [sp, #4]
   163b0:	str	lr, [sp, #8]
   163b4:	str	r4, [sp, #12]
   163b8:	str	r5, [sp, #16]
   163bc:	str	r6, [sp, #20]
   163c0:	str	r7, [sp, #24]
   163c4:	bl	112fc <fprintf@plt>
   163c8:	b	16468 <__assert_fail@plt+0x5058>
   163cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   163d0:	movw	r1, #60087	; 0xeab7
   163d4:	movt	r1, #1
   163d8:	str	r0, [sp, #36]	; 0x24
   163dc:	mov	r0, r1
   163e0:	bl	112cc <gettext@plt>
   163e4:	ldr	r1, [fp, #8]
   163e8:	ldr	r2, [r1]
   163ec:	ldr	r1, [fp, #8]
   163f0:	ldr	r3, [r1, #4]
   163f4:	ldr	r1, [fp, #8]
   163f8:	ldr	r1, [r1, #8]
   163fc:	ldr	ip, [fp, #8]
   16400:	ldr	ip, [ip, #12]
   16404:	ldr	lr, [fp, #8]
   16408:	ldr	lr, [lr, #16]
   1640c:	ldr	r4, [fp, #8]
   16410:	ldr	r4, [r4, #20]
   16414:	ldr	r5, [fp, #8]
   16418:	ldr	r5, [r5, #24]
   1641c:	ldr	r6, [fp, #8]
   16420:	ldr	r6, [r6, #28]
   16424:	ldr	r7, [fp, #8]
   16428:	ldr	r7, [r7, #32]
   1642c:	ldr	r8, [sp, #36]	; 0x24
   16430:	str	r0, [sp, #32]
   16434:	mov	r0, r8
   16438:	ldr	r9, [sp, #32]
   1643c:	str	r1, [sp, #28]
   16440:	mov	r1, r9
   16444:	ldr	sl, [sp, #28]
   16448:	str	sl, [sp]
   1644c:	str	ip, [sp, #4]
   16450:	str	lr, [sp, #8]
   16454:	str	r4, [sp, #12]
   16458:	str	r5, [sp, #16]
   1645c:	str	r6, [sp, #20]
   16460:	str	r7, [sp, #24]
   16464:	bl	112fc <fprintf@plt>
   16468:	sub	sp, fp, #28
   1646c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16470:	push	{fp, lr}
   16474:	mov	fp, sp
   16478:	sub	sp, sp, #32
   1647c:	ldr	ip, [fp, #8]
   16480:	str	r0, [fp, #-4]
   16484:	str	r1, [fp, #-8]
   16488:	str	r2, [fp, #-12]
   1648c:	str	r3, [sp, #16]
   16490:	movw	r0, #0
   16494:	str	r0, [sp, #12]
   16498:	ldr	r0, [fp, #8]
   1649c:	ldr	r1, [sp, #12]
   164a0:	add	r0, r0, r1, lsl #2
   164a4:	ldr	r0, [r0]
   164a8:	movw	r1, #0
   164ac:	cmp	r0, r1
   164b0:	beq	164c8 <__assert_fail@plt+0x50b8>
   164b4:	b	164b8 <__assert_fail@plt+0x50a8>
   164b8:	ldr	r0, [sp, #12]
   164bc:	add	r0, r0, #1
   164c0:	str	r0, [sp, #12]
   164c4:	b	16498 <__assert_fail@plt+0x5088>
   164c8:	ldr	r0, [fp, #-4]
   164cc:	ldr	r1, [fp, #-8]
   164d0:	ldr	r2, [fp, #-12]
   164d4:	ldr	r3, [sp, #16]
   164d8:	ldr	ip, [fp, #8]
   164dc:	ldr	lr, [sp, #12]
   164e0:	str	ip, [sp]
   164e4:	str	lr, [sp, #4]
   164e8:	bl	15e88 <__assert_fail@plt+0x4a78>
   164ec:	mov	sp, fp
   164f0:	pop	{fp, pc}
   164f4:	push	{fp, lr}
   164f8:	mov	fp, sp
   164fc:	sub	sp, sp, #80	; 0x50
   16500:	ldr	ip, [fp, #8]
   16504:	str	ip, [fp, #-4]
   16508:	str	r0, [fp, #-8]
   1650c:	str	r1, [fp, #-12]
   16510:	str	r2, [fp, #-16]
   16514:	str	r3, [fp, #-20]	; 0xffffffec
   16518:	movw	r0, #0
   1651c:	str	r0, [fp, #-24]	; 0xffffffe8
   16520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16524:	cmp	r0, #10
   16528:	movw	r0, #0
   1652c:	str	r0, [sp, #12]
   16530:	bcs	16568 <__assert_fail@plt+0x5158>
   16534:	ldr	r0, [fp, #-4]
   16538:	add	r1, r0, #4
   1653c:	str	r1, [fp, #-4]
   16540:	ldr	r0, [r0]
   16544:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16548:	add	r2, sp, #16
   1654c:	add	r1, r2, r1, lsl #2
   16550:	str	r0, [r1]
   16554:	movw	r1, #0
   16558:	cmp	r0, r1
   1655c:	movw	r0, #0
   16560:	movne	r0, #1
   16564:	str	r0, [sp, #12]
   16568:	ldr	r0, [sp, #12]
   1656c:	tst	r0, #1
   16570:	beq	16588 <__assert_fail@plt+0x5178>
   16574:	b	16578 <__assert_fail@plt+0x5168>
   16578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1657c:	add	r0, r0, #1
   16580:	str	r0, [fp, #-24]	; 0xffffffe8
   16584:	b	16520 <__assert_fail@plt+0x5110>
   16588:	add	r0, sp, #16
   1658c:	ldr	r1, [fp, #-8]
   16590:	ldr	r2, [fp, #-12]
   16594:	ldr	r3, [fp, #-16]
   16598:	ldr	ip, [fp, #-20]	; 0xffffffec
   1659c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   165a0:	str	r0, [sp, #8]
   165a4:	mov	r0, r1
   165a8:	mov	r1, r2
   165ac:	mov	r2, r3
   165b0:	mov	r3, ip
   165b4:	ldr	ip, [sp, #8]
   165b8:	str	ip, [sp]
   165bc:	str	lr, [sp, #4]
   165c0:	bl	15e88 <__assert_fail@plt+0x4a78>
   165c4:	mov	sp, fp
   165c8:	pop	{fp, pc}
   165cc:	push	{fp, lr}
   165d0:	mov	fp, sp
   165d4:	sub	sp, sp, #24
   165d8:	str	r0, [fp, #-4]
   165dc:	str	r1, [fp, #-8]
   165e0:	str	r2, [sp, #12]
   165e4:	str	r3, [sp, #8]
   165e8:	add	r0, fp, #8
   165ec:	str	r0, [sp, #4]
   165f0:	ldr	r0, [fp, #-4]
   165f4:	ldr	r1, [fp, #-8]
   165f8:	ldr	r2, [sp, #12]
   165fc:	ldr	r3, [sp, #8]
   16600:	ldr	ip, [sp, #4]
   16604:	mov	lr, sp
   16608:	str	ip, [lr]
   1660c:	bl	164f4 <__assert_fail@plt+0x50e4>
   16610:	add	r0, sp, #4
   16614:	mov	sp, fp
   16618:	pop	{fp, pc}
   1661c:	push	{fp, lr}
   16620:	mov	fp, sp
   16624:	sub	sp, sp, #16
   16628:	movw	r0, #61828	; 0xf184
   1662c:	movt	r0, #2
   16630:	ldr	r1, [r0]
   16634:	movw	r0, #57270	; 0xdfb6
   16638:	movt	r0, #1
   1663c:	bl	11134 <fputs_unlocked@plt>
   16640:	movw	r1, #60147	; 0xeaf3
   16644:	movt	r1, #1
   16648:	str	r0, [fp, #-4]
   1664c:	mov	r0, r1
   16650:	bl	112cc <gettext@plt>
   16654:	movw	r1, #60167	; 0xeb07
   16658:	movt	r1, #1
   1665c:	bl	1117c <printf@plt>
   16660:	movw	r1, #60189	; 0xeb1d
   16664:	movt	r1, #1
   16668:	str	r0, [sp, #8]
   1666c:	mov	r0, r1
   16670:	bl	112cc <gettext@plt>
   16674:	movw	r1, #58054	; 0xe2c6
   16678:	movt	r1, #1
   1667c:	movw	r2, #58560	; 0xe4c0
   16680:	movt	r2, #1
   16684:	bl	1117c <printf@plt>
   16688:	movw	r1, #60209	; 0xeb31
   1668c:	movt	r1, #1
   16690:	str	r0, [sp, #4]
   16694:	mov	r0, r1
   16698:	bl	112cc <gettext@plt>
   1669c:	movw	r1, #60248	; 0xeb58
   166a0:	movt	r1, #1
   166a4:	bl	1117c <printf@plt>
   166a8:	mov	sp, fp
   166ac:	pop	{fp, pc}
   166b0:	push	{fp, lr}
   166b4:	mov	fp, sp
   166b8:	sub	sp, sp, #16
   166bc:	str	r0, [fp, #-4]
   166c0:	str	r1, [sp, #8]
   166c4:	str	r2, [sp, #4]
   166c8:	ldr	r0, [fp, #-4]
   166cc:	ldr	r1, [sp, #8]
   166d0:	ldr	r2, [sp, #4]
   166d4:	bl	166e0 <__assert_fail@plt+0x52d0>
   166d8:	mov	sp, fp
   166dc:	pop	{fp, pc}
   166e0:	push	{fp, lr}
   166e4:	mov	fp, sp
   166e8:	sub	sp, sp, #16
   166ec:	str	r0, [fp, #-4]
   166f0:	str	r1, [sp, #8]
   166f4:	str	r2, [sp, #4]
   166f8:	ldr	r0, [fp, #-4]
   166fc:	ldr	r1, [sp, #8]
   16700:	ldr	r2, [sp, #4]
   16704:	bl	1bebc <__assert_fail@plt+0xaaac>
   16708:	str	r0, [sp]
   1670c:	ldr	r0, [sp]
   16710:	movw	r1, #0
   16714:	cmp	r0, r1
   16718:	bne	16748 <__assert_fail@plt+0x5338>
   1671c:	ldr	r0, [fp, #-4]
   16720:	movw	r1, #0
   16724:	cmp	r0, r1
   16728:	beq	16744 <__assert_fail@plt+0x5334>
   1672c:	ldr	r0, [sp, #8]
   16730:	cmp	r0, #0
   16734:	beq	16748 <__assert_fail@plt+0x5338>
   16738:	ldr	r0, [sp, #4]
   1673c:	cmp	r0, #0
   16740:	beq	16748 <__assert_fail@plt+0x5338>
   16744:	bl	1948c <__assert_fail@plt+0x807c>
   16748:	ldr	r0, [sp]
   1674c:	mov	sp, fp
   16750:	pop	{fp, pc}
   16754:	push	{fp, lr}
   16758:	mov	fp, sp
   1675c:	sub	sp, sp, #8
   16760:	str	r0, [sp, #4]
   16764:	ldr	r0, [sp, #4]
   16768:	bl	1b288 <__assert_fail@plt+0x9e78>
   1676c:	bl	16778 <__assert_fail@plt+0x5368>
   16770:	mov	sp, fp
   16774:	pop	{fp, pc}
   16778:	push	{fp, lr}
   1677c:	mov	fp, sp
   16780:	sub	sp, sp, #8
   16784:	str	r0, [sp, #4]
   16788:	ldr	r0, [sp, #4]
   1678c:	movw	r1, #0
   16790:	cmp	r0, r1
   16794:	bne	1679c <__assert_fail@plt+0x538c>
   16798:	bl	1948c <__assert_fail@plt+0x807c>
   1679c:	ldr	r0, [sp, #4]
   167a0:	mov	sp, fp
   167a4:	pop	{fp, pc}
   167a8:	push	{fp, lr}
   167ac:	mov	fp, sp
   167b0:	sub	sp, sp, #8
   167b4:	str	r0, [sp, #4]
   167b8:	ldr	r0, [sp, #4]
   167bc:	bl	1b7e0 <__assert_fail@plt+0xa3d0>
   167c0:	bl	16778 <__assert_fail@plt+0x5368>
   167c4:	mov	sp, fp
   167c8:	pop	{fp, pc}
   167cc:	push	{fp, lr}
   167d0:	mov	fp, sp
   167d4:	sub	sp, sp, #8
   167d8:	str	r0, [sp, #4]
   167dc:	ldr	r0, [sp, #4]
   167e0:	bl	16754 <__assert_fail@plt+0x5344>
   167e4:	mov	sp, fp
   167e8:	pop	{fp, pc}
   167ec:	push	{fp, lr}
   167f0:	mov	fp, sp
   167f4:	sub	sp, sp, #16
   167f8:	str	r0, [fp, #-4]
   167fc:	str	r1, [sp, #8]
   16800:	ldr	r0, [fp, #-4]
   16804:	ldr	r1, [sp, #8]
   16808:	bl	1b2f8 <__assert_fail@plt+0x9ee8>
   1680c:	str	r0, [sp, #4]
   16810:	ldr	r0, [sp, #4]
   16814:	movw	r1, #0
   16818:	cmp	r0, r1
   1681c:	bne	16840 <__assert_fail@plt+0x5430>
   16820:	ldr	r0, [fp, #-4]
   16824:	movw	r1, #0
   16828:	cmp	r0, r1
   1682c:	beq	1683c <__assert_fail@plt+0x542c>
   16830:	ldr	r0, [sp, #8]
   16834:	cmp	r0, #0
   16838:	beq	16840 <__assert_fail@plt+0x5430>
   1683c:	bl	1948c <__assert_fail@plt+0x807c>
   16840:	ldr	r0, [sp, #4]
   16844:	mov	sp, fp
   16848:	pop	{fp, pc}
   1684c:	push	{fp, lr}
   16850:	mov	fp, sp
   16854:	sub	sp, sp, #8
   16858:	str	r0, [sp, #4]
   1685c:	str	r1, [sp]
   16860:	ldr	r0, [sp, #4]
   16864:	ldr	r1, [sp]
   16868:	bl	1b820 <__assert_fail@plt+0xa410>
   1686c:	bl	16778 <__assert_fail@plt+0x5368>
   16870:	mov	sp, fp
   16874:	pop	{fp, pc}
   16878:	push	{fp, lr}
   1687c:	mov	fp, sp
   16880:	sub	sp, sp, #16
   16884:	str	r0, [fp, #-4]
   16888:	str	r1, [sp, #8]
   1688c:	str	r2, [sp, #4]
   16890:	ldr	r0, [fp, #-4]
   16894:	ldr	r1, [sp, #8]
   16898:	ldr	r2, [sp, #4]
   1689c:	bl	1b918 <__assert_fail@plt+0xa508>
   168a0:	bl	16778 <__assert_fail@plt+0x5368>
   168a4:	mov	sp, fp
   168a8:	pop	{fp, pc}
   168ac:	push	{fp, lr}
   168b0:	mov	fp, sp
   168b4:	sub	sp, sp, #8
   168b8:	str	r0, [sp, #4]
   168bc:	str	r1, [sp]
   168c0:	ldr	r1, [sp, #4]
   168c4:	ldr	r2, [sp]
   168c8:	movw	r0, #0
   168cc:	bl	166e0 <__assert_fail@plt+0x52d0>
   168d0:	mov	sp, fp
   168d4:	pop	{fp, pc}
   168d8:	push	{fp, lr}
   168dc:	mov	fp, sp
   168e0:	sub	sp, sp, #8
   168e4:	str	r0, [sp, #4]
   168e8:	str	r1, [sp]
   168ec:	ldr	r1, [sp, #4]
   168f0:	ldr	r2, [sp]
   168f4:	movw	r0, #0
   168f8:	bl	16878 <__assert_fail@plt+0x5468>
   168fc:	mov	sp, fp
   16900:	pop	{fp, pc}
   16904:	push	{fp, lr}
   16908:	mov	fp, sp
   1690c:	sub	sp, sp, #8
   16910:	str	r0, [sp, #4]
   16914:	str	r1, [sp]
   16918:	ldr	r0, [sp, #4]
   1691c:	ldr	r1, [sp]
   16920:	movw	r2, #1
   16924:	bl	16930 <__assert_fail@plt+0x5520>
   16928:	mov	sp, fp
   1692c:	pop	{fp, pc}
   16930:	push	{fp, lr}
   16934:	mov	fp, sp
   16938:	sub	sp, sp, #16
   1693c:	str	r0, [fp, #-4]
   16940:	str	r1, [sp, #8]
   16944:	str	r2, [sp, #4]
   16948:	ldr	r0, [sp, #8]
   1694c:	ldr	r0, [r0]
   16950:	str	r0, [sp]
   16954:	ldr	r0, [fp, #-4]
   16958:	movw	r1, #0
   1695c:	cmp	r0, r1
   16960:	bne	169ac <__assert_fail@plt+0x559c>
   16964:	ldr	r0, [sp]
   16968:	cmp	r0, #0
   1696c:	bne	169a8 <__assert_fail@plt+0x5598>
   16970:	ldr	r0, [sp, #4]
   16974:	movw	r1, #64	; 0x40
   16978:	udiv	r0, r1, r0
   1697c:	str	r0, [sp]
   16980:	ldr	r0, [sp]
   16984:	cmp	r0, #0
   16988:	movw	r0, #0
   1698c:	movne	r0, #1
   16990:	mvn	r1, #0
   16994:	eor	r0, r0, r1
   16998:	and	r0, r0, #1
   1699c:	ldr	r1, [sp]
   169a0:	add	r0, r1, r0
   169a4:	str	r0, [sp]
   169a8:	b	169dc <__assert_fail@plt+0x55cc>
   169ac:	ldr	r0, [sp]
   169b0:	ldr	r1, [sp]
   169b4:	lsr	r1, r1, #1
   169b8:	add	r1, r1, #1
   169bc:	adds	r0, r0, r1
   169c0:	mov	r1, #0
   169c4:	adc	r1, r1, #0
   169c8:	str	r0, [sp]
   169cc:	tst	r1, #1
   169d0:	beq	169d8 <__assert_fail@plt+0x55c8>
   169d4:	bl	1948c <__assert_fail@plt+0x807c>
   169d8:	b	169dc <__assert_fail@plt+0x55cc>
   169dc:	ldr	r0, [fp, #-4]
   169e0:	ldr	r1, [sp]
   169e4:	ldr	r2, [sp, #4]
   169e8:	bl	166e0 <__assert_fail@plt+0x52d0>
   169ec:	str	r0, [fp, #-4]
   169f0:	ldr	r0, [sp]
   169f4:	ldr	r1, [sp, #8]
   169f8:	str	r0, [r1]
   169fc:	ldr	r0, [fp, #-4]
   16a00:	mov	sp, fp
   16a04:	pop	{fp, pc}
   16a08:	push	{fp, lr}
   16a0c:	mov	fp, sp
   16a10:	sub	sp, sp, #216	; 0xd8
   16a14:	ldr	ip, [fp, #8]
   16a18:	str	r0, [fp, #-4]
   16a1c:	str	r1, [fp, #-8]
   16a20:	str	r2, [fp, #-12]
   16a24:	str	r3, [fp, #-16]
   16a28:	ldr	r0, [fp, #-8]
   16a2c:	ldr	r0, [r0]
   16a30:	str	r0, [fp, #-20]	; 0xffffffec
   16a34:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a38:	ldr	r1, [fp, #-20]	; 0xffffffec
   16a3c:	asr	r1, r1, #1
   16a40:	add	r1, r0, r1
   16a44:	mov	r2, #1
   16a48:	cmp	r1, r0
   16a4c:	movwvc	r2, #0
   16a50:	str	r1, [fp, #-24]	; 0xffffffe8
   16a54:	tst	r2, #1
   16a58:	beq	16a64 <__assert_fail@plt+0x5654>
   16a5c:	ldr	r0, [pc, #4036]	; 17a28 <__assert_fail@plt+0x6618>
   16a60:	str	r0, [fp, #-24]	; 0xffffffe8
   16a64:	ldr	r0, [fp, #-16]
   16a68:	movw	r1, #0
   16a6c:	cmp	r1, r0
   16a70:	bgt	16a8c <__assert_fail@plt+0x567c>
   16a74:	ldr	r0, [fp, #-16]
   16a78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a7c:	cmp	r0, r1
   16a80:	bge	16a8c <__assert_fail@plt+0x567c>
   16a84:	ldr	r0, [fp, #-16]
   16a88:	str	r0, [fp, #-24]	; 0xffffffe8
   16a8c:	b	16e64 <__assert_fail@plt+0x5a54>
   16a90:	b	16a94 <__assert_fail@plt+0x5684>
   16a94:	ldr	r0, [fp, #8]
   16a98:	cmp	r0, #0
   16a9c:	bge	16bb0 <__assert_fail@plt+0x57a0>
   16aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16aa4:	cmp	r0, #0
   16aa8:	bge	16b34 <__assert_fail@plt+0x5724>
   16aac:	b	16ab0 <__assert_fail@plt+0x56a0>
   16ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ab4:	ldr	r1, [fp, #8]
   16ab8:	movw	r2, #127	; 0x7f
   16abc:	sdiv	r1, r2, r1
   16ac0:	cmp	r0, r1
   16ac4:	blt	16c50 <__assert_fail@plt+0x5840>
   16ac8:	b	16c68 <__assert_fail@plt+0x5858>
   16acc:	b	16ad0 <__assert_fail@plt+0x56c0>
   16ad0:	ldr	r0, [pc, #4084]	; 17acc <__assert_fail@plt+0x66bc>
   16ad4:	ldr	r1, [fp, #8]
   16ad8:	cmp	r1, r0
   16adc:	blt	16af4 <__assert_fail@plt+0x56e4>
   16ae0:	b	16b00 <__assert_fail@plt+0x56f0>
   16ae4:	ldr	r0, [fp, #8]
   16ae8:	movw	r1, #0
   16aec:	cmp	r1, r0
   16af0:	bge	16b00 <__assert_fail@plt+0x56f0>
   16af4:	movw	r0, #0
   16af8:	str	r0, [fp, #-36]	; 0xffffffdc
   16afc:	b	16b18 <__assert_fail@plt+0x5708>
   16b00:	ldr	r0, [fp, #8]
   16b04:	movw	r1, #0
   16b08:	sub	r0, r1, r0
   16b0c:	movw	r1, #127	; 0x7f
   16b10:	sdiv	r0, r1, r0
   16b14:	str	r0, [fp, #-36]	; 0xffffffdc
   16b18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16b1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b20:	mvn	r2, #0
   16b24:	sub	r1, r2, r1
   16b28:	cmp	r0, r1
   16b2c:	ble	16c50 <__assert_fail@plt+0x5840>
   16b30:	b	16c68 <__assert_fail@plt+0x5858>
   16b34:	b	16b38 <__assert_fail@plt+0x5728>
   16b38:	b	16b94 <__assert_fail@plt+0x5784>
   16b3c:	b	16b94 <__assert_fail@plt+0x5784>
   16b40:	ldr	r0, [fp, #8]
   16b44:	cmn	r0, #1
   16b48:	bne	16b94 <__assert_fail@plt+0x5784>
   16b4c:	b	16b50 <__assert_fail@plt+0x5740>
   16b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b54:	mvn	r1, #127	; 0x7f
   16b58:	add	r0, r0, r1
   16b5c:	movw	r1, #0
   16b60:	cmp	r1, r0
   16b64:	blt	16c50 <__assert_fail@plt+0x5840>
   16b68:	b	16c68 <__assert_fail@plt+0x5858>
   16b6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b70:	movw	r1, #0
   16b74:	cmp	r1, r0
   16b78:	bge	16c68 <__assert_fail@plt+0x5858>
   16b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b80:	sub	r0, r0, #1
   16b84:	movw	r1, #127	; 0x7f
   16b88:	cmp	r1, r0
   16b8c:	blt	16c50 <__assert_fail@plt+0x5840>
   16b90:	b	16c68 <__assert_fail@plt+0x5858>
   16b94:	ldr	r0, [fp, #8]
   16b98:	mvn	r1, #127	; 0x7f
   16b9c:	sdiv	r0, r1, r0
   16ba0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ba4:	cmp	r0, r1
   16ba8:	blt	16c50 <__assert_fail@plt+0x5840>
   16bac:	b	16c68 <__assert_fail@plt+0x5858>
   16bb0:	ldr	r0, [fp, #8]
   16bb4:	cmp	r0, #0
   16bb8:	bne	16bc0 <__assert_fail@plt+0x57b0>
   16bbc:	b	16c68 <__assert_fail@plt+0x5858>
   16bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bc4:	cmp	r0, #0
   16bc8:	bge	16c38 <__assert_fail@plt+0x5828>
   16bcc:	b	16bd0 <__assert_fail@plt+0x57c0>
   16bd0:	b	16c1c <__assert_fail@plt+0x580c>
   16bd4:	b	16c1c <__assert_fail@plt+0x580c>
   16bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bdc:	cmn	r0, #1
   16be0:	bne	16c1c <__assert_fail@plt+0x580c>
   16be4:	b	16be8 <__assert_fail@plt+0x57d8>
   16be8:	ldr	r0, [fp, #8]
   16bec:	mvn	r1, #127	; 0x7f
   16bf0:	add	r0, r0, r1
   16bf4:	movw	r1, #0
   16bf8:	cmp	r1, r0
   16bfc:	blt	16c50 <__assert_fail@plt+0x5840>
   16c00:	b	16c68 <__assert_fail@plt+0x5858>
   16c04:	ldr	r0, [fp, #8]
   16c08:	sub	r0, r0, #1
   16c0c:	movw	r1, #127	; 0x7f
   16c10:	cmp	r1, r0
   16c14:	blt	16c50 <__assert_fail@plt+0x5840>
   16c18:	b	16c68 <__assert_fail@plt+0x5858>
   16c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c20:	mvn	r1, #127	; 0x7f
   16c24:	sdiv	r0, r1, r0
   16c28:	ldr	r1, [fp, #8]
   16c2c:	cmp	r0, r1
   16c30:	blt	16c50 <__assert_fail@plt+0x5840>
   16c34:	b	16c68 <__assert_fail@plt+0x5858>
   16c38:	ldr	r0, [fp, #8]
   16c3c:	movw	r1, #127	; 0x7f
   16c40:	sdiv	r0, r1, r0
   16c44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c48:	cmp	r0, r1
   16c4c:	bge	16c68 <__assert_fail@plt+0x5858>
   16c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c54:	ldr	r1, [fp, #8]
   16c58:	mul	r0, r0, r1
   16c5c:	sxtb	r0, r0
   16c60:	str	r0, [fp, #-28]	; 0xffffffe4
   16c64:	b	17e2c <__assert_fail@plt+0x6a1c>
   16c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c6c:	ldr	r1, [fp, #8]
   16c70:	mul	r0, r0, r1
   16c74:	sxtb	r0, r0
   16c78:	str	r0, [fp, #-28]	; 0xffffffe4
   16c7c:	b	17e38 <__assert_fail@plt+0x6a28>
   16c80:	ldr	r0, [fp, #8]
   16c84:	cmp	r0, #0
   16c88:	bge	16d98 <__assert_fail@plt+0x5988>
   16c8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c90:	cmp	r0, #0
   16c94:	bge	16d20 <__assert_fail@plt+0x5910>
   16c98:	b	16c9c <__assert_fail@plt+0x588c>
   16c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ca0:	ldr	r1, [fp, #8]
   16ca4:	movw	r2, #255	; 0xff
   16ca8:	sdiv	r1, r2, r1
   16cac:	cmp	r0, r1
   16cb0:	blt	16e34 <__assert_fail@plt+0x5a24>
   16cb4:	b	16e4c <__assert_fail@plt+0x5a3c>
   16cb8:	b	16cbc <__assert_fail@plt+0x58ac>
   16cbc:	ldr	r0, [pc, #3592]	; 17acc <__assert_fail@plt+0x66bc>
   16cc0:	ldr	r1, [fp, #8]
   16cc4:	cmp	r1, r0
   16cc8:	blt	16ce0 <__assert_fail@plt+0x58d0>
   16ccc:	b	16cec <__assert_fail@plt+0x58dc>
   16cd0:	ldr	r0, [fp, #8]
   16cd4:	movw	r1, #0
   16cd8:	cmp	r1, r0
   16cdc:	bge	16cec <__assert_fail@plt+0x58dc>
   16ce0:	movw	r0, #0
   16ce4:	str	r0, [fp, #-40]	; 0xffffffd8
   16ce8:	b	16d04 <__assert_fail@plt+0x58f4>
   16cec:	ldr	r0, [fp, #8]
   16cf0:	movw	r1, #0
   16cf4:	sub	r0, r1, r0
   16cf8:	movw	r1, #255	; 0xff
   16cfc:	sdiv	r0, r1, r0
   16d00:	str	r0, [fp, #-40]	; 0xffffffd8
   16d04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d0c:	mvn	r2, #0
   16d10:	sub	r1, r2, r1
   16d14:	cmp	r0, r1
   16d18:	ble	16e34 <__assert_fail@plt+0x5a24>
   16d1c:	b	16e4c <__assert_fail@plt+0x5a3c>
   16d20:	b	16d24 <__assert_fail@plt+0x5914>
   16d24:	b	16d7c <__assert_fail@plt+0x596c>
   16d28:	b	16d7c <__assert_fail@plt+0x596c>
   16d2c:	ldr	r0, [fp, #8]
   16d30:	cmn	r0, #1
   16d34:	bne	16d7c <__assert_fail@plt+0x596c>
   16d38:	b	16d3c <__assert_fail@plt+0x592c>
   16d3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d40:	add	r0, r0, #0
   16d44:	movw	r1, #0
   16d48:	cmp	r1, r0
   16d4c:	blt	16e34 <__assert_fail@plt+0x5a24>
   16d50:	b	16e4c <__assert_fail@plt+0x5a3c>
   16d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d58:	movw	r1, #0
   16d5c:	cmp	r1, r0
   16d60:	bge	16e4c <__assert_fail@plt+0x5a3c>
   16d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d68:	sub	r0, r0, #1
   16d6c:	mvn	r1, #0
   16d70:	cmp	r1, r0
   16d74:	blt	16e34 <__assert_fail@plt+0x5a24>
   16d78:	b	16e4c <__assert_fail@plt+0x5a3c>
   16d7c:	ldr	r0, [fp, #8]
   16d80:	movw	r1, #0
   16d84:	sdiv	r0, r1, r0
   16d88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d8c:	cmp	r0, r1
   16d90:	blt	16e34 <__assert_fail@plt+0x5a24>
   16d94:	b	16e4c <__assert_fail@plt+0x5a3c>
   16d98:	ldr	r0, [fp, #8]
   16d9c:	cmp	r0, #0
   16da0:	bne	16da8 <__assert_fail@plt+0x5998>
   16da4:	b	16e4c <__assert_fail@plt+0x5a3c>
   16da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dac:	cmp	r0, #0
   16db0:	bge	16e1c <__assert_fail@plt+0x5a0c>
   16db4:	b	16db8 <__assert_fail@plt+0x59a8>
   16db8:	b	16e00 <__assert_fail@plt+0x59f0>
   16dbc:	b	16e00 <__assert_fail@plt+0x59f0>
   16dc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16dc4:	cmn	r0, #1
   16dc8:	bne	16e00 <__assert_fail@plt+0x59f0>
   16dcc:	b	16dd0 <__assert_fail@plt+0x59c0>
   16dd0:	ldr	r0, [fp, #8]
   16dd4:	add	r0, r0, #0
   16dd8:	movw	r1, #0
   16ddc:	cmp	r1, r0
   16de0:	blt	16e34 <__assert_fail@plt+0x5a24>
   16de4:	b	16e4c <__assert_fail@plt+0x5a3c>
   16de8:	ldr	r0, [fp, #8]
   16dec:	sub	r0, r0, #1
   16df0:	mvn	r1, #0
   16df4:	cmp	r1, r0
   16df8:	blt	16e34 <__assert_fail@plt+0x5a24>
   16dfc:	b	16e4c <__assert_fail@plt+0x5a3c>
   16e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e04:	movw	r1, #0
   16e08:	sdiv	r0, r1, r0
   16e0c:	ldr	r1, [fp, #8]
   16e10:	cmp	r0, r1
   16e14:	blt	16e34 <__assert_fail@plt+0x5a24>
   16e18:	b	16e4c <__assert_fail@plt+0x5a3c>
   16e1c:	ldr	r0, [fp, #8]
   16e20:	movw	r1, #255	; 0xff
   16e24:	sdiv	r0, r1, r0
   16e28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e2c:	cmp	r0, r1
   16e30:	bge	16e4c <__assert_fail@plt+0x5a3c>
   16e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e38:	ldr	r1, [fp, #8]
   16e3c:	mul	r0, r0, r1
   16e40:	and	r0, r0, #255	; 0xff
   16e44:	str	r0, [fp, #-28]	; 0xffffffe4
   16e48:	b	17e2c <__assert_fail@plt+0x6a1c>
   16e4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e50:	ldr	r1, [fp, #8]
   16e54:	mul	r0, r0, r1
   16e58:	and	r0, r0, #255	; 0xff
   16e5c:	str	r0, [fp, #-28]	; 0xffffffe4
   16e60:	b	17e38 <__assert_fail@plt+0x6a28>
   16e64:	b	1723c <__assert_fail@plt+0x5e2c>
   16e68:	b	16e6c <__assert_fail@plt+0x5a5c>
   16e6c:	ldr	r0, [fp, #8]
   16e70:	cmp	r0, #0
   16e74:	bge	16f88 <__assert_fail@plt+0x5b78>
   16e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e7c:	cmp	r0, #0
   16e80:	bge	16f0c <__assert_fail@plt+0x5afc>
   16e84:	b	16e88 <__assert_fail@plt+0x5a78>
   16e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e8c:	ldr	r1, [fp, #8]
   16e90:	movw	r2, #32767	; 0x7fff
   16e94:	sdiv	r1, r2, r1
   16e98:	cmp	r0, r1
   16e9c:	blt	17028 <__assert_fail@plt+0x5c18>
   16ea0:	b	17040 <__assert_fail@plt+0x5c30>
   16ea4:	b	16ea8 <__assert_fail@plt+0x5a98>
   16ea8:	ldr	r0, [pc, #3100]	; 17acc <__assert_fail@plt+0x66bc>
   16eac:	ldr	r1, [fp, #8]
   16eb0:	cmp	r1, r0
   16eb4:	blt	16ecc <__assert_fail@plt+0x5abc>
   16eb8:	b	16ed8 <__assert_fail@plt+0x5ac8>
   16ebc:	ldr	r0, [fp, #8]
   16ec0:	movw	r1, #0
   16ec4:	cmp	r1, r0
   16ec8:	bge	16ed8 <__assert_fail@plt+0x5ac8>
   16ecc:	movw	r0, #0
   16ed0:	str	r0, [fp, #-44]	; 0xffffffd4
   16ed4:	b	16ef0 <__assert_fail@plt+0x5ae0>
   16ed8:	ldr	r0, [fp, #8]
   16edc:	movw	r1, #0
   16ee0:	sub	r0, r1, r0
   16ee4:	movw	r1, #32767	; 0x7fff
   16ee8:	sdiv	r0, r1, r0
   16eec:	str	r0, [fp, #-44]	; 0xffffffd4
   16ef0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16ef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ef8:	mvn	r2, #0
   16efc:	sub	r1, r2, r1
   16f00:	cmp	r0, r1
   16f04:	ble	17028 <__assert_fail@plt+0x5c18>
   16f08:	b	17040 <__assert_fail@plt+0x5c30>
   16f0c:	b	16f10 <__assert_fail@plt+0x5b00>
   16f10:	b	16f6c <__assert_fail@plt+0x5b5c>
   16f14:	b	16f6c <__assert_fail@plt+0x5b5c>
   16f18:	ldr	r0, [fp, #8]
   16f1c:	cmn	r0, #1
   16f20:	bne	16f6c <__assert_fail@plt+0x5b5c>
   16f24:	b	16f28 <__assert_fail@plt+0x5b18>
   16f28:	ldr	r0, [pc, #4068]	; 17f14 <__assert_fail@plt+0x6b04>
   16f2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f30:	add	r0, r1, r0
   16f34:	movw	r1, #0
   16f38:	cmp	r1, r0
   16f3c:	blt	17028 <__assert_fail@plt+0x5c18>
   16f40:	b	17040 <__assert_fail@plt+0x5c30>
   16f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f48:	movw	r1, #0
   16f4c:	cmp	r1, r0
   16f50:	bge	17040 <__assert_fail@plt+0x5c30>
   16f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f58:	sub	r0, r0, #1
   16f5c:	movw	r1, #32767	; 0x7fff
   16f60:	cmp	r1, r0
   16f64:	blt	17028 <__assert_fail@plt+0x5c18>
   16f68:	b	17040 <__assert_fail@plt+0x5c30>
   16f6c:	ldr	r0, [pc, #4000]	; 17f14 <__assert_fail@plt+0x6b04>
   16f70:	ldr	r1, [fp, #8]
   16f74:	sdiv	r0, r0, r1
   16f78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f7c:	cmp	r0, r1
   16f80:	blt	17028 <__assert_fail@plt+0x5c18>
   16f84:	b	17040 <__assert_fail@plt+0x5c30>
   16f88:	ldr	r0, [fp, #8]
   16f8c:	cmp	r0, #0
   16f90:	bne	16f98 <__assert_fail@plt+0x5b88>
   16f94:	b	17040 <__assert_fail@plt+0x5c30>
   16f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f9c:	cmp	r0, #0
   16fa0:	bge	17010 <__assert_fail@plt+0x5c00>
   16fa4:	b	16fa8 <__assert_fail@plt+0x5b98>
   16fa8:	b	16ff4 <__assert_fail@plt+0x5be4>
   16fac:	b	16ff4 <__assert_fail@plt+0x5be4>
   16fb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fb4:	cmn	r0, #1
   16fb8:	bne	16ff4 <__assert_fail@plt+0x5be4>
   16fbc:	b	16fc0 <__assert_fail@plt+0x5bb0>
   16fc0:	ldr	r0, [pc, #3916]	; 17f14 <__assert_fail@plt+0x6b04>
   16fc4:	ldr	r1, [fp, #8]
   16fc8:	add	r0, r1, r0
   16fcc:	movw	r1, #0
   16fd0:	cmp	r1, r0
   16fd4:	blt	17028 <__assert_fail@plt+0x5c18>
   16fd8:	b	17040 <__assert_fail@plt+0x5c30>
   16fdc:	ldr	r0, [fp, #8]
   16fe0:	sub	r0, r0, #1
   16fe4:	movw	r1, #32767	; 0x7fff
   16fe8:	cmp	r1, r0
   16fec:	blt	17028 <__assert_fail@plt+0x5c18>
   16ff0:	b	17040 <__assert_fail@plt+0x5c30>
   16ff4:	ldr	r0, [pc, #3864]	; 17f14 <__assert_fail@plt+0x6b04>
   16ff8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16ffc:	sdiv	r0, r0, r1
   17000:	ldr	r1, [fp, #8]
   17004:	cmp	r0, r1
   17008:	blt	17028 <__assert_fail@plt+0x5c18>
   1700c:	b	17040 <__assert_fail@plt+0x5c30>
   17010:	ldr	r0, [fp, #8]
   17014:	movw	r1, #32767	; 0x7fff
   17018:	sdiv	r0, r1, r0
   1701c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17020:	cmp	r0, r1
   17024:	bge	17040 <__assert_fail@plt+0x5c30>
   17028:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1702c:	ldr	r1, [fp, #8]
   17030:	mul	r0, r0, r1
   17034:	sxth	r0, r0
   17038:	str	r0, [fp, #-28]	; 0xffffffe4
   1703c:	b	17e2c <__assert_fail@plt+0x6a1c>
   17040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17044:	ldr	r1, [fp, #8]
   17048:	mul	r0, r0, r1
   1704c:	sxth	r0, r0
   17050:	str	r0, [fp, #-28]	; 0xffffffe4
   17054:	b	17e38 <__assert_fail@plt+0x6a28>
   17058:	ldr	r0, [fp, #8]
   1705c:	cmp	r0, #0
   17060:	bge	17170 <__assert_fail@plt+0x5d60>
   17064:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17068:	cmp	r0, #0
   1706c:	bge	170f8 <__assert_fail@plt+0x5ce8>
   17070:	b	17074 <__assert_fail@plt+0x5c64>
   17074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17078:	ldr	r1, [fp, #8]
   1707c:	movw	r2, #65535	; 0xffff
   17080:	sdiv	r1, r2, r1
   17084:	cmp	r0, r1
   17088:	blt	1720c <__assert_fail@plt+0x5dfc>
   1708c:	b	17224 <__assert_fail@plt+0x5e14>
   17090:	b	17094 <__assert_fail@plt+0x5c84>
   17094:	ldr	r0, [pc, #2608]	; 17acc <__assert_fail@plt+0x66bc>
   17098:	ldr	r1, [fp, #8]
   1709c:	cmp	r1, r0
   170a0:	blt	170b8 <__assert_fail@plt+0x5ca8>
   170a4:	b	170c4 <__assert_fail@plt+0x5cb4>
   170a8:	ldr	r0, [fp, #8]
   170ac:	movw	r1, #0
   170b0:	cmp	r1, r0
   170b4:	bge	170c4 <__assert_fail@plt+0x5cb4>
   170b8:	movw	r0, #0
   170bc:	str	r0, [fp, #-48]	; 0xffffffd0
   170c0:	b	170dc <__assert_fail@plt+0x5ccc>
   170c4:	ldr	r0, [fp, #8]
   170c8:	movw	r1, #0
   170cc:	sub	r0, r1, r0
   170d0:	movw	r1, #65535	; 0xffff
   170d4:	sdiv	r0, r1, r0
   170d8:	str	r0, [fp, #-48]	; 0xffffffd0
   170dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   170e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170e4:	mvn	r2, #0
   170e8:	sub	r1, r2, r1
   170ec:	cmp	r0, r1
   170f0:	ble	1720c <__assert_fail@plt+0x5dfc>
   170f4:	b	17224 <__assert_fail@plt+0x5e14>
   170f8:	b	170fc <__assert_fail@plt+0x5cec>
   170fc:	b	17154 <__assert_fail@plt+0x5d44>
   17100:	b	17154 <__assert_fail@plt+0x5d44>
   17104:	ldr	r0, [fp, #8]
   17108:	cmn	r0, #1
   1710c:	bne	17154 <__assert_fail@plt+0x5d44>
   17110:	b	17114 <__assert_fail@plt+0x5d04>
   17114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17118:	add	r0, r0, #0
   1711c:	movw	r1, #0
   17120:	cmp	r1, r0
   17124:	blt	1720c <__assert_fail@plt+0x5dfc>
   17128:	b	17224 <__assert_fail@plt+0x5e14>
   1712c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17130:	movw	r1, #0
   17134:	cmp	r1, r0
   17138:	bge	17224 <__assert_fail@plt+0x5e14>
   1713c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17140:	sub	r0, r0, #1
   17144:	mvn	r1, #0
   17148:	cmp	r1, r0
   1714c:	blt	1720c <__assert_fail@plt+0x5dfc>
   17150:	b	17224 <__assert_fail@plt+0x5e14>
   17154:	ldr	r0, [fp, #8]
   17158:	movw	r1, #0
   1715c:	sdiv	r0, r1, r0
   17160:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17164:	cmp	r0, r1
   17168:	blt	1720c <__assert_fail@plt+0x5dfc>
   1716c:	b	17224 <__assert_fail@plt+0x5e14>
   17170:	ldr	r0, [fp, #8]
   17174:	cmp	r0, #0
   17178:	bne	17180 <__assert_fail@plt+0x5d70>
   1717c:	b	17224 <__assert_fail@plt+0x5e14>
   17180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17184:	cmp	r0, #0
   17188:	bge	171f4 <__assert_fail@plt+0x5de4>
   1718c:	b	17190 <__assert_fail@plt+0x5d80>
   17190:	b	171d8 <__assert_fail@plt+0x5dc8>
   17194:	b	171d8 <__assert_fail@plt+0x5dc8>
   17198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1719c:	cmn	r0, #1
   171a0:	bne	171d8 <__assert_fail@plt+0x5dc8>
   171a4:	b	171a8 <__assert_fail@plt+0x5d98>
   171a8:	ldr	r0, [fp, #8]
   171ac:	add	r0, r0, #0
   171b0:	movw	r1, #0
   171b4:	cmp	r1, r0
   171b8:	blt	1720c <__assert_fail@plt+0x5dfc>
   171bc:	b	17224 <__assert_fail@plt+0x5e14>
   171c0:	ldr	r0, [fp, #8]
   171c4:	sub	r0, r0, #1
   171c8:	mvn	r1, #0
   171cc:	cmp	r1, r0
   171d0:	blt	1720c <__assert_fail@plt+0x5dfc>
   171d4:	b	17224 <__assert_fail@plt+0x5e14>
   171d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171dc:	movw	r1, #0
   171e0:	sdiv	r0, r1, r0
   171e4:	ldr	r1, [fp, #8]
   171e8:	cmp	r0, r1
   171ec:	blt	1720c <__assert_fail@plt+0x5dfc>
   171f0:	b	17224 <__assert_fail@plt+0x5e14>
   171f4:	ldr	r0, [fp, #8]
   171f8:	movw	r1, #65535	; 0xffff
   171fc:	sdiv	r0, r1, r0
   17200:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17204:	cmp	r0, r1
   17208:	bge	17224 <__assert_fail@plt+0x5e14>
   1720c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17210:	ldr	r1, [fp, #8]
   17214:	mul	r0, r0, r1
   17218:	uxth	r0, r0
   1721c:	str	r0, [fp, #-28]	; 0xffffffe4
   17220:	b	17e2c <__assert_fail@plt+0x6a1c>
   17224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17228:	ldr	r1, [fp, #8]
   1722c:	mul	r0, r0, r1
   17230:	uxth	r0, r0
   17234:	str	r0, [fp, #-28]	; 0xffffffe4
   17238:	b	17e38 <__assert_fail@plt+0x6a28>
   1723c:	b	17240 <__assert_fail@plt+0x5e30>
   17240:	b	17244 <__assert_fail@plt+0x5e34>
   17244:	ldr	r0, [fp, #8]
   17248:	cmp	r0, #0
   1724c:	bge	17350 <__assert_fail@plt+0x5f40>
   17250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17254:	cmp	r0, #0
   17258:	bge	172e4 <__assert_fail@plt+0x5ed4>
   1725c:	b	17260 <__assert_fail@plt+0x5e50>
   17260:	ldr	r0, [pc, #1984]	; 17a28 <__assert_fail@plt+0x6618>
   17264:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17268:	ldr	r2, [fp, #8]
   1726c:	sdiv	r0, r0, r2
   17270:	cmp	r1, r0
   17274:	blt	173e0 <__assert_fail@plt+0x5fd0>
   17278:	b	173f4 <__assert_fail@plt+0x5fe4>
   1727c:	b	17280 <__assert_fail@plt+0x5e70>
   17280:	ldr	r0, [pc, #2116]	; 17acc <__assert_fail@plt+0x66bc>
   17284:	ldr	r1, [fp, #8]
   17288:	cmp	r1, r0
   1728c:	blt	172a4 <__assert_fail@plt+0x5e94>
   17290:	b	172b0 <__assert_fail@plt+0x5ea0>
   17294:	ldr	r0, [fp, #8]
   17298:	movw	r1, #0
   1729c:	cmp	r1, r0
   172a0:	bge	172b0 <__assert_fail@plt+0x5ea0>
   172a4:	movw	r0, #0
   172a8:	str	r0, [fp, #-52]	; 0xffffffcc
   172ac:	b	172c8 <__assert_fail@plt+0x5eb8>
   172b0:	ldr	r0, [pc, #1904]	; 17a28 <__assert_fail@plt+0x6618>
   172b4:	ldr	r1, [fp, #8]
   172b8:	movw	r2, #0
   172bc:	sub	r1, r2, r1
   172c0:	sdiv	r0, r0, r1
   172c4:	str	r0, [fp, #-52]	; 0xffffffcc
   172c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   172cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172d0:	mvn	r2, #0
   172d4:	sub	r1, r2, r1
   172d8:	cmp	r0, r1
   172dc:	ble	173e0 <__assert_fail@plt+0x5fd0>
   172e0:	b	173f4 <__assert_fail@plt+0x5fe4>
   172e4:	ldr	r0, [fp, #8]
   172e8:	cmn	r0, #1
   172ec:	bne	17334 <__assert_fail@plt+0x5f24>
   172f0:	b	172f4 <__assert_fail@plt+0x5ee4>
   172f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172f8:	add	r0, r0, #-2147483648	; 0x80000000
   172fc:	movw	r1, #0
   17300:	cmp	r1, r0
   17304:	blt	173e0 <__assert_fail@plt+0x5fd0>
   17308:	b	173f4 <__assert_fail@plt+0x5fe4>
   1730c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17310:	movw	r1, #0
   17314:	cmp	r1, r0
   17318:	bge	173f4 <__assert_fail@plt+0x5fe4>
   1731c:	ldr	r0, [pc, #1796]	; 17a28 <__assert_fail@plt+0x6618>
   17320:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17324:	sub	r1, r1, #1
   17328:	cmp	r0, r1
   1732c:	blt	173e0 <__assert_fail@plt+0x5fd0>
   17330:	b	173f4 <__assert_fail@plt+0x5fe4>
   17334:	ldr	r0, [pc, #4080]	; 1832c <__assert_fail@plt+0x6f1c>
   17338:	ldr	r1, [fp, #8]
   1733c:	sdiv	r0, r0, r1
   17340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17344:	cmp	r0, r1
   17348:	blt	173e0 <__assert_fail@plt+0x5fd0>
   1734c:	b	173f4 <__assert_fail@plt+0x5fe4>
   17350:	ldr	r0, [fp, #8]
   17354:	cmp	r0, #0
   17358:	bne	17360 <__assert_fail@plt+0x5f50>
   1735c:	b	173f4 <__assert_fail@plt+0x5fe4>
   17360:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17364:	cmp	r0, #0
   17368:	bge	173c8 <__assert_fail@plt+0x5fb8>
   1736c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17370:	cmn	r0, #1
   17374:	bne	173ac <__assert_fail@plt+0x5f9c>
   17378:	b	1737c <__assert_fail@plt+0x5f6c>
   1737c:	ldr	r0, [fp, #8]
   17380:	add	r0, r0, #-2147483648	; 0x80000000
   17384:	movw	r1, #0
   17388:	cmp	r1, r0
   1738c:	blt	173e0 <__assert_fail@plt+0x5fd0>
   17390:	b	173f4 <__assert_fail@plt+0x5fe4>
   17394:	ldr	r0, [pc, #1676]	; 17a28 <__assert_fail@plt+0x6618>
   17398:	ldr	r1, [fp, #8]
   1739c:	sub	r1, r1, #1
   173a0:	cmp	r0, r1
   173a4:	blt	173e0 <__assert_fail@plt+0x5fd0>
   173a8:	b	173f4 <__assert_fail@plt+0x5fe4>
   173ac:	ldr	r0, [pc, #3960]	; 1832c <__assert_fail@plt+0x6f1c>
   173b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173b4:	sdiv	r0, r0, r1
   173b8:	ldr	r1, [fp, #8]
   173bc:	cmp	r0, r1
   173c0:	blt	173e0 <__assert_fail@plt+0x5fd0>
   173c4:	b	173f4 <__assert_fail@plt+0x5fe4>
   173c8:	ldr	r0, [pc, #1624]	; 17a28 <__assert_fail@plt+0x6618>
   173cc:	ldr	r1, [fp, #8]
   173d0:	sdiv	r0, r0, r1
   173d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173d8:	cmp	r0, r1
   173dc:	bge	173f4 <__assert_fail@plt+0x5fe4>
   173e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173e4:	ldr	r1, [fp, #8]
   173e8:	mul	r0, r0, r1
   173ec:	str	r0, [fp, #-28]	; 0xffffffe4
   173f0:	b	17e2c <__assert_fail@plt+0x6a1c>
   173f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173f8:	ldr	r1, [fp, #8]
   173fc:	mul	r0, r0, r1
   17400:	str	r0, [fp, #-28]	; 0xffffffe4
   17404:	b	17e38 <__assert_fail@plt+0x6a28>
   17408:	ldr	r0, [fp, #8]
   1740c:	cmp	r0, #0
   17410:	bge	17520 <__assert_fail@plt+0x6110>
   17414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17418:	cmp	r0, #0
   1741c:	bge	174a8 <__assert_fail@plt+0x6098>
   17420:	b	17440 <__assert_fail@plt+0x6030>
   17424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17428:	ldr	r1, [fp, #8]
   1742c:	mvn	r2, #0
   17430:	udiv	r1, r2, r1
   17434:	cmp	r0, r1
   17438:	bcc	175bc <__assert_fail@plt+0x61ac>
   1743c:	b	175d0 <__assert_fail@plt+0x61c0>
   17440:	b	17444 <__assert_fail@plt+0x6034>
   17444:	ldr	r0, [pc, #1664]	; 17acc <__assert_fail@plt+0x66bc>
   17448:	ldr	r1, [fp, #8]
   1744c:	cmp	r1, r0
   17450:	blt	17468 <__assert_fail@plt+0x6058>
   17454:	b	17474 <__assert_fail@plt+0x6064>
   17458:	ldr	r0, [fp, #8]
   1745c:	movw	r1, #0
   17460:	cmp	r1, r0
   17464:	bge	17474 <__assert_fail@plt+0x6064>
   17468:	movw	r0, #1
   1746c:	str	r0, [fp, #-56]	; 0xffffffc8
   17470:	b	1748c <__assert_fail@plt+0x607c>
   17474:	ldr	r0, [fp, #8]
   17478:	movw	r1, #0
   1747c:	sub	r0, r1, r0
   17480:	mvn	r1, #0
   17484:	udiv	r0, r1, r0
   17488:	str	r0, [fp, #-56]	; 0xffffffc8
   1748c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17490:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17494:	mvn	r2, #0
   17498:	sub	r1, r2, r1
   1749c:	cmp	r0, r1
   174a0:	bls	175bc <__assert_fail@plt+0x61ac>
   174a4:	b	175d0 <__assert_fail@plt+0x61c0>
   174a8:	b	174ac <__assert_fail@plt+0x609c>
   174ac:	b	17504 <__assert_fail@plt+0x60f4>
   174b0:	b	17504 <__assert_fail@plt+0x60f4>
   174b4:	ldr	r0, [fp, #8]
   174b8:	cmn	r0, #1
   174bc:	bne	17504 <__assert_fail@plt+0x60f4>
   174c0:	b	174c4 <__assert_fail@plt+0x60b4>
   174c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174c8:	add	r0, r0, #0
   174cc:	movw	r1, #0
   174d0:	cmp	r1, r0
   174d4:	blt	175bc <__assert_fail@plt+0x61ac>
   174d8:	b	175d0 <__assert_fail@plt+0x61c0>
   174dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174e0:	movw	r1, #0
   174e4:	cmp	r1, r0
   174e8:	bge	175d0 <__assert_fail@plt+0x61c0>
   174ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174f0:	sub	r0, r0, #1
   174f4:	mvn	r1, #0
   174f8:	cmp	r1, r0
   174fc:	blt	175bc <__assert_fail@plt+0x61ac>
   17500:	b	175d0 <__assert_fail@plt+0x61c0>
   17504:	ldr	r0, [fp, #8]
   17508:	movw	r1, #0
   1750c:	sdiv	r0, r1, r0
   17510:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17514:	cmp	r0, r1
   17518:	blt	175bc <__assert_fail@plt+0x61ac>
   1751c:	b	175d0 <__assert_fail@plt+0x61c0>
   17520:	ldr	r0, [fp, #8]
   17524:	cmp	r0, #0
   17528:	bne	17530 <__assert_fail@plt+0x6120>
   1752c:	b	175d0 <__assert_fail@plt+0x61c0>
   17530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17534:	cmp	r0, #0
   17538:	bge	175a4 <__assert_fail@plt+0x6194>
   1753c:	b	17540 <__assert_fail@plt+0x6130>
   17540:	b	17588 <__assert_fail@plt+0x6178>
   17544:	b	17588 <__assert_fail@plt+0x6178>
   17548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1754c:	cmn	r0, #1
   17550:	bne	17588 <__assert_fail@plt+0x6178>
   17554:	b	17558 <__assert_fail@plt+0x6148>
   17558:	ldr	r0, [fp, #8]
   1755c:	add	r0, r0, #0
   17560:	movw	r1, #0
   17564:	cmp	r1, r0
   17568:	blt	175bc <__assert_fail@plt+0x61ac>
   1756c:	b	175d0 <__assert_fail@plt+0x61c0>
   17570:	ldr	r0, [fp, #8]
   17574:	sub	r0, r0, #1
   17578:	mvn	r1, #0
   1757c:	cmp	r1, r0
   17580:	blt	175bc <__assert_fail@plt+0x61ac>
   17584:	b	175d0 <__assert_fail@plt+0x61c0>
   17588:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1758c:	movw	r1, #0
   17590:	sdiv	r0, r1, r0
   17594:	ldr	r1, [fp, #8]
   17598:	cmp	r0, r1
   1759c:	blt	175bc <__assert_fail@plt+0x61ac>
   175a0:	b	175d0 <__assert_fail@plt+0x61c0>
   175a4:	ldr	r0, [fp, #8]
   175a8:	mvn	r1, #0
   175ac:	udiv	r0, r1, r0
   175b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175b4:	cmp	r0, r1
   175b8:	bcs	175d0 <__assert_fail@plt+0x61c0>
   175bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175c0:	ldr	r1, [fp, #8]
   175c4:	mul	r0, r0, r1
   175c8:	str	r0, [fp, #-28]	; 0xffffffe4
   175cc:	b	17e2c <__assert_fail@plt+0x6a1c>
   175d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175d4:	ldr	r1, [fp, #8]
   175d8:	mul	r0, r0, r1
   175dc:	str	r0, [fp, #-28]	; 0xffffffe4
   175e0:	b	17e38 <__assert_fail@plt+0x6a28>
   175e4:	b	175e8 <__assert_fail@plt+0x61d8>
   175e8:	b	175ec <__assert_fail@plt+0x61dc>
   175ec:	ldr	r0, [fp, #8]
   175f0:	cmp	r0, #0
   175f4:	bge	176f8 <__assert_fail@plt+0x62e8>
   175f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175fc:	cmp	r0, #0
   17600:	bge	1768c <__assert_fail@plt+0x627c>
   17604:	b	17608 <__assert_fail@plt+0x61f8>
   17608:	ldr	r0, [pc, #1048]	; 17a28 <__assert_fail@plt+0x6618>
   1760c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17610:	ldr	r2, [fp, #8]
   17614:	sdiv	r0, r0, r2
   17618:	cmp	r1, r0
   1761c:	blt	17788 <__assert_fail@plt+0x6378>
   17620:	b	1779c <__assert_fail@plt+0x638c>
   17624:	b	17628 <__assert_fail@plt+0x6218>
   17628:	ldr	r0, [pc, #1180]	; 17acc <__assert_fail@plt+0x66bc>
   1762c:	ldr	r1, [fp, #8]
   17630:	cmp	r1, r0
   17634:	blt	1764c <__assert_fail@plt+0x623c>
   17638:	b	17658 <__assert_fail@plt+0x6248>
   1763c:	ldr	r0, [fp, #8]
   17640:	movw	r1, #0
   17644:	cmp	r1, r0
   17648:	bge	17658 <__assert_fail@plt+0x6248>
   1764c:	movw	r0, #0
   17650:	str	r0, [fp, #-60]	; 0xffffffc4
   17654:	b	17670 <__assert_fail@plt+0x6260>
   17658:	ldr	r0, [pc, #968]	; 17a28 <__assert_fail@plt+0x6618>
   1765c:	ldr	r1, [fp, #8]
   17660:	movw	r2, #0
   17664:	sub	r1, r2, r1
   17668:	sdiv	r0, r0, r1
   1766c:	str	r0, [fp, #-60]	; 0xffffffc4
   17670:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17674:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17678:	mvn	r2, #0
   1767c:	sub	r1, r2, r1
   17680:	cmp	r0, r1
   17684:	ble	17788 <__assert_fail@plt+0x6378>
   17688:	b	1779c <__assert_fail@plt+0x638c>
   1768c:	ldr	r0, [fp, #8]
   17690:	cmn	r0, #1
   17694:	bne	176dc <__assert_fail@plt+0x62cc>
   17698:	b	1769c <__assert_fail@plt+0x628c>
   1769c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176a0:	add	r0, r0, #-2147483648	; 0x80000000
   176a4:	movw	r1, #0
   176a8:	cmp	r1, r0
   176ac:	blt	17788 <__assert_fail@plt+0x6378>
   176b0:	b	1779c <__assert_fail@plt+0x638c>
   176b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   176b8:	movw	r1, #0
   176bc:	cmp	r1, r0
   176c0:	bge	1779c <__assert_fail@plt+0x638c>
   176c4:	ldr	r0, [pc, #860]	; 17a28 <__assert_fail@plt+0x6618>
   176c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176cc:	sub	r1, r1, #1
   176d0:	cmp	r0, r1
   176d4:	blt	17788 <__assert_fail@plt+0x6378>
   176d8:	b	1779c <__assert_fail@plt+0x638c>
   176dc:	ldr	r0, [pc, #3144]	; 1832c <__assert_fail@plt+0x6f1c>
   176e0:	ldr	r1, [fp, #8]
   176e4:	sdiv	r0, r0, r1
   176e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176ec:	cmp	r0, r1
   176f0:	blt	17788 <__assert_fail@plt+0x6378>
   176f4:	b	1779c <__assert_fail@plt+0x638c>
   176f8:	ldr	r0, [fp, #8]
   176fc:	cmp	r0, #0
   17700:	bne	17708 <__assert_fail@plt+0x62f8>
   17704:	b	1779c <__assert_fail@plt+0x638c>
   17708:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1770c:	cmp	r0, #0
   17710:	bge	17770 <__assert_fail@plt+0x6360>
   17714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17718:	cmn	r0, #1
   1771c:	bne	17754 <__assert_fail@plt+0x6344>
   17720:	b	17724 <__assert_fail@plt+0x6314>
   17724:	ldr	r0, [fp, #8]
   17728:	add	r0, r0, #-2147483648	; 0x80000000
   1772c:	movw	r1, #0
   17730:	cmp	r1, r0
   17734:	blt	17788 <__assert_fail@plt+0x6378>
   17738:	b	1779c <__assert_fail@plt+0x638c>
   1773c:	ldr	r0, [pc, #740]	; 17a28 <__assert_fail@plt+0x6618>
   17740:	ldr	r1, [fp, #8]
   17744:	sub	r1, r1, #1
   17748:	cmp	r0, r1
   1774c:	blt	17788 <__assert_fail@plt+0x6378>
   17750:	b	1779c <__assert_fail@plt+0x638c>
   17754:	ldr	r0, [pc, #3024]	; 1832c <__assert_fail@plt+0x6f1c>
   17758:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1775c:	sdiv	r0, r0, r1
   17760:	ldr	r1, [fp, #8]
   17764:	cmp	r0, r1
   17768:	blt	17788 <__assert_fail@plt+0x6378>
   1776c:	b	1779c <__assert_fail@plt+0x638c>
   17770:	ldr	r0, [pc, #688]	; 17a28 <__assert_fail@plt+0x6618>
   17774:	ldr	r1, [fp, #8]
   17778:	sdiv	r0, r0, r1
   1777c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17780:	cmp	r0, r1
   17784:	bge	1779c <__assert_fail@plt+0x638c>
   17788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1778c:	ldr	r1, [fp, #8]
   17790:	mul	r0, r0, r1
   17794:	str	r0, [fp, #-28]	; 0xffffffe4
   17798:	b	17e2c <__assert_fail@plt+0x6a1c>
   1779c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177a0:	ldr	r1, [fp, #8]
   177a4:	mul	r0, r0, r1
   177a8:	str	r0, [fp, #-28]	; 0xffffffe4
   177ac:	b	17e38 <__assert_fail@plt+0x6a28>
   177b0:	ldr	r0, [fp, #8]
   177b4:	cmp	r0, #0
   177b8:	bge	178c8 <__assert_fail@plt+0x64b8>
   177bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177c0:	cmp	r0, #0
   177c4:	bge	17850 <__assert_fail@plt+0x6440>
   177c8:	b	177e8 <__assert_fail@plt+0x63d8>
   177cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177d0:	ldr	r1, [fp, #8]
   177d4:	mvn	r2, #0
   177d8:	udiv	r1, r2, r1
   177dc:	cmp	r0, r1
   177e0:	bcc	17964 <__assert_fail@plt+0x6554>
   177e4:	b	17978 <__assert_fail@plt+0x6568>
   177e8:	b	177ec <__assert_fail@plt+0x63dc>
   177ec:	ldr	r0, [pc, #728]	; 17acc <__assert_fail@plt+0x66bc>
   177f0:	ldr	r1, [fp, #8]
   177f4:	cmp	r1, r0
   177f8:	blt	17810 <__assert_fail@plt+0x6400>
   177fc:	b	1781c <__assert_fail@plt+0x640c>
   17800:	ldr	r0, [fp, #8]
   17804:	movw	r1, #0
   17808:	cmp	r1, r0
   1780c:	bge	1781c <__assert_fail@plt+0x640c>
   17810:	movw	r0, #1
   17814:	str	r0, [fp, #-64]	; 0xffffffc0
   17818:	b	17834 <__assert_fail@plt+0x6424>
   1781c:	ldr	r0, [fp, #8]
   17820:	movw	r1, #0
   17824:	sub	r0, r1, r0
   17828:	mvn	r1, #0
   1782c:	udiv	r0, r1, r0
   17830:	str	r0, [fp, #-64]	; 0xffffffc0
   17834:	ldr	r0, [fp, #-64]	; 0xffffffc0
   17838:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1783c:	mvn	r2, #0
   17840:	sub	r1, r2, r1
   17844:	cmp	r0, r1
   17848:	bls	17964 <__assert_fail@plt+0x6554>
   1784c:	b	17978 <__assert_fail@plt+0x6568>
   17850:	b	17854 <__assert_fail@plt+0x6444>
   17854:	b	178ac <__assert_fail@plt+0x649c>
   17858:	b	178ac <__assert_fail@plt+0x649c>
   1785c:	ldr	r0, [fp, #8]
   17860:	cmn	r0, #1
   17864:	bne	178ac <__assert_fail@plt+0x649c>
   17868:	b	1786c <__assert_fail@plt+0x645c>
   1786c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17870:	add	r0, r0, #0
   17874:	movw	r1, #0
   17878:	cmp	r1, r0
   1787c:	blt	17964 <__assert_fail@plt+0x6554>
   17880:	b	17978 <__assert_fail@plt+0x6568>
   17884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17888:	movw	r1, #0
   1788c:	cmp	r1, r0
   17890:	bge	17978 <__assert_fail@plt+0x6568>
   17894:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17898:	sub	r0, r0, #1
   1789c:	mvn	r1, #0
   178a0:	cmp	r1, r0
   178a4:	blt	17964 <__assert_fail@plt+0x6554>
   178a8:	b	17978 <__assert_fail@plt+0x6568>
   178ac:	ldr	r0, [fp, #8]
   178b0:	movw	r1, #0
   178b4:	sdiv	r0, r1, r0
   178b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178bc:	cmp	r0, r1
   178c0:	blt	17964 <__assert_fail@plt+0x6554>
   178c4:	b	17978 <__assert_fail@plt+0x6568>
   178c8:	ldr	r0, [fp, #8]
   178cc:	cmp	r0, #0
   178d0:	bne	178d8 <__assert_fail@plt+0x64c8>
   178d4:	b	17978 <__assert_fail@plt+0x6568>
   178d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178dc:	cmp	r0, #0
   178e0:	bge	1794c <__assert_fail@plt+0x653c>
   178e4:	b	178e8 <__assert_fail@plt+0x64d8>
   178e8:	b	17930 <__assert_fail@plt+0x6520>
   178ec:	b	17930 <__assert_fail@plt+0x6520>
   178f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178f4:	cmn	r0, #1
   178f8:	bne	17930 <__assert_fail@plt+0x6520>
   178fc:	b	17900 <__assert_fail@plt+0x64f0>
   17900:	ldr	r0, [fp, #8]
   17904:	add	r0, r0, #0
   17908:	movw	r1, #0
   1790c:	cmp	r1, r0
   17910:	blt	17964 <__assert_fail@plt+0x6554>
   17914:	b	17978 <__assert_fail@plt+0x6568>
   17918:	ldr	r0, [fp, #8]
   1791c:	sub	r0, r0, #1
   17920:	mvn	r1, #0
   17924:	cmp	r1, r0
   17928:	blt	17964 <__assert_fail@plt+0x6554>
   1792c:	b	17978 <__assert_fail@plt+0x6568>
   17930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17934:	movw	r1, #0
   17938:	sdiv	r0, r1, r0
   1793c:	ldr	r1, [fp, #8]
   17940:	cmp	r0, r1
   17944:	blt	17964 <__assert_fail@plt+0x6554>
   17948:	b	17978 <__assert_fail@plt+0x6568>
   1794c:	ldr	r0, [fp, #8]
   17950:	mvn	r1, #0
   17954:	udiv	r0, r1, r0
   17958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1795c:	cmp	r0, r1
   17960:	bcs	17978 <__assert_fail@plt+0x6568>
   17964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17968:	ldr	r1, [fp, #8]
   1796c:	mul	r0, r0, r1
   17970:	str	r0, [fp, #-28]	; 0xffffffe4
   17974:	b	17e2c <__assert_fail@plt+0x6a1c>
   17978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1797c:	ldr	r1, [fp, #8]
   17980:	mul	r0, r0, r1
   17984:	str	r0, [fp, #-28]	; 0xffffffe4
   17988:	b	17e38 <__assert_fail@plt+0x6a28>
   1798c:	b	17990 <__assert_fail@plt+0x6580>
   17990:	ldr	r0, [fp, #8]
   17994:	cmp	r0, #0
   17998:	bge	17b08 <__assert_fail@plt+0x66f8>
   1799c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179a0:	cmp	r0, #0
   179a4:	bge	17a80 <__assert_fail@plt+0x6670>
   179a8:	b	179ac <__assert_fail@plt+0x659c>
   179ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179b0:	ldr	r1, [fp, #8]
   179b4:	asr	r3, r1, #31
   179b8:	mvn	r2, #0
   179bc:	mvn	ip, #-2147483648	; 0x80000000
   179c0:	str	r0, [fp, #-68]	; 0xffffffbc
   179c4:	mov	r0, r2
   179c8:	str	r1, [fp, #-72]	; 0xffffffb8
   179cc:	mov	r1, ip
   179d0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   179d4:	bl	1dc34 <__assert_fail@plt+0xc824>
   179d8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   179dc:	subs	r0, r2, r0
   179e0:	rscs	r1, r1, r2, asr #31
   179e4:	blt	17bd0 <__assert_fail@plt+0x67c0>
   179e8:	b	17be4 <__assert_fail@plt+0x67d4>
   179ec:	b	179f0 <__assert_fail@plt+0x65e0>
   179f0:	ldr	r0, [pc, #212]	; 17acc <__assert_fail@plt+0x66bc>
   179f4:	ldr	r1, [fp, #8]
   179f8:	cmp	r1, r0
   179fc:	blt	17a14 <__assert_fail@plt+0x6604>
   17a00:	b	17a2c <__assert_fail@plt+0x661c>
   17a04:	ldr	r0, [fp, #8]
   17a08:	movw	r1, #0
   17a0c:	cmp	r1, r0
   17a10:	bge	17a2c <__assert_fail@plt+0x661c>
   17a14:	mov	r0, #0
   17a18:	mvn	r1, #0
   17a1c:	str	r1, [fp, #-76]	; 0xffffffb4
   17a20:	str	r0, [fp, #-80]	; 0xffffffb0
   17a24:	b	17a60 <__assert_fail@plt+0x6650>
   17a28:	svcvc	0x00ffffff
   17a2c:	ldr	r0, [fp, #8]
   17a30:	rsb	r0, r0, #0
   17a34:	asr	r3, r0, #31
   17a38:	mvn	r1, #0
   17a3c:	mvn	r2, #-2147483648	; 0x80000000
   17a40:	str	r0, [fp, #-84]	; 0xffffffac
   17a44:	mov	r0, r1
   17a48:	mov	r1, r2
   17a4c:	ldr	r2, [fp, #-84]	; 0xffffffac
   17a50:	bl	1dc34 <__assert_fail@plt+0xc824>
   17a54:	str	r0, [fp, #-76]	; 0xffffffb4
   17a58:	str	r1, [fp, #-80]	; 0xffffffb0
   17a5c:	b	17a60 <__assert_fail@plt+0x6650>
   17a60:	ldr	r0, [fp, #-80]	; 0xffffffb0
   17a64:	ldr	r1, [fp, #-76]	; 0xffffffb4
   17a68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a6c:	mvn	r2, r2
   17a70:	subs	r1, r2, r1
   17a74:	rscs	r0, r0, r2, asr #31
   17a78:	bge	17bd0 <__assert_fail@plt+0x67c0>
   17a7c:	b	17be4 <__assert_fail@plt+0x67d4>
   17a80:	ldr	r0, [fp, #8]
   17a84:	cmn	r0, #1
   17a88:	bne	17ad0 <__assert_fail@plt+0x66c0>
   17a8c:	b	17a90 <__assert_fail@plt+0x6680>
   17a90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a94:	mov	r1, #-2147483648	; 0x80000000
   17a98:	add	r1, r1, r0, asr #31
   17a9c:	rsbs	r0, r0, #0
   17aa0:	rscs	r1, r1, #0
   17aa4:	blt	17bd0 <__assert_fail@plt+0x67c0>
   17aa8:	b	17be4 <__assert_fail@plt+0x67d4>
   17aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ab0:	movw	r1, #0
   17ab4:	cmp	r1, r0
   17ab8:	bge	17be4 <__assert_fail@plt+0x67d4>
   17abc:	mov	r0, #0
   17ac0:	cmp	r0, #0
   17ac4:	bne	17bd0 <__assert_fail@plt+0x67c0>
   17ac8:	b	17be4 <__assert_fail@plt+0x67d4>
   17acc:	andhi	r0, r0, r1
   17ad0:	ldr	r0, [fp, #8]
   17ad4:	asr	r3, r0, #31
   17ad8:	mov	r1, #0
   17adc:	mov	r2, #-2147483648	; 0x80000000
   17ae0:	str	r0, [fp, #-88]	; 0xffffffa8
   17ae4:	mov	r0, r1
   17ae8:	mov	r1, r2
   17aec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17af0:	bl	1dc34 <__assert_fail@plt+0xc824>
   17af4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17af8:	subs	r0, r0, r2
   17afc:	sbcs	r1, r1, r2, asr #31
   17b00:	blt	17bd0 <__assert_fail@plt+0x67c0>
   17b04:	b	17be4 <__assert_fail@plt+0x67d4>
   17b08:	ldr	r0, [fp, #8]
   17b0c:	cmp	r0, #0
   17b10:	bne	17b18 <__assert_fail@plt+0x6708>
   17b14:	b	17be4 <__assert_fail@plt+0x67d4>
   17b18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b1c:	cmp	r0, #0
   17b20:	bge	17b98 <__assert_fail@plt+0x6788>
   17b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b28:	cmn	r0, #1
   17b2c:	bne	17b60 <__assert_fail@plt+0x6750>
   17b30:	b	17b34 <__assert_fail@plt+0x6724>
   17b34:	ldr	r0, [fp, #8]
   17b38:	mov	r1, #-2147483648	; 0x80000000
   17b3c:	add	r1, r1, r0, asr #31
   17b40:	rsbs	r0, r0, #0
   17b44:	rscs	r1, r1, #0
   17b48:	blt	17bd0 <__assert_fail@plt+0x67c0>
   17b4c:	b	17be4 <__assert_fail@plt+0x67d4>
   17b50:	mov	r0, #0
   17b54:	cmp	r0, #0
   17b58:	bne	17bd0 <__assert_fail@plt+0x67c0>
   17b5c:	b	17be4 <__assert_fail@plt+0x67d4>
   17b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b64:	asr	r3, r0, #31
   17b68:	mov	r1, #0
   17b6c:	mov	r2, #-2147483648	; 0x80000000
   17b70:	str	r0, [fp, #-92]	; 0xffffffa4
   17b74:	mov	r0, r1
   17b78:	mov	r1, r2
   17b7c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   17b80:	bl	1dc34 <__assert_fail@plt+0xc824>
   17b84:	ldr	r2, [fp, #8]
   17b88:	subs	r0, r0, r2
   17b8c:	sbcs	r1, r1, r2, asr #31
   17b90:	blt	17bd0 <__assert_fail@plt+0x67c0>
   17b94:	b	17be4 <__assert_fail@plt+0x67d4>
   17b98:	ldr	r0, [fp, #8]
   17b9c:	asr	r3, r0, #31
   17ba0:	mvn	r1, #0
   17ba4:	mvn	r2, #-2147483648	; 0x80000000
   17ba8:	str	r0, [fp, #-96]	; 0xffffffa0
   17bac:	mov	r0, r1
   17bb0:	mov	r1, r2
   17bb4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   17bb8:	bl	1dc34 <__assert_fail@plt+0xc824>
   17bbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17bc0:	subs	r0, r0, r2
   17bc4:	sbcs	r1, r1, r2, asr #31
   17bc8:	bge	17be4 <__assert_fail@plt+0x67d4>
   17bcc:	b	17bd0 <__assert_fail@plt+0x67c0>
   17bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bd4:	ldr	r1, [fp, #8]
   17bd8:	mul	r0, r0, r1
   17bdc:	str	r0, [fp, #-28]	; 0xffffffe4
   17be0:	b	17e2c <__assert_fail@plt+0x6a1c>
   17be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17be8:	ldr	r1, [fp, #8]
   17bec:	mul	r0, r0, r1
   17bf0:	str	r0, [fp, #-28]	; 0xffffffe4
   17bf4:	b	17e38 <__assert_fail@plt+0x6a28>
   17bf8:	ldr	r0, [fp, #8]
   17bfc:	cmp	r0, #0
   17c00:	bge	17d50 <__assert_fail@plt+0x6940>
   17c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c08:	cmp	r0, #0
   17c0c:	bge	17cd8 <__assert_fail@plt+0x68c8>
   17c10:	b	17c50 <__assert_fail@plt+0x6840>
   17c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c18:	ldr	r1, [fp, #8]
   17c1c:	asr	r3, r1, #31
   17c20:	mvn	r2, #0
   17c24:	str	r0, [fp, #-100]	; 0xffffff9c
   17c28:	mov	r0, r2
   17c2c:	str	r1, [fp, #-104]	; 0xffffff98
   17c30:	mov	r1, r2
   17c34:	ldr	r2, [fp, #-104]	; 0xffffff98
   17c38:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   17c3c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17c40:	subs	r0, r2, r0
   17c44:	rscs	r1, r1, r2, asr #31
   17c48:	bcc	17e04 <__assert_fail@plt+0x69f4>
   17c4c:	b	17e18 <__assert_fail@plt+0x6a08>
   17c50:	b	17c54 <__assert_fail@plt+0x6844>
   17c54:	ldr	r0, [pc, #-400]	; 17acc <__assert_fail@plt+0x66bc>
   17c58:	ldr	r1, [fp, #8]
   17c5c:	cmp	r1, r0
   17c60:	blt	17c78 <__assert_fail@plt+0x6868>
   17c64:	b	17c8c <__assert_fail@plt+0x687c>
   17c68:	ldr	r0, [fp, #8]
   17c6c:	movw	r1, #0
   17c70:	cmp	r1, r0
   17c74:	bge	17c8c <__assert_fail@plt+0x687c>
   17c78:	mov	r0, #1
   17c7c:	mvn	r1, #0
   17c80:	str	r1, [sp, #108]	; 0x6c
   17c84:	str	r0, [sp, #104]	; 0x68
   17c88:	b	17cb8 <__assert_fail@plt+0x68a8>
   17c8c:	ldr	r0, [fp, #8]
   17c90:	rsb	r0, r0, #0
   17c94:	asr	r3, r0, #31
   17c98:	mvn	r1, #0
   17c9c:	str	r0, [sp, #100]	; 0x64
   17ca0:	mov	r0, r1
   17ca4:	ldr	r2, [sp, #100]	; 0x64
   17ca8:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   17cac:	str	r0, [sp, #108]	; 0x6c
   17cb0:	str	r1, [sp, #104]	; 0x68
   17cb4:	b	17cb8 <__assert_fail@plt+0x68a8>
   17cb8:	ldr	r0, [sp, #104]	; 0x68
   17cbc:	ldr	r1, [sp, #108]	; 0x6c
   17cc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17cc4:	mvn	r2, r2
   17cc8:	subs	r1, r2, r1
   17ccc:	rscs	r0, r0, r2, asr #31
   17cd0:	bcs	17e04 <__assert_fail@plt+0x69f4>
   17cd4:	b	17e18 <__assert_fail@plt+0x6a08>
   17cd8:	b	17cdc <__assert_fail@plt+0x68cc>
   17cdc:	b	17d34 <__assert_fail@plt+0x6924>
   17ce0:	b	17d34 <__assert_fail@plt+0x6924>
   17ce4:	ldr	r0, [fp, #8]
   17ce8:	cmn	r0, #1
   17cec:	bne	17d34 <__assert_fail@plt+0x6924>
   17cf0:	b	17cf4 <__assert_fail@plt+0x68e4>
   17cf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf8:	add	r0, r0, #0
   17cfc:	movw	r1, #0
   17d00:	cmp	r1, r0
   17d04:	blt	17e04 <__assert_fail@plt+0x69f4>
   17d08:	b	17e18 <__assert_fail@plt+0x6a08>
   17d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d10:	movw	r1, #0
   17d14:	cmp	r1, r0
   17d18:	bge	17e18 <__assert_fail@plt+0x6a08>
   17d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d20:	sub	r0, r0, #1
   17d24:	mvn	r1, #0
   17d28:	cmp	r1, r0
   17d2c:	blt	17e04 <__assert_fail@plt+0x69f4>
   17d30:	b	17e18 <__assert_fail@plt+0x6a08>
   17d34:	ldr	r0, [fp, #8]
   17d38:	movw	r1, #0
   17d3c:	sdiv	r0, r1, r0
   17d40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d44:	cmp	r0, r1
   17d48:	blt	17e04 <__assert_fail@plt+0x69f4>
   17d4c:	b	17e18 <__assert_fail@plt+0x6a08>
   17d50:	ldr	r0, [fp, #8]
   17d54:	cmp	r0, #0
   17d58:	bne	17d60 <__assert_fail@plt+0x6950>
   17d5c:	b	17e18 <__assert_fail@plt+0x6a08>
   17d60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d64:	cmp	r0, #0
   17d68:	bge	17dd4 <__assert_fail@plt+0x69c4>
   17d6c:	b	17d70 <__assert_fail@plt+0x6960>
   17d70:	b	17db8 <__assert_fail@plt+0x69a8>
   17d74:	b	17db8 <__assert_fail@plt+0x69a8>
   17d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d7c:	cmn	r0, #1
   17d80:	bne	17db8 <__assert_fail@plt+0x69a8>
   17d84:	b	17d88 <__assert_fail@plt+0x6978>
   17d88:	ldr	r0, [fp, #8]
   17d8c:	add	r0, r0, #0
   17d90:	movw	r1, #0
   17d94:	cmp	r1, r0
   17d98:	blt	17e04 <__assert_fail@plt+0x69f4>
   17d9c:	b	17e18 <__assert_fail@plt+0x6a08>
   17da0:	ldr	r0, [fp, #8]
   17da4:	sub	r0, r0, #1
   17da8:	mvn	r1, #0
   17dac:	cmp	r1, r0
   17db0:	blt	17e04 <__assert_fail@plt+0x69f4>
   17db4:	b	17e18 <__assert_fail@plt+0x6a08>
   17db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dbc:	movw	r1, #0
   17dc0:	sdiv	r0, r1, r0
   17dc4:	ldr	r1, [fp, #8]
   17dc8:	cmp	r0, r1
   17dcc:	blt	17e04 <__assert_fail@plt+0x69f4>
   17dd0:	b	17e18 <__assert_fail@plt+0x6a08>
   17dd4:	ldr	r0, [fp, #8]
   17dd8:	asr	r3, r0, #31
   17ddc:	mvn	r1, #0
   17de0:	str	r0, [sp, #96]	; 0x60
   17de4:	mov	r0, r1
   17de8:	ldr	r2, [sp, #96]	; 0x60
   17dec:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   17df0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17df4:	subs	r0, r0, r2
   17df8:	sbcs	r1, r1, r2, asr #31
   17dfc:	bcs	17e18 <__assert_fail@plt+0x6a08>
   17e00:	b	17e04 <__assert_fail@plt+0x69f4>
   17e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e08:	ldr	r1, [fp, #8]
   17e0c:	mul	r0, r0, r1
   17e10:	str	r0, [fp, #-28]	; 0xffffffe4
   17e14:	b	17e2c <__assert_fail@plt+0x6a1c>
   17e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e1c:	ldr	r1, [fp, #8]
   17e20:	mul	r0, r0, r1
   17e24:	str	r0, [fp, #-28]	; 0xffffffe4
   17e28:	b	17e38 <__assert_fail@plt+0x6a28>
   17e2c:	ldr	r0, [pc, #-1036]	; 17a28 <__assert_fail@plt+0x6618>
   17e30:	str	r0, [sp, #92]	; 0x5c
   17e34:	b	17e58 <__assert_fail@plt+0x6a48>
   17e38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e3c:	cmp	r0, #64	; 0x40
   17e40:	movw	r0, #0
   17e44:	movlt	r0, #1
   17e48:	tst	r0, #1
   17e4c:	movw	r0, #64	; 0x40
   17e50:	moveq	r0, #0
   17e54:	str	r0, [sp, #92]	; 0x5c
   17e58:	ldr	r0, [sp, #92]	; 0x5c
   17e5c:	str	r0, [fp, #-32]	; 0xffffffe0
   17e60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e64:	cmp	r0, #0
   17e68:	beq	17e98 <__assert_fail@plt+0x6a88>
   17e6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e70:	ldr	r1, [fp, #8]
   17e74:	sdiv	r0, r0, r1
   17e78:	str	r0, [fp, #-24]	; 0xffffffe8
   17e7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e80:	mov	r1, r0
   17e84:	ldr	r2, [fp, #8]
   17e88:	sdiv	r3, r0, r2
   17e8c:	mls	r0, r3, r2, r0
   17e90:	sub	r0, r1, r0
   17e94:	str	r0, [fp, #-28]	; 0xffffffe4
   17e98:	ldr	r0, [fp, #-4]
   17e9c:	movw	r1, #0
   17ea0:	cmp	r0, r1
   17ea4:	bne	17eb4 <__assert_fail@plt+0x6aa4>
   17ea8:	ldr	r0, [fp, #-8]
   17eac:	movw	r1, #0
   17eb0:	str	r1, [r0]
   17eb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17eb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17ebc:	sub	r0, r0, r1
   17ec0:	ldr	r1, [fp, #-12]
   17ec4:	cmp	r0, r1
   17ec8:	bge	192b4 <__assert_fail@plt+0x7ea4>
   17ecc:	ldr	r0, [fp, #-20]	; 0xffffffec
   17ed0:	ldr	r1, [fp, #-12]
   17ed4:	add	r1, r0, r1
   17ed8:	mov	r2, #1
   17edc:	cmp	r1, r0
   17ee0:	movwvc	r2, #0
   17ee4:	str	r1, [fp, #-24]	; 0xffffffe8
   17ee8:	tst	r2, #1
   17eec:	bne	192b0 <__assert_fail@plt+0x7ea0>
   17ef0:	ldr	r0, [fp, #-16]
   17ef4:	movw	r1, #0
   17ef8:	cmp	r1, r0
   17efc:	bgt	17f10 <__assert_fail@plt+0x6b00>
   17f00:	ldr	r0, [fp, #-16]
   17f04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f08:	cmp	r0, r1
   17f0c:	blt	192b0 <__assert_fail@plt+0x7ea0>
   17f10:	b	182ec <__assert_fail@plt+0x6edc>
   17f14:			; <UNDEFINED> instruction: 0xffff8000
   17f18:	b	17f1c <__assert_fail@plt+0x6b0c>
   17f1c:	ldr	r0, [fp, #8]
   17f20:	cmp	r0, #0
   17f24:	bge	18038 <__assert_fail@plt+0x6c28>
   17f28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f2c:	cmp	r0, #0
   17f30:	bge	17fbc <__assert_fail@plt+0x6bac>
   17f34:	b	17f38 <__assert_fail@plt+0x6b28>
   17f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f3c:	ldr	r1, [fp, #8]
   17f40:	movw	r2, #127	; 0x7f
   17f44:	sdiv	r1, r2, r1
   17f48:	cmp	r0, r1
   17f4c:	blt	180d8 <__assert_fail@plt+0x6cc8>
   17f50:	b	180f0 <__assert_fail@plt+0x6ce0>
   17f54:	b	17f58 <__assert_fail@plt+0x6b48>
   17f58:	ldr	r0, [pc, #-1172]	; 17acc <__assert_fail@plt+0x66bc>
   17f5c:	ldr	r1, [fp, #8]
   17f60:	cmp	r1, r0
   17f64:	blt	17f7c <__assert_fail@plt+0x6b6c>
   17f68:	b	17f88 <__assert_fail@plt+0x6b78>
   17f6c:	ldr	r0, [fp, #8]
   17f70:	movw	r1, #0
   17f74:	cmp	r1, r0
   17f78:	bge	17f88 <__assert_fail@plt+0x6b78>
   17f7c:	movw	r0, #0
   17f80:	str	r0, [sp, #88]	; 0x58
   17f84:	b	17fa0 <__assert_fail@plt+0x6b90>
   17f88:	ldr	r0, [fp, #8]
   17f8c:	movw	r1, #0
   17f90:	sub	r0, r1, r0
   17f94:	movw	r1, #127	; 0x7f
   17f98:	sdiv	r0, r1, r0
   17f9c:	str	r0, [sp, #88]	; 0x58
   17fa0:	ldr	r0, [sp, #88]	; 0x58
   17fa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fa8:	mvn	r2, #0
   17fac:	sub	r1, r2, r1
   17fb0:	cmp	r0, r1
   17fb4:	ble	180d8 <__assert_fail@plt+0x6cc8>
   17fb8:	b	180f0 <__assert_fail@plt+0x6ce0>
   17fbc:	b	17fc0 <__assert_fail@plt+0x6bb0>
   17fc0:	b	1801c <__assert_fail@plt+0x6c0c>
   17fc4:	b	1801c <__assert_fail@plt+0x6c0c>
   17fc8:	ldr	r0, [fp, #8]
   17fcc:	cmn	r0, #1
   17fd0:	bne	1801c <__assert_fail@plt+0x6c0c>
   17fd4:	b	17fd8 <__assert_fail@plt+0x6bc8>
   17fd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fdc:	mvn	r1, #127	; 0x7f
   17fe0:	add	r0, r0, r1
   17fe4:	movw	r1, #0
   17fe8:	cmp	r1, r0
   17fec:	blt	180d8 <__assert_fail@plt+0x6cc8>
   17ff0:	b	180f0 <__assert_fail@plt+0x6ce0>
   17ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ff8:	movw	r1, #0
   17ffc:	cmp	r1, r0
   18000:	bge	180f0 <__assert_fail@plt+0x6ce0>
   18004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18008:	sub	r0, r0, #1
   1800c:	movw	r1, #127	; 0x7f
   18010:	cmp	r1, r0
   18014:	blt	180d8 <__assert_fail@plt+0x6cc8>
   18018:	b	180f0 <__assert_fail@plt+0x6ce0>
   1801c:	ldr	r0, [fp, #8]
   18020:	mvn	r1, #127	; 0x7f
   18024:	sdiv	r0, r1, r0
   18028:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1802c:	cmp	r0, r1
   18030:	blt	180d8 <__assert_fail@plt+0x6cc8>
   18034:	b	180f0 <__assert_fail@plt+0x6ce0>
   18038:	ldr	r0, [fp, #8]
   1803c:	cmp	r0, #0
   18040:	bne	18048 <__assert_fail@plt+0x6c38>
   18044:	b	180f0 <__assert_fail@plt+0x6ce0>
   18048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1804c:	cmp	r0, #0
   18050:	bge	180c0 <__assert_fail@plt+0x6cb0>
   18054:	b	18058 <__assert_fail@plt+0x6c48>
   18058:	b	180a4 <__assert_fail@plt+0x6c94>
   1805c:	b	180a4 <__assert_fail@plt+0x6c94>
   18060:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18064:	cmn	r0, #1
   18068:	bne	180a4 <__assert_fail@plt+0x6c94>
   1806c:	b	18070 <__assert_fail@plt+0x6c60>
   18070:	ldr	r0, [fp, #8]
   18074:	mvn	r1, #127	; 0x7f
   18078:	add	r0, r0, r1
   1807c:	movw	r1, #0
   18080:	cmp	r1, r0
   18084:	blt	180d8 <__assert_fail@plt+0x6cc8>
   18088:	b	180f0 <__assert_fail@plt+0x6ce0>
   1808c:	ldr	r0, [fp, #8]
   18090:	sub	r0, r0, #1
   18094:	movw	r1, #127	; 0x7f
   18098:	cmp	r1, r0
   1809c:	blt	180d8 <__assert_fail@plt+0x6cc8>
   180a0:	b	180f0 <__assert_fail@plt+0x6ce0>
   180a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180a8:	mvn	r1, #127	; 0x7f
   180ac:	sdiv	r0, r1, r0
   180b0:	ldr	r1, [fp, #8]
   180b4:	cmp	r0, r1
   180b8:	blt	180d8 <__assert_fail@plt+0x6cc8>
   180bc:	b	180f0 <__assert_fail@plt+0x6ce0>
   180c0:	ldr	r0, [fp, #8]
   180c4:	movw	r1, #127	; 0x7f
   180c8:	sdiv	r0, r1, r0
   180cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180d0:	cmp	r0, r1
   180d4:	bge	180f0 <__assert_fail@plt+0x6ce0>
   180d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180dc:	ldr	r1, [fp, #8]
   180e0:	mul	r0, r0, r1
   180e4:	sxtb	r0, r0
   180e8:	str	r0, [fp, #-28]	; 0xffffffe4
   180ec:	b	192b0 <__assert_fail@plt+0x7ea0>
   180f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180f4:	ldr	r1, [fp, #8]
   180f8:	mul	r0, r0, r1
   180fc:	sxtb	r0, r0
   18100:	str	r0, [fp, #-28]	; 0xffffffe4
   18104:	b	192b4 <__assert_fail@plt+0x7ea4>
   18108:	ldr	r0, [fp, #8]
   1810c:	cmp	r0, #0
   18110:	bge	18220 <__assert_fail@plt+0x6e10>
   18114:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18118:	cmp	r0, #0
   1811c:	bge	181a8 <__assert_fail@plt+0x6d98>
   18120:	b	18124 <__assert_fail@plt+0x6d14>
   18124:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18128:	ldr	r1, [fp, #8]
   1812c:	movw	r2, #255	; 0xff
   18130:	sdiv	r1, r2, r1
   18134:	cmp	r0, r1
   18138:	blt	182bc <__assert_fail@plt+0x6eac>
   1813c:	b	182d4 <__assert_fail@plt+0x6ec4>
   18140:	b	18144 <__assert_fail@plt+0x6d34>
   18144:	ldr	r0, [pc, #-1664]	; 17acc <__assert_fail@plt+0x66bc>
   18148:	ldr	r1, [fp, #8]
   1814c:	cmp	r1, r0
   18150:	blt	18168 <__assert_fail@plt+0x6d58>
   18154:	b	18174 <__assert_fail@plt+0x6d64>
   18158:	ldr	r0, [fp, #8]
   1815c:	movw	r1, #0
   18160:	cmp	r1, r0
   18164:	bge	18174 <__assert_fail@plt+0x6d64>
   18168:	movw	r0, #0
   1816c:	str	r0, [sp, #84]	; 0x54
   18170:	b	1818c <__assert_fail@plt+0x6d7c>
   18174:	ldr	r0, [fp, #8]
   18178:	movw	r1, #0
   1817c:	sub	r0, r1, r0
   18180:	movw	r1, #255	; 0xff
   18184:	sdiv	r0, r1, r0
   18188:	str	r0, [sp, #84]	; 0x54
   1818c:	ldr	r0, [sp, #84]	; 0x54
   18190:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18194:	mvn	r2, #0
   18198:	sub	r1, r2, r1
   1819c:	cmp	r0, r1
   181a0:	ble	182bc <__assert_fail@plt+0x6eac>
   181a4:	b	182d4 <__assert_fail@plt+0x6ec4>
   181a8:	b	181ac <__assert_fail@plt+0x6d9c>
   181ac:	b	18204 <__assert_fail@plt+0x6df4>
   181b0:	b	18204 <__assert_fail@plt+0x6df4>
   181b4:	ldr	r0, [fp, #8]
   181b8:	cmn	r0, #1
   181bc:	bne	18204 <__assert_fail@plt+0x6df4>
   181c0:	b	181c4 <__assert_fail@plt+0x6db4>
   181c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181c8:	add	r0, r0, #0
   181cc:	movw	r1, #0
   181d0:	cmp	r1, r0
   181d4:	blt	182bc <__assert_fail@plt+0x6eac>
   181d8:	b	182d4 <__assert_fail@plt+0x6ec4>
   181dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181e0:	movw	r1, #0
   181e4:	cmp	r1, r0
   181e8:	bge	182d4 <__assert_fail@plt+0x6ec4>
   181ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181f0:	sub	r0, r0, #1
   181f4:	mvn	r1, #0
   181f8:	cmp	r1, r0
   181fc:	blt	182bc <__assert_fail@plt+0x6eac>
   18200:	b	182d4 <__assert_fail@plt+0x6ec4>
   18204:	ldr	r0, [fp, #8]
   18208:	movw	r1, #0
   1820c:	sdiv	r0, r1, r0
   18210:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18214:	cmp	r0, r1
   18218:	blt	182bc <__assert_fail@plt+0x6eac>
   1821c:	b	182d4 <__assert_fail@plt+0x6ec4>
   18220:	ldr	r0, [fp, #8]
   18224:	cmp	r0, #0
   18228:	bne	18230 <__assert_fail@plt+0x6e20>
   1822c:	b	182d4 <__assert_fail@plt+0x6ec4>
   18230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18234:	cmp	r0, #0
   18238:	bge	182a4 <__assert_fail@plt+0x6e94>
   1823c:	b	18240 <__assert_fail@plt+0x6e30>
   18240:	b	18288 <__assert_fail@plt+0x6e78>
   18244:	b	18288 <__assert_fail@plt+0x6e78>
   18248:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1824c:	cmn	r0, #1
   18250:	bne	18288 <__assert_fail@plt+0x6e78>
   18254:	b	18258 <__assert_fail@plt+0x6e48>
   18258:	ldr	r0, [fp, #8]
   1825c:	add	r0, r0, #0
   18260:	movw	r1, #0
   18264:	cmp	r1, r0
   18268:	blt	182bc <__assert_fail@plt+0x6eac>
   1826c:	b	182d4 <__assert_fail@plt+0x6ec4>
   18270:	ldr	r0, [fp, #8]
   18274:	sub	r0, r0, #1
   18278:	mvn	r1, #0
   1827c:	cmp	r1, r0
   18280:	blt	182bc <__assert_fail@plt+0x6eac>
   18284:	b	182d4 <__assert_fail@plt+0x6ec4>
   18288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1828c:	movw	r1, #0
   18290:	sdiv	r0, r1, r0
   18294:	ldr	r1, [fp, #8]
   18298:	cmp	r0, r1
   1829c:	blt	182bc <__assert_fail@plt+0x6eac>
   182a0:	b	182d4 <__assert_fail@plt+0x6ec4>
   182a4:	ldr	r0, [fp, #8]
   182a8:	movw	r1, #255	; 0xff
   182ac:	sdiv	r0, r1, r0
   182b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182b4:	cmp	r0, r1
   182b8:	bge	182d4 <__assert_fail@plt+0x6ec4>
   182bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182c0:	ldr	r1, [fp, #8]
   182c4:	mul	r0, r0, r1
   182c8:	and	r0, r0, #255	; 0xff
   182cc:	str	r0, [fp, #-28]	; 0xffffffe4
   182d0:	b	192b0 <__assert_fail@plt+0x7ea0>
   182d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182d8:	ldr	r1, [fp, #8]
   182dc:	mul	r0, r0, r1
   182e0:	and	r0, r0, #255	; 0xff
   182e4:	str	r0, [fp, #-28]	; 0xffffffe4
   182e8:	b	192b4 <__assert_fail@plt+0x7ea4>
   182ec:	b	186c8 <__assert_fail@plt+0x72b8>
   182f0:	b	182f4 <__assert_fail@plt+0x6ee4>
   182f4:	ldr	r0, [fp, #8]
   182f8:	cmp	r0, #0
   182fc:	bge	18414 <__assert_fail@plt+0x7004>
   18300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18304:	cmp	r0, #0
   18308:	bge	18398 <__assert_fail@plt+0x6f88>
   1830c:	b	18310 <__assert_fail@plt+0x6f00>
   18310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18314:	ldr	r1, [fp, #8]
   18318:	movw	r2, #32767	; 0x7fff
   1831c:	sdiv	r1, r2, r1
   18320:	cmp	r0, r1
   18324:	blt	184b4 <__assert_fail@plt+0x70a4>
   18328:	b	184cc <__assert_fail@plt+0x70bc>
   1832c:	andhi	r0, r0, r0
   18330:	b	18334 <__assert_fail@plt+0x6f24>
   18334:	ldr	r0, [pc, #4004]	; 192e0 <__assert_fail@plt+0x7ed0>
   18338:	ldr	r1, [fp, #8]
   1833c:	cmp	r1, r0
   18340:	blt	18358 <__assert_fail@plt+0x6f48>
   18344:	b	18364 <__assert_fail@plt+0x6f54>
   18348:	ldr	r0, [fp, #8]
   1834c:	movw	r1, #0
   18350:	cmp	r1, r0
   18354:	bge	18364 <__assert_fail@plt+0x6f54>
   18358:	movw	r0, #0
   1835c:	str	r0, [sp, #80]	; 0x50
   18360:	b	1837c <__assert_fail@plt+0x6f6c>
   18364:	ldr	r0, [fp, #8]
   18368:	movw	r1, #0
   1836c:	sub	r0, r1, r0
   18370:	movw	r1, #32767	; 0x7fff
   18374:	sdiv	r0, r1, r0
   18378:	str	r0, [sp, #80]	; 0x50
   1837c:	ldr	r0, [sp, #80]	; 0x50
   18380:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18384:	mvn	r2, #0
   18388:	sub	r1, r2, r1
   1838c:	cmp	r0, r1
   18390:	ble	184b4 <__assert_fail@plt+0x70a4>
   18394:	b	184cc <__assert_fail@plt+0x70bc>
   18398:	b	1839c <__assert_fail@plt+0x6f8c>
   1839c:	b	183f8 <__assert_fail@plt+0x6fe8>
   183a0:	b	183f8 <__assert_fail@plt+0x6fe8>
   183a4:	ldr	r0, [fp, #8]
   183a8:	cmn	r0, #1
   183ac:	bne	183f8 <__assert_fail@plt+0x6fe8>
   183b0:	b	183b4 <__assert_fail@plt+0x6fa4>
   183b4:	ldr	r0, [pc, #3884]	; 192e8 <__assert_fail@plt+0x7ed8>
   183b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183bc:	add	r0, r1, r0
   183c0:	movw	r1, #0
   183c4:	cmp	r1, r0
   183c8:	blt	184b4 <__assert_fail@plt+0x70a4>
   183cc:	b	184cc <__assert_fail@plt+0x70bc>
   183d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183d4:	movw	r1, #0
   183d8:	cmp	r1, r0
   183dc:	bge	184cc <__assert_fail@plt+0x70bc>
   183e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183e4:	sub	r0, r0, #1
   183e8:	movw	r1, #32767	; 0x7fff
   183ec:	cmp	r1, r0
   183f0:	blt	184b4 <__assert_fail@plt+0x70a4>
   183f4:	b	184cc <__assert_fail@plt+0x70bc>
   183f8:	ldr	r0, [pc, #3816]	; 192e8 <__assert_fail@plt+0x7ed8>
   183fc:	ldr	r1, [fp, #8]
   18400:	sdiv	r0, r0, r1
   18404:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18408:	cmp	r0, r1
   1840c:	blt	184b4 <__assert_fail@plt+0x70a4>
   18410:	b	184cc <__assert_fail@plt+0x70bc>
   18414:	ldr	r0, [fp, #8]
   18418:	cmp	r0, #0
   1841c:	bne	18424 <__assert_fail@plt+0x7014>
   18420:	b	184cc <__assert_fail@plt+0x70bc>
   18424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18428:	cmp	r0, #0
   1842c:	bge	1849c <__assert_fail@plt+0x708c>
   18430:	b	18434 <__assert_fail@plt+0x7024>
   18434:	b	18480 <__assert_fail@plt+0x7070>
   18438:	b	18480 <__assert_fail@plt+0x7070>
   1843c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18440:	cmn	r0, #1
   18444:	bne	18480 <__assert_fail@plt+0x7070>
   18448:	b	1844c <__assert_fail@plt+0x703c>
   1844c:	ldr	r0, [pc, #3732]	; 192e8 <__assert_fail@plt+0x7ed8>
   18450:	ldr	r1, [fp, #8]
   18454:	add	r0, r1, r0
   18458:	movw	r1, #0
   1845c:	cmp	r1, r0
   18460:	blt	184b4 <__assert_fail@plt+0x70a4>
   18464:	b	184cc <__assert_fail@plt+0x70bc>
   18468:	ldr	r0, [fp, #8]
   1846c:	sub	r0, r0, #1
   18470:	movw	r1, #32767	; 0x7fff
   18474:	cmp	r1, r0
   18478:	blt	184b4 <__assert_fail@plt+0x70a4>
   1847c:	b	184cc <__assert_fail@plt+0x70bc>
   18480:	ldr	r0, [pc, #3680]	; 192e8 <__assert_fail@plt+0x7ed8>
   18484:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18488:	sdiv	r0, r0, r1
   1848c:	ldr	r1, [fp, #8]
   18490:	cmp	r0, r1
   18494:	blt	184b4 <__assert_fail@plt+0x70a4>
   18498:	b	184cc <__assert_fail@plt+0x70bc>
   1849c:	ldr	r0, [fp, #8]
   184a0:	movw	r1, #32767	; 0x7fff
   184a4:	sdiv	r0, r1, r0
   184a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184ac:	cmp	r0, r1
   184b0:	bge	184cc <__assert_fail@plt+0x70bc>
   184b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184b8:	ldr	r1, [fp, #8]
   184bc:	mul	r0, r0, r1
   184c0:	sxth	r0, r0
   184c4:	str	r0, [fp, #-28]	; 0xffffffe4
   184c8:	b	192b0 <__assert_fail@plt+0x7ea0>
   184cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184d0:	ldr	r1, [fp, #8]
   184d4:	mul	r0, r0, r1
   184d8:	sxth	r0, r0
   184dc:	str	r0, [fp, #-28]	; 0xffffffe4
   184e0:	b	192b4 <__assert_fail@plt+0x7ea4>
   184e4:	ldr	r0, [fp, #8]
   184e8:	cmp	r0, #0
   184ec:	bge	185fc <__assert_fail@plt+0x71ec>
   184f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184f4:	cmp	r0, #0
   184f8:	bge	18584 <__assert_fail@plt+0x7174>
   184fc:	b	18500 <__assert_fail@plt+0x70f0>
   18500:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18504:	ldr	r1, [fp, #8]
   18508:	movw	r2, #65535	; 0xffff
   1850c:	sdiv	r1, r2, r1
   18510:	cmp	r0, r1
   18514:	blt	18698 <__assert_fail@plt+0x7288>
   18518:	b	186b0 <__assert_fail@plt+0x72a0>
   1851c:	b	18520 <__assert_fail@plt+0x7110>
   18520:	ldr	r0, [pc, #3512]	; 192e0 <__assert_fail@plt+0x7ed0>
   18524:	ldr	r1, [fp, #8]
   18528:	cmp	r1, r0
   1852c:	blt	18544 <__assert_fail@plt+0x7134>
   18530:	b	18550 <__assert_fail@plt+0x7140>
   18534:	ldr	r0, [fp, #8]
   18538:	movw	r1, #0
   1853c:	cmp	r1, r0
   18540:	bge	18550 <__assert_fail@plt+0x7140>
   18544:	movw	r0, #0
   18548:	str	r0, [sp, #76]	; 0x4c
   1854c:	b	18568 <__assert_fail@plt+0x7158>
   18550:	ldr	r0, [fp, #8]
   18554:	movw	r1, #0
   18558:	sub	r0, r1, r0
   1855c:	movw	r1, #65535	; 0xffff
   18560:	sdiv	r0, r1, r0
   18564:	str	r0, [sp, #76]	; 0x4c
   18568:	ldr	r0, [sp, #76]	; 0x4c
   1856c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18570:	mvn	r2, #0
   18574:	sub	r1, r2, r1
   18578:	cmp	r0, r1
   1857c:	ble	18698 <__assert_fail@plt+0x7288>
   18580:	b	186b0 <__assert_fail@plt+0x72a0>
   18584:	b	18588 <__assert_fail@plt+0x7178>
   18588:	b	185e0 <__assert_fail@plt+0x71d0>
   1858c:	b	185e0 <__assert_fail@plt+0x71d0>
   18590:	ldr	r0, [fp, #8]
   18594:	cmn	r0, #1
   18598:	bne	185e0 <__assert_fail@plt+0x71d0>
   1859c:	b	185a0 <__assert_fail@plt+0x7190>
   185a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185a4:	add	r0, r0, #0
   185a8:	movw	r1, #0
   185ac:	cmp	r1, r0
   185b0:	blt	18698 <__assert_fail@plt+0x7288>
   185b4:	b	186b0 <__assert_fail@plt+0x72a0>
   185b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185bc:	movw	r1, #0
   185c0:	cmp	r1, r0
   185c4:	bge	186b0 <__assert_fail@plt+0x72a0>
   185c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185cc:	sub	r0, r0, #1
   185d0:	mvn	r1, #0
   185d4:	cmp	r1, r0
   185d8:	blt	18698 <__assert_fail@plt+0x7288>
   185dc:	b	186b0 <__assert_fail@plt+0x72a0>
   185e0:	ldr	r0, [fp, #8]
   185e4:	movw	r1, #0
   185e8:	sdiv	r0, r1, r0
   185ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185f0:	cmp	r0, r1
   185f4:	blt	18698 <__assert_fail@plt+0x7288>
   185f8:	b	186b0 <__assert_fail@plt+0x72a0>
   185fc:	ldr	r0, [fp, #8]
   18600:	cmp	r0, #0
   18604:	bne	1860c <__assert_fail@plt+0x71fc>
   18608:	b	186b0 <__assert_fail@plt+0x72a0>
   1860c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18610:	cmp	r0, #0
   18614:	bge	18680 <__assert_fail@plt+0x7270>
   18618:	b	1861c <__assert_fail@plt+0x720c>
   1861c:	b	18664 <__assert_fail@plt+0x7254>
   18620:	b	18664 <__assert_fail@plt+0x7254>
   18624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18628:	cmn	r0, #1
   1862c:	bne	18664 <__assert_fail@plt+0x7254>
   18630:	b	18634 <__assert_fail@plt+0x7224>
   18634:	ldr	r0, [fp, #8]
   18638:	add	r0, r0, #0
   1863c:	movw	r1, #0
   18640:	cmp	r1, r0
   18644:	blt	18698 <__assert_fail@plt+0x7288>
   18648:	b	186b0 <__assert_fail@plt+0x72a0>
   1864c:	ldr	r0, [fp, #8]
   18650:	sub	r0, r0, #1
   18654:	mvn	r1, #0
   18658:	cmp	r1, r0
   1865c:	blt	18698 <__assert_fail@plt+0x7288>
   18660:	b	186b0 <__assert_fail@plt+0x72a0>
   18664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18668:	movw	r1, #0
   1866c:	sdiv	r0, r1, r0
   18670:	ldr	r1, [fp, #8]
   18674:	cmp	r0, r1
   18678:	blt	18698 <__assert_fail@plt+0x7288>
   1867c:	b	186b0 <__assert_fail@plt+0x72a0>
   18680:	ldr	r0, [fp, #8]
   18684:	movw	r1, #65535	; 0xffff
   18688:	sdiv	r0, r1, r0
   1868c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18690:	cmp	r0, r1
   18694:	bge	186b0 <__assert_fail@plt+0x72a0>
   18698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1869c:	ldr	r1, [fp, #8]
   186a0:	mul	r0, r0, r1
   186a4:	uxth	r0, r0
   186a8:	str	r0, [fp, #-28]	; 0xffffffe4
   186ac:	b	192b0 <__assert_fail@plt+0x7ea0>
   186b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186b4:	ldr	r1, [fp, #8]
   186b8:	mul	r0, r0, r1
   186bc:	uxth	r0, r0
   186c0:	str	r0, [fp, #-28]	; 0xffffffe4
   186c4:	b	192b4 <__assert_fail@plt+0x7ea4>
   186c8:	b	186cc <__assert_fail@plt+0x72bc>
   186cc:	b	186d0 <__assert_fail@plt+0x72c0>
   186d0:	ldr	r0, [fp, #8]
   186d4:	cmp	r0, #0
   186d8:	bge	187dc <__assert_fail@plt+0x73cc>
   186dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186e0:	cmp	r0, #0
   186e4:	bge	18770 <__assert_fail@plt+0x7360>
   186e8:	b	186ec <__assert_fail@plt+0x72dc>
   186ec:	ldr	r0, [pc, #3048]	; 192dc <__assert_fail@plt+0x7ecc>
   186f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186f4:	ldr	r2, [fp, #8]
   186f8:	sdiv	r0, r0, r2
   186fc:	cmp	r1, r0
   18700:	blt	1886c <__assert_fail@plt+0x745c>
   18704:	b	18880 <__assert_fail@plt+0x7470>
   18708:	b	1870c <__assert_fail@plt+0x72fc>
   1870c:	ldr	r0, [pc, #3020]	; 192e0 <__assert_fail@plt+0x7ed0>
   18710:	ldr	r1, [fp, #8]
   18714:	cmp	r1, r0
   18718:	blt	18730 <__assert_fail@plt+0x7320>
   1871c:	b	1873c <__assert_fail@plt+0x732c>
   18720:	ldr	r0, [fp, #8]
   18724:	movw	r1, #0
   18728:	cmp	r1, r0
   1872c:	bge	1873c <__assert_fail@plt+0x732c>
   18730:	movw	r0, #0
   18734:	str	r0, [sp, #72]	; 0x48
   18738:	b	18754 <__assert_fail@plt+0x7344>
   1873c:	ldr	r0, [pc, #2968]	; 192dc <__assert_fail@plt+0x7ecc>
   18740:	ldr	r1, [fp, #8]
   18744:	movw	r2, #0
   18748:	sub	r1, r2, r1
   1874c:	sdiv	r0, r0, r1
   18750:	str	r0, [sp, #72]	; 0x48
   18754:	ldr	r0, [sp, #72]	; 0x48
   18758:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1875c:	mvn	r2, #0
   18760:	sub	r1, r2, r1
   18764:	cmp	r0, r1
   18768:	ble	1886c <__assert_fail@plt+0x745c>
   1876c:	b	18880 <__assert_fail@plt+0x7470>
   18770:	ldr	r0, [fp, #8]
   18774:	cmn	r0, #1
   18778:	bne	187c0 <__assert_fail@plt+0x73b0>
   1877c:	b	18780 <__assert_fail@plt+0x7370>
   18780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18784:	add	r0, r0, #-2147483648	; 0x80000000
   18788:	movw	r1, #0
   1878c:	cmp	r1, r0
   18790:	blt	1886c <__assert_fail@plt+0x745c>
   18794:	b	18880 <__assert_fail@plt+0x7470>
   18798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1879c:	movw	r1, #0
   187a0:	cmp	r1, r0
   187a4:	bge	18880 <__assert_fail@plt+0x7470>
   187a8:	ldr	r0, [pc, #2860]	; 192dc <__assert_fail@plt+0x7ecc>
   187ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   187b0:	sub	r1, r1, #1
   187b4:	cmp	r0, r1
   187b8:	blt	1886c <__assert_fail@plt+0x745c>
   187bc:	b	18880 <__assert_fail@plt+0x7470>
   187c0:	ldr	r0, [pc, #2844]	; 192e4 <__assert_fail@plt+0x7ed4>
   187c4:	ldr	r1, [fp, #8]
   187c8:	sdiv	r0, r0, r1
   187cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   187d0:	cmp	r0, r1
   187d4:	blt	1886c <__assert_fail@plt+0x745c>
   187d8:	b	18880 <__assert_fail@plt+0x7470>
   187dc:	ldr	r0, [fp, #8]
   187e0:	cmp	r0, #0
   187e4:	bne	187ec <__assert_fail@plt+0x73dc>
   187e8:	b	18880 <__assert_fail@plt+0x7470>
   187ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187f0:	cmp	r0, #0
   187f4:	bge	18854 <__assert_fail@plt+0x7444>
   187f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187fc:	cmn	r0, #1
   18800:	bne	18838 <__assert_fail@plt+0x7428>
   18804:	b	18808 <__assert_fail@plt+0x73f8>
   18808:	ldr	r0, [fp, #8]
   1880c:	add	r0, r0, #-2147483648	; 0x80000000
   18810:	movw	r1, #0
   18814:	cmp	r1, r0
   18818:	blt	1886c <__assert_fail@plt+0x745c>
   1881c:	b	18880 <__assert_fail@plt+0x7470>
   18820:	ldr	r0, [pc, #2740]	; 192dc <__assert_fail@plt+0x7ecc>
   18824:	ldr	r1, [fp, #8]
   18828:	sub	r1, r1, #1
   1882c:	cmp	r0, r1
   18830:	blt	1886c <__assert_fail@plt+0x745c>
   18834:	b	18880 <__assert_fail@plt+0x7470>
   18838:	ldr	r0, [pc, #2724]	; 192e4 <__assert_fail@plt+0x7ed4>
   1883c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18840:	sdiv	r0, r0, r1
   18844:	ldr	r1, [fp, #8]
   18848:	cmp	r0, r1
   1884c:	blt	1886c <__assert_fail@plt+0x745c>
   18850:	b	18880 <__assert_fail@plt+0x7470>
   18854:	ldr	r0, [pc, #2688]	; 192dc <__assert_fail@plt+0x7ecc>
   18858:	ldr	r1, [fp, #8]
   1885c:	sdiv	r0, r0, r1
   18860:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18864:	cmp	r0, r1
   18868:	bge	18880 <__assert_fail@plt+0x7470>
   1886c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18870:	ldr	r1, [fp, #8]
   18874:	mul	r0, r0, r1
   18878:	str	r0, [fp, #-28]	; 0xffffffe4
   1887c:	b	192b0 <__assert_fail@plt+0x7ea0>
   18880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18884:	ldr	r1, [fp, #8]
   18888:	mul	r0, r0, r1
   1888c:	str	r0, [fp, #-28]	; 0xffffffe4
   18890:	b	192b4 <__assert_fail@plt+0x7ea4>
   18894:	ldr	r0, [fp, #8]
   18898:	cmp	r0, #0
   1889c:	bge	189ac <__assert_fail@plt+0x759c>
   188a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188a4:	cmp	r0, #0
   188a8:	bge	18934 <__assert_fail@plt+0x7524>
   188ac:	b	188cc <__assert_fail@plt+0x74bc>
   188b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188b4:	ldr	r1, [fp, #8]
   188b8:	mvn	r2, #0
   188bc:	udiv	r1, r2, r1
   188c0:	cmp	r0, r1
   188c4:	bcc	18a48 <__assert_fail@plt+0x7638>
   188c8:	b	18a5c <__assert_fail@plt+0x764c>
   188cc:	b	188d0 <__assert_fail@plt+0x74c0>
   188d0:	ldr	r0, [pc, #2568]	; 192e0 <__assert_fail@plt+0x7ed0>
   188d4:	ldr	r1, [fp, #8]
   188d8:	cmp	r1, r0
   188dc:	blt	188f4 <__assert_fail@plt+0x74e4>
   188e0:	b	18900 <__assert_fail@plt+0x74f0>
   188e4:	ldr	r0, [fp, #8]
   188e8:	movw	r1, #0
   188ec:	cmp	r1, r0
   188f0:	bge	18900 <__assert_fail@plt+0x74f0>
   188f4:	movw	r0, #1
   188f8:	str	r0, [sp, #68]	; 0x44
   188fc:	b	18918 <__assert_fail@plt+0x7508>
   18900:	ldr	r0, [fp, #8]
   18904:	movw	r1, #0
   18908:	sub	r0, r1, r0
   1890c:	mvn	r1, #0
   18910:	udiv	r0, r1, r0
   18914:	str	r0, [sp, #68]	; 0x44
   18918:	ldr	r0, [sp, #68]	; 0x44
   1891c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18920:	mvn	r2, #0
   18924:	sub	r1, r2, r1
   18928:	cmp	r0, r1
   1892c:	bls	18a48 <__assert_fail@plt+0x7638>
   18930:	b	18a5c <__assert_fail@plt+0x764c>
   18934:	b	18938 <__assert_fail@plt+0x7528>
   18938:	b	18990 <__assert_fail@plt+0x7580>
   1893c:	b	18990 <__assert_fail@plt+0x7580>
   18940:	ldr	r0, [fp, #8]
   18944:	cmn	r0, #1
   18948:	bne	18990 <__assert_fail@plt+0x7580>
   1894c:	b	18950 <__assert_fail@plt+0x7540>
   18950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18954:	add	r0, r0, #0
   18958:	movw	r1, #0
   1895c:	cmp	r1, r0
   18960:	blt	18a48 <__assert_fail@plt+0x7638>
   18964:	b	18a5c <__assert_fail@plt+0x764c>
   18968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1896c:	movw	r1, #0
   18970:	cmp	r1, r0
   18974:	bge	18a5c <__assert_fail@plt+0x764c>
   18978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1897c:	sub	r0, r0, #1
   18980:	mvn	r1, #0
   18984:	cmp	r1, r0
   18988:	blt	18a48 <__assert_fail@plt+0x7638>
   1898c:	b	18a5c <__assert_fail@plt+0x764c>
   18990:	ldr	r0, [fp, #8]
   18994:	movw	r1, #0
   18998:	sdiv	r0, r1, r0
   1899c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189a0:	cmp	r0, r1
   189a4:	blt	18a48 <__assert_fail@plt+0x7638>
   189a8:	b	18a5c <__assert_fail@plt+0x764c>
   189ac:	ldr	r0, [fp, #8]
   189b0:	cmp	r0, #0
   189b4:	bne	189bc <__assert_fail@plt+0x75ac>
   189b8:	b	18a5c <__assert_fail@plt+0x764c>
   189bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189c0:	cmp	r0, #0
   189c4:	bge	18a30 <__assert_fail@plt+0x7620>
   189c8:	b	189cc <__assert_fail@plt+0x75bc>
   189cc:	b	18a14 <__assert_fail@plt+0x7604>
   189d0:	b	18a14 <__assert_fail@plt+0x7604>
   189d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189d8:	cmn	r0, #1
   189dc:	bne	18a14 <__assert_fail@plt+0x7604>
   189e0:	b	189e4 <__assert_fail@plt+0x75d4>
   189e4:	ldr	r0, [fp, #8]
   189e8:	add	r0, r0, #0
   189ec:	movw	r1, #0
   189f0:	cmp	r1, r0
   189f4:	blt	18a48 <__assert_fail@plt+0x7638>
   189f8:	b	18a5c <__assert_fail@plt+0x764c>
   189fc:	ldr	r0, [fp, #8]
   18a00:	sub	r0, r0, #1
   18a04:	mvn	r1, #0
   18a08:	cmp	r1, r0
   18a0c:	blt	18a48 <__assert_fail@plt+0x7638>
   18a10:	b	18a5c <__assert_fail@plt+0x764c>
   18a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a18:	movw	r1, #0
   18a1c:	sdiv	r0, r1, r0
   18a20:	ldr	r1, [fp, #8]
   18a24:	cmp	r0, r1
   18a28:	blt	18a48 <__assert_fail@plt+0x7638>
   18a2c:	b	18a5c <__assert_fail@plt+0x764c>
   18a30:	ldr	r0, [fp, #8]
   18a34:	mvn	r1, #0
   18a38:	udiv	r0, r1, r0
   18a3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a40:	cmp	r0, r1
   18a44:	bcs	18a5c <__assert_fail@plt+0x764c>
   18a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a4c:	ldr	r1, [fp, #8]
   18a50:	mul	r0, r0, r1
   18a54:	str	r0, [fp, #-28]	; 0xffffffe4
   18a58:	b	192b0 <__assert_fail@plt+0x7ea0>
   18a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a60:	ldr	r1, [fp, #8]
   18a64:	mul	r0, r0, r1
   18a68:	str	r0, [fp, #-28]	; 0xffffffe4
   18a6c:	b	192b4 <__assert_fail@plt+0x7ea4>
   18a70:	b	18a74 <__assert_fail@plt+0x7664>
   18a74:	b	18a78 <__assert_fail@plt+0x7668>
   18a78:	ldr	r0, [fp, #8]
   18a7c:	cmp	r0, #0
   18a80:	bge	18b84 <__assert_fail@plt+0x7774>
   18a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a88:	cmp	r0, #0
   18a8c:	bge	18b18 <__assert_fail@plt+0x7708>
   18a90:	b	18a94 <__assert_fail@plt+0x7684>
   18a94:	ldr	r0, [pc, #2112]	; 192dc <__assert_fail@plt+0x7ecc>
   18a98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a9c:	ldr	r2, [fp, #8]
   18aa0:	sdiv	r0, r0, r2
   18aa4:	cmp	r1, r0
   18aa8:	blt	18c14 <__assert_fail@plt+0x7804>
   18aac:	b	18c28 <__assert_fail@plt+0x7818>
   18ab0:	b	18ab4 <__assert_fail@plt+0x76a4>
   18ab4:	ldr	r0, [pc, #2084]	; 192e0 <__assert_fail@plt+0x7ed0>
   18ab8:	ldr	r1, [fp, #8]
   18abc:	cmp	r1, r0
   18ac0:	blt	18ad8 <__assert_fail@plt+0x76c8>
   18ac4:	b	18ae4 <__assert_fail@plt+0x76d4>
   18ac8:	ldr	r0, [fp, #8]
   18acc:	movw	r1, #0
   18ad0:	cmp	r1, r0
   18ad4:	bge	18ae4 <__assert_fail@plt+0x76d4>
   18ad8:	movw	r0, #0
   18adc:	str	r0, [sp, #64]	; 0x40
   18ae0:	b	18afc <__assert_fail@plt+0x76ec>
   18ae4:	ldr	r0, [pc, #2032]	; 192dc <__assert_fail@plt+0x7ecc>
   18ae8:	ldr	r1, [fp, #8]
   18aec:	movw	r2, #0
   18af0:	sub	r1, r2, r1
   18af4:	sdiv	r0, r0, r1
   18af8:	str	r0, [sp, #64]	; 0x40
   18afc:	ldr	r0, [sp, #64]	; 0x40
   18b00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b04:	mvn	r2, #0
   18b08:	sub	r1, r2, r1
   18b0c:	cmp	r0, r1
   18b10:	ble	18c14 <__assert_fail@plt+0x7804>
   18b14:	b	18c28 <__assert_fail@plt+0x7818>
   18b18:	ldr	r0, [fp, #8]
   18b1c:	cmn	r0, #1
   18b20:	bne	18b68 <__assert_fail@plt+0x7758>
   18b24:	b	18b28 <__assert_fail@plt+0x7718>
   18b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b2c:	add	r0, r0, #-2147483648	; 0x80000000
   18b30:	movw	r1, #0
   18b34:	cmp	r1, r0
   18b38:	blt	18c14 <__assert_fail@plt+0x7804>
   18b3c:	b	18c28 <__assert_fail@plt+0x7818>
   18b40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b44:	movw	r1, #0
   18b48:	cmp	r1, r0
   18b4c:	bge	18c28 <__assert_fail@plt+0x7818>
   18b50:	ldr	r0, [pc, #1924]	; 192dc <__assert_fail@plt+0x7ecc>
   18b54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b58:	sub	r1, r1, #1
   18b5c:	cmp	r0, r1
   18b60:	blt	18c14 <__assert_fail@plt+0x7804>
   18b64:	b	18c28 <__assert_fail@plt+0x7818>
   18b68:	ldr	r0, [pc, #1908]	; 192e4 <__assert_fail@plt+0x7ed4>
   18b6c:	ldr	r1, [fp, #8]
   18b70:	sdiv	r0, r0, r1
   18b74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b78:	cmp	r0, r1
   18b7c:	blt	18c14 <__assert_fail@plt+0x7804>
   18b80:	b	18c28 <__assert_fail@plt+0x7818>
   18b84:	ldr	r0, [fp, #8]
   18b88:	cmp	r0, #0
   18b8c:	bne	18b94 <__assert_fail@plt+0x7784>
   18b90:	b	18c28 <__assert_fail@plt+0x7818>
   18b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b98:	cmp	r0, #0
   18b9c:	bge	18bfc <__assert_fail@plt+0x77ec>
   18ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ba4:	cmn	r0, #1
   18ba8:	bne	18be0 <__assert_fail@plt+0x77d0>
   18bac:	b	18bb0 <__assert_fail@plt+0x77a0>
   18bb0:	ldr	r0, [fp, #8]
   18bb4:	add	r0, r0, #-2147483648	; 0x80000000
   18bb8:	movw	r1, #0
   18bbc:	cmp	r1, r0
   18bc0:	blt	18c14 <__assert_fail@plt+0x7804>
   18bc4:	b	18c28 <__assert_fail@plt+0x7818>
   18bc8:	ldr	r0, [pc, #1804]	; 192dc <__assert_fail@plt+0x7ecc>
   18bcc:	ldr	r1, [fp, #8]
   18bd0:	sub	r1, r1, #1
   18bd4:	cmp	r0, r1
   18bd8:	blt	18c14 <__assert_fail@plt+0x7804>
   18bdc:	b	18c28 <__assert_fail@plt+0x7818>
   18be0:	ldr	r0, [pc, #1788]	; 192e4 <__assert_fail@plt+0x7ed4>
   18be4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18be8:	sdiv	r0, r0, r1
   18bec:	ldr	r1, [fp, #8]
   18bf0:	cmp	r0, r1
   18bf4:	blt	18c14 <__assert_fail@plt+0x7804>
   18bf8:	b	18c28 <__assert_fail@plt+0x7818>
   18bfc:	ldr	r0, [pc, #1752]	; 192dc <__assert_fail@plt+0x7ecc>
   18c00:	ldr	r1, [fp, #8]
   18c04:	sdiv	r0, r0, r1
   18c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c0c:	cmp	r0, r1
   18c10:	bge	18c28 <__assert_fail@plt+0x7818>
   18c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c18:	ldr	r1, [fp, #8]
   18c1c:	mul	r0, r0, r1
   18c20:	str	r0, [fp, #-28]	; 0xffffffe4
   18c24:	b	192b0 <__assert_fail@plt+0x7ea0>
   18c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c2c:	ldr	r1, [fp, #8]
   18c30:	mul	r0, r0, r1
   18c34:	str	r0, [fp, #-28]	; 0xffffffe4
   18c38:	b	192b4 <__assert_fail@plt+0x7ea4>
   18c3c:	ldr	r0, [fp, #8]
   18c40:	cmp	r0, #0
   18c44:	bge	18d54 <__assert_fail@plt+0x7944>
   18c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c4c:	cmp	r0, #0
   18c50:	bge	18cdc <__assert_fail@plt+0x78cc>
   18c54:	b	18c74 <__assert_fail@plt+0x7864>
   18c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c5c:	ldr	r1, [fp, #8]
   18c60:	mvn	r2, #0
   18c64:	udiv	r1, r2, r1
   18c68:	cmp	r0, r1
   18c6c:	bcc	18df0 <__assert_fail@plt+0x79e0>
   18c70:	b	18e04 <__assert_fail@plt+0x79f4>
   18c74:	b	18c78 <__assert_fail@plt+0x7868>
   18c78:	ldr	r0, [pc, #1632]	; 192e0 <__assert_fail@plt+0x7ed0>
   18c7c:	ldr	r1, [fp, #8]
   18c80:	cmp	r1, r0
   18c84:	blt	18c9c <__assert_fail@plt+0x788c>
   18c88:	b	18ca8 <__assert_fail@plt+0x7898>
   18c8c:	ldr	r0, [fp, #8]
   18c90:	movw	r1, #0
   18c94:	cmp	r1, r0
   18c98:	bge	18ca8 <__assert_fail@plt+0x7898>
   18c9c:	movw	r0, #1
   18ca0:	str	r0, [sp, #60]	; 0x3c
   18ca4:	b	18cc0 <__assert_fail@plt+0x78b0>
   18ca8:	ldr	r0, [fp, #8]
   18cac:	movw	r1, #0
   18cb0:	sub	r0, r1, r0
   18cb4:	mvn	r1, #0
   18cb8:	udiv	r0, r1, r0
   18cbc:	str	r0, [sp, #60]	; 0x3c
   18cc0:	ldr	r0, [sp, #60]	; 0x3c
   18cc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cc8:	mvn	r2, #0
   18ccc:	sub	r1, r2, r1
   18cd0:	cmp	r0, r1
   18cd4:	bls	18df0 <__assert_fail@plt+0x79e0>
   18cd8:	b	18e04 <__assert_fail@plt+0x79f4>
   18cdc:	b	18ce0 <__assert_fail@plt+0x78d0>
   18ce0:	b	18d38 <__assert_fail@plt+0x7928>
   18ce4:	b	18d38 <__assert_fail@plt+0x7928>
   18ce8:	ldr	r0, [fp, #8]
   18cec:	cmn	r0, #1
   18cf0:	bne	18d38 <__assert_fail@plt+0x7928>
   18cf4:	b	18cf8 <__assert_fail@plt+0x78e8>
   18cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cfc:	add	r0, r0, #0
   18d00:	movw	r1, #0
   18d04:	cmp	r1, r0
   18d08:	blt	18df0 <__assert_fail@plt+0x79e0>
   18d0c:	b	18e04 <__assert_fail@plt+0x79f4>
   18d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d14:	movw	r1, #0
   18d18:	cmp	r1, r0
   18d1c:	bge	18e04 <__assert_fail@plt+0x79f4>
   18d20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d24:	sub	r0, r0, #1
   18d28:	mvn	r1, #0
   18d2c:	cmp	r1, r0
   18d30:	blt	18df0 <__assert_fail@plt+0x79e0>
   18d34:	b	18e04 <__assert_fail@plt+0x79f4>
   18d38:	ldr	r0, [fp, #8]
   18d3c:	movw	r1, #0
   18d40:	sdiv	r0, r1, r0
   18d44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d48:	cmp	r0, r1
   18d4c:	blt	18df0 <__assert_fail@plt+0x79e0>
   18d50:	b	18e04 <__assert_fail@plt+0x79f4>
   18d54:	ldr	r0, [fp, #8]
   18d58:	cmp	r0, #0
   18d5c:	bne	18d64 <__assert_fail@plt+0x7954>
   18d60:	b	18e04 <__assert_fail@plt+0x79f4>
   18d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d68:	cmp	r0, #0
   18d6c:	bge	18dd8 <__assert_fail@plt+0x79c8>
   18d70:	b	18d74 <__assert_fail@plt+0x7964>
   18d74:	b	18dbc <__assert_fail@plt+0x79ac>
   18d78:	b	18dbc <__assert_fail@plt+0x79ac>
   18d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d80:	cmn	r0, #1
   18d84:	bne	18dbc <__assert_fail@plt+0x79ac>
   18d88:	b	18d8c <__assert_fail@plt+0x797c>
   18d8c:	ldr	r0, [fp, #8]
   18d90:	add	r0, r0, #0
   18d94:	movw	r1, #0
   18d98:	cmp	r1, r0
   18d9c:	blt	18df0 <__assert_fail@plt+0x79e0>
   18da0:	b	18e04 <__assert_fail@plt+0x79f4>
   18da4:	ldr	r0, [fp, #8]
   18da8:	sub	r0, r0, #1
   18dac:	mvn	r1, #0
   18db0:	cmp	r1, r0
   18db4:	blt	18df0 <__assert_fail@plt+0x79e0>
   18db8:	b	18e04 <__assert_fail@plt+0x79f4>
   18dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dc0:	movw	r1, #0
   18dc4:	sdiv	r0, r1, r0
   18dc8:	ldr	r1, [fp, #8]
   18dcc:	cmp	r0, r1
   18dd0:	blt	18df0 <__assert_fail@plt+0x79e0>
   18dd4:	b	18e04 <__assert_fail@plt+0x79f4>
   18dd8:	ldr	r0, [fp, #8]
   18ddc:	mvn	r1, #0
   18de0:	udiv	r0, r1, r0
   18de4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18de8:	cmp	r0, r1
   18dec:	bcs	18e04 <__assert_fail@plt+0x79f4>
   18df0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df4:	ldr	r1, [fp, #8]
   18df8:	mul	r0, r0, r1
   18dfc:	str	r0, [fp, #-28]	; 0xffffffe4
   18e00:	b	192b0 <__assert_fail@plt+0x7ea0>
   18e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e08:	ldr	r1, [fp, #8]
   18e0c:	mul	r0, r0, r1
   18e10:	str	r0, [fp, #-28]	; 0xffffffe4
   18e14:	b	192b4 <__assert_fail@plt+0x7ea4>
   18e18:	b	18e1c <__assert_fail@plt+0x7a0c>
   18e1c:	ldr	r0, [fp, #8]
   18e20:	cmp	r0, #0
   18e24:	bge	18f8c <__assert_fail@plt+0x7b7c>
   18e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e2c:	cmp	r0, #0
   18e30:	bge	18f08 <__assert_fail@plt+0x7af8>
   18e34:	b	18e38 <__assert_fail@plt+0x7a28>
   18e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e3c:	ldr	r1, [fp, #8]
   18e40:	asr	r3, r1, #31
   18e44:	mvn	r2, #0
   18e48:	mvn	ip, #-2147483648	; 0x80000000
   18e4c:	str	r0, [sp, #56]	; 0x38
   18e50:	mov	r0, r2
   18e54:	str	r1, [sp, #52]	; 0x34
   18e58:	mov	r1, ip
   18e5c:	ldr	r2, [sp, #52]	; 0x34
   18e60:	bl	1dc34 <__assert_fail@plt+0xc824>
   18e64:	ldr	r2, [sp, #56]	; 0x38
   18e68:	subs	r0, r2, r0
   18e6c:	rscs	r1, r1, r2, asr #31
   18e70:	blt	19054 <__assert_fail@plt+0x7c44>
   18e74:	b	19068 <__assert_fail@plt+0x7c58>
   18e78:	b	18e7c <__assert_fail@plt+0x7a6c>
   18e7c:	ldr	r0, [pc, #1116]	; 192e0 <__assert_fail@plt+0x7ed0>
   18e80:	ldr	r1, [fp, #8]
   18e84:	cmp	r1, r0
   18e88:	blt	18ea0 <__assert_fail@plt+0x7a90>
   18e8c:	b	18eb4 <__assert_fail@plt+0x7aa4>
   18e90:	ldr	r0, [fp, #8]
   18e94:	movw	r1, #0
   18e98:	cmp	r1, r0
   18e9c:	bge	18eb4 <__assert_fail@plt+0x7aa4>
   18ea0:	mov	r0, #0
   18ea4:	mvn	r1, #0
   18ea8:	str	r1, [sp, #48]	; 0x30
   18eac:	str	r0, [sp, #44]	; 0x2c
   18eb0:	b	18ee8 <__assert_fail@plt+0x7ad8>
   18eb4:	ldr	r0, [fp, #8]
   18eb8:	rsb	r0, r0, #0
   18ebc:	asr	r3, r0, #31
   18ec0:	mvn	r1, #0
   18ec4:	mvn	r2, #-2147483648	; 0x80000000
   18ec8:	str	r0, [sp, #40]	; 0x28
   18ecc:	mov	r0, r1
   18ed0:	mov	r1, r2
   18ed4:	ldr	r2, [sp, #40]	; 0x28
   18ed8:	bl	1dc34 <__assert_fail@plt+0xc824>
   18edc:	str	r0, [sp, #48]	; 0x30
   18ee0:	str	r1, [sp, #44]	; 0x2c
   18ee4:	b	18ee8 <__assert_fail@plt+0x7ad8>
   18ee8:	ldr	r0, [sp, #44]	; 0x2c
   18eec:	ldr	r1, [sp, #48]	; 0x30
   18ef0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ef4:	mvn	r2, r2
   18ef8:	subs	r1, r2, r1
   18efc:	rscs	r0, r0, r2, asr #31
   18f00:	bge	19054 <__assert_fail@plt+0x7c44>
   18f04:	b	19068 <__assert_fail@plt+0x7c58>
   18f08:	ldr	r0, [fp, #8]
   18f0c:	cmn	r0, #1
   18f10:	bne	18f54 <__assert_fail@plt+0x7b44>
   18f14:	b	18f18 <__assert_fail@plt+0x7b08>
   18f18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f1c:	mov	r1, #-2147483648	; 0x80000000
   18f20:	add	r1, r1, r0, asr #31
   18f24:	rsbs	r0, r0, #0
   18f28:	rscs	r1, r1, #0
   18f2c:	blt	19054 <__assert_fail@plt+0x7c44>
   18f30:	b	19068 <__assert_fail@plt+0x7c58>
   18f34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f38:	movw	r1, #0
   18f3c:	cmp	r1, r0
   18f40:	bge	19068 <__assert_fail@plt+0x7c58>
   18f44:	mov	r0, #0
   18f48:	cmp	r0, #0
   18f4c:	bne	19054 <__assert_fail@plt+0x7c44>
   18f50:	b	19068 <__assert_fail@plt+0x7c58>
   18f54:	ldr	r0, [fp, #8]
   18f58:	asr	r3, r0, #31
   18f5c:	mov	r1, #0
   18f60:	mov	r2, #-2147483648	; 0x80000000
   18f64:	str	r0, [sp, #36]	; 0x24
   18f68:	mov	r0, r1
   18f6c:	mov	r1, r2
   18f70:	ldr	r2, [sp, #36]	; 0x24
   18f74:	bl	1dc34 <__assert_fail@plt+0xc824>
   18f78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18f7c:	subs	r0, r0, r2
   18f80:	sbcs	r1, r1, r2, asr #31
   18f84:	blt	19054 <__assert_fail@plt+0x7c44>
   18f88:	b	19068 <__assert_fail@plt+0x7c58>
   18f8c:	ldr	r0, [fp, #8]
   18f90:	cmp	r0, #0
   18f94:	bne	18f9c <__assert_fail@plt+0x7b8c>
   18f98:	b	19068 <__assert_fail@plt+0x7c58>
   18f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fa0:	cmp	r0, #0
   18fa4:	bge	1901c <__assert_fail@plt+0x7c0c>
   18fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fac:	cmn	r0, #1
   18fb0:	bne	18fe4 <__assert_fail@plt+0x7bd4>
   18fb4:	b	18fb8 <__assert_fail@plt+0x7ba8>
   18fb8:	ldr	r0, [fp, #8]
   18fbc:	mov	r1, #-2147483648	; 0x80000000
   18fc0:	add	r1, r1, r0, asr #31
   18fc4:	rsbs	r0, r0, #0
   18fc8:	rscs	r1, r1, #0
   18fcc:	blt	19054 <__assert_fail@plt+0x7c44>
   18fd0:	b	19068 <__assert_fail@plt+0x7c58>
   18fd4:	mov	r0, #0
   18fd8:	cmp	r0, #0
   18fdc:	bne	19054 <__assert_fail@plt+0x7c44>
   18fe0:	b	19068 <__assert_fail@plt+0x7c58>
   18fe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fe8:	asr	r3, r0, #31
   18fec:	mov	r1, #0
   18ff0:	mov	r2, #-2147483648	; 0x80000000
   18ff4:	str	r0, [sp, #32]
   18ff8:	mov	r0, r1
   18ffc:	mov	r1, r2
   19000:	ldr	r2, [sp, #32]
   19004:	bl	1dc34 <__assert_fail@plt+0xc824>
   19008:	ldr	r2, [fp, #8]
   1900c:	subs	r0, r0, r2
   19010:	sbcs	r1, r1, r2, asr #31
   19014:	blt	19054 <__assert_fail@plt+0x7c44>
   19018:	b	19068 <__assert_fail@plt+0x7c58>
   1901c:	ldr	r0, [fp, #8]
   19020:	asr	r3, r0, #31
   19024:	mvn	r1, #0
   19028:	mvn	r2, #-2147483648	; 0x80000000
   1902c:	str	r0, [sp, #28]
   19030:	mov	r0, r1
   19034:	mov	r1, r2
   19038:	ldr	r2, [sp, #28]
   1903c:	bl	1dc34 <__assert_fail@plt+0xc824>
   19040:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19044:	subs	r0, r0, r2
   19048:	sbcs	r1, r1, r2, asr #31
   1904c:	bge	19068 <__assert_fail@plt+0x7c58>
   19050:	b	19054 <__assert_fail@plt+0x7c44>
   19054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19058:	ldr	r1, [fp, #8]
   1905c:	mul	r0, r0, r1
   19060:	str	r0, [fp, #-28]	; 0xffffffe4
   19064:	b	192b0 <__assert_fail@plt+0x7ea0>
   19068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1906c:	ldr	r1, [fp, #8]
   19070:	mul	r0, r0, r1
   19074:	str	r0, [fp, #-28]	; 0xffffffe4
   19078:	b	192b4 <__assert_fail@plt+0x7ea4>
   1907c:	ldr	r0, [fp, #8]
   19080:	cmp	r0, #0
   19084:	bge	191d4 <__assert_fail@plt+0x7dc4>
   19088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1908c:	cmp	r0, #0
   19090:	bge	1915c <__assert_fail@plt+0x7d4c>
   19094:	b	190d4 <__assert_fail@plt+0x7cc4>
   19098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1909c:	ldr	r1, [fp, #8]
   190a0:	asr	r3, r1, #31
   190a4:	mvn	r2, #0
   190a8:	str	r0, [sp, #24]
   190ac:	mov	r0, r2
   190b0:	str	r1, [sp, #20]
   190b4:	mov	r1, r2
   190b8:	ldr	r2, [sp, #20]
   190bc:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   190c0:	ldr	r2, [sp, #24]
   190c4:	subs	r0, r2, r0
   190c8:	rscs	r1, r1, r2, asr #31
   190cc:	bcc	19288 <__assert_fail@plt+0x7e78>
   190d0:	b	1929c <__assert_fail@plt+0x7e8c>
   190d4:	b	190d8 <__assert_fail@plt+0x7cc8>
   190d8:	ldr	r0, [pc, #512]	; 192e0 <__assert_fail@plt+0x7ed0>
   190dc:	ldr	r1, [fp, #8]
   190e0:	cmp	r1, r0
   190e4:	blt	190fc <__assert_fail@plt+0x7cec>
   190e8:	b	19110 <__assert_fail@plt+0x7d00>
   190ec:	ldr	r0, [fp, #8]
   190f0:	movw	r1, #0
   190f4:	cmp	r1, r0
   190f8:	bge	19110 <__assert_fail@plt+0x7d00>
   190fc:	mov	r0, #1
   19100:	mvn	r1, #0
   19104:	str	r1, [sp, #16]
   19108:	str	r0, [sp, #12]
   1910c:	b	1913c <__assert_fail@plt+0x7d2c>
   19110:	ldr	r0, [fp, #8]
   19114:	rsb	r0, r0, #0
   19118:	asr	r3, r0, #31
   1911c:	mvn	r1, #0
   19120:	str	r0, [sp, #8]
   19124:	mov	r0, r1
   19128:	ldr	r2, [sp, #8]
   1912c:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   19130:	str	r0, [sp, #16]
   19134:	str	r1, [sp, #12]
   19138:	b	1913c <__assert_fail@plt+0x7d2c>
   1913c:	ldr	r0, [sp, #12]
   19140:	ldr	r1, [sp, #16]
   19144:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19148:	mvn	r2, r2
   1914c:	subs	r1, r2, r1
   19150:	rscs	r0, r0, r2, asr #31
   19154:	bcs	19288 <__assert_fail@plt+0x7e78>
   19158:	b	1929c <__assert_fail@plt+0x7e8c>
   1915c:	b	19160 <__assert_fail@plt+0x7d50>
   19160:	b	191b8 <__assert_fail@plt+0x7da8>
   19164:	b	191b8 <__assert_fail@plt+0x7da8>
   19168:	ldr	r0, [fp, #8]
   1916c:	cmn	r0, #1
   19170:	bne	191b8 <__assert_fail@plt+0x7da8>
   19174:	b	19178 <__assert_fail@plt+0x7d68>
   19178:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1917c:	add	r0, r0, #0
   19180:	movw	r1, #0
   19184:	cmp	r1, r0
   19188:	blt	19288 <__assert_fail@plt+0x7e78>
   1918c:	b	1929c <__assert_fail@plt+0x7e8c>
   19190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19194:	movw	r1, #0
   19198:	cmp	r1, r0
   1919c:	bge	1929c <__assert_fail@plt+0x7e8c>
   191a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191a4:	sub	r0, r0, #1
   191a8:	mvn	r1, #0
   191ac:	cmp	r1, r0
   191b0:	blt	19288 <__assert_fail@plt+0x7e78>
   191b4:	b	1929c <__assert_fail@plt+0x7e8c>
   191b8:	ldr	r0, [fp, #8]
   191bc:	movw	r1, #0
   191c0:	sdiv	r0, r1, r0
   191c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191c8:	cmp	r0, r1
   191cc:	blt	19288 <__assert_fail@plt+0x7e78>
   191d0:	b	1929c <__assert_fail@plt+0x7e8c>
   191d4:	ldr	r0, [fp, #8]
   191d8:	cmp	r0, #0
   191dc:	bne	191e4 <__assert_fail@plt+0x7dd4>
   191e0:	b	1929c <__assert_fail@plt+0x7e8c>
   191e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191e8:	cmp	r0, #0
   191ec:	bge	19258 <__assert_fail@plt+0x7e48>
   191f0:	b	191f4 <__assert_fail@plt+0x7de4>
   191f4:	b	1923c <__assert_fail@plt+0x7e2c>
   191f8:	b	1923c <__assert_fail@plt+0x7e2c>
   191fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19200:	cmn	r0, #1
   19204:	bne	1923c <__assert_fail@plt+0x7e2c>
   19208:	b	1920c <__assert_fail@plt+0x7dfc>
   1920c:	ldr	r0, [fp, #8]
   19210:	add	r0, r0, #0
   19214:	movw	r1, #0
   19218:	cmp	r1, r0
   1921c:	blt	19288 <__assert_fail@plt+0x7e78>
   19220:	b	1929c <__assert_fail@plt+0x7e8c>
   19224:	ldr	r0, [fp, #8]
   19228:	sub	r0, r0, #1
   1922c:	mvn	r1, #0
   19230:	cmp	r1, r0
   19234:	blt	19288 <__assert_fail@plt+0x7e78>
   19238:	b	1929c <__assert_fail@plt+0x7e8c>
   1923c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19240:	movw	r1, #0
   19244:	sdiv	r0, r1, r0
   19248:	ldr	r1, [fp, #8]
   1924c:	cmp	r0, r1
   19250:	blt	19288 <__assert_fail@plt+0x7e78>
   19254:	b	1929c <__assert_fail@plt+0x7e8c>
   19258:	ldr	r0, [fp, #8]
   1925c:	asr	r3, r0, #31
   19260:	mvn	r1, #0
   19264:	str	r0, [sp, #4]
   19268:	mov	r0, r1
   1926c:	ldr	r2, [sp, #4]
   19270:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   19274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19278:	subs	r0, r0, r2
   1927c:	sbcs	r1, r1, r2, asr #31
   19280:	bcs	1929c <__assert_fail@plt+0x7e8c>
   19284:	b	19288 <__assert_fail@plt+0x7e78>
   19288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1928c:	ldr	r1, [fp, #8]
   19290:	mul	r0, r0, r1
   19294:	str	r0, [fp, #-28]	; 0xffffffe4
   19298:	b	192b0 <__assert_fail@plt+0x7ea0>
   1929c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192a0:	ldr	r1, [fp, #8]
   192a4:	mul	r0, r0, r1
   192a8:	str	r0, [fp, #-28]	; 0xffffffe4
   192ac:	b	192b4 <__assert_fail@plt+0x7ea4>
   192b0:	bl	1948c <__assert_fail@plt+0x807c>
   192b4:	ldr	r0, [fp, #-4]
   192b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   192bc:	bl	167ec <__assert_fail@plt+0x53dc>
   192c0:	str	r0, [fp, #-4]
   192c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192c8:	ldr	r1, [fp, #-8]
   192cc:	str	r0, [r1]
   192d0:	ldr	r0, [fp, #-4]
   192d4:	mov	sp, fp
   192d8:	pop	{fp, pc}
   192dc:	svcvc	0x00ffffff
   192e0:	andhi	r0, r0, r1
   192e4:	andhi	r0, r0, r0
   192e8:			; <UNDEFINED> instruction: 0xffff8000
   192ec:	push	{fp, lr}
   192f0:	mov	fp, sp
   192f4:	sub	sp, sp, #8
   192f8:	str	r0, [sp, #4]
   192fc:	ldr	r0, [sp, #4]
   19300:	movw	r1, #1
   19304:	bl	19310 <__assert_fail@plt+0x7f00>
   19308:	mov	sp, fp
   1930c:	pop	{fp, pc}
   19310:	push	{fp, lr}
   19314:	mov	fp, sp
   19318:	sub	sp, sp, #8
   1931c:	str	r0, [sp, #4]
   19320:	str	r1, [sp]
   19324:	ldr	r0, [sp, #4]
   19328:	ldr	r1, [sp]
   1932c:	bl	1b1ec <__assert_fail@plt+0x9ddc>
   19330:	bl	16778 <__assert_fail@plt+0x5368>
   19334:	mov	sp, fp
   19338:	pop	{fp, pc}
   1933c:	push	{fp, lr}
   19340:	mov	fp, sp
   19344:	sub	sp, sp, #8
   19348:	str	r0, [sp, #4]
   1934c:	ldr	r0, [sp, #4]
   19350:	movw	r1, #1
   19354:	bl	19360 <__assert_fail@plt+0x7f50>
   19358:	mov	sp, fp
   1935c:	pop	{fp, pc}
   19360:	push	{fp, lr}
   19364:	mov	fp, sp
   19368:	sub	sp, sp, #8
   1936c:	str	r0, [sp, #4]
   19370:	str	r1, [sp]
   19374:	ldr	r0, [sp, #4]
   19378:	ldr	r1, [sp]
   1937c:	bl	1b888 <__assert_fail@plt+0xa478>
   19380:	bl	16778 <__assert_fail@plt+0x5368>
   19384:	mov	sp, fp
   19388:	pop	{fp, pc}
   1938c:	push	{fp, lr}
   19390:	mov	fp, sp
   19394:	sub	sp, sp, #16
   19398:	str	r0, [fp, #-4]
   1939c:	str	r1, [sp, #8]
   193a0:	ldr	r0, [sp, #8]
   193a4:	bl	16754 <__assert_fail@plt+0x5344>
   193a8:	ldr	r1, [fp, #-4]
   193ac:	ldr	r2, [sp, #8]
   193b0:	str	r0, [sp, #4]
   193b4:	bl	111b8 <memcpy@plt>
   193b8:	ldr	r0, [sp, #4]
   193bc:	mov	sp, fp
   193c0:	pop	{fp, pc}
   193c4:	push	{fp, lr}
   193c8:	mov	fp, sp
   193cc:	sub	sp, sp, #16
   193d0:	str	r0, [fp, #-4]
   193d4:	str	r1, [sp, #8]
   193d8:	ldr	r0, [sp, #8]
   193dc:	bl	167a8 <__assert_fail@plt+0x5398>
   193e0:	ldr	r1, [fp, #-4]
   193e4:	ldr	r2, [sp, #8]
   193e8:	str	r0, [sp, #4]
   193ec:	bl	111b8 <memcpy@plt>
   193f0:	ldr	r0, [sp, #4]
   193f4:	mov	sp, fp
   193f8:	pop	{fp, pc}
   193fc:	push	{fp, lr}
   19400:	mov	fp, sp
   19404:	sub	sp, sp, #16
   19408:	str	r0, [fp, #-4]
   1940c:	str	r1, [sp, #8]
   19410:	ldr	r0, [sp, #8]
   19414:	add	r0, r0, #1
   19418:	bl	167a8 <__assert_fail@plt+0x5398>
   1941c:	str	r0, [sp, #4]
   19420:	ldr	r0, [sp, #4]
   19424:	ldr	r1, [sp, #8]
   19428:	add	r0, r0, r1
   1942c:	movw	r1, #0
   19430:	strb	r1, [r0]
   19434:	ldr	r0, [sp, #4]
   19438:	ldr	r1, [fp, #-4]
   1943c:	ldr	r2, [sp, #8]
   19440:	str	r0, [sp]
   19444:	bl	111b8 <memcpy@plt>
   19448:	ldr	r0, [sp]
   1944c:	mov	sp, fp
   19450:	pop	{fp, pc}
   19454:	push	{fp, lr}
   19458:	mov	fp, sp
   1945c:	sub	sp, sp, #8
   19460:	str	r0, [sp, #4]
   19464:	ldr	r0, [sp, #4]
   19468:	ldr	r1, [sp, #4]
   1946c:	str	r0, [sp]
   19470:	mov	r0, r1
   19474:	bl	112e4 <strlen@plt>
   19478:	add	r1, r0, #1
   1947c:	ldr	r0, [sp]
   19480:	bl	1938c <__assert_fail@plt+0x7f7c>
   19484:	mov	sp, fp
   19488:	pop	{fp, pc}
   1948c:	push	{fp, lr}
   19490:	mov	fp, sp
   19494:	sub	sp, sp, #8
   19498:	movw	r0, #61728	; 0xf120
   1949c:	movt	r0, #2
   194a0:	ldr	r0, [r0]
   194a4:	movw	r1, #60324	; 0xeba4
   194a8:	movt	r1, #1
   194ac:	str	r0, [sp, #4]
   194b0:	mov	r0, r1
   194b4:	bl	112cc <gettext@plt>
   194b8:	ldr	r1, [sp, #4]
   194bc:	str	r0, [sp]
   194c0:	mov	r0, r1
   194c4:	movw	r1, #0
   194c8:	movw	r2, #59233	; 0xe761
   194cc:	movt	r2, #1
   194d0:	ldr	r3, [sp]
   194d4:	bl	11260 <error@plt>
   194d8:	bl	113e0 <abort@plt>
   194dc:	push	{fp, lr}
   194e0:	mov	fp, sp
   194e4:	sub	sp, sp, #16
   194e8:	str	r0, [fp, #-4]
   194ec:	str	r1, [sp, #8]
   194f0:	str	r2, [sp, #4]
   194f4:	ldr	r0, [fp, #-4]
   194f8:	ldr	r1, [sp, #8]
   194fc:	ldr	r2, [sp, #4]
   19500:	bl	1baa4 <__assert_fail@plt+0xa694>
   19504:	str	r0, [sp]
   19508:	ldr	r0, [sp]
   1950c:	cmn	r0, #1
   19510:	bne	19528 <__assert_fail@plt+0x8118>
   19514:	bl	11308 <__errno_location@plt>
   19518:	ldr	r0, [r0]
   1951c:	cmp	r0, #12
   19520:	bne	19528 <__assert_fail@plt+0x8118>
   19524:	bl	1948c <__assert_fail@plt+0x807c>
   19528:	ldr	r0, [sp]
   1952c:	mov	sp, fp
   19530:	pop	{fp, pc}
   19534:	push	{fp, lr}
   19538:	mov	fp, sp
   1953c:	sub	sp, sp, #72	; 0x48
   19540:	ldr	ip, [fp, #8]
   19544:	str	r0, [fp, #-8]
   19548:	str	r1, [fp, #-12]
   1954c:	str	r2, [fp, #-16]
   19550:	str	r3, [fp, #-20]	; 0xffffffec
   19554:	movw	r0, #0
   19558:	str	r0, [sp, #36]	; 0x24
   1955c:	ldr	r1, [fp, #-16]
   19560:	cmp	r0, r1
   19564:	bgt	19578 <__assert_fail@plt+0x8168>
   19568:	ldr	r0, [fp, #-16]
   1956c:	cmp	r0, #36	; 0x24
   19570:	bgt	19578 <__assert_fail@plt+0x8168>
   19574:	b	19598 <__assert_fail@plt+0x8188>
   19578:	movw	r0, #60341	; 0xebb5
   1957c:	movt	r0, #1
   19580:	movw	r1, #60379	; 0xebdb
   19584:	movt	r1, #1
   19588:	movw	r2, #85	; 0x55
   1958c:	movw	r3, #60395	; 0xebeb
   19590:	movt	r3, #1
   19594:	bl	11410 <__assert_fail@plt>
   19598:	ldr	r0, [fp, #-12]
   1959c:	movw	r1, #0
   195a0:	cmp	r0, r1
   195a4:	beq	195b4 <__assert_fail@plt+0x81a4>
   195a8:	ldr	r0, [fp, #-12]
   195ac:	str	r0, [sp, #12]
   195b0:	b	195c0 <__assert_fail@plt+0x81b0>
   195b4:	sub	r0, fp, #24
   195b8:	str	r0, [sp, #12]
   195bc:	b	195c0 <__assert_fail@plt+0x81b0>
   195c0:	ldr	r0, [sp, #12]
   195c4:	str	r0, [fp, #-28]	; 0xffffffe4
   195c8:	bl	11308 <__errno_location@plt>
   195cc:	movw	r1, #0
   195d0:	str	r1, [r0]
   195d4:	ldr	r0, [fp, #-8]
   195d8:	str	r0, [sp, #32]
   195dc:	ldr	r0, [sp, #32]
   195e0:	ldrb	r0, [r0]
   195e4:	strb	r0, [sp, #31]
   195e8:	bl	112b4 <__ctype_b_loc@plt>
   195ec:	ldr	r0, [r0]
   195f0:	ldrb	r1, [sp, #31]
   195f4:	mov	r2, r1
   195f8:	add	r0, r0, r1, lsl #1
   195fc:	ldrh	r0, [r0]
   19600:	and	r0, r0, #8192	; 0x2000
   19604:	cmp	r0, #0
   19608:	beq	19624 <__assert_fail@plt+0x8214>
   1960c:	ldr	r0, [sp, #32]
   19610:	add	r1, r0, #1
   19614:	str	r1, [sp, #32]
   19618:	ldrb	r0, [r0, #1]
   1961c:	strb	r0, [sp, #31]
   19620:	b	195e8 <__assert_fail@plt+0x81d8>
   19624:	ldrb	r0, [sp, #31]
   19628:	cmp	r0, #45	; 0x2d
   1962c:	bne	1963c <__assert_fail@plt+0x822c>
   19630:	movw	r0, #4
   19634:	str	r0, [fp, #-4]
   19638:	b	19b8c <__assert_fail@plt+0x877c>
   1963c:	ldr	r0, [fp, #-8]
   19640:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19644:	ldr	r2, [fp, #-16]
   19648:	bl	112d8 <strtoul@plt>
   1964c:	str	r0, [fp, #-32]	; 0xffffffe0
   19650:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19654:	ldr	r0, [r0]
   19658:	ldr	r1, [fp, #-8]
   1965c:	cmp	r0, r1
   19660:	bne	196c4 <__assert_fail@plt+0x82b4>
   19664:	ldr	r0, [fp, #8]
   19668:	movw	r1, #0
   1966c:	cmp	r0, r1
   19670:	beq	196b4 <__assert_fail@plt+0x82a4>
   19674:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19678:	ldr	r0, [r0]
   1967c:	ldrb	r0, [r0]
   19680:	cmp	r0, #0
   19684:	beq	196b4 <__assert_fail@plt+0x82a4>
   19688:	ldr	r0, [fp, #8]
   1968c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19690:	ldr	r1, [r1]
   19694:	ldrb	r1, [r1]
   19698:	bl	112f0 <strchr@plt>
   1969c:	movw	r1, #0
   196a0:	cmp	r0, r1
   196a4:	beq	196b4 <__assert_fail@plt+0x82a4>
   196a8:	movw	r0, #1
   196ac:	str	r0, [fp, #-32]	; 0xffffffe0
   196b0:	b	196c0 <__assert_fail@plt+0x82b0>
   196b4:	movw	r0, #4
   196b8:	str	r0, [fp, #-4]
   196bc:	b	19b8c <__assert_fail@plt+0x877c>
   196c0:	b	196fc <__assert_fail@plt+0x82ec>
   196c4:	bl	11308 <__errno_location@plt>
   196c8:	ldr	r0, [r0]
   196cc:	cmp	r0, #0
   196d0:	beq	196f8 <__assert_fail@plt+0x82e8>
   196d4:	bl	11308 <__errno_location@plt>
   196d8:	ldr	r0, [r0]
   196dc:	cmp	r0, #34	; 0x22
   196e0:	beq	196f0 <__assert_fail@plt+0x82e0>
   196e4:	movw	r0, #4
   196e8:	str	r0, [fp, #-4]
   196ec:	b	19b8c <__assert_fail@plt+0x877c>
   196f0:	movw	r0, #1
   196f4:	str	r0, [sp, #36]	; 0x24
   196f8:	b	196fc <__assert_fail@plt+0x82ec>
   196fc:	ldr	r0, [fp, #8]
   19700:	movw	r1, #0
   19704:	cmp	r0, r1
   19708:	bne	19724 <__assert_fail@plt+0x8314>
   1970c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19710:	ldr	r1, [fp, #-20]	; 0xffffffec
   19714:	str	r0, [r1]
   19718:	ldr	r0, [sp, #36]	; 0x24
   1971c:	str	r0, [fp, #-4]
   19720:	b	19b8c <__assert_fail@plt+0x877c>
   19724:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19728:	ldr	r0, [r0]
   1972c:	ldrb	r0, [r0]
   19730:	cmp	r0, #0
   19734:	beq	19b78 <__assert_fail@plt+0x8768>
   19738:	movw	r0, #1024	; 0x400
   1973c:	str	r0, [sp, #24]
   19740:	movw	r0, #1
   19744:	str	r0, [sp, #20]
   19748:	ldr	r0, [fp, #8]
   1974c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19750:	ldr	r1, [r1]
   19754:	ldrb	r1, [r1]
   19758:	bl	112f0 <strchr@plt>
   1975c:	movw	r1, #0
   19760:	cmp	r0, r1
   19764:	bne	19784 <__assert_fail@plt+0x8374>
   19768:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1976c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19770:	str	r0, [r1]
   19774:	ldr	r0, [sp, #36]	; 0x24
   19778:	orr	r0, r0, #2
   1977c:	str	r0, [fp, #-4]
   19780:	b	19b8c <__assert_fail@plt+0x877c>
   19784:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19788:	ldr	r0, [r0]
   1978c:	ldrb	r0, [r0]
   19790:	sub	r0, r0, #69	; 0x45
   19794:	cmp	r0, #47	; 0x2f
   19798:	str	r0, [sp, #8]
   1979c:	bhi	19908 <__assert_fail@plt+0x84f8>
   197a0:	add	r0, pc, #8
   197a4:	ldr	r1, [sp, #8]
   197a8:	ldr	r0, [r0, r1, lsl #2]
   197ac:	mov	pc, r0
   197b0:	andeq	r9, r1, r0, ror r8
   197b4:	andeq	r9, r1, r8, lsl #18
   197b8:	andeq	r9, r1, r0, ror r8
   197bc:	andeq	r9, r1, r8, lsl #18
   197c0:	andeq	r9, r1, r8, lsl #18
   197c4:	andeq	r9, r1, r8, lsl #18
   197c8:	andeq	r9, r1, r0, ror r8
   197cc:	andeq	r9, r1, r8, lsl #18
   197d0:	andeq	r9, r1, r0, ror r8
   197d4:	andeq	r9, r1, r8, lsl #18
   197d8:	andeq	r9, r1, r8, lsl #18
   197dc:	andeq	r9, r1, r0, ror r8
   197e0:	andeq	r9, r1, r8, lsl #18
   197e4:	andeq	r9, r1, r8, lsl #18
   197e8:	andeq	r9, r1, r8, lsl #18
   197ec:	andeq	r9, r1, r0, ror r8
   197f0:	andeq	r9, r1, r8, lsl #18
   197f4:	andeq	r9, r1, r8, lsl #18
   197f8:	andeq	r9, r1, r8, lsl #18
   197fc:	andeq	r9, r1, r8, lsl #18
   19800:	andeq	r9, r1, r0, ror r8
   19804:	andeq	r9, r1, r0, ror r8
   19808:	andeq	r9, r1, r8, lsl #18
   1980c:	andeq	r9, r1, r8, lsl #18
   19810:	andeq	r9, r1, r8, lsl #18
   19814:	andeq	r9, r1, r8, lsl #18
   19818:	andeq	r9, r1, r8, lsl #18
   1981c:	andeq	r9, r1, r8, lsl #18
   19820:	andeq	r9, r1, r8, lsl #18
   19824:	andeq	r9, r1, r8, lsl #18
   19828:	andeq	r9, r1, r8, lsl #18
   1982c:	andeq	r9, r1, r8, lsl #18
   19830:	andeq	r9, r1, r8, lsl #18
   19834:	andeq	r9, r1, r8, lsl #18
   19838:	andeq	r9, r1, r0, ror r8
   1983c:	andeq	r9, r1, r8, lsl #18
   19840:	andeq	r9, r1, r8, lsl #18
   19844:	andeq	r9, r1, r8, lsl #18
   19848:	andeq	r9, r1, r0, ror r8
   1984c:	andeq	r9, r1, r8, lsl #18
   19850:	andeq	r9, r1, r0, ror r8
   19854:	andeq	r9, r1, r8, lsl #18
   19858:	andeq	r9, r1, r8, lsl #18
   1985c:	andeq	r9, r1, r8, lsl #18
   19860:	andeq	r9, r1, r8, lsl #18
   19864:	andeq	r9, r1, r8, lsl #18
   19868:	andeq	r9, r1, r8, lsl #18
   1986c:	andeq	r9, r1, r0, ror r8
   19870:	ldr	r0, [fp, #8]
   19874:	movw	r1, #48	; 0x30
   19878:	bl	112f0 <strchr@plt>
   1987c:	movw	r1, #0
   19880:	cmp	r0, r1
   19884:	beq	19904 <__assert_fail@plt+0x84f4>
   19888:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1988c:	ldr	r0, [r0]
   19890:	ldrb	r0, [r0, #1]
   19894:	mov	r1, r0
   19898:	cmp	r0, #66	; 0x42
   1989c:	str	r1, [sp, #4]
   198a0:	beq	198ec <__assert_fail@plt+0x84dc>
   198a4:	b	198a8 <__assert_fail@plt+0x8498>
   198a8:	ldr	r0, [sp, #4]
   198ac:	cmp	r0, #68	; 0x44
   198b0:	beq	198ec <__assert_fail@plt+0x84dc>
   198b4:	b	198b8 <__assert_fail@plt+0x84a8>
   198b8:	ldr	r0, [sp, #4]
   198bc:	cmp	r0, #105	; 0x69
   198c0:	bne	19900 <__assert_fail@plt+0x84f0>
   198c4:	b	198c8 <__assert_fail@plt+0x84b8>
   198c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   198cc:	ldr	r0, [r0]
   198d0:	ldrb	r0, [r0, #2]
   198d4:	cmp	r0, #66	; 0x42
   198d8:	bne	198e8 <__assert_fail@plt+0x84d8>
   198dc:	ldr	r0, [sp, #20]
   198e0:	add	r0, r0, #2
   198e4:	str	r0, [sp, #20]
   198e8:	b	19900 <__assert_fail@plt+0x84f0>
   198ec:	movw	r0, #1000	; 0x3e8
   198f0:	str	r0, [sp, #24]
   198f4:	ldr	r0, [sp, #20]
   198f8:	add	r0, r0, #1
   198fc:	str	r0, [sp, #20]
   19900:	b	19904 <__assert_fail@plt+0x84f4>
   19904:	b	19908 <__assert_fail@plt+0x84f8>
   19908:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1990c:	ldr	r0, [r0]
   19910:	ldrb	r0, [r0]
   19914:	sub	r0, r0, #66	; 0x42
   19918:	cmp	r0, #53	; 0x35
   1991c:	str	r0, [sp]
   19920:	bhi	19b14 <__assert_fail@plt+0x8704>
   19924:	add	r0, pc, #8
   19928:	ldr	r1, [sp]
   1992c:	ldr	r0, [r0, r1, lsl #2]
   19930:	mov	pc, r0
   19934:	andeq	r9, r1, r0, lsr #20
   19938:	andeq	r9, r1, r4, lsl fp
   1993c:	andeq	r9, r1, r4, lsl fp
   19940:	andeq	r9, r1, r0, asr #20
   19944:	andeq	r9, r1, r4, lsl fp
   19948:	andeq	r9, r1, r8, asr sl
   1994c:	andeq	r9, r1, r4, lsl fp
   19950:	andeq	r9, r1, r4, lsl fp
   19954:	andeq	r9, r1, r4, lsl fp
   19958:	andeq	r9, r1, r0, ror sl
   1995c:	andeq	r9, r1, r4, lsl fp
   19960:	andeq	r9, r1, r8, lsl #21
   19964:	andeq	r9, r1, r4, lsl fp
   19968:	andeq	r9, r1, r4, lsl fp
   1996c:	andeq	r9, r1, r0, lsr #21
   19970:	andeq	r9, r1, r4, lsl fp
   19974:	andeq	r9, r1, r4, lsl fp
   19978:	andeq	r9, r1, r4, lsl fp
   1997c:			; <UNDEFINED> instruction: 0x00019ab8
   19980:	andeq	r9, r1, r4, lsl fp
   19984:	andeq	r9, r1, r4, lsl fp
   19988:	andeq	r9, r1, r4, lsl fp
   1998c:	andeq	r9, r1, r4, lsl fp
   19990:	andeq	r9, r1, r4, ror #21
   19994:	strdeq	r9, [r1], -ip
   19998:	andeq	r9, r1, r4, lsl fp
   1999c:	andeq	r9, r1, r4, lsl fp
   199a0:	andeq	r9, r1, r4, lsl fp
   199a4:	andeq	r9, r1, r4, lsl fp
   199a8:	andeq	r9, r1, r4, lsl fp
   199ac:	andeq	r9, r1, r4, lsl fp
   199b0:	andeq	r9, r1, r4, lsl fp
   199b4:	andeq	r9, r1, ip, lsl #20
   199b8:	andeq	r9, r1, r4, lsr sl
   199bc:	andeq	r9, r1, r4, lsl fp
   199c0:	andeq	r9, r1, r4, lsl fp
   199c4:	andeq	r9, r1, r4, lsl fp
   199c8:	andeq	r9, r1, r8, asr sl
   199cc:	andeq	r9, r1, r4, lsl fp
   199d0:	andeq	r9, r1, r4, lsl fp
   199d4:	andeq	r9, r1, r4, lsl fp
   199d8:	andeq	r9, r1, r0, ror sl
   199dc:	andeq	r9, r1, r4, lsl fp
   199e0:	andeq	r9, r1, r8, lsl #21
   199e4:	andeq	r9, r1, r4, lsl fp
   199e8:	andeq	r9, r1, r4, lsl fp
   199ec:	andeq	r9, r1, r4, lsl fp
   199f0:	andeq	r9, r1, r4, lsl fp
   199f4:	andeq	r9, r1, r4, lsl fp
   199f8:	andeq	r9, r1, r4, lsl fp
   199fc:			; <UNDEFINED> instruction: 0x00019ab8
   19a00:	andeq	r9, r1, r4, lsl fp
   19a04:	andeq	r9, r1, r4, lsl fp
   19a08:	ldrdeq	r9, [r1], -r0
   19a0c:	sub	r0, fp, #32
   19a10:	movw	r1, #512	; 0x200
   19a14:	bl	19b98 <__assert_fail@plt+0x8788>
   19a18:	str	r0, [sp, #16]
   19a1c:	b	19b30 <__assert_fail@plt+0x8720>
   19a20:	sub	r0, fp, #32
   19a24:	movw	r1, #1024	; 0x400
   19a28:	bl	19b98 <__assert_fail@plt+0x8788>
   19a2c:	str	r0, [sp, #16]
   19a30:	b	19b30 <__assert_fail@plt+0x8720>
   19a34:	movw	r0, #0
   19a38:	str	r0, [sp, #16]
   19a3c:	b	19b30 <__assert_fail@plt+0x8720>
   19a40:	ldr	r1, [sp, #24]
   19a44:	sub	r0, fp, #32
   19a48:	movw	r2, #6
   19a4c:	bl	1b18c <__assert_fail@plt+0x9d7c>
   19a50:	str	r0, [sp, #16]
   19a54:	b	19b30 <__assert_fail@plt+0x8720>
   19a58:	ldr	r1, [sp, #24]
   19a5c:	sub	r0, fp, #32
   19a60:	movw	r2, #3
   19a64:	bl	1b18c <__assert_fail@plt+0x9d7c>
   19a68:	str	r0, [sp, #16]
   19a6c:	b	19b30 <__assert_fail@plt+0x8720>
   19a70:	ldr	r1, [sp, #24]
   19a74:	sub	r0, fp, #32
   19a78:	movw	r2, #1
   19a7c:	bl	1b18c <__assert_fail@plt+0x9d7c>
   19a80:	str	r0, [sp, #16]
   19a84:	b	19b30 <__assert_fail@plt+0x8720>
   19a88:	ldr	r1, [sp, #24]
   19a8c:	sub	r0, fp, #32
   19a90:	movw	r2, #2
   19a94:	bl	1b18c <__assert_fail@plt+0x9d7c>
   19a98:	str	r0, [sp, #16]
   19a9c:	b	19b30 <__assert_fail@plt+0x8720>
   19aa0:	ldr	r1, [sp, #24]
   19aa4:	sub	r0, fp, #32
   19aa8:	movw	r2, #5
   19aac:	bl	1b18c <__assert_fail@plt+0x9d7c>
   19ab0:	str	r0, [sp, #16]
   19ab4:	b	19b30 <__assert_fail@plt+0x8720>
   19ab8:	ldr	r1, [sp, #24]
   19abc:	sub	r0, fp, #32
   19ac0:	movw	r2, #4
   19ac4:	bl	1b18c <__assert_fail@plt+0x9d7c>
   19ac8:	str	r0, [sp, #16]
   19acc:	b	19b30 <__assert_fail@plt+0x8720>
   19ad0:	sub	r0, fp, #32
   19ad4:	movw	r1, #2
   19ad8:	bl	19b98 <__assert_fail@plt+0x8788>
   19adc:	str	r0, [sp, #16]
   19ae0:	b	19b30 <__assert_fail@plt+0x8720>
   19ae4:	ldr	r1, [sp, #24]
   19ae8:	sub	r0, fp, #32
   19aec:	movw	r2, #8
   19af0:	bl	1b18c <__assert_fail@plt+0x9d7c>
   19af4:	str	r0, [sp, #16]
   19af8:	b	19b30 <__assert_fail@plt+0x8720>
   19afc:	ldr	r1, [sp, #24]
   19b00:	sub	r0, fp, #32
   19b04:	movw	r2, #7
   19b08:	bl	1b18c <__assert_fail@plt+0x9d7c>
   19b0c:	str	r0, [sp, #16]
   19b10:	b	19b30 <__assert_fail@plt+0x8720>
   19b14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b18:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b1c:	str	r0, [r1]
   19b20:	ldr	r0, [sp, #36]	; 0x24
   19b24:	orr	r0, r0, #2
   19b28:	str	r0, [fp, #-4]
   19b2c:	b	19b8c <__assert_fail@plt+0x877c>
   19b30:	ldr	r0, [sp, #16]
   19b34:	ldr	r1, [sp, #36]	; 0x24
   19b38:	orr	r0, r1, r0
   19b3c:	str	r0, [sp, #36]	; 0x24
   19b40:	ldr	r0, [sp, #20]
   19b44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19b48:	ldr	r2, [r1]
   19b4c:	add	r0, r2, r0
   19b50:	str	r0, [r1]
   19b54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19b58:	ldr	r0, [r0]
   19b5c:	ldrsb	r0, [r0]
   19b60:	cmp	r0, #0
   19b64:	beq	19b74 <__assert_fail@plt+0x8764>
   19b68:	ldr	r0, [sp, #36]	; 0x24
   19b6c:	orr	r0, r0, #2
   19b70:	str	r0, [sp, #36]	; 0x24
   19b74:	b	19b78 <__assert_fail@plt+0x8768>
   19b78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b80:	str	r0, [r1]
   19b84:	ldr	r0, [sp, #36]	; 0x24
   19b88:	str	r0, [fp, #-4]
   19b8c:	ldr	r0, [fp, #-4]
   19b90:	mov	sp, fp
   19b94:	pop	{fp, pc}
   19b98:	push	{fp, lr}
   19b9c:	mov	fp, sp
   19ba0:	sub	sp, sp, #104	; 0x68
   19ba4:	str	r0, [fp, #-8]
   19ba8:	str	r1, [fp, #-12]
   19bac:	b	19fe0 <__assert_fail@plt+0x8bd0>
   19bb0:	b	19dc8 <__assert_fail@plt+0x89b8>
   19bb4:	ldr	r0, [fp, #-12]
   19bb8:	cmp	r0, #0
   19bbc:	bge	19cec <__assert_fail@plt+0x88dc>
   19bc0:	ldr	r0, [fp, #-8]
   19bc4:	ldr	r0, [r0]
   19bc8:	cmp	r0, #0
   19bcc:	bcs	19c60 <__assert_fail@plt+0x8850>
   19bd0:	b	19bd4 <__assert_fail@plt+0x87c4>
   19bd4:	ldr	r0, [fp, #-8]
   19bd8:	ldr	r0, [r0]
   19bdc:	ldr	r1, [fp, #-12]
   19be0:	movw	r2, #127	; 0x7f
   19be4:	sdiv	r1, r2, r1
   19be8:	cmp	r0, r1
   19bec:	bcc	19d90 <__assert_fail@plt+0x8980>
   19bf0:	b	19dac <__assert_fail@plt+0x899c>
   19bf4:	b	19bf8 <__assert_fail@plt+0x87e8>
   19bf8:	ldr	r0, [pc, #4072]	; 1abe8 <__assert_fail@plt+0x97d8>
   19bfc:	ldr	r1, [fp, #-12]
   19c00:	cmp	r1, r0
   19c04:	blt	19c1c <__assert_fail@plt+0x880c>
   19c08:	b	19c28 <__assert_fail@plt+0x8818>
   19c0c:	ldr	r0, [fp, #-12]
   19c10:	movw	r1, #0
   19c14:	cmp	r1, r0
   19c18:	bge	19c28 <__assert_fail@plt+0x8818>
   19c1c:	movw	r0, #0
   19c20:	str	r0, [fp, #-20]	; 0xffffffec
   19c24:	b	19c40 <__assert_fail@plt+0x8830>
   19c28:	ldr	r0, [fp, #-12]
   19c2c:	movw	r1, #0
   19c30:	sub	r0, r1, r0
   19c34:	movw	r1, #127	; 0x7f
   19c38:	sdiv	r0, r1, r0
   19c3c:	str	r0, [fp, #-20]	; 0xffffffec
   19c40:	ldr	r0, [fp, #-20]	; 0xffffffec
   19c44:	ldr	r1, [fp, #-8]
   19c48:	ldr	r1, [r1]
   19c4c:	mvn	r2, #0
   19c50:	sub	r1, r2, r1
   19c54:	cmp	r0, r1
   19c58:	bls	19d90 <__assert_fail@plt+0x8980>
   19c5c:	b	19dac <__assert_fail@plt+0x899c>
   19c60:	b	19c64 <__assert_fail@plt+0x8854>
   19c64:	b	19ccc <__assert_fail@plt+0x88bc>
   19c68:	b	19ccc <__assert_fail@plt+0x88bc>
   19c6c:	ldr	r0, [fp, #-12]
   19c70:	cmn	r0, #1
   19c74:	bne	19ccc <__assert_fail@plt+0x88bc>
   19c78:	b	19c9c <__assert_fail@plt+0x888c>
   19c7c:	ldr	r0, [fp, #-8]
   19c80:	ldr	r0, [r0]
   19c84:	mvn	r1, #127	; 0x7f
   19c88:	add	r0, r0, r1
   19c8c:	movw	r1, #0
   19c90:	cmp	r1, r0
   19c94:	bcc	19d90 <__assert_fail@plt+0x8980>
   19c98:	b	19dac <__assert_fail@plt+0x899c>
   19c9c:	ldr	r0, [fp, #-8]
   19ca0:	ldr	r0, [r0]
   19ca4:	movw	r1, #0
   19ca8:	cmp	r1, r0
   19cac:	bcs	19dac <__assert_fail@plt+0x899c>
   19cb0:	ldr	r0, [fp, #-8]
   19cb4:	ldr	r0, [r0]
   19cb8:	sub	r0, r0, #1
   19cbc:	movw	r1, #127	; 0x7f
   19cc0:	cmp	r1, r0
   19cc4:	bcc	19d90 <__assert_fail@plt+0x8980>
   19cc8:	b	19dac <__assert_fail@plt+0x899c>
   19ccc:	ldr	r0, [fp, #-12]
   19cd0:	mvn	r1, #127	; 0x7f
   19cd4:	sdiv	r0, r1, r0
   19cd8:	ldr	r1, [fp, #-8]
   19cdc:	ldr	r1, [r1]
   19ce0:	cmp	r0, r1
   19ce4:	bcc	19d90 <__assert_fail@plt+0x8980>
   19ce8:	b	19dac <__assert_fail@plt+0x899c>
   19cec:	ldr	r0, [fp, #-12]
   19cf0:	cmp	r0, #0
   19cf4:	bne	19cfc <__assert_fail@plt+0x88ec>
   19cf8:	b	19dac <__assert_fail@plt+0x899c>
   19cfc:	ldr	r0, [fp, #-8]
   19d00:	ldr	r0, [r0]
   19d04:	cmp	r0, #0
   19d08:	bcs	19d74 <__assert_fail@plt+0x8964>
   19d0c:	ldr	r0, [fp, #-8]
   19d10:	ldr	r0, [r0]
   19d14:	cmn	r0, #1
   19d18:	bne	19d54 <__assert_fail@plt+0x8944>
   19d1c:	b	19d20 <__assert_fail@plt+0x8910>
   19d20:	ldr	r0, [fp, #-12]
   19d24:	mvn	r1, #127	; 0x7f
   19d28:	add	r0, r0, r1
   19d2c:	movw	r1, #0
   19d30:	cmp	r1, r0
   19d34:	blt	19d90 <__assert_fail@plt+0x8980>
   19d38:	b	19dac <__assert_fail@plt+0x899c>
   19d3c:	ldr	r0, [fp, #-12]
   19d40:	sub	r0, r0, #1
   19d44:	movw	r1, #127	; 0x7f
   19d48:	cmp	r1, r0
   19d4c:	blt	19d90 <__assert_fail@plt+0x8980>
   19d50:	b	19dac <__assert_fail@plt+0x899c>
   19d54:	ldr	r0, [fp, #-8]
   19d58:	ldr	r0, [r0]
   19d5c:	mvn	r1, #127	; 0x7f
   19d60:	udiv	r0, r1, r0
   19d64:	ldr	r1, [fp, #-12]
   19d68:	cmp	r0, r1
   19d6c:	bcc	19d90 <__assert_fail@plt+0x8980>
   19d70:	b	19dac <__assert_fail@plt+0x899c>
   19d74:	ldr	r0, [fp, #-12]
   19d78:	movw	r1, #127	; 0x7f
   19d7c:	sdiv	r0, r1, r0
   19d80:	ldr	r1, [fp, #-8]
   19d84:	ldr	r1, [r1]
   19d88:	cmp	r0, r1
   19d8c:	bcs	19dac <__assert_fail@plt+0x899c>
   19d90:	ldr	r0, [fp, #-8]
   19d94:	ldr	r0, [r0]
   19d98:	ldr	r1, [fp, #-12]
   19d9c:	mul	r0, r0, r1
   19da0:	sxtb	r0, r0
   19da4:	str	r0, [fp, #-16]
   19da8:	b	1b128 <__assert_fail@plt+0x9d18>
   19dac:	ldr	r0, [fp, #-8]
   19db0:	ldr	r0, [r0]
   19db4:	ldr	r1, [fp, #-12]
   19db8:	mul	r0, r0, r1
   19dbc:	sxtb	r0, r0
   19dc0:	str	r0, [fp, #-16]
   19dc4:	b	1b15c <__assert_fail@plt+0x9d4c>
   19dc8:	ldr	r0, [fp, #-12]
   19dcc:	cmp	r0, #0
   19dd0:	bge	19efc <__assert_fail@plt+0x8aec>
   19dd4:	ldr	r0, [fp, #-8]
   19dd8:	ldr	r0, [r0]
   19ddc:	cmp	r0, #0
   19de0:	bcs	19e74 <__assert_fail@plt+0x8a64>
   19de4:	b	19de8 <__assert_fail@plt+0x89d8>
   19de8:	ldr	r0, [fp, #-8]
   19dec:	ldr	r0, [r0]
   19df0:	ldr	r1, [fp, #-12]
   19df4:	movw	r2, #255	; 0xff
   19df8:	sdiv	r1, r2, r1
   19dfc:	cmp	r0, r1
   19e00:	bcc	19fa8 <__assert_fail@plt+0x8b98>
   19e04:	b	19fc4 <__assert_fail@plt+0x8bb4>
   19e08:	b	19e0c <__assert_fail@plt+0x89fc>
   19e0c:	ldr	r0, [pc, #3540]	; 1abe8 <__assert_fail@plt+0x97d8>
   19e10:	ldr	r1, [fp, #-12]
   19e14:	cmp	r1, r0
   19e18:	blt	19e30 <__assert_fail@plt+0x8a20>
   19e1c:	b	19e3c <__assert_fail@plt+0x8a2c>
   19e20:	ldr	r0, [fp, #-12]
   19e24:	movw	r1, #0
   19e28:	cmp	r1, r0
   19e2c:	bge	19e3c <__assert_fail@plt+0x8a2c>
   19e30:	movw	r0, #0
   19e34:	str	r0, [fp, #-24]	; 0xffffffe8
   19e38:	b	19e54 <__assert_fail@plt+0x8a44>
   19e3c:	ldr	r0, [fp, #-12]
   19e40:	movw	r1, #0
   19e44:	sub	r0, r1, r0
   19e48:	movw	r1, #255	; 0xff
   19e4c:	sdiv	r0, r1, r0
   19e50:	str	r0, [fp, #-24]	; 0xffffffe8
   19e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e58:	ldr	r1, [fp, #-8]
   19e5c:	ldr	r1, [r1]
   19e60:	mvn	r2, #0
   19e64:	sub	r1, r2, r1
   19e68:	cmp	r0, r1
   19e6c:	bls	19fa8 <__assert_fail@plt+0x8b98>
   19e70:	b	19fc4 <__assert_fail@plt+0x8bb4>
   19e74:	b	19e78 <__assert_fail@plt+0x8a68>
   19e78:	b	19edc <__assert_fail@plt+0x8acc>
   19e7c:	b	19edc <__assert_fail@plt+0x8acc>
   19e80:	ldr	r0, [fp, #-12]
   19e84:	cmn	r0, #1
   19e88:	bne	19edc <__assert_fail@plt+0x8acc>
   19e8c:	b	19eac <__assert_fail@plt+0x8a9c>
   19e90:	ldr	r0, [fp, #-8]
   19e94:	ldr	r0, [r0]
   19e98:	add	r0, r0, #0
   19e9c:	movw	r1, #0
   19ea0:	cmp	r1, r0
   19ea4:	bcc	19fa8 <__assert_fail@plt+0x8b98>
   19ea8:	b	19fc4 <__assert_fail@plt+0x8bb4>
   19eac:	ldr	r0, [fp, #-8]
   19eb0:	ldr	r0, [r0]
   19eb4:	movw	r1, #0
   19eb8:	cmp	r1, r0
   19ebc:	bcs	19fc4 <__assert_fail@plt+0x8bb4>
   19ec0:	ldr	r0, [fp, #-8]
   19ec4:	ldr	r0, [r0]
   19ec8:	sub	r0, r0, #1
   19ecc:	mvn	r1, #0
   19ed0:	cmp	r1, r0
   19ed4:	bcc	19fa8 <__assert_fail@plt+0x8b98>
   19ed8:	b	19fc4 <__assert_fail@plt+0x8bb4>
   19edc:	ldr	r0, [fp, #-12]
   19ee0:	movw	r1, #0
   19ee4:	sdiv	r0, r1, r0
   19ee8:	ldr	r1, [fp, #-8]
   19eec:	ldr	r1, [r1]
   19ef0:	cmp	r0, r1
   19ef4:	bcc	19fa8 <__assert_fail@plt+0x8b98>
   19ef8:	b	19fc4 <__assert_fail@plt+0x8bb4>
   19efc:	ldr	r0, [fp, #-12]
   19f00:	cmp	r0, #0
   19f04:	bne	19f0c <__assert_fail@plt+0x8afc>
   19f08:	b	19fc4 <__assert_fail@plt+0x8bb4>
   19f0c:	ldr	r0, [fp, #-8]
   19f10:	ldr	r0, [r0]
   19f14:	cmp	r0, #0
   19f18:	bcs	19f8c <__assert_fail@plt+0x8b7c>
   19f1c:	b	19f24 <__assert_fail@plt+0x8b14>
   19f20:	b	19f28 <__assert_fail@plt+0x8b18>
   19f24:	b	19f6c <__assert_fail@plt+0x8b5c>
   19f28:	ldr	r0, [fp, #-8]
   19f2c:	ldr	r0, [r0]
   19f30:	cmn	r0, #1
   19f34:	bne	19f6c <__assert_fail@plt+0x8b5c>
   19f38:	b	19f3c <__assert_fail@plt+0x8b2c>
   19f3c:	ldr	r0, [fp, #-12]
   19f40:	add	r0, r0, #0
   19f44:	movw	r1, #0
   19f48:	cmp	r1, r0
   19f4c:	blt	19fa8 <__assert_fail@plt+0x8b98>
   19f50:	b	19fc4 <__assert_fail@plt+0x8bb4>
   19f54:	ldr	r0, [fp, #-12]
   19f58:	sub	r0, r0, #1
   19f5c:	mvn	r1, #0
   19f60:	cmp	r1, r0
   19f64:	blt	19fa8 <__assert_fail@plt+0x8b98>
   19f68:	b	19fc4 <__assert_fail@plt+0x8bb4>
   19f6c:	ldr	r0, [fp, #-8]
   19f70:	ldr	r0, [r0]
   19f74:	movw	r1, #0
   19f78:	udiv	r0, r1, r0
   19f7c:	ldr	r1, [fp, #-12]
   19f80:	cmp	r0, r1
   19f84:	bcc	19fa8 <__assert_fail@plt+0x8b98>
   19f88:	b	19fc4 <__assert_fail@plt+0x8bb4>
   19f8c:	ldr	r0, [fp, #-12]
   19f90:	movw	r1, #255	; 0xff
   19f94:	sdiv	r0, r1, r0
   19f98:	ldr	r1, [fp, #-8]
   19f9c:	ldr	r1, [r1]
   19fa0:	cmp	r0, r1
   19fa4:	bcs	19fc4 <__assert_fail@plt+0x8bb4>
   19fa8:	ldr	r0, [fp, #-8]
   19fac:	ldr	r0, [r0]
   19fb0:	ldr	r1, [fp, #-12]
   19fb4:	mul	r0, r0, r1
   19fb8:	and	r0, r0, #255	; 0xff
   19fbc:	str	r0, [fp, #-16]
   19fc0:	b	1b128 <__assert_fail@plt+0x9d18>
   19fc4:	ldr	r0, [fp, #-8]
   19fc8:	ldr	r0, [r0]
   19fcc:	ldr	r1, [fp, #-12]
   19fd0:	mul	r0, r0, r1
   19fd4:	and	r0, r0, #255	; 0xff
   19fd8:	str	r0, [fp, #-16]
   19fdc:	b	1b15c <__assert_fail@plt+0x9d4c>
   19fe0:	b	1a414 <__assert_fail@plt+0x9004>
   19fe4:	b	1a1fc <__assert_fail@plt+0x8dec>
   19fe8:	ldr	r0, [fp, #-12]
   19fec:	cmp	r0, #0
   19ff0:	bge	1a120 <__assert_fail@plt+0x8d10>
   19ff4:	ldr	r0, [fp, #-8]
   19ff8:	ldr	r0, [r0]
   19ffc:	cmp	r0, #0
   1a000:	bcs	1a094 <__assert_fail@plt+0x8c84>
   1a004:	b	1a008 <__assert_fail@plt+0x8bf8>
   1a008:	ldr	r0, [fp, #-8]
   1a00c:	ldr	r0, [r0]
   1a010:	ldr	r1, [fp, #-12]
   1a014:	movw	r2, #32767	; 0x7fff
   1a018:	sdiv	r1, r2, r1
   1a01c:	cmp	r0, r1
   1a020:	bcc	1a1c4 <__assert_fail@plt+0x8db4>
   1a024:	b	1a1e0 <__assert_fail@plt+0x8dd0>
   1a028:	b	1a02c <__assert_fail@plt+0x8c1c>
   1a02c:	ldr	r0, [pc, #2996]	; 1abe8 <__assert_fail@plt+0x97d8>
   1a030:	ldr	r1, [fp, #-12]
   1a034:	cmp	r1, r0
   1a038:	blt	1a050 <__assert_fail@plt+0x8c40>
   1a03c:	b	1a05c <__assert_fail@plt+0x8c4c>
   1a040:	ldr	r0, [fp, #-12]
   1a044:	movw	r1, #0
   1a048:	cmp	r1, r0
   1a04c:	bge	1a05c <__assert_fail@plt+0x8c4c>
   1a050:	movw	r0, #0
   1a054:	str	r0, [fp, #-28]	; 0xffffffe4
   1a058:	b	1a074 <__assert_fail@plt+0x8c64>
   1a05c:	ldr	r0, [fp, #-12]
   1a060:	movw	r1, #0
   1a064:	sub	r0, r1, r0
   1a068:	movw	r1, #32767	; 0x7fff
   1a06c:	sdiv	r0, r1, r0
   1a070:	str	r0, [fp, #-28]	; 0xffffffe4
   1a074:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a078:	ldr	r1, [fp, #-8]
   1a07c:	ldr	r1, [r1]
   1a080:	mvn	r2, #0
   1a084:	sub	r1, r2, r1
   1a088:	cmp	r0, r1
   1a08c:	bls	1a1c4 <__assert_fail@plt+0x8db4>
   1a090:	b	1a1e0 <__assert_fail@plt+0x8dd0>
   1a094:	b	1a098 <__assert_fail@plt+0x8c88>
   1a098:	b	1a100 <__assert_fail@plt+0x8cf0>
   1a09c:	b	1a100 <__assert_fail@plt+0x8cf0>
   1a0a0:	ldr	r0, [fp, #-12]
   1a0a4:	cmn	r0, #1
   1a0a8:	bne	1a100 <__assert_fail@plt+0x8cf0>
   1a0ac:	b	1a0d0 <__assert_fail@plt+0x8cc0>
   1a0b0:	ldr	r0, [pc, #4072]	; 1b0a0 <__assert_fail@plt+0x9c90>
   1a0b4:	ldr	r1, [fp, #-8]
   1a0b8:	ldr	r1, [r1]
   1a0bc:	add	r0, r1, r0
   1a0c0:	movw	r1, #0
   1a0c4:	cmp	r1, r0
   1a0c8:	bcc	1a1c4 <__assert_fail@plt+0x8db4>
   1a0cc:	b	1a1e0 <__assert_fail@plt+0x8dd0>
   1a0d0:	ldr	r0, [fp, #-8]
   1a0d4:	ldr	r0, [r0]
   1a0d8:	movw	r1, #0
   1a0dc:	cmp	r1, r0
   1a0e0:	bcs	1a1e0 <__assert_fail@plt+0x8dd0>
   1a0e4:	ldr	r0, [fp, #-8]
   1a0e8:	ldr	r0, [r0]
   1a0ec:	sub	r0, r0, #1
   1a0f0:	movw	r1, #32767	; 0x7fff
   1a0f4:	cmp	r1, r0
   1a0f8:	bcc	1a1c4 <__assert_fail@plt+0x8db4>
   1a0fc:	b	1a1e0 <__assert_fail@plt+0x8dd0>
   1a100:	ldr	r0, [pc, #3992]	; 1b0a0 <__assert_fail@plt+0x9c90>
   1a104:	ldr	r1, [fp, #-12]
   1a108:	sdiv	r0, r0, r1
   1a10c:	ldr	r1, [fp, #-8]
   1a110:	ldr	r1, [r1]
   1a114:	cmp	r0, r1
   1a118:	bcc	1a1c4 <__assert_fail@plt+0x8db4>
   1a11c:	b	1a1e0 <__assert_fail@plt+0x8dd0>
   1a120:	ldr	r0, [fp, #-12]
   1a124:	cmp	r0, #0
   1a128:	bne	1a130 <__assert_fail@plt+0x8d20>
   1a12c:	b	1a1e0 <__assert_fail@plt+0x8dd0>
   1a130:	ldr	r0, [fp, #-8]
   1a134:	ldr	r0, [r0]
   1a138:	cmp	r0, #0
   1a13c:	bcs	1a1a8 <__assert_fail@plt+0x8d98>
   1a140:	ldr	r0, [fp, #-8]
   1a144:	ldr	r0, [r0]
   1a148:	cmn	r0, #1
   1a14c:	bne	1a188 <__assert_fail@plt+0x8d78>
   1a150:	b	1a154 <__assert_fail@plt+0x8d44>
   1a154:	ldr	r0, [pc, #3908]	; 1b0a0 <__assert_fail@plt+0x9c90>
   1a158:	ldr	r1, [fp, #-12]
   1a15c:	add	r0, r1, r0
   1a160:	movw	r1, #0
   1a164:	cmp	r1, r0
   1a168:	blt	1a1c4 <__assert_fail@plt+0x8db4>
   1a16c:	b	1a1e0 <__assert_fail@plt+0x8dd0>
   1a170:	ldr	r0, [fp, #-12]
   1a174:	sub	r0, r0, #1
   1a178:	movw	r1, #32767	; 0x7fff
   1a17c:	cmp	r1, r0
   1a180:	blt	1a1c4 <__assert_fail@plt+0x8db4>
   1a184:	b	1a1e0 <__assert_fail@plt+0x8dd0>
   1a188:	ldr	r0, [pc, #4088]	; 1b188 <__assert_fail@plt+0x9d78>
   1a18c:	ldr	r1, [fp, #-8]
   1a190:	ldr	r1, [r1]
   1a194:	udiv	r0, r0, r1
   1a198:	ldr	r1, [fp, #-12]
   1a19c:	cmp	r0, r1
   1a1a0:	bcc	1a1c4 <__assert_fail@plt+0x8db4>
   1a1a4:	b	1a1e0 <__assert_fail@plt+0x8dd0>
   1a1a8:	ldr	r0, [fp, #-12]
   1a1ac:	movw	r1, #32767	; 0x7fff
   1a1b0:	sdiv	r0, r1, r0
   1a1b4:	ldr	r1, [fp, #-8]
   1a1b8:	ldr	r1, [r1]
   1a1bc:	cmp	r0, r1
   1a1c0:	bcs	1a1e0 <__assert_fail@plt+0x8dd0>
   1a1c4:	ldr	r0, [fp, #-8]
   1a1c8:	ldr	r0, [r0]
   1a1cc:	ldr	r1, [fp, #-12]
   1a1d0:	mul	r0, r0, r1
   1a1d4:	sxth	r0, r0
   1a1d8:	str	r0, [fp, #-16]
   1a1dc:	b	1b128 <__assert_fail@plt+0x9d18>
   1a1e0:	ldr	r0, [fp, #-8]
   1a1e4:	ldr	r0, [r0]
   1a1e8:	ldr	r1, [fp, #-12]
   1a1ec:	mul	r0, r0, r1
   1a1f0:	sxth	r0, r0
   1a1f4:	str	r0, [fp, #-16]
   1a1f8:	b	1b15c <__assert_fail@plt+0x9d4c>
   1a1fc:	ldr	r0, [fp, #-12]
   1a200:	cmp	r0, #0
   1a204:	bge	1a330 <__assert_fail@plt+0x8f20>
   1a208:	ldr	r0, [fp, #-8]
   1a20c:	ldr	r0, [r0]
   1a210:	cmp	r0, #0
   1a214:	bcs	1a2a8 <__assert_fail@plt+0x8e98>
   1a218:	b	1a21c <__assert_fail@plt+0x8e0c>
   1a21c:	ldr	r0, [fp, #-8]
   1a220:	ldr	r0, [r0]
   1a224:	ldr	r1, [fp, #-12]
   1a228:	movw	r2, #65535	; 0xffff
   1a22c:	sdiv	r1, r2, r1
   1a230:	cmp	r0, r1
   1a234:	bcc	1a3dc <__assert_fail@plt+0x8fcc>
   1a238:	b	1a3f8 <__assert_fail@plt+0x8fe8>
   1a23c:	b	1a240 <__assert_fail@plt+0x8e30>
   1a240:	ldr	r0, [pc, #3892]	; 1b17c <__assert_fail@plt+0x9d6c>
   1a244:	ldr	r1, [fp, #-12]
   1a248:	cmp	r1, r0
   1a24c:	blt	1a264 <__assert_fail@plt+0x8e54>
   1a250:	b	1a270 <__assert_fail@plt+0x8e60>
   1a254:	ldr	r0, [fp, #-12]
   1a258:	movw	r1, #0
   1a25c:	cmp	r1, r0
   1a260:	bge	1a270 <__assert_fail@plt+0x8e60>
   1a264:	movw	r0, #0
   1a268:	str	r0, [fp, #-32]	; 0xffffffe0
   1a26c:	b	1a288 <__assert_fail@plt+0x8e78>
   1a270:	ldr	r0, [fp, #-12]
   1a274:	movw	r1, #0
   1a278:	sub	r0, r1, r0
   1a27c:	movw	r1, #65535	; 0xffff
   1a280:	sdiv	r0, r1, r0
   1a284:	str	r0, [fp, #-32]	; 0xffffffe0
   1a288:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a28c:	ldr	r1, [fp, #-8]
   1a290:	ldr	r1, [r1]
   1a294:	mvn	r2, #0
   1a298:	sub	r1, r2, r1
   1a29c:	cmp	r0, r1
   1a2a0:	bls	1a3dc <__assert_fail@plt+0x8fcc>
   1a2a4:	b	1a3f8 <__assert_fail@plt+0x8fe8>
   1a2a8:	b	1a2ac <__assert_fail@plt+0x8e9c>
   1a2ac:	b	1a310 <__assert_fail@plt+0x8f00>
   1a2b0:	b	1a310 <__assert_fail@plt+0x8f00>
   1a2b4:	ldr	r0, [fp, #-12]
   1a2b8:	cmn	r0, #1
   1a2bc:	bne	1a310 <__assert_fail@plt+0x8f00>
   1a2c0:	b	1a2e0 <__assert_fail@plt+0x8ed0>
   1a2c4:	ldr	r0, [fp, #-8]
   1a2c8:	ldr	r0, [r0]
   1a2cc:	add	r0, r0, #0
   1a2d0:	movw	r1, #0
   1a2d4:	cmp	r1, r0
   1a2d8:	bcc	1a3dc <__assert_fail@plt+0x8fcc>
   1a2dc:	b	1a3f8 <__assert_fail@plt+0x8fe8>
   1a2e0:	ldr	r0, [fp, #-8]
   1a2e4:	ldr	r0, [r0]
   1a2e8:	movw	r1, #0
   1a2ec:	cmp	r1, r0
   1a2f0:	bcs	1a3f8 <__assert_fail@plt+0x8fe8>
   1a2f4:	ldr	r0, [fp, #-8]
   1a2f8:	ldr	r0, [r0]
   1a2fc:	sub	r0, r0, #1
   1a300:	mvn	r1, #0
   1a304:	cmp	r1, r0
   1a308:	bcc	1a3dc <__assert_fail@plt+0x8fcc>
   1a30c:	b	1a3f8 <__assert_fail@plt+0x8fe8>
   1a310:	ldr	r0, [fp, #-12]
   1a314:	movw	r1, #0
   1a318:	sdiv	r0, r1, r0
   1a31c:	ldr	r1, [fp, #-8]
   1a320:	ldr	r1, [r1]
   1a324:	cmp	r0, r1
   1a328:	bcc	1a3dc <__assert_fail@plt+0x8fcc>
   1a32c:	b	1a3f8 <__assert_fail@plt+0x8fe8>
   1a330:	ldr	r0, [fp, #-12]
   1a334:	cmp	r0, #0
   1a338:	bne	1a340 <__assert_fail@plt+0x8f30>
   1a33c:	b	1a3f8 <__assert_fail@plt+0x8fe8>
   1a340:	ldr	r0, [fp, #-8]
   1a344:	ldr	r0, [r0]
   1a348:	cmp	r0, #0
   1a34c:	bcs	1a3c0 <__assert_fail@plt+0x8fb0>
   1a350:	b	1a358 <__assert_fail@plt+0x8f48>
   1a354:	b	1a35c <__assert_fail@plt+0x8f4c>
   1a358:	b	1a3a0 <__assert_fail@plt+0x8f90>
   1a35c:	ldr	r0, [fp, #-8]
   1a360:	ldr	r0, [r0]
   1a364:	cmn	r0, #1
   1a368:	bne	1a3a0 <__assert_fail@plt+0x8f90>
   1a36c:	b	1a370 <__assert_fail@plt+0x8f60>
   1a370:	ldr	r0, [fp, #-12]
   1a374:	add	r0, r0, #0
   1a378:	movw	r1, #0
   1a37c:	cmp	r1, r0
   1a380:	blt	1a3dc <__assert_fail@plt+0x8fcc>
   1a384:	b	1a3f8 <__assert_fail@plt+0x8fe8>
   1a388:	ldr	r0, [fp, #-12]
   1a38c:	sub	r0, r0, #1
   1a390:	mvn	r1, #0
   1a394:	cmp	r1, r0
   1a398:	blt	1a3dc <__assert_fail@plt+0x8fcc>
   1a39c:	b	1a3f8 <__assert_fail@plt+0x8fe8>
   1a3a0:	ldr	r0, [fp, #-8]
   1a3a4:	ldr	r0, [r0]
   1a3a8:	movw	r1, #0
   1a3ac:	udiv	r0, r1, r0
   1a3b0:	ldr	r1, [fp, #-12]
   1a3b4:	cmp	r0, r1
   1a3b8:	bcc	1a3dc <__assert_fail@plt+0x8fcc>
   1a3bc:	b	1a3f8 <__assert_fail@plt+0x8fe8>
   1a3c0:	ldr	r0, [fp, #-12]
   1a3c4:	movw	r1, #65535	; 0xffff
   1a3c8:	sdiv	r0, r1, r0
   1a3cc:	ldr	r1, [fp, #-8]
   1a3d0:	ldr	r1, [r1]
   1a3d4:	cmp	r0, r1
   1a3d8:	bcs	1a3f8 <__assert_fail@plt+0x8fe8>
   1a3dc:	ldr	r0, [fp, #-8]
   1a3e0:	ldr	r0, [r0]
   1a3e4:	ldr	r1, [fp, #-12]
   1a3e8:	mul	r0, r0, r1
   1a3ec:	uxth	r0, r0
   1a3f0:	str	r0, [fp, #-16]
   1a3f4:	b	1b128 <__assert_fail@plt+0x9d18>
   1a3f8:	ldr	r0, [fp, #-8]
   1a3fc:	ldr	r0, [r0]
   1a400:	ldr	r1, [fp, #-12]
   1a404:	mul	r0, r0, r1
   1a408:	uxth	r0, r0
   1a40c:	str	r0, [fp, #-16]
   1a410:	b	1b15c <__assert_fail@plt+0x9d4c>
   1a414:	b	1a418 <__assert_fail@plt+0x9008>
   1a418:	b	1a614 <__assert_fail@plt+0x9204>
   1a41c:	ldr	r0, [fp, #-12]
   1a420:	cmp	r0, #0
   1a424:	bge	1a544 <__assert_fail@plt+0x9134>
   1a428:	ldr	r0, [fp, #-8]
   1a42c:	ldr	r0, [r0]
   1a430:	cmp	r0, #0
   1a434:	bcs	1a4c8 <__assert_fail@plt+0x90b8>
   1a438:	b	1a43c <__assert_fail@plt+0x902c>
   1a43c:	ldr	r0, [pc, #3388]	; 1b180 <__assert_fail@plt+0x9d70>
   1a440:	ldr	r1, [fp, #-8]
   1a444:	ldr	r1, [r1]
   1a448:	ldr	r2, [fp, #-12]
   1a44c:	sdiv	r0, r0, r2
   1a450:	cmp	r1, r0
   1a454:	bcc	1a5e4 <__assert_fail@plt+0x91d4>
   1a458:	b	1a5fc <__assert_fail@plt+0x91ec>
   1a45c:	b	1a460 <__assert_fail@plt+0x9050>
   1a460:	ldr	r0, [pc, #3348]	; 1b17c <__assert_fail@plt+0x9d6c>
   1a464:	ldr	r1, [fp, #-12]
   1a468:	cmp	r1, r0
   1a46c:	blt	1a484 <__assert_fail@plt+0x9074>
   1a470:	b	1a490 <__assert_fail@plt+0x9080>
   1a474:	ldr	r0, [fp, #-12]
   1a478:	movw	r1, #0
   1a47c:	cmp	r1, r0
   1a480:	bge	1a490 <__assert_fail@plt+0x9080>
   1a484:	movw	r0, #0
   1a488:	str	r0, [fp, #-36]	; 0xffffffdc
   1a48c:	b	1a4a8 <__assert_fail@plt+0x9098>
   1a490:	ldr	r0, [pc, #3304]	; 1b180 <__assert_fail@plt+0x9d70>
   1a494:	ldr	r1, [fp, #-12]
   1a498:	movw	r2, #0
   1a49c:	sub	r1, r2, r1
   1a4a0:	sdiv	r0, r0, r1
   1a4a4:	str	r0, [fp, #-36]	; 0xffffffdc
   1a4a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a4ac:	ldr	r1, [fp, #-8]
   1a4b0:	ldr	r1, [r1]
   1a4b4:	mvn	r2, #0
   1a4b8:	sub	r1, r2, r1
   1a4bc:	cmp	r0, r1
   1a4c0:	bls	1a5e4 <__assert_fail@plt+0x91d4>
   1a4c4:	b	1a5fc <__assert_fail@plt+0x91ec>
   1a4c8:	ldr	r0, [fp, #-12]
   1a4cc:	cmn	r0, #1
   1a4d0:	bne	1a524 <__assert_fail@plt+0x9114>
   1a4d4:	b	1a4f4 <__assert_fail@plt+0x90e4>
   1a4d8:	ldr	r0, [fp, #-8]
   1a4dc:	ldr	r0, [r0]
   1a4e0:	add	r0, r0, #-2147483648	; 0x80000000
   1a4e4:	movw	r1, #0
   1a4e8:	cmp	r1, r0
   1a4ec:	bcc	1a5e4 <__assert_fail@plt+0x91d4>
   1a4f0:	b	1a5fc <__assert_fail@plt+0x91ec>
   1a4f4:	ldr	r0, [fp, #-8]
   1a4f8:	ldr	r0, [r0]
   1a4fc:	movw	r1, #0
   1a500:	cmp	r1, r0
   1a504:	bcs	1a5fc <__assert_fail@plt+0x91ec>
   1a508:	ldr	r0, [pc, #3184]	; 1b180 <__assert_fail@plt+0x9d70>
   1a50c:	ldr	r1, [fp, #-8]
   1a510:	ldr	r1, [r1]
   1a514:	sub	r1, r1, #1
   1a518:	cmp	r0, r1
   1a51c:	bcc	1a5e4 <__assert_fail@plt+0x91d4>
   1a520:	b	1a5fc <__assert_fail@plt+0x91ec>
   1a524:	ldr	r0, [pc, #3160]	; 1b184 <__assert_fail@plt+0x9d74>
   1a528:	ldr	r1, [fp, #-12]
   1a52c:	sdiv	r0, r0, r1
   1a530:	ldr	r1, [fp, #-8]
   1a534:	ldr	r1, [r1]
   1a538:	cmp	r0, r1
   1a53c:	bcc	1a5e4 <__assert_fail@plt+0x91d4>
   1a540:	b	1a5fc <__assert_fail@plt+0x91ec>
   1a544:	ldr	r0, [fp, #-12]
   1a548:	cmp	r0, #0
   1a54c:	bne	1a554 <__assert_fail@plt+0x9144>
   1a550:	b	1a5fc <__assert_fail@plt+0x91ec>
   1a554:	ldr	r0, [fp, #-8]
   1a558:	ldr	r0, [r0]
   1a55c:	cmp	r0, #0
   1a560:	bcs	1a5c8 <__assert_fail@plt+0x91b8>
   1a564:	ldr	r0, [fp, #-8]
   1a568:	ldr	r0, [r0]
   1a56c:	cmn	r0, #1
   1a570:	bne	1a5a8 <__assert_fail@plt+0x9198>
   1a574:	b	1a578 <__assert_fail@plt+0x9168>
   1a578:	ldr	r0, [fp, #-12]
   1a57c:	add	r0, r0, #-2147483648	; 0x80000000
   1a580:	movw	r1, #0
   1a584:	cmp	r1, r0
   1a588:	blt	1a5e4 <__assert_fail@plt+0x91d4>
   1a58c:	b	1a5fc <__assert_fail@plt+0x91ec>
   1a590:	ldr	r0, [pc, #3048]	; 1b180 <__assert_fail@plt+0x9d70>
   1a594:	ldr	r1, [fp, #-12]
   1a598:	sub	r1, r1, #1
   1a59c:	cmp	r0, r1
   1a5a0:	blt	1a5e4 <__assert_fail@plt+0x91d4>
   1a5a4:	b	1a5fc <__assert_fail@plt+0x91ec>
   1a5a8:	ldr	r0, [pc, #3028]	; 1b184 <__assert_fail@plt+0x9d74>
   1a5ac:	ldr	r1, [fp, #-8]
   1a5b0:	ldr	r1, [r1]
   1a5b4:	udiv	r0, r0, r1
   1a5b8:	ldr	r1, [fp, #-12]
   1a5bc:	cmp	r0, r1
   1a5c0:	bcc	1a5e4 <__assert_fail@plt+0x91d4>
   1a5c4:	b	1a5fc <__assert_fail@plt+0x91ec>
   1a5c8:	ldr	r0, [pc, #2992]	; 1b180 <__assert_fail@plt+0x9d70>
   1a5cc:	ldr	r1, [fp, #-12]
   1a5d0:	sdiv	r0, r0, r1
   1a5d4:	ldr	r1, [fp, #-8]
   1a5d8:	ldr	r1, [r1]
   1a5dc:	cmp	r0, r1
   1a5e0:	bcs	1a5fc <__assert_fail@plt+0x91ec>
   1a5e4:	ldr	r0, [fp, #-8]
   1a5e8:	ldr	r0, [r0]
   1a5ec:	ldr	r1, [fp, #-12]
   1a5f0:	mul	r0, r0, r1
   1a5f4:	str	r0, [fp, #-16]
   1a5f8:	b	1b128 <__assert_fail@plt+0x9d18>
   1a5fc:	ldr	r0, [fp, #-8]
   1a600:	ldr	r0, [r0]
   1a604:	ldr	r1, [fp, #-12]
   1a608:	mul	r0, r0, r1
   1a60c:	str	r0, [fp, #-16]
   1a610:	b	1b15c <__assert_fail@plt+0x9d4c>
   1a614:	ldr	r0, [fp, #-12]
   1a618:	cmp	r0, #0
   1a61c:	bge	1a748 <__assert_fail@plt+0x9338>
   1a620:	ldr	r0, [fp, #-8]
   1a624:	ldr	r0, [r0]
   1a628:	cmp	r0, #0
   1a62c:	bcs	1a6c0 <__assert_fail@plt+0x92b0>
   1a630:	b	1a654 <__assert_fail@plt+0x9244>
   1a634:	ldr	r0, [fp, #-8]
   1a638:	ldr	r0, [r0]
   1a63c:	ldr	r1, [fp, #-12]
   1a640:	mvn	r2, #0
   1a644:	udiv	r1, r2, r1
   1a648:	cmp	r0, r1
   1a64c:	bcc	1a7f4 <__assert_fail@plt+0x93e4>
   1a650:	b	1a80c <__assert_fail@plt+0x93fc>
   1a654:	b	1a658 <__assert_fail@plt+0x9248>
   1a658:	ldr	r0, [pc, #2844]	; 1b17c <__assert_fail@plt+0x9d6c>
   1a65c:	ldr	r1, [fp, #-12]
   1a660:	cmp	r1, r0
   1a664:	blt	1a67c <__assert_fail@plt+0x926c>
   1a668:	b	1a688 <__assert_fail@plt+0x9278>
   1a66c:	ldr	r0, [fp, #-12]
   1a670:	movw	r1, #0
   1a674:	cmp	r1, r0
   1a678:	bge	1a688 <__assert_fail@plt+0x9278>
   1a67c:	movw	r0, #1
   1a680:	str	r0, [fp, #-40]	; 0xffffffd8
   1a684:	b	1a6a0 <__assert_fail@plt+0x9290>
   1a688:	ldr	r0, [fp, #-12]
   1a68c:	movw	r1, #0
   1a690:	sub	r0, r1, r0
   1a694:	mvn	r1, #0
   1a698:	udiv	r0, r1, r0
   1a69c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a6a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a6a4:	ldr	r1, [fp, #-8]
   1a6a8:	ldr	r1, [r1]
   1a6ac:	mvn	r2, #0
   1a6b0:	sub	r1, r2, r1
   1a6b4:	cmp	r0, r1
   1a6b8:	bls	1a7f4 <__assert_fail@plt+0x93e4>
   1a6bc:	b	1a80c <__assert_fail@plt+0x93fc>
   1a6c0:	b	1a6c4 <__assert_fail@plt+0x92b4>
   1a6c4:	b	1a728 <__assert_fail@plt+0x9318>
   1a6c8:	b	1a728 <__assert_fail@plt+0x9318>
   1a6cc:	ldr	r0, [fp, #-12]
   1a6d0:	cmn	r0, #1
   1a6d4:	bne	1a728 <__assert_fail@plt+0x9318>
   1a6d8:	b	1a6f8 <__assert_fail@plt+0x92e8>
   1a6dc:	ldr	r0, [fp, #-8]
   1a6e0:	ldr	r0, [r0]
   1a6e4:	add	r0, r0, #0
   1a6e8:	movw	r1, #0
   1a6ec:	cmp	r1, r0
   1a6f0:	bcc	1a7f4 <__assert_fail@plt+0x93e4>
   1a6f4:	b	1a80c <__assert_fail@plt+0x93fc>
   1a6f8:	ldr	r0, [fp, #-8]
   1a6fc:	ldr	r0, [r0]
   1a700:	movw	r1, #0
   1a704:	cmp	r1, r0
   1a708:	bcs	1a80c <__assert_fail@plt+0x93fc>
   1a70c:	ldr	r0, [fp, #-8]
   1a710:	ldr	r0, [r0]
   1a714:	sub	r0, r0, #1
   1a718:	mvn	r1, #0
   1a71c:	cmp	r1, r0
   1a720:	bcc	1a7f4 <__assert_fail@plt+0x93e4>
   1a724:	b	1a80c <__assert_fail@plt+0x93fc>
   1a728:	ldr	r0, [fp, #-12]
   1a72c:	movw	r1, #0
   1a730:	sdiv	r0, r1, r0
   1a734:	ldr	r1, [fp, #-8]
   1a738:	ldr	r1, [r1]
   1a73c:	cmp	r0, r1
   1a740:	bcc	1a7f4 <__assert_fail@plt+0x93e4>
   1a744:	b	1a80c <__assert_fail@plt+0x93fc>
   1a748:	ldr	r0, [fp, #-12]
   1a74c:	cmp	r0, #0
   1a750:	bne	1a758 <__assert_fail@plt+0x9348>
   1a754:	b	1a80c <__assert_fail@plt+0x93fc>
   1a758:	ldr	r0, [fp, #-8]
   1a75c:	ldr	r0, [r0]
   1a760:	cmp	r0, #0
   1a764:	bcs	1a7d8 <__assert_fail@plt+0x93c8>
   1a768:	b	1a770 <__assert_fail@plt+0x9360>
   1a76c:	b	1a774 <__assert_fail@plt+0x9364>
   1a770:	b	1a7b8 <__assert_fail@plt+0x93a8>
   1a774:	ldr	r0, [fp, #-8]
   1a778:	ldr	r0, [r0]
   1a77c:	cmn	r0, #1
   1a780:	bne	1a7b8 <__assert_fail@plt+0x93a8>
   1a784:	b	1a788 <__assert_fail@plt+0x9378>
   1a788:	ldr	r0, [fp, #-12]
   1a78c:	add	r0, r0, #0
   1a790:	movw	r1, #0
   1a794:	cmp	r1, r0
   1a798:	blt	1a7f4 <__assert_fail@plt+0x93e4>
   1a79c:	b	1a80c <__assert_fail@plt+0x93fc>
   1a7a0:	ldr	r0, [fp, #-12]
   1a7a4:	sub	r0, r0, #1
   1a7a8:	mvn	r1, #0
   1a7ac:	cmp	r1, r0
   1a7b0:	blt	1a7f4 <__assert_fail@plt+0x93e4>
   1a7b4:	b	1a80c <__assert_fail@plt+0x93fc>
   1a7b8:	ldr	r0, [fp, #-8]
   1a7bc:	ldr	r0, [r0]
   1a7c0:	movw	r1, #0
   1a7c4:	udiv	r0, r1, r0
   1a7c8:	ldr	r1, [fp, #-12]
   1a7cc:	cmp	r0, r1
   1a7d0:	bcc	1a7f4 <__assert_fail@plt+0x93e4>
   1a7d4:	b	1a80c <__assert_fail@plt+0x93fc>
   1a7d8:	ldr	r0, [fp, #-12]
   1a7dc:	mvn	r1, #0
   1a7e0:	udiv	r0, r1, r0
   1a7e4:	ldr	r1, [fp, #-8]
   1a7e8:	ldr	r1, [r1]
   1a7ec:	cmp	r0, r1
   1a7f0:	bcs	1a80c <__assert_fail@plt+0x93fc>
   1a7f4:	ldr	r0, [fp, #-8]
   1a7f8:	ldr	r0, [r0]
   1a7fc:	ldr	r1, [fp, #-12]
   1a800:	mul	r0, r0, r1
   1a804:	str	r0, [fp, #-16]
   1a808:	b	1b128 <__assert_fail@plt+0x9d18>
   1a80c:	ldr	r0, [fp, #-8]
   1a810:	ldr	r0, [r0]
   1a814:	ldr	r1, [fp, #-12]
   1a818:	mul	r0, r0, r1
   1a81c:	str	r0, [fp, #-16]
   1a820:	b	1b15c <__assert_fail@plt+0x9d4c>
   1a824:	b	1a828 <__assert_fail@plt+0x9418>
   1a828:	b	1aa24 <__assert_fail@plt+0x9614>
   1a82c:	ldr	r0, [fp, #-12]
   1a830:	cmp	r0, #0
   1a834:	bge	1a954 <__assert_fail@plt+0x9544>
   1a838:	ldr	r0, [fp, #-8]
   1a83c:	ldr	r0, [r0]
   1a840:	cmp	r0, #0
   1a844:	bcs	1a8d8 <__assert_fail@plt+0x94c8>
   1a848:	b	1a84c <__assert_fail@plt+0x943c>
   1a84c:	ldr	r0, [pc, #2348]	; 1b180 <__assert_fail@plt+0x9d70>
   1a850:	ldr	r1, [fp, #-8]
   1a854:	ldr	r1, [r1]
   1a858:	ldr	r2, [fp, #-12]
   1a85c:	sdiv	r0, r0, r2
   1a860:	cmp	r1, r0
   1a864:	bcc	1a9f4 <__assert_fail@plt+0x95e4>
   1a868:	b	1aa0c <__assert_fail@plt+0x95fc>
   1a86c:	b	1a870 <__assert_fail@plt+0x9460>
   1a870:	ldr	r0, [pc, #2308]	; 1b17c <__assert_fail@plt+0x9d6c>
   1a874:	ldr	r1, [fp, #-12]
   1a878:	cmp	r1, r0
   1a87c:	blt	1a894 <__assert_fail@plt+0x9484>
   1a880:	b	1a8a0 <__assert_fail@plt+0x9490>
   1a884:	ldr	r0, [fp, #-12]
   1a888:	movw	r1, #0
   1a88c:	cmp	r1, r0
   1a890:	bge	1a8a0 <__assert_fail@plt+0x9490>
   1a894:	movw	r0, #0
   1a898:	str	r0, [fp, #-44]	; 0xffffffd4
   1a89c:	b	1a8b8 <__assert_fail@plt+0x94a8>
   1a8a0:	ldr	r0, [pc, #2264]	; 1b180 <__assert_fail@plt+0x9d70>
   1a8a4:	ldr	r1, [fp, #-12]
   1a8a8:	movw	r2, #0
   1a8ac:	sub	r1, r2, r1
   1a8b0:	sdiv	r0, r0, r1
   1a8b4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a8b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8bc:	ldr	r1, [fp, #-8]
   1a8c0:	ldr	r1, [r1]
   1a8c4:	mvn	r2, #0
   1a8c8:	sub	r1, r2, r1
   1a8cc:	cmp	r0, r1
   1a8d0:	bls	1a9f4 <__assert_fail@plt+0x95e4>
   1a8d4:	b	1aa0c <__assert_fail@plt+0x95fc>
   1a8d8:	ldr	r0, [fp, #-12]
   1a8dc:	cmn	r0, #1
   1a8e0:	bne	1a934 <__assert_fail@plt+0x9524>
   1a8e4:	b	1a904 <__assert_fail@plt+0x94f4>
   1a8e8:	ldr	r0, [fp, #-8]
   1a8ec:	ldr	r0, [r0]
   1a8f0:	add	r0, r0, #-2147483648	; 0x80000000
   1a8f4:	movw	r1, #0
   1a8f8:	cmp	r1, r0
   1a8fc:	bcc	1a9f4 <__assert_fail@plt+0x95e4>
   1a900:	b	1aa0c <__assert_fail@plt+0x95fc>
   1a904:	ldr	r0, [fp, #-8]
   1a908:	ldr	r0, [r0]
   1a90c:	movw	r1, #0
   1a910:	cmp	r1, r0
   1a914:	bcs	1aa0c <__assert_fail@plt+0x95fc>
   1a918:	ldr	r0, [pc, #2144]	; 1b180 <__assert_fail@plt+0x9d70>
   1a91c:	ldr	r1, [fp, #-8]
   1a920:	ldr	r1, [r1]
   1a924:	sub	r1, r1, #1
   1a928:	cmp	r0, r1
   1a92c:	bcc	1a9f4 <__assert_fail@plt+0x95e4>
   1a930:	b	1aa0c <__assert_fail@plt+0x95fc>
   1a934:	ldr	r0, [pc, #2120]	; 1b184 <__assert_fail@plt+0x9d74>
   1a938:	ldr	r1, [fp, #-12]
   1a93c:	sdiv	r0, r0, r1
   1a940:	ldr	r1, [fp, #-8]
   1a944:	ldr	r1, [r1]
   1a948:	cmp	r0, r1
   1a94c:	bcc	1a9f4 <__assert_fail@plt+0x95e4>
   1a950:	b	1aa0c <__assert_fail@plt+0x95fc>
   1a954:	ldr	r0, [fp, #-12]
   1a958:	cmp	r0, #0
   1a95c:	bne	1a964 <__assert_fail@plt+0x9554>
   1a960:	b	1aa0c <__assert_fail@plt+0x95fc>
   1a964:	ldr	r0, [fp, #-8]
   1a968:	ldr	r0, [r0]
   1a96c:	cmp	r0, #0
   1a970:	bcs	1a9d8 <__assert_fail@plt+0x95c8>
   1a974:	ldr	r0, [fp, #-8]
   1a978:	ldr	r0, [r0]
   1a97c:	cmn	r0, #1
   1a980:	bne	1a9b8 <__assert_fail@plt+0x95a8>
   1a984:	b	1a988 <__assert_fail@plt+0x9578>
   1a988:	ldr	r0, [fp, #-12]
   1a98c:	add	r0, r0, #-2147483648	; 0x80000000
   1a990:	movw	r1, #0
   1a994:	cmp	r1, r0
   1a998:	blt	1a9f4 <__assert_fail@plt+0x95e4>
   1a99c:	b	1aa0c <__assert_fail@plt+0x95fc>
   1a9a0:	ldr	r0, [pc, #2008]	; 1b180 <__assert_fail@plt+0x9d70>
   1a9a4:	ldr	r1, [fp, #-12]
   1a9a8:	sub	r1, r1, #1
   1a9ac:	cmp	r0, r1
   1a9b0:	blt	1a9f4 <__assert_fail@plt+0x95e4>
   1a9b4:	b	1aa0c <__assert_fail@plt+0x95fc>
   1a9b8:	ldr	r0, [pc, #1988]	; 1b184 <__assert_fail@plt+0x9d74>
   1a9bc:	ldr	r1, [fp, #-8]
   1a9c0:	ldr	r1, [r1]
   1a9c4:	udiv	r0, r0, r1
   1a9c8:	ldr	r1, [fp, #-12]
   1a9cc:	cmp	r0, r1
   1a9d0:	bcc	1a9f4 <__assert_fail@plt+0x95e4>
   1a9d4:	b	1aa0c <__assert_fail@plt+0x95fc>
   1a9d8:	ldr	r0, [pc, #1952]	; 1b180 <__assert_fail@plt+0x9d70>
   1a9dc:	ldr	r1, [fp, #-12]
   1a9e0:	sdiv	r0, r0, r1
   1a9e4:	ldr	r1, [fp, #-8]
   1a9e8:	ldr	r1, [r1]
   1a9ec:	cmp	r0, r1
   1a9f0:	bcs	1aa0c <__assert_fail@plt+0x95fc>
   1a9f4:	ldr	r0, [fp, #-8]
   1a9f8:	ldr	r0, [r0]
   1a9fc:	ldr	r1, [fp, #-12]
   1aa00:	mul	r0, r0, r1
   1aa04:	str	r0, [fp, #-16]
   1aa08:	b	1b128 <__assert_fail@plt+0x9d18>
   1aa0c:	ldr	r0, [fp, #-8]
   1aa10:	ldr	r0, [r0]
   1aa14:	ldr	r1, [fp, #-12]
   1aa18:	mul	r0, r0, r1
   1aa1c:	str	r0, [fp, #-16]
   1aa20:	b	1b15c <__assert_fail@plt+0x9d4c>
   1aa24:	ldr	r0, [fp, #-12]
   1aa28:	cmp	r0, #0
   1aa2c:	bge	1ab58 <__assert_fail@plt+0x9748>
   1aa30:	ldr	r0, [fp, #-8]
   1aa34:	ldr	r0, [r0]
   1aa38:	cmp	r0, #0
   1aa3c:	bcs	1aad0 <__assert_fail@plt+0x96c0>
   1aa40:	b	1aa64 <__assert_fail@plt+0x9654>
   1aa44:	ldr	r0, [fp, #-8]
   1aa48:	ldr	r0, [r0]
   1aa4c:	ldr	r1, [fp, #-12]
   1aa50:	mvn	r2, #0
   1aa54:	udiv	r1, r2, r1
   1aa58:	cmp	r0, r1
   1aa5c:	bcc	1ac08 <__assert_fail@plt+0x97f8>
   1aa60:	b	1ac20 <__assert_fail@plt+0x9810>
   1aa64:	b	1aa68 <__assert_fail@plt+0x9658>
   1aa68:	ldr	r0, [pc, #1804]	; 1b17c <__assert_fail@plt+0x9d6c>
   1aa6c:	ldr	r1, [fp, #-12]
   1aa70:	cmp	r1, r0
   1aa74:	blt	1aa8c <__assert_fail@plt+0x967c>
   1aa78:	b	1aa98 <__assert_fail@plt+0x9688>
   1aa7c:	ldr	r0, [fp, #-12]
   1aa80:	movw	r1, #0
   1aa84:	cmp	r1, r0
   1aa88:	bge	1aa98 <__assert_fail@plt+0x9688>
   1aa8c:	movw	r0, #1
   1aa90:	str	r0, [fp, #-48]	; 0xffffffd0
   1aa94:	b	1aab0 <__assert_fail@plt+0x96a0>
   1aa98:	ldr	r0, [fp, #-12]
   1aa9c:	movw	r1, #0
   1aaa0:	sub	r0, r1, r0
   1aaa4:	mvn	r1, #0
   1aaa8:	udiv	r0, r1, r0
   1aaac:	str	r0, [fp, #-48]	; 0xffffffd0
   1aab0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1aab4:	ldr	r1, [fp, #-8]
   1aab8:	ldr	r1, [r1]
   1aabc:	mvn	r2, #0
   1aac0:	sub	r1, r2, r1
   1aac4:	cmp	r0, r1
   1aac8:	bls	1ac08 <__assert_fail@plt+0x97f8>
   1aacc:	b	1ac20 <__assert_fail@plt+0x9810>
   1aad0:	b	1aad4 <__assert_fail@plt+0x96c4>
   1aad4:	b	1ab38 <__assert_fail@plt+0x9728>
   1aad8:	b	1ab38 <__assert_fail@plt+0x9728>
   1aadc:	ldr	r0, [fp, #-12]
   1aae0:	cmn	r0, #1
   1aae4:	bne	1ab38 <__assert_fail@plt+0x9728>
   1aae8:	b	1ab08 <__assert_fail@plt+0x96f8>
   1aaec:	ldr	r0, [fp, #-8]
   1aaf0:	ldr	r0, [r0]
   1aaf4:	add	r0, r0, #0
   1aaf8:	movw	r1, #0
   1aafc:	cmp	r1, r0
   1ab00:	bcc	1ac08 <__assert_fail@plt+0x97f8>
   1ab04:	b	1ac20 <__assert_fail@plt+0x9810>
   1ab08:	ldr	r0, [fp, #-8]
   1ab0c:	ldr	r0, [r0]
   1ab10:	movw	r1, #0
   1ab14:	cmp	r1, r0
   1ab18:	bcs	1ac20 <__assert_fail@plt+0x9810>
   1ab1c:	ldr	r0, [fp, #-8]
   1ab20:	ldr	r0, [r0]
   1ab24:	sub	r0, r0, #1
   1ab28:	mvn	r1, #0
   1ab2c:	cmp	r1, r0
   1ab30:	bcc	1ac08 <__assert_fail@plt+0x97f8>
   1ab34:	b	1ac20 <__assert_fail@plt+0x9810>
   1ab38:	ldr	r0, [fp, #-12]
   1ab3c:	movw	r1, #0
   1ab40:	sdiv	r0, r1, r0
   1ab44:	ldr	r1, [fp, #-8]
   1ab48:	ldr	r1, [r1]
   1ab4c:	cmp	r0, r1
   1ab50:	bcc	1ac08 <__assert_fail@plt+0x97f8>
   1ab54:	b	1ac20 <__assert_fail@plt+0x9810>
   1ab58:	ldr	r0, [fp, #-12]
   1ab5c:	cmp	r0, #0
   1ab60:	bne	1ab68 <__assert_fail@plt+0x9758>
   1ab64:	b	1ac20 <__assert_fail@plt+0x9810>
   1ab68:	ldr	r0, [fp, #-8]
   1ab6c:	ldr	r0, [r0]
   1ab70:	cmp	r0, #0
   1ab74:	bcs	1abec <__assert_fail@plt+0x97dc>
   1ab78:	b	1ab80 <__assert_fail@plt+0x9770>
   1ab7c:	b	1ab84 <__assert_fail@plt+0x9774>
   1ab80:	b	1abc8 <__assert_fail@plt+0x97b8>
   1ab84:	ldr	r0, [fp, #-8]
   1ab88:	ldr	r0, [r0]
   1ab8c:	cmn	r0, #1
   1ab90:	bne	1abc8 <__assert_fail@plt+0x97b8>
   1ab94:	b	1ab98 <__assert_fail@plt+0x9788>
   1ab98:	ldr	r0, [fp, #-12]
   1ab9c:	add	r0, r0, #0
   1aba0:	movw	r1, #0
   1aba4:	cmp	r1, r0
   1aba8:	blt	1ac08 <__assert_fail@plt+0x97f8>
   1abac:	b	1ac20 <__assert_fail@plt+0x9810>
   1abb0:	ldr	r0, [fp, #-12]
   1abb4:	sub	r0, r0, #1
   1abb8:	mvn	r1, #0
   1abbc:	cmp	r1, r0
   1abc0:	blt	1ac08 <__assert_fail@plt+0x97f8>
   1abc4:	b	1ac20 <__assert_fail@plt+0x9810>
   1abc8:	ldr	r0, [fp, #-8]
   1abcc:	ldr	r0, [r0]
   1abd0:	movw	r1, #0
   1abd4:	udiv	r0, r1, r0
   1abd8:	ldr	r1, [fp, #-12]
   1abdc:	cmp	r0, r1
   1abe0:	bcc	1ac08 <__assert_fail@plt+0x97f8>
   1abe4:	b	1ac20 <__assert_fail@plt+0x9810>
   1abe8:	andhi	r0, r0, r1
   1abec:	ldr	r0, [fp, #-12]
   1abf0:	mvn	r1, #0
   1abf4:	udiv	r0, r1, r0
   1abf8:	ldr	r1, [fp, #-8]
   1abfc:	ldr	r1, [r1]
   1ac00:	cmp	r0, r1
   1ac04:	bcs	1ac20 <__assert_fail@plt+0x9810>
   1ac08:	ldr	r0, [fp, #-8]
   1ac0c:	ldr	r0, [r0]
   1ac10:	ldr	r1, [fp, #-12]
   1ac14:	mul	r0, r0, r1
   1ac18:	str	r0, [fp, #-16]
   1ac1c:	b	1b128 <__assert_fail@plt+0x9d18>
   1ac20:	ldr	r0, [fp, #-8]
   1ac24:	ldr	r0, [r0]
   1ac28:	ldr	r1, [fp, #-12]
   1ac2c:	mul	r0, r0, r1
   1ac30:	str	r0, [fp, #-16]
   1ac34:	b	1b15c <__assert_fail@plt+0x9d4c>
   1ac38:	b	1aebc <__assert_fail@plt+0x9aac>
   1ac3c:	ldr	r0, [fp, #-12]
   1ac40:	cmp	r0, #0
   1ac44:	bge	1adc0 <__assert_fail@plt+0x99b0>
   1ac48:	ldr	r0, [fp, #-8]
   1ac4c:	ldr	r0, [r0]
   1ac50:	cmp	r0, #0
   1ac54:	bcs	1ad34 <__assert_fail@plt+0x9924>
   1ac58:	b	1ac5c <__assert_fail@plt+0x984c>
   1ac5c:	ldr	r0, [fp, #-8]
   1ac60:	ldr	r0, [r0]
   1ac64:	ldr	r1, [fp, #-12]
   1ac68:	asr	r3, r1, #31
   1ac6c:	mvn	r2, #0
   1ac70:	mvn	ip, #-2147483648	; 0x80000000
   1ac74:	str	r0, [sp, #52]	; 0x34
   1ac78:	mov	r0, r2
   1ac7c:	str	r1, [sp, #48]	; 0x30
   1ac80:	mov	r1, ip
   1ac84:	ldr	r2, [sp, #48]	; 0x30
   1ac88:	bl	1dc34 <__assert_fail@plt+0xc824>
   1ac8c:	ldr	r2, [sp, #52]	; 0x34
   1ac90:	subs	r0, r2, r0
   1ac94:	rscs	r1, r1, #0
   1ac98:	blt	1ae8c <__assert_fail@plt+0x9a7c>
   1ac9c:	b	1aea4 <__assert_fail@plt+0x9a94>
   1aca0:	b	1aca4 <__assert_fail@plt+0x9894>
   1aca4:	ldr	r0, [pc, #1232]	; 1b17c <__assert_fail@plt+0x9d6c>
   1aca8:	ldr	r1, [fp, #-12]
   1acac:	cmp	r1, r0
   1acb0:	blt	1acc8 <__assert_fail@plt+0x98b8>
   1acb4:	b	1acdc <__assert_fail@plt+0x98cc>
   1acb8:	ldr	r0, [fp, #-12]
   1acbc:	movw	r1, #0
   1acc0:	cmp	r1, r0
   1acc4:	bge	1acdc <__assert_fail@plt+0x98cc>
   1acc8:	mov	r0, #0
   1accc:	mvn	r1, #0
   1acd0:	str	r1, [sp, #44]	; 0x2c
   1acd4:	str	r0, [sp, #40]	; 0x28
   1acd8:	b	1ad10 <__assert_fail@plt+0x9900>
   1acdc:	ldr	r0, [fp, #-12]
   1ace0:	rsb	r0, r0, #0
   1ace4:	asr	r3, r0, #31
   1ace8:	mvn	r1, #0
   1acec:	mvn	r2, #-2147483648	; 0x80000000
   1acf0:	str	r0, [sp, #36]	; 0x24
   1acf4:	mov	r0, r1
   1acf8:	mov	r1, r2
   1acfc:	ldr	r2, [sp, #36]	; 0x24
   1ad00:	bl	1dc34 <__assert_fail@plt+0xc824>
   1ad04:	str	r0, [sp, #44]	; 0x2c
   1ad08:	str	r1, [sp, #40]	; 0x28
   1ad0c:	b	1ad10 <__assert_fail@plt+0x9900>
   1ad10:	ldr	r0, [sp, #40]	; 0x28
   1ad14:	ldr	r1, [sp, #44]	; 0x2c
   1ad18:	ldr	r2, [fp, #-8]
   1ad1c:	ldr	r2, [r2]
   1ad20:	mvn	r2, r2
   1ad24:	subs	r1, r2, r1
   1ad28:	rscs	r0, r0, #0
   1ad2c:	bge	1ae8c <__assert_fail@plt+0x9a7c>
   1ad30:	b	1aea4 <__assert_fail@plt+0x9a94>
   1ad34:	ldr	r0, [fp, #-12]
   1ad38:	cmn	r0, #1
   1ad3c:	bne	1ad84 <__assert_fail@plt+0x9974>
   1ad40:	b	1ad60 <__assert_fail@plt+0x9950>
   1ad44:	ldr	r0, [fp, #-8]
   1ad48:	ldr	r0, [r0]
   1ad4c:	rsbs	r0, r0, #0
   1ad50:	mov	r1, #0
   1ad54:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1ad58:	blt	1ae8c <__assert_fail@plt+0x9a7c>
   1ad5c:	b	1aea4 <__assert_fail@plt+0x9a94>
   1ad60:	ldr	r0, [fp, #-8]
   1ad64:	ldr	r0, [r0]
   1ad68:	movw	r1, #0
   1ad6c:	cmp	r1, r0
   1ad70:	bcs	1aea4 <__assert_fail@plt+0x9a94>
   1ad74:	mov	r0, #0
   1ad78:	cmp	r0, #0
   1ad7c:	bne	1ae8c <__assert_fail@plt+0x9a7c>
   1ad80:	b	1aea4 <__assert_fail@plt+0x9a94>
   1ad84:	ldr	r0, [fp, #-12]
   1ad88:	asr	r3, r0, #31
   1ad8c:	mov	r1, #0
   1ad90:	mov	r2, #-2147483648	; 0x80000000
   1ad94:	str	r0, [sp, #32]
   1ad98:	mov	r0, r1
   1ad9c:	mov	r1, r2
   1ada0:	ldr	r2, [sp, #32]
   1ada4:	bl	1dc34 <__assert_fail@plt+0xc824>
   1ada8:	ldr	r2, [fp, #-8]
   1adac:	ldr	r2, [r2]
   1adb0:	subs	r0, r0, r2
   1adb4:	sbcs	r1, r1, #0
   1adb8:	blt	1ae8c <__assert_fail@plt+0x9a7c>
   1adbc:	b	1aea4 <__assert_fail@plt+0x9a94>
   1adc0:	ldr	r0, [fp, #-12]
   1adc4:	cmp	r0, #0
   1adc8:	bne	1add0 <__assert_fail@plt+0x99c0>
   1adcc:	b	1aea4 <__assert_fail@plt+0x9a94>
   1add0:	ldr	r0, [fp, #-8]
   1add4:	ldr	r0, [r0]
   1add8:	cmp	r0, #0
   1addc:	bcs	1ae50 <__assert_fail@plt+0x9a40>
   1ade0:	ldr	r0, [fp, #-8]
   1ade4:	ldr	r0, [r0]
   1ade8:	cmn	r0, #1
   1adec:	bne	1ae20 <__assert_fail@plt+0x9a10>
   1adf0:	b	1adf4 <__assert_fail@plt+0x99e4>
   1adf4:	ldr	r0, [fp, #-12]
   1adf8:	mov	r1, #-2147483648	; 0x80000000
   1adfc:	add	r1, r1, r0, asr #31
   1ae00:	rsbs	r0, r0, #0
   1ae04:	rscs	r1, r1, #0
   1ae08:	blt	1ae8c <__assert_fail@plt+0x9a7c>
   1ae0c:	b	1aea4 <__assert_fail@plt+0x9a94>
   1ae10:	mov	r0, #0
   1ae14:	cmp	r0, #0
   1ae18:	bne	1ae8c <__assert_fail@plt+0x9a7c>
   1ae1c:	b	1aea4 <__assert_fail@plt+0x9a94>
   1ae20:	ldr	r0, [fp, #-8]
   1ae24:	ldr	r2, [r0]
   1ae28:	mov	r1, #-2147483648	; 0x80000000
   1ae2c:	mov	r0, #0
   1ae30:	str	r0, [sp, #28]
   1ae34:	ldr	r3, [sp, #28]
   1ae38:	bl	1dc34 <__assert_fail@plt+0xc824>
   1ae3c:	ldr	r2, [fp, #-12]
   1ae40:	subs	r0, r0, r2
   1ae44:	sbcs	r1, r1, r2, asr #31
   1ae48:	blt	1ae8c <__assert_fail@plt+0x9a7c>
   1ae4c:	b	1aea4 <__assert_fail@plt+0x9a94>
   1ae50:	ldr	r0, [fp, #-12]
   1ae54:	asr	r3, r0, #31
   1ae58:	mvn	r1, #0
   1ae5c:	mvn	r2, #-2147483648	; 0x80000000
   1ae60:	str	r0, [sp, #24]
   1ae64:	mov	r0, r1
   1ae68:	mov	r1, r2
   1ae6c:	ldr	r2, [sp, #24]
   1ae70:	bl	1dc34 <__assert_fail@plt+0xc824>
   1ae74:	ldr	r2, [fp, #-8]
   1ae78:	ldr	r2, [r2]
   1ae7c:	subs	r0, r0, r2
   1ae80:	sbcs	r1, r1, #0
   1ae84:	bge	1aea4 <__assert_fail@plt+0x9a94>
   1ae88:	b	1ae8c <__assert_fail@plt+0x9a7c>
   1ae8c:	ldr	r0, [fp, #-8]
   1ae90:	ldr	r0, [r0]
   1ae94:	ldr	r1, [fp, #-12]
   1ae98:	mul	r0, r0, r1
   1ae9c:	str	r0, [fp, #-16]
   1aea0:	b	1b128 <__assert_fail@plt+0x9d18>
   1aea4:	ldr	r0, [fp, #-8]
   1aea8:	ldr	r0, [r0]
   1aeac:	ldr	r1, [fp, #-12]
   1aeb0:	mul	r0, r0, r1
   1aeb4:	str	r0, [fp, #-16]
   1aeb8:	b	1b15c <__assert_fail@plt+0x9d4c>
   1aebc:	ldr	r0, [fp, #-12]
   1aec0:	cmp	r0, #0
   1aec4:	bge	1b030 <__assert_fail@plt+0x9c20>
   1aec8:	ldr	r0, [fp, #-8]
   1aecc:	ldr	r0, [r0]
   1aed0:	cmp	r0, #0
   1aed4:	bcs	1afa8 <__assert_fail@plt+0x9b98>
   1aed8:	b	1af1c <__assert_fail@plt+0x9b0c>
   1aedc:	ldr	r0, [fp, #-8]
   1aee0:	ldr	r0, [r0]
   1aee4:	ldr	r1, [fp, #-12]
   1aee8:	asr	r3, r1, #31
   1aeec:	mvn	r2, #0
   1aef0:	str	r0, [sp, #20]
   1aef4:	mov	r0, r2
   1aef8:	str	r1, [sp, #16]
   1aefc:	mov	r1, r2
   1af00:	ldr	r2, [sp, #16]
   1af04:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1af08:	ldr	r2, [sp, #20]
   1af0c:	subs	r0, r2, r0
   1af10:	rscs	r1, r1, #0
   1af14:	bcc	1b0f8 <__assert_fail@plt+0x9ce8>
   1af18:	b	1b110 <__assert_fail@plt+0x9d00>
   1af1c:	b	1af20 <__assert_fail@plt+0x9b10>
   1af20:	ldr	r0, [pc, #596]	; 1b17c <__assert_fail@plt+0x9d6c>
   1af24:	ldr	r1, [fp, #-12]
   1af28:	cmp	r1, r0
   1af2c:	blt	1af44 <__assert_fail@plt+0x9b34>
   1af30:	b	1af58 <__assert_fail@plt+0x9b48>
   1af34:	ldr	r0, [fp, #-12]
   1af38:	movw	r1, #0
   1af3c:	cmp	r1, r0
   1af40:	bge	1af58 <__assert_fail@plt+0x9b48>
   1af44:	mov	r0, #1
   1af48:	mvn	r1, #0
   1af4c:	str	r1, [sp, #12]
   1af50:	str	r0, [sp, #8]
   1af54:	b	1af84 <__assert_fail@plt+0x9b74>
   1af58:	ldr	r0, [fp, #-12]
   1af5c:	rsb	r0, r0, #0
   1af60:	asr	r3, r0, #31
   1af64:	mvn	r1, #0
   1af68:	str	r0, [sp, #4]
   1af6c:	mov	r0, r1
   1af70:	ldr	r2, [sp, #4]
   1af74:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1af78:	str	r0, [sp, #12]
   1af7c:	str	r1, [sp, #8]
   1af80:	b	1af84 <__assert_fail@plt+0x9b74>
   1af84:	ldr	r0, [sp, #8]
   1af88:	ldr	r1, [sp, #12]
   1af8c:	ldr	r2, [fp, #-8]
   1af90:	ldr	r2, [r2]
   1af94:	mvn	r2, r2
   1af98:	subs	r1, r2, r1
   1af9c:	rscs	r0, r0, #0
   1afa0:	bcs	1b0f8 <__assert_fail@plt+0x9ce8>
   1afa4:	b	1b110 <__assert_fail@plt+0x9d00>
   1afa8:	b	1afac <__assert_fail@plt+0x9b9c>
   1afac:	b	1b010 <__assert_fail@plt+0x9c00>
   1afb0:	b	1b010 <__assert_fail@plt+0x9c00>
   1afb4:	ldr	r0, [fp, #-12]
   1afb8:	cmn	r0, #1
   1afbc:	bne	1b010 <__assert_fail@plt+0x9c00>
   1afc0:	b	1afe0 <__assert_fail@plt+0x9bd0>
   1afc4:	ldr	r0, [fp, #-8]
   1afc8:	ldr	r0, [r0]
   1afcc:	add	r0, r0, #0
   1afd0:	movw	r1, #0
   1afd4:	cmp	r1, r0
   1afd8:	bcc	1b0f8 <__assert_fail@plt+0x9ce8>
   1afdc:	b	1b110 <__assert_fail@plt+0x9d00>
   1afe0:	ldr	r0, [fp, #-8]
   1afe4:	ldr	r0, [r0]
   1afe8:	movw	r1, #0
   1afec:	cmp	r1, r0
   1aff0:	bcs	1b110 <__assert_fail@plt+0x9d00>
   1aff4:	ldr	r0, [fp, #-8]
   1aff8:	ldr	r0, [r0]
   1affc:	sub	r0, r0, #1
   1b000:	mvn	r1, #0
   1b004:	cmp	r1, r0
   1b008:	bcc	1b0f8 <__assert_fail@plt+0x9ce8>
   1b00c:	b	1b110 <__assert_fail@plt+0x9d00>
   1b010:	ldr	r0, [fp, #-12]
   1b014:	movw	r1, #0
   1b018:	sdiv	r0, r1, r0
   1b01c:	ldr	r1, [fp, #-8]
   1b020:	ldr	r1, [r1]
   1b024:	cmp	r0, r1
   1b028:	bcc	1b0f8 <__assert_fail@plt+0x9ce8>
   1b02c:	b	1b110 <__assert_fail@plt+0x9d00>
   1b030:	ldr	r0, [fp, #-12]
   1b034:	cmp	r0, #0
   1b038:	bne	1b040 <__assert_fail@plt+0x9c30>
   1b03c:	b	1b110 <__assert_fail@plt+0x9d00>
   1b040:	ldr	r0, [fp, #-8]
   1b044:	ldr	r0, [r0]
   1b048:	cmp	r0, #0
   1b04c:	bcs	1b0c4 <__assert_fail@plt+0x9cb4>
   1b050:	b	1b058 <__assert_fail@plt+0x9c48>
   1b054:	b	1b05c <__assert_fail@plt+0x9c4c>
   1b058:	b	1b0a4 <__assert_fail@plt+0x9c94>
   1b05c:	ldr	r0, [fp, #-8]
   1b060:	ldr	r0, [r0]
   1b064:	cmn	r0, #1
   1b068:	bne	1b0a4 <__assert_fail@plt+0x9c94>
   1b06c:	b	1b070 <__assert_fail@plt+0x9c60>
   1b070:	ldr	r0, [fp, #-12]
   1b074:	add	r0, r0, #0
   1b078:	movw	r1, #0
   1b07c:	cmp	r1, r0
   1b080:	blt	1b0f8 <__assert_fail@plt+0x9ce8>
   1b084:	b	1b110 <__assert_fail@plt+0x9d00>
   1b088:	ldr	r0, [fp, #-12]
   1b08c:	sub	r0, r0, #1
   1b090:	mvn	r1, #0
   1b094:	cmp	r1, r0
   1b098:	blt	1b0f8 <__assert_fail@plt+0x9ce8>
   1b09c:	b	1b110 <__assert_fail@plt+0x9d00>
   1b0a0:			; <UNDEFINED> instruction: 0xffff8000
   1b0a4:	ldr	r0, [fp, #-8]
   1b0a8:	ldr	r0, [r0]
   1b0ac:	movw	r1, #0
   1b0b0:	udiv	r0, r1, r0
   1b0b4:	ldr	r1, [fp, #-12]
   1b0b8:	cmp	r0, r1
   1b0bc:	bcc	1b0f8 <__assert_fail@plt+0x9ce8>
   1b0c0:	b	1b110 <__assert_fail@plt+0x9d00>
   1b0c4:	ldr	r0, [fp, #-12]
   1b0c8:	asr	r3, r0, #31
   1b0cc:	mvn	r1, #0
   1b0d0:	str	r0, [sp]
   1b0d4:	mov	r0, r1
   1b0d8:	ldr	r2, [sp]
   1b0dc:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1b0e0:	ldr	r2, [fp, #-8]
   1b0e4:	ldr	r2, [r2]
   1b0e8:	subs	r0, r0, r2
   1b0ec:	sbcs	r1, r1, #0
   1b0f0:	bcs	1b110 <__assert_fail@plt+0x9d00>
   1b0f4:	b	1b0f8 <__assert_fail@plt+0x9ce8>
   1b0f8:	ldr	r0, [fp, #-8]
   1b0fc:	ldr	r0, [r0]
   1b100:	ldr	r1, [fp, #-12]
   1b104:	mul	r0, r0, r1
   1b108:	str	r0, [fp, #-16]
   1b10c:	b	1b128 <__assert_fail@plt+0x9d18>
   1b110:	ldr	r0, [fp, #-8]
   1b114:	ldr	r0, [r0]
   1b118:	ldr	r1, [fp, #-12]
   1b11c:	mul	r0, r0, r1
   1b120:	str	r0, [fp, #-16]
   1b124:	b	1b15c <__assert_fail@plt+0x9d4c>
   1b128:	ldr	r0, [fp, #-8]
   1b12c:	ldr	r0, [r0]
   1b130:	cmp	r0, #0
   1b134:	movw	r0, #0
   1b138:	movcc	r0, #1
   1b13c:	tst	r0, #1
   1b140:	movw	r0, #0
   1b144:	mvneq	r0, #0
   1b148:	ldr	r1, [fp, #-8]
   1b14c:	str	r0, [r1]
   1b150:	movw	r0, #1
   1b154:	str	r0, [fp, #-4]
   1b158:	b	1b170 <__assert_fail@plt+0x9d60>
   1b15c:	ldr	r0, [fp, #-16]
   1b160:	ldr	r1, [fp, #-8]
   1b164:	str	r0, [r1]
   1b168:	movw	r0, #0
   1b16c:	str	r0, [fp, #-4]
   1b170:	ldr	r0, [fp, #-4]
   1b174:	mov	sp, fp
   1b178:	pop	{fp, pc}
   1b17c:	andhi	r0, r0, r1
   1b180:	svcvc	0x00ffffff
   1b184:	andhi	r0, r0, r0
   1b188:			; <UNDEFINED> instruction: 0xffff8000
   1b18c:	push	{fp, lr}
   1b190:	mov	fp, sp
   1b194:	sub	sp, sp, #16
   1b198:	str	r0, [fp, #-4]
   1b19c:	str	r1, [sp, #8]
   1b1a0:	str	r2, [sp, #4]
   1b1a4:	movw	r0, #0
   1b1a8:	str	r0, [sp]
   1b1ac:	ldr	r0, [sp, #4]
   1b1b0:	mvn	r1, #0
   1b1b4:	add	r1, r0, r1
   1b1b8:	str	r1, [sp, #4]
   1b1bc:	cmp	r0, #0
   1b1c0:	beq	1b1e0 <__assert_fail@plt+0x9dd0>
   1b1c4:	ldr	r0, [fp, #-4]
   1b1c8:	ldr	r1, [sp, #8]
   1b1cc:	bl	19b98 <__assert_fail@plt+0x8788>
   1b1d0:	ldr	r1, [sp]
   1b1d4:	orr	r0, r1, r0
   1b1d8:	str	r0, [sp]
   1b1dc:	b	1b1ac <__assert_fail@plt+0x9d9c>
   1b1e0:	ldr	r0, [sp]
   1b1e4:	mov	sp, fp
   1b1e8:	pop	{fp, pc}
   1b1ec:	push	{fp, lr}
   1b1f0:	mov	fp, sp
   1b1f4:	sub	sp, sp, #16
   1b1f8:	str	r0, [sp, #8]
   1b1fc:	str	r1, [sp, #4]
   1b200:	ldr	r0, [sp, #8]
   1b204:	cmp	r0, #0
   1b208:	beq	1b218 <__assert_fail@plt+0x9e08>
   1b20c:	ldr	r0, [sp, #4]
   1b210:	cmp	r0, #0
   1b214:	bne	1b224 <__assert_fail@plt+0x9e14>
   1b218:	movw	r0, #1
   1b21c:	str	r0, [sp, #4]
   1b220:	str	r0, [sp, #8]
   1b224:	ldr	r0, [sp, #4]
   1b228:	cmp	r0, #0
   1b22c:	beq	1b260 <__assert_fail@plt+0x9e50>
   1b230:	ldr	r0, [pc, #76]	; 1b284 <__assert_fail@plt+0x9e74>
   1b234:	ldr	r1, [sp, #4]
   1b238:	udiv	r0, r0, r1
   1b23c:	ldr	r1, [sp, #8]
   1b240:	cmp	r0, r1
   1b244:	bcs	1b260 <__assert_fail@plt+0x9e50>
   1b248:	bl	11308 <__errno_location@plt>
   1b24c:	movw	r1, #12
   1b250:	str	r1, [r0]
   1b254:	movw	r0, #0
   1b258:	str	r0, [fp, #-4]
   1b25c:	b	1b278 <__assert_fail@plt+0x9e68>
   1b260:	ldr	r0, [sp, #8]
   1b264:	ldr	r1, [sp, #4]
   1b268:	bl	1111c <calloc@plt>
   1b26c:	str	r0, [sp]
   1b270:	ldr	r0, [sp]
   1b274:	str	r0, [fp, #-4]
   1b278:	ldr	r0, [fp, #-4]
   1b27c:	mov	sp, fp
   1b280:	pop	{fp, pc}
   1b284:	svcvc	0x00ffffff
   1b288:	push	{fp, lr}
   1b28c:	mov	fp, sp
   1b290:	sub	sp, sp, #16
   1b294:	str	r0, [sp, #8]
   1b298:	ldr	r0, [sp, #8]
   1b29c:	cmp	r0, #0
   1b2a0:	bne	1b2ac <__assert_fail@plt+0x9e9c>
   1b2a4:	movw	r0, #1
   1b2a8:	str	r0, [sp, #8]
   1b2ac:	ldr	r0, [pc, #64]	; 1b2f4 <__assert_fail@plt+0x9ee4>
   1b2b0:	ldr	r1, [sp, #8]
   1b2b4:	cmp	r0, r1
   1b2b8:	bcs	1b2d4 <__assert_fail@plt+0x9ec4>
   1b2bc:	bl	11308 <__errno_location@plt>
   1b2c0:	movw	r1, #12
   1b2c4:	str	r1, [r0]
   1b2c8:	movw	r0, #0
   1b2cc:	str	r0, [fp, #-4]
   1b2d0:	b	1b2e8 <__assert_fail@plt+0x9ed8>
   1b2d4:	ldr	r0, [sp, #8]
   1b2d8:	bl	11278 <malloc@plt>
   1b2dc:	str	r0, [sp, #4]
   1b2e0:	ldr	r0, [sp, #4]
   1b2e4:	str	r0, [fp, #-4]
   1b2e8:	ldr	r0, [fp, #-4]
   1b2ec:	mov	sp, fp
   1b2f0:	pop	{fp, pc}
   1b2f4:	svcvc	0x00ffffff
   1b2f8:	push	{fp, lr}
   1b2fc:	mov	fp, sp
   1b300:	sub	sp, sp, #16
   1b304:	str	r0, [sp, #8]
   1b308:	str	r1, [sp, #4]
   1b30c:	ldr	r0, [sp, #8]
   1b310:	movw	r1, #0
   1b314:	cmp	r0, r1
   1b318:	bne	1b32c <__assert_fail@plt+0x9f1c>
   1b31c:	ldr	r0, [sp, #4]
   1b320:	bl	1b288 <__assert_fail@plt+0x9e78>
   1b324:	str	r0, [fp, #-4]
   1b328:	b	1b38c <__assert_fail@plt+0x9f7c>
   1b32c:	ldr	r0, [sp, #4]
   1b330:	cmp	r0, #0
   1b334:	bne	1b34c <__assert_fail@plt+0x9f3c>
   1b338:	ldr	r0, [sp, #8]
   1b33c:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   1b340:	movw	r0, #0
   1b344:	str	r0, [fp, #-4]
   1b348:	b	1b38c <__assert_fail@plt+0x9f7c>
   1b34c:	ldr	r0, [pc, #68]	; 1b398 <__assert_fail@plt+0x9f88>
   1b350:	ldr	r1, [sp, #4]
   1b354:	cmp	r0, r1
   1b358:	bcs	1b374 <__assert_fail@plt+0x9f64>
   1b35c:	bl	11308 <__errno_location@plt>
   1b360:	movw	r1, #12
   1b364:	str	r1, [r0]
   1b368:	movw	r0, #0
   1b36c:	str	r0, [fp, #-4]
   1b370:	b	1b38c <__assert_fail@plt+0x9f7c>
   1b374:	ldr	r0, [sp, #8]
   1b378:	ldr	r1, [sp, #4]
   1b37c:	bl	111dc <realloc@plt>
   1b380:	str	r0, [sp]
   1b384:	ldr	r0, [sp]
   1b388:	str	r0, [fp, #-4]
   1b38c:	ldr	r0, [fp, #-4]
   1b390:	mov	sp, fp
   1b394:	pop	{fp, pc}
   1b398:	svcvc	0x00ffffff
   1b39c:	push	{fp, lr}
   1b3a0:	mov	fp, sp
   1b3a4:	sub	sp, sp, #24
   1b3a8:	str	r0, [fp, #-8]
   1b3ac:	str	r1, [sp, #12]
   1b3b0:	ldr	r0, [fp, #-8]
   1b3b4:	str	r0, [sp, #8]
   1b3b8:	ldr	r0, [sp, #12]
   1b3bc:	str	r0, [sp, #4]
   1b3c0:	ldr	r0, [sp, #8]
   1b3c4:	ldr	r1, [sp, #4]
   1b3c8:	cmp	r0, r1
   1b3cc:	bne	1b3dc <__assert_fail@plt+0x9fcc>
   1b3d0:	movw	r0, #0
   1b3d4:	str	r0, [fp, #-4]
   1b3d8:	b	1b448 <__assert_fail@plt+0xa038>
   1b3dc:	b	1b3e0 <__assert_fail@plt+0x9fd0>
   1b3e0:	ldr	r0, [sp, #8]
   1b3e4:	ldrb	r0, [r0]
   1b3e8:	bl	1d7b4 <__assert_fail@plt+0xc3a4>
   1b3ec:	strb	r0, [sp, #3]
   1b3f0:	ldr	r0, [sp, #4]
   1b3f4:	ldrb	r0, [r0]
   1b3f8:	bl	1d7b4 <__assert_fail@plt+0xc3a4>
   1b3fc:	strb	r0, [sp, #2]
   1b400:	ldrb	r0, [sp, #3]
   1b404:	cmp	r0, #0
   1b408:	bne	1b410 <__assert_fail@plt+0xa000>
   1b40c:	b	1b438 <__assert_fail@plt+0xa028>
   1b410:	ldr	r0, [sp, #8]
   1b414:	add	r0, r0, #1
   1b418:	str	r0, [sp, #8]
   1b41c:	ldr	r0, [sp, #4]
   1b420:	add	r0, r0, #1
   1b424:	str	r0, [sp, #4]
   1b428:	ldrb	r0, [sp, #3]
   1b42c:	ldrb	r1, [sp, #2]
   1b430:	cmp	r0, r1
   1b434:	beq	1b3e0 <__assert_fail@plt+0x9fd0>
   1b438:	ldrb	r0, [sp, #3]
   1b43c:	ldrb	r1, [sp, #2]
   1b440:	sub	r0, r0, r1
   1b444:	str	r0, [fp, #-4]
   1b448:	ldr	r0, [fp, #-4]
   1b44c:	mov	sp, fp
   1b450:	pop	{fp, pc}
   1b454:	push	{fp, lr}
   1b458:	mov	fp, sp
   1b45c:	sub	sp, sp, #16
   1b460:	str	r0, [sp, #8]
   1b464:	ldr	r0, [sp, #8]
   1b468:	bl	1123c <__fpending@plt>
   1b46c:	cmp	r0, #0
   1b470:	movw	r0, #0
   1b474:	movne	r0, #1
   1b478:	and	r0, r0, #1
   1b47c:	strb	r0, [sp, #7]
   1b480:	ldr	r0, [sp, #8]
   1b484:	bl	11248 <ferror_unlocked@plt>
   1b488:	cmp	r0, #0
   1b48c:	movw	r0, #0
   1b490:	movne	r0, #1
   1b494:	and	r0, r0, #1
   1b498:	strb	r0, [sp, #6]
   1b49c:	ldr	r0, [sp, #8]
   1b4a0:	bl	1b524 <__assert_fail@plt+0xa114>
   1b4a4:	cmp	r0, #0
   1b4a8:	movw	r0, #0
   1b4ac:	movne	r0, #1
   1b4b0:	and	r0, r0, #1
   1b4b4:	strb	r0, [sp, #5]
   1b4b8:	ldrb	r0, [sp, #6]
   1b4bc:	tst	r0, #1
   1b4c0:	bne	1b4ec <__assert_fail@plt+0xa0dc>
   1b4c4:	ldrb	r0, [sp, #5]
   1b4c8:	tst	r0, #1
   1b4cc:	beq	1b510 <__assert_fail@plt+0xa100>
   1b4d0:	ldrb	r0, [sp, #7]
   1b4d4:	tst	r0, #1
   1b4d8:	bne	1b4ec <__assert_fail@plt+0xa0dc>
   1b4dc:	bl	11308 <__errno_location@plt>
   1b4e0:	ldr	r0, [r0]
   1b4e4:	cmp	r0, #9
   1b4e8:	beq	1b510 <__assert_fail@plt+0xa100>
   1b4ec:	ldrb	r0, [sp, #5]
   1b4f0:	tst	r0, #1
   1b4f4:	bne	1b504 <__assert_fail@plt+0xa0f4>
   1b4f8:	bl	11308 <__errno_location@plt>
   1b4fc:	movw	r1, #0
   1b500:	str	r1, [r0]
   1b504:	mvn	r0, #0
   1b508:	str	r0, [fp, #-4]
   1b50c:	b	1b518 <__assert_fail@plt+0xa108>
   1b510:	movw	r0, #0
   1b514:	str	r0, [fp, #-4]
   1b518:	ldr	r0, [fp, #-4]
   1b51c:	mov	sp, fp
   1b520:	pop	{fp, pc}
   1b524:	push	{fp, lr}
   1b528:	mov	fp, sp
   1b52c:	sub	sp, sp, #32
   1b530:	str	r0, [fp, #-8]
   1b534:	movw	r0, #0
   1b538:	str	r0, [fp, #-12]
   1b53c:	str	r0, [sp, #12]
   1b540:	ldr	r0, [fp, #-8]
   1b544:	bl	1135c <fileno@plt>
   1b548:	str	r0, [sp, #16]
   1b54c:	ldr	r0, [sp, #16]
   1b550:	cmp	r0, #0
   1b554:	bge	1b568 <__assert_fail@plt+0xa158>
   1b558:	ldr	r0, [fp, #-8]
   1b55c:	bl	11368 <fclose@plt>
   1b560:	str	r0, [fp, #-4]
   1b564:	b	1b604 <__assert_fail@plt+0xa1f4>
   1b568:	ldr	r0, [fp, #-8]
   1b56c:	bl	11290 <__freading@plt>
   1b570:	cmp	r0, #0
   1b574:	beq	1b5ac <__assert_fail@plt+0xa19c>
   1b578:	ldr	r0, [fp, #-8]
   1b57c:	bl	1135c <fileno@plt>
   1b580:	mov	r1, sp
   1b584:	mov	r2, #1
   1b588:	str	r2, [r1]
   1b58c:	mov	r1, #0
   1b590:	mov	r2, r1
   1b594:	mov	r3, r1
   1b598:	bl	11218 <lseek64@plt>
   1b59c:	and	r0, r0, r1
   1b5a0:	cmn	r0, #1
   1b5a4:	beq	1b5c8 <__assert_fail@plt+0xa1b8>
   1b5a8:	b	1b5ac <__assert_fail@plt+0xa19c>
   1b5ac:	ldr	r0, [fp, #-8]
   1b5b0:	bl	1b610 <__assert_fail@plt+0xa200>
   1b5b4:	cmp	r0, #0
   1b5b8:	beq	1b5c8 <__assert_fail@plt+0xa1b8>
   1b5bc:	bl	11308 <__errno_location@plt>
   1b5c0:	ldr	r0, [r0]
   1b5c4:	str	r0, [fp, #-12]
   1b5c8:	ldr	r0, [fp, #-8]
   1b5cc:	bl	11368 <fclose@plt>
   1b5d0:	str	r0, [sp, #12]
   1b5d4:	ldr	r0, [fp, #-12]
   1b5d8:	cmp	r0, #0
   1b5dc:	beq	1b5fc <__assert_fail@plt+0xa1ec>
   1b5e0:	ldr	r0, [fp, #-12]
   1b5e4:	str	r0, [sp, #8]
   1b5e8:	bl	11308 <__errno_location@plt>
   1b5ec:	ldr	r1, [sp, #8]
   1b5f0:	str	r1, [r0]
   1b5f4:	mvn	r0, #0
   1b5f8:	str	r0, [sp, #12]
   1b5fc:	ldr	r0, [sp, #12]
   1b600:	str	r0, [fp, #-4]
   1b604:	ldr	r0, [fp, #-4]
   1b608:	mov	sp, fp
   1b60c:	pop	{fp, pc}
   1b610:	push	{fp, lr}
   1b614:	mov	fp, sp
   1b618:	sub	sp, sp, #8
   1b61c:	str	r0, [sp]
   1b620:	ldr	r0, [sp]
   1b624:	movw	r1, #0
   1b628:	cmp	r0, r1
   1b62c:	beq	1b640 <__assert_fail@plt+0xa230>
   1b630:	ldr	r0, [sp]
   1b634:	bl	11290 <__freading@plt>
   1b638:	cmp	r0, #0
   1b63c:	bne	1b650 <__assert_fail@plt+0xa240>
   1b640:	ldr	r0, [sp]
   1b644:	bl	11188 <fflush@plt>
   1b648:	str	r0, [sp, #4]
   1b64c:	b	1b664 <__assert_fail@plt+0xa254>
   1b650:	ldr	r0, [sp]
   1b654:	bl	1b670 <__assert_fail@plt+0xa260>
   1b658:	ldr	r0, [sp]
   1b65c:	bl	11188 <fflush@plt>
   1b660:	str	r0, [sp, #4]
   1b664:	ldr	r0, [sp, #4]
   1b668:	mov	sp, fp
   1b66c:	pop	{fp, pc}
   1b670:	push	{fp, lr}
   1b674:	mov	fp, sp
   1b678:	sub	sp, sp, #8
   1b67c:	str	r0, [sp, #4]
   1b680:	ldr	r0, [sp, #4]
   1b684:	ldr	r0, [r0]
   1b688:	and	r0, r0, #256	; 0x100
   1b68c:	cmp	r0, #0
   1b690:	beq	1b6b4 <__assert_fail@plt+0xa2a4>
   1b694:	ldr	r0, [sp, #4]
   1b698:	mov	r1, sp
   1b69c:	mov	r2, #1
   1b6a0:	str	r2, [r1]
   1b6a4:	mov	r1, #0
   1b6a8:	mov	r2, r1
   1b6ac:	mov	r3, r1
   1b6b0:	bl	1b6bc <__assert_fail@plt+0xa2ac>
   1b6b4:	mov	sp, fp
   1b6b8:	pop	{fp, pc}
   1b6bc:	push	{fp, lr}
   1b6c0:	mov	fp, sp
   1b6c4:	sub	sp, sp, #32
   1b6c8:	ldr	r1, [fp, #8]
   1b6cc:	str	r0, [fp, #-8]
   1b6d0:	str	r3, [sp, #20]
   1b6d4:	str	r2, [sp, #16]
   1b6d8:	ldr	r0, [fp, #-8]
   1b6dc:	ldr	r0, [r0, #8]
   1b6e0:	ldr	r2, [fp, #-8]
   1b6e4:	ldr	r2, [r2, #4]
   1b6e8:	cmp	r0, r2
   1b6ec:	bne	1b798 <__assert_fail@plt+0xa388>
   1b6f0:	ldr	r0, [fp, #-8]
   1b6f4:	ldr	r0, [r0, #20]
   1b6f8:	ldr	r1, [fp, #-8]
   1b6fc:	ldr	r1, [r1, #16]
   1b700:	cmp	r0, r1
   1b704:	bne	1b798 <__assert_fail@plt+0xa388>
   1b708:	ldr	r0, [fp, #-8]
   1b70c:	ldr	r0, [r0, #36]	; 0x24
   1b710:	movw	r1, #0
   1b714:	cmp	r0, r1
   1b718:	bne	1b798 <__assert_fail@plt+0xa388>
   1b71c:	ldr	r0, [fp, #-8]
   1b720:	bl	1135c <fileno@plt>
   1b724:	ldr	r2, [sp, #16]
   1b728:	ldr	r3, [sp, #20]
   1b72c:	ldr	r1, [fp, #8]
   1b730:	mov	ip, sp
   1b734:	str	r1, [ip]
   1b738:	bl	11218 <lseek64@plt>
   1b73c:	str	r1, [sp, #12]
   1b740:	str	r0, [sp, #8]
   1b744:	ldr	r0, [sp, #8]
   1b748:	ldr	r1, [sp, #12]
   1b74c:	and	r0, r0, r1
   1b750:	cmn	r0, #1
   1b754:	bne	1b768 <__assert_fail@plt+0xa358>
   1b758:	b	1b75c <__assert_fail@plt+0xa34c>
   1b75c:	mvn	r0, #0
   1b760:	str	r0, [fp, #-4]
   1b764:	b	1b7b8 <__assert_fail@plt+0xa3a8>
   1b768:	ldr	r0, [fp, #-8]
   1b76c:	ldr	r1, [r0]
   1b770:	bic	r1, r1, #16
   1b774:	str	r1, [r0]
   1b778:	ldr	r0, [sp, #8]
   1b77c:	ldr	r1, [sp, #12]
   1b780:	ldr	r2, [fp, #-8]
   1b784:	str	r1, [r2, #84]	; 0x54
   1b788:	str	r0, [r2, #80]	; 0x50
   1b78c:	movw	r0, #0
   1b790:	str	r0, [fp, #-4]
   1b794:	b	1b7b8 <__assert_fail@plt+0xa3a8>
   1b798:	ldr	r0, [fp, #-8]
   1b79c:	ldr	r2, [sp, #16]
   1b7a0:	ldr	r3, [sp, #20]
   1b7a4:	ldr	r1, [fp, #8]
   1b7a8:	mov	ip, sp
   1b7ac:	str	r1, [ip]
   1b7b0:	bl	11374 <fseeko64@plt>
   1b7b4:	str	r0, [fp, #-4]
   1b7b8:	ldr	r0, [fp, #-4]
   1b7bc:	mov	sp, fp
   1b7c0:	pop	{fp, pc}
   1b7c4:	push	{fp, lr}
   1b7c8:	mov	fp, sp
   1b7cc:	bl	11308 <__errno_location@plt>
   1b7d0:	movw	r1, #12
   1b7d4:	str	r1, [r0]
   1b7d8:	movw	r0, #0
   1b7dc:	pop	{fp, pc}
   1b7e0:	push	{fp, lr}
   1b7e4:	mov	fp, sp
   1b7e8:	sub	sp, sp, #8
   1b7ec:	str	r0, [sp, #4]
   1b7f0:	ldr	r0, [sp, #4]
   1b7f4:	cmn	r0, #1
   1b7f8:	bhi	1b80c <__assert_fail@plt+0xa3fc>
   1b7fc:	ldr	r0, [sp, #4]
   1b800:	bl	1b288 <__assert_fail@plt+0x9e78>
   1b804:	str	r0, [sp]
   1b808:	b	1b814 <__assert_fail@plt+0xa404>
   1b80c:	bl	1b7c4 <__assert_fail@plt+0xa3b4>
   1b810:	str	r0, [sp]
   1b814:	ldr	r0, [sp]
   1b818:	mov	sp, fp
   1b81c:	pop	{fp, pc}
   1b820:	push	{fp, lr}
   1b824:	mov	fp, sp
   1b828:	sub	sp, sp, #16
   1b82c:	str	r0, [fp, #-4]
   1b830:	str	r1, [sp, #8]
   1b834:	ldr	r0, [sp, #8]
   1b838:	cmn	r0, #1
   1b83c:	bhi	1b874 <__assert_fail@plt+0xa464>
   1b840:	ldr	r0, [fp, #-4]
   1b844:	ldr	r1, [sp, #8]
   1b848:	ldr	r2, [sp, #8]
   1b84c:	cmp	r2, #0
   1b850:	movw	r2, #0
   1b854:	movne	r2, #1
   1b858:	mvn	r3, #0
   1b85c:	eor	r2, r2, r3
   1b860:	and	r2, r2, #1
   1b864:	orr	r1, r1, r2
   1b868:	bl	1b2f8 <__assert_fail@plt+0x9ee8>
   1b86c:	str	r0, [sp, #4]
   1b870:	b	1b87c <__assert_fail@plt+0xa46c>
   1b874:	bl	1b7c4 <__assert_fail@plt+0xa3b4>
   1b878:	str	r0, [sp, #4]
   1b87c:	ldr	r0, [sp, #4]
   1b880:	mov	sp, fp
   1b884:	pop	{fp, pc}
   1b888:	push	{fp, lr}
   1b88c:	mov	fp, sp
   1b890:	sub	sp, sp, #16
   1b894:	str	r0, [sp, #8]
   1b898:	str	r1, [sp, #4]
   1b89c:	ldr	r0, [sp, #8]
   1b8a0:	mvn	r1, #0
   1b8a4:	cmp	r1, r0
   1b8a8:	bcs	1b8cc <__assert_fail@plt+0xa4bc>
   1b8ac:	ldr	r0, [sp, #4]
   1b8b0:	cmp	r0, #0
   1b8b4:	beq	1b8c4 <__assert_fail@plt+0xa4b4>
   1b8b8:	bl	1b7c4 <__assert_fail@plt+0xa3b4>
   1b8bc:	str	r0, [fp, #-4]
   1b8c0:	b	1b90c <__assert_fail@plt+0xa4fc>
   1b8c4:	movw	r0, #0
   1b8c8:	str	r0, [sp, #8]
   1b8cc:	ldr	r0, [sp, #4]
   1b8d0:	mvn	r1, #0
   1b8d4:	cmp	r1, r0
   1b8d8:	bcs	1b8fc <__assert_fail@plt+0xa4ec>
   1b8dc:	ldr	r0, [sp, #8]
   1b8e0:	cmp	r0, #0
   1b8e4:	beq	1b8f4 <__assert_fail@plt+0xa4e4>
   1b8e8:	bl	1b7c4 <__assert_fail@plt+0xa3b4>
   1b8ec:	str	r0, [fp, #-4]
   1b8f0:	b	1b90c <__assert_fail@plt+0xa4fc>
   1b8f4:	movw	r0, #0
   1b8f8:	str	r0, [sp, #4]
   1b8fc:	ldr	r0, [sp, #8]
   1b900:	ldr	r1, [sp, #4]
   1b904:	bl	1b1ec <__assert_fail@plt+0x9ddc>
   1b908:	str	r0, [fp, #-4]
   1b90c:	ldr	r0, [fp, #-4]
   1b910:	mov	sp, fp
   1b914:	pop	{fp, pc}
   1b918:	push	{fp, lr}
   1b91c:	mov	fp, sp
   1b920:	sub	sp, sp, #16
   1b924:	str	r0, [fp, #-4]
   1b928:	str	r1, [sp, #8]
   1b92c:	str	r2, [sp, #4]
   1b930:	ldr	r0, [sp, #8]
   1b934:	cmp	r0, #0
   1b938:	beq	1b948 <__assert_fail@plt+0xa538>
   1b93c:	ldr	r0, [sp, #4]
   1b940:	cmp	r0, #0
   1b944:	bne	1b954 <__assert_fail@plt+0xa544>
   1b948:	movw	r0, #1
   1b94c:	str	r0, [sp, #4]
   1b950:	str	r0, [sp, #8]
   1b954:	ldr	r0, [sp, #8]
   1b958:	cmn	r0, #1
   1b95c:	bhi	1b984 <__assert_fail@plt+0xa574>
   1b960:	ldr	r0, [sp, #4]
   1b964:	cmn	r0, #1
   1b968:	bhi	1b984 <__assert_fail@plt+0xa574>
   1b96c:	ldr	r0, [fp, #-4]
   1b970:	ldr	r1, [sp, #8]
   1b974:	ldr	r2, [sp, #4]
   1b978:	bl	1bebc <__assert_fail@plt+0xaaac>
   1b97c:	str	r0, [sp]
   1b980:	b	1b98c <__assert_fail@plt+0xa57c>
   1b984:	bl	1b7c4 <__assert_fail@plt+0xa3b4>
   1b988:	str	r0, [sp]
   1b98c:	ldr	r0, [sp]
   1b990:	mov	sp, fp
   1b994:	pop	{fp, pc}
   1b998:	push	{fp, lr}
   1b99c:	mov	fp, sp
   1b9a0:	sub	sp, sp, #8
   1b9a4:	movw	r0, #14
   1b9a8:	bl	113a4 <nl_langinfo@plt>
   1b9ac:	str	r0, [sp, #4]
   1b9b0:	ldr	r0, [sp, #4]
   1b9b4:	movw	r1, #0
   1b9b8:	cmp	r0, r1
   1b9bc:	bne	1b9cc <__assert_fail@plt+0xa5bc>
   1b9c0:	movw	r0, #57271	; 0xdfb7
   1b9c4:	movt	r0, #1
   1b9c8:	str	r0, [sp, #4]
   1b9cc:	ldr	r0, [sp, #4]
   1b9d0:	ldrb	r0, [r0]
   1b9d4:	cmp	r0, #0
   1b9d8:	bne	1b9e8 <__assert_fail@plt+0xa5d8>
   1b9dc:	movw	r0, #60476	; 0xec3c
   1b9e0:	movt	r0, #1
   1b9e4:	str	r0, [sp, #4]
   1b9e8:	ldr	r0, [sp, #4]
   1b9ec:	mov	sp, fp
   1b9f0:	pop	{fp, pc}
   1b9f4:	push	{fp, lr}
   1b9f8:	mov	fp, sp
   1b9fc:	sub	sp, sp, #32
   1ba00:	str	r0, [fp, #-8]
   1ba04:	str	r1, [fp, #-12]
   1ba08:	str	r2, [sp, #16]
   1ba0c:	str	r3, [sp, #12]
   1ba10:	ldr	r0, [fp, #-8]
   1ba14:	movw	r1, #0
   1ba18:	cmp	r0, r1
   1ba1c:	bne	1ba28 <__assert_fail@plt+0xa618>
   1ba20:	add	r0, sp, #4
   1ba24:	str	r0, [fp, #-8]
   1ba28:	ldr	r0, [fp, #-8]
   1ba2c:	ldr	r1, [fp, #-12]
   1ba30:	ldr	r2, [sp, #16]
   1ba34:	ldr	r3, [sp, #12]
   1ba38:	bl	11254 <mbrtowc@plt>
   1ba3c:	str	r0, [sp, #8]
   1ba40:	ldr	r0, [sp, #8]
   1ba44:	mvn	r1, #1
   1ba48:	cmp	r1, r0
   1ba4c:	bhi	1ba90 <__assert_fail@plt+0xa680>
   1ba50:	ldr	r0, [sp, #16]
   1ba54:	cmp	r0, #0
   1ba58:	beq	1ba90 <__assert_fail@plt+0xa680>
   1ba5c:	movw	r0, #0
   1ba60:	bl	1da3c <__assert_fail@plt+0xc62c>
   1ba64:	tst	r0, #1
   1ba68:	bne	1ba90 <__assert_fail@plt+0xa680>
   1ba6c:	ldr	r0, [fp, #-12]
   1ba70:	ldrb	r0, [r0]
   1ba74:	strb	r0, [sp, #3]
   1ba78:	ldrb	r0, [sp, #3]
   1ba7c:	ldr	r1, [fp, #-8]
   1ba80:	str	r0, [r1]
   1ba84:	movw	r0, #1
   1ba88:	str	r0, [fp, #-4]
   1ba8c:	b	1ba98 <__assert_fail@plt+0xa688>
   1ba90:	ldr	r0, [sp, #8]
   1ba94:	str	r0, [fp, #-4]
   1ba98:	ldr	r0, [fp, #-4]
   1ba9c:	mov	sp, fp
   1baa0:	pop	{fp, pc}
   1baa4:	push	{fp, lr}
   1baa8:	mov	fp, sp
   1baac:	sub	sp, sp, #64	; 0x40
   1bab0:	str	r0, [fp, #-8]
   1bab4:	str	r1, [fp, #-12]
   1bab8:	str	r2, [fp, #-16]
   1babc:	ldr	r0, [fp, #-8]
   1bac0:	movw	r1, #0
   1bac4:	cmp	r0, r1
   1bac8:	beq	1bbb0 <__assert_fail@plt+0xa7a0>
   1bacc:	movw	r0, #10
   1bad0:	str	r0, [fp, #-20]	; 0xffffffec
   1bad4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bad8:	movw	r0, #0
   1badc:	bl	1be5c <__assert_fail@plt+0xaa4c>
   1bae0:	str	r0, [fp, #-28]	; 0xffffffe4
   1bae4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bae8:	movw	r1, #0
   1baec:	cmp	r0, r1
   1baf0:	bne	1bb00 <__assert_fail@plt+0xa6f0>
   1baf4:	mvn	r0, #0
   1baf8:	str	r0, [fp, #-4]
   1bafc:	b	1be50 <__assert_fail@plt+0xaa40>
   1bb00:	b	1bb04 <__assert_fail@plt+0xa6f4>
   1bb04:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb08:	str	r0, [sp, #28]
   1bb0c:	ldr	r0, [fp, #-8]
   1bb10:	ldr	r1, [fp, #-12]
   1bb14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bb18:	sub	r3, fp, #20
   1bb1c:	bl	1132c <getgrouplist@plt>
   1bb20:	str	r0, [fp, #-24]	; 0xffffffe8
   1bb24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb28:	cmp	r0, #0
   1bb2c:	bge	1bb4c <__assert_fail@plt+0xa73c>
   1bb30:	ldr	r0, [sp, #28]
   1bb34:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bb38:	cmp	r0, r1
   1bb3c:	bne	1bb4c <__assert_fail@plt+0xa73c>
   1bb40:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb44:	lsl	r0, r0, #1
   1bb48:	str	r0, [fp, #-20]	; 0xffffffec
   1bb4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bb50:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bb54:	bl	1be5c <__assert_fail@plt+0xaa4c>
   1bb58:	str	r0, [sp, #32]
   1bb5c:	movw	r1, #0
   1bb60:	cmp	r0, r1
   1bb64:	bne	1bb7c <__assert_fail@plt+0xa76c>
   1bb68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bb6c:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   1bb70:	mvn	r0, #0
   1bb74:	str	r0, [fp, #-4]
   1bb78:	b	1be50 <__assert_fail@plt+0xaa40>
   1bb7c:	ldr	r0, [sp, #32]
   1bb80:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bb88:	movw	r1, #0
   1bb8c:	cmp	r1, r0
   1bb90:	bgt	1bbac <__assert_fail@plt+0xa79c>
   1bb94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bb98:	ldr	r1, [fp, #-16]
   1bb9c:	str	r0, [r1]
   1bba0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bba4:	str	r0, [fp, #-4]
   1bba8:	b	1be50 <__assert_fail@plt+0xaa40>
   1bbac:	b	1bb04 <__assert_fail@plt+0xa6f4>
   1bbb0:	ldr	r0, [fp, #-8]
   1bbb4:	movw	r1, #0
   1bbb8:	cmp	r0, r1
   1bbbc:	beq	1bbe0 <__assert_fail@plt+0xa7d0>
   1bbc0:	ldr	r2, [fp, #-8]
   1bbc4:	ldr	r3, [fp, #-12]
   1bbc8:	movw	r0, #0
   1bbcc:	str	r0, [sp, #12]
   1bbd0:	ldr	r1, [sp, #12]
   1bbd4:	bl	1d83c <__assert_fail@plt+0xc42c>
   1bbd8:	str	r0, [sp, #8]
   1bbdc:	b	1bbf4 <__assert_fail@plt+0xa7e4>
   1bbe0:	movw	r0, #0
   1bbe4:	str	r0, [sp, #4]
   1bbe8:	ldr	r1, [sp, #4]
   1bbec:	bl	113b0 <getgroups@plt>
   1bbf0:	str	r0, [sp, #8]
   1bbf4:	ldr	r0, [sp, #8]
   1bbf8:	str	r0, [fp, #-20]	; 0xffffffec
   1bbfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bc00:	cmp	r0, #0
   1bc04:	bge	1bc74 <__assert_fail@plt+0xa864>
   1bc08:	bl	11308 <__errno_location@plt>
   1bc0c:	ldr	r0, [r0]
   1bc10:	cmp	r0, #38	; 0x26
   1bc14:	bne	1bc68 <__assert_fail@plt+0xa858>
   1bc18:	movw	r0, #0
   1bc1c:	movw	r1, #1
   1bc20:	bl	1be5c <__assert_fail@plt+0xaa4c>
   1bc24:	str	r0, [fp, #-28]	; 0xffffffe4
   1bc28:	movw	r1, #0
   1bc2c:	cmp	r0, r1
   1bc30:	beq	1bc68 <__assert_fail@plt+0xa858>
   1bc34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bc38:	ldr	r1, [fp, #-16]
   1bc3c:	str	r0, [r1]
   1bc40:	ldr	r0, [fp, #-12]
   1bc44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bc48:	str	r0, [r1]
   1bc4c:	ldr	r0, [fp, #-12]
   1bc50:	cmn	r0, #1
   1bc54:	movw	r0, #0
   1bc58:	movne	r0, #1
   1bc5c:	and	r0, r0, #1
   1bc60:	str	r0, [fp, #-4]
   1bc64:	b	1be50 <__assert_fail@plt+0xaa40>
   1bc68:	mvn	r0, #0
   1bc6c:	str	r0, [fp, #-4]
   1bc70:	b	1be50 <__assert_fail@plt+0xaa40>
   1bc74:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bc78:	cmp	r0, #0
   1bc7c:	beq	1bc9c <__assert_fail@plt+0xa88c>
   1bc80:	ldr	r0, [fp, #-8]
   1bc84:	movw	r1, #0
   1bc88:	cmp	r0, r1
   1bc8c:	bne	1bca8 <__assert_fail@plt+0xa898>
   1bc90:	ldr	r0, [fp, #-12]
   1bc94:	cmn	r0, #1
   1bc98:	beq	1bca8 <__assert_fail@plt+0xa898>
   1bc9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bca0:	add	r0, r0, #1
   1bca4:	str	r0, [fp, #-20]	; 0xffffffec
   1bca8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bcac:	movw	r0, #0
   1bcb0:	bl	1be5c <__assert_fail@plt+0xaa4c>
   1bcb4:	str	r0, [fp, #-28]	; 0xffffffe4
   1bcb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bcbc:	movw	r1, #0
   1bcc0:	cmp	r0, r1
   1bcc4:	bne	1bcd4 <__assert_fail@plt+0xa8c4>
   1bcc8:	mvn	r0, #0
   1bccc:	str	r0, [fp, #-4]
   1bcd0:	b	1be50 <__assert_fail@plt+0xaa40>
   1bcd4:	ldr	r0, [fp, #-8]
   1bcd8:	movw	r1, #0
   1bcdc:	cmp	r0, r1
   1bce0:	beq	1bd00 <__assert_fail@plt+0xa8f0>
   1bce4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bce8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bcec:	ldr	r2, [fp, #-8]
   1bcf0:	ldr	r3, [fp, #-12]
   1bcf4:	bl	1d83c <__assert_fail@plt+0xc42c>
   1bcf8:	str	r0, [sp]
   1bcfc:	b	1bd28 <__assert_fail@plt+0xa918>
   1bd00:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bd04:	ldr	r1, [fp, #-12]
   1bd08:	mvn	r2, #0
   1bd0c:	subs	r1, r1, r2
   1bd10:	movwne	r1, #1
   1bd14:	sub	r0, r0, r1
   1bd18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bd1c:	add	r1, r2, r1, lsl #2
   1bd20:	bl	113b0 <getgroups@plt>
   1bd24:	str	r0, [sp]
   1bd28:	ldr	r0, [sp]
   1bd2c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd34:	cmp	r0, #0
   1bd38:	bge	1bd50 <__assert_fail@plt+0xa940>
   1bd3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bd40:	bl	12fc4 <__assert_fail@plt+0x1bb4>
   1bd44:	mvn	r0, #0
   1bd48:	str	r0, [fp, #-4]
   1bd4c:	b	1be50 <__assert_fail@plt+0xaa40>
   1bd50:	ldr	r0, [fp, #-8]
   1bd54:	movw	r1, #0
   1bd58:	cmp	r0, r1
   1bd5c:	bne	1bd84 <__assert_fail@plt+0xa974>
   1bd60:	ldr	r0, [fp, #-12]
   1bd64:	cmn	r0, #1
   1bd68:	beq	1bd84 <__assert_fail@plt+0xa974>
   1bd6c:	ldr	r0, [fp, #-12]
   1bd70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bd74:	str	r0, [r1]
   1bd78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd7c:	add	r0, r0, #1
   1bd80:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bd88:	ldr	r1, [fp, #-16]
   1bd8c:	str	r0, [r1]
   1bd90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd94:	movw	r1, #1
   1bd98:	cmp	r1, r0
   1bd9c:	bge	1be48 <__assert_fail@plt+0xaa38>
   1bda0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bda4:	ldr	r0, [r0]
   1bda8:	str	r0, [sp, #24]
   1bdac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bdb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bdb4:	add	r0, r0, r1, lsl #2
   1bdb8:	str	r0, [sp, #16]
   1bdbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bdc0:	add	r0, r0, #4
   1bdc4:	str	r0, [sp, #20]
   1bdc8:	ldr	r0, [sp, #20]
   1bdcc:	ldr	r1, [sp, #16]
   1bdd0:	cmp	r0, r1
   1bdd4:	bcs	1be44 <__assert_fail@plt+0xaa34>
   1bdd8:	ldr	r0, [sp, #20]
   1bddc:	ldr	r0, [r0]
   1bde0:	ldr	r1, [sp, #24]
   1bde4:	cmp	r0, r1
   1bde8:	beq	1be04 <__assert_fail@plt+0xa9f4>
   1bdec:	ldr	r0, [sp, #20]
   1bdf0:	ldr	r0, [r0]
   1bdf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bdf8:	ldr	r1, [r1]
   1bdfc:	cmp	r0, r1
   1be00:	bne	1be18 <__assert_fail@plt+0xaa08>
   1be04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be08:	mvn	r1, #0
   1be0c:	add	r0, r0, r1
   1be10:	str	r0, [fp, #-24]	; 0xffffffe8
   1be14:	b	1be30 <__assert_fail@plt+0xaa20>
   1be18:	ldr	r0, [sp, #20]
   1be1c:	ldr	r0, [r0]
   1be20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1be24:	add	r2, r1, #4
   1be28:	str	r2, [fp, #-28]	; 0xffffffe4
   1be2c:	str	r0, [r1, #4]
   1be30:	b	1be34 <__assert_fail@plt+0xaa24>
   1be34:	ldr	r0, [sp, #20]
   1be38:	add	r0, r0, #4
   1be3c:	str	r0, [sp, #20]
   1be40:	b	1bdc8 <__assert_fail@plt+0xa9b8>
   1be44:	b	1be48 <__assert_fail@plt+0xaa38>
   1be48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1be4c:	str	r0, [fp, #-4]
   1be50:	ldr	r0, [fp, #-4]
   1be54:	mov	sp, fp
   1be58:	pop	{fp, pc}
   1be5c:	push	{fp, lr}
   1be60:	mov	fp, sp
   1be64:	sub	sp, sp, #16
   1be68:	ldr	r2, [pc, #72]	; 1beb8 <__assert_fail@plt+0xaaa8>
   1be6c:	str	r0, [sp, #8]
   1be70:	str	r1, [sp, #4]
   1be74:	ldr	r0, [sp, #4]
   1be78:	cmp	r2, r0
   1be7c:	bcs	1be98 <__assert_fail@plt+0xaa88>
   1be80:	bl	11308 <__errno_location@plt>
   1be84:	movw	r1, #12
   1be88:	str	r1, [r0]
   1be8c:	movw	r0, #0
   1be90:	str	r0, [fp, #-4]
   1be94:	b	1beac <__assert_fail@plt+0xaa9c>
   1be98:	ldr	r0, [sp, #8]
   1be9c:	ldr	r1, [sp, #4]
   1bea0:	lsl	r1, r1, #2
   1bea4:	bl	1b2f8 <__assert_fail@plt+0x9ee8>
   1bea8:	str	r0, [fp, #-4]
   1beac:	ldr	r0, [fp, #-4]
   1beb0:	mov	sp, fp
   1beb4:	pop	{fp, pc}
   1beb8:	svcne	0x00ffffff
   1bebc:	push	{fp, lr}
   1bec0:	mov	fp, sp
   1bec4:	sub	sp, sp, #96	; 0x60
   1bec8:	str	r0, [fp, #-8]
   1becc:	str	r1, [fp, #-12]
   1bed0:	str	r2, [fp, #-16]
   1bed4:	b	1c28c <__assert_fail@plt+0xae7c>
   1bed8:	b	1c0ac <__assert_fail@plt+0xac9c>
   1bedc:	ldr	r0, [fp, #-16]
   1bee0:	cmp	r0, #0
   1bee4:	bcs	1bfe8 <__assert_fail@plt+0xabd8>
   1bee8:	ldr	r0, [fp, #-12]
   1beec:	cmp	r0, #0
   1bef0:	bcs	1bf78 <__assert_fail@plt+0xab68>
   1bef4:	b	1bf14 <__assert_fail@plt+0xab04>
   1bef8:	ldr	r0, [fp, #-12]
   1befc:	ldr	r1, [fp, #-16]
   1bf00:	movw	r2, #127	; 0x7f
   1bf04:	udiv	r1, r2, r1
   1bf08:	cmp	r0, r1
   1bf0c:	bcc	1c07c <__assert_fail@plt+0xac6c>
   1bf10:	b	1c094 <__assert_fail@plt+0xac84>
   1bf14:	b	1bf28 <__assert_fail@plt+0xab18>
   1bf18:	ldr	r0, [fp, #-16]
   1bf1c:	cmp	r0, #1
   1bf20:	bcc	1bf38 <__assert_fail@plt+0xab28>
   1bf24:	b	1bf44 <__assert_fail@plt+0xab34>
   1bf28:	ldr	r0, [fp, #-16]
   1bf2c:	movw	r1, #0
   1bf30:	cmp	r1, r0
   1bf34:	bcs	1bf44 <__assert_fail@plt+0xab34>
   1bf38:	movw	r0, #0
   1bf3c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf40:	b	1bf5c <__assert_fail@plt+0xab4c>
   1bf44:	ldr	r0, [fp, #-16]
   1bf48:	movw	r1, #0
   1bf4c:	sub	r0, r1, r0
   1bf50:	movw	r1, #127	; 0x7f
   1bf54:	udiv	r0, r1, r0
   1bf58:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bf60:	ldr	r1, [fp, #-12]
   1bf64:	mvn	r2, #0
   1bf68:	sub	r1, r2, r1
   1bf6c:	cmp	r0, r1
   1bf70:	bls	1c07c <__assert_fail@plt+0xac6c>
   1bf74:	b	1c094 <__assert_fail@plt+0xac84>
   1bf78:	ldr	r0, [fp, #-16]
   1bf7c:	cmn	r0, #1
   1bf80:	bne	1bfcc <__assert_fail@plt+0xabbc>
   1bf84:	b	1bfa4 <__assert_fail@plt+0xab94>
   1bf88:	ldr	r0, [fp, #-12]
   1bf8c:	mvn	r1, #127	; 0x7f
   1bf90:	add	r0, r0, r1
   1bf94:	movw	r1, #0
   1bf98:	cmp	r1, r0
   1bf9c:	bcc	1c07c <__assert_fail@plt+0xac6c>
   1bfa0:	b	1c094 <__assert_fail@plt+0xac84>
   1bfa4:	ldr	r0, [fp, #-12]
   1bfa8:	movw	r1, #0
   1bfac:	cmp	r1, r0
   1bfb0:	bcs	1c094 <__assert_fail@plt+0xac84>
   1bfb4:	ldr	r0, [fp, #-12]
   1bfb8:	sub	r0, r0, #1
   1bfbc:	movw	r1, #127	; 0x7f
   1bfc0:	cmp	r1, r0
   1bfc4:	bcc	1c07c <__assert_fail@plt+0xac6c>
   1bfc8:	b	1c094 <__assert_fail@plt+0xac84>
   1bfcc:	ldr	r0, [fp, #-16]
   1bfd0:	mvn	r1, #127	; 0x7f
   1bfd4:	udiv	r0, r1, r0
   1bfd8:	ldr	r1, [fp, #-12]
   1bfdc:	cmp	r0, r1
   1bfe0:	bcc	1c07c <__assert_fail@plt+0xac6c>
   1bfe4:	b	1c094 <__assert_fail@plt+0xac84>
   1bfe8:	ldr	r0, [fp, #-16]
   1bfec:	cmp	r0, #0
   1bff0:	bne	1bff8 <__assert_fail@plt+0xabe8>
   1bff4:	b	1c094 <__assert_fail@plt+0xac84>
   1bff8:	ldr	r0, [fp, #-12]
   1bffc:	cmp	r0, #0
   1c000:	bcs	1c064 <__assert_fail@plt+0xac54>
   1c004:	ldr	r0, [fp, #-12]
   1c008:	cmn	r0, #1
   1c00c:	bne	1c048 <__assert_fail@plt+0xac38>
   1c010:	b	1c030 <__assert_fail@plt+0xac20>
   1c014:	ldr	r0, [fp, #-16]
   1c018:	mvn	r1, #127	; 0x7f
   1c01c:	add	r0, r0, r1
   1c020:	movw	r1, #0
   1c024:	cmp	r1, r0
   1c028:	bcc	1c07c <__assert_fail@plt+0xac6c>
   1c02c:	b	1c094 <__assert_fail@plt+0xac84>
   1c030:	ldr	r0, [fp, #-16]
   1c034:	sub	r0, r0, #1
   1c038:	movw	r1, #127	; 0x7f
   1c03c:	cmp	r1, r0
   1c040:	bcc	1c07c <__assert_fail@plt+0xac6c>
   1c044:	b	1c094 <__assert_fail@plt+0xac84>
   1c048:	ldr	r0, [fp, #-12]
   1c04c:	mvn	r1, #127	; 0x7f
   1c050:	udiv	r0, r1, r0
   1c054:	ldr	r1, [fp, #-16]
   1c058:	cmp	r0, r1
   1c05c:	bcc	1c07c <__assert_fail@plt+0xac6c>
   1c060:	b	1c094 <__assert_fail@plt+0xac84>
   1c064:	ldr	r0, [fp, #-16]
   1c068:	movw	r1, #127	; 0x7f
   1c06c:	udiv	r0, r1, r0
   1c070:	ldr	r1, [fp, #-12]
   1c074:	cmp	r0, r1
   1c078:	bcs	1c094 <__assert_fail@plt+0xac84>
   1c07c:	ldr	r0, [fp, #-12]
   1c080:	ldr	r1, [fp, #-16]
   1c084:	mul	r0, r0, r1
   1c088:	sxtb	r0, r0
   1c08c:	str	r0, [fp, #-20]	; 0xffffffec
   1c090:	b	1d1bc <__assert_fail@plt+0xbdac>
   1c094:	ldr	r0, [fp, #-12]
   1c098:	ldr	r1, [fp, #-16]
   1c09c:	mul	r0, r0, r1
   1c0a0:	sxtb	r0, r0
   1c0a4:	str	r0, [fp, #-20]	; 0xffffffec
   1c0a8:	b	1d1d4 <__assert_fail@plt+0xbdc4>
   1c0ac:	ldr	r0, [fp, #-16]
   1c0b0:	cmp	r0, #0
   1c0b4:	bcs	1c1c0 <__assert_fail@plt+0xadb0>
   1c0b8:	ldr	r0, [fp, #-12]
   1c0bc:	cmp	r0, #0
   1c0c0:	bcs	1c148 <__assert_fail@plt+0xad38>
   1c0c4:	b	1c0e4 <__assert_fail@plt+0xacd4>
   1c0c8:	ldr	r0, [fp, #-12]
   1c0cc:	ldr	r1, [fp, #-16]
   1c0d0:	movw	r2, #255	; 0xff
   1c0d4:	udiv	r1, r2, r1
   1c0d8:	cmp	r0, r1
   1c0dc:	bcc	1c25c <__assert_fail@plt+0xae4c>
   1c0e0:	b	1c274 <__assert_fail@plt+0xae64>
   1c0e4:	b	1c0f8 <__assert_fail@plt+0xace8>
   1c0e8:	ldr	r0, [fp, #-16]
   1c0ec:	cmp	r0, #1
   1c0f0:	bcc	1c108 <__assert_fail@plt+0xacf8>
   1c0f4:	b	1c114 <__assert_fail@plt+0xad04>
   1c0f8:	ldr	r0, [fp, #-16]
   1c0fc:	movw	r1, #0
   1c100:	cmp	r1, r0
   1c104:	bcs	1c114 <__assert_fail@plt+0xad04>
   1c108:	movw	r0, #0
   1c10c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c110:	b	1c12c <__assert_fail@plt+0xad1c>
   1c114:	ldr	r0, [fp, #-16]
   1c118:	movw	r1, #0
   1c11c:	sub	r0, r1, r0
   1c120:	movw	r1, #255	; 0xff
   1c124:	udiv	r0, r1, r0
   1c128:	str	r0, [fp, #-28]	; 0xffffffe4
   1c12c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c130:	ldr	r1, [fp, #-12]
   1c134:	mvn	r2, #0
   1c138:	sub	r1, r2, r1
   1c13c:	cmp	r0, r1
   1c140:	bls	1c25c <__assert_fail@plt+0xae4c>
   1c144:	b	1c274 <__assert_fail@plt+0xae64>
   1c148:	b	1c150 <__assert_fail@plt+0xad40>
   1c14c:	b	1c154 <__assert_fail@plt+0xad44>
   1c150:	b	1c1a4 <__assert_fail@plt+0xad94>
   1c154:	ldr	r0, [fp, #-16]
   1c158:	cmn	r0, #1
   1c15c:	bne	1c1a4 <__assert_fail@plt+0xad94>
   1c160:	b	1c17c <__assert_fail@plt+0xad6c>
   1c164:	ldr	r0, [fp, #-12]
   1c168:	add	r0, r0, #0
   1c16c:	movw	r1, #0
   1c170:	cmp	r1, r0
   1c174:	bcc	1c25c <__assert_fail@plt+0xae4c>
   1c178:	b	1c274 <__assert_fail@plt+0xae64>
   1c17c:	ldr	r0, [fp, #-12]
   1c180:	movw	r1, #0
   1c184:	cmp	r1, r0
   1c188:	bcs	1c274 <__assert_fail@plt+0xae64>
   1c18c:	ldr	r0, [fp, #-12]
   1c190:	sub	r0, r0, #1
   1c194:	mvn	r1, #0
   1c198:	cmp	r1, r0
   1c19c:	bcc	1c25c <__assert_fail@plt+0xae4c>
   1c1a0:	b	1c274 <__assert_fail@plt+0xae64>
   1c1a4:	ldr	r0, [fp, #-16]
   1c1a8:	movw	r1, #0
   1c1ac:	udiv	r0, r1, r0
   1c1b0:	ldr	r1, [fp, #-12]
   1c1b4:	cmp	r0, r1
   1c1b8:	bcc	1c25c <__assert_fail@plt+0xae4c>
   1c1bc:	b	1c274 <__assert_fail@plt+0xae64>
   1c1c0:	ldr	r0, [fp, #-16]
   1c1c4:	cmp	r0, #0
   1c1c8:	bne	1c1d0 <__assert_fail@plt+0xadc0>
   1c1cc:	b	1c274 <__assert_fail@plt+0xae64>
   1c1d0:	ldr	r0, [fp, #-12]
   1c1d4:	cmp	r0, #0
   1c1d8:	bcs	1c244 <__assert_fail@plt+0xae34>
   1c1dc:	b	1c1e4 <__assert_fail@plt+0xadd4>
   1c1e0:	b	1c1e8 <__assert_fail@plt+0xadd8>
   1c1e4:	b	1c228 <__assert_fail@plt+0xae18>
   1c1e8:	ldr	r0, [fp, #-12]
   1c1ec:	cmn	r0, #1
   1c1f0:	bne	1c228 <__assert_fail@plt+0xae18>
   1c1f4:	b	1c210 <__assert_fail@plt+0xae00>
   1c1f8:	ldr	r0, [fp, #-16]
   1c1fc:	add	r0, r0, #0
   1c200:	movw	r1, #0
   1c204:	cmp	r1, r0
   1c208:	bcc	1c25c <__assert_fail@plt+0xae4c>
   1c20c:	b	1c274 <__assert_fail@plt+0xae64>
   1c210:	ldr	r0, [fp, #-16]
   1c214:	sub	r0, r0, #1
   1c218:	mvn	r1, #0
   1c21c:	cmp	r1, r0
   1c220:	bcc	1c25c <__assert_fail@plt+0xae4c>
   1c224:	b	1c274 <__assert_fail@plt+0xae64>
   1c228:	ldr	r0, [fp, #-12]
   1c22c:	movw	r1, #0
   1c230:	udiv	r0, r1, r0
   1c234:	ldr	r1, [fp, #-16]
   1c238:	cmp	r0, r1
   1c23c:	bcc	1c25c <__assert_fail@plt+0xae4c>
   1c240:	b	1c274 <__assert_fail@plt+0xae64>
   1c244:	ldr	r0, [fp, #-16]
   1c248:	movw	r1, #255	; 0xff
   1c24c:	udiv	r0, r1, r0
   1c250:	ldr	r1, [fp, #-12]
   1c254:	cmp	r0, r1
   1c258:	bcs	1c274 <__assert_fail@plt+0xae64>
   1c25c:	ldr	r0, [fp, #-12]
   1c260:	ldr	r1, [fp, #-16]
   1c264:	mul	r0, r0, r1
   1c268:	and	r0, r0, #255	; 0xff
   1c26c:	str	r0, [fp, #-20]	; 0xffffffec
   1c270:	b	1d1bc <__assert_fail@plt+0xbdac>
   1c274:	ldr	r0, [fp, #-12]
   1c278:	ldr	r1, [fp, #-16]
   1c27c:	mul	r0, r0, r1
   1c280:	and	r0, r0, #255	; 0xff
   1c284:	str	r0, [fp, #-20]	; 0xffffffec
   1c288:	b	1d1d4 <__assert_fail@plt+0xbdc4>
   1c28c:	b	1c644 <__assert_fail@plt+0xb234>
   1c290:	b	1c464 <__assert_fail@plt+0xb054>
   1c294:	ldr	r0, [fp, #-16]
   1c298:	cmp	r0, #0
   1c29c:	bcs	1c3a0 <__assert_fail@plt+0xaf90>
   1c2a0:	ldr	r0, [fp, #-12]
   1c2a4:	cmp	r0, #0
   1c2a8:	bcs	1c330 <__assert_fail@plt+0xaf20>
   1c2ac:	b	1c2cc <__assert_fail@plt+0xaebc>
   1c2b0:	ldr	r0, [fp, #-12]
   1c2b4:	ldr	r1, [fp, #-16]
   1c2b8:	movw	r2, #32767	; 0x7fff
   1c2bc:	udiv	r1, r2, r1
   1c2c0:	cmp	r0, r1
   1c2c4:	bcc	1c434 <__assert_fail@plt+0xb024>
   1c2c8:	b	1c44c <__assert_fail@plt+0xb03c>
   1c2cc:	b	1c2e0 <__assert_fail@plt+0xaed0>
   1c2d0:	ldr	r0, [fp, #-16]
   1c2d4:	cmp	r0, #1
   1c2d8:	bcc	1c2f0 <__assert_fail@plt+0xaee0>
   1c2dc:	b	1c2fc <__assert_fail@plt+0xaeec>
   1c2e0:	ldr	r0, [fp, #-16]
   1c2e4:	movw	r1, #0
   1c2e8:	cmp	r1, r0
   1c2ec:	bcs	1c2fc <__assert_fail@plt+0xaeec>
   1c2f0:	movw	r0, #0
   1c2f4:	str	r0, [fp, #-32]	; 0xffffffe0
   1c2f8:	b	1c314 <__assert_fail@plt+0xaf04>
   1c2fc:	ldr	r0, [fp, #-16]
   1c300:	movw	r1, #0
   1c304:	sub	r0, r1, r0
   1c308:	movw	r1, #32767	; 0x7fff
   1c30c:	udiv	r0, r1, r0
   1c310:	str	r0, [fp, #-32]	; 0xffffffe0
   1c314:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c318:	ldr	r1, [fp, #-12]
   1c31c:	mvn	r2, #0
   1c320:	sub	r1, r2, r1
   1c324:	cmp	r0, r1
   1c328:	bls	1c434 <__assert_fail@plt+0xb024>
   1c32c:	b	1c44c <__assert_fail@plt+0xb03c>
   1c330:	ldr	r0, [fp, #-16]
   1c334:	cmn	r0, #1
   1c338:	bne	1c384 <__assert_fail@plt+0xaf74>
   1c33c:	b	1c35c <__assert_fail@plt+0xaf4c>
   1c340:	ldr	r0, [pc, #3760]	; 1d1f8 <__assert_fail@plt+0xbde8>
   1c344:	ldr	r1, [fp, #-12]
   1c348:	add	r0, r1, r0
   1c34c:	movw	r1, #0
   1c350:	cmp	r1, r0
   1c354:	bcc	1c434 <__assert_fail@plt+0xb024>
   1c358:	b	1c44c <__assert_fail@plt+0xb03c>
   1c35c:	ldr	r0, [fp, #-12]
   1c360:	movw	r1, #0
   1c364:	cmp	r1, r0
   1c368:	bcs	1c44c <__assert_fail@plt+0xb03c>
   1c36c:	ldr	r0, [fp, #-12]
   1c370:	sub	r0, r0, #1
   1c374:	movw	r1, #32767	; 0x7fff
   1c378:	cmp	r1, r0
   1c37c:	bcc	1c434 <__assert_fail@plt+0xb024>
   1c380:	b	1c44c <__assert_fail@plt+0xb03c>
   1c384:	ldr	r0, [pc, #3692]	; 1d1f8 <__assert_fail@plt+0xbde8>
   1c388:	ldr	r1, [fp, #-16]
   1c38c:	udiv	r0, r0, r1
   1c390:	ldr	r1, [fp, #-12]
   1c394:	cmp	r0, r1
   1c398:	bcc	1c434 <__assert_fail@plt+0xb024>
   1c39c:	b	1c44c <__assert_fail@plt+0xb03c>
   1c3a0:	ldr	r0, [fp, #-16]
   1c3a4:	cmp	r0, #0
   1c3a8:	bne	1c3b0 <__assert_fail@plt+0xafa0>
   1c3ac:	b	1c44c <__assert_fail@plt+0xb03c>
   1c3b0:	ldr	r0, [fp, #-12]
   1c3b4:	cmp	r0, #0
   1c3b8:	bcs	1c41c <__assert_fail@plt+0xb00c>
   1c3bc:	ldr	r0, [fp, #-12]
   1c3c0:	cmn	r0, #1
   1c3c4:	bne	1c400 <__assert_fail@plt+0xaff0>
   1c3c8:	b	1c3e8 <__assert_fail@plt+0xafd8>
   1c3cc:	ldr	r0, [pc, #3620]	; 1d1f8 <__assert_fail@plt+0xbde8>
   1c3d0:	ldr	r1, [fp, #-16]
   1c3d4:	add	r0, r1, r0
   1c3d8:	movw	r1, #0
   1c3dc:	cmp	r1, r0
   1c3e0:	bcc	1c434 <__assert_fail@plt+0xb024>
   1c3e4:	b	1c44c <__assert_fail@plt+0xb03c>
   1c3e8:	ldr	r0, [fp, #-16]
   1c3ec:	sub	r0, r0, #1
   1c3f0:	movw	r1, #32767	; 0x7fff
   1c3f4:	cmp	r1, r0
   1c3f8:	bcc	1c434 <__assert_fail@plt+0xb024>
   1c3fc:	b	1c44c <__assert_fail@plt+0xb03c>
   1c400:	ldr	r0, [pc, #3568]	; 1d1f8 <__assert_fail@plt+0xbde8>
   1c404:	ldr	r1, [fp, #-12]
   1c408:	udiv	r0, r0, r1
   1c40c:	ldr	r1, [fp, #-16]
   1c410:	cmp	r0, r1
   1c414:	bcc	1c434 <__assert_fail@plt+0xb024>
   1c418:	b	1c44c <__assert_fail@plt+0xb03c>
   1c41c:	ldr	r0, [fp, #-16]
   1c420:	movw	r1, #32767	; 0x7fff
   1c424:	udiv	r0, r1, r0
   1c428:	ldr	r1, [fp, #-12]
   1c42c:	cmp	r0, r1
   1c430:	bcs	1c44c <__assert_fail@plt+0xb03c>
   1c434:	ldr	r0, [fp, #-12]
   1c438:	ldr	r1, [fp, #-16]
   1c43c:	mul	r0, r0, r1
   1c440:	sxth	r0, r0
   1c444:	str	r0, [fp, #-20]	; 0xffffffec
   1c448:	b	1d1bc <__assert_fail@plt+0xbdac>
   1c44c:	ldr	r0, [fp, #-12]
   1c450:	ldr	r1, [fp, #-16]
   1c454:	mul	r0, r0, r1
   1c458:	sxth	r0, r0
   1c45c:	str	r0, [fp, #-20]	; 0xffffffec
   1c460:	b	1d1d4 <__assert_fail@plt+0xbdc4>
   1c464:	ldr	r0, [fp, #-16]
   1c468:	cmp	r0, #0
   1c46c:	bcs	1c578 <__assert_fail@plt+0xb168>
   1c470:	ldr	r0, [fp, #-12]
   1c474:	cmp	r0, #0
   1c478:	bcs	1c500 <__assert_fail@plt+0xb0f0>
   1c47c:	b	1c49c <__assert_fail@plt+0xb08c>
   1c480:	ldr	r0, [fp, #-12]
   1c484:	ldr	r1, [fp, #-16]
   1c488:	movw	r2, #65535	; 0xffff
   1c48c:	udiv	r1, r2, r1
   1c490:	cmp	r0, r1
   1c494:	bcc	1c614 <__assert_fail@plt+0xb204>
   1c498:	b	1c62c <__assert_fail@plt+0xb21c>
   1c49c:	b	1c4b0 <__assert_fail@plt+0xb0a0>
   1c4a0:	ldr	r0, [fp, #-16]
   1c4a4:	cmp	r0, #1
   1c4a8:	bcc	1c4c0 <__assert_fail@plt+0xb0b0>
   1c4ac:	b	1c4cc <__assert_fail@plt+0xb0bc>
   1c4b0:	ldr	r0, [fp, #-16]
   1c4b4:	movw	r1, #0
   1c4b8:	cmp	r1, r0
   1c4bc:	bcs	1c4cc <__assert_fail@plt+0xb0bc>
   1c4c0:	movw	r0, #0
   1c4c4:	str	r0, [fp, #-36]	; 0xffffffdc
   1c4c8:	b	1c4e4 <__assert_fail@plt+0xb0d4>
   1c4cc:	ldr	r0, [fp, #-16]
   1c4d0:	movw	r1, #0
   1c4d4:	sub	r0, r1, r0
   1c4d8:	movw	r1, #65535	; 0xffff
   1c4dc:	udiv	r0, r1, r0
   1c4e0:	str	r0, [fp, #-36]	; 0xffffffdc
   1c4e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c4e8:	ldr	r1, [fp, #-12]
   1c4ec:	mvn	r2, #0
   1c4f0:	sub	r1, r2, r1
   1c4f4:	cmp	r0, r1
   1c4f8:	bls	1c614 <__assert_fail@plt+0xb204>
   1c4fc:	b	1c62c <__assert_fail@plt+0xb21c>
   1c500:	b	1c508 <__assert_fail@plt+0xb0f8>
   1c504:	b	1c50c <__assert_fail@plt+0xb0fc>
   1c508:	b	1c55c <__assert_fail@plt+0xb14c>
   1c50c:	ldr	r0, [fp, #-16]
   1c510:	cmn	r0, #1
   1c514:	bne	1c55c <__assert_fail@plt+0xb14c>
   1c518:	b	1c534 <__assert_fail@plt+0xb124>
   1c51c:	ldr	r0, [fp, #-12]
   1c520:	add	r0, r0, #0
   1c524:	movw	r1, #0
   1c528:	cmp	r1, r0
   1c52c:	bcc	1c614 <__assert_fail@plt+0xb204>
   1c530:	b	1c62c <__assert_fail@plt+0xb21c>
   1c534:	ldr	r0, [fp, #-12]
   1c538:	movw	r1, #0
   1c53c:	cmp	r1, r0
   1c540:	bcs	1c62c <__assert_fail@plt+0xb21c>
   1c544:	ldr	r0, [fp, #-12]
   1c548:	sub	r0, r0, #1
   1c54c:	mvn	r1, #0
   1c550:	cmp	r1, r0
   1c554:	bcc	1c614 <__assert_fail@plt+0xb204>
   1c558:	b	1c62c <__assert_fail@plt+0xb21c>
   1c55c:	ldr	r0, [fp, #-16]
   1c560:	movw	r1, #0
   1c564:	udiv	r0, r1, r0
   1c568:	ldr	r1, [fp, #-12]
   1c56c:	cmp	r0, r1
   1c570:	bcc	1c614 <__assert_fail@plt+0xb204>
   1c574:	b	1c62c <__assert_fail@plt+0xb21c>
   1c578:	ldr	r0, [fp, #-16]
   1c57c:	cmp	r0, #0
   1c580:	bne	1c588 <__assert_fail@plt+0xb178>
   1c584:	b	1c62c <__assert_fail@plt+0xb21c>
   1c588:	ldr	r0, [fp, #-12]
   1c58c:	cmp	r0, #0
   1c590:	bcs	1c5fc <__assert_fail@plt+0xb1ec>
   1c594:	b	1c59c <__assert_fail@plt+0xb18c>
   1c598:	b	1c5a0 <__assert_fail@plt+0xb190>
   1c59c:	b	1c5e0 <__assert_fail@plt+0xb1d0>
   1c5a0:	ldr	r0, [fp, #-12]
   1c5a4:	cmn	r0, #1
   1c5a8:	bne	1c5e0 <__assert_fail@plt+0xb1d0>
   1c5ac:	b	1c5c8 <__assert_fail@plt+0xb1b8>
   1c5b0:	ldr	r0, [fp, #-16]
   1c5b4:	add	r0, r0, #0
   1c5b8:	movw	r1, #0
   1c5bc:	cmp	r1, r0
   1c5c0:	bcc	1c614 <__assert_fail@plt+0xb204>
   1c5c4:	b	1c62c <__assert_fail@plt+0xb21c>
   1c5c8:	ldr	r0, [fp, #-16]
   1c5cc:	sub	r0, r0, #1
   1c5d0:	mvn	r1, #0
   1c5d4:	cmp	r1, r0
   1c5d8:	bcc	1c614 <__assert_fail@plt+0xb204>
   1c5dc:	b	1c62c <__assert_fail@plt+0xb21c>
   1c5e0:	ldr	r0, [fp, #-12]
   1c5e4:	movw	r1, #0
   1c5e8:	udiv	r0, r1, r0
   1c5ec:	ldr	r1, [fp, #-16]
   1c5f0:	cmp	r0, r1
   1c5f4:	bcc	1c614 <__assert_fail@plt+0xb204>
   1c5f8:	b	1c62c <__assert_fail@plt+0xb21c>
   1c5fc:	ldr	r0, [fp, #-16]
   1c600:	movw	r1, #65535	; 0xffff
   1c604:	udiv	r0, r1, r0
   1c608:	ldr	r1, [fp, #-12]
   1c60c:	cmp	r0, r1
   1c610:	bcs	1c62c <__assert_fail@plt+0xb21c>
   1c614:	ldr	r0, [fp, #-12]
   1c618:	ldr	r1, [fp, #-16]
   1c61c:	mul	r0, r0, r1
   1c620:	uxth	r0, r0
   1c624:	str	r0, [fp, #-20]	; 0xffffffec
   1c628:	b	1d1bc <__assert_fail@plt+0xbdac>
   1c62c:	ldr	r0, [fp, #-12]
   1c630:	ldr	r1, [fp, #-16]
   1c634:	mul	r0, r0, r1
   1c638:	uxth	r0, r0
   1c63c:	str	r0, [fp, #-20]	; 0xffffffec
   1c640:	b	1d1d4 <__assert_fail@plt+0xbdc4>
   1c644:	b	1c648 <__assert_fail@plt+0xb238>
   1c648:	b	1c80c <__assert_fail@plt+0xb3fc>
   1c64c:	ldr	r0, [fp, #-16]
   1c650:	cmp	r0, #0
   1c654:	bcs	1c754 <__assert_fail@plt+0xb344>
   1c658:	ldr	r0, [fp, #-12]
   1c65c:	cmp	r0, #0
   1c660:	bcs	1c6e8 <__assert_fail@plt+0xb2d8>
   1c664:	b	1c684 <__assert_fail@plt+0xb274>
   1c668:	ldr	r0, [pc, #2944]	; 1d1f0 <__assert_fail@plt+0xbde0>
   1c66c:	ldr	r1, [fp, #-12]
   1c670:	ldr	r2, [fp, #-16]
   1c674:	udiv	r0, r0, r2
   1c678:	cmp	r1, r0
   1c67c:	bcc	1c7e4 <__assert_fail@plt+0xb3d4>
   1c680:	b	1c7f8 <__assert_fail@plt+0xb3e8>
   1c684:	b	1c698 <__assert_fail@plt+0xb288>
   1c688:	ldr	r0, [fp, #-16]
   1c68c:	cmp	r0, #1
   1c690:	bcc	1c6a8 <__assert_fail@plt+0xb298>
   1c694:	b	1c6b4 <__assert_fail@plt+0xb2a4>
   1c698:	ldr	r0, [fp, #-16]
   1c69c:	movw	r1, #0
   1c6a0:	cmp	r1, r0
   1c6a4:	bcs	1c6b4 <__assert_fail@plt+0xb2a4>
   1c6a8:	movw	r0, #0
   1c6ac:	str	r0, [fp, #-40]	; 0xffffffd8
   1c6b0:	b	1c6cc <__assert_fail@plt+0xb2bc>
   1c6b4:	ldr	r0, [pc, #2868]	; 1d1f0 <__assert_fail@plt+0xbde0>
   1c6b8:	ldr	r1, [fp, #-16]
   1c6bc:	movw	r2, #0
   1c6c0:	sub	r1, r2, r1
   1c6c4:	udiv	r0, r0, r1
   1c6c8:	str	r0, [fp, #-40]	; 0xffffffd8
   1c6cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c6d0:	ldr	r1, [fp, #-12]
   1c6d4:	mvn	r2, #0
   1c6d8:	sub	r1, r2, r1
   1c6dc:	cmp	r0, r1
   1c6e0:	bls	1c7e4 <__assert_fail@plt+0xb3d4>
   1c6e4:	b	1c7f8 <__assert_fail@plt+0xb3e8>
   1c6e8:	ldr	r0, [fp, #-16]
   1c6ec:	cmn	r0, #1
   1c6f0:	bne	1c738 <__assert_fail@plt+0xb328>
   1c6f4:	b	1c710 <__assert_fail@plt+0xb300>
   1c6f8:	ldr	r0, [fp, #-12]
   1c6fc:	add	r0, r0, #-2147483648	; 0x80000000
   1c700:	movw	r1, #0
   1c704:	cmp	r1, r0
   1c708:	bcc	1c7e4 <__assert_fail@plt+0xb3d4>
   1c70c:	b	1c7f8 <__assert_fail@plt+0xb3e8>
   1c710:	ldr	r0, [fp, #-12]
   1c714:	movw	r1, #0
   1c718:	cmp	r1, r0
   1c71c:	bcs	1c7f8 <__assert_fail@plt+0xb3e8>
   1c720:	ldr	r0, [pc, #2760]	; 1d1f0 <__assert_fail@plt+0xbde0>
   1c724:	ldr	r1, [fp, #-12]
   1c728:	sub	r1, r1, #1
   1c72c:	cmp	r0, r1
   1c730:	bcc	1c7e4 <__assert_fail@plt+0xb3d4>
   1c734:	b	1c7f8 <__assert_fail@plt+0xb3e8>
   1c738:	ldr	r0, [pc, #2740]	; 1d1f4 <__assert_fail@plt+0xbde4>
   1c73c:	ldr	r1, [fp, #-16]
   1c740:	udiv	r0, r0, r1
   1c744:	ldr	r1, [fp, #-12]
   1c748:	cmp	r0, r1
   1c74c:	bcc	1c7e4 <__assert_fail@plt+0xb3d4>
   1c750:	b	1c7f8 <__assert_fail@plt+0xb3e8>
   1c754:	ldr	r0, [fp, #-16]
   1c758:	cmp	r0, #0
   1c75c:	bne	1c764 <__assert_fail@plt+0xb354>
   1c760:	b	1c7f8 <__assert_fail@plt+0xb3e8>
   1c764:	ldr	r0, [fp, #-12]
   1c768:	cmp	r0, #0
   1c76c:	bcs	1c7cc <__assert_fail@plt+0xb3bc>
   1c770:	ldr	r0, [fp, #-12]
   1c774:	cmn	r0, #1
   1c778:	bne	1c7b0 <__assert_fail@plt+0xb3a0>
   1c77c:	b	1c798 <__assert_fail@plt+0xb388>
   1c780:	ldr	r0, [fp, #-16]
   1c784:	add	r0, r0, #-2147483648	; 0x80000000
   1c788:	movw	r1, #0
   1c78c:	cmp	r1, r0
   1c790:	bcc	1c7e4 <__assert_fail@plt+0xb3d4>
   1c794:	b	1c7f8 <__assert_fail@plt+0xb3e8>
   1c798:	ldr	r0, [pc, #2640]	; 1d1f0 <__assert_fail@plt+0xbde0>
   1c79c:	ldr	r1, [fp, #-16]
   1c7a0:	sub	r1, r1, #1
   1c7a4:	cmp	r0, r1
   1c7a8:	bcc	1c7e4 <__assert_fail@plt+0xb3d4>
   1c7ac:	b	1c7f8 <__assert_fail@plt+0xb3e8>
   1c7b0:	ldr	r0, [pc, #2620]	; 1d1f4 <__assert_fail@plt+0xbde4>
   1c7b4:	ldr	r1, [fp, #-12]
   1c7b8:	udiv	r0, r0, r1
   1c7bc:	ldr	r1, [fp, #-16]
   1c7c0:	cmp	r0, r1
   1c7c4:	bcc	1c7e4 <__assert_fail@plt+0xb3d4>
   1c7c8:	b	1c7f8 <__assert_fail@plt+0xb3e8>
   1c7cc:	ldr	r0, [pc, #2588]	; 1d1f0 <__assert_fail@plt+0xbde0>
   1c7d0:	ldr	r1, [fp, #-16]
   1c7d4:	udiv	r0, r0, r1
   1c7d8:	ldr	r1, [fp, #-12]
   1c7dc:	cmp	r0, r1
   1c7e0:	bcs	1c7f8 <__assert_fail@plt+0xb3e8>
   1c7e4:	ldr	r0, [fp, #-12]
   1c7e8:	ldr	r1, [fp, #-16]
   1c7ec:	mul	r0, r0, r1
   1c7f0:	str	r0, [fp, #-20]	; 0xffffffec
   1c7f4:	b	1d1bc <__assert_fail@plt+0xbdac>
   1c7f8:	ldr	r0, [fp, #-12]
   1c7fc:	ldr	r1, [fp, #-16]
   1c800:	mul	r0, r0, r1
   1c804:	str	r0, [fp, #-20]	; 0xffffffec
   1c808:	b	1d1d4 <__assert_fail@plt+0xbdc4>
   1c80c:	ldr	r0, [fp, #-16]
   1c810:	cmp	r0, #0
   1c814:	bcs	1c920 <__assert_fail@plt+0xb510>
   1c818:	ldr	r0, [fp, #-12]
   1c81c:	cmp	r0, #0
   1c820:	bcs	1c8a8 <__assert_fail@plt+0xb498>
   1c824:	b	1c844 <__assert_fail@plt+0xb434>
   1c828:	ldr	r0, [fp, #-12]
   1c82c:	ldr	r1, [fp, #-16]
   1c830:	mvn	r2, #0
   1c834:	udiv	r1, r2, r1
   1c838:	cmp	r0, r1
   1c83c:	bcc	1c9bc <__assert_fail@plt+0xb5ac>
   1c840:	b	1c9d0 <__assert_fail@plt+0xb5c0>
   1c844:	b	1c858 <__assert_fail@plt+0xb448>
   1c848:	ldr	r0, [fp, #-16]
   1c84c:	cmp	r0, #1
   1c850:	bcc	1c868 <__assert_fail@plt+0xb458>
   1c854:	b	1c874 <__assert_fail@plt+0xb464>
   1c858:	ldr	r0, [fp, #-16]
   1c85c:	movw	r1, #0
   1c860:	cmp	r1, r0
   1c864:	bcs	1c874 <__assert_fail@plt+0xb464>
   1c868:	movw	r0, #1
   1c86c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c870:	b	1c88c <__assert_fail@plt+0xb47c>
   1c874:	ldr	r0, [fp, #-16]
   1c878:	movw	r1, #0
   1c87c:	sub	r0, r1, r0
   1c880:	mvn	r1, #0
   1c884:	udiv	r0, r1, r0
   1c888:	str	r0, [fp, #-44]	; 0xffffffd4
   1c88c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c890:	ldr	r1, [fp, #-12]
   1c894:	mvn	r2, #0
   1c898:	sub	r1, r2, r1
   1c89c:	cmp	r0, r1
   1c8a0:	bls	1c9bc <__assert_fail@plt+0xb5ac>
   1c8a4:	b	1c9d0 <__assert_fail@plt+0xb5c0>
   1c8a8:	b	1c8b0 <__assert_fail@plt+0xb4a0>
   1c8ac:	b	1c8b4 <__assert_fail@plt+0xb4a4>
   1c8b0:	b	1c904 <__assert_fail@plt+0xb4f4>
   1c8b4:	ldr	r0, [fp, #-16]
   1c8b8:	cmn	r0, #1
   1c8bc:	bne	1c904 <__assert_fail@plt+0xb4f4>
   1c8c0:	b	1c8dc <__assert_fail@plt+0xb4cc>
   1c8c4:	ldr	r0, [fp, #-12]
   1c8c8:	add	r0, r0, #0
   1c8cc:	movw	r1, #0
   1c8d0:	cmp	r1, r0
   1c8d4:	bcc	1c9bc <__assert_fail@plt+0xb5ac>
   1c8d8:	b	1c9d0 <__assert_fail@plt+0xb5c0>
   1c8dc:	ldr	r0, [fp, #-12]
   1c8e0:	movw	r1, #0
   1c8e4:	cmp	r1, r0
   1c8e8:	bcs	1c9d0 <__assert_fail@plt+0xb5c0>
   1c8ec:	ldr	r0, [fp, #-12]
   1c8f0:	sub	r0, r0, #1
   1c8f4:	mvn	r1, #0
   1c8f8:	cmp	r1, r0
   1c8fc:	bcc	1c9bc <__assert_fail@plt+0xb5ac>
   1c900:	b	1c9d0 <__assert_fail@plt+0xb5c0>
   1c904:	ldr	r0, [fp, #-16]
   1c908:	movw	r1, #0
   1c90c:	udiv	r0, r1, r0
   1c910:	ldr	r1, [fp, #-12]
   1c914:	cmp	r0, r1
   1c918:	bcc	1c9bc <__assert_fail@plt+0xb5ac>
   1c91c:	b	1c9d0 <__assert_fail@plt+0xb5c0>
   1c920:	ldr	r0, [fp, #-16]
   1c924:	cmp	r0, #0
   1c928:	bne	1c930 <__assert_fail@plt+0xb520>
   1c92c:	b	1c9d0 <__assert_fail@plt+0xb5c0>
   1c930:	ldr	r0, [fp, #-12]
   1c934:	cmp	r0, #0
   1c938:	bcs	1c9a4 <__assert_fail@plt+0xb594>
   1c93c:	b	1c944 <__assert_fail@plt+0xb534>
   1c940:	b	1c948 <__assert_fail@plt+0xb538>
   1c944:	b	1c988 <__assert_fail@plt+0xb578>
   1c948:	ldr	r0, [fp, #-12]
   1c94c:	cmn	r0, #1
   1c950:	bne	1c988 <__assert_fail@plt+0xb578>
   1c954:	b	1c970 <__assert_fail@plt+0xb560>
   1c958:	ldr	r0, [fp, #-16]
   1c95c:	add	r0, r0, #0
   1c960:	movw	r1, #0
   1c964:	cmp	r1, r0
   1c968:	bcc	1c9bc <__assert_fail@plt+0xb5ac>
   1c96c:	b	1c9d0 <__assert_fail@plt+0xb5c0>
   1c970:	ldr	r0, [fp, #-16]
   1c974:	sub	r0, r0, #1
   1c978:	mvn	r1, #0
   1c97c:	cmp	r1, r0
   1c980:	bcc	1c9bc <__assert_fail@plt+0xb5ac>
   1c984:	b	1c9d0 <__assert_fail@plt+0xb5c0>
   1c988:	ldr	r0, [fp, #-12]
   1c98c:	movw	r1, #0
   1c990:	udiv	r0, r1, r0
   1c994:	ldr	r1, [fp, #-16]
   1c998:	cmp	r0, r1
   1c99c:	bcc	1c9bc <__assert_fail@plt+0xb5ac>
   1c9a0:	b	1c9d0 <__assert_fail@plt+0xb5c0>
   1c9a4:	ldr	r0, [fp, #-16]
   1c9a8:	mvn	r1, #0
   1c9ac:	udiv	r0, r1, r0
   1c9b0:	ldr	r1, [fp, #-12]
   1c9b4:	cmp	r0, r1
   1c9b8:	bcs	1c9d0 <__assert_fail@plt+0xb5c0>
   1c9bc:	ldr	r0, [fp, #-12]
   1c9c0:	ldr	r1, [fp, #-16]
   1c9c4:	mul	r0, r0, r1
   1c9c8:	str	r0, [fp, #-20]	; 0xffffffec
   1c9cc:	b	1d1bc <__assert_fail@plt+0xbdac>
   1c9d0:	ldr	r0, [fp, #-12]
   1c9d4:	ldr	r1, [fp, #-16]
   1c9d8:	mul	r0, r0, r1
   1c9dc:	str	r0, [fp, #-20]	; 0xffffffec
   1c9e0:	b	1d1d4 <__assert_fail@plt+0xbdc4>
   1c9e4:	b	1c9e8 <__assert_fail@plt+0xb5d8>
   1c9e8:	b	1cbac <__assert_fail@plt+0xb79c>
   1c9ec:	ldr	r0, [fp, #-16]
   1c9f0:	cmp	r0, #0
   1c9f4:	bcs	1caf4 <__assert_fail@plt+0xb6e4>
   1c9f8:	ldr	r0, [fp, #-12]
   1c9fc:	cmp	r0, #0
   1ca00:	bcs	1ca88 <__assert_fail@plt+0xb678>
   1ca04:	b	1ca24 <__assert_fail@plt+0xb614>
   1ca08:	ldr	r0, [pc, #2016]	; 1d1f0 <__assert_fail@plt+0xbde0>
   1ca0c:	ldr	r1, [fp, #-12]
   1ca10:	ldr	r2, [fp, #-16]
   1ca14:	udiv	r0, r0, r2
   1ca18:	cmp	r1, r0
   1ca1c:	bcc	1cb84 <__assert_fail@plt+0xb774>
   1ca20:	b	1cb98 <__assert_fail@plt+0xb788>
   1ca24:	b	1ca38 <__assert_fail@plt+0xb628>
   1ca28:	ldr	r0, [fp, #-16]
   1ca2c:	cmp	r0, #1
   1ca30:	bcc	1ca48 <__assert_fail@plt+0xb638>
   1ca34:	b	1ca54 <__assert_fail@plt+0xb644>
   1ca38:	ldr	r0, [fp, #-16]
   1ca3c:	movw	r1, #0
   1ca40:	cmp	r1, r0
   1ca44:	bcs	1ca54 <__assert_fail@plt+0xb644>
   1ca48:	movw	r0, #0
   1ca4c:	str	r0, [sp, #48]	; 0x30
   1ca50:	b	1ca6c <__assert_fail@plt+0xb65c>
   1ca54:	ldr	r0, [pc, #1940]	; 1d1f0 <__assert_fail@plt+0xbde0>
   1ca58:	ldr	r1, [fp, #-16]
   1ca5c:	movw	r2, #0
   1ca60:	sub	r1, r2, r1
   1ca64:	udiv	r0, r0, r1
   1ca68:	str	r0, [sp, #48]	; 0x30
   1ca6c:	ldr	r0, [sp, #48]	; 0x30
   1ca70:	ldr	r1, [fp, #-12]
   1ca74:	mvn	r2, #0
   1ca78:	sub	r1, r2, r1
   1ca7c:	cmp	r0, r1
   1ca80:	bls	1cb84 <__assert_fail@plt+0xb774>
   1ca84:	b	1cb98 <__assert_fail@plt+0xb788>
   1ca88:	ldr	r0, [fp, #-16]
   1ca8c:	cmn	r0, #1
   1ca90:	bne	1cad8 <__assert_fail@plt+0xb6c8>
   1ca94:	b	1cab0 <__assert_fail@plt+0xb6a0>
   1ca98:	ldr	r0, [fp, #-12]
   1ca9c:	add	r0, r0, #-2147483648	; 0x80000000
   1caa0:	movw	r1, #0
   1caa4:	cmp	r1, r0
   1caa8:	bcc	1cb84 <__assert_fail@plt+0xb774>
   1caac:	b	1cb98 <__assert_fail@plt+0xb788>
   1cab0:	ldr	r0, [fp, #-12]
   1cab4:	movw	r1, #0
   1cab8:	cmp	r1, r0
   1cabc:	bcs	1cb98 <__assert_fail@plt+0xb788>
   1cac0:	ldr	r0, [pc, #1832]	; 1d1f0 <__assert_fail@plt+0xbde0>
   1cac4:	ldr	r1, [fp, #-12]
   1cac8:	sub	r1, r1, #1
   1cacc:	cmp	r0, r1
   1cad0:	bcc	1cb84 <__assert_fail@plt+0xb774>
   1cad4:	b	1cb98 <__assert_fail@plt+0xb788>
   1cad8:	ldr	r0, [pc, #1812]	; 1d1f4 <__assert_fail@plt+0xbde4>
   1cadc:	ldr	r1, [fp, #-16]
   1cae0:	udiv	r0, r0, r1
   1cae4:	ldr	r1, [fp, #-12]
   1cae8:	cmp	r0, r1
   1caec:	bcc	1cb84 <__assert_fail@plt+0xb774>
   1caf0:	b	1cb98 <__assert_fail@plt+0xb788>
   1caf4:	ldr	r0, [fp, #-16]
   1caf8:	cmp	r0, #0
   1cafc:	bne	1cb04 <__assert_fail@plt+0xb6f4>
   1cb00:	b	1cb98 <__assert_fail@plt+0xb788>
   1cb04:	ldr	r0, [fp, #-12]
   1cb08:	cmp	r0, #0
   1cb0c:	bcs	1cb6c <__assert_fail@plt+0xb75c>
   1cb10:	ldr	r0, [fp, #-12]
   1cb14:	cmn	r0, #1
   1cb18:	bne	1cb50 <__assert_fail@plt+0xb740>
   1cb1c:	b	1cb38 <__assert_fail@plt+0xb728>
   1cb20:	ldr	r0, [fp, #-16]
   1cb24:	add	r0, r0, #-2147483648	; 0x80000000
   1cb28:	movw	r1, #0
   1cb2c:	cmp	r1, r0
   1cb30:	bcc	1cb84 <__assert_fail@plt+0xb774>
   1cb34:	b	1cb98 <__assert_fail@plt+0xb788>
   1cb38:	ldr	r0, [pc, #1712]	; 1d1f0 <__assert_fail@plt+0xbde0>
   1cb3c:	ldr	r1, [fp, #-16]
   1cb40:	sub	r1, r1, #1
   1cb44:	cmp	r0, r1
   1cb48:	bcc	1cb84 <__assert_fail@plt+0xb774>
   1cb4c:	b	1cb98 <__assert_fail@plt+0xb788>
   1cb50:	ldr	r0, [pc, #1692]	; 1d1f4 <__assert_fail@plt+0xbde4>
   1cb54:	ldr	r1, [fp, #-12]
   1cb58:	udiv	r0, r0, r1
   1cb5c:	ldr	r1, [fp, #-16]
   1cb60:	cmp	r0, r1
   1cb64:	bcc	1cb84 <__assert_fail@plt+0xb774>
   1cb68:	b	1cb98 <__assert_fail@plt+0xb788>
   1cb6c:	ldr	r0, [pc, #1660]	; 1d1f0 <__assert_fail@plt+0xbde0>
   1cb70:	ldr	r1, [fp, #-16]
   1cb74:	udiv	r0, r0, r1
   1cb78:	ldr	r1, [fp, #-12]
   1cb7c:	cmp	r0, r1
   1cb80:	bcs	1cb98 <__assert_fail@plt+0xb788>
   1cb84:	ldr	r0, [fp, #-12]
   1cb88:	ldr	r1, [fp, #-16]
   1cb8c:	mul	r0, r0, r1
   1cb90:	str	r0, [fp, #-20]	; 0xffffffec
   1cb94:	b	1d1bc <__assert_fail@plt+0xbdac>
   1cb98:	ldr	r0, [fp, #-12]
   1cb9c:	ldr	r1, [fp, #-16]
   1cba0:	mul	r0, r0, r1
   1cba4:	str	r0, [fp, #-20]	; 0xffffffec
   1cba8:	b	1d1d4 <__assert_fail@plt+0xbdc4>
   1cbac:	ldr	r0, [fp, #-16]
   1cbb0:	cmp	r0, #0
   1cbb4:	bcs	1ccc0 <__assert_fail@plt+0xb8b0>
   1cbb8:	ldr	r0, [fp, #-12]
   1cbbc:	cmp	r0, #0
   1cbc0:	bcs	1cc48 <__assert_fail@plt+0xb838>
   1cbc4:	b	1cbe4 <__assert_fail@plt+0xb7d4>
   1cbc8:	ldr	r0, [fp, #-12]
   1cbcc:	ldr	r1, [fp, #-16]
   1cbd0:	mvn	r2, #0
   1cbd4:	udiv	r1, r2, r1
   1cbd8:	cmp	r0, r1
   1cbdc:	bcc	1cd5c <__assert_fail@plt+0xb94c>
   1cbe0:	b	1cd70 <__assert_fail@plt+0xb960>
   1cbe4:	b	1cbf8 <__assert_fail@plt+0xb7e8>
   1cbe8:	ldr	r0, [fp, #-16]
   1cbec:	cmp	r0, #1
   1cbf0:	bcc	1cc08 <__assert_fail@plt+0xb7f8>
   1cbf4:	b	1cc14 <__assert_fail@plt+0xb804>
   1cbf8:	ldr	r0, [fp, #-16]
   1cbfc:	movw	r1, #0
   1cc00:	cmp	r1, r0
   1cc04:	bcs	1cc14 <__assert_fail@plt+0xb804>
   1cc08:	movw	r0, #1
   1cc0c:	str	r0, [sp, #44]	; 0x2c
   1cc10:	b	1cc2c <__assert_fail@plt+0xb81c>
   1cc14:	ldr	r0, [fp, #-16]
   1cc18:	movw	r1, #0
   1cc1c:	sub	r0, r1, r0
   1cc20:	mvn	r1, #0
   1cc24:	udiv	r0, r1, r0
   1cc28:	str	r0, [sp, #44]	; 0x2c
   1cc2c:	ldr	r0, [sp, #44]	; 0x2c
   1cc30:	ldr	r1, [fp, #-12]
   1cc34:	mvn	r2, #0
   1cc38:	sub	r1, r2, r1
   1cc3c:	cmp	r0, r1
   1cc40:	bls	1cd5c <__assert_fail@plt+0xb94c>
   1cc44:	b	1cd70 <__assert_fail@plt+0xb960>
   1cc48:	b	1cc50 <__assert_fail@plt+0xb840>
   1cc4c:	b	1cc54 <__assert_fail@plt+0xb844>
   1cc50:	b	1cca4 <__assert_fail@plt+0xb894>
   1cc54:	ldr	r0, [fp, #-16]
   1cc58:	cmn	r0, #1
   1cc5c:	bne	1cca4 <__assert_fail@plt+0xb894>
   1cc60:	b	1cc7c <__assert_fail@plt+0xb86c>
   1cc64:	ldr	r0, [fp, #-12]
   1cc68:	add	r0, r0, #0
   1cc6c:	movw	r1, #0
   1cc70:	cmp	r1, r0
   1cc74:	bcc	1cd5c <__assert_fail@plt+0xb94c>
   1cc78:	b	1cd70 <__assert_fail@plt+0xb960>
   1cc7c:	ldr	r0, [fp, #-12]
   1cc80:	movw	r1, #0
   1cc84:	cmp	r1, r0
   1cc88:	bcs	1cd70 <__assert_fail@plt+0xb960>
   1cc8c:	ldr	r0, [fp, #-12]
   1cc90:	sub	r0, r0, #1
   1cc94:	mvn	r1, #0
   1cc98:	cmp	r1, r0
   1cc9c:	bcc	1cd5c <__assert_fail@plt+0xb94c>
   1cca0:	b	1cd70 <__assert_fail@plt+0xb960>
   1cca4:	ldr	r0, [fp, #-16]
   1cca8:	movw	r1, #0
   1ccac:	udiv	r0, r1, r0
   1ccb0:	ldr	r1, [fp, #-12]
   1ccb4:	cmp	r0, r1
   1ccb8:	bcc	1cd5c <__assert_fail@plt+0xb94c>
   1ccbc:	b	1cd70 <__assert_fail@plt+0xb960>
   1ccc0:	ldr	r0, [fp, #-16]
   1ccc4:	cmp	r0, #0
   1ccc8:	bne	1ccd0 <__assert_fail@plt+0xb8c0>
   1cccc:	b	1cd70 <__assert_fail@plt+0xb960>
   1ccd0:	ldr	r0, [fp, #-12]
   1ccd4:	cmp	r0, #0
   1ccd8:	bcs	1cd44 <__assert_fail@plt+0xb934>
   1ccdc:	b	1cce4 <__assert_fail@plt+0xb8d4>
   1cce0:	b	1cce8 <__assert_fail@plt+0xb8d8>
   1cce4:	b	1cd28 <__assert_fail@plt+0xb918>
   1cce8:	ldr	r0, [fp, #-12]
   1ccec:	cmn	r0, #1
   1ccf0:	bne	1cd28 <__assert_fail@plt+0xb918>
   1ccf4:	b	1cd10 <__assert_fail@plt+0xb900>
   1ccf8:	ldr	r0, [fp, #-16]
   1ccfc:	add	r0, r0, #0
   1cd00:	movw	r1, #0
   1cd04:	cmp	r1, r0
   1cd08:	bcc	1cd5c <__assert_fail@plt+0xb94c>
   1cd0c:	b	1cd70 <__assert_fail@plt+0xb960>
   1cd10:	ldr	r0, [fp, #-16]
   1cd14:	sub	r0, r0, #1
   1cd18:	mvn	r1, #0
   1cd1c:	cmp	r1, r0
   1cd20:	bcc	1cd5c <__assert_fail@plt+0xb94c>
   1cd24:	b	1cd70 <__assert_fail@plt+0xb960>
   1cd28:	ldr	r0, [fp, #-12]
   1cd2c:	movw	r1, #0
   1cd30:	udiv	r0, r1, r0
   1cd34:	ldr	r1, [fp, #-16]
   1cd38:	cmp	r0, r1
   1cd3c:	bcc	1cd5c <__assert_fail@plt+0xb94c>
   1cd40:	b	1cd70 <__assert_fail@plt+0xb960>
   1cd44:	ldr	r0, [fp, #-16]
   1cd48:	mvn	r1, #0
   1cd4c:	udiv	r0, r1, r0
   1cd50:	ldr	r1, [fp, #-12]
   1cd54:	cmp	r0, r1
   1cd58:	bcs	1cd70 <__assert_fail@plt+0xb960>
   1cd5c:	ldr	r0, [fp, #-12]
   1cd60:	ldr	r1, [fp, #-16]
   1cd64:	mul	r0, r0, r1
   1cd68:	str	r0, [fp, #-20]	; 0xffffffec
   1cd6c:	b	1d1bc <__assert_fail@plt+0xbdac>
   1cd70:	ldr	r0, [fp, #-12]
   1cd74:	ldr	r1, [fp, #-16]
   1cd78:	mul	r0, r0, r1
   1cd7c:	str	r0, [fp, #-20]	; 0xffffffec
   1cd80:	b	1d1d4 <__assert_fail@plt+0xbdc4>
   1cd84:	b	1cfa0 <__assert_fail@plt+0xbb90>
   1cd88:	ldr	r0, [fp, #-16]
   1cd8c:	cmp	r0, #0
   1cd90:	bcs	1ced0 <__assert_fail@plt+0xbac0>
   1cd94:	ldr	r0, [fp, #-12]
   1cd98:	cmp	r0, #0
   1cd9c:	bcs	1ce5c <__assert_fail@plt+0xba4c>
   1cda0:	b	1cda4 <__assert_fail@plt+0xb994>
   1cda4:	ldr	r0, [fp, #-12]
   1cda8:	ldr	r2, [fp, #-16]
   1cdac:	mvn	r1, #0
   1cdb0:	mvn	r3, #-2147483648	; 0x80000000
   1cdb4:	mov	ip, #0
   1cdb8:	str	r0, [sp, #40]	; 0x28
   1cdbc:	mov	r0, r1
   1cdc0:	mov	r1, r3
   1cdc4:	mov	r3, ip
   1cdc8:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1cdcc:	ldr	r2, [sp, #40]	; 0x28
   1cdd0:	subs	r0, r2, r0
   1cdd4:	rscs	r1, r1, #0
   1cdd8:	blt	1cf78 <__assert_fail@plt+0xbb68>
   1cddc:	b	1cf8c <__assert_fail@plt+0xbb7c>
   1cde0:	b	1cdf4 <__assert_fail@plt+0xb9e4>
   1cde4:	ldr	r0, [fp, #-16]
   1cde8:	cmp	r0, #1
   1cdec:	bcc	1ce04 <__assert_fail@plt+0xb9f4>
   1cdf0:	b	1ce18 <__assert_fail@plt+0xba08>
   1cdf4:	ldr	r0, [fp, #-16]
   1cdf8:	movw	r1, #0
   1cdfc:	cmp	r1, r0
   1ce00:	bcs	1ce18 <__assert_fail@plt+0xba08>
   1ce04:	mov	r0, #0
   1ce08:	mvn	r1, #0
   1ce0c:	str	r1, [sp, #36]	; 0x24
   1ce10:	str	r0, [sp, #32]
   1ce14:	b	1ce3c <__assert_fail@plt+0xba2c>
   1ce18:	ldr	r0, [fp, #-16]
   1ce1c:	rsb	r2, r0, #0
   1ce20:	mvn	r0, #0
   1ce24:	mvn	r1, #-2147483648	; 0x80000000
   1ce28:	mov	r3, #0
   1ce2c:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1ce30:	str	r0, [sp, #36]	; 0x24
   1ce34:	str	r1, [sp, #32]
   1ce38:	b	1ce3c <__assert_fail@plt+0xba2c>
   1ce3c:	ldr	r0, [sp, #32]
   1ce40:	ldr	r1, [sp, #36]	; 0x24
   1ce44:	ldr	r2, [fp, #-12]
   1ce48:	mvn	r2, r2
   1ce4c:	subs	r1, r2, r1
   1ce50:	rscs	r0, r0, #0
   1ce54:	bge	1cf78 <__assert_fail@plt+0xbb68>
   1ce58:	b	1cf8c <__assert_fail@plt+0xbb7c>
   1ce5c:	ldr	r0, [fp, #-16]
   1ce60:	cmn	r0, #1
   1ce64:	bne	1cea4 <__assert_fail@plt+0xba94>
   1ce68:	b	1ce84 <__assert_fail@plt+0xba74>
   1ce6c:	ldr	r0, [fp, #-12]
   1ce70:	rsbs	r0, r0, #0
   1ce74:	mov	r1, #0
   1ce78:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1ce7c:	blt	1cf78 <__assert_fail@plt+0xbb68>
   1ce80:	b	1cf8c <__assert_fail@plt+0xbb7c>
   1ce84:	ldr	r0, [fp, #-12]
   1ce88:	movw	r1, #0
   1ce8c:	cmp	r1, r0
   1ce90:	bcs	1cf8c <__assert_fail@plt+0xbb7c>
   1ce94:	mov	r0, #0
   1ce98:	cmp	r0, #0
   1ce9c:	bne	1cf78 <__assert_fail@plt+0xbb68>
   1cea0:	b	1cf8c <__assert_fail@plt+0xbb7c>
   1cea4:	ldr	r2, [fp, #-16]
   1cea8:	mov	r1, #-2147483648	; 0x80000000
   1ceac:	mov	r0, #0
   1ceb0:	str	r0, [sp, #28]
   1ceb4:	ldr	r3, [sp, #28]
   1ceb8:	bl	1dc34 <__assert_fail@plt+0xc824>
   1cebc:	ldr	r2, [fp, #-12]
   1cec0:	subs	r0, r0, r2
   1cec4:	sbcs	r1, r1, #0
   1cec8:	blt	1cf78 <__assert_fail@plt+0xbb68>
   1cecc:	b	1cf8c <__assert_fail@plt+0xbb7c>
   1ced0:	ldr	r0, [fp, #-16]
   1ced4:	cmp	r0, #0
   1ced8:	bne	1cee0 <__assert_fail@plt+0xbad0>
   1cedc:	b	1cf8c <__assert_fail@plt+0xbb7c>
   1cee0:	ldr	r0, [fp, #-12]
   1cee4:	cmp	r0, #0
   1cee8:	bcs	1cf50 <__assert_fail@plt+0xbb40>
   1ceec:	ldr	r0, [fp, #-12]
   1cef0:	cmn	r0, #1
   1cef4:	bne	1cf24 <__assert_fail@plt+0xbb14>
   1cef8:	b	1cf14 <__assert_fail@plt+0xbb04>
   1cefc:	ldr	r0, [fp, #-16]
   1cf00:	rsbs	r0, r0, #0
   1cf04:	mov	r1, #0
   1cf08:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1cf0c:	blt	1cf78 <__assert_fail@plt+0xbb68>
   1cf10:	b	1cf8c <__assert_fail@plt+0xbb7c>
   1cf14:	mov	r0, #0
   1cf18:	cmp	r0, #0
   1cf1c:	bne	1cf78 <__assert_fail@plt+0xbb68>
   1cf20:	b	1cf8c <__assert_fail@plt+0xbb7c>
   1cf24:	ldr	r2, [fp, #-12]
   1cf28:	mov	r1, #-2147483648	; 0x80000000
   1cf2c:	mov	r0, #0
   1cf30:	str	r0, [sp, #24]
   1cf34:	ldr	r3, [sp, #24]
   1cf38:	bl	1dc34 <__assert_fail@plt+0xc824>
   1cf3c:	ldr	r2, [fp, #-16]
   1cf40:	subs	r0, r0, r2
   1cf44:	sbcs	r1, r1, #0
   1cf48:	blt	1cf78 <__assert_fail@plt+0xbb68>
   1cf4c:	b	1cf8c <__assert_fail@plt+0xbb7c>
   1cf50:	ldr	r2, [fp, #-16]
   1cf54:	mvn	r0, #0
   1cf58:	mvn	r1, #-2147483648	; 0x80000000
   1cf5c:	mov	r3, #0
   1cf60:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1cf64:	ldr	r2, [fp, #-12]
   1cf68:	subs	r0, r0, r2
   1cf6c:	sbcs	r1, r1, #0
   1cf70:	bge	1cf8c <__assert_fail@plt+0xbb7c>
   1cf74:	b	1cf78 <__assert_fail@plt+0xbb68>
   1cf78:	ldr	r0, [fp, #-12]
   1cf7c:	ldr	r1, [fp, #-16]
   1cf80:	mul	r0, r0, r1
   1cf84:	str	r0, [fp, #-20]	; 0xffffffec
   1cf88:	b	1d1bc <__assert_fail@plt+0xbdac>
   1cf8c:	ldr	r0, [fp, #-12]
   1cf90:	ldr	r1, [fp, #-16]
   1cf94:	mul	r0, r0, r1
   1cf98:	str	r0, [fp, #-20]	; 0xffffffec
   1cf9c:	b	1d1d4 <__assert_fail@plt+0xbdc4>
   1cfa0:	ldr	r0, [fp, #-16]
   1cfa4:	cmp	r0, #0
   1cfa8:	bcs	1d0e4 <__assert_fail@plt+0xbcd4>
   1cfac:	ldr	r0, [fp, #-12]
   1cfb0:	cmp	r0, #0
   1cfb4:	bcs	1d06c <__assert_fail@plt+0xbc5c>
   1cfb8:	b	1cfec <__assert_fail@plt+0xbbdc>
   1cfbc:	ldr	r0, [fp, #-12]
   1cfc0:	ldr	r2, [fp, #-16]
   1cfc4:	mvn	r1, #0
   1cfc8:	mov	r3, #0
   1cfcc:	str	r0, [sp, #20]
   1cfd0:	mov	r0, r1
   1cfd4:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1cfd8:	ldr	r2, [sp, #20]
   1cfdc:	subs	r0, r2, r0
   1cfe0:	rscs	r1, r1, #0
   1cfe4:	bcc	1d194 <__assert_fail@plt+0xbd84>
   1cfe8:	b	1d1a8 <__assert_fail@plt+0xbd98>
   1cfec:	b	1d000 <__assert_fail@plt+0xbbf0>
   1cff0:	ldr	r0, [fp, #-16]
   1cff4:	cmp	r0, #1
   1cff8:	bcc	1d010 <__assert_fail@plt+0xbc00>
   1cffc:	b	1d024 <__assert_fail@plt+0xbc14>
   1d000:	ldr	r0, [fp, #-16]
   1d004:	movw	r1, #0
   1d008:	cmp	r1, r0
   1d00c:	bcs	1d024 <__assert_fail@plt+0xbc14>
   1d010:	mov	r0, #1
   1d014:	mvn	r1, #0
   1d018:	str	r1, [sp, #16]
   1d01c:	str	r0, [sp, #12]
   1d020:	b	1d04c <__assert_fail@plt+0xbc3c>
   1d024:	ldr	r0, [fp, #-16]
   1d028:	rsb	r2, r0, #0
   1d02c:	mvn	r0, #0
   1d030:	mov	r3, #0
   1d034:	str	r0, [sp, #8]
   1d038:	ldr	r1, [sp, #8]
   1d03c:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1d040:	str	r0, [sp, #16]
   1d044:	str	r1, [sp, #12]
   1d048:	b	1d04c <__assert_fail@plt+0xbc3c>
   1d04c:	ldr	r0, [sp, #12]
   1d050:	ldr	r1, [sp, #16]
   1d054:	ldr	r2, [fp, #-12]
   1d058:	mvn	r2, r2
   1d05c:	subs	r1, r2, r1
   1d060:	rscs	r0, r0, #0
   1d064:	bcs	1d194 <__assert_fail@plt+0xbd84>
   1d068:	b	1d1a8 <__assert_fail@plt+0xbd98>
   1d06c:	b	1d074 <__assert_fail@plt+0xbc64>
   1d070:	b	1d078 <__assert_fail@plt+0xbc68>
   1d074:	b	1d0c8 <__assert_fail@plt+0xbcb8>
   1d078:	ldr	r0, [fp, #-16]
   1d07c:	cmn	r0, #1
   1d080:	bne	1d0c8 <__assert_fail@plt+0xbcb8>
   1d084:	b	1d0a0 <__assert_fail@plt+0xbc90>
   1d088:	ldr	r0, [fp, #-12]
   1d08c:	add	r0, r0, #0
   1d090:	movw	r1, #0
   1d094:	cmp	r1, r0
   1d098:	bcc	1d194 <__assert_fail@plt+0xbd84>
   1d09c:	b	1d1a8 <__assert_fail@plt+0xbd98>
   1d0a0:	ldr	r0, [fp, #-12]
   1d0a4:	movw	r1, #0
   1d0a8:	cmp	r1, r0
   1d0ac:	bcs	1d1a8 <__assert_fail@plt+0xbd98>
   1d0b0:	ldr	r0, [fp, #-12]
   1d0b4:	sub	r0, r0, #1
   1d0b8:	mvn	r1, #0
   1d0bc:	cmp	r1, r0
   1d0c0:	bcc	1d194 <__assert_fail@plt+0xbd84>
   1d0c4:	b	1d1a8 <__assert_fail@plt+0xbd98>
   1d0c8:	ldr	r0, [fp, #-16]
   1d0cc:	movw	r1, #0
   1d0d0:	udiv	r0, r1, r0
   1d0d4:	ldr	r1, [fp, #-12]
   1d0d8:	cmp	r0, r1
   1d0dc:	bcc	1d194 <__assert_fail@plt+0xbd84>
   1d0e0:	b	1d1a8 <__assert_fail@plt+0xbd98>
   1d0e4:	ldr	r0, [fp, #-16]
   1d0e8:	cmp	r0, #0
   1d0ec:	bne	1d0f4 <__assert_fail@plt+0xbce4>
   1d0f0:	b	1d1a8 <__assert_fail@plt+0xbd98>
   1d0f4:	ldr	r0, [fp, #-12]
   1d0f8:	cmp	r0, #0
   1d0fc:	bcs	1d168 <__assert_fail@plt+0xbd58>
   1d100:	b	1d108 <__assert_fail@plt+0xbcf8>
   1d104:	b	1d10c <__assert_fail@plt+0xbcfc>
   1d108:	b	1d14c <__assert_fail@plt+0xbd3c>
   1d10c:	ldr	r0, [fp, #-12]
   1d110:	cmn	r0, #1
   1d114:	bne	1d14c <__assert_fail@plt+0xbd3c>
   1d118:	b	1d134 <__assert_fail@plt+0xbd24>
   1d11c:	ldr	r0, [fp, #-16]
   1d120:	add	r0, r0, #0
   1d124:	movw	r1, #0
   1d128:	cmp	r1, r0
   1d12c:	bcc	1d194 <__assert_fail@plt+0xbd84>
   1d130:	b	1d1a8 <__assert_fail@plt+0xbd98>
   1d134:	ldr	r0, [fp, #-16]
   1d138:	sub	r0, r0, #1
   1d13c:	mvn	r1, #0
   1d140:	cmp	r1, r0
   1d144:	bcc	1d194 <__assert_fail@plt+0xbd84>
   1d148:	b	1d1a8 <__assert_fail@plt+0xbd98>
   1d14c:	ldr	r0, [fp, #-12]
   1d150:	movw	r1, #0
   1d154:	udiv	r0, r1, r0
   1d158:	ldr	r1, [fp, #-16]
   1d15c:	cmp	r0, r1
   1d160:	bcc	1d194 <__assert_fail@plt+0xbd84>
   1d164:	b	1d1a8 <__assert_fail@plt+0xbd98>
   1d168:	ldr	r2, [fp, #-16]
   1d16c:	mvn	r0, #0
   1d170:	mov	r3, #0
   1d174:	str	r0, [sp, #4]
   1d178:	ldr	r1, [sp, #4]
   1d17c:	bl	1dd08 <__assert_fail@plt+0xc8f8>
   1d180:	ldr	r2, [fp, #-12]
   1d184:	subs	r0, r0, r2
   1d188:	sbcs	r1, r1, #0
   1d18c:	bcs	1d1a8 <__assert_fail@plt+0xbd98>
   1d190:	b	1d194 <__assert_fail@plt+0xbd84>
   1d194:	ldr	r0, [fp, #-12]
   1d198:	ldr	r1, [fp, #-16]
   1d19c:	mul	r0, r0, r1
   1d1a0:	str	r0, [fp, #-20]	; 0xffffffec
   1d1a4:	b	1d1bc <__assert_fail@plt+0xbdac>
   1d1a8:	ldr	r0, [fp, #-12]
   1d1ac:	ldr	r1, [fp, #-16]
   1d1b0:	mul	r0, r0, r1
   1d1b4:	str	r0, [fp, #-20]	; 0xffffffec
   1d1b8:	b	1d1d4 <__assert_fail@plt+0xbdc4>
   1d1bc:	bl	11308 <__errno_location@plt>
   1d1c0:	movw	r1, #12
   1d1c4:	str	r1, [r0]
   1d1c8:	movw	r0, #0
   1d1cc:	str	r0, [fp, #-4]
   1d1d0:	b	1d1e4 <__assert_fail@plt+0xbdd4>
   1d1d4:	ldr	r0, [fp, #-8]
   1d1d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d1dc:	bl	1b2f8 <__assert_fail@plt+0x9ee8>
   1d1e0:	str	r0, [fp, #-4]
   1d1e4:	ldr	r0, [fp, #-4]
   1d1e8:	mov	sp, fp
   1d1ec:	pop	{fp, pc}
   1d1f0:	svcvc	0x00ffffff
   1d1f4:	andhi	r0, r0, r0
   1d1f8:			; <UNDEFINED> instruction: 0xffff8000
   1d1fc:	sub	sp, sp, #12
   1d200:	str	r0, [sp, #4]
   1d204:	ldr	r0, [sp, #4]
   1d208:	sub	r1, r0, #48	; 0x30
   1d20c:	cmp	r1, #10
   1d210:	str	r0, [sp]
   1d214:	bcc	1d244 <__assert_fail@plt+0xbe34>
   1d218:	b	1d21c <__assert_fail@plt+0xbe0c>
   1d21c:	ldr	r0, [sp]
   1d220:	sub	r1, r0, #65	; 0x41
   1d224:	cmp	r1, #26
   1d228:	bcc	1d244 <__assert_fail@plt+0xbe34>
   1d22c:	b	1d230 <__assert_fail@plt+0xbe20>
   1d230:	ldr	r0, [sp]
   1d234:	sub	r1, r0, #97	; 0x61
   1d238:	cmp	r1, #25
   1d23c:	bhi	1d254 <__assert_fail@plt+0xbe44>
   1d240:	b	1d244 <__assert_fail@plt+0xbe34>
   1d244:	movw	r0, #1
   1d248:	and	r0, r0, #1
   1d24c:	strb	r0, [sp, #11]
   1d250:	b	1d260 <__assert_fail@plt+0xbe50>
   1d254:	movw	r0, #0
   1d258:	and	r0, r0, #1
   1d25c:	strb	r0, [sp, #11]
   1d260:	ldrb	r0, [sp, #11]
   1d264:	and	r0, r0, #1
   1d268:	add	sp, sp, #12
   1d26c:	bx	lr
   1d270:	sub	sp, sp, #12
   1d274:	str	r0, [sp, #4]
   1d278:	ldr	r0, [sp, #4]
   1d27c:	sub	r1, r0, #65	; 0x41
   1d280:	cmp	r1, #26
   1d284:	str	r0, [sp]
   1d288:	bcc	1d2a4 <__assert_fail@plt+0xbe94>
   1d28c:	b	1d290 <__assert_fail@plt+0xbe80>
   1d290:	ldr	r0, [sp]
   1d294:	sub	r1, r0, #97	; 0x61
   1d298:	cmp	r1, #25
   1d29c:	bhi	1d2b4 <__assert_fail@plt+0xbea4>
   1d2a0:	b	1d2a4 <__assert_fail@plt+0xbe94>
   1d2a4:	movw	r0, #1
   1d2a8:	and	r0, r0, #1
   1d2ac:	strb	r0, [sp, #11]
   1d2b0:	b	1d2c0 <__assert_fail@plt+0xbeb0>
   1d2b4:	movw	r0, #0
   1d2b8:	and	r0, r0, #1
   1d2bc:	strb	r0, [sp, #11]
   1d2c0:	ldrb	r0, [sp, #11]
   1d2c4:	and	r0, r0, #1
   1d2c8:	add	sp, sp, #12
   1d2cc:	bx	lr
   1d2d0:	sub	sp, sp, #8
   1d2d4:	str	r0, [sp]
   1d2d8:	ldr	r0, [sp]
   1d2dc:	cmp	r0, #127	; 0x7f
   1d2e0:	bhi	1d2f8 <__assert_fail@plt+0xbee8>
   1d2e4:	b	1d2e8 <__assert_fail@plt+0xbed8>
   1d2e8:	movw	r0, #1
   1d2ec:	and	r0, r0, #1
   1d2f0:	strb	r0, [sp, #7]
   1d2f4:	b	1d304 <__assert_fail@plt+0xbef4>
   1d2f8:	movw	r0, #0
   1d2fc:	and	r0, r0, #1
   1d300:	strb	r0, [sp, #7]
   1d304:	ldrb	r0, [sp, #7]
   1d308:	and	r0, r0, #1
   1d30c:	add	sp, sp, #8
   1d310:	bx	lr
   1d314:	sub	sp, sp, #8
   1d318:	str	r0, [sp, #4]
   1d31c:	ldr	r0, [sp, #4]
   1d320:	cmp	r0, #32
   1d324:	movw	r0, #1
   1d328:	str	r0, [sp]
   1d32c:	beq	1d344 <__assert_fail@plt+0xbf34>
   1d330:	ldr	r0, [sp, #4]
   1d334:	cmp	r0, #9
   1d338:	movw	r0, #0
   1d33c:	moveq	r0, #1
   1d340:	str	r0, [sp]
   1d344:	ldr	r0, [sp]
   1d348:	and	r0, r0, #1
   1d34c:	add	sp, sp, #8
   1d350:	bx	lr
   1d354:	sub	sp, sp, #12
   1d358:	str	r0, [sp, #4]
   1d35c:	ldr	r0, [sp, #4]
   1d360:	cmp	r0, #32
   1d364:	str	r0, [sp]
   1d368:	bcc	1d380 <__assert_fail@plt+0xbf70>
   1d36c:	b	1d370 <__assert_fail@plt+0xbf60>
   1d370:	ldr	r0, [sp]
   1d374:	cmp	r0, #127	; 0x7f
   1d378:	bne	1d390 <__assert_fail@plt+0xbf80>
   1d37c:	b	1d380 <__assert_fail@plt+0xbf70>
   1d380:	movw	r0, #1
   1d384:	and	r0, r0, #1
   1d388:	strb	r0, [sp, #11]
   1d38c:	b	1d39c <__assert_fail@plt+0xbf8c>
   1d390:	movw	r0, #0
   1d394:	and	r0, r0, #1
   1d398:	strb	r0, [sp, #11]
   1d39c:	ldrb	r0, [sp, #11]
   1d3a0:	and	r0, r0, #1
   1d3a4:	add	sp, sp, #12
   1d3a8:	bx	lr
   1d3ac:	sub	sp, sp, #8
   1d3b0:	str	r0, [sp]
   1d3b4:	ldr	r0, [sp]
   1d3b8:	sub	r0, r0, #48	; 0x30
   1d3bc:	cmp	r0, #9
   1d3c0:	bhi	1d3d8 <__assert_fail@plt+0xbfc8>
   1d3c4:	b	1d3c8 <__assert_fail@plt+0xbfb8>
   1d3c8:	movw	r0, #1
   1d3cc:	and	r0, r0, #1
   1d3d0:	strb	r0, [sp, #7]
   1d3d4:	b	1d3e4 <__assert_fail@plt+0xbfd4>
   1d3d8:	movw	r0, #0
   1d3dc:	and	r0, r0, #1
   1d3e0:	strb	r0, [sp, #7]
   1d3e4:	ldrb	r0, [sp, #7]
   1d3e8:	and	r0, r0, #1
   1d3ec:	add	sp, sp, #8
   1d3f0:	bx	lr
   1d3f4:	sub	sp, sp, #8
   1d3f8:	str	r0, [sp]
   1d3fc:	ldr	r0, [sp]
   1d400:	sub	r0, r0, #33	; 0x21
   1d404:	cmp	r0, #93	; 0x5d
   1d408:	bhi	1d420 <__assert_fail@plt+0xc010>
   1d40c:	b	1d410 <__assert_fail@plt+0xc000>
   1d410:	movw	r0, #1
   1d414:	and	r0, r0, #1
   1d418:	strb	r0, [sp, #7]
   1d41c:	b	1d42c <__assert_fail@plt+0xc01c>
   1d420:	movw	r0, #0
   1d424:	and	r0, r0, #1
   1d428:	strb	r0, [sp, #7]
   1d42c:	ldrb	r0, [sp, #7]
   1d430:	and	r0, r0, #1
   1d434:	add	sp, sp, #8
   1d438:	bx	lr
   1d43c:	sub	sp, sp, #8
   1d440:	str	r0, [sp]
   1d444:	ldr	r0, [sp]
   1d448:	sub	r0, r0, #97	; 0x61
   1d44c:	cmp	r0, #25
   1d450:	bhi	1d468 <__assert_fail@plt+0xc058>
   1d454:	b	1d458 <__assert_fail@plt+0xc048>
   1d458:	movw	r0, #1
   1d45c:	and	r0, r0, #1
   1d460:	strb	r0, [sp, #7]
   1d464:	b	1d474 <__assert_fail@plt+0xc064>
   1d468:	movw	r0, #0
   1d46c:	and	r0, r0, #1
   1d470:	strb	r0, [sp, #7]
   1d474:	ldrb	r0, [sp, #7]
   1d478:	and	r0, r0, #1
   1d47c:	add	sp, sp, #8
   1d480:	bx	lr
   1d484:	sub	sp, sp, #8
   1d488:	str	r0, [sp]
   1d48c:	ldr	r0, [sp]
   1d490:	sub	r0, r0, #32
   1d494:	cmp	r0, #94	; 0x5e
   1d498:	bhi	1d4b0 <__assert_fail@plt+0xc0a0>
   1d49c:	b	1d4a0 <__assert_fail@plt+0xc090>
   1d4a0:	movw	r0, #1
   1d4a4:	and	r0, r0, #1
   1d4a8:	strb	r0, [sp, #7]
   1d4ac:	b	1d4bc <__assert_fail@plt+0xc0ac>
   1d4b0:	movw	r0, #0
   1d4b4:	and	r0, r0, #1
   1d4b8:	strb	r0, [sp, #7]
   1d4bc:	ldrb	r0, [sp, #7]
   1d4c0:	and	r0, r0, #1
   1d4c4:	add	sp, sp, #8
   1d4c8:	bx	lr
   1d4cc:	sub	sp, sp, #12
   1d4d0:	str	r0, [sp, #4]
   1d4d4:	ldr	r0, [sp, #4]
   1d4d8:	sub	r0, r0, #33	; 0x21
   1d4dc:	cmp	r0, #93	; 0x5d
   1d4e0:	str	r0, [sp]
   1d4e4:	bhi	1d680 <__assert_fail@plt+0xc270>
   1d4e8:	add	r0, pc, #8
   1d4ec:	ldr	r1, [sp]
   1d4f0:	ldr	r0, [r0, r1, lsl #2]
   1d4f4:	mov	pc, r0
   1d4f8:	andeq	sp, r1, r0, ror r6
   1d4fc:	andeq	sp, r1, r0, ror r6
   1d500:	andeq	sp, r1, r0, ror r6
   1d504:	andeq	sp, r1, r0, ror r6
   1d508:	andeq	sp, r1, r0, ror r6
   1d50c:	andeq	sp, r1, r0, ror r6
   1d510:	andeq	sp, r1, r0, ror r6
   1d514:	andeq	sp, r1, r0, ror r6
   1d518:	andeq	sp, r1, r0, ror r6
   1d51c:	andeq	sp, r1, r0, ror r6
   1d520:	andeq	sp, r1, r0, ror r6
   1d524:	andeq	sp, r1, r0, ror r6
   1d528:	andeq	sp, r1, r0, ror r6
   1d52c:	andeq	sp, r1, r0, ror r6
   1d530:	andeq	sp, r1, r0, ror r6
   1d534:	andeq	sp, r1, r0, lsl #13
   1d538:	andeq	sp, r1, r0, lsl #13
   1d53c:	andeq	sp, r1, r0, lsl #13
   1d540:	andeq	sp, r1, r0, lsl #13
   1d544:	andeq	sp, r1, r0, lsl #13
   1d548:	andeq	sp, r1, r0, lsl #13
   1d54c:	andeq	sp, r1, r0, lsl #13
   1d550:	andeq	sp, r1, r0, lsl #13
   1d554:	andeq	sp, r1, r0, lsl #13
   1d558:	andeq	sp, r1, r0, lsl #13
   1d55c:	andeq	sp, r1, r0, ror r6
   1d560:	andeq	sp, r1, r0, ror r6
   1d564:	andeq	sp, r1, r0, ror r6
   1d568:	andeq	sp, r1, r0, ror r6
   1d56c:	andeq	sp, r1, r0, ror r6
   1d570:	andeq	sp, r1, r0, ror r6
   1d574:	andeq	sp, r1, r0, ror r6
   1d578:	andeq	sp, r1, r0, lsl #13
   1d57c:	andeq	sp, r1, r0, lsl #13
   1d580:	andeq	sp, r1, r0, lsl #13
   1d584:	andeq	sp, r1, r0, lsl #13
   1d588:	andeq	sp, r1, r0, lsl #13
   1d58c:	andeq	sp, r1, r0, lsl #13
   1d590:	andeq	sp, r1, r0, lsl #13
   1d594:	andeq	sp, r1, r0, lsl #13
   1d598:	andeq	sp, r1, r0, lsl #13
   1d59c:	andeq	sp, r1, r0, lsl #13
   1d5a0:	andeq	sp, r1, r0, lsl #13
   1d5a4:	andeq	sp, r1, r0, lsl #13
   1d5a8:	andeq	sp, r1, r0, lsl #13
   1d5ac:	andeq	sp, r1, r0, lsl #13
   1d5b0:	andeq	sp, r1, r0, lsl #13
   1d5b4:	andeq	sp, r1, r0, lsl #13
   1d5b8:	andeq	sp, r1, r0, lsl #13
   1d5bc:	andeq	sp, r1, r0, lsl #13
   1d5c0:	andeq	sp, r1, r0, lsl #13
   1d5c4:	andeq	sp, r1, r0, lsl #13
   1d5c8:	andeq	sp, r1, r0, lsl #13
   1d5cc:	andeq	sp, r1, r0, lsl #13
   1d5d0:	andeq	sp, r1, r0, lsl #13
   1d5d4:	andeq	sp, r1, r0, lsl #13
   1d5d8:	andeq	sp, r1, r0, lsl #13
   1d5dc:	andeq	sp, r1, r0, lsl #13
   1d5e0:	andeq	sp, r1, r0, ror r6
   1d5e4:	andeq	sp, r1, r0, ror r6
   1d5e8:	andeq	sp, r1, r0, ror r6
   1d5ec:	andeq	sp, r1, r0, ror r6
   1d5f0:	andeq	sp, r1, r0, ror r6
   1d5f4:	andeq	sp, r1, r0, ror r6
   1d5f8:	andeq	sp, r1, r0, lsl #13
   1d5fc:	andeq	sp, r1, r0, lsl #13
   1d600:	andeq	sp, r1, r0, lsl #13
   1d604:	andeq	sp, r1, r0, lsl #13
   1d608:	andeq	sp, r1, r0, lsl #13
   1d60c:	andeq	sp, r1, r0, lsl #13
   1d610:	andeq	sp, r1, r0, lsl #13
   1d614:	andeq	sp, r1, r0, lsl #13
   1d618:	andeq	sp, r1, r0, lsl #13
   1d61c:	andeq	sp, r1, r0, lsl #13
   1d620:	andeq	sp, r1, r0, lsl #13
   1d624:	andeq	sp, r1, r0, lsl #13
   1d628:	andeq	sp, r1, r0, lsl #13
   1d62c:	andeq	sp, r1, r0, lsl #13
   1d630:	andeq	sp, r1, r0, lsl #13
   1d634:	andeq	sp, r1, r0, lsl #13
   1d638:	andeq	sp, r1, r0, lsl #13
   1d63c:	andeq	sp, r1, r0, lsl #13
   1d640:	andeq	sp, r1, r0, lsl #13
   1d644:	andeq	sp, r1, r0, lsl #13
   1d648:	andeq	sp, r1, r0, lsl #13
   1d64c:	andeq	sp, r1, r0, lsl #13
   1d650:	andeq	sp, r1, r0, lsl #13
   1d654:	andeq	sp, r1, r0, lsl #13
   1d658:	andeq	sp, r1, r0, lsl #13
   1d65c:	andeq	sp, r1, r0, lsl #13
   1d660:	andeq	sp, r1, r0, ror r6
   1d664:	andeq	sp, r1, r0, ror r6
   1d668:	andeq	sp, r1, r0, ror r6
   1d66c:	andeq	sp, r1, r0, ror r6
   1d670:	movw	r0, #1
   1d674:	and	r0, r0, #1
   1d678:	strb	r0, [sp, #11]
   1d67c:	b	1d68c <__assert_fail@plt+0xc27c>
   1d680:	movw	r0, #0
   1d684:	and	r0, r0, #1
   1d688:	strb	r0, [sp, #11]
   1d68c:	ldrb	r0, [sp, #11]
   1d690:	and	r0, r0, #1
   1d694:	add	sp, sp, #12
   1d698:	bx	lr
   1d69c:	sub	sp, sp, #12
   1d6a0:	str	r0, [sp, #4]
   1d6a4:	ldr	r0, [sp, #4]
   1d6a8:	sub	r1, r0, #9
   1d6ac:	cmp	r1, #5
   1d6b0:	str	r0, [sp]
   1d6b4:	bcc	1d6cc <__assert_fail@plt+0xc2bc>
   1d6b8:	b	1d6bc <__assert_fail@plt+0xc2ac>
   1d6bc:	ldr	r0, [sp]
   1d6c0:	cmp	r0, #32
   1d6c4:	bne	1d6dc <__assert_fail@plt+0xc2cc>
   1d6c8:	b	1d6cc <__assert_fail@plt+0xc2bc>
   1d6cc:	movw	r0, #1
   1d6d0:	and	r0, r0, #1
   1d6d4:	strb	r0, [sp, #11]
   1d6d8:	b	1d6e8 <__assert_fail@plt+0xc2d8>
   1d6dc:	movw	r0, #0
   1d6e0:	and	r0, r0, #1
   1d6e4:	strb	r0, [sp, #11]
   1d6e8:	ldrb	r0, [sp, #11]
   1d6ec:	and	r0, r0, #1
   1d6f0:	add	sp, sp, #12
   1d6f4:	bx	lr
   1d6f8:	sub	sp, sp, #8
   1d6fc:	str	r0, [sp]
   1d700:	ldr	r0, [sp]
   1d704:	sub	r0, r0, #65	; 0x41
   1d708:	cmp	r0, #25
   1d70c:	bhi	1d724 <__assert_fail@plt+0xc314>
   1d710:	b	1d714 <__assert_fail@plt+0xc304>
   1d714:	movw	r0, #1
   1d718:	and	r0, r0, #1
   1d71c:	strb	r0, [sp, #7]
   1d720:	b	1d730 <__assert_fail@plt+0xc320>
   1d724:	movw	r0, #0
   1d728:	and	r0, r0, #1
   1d72c:	strb	r0, [sp, #7]
   1d730:	ldrb	r0, [sp, #7]
   1d734:	and	r0, r0, #1
   1d738:	add	sp, sp, #8
   1d73c:	bx	lr
   1d740:	sub	sp, sp, #12
   1d744:	str	r0, [sp, #4]
   1d748:	ldr	r0, [sp, #4]
   1d74c:	sub	r1, r0, #48	; 0x30
   1d750:	cmp	r1, #10
   1d754:	str	r0, [sp]
   1d758:	bcc	1d788 <__assert_fail@plt+0xc378>
   1d75c:	b	1d760 <__assert_fail@plt+0xc350>
   1d760:	ldr	r0, [sp]
   1d764:	sub	r1, r0, #65	; 0x41
   1d768:	cmp	r1, #6
   1d76c:	bcc	1d788 <__assert_fail@plt+0xc378>
   1d770:	b	1d774 <__assert_fail@plt+0xc364>
   1d774:	ldr	r0, [sp]
   1d778:	sub	r1, r0, #97	; 0x61
   1d77c:	cmp	r1, #5
   1d780:	bhi	1d798 <__assert_fail@plt+0xc388>
   1d784:	b	1d788 <__assert_fail@plt+0xc378>
   1d788:	movw	r0, #1
   1d78c:	and	r0, r0, #1
   1d790:	strb	r0, [sp, #11]
   1d794:	b	1d7a4 <__assert_fail@plt+0xc394>
   1d798:	movw	r0, #0
   1d79c:	and	r0, r0, #1
   1d7a0:	strb	r0, [sp, #11]
   1d7a4:	ldrb	r0, [sp, #11]
   1d7a8:	and	r0, r0, #1
   1d7ac:	add	sp, sp, #12
   1d7b0:	bx	lr
   1d7b4:	sub	sp, sp, #8
   1d7b8:	str	r0, [sp]
   1d7bc:	ldr	r0, [sp]
   1d7c0:	sub	r0, r0, #65	; 0x41
   1d7c4:	cmp	r0, #25
   1d7c8:	bhi	1d7e4 <__assert_fail@plt+0xc3d4>
   1d7cc:	b	1d7d0 <__assert_fail@plt+0xc3c0>
   1d7d0:	ldr	r0, [sp]
   1d7d4:	sub	r0, r0, #65	; 0x41
   1d7d8:	add	r0, r0, #97	; 0x61
   1d7dc:	str	r0, [sp, #4]
   1d7e0:	b	1d7ec <__assert_fail@plt+0xc3dc>
   1d7e4:	ldr	r0, [sp]
   1d7e8:	str	r0, [sp, #4]
   1d7ec:	ldr	r0, [sp, #4]
   1d7f0:	add	sp, sp, #8
   1d7f4:	bx	lr
   1d7f8:	sub	sp, sp, #8
   1d7fc:	str	r0, [sp]
   1d800:	ldr	r0, [sp]
   1d804:	sub	r0, r0, #97	; 0x61
   1d808:	cmp	r0, #25
   1d80c:	bhi	1d828 <__assert_fail@plt+0xc418>
   1d810:	b	1d814 <__assert_fail@plt+0xc404>
   1d814:	ldr	r0, [sp]
   1d818:	sub	r0, r0, #97	; 0x61
   1d81c:	add	r0, r0, #65	; 0x41
   1d820:	str	r0, [sp, #4]
   1d824:	b	1d830 <__assert_fail@plt+0xc420>
   1d828:	ldr	r0, [sp]
   1d82c:	str	r0, [sp, #4]
   1d830:	ldr	r0, [sp, #4]
   1d834:	add	sp, sp, #8
   1d838:	bx	lr
   1d83c:	push	{fp, lr}
   1d840:	mov	fp, sp
   1d844:	sub	sp, sp, #40	; 0x28
   1d848:	str	r0, [fp, #-4]
   1d84c:	str	r1, [fp, #-8]
   1d850:	str	r2, [fp, #-12]
   1d854:	str	r3, [fp, #-16]
   1d858:	movw	r0, #0
   1d85c:	str	r0, [sp, #20]
   1d860:	ldr	r0, [fp, #-16]
   1d864:	cmn	r0, #1
   1d868:	beq	1d898 <__assert_fail@plt+0xc488>
   1d86c:	ldr	r0, [fp, #-4]
   1d870:	cmp	r0, #0
   1d874:	beq	1d88c <__assert_fail@plt+0xc47c>
   1d878:	ldr	r0, [fp, #-16]
   1d87c:	ldr	r1, [fp, #-8]
   1d880:	ldr	r2, [sp, #20]
   1d884:	add	r1, r1, r2, lsl #2
   1d888:	str	r0, [r1]
   1d88c:	ldr	r0, [sp, #20]
   1d890:	add	r0, r0, #1
   1d894:	str	r0, [sp, #20]
   1d898:	bl	11344 <setgrent@plt>
   1d89c:	bl	11308 <__errno_location@plt>
   1d8a0:	movw	r1, #0
   1d8a4:	str	r1, [r0]
   1d8a8:	bl	11350 <getgrent@plt>
   1d8ac:	str	r0, [sp, #12]
   1d8b0:	ldr	r0, [sp, #12]
   1d8b4:	movw	r1, #0
   1d8b8:	cmp	r0, r1
   1d8bc:	bne	1d8c4 <__assert_fail@plt+0xc4b4>
   1d8c0:	b	1d9ec <__assert_fail@plt+0xc5dc>
   1d8c4:	ldr	r0, [sp, #12]
   1d8c8:	ldr	r0, [r0, #12]
   1d8cc:	str	r0, [sp, #16]
   1d8d0:	ldr	r0, [sp, #16]
   1d8d4:	ldr	r0, [r0]
   1d8d8:	movw	r1, #0
   1d8dc:	cmp	r0, r1
   1d8e0:	beq	1d9e8 <__assert_fail@plt+0xc5d8>
   1d8e4:	ldr	r0, [fp, #-12]
   1d8e8:	ldr	r1, [sp, #16]
   1d8ec:	ldr	r1, [r1]
   1d8f0:	bl	11164 <strcmp@plt>
   1d8f4:	cmp	r0, #0
   1d8f8:	beq	1d900 <__assert_fail@plt+0xc4f0>
   1d8fc:	b	1d9d8 <__assert_fail@plt+0xc5c8>
   1d900:	movw	r0, #0
   1d904:	str	r0, [sp, #8]
   1d908:	ldr	r0, [sp, #8]
   1d90c:	ldr	r1, [sp, #20]
   1d910:	cmp	r0, r1
   1d914:	bge	1d960 <__assert_fail@plt+0xc550>
   1d918:	ldr	r0, [fp, #-8]
   1d91c:	movw	r1, #0
   1d920:	cmp	r0, r1
   1d924:	beq	1d94c <__assert_fail@plt+0xc53c>
   1d928:	ldr	r0, [fp, #-8]
   1d92c:	ldr	r1, [sp, #8]
   1d930:	add	r0, r0, r1, lsl #2
   1d934:	ldr	r0, [r0]
   1d938:	ldr	r1, [sp, #12]
   1d93c:	ldr	r1, [r1, #8]
   1d940:	cmp	r0, r1
   1d944:	bne	1d94c <__assert_fail@plt+0xc53c>
   1d948:	b	1d960 <__assert_fail@plt+0xc550>
   1d94c:	b	1d950 <__assert_fail@plt+0xc540>
   1d950:	ldr	r0, [sp, #8]
   1d954:	add	r0, r0, #1
   1d958:	str	r0, [sp, #8]
   1d95c:	b	1d908 <__assert_fail@plt+0xc4f8>
   1d960:	ldr	r0, [sp, #8]
   1d964:	ldr	r1, [sp, #20]
   1d968:	cmp	r0, r1
   1d96c:	bne	1d9d4 <__assert_fail@plt+0xc5c4>
   1d970:	ldr	r0, [fp, #-4]
   1d974:	cmp	r0, #0
   1d978:	beq	1d9a8 <__assert_fail@plt+0xc598>
   1d97c:	ldr	r0, [sp, #20]
   1d980:	ldr	r1, [fp, #-4]
   1d984:	cmp	r0, r1
   1d988:	blt	1d990 <__assert_fail@plt+0xc580>
   1d98c:	b	1da08 <__assert_fail@plt+0xc5f8>
   1d990:	ldr	r0, [sp, #12]
   1d994:	ldr	r0, [r0, #8]
   1d998:	ldr	r1, [fp, #-8]
   1d99c:	ldr	r2, [sp, #20]
   1d9a0:	add	r1, r1, r2, lsl #2
   1d9a4:	str	r0, [r1]
   1d9a8:	ldr	r0, [pc, #136]	; 1da38 <__assert_fail@plt+0xc628>
   1d9ac:	ldr	r1, [sp, #20]
   1d9b0:	cmp	r1, r0
   1d9b4:	bne	1d9c8 <__assert_fail@plt+0xc5b8>
   1d9b8:	bl	11308 <__errno_location@plt>
   1d9bc:	movw	r1, #75	; 0x4b
   1d9c0:	str	r1, [r0]
   1d9c4:	b	1da08 <__assert_fail@plt+0xc5f8>
   1d9c8:	ldr	r0, [sp, #20]
   1d9cc:	add	r0, r0, #1
   1d9d0:	str	r0, [sp, #20]
   1d9d4:	b	1d9d8 <__assert_fail@plt+0xc5c8>
   1d9d8:	ldr	r0, [sp, #16]
   1d9dc:	add	r0, r0, #4
   1d9e0:	str	r0, [sp, #16]
   1d9e4:	b	1d8d0 <__assert_fail@plt+0xc4c0>
   1d9e8:	b	1d89c <__assert_fail@plt+0xc48c>
   1d9ec:	bl	11308 <__errno_location@plt>
   1d9f0:	ldr	r0, [r0]
   1d9f4:	cmp	r0, #0
   1d9f8:	beq	1da04 <__assert_fail@plt+0xc5f4>
   1d9fc:	mvn	r0, #0
   1da00:	str	r0, [sp, #20]
   1da04:	b	1da08 <__assert_fail@plt+0xc5f8>
   1da08:	bl	11308 <__errno_location@plt>
   1da0c:	ldr	r0, [r0]
   1da10:	str	r0, [sp, #4]
   1da14:	bl	11128 <endgrent@plt>
   1da18:	ldr	r0, [sp, #4]
   1da1c:	str	r0, [sp]
   1da20:	bl	11308 <__errno_location@plt>
   1da24:	ldr	r1, [sp]
   1da28:	str	r1, [r0]
   1da2c:	ldr	r0, [sp, #20]
   1da30:	mov	sp, fp
   1da34:	pop	{fp, pc}
   1da38:	svcvc	0x00ffffff
   1da3c:	push	{r4, r5, fp, lr}
   1da40:	add	fp, sp, #8
   1da44:	sub	sp, sp, #272	; 0x110
   1da48:	add	r1, sp, #7
   1da4c:	str	r0, [fp, #-16]
   1da50:	ldr	r0, [fp, #-16]
   1da54:	movw	r2, #257	; 0x101
   1da58:	bl	1dad8 <__assert_fail@plt+0xc6c8>
   1da5c:	cmp	r0, #0
   1da60:	beq	1da74 <__assert_fail@plt+0xc664>
   1da64:	movw	r0, #0
   1da68:	and	r0, r0, #1
   1da6c:	strb	r0, [fp, #-9]
   1da70:	b	1dac8 <__assert_fail@plt+0xc6b8>
   1da74:	add	r0, sp, #7
   1da78:	movw	r1, #60482	; 0xec42
   1da7c:	movt	r1, #1
   1da80:	bl	11164 <strcmp@plt>
   1da84:	cmp	r0, #0
   1da88:	movw	r0, #1
   1da8c:	str	r0, [sp]
   1da90:	beq	1dab4 <__assert_fail@plt+0xc6a4>
   1da94:	add	r0, sp, #7
   1da98:	movw	r1, #60484	; 0xec44
   1da9c:	movt	r1, #1
   1daa0:	bl	11164 <strcmp@plt>
   1daa4:	cmp	r0, #0
   1daa8:	movw	r0, #0
   1daac:	moveq	r0, #1
   1dab0:	str	r0, [sp]
   1dab4:	ldr	r0, [sp]
   1dab8:	mvn	r1, #0
   1dabc:	eor	r0, r0, r1
   1dac0:	and	r0, r0, #1
   1dac4:	strb	r0, [fp, #-9]
   1dac8:	ldrb	r0, [fp, #-9]
   1dacc:	and	r0, r0, #1
   1dad0:	sub	sp, fp, #8
   1dad4:	pop	{r4, r5, fp, pc}
   1dad8:	push	{fp, lr}
   1dadc:	mov	fp, sp
   1dae0:	sub	sp, sp, #16
   1dae4:	str	r0, [fp, #-4]
   1dae8:	str	r1, [sp, #8]
   1daec:	str	r2, [sp, #4]
   1daf0:	ldr	r0, [fp, #-4]
   1daf4:	ldr	r1, [sp, #8]
   1daf8:	ldr	r2, [sp, #4]
   1dafc:	bl	1db08 <__assert_fail@plt+0xc6f8>
   1db00:	mov	sp, fp
   1db04:	pop	{fp, pc}
   1db08:	push	{fp, lr}
   1db0c:	mov	fp, sp
   1db10:	sub	sp, sp, #24
   1db14:	str	r0, [fp, #-8]
   1db18:	str	r1, [sp, #12]
   1db1c:	str	r2, [sp, #8]
   1db20:	ldr	r0, [fp, #-8]
   1db24:	bl	1dc08 <__assert_fail@plt+0xc7f8>
   1db28:	str	r0, [sp, #4]
   1db2c:	ldr	r0, [sp, #4]
   1db30:	movw	r1, #0
   1db34:	cmp	r0, r1
   1db38:	bne	1db60 <__assert_fail@plt+0xc750>
   1db3c:	ldr	r0, [sp, #8]
   1db40:	cmp	r0, #0
   1db44:	bls	1db54 <__assert_fail@plt+0xc744>
   1db48:	ldr	r0, [sp, #12]
   1db4c:	movw	r1, #0
   1db50:	strb	r1, [r0]
   1db54:	movw	r0, #22
   1db58:	str	r0, [fp, #-4]
   1db5c:	b	1dbdc <__assert_fail@plt+0xc7cc>
   1db60:	ldr	r0, [sp, #4]
   1db64:	bl	112e4 <strlen@plt>
   1db68:	str	r0, [sp]
   1db6c:	ldr	r0, [sp]
   1db70:	ldr	r1, [sp, #8]
   1db74:	cmp	r0, r1
   1db78:	bcs	1db9c <__assert_fail@plt+0xc78c>
   1db7c:	ldr	r0, [sp, #12]
   1db80:	ldr	r1, [sp, #4]
   1db84:	ldr	r2, [sp]
   1db88:	add	r2, r2, #1
   1db8c:	bl	111b8 <memcpy@plt>
   1db90:	movw	r0, #0
   1db94:	str	r0, [fp, #-4]
   1db98:	b	1dbdc <__assert_fail@plt+0xc7cc>
   1db9c:	ldr	r0, [sp, #8]
   1dba0:	cmp	r0, #0
   1dba4:	bls	1dbd4 <__assert_fail@plt+0xc7c4>
   1dba8:	ldr	r0, [sp, #12]
   1dbac:	ldr	r1, [sp, #4]
   1dbb0:	ldr	r2, [sp, #8]
   1dbb4:	sub	r2, r2, #1
   1dbb8:	bl	111b8 <memcpy@plt>
   1dbbc:	ldr	r0, [sp, #12]
   1dbc0:	ldr	r1, [sp, #8]
   1dbc4:	sub	r1, r1, #1
   1dbc8:	add	r0, r0, r1
   1dbcc:	movw	r1, #0
   1dbd0:	strb	r1, [r0]
   1dbd4:	movw	r0, #34	; 0x22
   1dbd8:	str	r0, [fp, #-4]
   1dbdc:	ldr	r0, [fp, #-4]
   1dbe0:	mov	sp, fp
   1dbe4:	pop	{fp, pc}
   1dbe8:	push	{fp, lr}
   1dbec:	mov	fp, sp
   1dbf0:	sub	sp, sp, #8
   1dbf4:	str	r0, [sp, #4]
   1dbf8:	ldr	r0, [sp, #4]
   1dbfc:	bl	1dc08 <__assert_fail@plt+0xc7f8>
   1dc00:	mov	sp, fp
   1dc04:	pop	{fp, pc}
   1dc08:	push	{fp, lr}
   1dc0c:	mov	fp, sp
   1dc10:	sub	sp, sp, #8
   1dc14:	str	r0, [sp, #4]
   1dc18:	ldr	r0, [sp, #4]
   1dc1c:	movw	r1, #0
   1dc20:	bl	11380 <setlocale@plt>
   1dc24:	str	r0, [sp]
   1dc28:	ldr	r0, [sp]
   1dc2c:	mov	sp, fp
   1dc30:	pop	{fp, pc}
   1dc34:	cmp	r3, #0
   1dc38:	cmpeq	r2, #0
   1dc3c:	bne	1dc60 <__assert_fail@plt+0xc850>
   1dc40:	cmp	r1, #0
   1dc44:	movlt	r1, #-2147483648	; 0x80000000
   1dc48:	movlt	r0, #0
   1dc4c:	blt	1dc5c <__assert_fail@plt+0xc84c>
   1dc50:	cmpeq	r0, #0
   1dc54:	mvnne	r1, #-2147483648	; 0x80000000
   1dc58:	mvnne	r0, #0
   1dc5c:	b	1dd44 <__assert_fail@plt+0xc934>
   1dc60:	sub	sp, sp, #8
   1dc64:	push	{sp, lr}
   1dc68:	cmp	r1, #0
   1dc6c:	blt	1dc8c <__assert_fail@plt+0xc87c>
   1dc70:	cmp	r3, #0
   1dc74:	blt	1dcc0 <__assert_fail@plt+0xc8b0>
   1dc78:	bl	1dd54 <__assert_fail@plt+0xc944>
   1dc7c:	ldr	lr, [sp, #4]
   1dc80:	add	sp, sp, #8
   1dc84:	pop	{r2, r3}
   1dc88:	bx	lr
   1dc8c:	rsbs	r0, r0, #0
   1dc90:	sbc	r1, r1, r1, lsl #1
   1dc94:	cmp	r3, #0
   1dc98:	blt	1dce4 <__assert_fail@plt+0xc8d4>
   1dc9c:	bl	1dd54 <__assert_fail@plt+0xc944>
   1dca0:	ldr	lr, [sp, #4]
   1dca4:	add	sp, sp, #8
   1dca8:	pop	{r2, r3}
   1dcac:	rsbs	r0, r0, #0
   1dcb0:	sbc	r1, r1, r1, lsl #1
   1dcb4:	rsbs	r2, r2, #0
   1dcb8:	sbc	r3, r3, r3, lsl #1
   1dcbc:	bx	lr
   1dcc0:	rsbs	r2, r2, #0
   1dcc4:	sbc	r3, r3, r3, lsl #1
   1dcc8:	bl	1dd54 <__assert_fail@plt+0xc944>
   1dccc:	ldr	lr, [sp, #4]
   1dcd0:	add	sp, sp, #8
   1dcd4:	pop	{r2, r3}
   1dcd8:	rsbs	r0, r0, #0
   1dcdc:	sbc	r1, r1, r1, lsl #1
   1dce0:	bx	lr
   1dce4:	rsbs	r2, r2, #0
   1dce8:	sbc	r3, r3, r3, lsl #1
   1dcec:	bl	1dd54 <__assert_fail@plt+0xc944>
   1dcf0:	ldr	lr, [sp, #4]
   1dcf4:	add	sp, sp, #8
   1dcf8:	pop	{r2, r3}
   1dcfc:	rsbs	r2, r2, #0
   1dd00:	sbc	r3, r3, r3, lsl #1
   1dd04:	bx	lr
   1dd08:	cmp	r3, #0
   1dd0c:	cmpeq	r2, #0
   1dd10:	bne	1dd28 <__assert_fail@plt+0xc918>
   1dd14:	cmp	r1, #0
   1dd18:	cmpeq	r0, #0
   1dd1c:	mvnne	r1, #0
   1dd20:	mvnne	r0, #0
   1dd24:	b	1dd44 <__assert_fail@plt+0xc934>
   1dd28:	sub	sp, sp, #8
   1dd2c:	push	{sp, lr}
   1dd30:	bl	1dd54 <__assert_fail@plt+0xc944>
   1dd34:	ldr	lr, [sp, #4]
   1dd38:	add	sp, sp, #8
   1dd3c:	pop	{r2, r3}
   1dd40:	bx	lr
   1dd44:	push	{r1, lr}
   1dd48:	mov	r0, #8
   1dd4c:	bl	11140 <raise@plt>
   1dd50:	pop	{r1, pc}
   1dd54:	cmp	r1, r3
   1dd58:	cmpeq	r0, r2
   1dd5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1dd60:	mov	r4, r0
   1dd64:	movcc	r0, #0
   1dd68:	mov	r5, r1
   1dd6c:	ldr	lr, [sp, #36]	; 0x24
   1dd70:	movcc	r1, r0
   1dd74:	bcc	1de70 <__assert_fail@plt+0xca60>
   1dd78:	cmp	r3, #0
   1dd7c:	clzeq	ip, r2
   1dd80:	clzne	ip, r3
   1dd84:	addeq	ip, ip, #32
   1dd88:	cmp	r5, #0
   1dd8c:	clzeq	r1, r4
   1dd90:	addeq	r1, r1, #32
   1dd94:	clzne	r1, r5
   1dd98:	sub	ip, ip, r1
   1dd9c:	sub	sl, ip, #32
   1dda0:	lsl	r9, r3, ip
   1dda4:	rsb	fp, ip, #32
   1dda8:	orr	r9, r9, r2, lsl sl
   1ddac:	orr	r9, r9, r2, lsr fp
   1ddb0:	lsl	r8, r2, ip
   1ddb4:	cmp	r5, r9
   1ddb8:	cmpeq	r4, r8
   1ddbc:	movcc	r0, #0
   1ddc0:	movcc	r1, r0
   1ddc4:	bcc	1dde0 <__assert_fail@plt+0xc9d0>
   1ddc8:	mov	r0, #1
   1ddcc:	subs	r4, r4, r8
   1ddd0:	lsl	r1, r0, sl
   1ddd4:	orr	r1, r1, r0, lsr fp
   1ddd8:	lsl	r0, r0, ip
   1dddc:	sbc	r5, r5, r9
   1dde0:	cmp	ip, #0
   1dde4:	beq	1de70 <__assert_fail@plt+0xca60>
   1dde8:	lsr	r6, r8, #1
   1ddec:	orr	r6, r6, r9, lsl #31
   1ddf0:	lsr	r7, r9, #1
   1ddf4:	mov	r2, ip
   1ddf8:	b	1de1c <__assert_fail@plt+0xca0c>
   1ddfc:	subs	r3, r4, r6
   1de00:	sbc	r8, r5, r7
   1de04:	adds	r3, r3, r3
   1de08:	adc	r8, r8, r8
   1de0c:	adds	r4, r3, #1
   1de10:	adc	r5, r8, #0
   1de14:	subs	r2, r2, #1
   1de18:	beq	1de38 <__assert_fail@plt+0xca28>
   1de1c:	cmp	r5, r7
   1de20:	cmpeq	r4, r6
   1de24:	bcs	1ddfc <__assert_fail@plt+0xc9ec>
   1de28:	adds	r4, r4, r4
   1de2c:	adc	r5, r5, r5
   1de30:	subs	r2, r2, #1
   1de34:	bne	1de1c <__assert_fail@plt+0xca0c>
   1de38:	lsr	r3, r4, ip
   1de3c:	orr	r3, r3, r5, lsl fp
   1de40:	lsr	r2, r5, ip
   1de44:	orr	r3, r3, r5, lsr sl
   1de48:	adds	r0, r0, r4
   1de4c:	mov	r4, r3
   1de50:	lsl	r3, r2, ip
   1de54:	orr	r3, r3, r4, lsl sl
   1de58:	lsl	ip, r4, ip
   1de5c:	orr	r3, r3, r4, lsr fp
   1de60:	adc	r1, r1, r5
   1de64:	subs	r0, r0, ip
   1de68:	mov	r5, r2
   1de6c:	sbc	r1, r1, r3
   1de70:	cmp	lr, #0
   1de74:	strdne	r4, [lr]
   1de78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1de7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1de80:	mov	r7, r0
   1de84:	ldr	r6, [pc, #72]	; 1ded4 <__assert_fail@plt+0xcac4>
   1de88:	ldr	r5, [pc, #72]	; 1ded8 <__assert_fail@plt+0xcac8>
   1de8c:	add	r6, pc, r6
   1de90:	add	r5, pc, r5
   1de94:	sub	r6, r6, r5
   1de98:	mov	r8, r1
   1de9c:	mov	r9, r2
   1dea0:	bl	110fc <calloc@plt-0x20>
   1dea4:	asrs	r6, r6, #2
   1dea8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1deac:	mov	r4, #0
   1deb0:	add	r4, r4, #1
   1deb4:	ldr	r3, [r5], #4
   1deb8:	mov	r2, r9
   1debc:	mov	r1, r8
   1dec0:	mov	r0, r7
   1dec4:	blx	r3
   1dec8:	cmp	r6, r4
   1decc:	bne	1deb0 <__assert_fail@plt+0xcaa0>
   1ded0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ded4:	andeq	r1, r1, r0, ror r0
   1ded8:	andeq	r1, r1, r8, rrx
   1dedc:	bx	lr
   1dee0:	ldr	r3, [pc, #12]	; 1def4 <__assert_fail@plt+0xcae4>
   1dee4:	mov	r1, #0
   1dee8:	add	r3, pc, r3
   1deec:	ldr	r2, [r3]
   1def0:	b	11314 <__cxa_atexit@plt>
   1def4:	andeq	r1, r1, r4, lsr #4

Disassembly of section .fini:

0001def8 <.fini>:
   1def8:	push	{r3, lr}
   1defc:	pop	{r3, pc}
