
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf32-littlearm


Disassembly of section .init:

000106d4 <.init>:
   106d4:	push	{r3, lr}
   106d8:	bl	108b8 <abort@plt+0xc8>
   106dc:	pop	{r3, pc}

Disassembly of section .plt:

000106e0 <calloc@plt-0x14>:
   106e0:	push	{lr}		; (str lr, [sp, #-4]!)
   106e4:	ldr	lr, [pc, #4]	; 106f0 <calloc@plt-0x4>
   106e8:	add	lr, pc, lr
   106ec:	ldr	pc, [lr, #8]!
   106f0:	andeq	r1, r1, r0, lsl r9

000106f4 <calloc@plt>:
   106f4:	add	ip, pc, #0, 12
   106f8:	add	ip, ip, #69632	; 0x11000
   106fc:	ldr	pc, [ip, #2320]!	; 0x910

00010700 <strcmp@plt>:
   10700:	add	ip, pc, #0, 12
   10704:	add	ip, ip, #69632	; 0x11000
   10708:	ldr	pc, [ip, #2312]!	; 0x908

0001070c <printf@plt>:
   1070c:	add	ip, pc, #0, 12
   10710:	add	ip, ip, #69632	; 0x11000
   10714:	ldr	pc, [ip, #2304]!	; 0x900

00010718 <fopen@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #69632	; 0x11000
   10720:	ldr	pc, [ip, #2296]!	; 0x8f8

00010724 <free@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #69632	; 0x11000
   1072c:	ldr	pc, [ip, #2288]!	; 0x8f0

00010730 <fgets@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #69632	; 0x11000
   10738:	ldr	pc, [ip, #2280]!	; 0x8e8

0001073c <strdup@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #69632	; 0x11000
   10744:	ldr	pc, [ip, #2272]!	; 0x8e0

00010748 <unlink@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #69632	; 0x11000
   10750:	ldr	pc, [ip, #2264]!	; 0x8d8

00010754 <__xstat@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #69632	; 0x11000
   1075c:	ldr	pc, [ip, #2256]!	; 0x8d0

00010760 <fwrite@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #69632	; 0x11000
   10768:	ldr	pc, [ip, #2248]!	; 0x8c8

0001076c <__libc_start_main@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #69632	; 0x11000
   10774:	ldr	pc, [ip, #2240]!	; 0x8c0

00010778 <__sysv_signal@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #69632	; 0x11000
   10780:	ldr	pc, [ip, #2232]!	; 0x8b8

00010784 <__gmon_start__@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #69632	; 0x11000
   1078c:	ldr	pc, [ip, #2224]!	; 0x8b0

00010790 <getpid@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #69632	; 0x11000
   10798:	ldr	pc, [ip, #2216]!	; 0x8a8

0001079c <exit@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #69632	; 0x11000
   107a4:	ldr	pc, [ip, #2208]!	; 0x8a0

000107a8 <strlen@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #69632	; 0x11000
   107b0:	ldr	pc, [ip, #2200]!	; 0x898

000107b4 <fprintf@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #69632	; 0x11000
   107bc:	ldr	pc, [ip, #2192]!	; 0x890

000107c0 <__isoc99_sscanf@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #69632	; 0x11000
   107c8:	ldr	pc, [ip, #2184]!	; 0x888

000107cc <fclose@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #69632	; 0x11000
   107d4:	ldr	pc, [ip, #2176]!	; 0x880

000107d8 <sprintf@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #69632	; 0x11000
   107e0:	ldr	pc, [ip, #2168]!	; 0x878

000107e4 <strncmp@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #69632	; 0x11000
   107ec:	ldr	pc, [ip, #2160]!	; 0x870

000107f0 <abort@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2152]!	; 0x868

Disassembly of section .text:

000107fc <error@@Base-0x80c>:
   107fc:	push	{lr}		; (str lr, [sp, #-4]!)
   10800:	sub	sp, sp, #12
   10804:	add	ip, sp, #8
   10808:	mov	r3, #0
   1080c:	str	r0, [ip, #-4]!
   10810:	ldr	r2, [pc, #84]	; 1086c <abort@plt+0x7c>
   10814:	mov	r0, ip
   10818:	mov	r4, r1
   1081c:	bl	11140 <error@@Base+0x138>
   10820:	ldr	r3, [sp, #4]
   10824:	sub	r3, r3, #1
   10828:	cmp	r3, #1
   1082c:	bls	10838 <abort@plt+0x48>
   10830:	ldr	r0, [pc, #56]	; 10870 <abort@plt+0x80>
   10834:	bl	11008 <error@@Base>
   10838:	ldr	r1, [r4]
   1083c:	ldr	r0, [pc, #48]	; 10874 <abort@plt+0x84>
   10840:	bl	10a5c <abort@plt+0x26c>
   10844:	ldr	r3, [sp, #4]
   10848:	cmp	r3, #2
   1084c:	beq	10858 <abort@plt+0x68>
   10850:	bl	10a0c <abort@plt+0x21c>
   10854:	bl	10fb0 <abort@plt+0x7c0>
   10858:	ldr	r1, [r4, #4]
   1085c:	ldr	r0, [pc, #20]	; 10878 <abort@plt+0x88>
   10860:	bl	10a5c <abort@plt+0x26c>
   10864:	bl	109a4 <abort@plt+0x1b4>
   10868:	b	10850 <abort@plt+0x60>
   1086c:	andeq	r1, r1, ip, lsr r4
   10870:	andeq	r1, r1, r4, ror #8
   10874:	muleq	r2, r4, r2
   10878:	strdeq	r2, [r2], -r4
   1087c:	mov	fp, #0
   10880:	mov	lr, #0
   10884:	pop	{r1}		; (ldr r1, [sp], #4)
   10888:	mov	r2, sp
   1088c:	push	{r2}		; (str r2, [sp, #-4]!)
   10890:	push	{r0}		; (str r0, [sp, #-4]!)
   10894:	ldr	ip, [pc, #16]	; 108ac <abort@plt+0xbc>
   10898:	push	{ip}		; (str ip, [sp, #-4]!)
   1089c:	ldr	r0, [pc, #12]	; 108b0 <abort@plt+0xc0>
   108a0:	ldr	r3, [pc, #12]	; 108b4 <abort@plt+0xc4>
   108a4:	bl	1076c <__libc_start_main@plt>
   108a8:	bl	107f0 <abort@plt>
   108ac:	andeq	r1, r1, r0, lsr #8
   108b0:	strdeq	r0, [r1], -ip
   108b4:	andeq	r1, r1, r0, asr #7
   108b8:	ldr	r3, [pc, #20]	; 108d4 <abort@plt+0xe4>
   108bc:	ldr	r2, [pc, #20]	; 108d8 <abort@plt+0xe8>
   108c0:	add	r3, pc, r3
   108c4:	ldr	r2, [r3, r2]
   108c8:	cmp	r2, #0
   108cc:	bxeq	lr
   108d0:	b	10784 <__gmon_start__@plt>
   108d4:	andeq	r1, r1, r8, lsr r7
   108d8:	andeq	r0, r0, r4, rrx
   108dc:	ldr	r3, [pc, #28]	; 10900 <abort@plt+0x110>
   108e0:	ldr	r0, [pc, #28]	; 10904 <abort@plt+0x114>
   108e4:	sub	r3, r3, r0
   108e8:	cmp	r3, #6
   108ec:	bxls	lr
   108f0:	ldr	r3, [pc, #16]	; 10908 <abort@plt+0x118>
   108f4:	cmp	r3, #0
   108f8:	bxeq	lr
   108fc:	bx	r3
   10900:	andeq	r2, r2, fp, ror r0
   10904:	andeq	r2, r2, r8, ror r0
   10908:	andeq	r0, r0, r0
   1090c:	ldr	r1, [pc, #36]	; 10938 <abort@plt+0x148>
   10910:	ldr	r0, [pc, #36]	; 1093c <abort@plt+0x14c>
   10914:	sub	r1, r1, r0
   10918:	asr	r1, r1, #2
   1091c:	add	r1, r1, r1, lsr #31
   10920:	asrs	r1, r1, #1
   10924:	bxeq	lr
   10928:	ldr	r3, [pc, #16]	; 10940 <abort@plt+0x150>
   1092c:	cmp	r3, #0
   10930:	bxeq	lr
   10934:	bx	r3
   10938:	andeq	r2, r2, r8, ror r0
   1093c:	andeq	r2, r2, r8, ror r0
   10940:	andeq	r0, r0, r0
   10944:	push	{r4, lr}
   10948:	ldr	r4, [pc, #24]	; 10968 <abort@plt+0x178>
   1094c:	ldrb	r3, [r4]
   10950:	cmp	r3, #0
   10954:	popne	{r4, pc}
   10958:	bl	108dc <abort@plt+0xec>
   1095c:	mov	r3, #1
   10960:	strb	r3, [r4]
   10964:	pop	{r4, pc}
   10968:	andeq	r2, r2, r8, lsl #1
   1096c:	ldr	r0, [pc, #40]	; 1099c <abort@plt+0x1ac>
   10970:	ldr	r3, [r0]
   10974:	cmp	r3, #0
   10978:	bne	10980 <abort@plt+0x190>
   1097c:	b	1090c <abort@plt+0x11c>
   10980:	ldr	r3, [pc, #24]	; 109a0 <abort@plt+0x1b0>
   10984:	cmp	r3, #0
   10988:	beq	1097c <abort@plt+0x18c>
   1098c:	push	{r4, lr}
   10990:	blx	r3
   10994:	pop	{r4, lr}
   10998:	b	1090c <abort@plt+0x11c>
   1099c:	andeq	r1, r2, r4, lsl #30
   109a0:	andeq	r0, r0, r0
   109a4:	ldr	r2, [pc, #88]	; 10a04 <abort@plt+0x214>
   109a8:	ldr	r1, [pc, #88]	; 10a08 <abort@plt+0x218>
   109ac:	push	{r4, r5, lr}
   109b0:	add	r3, r2, #12
   109b4:	ldr	r5, [r1]
   109b8:	ldr	r4, [r2]
   109bc:	ldr	ip, [r1, #4]
   109c0:	ldr	lr, [r2, #4]
   109c4:	ldr	r0, [r2, #8]
   109c8:	sub	r4, r4, r5
   109cc:	ldr	r5, [r1, #8]
   109d0:	sub	lr, lr, ip
   109d4:	add	r1, r1, #12
   109d8:	add	ip, r2, #412	; 0x19c
   109dc:	sub	r0, r0, r5
   109e0:	stm	r2, {r4, lr}
   109e4:	str	r0, [r2, #8]
   109e8:	ldr	r2, [r3, #4]
   109ec:	ldr	r0, [r1, #4]!
   109f0:	sub	r2, r2, r0
   109f4:	str	r2, [r3, #4]!
   109f8:	cmp	r3, ip
   109fc:	bne	109e8 <abort@plt+0x1f8>
   10a00:	pop	{r4, r5, pc}
   10a04:	muleq	r2, r4, r2
   10a08:	strdeq	r2, [r2], -r4
   10a0c:	ldr	r3, [pc, #64]	; 10a54 <abort@plt+0x264>
   10a10:	push	{r4, r5, r6, r7, r8, lr}
   10a14:	mov	r7, r3
   10a18:	ldr	r8, [pc, #56]	; 10a58 <abort@plt+0x268>
   10a1c:	ldr	r6, [r3]
   10a20:	ldr	r5, [r7, #8]!
   10a24:	mov	r4, #0
   10a28:	mla	r2, r4, r5, r6
   10a2c:	mov	r1, r4
   10a30:	mov	r0, r8
   10a34:	bl	1070c <printf@plt>
   10a38:	ldr	r3, [r7, #4]!
   10a3c:	sub	r5, r5, r3
   10a40:	mla	r6, r4, r3, r6
   10a44:	add	r4, r4, #1
   10a48:	cmp	r4, #101	; 0x65
   10a4c:	bne	10a28 <abort@plt+0x238>
   10a50:	pop	{r4, r5, r6, r7, r8, pc}
   10a54:	muleq	r2, r4, r2
   10a58:	andeq	r1, r1, r0, lsr r4
   10a5c:	push	{r4, r5, r6, r7, r8, lr}
   10a60:	mov	r6, r1
   10a64:	sub	sp, sp, #16
   10a68:	ldr	r1, [pc, #504]	; 10c68 <abort@plt+0x478>
   10a6c:	mov	r5, r0
   10a70:	mov	r0, r6
   10a74:	bl	110d8 <error@@Base+0xd0>
   10a78:	mov	r1, #99	; 0x63
   10a7c:	mov	r2, r0
   10a80:	mov	r4, r0
   10a84:	ldr	r0, [pc, #480]	; 10c6c <abort@plt+0x47c>
   10a88:	bl	10730 <fgets@plt>
   10a8c:	cmp	r0, #0
   10a90:	beq	10b08 <abort@plt+0x318>
   10a94:	mov	r2, #42	; 0x2a
   10a98:	ldr	r1, [pc, #464]	; 10c70 <abort@plt+0x480>
   10a9c:	ldr	r0, [pc, #456]	; 10c6c <abort@plt+0x47c>
   10aa0:	bl	107e4 <strncmp@plt>
   10aa4:	cmp	r0, #0
   10aa8:	bne	10b08 <abort@plt+0x318>
   10aac:	mov	r2, r4
   10ab0:	mov	r1, #99	; 0x63
   10ab4:	ldr	r0, [pc, #432]	; 10c6c <abort@plt+0x47c>
   10ab8:	bl	10730 <fgets@plt>
   10abc:	cmp	r0, #0
   10ac0:	beq	10b08 <abort@plt+0x318>
   10ac4:	ldr	r1, [pc, #424]	; 10c74 <abort@plt+0x484>
   10ac8:	ldr	r0, [pc, #412]	; 10c6c <abort@plt+0x47c>
   10acc:	bl	10700 <strcmp@plt>
   10ad0:	cmp	r0, #0
   10ad4:	bne	10b08 <abort@plt+0x318>
   10ad8:	mov	r2, r4
   10adc:	mov	r1, #99	; 0x63
   10ae0:	ldr	r0, [pc, #388]	; 10c6c <abort@plt+0x47c>
   10ae4:	bl	10730 <fgets@plt>
   10ae8:	cmp	r0, #0
   10aec:	beq	10b08 <abort@plt+0x318>
   10af0:	add	r2, sp, #8
   10af4:	ldr	r1, [pc, #380]	; 10c78 <abort@plt+0x488>
   10af8:	ldr	r0, [pc, #364]	; 10c6c <abort@plt+0x47c>
   10afc:	bl	107c0 <__isoc99_sscanf@plt>
   10b00:	cmp	r0, #1
   10b04:	beq	10b1c <abort@plt+0x32c>
   10b08:	cmp	r6, #0
   10b0c:	ldr	r1, [pc, #360]	; 10c7c <abort@plt+0x48c>
   10b10:	ldr	r0, [pc, #360]	; 10c80 <abort@plt+0x490>
   10b14:	movne	r1, r6
   10b18:	bl	11090 <error@@Base+0x88>
   10b1c:	ldr	r3, [r5]
   10b20:	ldr	r1, [sp, #8]
   10b24:	mov	r2, r4
   10b28:	add	r3, r3, r1
   10b2c:	str	r3, [r5]
   10b30:	mov	r1, #99	; 0x63
   10b34:	ldr	r0, [pc, #304]	; 10c6c <abort@plt+0x47c>
   10b38:	bl	10730 <fgets@plt>
   10b3c:	cmp	r0, #0
   10b40:	beq	10b08 <abort@plt+0x318>
   10b44:	add	r2, sp, #8
   10b48:	ldr	r1, [pc, #296]	; 10c78 <abort@plt+0x488>
   10b4c:	ldr	r0, [pc, #280]	; 10c6c <abort@plt+0x47c>
   10b50:	bl	107c0 <__isoc99_sscanf@plt>
   10b54:	cmp	r0, #1
   10b58:	bne	10b08 <abort@plt+0x318>
   10b5c:	ldr	r3, [r5, #4]
   10b60:	ldr	r1, [sp, #8]
   10b64:	mov	r2, r4
   10b68:	add	r3, r3, r1
   10b6c:	str	r3, [r5, #4]
   10b70:	mov	r1, #99	; 0x63
   10b74:	ldr	r0, [pc, #240]	; 10c6c <abort@plt+0x47c>
   10b78:	bl	10730 <fgets@plt>
   10b7c:	cmp	r0, #0
   10b80:	beq	10b08 <abort@plt+0x318>
   10b84:	add	r2, sp, #4
   10b88:	ldr	r1, [pc, #232]	; 10c78 <abort@plt+0x488>
   10b8c:	ldr	r0, [pc, #216]	; 10c6c <abort@plt+0x47c>
   10b90:	bl	107c0 <__isoc99_sscanf@plt>
   10b94:	cmp	r0, #1
   10b98:	bne	10b08 <abort@plt+0x318>
   10b9c:	ldr	r2, [sp, #4]
   10ba0:	ldr	r3, [r5, #8]
   10ba4:	cmp	r2, #0
   10ba8:	add	r3, r3, r2
   10bac:	str	r3, [r5, #8]
   10bb0:	ble	10c3c <abort@plt+0x44c>
   10bb4:	mov	r2, r4
   10bb8:	mov	r1, #99	; 0x63
   10bbc:	ldr	r0, [pc, #168]	; 10c6c <abort@plt+0x47c>
   10bc0:	bl	10730 <fgets@plt>
   10bc4:	cmp	r0, #0
   10bc8:	beq	10c3c <abort@plt+0x44c>
   10bcc:	mov	r2, r4
   10bd0:	mov	r1, #99	; 0x63
   10bd4:	ldr	r0, [pc, #144]	; 10c6c <abort@plt+0x47c>
   10bd8:	bl	10730 <fgets@plt>
   10bdc:	cmp	r0, #0
   10be0:	beq	10c3c <abort@plt+0x44c>
   10be4:	mov	r2, r4
   10be8:	mov	r1, #99	; 0x63
   10bec:	ldr	r0, [pc, #120]	; 10c6c <abort@plt+0x47c>
   10bf0:	bl	10730 <fgets@plt>
   10bf4:	cmp	r0, #0
   10bf8:	beq	10c3c <abort@plt+0x44c>
   10bfc:	ldr	r6, [pc, #104]	; 10c6c <abort@plt+0x47c>
   10c00:	ldr	r8, [pc, #124]	; 10c84 <abort@plt+0x494>
   10c04:	mov	r7, #99	; 0x63
   10c08:	mov	r2, r4
   10c0c:	mov	r1, r7
   10c10:	mov	r0, r6
   10c14:	bl	10730 <fgets@plt>
   10c18:	cmp	r0, #0
   10c1c:	beq	10c3c <abort@plt+0x44c>
   10c20:	add	r3, sp, #12
   10c24:	add	r2, sp, #8
   10c28:	mov	r1, r8
   10c2c:	mov	r0, r6
   10c30:	bl	107c0 <__isoc99_sscanf@plt>
   10c34:	cmp	r0, #2
   10c38:	beq	10c4c <abort@plt+0x45c>
   10c3c:	mov	r0, r4
   10c40:	bl	10eac <abort@plt+0x6bc>
   10c44:	add	sp, sp, #16
   10c48:	pop	{r4, r5, r6, r7, r8, pc}
   10c4c:	ldr	r3, [sp, #12]
   10c50:	ldr	r1, [sp, #8]
   10c54:	add	r3, r5, r3, lsl #2
   10c58:	ldr	r2, [r3, #12]
   10c5c:	add	r2, r2, r1
   10c60:	str	r2, [r3, #12]
   10c64:	b	10c08 <abort@plt+0x418>
   10c68:	andeq	r1, r1, r4, lsl #9
   10c6c:	andeq	r2, r2, ip, lsl #1
   10c70:	andeq	r1, r1, r8, lsl #9
   10c74:			; <UNDEFINED> instruction: 0x000114b8
   10c78:	andeq	r1, r1, ip, ror #9
   10c7c:	andeq	r1, r1, ip, ror r4
   10c80:	strdeq	r1, [r1], -r0
   10c84:	andeq	r1, r1, r8, ror #9
   10c88:	mov	r3, r1
   10c8c:	push	{r4, r5, r6, r7, r8, lr}
   10c90:	mov	r5, r0
   10c94:	ldr	r1, [pc, #180]	; 10d50 <abort@plt+0x560>
   10c98:	mov	r0, r3
   10c9c:	bl	110d8 <error@@Base+0xd0>
   10ca0:	ldr	r3, [pc, #172]	; 10d54 <abort@plt+0x564>
   10ca4:	ldr	r2, [pc, #172]	; 10d58 <abort@plt+0x568>
   10ca8:	ldr	r1, [pc, #172]	; 10d5c <abort@plt+0x56c>
   10cac:	mov	r6, r0
   10cb0:	bl	107b4 <fprintf@plt>
   10cb4:	ldr	r2, [r5]
   10cb8:	ldr	r3, [pc, #160]	; 10d60 <abort@plt+0x570>
   10cbc:	ldr	r1, [pc, #160]	; 10d64 <abort@plt+0x574>
   10cc0:	mov	r0, r6
   10cc4:	bl	107b4 <fprintf@plt>
   10cc8:	ldr	r2, [r5, #4]
   10ccc:	ldr	r3, [pc, #148]	; 10d68 <abort@plt+0x578>
   10cd0:	ldr	r1, [pc, #140]	; 10d64 <abort@plt+0x574>
   10cd4:	mov	r0, r6
   10cd8:	bl	107b4 <fprintf@plt>
   10cdc:	ldr	r3, [pc, #136]	; 10d6c <abort@plt+0x57c>
   10ce0:	ldr	r2, [r5, #8]
   10ce4:	mov	r0, r6
   10ce8:	ldr	r1, [pc, #116]	; 10d64 <abort@plt+0x574>
   10cec:	bl	107b4 <fprintf@plt>
   10cf0:	ldr	r3, [r5, #8]
   10cf4:	cmp	r3, #0
   10cf8:	ble	10d44 <abort@plt+0x554>
   10cfc:	mov	r3, r6
   10d00:	mov	r2, #25
   10d04:	mov	r1, #1
   10d08:	ldr	r0, [pc, #96]	; 10d70 <abort@plt+0x580>
   10d0c:	bl	10760 <fwrite@plt>
   10d10:	ldr	r7, [pc, #92]	; 10d74 <abort@plt+0x584>
   10d14:	add	r5, r5, #12
   10d18:	mov	r4, #1
   10d1c:	ldr	ip, [r5, #4]!
   10d20:	mov	r3, r4
   10d24:	subs	r2, ip, #0
   10d28:	mov	r1, r7
   10d2c:	mov	r0, r6
   10d30:	add	r4, r4, #1
   10d34:	ble	10d3c <abort@plt+0x54c>
   10d38:	bl	107b4 <fprintf@plt>
   10d3c:	cmp	r4, #101	; 0x65
   10d40:	bne	10d1c <abort@plt+0x52c>
   10d44:	mov	r0, r6
   10d48:	pop	{r4, r5, r6, r7, r8, lr}
   10d4c:	b	10eac <abort@plt+0x6bc>
   10d50:	andeq	r1, r1, r4, lsl #10
   10d54:			; <UNDEFINED> instruction: 0x000114b8
   10d58:	andeq	r1, r1, r8, lsl #9
   10d5c:	andeq	r1, r1, r8, lsl #10
   10d60:	andeq	r1, r1, r0, lsl r5
   10d64:	andeq	r1, r1, ip, lsl r5
   10d68:	andeq	r1, r1, r8, lsr #10
   10d6c:	andeq	r1, r1, r4, lsr r5
   10d70:	andeq	r1, r1, ip, lsr r5
   10d74:	andeq	r1, r1, r8, asr r5
   10d78:	ldr	r3, [pc, #136]	; 10e08 <abort@plt+0x618>
   10d7c:	push	{r7, lr}
   10d80:	mov	r9, r0
   10d84:	ldr	r3, [r3]
   10d88:	sub	sp, sp, #112	; 0x70
   10d8c:	cmp	r3, #0
   10d90:	beq	10d98 <abort@plt+0x5a8>
   10d94:	blx	r3
   10d98:	ldr	r6, [pc, #108]	; 10e0c <abort@plt+0x61c>
   10d9c:	ldrsh	r3, [r6]
   10da0:	cmp	r3, #0
   10da4:	ble	10e00 <abort@plt+0x610>
   10da8:	ldr	r8, [pc, #96]	; 10e10 <abort@plt+0x620>
   10dac:	ldr	r7, [pc, #96]	; 10e14 <abort@plt+0x624>
   10db0:	mov	r4, #1
   10db4:	ldr	r5, [r8]
   10db8:	bl	10790 <getpid@plt>
   10dbc:	mov	r2, r5
   10dc0:	mov	r1, r7
   10dc4:	str	r4, [sp]
   10dc8:	add	r4, r4, #1
   10dcc:	sxth	r4, r4
   10dd0:	mov	r3, r0
   10dd4:	add	r0, sp, #12
   10dd8:	bl	107d8 <sprintf@plt>
   10ddc:	add	r0, sp, #12
   10de0:	bl	1073c <strdup@plt>
   10de4:	mov	r5, r0
   10de8:	bl	10748 <unlink@plt>
   10dec:	mov	r0, r5
   10df0:	bl	10724 <free@plt>
   10df4:	ldrsh	r3, [r6]
   10df8:	cmp	r3, r4
   10dfc:	bge	10db4 <abort@plt+0x5c4>
   10e00:	mov	r0, r9
   10e04:	bl	1079c <exit@plt>
   10e08:	andeq	r2, r2, ip, lsr r4
   10e0c:	strdeq	r2, [r2], -r0
   10e10:	andeq	r2, r2, r8, lsr r4
   10e14:	andeq	r1, r1, r4, ror #10
   10e18:	ldrb	r3, [r0]
   10e1c:	cmp	r3, #0
   10e20:	beq	10e84 <abort@plt+0x694>
   10e24:	ldrb	ip, [r1]
   10e28:	cmp	ip, r3
   10e2c:	bne	10e94 <abort@plt+0x6a4>
   10e30:	push	{lr}		; (str lr, [sp, #-4]!)
   10e34:	mov	r2, #0
   10e38:	mov	lr, r1
   10e3c:	b	10e4c <abort@plt+0x65c>
   10e40:	ldrb	ip, [lr, #1]!
   10e44:	cmp	r3, ip
   10e48:	bne	10e6c <abort@plt+0x67c>
   10e4c:	ldrb	r3, [r0, #1]!
   10e50:	add	r2, r2, #1
   10e54:	cmp	r3, #0
   10e58:	bne	10e40 <abort@plt+0x650>
   10e5c:	ldrb	ip, [r1, r2]
   10e60:	cmp	ip, #0
   10e64:	movne	r3, #0
   10e68:	beq	10e7c <abort@plt+0x68c>
   10e6c:	cmp	r3, ip
   10e70:	movcs	r0, #1
   10e74:	mvncc	r0, #0
   10e78:	pop	{pc}		; (ldr pc, [sp], #4)
   10e7c:	mov	r0, ip
   10e80:	pop	{pc}		; (ldr pc, [sp], #4)
   10e84:	ldrb	ip, [r1, r3]
   10e88:	cmp	ip, #0
   10e8c:	movne	r3, #0
   10e90:	beq	10ea4 <abort@plt+0x6b4>
   10e94:	cmp	r3, ip
   10e98:	movcs	r0, #1
   10e9c:	mvncc	r0, #0
   10ea0:	bx	lr
   10ea4:	mov	r0, ip
   10ea8:	bx	lr
   10eac:	ldr	r2, [pc, #28]	; 10ed0 <abort@plt+0x6e0>
   10eb0:	ldr	r2, [r2]
   10eb4:	cmp	r2, r0
   10eb8:	bxeq	lr
   10ebc:	ldr	r2, [pc, #16]	; 10ed4 <abort@plt+0x6e4>
   10ec0:	ldr	r2, [r2]
   10ec4:	cmp	r0, r2
   10ec8:	bxeq	lr
   10ecc:	b	107cc <fclose@plt>
   10ed0:	andeq	r2, r2, r0, lsl #1
   10ed4:	andeq	r2, r2, r4, lsl #1
   10ed8:	push	{lr}		; (str lr, [sp, #-4]!)
   10edc:	sub	sp, sp, #92	; 0x5c
   10ee0:	mov	r1, r0
   10ee4:	mov	r2, sp
   10ee8:	mov	r0, #3
   10eec:	bl	10754 <__xstat@plt>
   10ef0:	clz	r0, r0
   10ef4:	lsr	r0, r0, #5
   10ef8:	add	sp, sp, #92	; 0x5c
   10efc:	pop	{pc}		; (ldr pc, [sp], #4)
   10f00:	ldr	r3, [pc, #84]	; 10f5c <abort@plt+0x76c>
   10f04:	push	{r4, r5, lr}
   10f08:	sub	sp, sp, #116	; 0x74
   10f0c:	ldrh	r4, [r3]
   10f10:	ldr	r2, [pc, #72]	; 10f60 <abort@plt+0x770>
   10f14:	add	r4, r4, #1
   10f18:	ldr	r5, [r2]
   10f1c:	sxth	r4, r4
   10f20:	strh	r4, [r3]
   10f24:	bl	10790 <getpid@plt>
   10f28:	mov	r2, r5
   10f2c:	ldr	r1, [pc, #48]	; 10f64 <abort@plt+0x774>
   10f30:	str	r4, [sp]
   10f34:	mov	r3, r0
   10f38:	add	r0, sp, #12
   10f3c:	bl	107d8 <sprintf@plt>
   10f40:	add	r0, sp, #12
   10f44:	bl	1073c <strdup@plt>
   10f48:	mov	r4, r0
   10f4c:	bl	10748 <unlink@plt>
   10f50:	mov	r0, r4
   10f54:	add	sp, sp, #116	; 0x74
   10f58:	pop	{r4, r5, pc}
   10f5c:	strdeq	r2, [r2], -r0
   10f60:	andeq	r2, r2, r8, lsr r4
   10f64:	andeq	r1, r1, r4, ror #10
   10f68:	push	{r4, lr}
   10f6c:	mov	r4, r0
   10f70:	bl	107a8 <strlen@plt>
   10f74:	sub	r0, r0, #1
   10f78:	sxth	r0, r0
   10f7c:	cmp	r0, #0
   10f80:	bge	10f98 <abort@plt+0x7a8>
   10f84:	b	10fa4 <abort@plt+0x7b4>
   10f88:	sub	r0, r0, #1
   10f8c:	sxth	r0, r0
   10f90:	cmn	r0, #1
   10f94:	beq	10fa4 <abort@plt+0x7b4>
   10f98:	ldrb	r3, [r4, r0]
   10f9c:	cmp	r3, #47	; 0x2f
   10fa0:	bne	10f88 <abort@plt+0x798>
   10fa4:	add	r0, r0, #1
   10fa8:	add	r0, r4, r0
   10fac:	pop	{r4, pc}
   10fb0:	push	{r4, lr}
   10fb4:	mov	r0, #0
   10fb8:	bl	10d78 <abort@plt+0x588>
   10fbc:	ldr	r2, [pc, #52]	; 10ff8 <abort@plt+0x808>
   10fc0:	push	{r4, lr}
   10fc4:	ldr	r2, [r2]
   10fc8:	cmp	r2, #0
   10fcc:	beq	10fd8 <abort@plt+0x7e8>
   10fd0:	blx	r2
   10fd4:	bl	10fb0 <abort@plt+0x7c0>
   10fd8:	ldr	r1, [pc, #28]	; 10ffc <abort@plt+0x80c>
   10fdc:	ldr	r2, [pc, #28]	; 11000 <abort@plt+0x810>
   10fe0:	mov	r3, r0
   10fe4:	ldr	r0, [r1]
   10fe8:	ldr	r2, [r2]
   10fec:	ldr	r1, [pc, #16]	; 11004 <abort@plt+0x814>
   10ff0:	bl	107b4 <fprintf@plt>
   10ff4:	b	10fd4 <abort@plt+0x7e4>
   10ff8:	andeq	r2, r2, r4, lsr r4
   10ffc:	andeq	r2, r2, r8, ror r0
   11000:	andeq	r2, r2, r8, lsr r4
   11004:	andeq	r1, r1, r4, ror r5

00011008 <error@@Base>:
   11008:	ldr	r1, [pc, #36]	; 11034 <error@@Base+0x2c>
   1100c:	ldr	r2, [pc, #36]	; 11038 <error@@Base+0x30>
   11010:	mov	r3, r0
   11014:	push	{r4, lr}
   11018:	ldr	r0, [r1]
   1101c:	ldr	r2, [r2]
   11020:	ldr	r1, [pc, #20]	; 1103c <error@@Base+0x34>
   11024:	bl	107b4 <fprintf@plt>
   11028:	ldr	r3, [pc, #16]	; 11040 <error@@Base+0x38>
   1102c:	ldr	r0, [r3]
   11030:	bl	10d78 <abort@plt+0x588>
   11034:	andeq	r2, r2, r8, ror r0
   11038:	andeq	r2, r2, r8, lsr r4
   1103c:	andeq	r1, r1, r4, lsl #11
   11040:	andeq	r2, r2, r0, ror r0
   11044:	push	{r4, lr}
   11048:	bl	106f4 <calloc@plt>
   1104c:	cmp	r0, #0
   11050:	popne	{r4, pc}
   11054:	ldr	r0, [pc]	; 1105c <error@@Base+0x54>
   11058:	bl	11008 <error@@Base>
   1105c:	andeq	r1, r1, ip, lsl #11
   11060:	ldr	r3, [pc, #32]	; 11088 <error@@Base+0x80>
   11064:	ldrb	r2, [r3, #2]
   11068:	cmp	r2, #0
   1106c:	beq	11074 <error@@Base+0x6c>
   11070:	bx	lr
   11074:	push	{r4, lr}
   11078:	mov	r2, #1
   1107c:	ldr	r0, [pc, #8]	; 1108c <error@@Base+0x84>
   11080:	strb	r2, [r3, #2]
   11084:	bl	11008 <error@@Base>
   11088:	strdeq	r2, [r2], -r0
   1108c:	andeq	r1, r1, r8, lsr #11
   11090:	ldr	r3, [pc, #48]	; 110c8 <error@@Base+0xc0>
   11094:	push	{lr}		; (str lr, [sp, #-4]!)
   11098:	sub	sp, sp, #12
   1109c:	ldr	r2, [pc, #40]	; 110cc <error@@Base+0xc4>
   110a0:	str	r1, [sp]
   110a4:	ldr	r1, [r3]
   110a8:	ldr	r2, [r2]
   110ac:	mov	r3, r0
   110b0:	mov	r0, r1
   110b4:	ldr	r1, [pc, #20]	; 110d0 <error@@Base+0xc8>
   110b8:	bl	107b4 <fprintf@plt>
   110bc:	ldr	r3, [pc, #16]	; 110d4 <error@@Base+0xcc>
   110c0:	ldr	r0, [r3]
   110c4:	bl	10d78 <abort@plt+0x588>
   110c8:	andeq	r2, r2, r8, ror r0
   110cc:	andeq	r2, r2, r8, lsr r4
   110d0:			; <UNDEFINED> instruction: 0x000115b8
   110d4:	andeq	r2, r2, r0, ror r0
   110d8:	subs	r2, r0, #0
   110dc:	push	{r4, r5, r6, lr}
   110e0:	mov	r4, r1
   110e4:	beq	11110 <error@@Base+0x108>
   110e8:	mov	r5, r2
   110ec:	bl	10718 <fopen@plt>
   110f0:	cmp	r0, #0
   110f4:	popne	{r4, r5, r6, pc}
   110f8:	ldrb	r3, [r4]
   110fc:	mov	r1, r5
   11100:	cmp	r3, #119	; 0x77
   11104:	beq	11128 <error@@Base+0x120>
   11108:	ldr	r0, [pc, #32]	; 11130 <error@@Base+0x128>
   1110c:	bl	11090 <error@@Base+0x88>
   11110:	ldrb	r3, [r1]
   11114:	cmp	r3, #114	; 0x72
   11118:	ldreq	r3, [pc, #20]	; 11134 <error@@Base+0x12c>
   1111c:	ldrne	r3, [pc, #20]	; 11138 <error@@Base+0x130>
   11120:	ldr	r0, [r3]
   11124:	pop	{r4, r5, r6, pc}
   11128:	ldr	r0, [pc, #12]	; 1113c <error@@Base+0x134>
   1112c:	bl	11090 <error@@Base+0x88>
   11130:	andeq	r1, r1, r0, ror #11
   11134:	andeq	r2, r2, r0, lsl #1
   11138:	andeq	r2, r2, r4, lsl #1
   1113c:	andeq	r1, r1, r8, asr #11
   11140:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11144:	sub	sp, sp, #20
   11148:	ldr	r4, [r1]
   1114c:	str	r0, [sp, #8]
   11150:	mov	r0, r4
   11154:	mov	r9, r1
   11158:	str	r2, [sp, #12]
   1115c:	mov	r6, r3
   11160:	bl	107a8 <strlen@plt>
   11164:	sub	r0, r0, #1
   11168:	sxth	r0, r0
   1116c:	cmp	r0, #0
   11170:	bge	11188 <error@@Base+0x180>
   11174:	b	11194 <error@@Base+0x18c>
   11178:	sub	r0, r0, #1
   1117c:	sxth	r0, r0
   11180:	cmn	r0, #1
   11184:	beq	11194 <error@@Base+0x18c>
   11188:	ldrb	r3, [r4, r0]
   1118c:	cmp	r3, #47	; 0x2f
   11190:	bne	11178 <error@@Base+0x170>
   11194:	ldr	r3, [pc, #460]	; 11368 <error@@Base+0x360>
   11198:	add	r0, r0, #1
   1119c:	add	r4, r4, r0
   111a0:	ldr	r1, [pc, #452]	; 1136c <error@@Base+0x364>
   111a4:	mov	r0, #2
   111a8:	str	r4, [r3]
   111ac:	bl	10778 <__sysv_signal@plt>
   111b0:	ldr	r1, [pc, #436]	; 1136c <error@@Base+0x364>
   111b4:	mov	r0, #15
   111b8:	bl	10778 <__sysv_signal@plt>
   111bc:	ldr	r3, [sp, #8]
   111c0:	ldr	fp, [r3]
   111c4:	cmp	fp, #1
   111c8:	beq	112fc <error@@Base+0x2f4>
   111cc:	movgt	sl, #1
   111d0:	mov	r7, #0
   111d4:	movgt	r4, sl
   111d8:	bgt	11200 <error@@Base+0x1f8>
   111dc:	b	1130c <error@@Base+0x304>
   111e0:	add	r3, r7, #1
   111e4:	str	r5, [r9, r7, lsl #2]
   111e8:	sxth	r7, r3
   111ec:	add	r4, r4, #1
   111f0:	sxth	r4, r4
   111f4:	cmp	r4, fp
   111f8:	mov	sl, r4
   111fc:	bge	1130c <error@@Base+0x304>
   11200:	ldr	r5, [r9, r4, lsl #2]
   11204:	lsl	r3, r4, #2
   11208:	ldrb	r2, [r5]
   1120c:	cmp	r2, #45	; 0x2d
   11210:	bne	111e0 <error@@Base+0x1d8>
   11214:	ldrb	r8, [r5, #1]
   11218:	str	r3, [sp, #4]
   1121c:	cmp	r8, #0
   11220:	beq	111e0 <error@@Base+0x1d8>
   11224:	mov	r0, r5
   11228:	bl	107a8 <strlen@plt>
   1122c:	mov	r1, r5
   11230:	mov	r2, r0
   11234:	ldr	r0, [pc, #308]	; 11370 <error@@Base+0x368>
   11238:	bl	107e4 <strncmp@plt>
   1123c:	cmp	r0, #0
   11240:	beq	11354 <error@@Base+0x34c>
   11244:	add	sl, sl, #1
   11248:	cmp	sl, fp
   1124c:	movge	r0, #0
   11250:	ldrlt	r3, [sp, #4]
   11254:	addlt	r3, r9, r3
   11258:	ldrlt	r0, [r3, #4]
   1125c:	cmp	r6, #0
   11260:	beq	112a4 <error@@Base+0x29c>
   11264:	ldrb	r3, [r6]
   11268:	cmp	r3, #0
   1126c:	beq	112a4 <error@@Base+0x29c>
   11270:	cmp	r3, r8
   11274:	beq	112b0 <error@@Base+0x2a8>
   11278:	mov	r3, #0
   1127c:	b	11288 <error@@Base+0x280>
   11280:	cmp	r8, r1
   11284:	beq	112b4 <error@@Base+0x2ac>
   11288:	add	r3, r3, #1
   1128c:	sxth	r3, r3
   11290:	add	r2, r3, r3, lsl #1
   11294:	ldrb	r1, [r6, r2, lsl #2]
   11298:	add	r2, r6, r2, lsl #2
   1129c:	cmp	r1, #0
   112a0:	bne	11280 <error@@Base+0x278>
   112a4:	mov	r1, r5
   112a8:	ldr	r0, [pc, #196]	; 11374 <error@@Base+0x36c>
   112ac:	bl	11090 <error@@Base+0x88>
   112b0:	mov	r2, r6
   112b4:	ldr	r3, [r2, #4]
   112b8:	cmp	r3, #0
   112bc:	beq	1131c <error@@Base+0x314>
   112c0:	ldrb	r1, [r5, #2]
   112c4:	cmp	r0, #0
   112c8:	cmpeq	r1, #0
   112cc:	beq	1131c <error@@Base+0x314>
   112d0:	ldr	r2, [r3]
   112d4:	cmp	r2, #0
   112d8:	bne	1135c <error@@Base+0x354>
   112dc:	cmp	r1, #0
   112e0:	addne	r0, r5, #2
   112e4:	str	r0, [r3]
   112e8:	ldrb	r3, [r5, #2]
   112ec:	cmp	r3, #0
   112f0:	addeq	r4, r4, #1
   112f4:	sxtheq	r4, r4
   112f8:	b	111ec <error@@Base+0x1e4>
   112fc:	ldr	r3, [pc, #116]	; 11378 <error@@Base+0x370>
   11300:	ldrb	r7, [r3, #4]
   11304:	cmp	r7, #0
   11308:	bne	11354 <error@@Base+0x34c>
   1130c:	ldr	r3, [sp, #8]
   11310:	str	r7, [r3]
   11314:	add	sp, sp, #20
   11318:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1131c:	ldr	r3, [r2, #8]
   11320:	cmp	r3, #0
   11324:	beq	112a4 <error@@Base+0x29c>
   11328:	ldrb	r2, [r5, #2]
   1132c:	cmp	r2, #0
   11330:	bne	112a4 <error@@Base+0x29c>
   11334:	ldrb	r2, [r3]
   11338:	cmp	r2, #0
   1133c:	bne	1135c <error@@Base+0x354>
   11340:	mov	r2, #1
   11344:	strb	r2, [r3]
   11348:	ldr	r3, [sp, #8]
   1134c:	ldr	fp, [r3]
   11350:	b	111ec <error@@Base+0x1e4>
   11354:	ldr	r0, [sp, #12]
   11358:	bl	10fbc <abort@plt+0x7cc>
   1135c:	mov	r1, r5
   11360:	ldr	r0, [pc, #20]	; 1137c <error@@Base+0x374>
   11364:	bl	11090 <error@@Base+0x88>
   11368:	andeq	r2, r2, r8, lsr r4
   1136c:	andeq	r1, r1, r0, rrx
   11370:	strdeq	r1, [r1], -r4
   11374:	strdeq	r1, [r1], -ip
   11378:	andeq	r2, r2, r0, ror r0
   1137c:	andeq	r1, r1, ip, lsl #12
   11380:	ldr	r3, [pc, #44]	; 113b4 <error@@Base+0x3ac>
   11384:	push	{lr}		; (str lr, [sp, #-4]!)
   11388:	sub	sp, sp, #12
   1138c:	ldr	r2, [pc, #36]	; 113b8 <error@@Base+0x3b0>
   11390:	str	r1, [sp]
   11394:	ldr	r1, [r3]
   11398:	ldr	r2, [r2]
   1139c:	mov	r3, r0
   113a0:	mov	r0, r1
   113a4:	ldr	r1, [pc, #16]	; 113bc <error@@Base+0x3b4>
   113a8:	bl	107b4 <fprintf@plt>
   113ac:	add	sp, sp, #12
   113b0:	pop	{pc}		; (ldr pc, [sp], #4)
   113b4:	andeq	r2, r2, r8, ror r0
   113b8:	andeq	r2, r2, r8, lsr r4
   113bc:			; <UNDEFINED> instruction: 0x000115b8
   113c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113c4:	mov	r7, r0
   113c8:	ldr	r6, [pc, #72]	; 11418 <error@@Base+0x410>
   113cc:	ldr	r5, [pc, #72]	; 1141c <error@@Base+0x414>
   113d0:	add	r6, pc, r6
   113d4:	add	r5, pc, r5
   113d8:	sub	r6, r6, r5
   113dc:	mov	r8, r1
   113e0:	mov	r9, r2
   113e4:	bl	106d4 <calloc@plt-0x20>
   113e8:	asrs	r6, r6, #2
   113ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   113f0:	mov	r4, #0
   113f4:	add	r4, r4, #1
   113f8:	ldr	r3, [r5], #4
   113fc:	mov	r2, r9
   11400:	mov	r1, r8
   11404:	mov	r0, r7
   11408:	blx	r3
   1140c:	cmp	r6, r4
   11410:	bne	113f4 <error@@Base+0x3ec>
   11414:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11418:	andeq	r0, r1, r8, lsr #22
   1141c:	andeq	r0, r1, r0, lsr #22
   11420:	bx	lr

Disassembly of section .fini:

00011424 <.fini>:
   11424:	push	{r3, lr}
   11428:	pop	{r3, pc}
