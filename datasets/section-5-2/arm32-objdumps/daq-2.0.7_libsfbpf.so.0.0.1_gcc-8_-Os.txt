
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000ce8 <_init>:
 ce8:	push	{r3, lr}
 cec:	bl	f00 <call_weak_fn>
 cf0:	pop	{r3, pc}

Disassembly of section .plt:

00000cf4 <.plt>:
 cf4:	push	{lr}		; (str lr, [sp, #-4]!)
 cf8:	ldr	lr, [pc, #4]	; d04 <.plt+0x10>
 cfc:	add	lr, pc, lr
 d00:	ldr	pc, [lr, #8]!
 d04:	.word	0x0002c2fc

00000d08 <calloc@plt>:
 d08:	add	ip, pc, #0, 12
 d0c:	add	ip, ip, #44, 20	; 0x2c000
 d10:	ldr	pc, [ip, #764]!	; 0x2fc

00000d14 <strcmp@plt>:
 d14:	add	ip, pc, #0, 12
 d18:	add	ip, ip, #44, 20	; 0x2c000
 d1c:	ldr	pc, [ip, #756]!	; 0x2f4

00000d20 <__cxa_finalize@plt>:
 d20:	add	ip, pc, #0, 12
 d24:	add	ip, ip, #44, 20	; 0x2c000
 d28:	ldr	pc, [ip, #748]!	; 0x2ec

00000d2c <printf@plt>:
 d2c:	add	ip, pc, #0, 12
 d30:	add	ip, ip, #44, 20	; 0x2c000
 d34:	ldr	pc, [ip, #740]!	; 0x2e4

00000d38 <fopen@plt>:
 d38:	add	ip, pc, #0, 12
 d3c:	add	ip, ip, #44, 20	; 0x2c000
 d40:	ldr	pc, [ip, #732]!	; 0x2dc

00000d44 <getprotobyname@plt>:
 d44:	add	ip, pc, #0, 12
 d48:	add	ip, ip, #44, 20	; 0x2c000
 d4c:	ldr	pc, [ip, #724]!	; 0x2d4

00000d50 <longjmp@plt>:
 d50:	add	ip, pc, #0, 12
 d54:	add	ip, ip, #44, 20	; 0x2c000
 d58:	ldr	pc, [ip, #716]!	; 0x2cc

00000d5c <_setjmp@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #44, 20	; 0x2c000
 d64:	ldr	pc, [ip, #708]!	; 0x2c4

00000d68 <free@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #44, 20	; 0x2c000
 d70:	ldr	pc, [ip, #700]!	; 0x2bc

00000d74 <getnetbyname@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #44, 20	; 0x2c000
 d7c:	ldr	pc, [ip, #692]!	; 0x2b4

00000d80 <ferror@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #44, 20	; 0x2c000
 d88:	ldr	pc, [ip, #684]!	; 0x2ac

00000d8c <memcpy@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #44, 20	; 0x2c000
 d94:	ldr	pc, [ip, #676]!	; 0x2a4

00000d98 <strdup@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #44, 20	; 0x2c000
 da0:	ldr	pc, [ip, #668]!	; 0x29c

00000da4 <rewind@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #44, 20	; 0x2c000
 dac:	ldr	pc, [ip, #660]!	; 0x294

00000db0 <realloc@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #44, 20	; 0x2c000
 db8:	ldr	pc, [ip, #652]!	; 0x28c

00000dbc <fwrite@plt>:
 dbc:	add	ip, pc, #0, 12
 dc0:	add	ip, ip, #44, 20	; 0x2c000
 dc4:	ldr	pc, [ip, #644]!	; 0x284

00000dc8 <strcpy@plt>:
 dc8:	add	ip, pc, #0, 12
 dcc:	add	ip, ip, #44, 20	; 0x2c000
 dd0:	ldr	pc, [ip, #636]!	; 0x27c

00000dd4 <fread@plt>:
 dd4:	add	ip, pc, #0, 12
 dd8:	add	ip, ip, #44, 20	; 0x2c000
 ddc:	ldr	pc, [ip, #628]!	; 0x274

00000de0 <puts@plt>:
 de0:	add	ip, pc, #0, 12
 de4:	add	ip, ip, #44, 20	; 0x2c000
 de8:	ldr	pc, [ip, #620]!	; 0x26c

00000dec <malloc@plt>:
 dec:	add	ip, pc, #0, 12
 df0:	add	ip, ip, #44, 20	; 0x2c000
 df4:	ldr	pc, [ip, #612]!	; 0x264

00000df8 <__gmon_start__@plt>:
 df8:	add	ip, pc, #0, 12
 dfc:	add	ip, ip, #44, 20	; 0x2c000
 e00:	ldr	pc, [ip, #604]!	; 0x25c

00000e04 <__ctype_b_loc@plt>:
 e04:	add	ip, pc, #0, 12
 e08:	add	ip, ip, #44, 20	; 0x2c000
 e0c:	ldr	pc, [ip, #596]!	; 0x254

00000e10 <exit@plt>:
 e10:	add	ip, pc, #0, 12
 e14:	add	ip, ip, #44, 20	; 0x2c000
 e18:	ldr	pc, [ip, #588]!	; 0x24c

00000e1c <strlen@plt>:
 e1c:	add	ip, pc, #0, 12
 e20:	add	ip, ip, #44, 20	; 0x2c000
 e24:	ldr	pc, [ip, #580]!	; 0x244

00000e28 <strchr@plt>:
 e28:	add	ip, pc, #0, 12
 e2c:	add	ip, ip, #44, 20	; 0x2c000
 e30:	ldr	pc, [ip, #572]!	; 0x23c

00000e34 <fprintf@plt>:
 e34:	add	ip, pc, #0, 12
 e38:	add	ip, ip, #44, 20	; 0x2c000
 e3c:	ldr	pc, [ip, #564]!	; 0x234

00000e40 <__errno_location@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #44, 20	; 0x2c000
 e48:	ldr	pc, [ip, #556]!	; 0x22c

00000e4c <getservbyname@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #44, 20	; 0x2c000
 e54:	ldr	pc, [ip, #548]!	; 0x224

00000e58 <memset@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #44, 20	; 0x2c000
 e60:	ldr	pc, [ip, #540]!	; 0x21c

00000e64 <putchar@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #44, 20	; 0x2c000
 e6c:	ldr	pc, [ip, #532]!	; 0x214

00000e70 <strncpy@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #44, 20	; 0x2c000
 e78:	ldr	pc, [ip, #524]!	; 0x20c

00000e7c <fileno@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #44, 20	; 0x2c000
 e84:	ldr	pc, [ip, #516]!	; 0x204

00000e88 <sscanf@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #44, 20	; 0x2c000
 e90:	ldr	pc, [ip, #508]!	; 0x1fc

00000e94 <clearerr@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #44, 20	; 0x2c000
 e9c:	ldr	pc, [ip, #500]!	; 0x1f4

00000ea0 <vsnprintf@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #44, 20	; 0x2c000
 ea8:	ldr	pc, [ip, #492]!	; 0x1ec

00000eac <freeaddrinfo@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #44, 20	; 0x2c000
 eb4:	ldr	pc, [ip, #484]!	; 0x1e4

00000eb8 <getaddrinfo@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #44, 20	; 0x2c000
 ec0:	ldr	pc, [ip, #476]!	; 0x1dc

00000ec4 <ffs@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #44, 20	; 0x2c000
 ecc:	ldr	pc, [ip, #468]!	; 0x1d4

00000ed0 <gethostbyname@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #44, 20	; 0x2c000
 ed8:	ldr	pc, [ip, #460]!	; 0x1cc

00000edc <isatty@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #44, 20	; 0x2c000
 ee4:	ldr	pc, [ip, #452]!	; 0x1c4

00000ee8 <abort@plt>:
 ee8:	add	ip, pc, #0, 12
 eec:	add	ip, ip, #44, 20	; 0x2c000
 ef0:	ldr	pc, [ip, #444]!	; 0x1bc

00000ef4 <getc@plt>:
 ef4:	add	ip, pc, #0, 12
 ef8:	add	ip, ip, #44, 20	; 0x2c000
 efc:	ldr	pc, [ip, #436]!	; 0x1b4

Disassembly of section .text:

00000f00 <call_weak_fn>:
     f00:	ldr	r3, [pc, #20]	; f1c <call_weak_fn+0x1c>
     f04:	ldr	r2, [pc, #20]	; f20 <call_weak_fn+0x20>
     f08:	add	r3, pc, r3
     f0c:	ldr	r2, [r3, r2]
     f10:	cmp	r2, #0
     f14:	bxeq	lr
     f18:	b	df8 <__gmon_start__@plt>
     f1c:	.word	0x0002c0f0
     f20:	.word	0x000000e0

00000f24 <deregister_tm_clones>:
     f24:	ldr	r0, [pc, #44]	; f58 <deregister_tm_clones+0x34>
     f28:	ldr	r3, [pc, #44]	; f5c <deregister_tm_clones+0x38>
     f2c:	add	r0, pc, r0
     f30:	add	r3, pc, r3
     f34:	cmp	r3, r0
     f38:	ldr	r3, [pc, #32]	; f60 <deregister_tm_clones+0x3c>
     f3c:	add	r3, pc, r3
     f40:	bxeq	lr
     f44:	ldr	r2, [pc, #24]	; f64 <deregister_tm_clones+0x40>
     f48:	ldr	r3, [r3, r2]
     f4c:	cmp	r3, #0
     f50:	bxeq	lr
     f54:	bx	r3
     f58:	.word	0x0002c42c
     f5c:	.word	0x0002c428
     f60:	.word	0x0002c0bc
     f64:	.word	0x000000c0

00000f68 <register_tm_clones>:
     f68:	ldr	r0, [pc, #56]	; fa8 <register_tm_clones+0x40>
     f6c:	ldr	r3, [pc, #56]	; fac <register_tm_clones+0x44>
     f70:	add	r0, pc, r0
     f74:	add	r3, pc, r3
     f78:	sub	r1, r3, r0
     f7c:	ldr	r3, [pc, #44]	; fb0 <register_tm_clones+0x48>
     f80:	asr	r1, r1, #2
     f84:	add	r3, pc, r3
     f88:	add	r1, r1, r1, lsr #31
     f8c:	asrs	r1, r1, #1
     f90:	bxeq	lr
     f94:	ldr	r2, [pc, #24]	; fb4 <register_tm_clones+0x4c>
     f98:	ldr	r3, [r3, r2]
     f9c:	cmp	r3, #0
     fa0:	bxeq	lr
     fa4:	bx	r3
     fa8:	.word	0x0002c3e8
     fac:	.word	0x0002c3e4
     fb0:	.word	0x0002c074
     fb4:	.word	0x000000fc

00000fb8 <__do_global_dtors_aux>:
     fb8:	ldr	r3, [pc, #76]	; 100c <__do_global_dtors_aux+0x54>
     fbc:	ldr	r2, [pc, #76]	; 1010 <__do_global_dtors_aux+0x58>
     fc0:	add	r3, pc, r3
     fc4:	add	r2, pc, r2
     fc8:	ldrb	r3, [r3]
     fcc:	cmp	r3, #0
     fd0:	bxne	lr
     fd4:	ldr	r3, [pc, #56]	; 1014 <__do_global_dtors_aux+0x5c>
     fd8:	push	{r4, lr}
     fdc:	ldr	r3, [r2, r3]
     fe0:	cmp	r3, #0
     fe4:	beq	ff4 <__do_global_dtors_aux+0x3c>
     fe8:	ldr	r3, [pc, #40]	; 1018 <__do_global_dtors_aux+0x60>
     fec:	ldr	r0, [pc, r3]
     ff0:	bl	d20 <__cxa_finalize@plt>
     ff4:	bl	f24 <deregister_tm_clones>
     ff8:	ldr	r3, [pc, #28]	; 101c <__do_global_dtors_aux+0x64>
     ffc:	mov	r2, #1
    1000:	add	r3, pc, r3
    1004:	strb	r2, [r3]
    1008:	pop	{r4, pc}
    100c:	.word	0x0002c398
    1010:	.word	0x0002c034
    1014:	.word	0x000000bc
    1018:	.word	0x0002c114
    101c:	.word	0x0002c358

00001020 <frame_dummy>:
    1020:	b	f68 <register_tm_clones>

00001024 <sfbpf_filter>:
    1024:	cmp	r0, #0
    1028:	beq	1444 <sfbpf_filter+0x420>
    102c:	push	{r4, r5, lr}
    1030:	mov	r4, #0
    1034:	sub	ip, r0, #8
    1038:	sub	sp, sp, #68	; 0x44
    103c:	mov	r0, r4
    1040:	add	r5, ip, #8
    1044:	ldrh	lr, [ip, #8]
    1048:	cmp	lr, #53	; 0x35
    104c:	beq	13a8 <sfbpf_filter+0x384>
    1050:	bhi	117c <sfbpf_filter+0x158>
    1054:	cmp	lr, #21
    1058:	beq	13bc <sfbpf_filter+0x398>
    105c:	bhi	10f0 <sfbpf_filter+0xcc>
    1060:	cmp	lr, #4
    1064:	beq	1424 <sfbpf_filter+0x400>
    1068:	bhi	10ac <sfbpf_filter+0x88>
    106c:	cmp	lr, #1
    1070:	beq	133c <sfbpf_filter+0x318>
    1074:	cmp	lr, #0
    1078:	beq	1334 <sfbpf_filter+0x310>
    107c:	cmp	lr, #2
    1080:	beq	1358 <sfbpf_filter+0x334>
    1084:	cmp	lr, #3
    1088:	beq	136c <sfbpf_filter+0x348>
    108c:	bl	ee8 <abort@plt>
    1090:	mov	r4, r0
    1094:	mov	ip, r5
    1098:	b	1040 <sfbpf_filter+0x1c>
    109c:	mov	r0, r2
    10a0:	b	1094 <sfbpf_filter+0x70>
    10a4:	mov	r0, r4
    10a8:	b	1094 <sfbpf_filter+0x70>
    10ac:	cmp	lr, #7
    10b0:	beq	1090 <sfbpf_filter+0x6c>
    10b4:	bhi	10d4 <sfbpf_filter+0xb0>
    10b8:	cmp	lr, #5
    10bc:	beq	1380 <sfbpf_filter+0x35c>
    10c0:	cmp	lr, #6
    10c4:	ldreq	r0, [ip, #12]
    10c8:	bne	108c <sfbpf_filter+0x68>
    10cc:	add	sp, sp, #68	; 0x44
    10d0:	pop	{r4, r5, pc}
    10d4:	cmp	lr, #12
    10d8:	beq	1404 <sfbpf_filter+0x3e0>
    10dc:	cmp	lr, #20
    10e0:	bne	108c <sfbpf_filter+0x68>
    10e4:	ldr	ip, [ip, #12]
    10e8:	sub	r0, r0, ip
    10ec:	b	1094 <sfbpf_filter+0x70>
    10f0:	cmp	lr, #37	; 0x25
    10f4:	beq	138c <sfbpf_filter+0x368>
    10f8:	bhi	113c <sfbpf_filter+0x118>
    10fc:	cmp	lr, #29
    1100:	beq	13f4 <sfbpf_filter+0x3d0>
    1104:	bhi	1120 <sfbpf_filter+0xfc>
    1108:	cmp	lr, #22
    110c:	beq	10cc <sfbpf_filter+0xa8>
    1110:	cmp	lr, #28
    1114:	bne	108c <sfbpf_filter+0x68>
    1118:	sub	r0, r0, r4
    111c:	b	1094 <sfbpf_filter+0x70>
    1120:	cmp	lr, #32
    1124:	beq	12bc <sfbpf_filter+0x298>
    1128:	cmp	lr, #36	; 0x24
    112c:	bne	108c <sfbpf_filter+0x68>
    1130:	ldr	ip, [ip, #12]
    1134:	mul	r0, ip, r0
    1138:	b	1094 <sfbpf_filter+0x70>
    113c:	cmp	lr, #45	; 0x2d
    1140:	beq	13dc <sfbpf_filter+0x3b8>
    1144:	bhi	1160 <sfbpf_filter+0x13c>
    1148:	cmp	lr, #40	; 0x28
    114c:	beq	12d8 <sfbpf_filter+0x2b4>
    1150:	cmp	lr, #44	; 0x2c
    1154:	bne	108c <sfbpf_filter+0x68>
    1158:	mul	r0, r4, r0
    115c:	b	1094 <sfbpf_filter+0x70>
    1160:	cmp	lr, #48	; 0x30
    1164:	beq	12fc <sfbpf_filter+0x2d8>
    1168:	cmp	lr, #52	; 0x34
    116c:	bne	108c <sfbpf_filter+0x68>
    1170:	ldr	ip, [ip, #12]
    1174:	udiv	r0, r0, ip
    1178:	b	1094 <sfbpf_filter+0x70>
    117c:	cmp	lr, #92	; 0x5c
    1180:	beq	140c <sfbpf_filter+0x3e8>
    1184:	bhi	1214 <sfbpf_filter+0x1f0>
    1188:	cmp	lr, #69	; 0x45
    118c:	beq	13cc <sfbpf_filter+0x3a8>
    1190:	bhi	11d4 <sfbpf_filter+0x1b0>
    1194:	cmp	lr, #61	; 0x3d
    1198:	beq	13e8 <sfbpf_filter+0x3c4>
    119c:	bhi	11b8 <sfbpf_filter+0x194>
    11a0:	cmp	lr, #60	; 0x3c
    11a4:	bne	108c <sfbpf_filter+0x68>
    11a8:	cmp	r4, #0
    11ac:	beq	144c <sfbpf_filter+0x428>
    11b0:	udiv	r0, r0, r4
    11b4:	b	1094 <sfbpf_filter+0x70>
    11b8:	cmp	lr, #64	; 0x40
    11bc:	beq	1310 <sfbpf_filter+0x2ec>
    11c0:	cmp	lr, #68	; 0x44
    11c4:	bne	108c <sfbpf_filter+0x68>
    11c8:	ldr	ip, [ip, #12]
    11cc:	orr	r0, r0, ip
    11d0:	b	1094 <sfbpf_filter+0x70>
    11d4:	cmp	lr, #77	; 0x4d
    11d8:	beq	13fc <sfbpf_filter+0x3d8>
    11dc:	bhi	11f8 <sfbpf_filter+0x1d4>
    11e0:	cmp	lr, #72	; 0x48
    11e4:	beq	131c <sfbpf_filter+0x2f8>
    11e8:	cmp	lr, #76	; 0x4c
    11ec:	bne	108c <sfbpf_filter+0x68>
    11f0:	orr	r0, r0, r4
    11f4:	b	1094 <sfbpf_filter+0x70>
    11f8:	cmp	lr, #80	; 0x50
    11fc:	beq	1328 <sfbpf_filter+0x304>
    1200:	cmp	lr, #84	; 0x54
    1204:	bne	108c <sfbpf_filter+0x68>
    1208:	ldr	ip, [ip, #12]
    120c:	and	r0, r0, ip
    1210:	b	1094 <sfbpf_filter+0x70>
    1214:	cmp	lr, #124	; 0x7c
    1218:	beq	141c <sfbpf_filter+0x3f8>
    121c:	bhi	126c <sfbpf_filter+0x248>
    1220:	cmp	lr, #100	; 0x64
    1224:	beq	1430 <sfbpf_filter+0x40c>
    1228:	bhi	1250 <sfbpf_filter+0x22c>
    122c:	cmp	lr, #96	; 0x60
    1230:	beq	1344 <sfbpf_filter+0x320>
    1234:	cmp	lr, #97	; 0x61
    1238:	bne	108c <sfbpf_filter+0x68>
    123c:	ldr	ip, [ip, #12]
    1240:	add	lr, sp, #64	; 0x40
    1244:	add	ip, lr, ip, lsl #2
    1248:	ldr	r4, [ip, #-64]	; 0xffffffc0
    124c:	b	1094 <sfbpf_filter+0x70>
    1250:	cmp	lr, #108	; 0x6c
    1254:	beq	1414 <sfbpf_filter+0x3f0>
    1258:	cmp	lr, #116	; 0x74
    125c:	bne	108c <sfbpf_filter+0x68>
    1260:	ldr	ip, [ip, #12]
    1264:	lsr	r0, r0, ip
    1268:	b	1094 <sfbpf_filter+0x70>
    126c:	cmp	lr, #132	; 0x84
    1270:	beq	143c <sfbpf_filter+0x418>
    1274:	bhi	1290 <sfbpf_filter+0x26c>
    1278:	cmp	lr, #128	; 0x80
    127c:	beq	109c <sfbpf_filter+0x78>
    1280:	cmp	lr, #129	; 0x81
    1284:	bne	108c <sfbpf_filter+0x68>
    1288:	mov	r4, r2
    128c:	b	1094 <sfbpf_filter+0x70>
    1290:	cmp	lr, #135	; 0x87
    1294:	beq	10a4 <sfbpf_filter+0x80>
    1298:	cmp	lr, #177	; 0xb1
    129c:	bne	108c <sfbpf_filter+0x68>
    12a0:	ldr	ip, [ip, #12]
    12a4:	cmp	ip, r3
    12a8:	bcs	144c <sfbpf_filter+0x428>
    12ac:	ldrb	r4, [r1, ip]
    12b0:	lsl	r4, r4, #2
    12b4:	and	r4, r4, #60	; 0x3c
    12b8:	b	1094 <sfbpf_filter+0x70>
    12bc:	ldr	r0, [ip, #12]
    12c0:	add	ip, r0, #4
    12c4:	cmp	ip, r3
    12c8:	bhi	144c <sfbpf_filter+0x428>
    12cc:	ldr	r0, [r1, r0]
    12d0:	rev	r0, r0
    12d4:	b	1094 <sfbpf_filter+0x70>
    12d8:	ldr	r0, [ip, #12]
    12dc:	add	ip, r0, #2
    12e0:	cmp	ip, r3
    12e4:	bhi	144c <sfbpf_filter+0x428>
    12e8:	add	lr, r1, r0
    12ec:	ldrb	ip, [r1, r0]
    12f0:	ldrb	r0, [lr, #1]
    12f4:	orr	r0, r0, ip, lsl #8
    12f8:	b	1094 <sfbpf_filter+0x70>
    12fc:	ldr	r0, [ip, #12]
    1300:	cmp	r0, r3
    1304:	bcs	144c <sfbpf_filter+0x428>
    1308:	ldrb	r0, [r1, r0]
    130c:	b	1094 <sfbpf_filter+0x70>
    1310:	ldr	r0, [ip, #12]
    1314:	add	r0, r4, r0
    1318:	b	12c0 <sfbpf_filter+0x29c>
    131c:	ldr	r0, [ip, #12]
    1320:	add	r0, r4, r0
    1324:	b	12dc <sfbpf_filter+0x2b8>
    1328:	ldr	r0, [ip, #12]
    132c:	add	r0, r4, r0
    1330:	b	1300 <sfbpf_filter+0x2dc>
    1334:	ldr	r0, [ip, #12]
    1338:	b	1094 <sfbpf_filter+0x70>
    133c:	ldr	r4, [ip, #12]
    1340:	b	1094 <sfbpf_filter+0x70>
    1344:	ldr	r0, [ip, #12]
    1348:	add	ip, sp, #64	; 0x40
    134c:	add	r0, ip, r0, lsl #2
    1350:	ldr	r0, [r0, #-64]	; 0xffffffc0
    1354:	b	1094 <sfbpf_filter+0x70>
    1358:	ldr	ip, [ip, #12]
    135c:	add	lr, sp, #64	; 0x40
    1360:	add	ip, lr, ip, lsl #2
    1364:	str	r0, [ip, #-64]	; 0xffffffc0
    1368:	b	1094 <sfbpf_filter+0x70>
    136c:	ldr	ip, [ip, #12]
    1370:	add	lr, sp, #64	; 0x40
    1374:	add	ip, lr, ip, lsl #2
    1378:	str	r4, [ip, #-64]	; 0xffffffc0
    137c:	b	1094 <sfbpf_filter+0x70>
    1380:	ldr	ip, [ip, #12]
    1384:	add	r5, r5, ip, lsl #3
    1388:	b	1094 <sfbpf_filter+0x70>
    138c:	ldr	lr, [ip, #12]
    1390:	cmp	lr, r0
    1394:	bcs	13b4 <sfbpf_filter+0x390>
    1398:	ldrb	ip, [ip, #10]
    139c:	lsl	ip, ip, #3
    13a0:	add	r5, r5, ip
    13a4:	b	1094 <sfbpf_filter+0x70>
    13a8:	ldr	lr, [ip, #12]
    13ac:	cmp	lr, r0
    13b0:	bls	1398 <sfbpf_filter+0x374>
    13b4:	ldrb	ip, [ip, #11]
    13b8:	b	139c <sfbpf_filter+0x378>
    13bc:	ldr	lr, [ip, #12]
    13c0:	cmp	lr, r0
    13c4:	bne	13b4 <sfbpf_filter+0x390>
    13c8:	b	1398 <sfbpf_filter+0x374>
    13cc:	ldr	lr, [ip, #12]
    13d0:	tst	r0, lr
    13d4:	beq	13b4 <sfbpf_filter+0x390>
    13d8:	b	1398 <sfbpf_filter+0x374>
    13dc:	cmp	r0, r4
    13e0:	bls	13b4 <sfbpf_filter+0x390>
    13e4:	b	1398 <sfbpf_filter+0x374>
    13e8:	cmp	r0, r4
    13ec:	bcc	13b4 <sfbpf_filter+0x390>
    13f0:	b	1398 <sfbpf_filter+0x374>
    13f4:	cmp	r0, r4
    13f8:	b	13c4 <sfbpf_filter+0x3a0>
    13fc:	tst	r0, r4
    1400:	b	13d4 <sfbpf_filter+0x3b0>
    1404:	add	r0, r0, r4
    1408:	b	1094 <sfbpf_filter+0x70>
    140c:	and	r0, r0, r4
    1410:	b	1094 <sfbpf_filter+0x70>
    1414:	lsl	r0, r0, r4
    1418:	b	1094 <sfbpf_filter+0x70>
    141c:	lsr	r0, r0, r4
    1420:	b	1094 <sfbpf_filter+0x70>
    1424:	ldr	ip, [ip, #12]
    1428:	add	r0, r0, ip
    142c:	b	1094 <sfbpf_filter+0x70>
    1430:	ldr	ip, [ip, #12]
    1434:	lsl	r0, r0, ip
    1438:	b	1094 <sfbpf_filter+0x70>
    143c:	rsb	r0, r0, #0
    1440:	b	1094 <sfbpf_filter+0x70>
    1444:	mvn	r0, #0
    1448:	bx	lr
    144c:	mov	r0, #0
    1450:	b	10cc <sfbpf_filter+0xa8>

00001454 <sfbpf_validate>:
    1454:	cmp	r1, #0
    1458:	ble	15e4 <sfbpf_validate+0x190>
    145c:	push	{r4, lr}
    1460:	mov	r2, r0
    1464:	mov	lr, #0
    1468:	cmp	lr, r1
    146c:	bne	148c <sfbpf_validate+0x38>
    1470:	add	r0, r0, lr, lsl #3
    1474:	ldrh	r0, [r0, #-8]
    1478:	and	r0, r0, #7
    147c:	sub	r0, r0, #6
    1480:	clz	r0, r0
    1484:	lsr	r0, r0, #5
    1488:	pop	{r4, pc}
    148c:	ldrh	r3, [r2]
    1490:	and	ip, r3, #7
    1494:	sub	ip, ip, #2
    1498:	cmp	ip, #5
    149c:	addls	pc, pc, ip, lsl #2
    14a0:	b	14bc <sfbpf_validate+0x68>
    14a4:	b	1500 <sfbpf_validate+0xac>
    14a8:	b	1500 <sfbpf_validate+0xac>
    14ac:	b	1514 <sfbpf_validate+0xc0>
    14b0:	b	1584 <sfbpf_validate+0x130>
    14b4:	b	14dc <sfbpf_validate+0x88>
    14b8:	b	14dc <sfbpf_validate+0x88>
    14bc:	and	r3, r3, #224	; 0xe0
    14c0:	cmp	r3, #64	; 0x40
    14c4:	beq	14dc <sfbpf_validate+0x88>
    14c8:	bhi	14e8 <sfbpf_validate+0x94>
    14cc:	cmp	r3, #0
    14d0:	beq	14dc <sfbpf_validate+0x88>
    14d4:	cmp	r3, #32
    14d8:	bne	150c <sfbpf_validate+0xb8>
    14dc:	add	lr, lr, #1
    14e0:	add	r2, r2, #8
    14e4:	b	1468 <sfbpf_validate+0x14>
    14e8:	cmp	r3, #128	; 0x80
    14ec:	beq	14dc <sfbpf_validate+0x88>
    14f0:	cmp	r3, #160	; 0xa0
    14f4:	beq	14dc <sfbpf_validate+0x88>
    14f8:	cmp	r3, #96	; 0x60
    14fc:	bne	150c <sfbpf_validate+0xb8>
    1500:	ldr	r3, [r2, #4]
    1504:	cmp	r3, #15
    1508:	bls	14dc <sfbpf_validate+0x88>
    150c:	mov	r0, #0
    1510:	pop	{r4, pc}
    1514:	and	ip, r3, #240	; 0xf0
    1518:	cmp	ip, #64	; 0x40
    151c:	beq	14dc <sfbpf_validate+0x88>
    1520:	bhi	1560 <sfbpf_validate+0x10c>
    1524:	cmp	ip, #16
    1528:	beq	14dc <sfbpf_validate+0x88>
    152c:	bhi	1538 <sfbpf_validate+0xe4>
    1530:	cmp	ip, #0
    1534:	b	14d8 <sfbpf_validate+0x84>
    1538:	cmp	ip, #32
    153c:	beq	14dc <sfbpf_validate+0x88>
    1540:	cmp	ip, #48	; 0x30
    1544:	bne	150c <sfbpf_validate+0xb8>
    1548:	tst	r3, #24
    154c:	bne	14dc <sfbpf_validate+0x88>
    1550:	ldr	r3, [r2, #4]
    1554:	cmp	r3, #0
    1558:	bne	14dc <sfbpf_validate+0x88>
    155c:	b	150c <sfbpf_validate+0xb8>
    1560:	cmp	ip, #96	; 0x60
    1564:	beq	14dc <sfbpf_validate+0x88>
    1568:	bhi	1574 <sfbpf_validate+0x120>
    156c:	cmp	ip, #80	; 0x50
    1570:	b	14d8 <sfbpf_validate+0x84>
    1574:	cmp	ip, #112	; 0x70
    1578:	beq	14dc <sfbpf_validate+0x88>
    157c:	cmp	ip, #128	; 0x80
    1580:	b	14d8 <sfbpf_validate+0x84>
    1584:	and	r3, r3, #240	; 0xf0
    1588:	add	ip, lr, #1
    158c:	cmp	r3, #32
    1590:	beq	15b0 <sfbpf_validate+0x15c>
    1594:	bhi	15d4 <sfbpf_validate+0x180>
    1598:	cmp	r3, #0
    159c:	ldreq	r4, [r2, #4]
    15a0:	addeq	ip, ip, r4
    15a4:	beq	15c8 <sfbpf_validate+0x174>
    15a8:	cmp	r3, #16
    15ac:	bne	150c <sfbpf_validate+0xb8>
    15b0:	ldrb	r3, [r2, #2]
    15b4:	add	r3, r3, ip
    15b8:	cmp	r3, r1
    15bc:	bcs	150c <sfbpf_validate+0xb8>
    15c0:	ldrb	r3, [r2, #3]
    15c4:	add	ip, r3, ip
    15c8:	cmp	ip, r1
    15cc:	bcc	14dc <sfbpf_validate+0x88>
    15d0:	b	150c <sfbpf_validate+0xb8>
    15d4:	cmp	r3, #48	; 0x30
    15d8:	beq	15b0 <sfbpf_validate+0x15c>
    15dc:	cmp	r3, #64	; 0x40
    15e0:	b	15ac <sfbpf_validate+0x158>
    15e4:	mov	r0, #0
    15e8:	bx	lr

000015ec <get_code_name>:
    15ec:	mov	r3, r0
    15f0:	ldr	r0, [r3, #4]
    15f4:	cmp	r0, #0
    15f8:	bxeq	lr
    15fc:	ldr	r2, [r3], #8
    1600:	cmp	r2, r1
    1604:	bne	15f0 <get_code_name+0x4>
    1608:	bx	lr

0000160c <sfbpf_print>:
    160c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1610:	mov	r9, r0
    1614:	mov	r7, #0
    1618:	mov	sl, r1
    161c:	ldr	r8, [pc, #1604]	; 1c68 <sfbpf_print+0x65c>
    1620:	ldr	r0, [pc, #1604]	; 1c6c <sfbpf_print+0x660>
    1624:	ldr	fp, [pc, #1604]	; 1c70 <sfbpf_print+0x664>
    1628:	add	r8, pc, r8
    162c:	add	r8, r8, #344	; 0x158
    1630:	add	r0, pc, r0
    1634:	bl	de0 <puts@plt>
    1638:	add	fp, pc, fp
    163c:	ldr	r3, [r9]
    1640:	cmp	r3, r7
    1644:	bhi	1650 <sfbpf_print+0x44>
    1648:	add	sp, sp, #12
    164c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1650:	ldr	r6, [r9, #4]
    1654:	lsl	r5, r7, #3
    1658:	mov	r1, r7
    165c:	mov	r0, fp
    1660:	add	r7, r7, #1
    1664:	bl	d2c <printf@plt>
    1668:	cmp	sl, #0
    166c:	add	r4, r6, r5
    1670:	ldrh	r1, [r6, r5]
    1674:	beq	17ec <sfbpf_print+0x1e0>
    1678:	and	r1, r1, #7
    167c:	ldr	r0, [pc, #1520]	; 1c74 <sfbpf_print+0x668>
    1680:	add	r0, pc, r0
    1684:	bl	15ec <get_code_name>
    1688:	mov	r1, r0
    168c:	ldr	r0, [pc, #1508]	; 1c78 <sfbpf_print+0x66c>
    1690:	add	r0, pc, r0
    1694:	bl	d2c <printf@plt>
    1698:	ldrh	r5, [r6, r5]
    169c:	and	r3, r5, #7
    16a0:	cmp	r3, #7
    16a4:	addls	pc, pc, r3, lsl #2
    16a8:	b	170c <sfbpf_print+0x100>
    16ac:	b	16cc <sfbpf_print+0xc0>
    16b0:	b	16cc <sfbpf_print+0xc0>
    16b4:	b	170c <sfbpf_print+0x100>
    16b8:	b	170c <sfbpf_print+0x100>
    16bc:	b	1728 <sfbpf_print+0x11c>
    16c0:	b	1768 <sfbpf_print+0x15c>
    16c4:	b	17a8 <sfbpf_print+0x19c>
    16c8:	b	17d0 <sfbpf_print+0x1c4>
    16cc:	ldr	r6, [pc, #1448]	; 1c7c <sfbpf_print+0x670>
    16d0:	and	r1, r5, #24
    16d4:	add	r6, pc, r6
    16d8:	add	r0, r6, #72	; 0x48
    16dc:	bl	15ec <get_code_name>
    16e0:	mov	r3, r0
    16e4:	and	r1, r5, #224	; 0xe0
    16e8:	add	r0, r6, #104	; 0x68
    16ec:	str	r3, [sp, #4]
    16f0:	bl	15ec <get_code_name>
    16f4:	mov	r2, r0
    16f8:	ldr	r0, [pc, #1408]	; 1c80 <sfbpf_print+0x674>
    16fc:	ldr	r3, [sp, #4]
    1700:	add	r0, pc, r0
    1704:	mov	r1, r3
    1708:	bl	d2c <printf@plt>
    170c:	ldr	r0, [pc, #1392]	; 1c84 <sfbpf_print+0x678>
    1710:	ldrb	r2, [r4, #3]
    1714:	ldrb	r1, [r4, #2]
    1718:	add	r0, pc, r0
    171c:	ldr	r3, [r4, #4]
    1720:	bl	d2c <printf@plt>
    1724:	b	163c <sfbpf_print+0x30>
    1728:	ldr	r6, [pc, #1368]	; 1c88 <sfbpf_print+0x67c>
    172c:	and	r1, r5, #240	; 0xf0
    1730:	add	r6, pc, r6
    1734:	add	r0, r6, #160	; 0xa0
    1738:	bl	15ec <get_code_name>
    173c:	mov	r3, r0
    1740:	and	r1, r5, #8
    1744:	add	r0, r6, #240	; 0xf0
    1748:	str	r3, [sp, #4]
    174c:	bl	15ec <get_code_name>
    1750:	mov	r2, r0
    1754:	ldr	r0, [pc, #1328]	; 1c8c <sfbpf_print+0x680>
    1758:	ldr	r3, [sp, #4]
    175c:	add	r0, pc, r0
    1760:	mov	r1, r3
    1764:	b	1708 <sfbpf_print+0xfc>
    1768:	ldr	r6, [pc, #1312]	; 1c90 <sfbpf_print+0x684>
    176c:	and	r1, r5, #240	; 0xf0
    1770:	add	r6, pc, r6
    1774:	add	r0, r6, #264	; 0x108
    1778:	bl	15ec <get_code_name>
    177c:	mov	r3, r0
    1780:	and	r1, r5, #8
    1784:	add	r0, r6, #240	; 0xf0
    1788:	str	r3, [sp, #4]
    178c:	bl	15ec <get_code_name>
    1790:	mov	r2, r0
    1794:	ldr	r0, [pc, #1272]	; 1c94 <sfbpf_print+0x688>
    1798:	ldr	r3, [sp, #4]
    179c:	add	r0, pc, r0
    17a0:	mov	r1, r3
    17a4:	b	1708 <sfbpf_print+0xfc>
    17a8:	ldr	r0, [pc, #1256]	; 1c98 <sfbpf_print+0x68c>
    17ac:	and	r1, r5, #24
    17b0:	add	r0, pc, r0
    17b4:	add	r0, r0, #312	; 0x138
    17b8:	bl	15ec <get_code_name>
    17bc:	mov	r1, r0
    17c0:	ldr	r0, [pc, #1236]	; 1c9c <sfbpf_print+0x690>
    17c4:	add	r0, pc, r0
    17c8:	bl	d2c <printf@plt>
    17cc:	b	170c <sfbpf_print+0x100>
    17d0:	and	r1, r5, #248	; 0xf8
    17d4:	mov	r0, r8
    17d8:	bl	15ec <get_code_name>
    17dc:	mov	r1, r0
    17e0:	ldr	r0, [pc, #1208]	; 1ca0 <sfbpf_print+0x694>
    17e4:	add	r0, pc, r0
    17e8:	b	17c8 <sfbpf_print+0x1bc>
    17ec:	and	r3, r1, #7
    17f0:	sub	r3, r3, #1
    17f4:	cmp	r3, #6
    17f8:	addls	pc, pc, r3, lsl #2
    17fc:	b	181c <sfbpf_print+0x210>
    1800:	b	1908 <sfbpf_print+0x2fc>
    1804:	b	197c <sfbpf_print+0x370>
    1808:	b	1990 <sfbpf_print+0x384>
    180c:	b	19a0 <sfbpf_print+0x394>
    1810:	b	1ad0 <sfbpf_print+0x4c4>
    1814:	b	1bc4 <sfbpf_print+0x5b8>
    1818:	b	1c30 <sfbpf_print+0x624>
    181c:	ldr	r0, [pc, #1152]	; 1ca4 <sfbpf_print+0x698>
    1820:	add	r0, pc, r0
    1824:	bl	d2c <printf@plt>
    1828:	ldrh	r2, [r6, r5]
    182c:	and	r3, r2, #224	; 0xe0
    1830:	cmp	r3, #64	; 0x40
    1834:	beq	18b4 <sfbpf_print+0x2a8>
    1838:	bhi	1858 <sfbpf_print+0x24c>
    183c:	cmp	r3, #0
    1840:	beq	18e4 <sfbpf_print+0x2d8>
    1844:	cmp	r3, #32
    1848:	beq	1878 <sfbpf_print+0x26c>
    184c:	ldr	r0, [pc, #1108]	; 1ca8 <sfbpf_print+0x69c>
    1850:	add	r0, pc, r0
    1854:	b	1870 <sfbpf_print+0x264>
    1858:	cmp	r3, #96	; 0x60
    185c:	beq	18f8 <sfbpf_print+0x2ec>
    1860:	cmp	r3, #128	; 0x80
    1864:	bne	184c <sfbpf_print+0x240>
    1868:	ldr	r0, [pc, #1084]	; 1cac <sfbpf_print+0x6a0>
    186c:	add	r0, pc, r0
    1870:	bl	d2c <printf@plt>
    1874:	b	18a8 <sfbpf_print+0x29c>
    1878:	ands	r2, r2, #24
    187c:	ldr	r1, [r4, #4]
    1880:	moveq	r2, #4
    1884:	beq	189c <sfbpf_print+0x290>
    1888:	cmp	r2, #8
    188c:	subne	r2, r2, #16
    1890:	moveq	r2, #2
    1894:	clzne	r2, r2
    1898:	lsrne	r2, r2, #5
    189c:	ldr	r0, [pc, #1036]	; 1cb0 <sfbpf_print+0x6a4>
    18a0:	add	r0, pc, r0
    18a4:	bl	d2c <printf@plt>
    18a8:	mov	r0, #10
    18ac:	bl	e64 <putchar@plt>
    18b0:	b	163c <sfbpf_print+0x30>
    18b4:	ands	r2, r2, #24
    18b8:	ldr	r1, [r4, #4]
    18bc:	moveq	r2, #4
    18c0:	beq	18d8 <sfbpf_print+0x2cc>
    18c4:	cmp	r2, #8
    18c8:	subne	r2, r2, #16
    18cc:	moveq	r2, #2
    18d0:	clzne	r2, r2
    18d4:	lsrne	r2, r2, #5
    18d8:	ldr	r0, [pc, #980]	; 1cb4 <sfbpf_print+0x6a8>
    18dc:	add	r0, pc, r0
    18e0:	b	18a4 <sfbpf_print+0x298>
    18e4:	ldr	r0, [pc, #972]	; 1cb8 <sfbpf_print+0x6ac>
    18e8:	ldr	r1, [r4, #4]
    18ec:	add	r0, pc, r0
    18f0:	bl	d2c <printf@plt>
    18f4:	b	18a8 <sfbpf_print+0x29c>
    18f8:	ldr	r0, [pc, #956]	; 1cbc <sfbpf_print+0x6b0>
    18fc:	ldr	r1, [r4, #4]
    1900:	add	r0, pc, r0
    1904:	b	18f0 <sfbpf_print+0x2e4>
    1908:	ldr	r0, [pc, #944]	; 1cc0 <sfbpf_print+0x6b4>
    190c:	add	r0, pc, r0
    1910:	bl	d2c <printf@plt>
    1914:	ldrh	r3, [r6, r5]
    1918:	and	r3, r3, #224	; 0xe0
    191c:	cmp	r3, #96	; 0x60
    1920:	beq	196c <sfbpf_print+0x360>
    1924:	bhi	1940 <sfbpf_print+0x334>
    1928:	cmp	r3, #0
    192c:	bne	18a8 <sfbpf_print+0x29c>
    1930:	ldr	r0, [pc, #908]	; 1cc4 <sfbpf_print+0x6b8>
    1934:	ldr	r1, [r4, #4]
    1938:	add	r0, pc, r0
    193c:	b	18f0 <sfbpf_print+0x2e4>
    1940:	cmp	r3, #128	; 0x80
    1944:	beq	1960 <sfbpf_print+0x354>
    1948:	cmp	r3, #160	; 0xa0
    194c:	bne	18a8 <sfbpf_print+0x29c>
    1950:	ldr	r0, [pc, #880]	; 1cc8 <sfbpf_print+0x6bc>
    1954:	ldr	r1, [r4, #4]
    1958:	add	r0, pc, r0
    195c:	b	18f0 <sfbpf_print+0x2e4>
    1960:	ldr	r0, [pc, #868]	; 1ccc <sfbpf_print+0x6c0>
    1964:	add	r0, pc, r0
    1968:	b	1870 <sfbpf_print+0x264>
    196c:	ldr	r0, [pc, #860]	; 1cd0 <sfbpf_print+0x6c4>
    1970:	ldr	r1, [r4, #4]
    1974:	add	r0, pc, r0
    1978:	b	18f0 <sfbpf_print+0x2e4>
    197c:	ldr	r0, [pc, #848]	; 1cd4 <sfbpf_print+0x6c8>
    1980:	ldr	r1, [r4, #4]
    1984:	add	r0, pc, r0
    1988:	bl	d2c <printf@plt>
    198c:	b	163c <sfbpf_print+0x30>
    1990:	ldr	r0, [pc, #832]	; 1cd8 <sfbpf_print+0x6cc>
    1994:	ldr	r1, [r4, #4]
    1998:	add	r0, pc, r0
    199c:	b	1988 <sfbpf_print+0x37c>
    19a0:	and	r1, r1, #240	; 0xf0
    19a4:	cmp	r1, #64	; 0x40
    19a8:	beq	1a54 <sfbpf_print+0x448>
    19ac:	bhi	1a14 <sfbpf_print+0x408>
    19b0:	cmp	r1, #16
    19b4:	beq	1a60 <sfbpf_print+0x454>
    19b8:	bhi	19f8 <sfbpf_print+0x3ec>
    19bc:	cmp	r1, #0
    19c0:	beq	1a6c <sfbpf_print+0x460>
    19c4:	ldr	r1, [pc, #784]	; 1cdc <sfbpf_print+0x6d0>
    19c8:	add	r1, pc, r1
    19cc:	ldr	r0, [pc, #780]	; 1ce0 <sfbpf_print+0x6d4>
    19d0:	add	r0, pc, r0
    19d4:	bl	d2c <printf@plt>
    19d8:	ldrh	r3, [r6, r5]
    19dc:	ands	r3, r3, #8
    19e0:	beq	1ac0 <sfbpf_print+0x4b4>
    19e4:	cmp	r3, #8
    19e8:	bne	184c <sfbpf_print+0x240>
    19ec:	mov	r0, #88	; 0x58
    19f0:	bl	e64 <putchar@plt>
    19f4:	b	18a8 <sfbpf_print+0x29c>
    19f8:	cmp	r1, #32
    19fc:	beq	1a78 <sfbpf_print+0x46c>
    1a00:	cmp	r1, #48	; 0x30
    1a04:	beq	1a84 <sfbpf_print+0x478>
    1a08:	ldr	r1, [pc, #724]	; 1ce4 <sfbpf_print+0x6d8>
    1a0c:	add	r1, pc, r1
    1a10:	b	19cc <sfbpf_print+0x3c0>
    1a14:	cmp	r1, #96	; 0x60
    1a18:	beq	1a90 <sfbpf_print+0x484>
    1a1c:	bhi	1a34 <sfbpf_print+0x428>
    1a20:	cmp	r1, #80	; 0x50
    1a24:	beq	1a9c <sfbpf_print+0x490>
    1a28:	ldr	r1, [pc, #696]	; 1ce8 <sfbpf_print+0x6dc>
    1a2c:	add	r1, pc, r1
    1a30:	b	19cc <sfbpf_print+0x3c0>
    1a34:	cmp	r1, #112	; 0x70
    1a38:	beq	1aa8 <sfbpf_print+0x49c>
    1a3c:	cmp	r1, #128	; 0x80
    1a40:	bne	1ab4 <sfbpf_print+0x4a8>
    1a44:	ldr	r0, [pc, #672]	; 1cec <sfbpf_print+0x6e0>
    1a48:	add	r0, pc, r0
    1a4c:	bl	de0 <puts@plt>
    1a50:	b	163c <sfbpf_print+0x30>
    1a54:	ldr	r1, [pc, #660]	; 1cf0 <sfbpf_print+0x6e4>
    1a58:	add	r1, pc, r1
    1a5c:	b	19cc <sfbpf_print+0x3c0>
    1a60:	ldr	r1, [pc, #652]	; 1cf4 <sfbpf_print+0x6e8>
    1a64:	add	r1, pc, r1
    1a68:	b	19cc <sfbpf_print+0x3c0>
    1a6c:	ldr	r1, [pc, #644]	; 1cf8 <sfbpf_print+0x6ec>
    1a70:	add	r1, pc, r1
    1a74:	b	19cc <sfbpf_print+0x3c0>
    1a78:	ldr	r1, [pc, #636]	; 1cfc <sfbpf_print+0x6f0>
    1a7c:	add	r1, pc, r1
    1a80:	b	19cc <sfbpf_print+0x3c0>
    1a84:	ldr	r1, [pc, #628]	; 1d00 <sfbpf_print+0x6f4>
    1a88:	add	r1, pc, r1
    1a8c:	b	19cc <sfbpf_print+0x3c0>
    1a90:	ldr	r1, [pc, #620]	; 1d04 <sfbpf_print+0x6f8>
    1a94:	add	r1, pc, r1
    1a98:	b	19cc <sfbpf_print+0x3c0>
    1a9c:	ldr	r1, [pc, #612]	; 1d08 <sfbpf_print+0x6fc>
    1aa0:	add	r1, pc, r1
    1aa4:	b	19cc <sfbpf_print+0x3c0>
    1aa8:	ldr	r1, [pc, #604]	; 1d0c <sfbpf_print+0x700>
    1aac:	add	r1, pc, r1
    1ab0:	b	19cc <sfbpf_print+0x3c0>
    1ab4:	ldr	r1, [pc, #596]	; 1d10 <sfbpf_print+0x704>
    1ab8:	add	r1, pc, r1
    1abc:	b	19cc <sfbpf_print+0x3c0>
    1ac0:	ldr	r0, [pc, #588]	; 1d14 <sfbpf_print+0x708>
    1ac4:	ldr	r1, [r4, #4]
    1ac8:	add	r0, pc, r0
    1acc:	b	18f0 <sfbpf_print+0x2e4>
    1ad0:	and	r1, r1, #240	; 0xf0
    1ad4:	cmp	r1, #32
    1ad8:	beq	1b58 <sfbpf_print+0x54c>
    1adc:	bhi	1b28 <sfbpf_print+0x51c>
    1ae0:	cmp	r1, #0
    1ae4:	beq	1b44 <sfbpf_print+0x538>
    1ae8:	cmp	r1, #16
    1aec:	beq	1b64 <sfbpf_print+0x558>
    1af0:	ldr	r1, [pc, #544]	; 1d18 <sfbpf_print+0x70c>
    1af4:	add	r1, pc, r1
    1af8:	ldr	r0, [pc, #540]	; 1d1c <sfbpf_print+0x710>
    1afc:	add	r0, pc, r0
    1b00:	bl	d2c <printf@plt>
    1b04:	ldrh	r3, [r6, r5]
    1b08:	ands	r3, r3, #8
    1b0c:	beq	1b88 <sfbpf_print+0x57c>
    1b10:	cmp	r3, #8
    1b14:	beq	1bb8 <sfbpf_print+0x5ac>
    1b18:	ldr	r0, [pc, #512]	; 1d20 <sfbpf_print+0x714>
    1b1c:	add	r0, pc, r0
    1b20:	bl	d2c <printf@plt>
    1b24:	b	1b98 <sfbpf_print+0x58c>
    1b28:	cmp	r1, #48	; 0x30
    1b2c:	beq	1b70 <sfbpf_print+0x564>
    1b30:	cmp	r1, #64	; 0x40
    1b34:	beq	1b7c <sfbpf_print+0x570>
    1b38:	ldr	r1, [pc, #484]	; 1d24 <sfbpf_print+0x718>
    1b3c:	add	r1, pc, r1
    1b40:	b	1af8 <sfbpf_print+0x4ec>
    1b44:	ldr	r0, [pc, #476]	; 1d28 <sfbpf_print+0x71c>
    1b48:	ldr	r1, [r4, #4]
    1b4c:	add	r0, pc, r0
    1b50:	add	r1, r7, r1
    1b54:	b	1988 <sfbpf_print+0x37c>
    1b58:	ldr	r1, [pc, #460]	; 1d2c <sfbpf_print+0x720>
    1b5c:	add	r1, pc, r1
    1b60:	b	1af8 <sfbpf_print+0x4ec>
    1b64:	ldr	r1, [pc, #452]	; 1d30 <sfbpf_print+0x724>
    1b68:	add	r1, pc, r1
    1b6c:	b	1af8 <sfbpf_print+0x4ec>
    1b70:	ldr	r1, [pc, #444]	; 1d34 <sfbpf_print+0x728>
    1b74:	add	r1, pc, r1
    1b78:	b	1af8 <sfbpf_print+0x4ec>
    1b7c:	ldr	r1, [pc, #436]	; 1d38 <sfbpf_print+0x72c>
    1b80:	add	r1, pc, r1
    1b84:	b	1af8 <sfbpf_print+0x4ec>
    1b88:	ldr	r0, [pc, #428]	; 1d3c <sfbpf_print+0x730>
    1b8c:	ldr	r1, [r4, #4]
    1b90:	add	r0, pc, r0
    1b94:	bl	d2c <printf@plt>
    1b98:	ldrb	r2, [r4, #3]
    1b9c:	ldrb	r1, [r4, #2]
    1ba0:	ldr	r0, [pc, #408]	; 1d40 <sfbpf_print+0x734>
    1ba4:	add	r2, r2, r7
    1ba8:	add	r1, r1, r7
    1bac:	add	r0, pc, r0
    1bb0:	bl	d2c <printf@plt>
    1bb4:	b	163c <sfbpf_print+0x30>
    1bb8:	mov	r0, #88	; 0x58
    1bbc:	bl	e64 <putchar@plt>
    1bc0:	b	1b98 <sfbpf_print+0x58c>
    1bc4:	ldr	r0, [pc, #376]	; 1d44 <sfbpf_print+0x738>
    1bc8:	add	r0, pc, r0
    1bcc:	bl	d2c <printf@plt>
    1bd0:	ldrh	r3, [r6, r5]
    1bd4:	and	r3, r3, #24
    1bd8:	cmp	r3, #8
    1bdc:	beq	1c0c <sfbpf_print+0x600>
    1be0:	cmp	r3, #16
    1be4:	beq	1c18 <sfbpf_print+0x60c>
    1be8:	cmp	r3, #0
    1bec:	bne	1c20 <sfbpf_print+0x614>
    1bf0:	ldr	r0, [pc, #336]	; 1d48 <sfbpf_print+0x73c>
    1bf4:	ldr	r1, [r4, #4]
    1bf8:	add	r0, pc, r0
    1bfc:	bl	d2c <printf@plt>
    1c00:	ldr	r0, [pc, #324]	; 1d4c <sfbpf_print+0x740>
    1c04:	add	r0, pc, r0
    1c08:	b	1a4c <sfbpf_print+0x440>
    1c0c:	mov	r0, #88	; 0x58
    1c10:	bl	e64 <putchar@plt>
    1c14:	b	1c00 <sfbpf_print+0x5f4>
    1c18:	mov	r0, #65	; 0x41
    1c1c:	b	1c10 <sfbpf_print+0x604>
    1c20:	ldr	r0, [pc, #296]	; 1d50 <sfbpf_print+0x744>
    1c24:	add	r0, pc, r0
    1c28:	bl	d2c <printf@plt>
    1c2c:	b	1c00 <sfbpf_print+0x5f4>
    1c30:	ldr	r0, [pc, #284]	; 1d54 <sfbpf_print+0x748>
    1c34:	add	r0, pc, r0
    1c38:	bl	d2c <printf@plt>
    1c3c:	ldrh	r3, [r6, r5]
    1c40:	ands	r3, r3, #248	; 0xf8
    1c44:	beq	1c5c <sfbpf_print+0x650>
    1c48:	cmp	r3, #128	; 0x80
    1c4c:	bne	184c <sfbpf_print+0x240>
    1c50:	ldr	r0, [pc, #256]	; 1d58 <sfbpf_print+0x74c>
    1c54:	add	r0, pc, r0
    1c58:	b	1870 <sfbpf_print+0x264>
    1c5c:	ldr	r0, [pc, #248]	; 1d5c <sfbpf_print+0x750>
    1c60:	add	r0, pc, r0
    1c64:	b	1870 <sfbpf_print+0x264>
    1c68:	.word	0x0002badc
    1c6c:	.word	0x0000ddac
    1c70:	.word	0x0000ddb2
    1c74:	.word	0x0002ba84
    1c78:	.word	0x0000de36
    1c7c:	.word	0x0002ba30
    1c80:	.word	0x0000dcf0
    1c84:	.word	0x0000dd07
    1c88:	.word	0x0002b9d4
    1c8c:	.word	0x0000dca5
    1c90:	.word	0x0002b994
    1c94:	.word	0x0000dc65
    1c98:	.word	0x0002b954
    1c9c:	.word	0x0000dc4b
    1ca0:	.word	0x0000dc34
    1ca4:	.word	0x0000dc15
    1ca8:	.word	0x0000db70
    1cac:	.word	0x0000dbe8
    1cb0:	.word	0x0000dba0
    1cb4:	.word	0x0000db6d
    1cb8:	.word	0x0000dd6a
    1cbc:	.word	0x0000db58
    1cc0:	.word	0x0000db52
    1cc4:	.word	0x0000dd1e
    1cc8:	.word	0x0000db11
    1ccc:	.word	0x0000daf0
    1cd0:	.word	0x0000dae4
    1cd4:	.word	0x0000daf5
    1cd8:	.word	0x0000daf2
    1cdc:	.word	0x0000d9f8
    1ce0:	.word	0x0000dad3
    1ce4:	.word	0x0000d9b4
    1ce8:	.word	0x0000d994
    1cec:	.word	0x0000da53
    1cf0:	.word	0x0000d972
    1cf4:	.word	0x0000d970
    1cf8:	.word	0x0000d954
    1cfc:	.word	0x0000d94a
    1d00:	.word	0x0000d940
    1d04:	.word	0x0000d93a
    1d08:	.word	0x0000d92c
    1d0c:	.word	0x0000d925
    1d10:	.word	0x0000d908
    1d14:	.word	0x0000db8e
    1d18:	.word	0x0000d8cc
    1d1c:	.word	0x0000d9c2
    1d20:	.word	0x0000d8a4
    1d24:	.word	0x0000d884
    1d28:	.word	0x0000d968
    1d2c:	.word	0x0000d876
    1d30:	.word	0x0000d86e
    1d34:	.word	0x0000d865
    1d38:	.word	0x0000d84c
    1d3c:	.word	0x0000dac6
    1d40:	.word	0x0000d91e
    1d44:	.word	0x0000d911
    1d48:	.word	0x0000da5e
    1d4c:	.word	0x0000d8e2
    1d50:	.word	0x0000d79c
    1d54:	.word	0x0000d8b9
    1d58:	.word	0x0000d8a6
    1d5c:	.word	0x0000d893

00001d60 <backpatch>:
    1d60:	cmp	r0, #0
    1d64:	bxeq	lr
    1d68:	ldr	r3, [r0, #44]	; 0x2c
    1d6c:	cmp	r3, #0
    1d70:	ldreq	r3, [r0, #60]	; 0x3c
    1d74:	streq	r1, [r0, #60]	; 0x3c
    1d78:	ldrne	r3, [r0, #84]	; 0x54
    1d7c:	strne	r1, [r0, #84]	; 0x54
    1d80:	mov	r0, r3
    1d84:	b	1d60 <backpatch>

00001d88 <ethertype_to_ppptype>:
    1d88:	cmp	r0, #1536	; 0x600
    1d8c:	beq	1de8 <ethertype_to_ppptype+0x60>
    1d90:	bgt	1db0 <ethertype_to_ppptype+0x28>
    1d94:	cmp	r0, #224	; 0xe0
    1d98:	beq	1df0 <ethertype_to_ppptype+0x68>
    1d9c:	cmp	r0, #254	; 0xfe
    1da0:	beq	1df8 <ethertype_to_ppptype+0x70>
    1da4:	cmp	r0, #66	; 0x42
    1da8:	moveq	r0, #49	; 0x31
    1dac:	bx	lr
    1db0:	movw	r3, #24579	; 0x6003
    1db4:	cmp	r0, r3
    1db8:	beq	1e00 <ethertype_to_ppptype+0x78>
    1dbc:	bgt	1dcc <ethertype_to_ppptype+0x44>
    1dc0:	cmp	r0, #2048	; 0x800
    1dc4:	moveq	r0, #33	; 0x21
    1dc8:	bx	lr
    1dcc:	movw	r3, #32923	; 0x809b
    1dd0:	cmp	r0, r3
    1dd4:	beq	1e08 <ethertype_to_ppptype+0x80>
    1dd8:	movw	r3, #34525	; 0x86dd
    1ddc:	cmp	r0, r3
    1de0:	moveq	r0, #87	; 0x57
    1de4:	bx	lr
    1de8:	mov	r0, #37	; 0x25
    1dec:	bx	lr
    1df0:	mov	r0, #43	; 0x2b
    1df4:	bx	lr
    1df8:	mov	r0, #35	; 0x23
    1dfc:	bx	lr
    1e00:	mov	r0, #39	; 0x27
    1e04:	bx	lr
    1e08:	mov	r0, #41	; 0x29
    1e0c:	bx	lr

00001e10 <freechunks>:
    1e10:	push	{r4, r5, r6, lr}
    1e14:	mov	r4, #0
    1e18:	mov	r6, r4
    1e1c:	ldr	r5, [pc, #44]	; 1e50 <freechunks+0x40>
    1e20:	add	r5, pc, r5
    1e24:	str	r4, [r5], #4
    1e28:	ldr	r0, [r5, #4]
    1e2c:	cmp	r0, #0
    1e30:	beq	1e3c <freechunks+0x2c>
    1e34:	bl	d68 <free@plt>
    1e38:	str	r6, [r5, #4]
    1e3c:	add	r4, r4, #1
    1e40:	add	r5, r5, #8
    1e44:	cmp	r4, #16
    1e48:	bne	1e28 <freechunks+0x18>
    1e4c:	pop	{r4, r5, r6, pc}
    1e50:	.word	0x0002b540

00001e54 <sf_bpf_error>:
    1e54:	ldr	r4, [pc, #44]	; 1e88 <sf_bpf_error+0x34>
    1e58:	push	{r0, r1, r2, r3}
    1e5c:	push	{r0, r1, r2, lr}
    1e60:	add	r3, sp, #20
    1e64:	mov	r1, #256	; 0x100
    1e68:	add	r4, pc, r4
    1e6c:	add	r0, r4, #132	; 0x84
    1e70:	ldr	r2, [sp, #16]
    1e74:	str	r3, [sp, #4]
    1e78:	bl	ea0 <vsnprintf@plt>
    1e7c:	mov	r1, #1
    1e80:	add	r0, r4, #392	; 0x188
    1e84:	bl	d50 <longjmp@plt>
    1e88:	.word	0x0002b4f8

00001e8c <newchunk>:
    1e8c:	ldr	r2, [pc, #156]	; 1f30 <newchunk+0xa4>
    1e90:	add	r0, r0, #3
    1e94:	push	{r4, r5, r6, r7, r8, lr}
    1e98:	bic	r6, r0, #3
    1e9c:	add	r2, pc, r2
    1ea0:	mov	r4, r2
    1ea4:	ldr	r5, [r4], #4
    1ea8:	lsl	r3, r5, #3
    1eac:	add	r4, r4, r3
    1eb0:	add	r3, r2, r3
    1eb4:	ldr	r3, [r3, #4]
    1eb8:	cmp	r3, r6
    1ebc:	bcs	1f18 <newchunk+0x8c>
    1ec0:	add	r3, r5, #1
    1ec4:	add	r7, r4, #8
    1ec8:	cmp	r3, #15
    1ecc:	str	r3, [r2]
    1ed0:	ble	1ee0 <newchunk+0x54>
    1ed4:	ldr	r0, [pc, #88]	; 1f34 <newchunk+0xa8>
    1ed8:	add	r0, pc, r0
    1edc:	bl	1e54 <sf_bpf_error>
    1ee0:	mov	r5, #1024	; 0x400
    1ee4:	lsl	r5, r5, r3
    1ee8:	mov	r0, r5
    1eec:	bl	dec <malloc@plt>
    1ef0:	cmp	r0, #0
    1ef4:	str	r0, [r4, #12]
    1ef8:	beq	1ed4 <newchunk+0x48>
    1efc:	mov	r2, r5
    1f00:	mov	r1, #0
    1f04:	bl	e58 <memset@plt>
    1f08:	cmp	r6, r5
    1f0c:	str	r5, [r4, #8]
    1f10:	bhi	1ed4 <newchunk+0x48>
    1f14:	mov	r4, r7
    1f18:	ldr	r0, [r4]
    1f1c:	sub	r6, r0, r6
    1f20:	ldr	r0, [r4, #4]
    1f24:	str	r6, [r4]
    1f28:	add	r0, r0, r6
    1f2c:	pop	{r4, r5, r6, r7, r8, pc}
    1f30:	.word	0x0002b4c4
    1f34:	.word	0x0000d6b2

00001f38 <new_block>:
    1f38:	push	{r4, lr}
    1f3c:	mov	r4, r0
    1f40:	mov	r0, #208	; 0xd0
    1f44:	bl	1e8c <newchunk>
    1f48:	mov	r3, r0
    1f4c:	str	r4, [r0, #8]
    1f50:	str	r0, [r3, #96]	; 0x60
    1f54:	pop	{r4, pc}

00001f58 <new_stmt>:
    1f58:	push	{r4, lr}
    1f5c:	mov	r4, r0
    1f60:	mov	r0, #20
    1f64:	bl	1e8c <newchunk>
    1f68:	str	r4, [r0]
    1f6c:	pop	{r4, pc}

00001f70 <gen_false>:
    1f70:	push	{r4, lr}
    1f74:	mov	r0, #0
    1f78:	bl	1f58 <new_stmt>
    1f7c:	mov	r4, r0
    1f80:	mov	r3, #1
    1f84:	mov	r0, #21
    1f88:	str	r3, [r4, #12]
    1f8c:	bl	1f38 <new_block>
    1f90:	str	r4, [r0, #4]
    1f94:	pop	{r4, pc}

00001f98 <xfer_to_x.isra.0>:
    1f98:	push	{r4, lr}
    1f9c:	mov	r4, r0
    1fa0:	mov	r0, #97	; 0x61
    1fa4:	bl	1f58 <new_stmt>
    1fa8:	ldr	r3, [r4]
    1fac:	str	r3, [r0, #12]
    1fb0:	pop	{r4, pc}

00001fb4 <xfer_to_a.isra.1>:
    1fb4:	push	{r4, lr}
    1fb8:	mov	r4, r0
    1fbc:	mov	r0, #96	; 0x60
    1fc0:	bl	1f58 <new_stmt>
    1fc4:	ldr	r3, [r4]
    1fc8:	str	r3, [r0, #12]
    1fcc:	pop	{r4, pc}

00001fd0 <gen_true>:
    1fd0:	push	{r4, lr}
    1fd4:	mov	r0, #0
    1fd8:	bl	1f58 <new_stmt>
    1fdc:	mov	r4, r0
    1fe0:	mov	r3, #0
    1fe4:	mov	r0, #21
    1fe8:	str	r3, [r4, #12]
    1fec:	bl	1f38 <new_block>
    1ff0:	str	r4, [r0, #4]
    1ff4:	pop	{r4, pc}

00001ff8 <alloc_reg>:
    1ff8:	ldr	r3, [pc, #140]	; 208c <alloc_reg+0x94>
    1ffc:	mov	r2, #17
    2000:	push	{r4, lr}
    2004:	ldr	r1, [pc, #132]	; 2090 <alloc_reg+0x98>
    2008:	add	r3, pc, r3
    200c:	ldr	r0, [r3, #784]	; 0x310
    2010:	mov	r3, #0
    2014:	add	r1, pc, r1
    2018:	subs	r2, r2, #1
    201c:	bne	203c <alloc_reg+0x44>
    2020:	cmp	r3, #0
    2024:	ldrne	r3, [pc, #104]	; 2094 <alloc_reg+0x9c>
    2028:	addne	r3, pc, r3
    202c:	strne	r0, [r3, #784]	; 0x310
    2030:	ldr	r0, [pc, #96]	; 2098 <alloc_reg+0xa0>
    2034:	add	r0, pc, r0
    2038:	bl	1e54 <sf_bpf_error>
    203c:	lsl	ip, r0, #2
    2040:	add	lr, r1, ip
    2044:	ldr	lr, [lr, #788]	; 0x314
    2048:	cmp	lr, #0
    204c:	beq	206c <alloc_reg+0x74>
    2050:	add	r0, r0, #1
    2054:	rsbs	r3, r0, #0
    2058:	and	r0, r0, #15
    205c:	and	r3, r3, #15
    2060:	rsbpl	r0, r3, #0
    2064:	mov	r3, #1
    2068:	b	2018 <alloc_reg+0x20>
    206c:	cmp	r3, #0
    2070:	ldr	r3, [pc, #36]	; 209c <alloc_reg+0xa4>
    2074:	mov	r2, #1
    2078:	strne	r0, [r1, #784]	; 0x310
    207c:	add	r3, pc, r3
    2080:	add	r3, r3, ip
    2084:	str	r2, [r3, #788]	; 0x314
    2088:	pop	{r4, pc}
    208c:	.word	0x0002b358
    2090:	.word	0x0002b34c
    2094:	.word	0x0002b338
    2098:	.word	0x0000d564
    209c:	.word	0x0002b2e4

000020a0 <gen_avs_llprefixlen>:
    20a0:	push	{r4, lr}
    20a4:	ldr	r4, [pc, #48]	; 20dc <gen_avs_llprefixlen+0x3c>
    20a8:	add	r4, pc, r4
    20ac:	ldr	r3, [r4, #852]	; 0x354
    20b0:	cmn	r3, #1
    20b4:	bne	20c0 <gen_avs_llprefixlen+0x20>
    20b8:	bl	1ff8 <alloc_reg>
    20bc:	str	r0, [r4, #852]	; 0x354
    20c0:	mov	r0, #97	; 0x61
    20c4:	bl	1f58 <new_stmt>
    20c8:	ldr	r3, [pc, #16]	; 20e0 <gen_avs_llprefixlen+0x40>
    20cc:	add	r3, pc, r3
    20d0:	ldr	r3, [r3, #852]	; 0x354
    20d4:	str	r3, [r0, #12]
    20d8:	pop	{r4, pc}
    20dc:	.word	0x0002b2b8
    20e0:	.word	0x0002b294

000020e4 <gen_llprefixlen>:
    20e4:	ldr	r3, [pc, #64]	; 212c <gen_llprefixlen+0x48>
    20e8:	add	r3, pc, r3
    20ec:	ldr	r3, [r3, #856]	; 0x358
    20f0:	cmp	r3, #127	; 0x7f
    20f4:	beq	2128 <gen_llprefixlen+0x44>
    20f8:	bgt	210c <gen_llprefixlen+0x28>
    20fc:	cmp	r3, #119	; 0x77
    2100:	beq	2120 <gen_llprefixlen+0x3c>
    2104:	mov	r0, #0
    2108:	bx	lr
    210c:	cmp	r3, #163	; 0xa3
    2110:	beq	2124 <gen_llprefixlen+0x40>
    2114:	cmp	r3, #192	; 0xc0
    2118:	bne	2104 <gen_llprefixlen+0x20>
    211c:	b	20a0 <gen_avs_llprefixlen>
    2120:	b	20a0 <gen_avs_llprefixlen>
    2124:	b	20a0 <gen_avs_llprefixlen>
    2128:	b	20a0 <gen_avs_llprefixlen>
    212c:	.word	0x0002b278

00002130 <gen_off_macpl>:
    2130:	push	{r4, lr}
    2134:	ldr	r4, [pc, #60]	; 2178 <gen_off_macpl+0x48>
    2138:	add	r4, pc, r4
    213c:	ldr	r0, [r4, #860]	; 0x35c
    2140:	cmp	r0, #0
    2144:	popeq	{r4, pc}
    2148:	ldr	r3, [r4, #864]	; 0x360
    214c:	cmn	r3, #1
    2150:	bne	215c <gen_off_macpl+0x2c>
    2154:	bl	1ff8 <alloc_reg>
    2158:	str	r0, [r4, #864]	; 0x360
    215c:	mov	r0, #97	; 0x61
    2160:	bl	1f58 <new_stmt>
    2164:	ldr	r3, [pc, #16]	; 217c <gen_off_macpl+0x4c>
    2168:	add	r3, pc, r3
    216c:	ldr	r3, [r3, #864]	; 0x360
    2170:	str	r3, [r0, #12]
    2174:	pop	{r4, pc}
    2178:	.word	0x0002b228
    217c:	.word	0x0002b1f8

00002180 <lookup_proto>:
    2180:	cmp	r1, #2
    2184:	push	{r4, lr}
    2188:	mov	r4, r0
    218c:	beq	2210 <lookup_proto+0x90>
    2190:	bgt	21ac <lookup_proto+0x2c>
    2194:	cmp	r1, #0
    2198:	beq	2210 <lookup_proto+0x90>
    219c:	cmp	r1, #1
    21a0:	beq	2230 <lookup_proto+0xb0>
    21a4:	mvn	r0, #0
    21a8:	pop	{r4, pc}
    21ac:	cmp	r1, #17
    21b0:	beq	2210 <lookup_proto+0x90>
    21b4:	cmp	r1, #24
    21b8:	bne	21a4 <lookup_proto+0x24>
    21bc:	ldr	r1, [pc, #176]	; 2274 <lookup_proto+0xf4>
    21c0:	add	r1, pc, r1
    21c4:	bl	d14 <strcmp@plt>
    21c8:	cmp	r0, #0
    21cc:	beq	225c <lookup_proto+0xdc>
    21d0:	ldr	r1, [pc, #160]	; 2278 <lookup_proto+0xf8>
    21d4:	mov	r0, r4
    21d8:	add	r1, pc, r1
    21dc:	bl	d14 <strcmp@plt>
    21e0:	cmp	r0, #0
    21e4:	beq	2264 <lookup_proto+0xe4>
    21e8:	ldr	r1, [pc, #140]	; 227c <lookup_proto+0xfc>
    21ec:	mov	r0, r4
    21f0:	add	r1, pc, r1
    21f4:	bl	d14 <strcmp@plt>
    21f8:	cmp	r0, #0
    21fc:	beq	226c <lookup_proto+0xec>
    2200:	ldr	r0, [pc, #120]	; 2280 <lookup_proto+0x100>
    2204:	mov	r1, r4
    2208:	add	r0, pc, r0
    220c:	b	222c <lookup_proto+0xac>
    2210:	mov	r0, r4
    2214:	bl	9a18 <pcap_nametoproto>
    2218:	cmn	r0, #1
    221c:	popne	{r4, pc}
    2220:	ldr	r0, [pc, #92]	; 2284 <lookup_proto+0x104>
    2224:	mov	r1, r4
    2228:	add	r0, pc, r0
    222c:	bl	1e54 <sf_bpf_error>
    2230:	bl	9a30 <pcap_nametoeproto>
    2234:	cmn	r0, #1
    2238:	popne	{r4, pc}
    223c:	mov	r0, r4
    2240:	bl	9a78 <pcap_nametollc>
    2244:	cmn	r0, #1
    2248:	popne	{r4, pc}
    224c:	ldr	r0, [pc, #52]	; 2288 <lookup_proto+0x108>
    2250:	mov	r1, r4
    2254:	add	r0, pc, r0
    2258:	b	222c <lookup_proto+0xac>
    225c:	mov	r0, #130	; 0x82
    2260:	pop	{r4, pc}
    2264:	mov	r0, #131	; 0x83
    2268:	pop	{r4, pc}
    226c:	mov	r0, #129	; 0x81
    2270:	pop	{r4, pc}
    2274:	.word	0x0000d438
    2278:	.word	0x0000d425
    227c:	.word	0x0000d412
    2280:	.word	0x0000d3ff
    2284:	.word	0x0000d3a1
    2288:	.word	0x0000d38b

0000228c <sf_sdup>:
    228c:	push	{r4, r5, r6, lr}
    2290:	mov	r6, r0
    2294:	bl	e1c <strlen@plt>
    2298:	add	r5, r0, #1
    229c:	mov	r4, r0
    22a0:	mov	r0, r5
    22a4:	bl	1e8c <newchunk>
    22a8:	mov	r2, r5
    22ac:	mov	r1, r6
    22b0:	bl	e70 <strncpy@plt>
    22b4:	mov	r2, #0
    22b8:	strb	r2, [r0, r4]
    22bc:	pop	{r4, r5, r6, pc}

000022c0 <sfbpf_compile>:
    22c0:	push	{r4, r5, r6, lr}
    22c4:	sub	sp, sp, #24
    22c8:	str	r1, [sp]
    22cc:	mov	r1, #0
    22d0:	str	r2, [sp, #12]
    22d4:	ldr	r2, [pc, #2200]	; 2b74 <sfbpf_compile+0x8b4>
    22d8:	str	r3, [sp, #16]
    22dc:	ldr	r3, [pc, #2196]	; 2b78 <sfbpf_compile+0x8b8>
    22e0:	str	r0, [sp, #8]
    22e4:	ldr	r4, [pc, #2192]	; 2b7c <sfbpf_compile+0x8bc>
    22e8:	add	r2, pc, r2
    22ec:	str	r2, [sp, #4]
    22f0:	ldr	r3, [r2, r3]
    22f4:	add	r4, pc, r4
    22f8:	add	r0, r4, #788	; 0x314
    22fc:	str	r1, [r3]
    2300:	ldr	r3, [pc, #2168]	; 2b80 <sfbpf_compile+0x8c0>
    2304:	ldr	r3, [r2, r3]
    2308:	mov	r2, #64	; 0x40
    230c:	str	r1, [r4, #784]	; 0x310
    2310:	str	r1, [r4, #868]	; 0x364
    2314:	str	r1, [r3]
    2318:	bl	e58 <memset@plt>
    231c:	add	r0, r4, #392	; 0x188
    2320:	bl	d5c <_setjmp@plt>
    2324:	cmp	r0, #0
    2328:	beq	2364 <sfbpf_compile+0xa4>
    232c:	ldr	r4, [pc, #2128]	; 2b84 <sfbpf_compile+0x8c4>
    2330:	add	r4, pc, r4
    2334:	ldr	r0, [r4, #872]	; 0x368
    2338:	cmp	r0, #0
    233c:	beq	234c <sfbpf_compile+0x8c>
    2340:	bl	eac <freeaddrinfo@plt>
    2344:	mov	r3, #0
    2348:	str	r3, [r4, #872]	; 0x368
    234c:	bl	f380 <sf_lex_cleanup>
    2350:	bl	1e10 <freechunks>
    2354:	mvn	r4, #0
    2358:	mov	r0, r4
    235c:	add	sp, sp, #24
    2360:	pop	{r4, r5, r6, pc}
    2364:	ldr	r0, [pc, #2076]	; 2b88 <sfbpf_compile+0x8c8>
    2368:	ldr	r3, [sp, #44]	; 0x2c
    236c:	add	r0, pc, r0
    2370:	str	r3, [r0, #876]	; 0x36c
    2374:	ldr	r3, [sp, #8]
    2378:	cmp	r3, #0
    237c:	str	r3, [r0, #880]	; 0x370
    2380:	bne	2398 <sfbpf_compile+0xd8>
    2384:	ldr	r1, [pc, #2048]	; 2b8c <sfbpf_compile+0x8cc>
    2388:	add	r0, r0, #132	; 0x84
    238c:	add	r1, pc, r1
    2390:	bl	dc8 <strcpy@plt>
    2394:	b	2354 <sfbpf_compile+0x94>
    2398:	ldr	r3, [sp, #16]
    239c:	cmp	r3, #0
    23a0:	ldrne	r0, [sp, #16]
    23a4:	ldreq	r0, [pc, #2020]	; 2b90 <sfbpf_compile+0x8d0>
    23a8:	addeq	r0, pc, r0
    23ac:	bl	f364 <sf_lex_init>
    23b0:	ldr	r3, [pc, #2012]	; 2b94 <sfbpf_compile+0x8d4>
    23b4:	mov	r1, #0
    23b8:	ldr	r0, [pc, #2008]	; 2b98 <sfbpf_compile+0x8d8>
    23bc:	ldr	r2, [sp]
    23c0:	add	r3, pc, r3
    23c4:	add	r0, pc, r0
    23c8:	str	r2, [r3, #856]	; 0x358
    23cc:	mvn	r2, #0
    23d0:	str	r2, [r0]
    23d4:	str	r1, [r0, #4]
    23d8:	ldr	r0, [sp]
    23dc:	str	r2, [r3, #852]	; 0x354
    23e0:	str	r1, [r3, #860]	; 0x35c
    23e4:	str	r2, [r3, #864]	; 0x360
    23e8:	str	r1, [r3, #884]	; 0x374
    23ec:	cmp	r0, #139	; 0x8b
    23f0:	str	r1, [r3, #888]	; 0x378
    23f4:	str	r1, [r3, #892]	; 0x37c
    23f8:	str	r2, [r3, #896]	; 0x380
    23fc:	str	r2, [r3, #900]	; 0x384
    2400:	str	r2, [r3, #904]	; 0x388
    2404:	str	r2, [r3, #908]	; 0x38c
    2408:	str	r1, [r3, #912]	; 0x390
    240c:	str	r2, [r3, #916]	; 0x394
    2410:	str	r2, [r3, #920]	; 0x398
    2414:	str	r2, [r3, #924]	; 0x39c
    2418:	str	r2, [r3, #928]	; 0x3a0
    241c:	str	r2, [r3, #932]	; 0x3a4
    2420:	str	r1, [r3, #936]	; 0x3a8
    2424:	str	r1, [r3, #940]	; 0x3ac
    2428:	beq	2a48 <sfbpf_compile+0x788>
    242c:	bgt	263c <sfbpf_compile+0x37c>
    2430:	cmp	r0, #107	; 0x6b
    2434:	beq	285c <sfbpf_compile+0x59c>
    2438:	bgt	2568 <sfbpf_compile+0x2a8>
    243c:	cmp	r0, #12
    2440:	beq	285c <sfbpf_compile+0x59c>
    2444:	bgt	24bc <sfbpf_compile+0x1fc>
    2448:	cmp	r0, #7
    244c:	beq	2874 <sfbpf_compile+0x5b4>
    2450:	bgt	248c <sfbpf_compile+0x1cc>
    2454:	cmp	r0, #1
    2458:	beq	28c4 <sfbpf_compile+0x604>
    245c:	cmp	r0, #6
    2460:	beq	2948 <sfbpf_compile+0x688>
    2464:	cmp	r0, r1
    2468:	bne	24ac <sfbpf_compile+0x1ec>
    246c:	ldr	r3, [pc, #1832]	; 2b9c <sfbpf_compile+0x8dc>
    2470:	mov	r2, #0
    2474:	mov	r1, #4
    2478:	add	r3, pc, r3
    247c:	str	r1, [r3, #940]	; 0x3ac
    2480:	str	r2, [r3, #944]	; 0x3b0
    2484:	str	r2, [r3, #948]	; 0x3b4
    2488:	b	28dc <sfbpf_compile+0x61c>
    248c:	ldr	r3, [sp]
    2490:	cmp	r3, #9
    2494:	beq	2908 <sfbpf_compile+0x648>
    2498:	blt	28e4 <sfbpf_compile+0x624>
    249c:	cmp	r3, #10
    24a0:	beq	2930 <sfbpf_compile+0x670>
    24a4:	cmp	r3, #11
    24a8:	beq	2958 <sfbpf_compile+0x698>
    24ac:	ldr	r0, [pc, #1772]	; 2ba0 <sfbpf_compile+0x8e0>
    24b0:	ldr	r1, [sp]
    24b4:	add	r0, pc, r0
    24b8:	bl	1e54 <sf_bpf_error>
    24bc:	ldr	r2, [sp]
    24c0:	cmp	r2, #50	; 0x32
    24c4:	beq	2908 <sfbpf_compile+0x648>
    24c8:	bgt	2500 <sfbpf_compile+0x240>
    24cc:	cmp	r2, #16
    24d0:	beq	2920 <sfbpf_compile+0x660>
    24d4:	cmp	r2, #19
    24d8:	beq	2958 <sfbpf_compile+0x698>
    24dc:	cmp	r2, #15
    24e0:	bne	24ac <sfbpf_compile+0x1ec>
    24e4:	ldr	r3, [pc, #1720]	; 2ba4 <sfbpf_compile+0x8e4>
    24e8:	mvn	r2, #0
    24ec:	add	r3, pc, r3
    24f0:	str	r2, [r3, #944]	; 0x3b0
    24f4:	mov	r2, #24
    24f8:	str	r2, [r3, #940]	; 0x3ac
    24fc:	b	286c <sfbpf_compile+0x5ac>
    2500:	ldr	r2, [sp]
    2504:	cmp	r2, #99	; 0x63
    2508:	beq	29bc <sfbpf_compile+0x6fc>
    250c:	bgt	2530 <sfbpf_compile+0x270>
    2510:	cmp	r2, #51	; 0x33
    2514:	bne	24ac <sfbpf_compile+0x1ec>
    2518:	ldr	r3, [pc, #1672]	; 2ba8 <sfbpf_compile+0x8e8>
    251c:	mov	r2, #6
    2520:	add	r3, pc, r3
    2524:	str	r2, [r3, #944]	; 0x3b0
    2528:	mov	r2, #8
    252c:	b	24f8 <sfbpf_compile+0x238>
    2530:	ldr	r3, [sp]
    2534:	cmp	r3, #104	; 0x68
    2538:	beq	2908 <sfbpf_compile+0x648>
    253c:	cmp	r3, #105	; 0x69
    2540:	bne	24ac <sfbpf_compile+0x1ec>
    2544:	ldr	r3, [pc, #1632]	; 2bac <sfbpf_compile+0x8ec>
    2548:	mov	r2, #24
    254c:	add	r3, pc, r3
    2550:	str	r2, [r3, #944]	; 0x3b0
    2554:	mov	r2, #1
    2558:	str	r2, [r3, #860]	; 0x35c
    255c:	mov	r2, #8
    2560:	str	r2, [r3, #948]	; 0x3b4
    2564:	b	28d8 <sfbpf_compile+0x618>
    2568:	ldr	r0, [sp]
    256c:	cmp	r0, #129	; 0x81
    2570:	beq	28b4 <sfbpf_compile+0x5f4>
    2574:	bgt	25d4 <sfbpf_compile+0x314>
    2578:	cmp	r0, #114	; 0x72
    257c:	beq	285c <sfbpf_compile+0x59c>
    2580:	bgt	25a8 <sfbpf_compile+0x2e8>
    2584:	cmp	r0, #109	; 0x6d
    2588:	beq	28fc <sfbpf_compile+0x63c>
    258c:	blt	246c <sfbpf_compile+0x1ac>
    2590:	cmp	r0, #113	; 0x71
    2594:	bne	24ac <sfbpf_compile+0x1ec>
    2598:	ldr	r3, [pc, #1552]	; 2bb0 <sfbpf_compile+0x8f0>
    259c:	mov	r2, #14
    25a0:	add	r3, pc, r3
    25a4:	b	28f0 <sfbpf_compile+0x630>
    25a8:	ldr	r2, [sp]
    25ac:	cmp	r2, #122	; 0x7a
    25b0:	beq	29a4 <sfbpf_compile+0x6e4>
    25b4:	bgt	25c0 <sfbpf_compile+0x300>
    25b8:	cmp	r2, #119	; 0x77
    25bc:	b	2540 <sfbpf_compile+0x280>
    25c0:	ldr	r3, [sp]
    25c4:	cmp	r3, #123	; 0x7b
    25c8:	beq	296c <sfbpf_compile+0x6ac>
    25cc:	cmp	r3, #127	; 0x7f
    25d0:	b	2540 <sfbpf_compile+0x280>
    25d4:	ldr	r1, [sp]
    25d8:	cmp	r1, #134	; 0x86
    25dc:	beq	25f0 <sfbpf_compile+0x330>
    25e0:	bgt	2604 <sfbpf_compile+0x344>
    25e4:	cmp	r1, #132	; 0x84
    25e8:	beq	2a18 <sfbpf_compile+0x758>
    25ec:	bgt	2a00 <sfbpf_compile+0x740>
    25f0:	ldr	r3, [pc, #1468]	; 2bb4 <sfbpf_compile+0x8f4>
    25f4:	mov	r2, #4
    25f8:	add	r3, pc, r3
    25fc:	str	r2, [r3, #944]	; 0x3b0
    2600:	b	26fc <sfbpf_compile+0x43c>
    2604:	ldr	r1, [sp]
    2608:	cmp	r1, #136	; 0x88
    260c:	beq	2a28 <sfbpf_compile+0x768>
    2610:	blt	29f0 <sfbpf_compile+0x730>
    2614:	cmp	r1, #137	; 0x89
    2618:	beq	29cc <sfbpf_compile+0x70c>
    261c:	cmp	r1, #138	; 0x8a
    2620:	bne	24ac <sfbpf_compile+0x1ec>
    2624:	ldr	r3, [pc, #1420]	; 2bb8 <sfbpf_compile+0x8f8>
    2628:	mov	r2, #16
    262c:	add	r3, pc, r3
    2630:	str	r2, [r3, #944]	; 0x3b0
    2634:	mov	r2, #18
    2638:	b	24f8 <sfbpf_compile+0x238>
    263c:	ldr	r0, [sp]
    2640:	cmp	r0, #191	; 0xbf
    2644:	beq	277c <sfbpf_compile+0x4bc>
    2648:	bgt	279c <sfbpf_compile+0x4dc>
    264c:	cmp	r0, #177	; 0xb1
    2650:	beq	277c <sfbpf_compile+0x4bc>
    2654:	bgt	2710 <sfbpf_compile+0x450>
    2658:	cmp	r0, #163	; 0xa3
    265c:	beq	2544 <sfbpf_compile+0x284>
    2660:	bgt	26ac <sfbpf_compile+0x3ec>
    2664:	cmp	r0, #143	; 0x8f
    2668:	beq	29ac <sfbpf_compile+0x6ec>
    266c:	cmp	r0, #144	; 0x90
    2670:	beq	29ac <sfbpf_compile+0x6ec>
    2674:	cmp	r0, #140	; 0x8c
    2678:	bne	24ac <sfbpf_compile+0x1ec>
    267c:	ldr	r3, [pc, #1336]	; 2bbc <sfbpf_compile+0x8fc>
    2680:	mov	r2, #2
    2684:	add	r3, pc, r3
    2688:	str	r2, [r3, #916]	; 0x394
    268c:	mov	r2, #3
    2690:	str	r2, [r3, #920]	; 0x398
    2694:	mov	r2, #4
    2698:	str	r2, [r3, #924]	; 0x39c
    269c:	str	r2, [r3, #928]	; 0x3a0
    26a0:	mov	r2, #7
    26a4:	str	r2, [r3, #932]	; 0x3a4
    26a8:	b	29b4 <sfbpf_compile+0x6f4>
    26ac:	ldr	r3, [sp]
    26b0:	cmp	r3, #166	; 0xa6
    26b4:	beq	2908 <sfbpf_compile+0x648>
    26b8:	bgt	26d4 <sfbpf_compile+0x414>
    26bc:	cmp	r3, #164	; 0xa4
    26c0:	bne	24ac <sfbpf_compile+0x1ec>
    26c4:	ldr	r3, [pc, #1268]	; 2bc0 <sfbpf_compile+0x900>
    26c8:	mov	r2, #12
    26cc:	add	r3, pc, r3
    26d0:	b	25fc <sfbpf_compile+0x33c>
    26d4:	ldr	r3, [sp]
    26d8:	cmp	r3, #167	; 0xa7
    26dc:	beq	273c <sfbpf_compile+0x47c>
    26e0:	cmp	r3, #168	; 0xa8
    26e4:	bne	24ac <sfbpf_compile+0x1ec>
    26e8:	ldr	r3, [pc, #1236]	; 2bc4 <sfbpf_compile+0x904>
    26ec:	mov	r2, #4
    26f0:	add	r3, pc, r3
    26f4:	str	r2, [r3, #944]	; 0x3b0
    26f8:	mov	r2, #6
    26fc:	str	r2, [r3, #940]	; 0x3ac
    2700:	mov	r2, #0
    2704:	str	r2, [r3, #948]	; 0x3b4
    2708:	mvn	r2, #0
    270c:	b	28dc <sfbpf_compile+0x61c>
    2710:	ldr	r0, [sp]
    2714:	cmp	r0, #183	; 0xb7
    2718:	beq	2a30 <sfbpf_compile+0x770>
    271c:	bgt	2764 <sfbpf_compile+0x4a4>
    2720:	cmp	r0, #181	; 0xb5
    2724:	strgt	r2, [r3, #944]	; 0x3b0
    2728:	movgt	r2, #4
    272c:	strgt	r2, [r3, #948]	; 0x3b4
    2730:	bgt	2888 <sfbpf_compile+0x5c8>
    2734:	cmp	r0, #179	; 0xb3
    2738:	bge	25f0 <sfbpf_compile+0x330>
    273c:	ldr	r3, [pc, #1156]	; 2bc8 <sfbpf_compile+0x908>
    2740:	mov	r2, #14
    2744:	add	r3, pc, r3
    2748:	str	r2, [r3, #940]	; 0x3ac
    274c:	mov	r2, #16
    2750:	str	r2, [r3, #944]	; 0x3b0
    2754:	mov	r2, #18
    2758:	str	r2, [r3, #948]	; 0x3b4
    275c:	mov	r2, #21
    2760:	b	28dc <sfbpf_compile+0x61c>
    2764:	ldr	r3, [sp]
    2768:	cmp	r3, #187	; 0xbb
    276c:	beq	277c <sfbpf_compile+0x4bc>
    2770:	bgt	2788 <sfbpf_compile+0x4c8>
    2774:	cmp	r3, #186	; 0xba
    2778:	bne	24ac <sfbpf_compile+0x1ec>
    277c:	ldr	r3, [pc, #1096]	; 2bcc <sfbpf_compile+0x90c>
    2780:	add	r3, pc, r3
    2784:	b	29b4 <sfbpf_compile+0x6f4>
    2788:	ldr	r3, [sp]
    278c:	cmp	r3, #189	; 0xbd
    2790:	beq	277c <sfbpf_compile+0x4bc>
    2794:	cmp	r3, #190	; 0xbe
    2798:	b	2778 <sfbpf_compile+0x4b8>
    279c:	ldr	r1, [sp]
    27a0:	cmp	r1, #200	; 0xc8
    27a4:	beq	2a30 <sfbpf_compile+0x770>
    27a8:	bgt	27f4 <sfbpf_compile+0x534>
    27ac:	cmp	r1, #195	; 0xc3
    27b0:	beq	277c <sfbpf_compile+0x4bc>
    27b4:	bgt	27d4 <sfbpf_compile+0x514>
    27b8:	cmp	r1, #193	; 0xc1
    27bc:	beq	277c <sfbpf_compile+0x4bc>
    27c0:	ble	2544 <sfbpf_compile+0x284>
    27c4:	ldr	r3, [pc, #1028]	; 2bd0 <sfbpf_compile+0x910>
    27c8:	mov	r2, #8
    27cc:	add	r3, pc, r3
    27d0:	b	2a3c <sfbpf_compile+0x77c>
    27d4:	ldr	r1, [sp]
    27d8:	cmp	r1, #197	; 0xc5
    27dc:	beq	2a74 <sfbpf_compile+0x7b4>
    27e0:	blt	277c <sfbpf_compile+0x4bc>
    27e4:	cmp	r1, #198	; 0xc6
    27e8:	beq	277c <sfbpf_compile+0x4bc>
    27ec:	cmp	r1, #199	; 0xc7
    27f0:	b	2778 <sfbpf_compile+0x4b8>
    27f4:	ldr	r1, [sp]
    27f8:	cmp	r1, #220	; 0xdc
    27fc:	beq	277c <sfbpf_compile+0x4bc>
    2800:	bgt	2820 <sfbpf_compile+0x560>
    2804:	cmp	r1, #202	; 0xca
    2808:	beq	2a98 <sfbpf_compile+0x7d8>
    280c:	blt	277c <sfbpf_compile+0x4bc>
    2810:	cmp	r1, #215	; 0xd7
    2814:	beq	277c <sfbpf_compile+0x4bc>
    2818:	cmp	r1, #219	; 0xdb
    281c:	b	2778 <sfbpf_compile+0x4b8>
    2820:	ldr	r3, [sp]
    2824:	cmp	r3, #227	; 0xe3
    2828:	beq	277c <sfbpf_compile+0x4bc>
    282c:	bgt	2850 <sfbpf_compile+0x590>
    2830:	cmp	r3, #226	; 0xe2
    2834:	bne	24ac <sfbpf_compile+0x1ec>
    2838:	ldr	r3, [pc, #916]	; 2bd4 <sfbpf_compile+0x914>
    283c:	mov	r2, #1
    2840:	add	r3, pc, r3
    2844:	str	r2, [r3, #944]	; 0x3b0
    2848:	mov	r2, #24
    284c:	b	26fc <sfbpf_compile+0x43c>
    2850:	ldr	r3, [sp]
    2854:	cmp	r3, #229	; 0xe5
    2858:	bgt	24ac <sfbpf_compile+0x1ec>
    285c:	ldr	r3, [pc, #884]	; 2bd8 <sfbpf_compile+0x918>
    2860:	mvn	r2, #0
    2864:	add	r3, pc, r3
    2868:	str	r2, [r3, #944]	; 0x3b0
    286c:	mov	r2, #0
    2870:	b	2484 <sfbpf_compile+0x1c4>
    2874:	mov	r2, #2
    2878:	str	r2, [r3, #944]	; 0x3b0
    287c:	mov	r2, #6
    2880:	str	r2, [r3, #940]	; 0x3ac
    2884:	str	r1, [r3, #948]	; 0x3b4
    2888:	str	r1, [r3, #952]	; 0x3b8
    288c:	bl	c44c <sfbpf_parse>
    2890:	ldr	r3, [pc, #744]	; 2b80 <sfbpf_compile+0x8c0>
    2894:	ldr	r2, [sp, #4]
    2898:	ldr	r3, [r2, r3]
    289c:	ldr	r4, [r3]
    28a0:	cmp	r4, #0
    28a4:	beq	2ab4 <sfbpf_compile+0x7f4>
    28a8:	ldr	r0, [pc, #812]	; 2bdc <sfbpf_compile+0x91c>
    28ac:	add	r0, pc, r0
    28b0:	bl	1e54 <sf_bpf_error>
    28b4:	mov	r2, #4
    28b8:	str	r2, [r3, #944]	; 0x3b0
    28bc:	mov	r2, #8
    28c0:	b	2880 <sfbpf_compile+0x5c0>
    28c4:	mov	r2, #12
    28c8:	str	r2, [r3, #944]	; 0x3b0
    28cc:	mov	r2, #14
    28d0:	str	r1, [r3, #948]	; 0x3b4
    28d4:	str	r2, [r3, #940]	; 0x3ac
    28d8:	mov	r2, #3
    28dc:	str	r2, [r3, #952]	; 0x3b8
    28e0:	b	288c <sfbpf_compile+0x5cc>
    28e4:	ldr	r3, [pc, #756]	; 2be0 <sfbpf_compile+0x920>
    28e8:	mvn	r2, #0
    28ec:	add	r3, pc, r3
    28f0:	str	r2, [r3, #944]	; 0x3b0
    28f4:	mov	r2, #16
    28f8:	b	24f8 <sfbpf_compile+0x238>
    28fc:	mov	r2, #12
    2900:	str	r1, [r3, #944]	; 0x3b0
    2904:	b	2880 <sfbpf_compile+0x5c0>
    2908:	ldr	r3, [pc, #724]	; 2be4 <sfbpf_compile+0x924>
    290c:	mov	r2, #2
    2910:	add	r3, pc, r3
    2914:	str	r2, [r3, #944]	; 0x3b0
    2918:	mov	r2, #4
    291c:	b	24f8 <sfbpf_compile+0x238>
    2920:	mov	r2, #5
    2924:	str	r2, [r3, #944]	; 0x3b0
    2928:	mov	r2, #24
    292c:	b	2880 <sfbpf_compile+0x5c0>
    2930:	ldr	r3, [pc, #688]	; 2be8 <sfbpf_compile+0x928>
    2934:	mov	r2, #13
    2938:	add	r3, pc, r3
    293c:	str	r2, [r3, #940]	; 0x3ac
    2940:	str	r2, [r3, #944]	; 0x3b0
    2944:	b	255c <sfbpf_compile+0x29c>
    2948:	ldr	r3, [pc, #668]	; 2bec <sfbpf_compile+0x92c>
    294c:	mov	r2, #14
    2950:	add	r3, pc, r3
    2954:	b	293c <sfbpf_compile+0x67c>
    2958:	ldr	r3, [pc, #656]	; 2bf0 <sfbpf_compile+0x930>
    295c:	mov	r2, #0
    2960:	add	r3, pc, r3
    2964:	str	r2, [r3, #944]	; 0x3b0
    2968:	b	255c <sfbpf_compile+0x29c>
    296c:	ldr	r3, [pc, #640]	; 2bf4 <sfbpf_compile+0x934>
    2970:	mov	r2, #1
    2974:	add	r3, pc, r3
    2978:	str	r2, [r3, #888]	; 0x378
    297c:	str	r2, [r3, #896]	; 0x380
    2980:	mov	r2, #2
    2984:	str	r2, [r3, #900]	; 0x384
    2988:	mov	r2, #0
    298c:	str	r2, [r3, #904]	; 0x388
    2990:	mvn	r2, #0
    2994:	str	r2, [r3, #884]	; 0x374
    2998:	mov	r2, #4
    299c:	str	r2, [r3, #908]	; 0x38c
    29a0:	b	293c <sfbpf_compile+0x67c>
    29a4:	mov	r2, #16
    29a8:	b	293c <sfbpf_compile+0x67c>
    29ac:	ldr	r3, [pc, #580]	; 2bf8 <sfbpf_compile+0x938>
    29b0:	add	r3, pc, r3
    29b4:	mvn	r2, #0
    29b8:	b	2a6c <sfbpf_compile+0x7ac>
    29bc:	mov	r2, #6
    29c0:	str	r2, [r3, #944]	; 0x3b0
    29c4:	mov	r2, #44	; 0x2c
    29c8:	b	2880 <sfbpf_compile+0x5c0>
    29cc:	ldr	r3, [pc, #552]	; 2bfc <sfbpf_compile+0x93c>
    29d0:	mov	r2, #4
    29d4:	add	r3, pc, r3
    29d8:	str	r2, [r3, #940]	; 0x3ac
    29dc:	str	r2, [r3, #944]	; 0x3b0
    29e0:	mov	r2, #0
    29e4:	str	r2, [r3, #948]	; 0x3b4
    29e8:	mov	r2, #10
    29ec:	b	28dc <sfbpf_compile+0x61c>
    29f0:	ldr	r3, [pc, #520]	; 2c00 <sfbpf_compile+0x940>
    29f4:	mov	r2, #8
    29f8:	add	r3, pc, r3
    29fc:	b	29d8 <sfbpf_compile+0x718>
    2a00:	ldr	r3, [pc, #508]	; 2c04 <sfbpf_compile+0x944>
    2a04:	mov	r2, #6
    2a08:	add	r3, pc, r3
    2a0c:	str	r2, [r3, #944]	; 0x3b0
    2a10:	mov	r2, #12
    2a14:	b	26fc <sfbpf_compile+0x43c>
    2a18:	mov	r1, #6
    2a1c:	str	r1, [r3, #944]	; 0x3b0
    2a20:	str	r2, [r3, #940]	; 0x3ac
    2a24:	b	2484 <sfbpf_compile+0x1c4>
    2a28:	mov	r1, #12
    2a2c:	b	2a1c <sfbpf_compile+0x75c>
    2a30:	ldr	r3, [pc, #464]	; 2c08 <sfbpf_compile+0x948>
    2a34:	mov	r2, #18
    2a38:	add	r3, pc, r3
    2a3c:	str	r2, [r3, #944]	; 0x3b0
    2a40:	mvn	r2, #0
    2a44:	b	2a20 <sfbpf_compile+0x760>
    2a48:	mov	r1, #6
    2a4c:	str	r1, [r3, #916]	; 0x394
    2a50:	mov	r1, #7
    2a54:	str	r1, [r3, #920]	; 0x398
    2a58:	mov	r1, #8
    2a5c:	str	r1, [r3, #924]	; 0x39c
    2a60:	str	r1, [r3, #928]	; 0x3a0
    2a64:	mov	r1, #11
    2a68:	str	r1, [r3, #932]	; 0x3a4
    2a6c:	str	r2, [r3, #944]	; 0x3b0
    2a70:	b	2a20 <sfbpf_compile+0x760>
    2a74:	mov	r1, #22
    2a78:	str	r1, [r3, #916]	; 0x394
    2a7c:	mov	r1, #23
    2a80:	str	r1, [r3, #920]	; 0x398
    2a84:	mov	r1, #24
    2a88:	str	r1, [r3, #924]	; 0x39c
    2a8c:	str	r1, [r3, #928]	; 0x3a0
    2a90:	mov	r1, #27
    2a94:	b	2a68 <sfbpf_compile+0x7a8>
    2a98:	str	r2, [r3, #940]	; 0x3ac
    2a9c:	str	r2, [r3, #944]	; 0x3b0
    2aa0:	str	r2, [r3, #948]	; 0x3b4
    2aa4:	str	r2, [r3, #952]	; 0x3b8
    2aa8:	mov	r2, #1
    2aac:	str	r2, [r3, #884]	; 0x374
    2ab0:	b	288c <sfbpf_compile+0x5cc>
    2ab4:	ldr	r5, [pc, #336]	; 2c0c <sfbpf_compile+0x94c>
    2ab8:	add	r5, pc, r5
    2abc:	ldr	r3, [r5, #868]	; 0x364
    2ac0:	cmp	r3, #0
    2ac4:	bne	2adc <sfbpf_compile+0x81c>
    2ac8:	ldr	r6, [r5, #880]	; 0x370
    2acc:	mov	r0, #6
    2ad0:	bl	1f38 <new_block>
    2ad4:	str	r0, [r5, #868]	; 0x364
    2ad8:	str	r6, [r0, #20]
    2adc:	ldr	r3, [sp, #40]	; 0x28
    2ae0:	cmp	r3, #0
    2ae4:	beq	2b40 <sfbpf_compile+0x880>
    2ae8:	ldr	r3, [pc, #136]	; 2b78 <sfbpf_compile+0x8b8>
    2aec:	ldr	r2, [sp, #4]
    2af0:	ldr	r3, [r2, r3]
    2af4:	ldr	r3, [r3]
    2af8:	cmp	r3, #0
    2afc:	bne	2b40 <sfbpf_compile+0x880>
    2b00:	ldr	r5, [pc, #264]	; 2c10 <sfbpf_compile+0x950>
    2b04:	add	r5, pc, r5
    2b08:	add	r0, r5, #868	; 0x364
    2b0c:	bl	bbbc <sf_bpf_optimize>
    2b10:	ldr	r3, [r5, #868]	; 0x364
    2b14:	cmp	r3, #0
    2b18:	beq	2b34 <sfbpf_compile+0x874>
    2b1c:	ldr	r2, [r3, #8]
    2b20:	cmp	r2, #6
    2b24:	bne	2b40 <sfbpf_compile+0x880>
    2b28:	ldr	r3, [r3, #20]
    2b2c:	cmp	r3, #0
    2b30:	bne	2b40 <sfbpf_compile+0x880>
    2b34:	ldr	r0, [pc, #216]	; 2c14 <sfbpf_compile+0x954>
    2b38:	add	r0, pc, r0
    2b3c:	b	28b0 <sfbpf_compile+0x5f0>
    2b40:	ldr	r3, [pc, #208]	; 2c18 <sfbpf_compile+0x958>
    2b44:	add	r1, sp, #20
    2b48:	add	r3, pc, r3
    2b4c:	ldr	r0, [r3, #868]	; 0x364
    2b50:	bl	c110 <sf_icode_to_fcode>
    2b54:	ldr	r3, [sp, #12]
    2b58:	ldr	r2, [sp, #12]
    2b5c:	str	r0, [r3, #4]
    2b60:	ldr	r3, [sp, #20]
    2b64:	str	r3, [r2]
    2b68:	bl	f380 <sf_lex_cleanup>
    2b6c:	bl	1e10 <freechunks>
    2b70:	b	2358 <sfbpf_compile+0x98>
    2b74:	.word	0x0002ad10
    2b78:	.word	0x00000100
    2b7c:	.word	0x0002b06c
    2b80:	.word	0x000000d8
    2b84:	.word	0x0002b030
    2b88:	.word	0x0002aff4
    2b8c:	.word	0x0000d292
    2b90:	.word	0x0000d10b
    2b94:	.word	0x0002afa0
    2b98:	.word	0x0002aeb0
    2b9c:	.word	0x0002aee8
    2ba0:	.word	0x0000d18b
    2ba4:	.word	0x0002ae74
    2ba8:	.word	0x0002ae40
    2bac:	.word	0x0002ae14
    2bb0:	.word	0x0002adc0
    2bb4:	.word	0x0002ad68
    2bb8:	.word	0x0002ad34
    2bbc:	.word	0x0002acdc
    2bc0:	.word	0x0002ac94
    2bc4:	.word	0x0002ac70
    2bc8:	.word	0x0002ac1c
    2bcc:	.word	0x0002abe0
    2bd0:	.word	0x0002ab94
    2bd4:	.word	0x0002ab20
    2bd8:	.word	0x0002aafc
    2bdc:	.word	0x0000cdad
    2be0:	.word	0x0002aa74
    2be4:	.word	0x0002aa50
    2be8:	.word	0x0002aa28
    2bec:	.word	0x0002aa10
    2bf0:	.word	0x0002aa00
    2bf4:	.word	0x0002a9ec
    2bf8:	.word	0x0002a9b0
    2bfc:	.word	0x0002a98c
    2c00:	.word	0x0002a968
    2c04:	.word	0x0002a958
    2c08:	.word	0x0002a928
    2c0c:	.word	0x0002a8a8
    2c10:	.word	0x0002a85c
    2c14:	.word	0x0000cb43
    2c18:	.word	0x0002a818

00002c1c <sfbpf_freecode>:
    2c1c:	push	{r4, r5, r6, lr}
    2c20:	mov	r5, #0
    2c24:	ldr	r3, [r0, #4]
    2c28:	str	r5, [r0]
    2c2c:	cmp	r3, r5
    2c30:	popeq	{r4, r5, r6, pc}
    2c34:	mov	r4, r0
    2c38:	mov	r0, r3
    2c3c:	bl	d68 <free@plt>
    2c40:	str	r5, [r4, #4]
    2c44:	pop	{r4, r5, r6, pc}

00002c48 <sf_gen_and>:
    2c48:	push	{r0, r1, r4, lr}
    2c4c:	mov	r2, r1
    2c50:	mov	r4, r0
    2c54:	ldr	r1, [r1, #96]	; 0x60
    2c58:	bl	1d60 <backpatch>
    2c5c:	ldr	r3, [r4, #44]	; 0x2c
    2c60:	str	r2, [sp, #4]
    2c64:	clz	r3, r3
    2c68:	lsr	r3, r3, #5
    2c6c:	str	r3, [r4, #44]	; 0x2c
    2c70:	ldr	r3, [r2, #44]	; 0x2c
    2c74:	clz	r3, r3
    2c78:	lsr	r3, r3, #5
    2c7c:	str	r3, [r2, #44]	; 0x2c
    2c80:	add	r3, sp, #4
    2c84:	ldr	r1, [r3]
    2c88:	cmp	r1, #0
    2c8c:	bne	2cb4 <sf_gen_and+0x6c>
    2c90:	str	r4, [r3]
    2c94:	ldr	r3, [r2, #44]	; 0x2c
    2c98:	clz	r3, r3
    2c9c:	lsr	r3, r3, #5
    2ca0:	str	r3, [r2, #44]	; 0x2c
    2ca4:	ldr	r3, [r4, #96]	; 0x60
    2ca8:	str	r3, [r2, #96]	; 0x60
    2cac:	add	sp, sp, #8
    2cb0:	pop	{r4, pc}
    2cb4:	ldr	r3, [r1, #44]	; 0x2c
    2cb8:	cmp	r3, #0
    2cbc:	addeq	r3, r1, #60	; 0x3c
    2cc0:	addne	r3, r1, #84	; 0x54
    2cc4:	b	2c84 <sf_gen_and+0x3c>

00002cc8 <sf_gen_or>:
    2cc8:	ldr	r3, [r0, #44]	; 0x2c
    2ccc:	mov	r2, r0
    2cd0:	push	{r0, r1, r4, lr}
    2cd4:	mov	r4, r1
    2cd8:	clz	r3, r3
    2cdc:	lsr	r3, r3, #5
    2ce0:	str	r3, [r0, #44]	; 0x2c
    2ce4:	ldr	r1, [r1, #96]	; 0x60
    2ce8:	bl	1d60 <backpatch>
    2cec:	ldr	r3, [r2, #44]	; 0x2c
    2cf0:	str	r4, [sp, #4]
    2cf4:	clz	r3, r3
    2cf8:	lsr	r3, r3, #5
    2cfc:	str	r3, [r2, #44]	; 0x2c
    2d00:	add	r3, sp, #4
    2d04:	ldr	r1, [r3]
    2d08:	cmp	r1, #0
    2d0c:	bne	2d24 <sf_gen_or+0x5c>
    2d10:	str	r2, [r3]
    2d14:	ldr	r3, [r2, #96]	; 0x60
    2d18:	str	r3, [r4, #96]	; 0x60
    2d1c:	add	sp, sp, #8
    2d20:	pop	{r4, pc}
    2d24:	ldr	r3, [r1, #44]	; 0x2c
    2d28:	cmp	r3, #0
    2d2c:	addeq	r3, r1, #60	; 0x3c
    2d30:	addne	r3, r1, #84	; 0x54
    2d34:	b	2d04 <sf_gen_or+0x3c>

00002d38 <sf_gen_not>:
    2d38:	ldr	r3, [r0, #44]	; 0x2c
    2d3c:	clz	r3, r3
    2d40:	lsr	r3, r3, #5
    2d44:	str	r3, [r0, #44]	; 0x2c
    2d48:	bx	lr

00002d4c <sf_append>:
    2d4c:	ldr	r3, [r0, #16]
    2d50:	cmp	r3, #0
    2d54:	bne	2d60 <sf_append+0x14>
    2d58:	str	r1, [r0, #16]
    2d5c:	bx	lr
    2d60:	mov	r0, r3
    2d64:	b	2d4c <sf_append>

00002d68 <gen_load_ppi_llprefixlen>:
    2d68:	ldr	r3, [pc, #196]	; 2e34 <gen_load_ppi_llprefixlen+0xcc>
    2d6c:	push	{r4, r5, r6, lr}
    2d70:	add	r3, pc, r3
    2d74:	ldr	r5, [r3, #852]	; 0x354
    2d78:	cmn	r5, #1
    2d7c:	moveq	r4, #0
    2d80:	beq	2e2c <gen_load_ppi_llprefixlen+0xc4>
    2d84:	mov	r0, #48	; 0x30
    2d88:	mov	r6, #2
    2d8c:	bl	1f58 <new_stmt>
    2d90:	mov	r4, r0
    2d94:	mov	r3, #3
    2d98:	mov	r0, #100	; 0x64
    2d9c:	str	r3, [r4, #12]
    2da0:	bl	1f58 <new_stmt>
    2da4:	mov	r2, r0
    2da8:	mov	r1, r0
    2dac:	mov	r0, r4
    2db0:	bl	2d4c <sf_append>
    2db4:	mov	r3, #8
    2db8:	mov	r0, #7
    2dbc:	str	r3, [r2, #12]
    2dc0:	bl	1f58 <new_stmt>
    2dc4:	mov	r1, r0
    2dc8:	mov	r0, r4
    2dcc:	bl	2d4c <sf_append>
    2dd0:	mov	r0, #48	; 0x30
    2dd4:	bl	1f58 <new_stmt>
    2dd8:	mov	r2, r0
    2ddc:	mov	r1, r0
    2de0:	mov	r0, r4
    2de4:	bl	2d4c <sf_append>
    2de8:	mov	r0, #76	; 0x4c
    2dec:	str	r6, [r2, #12]
    2df0:	bl	1f58 <new_stmt>
    2df4:	mov	r1, r0
    2df8:	mov	r0, r4
    2dfc:	bl	2d4c <sf_append>
    2e00:	mov	r0, r6
    2e04:	bl	1f58 <new_stmt>
    2e08:	mov	r1, r0
    2e0c:	mov	r0, r4
    2e10:	str	r5, [r1, #12]
    2e14:	bl	2d4c <sf_append>
    2e18:	mov	r0, #7
    2e1c:	bl	1f58 <new_stmt>
    2e20:	mov	r1, r0
    2e24:	mov	r0, r4
    2e28:	bl	2d4c <sf_append>
    2e2c:	mov	r0, r4
    2e30:	pop	{r4, r5, r6, pc}
    2e34:	.word	0x0002a5f0

00002e38 <sf_finish_parse>:
    2e38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2e3c:	sub	sp, sp, #20
    2e40:	mov	r6, r0
    2e44:	ldr	r3, [r0, #96]	; 0x60
    2e48:	ldr	r9, [pc, #1388]	; 33bc <sf_finish_parse+0x584>
    2e4c:	str	r3, [sp, #4]
    2e50:	ldr	r3, [pc, #1384]	; 33c0 <sf_finish_parse+0x588>
    2e54:	add	r9, pc, r9
    2e58:	add	r3, pc, r3
    2e5c:	ldr	r5, [r3, #856]	; 0x358
    2e60:	cmp	r5, #127	; 0x7f
    2e64:	beq	332c <sf_finish_parse+0x4f4>
    2e68:	bgt	2ec0 <sf_finish_parse+0x88>
    2e6c:	cmp	r5, #119	; 0x77
    2e70:	beq	2edc <sf_finish_parse+0xa4>
    2e74:	cmp	r5, #119	; 0x77
    2e78:	bgt	3340 <sf_finish_parse+0x508>
    2e7c:	cmp	r5, #105	; 0x69
    2e80:	beq	2ef8 <sf_finish_parse+0xc0>
    2e84:	cmp	r5, #192	; 0xc0
    2e88:	bne	3350 <sf_finish_parse+0x518>
    2e8c:	mov	r0, #32
    2e90:	bl	1f58 <new_stmt>
    2e94:	mov	r4, r0
    2e98:	mov	r3, #4
    2e9c:	mov	r0, #21
    2ea0:	str	r3, [r4, #12]
    2ea4:	bl	1f38 <new_block>
    2ea8:	mov	r2, #1761607680	; 0x69000000
    2eac:	mov	r1, r6
    2eb0:	str	r4, [r0, #4]
    2eb4:	str	r2, [r0, #20]
    2eb8:	bl	2c48 <sf_gen_and>
    2ebc:	b	3350 <sf_finish_parse+0x518>
    2ec0:	cmp	r5, #163	; 0xa3
    2ec4:	beq	32f0 <sf_finish_parse+0x4b8>
    2ec8:	cmp	r5, #192	; 0xc0
    2ecc:	beq	3338 <sf_finish_parse+0x500>
    2ed0:	cmp	r5, #119	; 0x77
    2ed4:	bne	2e74 <sf_finish_parse+0x3c>
    2ed8:	b	2ef8 <sf_finish_parse+0xc0>
    2edc:	ldr	r2, [pc, #1248]	; 33c4 <sf_finish_parse+0x58c>
    2ee0:	mov	fp, #1
    2ee4:	ldr	sl, [r3, #852]	; 0x354
    2ee8:	ldr	r2, [r9, r2]
    2eec:	cmn	sl, #1
    2ef0:	str	fp, [r2]
    2ef4:	bne	2f00 <sf_finish_parse+0xc8>
    2ef8:	mov	r4, #0
    2efc:	b	2fec <sf_finish_parse+0x1b4>
    2f00:	mov	r0, #32
    2f04:	bl	1f58 <new_stmt>
    2f08:	mov	r4, r0
    2f0c:	mov	r3, #0
    2f10:	mov	r0, #84	; 0x54
    2f14:	str	r3, [r4, #12]
    2f18:	bl	1f58 <new_stmt>
    2f1c:	ldr	r2, [pc, #1188]	; 33c8 <sf_finish_parse+0x590>
    2f20:	mov	r1, r0
    2f24:	mov	r0, r4
    2f28:	str	r2, [r1, #12]
    2f2c:	bl	2d4c <sf_append>
    2f30:	mov	r0, #21
    2f34:	bl	1f58 <new_stmt>
    2f38:	ldr	r2, [pc, #1164]	; 33cc <sf_finish_parse+0x594>
    2f3c:	mov	r7, r0
    2f40:	mov	r1, r0
    2f44:	mov	r0, r4
    2f48:	str	r2, [r7, #12]
    2f4c:	bl	2d4c <sf_append>
    2f50:	mov	r0, #32
    2f54:	bl	1f58 <new_stmt>
    2f58:	mov	r2, r0
    2f5c:	mov	r1, #4
    2f60:	mov	r0, r4
    2f64:	str	r1, [r2, #12]
    2f68:	mov	r1, r2
    2f6c:	bl	2d4c <sf_append>
    2f70:	mov	r0, #5
    2f74:	str	r2, [r7, #4]
    2f78:	bl	1f58 <new_stmt>
    2f7c:	mov	r8, r0
    2f80:	mov	r1, r0
    2f84:	mov	r0, r4
    2f88:	str	fp, [r8, #12]
    2f8c:	bl	2d4c <sf_append>
    2f90:	mov	r3, #0
    2f94:	mov	r0, r3
    2f98:	bl	1f58 <new_stmt>
    2f9c:	mov	r2, r0
    2fa0:	mov	r3, #144	; 0x90
    2fa4:	mov	r1, r0
    2fa8:	mov	r0, r4
    2fac:	str	r3, [r2, #12]
    2fb0:	bl	2d4c <sf_append>
    2fb4:	mov	r0, #2
    2fb8:	str	r2, [r7, #8]
    2fbc:	bl	1f58 <new_stmt>
    2fc0:	mov	r2, r0
    2fc4:	mov	r1, r0
    2fc8:	mov	r0, r4
    2fcc:	str	sl, [r2, #12]
    2fd0:	bl	2d4c <sf_append>
    2fd4:	str	r2, [r8, #8]
    2fd8:	mov	r0, #7
    2fdc:	bl	1f58 <new_stmt>
    2fe0:	mov	r1, r0
    2fe4:	mov	r0, r4
    2fe8:	bl	2d4c <sf_append>
    2fec:	ldr	sl, [pc, #988]	; 33d0 <sf_finish_parse+0x598>
    2ff0:	add	sl, pc, sl
    2ff4:	ldr	r8, [sl, #864]	; 0x360
    2ff8:	cmn	r8, #1
    2ffc:	beq	33b0 <sf_finish_parse+0x578>
    3000:	ldr	r3, [sp, #4]
    3004:	mov	r0, #1
    3008:	cmp	r4, #0
    300c:	ldr	r7, [r3, #4]
    3010:	ldr	r3, [pc, #940]	; 33c4 <sf_finish_parse+0x58c>
    3014:	ldr	r3, [r9, r3]
    3018:	str	r0, [r3]
    301c:	bne	3030 <sf_finish_parse+0x1f8>
    3020:	bl	1f58 <new_stmt>
    3024:	ldr	r3, [sl, #936]	; 0x3a8
    3028:	mov	r4, r0
    302c:	str	r3, [r0, #12]
    3030:	mov	r0, #135	; 0x87
    3034:	mov	sl, #4
    3038:	bl	1f58 <new_stmt>
    303c:	mov	r1, r0
    3040:	mov	r0, r4
    3044:	bl	2d4c <sf_append>
    3048:	mov	r0, #4
    304c:	bl	1f58 <new_stmt>
    3050:	mov	r1, r0
    3054:	mov	r3, #24
    3058:	mov	r0, r4
    305c:	str	r3, [r1, #12]
    3060:	bl	2d4c <sf_append>
    3064:	mov	r0, #2
    3068:	bl	1f58 <new_stmt>
    306c:	mov	r1, r0
    3070:	mov	r0, r4
    3074:	str	r8, [r1, #12]
    3078:	bl	2d4c <sf_append>
    307c:	mov	r0, #80	; 0x50
    3080:	bl	1f58 <new_stmt>
    3084:	mov	r1, r0
    3088:	mov	r3, #0
    308c:	mov	r0, r4
    3090:	str	r3, [r1, #12]
    3094:	bl	2d4c <sf_append>
    3098:	mov	r0, #69	; 0x45
    309c:	bl	1f58 <new_stmt>
    30a0:	mov	r9, r0
    30a4:	mov	r3, #8
    30a8:	mov	r1, r0
    30ac:	mov	r0, r4
    30b0:	str	r3, [r9, #12]
    30b4:	bl	2d4c <sf_append>
    30b8:	mov	r0, #69	; 0x45
    30bc:	bl	1f58 <new_stmt>
    30c0:	mov	fp, r0
    30c4:	mov	r1, r0
    30c8:	mov	r0, r4
    30cc:	str	fp, [r9, #4]
    30d0:	str	sl, [fp, #12]
    30d4:	bl	2d4c <sf_append>
    30d8:	mov	r0, #69	; 0x45
    30dc:	str	r7, [r9, #8]
    30e0:	str	r7, [fp, #4]
    30e4:	bl	1f58 <new_stmt>
    30e8:	mov	r9, r0
    30ec:	mov	r2, #128	; 0x80
    30f0:	mov	r1, r0
    30f4:	mov	r0, r4
    30f8:	str	r9, [fp, #8]
    30fc:	mov	fp, #2
    3100:	str	r2, [r9, #12]
    3104:	bl	2d4c <sf_append>
    3108:	mov	r0, #96	; 0x60
    310c:	bl	1f58 <new_stmt>
    3110:	mov	r1, r0
    3114:	mov	r0, r4
    3118:	str	r1, [r9, #4]
    311c:	str	r8, [r1, #12]
    3120:	bl	2d4c <sf_append>
    3124:	mov	r0, sl
    3128:	bl	1f58 <new_stmt>
    312c:	mov	r1, r0
    3130:	mov	r0, r4
    3134:	str	fp, [r1, #12]
    3138:	bl	2d4c <sf_append>
    313c:	mov	r0, fp
    3140:	bl	1f58 <new_stmt>
    3144:	mov	r1, r0
    3148:	mov	r0, r4
    314c:	str	r8, [r1, #12]
    3150:	bl	2d4c <sf_append>
    3154:	cmp	r5, #127	; 0x7f
    3158:	bne	32d0 <sf_finish_parse+0x498>
    315c:	mov	r0, #32
    3160:	bl	1f58 <new_stmt>
    3164:	mov	r1, r0
    3168:	mov	r0, r4
    316c:	str	r1, [r9, #8]
    3170:	str	sl, [r1, #12]
    3174:	bl	2d4c <sf_append>
    3178:	mov	r0, #69	; 0x45
    317c:	bl	1f58 <new_stmt>
    3180:	mov	r2, r0
    3184:	mov	r3, #33554432	; 0x2000000
    3188:	mov	r1, r0
    318c:	mov	r0, r4
    3190:	str	r3, [r2, #12]
    3194:	str	r2, [sp, #8]
    3198:	bl	2d4c <sf_append>
    319c:	ldr	r2, [sp, #8]
    31a0:	mov	r0, #69	; 0x45
    31a4:	str	r7, [r2, #8]
    31a8:	bl	1f58 <new_stmt>
    31ac:	ldr	r2, [sp, #8]
    31b0:	mov	r9, r0
    31b4:	mov	r1, r0
    31b8:	mov	r0, r4
    31bc:	str	r9, [r2, #4]
    31c0:	mov	r2, #16777216	; 0x1000000
    31c4:	str	r2, [r9, #12]
    31c8:	bl	2d4c <sf_append>
    31cc:	mov	r0, #48	; 0x30
    31d0:	bl	1f58 <new_stmt>
    31d4:	mov	r1, r0
    31d8:	mov	r2, #16
    31dc:	mov	r0, r4
    31e0:	str	r1, [r9, #4]
    31e4:	str	r2, [r1, #12]
    31e8:	bl	2d4c <sf_append>
    31ec:	mov	r0, #69	; 0x45
    31f0:	bl	1f58 <new_stmt>
    31f4:	mov	r2, r0
    31f8:	mov	r3, #32
    31fc:	mov	r1, r0
    3200:	mov	r0, r4
    3204:	str	r3, [r2, #12]
    3208:	str	r2, [sp, #12]
    320c:	bl	2d4c <sf_append>
    3210:	mov	r0, #48	; 0x30
    3214:	bl	1f58 <new_stmt>
    3218:	mov	r1, r0
    321c:	mov	r2, #8
    3220:	mov	r0, r4
    3224:	str	r1, [r9, #8]
    3228:	str	r2, [r1, #12]
    322c:	bl	2d4c <sf_append>
    3230:	mov	r0, #69	; 0x45
    3234:	bl	1f58 <new_stmt>
    3238:	mov	r9, r0
    323c:	mov	r3, #32
    3240:	mov	r1, r0
    3244:	mov	r0, r4
    3248:	str	r3, [r9, #12]
    324c:	bl	2d4c <sf_append>
    3250:	mov	r0, #96	; 0x60
    3254:	bl	1f58 <new_stmt>
    3258:	mov	r3, r0
    325c:	mov	r1, r0
    3260:	mov	r0, r4
    3264:	str	r8, [r3, #12]
    3268:	str	r3, [sp, #8]
    326c:	bl	2d4c <sf_append>
    3270:	mov	r0, sl
    3274:	bl	1f58 <new_stmt>
    3278:	mov	r1, r0
    327c:	mov	r0, #3
    3280:	str	r0, [r1, #12]
    3284:	mov	r0, r4
    3288:	bl	2d4c <sf_append>
    328c:	mov	r0, #84	; 0x54
    3290:	bl	1f58 <new_stmt>
    3294:	mov	r1, r0
    3298:	mvn	r0, #3
    329c:	str	r0, [r1, #12]
    32a0:	mov	r0, r4
    32a4:	bl	2d4c <sf_append>
    32a8:	mov	r0, fp
    32ac:	bl	1f58 <new_stmt>
    32b0:	mov	r1, r0
    32b4:	mov	r0, r4
    32b8:	str	r8, [r1, #12]
    32bc:	bl	2d4c <sf_append>
    32c0:	ldr	r3, [sp, #8]
    32c4:	ldr	r2, [sp, #12]
    32c8:	stmib	r2, {r3, r7}
    32cc:	str	r3, [r9, #4]
    32d0:	str	r7, [r9, #8]
    32d4:	ldr	r3, [sp, #4]
    32d8:	mov	r0, r4
    32dc:	ldr	r1, [r3, #4]
    32e0:	bl	2d4c <sf_append>
    32e4:	ldr	r3, [sp, #4]
    32e8:	str	r4, [r3, #4]
    32ec:	b	2e84 <sf_finish_parse+0x4c>
    32f0:	ldr	r7, [r3, #852]	; 0x354
    32f4:	cmn	r7, #1
    32f8:	beq	2ef8 <sf_finish_parse+0xc0>
    32fc:	mov	r0, #32
    3300:	bl	1f58 <new_stmt>
    3304:	mov	r4, r0
    3308:	mov	r3, #4
    330c:	mov	r0, #2
    3310:	str	r3, [r4, #12]
    3314:	bl	1f58 <new_stmt>
    3318:	mov	r1, r0
    331c:	mov	r0, r4
    3320:	str	r7, [r1, #12]
    3324:	bl	2d4c <sf_append>
    3328:	b	2fd8 <sf_finish_parse+0x1a0>
    332c:	bl	2d68 <gen_load_ppi_llprefixlen>
    3330:	mov	r4, r0
    3334:	b	2fec <sf_finish_parse+0x1b4>
    3338:	bl	2d68 <gen_load_ppi_llprefixlen>
    333c:	b	3330 <sf_finish_parse+0x4f8>
    3340:	cmp	r5, #127	; 0x7f
    3344:	beq	2ef8 <sf_finish_parse+0xc0>
    3348:	cmp	r5, #192	; 0xc0
    334c:	beq	2ef8 <sf_finish_parse+0xc0>
    3350:	ldr	r4, [pc, #124]	; 33d4 <sf_finish_parse+0x59c>
    3354:	mov	r0, #6
    3358:	add	r4, pc, r4
    335c:	ldr	r5, [r4, #880]	; 0x370
    3360:	bl	1f38 <new_block>
    3364:	mov	r1, r0
    3368:	mov	r0, r6
    336c:	str	r5, [r1, #20]
    3370:	bl	1d60 <backpatch>
    3374:	ldr	r3, [r6, #44]	; 0x2c
    3378:	mov	r0, #6
    337c:	clz	r3, r3
    3380:	lsr	r3, r3, #5
    3384:	str	r3, [r6, #44]	; 0x2c
    3388:	bl	1f38 <new_block>
    338c:	mov	r1, r0
    3390:	mov	r3, #0
    3394:	mov	r0, r6
    3398:	str	r3, [r1, #20]
    339c:	bl	1d60 <backpatch>
    33a0:	ldr	r3, [r6, #96]	; 0x60
    33a4:	str	r3, [r4, #868]	; 0x364
    33a8:	add	sp, sp, #20
    33ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    33b0:	cmp	r4, #0
    33b4:	bne	32d4 <sf_finish_parse+0x49c>
    33b8:	b	2e84 <sf_finish_parse+0x4c>
    33bc:	.word	0x0002a1a4
    33c0:	.word	0x0002a508
    33c4:	.word	0x00000100
    33c8:	.word	0xfffff000
    33cc:	.word	0x80211000
    33d0:	.word	0x0002a370
    33d4:	.word	0x0002a008

000033d8 <gen_load_llrel>:
    33d8:	push	{r4, r5, r6, lr}
    33dc:	mov	r5, r0
    33e0:	mov	r6, r1
    33e4:	bl	20e4 <gen_llprefixlen>
    33e8:	subs	r4, r0, #0
    33ec:	beq	3410 <gen_load_llrel+0x38>
    33f0:	orr	r0, r6, #64	; 0x40
    33f4:	bl	1f58 <new_stmt>
    33f8:	mov	r1, r0
    33fc:	mov	r0, r4
    3400:	str	r5, [r1, #12]
    3404:	bl	2d4c <sf_append>
    3408:	mov	r0, r4
    340c:	pop	{r4, r5, r6, pc}
    3410:	orr	r0, r6, #32
    3414:	bl	1f58 <new_stmt>
    3418:	ldr	r3, [pc, #20]	; 3434 <gen_load_llrel+0x5c>
    341c:	mov	r4, r0
    3420:	add	r3, pc, r3
    3424:	ldr	r0, [r3, #936]	; 0x3a8
    3428:	add	r0, r0, r5
    342c:	str	r0, [r4, #12]
    3430:	b	3408 <gen_load_llrel+0x30>
    3434:	.word	0x00029f40

00003438 <gen_mac_multicast>:
    3438:	push	{r4, lr}
    343c:	mov	r1, #16
    3440:	bl	33d8 <gen_load_llrel>
    3444:	mov	r4, r0
    3448:	mov	r0, #69	; 0x45
    344c:	bl	1f38 <new_block>
    3450:	mov	r2, #1
    3454:	str	r4, [r0, #4]
    3458:	str	r2, [r0, #20]
    345c:	pop	{r4, pc}

00003460 <gen_loadx_iphdrlen>:
    3460:	push	{r4, r5, r6, lr}
    3464:	ldr	r6, [pc, #172]	; 3518 <gen_loadx_iphdrlen+0xb8>
    3468:	bl	2130 <gen_off_macpl>
    346c:	subs	r4, r0, #0
    3470:	add	r6, pc, r6
    3474:	ldr	r5, [r6, #948]	; 0x3b4
    3478:	beq	34fc <gen_loadx_iphdrlen+0x9c>
    347c:	mov	r0, #80	; 0x50
    3480:	bl	1f58 <new_stmt>
    3484:	mov	r1, r0
    3488:	mov	r0, r4
    348c:	str	r5, [r1, #12]
    3490:	bl	2d4c <sf_append>
    3494:	mov	r0, #84	; 0x54
    3498:	bl	1f58 <new_stmt>
    349c:	mov	r1, r0
    34a0:	mov	r3, #15
    34a4:	mov	r0, r4
    34a8:	str	r3, [r1, #12]
    34ac:	bl	2d4c <sf_append>
    34b0:	mov	r0, #100	; 0x64
    34b4:	bl	1f58 <new_stmt>
    34b8:	mov	r1, r0
    34bc:	mov	r3, #2
    34c0:	mov	r0, r4
    34c4:	str	r3, [r1, #12]
    34c8:	bl	2d4c <sf_append>
    34cc:	mov	r0, #12
    34d0:	bl	1f58 <new_stmt>
    34d4:	mov	r1, r0
    34d8:	mov	r0, r4
    34dc:	bl	2d4c <sf_append>
    34e0:	mov	r0, #7
    34e4:	bl	1f58 <new_stmt>
    34e8:	mov	r1, r0
    34ec:	mov	r0, r4
    34f0:	bl	2d4c <sf_append>
    34f4:	mov	r0, r4
    34f8:	pop	{r4, r5, r6, pc}
    34fc:	mov	r0, #177	; 0xb1
    3500:	bl	1f58 <new_stmt>
    3504:	ldr	r3, [r6, #940]	; 0x3ac
    3508:	mov	r4, r0
    350c:	add	r3, r3, r5
    3510:	str	r3, [r0, #12]
    3514:	b	34f4 <gen_loadx_iphdrlen+0x94>
    3518:	.word	0x00029ef0

0000351c <gen_load_macplrel>:
    351c:	push	{r4, r5, r6, lr}
    3520:	mov	r5, r0
    3524:	mov	r6, r1
    3528:	bl	2130 <gen_off_macpl>
    352c:	subs	r4, r0, #0
    3530:	beq	3554 <gen_load_macplrel+0x38>
    3534:	orr	r0, r6, #64	; 0x40
    3538:	bl	1f58 <new_stmt>
    353c:	mov	r1, r0
    3540:	mov	r0, r4
    3544:	str	r5, [r1, #12]
    3548:	bl	2d4c <sf_append>
    354c:	mov	r0, r4
    3550:	pop	{r4, r5, r6, pc}
    3554:	orr	r0, r6, #32
    3558:	bl	1f58 <new_stmt>
    355c:	ldr	r3, [pc, #20]	; 3578 <gen_load_macplrel+0x5c>
    3560:	mov	r4, r0
    3564:	add	r3, pc, r3
    3568:	ldr	r0, [r3, #940]	; 0x3ac
    356c:	add	r0, r0, r5
    3570:	str	r0, [r4, #12]
    3574:	b	354c <gen_load_macplrel+0x30>
    3578:	.word	0x00029dfc

0000357c <gen_ipfrag>:
    357c:	ldr	r3, [pc, #64]	; 35c4 <gen_ipfrag+0x48>
    3580:	mov	r1, #8
    3584:	push	{r4, lr}
    3588:	add	r3, pc, r3
    358c:	ldr	r0, [r3, #948]	; 0x3b4
    3590:	add	r0, r0, #6
    3594:	bl	351c <gen_load_macplrel>
    3598:	mov	r4, r0
    359c:	mov	r0, #69	; 0x45
    35a0:	bl	1f38 <new_block>
    35a4:	movw	r3, #8191	; 0x1fff
    35a8:	str	r4, [r0, #4]
    35ac:	str	r3, [r0, #20]
    35b0:	ldr	r3, [r0, #44]	; 0x2c
    35b4:	clz	r3, r3
    35b8:	lsr	r3, r3, #5
    35bc:	str	r3, [r0, #44]	; 0x2c
    35c0:	pop	{r4, pc}
    35c4:	.word	0x00029dd8

000035c8 <gen_ncmp>:
    35c8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    35cc:	sub	r0, r0, #1
    35d0:	mov	r5, r1
    35d4:	mov	r7, r3
    35d8:	mov	r1, r2
    35dc:	ldr	r6, [sp, #32]
    35e0:	cmp	r0, #5
    35e4:	addls	pc, pc, r0, lsl #2
    35e8:	b	3604 <gen_ncmp+0x3c>
    35ec:	b	3674 <gen_ncmp+0xac>
    35f0:	b	3684 <gen_ncmp+0xbc>
    35f4:	b	3690 <gen_ncmp+0xc8>
    35f8:	b	36a4 <gen_ncmp+0xdc>
    35fc:	b	36b4 <gen_ncmp+0xec>
    3600:	b	36f8 <gen_ncmp+0x130>
    3604:	orr	r0, r2, #32
    3608:	bl	1f58 <new_stmt>
    360c:	mov	r4, r0
    3610:	str	r5, [r0, #12]
    3614:	cmn	r7, #1
    3618:	beq	3634 <gen_ncmp+0x6c>
    361c:	mov	r0, #84	; 0x54
    3620:	bl	1f58 <new_stmt>
    3624:	mov	r1, r0
    3628:	mov	r0, r4
    362c:	str	r7, [r1, #12]
    3630:	bl	2d4c <sf_append>
    3634:	orr	r0, r6, #5
    3638:	bl	1f38 <new_block>
    363c:	ldr	r3, [sp, #40]	; 0x28
    3640:	str	r4, [r0, #4]
    3644:	str	r3, [r0, #20]
    3648:	ldr	r3, [sp, #36]	; 0x24
    364c:	cmp	r3, #0
    3650:	beq	366c <gen_ncmp+0xa4>
    3654:	bic	r6, r6, #16
    3658:	cmp	r6, #32
    365c:	ldreq	r3, [r0, #44]	; 0x2c
    3660:	clzeq	r3, r3
    3664:	lsreq	r3, r3, #5
    3668:	streq	r3, [r0, #44]	; 0x2c
    366c:	add	sp, sp, #12
    3670:	pop	{r4, r5, r6, r7, pc}
    3674:	mov	r0, r5
    3678:	bl	33d8 <gen_load_llrel>
    367c:	mov	r4, r0
    3680:	b	3614 <gen_ncmp+0x4c>
    3684:	mov	r0, r5
    3688:	bl	351c <gen_load_macplrel>
    368c:	b	367c <gen_ncmp+0xb4>
    3690:	ldr	r3, [pc, #116]	; 370c <gen_ncmp+0x144>
    3694:	add	r3, pc, r3
    3698:	ldr	r0, [r3, #948]	; 0x3b4
    369c:	add	r0, r0, r5
    36a0:	b	3688 <gen_ncmp+0xc0>
    36a4:	ldr	r3, [pc, #100]	; 3710 <gen_ncmp+0x148>
    36a8:	add	r3, pc, r3
    36ac:	ldr	r0, [r3, #952]	; 0x3b8
    36b0:	b	369c <gen_ncmp+0xd4>
    36b4:	str	r2, [sp, #4]
    36b8:	bl	3460 <gen_loadx_iphdrlen>
    36bc:	ldr	r1, [sp, #4]
    36c0:	mov	r4, r0
    36c4:	orr	r0, r1, #64	; 0x40
    36c8:	bl	1f58 <new_stmt>
    36cc:	ldr	r2, [pc, #64]	; 3714 <gen_ncmp+0x14c>
    36d0:	mov	r1, r0
    36d4:	mov	r0, r4
    36d8:	add	r2, pc, r2
    36dc:	ldr	r3, [r2, #940]	; 0x3ac
    36e0:	ldr	r2, [r2, #948]	; 0x3b4
    36e4:	add	r3, r3, r2
    36e8:	add	r5, r3, r5
    36ec:	str	r5, [r1, #12]
    36f0:	bl	2d4c <sf_append>
    36f4:	b	3614 <gen_ncmp+0x4c>
    36f8:	ldr	r3, [pc, #24]	; 3718 <gen_ncmp+0x150>
    36fc:	add	r3, pc, r3
    3700:	ldr	r0, [r3, #948]	; 0x3b4
    3704:	add	r0, r0, #40	; 0x28
    3708:	b	369c <gen_ncmp+0xd4>
    370c:	.word	0x00029ccc
    3710:	.word	0x00029cb8
    3714:	.word	0x00029c88
    3718:	.word	0x00029c64

0000371c <gen_cmp>:
    371c:	push	{r0, r1, r2, r3, r4, lr}
    3720:	mov	ip, #0
    3724:	str	r3, [sp, #8]
    3728:	mov	r3, #16
    372c:	stm	sp, {r3, ip}
    3730:	mvn	r3, #0
    3734:	bl	35c8 <gen_ncmp>
    3738:	add	sp, sp, #20
    373c:	pop	{pc}		; (ldr pc, [sp], #4)

00003740 <gen_bcmp>:
    3740:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    3744:	mov	r7, r0
    3748:	mov	r8, r1
    374c:	mov	sl, r2
    3750:	mov	r9, r3
    3754:	mov	r6, r2
    3758:	mov	r4, #0
    375c:	cmp	r6, #3
    3760:	bhi	37c8 <gen_bcmp+0x88>
    3764:	lsr	r5, sl, #2
    3768:	mvn	r3, #3
    376c:	mla	r5, r3, r5, sl
    3770:	mov	r6, r5
    3774:	cmp	r6, #1
    3778:	bhi	3804 <gen_bcmp+0xc4>
    377c:	lsr	r3, r5, #1
    3780:	mvn	r2, #1
    3784:	mla	r5, r2, r3, r5
    3788:	cmp	r5, #0
    378c:	moveq	r5, r4
    3790:	beq	37c0 <gen_bcmp+0x80>
    3794:	ldrb	r3, [r9]
    3798:	mov	r2, #16
    379c:	mov	r1, r8
    37a0:	mov	r0, r7
    37a4:	bl	371c <gen_cmp>
    37a8:	cmp	r4, #0
    37ac:	mov	r5, r0
    37b0:	beq	37c0 <gen_bcmp+0x80>
    37b4:	mov	r1, r0
    37b8:	mov	r0, r4
    37bc:	bl	2c48 <sf_gen_and>
    37c0:	mov	r0, r5
    37c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    37c8:	sub	r6, r6, #4
    37cc:	mov	r2, #0
    37d0:	ldr	r3, [r9, r6]
    37d4:	add	r1, r6, r8
    37d8:	mov	r0, r7
    37dc:	rev	r3, r3
    37e0:	bl	371c <gen_cmp>
    37e4:	cmp	r4, #0
    37e8:	mov	r5, r0
    37ec:	beq	37fc <gen_bcmp+0xbc>
    37f0:	mov	r1, r0
    37f4:	mov	r0, r4
    37f8:	bl	2c48 <sf_gen_and>
    37fc:	mov	r4, r5
    3800:	b	375c <gen_bcmp+0x1c>
    3804:	sub	r6, r6, #2
    3808:	mov	r2, #8
    380c:	ldrh	r3, [r9, r6]
    3810:	add	r1, r6, r8
    3814:	mov	r0, r7
    3818:	rev16	r3, r3
    381c:	uxth	r3, r3
    3820:	bl	371c <gen_cmp>
    3824:	cmp	r4, #0
    3828:	mov	sl, r0
    382c:	beq	383c <gen_bcmp+0xfc>
    3830:	mov	r1, r0
    3834:	mov	r0, r4
    3838:	bl	2c48 <sf_gen_and>
    383c:	mov	r4, sl
    3840:	b	3774 <gen_bcmp+0x34>

00003844 <gen_snap>:
    3844:	ldr	r3, [pc, #68]	; 3890 <gen_snap+0x4c>
    3848:	mov	ip, #0
    384c:	push	{r0, r1, r2, lr}
    3850:	rev16	r1, r1
    3854:	mov	r2, #8
    3858:	strh	r3, [sp]
    385c:	mov	r3, #3
    3860:	strb	r0, [sp, #5]
    3864:	strb	r3, [sp, #2]
    3868:	lsr	r3, r0, #16
    386c:	mov	r0, #2
    3870:	strh	r1, [sp, #6]
    3874:	mov	r1, ip
    3878:	strb	r3, [sp, #3]
    387c:	mov	r3, sp
    3880:	strb	ip, [sp, #4]
    3884:	bl	3740 <gen_bcmp>
    3888:	add	sp, sp, #12
    388c:	pop	{pc}		; (ldr pc, [sp], #4)
    3890:	.word	0xffffaaaa

00003894 <gen_fhostop>:
    3894:	push	{r4, r5, r6, lr}
    3898:	mov	r4, r0
    389c:	cmp	r1, #4
    38a0:	addls	pc, pc, r1, lsl #2
    38a4:	b	3940 <gen_fhostop+0xac>
    38a8:	b	3914 <gen_fhostop+0x80>
    38ac:	b	38bc <gen_fhostop+0x28>
    38b0:	b	38d4 <gen_fhostop+0x40>
    38b4:	b	3914 <gen_fhostop+0x80>
    38b8:	b	38e4 <gen_fhostop+0x50>
    38bc:	mov	r3, r0
    38c0:	mov	r2, #6
    38c4:	mov	r1, #7
    38c8:	mov	r0, #1
    38cc:	pop	{r4, r5, r6, lr}
    38d0:	b	3740 <gen_bcmp>
    38d4:	mov	r3, r0
    38d8:	mov	r2, #6
    38dc:	mov	r1, #1
    38e0:	b	38c8 <gen_fhostop+0x34>
    38e4:	mov	r1, #1
    38e8:	bl	3894 <gen_fhostop>
    38ec:	mov	r5, r0
    38f0:	mov	r1, #2
    38f4:	mov	r0, r4
    38f8:	bl	3894 <gen_fhostop>
    38fc:	mov	r4, r0
    3900:	mov	r1, r0
    3904:	mov	r0, r5
    3908:	bl	2c48 <sf_gen_and>
    390c:	mov	r0, r4
    3910:	pop	{r4, r5, r6, pc}
    3914:	mov	r1, #1
    3918:	bl	3894 <gen_fhostop>
    391c:	mov	r5, r0
    3920:	mov	r1, #2
    3924:	mov	r0, r4
    3928:	bl	3894 <gen_fhostop>
    392c:	mov	r4, r0
    3930:	mov	r1, r0
    3934:	mov	r0, r5
    3938:	bl	2cc8 <sf_gen_or>
    393c:	b	390c <gen_fhostop+0x78>
    3940:	bl	ee8 <abort@plt>

00003944 <gen_thostop>:
    3944:	push	{r4, r5, r6, lr}
    3948:	mov	r4, r0
    394c:	cmp	r1, #4
    3950:	addls	pc, pc, r1, lsl #2
    3954:	b	39f0 <gen_thostop+0xac>
    3958:	b	39c4 <gen_thostop+0x80>
    395c:	b	396c <gen_thostop+0x28>
    3960:	b	3984 <gen_thostop+0x40>
    3964:	b	39c4 <gen_thostop+0x80>
    3968:	b	3994 <gen_thostop+0x50>
    396c:	mov	r3, r0
    3970:	mov	r2, #6
    3974:	mov	r1, #8
    3978:	mov	r0, #1
    397c:	pop	{r4, r5, r6, lr}
    3980:	b	3740 <gen_bcmp>
    3984:	mov	r3, r0
    3988:	mov	r2, #6
    398c:	mov	r1, #2
    3990:	b	3978 <gen_thostop+0x34>
    3994:	mov	r1, #1
    3998:	bl	3944 <gen_thostop>
    399c:	mov	r5, r0
    39a0:	mov	r1, #2
    39a4:	mov	r0, r4
    39a8:	bl	3944 <gen_thostop>
    39ac:	mov	r4, r0
    39b0:	mov	r1, r0
    39b4:	mov	r0, r5
    39b8:	bl	2c48 <sf_gen_and>
    39bc:	mov	r0, r4
    39c0:	pop	{r4, r5, r6, pc}
    39c4:	mov	r1, #1
    39c8:	bl	3944 <gen_thostop>
    39cc:	mov	r5, r0
    39d0:	mov	r1, #2
    39d4:	mov	r0, r4
    39d8:	bl	3944 <gen_thostop>
    39dc:	mov	r4, r0
    39e0:	mov	r1, r0
    39e4:	mov	r0, r5
    39e8:	bl	2cc8 <sf_gen_or>
    39ec:	b	39bc <gen_thostop+0x78>
    39f0:	bl	ee8 <abort@plt>

000039f4 <gen_ipfchostop>:
    39f4:	push	{r4, r5, r6, lr}
    39f8:	mov	r4, r0
    39fc:	cmp	r1, #4
    3a00:	addls	pc, pc, r1, lsl #2
    3a04:	b	3aa0 <gen_ipfchostop+0xac>
    3a08:	b	3a74 <gen_ipfchostop+0x80>
    3a0c:	b	3a1c <gen_ipfchostop+0x28>
    3a10:	b	3a34 <gen_ipfchostop+0x40>
    3a14:	b	3a74 <gen_ipfchostop+0x80>
    3a18:	b	3a44 <gen_ipfchostop+0x50>
    3a1c:	mov	r3, r0
    3a20:	mov	r2, #6
    3a24:	mov	r1, #10
    3a28:	mov	r0, #1
    3a2c:	pop	{r4, r5, r6, lr}
    3a30:	b	3740 <gen_bcmp>
    3a34:	mov	r3, r0
    3a38:	mov	r2, #6
    3a3c:	mov	r1, #2
    3a40:	b	3a28 <gen_ipfchostop+0x34>
    3a44:	mov	r1, #1
    3a48:	bl	39f4 <gen_ipfchostop>
    3a4c:	mov	r5, r0
    3a50:	mov	r1, #2
    3a54:	mov	r0, r4
    3a58:	bl	39f4 <gen_ipfchostop>
    3a5c:	mov	r4, r0
    3a60:	mov	r1, r0
    3a64:	mov	r0, r5
    3a68:	bl	2c48 <sf_gen_and>
    3a6c:	mov	r0, r4
    3a70:	pop	{r4, r5, r6, pc}
    3a74:	mov	r1, #1
    3a78:	bl	39f4 <gen_ipfchostop>
    3a7c:	mov	r5, r0
    3a80:	mov	r1, #2
    3a84:	mov	r0, r4
    3a88:	bl	39f4 <gen_ipfchostop>
    3a8c:	mov	r4, r0
    3a90:	mov	r1, r0
    3a94:	mov	r0, r5
    3a98:	bl	2cc8 <sf_gen_or>
    3a9c:	b	3a6c <gen_ipfchostop+0x78>
    3aa0:	bl	ee8 <abort@plt>

00003aa4 <gen_ehostop>:
    3aa4:	push	{r4, r5, r6, lr}
    3aa8:	mov	r4, r0
    3aac:	cmp	r1, #4
    3ab0:	addls	pc, pc, r1, lsl #2
    3ab4:	b	3b64 <gen_ehostop+0xc0>
    3ab8:	b	3b38 <gen_ehostop+0x94>
    3abc:	b	3acc <gen_ehostop+0x28>
    3ac0:	b	3af0 <gen_ehostop+0x4c>
    3ac4:	b	3b38 <gen_ehostop+0x94>
    3ac8:	b	3b08 <gen_ehostop+0x64>
    3acc:	ldr	r3, [pc, #148]	; 3b68 <gen_ehostop+0xc4>
    3ad0:	mov	r2, #6
    3ad4:	add	r3, pc, r3
    3ad8:	ldr	r1, [r3, #884]	; 0x374
    3adc:	mov	r3, r0
    3ae0:	add	r1, r1, r2
    3ae4:	mov	r0, #1
    3ae8:	pop	{r4, r5, r6, lr}
    3aec:	b	3740 <gen_bcmp>
    3af0:	ldr	r1, [pc, #116]	; 3b6c <gen_ehostop+0xc8>
    3af4:	mov	r3, r0
    3af8:	mov	r2, #6
    3afc:	add	r1, pc, r1
    3b00:	ldr	r1, [r1, #884]	; 0x374
    3b04:	b	3ae4 <gen_ehostop+0x40>
    3b08:	mov	r1, #1
    3b0c:	bl	3aa4 <gen_ehostop>
    3b10:	mov	r5, r0
    3b14:	mov	r1, #2
    3b18:	mov	r0, r4
    3b1c:	bl	3aa4 <gen_ehostop>
    3b20:	mov	r4, r0
    3b24:	mov	r1, r0
    3b28:	mov	r0, r5
    3b2c:	bl	2c48 <sf_gen_and>
    3b30:	mov	r0, r4
    3b34:	pop	{r4, r5, r6, pc}
    3b38:	mov	r1, #1
    3b3c:	bl	3aa4 <gen_ehostop>
    3b40:	mov	r5, r0
    3b44:	mov	r1, #2
    3b48:	mov	r0, r4
    3b4c:	bl	3aa4 <gen_ehostop>
    3b50:	mov	r4, r0
    3b54:	mov	r1, r0
    3b58:	mov	r0, r5
    3b5c:	bl	2cc8 <sf_gen_or>
    3b60:	b	3b30 <gen_ehostop+0x8c>
    3b64:	bl	ee8 <abort@plt>
    3b68:	.word	0x0002988c
    3b6c:	.word	0x00029864

00003b70 <gen_ahostop>:
    3b70:	push	{r4, r5, r6, lr}
    3b74:	mov	r4, r0
    3b78:	cmp	r1, #4
    3b7c:	addls	pc, pc, r1, lsl #2
    3b80:	b	3c1c <gen_ahostop+0xac>
    3b84:	b	3bf0 <gen_ahostop+0x80>
    3b88:	b	3b98 <gen_ahostop+0x28>
    3b8c:	b	3bb0 <gen_ahostop+0x40>
    3b90:	b	3bf0 <gen_ahostop+0x80>
    3b94:	b	3bc0 <gen_ahostop+0x50>
    3b98:	mov	r3, r0
    3b9c:	mov	r2, #1
    3ba0:	mov	r1, #0
    3ba4:	mov	r0, r2
    3ba8:	pop	{r4, r5, r6, lr}
    3bac:	b	3740 <gen_bcmp>
    3bb0:	mov	r2, #1
    3bb4:	mov	r3, r0
    3bb8:	mov	r1, r2
    3bbc:	b	3ba4 <gen_ahostop+0x34>
    3bc0:	mov	r1, #1
    3bc4:	bl	3b70 <gen_ahostop>
    3bc8:	mov	r5, r0
    3bcc:	mov	r1, #2
    3bd0:	mov	r0, r4
    3bd4:	bl	3b70 <gen_ahostop>
    3bd8:	mov	r4, r0
    3bdc:	mov	r1, r0
    3be0:	mov	r0, r5
    3be4:	bl	2c48 <sf_gen_and>
    3be8:	mov	r0, r4
    3bec:	pop	{r4, r5, r6, pc}
    3bf0:	mov	r1, #1
    3bf4:	bl	3b70 <gen_ahostop>
    3bf8:	mov	r5, r0
    3bfc:	mov	r1, #2
    3c00:	mov	r0, r4
    3c04:	bl	3b70 <gen_ahostop>
    3c08:	mov	r4, r0
    3c0c:	mov	r1, r0
    3c10:	mov	r0, r5
    3c14:	bl	2cc8 <sf_gen_or>
    3c18:	b	3be8 <gen_ahostop+0x78>
    3c1c:	bl	ee8 <abort@plt>

00003c20 <gen_llc_linktype>:
    3c20:	cmp	r0, #240	; 0xf0
    3c24:	mov	r3, r0
    3c28:	beq	3c7c <gen_llc_linktype+0x5c>
    3c2c:	bgt	3c5c <gen_llc_linktype+0x3c>
    3c30:	cmp	r0, #6
    3c34:	beq	3c7c <gen_llc_linktype+0x5c>
    3c38:	cmp	r0, #224	; 0xe0
    3c3c:	beq	3c54 <gen_llc_linktype+0x34>
    3c40:	movw	r2, #1500	; 0x5dc
    3c44:	cmp	r3, r2
    3c48:	movgt	r2, #8
    3c4c:	movgt	r1, #6
    3c50:	bgt	3c88 <gen_llc_linktype+0x68>
    3c54:	mov	r2, #16
    3c58:	b	3c84 <gen_llc_linktype+0x64>
    3c5c:	cmp	r0, #254	; 0xfe
    3c60:	beq	3c7c <gen_llc_linktype+0x5c>
    3c64:	movw	r2, #32923	; 0x809b
    3c68:	cmp	r0, r2
    3c6c:	bne	3c40 <gen_llc_linktype+0x20>
    3c70:	mov	r1, r0
    3c74:	ldr	r0, [pc, #20]	; 3c90 <gen_llc_linktype+0x70>
    3c78:	b	3844 <gen_snap>
    3c7c:	orr	r3, r3, r3, lsl #8
    3c80:	mov	r2, #8
    3c84:	mov	r1, #0
    3c88:	mov	r0, #2
    3c8c:	b	371c <gen_cmp>
    3c90:	.word	0x00080007

00003c94 <gen_portatom>:
    3c94:	mov	r3, r1
    3c98:	mov	r2, #8
    3c9c:	mov	r1, r0
    3ca0:	mov	r0, #5
    3ca4:	b	371c <gen_cmp>

00003ca8 <gen_portatom6>:
    3ca8:	mov	r3, r1
    3cac:	mov	r2, #8
    3cb0:	mov	r1, r0
    3cb4:	mov	r0, #6
    3cb8:	b	371c <gen_cmp>

00003cbc <sf_gen_portop6>:
    3cbc:	push	{r4, r5, r6, lr}
    3cc0:	mov	r3, r1
    3cc4:	mov	r4, r0
    3cc8:	mov	r5, r2
    3ccc:	mov	r1, #6
    3cd0:	mov	r2, #16
    3cd4:	mov	r0, #3
    3cd8:	bl	371c <gen_cmp>
    3cdc:	mov	r6, r0
    3ce0:	cmp	r5, #4
    3ce4:	addls	pc, pc, r5, lsl #2
    3ce8:	b	3d90 <sf_gen_portop6+0xd4>
    3cec:	b	3d30 <sf_gen_portop6+0x74>
    3cf0:	b	3d00 <sf_gen_portop6+0x44>
    3cf4:	b	3d24 <sf_gen_portop6+0x68>
    3cf8:	b	3d30 <sf_gen_portop6+0x74>
    3cfc:	b	3d60 <sf_gen_portop6+0xa4>
    3d00:	mov	r1, r4
    3d04:	mov	r0, #0
    3d08:	bl	3ca8 <gen_portatom6>
    3d0c:	mov	r4, r0
    3d10:	mov	r0, r6
    3d14:	mov	r1, r4
    3d18:	bl	2c48 <sf_gen_and>
    3d1c:	mov	r0, r4
    3d20:	pop	{r4, r5, r6, pc}
    3d24:	mov	r1, r4
    3d28:	mov	r0, #2
    3d2c:	b	3d08 <sf_gen_portop6+0x4c>
    3d30:	mov	r1, r4
    3d34:	mov	r0, #0
    3d38:	bl	3ca8 <gen_portatom6>
    3d3c:	mov	r5, r0
    3d40:	mov	r1, r4
    3d44:	mov	r0, #2
    3d48:	bl	3ca8 <gen_portatom6>
    3d4c:	mov	r4, r0
    3d50:	mov	r1, r0
    3d54:	mov	r0, r5
    3d58:	bl	2cc8 <sf_gen_or>
    3d5c:	b	3d10 <sf_gen_portop6+0x54>
    3d60:	mov	r1, r4
    3d64:	mov	r0, #0
    3d68:	bl	3ca8 <gen_portatom6>
    3d6c:	mov	r5, r0
    3d70:	mov	r1, r4
    3d74:	mov	r0, #2
    3d78:	bl	3ca8 <gen_portatom6>
    3d7c:	mov	r4, r0
    3d80:	mov	r1, r0
    3d84:	mov	r0, r5
    3d88:	bl	2c48 <sf_gen_and>
    3d8c:	b	3d10 <sf_gen_portop6+0x54>
    3d90:	bl	ee8 <abort@plt>

00003d94 <sf_gen_portop>:
    3d94:	push	{r4, r5, r6, r7, r8, lr}
    3d98:	mov	r3, r1
    3d9c:	mov	r6, r2
    3da0:	mov	r1, #9
    3da4:	mov	r2, #16
    3da8:	mov	r4, r0
    3dac:	mov	r0, #3
    3db0:	bl	371c <gen_cmp>
    3db4:	mov	r7, r0
    3db8:	bl	357c <gen_ipfrag>
    3dbc:	mov	r5, r0
    3dc0:	mov	r1, r0
    3dc4:	mov	r0, r7
    3dc8:	bl	2c48 <sf_gen_and>
    3dcc:	cmp	r6, #4
    3dd0:	addls	pc, pc, r6, lsl #2
    3dd4:	b	3e7c <sf_gen_portop+0xe8>
    3dd8:	b	3e1c <sf_gen_portop+0x88>
    3ddc:	b	3dec <sf_gen_portop+0x58>
    3de0:	b	3e10 <sf_gen_portop+0x7c>
    3de4:	b	3e1c <sf_gen_portop+0x88>
    3de8:	b	3e4c <sf_gen_portop+0xb8>
    3dec:	mov	r1, r4
    3df0:	mov	r0, #0
    3df4:	bl	3c94 <gen_portatom>
    3df8:	mov	r4, r0
    3dfc:	mov	r0, r5
    3e00:	mov	r1, r4
    3e04:	bl	2c48 <sf_gen_and>
    3e08:	mov	r0, r4
    3e0c:	pop	{r4, r5, r6, r7, r8, pc}
    3e10:	mov	r1, r4
    3e14:	mov	r0, #2
    3e18:	b	3df4 <sf_gen_portop+0x60>
    3e1c:	mov	r1, r4
    3e20:	mov	r0, #0
    3e24:	bl	3c94 <gen_portatom>
    3e28:	mov	r6, r0
    3e2c:	mov	r1, r4
    3e30:	mov	r0, #2
    3e34:	bl	3c94 <gen_portatom>
    3e38:	mov	r4, r0
    3e3c:	mov	r1, r0
    3e40:	mov	r0, r6
    3e44:	bl	2cc8 <sf_gen_or>
    3e48:	b	3dfc <sf_gen_portop+0x68>
    3e4c:	mov	r1, r4
    3e50:	mov	r0, #0
    3e54:	bl	3c94 <gen_portatom>
    3e58:	mov	r6, r0
    3e5c:	mov	r1, r4
    3e60:	mov	r0, #2
    3e64:	bl	3c94 <gen_portatom>
    3e68:	mov	r4, r0
    3e6c:	mov	r1, r0
    3e70:	mov	r0, r6
    3e74:	bl	2c48 <sf_gen_and>
    3e78:	b	3dfc <sf_gen_portop+0x68>
    3e7c:	bl	ee8 <abort@plt>

00003e80 <gen_mcmp>:
    3e80:	push	{r0, r1, r2, r3, r4, lr}
    3e84:	mov	ip, #0
    3e88:	str	r3, [sp, #8]
    3e8c:	mov	r3, #16
    3e90:	stm	sp, {r3, ip}
    3e94:	ldr	r3, [sp, #24]
    3e98:	bl	35c8 <gen_ncmp>
    3e9c:	add	sp, sp, #20
    3ea0:	pop	{pc}		; (ldr pc, [sp], #4)

00003ea4 <gen_wlanhostop>:
    3ea4:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    3ea8:	mov	r5, r0
    3eac:	cmp	r1, #8
    3eb0:	addls	pc, pc, r1, lsl #2
    3eb4:	b	43ac <gen_wlanhostop+0x508>
    3eb8:	b	4380 <gen_wlanhostop+0x4dc>
    3ebc:	b	3edc <gen_wlanhostop+0x38>
    3ec0:	b	40f4 <gen_wlanhostop+0x250>
    3ec4:	b	4380 <gen_wlanhostop+0x4dc>
    3ec8:	b	4364 <gen_wlanhostop+0x4c0>
    3ecc:	b	4214 <gen_wlanhostop+0x370>
    3ed0:	b	4230 <gen_wlanhostop+0x38c>
    3ed4:	b	42f8 <gen_wlanhostop+0x454>
    3ed8:	b	4338 <gen_wlanhostop+0x494>
    3edc:	mov	r1, #16
    3ee0:	mov	r0, #1
    3ee4:	bl	33d8 <gen_load_llrel>
    3ee8:	mov	r4, r0
    3eec:	mov	r0, #69	; 0x45
    3ef0:	bl	1f38 <new_block>
    3ef4:	mov	r6, #1
    3ef8:	mov	r7, r0
    3efc:	mov	r3, r5
    3f00:	mov	r2, #6
    3f04:	mov	r1, #24
    3f08:	mov	r0, r6
    3f0c:	str	r4, [r7, #4]
    3f10:	str	r6, [r7, #20]
    3f14:	bl	3740 <gen_bcmp>
    3f18:	mov	r4, r0
    3f1c:	mov	r1, r0
    3f20:	mov	r0, r7
    3f24:	bl	2c48 <sf_gen_and>
    3f28:	mov	r1, #16
    3f2c:	mov	r0, r6
    3f30:	bl	33d8 <gen_load_llrel>
    3f34:	mov	r8, r0
    3f38:	mov	r0, #69	; 0x45
    3f3c:	bl	1f38 <new_block>
    3f40:	mov	r7, r0
    3f44:	mov	r2, #6
    3f48:	ldr	r3, [r7, #44]	; 0x2c
    3f4c:	mov	r1, #16
    3f50:	mov	r0, r6
    3f54:	str	r8, [r7, #4]
    3f58:	str	r6, [r7, #20]
    3f5c:	clz	r3, r3
    3f60:	lsr	r3, r3, #5
    3f64:	str	r3, [r7, #44]	; 0x2c
    3f68:	mov	r3, r5
    3f6c:	bl	3740 <gen_bcmp>
    3f70:	mov	r8, r0
    3f74:	mov	r1, r0
    3f78:	mov	r0, r7
    3f7c:	bl	2c48 <sf_gen_and>
    3f80:	mov	r0, r8
    3f84:	mov	r1, r4
    3f88:	bl	2cc8 <sf_gen_or>
    3f8c:	mov	r1, #16
    3f90:	mov	r0, r6
    3f94:	bl	33d8 <gen_load_llrel>
    3f98:	mov	r7, r0
    3f9c:	mov	r8, #2
    3fa0:	mov	r0, #69	; 0x45
    3fa4:	bl	1f38 <new_block>
    3fa8:	mov	r1, r4
    3fac:	str	r7, [r0, #4]
    3fb0:	str	r8, [r0, #20]
    3fb4:	bl	2c48 <sf_gen_and>
    3fb8:	mov	r1, #16
    3fbc:	mov	r0, r6
    3fc0:	bl	33d8 <gen_load_llrel>
    3fc4:	mov	r9, r0
    3fc8:	mov	r0, #69	; 0x45
    3fcc:	bl	1f38 <new_block>
    3fd0:	mov	r7, r0
    3fd4:	mov	r2, #6
    3fd8:	ldr	r3, [r7, #44]	; 0x2c
    3fdc:	mov	r1, #10
    3fe0:	mov	r0, r6
    3fe4:	str	r9, [r7, #4]
    3fe8:	str	r8, [r7, #20]
    3fec:	clz	r3, r3
    3ff0:	lsr	r3, r3, #5
    3ff4:	str	r3, [r7, #44]	; 0x2c
    3ff8:	mov	r3, r5
    3ffc:	bl	3740 <gen_bcmp>
    4000:	mov	r8, r0
    4004:	mov	r1, r0
    4008:	mov	r0, r7
    400c:	bl	2c48 <sf_gen_and>
    4010:	mov	r0, r8
    4014:	mov	r1, r4
    4018:	bl	2cc8 <sf_gen_or>
    401c:	mov	r1, #16
    4020:	mov	r0, #0
    4024:	bl	33d8 <gen_load_llrel>
    4028:	mov	r7, r0
    402c:	mov	r8, #8
    4030:	mov	r0, #69	; 0x45
    4034:	bl	1f38 <new_block>
    4038:	mov	r1, r4
    403c:	str	r7, [r0, #4]
    4040:	str	r8, [r0, #20]
    4044:	bl	2c48 <sf_gen_and>
    4048:	mov	r1, #16
    404c:	mov	r0, #0
    4050:	bl	33d8 <gen_load_llrel>
    4054:	mov	r9, r0
    4058:	mov	r0, #69	; 0x45
    405c:	bl	1f38 <new_block>
    4060:	ldr	r3, [r0, #44]	; 0x2c
    4064:	mov	r7, r0
    4068:	mov	r2, #6
    406c:	mov	r1, #10
    4070:	str	r9, [r0, #4]
    4074:	str	r8, [r0, #20]
    4078:	clz	r3, r3
    407c:	lsr	r3, r3, #5
    4080:	str	r3, [r0, #44]	; 0x2c
    4084:	mov	r3, r5
    4088:	mov	r0, r6
    408c:	bl	3740 <gen_bcmp>
    4090:	mov	r5, r0
    4094:	mov	r1, r0
    4098:	mov	r0, r7
    409c:	bl	2c48 <sf_gen_and>
    40a0:	mov	r0, r5
    40a4:	mov	r1, r4
    40a8:	bl	2cc8 <sf_gen_or>
    40ac:	mov	r1, #16
    40b0:	mov	r0, #0
    40b4:	bl	33d8 <gen_load_llrel>
    40b8:	mov	r5, r0
    40bc:	mov	r0, #69	; 0x45
    40c0:	bl	1f38 <new_block>
    40c4:	mov	r3, #4
    40c8:	mov	r1, r4
    40cc:	str	r5, [r0, #4]
    40d0:	str	r3, [r0, #20]
    40d4:	ldr	r3, [r0, #44]	; 0x2c
    40d8:	clz	r3, r3
    40dc:	lsr	r3, r3, #5
    40e0:	str	r3, [r0, #44]	; 0x2c
    40e4:	bl	2c48 <sf_gen_and>
    40e8:	mov	r0, r4
    40ec:	add	sp, sp, #12
    40f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
    40f4:	mov	r1, #16
    40f8:	mov	r0, #1
    40fc:	bl	33d8 <gen_load_llrel>
    4100:	mov	r4, r0
    4104:	mov	r0, #69	; 0x45
    4108:	bl	1f38 <new_block>
    410c:	mov	r7, r0
    4110:	mov	r6, #1
    4114:	mov	r3, r5
    4118:	mov	r2, #6
    411c:	mov	r1, #16
    4120:	mov	r0, r6
    4124:	str	r4, [r7, #4]
    4128:	str	r6, [r7, #20]
    412c:	bl	3740 <gen_bcmp>
    4130:	mov	r4, r0
    4134:	mov	r1, r0
    4138:	mov	r0, r7
    413c:	bl	2c48 <sf_gen_and>
    4140:	mov	r1, #16
    4144:	mov	r0, r6
    4148:	bl	33d8 <gen_load_llrel>
    414c:	mov	r8, r0
    4150:	mov	r0, #69	; 0x45
    4154:	bl	1f38 <new_block>
    4158:	mov	r7, r0
    415c:	mov	r2, #6
    4160:	ldr	r3, [r7, #44]	; 0x2c
    4164:	mov	r1, #4
    4168:	mov	r0, r6
    416c:	str	r8, [r7, #4]
    4170:	str	r6, [r7, #20]
    4174:	clz	r3, r3
    4178:	lsr	r3, r3, #5
    417c:	str	r3, [r7, #44]	; 0x2c
    4180:	mov	r3, r5
    4184:	bl	3740 <gen_bcmp>
    4188:	mov	r8, r0
    418c:	mov	r1, r0
    4190:	mov	r0, r7
    4194:	bl	2c48 <sf_gen_and>
    4198:	mov	r0, r8
    419c:	mov	r1, r4
    41a0:	bl	2cc8 <sf_gen_or>
    41a4:	mov	r1, #16
    41a8:	mov	r0, #0
    41ac:	bl	33d8 <gen_load_llrel>
    41b0:	mov	r7, r0
    41b4:	mov	r8, #8
    41b8:	mov	r0, #69	; 0x45
    41bc:	bl	1f38 <new_block>
    41c0:	mov	r1, r4
    41c4:	str	r7, [r0, #4]
    41c8:	str	r8, [r0, #20]
    41cc:	bl	2c48 <sf_gen_and>
    41d0:	mov	r1, #16
    41d4:	mov	r0, #0
    41d8:	bl	33d8 <gen_load_llrel>
    41dc:	mov	r9, r0
    41e0:	mov	r0, #69	; 0x45
    41e4:	bl	1f38 <new_block>
    41e8:	ldr	r3, [r0, #44]	; 0x2c
    41ec:	mov	r7, r0
    41f0:	mov	r2, #6
    41f4:	mov	r1, #4
    41f8:	str	r9, [r0, #4]
    41fc:	str	r8, [r0, #20]
    4200:	clz	r3, r3
    4204:	lsr	r3, r3, #5
    4208:	str	r3, [r0, #44]	; 0x2c
    420c:	mov	r3, r5
    4210:	b	4088 <gen_wlanhostop+0x1e4>
    4214:	mov	r3, r0
    4218:	mov	r2, #6
    421c:	mov	r1, #4
    4220:	mov	r0, #1
    4224:	add	sp, sp, #12
    4228:	pop	{r4, r5, r6, r7, r8, r9, lr}
    422c:	b	3740 <gen_bcmp>
    4230:	mov	r3, #12
    4234:	mov	r2, #16
    4238:	mov	r1, #0
    423c:	mov	r0, #1
    4240:	str	r3, [sp]
    4244:	mov	r3, #4
    4248:	mov	r6, #240	; 0xf0
    424c:	bl	3e80 <gen_mcmp>
    4250:	mov	r4, r0
    4254:	mov	r2, #16
    4258:	ldr	r3, [r4, #44]	; 0x2c
    425c:	mov	r1, #0
    4260:	mov	r0, #1
    4264:	clz	r3, r3
    4268:	lsr	r3, r3, #5
    426c:	str	r3, [r4, #44]	; 0x2c
    4270:	mov	r3, #192	; 0xc0
    4274:	str	r6, [sp]
    4278:	bl	3e80 <gen_mcmp>
    427c:	mov	r7, r0
    4280:	mov	r2, #16
    4284:	ldr	r3, [r7, #44]	; 0x2c
    4288:	mov	r1, #0
    428c:	mov	r0, #1
    4290:	clz	r3, r3
    4294:	lsr	r3, r3, #5
    4298:	str	r3, [r7, #44]	; 0x2c
    429c:	mov	r3, #208	; 0xd0
    42a0:	str	r6, [sp]
    42a4:	bl	3e80 <gen_mcmp>
    42a8:	mov	r6, r0
    42ac:	mov	r1, r0
    42b0:	ldr	r3, [r6, #44]	; 0x2c
    42b4:	mov	r0, r7
    42b8:	clz	r3, r3
    42bc:	lsr	r3, r3, #5
    42c0:	str	r3, [r6, #44]	; 0x2c
    42c4:	bl	2c48 <sf_gen_and>
    42c8:	mov	r1, r6
    42cc:	mov	r0, r4
    42d0:	bl	2cc8 <sf_gen_or>
    42d4:	mov	r3, r5
    42d8:	mov	r2, #6
    42dc:	mov	r1, #10
    42e0:	mov	r0, #1
    42e4:	bl	3740 <gen_bcmp>
    42e8:	mov	r4, r0
    42ec:	mov	r1, r0
    42f0:	mov	r0, r6
    42f4:	b	40e4 <gen_wlanhostop+0x240>
    42f8:	mov	r3, #12
    42fc:	mov	r2, #16
    4300:	mov	r1, #0
    4304:	mov	r0, #1
    4308:	str	r3, [sp]
    430c:	mov	r3, #4
    4310:	bl	3e80 <gen_mcmp>
    4314:	ldr	r3, [r0, #44]	; 0x2c
    4318:	mov	r6, r0
    431c:	mov	r2, #6
    4320:	mov	r1, #16
    4324:	clz	r3, r3
    4328:	lsr	r3, r3, #5
    432c:	str	r3, [r0, #44]	; 0x2c
    4330:	mov	r3, r5
    4334:	b	42e0 <gen_wlanhostop+0x43c>
    4338:	mov	r3, #3
    433c:	mov	r1, #1
    4340:	mov	r2, #16
    4344:	mov	r0, r1
    4348:	str	r3, [sp]
    434c:	bl	3e80 <gen_mcmp>
    4350:	mov	r6, r0
    4354:	mov	r3, r5
    4358:	mov	r2, #6
    435c:	mov	r1, #24
    4360:	b	42e0 <gen_wlanhostop+0x43c>
    4364:	mov	r1, #1
    4368:	bl	3ea4 <gen_wlanhostop>
    436c:	mov	r6, r0
    4370:	mov	r1, #2
    4374:	mov	r0, r5
    4378:	bl	3ea4 <gen_wlanhostop>
    437c:	b	42e8 <gen_wlanhostop+0x444>
    4380:	mov	r1, #1
    4384:	bl	3ea4 <gen_wlanhostop>
    4388:	mov	r6, r0
    438c:	mov	r1, #2
    4390:	mov	r0, r5
    4394:	bl	3ea4 <gen_wlanhostop>
    4398:	mov	r4, r0
    439c:	mov	r1, r0
    43a0:	mov	r0, r6
    43a4:	bl	2cc8 <sf_gen_or>
    43a8:	b	40e8 <gen_wlanhostop+0x244>
    43ac:	bl	ee8 <abort@plt>

000043b0 <sf_gen_ecode>:
    43b0:	push	{r0, r1, r4, r5, r6, lr}
    43b4:	ubfx	r4, r1, #16, #8
    43b8:	str	r1, [sp, #4]
    43bc:	uxtb	r1, r1
    43c0:	cmp	r1, #1
    43c4:	bhi	44fc <sf_gen_ecode+0x14c>
    43c8:	ldrb	ip, [sp, #5]
    43cc:	cmp	ip, #1
    43d0:	bne	44fc <sf_gen_ecode+0x14c>
    43d4:	ldr	r2, [pc, #300]	; 4508 <sf_gen_ecode+0x158>
    43d8:	mov	r6, r0
    43dc:	add	r2, pc, r2
    43e0:	ldr	r3, [r2, #856]	; 0x358
    43e4:	cmp	r3, #119	; 0x77
    43e8:	beq	4420 <sf_gen_ecode+0x70>
    43ec:	bgt	4434 <sf_gen_ecode+0x84>
    43f0:	cmp	r3, #6
    43f4:	beq	44dc <sf_gen_ecode+0x12c>
    43f8:	bgt	4410 <sf_gen_ecode+0x60>
    43fc:	cmp	r3, #1
    4400:	beq	44bc <sf_gen_ecode+0x10c>
    4404:	ldr	r0, [pc, #256]	; 450c <sf_gen_ecode+0x15c>
    4408:	add	r0, pc, r0
    440c:	bl	1e54 <sf_bpf_error>
    4410:	cmp	r3, #10
    4414:	beq	44cc <sf_gen_ecode+0x11c>
    4418:	cmp	r3, #105	; 0x69
    441c:	bne	4404 <sf_gen_ecode+0x54>
    4420:	mov	r1, r4
    4424:	mov	r0, r6
    4428:	add	sp, sp, #8
    442c:	pop	{r4, r5, r6, lr}
    4430:	b	3ea4 <gen_wlanhostop>
    4434:	cmp	r3, #127	; 0x7f
    4438:	beq	4420 <sf_gen_ecode+0x70>
    443c:	bgt	44ac <sf_gen_ecode+0xfc>
    4440:	cmp	r3, #122	; 0x7a
    4444:	beq	44ec <sf_gen_ecode+0x13c>
    4448:	cmp	r3, #123	; 0x7b
    444c:	bne	4404 <sf_gen_ecode+0x54>
    4450:	ldr	r3, [r2, #892]	; 0x37c
    4454:	cmp	r3, #0
    4458:	beq	44fc <sf_gen_ecode+0x14c>
    445c:	mov	r2, #8
    4460:	mov	r0, ip
    4464:	mov	r3, #65280	; 0xff00
    4468:	mov	r1, #4
    446c:	bl	371c <gen_cmp>
    4470:	mov	r5, r0
    4474:	mov	r1, r4
    4478:	ldr	r3, [r5, #44]	; 0x2c
    447c:	mov	r0, r6
    4480:	clz	r3, r3
    4484:	lsr	r3, r3, #5
    4488:	str	r3, [r5, #44]	; 0x2c
    448c:	bl	3aa4 <gen_ehostop>
    4490:	mov	r4, r0
    4494:	mov	r1, r0
    4498:	mov	r0, r5
    449c:	bl	2c48 <sf_gen_and>
    44a0:	mov	r0, r4
    44a4:	add	sp, sp, #8
    44a8:	pop	{r4, r5, r6, pc}
    44ac:	cmp	r3, #163	; 0xa3
    44b0:	beq	4420 <sf_gen_ecode+0x70>
    44b4:	cmp	r3, #192	; 0xc0
    44b8:	b	441c <sf_gen_ecode+0x6c>
    44bc:	mov	r1, r4
    44c0:	add	sp, sp, #8
    44c4:	pop	{r4, r5, r6, lr}
    44c8:	b	3aa4 <gen_ehostop>
    44cc:	mov	r1, r4
    44d0:	add	sp, sp, #8
    44d4:	pop	{r4, r5, r6, lr}
    44d8:	b	3894 <gen_fhostop>
    44dc:	mov	r1, r4
    44e0:	add	sp, sp, #8
    44e4:	pop	{r4, r5, r6, lr}
    44e8:	b	3944 <gen_thostop>
    44ec:	mov	r1, r4
    44f0:	add	sp, sp, #8
    44f4:	pop	{r4, r5, r6, lr}
    44f8:	b	39f4 <gen_ipfchostop>
    44fc:	ldr	r0, [pc, #12]	; 4510 <sf_gen_ecode+0x160>
    4500:	add	r0, pc, r0
    4504:	b	440c <sf_gen_ecode+0x5c>
    4508:	.word	0x00028f84
    450c:	.word	0x0000b292
    4510:	.word	0x0000b1f6

00004514 <gen_cmp_gt.constprop.12>:
    4514:	push	{r0, r1, r2, r3, r4, lr}
    4518:	mov	r3, #0
    451c:	str	r3, [sp, #4]
    4520:	mov	r3, #32
    4524:	str	r3, [sp]
    4528:	mvn	r3, #0
    452c:	str	r2, [sp, #8]
    4530:	mov	r2, r1
    4534:	mov	r1, r0
    4538:	mov	r0, #1
    453c:	bl	35c8 <gen_ncmp>
    4540:	add	sp, sp, #20
    4544:	pop	{pc}		; (ldr pc, [sp], #4)

00004548 <gen_ether_linktype>:
    4548:	ldr	r3, [pc, #496]	; 4740 <gen_ether_linktype+0x1f8>
    454c:	cmp	r0, #240	; 0xf0
    4550:	push	{r4, r5, r6, r7, r8, lr}
    4554:	mov	r4, r0
    4558:	add	r3, pc, r3
    455c:	ldr	r6, [r3, #944]	; 0x3b0
    4560:	beq	45e8 <gen_ether_linktype+0xa0>
    4564:	bgt	45c8 <gen_ether_linktype+0x80>
    4568:	cmp	r0, #6
    456c:	beq	45e8 <gen_ether_linktype+0xa0>
    4570:	cmp	r0, #224	; 0xe0
    4574:	beq	4634 <gen_ether_linktype+0xec>
    4578:	movw	r2, #1500	; 0x5dc
    457c:	cmp	r4, r2
    4580:	bgt	4728 <gen_ether_linktype+0x1e0>
    4584:	mov	r1, #8
    4588:	mov	r0, r6
    458c:	bl	4514 <gen_cmp_gt.constprop.12>
    4590:	mov	r7, r0
    4594:	add	r1, r6, #2
    4598:	ldr	r3, [r7, #44]	; 0x2c
    459c:	mov	r2, #16
    45a0:	mov	r0, #1
    45a4:	clz	r3, r3
    45a8:	lsr	r3, r3, #5
    45ac:	str	r3, [r7, #44]	; 0x2c
    45b0:	mov	r3, r4
    45b4:	bl	371c <gen_cmp>
    45b8:	mov	r5, r0
    45bc:	mov	r1, r0
    45c0:	mov	r0, r7
    45c4:	b	462c <gen_ether_linktype+0xe4>
    45c8:	movw	r3, #32923	; 0x809b
    45cc:	cmp	r0, r3
    45d0:	beq	46d0 <gen_ether_linktype+0x188>
    45d4:	movw	r3, #33011	; 0x80f3
    45d8:	cmp	r0, r3
    45dc:	beq	46d0 <gen_ether_linktype+0x188>
    45e0:	cmp	r0, #254	; 0xfe
    45e4:	bne	4578 <gen_ether_linktype+0x30>
    45e8:	movw	r2, #1500	; 0x5dc
    45ec:	mov	r1, #8
    45f0:	mov	r0, r6
    45f4:	bl	4514 <gen_cmp_gt.constprop.12>
    45f8:	mov	r6, r0
    45fc:	mov	r1, #0
    4600:	ldr	r3, [r6, #44]	; 0x2c
    4604:	mov	r2, #8
    4608:	mov	r0, #2
    460c:	clz	r3, r3
    4610:	lsr	r3, r3, #5
    4614:	str	r3, [r6, #44]	; 0x2c
    4618:	orr	r3, r4, r4, lsl #8
    461c:	bl	371c <gen_cmp>
    4620:	mov	r5, r0
    4624:	mov	r1, r0
    4628:	mov	r0, r6
    462c:	bl	2c48 <sf_gen_and>
    4630:	b	46c8 <gen_ether_linktype+0x180>
    4634:	mov	r3, r0
    4638:	mov	r2, #16
    463c:	mov	r1, #0
    4640:	mov	r0, #2
    4644:	bl	371c <gen_cmp>
    4648:	mov	r4, r0
    464c:	movw	r3, #65535	; 0xffff
    4650:	mov	r2, #8
    4654:	mov	r1, #0
    4658:	mov	r0, #2
    465c:	bl	371c <gen_cmp>
    4660:	mov	r5, r0
    4664:	mov	r1, r0
    4668:	mov	r0, r4
    466c:	bl	2cc8 <sf_gen_or>
    4670:	movw	r1, #33079	; 0x8137
    4674:	mov	r0, #0
    4678:	bl	3844 <gen_snap>
    467c:	mov	r1, r5
    4680:	bl	2cc8 <sf_gen_or>
    4684:	movw	r2, #1500	; 0x5dc
    4688:	mov	r1, #8
    468c:	mov	r0, r6
    4690:	bl	4514 <gen_cmp_gt.constprop.12>
    4694:	ldr	r3, [r0, #44]	; 0x2c
    4698:	mov	r1, r5
    469c:	clz	r3, r3
    46a0:	lsr	r3, r3, #5
    46a4:	str	r3, [r0, #44]	; 0x2c
    46a8:	bl	2c48 <sf_gen_and>
    46ac:	movw	r3, #33079	; 0x8137
    46b0:	mov	r1, r6
    46b4:	mov	r2, #8
    46b8:	mov	r0, #1
    46bc:	bl	371c <gen_cmp>
    46c0:	mov	r1, r5
    46c4:	bl	2cc8 <sf_gen_or>
    46c8:	mov	r0, r5
    46cc:	pop	{r4, r5, r6, r7, r8, pc}
    46d0:	mov	r1, #8
    46d4:	movw	r2, #1500	; 0x5dc
    46d8:	mov	r0, r6
    46dc:	bl	4514 <gen_cmp_gt.constprop.12>
    46e0:	ldr	r3, [r0, #44]	; 0x2c
    46e4:	mov	r7, r0
    46e8:	clz	r3, r3
    46ec:	lsr	r3, r3, #5
    46f0:	str	r3, [r0, #44]	; 0x2c
    46f4:	movw	r3, #32923	; 0x809b
    46f8:	cmp	r4, r3
    46fc:	moveq	r1, r4
    4700:	movwne	r1, #33011	; 0x80f3
    4704:	ldreq	r0, [pc, #56]	; 4744 <gen_ether_linktype+0x1fc>
    4708:	movne	r0, #0
    470c:	bl	3844 <gen_snap>
    4710:	mov	r1, r0
    4714:	mov	r5, r0
    4718:	mov	r0, r7
    471c:	bl	2c48 <sf_gen_and>
    4720:	mov	r3, r4
    4724:	b	46b0 <gen_ether_linktype+0x168>
    4728:	mov	r3, r4
    472c:	mov	r1, r6
    4730:	pop	{r4, r5, r6, r7, r8, lr}
    4734:	mov	r2, #8
    4738:	mov	r0, #1
    473c:	b	371c <gen_cmp>
    4740:	.word	0x00028e08
    4744:	.word	0x00080007

00004748 <gen_portrangeatom6>:
    4748:	cmp	r1, r2
    474c:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    4750:	mov	r4, r2
    4754:	movgt	r3, r1
    4758:	movgt	r1, r2
    475c:	movgt	r4, r3
    4760:	mov	r3, #0
    4764:	mov	r5, r0
    4768:	mov	r2, #8
    476c:	str	r3, [sp, #4]
    4770:	mov	r3, #48	; 0x30
    4774:	mov	r0, #6
    4778:	str	r3, [sp]
    477c:	mvn	r3, #0
    4780:	str	r1, [sp, #8]
    4784:	mov	r1, r5
    4788:	bl	35c8 <gen_ncmp>
    478c:	mov	r3, #1
    4790:	mov	r6, r0
    4794:	mov	r2, #8
    4798:	mov	r1, r5
    479c:	stmib	sp, {r3, r4}
    47a0:	mov	r3, #32
    47a4:	mov	r0, #6
    47a8:	str	r3, [sp]
    47ac:	mvn	r3, #0
    47b0:	bl	35c8 <gen_ncmp>
    47b4:	mov	r4, r0
    47b8:	mov	r1, r0
    47bc:	mov	r0, r6
    47c0:	bl	2c48 <sf_gen_and>
    47c4:	mov	r0, r4
    47c8:	add	sp, sp, #16
    47cc:	pop	{r4, r5, r6, pc}

000047d0 <sf_gen_portrangeop6>:
    47d0:	push	{r4, r5, r6, r7, r8, lr}
    47d4:	mov	r4, r0
    47d8:	mov	r5, r1
    47dc:	mov	r6, r3
    47e0:	mov	r1, #6
    47e4:	mov	r3, r2
    47e8:	mov	r0, #3
    47ec:	mov	r2, #16
    47f0:	bl	371c <gen_cmp>
    47f4:	mov	r7, r0
    47f8:	cmp	r6, #4
    47fc:	addls	pc, pc, r6, lsl #2
    4800:	b	48c0 <sf_gen_portrangeop6+0xf0>
    4804:	b	4850 <sf_gen_portrangeop6+0x80>
    4808:	b	4818 <sf_gen_portrangeop6+0x48>
    480c:	b	4840 <sf_gen_portrangeop6+0x70>
    4810:	b	4850 <sf_gen_portrangeop6+0x80>
    4814:	b	4888 <sf_gen_portrangeop6+0xb8>
    4818:	mov	r2, r5
    481c:	mov	r1, r4
    4820:	mov	r0, #0
    4824:	bl	4748 <gen_portrangeatom6>
    4828:	mov	r4, r0
    482c:	mov	r0, r7
    4830:	mov	r1, r4
    4834:	bl	2c48 <sf_gen_and>
    4838:	mov	r0, r4
    483c:	pop	{r4, r5, r6, r7, r8, pc}
    4840:	mov	r2, r5
    4844:	mov	r1, r4
    4848:	mov	r0, #2
    484c:	b	4824 <sf_gen_portrangeop6+0x54>
    4850:	mov	r2, r5
    4854:	mov	r1, r4
    4858:	mov	r0, #0
    485c:	bl	4748 <gen_portrangeatom6>
    4860:	mov	r6, r0
    4864:	mov	r1, r4
    4868:	mov	r2, r5
    486c:	mov	r0, #2
    4870:	bl	4748 <gen_portrangeatom6>
    4874:	mov	r4, r0
    4878:	mov	r1, r0
    487c:	mov	r0, r6
    4880:	bl	2cc8 <sf_gen_or>
    4884:	b	482c <sf_gen_portrangeop6+0x5c>
    4888:	mov	r2, r5
    488c:	mov	r1, r4
    4890:	mov	r0, #0
    4894:	bl	4748 <gen_portrangeatom6>
    4898:	mov	r6, r0
    489c:	mov	r1, r4
    48a0:	mov	r2, r5
    48a4:	mov	r0, #2
    48a8:	bl	4748 <gen_portrangeatom6>
    48ac:	mov	r4, r0
    48b0:	mov	r1, r0
    48b4:	mov	r0, r6
    48b8:	bl	2c48 <sf_gen_and>
    48bc:	b	482c <sf_gen_portrangeop6+0x5c>
    48c0:	bl	ee8 <abort@plt>

000048c4 <gen_portrangeatom>:
    48c4:	cmp	r1, r2
    48c8:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    48cc:	mov	r4, r2
    48d0:	movgt	r3, r1
    48d4:	movgt	r1, r2
    48d8:	movgt	r4, r3
    48dc:	mov	r3, #0
    48e0:	mov	r5, r0
    48e4:	mov	r2, #8
    48e8:	str	r3, [sp, #4]
    48ec:	mov	r3, #48	; 0x30
    48f0:	mov	r0, #5
    48f4:	str	r3, [sp]
    48f8:	mvn	r3, #0
    48fc:	str	r1, [sp, #8]
    4900:	mov	r1, r5
    4904:	bl	35c8 <gen_ncmp>
    4908:	mov	r3, #1
    490c:	mov	r6, r0
    4910:	mov	r2, #8
    4914:	mov	r1, r5
    4918:	stmib	sp, {r3, r4}
    491c:	mov	r3, #32
    4920:	mov	r0, #5
    4924:	str	r3, [sp]
    4928:	mvn	r3, #0
    492c:	bl	35c8 <gen_ncmp>
    4930:	mov	r4, r0
    4934:	mov	r1, r0
    4938:	mov	r0, r6
    493c:	bl	2c48 <sf_gen_and>
    4940:	mov	r0, r4
    4944:	add	sp, sp, #16
    4948:	pop	{r4, r5, r6, pc}

0000494c <sf_gen_portrangeop>:
    494c:	push	{r4, r5, r6, r7, r8, lr}
    4950:	mov	r7, r3
    4954:	mov	r4, r0
    4958:	mov	r3, r2
    495c:	mov	r5, r1
    4960:	mov	r2, #16
    4964:	mov	r1, #9
    4968:	mov	r0, #3
    496c:	bl	371c <gen_cmp>
    4970:	mov	r8, r0
    4974:	bl	357c <gen_ipfrag>
    4978:	mov	r6, r0
    497c:	mov	r1, r0
    4980:	mov	r0, r8
    4984:	bl	2c48 <sf_gen_and>
    4988:	cmp	r7, #4
    498c:	addls	pc, pc, r7, lsl #2
    4990:	b	4a50 <sf_gen_portrangeop+0x104>
    4994:	b	49e0 <sf_gen_portrangeop+0x94>
    4998:	b	49a8 <sf_gen_portrangeop+0x5c>
    499c:	b	49d0 <sf_gen_portrangeop+0x84>
    49a0:	b	49e0 <sf_gen_portrangeop+0x94>
    49a4:	b	4a18 <sf_gen_portrangeop+0xcc>
    49a8:	mov	r2, r5
    49ac:	mov	r1, r4
    49b0:	mov	r0, #0
    49b4:	bl	48c4 <gen_portrangeatom>
    49b8:	mov	r4, r0
    49bc:	mov	r0, r6
    49c0:	mov	r1, r4
    49c4:	bl	2c48 <sf_gen_and>
    49c8:	mov	r0, r4
    49cc:	pop	{r4, r5, r6, r7, r8, pc}
    49d0:	mov	r2, r5
    49d4:	mov	r1, r4
    49d8:	mov	r0, #2
    49dc:	b	49b4 <sf_gen_portrangeop+0x68>
    49e0:	mov	r2, r5
    49e4:	mov	r1, r4
    49e8:	mov	r0, #0
    49ec:	bl	48c4 <gen_portrangeatom>
    49f0:	mov	r7, r0
    49f4:	mov	r1, r4
    49f8:	mov	r2, r5
    49fc:	mov	r0, #2
    4a00:	bl	48c4 <gen_portrangeatom>
    4a04:	mov	r4, r0
    4a08:	mov	r1, r0
    4a0c:	mov	r0, r7
    4a10:	bl	2cc8 <sf_gen_or>
    4a14:	b	49bc <sf_gen_portrangeop+0x70>
    4a18:	mov	r2, r5
    4a1c:	mov	r1, r4
    4a20:	mov	r0, #0
    4a24:	bl	48c4 <gen_portrangeatom>
    4a28:	mov	r7, r0
    4a2c:	mov	r1, r4
    4a30:	mov	r2, r5
    4a34:	mov	r0, #2
    4a38:	bl	48c4 <gen_portrangeatom>
    4a3c:	mov	r4, r0
    4a40:	mov	r1, r0
    4a44:	mov	r0, r7
    4a48:	bl	2c48 <sf_gen_and>
    4a4c:	b	49bc <sf_gen_portrangeop+0x70>
    4a50:	bl	ee8 <abort@plt>

00004a54 <sf_gen_relation>:
    4a54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    4a58:	mov	r4, r0
    4a5c:	add	r0, r2, #8
    4a60:	mov	r6, r1
    4a64:	mov	r5, r2
    4a68:	mov	r9, r3
    4a6c:	bl	1f98 <xfer_to_x.isra.0>
    4a70:	mov	r7, r0
    4a74:	add	r0, r6, #8
    4a78:	bl	1fb4 <xfer_to_a.isra.1>
    4a7c:	cmp	r4, #16
    4a80:	mov	r8, r0
    4a84:	bne	4b40 <sf_gen_relation+0xec>
    4a88:	mov	r0, #28
    4a8c:	bl	1f58 <new_stmt>
    4a90:	mov	sl, r0
    4a94:	mov	r0, #21
    4a98:	bl	1f38 <new_block>
    4a9c:	mov	r4, r0
    4aa0:	mov	r1, sl
    4aa4:	mov	r0, r8
    4aa8:	bl	2d4c <sf_append>
    4aac:	cmp	r9, #0
    4ab0:	mov	r1, r8
    4ab4:	ldrne	r3, [r4, #44]	; 0x2c
    4ab8:	mov	r0, r7
    4abc:	clzne	r3, r3
    4ac0:	lsrne	r3, r3, #5
    4ac4:	strne	r3, [r4, #44]	; 0x2c
    4ac8:	bl	2d4c <sf_append>
    4acc:	mov	r1, r7
    4ad0:	ldr	r0, [r5, #4]
    4ad4:	bl	2d4c <sf_append>
    4ad8:	ldr	r1, [r5, #4]
    4adc:	ldr	r0, [r6, #4]
    4ae0:	bl	2d4c <sf_append>
    4ae4:	ldr	r3, [r6, #4]
    4ae8:	mov	r1, #0
    4aec:	str	r3, [r4, #4]
    4af0:	ldr	r3, [pc, #104]	; 4b60 <sf_gen_relation+0x10c>
    4af4:	ldr	r2, [r6, #8]
    4af8:	add	r3, pc, r3
    4afc:	add	r2, r3, r2, lsl #2
    4b00:	str	r1, [r2, #788]	; 0x314
    4b04:	ldr	r2, [r5, #8]
    4b08:	add	r3, r3, r2, lsl #2
    4b0c:	str	r1, [r3, #788]	; 0x314
    4b10:	ldr	r0, [r6]
    4b14:	ldr	r5, [r5]
    4b18:	cmp	r0, r1
    4b1c:	beq	4b50 <sf_gen_relation+0xfc>
    4b20:	cmp	r5, r1
    4b24:	beq	4b34 <sf_gen_relation+0xe0>
    4b28:	mov	r1, r5
    4b2c:	bl	2c48 <sf_gen_and>
    4b30:	mov	r0, r5
    4b34:	mov	r1, r4
    4b38:	bl	2c48 <sf_gen_and>
    4b3c:	b	4b58 <sf_gen_relation+0x104>
    4b40:	orr	r0, r4, #13
    4b44:	bl	1f38 <new_block>
    4b48:	mov	r4, r0
    4b4c:	b	4aac <sf_gen_relation+0x58>
    4b50:	subs	r0, r5, #0
    4b54:	bne	4b34 <sf_gen_relation+0xe0>
    4b58:	mov	r0, r4
    4b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    4b60:	.word	0x00028868

00004b64 <sf_gen_loadlen>:
    4b64:	push	{r4, r5, r6, lr}
    4b68:	bl	1ff8 <alloc_reg>
    4b6c:	mov	r5, r0
    4b70:	mov	r0, #12
    4b74:	bl	1e8c <newchunk>
    4b78:	mov	r4, r0
    4b7c:	mov	r0, #128	; 0x80
    4b80:	bl	1f58 <new_stmt>
    4b84:	mov	r6, r0
    4b88:	mov	r0, #2
    4b8c:	bl	1f58 <new_stmt>
    4b90:	str	r0, [r6, #16]
    4b94:	str	r5, [r0, #12]
    4b98:	mov	r0, r4
    4b9c:	str	r6, [r4, #4]
    4ba0:	str	r5, [r4, #8]
    4ba4:	pop	{r4, r5, r6, pc}

00004ba8 <sf_gen_loadi>:
    4ba8:	push	{r4, r5, r6, r7, r8, lr}
    4bac:	mov	r7, r0
    4bb0:	mov	r0, #12
    4bb4:	bl	1e8c <newchunk>
    4bb8:	mov	r4, r0
    4bbc:	bl	1ff8 <alloc_reg>
    4bc0:	mov	r6, r0
    4bc4:	mov	r0, #0
    4bc8:	bl	1f58 <new_stmt>
    4bcc:	mov	r5, r0
    4bd0:	mov	r0, #2
    4bd4:	str	r7, [r5, #12]
    4bd8:	bl	1f58 <new_stmt>
    4bdc:	str	r0, [r5, #16]
    4be0:	str	r6, [r0, #12]
    4be4:	mov	r0, r4
    4be8:	stmib	r4, {r5, r6}
    4bec:	pop	{r4, r5, r6, r7, r8, pc}

00004bf0 <sf_gen_neg>:
    4bf0:	push	{r4, lr}
    4bf4:	mov	r4, r0
    4bf8:	add	r0, r0, #8
    4bfc:	bl	1fb4 <xfer_to_a.isra.1>
    4c00:	mov	r1, r0
    4c04:	ldr	r0, [r4, #4]
    4c08:	bl	2d4c <sf_append>
    4c0c:	mov	r0, #132	; 0x84
    4c10:	bl	1f58 <new_stmt>
    4c14:	mov	r3, #0
    4c18:	mov	r1, r0
    4c1c:	str	r3, [r0, #12]
    4c20:	ldr	r0, [r4, #4]
    4c24:	bl	2d4c <sf_append>
    4c28:	mov	r0, #2
    4c2c:	bl	1f58 <new_stmt>
    4c30:	ldr	r3, [r4, #8]
    4c34:	mov	r1, r0
    4c38:	str	r3, [r0, #12]
    4c3c:	ldr	r0, [r4, #4]
    4c40:	bl	2d4c <sf_append>
    4c44:	mov	r0, r4
    4c48:	pop	{r4, pc}

00004c4c <sf_gen_arth>:
    4c4c:	push	{r4, r5, r6, r7, r8, lr}
    4c50:	mov	r8, r0
    4c54:	add	r0, r2, #8
    4c58:	mov	r5, r2
    4c5c:	mov	r4, r1
    4c60:	bl	1f98 <xfer_to_x.isra.0>
    4c64:	mov	r6, r0
    4c68:	add	r0, r4, #8
    4c6c:	bl	1fb4 <xfer_to_a.isra.1>
    4c70:	mov	r7, r0
    4c74:	orr	r0, r8, #12
    4c78:	bl	1f58 <new_stmt>
    4c7c:	mov	r1, r0
    4c80:	mov	r0, r7
    4c84:	bl	2d4c <sf_append>
    4c88:	mov	r1, r7
    4c8c:	mov	r0, r6
    4c90:	bl	2d4c <sf_append>
    4c94:	mov	r1, r6
    4c98:	ldr	r0, [r5, #4]
    4c9c:	bl	2d4c <sf_append>
    4ca0:	ldr	r0, [r4, #4]
    4ca4:	ldr	r1, [r5, #4]
    4ca8:	bl	2d4c <sf_append>
    4cac:	ldr	r3, [pc, #72]	; 4cfc <sf_gen_arth+0xb0>
    4cb0:	mov	r1, #0
    4cb4:	mov	r0, #2
    4cb8:	ldr	r2, [r4, #8]
    4cbc:	add	r3, pc, r3
    4cc0:	add	r2, r3, r2, lsl #2
    4cc4:	str	r1, [r2, #788]	; 0x314
    4cc8:	ldr	r2, [r5, #8]
    4ccc:	add	r3, r3, r2, lsl #2
    4cd0:	str	r1, [r3, #788]	; 0x314
    4cd4:	bl	1f58 <new_stmt>
    4cd8:	mov	r5, r0
    4cdc:	bl	1ff8 <alloc_reg>
    4ce0:	mov	r1, r5
    4ce4:	str	r0, [r5, #12]
    4ce8:	str	r0, [r4, #8]
    4cec:	ldr	r0, [r4, #4]
    4cf0:	bl	2d4c <sf_append>
    4cf4:	mov	r0, r4
    4cf8:	pop	{r4, r5, r6, r7, r8, pc}
    4cfc:	.word	0x000286a4

00004d00 <sf_gen_greater>:
    4d00:	push	{r4, r5, r6, lr}
    4d04:	mov	r4, r0
    4d08:	mov	r0, #128	; 0x80
    4d0c:	bl	1f58 <new_stmt>
    4d10:	mov	r5, r0
    4d14:	mov	r0, #53	; 0x35
    4d18:	bl	1f38 <new_block>
    4d1c:	str	r5, [r0, #4]
    4d20:	str	r4, [r0, #20]
    4d24:	pop	{r4, r5, r6, pc}

00004d28 <sf_gen_less>:
    4d28:	push	{r4, r5, r6, lr}
    4d2c:	mov	r4, r0
    4d30:	mov	r0, #128	; 0x80
    4d34:	bl	1f58 <new_stmt>
    4d38:	mov	r5, r0
    4d3c:	mov	r0, #37	; 0x25
    4d40:	bl	1f38 <new_block>
    4d44:	ldr	r3, [r0, #44]	; 0x2c
    4d48:	str	r5, [r0, #4]
    4d4c:	str	r4, [r0, #20]
    4d50:	clz	r3, r3
    4d54:	lsr	r3, r3, #5
    4d58:	str	r3, [r0, #44]	; 0x2c
    4d5c:	pop	{r4, r5, r6, pc}

00004d60 <sf_gen_byteop>:
    4d60:	cmp	r0, #61	; 0x3d
    4d64:	mov	r3, r2
    4d68:	beq	4dd0 <sf_gen_byteop+0x70>
    4d6c:	push	{r4, r5, lr}
    4d70:	mov	r4, r2
    4d74:	sub	sp, sp, #20
    4d78:	bgt	4d90 <sf_gen_byteop+0x30>
    4d7c:	cmp	r0, #38	; 0x26
    4d80:	beq	4e14 <sf_gen_byteop+0xb4>
    4d84:	cmp	r0, #60	; 0x3c
    4d88:	beq	4ddc <sf_gen_byteop+0x7c>
    4d8c:	bl	ee8 <abort@plt>
    4d90:	cmp	r0, #62	; 0x3e
    4d94:	beq	4e00 <sf_gen_byteop+0xa0>
    4d98:	cmp	r0, #124	; 0x7c
    4d9c:	moveq	r0, #68	; 0x44
    4da0:	bne	4d8c <sf_gen_byteop+0x2c>
    4da4:	bl	1f58 <new_stmt>
    4da8:	mov	r5, r0
    4dac:	mov	r0, #21
    4db0:	str	r4, [r5, #12]
    4db4:	bl	1f38 <new_block>
    4db8:	ldr	r3, [r0, #44]	; 0x2c
    4dbc:	str	r5, [r0, #4]
    4dc0:	clz	r3, r3
    4dc4:	lsr	r3, r3, #5
    4dc8:	str	r3, [r0, #44]	; 0x2c
    4dcc:	b	4df8 <sf_gen_byteop+0x98>
    4dd0:	mov	r2, #16
    4dd4:	mov	r0, #1
    4dd8:	b	371c <gen_cmp>
    4ddc:	mov	r3, #48	; 0x30
    4de0:	mov	r0, #1
    4de4:	mov	r2, #16
    4de8:	str	r3, [sp]
    4dec:	mvn	r3, #0
    4df0:	stmib	sp, {r0, r4}
    4df4:	bl	35c8 <gen_ncmp>
    4df8:	add	sp, sp, #20
    4dfc:	pop	{r4, r5, pc}
    4e00:	mov	r0, r1
    4e04:	mov	r1, #16
    4e08:	add	sp, sp, #20
    4e0c:	pop	{r4, r5, lr}
    4e10:	b	4514 <gen_cmp_gt.constprop.12>
    4e14:	mov	r0, #84	; 0x54
    4e18:	b	4da4 <sf_gen_byteop+0x44>

00004e1c <sf_gen_pf_ifname>:
    4e1c:	ldr	r0, [pc, #8]	; 4e2c <sf_gen_pf_ifname+0x10>
    4e20:	push	{r4, lr}
    4e24:	add	r0, pc, r0
    4e28:	bl	1e54 <sf_bpf_error>
    4e2c:	.word	0x0000a900

00004e30 <sf_gen_pf_ruleset>:
    4e30:	ldr	r0, [pc, #8]	; 4e40 <sf_gen_pf_ruleset+0x10>
    4e34:	push	{r4, lr}
    4e38:	add	r0, pc, r0
    4e3c:	bl	1e54 <sf_bpf_error>
    4e40:	.word	0x0000a914

00004e44 <sf_gen_pf_rnr>:
    4e44:	ldr	r0, [pc, #8]	; 4e54 <sf_gen_pf_rnr+0x10>
    4e48:	push	{r4, lr}
    4e4c:	add	r0, pc, r0
    4e50:	bl	1e54 <sf_bpf_error>
    4e54:	.word	0x0000a900

00004e58 <sf_gen_pf_srnr>:
    4e58:	ldr	r0, [pc, #8]	; 4e68 <sf_gen_pf_srnr+0x10>
    4e5c:	push	{r4, lr}
    4e60:	add	r0, pc, r0
    4e64:	bl	1e54 <sf_bpf_error>
    4e68:	.word	0x0000a8ec

00004e6c <sf_gen_pf_reason>:
    4e6c:	ldr	r0, [pc, #8]	; 4e7c <sf_gen_pf_reason+0x10>
    4e70:	push	{r4, lr}
    4e74:	add	r0, pc, r0
    4e78:	bl	1e54 <sf_bpf_error>
    4e7c:	.word	0x0000a8d8

00004e80 <sf_gen_pf_action>:
    4e80:	ldr	r0, [pc, #8]	; 4e90 <sf_gen_pf_action+0x10>
    4e84:	push	{r4, lr}
    4e88:	add	r0, pc, r0
    4e8c:	bl	1e54 <sf_bpf_error>
    4e90:	.word	0x0000a8c4

00004e94 <sf_gen_p80211_type>:
    4e94:	push	{r0, r1, r2, lr}
    4e98:	mov	r3, r0
    4e9c:	ldr	r2, [pc, #80]	; 4ef4 <sf_gen_p80211_type+0x60>
    4ea0:	add	r2, pc, r2
    4ea4:	ldr	r2, [r2, #856]	; 0x358
    4ea8:	cmp	r2, #119	; 0x77
    4eac:	beq	4ebc <sf_gen_p80211_type+0x28>
    4eb0:	bgt	4ed8 <sf_gen_p80211_type+0x44>
    4eb4:	cmp	r2, #105	; 0x69
    4eb8:	bne	4ee8 <sf_gen_p80211_type+0x54>
    4ebc:	mov	r2, #16
    4ec0:	mov	r0, #1
    4ec4:	str	r1, [sp]
    4ec8:	mov	r1, #0
    4ecc:	bl	3e80 <gen_mcmp>
    4ed0:	add	sp, sp, #12
    4ed4:	pop	{pc}		; (ldr pc, [sp], #4)
    4ed8:	cmp	r2, #127	; 0x7f
    4edc:	beq	4ebc <sf_gen_p80211_type+0x28>
    4ee0:	cmp	r2, #163	; 0xa3
    4ee4:	b	4eb8 <sf_gen_p80211_type+0x24>
    4ee8:	ldr	r0, [pc, #8]	; 4ef8 <sf_gen_p80211_type+0x64>
    4eec:	add	r0, pc, r0
    4ef0:	bl	1e54 <sf_bpf_error>
    4ef4:	.word	0x000284c0
    4ef8:	.word	0x0000a895

00004efc <sf_gen_p80211_fcdir>:
    4efc:	push	{r0, r1, r2, lr}
    4f00:	mov	r3, r0
    4f04:	ldr	r2, [pc, #84]	; 4f60 <sf_gen_p80211_fcdir+0x64>
    4f08:	add	r2, pc, r2
    4f0c:	ldr	r2, [r2, #856]	; 0x358
    4f10:	cmp	r2, #119	; 0x77
    4f14:	beq	4f40 <sf_gen_p80211_fcdir+0x44>
    4f18:	bgt	4f30 <sf_gen_p80211_fcdir+0x34>
    4f1c:	cmp	r2, #105	; 0x69
    4f20:	beq	4f40 <sf_gen_p80211_fcdir+0x44>
    4f24:	ldr	r0, [pc, #56]	; 4f64 <sf_gen_p80211_fcdir+0x68>
    4f28:	add	r0, pc, r0
    4f2c:	bl	1e54 <sf_bpf_error>
    4f30:	cmp	r2, #127	; 0x7f
    4f34:	beq	4f40 <sf_gen_p80211_fcdir+0x44>
    4f38:	cmp	r2, #163	; 0xa3
    4f3c:	b	4f20 <sf_gen_p80211_fcdir+0x24>
    4f40:	mov	r2, #3
    4f44:	mov	r1, #1
    4f48:	mov	r0, r1
    4f4c:	str	r2, [sp]
    4f50:	mov	r2, #16
    4f54:	bl	3e80 <gen_mcmp>
    4f58:	add	sp, sp, #12
    4f5c:	pop	{pc}		; (ldr pc, [sp], #4)
    4f60:	.word	0x00028458
    4f64:	.word	0x0000a88a

00004f68 <sf_gen_acode>:
    4f68:	ldr	r3, [pc, #92]	; 4fcc <sf_gen_acode+0x64>
    4f6c:	push	{r0, r1, r2, lr}
    4f70:	str	r1, [sp, #4]
    4f74:	add	r3, pc, r3
    4f78:	ldr	r3, [r3, #856]	; 0x358
    4f7c:	cmp	r3, #7
    4f80:	beq	4f8c <sf_gen_acode+0x24>
    4f84:	cmp	r3, #129	; 0x81
    4f88:	bne	4fc0 <sf_gen_acode+0x58>
    4f8c:	ldrb	r3, [sp, #4]
    4f90:	cmp	r3, #1
    4f94:	bhi	4fb4 <sf_gen_acode+0x4c>
    4f98:	ldrb	r3, [sp, #5]
    4f9c:	cmp	r3, #1
    4fa0:	bne	4fb4 <sf_gen_acode+0x4c>
    4fa4:	ldrb	r1, [sp, #6]
    4fa8:	add	sp, sp, #12
    4fac:	pop	{lr}		; (ldr lr, [sp], #4)
    4fb0:	b	3b70 <gen_ahostop>
    4fb4:	ldr	r0, [pc, #20]	; 4fd0 <sf_gen_acode+0x68>
    4fb8:	add	r0, pc, r0
    4fbc:	bl	1e54 <sf_bpf_error>
    4fc0:	ldr	r0, [pc, #12]	; 4fd4 <sf_gen_acode+0x6c>
    4fc4:	add	r0, pc, r0
    4fc8:	b	4fbc <sf_gen_acode+0x54>
    4fcc:	.word	0x000283ec
    4fd0:	.word	0x0000a82d
    4fd4:	.word	0x0000a84b

00004fd8 <sf_gen_vlan>:
    4fd8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    4fdc:	ldr	r2, [pc, #192]	; 50a4 <sf_gen_vlan+0xcc>
    4fe0:	add	r2, pc, r2
    4fe4:	ldr	r6, [r2, #4]
    4fe8:	cmp	r6, #0
    4fec:	beq	4ffc <sf_gen_vlan+0x24>
    4ff0:	ldr	r0, [pc, #176]	; 50a8 <sf_gen_vlan+0xd0>
    4ff4:	add	r0, pc, r0
    4ff8:	bl	1e54 <sf_bpf_error>
    4ffc:	ldr	r3, [pc, #168]	; 50ac <sf_gen_vlan+0xd4>
    5000:	mov	r7, r0
    5004:	add	r3, pc, r3
    5008:	ldr	r0, [r3, #856]	; 0x358
    500c:	ldr	r1, [r3, #948]	; 0x3b4
    5010:	cmp	r0, #1
    5014:	str	r1, [r2]
    5018:	bne	5094 <sf_gen_vlan+0xbc>
    501c:	ldr	r4, [r3, #944]	; 0x3b0
    5020:	mov	r2, #8
    5024:	mov	r3, #33024	; 0x8100
    5028:	mov	r1, r4
    502c:	bl	371c <gen_cmp>
    5030:	cmp	r7, #0
    5034:	mov	r5, r0
    5038:	blt	506c <sf_gen_vlan+0x94>
    503c:	movw	r3, #4095	; 0xfff
    5040:	mov	r1, r6
    5044:	mov	r2, #8
    5048:	mov	r0, #2
    504c:	str	r3, [sp]
    5050:	mov	r3, r7
    5054:	bl	3e80 <gen_mcmp>
    5058:	mov	r6, r0
    505c:	mov	r1, r0
    5060:	mov	r0, r5
    5064:	mov	r5, r6
    5068:	bl	2c48 <sf_gen_and>
    506c:	ldr	r3, [pc, #60]	; 50b0 <sf_gen_vlan+0xd8>
    5070:	add	r4, r4, #4
    5074:	mov	r0, r5
    5078:	add	r3, pc, r3
    507c:	ldr	r2, [r3, #940]	; 0x3ac
    5080:	str	r4, [r3, #944]	; 0x3b0
    5084:	add	r2, r2, #4
    5088:	str	r2, [r3, #940]	; 0x3ac
    508c:	add	sp, sp, #12
    5090:	pop	{r4, r5, r6, r7, pc}
    5094:	mov	r1, r0
    5098:	ldr	r0, [pc, #20]	; 50b4 <sf_gen_vlan+0xdc>
    509c:	add	r0, pc, r0
    50a0:	bl	1e54 <sf_bpf_error>
    50a4:	.word	0x00028294
    50a8:	.word	0x0000a838
    50ac:	.word	0x0002835c
    50b0:	.word	0x000282e8
    50b4:	.word	0x0000a7a9

000050b8 <sf_gen_atmfield_code>:
    50b8:	push	{r0, r1, r2, r3, r4, lr}
    50bc:	sub	r0, r0, #51	; 0x33
    50c0:	mov	ip, r1
    50c4:	cmp	r0, #4
    50c8:	addls	pc, pc, r0, lsl #2
    50cc:	b	5170 <sf_gen_atmfield_code+0xb8>
    50d0:	b	50e4 <sf_gen_atmfield_code+0x2c>
    50d4:	b	5108 <sf_gen_atmfield_code+0x50>
    50d8:	b	5150 <sf_gen_atmfield_code+0x98>
    50dc:	b	5174 <sf_gen_atmfield_code+0xbc>
    50e0:	b	51a0 <sf_gen_atmfield_code+0xe8>
    50e4:	ldr	r1, [pc, #240]	; 51dc <sf_gen_atmfield_code+0x124>
    50e8:	add	r1, pc, r1
    50ec:	ldr	r0, [r1, #888]	; 0x378
    50f0:	cmp	r0, #0
    50f4:	ldrne	r1, [r1, #896]	; 0x380
    50f8:	bne	51c0 <sf_gen_atmfield_code+0x108>
    50fc:	ldr	r0, [pc, #220]	; 51e0 <sf_gen_atmfield_code+0x128>
    5100:	add	r0, pc, r0
    5104:	bl	1e54 <sf_bpf_error>
    5108:	ldr	r1, [pc, #212]	; 51e4 <sf_gen_atmfield_code+0x12c>
    510c:	add	r1, pc, r1
    5110:	ldr	r0, [r1, #888]	; 0x378
    5114:	cmp	r0, #0
    5118:	ldreq	r0, [pc, #200]	; 51e8 <sf_gen_atmfield_code+0x130>
    511c:	addeq	r0, pc, r0
    5120:	beq	5104 <sf_gen_atmfield_code+0x4c>
    5124:	ldr	r1, [r1, #900]	; 0x384
    5128:	cmn	r1, #1
    512c:	beq	5170 <sf_gen_atmfield_code+0xb8>
    5130:	strd	r2, [sp]
    5134:	mvn	r3, #0
    5138:	mov	r2, #8
    513c:	str	ip, [sp, #8]
    5140:	mov	r0, #1
    5144:	bl	35c8 <gen_ncmp>
    5148:	add	sp, sp, #20
    514c:	pop	{pc}		; (ldr pc, [sp], #4)
    5150:	ldr	r1, [pc, #148]	; 51ec <sf_gen_atmfield_code+0x134>
    5154:	add	r1, pc, r1
    5158:	ldr	r1, [r1, #904]	; 0x388
    515c:	cmn	r1, #1
    5160:	strdne	r2, [sp]
    5164:	movne	r3, #15
    5168:	strne	ip, [sp, #8]
    516c:	bne	51d4 <sf_gen_atmfield_code+0x11c>
    5170:	bl	ee8 <abort@plt>
    5174:	ldr	r1, [pc, #116]	; 51f0 <sf_gen_atmfield_code+0x138>
    5178:	add	r1, pc, r1
    517c:	ldr	r1, [r1, #908]	; 0x38c
    5180:	cmn	r1, #1
    5184:	beq	5170 <sf_gen_atmfield_code+0xb8>
    5188:	add	r1, r1, #5
    518c:	strd	r2, [sp]
    5190:	mvn	r3, #0
    5194:	mov	r2, #16
    5198:	str	ip, [sp, #8]
    519c:	b	5140 <sf_gen_atmfield_code+0x88>
    51a0:	ldr	r1, [pc, #76]	; 51f4 <sf_gen_atmfield_code+0x13c>
    51a4:	add	r1, pc, r1
    51a8:	ldr	r0, [r1, #888]	; 0x378
    51ac:	cmp	r0, #0
    51b0:	ldrne	r1, [r1, #904]	; 0x388
    51b4:	ldreq	r0, [pc, #60]	; 51f8 <sf_gen_atmfield_code+0x140>
    51b8:	addeq	r0, pc, r0
    51bc:	beq	5104 <sf_gen_atmfield_code+0x4c>
    51c0:	cmn	r1, #1
    51c4:	beq	5170 <sf_gen_atmfield_code+0xb8>
    51c8:	strd	r2, [sp]
    51cc:	mvn	r3, #0
    51d0:	str	ip, [sp, #8]
    51d4:	mov	r2, #16
    51d8:	b	5140 <sf_gen_atmfield_code+0x88>
    51dc:	.word	0x00028278
    51e0:	.word	0x0000a76b
    51e4:	.word	0x00028254
    51e8:	.word	0x0000a76f
    51ec:	.word	0x0002820c
    51f0:	.word	0x000281e8
    51f4:	.word	0x000281bc
    51f8:	.word	0x0000a6f3

000051fc <gen_linktype>:
    51fc:	ldr	r3, [pc, #2468]	; 5ba8 <gen_linktype+0x9ac>
    5200:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    5204:	mov	r4, r0
    5208:	add	r3, pc, r3
    520c:	ldr	r3, [r3, #4]
    5210:	cmp	r3, #0
    5214:	beq	52cc <gen_linktype+0xd0>
    5218:	cmp	r0, #87	; 0x57
    521c:	beq	524c <gen_linktype+0x50>
    5220:	bgt	5238 <gen_linktype+0x3c>
    5224:	cmp	r0, #33	; 0x21
    5228:	beq	5278 <gen_linktype+0x7c>
    522c:	ldr	r0, [pc, #2424]	; 5bac <gen_linktype+0x9b0>
    5230:	add	r0, pc, r0
    5234:	bl	1e54 <sf_bpf_error>
    5238:	cmp	r0, #2048	; 0x800
    523c:	beq	5278 <gen_linktype+0x7c>
    5240:	movw	r3, #34525	; 0x86dd
    5244:	cmp	r0, r3
    5248:	bne	522c <gen_linktype+0x30>
    524c:	mov	r3, #1
    5250:	mov	r2, #16
    5254:	mvn	r1, #1
    5258:	mov	r0, #3
    525c:	str	r3, [sp]
    5260:	bl	3e80 <gen_mcmp>
    5264:	mov	r3, #240	; 0xf0
    5268:	mov	r4, r0
    526c:	str	r3, [sp]
    5270:	mov	r3, #96	; 0x60
    5274:	b	52a0 <gen_linktype+0xa4>
    5278:	mov	r3, #1
    527c:	mov	r2, #16
    5280:	mvn	r1, #1
    5284:	mov	r0, #3
    5288:	str	r3, [sp]
    528c:	bl	3e80 <gen_mcmp>
    5290:	mov	r3, #240	; 0xf0
    5294:	mov	r4, r0
    5298:	str	r3, [sp]
    529c:	mov	r3, #64	; 0x40
    52a0:	mov	r1, #0
    52a4:	mov	r2, #16
    52a8:	mov	r0, #3
    52ac:	bl	3e80 <gen_mcmp>
    52b0:	mov	r5, r0
    52b4:	mov	r1, r0
    52b8:	mov	r0, r4
    52bc:	bl	2c48 <sf_gen_and>
    52c0:	mov	r0, r5
    52c4:	add	sp, sp, #12
    52c8:	pop	{r4, r5, r6, r7, pc}
    52cc:	ldr	r1, [pc, #2268]	; 5bb0 <gen_linktype+0x9b4>
    52d0:	add	r1, pc, r1
    52d4:	ldr	r3, [r1, #912]	; 0x390
    52d8:	cmp	r3, #0
    52dc:	beq	5300 <gen_linktype+0x104>
    52e0:	bl	1d88 <ethertype_to_ppptype>
    52e4:	ldr	r1, [r1, #944]	; 0x3b0
    52e8:	mov	r3, r0
    52ec:	mov	r2, #8
    52f0:	mov	r0, #2
    52f4:	add	sp, sp, #12
    52f8:	pop	{r4, r5, r6, r7, lr}
    52fc:	b	371c <gen_cmp>
    5300:	ldr	r2, [r1, #856]	; 0x358
    5304:	cmp	r2, #144	; 0x90
    5308:	beq	5b3c <gen_linktype+0x940>
    530c:	bgt	550c <gen_linktype+0x310>
    5310:	cmp	r2, #105	; 0x69
    5314:	beq	5680 <gen_linktype+0x484>
    5318:	bgt	5424 <gen_linktype+0x228>
    531c:	cmp	r2, #11
    5320:	beq	56f0 <gen_linktype+0x4f4>
    5324:	bgt	53a8 <gen_linktype+0x1ac>
    5328:	cmp	r2, #7
    532c:	beq	5498 <gen_linktype+0x29c>
    5330:	bgt	537c <gen_linktype+0x180>
    5334:	cmp	r2, #1
    5338:	beq	5674 <gen_linktype+0x478>
    533c:	cmp	r2, #6
    5340:	beq	56f0 <gen_linktype+0x4f4>
    5344:	cmp	r2, #0
    5348:	bne	53cc <gen_linktype+0x1d0>
    534c:	cmp	r4, #2048	; 0x800
    5350:	beq	59ec <gen_linktype+0x7f0>
    5354:	movw	r3, #34525	; 0x86dd
    5358:	cmp	r4, r3
    535c:	moveq	r3, #10
    5360:	bne	539c <gen_linktype+0x1a0>
    5364:	cmp	r2, #109	; 0x6d
    5368:	cmpne	r2, #0
    536c:	mov	r2, #0
    5370:	reveq	r3, r3
    5374:	mov	r1, r2
    5378:	b	58f8 <gen_linktype+0x6fc>
    537c:	cmp	r2, #9
    5380:	beq	5948 <gen_linktype+0x74c>
    5384:	bgt	56f0 <gen_linktype+0x4f4>
    5388:	cmp	r4, #2048	; 0x800
    538c:	beq	5900 <gen_linktype+0x704>
    5390:	movw	r3, #34525	; 0x86dd
    5394:	cmp	r4, r3
    5398:	beq	5924 <gen_linktype+0x728>
    539c:	add	sp, sp, #12
    53a0:	pop	{r4, r5, r6, r7, lr}
    53a4:	b	1f70 <gen_false>
    53a8:	cmp	r2, #19
    53ac:	beq	56f0 <gen_linktype+0x4f4>
    53b0:	bgt	53ec <gen_linktype+0x1f0>
    53b4:	cmp	r2, #15
    53b8:	beq	5388 <gen_linktype+0x18c>
    53bc:	cmp	r2, #16
    53c0:	beq	5964 <gen_linktype+0x768>
    53c4:	cmp	r2, #12
    53c8:	beq	5388 <gen_linktype+0x18c>
    53cc:	ldr	r3, [pc, #2016]	; 5bb4 <gen_linktype+0x9b8>
    53d0:	add	r3, pc, r3
    53d4:	ldr	r1, [r3, #944]	; 0x3b0
    53d8:	cmn	r1, #1
    53dc:	movne	r3, r4
    53e0:	movne	r2, #8
    53e4:	bne	58f8 <gen_linktype+0x6fc>
    53e8:	bl	ee8 <abort@plt>
    53ec:	cmp	r2, #50	; 0x32
    53f0:	blt	53cc <gen_linktype+0x1d0>
    53f4:	cmp	r2, #51	; 0x33
    53f8:	ble	5948 <gen_linktype+0x74c>
    53fc:	cmp	r2, #104	; 0x68
    5400:	bne	53cc <gen_linktype+0x1d0>
    5404:	ldr	r1, [pc, #1964]	; 5bb8 <gen_linktype+0x9bc>
    5408:	cmp	r0, #254	; 0xfe
    540c:	movw	r3, #65278	; 0xfefe
    5410:	mov	r2, #8
    5414:	movne	r3, r0
    5418:	add	r1, pc, r1
    541c:	ldr	r1, [r1, #944]	; 0x3b0
    5420:	b	58f8 <gen_linktype+0x6fc>
    5424:	cmp	r2, #123	; 0x7b
    5428:	beq	5700 <gen_linktype+0x504>
    542c:	bgt	5478 <gen_linktype+0x27c>
    5430:	cmp	r2, #113	; 0x71
    5434:	beq	5764 <gen_linktype+0x568>
    5438:	bgt	5454 <gen_linktype+0x258>
    543c:	cmp	r2, #107	; 0x6b
    5440:	beq	5a90 <gen_linktype+0x894>
    5444:	blt	53cc <gen_linktype+0x1d0>
    5448:	cmp	r2, #109	; 0x6d
    544c:	ble	534c <gen_linktype+0x150>
    5450:	b	53cc <gen_linktype+0x1d0>
    5454:	cmp	r2, #119	; 0x77
    5458:	beq	5680 <gen_linktype+0x484>
    545c:	cmp	r2, #122	; 0x7a
    5460:	beq	56f0 <gen_linktype+0x4f4>
    5464:	cmp	r2, #114	; 0x72
    5468:	movweq	r3, #32923	; 0x809b
    546c:	bne	53cc <gen_linktype+0x1d0>
    5470:	cmp	r4, r3
    5474:	b	5938 <gen_linktype+0x73c>
    5478:	cmp	r2, #137	; 0x89
    547c:	bgt	54e8 <gen_linktype+0x2ec>
    5480:	cmp	r2, #130	; 0x82
    5484:	bge	5544 <gen_linktype+0x348>
    5488:	cmp	r2, #127	; 0x7f
    548c:	beq	5680 <gen_linktype+0x484>
    5490:	cmp	r2, #129	; 0x81
    5494:	bne	53cc <gen_linktype+0x1d0>
    5498:	movw	r3, #32821	; 0x8035
    549c:	cmp	r4, r3
    54a0:	beq	5a68 <gen_linktype+0x86c>
    54a4:	bgt	59f4 <gen_linktype+0x7f8>
    54a8:	cmp	r4, #2048	; 0x800
    54ac:	beq	5a20 <gen_linktype+0x824>
    54b0:	movw	r3, #2054	; 0x806
    54b4:	cmp	r4, r3
    54b8:	bne	539c <gen_linktype+0x1a0>
    54bc:	ldr	r3, [pc, #1784]	; 5bbc <gen_linktype+0x9c0>
    54c0:	mov	r2, #16
    54c4:	mov	r0, #1
    54c8:	add	r3, pc, r3
    54cc:	ldr	r4, [r3, #944]	; 0x3b0
    54d0:	mov	r3, #213	; 0xd5
    54d4:	mov	r1, r4
    54d8:	bl	371c <gen_cmp>
    54dc:	mov	r6, r0
    54e0:	mov	r3, #241	; 0xf1
    54e4:	b	5a48 <gen_linktype+0x84c>
    54e8:	cmp	r2, #139	; 0x8b
    54ec:	blt	53cc <gen_linktype+0x1d0>
    54f0:	cmp	r2, #140	; 0x8c
    54f4:	ble	5b48 <gen_linktype+0x94c>
    54f8:	cmp	r2, #143	; 0x8f
    54fc:	bne	53cc <gen_linktype+0x1d0>
    5500:	ldr	r0, [pc, #1720]	; 5bc0 <gen_linktype+0x9c4>
    5504:	add	r0, pc, r0
    5508:	b	5234 <gen_linktype+0x38>
    550c:	cmp	r2, #192	; 0xc0
    5510:	beq	5680 <gen_linktype+0x484>
    5514:	bgt	55b4 <gen_linktype+0x3b8>
    5518:	cmp	r2, #181	; 0xb5
    551c:	bgt	5574 <gen_linktype+0x378>
    5520:	cmp	r2, #178	; 0xb2
    5524:	bge	5544 <gen_linktype+0x348>
    5528:	cmp	r2, #166	; 0xa6
    552c:	beq	5948 <gen_linktype+0x74c>
    5530:	bgt	5558 <gen_linktype+0x35c>
    5534:	cmp	r2, #163	; 0xa3
    5538:	beq	5680 <gen_linktype+0x484>
    553c:	cmp	r2, #164	; 0xa4
    5540:	bne	53cc <gen_linktype+0x1d0>
    5544:	mvn	r3, #255	; 0xff
    5548:	mov	r2, #0
    554c:	str	r3, [sp]
    5550:	ldr	r3, [pc, #1644]	; 5bc4 <gen_linktype+0x9c8>
    5554:	b	5910 <gen_linktype+0x714>
    5558:	cmp	r2, #168	; 0xa8
    555c:	ble	5544 <gen_linktype+0x348>
    5560:	cmp	r2, #177	; 0xb1
    5564:	bne	53cc <gen_linktype+0x1d0>
    5568:	ldr	r0, [pc, #1624]	; 5bc8 <gen_linktype+0x9cc>
    556c:	add	r0, pc, r0
    5570:	b	5234 <gen_linktype+0x38>
    5574:	cmp	r2, #187	; 0xbb
    5578:	beq	5b60 <gen_linktype+0x964>
    557c:	bgt	55a0 <gen_linktype+0x3a4>
    5580:	cmp	r2, #183	; 0xb7
    5584:	beq	5544 <gen_linktype+0x348>
    5588:	blt	5b1c <gen_linktype+0x920>
    558c:	cmp	r2, #186	; 0xba
    5590:	bne	53cc <gen_linktype+0x1d0>
    5594:	ldr	r0, [pc, #1584]	; 5bcc <gen_linktype+0x9d0>
    5598:	add	r0, pc, r0
    559c:	b	5234 <gen_linktype+0x38>
    55a0:	cmp	r2, #190	; 0xbe
    55a4:	beq	5b6c <gen_linktype+0x970>
    55a8:	bgt	55d8 <gen_linktype+0x3dc>
    55ac:	cmp	r2, #189	; 0xbd
    55b0:	b	5590 <gen_linktype+0x394>
    55b4:	cmp	r2, #200	; 0xc8
    55b8:	beq	5544 <gen_linktype+0x348>
    55bc:	bgt	55fc <gen_linktype+0x400>
    55c0:	cmp	r2, #196	; 0xc4
    55c4:	beq	5b84 <gen_linktype+0x988>
    55c8:	bgt	55e4 <gen_linktype+0x3e8>
    55cc:	cmp	r2, #194	; 0xc2
    55d0:	beq	5544 <gen_linktype+0x348>
    55d4:	ble	5b78 <gen_linktype+0x97c>
    55d8:	ldr	r0, [pc, #1520]	; 5bd0 <gen_linktype+0x9d4>
    55dc:	add	r0, pc, r0
    55e0:	b	5234 <gen_linktype+0x38>
    55e4:	cmp	r2, #198	; 0xc6
    55e8:	beq	5b90 <gen_linktype+0x994>
    55ec:	ble	5b54 <gen_linktype+0x958>
    55f0:	ldr	r0, [pc, #1500]	; 5bd4 <gen_linktype+0x9d8>
    55f4:	add	r0, pc, r0
    55f8:	b	5234 <gen_linktype+0x38>
    55fc:	cmp	r2, #220	; 0xdc
    5600:	beq	5594 <gen_linktype+0x398>
    5604:	bgt	5620 <gen_linktype+0x424>
    5608:	cmp	r2, #202	; 0xca
    560c:	beq	5b9c <gen_linktype+0x9a0>
    5610:	blt	5b60 <gen_linktype+0x964>
    5614:	cmp	r2, #215	; 0xd7
    5618:	bne	53cc <gen_linktype+0x1d0>
    561c:	b	55d8 <gen_linktype+0x3dc>
    5620:	cmp	r2, #227	; 0xe3
    5624:	beq	5b6c <gen_linktype+0x970>
    5628:	bgt	565c <gen_linktype+0x460>
    562c:	cmp	r2, #226	; 0xe2
    5630:	bne	53cc <gen_linktype+0x1d0>
    5634:	cmp	r0, #2048	; 0x800
    5638:	beq	5b28 <gen_linktype+0x92c>
    563c:	movw	r3, #34525	; 0x86dd
    5640:	cmp	r0, r3
    5644:	bne	539c <gen_linktype+0x1a0>
    5648:	ldr	r1, [pc, #1416]	; 5bd8 <gen_linktype+0x9dc>
    564c:	mov	r3, #26
    5650:	mov	r2, #16
    5654:	add	r1, pc, r1
    5658:	b	541c <gen_linktype+0x220>
    565c:	cmp	r2, #228	; 0xe4
    5660:	beq	5934 <gen_linktype+0x738>
    5664:	cmp	r2, #229	; 0xe5
    5668:	movweq	r3, #34525	; 0x86dd
    566c:	beq	5470 <gen_linktype+0x274>
    5670:	b	53cc <gen_linktype+0x1d0>
    5674:	add	sp, sp, #12
    5678:	pop	{r4, r5, r6, r7, lr}
    567c:	b	4548 <gen_ether_linktype>
    5680:	mov	r1, #16
    5684:	mov	r0, #0
    5688:	bl	33d8 <gen_load_llrel>
    568c:	mov	r5, r0
    5690:	mov	r0, #69	; 0x45
    5694:	bl	1f38 <new_block>
    5698:	mov	r6, r0
    569c:	mov	r3, #8
    56a0:	mov	r1, #16
    56a4:	mov	r0, #0
    56a8:	str	r5, [r6, #4]
    56ac:	str	r3, [r6, #20]
    56b0:	bl	33d8 <gen_load_llrel>
    56b4:	mov	r5, r0
    56b8:	mov	r0, #69	; 0x45
    56bc:	bl	1f38 <new_block>
    56c0:	mov	r3, #4
    56c4:	mov	r1, r6
    56c8:	str	r5, [r0, #4]
    56cc:	str	r3, [r0, #20]
    56d0:	ldr	r3, [r0, #44]	; 0x2c
    56d4:	clz	r3, r3
    56d8:	lsr	r3, r3, #5
    56dc:	str	r3, [r0, #44]	; 0x2c
    56e0:	bl	2c48 <sf_gen_and>
    56e4:	mov	r0, r4
    56e8:	bl	3c20 <gen_llc_linktype>
    56ec:	b	573c <gen_linktype+0x540>
    56f0:	mov	r0, r4
    56f4:	add	sp, sp, #12
    56f8:	pop	{r4, r5, r6, r7, lr}
    56fc:	b	3c20 <gen_llc_linktype>
    5700:	ldr	r3, [r1, #892]	; 0x37c
    5704:	cmp	r3, #0
    5708:	beq	574c <gen_linktype+0x550>
    570c:	mov	r3, #65280	; 0xff00
    5710:	mov	r2, #8
    5714:	mov	r1, #4
    5718:	mov	r0, #1
    571c:	bl	371c <gen_cmp>
    5720:	mov	r6, r0
    5724:	mov	r0, r4
    5728:	ldr	r3, [r6, #44]	; 0x2c
    572c:	clz	r3, r3
    5730:	lsr	r3, r3, #5
    5734:	str	r3, [r6, #44]	; 0x2c
    5738:	bl	4548 <gen_ether_linktype>
    573c:	mov	r5, r0
    5740:	mov	r1, r0
    5744:	mov	r0, r6
    5748:	b	52bc <gen_linktype+0xc0>
    574c:	mov	r2, #16
    5750:	mov	r1, #2
    5754:	mov	r0, #53	; 0x35
    5758:	bl	50b8 <sf_gen_atmfield_code>
    575c:	mov	r6, r0
    5760:	b	56e4 <gen_linktype+0x4e8>
    5764:	cmp	r0, #240	; 0xf0
    5768:	ldr	r6, [r1, #944]	; 0x3b0
    576c:	beq	57e4 <gen_linktype+0x5e8>
    5770:	bgt	57c4 <gen_linktype+0x5c8>
    5774:	cmp	r0, #6
    5778:	beq	57e4 <gen_linktype+0x5e8>
    577c:	cmp	r0, #224	; 0xe0
    5780:	beq	5814 <gen_linktype+0x618>
    5784:	movw	r3, #1500	; 0x5dc
    5788:	cmp	r4, r3
    578c:	bgt	58ec <gen_linktype+0x6f0>
    5790:	mov	r1, r6
    5794:	mov	r3, #4
    5798:	mov	r2, #8
    579c:	mov	r0, #1
    57a0:	bl	371c <gen_cmp>
    57a4:	ldr	r1, [pc, #1072]	; 5bdc <gen_linktype+0x9e0>
    57a8:	mov	r6, r0
    57ac:	mov	r3, r4
    57b0:	mov	r2, #16
    57b4:	mov	r0, #1
    57b8:	add	r1, pc, r1
    57bc:	ldr	r1, [r1, #940]	; 0x3ac
    57c0:	b	580c <gen_linktype+0x610>
    57c4:	movw	r3, #32923	; 0x809b
    57c8:	cmp	r0, r3
    57cc:	beq	58a0 <gen_linktype+0x6a4>
    57d0:	movw	r3, #33011	; 0x80f3
    57d4:	cmp	r0, r3
    57d8:	beq	58a0 <gen_linktype+0x6a4>
    57dc:	cmp	r0, #254	; 0xfe
    57e0:	bne	5784 <gen_linktype+0x588>
    57e4:	mov	r1, r6
    57e8:	mov	r3, #4
    57ec:	mov	r2, #8
    57f0:	mov	r0, #1
    57f4:	bl	371c <gen_cmp>
    57f8:	orr	r3, r4, r4, lsl #8
    57fc:	mov	r6, r0
    5800:	mov	r2, #8
    5804:	mov	r1, #0
    5808:	mov	r0, #2
    580c:	bl	371c <gen_cmp>
    5810:	b	573c <gen_linktype+0x540>
    5814:	mov	r3, r0
    5818:	mov	r2, #16
    581c:	mov	r1, #0
    5820:	mov	r0, #2
    5824:	bl	371c <gen_cmp>
    5828:	mov	r4, r0
    582c:	movw	r1, #33079	; 0x8137
    5830:	mov	r0, #0
    5834:	bl	3844 <gen_snap>
    5838:	mov	r5, r0
    583c:	mov	r1, r0
    5840:	mov	r0, r4
    5844:	bl	2cc8 <sf_gen_or>
    5848:	mov	r3, #4
    584c:	mov	r2, #8
    5850:	mov	r1, r6
    5854:	mov	r0, #1
    5858:	bl	371c <gen_cmp>
    585c:	mov	r1, r5
    5860:	bl	2c48 <sf_gen_and>
    5864:	mov	r3, #1
    5868:	mov	r2, #8
    586c:	mov	r0, r3
    5870:	mov	r1, r6
    5874:	bl	371c <gen_cmp>
    5878:	mov	r1, r5
    587c:	bl	2cc8 <sf_gen_or>
    5880:	movw	r3, #33079	; 0x8137
    5884:	mov	r1, r6
    5888:	mov	r2, #8
    588c:	mov	r0, #1
    5890:	bl	371c <gen_cmp>
    5894:	mov	r1, r5
    5898:	bl	2cc8 <sf_gen_or>
    589c:	b	52c0 <gen_linktype+0xc4>
    58a0:	mov	r1, r6
    58a4:	mov	r2, #8
    58a8:	mov	r3, #4
    58ac:	mov	r0, #1
    58b0:	bl	371c <gen_cmp>
    58b4:	movw	r3, #32923	; 0x809b
    58b8:	mov	r7, r0
    58bc:	cmp	r4, r3
    58c0:	moveq	r1, r4
    58c4:	movwne	r1, #33011	; 0x80f3
    58c8:	ldreq	r0, [pc, #784]	; 5be0 <gen_linktype+0x9e4>
    58cc:	movne	r0, #0
    58d0:	bl	3844 <gen_snap>
    58d4:	mov	r1, r0
    58d8:	mov	r5, r0
    58dc:	mov	r0, r7
    58e0:	bl	2c48 <sf_gen_and>
    58e4:	mov	r3, r4
    58e8:	b	5884 <gen_linktype+0x688>
    58ec:	mov	r3, r4
    58f0:	mov	r2, #8
    58f4:	mov	r1, r6
    58f8:	mov	r0, #1
    58fc:	b	52f4 <gen_linktype+0xf8>
    5900:	mov	r3, #240	; 0xf0
    5904:	str	r3, [sp]
    5908:	mov	r3, #64	; 0x40
    590c:	mov	r2, #16
    5910:	mov	r1, #0
    5914:	mov	r0, #1
    5918:	bl	3e80 <gen_mcmp>
    591c:	mov	r5, r0
    5920:	b	52c0 <gen_linktype+0xc4>
    5924:	mov	r3, #240	; 0xf0
    5928:	str	r3, [sp]
    592c:	mov	r3, #96	; 0x60
    5930:	b	590c <gen_linktype+0x710>
    5934:	cmp	r0, #2048	; 0x800
    5938:	bne	539c <gen_linktype+0x1a0>
    593c:	add	sp, sp, #12
    5940:	pop	{r4, r5, r6, r7, lr}
    5944:	b	1fd0 <gen_true>
    5948:	mov	r0, r4
    594c:	bl	1d88 <ethertype_to_ppptype>
    5950:	ldr	r1, [pc, #652]	; 5be4 <gen_linktype+0x9e8>
    5954:	mov	r3, r0
    5958:	mov	r2, #8
    595c:	add	r1, pc, r1
    5960:	b	541c <gen_linktype+0x220>
    5964:	ldr	r3, [pc, #636]	; 5be8 <gen_linktype+0x9ec>
    5968:	cmp	r0, #2048	; 0x800
    596c:	add	r3, pc, r3
    5970:	ldr	r5, [r3, #944]	; 0x3b0
    5974:	bne	59d8 <gen_linktype+0x7dc>
    5978:	mov	r1, r5
    597c:	mov	r3, #33	; 0x21
    5980:	mov	r2, #8
    5984:	mov	r0, #1
    5988:	bl	371c <gen_cmp>
    598c:	mov	r6, r0
    5990:	mov	r3, #45	; 0x2d
    5994:	mov	r2, #8
    5998:	mov	r1, r5
    599c:	mov	r0, #1
    59a0:	bl	371c <gen_cmp>
    59a4:	mov	r1, r0
    59a8:	mov	r4, r0
    59ac:	mov	r0, r6
    59b0:	bl	2cc8 <sf_gen_or>
    59b4:	mov	r1, r5
    59b8:	mov	r3, #47	; 0x2f
    59bc:	mov	r2, #8
    59c0:	mov	r0, #1
    59c4:	bl	371c <gen_cmp>
    59c8:	mov	r5, r0
    59cc:	mov	r1, r5
    59d0:	mov	r0, r4
    59d4:	b	5898 <gen_linktype+0x69c>
    59d8:	bl	1d88 <ethertype_to_ppptype>
    59dc:	mov	r3, r0
    59e0:	mov	r2, #8
    59e4:	mov	r1, r5
    59e8:	b	58f8 <gen_linktype+0x6fc>
    59ec:	mov	r3, #2
    59f0:	b	5364 <gen_linktype+0x168>
    59f4:	movw	r3, #32923	; 0x809b
    59f8:	cmp	r4, r3
    59fc:	beq	5a7c <gen_linktype+0x880>
    5a00:	movw	r3, #34525	; 0x86dd
    5a04:	cmp	r4, r3
    5a08:	bne	539c <gen_linktype+0x1a0>
    5a0c:	ldr	r1, [pc, #472]	; 5bec <gen_linktype+0x9f0>
    5a10:	mov	r3, #196	; 0xc4
    5a14:	mov	r2, #16
    5a18:	add	r1, pc, r1
    5a1c:	b	541c <gen_linktype+0x220>
    5a20:	ldr	r3, [pc, #456]	; 5bf0 <gen_linktype+0x9f4>
    5a24:	mov	r2, #16
    5a28:	mov	r0, #1
    5a2c:	add	r3, pc, r3
    5a30:	ldr	r4, [r3, #944]	; 0x3b0
    5a34:	mov	r3, #212	; 0xd4
    5a38:	mov	r1, r4
    5a3c:	bl	371c <gen_cmp>
    5a40:	mov	r6, r0
    5a44:	mov	r3, #240	; 0xf0
    5a48:	mov	r1, r4
    5a4c:	mov	r2, #16
    5a50:	mov	r0, #1
    5a54:	bl	371c <gen_cmp>
    5a58:	mov	r5, r0
    5a5c:	mov	r1, r0
    5a60:	mov	r0, r6
    5a64:	b	5898 <gen_linktype+0x69c>
    5a68:	ldr	r1, [pc, #388]	; 5bf4 <gen_linktype+0x9f8>
    5a6c:	mov	r3, #214	; 0xd6
    5a70:	mov	r2, #16
    5a74:	add	r1, pc, r1
    5a78:	b	541c <gen_linktype+0x220>
    5a7c:	ldr	r1, [pc, #372]	; 5bf8 <gen_linktype+0x9fc>
    5a80:	mov	r3, #221	; 0xdd
    5a84:	mov	r2, #16
    5a88:	add	r1, pc, r1
    5a8c:	b	541c <gen_linktype+0x220>
    5a90:	cmp	r0, #2048	; 0x800
    5a94:	beq	5b04 <gen_linktype+0x908>
    5a98:	movw	r3, #34525	; 0x86dd
    5a9c:	cmp	r0, r3
    5aa0:	beq	5b14 <gen_linktype+0x918>
    5aa4:	cmp	r0, #254	; 0xfe
    5aa8:	bne	539c <gen_linktype+0x1a0>
    5aac:	movw	r3, #897	; 0x381
    5ab0:	mov	r2, #8
    5ab4:	mov	r1, #2
    5ab8:	mov	r0, #1
    5abc:	bl	371c <gen_cmp>
    5ac0:	mov	r4, r0
    5ac4:	movw	r3, #898	; 0x382
    5ac8:	mov	r2, #8
    5acc:	mov	r1, #2
    5ad0:	mov	r0, #1
    5ad4:	bl	371c <gen_cmp>
    5ad8:	mov	r6, r0
    5adc:	movw	r3, #899	; 0x383
    5ae0:	mov	r2, #8
    5ae4:	mov	r1, #2
    5ae8:	mov	r0, #1
    5aec:	bl	371c <gen_cmp>
    5af0:	mov	r5, r0
    5af4:	mov	r1, r0
    5af8:	mov	r0, r6
    5afc:	bl	2cc8 <sf_gen_or>
    5b00:	b	59cc <gen_linktype+0x7d0>
    5b04:	mov	r3, #972	; 0x3cc
    5b08:	mov	r2, #8
    5b0c:	mov	r1, #2
    5b10:	b	58f8 <gen_linktype+0x6fc>
    5b14:	movw	r3, #910	; 0x38e
    5b18:	b	5b08 <gen_linktype+0x90c>
    5b1c:	ldr	r0, [pc, #216]	; 5bfc <gen_linktype+0xa00>
    5b20:	add	r0, pc, r0
    5b24:	b	5234 <gen_linktype+0x38>
    5b28:	ldr	r1, [pc, #208]	; 5c00 <gen_linktype+0xa04>
    5b2c:	mov	r3, #2
    5b30:	mov	r2, #16
    5b34:	add	r1, pc, r1
    5b38:	b	541c <gen_linktype+0x220>
    5b3c:	ldr	r0, [pc, #192]	; 5c04 <gen_linktype+0xa08>
    5b40:	add	r0, pc, r0
    5b44:	b	5234 <gen_linktype+0x38>
    5b48:	ldr	r0, [pc, #184]	; 5c08 <gen_linktype+0xa0c>
    5b4c:	add	r0, pc, r0
    5b50:	b	5234 <gen_linktype+0x38>
    5b54:	ldr	r0, [pc, #176]	; 5c0c <gen_linktype+0xa10>
    5b58:	add	r0, pc, r0
    5b5c:	b	5234 <gen_linktype+0x38>
    5b60:	ldr	r0, [pc, #168]	; 5c10 <gen_linktype+0xa14>
    5b64:	add	r0, pc, r0
    5b68:	b	5234 <gen_linktype+0x38>
    5b6c:	ldr	r0, [pc, #160]	; 5c14 <gen_linktype+0xa18>
    5b70:	add	r0, pc, r0
    5b74:	b	5234 <gen_linktype+0x38>
    5b78:	ldr	r0, [pc, #152]	; 5c18 <gen_linktype+0xa1c>
    5b7c:	add	r0, pc, r0
    5b80:	b	5234 <gen_linktype+0x38>
    5b84:	ldr	r0, [pc, #144]	; 5c1c <gen_linktype+0xa20>
    5b88:	add	r0, pc, r0
    5b8c:	b	5234 <gen_linktype+0x38>
    5b90:	ldr	r0, [pc, #136]	; 5c20 <gen_linktype+0xa24>
    5b94:	add	r0, pc, r0
    5b98:	b	5234 <gen_linktype+0x38>
    5b9c:	ldr	r0, [pc, #128]	; 5c24 <gen_linktype+0xa28>
    5ba0:	add	r0, pc, r0
    5ba4:	b	5234 <gen_linktype+0x38>
    5ba8:	.word	0x0002806c
    5bac:	.word	0x0000a69f
    5bb0:	.word	0x00028090
    5bb4:	.word	0x00027f90
    5bb8:	.word	0x00027f48
    5bbc:	.word	0x00027e98
    5bc0:	.word	0x0000a45a
    5bc4:	.word	0x4d474300
    5bc8:	.word	0x0000a480
    5bcc:	.word	0x0000a483
    5bd0:	.word	0x0000a4cf
    5bd4:	.word	0x0000a584
    5bd8:	.word	0x00027d0c
    5bdc:	.word	0x00027ba8
    5be0:	.word	0x00080007
    5be4:	.word	0x00027a04
    5be8:	.word	0x000279f4
    5bec:	.word	0x00027948
    5bf0:	.word	0x00027934
    5bf4:	.word	0x000278ec
    5bf8:	.word	0x000278d8
    5bfc:	.word	0x00009dce
    5c00:	.word	0x0002782c
    5c04:	.word	0x00009def
    5c08:	.word	0x00009e43
    5c0c:	.word	0x00009e66
    5c10:	.word	0x00009ee5
    5c14:	.word	0x00009f0d
    5c18:	.word	0x00009f67
    5c1c:	.word	0x00009f91
    5c20:	.word	0x00009fb4
    5c24:	.word	0x0000a007

00005c28 <gen_proto>:
    5c28:	cmp	r2, #0
    5c2c:	push	{r4, r5, r6, lr}
    5c30:	beq	5c40 <gen_proto+0x18>
    5c34:	ldr	r0, [pc, #744]	; 5f24 <gen_proto+0x2fc>
    5c38:	add	r0, pc, r0
    5c3c:	bl	1e54 <sf_bpf_error>
    5c40:	mov	r4, r0
    5c44:	cmp	r1, #40	; 0x28
    5c48:	addls	pc, pc, r1, lsl #2
    5c4c:	b	5f20 <gen_proto+0x2f8>
    5c50:	b	5cf4 <gen_proto+0xcc>
    5c54:	b	5e54 <gen_proto+0x22c>
    5c58:	b	5d2c <gen_proto+0x104>
    5c5c:	b	5df4 <gen_proto+0x1cc>
    5c60:	b	5e00 <gen_proto+0x1d8>
    5c64:	b	5e74 <gen_proto+0x24c>
    5c68:	b	5e68 <gen_proto+0x240>
    5c6c:	b	5e5c <gen_proto+0x234>
    5c70:	b	5e80 <gen_proto+0x258>
    5c74:	b	5e8c <gen_proto+0x264>
    5c78:	b	5e98 <gen_proto+0x270>
    5c7c:	b	5e0c <gen_proto+0x1e4>
    5c80:	b	5e18 <gen_proto+0x1f0>
    5c84:	b	5e30 <gen_proto+0x208>
    5c88:	b	5e24 <gen_proto+0x1fc>
    5c8c:	b	5e3c <gen_proto+0x214>
    5c90:	b	5e48 <gen_proto+0x220>
    5c94:	b	5ebc <gen_proto+0x294>
    5c98:	b	5ed8 <gen_proto+0x2b0>
    5c9c:	b	5ee4 <gen_proto+0x2bc>
    5ca0:	b	5ee4 <gen_proto+0x2bc>
    5ca4:	b	5ea4 <gen_proto+0x27c>
    5ca8:	b	5eb0 <gen_proto+0x288>
    5cac:	b	5f20 <gen_proto+0x2f8>
    5cb0:	b	5d4c <gen_proto+0x124>
    5cb4:	b	5f20 <gen_proto+0x2f8>
    5cb8:	b	5dd0 <gen_proto+0x1a8>
    5cbc:	b	5f20 <gen_proto+0x2f8>
    5cc0:	b	5ef0 <gen_proto+0x2c8>
    5cc4:	b	5efc <gen_proto+0x2d4>
    5cc8:	b	5f08 <gen_proto+0x2e0>
    5ccc:	b	5f20 <gen_proto+0x2f8>
    5cd0:	b	5f20 <gen_proto+0x2f8>
    5cd4:	b	5f20 <gen_proto+0x2f8>
    5cd8:	b	5f20 <gen_proto+0x2f8>
    5cdc:	b	5f20 <gen_proto+0x2f8>
    5ce0:	b	5f20 <gen_proto+0x2f8>
    5ce4:	b	5f20 <gen_proto+0x2f8>
    5ce8:	b	5f20 <gen_proto+0x2f8>
    5cec:	b	5f20 <gen_proto+0x2f8>
    5cf0:	b	5f14 <gen_proto+0x2ec>
    5cf4:	mov	r2, #0
    5cf8:	mov	r1, #2
    5cfc:	bl	5c28 <gen_proto>
    5d00:	mov	r5, r0
    5d04:	mov	r1, #17
    5d08:	mov	r0, r4
    5d0c:	mov	r2, #0
    5d10:	bl	5c28 <gen_proto>
    5d14:	mov	r4, r0
    5d18:	mov	r1, r0
    5d1c:	mov	r0, r5
    5d20:	bl	2cc8 <sf_gen_or>
    5d24:	mov	r0, r4
    5d28:	pop	{r4, r5, r6, pc}
    5d2c:	mov	r0, #2048	; 0x800
    5d30:	bl	51fc <gen_linktype>
    5d34:	mov	r5, r0
    5d38:	mov	r3, r4
    5d3c:	mov	r2, #16
    5d40:	mov	r1, #9
    5d44:	mov	r0, #3
    5d48:	b	5d9c <gen_proto+0x174>
    5d4c:	ldr	r3, [pc, #468]	; 5f28 <gen_proto+0x300>
    5d50:	add	r3, pc, r3
    5d54:	ldr	r3, [r3, #856]	; 0x358
    5d58:	cmp	r3, #104	; 0x68
    5d5c:	beq	5d80 <gen_proto+0x158>
    5d60:	cmp	r3, #107	; 0x6b
    5d64:	bne	5db4 <gen_proto+0x18c>
    5d68:	orr	r3, r0, #768	; 0x300
    5d6c:	mov	r2, #8
    5d70:	pop	{r4, r5, r6, lr}
    5d74:	mov	r1, #2
    5d78:	mov	r0, #1
    5d7c:	b	371c <gen_cmp>
    5d80:	movw	r0, #65278	; 0xfefe
    5d84:	bl	51fc <gen_linktype>
    5d88:	mov	r5, r0
    5d8c:	mov	r3, r4
    5d90:	mov	r2, #16
    5d94:	mov	r1, #1
    5d98:	mov	r0, #4
    5d9c:	bl	371c <gen_cmp>
    5da0:	mov	r4, r0
    5da4:	mov	r1, r0
    5da8:	mov	r0, r5
    5dac:	bl	2c48 <sf_gen_and>
    5db0:	b	5d24 <gen_proto+0xfc>
    5db4:	mov	r0, #254	; 0xfe
    5db8:	bl	51fc <gen_linktype>
    5dbc:	mov	r5, r0
    5dc0:	mov	r3, r4
    5dc4:	mov	r2, #16
    5dc8:	mov	r1, #0
    5dcc:	b	5d98 <gen_proto+0x170>
    5dd0:	mov	r2, #0
    5dd4:	mov	r1, #24
    5dd8:	mov	r0, #131	; 0x83
    5ddc:	bl	5c28 <gen_proto>
    5de0:	mov	r5, r0
    5de4:	mov	r3, r4
    5de8:	mov	r2, #16
    5dec:	mov	r1, #4
    5df0:	b	5d98 <gen_proto+0x170>
    5df4:	ldr	r0, [pc, #304]	; 5f2c <gen_proto+0x304>
    5df8:	add	r0, pc, r0
    5dfc:	b	5c3c <gen_proto+0x14>
    5e00:	ldr	r0, [pc, #296]	; 5f30 <gen_proto+0x308>
    5e04:	add	r0, pc, r0
    5e08:	b	5c3c <gen_proto+0x14>
    5e0c:	ldr	r0, [pc, #288]	; 5f34 <gen_proto+0x30c>
    5e10:	add	r0, pc, r0
    5e14:	b	5c3c <gen_proto+0x14>
    5e18:	ldr	r0, [pc, #280]	; 5f38 <gen_proto+0x310>
    5e1c:	add	r0, pc, r0
    5e20:	b	5c3c <gen_proto+0x14>
    5e24:	ldr	r0, [pc, #272]	; 5f3c <gen_proto+0x314>
    5e28:	add	r0, pc, r0
    5e2c:	b	5c3c <gen_proto+0x14>
    5e30:	ldr	r0, [pc, #264]	; 5f40 <gen_proto+0x318>
    5e34:	add	r0, pc, r0
    5e38:	b	5c3c <gen_proto+0x14>
    5e3c:	ldr	r0, [pc, #256]	; 5f44 <gen_proto+0x31c>
    5e40:	add	r0, pc, r0
    5e44:	b	5c3c <gen_proto+0x14>
    5e48:	ldr	r0, [pc, #248]	; 5f48 <gen_proto+0x320>
    5e4c:	add	r0, pc, r0
    5e50:	b	5c3c <gen_proto+0x14>
    5e54:	pop	{r4, r5, r6, lr}
    5e58:	b	51fc <gen_linktype>
    5e5c:	ldr	r0, [pc, #232]	; 5f4c <gen_proto+0x324>
    5e60:	add	r0, pc, r0
    5e64:	b	5c3c <gen_proto+0x14>
    5e68:	ldr	r0, [pc, #224]	; 5f50 <gen_proto+0x328>
    5e6c:	add	r0, pc, r0
    5e70:	b	5c3c <gen_proto+0x14>
    5e74:	ldr	r0, [pc, #216]	; 5f54 <gen_proto+0x32c>
    5e78:	add	r0, pc, r0
    5e7c:	b	5c3c <gen_proto+0x14>
    5e80:	ldr	r0, [pc, #208]	; 5f58 <gen_proto+0x330>
    5e84:	add	r0, pc, r0
    5e88:	b	5c3c <gen_proto+0x14>
    5e8c:	ldr	r0, [pc, #200]	; 5f5c <gen_proto+0x334>
    5e90:	add	r0, pc, r0
    5e94:	b	5c3c <gen_proto+0x14>
    5e98:	ldr	r0, [pc, #192]	; 5f60 <gen_proto+0x338>
    5e9c:	add	r0, pc, r0
    5ea0:	b	5c3c <gen_proto+0x14>
    5ea4:	ldr	r0, [pc, #184]	; 5f64 <gen_proto+0x33c>
    5ea8:	add	r0, pc, r0
    5eac:	b	5c3c <gen_proto+0x14>
    5eb0:	ldr	r0, [pc, #176]	; 5f68 <gen_proto+0x340>
    5eb4:	add	r0, pc, r0
    5eb8:	b	5c3c <gen_proto+0x14>
    5ebc:	movw	r0, #34525	; 0x86dd
    5ec0:	bl	51fc <gen_linktype>
    5ec4:	mov	r5, r0
    5ec8:	mov	r3, r4
    5ecc:	mov	r2, #16
    5ed0:	mov	r1, #6
    5ed4:	b	5d44 <gen_proto+0x11c>
    5ed8:	ldr	r0, [pc, #140]	; 5f6c <gen_proto+0x344>
    5edc:	add	r0, pc, r0
    5ee0:	b	5c3c <gen_proto+0x14>
    5ee4:	ldr	r0, [pc, #132]	; 5f70 <gen_proto+0x348>
    5ee8:	add	r0, pc, r0
    5eec:	b	5c3c <gen_proto+0x14>
    5ef0:	ldr	r0, [pc, #124]	; 5f74 <gen_proto+0x34c>
    5ef4:	add	r0, pc, r0
    5ef8:	b	5c3c <gen_proto+0x14>
    5efc:	ldr	r0, [pc, #116]	; 5f78 <gen_proto+0x350>
    5f00:	add	r0, pc, r0
    5f04:	b	5c3c <gen_proto+0x14>
    5f08:	ldr	r0, [pc, #108]	; 5f7c <gen_proto+0x354>
    5f0c:	add	r0, pc, r0
    5f10:	b	5c3c <gen_proto+0x14>
    5f14:	ldr	r0, [pc, #100]	; 5f80 <gen_proto+0x358>
    5f18:	add	r0, pc, r0
    5f1c:	b	5c3c <gen_proto+0x14>
    5f20:	bl	ee8 <abort@plt>
    5f24:	.word	0x00009f9f
    5f28:	.word	0x00027610
    5f2c:	.word	0x00009dfd
    5f30:	.word	0x00009df0
    5f34:	.word	0x00009e0f
    5f38:	.word	0x00009e2a
    5f3c:	.word	0x00009e46
    5f40:	.word	0x00009e64
    5f44:	.word	0x00009e82
    5f48:	.word	0x00009ea2
    5f4c:	.word	0x00009eba
    5f50:	.word	0x00009ec3
    5f54:	.word	0x00009ecc
    5f58:	.word	0x00009ed6
    5f5c:	.word	0x00009ee0
    5f60:	.word	0x00009eea
    5f64:	.word	0x00009ef4
    5f68:	.word	0x00009efd
    5f6c:	.word	0x00009eeb
    5f70:	.word	0x00009ef6
    5f74:	.word	0x00009efe
    5f78:	.word	0x00009f07
    5f7c:	.word	0x00009f10
    5f80:	.word	0x00009f1d

00005f84 <sf_gen_proto_abbrev>:
    5f84:	sub	r0, r0, #1
    5f88:	push	{r4, r5, r6, lr}
    5f8c:	cmp	r0, #39	; 0x27
    5f90:	addls	pc, pc, r0, lsl #2
    5f94:	b	6420 <sf_gen_proto_abbrev+0x49c>
    5f98:	b	6138 <sf_gen_proto_abbrev+0x1b4>
    5f9c:	b	611c <sf_gen_proto_abbrev+0x198>
    5fa0:	b	6128 <sf_gen_proto_abbrev+0x1a4>
    5fa4:	b	6130 <sf_gen_proto_abbrev+0x1ac>
    5fa8:	b	6038 <sf_gen_proto_abbrev+0xb4>
    5fac:	b	606c <sf_gen_proto_abbrev+0xe8>
    5fb0:	b	6090 <sf_gen_proto_abbrev+0x10c>
    5fb4:	b	60b4 <sf_gen_proto_abbrev+0x130>
    5fb8:	b	60c8 <sf_gen_proto_abbrev+0x144>
    5fbc:	b	60d8 <sf_gen_proto_abbrev+0x154>
    5fc0:	b	6144 <sf_gen_proto_abbrev+0x1c0>
    5fc4:	b	6154 <sf_gen_proto_abbrev+0x1d0>
    5fc8:	b	6164 <sf_gen_proto_abbrev+0x1e0>
    5fcc:	b	615c <sf_gen_proto_abbrev+0x1d8>
    5fd0:	b	6174 <sf_gen_proto_abbrev+0x1f0>
    5fd4:	b	616c <sf_gen_proto_abbrev+0x1e8>
    5fd8:	b	617c <sf_gen_proto_abbrev+0x1f8>
    5fdc:	b	6184 <sf_gen_proto_abbrev+0x200>
    5fe0:	b	6194 <sf_gen_proto_abbrev+0x210>
    5fe4:	b	61b8 <sf_gen_proto_abbrev+0x234>
    5fe8:	b	60e8 <sf_gen_proto_abbrev+0x164>
    5fec:	b	610c <sf_gen_proto_abbrev+0x188>
    5ff0:	b	614c <sf_gen_proto_abbrev+0x1c8>
    5ff4:	b	61dc <sf_gen_proto_abbrev+0x258>
    5ff8:	b	61e4 <sf_gen_proto_abbrev+0x260>
    5ffc:	b	61f4 <sf_gen_proto_abbrev+0x270>
    6000:	b	63ec <sf_gen_proto_abbrev+0x468>
    6004:	b	63fc <sf_gen_proto_abbrev+0x478>
    6008:	b	6404 <sf_gen_proto_abbrev+0x480>
    600c:	b	640c <sf_gen_proto_abbrev+0x488>
    6010:	b	6204 <sf_gen_proto_abbrev+0x280>
    6014:	b	6278 <sf_gen_proto_abbrev+0x2f4>
    6018:	b	62ec <sf_gen_proto_abbrev+0x368>
    601c:	b	6420 <sf_gen_proto_abbrev+0x49c>
    6020:	b	6420 <sf_gen_proto_abbrev+0x49c>
    6024:	b	6360 <sf_gen_proto_abbrev+0x3dc>
    6028:	b	63a4 <sf_gen_proto_abbrev+0x420>
    602c:	b	63c8 <sf_gen_proto_abbrev+0x444>
    6030:	b	632c <sf_gen_proto_abbrev+0x3a8>
    6034:	b	6414 <sf_gen_proto_abbrev+0x490>
    6038:	mov	r2, #0
    603c:	mov	r1, #2
    6040:	mov	r0, #132	; 0x84
    6044:	bl	5c28 <gen_proto>
    6048:	mov	r4, r0
    604c:	mov	r2, #0
    6050:	mov	r1, #17
    6054:	mov	r0, #132	; 0x84
    6058:	bl	5c28 <gen_proto>
    605c:	mov	r1, r4
    6060:	bl	2cc8 <sf_gen_or>
    6064:	mov	r0, r4
    6068:	pop	{r4, r5, r6, pc}
    606c:	mov	r2, #0
    6070:	mov	r1, #2
    6074:	mov	r0, #6
    6078:	bl	5c28 <gen_proto>
    607c:	mov	r4, r0
    6080:	mov	r2, #0
    6084:	mov	r1, #17
    6088:	mov	r0, #6
    608c:	b	6058 <sf_gen_proto_abbrev+0xd4>
    6090:	mov	r2, #0
    6094:	mov	r1, #2
    6098:	mov	r0, #17
    609c:	bl	5c28 <gen_proto>
    60a0:	mov	r4, r0
    60a4:	mov	r2, #0
    60a8:	mov	r1, #17
    60ac:	mov	r0, #17
    60b0:	b	6058 <sf_gen_proto_abbrev+0xd4>
    60b4:	mov	r2, #0
    60b8:	mov	r1, #2
    60bc:	mov	r0, #1
    60c0:	pop	{r4, r5, r6, lr}
    60c4:	b	5c28 <gen_proto>
    60c8:	mov	r1, #2
    60cc:	mov	r2, #0
    60d0:	mov	r0, r1
    60d4:	b	60c0 <sf_gen_proto_abbrev+0x13c>
    60d8:	mov	r2, #0
    60dc:	mov	r1, #2
    60e0:	mov	r0, #9
    60e4:	b	60c0 <sf_gen_proto_abbrev+0x13c>
    60e8:	mov	r2, #0
    60ec:	mov	r1, #2
    60f0:	mov	r0, #103	; 0x67
    60f4:	bl	5c28 <gen_proto>
    60f8:	mov	r4, r0
    60fc:	mov	r2, #0
    6100:	mov	r1, #17
    6104:	mov	r0, #103	; 0x67
    6108:	b	6058 <sf_gen_proto_abbrev+0xd4>
    610c:	mov	r2, #0
    6110:	mov	r1, #2
    6114:	mov	r0, #112	; 0x70
    6118:	b	60c0 <sf_gen_proto_abbrev+0x13c>
    611c:	mov	r0, #2048	; 0x800
    6120:	pop	{r4, r5, r6, lr}
    6124:	b	51fc <gen_linktype>
    6128:	movw	r0, #2054	; 0x806
    612c:	b	6120 <sf_gen_proto_abbrev+0x19c>
    6130:	movw	r0, #32821	; 0x8035
    6134:	b	6120 <sf_gen_proto_abbrev+0x19c>
    6138:	ldr	r0, [pc, #740]	; 6424 <sf_gen_proto_abbrev+0x4a0>
    613c:	add	r0, pc, r0
    6140:	bl	1e54 <sf_bpf_error>
    6144:	movw	r0, #32923	; 0x809b
    6148:	b	6120 <sf_gen_proto_abbrev+0x19c>
    614c:	movw	r0, #33011	; 0x80f3
    6150:	b	6120 <sf_gen_proto_abbrev+0x19c>
    6154:	movw	r0, #24579	; 0x6003
    6158:	b	6120 <sf_gen_proto_abbrev+0x19c>
    615c:	movw	r0, #24583	; 0x6007
    6160:	b	6120 <sf_gen_proto_abbrev+0x19c>
    6164:	movw	r0, #24580	; 0x6004
    6168:	b	6120 <sf_gen_proto_abbrev+0x19c>
    616c:	movw	r0, #24577	; 0x6001
    6170:	b	6120 <sf_gen_proto_abbrev+0x19c>
    6174:	movw	r0, #24578	; 0x6002
    6178:	b	6120 <sf_gen_proto_abbrev+0x19c>
    617c:	movw	r0, #34525	; 0x86dd
    6180:	b	6120 <sf_gen_proto_abbrev+0x19c>
    6184:	mov	r2, #0
    6188:	mov	r1, #17
    618c:	mov	r0, #58	; 0x3a
    6190:	b	60c0 <sf_gen_proto_abbrev+0x13c>
    6194:	mov	r2, #0
    6198:	mov	r1, #2
    619c:	mov	r0, #51	; 0x33
    61a0:	bl	5c28 <gen_proto>
    61a4:	mov	r4, r0
    61a8:	mov	r2, #0
    61ac:	mov	r1, #17
    61b0:	mov	r0, #51	; 0x33
    61b4:	b	6058 <sf_gen_proto_abbrev+0xd4>
    61b8:	mov	r2, #0
    61bc:	mov	r1, #2
    61c0:	mov	r0, #50	; 0x32
    61c4:	bl	5c28 <gen_proto>
    61c8:	mov	r4, r0
    61cc:	mov	r2, #0
    61d0:	mov	r1, #17
    61d4:	mov	r0, #50	; 0x32
    61d8:	b	6058 <sf_gen_proto_abbrev+0xd4>
    61dc:	mov	r0, #254	; 0xfe
    61e0:	b	6120 <sf_gen_proto_abbrev+0x19c>
    61e4:	mov	r2, #0
    61e8:	mov	r1, #24
    61ec:	mov	r0, #130	; 0x82
    61f0:	b	60c0 <sf_gen_proto_abbrev+0x13c>
    61f4:	mov	r2, #0
    61f8:	mov	r1, #24
    61fc:	mov	r0, #131	; 0x83
    6200:	b	60c0 <sf_gen_proto_abbrev+0x13c>
    6204:	mov	r2, #0
    6208:	mov	r1, #26
    620c:	mov	r0, #15
    6210:	bl	5c28 <gen_proto>
    6214:	mov	r5, r0
    6218:	mov	r2, #0
    621c:	mov	r1, #26
    6220:	mov	r0, #17
    6224:	bl	5c28 <gen_proto>
    6228:	mov	r4, r0
    622c:	mov	r1, r0
    6230:	mov	r0, r5
    6234:	bl	2cc8 <sf_gen_or>
    6238:	mov	r2, #0
    623c:	mov	r1, #26
    6240:	mov	r0, #18
    6244:	bl	5c28 <gen_proto>
    6248:	mov	r1, r4
    624c:	bl	2cc8 <sf_gen_or>
    6250:	mov	r2, #0
    6254:	mov	r1, #26
    6258:	mov	r0, #24
    625c:	bl	5c28 <gen_proto>
    6260:	mov	r1, r4
    6264:	bl	2cc8 <sf_gen_or>
    6268:	mov	r1, #26
    626c:	mov	r2, #0
    6270:	mov	r0, r1
    6274:	b	6058 <sf_gen_proto_abbrev+0xd4>
    6278:	mov	r2, #0
    627c:	mov	r1, #26
    6280:	mov	r0, #16
    6284:	bl	5c28 <gen_proto>
    6288:	mov	r5, r0
    628c:	mov	r2, #0
    6290:	mov	r1, #26
    6294:	mov	r0, #17
    6298:	bl	5c28 <gen_proto>
    629c:	mov	r1, r0
    62a0:	mov	r4, r0
    62a4:	mov	r0, r5
    62a8:	bl	2cc8 <sf_gen_or>
    62ac:	mov	r2, #0
    62b0:	mov	r1, #26
    62b4:	mov	r0, #20
    62b8:	bl	5c28 <gen_proto>
    62bc:	mov	r1, r4
    62c0:	bl	2cc8 <sf_gen_or>
    62c4:	mov	r2, #0
    62c8:	mov	r1, #26
    62cc:	mov	r0, #25
    62d0:	bl	5c28 <gen_proto>
    62d4:	mov	r1, r4
    62d8:	bl	2cc8 <sf_gen_or>
    62dc:	mov	r2, #0
    62e0:	mov	r1, #26
    62e4:	mov	r0, #27
    62e8:	b	6058 <sf_gen_proto_abbrev+0xd4>
    62ec:	mov	r2, #0
    62f0:	mov	r1, #26
    62f4:	mov	r0, #15
    62f8:	bl	5c28 <gen_proto>
    62fc:	mov	r5, r0
    6300:	mov	r2, #0
    6304:	mov	r1, #26
    6308:	mov	r0, #16
    630c:	bl	5c28 <gen_proto>
    6310:	mov	r1, r0
    6314:	mov	r4, r0
    6318:	mov	r0, r5
    631c:	bl	2cc8 <sf_gen_or>
    6320:	mov	r2, #0
    6324:	mov	r1, #26
    6328:	b	60ac <sf_gen_proto_abbrev+0x128>
    632c:	mov	r2, #0
    6330:	mov	r1, #26
    6334:	mov	r0, #18
    6338:	bl	5c28 <gen_proto>
    633c:	mov	r5, r0
    6340:	mov	r2, #0
    6344:	mov	r1, #26
    6348:	mov	r0, #20
    634c:	bl	5c28 <gen_proto>
    6350:	mov	r4, r0
    6354:	mov	r1, r0
    6358:	mov	r0, r5
    635c:	b	6060 <sf_gen_proto_abbrev+0xdc>
    6360:	mov	r2, #0
    6364:	mov	r1, #26
    6368:	mov	r0, #24
    636c:	bl	5c28 <gen_proto>
    6370:	mov	r5, r0
    6374:	mov	r2, #0
    6378:	mov	r1, #26
    637c:	mov	r0, #25
    6380:	bl	5c28 <gen_proto>
    6384:	mov	r1, r0
    6388:	mov	r4, r0
    638c:	mov	r0, r5
    6390:	bl	2cc8 <sf_gen_or>
    6394:	mov	r1, #26
    6398:	mov	r2, #0
    639c:	mov	r0, r1
    63a0:	b	62d0 <sf_gen_proto_abbrev+0x34c>
    63a4:	mov	r2, #0
    63a8:	mov	r1, #26
    63ac:	mov	r0, #24
    63b0:	bl	5c28 <gen_proto>
    63b4:	mov	r5, r0
    63b8:	mov	r2, #0
    63bc:	mov	r1, #26
    63c0:	mov	r0, #25
    63c4:	b	634c <sf_gen_proto_abbrev+0x3c8>
    63c8:	mov	r1, #26
    63cc:	mov	r2, #0
    63d0:	mov	r0, r1
    63d4:	bl	5c28 <gen_proto>
    63d8:	mov	r5, r0
    63dc:	mov	r2, #0
    63e0:	mov	r1, #26
    63e4:	mov	r0, #27
    63e8:	b	634c <sf_gen_proto_abbrev+0x3c8>
    63ec:	mov	r2, #0
    63f0:	mov	r1, #24
    63f4:	mov	r0, #129	; 0x81
    63f8:	b	60c0 <sf_gen_proto_abbrev+0x13c>
    63fc:	mov	r0, #66	; 0x42
    6400:	b	6120 <sf_gen_proto_abbrev+0x19c>
    6404:	mov	r0, #224	; 0xe0
    6408:	b	6120 <sf_gen_proto_abbrev+0x19c>
    640c:	mov	r0, #240	; 0xf0
    6410:	b	6120 <sf_gen_proto_abbrev+0x19c>
    6414:	ldr	r0, [pc, #12]	; 6428 <sf_gen_proto_abbrev+0x4a4>
    6418:	add	r0, pc, r0
    641c:	b	6140 <sf_gen_proto_abbrev+0x1bc>
    6420:	bl	ee8 <abort@plt>
    6424:	.word	0x00009d10
    6428:	.word	0x00009a58

0000642c <sf_gen_load>:
    642c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    6430:	mov	r7, r2
    6434:	mov	r4, r1
    6438:	mov	r5, r0
    643c:	mov	r6, #0
    6440:	bl	1ff8 <alloc_reg>
    6444:	ldr	r3, [pc, #772]	; 6750 <sf_gen_load+0x324>
    6448:	cmp	r7, #2
    644c:	mov	r8, r0
    6450:	ldr	r2, [r4, #8]
    6454:	add	r3, pc, r3
    6458:	add	r3, r3, r2, lsl #2
    645c:	str	r6, [r3, #788]	; 0x314
    6460:	beq	6480 <sf_gen_load+0x54>
    6464:	cmp	r7, #4
    6468:	beq	6484 <sf_gen_load+0x58>
    646c:	cmp	r7, #1
    6470:	beq	64c0 <sf_gen_load+0x94>
    6474:	ldr	r0, [pc, #728]	; 6754 <sf_gen_load+0x328>
    6478:	add	r0, pc, r0
    647c:	bl	1e54 <sf_bpf_error>
    6480:	mov	r6, #8
    6484:	cmp	r5, #17
    6488:	add	r7, r4, #8
    648c:	orr	r6, r6, #64	; 0x40
    6490:	bgt	64c8 <sf_gen_load+0x9c>
    6494:	cmp	r5, #11
    6498:	bge	65dc <sf_gen_load+0x1b0>
    649c:	cmp	r5, #4
    64a0:	bgt	6690 <sf_gen_load+0x264>
    64a4:	cmp	r5, #2
    64a8:	bge	65dc <sf_gen_load+0x1b0>
    64ac:	cmp	r5, #1
    64b0:	beq	6568 <sf_gen_load+0x13c>
    64b4:	ldr	r0, [pc, #668]	; 6758 <sf_gen_load+0x32c>
    64b8:	add	r0, pc, r0
    64bc:	b	647c <sf_gen_load+0x50>
    64c0:	mov	r6, #16
    64c4:	b	6484 <sf_gen_load+0x58>
    64c8:	cmp	r5, #22
    64cc:	bgt	64ec <sf_gen_load+0xc0>
    64d0:	cmp	r5, #21
    64d4:	bge	6690 <sf_gen_load+0x264>
    64d8:	cmp	r5, #18
    64dc:	bne	64b4 <sf_gen_load+0x88>
    64e0:	ldr	r0, [pc, #628]	; 675c <sf_gen_load+0x330>
    64e4:	add	r0, pc, r0
    64e8:	b	647c <sf_gen_load+0x50>
    64ec:	cmp	r5, #40	; 0x28
    64f0:	bne	64b4 <sf_gen_load+0x88>
    64f4:	ldr	r3, [pc, #612]	; 6760 <sf_gen_load+0x334>
    64f8:	add	r3, pc, r3
    64fc:	ldr	r3, [r3, #856]	; 0x358
    6500:	bic	r2, r3, #8
    6504:	cmp	r2, #119	; 0x77
    6508:	cmpne	r3, #163	; 0xa3
    650c:	ldrne	r0, [pc, #592]	; 6764 <sf_gen_load+0x338>
    6510:	addne	r0, pc, r0
    6514:	bne	647c <sf_gen_load+0x50>
    6518:	mov	r0, r7
    651c:	bl	1f98 <xfer_to_x.isra.0>
    6520:	mov	r5, r0
    6524:	mov	r0, r6
    6528:	bl	1f58 <new_stmt>
    652c:	mov	r1, r0
    6530:	mov	r0, r5
    6534:	bl	2d4c <sf_append>
    6538:	mov	r1, r5
    653c:	ldr	r0, [r4, #4]
    6540:	bl	2d4c <sf_append>
    6544:	mov	r0, #2
    6548:	str	r8, [r4, #8]
    654c:	bl	1f58 <new_stmt>
    6550:	mov	r1, r0
    6554:	str	r8, [r0, #12]
    6558:	ldr	r0, [r4, #4]
    655c:	bl	2d4c <sf_append>
    6560:	mov	r0, r4
    6564:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    6568:	bl	20e4 <gen_llprefixlen>
    656c:	subs	r5, r0, #0
    6570:	mov	r0, r7
    6574:	beq	65d0 <sf_gen_load+0x1a4>
    6578:	bl	1fb4 <xfer_to_a.isra.1>
    657c:	mov	r1, r0
    6580:	mov	r0, r5
    6584:	bl	2d4c <sf_append>
    6588:	mov	r0, #12
    658c:	bl	1f58 <new_stmt>
    6590:	mov	r1, r0
    6594:	mov	r0, r5
    6598:	bl	2d4c <sf_append>
    659c:	mov	r0, #7
    65a0:	bl	1f58 <new_stmt>
    65a4:	mov	r1, r0
    65a8:	mov	r0, r5
    65ac:	bl	2d4c <sf_append>
    65b0:	mov	r0, r6
    65b4:	bl	1f58 <new_stmt>
    65b8:	ldr	r3, [pc, #424]	; 6768 <sf_gen_load+0x33c>
    65bc:	mov	r1, r0
    65c0:	add	r3, pc, r3
    65c4:	ldr	r3, [r3, #936]	; 0x3a8
    65c8:	str	r3, [r0, #12]
    65cc:	b	6530 <sf_gen_load+0x104>
    65d0:	bl	1f98 <xfer_to_x.isra.0>
    65d4:	mov	r5, r0
    65d8:	b	65b0 <sf_gen_load+0x184>
    65dc:	bl	2130 <gen_off_macpl>
    65e0:	subs	r9, r0, #0
    65e4:	mov	r0, r7
    65e8:	beq	6684 <sf_gen_load+0x258>
    65ec:	bl	1fb4 <xfer_to_a.isra.1>
    65f0:	mov	r1, r0
    65f4:	mov	r0, r9
    65f8:	bl	2d4c <sf_append>
    65fc:	mov	r0, #12
    6600:	bl	1f58 <new_stmt>
    6604:	mov	r1, r0
    6608:	mov	r0, r9
    660c:	bl	2d4c <sf_append>
    6610:	mov	r0, #7
    6614:	bl	1f58 <new_stmt>
    6618:	mov	r1, r0
    661c:	mov	r0, r9
    6620:	bl	2d4c <sf_append>
    6624:	mov	r0, r6
    6628:	bl	1f58 <new_stmt>
    662c:	ldr	r2, [pc, #312]	; 676c <sf_gen_load+0x340>
    6630:	mov	r1, r0
    6634:	mov	r0, r9
    6638:	add	r2, pc, r2
    663c:	ldr	r3, [r2, #940]	; 0x3ac
    6640:	ldr	r2, [r2, #948]	; 0x3b4
    6644:	add	r3, r3, r2
    6648:	str	r3, [r1, #12]
    664c:	bl	2d4c <sf_append>
    6650:	mov	r1, r9
    6654:	ldr	r0, [r4, #4]
    6658:	bl	2d4c <sf_append>
    665c:	mov	r0, r5
    6660:	bl	5f84 <sf_gen_proto_abbrev>
    6664:	mov	r5, r0
    6668:	ldr	r0, [r4]
    666c:	cmp	r0, #0
    6670:	beq	667c <sf_gen_load+0x250>
    6674:	mov	r1, r5
    6678:	bl	2c48 <sf_gen_and>
    667c:	str	r5, [r4]
    6680:	b	6544 <sf_gen_load+0x118>
    6684:	bl	1f98 <xfer_to_x.isra.0>
    6688:	mov	r9, r0
    668c:	b	6624 <sf_gen_load+0x1f8>
    6690:	bl	3460 <gen_loadx_iphdrlen>
    6694:	mov	r9, r0
    6698:	mov	r0, r7
    669c:	bl	1fb4 <xfer_to_a.isra.1>
    66a0:	mov	r1, r0
    66a4:	mov	r0, r9
    66a8:	bl	2d4c <sf_append>
    66ac:	mov	r0, #12
    66b0:	bl	1f58 <new_stmt>
    66b4:	mov	r1, r0
    66b8:	mov	r0, r9
    66bc:	bl	2d4c <sf_append>
    66c0:	mov	r0, #7
    66c4:	bl	1f58 <new_stmt>
    66c8:	mov	r1, r0
    66cc:	mov	r0, r9
    66d0:	bl	2d4c <sf_append>
    66d4:	mov	r0, r6
    66d8:	bl	1f58 <new_stmt>
    66dc:	mov	r2, r0
    66e0:	mov	r1, r0
    66e4:	mov	r0, r9
    66e8:	bl	2d4c <sf_append>
    66ec:	ldr	r1, [pc, #124]	; 6770 <sf_gen_load+0x344>
    66f0:	add	r1, pc, r1
    66f4:	ldr	r3, [r1, #940]	; 0x3ac
    66f8:	ldr	r1, [r1, #948]	; 0x3b4
    66fc:	add	r3, r3, r1
    6700:	mov	r1, r9
    6704:	str	r3, [r2, #12]
    6708:	ldr	r0, [r4, #4]
    670c:	bl	2d4c <sf_append>
    6710:	mov	r0, r5
    6714:	bl	5f84 <sf_gen_proto_abbrev>
    6718:	mov	r6, r0
    671c:	bl	357c <gen_ipfrag>
    6720:	mov	r1, r0
    6724:	mov	r5, r0
    6728:	mov	r0, r6
    672c:	bl	2c48 <sf_gen_and>
    6730:	ldr	r0, [r4]
    6734:	cmp	r0, #0
    6738:	beq	6744 <sf_gen_load+0x318>
    673c:	mov	r1, r5
    6740:	bl	2c48 <sf_gen_and>
    6744:	mov	r0, #2
    6748:	bl	5f84 <sf_gen_proto_abbrev>
    674c:	b	6674 <sf_gen_load+0x248>
    6750:	.word	0x00026f0c
    6754:	.word	0x00009a1d
    6758:	.word	0x000099fa
    675c:	.word	0x00009a13
    6760:	.word	0x00026e68
    6764:	.word	0x000099be
    6768:	.word	0x00026da0
    676c:	.word	0x00026d28
    6770:	.word	0x00026c70

00006774 <sf_gen_inbound>:
    6774:	ldr	r3, [pc, #364]	; 68e8 <sf_gen_inbound+0x174>
    6778:	push	{r0, r1, r2, r4, r5, lr}
    677c:	mov	r4, r0
    6780:	add	r3, pc, r3
    6784:	ldr	r1, [r3, #856]	; 0x358
    6788:	cmp	r1, #168	; 0xa8
    678c:	bgt	67ec <sf_gen_inbound+0x78>
    6790:	cmp	r1, #167	; 0xa7
    6794:	bge	6804 <sf_gen_inbound+0x90>
    6798:	cmp	r1, #137	; 0x89
    679c:	bgt	67c4 <sf_gen_inbound+0x50>
    67a0:	cmp	r1, #130	; 0x82
    67a4:	bge	6804 <sf_gen_inbound+0x90>
    67a8:	cmp	r1, #8
    67ac:	beq	6854 <sf_gen_inbound+0xe0>
    67b0:	cmp	r1, #113	; 0x71
    67b4:	beq	68bc <sf_gen_inbound+0x148>
    67b8:	ldr	r0, [pc, #300]	; 68ec <sf_gen_inbound+0x178>
    67bc:	add	r0, pc, r0
    67c0:	bl	1e54 <sf_bpf_error>
    67c4:	cmp	r1, #164	; 0xa4
    67c8:	beq	6804 <sf_gen_inbound+0x90>
    67cc:	cmp	r1, #166	; 0xa6
    67d0:	bne	67b8 <sf_gen_inbound+0x44>
    67d4:	cmp	r0, #0
    67d8:	beq	68dc <sf_gen_inbound+0x168>
    67dc:	mov	r3, #1
    67e0:	mov	r2, #16
    67e4:	mov	r1, #0
    67e8:	b	68ac <sf_gen_inbound+0x138>
    67ec:	cmp	r1, #183	; 0xb7
    67f0:	beq	6804 <sf_gen_inbound+0x90>
    67f4:	bgt	6838 <sf_gen_inbound+0xc4>
    67f8:	sub	r3, r1, #178	; 0xb2
    67fc:	cmp	r3, #3
    6800:	bhi	67b8 <sf_gen_inbound+0x44>
    6804:	cmp	r4, #0
    6808:	mov	r0, #1
    680c:	moveq	r3, r0
    6810:	movne	r3, #0
    6814:	movne	r2, #16
    6818:	movne	r1, #3
    681c:	str	r0, [sp]
    6820:	moveq	r2, #16
    6824:	moveq	r1, #3
    6828:	moveq	r0, r3
    682c:	bl	3e80 <gen_mcmp>
    6830:	add	sp, sp, #12
    6834:	pop	{r4, r5, pc}
    6838:	cmp	r1, #200	; 0xc8
    683c:	beq	6804 <sf_gen_inbound+0x90>
    6840:	cmp	r1, #226	; 0xe2
    6844:	beq	6894 <sf_gen_inbound+0x120>
    6848:	cmp	r1, #194	; 0xc2
    684c:	bne	67b8 <sf_gen_inbound+0x44>
    6850:	b	6804 <sf_gen_inbound+0x90>
    6854:	mov	r0, #0
    6858:	bl	4ba8 <sf_gen_loadi>
    685c:	mov	r2, #1
    6860:	mov	r1, r0
    6864:	mov	r0, r2
    6868:	bl	642c <sf_gen_load>
    686c:	mov	r5, r0
    6870:	mov	r0, #0
    6874:	bl	4ba8 <sf_gen_loadi>
    6878:	mov	r2, r0
    687c:	mov	r3, r4
    6880:	mov	r1, r5
    6884:	mov	r0, #16
    6888:	add	sp, sp, #12
    688c:	pop	{r4, r5, lr}
    6890:	b	4a54 <sf_gen_relation>
    6894:	cmp	r0, #0
    6898:	movne	r3, #1
    689c:	movne	r2, #8
    68a0:	movne	r1, #2
    68a4:	moveq	r3, #2
    68a8:	beq	68d0 <sf_gen_inbound+0x15c>
    68ac:	mov	r0, #1
    68b0:	add	sp, sp, #12
    68b4:	pop	{r4, r5, lr}
    68b8:	b	371c <gen_cmp>
    68bc:	cmp	r0, #0
    68c0:	movne	r3, #4
    68c4:	movne	r2, #8
    68c8:	bne	67e4 <sf_gen_inbound+0x70>
    68cc:	mov	r3, r0
    68d0:	mov	r2, #8
    68d4:	mov	r1, r3
    68d8:	b	68ac <sf_gen_inbound+0x138>
    68dc:	mov	r3, r0
    68e0:	mov	r2, #16
    68e4:	b	68d4 <sf_gen_inbound+0x160>
    68e8:	.word	0x00026be0
    68ec:	.word	0x00009772

000068f0 <gen_hostop>:
    68f0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    68f4:	mov	r5, r0
    68f8:	mov	r6, r1
    68fc:	mov	r7, r3
    6900:	ldr	r4, [sp, #40]	; 0x28
    6904:	ldr	r8, [sp, #44]	; 0x2c
    6908:	cmp	r2, #4
    690c:	addls	pc, pc, r2, lsl #2
    6910:	b	69e0 <gen_hostop+0xf0>
    6914:	b	699c <gen_hostop+0xac>
    6918:	b	692c <gen_hostop+0x3c>
    691c:	b	6928 <gen_hostop+0x38>
    6920:	b	699c <gen_hostop+0xac>
    6924:	b	6960 <gen_hostop+0x70>
    6928:	mov	r4, r8
    692c:	mov	r0, r7
    6930:	bl	51fc <gen_linktype>
    6934:	mov	r7, r0
    6938:	mov	r1, r4
    693c:	str	r6, [sp]
    6940:	mov	r3, r5
    6944:	mov	r2, #0
    6948:	mov	r0, #3
    694c:	bl	3e80 <gen_mcmp>
    6950:	mov	r4, r0
    6954:	mov	r1, r0
    6958:	mov	r0, r7
    695c:	b	6994 <gen_hostop+0xa4>
    6960:	mov	r2, #1
    6964:	stm	sp, {r4, r8}
    6968:	bl	68f0 <gen_hostop>
    696c:	mov	r9, r0
    6970:	mov	r1, r6
    6974:	stm	sp, {r4, r8}
    6978:	mov	r3, r7
    697c:	mov	r2, #2
    6980:	mov	r0, r5
    6984:	bl	68f0 <gen_hostop>
    6988:	mov	r4, r0
    698c:	mov	r1, r0
    6990:	mov	r0, r9
    6994:	bl	2c48 <sf_gen_and>
    6998:	b	69d4 <gen_hostop+0xe4>
    699c:	mov	r2, #1
    69a0:	stm	sp, {r4, r8}
    69a4:	bl	68f0 <gen_hostop>
    69a8:	mov	r9, r0
    69ac:	mov	r1, r6
    69b0:	stm	sp, {r4, r8}
    69b4:	mov	r3, r7
    69b8:	mov	r2, #2
    69bc:	mov	r0, r5
    69c0:	bl	68f0 <gen_hostop>
    69c4:	mov	r4, r0
    69c8:	mov	r1, r0
    69cc:	mov	r0, r9
    69d0:	bl	2cc8 <sf_gen_or>
    69d4:	mov	r0, r4
    69d8:	add	sp, sp, #12
    69dc:	pop	{r4, r5, r6, r7, r8, r9, pc}
    69e0:	bl	ee8 <abort@plt>

000069e4 <gen_dnhostop>:
    69e4:	cmp	r1, #2
    69e8:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    69ec:	mov	r4, r0
    69f0:	beq	6a98 <gen_dnhostop+0xb4>
    69f4:	bgt	6a14 <gen_dnhostop+0x30>
    69f8:	cmp	r1, #0
    69fc:	beq	6a60 <gen_dnhostop+0x7c>
    6a00:	cmp	r1, #1
    6a04:	moveq	r5, #3
    6a08:	moveq	r6, #15
    6a0c:	beq	6aa0 <gen_dnhostop+0xbc>
    6a10:	bl	ee8 <abort@plt>
    6a14:	cmp	r1, #4
    6a18:	beq	6a34 <gen_dnhostop+0x50>
    6a1c:	blt	6a60 <gen_dnhostop+0x7c>
    6a20:	cmp	r1, #24
    6a24:	bne	6a10 <gen_dnhostop+0x2c>
    6a28:	ldr	r0, [pc, #444]	; 6bec <gen_dnhostop+0x208>
    6a2c:	add	r0, pc, r0
    6a30:	bl	1e54 <sf_bpf_error>
    6a34:	mov	r1, #1
    6a38:	bl	69e4 <gen_dnhostop>
    6a3c:	mov	r5, r0
    6a40:	mov	r1, #2
    6a44:	mov	r0, r4
    6a48:	bl	69e4 <gen_dnhostop>
    6a4c:	mov	sl, r0
    6a50:	mov	r1, r0
    6a54:	mov	r0, r5
    6a58:	bl	2c48 <sf_gen_and>
    6a5c:	b	6a8c <gen_dnhostop+0xa8>
    6a60:	mov	r1, #1
    6a64:	mov	r0, r4
    6a68:	bl	69e4 <gen_dnhostop>
    6a6c:	mov	r5, r0
    6a70:	mov	r1, #2
    6a74:	mov	r0, r4
    6a78:	bl	69e4 <gen_dnhostop>
    6a7c:	mov	sl, r0
    6a80:	mov	r1, r0
    6a84:	mov	r0, r5
    6a88:	bl	2cc8 <sf_gen_or>
    6a8c:	mov	r0, sl
    6a90:	add	sp, sp, #12
    6a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6a98:	mov	r5, #1
    6a9c:	mov	r6, #7
    6aa0:	movw	r7, #65287	; 0xff07
    6aa4:	movw	r0, #24579	; 0x6003
    6aa8:	bl	51fc <gen_linktype>
    6aac:	mov	r8, r0
    6ab0:	movw	r3, #33030	; 0x8106
    6ab4:	str	r7, [sp]
    6ab8:	mov	r2, #8
    6abc:	mov	r1, #2
    6ac0:	mov	r0, #3
    6ac4:	rev16	r4, r4
    6ac8:	bl	3e80 <gen_mcmp>
    6acc:	uxth	r4, r4
    6ad0:	mov	r9, r0
    6ad4:	mov	r3, r4
    6ad8:	mov	r2, #8
    6adc:	add	r1, r6, #3
    6ae0:	mov	r0, #3
    6ae4:	bl	371c <gen_cmp>
    6ae8:	mov	sl, r0
    6aec:	mov	r1, r0
    6af0:	mov	r0, r9
    6af4:	mov	r9, #7
    6af8:	bl	2c48 <sf_gen_and>
    6afc:	mov	r3, #6
    6b00:	mov	r2, #16
    6b04:	str	r9, [sp]
    6b08:	mov	r1, #2
    6b0c:	mov	r0, #3
    6b10:	bl	3e80 <gen_mcmp>
    6b14:	mov	fp, r0
    6b18:	mov	r3, r4
    6b1c:	mov	r2, #8
    6b20:	add	r1, r6, #2
    6b24:	mov	r0, #3
    6b28:	bl	371c <gen_cmp>
    6b2c:	mov	r6, r0
    6b30:	mov	r1, r0
    6b34:	mov	r0, fp
    6b38:	bl	2c48 <sf_gen_and>
    6b3c:	mov	r0, r6
    6b40:	mov	r1, sl
    6b44:	bl	2cc8 <sf_gen_or>
    6b48:	movw	r3, #33026	; 0x8102
    6b4c:	mov	r2, #8
    6b50:	str	r7, [sp]
    6b54:	mov	r1, #2
    6b58:	mov	r0, #3
    6b5c:	bl	3e80 <gen_mcmp>
    6b60:	mov	r7, r0
    6b64:	mov	r3, r4
    6b68:	mov	r2, #8
    6b6c:	add	r1, r5, #3
    6b70:	mov	r0, #3
    6b74:	bl	371c <gen_cmp>
    6b78:	mov	r6, r0
    6b7c:	mov	r1, r0
    6b80:	mov	r0, r7
    6b84:	bl	2c48 <sf_gen_and>
    6b88:	mov	r0, r6
    6b8c:	mov	r1, sl
    6b90:	bl	2cc8 <sf_gen_or>
    6b94:	mov	r3, #2
    6b98:	mov	r2, #16
    6b9c:	str	r9, [sp]
    6ba0:	mov	r1, r3
    6ba4:	mov	r0, #3
    6ba8:	bl	3e80 <gen_mcmp>
    6bac:	mov	r6, r0
    6bb0:	mov	r3, r4
    6bb4:	mov	r2, #8
    6bb8:	add	r1, r5, #2
    6bbc:	mov	r0, #3
    6bc0:	bl	371c <gen_cmp>
    6bc4:	mov	r1, r0
    6bc8:	mov	r4, r0
    6bcc:	mov	r0, r6
    6bd0:	bl	2c48 <sf_gen_and>
    6bd4:	mov	r1, sl
    6bd8:	mov	r0, r4
    6bdc:	bl	2cc8 <sf_gen_or>
    6be0:	mov	r1, sl
    6be4:	mov	r0, r8
    6be8:	b	6a58 <gen_dnhostop+0x74>
    6bec:	.word	0x00009530

00006bf0 <gen_host>:
    6bf0:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    6bf4:	mov	r5, r0
    6bf8:	mov	r7, r1
    6bfc:	mov	r6, r3
    6c00:	ldr	r8, [sp, #40]	; 0x28
    6c04:	cmp	r8, #2
    6c08:	beq	6cc4 <gen_host+0xd4>
    6c0c:	ldr	r1, [pc, #744]	; 6efc <gen_host+0x30c>
    6c10:	add	r1, pc, r1
    6c14:	cmp	r2, #40	; 0x28
    6c18:	addls	pc, pc, r2, lsl #2
    6c1c:	b	6ef8 <gen_host+0x308>
    6c20:	b	6cd0 <gen_host+0xe0>
    6c24:	b	6ef8 <gen_host+0x308>
    6c28:	b	6d5c <gen_host+0x16c>
    6c2c:	b	6d98 <gen_host+0x1a8>
    6c30:	b	6d84 <gen_host+0x194>
    6c34:	b	6db8 <gen_host+0x1c8>
    6c38:	b	6dac <gen_host+0x1bc>
    6c3c:	b	6dc4 <gen_host+0x1d4>
    6c40:	b	6dd0 <gen_host+0x1e0>
    6c44:	b	6ddc <gen_host+0x1ec>
    6c48:	b	6de8 <gen_host+0x1f8>
    6c4c:	b	6e0c <gen_host+0x21c>
    6c50:	b	6e24 <gen_host+0x234>
    6c54:	b	6e44 <gen_host+0x254>
    6c58:	b	6e38 <gen_host+0x248>
    6c5c:	b	6e5c <gen_host+0x26c>
    6c60:	b	6e50 <gen_host+0x260>
    6c64:	b	6e68 <gen_host+0x278>
    6c68:	b	6e74 <gen_host+0x284>
    6c6c:	b	6e80 <gen_host+0x290>
    6c70:	b	6e8c <gen_host+0x29c>
    6c74:	b	6df4 <gen_host+0x204>
    6c78:	b	6e00 <gen_host+0x210>
    6c7c:	b	6e18 <gen_host+0x228>
    6c80:	b	6e98 <gen_host+0x2a8>
    6c84:	b	6ea4 <gen_host+0x2b4>
    6c88:	b	6eb0 <gen_host+0x2c0>
    6c8c:	b	6ebc <gen_host+0x2cc>
    6c90:	b	6ec8 <gen_host+0x2d8>
    6c94:	b	6ed4 <gen_host+0x2e4>
    6c98:	b	6ee0 <gen_host+0x2f0>
    6c9c:	b	6ef8 <gen_host+0x308>
    6ca0:	b	6ef8 <gen_host+0x308>
    6ca4:	b	6ef8 <gen_host+0x308>
    6ca8:	b	6ef8 <gen_host+0x308>
    6cac:	b	6ef8 <gen_host+0x308>
    6cb0:	b	6ef8 <gen_host+0x308>
    6cb4:	b	6ef8 <gen_host+0x308>
    6cb8:	b	6ef8 <gen_host+0x308>
    6cbc:	b	6ef8 <gen_host+0x308>
    6cc0:	b	6eec <gen_host+0x2fc>
    6cc4:	ldr	r1, [pc, #564]	; 6f00 <gen_host+0x310>
    6cc8:	add	r1, pc, r1
    6ccc:	b	6c14 <gen_host+0x24>
    6cd0:	mov	r3, r6
    6cd4:	mov	r2, #2
    6cd8:	str	r8, [sp]
    6cdc:	mov	r1, r7
    6ce0:	mov	r0, r5
    6ce4:	bl	6bf0 <gen_host>
    6ce8:	ldr	r3, [pc, #532]	; 6f04 <gen_host+0x314>
    6cec:	mov	r4, r0
    6cf0:	add	r3, pc, r3
    6cf4:	ldr	r3, [r3, #4]
    6cf8:	cmp	r3, #0
    6cfc:	bne	6d50 <gen_host+0x160>
    6d00:	mov	r3, r6
    6d04:	mov	r2, #3
    6d08:	str	r8, [sp]
    6d0c:	mov	r1, r7
    6d10:	mov	r0, r5
    6d14:	bl	6bf0 <gen_host>
    6d18:	mov	r1, r0
    6d1c:	mov	r9, r0
    6d20:	mov	r0, r4
    6d24:	bl	2cc8 <sf_gen_or>
    6d28:	mov	r1, r7
    6d2c:	mov	r3, r6
    6d30:	str	r8, [sp]
    6d34:	mov	r2, #4
    6d38:	mov	r0, r5
    6d3c:	bl	6bf0 <gen_host>
    6d40:	mov	r4, r0
    6d44:	mov	r1, r0
    6d48:	mov	r0, r9
    6d4c:	bl	2cc8 <sf_gen_or>
    6d50:	mov	r0, r4
    6d54:	add	sp, sp, #12
    6d58:	pop	{r4, r5, r6, r7, r8, r9, pc}
    6d5c:	mov	r0, #12
    6d60:	mov	r1, #16
    6d64:	mov	r3, #2048	; 0x800
    6d68:	strd	r0, [sp]
    6d6c:	mov	r2, r6
    6d70:	mov	r1, r7
    6d74:	mov	r0, r5
    6d78:	bl	68f0 <gen_hostop>
    6d7c:	mov	r4, r0
    6d80:	b	6d50 <gen_host+0x160>
    6d84:	mov	r8, #14
    6d88:	mov	r9, #24
    6d8c:	movw	r3, #32821	; 0x8035
    6d90:	strd	r8, [sp]
    6d94:	b	6d6c <gen_host+0x17c>
    6d98:	mov	r0, #14
    6d9c:	mov	r1, #24
    6da0:	movw	r3, #2054	; 0x806
    6da4:	strd	r0, [sp]
    6da8:	b	6d6c <gen_host+0x17c>
    6dac:	ldr	r0, [pc, #340]	; 6f08 <gen_host+0x318>
    6db0:	add	r0, pc, r0
    6db4:	bl	1e54 <sf_bpf_error>
    6db8:	ldr	r0, [pc, #332]	; 6f0c <gen_host+0x31c>
    6dbc:	add	r0, pc, r0
    6dc0:	b	6db4 <gen_host+0x1c4>
    6dc4:	ldr	r0, [pc, #324]	; 6f10 <gen_host+0x320>
    6dc8:	add	r0, pc, r0
    6dcc:	b	6db4 <gen_host+0x1c4>
    6dd0:	ldr	r0, [pc, #316]	; 6f14 <gen_host+0x324>
    6dd4:	add	r0, pc, r0
    6dd8:	b	6db4 <gen_host+0x1c4>
    6ddc:	ldr	r0, [pc, #308]	; 6f18 <gen_host+0x328>
    6de0:	add	r0, pc, r0
    6de4:	b	6db4 <gen_host+0x1c4>
    6de8:	ldr	r0, [pc, #300]	; 6f1c <gen_host+0x32c>
    6dec:	add	r0, pc, r0
    6df0:	b	6db4 <gen_host+0x1c4>
    6df4:	ldr	r0, [pc, #292]	; 6f20 <gen_host+0x330>
    6df8:	add	r0, pc, r0
    6dfc:	b	6db4 <gen_host+0x1c4>
    6e00:	ldr	r0, [pc, #284]	; 6f24 <gen_host+0x334>
    6e04:	add	r0, pc, r0
    6e08:	b	6db4 <gen_host+0x1c4>
    6e0c:	ldr	r0, [pc, #276]	; 6f28 <gen_host+0x338>
    6e10:	add	r0, pc, r0
    6e14:	bl	1e54 <sf_bpf_error>
    6e18:	ldr	r0, [pc, #268]	; 6f2c <gen_host+0x33c>
    6e1c:	add	r0, pc, r0
    6e20:	b	6e14 <gen_host+0x224>
    6e24:	mov	r1, r6
    6e28:	mov	r0, r5
    6e2c:	add	sp, sp, #12
    6e30:	pop	{r4, r5, r6, r7, r8, r9, lr}
    6e34:	b	69e4 <gen_dnhostop>
    6e38:	ldr	r0, [pc, #240]	; 6f30 <gen_host+0x340>
    6e3c:	add	r0, pc, r0
    6e40:	b	6e14 <gen_host+0x224>
    6e44:	ldr	r0, [pc, #232]	; 6f34 <gen_host+0x344>
    6e48:	add	r0, pc, r0
    6e4c:	b	6e14 <gen_host+0x224>
    6e50:	ldr	r0, [pc, #224]	; 6f38 <gen_host+0x348>
    6e54:	add	r0, pc, r0
    6e58:	b	6e14 <gen_host+0x224>
    6e5c:	ldr	r0, [pc, #216]	; 6f3c <gen_host+0x34c>
    6e60:	add	r0, pc, r0
    6e64:	b	6e14 <gen_host+0x224>
    6e68:	ldr	r0, [pc, #208]	; 6f40 <gen_host+0x350>
    6e6c:	add	r0, pc, r0
    6e70:	b	6e14 <gen_host+0x224>
    6e74:	ldr	r0, [pc, #200]	; 6f44 <gen_host+0x354>
    6e78:	add	r0, pc, r0
    6e7c:	b	6db4 <gen_host+0x1c4>
    6e80:	ldr	r0, [pc, #192]	; 6f48 <gen_host+0x358>
    6e84:	add	r0, pc, r0
    6e88:	b	6db4 <gen_host+0x1c4>
    6e8c:	ldr	r0, [pc, #184]	; 6f4c <gen_host+0x35c>
    6e90:	add	r0, pc, r0
    6e94:	b	6db4 <gen_host+0x1c4>
    6e98:	ldr	r0, [pc, #176]	; 6f50 <gen_host+0x360>
    6e9c:	add	r0, pc, r0
    6ea0:	b	6e14 <gen_host+0x224>
    6ea4:	ldr	r0, [pc, #168]	; 6f54 <gen_host+0x364>
    6ea8:	add	r0, pc, r0
    6eac:	b	6db4 <gen_host+0x1c4>
    6eb0:	ldr	r0, [pc, #160]	; 6f58 <gen_host+0x368>
    6eb4:	add	r0, pc, r0
    6eb8:	b	6db4 <gen_host+0x1c4>
    6ebc:	ldr	r0, [pc, #152]	; 6f5c <gen_host+0x36c>
    6ec0:	add	r0, pc, r0
    6ec4:	b	6db4 <gen_host+0x1c4>
    6ec8:	ldr	r0, [pc, #144]	; 6f60 <gen_host+0x370>
    6ecc:	add	r0, pc, r0
    6ed0:	b	6db4 <gen_host+0x1c4>
    6ed4:	ldr	r0, [pc, #136]	; 6f64 <gen_host+0x374>
    6ed8:	add	r0, pc, r0
    6edc:	b	6e14 <gen_host+0x224>
    6ee0:	ldr	r0, [pc, #128]	; 6f68 <gen_host+0x378>
    6ee4:	add	r0, pc, r0
    6ee8:	b	6db4 <gen_host+0x1c4>
    6eec:	ldr	r0, [pc, #120]	; 6f6c <gen_host+0x37c>
    6ef0:	add	r0, pc, r0
    6ef4:	b	6db4 <gen_host+0x1c4>
    6ef8:	bl	ee8 <abort@plt>
    6efc:	.word	0x00009552
    6f00:	.word	0x00008b60
    6f04:	.word	0x00026584
    6f08:	.word	0x000091cf
    6f0c:	.word	0x000091e0
    6f10:	.word	0x000091f2
    6f14:	.word	0x00009203
    6f18:	.word	0x00009215
    6f1c:	.word	0x00009227
    6f20:	.word	0x00009239
    6f24:	.word	0x0000924a
    6f28:	.word	0x0000925c
    6f2c:	.word	0x00009275
    6f30:	.word	0x00009279
    6f34:	.word	0x00009290
    6f38:	.word	0x000092a7
    6f3c:	.word	0x000092c0
    6f40:	.word	0x000092d9
    6f44:	.word	0x000092ef
    6f48:	.word	0x00009302
    6f4c:	.word	0x00009312
    6f50:	.word	0x000090c0
    6f54:	.word	0x00009317
    6f58:	.word	0x00009329
    6f5c:	.word	0x0000933b
    6f60:	.word	0x0000934d
    6f64:	.word	0x0000935e
    6f68:	.word	0x00009375
    6f6c:	.word	0x0000938a

00006f70 <sf_gen_mcode>:
    6f70:	push	{r4, r5, r6, r7, lr}
    6f74:	sub	sp, sp, #28
    6f78:	mov	r7, r1
    6f7c:	add	r1, sp, #16
    6f80:	uxtb	r5, r3
    6f84:	mov	r6, r0
    6f88:	mov	r4, r2
    6f8c:	str	r3, [sp, #12]
    6f90:	bl	9ac4 <__pcap_atoin>
    6f94:	ldr	r3, [sp, #16]
    6f98:	rsb	r0, r0, #32
    6f9c:	cmp	r7, #0
    6fa0:	lsl	r0, r3, r0
    6fa4:	str	r0, [sp, #16]
    6fa8:	beq	6fe8 <sf_gen_mcode+0x78>
    6fac:	add	r1, sp, #20
    6fb0:	mov	r0, r7
    6fb4:	bl	9ac4 <__pcap_atoin>
    6fb8:	ldr	r3, [sp, #20]
    6fbc:	rsb	r0, r0, #32
    6fc0:	lsl	r0, r3, r0
    6fc4:	ldr	r3, [sp, #16]
    6fc8:	str	r0, [sp, #20]
    6fcc:	bics	r3, r3, r0
    6fd0:	beq	7030 <sf_gen_mcode+0xc0>
    6fd4:	ldr	r0, [pc, #132]	; 7060 <sf_gen_mcode+0xf0>
    6fd8:	mov	r2, r7
    6fdc:	mov	r1, r6
    6fe0:	add	r0, pc, r0
    6fe4:	bl	1e54 <sf_bpf_error>
    6fe8:	cmp	r4, #32
    6fec:	ble	6ffc <sf_gen_mcode+0x8c>
    6ff0:	ldr	r0, [pc, #108]	; 7064 <sf_gen_mcode+0xf4>
    6ff4:	add	r0, pc, r0
    6ff8:	bl	1e54 <sf_bpf_error>
    6ffc:	cmp	r4, #0
    7000:	mvnne	r3, #0
    7004:	rsbne	r2, r4, #32
    7008:	lslne	r3, r3, r2
    700c:	moveq	r3, r4
    7010:	str	r3, [sp, #20]
    7014:	bics	r3, r0, r3
    7018:	beq	7030 <sf_gen_mcode+0xc0>
    701c:	ldr	r0, [pc, #68]	; 7068 <sf_gen_mcode+0xf8>
    7020:	mov	r2, r4
    7024:	mov	r1, r6
    7028:	add	r0, pc, r0
    702c:	b	6fe4 <sf_gen_mcode+0x74>
    7030:	cmp	r5, #2
    7034:	bne	7054 <sf_gen_mcode+0xe4>
    7038:	ldrb	r3, [sp, #14]
    703c:	str	r5, [sp]
    7040:	ldrb	r2, [sp, #13]
    7044:	ldrd	r0, [sp, #16]
    7048:	bl	6bf0 <gen_host>
    704c:	add	sp, sp, #28
    7050:	pop	{r4, r5, r6, r7, pc}
    7054:	ldr	r0, [pc, #16]	; 706c <sf_gen_mcode+0xfc>
    7058:	add	r0, pc, r0
    705c:	b	6ff8 <sf_gen_mcode+0x88>
    7060:	.word	0x000092b9
    7064:	.word	0x000092ca
    7068:	.word	0x000092b0
    706c:	.word	0x000092a0

00007070 <gen_port>:
    7070:	push	{r4, r5, r6, r7, r8, lr}
    7074:	mov	r4, r1
    7078:	mov	r5, r0
    707c:	mov	r0, #2048	; 0x800
    7080:	mov	r6, r2
    7084:	bl	51fc <gen_linktype>
    7088:	cmp	r4, #6
    708c:	mov	r7, r0
    7090:	beq	70b4 <gen_port+0x44>
    7094:	bgt	70a4 <gen_port+0x34>
    7098:	cmn	r4, #1
    709c:	beq	70dc <gen_port+0x6c>
    70a0:	bl	ee8 <abort@plt>
    70a4:	cmp	r4, #17
    70a8:	beq	70b4 <gen_port+0x44>
    70ac:	cmp	r4, #132	; 0x84
    70b0:	bne	70a0 <gen_port+0x30>
    70b4:	mov	r1, r4
    70b8:	mov	r2, r6
    70bc:	mov	r0, r5
    70c0:	bl	3d94 <sf_gen_portop>
    70c4:	mov	r4, r0
    70c8:	mov	r0, r7
    70cc:	mov	r1, r4
    70d0:	bl	2c48 <sf_gen_and>
    70d4:	mov	r0, r4
    70d8:	pop	{r4, r5, r6, r7, r8, pc}
    70dc:	mov	r2, r6
    70e0:	mov	r1, #6
    70e4:	mov	r0, r5
    70e8:	bl	3d94 <sf_gen_portop>
    70ec:	mov	r8, r0
    70f0:	mov	r2, r6
    70f4:	mov	r1, #17
    70f8:	mov	r0, r5
    70fc:	bl	3d94 <sf_gen_portop>
    7100:	mov	r4, r0
    7104:	mov	r1, r0
    7108:	mov	r0, r8
    710c:	bl	2cc8 <sf_gen_or>
    7110:	mov	r2, r6
    7114:	mov	r1, #132	; 0x84
    7118:	mov	r0, r5
    711c:	bl	3d94 <sf_gen_portop>
    7120:	mov	r1, r4
    7124:	bl	2cc8 <sf_gen_or>
    7128:	b	70c8 <gen_port+0x58>

0000712c <gen_port6>:
    712c:	push	{r4, r5, r6, r7, r8, lr}
    7130:	mov	r4, r1
    7134:	mov	r5, r0
    7138:	movw	r0, #34525	; 0x86dd
    713c:	mov	r6, r2
    7140:	bl	51fc <gen_linktype>
    7144:	cmp	r4, #6
    7148:	mov	r7, r0
    714c:	beq	7170 <gen_port6+0x44>
    7150:	bgt	7160 <gen_port6+0x34>
    7154:	cmn	r4, #1
    7158:	beq	7198 <gen_port6+0x6c>
    715c:	bl	ee8 <abort@plt>
    7160:	cmp	r4, #17
    7164:	beq	7170 <gen_port6+0x44>
    7168:	cmp	r4, #132	; 0x84
    716c:	bne	715c <gen_port6+0x30>
    7170:	mov	r1, r4
    7174:	mov	r2, r6
    7178:	mov	r0, r5
    717c:	bl	3cbc <sf_gen_portop6>
    7180:	mov	r4, r0
    7184:	mov	r0, r7
    7188:	mov	r1, r4
    718c:	bl	2c48 <sf_gen_and>
    7190:	mov	r0, r4
    7194:	pop	{r4, r5, r6, r7, r8, pc}
    7198:	mov	r2, r6
    719c:	mov	r1, #6
    71a0:	mov	r0, r5
    71a4:	bl	3cbc <sf_gen_portop6>
    71a8:	mov	r8, r0
    71ac:	mov	r2, r6
    71b0:	mov	r1, #17
    71b4:	mov	r0, r5
    71b8:	bl	3cbc <sf_gen_portop6>
    71bc:	mov	r4, r0
    71c0:	mov	r1, r0
    71c4:	mov	r0, r8
    71c8:	bl	2cc8 <sf_gen_or>
    71cc:	mov	r2, r6
    71d0:	mov	r1, #132	; 0x84
    71d4:	mov	r0, r5
    71d8:	bl	3cbc <sf_gen_portop6>
    71dc:	mov	r1, r4
    71e0:	bl	2cc8 <sf_gen_or>
    71e4:	b	7184 <gen_port6+0x58>

000071e8 <gen_portrange>:
    71e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    71ec:	mov	r4, r2
    71f0:	mov	r5, r0
    71f4:	mov	r0, #2048	; 0x800
    71f8:	mov	r6, r1
    71fc:	mov	r7, r3
    7200:	bl	51fc <gen_linktype>
    7204:	cmp	r4, #6
    7208:	mov	r8, r0
    720c:	beq	7230 <gen_portrange+0x48>
    7210:	bgt	7220 <gen_portrange+0x38>
    7214:	cmn	r4, #1
    7218:	beq	725c <gen_portrange+0x74>
    721c:	bl	ee8 <abort@plt>
    7220:	cmp	r4, #17
    7224:	beq	7230 <gen_portrange+0x48>
    7228:	cmp	r4, #132	; 0x84
    722c:	bne	721c <gen_portrange+0x34>
    7230:	mov	r2, r4
    7234:	mov	r3, r7
    7238:	mov	r1, r6
    723c:	mov	r0, r5
    7240:	bl	494c <sf_gen_portrangeop>
    7244:	mov	r4, r0
    7248:	mov	r0, r8
    724c:	mov	r1, r4
    7250:	bl	2c48 <sf_gen_and>
    7254:	mov	r0, r4
    7258:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    725c:	mov	r3, r7
    7260:	mov	r1, r6
    7264:	mov	r2, #6
    7268:	mov	r0, r5
    726c:	bl	494c <sf_gen_portrangeop>
    7270:	mov	r9, r0
    7274:	mov	r3, r7
    7278:	mov	r2, #17
    727c:	mov	r1, r6
    7280:	mov	r0, r5
    7284:	bl	494c <sf_gen_portrangeop>
    7288:	mov	r4, r0
    728c:	mov	r1, r0
    7290:	mov	r0, r9
    7294:	bl	2cc8 <sf_gen_or>
    7298:	mov	r1, r6
    729c:	mov	r3, r7
    72a0:	mov	r2, #132	; 0x84
    72a4:	mov	r0, r5
    72a8:	bl	494c <sf_gen_portrangeop>
    72ac:	mov	r1, r4
    72b0:	bl	2cc8 <sf_gen_or>
    72b4:	b	7248 <gen_portrange+0x60>

000072b8 <gen_portrange6>:
    72b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    72bc:	mov	r4, r2
    72c0:	mov	r5, r0
    72c4:	movw	r0, #34525	; 0x86dd
    72c8:	mov	r6, r1
    72cc:	mov	r7, r3
    72d0:	bl	51fc <gen_linktype>
    72d4:	cmp	r4, #6
    72d8:	mov	r8, r0
    72dc:	beq	7300 <gen_portrange6+0x48>
    72e0:	bgt	72f0 <gen_portrange6+0x38>
    72e4:	cmn	r4, #1
    72e8:	beq	732c <gen_portrange6+0x74>
    72ec:	bl	ee8 <abort@plt>
    72f0:	cmp	r4, #17
    72f4:	beq	7300 <gen_portrange6+0x48>
    72f8:	cmp	r4, #132	; 0x84
    72fc:	bne	72ec <gen_portrange6+0x34>
    7300:	mov	r2, r4
    7304:	mov	r3, r7
    7308:	mov	r1, r6
    730c:	mov	r0, r5
    7310:	bl	47d0 <sf_gen_portrangeop6>
    7314:	mov	r4, r0
    7318:	mov	r0, r8
    731c:	mov	r1, r4
    7320:	bl	2c48 <sf_gen_and>
    7324:	mov	r0, r4
    7328:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    732c:	mov	r3, r7
    7330:	mov	r1, r6
    7334:	mov	r2, #6
    7338:	mov	r0, r5
    733c:	bl	47d0 <sf_gen_portrangeop6>
    7340:	mov	r9, r0
    7344:	mov	r3, r7
    7348:	mov	r2, #17
    734c:	mov	r1, r6
    7350:	mov	r0, r5
    7354:	bl	47d0 <sf_gen_portrangeop6>
    7358:	mov	r4, r0
    735c:	mov	r1, r0
    7360:	mov	r0, r9
    7364:	bl	2cc8 <sf_gen_or>
    7368:	mov	r1, r6
    736c:	mov	r3, r7
    7370:	mov	r2, #132	; 0x84
    7374:	mov	r0, r5
    7378:	bl	47d0 <sf_gen_portrangeop6>
    737c:	mov	r1, r4
    7380:	bl	2cc8 <sf_gen_or>
    7384:	b	7318 <gen_portrange6+0x60>

00007388 <gen_protochain>:
    7388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    738c:	sub	sp, sp, #420	; 0x1a4
    7390:	mov	r6, r1
    7394:	mov	r5, r2
    7398:	mov	sl, r0
    739c:	ldr	r4, [pc, #1432]	; 793c <gen_protochain+0x5b4>
    73a0:	bl	1ff8 <alloc_reg>
    73a4:	add	r3, sp, #16
    73a8:	mov	r9, r0
    73ac:	mov	r2, #400	; 0x190
    73b0:	mov	r1, #0
    73b4:	mov	r0, r3
    73b8:	str	r3, [sp]
    73bc:	bl	e58 <memset@plt>
    73c0:	cmp	r6, #2
    73c4:	add	r4, pc, r4
    73c8:	beq	7428 <gen_protochain+0xa0>
    73cc:	cmp	r6, #17
    73d0:	beq	7428 <gen_protochain+0xa0>
    73d4:	cmp	r6, #0
    73d8:	bne	741c <gen_protochain+0x94>
    73dc:	mov	r2, r5
    73e0:	mov	r1, #2
    73e4:	mov	r0, sl
    73e8:	bl	7388 <gen_protochain>
    73ec:	mov	r6, r0
    73f0:	mov	r1, #17
    73f4:	mov	r2, r5
    73f8:	mov	r0, sl
    73fc:	bl	7388 <gen_protochain>
    7400:	mov	r4, r0
    7404:	mov	r1, r0
    7408:	mov	r0, r6
    740c:	bl	2cc8 <sf_gen_or>
    7410:	mov	r0, r4
    7414:	add	sp, sp, #420	; 0x1a4
    7418:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    741c:	ldr	r0, [pc, #1308]	; 7940 <gen_protochain+0x5b8>
    7420:	add	r0, pc, r0
    7424:	bl	1e54 <sf_bpf_error>
    7428:	ldr	r3, [pc, #1300]	; 7944 <gen_protochain+0x5bc>
    742c:	add	r3, pc, r3
    7430:	ldr	r3, [r3, #856]	; 0x358
    7434:	cmp	r3, #127	; 0x7f
    7438:	beq	7450 <gen_protochain+0xc8>
    743c:	bgt	745c <gen_protochain+0xd4>
    7440:	cmp	r3, #105	; 0x69
    7444:	beq	7450 <gen_protochain+0xc8>
    7448:	cmp	r3, #119	; 0x77
    744c:	bne	746c <gen_protochain+0xe4>
    7450:	ldr	r0, [pc, #1264]	; 7948 <gen_protochain+0x5c0>
    7454:	add	r0, pc, r0
    7458:	b	7424 <gen_protochain+0x9c>
    745c:	cmp	r3, #163	; 0xa3
    7460:	beq	7450 <gen_protochain+0xc8>
    7464:	cmp	r3, #192	; 0xc0
    7468:	b	744c <gen_protochain+0xc4>
    746c:	ldr	r3, [pc, #1240]	; 794c <gen_protochain+0x5c4>
    7470:	mov	r0, #0
    7474:	ldr	r3, [r4, r3]
    7478:	mov	r4, #1
    747c:	str	r4, [r3]
    7480:	bl	1f58 <new_stmt>
    7484:	cmp	r6, #2
    7488:	str	r0, [sp, #16]
    748c:	beq	74a4 <gen_protochain+0x11c>
    7490:	cmp	r6, #17
    7494:	beq	78d4 <gen_protochain+0x54c>
    7498:	ldr	r0, [pc, #1200]	; 7950 <gen_protochain+0x5c8>
    749c:	add	r0, pc, r0
    74a0:	b	7424 <gen_protochain+0x9c>
    74a4:	mov	r0, #2048	; 0x800
    74a8:	bl	51fc <gen_linktype>
    74ac:	mov	fp, r0
    74b0:	mov	r0, #48	; 0x30
    74b4:	bl	1f58 <new_stmt>
    74b8:	ldr	r3, [pc, #1172]	; 7954 <gen_protochain+0x5cc>
    74bc:	str	r0, [sp, #20]
    74c0:	add	r3, pc, r3
    74c4:	ldr	r4, [r3, #940]	; 0x3ac
    74c8:	ldr	r3, [r3, #948]	; 0x3b4
    74cc:	add	r4, r4, r3
    74d0:	add	r3, r4, #9
    74d4:	str	r3, [r0, #12]
    74d8:	mov	r0, #177	; 0xb1
    74dc:	bl	1f58 <new_stmt>
    74e0:	str	r4, [r0, #12]
    74e4:	str	r0, [sp, #24]
    74e8:	mov	r0, #21
    74ec:	mov	r4, #0
    74f0:	bl	1f58 <new_stmt>
    74f4:	mov	r7, r0
    74f8:	mov	r0, #21
    74fc:	str	r4, [r7, #4]
    7500:	str	r4, [r7, #8]
    7504:	str	sl, [r7, #12]
    7508:	str	r7, [sp, #28]
    750c:	bl	1f58 <new_stmt>
    7510:	mov	r3, #59	; 0x3b
    7514:	cmp	r6, #17
    7518:	str	r4, [r0, #4]
    751c:	mov	r5, r0
    7520:	str	r4, [r0, #8]
    7524:	str	r3, [r0, #12]
    7528:	ldr	r3, [pc, #1064]	; 7958 <gen_protochain+0x5d0>
    752c:	str	r0, [r7, #8]
    7530:	str	r0, [sp, #32]
    7534:	add	r3, pc, r3
    7538:	ldr	r8, [r3, #940]	; 0x3ac
    753c:	ldr	r3, [r3, #948]	; 0x3b4
    7540:	add	r8, r8, r3
    7544:	bne	7920 <gen_protochain+0x598>
    7548:	mov	r0, #21
    754c:	bl	1f58 <new_stmt>
    7550:	mov	r7, r0
    7554:	mov	r0, #21
    7558:	str	r4, [r7, #4]
    755c:	str	r4, [r7, #8]
    7560:	str	r4, [r7, #12]
    7564:	str	r7, [r5, #8]
    7568:	str	r7, [sp, #36]	; 0x24
    756c:	bl	1f58 <new_stmt>
    7570:	mov	r6, r0
    7574:	mov	r3, #60	; 0x3c
    7578:	mov	r0, #21
    757c:	str	r6, [r7, #8]
    7580:	str	r4, [r6, #4]
    7584:	str	r4, [r6, #8]
    7588:	str	r3, [r6, #12]
    758c:	str	r6, [sp, #40]	; 0x28
    7590:	bl	1f58 <new_stmt>
    7594:	mov	r5, r0
    7598:	mov	r3, #43	; 0x2b
    759c:	mov	r0, #21
    75a0:	str	r5, [r6, #8]
    75a4:	str	r4, [r5, #4]
    75a8:	str	r4, [r5, #8]
    75ac:	str	r3, [r5, #12]
    75b0:	str	r5, [sp, #44]	; 0x2c
    75b4:	bl	1f58 <new_stmt>
    75b8:	mov	r3, r0
    75bc:	mov	r2, #44	; 0x2c
    75c0:	mov	r0, #135	; 0x87
    75c4:	str	r3, [r5, #8]
    75c8:	str	r4, [r3, #4]
    75cc:	str	r4, [r3, #8]
    75d0:	mov	r4, #1
    75d4:	str	r2, [r3, #12]
    75d8:	str	r3, [sp, #12]
    75dc:	str	r3, [sp, #48]	; 0x30
    75e0:	bl	1f58 <new_stmt>
    75e4:	mov	r2, r0
    75e8:	mov	r0, #80	; 0x50
    75ec:	str	r2, [sp, #8]
    75f0:	str	r2, [sp, #52]	; 0x34
    75f4:	bl	1f58 <new_stmt>
    75f8:	str	r8, [r0, #12]
    75fc:	str	r0, [sp, #56]	; 0x38
    7600:	mov	r0, #2
    7604:	bl	1f58 <new_stmt>
    7608:	str	r9, [r0, #12]
    760c:	str	r0, [sp, #60]	; 0x3c
    7610:	mov	r0, #135	; 0x87
    7614:	bl	1f58 <new_stmt>
    7618:	str	r0, [sp, #64]	; 0x40
    761c:	mov	r0, #4
    7620:	bl	1f58 <new_stmt>
    7624:	str	r4, [r0, #12]
    7628:	str	r0, [sp, #68]	; 0x44
    762c:	mov	r0, #7
    7630:	bl	1f58 <new_stmt>
    7634:	str	r0, [sp, #72]	; 0x48
    7638:	mov	r0, #80	; 0x50
    763c:	bl	1f58 <new_stmt>
    7640:	str	r8, [r0, #12]
    7644:	str	r0, [sp, #76]	; 0x4c
    7648:	mov	r0, #4
    764c:	bl	1f58 <new_stmt>
    7650:	str	r4, [r0, #12]
    7654:	mov	r4, #8
    7658:	str	r0, [sp, #80]	; 0x50
    765c:	mov	r0, #36	; 0x24
    7660:	bl	1f58 <new_stmt>
    7664:	str	r4, [r0, #12]
    7668:	str	r0, [sp, #84]	; 0x54
    766c:	mov	r0, #7
    7670:	bl	1f58 <new_stmt>
    7674:	str	r0, [sp, #88]	; 0x58
    7678:	mov	r0, #96	; 0x60
    767c:	bl	1f58 <new_stmt>
    7680:	mov	r1, r0
    7684:	mov	r0, #5
    7688:	str	r9, [r1, #12]
    768c:	str	r1, [sp, #4]
    7690:	str	r1, [sp, #92]	; 0x5c
    7694:	bl	1f58 <new_stmt>
    7698:	ldmib	sp, {r1, r2, r3}
    769c:	mvn	ip, #17
    76a0:	str	ip, [r0, #12]
    76a4:	str	r0, [sp, #96]	; 0x60
    76a8:	str	r0, [r1, #8]
    76ac:	str	r2, [r7, #4]
    76b0:	str	r2, [r6, #4]
    76b4:	str	r2, [r5, #4]
    76b8:	mov	r5, #21
    76bc:	str	r2, [r3, #4]
    76c0:	lsl	r6, r5, #2
    76c4:	mov	r0, #21
    76c8:	mov	r7, #4
    76cc:	bl	1f58 <new_stmt>
    76d0:	add	r3, sp, #416	; 0x1a0
    76d4:	cmp	r4, #0
    76d8:	add	r3, r3, r6
    76dc:	str	r0, [r3, #-400]	; 0xfffffe70
    76e0:	mov	r3, #0
    76e4:	str	r3, [r0, #4]
    76e8:	str	r3, [r0, #8]
    76ec:	mov	r3, #51	; 0x33
    76f0:	str	r3, [r0, #12]
    76f4:	addne	r3, sp, #416	; 0x1a0
    76f8:	addne	r4, r3, r4, lsl #2
    76fc:	ldrne	r3, [r4, #-400]	; 0xfffffe70
    7700:	strne	r0, [r3, #8]
    7704:	mov	r0, #135	; 0x87
    7708:	bl	1f58 <new_stmt>
    770c:	add	r3, sp, #416	; 0x1a0
    7710:	add	r3, r3, r5, lsl #2
    7714:	str	r0, [r3, #-396]	; 0xfffffe74
    7718:	add	r3, sp, #416	; 0x1a0
    771c:	add	r4, r3, r6
    7720:	add	r6, r5, #3
    7724:	ldr	r3, [r4, #-400]	; 0xfffffe70
    7728:	str	r0, [r3, #4]
    772c:	mov	r0, #80	; 0x50
    7730:	bl	1f58 <new_stmt>
    7734:	add	r3, sp, #416	; 0x1a0
    7738:	str	r8, [r0, #12]
    773c:	add	r3, r3, r5, lsl #2
    7740:	str	r0, [r3, #-392]	; 0xfffffe78
    7744:	mov	r0, #2
    7748:	bl	1f58 <new_stmt>
    774c:	add	r3, sp, #416	; 0x1a0
    7750:	str	r9, [r0, #12]
    7754:	add	r6, r3, r6, lsl #2
    7758:	str	r0, [r6, #-400]	; 0xfffffe70
    775c:	mov	r0, #135	; 0x87
    7760:	bl	1f58 <new_stmt>
    7764:	add	r3, sp, #416	; 0x1a0
    7768:	add	r3, r3, r5, lsl #2
    776c:	str	r0, [r3, #-384]	; 0xfffffe80
    7770:	ldr	r3, [r6, #-400]	; 0xfffffe70
    7774:	add	r6, r5, #12
    7778:	str	r0, [r3, #4]
    777c:	mov	r0, #4
    7780:	bl	1f58 <new_stmt>
    7784:	add	r3, sp, #416	; 0x1a0
    7788:	add	r3, r3, r5, lsl #2
    778c:	str	r0, [r3, #-380]	; 0xfffffe84
    7790:	mov	r3, #1
    7794:	str	r3, [r0, #12]
    7798:	mov	r0, #7
    779c:	bl	1f58 <new_stmt>
    77a0:	add	r3, sp, #416	; 0x1a0
    77a4:	add	r3, r3, r5, lsl #2
    77a8:	str	r0, [r3, #-376]	; 0xfffffe88
    77ac:	mov	r0, #80	; 0x50
    77b0:	bl	1f58 <new_stmt>
    77b4:	add	r3, sp, #416	; 0x1a0
    77b8:	str	r8, [r0, #12]
    77bc:	add	r3, r3, r5, lsl #2
    77c0:	str	r0, [r3, #-372]	; 0xfffffe8c
    77c4:	mov	r0, #4
    77c8:	bl	1f58 <new_stmt>
    77cc:	add	r3, sp, #416	; 0x1a0
    77d0:	add	r3, r3, r5, lsl #2
    77d4:	str	r0, [r3, #-368]	; 0xfffffe90
    77d8:	mov	r3, #2
    77dc:	str	r3, [r0, #12]
    77e0:	mov	r0, #36	; 0x24
    77e4:	bl	1f58 <new_stmt>
    77e8:	add	r3, sp, #416	; 0x1a0
    77ec:	str	r7, [r0, #12]
    77f0:	add	r3, r3, r5, lsl #2
    77f4:	str	r0, [r3, #-364]	; 0xfffffe94
    77f8:	mov	r0, #7
    77fc:	bl	1f58 <new_stmt>
    7800:	add	r3, sp, #416	; 0x1a0
    7804:	add	r3, r3, r5, lsl #2
    7808:	str	r0, [r3, #-360]	; 0xfffffe98
    780c:	mov	r0, #96	; 0x60
    7810:	bl	1f58 <new_stmt>
    7814:	add	r3, sp, #416	; 0x1a0
    7818:	str	r9, [r0, #12]
    781c:	add	r3, r3, r5, lsl #2
    7820:	add	r5, r5, #13
    7824:	str	r0, [r3, #-356]	; 0xfffffe9c
    7828:	mov	r0, #5
    782c:	bl	1f58 <new_stmt>
    7830:	add	r3, sp, #416	; 0x1a0
    7834:	add	r3, r3, r6, lsl #2
    7838:	rsb	r6, r6, #2
    783c:	str	r6, [r0, #12]
    7840:	str	r0, [r3, #-400]	; 0xfffffe70
    7844:	mov	r0, r7
    7848:	bl	1f58 <new_stmt>
    784c:	add	r3, sp, #416	; 0x1a0
    7850:	add	r3, r3, r5, lsl #2
    7854:	str	r0, [r3, #-400]	; 0xfffffe70
    7858:	mov	r3, #0
    785c:	ldr	r2, [sp, #32]
    7860:	str	r3, [r0, #12]
    7864:	str	r0, [r2, #4]
    7868:	ldr	r2, [r4, #-400]	; 0xfffffe70
    786c:	str	r0, [r2, #8]
    7870:	ldr	r2, [sp, #28]
    7874:	str	r0, [r2, #4]
    7878:	ldr	r2, [sp]
    787c:	add	r3, r3, #1
    7880:	ldr	r1, [r2]
    7884:	cmp	r3, r5
    7888:	ldr	ip, [r2, #4]!
    788c:	str	ip, [r1, #16]
    7890:	blt	787c <gen_protochain+0x4f4>
    7894:	mov	r5, #0
    7898:	str	r5, [r0, #16]
    789c:	mov	r0, #21
    78a0:	bl	1f38 <new_block>
    78a4:	ldr	r3, [sp, #20]
    78a8:	mov	r4, r0
    78ac:	mov	r1, r0
    78b0:	mov	r0, fp
    78b4:	str	r3, [r4, #4]
    78b8:	ldr	r3, [pc, #156]	; 795c <gen_protochain+0x5d4>
    78bc:	str	sl, [r4, #20]
    78c0:	add	r3, pc, r3
    78c4:	add	r9, r3, r9, lsl #2
    78c8:	str	r5, [r9, #788]	; 0x314
    78cc:	bl	2c48 <sf_gen_and>
    78d0:	b	7410 <gen_protochain+0x88>
    78d4:	movw	r0, #34525	; 0x86dd
    78d8:	bl	51fc <gen_linktype>
    78dc:	mov	fp, r0
    78e0:	mov	r0, #48	; 0x30
    78e4:	bl	1f58 <new_stmt>
    78e8:	ldr	r2, [pc, #112]	; 7960 <gen_protochain+0x5d8>
    78ec:	str	r0, [sp, #20]
    78f0:	add	r2, pc, r2
    78f4:	ldr	r3, [r2, #940]	; 0x3ac
    78f8:	ldr	r2, [r2, #948]	; 0x3b4
    78fc:	add	r3, r3, r2
    7900:	add	r3, r3, #6
    7904:	str	r3, [r0, #12]
    7908:	mov	r0, r4
    790c:	bl	1f58 <new_stmt>
    7910:	mov	r3, #40	; 0x28
    7914:	str	r0, [sp, #24]
    7918:	str	r3, [r0, #12]
    791c:	b	74e8 <gen_protochain+0x160>
    7920:	mov	r0, #4
    7924:	bl	1f58 <new_stmt>
    7928:	str	r4, [r0, #12]
    792c:	str	r0, [r5, #8]
    7930:	mov	r5, #6
    7934:	str	r0, [sp, #36]	; 0x24
    7938:	b	76c0 <gen_protochain+0x338>
    793c:	.word	0x00025c34
    7940:	.word	0x00008ef6
    7944:	.word	0x00025f34
    7948:	.word	0x00008ee8
    794c:	.word	0x00000100
    7950:	.word	0x00008ec7
    7954:	.word	0x00025ea0
    7958:	.word	0x00025e2c
    795c:	.word	0x00025aa0
    7960:	.word	0x00025a70

00007964 <sf_gen_ncode>:
    7964:	push	{r4, r5, r6, r7, lr}
    7968:	sub	sp, sp, #20
    796c:	subs	r7, r0, #0
    7970:	uxtb	r5, r2
    7974:	ubfx	r4, r2, #8, #8
    7978:	moveq	r0, #32
    797c:	ubfx	r6, r2, #16, #8
    7980:	str	r2, [sp, #8]
    7984:	str	r1, [sp, #12]
    7988:	beq	799c <sf_gen_ncode+0x38>
    798c:	cmp	r4, #12
    7990:	add	r1, sp, #12
    7994:	bne	79e0 <sf_gen_ncode+0x7c>
    7998:	bl	9b28 <__pcap_atodn>
    799c:	cmp	r5, #4
    79a0:	beq	7b68 <sf_gen_ncode+0x204>
    79a4:	bhi	79e8 <sf_gen_ncode+0x84>
    79a8:	cmp	r5, #2
    79ac:	bls	7a08 <sf_gen_ncode+0xa4>
    79b0:	cmp	r4, #7
    79b4:	beq	7ab8 <sf_gen_ncode+0x154>
    79b8:	cmp	r4, #6
    79bc:	beq	7abc <sf_gen_ncode+0x158>
    79c0:	cmp	r4, #5
    79c4:	beq	7af4 <sf_gen_ncode+0x190>
    79c8:	cmp	r4, #0
    79cc:	mvneq	r4, #0
    79d0:	beq	7abc <sf_gen_ncode+0x158>
    79d4:	ldr	r0, [pc, #460]	; 7ba8 <sf_gen_ncode+0x244>
    79d8:	add	r0, pc, r0
    79dc:	b	7a40 <sf_gen_ncode+0xdc>
    79e0:	bl	9ac4 <__pcap_atoin>
    79e4:	b	799c <sf_gen_ncode+0x38>
    79e8:	cmp	r5, #6
    79ec:	beq	7b88 <sf_gen_ncode+0x224>
    79f0:	bcc	7b74 <sf_gen_ncode+0x210>
    79f4:	cmp	r5, #7
    79f8:	beq	7afc <sf_gen_ncode+0x198>
    79fc:	cmp	r5, #255	; 0xff
    7a00:	beq	7b9c <sf_gen_ncode+0x238>
    7a04:	bl	ee8 <abort@plt>
    7a08:	cmp	r4, #12
    7a0c:	bne	7a30 <sf_gen_ncode+0xcc>
    7a10:	mov	r3, r6
    7a14:	mov	r2, r4
    7a18:	str	r5, [sp]
    7a1c:	mov	r1, #0
    7a20:	ldr	r0, [sp, #12]
    7a24:	bl	6bf0 <gen_host>
    7a28:	mov	r5, r0
    7a2c:	b	7ae8 <sf_gen_ncode+0x184>
    7a30:	cmp	r4, #1
    7a34:	bne	7a44 <sf_gen_ncode+0xe0>
    7a38:	ldr	r0, [pc, #364]	; 7bac <sf_gen_ncode+0x248>
    7a3c:	add	r0, pc, r0
    7a40:	bl	1e54 <sf_bpf_error>
    7a44:	sub	r2, r5, #2
    7a48:	cmp	r7, #0
    7a4c:	ldr	r3, [sp, #12]
    7a50:	clz	r2, r2
    7a54:	mvn	r1, #0
    7a58:	lsr	r2, r2, #5
    7a5c:	movne	r2, #0
    7a60:	cmp	r2, #0
    7a64:	beq	7aa4 <sf_gen_ncode+0x140>
    7a68:	mov	r0, #0
    7a6c:	b	7a84 <sf_gen_ncode+0x120>
    7a70:	tst	r3, #-16777216	; 0xff000000
    7a74:	bne	7a8c <sf_gen_ncode+0x128>
    7a78:	lsl	r3, r3, #8
    7a7c:	mov	r0, r2
    7a80:	lsl	r1, r1, #8
    7a84:	cmp	r3, #0
    7a88:	bne	7a70 <sf_gen_ncode+0x10c>
    7a8c:	cmp	r0, #0
    7a90:	strne	r3, [sp, #12]
    7a94:	mov	r3, r6
    7a98:	mov	r2, r4
    7a9c:	str	r5, [sp]
    7aa0:	b	7a20 <sf_gen_ncode+0xbc>
    7aa4:	rsb	r0, r0, #32
    7aa8:	lsl	r3, r3, r0
    7aac:	lsl	r1, r1, r0
    7ab0:	str	r3, [sp, #12]
    7ab4:	b	7a94 <sf_gen_ncode+0x130>
    7ab8:	mov	r4, #17
    7abc:	mov	r2, r6
    7ac0:	mov	r1, r4
    7ac4:	ldr	r0, [sp, #12]
    7ac8:	bl	7070 <gen_port>
    7acc:	mov	r5, r0
    7ad0:	mov	r2, r6
    7ad4:	ldr	r0, [sp, #12]
    7ad8:	mov	r1, r4
    7adc:	bl	712c <gen_port6>
    7ae0:	mov	r1, r5
    7ae4:	bl	2cc8 <sf_gen_or>
    7ae8:	mov	r0, r5
    7aec:	add	sp, sp, #20
    7af0:	pop	{r4, r5, r6, r7, pc}
    7af4:	mov	r4, #132	; 0x84
    7af8:	b	7abc <sf_gen_ncode+0x158>
    7afc:	cmp	r4, #7
    7b00:	beq	7b2c <sf_gen_ncode+0x1c8>
    7b04:	cmp	r4, #6
    7b08:	beq	7b30 <sf_gen_ncode+0x1cc>
    7b0c:	cmp	r4, #5
    7b10:	beq	7b60 <sf_gen_ncode+0x1fc>
    7b14:	cmp	r4, #0
    7b18:	mvneq	r4, #0
    7b1c:	beq	7b30 <sf_gen_ncode+0x1cc>
    7b20:	ldr	r0, [pc, #136]	; 7bb0 <sf_gen_ncode+0x24c>
    7b24:	add	r0, pc, r0
    7b28:	b	7a40 <sf_gen_ncode+0xdc>
    7b2c:	mov	r4, #17
    7b30:	ldr	r1, [sp, #12]
    7b34:	mov	r3, r6
    7b38:	mov	r2, r4
    7b3c:	mov	r0, r1
    7b40:	bl	71e8 <gen_portrange>
    7b44:	ldr	r1, [sp, #12]
    7b48:	mov	r5, r0
    7b4c:	mov	r3, r6
    7b50:	mov	r2, r4
    7b54:	mov	r0, r1
    7b58:	bl	72b8 <gen_portrange6>
    7b5c:	b	7ae0 <sf_gen_ncode+0x17c>
    7b60:	mov	r4, #132	; 0x84
    7b64:	b	7b30 <sf_gen_ncode+0x1cc>
    7b68:	ldr	r0, [pc, #68]	; 7bb4 <sf_gen_ncode+0x250>
    7b6c:	add	r0, pc, r0
    7b70:	b	7a40 <sf_gen_ncode+0xdc>
    7b74:	mov	r2, r6
    7b78:	mov	r1, r4
    7b7c:	ldr	r0, [sp, #12]
    7b80:	bl	5c28 <gen_proto>
    7b84:	b	7a28 <sf_gen_ncode+0xc4>
    7b88:	mov	r2, r6
    7b8c:	mov	r1, r4
    7b90:	ldr	r0, [sp, #12]
    7b94:	bl	7388 <gen_protochain>
    7b98:	b	7a28 <sf_gen_ncode+0xc4>
    7b9c:	ldr	r0, [pc, #20]	; 7bb8 <sf_gen_ncode+0x254>
    7ba0:	add	r0, pc, r0
    7ba4:	b	7a40 <sf_gen_ncode+0xdc>
    7ba8:	.word	0x000089ca
    7bac:	.word	0x0000894b
    7bb0:	.word	0x0000889a
    7bb4:	.word	0x00008873
    7bb8:	.word	0x00007ab9

00007bbc <sf_gen_broadcast>:
    7bbc:	push	{r0, r1, r4, r5, r6, lr}
    7bc0:	cmp	r0, #0
    7bc4:	blt	7bd8 <sf_gen_broadcast+0x1c>
    7bc8:	cmp	r0, #1
    7bcc:	ble	7be4 <sf_gen_broadcast+0x28>
    7bd0:	cmp	r0, #2
    7bd4:	beq	7d74 <sf_gen_broadcast+0x1b8>
    7bd8:	ldr	r0, [pc, #520]	; 7de8 <sf_gen_broadcast+0x22c>
    7bdc:	add	r0, pc, r0
    7be0:	b	7c20 <sf_gen_broadcast+0x64>
    7be4:	ldr	r2, [pc, #512]	; 7dec <sf_gen_broadcast+0x230>
    7be8:	add	r2, pc, r2
    7bec:	ldr	r3, [r2, #856]	; 0x358
    7bf0:	cmp	r3, #119	; 0x77
    7bf4:	beq	7c34 <sf_gen_broadcast+0x78>
    7bf8:	bgt	7c50 <sf_gen_broadcast+0x94>
    7bfc:	cmp	r3, #7
    7c00:	beq	7ce8 <sf_gen_broadcast+0x12c>
    7c04:	bgt	7c24 <sf_gen_broadcast+0x68>
    7c08:	cmp	r3, #1
    7c0c:	beq	7d04 <sf_gen_broadcast+0x148>
    7c10:	cmp	r3, #6
    7c14:	beq	7d3c <sf_gen_broadcast+0x180>
    7c18:	ldr	r0, [pc, #464]	; 7df0 <sf_gen_broadcast+0x234>
    7c1c:	add	r0, pc, r0
    7c20:	bl	1e54 <sf_bpf_error>
    7c24:	cmp	r3, #10
    7c28:	beq	7d20 <sf_gen_broadcast+0x164>
    7c2c:	cmp	r3, #105	; 0x69
    7c30:	bne	7c18 <sf_gen_broadcast+0x5c>
    7c34:	ldr	r0, [pc, #440]	; 7df4 <sf_gen_broadcast+0x238>
    7c38:	mov	r1, #2
    7c3c:	add	r0, pc, r0
    7c40:	add	r0, r0, #8
    7c44:	add	sp, sp, #8
    7c48:	pop	{r4, r5, r6, lr}
    7c4c:	b	3ea4 <gen_wlanhostop>
    7c50:	cmp	r3, #127	; 0x7f
    7c54:	beq	7c34 <sf_gen_broadcast+0x78>
    7c58:	bgt	7cd0 <sf_gen_broadcast+0x114>
    7c5c:	cmp	r3, #122	; 0x7a
    7c60:	beq	7d58 <sf_gen_broadcast+0x19c>
    7c64:	cmp	r3, #123	; 0x7b
    7c68:	bne	7c18 <sf_gen_broadcast+0x5c>
    7c6c:	ldr	r3, [r2, #892]	; 0x37c
    7c70:	cmp	r3, #0
    7c74:	beq	7bd8 <sf_gen_broadcast+0x1c>
    7c78:	mov	r3, #65280	; 0xff00
    7c7c:	mov	r2, #8
    7c80:	mov	r1, #4
    7c84:	mov	r0, #1
    7c88:	bl	371c <gen_cmp>
    7c8c:	mov	r5, r0
    7c90:	ldr	r0, [pc, #352]	; 7df8 <sf_gen_broadcast+0x23c>
    7c94:	mov	r1, #2
    7c98:	ldr	r3, [r5, #44]	; 0x2c
    7c9c:	add	r0, pc, r0
    7ca0:	add	r0, r0, #8
    7ca4:	clz	r3, r3
    7ca8:	lsr	r3, r3, #5
    7cac:	str	r3, [r5, #44]	; 0x2c
    7cb0:	bl	3aa4 <gen_ehostop>
    7cb4:	mov	r4, r0
    7cb8:	mov	r0, r5
    7cbc:	mov	r1, r4
    7cc0:	bl	2c48 <sf_gen_and>
    7cc4:	mov	r0, r4
    7cc8:	add	sp, sp, #8
    7ccc:	pop	{r4, r5, r6, pc}
    7cd0:	cmp	r3, #163	; 0xa3
    7cd4:	beq	7c34 <sf_gen_broadcast+0x78>
    7cd8:	cmp	r3, #192	; 0xc0
    7cdc:	beq	7c34 <sf_gen_broadcast+0x78>
    7ce0:	cmp	r3, #129	; 0x81
    7ce4:	bne	7c18 <sf_gen_broadcast+0x5c>
    7ce8:	ldr	r0, [pc, #268]	; 7dfc <sf_gen_broadcast+0x240>
    7cec:	mov	r1, #2
    7cf0:	add	r0, pc, r0
    7cf4:	add	r0, r0, #956	; 0x3bc
    7cf8:	add	sp, sp, #8
    7cfc:	pop	{r4, r5, r6, lr}
    7d00:	b	3b70 <gen_ahostop>
    7d04:	ldr	r0, [pc, #244]	; 7e00 <sf_gen_broadcast+0x244>
    7d08:	mov	r1, #2
    7d0c:	add	r0, pc, r0
    7d10:	add	r0, r0, #8
    7d14:	add	sp, sp, #8
    7d18:	pop	{r4, r5, r6, lr}
    7d1c:	b	3aa4 <gen_ehostop>
    7d20:	ldr	r0, [pc, #220]	; 7e04 <sf_gen_broadcast+0x248>
    7d24:	mov	r1, #2
    7d28:	add	r0, pc, r0
    7d2c:	add	r0, r0, #8
    7d30:	add	sp, sp, #8
    7d34:	pop	{r4, r5, r6, lr}
    7d38:	b	3894 <gen_fhostop>
    7d3c:	ldr	r0, [pc, #196]	; 7e08 <sf_gen_broadcast+0x24c>
    7d40:	mov	r1, #2
    7d44:	add	r0, pc, r0
    7d48:	add	r0, r0, #8
    7d4c:	add	sp, sp, #8
    7d50:	pop	{r4, r5, r6, lr}
    7d54:	b	3944 <gen_thostop>
    7d58:	ldr	r0, [pc, #172]	; 7e0c <sf_gen_broadcast+0x250>
    7d5c:	mov	r1, #2
    7d60:	add	r0, pc, r0
    7d64:	add	r0, r0, #8
    7d68:	add	sp, sp, #8
    7d6c:	pop	{r4, r5, r6, lr}
    7d70:	b	39f4 <gen_ipfchostop>
    7d74:	ldr	r3, [pc, #148]	; 7e10 <sf_gen_broadcast+0x254>
    7d78:	add	r3, pc, r3
    7d7c:	ldr	r4, [r3, #876]	; 0x36c
    7d80:	cmn	r4, #1
    7d84:	ldreq	r0, [pc, #136]	; 7e14 <sf_gen_broadcast+0x258>
    7d88:	addeq	r0, pc, r0
    7d8c:	beq	7c20 <sf_gen_broadcast+0x64>
    7d90:	mvn	r4, r4
    7d94:	mov	r0, #2048	; 0x800
    7d98:	bl	51fc <gen_linktype>
    7d9c:	mov	r3, #0
    7da0:	mov	r5, r0
    7da4:	str	r4, [sp]
    7da8:	mov	r2, r3
    7dac:	mov	r1, #16
    7db0:	mov	r0, #3
    7db4:	bl	3e80 <gen_mcmp>
    7db8:	mov	r6, r0
    7dbc:	mov	r3, r4
    7dc0:	str	r4, [sp]
    7dc4:	mov	r2, #0
    7dc8:	mov	r1, #16
    7dcc:	mov	r0, #3
    7dd0:	bl	3e80 <gen_mcmp>
    7dd4:	mov	r4, r0
    7dd8:	mov	r1, r0
    7ddc:	mov	r0, r6
    7de0:	bl	2cc8 <sf_gen_or>
    7de4:	b	7cb8 <sf_gen_broadcast+0xfc>
    7de8:	.word	0x00008865
    7dec:	.word	0x00025778
    7df0:	.word	0x000087dd
    7df4:	.word	0x00025638
    7df8:	.word	0x000255d8
    7dfc:	.word	0x00025670
    7e00:	.word	0x00025568
    7e04:	.word	0x0002554c
    7e08:	.word	0x00025530
    7e0c:	.word	0x00025514
    7e10:	.word	0x000255e8
    7e14:	.word	0x00008686

00007e18 <sf_gen_multicast>:
    7e18:	cmp	r0, #2
    7e1c:	push	{r4, r5, r6, r7, lr}
    7e20:	sub	sp, sp, #20
    7e24:	beq	80d4 <sf_gen_multicast+0x2bc>
    7e28:	bgt	7e40 <sf_gen_multicast+0x28>
    7e2c:	cmp	r0, #0
    7e30:	bge	7e6c <sf_gen_multicast+0x54>
    7e34:	ldr	r0, [pc, #720]	; 810c <sf_gen_multicast+0x2f4>
    7e38:	add	r0, pc, r0
    7e3c:	bl	1e54 <sf_bpf_error>
    7e40:	cmp	r0, #17
    7e44:	bne	7e34 <sf_gen_multicast+0x1c>
    7e48:	movw	r0, #34525	; 0x86dd
    7e4c:	bl	51fc <gen_linktype>
    7e50:	mov	r5, r0
    7e54:	mov	r3, #255	; 0xff
    7e58:	mov	r2, #16
    7e5c:	mov	r1, #24
    7e60:	mov	r0, #3
    7e64:	bl	371c <gen_cmp>
    7e68:	b	8080 <sf_gen_multicast+0x268>
    7e6c:	ldr	r2, [pc, #668]	; 8110 <sf_gen_multicast+0x2f8>
    7e70:	add	r2, pc, r2
    7e74:	ldr	r3, [r2, #856]	; 0x358
    7e78:	cmp	r3, #119	; 0x77
    7e7c:	beq	7ebc <sf_gen_multicast+0xa4>
    7e80:	bgt	8020 <sf_gen_multicast+0x208>
    7e84:	cmp	r3, #7
    7e88:	beq	80a8 <sf_gen_multicast+0x290>
    7e8c:	bgt	7ea8 <sf_gen_multicast+0x90>
    7e90:	cmp	r3, #1
    7e94:	beq	80c4 <sf_gen_multicast+0x2ac>
    7e98:	cmp	r3, #6
    7e9c:	bne	7e34 <sf_gen_multicast+0x1c>
    7ea0:	mov	r0, #2
    7ea4:	b	80c8 <sf_gen_multicast+0x2b0>
    7ea8:	cmp	r3, #10
    7eac:	moveq	r0, #1
    7eb0:	beq	80c8 <sf_gen_multicast+0x2b0>
    7eb4:	cmp	r3, #105	; 0x69
    7eb8:	bne	7e34 <sf_gen_multicast+0x1c>
    7ebc:	mov	r1, #16
    7ec0:	mov	r0, #1
    7ec4:	bl	33d8 <gen_load_llrel>
    7ec8:	mov	r4, r0
    7ecc:	mov	r0, #69	; 0x45
    7ed0:	bl	1f38 <new_block>
    7ed4:	mov	r5, r0
    7ed8:	mov	r6, #1
    7edc:	mov	r0, #16
    7ee0:	str	r4, [r5, #4]
    7ee4:	str	r6, [r5, #20]
    7ee8:	bl	3438 <gen_mac_multicast>
    7eec:	mov	r4, r0
    7ef0:	mov	r1, r0
    7ef4:	mov	r0, r5
    7ef8:	bl	2c48 <sf_gen_and>
    7efc:	mov	r1, #16
    7f00:	mov	r0, r6
    7f04:	bl	33d8 <gen_load_llrel>
    7f08:	mov	r7, r0
    7f0c:	mov	r0, #69	; 0x45
    7f10:	bl	1f38 <new_block>
    7f14:	mov	r5, r0
    7f18:	mov	r0, #4
    7f1c:	ldr	r3, [r5, #44]	; 0x2c
    7f20:	str	r7, [r5, #4]
    7f24:	str	r6, [r5, #20]
    7f28:	clz	r3, r3
    7f2c:	lsr	r3, r3, #5
    7f30:	str	r3, [r5, #44]	; 0x2c
    7f34:	bl	3438 <gen_mac_multicast>
    7f38:	mov	r6, r0
    7f3c:	mov	r1, r0
    7f40:	mov	r0, r5
    7f44:	bl	2c48 <sf_gen_and>
    7f48:	mov	r0, r6
    7f4c:	mov	r1, r4
    7f50:	bl	2cc8 <sf_gen_or>
    7f54:	mov	r1, #16
    7f58:	mov	r0, #0
    7f5c:	bl	33d8 <gen_load_llrel>
    7f60:	mov	r5, r0
    7f64:	mov	r6, #8
    7f68:	mov	r0, #69	; 0x45
    7f6c:	bl	1f38 <new_block>
    7f70:	mov	r1, r4
    7f74:	str	r5, [r0, #4]
    7f78:	str	r6, [r0, #20]
    7f7c:	bl	2c48 <sf_gen_and>
    7f80:	mov	r1, #16
    7f84:	mov	r0, #0
    7f88:	bl	33d8 <gen_load_llrel>
    7f8c:	mov	r7, r0
    7f90:	mov	r0, #69	; 0x45
    7f94:	bl	1f38 <new_block>
    7f98:	mov	r5, r0
    7f9c:	mov	r0, #4
    7fa0:	ldr	r3, [r5, #44]	; 0x2c
    7fa4:	str	r7, [r5, #4]
    7fa8:	str	r6, [r5, #20]
    7fac:	clz	r3, r3
    7fb0:	lsr	r3, r3, #5
    7fb4:	str	r3, [r5, #44]	; 0x2c
    7fb8:	bl	3438 <gen_mac_multicast>
    7fbc:	mov	r1, r0
    7fc0:	mov	r6, r0
    7fc4:	mov	r0, r5
    7fc8:	bl	2c48 <sf_gen_and>
    7fcc:	mov	r1, r4
    7fd0:	mov	r0, r6
    7fd4:	bl	2cc8 <sf_gen_or>
    7fd8:	mov	r1, #16
    7fdc:	mov	r0, #0
    7fe0:	bl	33d8 <gen_load_llrel>
    7fe4:	mov	r5, r0
    7fe8:	mov	r0, #69	; 0x45
    7fec:	bl	1f38 <new_block>
    7ff0:	mov	r3, #4
    7ff4:	mov	r1, r4
    7ff8:	str	r5, [r0, #4]
    7ffc:	str	r3, [r0, #20]
    8000:	ldr	r3, [r0, #44]	; 0x2c
    8004:	clz	r3, r3
    8008:	lsr	r3, r3, #5
    800c:	str	r3, [r0, #44]	; 0x2c
    8010:	bl	2c48 <sf_gen_and>
    8014:	mov	r0, r4
    8018:	add	sp, sp, #20
    801c:	pop	{r4, r5, r6, r7, pc}
    8020:	cmp	r3, #127	; 0x7f
    8024:	beq	7ebc <sf_gen_multicast+0xa4>
    8028:	bgt	8090 <sf_gen_multicast+0x278>
    802c:	cmp	r3, #122	; 0x7a
    8030:	beq	7ea0 <sf_gen_multicast+0x88>
    8034:	cmp	r3, #123	; 0x7b
    8038:	bne	7e34 <sf_gen_multicast+0x1c>
    803c:	ldr	r3, [r2, #892]	; 0x37c
    8040:	cmp	r3, #0
    8044:	beq	7e34 <sf_gen_multicast+0x1c>
    8048:	mov	r3, #65280	; 0xff00
    804c:	mov	r2, #8
    8050:	mov	r1, #4
    8054:	mov	r0, #1
    8058:	bl	371c <gen_cmp>
    805c:	ldr	r3, [r0, #44]	; 0x2c
    8060:	mov	r5, r0
    8064:	clz	r3, r3
    8068:	lsr	r3, r3, #5
    806c:	str	r3, [r0, #44]	; 0x2c
    8070:	ldr	r3, [pc, #156]	; 8114 <sf_gen_multicast+0x2fc>
    8074:	add	r3, pc, r3
    8078:	ldr	r0, [r3, #884]	; 0x374
    807c:	bl	3438 <gen_mac_multicast>
    8080:	mov	r4, r0
    8084:	mov	r1, r0
    8088:	mov	r0, r5
    808c:	b	8010 <sf_gen_multicast+0x1f8>
    8090:	cmp	r3, #163	; 0xa3
    8094:	beq	7ebc <sf_gen_multicast+0xa4>
    8098:	cmp	r3, #192	; 0xc0
    809c:	beq	7ebc <sf_gen_multicast+0xa4>
    80a0:	cmp	r3, #129	; 0x81
    80a4:	bne	7e34 <sf_gen_multicast+0x1c>
    80a8:	ldr	r0, [pc, #104]	; 8118 <sf_gen_multicast+0x300>
    80ac:	mov	r1, #2
    80b0:	add	r0, pc, r0
    80b4:	add	r0, r0, #956	; 0x3bc
    80b8:	add	sp, sp, #20
    80bc:	pop	{r4, r5, r6, r7, lr}
    80c0:	b	3b70 <gen_ahostop>
    80c4:	mov	r0, #0
    80c8:	add	sp, sp, #20
    80cc:	pop	{r4, r5, r6, r7, lr}
    80d0:	b	3438 <gen_mac_multicast>
    80d4:	mov	r0, #2048	; 0x800
    80d8:	mov	r6, #48	; 0x30
    80dc:	bl	51fc <gen_linktype>
    80e0:	mov	r7, #0
    80e4:	mov	r3, #224	; 0xe0
    80e8:	mov	r2, #16
    80ec:	mov	r5, r0
    80f0:	mov	r1, r2
    80f4:	mov	r0, #3
    80f8:	strd	r6, [sp]
    80fc:	str	r3, [sp, #8]
    8100:	mvn	r3, #0
    8104:	bl	35c8 <gen_ncmp>
    8108:	b	8080 <sf_gen_multicast+0x268>
    810c:	.word	0x00008638
    8110:	.word	0x000254f0
    8114:	.word	0x000252ec
    8118:	.word	0x000252b0

0000811c <sf_gen_mpls>:
    811c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8120:	mov	r7, r0
    8124:	ldr	r2, [pc, #232]	; 8214 <sf_gen_mpls+0xf8>
    8128:	ldr	r3, [pc, #232]	; 8218 <sf_gen_mpls+0xfc>
    812c:	add	r2, pc, r2
    8130:	ldr	r6, [r2, #4]
    8134:	add	r3, pc, r3
    8138:	ldr	r4, [r3, #948]	; 0x3b4
    813c:	cmp	r6, #0
    8140:	str	r4, [r2]
    8144:	beq	81d8 <sf_gen_mpls+0xbc>
    8148:	mov	r3, #1
    814c:	mov	r2, #16
    8150:	sub	r1, r4, #2
    8154:	mov	r0, #2
    8158:	str	r3, [sp]
    815c:	mov	r3, #0
    8160:	bl	3e80 <gen_mcmp>
    8164:	cmp	r7, #0
    8168:	mov	r5, r0
    816c:	blt	81a0 <sf_gen_mpls+0x84>
    8170:	ldr	r3, [pc, #164]	; 821c <sf_gen_mpls+0x100>
    8174:	mov	r2, #0
    8178:	mov	r1, r4
    817c:	mov	r0, #2
    8180:	str	r3, [sp]
    8184:	lsl	r3, r7, #12
    8188:	bl	3e80 <gen_mcmp>
    818c:	mov	r7, r0
    8190:	mov	r1, r0
    8194:	mov	r0, r5
    8198:	mov	r5, r7
    819c:	bl	2c48 <sf_gen_and>
    81a0:	ldr	r3, [pc, #120]	; 8220 <sf_gen_mpls+0x104>
    81a4:	add	r4, r4, #4
    81a8:	add	r6, r6, #1
    81ac:	mov	r0, r5
    81b0:	add	r3, pc, r3
    81b4:	ldr	r2, [r3, #952]	; 0x3b8
    81b8:	str	r4, [r3, #948]	; 0x3b4
    81bc:	add	r2, r2, #4
    81c0:	str	r2, [r3, #952]	; 0x3b8
    81c4:	ldr	r3, [pc, #88]	; 8224 <sf_gen_mpls+0x108>
    81c8:	add	r3, pc, r3
    81cc:	str	r6, [r3, #4]
    81d0:	add	sp, sp, #12
    81d4:	pop	{r4, r5, r6, r7, pc}
    81d8:	ldr	r1, [r3, #856]	; 0x358
    81dc:	cmp	r1, #9
    81e0:	beq	8200 <sf_gen_mpls+0xe4>
    81e4:	cmp	r1, #104	; 0x68
    81e8:	beq	81f4 <sf_gen_mpls+0xd8>
    81ec:	cmp	r1, #1
    81f0:	bne	8208 <sf_gen_mpls+0xec>
    81f4:	movw	r0, #34887	; 0x8847
    81f8:	bl	51fc <gen_linktype>
    81fc:	b	8164 <sf_gen_mpls+0x48>
    8200:	movw	r0, #641	; 0x281
    8204:	b	81f8 <sf_gen_mpls+0xdc>
    8208:	ldr	r0, [pc, #24]	; 8228 <sf_gen_mpls+0x10c>
    820c:	add	r0, pc, r0
    8210:	bl	1e54 <sf_bpf_error>
    8214:	.word	0x00025148
    8218:	.word	0x0002522c
    821c:	.word	0xfffff000
    8220:	.word	0x000251b0
    8224:	.word	0x000250ac
    8228:	.word	0x000082d1

0000822c <sf_gen_pppoed>:
    822c:	movw	r0, #34915	; 0x8863
    8230:	b	51fc <gen_linktype>

00008234 <sf_gen_pppoes>:
    8234:	push	{r4, lr}
    8238:	movw	r0, #34916	; 0x8864
    823c:	bl	51fc <gen_linktype>
    8240:	ldr	r3, [pc, #48]	; 8278 <sf_gen_pppoes+0x44>
    8244:	ldr	r1, [pc, #48]	; 827c <sf_gen_pppoes+0x48>
    8248:	add	r3, pc, r3
    824c:	ldr	r2, [r3, #948]	; 0x3b4
    8250:	add	r1, pc, r1
    8254:	str	r2, [r1]
    8258:	add	r2, r2, #6
    825c:	mov	r1, #1
    8260:	str	r1, [r3, #912]	; 0x390
    8264:	str	r2, [r3, #944]	; 0x3b0
    8268:	mov	r2, #8
    826c:	str	r2, [r3, #948]	; 0x3b4
    8270:	str	r2, [r3, #952]	; 0x3b8
    8274:	pop	{r4, pc}
    8278:	.word	0x00025118
    827c:	.word	0x00025024

00008280 <gen_hostop6.constprop.8>:
    8280:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    8284:	mov	r6, r0
    8288:	mov	r5, r1
    828c:	cmp	r2, #4
    8290:	addls	pc, pc, r2, lsl #2
    8294:	b	83d4 <gen_hostop6.constprop.8+0x154>
    8298:	b	839c <gen_hostop6.constprop.8+0x11c>
    829c:	b	83d8 <gen_hostop6.constprop.8+0x158>
    82a0:	b	82ac <gen_hostop6.constprop.8+0x2c>
    82a4:	b	839c <gen_hostop6.constprop.8+0x11c>
    82a8:	b	836c <gen_hostop6.constprop.8+0xec>
    82ac:	mov	r7, #24
    82b0:	ldr	r2, [r5, #12]
    82b4:	add	r1, r7, #12
    82b8:	mov	r0, #3
    82bc:	ldr	r3, [r6, #12]
    82c0:	rev	r2, r2
    82c4:	rev	r3, r3
    82c8:	str	r2, [sp]
    82cc:	mov	r2, #0
    82d0:	bl	3e80 <gen_mcmp>
    82d4:	ldr	r2, [r5, #8]
    82d8:	mov	r4, r0
    82dc:	add	r1, r7, #8
    82e0:	mov	r0, #3
    82e4:	ldr	r3, [r6, #8]
    82e8:	rev	r2, r2
    82ec:	rev	r3, r3
    82f0:	str	r2, [sp]
    82f4:	mov	r2, #0
    82f8:	bl	3e80 <gen_mcmp>
    82fc:	mov	r1, r4
    8300:	bl	2c48 <sf_gen_and>
    8304:	ldr	r2, [r5, #4]
    8308:	add	r1, r7, #4
    830c:	mov	r0, #3
    8310:	ldr	r3, [r6, #4]
    8314:	rev	r2, r2
    8318:	rev	r3, r3
    831c:	str	r2, [sp]
    8320:	mov	r2, #0
    8324:	bl	3e80 <gen_mcmp>
    8328:	mov	r1, r4
    832c:	bl	2c48 <sf_gen_and>
    8330:	ldr	r2, [r5]
    8334:	mov	r1, r7
    8338:	mov	r0, #3
    833c:	ldr	r3, [r6]
    8340:	rev	r2, r2
    8344:	rev	r3, r3
    8348:	str	r2, [sp]
    834c:	mov	r2, #0
    8350:	bl	3e80 <gen_mcmp>
    8354:	mov	r1, r4
    8358:	bl	2c48 <sf_gen_and>
    835c:	movw	r0, #34525	; 0x86dd
    8360:	bl	51fc <gen_linktype>
    8364:	mov	r1, r4
    8368:	b	8394 <gen_hostop6.constprop.8+0x114>
    836c:	mov	r2, #1
    8370:	bl	8280 <gen_hostop6.constprop.8>
    8374:	mov	r7, r0
    8378:	mov	r1, r5
    837c:	mov	r2, #2
    8380:	mov	r0, r6
    8384:	bl	8280 <gen_hostop6.constprop.8>
    8388:	mov	r4, r0
    838c:	mov	r1, r0
    8390:	mov	r0, r7
    8394:	bl	2c48 <sf_gen_and>
    8398:	b	83c8 <gen_hostop6.constprop.8+0x148>
    839c:	mov	r2, #1
    83a0:	bl	8280 <gen_hostop6.constprop.8>
    83a4:	mov	r7, r0
    83a8:	mov	r1, r5
    83ac:	mov	r2, #2
    83b0:	mov	r0, r6
    83b4:	bl	8280 <gen_hostop6.constprop.8>
    83b8:	mov	r4, r0
    83bc:	mov	r1, r0
    83c0:	mov	r0, r7
    83c4:	bl	2cc8 <sf_gen_or>
    83c8:	mov	r0, r4
    83cc:	add	sp, sp, #12
    83d0:	pop	{r4, r5, r6, r7, pc}
    83d4:	bl	ee8 <abort@plt>
    83d8:	mov	r7, #8
    83dc:	b	82b0 <gen_hostop6.constprop.8+0x30>

000083e0 <gen_host6>:
    83e0:	push	{r4, lr}
    83e4:	mov	lr, r1
    83e8:	ldr	ip, [pc, #564]	; 8624 <gen_host6+0x244>
    83ec:	ldr	r4, [sp, #8]
    83f0:	ldr	r1, [pc, #560]	; 8628 <gen_host6+0x248>
    83f4:	add	ip, pc, ip
    83f8:	cmp	r4, #2
    83fc:	add	r1, pc, r1
    8400:	moveq	r1, ip
    8404:	cmp	r2, #40	; 0x28
    8408:	addls	pc, pc, r2, lsl #2
    840c:	b	8620 <gen_host6+0x240>
    8410:	b	858c <gen_host6+0x1ac>
    8414:	b	8620 <gen_host6+0x240>
    8418:	b	84b4 <gen_host6+0xd4>
    841c:	b	84cc <gen_host6+0xec>
    8420:	b	84c0 <gen_host6+0xe0>
    8424:	b	84d8 <gen_host6+0xf8>
    8428:	b	84e4 <gen_host6+0x104>
    842c:	b	84f0 <gen_host6+0x110>
    8430:	b	84fc <gen_host6+0x11c>
    8434:	b	8508 <gen_host6+0x128>
    8438:	b	8514 <gen_host6+0x134>
    843c:	b	8538 <gen_host6+0x158>
    8440:	b	8550 <gen_host6+0x170>
    8444:	b	8568 <gen_host6+0x188>
    8448:	b	855c <gen_host6+0x17c>
    844c:	b	8580 <gen_host6+0x1a0>
    8450:	b	8574 <gen_host6+0x194>
    8454:	b	858c <gen_host6+0x1ac>
    8458:	b	859c <gen_host6+0x1bc>
    845c:	b	85a8 <gen_host6+0x1c8>
    8460:	b	85b4 <gen_host6+0x1d4>
    8464:	b	8520 <gen_host6+0x140>
    8468:	b	852c <gen_host6+0x14c>
    846c:	b	8544 <gen_host6+0x164>
    8470:	b	85c0 <gen_host6+0x1e0>
    8474:	b	85cc <gen_host6+0x1ec>
    8478:	b	85d8 <gen_host6+0x1f8>
    847c:	b	85e4 <gen_host6+0x204>
    8480:	b	85f0 <gen_host6+0x210>
    8484:	b	85fc <gen_host6+0x21c>
    8488:	b	8608 <gen_host6+0x228>
    848c:	b	8620 <gen_host6+0x240>
    8490:	b	8620 <gen_host6+0x240>
    8494:	b	8620 <gen_host6+0x240>
    8498:	b	8620 <gen_host6+0x240>
    849c:	b	8620 <gen_host6+0x240>
    84a0:	b	8620 <gen_host6+0x240>
    84a4:	b	8620 <gen_host6+0x240>
    84a8:	b	8620 <gen_host6+0x240>
    84ac:	b	8620 <gen_host6+0x240>
    84b0:	b	8614 <gen_host6+0x234>
    84b4:	ldr	r0, [pc, #368]	; 862c <gen_host6+0x24c>
    84b8:	add	r0, pc, r0
    84bc:	bl	1e54 <sf_bpf_error>
    84c0:	ldr	r0, [pc, #360]	; 8630 <gen_host6+0x250>
    84c4:	add	r0, pc, r0
    84c8:	b	84bc <gen_host6+0xdc>
    84cc:	ldr	r0, [pc, #352]	; 8634 <gen_host6+0x254>
    84d0:	add	r0, pc, r0
    84d4:	b	84bc <gen_host6+0xdc>
    84d8:	ldr	r0, [pc, #344]	; 8638 <gen_host6+0x258>
    84dc:	add	r0, pc, r0
    84e0:	b	84bc <gen_host6+0xdc>
    84e4:	ldr	r0, [pc, #336]	; 863c <gen_host6+0x25c>
    84e8:	add	r0, pc, r0
    84ec:	b	84bc <gen_host6+0xdc>
    84f0:	ldr	r0, [pc, #328]	; 8640 <gen_host6+0x260>
    84f4:	add	r0, pc, r0
    84f8:	b	84bc <gen_host6+0xdc>
    84fc:	ldr	r0, [pc, #320]	; 8644 <gen_host6+0x264>
    8500:	add	r0, pc, r0
    8504:	b	84bc <gen_host6+0xdc>
    8508:	ldr	r0, [pc, #312]	; 8648 <gen_host6+0x268>
    850c:	add	r0, pc, r0
    8510:	b	84bc <gen_host6+0xdc>
    8514:	ldr	r0, [pc, #304]	; 864c <gen_host6+0x26c>
    8518:	add	r0, pc, r0
    851c:	b	84bc <gen_host6+0xdc>
    8520:	ldr	r0, [pc, #296]	; 8650 <gen_host6+0x270>
    8524:	add	r0, pc, r0
    8528:	b	84bc <gen_host6+0xdc>
    852c:	ldr	r0, [pc, #288]	; 8654 <gen_host6+0x274>
    8530:	add	r0, pc, r0
    8534:	b	84bc <gen_host6+0xdc>
    8538:	ldr	r0, [pc, #280]	; 8658 <gen_host6+0x278>
    853c:	add	r0, pc, r0
    8540:	bl	1e54 <sf_bpf_error>
    8544:	ldr	r0, [pc, #272]	; 865c <gen_host6+0x27c>
    8548:	add	r0, pc, r0
    854c:	b	8540 <gen_host6+0x160>
    8550:	ldr	r0, [pc, #264]	; 8660 <gen_host6+0x280>
    8554:	add	r0, pc, r0
    8558:	b	84bc <gen_host6+0xdc>
    855c:	ldr	r0, [pc, #256]	; 8664 <gen_host6+0x284>
    8560:	add	r0, pc, r0
    8564:	b	8540 <gen_host6+0x160>
    8568:	ldr	r0, [pc, #248]	; 8668 <gen_host6+0x288>
    856c:	add	r0, pc, r0
    8570:	b	8540 <gen_host6+0x160>
    8574:	ldr	r0, [pc, #240]	; 866c <gen_host6+0x28c>
    8578:	add	r0, pc, r0
    857c:	b	8540 <gen_host6+0x160>
    8580:	ldr	r0, [pc, #232]	; 8670 <gen_host6+0x290>
    8584:	add	r0, pc, r0
    8588:	b	8540 <gen_host6+0x160>
    858c:	mov	r1, lr
    8590:	mov	r2, r3
    8594:	pop	{r4, lr}
    8598:	b	8280 <gen_hostop6.constprop.8>
    859c:	ldr	r0, [pc, #208]	; 8674 <gen_host6+0x294>
    85a0:	add	r0, pc, r0
    85a4:	b	84bc <gen_host6+0xdc>
    85a8:	ldr	r0, [pc, #200]	; 8678 <gen_host6+0x298>
    85ac:	add	r0, pc, r0
    85b0:	b	84bc <gen_host6+0xdc>
    85b4:	ldr	r0, [pc, #192]	; 867c <gen_host6+0x29c>
    85b8:	add	r0, pc, r0
    85bc:	b	84bc <gen_host6+0xdc>
    85c0:	ldr	r0, [pc, #184]	; 8680 <gen_host6+0x2a0>
    85c4:	add	r0, pc, r0
    85c8:	b	8540 <gen_host6+0x160>
    85cc:	ldr	r0, [pc, #176]	; 8684 <gen_host6+0x2a4>
    85d0:	add	r0, pc, r0
    85d4:	b	84bc <gen_host6+0xdc>
    85d8:	ldr	r0, [pc, #168]	; 8688 <gen_host6+0x2a8>
    85dc:	add	r0, pc, r0
    85e0:	b	84bc <gen_host6+0xdc>
    85e4:	ldr	r0, [pc, #160]	; 868c <gen_host6+0x2ac>
    85e8:	add	r0, pc, r0
    85ec:	b	84bc <gen_host6+0xdc>
    85f0:	ldr	r0, [pc, #152]	; 8690 <gen_host6+0x2b0>
    85f4:	add	r0, pc, r0
    85f8:	b	84bc <gen_host6+0xdc>
    85fc:	ldr	r0, [pc, #144]	; 8694 <gen_host6+0x2b4>
    8600:	add	r0, pc, r0
    8604:	b	8540 <gen_host6+0x160>
    8608:	ldr	r0, [pc, #136]	; 8698 <gen_host6+0x2b8>
    860c:	add	r0, pc, r0
    8610:	b	84bc <gen_host6+0xdc>
    8614:	ldr	r0, [pc, #128]	; 869c <gen_host6+0x2bc>
    8618:	add	r0, pc, r0
    861c:	b	84bc <gen_host6+0xdc>
    8620:	bl	ee8 <abort@plt>
    8624:	.word	0x00007434
    8628:	.word	0x00007d66
    862c:	.word	0x0000804b
    8630:	.word	0x0000805f
    8634:	.word	0x00008075
    8638:	.word	0x00007ac0
    863c:	.word	0x00007a97
    8640:	.word	0x00007ac6
    8644:	.word	0x00007ad7
    8648:	.word	0x00007ae9
    864c:	.word	0x00007afb
    8650:	.word	0x00007b0d
    8654:	.word	0x00007b1e
    8658:	.word	0x00007b30
    865c:	.word	0x00007b49
    8660:	.word	0x00008012
    8664:	.word	0x00007b55
    8668:	.word	0x00007b6c
    866c:	.word	0x00007b83
    8670:	.word	0x00007b9c
    8674:	.word	0x00007bc7
    8678:	.word	0x00007bda
    867c:	.word	0x00007bea
    8680:	.word	0x00007998
    8684:	.word	0x00007bef
    8688:	.word	0x00007c01
    868c:	.word	0x00007c13
    8690:	.word	0x00007c25
    8694:	.word	0x00007c36
    8698:	.word	0x00007c4d
    869c:	.word	0x00007c62

000086a0 <sf_gen_mcode6>:
    86a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    86a4:	sub	sp, sp, #36	; 0x24
    86a8:	cmp	r1, #0
    86ac:	str	r3, [sp, #12]
    86b0:	beq	86c0 <sf_gen_mcode6+0x20>
    86b4:	ldr	r0, [pc, #384]	; 883c <sf_gen_mcode6+0x19c>
    86b8:	add	r0, pc, r0
    86bc:	bl	1e54 <sf_bpf_error>
    86c0:	mov	r9, r0
    86c4:	mov	r4, r2
    86c8:	uxtb	fp, r3
    86cc:	bl	9814 <pcap_nametoaddrinfo>
    86d0:	subs	r6, r0, #0
    86d4:	bne	86e8 <sf_gen_mcode6+0x48>
    86d8:	ldr	r0, [pc, #352]	; 8840 <sf_gen_mcode6+0x1a0>
    86dc:	mov	r1, r9
    86e0:	add	r0, pc, r0
    86e4:	b	86bc <sf_gen_mcode6+0x1c>
    86e8:	ldr	r3, [pc, #340]	; 8844 <sf_gen_mcode6+0x1a4>
    86ec:	add	r3, pc, r3
    86f0:	str	r6, [r3, #872]	; 0x368
    86f4:	ldr	r3, [r6, #28]
    86f8:	cmp	r3, #0
    86fc:	beq	8710 <sf_gen_mcode6+0x70>
    8700:	ldr	r0, [pc, #320]	; 8848 <sf_gen_mcode6+0x1a8>
    8704:	mov	r1, r9
    8708:	add	r0, pc, r0
    870c:	b	86bc <sf_gen_mcode6+0x1c>
    8710:	ldr	r5, [r6, #20]
    8714:	cmp	r4, #128	; 0x80
    8718:	add	sl, r5, #8
    871c:	bls	8730 <sf_gen_mcode6+0x90>
    8720:	ldr	r0, [pc, #292]	; 884c <sf_gen_mcode6+0x1ac>
    8724:	mov	r1, #128	; 0x80
    8728:	add	r0, pc, r0
    872c:	b	86bc <sf_gen_mcode6+0x1c>
    8730:	mov	r3, #0
    8734:	mov	r2, #0
    8738:	asr	r7, r4, #3
    873c:	add	r8, sp, #16
    8740:	mov	r1, #255	; 0xff
    8744:	mov	r0, r8
    8748:	strd	r2, [sp, #16]
    874c:	strd	r2, [r8, #8]
    8750:	mov	r2, r7
    8754:	bl	e58 <memset@plt>
    8758:	ands	r3, r4, #7
    875c:	beq	8778 <sf_gen_mcode6+0xd8>
    8760:	add	r2, sp, #32
    8764:	add	r7, r2, r7
    8768:	rsb	r2, r3, #8
    876c:	mov	r3, #255	; 0xff
    8770:	lsl	r3, r3, r2
    8774:	strb	r3, [r7, #-16]
    8778:	ldr	r3, [r5, #8]
    877c:	ldr	r2, [sp, #16]
    8780:	bics	r3, r3, r2
    8784:	bne	87b8 <sf_gen_mcode6+0x118>
    8788:	ldr	r3, [r5, #12]
    878c:	ldr	r2, [sp, #20]
    8790:	bics	r3, r3, r2
    8794:	bne	87b8 <sf_gen_mcode6+0x118>
    8798:	ldr	r3, [r5, #16]
    879c:	ldr	r2, [sp, #24]
    87a0:	bics	r3, r3, r2
    87a4:	bne	87b8 <sf_gen_mcode6+0x118>
    87a8:	ldr	r3, [r5, #20]
    87ac:	ldr	r2, [sp, #28]
    87b0:	bics	r3, r3, r2
    87b4:	beq	87cc <sf_gen_mcode6+0x12c>
    87b8:	ldr	r0, [pc, #144]	; 8850 <sf_gen_mcode6+0x1b0>
    87bc:	mov	r2, r4
    87c0:	mov	r1, r9
    87c4:	add	r0, pc, r0
    87c8:	bl	1e54 <sf_bpf_error>
    87cc:	cmp	fp, #1
    87d0:	bls	87e8 <sf_gen_mcode6+0x148>
    87d4:	cmp	fp, #2
    87d8:	beq	87fc <sf_gen_mcode6+0x15c>
    87dc:	ldr	r0, [pc, #112]	; 8854 <sf_gen_mcode6+0x1b4>
    87e0:	add	r0, pc, r0
    87e4:	b	87f8 <sf_gen_mcode6+0x158>
    87e8:	cmp	r4, #128	; 0x80
    87ec:	beq	87fc <sf_gen_mcode6+0x15c>
    87f0:	ldr	r0, [pc, #96]	; 8858 <sf_gen_mcode6+0x1b8>
    87f4:	add	r0, pc, r0
    87f8:	bl	1e54 <sf_bpf_error>
    87fc:	ldrb	r3, [sp, #14]
    8800:	mov	r1, r8
    8804:	mov	r0, sl
    8808:	str	fp, [sp]
    880c:	ldrb	r2, [sp, #13]
    8810:	bl	83e0 <gen_host6>
    8814:	ldr	r3, [pc, #64]	; 885c <sf_gen_mcode6+0x1bc>
    8818:	mov	r2, #0
    881c:	mov	r4, r0
    8820:	mov	r0, r6
    8824:	add	r3, pc, r3
    8828:	str	r2, [r3, #872]	; 0x368
    882c:	bl	eac <freeaddrinfo@plt>
    8830:	mov	r0, r4
    8834:	add	sp, sp, #36	; 0x24
    8838:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    883c:	.word	0x00007ed2
    8840:	.word	0x00007ebf
    8844:	.word	0x00024c74
    8848:	.word	0x00007eae
    884c:	.word	0x00007eae
    8850:	.word	0x00007b14
    8854:	.word	0x00007e10
    8858:	.word	0x00007b04
    885c:	.word	0x00024b3c

00008860 <sf_gen_scode>:
    8860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8864:	uxtb	r8, r1
    8868:	sub	sp, sp, #52	; 0x34
    886c:	cmp	r8, #4
    8870:	ubfx	r4, r1, #8, #8
    8874:	ubfx	r7, r1, #16, #8
    8878:	str	r1, [sp, #20]
    887c:	beq	8e54 <sf_gen_scode+0x5f4>
    8880:	mov	r5, r0
    8884:	bhi	88d4 <sf_gen_scode+0x74>
    8888:	cmp	r8, #2
    888c:	beq	88f4 <sf_gen_scode+0x94>
    8890:	bhi	8c48 <sf_gen_scode+0x3e8>
    8894:	cmp	r4, #1
    8898:	bne	8ac8 <sf_gen_scode+0x268>
    889c:	ldr	r3, [pc, #1568]	; 8ec4 <sf_gen_scode+0x664>
    88a0:	add	r3, pc, r3
    88a4:	ldr	r3, [r3, #856]	; 0x358
    88a8:	cmp	r3, #119	; 0x77
    88ac:	beq	8950 <sf_gen_scode+0xf0>
    88b0:	bgt	8970 <sf_gen_scode+0x110>
    88b4:	cmp	r3, #6
    88b8:	beq	8a6c <sf_gen_scode+0x20c>
    88bc:	bgt	8940 <sf_gen_scode+0xe0>
    88c0:	cmp	r3, #1
    88c4:	beq	8a08 <sf_gen_scode+0x1a8>
    88c8:	ldr	r0, [pc, #1528]	; 8ec8 <sf_gen_scode+0x668>
    88cc:	add	r0, pc, r0
    88d0:	bl	1e54 <sf_bpf_error>
    88d4:	cmp	r8, #6
    88d8:	beq	8e94 <sf_gen_scode+0x634>
    88dc:	bcc	8e60 <sf_gen_scode+0x600>
    88e0:	cmp	r8, #7
    88e4:	beq	8d50 <sf_gen_scode+0x4f0>
    88e8:	cmp	r8, #255	; 0xff
    88ec:	beq	8eb8 <sf_gen_scode+0x658>
    88f0:	bl	ee8 <abort@plt>
    88f4:	bl	986c <pcap_nametonetaddr>
    88f8:	cmp	r0, #0
    88fc:	mvnne	r1, #0
    8900:	bne	891c <sf_gen_scode+0xbc>
    8904:	ldr	r0, [pc, #1472]	; 8ecc <sf_gen_scode+0x66c>
    8908:	mov	r1, r5
    890c:	add	r0, pc, r0
    8910:	bl	1e54 <sf_bpf_error>
    8914:	lsl	r0, r0, #8
    8918:	lsl	r1, r1, #8
    891c:	tst	r0, #-16777216	; 0xff000000
    8920:	beq	8914 <sf_gen_scode+0xb4>
    8924:	mov	r3, #2
    8928:	mov	r2, r4
    892c:	str	r3, [sp]
    8930:	mov	r3, r7
    8934:	bl	6bf0 <gen_host>
    8938:	mov	r6, r0
    893c:	b	8a38 <sf_gen_scode+0x1d8>
    8940:	cmp	r3, #10
    8944:	beq	8a44 <sf_gen_scode+0x1e4>
    8948:	cmp	r3, #105	; 0x69
    894c:	bne	88c8 <sf_gen_scode+0x68>
    8950:	mov	r0, r5
    8954:	bl	9c14 <pcap_ether_hostton>
    8958:	subs	r4, r0, #0
    895c:	bne	8a94 <sf_gen_scode+0x234>
    8960:	ldr	r0, [pc, #1384]	; 8ed0 <sf_gen_scode+0x670>
    8964:	mov	r1, r5
    8968:	add	r0, pc, r0
    896c:	b	8910 <sf_gen_scode+0xb0>
    8970:	cmp	r3, #127	; 0x7f
    8974:	beq	8950 <sf_gen_scode+0xf0>
    8978:	bgt	89f8 <sf_gen_scode+0x198>
    897c:	cmp	r3, #122	; 0x7a
    8980:	beq	8aa0 <sf_gen_scode+0x240>
    8984:	cmp	r3, #123	; 0x7b
    8988:	bne	88c8 <sf_gen_scode+0x68>
    898c:	ldr	r3, [pc, #1344]	; 8ed4 <sf_gen_scode+0x674>
    8990:	add	r3, pc, r3
    8994:	ldr	r3, [r3, #892]	; 0x37c
    8998:	cmp	r3, #0
    899c:	beq	88c8 <sf_gen_scode+0x68>
    89a0:	mov	r3, #65280	; 0xff00
    89a4:	mov	r2, #8
    89a8:	mov	r1, #4
    89ac:	mov	r0, #1
    89b0:	bl	371c <gen_cmp>
    89b4:	mov	r4, r0
    89b8:	mov	r0, r5
    89bc:	ldr	r3, [r4, #44]	; 0x2c
    89c0:	clz	r3, r3
    89c4:	lsr	r3, r3, #5
    89c8:	str	r3, [r4, #44]	; 0x2c
    89cc:	bl	9c14 <pcap_ether_hostton>
    89d0:	subs	r8, r0, #0
    89d4:	beq	8a14 <sf_gen_scode+0x1b4>
    89d8:	mov	r1, r7
    89dc:	bl	3aa4 <gen_ehostop>
    89e0:	mov	r1, r0
    89e4:	mov	r6, r0
    89e8:	mov	r0, r4
    89ec:	bl	2c48 <sf_gen_and>
    89f0:	mov	r0, r8
    89f4:	b	8a34 <sf_gen_scode+0x1d4>
    89f8:	cmp	r3, #163	; 0xa3
    89fc:	beq	8950 <sf_gen_scode+0xf0>
    8a00:	cmp	r3, #192	; 0xc0
    8a04:	b	894c <sf_gen_scode+0xec>
    8a08:	bl	9c14 <pcap_ether_hostton>
    8a0c:	subs	r4, r0, #0
    8a10:	bne	8a24 <sf_gen_scode+0x1c4>
    8a14:	ldr	r0, [pc, #1212]	; 8ed8 <sf_gen_scode+0x678>
    8a18:	mov	r1, r5
    8a1c:	add	r0, pc, r0
    8a20:	b	8910 <sf_gen_scode+0xb0>
    8a24:	mov	r1, r7
    8a28:	bl	3aa4 <gen_ehostop>
    8a2c:	mov	r6, r0
    8a30:	mov	r0, r4
    8a34:	bl	d68 <free@plt>
    8a38:	mov	r0, r6
    8a3c:	add	sp, sp, #52	; 0x34
    8a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8a44:	bl	9c14 <pcap_ether_hostton>
    8a48:	subs	r4, r0, #0
    8a4c:	bne	8a60 <sf_gen_scode+0x200>
    8a50:	ldr	r0, [pc, #1156]	; 8edc <sf_gen_scode+0x67c>
    8a54:	mov	r1, r5
    8a58:	add	r0, pc, r0
    8a5c:	b	8910 <sf_gen_scode+0xb0>
    8a60:	mov	r1, r7
    8a64:	bl	3894 <gen_fhostop>
    8a68:	b	8a2c <sf_gen_scode+0x1cc>
    8a6c:	bl	9c14 <pcap_ether_hostton>
    8a70:	subs	r4, r0, #0
    8a74:	bne	8a88 <sf_gen_scode+0x228>
    8a78:	ldr	r0, [pc, #1120]	; 8ee0 <sf_gen_scode+0x680>
    8a7c:	mov	r1, r5
    8a80:	add	r0, pc, r0
    8a84:	b	8910 <sf_gen_scode+0xb0>
    8a88:	mov	r1, r7
    8a8c:	bl	3944 <gen_thostop>
    8a90:	b	8a2c <sf_gen_scode+0x1cc>
    8a94:	mov	r1, r7
    8a98:	bl	3ea4 <gen_wlanhostop>
    8a9c:	b	8a2c <sf_gen_scode+0x1cc>
    8aa0:	bl	9c14 <pcap_ether_hostton>
    8aa4:	subs	r4, r0, #0
    8aa8:	bne	8abc <sf_gen_scode+0x25c>
    8aac:	ldr	r0, [pc, #1072]	; 8ee4 <sf_gen_scode+0x684>
    8ab0:	mov	r1, r5
    8ab4:	add	r0, pc, r0
    8ab8:	b	8910 <sf_gen_scode+0xb0>
    8abc:	mov	r1, r7
    8ac0:	bl	39f4 <gen_ipfchostop>
    8ac4:	b	8a2c <sf_gen_scode+0x1cc>
    8ac8:	cmp	r4, #12
    8acc:	bne	8ae8 <sf_gen_scode+0x288>
    8ad0:	bl	9cd8 <__pcap_nametodnaddr>
    8ad4:	mov	r3, r7
    8ad8:	mov	r2, r4
    8adc:	str	r8, [sp]
    8ae0:	mov	r1, #0
    8ae4:	b	8934 <sf_gen_scode+0xd4>
    8ae8:	mvn	r2, #0
    8aec:	mvn	r3, #0
    8af0:	add	fp, sp, #32
    8af4:	strd	r2, [sp, #32]
    8af8:	strd	r2, [fp, #8]
    8afc:	bl	9814 <pcap_nametoaddrinfo>
    8b00:	subs	sl, r0, #0
    8b04:	bne	8b18 <sf_gen_scode+0x2b8>
    8b08:	ldr	r0, [pc, #984]	; 8ee8 <sf_gen_scode+0x688>
    8b0c:	mov	r1, r5
    8b10:	add	r0, pc, r0
    8b14:	b	8910 <sf_gen_scode+0xb0>
    8b18:	ldr	r3, [pc, #972]	; 8eec <sf_gen_scode+0x68c>
    8b1c:	mov	r9, sl
    8b20:	mov	r6, #0
    8b24:	add	r3, pc, r3
    8b28:	str	sl, [r3, #872]	; 0x368
    8b2c:	ldr	r3, [r3, #944]	; 0x3b0
    8b30:	cmn	r3, #1
    8b34:	movne	r3, #0
    8b38:	moveq	r3, #1
    8b3c:	cmp	r4, #0
    8b40:	movne	r3, #0
    8b44:	cmp	r3, #0
    8b48:	moveq	r3, r4
    8b4c:	movne	r3, #17
    8b50:	str	r3, [sp, #12]
    8b54:	moveq	r3, r4
    8b58:	movne	r3, #2
    8b5c:	str	r3, [sp, #8]
    8b60:	ldr	r3, [r9, #4]
    8b64:	cmp	r3, #2
    8b68:	beq	8bbc <sf_gen_scode+0x35c>
    8b6c:	cmp	r3, #10
    8b70:	beq	8c10 <sf_gen_scode+0x3b0>
    8b74:	ldr	r9, [r9, #28]
    8b78:	cmp	r9, #0
    8b7c:	bne	8b60 <sf_gen_scode+0x300>
    8b80:	ldr	r3, [pc, #872]	; 8ef0 <sf_gen_scode+0x690>
    8b84:	mov	r0, sl
    8b88:	add	r3, pc, r3
    8b8c:	str	r9, [r3, #872]	; 0x368
    8b90:	bl	eac <freeaddrinfo@plt>
    8b94:	cmp	r6, #0
    8b98:	bne	8a38 <sf_gen_scode+0x1d8>
    8b9c:	cmp	r4, #0
    8ba0:	beq	8c3c <sf_gen_scode+0x3dc>
    8ba4:	ldr	r2, [pc, #840]	; 8ef4 <sf_gen_scode+0x694>
    8ba8:	add	r2, pc, r2
    8bac:	ldr	r0, [pc, #836]	; 8ef8 <sf_gen_scode+0x698>
    8bb0:	mov	r1, r5
    8bb4:	add	r0, pc, r0
    8bb8:	bl	1e54 <sf_bpf_error>
    8bbc:	ldr	r3, [sp, #8]
    8bc0:	cmp	r3, #17
    8bc4:	beq	8b74 <sf_gen_scode+0x314>
    8bc8:	ldr	r3, [r9, #20]
    8bcc:	mvn	r1, #0
    8bd0:	ldr	r2, [sp, #8]
    8bd4:	ldr	r0, [r3, #4]
    8bd8:	mov	r3, r7
    8bdc:	str	r8, [sp]
    8be0:	rev	r0, r0
    8be4:	bl	6bf0 <gen_host>
    8be8:	cmp	r6, #0
    8bec:	mov	r3, r0
    8bf0:	beq	8c08 <sf_gen_scode+0x3a8>
    8bf4:	mov	r1, r0
    8bf8:	mov	r0, r6
    8bfc:	str	r3, [sp, #16]
    8c00:	bl	2cc8 <sf_gen_or>
    8c04:	ldr	r3, [sp, #16]
    8c08:	mov	r6, r3
    8c0c:	b	8b74 <sf_gen_scode+0x314>
    8c10:	ldr	r3, [sp, #12]
    8c14:	cmp	r3, #2
    8c18:	beq	8b74 <sf_gen_scode+0x314>
    8c1c:	ldr	r0, [r9, #20]
    8c20:	mov	r3, r7
    8c24:	mov	r1, fp
    8c28:	str	r8, [sp]
    8c2c:	ldr	r2, [sp, #12]
    8c30:	add	r0, r0, #8
    8c34:	bl	83e0 <gen_host6>
    8c38:	b	8be8 <sf_gen_scode+0x388>
    8c3c:	ldr	r2, [pc, #696]	; 8efc <sf_gen_scode+0x69c>
    8c40:	add	r2, pc, r2
    8c44:	b	8bac <sf_gen_scode+0x34c>
    8c48:	cmp	r4, #0
    8c4c:	beq	8c64 <sf_gen_scode+0x404>
    8c50:	sub	r3, r4, #5
    8c54:	cmp	r3, #2
    8c58:	ldrhi	r0, [pc, #672]	; 8f00 <sf_gen_scode+0x6a0>
    8c5c:	addhi	r0, pc, r0
    8c60:	bhi	88d0 <sf_gen_scode+0x70>
    8c64:	add	r2, sp, #24
    8c68:	add	r1, sp, #32
    8c6c:	mov	r0, r5
    8c70:	bl	9880 <pcap_nametoport>
    8c74:	cmp	r0, #0
    8c78:	bne	8c8c <sf_gen_scode+0x42c>
    8c7c:	ldr	r0, [pc, #640]	; 8f04 <sf_gen_scode+0x6a4>
    8c80:	mov	r1, r5
    8c84:	add	r0, pc, r0
    8c88:	b	8910 <sf_gen_scode+0xb0>
    8c8c:	cmp	r4, #7
    8c90:	ldr	r3, [sp, #24]
    8c94:	bne	8ccc <sf_gen_scode+0x46c>
    8c98:	cmp	r3, #6
    8c9c:	bne	8cb0 <sf_gen_scode+0x450>
    8ca0:	ldr	r0, [pc, #608]	; 8f08 <sf_gen_scode+0x6a8>
    8ca4:	mov	r1, r5
    8ca8:	add	r0, pc, r0
    8cac:	b	8910 <sf_gen_scode+0xb0>
    8cb0:	cmp	r3, #132	; 0x84
    8cb4:	movne	r3, #17
    8cb8:	bne	8d48 <sf_gen_scode+0x4e8>
    8cbc:	ldr	r0, [pc, #584]	; 8f0c <sf_gen_scode+0x6ac>
    8cc0:	mov	r1, r5
    8cc4:	add	r0, pc, r0
    8cc8:	b	8910 <sf_gen_scode+0xb0>
    8ccc:	cmp	r4, #6
    8cd0:	beq	8d0c <sf_gen_scode+0x4ac>
    8cd4:	cmp	r4, #5
    8cd8:	beq	8d34 <sf_gen_scode+0x4d4>
    8cdc:	mov	r2, r7
    8ce0:	ldr	r1, [sp, #24]
    8ce4:	ldr	r0, [sp, #32]
    8ce8:	bl	7070 <gen_port>
    8cec:	mov	r6, r0
    8cf0:	mov	r2, r7
    8cf4:	ldr	r1, [sp, #24]
    8cf8:	ldr	r0, [sp, #32]
    8cfc:	bl	712c <gen_port6>
    8d00:	mov	r1, r6
    8d04:	bl	2cc8 <sf_gen_or>
    8d08:	b	8a38 <sf_gen_scode+0x1d8>
    8d0c:	cmp	r3, #17
    8d10:	bne	8d24 <sf_gen_scode+0x4c4>
    8d14:	ldr	r0, [pc, #500]	; 8f10 <sf_gen_scode+0x6b0>
    8d18:	mov	r1, r5
    8d1c:	add	r0, pc, r0
    8d20:	b	8910 <sf_gen_scode+0xb0>
    8d24:	cmp	r3, #132	; 0x84
    8d28:	strne	r4, [sp, #24]
    8d2c:	bne	8cdc <sf_gen_scode+0x47c>
    8d30:	b	8cbc <sf_gen_scode+0x45c>
    8d34:	cmp	r3, #17
    8d38:	beq	8d14 <sf_gen_scode+0x4b4>
    8d3c:	cmp	r3, #6
    8d40:	beq	8ca0 <sf_gen_scode+0x440>
    8d44:	mov	r3, #132	; 0x84
    8d48:	str	r3, [sp, #24]
    8d4c:	b	8cdc <sf_gen_scode+0x47c>
    8d50:	cmp	r4, #0
    8d54:	beq	8d6c <sf_gen_scode+0x50c>
    8d58:	sub	r3, r4, #5
    8d5c:	cmp	r3, #2
    8d60:	ldrhi	r0, [pc, #428]	; 8f14 <sf_gen_scode+0x6b4>
    8d64:	addhi	r0, pc, r0
    8d68:	bhi	88d0 <sf_gen_scode+0x70>
    8d6c:	add	r3, sp, #24
    8d70:	add	r2, sp, #32
    8d74:	add	r1, sp, #28
    8d78:	mov	r0, r5
    8d7c:	bl	9930 <pcap_nametoportrange>
    8d80:	cmp	r0, #0
    8d84:	bne	8d98 <sf_gen_scode+0x538>
    8d88:	ldr	r0, [pc, #392]	; 8f18 <sf_gen_scode+0x6b8>
    8d8c:	mov	r1, r5
    8d90:	add	r0, pc, r0
    8d94:	b	8910 <sf_gen_scode+0xb0>
    8d98:	cmp	r4, #7
    8d9c:	ldr	r3, [sp, #24]
    8da0:	bne	8dd8 <sf_gen_scode+0x578>
    8da4:	cmp	r3, #6
    8da8:	bne	8dbc <sf_gen_scode+0x55c>
    8dac:	ldr	r0, [pc, #360]	; 8f1c <sf_gen_scode+0x6bc>
    8db0:	mov	r1, r5
    8db4:	add	r0, pc, r0
    8db8:	b	8910 <sf_gen_scode+0xb0>
    8dbc:	cmp	r3, #132	; 0x84
    8dc0:	movne	r3, #17
    8dc4:	bne	8e4c <sf_gen_scode+0x5ec>
    8dc8:	ldr	r0, [pc, #336]	; 8f20 <sf_gen_scode+0x6c0>
    8dcc:	mov	r1, r5
    8dd0:	add	r0, pc, r0
    8dd4:	b	8910 <sf_gen_scode+0xb0>
    8dd8:	cmp	r4, #6
    8ddc:	beq	8e10 <sf_gen_scode+0x5b0>
    8de0:	cmp	r4, #5
    8de4:	beq	8e38 <sf_gen_scode+0x5d8>
    8de8:	mov	r3, r7
    8dec:	ldr	r2, [sp, #24]
    8df0:	ldrd	r0, [sp, #28]
    8df4:	bl	71e8 <gen_portrange>
    8df8:	mov	r6, r0
    8dfc:	mov	r3, r7
    8e00:	ldr	r2, [sp, #24]
    8e04:	ldrd	r0, [sp, #28]
    8e08:	bl	72b8 <gen_portrange6>
    8e0c:	b	8d00 <sf_gen_scode+0x4a0>
    8e10:	cmp	r3, #17
    8e14:	bne	8e28 <sf_gen_scode+0x5c8>
    8e18:	ldr	r0, [pc, #260]	; 8f24 <sf_gen_scode+0x6c4>
    8e1c:	mov	r1, r5
    8e20:	add	r0, pc, r0
    8e24:	b	8910 <sf_gen_scode+0xb0>
    8e28:	cmp	r3, #132	; 0x84
    8e2c:	strne	r4, [sp, #24]
    8e30:	bne	8de8 <sf_gen_scode+0x588>
    8e34:	b	8dc8 <sf_gen_scode+0x568>
    8e38:	cmp	r3, #17
    8e3c:	beq	8e18 <sf_gen_scode+0x5b8>
    8e40:	cmp	r3, #6
    8e44:	beq	8dac <sf_gen_scode+0x54c>
    8e48:	mov	r3, #132	; 0x84
    8e4c:	str	r3, [sp, #24]
    8e50:	b	8de8 <sf_gen_scode+0x588>
    8e54:	ldr	r0, [pc, #204]	; 8f28 <sf_gen_scode+0x6c8>
    8e58:	add	r0, pc, r0
    8e5c:	b	88d0 <sf_gen_scode+0x70>
    8e60:	mov	r1, r4
    8e64:	bl	2180 <lookup_proto>
    8e68:	cmp	r0, #0
    8e6c:	str	r0, [sp, #24]
    8e70:	blt	8e84 <sf_gen_scode+0x624>
    8e74:	mov	r2, r7
    8e78:	mov	r1, r4
    8e7c:	bl	5c28 <gen_proto>
    8e80:	b	8938 <sf_gen_scode+0xd8>
    8e84:	ldr	r0, [pc, #160]	; 8f2c <sf_gen_scode+0x6cc>
    8e88:	mov	r1, r5
    8e8c:	add	r0, pc, r0
    8e90:	b	8910 <sf_gen_scode+0xb0>
    8e94:	mov	r1, r4
    8e98:	bl	2180 <lookup_proto>
    8e9c:	cmp	r0, #0
    8ea0:	str	r0, [sp, #24]
    8ea4:	blt	8e84 <sf_gen_scode+0x624>
    8ea8:	mov	r2, r7
    8eac:	mov	r1, r4
    8eb0:	bl	7388 <gen_protochain>
    8eb4:	b	8938 <sf_gen_scode+0xd8>
    8eb8:	ldr	r0, [pc, #112]	; 8f30 <sf_gen_scode+0x6d0>
    8ebc:	add	r0, pc, r0
    8ec0:	b	88d0 <sf_gen_scode+0x70>
    8ec4:	.word	0x00024ac0
    8ec8:	.word	0x00007e03
    8ecc:	.word	0x00007d29
    8ed0:	.word	0x00007d2e
    8ed4:	.word	0x000249d0
    8ed8:	.word	0x00007c2e
    8edc:	.word	0x00007c0a
    8ee0:	.word	0x00007bf9
    8ee4:	.word	0x00007bfb
    8ee8:	.word	0x00007c19
    8eec:	.word	0x0002483c
    8ef0:	.word	0x000247d8
    8ef4:	.word	0x00007a6f
    8ef8:	.word	0x00007b87
    8efc:	.word	0x00006873
    8f00:	.word	0x00007746
    8f04:	.word	0x00007acb
    8f08:	.word	0x00007ab9
    8f0c:	.word	0x00007aae
    8f10:	.word	0x00007a68
    8f14:	.word	0x0000765a
    8f18:	.word	0x00007a05
    8f1c:	.word	0x000079fc
    8f20:	.word	0x000079fa
    8f24:	.word	0x000079c5
    8f28:	.word	0x000079a7
    8f2c:	.word	0x000079a1
    8f30:	.word	0x0000679d

00008f34 <sf_gen_atmtype_abbrev>:
    8f34:	sub	r0, r0, #22
    8f38:	push	{r4, r5, r6, lr}
    8f3c:	cmp	r0, #9
    8f40:	addls	pc, pc, r0, lsl #2
    8f44:	b	91d4 <sf_gen_atmtype_abbrev+0x2a0>
    8f48:	b	8f70 <sf_gen_atmtype_abbrev+0x3c>
    8f4c:	b	8fd4 <sf_gen_atmtype_abbrev+0xa0>
    8f50:	b	9018 <sf_gen_atmtype_abbrev+0xe4>
    8f54:	b	905c <sf_gen_atmtype_abbrev+0x128>
    8f58:	b	90a0 <sf_gen_atmtype_abbrev+0x16c>
    8f5c:	b	90e4 <sf_gen_atmtype_abbrev+0x1b0>
    8f60:	b	91d4 <sf_gen_atmtype_abbrev+0x2a0>
    8f64:	b	91d4 <sf_gen_atmtype_abbrev+0x2a0>
    8f68:	b	9128 <sf_gen_atmtype_abbrev+0x1f4>
    8f6c:	b	9194 <sf_gen_atmtype_abbrev+0x260>
    8f70:	ldr	r3, [pc, #608]	; 91d8 <sf_gen_atmtype_abbrev+0x2a4>
    8f74:	add	r3, pc, r3
    8f78:	ldr	r3, [r3, #888]	; 0x378
    8f7c:	cmp	r3, #0
    8f80:	bne	8f90 <sf_gen_atmtype_abbrev+0x5c>
    8f84:	ldr	r0, [pc, #592]	; 91dc <sf_gen_atmtype_abbrev+0x2a8>
    8f88:	add	r0, pc, r0
    8f8c:	bl	1e54 <sf_bpf_error>
    8f90:	mov	r3, #0
    8f94:	mov	r2, #16
    8f98:	mov	r1, r3
    8f9c:	mov	r0, #51	; 0x33
    8fa0:	bl	50b8 <sf_gen_atmfield_code>
    8fa4:	mov	r5, r0
    8fa8:	mov	r3, #0
    8fac:	mov	r2, #16
    8fb0:	mov	r1, #1
    8fb4:	mov	r0, #52	; 0x34
    8fb8:	bl	50b8 <sf_gen_atmfield_code>
    8fbc:	mov	r4, r0
    8fc0:	mov	r1, r0
    8fc4:	mov	r0, r5
    8fc8:	bl	2c48 <sf_gen_and>
    8fcc:	mov	r0, r4
    8fd0:	pop	{r4, r5, r6, pc}
    8fd4:	ldr	r3, [pc, #516]	; 91e0 <sf_gen_atmtype_abbrev+0x2ac>
    8fd8:	add	r3, pc, r3
    8fdc:	ldr	r3, [r3, #888]	; 0x378
    8fe0:	cmp	r3, #0
    8fe4:	ldreq	r0, [pc, #504]	; 91e4 <sf_gen_atmtype_abbrev+0x2b0>
    8fe8:	addeq	r0, pc, r0
    8fec:	beq	8f8c <sf_gen_atmtype_abbrev+0x58>
    8ff0:	mov	r3, #0
    8ff4:	mov	r2, #16
    8ff8:	mov	r1, r3
    8ffc:	mov	r0, #51	; 0x33
    9000:	bl	50b8 <sf_gen_atmfield_code>
    9004:	mov	r5, r0
    9008:	mov	r3, #0
    900c:	mov	r2, #16
    9010:	mov	r1, #2
    9014:	b	8fb4 <sf_gen_atmtype_abbrev+0x80>
    9018:	ldr	r3, [pc, #456]	; 91e8 <sf_gen_atmtype_abbrev+0x2b4>
    901c:	add	r3, pc, r3
    9020:	ldr	r3, [r3, #888]	; 0x378
    9024:	cmp	r3, #0
    9028:	ldreq	r0, [pc, #444]	; 91ec <sf_gen_atmtype_abbrev+0x2b8>
    902c:	addeq	r0, pc, r0
    9030:	beq	8f8c <sf_gen_atmtype_abbrev+0x58>
    9034:	mov	r3, #0
    9038:	mov	r2, #16
    903c:	mov	r1, r3
    9040:	mov	r0, #51	; 0x33
    9044:	bl	50b8 <sf_gen_atmfield_code>
    9048:	mov	r5, r0
    904c:	mov	r3, #0
    9050:	mov	r2, #16
    9054:	mov	r1, #3
    9058:	b	8fb4 <sf_gen_atmtype_abbrev+0x80>
    905c:	ldr	r3, [pc, #396]	; 91f0 <sf_gen_atmtype_abbrev+0x2bc>
    9060:	add	r3, pc, r3
    9064:	ldr	r3, [r3, #888]	; 0x378
    9068:	cmp	r3, #0
    906c:	ldreq	r0, [pc, #384]	; 91f4 <sf_gen_atmtype_abbrev+0x2c0>
    9070:	addeq	r0, pc, r0
    9074:	beq	8f8c <sf_gen_atmtype_abbrev+0x58>
    9078:	mov	r3, #0
    907c:	mov	r2, #16
    9080:	mov	r1, r3
    9084:	mov	r0, #51	; 0x33
    9088:	bl	50b8 <sf_gen_atmfield_code>
    908c:	mov	r5, r0
    9090:	mov	r3, #0
    9094:	mov	r2, #16
    9098:	mov	r1, #4
    909c:	b	8fb4 <sf_gen_atmtype_abbrev+0x80>
    90a0:	ldr	r3, [pc, #336]	; 91f8 <sf_gen_atmtype_abbrev+0x2c4>
    90a4:	add	r3, pc, r3
    90a8:	ldr	r3, [r3, #888]	; 0x378
    90ac:	cmp	r3, #0
    90b0:	ldreq	r0, [pc, #324]	; 91fc <sf_gen_atmtype_abbrev+0x2c8>
    90b4:	addeq	r0, pc, r0
    90b8:	beq	8f8c <sf_gen_atmtype_abbrev+0x58>
    90bc:	mov	r3, #0
    90c0:	mov	r2, #16
    90c4:	mov	r1, r3
    90c8:	mov	r0, #51	; 0x33
    90cc:	bl	50b8 <sf_gen_atmfield_code>
    90d0:	mov	r5, r0
    90d4:	mov	r3, #0
    90d8:	mov	r2, #16
    90dc:	mov	r1, #5
    90e0:	b	8fb4 <sf_gen_atmtype_abbrev+0x80>
    90e4:	ldr	r3, [pc, #276]	; 9200 <sf_gen_atmtype_abbrev+0x2cc>
    90e8:	add	r3, pc, r3
    90ec:	ldr	r3, [r3, #888]	; 0x378
    90f0:	cmp	r3, #0
    90f4:	ldreq	r0, [pc, #264]	; 9204 <sf_gen_atmtype_abbrev+0x2d0>
    90f8:	addeq	r0, pc, r0
    90fc:	beq	8f8c <sf_gen_atmtype_abbrev+0x58>
    9100:	mov	r3, #0
    9104:	mov	r2, #16
    9108:	mov	r1, r3
    910c:	mov	r0, #51	; 0x33
    9110:	bl	50b8 <sf_gen_atmfield_code>
    9114:	mov	r2, #16
    9118:	mov	r5, r0
    911c:	mov	r3, #0
    9120:	mov	r1, r2
    9124:	b	8fb4 <sf_gen_atmtype_abbrev+0x80>
    9128:	ldr	r5, [pc, #216]	; 9208 <sf_gen_atmtype_abbrev+0x2d4>
    912c:	add	r5, pc, r5
    9130:	ldr	r3, [r5, #888]	; 0x378
    9134:	cmp	r3, #0
    9138:	ldreq	r0, [pc, #204]	; 920c <sf_gen_atmtype_abbrev+0x2d8>
    913c:	addeq	r0, pc, r0
    9140:	beq	8f8c <sf_gen_atmtype_abbrev+0x58>
    9144:	mov	r3, #0
    9148:	mov	r2, #16
    914c:	mov	r1, #1
    9150:	mov	r0, #53	; 0x35
    9154:	bl	50b8 <sf_gen_atmfield_code>
    9158:	mov	r3, #1
    915c:	mov	r4, r0
    9160:	str	r3, [r5, #892]	; 0x37c
    9164:	ldr	r3, [r5, #908]	; 0x38c
    9168:	add	r2, r3, #2
    916c:	str	r2, [r5, #884]	; 0x374
    9170:	add	r2, r3, #14
    9174:	add	r3, r3, #16
    9178:	str	r3, [r5, #940]	; 0x3ac
    917c:	mov	r3, #0
    9180:	str	r2, [r5, #944]	; 0x3b0
    9184:	str	r3, [r5, #948]	; 0x3b4
    9188:	mov	r3, #3
    918c:	str	r3, [r5, #952]	; 0x3b8
    9190:	b	8fcc <sf_gen_atmtype_abbrev+0x98>
    9194:	ldr	r5, [pc, #116]	; 9210 <sf_gen_atmtype_abbrev+0x2dc>
    9198:	add	r5, pc, r5
    919c:	ldr	r3, [r5, #888]	; 0x378
    91a0:	cmp	r3, #0
    91a4:	ldreq	r0, [pc, #104]	; 9214 <sf_gen_atmtype_abbrev+0x2e0>
    91a8:	addeq	r0, pc, r0
    91ac:	beq	8f8c <sf_gen_atmtype_abbrev+0x58>
    91b0:	mov	r3, #0
    91b4:	mov	r2, #16
    91b8:	mov	r1, #2
    91bc:	mov	r0, #53	; 0x35
    91c0:	bl	50b8 <sf_gen_atmfield_code>
    91c4:	mov	r3, #0
    91c8:	mov	r4, r0
    91cc:	str	r3, [r5, #892]	; 0x37c
    91d0:	b	8fcc <sf_gen_atmtype_abbrev+0x98>
    91d4:	bl	ee8 <abort@plt>
    91d8:	.word	0x000243ec
    91dc:	.word	0x000078ba
    91e0:	.word	0x00024388
    91e4:	.word	0x0000787c
    91e8:	.word	0x00024344
    91ec:	.word	0x00007858
    91f0:	.word	0x00024300
    91f4:	.word	0x00007837
    91f8:	.word	0x000242bc
    91fc:	.word	0x00007816
    9200:	.word	0x00024278
    9204:	.word	0x000077f1
    9208:	.word	0x00024234
    920c:	.word	0x000077cf
    9210:	.word	0x000241c8
    9214:	.word	0x00007784

00009218 <sf_gen_mtp2type_abbrev>:
    9218:	cmp	r0, #23
    921c:	push	{r4, r5, r6, r7, lr}
    9220:	sub	sp, sp, #20
    9224:	beq	928c <sf_gen_mtp2type_abbrev+0x74>
    9228:	cmp	r0, #24
    922c:	beq	9320 <sf_gen_mtp2type_abbrev+0x108>
    9230:	cmp	r0, #22
    9234:	bne	9368 <sf_gen_mtp2type_abbrev+0x150>
    9238:	ldr	r1, [pc, #300]	; 936c <sf_gen_mtp2type_abbrev+0x154>
    923c:	add	r1, pc, r1
    9240:	ldr	r3, [r1, #856]	; 0x358
    9244:	sub	r0, r3, #139	; 0x8b
    9248:	cmp	r3, #197	; 0xc5
    924c:	cmpne	r0, #1
    9250:	movhi	r0, #1
    9254:	movls	r0, #0
    9258:	bls	9268 <sf_gen_mtp2type_abbrev+0x50>
    925c:	ldr	r0, [pc, #268]	; 9370 <sf_gen_mtp2type_abbrev+0x158>
    9260:	add	r0, pc, r0
    9264:	bl	1e54 <sf_bpf_error>
    9268:	mov	r2, #16
    926c:	mov	r3, #63	; 0x3f
    9270:	str	r2, [sp]
    9274:	str	r0, [sp, #4]
    9278:	str	r0, [sp, #8]
    927c:	ldr	r1, [r1, #916]	; 0x394
    9280:	bl	35c8 <gen_ncmp>
    9284:	mov	r5, r0
    9288:	b	9314 <sf_gen_mtp2type_abbrev+0xfc>
    928c:	ldr	r2, [pc, #224]	; 9374 <sf_gen_mtp2type_abbrev+0x15c>
    9290:	add	r2, pc, r2
    9294:	ldr	r3, [r2, #856]	; 0x358
    9298:	sub	r4, r3, #139	; 0x8b
    929c:	cmp	r3, #197	; 0xc5
    92a0:	cmpne	r4, #1
    92a4:	movhi	r4, #1
    92a8:	movls	r4, #0
    92ac:	ldrhi	r0, [pc, #196]	; 9378 <sf_gen_mtp2type_abbrev+0x160>
    92b0:	addhi	r0, pc, r0
    92b4:	bhi	9264 <sf_gen_mtp2type_abbrev+0x4c>
    92b8:	ldr	r6, [r2, #916]	; 0x394
    92bc:	mov	r3, #2
    92c0:	mov	r7, #32
    92c4:	mov	r2, #16
    92c8:	mov	r0, r4
    92cc:	str	r7, [sp]
    92d0:	str	r3, [sp, #8]
    92d4:	mov	r3, #1
    92d8:	mov	r1, r6
    92dc:	str	r3, [sp, #4]
    92e0:	mov	r3, #63	; 0x3f
    92e4:	bl	35c8 <gen_ncmp>
    92e8:	mov	r5, r0
    92ec:	mov	r1, r6
    92f0:	str	r7, [sp]
    92f4:	mov	r3, #63	; 0x3f
    92f8:	mov	r2, #16
    92fc:	str	r4, [sp, #4]
    9300:	mov	r0, r4
    9304:	str	r4, [sp, #8]
    9308:	bl	35c8 <gen_ncmp>
    930c:	mov	r1, r5
    9310:	bl	2c48 <sf_gen_and>
    9314:	mov	r0, r5
    9318:	add	sp, sp, #20
    931c:	pop	{r4, r5, r6, r7, pc}
    9320:	ldr	r1, [pc, #84]	; 937c <sf_gen_mtp2type_abbrev+0x164>
    9324:	add	r1, pc, r1
    9328:	ldr	r3, [r1, #856]	; 0x358
    932c:	sub	r0, r3, #139	; 0x8b
    9330:	cmp	r3, #197	; 0xc5
    9334:	cmpne	r0, #1
    9338:	movhi	r0, #1
    933c:	movls	r0, #0
    9340:	ldrhi	r0, [pc, #56]	; 9380 <sf_gen_mtp2type_abbrev+0x168>
    9344:	addhi	r0, pc, r0
    9348:	bhi	9264 <sf_gen_mtp2type_abbrev+0x4c>
    934c:	mov	r3, #2
    9350:	mov	r2, #16
    9354:	stmib	sp, {r0, r3}
    9358:	mov	r3, #32
    935c:	str	r3, [sp]
    9360:	mov	r3, #63	; 0x3f
    9364:	b	927c <sf_gen_mtp2type_abbrev+0x64>
    9368:	bl	ee8 <abort@plt>
    936c:	.word	0x00024124
    9370:	.word	0x000076ec
    9374:	.word	0x000240d0
    9378:	.word	0x000076ba
    937c:	.word	0x0002403c
    9380:	.word	0x00007644

00009384 <sf_gen_mtp3field_code>:
    9384:	push	{r0, r1, r2, r3, r4, lr}
    9388:	sub	r0, r0, #1
    938c:	cmp	r0, #3
    9390:	addls	pc, pc, r0, lsl #2
    9394:	b	94f0 <sf_gen_mtp3field_code+0x16c>
    9398:	b	93a8 <sf_gen_mtp3field_code+0x24>
    939c:	b	9400 <sf_gen_mtp3field_code+0x7c>
    93a0:	b	945c <sf_gen_mtp3field_code+0xd8>
    93a4:	b	94ac <sf_gen_mtp3field_code+0x128>
    93a8:	ldr	r0, [pc, #324]	; 94f4 <sf_gen_mtp3field_code+0x170>
    93ac:	add	r0, pc, r0
    93b0:	ldr	r0, [r0, #920]	; 0x398
    93b4:	cmn	r0, #1
    93b8:	bne	93c8 <sf_gen_mtp3field_code+0x44>
    93bc:	ldr	r0, [pc, #308]	; 94f8 <sf_gen_mtp3field_code+0x174>
    93c0:	add	r0, pc, r0
    93c4:	bl	1e54 <sf_bpf_error>
    93c8:	cmp	r1, #255	; 0xff
    93cc:	bls	93dc <sf_gen_mtp3field_code+0x58>
    93d0:	ldr	r0, [pc, #292]	; 94fc <sf_gen_mtp3field_code+0x178>
    93d4:	add	r0, pc, r0
    93d8:	bl	1e54 <sf_bpf_error>
    93dc:	strd	r2, [sp]
    93e0:	mvn	r3, #0
    93e4:	mov	r2, #16
    93e8:	str	r1, [sp, #8]
    93ec:	mov	r1, r0
    93f0:	mov	r0, #0
    93f4:	bl	35c8 <gen_ncmp>
    93f8:	add	sp, sp, #20
    93fc:	pop	{pc}		; (ldr pc, [sp], #4)
    9400:	ldr	r0, [pc, #248]	; 9500 <sf_gen_mtp3field_code+0x17c>
    9404:	add	r0, pc, r0
    9408:	ldr	lr, [r0, #924]	; 0x39c
    940c:	cmn	lr, #1
    9410:	ldreq	r0, [pc, #236]	; 9504 <sf_gen_mtp3field_code+0x180>
    9414:	addeq	r0, pc, r0
    9418:	beq	93c4 <sf_gen_mtp3field_code+0x40>
    941c:	cmp	r1, #16384	; 0x4000
    9420:	ldrcs	r0, [pc, #224]	; 9508 <sf_gen_mtp3field_code+0x184>
    9424:	addcs	r0, pc, r0
    9428:	bcs	93d8 <sf_gen_mtp3field_code+0x54>
    942c:	lsl	r0, r1, #22
    9430:	strd	r2, [sp]
    9434:	mov	r2, #0
    9438:	ldr	r3, [pc, #204]	; 950c <sf_gen_mtp3field_code+0x188>
    943c:	and	ip, r0, #12582912	; 0xc00000
    9440:	lsl	r0, r1, #6
    9444:	and	r0, r0, #65280	; 0xff00
    9448:	orr	r0, r0, r1, lsr #10
    944c:	mov	r1, lr
    9450:	add	r0, r0, ip
    9454:	str	r0, [sp, #8]
    9458:	b	93f0 <sf_gen_mtp3field_code+0x6c>
    945c:	ldr	r0, [pc, #172]	; 9510 <sf_gen_mtp3field_code+0x18c>
    9460:	add	r0, pc, r0
    9464:	ldr	ip, [r0, #928]	; 0x3a0
    9468:	cmn	ip, #1
    946c:	ldreq	r0, [pc, #160]	; 9514 <sf_gen_mtp3field_code+0x190>
    9470:	addeq	r0, pc, r0
    9474:	beq	93c4 <sf_gen_mtp3field_code+0x40>
    9478:	cmp	r1, #16384	; 0x4000
    947c:	ldrcs	r0, [pc, #148]	; 9518 <sf_gen_mtp3field_code+0x194>
    9480:	addcs	r0, pc, r0
    9484:	bcs	93d8 <sf_gen_mtp3field_code+0x54>
    9488:	lsl	r0, r1, #8
    948c:	strd	r2, [sp]
    9490:	mov	r2, #0
    9494:	ldr	r3, [pc, #128]	; 951c <sf_gen_mtp3field_code+0x198>
    9498:	and	r0, r0, #4128768	; 0x3f0000
    949c:	add	r0, r0, r1, lsl #24
    94a0:	str	r0, [sp, #8]
    94a4:	mov	r1, ip
    94a8:	b	93f0 <sf_gen_mtp3field_code+0x6c>
    94ac:	ldr	r0, [pc, #108]	; 9520 <sf_gen_mtp3field_code+0x19c>
    94b0:	add	r0, pc, r0
    94b4:	ldr	ip, [r0, #932]	; 0x3a4
    94b8:	cmn	ip, #1
    94bc:	ldreq	r0, [pc, #96]	; 9524 <sf_gen_mtp3field_code+0x1a0>
    94c0:	addeq	r0, pc, r0
    94c4:	beq	93c4 <sf_gen_mtp3field_code+0x40>
    94c8:	cmp	r1, #15
    94cc:	ldrhi	r0, [pc, #84]	; 9528 <sf_gen_mtp3field_code+0x1a4>
    94d0:	addhi	r0, pc, r0
    94d4:	bhi	93d8 <sf_gen_mtp3field_code+0x54>
    94d8:	lsl	r0, r1, #4
    94dc:	strd	r2, [sp]
    94e0:	mov	r3, #240	; 0xf0
    94e4:	mov	r2, #16
    94e8:	str	r0, [sp, #8]
    94ec:	b	94a4 <sf_gen_mtp3field_code+0x120>
    94f0:	bl	ee8 <abort@plt>
    94f4:	.word	0x00023fb4
    94f8:	.word	0x000075e5
    94fc:	.word	0x000075ed
    9500:	.word	0x00023f5c
    9504:	.word	0x000075d3
    9508:	.word	0x000075df
    950c:	.word	0x00c0ff0f
    9510:	.word	0x00023f00
    9514:	.word	0x000075bb
    9518:	.word	0x000075c7
    951c:	.word	0xff3f0000
    9520:	.word	0x00023eb0
    9524:	.word	0x000075af
    9528:	.word	0x000075bb

0000952c <sf_gen_atmmulti_abbrev>:
    952c:	cmp	r0, #29
    9530:	push	{r4, r5, r6, lr}
    9534:	beq	9598 <sf_gen_atmmulti_abbrev+0x6c>
    9538:	bgt	9548 <sf_gen_atmmulti_abbrev+0x1c>
    953c:	cmp	r0, #28
    9540:	beq	9578 <sf_gen_atmmulti_abbrev+0x4c>
    9544:	bl	ee8 <abort@plt>
    9548:	cmp	r0, #70	; 0x46
    954c:	beq	9614 <sf_gen_atmmulti_abbrev+0xe8>
    9550:	cmp	r0, #71	; 0x47
    9554:	bne	9544 <sf_gen_atmmulti_abbrev+0x18>
    9558:	ldr	r3, [pc, #544]	; 9780 <sf_gen_atmmulti_abbrev+0x254>
    955c:	add	r3, pc, r3
    9560:	ldr	r3, [r3, #888]	; 0x378
    9564:	cmp	r3, #0
    9568:	bne	96e8 <sf_gen_atmmulti_abbrev+0x1bc>
    956c:	ldr	r0, [pc, #528]	; 9784 <sf_gen_atmmulti_abbrev+0x258>
    9570:	add	r0, pc, r0
    9574:	b	9594 <sf_gen_atmmulti_abbrev+0x68>
    9578:	ldr	r3, [pc, #520]	; 9788 <sf_gen_atmmulti_abbrev+0x25c>
    957c:	add	r3, pc, r3
    9580:	ldr	r3, [r3, #888]	; 0x378
    9584:	cmp	r3, #0
    9588:	bne	9598 <sf_gen_atmmulti_abbrev+0x6c>
    958c:	ldr	r0, [pc, #504]	; 978c <sf_gen_atmmulti_abbrev+0x260>
    9590:	add	r0, pc, r0
    9594:	bl	1e54 <sf_bpf_error>
    9598:	ldr	r3, [pc, #496]	; 9790 <sf_gen_atmmulti_abbrev+0x264>
    959c:	add	r3, pc, r3
    95a0:	ldr	r3, [r3, #888]	; 0x378
    95a4:	cmp	r3, #0
    95a8:	ldreq	r0, [pc, #484]	; 9794 <sf_gen_atmmulti_abbrev+0x268>
    95ac:	addeq	r0, pc, r0
    95b0:	beq	9594 <sf_gen_atmmulti_abbrev+0x68>
    95b4:	mov	r3, #0
    95b8:	mov	r2, #16
    95bc:	mov	r1, #3
    95c0:	mov	r0, #52	; 0x34
    95c4:	bl	50b8 <sf_gen_atmfield_code>
    95c8:	mov	r5, r0
    95cc:	mov	r3, #0
    95d0:	mov	r2, #16
    95d4:	mov	r1, #4
    95d8:	mov	r0, #52	; 0x34
    95dc:	bl	50b8 <sf_gen_atmfield_code>
    95e0:	mov	r1, r0
    95e4:	mov	r4, r0
    95e8:	mov	r0, r5
    95ec:	bl	2cc8 <sf_gen_or>
    95f0:	mov	r3, #0
    95f4:	mov	r2, #16
    95f8:	mov	r1, r3
    95fc:	mov	r0, #51	; 0x33
    9600:	bl	50b8 <sf_gen_atmfield_code>
    9604:	mov	r1, r4
    9608:	bl	2c48 <sf_gen_and>
    960c:	mov	r0, r4
    9610:	pop	{r4, r5, r6, pc}
    9614:	ldr	r3, [pc, #380]	; 9798 <sf_gen_atmmulti_abbrev+0x26c>
    9618:	add	r3, pc, r3
    961c:	ldr	r3, [r3, #888]	; 0x378
    9620:	cmp	r3, #0
    9624:	ldreq	r0, [pc, #368]	; 979c <sf_gen_atmmulti_abbrev+0x270>
    9628:	addeq	r0, pc, r0
    962c:	beq	9594 <sf_gen_atmmulti_abbrev+0x68>
    9630:	mov	r3, #0
    9634:	mov	r2, #16
    9638:	mov	r1, #5
    963c:	mov	r0, #54	; 0x36
    9640:	bl	50b8 <sf_gen_atmfield_code>
    9644:	mov	r5, r0
    9648:	mov	r3, #0
    964c:	mov	r2, #16
    9650:	mov	r1, #2
    9654:	mov	r0, #54	; 0x36
    9658:	bl	50b8 <sf_gen_atmfield_code>
    965c:	mov	r4, r0
    9660:	mov	r1, r0
    9664:	mov	r0, r5
    9668:	bl	2cc8 <sf_gen_or>
    966c:	mov	r3, #0
    9670:	mov	r2, #16
    9674:	mov	r1, #7
    9678:	mov	r0, #54	; 0x36
    967c:	bl	50b8 <sf_gen_atmfield_code>
    9680:	mov	r1, r4
    9684:	bl	2cc8 <sf_gen_or>
    9688:	mov	r3, #0
    968c:	mov	r2, #16
    9690:	mov	r1, #15
    9694:	mov	r0, #54	; 0x36
    9698:	bl	50b8 <sf_gen_atmfield_code>
    969c:	mov	r1, r4
    96a0:	bl	2cc8 <sf_gen_or>
    96a4:	mov	r3, #0
    96a8:	mov	r2, #16
    96ac:	mov	r1, #77	; 0x4d
    96b0:	mov	r0, #54	; 0x36
    96b4:	bl	50b8 <sf_gen_atmfield_code>
    96b8:	mov	r1, r4
    96bc:	bl	2cc8 <sf_gen_or>
    96c0:	mov	r3, #0
    96c4:	mov	r2, #16
    96c8:	mov	r1, #90	; 0x5a
    96cc:	mov	r0, #54	; 0x36
    96d0:	bl	50b8 <sf_gen_atmfield_code>
    96d4:	mov	r1, r4
    96d8:	bl	2cc8 <sf_gen_or>
    96dc:	mov	r0, #26
    96e0:	bl	8f34 <sf_gen_atmtype_abbrev>
    96e4:	b	9604 <sf_gen_atmmulti_abbrev+0xd8>
    96e8:	mov	r3, #0
    96ec:	mov	r2, #16
    96f0:	mov	r1, #5
    96f4:	mov	r0, #54	; 0x36
    96f8:	bl	50b8 <sf_gen_atmfield_code>
    96fc:	mov	r5, r0
    9700:	mov	r3, #0
    9704:	mov	r2, #16
    9708:	mov	r1, #2
    970c:	mov	r0, #54	; 0x36
    9710:	bl	50b8 <sf_gen_atmfield_code>
    9714:	mov	r4, r0
    9718:	mov	r1, r0
    971c:	mov	r0, r5
    9720:	bl	2cc8 <sf_gen_or>
    9724:	mov	r3, #0
    9728:	mov	r2, #16
    972c:	mov	r1, #7
    9730:	mov	r0, #54	; 0x36
    9734:	bl	50b8 <sf_gen_atmfield_code>
    9738:	mov	r1, r4
    973c:	bl	2cc8 <sf_gen_or>
    9740:	mov	r3, #0
    9744:	mov	r2, #16
    9748:	mov	r1, #77	; 0x4d
    974c:	mov	r0, #54	; 0x36
    9750:	bl	50b8 <sf_gen_atmfield_code>
    9754:	mov	r1, r4
    9758:	bl	2cc8 <sf_gen_or>
    975c:	mov	r3, #0
    9760:	mov	r2, #16
    9764:	mov	r1, #90	; 0x5a
    9768:	mov	r0, #54	; 0x36
    976c:	bl	50b8 <sf_gen_atmfield_code>
    9770:	mov	r1, r4
    9774:	bl	2cc8 <sf_gen_or>
    9778:	mov	r0, #22
    977c:	b	96e0 <sf_gen_atmmulti_abbrev+0x1b4>
    9780:	.word	0x00023e04
    9784:	.word	0x000075a9
    9788:	.word	0x00023de4
    978c:	.word	0x00007520
    9790:	.word	0x00023dc4
    9794:	.word	0x00007524
    9798:	.word	0x00023d48
    979c:	.word	0x000074ca

000097a0 <xdtoi>:
    97a0:	push	{r4, lr}
    97a4:	mov	r4, r0
    97a8:	bl	e04 <__ctype_b_loc@plt>
    97ac:	ldr	r2, [r0]
    97b0:	lsl	r3, r4, #1
    97b4:	ldrh	r3, [r2, r3]
    97b8:	tst	r3, #2048	; 0x800
    97bc:	beq	97c8 <xdtoi+0x28>
    97c0:	sub	r0, r4, #48	; 0x30
    97c4:	pop	{r4, pc}
    97c8:	tst	r3, #512	; 0x200
    97cc:	subne	r0, r4, #87	; 0x57
    97d0:	subeq	r0, r4, #55	; 0x37
    97d4:	pop	{r4, pc}

000097d8 <pcap_nametoaddr>:
    97d8:	push	{r4, lr}
    97dc:	bl	ed0 <gethostbyname@plt>
    97e0:	cmp	r0, #0
    97e4:	ldrne	r3, [r0, #16]
    97e8:	subne	r3, r3, #4
    97ec:	popeq	{r4, pc}
    97f0:	ldr	r2, [r3, #4]!
    97f4:	cmp	r2, #0
    97f8:	bne	9804 <pcap_nametoaddr+0x2c>
    97fc:	ldr	r0, [r0, #16]
    9800:	pop	{r4, pc}
    9804:	ldr	r1, [r2]
    9808:	rev	r1, r1
    980c:	str	r1, [r2]
    9810:	b	97f0 <pcap_nametoaddr+0x18>

00009814 <pcap_nametoaddrinfo>:
    9814:	push	{r4, r5, lr}
    9818:	sub	sp, sp, #44	; 0x2c
    981c:	mov	r5, r0
    9820:	add	r4, sp, #8
    9824:	mov	r2, #32
    9828:	mov	r1, #0
    982c:	mov	r0, r4
    9830:	bl	e58 <memset@plt>
    9834:	mov	r3, #1
    9838:	mov	r2, r4
    983c:	mov	r1, #0
    9840:	mov	r0, r5
    9844:	str	r3, [sp, #16]
    9848:	mov	r3, #6
    984c:	str	r3, [sp, #20]
    9850:	add	r3, sp, #4
    9854:	bl	eb8 <getaddrinfo@plt>
    9858:	cmp	r0, #0
    985c:	ldreq	r0, [sp, #4]
    9860:	movne	r0, #0
    9864:	add	sp, sp, #44	; 0x2c
    9868:	pop	{r4, r5, pc}

0000986c <pcap_nametonetaddr>:
    986c:	push	{r4, lr}
    9870:	bl	d74 <getnetbyname@plt>
    9874:	cmp	r0, #0
    9878:	ldrne	r0, [r0, #12]
    987c:	pop	{r4, pc}

00009880 <pcap_nametoport>:
    9880:	push	{r4, r5, r6, r7, r8, lr}
    9884:	mov	r5, r1
    9888:	mov	r7, r0
    988c:	mov	r6, r2
    9890:	ldr	r1, [pc, #144]	; 9928 <pcap_nametoport+0xa8>
    9894:	add	r1, pc, r1
    9898:	bl	e4c <getservbyname@plt>
    989c:	cmp	r0, #0
    98a0:	mvneq	r8, #0
    98a4:	ldrne	r4, [r0, #8]
    98a8:	rev16ne	r4, r4
    98ac:	uxthne	r8, r4
    98b0:	ldr	r1, [pc, #116]	; 992c <pcap_nametoport+0xac>
    98b4:	mov	r0, r7
    98b8:	add	r1, pc, r1
    98bc:	bl	e4c <getservbyname@plt>
    98c0:	cmp	r0, #0
    98c4:	beq	98ec <pcap_nametoport+0x6c>
    98c8:	ldr	r3, [r0, #8]
    98cc:	cmn	r8, #1
    98d0:	rev16	r3, r3
    98d4:	uxth	r3, r3
    98d8:	mov	r2, r3
    98dc:	bne	98f8 <pcap_nametoport+0x78>
    98e0:	str	r3, [r5]
    98e4:	mov	r3, #17
    98e8:	b	991c <pcap_nametoport+0x9c>
    98ec:	cmn	r8, #1
    98f0:	popeq	{r4, r5, r6, r7, r8, pc}
    98f4:	mvn	r2, #0
    98f8:	sub	r4, r8, r2
    98fc:	cmn	r2, #1
    9900:	str	r8, [r5]
    9904:	clz	r4, r4
    9908:	lsr	r4, r4, #5
    990c:	moveq	r4, #0
    9910:	cmp	r4, #0
    9914:	moveq	r3, #6
    9918:	mvnne	r3, #0
    991c:	mov	r0, #1
    9920:	str	r3, [r6]
    9924:	pop	{r4, r5, r6, r7, r8, pc}
    9928:	.word	0x00006f32
    992c:	.word	0x00006f43

00009930 <pcap_nametoportrange>:
    9930:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    9934:	mov	r4, r1
    9938:	mov	r8, r2
    993c:	mov	r5, r3
    9940:	mov	r2, sp
    9944:	add	r3, sp, #4
    9948:	mov	r6, r0
    994c:	ldr	r1, [pc, #192]	; 9a14 <pcap_nametoportrange+0xe4>
    9950:	add	r1, pc, r1
    9954:	bl	e88 <sscanf@plt>
    9958:	cmp	r0, #2
    995c:	beq	9a00 <pcap_nametoportrange+0xd0>
    9960:	mov	r0, r6
    9964:	bl	d98 <strdup@plt>
    9968:	subs	r6, r0, #0
    996c:	moveq	r4, r6
    9970:	beq	9990 <pcap_nametoportrange+0x60>
    9974:	mov	r1, #45	; 0x2d
    9978:	bl	e28 <strchr@plt>
    997c:	subs	r7, r0, #0
    9980:	bne	999c <pcap_nametoportrange+0x6c>
    9984:	mov	r0, r6
    9988:	mov	r4, r7
    998c:	bl	d68 <free@plt>
    9990:	mov	r0, r4
    9994:	add	sp, sp, #12
    9998:	pop	{r4, r5, r6, r7, r8, r9, pc}
    999c:	mov	r3, #0
    99a0:	mov	r1, r4
    99a4:	mov	r2, r5
    99a8:	mov	r0, r6
    99ac:	strb	r3, [r7]
    99b0:	bl	9880 <pcap_nametoport>
    99b4:	subs	r4, r0, #0
    99b8:	bne	99c8 <pcap_nametoportrange+0x98>
    99bc:	mov	r0, r6
    99c0:	bl	d68 <free@plt>
    99c4:	b	9990 <pcap_nametoportrange+0x60>
    99c8:	mov	r2, r5
    99cc:	mov	r1, r8
    99d0:	ldr	r9, [r5]
    99d4:	add	r0, r7, #1
    99d8:	bl	9880 <pcap_nametoport>
    99dc:	subs	r4, r0, #0
    99e0:	beq	99bc <pcap_nametoportrange+0x8c>
    99e4:	ldr	r3, [r5]
    99e8:	cmp	r3, r9
    99ec:	beq	99f8 <pcap_nametoportrange+0xc8>
    99f0:	mvn	r3, #0
    99f4:	str	r3, [r5]
    99f8:	mov	r4, #1
    99fc:	b	9990 <pcap_nametoportrange+0x60>
    9a00:	ldr	r3, [sp]
    9a04:	str	r3, [r4]
    9a08:	ldr	r3, [sp, #4]
    9a0c:	str	r3, [r8]
    9a10:	b	99f0 <pcap_nametoportrange+0xc0>
    9a14:	.word	0x000071f1

00009a18 <pcap_nametoproto>:
    9a18:	push	{r4, lr}
    9a1c:	bl	d44 <getprotobyname@plt>
    9a20:	cmp	r0, #0
    9a24:	ldrne	r0, [r0, #8]
    9a28:	mvneq	r0, #0
    9a2c:	pop	{r4, pc}

00009a30 <pcap_nametoeproto>:
    9a30:	push	{r4, r5, r6, lr}
    9a34:	mov	r5, r0
    9a38:	ldr	r4, [pc, #52]	; 9a74 <pcap_nametoeproto+0x44>
    9a3c:	add	r4, pc, r4
    9a40:	ldr	r0, [r4]
    9a44:	cmp	r0, #0
    9a48:	bne	9a54 <pcap_nametoeproto+0x24>
    9a4c:	mvn	r0, #0
    9a50:	pop	{r4, r5, r6, pc}
    9a54:	mov	r1, r5
    9a58:	bl	d14 <strcmp@plt>
    9a5c:	cmp	r0, #0
    9a60:	bne	9a6c <pcap_nametoeproto+0x3c>
    9a64:	ldrh	r0, [r4, #4]
    9a68:	pop	{r4, r5, r6, pc}
    9a6c:	add	r4, r4, #8
    9a70:	b	9a40 <pcap_nametoeproto+0x10>
    9a74:	.word	0x00023848

00009a78 <pcap_nametollc>:
    9a78:	push	{r4, r5, r6, lr}
    9a7c:	mov	r5, r0
    9a80:	ldr	r4, [pc, #56]	; 9ac0 <pcap_nametollc+0x48>
    9a84:	add	r4, pc, r4
    9a88:	add	r4, r4, #168	; 0xa8
    9a8c:	ldr	r0, [r4]
    9a90:	cmp	r0, #0
    9a94:	bne	9aa0 <pcap_nametollc+0x28>
    9a98:	mvn	r0, #0
    9a9c:	pop	{r4, r5, r6, pc}
    9aa0:	mov	r1, r5
    9aa4:	bl	d14 <strcmp@plt>
    9aa8:	cmp	r0, #0
    9aac:	bne	9ab8 <pcap_nametollc+0x40>
    9ab0:	ldrh	r0, [r4, #4]
    9ab4:	pop	{r4, r5, r6, pc}
    9ab8:	add	r4, r4, #8
    9abc:	b	9a8c <pcap_nametollc+0x14>
    9ac0:	.word	0x00023800

00009ac4 <__pcap_atoin>:
    9ac4:	push	{r4, lr}
    9ac8:	mov	r2, #0
    9acc:	mov	r4, #10
    9ad0:	str	r2, [r1]
    9ad4:	mov	r3, #0
    9ad8:	mov	lr, r0
    9adc:	ldrb	ip, [r0], #1
    9ae0:	cmp	ip, #0
    9ae4:	cmpne	ip, #46	; 0x2e
    9ae8:	bne	9b14 <__pcap_atoin+0x50>
    9aec:	ldr	r0, [r1]
    9af0:	uxtb	r3, r3
    9af4:	add	r2, r2, #8
    9af8:	orr	r3, r3, r0, lsl #8
    9afc:	str	r3, [r1]
    9b00:	ldrb	r3, [lr]
    9b04:	cmp	r3, #0
    9b08:	beq	9b20 <__pcap_atoin+0x5c>
    9b0c:	add	r0, lr, #1
    9b10:	b	9ad4 <__pcap_atoin+0x10>
    9b14:	mla	r3, r4, r3, ip
    9b18:	sub	r3, r3, #48	; 0x30
    9b1c:	b	9ad8 <__pcap_atoin+0x14>
    9b20:	mov	r0, r2
    9b24:	pop	{r4, pc}

00009b28 <__pcap_atodn>:
    9b28:	push	{r0, r1, r2, r4, r5, lr}
    9b2c:	mov	r4, r1
    9b30:	mov	r3, sp
    9b34:	add	r2, sp, #4
    9b38:	mov	r5, r0
    9b3c:	ldr	r1, [pc, #64]	; 9b84 <__pcap_atodn+0x5c>
    9b40:	add	r1, pc, r1
    9b44:	bl	e88 <sscanf@plt>
    9b48:	cmp	r0, #2
    9b4c:	beq	9b60 <__pcap_atodn+0x38>
    9b50:	ldr	r0, [pc, #48]	; 9b88 <__pcap_atodn+0x60>
    9b54:	mov	r1, r5
    9b58:	add	r0, pc, r0
    9b5c:	bl	1e54 <sf_bpf_error>
    9b60:	ldrd	r2, [sp]
    9b64:	mov	r0, #32
    9b68:	lsl	r3, r3, #10
    9b6c:	ubfx	r2, r2, #0, #10
    9b70:	uxth	r3, r3
    9b74:	orr	r3, r3, r2
    9b78:	str	r3, [r4]
    9b7c:	add	sp, sp, #12
    9b80:	pop	{r4, r5, pc}
    9b84:	.word	0x00007007
    9b88:	.word	0x00006ff5

00009b8c <pcap_ether_aton>:
    9b8c:	push	{r4, r5, r6, r7, r8, lr}
    9b90:	mov	r4, r0
    9b94:	mov	r0, #6
    9b98:	bl	dec <malloc@plt>
    9b9c:	subs	r6, r0, #0
    9ba0:	movne	r7, r6
    9ba4:	bne	9c04 <pcap_ether_aton+0x78>
    9ba8:	mov	r0, r6
    9bac:	pop	{r4, r5, r6, r7, r8, pc}
    9bb0:	sub	r2, r3, #45	; 0x2d
    9bb4:	cmp	r3, #58	; 0x3a
    9bb8:	cmpne	r2, #1
    9bbc:	addls	r4, r4, #1
    9bc0:	ldrb	r0, [r4]
    9bc4:	bl	97a0 <xdtoi>
    9bc8:	mov	r5, r0
    9bcc:	bl	e04 <__ctype_b_loc@plt>
    9bd0:	ldrb	r3, [r4, #1]
    9bd4:	ldr	r1, [r0]
    9bd8:	lsl	r2, r3, #1
    9bdc:	ldrh	r2, [r1, r2]
    9be0:	tst	r2, #4096	; 0x1000
    9be4:	addeq	r4, r4, #1
    9be8:	beq	9c00 <pcap_ether_aton+0x74>
    9bec:	lsl	r5, r5, #4
    9bf0:	mov	r0, r3
    9bf4:	add	r4, r4, #2
    9bf8:	bl	97a0 <xdtoi>
    9bfc:	orr	r5, r0, r5
    9c00:	strb	r5, [r7], #1
    9c04:	ldrb	r3, [r4]
    9c08:	cmp	r3, #0
    9c0c:	bne	9bb0 <pcap_ether_aton+0x24>
    9c10:	b	9ba8 <pcap_ether_aton+0x1c>

00009c14 <pcap_ether_hostton>:
    9c14:	push	{r4, r5, r6, lr}
    9c18:	mov	r6, r0
    9c1c:	ldr	r4, [pc, #164]	; 9cc8 <pcap_ether_hostton+0xb4>
    9c20:	add	r4, pc, r4
    9c24:	ldr	r3, [r4]
    9c28:	cmp	r3, #0
    9c2c:	bne	9c68 <pcap_ether_hostton+0x54>
    9c30:	ldr	r1, [pc, #148]	; 9ccc <pcap_ether_hostton+0xb8>
    9c34:	ldr	r0, [pc, #148]	; 9cd0 <pcap_ether_hostton+0xbc>
    9c38:	add	r1, pc, r1
    9c3c:	add	r0, pc, r0
    9c40:	bl	d38 <fopen@plt>
    9c44:	ldr	r3, [r4]
    9c48:	cmp	r0, #0
    9c4c:	str	r0, [r4, #4]
    9c50:	add	r3, r3, #1
    9c54:	str	r3, [r4]
    9c58:	bne	9c78 <pcap_ether_hostton+0x64>
    9c5c:	mov	r3, #0
    9c60:	mov	r0, r3
    9c64:	pop	{r4, r5, r6, pc}
    9c68:	ldr	r0, [r4, #4]
    9c6c:	cmp	r0, #0
    9c70:	beq	9c5c <pcap_ether_hostton+0x48>
    9c74:	bl	da4 <rewind@plt>
    9c78:	ldr	r5, [pc, #84]	; 9cd4 <pcap_ether_hostton+0xc0>
    9c7c:	add	r5, pc, r5
    9c80:	ldr	r0, [r5, #4]
    9c84:	bl	c274 <pcap_next_etherent>
    9c88:	subs	r4, r0, #0
    9c8c:	beq	9c5c <pcap_ether_hostton+0x48>
    9c90:	mov	r1, r6
    9c94:	add	r0, r4, #6
    9c98:	bl	d14 <strcmp@plt>
    9c9c:	cmp	r0, #0
    9ca0:	bne	9c80 <pcap_ether_hostton+0x6c>
    9ca4:	mov	r0, #6
    9ca8:	bl	dec <malloc@plt>
    9cac:	subs	r3, r0, #0
    9cb0:	beq	9c60 <pcap_ether_hostton+0x4c>
    9cb4:	ldr	r0, [r4]
    9cb8:	str	r0, [r3]
    9cbc:	ldrh	r2, [r4, #4]
    9cc0:	strh	r2, [r3, #4]
    9cc4:	b	9c60 <pcap_ether_hostton+0x4c>
    9cc8:	.word	0x00023b00
    9ccc:	.word	0x00008305
    9cd0:	.word	0x00006f2f
    9cd4:	.word	0x00023aa4

00009cd8 <__pcap_nametodnaddr>:
    9cd8:	mov	r1, r0
    9cdc:	ldr	r0, [pc, #8]	; 9cec <__pcap_nametodnaddr+0x14>
    9ce0:	push	{r4, lr}
    9ce4:	add	r0, pc, r0
    9ce8:	bl	1e54 <sf_bpf_error>
    9cec:	.word	0x00006e93

00009cf0 <find_levels_r>:
    9cf0:	ldr	r3, [pc, #128]	; 9d78 <find_levels_r+0x88>
    9cf4:	push	{r4, r5, r6, lr}
    9cf8:	ldr	r2, [r0, #24]
    9cfc:	add	r3, pc, r3
    9d00:	ldr	r3, [r3]
    9d04:	ldr	r5, [pc, #112]	; 9d7c <find_levels_r+0x8c>
    9d08:	cmp	r2, r3
    9d0c:	add	r5, pc, r5
    9d10:	popeq	{r4, r5, r6, pc}
    9d14:	mov	r4, r0
    9d18:	ldr	r0, [r0, #60]	; 0x3c
    9d1c:	str	r3, [r4, #24]
    9d20:	mov	r3, #0
    9d24:	str	r3, [r4, #100]	; 0x64
    9d28:	cmp	r0, r3
    9d2c:	beq	9d58 <find_levels_r+0x68>
    9d30:	bl	9cf0 <find_levels_r>
    9d34:	ldr	r0, [r4, #84]	; 0x54
    9d38:	bl	9cf0 <find_levels_r>
    9d3c:	ldr	r2, [r4, #60]	; 0x3c
    9d40:	ldr	r3, [r4, #84]	; 0x54
    9d44:	ldr	r0, [r2, #36]	; 0x24
    9d48:	ldr	r3, [r3, #36]	; 0x24
    9d4c:	cmp	r3, r0
    9d50:	movlt	r3, r0
    9d54:	add	r0, r3, #1
    9d58:	ldr	r3, [pc, #32]	; 9d80 <find_levels_r+0x90>
    9d5c:	str	r0, [r4, #36]	; 0x24
    9d60:	ldr	r3, [r5, r3]
    9d64:	ldr	r3, [r3]
    9d68:	ldr	r2, [r3, r0, lsl #2]
    9d6c:	str	r2, [r4, #100]	; 0x64
    9d70:	str	r4, [r3, r0, lsl #2]
    9d74:	pop	{r4, r5, r6, pc}
    9d78:	.word	0x00023a2c
    9d7c:	.word	0x000232ec
    9d80:	.word	0x000000c8

00009d84 <propedom>:
    9d84:	push	{r4, lr}
    9d88:	mov	lr, #1
    9d8c:	ldr	r3, [r0]
    9d90:	ldr	r1, [r0, #8]
    9d94:	lsr	ip, r3, #5
    9d98:	and	r3, r3, #31
    9d9c:	ldr	r2, [r1, ip, lsl #2]
    9da0:	orr	r3, r2, lr, lsl r3
    9da4:	str	r3, [r1, ip, lsl #2]
    9da8:	ldr	r3, [r0, #12]
    9dac:	cmp	r3, #0
    9db0:	popeq	{r4, pc}
    9db4:	ldr	r1, [r3, #56]	; 0x38
    9db8:	ldr	r3, [pc, #80]	; 9e10 <propedom+0x8c>
    9dbc:	ldr	lr, [r0, #8]
    9dc0:	add	r3, pc, r3
    9dc4:	ldr	r3, [r3, #4]
    9dc8:	mov	r2, r3
    9dcc:	subs	r2, r2, #1
    9dd0:	bpl	9dfc <propedom+0x78>
    9dd4:	ldr	r2, [r0, #12]
    9dd8:	ldr	r0, [r0, #8]
    9ddc:	ldr	r2, [r2, #80]	; 0x50
    9de0:	subs	r3, r3, #1
    9de4:	popmi	{r4, pc}
    9de8:	ldr	r1, [r2], #4
    9dec:	ldr	ip, [r0], #4
    9df0:	and	r1, r1, ip
    9df4:	str	r1, [r2, #-4]
    9df8:	b	9de0 <propedom+0x5c>
    9dfc:	ldr	ip, [r1], #4
    9e00:	ldr	r4, [lr], #4
    9e04:	and	ip, ip, r4
    9e08:	str	ip, [r1, #-4]
    9e0c:	b	9dcc <propedom+0x48>
    9e10:	.word	0x00023968

00009e14 <atomdef>:
    9e14:	ldr	r3, [r0]
    9e18:	cmn	r3, #1
    9e1c:	beq	9e54 <atomdef+0x40>
    9e20:	and	r2, r3, #7
    9e24:	cmp	r2, #7
    9e28:	addls	pc, pc, r2, lsl #2
    9e2c:	b	9e74 <atomdef+0x60>
    9e30:	b	9e7c <atomdef+0x68>
    9e34:	b	9e50 <atomdef+0x3c>
    9e38:	b	9e5c <atomdef+0x48>
    9e3c:	b	9e5c <atomdef+0x48>
    9e40:	b	9e7c <atomdef+0x68>
    9e44:	b	9e74 <atomdef+0x60>
    9e48:	b	9e74 <atomdef+0x60>
    9e4c:	b	9e64 <atomdef+0x50>
    9e50:	mov	r3, #17
    9e54:	mov	r0, r3
    9e58:	bx	lr
    9e5c:	ldr	r3, [r0, #12]
    9e60:	b	9e54 <atomdef+0x40>
    9e64:	tst	r3, #248	; 0xf8
    9e68:	moveq	r3, #17
    9e6c:	movne	r3, #16
    9e70:	b	9e54 <atomdef+0x40>
    9e74:	mvn	r3, #0
    9e78:	b	9e54 <atomdef+0x40>
    9e7c:	mov	r3, #16
    9e80:	b	9e54 <atomdef+0x40>

00009e84 <F>:
    9e84:	eor	r3, r0, r2, lsl #8
    9e88:	push	{r4, r5, lr}
    9e8c:	mov	r4, #213	; 0xd5
    9e90:	eor	r3, r3, r1, lsl #4
    9e94:	ldr	ip, [pc, #204]	; 9f68 <F+0xe4>
    9e98:	udiv	lr, r3, r4
    9e9c:	add	ip, pc, ip
    9ea0:	mls	lr, r4, lr, r3
    9ea4:	ldr	r3, [pc, #192]	; 9f6c <F+0xe8>
    9ea8:	lsl	lr, lr, #2
    9eac:	add	r3, pc, r3
    9eb0:	add	r3, r3, lr
    9eb4:	ldr	r3, [r3, #8]
    9eb8:	cmp	r3, #0
    9ebc:	bne	9f30 <F+0xac>
    9ec0:	ldr	r4, [pc, #168]	; 9f70 <F+0xec>
    9ec4:	tst	r0, #230	; 0xe6
    9ec8:	add	r4, pc, r4
    9ecc:	ldr	r3, [r4, #860]	; 0x35c
    9ed0:	add	r3, r3, #1
    9ed4:	str	r3, [r4, #860]	; 0x35c
    9ed8:	bne	9ef8 <F+0x74>
    9edc:	ldr	r4, [pc, #144]	; 9f74 <F+0xf0>
    9ee0:	ldr	r4, [ip, r4]
    9ee4:	ldr	r4, [r4]
    9ee8:	add	r5, r4, r3, lsl #3
    9eec:	str	r1, [r5, #4]
    9ef0:	mov	r5, #1
    9ef4:	str	r5, [r4, r3, lsl #3]
    9ef8:	ldr	r4, [pc, #120]	; 9f78 <F+0xf4>
    9efc:	ldr	r4, [ip, r4]
    9f00:	ldr	ip, [r4]
    9f04:	strd	r2, [ip, #8]
    9f08:	add	r5, ip, #20
    9f0c:	ldr	r2, [pc, #104]	; 9f7c <F+0xf8>
    9f10:	str	r5, [r4]
    9f14:	strd	r0, [ip]
    9f18:	add	r2, pc, r2
    9f1c:	add	lr, r2, lr
    9f20:	ldr	r2, [lr, #8]
    9f24:	str	r2, [ip, #16]
    9f28:	str	ip, [lr, #8]
    9f2c:	b	9f58 <F+0xd4>
    9f30:	ldr	r4, [r3]
    9f34:	cmp	r4, r0
    9f38:	bne	9f60 <F+0xdc>
    9f3c:	ldr	r4, [r3, #4]
    9f40:	cmp	r4, r1
    9f44:	bne	9f60 <F+0xdc>
    9f48:	ldr	r4, [r3, #8]
    9f4c:	cmp	r4, r2
    9f50:	bne	9f60 <F+0xdc>
    9f54:	ldr	r3, [r3, #12]
    9f58:	mov	r0, r3
    9f5c:	pop	{r4, r5, pc}
    9f60:	ldr	r3, [r3, #16]
    9f64:	b	9eb8 <F+0x34>
    9f68:	.word	0x0002315c
    9f6c:	.word	0x0002387c
    9f70:	.word	0x00023860
    9f74:	.word	0x00000104
    9f78:	.word	0x000000f0
    9f7c:	.word	0x00023810

00009f80 <this_op>:
    9f80:	cmp	r0, #0
    9f84:	bxeq	lr
    9f88:	ldr	r3, [r0]
    9f8c:	cmn	r3, #1
    9f90:	bxne	lr
    9f94:	ldr	r0, [r0, #16]
    9f98:	b	9f80 <this_op>

00009f9c <use_conflict>:
    9f9c:	ldr	r3, [r1, #128]	; 0x80
    9fa0:	cmp	r3, #0
    9fa4:	beq	9fe8 <use_conflict+0x4c>
    9fa8:	mov	r2, #0
    9fac:	mov	ip, #1
    9fb0:	push	{r4, lr}
    9fb4:	add	r0, r0, #136	; 0x88
    9fb8:	add	r1, r1, #136	; 0x88
    9fbc:	ands	lr, r3, ip, lsl r2
    9fc0:	beq	9fd4 <use_conflict+0x38>
    9fc4:	ldr	r4, [r0, r2, lsl #2]
    9fc8:	ldr	lr, [r1, r2, lsl #2]
    9fcc:	cmp	r4, lr
    9fd0:	bne	9ff0 <use_conflict+0x54>
    9fd4:	add	r2, r2, #1
    9fd8:	cmp	r2, #18
    9fdc:	bne	9fbc <use_conflict+0x20>
    9fe0:	mov	r0, #0
    9fe4:	pop	{r4, pc}
    9fe8:	mov	r0, r3
    9fec:	bx	lr
    9ff0:	mov	r0, #1
    9ff4:	pop	{r4, pc}

00009ff8 <make_marks>:
    9ff8:	push	{r4, r5, r6, lr}
    9ffc:	mov	r4, r0
    a000:	ldr	r5, [pc, #52]	; a03c <make_marks+0x44>
    a004:	add	r5, pc, r5
    a008:	ldr	r3, [r5]
    a00c:	ldr	r2, [r4, #24]
    a010:	cmp	r2, r3
    a014:	popeq	{r4, r5, r6, pc}
    a018:	str	r3, [r4, #24]
    a01c:	ldr	r3, [r4, #8]
    a020:	and	r3, r3, #7
    a024:	cmp	r3, #6
    a028:	popeq	{r4, r5, r6, pc}
    a02c:	ldr	r0, [r4, #60]	; 0x3c
    a030:	bl	9ff8 <make_marks>
    a034:	ldr	r4, [r4, #84]	; 0x54
    a038:	b	a008 <make_marks+0x10>
    a03c:	.word	0x00023724

0000a040 <slength>:
    a040:	mov	r3, r0
    a044:	mov	r0, #0
    a048:	cmp	r3, #0
    a04c:	bxeq	lr
    a050:	ldr	r2, [r3]
    a054:	ldr	r3, [r3, #16]
    a058:	cmn	r2, #1
    a05c:	addne	r0, r0, #1
    a060:	b	a048 <slength+0x8>

0000a064 <count_blocks>:
    a064:	push	{r4, r5, r6, lr}
    a068:	mov	r4, r0
    a06c:	mov	r5, #0
    a070:	ldr	r6, [pc, #60]	; a0b4 <count_blocks+0x50>
    a074:	add	r6, pc, r6
    a078:	cmp	r4, #0
    a07c:	beq	a0ac <count_blocks+0x48>
    a080:	ldr	r3, [r6]
    a084:	ldr	r2, [r4, #24]
    a088:	cmp	r2, r3
    a08c:	beq	a0ac <count_blocks+0x48>
    a090:	str	r3, [r4, #24]
    a094:	ldr	r0, [r4, #60]	; 0x3c
    a098:	bl	a064 <count_blocks>
    a09c:	add	r0, r0, #1
    a0a0:	ldr	r4, [r4, #84]	; 0x54
    a0a4:	add	r5, r5, r0
    a0a8:	b	a078 <count_blocks+0x14>
    a0ac:	mov	r0, r5
    a0b0:	pop	{r4, r5, r6, pc}
    a0b4:	.word	0x000236b4

0000a0b8 <number_blks_r>:
    a0b8:	push	{r4, r5, r6, lr}
    a0bc:	mov	r4, r0
    a0c0:	ldr	r5, [pc, #84]	; a11c <number_blks_r+0x64>
    a0c4:	ldr	r6, [pc, #84]	; a120 <number_blks_r+0x68>
    a0c8:	add	r5, pc, r5
    a0cc:	add	r6, pc, r6
    a0d0:	cmp	r4, #0
    a0d4:	popeq	{r4, r5, r6, pc}
    a0d8:	ldr	r3, [r5]
    a0dc:	ldr	r2, [r4, #24]
    a0e0:	cmp	r2, r3
    a0e4:	popeq	{r4, r5, r6, pc}
    a0e8:	str	r3, [r4, #24]
    a0ec:	ldr	r3, [r5, #864]	; 0x360
    a0f0:	add	r2, r3, #1
    a0f4:	str	r3, [r4]
    a0f8:	str	r2, [r5, #864]	; 0x360
    a0fc:	ldr	r2, [pc, #32]	; a124 <number_blks_r+0x6c>
    a100:	ldr	r2, [r6, r2]
    a104:	ldr	r2, [r2]
    a108:	str	r4, [r2, r3, lsl #2]
    a10c:	ldr	r0, [r4, #60]	; 0x3c
    a110:	bl	a0b8 <number_blks_r>
    a114:	ldr	r4, [r4, #84]	; 0x54
    a118:	b	a0d0 <number_blks_r+0x18>
    a11c:	.word	0x00023660
    a120:	.word	0x00022f2c
    a124:	.word	0x000000d0

0000a128 <count_stmts>:
    a128:	cmp	r0, #0
    a12c:	bxeq	lr
    a130:	ldr	r3, [pc, #96]	; a198 <count_stmts+0x70>
    a134:	ldr	r2, [r0, #24]
    a138:	add	r3, pc, r3
    a13c:	ldr	r3, [r3]
    a140:	cmp	r2, r3
    a144:	beq	a190 <count_stmts+0x68>
    a148:	push	{r4, r5, r6, lr}
    a14c:	mov	r4, r0
    a150:	ldr	r0, [r0, #60]	; 0x3c
    a154:	str	r3, [r4, #24]
    a158:	bl	a128 <count_stmts>
    a15c:	mov	r5, r0
    a160:	ldr	r0, [r4, #84]	; 0x54
    a164:	bl	a128 <count_stmts>
    a168:	add	r5, r5, r0
    a16c:	ldr	r0, [r4, #4]
    a170:	bl	a040 <slength>
    a174:	ldr	r1, [r4, #28]
    a178:	add	r0, r0, r5
    a17c:	add	r0, r0, #1
    a180:	add	r1, r0, r1
    a184:	ldr	r0, [r4, #32]
    a188:	add	r0, r1, r0
    a18c:	pop	{r4, r5, r6, pc}
    a190:	mov	r0, #0
    a194:	bx	lr
    a198:	.word	0x000235f0

0000a19c <atomuse>:
    a19c:	ldr	r3, [r0]
    a1a0:	cmn	r3, #1
    a1a4:	beq	a218 <atomuse+0x7c>
    a1a8:	and	r2, r3, #7
    a1ac:	sub	r2, r2, #2
    a1b0:	cmp	r2, #5
    a1b4:	addls	pc, pc, r2, lsl #2
    a1b8:	b	a1f0 <atomuse+0x54>
    a1bc:	b	a230 <atomuse+0x94>
    a1c0:	b	a238 <atomuse+0x9c>
    a1c4:	b	a20c <atomuse+0x70>
    a1c8:	b	a20c <atomuse+0x70>
    a1cc:	b	a1d4 <atomuse+0x38>
    a1d0:	b	a220 <atomuse+0x84>
    a1d4:	and	r3, r3, #24
    a1d8:	cmp	r3, #16
    a1dc:	beq	a218 <atomuse+0x7c>
    a1e0:	cmp	r3, #8
    a1e4:	mvnne	r3, #0
    a1e8:	moveq	r3, #17
    a1ec:	b	a218 <atomuse+0x7c>
    a1f0:	and	r3, r3, #224	; 0xe0
    a1f4:	cmp	r3, #64	; 0x40
    a1f8:	beq	a238 <atomuse+0x9c>
    a1fc:	cmp	r3, #96	; 0x60
    a200:	ldreq	r3, [r0, #12]
    a204:	mvnne	r3, #0
    a208:	b	a218 <atomuse+0x7c>
    a20c:	tst	r3, #8
    a210:	moveq	r3, #16
    a214:	movne	r3, #18
    a218:	mov	r0, r3
    a21c:	bx	lr
    a220:	and	r3, r3, #248	; 0xf8
    a224:	cmp	r3, #128	; 0x80
    a228:	movne	r3, #16
    a22c:	b	a1e8 <atomuse+0x4c>
    a230:	mov	r3, #16
    a234:	b	a218 <atomuse+0x7c>
    a238:	mov	r3, #17
    a23c:	b	a218 <atomuse+0x7c>

0000a240 <deadstmt>:
    a240:	push	{r4, lr}
    a244:	mov	r4, r0
    a248:	bl	a19c <atomuse>
    a24c:	cmp	r0, #0
    a250:	blt	a268 <deadstmt+0x28>
    a254:	cmp	r0, #18
    a258:	mov	r3, #0
    a25c:	streq	r3, [r1, #64]	; 0x40
    a260:	streq	r3, [r1, #68]	; 0x44
    a264:	strne	r3, [r1, r0, lsl #2]
    a268:	mov	r0, r4
    a26c:	bl	9e14 <atomdef>
    a270:	cmp	r0, #0
    a274:	poplt	{r4, pc}
    a278:	ldr	r2, [r1, r0, lsl #2]
    a27c:	cmp	r2, #0
    a280:	beq	a29c <deadstmt+0x5c>
    a284:	ldr	r3, [pc, #24]	; a2a4 <deadstmt+0x64>
    a288:	mov	ip, #0
    a28c:	add	r3, pc, r3
    a290:	str	ip, [r3, #868]	; 0x364
    a294:	mvn	r3, #0
    a298:	str	r3, [r2]
    a29c:	str	r4, [r1, r0, lsl #2]
    a2a0:	pop	{r4, pc}
    a2a4:	.word	0x0002349c

0000a2a8 <fold_op>:
    a2a8:	ldr	r3, [pc, #236]	; a39c <fold_op+0xf4>
    a2ac:	push	{r4, lr}
    a2b0:	ldr	ip, [pc, #232]	; a3a0 <fold_op+0xf8>
    a2b4:	add	r3, pc, r3
    a2b8:	ldr	r3, [r3, ip]
    a2bc:	ldr	ip, [r3]
    a2c0:	add	r1, ip, r1, lsl #3
    a2c4:	add	r2, ip, r2, lsl #3
    a2c8:	ldr	r3, [r1, #4]
    a2cc:	ldr	r1, [r2, #4]
    a2d0:	ldr	r2, [r0]
    a2d4:	and	r2, r2, #240	; 0xf0
    a2d8:	cmp	r2, #64	; 0x40
    a2dc:	beq	a384 <fold_op+0xdc>
    a2e0:	bgt	a328 <fold_op+0x80>
    a2e4:	cmp	r2, #16
    a2e8:	beq	a374 <fold_op+0xcc>
    a2ec:	bgt	a300 <fold_op+0x58>
    a2f0:	cmp	r2, #0
    a2f4:	addeq	r3, r3, r1
    a2f8:	beq	a340 <fold_op+0x98>
    a2fc:	bl	ee8 <abort@plt>
    a300:	cmp	r2, #32
    a304:	beq	a37c <fold_op+0xd4>
    a308:	cmp	r2, #48	; 0x30
    a30c:	bne	a2fc <fold_op+0x54>
    a310:	cmp	r1, #0
    a314:	udivne	r3, r3, r1
    a318:	bne	a340 <fold_op+0x98>
    a31c:	ldr	r0, [pc, #128]	; a3a4 <fold_op+0xfc>
    a320:	add	r0, pc, r0
    a324:	bl	1e54 <sf_bpf_error>
    a328:	cmp	r2, #96	; 0x60
    a32c:	beq	a38c <fold_op+0xe4>
    a330:	bgt	a35c <fold_op+0xb4>
    a334:	cmp	r2, #80	; 0x50
    a338:	andeq	r3, r3, r1
    a33c:	bne	a2fc <fold_op+0x54>
    a340:	ldr	r2, [pc, #96]	; a3a8 <fold_op+0x100>
    a344:	str	r3, [r0, #12]
    a348:	mov	r3, #0
    a34c:	str	r3, [r0]
    a350:	add	r2, pc, r2
    a354:	str	r3, [r2, #868]	; 0x364
    a358:	pop	{r4, pc}
    a35c:	cmp	r2, #112	; 0x70
    a360:	beq	a394 <fold_op+0xec>
    a364:	cmp	r2, #128	; 0x80
    a368:	rsbeq	r3, r3, #0
    a36c:	beq	a340 <fold_op+0x98>
    a370:	b	a2fc <fold_op+0x54>
    a374:	sub	r3, r3, r1
    a378:	b	a340 <fold_op+0x98>
    a37c:	mul	r3, r1, r3
    a380:	b	a340 <fold_op+0x98>
    a384:	orr	r3, r3, r1
    a388:	b	a340 <fold_op+0x98>
    a38c:	lsl	r3, r3, r1
    a390:	b	a340 <fold_op+0x98>
    a394:	lsr	r3, r3, r1
    a398:	b	a340 <fold_op+0x98>
    a39c:	.word	0x00022d44
    a3a0:	.word	0x00000104
    a3a4:	.word	0x00006919
    a3a8:	.word	0x000233d8

0000a3ac <convert_code_r>:
    a3ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    a3b0:	subs	r5, r0, #0
    a3b4:	bne	a3c0 <convert_code_r+0x14>
    a3b8:	mov	r0, #1
    a3bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    a3c0:	ldr	r8, [pc, #740]	; a6ac <convert_code_r+0x300>
    a3c4:	ldr	r2, [r5, #24]
    a3c8:	add	r8, pc, r8
    a3cc:	ldr	r3, [r8]
    a3d0:	cmp	r2, r3
    a3d4:	beq	a3b8 <convert_code_r+0xc>
    a3d8:	str	r3, [r5, #24]
    a3dc:	ldr	r0, [r5, #84]	; 0x54
    a3e0:	bl	a3ac <convert_code_r>
    a3e4:	cmp	r0, #0
    a3e8:	bne	a3f4 <convert_code_r+0x48>
    a3ec:	mov	r0, #0
    a3f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    a3f4:	ldr	r0, [r5, #60]	; 0x3c
    a3f8:	bl	a3ac <convert_code_r>
    a3fc:	cmp	r0, #0
    a400:	beq	a3ec <convert_code_r+0x40>
    a404:	ldr	r6, [r5, #4]
    a408:	mov	r0, r6
    a40c:	bl	a040 <slength>
    a410:	ldr	r3, [r5, #28]
    a414:	add	r4, r0, #1
    a418:	cmp	r0, #0
    a41c:	mov	r7, r0
    a420:	add	r4, r4, r3
    a424:	ldr	r3, [r5, #32]
    a428:	add	r3, r4, r3
    a42c:	ldr	r4, [r8, #872]	; 0x368
    a430:	sub	r4, r4, r3, lsl #3
    a434:	ldr	r3, [r8, #876]	; 0x36c
    a438:	str	r4, [r8, #872]	; 0x368
    a43c:	sub	r3, r4, r3
    a440:	asr	r3, r3, #3
    a444:	str	r3, [r5, #40]	; 0x28
    a448:	beq	a488 <convert_code_r+0xdc>
    a44c:	mov	r1, #4
    a450:	bl	d08 <calloc@plt>
    a454:	cmp	r0, #0
    a458:	movne	r3, r6
    a45c:	movne	r2, #0
    a460:	bne	a47c <convert_code_r+0xd0>
    a464:	ldr	r0, [pc, #580]	; a6b0 <convert_code_r+0x304>
    a468:	add	r0, pc, r0
    a46c:	bl	1e54 <sf_bpf_error>
    a470:	str	r3, [r0, r2, lsl #2]
    a474:	add	r2, r2, #1
    a478:	ldr	r3, [r3, #16]
    a47c:	cmp	r3, #0
    a480:	cmpne	r7, r2
    a484:	bhi	a470 <convert_code_r+0xc4>
    a488:	mov	r2, #0
    a48c:	sub	lr, r7, #2
    a490:	b	a5bc <convert_code_r+0x210>
    a494:	ldr	r3, [r6]
    a498:	cmn	r3, #1
    a49c:	beq	a5b8 <convert_code_r+0x20c>
    a4a0:	strh	r3, [r4]
    a4a4:	ldr	r3, [r6, #12]
    a4a8:	str	r3, [r4, #4]
    a4ac:	ldr	r3, [r6]
    a4b0:	and	r1, r3, #7
    a4b4:	sub	r3, r3, #5
    a4b8:	clz	r3, r3
    a4bc:	lsr	r3, r3, #5
    a4c0:	cmp	r1, #5
    a4c4:	orrne	r3, r3, #1
    a4c8:	cmp	r3, #0
    a4cc:	bne	a5b0 <convert_code_r+0x204>
    a4d0:	cmp	lr, r2
    a4d4:	beq	a5b0 <convert_code_r+0x204>
    a4d8:	ldr	r1, [r6, #4]
    a4dc:	cmp	r1, #0
    a4e0:	beq	a4f0 <convert_code_r+0x144>
    a4e4:	ldr	r1, [r6, #8]
    a4e8:	cmp	r1, #0
    a4ec:	bne	a5a0 <convert_code_r+0x1f4>
    a4f0:	ldr	r1, [pc, #444]	; a6b4 <convert_code_r+0x308>
    a4f4:	ldr	r0, [pc, #444]	; a6b8 <convert_code_r+0x30c>
    a4f8:	add	r1, pc, r1
    a4fc:	add	r0, pc, r0
    a500:	bl	1e54 <sf_bpf_error>
    a504:	ldr	r9, [r0, r1, lsl #2]
    a508:	ldr	sl, [r6, #4]
    a50c:	cmp	r9, sl
    a510:	bne	a53c <convert_code_r+0x190>
    a514:	cmp	ip, #0
    a518:	beq	a530 <convert_code_r+0x184>
    a51c:	ldr	r1, [pc, #408]	; a6bc <convert_code_r+0x310>
    a520:	ldr	r0, [pc, #408]	; a6c0 <convert_code_r+0x314>
    a524:	add	r1, pc, r1
    a528:	add	r0, pc, r0
    a52c:	b	a500 <convert_code_r+0x154>
    a530:	add	ip, r8, r1
    a534:	strb	ip, [r4, #2]
    a538:	mov	ip, #1
    a53c:	ldr	sl, [r6, #8]
    a540:	cmp	r9, sl
    a544:	bne	a570 <convert_code_r+0x1c4>
    a548:	cmp	r3, #0
    a54c:	beq	a564 <convert_code_r+0x1b8>
    a550:	ldr	r1, [pc, #364]	; a6c4 <convert_code_r+0x318>
    a554:	ldr	r0, [pc, #364]	; a6c8 <convert_code_r+0x31c>
    a558:	add	r1, pc, r1
    a55c:	add	r0, pc, r0
    a560:	b	a500 <convert_code_r+0x154>
    a564:	add	r3, r8, r1
    a568:	strb	r3, [r4, #3]
    a56c:	mov	r3, #1
    a570:	add	r1, r1, #1
    a574:	cmp	r1, r7
    a578:	blt	a504 <convert_code_r+0x158>
    a57c:	eor	ip, ip, #1
    a580:	eor	r3, r3, #1
    a584:	orrs	r3, ip, r3
    a588:	beq	a5b0 <convert_code_r+0x204>
    a58c:	ldr	r1, [pc, #312]	; a6cc <convert_code_r+0x320>
    a590:	ldr	r0, [pc, #312]	; a6d0 <convert_code_r+0x324>
    a594:	add	r1, pc, r1
    a598:	add	r0, pc, r0
    a59c:	b	a500 <convert_code_r+0x154>
    a5a0:	mov	ip, r3
    a5a4:	mov	r1, r3
    a5a8:	mvn	r8, r2
    a5ac:	b	a574 <convert_code_r+0x1c8>
    a5b0:	add	r4, r4, #8
    a5b4:	add	r2, r2, #1
    a5b8:	ldr	r6, [r6, #16]
    a5bc:	cmp	r6, #0
    a5c0:	bne	a494 <convert_code_r+0xe8>
    a5c4:	cmp	r0, #0
    a5c8:	beq	a5d0 <convert_code_r+0x224>
    a5cc:	bl	d68 <free@plt>
    a5d0:	ldr	r3, [r5, #8]
    a5d4:	strh	r3, [r4]
    a5d8:	ldr	r3, [r5, #20]
    a5dc:	str	r3, [r4, #4]
    a5e0:	ldr	r1, [r5, #60]	; 0x3c
    a5e4:	cmp	r1, #0
    a5e8:	beq	a3b8 <convert_code_r+0xc>
    a5ec:	ldr	r3, [r5, #40]	; 0x28
    a5f0:	add	r2, r7, r3
    a5f4:	ldr	r3, [r1, #40]	; 0x28
    a5f8:	sub	r3, r3, r2
    a5fc:	sub	r2, r3, #1
    a600:	cmp	r2, #255	; 0xff
    a604:	bls	a674 <convert_code_r+0x2c8>
    a608:	ldr	r0, [r5, #28]
    a60c:	cmp	r0, #0
    a610:	bne	a620 <convert_code_r+0x274>
    a614:	mov	r3, #1
    a618:	str	r3, [r5, #28]
    a61c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    a620:	mov	r2, #0
    a624:	sub	r3, r3, #2
    a628:	strb	r2, [r4, #2]
    a62c:	mov	r2, #5
    a630:	strh	r2, [r4, #8]
    a634:	mov	r2, #1
    a638:	str	r3, [r4, #12]
    a63c:	ldr	r0, [r5, #40]	; 0x28
    a640:	mov	r1, #1
    a644:	ldr	r3, [r5, #84]	; 0x54
    a648:	add	r0, r7, r0
    a64c:	ldr	r3, [r3, #40]	; 0x28
    a650:	sub	r0, r3, r0
    a654:	sub	r3, r0, #1
    a658:	cmp	r3, #255	; 0xff
    a65c:	bls	a6a4 <convert_code_r+0x2f8>
    a660:	ldr	r0, [r5, #32]
    a664:	cmp	r0, #0
    a668:	bne	a680 <convert_code_r+0x2d4>
    a66c:	str	r1, [r5, #32]
    a670:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    a674:	strb	r2, [r4, #2]
    a678:	mov	r2, #0
    a67c:	b	a63c <convert_code_r+0x290>
    a680:	strb	r2, [r4, #3]
    a684:	add	r2, r2, #1
    a688:	mov	lr, #5
    a68c:	lsl	r0, r2, #3
    a690:	sub	r3, r3, r2
    a694:	add	ip, r4, r0
    a698:	strh	lr, [r4, r0]
    a69c:	str	r3, [ip, #4]
    a6a0:	b	a3b8 <convert_code_r+0xc>
    a6a4:	strb	r3, [r4, #3]
    a6a8:	b	a3b8 <convert_code_r+0xc>
    a6ac:	.word	0x00023360
    a6b0:	.word	0x000067e2
    a6b4:	.word	0x00006762
    a6b8:	.word	0x00006771
    a6bc:	.word	0x00006772
    a6c0:	.word	0x00006745
    a6c4:	.word	0x0000673e
    a6c8:	.word	0x00006711
    a6cc:	.word	0x00006713
    a6d0:	.word	0x000066d5

0000a6d4 <vstore.isra.0>:
    a6d4:	cmp	r3, #0
    a6d8:	beq	a6f4 <vstore.isra.0+0x20>
    a6dc:	ldr	r3, [r1]
    a6e0:	cmp	r3, r2
    a6e4:	bne	a6f4 <vstore.isra.0+0x20>
    a6e8:	mvn	r3, #0
    a6ec:	str	r3, [r0]
    a6f0:	bx	lr
    a6f4:	str	r2, [r1]
    a6f8:	bx	lr

0000a6fc <find_inedges.isra.2>:
    a6fc:	ldr	r3, [pc, #152]	; a79c <find_inedges.isra.2+0xa0>
    a700:	push	{r4, lr}
    a704:	ldr	r1, [pc, #148]	; a7a0 <find_inedges.isra.2+0xa4>
    a708:	add	r3, pc, r3
    a70c:	ldr	r2, [r3, #864]	; 0x360
    a710:	ldr	r3, [pc, #140]	; a7a4 <find_inedges.isra.2+0xa8>
    a714:	add	r1, pc, r1
    a718:	ldr	r3, [r1, r3]
    a71c:	ldr	ip, [r3]
    a720:	mov	r3, #0
    a724:	mov	lr, r3
    a728:	cmp	r3, r2
    a72c:	blt	a75c <find_inedges.isra.2+0x60>
    a730:	ldr	r3, [pc, #112]	; a7a8 <find_inedges.isra.2+0xac>
    a734:	ldr	r2, [r0]
    a738:	ldr	r3, [r1, r3]
    a73c:	ldr	r0, [r3]
    a740:	cmp	r2, #0
    a744:	pople	{r4, pc}
    a748:	ldr	r3, [r0, r2, lsl #2]
    a74c:	cmp	r3, #0
    a750:	bne	a76c <find_inedges.isra.2+0x70>
    a754:	sub	r2, r2, #1
    a758:	b	a740 <find_inedges.isra.2+0x44>
    a75c:	ldr	r4, [ip, r3, lsl #2]
    a760:	add	r3, r3, #1
    a764:	str	lr, [r4, #112]	; 0x70
    a768:	b	a728 <find_inedges.isra.2+0x2c>
    a76c:	ldr	r1, [r3, #60]	; 0x3c
    a770:	ldr	ip, [r1, #112]	; 0x70
    a774:	str	ip, [r3, #68]	; 0x44
    a778:	add	ip, r3, #48	; 0x30
    a77c:	str	ip, [r1, #112]	; 0x70
    a780:	ldr	r1, [r3, #84]	; 0x54
    a784:	ldr	ip, [r1, #112]	; 0x70
    a788:	str	ip, [r3, #92]	; 0x5c
    a78c:	add	ip, r3, #72	; 0x48
    a790:	str	ip, [r1, #112]	; 0x70
    a794:	ldr	r3, [r3, #100]	; 0x64
    a798:	b	a74c <find_inedges.isra.2+0x50>
    a79c:	.word	0x00023020
    a7a0:	.word	0x000228e4
    a7a4:	.word	0x000000d0
    a7a8:	.word	0x000000c8

0000a7ac <opt_j>:
    a7ac:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a7b0:	ldr	r3, [r0, #12]
    a7b4:	ldr	r7, [pc, #336]	; a90c <opt_j+0x160>
    a7b8:	ldr	r5, [r3, #60]	; 0x3c
    a7bc:	add	r7, pc, r7
    a7c0:	cmp	r5, #0
    a7c4:	beq	a8ec <opt_j+0x140>
    a7c8:	ldr	r3, [r3, #84]	; 0x54
    a7cc:	mov	r4, r0
    a7d0:	cmp	r5, r3
    a7d4:	bne	a7fc <opt_j+0x50>
    a7d8:	mov	r1, r5
    a7dc:	ldr	r0, [r0, #16]
    a7e0:	bl	9f9c <use_conflict>
    a7e4:	cmp	r0, #0
    a7e8:	bne	a7fc <opt_j+0x50>
    a7ec:	ldr	r3, [pc, #284]	; a910 <opt_j+0x164>
    a7f0:	str	r5, [r4, #12]
    a7f4:	add	r3, pc, r3
    a7f8:	str	r0, [r3, #868]	; 0x364
    a7fc:	ldr	r3, [pc, #272]	; a914 <opt_j+0x168>
    a800:	mov	r8, #1
    a804:	ldr	r9, [pc, #268]	; a918 <opt_j+0x16c>
    a808:	add	r3, pc, r3
    a80c:	ldr	r3, [r3, #4]
    a810:	add	r9, pc, r9
    a814:	str	r3, [sp, #4]
    a818:	ldr	r3, [pc, #252]	; a91c <opt_j+0x170>
    a81c:	ldr	r3, [r7, r3]
    a820:	ldr	r7, [r3]
    a824:	mov	fp, #0
    a828:	ldr	r3, [sp, #4]
    a82c:	cmp	fp, r3
    a830:	bge	a8ec <opt_j+0x140>
    a834:	ldr	r3, [r4, #8]
    a838:	lsl	sl, fp, #5
    a83c:	ldr	r6, [r3, fp, lsl #2]
    a840:	cmp	r6, #0
    a844:	addeq	fp, fp, #1
    a848:	beq	a828 <opt_j+0x7c>
    a84c:	mov	r0, r6
    a850:	bl	ec4 <ffs@plt>
    a854:	sub	r0, r0, #1
    a858:	ldr	r3, [r4, #12]
    a85c:	bic	r6, r6, r8, lsl r0
    a860:	add	r0, r0, sl
    a864:	ldr	ip, [r7, r0, lsl #2]
    a868:	ldr	lr, [r3, #8]
    a86c:	ldr	r0, [ip, #4]
    a870:	cmp	r0, #0
    a874:	rsblt	r0, r0, #0
    a878:	movlt	r1, #0
    a87c:	movge	r1, #1
    a880:	cmp	lr, r0
    a884:	bne	a840 <opt_j+0x94>
    a888:	ldr	ip, [ip, #16]
    a88c:	ldr	r5, [r3, #200]	; 0xc8
    a890:	ldr	lr, [ip, #200]	; 0xc8
    a894:	cmp	r5, lr
    a898:	bne	a840 <opt_j+0x94>
    a89c:	ldr	lr, [r3, #132]	; 0x84
    a8a0:	ldr	ip, [ip, #132]	; 0x84
    a8a4:	cmp	lr, ip
    a8a8:	bne	a8f4 <opt_j+0x148>
    a8ac:	cmp	r1, #0
    a8b0:	ldrne	r5, [r3, #60]	; 0x3c
    a8b4:	bne	a8bc <opt_j+0x110>
    a8b8:	ldr	r5, [r3, #84]	; 0x54
    a8bc:	cmp	r5, #0
    a8c0:	beq	a840 <opt_j+0x94>
    a8c4:	mov	r1, r5
    a8c8:	ldr	r0, [r4, #16]
    a8cc:	bl	9f9c <use_conflict>
    a8d0:	cmp	r0, #0
    a8d4:	bne	a840 <opt_j+0x94>
    a8d8:	str	r5, [r4, #12]
    a8dc:	ldr	r3, [r5, #60]	; 0x3c
    a8e0:	str	r0, [r9, #868]	; 0x364
    a8e4:	cmp	r3, #0
    a8e8:	bne	a824 <opt_j+0x78>
    a8ec:	add	sp, sp, #12
    a8f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a8f4:	cmp	r0, #21
    a8f8:	movne	r1, #0
    a8fc:	andeq	r1, r1, #1
    a900:	cmp	r1, #0
    a904:	bne	a8b8 <opt_j+0x10c>
    a908:	b	a840 <opt_j+0x94>
    a90c:	.word	0x0002283c
    a910:	.word	0x00022f34
    a914:	.word	0x00022f20
    a918:	.word	0x00022f18
    a91c:	.word	0x000000e8

0000a920 <opt_loop>:
    a920:	ldr	r3, [pc, #4024]	; b8e0 <opt_loop+0xfc0>
    a924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a928:	sub	sp, sp, #124	; 0x7c
    a92c:	mov	fp, r1
    a930:	str	r0, [sp]
    a934:	add	r3, pc, r3
    a938:	str	r3, [sp, #12]
    a93c:	ldr	r3, [pc, #4000]	; b8e4 <opt_loop+0xfc4>
    a940:	add	r3, pc, r3
    a944:	str	r3, [sp, #8]
    a948:	ldr	r3, [sp, #8]
    a94c:	mov	r2, #1
    a950:	mov	r1, #0
    a954:	str	r2, [r3, #868]	; 0x364
    a958:	ldr	r2, [sp, #12]
    a95c:	ldr	r5, [r3, #864]	; 0x360
    a960:	ldr	r3, [pc, #3968]	; b8e8 <opt_loop+0xfc8>
    a964:	ldr	r3, [r2, r3]
    a968:	lsl	r2, r5, #2
    a96c:	ldr	r0, [r3]
    a970:	str	r3, [sp, #4]
    a974:	bl	e58 <memset@plt>
    a978:	ldr	r0, [sp]
    a97c:	ldr	r3, [sp, #8]
    a980:	ldr	r2, [sp, #8]
    a984:	ldr	r3, [r3]
    a988:	add	r3, r3, #1
    a98c:	str	r3, [r2]
    a990:	bl	9cf0 <find_levels_r>
    a994:	ldr	r3, [sp, #8]
    a998:	mvn	r0, #0
    a99c:	ldr	r1, [r3, #880]	; 0x370
    a9a0:	ldr	r4, [r3, #884]	; 0x374
    a9a4:	mul	r2, r5, r4
    a9a8:	mov	r3, r2
    a9ac:	subs	r3, r3, #1
    a9b0:	bpl	ab34 <opt_loop+0x214>
    a9b4:	mov	r3, r4
    a9b8:	mov	r1, #0
    a9bc:	subs	r3, r3, #1
    a9c0:	bpl	ab3c <opt_loop+0x21c>
    a9c4:	ldr	r3, [sp]
    a9c8:	ldr	r1, [r3, #36]	; 0x24
    a9cc:	cmp	r1, #0
    a9d0:	bge	ab4c <opt_loop+0x22c>
    a9d4:	ldr	r3, [pc, #3856]	; b8ec <opt_loop+0xfcc>
    a9d8:	lsl	r2, r2, #2
    a9dc:	mov	r1, #0
    a9e0:	add	r3, pc, r3
    a9e4:	ldr	r0, [r3, #888]	; 0x378
    a9e8:	bl	e58 <memset@plt>
    a9ec:	ldr	r3, [sp]
    a9f0:	ldr	r2, [r3, #36]	; 0x24
    a9f4:	cmp	r2, #0
    a9f8:	ldr	r3, [sp, #4]
    a9fc:	ldr	r7, [r3]
    aa00:	bge	abe8 <opt_loop+0x2c8>
    aa04:	ldr	r3, [sp]
    aa08:	ldr	r8, [r3, #36]	; 0x24
    aa0c:	mov	r6, r8
    aa10:	cmp	r6, #0
    aa14:	bge	ac7c <opt_loop+0x35c>
    aa18:	mov	r1, #1
    aa1c:	cmp	r8, r1
    aa20:	bge	ad90 <opt_loop+0x470>
    aa24:	ldr	r3, [pc, #3780]	; b8f0 <opt_loop+0xfd0>
    aa28:	mvn	r1, #0
    aa2c:	add	r3, pc, r3
    aa30:	ldr	r4, [r3, #4]
    aa34:	ldr	r2, [r3, #892]	; 0x37c
    aa38:	ldr	r3, [r3, #896]	; 0x380
    aa3c:	mul	r3, r3, r4
    aa40:	subs	r3, r3, #1
    aa44:	bpl	addc <opt_loop+0x4bc>
    aa48:	ldr	r3, [sp]
    aa4c:	lsl	r4, r4, #2
    aa50:	mov	r1, #0
    aa54:	mov	r2, r4
    aa58:	ldr	r0, [r3, #56]	; 0x38
    aa5c:	bl	e58 <memset@plt>
    aa60:	ldr	r3, [sp]
    aa64:	mov	r2, r4
    aa68:	mov	r1, #0
    aa6c:	ldr	r0, [r3, #80]	; 0x50
    aa70:	bl	e58 <memset@plt>
    aa74:	ldr	r3, [sp]
    aa78:	ldr	r5, [r3, #36]	; 0x24
    aa7c:	cmp	r5, #0
    aa80:	bge	ade4 <opt_loop+0x4c4>
    aa84:	ldr	r4, [pc, #3688]	; b8f4 <opt_loop+0xfd4>
    aa88:	mov	r5, #0
    aa8c:	ldr	r3, [pc, #3684]	; b8f8 <opt_loop+0xfd8>
    aa90:	ldr	r2, [sp, #12]
    aa94:	add	r4, pc, r4
    aa98:	ldr	r1, [sp, #12]
    aa9c:	str	r5, [r4, #860]	; 0x35c
    aaa0:	ldr	r3, [r2, r3]
    aaa4:	ldr	r2, [pc, #3664]	; b8fc <opt_loop+0xfdc>
    aaa8:	ldr	r2, [r1, r2]
    aaac:	ldr	r2, [r2]
    aab0:	str	r2, [r3]
    aab4:	ldr	r3, [pc, #3652]	; b900 <opt_loop+0xfe0>
    aab8:	ldr	r2, [r4, #900]	; 0x384
    aabc:	ldr	r6, [r1, r3]
    aac0:	mov	r1, r5
    aac4:	lsl	r2, r2, #3
    aac8:	ldr	r0, [r6]
    aacc:	bl	e58 <memset@plt>
    aad0:	mov	r2, #852	; 0x354
    aad4:	mov	r1, r5
    aad8:	add	r0, r4, #8
    aadc:	bl	e58 <memset@plt>
    aae0:	ldr	r3, [sp]
    aae4:	ldr	r2, [r3, #36]!	; 0x24
    aae8:	mov	r0, r3
    aaec:	str	r3, [sp, #16]
    aaf0:	str	r2, [sp, #24]
    aaf4:	bl	a6fc <find_inedges.isra.2>
    aaf8:	ldr	r3, [sp, #24]
    aafc:	str	r3, [sp, #20]
    ab00:	ldr	r3, [sp, #20]
    ab04:	cmp	r3, #0
    ab08:	bge	ae14 <opt_loop+0x4f4>
    ab0c:	cmp	fp, #0
    ab10:	moveq	r5, #1
    ab14:	beq	b854 <opt_loop+0xf34>
    ab18:	ldr	r3, [pc, #3556]	; b904 <opt_loop+0xfe4>
    ab1c:	add	r3, pc, r3
    ab20:	ldr	r3, [r3, #868]	; 0x364
    ab24:	cmp	r3, #0
    ab28:	beq	a948 <opt_loop+0x28>
    ab2c:	add	sp, sp, #124	; 0x7c
    ab30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab34:	str	r0, [r1], #4
    ab38:	b	a9ac <opt_loop+0x8c>
    ab3c:	ldr	r0, [sp]
    ab40:	ldr	r0, [r0, #104]	; 0x68
    ab44:	str	r1, [r0, r3, lsl #2]
    ab48:	b	a9bc <opt_loop+0x9c>
    ab4c:	ldr	r3, [sp, #4]
    ab50:	ldr	r3, [r3]
    ab54:	ldr	r3, [r3, r1, lsl #2]
    ab58:	cmp	r3, #0
    ab5c:	subeq	r1, r1, #1
    ab60:	beq	a9cc <opt_loop+0xac>
    ab64:	ldr	r0, [r3]
    ab68:	mov	r6, #1
    ab6c:	ldr	lr, [r3, #104]	; 0x68
    ab70:	lsr	r5, r0, #5
    ab74:	and	r0, r0, #31
    ab78:	ldr	ip, [lr, r5, lsl #2]
    ab7c:	orr	r0, ip, r6, lsl r0
    ab80:	str	r0, [lr, r5, lsl #2]
    ab84:	ldr	r0, [r3, #60]	; 0x3c
    ab88:	cmp	r0, #0
    ab8c:	ldrne	ip, [r0, #104]	; 0x68
    ab90:	movne	r0, r4
    ab94:	ldrne	r5, [r3, #104]	; 0x68
    ab98:	bne	abb4 <opt_loop+0x294>
    ab9c:	ldr	r3, [r3, #100]	; 0x64
    aba0:	b	ab58 <opt_loop+0x238>
    aba4:	ldr	lr, [ip], #4
    aba8:	ldr	r6, [r5], #4
    abac:	and	lr, lr, r6
    abb0:	str	lr, [ip, #-4]
    abb4:	subs	r0, r0, #1
    abb8:	bpl	aba4 <opt_loop+0x284>
    abbc:	ldr	r0, [r3, #84]	; 0x54
    abc0:	ldr	r5, [r3, #104]	; 0x68
    abc4:	ldr	ip, [r0, #104]	; 0x68
    abc8:	mov	r0, r4
    abcc:	subs	r0, r0, #1
    abd0:	bmi	ab9c <opt_loop+0x27c>
    abd4:	ldr	lr, [ip], #4
    abd8:	ldr	r6, [r5], #4
    abdc:	and	lr, lr, r6
    abe0:	str	lr, [ip, #-4]
    abe4:	b	abcc <opt_loop+0x2ac>
    abe8:	ldr	r3, [r7, r2, lsl #2]
    abec:	cmp	r3, #0
    abf0:	subeq	r2, r2, #1
    abf4:	beq	a9f4 <opt_loop+0xd4>
    abf8:	ldr	r1, [r3]
    abfc:	mov	r5, #1
    ac00:	ldr	r0, [r3, #108]	; 0x6c
    ac04:	lsr	ip, r1, #5
    ac08:	and	r1, r1, #31
    ac0c:	ldr	lr, [r0, ip, lsl #2]
    ac10:	orr	r1, lr, r5, lsl r1
    ac14:	str	r1, [r0, ip, lsl #2]
    ac18:	ldr	r1, [r3, #60]	; 0x3c
    ac1c:	cmp	r1, #0
    ac20:	ldrne	r0, [r1, #108]	; 0x6c
    ac24:	movne	r1, r4
    ac28:	ldrne	lr, [r3, #108]	; 0x6c
    ac2c:	bne	ac48 <opt_loop+0x328>
    ac30:	ldr	r3, [r3, #100]	; 0x64
    ac34:	b	abec <opt_loop+0x2cc>
    ac38:	ldr	ip, [r0], #4
    ac3c:	ldr	r5, [lr], #4
    ac40:	orr	ip, ip, r5
    ac44:	str	ip, [r0, #-4]
    ac48:	subs	r1, r1, #1
    ac4c:	bpl	ac38 <opt_loop+0x318>
    ac50:	ldr	r1, [r3, #84]	; 0x54
    ac54:	ldr	lr, [r3, #108]	; 0x6c
    ac58:	ldr	r0, [r1, #108]	; 0x6c
    ac5c:	mov	r1, r4
    ac60:	subs	r1, r1, #1
    ac64:	bmi	ac30 <opt_loop+0x310>
    ac68:	ldr	ip, [r0], #4
    ac6c:	ldr	r5, [lr], #4
    ac70:	orr	ip, ip, r5
    ac74:	str	ip, [r0, #-4]
    ac78:	b	ac60 <opt_loop+0x340>
    ac7c:	ldr	r4, [r7, r6, lsl #2]
    ac80:	cmp	r4, #0
    ac84:	subeq	r6, r6, #1
    ac88:	beq	aa10 <opt_loop+0xf0>
    ac8c:	ldr	sl, [r4, #4]
    ac90:	mov	r9, #0
    ac94:	mov	r1, r9
    ac98:	mov	r5, r9
    ac9c:	cmp	sl, #0
    aca0:	bne	acf8 <opt_loop+0x3d8>
    aca4:	ldr	r3, [r4, #8]
    aca8:	and	r3, r3, #7
    acac:	cmp	r3, #5
    acb0:	bne	acdc <opt_loop+0x3bc>
    acb4:	add	r0, r4, #8
    acb8:	bl	a19c <atomuse>
    acbc:	cmp	r0, #0
    acc0:	blt	acdc <opt_loop+0x3bc>
    acc4:	cmp	r0, #18
    acc8:	bne	ad74 <opt_loop+0x454>
    accc:	tst	r5, #131072	; 0x20000
    acd0:	orreq	r1, r1, #131072	; 0x20000
    acd4:	tst	r5, #65536	; 0x10000
    acd8:	orreq	r1, r1, #65536	; 0x10000
    acdc:	mov	r3, #0
    ace0:	str	r5, [r4, #116]	; 0x74
    ace4:	str	r9, [r4, #120]	; 0x78
    ace8:	str	r1, [r4, #124]	; 0x7c
    acec:	str	r3, [r4, #128]	; 0x80
    acf0:	ldr	r4, [r4, #100]	; 0x64
    acf4:	b	ac80 <opt_loop+0x360>
    acf8:	ldr	r3, [sl]
    acfc:	cmn	r3, #1
    ad00:	beq	ad50 <opt_loop+0x430>
    ad04:	mov	r0, sl
    ad08:	bl	a19c <atomuse>
    ad0c:	cmp	r0, #0
    ad10:	blt	ad2c <opt_loop+0x40c>
    ad14:	cmp	r0, #18
    ad18:	bne	ad58 <opt_loop+0x438>
    ad1c:	tst	r5, #131072	; 0x20000
    ad20:	orreq	r1, r1, #131072	; 0x20000
    ad24:	tst	r5, #65536	; 0x10000
    ad28:	orreq	r1, r1, #65536	; 0x10000
    ad2c:	mov	r0, sl
    ad30:	bl	9e14 <atomdef>
    ad34:	cmp	r0, #0
    ad38:	blt	ad50 <opt_loop+0x430>
    ad3c:	mov	r3, #1
    ad40:	lsl	r0, r3, r0
    ad44:	tst	r0, r1
    ad48:	orr	r5, r5, r0
    ad4c:	orreq	r9, r9, r0
    ad50:	ldr	sl, [sl, #16]
    ad54:	b	ac9c <opt_loop+0x37c>
    ad58:	cmp	r0, #17
    ad5c:	bgt	b6b4 <opt_loop+0xd94>
    ad60:	mov	r3, #1
    ad64:	lsl	r0, r3, r0
    ad68:	tst	r5, r0
    ad6c:	orreq	r1, r1, r0
    ad70:	b	ad2c <opt_loop+0x40c>
    ad74:	cmp	r0, #17
    ad78:	bgt	b6b4 <opt_loop+0xd94>
    ad7c:	mov	r3, #1
    ad80:	lsl	r0, r3, r0
    ad84:	tst	r5, r0
    ad88:	orreq	r1, r1, r0
    ad8c:	b	acdc <opt_loop+0x3bc>
    ad90:	ldr	r3, [r7, r1, lsl #2]
    ad94:	cmp	r3, #0
    ad98:	addeq	r1, r1, #1
    ad9c:	beq	aa1c <opt_loop+0xfc>
    ada0:	ldr	r2, [r3, #60]	; 0x3c
    ada4:	ldr	r0, [r3, #84]	; 0x54
    ada8:	ldr	r2, [r2, #124]	; 0x7c
    adac:	ldr	r0, [r0, #124]	; 0x7c
    adb0:	orr	r2, r2, r0
    adb4:	ldr	r0, [r3, #128]	; 0x80
    adb8:	orr	r2, r2, r0
    adbc:	ldr	r0, [r3, #120]	; 0x78
    adc0:	str	r2, [r3, #128]	; 0x80
    adc4:	bic	r2, r2, r0
    adc8:	ldr	r0, [r3, #124]	; 0x7c
    adcc:	orr	r2, r0, r2
    add0:	str	r2, [r3, #124]	; 0x7c
    add4:	ldr	r3, [r3, #100]	; 0x64
    add8:	b	ad94 <opt_loop+0x474>
    addc:	str	r1, [r2, r3, lsl #2]
    ade0:	b	aa40 <opt_loop+0x120>
    ade4:	ldr	r3, [sp, #4]
    ade8:	ldr	r3, [r3]
    adec:	ldr	r4, [r3, r5, lsl #2]
    adf0:	cmp	r4, #0
    adf4:	subeq	r5, r5, #1
    adf8:	beq	aa7c <opt_loop+0x15c>
    adfc:	add	r0, r4, #48	; 0x30
    ae00:	bl	9d84 <propedom>
    ae04:	add	r0, r4, #72	; 0x48
    ae08:	bl	9d84 <propedom>
    ae0c:	ldr	r4, [r4, #100]	; 0x64
    ae10:	b	adf0 <opt_loop+0x4d0>
    ae14:	ldr	r3, [sp, #4]
    ae18:	ldr	r2, [sp, #20]
    ae1c:	ldr	r3, [r3]
    ae20:	ldr	r4, [r3, r2, lsl #2]
    ae24:	cmp	r4, #0
    ae28:	ldreq	r3, [sp, #20]
    ae2c:	subeq	r3, r3, #1
    ae30:	beq	aafc <opt_loop+0x1dc>
    ae34:	ldr	r7, [r4, #112]	; 0x70
    ae38:	add	r9, r4, #136	; 0x88
    ae3c:	cmp	r7, #0
    ae40:	bne	af58 <opt_loop+0x638>
    ae44:	mov	r2, #72	; 0x48
    ae48:	mov	r1, r7
    ae4c:	mov	r0, r9
    ae50:	bl	e58 <memset@plt>
    ae54:	ldr	r8, [r4, #4]
    ae58:	ldr	r3, [r4, #200]	; 0xc8
    ae5c:	str	r3, [sp, #28]
    ae60:	ldr	r3, [r4, #204]	; 0xcc
    ae64:	str	r3, [sp, #32]
    ae68:	ldr	r3, [pc, #2712]	; b908 <opt_loop+0xfe8>
    ae6c:	add	r3, pc, r3
    ae70:	str	r3, [sp, #36]	; 0x24
    ae74:	ldr	r3, [pc, #2704]	; b90c <opt_loop+0xfec>
    ae78:	add	r3, pc, r3
    ae7c:	str	r3, [sp, #40]	; 0x28
    ae80:	ldr	r3, [pc, #2696]	; b910 <opt_loop+0xff0>
    ae84:	add	r3, pc, r3
    ae88:	str	r3, [sp, #44]	; 0x2c
    ae8c:	cmp	r8, #0
    ae90:	bne	afa8 <opt_loop+0x688>
    ae94:	cmp	fp, #0
    ae98:	ldr	r7, [r4, #4]
    ae9c:	beq	b43c <opt_loop+0xb1c>
    aea0:	ldr	r3, [sp, #28]
    aea4:	ldr	r2, [r4, #128]	; 0x80
    aea8:	adds	r3, r3, #0
    aeac:	movne	r3, #1
    aeb0:	cmp	r2, #0
    aeb4:	movne	r3, #0
    aeb8:	cmp	r3, #0
    aebc:	beq	aef4 <opt_loop+0x5d4>
    aec0:	ldr	r2, [sp, #28]
    aec4:	ldr	r3, [r4, #200]	; 0xc8
    aec8:	ldr	r1, [sp, #32]
    aecc:	sub	r2, r3, r2
    aed0:	clz	r2, r2
    aed4:	lsr	r2, r2, #5
    aed8:	cmp	r1, #0
    aedc:	moveq	r2, #0
    aee0:	cmp	r2, #0
    aee4:	beq	aef4 <opt_loop+0x5d4>
    aee8:	ldr	r3, [r4, #204]	; 0xcc
    aeec:	cmp	r1, r3
    aef0:	beq	af04 <opt_loop+0x5e4>
    aef4:	ldr	r3, [r4, #8]
    aef8:	and	r3, r3, #7
    aefc:	cmp	r3, #6
    af00:	bne	b43c <opt_loop+0xb1c>
    af04:	cmp	r7, #0
    af08:	beq	af1c <opt_loop+0x5fc>
    af0c:	ldr	r3, [pc, #2560]	; b914 <opt_loop+0xff4>
    af10:	str	r5, [r4, #4]
    af14:	add	r3, pc, r3
    af18:	str	r5, [r3, #868]	; 0x364
    af1c:	ldr	r2, [r4, #8]
    af20:	ands	r2, r2, #8
    af24:	ldrne	r3, [r4, #204]	; 0xcc
    af28:	strne	r3, [r4, #132]	; 0x84
    af2c:	bne	af40 <opt_loop+0x620>
    af30:	mov	r0, r2
    af34:	ldr	r1, [r4, #20]
    af38:	bl	9e84 <F>
    af3c:	str	r0, [r4, #132]	; 0x84
    af40:	ldr	r3, [r4, #8]
    af44:	str	r3, [r4, #52]	; 0x34
    af48:	rsb	r3, r3, #0
    af4c:	str	r3, [r4, #76]	; 0x4c
    af50:	ldr	r4, [r4, #100]	; 0x64
    af54:	b	ae24 <opt_loop+0x504>
    af58:	ldr	r1, [r7, #16]
    af5c:	mov	r2, #72	; 0x48
    af60:	mov	r0, r9
    af64:	add	r1, r1, #136	; 0x88
    af68:	bl	d8c <memcpy@plt>
    af6c:	ldr	r7, [r7, #20]
    af70:	cmp	r7, #0
    af74:	beq	ae54 <opt_loop+0x534>
    af78:	add	r2, r4, #136	; 0x88
    af7c:	mov	r3, #0
    af80:	ldr	r1, [r7, #16]
    af84:	add	ip, r3, #34	; 0x22
    af88:	add	r3, r3, #1
    af8c:	ldr	r0, [r2], #4
    af90:	ldr	r1, [r1, ip, lsl #2]
    af94:	cmp	r0, r1
    af98:	strne	r5, [r2, #-4]
    af9c:	cmp	r3, #18
    afa0:	beq	af6c <opt_loop+0x64c>
    afa4:	b	af80 <opt_loop+0x660>
    afa8:	ldr	r7, [r8]
    afac:	cmp	r7, #64	; 0x40
    afb0:	beq	b200 <opt_loop+0x8e0>
    afb4:	bgt	b12c <opt_loop+0x80c>
    afb8:	cmp	r7, #20
    afbc:	beq	b018 <opt_loop+0x6f8>
    afc0:	bgt	b06c <opt_loop+0x74c>
    afc4:	cmp	r7, #3
    afc8:	beq	b42c <opt_loop+0xb0c>
    afcc:	bgt	aff8 <opt_loop+0x6d8>
    afd0:	cmp	r7, #1
    afd4:	beq	b26c <opt_loop+0x94c>
    afd8:	bgt	b418 <opt_loop+0xaf8>
    afdc:	cmp	r7, #0
    afe0:	moveq	r2, #0
    afe4:	ldreq	r1, [r8, #12]
    afe8:	moveq	r0, r2
    afec:	beq	b1b8 <opt_loop+0x898>
    aff0:	ldr	r8, [r8, #16]
    aff4:	b	ae8c <opt_loop+0x56c>
    aff8:	cmp	r7, #7
    affc:	moveq	r3, fp
    b000:	ldreq	r2, [r4, #200]	; 0xc8
    b004:	beq	b1e8 <opt_loop+0x8c8>
    b008:	cmp	r7, #12
    b00c:	beq	b090 <opt_loop+0x770>
    b010:	cmp	r7, #4
    b014:	bne	aff0 <opt_loop+0x6d0>
    b018:	cmp	fp, #0
    b01c:	ldr	r1, [r8, #12]
    b020:	beq	b0e8 <opt_loop+0x7c8>
    b024:	cmp	r1, #0
    b028:	bne	b2d4 <opt_loop+0x9b4>
    b02c:	and	r2, r7, #176	; 0xb0
    b030:	and	r3, r7, #224	; 0xe0
    b034:	cmp	r2, #0
    b038:	cmpne	r3, #96	; 0x60
    b03c:	mvneq	r3, #0
    b040:	moveq	r2, #1
    b044:	movne	r2, #0
    b048:	streq	r3, [r8]
    b04c:	beq	aff0 <opt_loop+0x6d0>
    b050:	and	r3, r7, #240	; 0xf0
    b054:	cmp	r3, #80	; 0x50
    b058:	cmpne	r3, #32
    b05c:	bne	b2d4 <opt_loop+0x9b4>
    b060:	mov	r1, r2
    b064:	str	r2, [r8]
    b068:	b	b2b8 <opt_loop+0x998>
    b06c:	cmp	r7, #40	; 0x28
    b070:	beq	b1f0 <opt_loop+0x8d0>
    b074:	bgt	b108 <opt_loop+0x7e8>
    b078:	cmp	r7, #32
    b07c:	beq	b1f0 <opt_loop+0x8d0>
    b080:	cmp	r7, #36	; 0x24
    b084:	beq	b018 <opt_loop+0x6f8>
    b088:	cmp	r7, #28
    b08c:	bne	aff0 <opt_loop+0x6d0>
    b090:	cmp	fp, #0
    b094:	ldr	r1, [r4, #200]	; 0xc8
    b098:	ldr	r2, [r4, #204]	; 0xcc
    b09c:	beq	b100 <opt_loop+0x7e0>
    b0a0:	and	ip, r7, #240	; 0xf0
    b0a4:	ldr	r0, [r6]
    b0a8:	add	lr, r0, r1, lsl #3
    b0ac:	ldr	r3, [r0, r1, lsl #3]
    b0b0:	ldr	r0, [r0, r2, lsl #3]
    b0b4:	cmp	r0, #0
    b0b8:	beq	b310 <opt_loop+0x9f0>
    b0bc:	cmp	r3, #0
    b0c0:	bne	b2fc <opt_loop+0x9dc>
    b0c4:	orr	r7, ip, #4
    b0c8:	str	r7, [r8]
    b0cc:	ldr	r2, [r6]
    b0d0:	ldr	r1, [r4, #204]	; 0xcc
    b0d4:	add	r2, r2, r1, lsl #3
    b0d8:	ldr	r1, [r2, #4]
    b0dc:	ldr	r2, [sp, #40]	; 0x28
    b0e0:	str	r1, [r8, #12]
    b0e4:	str	r3, [r2, #868]	; 0x364
    b0e8:	ldr	sl, [r4, #200]	; 0xc8
    b0ec:	mov	r2, #0
    b0f0:	mov	r0, r2
    b0f4:	bl	9e84 <F>
    b0f8:	mov	r2, r0
    b0fc:	mov	r1, sl
    b100:	mov	r0, r7
    b104:	b	b2c8 <opt_loop+0x9a8>
    b108:	cmp	r7, #48	; 0x30
    b10c:	beq	b1f0 <opt_loop+0x8d0>
    b110:	bgt	b11c <opt_loop+0x7fc>
    b114:	cmp	r7, #44	; 0x2c
    b118:	b	b08c <opt_loop+0x76c>
    b11c:	cmp	r7, #52	; 0x34
    b120:	beq	b018 <opt_loop+0x6f8>
    b124:	cmp	r7, #60	; 0x3c
    b128:	b	b08c <opt_loop+0x76c>
    b12c:	cmp	r7, #97	; 0x61
    b130:	beq	b3cc <opt_loop+0xaac>
    b134:	bgt	b174 <opt_loop+0x854>
    b138:	cmp	r7, #80	; 0x50
    b13c:	beq	b200 <opt_loop+0x8e0>
    b140:	bgt	b15c <opt_loop+0x83c>
    b144:	cmp	r7, #72	; 0x48
    b148:	beq	b200 <opt_loop+0x8e0>
    b14c:	cmp	r7, #76	; 0x4c
    b150:	beq	b090 <opt_loop+0x770>
    b154:	cmp	r7, #68	; 0x44
    b158:	b	b014 <opt_loop+0x6f4>
    b15c:	cmp	r7, #92	; 0x5c
    b160:	beq	b090 <opt_loop+0x770>
    b164:	cmp	r7, #96	; 0x60
    b168:	beq	b380 <opt_loop+0xa60>
    b16c:	cmp	r7, #84	; 0x54
    b170:	b	b014 <opt_loop+0x6f4>
    b174:	cmp	r7, #124	; 0x7c
    b178:	beq	b090 <opt_loop+0x770>
    b17c:	bgt	b198 <opt_loop+0x878>
    b180:	cmp	r7, #108	; 0x6c
    b184:	beq	b090 <opt_loop+0x770>
    b188:	cmp	r7, #116	; 0x74
    b18c:	beq	b018 <opt_loop+0x6f8>
    b190:	cmp	r7, #100	; 0x64
    b194:	b	b014 <opt_loop+0x6f4>
    b198:	cmp	r7, #132	; 0x84
    b19c:	beq	b27c <opt_loop+0x95c>
    b1a0:	bgt	b1c0 <opt_loop+0x8a0>
    b1a4:	cmp	r7, #128	; 0x80
    b1a8:	moveq	r2, #0
    b1ac:	moveq	r0, #128	; 0x80
    b1b0:	moveq	r1, r2
    b1b4:	bne	aff0 <opt_loop+0x6d0>
    b1b8:	bl	9e84 <F>
    b1bc:	b	b254 <opt_loop+0x934>
    b1c0:	cmp	r7, #135	; 0x87
    b1c4:	beq	b374 <opt_loop+0xa54>
    b1c8:	cmp	r7, #177	; 0xb1
    b1cc:	moveq	r2, #0
    b1d0:	moveq	r0, r7
    b1d4:	ldreq	r1, [r8, #12]
    b1d8:	bne	aff0 <opt_loop+0x6d0>
    b1dc:	bl	9e84 <F>
    b1e0:	mov	r2, r0
    b1e4:	mov	r3, fp
    b1e8:	add	r1, r4, #204	; 0xcc
    b1ec:	b	b260 <opt_loop+0x940>
    b1f0:	ldr	r1, [r8, #12]
    b1f4:	mov	r2, #0
    b1f8:	mov	r0, r7
    b1fc:	b	b1b8 <opt_loop+0x898>
    b200:	cmp	fp, #0
    b204:	ldr	r1, [r8, #12]
    b208:	ldr	r2, [r4, #204]	; 0xcc
    b20c:	beq	b1f8 <opt_loop+0x8d8>
    b210:	lsl	ip, r2, #3
    b214:	ldr	r3, [r6]
    b218:	ldr	r3, [r3, r2, lsl #3]
    b21c:	cmp	r3, #0
    b220:	beq	b1f8 <opt_loop+0x8d8>
    b224:	and	r0, r7, #24
    b228:	mov	r2, #0
    b22c:	orr	r0, r0, #32
    b230:	str	r0, [r8]
    b234:	ldr	r3, [r6]
    b238:	add	r3, r3, ip
    b23c:	ldr	r3, [r3, #4]
    b240:	add	r1, r1, r3
    b244:	str	r1, [r8, #12]
    b248:	bl	9e84 <F>
    b24c:	ldr	r3, [sp, #36]	; 0x24
    b250:	str	r5, [r3, #868]	; 0x364
    b254:	mov	r3, fp
    b258:	mov	r2, r0
    b25c:	add	r1, r4, #200	; 0xc8
    b260:	mov	r0, r8
    b264:	bl	a6d4 <vstore.isra.0>
    b268:	b	aff0 <opt_loop+0x6d0>
    b26c:	mov	r2, #0
    b270:	ldr	r1, [r8, #12]
    b274:	mov	r0, r2
    b278:	b	b1dc <opt_loop+0x8bc>
    b27c:	cmp	fp, #0
    b280:	ldr	r1, [r4, #200]	; 0xc8
    b284:	beq	b2c0 <opt_loop+0x9a0>
    b288:	ldr	r3, [r6]
    b28c:	ldr	r3, [r3, r1, lsl #3]
    b290:	cmp	r3, #0
    b294:	beq	b2c0 <opt_loop+0x9a0>
    b298:	str	r5, [r8]
    b29c:	ldr	r3, [r6]
    b2a0:	ldr	r2, [r4, #200]	; 0xc8
    b2a4:	add	r3, r3, r2, lsl #3
    b2a8:	mov	r2, #0
    b2ac:	ldr	r1, [r3, #4]
    b2b0:	rsb	r1, r1, #0
    b2b4:	str	r1, [r8, #12]
    b2b8:	mov	r0, r2
    b2bc:	b	b2c8 <opt_loop+0x9a8>
    b2c0:	mov	r2, #0
    b2c4:	mov	r0, #132	; 0x84
    b2c8:	bl	9e84 <F>
    b2cc:	str	r0, [r4, #200]	; 0xc8
    b2d0:	b	aff0 <opt_loop+0x6d0>
    b2d4:	ldr	r3, [r6]
    b2d8:	ldr	sl, [r4, #200]	; 0xc8
    b2dc:	ldr	r3, [r3, sl, lsl #3]
    b2e0:	cmp	r3, #0
    b2e4:	beq	b0e8 <opt_loop+0x7c8>
    b2e8:	mov	r2, #0
    b2ec:	mov	r0, r2
    b2f0:	bl	9e84 <F>
    b2f4:	mov	r2, r0
    b2f8:	mov	r1, sl
    b2fc:	mov	r0, r8
    b300:	bl	a2a8 <fold_op>
    b304:	mov	r2, #0
    b308:	ldr	r1, [r8, #12]
    b30c:	b	b2b8 <opt_loop+0x998>
    b310:	cmp	r3, #0
    b314:	beq	b100 <opt_loop+0x7e0>
    b318:	ldr	r3, [lr, #4]
    b31c:	cmp	r3, #0
    b320:	bne	b100 <opt_loop+0x7e0>
    b324:	tst	r7, #176	; 0xb0
    b328:	moveq	r3, #135	; 0x87
    b32c:	streq	r3, [r8]
    b330:	moveq	r3, #1
    b334:	beq	b378 <opt_loop+0xa58>
    b338:	and	r3, r7, #224	; 0xe0
    b33c:	cmp	r3, #32
    b340:	beq	b354 <opt_loop+0xa34>
    b344:	and	r3, r7, #208	; 0xd0
    b348:	cmp	ip, #96	; 0x60
    b34c:	cmpne	r3, #80	; 0x50
    b350:	bne	b100 <opt_loop+0x7e0>
    b354:	mov	r2, #0
    b358:	str	r5, [r8]
    b35c:	mov	r1, r2
    b360:	mov	r0, r2
    b364:	str	r5, [r8, #12]
    b368:	bl	9e84 <F>
    b36c:	mov	r3, #1
    b370:	b	b258 <opt_loop+0x938>
    b374:	mov	r3, fp
    b378:	ldr	r2, [r4, #204]	; 0xcc
    b37c:	b	b25c <opt_loop+0x93c>
    b380:	ldr	r3, [r8, #12]
    b384:	cmp	fp, #0
    b388:	ldr	r2, [r9, r3, lsl #2]
    b38c:	beq	b3c4 <opt_loop+0xaa4>
    b390:	lsl	r1, r2, #3
    b394:	ldr	r3, [r6]
    b398:	ldr	r3, [r3, r2, lsl #3]
    b39c:	cmp	r3, #0
    b3a0:	beq	b3c4 <opt_loop+0xaa4>
    b3a4:	str	r5, [r8]
    b3a8:	ldr	r3, [r6]
    b3ac:	add	r3, r3, r1
    b3b0:	ldr	r3, [r3, #4]
    b3b4:	str	r3, [r8, #12]
    b3b8:	ldr	r3, [pc, #1368]	; b918 <opt_loop+0xff8>
    b3bc:	add	r3, pc, r3
    b3c0:	str	r5, [r3, #868]	; 0x364
    b3c4:	mov	r3, fp
    b3c8:	b	b25c <opt_loop+0x93c>
    b3cc:	ldr	r3, [r8, #12]
    b3d0:	cmp	fp, #0
    b3d4:	ldr	r2, [r9, r3, lsl #2]
    b3d8:	beq	b410 <opt_loop+0xaf0>
    b3dc:	lsl	r1, r2, #3
    b3e0:	ldr	r3, [r6]
    b3e4:	ldr	r3, [r3, r2, lsl #3]
    b3e8:	cmp	r3, #0
    b3ec:	beq	b410 <opt_loop+0xaf0>
    b3f0:	mov	r3, #1
    b3f4:	str	r3, [r8]
    b3f8:	ldr	r3, [r6]
    b3fc:	add	r3, r3, r1
    b400:	ldr	r3, [r3, #4]
    b404:	str	r3, [r8, #12]
    b408:	ldr	r3, [sp, #44]	; 0x2c
    b40c:	str	r5, [r3, #868]	; 0x364
    b410:	mov	r3, fp
    b414:	b	b1e8 <opt_loop+0x8c8>
    b418:	ldr	r1, [r8, #12]
    b41c:	mov	r3, fp
    b420:	ldr	r2, [r4, #200]	; 0xc8
    b424:	add	r1, r9, r1, lsl #2
    b428:	b	b260 <opt_loop+0x940>
    b42c:	mov	r3, fp
    b430:	ldr	r1, [r8, #12]
    b434:	ldr	r2, [r4, #204]	; 0xcc
    b438:	b	b424 <opt_loop+0xb04>
    b43c:	cmp	r7, #0
    b440:	beq	b780 <opt_loop+0xe60>
    b444:	ldr	r9, [pc, #1232]	; b91c <opt_loop+0xffc>
    b448:	ldr	r3, [pc, #1232]	; b920 <opt_loop+0x1000>
    b44c:	ldr	sl, [pc, #1232]	; b924 <opt_loop+0x1004>
    b450:	add	r9, pc, r9
    b454:	add	r3, pc, r3
    b458:	add	sl, pc, sl
    b45c:	str	r3, [sp, #28]
    b460:	mov	r0, r7
    b464:	bl	9f80 <this_op>
    b468:	subs	r1, r0, #0
    b46c:	beq	b598 <opt_loop+0xc78>
    b470:	ldr	r0, [r1, #16]
    b474:	bl	9f80 <this_op>
    b478:	subs	r2, r0, #0
    b47c:	beq	b598 <opt_loop+0xc78>
    b480:	ldr	r3, [r1]
    b484:	cmp	r3, #2
    b488:	bne	b4b4 <opt_loop+0xb94>
    b48c:	ldr	r3, [r2]
    b490:	cmp	r3, #97	; 0x61
    b494:	bne	b4d8 <opt_loop+0xbb8>
    b498:	ldr	r0, [r1, #12]
    b49c:	ldr	r3, [r2, #12]
    b4a0:	cmp	r0, r3
    b4a4:	bne	b4d8 <opt_loop+0xbb8>
    b4a8:	mov	r3, #7
    b4ac:	str	r5, [sl, #868]	; 0x364
    b4b0:	str	r3, [r2]
    b4b4:	ldr	r3, [r1]
    b4b8:	cmp	r3, #0
    b4bc:	bne	b4d8 <opt_loop+0xbb8>
    b4c0:	ldr	r0, [r2]
    b4c4:	cmp	r0, #7
    b4c8:	beq	b4e0 <opt_loop+0xbc0>
    b4cc:	ldr	r3, [r4, #128]	; 0x80
    b4d0:	tst	r3, #131072	; 0x20000
    b4d4:	beq	b504 <opt_loop+0xbe4>
    b4d8:	mov	r7, r2
    b4dc:	b	b460 <opt_loop+0xb40>
    b4e0:	mov	r0, #1
    b4e4:	str	r3, [r9, #868]	; 0x364
    b4e8:	str	r0, [r1]
    b4ec:	mov	r0, #135	; 0x87
    b4f0:	str	r0, [r2]
    b4f4:	ldr	r3, [r1]
    b4f8:	cmp	r3, #0
    b4fc:	beq	b4cc <opt_loop+0xbac>
    b500:	b	b4d8 <opt_loop+0xbb8>
    b504:	ldr	r3, [r2]
    b508:	cmp	r3, #177	; 0xb1
    b50c:	movne	r7, r2
    b510:	bne	b524 <opt_loop+0xc04>
    b514:	ldr	r0, [r2, #16]
    b518:	bl	9f80 <this_op>
    b51c:	subs	r7, r0, #0
    b520:	beq	b4d8 <opt_loop+0xbb8>
    b524:	ldr	r3, [r7]
    b528:	cmp	r3, #12
    b52c:	bne	b4d8 <opt_loop+0xbb8>
    b530:	ldr	r0, [r7, #16]
    b534:	bl	9f80 <this_op>
    b538:	subs	r8, r0, #0
    b53c:	beq	b4d8 <opt_loop+0xbb8>
    b540:	ldr	r3, [r8]
    b544:	cmp	r3, #7
    b548:	bne	b4d8 <opt_loop+0xbb8>
    b54c:	ldr	r0, [r8, #16]
    b550:	bl	9f80 <this_op>
    b554:	cmp	r0, #0
    b558:	beq	b4d8 <opt_loop+0xbb8>
    b55c:	ldr	r3, [r0]
    b560:	and	r3, r3, #231	; 0xe7
    b564:	cmp	r3, #64	; 0x40
    b568:	bne	b4d8 <opt_loop+0xbb8>
    b56c:	ldr	r3, [r0, #12]
    b570:	ldr	ip, [r1, #12]
    b574:	add	r3, r3, ip
    b578:	str	r3, [r0, #12]
    b57c:	mvn	r3, #0
    b580:	str	r3, [r1]
    b584:	str	r3, [r7]
    b588:	str	r3, [r8]
    b58c:	ldr	r3, [sp, #28]
    b590:	str	r5, [r3, #868]	; 0x364
    b594:	b	b4d8 <opt_loop+0xbb8>
    b598:	ldr	r3, [r4, #8]
    b59c:	cmp	r3, #21
    b5a0:	bne	b620 <opt_loop+0xd00>
    b5a4:	ldr	r3, [r4, #128]	; 0x80
    b5a8:	ands	r3, r3, #65536	; 0x10000
    b5ac:	bne	b620 <opt_loop+0xd00>
    b5b0:	ldr	r2, [r7]
    b5b4:	cmp	r2, #28
    b5b8:	bne	b6b8 <opt_loop+0xd98>
    b5bc:	ldr	r1, [r6]
    b5c0:	ldr	r2, [r4, #20]
    b5c4:	ldr	r0, [r4, #204]	; 0xcc
    b5c8:	add	ip, r1, r0, lsl #3
    b5cc:	ldr	r1, [r1, r0, lsl #3]
    b5d0:	cmp	r1, #0
    b5d4:	beq	b5fc <opt_loop+0xcdc>
    b5d8:	ldr	r1, [ip, #4]
    b5dc:	add	r2, r1, r2
    b5e0:	str	r2, [r4, #20]
    b5e4:	mvn	r2, #0
    b5e8:	str	r2, [r7]
    b5ec:	ldr	r2, [pc, #820]	; b928 <opt_loop+0x1008>
    b5f0:	add	r2, pc, r2
    b5f4:	str	r3, [r2, #868]	; 0x364
    b5f8:	b	b620 <opt_loop+0xd00>
    b5fc:	cmp	r2, #0
    b600:	bne	b620 <opt_loop+0xd00>
    b604:	mvn	r3, #0
    b608:	str	r3, [r7]
    b60c:	mov	r3, #29
    b610:	str	r3, [r4, #8]
    b614:	ldr	r3, [pc, #784]	; b92c <opt_loop+0x100c>
    b618:	add	r3, pc, r3
    b61c:	str	r2, [r3, #868]	; 0x364
    b620:	ldr	r3, [r4, #8]
    b624:	cmp	r3, #69	; 0x45
    b628:	bne	b64c <opt_loop+0xd2c>
    b62c:	ldr	r2, [r4, #20]
    b630:	cmp	r2, #0
    b634:	ldreq	r2, [r4, #84]	; 0x54
    b638:	streq	r2, [r4, #60]	; 0x3c
    b63c:	beq	b64c <opt_loop+0xd2c>
    b640:	cmn	r2, #1
    b644:	ldreq	r2, [r4, #60]	; 0x3c
    b648:	streq	r2, [r4, #84]	; 0x54
    b64c:	ldr	r2, [r6]
    b650:	ldr	r1, [r4, #204]	; 0xcc
    b654:	add	r0, r2, r1, lsl #3
    b658:	ldr	r1, [r2, r1, lsl #3]
    b65c:	cmp	r1, #0
    b660:	beq	b678 <opt_loop+0xd58>
    b664:	tst	r3, #8
    b668:	ldrne	r1, [r0, #4]
    b66c:	bicne	r3, r3, #8
    b670:	strne	r3, [r4, #8]
    b674:	strne	r1, [r4, #20]
    b678:	ldr	r3, [r4, #200]	; 0xc8
    b67c:	add	r1, r2, r3, lsl #3
    b680:	ldr	r3, [r2, r3, lsl #3]
    b684:	cmp	r3, #0
    b688:	beq	b780 <opt_loop+0xe60>
    b68c:	ldr	r2, [r4, #8]
    b690:	tst	r2, #8
    b694:	bne	b780 <opt_loop+0xe60>
    b698:	and	r2, r2, #240	; 0xf0
    b69c:	ldr	r3, [r1, #4]
    b6a0:	cmp	r2, #32
    b6a4:	beq	b804 <opt_loop+0xee4>
    b6a8:	bgt	b730 <opt_loop+0xe10>
    b6ac:	cmp	r2, #16
    b6b0:	beq	b74c <opt_loop+0xe2c>
    b6b4:	bl	ee8 <abort@plt>
    b6b8:	cmp	r2, #20
    b6bc:	bne	b6e4 <opt_loop+0xdc4>
    b6c0:	mvn	r2, #0
    b6c4:	ldr	r1, [r7, #12]
    b6c8:	str	r2, [r7]
    b6cc:	ldr	r2, [r4, #20]
    b6d0:	add	r2, r2, r1
    b6d4:	str	r2, [r4, #20]
    b6d8:	ldr	r2, [pc, #592]	; b930 <opt_loop+0x1010>
    b6dc:	add	r2, pc, r2
    b6e0:	b	b5f4 <opt_loop+0xcd4>
    b6e4:	cmp	r2, #84	; 0x54
    b6e8:	bne	b620 <opt_loop+0xd00>
    b6ec:	ldr	r3, [r4, #20]
    b6f0:	cmp	r3, #0
    b6f4:	bne	b620 <opt_loop+0xd00>
    b6f8:	ldr	r2, [r7, #12]
    b6fc:	str	r2, [r4, #20]
    b700:	mov	r2, #69	; 0x45
    b704:	str	r2, [r4, #8]
    b708:	mvn	r2, #0
    b70c:	str	r2, [r7]
    b710:	ldr	r2, [pc, #540]	; b934 <opt_loop+0x1014>
    b714:	add	r2, pc, r2
    b718:	str	r3, [r2, #868]	; 0x364
    b71c:	ldr	r3, [r4, #60]	; 0x3c
    b720:	ldr	r2, [r4, #84]	; 0x54
    b724:	str	r2, [r4, #60]	; 0x3c
    b728:	str	r3, [r4, #84]	; 0x54
    b72c:	b	b620 <opt_loop+0xd00>
    b730:	cmp	r2, #48	; 0x30
    b734:	beq	b818 <opt_loop+0xef8>
    b738:	cmp	r2, #64	; 0x40
    b73c:	bne	b6b4 <opt_loop+0xd94>
    b740:	ldr	r2, [r4, #20]
    b744:	and	r3, r3, r2
    b748:	b	b75c <opt_loop+0xe3c>
    b74c:	ldr	r2, [r4, #20]
    b750:	sub	r3, r2, r3
    b754:	clz	r3, r3
    b758:	lsr	r3, r3, #5
    b75c:	ldr	r1, [r4, #60]	; 0x3c
    b760:	ldr	r2, [r4, #84]	; 0x54
    b764:	cmp	r2, r1
    b768:	ldrne	r0, [pc, #456]	; b938 <opt_loop+0x1018>
    b76c:	addne	r0, pc, r0
    b770:	strne	r5, [r0, #868]	; 0x364
    b774:	cmp	r3, #0
    b778:	strne	r1, [r4, #84]	; 0x54
    b77c:	streq	r2, [r4, #60]	; 0x3c
    b780:	add	r7, sp, #48	; 0x30
    b784:	mov	r2, #72	; 0x48
    b788:	mov	r1, #0
    b78c:	mov	r0, r7
    b790:	bl	e58 <memset@plt>
    b794:	ldr	r8, [r4, #4]
    b798:	cmp	r8, #0
    b79c:	mov	r1, r7
    b7a0:	bne	b82c <opt_loop+0xf0c>
    b7a4:	add	r0, r4, #8
    b7a8:	bl	a240 <deadstmt>
    b7ac:	ldr	r3, [pc, #392]	; b93c <opt_loop+0x101c>
    b7b0:	mvn	ip, #0
    b7b4:	add	r3, pc, r3
    b7b8:	ldr	r1, [r3, #868]	; 0x364
    b7bc:	mov	r3, r8
    b7c0:	ldr	r0, [r7], #4
    b7c4:	cmp	r0, #0
    b7c8:	beq	b7e4 <opt_loop+0xec4>
    b7cc:	ldr	r2, [r4, #128]	; 0x80
    b7d0:	mov	lr, #1
    b7d4:	ands	r2, r2, lr, lsl r3
    b7d8:	moveq	r8, lr
    b7dc:	moveq	r1, r2
    b7e0:	streq	ip, [r0]
    b7e4:	add	r3, r3, #1
    b7e8:	cmp	r3, #18
    b7ec:	bne	b7c0 <opt_loop+0xea0>
    b7f0:	cmp	r8, #0
    b7f4:	ldrne	r3, [pc, #324]	; b940 <opt_loop+0x1020>
    b7f8:	addne	r3, pc, r3
    b7fc:	strne	r1, [r3, #868]	; 0x364
    b800:	b	af1c <opt_loop+0x5fc>
    b804:	ldr	r2, [r4, #20]
    b808:	cmp	r2, r3
    b80c:	movcs	r3, #0
    b810:	movcc	r3, #1
    b814:	b	b75c <opt_loop+0xe3c>
    b818:	ldr	r2, [r4, #20]
    b81c:	cmp	r2, r3
    b820:	movhi	r3, #0
    b824:	movls	r3, #1
    b828:	b	b75c <opt_loop+0xe3c>
    b82c:	mov	r0, r8
    b830:	bl	a240 <deadstmt>
    b834:	ldr	r8, [r8, #16]
    b838:	b	b798 <opt_loop+0xe78>
    b83c:	ldr	r3, [sp, #4]
    b840:	ldr	r3, [r3]
    b844:	ldr	r4, [r3, r5, lsl #2]
    b848:	cmp	r4, #0
    b84c:	bne	b8a4 <opt_loop+0xf84>
    b850:	add	r5, r5, #1
    b854:	ldr	r3, [sp, #24]
    b858:	cmp	r3, r5
    b85c:	bge	b83c <opt_loop+0xf1c>
    b860:	ldr	r0, [sp, #16]
    b864:	mov	r4, #0
    b868:	bl	a6fc <find_inedges.isra.2>
    b86c:	ldr	r3, [pc, #208]	; b944 <opt_loop+0x1024>
    b870:	add	r3, pc, r3
    b874:	ldr	lr, [r3, #868]	; 0x364
    b878:	mov	r3, #1
    b87c:	str	r3, [sp, #16]
    b880:	ldr	r2, [sp, #16]
    b884:	ldr	r3, [sp, #24]
    b888:	cmp	r3, r2
    b88c:	bge	b8bc <opt_loop+0xf9c>
    b890:	cmp	r4, #0
    b894:	ldrne	r3, [pc, #172]	; b948 <opt_loop+0x1028>
    b898:	addne	r3, pc, r3
    b89c:	strne	lr, [r3, #868]	; 0x364
    b8a0:	b	ab18 <opt_loop+0x1f8>
    b8a4:	add	r0, r4, #48	; 0x30
    b8a8:	bl	a7ac <opt_j>
    b8ac:	add	r0, r4, #72	; 0x48
    b8b0:	bl	a7ac <opt_j>
    b8b4:	ldr	r4, [r4, #100]	; 0x64
    b8b8:	b	b848 <opt_loop+0xf28>
    b8bc:	ldr	r3, [sp, #4]
    b8c0:	ldr	r2, [sp, #16]
    b8c4:	ldr	r3, [r3]
    b8c8:	ldr	r3, [r3, r2, lsl #2]
    b8cc:	cmp	r3, #0
    b8d0:	bne	b94c <opt_loop+0x102c>
    b8d4:	ldr	r3, [sp, #16]
    b8d8:	add	r3, r3, #1
    b8dc:	b	b87c <opt_loop+0xf5c>
    b8e0:	.word	0x000226c4
    b8e4:	.word	0x00022de8
    b8e8:	.word	0x000000c8
    b8ec:	.word	0x00022d48
    b8f0:	.word	0x00022cfc
    b8f4:	.word	0x00022c94
    b8f8:	.word	0x000000f0
    b8fc:	.word	0x000000f8
    b900:	.word	0x00000104
    b904:	.word	0x00022c0c
    b908:	.word	0x000228bc
    b90c:	.word	0x000228b0
    b910:	.word	0x000228a4
    b914:	.word	0x00022814
    b918:	.word	0x0002236c
    b91c:	.word	0x000222d8
    b920:	.word	0x000222d4
    b924:	.word	0x000222d0
    b928:	.word	0x00022138
    b92c:	.word	0x00022110
    b930:	.word	0x0002204c
    b934:	.word	0x00022014
    b938:	.word	0x00021fbc
    b93c:	.word	0x00021f74
    b940:	.word	0x00021f30
    b944:	.word	0x00021eb8
    b948:	.word	0x00021e90
    b94c:	ldr	r2, [r3, #112]	; 0x70
    b950:	cmp	r2, #0
    b954:	ldrne	r1, [r2, #16]
    b958:	ldrne	r6, [r1, #200]	; 0xc8
    b95c:	bne	b98c <opt_loop+0x106c>
    b960:	ldr	r2, [r3, #112]	; 0x70
    b964:	cmp	r2, #0
    b968:	ldrne	r1, [r2, #16]
    b96c:	ldrne	r6, [r1, #200]	; 0xc8
    b970:	bne	baac <opt_loop+0x118c>
    b974:	ldr	r3, [r3, #100]	; 0x64
    b978:	b	b8cc <opt_loop+0xfac>
    b97c:	ldr	r0, [r2, #16]
    b980:	ldr	r0, [r0, #200]	; 0xc8
    b984:	cmp	r6, r0
    b988:	bne	b960 <opt_loop+0x1040>
    b98c:	ldr	r2, [r2, #20]
    b990:	cmp	r2, #0
    b994:	bne	b97c <opt_loop+0x105c>
    b998:	ldr	r2, [r1, #60]	; 0x3c
    b99c:	mov	r7, #1
    b9a0:	cmp	r3, r2
    b9a4:	addeq	r1, r1, #60	; 0x3c
    b9a8:	addne	r1, r1, #84	; 0x54
    b9ac:	ldr	r2, [r1]
    b9b0:	cmp	r2, #0
    b9b4:	beq	b960 <opt_loop+0x1040>
    b9b8:	ldr	r0, [r2, #60]	; 0x3c
    b9bc:	ldr	r9, [r3, #60]	; 0x3c
    b9c0:	cmp	r0, r9
    b9c4:	bne	b960 <opt_loop+0x1040>
    b9c8:	ldr	r0, [r3]
    b9cc:	mov	r8, #1
    b9d0:	lsr	r5, r0, #5
    b9d4:	and	r0, r0, #31
    b9d8:	lsl	r0, r8, r0
    b9dc:	ldr	r8, [r2, #104]	; 0x68
    b9e0:	lsl	sl, r5, #2
    b9e4:	ldr	r5, [r8, r5, lsl #2]
    b9e8:	tst	r0, r5
    b9ec:	beq	b960 <opt_loop+0x1040>
    b9f0:	ldr	r8, [r2, #200]	; 0xc8
    b9f4:	add	r5, r2, #84	; 0x54
    b9f8:	cmp	r6, r8
    b9fc:	beq	ba44 <opt_loop+0x1124>
    ba00:	ldr	r2, [r2, #84]	; 0x54
    ba04:	cmp	r2, #0
    ba08:	beq	b960 <opt_loop+0x1040>
    ba0c:	ldr	r8, [r2, #60]	; 0x3c
    ba10:	cmp	r9, r8
    ba14:	bne	b960 <opt_loop+0x1040>
    ba18:	ldr	r8, [r2, #104]	; 0x68
    ba1c:	ldr	r8, [r8, sl]
    ba20:	tst	r0, r8
    ba24:	beq	b960 <opt_loop+0x1040>
    ba28:	ldr	r8, [r2, #84]	; 0x54
    ba2c:	ldr	ip, [r2, #200]	; 0xc8
    ba30:	cmp	r6, ip
    ba34:	beq	ba50 <opt_loop+0x1130>
    ba38:	add	r5, r2, #84	; 0x54
    ba3c:	mov	r2, r8
    ba40:	b	ba04 <opt_loop+0x10e4>
    ba44:	mov	r1, r5
    ba48:	mov	r7, #0
    ba4c:	b	b9ac <opt_loop+0x108c>
    ba50:	str	r8, [r5]
    ba54:	cmp	r7, #0
    ba58:	ldr	r0, [r1]
    ba5c:	str	r0, [r2, #84]	; 0x54
    ba60:	ldrne	r1, [r3, #112]	; 0x70
    ba64:	bne	ba88 <opt_loop+0x1168>
    ba68:	str	r2, [r1]
    ba6c:	b	ba90 <opt_loop+0x1170>
    ba70:	ldr	r0, [r1, #16]
    ba74:	ldr	lr, [r0, #60]	; 0x3c
    ba78:	cmp	r3, lr
    ba7c:	streq	r2, [r0, #60]	; 0x3c
    ba80:	strne	r2, [r0, #84]	; 0x54
    ba84:	ldr	r1, [r1, #20]
    ba88:	cmp	r1, #0
    ba8c:	bne	ba70 <opt_loop+0x1150>
    ba90:	mov	lr, #0
    ba94:	mov	r4, #1
    ba98:	b	b960 <opt_loop+0x1040>
    ba9c:	ldr	r0, [r2, #16]
    baa0:	ldr	r0, [r0, #200]	; 0xc8
    baa4:	cmp	r6, r0
    baa8:	bne	b974 <opt_loop+0x1054>
    baac:	ldr	r2, [r2, #20]
    bab0:	cmp	r2, #0
    bab4:	bne	ba9c <opt_loop+0x117c>
    bab8:	ldr	r2, [r1, #60]	; 0x3c
    babc:	mov	r7, #1
    bac0:	cmp	r3, r2
    bac4:	addeq	r1, r1, #60	; 0x3c
    bac8:	addne	r1, r1, #84	; 0x54
    bacc:	ldr	r2, [r1]
    bad0:	cmp	r2, #0
    bad4:	beq	b974 <opt_loop+0x1054>
    bad8:	ldr	r0, [r2, #84]	; 0x54
    badc:	ldr	r9, [r3, #84]	; 0x54
    bae0:	cmp	r0, r9
    bae4:	bne	b974 <opt_loop+0x1054>
    bae8:	ldr	r0, [r3]
    baec:	mov	ip, #1
    baf0:	ldr	r8, [r2, #104]	; 0x68
    baf4:	lsr	r5, r0, #5
    baf8:	and	r0, r0, #31
    bafc:	lsl	r0, ip, r0
    bb00:	lsl	sl, r5, #2
    bb04:	ldr	r5, [r8, r5, lsl #2]
    bb08:	tst	r0, r5
    bb0c:	beq	b974 <opt_loop+0x1054>
    bb10:	ldr	r8, [r2, #200]	; 0xc8
    bb14:	add	r5, r2, #60	; 0x3c
    bb18:	cmp	r6, r8
    bb1c:	beq	bb64 <opt_loop+0x1244>
    bb20:	ldr	r2, [r2, #60]	; 0x3c
    bb24:	cmp	r2, #0
    bb28:	beq	b974 <opt_loop+0x1054>
    bb2c:	ldr	r8, [r2, #84]	; 0x54
    bb30:	cmp	r9, r8
    bb34:	bne	b974 <opt_loop+0x1054>
    bb38:	ldr	r8, [r2, #104]	; 0x68
    bb3c:	ldr	r8, [r8, sl]
    bb40:	tst	r0, r8
    bb44:	beq	b974 <opt_loop+0x1054>
    bb48:	ldr	r8, [r2, #60]	; 0x3c
    bb4c:	ldr	ip, [r2, #200]	; 0xc8
    bb50:	cmp	r6, ip
    bb54:	beq	bb70 <opt_loop+0x1250>
    bb58:	add	r5, r2, #60	; 0x3c
    bb5c:	mov	r2, r8
    bb60:	b	bb24 <opt_loop+0x1204>
    bb64:	mov	r1, r5
    bb68:	mov	r7, #0
    bb6c:	b	bacc <opt_loop+0x11ac>
    bb70:	str	r8, [r5]
    bb74:	cmp	r7, #0
    bb78:	ldr	r0, [r1]
    bb7c:	str	r0, [r2, #60]	; 0x3c
    bb80:	ldrne	r1, [r3, #112]	; 0x70
    bb84:	bne	bba8 <opt_loop+0x1288>
    bb88:	str	r2, [r1]
    bb8c:	b	bbb0 <opt_loop+0x1290>
    bb90:	ldr	r0, [r1, #16]
    bb94:	ldr	lr, [r0, #60]	; 0x3c
    bb98:	cmp	r3, lr
    bb9c:	streq	r2, [r0, #60]	; 0x3c
    bba0:	strne	r2, [r0, #84]	; 0x54
    bba4:	ldr	r1, [r1, #20]
    bba8:	cmp	r1, #0
    bbac:	bne	bb90 <opt_loop+0x1270>
    bbb0:	mov	lr, #0
    bbb4:	mov	r4, #1
    bbb8:	b	b974 <opt_loop+0x1054>

0000bbbc <sf_bpf_optimize>:
    bbbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bbc0:	mov	r9, r0
    bbc4:	sub	sp, sp, #36	; 0x24
    bbc8:	ldr	r6, [pc, #1296]	; c0e0 <sf_bpf_optimize+0x524>
    bbcc:	ldr	sl, [r0]
    bbd0:	ldr	r7, [pc, #1292]	; c0e4 <sf_bpf_optimize+0x528>
    bbd4:	add	r6, pc, r6
    bbd8:	ldr	r4, [r6]
    bbdc:	mov	r0, sl
    bbe0:	add	r7, pc, r7
    bbe4:	add	r3, r4, #1
    bbe8:	str	r3, [r6]
    bbec:	bl	a064 <count_blocks>
    bbf0:	mov	r1, #4
    bbf4:	mov	fp, r0
    bbf8:	bl	d08 <calloc@plt>
    bbfc:	ldr	r3, [pc, #1252]	; c0e8 <sf_bpf_optimize+0x52c>
    bc00:	cmp	r0, #0
    bc04:	ldr	r3, [r7, r3]
    bc08:	str	r0, [r3]
    bc0c:	str	r3, [sp, #4]
    bc10:	bne	bc20 <sf_bpf_optimize+0x64>
    bc14:	ldr	r0, [pc, #1232]	; c0ec <sf_bpf_optimize+0x530>
    bc18:	add	r0, pc, r0
    bc1c:	bl	1e54 <sf_bpf_error>
    bc20:	mov	r3, #0
    bc24:	add	r4, r4, #2
    bc28:	mov	r0, sl
    bc2c:	str	r4, [r6]
    bc30:	str	r3, [r6, #864]	; 0x360
    bc34:	bl	a0b8 <number_blks_r>
    bc38:	ldr	r4, [r6, #864]	; 0x360
    bc3c:	mov	r1, #4
    bc40:	lsl	r8, r4, #1
    bc44:	mov	r0, r8
    bc48:	str	r8, [r6, #896]	; 0x380
    bc4c:	bl	d08 <calloc@plt>
    bc50:	ldr	r2, [pc, #1176]	; c0f0 <sf_bpf_optimize+0x534>
    bc54:	cmp	r0, #0
    bc58:	ldr	r3, [r7, r2]
    bc5c:	str	r0, [r3]
    bc60:	str	r3, [sp, #8]
    bc64:	beq	bc14 <sf_bpf_optimize+0x58>
    bc68:	mov	r1, #4
    bc6c:	mov	r0, r4
    bc70:	str	r4, [sp, #24]
    bc74:	bl	d08 <calloc@plt>
    bc78:	ldr	r1, [pc, #1140]	; c0f4 <sf_bpf_optimize+0x538>
    bc7c:	cmp	r0, #0
    bc80:	ldr	r3, [r7, r1]
    bc84:	str	r0, [r3]
    bc88:	str	r3, [sp, #12]
    bc8c:	beq	bc14 <sf_bpf_optimize+0x58>
    bc90:	lsr	r1, r8, #5
    bc94:	lsr	r5, r4, #5
    bc98:	add	r1, r1, #1
    bc9c:	add	r5, r5, #1
    bca0:	mul	r3, r1, r8
    bca4:	str	r1, [r6, #4]
    bca8:	mul	r0, r5, r4
    bcac:	str	r1, [sp, #20]
    bcb0:	str	r5, [r6, #884]	; 0x374
    bcb4:	add	r0, r3, r0, lsl #1
    bcb8:	lsl	r0, r0, #2
    bcbc:	bl	dec <malloc@plt>
    bcc0:	ldr	r3, [pc, #1072]	; c0f8 <sf_bpf_optimize+0x53c>
    bcc4:	cmp	r0, #0
    bcc8:	ldr	r3, [r7, r3]
    bccc:	str	r0, [r3]
    bcd0:	str	r3, [sp, #16]
    bcd4:	beq	bc14 <sf_bpf_optimize+0x58>
    bcd8:	ldr	r3, [sp, #4]
    bcdc:	lsl	r5, r5, #2
    bce0:	mov	r8, #0
    bce4:	str	r0, [r6, #880]	; 0x370
    bce8:	ldr	r1, [sp, #20]
    bcec:	ldr	r2, [sp, #24]
    bcf0:	ldr	lr, [r3]
    bcf4:	mov	r3, r0
    bcf8:	cmp	fp, r8
    bcfc:	bgt	bef4 <sf_bpf_optimize+0x338>
    bd00:	bic	r3, fp, fp, asr #31
    bd04:	ldr	ip, [pc, #1008]	; c0fc <sf_bpf_optimize+0x540>
    bd08:	mul	r3, r5, r3
    bd0c:	add	ip, pc, ip
    bd10:	add	r0, r0, r3
    bd14:	mov	r6, r0
    bd18:	str	r0, [ip, #888]	; 0x378
    bd1c:	mov	ip, #0
    bd20:	cmp	fp, ip
    bd24:	bgt	bf08 <sf_bpf_optimize+0x34c>
    bd28:	add	r0, r0, r3
    bd2c:	ldr	r3, [pc, #972]	; c100 <sf_bpf_optimize+0x544>
    bd30:	lsl	r6, r1, #2
    bd34:	lsl	r1, r1, #3
    bd38:	mov	lr, #0
    bd3c:	add	r3, pc, r3
    bd40:	str	r0, [r3, #892]	; 0x37c
    bd44:	ldr	r3, [sp, #4]
    bd48:	cmp	fp, lr
    bd4c:	ldr	r5, [r3]
    bd50:	bgt	bf1c <sf_bpf_optimize+0x360>
    bd54:	mov	r1, #0
    bd58:	mov	r6, r1
    bd5c:	cmp	fp, r6
    bd60:	bgt	bf6c <sf_bpf_optimize+0x3b0>
    bd64:	ldr	r6, [pc, #920]	; c104 <sf_bpf_optimize+0x548>
    bd68:	add	r5, r1, r1, lsl #1
    bd6c:	mov	r1, #8
    bd70:	mov	r0, r5
    bd74:	add	r6, pc, r6
    bd78:	str	r5, [r6, #900]	; 0x384
    bd7c:	bl	d08 <calloc@plt>
    bd80:	ldr	r3, [pc, #896]	; c108 <sf_bpf_optimize+0x54c>
    bd84:	mov	fp, r0
    bd88:	mov	r1, #20
    bd8c:	mov	r0, r5
    bd90:	ldr	r3, [r7, r3]
    bd94:	str	fp, [r3]
    bd98:	str	r3, [sp, #20]
    bd9c:	bl	d08 <calloc@plt>
    bda0:	ldr	r3, [pc, #868]	; c10c <sf_bpf_optimize+0x550>
    bda4:	clz	r5, r0
    bda8:	cmp	fp, #0
    bdac:	lsr	r5, r5, #5
    bdb0:	moveq	fp, #1
    bdb4:	movne	fp, r5
    bdb8:	cmp	fp, #0
    bdbc:	ldr	r3, [r7, r3]
    bdc0:	str	r0, [r3]
    bdc4:	str	r3, [sp, #24]
    bdc8:	bne	bc14 <sf_bpf_optimize+0x58>
    bdcc:	mov	r1, fp
    bdd0:	mov	r0, sl
    bdd4:	bl	a920 <opt_loop>
    bdd8:	mov	r1, #1
    bddc:	mov	r0, sl
    bde0:	bl	a920 <opt_loop>
    bde4:	str	fp, [sp, #28]
    bde8:	ldr	r3, [sp, #4]
    bdec:	ldr	r2, [r3]
    bdf0:	mov	r3, #0
    bdf4:	cmp	r3, r4
    bdf8:	blt	bf88 <sf_bpf_optimize+0x3cc>
    bdfc:	ldr	r5, [r6]
    be00:	mov	r0, sl
    be04:	add	r5, r5, #1
    be08:	str	r5, [r6]
    be0c:	bl	9ff8 <make_marks>
    be10:	ldr	r3, [sp, #4]
    be14:	sub	r0, r4, #1
    be18:	ldr	lr, [r3]
    be1c:	subs	r7, r0, #1
    be20:	bpl	bf9c <sf_bpf_optimize+0x3e0>
    be24:	mov	r1, #1
    be28:	mov	r3, #0
    be2c:	cmp	r3, r4
    be30:	blt	c09c <sf_bpf_optimize+0x4e0>
    be34:	cmp	r1, #0
    be38:	beq	bde8 <sf_bpf_optimize+0x22c>
    be3c:	ldr	r3, [r9]
    be40:	mov	r2, #0
    be44:	ldr	r4, [r3, #4]
    be48:	str	r2, [r3, #4]
    be4c:	ldr	r3, [r9]
    be50:	ldr	r2, [r3, #8]
    be54:	and	r2, r2, #7
    be58:	cmp	r2, #5
    be5c:	bne	be70 <sf_bpf_optimize+0x2b4>
    be60:	ldr	r2, [r3, #60]	; 0x3c
    be64:	ldr	r1, [r3, #84]	; 0x54
    be68:	cmp	r2, r1
    be6c:	beq	c0d8 <sf_bpf_optimize+0x51c>
    be70:	ldr	r1, [r3, #4]
    be74:	cmp	r1, #0
    be78:	beq	be84 <sf_bpf_optimize+0x2c8>
    be7c:	mov	r0, r4
    be80:	bl	2d4c <sf_append>
    be84:	ldr	r3, [r9]
    be88:	str	r4, [r3, #4]
    be8c:	ldr	r2, [r9]
    be90:	ldr	r3, [r2, #8]
    be94:	and	r3, r3, #7
    be98:	cmp	r3, #6
    be9c:	moveq	r3, #0
    bea0:	streq	r3, [r2, #4]
    bea4:	ldr	r3, [sp, #24]
    bea8:	ldr	r0, [r3]
    beac:	bl	d68 <free@plt>
    beb0:	ldr	r3, [sp, #20]
    beb4:	ldr	r0, [r3]
    beb8:	bl	d68 <free@plt>
    bebc:	ldr	r3, [sp, #8]
    bec0:	ldr	r0, [r3]
    bec4:	bl	d68 <free@plt>
    bec8:	ldr	r3, [sp, #16]
    becc:	ldr	r0, [r3]
    bed0:	bl	d68 <free@plt>
    bed4:	ldr	r3, [sp, #12]
    bed8:	ldr	r0, [r3]
    bedc:	bl	d68 <free@plt>
    bee0:	ldr	r3, [sp, #4]
    bee4:	ldr	r0, [r3]
    bee8:	add	sp, sp, #36	; 0x24
    beec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    bef0:	b	d68 <free@plt>
    bef4:	ldr	ip, [lr, r8, lsl #2]
    bef8:	add	r8, r8, #1
    befc:	str	r3, [ip, #104]	; 0x68
    bf00:	add	r3, r3, r5
    bf04:	b	bcf8 <sf_bpf_optimize+0x13c>
    bf08:	ldr	r8, [lr, ip, lsl #2]
    bf0c:	add	ip, ip, #1
    bf10:	str	r6, [r8, #108]	; 0x6c
    bf14:	add	r6, r6, r5
    bf18:	b	bd20 <sf_bpf_optimize+0x164>
    bf1c:	ldr	ip, [r5, lr, lsl #2]
    bf20:	add	r3, r6, r0
    bf24:	ldr	r5, [sp, #8]
    bf28:	str	r0, [ip, #56]	; 0x38
    bf2c:	add	r0, r1, r0
    bf30:	str	r3, [ip, #80]	; 0x50
    bf34:	mov	r3, ip
    bf38:	ldr	r5, [r5]
    bf3c:	str	lr, [r3, #48]!	; 0x30
    bf40:	str	r3, [r5, lr, lsl #2]
    bf44:	mov	r3, ip
    bf48:	add	lr, lr, #1
    bf4c:	ldr	r5, [sp, #8]
    bf50:	str	r2, [r3, #72]!	; 0x48
    bf54:	ldr	r5, [r5]
    bf58:	str	r3, [r5, r2, lsl #2]
    bf5c:	add	r2, r2, #1
    bf60:	str	ip, [ip, #64]	; 0x40
    bf64:	str	ip, [ip, #88]	; 0x58
    bf68:	b	bd44 <sf_bpf_optimize+0x188>
    bf6c:	ldr	r3, [r5, r6, lsl #2]
    bf70:	add	r6, r6, #1
    bf74:	ldr	r0, [r3, #4]
    bf78:	bl	a040 <slength>
    bf7c:	add	r0, r0, #1
    bf80:	add	r1, r1, r0
    bf84:	b	bd5c <sf_bpf_optimize+0x1a0>
    bf88:	ldr	r1, [r2, r3, lsl #2]
    bf8c:	add	r3, r3, #1
    bf90:	ldr	r0, [sp, #28]
    bf94:	str	r0, [r1, #100]	; 0x64
    bf98:	b	bdf4 <sf_bpf_optimize+0x238>
    bf9c:	ldr	r1, [lr, r7, lsl #2]
    bfa0:	ldr	r3, [r1, #24]
    bfa4:	cmp	r3, r5
    bfa8:	bne	bfb4 <sf_bpf_optimize+0x3f8>
    bfac:	cmp	r0, r4
    bfb0:	blt	bfbc <sf_bpf_optimize+0x400>
    bfb4:	mov	r0, r7
    bfb8:	b	be1c <sf_bpf_optimize+0x260>
    bfbc:	ldr	r2, [lr, r0, lsl #2]
    bfc0:	ldr	r3, [r2, #24]
    bfc4:	cmp	r3, r5
    bfc8:	bne	c014 <sf_bpf_optimize+0x458>
    bfcc:	ldr	ip, [r1, #8]
    bfd0:	ldr	r3, [r2, #8]
    bfd4:	cmp	ip, r3
    bfd8:	bne	c014 <sf_bpf_optimize+0x458>
    bfdc:	ldr	ip, [r1, #20]
    bfe0:	ldr	r3, [r2, #20]
    bfe4:	cmp	ip, r3
    bfe8:	bne	c014 <sf_bpf_optimize+0x458>
    bfec:	ldr	ip, [r1, #60]	; 0x3c
    bff0:	ldr	r3, [r2, #60]	; 0x3c
    bff4:	cmp	ip, r3
    bff8:	bne	c014 <sf_bpf_optimize+0x458>
    bffc:	ldr	ip, [r1, #84]	; 0x54
    c000:	ldr	r3, [r2, #84]	; 0x54
    c004:	cmp	ip, r3
    c008:	ldreq	r3, [r1, #4]
    c00c:	ldreq	ip, [r2, #4]
    c010:	beq	c064 <sf_bpf_optimize+0x4a8>
    c014:	add	r0, r0, #1
    c018:	b	bfac <sf_bpf_optimize+0x3f0>
    c01c:	ldr	ip, [ip, #16]
    c020:	b	c07c <sf_bpf_optimize+0x4c0>
    c024:	cmp	r3, #0
    c028:	bne	c014 <sf_bpf_optimize+0x458>
    c02c:	ldr	r3, [r2, #100]	; 0x64
    c030:	cmp	r3, #0
    c034:	moveq	r3, r2
    c038:	str	r3, [r1, #100]	; 0x64
    c03c:	b	bfb4 <sf_bpf_optimize+0x3f8>
    c040:	ldr	fp, [r3]
    c044:	cmp	r8, fp
    c048:	bne	c014 <sf_bpf_optimize+0x458>
    c04c:	ldr	fp, [r3, #12]
    c050:	ldr	r8, [ip, #12]
    c054:	cmp	fp, r8
    c058:	bne	c014 <sf_bpf_optimize+0x458>
    c05c:	ldr	r3, [r3, #16]
    c060:	ldr	ip, [ip, #16]
    c064:	cmp	r3, #0
    c068:	beq	c07c <sf_bpf_optimize+0x4c0>
    c06c:	ldr	r8, [r3]
    c070:	cmn	r8, #1
    c074:	ldreq	r3, [r3, #16]
    c078:	beq	c064 <sf_bpf_optimize+0x4a8>
    c07c:	cmp	ip, #0
    c080:	beq	c024 <sf_bpf_optimize+0x468>
    c084:	ldr	r8, [ip]
    c088:	cmn	r8, #1
    c08c:	beq	c01c <sf_bpf_optimize+0x460>
    c090:	cmp	r3, #0
    c094:	bne	c040 <sf_bpf_optimize+0x484>
    c098:	b	c014 <sf_bpf_optimize+0x458>
    c09c:	ldr	r2, [lr, r3, lsl #2]
    c0a0:	ldr	r0, [r2, #60]	; 0x3c
    c0a4:	cmp	r0, #0
    c0a8:	beq	c0d0 <sf_bpf_optimize+0x514>
    c0ac:	ldr	r0, [r0, #100]	; 0x64
    c0b0:	cmp	r0, #0
    c0b4:	movne	r1, #0
    c0b8:	strne	r0, [r2, #60]	; 0x3c
    c0bc:	ldr	r0, [r2, #84]	; 0x54
    c0c0:	ldr	r0, [r0, #100]	; 0x64
    c0c4:	cmp	r0, #0
    c0c8:	movne	r1, #0
    c0cc:	strne	r0, [r2, #84]	; 0x54
    c0d0:	add	r3, r3, #1
    c0d4:	b	be2c <sf_bpf_optimize+0x270>
    c0d8:	str	r2, [r9]
    c0dc:	b	be4c <sf_bpf_optimize+0x290>
    c0e0:	.word	0x00021b54
    c0e4:	.word	0x00021418
    c0e8:	.word	0x000000d0
    c0ec:	.word	0x000050a4
    c0f0:	.word	0x000000e8
    c0f4:	.word	0x000000c8
    c0f8:	.word	0x000000b8
    c0fc:	.word	0x00021a1c
    c100:	.word	0x000219ec
    c104:	.word	0x000219b4
    c108:	.word	0x00000104
    c10c:	.word	0x000000f8

0000c110 <sf_icode_to_fcode>:
    c110:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    c114:	mov	r8, r0
    c118:	mov	r9, r1
    c11c:	ldr	r5, [pc, #116]	; c198 <sf_icode_to_fcode+0x88>
    c120:	add	r5, pc, r5
    c124:	ldr	r7, [r5]
    c128:	mov	r0, r8
    c12c:	add	r3, r7, #1
    c130:	str	r3, [r5]
    c134:	bl	a128 <count_stmts>
    c138:	lsl	r4, r0, #3
    c13c:	str	r0, [r9]
    c140:	mov	r0, r4
    c144:	bl	dec <malloc@plt>
    c148:	subs	r6, r0, #0
    c14c:	bne	c15c <sf_icode_to_fcode+0x4c>
    c150:	ldr	r0, [pc, #68]	; c19c <sf_icode_to_fcode+0x8c>
    c154:	add	r0, pc, r0
    c158:	bl	1e54 <sf_bpf_error>
    c15c:	mov	r2, r4
    c160:	mov	r1, #0
    c164:	add	r4, r6, r4
    c168:	add	r7, r7, #2
    c16c:	bl	e58 <memset@plt>
    c170:	mov	r0, r8
    c174:	str	r7, [r5]
    c178:	str	r4, [r5, #872]	; 0x368
    c17c:	str	r6, [r5, #876]	; 0x36c
    c180:	bl	a3ac <convert_code_r>
    c184:	cmp	r0, #0
    c188:	mov	r0, r6
    c18c:	popne	{r4, r5, r6, r7, r8, r9, sl, pc}
    c190:	bl	d68 <free@plt>
    c194:	b	c124 <sf_icode_to_fcode+0x14>
    c198:	.word	0x00021608
    c19c:	.word	0x00004b68

0000c1a0 <xdtoi>:
    c1a0:	push	{r4, lr}
    c1a4:	mov	r4, r0
    c1a8:	bl	e04 <__ctype_b_loc@plt>
    c1ac:	ldr	r2, [r0]
    c1b0:	lsl	r3, r4, #1
    c1b4:	ldrh	r3, [r2, r3]
    c1b8:	tst	r3, #2048	; 0x800
    c1bc:	beq	c1c8 <xdtoi+0x28>
    c1c0:	sub	r0, r4, #48	; 0x30
    c1c4:	pop	{r4, pc}
    c1c8:	tst	r3, #512	; 0x200
    c1cc:	subne	r0, r4, #87	; 0x57
    c1d0:	subeq	r0, r4, #55	; 0x37
    c1d4:	pop	{r4, pc}

0000c1d8 <skip_space>:
    c1d8:	push	{r4, r5, r6, lr}
    c1dc:	mov	r5, r0
    c1e0:	mov	r0, r5
    c1e4:	bl	ef4 <getc@plt>
    c1e8:	mov	r4, r0
    c1ec:	bl	e04 <__ctype_b_loc@plt>
    c1f0:	ldr	r2, [r0]
    c1f4:	lsl	r3, r4, #1
    c1f8:	ldrh	r3, [r2, r3]
    c1fc:	tst	r3, #8192	; 0x2000
    c200:	beq	c20c <skip_space+0x34>
    c204:	cmp	r4, #10
    c208:	bne	c1e0 <skip_space+0x8>
    c20c:	mov	r0, r4
    c210:	pop	{r4, r5, r6, pc}

0000c214 <skip_line>:
    c214:	push	{r4, lr}
    c218:	mov	r4, r0
    c21c:	mov	r0, r4
    c220:	bl	ef4 <getc@plt>
    c224:	cmp	r0, #10
    c228:	cmnne	r0, #1
    c22c:	bne	c21c <skip_line+0x8>
    c230:	pop	{r4, pc}

0000c234 <sfbpf_strcasecmp>:
    c234:	ldr	ip, [pc, #52]	; c270 <sfbpf_strcasecmp+0x3c>
    c238:	push	{lr}		; (str lr, [sp, #-4]!)
    c23c:	sub	lr, r0, #1
    c240:	add	ip, pc, ip
    c244:	ldrb	r0, [lr, #1]!
    c248:	ldrb	r3, [r1], #1
    c24c:	ldrb	r2, [ip, r0]
    c250:	ldrb	r3, [ip, r3]
    c254:	cmp	r2, r3
    c258:	beq	c264 <sfbpf_strcasecmp+0x30>
    c25c:	sub	r0, r2, r3
    c260:	pop	{pc}		; (ldr pc, [sp], #4)
    c264:	cmp	r0, #0
    c268:	bne	c244 <sfbpf_strcasecmp+0x10>
    c26c:	pop	{pc}		; (ldr pc, [sp], #4)
    c270:	.word	0x00004a83

0000c274 <pcap_next_etherent>:
    c274:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    c278:	mov	r5, r0
    c27c:	mov	r2, #128	; 0x80
    c280:	mov	r1, #0
    c284:	ldr	r0, [pc, #364]	; c3f8 <pcap_next_etherent+0x184>
    c288:	add	r0, pc, r0
    c28c:	bl	e58 <memset@plt>
    c290:	mov	r0, r5
    c294:	bl	c1d8 <skip_space>
    c298:	cmp	r0, #10
    c29c:	mov	r4, r0
    c2a0:	beq	c290 <pcap_next_etherent+0x1c>
    c2a4:	bl	e04 <__ctype_b_loc@plt>
    c2a8:	ldr	r2, [r0]
    c2ac:	lsl	r3, r4, #1
    c2b0:	mov	r7, r0
    c2b4:	ldrh	r3, [r2, r3]
    c2b8:	tst	r3, #4096	; 0x1000
    c2bc:	bne	c2c8 <pcap_next_etherent+0x54>
    c2c0:	mov	r0, r5
    c2c4:	b	c364 <pcap_next_etherent+0xf0>
    c2c8:	ldr	r9, [pc, #300]	; c3fc <pcap_next_etherent+0x188>
    c2cc:	mov	r8, #0
    c2d0:	add	r9, pc, r9
    c2d4:	mov	r0, r4
    c2d8:	bl	c1a0 <xdtoi>
    c2dc:	mov	r6, r0
    c2e0:	mov	r0, r5
    c2e4:	bl	ef4 <getc@plt>
    c2e8:	ldr	r2, [r7]
    c2ec:	lsl	r3, r0, #1
    c2f0:	mov	r4, r0
    c2f4:	ldrh	r3, [r2, r3]
    c2f8:	tst	r3, #4096	; 0x1000
    c2fc:	beq	c318 <pcap_next_etherent+0xa4>
    c300:	lsl	r6, r6, #4
    c304:	bl	c1a0 <xdtoi>
    c308:	orr	r6, r6, r0
    c30c:	mov	r0, r5
    c310:	bl	ef4 <getc@plt>
    c314:	mov	r4, r0
    c318:	cmp	r4, #58	; 0x3a
    c31c:	strb	r6, [r9], #1
    c320:	bne	c33c <pcap_next_etherent+0xc8>
    c324:	mov	r0, r5
    c328:	add	r8, r8, #1
    c32c:	bl	ef4 <getc@plt>
    c330:	cmp	r8, #6
    c334:	mov	r4, r0
    c338:	bne	c2d4 <pcap_next_etherent+0x60>
    c33c:	cmn	r4, #1
    c340:	bne	c34c <pcap_next_etherent+0xd8>
    c344:	mov	r0, #0
    c348:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c34c:	ldr	r3, [r7]
    c350:	lsl	r4, r4, #1
    c354:	mov	r0, r5
    c358:	ldrh	r3, [r3, r4]
    c35c:	tst	r3, #8192	; 0x2000
    c360:	bne	c374 <pcap_next_etherent+0x100>
    c364:	bl	c214 <skip_line>
    c368:	cmn	r0, #1
    c36c:	bne	c290 <pcap_next_etherent+0x1c>
    c370:	b	c344 <pcap_next_etherent+0xd0>
    c374:	bl	c1d8 <skip_space>
    c378:	cmp	r0, #10
    c37c:	beq	c290 <pcap_next_etherent+0x1c>
    c380:	cmp	r0, #35	; 0x23
    c384:	beq	c2c0 <pcap_next_etherent+0x4c>
    c388:	ldr	r4, [pc, #112]	; c400 <pcap_next_etherent+0x18c>
    c38c:	mov	r6, #121	; 0x79
    c390:	add	r4, pc, r4
    c394:	add	r4, r4, #6
    c398:	strb	r0, [r4], #1
    c39c:	mov	r0, r5
    c3a0:	bl	ef4 <getc@plt>
    c3a4:	ldr	r2, [r7]
    c3a8:	lsl	r3, r0, #1
    c3ac:	ldrh	r3, [r2, r3]
    c3b0:	tst	r3, #8192	; 0x2000
    c3b4:	bne	c3c8 <pcap_next_etherent+0x154>
    c3b8:	cmn	r0, #1
    c3bc:	beq	c3c8 <pcap_next_etherent+0x154>
    c3c0:	subs	r6, r6, #1
    c3c4:	bne	c398 <pcap_next_etherent+0x124>
    c3c8:	mov	r3, #0
    c3cc:	cmp	r0, #10
    c3d0:	strb	r3, [r4]
    c3d4:	beq	c3ec <pcap_next_etherent+0x178>
    c3d8:	mov	r0, r5
    c3dc:	bl	c214 <skip_line>
    c3e0:	ldr	r0, [pc, #28]	; c404 <pcap_next_etherent+0x190>
    c3e4:	add	r0, pc, r0
    c3e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c3ec:	ldr	r0, [pc, #20]	; c408 <pcap_next_etherent+0x194>
    c3f0:	add	r0, pc, r0
    c3f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    c3f8:	.word	0x00021828
    c3fc:	.word	0x000217e0
    c400:	.word	0x00021720
    c404:	.word	0x000216cc
    c408:	.word	0x000216c0

0000c40c <str2tok>:
    c40c:	push	{r4, r5, r6, lr}
    c410:	mov	r6, r0
    c414:	mov	r4, r1
    c418:	mov	r5, r4
    c41c:	ldr	r0, [r4, #4]
    c420:	cmp	r0, #0
    c424:	bne	c430 <str2tok+0x24>
    c428:	mvn	r0, #0
    c42c:	pop	{r4, r5, r6, pc}
    c430:	mov	r1, r6
    c434:	add	r4, r4, #8
    c438:	bl	c234 <sfbpf_strcasecmp>
    c43c:	cmp	r0, #0
    c440:	bne	c418 <str2tok+0xc>
    c444:	ldr	r0, [r5]
    c448:	pop	{r4, r5, r6, pc}

0000c44c <sfbpf_parse>:
    c44c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c450:	sub	sp, sp, #3648	; 0xe40
    c454:	mov	r5, #0
    c458:	sub	sp, sp, #4
    c45c:	add	r9, sp, #48	; 0x30
    c460:	add	r4, sp, #448	; 0x1c0
    c464:	ldr	fp, [pc, #4016]	; d41c <sfbpf_parse+0xfd0>
    c468:	mov	sl, r9
    c46c:	ldr	r3, [pc, #4012]	; d420 <sfbpf_parse+0xfd4>
    c470:	add	fp, pc, fp
    c474:	ldr	r3, [fp, r3]
    c478:	str	r5, [r3]
    c47c:	str	r3, [sp, #12]
    c480:	ldr	r3, [pc, #3996]	; d424 <sfbpf_parse+0xfd8>
    c484:	ldr	r3, [fp, r3]
    c488:	str	r3, [sp]
    c48c:	mvn	r3, #1
    c490:	ldr	r2, [sp]
    c494:	str	r4, [sp, #24]
    c498:	str	r3, [r2]
    c49c:	mov	r3, #200	; 0xc8
    c4a0:	str	r3, [sp, #4]
    c4a4:	ldr	r3, [pc, #3964]	; d428 <sfbpf_parse+0xfdc>
    c4a8:	add	r3, pc, r3
    c4ac:	sub	r3, r3, #3904	; 0xf40
    c4b0:	sub	r3, r3, #2
    c4b4:	str	r3, [sp, #16]
    c4b8:	ldr	r3, [sp, #4]
    c4bc:	strh	r5, [r9]
    c4c0:	sub	r3, r3, #-2147483647	; 0x80000001
    c4c4:	lsl	r3, r3, #1
    c4c8:	add	r2, sl, r3
    c4cc:	cmp	r9, r2
    c4d0:	bcc	c590 <sfbpf_parse+0x144>
    c4d4:	ldr	r1, [sp, #4]
    c4d8:	sub	r4, r9, sl
    c4dc:	movw	r2, #9999	; 0x270f
    c4e0:	asr	r4, r4, #1
    c4e4:	add	r4, r4, #1
    c4e8:	cmp	r1, r2
    c4ec:	bhi	d8ec <sfbpf_parse+0x14a0>
    c4f0:	add	r3, r3, #2
    c4f4:	movw	r2, #10000	; 0x2710
    c4f8:	cmp	r3, r2
    c4fc:	mov	r0, #18
    c500:	movcs	r3, r2
    c504:	mul	r0, r0, r3
    c508:	str	r3, [sp, #4]
    c50c:	add	r0, r0, #15
    c510:	bl	dec <malloc@plt>
    c514:	subs	r8, r0, #0
    c518:	beq	d8ec <sfbpf_parse+0x14a0>
    c51c:	lsl	r9, r4, #1
    c520:	mov	r1, sl
    c524:	lsl	r4, r4, #4
    c528:	mov	r2, r9
    c52c:	bl	d8c <memcpy@plt>
    c530:	ldr	r3, [sp, #4]
    c534:	mov	r2, r4
    c538:	ldr	r1, [sp, #24]
    c53c:	lsl	r7, r3, #1
    c540:	add	r6, r7, #15
    c544:	bic	r6, r6, #15
    c548:	add	r6, r8, r6
    c54c:	mov	r0, r6
    c550:	bl	d8c <memcpy@plt>
    c554:	add	r3, sp, #48	; 0x30
    c558:	cmp	sl, r3
    c55c:	beq	c568 <sfbpf_parse+0x11c>
    c560:	mov	r0, sl
    c564:	bl	d68 <free@plt>
    c568:	sub	r9, r9, #2
    c56c:	sub	r7, r7, #2
    c570:	add	r9, r8, r9
    c574:	add	r7, r8, r7
    c578:	sub	r4, r4, #16
    c57c:	cmp	r9, r7
    c580:	add	r4, r6, r4
    c584:	bcs	d93c <sfbpf_parse+0x14f0>
    c588:	mov	sl, r8
    c58c:	str	r6, [sp, #24]
    c590:	cmp	r5, #3
    c594:	beq	d914 <sfbpf_parse+0x14c8>
    c598:	ldr	r2, [pc, #3724]	; d42c <sfbpf_parse+0xfe0>
    c59c:	lsl	r3, r5, #1
    c5a0:	add	r2, pc, r2
    c5a4:	ldrsh	r6, [r2, r3]
    c5a8:	cmn	r6, #198	; 0xc6
    c5ac:	beq	c67c <sfbpf_parse+0x230>
    c5b0:	ldr	r3, [sp]
    c5b4:	ldr	r3, [r3]
    c5b8:	cmn	r3, #2
    c5bc:	bne	c5cc <sfbpf_parse+0x180>
    c5c0:	bl	de7c <sfbpf_lex>
    c5c4:	ldr	r3, [sp]
    c5c8:	str	r0, [r3]
    c5cc:	ldr	r3, [sp]
    c5d0:	ldr	r2, [r3]
    c5d4:	cmp	r2, #0
    c5d8:	ldrle	r2, [sp]
    c5dc:	movle	r3, #0
    c5e0:	strle	r3, [r2]
    c5e4:	ble	c608 <sfbpf_parse+0x1bc>
    c5e8:	movw	r3, #365	; 0x16d
    c5ec:	cmp	r2, r3
    c5f0:	movgt	r3, #2
    c5f4:	bgt	c608 <sfbpf_parse+0x1bc>
    c5f8:	ldr	r3, [pc, #3632]	; d430 <sfbpf_parse+0xfe4>
    c5fc:	add	r3, pc, r3
    c600:	add	r3, r3, r2
    c604:	ldrb	r3, [r3, #548]	; 0x224
    c608:	add	r6, r3, r6
    c60c:	movw	r2, #669	; 0x29d
    c610:	cmp	r6, r2
    c614:	bhi	c67c <sfbpf_parse+0x230>
    c618:	ldr	r2, [pc, #3604]	; d434 <sfbpf_parse+0xfe8>
    c61c:	lsl	r6, r6, #1
    c620:	add	r2, pc, r2
    c624:	add	r1, r2, #912	; 0x390
    c628:	add	r1, r1, #2
    c62c:	ldrsh	r1, [r1, r6]
    c630:	cmp	r1, r3
    c634:	bne	c67c <sfbpf_parse+0x230>
    c638:	add	r3, r2, #2240	; 0x8c0
    c63c:	add	r3, r3, #14
    c640:	ldrsh	r5, [r3, r6]
    c644:	cmp	r5, #0
    c648:	rsble	r3, r5, #0
    c64c:	strle	r3, [sp, #8]
    c650:	ble	c6d4 <sfbpf_parse+0x288>
    c654:	ldr	r2, [sp]
    c658:	mvn	r3, #1
    c65c:	add	r4, r4, #16
    c660:	str	r3, [r2]
    c664:	ldr	r3, [pc, #3532]	; d438 <sfbpf_parse+0xfec>
    c668:	ldr	r3, [fp, r3]
    c66c:	ldm	r3, {r0, r1, r2, r3}
    c670:	stm	r4, {r0, r1, r2, r3}
    c674:	add	r9, r9, #2
    c678:	b	c4b8 <sfbpf_parse+0x6c>
    c67c:	ldr	r3, [pc, #3512]	; d43c <sfbpf_parse+0xff0>
    c680:	add	r3, pc, r3
    c684:	add	r5, r3, r5
    c688:	ldrb	r3, [r5, #3594]	; 0xe0a
    c68c:	cmp	r3, #0
    c690:	str	r3, [sp, #8]
    c694:	bne	c6d4 <sfbpf_parse+0x288>
    c698:	ldr	r3, [sp, #12]
    c69c:	ldr	r2, [sp, #12]
    c6a0:	ldr	r1, [pc, #3480]	; d440 <sfbpf_parse+0xff4>
    c6a4:	ldr	r3, [r3]
    c6a8:	ldr	r0, [pc, #3476]	; d444 <sfbpf_parse+0xff8>
    c6ac:	add	r1, pc, r1
    c6b0:	add	r3, r3, #1
    c6b4:	str	r3, [r2]
    c6b8:	add	r0, pc, r0
    c6bc:	ldr	r2, [pc, #3460]	; d448 <sfbpf_parse+0xffc>
    c6c0:	add	r2, pc, r2
    c6c4:	ldr	r3, [r2]
    c6c8:	add	r3, r3, #1
    c6cc:	str	r3, [r2]
    c6d0:	bl	1e54 <sf_bpf_error>
    c6d4:	ldr	r3, [pc, #3440]	; d44c <sfbpf_parse+0x1000>
    c6d8:	add	r6, sp, #32
    c6dc:	ldr	r2, [sp, #8]
    c6e0:	add	r3, pc, r3
    c6e4:	add	r3, r3, r2
    c6e8:	ldrb	r3, [r3, #3868]	; 0xf1c
    c6ec:	str	r3, [sp, #20]
    c6f0:	rsb	r3, r3, #1
    c6f4:	add	r3, r4, r3, lsl #4
    c6f8:	ldm	r3, {r0, r1, r2, r3}
    c6fc:	mov	r5, r3
    c700:	stm	r6, {r0, r1, r2, r3}
    c704:	mov	r8, r1
    c708:	mov	r7, r2
    c70c:	ldr	r3, [sp, #8]
    c710:	sub	r3, r3, #2
    c714:	cmp	r3, #200	; 0xc8
    c718:	addls	pc, pc, r3, lsl #2
    c71c:	b	ca48 <sfbpf_parse+0x5fc>
    c720:	b	cb04 <sfbpf_parse+0x6b8>
    c724:	b	ca48 <sfbpf_parse+0x5fc>
    c728:	b	cb10 <sfbpf_parse+0x6c4>
    c72c:	b	ca48 <sfbpf_parse+0x5fc>
    c730:	b	cb24 <sfbpf_parse+0x6d8>
    c734:	b	cb4c <sfbpf_parse+0x700>
    c738:	b	cb74 <sfbpf_parse+0x728>
    c73c:	b	cb9c <sfbpf_parse+0x750>
    c740:	b	cbc4 <sfbpf_parse+0x778>
    c744:	b	cbdc <sfbpf_parse+0x790>
    c748:	b	ca48 <sfbpf_parse+0x5fc>
    c74c:	b	cdf0 <sfbpf_parse+0x9a4>
    c750:	b	cbf4 <sfbpf_parse+0x7a8>
    c754:	b	cc0c <sfbpf_parse+0x7c0>
    c758:	b	cc24 <sfbpf_parse+0x7d8>
    c75c:	b	cc44 <sfbpf_parse+0x7f8>
    c760:	b	cc64 <sfbpf_parse+0x818>
    c764:	b	ccc8 <sfbpf_parse+0x87c>
    c768:	b	cce8 <sfbpf_parse+0x89c>
    c76c:	b	cd08 <sfbpf_parse+0x8bc>
    c770:	b	cd2c <sfbpf_parse+0x8e0>
    c774:	b	cd50 <sfbpf_parse+0x904>
    c778:	b	cd70 <sfbpf_parse+0x924>
    c77c:	b	cd88 <sfbpf_parse+0x93c>
    c780:	b	ca48 <sfbpf_parse+0x5fc>
    c784:	b	cda0 <sfbpf_parse+0x954>
    c788:	b	cdc8 <sfbpf_parse+0x97c>
    c78c:	b	cdf0 <sfbpf_parse+0x9a4>
    c790:	b	ca48 <sfbpf_parse+0x5fc>
    c794:	b	ca48 <sfbpf_parse+0x5fc>
    c798:	b	ce0c <sfbpf_parse+0x9c0>
    c79c:	b	ce2c <sfbpf_parse+0x9e0>
    c7a0:	b	ce48 <sfbpf_parse+0x9fc>
    c7a4:	b	ce9c <sfbpf_parse+0xa50>
    c7a8:	b	ce64 <sfbpf_parse+0xa18>
    c7ac:	b	ce80 <sfbpf_parse+0xa34>
    c7b0:	b	ce9c <sfbpf_parse+0xa50>
    c7b4:	b	ceb8 <sfbpf_parse+0xa6c>
    c7b8:	b	ced0 <sfbpf_parse+0xa84>
    c7bc:	b	cee0 <sfbpf_parse+0xa94>
    c7c0:	b	cf00 <sfbpf_parse+0xab4>
    c7c4:	b	cf2c <sfbpf_parse+0xae0>
    c7c8:	b	cf58 <sfbpf_parse+0xb0c>
    c7cc:	b	cf70 <sfbpf_parse+0xb24>
    c7d0:	b	cf90 <sfbpf_parse+0xb44>
    c7d4:	b	cfd0 <sfbpf_parse+0xb84>
    c7d8:	b	cfb0 <sfbpf_parse+0xb64>
    c7dc:	b	cfd0 <sfbpf_parse+0xb84>
    c7e0:	b	ca48 <sfbpf_parse+0x5fc>
    c7e4:	b	cfe8 <sfbpf_parse+0xb9c>
    c7e8:	b	d018 <sfbpf_parse+0xbcc>
    c7ec:	b	d024 <sfbpf_parse+0xbd8>
    c7f0:	b	d030 <sfbpf_parse+0xbe4>
    c7f4:	b	d030 <sfbpf_parse+0xbe4>
    c7f8:	b	d03c <sfbpf_parse+0xbf0>
    c7fc:	b	d03c <sfbpf_parse+0xbf0>
    c800:	b	cff4 <sfbpf_parse+0xba8>
    c804:	b	d000 <sfbpf_parse+0xbb4>
    c808:	b	d060 <sfbpf_parse+0xc14>
    c80c:	b	d00c <sfbpf_parse+0xbc0>
    c810:	b	d018 <sfbpf_parse+0xbcc>
    c814:	b	d024 <sfbpf_parse+0xbd8>
    c818:	b	d030 <sfbpf_parse+0xbe4>
    c81c:	b	d060 <sfbpf_parse+0xc14>
    c820:	b	d03c <sfbpf_parse+0xbf0>
    c824:	b	d018 <sfbpf_parse+0xbcc>
    c828:	b	d024 <sfbpf_parse+0xbd8>
    c82c:	b	d030 <sfbpf_parse+0xbe4>
    c830:	b	d03c <sfbpf_parse+0xbf0>
    c834:	b	d048 <sfbpf_parse+0xbfc>
    c838:	b	d054 <sfbpf_parse+0xc08>
    c83c:	b	d060 <sfbpf_parse+0xc14>
    c840:	b	d06c <sfbpf_parse+0xc20>
    c844:	b	d078 <sfbpf_parse+0xc2c>
    c848:	b	d084 <sfbpf_parse+0xc38>
    c84c:	b	d090 <sfbpf_parse+0xc44>
    c850:	b	d09c <sfbpf_parse+0xc50>
    c854:	b	d0a8 <sfbpf_parse+0xc5c>
    c858:	b	d0b4 <sfbpf_parse+0xc68>
    c85c:	b	d0c0 <sfbpf_parse+0xc74>
    c860:	b	d0cc <sfbpf_parse+0xc80>
    c864:	b	d0d8 <sfbpf_parse+0xc8c>
    c868:	b	d0e4 <sfbpf_parse+0xc98>
    c86c:	b	d0f0 <sfbpf_parse+0xca4>
    c870:	b	d0fc <sfbpf_parse+0xcb0>
    c874:	b	d108 <sfbpf_parse+0xcbc>
    c878:	b	d114 <sfbpf_parse+0xcc8>
    c87c:	b	d120 <sfbpf_parse+0xcd4>
    c880:	b	d12c <sfbpf_parse+0xce0>
    c884:	b	d138 <sfbpf_parse+0xcec>
    c888:	b	d144 <sfbpf_parse+0xcf8>
    c88c:	b	d150 <sfbpf_parse+0xd04>
    c890:	b	d15c <sfbpf_parse+0xd10>
    c894:	b	d168 <sfbpf_parse+0xd1c>
    c898:	b	d174 <sfbpf_parse+0xd28>
    c89c:	b	d180 <sfbpf_parse+0xd34>
    c8a0:	b	d18c <sfbpf_parse+0xd40>
    c8a4:	b	d198 <sfbpf_parse+0xd4c>
    c8a8:	b	d1a4 <sfbpf_parse+0xd58>
    c8ac:	b	d1b0 <sfbpf_parse+0xd64>
    c8b0:	b	d1bc <sfbpf_parse+0xd70>
    c8b4:	b	d1c8 <sfbpf_parse+0xd7c>
    c8b8:	b	d1d4 <sfbpf_parse+0xd88>
    c8bc:	b	d1e0 <sfbpf_parse+0xd94>
    c8c0:	b	d1f0 <sfbpf_parse+0xda4>
    c8c4:	b	d200 <sfbpf_parse+0xdb4>
    c8c8:	b	d210 <sfbpf_parse+0xdc4>
    c8cc:	b	d220 <sfbpf_parse+0xdd4>
    c8d0:	b	d238 <sfbpf_parse+0xdec>
    c8d4:	b	d248 <sfbpf_parse+0xdfc>
    c8d8:	b	d258 <sfbpf_parse+0xe0c>
    c8dc:	b	d268 <sfbpf_parse+0xe1c>
    c8e0:	b	d278 <sfbpf_parse+0xe2c>
    c8e4:	b	d288 <sfbpf_parse+0xe3c>
    c8e8:	b	d298 <sfbpf_parse+0xe4c>
    c8ec:	b	d2a4 <sfbpf_parse+0xe58>
    c8f0:	b	d2b0 <sfbpf_parse+0xe64>
    c8f4:	b	d2b0 <sfbpf_parse+0xe64>
    c8f8:	b	d2bc <sfbpf_parse+0xe70>
    c8fc:	b	d2cc <sfbpf_parse+0xe80>
    c900:	b	d2dc <sfbpf_parse+0xe90>
    c904:	b	d2ec <sfbpf_parse+0xea0>
    c908:	b	d2fc <sfbpf_parse+0xeb0>
    c90c:	b	d30c <sfbpf_parse+0xec0>
    c910:	b	d31c <sfbpf_parse+0xed0>
    c914:	b	d338 <sfbpf_parse+0xeec>
    c918:	b	d34c <sfbpf_parse+0xf00>
    c91c:	b	d360 <sfbpf_parse+0xf14>
    c920:	b	ca48 <sfbpf_parse+0x5fc>
    c924:	b	d370 <sfbpf_parse+0xf24>
    c928:	b	ca48 <sfbpf_parse+0x5fc>
    c92c:	b	cae4 <sfbpf_parse+0x698>
    c930:	b	d3cc <sfbpf_parse+0xf80>
    c934:	b	ca48 <sfbpf_parse+0x5fc>
    c938:	b	d4cc <sfbpf_parse+0x1080>
    c93c:	b	d558 <sfbpf_parse+0x110c>
    c940:	b	d564 <sfbpf_parse+0x1118>
    c944:	b	d564 <sfbpf_parse+0x1118>
    c948:	b	d570 <sfbpf_parse+0x1124>
    c94c:	b	d57c <sfbpf_parse+0x1130>
    c950:	b	d588 <sfbpf_parse+0x113c>
    c954:	b	d570 <sfbpf_parse+0x1124>
    c958:	b	d57c <sfbpf_parse+0x1130>
    c95c:	b	d588 <sfbpf_parse+0x113c>
    c960:	b	d594 <sfbpf_parse+0x1148>
    c964:	b	ca48 <sfbpf_parse+0x5fc>
    c968:	b	d5a4 <sfbpf_parse+0x1158>
    c96c:	b	d5bc <sfbpf_parse+0x1170>
    c970:	b	d5d4 <sfbpf_parse+0x1188>
    c974:	b	d5ec <sfbpf_parse+0x11a0>
    c978:	b	d604 <sfbpf_parse+0x11b8>
    c97c:	b	d61c <sfbpf_parse+0x11d0>
    c980:	b	d634 <sfbpf_parse+0x11e8>
    c984:	b	d64c <sfbpf_parse+0x1200>
    c988:	b	d664 <sfbpf_parse+0x1218>
    c98c:	b	d67c <sfbpf_parse+0x1230>
    c990:	b	d694 <sfbpf_parse+0x1248>
    c994:	b	d6a4 <sfbpf_parse+0x1258>
    c998:	b	d6b0 <sfbpf_parse+0x1264>
    c99c:	b	d6bc <sfbpf_parse+0x1270>
    c9a0:	b	d6c8 <sfbpf_parse+0x127c>
    c9a4:	b	d6d4 <sfbpf_parse+0x1288>
    c9a8:	b	d6e0 <sfbpf_parse+0x1294>
    c9ac:	b	d6ec <sfbpf_parse+0x12a0>
    c9b0:	b	ca48 <sfbpf_parse+0x5fc>
    c9b4:	b	d6f8 <sfbpf_parse+0x12ac>
    c9b8:	b	d704 <sfbpf_parse+0x12b8>
    c9bc:	b	d710 <sfbpf_parse+0x12c4>
    c9c0:	b	d804 <sfbpf_parse+0x13b8>
    c9c4:	b	d810 <sfbpf_parse+0x13c4>
    c9c8:	b	d71c <sfbpf_parse+0x12d0>
    c9cc:	b	d81c <sfbpf_parse+0x13d0>
    c9d0:	b	d728 <sfbpf_parse+0x12dc>
    c9d4:	b	d734 <sfbpf_parse+0x12e8>
    c9d8:	b	d740 <sfbpf_parse+0x12f4>
    c9dc:	b	d74c <sfbpf_parse+0x1300>
    c9e0:	b	d758 <sfbpf_parse+0x130c>
    c9e4:	b	d764 <sfbpf_parse+0x1318>
    c9e8:	b	ca44 <sfbpf_parse+0x5f8>
    c9ec:	b	d770 <sfbpf_parse+0x1324>
    c9f0:	b	ca48 <sfbpf_parse+0x5fc>
    c9f4:	b	d778 <sfbpf_parse+0x132c>
    c9f8:	b	d794 <sfbpf_parse+0x1348>
    c9fc:	b	d880 <sfbpf_parse+0x1434>
    ca00:	b	d7b0 <sfbpf_parse+0x1364>
    ca04:	b	ca48 <sfbpf_parse+0x5fc>
    ca08:	b	d7dc <sfbpf_parse+0x1390>
    ca0c:	b	d804 <sfbpf_parse+0x13b8>
    ca10:	b	d810 <sfbpf_parse+0x13c4>
    ca14:	b	d81c <sfbpf_parse+0x13d0>
    ca18:	b	d828 <sfbpf_parse+0x13dc>
    ca1c:	b	d830 <sfbpf_parse+0x13e4>
    ca20:	b	d838 <sfbpf_parse+0x13ec>
    ca24:	b	d840 <sfbpf_parse+0x13f4>
    ca28:	b	ca48 <sfbpf_parse+0x5fc>
    ca2c:	b	d848 <sfbpf_parse+0x13fc>
    ca30:	b	d864 <sfbpf_parse+0x1418>
    ca34:	b	d880 <sfbpf_parse+0x1434>
    ca38:	b	d898 <sfbpf_parse+0x144c>
    ca3c:	b	ca48 <sfbpf_parse+0x5fc>
    ca40:	b	d8c4 <sfbpf_parse+0x1478>
    ca44:	mov	r8, #51	; 0x33
    ca48:	ldrsh	r3, [sp, #20]
    ca4c:	movw	ip, #669	; 0x29d
    ca50:	str	r8, [sp, #36]	; 0x24
    ca54:	str	r7, [sp, #40]	; 0x28
    ca58:	str	r5, [sp, #44]	; 0x2c
    ca5c:	sub	r4, r4, r3, lsl #4
    ca60:	sub	r9, r9, r3, lsl #1
    ca64:	add	r3, sp, #32
    ca68:	ldm	r3, {r0, r1, r2, r3}
    ca6c:	add	r4, r4, #16
    ca70:	stm	r4, {r0, r1, r2, r3}
    ca74:	ldr	r2, [pc, #2516]	; d450 <sfbpf_parse+0x1004>
    ca78:	ldr	r3, [sp, #8]
    ca7c:	ldrsh	r0, [r9]
    ca80:	add	r2, pc, r2
    ca84:	add	r3, r2, r3
    ca88:	ldrb	r1, [r3, #4075]	; 0xfeb
    ca8c:	ldr	r3, [sp, #16]
    ca90:	sub	r1, r1, #126	; 0x7e
    ca94:	lsl	r1, r1, #1
    ca98:	ldrsh	r3, [r3, r1]
    ca9c:	add	r3, r3, r0
    caa0:	cmp	r3, ip
    caa4:	bhi	cacc <sfbpf_parse+0x680>
    caa8:	add	ip, r2, #912	; 0x390
    caac:	lsl	r3, r3, #1
    cab0:	add	ip, ip, #2
    cab4:	ldrsh	ip, [ip, r3]
    cab8:	cmp	ip, r0
    cabc:	addeq	r2, r2, #2240	; 0x8c0
    cac0:	addeq	r2, r2, #14
    cac4:	ldrsheq	r5, [r2, r3]
    cac8:	beq	c674 <sfbpf_parse+0x228>
    cacc:	ldr	r3, [pc, #2432]	; d454 <sfbpf_parse+0x1008>
    cad0:	add	r3, pc, r3
    cad4:	sub	r3, r3, #3808	; 0xee0
    cad8:	sub	r3, r3, #6
    cadc:	ldrsh	r5, [r3, r1]
    cae0:	b	c674 <sfbpf_parse+0x228>
    cae4:	ldr	r3, [pc, #2412]	; d458 <sfbpf_parse+0x100c>
    cae8:	add	r3, pc, r3
    caec:	ldr	r1, [r3, #4]
    caf0:	cmp	r1, #0
    caf4:	bne	d39c <sfbpf_parse+0xf50>
    caf8:	ldr	r0, [pc, #2396]	; d45c <sfbpf_parse+0x1010>
    cafc:	add	r0, pc, r0
    cb00:	b	cc80 <sfbpf_parse+0x834>
    cb04:	ldr	r0, [r4, #12]
    cb08:	bl	2e38 <sf_finish_parse>
    cb0c:	b	ca48 <sfbpf_parse+0x5fc>
    cb10:	ldr	r3, [pc, #2376]	; d460 <sfbpf_parse+0x1014>
    cb14:	add	r3, pc, r3
    cb18:	ldr	r0, [r3, #4071]	; 0xfe7
    cb1c:	str	r0, [sp, #32]
    cb20:	b	ca48 <sfbpf_parse+0x5fc>
    cb24:	ldr	r0, [r4, #-20]	; 0xffffffec
    cb28:	ldr	r5, [r4, #12]
    cb2c:	mov	r1, r5
    cb30:	bl	2c48 <sf_gen_and>
    cb34:	ldm	r4, {r0, r1, r2, r3}
    cb38:	add	ip, sp, #32
    cb3c:	mov	r8, r1
    cb40:	mov	r7, r2
    cb44:	stm	ip, {r0, r1, r2, r3}
    cb48:	b	ca48 <sfbpf_parse+0x5fc>
    cb4c:	ldr	r0, [r4, #-20]	; 0xffffffec
    cb50:	ldr	r5, [r4, #12]
    cb54:	mov	r1, r5
    cb58:	bl	2c48 <sf_gen_and>
    cb5c:	ldm	r4, {r0, r1, r2, r3}
    cb60:	add	ip, sp, #32
    cb64:	mov	r8, r1
    cb68:	mov	r7, r2
    cb6c:	stm	ip, {r0, r1, r2, r3}
    cb70:	b	ca48 <sfbpf_parse+0x5fc>
    cb74:	ldr	r0, [r4, #-20]	; 0xffffffec
    cb78:	ldr	r5, [r4, #12]
    cb7c:	mov	r1, r5
    cb80:	bl	2cc8 <sf_gen_or>
    cb84:	ldm	r4, {r0, r1, r2, r3}
    cb88:	add	ip, sp, #32
    cb8c:	mov	r8, r1
    cb90:	mov	r7, r2
    cb94:	stm	ip, {r0, r1, r2, r3}
    cb98:	b	ca48 <sfbpf_parse+0x5fc>
    cb9c:	ldr	r0, [r4, #-20]	; 0xffffffec
    cba0:	ldr	r5, [r4, #12]
    cba4:	mov	r1, r5
    cba8:	bl	2cc8 <sf_gen_or>
    cbac:	ldm	r4, {r0, r1, r2, r3}
    cbb0:	add	ip, sp, #32
    cbb4:	mov	r8, r1
    cbb8:	mov	r7, r2
    cbbc:	stm	ip, {r0, r1, r2, r3}
    cbc0:	b	ca48 <sfbpf_parse+0x5fc>
    cbc4:	ldmdb	r4, {r0, r1, r2, r3}
    cbc8:	mov	r8, r1
    cbcc:	mov	r7, r2
    cbd0:	stm	r6, {r0, r1, r2, r3}
    cbd4:	mov	r5, r3
    cbd8:	b	ca48 <sfbpf_parse+0x5fc>
    cbdc:	ldmdb	r4, {r0, r1, r2, r3}
    cbe0:	mov	r8, r1
    cbe4:	mov	r7, r2
    cbe8:	stm	r6, {r0, r1, r2, r3}
    cbec:	mov	r5, r3
    cbf0:	b	ca48 <sfbpf_parse+0x5fc>
    cbf4:	ldmdb	r4, {r0, r1, r2, r3}
    cbf8:	mov	r8, r1
    cbfc:	mov	r7, r2
    cc00:	stm	r6, {r0, r1, r2, r3}
    cc04:	mov	r5, r3
    cc08:	b	ca48 <sfbpf_parse+0x5fc>
    cc0c:	ldr	r1, [r4, #-16]
    cc10:	ldr	r0, [r4]
    cc14:	str	r1, [sp, #32]
    cc18:	bl	8860 <sf_gen_scode>
    cc1c:	mov	r5, r0
    cc20:	b	ca48 <sfbpf_parse+0x5fc>
    cc24:	ldr	r3, [r4, #-48]	; 0xffffffd0
    cc28:	mov	r1, #0
    cc2c:	ldr	r0, [r4, #-32]	; 0xffffffe0
    cc30:	ldr	r2, [r4]
    cc34:	str	r3, [sp, #32]
    cc38:	bl	6f70 <sf_gen_mcode>
    cc3c:	mov	r5, r0
    cc40:	b	ca48 <sfbpf_parse+0x5fc>
    cc44:	ldr	r3, [r4, #-48]	; 0xffffffd0
    cc48:	mov	r2, #0
    cc4c:	ldr	r0, [r4, #-32]	; 0xffffffe0
    cc50:	ldr	r1, [r4]
    cc54:	str	r3, [sp, #32]
    cc58:	bl	6f70 <sf_gen_mcode>
    cc5c:	mov	r5, r0
    cc60:	b	ca48 <sfbpf_parse+0x5fc>
    cc64:	ldr	r2, [r4, #-16]
    cc68:	uxtb	r3, r2
    cc6c:	str	r2, [sp, #32]
    cc70:	cmp	r3, #3
    cc74:	bne	cc84 <sfbpf_parse+0x838>
    cc78:	ldr	r0, [pc, #2020]	; d464 <sfbpf_parse+0x1018>
    cc7c:	add	r0, pc, r0
    cc80:	bl	1e54 <sf_bpf_error>
    cc84:	cmp	r3, #7
    cc88:	ldreq	r0, [pc, #2008]	; d468 <sfbpf_parse+0x101c>
    cc8c:	addeq	r0, pc, r0
    cc90:	beq	cc80 <sfbpf_parse+0x834>
    cc94:	cmp	r3, #5
    cc98:	ldreq	r0, [pc, #1996]	; d46c <sfbpf_parse+0x1020>
    cc9c:	addeq	r0, pc, r0
    cca0:	beq	cc80 <sfbpf_parse+0x834>
    cca4:	cmp	r3, #6
    cca8:	ldreq	r0, [pc, #1984]	; d470 <sfbpf_parse+0x1024>
    ccac:	addeq	r0, pc, r0
    ccb0:	beq	cc80 <sfbpf_parse+0x834>
    ccb4:	mov	r1, #0
    ccb8:	ldr	r0, [r4]
    ccbc:	bl	7964 <sf_gen_ncode>
    ccc0:	mov	r5, r0
    ccc4:	b	ca48 <sfbpf_parse+0x5fc>
    ccc8:	ldr	r3, [r4, #-48]	; 0xffffffd0
    cccc:	mov	r1, #0
    ccd0:	ldr	r0, [r4, #-32]	; 0xffffffe0
    ccd4:	ldr	r2, [r4]
    ccd8:	str	r3, [sp, #32]
    ccdc:	bl	86a0 <sf_gen_mcode6>
    cce0:	mov	r5, r0
    cce4:	b	ca48 <sfbpf_parse+0x5fc>
    cce8:	ldr	r3, [r4, #-16]
    ccec:	mov	r2, #128	; 0x80
    ccf0:	mov	r1, #0
    ccf4:	ldr	r0, [r4]
    ccf8:	str	r3, [sp, #32]
    ccfc:	bl	86a0 <sf_gen_mcode6>
    cd00:	mov	r5, r0
    cd04:	b	ca48 <sfbpf_parse+0x5fc>
    cd08:	ldr	r1, [r4, #-16]
    cd0c:	ldr	r6, [r4]
    cd10:	str	r1, [sp, #32]
    cd14:	mov	r0, r6
    cd18:	bl	43b0 <sf_gen_ecode>
    cd1c:	mov	r5, r0
    cd20:	mov	r0, r6
    cd24:	bl	d68 <free@plt>
    cd28:	b	ca48 <sfbpf_parse+0x5fc>
    cd2c:	ldr	r1, [r4, #-16]
    cd30:	ldr	r6, [r4]
    cd34:	str	r1, [sp, #32]
    cd38:	mov	r0, r6
    cd3c:	bl	4f68 <sf_gen_acode>
    cd40:	mov	r5, r0
    cd44:	mov	r0, r6
    cd48:	bl	d68 <free@plt>
    cd4c:	b	ca48 <sfbpf_parse+0x5fc>
    cd50:	ldr	r5, [r4, #12]
    cd54:	mov	r0, r5
    cd58:	bl	2d38 <sf_gen_not>
    cd5c:	ldm	r4, {r0, r1, r2, r3}
    cd60:	mov	r8, r1
    cd64:	mov	r7, r2
    cd68:	stm	r6, {r0, r1, r2, r3}
    cd6c:	b	ca48 <sfbpf_parse+0x5fc>
    cd70:	ldmdb	r4, {r0, r1, r2, r3}
    cd74:	mov	r8, r1
    cd78:	mov	r7, r2
    cd7c:	stm	r6, {r0, r1, r2, r3}
    cd80:	mov	r5, r3
    cd84:	b	ca48 <sfbpf_parse+0x5fc>
    cd88:	ldmdb	r4, {r0, r1, r2, r3}
    cd8c:	mov	r8, r1
    cd90:	mov	r7, r2
    cd94:	stm	r6, {r0, r1, r2, r3}
    cd98:	mov	r5, r3
    cd9c:	b	ca48 <sfbpf_parse+0x5fc>
    cda0:	ldr	r0, [r4, #-20]	; 0xffffffec
    cda4:	ldr	r5, [r4, #12]
    cda8:	mov	r1, r5
    cdac:	bl	2c48 <sf_gen_and>
    cdb0:	ldm	r4, {r0, r1, r2, r3}
    cdb4:	add	ip, sp, #32
    cdb8:	mov	r8, r1
    cdbc:	mov	r7, r2
    cdc0:	stm	ip, {r0, r1, r2, r3}
    cdc4:	b	ca48 <sfbpf_parse+0x5fc>
    cdc8:	ldr	r0, [r4, #-20]	; 0xffffffec
    cdcc:	ldr	r5, [r4, #12]
    cdd0:	mov	r1, r5
    cdd4:	bl	2cc8 <sf_gen_or>
    cdd8:	ldm	r4, {r0, r1, r2, r3}
    cddc:	add	ip, sp, #32
    cde0:	mov	r8, r1
    cde4:	mov	r7, r2
    cde8:	stm	ip, {r0, r1, r2, r3}
    cdec:	b	ca48 <sfbpf_parse+0x5fc>
    cdf0:	ldr	r2, [r4, #-16]
    cdf4:	mov	r0, #0
    cdf8:	ldr	r1, [r4]
    cdfc:	str	r2, [sp, #32]
    ce00:	bl	7964 <sf_gen_ncode>
    ce04:	mov	r5, r0
    ce08:	b	ca48 <sfbpf_parse+0x5fc>
    ce0c:	ldr	r5, [r4, #12]
    ce10:	mov	r0, r5
    ce14:	bl	2d38 <sf_gen_not>
    ce18:	ldm	r4, {r0, r1, r2, r3}
    ce1c:	mov	r8, r1
    ce20:	mov	r7, r2
    ce24:	stm	r6, {r0, r1, r2, r3}
    ce28:	b	ca48 <sfbpf_parse+0x5fc>
    ce2c:	ldr	r3, [r4, #-32]	; 0xffffffe0
    ce30:	strb	r3, [sp, #33]	; 0x21
    ce34:	ldr	r3, [r4, #-16]
    ce38:	strb	r3, [sp, #34]	; 0x22
    ce3c:	ldr	r3, [r4]
    ce40:	strb	r3, [sp, #32]
    ce44:	b	ca48 <sfbpf_parse+0x5fc>
    ce48:	ldr	r3, [r4, #-16]
    ce4c:	strb	r3, [sp, #33]	; 0x21
    ce50:	ldr	r3, [r4]
    ce54:	strb	r3, [sp, #34]	; 0x22
    ce58:	mov	r3, #0
    ce5c:	strb	r3, [sp, #32]
    ce60:	b	ca48 <sfbpf_parse+0x5fc>
    ce64:	ldr	r3, [r4, #-16]
    ce68:	strb	r3, [sp, #33]	; 0x21
    ce6c:	mov	r3, #0
    ce70:	strb	r3, [sp, #34]	; 0x22
    ce74:	mov	r3, #5
    ce78:	strb	r3, [sp, #32]
    ce7c:	b	ca48 <sfbpf_parse+0x5fc>
    ce80:	ldr	r3, [r4, #-16]
    ce84:	strb	r3, [sp, #33]	; 0x21
    ce88:	mov	r3, #0
    ce8c:	strb	r3, [sp, #34]	; 0x22
    ce90:	mov	r3, #6
    ce94:	strb	r3, [sp, #32]
    ce98:	b	ca48 <sfbpf_parse+0x5fc>
    ce9c:	ldr	r3, [r4, #-16]
    cea0:	strb	r3, [sp, #33]	; 0x21
    cea4:	mov	r3, #0
    cea8:	strb	r3, [sp, #34]	; 0x22
    ceac:	ldr	r3, [r4]
    ceb0:	strb	r3, [sp, #32]
    ceb4:	b	ca48 <sfbpf_parse+0x5fc>
    ceb8:	ldm	r4, {r0, r1, r2, r3}
    cebc:	mov	r8, r1
    cec0:	mov	r7, r2
    cec4:	stm	r6, {r0, r1, r2, r3}
    cec8:	mov	r5, r3
    cecc:	b	ca48 <sfbpf_parse+0x5fc>
    ced0:	ldr	r3, [r4, #-32]	; 0xffffffe0
    ced4:	ldr	r5, [r4, #-4]
    ced8:	str	r3, [sp, #32]
    cedc:	b	ca48 <sfbpf_parse+0x5fc>
    cee0:	ldr	r0, [r4]
    cee4:	bl	5f84 <sf_gen_proto_abbrev>
    cee8:	ldr	r3, [pc, #1412]	; d474 <sfbpf_parse+0x1028>
    ceec:	mov	r5, r0
    cef0:	add	r3, pc, r3
    cef4:	ldr	r0, [r3, #4071]	; 0xfe7
    cef8:	str	r0, [sp, #32]
    cefc:	b	ca48 <sfbpf_parse+0x5fc>
    cf00:	mov	r3, #0
    cf04:	ldr	r1, [r4, #-32]	; 0xffffffe0
    cf08:	ldr	r0, [r4, #-16]
    cf0c:	ldr	r2, [r4]
    cf10:	bl	4a54 <sf_gen_relation>
    cf14:	ldr	r3, [pc, #1372]	; d478 <sfbpf_parse+0x102c>
    cf18:	mov	r5, r0
    cf1c:	add	r3, pc, r3
    cf20:	ldr	r0, [r3, #4071]	; 0xfe7
    cf24:	str	r0, [sp, #32]
    cf28:	b	ca48 <sfbpf_parse+0x5fc>
    cf2c:	mov	r3, #1
    cf30:	ldr	r1, [r4, #-32]	; 0xffffffe0
    cf34:	ldr	r0, [r4, #-16]
    cf38:	ldr	r2, [r4]
    cf3c:	bl	4a54 <sf_gen_relation>
    cf40:	ldr	r3, [pc, #1332]	; d47c <sfbpf_parse+0x1030>
    cf44:	mov	r5, r0
    cf48:	add	r3, pc, r3
    cf4c:	ldr	r0, [r3, #4071]	; 0xfe7
    cf50:	str	r0, [sp, #32]
    cf54:	b	ca48 <sfbpf_parse+0x5fc>
    cf58:	ldr	r3, [pc, #1312]	; d480 <sfbpf_parse+0x1034>
    cf5c:	ldr	r5, [r4]
    cf60:	add	r3, pc, r3
    cf64:	ldr	r0, [r3, #4071]	; 0xfe7
    cf68:	str	r0, [sp, #32]
    cf6c:	b	ca48 <sfbpf_parse+0x5fc>
    cf70:	ldr	r0, [r4]
    cf74:	bl	8f34 <sf_gen_atmtype_abbrev>
    cf78:	ldr	r3, [pc, #1284]	; d484 <sfbpf_parse+0x1038>
    cf7c:	mov	r5, r0
    cf80:	add	r3, pc, r3
    cf84:	ldr	r0, [r3, #4071]	; 0xfe7
    cf88:	str	r0, [sp, #32]
    cf8c:	b	ca48 <sfbpf_parse+0x5fc>
    cf90:	ldr	r0, [r4]
    cf94:	bl	952c <sf_gen_atmmulti_abbrev>
    cf98:	ldr	r3, [pc, #1256]	; d488 <sfbpf_parse+0x103c>
    cf9c:	mov	r5, r0
    cfa0:	add	r3, pc, r3
    cfa4:	ldr	r0, [r3, #4071]	; 0xfe7
    cfa8:	str	r0, [sp, #32]
    cfac:	b	ca48 <sfbpf_parse+0x5fc>
    cfb0:	ldr	r0, [r4]
    cfb4:	bl	9218 <sf_gen_mtp2type_abbrev>
    cfb8:	ldr	r3, [pc, #1228]	; d48c <sfbpf_parse+0x1040>
    cfbc:	mov	r5, r0
    cfc0:	add	r3, pc, r3
    cfc4:	ldr	r0, [r3, #4071]	; 0xfe7
    cfc8:	str	r0, [sp, #32]
    cfcc:	b	ca48 <sfbpf_parse+0x5fc>
    cfd0:	ldr	r3, [pc, #1208]	; d490 <sfbpf_parse+0x1044>
    cfd4:	ldr	r5, [r4, #12]
    cfd8:	add	r3, pc, r3
    cfdc:	ldr	r0, [r3, #4071]	; 0xfe7
    cfe0:	str	r0, [sp, #32]
    cfe4:	b	ca48 <sfbpf_parse+0x5fc>
    cfe8:	mov	r3, #0
    cfec:	str	r3, [sp, #32]
    cff0:	b	ca48 <sfbpf_parse+0x5fc>
    cff4:	mov	r3, #5
    cff8:	str	r3, [sp, #32]
    cffc:	b	ca48 <sfbpf_parse+0x5fc>
    d000:	mov	r3, #6
    d004:	str	r3, [sp, #32]
    d008:	b	ca48 <sfbpf_parse+0x5fc>
    d00c:	mov	r3, #8
    d010:	str	r3, [sp, #32]
    d014:	b	ca48 <sfbpf_parse+0x5fc>
    d018:	mov	r3, #1
    d01c:	str	r3, [sp, #32]
    d020:	b	ca48 <sfbpf_parse+0x5fc>
    d024:	mov	r3, #2
    d028:	str	r3, [sp, #32]
    d02c:	b	ca48 <sfbpf_parse+0x5fc>
    d030:	mov	r3, #3
    d034:	str	r3, [sp, #32]
    d038:	b	ca48 <sfbpf_parse+0x5fc>
    d03c:	mov	r3, #4
    d040:	str	r3, [sp, #32]
    d044:	b	ca48 <sfbpf_parse+0x5fc>
    d048:	mov	r3, #5
    d04c:	str	r3, [sp, #32]
    d050:	b	ca48 <sfbpf_parse+0x5fc>
    d054:	mov	r3, #6
    d058:	str	r3, [sp, #32]
    d05c:	b	ca48 <sfbpf_parse+0x5fc>
    d060:	mov	r3, #7
    d064:	str	r3, [sp, #32]
    d068:	b	ca48 <sfbpf_parse+0x5fc>
    d06c:	mov	r3, #8
    d070:	str	r3, [sp, #32]
    d074:	b	ca48 <sfbpf_parse+0x5fc>
    d078:	mov	r3, #9
    d07c:	str	r3, [sp, #32]
    d080:	b	ca48 <sfbpf_parse+0x5fc>
    d084:	mov	r3, #10
    d088:	str	r3, [sp, #32]
    d08c:	b	ca48 <sfbpf_parse+0x5fc>
    d090:	mov	r3, #21
    d094:	str	r3, [sp, #32]
    d098:	b	ca48 <sfbpf_parse+0x5fc>
    d09c:	mov	r3, #22
    d0a0:	str	r3, [sp, #32]
    d0a4:	b	ca48 <sfbpf_parse+0x5fc>
    d0a8:	mov	r3, #11
    d0ac:	str	r3, [sp, #32]
    d0b0:	b	ca48 <sfbpf_parse+0x5fc>
    d0b4:	mov	r3, #23
    d0b8:	str	r3, [sp, #32]
    d0bc:	b	ca48 <sfbpf_parse+0x5fc>
    d0c0:	mov	r3, #12
    d0c4:	str	r3, [sp, #32]
    d0c8:	b	ca48 <sfbpf_parse+0x5fc>
    d0cc:	mov	r3, #13
    d0d0:	str	r3, [sp, #32]
    d0d4:	b	ca48 <sfbpf_parse+0x5fc>
    d0d8:	mov	r3, #14
    d0dc:	str	r3, [sp, #32]
    d0e0:	b	ca48 <sfbpf_parse+0x5fc>
    d0e4:	mov	r3, #16
    d0e8:	str	r3, [sp, #32]
    d0ec:	b	ca48 <sfbpf_parse+0x5fc>
    d0f0:	mov	r3, #15
    d0f4:	str	r3, [sp, #32]
    d0f8:	b	ca48 <sfbpf_parse+0x5fc>
    d0fc:	mov	r3, #17
    d100:	str	r3, [sp, #32]
    d104:	b	ca48 <sfbpf_parse+0x5fc>
    d108:	mov	r3, #18
    d10c:	str	r3, [sp, #32]
    d110:	b	ca48 <sfbpf_parse+0x5fc>
    d114:	mov	r3, #19
    d118:	str	r3, [sp, #32]
    d11c:	b	ca48 <sfbpf_parse+0x5fc>
    d120:	mov	r3, #20
    d124:	str	r3, [sp, #32]
    d128:	b	ca48 <sfbpf_parse+0x5fc>
    d12c:	mov	r3, #24
    d130:	str	r3, [sp, #32]
    d134:	b	ca48 <sfbpf_parse+0x5fc>
    d138:	mov	r3, #25
    d13c:	str	r3, [sp, #32]
    d140:	b	ca48 <sfbpf_parse+0x5fc>
    d144:	mov	r3, #26
    d148:	str	r3, [sp, #32]
    d14c:	b	ca48 <sfbpf_parse+0x5fc>
    d150:	mov	r3, #31
    d154:	str	r3, [sp, #32]
    d158:	b	ca48 <sfbpf_parse+0x5fc>
    d15c:	mov	r3, #32
    d160:	str	r3, [sp, #32]
    d164:	b	ca48 <sfbpf_parse+0x5fc>
    d168:	mov	r3, #33	; 0x21
    d16c:	str	r3, [sp, #32]
    d170:	b	ca48 <sfbpf_parse+0x5fc>
    d174:	mov	r3, #39	; 0x27
    d178:	str	r3, [sp, #32]
    d17c:	b	ca48 <sfbpf_parse+0x5fc>
    d180:	mov	r3, #36	; 0x24
    d184:	str	r3, [sp, #32]
    d188:	b	ca48 <sfbpf_parse+0x5fc>
    d18c:	mov	r3, #38	; 0x26
    d190:	str	r3, [sp, #32]
    d194:	b	ca48 <sfbpf_parse+0x5fc>
    d198:	mov	r3, #37	; 0x25
    d19c:	str	r3, [sp, #32]
    d1a0:	b	ca48 <sfbpf_parse+0x5fc>
    d1a4:	mov	r3, #27
    d1a8:	str	r3, [sp, #32]
    d1ac:	b	ca48 <sfbpf_parse+0x5fc>
    d1b0:	mov	r3, #28
    d1b4:	str	r3, [sp, #32]
    d1b8:	b	ca48 <sfbpf_parse+0x5fc>
    d1bc:	mov	r3, #29
    d1c0:	str	r3, [sp, #32]
    d1c4:	b	ca48 <sfbpf_parse+0x5fc>
    d1c8:	mov	r3, #30
    d1cc:	str	r3, [sp, #32]
    d1d0:	b	ca48 <sfbpf_parse+0x5fc>
    d1d4:	mov	r3, #40	; 0x28
    d1d8:	str	r3, [sp, #32]
    d1dc:	b	ca48 <sfbpf_parse+0x5fc>
    d1e0:	ldr	r0, [r4, #-16]
    d1e4:	bl	7bbc <sf_gen_broadcast>
    d1e8:	str	r0, [sp, #32]
    d1ec:	b	ca48 <sfbpf_parse+0x5fc>
    d1f0:	ldr	r0, [r4, #-16]
    d1f4:	bl	7e18 <sf_gen_multicast>
    d1f8:	str	r0, [sp, #32]
    d1fc:	b	ca48 <sfbpf_parse+0x5fc>
    d200:	ldr	r0, [r4]
    d204:	bl	4d28 <sf_gen_less>
    d208:	str	r0, [sp, #32]
    d20c:	b	ca48 <sfbpf_parse+0x5fc>
    d210:	ldr	r0, [r4]
    d214:	bl	4d00 <sf_gen_greater>
    d218:	str	r0, [sp, #32]
    d21c:	b	ca48 <sfbpf_parse+0x5fc>
    d220:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d224:	ldr	r0, [r4, #-16]
    d228:	ldr	r2, [r4]
    d22c:	bl	4d60 <sf_gen_byteop>
    d230:	str	r0, [sp, #32]
    d234:	b	ca48 <sfbpf_parse+0x5fc>
    d238:	mov	r0, #0
    d23c:	bl	6774 <sf_gen_inbound>
    d240:	str	r0, [sp, #32]
    d244:	b	ca48 <sfbpf_parse+0x5fc>
    d248:	mov	r0, #1
    d24c:	bl	6774 <sf_gen_inbound>
    d250:	str	r0, [sp, #32]
    d254:	b	ca48 <sfbpf_parse+0x5fc>
    d258:	ldr	r0, [r4]
    d25c:	bl	4fd8 <sf_gen_vlan>
    d260:	str	r0, [sp, #32]
    d264:	b	ca48 <sfbpf_parse+0x5fc>
    d268:	mvn	r0, #0
    d26c:	bl	4fd8 <sf_gen_vlan>
    d270:	str	r0, [sp, #32]
    d274:	b	ca48 <sfbpf_parse+0x5fc>
    d278:	ldr	r0, [r4]
    d27c:	bl	811c <sf_gen_mpls>
    d280:	str	r0, [sp, #32]
    d284:	b	ca48 <sfbpf_parse+0x5fc>
    d288:	mvn	r0, #0
    d28c:	bl	811c <sf_gen_mpls>
    d290:	str	r0, [sp, #32]
    d294:	b	ca48 <sfbpf_parse+0x5fc>
    d298:	bl	822c <sf_gen_pppoed>
    d29c:	str	r0, [sp, #32]
    d2a0:	b	ca48 <sfbpf_parse+0x5fc>
    d2a4:	bl	8234 <sf_gen_pppoes>
    d2a8:	str	r0, [sp, #32]
    d2ac:	b	ca48 <sfbpf_parse+0x5fc>
    d2b0:	ldr	r3, [r4]
    d2b4:	str	r3, [sp, #32]
    d2b8:	b	ca48 <sfbpf_parse+0x5fc>
    d2bc:	ldr	r0, [r4]
    d2c0:	bl	4e1c <sf_gen_pf_ifname>
    d2c4:	str	r0, [sp, #32]
    d2c8:	b	ca48 <sfbpf_parse+0x5fc>
    d2cc:	ldr	r0, [r4]
    d2d0:	bl	4e30 <sf_gen_pf_ruleset>
    d2d4:	str	r0, [sp, #32]
    d2d8:	b	ca48 <sfbpf_parse+0x5fc>
    d2dc:	ldr	r0, [r4]
    d2e0:	bl	4e44 <sf_gen_pf_rnr>
    d2e4:	str	r0, [sp, #32]
    d2e8:	b	ca48 <sfbpf_parse+0x5fc>
    d2ec:	ldr	r0, [r4]
    d2f0:	bl	4e58 <sf_gen_pf_srnr>
    d2f4:	str	r0, [sp, #32]
    d2f8:	b	ca48 <sfbpf_parse+0x5fc>
    d2fc:	ldr	r0, [r4]
    d300:	bl	4e6c <sf_gen_pf_reason>
    d304:	str	r0, [sp, #32]
    d308:	b	ca48 <sfbpf_parse+0x5fc>
    d30c:	ldr	r0, [r4]
    d310:	bl	4e80 <sf_gen_pf_action>
    d314:	str	r0, [sp, #32]
    d318:	b	ca48 <sfbpf_parse+0x5fc>
    d31c:	ldr	r0, [r4, #-32]	; 0xffffffe0
    d320:	mov	r1, #252	; 0xfc
    d324:	ldr	r3, [r4]
    d328:	orr	r0, r0, r3
    d32c:	bl	4e94 <sf_gen_p80211_type>
    d330:	str	r0, [sp, #32]
    d334:	b	ca48 <sfbpf_parse+0x5fc>
    d338:	mov	r1, #12
    d33c:	ldr	r0, [r4]
    d340:	bl	4e94 <sf_gen_p80211_type>
    d344:	str	r0, [sp, #32]
    d348:	b	ca48 <sfbpf_parse+0x5fc>
    d34c:	mov	r1, #252	; 0xfc
    d350:	ldr	r0, [r4]
    d354:	bl	4e94 <sf_gen_p80211_type>
    d358:	str	r0, [sp, #32]
    d35c:	b	ca48 <sfbpf_parse+0x5fc>
    d360:	ldr	r0, [r4]
    d364:	bl	4efc <sf_gen_p80211_fcdir>
    d368:	str	r0, [sp, #32]
    d36c:	b	ca48 <sfbpf_parse+0x5fc>
    d370:	ldr	r1, [pc, #284]	; d494 <sfbpf_parse+0x1048>
    d374:	ldr	r0, [r4]
    d378:	add	r1, pc, r1
    d37c:	add	r1, r1, #32
    d380:	bl	c40c <str2tok>
    d384:	cmn	r0, #1
    d388:	str	r0, [sp, #32]
    d38c:	bne	ca48 <sfbpf_parse+0x5fc>
    d390:	ldr	r0, [pc, #256]	; d498 <sfbpf_parse+0x104c>
    d394:	add	r0, pc, r0
    d398:	b	cc80 <sfbpf_parse+0x834>
    d39c:	ldr	r0, [r4, #-32]	; 0xffffffe0
    d3a0:	ldr	r2, [r3], #8
    d3a4:	cmp	r0, r2
    d3a8:	bne	caec <sfbpf_parse+0x6a0>
    d3ac:	ldr	r0, [r4]
    d3b0:	bl	c40c <str2tok>
    d3b4:	cmn	r0, #1
    d3b8:	str	r0, [sp, #32]
    d3bc:	bne	ca48 <sfbpf_parse+0x5fc>
    d3c0:	ldr	r0, [pc, #212]	; d49c <sfbpf_parse+0x1050>
    d3c4:	add	r0, pc, r0
    d3c8:	b	cc80 <sfbpf_parse+0x834>
    d3cc:	ldr	r2, [pc, #204]	; d4a0 <sfbpf_parse+0x1054>
    d3d0:	mov	r6, #0
    d3d4:	add	r2, pc, r2
    d3d8:	add	r3, r2, r6, lsl #3
    d3dc:	str	r2, [sp, #28]
    d3e0:	ldr	r1, [r3, #4]
    d3e4:	cmp	r1, #0
    d3e8:	beq	d390 <sfbpf_parse+0xf44>
    d3ec:	ldr	r0, [r4]
    d3f0:	bl	c40c <str2tok>
    d3f4:	cmn	r0, #1
    d3f8:	str	r0, [sp, #32]
    d3fc:	ldr	r2, [sp, #28]
    d400:	beq	d414 <sfbpf_parse+0xfc8>
    d404:	ldr	r3, [r2, r6, lsl #3]
    d408:	orr	r3, r3, r0
    d40c:	str	r3, [sp, #32]
    d410:	b	ca48 <sfbpf_parse+0x5fc>
    d414:	add	r6, r6, #1
    d418:	b	d3d8 <sfbpf_parse+0xf8c>
    d41c:	.word	0x00020b88
    d420:	.word	0x000000cc
    d424:	.word	0x000000b4
    d428:	.word	0x00006914
    d42c:	.word	0x00004824
    d430:	.word	0x000047c8
    d434:	.word	0x000047a4
    d438:	.word	0x000000f4
    d43c:	.word	0x00004744
    d440:	.word	0x00005886
    d444:	.word	0x00003e68
    d448:	.word	0x00021470
    d44c:	.word	0x000046e4
    d450:	.word	0x00004344
    d454:	.word	0x000062ec
    d458:	.word	0x00020278
    d45c:	.word	0x000054f4
    d460:	.word	0x000042b0
    d464:	.word	0x000052c3
    d468:	.word	0x000052d6
    d46c:	.word	0x000052ee
    d470:	.word	0x00005302
    d474:	.word	0x00003ed4
    d478:	.word	0x00003ea8
    d47c:	.word	0x00003e7c
    d480:	.word	0x00003e64
    d484:	.word	0x00003e44
    d488:	.word	0x00003e24
    d48c:	.word	0x00003e04
    d490:	.word	0x00003dec
    d494:	.word	0x0001f9e8
    d498:	.word	0x00004c43
    d49c:	.word	0x00004c40
    d4a0:	.word	0x0001f98c
    d4a4:	.word	0x00004b4c
    d4a8:	.word	0x00004b3a
    d4ac:	.word	0x00004b11
    d4b0:	.word	0x00004af8
    d4b4:	.word	0x00004ae3
    d4b8:	.word	0x000021e4
    d4bc:	.word	0x0000353c
    d4c0:	.word	0x00020238
    d4c4:	.word	0x0000474c
    d4c8:	.word	0x00002c1c
    d4cc:	ldr	r1, [pc, #-48]	; d4a4 <sfbpf_parse+0x1058>
    d4d0:	ldr	r6, [r4]
    d4d4:	add	r1, pc, r1
    d4d8:	mov	r0, r6
    d4dc:	bl	c234 <sfbpf_strcasecmp>
    d4e0:	cmp	r0, #0
    d4e4:	streq	r0, [sp, #32]
    d4e8:	beq	ca48 <sfbpf_parse+0x5fc>
    d4ec:	ldr	r1, [pc, #-76]	; d4a8 <sfbpf_parse+0x105c>
    d4f0:	mov	r0, r6
    d4f4:	add	r1, pc, r1
    d4f8:	bl	c234 <sfbpf_strcasecmp>
    d4fc:	cmp	r0, #0
    d500:	moveq	r3, #1
    d504:	streq	r3, [sp, #32]
    d508:	beq	ca48 <sfbpf_parse+0x5fc>
    d50c:	ldr	r1, [pc, #-104]	; d4ac <sfbpf_parse+0x1060>
    d510:	mov	r0, r6
    d514:	add	r1, pc, r1
    d518:	bl	c234 <sfbpf_strcasecmp>
    d51c:	cmp	r0, #0
    d520:	moveq	r3, #2
    d524:	streq	r3, [sp, #32]
    d528:	beq	ca48 <sfbpf_parse+0x5fc>
    d52c:	ldr	r1, [pc, #-132]	; d4b0 <sfbpf_parse+0x1064>
    d530:	mov	r0, r6
    d534:	add	r1, pc, r1
    d538:	bl	c234 <sfbpf_strcasecmp>
    d53c:	cmp	r0, #0
    d540:	moveq	r3, #3
    d544:	streq	r3, [sp, #32]
    d548:	beq	ca48 <sfbpf_parse+0x5fc>
    d54c:	ldr	r0, [pc, #-160]	; d4b4 <sfbpf_parse+0x1068>
    d550:	add	r0, pc, r0
    d554:	b	cc80 <sfbpf_parse+0x834>
    d558:	ldr	r3, [r4]
    d55c:	str	r3, [sp, #32]
    d560:	b	ca48 <sfbpf_parse+0x5fc>
    d564:	ldr	r0, [pc, #-180]	; d4b8 <sfbpf_parse+0x106c>
    d568:	add	r0, pc, r0
    d56c:	b	cc80 <sfbpf_parse+0x834>
    d570:	mov	r3, #32
    d574:	str	r3, [sp, #32]
    d578:	b	ca48 <sfbpf_parse+0x5fc>
    d57c:	mov	r3, #48	; 0x30
    d580:	str	r3, [sp, #32]
    d584:	b	ca48 <sfbpf_parse+0x5fc>
    d588:	mov	r3, #16
    d58c:	str	r3, [sp, #32]
    d590:	b	ca48 <sfbpf_parse+0x5fc>
    d594:	ldr	r0, [r4]
    d598:	bl	4ba8 <sf_gen_loadi>
    d59c:	str	r0, [sp, #32]
    d5a0:	b	ca48 <sfbpf_parse+0x5fc>
    d5a4:	mov	r2, #1
    d5a8:	ldr	r0, [r4, #-48]	; 0xffffffd0
    d5ac:	ldr	r1, [r4, #-16]
    d5b0:	bl	642c <sf_gen_load>
    d5b4:	str	r0, [sp, #32]
    d5b8:	b	ca48 <sfbpf_parse+0x5fc>
    d5bc:	ldr	r0, [r4, #-80]	; 0xffffffb0
    d5c0:	ldr	r1, [r4, #-48]	; 0xffffffd0
    d5c4:	ldr	r2, [r4, #-16]
    d5c8:	bl	642c <sf_gen_load>
    d5cc:	str	r0, [sp, #32]
    d5d0:	b	ca48 <sfbpf_parse+0x5fc>
    d5d4:	mov	r0, #0
    d5d8:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d5dc:	ldr	r2, [r4]
    d5e0:	bl	4c4c <sf_gen_arth>
    d5e4:	str	r0, [sp, #32]
    d5e8:	b	ca48 <sfbpf_parse+0x5fc>
    d5ec:	mov	r0, #16
    d5f0:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d5f4:	ldr	r2, [r4]
    d5f8:	bl	4c4c <sf_gen_arth>
    d5fc:	str	r0, [sp, #32]
    d600:	b	ca48 <sfbpf_parse+0x5fc>
    d604:	mov	r0, #32
    d608:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d60c:	ldr	r2, [r4]
    d610:	bl	4c4c <sf_gen_arth>
    d614:	str	r0, [sp, #32]
    d618:	b	ca48 <sfbpf_parse+0x5fc>
    d61c:	mov	r0, #48	; 0x30
    d620:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d624:	ldr	r2, [r4]
    d628:	bl	4c4c <sf_gen_arth>
    d62c:	str	r0, [sp, #32]
    d630:	b	ca48 <sfbpf_parse+0x5fc>
    d634:	mov	r0, #80	; 0x50
    d638:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d63c:	ldr	r2, [r4]
    d640:	bl	4c4c <sf_gen_arth>
    d644:	str	r0, [sp, #32]
    d648:	b	ca48 <sfbpf_parse+0x5fc>
    d64c:	mov	r0, #64	; 0x40
    d650:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d654:	ldr	r2, [r4]
    d658:	bl	4c4c <sf_gen_arth>
    d65c:	str	r0, [sp, #32]
    d660:	b	ca48 <sfbpf_parse+0x5fc>
    d664:	mov	r0, #96	; 0x60
    d668:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d66c:	ldr	r2, [r4]
    d670:	bl	4c4c <sf_gen_arth>
    d674:	str	r0, [sp, #32]
    d678:	b	ca48 <sfbpf_parse+0x5fc>
    d67c:	mov	r0, #112	; 0x70
    d680:	ldr	r1, [r4, #-32]	; 0xffffffe0
    d684:	ldr	r2, [r4]
    d688:	bl	4c4c <sf_gen_arth>
    d68c:	str	r0, [sp, #32]
    d690:	b	ca48 <sfbpf_parse+0x5fc>
    d694:	ldr	r0, [r4]
    d698:	bl	4bf0 <sf_gen_neg>
    d69c:	str	r0, [sp, #32]
    d6a0:	b	ca48 <sfbpf_parse+0x5fc>
    d6a4:	ldr	r3, [r4, #-16]
    d6a8:	str	r3, [sp, #32]
    d6ac:	b	ca48 <sfbpf_parse+0x5fc>
    d6b0:	bl	4b64 <sf_gen_loadlen>
    d6b4:	str	r0, [sp, #32]
    d6b8:	b	ca48 <sfbpf_parse+0x5fc>
    d6bc:	mov	r3, #38	; 0x26
    d6c0:	str	r3, [sp, #32]
    d6c4:	b	ca48 <sfbpf_parse+0x5fc>
    d6c8:	mov	r3, #124	; 0x7c
    d6cc:	str	r3, [sp, #32]
    d6d0:	b	ca48 <sfbpf_parse+0x5fc>
    d6d4:	mov	r3, #60	; 0x3c
    d6d8:	str	r3, [sp, #32]
    d6dc:	b	ca48 <sfbpf_parse+0x5fc>
    d6e0:	mov	r3, #62	; 0x3e
    d6e4:	str	r3, [sp, #32]
    d6e8:	b	ca48 <sfbpf_parse+0x5fc>
    d6ec:	mov	r3, #61	; 0x3d
    d6f0:	str	r3, [sp, #32]
    d6f4:	b	ca48 <sfbpf_parse+0x5fc>
    d6f8:	ldr	r3, [r4, #-16]
    d6fc:	str	r3, [sp, #32]
    d700:	b	ca48 <sfbpf_parse+0x5fc>
    d704:	mov	r3, #30
    d708:	str	r3, [sp, #32]
    d70c:	b	ca48 <sfbpf_parse+0x5fc>
    d710:	mov	r3, #31
    d714:	str	r3, [sp, #32]
    d718:	b	ca48 <sfbpf_parse+0x5fc>
    d71c:	mov	r3, #25
    d720:	str	r3, [sp, #32]
    d724:	b	ca48 <sfbpf_parse+0x5fc>
    d728:	mov	r3, #26
    d72c:	str	r3, [sp, #32]
    d730:	b	ca48 <sfbpf_parse+0x5fc>
    d734:	mov	r3, #27
    d738:	str	r3, [sp, #32]
    d73c:	b	ca48 <sfbpf_parse+0x5fc>
    d740:	mov	r3, #28
    d744:	str	r3, [sp, #32]
    d748:	b	ca48 <sfbpf_parse+0x5fc>
    d74c:	mov	r3, #29
    d750:	str	r3, [sp, #32]
    d754:	b	ca48 <sfbpf_parse+0x5fc>
    d758:	mov	r3, #70	; 0x46
    d75c:	str	r3, [sp, #32]
    d760:	b	ca48 <sfbpf_parse+0x5fc>
    d764:	mov	r3, #71	; 0x47
    d768:	str	r3, [sp, #32]
    d76c:	b	ca48 <sfbpf_parse+0x5fc>
    d770:	mov	r8, #52	; 0x34
    d774:	b	ca48 <sfbpf_parse+0x5fc>
    d778:	mov	r3, #0
    d77c:	ldr	r0, [r4, #-28]	; 0xffffffe4
    d780:	ldr	r2, [r4, #-16]
    d784:	ldr	r1, [r4]
    d788:	bl	50b8 <sf_gen_atmfield_code>
    d78c:	mov	r5, r0
    d790:	b	ca48 <sfbpf_parse+0x5fc>
    d794:	mov	r3, #1
    d798:	ldr	r0, [r4, #-28]	; 0xffffffe4
    d79c:	ldr	r2, [r4, #-16]
    d7a0:	ldr	r1, [r4]
    d7a4:	bl	50b8 <sf_gen_atmfield_code>
    d7a8:	mov	r5, r0
    d7ac:	b	ca48 <sfbpf_parse+0x5fc>
    d7b0:	ldr	r8, [r4, #-12]
    d7b4:	sub	r3, r8, #51	; 0x33
    d7b8:	cmp	r3, #1
    d7bc:	bhi	ca48 <sfbpf_parse+0x5fc>
    d7c0:	mov	r3, #0
    d7c4:	mov	r2, #16
    d7c8:	ldr	r1, [r4]
    d7cc:	mov	r0, r8
    d7d0:	bl	50b8 <sf_gen_atmfield_code>
    d7d4:	mov	r5, r0
    d7d8:	b	ca48 <sfbpf_parse+0x5fc>
    d7dc:	ldr	r0, [r4, #-20]	; 0xffffffec
    d7e0:	ldr	r5, [r4, #12]
    d7e4:	mov	r1, r5
    d7e8:	bl	2cc8 <sf_gen_or>
    d7ec:	ldm	r4, {r0, r1, r2, r3}
    d7f0:	add	ip, sp, #32
    d7f4:	mov	r8, r1
    d7f8:	mov	r7, r2
    d7fc:	stm	ip, {r0, r1, r2, r3}
    d800:	b	ca48 <sfbpf_parse+0x5fc>
    d804:	mov	r3, #22
    d808:	str	r3, [sp, #32]
    d80c:	b	ca48 <sfbpf_parse+0x5fc>
    d810:	mov	r3, #23
    d814:	str	r3, [sp, #32]
    d818:	b	ca48 <sfbpf_parse+0x5fc>
    d81c:	mov	r3, #24
    d820:	str	r3, [sp, #32]
    d824:	b	ca48 <sfbpf_parse+0x5fc>
    d828:	mov	r7, #1
    d82c:	b	ca48 <sfbpf_parse+0x5fc>
    d830:	mov	r7, #2
    d834:	b	ca48 <sfbpf_parse+0x5fc>
    d838:	mov	r7, #3
    d83c:	b	ca48 <sfbpf_parse+0x5fc>
    d840:	mov	r7, #4
    d844:	b	ca48 <sfbpf_parse+0x5fc>
    d848:	mov	r3, #0
    d84c:	ldr	r0, [r4, #-24]	; 0xffffffe8
    d850:	ldr	r2, [r4, #-16]
    d854:	ldr	r1, [r4]
    d858:	bl	9384 <sf_gen_mtp3field_code>
    d85c:	mov	r5, r0
    d860:	b	ca48 <sfbpf_parse+0x5fc>
    d864:	mov	r3, #1
    d868:	ldr	r0, [r4, #-24]	; 0xffffffe8
    d86c:	ldr	r2, [r4, #-16]
    d870:	ldr	r1, [r4]
    d874:	bl	9384 <sf_gen_mtp3field_code>
    d878:	mov	r5, r0
    d87c:	b	ca48 <sfbpf_parse+0x5fc>
    d880:	ldr	r3, [pc, #-972]	; d4bc <sfbpf_parse+0x1070>
    d884:	ldr	r5, [r4, #-4]
    d888:	add	r3, pc, r3
    d88c:	ldr	r0, [r3, #4071]	; 0xfe7
    d890:	str	r0, [sp, #32]
    d894:	b	ca48 <sfbpf_parse+0x5fc>
    d898:	ldr	r7, [r4, #-8]
    d89c:	sub	r3, r7, #1
    d8a0:	cmp	r3, #3
    d8a4:	bhi	ca48 <sfbpf_parse+0x5fc>
    d8a8:	mov	r3, #0
    d8ac:	mov	r2, #16
    d8b0:	ldr	r1, [r4]
    d8b4:	mov	r0, r7
    d8b8:	bl	9384 <sf_gen_mtp3field_code>
    d8bc:	mov	r5, r0
    d8c0:	b	ca48 <sfbpf_parse+0x5fc>
    d8c4:	ldr	r0, [r4, #-20]	; 0xffffffec
    d8c8:	ldr	r5, [r4, #12]
    d8cc:	mov	r1, r5
    d8d0:	bl	2cc8 <sf_gen_or>
    d8d4:	ldm	r4, {r0, r1, r2, r3}
    d8d8:	add	ip, sp, #32
    d8dc:	mov	r8, r1
    d8e0:	mov	r7, r2
    d8e4:	stm	ip, {r0, r1, r2, r3}
    d8e8:	b	ca48 <sfbpf_parse+0x5fc>
    d8ec:	ldr	r2, [pc, #-1076]	; d4c0 <sfbpf_parse+0x1074>
    d8f0:	ldr	r1, [pc, #-1076]	; d4c4 <sfbpf_parse+0x1078>
    d8f4:	ldr	r0, [pc, #-1076]	; d4c8 <sfbpf_parse+0x107c>
    d8f8:	add	r2, pc, r2
    d8fc:	ldr	r3, [r2]
    d900:	add	r1, pc, r1
    d904:	add	r0, pc, r0
    d908:	add	r3, r3, #1
    d90c:	str	r3, [r2]
    d910:	b	c6d0 <sfbpf_parse+0x284>
    d914:	add	r3, sp, #48	; 0x30
    d918:	mov	r4, #0
    d91c:	cmp	sl, r3
    d920:	beq	d92c <sfbpf_parse+0x14e0>
    d924:	mov	r0, sl
    d928:	bl	d68 <free@plt>
    d92c:	mov	r0, r4
    d930:	add	sp, sp, #3648	; 0xe40
    d934:	add	sp, sp, #4
    d938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d93c:	mov	sl, r8
    d940:	mov	r4, #1
    d944:	b	d924 <sfbpf_parse+0x14d8>

0000d948 <yy_get_previous_state>:
    d948:	ldr	r3, [pc, #280]	; da68 <yy_get_previous_state+0x120>
    d94c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d950:	sub	sp, sp, #20
    d954:	mov	r5, #0
    d958:	ldr	r2, [pc, #268]	; da6c <yy_get_previous_state+0x124>
    d95c:	add	r3, pc, r3
    d960:	ldrd	r0, [r3]
    d964:	ldr	r4, [r3, #8]
    d968:	add	r2, pc, r2
    d96c:	ldr	lr, [r3, #12]
    d970:	str	r1, [sp, #4]
    d974:	ldr	r3, [pc, #244]	; da70 <yy_get_previous_state+0x128>
    d978:	ldr	r7, [pc, #244]	; da74 <yy_get_previous_state+0x12c>
    d97c:	ldr	r1, [pc, #244]	; da78 <yy_get_previous_state+0x130>
    d980:	ldr	r3, [r2, r3]
    d984:	add	r7, pc, r7
    d988:	sub	r6, r7, #1216	; 0x4c0
    d98c:	add	r1, pc, r1
    d990:	sub	r6, r6, #2
    d994:	add	r1, r1, #3120	; 0xc30
    d998:	ldr	ip, [r3]
    d99c:	add	r1, r1, #4
    d9a0:	ldr	r3, [pc, #212]	; da7c <yy_get_previous_state+0x134>
    d9a4:	add	r3, pc, r3
    d9a8:	str	r3, [sp, #8]
    d9ac:	ldr	r3, [pc, #204]	; da80 <yy_get_previous_state+0x138>
    d9b0:	add	r3, pc, r3
    d9b4:	add	r3, r3, #256	; 0x100
    d9b8:	str	r3, [sp, #12]
    d9bc:	ldr	r3, [sp, #4]
    d9c0:	mov	r8, ip
    d9c4:	cmp	r3, ip
    d9c8:	bhi	d9ec <yy_get_previous_state+0xa4>
    d9cc:	cmp	r5, #0
    d9d0:	beq	d9e4 <yy_get_previous_state+0x9c>
    d9d4:	ldr	r3, [pc, #168]	; da84 <yy_get_previous_state+0x13c>
    d9d8:	add	r3, pc, r3
    d9dc:	str	r4, [r3, #8]
    d9e0:	str	lr, [r3, #12]
    d9e4:	add	sp, sp, #20
    d9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d9ec:	ldrb	r3, [ip], #1
    d9f0:	movw	fp, #1433	; 0x599
    d9f4:	ldr	r9, [sp, #12]
    d9f8:	ldr	sl, [pc, #136]	; da88 <yy_get_previous_state+0x140>
    d9fc:	cmp	r3, #0
    da00:	ldrne	r2, [sp, #8]
    da04:	moveq	r2, #1
    da08:	add	sl, pc, sl
    da0c:	ldrbne	r2, [r2, r3]
    da10:	lsl	r3, r0, #1
    da14:	ldrsh	r3, [r9, r3]
    da18:	cmp	r3, #0
    da1c:	movne	lr, r8
    da20:	movne	r4, r0
    da24:	movne	r5, #1
    da28:	lsl	r8, r0, #1
    da2c:	ldrsh	r3, [r6, r8]
    da30:	add	r3, r3, r2
    da34:	lsl	r3, r3, #1
    da38:	ldrsh	r9, [sl, r3]
    da3c:	cmp	r9, r0
    da40:	bne	da54 <yy_get_previous_state+0x10c>
    da44:	ldr	r2, [pc, #64]	; da8c <yy_get_previous_state+0x144>
    da48:	add	r2, pc, r2
    da4c:	ldrsh	r0, [r2, r3]
    da50:	b	d9bc <yy_get_previous_state+0x74>
    da54:	ldrsh	r0, [r1, r8]
    da58:	cmp	r0, fp
    da5c:	addgt	r2, r7, r2
    da60:	ldrbgt	r2, [r2, #-1272]	; 0xfffffb08
    da64:	b	da28 <yy_get_previous_state+0xe0>
    da68:	.word	0x000201d8
    da6c:	.word	0x0001f690
    da70:	.word	0x000000dc
    da74:	.word	0x00006806
    da78:	.word	0x00004806
    da7c:	.word	0x000047ee
    da80:	.word	0x000047e2
    da84:	.word	0x0002015c
    da88:	.word	0x0000718c
    da8c:	.word	0x0000ab8a

0000da90 <sfbpf__load_buffer_state>:
    da90:	ldr	r3, [pc, #76]	; dae4 <sfbpf__load_buffer_state+0x54>
    da94:	push	{lr}		; (str lr, [sp, #-4]!)
    da98:	ldr	ip, [pc, #72]	; dae8 <sfbpf__load_buffer_state+0x58>
    da9c:	add	r3, pc, r3
    daa0:	ldr	r1, [r3, #16]
    daa4:	ldr	r0, [r3, #20]
    daa8:	add	ip, pc, ip
    daac:	ldr	r2, [r1, r0, lsl #2]
    dab0:	ldr	lr, [r2, #16]
    dab4:	ldr	r2, [r2, #8]
    dab8:	str	lr, [r3, #24]
    dabc:	ldr	lr, [pc, #40]	; daec <sfbpf__load_buffer_state+0x5c>
    dac0:	str	r2, [r3, #4]
    dac4:	ldr	ip, [ip, lr]
    dac8:	str	r2, [ip]
    dacc:	ldr	r1, [r1, r0, lsl #2]
    dad0:	ldr	r1, [r1]
    dad4:	str	r1, [r3, #28]
    dad8:	ldrb	r2, [r2]
    dadc:	strb	r2, [r3, #32]
    dae0:	pop	{pc}		; (ldr pc, [sp], #4)
    dae4:	.word	0x00020098
    dae8:	.word	0x0001f550
    daec:	.word	0x000000dc

0000daf0 <yy_fatal_error>:
    daf0:	ldr	r3, [pc, #40]	; db20 <yy_fatal_error+0x30>
    daf4:	push	{r4, lr}
    daf8:	ldr	r2, [pc, #36]	; db24 <yy_fatal_error+0x34>
    dafc:	add	r3, pc, r3
    db00:	ldr	r1, [pc, #32]	; db28 <yy_fatal_error+0x38>
    db04:	ldr	r3, [r3, r2]
    db08:	mov	r2, r0
    db0c:	add	r1, pc, r1
    db10:	ldr	r0, [r3]
    db14:	bl	e34 <fprintf@plt>
    db18:	mov	r0, #2
    db1c:	bl	e10 <exit@plt>
    db20:	.word	0x0001f4fc
    db24:	.word	0x000000d4
    db28:	.word	0x000018ff

0000db2c <sfbpf_ensure_buffer_stack>:
    db2c:	push	{r4, r5, r6, r7, r8, lr}
    db30:	ldr	r4, [pc, #144]	; dbc8 <sfbpf_ensure_buffer_stack+0x9c>
    db34:	add	r4, pc, r4
    db38:	ldr	r7, [r4, #16]
    db3c:	cmp	r7, #0
    db40:	bne	db78 <sfbpf_ensure_buffer_stack+0x4c>
    db44:	mov	r0, #4
    db48:	bl	dec <malloc@plt>
    db4c:	cmp	r0, #0
    db50:	str	r0, [r4, #16]
    db54:	bne	db64 <sfbpf_ensure_buffer_stack+0x38>
    db58:	ldr	r0, [pc, #108]	; dbcc <sfbpf_ensure_buffer_stack+0xa0>
    db5c:	add	r0, pc, r0
    db60:	bl	daf0 <yy_fatal_error>
    db64:	mov	r3, #1
    db68:	str	r7, [r0]
    db6c:	str	r7, [r4, #20]
    db70:	str	r3, [r4, #36]	; 0x24
    db74:	pop	{r4, r5, r6, r7, r8, pc}
    db78:	ldr	r3, [r4, #20]
    db7c:	ldr	r5, [r4, #36]	; 0x24
    db80:	sub	r2, r5, #1
    db84:	cmp	r2, r3
    db88:	pophi	{r4, r5, r6, r7, r8, pc}
    db8c:	add	r5, r5, #8
    db90:	mov	r0, r7
    db94:	lsl	r6, r5, #2
    db98:	mov	r1, r6
    db9c:	bl	db0 <realloc@plt>
    dba0:	cmp	r0, #0
    dba4:	str	r0, [r4, #16]
    dba8:	beq	db58 <sfbpf_ensure_buffer_stack+0x2c>
    dbac:	sub	r6, r6, #32
    dbb0:	mov	r2, #32
    dbb4:	mov	r1, #0
    dbb8:	add	r0, r0, r6
    dbbc:	bl	e58 <memset@plt>
    dbc0:	str	r5, [r4, #36]	; 0x24
    dbc4:	pop	{r4, r5, r6, r7, r8, pc}
    dbc8:	.word	0x00020000
    dbcc:	.word	0x0000e4b4

0000dbd0 <sfbpf__switch_to_buffer>:
    dbd0:	push	{r4, lr}
    dbd4:	mov	r4, r0
    dbd8:	bl	db2c <sfbpf_ensure_buffer_stack>
    dbdc:	ldr	r2, [pc, #104]	; dc4c <sfbpf__switch_to_buffer+0x7c>
    dbe0:	add	r2, pc, r2
    dbe4:	ldr	r3, [r2, #16]
    dbe8:	cmp	r3, #0
    dbec:	beq	dc40 <sfbpf__switch_to_buffer+0x70>
    dbf0:	ldr	r1, [r2, #20]
    dbf4:	ldr	r0, [r3, r1, lsl #2]
    dbf8:	cmp	r0, r4
    dbfc:	popeq	{r4, pc}
    dc00:	cmp	r0, #0
    dc04:	beq	dc28 <sfbpf__switch_to_buffer+0x58>
    dc08:	ldrb	ip, [r2, #32]
    dc0c:	ldr	r0, [r2, #4]
    dc10:	ldr	r2, [r2, #24]
    dc14:	strb	ip, [r0]
    dc18:	ldr	ip, [r3, r1, lsl #2]
    dc1c:	str	r0, [ip, #8]
    dc20:	ldr	r1, [r3, r1, lsl #2]
    dc24:	str	r2, [r1, #16]
    dc28:	ldr	r2, [pc, #32]	; dc50 <sfbpf__switch_to_buffer+0x80>
    dc2c:	add	r2, pc, r2
    dc30:	ldr	r2, [r2, #20]
    dc34:	str	r4, [r3, r2, lsl #2]
    dc38:	pop	{r4, lr}
    dc3c:	b	da90 <sfbpf__load_buffer_state>
    dc40:	cmp	r4, #0
    dc44:	bne	dc28 <sfbpf__switch_to_buffer+0x58>
    dc48:	pop	{r4, pc}
    dc4c:	.word	0x0001ff54
    dc50:	.word	0x0001ff08

0000dc54 <sfbpf__delete_buffer>:
    dc54:	push	{r4, lr}
    dc58:	subs	r4, r0, #0
    dc5c:	popeq	{r4, pc}
    dc60:	ldr	r2, [pc, #64]	; dca8 <sfbpf__delete_buffer+0x54>
    dc64:	add	r2, pc, r2
    dc68:	ldr	r3, [r2, #16]
    dc6c:	cmp	r3, #0
    dc70:	beq	dc88 <sfbpf__delete_buffer+0x34>
    dc74:	ldr	r2, [r2, #20]
    dc78:	ldr	r1, [r3, r2, lsl #2]
    dc7c:	cmp	r4, r1
    dc80:	moveq	r1, #0
    dc84:	streq	r1, [r3, r2, lsl #2]
    dc88:	ldr	r3, [r4, #20]
    dc8c:	cmp	r3, #0
    dc90:	beq	dc9c <sfbpf__delete_buffer+0x48>
    dc94:	ldr	r0, [r4, #4]
    dc98:	bl	d68 <free@plt>
    dc9c:	mov	r0, r4
    dca0:	pop	{r4, lr}
    dca4:	b	d68 <free@plt>
    dca8:	.word	0x0001fed0

0000dcac <sfbpf__flush_buffer>:
    dcac:	cmp	r0, #0
    dcb0:	bxeq	lr
    dcb4:	mov	r3, #0
    dcb8:	ldr	r2, [r0, #4]
    dcbc:	str	r3, [r0, #16]
    dcc0:	strb	r3, [r2]
    dcc4:	ldr	r2, [r0, #4]
    dcc8:	strb	r3, [r2, #1]
    dccc:	ldr	r2, [r0, #4]
    dcd0:	str	r2, [r0, #8]
    dcd4:	mov	r2, #1
    dcd8:	str	r3, [r0, #44]	; 0x2c
    dcdc:	str	r2, [r0, #28]
    dce0:	ldr	r2, [pc, #32]	; dd08 <sfbpf__flush_buffer+0x5c>
    dce4:	add	r2, pc, r2
    dce8:	ldr	r3, [r2, #16]
    dcec:	cmp	r3, #0
    dcf0:	bxeq	lr
    dcf4:	ldr	r2, [r2, #20]
    dcf8:	ldr	r3, [r3, r2, lsl #2]
    dcfc:	cmp	r0, r3
    dd00:	bxne	lr
    dd04:	b	da90 <sfbpf__load_buffer_state>
    dd08:	.word	0x0001fe50

0000dd0c <sfbpf__init_buffer>:
    dd0c:	push	{r4, r5, r6, r7, r8, lr}
    dd10:	mov	r4, r0
    dd14:	mov	r5, r1
    dd18:	bl	e40 <__errno_location@plt>
    dd1c:	mov	r6, r0
    dd20:	ldr	r7, [r0]
    dd24:	mov	r0, r4
    dd28:	bl	dcac <sfbpf__flush_buffer>
    dd2c:	ldr	r2, [pc, #96]	; dd94 <sfbpf__init_buffer+0x88>
    dd30:	mov	r3, #1
    dd34:	str	r5, [r4]
    dd38:	str	r3, [r4, #40]	; 0x28
    dd3c:	add	r2, pc, r2
    dd40:	ldr	r3, [r2, #16]
    dd44:	cmp	r3, #0
    dd48:	beq	dd5c <sfbpf__init_buffer+0x50>
    dd4c:	ldr	r2, [r2, #20]
    dd50:	ldr	r3, [r3, r2, lsl #2]
    dd54:	cmp	r4, r3
    dd58:	beq	dd68 <sfbpf__init_buffer+0x5c>
    dd5c:	mov	r0, #1
    dd60:	mov	r1, #0
    dd64:	strd	r0, [r4, #32]
    dd68:	cmp	r5, #0
    dd6c:	beq	dd88 <sfbpf__init_buffer+0x7c>
    dd70:	mov	r0, r5
    dd74:	bl	e7c <fileno@plt>
    dd78:	bl	edc <isatty@plt>
    dd7c:	cmp	r0, #0
    dd80:	movle	r5, #0
    dd84:	movgt	r5, #1
    dd88:	str	r5, [r4, #24]
    dd8c:	str	r7, [r6]
    dd90:	pop	{r4, r5, r6, r7, r8, pc}
    dd94:	.word	0x0001fdf8

0000dd98 <sfbpf__create_buffer>:
    dd98:	push	{r4, r5, r6, lr}
    dd9c:	mov	r6, r0
    dda0:	mov	r0, #48	; 0x30
    dda4:	mov	r5, r1
    dda8:	bl	dec <malloc@plt>
    ddac:	subs	r4, r0, #0
    ddb0:	bne	ddc0 <sfbpf__create_buffer+0x28>
    ddb4:	ldr	r0, [pc, #56]	; ddf4 <sfbpf__create_buffer+0x5c>
    ddb8:	add	r0, pc, r0
    ddbc:	bl	daf0 <yy_fatal_error>
    ddc0:	add	r0, r5, #2
    ddc4:	str	r5, [r4, #12]
    ddc8:	bl	dec <malloc@plt>
    ddcc:	cmp	r0, #0
    ddd0:	str	r0, [r4, #4]
    ddd4:	beq	ddb4 <sfbpf__create_buffer+0x1c>
    ddd8:	mov	r3, #1
    dddc:	mov	r0, r4
    dde0:	mov	r1, r6
    dde4:	str	r3, [r4, #20]
    dde8:	bl	dd0c <sfbpf__init_buffer>
    ddec:	mov	r0, r4
    ddf0:	pop	{r4, r5, r6, pc}
    ddf4:	.word	0x0000e289

0000ddf8 <sfbpf_restart>:
    ddf8:	ldr	r2, [pc, #112]	; de70 <sfbpf_restart+0x78>
    ddfc:	push	{r4, r5, r6, lr}
    de00:	mov	r4, r0
    de04:	add	r2, pc, r2
    de08:	ldr	r3, [r2, #16]
    de0c:	cmp	r3, #0
    de10:	beq	de24 <sfbpf_restart+0x2c>
    de14:	ldr	r2, [r2, #20]
    de18:	ldr	r3, [r3, r2, lsl #2]
    de1c:	cmp	r3, #0
    de20:	bne	de48 <sfbpf_restart+0x50>
    de24:	bl	db2c <sfbpf_ensure_buffer_stack>
    de28:	ldr	r3, [pc, #68]	; de74 <sfbpf_restart+0x7c>
    de2c:	mov	r1, #16384	; 0x4000
    de30:	add	r3, pc, r3
    de34:	ldr	r5, [r3, #16]
    de38:	ldr	r6, [r3, #20]
    de3c:	ldr	r0, [r3, #28]
    de40:	bl	dd98 <sfbpf__create_buffer>
    de44:	str	r0, [r5, r6, lsl #2]
    de48:	ldr	r3, [pc, #40]	; de78 <sfbpf_restart+0x80>
    de4c:	mov	r1, r4
    de50:	add	r3, pc, r3
    de54:	ldr	r0, [r3, #16]
    de58:	cmp	r0, #0
    de5c:	ldrne	r3, [r3, #20]
    de60:	ldrne	r0, [r0, r3, lsl #2]
    de64:	bl	dd0c <sfbpf__init_buffer>
    de68:	pop	{r4, r5, r6, lr}
    de6c:	b	da90 <sfbpf__load_buffer_state>
    de70:	.word	0x0001fd30
    de74:	.word	0x0001fd04
    de78:	.word	0x0001fce4

0000de7c <sfbpf_lex>:
    de7c:	ldr	r3, [pc, #3920]	; edd4 <sfbpf_lex+0xf58>
    de80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    de84:	sub	sp, sp, #76	; 0x4c
    de88:	ldr	r4, [pc, #3912]	; edd8 <sfbpf_lex+0xf5c>
    de8c:	add	r3, pc, r3
    de90:	ldr	r2, [r3, #40]	; 0x28
    de94:	add	r4, pc, r4
    de98:	cmp	r2, #0
    de9c:	bne	df48 <sfbpf_lex+0xcc>
    dea0:	ldr	r1, [r3]
    dea4:	mov	r2, #1
    dea8:	str	r2, [r3, #40]	; 0x28
    deac:	cmp	r1, #0
    deb0:	streq	r2, [r3]
    deb4:	ldr	r3, [pc, #3872]	; eddc <sfbpf_lex+0xf60>
    deb8:	add	r3, pc, r3
    debc:	ldr	r2, [r3, #28]
    dec0:	cmp	r2, #0
    dec4:	bne	ded8 <sfbpf_lex+0x5c>
    dec8:	ldr	r2, [pc, #3856]	; ede0 <sfbpf_lex+0xf64>
    decc:	ldr	r2, [r4, r2]
    ded0:	ldr	r2, [r2]
    ded4:	str	r2, [r3, #28]
    ded8:	ldr	r3, [pc, #3844]	; ede4 <sfbpf_lex+0xf68>
    dedc:	add	r3, pc, r3
    dee0:	ldr	r2, [r3, #44]	; 0x2c
    dee4:	cmp	r2, #0
    dee8:	bne	defc <sfbpf_lex+0x80>
    deec:	ldr	r2, [pc, #3828]	; ede8 <sfbpf_lex+0xf6c>
    def0:	ldr	r2, [r4, r2]
    def4:	ldr	r2, [r2]
    def8:	str	r2, [r3, #44]	; 0x2c
    defc:	ldr	r2, [pc, #3816]	; edec <sfbpf_lex+0xf70>
    df00:	add	r2, pc, r2
    df04:	ldr	r3, [r2, #16]
    df08:	cmp	r3, #0
    df0c:	beq	df20 <sfbpf_lex+0xa4>
    df10:	ldr	r2, [r2, #20]
    df14:	ldr	r3, [r3, r2, lsl #2]
    df18:	cmp	r3, #0
    df1c:	bne	df44 <sfbpf_lex+0xc8>
    df20:	bl	db2c <sfbpf_ensure_buffer_stack>
    df24:	ldr	r3, [pc, #3780]	; edf0 <sfbpf_lex+0xf74>
    df28:	mov	r1, #16384	; 0x4000
    df2c:	add	r3, pc, r3
    df30:	ldr	r5, [r3, #16]
    df34:	ldr	r6, [r3, #20]
    df38:	ldr	r0, [r3, #28]
    df3c:	bl	dd98 <sfbpf__create_buffer>
    df40:	str	r0, [r5, r6, lsl #2]
    df44:	bl	da90 <sfbpf__load_buffer_state>
    df48:	ldr	r3, [pc, #3748]	; edf4 <sfbpf_lex+0xf78>
    df4c:	add	r3, pc, r3
    df50:	add	r3, r3, #3120	; 0xc30
    df54:	add	r3, r3, #4
    df58:	str	r3, [sp, #12]
    df5c:	ldr	r3, [pc, #3732]	; edf8 <sfbpf_lex+0xf7c>
    df60:	add	r3, pc, r3
    df64:	ldrb	r2, [r3, #32]
    df68:	ldm	r3, {r0, r5}
    df6c:	strb	r2, [r5]
    df70:	str	r5, [sp]
    df74:	ldr	r8, [pc, #3712]	; edfc <sfbpf_lex+0xf80>
    df78:	mov	r7, #0
    df7c:	ldr	r9, [pc, #3708]	; ee00 <sfbpf_lex+0xf84>
    df80:	ldr	r3, [pc, #3708]	; ee04 <sfbpf_lex+0xf88>
    df84:	add	r8, pc, r8
    df88:	add	r2, r8, #256	; 0x100
    df8c:	add	r9, pc, r9
    df90:	str	r2, [sp, #4]
    df94:	sub	ip, r9, #1216	; 0x4c0
    df98:	ldr	r2, [pc, #3688]	; ee08 <sfbpf_lex+0xf8c>
    df9c:	add	r3, pc, r3
    dfa0:	sub	ip, ip, #2
    dfa4:	ldr	lr, [r3, #8]
    dfa8:	ldr	r6, [r3, #12]
    dfac:	mov	r3, r5
    dfb0:	add	r2, pc, r2
    dfb4:	str	r2, [sp, #8]
    dfb8:	ldr	r2, [pc, #3660]	; ee0c <sfbpf_lex+0xf90>
    dfbc:	add	r2, pc, r2
    dfc0:	str	r2, [sp, #16]
    dfc4:	ldr	sl, [sp, #4]
    dfc8:	lsl	r5, r0, #1
    dfcc:	mov	r2, r3
    dfd0:	movw	fp, #1433	; 0x599
    dfd4:	add	r3, r3, #1
    dfd8:	ldrb	r1, [r3, #-1]
    dfdc:	ldrsh	r5, [sl, r5]
    dfe0:	ldrb	r1, [r8, r1]
    dfe4:	cmp	r5, #0
    dfe8:	movne	lr, r0
    dfec:	movne	r6, r2
    dff0:	movne	r7, #1
    dff4:	lsl	r5, r0, #1
    dff8:	ldr	sl, [sp, #8]
    dffc:	ldrsh	r2, [ip, r5]
    e000:	add	r2, r2, r1
    e004:	lsl	r2, r2, #1
    e008:	ldrsh	sl, [sl, r2]
    e00c:	cmp	sl, r0
    e010:	bne	e348 <sfbpf_lex+0x4cc>
    e014:	ldr	r1, [sp, #16]
    e018:	mov	r5, r3
    e01c:	ldrsh	r0, [r1, r2]
    e020:	lsl	r2, r0, #1
    e024:	ldrsh	r1, [ip, r2]
    e028:	movw	r2, #7401	; 0x1ce9
    e02c:	cmp	r1, r2
    e030:	bne	dfc4 <sfbpf_lex+0x148>
    e034:	cmp	r7, #0
    e038:	beq	e04c <sfbpf_lex+0x1d0>
    e03c:	ldr	r3, [pc, #3532]	; ee10 <sfbpf_lex+0xf94>
    e040:	add	r3, pc, r3
    e044:	str	lr, [r3, #8]
    e048:	str	r6, [r3, #12]
    e04c:	ldr	r3, [pc, #3520]	; ee14 <sfbpf_lex+0xf98>
    e050:	add	r3, pc, r3
    e054:	add	r3, r3, #3120	; 0xc30
    e058:	add	r3, r3, #4
    e05c:	str	r3, [sp, #8]
    e060:	ldr	r2, [pc, #3504]	; ee18 <sfbpf_lex+0xf9c>
    e064:	lsl	r0, r0, #1
    e068:	add	r2, pc, r2
    e06c:	add	r2, r2, #256	; 0x100
    e070:	ldrsh	r3, [r2, r0]
    e074:	cmp	r3, #0
    e078:	bne	e094 <sfbpf_lex+0x218>
    e07c:	ldr	r3, [pc, #3480]	; ee1c <sfbpf_lex+0xfa0>
    e080:	add	r3, pc, r3
    e084:	ldr	r5, [r3, #12]
    e088:	ldr	r3, [r3, #8]
    e08c:	lsl	r3, r3, #1
    e090:	ldrsh	r3, [r2, r3]
    e094:	ldr	r2, [pc, #3460]	; ee20 <sfbpf_lex+0xfa4>
    e098:	ldr	sl, [pc, #3460]	; ee24 <sfbpf_lex+0xfa8>
    e09c:	ldr	r6, [r4, r2]
    e0a0:	ldr	r2, [sp]
    e0a4:	add	sl, pc, sl
    e0a8:	str	r2, [r6]
    e0ac:	ldr	r2, [pc, #3444]	; ee28 <sfbpf_lex+0xfac>
    e0b0:	ldr	r2, [r4, r2]
    e0b4:	str	r2, [sp, #20]
    e0b8:	ldr	r2, [sp]
    e0bc:	ldr	r1, [sp, #20]
    e0c0:	sub	r2, r5, r2
    e0c4:	str	r2, [r1]
    e0c8:	ldr	r2, [pc, #3420]	; ee2c <sfbpf_lex+0xfb0>
    e0cc:	ldrb	r1, [r5]
    e0d0:	add	r2, pc, r2
    e0d4:	str	r5, [r2, #4]
    e0d8:	strb	r1, [r2, #32]
    e0dc:	mov	r1, #0
    e0e0:	ldr	r2, [pc, #3400]	; ee30 <sfbpf_lex+0xfb4>
    e0e4:	strb	r1, [r5]
    e0e8:	add	r2, pc, r2
    e0ec:	str	r2, [sp, #4]
    e0f0:	cmp	r3, #146	; 0x92
    e0f4:	addls	pc, pc, r3, lsl #2
    e0f8:	b	f06c <sfbpf_lex+0x11f0>
    e0fc:	b	e36c <sfbpf_lex+0x4f0>
    e100:	b	f078 <sfbpf_lex+0x11fc>
    e104:	b	e360 <sfbpf_lex+0x4e4>
    e108:	b	f080 <sfbpf_lex+0x1204>
    e10c:	b	f080 <sfbpf_lex+0x1204>
    e110:	b	e388 <sfbpf_lex+0x50c>
    e114:	b	e390 <sfbpf_lex+0x514>
    e118:	b	e398 <sfbpf_lex+0x51c>
    e11c:	b	e3a0 <sfbpf_lex+0x524>
    e120:	b	e3a8 <sfbpf_lex+0x52c>
    e124:	b	e3b0 <sfbpf_lex+0x534>
    e128:	b	e3b8 <sfbpf_lex+0x53c>
    e12c:	b	e3c0 <sfbpf_lex+0x544>
    e130:	b	e3c8 <sfbpf_lex+0x54c>
    e134:	b	e3d0 <sfbpf_lex+0x554>
    e138:	b	e3d8 <sfbpf_lex+0x55c>
    e13c:	b	e3e0 <sfbpf_lex+0x564>
    e140:	b	e3e8 <sfbpf_lex+0x56c>
    e144:	b	e3f0 <sfbpf_lex+0x574>
    e148:	b	e3f8 <sfbpf_lex+0x57c>
    e14c:	b	e400 <sfbpf_lex+0x584>
    e150:	b	e408 <sfbpf_lex+0x58c>
    e154:	b	e410 <sfbpf_lex+0x594>
    e158:	b	e418 <sfbpf_lex+0x59c>
    e15c:	b	e420 <sfbpf_lex+0x5a4>
    e160:	b	e428 <sfbpf_lex+0x5ac>
    e164:	b	e430 <sfbpf_lex+0x5b4>
    e168:	b	e438 <sfbpf_lex+0x5bc>
    e16c:	b	e440 <sfbpf_lex+0x5c4>
    e170:	b	e448 <sfbpf_lex+0x5cc>
    e174:	b	e448 <sfbpf_lex+0x5cc>
    e178:	b	e450 <sfbpf_lex+0x5d4>
    e17c:	b	e450 <sfbpf_lex+0x5d4>
    e180:	b	e458 <sfbpf_lex+0x5dc>
    e184:	b	e460 <sfbpf_lex+0x5e4>
    e188:	b	e468 <sfbpf_lex+0x5ec>
    e18c:	b	e470 <sfbpf_lex+0x5f4>
    e190:	b	e478 <sfbpf_lex+0x5fc>
    e194:	b	e480 <sfbpf_lex+0x604>
    e198:	b	e488 <sfbpf_lex+0x60c>
    e19c:	b	e490 <sfbpf_lex+0x614>
    e1a0:	b	e498 <sfbpf_lex+0x61c>
    e1a4:	b	e4a0 <sfbpf_lex+0x624>
    e1a8:	b	e4a8 <sfbpf_lex+0x62c>
    e1ac:	b	e4b0 <sfbpf_lex+0x634>
    e1b0:	b	e4b8 <sfbpf_lex+0x63c>
    e1b4:	b	e4c0 <sfbpf_lex+0x644>
    e1b8:	b	e4c8 <sfbpf_lex+0x64c>
    e1bc:	b	e4d0 <sfbpf_lex+0x654>
    e1c0:	b	e4d8 <sfbpf_lex+0x65c>
    e1c4:	b	e4e0 <sfbpf_lex+0x664>
    e1c8:	b	e4e8 <sfbpf_lex+0x66c>
    e1cc:	b	e4f0 <sfbpf_lex+0x674>
    e1d0:	b	e4f8 <sfbpf_lex+0x67c>
    e1d4:	b	e500 <sfbpf_lex+0x684>
    e1d8:	b	e508 <sfbpf_lex+0x68c>
    e1dc:	b	e510 <sfbpf_lex+0x694>
    e1e0:	b	e518 <sfbpf_lex+0x69c>
    e1e4:	b	e520 <sfbpf_lex+0x6a4>
    e1e8:	b	e528 <sfbpf_lex+0x6ac>
    e1ec:	b	e530 <sfbpf_lex+0x6b4>
    e1f0:	b	e538 <sfbpf_lex+0x6bc>
    e1f4:	b	e540 <sfbpf_lex+0x6c4>
    e1f8:	b	e548 <sfbpf_lex+0x6cc>
    e1fc:	b	e550 <sfbpf_lex+0x6d4>
    e200:	b	e558 <sfbpf_lex+0x6dc>
    e204:	b	e560 <sfbpf_lex+0x6e4>
    e208:	b	e568 <sfbpf_lex+0x6ec>
    e20c:	b	e570 <sfbpf_lex+0x6f4>
    e210:	b	e578 <sfbpf_lex+0x6fc>
    e214:	b	e580 <sfbpf_lex+0x704>
    e218:	b	e588 <sfbpf_lex+0x70c>
    e21c:	b	e590 <sfbpf_lex+0x714>
    e220:	b	e598 <sfbpf_lex+0x71c>
    e224:	b	e5a0 <sfbpf_lex+0x724>
    e228:	b	e5a8 <sfbpf_lex+0x72c>
    e22c:	b	e5b0 <sfbpf_lex+0x734>
    e230:	b	e5b8 <sfbpf_lex+0x73c>
    e234:	b	e5c0 <sfbpf_lex+0x744>
    e238:	b	e5c8 <sfbpf_lex+0x74c>
    e23c:	b	e5d0 <sfbpf_lex+0x754>
    e240:	b	e5d8 <sfbpf_lex+0x75c>
    e244:	b	e5e0 <sfbpf_lex+0x764>
    e248:	b	e5e8 <sfbpf_lex+0x76c>
    e24c:	b	e5f0 <sfbpf_lex+0x774>
    e250:	b	e5f8 <sfbpf_lex+0x77c>
    e254:	b	e600 <sfbpf_lex+0x784>
    e258:	b	e608 <sfbpf_lex+0x78c>
    e25c:	b	e610 <sfbpf_lex+0x794>
    e260:	b	e618 <sfbpf_lex+0x79c>
    e264:	b	e620 <sfbpf_lex+0x7a4>
    e268:	b	e628 <sfbpf_lex+0x7ac>
    e26c:	b	e630 <sfbpf_lex+0x7b4>
    e270:	b	e638 <sfbpf_lex+0x7bc>
    e274:	b	e640 <sfbpf_lex+0x7c4>
    e278:	b	e648 <sfbpf_lex+0x7cc>
    e27c:	b	e648 <sfbpf_lex+0x7cc>
    e280:	b	e650 <sfbpf_lex+0x7d4>
    e284:	b	e658 <sfbpf_lex+0x7dc>
    e288:	b	e660 <sfbpf_lex+0x7e4>
    e28c:	b	e668 <sfbpf_lex+0x7ec>
    e290:	b	e670 <sfbpf_lex+0x7f4>
    e294:	b	df5c <sfbpf_lex+0xe0>
    e298:	b	e678 <sfbpf_lex+0x7fc>
    e29c:	b	e684 <sfbpf_lex+0x808>
    e2a0:	b	e68c <sfbpf_lex+0x810>
    e2a4:	b	e694 <sfbpf_lex+0x818>
    e2a8:	b	e69c <sfbpf_lex+0x820>
    e2ac:	b	e6a4 <sfbpf_lex+0x828>
    e2b0:	b	e6ac <sfbpf_lex+0x830>
    e2b4:	b	e6b4 <sfbpf_lex+0x838>
    e2b8:	b	e6d4 <sfbpf_lex+0x858>
    e2bc:	b	e6f0 <sfbpf_lex+0x874>
    e2c0:	b	e77c <sfbpf_lex+0x900>
    e2c4:	b	e798 <sfbpf_lex+0x91c>
    e2c8:	b	e808 <sfbpf_lex+0x98c>
    e2cc:	b	e818 <sfbpf_lex+0x99c>
    e2d0:	b	e830 <sfbpf_lex+0x9b4>
    e2d4:	b	e818 <sfbpf_lex+0x99c>
    e2d8:	b	e848 <sfbpf_lex+0x9cc>
    e2dc:	b	e860 <sfbpf_lex+0x9e4>
    e2e0:	b	e878 <sfbpf_lex+0x9fc>
    e2e4:	b	e890 <sfbpf_lex+0xa14>
    e2e8:	b	e8a8 <sfbpf_lex+0xa2c>
    e2ec:	b	e8c0 <sfbpf_lex+0xa44>
    e2f0:	b	e8d8 <sfbpf_lex+0xa5c>
    e2f4:	b	e8f0 <sfbpf_lex+0xa74>
    e2f8:	b	e908 <sfbpf_lex+0xa8c>
    e2fc:	b	e920 <sfbpf_lex+0xaa4>
    e300:	b	e938 <sfbpf_lex+0xabc>
    e304:	b	e950 <sfbpf_lex+0xad4>
    e308:	b	e968 <sfbpf_lex+0xaec>
    e30c:	b	e980 <sfbpf_lex+0xb04>
    e310:	b	e908 <sfbpf_lex+0xa8c>
    e314:	b	e998 <sfbpf_lex+0xb1c>
    e318:	b	e9b0 <sfbpf_lex+0xb34>
    e31c:	b	e9c8 <sfbpf_lex+0xb4c>
    e320:	b	e9e0 <sfbpf_lex+0xb64>
    e324:	b	e950 <sfbpf_lex+0xad4>
    e328:	b	e9f8 <sfbpf_lex+0xb7c>
    e32c:	b	ea10 <sfbpf_lex+0xb94>
    e330:	b	ea2c <sfbpf_lex+0xbb0>
    e334:	b	ea4c <sfbpf_lex+0xbd0>
    e338:	b	ea5c <sfbpf_lex+0xbe0>
    e33c:	b	ea70 <sfbpf_lex+0xbf4>
    e340:	b	ea9c <sfbpf_lex+0xc20>
    e344:	b	ea94 <sfbpf_lex+0xc18>
    e348:	ldr	r2, [sp, #12]
    e34c:	ldrsh	r0, [r2, r5]
    e350:	cmp	r0, fp
    e354:	addgt	r1, r9, r1
    e358:	ldrbgt	r1, [r1, #-1272]	; 0xfffffb08
    e35c:	b	dff4 <sfbpf_lex+0x178>
    e360:	movw	r0, #259	; 0x103
    e364:	add	sp, sp, #76	; 0x4c
    e368:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e36c:	ldr	r3, [pc, #2752]	; ee34 <sfbpf_lex+0xfb8>
    e370:	add	r3, pc, r3
    e374:	ldrb	r2, [r3, #32]
    e378:	ldr	r0, [r3, #8]
    e37c:	strb	r2, [r5]
    e380:	ldr	r5, [r3, #12]
    e384:	b	e060 <sfbpf_lex+0x1e4>
    e388:	movw	r0, #271	; 0x10f
    e38c:	b	e364 <sfbpf_lex+0x4e8>
    e390:	mov	r0, #272	; 0x110
    e394:	b	e364 <sfbpf_lex+0x4e8>
    e398:	movw	r0, #273	; 0x111
    e39c:	b	e364 <sfbpf_lex+0x4e8>
    e3a0:	movw	r0, #274	; 0x112
    e3a4:	b	e364 <sfbpf_lex+0x4e8>
    e3a8:	movw	r0, #275	; 0x113
    e3ac:	b	e364 <sfbpf_lex+0x4e8>
    e3b0:	mov	r0, #276	; 0x114
    e3b4:	b	e364 <sfbpf_lex+0x4e8>
    e3b8:	movw	r0, #277	; 0x115
    e3bc:	b	e364 <sfbpf_lex+0x4e8>
    e3c0:	movw	r0, #278	; 0x116
    e3c4:	b	e364 <sfbpf_lex+0x4e8>
    e3c8:	movw	r0, #279	; 0x117
    e3cc:	b	e364 <sfbpf_lex+0x4e8>
    e3d0:	mov	r0, #280	; 0x118
    e3d4:	b	e364 <sfbpf_lex+0x4e8>
    e3d8:	movw	r0, #281	; 0x119
    e3dc:	b	e364 <sfbpf_lex+0x4e8>
    e3e0:	movw	r0, #355	; 0x163
    e3e4:	b	e364 <sfbpf_lex+0x4e8>
    e3e8:	movw	r0, #319	; 0x13f
    e3ec:	b	e364 <sfbpf_lex+0x4e8>
    e3f0:	mov	r0, #320	; 0x140
    e3f4:	b	e364 <sfbpf_lex+0x4e8>
    e3f8:	movw	r0, #321	; 0x141
    e3fc:	b	e364 <sfbpf_lex+0x4e8>
    e400:	movw	r0, #322	; 0x142
    e404:	b	e364 <sfbpf_lex+0x4e8>
    e408:	movw	r0, #282	; 0x11a
    e40c:	b	e364 <sfbpf_lex+0x4e8>
    e410:	movw	r0, #283	; 0x11b
    e414:	b	e364 <sfbpf_lex+0x4e8>
    e418:	mov	r0, #284	; 0x11c
    e41c:	b	e364 <sfbpf_lex+0x4e8>
    e420:	movw	r0, #285	; 0x11d
    e424:	b	e364 <sfbpf_lex+0x4e8>
    e428:	movw	r0, #286	; 0x11e
    e42c:	b	e364 <sfbpf_lex+0x4e8>
    e430:	movw	r0, #287	; 0x11f
    e434:	b	e364 <sfbpf_lex+0x4e8>
    e438:	mov	r0, #288	; 0x120
    e43c:	b	e364 <sfbpf_lex+0x4e8>
    e440:	movw	r0, #327	; 0x147
    e444:	b	e364 <sfbpf_lex+0x4e8>
    e448:	mov	r0, #328	; 0x148
    e44c:	b	e364 <sfbpf_lex+0x4e8>
    e450:	movw	r0, #330	; 0x14a
    e454:	b	e364 <sfbpf_lex+0x4e8>
    e458:	movw	r0, #331	; 0x14b
    e45c:	b	e364 <sfbpf_lex+0x4e8>
    e460:	mov	r0, #332	; 0x14c
    e464:	b	e364 <sfbpf_lex+0x4e8>
    e468:	movw	r0, #333	; 0x14d
    e46c:	b	e364 <sfbpf_lex+0x4e8>
    e470:	movw	r0, #334	; 0x14e
    e474:	b	e364 <sfbpf_lex+0x4e8>
    e478:	movw	r0, #335	; 0x14f
    e47c:	b	e364 <sfbpf_lex+0x4e8>
    e480:	mov	r0, #336	; 0x150
    e484:	b	e364 <sfbpf_lex+0x4e8>
    e488:	movw	r0, #337	; 0x151
    e48c:	b	e364 <sfbpf_lex+0x4e8>
    e490:	movw	r0, #329	; 0x149
    e494:	b	e364 <sfbpf_lex+0x4e8>
    e498:	movw	r0, #338	; 0x152
    e49c:	b	e364 <sfbpf_lex+0x4e8>
    e4a0:	movw	r0, #339	; 0x153
    e4a4:	b	e364 <sfbpf_lex+0x4e8>
    e4a8:	mov	r0, #340	; 0x154
    e4ac:	b	e364 <sfbpf_lex+0x4e8>
    e4b0:	mov	r0, #260	; 0x104
    e4b4:	b	e364 <sfbpf_lex+0x4e8>
    e4b8:	movw	r0, #262	; 0x106
    e4bc:	b	e364 <sfbpf_lex+0x4e8>
    e4c0:	movw	r0, #263	; 0x107
    e4c4:	b	e364 <sfbpf_lex+0x4e8>
    e4c8:	mov	r0, #264	; 0x108
    e4cc:	b	e364 <sfbpf_lex+0x4e8>
    e4d0:	movw	r0, #265	; 0x109
    e4d4:	b	e364 <sfbpf_lex+0x4e8>
    e4d8:	mov	r0, #268	; 0x10c
    e4dc:	b	e364 <sfbpf_lex+0x4e8>
    e4e0:	movw	r0, #269	; 0x10d
    e4e4:	b	e364 <sfbpf_lex+0x4e8>
    e4e8:	movw	r0, #261	; 0x105
    e4ec:	b	e364 <sfbpf_lex+0x4e8>
    e4f0:	mov	r0, #300	; 0x12c
    e4f4:	b	e364 <sfbpf_lex+0x4e8>
    e4f8:	movw	r0, #301	; 0x12d
    e4fc:	b	e364 <sfbpf_lex+0x4e8>
    e500:	movw	r0, #302	; 0x12e
    e504:	b	e364 <sfbpf_lex+0x4e8>
    e508:	movw	r0, #303	; 0x12f
    e50c:	b	e364 <sfbpf_lex+0x4e8>
    e510:	mov	r0, #304	; 0x130
    e514:	b	e364 <sfbpf_lex+0x4e8>
    e518:	movw	r0, #305	; 0x131
    e51c:	b	e364 <sfbpf_lex+0x4e8>
    e520:	movw	r0, #306	; 0x132
    e524:	b	e364 <sfbpf_lex+0x4e8>
    e528:	movw	r0, #266	; 0x10a
    e52c:	b	e364 <sfbpf_lex+0x4e8>
    e530:	movw	r0, #267	; 0x10b
    e534:	b	e364 <sfbpf_lex+0x4e8>
    e538:	movw	r0, #270	; 0x10e
    e53c:	b	e364 <sfbpf_lex+0x4e8>
    e540:	movw	r0, #289	; 0x121
    e544:	b	e364 <sfbpf_lex+0x4e8>
    e548:	movw	r0, #290	; 0x122
    e54c:	b	e364 <sfbpf_lex+0x4e8>
    e550:	mov	r0, #364	; 0x16c
    e554:	b	e364 <sfbpf_lex+0x4e8>
    e558:	movw	r0, #363	; 0x16b
    e55c:	b	e364 <sfbpf_lex+0x4e8>
    e560:	mov	r0, #33	; 0x21
    e564:	b	e364 <sfbpf_lex+0x4e8>
    e568:	movw	r0, #318	; 0x13e
    e56c:	b	e364 <sfbpf_lex+0x4e8>
    e570:	mov	r0, #292	; 0x124
    e574:	b	e364 <sfbpf_lex+0x4e8>
    e578:	movw	r0, #293	; 0x125
    e57c:	b	e364 <sfbpf_lex+0x4e8>
    e580:	movw	r0, #323	; 0x143
    e584:	b	e364 <sfbpf_lex+0x4e8>
    e588:	mov	r0, #324	; 0x144
    e58c:	b	e364 <sfbpf_lex+0x4e8>
    e590:	movw	r0, #325	; 0x145
    e594:	b	e364 <sfbpf_lex+0x4e8>
    e598:	movw	r0, #326	; 0x146
    e59c:	b	e364 <sfbpf_lex+0x4e8>
    e5a0:	movw	r0, #341	; 0x155
    e5a4:	b	e364 <sfbpf_lex+0x4e8>
    e5a8:	movw	r0, #342	; 0x156
    e5ac:	b	e364 <sfbpf_lex+0x4e8>
    e5b0:	movw	r0, #343	; 0x157
    e5b4:	b	e364 <sfbpf_lex+0x4e8>
    e5b8:	mov	r0, #344	; 0x158
    e5bc:	b	e364 <sfbpf_lex+0x4e8>
    e5c0:	movw	r0, #349	; 0x15d
    e5c4:	b	e364 <sfbpf_lex+0x4e8>
    e5c8:	movw	r0, #350	; 0x15e
    e5cc:	b	e364 <sfbpf_lex+0x4e8>
    e5d0:	movw	r0, #347	; 0x15b
    e5d4:	b	e364 <sfbpf_lex+0x4e8>
    e5d8:	mov	r0, #348	; 0x15c
    e5dc:	b	e364 <sfbpf_lex+0x4e8>
    e5e0:	movw	r0, #345	; 0x159
    e5e4:	b	e364 <sfbpf_lex+0x4e8>
    e5e8:	movw	r0, #346	; 0x15a
    e5ec:	b	e364 <sfbpf_lex+0x4e8>
    e5f0:	movw	r0, #353	; 0x161
    e5f4:	b	e364 <sfbpf_lex+0x4e8>
    e5f8:	movw	r0, #354	; 0x162
    e5fc:	b	e364 <sfbpf_lex+0x4e8>
    e600:	movw	r0, #351	; 0x15f
    e604:	b	e364 <sfbpf_lex+0x4e8>
    e608:	mov	r0, #352	; 0x160
    e60c:	b	e364 <sfbpf_lex+0x4e8>
    e610:	movw	r0, #294	; 0x126
    e614:	b	e364 <sfbpf_lex+0x4e8>
    e618:	movw	r0, #295	; 0x127
    e61c:	b	e364 <sfbpf_lex+0x4e8>
    e620:	mov	r0, #296	; 0x128
    e624:	b	e364 <sfbpf_lex+0x4e8>
    e628:	movw	r0, #297	; 0x129
    e62c:	b	e364 <sfbpf_lex+0x4e8>
    e630:	movw	r0, #298	; 0x12a
    e634:	b	e364 <sfbpf_lex+0x4e8>
    e638:	movw	r0, #299	; 0x12b
    e63c:	b	e364 <sfbpf_lex+0x4e8>
    e640:	mov	r0, #356	; 0x164
    e644:	b	e364 <sfbpf_lex+0x4e8>
    e648:	movw	r0, #357	; 0x165
    e64c:	b	e364 <sfbpf_lex+0x4e8>
    e650:	movw	r0, #358	; 0x166
    e654:	b	e364 <sfbpf_lex+0x4e8>
    e658:	movw	r0, #359	; 0x167
    e65c:	b	e364 <sfbpf_lex+0x4e8>
    e660:	mov	r0, #360	; 0x168
    e664:	b	e364 <sfbpf_lex+0x4e8>
    e668:	movw	r0, #361	; 0x169
    e66c:	b	e364 <sfbpf_lex+0x4e8>
    e670:	movw	r0, #362	; 0x16a
    e674:	b	e364 <sfbpf_lex+0x4e8>
    e678:	ldr	r3, [r6]
    e67c:	ldrb	r0, [r3]
    e680:	b	e364 <sfbpf_lex+0x4e8>
    e684:	mov	r0, #308	; 0x134
    e688:	b	e364 <sfbpf_lex+0x4e8>
    e68c:	movw	r0, #309	; 0x135
    e690:	b	e364 <sfbpf_lex+0x4e8>
    e694:	movw	r0, #310	; 0x136
    e698:	b	e364 <sfbpf_lex+0x4e8>
    e69c:	mov	r0, #61	; 0x3d
    e6a0:	b	e364 <sfbpf_lex+0x4e8>
    e6a4:	mov	r0, #316	; 0x13c
    e6a8:	b	e364 <sfbpf_lex+0x4e8>
    e6ac:	movw	r0, #317	; 0x13d
    e6b0:	b	e364 <sfbpf_lex+0x4e8>
    e6b4:	ldr	r0, [r6]
    e6b8:	add	r0, r0, #1
    e6bc:	bl	9b8c <pcap_ether_aton>
    e6c0:	ldr	r3, [pc, #1904]	; ee38 <sfbpf_lex+0xfbc>
    e6c4:	ldr	r3, [r4, r3]
    e6c8:	str	r0, [r3]
    e6cc:	movw	r0, #315	; 0x13b
    e6d0:	b	e364 <sfbpf_lex+0x4e8>
    e6d4:	ldr	r0, [r6]
    e6d8:	bl	9b8c <pcap_ether_aton>
    e6dc:	ldr	r3, [pc, #1876]	; ee38 <sfbpf_lex+0xfbc>
    e6e0:	ldr	r3, [r4, r3]
    e6e4:	str	r0, [r3]
    e6e8:	mov	r0, #312	; 0x138
    e6ec:	b	e364 <sfbpf_lex+0x4e8>
    e6f0:	ldr	r3, [r6]
    e6f4:	ldrb	r2, [r3]
    e6f8:	cmp	r2, #48	; 0x30
    e6fc:	movne	r8, #10
    e700:	bne	e720 <sfbpf_lex+0x8a4>
    e704:	ldrb	r2, [r3, #1]
    e708:	and	r2, r2, #223	; 0xdf
    e70c:	cmp	r2, #88	; 0x58
    e710:	addeq	r3, r3, #2
    e714:	moveq	r8, #16
    e718:	addne	r3, r3, #1
    e71c:	movne	r8, #8
    e720:	sub	r5, r3, #1
    e724:	mov	r3, #0
    e728:	b	e75c <sfbpf_lex+0x8e0>
    e72c:	mul	r7, r8, r3
    e730:	bl	e04 <__ctype_b_loc@plt>
    e734:	ldr	r2, [r0]
    e738:	lsl	r3, r6, #1
    e73c:	ldrh	r3, [r2, r3]
    e740:	tst	r3, #2048	; 0x800
    e744:	subne	r6, r6, #48	; 0x30
    e748:	bne	e758 <sfbpf_lex+0x8dc>
    e74c:	tst	r3, #512	; 0x200
    e750:	subne	r6, r6, #87	; 0x57
    e754:	subeq	r6, r6, #55	; 0x37
    e758:	add	r3, r7, r6
    e75c:	ldrb	r6, [r5, #1]!
    e760:	cmp	r6, #0
    e764:	bne	e72c <sfbpf_lex+0x8b0>
    e768:	ldr	r2, [pc, #1736]	; ee38 <sfbpf_lex+0xfbc>
    e76c:	movw	r0, #291	; 0x123
    e770:	ldr	r2, [r4, r2]
    e774:	str	r3, [r2]
    e778:	b	e364 <sfbpf_lex+0x4e8>
    e77c:	ldr	r0, [r6]
    e780:	bl	228c <sf_sdup>
    e784:	ldr	r3, [pc, #1708]	; ee38 <sfbpf_lex+0xfbc>
    e788:	ldr	r3, [r4, r3]
    e78c:	str	r0, [r3]
    e790:	movw	r0, #313	; 0x139
    e794:	b	e364 <sfbpf_lex+0x4e8>
    e798:	mov	r2, #24
    e79c:	mov	r1, #0
    e7a0:	add	r0, sp, #48	; 0x30
    e7a4:	bl	e58 <memset@plt>
    e7a8:	mov	r3, #10
    e7ac:	add	r2, sp, #40	; 0x28
    e7b0:	ldr	r0, [r6]
    e7b4:	mov	r1, #0
    e7b8:	str	r3, [sp, #44]	; 0x2c
    e7bc:	mov	r3, #4
    e7c0:	str	r3, [sp, #40]	; 0x28
    e7c4:	add	r3, sp, #36	; 0x24
    e7c8:	bl	eb8 <getaddrinfo@plt>
    e7cc:	cmp	r0, #0
    e7d0:	beq	e7e4 <sfbpf_lex+0x968>
    e7d4:	ldr	r0, [pc, #1632]	; ee3c <sfbpf_lex+0xfc0>
    e7d8:	ldr	r1, [r6]
    e7dc:	add	r0, pc, r0
    e7e0:	bl	1e54 <sf_bpf_error>
    e7e4:	ldr	r0, [sp, #36]	; 0x24
    e7e8:	bl	eac <freeaddrinfo@plt>
    e7ec:	ldr	r0, [r6]
    e7f0:	bl	228c <sf_sdup>
    e7f4:	ldr	r3, [pc, #1596]	; ee38 <sfbpf_lex+0xfbc>
    e7f8:	ldr	r3, [r4, r3]
    e7fc:	str	r0, [r3]
    e800:	movw	r0, #314	; 0x13a
    e804:	b	e364 <sfbpf_lex+0x4e8>
    e808:	ldr	r0, [pc, #1584]	; ee40 <sfbpf_lex+0xfc4>
    e80c:	ldr	r1, [r6]
    e810:	add	r0, pc, r0
    e814:	b	e7e0 <sfbpf_lex+0x964>
    e818:	ldr	r3, [pc, #1560]	; ee38 <sfbpf_lex+0xfbc>
    e81c:	mov	r2, #0
    e820:	movw	r0, #291	; 0x123
    e824:	ldr	r3, [r4, r3]
    e828:	str	r2, [r3]
    e82c:	b	e364 <sfbpf_lex+0x4e8>
    e830:	ldr	r3, [pc, #1536]	; ee38 <sfbpf_lex+0xfbc>
    e834:	mov	r2, #1
    e838:	movw	r0, #291	; 0x123
    e83c:	ldr	r3, [r4, r3]
    e840:	str	r2, [r3]
    e844:	b	e364 <sfbpf_lex+0x4e8>
    e848:	ldr	r3, [pc, #1512]	; ee38 <sfbpf_lex+0xfbc>
    e84c:	mov	r2, #3
    e850:	movw	r0, #291	; 0x123
    e854:	ldr	r3, [r4, r3]
    e858:	str	r2, [r3]
    e85c:	b	e364 <sfbpf_lex+0x4e8>
    e860:	ldr	r3, [pc, #1488]	; ee38 <sfbpf_lex+0xfbc>
    e864:	mov	r2, #4
    e868:	movw	r0, #291	; 0x123
    e86c:	ldr	r3, [r4, r3]
    e870:	str	r2, [r3]
    e874:	b	e364 <sfbpf_lex+0x4e8>
    e878:	ldr	r3, [pc, #1464]	; ee38 <sfbpf_lex+0xfbc>
    e87c:	mov	r2, #5
    e880:	movw	r0, #291	; 0x123
    e884:	ldr	r3, [r4, r3]
    e888:	str	r2, [r3]
    e88c:	b	e364 <sfbpf_lex+0x4e8>
    e890:	ldr	r3, [pc, #1440]	; ee38 <sfbpf_lex+0xfbc>
    e894:	mov	r2, #8
    e898:	movw	r0, #291	; 0x123
    e89c:	ldr	r3, [r4, r3]
    e8a0:	str	r2, [r3]
    e8a4:	b	e364 <sfbpf_lex+0x4e8>
    e8a8:	ldr	r3, [pc, #1416]	; ee38 <sfbpf_lex+0xfbc>
    e8ac:	mov	r2, #9
    e8b0:	movw	r0, #291	; 0x123
    e8b4:	ldr	r3, [r4, r3]
    e8b8:	str	r2, [r3]
    e8bc:	b	e364 <sfbpf_lex+0x4e8>
    e8c0:	ldr	r3, [pc, #1392]	; ee38 <sfbpf_lex+0xfbc>
    e8c4:	mov	r2, #10
    e8c8:	movw	r0, #291	; 0x123
    e8cc:	ldr	r3, [r4, r3]
    e8d0:	str	r2, [r3]
    e8d4:	b	e364 <sfbpf_lex+0x4e8>
    e8d8:	ldr	r3, [pc, #1368]	; ee38 <sfbpf_lex+0xfbc>
    e8dc:	mov	r2, #11
    e8e0:	movw	r0, #291	; 0x123
    e8e4:	ldr	r3, [r4, r3]
    e8e8:	str	r2, [r3]
    e8ec:	b	e364 <sfbpf_lex+0x4e8>
    e8f0:	ldr	r3, [pc, #1344]	; ee38 <sfbpf_lex+0xfbc>
    e8f4:	mov	r2, #12
    e8f8:	movw	r0, #291	; 0x123
    e8fc:	ldr	r3, [r4, r3]
    e900:	str	r2, [r3]
    e904:	b	e364 <sfbpf_lex+0x4e8>
    e908:	ldr	r3, [pc, #1320]	; ee38 <sfbpf_lex+0xfbc>
    e90c:	mov	r2, #13
    e910:	movw	r0, #291	; 0x123
    e914:	ldr	r3, [r4, r3]
    e918:	str	r2, [r3]
    e91c:	b	e364 <sfbpf_lex+0x4e8>
    e920:	ldr	r3, [pc, #1296]	; ee38 <sfbpf_lex+0xfbc>
    e924:	mov	r2, #14
    e928:	movw	r0, #291	; 0x123
    e92c:	ldr	r3, [r4, r3]
    e930:	str	r2, [r3]
    e934:	b	e364 <sfbpf_lex+0x4e8>
    e938:	ldr	r3, [pc, #1272]	; ee38 <sfbpf_lex+0xfbc>
    e93c:	mov	r2, #15
    e940:	movw	r0, #291	; 0x123
    e944:	ldr	r3, [r4, r3]
    e948:	str	r2, [r3]
    e94c:	b	e364 <sfbpf_lex+0x4e8>
    e950:	ldr	r3, [pc, #1248]	; ee38 <sfbpf_lex+0xfbc>
    e954:	mov	r2, #16
    e958:	movw	r0, #291	; 0x123
    e95c:	ldr	r3, [r4, r3]
    e960:	str	r2, [r3]
    e964:	b	e364 <sfbpf_lex+0x4e8>
    e968:	ldr	r3, [pc, #1224]	; ee38 <sfbpf_lex+0xfbc>
    e96c:	mov	r2, #17
    e970:	movw	r0, #291	; 0x123
    e974:	ldr	r3, [r4, r3]
    e978:	str	r2, [r3]
    e97c:	b	e364 <sfbpf_lex+0x4e8>
    e980:	ldr	r3, [pc, #1200]	; ee38 <sfbpf_lex+0xfbc>
    e984:	mov	r2, #18
    e988:	movw	r0, #291	; 0x123
    e98c:	ldr	r3, [r4, r3]
    e990:	str	r2, [r3]
    e994:	b	e364 <sfbpf_lex+0x4e8>
    e998:	ldr	r3, [pc, #1176]	; ee38 <sfbpf_lex+0xfbc>
    e99c:	mov	r2, #1
    e9a0:	movw	r0, #291	; 0x123
    e9a4:	ldr	r3, [r4, r3]
    e9a8:	str	r2, [r3]
    e9ac:	b	e364 <sfbpf_lex+0x4e8>
    e9b0:	ldr	r3, [pc, #1152]	; ee38 <sfbpf_lex+0xfbc>
    e9b4:	mov	r2, #2
    e9b8:	movw	r0, #291	; 0x123
    e9bc:	ldr	r3, [r4, r3]
    e9c0:	str	r2, [r3]
    e9c4:	b	e364 <sfbpf_lex+0x4e8>
    e9c8:	ldr	r3, [pc, #1128]	; ee38 <sfbpf_lex+0xfbc>
    e9cc:	mov	r2, #4
    e9d0:	movw	r0, #291	; 0x123
    e9d4:	ldr	r3, [r4, r3]
    e9d8:	str	r2, [r3]
    e9dc:	b	e364 <sfbpf_lex+0x4e8>
    e9e0:	ldr	r3, [pc, #1104]	; ee38 <sfbpf_lex+0xfbc>
    e9e4:	mov	r2, #8
    e9e8:	movw	r0, #291	; 0x123
    e9ec:	ldr	r3, [r4, r3]
    e9f0:	str	r2, [r3]
    e9f4:	b	e364 <sfbpf_lex+0x4e8>
    e9f8:	ldr	r3, [pc, #1080]	; ee38 <sfbpf_lex+0xfbc>
    e9fc:	mov	r2, #32
    ea00:	movw	r0, #291	; 0x123
    ea04:	ldr	r3, [r4, r3]
    ea08:	str	r2, [r3]
    ea0c:	b	e364 <sfbpf_lex+0x4e8>
    ea10:	ldr	r0, [r6]
    ea14:	bl	228c <sf_sdup>
    ea18:	ldr	r3, [pc, #1048]	; ee38 <sfbpf_lex+0xfbc>
    ea1c:	ldr	r3, [r4, r3]
    ea20:	str	r0, [r3]
    ea24:	movw	r0, #311	; 0x137
    ea28:	b	e364 <sfbpf_lex+0x4e8>
    ea2c:	ldr	r0, [r6]
    ea30:	add	r0, r0, #1
    ea34:	bl	228c <sf_sdup>
    ea38:	ldr	r3, [pc, #1016]	; ee38 <sfbpf_lex+0xfbc>
    ea3c:	ldr	r3, [r4, r3]
    ea40:	str	r0, [r3]
    ea44:	movw	r0, #311	; 0x137
    ea48:	b	e364 <sfbpf_lex+0x4e8>
    ea4c:	ldr	r0, [pc, #1008]	; ee44 <sfbpf_lex+0xfc8>
    ea50:	ldr	r1, [r6]
    ea54:	add	r0, pc, r0
    ea58:	b	e7e0 <sfbpf_lex+0x964>
    ea5c:	ldr	r0, [pc, #996]	; ee48 <sfbpf_lex+0xfcc>
    ea60:	ldr	r3, [r6]
    ea64:	add	r0, pc, r0
    ea68:	ldrb	r1, [r3]
    ea6c:	b	e7e0 <sfbpf_lex+0x964>
    ea70:	ldr	r3, [pc, #980]	; ee4c <sfbpf_lex+0xfd0>
    ea74:	mov	r2, #1
    ea78:	ldr	r1, [sp, #20]
    ea7c:	ldr	r0, [r6]
    ea80:	add	r3, pc, r3
    ea84:	ldr	r3, [r3, #44]	; 0x2c
    ea88:	ldr	r1, [r1]
    ea8c:	bl	dbc <fwrite@plt>
    ea90:	b	df5c <sfbpf_lex+0xe0>
    ea94:	mov	r0, #0
    ea98:	b	e364 <sfbpf_lex+0x4e8>
    ea9c:	ldr	r3, [r6]
    eaa0:	ldr	r2, [sl, #16]
    eaa4:	ldr	r1, [sl, #20]
    eaa8:	sub	r3, r5, r3
    eaac:	sub	r3, r3, #1
    eab0:	str	r3, [sp, #16]
    eab4:	ldrb	r3, [sl, #32]
    eab8:	strb	r3, [r5]
    eabc:	ldr	r3, [r2, r1, lsl #2]
    eac0:	ldr	r0, [r3, #44]	; 0x2c
    eac4:	cmp	r0, #0
    eac8:	bne	eae8 <sfbpf_lex+0xc6c>
    eacc:	ldr	r0, [r3, #16]
    ead0:	str	r0, [sl, #24]
    ead4:	ldr	r0, [sl, #28]
    ead8:	str	r0, [r3]
    eadc:	mov	r0, #1
    eae0:	ldr	r3, [r2, r1, lsl #2]
    eae4:	str	r0, [r3, #44]	; 0x2c
    eae8:	ldr	r7, [pc, #864]	; ee50 <sfbpf_lex+0xfd4>
    eaec:	ldr	lr, [r2, r1, lsl #2]
    eaf0:	ldr	ip, [r6]
    eaf4:	add	r7, pc, r7
    eaf8:	ldr	r9, [r7, #4]
    eafc:	ldr	r0, [lr, #4]
    eb00:	ldr	r3, [r7, #24]
    eb04:	add	r8, r0, r3
    eb08:	cmp	r9, r8
    eb0c:	bhi	ebc4 <sfbpf_lex+0xd48>
    eb10:	ldr	r3, [sp, #16]
    eb14:	add	r5, ip, r3
    eb18:	str	r5, [r7, #4]
    eb1c:	bl	d948 <yy_get_previous_state>
    eb20:	ldr	r3, [pc, #812]	; ee54 <sfbpf_lex+0xfd8>
    eb24:	lsl	r2, r0, #1
    eb28:	mov	r1, r0
    eb2c:	add	r3, pc, r3
    eb30:	add	r3, r3, #256	; 0x100
    eb34:	ldrsh	r3, [r3, r2]
    eb38:	ldr	r2, [pc, #792]	; ee58 <sfbpf_lex+0xfdc>
    eb3c:	cmp	r3, #0
    eb40:	strne	r0, [r7, #8]
    eb44:	add	r2, pc, r2
    eb48:	strne	r5, [r7, #12]
    eb4c:	sub	r2, r2, #1216	; 0x4c0
    eb50:	ldr	r7, [pc, #772]	; ee5c <sfbpf_lex+0xfe0>
    eb54:	sub	r2, r2, #2
    eb58:	add	r7, pc, r7
    eb5c:	lsl	ip, r1, #1
    eb60:	ldrsh	r3, [r2, ip]
    eb64:	add	r3, r3, #1
    eb68:	lsl	r3, r3, #1
    eb6c:	ldrsh	lr, [r7, r3]
    eb70:	cmp	r1, lr
    eb74:	bne	ebb8 <sfbpf_lex+0xd3c>
    eb78:	ldr	r2, [pc, #736]	; ee60 <sfbpf_lex+0xfe4>
    eb7c:	add	r2, pc, r2
    eb80:	ldrsh	r3, [r2, r3]
    eb84:	ldr	r2, [r6]
    eb88:	str	r2, [sp]
    eb8c:	movw	r2, #1433	; 0x599
    eb90:	cmp	r3, r2
    eb94:	beq	e060 <sfbpf_lex+0x1e4>
    eb98:	cmp	r3, #0
    eb9c:	beq	e060 <sfbpf_lex+0x1e4>
    eba0:	ldr	r2, [pc, #700]	; ee64 <sfbpf_lex+0xfe8>
    eba4:	add	r5, r5, #1
    eba8:	add	r2, pc, r2
    ebac:	str	r5, [r2, #4]
    ebb0:	mov	r0, r3
    ebb4:	b	df74 <sfbpf_lex+0xf8>
    ebb8:	ldr	r3, [sp, #8]
    ebbc:	ldrsh	r1, [r3, ip]
    ebc0:	b	eb5c <sfbpf_lex+0xce0>
    ebc4:	add	r3, r3, #1
    ebc8:	add	r3, r0, r3
    ebcc:	cmp	r9, r3
    ebd0:	bls	ebe0 <sfbpf_lex+0xd64>
    ebd4:	ldr	r0, [pc, #652]	; ee68 <sfbpf_lex+0xfec>
    ebd8:	add	r0, pc, r0
    ebdc:	bl	daf0 <yy_fatal_error>
    ebe0:	ldr	r3, [lr, #40]	; 0x28
    ebe4:	sub	r9, r9, ip
    ebe8:	cmp	r3, #0
    ebec:	bne	ec20 <sfbpf_lex+0xda4>
    ebf0:	cmp	r9, #1
    ebf4:	bne	f018 <sfbpf_lex+0x119c>
    ebf8:	ldr	r3, [pc, #620]	; ee6c <sfbpf_lex+0xff0>
    ebfc:	ldr	r2, [r6]
    ec00:	add	r3, pc, r3
    ec04:	str	r2, [r3, #4]
    ec08:	ldr	r3, [r3]
    ec0c:	sub	r3, r3, #1
    ec10:	add	r3, r3, r3, lsr #31
    ec14:	asr	r3, r3, #1
    ec18:	add	r3, r3, #146	; 0x92
    ec1c:	b	e0f0 <sfbpf_lex+0x274>
    ec20:	sub	r8, r9, #1
    ec24:	mov	r3, #0
    ec28:	cmp	r8, r3
    ec2c:	bgt	ec74 <sfbpf_lex+0xdf8>
    ec30:	ldr	r3, [r2, r1, lsl #2]
    ec34:	ldr	r2, [r3, #44]	; 0x2c
    ec38:	cmp	r2, #2
    ec3c:	bne	ec84 <sfbpf_lex+0xe08>
    ec40:	ldr	r1, [pc, #552]	; ee70 <sfbpf_lex+0xff4>
    ec44:	mov	r2, #0
    ec48:	str	r2, [r3, #16]
    ec4c:	add	r1, pc, r1
    ec50:	str	r2, [r1, #24]
    ec54:	cmp	r8, #0
    ec58:	bne	efa8 <sfbpf_lex+0x112c>
    ec5c:	ldr	r3, [pc, #528]	; ee74 <sfbpf_lex+0xff8>
    ec60:	add	r3, pc, r3
    ec64:	ldr	r0, [r3, #28]
    ec68:	bl	ddf8 <sfbpf_restart>
    ec6c:	mov	r2, #1
    ec70:	b	eeec <sfbpf_lex+0x1070>
    ec74:	ldrb	lr, [ip, r3]
    ec78:	strb	lr, [r0, r3]
    ec7c:	add	r3, r3, #1
    ec80:	b	ec28 <sfbpf_lex+0xdac>
    ec84:	ldr	r7, [r3, #12]
    ec88:	sub	r7, r7, r8
    ec8c:	sub	r3, r7, #1
    ec90:	ldr	r7, [pc, #480]	; ee78 <sfbpf_lex+0xffc>
    ec94:	add	r7, pc, r7
    ec98:	ldr	r2, [r7, #16]
    ec9c:	cmp	r3, #0
    eca0:	ldr	r1, [r7, #20]
    eca4:	ldr	fp, [r2, r1, lsl #2]
    eca8:	ble	ed44 <sfbpf_lex+0xec8>
    ecac:	cmp	r3, #8192	; 0x2000
    ecb0:	movlt	r7, r3
    ecb4:	ldr	r3, [fp, #24]
    ecb8:	movge	r7, #8192	; 0x2000
    ecbc:	cmp	r3, #0
    ecc0:	bne	ef54 <sfbpf_lex+0x10d8>
    ecc4:	ldr	r9, [pc, #432]	; ee7c <sfbpf_lex+0x1000>
    ecc8:	str	r3, [sp, #24]
    eccc:	bl	e40 <__errno_location@plt>
    ecd0:	ldr	r3, [sp, #24]
    ecd4:	mov	fp, r0
    ecd8:	add	r9, pc, r9
    ecdc:	str	r3, [r0]
    ece0:	ldr	r3, [r9, #16]
    ece4:	mov	r1, #1
    ece8:	ldr	r2, [r9, #20]
    ecec:	ldr	r3, [r3, r2, lsl #2]
    ecf0:	mov	r2, r7
    ecf4:	ldr	r0, [r3, #4]
    ecf8:	ldr	r3, [r9, #28]
    ecfc:	add	r0, r0, r8
    ed00:	bl	dd4 <fread@plt>
    ed04:	cmp	r0, #0
    ed08:	str	r0, [r9, #24]
    ed0c:	str	r0, [sp, #24]
    ed10:	bne	eec4 <sfbpf_lex+0x1048>
    ed14:	ldr	r0, [r9, #28]
    ed18:	bl	d80 <ferror@plt>
    ed1c:	cmp	r0, #0
    ed20:	ldr	r3, [sp, #24]
    ed24:	beq	eec4 <sfbpf_lex+0x1048>
    ed28:	ldr	r2, [fp]
    ed2c:	cmp	r2, #4
    ed30:	bne	f098 <sfbpf_lex+0x121c>
    ed34:	str	r3, [fp]
    ed38:	ldr	r0, [r9, #28]
    ed3c:	bl	e94 <clearerr@plt>
    ed40:	b	ece0 <sfbpf_lex+0xe64>
    ed44:	ldr	r0, [fp, #4]
    ed48:	ldr	r2, [fp, #20]
    ed4c:	ldr	r3, [r7, #4]
    ed50:	cmp	r2, #0
    ed54:	sub	r3, r3, r0
    ed58:	streq	r2, [fp, #4]
    ed5c:	beq	ed94 <sfbpf_lex+0xf18>
    ed60:	ldr	r1, [fp, #12]
    ed64:	cmp	r1, #0
    ed68:	lslgt	r1, r1, #1
    ed6c:	bgt	ed7c <sfbpf_lex+0xf00>
    ed70:	add	r2, r1, #7
    ed74:	movge	r2, r1
    ed78:	add	r1, r1, r2, asr #3
    ed7c:	str	r1, [fp, #12]
    ed80:	add	r1, r1, #2
    ed84:	str	r3, [sp, #24]
    ed88:	bl	db0 <realloc@plt>
    ed8c:	ldr	r3, [sp, #24]
    ed90:	str	r0, [fp, #4]
    ed94:	ldr	r2, [fp, #4]
    ed98:	cmp	r2, #0
    ed9c:	ldreq	r0, [pc, #220]	; ee80 <sfbpf_lex+0x1004>
    eda0:	addeq	r0, pc, r0
    eda4:	beq	ebdc <sfbpf_lex+0xd60>
    eda8:	add	r3, r2, r3
    edac:	ldr	r2, [sp, #4]
    edb0:	str	r3, [r2, #4]
    edb4:	mov	r3, r2
    edb8:	ldr	r3, [r3, #16]
    edbc:	ldr	r2, [r2, #20]
    edc0:	ldr	r3, [r3, r2, lsl #2]
    edc4:	ldr	r3, [r3, #12]
    edc8:	sub	r3, r3, r8
    edcc:	sub	r3, r3, #1
    edd0:	b	ec98 <sfbpf_lex+0xe1c>
    edd4:	.word	0x0001fca8
    edd8:	.word	0x0001f164
    eddc:	.word	0x0001fc7c
    ede0:	.word	0x000000e4
    ede4:	.word	0x0001fc58
    ede8:	.word	0x000000ec
    edec:	.word	0x0001fc34
    edf0:	.word	0x0001fc08
    edf4:	.word	0x00004246
    edf8:	.word	0x0001fbd4
    edfc:	.word	0x0000420e
    ee00:	.word	0x000061fe
    ee04:	.word	0x0001fb98
    ee08:	.word	0x00006be4
    ee0c:	.word	0x0000a616
    ee10:	.word	0x0001faf4
    ee14:	.word	0x00004142
    ee18:	.word	0x0000412a
    ee1c:	.word	0x0001fab4
    ee20:	.word	0x000000dc
    ee24:	.word	0x0001fa90
    ee28:	.word	0x000000c4
    ee2c:	.word	0x0001fa64
    ee30:	.word	0x0001fa4c
    ee34:	.word	0x0001f7c4
    ee38:	.word	0x000000f4
    ee3c:	.word	0x0000d891
    ee40:	.word	0x0000d873
    ee44:	.word	0x0000d649
    ee48:	.word	0x0000d64b
    ee4c:	.word	0x0001f0b4
    ee50:	.word	0x0001f040
    ee54:	.word	0x00003666
    ee58:	.word	0x00005646
    ee5c:	.word	0x0000603c
    ee60:	.word	0x00009a56
    ee64:	.word	0x0001ef8c
    ee68:	.word	0x0000d4e9
    ee6c:	.word	0x0001ef34
    ee70:	.word	0x0001eee8
    ee74:	.word	0x0001eed4
    ee78:	.word	0x0001eea0
    ee7c:	.word	0x0001ee5c
    ee80:	.word	0x0000d359
    ee84:	.word	0x0001ec78
    ee88:	.word	0x0001ec6c
    ee8c:	.word	0x0001ec44
    ee90:	.word	0x0000d1f6
    ee94:	.word	0x0001ebd4
    ee98:	.word	0x0001eb88
    ee9c:	.word	0x0001eb50
    eea0:	.word	0x0001eb18
    eea4:	.word	0x0000d100
    eea8:	.word	0x0000d089
    eeac:	cmp	r7, fp
    eeb0:	strb	r0, [r1, r2]
    eeb4:	bne	ef64 <sfbpf_lex+0x10e8>
    eeb8:	ldr	r3, [pc, #-60]	; ee84 <sfbpf_lex+0x1008>
    eebc:	add	r3, pc, r3
    eec0:	str	fp, [r3, #24]
    eec4:	ldr	r3, [pc, #-68]	; ee88 <sfbpf_lex+0x100c>
    eec8:	add	r3, pc, r3
    eecc:	ldr	r2, [r3, #16]
    eed0:	ldr	r1, [r3, #20]
    eed4:	ldr	r3, [r3, #24]
    eed8:	ldr	r2, [r2, r1, lsl #2]
    eedc:	cmp	r3, #0
    eee0:	str	r3, [r2, #16]
    eee4:	movne	r2, #0
    eee8:	beq	ec54 <sfbpf_lex+0xdd8>
    eeec:	ldr	r3, [pc, #-104]	; ee8c <sfbpf_lex+0x1010>
    eef0:	add	r3, pc, r3
    eef4:	ldr	r9, [r3, #16]
    eef8:	ldr	fp, [r3, #20]
    eefc:	ldr	r7, [r3, #24]
    ef00:	ldr	r3, [r9, fp, lsl #2]
    ef04:	add	r8, r8, r7
    ef08:	ldr	r1, [r3, #12]
    ef0c:	cmp	r8, r1
    ef10:	ble	efd0 <sfbpf_lex+0x1154>
    ef14:	add	r7, r8, r7, asr #1
    ef18:	ldr	r0, [r3, #4]
    ef1c:	str	r3, [sp, #24]
    ef20:	mov	r1, r7
    ef24:	str	r2, [sp, #28]
    ef28:	bl	db0 <realloc@plt>
    ef2c:	ldr	r3, [sp, #24]
    ef30:	ldr	r2, [sp, #28]
    ef34:	str	r0, [r3, #4]
    ef38:	ldr	r3, [r9, fp, lsl #2]
    ef3c:	ldr	r1, [r3, #4]
    ef40:	cmp	r1, #0
    ef44:	bne	efc8 <sfbpf_lex+0x114c>
    ef48:	ldr	r0, [pc, #-192]	; ee90 <sfbpf_lex+0x1014>
    ef4c:	add	r0, pc, r0
    ef50:	b	ebdc <sfbpf_lex+0xd60>
    ef54:	ldr	r3, [pc, #-200]	; ee94 <sfbpf_lex+0x1018>
    ef58:	mov	fp, #0
    ef5c:	sub	r9, r9, #2
    ef60:	add	r3, pc, r3
    ef64:	ldr	r0, [r3, #28]
    ef68:	str	r3, [sp, #24]
    ef6c:	bl	ef4 <getc@plt>
    ef70:	cmn	r0, #1
    ef74:	ldr	r3, [sp, #24]
    ef78:	beq	f088 <sfbpf_lex+0x120c>
    ef7c:	ldr	r2, [r3, #16]
    ef80:	add	fp, fp, #1
    ef84:	cmp	r0, #10
    ef88:	ldr	r1, [r3, #20]
    ef8c:	ldr	r1, [r2, r1, lsl #2]
    ef90:	add	r2, r9, fp
    ef94:	ldr	r1, [r1, #4]
    ef98:	add	ip, r1, r2
    ef9c:	bne	eeac <sfbpf_lex+0x1030>
    efa0:	strb	r0, [ip]
    efa4:	b	eeb8 <sfbpf_lex+0x103c>
    efa8:	ldr	r3, [pc, #-280]	; ee98 <sfbpf_lex+0x101c>
    efac:	add	r3, pc, r3
    efb0:	ldr	r2, [r3, #20]
    efb4:	ldr	r3, [r3, #16]
    efb8:	ldr	r3, [r3, r2, lsl #2]
    efbc:	mov	r2, #2
    efc0:	str	r2, [r3, #44]	; 0x2c
    efc4:	b	eeec <sfbpf_lex+0x1070>
    efc8:	sub	r7, r7, #2
    efcc:	str	r7, [r3, #12]
    efd0:	ldr	r3, [r9, fp, lsl #2]
    efd4:	mov	r0, #0
    efd8:	cmp	r2, #1
    efdc:	ldr	r1, [pc, #-328]	; ee9c <sfbpf_lex+0x1020>
    efe0:	ldr	r3, [r3, #4]
    efe4:	add	r1, pc, r1
    efe8:	str	r8, [r1, #24]
    efec:	strb	r0, [r3, r8]
    eff0:	ldr	r3, [r9, fp, lsl #2]
    eff4:	ldr	r3, [r3, #4]
    eff8:	add	r8, r3, r8
    effc:	strb	r0, [r8, #1]
    f000:	ldr	r3, [r9, fp, lsl #2]
    f004:	ldr	r3, [r3, #4]
    f008:	str	r3, [r6]
    f00c:	beq	ebf8 <sfbpf_lex+0xd7c>
    f010:	cmp	r2, #2
    f014:	bne	f04c <sfbpf_lex+0x11d0>
    f018:	ldr	r3, [pc, #-384]	; eea0 <sfbpf_lex+0x1024>
    f01c:	add	r3, pc, r3
    f020:	ldr	r2, [r3, #16]
    f024:	ldr	r1, [r3, #20]
    f028:	ldr	r2, [r2, r1, lsl #2]
    f02c:	ldr	r5, [r2, #4]
    f030:	ldr	r2, [r3, #24]
    f034:	add	r5, r5, r2
    f038:	str	r5, [r3, #4]
    f03c:	bl	d948 <yy_get_previous_state>
    f040:	ldr	r3, [r6]
    f044:	str	r3, [sp]
    f048:	b	e060 <sfbpf_lex+0x1e4>
    f04c:	ldr	r2, [sp, #16]
    f050:	add	r5, r3, r2
    f054:	str	r5, [r1, #4]
    f058:	bl	d948 <yy_get_previous_state>
    f05c:	ldr	r2, [r6]
    f060:	mov	r3, r0
    f064:	str	r2, [sp]
    f068:	b	ebb0 <sfbpf_lex+0xd34>
    f06c:	ldr	r0, [pc, #-464]	; eea4 <sfbpf_lex+0x1028>
    f070:	add	r0, pc, r0
    f074:	b	ebdc <sfbpf_lex+0xd60>
    f078:	movw	r0, #258	; 0x102
    f07c:	b	e364 <sfbpf_lex+0x4e8>
    f080:	movw	r0, #307	; 0x133
    f084:	b	e364 <sfbpf_lex+0x4e8>
    f088:	ldr	r0, [r3, #28]
    f08c:	bl	d80 <ferror@plt>
    f090:	cmp	r0, #0
    f094:	beq	eeb8 <sfbpf_lex+0x103c>
    f098:	ldr	r0, [pc, #-504]	; eea8 <sfbpf_lex+0x102c>
    f09c:	add	r0, pc, r0
    f0a0:	b	ebdc <sfbpf_lex+0xd60>

0000f0a4 <sfbpf_push_buffer_state>:
    f0a4:	push	{r4, lr}
    f0a8:	subs	r4, r0, #0
    f0ac:	popeq	{r4, pc}
    f0b0:	bl	db2c <sfbpf_ensure_buffer_stack>
    f0b4:	ldr	r1, [pc, #100]	; f120 <sfbpf_push_buffer_state+0x7c>
    f0b8:	add	r1, pc, r1
    f0bc:	ldr	r2, [r1, #16]
    f0c0:	cmp	r2, #0
    f0c4:	beq	f108 <sfbpf_push_buffer_state+0x64>
    f0c8:	ldr	r3, [r1, #20]
    f0cc:	ldr	r0, [r2, r3, lsl #2]
    f0d0:	cmp	r0, #0
    f0d4:	beq	f108 <sfbpf_push_buffer_state+0x64>
    f0d8:	ldrb	ip, [r1, #32]
    f0dc:	ldr	r0, [r1, #4]
    f0e0:	strb	ip, [r0]
    f0e4:	ldr	ip, [r2, r3, lsl #2]
    f0e8:	str	r0, [ip, #8]
    f0ec:	ldr	r0, [r2, r3, lsl #2]
    f0f0:	ldr	ip, [r1, #24]
    f0f4:	str	ip, [r0, #16]
    f0f8:	ldr	r0, [r2, r3, lsl #2]
    f0fc:	cmp	r0, #0
    f100:	addne	r3, r3, #1
    f104:	strne	r3, [r1, #20]
    f108:	ldr	r3, [pc, #20]	; f124 <sfbpf_push_buffer_state+0x80>
    f10c:	add	r3, pc, r3
    f110:	ldr	r3, [r3, #20]
    f114:	str	r4, [r2, r3, lsl #2]
    f118:	pop	{r4, lr}
    f11c:	b	da90 <sfbpf__load_buffer_state>
    f120:	.word	0x0001ea7c
    f124:	.word	0x0001ea28

0000f128 <sfbpf_pop_buffer_state>:
    f128:	push	{r4, r5, r6, lr}
    f12c:	ldr	r6, [pc, #84]	; f188 <sfbpf_pop_buffer_state+0x60>
    f130:	add	r6, pc, r6
    f134:	ldr	r5, [r6, #16]
    f138:	cmp	r5, #0
    f13c:	popeq	{r4, r5, r6, pc}
    f140:	ldr	r4, [r6, #20]
    f144:	ldr	r0, [r5, r4, lsl #2]
    f148:	cmp	r0, #0
    f14c:	popeq	{r4, r5, r6, pc}
    f150:	bl	dc54 <sfbpf__delete_buffer>
    f154:	mov	r3, #0
    f158:	cmp	r4, r3
    f15c:	str	r3, [r5, r4, lsl #2]
    f160:	subne	r4, r4, #1
    f164:	ldr	r3, [pc, #32]	; f18c <sfbpf_pop_buffer_state+0x64>
    f168:	strne	r4, [r6, #20]
    f16c:	add	r3, pc, r3
    f170:	ldr	r3, [r3, #20]
    f174:	ldr	r3, [r5, r3, lsl #2]
    f178:	cmp	r3, #0
    f17c:	popeq	{r4, r5, r6, pc}
    f180:	pop	{r4, r5, r6, lr}
    f184:	b	da90 <sfbpf__load_buffer_state>
    f188:	.word	0x0001ea04
    f18c:	.word	0x0001e9c8

0000f190 <sfbpf__scan_buffer>:
    f190:	cmp	r1, #1
    f194:	push	{r4, r5, r6, r7, r8, lr}
    f198:	bls	f20c <sfbpf__scan_buffer+0x7c>
    f19c:	sub	r7, r1, #2
    f1a0:	ldrb	r4, [r0, r7]
    f1a4:	cmp	r4, #0
    f1a8:	bne	f20c <sfbpf__scan_buffer+0x7c>
    f1ac:	add	r1, r0, r1
    f1b0:	ldrb	r5, [r1, #-1]
    f1b4:	cmp	r5, #0
    f1b8:	bne	f204 <sfbpf__scan_buffer+0x74>
    f1bc:	mov	r6, r0
    f1c0:	mov	r0, #48	; 0x30
    f1c4:	bl	dec <malloc@plt>
    f1c8:	subs	r4, r0, #0
    f1cc:	bne	f1dc <sfbpf__scan_buffer+0x4c>
    f1d0:	ldr	r0, [pc, #60]	; f214 <sfbpf__scan_buffer+0x84>
    f1d4:	add	r0, pc, r0
    f1d8:	bl	daf0 <yy_fatal_error>
    f1dc:	mov	r3, #1
    f1e0:	stm	r4, {r5, r6}
    f1e4:	strd	r6, [r4, #8]
    f1e8:	str	r7, [r4, #16]
    f1ec:	str	r5, [r4, #20]
    f1f0:	str	r5, [r4, #24]
    f1f4:	str	r3, [r4, #28]
    f1f8:	str	r5, [r4, #40]	; 0x28
    f1fc:	str	r5, [r4, #44]	; 0x2c
    f200:	bl	dbd0 <sfbpf__switch_to_buffer>
    f204:	mov	r0, r4
    f208:	pop	{r4, r5, r6, r7, r8, pc}
    f20c:	mov	r4, #0
    f210:	b	f204 <sfbpf__scan_buffer+0x74>
    f214:	.word	0x0000cfcf

0000f218 <sfbpf__scan_bytes>:
    f218:	push	{r4, r5, r6, lr}
    f21c:	add	r5, r1, #2
    f220:	mov	r6, r0
    f224:	mov	r0, r5
    f228:	mov	r4, r1
    f22c:	bl	dec <malloc@plt>
    f230:	cmp	r0, #0
    f234:	movne	r3, #0
    f238:	bne	f254 <sfbpf__scan_bytes+0x3c>
    f23c:	ldr	r0, [pc, #76]	; f290 <sfbpf__scan_bytes+0x78>
    f240:	add	r0, pc, r0
    f244:	bl	daf0 <yy_fatal_error>
    f248:	ldrb	r2, [r6, r3]
    f24c:	strb	r2, [r0, r3]
    f250:	add	r3, r3, #1
    f254:	cmp	r3, r4
    f258:	blt	f248 <sfbpf__scan_bytes+0x30>
    f25c:	mov	r3, #0
    f260:	add	r2, r0, r4
    f264:	mov	r1, r5
    f268:	strb	r3, [r2, #1]
    f26c:	strb	r3, [r0, r4]
    f270:	bl	f190 <sfbpf__scan_buffer>
    f274:	subs	r3, r0, #0
    f278:	ldreq	r0, [pc, #20]	; f294 <sfbpf__scan_bytes+0x7c>
    f27c:	addeq	r0, pc, r0
    f280:	beq	f244 <sfbpf__scan_bytes+0x2c>
    f284:	mov	r2, #1
    f288:	str	r2, [r3, #20]
    f28c:	pop	{r4, r5, r6, pc}
    f290:	.word	0x0000cf8d
    f294:	.word	0x0000cf7a

0000f298 <sfbpf__scan_string>:
    f298:	push	{r4, lr}
    f29c:	mov	r4, r0
    f2a0:	bl	e1c <strlen@plt>
    f2a4:	mov	r1, r0
    f2a8:	mov	r0, r4
    f2ac:	pop	{r4, lr}
    f2b0:	b	f218 <sfbpf__scan_bytes>

0000f2b4 <sfbpf_get_debug>:
    f2b4:	ldr	r3, [pc, #8]	; f2c4 <sfbpf_get_debug+0x10>
    f2b8:	add	r3, pc, r3
    f2bc:	ldr	r0, [r3, #48]	; 0x30
    f2c0:	bx	lr
    f2c4:	.word	0x0001e87c

0000f2c8 <sfbpf_set_debug>:
    f2c8:	ldr	r3, [pc, #8]	; f2d8 <sfbpf_set_debug+0x10>
    f2cc:	add	r3, pc, r3
    f2d0:	str	r0, [r3, #48]	; 0x30
    f2d4:	bx	lr
    f2d8:	.word	0x0001e868

0000f2dc <sfbpf_lex_destroy>:
    f2dc:	push	{r4, r5, r6, r7, r8, lr}
    f2e0:	mov	r7, #0
    f2e4:	ldr	r6, [pc, #100]	; f350 <sfbpf_lex_destroy+0x74>
    f2e8:	add	r6, pc, r6
    f2ec:	ldr	r4, [r6, #16]
    f2f0:	cmp	r4, #0
    f2f4:	beq	f308 <sfbpf_lex_destroy+0x2c>
    f2f8:	ldr	r5, [r6, #20]
    f2fc:	ldr	r0, [r4, r5, lsl #2]
    f300:	cmp	r0, #0
    f304:	bne	f340 <sfbpf_lex_destroy+0x64>
    f308:	mov	r0, r4
    f30c:	bl	d68 <free@plt>
    f310:	ldr	r3, [pc, #60]	; f354 <sfbpf_lex_destroy+0x78>
    f314:	mov	r0, #0
    f318:	add	r3, pc, r3
    f31c:	str	r0, [r3]
    f320:	str	r0, [r3, #4]
    f324:	str	r0, [r3, #16]
    f328:	str	r0, [r3, #20]
    f32c:	str	r0, [r3, #28]
    f330:	str	r0, [r3, #36]	; 0x24
    f334:	str	r0, [r3, #40]	; 0x28
    f338:	str	r0, [r3, #44]	; 0x2c
    f33c:	pop	{r4, r5, r6, r7, r8, pc}
    f340:	bl	dc54 <sfbpf__delete_buffer>
    f344:	str	r7, [r4, r5, lsl #2]
    f348:	bl	f128 <sfbpf_pop_buffer_state>
    f34c:	b	f2ec <sfbpf_lex_destroy+0x10>
    f350:	.word	0x0001e84c
    f354:	.word	0x0001e81c

0000f358 <sfbpf_alloc>:
    f358:	b	dec <malloc@plt>

0000f35c <sfbpf_realloc>:
    f35c:	b	db0 <realloc@plt>

0000f360 <sfbpf_free>:
    f360:	b	d68 <free@plt>

0000f364 <sf_lex_init>:
    f364:	push	{r4, lr}
    f368:	bl	f298 <sfbpf__scan_string>
    f36c:	ldr	r3, [pc, #8]	; f37c <sf_lex_init+0x18>
    f370:	add	r3, pc, r3
    f374:	str	r0, [r3, #52]	; 0x34
    f378:	pop	{r4, pc}
    f37c:	.word	0x0001e7c4

0000f380 <sf_lex_cleanup>:
    f380:	ldr	r3, [pc, #40]	; f3b0 <sf_lex_cleanup+0x30>
    f384:	push	{r4, lr}
    f388:	add	r3, pc, r3
    f38c:	ldr	r0, [r3, #52]	; 0x34
    f390:	cmp	r0, #0
    f394:	beq	f39c <sf_lex_cleanup+0x1c>
    f398:	bl	dc54 <sfbpf__delete_buffer>
    f39c:	ldr	r3, [pc, #16]	; f3b4 <sf_lex_cleanup+0x34>
    f3a0:	mov	r2, #0
    f3a4:	add	r3, pc, r3
    f3a8:	str	r2, [r3, #52]	; 0x34
    f3ac:	pop	{r4, pc}
    f3b0:	.word	0x0001e7ac
    f3b4:	.word	0x0001e790

0000f3b8 <sfbpf_wrap>:
    f3b8:	mov	r0, #1
    f3bc:	bx	lr

Disassembly of section .fini:

0000f3c0 <_fini>:
    f3c0:	push	{r3, lr}
    f3c4:	pop	{r3, pc}
