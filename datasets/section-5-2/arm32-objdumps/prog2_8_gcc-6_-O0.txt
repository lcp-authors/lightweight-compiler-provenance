
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010aa0 <.init>:
   10aa0:	push	{r3, lr}
   10aa4:	bl	10b80 <_start@@Base+0x3c>
   10aa8:	pop	{r3, pc}

Disassembly of section .plt:

00010aac <calloc@plt-0x14>:
   10aac:	push	{lr}		; (str lr, [sp, #-4]!)
   10ab0:	ldr	lr, [pc, #4]	; 10abc <calloc@plt-0x4>
   10ab4:	add	lr, pc, lr
   10ab8:	ldr	pc, [lr, #8]!
   10abc:	andeq	r3, r1, r4, asr #10

00010ac0 <calloc@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #77824	; 0x13000
   10ac8:	ldr	pc, [ip, #1348]!	; 0x544

00010acc <printf@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #77824	; 0x13000
   10ad4:	ldr	pc, [ip, #1340]!	; 0x53c

00010ad8 <free@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #77824	; 0x13000
   10ae0:	ldr	pc, [ip, #1332]!	; 0x534

00010ae4 <realloc@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #77824	; 0x13000
   10aec:	ldr	pc, [ip, #1324]!	; 0x52c

00010af0 <puts@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #77824	; 0x13000
   10af8:	ldr	pc, [ip, #1316]!	; 0x524

00010afc <malloc@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #77824	; 0x13000
   10b04:	ldr	pc, [ip, #1308]!	; 0x51c

00010b08 <__libc_start_main@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #77824	; 0x13000
   10b10:	ldr	pc, [ip, #1300]!	; 0x514

00010b14 <__gmon_start__@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #77824	; 0x13000
   10b1c:	ldr	pc, [ip, #1292]!	; 0x50c

00010b20 <setvbuf@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #77824	; 0x13000
   10b28:	ldr	pc, [ip, #1284]!	; 0x504

00010b2c <putchar@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #77824	; 0x13000
   10b34:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b38 <abort@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #77824	; 0x13000
   10b40:	ldr	pc, [ip, #1268]!	; 0x4f4

Disassembly of section .text:

00010b44 <_start@@Base>:
   10b44:	mov	fp, #0
   10b48:	mov	lr, #0
   10b4c:	pop	{r1}		; (ldr r1, [sp], #4)
   10b50:	mov	r2, sp
   10b54:	push	{r2}		; (str r2, [sp, #-4]!)
   10b58:	push	{r0}		; (str r0, [sp, #-4]!)
   10b5c:	ldr	ip, [pc, #16]	; 10b74 <_start@@Base+0x30>
   10b60:	push	{ip}		; (str ip, [sp, #-4]!)
   10b64:	ldr	r0, [pc, #12]	; 10b78 <_start@@Base+0x34>
   10b68:	ldr	r3, [pc, #12]	; 10b7c <_start@@Base+0x38>
   10b6c:	bl	10b08 <__libc_start_main@plt>
   10b70:	bl	10b38 <abort@plt>
   10b74:	andeq	r3, r1, r8, lsl r1
   10b78:	strheq	r2, [r1], -r4
   10b7c:	strheq	r3, [r1], -r8
   10b80:	ldr	r3, [pc, #20]	; 10b9c <_start@@Base+0x58>
   10b84:	ldr	r2, [pc, #20]	; 10ba0 <_start@@Base+0x5c>
   10b88:	add	r3, pc, r3
   10b8c:	ldr	r2, [r3, r2]
   10b90:	cmp	r2, #0
   10b94:	bxeq	lr
   10b98:	b	10b14 <__gmon_start__@plt>
   10b9c:	andeq	r3, r1, r0, ror r4
   10ba0:	andeq	r0, r0, ip, lsr r0
   10ba4:	ldr	r3, [pc, #28]	; 10bc8 <_start@@Base+0x84>
   10ba8:	ldr	r0, [pc, #28]	; 10bcc <_start@@Base+0x88>
   10bac:	sub	r3, r3, r0
   10bb0:	cmp	r3, #6
   10bb4:	bxls	lr
   10bb8:	ldr	r3, [pc, #16]	; 10bd0 <_start@@Base+0x8c>
   10bbc:	cmp	r3, #0
   10bc0:	bxeq	lr
   10bc4:	bx	r3
   10bc8:	andeq	r4, r2, pc, asr #32
   10bcc:	andeq	r4, r2, ip, asr #32
   10bd0:	andeq	r0, r0, r0
   10bd4:	ldr	r1, [pc, #36]	; 10c00 <_start@@Base+0xbc>
   10bd8:	ldr	r0, [pc, #36]	; 10c04 <_start@@Base+0xc0>
   10bdc:	sub	r1, r1, r0
   10be0:	asr	r1, r1, #2
   10be4:	add	r1, r1, r1, lsr #31
   10be8:	asrs	r1, r1, #1
   10bec:	bxeq	lr
   10bf0:	ldr	r3, [pc, #16]	; 10c08 <_start@@Base+0xc4>
   10bf4:	cmp	r3, #0
   10bf8:	bxeq	lr
   10bfc:	bx	r3
   10c00:	andeq	r4, r2, ip, asr #32
   10c04:	andeq	r4, r2, ip, asr #32
   10c08:	andeq	r0, r0, r0
   10c0c:	push	{r4, lr}
   10c10:	ldr	r4, [pc, #24]	; 10c30 <_start@@Base+0xec>
   10c14:	ldrb	r3, [r4]
   10c18:	cmp	r3, #0
   10c1c:	popne	{r4, pc}
   10c20:	bl	10ba4 <_start@@Base+0x60>
   10c24:	mov	r3, #1
   10c28:	strb	r3, [r4]
   10c2c:	pop	{r4, pc}
   10c30:	andeq	r4, r2, ip, asr #32
   10c34:	ldr	r0, [pc, #40]	; 10c64 <_start@@Base+0x120>
   10c38:	ldr	r3, [r0]
   10c3c:	cmp	r3, #0
   10c40:	bne	10c48 <_start@@Base+0x104>
   10c44:	b	10bd4 <_start@@Base+0x90>
   10c48:	ldr	r3, [pc, #24]	; 10c68 <_start@@Base+0x124>
   10c4c:	cmp	r3, #0
   10c50:	beq	10c44 <_start@@Base+0x100>
   10c54:	push	{r4, lr}
   10c58:	blx	r3
   10c5c:	pop	{r4, lr}
   10c60:	b	10bd4 <_start@@Base+0x90>
   10c64:	andeq	r3, r2, r4, lsl pc
   10c68:	andeq	r0, r0, r0

00010c6c <_g@@Base>:
   10c6c:	push	{r1, r2, r3}
   10c70:	push	{fp, lr}
   10c74:	add	fp, sp, #4
   10c78:	sub	sp, sp, #36	; 0x24
   10c7c:	str	r0, [fp, #-36]	; 0xffffffdc
   10c80:	mov	r0, #8
   10c84:	bl	10afc <malloc@plt>
   10c88:	mov	r3, r0
   10c8c:	str	r3, [fp, #-16]
   10c90:	add	r3, fp, #8
   10c94:	str	r3, [fp, #-32]	; 0xffffffe0
   10c98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10c9c:	mov	r1, #8
   10ca0:	mov	r0, r3
   10ca4:	bl	10ac0 <calloc@plt>
   10ca8:	mov	r3, r0
   10cac:	mov	r2, r3
   10cb0:	ldr	r3, [fp, #-16]
   10cb4:	str	r2, [r3, #4]
   10cb8:	mov	r3, #0
   10cbc:	str	r3, [fp, #-12]
   10cc0:	b	10d74 <_g@@Base+0x108>
   10cc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10cc8:	add	r2, r3, #4
   10ccc:	str	r2, [fp, #-32]	; 0xffffffe0
   10cd0:	ldr	r3, [r3]
   10cd4:	str	r3, [fp, #-20]	; 0xffffffec
   10cd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10cdc:	add	r2, r3, #4
   10ce0:	str	r2, [fp, #-32]	; 0xffffffe0
   10ce4:	ldr	r3, [r3]
   10ce8:	str	r3, [fp, #-24]	; 0xffffffe8
   10cec:	mov	r1, #8
   10cf0:	mov	r0, #1
   10cf4:	bl	10ac0 <calloc@plt>
   10cf8:	mov	r3, r0
   10cfc:	str	r3, [fp, #-28]	; 0xffffffe4
   10d00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10d04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10d08:	str	r2, [r3]
   10d0c:	ldr	r3, [fp, #-16]
   10d10:	ldr	r2, [r3, #4]
   10d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d18:	lsl	r3, r3, #3
   10d1c:	add	r3, r2, r3
   10d20:	ldr	r2, [r3, #4]
   10d24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10d28:	str	r2, [r3, #4]
   10d2c:	ldr	r3, [fp, #-16]
   10d30:	ldr	r2, [r3, #4]
   10d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d38:	lsl	r3, r3, #3
   10d3c:	add	r3, r2, r3
   10d40:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10d44:	str	r2, [r3, #4]
   10d48:	ldr	r3, [fp, #-16]
   10d4c:	ldr	r2, [r3, #4]
   10d50:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d54:	lsl	r3, r3, #3
   10d58:	add	r3, r2, r3
   10d5c:	ldr	r2, [r3]
   10d60:	add	r2, r2, #1
   10d64:	str	r2, [r3]
   10d68:	ldr	r3, [fp, #-12]
   10d6c:	add	r3, r3, #2
   10d70:	str	r3, [fp, #-12]
   10d74:	ldr	r2, [fp, #-12]
   10d78:	ldr	r3, [fp, #4]
   10d7c:	cmp	r2, r3
   10d80:	blt	10cc4 <_g@@Base+0x58>
   10d84:	ldr	r3, [fp, #-16]
   10d88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10d8c:	str	r2, [r3]
   10d90:	ldr	r3, [fp, #-16]
   10d94:	mov	r0, r3
   10d98:	sub	sp, fp, #4
   10d9c:	pop	{fp, lr}
   10da0:	add	sp, sp, #12
   10da4:	bx	lr

00010da8 <_f@@Base>:
   10da8:	push	{fp, lr}
   10dac:	add	fp, sp, #4
   10db0:	sub	sp, sp, #16
   10db4:	str	r0, [fp, #-16]
   10db8:	str	r1, [fp, #-20]	; 0xffffffec
   10dbc:	ldr	r3, [fp, #-16]
   10dc0:	cmp	r3, #0
   10dc4:	bne	10dd0 <_f@@Base+0x28>
   10dc8:	mov	r3, #0
   10dcc:	b	10e24 <_f@@Base+0x7c>
   10dd0:	mov	r3, #0
   10dd4:	str	r3, [fp, #-8]
   10dd8:	b	10e0c <_f@@Base+0x64>
   10ddc:	ldr	r1, [fp, #-8]
   10de0:	ldr	r0, [fp, #-16]
   10de4:	bl	12c2c <vetor_elemento@@Base>
   10de8:	mov	r2, r0
   10dec:	ldr	r3, [fp, #-20]	; 0xffffffec
   10df0:	cmp	r2, r3
   10df4:	bne	10e00 <_f@@Base+0x58>
   10df8:	mov	r3, #1
   10dfc:	b	10e24 <_f@@Base+0x7c>
   10e00:	ldr	r3, [fp, #-8]
   10e04:	add	r3, r3, #1
   10e08:	str	r3, [fp, #-8]
   10e0c:	ldr	r3, [fp, #-16]
   10e10:	ldr	r2, [r3]
   10e14:	ldr	r3, [fp, #-8]
   10e18:	cmp	r2, r3
   10e1c:	bgt	10ddc <_f@@Base+0x34>
   10e20:	mov	r3, #0
   10e24:	mov	r0, r3
   10e28:	sub	sp, fp, #4
   10e2c:	pop	{fp, pc}

00010e30 <teste_grafo_novo@@Base>:
   10e30:	push	{fp, lr}
   10e34:	add	fp, sp, #4
   10e38:	sub	sp, sp, #8
   10e3c:	mov	r3, #0
   10e40:	str	r3, [fp, #-8]
   10e44:	ldr	r3, [pc, #368]	; 10fbc <teste_grafo_novo@@Base+0x18c>
   10e48:	add	r3, pc, r3
   10e4c:	mov	r0, r3
   10e50:	bl	10acc <printf@plt>
   10e54:	mov	r0, #10
   10e58:	bl	1225c <grafo_novo@@Base>
   10e5c:	str	r0, [fp, #-12]
   10e60:	ldr	r3, [fp, #-12]
   10e64:	cmp	r3, #0
   10e68:	bne	10eb8 <teste_grafo_novo@@Base+0x88>
   10e6c:	ldr	r3, [pc, #332]	; 10fc0 <teste_grafo_novo@@Base+0x190>
   10e70:	add	r3, pc, r3
   10e74:	mov	r0, r3
   10e78:	bl	10acc <printf@plt>
   10e7c:	ldr	r3, [fp, #-8]
   10e80:	add	r3, r3, #1
   10e84:	str	r3, [fp, #-8]
   10e88:	ldr	r3, [fp, #-8]
   10e8c:	cmp	r3, #0
   10e90:	bne	10ea8 <teste_grafo_novo@@Base+0x78>
   10e94:	ldr	r3, [pc, #296]	; 10fc4 <teste_grafo_novo@@Base+0x194>
   10e98:	add	r3, pc, r3
   10e9c:	mov	r0, r3
   10ea0:	bl	10af0 <puts@plt>
   10ea4:	b	10eb0 <teste_grafo_novo@@Base+0x80>
   10ea8:	mov	r0, #10
   10eac:	bl	10b2c <putchar@plt>
   10eb0:	ldr	r3, [fp, #-8]
   10eb4:	b	10fb0 <teste_grafo_novo@@Base+0x180>
   10eb8:	ldr	r3, [fp, #-12]
   10ebc:	ldr	r3, [r3]
   10ec0:	cmp	r3, #10
   10ec4:	beq	10ee4 <teste_grafo_novo@@Base+0xb4>
   10ec8:	ldr	r3, [pc, #248]	; 10fc8 <teste_grafo_novo@@Base+0x198>
   10ecc:	add	r3, pc, r3
   10ed0:	mov	r0, r3
   10ed4:	bl	10acc <printf@plt>
   10ed8:	ldr	r3, [fp, #-8]
   10edc:	add	r3, r3, #1
   10ee0:	str	r3, [fp, #-8]
   10ee4:	ldr	r0, [fp, #-12]
   10ee8:	bl	1232c <grafo_apaga@@Base>
   10eec:	mov	r0, #1
   10ef0:	bl	1225c <grafo_novo@@Base>
   10ef4:	str	r0, [fp, #-12]
   10ef8:	ldr	r3, [fp, #-12]
   10efc:	cmp	r3, #0
   10f00:	bne	10f50 <teste_grafo_novo@@Base+0x120>
   10f04:	ldr	r3, [pc, #192]	; 10fcc <teste_grafo_novo@@Base+0x19c>
   10f08:	add	r3, pc, r3
   10f0c:	mov	r0, r3
   10f10:	bl	10acc <printf@plt>
   10f14:	ldr	r3, [fp, #-8]
   10f18:	add	r3, r3, #1
   10f1c:	str	r3, [fp, #-8]
   10f20:	ldr	r3, [fp, #-8]
   10f24:	cmp	r3, #0
   10f28:	bne	10f40 <teste_grafo_novo@@Base+0x110>
   10f2c:	ldr	r3, [pc, #156]	; 10fd0 <teste_grafo_novo@@Base+0x1a0>
   10f30:	add	r3, pc, r3
   10f34:	mov	r0, r3
   10f38:	bl	10af0 <puts@plt>
   10f3c:	b	10f48 <teste_grafo_novo@@Base+0x118>
   10f40:	mov	r0, #10
   10f44:	bl	10b2c <putchar@plt>
   10f48:	ldr	r3, [fp, #-8]
   10f4c:	b	10fb0 <teste_grafo_novo@@Base+0x180>
   10f50:	ldr	r3, [fp, #-12]
   10f54:	ldr	r3, [r3]
   10f58:	cmp	r3, #1
   10f5c:	beq	10f7c <teste_grafo_novo@@Base+0x14c>
   10f60:	ldr	r3, [pc, #108]	; 10fd4 <teste_grafo_novo@@Base+0x1a4>
   10f64:	add	r3, pc, r3
   10f68:	mov	r0, r3
   10f6c:	bl	10acc <printf@plt>
   10f70:	ldr	r3, [fp, #-8]
   10f74:	add	r3, r3, #1
   10f78:	str	r3, [fp, #-8]
   10f7c:	ldr	r0, [fp, #-12]
   10f80:	bl	1232c <grafo_apaga@@Base>
   10f84:	ldr	r3, [fp, #-8]
   10f88:	cmp	r3, #0
   10f8c:	bne	10fa4 <teste_grafo_novo@@Base+0x174>
   10f90:	ldr	r3, [pc, #64]	; 10fd8 <teste_grafo_novo@@Base+0x1a8>
   10f94:	add	r3, pc, r3
   10f98:	mov	r0, r3
   10f9c:	bl	10af0 <puts@plt>
   10fa0:	b	10fac <teste_grafo_novo@@Base+0x17c>
   10fa4:	mov	r0, #10
   10fa8:	bl	10b2c <putchar@plt>
   10fac:	ldr	r3, [fp, #-8]
   10fb0:	mov	r0, r3
   10fb4:	sub	sp, fp, #4
   10fb8:	pop	{fp, pc}
   10fbc:	ldrdeq	r2, [r0], -r8
   10fc0:	andeq	r2, r0, r0, asr #5
   10fc4:			; <UNDEFINED> instruction: 0x000022b0
   10fc8:	andeq	r2, r0, r0, lsl #5
   10fcc:	andeq	r2, r0, r8, lsr #4
   10fd0:	andeq	r2, r0, r8, lsl r2
   10fd4:	andeq	r2, r0, ip, lsl #4
   10fd8:			; <UNDEFINED> instruction: 0x000021b4

00010fdc <teste_grafo_aresta@@Base>:
   10fdc:	push	{fp, lr}
   10fe0:	add	fp, sp, #4
   10fe4:	sub	sp, sp, #88	; 0x58
   10fe8:	mov	r3, #0
   10fec:	str	r3, [fp, #-8]
   10ff0:	mov	r3, #1
   10ff4:	str	r3, [sp, #76]	; 0x4c
   10ff8:	mov	r3, #0
   10ffc:	str	r3, [sp, #72]	; 0x48
   11000:	mov	r3, #3
   11004:	str	r3, [sp, #68]	; 0x44
   11008:	mov	r3, #6
   1100c:	str	r3, [sp, #64]	; 0x40
   11010:	mov	r3, #6
   11014:	str	r3, [sp, #60]	; 0x3c
   11018:	mov	r3, #7
   1101c:	str	r3, [sp, #56]	; 0x38
   11020:	mov	r3, #1
   11024:	str	r3, [sp, #52]	; 0x34
   11028:	mov	r3, #1
   1102c:	str	r3, [sp, #48]	; 0x30
   11030:	mov	r3, #6
   11034:	str	r3, [sp, #44]	; 0x2c
   11038:	mov	r3, #4
   1103c:	str	r3, [sp, #40]	; 0x28
   11040:	mov	r3, #0
   11044:	str	r3, [sp, #36]	; 0x24
   11048:	mov	r3, #4
   1104c:	str	r3, [sp, #32]
   11050:	mov	r3, #4
   11054:	str	r3, [sp, #28]
   11058:	mov	r3, #5
   1105c:	str	r3, [sp, #24]
   11060:	mov	r3, #5
   11064:	str	r3, [sp, #20]
   11068:	mov	r3, #7
   1106c:	str	r3, [sp, #16]
   11070:	mov	r3, #2
   11074:	str	r3, [sp, #12]
   11078:	mov	r3, #0
   1107c:	str	r3, [sp, #8]
   11080:	mov	r3, #2
   11084:	str	r3, [sp, #4]
   11088:	mov	r3, #7
   1108c:	str	r3, [sp]
   11090:	mov	r3, #2
   11094:	mov	r2, #3
   11098:	mov	r1, #22
   1109c:	mov	r0, #8
   110a0:	bl	10c6c <_g@@Base>
   110a4:	str	r0, [fp, #-12]
   110a8:	ldr	r3, [pc, #296]	; 111d8 <teste_grafo_aresta@@Base+0x1fc>
   110ac:	add	r3, pc, r3
   110b0:	mov	r0, r3
   110b4:	bl	10acc <printf@plt>
   110b8:	mov	r2, #4
   110bc:	mov	r1, #5
   110c0:	ldr	r0, [fp, #-12]
   110c4:	bl	123e8 <grafo_aresta@@Base>
   110c8:	mov	r3, r0
   110cc:	cmp	r3, #1
   110d0:	beq	110f0 <teste_grafo_aresta@@Base+0x114>
   110d4:	ldr	r3, [pc, #256]	; 111dc <teste_grafo_aresta@@Base+0x200>
   110d8:	add	r3, pc, r3
   110dc:	mov	r0, r3
   110e0:	bl	10acc <printf@plt>
   110e4:	ldr	r3, [fp, #-8]
   110e8:	add	r3, r3, #1
   110ec:	str	r3, [fp, #-8]
   110f0:	mov	r2, #6
   110f4:	mov	r1, #7
   110f8:	ldr	r0, [fp, #-12]
   110fc:	bl	123e8 <grafo_aresta@@Base>
   11100:	mov	r3, r0
   11104:	cmp	r3, #1
   11108:	beq	11128 <teste_grafo_aresta@@Base+0x14c>
   1110c:	ldr	r3, [pc, #204]	; 111e0 <teste_grafo_aresta@@Base+0x204>
   11110:	add	r3, pc, r3
   11114:	mov	r0, r3
   11118:	bl	10acc <printf@plt>
   1111c:	ldr	r3, [fp, #-8]
   11120:	add	r3, r3, #1
   11124:	str	r3, [fp, #-8]
   11128:	mov	r2, #1
   1112c:	mov	r1, #7
   11130:	ldr	r0, [fp, #-12]
   11134:	bl	123e8 <grafo_aresta@@Base>
   11138:	mov	r3, r0
   1113c:	cmp	r3, #0
   11140:	beq	11160 <teste_grafo_aresta@@Base+0x184>
   11144:	ldr	r3, [pc, #152]	; 111e4 <teste_grafo_aresta@@Base+0x208>
   11148:	add	r3, pc, r3
   1114c:	mov	r0, r3
   11150:	bl	10acc <printf@plt>
   11154:	ldr	r3, [fp, #-8]
   11158:	add	r3, r3, #1
   1115c:	str	r3, [fp, #-8]
   11160:	mov	r2, #7
   11164:	mov	r1, #2
   11168:	mov	r0, #0
   1116c:	bl	123e8 <grafo_aresta@@Base>
   11170:	mov	r3, r0
   11174:	cmn	r3, #1
   11178:	beq	11198 <teste_grafo_aresta@@Base+0x1bc>
   1117c:	ldr	r3, [pc, #100]	; 111e8 <teste_grafo_aresta@@Base+0x20c>
   11180:	add	r3, pc, r3
   11184:	mov	r0, r3
   11188:	bl	10acc <printf@plt>
   1118c:	ldr	r3, [fp, #-8]
   11190:	add	r3, r3, #1
   11194:	str	r3, [fp, #-8]
   11198:	ldr	r0, [fp, #-12]
   1119c:	bl	1232c <grafo_apaga@@Base>
   111a0:	ldr	r3, [fp, #-8]
   111a4:	cmp	r3, #0
   111a8:	bne	111c0 <teste_grafo_aresta@@Base+0x1e4>
   111ac:	ldr	r3, [pc, #56]	; 111ec <teste_grafo_aresta@@Base+0x210>
   111b0:	add	r3, pc, r3
   111b4:	mov	r0, r3
   111b8:	bl	10af0 <puts@plt>
   111bc:	b	111c8 <teste_grafo_aresta@@Base+0x1ec>
   111c0:	mov	r0, #10
   111c4:	bl	10b2c <putchar@plt>
   111c8:	ldr	r3, [fp, #-8]
   111cc:	mov	r0, r3
   111d0:	sub	sp, fp, #4
   111d4:	pop	{fp, pc}
   111d8:	andeq	r2, r0, r8, ror #1
   111dc:	ldrdeq	r2, [r0], -r0
   111e0:	muleq	r0, r8, r0
   111e4:	muleq	r0, r8, r0
   111e8:	muleq	r0, ip, r0
   111ec:	muleq	r0, r8, pc	; <UNPREDICTABLE>

000111f0 <teste_grafo_adiciona@@Base>:
   111f0:	push	{fp, lr}
   111f4:	add	fp, sp, #4
   111f8:	sub	sp, sp, #16
   111fc:	mov	r3, #0
   11200:	str	r3, [fp, #-8]
   11204:	mov	r3, #2
   11208:	str	r3, [sp, #4]
   1120c:	mov	r3, #7
   11210:	str	r3, [sp]
   11214:	mov	r3, #2
   11218:	mov	r2, #3
   1121c:	mov	r1, #4
   11220:	mov	r0, #9
   11224:	bl	10c6c <_g@@Base>
   11228:	str	r0, [fp, #-12]
   1122c:	ldr	r3, [pc, #664]	; 114cc <teste_grafo_adiciona@@Base+0x2dc>
   11230:	add	r3, pc, r3
   11234:	mov	r0, r3
   11238:	bl	10acc <printf@plt>
   1123c:	mov	r2, #7
   11240:	mov	r1, #2
   11244:	ldr	r0, [fp, #-12]
   11248:	bl	124ac <grafo_adiciona@@Base>
   1124c:	mov	r3, r0
   11250:	cmp	r3, #1
   11254:	beq	11274 <teste_grafo_adiciona@@Base+0x84>
   11258:	ldr	r3, [pc, #624]	; 114d0 <teste_grafo_adiciona@@Base+0x2e0>
   1125c:	add	r3, pc, r3
   11260:	mov	r0, r3
   11264:	bl	10acc <printf@plt>
   11268:	ldr	r3, [fp, #-8]
   1126c:	add	r3, r3, #1
   11270:	str	r3, [fp, #-8]
   11274:	ldr	r3, [fp, #-12]
   11278:	ldr	r3, [r3, #4]
   1127c:	add	r3, r3, #16
   11280:	ldr	r3, [r3, #4]
   11284:	cmp	r3, #0
   11288:	beq	112a8 <teste_grafo_adiciona@@Base+0xb8>
   1128c:	ldr	r3, [fp, #-12]
   11290:	ldr	r3, [r3, #4]
   11294:	add	r3, r3, #16
   11298:	ldr	r3, [r3, #4]
   1129c:	ldr	r3, [r3]
   112a0:	cmp	r3, #7
   112a4:	beq	112c4 <teste_grafo_adiciona@@Base+0xd4>
   112a8:	ldr	r3, [pc, #548]	; 114d4 <teste_grafo_adiciona@@Base+0x2e4>
   112ac:	add	r3, pc, r3
   112b0:	mov	r0, r3
   112b4:	bl	10acc <printf@plt>
   112b8:	ldr	r3, [fp, #-8]
   112bc:	add	r3, r3, #1
   112c0:	str	r3, [fp, #-8]
   112c4:	mov	r2, #8
   112c8:	mov	r1, #3
   112cc:	ldr	r0, [fp, #-12]
   112d0:	bl	124ac <grafo_adiciona@@Base>
   112d4:	mov	r3, r0
   112d8:	cmp	r3, #1
   112dc:	beq	112fc <teste_grafo_adiciona@@Base+0x10c>
   112e0:	ldr	r3, [pc, #496]	; 114d8 <teste_grafo_adiciona@@Base+0x2e8>
   112e4:	add	r3, pc, r3
   112e8:	mov	r0, r3
   112ec:	bl	10acc <printf@plt>
   112f0:	ldr	r3, [fp, #-8]
   112f4:	add	r3, r3, #1
   112f8:	str	r3, [fp, #-8]
   112fc:	ldr	r3, [fp, #-12]
   11300:	ldr	r3, [r3, #4]
   11304:	add	r3, r3, #24
   11308:	ldr	r3, [r3, #4]
   1130c:	cmp	r3, #0
   11310:	beq	113c8 <teste_grafo_adiciona@@Base+0x1d8>
   11314:	ldr	r3, [fp, #-12]
   11318:	ldr	r3, [r3, #4]
   1131c:	add	r3, r3, #24
   11320:	ldr	r3, [r3, #4]
   11324:	ldr	r3, [r3, #4]
   11328:	cmp	r3, #0
   1132c:	beq	113c8 <teste_grafo_adiciona@@Base+0x1d8>
   11330:	ldr	r3, [fp, #-12]
   11334:	ldr	r3, [r3, #4]
   11338:	add	r3, r3, #24
   1133c:	ldr	r3, [r3, #4]
   11340:	ldr	r3, [r3, #4]
   11344:	ldr	r3, [r3, #4]
   11348:	cmp	r3, #0
   1134c:	bne	113c8 <teste_grafo_adiciona@@Base+0x1d8>
   11350:	ldr	r3, [fp, #-12]
   11354:	ldr	r3, [r3, #4]
   11358:	add	r3, r3, #24
   1135c:	ldr	r3, [r3, #4]
   11360:	ldr	r3, [r3]
   11364:	cmp	r3, #2
   11368:	bne	1138c <teste_grafo_adiciona@@Base+0x19c>
   1136c:	ldr	r3, [fp, #-12]
   11370:	ldr	r3, [r3, #4]
   11374:	add	r3, r3, #24
   11378:	ldr	r3, [r3, #4]
   1137c:	ldr	r3, [r3, #4]
   11380:	ldr	r3, [r3]
   11384:	cmp	r3, #8
   11388:	beq	113e4 <teste_grafo_adiciona@@Base+0x1f4>
   1138c:	ldr	r3, [fp, #-12]
   11390:	ldr	r3, [r3, #4]
   11394:	add	r3, r3, #24
   11398:	ldr	r3, [r3, #4]
   1139c:	ldr	r3, [r3]
   113a0:	cmp	r3, #8
   113a4:	bne	113c8 <teste_grafo_adiciona@@Base+0x1d8>
   113a8:	ldr	r3, [fp, #-12]
   113ac:	ldr	r3, [r3, #4]
   113b0:	add	r3, r3, #24
   113b4:	ldr	r3, [r3, #4]
   113b8:	ldr	r3, [r3, #4]
   113bc:	ldr	r3, [r3]
   113c0:	cmp	r3, #2
   113c4:	beq	113e4 <teste_grafo_adiciona@@Base+0x1f4>
   113c8:	ldr	r3, [pc, #268]	; 114dc <teste_grafo_adiciona@@Base+0x2ec>
   113cc:	add	r3, pc, r3
   113d0:	mov	r0, r3
   113d4:	bl	10acc <printf@plt>
   113d8:	ldr	r3, [fp, #-8]
   113dc:	add	r3, r3, #1
   113e0:	str	r3, [fp, #-8]
   113e4:	mov	r2, #7
   113e8:	mov	r1, #2
   113ec:	ldr	r0, [fp, #-12]
   113f0:	bl	124ac <grafo_adiciona@@Base>
   113f4:	mov	r3, r0
   113f8:	cmp	r3, #0
   113fc:	beq	1141c <teste_grafo_adiciona@@Base+0x22c>
   11400:	ldr	r3, [pc, #216]	; 114e0 <teste_grafo_adiciona@@Base+0x2f0>
   11404:	add	r3, pc, r3
   11408:	mov	r0, r3
   1140c:	bl	10acc <printf@plt>
   11410:	ldr	r3, [fp, #-8]
   11414:	add	r3, r3, #1
   11418:	str	r3, [fp, #-8]
   1141c:	mov	r2, #7
   11420:	mov	r1, #22
   11424:	ldr	r0, [fp, #-12]
   11428:	bl	124ac <grafo_adiciona@@Base>
   1142c:	mov	r3, r0
   11430:	cmn	r3, #1
   11434:	beq	11454 <teste_grafo_adiciona@@Base+0x264>
   11438:	ldr	r3, [pc, #164]	; 114e4 <teste_grafo_adiciona@@Base+0x2f4>
   1143c:	add	r3, pc, r3
   11440:	mov	r0, r3
   11444:	bl	10acc <printf@plt>
   11448:	ldr	r3, [fp, #-8]
   1144c:	add	r3, r3, #1
   11450:	str	r3, [fp, #-8]
   11454:	mov	r2, #7
   11458:	mov	r1, #2
   1145c:	mov	r0, #0
   11460:	bl	124ac <grafo_adiciona@@Base>
   11464:	mov	r3, r0
   11468:	cmn	r3, #1
   1146c:	beq	1148c <teste_grafo_adiciona@@Base+0x29c>
   11470:	ldr	r3, [pc, #112]	; 114e8 <teste_grafo_adiciona@@Base+0x2f8>
   11474:	add	r3, pc, r3
   11478:	mov	r0, r3
   1147c:	bl	10acc <printf@plt>
   11480:	ldr	r3, [fp, #-8]
   11484:	add	r3, r3, #1
   11488:	str	r3, [fp, #-8]
   1148c:	ldr	r0, [fp, #-12]
   11490:	bl	1232c <grafo_apaga@@Base>
   11494:	ldr	r3, [fp, #-8]
   11498:	cmp	r3, #0
   1149c:	bne	114b4 <teste_grafo_adiciona@@Base+0x2c4>
   114a0:	ldr	r3, [pc, #68]	; 114ec <teste_grafo_adiciona@@Base+0x2fc>
   114a4:	add	r3, pc, r3
   114a8:	mov	r0, r3
   114ac:	bl	10af0 <puts@plt>
   114b0:	b	114bc <teste_grafo_adiciona@@Base+0x2cc>
   114b4:	mov	r0, #10
   114b8:	bl	10b2c <putchar@plt>
   114bc:	ldr	r3, [fp, #-8]
   114c0:	mov	r0, r3
   114c4:	sub	sp, fp, #4
   114c8:	pop	{fp, pc}
   114cc:	andeq	r2, r0, r4, lsr #32
   114d0:	andeq	r2, r0, ip
   114d4:	strdeq	r1, [r0], -r8
   114d8:	andeq	r1, r0, r4, lsl #31
   114dc:	andeq	r1, r0, r8, lsl #30
   114e0:	andeq	r1, r0, ip, lsl #30
   114e4:	andeq	r1, r0, ip, lsl #30
   114e8:	andeq	r1, r0, ip, lsl #30
   114ec:	andeq	r1, r0, r4, lsr #25

000114f0 <teste_grafo_remove@@Base>:
   114f0:	push	{fp, lr}
   114f4:	add	fp, sp, #4
   114f8:	sub	sp, sp, #24
   114fc:	mov	r3, #0
   11500:	str	r3, [fp, #-8]
   11504:	mov	r3, #1
   11508:	str	r3, [sp, #12]
   1150c:	mov	r3, #7
   11510:	str	r3, [sp, #8]
   11514:	mov	r3, #2
   11518:	str	r3, [sp, #4]
   1151c:	mov	r3, #7
   11520:	str	r3, [sp]
   11524:	mov	r3, #2
   11528:	mov	r2, #3
   1152c:	mov	r1, #6
   11530:	mov	r0, #9
   11534:	bl	10c6c <_g@@Base>
   11538:	str	r0, [fp, #-12]
   1153c:	ldr	r3, [pc, #456]	; 1170c <teste_grafo_remove@@Base+0x21c>
   11540:	add	r3, pc, r3
   11544:	mov	r0, r3
   11548:	bl	10acc <printf@plt>
   1154c:	mov	r2, #1
   11550:	mov	r1, #7
   11554:	ldr	r0, [fp, #-12]
   11558:	bl	125a8 <grafo_remove@@Base>
   1155c:	mov	r3, r0
   11560:	cmp	r3, #1
   11564:	beq	11584 <teste_grafo_remove@@Base+0x94>
   11568:	ldr	r3, [pc, #416]	; 11710 <teste_grafo_remove@@Base+0x220>
   1156c:	add	r3, pc, r3
   11570:	mov	r0, r3
   11574:	bl	10acc <printf@plt>
   11578:	ldr	r3, [fp, #-8]
   1157c:	add	r3, r3, #1
   11580:	str	r3, [fp, #-8]
   11584:	ldr	r3, [fp, #-12]
   11588:	ldr	r3, [r3, #4]
   1158c:	add	r3, r3, #56	; 0x38
   11590:	ldr	r3, [r3, #4]
   11594:	cmp	r3, #0
   11598:	beq	115d4 <teste_grafo_remove@@Base+0xe4>
   1159c:	ldr	r3, [fp, #-12]
   115a0:	ldr	r3, [r3, #4]
   115a4:	add	r3, r3, #56	; 0x38
   115a8:	ldr	r3, [r3, #4]
   115ac:	ldr	r3, [r3, #4]
   115b0:	cmp	r3, #0
   115b4:	bne	115d4 <teste_grafo_remove@@Base+0xe4>
   115b8:	ldr	r3, [fp, #-12]
   115bc:	ldr	r3, [r3, #4]
   115c0:	add	r3, r3, #56	; 0x38
   115c4:	ldr	r3, [r3, #4]
   115c8:	ldr	r3, [r3]
   115cc:	cmp	r3, #2
   115d0:	beq	115f0 <teste_grafo_remove@@Base+0x100>
   115d4:	ldr	r3, [pc, #312]	; 11714 <teste_grafo_remove@@Base+0x224>
   115d8:	add	r3, pc, r3
   115dc:	mov	r0, r3
   115e0:	bl	10acc <printf@plt>
   115e4:	ldr	r3, [fp, #-8]
   115e8:	add	r3, r3, #1
   115ec:	str	r3, [fp, #-8]
   115f0:	mov	r2, #2
   115f4:	mov	r1, #7
   115f8:	ldr	r0, [fp, #-12]
   115fc:	bl	125a8 <grafo_remove@@Base>
   11600:	mov	r3, r0
   11604:	cmp	r3, #1
   11608:	beq	11628 <teste_grafo_remove@@Base+0x138>
   1160c:	ldr	r3, [pc, #260]	; 11718 <teste_grafo_remove@@Base+0x228>
   11610:	add	r3, pc, r3
   11614:	mov	r0, r3
   11618:	bl	10acc <printf@plt>
   1161c:	ldr	r3, [fp, #-8]
   11620:	add	r3, r3, #1
   11624:	str	r3, [fp, #-8]
   11628:	ldr	r3, [fp, #-12]
   1162c:	ldr	r3, [r3, #4]
   11630:	add	r3, r3, #56	; 0x38
   11634:	ldr	r3, [r3, #4]
   11638:	cmp	r3, #0
   1163c:	beq	1165c <teste_grafo_remove@@Base+0x16c>
   11640:	ldr	r3, [pc, #212]	; 1171c <teste_grafo_remove@@Base+0x22c>
   11644:	add	r3, pc, r3
   11648:	mov	r0, r3
   1164c:	bl	10acc <printf@plt>
   11650:	ldr	r3, [fp, #-8]
   11654:	add	r3, r3, #1
   11658:	str	r3, [fp, #-8]
   1165c:	mov	r2, #0
   11660:	mov	r1, #4
   11664:	ldr	r0, [fp, #-12]
   11668:	bl	125a8 <grafo_remove@@Base>
   1166c:	mov	r3, r0
   11670:	cmp	r3, #0
   11674:	beq	11694 <teste_grafo_remove@@Base+0x1a4>
   11678:	ldr	r3, [pc, #160]	; 11720 <teste_grafo_remove@@Base+0x230>
   1167c:	add	r3, pc, r3
   11680:	mov	r0, r3
   11684:	bl	10acc <printf@plt>
   11688:	ldr	r3, [fp, #-8]
   1168c:	add	r3, r3, #1
   11690:	str	r3, [fp, #-8]
   11694:	mov	r2, #22
   11698:	mov	r1, #7
   1169c:	ldr	r0, [fp, #-12]
   116a0:	bl	125a8 <grafo_remove@@Base>
   116a4:	mov	r3, r0
   116a8:	cmn	r3, #1
   116ac:	beq	116cc <teste_grafo_remove@@Base+0x1dc>
   116b0:	ldr	r3, [pc, #108]	; 11724 <teste_grafo_remove@@Base+0x234>
   116b4:	add	r3, pc, r3
   116b8:	mov	r0, r3
   116bc:	bl	10acc <printf@plt>
   116c0:	ldr	r3, [fp, #-8]
   116c4:	add	r3, r3, #1
   116c8:	str	r3, [fp, #-8]
   116cc:	ldr	r0, [fp, #-12]
   116d0:	bl	1232c <grafo_apaga@@Base>
   116d4:	ldr	r3, [fp, #-8]
   116d8:	cmp	r3, #0
   116dc:	bne	116f4 <teste_grafo_remove@@Base+0x204>
   116e0:	ldr	r3, [pc, #64]	; 11728 <teste_grafo_remove@@Base+0x238>
   116e4:	add	r3, pc, r3
   116e8:	mov	r0, r3
   116ec:	bl	10af0 <puts@plt>
   116f0:	b	116fc <teste_grafo_remove@@Base+0x20c>
   116f4:	mov	r0, #10
   116f8:	bl	10b2c <putchar@plt>
   116fc:	ldr	r3, [fp, #-8]
   11700:	mov	r0, r3
   11704:	sub	sp, fp, #4
   11708:	pop	{fp, pc}
   1170c:	andeq	r1, r0, r8, ror lr
   11710:	andeq	r1, r0, r0, ror #28
   11714:	andeq	r1, r0, r0, lsr lr
   11718:			; <UNDEFINED> instruction: 0x00001dbc
   1171c:	andeq	r1, r0, r4, asr #27
   11720:	andeq	r1, r0, r8, asr #27
   11724:	andeq	r1, r0, ip, asr #27
   11728:	andeq	r1, r0, r4, ror #20

0001172c <teste_v_sucessores@@Base>:
   1172c:	push	{fp, lr}
   11730:	add	fp, sp, #4
   11734:	sub	sp, sp, #96	; 0x60
   11738:	mov	r3, #0
   1173c:	str	r3, [fp, #-8]
   11740:	mov	r3, #1
   11744:	str	r3, [sp, #76]	; 0x4c
   11748:	mov	r3, #0
   1174c:	str	r3, [sp, #72]	; 0x48
   11750:	mov	r3, #3
   11754:	str	r3, [sp, #68]	; 0x44
   11758:	mov	r3, #6
   1175c:	str	r3, [sp, #64]	; 0x40
   11760:	mov	r3, #6
   11764:	str	r3, [sp, #60]	; 0x3c
   11768:	mov	r3, #7
   1176c:	str	r3, [sp, #56]	; 0x38
   11770:	mov	r3, #1
   11774:	str	r3, [sp, #52]	; 0x34
   11778:	mov	r3, #1
   1177c:	str	r3, [sp, #48]	; 0x30
   11780:	mov	r3, #6
   11784:	str	r3, [sp, #44]	; 0x2c
   11788:	mov	r3, #4
   1178c:	str	r3, [sp, #40]	; 0x28
   11790:	mov	r3, #0
   11794:	str	r3, [sp, #36]	; 0x24
   11798:	mov	r3, #4
   1179c:	str	r3, [sp, #32]
   117a0:	mov	r3, #4
   117a4:	str	r3, [sp, #28]
   117a8:	mov	r3, #5
   117ac:	str	r3, [sp, #24]
   117b0:	mov	r3, #5
   117b4:	str	r3, [sp, #20]
   117b8:	mov	r3, #7
   117bc:	str	r3, [sp, #16]
   117c0:	mov	r3, #2
   117c4:	str	r3, [sp, #12]
   117c8:	mov	r3, #0
   117cc:	str	r3, [sp, #8]
   117d0:	mov	r3, #2
   117d4:	str	r3, [sp, #4]
   117d8:	mov	r3, #7
   117dc:	str	r3, [sp]
   117e0:	mov	r3, #2
   117e4:	mov	r2, #3
   117e8:	mov	r1, #22
   117ec:	mov	r0, #8
   117f0:	bl	10c6c <_g@@Base>
   117f4:	str	r0, [fp, #-12]
   117f8:	ldr	r3, [pc, #508]	; 119fc <teste_v_sucessores@@Base+0x2d0>
   117fc:	add	r3, pc, r3
   11800:	mov	r0, r3
   11804:	bl	10acc <printf@plt>
   11808:	mov	r1, #7
   1180c:	ldr	r0, [fp, #-12]
   11810:	bl	1276c <v_sucessores@@Base>
   11814:	str	r0, [fp, #-16]
   11818:	ldr	r3, [fp, #-16]
   1181c:	cmp	r3, #0
   11820:	bne	11840 <teste_v_sucessores@@Base+0x114>
   11824:	ldr	r3, [pc, #468]	; 11a00 <teste_v_sucessores@@Base+0x2d4>
   11828:	add	r3, pc, r3
   1182c:	mov	r0, r3
   11830:	bl	10acc <printf@plt>
   11834:	ldr	r3, [fp, #-8]
   11838:	add	r3, r3, #1
   1183c:	str	r3, [fp, #-8]
   11840:	ldr	r3, [fp, #-16]
   11844:	cmp	r3, #0
   11848:	bne	1187c <teste_v_sucessores@@Base+0x150>
   1184c:	ldr	r3, [fp, #-8]
   11850:	cmp	r3, #0
   11854:	bne	1186c <teste_v_sucessores@@Base+0x140>
   11858:	ldr	r3, [pc, #420]	; 11a04 <teste_v_sucessores@@Base+0x2d8>
   1185c:	add	r3, pc, r3
   11860:	mov	r0, r3
   11864:	bl	10af0 <puts@plt>
   11868:	b	11874 <teste_v_sucessores@@Base+0x148>
   1186c:	mov	r0, #10
   11870:	bl	10b2c <putchar@plt>
   11874:	ldr	r3, [fp, #-8]
   11878:	b	119f0 <teste_v_sucessores@@Base+0x2c4>
   1187c:	ldr	r3, [fp, #-16]
   11880:	ldr	r3, [r3]
   11884:	cmp	r3, #3
   11888:	beq	118a8 <teste_v_sucessores@@Base+0x17c>
   1188c:	ldr	r3, [pc, #372]	; 11a08 <teste_v_sucessores@@Base+0x2dc>
   11890:	add	r3, pc, r3
   11894:	mov	r0, r3
   11898:	bl	10acc <printf@plt>
   1189c:	ldr	r3, [fp, #-8]
   118a0:	add	r3, r3, #1
   118a4:	str	r3, [fp, #-8]
   118a8:	mov	r1, #2
   118ac:	ldr	r0, [fp, #-16]
   118b0:	bl	10da8 <_f@@Base>
   118b4:	mov	r3, r0
   118b8:	cmp	r3, #0
   118bc:	beq	118f0 <teste_v_sucessores@@Base+0x1c4>
   118c0:	mov	r1, #5
   118c4:	ldr	r0, [fp, #-16]
   118c8:	bl	10da8 <_f@@Base>
   118cc:	mov	r3, r0
   118d0:	cmp	r3, #0
   118d4:	beq	118f0 <teste_v_sucessores@@Base+0x1c4>
   118d8:	mov	r1, #6
   118dc:	ldr	r0, [fp, #-16]
   118e0:	bl	10da8 <_f@@Base>
   118e4:	mov	r3, r0
   118e8:	cmp	r3, #0
   118ec:	bne	1190c <teste_v_sucessores@@Base+0x1e0>
   118f0:	ldr	r3, [pc, #276]	; 11a0c <teste_v_sucessores@@Base+0x2e0>
   118f4:	add	r3, pc, r3
   118f8:	mov	r0, r3
   118fc:	bl	10acc <printf@plt>
   11900:	ldr	r3, [fp, #-8]
   11904:	add	r3, r3, #1
   11908:	str	r3, [fp, #-8]
   1190c:	ldr	r0, [fp, #-16]
   11910:	bl	12b30 <vetor_apaga@@Base>
   11914:	mov	r1, #2
   11918:	ldr	r0, [fp, #-12]
   1191c:	bl	1276c <v_sucessores@@Base>
   11920:	str	r0, [fp, #-16]
   11924:	ldr	r3, [fp, #-16]
   11928:	cmp	r3, #0
   1192c:	bne	1194c <teste_v_sucessores@@Base+0x220>
   11930:	ldr	r3, [pc, #216]	; 11a10 <teste_v_sucessores@@Base+0x2e4>
   11934:	add	r3, pc, r3
   11938:	mov	r0, r3
   1193c:	bl	10acc <printf@plt>
   11940:	ldr	r3, [fp, #-8]
   11944:	add	r3, r3, #1
   11948:	str	r3, [fp, #-8]
   1194c:	ldr	r3, [fp, #-16]
   11950:	cmp	r3, #0
   11954:	bne	11988 <teste_v_sucessores@@Base+0x25c>
   11958:	ldr	r3, [fp, #-8]
   1195c:	cmp	r3, #0
   11960:	bne	11978 <teste_v_sucessores@@Base+0x24c>
   11964:	ldr	r3, [pc, #168]	; 11a14 <teste_v_sucessores@@Base+0x2e8>
   11968:	add	r3, pc, r3
   1196c:	mov	r0, r3
   11970:	bl	10af0 <puts@plt>
   11974:	b	11980 <teste_v_sucessores@@Base+0x254>
   11978:	mov	r0, #10
   1197c:	bl	10b2c <putchar@plt>
   11980:	ldr	r3, [fp, #-8]
   11984:	b	119f0 <teste_v_sucessores@@Base+0x2c4>
   11988:	ldr	r3, [fp, #-16]
   1198c:	ldr	r3, [r3]
   11990:	cmp	r3, #0
   11994:	beq	119b4 <teste_v_sucessores@@Base+0x288>
   11998:	ldr	r3, [pc, #120]	; 11a18 <teste_v_sucessores@@Base+0x2ec>
   1199c:	add	r3, pc, r3
   119a0:	mov	r0, r3
   119a4:	bl	10acc <printf@plt>
   119a8:	ldr	r3, [fp, #-8]
   119ac:	add	r3, r3, #1
   119b0:	str	r3, [fp, #-8]
   119b4:	ldr	r0, [fp, #-16]
   119b8:	bl	12b30 <vetor_apaga@@Base>
   119bc:	ldr	r0, [fp, #-12]
   119c0:	bl	1232c <grafo_apaga@@Base>
   119c4:	ldr	r3, [fp, #-8]
   119c8:	cmp	r3, #0
   119cc:	bne	119e4 <teste_v_sucessores@@Base+0x2b8>
   119d0:	ldr	r3, [pc, #68]	; 11a1c <teste_v_sucessores@@Base+0x2f0>
   119d4:	add	r3, pc, r3
   119d8:	mov	r0, r3
   119dc:	bl	10af0 <puts@plt>
   119e0:	b	119ec <teste_v_sucessores@@Base+0x2c0>
   119e4:	mov	r0, #10
   119e8:	bl	10b2c <putchar@plt>
   119ec:	ldr	r3, [fp, #-8]
   119f0:	mov	r0, r3
   119f4:	sub	sp, fp, #4
   119f8:	pop	{fp, pc}
   119fc:			; <UNDEFINED> instruction: 0x00001cbc
   11a00:	andeq	r1, r0, r4, lsr #25
   11a04:	andeq	r1, r0, ip, ror #17
   11a08:	andeq	r1, r0, ip, ror #24
   11a0c:	andeq	r1, r0, r4, lsr ip
   11a10:	andeq	r1, r0, r0, lsr #24
   11a14:	andeq	r1, r0, r0, ror #15
   11a18:	strdeq	r1, [r0], -r8
   11a1c:	andeq	r1, r0, r4, ror r7

00011a20 <teste_v_antecessores@@Base>:
   11a20:	push	{fp, lr}
   11a24:	add	fp, sp, #4
   11a28:	sub	sp, sp, #96	; 0x60
   11a2c:	mov	r3, #0
   11a30:	str	r3, [fp, #-8]
   11a34:	mov	r3, #1
   11a38:	str	r3, [sp, #76]	; 0x4c
   11a3c:	mov	r3, #0
   11a40:	str	r3, [sp, #72]	; 0x48
   11a44:	mov	r3, #3
   11a48:	str	r3, [sp, #68]	; 0x44
   11a4c:	mov	r3, #6
   11a50:	str	r3, [sp, #64]	; 0x40
   11a54:	mov	r3, #6
   11a58:	str	r3, [sp, #60]	; 0x3c
   11a5c:	mov	r3, #7
   11a60:	str	r3, [sp, #56]	; 0x38
   11a64:	mov	r3, #1
   11a68:	str	r3, [sp, #52]	; 0x34
   11a6c:	mov	r3, #1
   11a70:	str	r3, [sp, #48]	; 0x30
   11a74:	mov	r3, #6
   11a78:	str	r3, [sp, #44]	; 0x2c
   11a7c:	mov	r3, #4
   11a80:	str	r3, [sp, #40]	; 0x28
   11a84:	mov	r3, #0
   11a88:	str	r3, [sp, #36]	; 0x24
   11a8c:	mov	r3, #4
   11a90:	str	r3, [sp, #32]
   11a94:	mov	r3, #4
   11a98:	str	r3, [sp, #28]
   11a9c:	mov	r3, #5
   11aa0:	str	r3, [sp, #24]
   11aa4:	mov	r3, #5
   11aa8:	str	r3, [sp, #20]
   11aac:	mov	r3, #7
   11ab0:	str	r3, [sp, #16]
   11ab4:	mov	r3, #2
   11ab8:	str	r3, [sp, #12]
   11abc:	mov	r3, #0
   11ac0:	str	r3, [sp, #8]
   11ac4:	mov	r3, #2
   11ac8:	str	r3, [sp, #4]
   11acc:	mov	r3, #7
   11ad0:	str	r3, [sp]
   11ad4:	mov	r3, #2
   11ad8:	mov	r2, #3
   11adc:	mov	r1, #22
   11ae0:	mov	r0, #8
   11ae4:	bl	10c6c <_g@@Base>
   11ae8:	str	r0, [fp, #-12]
   11aec:	ldr	r3, [pc, #508]	; 11cf0 <teste_v_antecessores@@Base+0x2d0>
   11af0:	add	r3, pc, r3
   11af4:	mov	r0, r3
   11af8:	bl	10acc <printf@plt>
   11afc:	mov	r1, #2
   11b00:	ldr	r0, [fp, #-12]
   11b04:	bl	12830 <v_antecessores@@Base>
   11b08:	str	r0, [fp, #-16]
   11b0c:	ldr	r3, [fp, #-16]
   11b10:	cmp	r3, #0
   11b14:	bne	11b34 <teste_v_antecessores@@Base+0x114>
   11b18:	ldr	r3, [pc, #468]	; 11cf4 <teste_v_antecessores@@Base+0x2d4>
   11b1c:	add	r3, pc, r3
   11b20:	mov	r0, r3
   11b24:	bl	10acc <printf@plt>
   11b28:	ldr	r3, [fp, #-8]
   11b2c:	add	r3, r3, #1
   11b30:	str	r3, [fp, #-8]
   11b34:	ldr	r3, [fp, #-16]
   11b38:	cmp	r3, #0
   11b3c:	bne	11b70 <teste_v_antecessores@@Base+0x150>
   11b40:	ldr	r3, [fp, #-8]
   11b44:	cmp	r3, #0
   11b48:	bne	11b60 <teste_v_antecessores@@Base+0x140>
   11b4c:	ldr	r3, [pc, #420]	; 11cf8 <teste_v_antecessores@@Base+0x2d8>
   11b50:	add	r3, pc, r3
   11b54:	mov	r0, r3
   11b58:	bl	10af0 <puts@plt>
   11b5c:	b	11b68 <teste_v_antecessores@@Base+0x148>
   11b60:	mov	r0, #10
   11b64:	bl	10b2c <putchar@plt>
   11b68:	ldr	r3, [fp, #-8]
   11b6c:	b	11ce4 <teste_v_antecessores@@Base+0x2c4>
   11b70:	ldr	r3, [fp, #-16]
   11b74:	ldr	r3, [r3]
   11b78:	cmp	r3, #3
   11b7c:	beq	11b9c <teste_v_antecessores@@Base+0x17c>
   11b80:	ldr	r3, [pc, #372]	; 11cfc <teste_v_antecessores@@Base+0x2dc>
   11b84:	add	r3, pc, r3
   11b88:	mov	r0, r3
   11b8c:	bl	10acc <printf@plt>
   11b90:	ldr	r3, [fp, #-8]
   11b94:	add	r3, r3, #1
   11b98:	str	r3, [fp, #-8]
   11b9c:	mov	r1, #0
   11ba0:	ldr	r0, [fp, #-16]
   11ba4:	bl	10da8 <_f@@Base>
   11ba8:	mov	r3, r0
   11bac:	cmp	r3, #0
   11bb0:	beq	11be4 <teste_v_antecessores@@Base+0x1c4>
   11bb4:	mov	r1, #3
   11bb8:	ldr	r0, [fp, #-16]
   11bbc:	bl	10da8 <_f@@Base>
   11bc0:	mov	r3, r0
   11bc4:	cmp	r3, #0
   11bc8:	beq	11be4 <teste_v_antecessores@@Base+0x1c4>
   11bcc:	mov	r1, #7
   11bd0:	ldr	r0, [fp, #-16]
   11bd4:	bl	10da8 <_f@@Base>
   11bd8:	mov	r3, r0
   11bdc:	cmp	r3, #0
   11be0:	bne	11c00 <teste_v_antecessores@@Base+0x1e0>
   11be4:	ldr	r3, [pc, #276]	; 11d00 <teste_v_antecessores@@Base+0x2e0>
   11be8:	add	r3, pc, r3
   11bec:	mov	r0, r3
   11bf0:	bl	10acc <printf@plt>
   11bf4:	ldr	r3, [fp, #-8]
   11bf8:	add	r3, r3, #1
   11bfc:	str	r3, [fp, #-8]
   11c00:	ldr	r0, [fp, #-16]
   11c04:	bl	12b30 <vetor_apaga@@Base>
   11c08:	mov	r1, #7
   11c0c:	ldr	r0, [fp, #-12]
   11c10:	bl	12830 <v_antecessores@@Base>
   11c14:	str	r0, [fp, #-16]
   11c18:	ldr	r3, [fp, #-16]
   11c1c:	cmp	r3, #0
   11c20:	bne	11c40 <teste_v_antecessores@@Base+0x220>
   11c24:	ldr	r3, [pc, #216]	; 11d04 <teste_v_antecessores@@Base+0x2e4>
   11c28:	add	r3, pc, r3
   11c2c:	mov	r0, r3
   11c30:	bl	10acc <printf@plt>
   11c34:	ldr	r3, [fp, #-8]
   11c38:	add	r3, r3, #1
   11c3c:	str	r3, [fp, #-8]
   11c40:	ldr	r3, [fp, #-16]
   11c44:	cmp	r3, #0
   11c48:	bne	11c7c <teste_v_antecessores@@Base+0x25c>
   11c4c:	ldr	r3, [fp, #-8]
   11c50:	cmp	r3, #0
   11c54:	bne	11c6c <teste_v_antecessores@@Base+0x24c>
   11c58:	ldr	r3, [pc, #168]	; 11d08 <teste_v_antecessores@@Base+0x2e8>
   11c5c:	add	r3, pc, r3
   11c60:	mov	r0, r3
   11c64:	bl	10af0 <puts@plt>
   11c68:	b	11c74 <teste_v_antecessores@@Base+0x254>
   11c6c:	mov	r0, #10
   11c70:	bl	10b2c <putchar@plt>
   11c74:	ldr	r3, [fp, #-8]
   11c78:	b	11ce4 <teste_v_antecessores@@Base+0x2c4>
   11c7c:	ldr	r3, [fp, #-16]
   11c80:	ldr	r3, [r3]
   11c84:	cmp	r3, #0
   11c88:	beq	11ca8 <teste_v_antecessores@@Base+0x288>
   11c8c:	ldr	r3, [pc, #120]	; 11d0c <teste_v_antecessores@@Base+0x2ec>
   11c90:	add	r3, pc, r3
   11c94:	mov	r0, r3
   11c98:	bl	10acc <printf@plt>
   11c9c:	ldr	r3, [fp, #-8]
   11ca0:	add	r3, r3, #1
   11ca4:	str	r3, [fp, #-8]
   11ca8:	ldr	r0, [fp, #-16]
   11cac:	bl	12b30 <vetor_apaga@@Base>
   11cb0:	ldr	r0, [fp, #-12]
   11cb4:	bl	1232c <grafo_apaga@@Base>
   11cb8:	ldr	r3, [fp, #-8]
   11cbc:	cmp	r3, #0
   11cc0:	bne	11cd8 <teste_v_antecessores@@Base+0x2b8>
   11cc4:	ldr	r3, [pc, #68]	; 11d10 <teste_v_antecessores@@Base+0x2f0>
   11cc8:	add	r3, pc, r3
   11ccc:	mov	r0, r3
   11cd0:	bl	10af0 <puts@plt>
   11cd4:	b	11ce0 <teste_v_antecessores@@Base+0x2c0>
   11cd8:	mov	r0, #10
   11cdc:	bl	10b2c <putchar@plt>
   11ce0:	ldr	r3, [fp, #-8]
   11ce4:	mov	r0, r3
   11ce8:	sub	sp, fp, #4
   11cec:	pop	{fp, pc}
   11cf0:	ldrdeq	r1, [r0], -r4
   11cf4:			; <UNDEFINED> instruction: 0x00001abc
   11cf8:	strdeq	r1, [r0], -r8
   11cfc:	andeq	r1, r0, r4, lsl #21
   11d00:	andeq	r1, r0, r0, asr sl
   11d04:	andeq	r1, r0, r0, asr #20
   11d08:	andeq	r1, r0, ip, ror #9
   11d0c:	andeq	r1, r0, r8, lsl sl
   11d10:	andeq	r1, r0, r0, lsl #9

00011d14 <teste_v_grau@@Base>:
   11d14:	push	{fp, lr}
   11d18:	add	fp, sp, #4
   11d1c:	sub	sp, sp, #88	; 0x58
   11d20:	mov	r3, #0
   11d24:	str	r3, [fp, #-8]
   11d28:	mov	r3, #1
   11d2c:	str	r3, [sp, #76]	; 0x4c
   11d30:	mov	r3, #0
   11d34:	str	r3, [sp, #72]	; 0x48
   11d38:	mov	r3, #3
   11d3c:	str	r3, [sp, #68]	; 0x44
   11d40:	mov	r3, #6
   11d44:	str	r3, [sp, #64]	; 0x40
   11d48:	mov	r3, #6
   11d4c:	str	r3, [sp, #60]	; 0x3c
   11d50:	mov	r3, #7
   11d54:	str	r3, [sp, #56]	; 0x38
   11d58:	mov	r3, #1
   11d5c:	str	r3, [sp, #52]	; 0x34
   11d60:	mov	r3, #1
   11d64:	str	r3, [sp, #48]	; 0x30
   11d68:	mov	r3, #6
   11d6c:	str	r3, [sp, #44]	; 0x2c
   11d70:	mov	r3, #4
   11d74:	str	r3, [sp, #40]	; 0x28
   11d78:	mov	r3, #0
   11d7c:	str	r3, [sp, #36]	; 0x24
   11d80:	mov	r3, #4
   11d84:	str	r3, [sp, #32]
   11d88:	mov	r3, #4
   11d8c:	str	r3, [sp, #28]
   11d90:	mov	r3, #5
   11d94:	str	r3, [sp, #24]
   11d98:	mov	r3, #5
   11d9c:	str	r3, [sp, #20]
   11da0:	mov	r3, #7
   11da4:	str	r3, [sp, #16]
   11da8:	mov	r3, #2
   11dac:	str	r3, [sp, #12]
   11db0:	mov	r3, #0
   11db4:	str	r3, [sp, #8]
   11db8:	mov	r3, #2
   11dbc:	str	r3, [sp, #4]
   11dc0:	mov	r3, #7
   11dc4:	str	r3, [sp]
   11dc8:	mov	r3, #2
   11dcc:	mov	r2, #3
   11dd0:	mov	r1, #22
   11dd4:	mov	r0, #8
   11dd8:	bl	10c6c <_g@@Base>
   11ddc:	str	r0, [fp, #-12]
   11de0:	ldr	r3, [pc, #228]	; 11ecc <teste_v_grau@@Base+0x1b8>
   11de4:	add	r3, pc, r3
   11de8:	mov	r0, r3
   11dec:	bl	10acc <printf@plt>
   11df0:	mvn	r1, #3
   11df4:	ldr	r0, [fp, #-12]
   11df8:	bl	12930 <v_grau@@Base>
   11dfc:	mov	r3, r0
   11e00:	cmn	r3, #1
   11e04:	beq	11e24 <teste_v_grau@@Base+0x110>
   11e08:	ldr	r3, [pc, #192]	; 11ed0 <teste_v_grau@@Base+0x1bc>
   11e0c:	add	r3, pc, r3
   11e10:	mov	r0, r3
   11e14:	bl	10acc <printf@plt>
   11e18:	ldr	r3, [fp, #-8]
   11e1c:	add	r3, r3, #1
   11e20:	str	r3, [fp, #-8]
   11e24:	mov	r1, #7
   11e28:	ldr	r0, [fp, #-12]
   11e2c:	bl	12930 <v_grau@@Base>
   11e30:	mov	r3, r0
   11e34:	cmp	r3, #3
   11e38:	beq	11e58 <teste_v_grau@@Base+0x144>
   11e3c:	ldr	r3, [pc, #144]	; 11ed4 <teste_v_grau@@Base+0x1c0>
   11e40:	add	r3, pc, r3
   11e44:	mov	r0, r3
   11e48:	bl	10acc <printf@plt>
   11e4c:	ldr	r3, [fp, #-8]
   11e50:	add	r3, r3, #1
   11e54:	str	r3, [fp, #-8]
   11e58:	mov	r1, #5
   11e5c:	ldr	r0, [fp, #-12]
   11e60:	bl	12930 <v_grau@@Base>
   11e64:	mov	r3, r0
   11e68:	cmp	r3, #2
   11e6c:	beq	11e8c <teste_v_grau@@Base+0x178>
   11e70:	ldr	r3, [pc, #96]	; 11ed8 <teste_v_grau@@Base+0x1c4>
   11e74:	add	r3, pc, r3
   11e78:	mov	r0, r3
   11e7c:	bl	10acc <printf@plt>
   11e80:	ldr	r3, [fp, #-8]
   11e84:	add	r3, r3, #1
   11e88:	str	r3, [fp, #-8]
   11e8c:	ldr	r0, [fp, #-12]
   11e90:	bl	1232c <grafo_apaga@@Base>
   11e94:	ldr	r3, [fp, #-8]
   11e98:	cmp	r3, #0
   11e9c:	bne	11eb4 <teste_v_grau@@Base+0x1a0>
   11ea0:	ldr	r3, [pc, #52]	; 11edc <teste_v_grau@@Base+0x1c8>
   11ea4:	add	r3, pc, r3
   11ea8:	mov	r0, r3
   11eac:	bl	10af0 <puts@plt>
   11eb0:	b	11ebc <teste_v_grau@@Base+0x1a8>
   11eb4:	mov	r0, #10
   11eb8:	bl	10b2c <putchar@plt>
   11ebc:	ldr	r3, [fp, #-8]
   11ec0:	mov	r0, r3
   11ec4:	sub	sp, fp, #4
   11ec8:	pop	{fp, pc}
   11ecc:	strdeq	r1, [r0], -r4
   11ed0:	ldrdeq	r1, [r0], -r8
   11ed4:	ldrdeq	r1, [r0], -r4
   11ed8:	ldrdeq	r1, [r0], -r0
   11edc:	andeq	r1, r0, r4, lsr #5

00011ee0 <teste_v_celebridade@@Base>:
   11ee0:	push	{fp, lr}
   11ee4:	add	fp, sp, #4
   11ee8:	sub	sp, sp, #120	; 0x78
   11eec:	mov	r3, #0
   11ef0:	str	r3, [fp, #-8]
   11ef4:	mov	r3, #2
   11ef8:	str	r3, [sp, #108]	; 0x6c
   11efc:	mov	r3, #5
   11f00:	str	r3, [sp, #104]	; 0x68
   11f04:	mov	r3, #2
   11f08:	str	r3, [sp, #100]	; 0x64
   11f0c:	mov	r3, #4
   11f10:	str	r3, [sp, #96]	; 0x60
   11f14:	mov	r3, #2
   11f18:	str	r3, [sp, #92]	; 0x5c
   11f1c:	mov	r3, #6
   11f20:	str	r3, [sp, #88]	; 0x58
   11f24:	mov	r3, #2
   11f28:	str	r3, [sp, #84]	; 0x54
   11f2c:	mov	r3, #1
   11f30:	str	r3, [sp, #80]	; 0x50
   11f34:	mov	r3, #1
   11f38:	str	r3, [sp, #76]	; 0x4c
   11f3c:	mov	r3, #0
   11f40:	str	r3, [sp, #72]	; 0x48
   11f44:	mov	r3, #3
   11f48:	str	r3, [sp, #68]	; 0x44
   11f4c:	mov	r3, #6
   11f50:	str	r3, [sp, #64]	; 0x40
   11f54:	mov	r3, #6
   11f58:	str	r3, [sp, #60]	; 0x3c
   11f5c:	mov	r3, #7
   11f60:	str	r3, [sp, #56]	; 0x38
   11f64:	mov	r3, #1
   11f68:	str	r3, [sp, #52]	; 0x34
   11f6c:	mov	r3, #1
   11f70:	str	r3, [sp, #48]	; 0x30
   11f74:	mov	r3, #6
   11f78:	str	r3, [sp, #44]	; 0x2c
   11f7c:	mov	r3, #4
   11f80:	str	r3, [sp, #40]	; 0x28
   11f84:	mov	r3, #0
   11f88:	str	r3, [sp, #36]	; 0x24
   11f8c:	mov	r3, #4
   11f90:	str	r3, [sp, #32]
   11f94:	mov	r3, #4
   11f98:	str	r3, [sp, #28]
   11f9c:	mov	r3, #5
   11fa0:	str	r3, [sp, #24]
   11fa4:	mov	r3, #5
   11fa8:	str	r3, [sp, #20]
   11fac:	mov	r3, #7
   11fb0:	str	r3, [sp, #16]
   11fb4:	mov	r3, #2
   11fb8:	str	r3, [sp, #12]
   11fbc:	mov	r3, #0
   11fc0:	str	r3, [sp, #8]
   11fc4:	mov	r3, #2
   11fc8:	str	r3, [sp, #4]
   11fcc:	mov	r3, #7
   11fd0:	str	r3, [sp]
   11fd4:	mov	r3, #2
   11fd8:	mov	r2, #3
   11fdc:	mov	r1, #30
   11fe0:	mov	r0, #8
   11fe4:	bl	10c6c <_g@@Base>
   11fe8:	str	r0, [fp, #-12]
   11fec:	ldr	r3, [pc, #176]	; 120a4 <teste_v_celebridade@@Base+0x1c4>
   11ff0:	add	r3, pc, r3
   11ff4:	mov	r0, r3
   11ff8:	bl	10acc <printf@plt>
   11ffc:	mov	r1, #7
   12000:	ldr	r0, [fp, #-12]
   12004:	bl	129b8 <v_celebridade@@Base>
   12008:	mov	r3, r0
   1200c:	cmp	r3, #0
   12010:	beq	12030 <teste_v_celebridade@@Base+0x150>
   12014:	ldr	r3, [pc, #140]	; 120a8 <teste_v_celebridade@@Base+0x1c8>
   12018:	add	r3, pc, r3
   1201c:	mov	r0, r3
   12020:	bl	10acc <printf@plt>
   12024:	ldr	r3, [fp, #-8]
   12028:	add	r3, r3, #1
   1202c:	str	r3, [fp, #-8]
   12030:	mov	r1, #2
   12034:	ldr	r0, [fp, #-12]
   12038:	bl	129b8 <v_celebridade@@Base>
   1203c:	mov	r3, r0
   12040:	cmp	r3, #1
   12044:	beq	12064 <teste_v_celebridade@@Base+0x184>
   12048:	ldr	r3, [pc, #92]	; 120ac <teste_v_celebridade@@Base+0x1cc>
   1204c:	add	r3, pc, r3
   12050:	mov	r0, r3
   12054:	bl	10acc <printf@plt>
   12058:	ldr	r3, [fp, #-8]
   1205c:	add	r3, r3, #1
   12060:	str	r3, [fp, #-8]
   12064:	ldr	r0, [fp, #-12]
   12068:	bl	1232c <grafo_apaga@@Base>
   1206c:	ldr	r3, [fp, #-8]
   12070:	cmp	r3, #0
   12074:	bne	1208c <teste_v_celebridade@@Base+0x1ac>
   12078:	ldr	r3, [pc, #48]	; 120b0 <teste_v_celebridade@@Base+0x1d0>
   1207c:	add	r3, pc, r3
   12080:	mov	r0, r3
   12084:	bl	10af0 <puts@plt>
   12088:	b	12094 <teste_v_celebridade@@Base+0x1b4>
   1208c:	mov	r0, #10
   12090:	bl	10b2c <putchar@plt>
   12094:	ldr	r3, [fp, #-8]
   12098:	mov	r0, r3
   1209c:	sub	sp, fp, #4
   120a0:	pop	{fp, pc}
   120a4:	andeq	r1, r0, r4, lsl #15
   120a8:	andeq	r1, r0, r0, ror r7
   120ac:	andeq	r1, r0, r4, ror r7
   120b0:	andeq	r1, r0, ip, asr #1

000120b4 <main@@Base>:
   120b4:	push	{r4, fp, lr}
   120b8:	add	fp, sp, #8
   120bc:	sub	sp, sp, #12
   120c0:	ldr	r4, [pc, #292]	; 121ec <main@@Base+0x138>
   120c4:	add	r4, pc, r4
   120c8:	ldr	r3, [pc, #288]	; 121f0 <main@@Base+0x13c>
   120cc:	ldr	r3, [r4, r3]
   120d0:	ldr	r0, [r3]
   120d4:	mov	r3, #0
   120d8:	mov	r2, #2
   120dc:	mov	r1, #0
   120e0:	bl	10b20 <setvbuf@plt>
   120e4:	ldr	r3, [pc, #264]	; 121f4 <main@@Base+0x140>
   120e8:	ldr	r3, [r4, r3]
   120ec:	ldr	r0, [r3]
   120f0:	mov	r3, #0
   120f4:	mov	r2, #2
   120f8:	mov	r1, #0
   120fc:	bl	10b20 <setvbuf@plt>
   12100:	mov	r3, #0
   12104:	str	r3, [fp, #-16]
   12108:	bl	10e30 <teste_grafo_novo@@Base>
   1210c:	mov	r2, r0
   12110:	ldr	r3, [fp, #-16]
   12114:	add	r3, r3, r2
   12118:	str	r3, [fp, #-16]
   1211c:	bl	10fdc <teste_grafo_aresta@@Base>
   12120:	mov	r2, r0
   12124:	ldr	r3, [fp, #-16]
   12128:	add	r3, r3, r2
   1212c:	str	r3, [fp, #-16]
   12130:	bl	111f0 <teste_grafo_adiciona@@Base>
   12134:	mov	r2, r0
   12138:	ldr	r3, [fp, #-16]
   1213c:	add	r3, r3, r2
   12140:	str	r3, [fp, #-16]
   12144:	bl	114f0 <teste_grafo_remove@@Base>
   12148:	mov	r2, r0
   1214c:	ldr	r3, [fp, #-16]
   12150:	add	r3, r3, r2
   12154:	str	r3, [fp, #-16]
   12158:	bl	1172c <teste_v_sucessores@@Base>
   1215c:	mov	r2, r0
   12160:	ldr	r3, [fp, #-16]
   12164:	add	r3, r3, r2
   12168:	str	r3, [fp, #-16]
   1216c:	bl	11a20 <teste_v_antecessores@@Base>
   12170:	mov	r2, r0
   12174:	ldr	r3, [fp, #-16]
   12178:	add	r3, r3, r2
   1217c:	str	r3, [fp, #-16]
   12180:	bl	11d14 <teste_v_grau@@Base>
   12184:	mov	r2, r0
   12188:	ldr	r3, [fp, #-16]
   1218c:	add	r3, r3, r2
   12190:	str	r3, [fp, #-16]
   12194:	bl	11ee0 <teste_v_celebridade@@Base>
   12198:	mov	r2, r0
   1219c:	ldr	r3, [fp, #-16]
   121a0:	add	r3, r3, r2
   121a4:	str	r3, [fp, #-16]
   121a8:	ldr	r3, [fp, #-16]
   121ac:	cmp	r3, #0
   121b0:	bne	121c8 <main@@Base+0x114>
   121b4:	ldr	r3, [pc, #60]	; 121f8 <main@@Base+0x144>
   121b8:	add	r3, pc, r3
   121bc:	mov	r0, r3
   121c0:	bl	10af0 <puts@plt>
   121c4:	b	121dc <main@@Base+0x128>
   121c8:	ldr	r1, [fp, #-16]
   121cc:	ldr	r3, [pc, #40]	; 121fc <main@@Base+0x148>
   121d0:	add	r3, pc, r3
   121d4:	mov	r0, r3
   121d8:	bl	10acc <printf@plt>
   121dc:	mov	r3, #0
   121e0:	mov	r0, r3
   121e4:	sub	sp, fp, #8
   121e8:	pop	{r4, fp, pc}
   121ec:	andeq	r1, r1, r4, lsr pc
   121f0:	andeq	r0, r0, r0, asr #32
   121f4:	andeq	r0, r0, r8, lsr r0
   121f8:	andeq	r1, r0, ip, lsr r6
   121fc:	andeq	r1, r0, ip, lsr r6

00012200 <cria_elem@@Base>:
   12200:	push	{fp, lr}
   12204:	add	fp, sp, #4
   12208:	sub	sp, sp, #16
   1220c:	str	r0, [fp, #-16]
   12210:	mov	r0, #8
   12214:	bl	10afc <malloc@plt>
   12218:	mov	r3, r0
   1221c:	str	r3, [fp, #-8]
   12220:	ldr	r3, [fp, #-8]
   12224:	cmp	r3, #0
   12228:	bne	12234 <cria_elem@@Base+0x34>
   1222c:	mov	r3, #0
   12230:	b	12250 <cria_elem@@Base+0x50>
   12234:	ldr	r3, [fp, #-8]
   12238:	ldr	r2, [fp, #-16]
   1223c:	str	r2, [r3]
   12240:	ldr	r3, [fp, #-8]
   12244:	mov	r2, #0
   12248:	str	r2, [r3, #4]
   1224c:	ldr	r3, [fp, #-8]
   12250:	mov	r0, r3
   12254:	sub	sp, fp, #4
   12258:	pop	{fp, pc}

0001225c <grafo_novo@@Base>:
   1225c:	push	{fp, lr}
   12260:	add	fp, sp, #4
   12264:	sub	sp, sp, #16
   12268:	str	r0, [fp, #-16]
   1226c:	ldr	r3, [fp, #-16]
   12270:	cmp	r3, #0
   12274:	bgt	12280 <grafo_novo@@Base+0x24>
   12278:	mov	r3, #0
   1227c:	b	12320 <grafo_novo@@Base+0xc4>
   12280:	mov	r0, #8
   12284:	bl	10afc <malloc@plt>
   12288:	mov	r3, r0
   1228c:	str	r3, [fp, #-12]
   12290:	ldr	r3, [fp, #-12]
   12294:	ldr	r2, [fp, #-16]
   12298:	str	r2, [r3]
   1229c:	ldr	r3, [fp, #-16]
   122a0:	lsl	r3, r3, #3
   122a4:	mov	r0, r3
   122a8:	bl	10afc <malloc@plt>
   122ac:	mov	r3, r0
   122b0:	mov	r2, r3
   122b4:	ldr	r3, [fp, #-12]
   122b8:	str	r2, [r3, #4]
   122bc:	mov	r3, #0
   122c0:	str	r3, [fp, #-8]
   122c4:	b	1230c <grafo_novo@@Base+0xb0>
   122c8:	ldr	r3, [fp, #-12]
   122cc:	ldr	r2, [r3, #4]
   122d0:	ldr	r3, [fp, #-8]
   122d4:	lsl	r3, r3, #3
   122d8:	add	r3, r2, r3
   122dc:	mov	r2, #0
   122e0:	str	r2, [r3]
   122e4:	ldr	r3, [fp, #-12]
   122e8:	ldr	r2, [r3, #4]
   122ec:	ldr	r3, [fp, #-8]
   122f0:	lsl	r3, r3, #3
   122f4:	add	r3, r2, r3
   122f8:	mov	r2, #0
   122fc:	str	r2, [r3, #4]
   12300:	ldr	r3, [fp, #-8]
   12304:	add	r3, r3, #1
   12308:	str	r3, [fp, #-8]
   1230c:	ldr	r2, [fp, #-8]
   12310:	ldr	r3, [fp, #-16]
   12314:	cmp	r2, r3
   12318:	blt	122c8 <grafo_novo@@Base+0x6c>
   1231c:	ldr	r3, [fp, #-12]
   12320:	mov	r0, r3
   12324:	sub	sp, fp, #4
   12328:	pop	{fp, pc}

0001232c <grafo_apaga@@Base>:
   1232c:	push	{fp, lr}
   12330:	add	fp, sp, #4
   12334:	sub	sp, sp, #24
   12338:	str	r0, [fp, #-24]	; 0xffffffe8
   1233c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12340:	cmp	r3, #0
   12344:	beq	123dc <grafo_apaga@@Base+0xb0>
   12348:	mov	r3, #0
   1234c:	str	r3, [fp, #-8]
   12350:	b	123a8 <grafo_apaga@@Base+0x7c>
   12354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12358:	ldr	r2, [r3, #4]
   1235c:	ldr	r3, [fp, #-8]
   12360:	lsl	r3, r3, #3
   12364:	add	r3, r2, r3
   12368:	ldr	r3, [r3, #4]
   1236c:	str	r3, [fp, #-12]
   12370:	b	12390 <grafo_apaga@@Base+0x64>
   12374:	ldr	r3, [fp, #-12]
   12378:	str	r3, [fp, #-16]
   1237c:	ldr	r3, [fp, #-12]
   12380:	ldr	r3, [r3, #4]
   12384:	str	r3, [fp, #-12]
   12388:	ldr	r0, [fp, #-16]
   1238c:	bl	10ad8 <free@plt>
   12390:	ldr	r3, [fp, #-12]
   12394:	cmp	r3, #0
   12398:	bne	12374 <grafo_apaga@@Base+0x48>
   1239c:	ldr	r3, [fp, #-8]
   123a0:	add	r3, r3, #1
   123a4:	str	r3, [fp, #-8]
   123a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123ac:	ldr	r2, [r3]
   123b0:	ldr	r3, [fp, #-8]
   123b4:	cmp	r2, r3
   123b8:	bgt	12354 <grafo_apaga@@Base+0x28>
   123bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123c0:	ldr	r3, [r3, #4]
   123c4:	mov	r0, r3
   123c8:	bl	10ad8 <free@plt>
   123cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   123d0:	bl	10ad8 <free@plt>
   123d4:	nop			; (mov r0, r0)
   123d8:	b	123e0 <grafo_apaga@@Base+0xb4>
   123dc:	nop			; (mov r0, r0)
   123e0:	sub	sp, fp, #4
   123e4:	pop	{fp, pc}

000123e8 <grafo_aresta@@Base>:
   123e8:	push	{fp}		; (str fp, [sp, #-4]!)
   123ec:	add	fp, sp, #0
   123f0:	sub	sp, sp, #28
   123f4:	str	r0, [fp, #-16]
   123f8:	str	r1, [fp, #-20]	; 0xffffffec
   123fc:	str	r2, [fp, #-24]	; 0xffffffe8
   12400:	ldr	r3, [fp, #-16]
   12404:	cmp	r3, #0
   12408:	beq	12420 <grafo_aresta@@Base+0x38>
   1240c:	ldr	r3, [fp, #-16]
   12410:	ldr	r2, [r3]
   12414:	ldr	r3, [fp, #-20]	; 0xffffffec
   12418:	cmp	r2, r3
   1241c:	bge	12428 <grafo_aresta@@Base+0x40>
   12420:	mvn	r3, #0
   12424:	b	1249c <grafo_aresta@@Base+0xb4>
   12428:	ldr	r3, [fp, #-16]
   1242c:	ldr	r2, [r3]
   12430:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12434:	cmp	r2, r3
   12438:	bge	12444 <grafo_aresta@@Base+0x5c>
   1243c:	mov	r3, #0
   12440:	b	1249c <grafo_aresta@@Base+0xb4>
   12444:	ldr	r3, [fp, #-16]
   12448:	ldr	r2, [r3, #4]
   1244c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12450:	lsl	r3, r3, #3
   12454:	add	r3, r2, r3
   12458:	ldr	r3, [r3, #4]
   1245c:	str	r3, [fp, #-8]
   12460:	b	1248c <grafo_aresta@@Base+0xa4>
   12464:	ldr	r3, [fp, #-8]
   12468:	ldr	r2, [r3]
   1246c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12470:	cmp	r2, r3
   12474:	bne	12480 <grafo_aresta@@Base+0x98>
   12478:	mov	r3, #1
   1247c:	b	1249c <grafo_aresta@@Base+0xb4>
   12480:	ldr	r3, [fp, #-8]
   12484:	ldr	r3, [r3, #4]
   12488:	str	r3, [fp, #-8]
   1248c:	ldr	r3, [fp, #-8]
   12490:	cmp	r3, #0
   12494:	bne	12464 <grafo_aresta@@Base+0x7c>
   12498:	mov	r3, #0
   1249c:	mov	r0, r3
   124a0:	add	sp, fp, #0
   124a4:	pop	{fp}		; (ldr fp, [sp], #4)
   124a8:	bx	lr

000124ac <grafo_adiciona@@Base>:
   124ac:	push	{r4, fp, lr}
   124b0:	add	fp, sp, #8
   124b4:	sub	sp, sp, #28
   124b8:	str	r0, [fp, #-24]	; 0xffffffe8
   124bc:	str	r1, [fp, #-28]	; 0xffffffe4
   124c0:	str	r2, [fp, #-32]	; 0xffffffe0
   124c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124c8:	cmp	r3, #0
   124cc:	beq	124f8 <grafo_adiciona@@Base+0x4c>
   124d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124d4:	ldr	r2, [r3]
   124d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   124dc:	cmp	r2, r3
   124e0:	blt	124f8 <grafo_adiciona@@Base+0x4c>
   124e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124e8:	ldr	r2, [r3]
   124ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   124f0:	cmp	r2, r3
   124f4:	bge	12500 <grafo_adiciona@@Base+0x54>
   124f8:	mvn	r3, #0
   124fc:	b	1259c <grafo_adiciona@@Base+0xf0>
   12500:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12504:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1250c:	bl	123e8 <grafo_aresta@@Base>
   12510:	mov	r3, r0
   12514:	cmp	r3, #1
   12518:	bne	12524 <grafo_adiciona@@Base+0x78>
   1251c:	mov	r3, #0
   12520:	b	1259c <grafo_adiciona@@Base+0xf0>
   12524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12528:	ldr	r2, [r3, #4]
   1252c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12530:	lsl	r3, r3, #3
   12534:	add	r3, r2, r3
   12538:	ldr	r3, [r3, #4]
   1253c:	str	r3, [fp, #-16]
   12540:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12544:	ldr	r2, [r3, #4]
   12548:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1254c:	lsl	r3, r3, #3
   12550:	add	r4, r2, r3
   12554:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12558:	bl	12200 <cria_elem@@Base>
   1255c:	mov	r3, r0
   12560:	str	r3, [r4, #4]
   12564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12568:	ldr	r2, [r3, #4]
   1256c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12570:	lsl	r3, r3, #3
   12574:	add	r3, r2, r3
   12578:	ldr	r3, [r3, #4]
   1257c:	ldr	r2, [fp, #-16]
   12580:	str	r2, [r3, #4]
   12584:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12588:	ldr	r3, [r3, #4]
   1258c:	ldr	r2, [r3]
   12590:	add	r2, r2, #1
   12594:	str	r2, [r3]
   12598:	mov	r3, #1
   1259c:	mov	r0, r3
   125a0:	sub	sp, fp, #8
   125a4:	pop	{r4, fp, pc}

000125a8 <grafo_remove@@Base>:
   125a8:	push	{fp, lr}
   125ac:	add	fp, sp, #4
   125b0:	sub	sp, sp, #32
   125b4:	str	r0, [fp, #-24]	; 0xffffffe8
   125b8:	str	r1, [fp, #-28]	; 0xffffffe4
   125bc:	str	r2, [fp, #-32]	; 0xffffffe0
   125c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125c4:	cmp	r3, #0
   125c8:	beq	1275c <grafo_remove@@Base+0x1b4>
   125cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125d0:	ldr	r2, [r3]
   125d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   125d8:	cmp	r2, r3
   125dc:	blt	1275c <grafo_remove@@Base+0x1b4>
   125e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125e4:	ldr	r2, [r3]
   125e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   125ec:	cmp	r2, r3
   125f0:	blt	1275c <grafo_remove@@Base+0x1b4>
   125f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125f8:	ldr	r2, [r3, #4]
   125fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12600:	lsl	r3, r3, #3
   12604:	add	r3, r2, r3
   12608:	ldr	r3, [r3, #4]
   1260c:	cmp	r3, #0
   12610:	bne	1261c <grafo_remove@@Base+0x74>
   12614:	mov	r3, #0
   12618:	b	12760 <grafo_remove@@Base+0x1b8>
   1261c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12620:	ldr	r2, [r3, #4]
   12624:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12628:	lsl	r3, r3, #3
   1262c:	add	r3, r2, r3
   12630:	ldr	r3, [r3, #4]
   12634:	ldr	r2, [r3]
   12638:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1263c:	cmp	r2, r3
   12640:	bne	126b8 <grafo_remove@@Base+0x110>
   12644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12648:	ldr	r2, [r3, #4]
   1264c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12650:	lsl	r3, r3, #3
   12654:	add	r3, r2, r3
   12658:	ldr	r3, [r3, #4]
   1265c:	str	r3, [fp, #-16]
   12660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12664:	ldr	r2, [r3, #4]
   12668:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1266c:	lsl	r3, r3, #3
   12670:	add	r3, r2, r3
   12674:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12678:	ldr	r1, [r2, #4]
   1267c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12680:	lsl	r2, r2, #3
   12684:	add	r2, r1, r2
   12688:	ldr	r2, [r2, #4]
   1268c:	ldr	r2, [r2, #4]
   12690:	str	r2, [r3, #4]
   12694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12698:	ldr	r3, [r3, #4]
   1269c:	ldr	r2, [r3]
   126a0:	sub	r2, r2, #1
   126a4:	str	r2, [r3]
   126a8:	ldr	r0, [fp, #-16]
   126ac:	bl	10ad8 <free@plt>
   126b0:	mov	r3, #1
   126b4:	b	12760 <grafo_remove@@Base+0x1b8>
   126b8:	mov	r3, #0
   126bc:	str	r3, [fp, #-12]
   126c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126c4:	ldr	r2, [r3, #4]
   126c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   126cc:	lsl	r3, r3, #3
   126d0:	add	r3, r2, r3
   126d4:	ldr	r3, [r3, #4]
   126d8:	str	r3, [fp, #-8]
   126dc:	b	12748 <grafo_remove@@Base+0x1a0>
   126e0:	ldr	r3, [fp, #-8]
   126e4:	ldr	r2, [r3]
   126e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   126ec:	cmp	r2, r3
   126f0:	bne	12734 <grafo_remove@@Base+0x18c>
   126f4:	ldr	r3, [fp, #-12]
   126f8:	cmp	r3, #0
   126fc:	beq	12734 <grafo_remove@@Base+0x18c>
   12700:	ldr	r3, [fp, #-8]
   12704:	ldr	r2, [r3, #4]
   12708:	ldr	r3, [fp, #-12]
   1270c:	str	r2, [r3, #4]
   12710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12714:	ldr	r3, [r3, #4]
   12718:	ldr	r2, [r3]
   1271c:	sub	r2, r2, #1
   12720:	str	r2, [r3]
   12724:	ldr	r0, [fp, #-8]
   12728:	bl	10ad8 <free@plt>
   1272c:	mov	r3, #1
   12730:	b	12760 <grafo_remove@@Base+0x1b8>
   12734:	ldr	r3, [fp, #-8]
   12738:	str	r3, [fp, #-12]
   1273c:	ldr	r3, [fp, #-8]
   12740:	ldr	r3, [r3, #4]
   12744:	str	r3, [fp, #-8]
   12748:	ldr	r3, [fp, #-8]
   1274c:	cmp	r3, #0
   12750:	bne	126e0 <grafo_remove@@Base+0x138>
   12754:	mov	r3, #0
   12758:	b	12760 <grafo_remove@@Base+0x1b8>
   1275c:	mvn	r3, #0
   12760:	mov	r0, r3
   12764:	sub	sp, fp, #4
   12768:	pop	{fp, pc}

0001276c <v_sucessores@@Base>:
   1276c:	push	{fp, lr}
   12770:	add	fp, sp, #4
   12774:	sub	sp, sp, #24
   12778:	str	r0, [fp, #-24]	; 0xffffffe8
   1277c:	str	r1, [fp, #-28]	; 0xffffffe4
   12780:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12784:	cmp	r3, #0
   12788:	beq	12820 <v_sucessores@@Base+0xb4>
   1278c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12790:	ldr	r2, [r3]
   12794:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12798:	cmp	r2, r3
   1279c:	ble	12820 <v_sucessores@@Base+0xb4>
   127a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   127a4:	cmp	r3, #0
   127a8:	blt	12820 <v_sucessores@@Base+0xb4>
   127ac:	mov	r3, #0
   127b0:	str	r3, [fp, #-8]
   127b4:	bl	12acc <vetor_novo@@Base>
   127b8:	str	r0, [fp, #-16]
   127bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   127c0:	ldr	r2, [r3, #4]
   127c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   127c8:	lsl	r3, r3, #3
   127cc:	add	r3, r2, r3
   127d0:	ldr	r3, [r3, #4]
   127d4:	str	r3, [fp, #-12]
   127d8:	b	1280c <v_sucessores@@Base+0xa0>
   127dc:	ldr	r3, [fp, #-12]
   127e0:	ldr	r3, [r3]
   127e4:	ldr	r2, [fp, #-8]
   127e8:	mov	r1, r3
   127ec:	ldr	r0, [fp, #-16]
   127f0:	bl	12c9c <vetor_insere@@Base>
   127f4:	ldr	r3, [fp, #-8]
   127f8:	add	r3, r3, #1
   127fc:	str	r3, [fp, #-8]
   12800:	ldr	r3, [fp, #-12]
   12804:	ldr	r3, [r3, #4]
   12808:	str	r3, [fp, #-12]
   1280c:	ldr	r3, [fp, #-12]
   12810:	cmp	r3, #0
   12814:	bne	127dc <v_sucessores@@Base+0x70>
   12818:	ldr	r3, [fp, #-16]
   1281c:	b	12824 <v_sucessores@@Base+0xb8>
   12820:	mov	r3, #0
   12824:	mov	r0, r3
   12828:	sub	sp, fp, #4
   1282c:	pop	{fp, pc}

00012830 <v_antecessores@@Base>:
   12830:	push	{fp, lr}
   12834:	add	fp, sp, #4
   12838:	sub	sp, sp, #24
   1283c:	str	r0, [fp, #-24]	; 0xffffffe8
   12840:	str	r1, [fp, #-28]	; 0xffffffe4
   12844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12848:	cmp	r3, #0
   1284c:	beq	12920 <v_antecessores@@Base+0xf0>
   12850:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12854:	ldr	r2, [r3]
   12858:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1285c:	cmp	r2, r3
   12860:	ble	12920 <v_antecessores@@Base+0xf0>
   12864:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12868:	cmp	r3, #0
   1286c:	blt	12920 <v_antecessores@@Base+0xf0>
   12870:	bl	12acc <vetor_novo@@Base>
   12874:	str	r0, [fp, #-20]	; 0xffffffec
   12878:	mov	r3, #0
   1287c:	str	r3, [fp, #-12]
   12880:	mov	r3, #0
   12884:	str	r3, [fp, #-8]
   12888:	b	12904 <v_antecessores@@Base+0xd4>
   1288c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12890:	ldr	r2, [r3, #4]
   12894:	ldr	r3, [fp, #-8]
   12898:	lsl	r3, r3, #3
   1289c:	add	r3, r2, r3
   128a0:	ldr	r3, [r3, #4]
   128a4:	str	r3, [fp, #-16]
   128a8:	b	128ec <v_antecessores@@Base+0xbc>
   128ac:	ldr	r3, [fp, #-16]
   128b0:	ldr	r2, [r3]
   128b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   128b8:	cmp	r2, r3
   128bc:	bne	128e0 <v_antecessores@@Base+0xb0>
   128c0:	ldr	r2, [fp, #-12]
   128c4:	ldr	r1, [fp, #-8]
   128c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   128cc:	bl	12c9c <vetor_insere@@Base>
   128d0:	ldr	r3, [fp, #-12]
   128d4:	add	r3, r3, #1
   128d8:	str	r3, [fp, #-12]
   128dc:	b	128f8 <v_antecessores@@Base+0xc8>
   128e0:	ldr	r3, [fp, #-16]
   128e4:	ldr	r3, [r3, #4]
   128e8:	str	r3, [fp, #-16]
   128ec:	ldr	r3, [fp, #-16]
   128f0:	cmp	r3, #0
   128f4:	bne	128ac <v_antecessores@@Base+0x7c>
   128f8:	ldr	r3, [fp, #-8]
   128fc:	add	r3, r3, #1
   12900:	str	r3, [fp, #-8]
   12904:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12908:	ldr	r2, [r3]
   1290c:	ldr	r3, [fp, #-8]
   12910:	cmp	r2, r3
   12914:	bgt	1288c <v_antecessores@@Base+0x5c>
   12918:	ldr	r3, [fp, #-20]	; 0xffffffec
   1291c:	b	12924 <v_antecessores@@Base+0xf4>
   12920:	mov	r3, #0
   12924:	mov	r0, r3
   12928:	sub	sp, fp, #4
   1292c:	pop	{fp, pc}

00012930 <v_grau@@Base>:
   12930:	push	{r4, fp, lr}
   12934:	add	fp, sp, #8
   12938:	sub	sp, sp, #28
   1293c:	str	r0, [fp, #-32]	; 0xffffffe0
   12940:	str	r1, [fp, #-36]	; 0xffffffdc
   12944:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12948:	cmp	r3, #0
   1294c:	bge	12958 <v_grau@@Base+0x28>
   12950:	mvn	r3, #0
   12954:	b	129ac <v_grau@@Base+0x7c>
   12958:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1295c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12960:	bl	12830 <v_antecessores@@Base>
   12964:	str	r0, [fp, #-16]
   12968:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1296c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12970:	bl	1276c <v_sucessores@@Base>
   12974:	str	r0, [fp, #-20]	; 0xffffffec
   12978:	ldr	r0, [fp, #-16]
   1297c:	bl	12bf0 <vetor_tamanho@@Base>
   12980:	mov	r4, r0
   12984:	ldr	r0, [fp, #-20]	; 0xffffffec
   12988:	bl	12bf0 <vetor_tamanho@@Base>
   1298c:	mov	r3, r0
   12990:	add	r3, r4, r3
   12994:	str	r3, [fp, #-24]	; 0xffffffe8
   12998:	ldr	r0, [fp, #-16]
   1299c:	bl	12b30 <vetor_apaga@@Base>
   129a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   129a4:	bl	12b30 <vetor_apaga@@Base>
   129a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129ac:	mov	r0, r3
   129b0:	sub	sp, fp, #8
   129b4:	pop	{r4, fp, pc}

000129b8 <v_celebridade@@Base>:
   129b8:	push	{fp}		; (str fp, [sp, #-4]!)
   129bc:	add	fp, sp, #0
   129c0:	sub	sp, sp, #28
   129c4:	str	r0, [fp, #-24]	; 0xffffffe8
   129c8:	str	r1, [fp, #-28]	; 0xffffffe4
   129cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129d0:	cmp	r3, #0
   129d4:	bne	129e0 <v_celebridade@@Base+0x28>
   129d8:	mvn	r3, #0
   129dc:	b	12abc <v_celebridade@@Base+0x104>
   129e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   129e4:	ldr	r2, [r3, #4]
   129e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   129ec:	lsl	r3, r3, #3
   129f0:	add	r3, r2, r3
   129f4:	ldr	r3, [r3]
   129f8:	cmp	r3, #0
   129fc:	beq	12a08 <v_celebridade@@Base+0x50>
   12a00:	mov	r3, #0
   12a04:	b	12abc <v_celebridade@@Base+0x104>
   12a08:	mov	r3, #0
   12a0c:	str	r3, [fp, #-12]
   12a10:	mov	r3, #0
   12a14:	str	r3, [fp, #-8]
   12a18:	b	12a84 <v_celebridade@@Base+0xcc>
   12a1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a20:	ldr	r2, [r3, #4]
   12a24:	ldr	r3, [fp, #-8]
   12a28:	lsl	r3, r3, #3
   12a2c:	add	r3, r2, r3
   12a30:	ldr	r3, [r3, #4]
   12a34:	str	r3, [fp, #-16]
   12a38:	b	12a6c <v_celebridade@@Base+0xb4>
   12a3c:	ldr	r3, [fp, #-16]
   12a40:	ldr	r2, [r3]
   12a44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12a48:	cmp	r2, r3
   12a4c:	bne	12a60 <v_celebridade@@Base+0xa8>
   12a50:	ldr	r3, [fp, #-12]
   12a54:	add	r3, r3, #1
   12a58:	str	r3, [fp, #-12]
   12a5c:	b	12a78 <v_celebridade@@Base+0xc0>
   12a60:	ldr	r3, [fp, #-16]
   12a64:	ldr	r3, [r3, #4]
   12a68:	str	r3, [fp, #-16]
   12a6c:	ldr	r3, [fp, #-16]
   12a70:	cmp	r3, #0
   12a74:	bne	12a3c <v_celebridade@@Base+0x84>
   12a78:	ldr	r3, [fp, #-8]
   12a7c:	add	r3, r3, #1
   12a80:	str	r3, [fp, #-8]
   12a84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a88:	ldr	r2, [r3]
   12a8c:	ldr	r3, [fp, #-8]
   12a90:	cmp	r2, r3
   12a94:	bgt	12a1c <v_celebridade@@Base+0x64>
   12a98:	ldr	r3, [fp, #-12]
   12a9c:	add	r2, r3, #1
   12aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12aa4:	ldr	r3, [r3]
   12aa8:	cmp	r2, r3
   12aac:	bne	12ab8 <v_celebridade@@Base+0x100>
   12ab0:	mov	r3, #1
   12ab4:	b	12abc <v_celebridade@@Base+0x104>
   12ab8:	mov	r3, #0
   12abc:	mov	r0, r3
   12ac0:	add	sp, fp, #0
   12ac4:	pop	{fp}		; (ldr fp, [sp], #4)
   12ac8:	bx	lr

00012acc <vetor_novo@@Base>:
   12acc:	push	{fp, lr}
   12ad0:	add	fp, sp, #4
   12ad4:	sub	sp, sp, #8
   12ad8:	mov	r0, #12
   12adc:	bl	10afc <malloc@plt>
   12ae0:	mov	r3, r0
   12ae4:	str	r3, [fp, #-8]
   12ae8:	ldr	r3, [fp, #-8]
   12aec:	cmp	r3, #0
   12af0:	bne	12afc <vetor_novo@@Base+0x30>
   12af4:	mov	r3, #0
   12af8:	b	12b24 <vetor_novo@@Base+0x58>
   12afc:	ldr	r3, [fp, #-8]
   12b00:	mov	r2, #0
   12b04:	str	r2, [r3]
   12b08:	ldr	r3, [fp, #-8]
   12b0c:	mov	r2, #0
   12b10:	str	r2, [r3, #4]
   12b14:	ldr	r3, [fp, #-8]
   12b18:	mov	r2, #0
   12b1c:	str	r2, [r3, #8]
   12b20:	ldr	r3, [fp, #-8]
   12b24:	mov	r0, r3
   12b28:	sub	sp, fp, #4
   12b2c:	pop	{fp, pc}

00012b30 <vetor_apaga@@Base>:
   12b30:	push	{fp, lr}
   12b34:	add	fp, sp, #4
   12b38:	sub	sp, sp, #8
   12b3c:	str	r0, [fp, #-8]
   12b40:	ldr	r3, [fp, #-8]
   12b44:	cmp	r3, #0
   12b48:	beq	12b68 <vetor_apaga@@Base+0x38>
   12b4c:	ldr	r3, [fp, #-8]
   12b50:	ldr	r3, [r3, #8]
   12b54:	mov	r0, r3
   12b58:	bl	10ad8 <free@plt>
   12b5c:	ldr	r0, [fp, #-8]
   12b60:	bl	10ad8 <free@plt>
   12b64:	b	12b6c <vetor_apaga@@Base+0x3c>
   12b68:	nop			; (mov r0, r0)
   12b6c:	sub	sp, fp, #4
   12b70:	pop	{fp, pc}

00012b74 <vetor_atribui@@Base>:
   12b74:	push	{fp}		; (str fp, [sp, #-4]!)
   12b78:	add	fp, sp, #0
   12b7c:	sub	sp, sp, #20
   12b80:	str	r0, [fp, #-8]
   12b84:	str	r1, [fp, #-12]
   12b88:	str	r2, [fp, #-16]
   12b8c:	ldr	r3, [fp, #-8]
   12b90:	cmp	r3, #0
   12b94:	beq	12bb8 <vetor_atribui@@Base+0x44>
   12b98:	ldr	r3, [fp, #-12]
   12b9c:	cmp	r3, #0
   12ba0:	blt	12bb8 <vetor_atribui@@Base+0x44>
   12ba4:	ldr	r3, [fp, #-8]
   12ba8:	ldr	r2, [r3]
   12bac:	ldr	r3, [fp, #-12]
   12bb0:	cmp	r2, r3
   12bb4:	bgt	12bc0 <vetor_atribui@@Base+0x4c>
   12bb8:	mvn	r3, #0
   12bbc:	b	12be0 <vetor_atribui@@Base+0x6c>
   12bc0:	ldr	r3, [fp, #-8]
   12bc4:	ldr	r2, [r3, #8]
   12bc8:	ldr	r3, [fp, #-12]
   12bcc:	lsl	r3, r3, #2
   12bd0:	add	r3, r2, r3
   12bd4:	ldr	r2, [fp, #-16]
   12bd8:	str	r2, [r3]
   12bdc:	ldr	r3, [fp, #-12]
   12be0:	mov	r0, r3
   12be4:	add	sp, fp, #0
   12be8:	pop	{fp}		; (ldr fp, [sp], #4)
   12bec:	bx	lr

00012bf0 <vetor_tamanho@@Base>:
   12bf0:	push	{fp}		; (str fp, [sp, #-4]!)
   12bf4:	add	fp, sp, #0
   12bf8:	sub	sp, sp, #12
   12bfc:	str	r0, [fp, #-8]
   12c00:	ldr	r3, [fp, #-8]
   12c04:	cmp	r3, #0
   12c08:	bne	12c14 <vetor_tamanho@@Base+0x24>
   12c0c:	mvn	r3, #0
   12c10:	b	12c1c <vetor_tamanho@@Base+0x2c>
   12c14:	ldr	r3, [fp, #-8]
   12c18:	ldr	r3, [r3]
   12c1c:	mov	r0, r3
   12c20:	add	sp, fp, #0
   12c24:	pop	{fp}		; (ldr fp, [sp], #4)
   12c28:	bx	lr

00012c2c <vetor_elemento@@Base>:
   12c2c:	push	{fp}		; (str fp, [sp, #-4]!)
   12c30:	add	fp, sp, #0
   12c34:	sub	sp, sp, #12
   12c38:	str	r0, [fp, #-8]
   12c3c:	str	r1, [fp, #-12]
   12c40:	ldr	r3, [fp, #-8]
   12c44:	cmp	r3, #0
   12c48:	beq	12c6c <vetor_elemento@@Base+0x40>
   12c4c:	ldr	r3, [fp, #-12]
   12c50:	cmp	r3, #0
   12c54:	blt	12c6c <vetor_elemento@@Base+0x40>
   12c58:	ldr	r3, [fp, #-8]
   12c5c:	ldr	r2, [r3]
   12c60:	ldr	r3, [fp, #-12]
   12c64:	cmp	r2, r3
   12c68:	bgt	12c74 <vetor_elemento@@Base+0x48>
   12c6c:	mov	r3, #-2147483648	; 0x80000000
   12c70:	b	12c8c <vetor_elemento@@Base+0x60>
   12c74:	ldr	r3, [fp, #-8]
   12c78:	ldr	r2, [r3, #8]
   12c7c:	ldr	r3, [fp, #-12]
   12c80:	lsl	r3, r3, #2
   12c84:	add	r3, r2, r3
   12c88:	ldr	r3, [r3]
   12c8c:	mov	r0, r3
   12c90:	add	sp, fp, #0
   12c94:	pop	{fp}		; (ldr fp, [sp], #4)
   12c98:	bx	lr

00012c9c <vetor_insere@@Base>:
   12c9c:	push	{fp, lr}
   12ca0:	add	fp, sp, #4
   12ca4:	sub	sp, sp, #24
   12ca8:	str	r0, [fp, #-16]
   12cac:	str	r1, [fp, #-20]	; 0xffffffec
   12cb0:	str	r2, [fp, #-24]	; 0xffffffe8
   12cb4:	ldr	r3, [fp, #-16]
   12cb8:	cmp	r3, #0
   12cbc:	beq	12ce0 <vetor_insere@@Base+0x44>
   12cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12cc4:	cmn	r3, #1
   12cc8:	blt	12ce0 <vetor_insere@@Base+0x44>
   12ccc:	ldr	r3, [fp, #-16]
   12cd0:	ldr	r2, [r3]
   12cd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12cd8:	cmp	r2, r3
   12cdc:	bge	12ce8 <vetor_insere@@Base+0x4c>
   12ce0:	mvn	r3, #0
   12ce4:	b	12e28 <vetor_insere@@Base+0x18c>
   12ce8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12cec:	cmn	r3, #1
   12cf0:	bne	12d00 <vetor_insere@@Base+0x64>
   12cf4:	ldr	r3, [fp, #-16]
   12cf8:	ldr	r3, [r3]
   12cfc:	str	r3, [fp, #-24]	; 0xffffffe8
   12d00:	ldr	r3, [fp, #-16]
   12d04:	ldr	r2, [r3]
   12d08:	ldr	r3, [fp, #-16]
   12d0c:	ldr	r3, [r3, #4]
   12d10:	cmp	r2, r3
   12d14:	bne	12d90 <vetor_insere@@Base+0xf4>
   12d18:	ldr	r3, [fp, #-16]
   12d1c:	ldr	r3, [r3, #4]
   12d20:	cmp	r3, #0
   12d24:	bne	12d38 <vetor_insere@@Base+0x9c>
   12d28:	ldr	r3, [fp, #-16]
   12d2c:	mov	r2, #1
   12d30:	str	r2, [r3, #4]
   12d34:	b	12d4c <vetor_insere@@Base+0xb0>
   12d38:	ldr	r3, [fp, #-16]
   12d3c:	ldr	r3, [r3, #4]
   12d40:	lsl	r2, r3, #1
   12d44:	ldr	r3, [fp, #-16]
   12d48:	str	r2, [r3, #4]
   12d4c:	ldr	r3, [fp, #-16]
   12d50:	ldr	r2, [r3, #8]
   12d54:	ldr	r3, [fp, #-16]
   12d58:	ldr	r3, [r3, #4]
   12d5c:	lsl	r3, r3, #2
   12d60:	mov	r1, r3
   12d64:	mov	r0, r2
   12d68:	bl	10ae4 <realloc@plt>
   12d6c:	mov	r2, r0
   12d70:	ldr	r3, [fp, #-16]
   12d74:	str	r2, [r3, #8]
   12d78:	ldr	r3, [fp, #-16]
   12d7c:	ldr	r3, [r3, #8]
   12d80:	cmp	r3, #0
   12d84:	bne	12d90 <vetor_insere@@Base+0xf4>
   12d88:	mvn	r3, #0
   12d8c:	b	12e28 <vetor_insere@@Base+0x18c>
   12d90:	ldr	r3, [fp, #-16]
   12d94:	ldr	r3, [r3]
   12d98:	sub	r3, r3, #1
   12d9c:	str	r3, [fp, #-8]
   12da0:	b	12de4 <vetor_insere@@Base+0x148>
   12da4:	ldr	r3, [fp, #-16]
   12da8:	ldr	r2, [r3, #8]
   12dac:	ldr	r3, [fp, #-8]
   12db0:	add	r3, r3, #1
   12db4:	lsl	r3, r3, #2
   12db8:	add	r3, r2, r3
   12dbc:	ldr	r2, [fp, #-16]
   12dc0:	ldr	r1, [r2, #8]
   12dc4:	ldr	r2, [fp, #-8]
   12dc8:	lsl	r2, r2, #2
   12dcc:	add	r2, r1, r2
   12dd0:	ldr	r2, [r2]
   12dd4:	str	r2, [r3]
   12dd8:	ldr	r3, [fp, #-8]
   12ddc:	sub	r3, r3, #1
   12de0:	str	r3, [fp, #-8]
   12de4:	ldr	r2, [fp, #-8]
   12de8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12dec:	cmp	r2, r3
   12df0:	bge	12da4 <vetor_insere@@Base+0x108>
   12df4:	ldr	r3, [fp, #-16]
   12df8:	ldr	r2, [r3, #8]
   12dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e00:	lsl	r3, r3, #2
   12e04:	add	r3, r2, r3
   12e08:	ldr	r2, [fp, #-20]	; 0xffffffec
   12e0c:	str	r2, [r3]
   12e10:	ldr	r3, [fp, #-16]
   12e14:	ldr	r3, [r3]
   12e18:	add	r2, r3, #1
   12e1c:	ldr	r3, [fp, #-16]
   12e20:	str	r2, [r3]
   12e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e28:	mov	r0, r3
   12e2c:	sub	sp, fp, #4
   12e30:	pop	{fp, pc}

00012e34 <vetor_remove@@Base>:
   12e34:	push	{fp}		; (str fp, [sp, #-4]!)
   12e38:	add	fp, sp, #0
   12e3c:	sub	sp, sp, #20
   12e40:	str	r0, [fp, #-16]
   12e44:	str	r1, [fp, #-20]	; 0xffffffec
   12e48:	ldr	r3, [fp, #-16]
   12e4c:	cmp	r3, #0
   12e50:	beq	12e74 <vetor_remove@@Base+0x40>
   12e54:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e58:	cmp	r3, #0
   12e5c:	blt	12e74 <vetor_remove@@Base+0x40>
   12e60:	ldr	r3, [fp, #-16]
   12e64:	ldr	r2, [r3]
   12e68:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e6c:	cmp	r2, r3
   12e70:	bgt	12e7c <vetor_remove@@Base+0x48>
   12e74:	mvn	r3, #0
   12e78:	b	12ef8 <vetor_remove@@Base+0xc4>
   12e7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e80:	add	r3, r3, #1
   12e84:	str	r3, [fp, #-8]
   12e88:	b	12ecc <vetor_remove@@Base+0x98>
   12e8c:	ldr	r3, [fp, #-16]
   12e90:	ldr	r2, [r3, #8]
   12e94:	ldr	r3, [fp, #-8]
   12e98:	sub	r3, r3, #-1073741823	; 0xc0000001
   12e9c:	lsl	r3, r3, #2
   12ea0:	add	r3, r2, r3
   12ea4:	ldr	r2, [fp, #-16]
   12ea8:	ldr	r1, [r2, #8]
   12eac:	ldr	r2, [fp, #-8]
   12eb0:	lsl	r2, r2, #2
   12eb4:	add	r2, r1, r2
   12eb8:	ldr	r2, [r2]
   12ebc:	str	r2, [r3]
   12ec0:	ldr	r3, [fp, #-8]
   12ec4:	add	r3, r3, #1
   12ec8:	str	r3, [fp, #-8]
   12ecc:	ldr	r3, [fp, #-16]
   12ed0:	ldr	r2, [r3]
   12ed4:	ldr	r3, [fp, #-8]
   12ed8:	cmp	r2, r3
   12edc:	bgt	12e8c <vetor_remove@@Base+0x58>
   12ee0:	ldr	r3, [fp, #-16]
   12ee4:	ldr	r3, [r3]
   12ee8:	sub	r2, r3, #1
   12eec:	ldr	r3, [fp, #-16]
   12ef0:	str	r2, [r3]
   12ef4:	mov	r3, #0
   12ef8:	mov	r0, r3
   12efc:	add	sp, fp, #0
   12f00:	pop	{fp}		; (ldr fp, [sp], #4)
   12f04:	bx	lr

00012f08 <vetor_pesquisa@@Base>:
   12f08:	push	{fp}		; (str fp, [sp, #-4]!)
   12f0c:	add	fp, sp, #0
   12f10:	sub	sp, sp, #20
   12f14:	str	r0, [fp, #-16]
   12f18:	str	r1, [fp, #-20]	; 0xffffffec
   12f1c:	ldr	r3, [fp, #-16]
   12f20:	cmp	r3, #0
   12f24:	bne	12f30 <vetor_pesquisa@@Base+0x28>
   12f28:	mvn	r3, #0
   12f2c:	b	12f8c <vetor_pesquisa@@Base+0x84>
   12f30:	mov	r3, #0
   12f34:	str	r3, [fp, #-8]
   12f38:	b	12f74 <vetor_pesquisa@@Base+0x6c>
   12f3c:	ldr	r3, [fp, #-16]
   12f40:	ldr	r2, [r3, #8]
   12f44:	ldr	r3, [fp, #-8]
   12f48:	lsl	r3, r3, #2
   12f4c:	add	r3, r2, r3
   12f50:	ldr	r2, [r3]
   12f54:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f58:	cmp	r2, r3
   12f5c:	bne	12f68 <vetor_pesquisa@@Base+0x60>
   12f60:	ldr	r3, [fp, #-8]
   12f64:	b	12f8c <vetor_pesquisa@@Base+0x84>
   12f68:	ldr	r3, [fp, #-8]
   12f6c:	add	r3, r3, #1
   12f70:	str	r3, [fp, #-8]
   12f74:	ldr	r3, [fp, #-16]
   12f78:	ldr	r2, [r3]
   12f7c:	ldr	r3, [fp, #-8]
   12f80:	cmp	r2, r3
   12f84:	bgt	12f3c <vetor_pesquisa@@Base+0x34>
   12f88:	mvn	r3, #0
   12f8c:	mov	r0, r3
   12f90:	add	sp, fp, #0
   12f94:	pop	{fp}		; (ldr fp, [sp], #4)
   12f98:	bx	lr

00012f9c <vetor_ordena@@Base>:
   12f9c:	push	{fp}		; (str fp, [sp, #-4]!)
   12fa0:	add	fp, sp, #0
   12fa4:	sub	sp, sp, #28
   12fa8:	str	r0, [fp, #-24]	; 0xffffffe8
   12fac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12fb0:	cmp	r3, #0
   12fb4:	bne	12fc0 <vetor_ordena@@Base+0x24>
   12fb8:	mvn	r3, #0
   12fbc:	b	130a8 <vetor_ordena@@Base+0x10c>
   12fc0:	mov	r3, #1
   12fc4:	str	r3, [fp, #-8]
   12fc8:	b	13090 <vetor_ordena@@Base+0xf4>
   12fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12fd0:	ldr	r2, [r3, #8]
   12fd4:	ldr	r3, [fp, #-8]
   12fd8:	lsl	r3, r3, #2
   12fdc:	add	r3, r2, r3
   12fe0:	ldr	r3, [r3]
   12fe4:	str	r3, [fp, #-16]
   12fe8:	ldr	r3, [fp, #-8]
   12fec:	str	r3, [fp, #-12]
   12ff0:	b	13034 <vetor_ordena@@Base+0x98>
   12ff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ff8:	ldr	r2, [r3, #8]
   12ffc:	ldr	r3, [fp, #-12]
   13000:	lsl	r3, r3, #2
   13004:	add	r3, r2, r3
   13008:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1300c:	ldr	r1, [r2, #8]
   13010:	ldr	r2, [fp, #-12]
   13014:	sub	r2, r2, #-1073741823	; 0xc0000001
   13018:	lsl	r2, r2, #2
   1301c:	add	r2, r1, r2
   13020:	ldr	r2, [r2]
   13024:	str	r2, [r3]
   13028:	ldr	r3, [fp, #-12]
   1302c:	sub	r3, r3, #1
   13030:	str	r3, [fp, #-12]
   13034:	ldr	r3, [fp, #-12]
   13038:	cmp	r3, #0
   1303c:	ble	13068 <vetor_ordena@@Base+0xcc>
   13040:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13044:	ldr	r2, [r3, #8]
   13048:	ldr	r3, [fp, #-12]
   1304c:	sub	r3, r3, #-1073741823	; 0xc0000001
   13050:	lsl	r3, r3, #2
   13054:	add	r3, r2, r3
   13058:	ldr	r2, [r3]
   1305c:	ldr	r3, [fp, #-16]
   13060:	cmp	r2, r3
   13064:	bgt	12ff4 <vetor_ordena@@Base+0x58>
   13068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1306c:	ldr	r2, [r3, #8]
   13070:	ldr	r3, [fp, #-12]
   13074:	lsl	r3, r3, #2
   13078:	add	r3, r2, r3
   1307c:	ldr	r2, [fp, #-16]
   13080:	str	r2, [r3]
   13084:	ldr	r3, [fp, #-8]
   13088:	add	r3, r3, #1
   1308c:	str	r3, [fp, #-8]
   13090:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13094:	ldr	r2, [r3]
   13098:	ldr	r3, [fp, #-8]
   1309c:	cmp	r2, r3
   130a0:	bgt	12fcc <vetor_ordena@@Base+0x30>
   130a4:	mov	r3, #0
   130a8:	mov	r0, r3
   130ac:	add	sp, fp, #0
   130b0:	pop	{fp}		; (ldr fp, [sp], #4)
   130b4:	bx	lr

000130b8 <__libc_csu_init@@Base>:
   130b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   130bc:	mov	r7, r0
   130c0:	ldr	r6, [pc, #72]	; 13110 <__libc_csu_init@@Base+0x58>
   130c4:	ldr	r5, [pc, #72]	; 13114 <__libc_csu_init@@Base+0x5c>
   130c8:	add	r6, pc, r6
   130cc:	add	r5, pc, r5
   130d0:	sub	r6, r6, r5
   130d4:	mov	r8, r1
   130d8:	mov	r9, r2
   130dc:	bl	10aa0 <calloc@plt-0x20>
   130e0:	asrs	r6, r6, #2
   130e4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   130e8:	mov	r4, #0
   130ec:	add	r4, r4, #1
   130f0:	ldr	r3, [r5], #4
   130f4:	mov	r2, r9
   130f8:	mov	r1, r8
   130fc:	mov	r0, r7
   13100:	blx	r3
   13104:	cmp	r6, r4
   13108:	bne	130ec <__libc_csu_init@@Base+0x34>
   1310c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13110:	andeq	r0, r1, r0, asr #28
   13114:	andeq	r0, r1, r8, lsr lr

00013118 <__libc_csu_fini@@Base>:
   13118:	bx	lr

Disassembly of section .fini:

0001311c <.fini>:
   1311c:	push	{r3, lr}
   13120:	pop	{r3, pc}
