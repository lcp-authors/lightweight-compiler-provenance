
../repos/coreutils/src/wc:     file format elf32-littlearm


Disassembly of section .init:

00011298 <.init>:
   11298:	push	{r3, lr}
   1129c:	bl	11624 <__assert_fail@plt+0x48>
   112a0:	pop	{r3, pc}

Disassembly of section .plt:

000112a4 <calloc@plt-0x14>:
   112a4:	push	{lr}		; (str lr, [sp, #-4]!)
   112a8:	ldr	lr, [pc, #4]	; 112b4 <calloc@plt-0x4>
   112ac:	add	lr, pc, lr
   112b0:	ldr	pc, [lr, #8]!
   112b4:	andeq	lr, r1, ip, asr #26

000112b8 <calloc@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #122880	; 0x1e000
   112c0:	ldr	pc, [ip, #3404]!	; 0xd4c

000112c4 <fputs_unlocked@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #122880	; 0x1e000
   112cc:	ldr	pc, [ip, #3396]!	; 0xd44

000112d0 <raise@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #122880	; 0x1e000
   112d8:	ldr	pc, [ip, #3388]!	; 0xd3c

000112dc <strcmp@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #122880	; 0x1e000
   112e4:	ldr	pc, [ip, #3380]!	; 0xd34

000112e8 <posix_fadvise64@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #122880	; 0x1e000
   112f0:	ldr	pc, [ip, #3372]!	; 0xd2c

000112f4 <printf@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #122880	; 0x1e000
   112fc:	ldr	pc, [ip, #3364]!	; 0xd24

00011300 <read@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #122880	; 0x1e000
   11308:	ldr	pc, [ip, #3356]!	; 0xd1c

0001130c <fflush@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #122880	; 0x1e000
   11314:	ldr	pc, [ip, #3348]!	; 0xd14

00011318 <wcwidth@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #122880	; 0x1e000
   11320:	ldr	pc, [ip, #3340]!	; 0xd0c

00011324 <memmove@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #122880	; 0x1e000
   1132c:	ldr	pc, [ip, #3332]!	; 0xd04

00011330 <free@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #122880	; 0x1e000
   11338:	ldr	pc, [ip, #3324]!	; 0xcfc

0001133c <ferror@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #122880	; 0x1e000
   11344:	ldr	pc, [ip, #3316]!	; 0xcf4

00011348 <_exit@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #122880	; 0x1e000
   11350:	ldr	pc, [ip, #3308]!	; 0xcec

00011354 <memcpy@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #122880	; 0x1e000
   1135c:	ldr	pc, [ip, #3300]!	; 0xce4

00011360 <mbsinit@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #122880	; 0x1e000
   11368:	ldr	pc, [ip, #3292]!	; 0xcdc

0001136c <memcmp@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #122880	; 0x1e000
   11374:	ldr	pc, [ip, #3284]!	; 0xcd4

00011378 <sysconf@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #122880	; 0x1e000
   11380:	ldr	pc, [ip, #3276]!	; 0xccc

00011384 <realloc@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #122880	; 0x1e000
   1138c:	ldr	pc, [ip, #3268]!	; 0xcc4

00011390 <textdomain@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #122880	; 0x1e000
   11398:	ldr	pc, [ip, #3260]!	; 0xcbc

0001139c <iswcntrl@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #122880	; 0x1e000
   113a4:	ldr	pc, [ip, #3252]!	; 0xcb4

000113a8 <rawmemchr@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #122880	; 0x1e000
   113b0:	ldr	pc, [ip, #3244]!	; 0xcac

000113b4 <iswprint@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #122880	; 0x1e000
   113bc:	ldr	pc, [ip, #3236]!	; 0xca4

000113c0 <__fxstat64@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #122880	; 0x1e000
   113c8:	ldr	pc, [ip, #3228]!	; 0xc9c

000113cc <lseek64@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #122880	; 0x1e000
   113d4:	ldr	pc, [ip, #3220]!	; 0xc94

000113d8 <__ctype_get_mb_cur_max@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #122880	; 0x1e000
   113e0:	ldr	pc, [ip, #3212]!	; 0xc8c

000113e4 <__fpending@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #122880	; 0x1e000
   113ec:	ldr	pc, [ip, #3204]!	; 0xc84

000113f0 <ferror_unlocked@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #122880	; 0x1e000
   113f8:	ldr	pc, [ip, #3196]!	; 0xc7c

000113fc <mbrtowc@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #122880	; 0x1e000
   11404:	ldr	pc, [ip, #3188]!	; 0xc74

00011408 <error@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #122880	; 0x1e000
   11410:	ldr	pc, [ip, #3180]!	; 0xc6c

00011414 <open64@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #122880	; 0x1e000
   1141c:	ldr	pc, [ip, #3172]!	; 0xc64

00011420 <getenv@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #122880	; 0x1e000
   11428:	ldr	pc, [ip, #3164]!	; 0xc5c

0001142c <sysinfo@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #122880	; 0x1e000
   11434:	ldr	pc, [ip, #3156]!	; 0xc54

00011438 <malloc@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #122880	; 0x1e000
   11440:	ldr	pc, [ip, #3148]!	; 0xc4c

00011444 <__libc_start_main@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #122880	; 0x1e000
   1144c:	ldr	pc, [ip, #3140]!	; 0xc44

00011450 <__freading@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #122880	; 0x1e000
   11458:	ldr	pc, [ip, #3132]!	; 0xc3c

0001145c <__gmon_start__@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #122880	; 0x1e000
   11464:	ldr	pc, [ip, #3124]!	; 0xc34

00011468 <getopt_long@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #122880	; 0x1e000
   11470:	ldr	pc, [ip, #3116]!	; 0xc2c

00011474 <__ctype_b_loc@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #122880	; 0x1e000
   1147c:	ldr	pc, [ip, #3108]!	; 0xc24

00011480 <exit@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #122880	; 0x1e000
   11488:	ldr	pc, [ip, #3100]!	; 0xc1c

0001148c <feof@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #122880	; 0x1e000
   11494:	ldr	pc, [ip, #3092]!	; 0xc14

00011498 <iswspace@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #122880	; 0x1e000
   114a0:	ldr	pc, [ip, #3084]!	; 0xc0c

000114a4 <gettext@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #122880	; 0x1e000
   114ac:	ldr	pc, [ip, #3076]!	; 0xc04

000114b0 <strlen@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #122880	; 0x1e000
   114b8:	ldr	pc, [ip, #3068]!	; 0xbfc

000114bc <strchr@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #122880	; 0x1e000
   114c4:	ldr	pc, [ip, #3060]!	; 0xbf4

000114c8 <fprintf@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #122880	; 0x1e000
   114d0:	ldr	pc, [ip, #3052]!	; 0xbec

000114d4 <getpagesize@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #122880	; 0x1e000
   114dc:	ldr	pc, [ip, #3044]!	; 0xbe4

000114e0 <__errno_location@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #122880	; 0x1e000
   114e8:	ldr	pc, [ip, #3036]!	; 0xbdc

000114ec <__cxa_atexit@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #122880	; 0x1e000
   114f4:	ldr	pc, [ip, #3028]!	; 0xbd4

000114f8 <setvbuf@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #122880	; 0x1e000
   11500:	ldr	pc, [ip, #3020]!	; 0xbcc

00011504 <memset@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #122880	; 0x1e000
   1150c:	ldr	pc, [ip, #3012]!	; 0xbc4

00011510 <btowc@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #122880	; 0x1e000
   11518:	ldr	pc, [ip, #3004]!	; 0xbbc

0001151c <fgetc@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #122880	; 0x1e000
   11524:	ldr	pc, [ip, #2996]!	; 0xbb4

00011528 <fileno@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #122880	; 0x1e000
   11530:	ldr	pc, [ip, #2988]!	; 0xbac

00011534 <fclose@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #122880	; 0x1e000
   1153c:	ldr	pc, [ip, #2980]!	; 0xba4

00011540 <fseeko64@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #122880	; 0x1e000
   11548:	ldr	pc, [ip, #2972]!	; 0xb9c

0001154c <setlocale@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #122880	; 0x1e000
   11554:	ldr	pc, [ip, #2964]!	; 0xb94

00011558 <strrchr@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #122880	; 0x1e000
   11560:	ldr	pc, [ip, #2956]!	; 0xb8c

00011564 <nl_langinfo@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #122880	; 0x1e000
   1156c:	ldr	pc, [ip, #2948]!	; 0xb84

00011570 <fopen64@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #122880	; 0x1e000
   11578:	ldr	pc, [ip, #2940]!	; 0xb7c

0001157c <bindtextdomain@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #122880	; 0x1e000
   11584:	ldr	pc, [ip, #2932]!	; 0xb74

00011588 <getdelim@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #122880	; 0x1e000
   11590:	ldr	pc, [ip, #2924]!	; 0xb6c

00011594 <__xstat64@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #122880	; 0x1e000
   1159c:	ldr	pc, [ip, #2916]!	; 0xb64

000115a0 <fputs@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #122880	; 0x1e000
   115a8:	ldr	pc, [ip, #2908]!	; 0xb5c

000115ac <strncmp@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #122880	; 0x1e000
   115b4:	ldr	pc, [ip, #2900]!	; 0xb54

000115b8 <abort@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #122880	; 0x1e000
   115c0:	ldr	pc, [ip, #2892]!	; 0xb4c

000115c4 <close@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #122880	; 0x1e000
   115cc:	ldr	pc, [ip, #2884]!	; 0xb44

000115d0 <putchar_unlocked@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #122880	; 0x1e000
   115d8:	ldr	pc, [ip, #2876]!	; 0xb3c

000115dc <__assert_fail@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #122880	; 0x1e000
   115e4:	ldr	pc, [ip, #2868]!	; 0xb34

Disassembly of section .text:

000115e8 <_obstack_begin@@Base-0xa5b8>:
   115e8:	mov	fp, #0
   115ec:	mov	lr, #0
   115f0:	pop	{r1}		; (ldr r1, [sp], #4)
   115f4:	mov	r2, sp
   115f8:	push	{r2}		; (str r2, [sp, #-4]!)
   115fc:	push	{r0}		; (str r0, [sp, #-4]!)
   11600:	ldr	ip, [pc, #16]	; 11618 <__assert_fail@plt+0x3c>
   11604:	push	{ip}		; (str ip, [sp, #-4]!)
   11608:	ldr	r0, [pc, #12]	; 1161c <__assert_fail@plt+0x40>
   1160c:	ldr	r3, [pc, #12]	; 11620 <__assert_fail@plt+0x44>
   11610:	bl	11444 <__libc_start_main@plt>
   11614:	bl	115b8 <abort@plt>
   11618:	strdeq	lr, [r1], -r0
   1161c:	andeq	r1, r1, r8, lsl sl
   11620:	muleq	r1, r0, r4
   11624:	ldr	r3, [pc, #20]	; 11640 <__assert_fail@plt+0x64>
   11628:	ldr	r2, [pc, #20]	; 11644 <__assert_fail@plt+0x68>
   1162c:	add	r3, pc, r3
   11630:	ldr	r2, [r3, r2]
   11634:	cmp	r2, #0
   11638:	bxeq	lr
   1163c:	b	1145c <__gmon_start__@plt>
   11640:	andeq	lr, r1, ip, asr #19
   11644:	andeq	r0, r0, ip, lsl r1
   11648:	ldr	r0, [pc, #24]	; 11668 <__assert_fail@plt+0x8c>
   1164c:	ldr	r3, [pc, #24]	; 1166c <__assert_fail@plt+0x90>
   11650:	cmp	r3, r0
   11654:	bxeq	lr
   11658:	ldr	r3, [pc, #16]	; 11670 <__assert_fail@plt+0x94>
   1165c:	cmp	r3, #0
   11660:	bxeq	lr
   11664:	bx	r3
   11668:	andeq	r0, r3, r8, ror r1
   1166c:	andeq	r0, r3, r8, ror r1
   11670:	andeq	r0, r0, r0
   11674:	ldr	r0, [pc, #36]	; 116a0 <__assert_fail@plt+0xc4>
   11678:	ldr	r1, [pc, #36]	; 116a4 <__assert_fail@plt+0xc8>
   1167c:	sub	r1, r1, r0
   11680:	asr	r1, r1, #2
   11684:	add	r1, r1, r1, lsr #31
   11688:	asrs	r1, r1, #1
   1168c:	bxeq	lr
   11690:	ldr	r3, [pc, #16]	; 116a8 <__assert_fail@plt+0xcc>
   11694:	cmp	r3, #0
   11698:	bxeq	lr
   1169c:	bx	r3
   116a0:	andeq	r0, r3, r8, ror r1
   116a4:	andeq	r0, r3, r8, ror r1
   116a8:	andeq	r0, r0, r0
   116ac:	push	{r4, lr}
   116b0:	ldr	r4, [pc, #24]	; 116d0 <__assert_fail@plt+0xf4>
   116b4:	ldrb	r3, [r4]
   116b8:	cmp	r3, #0
   116bc:	popne	{r4, pc}
   116c0:	bl	11648 <__assert_fail@plt+0x6c>
   116c4:	mov	r3, #1
   116c8:	strb	r3, [r4]
   116cc:	pop	{r4, pc}
   116d0:	muleq	r3, ip, r1
   116d4:	b	11674 <__assert_fail@plt+0x98>
   116d8:	push	{fp, lr}
   116dc:	mov	fp, sp
   116e0:	sub	sp, sp, #40	; 0x28
   116e4:	str	r0, [fp, #-4]
   116e8:	ldr	r0, [fp, #-4]
   116ec:	cmp	r0, #0
   116f0:	beq	11740 <__assert_fail@plt+0x164>
   116f4:	b	116f8 <__assert_fail@plt+0x11c>
   116f8:	movw	r0, #392	; 0x188
   116fc:	movt	r0, #3
   11700:	ldr	r0, [r0]
   11704:	movw	r1, #58680	; 0xe538
   11708:	movt	r1, #1
   1170c:	str	r0, [fp, #-8]
   11710:	mov	r0, r1
   11714:	bl	114a4 <gettext@plt>
   11718:	movw	r1, #496	; 0x1f0
   1171c:	movt	r1, #3
   11720:	ldr	r2, [r1]
   11724:	ldr	r1, [fp, #-8]
   11728:	str	r0, [fp, #-12]
   1172c:	mov	r0, r1
   11730:	ldr	r1, [fp, #-12]
   11734:	bl	114c8 <fprintf@plt>
   11738:	str	r0, [fp, #-16]
   1173c:	b	11828 <__assert_fail@plt+0x24c>
   11740:	movw	r0, #58719	; 0xe55f
   11744:	movt	r0, #1
   11748:	bl	114a4 <gettext@plt>
   1174c:	movw	lr, #496	; 0x1f0
   11750:	movt	lr, #3
   11754:	ldr	r1, [lr]
   11758:	ldr	r2, [lr]
   1175c:	bl	112f4 <printf@plt>
   11760:	movw	r1, #58790	; 0xe5a6
   11764:	movt	r1, #1
   11768:	str	r0, [sp, #20]
   1176c:	mov	r0, r1
   11770:	bl	114a4 <gettext@plt>
   11774:	movw	r1, #404	; 0x194
   11778:	movt	r1, #3
   1177c:	ldr	r1, [r1]
   11780:	bl	112c4 <fputs_unlocked@plt>
   11784:	str	r0, [sp, #16]
   11788:	bl	11830 <__assert_fail@plt+0x254>
   1178c:	movw	r0, #58984	; 0xe668
   11790:	movt	r0, #1
   11794:	bl	114a4 <gettext@plt>
   11798:	movw	r1, #404	; 0x194
   1179c:	movt	r1, #3
   117a0:	ldr	r1, [r1]
   117a4:	bl	112c4 <fputs_unlocked@plt>
   117a8:	movw	r1, #59285	; 0xe795
   117ac:	movt	r1, #1
   117b0:	str	r0, [sp, #12]
   117b4:	mov	r0, r1
   117b8:	bl	114a4 <gettext@plt>
   117bc:	movw	r1, #404	; 0x194
   117c0:	movt	r1, #3
   117c4:	ldr	r1, [r1]
   117c8:	bl	112c4 <fputs_unlocked@plt>
   117cc:	movw	r1, #59586	; 0xe8c2
   117d0:	movt	r1, #1
   117d4:	str	r0, [sp, #8]
   117d8:	mov	r0, r1
   117dc:	bl	114a4 <gettext@plt>
   117e0:	movw	r1, #404	; 0x194
   117e4:	movt	r1, #3
   117e8:	ldr	r1, [r1]
   117ec:	bl	112c4 <fputs_unlocked@plt>
   117f0:	movw	r1, #59631	; 0xe8ef
   117f4:	movt	r1, #1
   117f8:	str	r0, [sp, #4]
   117fc:	mov	r0, r1
   11800:	bl	114a4 <gettext@plt>
   11804:	movw	r1, #404	; 0x194
   11808:	movt	r1, #3
   1180c:	ldr	r1, [r1]
   11810:	bl	112c4 <fputs_unlocked@plt>
   11814:	movw	r1, #59685	; 0xe925
   11818:	movt	r1, #1
   1181c:	str	r0, [sp]
   11820:	mov	r0, r1
   11824:	bl	11864 <__assert_fail@plt+0x288>
   11828:	ldr	r0, [fp, #-4]
   1182c:	bl	11480 <exit@plt>
   11830:	push	{fp, lr}
   11834:	mov	fp, sp
   11838:	sub	sp, sp, #8
   1183c:	movw	r0, #60099	; 0xeac3
   11840:	movt	r0, #1
   11844:	bl	114a4 <gettext@plt>
   11848:	movw	lr, #404	; 0x194
   1184c:	movt	lr, #3
   11850:	ldr	r1, [lr]
   11854:	bl	112c4 <fputs_unlocked@plt>
   11858:	str	r0, [sp, #4]
   1185c:	mov	sp, fp
   11860:	pop	{fp, pc}
   11864:	push	{fp, lr}
   11868:	mov	fp, sp
   1186c:	sub	sp, sp, #96	; 0x60
   11870:	add	r1, sp, #36	; 0x24
   11874:	movw	r2, #60700	; 0xed1c
   11878:	movt	r2, #1
   1187c:	str	r0, [fp, #-4]
   11880:	mov	r0, r1
   11884:	str	r1, [sp, #20]
   11888:	mov	r1, r2
   1188c:	movw	r2, #56	; 0x38
   11890:	bl	11354 <memcpy@plt>
   11894:	ldr	r0, [fp, #-4]
   11898:	str	r0, [sp, #32]
   1189c:	ldr	r0, [sp, #20]
   118a0:	str	r0, [sp, #28]
   118a4:	ldr	r0, [sp, #28]
   118a8:	ldr	r0, [r0]
   118ac:	movw	r1, #0
   118b0:	cmp	r0, r1
   118b4:	movw	r0, #0
   118b8:	str	r0, [sp, #16]
   118bc:	beq	118e8 <__assert_fail@plt+0x30c>
   118c0:	ldr	r0, [fp, #-4]
   118c4:	ldr	r1, [sp, #28]
   118c8:	ldr	r1, [r1]
   118cc:	bl	112dc <strcmp@plt>
   118d0:	cmp	r0, #0
   118d4:	movw	r0, #0
   118d8:	moveq	r0, #1
   118dc:	mvn	r1, #0
   118e0:	eor	r0, r0, r1
   118e4:	str	r0, [sp, #16]
   118e8:	ldr	r0, [sp, #16]
   118ec:	tst	r0, #1
   118f0:	beq	11904 <__assert_fail@plt+0x328>
   118f4:	ldr	r0, [sp, #28]
   118f8:	add	r0, r0, #8
   118fc:	str	r0, [sp, #28]
   11900:	b	118a4 <__assert_fail@plt+0x2c8>
   11904:	ldr	r0, [sp, #28]
   11908:	ldr	r0, [r0, #4]
   1190c:	movw	r1, #0
   11910:	cmp	r0, r1
   11914:	beq	11924 <__assert_fail@plt+0x348>
   11918:	ldr	r0, [sp, #28]
   1191c:	ldr	r0, [r0, #4]
   11920:	str	r0, [sp, #32]
   11924:	movw	r0, #60250	; 0xeb5a
   11928:	movt	r0, #1
   1192c:	bl	114a4 <gettext@plt>
   11930:	movw	r1, #59734	; 0xe956
   11934:	movt	r1, #1
   11938:	movw	r2, #60273	; 0xeb71
   1193c:	movt	r2, #1
   11940:	bl	112f4 <printf@plt>
   11944:	movw	r1, #5
   11948:	str	r0, [sp, #12]
   1194c:	mov	r0, r1
   11950:	movw	r1, #0
   11954:	bl	1154c <setlocale@plt>
   11958:	str	r0, [sp, #24]
   1195c:	ldr	r0, [sp, #24]
   11960:	movw	r1, #0
   11964:	cmp	r0, r1
   11968:	beq	119a8 <__assert_fail@plt+0x3cc>
   1196c:	ldr	r0, [sp, #24]
   11970:	movw	r1, #60313	; 0xeb99
   11974:	movt	r1, #1
   11978:	movw	r2, #3
   1197c:	bl	115ac <strncmp@plt>
   11980:	cmp	r0, #0
   11984:	beq	119a8 <__assert_fail@plt+0x3cc>
   11988:	movw	r0, #60317	; 0xeb9d
   1198c:	movt	r0, #1
   11990:	bl	114a4 <gettext@plt>
   11994:	movw	lr, #404	; 0x194
   11998:	movt	lr, #3
   1199c:	ldr	r1, [lr]
   119a0:	bl	112c4 <fputs_unlocked@plt>
   119a4:	str	r0, [sp, #8]
   119a8:	movw	r0, #60388	; 0xebe4
   119ac:	movt	r0, #1
   119b0:	bl	114a4 <gettext@plt>
   119b4:	ldr	r2, [fp, #-4]
   119b8:	movw	r1, #60273	; 0xeb71
   119bc:	movt	r1, #1
   119c0:	bl	112f4 <printf@plt>
   119c4:	movw	r1, #60415	; 0xebff
   119c8:	movt	r1, #1
   119cc:	str	r0, [sp, #4]
   119d0:	mov	r0, r1
   119d4:	bl	114a4 <gettext@plt>
   119d8:	ldr	r1, [sp, #32]
   119dc:	ldr	r2, [sp, #32]
   119e0:	ldr	lr, [fp, #-4]
   119e4:	cmp	r2, lr
   119e8:	movw	r2, #0
   119ec:	moveq	r2, #1
   119f0:	tst	r2, #1
   119f4:	movw	r2, #60465	; 0xec31
   119f8:	movt	r2, #1
   119fc:	movw	lr, #60183	; 0xeb17
   11a00:	movt	lr, #1
   11a04:	movne	r2, lr
   11a08:	bl	112f4 <printf@plt>
   11a0c:	str	r0, [sp]
   11a10:	mov	sp, fp
   11a14:	pop	{fp, pc}
   11a18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11a1c:	add	fp, sp, #24
   11a20:	sub	sp, sp, #536	; 0x218
   11a24:	mov	r2, #0
   11a28:	str	r2, [fp, #-28]	; 0xffffffe4
   11a2c:	str	r0, [fp, #-32]	; 0xffffffe0
   11a30:	str	r1, [fp, #-36]	; 0xffffffdc
   11a34:	str	r2, [fp, #-56]	; 0xffffffc8
   11a38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11a3c:	ldr	r0, [r0]
   11a40:	str	r2, [sp, #216]	; 0xd8
   11a44:	bl	14dd8 <__assert_fail@plt+0x37fc>
   11a48:	movw	r1, #60465	; 0xec31
   11a4c:	movt	r1, #1
   11a50:	mov	r0, #6
   11a54:	bl	1154c <setlocale@plt>
   11a58:	movw	r1, #59738	; 0xe95a
   11a5c:	movt	r1, #1
   11a60:	movw	r2, #59688	; 0xe928
   11a64:	movt	r2, #1
   11a68:	str	r0, [sp, #212]	; 0xd4
   11a6c:	mov	r0, r1
   11a70:	str	r1, [sp, #208]	; 0xd0
   11a74:	mov	r1, r2
   11a78:	bl	1157c <bindtextdomain@plt>
   11a7c:	ldr	r1, [sp, #208]	; 0xd0
   11a80:	str	r0, [sp, #204]	; 0xcc
   11a84:	mov	r0, r1
   11a88:	bl	11390 <textdomain@plt>
   11a8c:	movw	r1, #17432	; 0x4418
   11a90:	movt	r1, #1
   11a94:	str	r0, [sp, #200]	; 0xc8
   11a98:	mov	r0, r1
   11a9c:	bl	1e4f4 <_obstack_memory_used@@Base+0x225c>
   11aa0:	str	r0, [sp, #196]	; 0xc4
   11aa4:	bl	114d4 <getpagesize@plt>
   11aa8:	movw	r1, #416	; 0x1a0
   11aac:	movt	r1, #3
   11ab0:	str	r0, [r1]
   11ab4:	movw	r0, #404	; 0x194
   11ab8:	movt	r0, #3
   11abc:	ldr	r0, [r0]
   11ac0:	mov	r2, #1
   11ac4:	ldr	r1, [sp, #216]	; 0xd8
   11ac8:	ldr	r3, [sp, #216]	; 0xd8
   11acc:	bl	114f8 <setvbuf@plt>
   11ad0:	movw	r1, #59712	; 0xe940
   11ad4:	movt	r1, #1
   11ad8:	str	r0, [sp, #192]	; 0xc0
   11adc:	mov	r0, r1
   11ae0:	bl	11420 <getenv@plt>
   11ae4:	cmp	r0, #0
   11ae8:	movwne	r0, #1
   11aec:	movw	r1, #420	; 0x1a4
   11af0:	movt	r1, #3
   11af4:	strb	r0, [r1]
   11af8:	movw	r0, #421	; 0x1a5
   11afc:	movt	r0, #3
   11b00:	ldr	r1, [sp, #216]	; 0xd8
   11b04:	strb	r1, [r0]
   11b08:	movw	r0, #422	; 0x1a6
   11b0c:	movt	r0, #3
   11b10:	strb	r1, [r0]
   11b14:	movw	r0, #423	; 0x1a7
   11b18:	movt	r0, #3
   11b1c:	strb	r1, [r0]
   11b20:	movw	r0, #424	; 0x1a8
   11b24:	movt	r0, #3
   11b28:	strb	r1, [r0]
   11b2c:	movw	r0, #425	; 0x1a9
   11b30:	movt	r0, #3
   11b34:	strb	r1, [r0]
   11b38:	movw	r0, #432	; 0x1b0
   11b3c:	movt	r0, #3
   11b40:	str	r1, [r0, #4]
   11b44:	str	r1, [r0]
   11b48:	movw	r0, #440	; 0x1b8
   11b4c:	movt	r0, #3
   11b50:	str	r1, [r0, #4]
   11b54:	str	r1, [r0]
   11b58:	movw	r0, #448	; 0x1c0
   11b5c:	movt	r0, #3
   11b60:	str	r1, [r0, #4]
   11b64:	str	r1, [r0]
   11b68:	movw	r0, #456	; 0x1c8
   11b6c:	movt	r0, #3
   11b70:	str	r1, [r0, #4]
   11b74:	str	r1, [r0]
   11b78:	movw	r0, #464	; 0x1d0
   11b7c:	movt	r0, #3
   11b80:	str	r1, [r0, #4]
   11b84:	str	r1, [r0]
   11b88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11b8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11b90:	movw	r2, #59728	; 0xe950
   11b94:	movt	r2, #1
   11b98:	movw	r3, #60540	; 0xec7c
   11b9c:	movt	r3, #1
   11ba0:	movw	ip, #0
   11ba4:	str	ip, [sp]
   11ba8:	bl	11468 <getopt_long@plt>
   11bac:	str	r0, [fp, #-44]	; 0xffffffd4
   11bb0:	cmn	r0, #1
   11bb4:	beq	11d44 <__assert_fail@plt+0x768>
   11bb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11bbc:	cmn	r0, #3
   11bc0:	str	r0, [sp, #188]	; 0xbc
   11bc4:	beq	11ce4 <__assert_fail@plt+0x708>
   11bc8:	b	11bcc <__assert_fail@plt+0x5f0>
   11bcc:	ldr	r0, [sp, #188]	; 0xbc
   11bd0:	cmn	r0, #2
   11bd4:	beq	11cdc <__assert_fail@plt+0x700>
   11bd8:	b	11bdc <__assert_fail@plt+0x600>
   11bdc:	ldr	r0, [sp, #188]	; 0xbc
   11be0:	cmp	r0, #76	; 0x4c
   11be4:	beq	11ca0 <__assert_fail@plt+0x6c4>
   11be8:	b	11bec <__assert_fail@plt+0x610>
   11bec:	ldr	r0, [sp, #188]	; 0xbc
   11bf0:	cmp	r0, #99	; 0x63
   11bf4:	beq	11c50 <__assert_fail@plt+0x674>
   11bf8:	b	11bfc <__assert_fail@plt+0x620>
   11bfc:	ldr	r0, [sp, #188]	; 0xbc
   11c00:	cmp	r0, #108	; 0x6c
   11c04:	beq	11c78 <__assert_fail@plt+0x69c>
   11c08:	b	11c0c <__assert_fail@plt+0x630>
   11c0c:	ldr	r0, [sp, #188]	; 0xbc
   11c10:	cmp	r0, #109	; 0x6d
   11c14:	beq	11c64 <__assert_fail@plt+0x688>
   11c18:	b	11c1c <__assert_fail@plt+0x640>
   11c1c:	ldr	r0, [sp, #188]	; 0xbc
   11c20:	cmp	r0, #119	; 0x77
   11c24:	beq	11c8c <__assert_fail@plt+0x6b0>
   11c28:	b	11c2c <__assert_fail@plt+0x650>
   11c2c:	ldr	r0, [sp, #188]	; 0xbc
   11c30:	cmp	r0, #256	; 0x100
   11c34:	beq	11cb4 <__assert_fail@plt+0x6d8>
   11c38:	b	11c3c <__assert_fail@plt+0x660>
   11c3c:	movw	r0, #257	; 0x101
   11c40:	ldr	r1, [sp, #188]	; 0xbc
   11c44:	cmp	r1, r0
   11c48:	beq	11cc8 <__assert_fail@plt+0x6ec>
   11c4c:	b	11d38 <__assert_fail@plt+0x75c>
   11c50:	movw	r0, #421	; 0x1a5
   11c54:	movt	r0, #3
   11c58:	movw	r1, #1
   11c5c:	strb	r1, [r0]
   11c60:	b	11d40 <__assert_fail@plt+0x764>
   11c64:	movw	r0, #422	; 0x1a6
   11c68:	movt	r0, #3
   11c6c:	movw	r1, #1
   11c70:	strb	r1, [r0]
   11c74:	b	11d40 <__assert_fail@plt+0x764>
   11c78:	movw	r0, #424	; 0x1a8
   11c7c:	movt	r0, #3
   11c80:	movw	r1, #1
   11c84:	strb	r1, [r0]
   11c88:	b	11d40 <__assert_fail@plt+0x764>
   11c8c:	movw	r0, #423	; 0x1a7
   11c90:	movt	r0, #3
   11c94:	movw	r1, #1
   11c98:	strb	r1, [r0]
   11c9c:	b	11d40 <__assert_fail@plt+0x764>
   11ca0:	movw	r0, #425	; 0x1a9
   11ca4:	movt	r0, #3
   11ca8:	movw	r1, #1
   11cac:	strb	r1, [r0]
   11cb0:	b	11d40 <__assert_fail@plt+0x764>
   11cb4:	movw	r0, #472	; 0x1d8
   11cb8:	movt	r0, #3
   11cbc:	movw	r1, #1
   11cc0:	strb	r1, [r0]
   11cc4:	b	11d40 <__assert_fail@plt+0x764>
   11cc8:	movw	r0, #408	; 0x198
   11ccc:	movt	r0, #3
   11cd0:	ldr	r0, [r0]
   11cd4:	str	r0, [fp, #-56]	; 0xffffffc8
   11cd8:	b	11d40 <__assert_fail@plt+0x764>
   11cdc:	movw	r0, #0
   11ce0:	bl	116d8 <__assert_fail@plt+0xfc>
   11ce4:	movw	r0, #404	; 0x194
   11ce8:	movt	r0, #3
   11cec:	ldr	r0, [r0]
   11cf0:	movw	r1, #300	; 0x12c
   11cf4:	movt	r1, #3
   11cf8:	ldr	r3, [r1]
   11cfc:	movw	r1, #59685	; 0xe925
   11d00:	movt	r1, #1
   11d04:	movw	r2, #59734	; 0xe956
   11d08:	movt	r2, #1
   11d0c:	movw	ip, #59748	; 0xe964
   11d10:	movt	ip, #1
   11d14:	str	ip, [sp]
   11d18:	movw	ip, #59759	; 0xe96f
   11d1c:	movt	ip, #1
   11d20:	str	ip, [sp, #4]
   11d24:	movw	ip, #0
   11d28:	str	ip, [sp, #8]
   11d2c:	bl	18568 <__assert_fail@plt+0x6f8c>
   11d30:	movw	r0, #0
   11d34:	bl	11480 <exit@plt>
   11d38:	movw	r0, #1
   11d3c:	bl	116d8 <__assert_fail@plt+0xfc>
   11d40:	b	11b88 <__assert_fail@plt+0x5ac>
   11d44:	movw	r0, #424	; 0x1a8
   11d48:	movt	r0, #3
   11d4c:	ldrb	r0, [r0]
   11d50:	tst	r0, #1
   11d54:	bne	11dd0 <__assert_fail@plt+0x7f4>
   11d58:	movw	r0, #423	; 0x1a7
   11d5c:	movt	r0, #3
   11d60:	ldrb	r0, [r0]
   11d64:	tst	r0, #1
   11d68:	bne	11dd0 <__assert_fail@plt+0x7f4>
   11d6c:	movw	r0, #422	; 0x1a6
   11d70:	movt	r0, #3
   11d74:	ldrb	r0, [r0]
   11d78:	tst	r0, #1
   11d7c:	bne	11dd0 <__assert_fail@plt+0x7f4>
   11d80:	movw	r0, #421	; 0x1a5
   11d84:	movt	r0, #3
   11d88:	ldrb	r0, [r0]
   11d8c:	tst	r0, #1
   11d90:	bne	11dd0 <__assert_fail@plt+0x7f4>
   11d94:	movw	r0, #425	; 0x1a9
   11d98:	movt	r0, #3
   11d9c:	ldrb	r0, [r0]
   11da0:	tst	r0, #1
   11da4:	bne	11dd0 <__assert_fail@plt+0x7f4>
   11da8:	movw	r0, #421	; 0x1a5
   11dac:	movt	r0, #3
   11db0:	movw	r1, #1
   11db4:	strb	r1, [r0]
   11db8:	movw	r0, #423	; 0x1a7
   11dbc:	movt	r0, #3
   11dc0:	strb	r1, [r0]
   11dc4:	movw	r0, #424	; 0x1a8
   11dc8:	movt	r0, #3
   11dcc:	strb	r1, [r0]
   11dd0:	movw	r0, #0
   11dd4:	strb	r0, [fp, #-205]	; 0xffffff33
   11dd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ddc:	movw	r1, #0
   11de0:	cmp	r0, r1
   11de4:	beq	12068 <__assert_fail@plt+0xa8c>
   11de8:	movw	r0, #384	; 0x180
   11dec:	movt	r0, #3
   11df0:	ldr	r0, [r0]
   11df4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11df8:	cmp	r0, r1
   11dfc:	bge	11e98 <__assert_fail@plt+0x8bc>
   11e00:	movw	r0, #59775	; 0xe97f
   11e04:	movt	r0, #1
   11e08:	bl	114a4 <gettext@plt>
   11e0c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   11e10:	movw	r1, #384	; 0x180
   11e14:	movt	r1, #3
   11e18:	ldr	r1, [r1]
   11e1c:	add	r1, lr, r1, lsl #2
   11e20:	ldr	r1, [r1]
   11e24:	movw	lr, #4
   11e28:	str	r0, [sp, #184]	; 0xb8
   11e2c:	mov	r0, lr
   11e30:	bl	1709c <__assert_fail@plt+0x5ac0>
   11e34:	movw	r1, #0
   11e38:	str	r0, [sp, #180]	; 0xb4
   11e3c:	mov	r0, r1
   11e40:	ldr	r2, [sp, #184]	; 0xb8
   11e44:	ldr	r3, [sp, #180]	; 0xb4
   11e48:	bl	11408 <error@plt>
   11e4c:	movw	r0, #392	; 0x188
   11e50:	movt	r0, #3
   11e54:	ldr	r0, [r0]
   11e58:	movw	r1, #59792	; 0xe990
   11e5c:	movt	r1, #1
   11e60:	str	r0, [sp, #176]	; 0xb0
   11e64:	mov	r0, r1
   11e68:	bl	114a4 <gettext@plt>
   11e6c:	ldr	r1, [sp, #176]	; 0xb0
   11e70:	str	r0, [sp, #172]	; 0xac
   11e74:	mov	r0, r1
   11e78:	movw	r1, #61100	; 0xeeac
   11e7c:	movt	r1, #1
   11e80:	ldr	r2, [sp, #172]	; 0xac
   11e84:	bl	114c8 <fprintf@plt>
   11e88:	movw	r1, #1
   11e8c:	str	r0, [sp, #168]	; 0xa8
   11e90:	mov	r0, r1
   11e94:	bl	116d8 <__assert_fail@plt+0xfc>
   11e98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11e9c:	movw	r1, #60894	; 0xedde
   11ea0:	movt	r1, #1
   11ea4:	bl	112dc <strcmp@plt>
   11ea8:	cmp	r0, #0
   11eac:	bne	11ec4 <__assert_fail@plt+0x8e8>
   11eb0:	movw	r0, #400	; 0x190
   11eb4:	movt	r0, #3
   11eb8:	ldr	r0, [r0]
   11ebc:	str	r0, [fp, #-216]	; 0xffffff28
   11ec0:	b	11f34 <__assert_fail@plt+0x958>
   11ec4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11ec8:	movw	r1, #59915	; 0xea0b
   11ecc:	movt	r1, #1
   11ed0:	bl	11570 <fopen64@plt>
   11ed4:	str	r0, [fp, #-216]	; 0xffffff28
   11ed8:	ldr	r0, [fp, #-216]	; 0xffffff28
   11edc:	movw	r1, #0
   11ee0:	cmp	r0, r1
   11ee4:	bne	11f30 <__assert_fail@plt+0x954>
   11ee8:	bl	114e0 <__errno_location@plt>
   11eec:	ldr	r1, [r0]
   11ef0:	movw	r0, #59844	; 0xe9c4
   11ef4:	movt	r0, #1
   11ef8:	str	r1, [sp, #164]	; 0xa4
   11efc:	bl	114a4 <gettext@plt>
   11f00:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11f04:	movw	lr, #4
   11f08:	str	r0, [sp, #160]	; 0xa0
   11f0c:	mov	r0, lr
   11f10:	bl	1709c <__assert_fail@plt+0x5ac0>
   11f14:	movw	r1, #1
   11f18:	str	r0, [sp, #156]	; 0x9c
   11f1c:	mov	r0, r1
   11f20:	ldr	r1, [sp, #164]	; 0xa4
   11f24:	ldr	r2, [sp, #160]	; 0xa0
   11f28:	ldr	r3, [sp, #156]	; 0x9c
   11f2c:	bl	11408 <error@plt>
   11f30:	b	11f34 <__assert_fail@plt+0x958>
   11f34:	ldr	r0, [fp, #-216]	; 0xffffff28
   11f38:	bl	11528 <fileno@plt>
   11f3c:	add	r1, sp, #240	; 0xf0
   11f40:	bl	1e51c <_obstack_memory_used@@Base+0x2284>
   11f44:	cmp	r0, #0
   11f48:	bne	1204c <__assert_fail@plt+0xa70>
   11f4c:	ldr	r0, [sp, #256]	; 0x100
   11f50:	and	r0, r0, #61440	; 0xf000
   11f54:	cmp	r0, #32768	; 0x8000
   11f58:	bne	1204c <__assert_fail@plt+0xa70>
   11f5c:	ldr	r0, [sp, #288]	; 0x120
   11f60:	ldr	r1, [sp, #292]	; 0x124
   11f64:	bl	1e1e8 <_obstack_memory_used@@Base+0x1f50>
   11f68:	vmov	d16, r0, r1
   11f6c:	vstr	d16, [sp, #144]	; 0x90
   11f70:	bl	14d00 <__assert_fail@plt+0x3724>
   11f74:	vldr	d16, [pc, #900]	; 12300 <__assert_fail@plt+0xd24>
   11f78:	vmov.f64	d17, #0	; 0x40000000  2.0
   11f7c:	vdiv.f64	d17, d0, d17
   11f80:	vcmpe.f64	d16, d17
   11f84:	vmrs	APSR_nzcv, fpscr
   11f88:	bpl	11f98 <__assert_fail@plt+0x9bc>
   11f8c:	vldr	d16, [pc, #876]	; 12300 <__assert_fail@plt+0xd24>
   11f90:	vstr	d16, [sp, #136]	; 0x88
   11f94:	b	11fa8 <__assert_fail@plt+0x9cc>
   11f98:	bl	14d00 <__assert_fail@plt+0x3724>
   11f9c:	vmov.f64	d16, #0	; 0x40000000  2.0
   11fa0:	vdiv.f64	d16, d0, d16
   11fa4:	vstr	d16, [sp, #136]	; 0x88
   11fa8:	vldr	d16, [sp, #136]	; 0x88
   11fac:	vldr	d17, [sp, #144]	; 0x90
   11fb0:	vcmpe.f64	d17, d16
   11fb4:	vmrs	APSR_nzcv, fpscr
   11fb8:	bhi	1204c <__assert_fail@plt+0xa70>
   11fbc:	movw	r0, #1
   11fc0:	strb	r0, [fp, #-205]	; 0xffffff33
   11fc4:	sub	r0, fp, #204	; 0xcc
   11fc8:	bl	1756c <__assert_fail@plt+0x5f90>
   11fcc:	ldr	r0, [fp, #-216]	; 0xffffff28
   11fd0:	sub	r1, fp, #204	; 0xcc
   11fd4:	bl	1776c <__assert_fail@plt+0x6190>
   11fd8:	tst	r0, #1
   11fdc:	beq	11ff0 <__assert_fail@plt+0xa14>
   11fe0:	ldr	r0, [fp, #-216]	; 0xffffff28
   11fe4:	bl	145f8 <__assert_fail@plt+0x301c>
   11fe8:	cmp	r0, #0
   11fec:	beq	1202c <__assert_fail@plt+0xa50>
   11ff0:	movw	r0, #59871	; 0xe9df
   11ff4:	movt	r0, #1
   11ff8:	bl	114a4 <gettext@plt>
   11ffc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   12000:	movw	lr, #4
   12004:	str	r0, [sp, #132]	; 0x84
   12008:	mov	r0, lr
   1200c:	bl	1709c <__assert_fail@plt+0x5ac0>
   12010:	movw	r1, #1
   12014:	str	r0, [sp, #128]	; 0x80
   12018:	mov	r0, r1
   1201c:	movw	r1, #0
   12020:	ldr	r2, [sp, #132]	; 0x84
   12024:	ldr	r3, [sp, #128]	; 0x80
   12028:	bl	11408 <error@plt>
   1202c:	ldr	r0, [fp, #-200]	; 0xffffff38
   12030:	str	r0, [fp, #-52]	; 0xffffffcc
   12034:	ldr	r0, [fp, #-204]	; 0xffffff34
   12038:	str	r0, [fp, #-48]	; 0xffffffd0
   1203c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12040:	bl	14138 <__assert_fail@plt+0x2b5c>
   12044:	str	r0, [fp, #-212]	; 0xffffff2c
   12048:	b	12064 <__assert_fail@plt+0xa88>
   1204c:	movw	r0, #0
   12050:	str	r0, [fp, #-52]	; 0xffffffcc
   12054:	str	r0, [fp, #-48]	; 0xffffffd0
   12058:	ldr	r0, [fp, #-216]	; 0xffffff28
   1205c:	bl	141a8 <__assert_fail@plt+0x2bcc>
   12060:	str	r0, [fp, #-212]	; 0xffffff2c
   12064:	b	12108 <__assert_fail@plt+0xb2c>
   12068:	movw	r0, #384	; 0x180
   1206c:	movt	r0, #3
   12070:	ldr	r0, [r0]
   12074:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12078:	cmp	r0, r1
   1207c:	bge	1209c <__assert_fail@plt+0xac0>
   12080:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12084:	movw	r1, #384	; 0x180
   12088:	movt	r1, #3
   1208c:	ldr	r1, [r1]
   12090:	add	r0, r0, r1, lsl #2
   12094:	str	r0, [sp, #124]	; 0x7c
   12098:	b	120ac <__assert_fail@plt+0xad0>
   1209c:	movw	r0, #476	; 0x1dc
   120a0:	movt	r0, #3
   120a4:	str	r0, [sp, #124]	; 0x7c
   120a8:	b	120ac <__assert_fail@plt+0xad0>
   120ac:	ldr	r0, [sp, #124]	; 0x7c
   120b0:	str	r0, [fp, #-52]	; 0xffffffcc
   120b4:	movw	r0, #384	; 0x180
   120b8:	movt	r0, #3
   120bc:	ldr	r0, [r0]
   120c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   120c4:	cmp	r0, r1
   120c8:	bge	120e8 <__assert_fail@plt+0xb0c>
   120cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   120d0:	movw	r1, #384	; 0x180
   120d4:	movt	r1, #3
   120d8:	ldr	r1, [r1]
   120dc:	sub	r0, r0, r1
   120e0:	str	r0, [sp, #120]	; 0x78
   120e4:	b	120f4 <__assert_fail@plt+0xb18>
   120e8:	movw	r0, #1
   120ec:	str	r0, [sp, #120]	; 0x78
   120f0:	b	120f4 <__assert_fail@plt+0xb18>
   120f4:	ldr	r0, [sp, #120]	; 0x78
   120f8:	str	r0, [fp, #-48]	; 0xffffffd0
   120fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12100:	bl	14138 <__assert_fail@plt+0x2b5c>
   12104:	str	r0, [fp, #-212]	; 0xffffff2c
   12108:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1210c:	movw	r1, #0
   12110:	cmp	r0, r1
   12114:	bne	1211c <__assert_fail@plt+0xb40>
   12118:	bl	1b4d4 <__assert_fail@plt+0x9ef8>
   1211c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12120:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12124:	bl	125e8 <__assert_fail@plt+0x100c>
   12128:	str	r0, [fp, #-60]	; 0xffffffc4
   1212c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12130:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12134:	bl	127ac <__assert_fail@plt+0x11d0>
   12138:	movw	r1, #480	; 0x1e0
   1213c:	movt	r1, #3
   12140:	str	r0, [r1]
   12144:	movw	r0, #1
   12148:	strb	r0, [fp, #-37]	; 0xffffffdb
   1214c:	movw	r0, #0
   12150:	str	r0, [sp, #236]	; 0xec
   12154:	movw	r0, #0
   12158:	strb	r0, [sp, #235]	; 0xeb
   1215c:	ldr	r0, [fp, #-212]	; 0xffffff2c
   12160:	add	r1, sp, #228	; 0xe4
   12164:	bl	14224 <__assert_fail@plt+0x2c48>
   12168:	str	r0, [sp, #224]	; 0xe0
   1216c:	ldr	r0, [sp, #224]	; 0xe0
   12170:	movw	r1, #0
   12174:	cmp	r0, r1
   12178:	bne	12230 <__assert_fail@plt+0xc54>
   1217c:	ldr	r0, [sp, #228]	; 0xe4
   12180:	cmp	r0, #2
   12184:	str	r0, [sp, #116]	; 0x74
   12188:	beq	121b0 <__assert_fail@plt+0xbd4>
   1218c:	b	12190 <__assert_fail@plt+0xbb4>
   12190:	ldr	r0, [sp, #116]	; 0x74
   12194:	cmp	r0, #3
   12198:	beq	1220c <__assert_fail@plt+0xc30>
   1219c:	b	121a0 <__assert_fail@plt+0xbc4>
   121a0:	ldr	r0, [sp, #116]	; 0x74
   121a4:	cmp	r0, #4
   121a8:	beq	121b4 <__assert_fail@plt+0xbd8>
   121ac:	b	12210 <__assert_fail@plt+0xc34>
   121b0:	b	1242c <__assert_fail@plt+0xe50>
   121b4:	bl	114e0 <__errno_location@plt>
   121b8:	ldr	r1, [r0]
   121bc:	movw	r0, #59902	; 0xe9fe
   121c0:	movt	r0, #1
   121c4:	str	r1, [sp, #112]	; 0x70
   121c8:	bl	114a4 <gettext@plt>
   121cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   121d0:	movw	r1, #0
   121d4:	str	r0, [sp, #108]	; 0x6c
   121d8:	mov	r0, r1
   121dc:	movw	r1, #3
   121e0:	bl	171f0 <__assert_fail@plt+0x5c14>
   121e4:	movw	r1, #0
   121e8:	str	r0, [sp, #104]	; 0x68
   121ec:	mov	r0, r1
   121f0:	ldr	r1, [sp, #112]	; 0x70
   121f4:	ldr	r2, [sp, #108]	; 0x6c
   121f8:	ldr	r3, [sp, #104]	; 0x68
   121fc:	bl	11408 <error@plt>
   12200:	movw	r0, #0
   12204:	strb	r0, [fp, #-37]	; 0xffffffdb
   12208:	b	1242c <__assert_fail@plt+0xe50>
   1220c:	bl	1b4d4 <__assert_fail@plt+0x9ef8>
   12210:	movw	r0, #59917	; 0xea0d
   12214:	movt	r0, #1
   12218:	movw	r1, #59957	; 0xea35
   1221c:	movt	r1, #1
   12220:	movw	r2, #938	; 0x3aa
   12224:	movw	r3, #59966	; 0xea3e
   12228:	movt	r3, #1
   1222c:	bl	115dc <__assert_fail@plt>
   12230:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12234:	movw	r1, #0
   12238:	cmp	r0, r1
   1223c:	beq	122b0 <__assert_fail@plt+0xcd4>
   12240:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12244:	movw	r1, #60894	; 0xedde
   12248:	movt	r1, #1
   1224c:	bl	112dc <strcmp@plt>
   12250:	cmp	r0, #0
   12254:	bne	122b0 <__assert_fail@plt+0xcd4>
   12258:	ldr	r0, [sp, #224]	; 0xe0
   1225c:	movw	r1, #60894	; 0xedde
   12260:	movt	r1, #1
   12264:	bl	112dc <strcmp@plt>
   12268:	cmp	r0, #0
   1226c:	bne	122b0 <__assert_fail@plt+0xcd4>
   12270:	movw	r0, #59989	; 0xea55
   12274:	movt	r0, #1
   12278:	bl	114a4 <gettext@plt>
   1227c:	ldr	r1, [sp, #224]	; 0xe0
   12280:	movw	lr, #4
   12284:	str	r0, [sp, #100]	; 0x64
   12288:	mov	r0, lr
   1228c:	bl	1709c <__assert_fail@plt+0x5ac0>
   12290:	movw	r1, #0
   12294:	str	r0, [sp, #96]	; 0x60
   12298:	mov	r0, r1
   1229c:	ldr	r2, [sp, #100]	; 0x64
   122a0:	ldr	r3, [sp, #96]	; 0x60
   122a4:	bl	11408 <error@plt>
   122a8:	movw	r0, #1
   122ac:	strb	r0, [sp, #235]	; 0xeb
   122b0:	ldr	r0, [sp, #224]	; 0xe0
   122b4:	ldrsb	r0, [r0]
   122b8:	cmp	r0, #0
   122bc:	bne	12374 <__assert_fail@plt+0xd98>
   122c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   122c4:	movw	r1, #0
   122c8:	cmp	r0, r1
   122cc:	bne	12308 <__assert_fail@plt+0xd2c>
   122d0:	movw	r0, #60052	; 0xea94
   122d4:	movt	r0, #1
   122d8:	bl	114a4 <gettext@plt>
   122dc:	movw	lr, #0
   122e0:	str	r0, [sp, #92]	; 0x5c
   122e4:	mov	r0, lr
   122e8:	mov	r1, lr
   122ec:	movw	r2, #60792	; 0xed78
   122f0:	movt	r2, #1
   122f4:	ldr	r3, [sp, #92]	; 0x5c
   122f8:	bl	11408 <error@plt>
   122fc:	b	1236c <__assert_fail@plt+0xd90>
   12300:	andeq	r0, r0, r0
   12304:	cmnmi	r4, r0
   12308:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1230c:	bl	14340 <__assert_fail@plt+0x2d64>
   12310:	str	r0, [sp, #220]	; 0xdc
   12314:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12318:	movw	r0, #0
   1231c:	movw	r1, #3
   12320:	bl	171f0 <__assert_fail@plt+0x5c14>
   12324:	ldr	r1, [sp, #220]	; 0xdc
   12328:	movw	r2, #60052	; 0xea94
   1232c:	movt	r2, #1
   12330:	str	r0, [sp, #88]	; 0x58
   12334:	mov	r0, r2
   12338:	str	r1, [sp, #84]	; 0x54
   1233c:	bl	114a4 <gettext@plt>
   12340:	movw	r1, #0
   12344:	str	r0, [sp, #80]	; 0x50
   12348:	mov	r0, r1
   1234c:	movw	r2, #60082	; 0xeab2
   12350:	movt	r2, #1
   12354:	ldr	r3, [sp, #88]	; 0x58
   12358:	ldr	lr, [sp, #84]	; 0x54
   1235c:	str	lr, [sp]
   12360:	ldr	ip, [sp, #80]	; 0x50
   12364:	str	ip, [sp, #4]
   12368:	bl	11408 <error@plt>
   1236c:	movw	r0, #1
   12370:	strb	r0, [sp, #235]	; 0xeb
   12374:	ldrb	r0, [sp, #235]	; 0xeb
   12378:	tst	r0, #1
   1237c:	beq	1238c <__assert_fail@plt+0xdb0>
   12380:	movw	r0, #0
   12384:	strb	r0, [fp, #-37]	; 0xffffffdb
   12388:	b	12400 <__assert_fail@plt+0xe24>
   1238c:	ldr	r0, [sp, #224]	; 0xe0
   12390:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12394:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12398:	cmp	r2, #0
   1239c:	str	r0, [sp, #76]	; 0x4c
   123a0:	str	r1, [sp, #72]	; 0x48
   123a4:	beq	123b4 <__assert_fail@plt+0xdd8>
   123a8:	ldr	r0, [sp, #236]	; 0xec
   123ac:	str	r0, [sp, #68]	; 0x44
   123b0:	b	123c0 <__assert_fail@plt+0xde4>
   123b4:	movw	r0, #0
   123b8:	str	r0, [sp, #68]	; 0x44
   123bc:	b	123c0 <__assert_fail@plt+0xde4>
   123c0:	ldr	r0, [sp, #68]	; 0x44
   123c4:	movw	r1, #112	; 0x70
   123c8:	mul	r0, r0, r1
   123cc:	ldr	r1, [sp, #72]	; 0x48
   123d0:	add	r1, r1, r0
   123d4:	ldr	r0, [sp, #76]	; 0x4c
   123d8:	bl	12924 <__assert_fail@plt+0x1348>
   123dc:	and	r0, r0, #1
   123e0:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   123e4:	and	r1, r1, #1
   123e8:	and	r0, r1, r0
   123ec:	cmp	r0, #0
   123f0:	movw	r0, #0
   123f4:	movne	r0, #1
   123f8:	and	r0, r0, #1
   123fc:	strb	r0, [fp, #-37]	; 0xffffffdb
   12400:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12404:	cmp	r0, #0
   12408:	bne	12418 <__assert_fail@plt+0xe3c>
   1240c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12410:	movw	r1, #1
   12414:	str	r1, [r0]
   12418:	b	1241c <__assert_fail@plt+0xe40>
   1241c:	ldr	r0, [sp, #236]	; 0xec
   12420:	add	r0, r0, #1
   12424:	str	r0, [sp, #236]	; 0xec
   12428:	b	12154 <__assert_fail@plt+0xb78>
   1242c:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   12430:	tst	r0, #1
   12434:	beq	12488 <__assert_fail@plt+0xeac>
   12438:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1243c:	movw	r1, #0
   12440:	cmp	r0, r1
   12444:	bne	12488 <__assert_fail@plt+0xeac>
   12448:	ldr	r0, [fp, #-212]	; 0xffffff2c
   1244c:	bl	14340 <__assert_fail@plt+0x2d64>
   12450:	cmp	r0, #0
   12454:	bne	12488 <__assert_fail@plt+0xeac>
   12458:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1245c:	movw	r0, #0
   12460:	bl	12924 <__assert_fail@plt+0x1348>
   12464:	and	r0, r0, #1
   12468:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   1246c:	and	r1, r1, #1
   12470:	and	r0, r1, r0
   12474:	cmp	r0, #0
   12478:	movw	r0, #0
   1247c:	movne	r0, #1
   12480:	and	r0, r0, #1
   12484:	strb	r0, [fp, #-37]	; 0xffffffdb
   12488:	ldrb	r0, [fp, #-205]	; 0xffffff33
   1248c:	tst	r0, #1
   12490:	beq	1249c <__assert_fail@plt+0xec0>
   12494:	sub	r0, fp, #204	; 0xcc
   12498:	bl	17634 <__assert_fail@plt+0x6058>
   1249c:	ldr	r0, [fp, #-212]	; 0xffffff2c
   124a0:	bl	14340 <__assert_fail@plt+0x2d64>
   124a4:	movw	lr, #1
   124a8:	cmp	lr, r0
   124ac:	bcs	12584 <__assert_fail@plt+0xfa8>
   124b0:	movw	r0, #464	; 0x1d0
   124b4:	movt	r0, #3
   124b8:	ldr	r1, [r0]
   124bc:	ldr	r0, [r0, #4]
   124c0:	movw	r2, #456	; 0x1c8
   124c4:	movt	r2, #3
   124c8:	ldr	r3, [r2]
   124cc:	ldr	r2, [r2, #4]
   124d0:	movw	ip, #448	; 0x1c0
   124d4:	movt	ip, #3
   124d8:	ldr	lr, [ip]
   124dc:	ldr	ip, [ip, #4]
   124e0:	movw	r4, #440	; 0x1b8
   124e4:	movt	r4, #3
   124e8:	ldr	r5, [r4]
   124ec:	ldr	r4, [r4, #4]
   124f0:	movw	r6, #432	; 0x1b0
   124f4:	movt	r6, #3
   124f8:	ldr	r7, [r6]
   124fc:	ldr	r6, [r6, #4]
   12500:	movw	r8, #60093	; 0xeabd
   12504:	movt	r8, #1
   12508:	str	r0, [sp, #64]	; 0x40
   1250c:	mov	r0, r8
   12510:	str	r1, [sp, #60]	; 0x3c
   12514:	str	r6, [sp, #56]	; 0x38
   12518:	str	r3, [sp, #52]	; 0x34
   1251c:	str	r2, [sp, #48]	; 0x30
   12520:	str	lr, [sp, #44]	; 0x2c
   12524:	str	ip, [sp, #40]	; 0x28
   12528:	str	r5, [sp, #36]	; 0x24
   1252c:	str	r4, [sp, #32]
   12530:	str	r7, [sp, #28]
   12534:	bl	114a4 <gettext@plt>
   12538:	mov	r1, sp
   1253c:	str	r0, [r1, #24]
   12540:	ldr	r0, [sp, #56]	; 0x38
   12544:	str	r0, [r1, #20]
   12548:	ldr	r2, [sp, #28]
   1254c:	str	r2, [r1, #16]
   12550:	ldr	r3, [sp, #32]
   12554:	str	r3, [r1, #12]
   12558:	ldr	ip, [sp, #36]	; 0x24
   1255c:	str	ip, [r1, #8]
   12560:	ldr	lr, [sp, #40]	; 0x28
   12564:	str	lr, [r1, #4]
   12568:	ldr	r4, [sp, #44]	; 0x2c
   1256c:	str	r4, [r1]
   12570:	ldr	r0, [sp, #60]	; 0x3c
   12574:	ldr	r1, [sp, #64]	; 0x40
   12578:	ldr	r2, [sp, #52]	; 0x34
   1257c:	ldr	r3, [sp, #48]	; 0x30
   12580:	bl	12abc <__assert_fail@plt+0x14e0>
   12584:	ldr	r0, [fp, #-212]	; 0xffffff2c
   12588:	bl	14390 <__assert_fail@plt+0x2db4>
   1258c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12590:	bl	14794 <__assert_fail@plt+0x31b8>
   12594:	movw	r0, #484	; 0x1e4
   12598:	movt	r0, #3
   1259c:	ldrb	r0, [r0]
   125a0:	tst	r0, #1
   125a4:	beq	125d0 <__assert_fail@plt+0xff4>
   125a8:	movw	r0, #0
   125ac:	bl	115c4 <close@plt>
   125b0:	cmp	r0, #0
   125b4:	beq	125d0 <__assert_fail@plt+0xff4>
   125b8:	bl	114e0 <__errno_location@plt>
   125bc:	ldr	r1, [r0]
   125c0:	movw	r0, #1
   125c4:	movw	r2, #60894	; 0xedde
   125c8:	movt	r2, #1
   125cc:	bl	11408 <error@plt>
   125d0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   125d4:	tst	r0, #1
   125d8:	movw	r0, #0
   125dc:	moveq	r0, #1
   125e0:	sub	sp, fp, #24
   125e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   125e8:	push	{fp, lr}
   125ec:	mov	fp, sp
   125f0:	sub	sp, sp, #24
   125f4:	str	r0, [fp, #-4]
   125f8:	str	r1, [fp, #-8]
   125fc:	ldr	r0, [fp, #-4]
   12600:	cmp	r0, #0
   12604:	beq	12614 <__assert_fail@plt+0x1038>
   12608:	ldr	r0, [fp, #-4]
   1260c:	str	r0, [sp, #4]
   12610:	b	12620 <__assert_fail@plt+0x1044>
   12614:	movw	r0, #1
   12618:	str	r0, [sp, #4]
   1261c:	b	12620 <__assert_fail@plt+0x1044>
   12620:	ldr	r0, [sp, #4]
   12624:	movw	r1, #112	; 0x70
   12628:	bl	18850 <__assert_fail@plt+0x7274>
   1262c:	str	r0, [sp, #12]
   12630:	ldr	r0, [fp, #-4]
   12634:	cmp	r0, #0
   12638:	beq	126b0 <__assert_fail@plt+0x10d4>
   1263c:	ldr	r0, [fp, #-4]
   12640:	cmp	r0, #1
   12644:	bne	126c0 <__assert_fail@plt+0x10e4>
   12648:	movw	r0, #424	; 0x1a8
   1264c:	movt	r0, #3
   12650:	ldrb	r0, [r0]
   12654:	and	r0, r0, #1
   12658:	movw	r1, #423	; 0x1a7
   1265c:	movt	r1, #3
   12660:	ldrb	r1, [r1]
   12664:	and	r1, r1, #1
   12668:	add	r0, r0, r1
   1266c:	movw	r1, #422	; 0x1a6
   12670:	movt	r1, #3
   12674:	ldrb	r1, [r1]
   12678:	and	r1, r1, #1
   1267c:	add	r0, r0, r1
   12680:	movw	r1, #421	; 0x1a5
   12684:	movt	r1, #3
   12688:	ldrb	r1, [r1]
   1268c:	and	r1, r1, #1
   12690:	add	r0, r0, r1
   12694:	movw	r1, #425	; 0x1a9
   12698:	movt	r1, #3
   1269c:	ldrb	r1, [r1]
   126a0:	and	r1, r1, #1
   126a4:	add	r0, r0, r1
   126a8:	cmp	r0, #1
   126ac:	bne	126c0 <__assert_fail@plt+0x10e4>
   126b0:	ldr	r0, [sp, #12]
   126b4:	movw	r1, #1
   126b8:	str	r1, [r0]
   126bc:	b	127a0 <__assert_fail@plt+0x11c4>
   126c0:	movw	r0, #0
   126c4:	str	r0, [sp, #8]
   126c8:	ldr	r0, [sp, #8]
   126cc:	ldr	r1, [fp, #-4]
   126d0:	cmp	r0, r1
   126d4:	bcs	1279c <__assert_fail@plt+0x11c0>
   126d8:	ldr	r0, [fp, #-8]
   126dc:	ldr	r1, [sp, #8]
   126e0:	add	r0, r0, r1, lsl #2
   126e4:	ldr	r0, [r0]
   126e8:	movw	r1, #0
   126ec:	cmp	r0, r1
   126f0:	beq	12718 <__assert_fail@plt+0x113c>
   126f4:	ldr	r0, [fp, #-8]
   126f8:	ldr	r1, [sp, #8]
   126fc:	add	r0, r0, r1, lsl #2
   12700:	ldr	r0, [r0]
   12704:	movw	r1, #60894	; 0xedde
   12708:	movt	r1, #1
   1270c:	bl	112dc <strcmp@plt>
   12710:	cmp	r0, #0
   12714:	bne	12740 <__assert_fail@plt+0x1164>
   12718:	ldr	r0, [sp, #12]
   1271c:	ldr	r1, [sp, #8]
   12720:	movw	r2, #112	; 0x70
   12724:	mul	r1, r1, r2
   12728:	add	r0, r0, r1
   1272c:	add	r1, r0, #8
   12730:	movw	r0, #0
   12734:	bl	1e51c <_obstack_memory_used@@Base+0x2284>
   12738:	str	r0, [sp]
   1273c:	b	12770 <__assert_fail@plt+0x1194>
   12740:	ldr	r0, [fp, #-8]
   12744:	ldr	r1, [sp, #8]
   12748:	add	r0, r0, r1, lsl #2
   1274c:	ldr	r0, [r0]
   12750:	ldr	r1, [sp, #12]
   12754:	ldr	r2, [sp, #8]
   12758:	movw	r3, #112	; 0x70
   1275c:	mul	r2, r2, r3
   12760:	add	r1, r1, r2
   12764:	add	r1, r1, #8
   12768:	bl	1e50c <_obstack_memory_used@@Base+0x2274>
   1276c:	str	r0, [sp]
   12770:	ldr	r0, [sp]
   12774:	ldr	r1, [sp, #12]
   12778:	ldr	r2, [sp, #8]
   1277c:	movw	r3, #112	; 0x70
   12780:	mul	r2, r2, r3
   12784:	add	r1, r1, r2
   12788:	str	r0, [r1]
   1278c:	ldr	r0, [sp, #8]
   12790:	add	r0, r0, #1
   12794:	str	r0, [sp, #8]
   12798:	b	126c8 <__assert_fail@plt+0x10ec>
   1279c:	b	127a0 <__assert_fail@plt+0x11c4>
   127a0:	ldr	r0, [sp, #12]
   127a4:	mov	sp, fp
   127a8:	pop	{fp, pc}
   127ac:	push	{fp, lr}
   127b0:	mov	fp, sp
   127b4:	sub	sp, sp, #40	; 0x28
   127b8:	str	r0, [fp, #-4]
   127bc:	str	r1, [fp, #-8]
   127c0:	movw	r0, #1
   127c4:	str	r0, [fp, #-12]
   127c8:	ldr	r0, [fp, #-4]
   127cc:	movw	r1, #0
   127d0:	cmp	r1, r0
   127d4:	bcs	12918 <__assert_fail@plt+0x133c>
   127d8:	ldr	r0, [fp, #-8]
   127dc:	ldr	r0, [r0]
   127e0:	cmp	r0, #0
   127e4:	bgt	12918 <__assert_fail@plt+0x133c>
   127e8:	mov	r0, #1
   127ec:	str	r0, [fp, #-16]
   127f0:	mov	r0, #0
   127f4:	str	r0, [sp, #20]
   127f8:	str	r0, [sp, #16]
   127fc:	movw	r0, #0
   12800:	str	r0, [sp, #12]
   12804:	ldr	r0, [sp, #12]
   12808:	ldr	r1, [fp, #-4]
   1280c:	cmp	r0, r1
   12810:	bcs	128ac <__assert_fail@plt+0x12d0>
   12814:	ldr	r0, [fp, #-8]
   12818:	ldr	r1, [sp, #12]
   1281c:	movw	r2, #112	; 0x70
   12820:	mul	r1, r1, r2
   12824:	add	r0, r0, r1
   12828:	ldr	r0, [r0]
   1282c:	cmp	r0, #0
   12830:	bne	12898 <__assert_fail@plt+0x12bc>
   12834:	ldr	r0, [fp, #-8]
   12838:	ldr	r1, [sp, #12]
   1283c:	movw	r2, #112	; 0x70
   12840:	mul	r1, r1, r2
   12844:	add	r0, r0, r1
   12848:	ldr	r0, [r0, #24]
   1284c:	and	r0, r0, #61440	; 0xf000
   12850:	cmp	r0, #32768	; 0x8000
   12854:	bne	1288c <__assert_fail@plt+0x12b0>
   12858:	ldr	r0, [fp, #-8]
   1285c:	ldr	r1, [sp, #12]
   12860:	rsb	r1, r1, r1, lsl #3
   12864:	add	r0, r0, r1, lsl #4
   12868:	ldr	r1, [r0, #56]	; 0x38
   1286c:	ldr	r0, [r0, #60]	; 0x3c
   12870:	ldr	r2, [sp, #16]
   12874:	ldr	r3, [sp, #20]
   12878:	adds	r1, r2, r1
   1287c:	adc	r0, r3, r0
   12880:	str	r1, [sp, #16]
   12884:	str	r0, [sp, #20]
   12888:	b	12894 <__assert_fail@plt+0x12b8>
   1288c:	movw	r0, #7
   12890:	str	r0, [fp, #-16]
   12894:	b	12898 <__assert_fail@plt+0x12bc>
   12898:	b	1289c <__assert_fail@plt+0x12c0>
   1289c:	ldr	r0, [sp, #12]
   128a0:	add	r0, r0, #1
   128a4:	str	r0, [sp, #12]
   128a8:	b	12804 <__assert_fail@plt+0x1228>
   128ac:	b	128b0 <__assert_fail@plt+0x12d4>
   128b0:	ldr	r0, [sp, #16]
   128b4:	ldr	r1, [sp, #20]
   128b8:	subs	r0, r0, #10
   128bc:	sbcs	r1, r1, #0
   128c0:	str	r0, [sp, #8]
   128c4:	str	r1, [sp, #4]
   128c8:	bcc	128fc <__assert_fail@plt+0x1320>
   128cc:	b	128d0 <__assert_fail@plt+0x12f4>
   128d0:	ldr	r0, [fp, #-12]
   128d4:	add	r0, r0, #1
   128d8:	str	r0, [fp, #-12]
   128dc:	ldr	r0, [sp, #16]
   128e0:	ldr	r1, [sp, #20]
   128e4:	mov	r2, #10
   128e8:	mov	r3, #0
   128ec:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   128f0:	str	r1, [sp, #20]
   128f4:	str	r0, [sp, #16]
   128f8:	b	128b0 <__assert_fail@plt+0x12d4>
   128fc:	ldr	r0, [fp, #-12]
   12900:	ldr	r1, [fp, #-16]
   12904:	cmp	r0, r1
   12908:	bge	12914 <__assert_fail@plt+0x1338>
   1290c:	ldr	r0, [fp, #-16]
   12910:	str	r0, [fp, #-12]
   12914:	b	12918 <__assert_fail@plt+0x133c>
   12918:	ldr	r0, [fp, #-12]
   1291c:	mov	sp, fp
   12920:	pop	{fp, pc}
   12924:	push	{fp, lr}
   12928:	mov	fp, sp
   1292c:	sub	sp, sp, #48	; 0x30
   12930:	str	r0, [fp, #-8]
   12934:	str	r1, [fp, #-12]
   12938:	ldr	r0, [fp, #-8]
   1293c:	movw	r1, #0
   12940:	cmp	r0, r1
   12944:	beq	12960 <__assert_fail@plt+0x1384>
   12948:	ldr	r0, [fp, #-8]
   1294c:	movw	r1, #60894	; 0xedde
   12950:	movt	r1, #1
   12954:	bl	112dc <strcmp@plt>
   12958:	cmp	r0, #0
   1295c:	bne	129ac <__assert_fail@plt+0x13d0>
   12960:	movw	r0, #484	; 0x1e4
   12964:	movt	r0, #3
   12968:	movw	r1, #1
   1296c:	strb	r1, [r0]
   12970:	movw	r0, #0
   12974:	str	r0, [sp, #24]
   12978:	ldr	r1, [sp, #24]
   1297c:	bl	1b528 <__assert_fail@plt+0x9f4c>
   12980:	ldr	r1, [fp, #-8]
   12984:	ldr	r2, [fp, #-12]
   12988:	mov	r0, sp
   1298c:	mvn	lr, #0
   12990:	str	lr, [r0, #4]
   12994:	str	lr, [r0]
   12998:	mov	r0, #0
   1299c:	bl	12dac <__assert_fail@plt+0x17d0>
   129a0:	and	r0, r0, #1
   129a4:	strb	r0, [fp, #-1]
   129a8:	b	12aac <__assert_fail@plt+0x14d0>
   129ac:	ldr	r0, [fp, #-8]
   129b0:	movw	r1, #0
   129b4:	bl	11414 <open64@plt>
   129b8:	str	r0, [fp, #-16]
   129bc:	ldr	r0, [fp, #-16]
   129c0:	cmn	r0, #1
   129c4:	bne	12a18 <__assert_fail@plt+0x143c>
   129c8:	bl	114e0 <__errno_location@plt>
   129cc:	ldr	r1, [r0]
   129d0:	ldr	r2, [fp, #-8]
   129d4:	movw	r0, #0
   129d8:	movw	lr, #3
   129dc:	str	r1, [sp, #20]
   129e0:	mov	r1, lr
   129e4:	bl	171f0 <__assert_fail@plt+0x5c14>
   129e8:	movw	r1, #0
   129ec:	str	r0, [sp, #16]
   129f0:	mov	r0, r1
   129f4:	ldr	r1, [sp, #20]
   129f8:	movw	r2, #60792	; 0xed78
   129fc:	movt	r2, #1
   12a00:	ldr	r3, [sp, #16]
   12a04:	bl	11408 <error@plt>
   12a08:	movw	r0, #0
   12a0c:	and	r0, r0, #1
   12a10:	strb	r0, [fp, #-1]
   12a14:	b	12aac <__assert_fail@plt+0x14d0>
   12a18:	ldr	r0, [fp, #-16]
   12a1c:	ldr	r1, [fp, #-8]
   12a20:	ldr	r2, [fp, #-12]
   12a24:	mov	r3, sp
   12a28:	mov	ip, #0
   12a2c:	str	ip, [r3, #4]
   12a30:	str	ip, [r3]
   12a34:	bl	12dac <__assert_fail@plt+0x17d0>
   12a38:	and	r0, r0, #1
   12a3c:	strb	r0, [fp, #-17]	; 0xffffffef
   12a40:	ldr	r0, [fp, #-16]
   12a44:	bl	115c4 <close@plt>
   12a48:	cmp	r0, #0
   12a4c:	beq	12aa0 <__assert_fail@plt+0x14c4>
   12a50:	bl	114e0 <__errno_location@plt>
   12a54:	ldr	r1, [r0]
   12a58:	ldr	r2, [fp, #-8]
   12a5c:	movw	r0, #0
   12a60:	movw	lr, #3
   12a64:	str	r1, [sp, #12]
   12a68:	mov	r1, lr
   12a6c:	bl	171f0 <__assert_fail@plt+0x5c14>
   12a70:	movw	r1, #0
   12a74:	str	r0, [sp, #8]
   12a78:	mov	r0, r1
   12a7c:	ldr	r1, [sp, #12]
   12a80:	movw	r2, #60792	; 0xed78
   12a84:	movt	r2, #1
   12a88:	ldr	r3, [sp, #8]
   12a8c:	bl	11408 <error@plt>
   12a90:	movw	r0, #0
   12a94:	and	r0, r0, #1
   12a98:	strb	r0, [fp, #-1]
   12a9c:	b	12aac <__assert_fail@plt+0x14d0>
   12aa0:	ldrb	r0, [fp, #-17]	; 0xffffffef
   12aa4:	and	r0, r0, #1
   12aa8:	strb	r0, [fp, #-1]
   12aac:	ldrb	r0, [fp, #-1]
   12ab0:	and	r0, r0, #1
   12ab4:	mov	sp, fp
   12ab8:	pop	{fp, pc}
   12abc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ac0:	add	fp, sp, #24
   12ac4:	sub	sp, sp, #168	; 0xa8
   12ac8:	ldr	ip, [fp, #28]
   12acc:	ldr	lr, [fp, #24]
   12ad0:	ldr	r4, [fp, #20]
   12ad4:	ldr	r5, [fp, #16]
   12ad8:	ldr	r6, [fp, #12]
   12adc:	ldr	r7, [fp, #8]
   12ae0:	ldr	r8, [fp, #32]
   12ae4:	movw	r9, #60756	; 0xed54
   12ae8:	movt	r9, #1
   12aec:	add	r9, r9, #1
   12af0:	str	r0, [fp, #-32]	; 0xffffffe0
   12af4:	str	r1, [fp, #-28]	; 0xffffffe4
   12af8:	str	r3, [fp, #-36]	; 0xffffffdc
   12afc:	str	r2, [fp, #-40]	; 0xffffffd8
   12b00:	str	r6, [fp, #-44]	; 0xffffffd4
   12b04:	str	r7, [fp, #-48]	; 0xffffffd0
   12b08:	str	r4, [fp, #-52]	; 0xffffffcc
   12b0c:	str	r5, [fp, #-56]	; 0xffffffc8
   12b10:	str	ip, [fp, #-60]	; 0xffffffc4
   12b14:	str	lr, [fp, #-64]	; 0xffffffc0
   12b18:	str	r9, [fp, #-68]	; 0xffffffbc
   12b1c:	movw	r0, #424	; 0x1a8
   12b20:	movt	r0, #3
   12b24:	ldrb	r0, [r0]
   12b28:	tst	r0, #1
   12b2c:	str	r8, [sp, #96]	; 0x60
   12b30:	beq	12b8c <__assert_fail@plt+0x15b0>
   12b34:	sub	r2, fp, #89	; 0x59
   12b38:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12b3c:	movw	r1, #480	; 0x1e0
   12b40:	movt	r1, #3
   12b44:	ldr	r1, [r1]
   12b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12b4c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   12b50:	str	r0, [sp, #92]	; 0x5c
   12b54:	mov	r0, r3
   12b58:	str	r1, [sp, #88]	; 0x58
   12b5c:	mov	r1, ip
   12b60:	bl	148e0 <__assert_fail@plt+0x3304>
   12b64:	ldr	r1, [sp, #92]	; 0x5c
   12b68:	str	r0, [sp, #84]	; 0x54
   12b6c:	mov	r0, r1
   12b70:	ldr	r1, [sp, #88]	; 0x58
   12b74:	ldr	r2, [sp, #84]	; 0x54
   12b78:	bl	112f4 <printf@plt>
   12b7c:	movw	r1, #60756	; 0xed54
   12b80:	movt	r1, #1
   12b84:	str	r1, [fp, #-68]	; 0xffffffbc
   12b88:	str	r0, [sp, #80]	; 0x50
   12b8c:	movw	r0, #423	; 0x1a7
   12b90:	movt	r0, #3
   12b94:	ldrb	r0, [r0]
   12b98:	tst	r0, #1
   12b9c:	beq	12bf8 <__assert_fail@plt+0x161c>
   12ba0:	sub	r2, fp, #89	; 0x59
   12ba4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12ba8:	movw	r1, #480	; 0x1e0
   12bac:	movt	r1, #3
   12bb0:	ldr	r1, [r1]
   12bb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12bb8:	ldr	ip, [fp, #-36]	; 0xffffffdc
   12bbc:	str	r0, [sp, #76]	; 0x4c
   12bc0:	mov	r0, r3
   12bc4:	str	r1, [sp, #72]	; 0x48
   12bc8:	mov	r1, ip
   12bcc:	bl	148e0 <__assert_fail@plt+0x3304>
   12bd0:	ldr	r1, [sp, #76]	; 0x4c
   12bd4:	str	r0, [sp, #68]	; 0x44
   12bd8:	mov	r0, r1
   12bdc:	ldr	r1, [sp, #72]	; 0x48
   12be0:	ldr	r2, [sp, #68]	; 0x44
   12be4:	bl	112f4 <printf@plt>
   12be8:	movw	r1, #60756	; 0xed54
   12bec:	movt	r1, #1
   12bf0:	str	r1, [fp, #-68]	; 0xffffffbc
   12bf4:	str	r0, [sp, #64]	; 0x40
   12bf8:	movw	r0, #422	; 0x1a6
   12bfc:	movt	r0, #3
   12c00:	ldrb	r0, [r0]
   12c04:	tst	r0, #1
   12c08:	beq	12c64 <__assert_fail@plt+0x1688>
   12c0c:	sub	r2, fp, #89	; 0x59
   12c10:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12c14:	movw	r1, #480	; 0x1e0
   12c18:	movt	r1, #3
   12c1c:	ldr	r1, [r1]
   12c20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12c24:	ldr	ip, [fp, #-44]	; 0xffffffd4
   12c28:	str	r0, [sp, #60]	; 0x3c
   12c2c:	mov	r0, r3
   12c30:	str	r1, [sp, #56]	; 0x38
   12c34:	mov	r1, ip
   12c38:	bl	148e0 <__assert_fail@plt+0x3304>
   12c3c:	ldr	r1, [sp, #60]	; 0x3c
   12c40:	str	r0, [sp, #52]	; 0x34
   12c44:	mov	r0, r1
   12c48:	ldr	r1, [sp, #56]	; 0x38
   12c4c:	ldr	r2, [sp, #52]	; 0x34
   12c50:	bl	112f4 <printf@plt>
   12c54:	movw	r1, #60756	; 0xed54
   12c58:	movt	r1, #1
   12c5c:	str	r1, [fp, #-68]	; 0xffffffbc
   12c60:	str	r0, [sp, #48]	; 0x30
   12c64:	movw	r0, #421	; 0x1a5
   12c68:	movt	r0, #3
   12c6c:	ldrb	r0, [r0]
   12c70:	tst	r0, #1
   12c74:	beq	12cd0 <__assert_fail@plt+0x16f4>
   12c78:	sub	r2, fp, #89	; 0x59
   12c7c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12c80:	movw	r1, #480	; 0x1e0
   12c84:	movt	r1, #3
   12c88:	ldr	r1, [r1]
   12c8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12c90:	ldr	ip, [fp, #-52]	; 0xffffffcc
   12c94:	str	r0, [sp, #44]	; 0x2c
   12c98:	mov	r0, r3
   12c9c:	str	r1, [sp, #40]	; 0x28
   12ca0:	mov	r1, ip
   12ca4:	bl	148e0 <__assert_fail@plt+0x3304>
   12ca8:	ldr	r1, [sp, #44]	; 0x2c
   12cac:	str	r0, [sp, #36]	; 0x24
   12cb0:	mov	r0, r1
   12cb4:	ldr	r1, [sp, #40]	; 0x28
   12cb8:	ldr	r2, [sp, #36]	; 0x24
   12cbc:	bl	112f4 <printf@plt>
   12cc0:	movw	r1, #60756	; 0xed54
   12cc4:	movt	r1, #1
   12cc8:	str	r1, [fp, #-68]	; 0xffffffbc
   12ccc:	str	r0, [sp, #32]
   12cd0:	movw	r0, #425	; 0x1a9
   12cd4:	movt	r0, #3
   12cd8:	ldrb	r0, [r0]
   12cdc:	tst	r0, #1
   12ce0:	beq	12d30 <__assert_fail@plt+0x1754>
   12ce4:	sub	r2, fp, #89	; 0x59
   12ce8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   12cec:	movw	r1, #480	; 0x1e0
   12cf0:	movt	r1, #3
   12cf4:	ldr	r1, [r1]
   12cf8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   12cfc:	ldr	ip, [fp, #-60]	; 0xffffffc4
   12d00:	str	r0, [sp, #28]
   12d04:	mov	r0, r3
   12d08:	str	r1, [sp, #24]
   12d0c:	mov	r1, ip
   12d10:	bl	148e0 <__assert_fail@plt+0x3304>
   12d14:	ldr	r1, [sp, #28]
   12d18:	str	r0, [sp, #20]
   12d1c:	mov	r0, r1
   12d20:	ldr	r1, [sp, #24]
   12d24:	ldr	r2, [sp, #20]
   12d28:	bl	112f4 <printf@plt>
   12d2c:	str	r0, [sp, #16]
   12d30:	ldr	r0, [fp, #32]
   12d34:	movw	r1, #0
   12d38:	cmp	r0, r1
   12d3c:	beq	12d98 <__assert_fail@plt+0x17bc>
   12d40:	ldr	r0, [fp, #32]
   12d44:	movw	r1, #10
   12d48:	bl	114bc <strchr@plt>
   12d4c:	movw	r1, #0
   12d50:	cmp	r0, r1
   12d54:	beq	12d70 <__assert_fail@plt+0x1794>
   12d58:	ldr	r2, [fp, #32]
   12d5c:	movw	r0, #0
   12d60:	movw	r1, #3
   12d64:	bl	171f0 <__assert_fail@plt+0x5c14>
   12d68:	str	r0, [sp, #12]
   12d6c:	b	12d78 <__assert_fail@plt+0x179c>
   12d70:	ldr	r0, [fp, #32]
   12d74:	str	r0, [sp, #12]
   12d78:	ldr	r0, [sp, #12]
   12d7c:	movw	r1, #60791	; 0xed77
   12d80:	movt	r1, #1
   12d84:	str	r0, [sp, #8]
   12d88:	mov	r0, r1
   12d8c:	ldr	r1, [sp, #8]
   12d90:	bl	112f4 <printf@plt>
   12d94:	str	r0, [sp, #4]
   12d98:	movw	r0, #10
   12d9c:	bl	115d0 <putchar_unlocked@plt>
   12da0:	str	r0, [sp]
   12da4:	sub	sp, fp, #24
   12da8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12dac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12db0:	add	fp, sp, #24
   12db4:	sub	sp, sp, #376	; 0x178
   12db8:	sub	sp, sp, #16384	; 0x4000
   12dbc:	ldr	r3, [fp, #12]
   12dc0:	ldr	ip, [fp, #8]
   12dc4:	str	r0, [fp, #-32]	; 0xffffffe0
   12dc8:	str	r1, [fp, #-36]	; 0xffffffdc
   12dcc:	str	r2, [fp, #-40]	; 0xffffffd8
   12dd0:	str	r3, [fp, #-44]	; 0xffffffd4
   12dd4:	str	ip, [fp, #-48]	; 0xffffffd0
   12dd8:	movw	r0, #1
   12ddc:	strb	r0, [fp, #-49]	; 0xffffffcf
   12de0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12de4:	movw	r1, #0
   12de8:	cmp	r0, r1
   12dec:	beq	12dfc <__assert_fail@plt+0x1820>
   12df0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12df4:	str	r0, [sp, #200]	; 0xc8
   12df8:	b	12e0c <__assert_fail@plt+0x1830>
   12dfc:	movw	r0, #60525	; 0xec6d
   12e00:	movt	r0, #1
   12e04:	bl	114a4 <gettext@plt>
   12e08:	str	r0, [sp, #200]	; 0xc8
   12e0c:	ldr	r0, [sp, #200]	; 0xc8
   12e10:	str	r0, [sp, #296]	; 0x128
   12e14:	mov	r0, #0
   12e18:	str	r0, [sp, #308]	; 0x134
   12e1c:	str	r0, [sp, #304]	; 0x130
   12e20:	str	r0, [sp, #316]	; 0x13c
   12e24:	str	r0, [sp, #312]	; 0x138
   12e28:	str	r0, [sp, #324]	; 0x144
   12e2c:	str	r0, [sp, #320]	; 0x140
   12e30:	str	r0, [sp, #332]	; 0x14c
   12e34:	str	r0, [sp, #328]	; 0x148
   12e38:	str	r0, [sp, #340]	; 0x154
   12e3c:	str	r0, [sp, #336]	; 0x150
   12e40:	bl	113d8 <__ctype_get_mb_cur_max@plt>
   12e44:	cmp	r0, #1
   12e48:	bls	12e78 <__assert_fail@plt+0x189c>
   12e4c:	movw	r0, #421	; 0x1a5
   12e50:	movt	r0, #3
   12e54:	ldrb	r0, [r0]
   12e58:	and	r0, r0, #1
   12e5c:	strb	r0, [sp, #303]	; 0x12f
   12e60:	movw	r0, #422	; 0x1a6
   12e64:	movt	r0, #3
   12e68:	ldrb	r0, [r0]
   12e6c:	and	r0, r0, #1
   12e70:	strb	r0, [sp, #302]	; 0x12e
   12e74:	b	12eb8 <__assert_fail@plt+0x18dc>
   12e78:	movw	r0, #421	; 0x1a5
   12e7c:	movt	r0, #3
   12e80:	ldrb	r0, [r0]
   12e84:	tst	r0, #1
   12e88:	movw	r0, #1
   12e8c:	str	r0, [sp, #196]	; 0xc4
   12e90:	bne	12ea4 <__assert_fail@plt+0x18c8>
   12e94:	movw	r0, #422	; 0x1a6
   12e98:	movt	r0, #3
   12e9c:	ldrb	r0, [r0]
   12ea0:	str	r0, [sp, #196]	; 0xc4
   12ea4:	ldr	r0, [sp, #196]	; 0xc4
   12ea8:	and	r0, r0, #1
   12eac:	strb	r0, [sp, #303]	; 0x12f
   12eb0:	movw	r0, #0
   12eb4:	strb	r0, [sp, #302]	; 0x12e
   12eb8:	movw	r0, #423	; 0x1a7
   12ebc:	movt	r0, #3
   12ec0:	ldrb	r0, [r0]
   12ec4:	tst	r0, #1
   12ec8:	movw	r0, #1
   12ecc:	str	r0, [sp, #192]	; 0xc0
   12ed0:	bne	12ee4 <__assert_fail@plt+0x1908>
   12ed4:	movw	r0, #425	; 0x1a9
   12ed8:	movt	r0, #3
   12edc:	ldrb	r0, [r0]
   12ee0:	str	r0, [sp, #192]	; 0xc0
   12ee4:	ldr	r0, [sp, #192]	; 0xc0
   12ee8:	and	r0, r0, #1
   12eec:	strb	r0, [sp, #301]	; 0x12d
   12ef0:	ldrb	r0, [sp, #303]	; 0x12f
   12ef4:	tst	r0, #1
   12ef8:	beq	12f28 <__assert_fail@plt+0x194c>
   12efc:	ldrb	r0, [sp, #302]	; 0x12e
   12f00:	tst	r0, #1
   12f04:	bne	12f28 <__assert_fail@plt+0x194c>
   12f08:	movw	r0, #424	; 0x1a8
   12f0c:	movt	r0, #3
   12f10:	ldrb	r0, [r0]
   12f14:	tst	r0, #1
   12f18:	bne	12f28 <__assert_fail@plt+0x194c>
   12f1c:	ldrb	r0, [sp, #301]	; 0x12d
   12f20:	tst	r0, #1
   12f24:	beq	12f50 <__assert_fail@plt+0x1974>
   12f28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12f2c:	mov	r1, sp
   12f30:	mov	r2, #2
   12f34:	str	r2, [r1, #8]
   12f38:	mov	r2, #0
   12f3c:	str	r2, [r1, #4]
   12f40:	str	r2, [r1]
   12f44:	str	r2, [sp, #188]	; 0xbc
   12f48:	ldr	r3, [sp, #188]	; 0xbc
   12f4c:	bl	14538 <__assert_fail@plt+0x2f5c>
   12f50:	ldrb	r0, [sp, #303]	; 0x12f
   12f54:	tst	r0, #1
   12f58:	beq	132a8 <__assert_fail@plt+0x1ccc>
   12f5c:	ldrb	r0, [sp, #302]	; 0x12e
   12f60:	tst	r0, #1
   12f64:	bne	132a8 <__assert_fail@plt+0x1ccc>
   12f68:	movw	r0, #424	; 0x1a8
   12f6c:	movt	r0, #3
   12f70:	ldrb	r0, [r0]
   12f74:	tst	r0, #1
   12f78:	bne	132a8 <__assert_fail@plt+0x1ccc>
   12f7c:	ldrb	r0, [sp, #301]	; 0x12d
   12f80:	tst	r0, #1
   12f84:	bne	132a8 <__assert_fail@plt+0x1ccc>
   12f88:	movw	r0, #0
   12f8c:	strb	r0, [sp, #295]	; 0x127
   12f90:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f94:	ldr	r0, [r0]
   12f98:	movw	r1, #0
   12f9c:	cmp	r1, r0
   12fa0:	bge	12fbc <__assert_fail@plt+0x19e0>
   12fa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12fa8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12fac:	add	r1, r1, #8
   12fb0:	bl	1e51c <_obstack_memory_used@@Base+0x2284>
   12fb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12fb8:	str	r0, [r1]
   12fbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fc0:	ldr	r0, [r0]
   12fc4:	cmp	r0, #0
   12fc8:	bne	131d4 <__assert_fail@plt+0x1bf8>
   12fcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fd0:	add	r0, r0, #8
   12fd4:	bl	13d70 <__assert_fail@plt+0x2794>
   12fd8:	tst	r0, #1
   12fdc:	beq	131d4 <__assert_fail@plt+0x1bf8>
   12fe0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12fe4:	ldr	r0, [r0, #60]	; 0x3c
   12fe8:	cmp	r0, #0
   12fec:	blt	131d4 <__assert_fail@plt+0x1bf8>
   12ff0:	b	12ff4 <__assert_fail@plt+0x1a18>
   12ff4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12ff8:	ldr	r0, [r0, #56]	; 0x38
   12ffc:	str	r0, [sp, #288]	; 0x120
   13000:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13004:	cmn	r0, #1
   13008:	bgt	13038 <__assert_fail@plt+0x1a5c>
   1300c:	b	13010 <__assert_fail@plt+0x1a34>
   13010:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13014:	mov	r1, sp
   13018:	mov	r2, #1
   1301c:	str	r2, [r1]
   13020:	mov	r1, #0
   13024:	mov	r2, r1
   13028:	mov	r3, r1
   1302c:	bl	113cc <lseek64@plt>
   13030:	str	r1, [fp, #-44]	; 0xffffffd4
   13034:	str	r0, [fp, #-48]	; 0xffffffd0
   13038:	ldr	r0, [sp, #288]	; 0x120
   1303c:	movw	r1, #416	; 0x1a0
   13040:	movt	r1, #3
   13044:	ldr	r1, [r1]
   13048:	udiv	r2, r0, r1
   1304c:	mls	r0, r2, r1, r0
   13050:	cmp	r0, #0
   13054:	beq	130cc <__assert_fail@plt+0x1af0>
   13058:	ldr	r0, [sp, #288]	; 0x120
   1305c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13060:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13064:	subs	r0, r0, r1
   13068:	rscs	r1, r2, #0
   1306c:	str	r0, [sp, #184]	; 0xb8
   13070:	str	r1, [sp, #180]	; 0xb4
   13074:	bge	13090 <__assert_fail@plt+0x1ab4>
   13078:	b	1307c <__assert_fail@plt+0x1aa0>
   1307c:	mov	r0, #0
   13080:	mov	r1, r0
   13084:	str	r1, [sp, #176]	; 0xb0
   13088:	str	r0, [sp, #172]	; 0xac
   1308c:	b	130b0 <__assert_fail@plt+0x1ad4>
   13090:	ldr	r0, [sp, #288]	; 0x120
   13094:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13098:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1309c:	subs	r0, r0, r1
   130a0:	rsc	r1, r2, #0
   130a4:	str	r0, [sp, #176]	; 0xb0
   130a8:	str	r1, [sp, #172]	; 0xac
   130ac:	b	130b0 <__assert_fail@plt+0x1ad4>
   130b0:	ldr	r0, [sp, #172]	; 0xac
   130b4:	ldr	r1, [sp, #176]	; 0xb0
   130b8:	str	r1, [sp, #312]	; 0x138
   130bc:	str	r0, [sp, #316]	; 0x13c
   130c0:	movw	r0, #1
   130c4:	strb	r0, [sp, #295]	; 0x127
   130c8:	b	131d0 <__assert_fail@plt+0x1bf4>
   130cc:	ldr	r0, [sp, #288]	; 0x120
   130d0:	ldr	r1, [sp, #288]	; 0x120
   130d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   130d8:	ldr	r2, [r2, #64]	; 0x40
   130dc:	movw	r3, #0
   130e0:	cmp	r3, r2
   130e4:	str	r0, [sp, #168]	; 0xa8
   130e8:	str	r1, [sp, #164]	; 0xa4
   130ec:	bge	13110 <__assert_fail@plt+0x1b34>
   130f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   130f4:	ldr	r0, [r0, #64]	; 0x40
   130f8:	cmp	r0, #536870912	; 0x20000000
   130fc:	bhi	13110 <__assert_fail@plt+0x1b34>
   13100:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13104:	ldr	r0, [r0, #64]	; 0x40
   13108:	str	r0, [sp, #160]	; 0xa0
   1310c:	b	1311c <__assert_fail@plt+0x1b40>
   13110:	movw	r0, #512	; 0x200
   13114:	str	r0, [sp, #160]	; 0xa0
   13118:	b	1311c <__assert_fail@plt+0x1b40>
   1311c:	ldr	r0, [sp, #160]	; 0xa0
   13120:	add	r0, r0, #1
   13124:	ldr	r1, [sp, #164]	; 0xa4
   13128:	udiv	r2, r1, r0
   1312c:	mul	r0, r2, r0
   13130:	sub	r0, r0, r1
   13134:	ldr	r2, [sp, #168]	; 0xa8
   13138:	add	r0, r2, r0
   1313c:	mov	r3, #0
   13140:	str	r3, [sp, #284]	; 0x11c
   13144:	str	r0, [sp, #280]	; 0x118
   13148:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1314c:	cmp	r0, #0
   13150:	blt	131cc <__assert_fail@plt+0x1bf0>
   13154:	b	13158 <__assert_fail@plt+0x1b7c>
   13158:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1315c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13160:	ldr	r2, [sp, #280]	; 0x118
   13164:	ldr	r3, [sp, #284]	; 0x11c
   13168:	subs	r0, r0, r2
   1316c:	sbcs	r1, r1, r3
   13170:	str	r0, [sp, #156]	; 0x9c
   13174:	str	r1, [sp, #152]	; 0x98
   13178:	bge	131cc <__assert_fail@plt+0x1bf0>
   1317c:	b	13180 <__assert_fail@plt+0x1ba4>
   13180:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13184:	ldr	r2, [sp, #280]	; 0x118
   13188:	ldr	r3, [sp, #284]	; 0x11c
   1318c:	mov	r1, sp
   13190:	mov	ip, #1
   13194:	str	ip, [r1]
   13198:	bl	113cc <lseek64@plt>
   1319c:	cmp	r1, #0
   131a0:	str	r0, [sp, #148]	; 0x94
   131a4:	blt	131cc <__assert_fail@plt+0x1bf0>
   131a8:	b	131ac <__assert_fail@plt+0x1bd0>
   131ac:	ldr	r0, [sp, #280]	; 0x118
   131b0:	ldr	r1, [sp, #284]	; 0x11c
   131b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   131b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   131bc:	subs	r0, r0, r2
   131c0:	sbc	r1, r1, r3
   131c4:	str	r0, [sp, #312]	; 0x138
   131c8:	str	r1, [sp, #316]	; 0x13c
   131cc:	b	131d0 <__assert_fail@plt+0x1bf4>
   131d0:	b	131d4 <__assert_fail@plt+0x1bf8>
   131d4:	ldrb	r0, [sp, #295]	; 0x127
   131d8:	tst	r0, #1
   131dc:	bne	132a4 <__assert_fail@plt+0x1cc8>
   131e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131e4:	mov	r1, sp
   131e8:	mov	r2, #2
   131ec:	str	r2, [r1, #8]
   131f0:	mov	r2, #0
   131f4:	str	r2, [r1, #4]
   131f8:	str	r2, [r1]
   131fc:	str	r2, [sp, #144]	; 0x90
   13200:	ldr	r3, [sp, #144]	; 0x90
   13204:	bl	14538 <__assert_fail@plt+0x2f5c>
   13208:	add	lr, sp, #256	; 0x100
   1320c:	add	r1, lr, #94	; 0x5e
   13210:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13214:	movw	r2, #16384	; 0x4000
   13218:	bl	17d34 <__assert_fail@plt+0x6758>
   1321c:	str	r0, [sp, #344]	; 0x158
   13220:	cmp	r0, #0
   13224:	bls	132a0 <__assert_fail@plt+0x1cc4>
   13228:	ldr	r0, [sp, #344]	; 0x158
   1322c:	cmn	r0, #1
   13230:	bne	13280 <__assert_fail@plt+0x1ca4>
   13234:	bl	114e0 <__errno_location@plt>
   13238:	ldr	r1, [r0]
   1323c:	ldr	r2, [sp, #296]	; 0x128
   13240:	movw	r0, #0
   13244:	movw	lr, #3
   13248:	str	r1, [sp, #140]	; 0x8c
   1324c:	mov	r1, lr
   13250:	bl	171f0 <__assert_fail@plt+0x5c14>
   13254:	movw	r1, #0
   13258:	str	r0, [sp, #136]	; 0x88
   1325c:	mov	r0, r1
   13260:	ldr	r1, [sp, #140]	; 0x8c
   13264:	movw	r2, #60792	; 0xed78
   13268:	movt	r2, #1
   1326c:	ldr	r3, [sp, #136]	; 0x88
   13270:	bl	11408 <error@plt>
   13274:	movw	r0, #0
   13278:	strb	r0, [fp, #-49]	; 0xffffffcf
   1327c:	b	132a0 <__assert_fail@plt+0x1cc4>
   13280:	ldr	r0, [sp, #344]	; 0x158
   13284:	ldr	r1, [sp, #312]	; 0x138
   13288:	ldr	r2, [sp, #316]	; 0x13c
   1328c:	adds	r0, r1, r0
   13290:	adc	r1, r2, #0
   13294:	str	r0, [sp, #312]	; 0x138
   13298:	str	r1, [sp, #316]	; 0x13c
   1329c:	b	13208 <__assert_fail@plt+0x1c2c>
   132a0:	b	132a4 <__assert_fail@plt+0x1cc8>
   132a4:	b	13bf8 <__assert_fail@plt+0x261c>
   132a8:	ldrb	r0, [sp, #302]	; 0x12e
   132ac:	tst	r0, #1
   132b0:	bne	132fc <__assert_fail@plt+0x1d20>
   132b4:	ldrb	r0, [sp, #301]	; 0x12d
   132b8:	tst	r0, #1
   132bc:	bne	132fc <__assert_fail@plt+0x1d20>
   132c0:	movw	r0, #296	; 0x128
   132c4:	movt	r0, #3
   132c8:	ldr	r0, [r0]
   132cc:	ldr	r1, [sp, #296]	; 0x128
   132d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   132d4:	str	r0, [sp, #132]	; 0x84
   132d8:	mov	r0, r1
   132dc:	mov	r1, r2
   132e0:	add	r2, sp, #336	; 0x150
   132e4:	add	r3, sp, #312	; 0x138
   132e8:	ldr	ip, [sp, #132]	; 0x84
   132ec:	blx	ip
   132f0:	and	r0, r0, #1
   132f4:	strb	r0, [fp, #-49]	; 0xffffffcf
   132f8:	b	13bf4 <__assert_fail@plt+0x2618>
   132fc:	bl	113d8 <__ctype_get_mb_cur_max@plt>
   13300:	cmp	r0, #1
   13304:	bls	138a0 <__assert_fail@plt+0x22c4>
   13308:	mov	r0, #0
   1330c:	strb	r0, [sp, #279]	; 0x117
   13310:	str	r0, [sp, #268]	; 0x10c
   13314:	str	r0, [sp, #264]	; 0x108
   13318:	add	r0, sp, #256	; 0x100
   1331c:	movw	r1, #0
   13320:	and	r2, r1, #255	; 0xff
   13324:	str	r1, [sp, #128]	; 0x80
   13328:	mov	r1, r2
   1332c:	movw	r2, #8
   13330:	bl	11504 <memset@plt>
   13334:	ldr	r0, [sp, #128]	; 0x80
   13338:	strb	r0, [sp, #255]	; 0xff
   1333c:	movw	r1, #0
   13340:	str	r1, [sp, #248]	; 0xf8
   13344:	add	lr, sp, #256	; 0x100
   13348:	add	r0, lr, #94	; 0x5e
   1334c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13350:	ldr	r2, [sp, #248]	; 0xf8
   13354:	add	r0, r0, r2
   13358:	ldr	r2, [sp, #248]	; 0xf8
   1335c:	movw	r3, #16384	; 0x4000
   13360:	sub	r2, r3, r2
   13364:	str	r0, [sp, #124]	; 0x7c
   13368:	mov	r0, r1
   1336c:	ldr	r1, [sp, #124]	; 0x7c
   13370:	bl	17d34 <__assert_fail@plt+0x6758>
   13374:	str	r0, [sp, #344]	; 0x158
   13378:	cmp	r0, #0
   1337c:	bls	13844 <__assert_fail@plt+0x2268>
   13380:	ldr	r0, [sp, #344]	; 0x158
   13384:	cmn	r0, #1
   13388:	bne	133d8 <__assert_fail@plt+0x1dfc>
   1338c:	bl	114e0 <__errno_location@plt>
   13390:	ldr	r1, [r0]
   13394:	ldr	r2, [sp, #296]	; 0x128
   13398:	movw	r0, #0
   1339c:	movw	lr, #3
   133a0:	str	r1, [sp, #120]	; 0x78
   133a4:	mov	r1, lr
   133a8:	bl	171f0 <__assert_fail@plt+0x5c14>
   133ac:	movw	r1, #0
   133b0:	str	r0, [sp, #116]	; 0x74
   133b4:	mov	r0, r1
   133b8:	ldr	r1, [sp, #120]	; 0x78
   133bc:	movw	r2, #60792	; 0xed78
   133c0:	movt	r2, #1
   133c4:	ldr	r3, [sp, #116]	; 0x74
   133c8:	bl	11408 <error@plt>
   133cc:	movw	r0, #0
   133d0:	strb	r0, [fp, #-49]	; 0xffffffcf
   133d4:	b	13844 <__assert_fail@plt+0x2268>
   133d8:	add	lr, sp, #256	; 0x100
   133dc:	add	r0, lr, #94	; 0x5e
   133e0:	ldr	r1, [sp, #344]	; 0x158
   133e4:	ldr	r2, [sp, #312]	; 0x138
   133e8:	ldr	r3, [sp, #316]	; 0x13c
   133ec:	adds	r1, r2, r1
   133f0:	adc	r2, r3, #0
   133f4:	str	r1, [sp, #312]	; 0x138
   133f8:	str	r2, [sp, #316]	; 0x13c
   133fc:	str	r0, [sp, #244]	; 0xf4
   13400:	ldr	r0, [sp, #248]	; 0xf8
   13404:	ldr	r1, [sp, #344]	; 0x158
   13408:	add	r0, r1, r0
   1340c:	str	r0, [sp, #344]	; 0x158
   13410:	movw	r0, #1
   13414:	strb	r0, [sp, #227]	; 0xe3
   13418:	ldrb	r0, [sp, #255]	; 0xff
   1341c:	tst	r0, #1
   13420:	bne	13458 <__assert_fail@plt+0x1e7c>
   13424:	ldr	r0, [sp, #244]	; 0xf4
   13428:	ldrb	r0, [r0]
   1342c:	bl	14b34 <__assert_fail@plt+0x3558>
   13430:	tst	r0, #1
   13434:	beq	13458 <__assert_fail@plt+0x1e7c>
   13438:	movw	r0, #1
   1343c:	str	r0, [sp, #228]	; 0xe4
   13440:	ldr	r0, [sp, #244]	; 0xf4
   13444:	ldrb	r0, [r0]
   13448:	str	r0, [sp, #232]	; 0xe8
   1344c:	movw	r0, #0
   13450:	strb	r0, [sp, #227]	; 0xe3
   13454:	b	1350c <__assert_fail@plt+0x1f30>
   13458:	movw	r0, #1
   1345c:	strb	r0, [sp, #255]	; 0xff
   13460:	ldr	r0, [sp, #256]	; 0x100
   13464:	str	r0, [sp, #236]	; 0xec
   13468:	ldr	r0, [sp, #260]	; 0x104
   1346c:	str	r0, [sp, #240]	; 0xf0
   13470:	ldr	r1, [sp, #244]	; 0xf4
   13474:	ldr	r2, [sp, #344]	; 0x158
   13478:	add	r0, sp, #232	; 0xe8
   1347c:	add	r3, sp, #256	; 0x100
   13480:	bl	14b88 <__assert_fail@plt+0x35ac>
   13484:	str	r0, [sp, #228]	; 0xe4
   13488:	ldr	r0, [sp, #228]	; 0xe4
   1348c:	cmn	r0, #2
   13490:	bne	134a8 <__assert_fail@plt+0x1ecc>
   13494:	ldr	r0, [sp, #236]	; 0xec
   13498:	str	r0, [sp, #256]	; 0x100
   1349c:	ldr	r0, [sp, #240]	; 0xf0
   134a0:	str	r0, [sp, #260]	; 0x104
   134a4:	b	137f0 <__assert_fail@plt+0x2214>
   134a8:	ldr	r0, [sp, #228]	; 0xe4
   134ac:	cmn	r0, #1
   134b0:	bne	134d4 <__assert_fail@plt+0x1ef8>
   134b4:	ldr	r0, [sp, #244]	; 0xf4
   134b8:	add	r0, r0, #1
   134bc:	str	r0, [sp, #244]	; 0xf4
   134c0:	ldr	r0, [sp, #344]	; 0x158
   134c4:	mvn	r1, #0
   134c8:	add	r0, r0, r1
   134cc:	str	r0, [sp, #344]	; 0x158
   134d0:	b	137e4 <__assert_fail@plt+0x2208>
   134d4:	add	r0, sp, #256	; 0x100
   134d8:	bl	11360 <mbsinit@plt>
   134dc:	cmp	r0, #0
   134e0:	beq	134ec <__assert_fail@plt+0x1f10>
   134e4:	movw	r0, #0
   134e8:	strb	r0, [sp, #255]	; 0xff
   134ec:	ldr	r0, [sp, #228]	; 0xe4
   134f0:	cmp	r0, #0
   134f4:	bne	13508 <__assert_fail@plt+0x1f2c>
   134f8:	movw	r0, #0
   134fc:	str	r0, [sp, #232]	; 0xe8
   13500:	movw	r0, #1
   13504:	str	r0, [sp, #228]	; 0xe4
   13508:	b	1350c <__assert_fail@plt+0x1f30>
   1350c:	ldr	r0, [sp, #232]	; 0xe8
   13510:	sub	r0, r0, #9
   13514:	cmp	r0, #23
   13518:	str	r0, [sp, #112]	; 0x70
   1351c:	bhi	13664 <__assert_fail@plt+0x2088>
   13520:	add	r0, pc, #8
   13524:	ldr	r1, [sp, #112]	; 0x70
   13528:	ldr	r0, [r0, r1, lsl #2]
   1352c:	mov	pc, r0
   13530:	strdeq	r3, [r1], -r0
   13534:	muleq	r1, r0, r5
   13538:	andeq	r3, r1, r4, lsr r6
   1353c:	andeq	r3, r1, r8, lsr #11
   13540:	andeq	r3, r1, r8, lsr #11
   13544:	andeq	r3, r1, r4, ror #12
   13548:	andeq	r3, r1, r4, ror #12
   1354c:	andeq	r3, r1, r4, ror #12
   13550:	andeq	r3, r1, r4, ror #12
   13554:	andeq	r3, r1, r4, ror #12
   13558:	andeq	r3, r1, r4, ror #12
   1355c:	andeq	r3, r1, r4, ror #12
   13560:	andeq	r3, r1, r4, ror #12
   13564:	andeq	r3, r1, r4, ror #12
   13568:	andeq	r3, r1, r4, ror #12
   1356c:	andeq	r3, r1, r4, ror #12
   13570:	andeq	r3, r1, r4, ror #12
   13574:	andeq	r3, r1, r4, ror #12
   13578:	andeq	r3, r1, r4, ror #12
   1357c:	andeq	r3, r1, r4, ror #12
   13580:	andeq	r3, r1, r4, ror #12
   13584:	andeq	r3, r1, r4, ror #12
   13588:	andeq	r3, r1, r4, ror #12
   1358c:	andeq	r3, r1, ip, lsl r6
   13590:	ldr	r0, [sp, #336]	; 0x150
   13594:	ldr	r1, [sp, #340]	; 0x154
   13598:	adds	r0, r0, #1
   1359c:	adc	r1, r1, #0
   135a0:	str	r0, [sp, #336]	; 0x150
   135a4:	str	r1, [sp, #340]	; 0x154
   135a8:	ldr	r0, [sp, #264]	; 0x108
   135ac:	ldr	r1, [sp, #268]	; 0x10c
   135b0:	ldr	r2, [sp, #304]	; 0x130
   135b4:	ldr	r3, [sp, #308]	; 0x134
   135b8:	subs	r0, r2, r0
   135bc:	sbcs	r1, r3, r1
   135c0:	str	r0, [sp, #108]	; 0x6c
   135c4:	str	r1, [sp, #104]	; 0x68
   135c8:	bcs	135e0 <__assert_fail@plt+0x2004>
   135cc:	b	135d0 <__assert_fail@plt+0x1ff4>
   135d0:	ldr	r0, [sp, #264]	; 0x108
   135d4:	ldr	r1, [sp, #268]	; 0x10c
   135d8:	str	r1, [sp, #308]	; 0x134
   135dc:	str	r0, [sp, #304]	; 0x130
   135e0:	mov	r0, #0
   135e4:	str	r0, [sp, #268]	; 0x10c
   135e8:	str	r0, [sp, #264]	; 0x108
   135ec:	b	13638 <__assert_fail@plt+0x205c>
   135f0:	ldr	r0, [sp, #264]	; 0x108
   135f4:	ldr	r1, [sp, #268]	; 0x10c
   135f8:	and	r2, r0, #7
   135fc:	rsbs	r2, r2, #8
   13600:	mov	r3, #0
   13604:	sbc	r3, r3, #0
   13608:	adds	r0, r0, r2
   1360c:	adc	r1, r1, r3
   13610:	str	r0, [sp, #264]	; 0x108
   13614:	str	r1, [sp, #268]	; 0x10c
   13618:	b	13638 <__assert_fail@plt+0x205c>
   1361c:	ldr	r0, [sp, #264]	; 0x108
   13620:	ldr	r1, [sp, #268]	; 0x10c
   13624:	adds	r0, r0, #1
   13628:	adc	r1, r1, #0
   1362c:	str	r0, [sp, #264]	; 0x108
   13630:	str	r1, [sp, #268]	; 0x10c
   13634:	b	13638 <__assert_fail@plt+0x205c>
   13638:	ldrb	r0, [sp, #279]	; 0x117
   1363c:	and	r0, r0, #1
   13640:	ldr	r1, [sp, #328]	; 0x148
   13644:	ldr	r2, [sp, #332]	; 0x14c
   13648:	adds	r0, r1, r0
   1364c:	adc	r1, r2, #0
   13650:	str	r0, [sp, #328]	; 0x148
   13654:	str	r1, [sp, #332]	; 0x14c
   13658:	movw	r0, #0
   1365c:	strb	r0, [sp, #279]	; 0x117
   13660:	b	137ac <__assert_fail@plt+0x21d0>
   13664:	ldrb	r0, [sp, #227]	; 0xe3
   13668:	tst	r0, #1
   1366c:	beq	136fc <__assert_fail@plt+0x2120>
   13670:	ldr	r0, [sp, #232]	; 0xe8
   13674:	bl	113b4 <iswprint@plt>
   13678:	cmp	r0, #0
   1367c:	beq	136fc <__assert_fail@plt+0x2120>
   13680:	movw	r0, #425	; 0x1a9
   13684:	movt	r0, #3
   13688:	ldrb	r0, [r0]
   1368c:	tst	r0, #1
   13690:	beq	136cc <__assert_fail@plt+0x20f0>
   13694:	ldr	r0, [sp, #232]	; 0xe8
   13698:	bl	11318 <wcwidth@plt>
   1369c:	str	r0, [sp, #220]	; 0xdc
   136a0:	ldr	r0, [sp, #220]	; 0xdc
   136a4:	cmp	r0, #0
   136a8:	ble	136c8 <__assert_fail@plt+0x20ec>
   136ac:	ldr	r0, [sp, #220]	; 0xdc
   136b0:	ldr	r1, [sp, #264]	; 0x108
   136b4:	ldr	r2, [sp, #268]	; 0x10c
   136b8:	adds	r1, r1, r0
   136bc:	adc	r0, r2, r0, asr #31
   136c0:	str	r1, [sp, #264]	; 0x108
   136c4:	str	r0, [sp, #268]	; 0x10c
   136c8:	b	136cc <__assert_fail@plt+0x20f0>
   136cc:	ldr	r0, [sp, #232]	; 0xe8
   136d0:	bl	11498 <iswspace@plt>
   136d4:	cmp	r0, #0
   136d8:	bne	136ec <__assert_fail@plt+0x2110>
   136dc:	ldr	r0, [sp, #232]	; 0xe8
   136e0:	bl	13df0 <__assert_fail@plt+0x2814>
   136e4:	cmp	r0, #0
   136e8:	beq	136f0 <__assert_fail@plt+0x2114>
   136ec:	b	13638 <__assert_fail@plt+0x205c>
   136f0:	movw	r0, #1
   136f4:	strb	r0, [sp, #279]	; 0x117
   136f8:	b	137a8 <__assert_fail@plt+0x21cc>
   136fc:	ldrb	r0, [sp, #227]	; 0xe3
   13700:	tst	r0, #1
   13704:	bne	137a4 <__assert_fail@plt+0x21c8>
   13708:	bl	11474 <__ctype_b_loc@plt>
   1370c:	ldr	r0, [r0]
   13710:	ldr	lr, [sp, #244]	; 0xf4
   13714:	ldrb	lr, [lr]
   13718:	str	r0, [sp, #100]	; 0x64
   1371c:	mov	r0, lr
   13720:	bl	13e88 <__assert_fail@plt+0x28ac>
   13724:	mov	lr, r0
   13728:	ldr	r1, [sp, #100]	; 0x64
   1372c:	add	r0, r1, r0, lsl #1
   13730:	ldrh	r0, [r0]
   13734:	and	r0, r0, #16384	; 0x4000
   13738:	cmp	r0, #0
   1373c:	str	lr, [sp, #96]	; 0x60
   13740:	beq	137a4 <__assert_fail@plt+0x21c8>
   13744:	ldr	r0, [sp, #264]	; 0x108
   13748:	ldr	r1, [sp, #268]	; 0x10c
   1374c:	adds	r0, r0, #1
   13750:	adc	r1, r1, #0
   13754:	str	r0, [sp, #264]	; 0x108
   13758:	str	r1, [sp, #268]	; 0x10c
   1375c:	bl	11474 <__ctype_b_loc@plt>
   13760:	ldr	r0, [r0]
   13764:	ldr	r1, [sp, #244]	; 0xf4
   13768:	ldrb	r1, [r1]
   1376c:	str	r0, [sp, #92]	; 0x5c
   13770:	mov	r0, r1
   13774:	bl	13e88 <__assert_fail@plt+0x28ac>
   13778:	mov	r1, r0
   1377c:	ldr	lr, [sp, #92]	; 0x5c
   13780:	add	r0, lr, r0, lsl #1
   13784:	ldrh	r0, [r0]
   13788:	and	r0, r0, #8192	; 0x2000
   1378c:	cmp	r0, #0
   13790:	str	r1, [sp, #88]	; 0x58
   13794:	beq	1379c <__assert_fail@plt+0x21c0>
   13798:	b	13638 <__assert_fail@plt+0x205c>
   1379c:	movw	r0, #1
   137a0:	strb	r0, [sp, #279]	; 0x117
   137a4:	b	137a8 <__assert_fail@plt+0x21cc>
   137a8:	b	137ac <__assert_fail@plt+0x21d0>
   137ac:	ldr	r0, [sp, #228]	; 0xe4
   137b0:	ldr	r1, [sp, #244]	; 0xf4
   137b4:	add	r0, r1, r0
   137b8:	str	r0, [sp, #244]	; 0xf4
   137bc:	ldr	r0, [sp, #228]	; 0xe4
   137c0:	ldr	r1, [sp, #344]	; 0x158
   137c4:	sub	r0, r1, r0
   137c8:	str	r0, [sp, #344]	; 0x158
   137cc:	ldr	r0, [sp, #320]	; 0x140
   137d0:	ldr	r1, [sp, #324]	; 0x144
   137d4:	adds	r0, r0, #1
   137d8:	adc	r1, r1, #0
   137dc:	str	r0, [sp, #320]	; 0x140
   137e0:	str	r1, [sp, #324]	; 0x144
   137e4:	ldr	r0, [sp, #344]	; 0x158
   137e8:	cmp	r0, #0
   137ec:	bhi	13410 <__assert_fail@plt+0x1e34>
   137f0:	ldr	r0, [sp, #344]	; 0x158
   137f4:	cmp	r0, #0
   137f8:	bls	13838 <__assert_fail@plt+0x225c>
   137fc:	ldr	r0, [sp, #344]	; 0x158
   13800:	cmp	r0, #16384	; 0x4000
   13804:	bne	13824 <__assert_fail@plt+0x2248>
   13808:	ldr	r0, [sp, #244]	; 0xf4
   1380c:	add	r0, r0, #1
   13810:	str	r0, [sp, #244]	; 0xf4
   13814:	ldr	r0, [sp, #344]	; 0x158
   13818:	mvn	r1, #0
   1381c:	add	r0, r0, r1
   13820:	str	r0, [sp, #344]	; 0x158
   13824:	add	lr, sp, #256	; 0x100
   13828:	add	r0, lr, #94	; 0x5e
   1382c:	ldr	r1, [sp, #244]	; 0xf4
   13830:	ldr	r2, [sp, #344]	; 0x158
   13834:	bl	11324 <memmove@plt>
   13838:	ldr	r0, [sp, #344]	; 0x158
   1383c:	str	r0, [sp, #248]	; 0xf8
   13840:	b	13344 <__assert_fail@plt+0x1d68>
   13844:	ldr	r0, [sp, #264]	; 0x108
   13848:	ldr	r1, [sp, #268]	; 0x10c
   1384c:	ldr	r2, [sp, #304]	; 0x130
   13850:	ldr	r3, [sp, #308]	; 0x134
   13854:	subs	r0, r2, r0
   13858:	sbcs	r1, r3, r1
   1385c:	str	r0, [sp, #84]	; 0x54
   13860:	str	r1, [sp, #80]	; 0x50
   13864:	bcs	1387c <__assert_fail@plt+0x22a0>
   13868:	b	1386c <__assert_fail@plt+0x2290>
   1386c:	ldr	r0, [sp, #264]	; 0x108
   13870:	ldr	r1, [sp, #268]	; 0x10c
   13874:	str	r1, [sp, #308]	; 0x134
   13878:	str	r0, [sp, #304]	; 0x130
   1387c:	ldrb	r0, [sp, #279]	; 0x117
   13880:	and	r0, r0, #1
   13884:	ldr	r1, [sp, #328]	; 0x148
   13888:	ldr	r2, [sp, #332]	; 0x14c
   1388c:	adds	r0, r1, r0
   13890:	adc	r1, r2, #0
   13894:	str	r0, [sp, #328]	; 0x148
   13898:	str	r1, [sp, #332]	; 0x14c
   1389c:	b	13bf0 <__assert_fail@plt+0x2614>
   138a0:	mov	r0, #0
   138a4:	strb	r0, [sp, #219]	; 0xdb
   138a8:	str	r0, [sp, #212]	; 0xd4
   138ac:	str	r0, [sp, #208]	; 0xd0
   138b0:	add	lr, sp, #256	; 0x100
   138b4:	add	r1, lr, #94	; 0x5e
   138b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   138bc:	movw	r2, #16384	; 0x4000
   138c0:	bl	17d34 <__assert_fail@plt+0x6758>
   138c4:	str	r0, [sp, #344]	; 0x158
   138c8:	cmp	r0, #0
   138cc:	bls	13b98 <__assert_fail@plt+0x25bc>
   138d0:	add	lr, sp, #256	; 0x100
   138d4:	add	r0, lr, #94	; 0x5e
   138d8:	str	r0, [sp, #204]	; 0xcc
   138dc:	ldr	r0, [sp, #344]	; 0x158
   138e0:	cmn	r0, #1
   138e4:	bne	13934 <__assert_fail@plt+0x2358>
   138e8:	bl	114e0 <__errno_location@plt>
   138ec:	ldr	r1, [r0]
   138f0:	ldr	r2, [sp, #296]	; 0x128
   138f4:	movw	r0, #0
   138f8:	movw	lr, #3
   138fc:	str	r1, [sp, #76]	; 0x4c
   13900:	mov	r1, lr
   13904:	bl	171f0 <__assert_fail@plt+0x5c14>
   13908:	movw	r1, #0
   1390c:	str	r0, [sp, #72]	; 0x48
   13910:	mov	r0, r1
   13914:	ldr	r1, [sp, #76]	; 0x4c
   13918:	movw	r2, #60792	; 0xed78
   1391c:	movt	r2, #1
   13920:	ldr	r3, [sp, #72]	; 0x48
   13924:	bl	11408 <error@plt>
   13928:	movw	r0, #0
   1392c:	strb	r0, [fp, #-49]	; 0xffffffcf
   13930:	b	13b98 <__assert_fail@plt+0x25bc>
   13934:	ldr	r0, [sp, #344]	; 0x158
   13938:	ldr	r1, [sp, #312]	; 0x138
   1393c:	ldr	r2, [sp, #316]	; 0x13c
   13940:	adds	r0, r1, r0
   13944:	adc	r1, r2, #0
   13948:	str	r0, [sp, #312]	; 0x138
   1394c:	str	r1, [sp, #316]	; 0x13c
   13950:	ldr	r0, [sp, #204]	; 0xcc
   13954:	add	r1, r0, #1
   13958:	str	r1, [sp, #204]	; 0xcc
   1395c:	ldrb	r0, [r0]
   13960:	sub	r0, r0, #9
   13964:	cmp	r0, #23
   13968:	str	r0, [sp, #68]	; 0x44
   1396c:	bhi	13ab4 <__assert_fail@plt+0x24d8>
   13970:	add	r0, pc, #8
   13974:	ldr	r1, [sp, #68]	; 0x44
   13978:	ldr	r0, [r0, r1, lsl #2]
   1397c:	mov	pc, r0
   13980:	andeq	r3, r1, r0, asr #20
   13984:	andeq	r3, r1, r0, ror #19
   13988:	andeq	r3, r1, r4, lsl #21
   1398c:	strdeq	r3, [r1], -r8
   13990:	strdeq	r3, [r1], -r8
   13994:			; <UNDEFINED> instruction: 0x00013ab4
   13998:			; <UNDEFINED> instruction: 0x00013ab4
   1399c:			; <UNDEFINED> instruction: 0x00013ab4
   139a0:			; <UNDEFINED> instruction: 0x00013ab4
   139a4:			; <UNDEFINED> instruction: 0x00013ab4
   139a8:			; <UNDEFINED> instruction: 0x00013ab4
   139ac:			; <UNDEFINED> instruction: 0x00013ab4
   139b0:			; <UNDEFINED> instruction: 0x00013ab4
   139b4:			; <UNDEFINED> instruction: 0x00013ab4
   139b8:			; <UNDEFINED> instruction: 0x00013ab4
   139bc:			; <UNDEFINED> instruction: 0x00013ab4
   139c0:			; <UNDEFINED> instruction: 0x00013ab4
   139c4:			; <UNDEFINED> instruction: 0x00013ab4
   139c8:			; <UNDEFINED> instruction: 0x00013ab4
   139cc:			; <UNDEFINED> instruction: 0x00013ab4
   139d0:			; <UNDEFINED> instruction: 0x00013ab4
   139d4:			; <UNDEFINED> instruction: 0x00013ab4
   139d8:			; <UNDEFINED> instruction: 0x00013ab4
   139dc:	andeq	r3, r1, ip, ror #20
   139e0:	ldr	r0, [sp, #336]	; 0x150
   139e4:	ldr	r1, [sp, #340]	; 0x154
   139e8:	adds	r0, r0, #1
   139ec:	adc	r1, r1, #0
   139f0:	str	r0, [sp, #336]	; 0x150
   139f4:	str	r1, [sp, #340]	; 0x154
   139f8:	ldr	r0, [sp, #208]	; 0xd0
   139fc:	ldr	r1, [sp, #212]	; 0xd4
   13a00:	ldr	r2, [sp, #304]	; 0x130
   13a04:	ldr	r3, [sp, #308]	; 0x134
   13a08:	subs	r0, r2, r0
   13a0c:	sbcs	r1, r3, r1
   13a10:	str	r0, [sp, #64]	; 0x40
   13a14:	str	r1, [sp, #60]	; 0x3c
   13a18:	bcs	13a30 <__assert_fail@plt+0x2454>
   13a1c:	b	13a20 <__assert_fail@plt+0x2444>
   13a20:	ldr	r0, [sp, #208]	; 0xd0
   13a24:	ldr	r1, [sp, #212]	; 0xd4
   13a28:	str	r1, [sp, #308]	; 0x134
   13a2c:	str	r0, [sp, #304]	; 0x130
   13a30:	mov	r0, #0
   13a34:	str	r0, [sp, #212]	; 0xd4
   13a38:	str	r0, [sp, #208]	; 0xd0
   13a3c:	b	13a88 <__assert_fail@plt+0x24ac>
   13a40:	ldr	r0, [sp, #208]	; 0xd0
   13a44:	ldr	r1, [sp, #212]	; 0xd4
   13a48:	and	r2, r0, #7
   13a4c:	rsbs	r2, r2, #8
   13a50:	mov	r3, #0
   13a54:	sbc	r3, r3, #0
   13a58:	adds	r0, r0, r2
   13a5c:	adc	r1, r1, r3
   13a60:	str	r0, [sp, #208]	; 0xd0
   13a64:	str	r1, [sp, #212]	; 0xd4
   13a68:	b	13a88 <__assert_fail@plt+0x24ac>
   13a6c:	ldr	r0, [sp, #208]	; 0xd0
   13a70:	ldr	r1, [sp, #212]	; 0xd4
   13a74:	adds	r0, r0, #1
   13a78:	adc	r1, r1, #0
   13a7c:	str	r0, [sp, #208]	; 0xd0
   13a80:	str	r1, [sp, #212]	; 0xd4
   13a84:	b	13a88 <__assert_fail@plt+0x24ac>
   13a88:	ldrb	r0, [sp, #219]	; 0xdb
   13a8c:	and	r0, r0, #1
   13a90:	ldr	r1, [sp, #328]	; 0x148
   13a94:	ldr	r2, [sp, #332]	; 0x14c
   13a98:	adds	r0, r1, r0
   13a9c:	adc	r1, r2, #0
   13aa0:	str	r0, [sp, #328]	; 0x148
   13aa4:	str	r1, [sp, #332]	; 0x14c
   13aa8:	movw	r0, #0
   13aac:	strb	r0, [sp, #219]	; 0xdb
   13ab0:	b	13b78 <__assert_fail@plt+0x259c>
   13ab4:	bl	11474 <__ctype_b_loc@plt>
   13ab8:	ldr	r0, [r0]
   13abc:	ldr	lr, [sp, #204]	; 0xcc
   13ac0:	ldrb	lr, [lr, #-1]
   13ac4:	str	r0, [sp, #56]	; 0x38
   13ac8:	mov	r0, lr
   13acc:	bl	13e88 <__assert_fail@plt+0x28ac>
   13ad0:	mov	lr, r0
   13ad4:	ldr	r1, [sp, #56]	; 0x38
   13ad8:	add	r0, r1, r0, lsl #1
   13adc:	ldrh	r0, [r0]
   13ae0:	and	r0, r0, #16384	; 0x4000
   13ae4:	cmp	r0, #0
   13ae8:	str	lr, [sp, #52]	; 0x34
   13aec:	beq	13b74 <__assert_fail@plt+0x2598>
   13af0:	ldr	r0, [sp, #208]	; 0xd0
   13af4:	ldr	r1, [sp, #212]	; 0xd4
   13af8:	adds	r0, r0, #1
   13afc:	adc	r1, r1, #0
   13b00:	str	r0, [sp, #208]	; 0xd0
   13b04:	str	r1, [sp, #212]	; 0xd4
   13b08:	bl	11474 <__ctype_b_loc@plt>
   13b0c:	ldr	r0, [r0]
   13b10:	ldr	r1, [sp, #204]	; 0xcc
   13b14:	ldrb	r1, [r1, #-1]
   13b18:	str	r0, [sp, #48]	; 0x30
   13b1c:	mov	r0, r1
   13b20:	bl	13e88 <__assert_fail@plt+0x28ac>
   13b24:	mov	r1, r0
   13b28:	ldr	lr, [sp, #48]	; 0x30
   13b2c:	add	r0, lr, r0, lsl #1
   13b30:	ldrh	r0, [r0]
   13b34:	and	r0, r0, #8192	; 0x2000
   13b38:	cmp	r0, #0
   13b3c:	str	r1, [sp, #44]	; 0x2c
   13b40:	bne	13b68 <__assert_fail@plt+0x258c>
   13b44:	ldr	r0, [sp, #204]	; 0xcc
   13b48:	mvn	r1, #0
   13b4c:	add	r0, r0, r1
   13b50:	ldrb	r0, [r0]
   13b54:	bl	13e88 <__assert_fail@plt+0x28ac>
   13b58:	and	r0, r0, #255	; 0xff
   13b5c:	bl	13e9c <__assert_fail@plt+0x28c0>
   13b60:	cmp	r0, #0
   13b64:	beq	13b6c <__assert_fail@plt+0x2590>
   13b68:	b	13a88 <__assert_fail@plt+0x24ac>
   13b6c:	movw	r0, #1
   13b70:	strb	r0, [sp, #219]	; 0xdb
   13b74:	b	13b78 <__assert_fail@plt+0x259c>
   13b78:	b	13b7c <__assert_fail@plt+0x25a0>
   13b7c:	ldr	r0, [sp, #344]	; 0x158
   13b80:	mvn	r1, #0
   13b84:	add	r0, r0, r1
   13b88:	str	r0, [sp, #344]	; 0x158
   13b8c:	cmp	r0, #0
   13b90:	bne	13950 <__assert_fail@plt+0x2374>
   13b94:	b	138b0 <__assert_fail@plt+0x22d4>
   13b98:	ldr	r0, [sp, #208]	; 0xd0
   13b9c:	ldr	r1, [sp, #212]	; 0xd4
   13ba0:	ldr	r2, [sp, #304]	; 0x130
   13ba4:	ldr	r3, [sp, #308]	; 0x134
   13ba8:	subs	r0, r2, r0
   13bac:	sbcs	r1, r3, r1
   13bb0:	str	r0, [sp, #40]	; 0x28
   13bb4:	str	r1, [sp, #36]	; 0x24
   13bb8:	bcs	13bd0 <__assert_fail@plt+0x25f4>
   13bbc:	b	13bc0 <__assert_fail@plt+0x25e4>
   13bc0:	ldr	r0, [sp, #208]	; 0xd0
   13bc4:	ldr	r1, [sp, #212]	; 0xd4
   13bc8:	str	r1, [sp, #308]	; 0x134
   13bcc:	str	r0, [sp, #304]	; 0x130
   13bd0:	ldrb	r0, [sp, #219]	; 0xdb
   13bd4:	and	r0, r0, #1
   13bd8:	ldr	r1, [sp, #328]	; 0x148
   13bdc:	ldr	r2, [sp, #332]	; 0x14c
   13be0:	adds	r0, r1, r0
   13be4:	adc	r1, r2, #0
   13be8:	str	r0, [sp, #328]	; 0x148
   13bec:	str	r1, [sp, #332]	; 0x14c
   13bf0:	b	13bf4 <__assert_fail@plt+0x2618>
   13bf4:	b	13bf8 <__assert_fail@plt+0x261c>
   13bf8:	ldrb	r0, [sp, #302]	; 0x12e
   13bfc:	and	r0, r0, #1
   13c00:	movw	r1, #422	; 0x1a6
   13c04:	movt	r1, #3
   13c08:	ldrb	r1, [r1]
   13c0c:	and	r1, r1, #1
   13c10:	cmp	r0, r1
   13c14:	bge	13c28 <__assert_fail@plt+0x264c>
   13c18:	ldr	r0, [sp, #312]	; 0x138
   13c1c:	ldr	r1, [sp, #316]	; 0x13c
   13c20:	str	r1, [sp, #324]	; 0x144
   13c24:	str	r0, [sp, #320]	; 0x140
   13c28:	ldr	r0, [sp, #336]	; 0x150
   13c2c:	ldr	r1, [sp, #340]	; 0x154
   13c30:	ldr	r2, [sp, #328]	; 0x148
   13c34:	ldr	r3, [sp, #332]	; 0x14c
   13c38:	ldr	ip, [sp, #320]	; 0x140
   13c3c:	ldr	lr, [sp, #324]	; 0x144
   13c40:	ldr	r4, [sp, #312]	; 0x138
   13c44:	ldr	r5, [sp, #316]	; 0x13c
   13c48:	ldr	r6, [sp, #304]	; 0x130
   13c4c:	ldr	r7, [sp, #308]	; 0x134
   13c50:	ldr	r8, [fp, #-36]	; 0xffffffdc
   13c54:	mov	r9, sp
   13c58:	str	r8, [r9, #24]
   13c5c:	str	r7, [r9, #20]
   13c60:	str	r6, [r9, #16]
   13c64:	str	r5, [r9, #12]
   13c68:	str	r4, [r9, #8]
   13c6c:	str	lr, [r9, #4]
   13c70:	str	ip, [r9]
   13c74:	bl	12abc <__assert_fail@plt+0x14e0>
   13c78:	ldr	r0, [sp, #336]	; 0x150
   13c7c:	ldr	r1, [sp, #340]	; 0x154
   13c80:	movw	r2, #464	; 0x1d0
   13c84:	movt	r2, #3
   13c88:	ldr	r3, [r2]
   13c8c:	ldr	ip, [r2, #4]
   13c90:	adds	r0, r3, r0
   13c94:	adc	r1, ip, r1
   13c98:	str	r0, [r2]
   13c9c:	str	r1, [r2, #4]
   13ca0:	ldr	r0, [sp, #328]	; 0x148
   13ca4:	ldr	r1, [sp, #332]	; 0x14c
   13ca8:	movw	r2, #456	; 0x1c8
   13cac:	movt	r2, #3
   13cb0:	ldr	r3, [r2]
   13cb4:	ldr	ip, [r2, #4]
   13cb8:	adds	r0, r3, r0
   13cbc:	adc	r1, ip, r1
   13cc0:	str	r0, [r2]
   13cc4:	str	r1, [r2, #4]
   13cc8:	ldr	r0, [sp, #320]	; 0x140
   13ccc:	ldr	r1, [sp, #324]	; 0x144
   13cd0:	movw	r2, #448	; 0x1c0
   13cd4:	movt	r2, #3
   13cd8:	ldr	r3, [r2]
   13cdc:	ldr	ip, [r2, #4]
   13ce0:	adds	r0, r3, r0
   13ce4:	adc	r1, ip, r1
   13ce8:	str	r0, [r2]
   13cec:	str	r1, [r2, #4]
   13cf0:	ldr	r0, [sp, #312]	; 0x138
   13cf4:	ldr	r1, [sp, #316]	; 0x13c
   13cf8:	movw	r2, #440	; 0x1b8
   13cfc:	movt	r2, #3
   13d00:	ldr	r3, [r2]
   13d04:	ldr	ip, [r2, #4]
   13d08:	adds	r0, r3, r0
   13d0c:	adc	r1, ip, r1
   13d10:	str	r0, [r2]
   13d14:	str	r1, [r2, #4]
   13d18:	ldr	r0, [sp, #304]	; 0x130
   13d1c:	ldr	r1, [sp, #308]	; 0x134
   13d20:	movw	r2, #432	; 0x1b0
   13d24:	movt	r2, #3
   13d28:	ldr	r3, [r2]
   13d2c:	ldr	r2, [r2, #4]
   13d30:	subs	r0, r3, r0
   13d34:	sbcs	r1, r2, r1
   13d38:	str	r0, [sp, #32]
   13d3c:	str	r1, [sp, #28]
   13d40:	bcs	13d60 <__assert_fail@plt+0x2784>
   13d44:	b	13d48 <__assert_fail@plt+0x276c>
   13d48:	ldr	r0, [sp, #304]	; 0x130
   13d4c:	ldr	r1, [sp, #308]	; 0x134
   13d50:	movw	r2, #432	; 0x1b0
   13d54:	movt	r2, #3
   13d58:	str	r1, [r2, #4]
   13d5c:	str	r0, [r2]
   13d60:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   13d64:	and	r0, r0, #1
   13d68:	sub	sp, fp, #24
   13d6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13d70:	sub	sp, sp, #8
   13d74:	str	r0, [sp, #4]
   13d78:	ldr	r0, [sp, #4]
   13d7c:	ldr	r0, [r0, #16]
   13d80:	and	r0, r0, #61440	; 0xf000
   13d84:	cmp	r0, #32768	; 0x8000
   13d88:	movw	r0, #1
   13d8c:	str	r0, [sp]
   13d90:	beq	13de0 <__assert_fail@plt+0x2804>
   13d94:	ldr	r0, [sp, #4]
   13d98:	ldr	r0, [r0, #16]
   13d9c:	and	r0, r0, #61440	; 0xf000
   13da0:	cmp	r0, #40960	; 0xa000
   13da4:	movw	r0, #1
   13da8:	str	r0, [sp]
   13dac:	beq	13de0 <__assert_fail@plt+0x2804>
   13db0:	ldr	r0, [sp, #4]
   13db4:	ldr	r0, [r0, #16]
   13db8:	ldr	r1, [sp, #4]
   13dbc:	ldr	r1, [r1, #16]
   13dc0:	sub	r0, r0, r1
   13dc4:	cmp	r0, #0
   13dc8:	movw	r0, #1
   13dcc:	str	r0, [sp]
   13dd0:	bne	13de0 <__assert_fail@plt+0x2804>
   13dd4:	movw	r0, #0
   13dd8:	str	r0, [sp]
   13ddc:	b	13de0 <__assert_fail@plt+0x2804>
   13de0:	ldr	r0, [sp]
   13de4:	and	r0, r0, #1
   13de8:	add	sp, sp, #8
   13dec:	bx	lr
   13df0:	sub	sp, sp, #12
   13df4:	str	r0, [sp, #8]
   13df8:	movw	r0, #420	; 0x1a4
   13dfc:	movt	r0, #3
   13e00:	ldrb	r0, [r0]
   13e04:	tst	r0, #1
   13e08:	movw	r0, #0
   13e0c:	str	r0, [sp, #4]
   13e10:	bne	13e78 <__assert_fail@plt+0x289c>
   13e14:	ldr	r0, [sp, #8]
   13e18:	cmp	r0, #160	; 0xa0
   13e1c:	movw	r0, #1
   13e20:	str	r0, [sp]
   13e24:	beq	13e70 <__assert_fail@plt+0x2894>
   13e28:	ldr	r0, [sp, #8]
   13e2c:	movw	r1, #8199	; 0x2007
   13e30:	cmp	r0, r1
   13e34:	movw	r0, #1
   13e38:	str	r0, [sp]
   13e3c:	beq	13e70 <__assert_fail@plt+0x2894>
   13e40:	ldr	r0, [sp, #8]
   13e44:	movw	r1, #8239	; 0x202f
   13e48:	cmp	r0, r1
   13e4c:	movw	r0, #1
   13e50:	str	r0, [sp]
   13e54:	beq	13e70 <__assert_fail@plt+0x2894>
   13e58:	ldr	r0, [sp, #8]
   13e5c:	movw	r1, #8288	; 0x2060
   13e60:	cmp	r0, r1
   13e64:	movw	r0, #0
   13e68:	moveq	r0, #1
   13e6c:	str	r0, [sp]
   13e70:	ldr	r0, [sp]
   13e74:	str	r0, [sp, #4]
   13e78:	ldr	r0, [sp, #4]
   13e7c:	and	r0, r0, #1
   13e80:	add	sp, sp, #12
   13e84:	bx	lr
   13e88:	sub	sp, sp, #4
   13e8c:	strb	r0, [sp, #3]
   13e90:	ldrb	r0, [sp, #3]
   13e94:	add	sp, sp, #4
   13e98:	bx	lr
   13e9c:	push	{fp, lr}
   13ea0:	mov	fp, sp
   13ea4:	sub	sp, sp, #8
   13ea8:	str	r0, [sp, #4]
   13eac:	ldr	r0, [sp, #4]
   13eb0:	bl	11510 <btowc@plt>
   13eb4:	bl	13df0 <__assert_fail@plt+0x2814>
   13eb8:	mov	sp, fp
   13ebc:	pop	{fp, pc}
   13ec0:	push	{r4, r5, fp, lr}
   13ec4:	add	fp, sp, #8
   13ec8:	sub	sp, sp, #88	; 0x58
   13ecc:	sub	sp, sp, #16384	; 0x4000
   13ed0:	str	r0, [fp, #-16]
   13ed4:	str	r1, [fp, #-20]	; 0xffffffec
   13ed8:	str	r2, [fp, #-24]	; 0xffffffe8
   13edc:	str	r3, [fp, #-28]	; 0xffffffe4
   13ee0:	movw	r0, #0
   13ee4:	strb	r0, [sp, #46]	; 0x2e
   13ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13eec:	movw	r1, #0
   13ef0:	cmp	r0, r1
   13ef4:	beq	13f08 <__assert_fail@plt+0x292c>
   13ef8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13efc:	movw	r1, #0
   13f00:	cmp	r0, r1
   13f04:	bne	13f18 <__assert_fail@plt+0x293c>
   13f08:	movw	r0, #0
   13f0c:	and	r0, r0, #1
   13f10:	strb	r0, [fp, #-9]
   13f14:	b	14128 <__assert_fail@plt+0x2b4c>
   13f18:	mov	r0, #0
   13f1c:	str	r0, [fp, #-44]	; 0xffffffd4
   13f20:	str	r0, [fp, #-48]	; 0xffffffd0
   13f24:	str	r0, [fp, #-36]	; 0xffffffdc
   13f28:	str	r0, [fp, #-40]	; 0xffffffd8
   13f2c:	add	r1, sp, #47	; 0x2f
   13f30:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f34:	movw	r2, #16384	; 0x4000
   13f38:	bl	17d34 <__assert_fail@plt+0x6758>
   13f3c:	str	r0, [fp, #-32]	; 0xffffffe0
   13f40:	cmp	r0, #0
   13f44:	bls	140f4 <__assert_fail@plt+0x2b18>
   13f48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f4c:	cmn	r0, #1
   13f50:	bne	13fa4 <__assert_fail@plt+0x29c8>
   13f54:	bl	114e0 <__errno_location@plt>
   13f58:	ldr	r1, [r0]
   13f5c:	ldr	r2, [fp, #-16]
   13f60:	movw	r0, #0
   13f64:	movw	lr, #3
   13f68:	str	r1, [sp, #20]
   13f6c:	mov	r1, lr
   13f70:	bl	171f0 <__assert_fail@plt+0x5c14>
   13f74:	movw	r1, #0
   13f78:	str	r0, [sp, #16]
   13f7c:	mov	r0, r1
   13f80:	ldr	r1, [sp, #20]
   13f84:	movw	r2, #60792	; 0xed78
   13f88:	movt	r2, #1
   13f8c:	ldr	r3, [sp, #16]
   13f90:	bl	11408 <error@plt>
   13f94:	movw	r0, #0
   13f98:	and	r0, r0, #1
   13f9c:	strb	r0, [fp, #-9]
   13fa0:	b	14128 <__assert_fail@plt+0x2b4c>
   13fa4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fa8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13fac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13fb0:	adds	r0, r1, r0
   13fb4:	adc	r1, r2, #0
   13fb8:	str	r0, [fp, #-48]	; 0xffffffd0
   13fbc:	str	r1, [fp, #-44]	; 0xffffffd4
   13fc0:	add	r0, sp, #47	; 0x2f
   13fc4:	str	r0, [sp, #40]	; 0x28
   13fc8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13fcc:	add	r0, r0, r1
   13fd0:	str	r0, [sp, #36]	; 0x24
   13fd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13fd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13fdc:	str	r1, [sp, #28]
   13fe0:	str	r0, [sp, #24]
   13fe4:	ldrb	r0, [sp, #46]	; 0x2e
   13fe8:	tst	r0, #1
   13fec:	bne	14044 <__assert_fail@plt+0x2a68>
   13ff0:	b	13ff4 <__assert_fail@plt+0x2a18>
   13ff4:	ldr	r0, [sp, #40]	; 0x28
   13ff8:	ldr	r1, [sp, #36]	; 0x24
   13ffc:	cmp	r0, r1
   14000:	beq	14040 <__assert_fail@plt+0x2a64>
   14004:	ldr	r0, [sp, #40]	; 0x28
   14008:	add	r1, r0, #1
   1400c:	str	r1, [sp, #40]	; 0x28
   14010:	ldrb	r0, [r0]
   14014:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14018:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1401c:	adds	r3, r1, #1
   14020:	adc	ip, r2, #0
   14024:	cmp	r0, #10
   14028:	moveq	r1, r3
   1402c:	cmp	r0, #10
   14030:	moveq	r2, ip
   14034:	str	r1, [fp, #-40]	; 0xffffffd8
   14038:	str	r2, [fp, #-36]	; 0xffffffdc
   1403c:	b	13ff4 <__assert_fail@plt+0x2a18>
   14040:	b	14098 <__assert_fail@plt+0x2abc>
   14044:	ldr	r0, [sp, #36]	; 0x24
   14048:	movw	r1, #10
   1404c:	strb	r1, [r0]
   14050:	ldr	r0, [sp, #40]	; 0x28
   14054:	movw	r1, #10
   14058:	bl	113a8 <rawmemchr@plt>
   1405c:	str	r0, [sp, #40]	; 0x28
   14060:	ldr	r1, [sp, #36]	; 0x24
   14064:	cmp	r0, r1
   14068:	bcs	14094 <__assert_fail@plt+0x2ab8>
   1406c:	ldr	r0, [sp, #40]	; 0x28
   14070:	add	r0, r0, #1
   14074:	str	r0, [sp, #40]	; 0x28
   14078:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1407c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14080:	adds	r0, r0, #1
   14084:	adc	r1, r1, #0
   14088:	str	r0, [fp, #-40]	; 0xffffffd8
   1408c:	str	r1, [fp, #-36]	; 0xffffffdc
   14090:	b	14050 <__assert_fail@plt+0x2a74>
   14094:	b	14098 <__assert_fail@plt+0x2abc>
   14098:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1409c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   140a0:	ldr	r2, [sp, #24]
   140a4:	ldr	r3, [sp, #28]
   140a8:	subs	r0, r0, r2
   140ac:	sbc	r1, r1, r3
   140b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   140b4:	movw	r3, #34953	; 0x8889
   140b8:	movt	r3, #34952	; 0x8888
   140bc:	umull	r2, r3, r2, r3
   140c0:	rsbs	r0, r0, r3, lsr #3
   140c4:	rscs	r1, r1, #0
   140c8:	str	r2, [sp, #12]
   140cc:	str	r0, [sp, #8]
   140d0:	str	r1, [sp, #4]
   140d4:	bcc	140e8 <__assert_fail@plt+0x2b0c>
   140d8:	b	140dc <__assert_fail@plt+0x2b00>
   140dc:	movw	r0, #1
   140e0:	strb	r0, [sp, #46]	; 0x2e
   140e4:	b	140f0 <__assert_fail@plt+0x2b14>
   140e8:	movw	r0, #0
   140ec:	strb	r0, [sp, #46]	; 0x2e
   140f0:	b	13f2c <__assert_fail@plt+0x2950>
   140f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   140f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   140fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14100:	str	r1, [r2, #4]
   14104:	str	r0, [r2]
   14108:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1410c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14110:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14114:	str	r1, [r2, #4]
   14118:	str	r0, [r2]
   1411c:	movw	r0, #1
   14120:	and	r0, r0, #1
   14124:	strb	r0, [fp, #-9]
   14128:	ldrb	r0, [fp, #-9]
   1412c:	and	r0, r0, #1
   14130:	sub	sp, fp, #8
   14134:	pop	{r4, r5, fp, pc}
   14138:	push	{fp, lr}
   1413c:	mov	fp, sp
   14140:	sub	sp, sp, #16
   14144:	str	r0, [sp, #8]
   14148:	movw	r0, #24
   1414c:	bl	1b5f8 <__assert_fail@plt+0xa01c>
   14150:	str	r0, [sp, #4]
   14154:	ldr	r0, [sp, #4]
   14158:	movw	lr, #0
   1415c:	cmp	r0, lr
   14160:	bne	14170 <__assert_fail@plt+0x2b94>
   14164:	movw	r0, #0
   14168:	str	r0, [fp, #-4]
   1416c:	b	1419c <__assert_fail@plt+0x2bc0>
   14170:	ldr	r0, [sp, #4]
   14174:	movw	r1, #0
   14178:	str	r1, [r0]
   1417c:	ldr	r0, [sp, #8]
   14180:	ldr	r1, [sp, #4]
   14184:	str	r0, [r1, #16]
   14188:	ldr	r0, [sp, #8]
   1418c:	ldr	r1, [sp, #4]
   14190:	str	r0, [r1, #20]
   14194:	ldr	r0, [sp, #4]
   14198:	str	r0, [fp, #-4]
   1419c:	ldr	r0, [fp, #-4]
   141a0:	mov	sp, fp
   141a4:	pop	{fp, pc}
   141a8:	push	{fp, lr}
   141ac:	mov	fp, sp
   141b0:	sub	sp, sp, #16
   141b4:	str	r0, [sp, #8]
   141b8:	movw	r0, #24
   141bc:	bl	1b5f8 <__assert_fail@plt+0xa01c>
   141c0:	str	r0, [sp, #4]
   141c4:	ldr	r0, [sp, #4]
   141c8:	movw	lr, #0
   141cc:	cmp	r0, lr
   141d0:	bne	141e0 <__assert_fail@plt+0x2c04>
   141d4:	movw	r0, #0
   141d8:	str	r0, [fp, #-4]
   141dc:	b	14218 <__assert_fail@plt+0x2c3c>
   141e0:	ldr	r0, [sp, #8]
   141e4:	ldr	r1, [sp, #4]
   141e8:	str	r0, [r1]
   141ec:	ldr	r0, [sp, #4]
   141f0:	movw	r1, #0
   141f4:	str	r1, [r0, #8]
   141f8:	ldr	r0, [sp, #4]
   141fc:	str	r1, [r0, #12]
   14200:	ldr	r0, [sp, #4]
   14204:	str	r1, [r0, #4]
   14208:	ldr	r0, [sp, #4]
   1420c:	str	r1, [r0, #16]
   14210:	ldr	r0, [sp, #4]
   14214:	str	r0, [fp, #-4]
   14218:	ldr	r0, [fp, #-4]
   1421c:	mov	sp, fp
   14220:	pop	{fp, pc}
   14224:	push	{fp, lr}
   14228:	mov	fp, sp
   1422c:	sub	sp, sp, #16
   14230:	str	r0, [sp, #8]
   14234:	str	r1, [sp, #4]
   14238:	ldr	r0, [sp, #8]
   1423c:	ldr	r0, [r0]
   14240:	movw	r1, #0
   14244:	cmp	r0, r1
   14248:	beq	142e0 <__assert_fail@plt+0x2d04>
   1424c:	ldr	r0, [sp, #8]
   14250:	add	r0, r0, #8
   14254:	ldr	r1, [sp, #8]
   14258:	add	r1, r1, #12
   1425c:	ldr	r2, [sp, #8]
   14260:	ldr	r3, [r2]
   14264:	movw	r2, #0
   14268:	bl	11588 <getdelim@plt>
   1426c:	str	r0, [sp]
   14270:	ldr	r0, [sp]
   14274:	cmp	r0, #0
   14278:	bge	142b4 <__assert_fail@plt+0x2cd8>
   1427c:	ldr	r0, [sp, #8]
   14280:	ldr	r0, [r0]
   14284:	bl	1148c <feof@plt>
   14288:	cmp	r0, #0
   1428c:	movw	r0, #0
   14290:	movne	r0, #1
   14294:	tst	r0, #1
   14298:	movw	r0, #2
   1429c:	moveq	r0, #4
   142a0:	ldr	lr, [sp, #4]
   142a4:	str	r0, [lr]
   142a8:	movw	r0, #0
   142ac:	str	r0, [fp, #-4]
   142b0:	b	14334 <__assert_fail@plt+0x2d58>
   142b4:	ldr	r0, [sp, #4]
   142b8:	movw	r1, #1
   142bc:	str	r1, [r0]
   142c0:	ldr	r0, [sp, #8]
   142c4:	ldr	r1, [r0, #4]
   142c8:	add	r1, r1, #1
   142cc:	str	r1, [r0, #4]
   142d0:	ldr	r0, [sp, #8]
   142d4:	ldr	r0, [r0, #8]
   142d8:	str	r0, [fp, #-4]
   142dc:	b	14334 <__assert_fail@plt+0x2d58>
   142e0:	ldr	r0, [sp, #8]
   142e4:	ldr	r0, [r0, #20]
   142e8:	ldr	r0, [r0]
   142ec:	movw	r1, #0
   142f0:	cmp	r0, r1
   142f4:	bne	14310 <__assert_fail@plt+0x2d34>
   142f8:	ldr	r0, [sp, #4]
   142fc:	movw	r1, #2
   14300:	str	r1, [r0]
   14304:	movw	r0, #0
   14308:	str	r0, [fp, #-4]
   1430c:	b	14334 <__assert_fail@plt+0x2d58>
   14310:	ldr	r0, [sp, #4]
   14314:	movw	r1, #1
   14318:	str	r1, [r0]
   1431c:	ldr	r0, [sp, #8]
   14320:	ldr	r1, [r0, #20]
   14324:	add	r2, r1, #4
   14328:	str	r2, [r0, #20]
   1432c:	ldr	r0, [r1]
   14330:	str	r0, [fp, #-4]
   14334:	ldr	r0, [fp, #-4]
   14338:	mov	sp, fp
   1433c:	pop	{fp, pc}
   14340:	sub	sp, sp, #8
   14344:	str	r0, [sp, #4]
   14348:	ldr	r0, [sp, #4]
   1434c:	ldr	r0, [r0]
   14350:	movw	r1, #0
   14354:	cmp	r0, r1
   14358:	beq	1436c <__assert_fail@plt+0x2d90>
   1435c:	ldr	r0, [sp, #4]
   14360:	ldr	r0, [r0, #4]
   14364:	str	r0, [sp]
   14368:	b	14384 <__assert_fail@plt+0x2da8>
   1436c:	ldr	r0, [sp, #4]
   14370:	ldr	r1, [r0, #16]
   14374:	ldr	r0, [r0, #20]
   14378:	sub	r0, r0, r1
   1437c:	asr	r0, r0, #2
   14380:	str	r0, [sp]
   14384:	ldr	r0, [sp]
   14388:	add	sp, sp, #8
   1438c:	bx	lr
   14390:	push	{fp, lr}
   14394:	mov	fp, sp
   14398:	sub	sp, sp, #8
   1439c:	str	r0, [sp, #4]
   143a0:	ldr	r0, [sp, #4]
   143a4:	ldr	r0, [r0]
   143a8:	movw	r1, #0
   143ac:	cmp	r0, r1
   143b0:	beq	143c0 <__assert_fail@plt+0x2de4>
   143b4:	ldr	r0, [sp, #4]
   143b8:	ldr	r0, [r0, #8]
   143bc:	bl	14794 <__assert_fail@plt+0x31b8>
   143c0:	ldr	r0, [sp, #4]
   143c4:	bl	14794 <__assert_fail@plt+0x31b8>
   143c8:	mov	sp, fp
   143cc:	pop	{fp, pc}
   143d0:	sub	sp, sp, #4
   143d4:	str	r0, [sp]
   143d8:	ldr	r0, [sp]
   143dc:	movw	r1, #488	; 0x1e8
   143e0:	movt	r1, #3
   143e4:	str	r0, [r1]
   143e8:	add	sp, sp, #4
   143ec:	bx	lr
   143f0:	sub	sp, sp, #4
   143f4:	and	r0, r0, #1
   143f8:	strb	r0, [sp, #3]
   143fc:	ldrb	r0, [sp, #3]
   14400:	and	r0, r0, #1
   14404:	movw	r1, #492	; 0x1ec
   14408:	movt	r1, #3
   1440c:	strb	r0, [r1]
   14410:	add	sp, sp, #4
   14414:	bx	lr
   14418:	push	{fp, lr}
   1441c:	mov	fp, sp
   14420:	sub	sp, sp, #24
   14424:	movw	r0, #404	; 0x194
   14428:	movt	r0, #3
   1442c:	ldr	r0, [r0]
   14430:	bl	1b804 <__assert_fail@plt+0xa228>
   14434:	cmp	r0, #0
   14438:	beq	14508 <__assert_fail@plt+0x2f2c>
   1443c:	movw	r0, #492	; 0x1ec
   14440:	movt	r0, #3
   14444:	ldrb	r0, [r0]
   14448:	tst	r0, #1
   1444c:	beq	14460 <__assert_fail@plt+0x2e84>
   14450:	bl	114e0 <__errno_location@plt>
   14454:	ldr	r0, [r0]
   14458:	cmp	r0, #32
   1445c:	beq	14508 <__assert_fail@plt+0x2f2c>
   14460:	movw	r0, #60776	; 0xed68
   14464:	movt	r0, #1
   14468:	bl	114a4 <gettext@plt>
   1446c:	str	r0, [fp, #-4]
   14470:	movw	r0, #488	; 0x1e8
   14474:	movt	r0, #3
   14478:	ldr	r0, [r0]
   1447c:	movw	lr, #0
   14480:	cmp	r0, lr
   14484:	beq	144dc <__assert_fail@plt+0x2f00>
   14488:	bl	114e0 <__errno_location@plt>
   1448c:	ldr	r1, [r0]
   14490:	movw	r0, #488	; 0x1e8
   14494:	movt	r0, #3
   14498:	ldr	r0, [r0]
   1449c:	str	r1, [fp, #-8]
   144a0:	bl	17198 <__assert_fail@plt+0x5bbc>
   144a4:	ldr	r1, [fp, #-4]
   144a8:	movw	lr, #0
   144ac:	str	r0, [sp, #12]
   144b0:	mov	r0, lr
   144b4:	ldr	lr, [fp, #-8]
   144b8:	str	r1, [sp, #8]
   144bc:	mov	r1, lr
   144c0:	movw	r2, #60788	; 0xed74
   144c4:	movt	r2, #1
   144c8:	ldr	r3, [sp, #12]
   144cc:	ldr	ip, [sp, #8]
   144d0:	str	ip, [sp]
   144d4:	bl	11408 <error@plt>
   144d8:	b	144f8 <__assert_fail@plt+0x2f1c>
   144dc:	bl	114e0 <__errno_location@plt>
   144e0:	ldr	r1, [r0]
   144e4:	ldr	r3, [fp, #-4]
   144e8:	movw	r0, #0
   144ec:	movw	r2, #60792	; 0xed78
   144f0:	movt	r2, #1
   144f4:	bl	11408 <error@plt>
   144f8:	movw	r0, #304	; 0x130
   144fc:	movt	r0, #3
   14500:	ldr	r0, [r0]
   14504:	bl	11348 <_exit@plt>
   14508:	movw	r0, #392	; 0x188
   1450c:	movt	r0, #3
   14510:	ldr	r0, [r0]
   14514:	bl	1b804 <__assert_fail@plt+0xa228>
   14518:	cmp	r0, #0
   1451c:	beq	14530 <__assert_fail@plt+0x2f54>
   14520:	movw	r0, #304	; 0x130
   14524:	movt	r0, #3
   14528:	ldr	r0, [r0]
   1452c:	bl	11348 <_exit@plt>
   14530:	mov	sp, fp
   14534:	pop	{fp, pc}
   14538:	push	{r4, r5, fp, lr}
   1453c:	add	fp, sp, #8
   14540:	sub	sp, sp, #48	; 0x30
   14544:	ldr	r1, [fp, #12]
   14548:	ldr	ip, [fp, #8]
   1454c:	ldr	lr, [fp, #16]
   14550:	str	r0, [fp, #-12]
   14554:	str	r3, [fp, #-20]	; 0xffffffec
   14558:	str	r2, [fp, #-24]	; 0xffffffe8
   1455c:	str	r1, [sp, #28]
   14560:	str	ip, [sp, #24]
   14564:	ldr	r0, [fp, #-12]
   14568:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1456c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14570:	ldr	r1, [sp, #24]
   14574:	ldr	ip, [sp, #28]
   14578:	ldr	r4, [fp, #16]
   1457c:	mov	r5, sp
   14580:	str	r4, [r5, #8]
   14584:	str	ip, [r5, #4]
   14588:	str	r1, [r5]
   1458c:	str	lr, [sp, #20]
   14590:	bl	112e8 <posix_fadvise64@plt>
   14594:	str	r0, [sp, #16]
   14598:	sub	sp, fp, #8
   1459c:	pop	{r4, r5, fp, pc}
   145a0:	push	{fp, lr}
   145a4:	mov	fp, sp
   145a8:	sub	sp, sp, #24
   145ac:	str	r0, [fp, #-4]
   145b0:	str	r1, [fp, #-8]
   145b4:	ldr	r0, [fp, #-4]
   145b8:	movw	r1, #0
   145bc:	cmp	r0, r1
   145c0:	beq	145f0 <__assert_fail@plt+0x3014>
   145c4:	ldr	r0, [fp, #-4]
   145c8:	bl	11528 <fileno@plt>
   145cc:	ldr	lr, [fp, #-8]
   145d0:	mov	r1, sp
   145d4:	str	lr, [r1, #8]
   145d8:	mov	lr, #0
   145dc:	str	lr, [r1, #4]
   145e0:	str	lr, [r1]
   145e4:	mov	r2, lr
   145e8:	mov	r3, lr
   145ec:	bl	14538 <__assert_fail@plt+0x2f5c>
   145f0:	mov	sp, fp
   145f4:	pop	{fp, pc}
   145f8:	push	{fp, lr}
   145fc:	mov	fp, sp
   14600:	sub	sp, sp, #32
   14604:	str	r0, [fp, #-8]
   14608:	movw	r0, #0
   1460c:	str	r0, [fp, #-12]
   14610:	str	r0, [sp, #12]
   14614:	ldr	r0, [fp, #-8]
   14618:	bl	11528 <fileno@plt>
   1461c:	str	r0, [sp, #16]
   14620:	ldr	r0, [sp, #16]
   14624:	cmp	r0, #0
   14628:	bge	1463c <__assert_fail@plt+0x3060>
   1462c:	ldr	r0, [fp, #-8]
   14630:	bl	11534 <fclose@plt>
   14634:	str	r0, [fp, #-4]
   14638:	b	146d8 <__assert_fail@plt+0x30fc>
   1463c:	ldr	r0, [fp, #-8]
   14640:	bl	11450 <__freading@plt>
   14644:	cmp	r0, #0
   14648:	beq	14680 <__assert_fail@plt+0x30a4>
   1464c:	ldr	r0, [fp, #-8]
   14650:	bl	11528 <fileno@plt>
   14654:	mov	lr, sp
   14658:	mov	r1, #1
   1465c:	str	r1, [lr]
   14660:	mov	r1, #0
   14664:	mov	r2, r1
   14668:	mov	r3, r1
   1466c:	bl	113cc <lseek64@plt>
   14670:	and	r0, r0, r1
   14674:	cmn	r0, #1
   14678:	beq	1469c <__assert_fail@plt+0x30c0>
   1467c:	b	14680 <__assert_fail@plt+0x30a4>
   14680:	ldr	r0, [fp, #-8]
   14684:	bl	146e4 <__assert_fail@plt+0x3108>
   14688:	cmp	r0, #0
   1468c:	beq	1469c <__assert_fail@plt+0x30c0>
   14690:	bl	114e0 <__errno_location@plt>
   14694:	ldr	r0, [r0]
   14698:	str	r0, [fp, #-12]
   1469c:	ldr	r0, [fp, #-8]
   146a0:	bl	11534 <fclose@plt>
   146a4:	str	r0, [sp, #12]
   146a8:	ldr	r0, [fp, #-12]
   146ac:	cmp	r0, #0
   146b0:	beq	146d0 <__assert_fail@plt+0x30f4>
   146b4:	ldr	r0, [fp, #-12]
   146b8:	str	r0, [sp, #8]
   146bc:	bl	114e0 <__errno_location@plt>
   146c0:	ldr	lr, [sp, #8]
   146c4:	str	lr, [r0]
   146c8:	mvn	r0, #0
   146cc:	str	r0, [sp, #12]
   146d0:	ldr	r0, [sp, #12]
   146d4:	str	r0, [fp, #-4]
   146d8:	ldr	r0, [fp, #-4]
   146dc:	mov	sp, fp
   146e0:	pop	{fp, pc}
   146e4:	push	{fp, lr}
   146e8:	mov	fp, sp
   146ec:	sub	sp, sp, #8
   146f0:	str	r0, [sp]
   146f4:	ldr	r0, [sp]
   146f8:	movw	r1, #0
   146fc:	cmp	r0, r1
   14700:	beq	14714 <__assert_fail@plt+0x3138>
   14704:	ldr	r0, [sp]
   14708:	bl	11450 <__freading@plt>
   1470c:	cmp	r0, #0
   14710:	bne	14724 <__assert_fail@plt+0x3148>
   14714:	ldr	r0, [sp]
   14718:	bl	1130c <fflush@plt>
   1471c:	str	r0, [sp, #4]
   14720:	b	14738 <__assert_fail@plt+0x315c>
   14724:	ldr	r0, [sp]
   14728:	bl	14744 <__assert_fail@plt+0x3168>
   1472c:	ldr	r0, [sp]
   14730:	bl	1130c <fflush@plt>
   14734:	str	r0, [sp, #4]
   14738:	ldr	r0, [sp, #4]
   1473c:	mov	sp, fp
   14740:	pop	{fp, pc}
   14744:	push	{fp, lr}
   14748:	mov	fp, sp
   1474c:	sub	sp, sp, #16
   14750:	str	r0, [fp, #-4]
   14754:	ldr	r0, [fp, #-4]
   14758:	ldr	r0, [r0]
   1475c:	and	r0, r0, #256	; 0x100
   14760:	cmp	r0, #0
   14764:	beq	1478c <__assert_fail@plt+0x31b0>
   14768:	ldr	r0, [fp, #-4]
   1476c:	mov	r1, sp
   14770:	mov	r2, #1
   14774:	str	r2, [r1]
   14778:	mov	r1, #0
   1477c:	mov	r2, r1
   14780:	mov	r3, r1
   14784:	bl	147d4 <__assert_fail@plt+0x31f8>
   14788:	str	r0, [sp, #8]
   1478c:	mov	sp, fp
   14790:	pop	{fp, pc}
   14794:	push	{fp, lr}
   14798:	mov	fp, sp
   1479c:	sub	sp, sp, #16
   147a0:	str	r0, [fp, #-4]
   147a4:	bl	114e0 <__errno_location@plt>
   147a8:	ldr	r0, [r0]
   147ac:	str	r0, [sp, #8]
   147b0:	ldr	r0, [fp, #-4]
   147b4:	bl	11330 <free@plt>
   147b8:	ldr	r0, [sp, #8]
   147bc:	str	r0, [sp, #4]
   147c0:	bl	114e0 <__errno_location@plt>
   147c4:	ldr	lr, [sp, #4]
   147c8:	str	lr, [r0]
   147cc:	mov	sp, fp
   147d0:	pop	{fp, pc}
   147d4:	push	{fp, lr}
   147d8:	mov	fp, sp
   147dc:	sub	sp, sp, #32
   147e0:	ldr	r1, [fp, #8]
   147e4:	str	r0, [fp, #-8]
   147e8:	str	r3, [sp, #20]
   147ec:	str	r2, [sp, #16]
   147f0:	ldr	r0, [fp, #-8]
   147f4:	ldr	r0, [r0, #8]
   147f8:	ldr	r2, [fp, #-8]
   147fc:	ldr	r2, [r2, #4]
   14800:	cmp	r0, r2
   14804:	str	r1, [sp, #4]
   14808:	bne	148b4 <__assert_fail@plt+0x32d8>
   1480c:	ldr	r0, [fp, #-8]
   14810:	ldr	r0, [r0, #20]
   14814:	ldr	r1, [fp, #-8]
   14818:	ldr	r1, [r1, #16]
   1481c:	cmp	r0, r1
   14820:	bne	148b4 <__assert_fail@plt+0x32d8>
   14824:	ldr	r0, [fp, #-8]
   14828:	ldr	r0, [r0, #36]	; 0x24
   1482c:	movw	r1, #0
   14830:	cmp	r0, r1
   14834:	bne	148b4 <__assert_fail@plt+0x32d8>
   14838:	ldr	r0, [fp, #-8]
   1483c:	bl	11528 <fileno@plt>
   14840:	ldr	r2, [sp, #16]
   14844:	ldr	r3, [sp, #20]
   14848:	ldr	lr, [fp, #8]
   1484c:	mov	r1, sp
   14850:	str	lr, [r1]
   14854:	bl	113cc <lseek64@plt>
   14858:	str	r1, [sp, #12]
   1485c:	str	r0, [sp, #8]
   14860:	ldr	r0, [sp, #8]
   14864:	ldr	r1, [sp, #12]
   14868:	and	r0, r0, r1
   1486c:	cmn	r0, #1
   14870:	bne	14884 <__assert_fail@plt+0x32a8>
   14874:	b	14878 <__assert_fail@plt+0x329c>
   14878:	mvn	r0, #0
   1487c:	str	r0, [fp, #-4]
   14880:	b	148d4 <__assert_fail@plt+0x32f8>
   14884:	ldr	r0, [fp, #-8]
   14888:	ldr	r1, [r0]
   1488c:	bic	r1, r1, #16
   14890:	str	r1, [r0]
   14894:	ldr	r0, [sp, #8]
   14898:	ldr	r1, [sp, #12]
   1489c:	ldr	r2, [fp, #-8]
   148a0:	str	r1, [r2, #84]	; 0x54
   148a4:	str	r0, [r2, #80]	; 0x50
   148a8:	movw	r0, #0
   148ac:	str	r0, [fp, #-4]
   148b0:	b	148d4 <__assert_fail@plt+0x32f8>
   148b4:	ldr	r0, [fp, #-8]
   148b8:	ldr	r2, [sp, #16]
   148bc:	ldr	r3, [sp, #20]
   148c0:	ldr	r1, [fp, #8]
   148c4:	mov	ip, sp
   148c8:	str	r1, [ip]
   148cc:	bl	11540 <fseeko64@plt>
   148d0:	str	r0, [fp, #-4]
   148d4:	ldr	r0, [fp, #-4]
   148d8:	mov	sp, fp
   148dc:	pop	{fp, pc}
   148e0:	push	{fp, lr}
   148e4:	mov	fp, sp
   148e8:	sub	sp, sp, #32
   148ec:	str	r0, [fp, #-8]
   148f0:	str	r1, [fp, #-4]
   148f4:	str	r2, [fp, #-12]
   148f8:	ldr	r0, [fp, #-12]
   148fc:	add	r0, r0, #20
   14900:	str	r0, [sp, #16]
   14904:	ldr	r0, [sp, #16]
   14908:	mov	r1, #0
   1490c:	strb	r1, [r0]
   14910:	mov	r0, #1
   14914:	cmp	r0, #0
   14918:	bne	149a8 <__assert_fail@plt+0x33cc>
   1491c:	b	14920 <__assert_fail@plt+0x3344>
   14920:	b	14924 <__assert_fail@plt+0x3348>
   14924:	ldr	r0, [fp, #-8]
   14928:	ldr	r1, [fp, #-4]
   1492c:	mov	r2, #10
   14930:	mov	r3, #0
   14934:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   14938:	rsb	r2, r2, #48	; 0x30
   1493c:	ldr	r3, [sp, #16]
   14940:	mvn	lr, #0
   14944:	add	ip, r3, lr
   14948:	str	ip, [sp, #16]
   1494c:	add	r3, r3, lr
   14950:	strb	r2, [r3]
   14954:	str	r0, [sp, #12]
   14958:	str	r1, [sp, #8]
   1495c:	ldr	r0, [fp, #-8]
   14960:	ldr	r1, [fp, #-4]
   14964:	mov	r2, #10
   14968:	mov	r3, #0
   1496c:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   14970:	str	r1, [fp, #-4]
   14974:	str	r0, [fp, #-8]
   14978:	orr	r0, r0, r1
   1497c:	cmp	r0, #0
   14980:	bne	14924 <__assert_fail@plt+0x3348>
   14984:	b	14988 <__assert_fail@plt+0x33ac>
   14988:	ldr	r0, [sp, #16]
   1498c:	mvn	r1, #0
   14990:	add	r2, r0, r1
   14994:	str	r2, [sp, #16]
   14998:	add	r0, r0, r1
   1499c:	movw	r1, #45	; 0x2d
   149a0:	strb	r1, [r0]
   149a4:	b	14a14 <__assert_fail@plt+0x3438>
   149a8:	b	149ac <__assert_fail@plt+0x33d0>
   149ac:	ldr	r0, [fp, #-8]
   149b0:	ldr	r1, [fp, #-4]
   149b4:	mov	r2, #10
   149b8:	mov	r3, #0
   149bc:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   149c0:	orr	r2, r2, #48	; 0x30
   149c4:	ldr	r3, [sp, #16]
   149c8:	mvn	lr, #0
   149cc:	add	ip, r3, lr
   149d0:	str	ip, [sp, #16]
   149d4:	add	r3, r3, lr
   149d8:	strb	r2, [r3]
   149dc:	str	r0, [sp, #4]
   149e0:	str	r1, [sp]
   149e4:	ldr	r0, [fp, #-8]
   149e8:	ldr	r1, [fp, #-4]
   149ec:	mov	r2, #10
   149f0:	mov	r3, #0
   149f4:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   149f8:	str	r1, [fp, #-4]
   149fc:	str	r0, [fp, #-8]
   14a00:	orr	r0, r0, r1
   14a04:	cmp	r0, #0
   14a08:	bne	149ac <__assert_fail@plt+0x33d0>
   14a0c:	b	14a10 <__assert_fail@plt+0x3434>
   14a10:	b	14a14 <__assert_fail@plt+0x3438>
   14a14:	ldr	r0, [sp, #16]
   14a18:	mov	sp, fp
   14a1c:	pop	{fp, pc}
   14a20:	push	{fp, lr}
   14a24:	mov	fp, sp
   14a28:	sub	sp, sp, #16
   14a2c:	str	r0, [fp, #-4]
   14a30:	ldr	r0, [fp, #-4]
   14a34:	bl	11318 <wcwidth@plt>
   14a38:	str	r0, [sp, #8]
   14a3c:	ldr	r0, [sp, #8]
   14a40:	cmp	r0, #0
   14a44:	blt	14a54 <__assert_fail@plt+0x3478>
   14a48:	ldr	r0, [sp, #8]
   14a4c:	str	r0, [sp, #4]
   14a50:	b	14a78 <__assert_fail@plt+0x349c>
   14a54:	ldr	r0, [fp, #-4]
   14a58:	bl	1139c <iswcntrl@plt>
   14a5c:	cmp	r0, #0
   14a60:	movw	r0, #0
   14a64:	movne	r0, #1
   14a68:	tst	r0, #1
   14a6c:	movw	r0, #0
   14a70:	moveq	r0, #1
   14a74:	str	r0, [sp, #4]
   14a78:	ldr	r0, [sp, #4]
   14a7c:	mov	sp, fp
   14a80:	pop	{fp, pc}
   14a84:	push	{fp, lr}
   14a88:	mov	fp, sp
   14a8c:	sub	sp, sp, #8
   14a90:	str	r0, [sp, #4]
   14a94:	str	r1, [sp]
   14a98:	ldr	r0, [sp]
   14a9c:	ldr	r0, [r0]
   14aa0:	ldr	r1, [sp]
   14aa4:	add	r1, r1, #16
   14aa8:	cmp	r0, r1
   14aac:	bne	14ae0 <__assert_fail@plt+0x3504>
   14ab0:	ldr	r0, [sp, #4]
   14ab4:	add	r0, r0, #16
   14ab8:	ldr	r1, [sp]
   14abc:	add	r1, r1, #16
   14ac0:	ldr	r2, [sp]
   14ac4:	ldr	r2, [r2, #4]
   14ac8:	bl	11354 <memcpy@plt>
   14acc:	ldr	r0, [sp, #4]
   14ad0:	add	r0, r0, #16
   14ad4:	ldr	r1, [sp, #4]
   14ad8:	str	r0, [r1]
   14adc:	b	14af0 <__assert_fail@plt+0x3514>
   14ae0:	ldr	r0, [sp]
   14ae4:	ldr	r0, [r0]
   14ae8:	ldr	r1, [sp, #4]
   14aec:	str	r0, [r1]
   14af0:	ldr	r0, [sp]
   14af4:	ldr	r0, [r0, #4]
   14af8:	ldr	r1, [sp, #4]
   14afc:	str	r0, [r1, #4]
   14b00:	ldr	r0, [sp]
   14b04:	ldrb	r0, [r0, #8]
   14b08:	ldr	r1, [sp, #4]
   14b0c:	and	r2, r0, #1
   14b10:	strb	r2, [r1, #8]
   14b14:	tst	r0, #1
   14b18:	beq	14b2c <__assert_fail@plt+0x3550>
   14b1c:	ldr	r0, [sp]
   14b20:	ldr	r0, [r0, #12]
   14b24:	ldr	r1, [sp, #4]
   14b28:	str	r0, [r1, #12]
   14b2c:	mov	sp, fp
   14b30:	pop	{fp, pc}
   14b34:	sub	sp, sp, #8
   14b38:	movw	r1, #60796	; 0xed7c
   14b3c:	movt	r1, #1
   14b40:	strb	r0, [sp, #7]
   14b44:	ldrb	r0, [sp, #7]
   14b48:	lsr	r0, r0, #5
   14b4c:	movw	r2, #60796	; 0xed7c
   14b50:	movt	r2, #1
   14b54:	add	r0, r2, r0, lsl #2
   14b58:	ldr	r0, [r0]
   14b5c:	ldrb	r2, [sp, #7]
   14b60:	and	r2, r2, #31
   14b64:	lsr	r0, r0, r2
   14b68:	and	r0, r0, #1
   14b6c:	cmp	r0, #0
   14b70:	movw	r0, #0
   14b74:	movne	r0, #1
   14b78:	and	r0, r0, #1
   14b7c:	str	r1, [sp]
   14b80:	add	sp, sp, #8
   14b84:	bx	lr
   14b88:	push	{fp, lr}
   14b8c:	mov	fp, sp
   14b90:	sub	sp, sp, #32
   14b94:	str	r0, [fp, #-8]
   14b98:	str	r1, [fp, #-12]
   14b9c:	str	r2, [sp, #16]
   14ba0:	str	r3, [sp, #12]
   14ba4:	ldr	r0, [fp, #-8]
   14ba8:	movw	r1, #0
   14bac:	cmp	r0, r1
   14bb0:	bne	14bbc <__assert_fail@plt+0x35e0>
   14bb4:	add	r0, sp, #4
   14bb8:	str	r0, [fp, #-8]
   14bbc:	ldr	r0, [fp, #-8]
   14bc0:	ldr	r1, [fp, #-12]
   14bc4:	ldr	r2, [sp, #16]
   14bc8:	ldr	r3, [sp, #12]
   14bcc:	bl	113fc <mbrtowc@plt>
   14bd0:	str	r0, [sp, #8]
   14bd4:	ldr	r0, [sp, #8]
   14bd8:	mvn	r1, #1
   14bdc:	cmp	r1, r0
   14be0:	bhi	14c24 <__assert_fail@plt+0x3648>
   14be4:	ldr	r0, [sp, #16]
   14be8:	cmp	r0, #0
   14bec:	beq	14c24 <__assert_fail@plt+0x3648>
   14bf0:	movw	r0, #0
   14bf4:	bl	1b8d4 <__assert_fail@plt+0xa2f8>
   14bf8:	tst	r0, #1
   14bfc:	bne	14c24 <__assert_fail@plt+0x3648>
   14c00:	ldr	r0, [fp, #-12]
   14c04:	ldrb	r0, [r0]
   14c08:	strb	r0, [sp, #3]
   14c0c:	ldrb	r0, [sp, #3]
   14c10:	ldr	r1, [fp, #-8]
   14c14:	str	r0, [r1]
   14c18:	movw	r0, #1
   14c1c:	str	r0, [fp, #-4]
   14c20:	b	14c2c <__assert_fail@plt+0x3650>
   14c24:	ldr	r0, [sp, #8]
   14c28:	str	r0, [fp, #-4]
   14c2c:	ldr	r0, [fp, #-4]
   14c30:	mov	sp, fp
   14c34:	pop	{fp, pc}
   14c38:	push	{fp, lr}
   14c3c:	mov	fp, sp
   14c40:	sub	sp, sp, #88	; 0x58
   14c44:	movw	r0, #85	; 0x55
   14c48:	bl	11378 <sysconf@plt>
   14c4c:	vmov	s0, r0
   14c50:	vcvt.f64.s32	d16, s0
   14c54:	vstr	d16, [fp, #-16]
   14c58:	movw	r0, #30
   14c5c:	bl	11378 <sysconf@plt>
   14c60:	vldr	d16, [pc, #136]	; 14cf0 <__assert_fail@plt+0x3714>
   14c64:	vmov	s0, r0
   14c68:	vcvt.f64.s32	d17, s0
   14c6c:	vstr	d17, [fp, #-24]	; 0xffffffe8
   14c70:	vldr	d17, [fp, #-16]
   14c74:	vcmpe.f64	d16, d17
   14c78:	vmrs	APSR_nzcv, fpscr
   14c7c:	bhi	14ca8 <__assert_fail@plt+0x36cc>
   14c80:	vldr	d16, [pc, #104]	; 14cf0 <__assert_fail@plt+0x3714>
   14c84:	vldr	d17, [fp, #-24]	; 0xffffffe8
   14c88:	vcmpe.f64	d16, d17
   14c8c:	vmrs	APSR_nzcv, fpscr
   14c90:	bhi	14ca8 <__assert_fail@plt+0x36cc>
   14c94:	vldr	d16, [fp, #-16]
   14c98:	vldr	d17, [fp, #-24]	; 0xffffffe8
   14c9c:	vmul.f64	d16, d16, d17
   14ca0:	vstr	d16, [fp, #-8]
   14ca4:	b	14ce4 <__assert_fail@plt+0x3708>
   14ca8:	mov	r0, sp
   14cac:	bl	1142c <sysinfo@plt>
   14cb0:	cmp	r0, #0
   14cb4:	bne	14cdc <__assert_fail@plt+0x3700>
   14cb8:	ldr	r0, [sp, #16]
   14cbc:	vmov	s0, r0
   14cc0:	vcvt.f64.u32	d16, s0
   14cc4:	ldr	r0, [sp, #52]	; 0x34
   14cc8:	vmov	s0, r0
   14ccc:	vcvt.f64.u32	d17, s0
   14cd0:	vmul.f64	d16, d16, d17
   14cd4:	vstr	d16, [fp, #-8]
   14cd8:	b	14ce4 <__assert_fail@plt+0x3708>
   14cdc:	vldr	d16, [pc, #20]	; 14cf8 <__assert_fail@plt+0x371c>
   14ce0:	vstr	d16, [fp, #-8]
   14ce4:	vldr	d0, [fp, #-8]
   14ce8:	mov	sp, fp
   14cec:	pop	{fp, pc}
	...
   14cfc:	orrsmi	r0, r0, r0
   14d00:	push	{fp, lr}
   14d04:	mov	fp, sp
   14d08:	sub	sp, sp, #88	; 0x58
   14d0c:	movw	r0, #86	; 0x56
   14d10:	bl	11378 <sysconf@plt>
   14d14:	vmov	s0, r0
   14d18:	vcvt.f64.s32	d16, s0
   14d1c:	vstr	d16, [fp, #-16]
   14d20:	movw	r0, #30
   14d24:	bl	11378 <sysconf@plt>
   14d28:	vldr	d16, [pc, #160]	; 14dd0 <__assert_fail@plt+0x37f4>
   14d2c:	vmov	s0, r0
   14d30:	vcvt.f64.s32	d17, s0
   14d34:	vstr	d17, [fp, #-24]	; 0xffffffe8
   14d38:	vldr	d17, [fp, #-16]
   14d3c:	vcmpe.f64	d16, d17
   14d40:	vmrs	APSR_nzcv, fpscr
   14d44:	bhi	14d70 <__assert_fail@plt+0x3794>
   14d48:	vldr	d16, [pc, #128]	; 14dd0 <__assert_fail@plt+0x37f4>
   14d4c:	vldr	d17, [fp, #-24]	; 0xffffffe8
   14d50:	vcmpe.f64	d16, d17
   14d54:	vmrs	APSR_nzcv, fpscr
   14d58:	bhi	14d70 <__assert_fail@plt+0x3794>
   14d5c:	vldr	d16, [fp, #-16]
   14d60:	vldr	d17, [fp, #-24]	; 0xffffffe8
   14d64:	vmul.f64	d16, d16, d17
   14d68:	vstr	d16, [fp, #-8]
   14d6c:	b	14dc4 <__assert_fail@plt+0x37e8>
   14d70:	mov	r0, sp
   14d74:	bl	1142c <sysinfo@plt>
   14d78:	cmp	r0, #0
   14d7c:	bne	14db4 <__assert_fail@plt+0x37d8>
   14d80:	ldr	r0, [sp, #20]
   14d84:	vmov	s0, r0
   14d88:	vcvt.f64.u32	d16, s0
   14d8c:	ldr	r0, [sp, #28]
   14d90:	vmov	s0, r0
   14d94:	vcvt.f64.u32	d17, s0
   14d98:	vadd.f64	d16, d16, d17
   14d9c:	ldr	r0, [sp, #52]	; 0x34
   14da0:	vmov	s0, r0
   14da4:	vcvt.f64.u32	d17, s0
   14da8:	vmul.f64	d16, d16, d17
   14dac:	vstr	d16, [fp, #-8]
   14db0:	b	14dc4 <__assert_fail@plt+0x37e8>
   14db4:	bl	14c38 <__assert_fail@plt+0x365c>
   14db8:	vmov.f64	d16, #16	; 0x40800000  4.0
   14dbc:	vdiv.f64	d16, d0, d16
   14dc0:	vstr	d16, [fp, #-8]
   14dc4:	vldr	d0, [fp, #-8]
   14dc8:	mov	sp, fp
   14dcc:	pop	{fp, pc}
	...
   14dd8:	push	{fp, lr}
   14ddc:	mov	fp, sp
   14de0:	sub	sp, sp, #24
   14de4:	str	r0, [fp, #-4]
   14de8:	ldr	r0, [fp, #-4]
   14dec:	movw	r1, #0
   14df0:	cmp	r0, r1
   14df4:	bne	14e18 <__assert_fail@plt+0x383c>
   14df8:	movw	r0, #392	; 0x188
   14dfc:	movt	r0, #3
   14e00:	ldr	r1, [r0]
   14e04:	movw	r0, #60828	; 0xed9c
   14e08:	movt	r0, #1
   14e0c:	bl	115a0 <fputs@plt>
   14e10:	str	r0, [sp, #8]
   14e14:	bl	115b8 <abort@plt>
   14e18:	ldr	r0, [fp, #-4]
   14e1c:	movw	r1, #47	; 0x2f
   14e20:	bl	11558 <strrchr@plt>
   14e24:	str	r0, [fp, #-8]
   14e28:	ldr	r0, [fp, #-8]
   14e2c:	movw	r1, #0
   14e30:	cmp	r0, r1
   14e34:	beq	14e48 <__assert_fail@plt+0x386c>
   14e38:	ldr	r0, [fp, #-8]
   14e3c:	add	r0, r0, #1
   14e40:	str	r0, [sp, #4]
   14e44:	b	14e50 <__assert_fail@plt+0x3874>
   14e48:	ldr	r0, [fp, #-4]
   14e4c:	str	r0, [sp, #4]
   14e50:	ldr	r0, [sp, #4]
   14e54:	str	r0, [sp, #12]
   14e58:	ldr	r0, [sp, #12]
   14e5c:	ldr	r1, [fp, #-4]
   14e60:	sub	r0, r0, r1
   14e64:	cmp	r0, #7
   14e68:	blt	14ed4 <__assert_fail@plt+0x38f8>
   14e6c:	ldr	r0, [sp, #12]
   14e70:	mvn	r1, #6
   14e74:	add	r0, r0, r1
   14e78:	movw	r1, #60884	; 0xedd4
   14e7c:	movt	r1, #1
   14e80:	movw	r2, #7
   14e84:	bl	115ac <strncmp@plt>
   14e88:	cmp	r0, #0
   14e8c:	bne	14ed4 <__assert_fail@plt+0x38f8>
   14e90:	ldr	r0, [sp, #12]
   14e94:	str	r0, [fp, #-4]
   14e98:	ldr	r0, [sp, #12]
   14e9c:	movw	r1, #60892	; 0xeddc
   14ea0:	movt	r1, #1
   14ea4:	movw	r2, #3
   14ea8:	bl	115ac <strncmp@plt>
   14eac:	cmp	r0, #0
   14eb0:	bne	14ed0 <__assert_fail@plt+0x38f4>
   14eb4:	ldr	r0, [sp, #12]
   14eb8:	add	r0, r0, #3
   14ebc:	str	r0, [fp, #-4]
   14ec0:	ldr	r0, [fp, #-4]
   14ec4:	movw	r1, #376	; 0x178
   14ec8:	movt	r1, #3
   14ecc:	str	r0, [r1]
   14ed0:	b	14ed4 <__assert_fail@plt+0x38f8>
   14ed4:	ldr	r0, [fp, #-4]
   14ed8:	movw	r1, #496	; 0x1f0
   14edc:	movt	r1, #3
   14ee0:	str	r0, [r1]
   14ee4:	ldr	r0, [fp, #-4]
   14ee8:	movw	r1, #380	; 0x17c
   14eec:	movt	r1, #3
   14ef0:	str	r0, [r1]
   14ef4:	mov	sp, fp
   14ef8:	pop	{fp, pc}
   14efc:	push	{fp, lr}
   14f00:	mov	fp, sp
   14f04:	sub	sp, sp, #24
   14f08:	str	r0, [fp, #-4]
   14f0c:	bl	114e0 <__errno_location@plt>
   14f10:	ldr	r0, [r0]
   14f14:	str	r0, [fp, #-8]
   14f18:	ldr	r0, [fp, #-4]
   14f1c:	movw	lr, #0
   14f20:	cmp	r0, lr
   14f24:	beq	14f34 <__assert_fail@plt+0x3958>
   14f28:	ldr	r0, [fp, #-4]
   14f2c:	str	r0, [sp, #8]
   14f30:	b	14f44 <__assert_fail@plt+0x3968>
   14f34:	movw	r0, #500	; 0x1f4
   14f38:	movt	r0, #3
   14f3c:	str	r0, [sp, #8]
   14f40:	b	14f44 <__assert_fail@plt+0x3968>
   14f44:	ldr	r0, [sp, #8]
   14f48:	movw	r1, #48	; 0x30
   14f4c:	bl	1b3d4 <__assert_fail@plt+0x9df8>
   14f50:	str	r0, [sp, #12]
   14f54:	ldr	r0, [fp, #-8]
   14f58:	str	r0, [sp, #4]
   14f5c:	bl	114e0 <__errno_location@plt>
   14f60:	ldr	r1, [sp, #4]
   14f64:	str	r1, [r0]
   14f68:	ldr	r0, [sp, #12]
   14f6c:	mov	sp, fp
   14f70:	pop	{fp, pc}
   14f74:	sub	sp, sp, #8
   14f78:	str	r0, [sp, #4]
   14f7c:	ldr	r0, [sp, #4]
   14f80:	movw	r1, #0
   14f84:	cmp	r0, r1
   14f88:	beq	14f98 <__assert_fail@plt+0x39bc>
   14f8c:	ldr	r0, [sp, #4]
   14f90:	str	r0, [sp]
   14f94:	b	14fa8 <__assert_fail@plt+0x39cc>
   14f98:	movw	r0, #500	; 0x1f4
   14f9c:	movt	r0, #3
   14fa0:	str	r0, [sp]
   14fa4:	b	14fa8 <__assert_fail@plt+0x39cc>
   14fa8:	ldr	r0, [sp]
   14fac:	ldr	r0, [r0]
   14fb0:	add	sp, sp, #8
   14fb4:	bx	lr
   14fb8:	sub	sp, sp, #16
   14fbc:	str	r0, [sp, #12]
   14fc0:	str	r1, [sp, #8]
   14fc4:	ldr	r0, [sp, #8]
   14fc8:	ldr	r1, [sp, #12]
   14fcc:	movw	r2, #0
   14fd0:	cmp	r1, r2
   14fd4:	str	r0, [sp, #4]
   14fd8:	beq	14fe8 <__assert_fail@plt+0x3a0c>
   14fdc:	ldr	r0, [sp, #12]
   14fe0:	str	r0, [sp]
   14fe4:	b	14ff8 <__assert_fail@plt+0x3a1c>
   14fe8:	movw	r0, #500	; 0x1f4
   14fec:	movt	r0, #3
   14ff0:	str	r0, [sp]
   14ff4:	b	14ff8 <__assert_fail@plt+0x3a1c>
   14ff8:	ldr	r0, [sp]
   14ffc:	ldr	r1, [sp, #4]
   15000:	str	r1, [r0]
   15004:	add	sp, sp, #16
   15008:	bx	lr
   1500c:	sub	sp, sp, #32
   15010:	str	r0, [sp, #28]
   15014:	strb	r1, [sp, #27]
   15018:	str	r2, [sp, #20]
   1501c:	ldrb	r0, [sp, #27]
   15020:	strb	r0, [sp, #19]
   15024:	ldr	r0, [sp, #28]
   15028:	movw	r1, #0
   1502c:	cmp	r0, r1
   15030:	beq	15040 <__assert_fail@plt+0x3a64>
   15034:	ldr	r0, [sp, #28]
   15038:	str	r0, [sp]
   1503c:	b	15050 <__assert_fail@plt+0x3a74>
   15040:	movw	r0, #500	; 0x1f4
   15044:	movt	r0, #3
   15048:	str	r0, [sp]
   1504c:	b	15050 <__assert_fail@plt+0x3a74>
   15050:	ldr	r0, [sp]
   15054:	add	r0, r0, #8
   15058:	ldrb	r1, [sp, #19]
   1505c:	lsr	r1, r1, #5
   15060:	add	r0, r0, r1, lsl #2
   15064:	str	r0, [sp, #12]
   15068:	ldrb	r0, [sp, #19]
   1506c:	and	r0, r0, #31
   15070:	str	r0, [sp, #8]
   15074:	ldr	r0, [sp, #12]
   15078:	ldr	r0, [r0]
   1507c:	ldr	r1, [sp, #8]
   15080:	lsr	r0, r0, r1
   15084:	and	r0, r0, #1
   15088:	str	r0, [sp, #4]
   1508c:	ldr	r0, [sp, #20]
   15090:	and	r0, r0, #1
   15094:	ldr	r1, [sp, #4]
   15098:	eor	r0, r0, r1
   1509c:	ldr	r1, [sp, #8]
   150a0:	lsl	r0, r0, r1
   150a4:	ldr	r1, [sp, #12]
   150a8:	ldr	r2, [r1]
   150ac:	eor	r0, r2, r0
   150b0:	str	r0, [r1]
   150b4:	ldr	r0, [sp, #4]
   150b8:	add	sp, sp, #32
   150bc:	bx	lr
   150c0:	sub	sp, sp, #12
   150c4:	str	r0, [sp, #8]
   150c8:	str	r1, [sp, #4]
   150cc:	ldr	r0, [sp, #8]
   150d0:	movw	r1, #0
   150d4:	cmp	r0, r1
   150d8:	bne	150e8 <__assert_fail@plt+0x3b0c>
   150dc:	movw	r0, #500	; 0x1f4
   150e0:	movt	r0, #3
   150e4:	str	r0, [sp, #8]
   150e8:	ldr	r0, [sp, #8]
   150ec:	ldr	r0, [r0, #4]
   150f0:	str	r0, [sp]
   150f4:	ldr	r0, [sp, #4]
   150f8:	ldr	r1, [sp, #8]
   150fc:	str	r0, [r1, #4]
   15100:	ldr	r0, [sp]
   15104:	add	sp, sp, #12
   15108:	bx	lr
   1510c:	push	{fp, lr}
   15110:	mov	fp, sp
   15114:	sub	sp, sp, #16
   15118:	str	r0, [fp, #-4]
   1511c:	str	r1, [sp, #8]
   15120:	str	r2, [sp, #4]
   15124:	ldr	r0, [fp, #-4]
   15128:	movw	r1, #0
   1512c:	cmp	r0, r1
   15130:	bne	15140 <__assert_fail@plt+0x3b64>
   15134:	movw	r0, #500	; 0x1f4
   15138:	movt	r0, #3
   1513c:	str	r0, [fp, #-4]
   15140:	ldr	r0, [fp, #-4]
   15144:	movw	r1, #10
   15148:	str	r1, [r0]
   1514c:	ldr	r0, [sp, #8]
   15150:	movw	r1, #0
   15154:	cmp	r0, r1
   15158:	beq	1516c <__assert_fail@plt+0x3b90>
   1515c:	ldr	r0, [sp, #4]
   15160:	movw	r1, #0
   15164:	cmp	r0, r1
   15168:	bne	15170 <__assert_fail@plt+0x3b94>
   1516c:	bl	115b8 <abort@plt>
   15170:	ldr	r0, [sp, #8]
   15174:	ldr	r1, [fp, #-4]
   15178:	str	r0, [r1, #40]	; 0x28
   1517c:	ldr	r0, [sp, #4]
   15180:	ldr	r1, [fp, #-4]
   15184:	str	r0, [r1, #44]	; 0x2c
   15188:	mov	sp, fp
   1518c:	pop	{fp, pc}
   15190:	push	{r4, r5, r6, sl, fp, lr}
   15194:	add	fp, sp, #16
   15198:	sub	sp, sp, #64	; 0x40
   1519c:	ldr	ip, [fp, #8]
   151a0:	str	r0, [fp, #-20]	; 0xffffffec
   151a4:	str	r1, [fp, #-24]	; 0xffffffe8
   151a8:	str	r2, [fp, #-28]	; 0xffffffe4
   151ac:	str	r3, [fp, #-32]	; 0xffffffe0
   151b0:	ldr	r0, [fp, #8]
   151b4:	movw	r1, #0
   151b8:	cmp	r0, r1
   151bc:	str	ip, [sp, #32]
   151c0:	beq	151d0 <__assert_fail@plt+0x3bf4>
   151c4:	ldr	r0, [fp, #8]
   151c8:	str	r0, [sp, #28]
   151cc:	b	151e0 <__assert_fail@plt+0x3c04>
   151d0:	movw	r0, #500	; 0x1f4
   151d4:	movt	r0, #3
   151d8:	str	r0, [sp, #28]
   151dc:	b	151e0 <__assert_fail@plt+0x3c04>
   151e0:	ldr	r0, [sp, #28]
   151e4:	str	r0, [fp, #-36]	; 0xffffffdc
   151e8:	bl	114e0 <__errno_location@plt>
   151ec:	ldr	r0, [r0]
   151f0:	str	r0, [sp, #40]	; 0x28
   151f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   151f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   151fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15200:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15204:	ldr	lr, [fp, #-36]	; 0xffffffdc
   15208:	ldr	lr, [lr]
   1520c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15210:	ldr	ip, [ip, #4]
   15214:	ldr	r4, [fp, #-36]	; 0xffffffdc
   15218:	add	r4, r4, #8
   1521c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   15220:	ldr	r5, [r5, #40]	; 0x28
   15224:	ldr	r6, [fp, #-36]	; 0xffffffdc
   15228:	ldr	r6, [r6, #44]	; 0x2c
   1522c:	str	lr, [sp]
   15230:	str	ip, [sp, #4]
   15234:	str	r4, [sp, #8]
   15238:	str	r5, [sp, #12]
   1523c:	str	r6, [sp, #16]
   15240:	bl	15268 <__assert_fail@plt+0x3c8c>
   15244:	str	r0, [sp, #36]	; 0x24
   15248:	ldr	r0, [sp, #40]	; 0x28
   1524c:	str	r0, [sp, #24]
   15250:	bl	114e0 <__errno_location@plt>
   15254:	ldr	r1, [sp, #24]
   15258:	str	r1, [r0]
   1525c:	ldr	r0, [sp, #36]	; 0x24
   15260:	sub	sp, fp, #16
   15264:	pop	{r4, r5, r6, sl, fp, pc}
   15268:	push	{r4, r5, r6, sl, fp, lr}
   1526c:	add	fp, sp, #16
   15270:	sub	sp, sp, #168	; 0xa8
   15274:	ldr	ip, [fp, #24]
   15278:	ldr	lr, [fp, #20]
   1527c:	ldr	r4, [fp, #16]
   15280:	ldr	r5, [fp, #12]
   15284:	ldr	r6, [fp, #8]
   15288:	str	r0, [fp, #-24]	; 0xffffffe8
   1528c:	str	r1, [fp, #-28]	; 0xffffffe4
   15290:	str	r2, [fp, #-32]	; 0xffffffe0
   15294:	str	r3, [fp, #-36]	; 0xffffffdc
   15298:	movw	r0, #0
   1529c:	str	r0, [fp, #-44]	; 0xffffffd4
   152a0:	str	r0, [fp, #-48]	; 0xffffffd0
   152a4:	str	r0, [fp, #-52]	; 0xffffffcc
   152a8:	str	r0, [fp, #-56]	; 0xffffffc8
   152ac:	movw	r0, #0
   152b0:	strb	r0, [fp, #-57]	; 0xffffffc7
   152b4:	str	r6, [sp, #80]	; 0x50
   152b8:	str	lr, [sp, #76]	; 0x4c
   152bc:	str	r4, [sp, #72]	; 0x48
   152c0:	str	r5, [sp, #68]	; 0x44
   152c4:	str	ip, [sp, #64]	; 0x40
   152c8:	bl	113d8 <__ctype_get_mb_cur_max@plt>
   152cc:	cmp	r0, #1
   152d0:	movw	r0, #0
   152d4:	moveq	r0, #1
   152d8:	and	r0, r0, #1
   152dc:	strb	r0, [fp, #-58]	; 0xffffffc6
   152e0:	ldr	r0, [fp, #12]
   152e4:	and	r0, r0, #2
   152e8:	cmp	r0, #0
   152ec:	movw	r0, #0
   152f0:	movne	r0, #1
   152f4:	and	r0, r0, #1
   152f8:	strb	r0, [fp, #-59]	; 0xffffffc5
   152fc:	movw	r0, #0
   15300:	strb	r0, [fp, #-60]	; 0xffffffc4
   15304:	strb	r0, [fp, #-61]	; 0xffffffc3
   15308:	movw	r0, #1
   1530c:	strb	r0, [fp, #-62]	; 0xffffffc2
   15310:	ldr	r0, [fp, #8]
   15314:	cmp	r0, #10
   15318:	str	r0, [sp, #60]	; 0x3c
   1531c:	bhi	15544 <__assert_fail@plt+0x3f68>
   15320:	add	r0, pc, #8
   15324:	ldr	r1, [sp, #60]	; 0x3c
   15328:	ldr	r0, [r0, r1, lsl #2]
   1532c:	mov	pc, r0
   15330:	andeq	r5, r1, r8, lsr r5
   15334:			; <UNDEFINED> instruction: 0x000154b4
   15338:	ldrdeq	r5, [r1], -r4
   1533c:	andeq	r5, r1, ip, lsr #9
   15340:			; <UNDEFINED> instruction: 0x000154bc
   15344:	andeq	r5, r1, ip, ror #6
   15348:	andeq	r5, r1, ip, asr r3
   1534c:	ldrdeq	r5, [r1], -r0
   15350:	andeq	r5, r1, r4, ror #7
   15354:	andeq	r5, r1, r4, ror #7
   15358:	andeq	r5, r1, r4, ror #7
   1535c:	movw	r0, #5
   15360:	str	r0, [fp, #8]
   15364:	movw	r0, #1
   15368:	strb	r0, [fp, #-59]	; 0xffffffc5
   1536c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15370:	tst	r0, #1
   15374:	bne	153b0 <__assert_fail@plt+0x3dd4>
   15378:	b	1537c <__assert_fail@plt+0x3da0>
   1537c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15380:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15384:	cmp	r0, r1
   15388:	bcs	153a0 <__assert_fail@plt+0x3dc4>
   1538c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15390:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15394:	add	r0, r0, r1
   15398:	movw	r1, #34	; 0x22
   1539c:	strb	r1, [r0]
   153a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   153a4:	add	r0, r0, #1
   153a8:	str	r0, [fp, #-44]	; 0xffffffd4
   153ac:	b	153b0 <__assert_fail@plt+0x3dd4>
   153b0:	movw	r0, #1
   153b4:	strb	r0, [fp, #-57]	; 0xffffffc7
   153b8:	movw	r0, #59955	; 0xea33
   153bc:	movt	r0, #1
   153c0:	str	r0, [fp, #-52]	; 0xffffffcc
   153c4:	movw	r0, #1
   153c8:	str	r0, [fp, #-56]	; 0xffffffc8
   153cc:	b	15548 <__assert_fail@plt+0x3f6c>
   153d0:	movw	r0, #1
   153d4:	strb	r0, [fp, #-57]	; 0xffffffc7
   153d8:	movw	r0, #0
   153dc:	strb	r0, [fp, #-59]	; 0xffffffc5
   153e0:	b	15548 <__assert_fail@plt+0x3f6c>
   153e4:	ldr	r0, [fp, #8]
   153e8:	cmp	r0, #10
   153ec:	beq	15418 <__assert_fail@plt+0x3e3c>
   153f0:	ldr	r1, [fp, #8]
   153f4:	movw	r0, #60972	; 0xee2c
   153f8:	movt	r0, #1
   153fc:	bl	17458 <__assert_fail@plt+0x5e7c>
   15400:	str	r0, [fp, #20]
   15404:	ldr	r1, [fp, #8]
   15408:	movw	r0, #60974	; 0xee2e
   1540c:	movt	r0, #1
   15410:	bl	17458 <__assert_fail@plt+0x5e7c>
   15414:	str	r0, [fp, #24]
   15418:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1541c:	tst	r0, #1
   15420:	bne	1548c <__assert_fail@plt+0x3eb0>
   15424:	ldr	r0, [fp, #20]
   15428:	str	r0, [fp, #-52]	; 0xffffffcc
   1542c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15430:	ldrsb	r0, [r0]
   15434:	cmp	r0, #0
   15438:	beq	15488 <__assert_fail@plt+0x3eac>
   1543c:	b	15440 <__assert_fail@plt+0x3e64>
   15440:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15444:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15448:	cmp	r0, r1
   1544c:	bcs	15468 <__assert_fail@plt+0x3e8c>
   15450:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15454:	ldrb	r0, [r0]
   15458:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1545c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15460:	add	r1, r1, r2
   15464:	strb	r0, [r1]
   15468:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1546c:	add	r0, r0, #1
   15470:	str	r0, [fp, #-44]	; 0xffffffd4
   15474:	b	15478 <__assert_fail@plt+0x3e9c>
   15478:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1547c:	add	r0, r0, #1
   15480:	str	r0, [fp, #-52]	; 0xffffffcc
   15484:	b	1542c <__assert_fail@plt+0x3e50>
   15488:	b	1548c <__assert_fail@plt+0x3eb0>
   1548c:	movw	r0, #1
   15490:	strb	r0, [fp, #-57]	; 0xffffffc7
   15494:	ldr	r0, [fp, #24]
   15498:	str	r0, [fp, #-52]	; 0xffffffcc
   1549c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   154a0:	bl	114b0 <strlen@plt>
   154a4:	str	r0, [fp, #-56]	; 0xffffffc8
   154a8:	b	15548 <__assert_fail@plt+0x3f6c>
   154ac:	movw	r0, #1
   154b0:	strb	r0, [fp, #-57]	; 0xffffffc7
   154b4:	movw	r0, #1
   154b8:	strb	r0, [fp, #-59]	; 0xffffffc5
   154bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   154c0:	tst	r0, #1
   154c4:	bne	154d0 <__assert_fail@plt+0x3ef4>
   154c8:	movw	r0, #1
   154cc:	strb	r0, [fp, #-57]	; 0xffffffc7
   154d0:	b	154d4 <__assert_fail@plt+0x3ef8>
   154d4:	movw	r0, #2
   154d8:	str	r0, [fp, #8]
   154dc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   154e0:	tst	r0, #1
   154e4:	bne	15520 <__assert_fail@plt+0x3f44>
   154e8:	b	154ec <__assert_fail@plt+0x3f10>
   154ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154f4:	cmp	r0, r1
   154f8:	bcs	15510 <__assert_fail@plt+0x3f34>
   154fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15500:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15504:	add	r0, r0, r1
   15508:	movw	r1, #39	; 0x27
   1550c:	strb	r1, [r0]
   15510:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15514:	add	r0, r0, #1
   15518:	str	r0, [fp, #-44]	; 0xffffffd4
   1551c:	b	15520 <__assert_fail@plt+0x3f44>
   15520:	movw	r0, #60974	; 0xee2e
   15524:	movt	r0, #1
   15528:	str	r0, [fp, #-52]	; 0xffffffcc
   1552c:	movw	r0, #1
   15530:	str	r0, [fp, #-56]	; 0xffffffc8
   15534:	b	15548 <__assert_fail@plt+0x3f6c>
   15538:	movw	r0, #0
   1553c:	strb	r0, [fp, #-59]	; 0xffffffc5
   15540:	b	15548 <__assert_fail@plt+0x3f6c>
   15544:	bl	115b8 <abort@plt>
   15548:	movw	r0, #0
   1554c:	str	r0, [fp, #-40]	; 0xffffffd8
   15550:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15554:	cmn	r0, #1
   15558:	bne	15584 <__assert_fail@plt+0x3fa8>
   1555c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15560:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15564:	add	r0, r0, r1
   15568:	ldrb	r0, [r0]
   1556c:	cmp	r0, #0
   15570:	movw	r0, #0
   15574:	moveq	r0, #1
   15578:	and	r0, r0, #1
   1557c:	str	r0, [sp, #56]	; 0x38
   15580:	b	155a0 <__assert_fail@plt+0x3fc4>
   15584:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15588:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1558c:	cmp	r0, r1
   15590:	movw	r0, #0
   15594:	moveq	r0, #1
   15598:	and	r0, r0, #1
   1559c:	str	r0, [sp, #56]	; 0x38
   155a0:	ldr	r0, [sp, #56]	; 0x38
   155a4:	cmp	r0, #0
   155a8:	movw	r0, #0
   155ac:	movne	r0, #1
   155b0:	mvn	r1, #0
   155b4:	eor	r0, r0, r1
   155b8:	tst	r0, #1
   155bc:	beq	167ac <__assert_fail@plt+0x51d0>
   155c0:	movw	r0, #0
   155c4:	strb	r0, [fp, #-65]	; 0xffffffbf
   155c8:	strb	r0, [fp, #-66]	; 0xffffffbe
   155cc:	strb	r0, [fp, #-67]	; 0xffffffbd
   155d0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   155d4:	tst	r0, #1
   155d8:	beq	15684 <__assert_fail@plt+0x40a8>
   155dc:	ldr	r0, [fp, #8]
   155e0:	cmp	r0, #2
   155e4:	beq	15684 <__assert_fail@plt+0x40a8>
   155e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   155ec:	cmp	r0, #0
   155f0:	beq	15684 <__assert_fail@plt+0x40a8>
   155f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   155f8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   155fc:	add	r0, r0, r1
   15600:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15604:	cmn	r1, #1
   15608:	str	r0, [sp, #52]	; 0x34
   1560c:	bne	15634 <__assert_fail@plt+0x4058>
   15610:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15614:	movw	r1, #1
   15618:	cmp	r1, r0
   1561c:	bcs	15634 <__assert_fail@plt+0x4058>
   15620:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15624:	bl	114b0 <strlen@plt>
   15628:	str	r0, [fp, #-36]	; 0xffffffdc
   1562c:	str	r0, [sp, #48]	; 0x30
   15630:	b	1563c <__assert_fail@plt+0x4060>
   15634:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15638:	str	r0, [sp, #48]	; 0x30
   1563c:	ldr	r0, [sp, #48]	; 0x30
   15640:	ldr	r1, [sp, #52]	; 0x34
   15644:	cmp	r1, r0
   15648:	bhi	15684 <__assert_fail@plt+0x40a8>
   1564c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15650:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15654:	add	r0, r0, r1
   15658:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1565c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15660:	bl	1136c <memcmp@plt>
   15664:	cmp	r0, #0
   15668:	bne	15684 <__assert_fail@plt+0x40a8>
   1566c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15670:	tst	r0, #1
   15674:	beq	1567c <__assert_fail@plt+0x40a0>
   15678:	b	1692c <__assert_fail@plt+0x5350>
   1567c:	movw	r0, #1
   15680:	strb	r0, [fp, #-65]	; 0xffffffbf
   15684:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15688:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1568c:	ldrb	r0, [r0, r1]
   15690:	strb	r0, [fp, #-63]	; 0xffffffc1
   15694:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15698:	mov	r1, r0
   1569c:	cmp	r0, #126	; 0x7e
   156a0:	str	r1, [sp, #44]	; 0x2c
   156a4:	bhi	15f14 <__assert_fail@plt+0x4938>
   156a8:	add	r0, pc, #8
   156ac:	ldr	r1, [sp, #44]	; 0x2c
   156b0:	ldr	r0, [r0, r1, lsl #2]
   156b4:	mov	pc, r0
   156b8:			; <UNDEFINED> instruction: 0x000158b4
   156bc:	andeq	r5, r1, r4, lsl pc
   156c0:	andeq	r5, r1, r4, lsl pc
   156c4:	andeq	r5, r1, r4, lsl pc
   156c8:	andeq	r5, r1, r4, lsl pc
   156cc:	andeq	r5, r1, r4, lsl pc
   156d0:	andeq	r5, r1, r4, lsl pc
   156d4:			; <UNDEFINED> instruction: 0x00015cbc
   156d8:	andeq	r5, r1, r8, asr #25
   156dc:	strdeq	r5, [r1], -r8
   156e0:	andeq	r5, r1, r0, ror #25
   156e4:	andeq	r5, r1, r4, lsl #26
   156e8:	ldrdeq	r5, [r1], -r4
   156ec:	andeq	r5, r1, ip, ror #25
   156f0:	andeq	r5, r1, r4, lsl pc
   156f4:	andeq	r5, r1, r4, lsl pc
   156f8:	andeq	r5, r1, r4, lsl pc
   156fc:	andeq	r5, r1, r4, lsl pc
   15700:	andeq	r5, r1, r4, lsl pc
   15704:	andeq	r5, r1, r4, lsl pc
   15708:	andeq	r5, r1, r4, lsl pc
   1570c:	andeq	r5, r1, r4, lsl pc
   15710:	andeq	r5, r1, r4, lsl pc
   15714:	andeq	r5, r1, r4, lsl pc
   15718:	andeq	r5, r1, r4, lsl pc
   1571c:	andeq	r5, r1, r4, lsl pc
   15720:	andeq	r5, r1, r4, lsl pc
   15724:	andeq	r5, r1, r4, lsl pc
   15728:	andeq	r5, r1, r4, lsl pc
   1572c:	andeq	r5, r1, r4, lsl pc
   15730:	andeq	r5, r1, r4, lsl pc
   15734:	andeq	r5, r1, r4, lsl pc
   15738:	andeq	r5, r1, r8, ror #27
   1573c:	strdeq	r5, [r1], -r0
   15740:	strdeq	r5, [r1], -r0
   15744:	ldrdeq	r5, [r1], -r4
   15748:	strdeq	r5, [r1], -r0
   1574c:	andeq	r5, r1, r8, lsl #30
   15750:	strdeq	r5, [r1], -r0
   15754:	andeq	r5, r1, r0, lsl lr
   15758:	strdeq	r5, [r1], -r0
   1575c:	strdeq	r5, [r1], -r0
   15760:	strdeq	r5, [r1], -r0
   15764:	andeq	r5, r1, r8, lsl #30
   15768:	andeq	r5, r1, r8, lsl #30
   1576c:	andeq	r5, r1, r8, lsl #30
   15770:	andeq	r5, r1, r8, lsl #30
   15774:	andeq	r5, r1, r8, lsl #30
   15778:	andeq	r5, r1, r8, lsl #30
   1577c:	andeq	r5, r1, r8, lsl #30
   15780:	andeq	r5, r1, r8, lsl #30
   15784:	andeq	r5, r1, r8, lsl #30
   15788:	andeq	r5, r1, r8, lsl #30
   1578c:	andeq	r5, r1, r8, lsl #30
   15790:	andeq	r5, r1, r8, lsl #30
   15794:	andeq	r5, r1, r8, lsl #30
   15798:	andeq	r5, r1, r8, lsl #30
   1579c:	andeq	r5, r1, r8, lsl #30
   157a0:	andeq	r5, r1, r8, lsl #30
   157a4:	strdeq	r5, [r1], -r0
   157a8:	strdeq	r5, [r1], -r0
   157ac:	strdeq	r5, [r1], -r0
   157b0:	strdeq	r5, [r1], -r0
   157b4:	andeq	r5, r1, r0, asr #21
   157b8:	andeq	r5, r1, r4, lsl pc
   157bc:	andeq	r5, r1, r8, lsl #30
   157c0:	andeq	r5, r1, r8, lsl #30
   157c4:	andeq	r5, r1, r8, lsl #30
   157c8:	andeq	r5, r1, r8, lsl #30
   157cc:	andeq	r5, r1, r8, lsl #30
   157d0:	andeq	r5, r1, r8, lsl #30
   157d4:	andeq	r5, r1, r8, lsl #30
   157d8:	andeq	r5, r1, r8, lsl #30
   157dc:	andeq	r5, r1, r8, lsl #30
   157e0:	andeq	r5, r1, r8, lsl #30
   157e4:	andeq	r5, r1, r8, lsl #30
   157e8:	andeq	r5, r1, r8, lsl #30
   157ec:	andeq	r5, r1, r8, lsl #30
   157f0:	andeq	r5, r1, r8, lsl #30
   157f4:	andeq	r5, r1, r8, lsl #30
   157f8:	andeq	r5, r1, r8, lsl #30
   157fc:	andeq	r5, r1, r8, lsl #30
   15800:	andeq	r5, r1, r8, lsl #30
   15804:	andeq	r5, r1, r8, lsl #30
   15808:	andeq	r5, r1, r8, lsl #30
   1580c:	andeq	r5, r1, r8, lsl #30
   15810:	andeq	r5, r1, r8, lsl #30
   15814:	andeq	r5, r1, r8, lsl #30
   15818:	andeq	r5, r1, r8, lsl #30
   1581c:	andeq	r5, r1, r8, lsl #30
   15820:	andeq	r5, r1, r8, lsl #30
   15824:	strdeq	r5, [r1], -r0
   15828:	andeq	r5, r1, r0, lsl sp
   1582c:	andeq	r5, r1, r8, lsl #30
   15830:	strdeq	r5, [r1], -r0
   15834:	andeq	r5, r1, r8, lsl #30
   15838:	strdeq	r5, [r1], -r0
   1583c:	andeq	r5, r1, r8, lsl #30
   15840:	andeq	r5, r1, r8, lsl #30
   15844:	andeq	r5, r1, r8, lsl #30
   15848:	andeq	r5, r1, r8, lsl #30
   1584c:	andeq	r5, r1, r8, lsl #30
   15850:	andeq	r5, r1, r8, lsl #30
   15854:	andeq	r5, r1, r8, lsl #30
   15858:	andeq	r5, r1, r8, lsl #30
   1585c:	andeq	r5, r1, r8, lsl #30
   15860:	andeq	r5, r1, r8, lsl #30
   15864:	andeq	r5, r1, r8, lsl #30
   15868:	andeq	r5, r1, r8, lsl #30
   1586c:	andeq	r5, r1, r8, lsl #30
   15870:	andeq	r5, r1, r8, lsl #30
   15874:	andeq	r5, r1, r8, lsl #30
   15878:	andeq	r5, r1, r8, lsl #30
   1587c:	andeq	r5, r1, r8, lsl #30
   15880:	andeq	r5, r1, r8, lsl #30
   15884:	andeq	r5, r1, r8, lsl #30
   15888:	andeq	r5, r1, r8, lsl #30
   1588c:	andeq	r5, r1, r8, lsl #30
   15890:	andeq	r5, r1, r8, lsl #30
   15894:	andeq	r5, r1, r8, lsl #30
   15898:	andeq	r5, r1, r8, lsl #30
   1589c:	andeq	r5, r1, r8, lsl #30
   158a0:	andeq	r5, r1, r8, lsl #30
   158a4:	andeq	r5, r1, r0, lsr #27
   158a8:	strdeq	r5, [r1], -r0
   158ac:	andeq	r5, r1, r0, lsr #27
   158b0:	ldrdeq	r5, [r1], -r4
   158b4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   158b8:	tst	r0, #1
   158bc:	beq	15aa4 <__assert_fail@plt+0x44c8>
   158c0:	b	158c4 <__assert_fail@plt+0x42e8>
   158c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   158c8:	tst	r0, #1
   158cc:	beq	158d4 <__assert_fail@plt+0x42f8>
   158d0:	b	1692c <__assert_fail@plt+0x5350>
   158d4:	movw	r0, #1
   158d8:	strb	r0, [fp, #-66]	; 0xffffffbe
   158dc:	ldr	r0, [fp, #8]
   158e0:	cmp	r0, #2
   158e4:	bne	15998 <__assert_fail@plt+0x43bc>
   158e8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   158ec:	tst	r0, #1
   158f0:	bne	15998 <__assert_fail@plt+0x43bc>
   158f4:	b	158f8 <__assert_fail@plt+0x431c>
   158f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15900:	cmp	r0, r1
   15904:	bcs	1591c <__assert_fail@plt+0x4340>
   15908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1590c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15910:	add	r0, r0, r1
   15914:	movw	r1, #39	; 0x27
   15918:	strb	r1, [r0]
   1591c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15920:	add	r0, r0, #1
   15924:	str	r0, [fp, #-44]	; 0xffffffd4
   15928:	b	1592c <__assert_fail@plt+0x4350>
   1592c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15930:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15934:	cmp	r0, r1
   15938:	bcs	15950 <__assert_fail@plt+0x4374>
   1593c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15940:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15944:	add	r0, r0, r1
   15948:	movw	r1, #36	; 0x24
   1594c:	strb	r1, [r0]
   15950:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15954:	add	r0, r0, #1
   15958:	str	r0, [fp, #-44]	; 0xffffffd4
   1595c:	b	15960 <__assert_fail@plt+0x4384>
   15960:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15964:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15968:	cmp	r0, r1
   1596c:	bcs	15984 <__assert_fail@plt+0x43a8>
   15970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15974:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15978:	add	r0, r0, r1
   1597c:	movw	r1, #39	; 0x27
   15980:	strb	r1, [r0]
   15984:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15988:	add	r0, r0, #1
   1598c:	str	r0, [fp, #-44]	; 0xffffffd4
   15990:	movw	r0, #1
   15994:	strb	r0, [fp, #-60]	; 0xffffffc4
   15998:	b	1599c <__assert_fail@plt+0x43c0>
   1599c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159a4:	cmp	r0, r1
   159a8:	bcs	159c0 <__assert_fail@plt+0x43e4>
   159ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   159b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   159b4:	add	r0, r0, r1
   159b8:	movw	r1, #92	; 0x5c
   159bc:	strb	r1, [r0]
   159c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159c4:	add	r0, r0, #1
   159c8:	str	r0, [fp, #-44]	; 0xffffffd4
   159cc:	b	159d0 <__assert_fail@plt+0x43f4>
   159d0:	ldr	r0, [fp, #8]
   159d4:	cmp	r0, #2
   159d8:	beq	15a98 <__assert_fail@plt+0x44bc>
   159dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   159e0:	add	r0, r0, #1
   159e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   159e8:	cmp	r0, r1
   159ec:	bcs	15a98 <__assert_fail@plt+0x44bc>
   159f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   159f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   159f8:	add	r1, r1, #1
   159fc:	add	r0, r0, r1
   15a00:	ldrb	r0, [r0]
   15a04:	movw	r1, #48	; 0x30
   15a08:	cmp	r1, r0
   15a0c:	bgt	15a98 <__assert_fail@plt+0x44bc>
   15a10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15a18:	add	r1, r1, #1
   15a1c:	add	r0, r0, r1
   15a20:	ldrb	r0, [r0]
   15a24:	cmp	r0, #57	; 0x39
   15a28:	bgt	15a98 <__assert_fail@plt+0x44bc>
   15a2c:	b	15a30 <__assert_fail@plt+0x4454>
   15a30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a38:	cmp	r0, r1
   15a3c:	bcs	15a54 <__assert_fail@plt+0x4478>
   15a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a48:	add	r0, r0, r1
   15a4c:	movw	r1, #48	; 0x30
   15a50:	strb	r1, [r0]
   15a54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a58:	add	r0, r0, #1
   15a5c:	str	r0, [fp, #-44]	; 0xffffffd4
   15a60:	b	15a64 <__assert_fail@plt+0x4488>
   15a64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a6c:	cmp	r0, r1
   15a70:	bcs	15a88 <__assert_fail@plt+0x44ac>
   15a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a7c:	add	r0, r0, r1
   15a80:	movw	r1, #48	; 0x30
   15a84:	strb	r1, [r0]
   15a88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a8c:	add	r0, r0, #1
   15a90:	str	r0, [fp, #-44]	; 0xffffffd4
   15a94:	b	15a98 <__assert_fail@plt+0x44bc>
   15a98:	movw	r0, #48	; 0x30
   15a9c:	strb	r0, [fp, #-63]	; 0xffffffc1
   15aa0:	b	15abc <__assert_fail@plt+0x44e0>
   15aa4:	ldr	r0, [fp, #12]
   15aa8:	and	r0, r0, #1
   15aac:	cmp	r0, #0
   15ab0:	beq	15ab8 <__assert_fail@plt+0x44dc>
   15ab4:	b	1679c <__assert_fail@plt+0x51c0>
   15ab8:	b	15abc <__assert_fail@plt+0x44e0>
   15abc:	b	16538 <__assert_fail@plt+0x4f5c>
   15ac0:	ldr	r0, [fp, #8]
   15ac4:	cmp	r0, #2
   15ac8:	str	r0, [sp, #40]	; 0x28
   15acc:	beq	15ae4 <__assert_fail@plt+0x4508>
   15ad0:	b	15ad4 <__assert_fail@plt+0x44f8>
   15ad4:	ldr	r0, [sp, #40]	; 0x28
   15ad8:	cmp	r0, #5
   15adc:	beq	15af8 <__assert_fail@plt+0x451c>
   15ae0:	b	15cb4 <__assert_fail@plt+0x46d8>
   15ae4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15ae8:	tst	r0, #1
   15aec:	beq	15af4 <__assert_fail@plt+0x4518>
   15af0:	b	1692c <__assert_fail@plt+0x5350>
   15af4:	b	15cb8 <__assert_fail@plt+0x46dc>
   15af8:	ldr	r0, [fp, #12]
   15afc:	and	r0, r0, #4
   15b00:	cmp	r0, #0
   15b04:	beq	15cb0 <__assert_fail@plt+0x46d4>
   15b08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15b0c:	add	r0, r0, #2
   15b10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15b14:	cmp	r0, r1
   15b18:	bcs	15cb0 <__assert_fail@plt+0x46d4>
   15b1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b20:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15b24:	add	r1, r1, #1
   15b28:	add	r0, r0, r1
   15b2c:	ldrb	r0, [r0]
   15b30:	cmp	r0, #63	; 0x3f
   15b34:	bne	15cb0 <__assert_fail@plt+0x46d4>
   15b38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15b40:	add	r0, r0, r1
   15b44:	ldrb	r0, [r0, #2]
   15b48:	mov	r1, r0
   15b4c:	cmp	r0, #33	; 0x21
   15b50:	str	r1, [sp, #36]	; 0x24
   15b54:	beq	15ba4 <__assert_fail@plt+0x45c8>
   15b58:	b	15b5c <__assert_fail@plt+0x4580>
   15b5c:	ldr	r0, [sp, #36]	; 0x24
   15b60:	sub	r1, r0, #39	; 0x27
   15b64:	cmp	r1, #3
   15b68:	bcc	15ba4 <__assert_fail@plt+0x45c8>
   15b6c:	b	15b70 <__assert_fail@plt+0x4594>
   15b70:	ldr	r0, [sp, #36]	; 0x24
   15b74:	cmp	r0, #45	; 0x2d
   15b78:	beq	15ba4 <__assert_fail@plt+0x45c8>
   15b7c:	b	15b80 <__assert_fail@plt+0x45a4>
   15b80:	ldr	r0, [sp, #36]	; 0x24
   15b84:	cmp	r0, #47	; 0x2f
   15b88:	beq	15ba4 <__assert_fail@plt+0x45c8>
   15b8c:	b	15b90 <__assert_fail@plt+0x45b4>
   15b90:	ldr	r0, [sp, #36]	; 0x24
   15b94:	sub	r1, r0, #60	; 0x3c
   15b98:	cmp	r1, #2
   15b9c:	bhi	15ca8 <__assert_fail@plt+0x46cc>
   15ba0:	b	15ba4 <__assert_fail@plt+0x45c8>
   15ba4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15ba8:	tst	r0, #1
   15bac:	beq	15bb4 <__assert_fail@plt+0x45d8>
   15bb0:	b	1692c <__assert_fail@plt+0x5350>
   15bb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15bbc:	add	r1, r1, #2
   15bc0:	add	r0, r0, r1
   15bc4:	ldrb	r0, [r0]
   15bc8:	strb	r0, [fp, #-63]	; 0xffffffc1
   15bcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15bd0:	add	r0, r0, #2
   15bd4:	str	r0, [fp, #-40]	; 0xffffffd8
   15bd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15be0:	cmp	r0, r1
   15be4:	bcs	15bfc <__assert_fail@plt+0x4620>
   15be8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15bf0:	add	r0, r0, r1
   15bf4:	movw	r1, #63	; 0x3f
   15bf8:	strb	r1, [r0]
   15bfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c00:	add	r0, r0, #1
   15c04:	str	r0, [fp, #-44]	; 0xffffffd4
   15c08:	b	15c0c <__assert_fail@plt+0x4630>
   15c0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c14:	cmp	r0, r1
   15c18:	bcs	15c30 <__assert_fail@plt+0x4654>
   15c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c24:	add	r0, r0, r1
   15c28:	movw	r1, #34	; 0x22
   15c2c:	strb	r1, [r0]
   15c30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c34:	add	r0, r0, #1
   15c38:	str	r0, [fp, #-44]	; 0xffffffd4
   15c3c:	b	15c40 <__assert_fail@plt+0x4664>
   15c40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c48:	cmp	r0, r1
   15c4c:	bcs	15c64 <__assert_fail@plt+0x4688>
   15c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c58:	add	r0, r0, r1
   15c5c:	movw	r1, #34	; 0x22
   15c60:	strb	r1, [r0]
   15c64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c68:	add	r0, r0, #1
   15c6c:	str	r0, [fp, #-44]	; 0xffffffd4
   15c70:	b	15c74 <__assert_fail@plt+0x4698>
   15c74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c7c:	cmp	r0, r1
   15c80:	bcs	15c98 <__assert_fail@plt+0x46bc>
   15c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c8c:	add	r0, r0, r1
   15c90:	movw	r1, #63	; 0x3f
   15c94:	strb	r1, [r0]
   15c98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c9c:	add	r0, r0, #1
   15ca0:	str	r0, [fp, #-44]	; 0xffffffd4
   15ca4:	b	15cac <__assert_fail@plt+0x46d0>
   15ca8:	b	15cac <__assert_fail@plt+0x46d0>
   15cac:	b	15cb0 <__assert_fail@plt+0x46d4>
   15cb0:	b	15cb8 <__assert_fail@plt+0x46dc>
   15cb4:	b	15cb8 <__assert_fail@plt+0x46dc>
   15cb8:	b	16538 <__assert_fail@plt+0x4f5c>
   15cbc:	movw	r0, #97	; 0x61
   15cc0:	strb	r0, [fp, #-64]	; 0xffffffc0
   15cc4:	b	15d84 <__assert_fail@plt+0x47a8>
   15cc8:	movw	r0, #98	; 0x62
   15ccc:	strb	r0, [fp, #-64]	; 0xffffffc0
   15cd0:	b	15d84 <__assert_fail@plt+0x47a8>
   15cd4:	movw	r0, #102	; 0x66
   15cd8:	strb	r0, [fp, #-64]	; 0xffffffc0
   15cdc:	b	15d84 <__assert_fail@plt+0x47a8>
   15ce0:	movw	r0, #110	; 0x6e
   15ce4:	strb	r0, [fp, #-64]	; 0xffffffc0
   15ce8:	b	15d64 <__assert_fail@plt+0x4788>
   15cec:	movw	r0, #114	; 0x72
   15cf0:	strb	r0, [fp, #-64]	; 0xffffffc0
   15cf4:	b	15d64 <__assert_fail@plt+0x4788>
   15cf8:	movw	r0, #116	; 0x74
   15cfc:	strb	r0, [fp, #-64]	; 0xffffffc0
   15d00:	b	15d64 <__assert_fail@plt+0x4788>
   15d04:	movw	r0, #118	; 0x76
   15d08:	strb	r0, [fp, #-64]	; 0xffffffc0
   15d0c:	b	15d84 <__assert_fail@plt+0x47a8>
   15d10:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15d14:	strb	r0, [fp, #-64]	; 0xffffffc0
   15d18:	ldr	r0, [fp, #8]
   15d1c:	cmp	r0, #2
   15d20:	bne	15d38 <__assert_fail@plt+0x475c>
   15d24:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15d28:	tst	r0, #1
   15d2c:	beq	15d34 <__assert_fail@plt+0x4758>
   15d30:	b	1692c <__assert_fail@plt+0x5350>
   15d34:	b	166c0 <__assert_fail@plt+0x50e4>
   15d38:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15d3c:	tst	r0, #1
   15d40:	beq	15d60 <__assert_fail@plt+0x4784>
   15d44:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15d48:	tst	r0, #1
   15d4c:	beq	15d60 <__assert_fail@plt+0x4784>
   15d50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d54:	cmp	r0, #0
   15d58:	beq	15d60 <__assert_fail@plt+0x4784>
   15d5c:	b	166c0 <__assert_fail@plt+0x50e4>
   15d60:	b	15d64 <__assert_fail@plt+0x4788>
   15d64:	ldr	r0, [fp, #8]
   15d68:	cmp	r0, #2
   15d6c:	bne	15d80 <__assert_fail@plt+0x47a4>
   15d70:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15d74:	tst	r0, #1
   15d78:	beq	15d80 <__assert_fail@plt+0x47a4>
   15d7c:	b	1692c <__assert_fail@plt+0x5350>
   15d80:	b	15d84 <__assert_fail@plt+0x47a8>
   15d84:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15d88:	tst	r0, #1
   15d8c:	beq	15d9c <__assert_fail@plt+0x47c0>
   15d90:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   15d94:	strb	r0, [fp, #-63]	; 0xffffffc1
   15d98:	b	165ac <__assert_fail@plt+0x4fd0>
   15d9c:	b	16538 <__assert_fail@plt+0x4f5c>
   15da0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15da4:	cmn	r0, #1
   15da8:	bne	15dc0 <__assert_fail@plt+0x47e4>
   15dac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15db0:	ldrb	r0, [r0, #1]
   15db4:	cmp	r0, #0
   15db8:	beq	15dd0 <__assert_fail@plt+0x47f4>
   15dbc:	b	15dcc <__assert_fail@plt+0x47f0>
   15dc0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15dc4:	cmp	r0, #1
   15dc8:	beq	15dd0 <__assert_fail@plt+0x47f4>
   15dcc:	b	16538 <__assert_fail@plt+0x4f5c>
   15dd0:	b	15dd4 <__assert_fail@plt+0x47f8>
   15dd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15dd8:	cmp	r0, #0
   15ddc:	beq	15de4 <__assert_fail@plt+0x4808>
   15de0:	b	16538 <__assert_fail@plt+0x4f5c>
   15de4:	b	15de8 <__assert_fail@plt+0x480c>
   15de8:	movw	r0, #1
   15dec:	strb	r0, [fp, #-67]	; 0xffffffbd
   15df0:	ldr	r0, [fp, #8]
   15df4:	cmp	r0, #2
   15df8:	bne	15e0c <__assert_fail@plt+0x4830>
   15dfc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15e00:	tst	r0, #1
   15e04:	beq	15e0c <__assert_fail@plt+0x4830>
   15e08:	b	1692c <__assert_fail@plt+0x5350>
   15e0c:	b	16538 <__assert_fail@plt+0x4f5c>
   15e10:	movw	r0, #1
   15e14:	strb	r0, [fp, #-61]	; 0xffffffc3
   15e18:	strb	r0, [fp, #-67]	; 0xffffffbd
   15e1c:	ldr	r0, [fp, #8]
   15e20:	cmp	r0, #2
   15e24:	bne	15f04 <__assert_fail@plt+0x4928>
   15e28:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15e2c:	tst	r0, #1
   15e30:	beq	15e38 <__assert_fail@plt+0x485c>
   15e34:	b	1692c <__assert_fail@plt+0x5350>
   15e38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15e3c:	cmp	r0, #0
   15e40:	beq	15e60 <__assert_fail@plt+0x4884>
   15e44:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e48:	cmp	r0, #0
   15e4c:	bne	15e60 <__assert_fail@plt+0x4884>
   15e50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15e54:	str	r0, [fp, #-48]	; 0xffffffd0
   15e58:	movw	r0, #0
   15e5c:	str	r0, [fp, #-28]	; 0xffffffe4
   15e60:	b	15e64 <__assert_fail@plt+0x4888>
   15e64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e6c:	cmp	r0, r1
   15e70:	bcs	15e88 <__assert_fail@plt+0x48ac>
   15e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e7c:	add	r0, r0, r1
   15e80:	movw	r1, #39	; 0x27
   15e84:	strb	r1, [r0]
   15e88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e8c:	add	r0, r0, #1
   15e90:	str	r0, [fp, #-44]	; 0xffffffd4
   15e94:	b	15e98 <__assert_fail@plt+0x48bc>
   15e98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15e9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ea0:	cmp	r0, r1
   15ea4:	bcs	15ebc <__assert_fail@plt+0x48e0>
   15ea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15eac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15eb0:	add	r0, r0, r1
   15eb4:	movw	r1, #92	; 0x5c
   15eb8:	strb	r1, [r0]
   15ebc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ec0:	add	r0, r0, #1
   15ec4:	str	r0, [fp, #-44]	; 0xffffffd4
   15ec8:	b	15ecc <__assert_fail@plt+0x48f0>
   15ecc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ed0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ed4:	cmp	r0, r1
   15ed8:	bcs	15ef0 <__assert_fail@plt+0x4914>
   15edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ee0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ee4:	add	r0, r0, r1
   15ee8:	movw	r1, #39	; 0x27
   15eec:	strb	r1, [r0]
   15ef0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ef4:	add	r0, r0, #1
   15ef8:	str	r0, [fp, #-44]	; 0xffffffd4
   15efc:	movw	r0, #0
   15f00:	strb	r0, [fp, #-60]	; 0xffffffc4
   15f04:	b	16538 <__assert_fail@plt+0x4f5c>
   15f08:	movw	r0, #1
   15f0c:	strb	r0, [fp, #-67]	; 0xffffffbd
   15f10:	b	16538 <__assert_fail@plt+0x4f5c>
   15f14:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   15f18:	tst	r0, #1
   15f1c:	beq	15f60 <__assert_fail@plt+0x4984>
   15f20:	mov	r0, #1
   15f24:	str	r0, [fp, #-72]	; 0xffffffb8
   15f28:	bl	11474 <__ctype_b_loc@plt>
   15f2c:	ldr	r0, [r0]
   15f30:	ldrb	lr, [fp, #-63]	; 0xffffffc1
   15f34:	mov	r1, lr
   15f38:	add	r0, r0, lr, lsl #1
   15f3c:	ldrh	r0, [r0]
   15f40:	and	r0, r0, #16384	; 0x4000
   15f44:	cmp	r0, #0
   15f48:	movw	r0, #0
   15f4c:	movne	r0, #1
   15f50:	and	r0, r0, #1
   15f54:	strb	r0, [fp, #-73]	; 0xffffffb7
   15f58:	str	r1, [sp, #32]
   15f5c:	b	161ec <__assert_fail@plt+0x4c10>
   15f60:	sub	r0, fp, #84	; 0x54
   15f64:	movw	r1, #0
   15f68:	and	r1, r1, #255	; 0xff
   15f6c:	movw	r2, #8
   15f70:	bl	11504 <memset@plt>
   15f74:	movw	r0, #0
   15f78:	str	r0, [fp, #-72]	; 0xffffffb8
   15f7c:	movw	r0, #1
   15f80:	strb	r0, [fp, #-73]	; 0xffffffb7
   15f84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f88:	cmn	r0, #1
   15f8c:	bne	15f9c <__assert_fail@plt+0x49c0>
   15f90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f94:	bl	114b0 <strlen@plt>
   15f98:	str	r0, [fp, #-36]	; 0xffffffdc
   15f9c:	b	15fa0 <__assert_fail@plt+0x49c4>
   15fa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fa4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15fa8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15fac:	add	r1, r1, r2
   15fb0:	add	r1, r0, r1
   15fb4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15fb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15fbc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15fc0:	add	r2, r2, r3
   15fc4:	sub	r2, r0, r2
   15fc8:	sub	r0, fp, #88	; 0x58
   15fcc:	sub	r3, fp, #84	; 0x54
   15fd0:	bl	14b88 <__assert_fail@plt+0x35ac>
   15fd4:	str	r0, [sp, #92]	; 0x5c
   15fd8:	ldr	r0, [sp, #92]	; 0x5c
   15fdc:	cmp	r0, #0
   15fe0:	bne	15fe8 <__assert_fail@plt+0x4a0c>
   15fe4:	b	161e8 <__assert_fail@plt+0x4c0c>
   15fe8:	ldr	r0, [sp, #92]	; 0x5c
   15fec:	cmn	r0, #1
   15ff0:	bne	16000 <__assert_fail@plt+0x4a24>
   15ff4:	movw	r0, #0
   15ff8:	strb	r0, [fp, #-73]	; 0xffffffb7
   15ffc:	b	161e8 <__assert_fail@plt+0x4c0c>
   16000:	ldr	r0, [sp, #92]	; 0x5c
   16004:	cmn	r0, #2
   16008:	bne	1607c <__assert_fail@plt+0x4aa0>
   1600c:	movw	r0, #0
   16010:	strb	r0, [fp, #-73]	; 0xffffffb7
   16014:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16018:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1601c:	add	r0, r0, r1
   16020:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16024:	cmp	r0, r1
   16028:	movw	r0, #0
   1602c:	str	r0, [sp, #28]
   16030:	bcs	1605c <__assert_fail@plt+0x4a80>
   16034:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16038:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1603c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16040:	add	r1, r1, r2
   16044:	add	r0, r0, r1
   16048:	ldrb	r0, [r0]
   1604c:	cmp	r0, #0
   16050:	movw	r0, #0
   16054:	movne	r0, #1
   16058:	str	r0, [sp, #28]
   1605c:	ldr	r0, [sp, #28]
   16060:	tst	r0, #1
   16064:	beq	16078 <__assert_fail@plt+0x4a9c>
   16068:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1606c:	add	r0, r0, #1
   16070:	str	r0, [fp, #-72]	; 0xffffffb8
   16074:	b	16014 <__assert_fail@plt+0x4a38>
   16078:	b	161e8 <__assert_fail@plt+0x4c0c>
   1607c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16080:	tst	r0, #1
   16084:	beq	16190 <__assert_fail@plt+0x4bb4>
   16088:	ldr	r0, [fp, #8]
   1608c:	cmp	r0, #2
   16090:	bne	16190 <__assert_fail@plt+0x4bb4>
   16094:	movw	r0, #1
   16098:	str	r0, [sp, #88]	; 0x58
   1609c:	ldr	r0, [sp, #88]	; 0x58
   160a0:	ldr	r1, [sp, #92]	; 0x5c
   160a4:	cmp	r0, r1
   160a8:	bcs	1618c <__assert_fail@plt+0x4bb0>
   160ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160b0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   160b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   160b8:	add	r1, r1, r2
   160bc:	ldr	r2, [sp, #88]	; 0x58
   160c0:	add	r1, r1, r2
   160c4:	ldrb	r0, [r0, r1]
   160c8:	sub	r0, r0, #91	; 0x5b
   160cc:	cmp	r0, #33	; 0x21
   160d0:	str	r0, [sp, #24]
   160d4:	bhi	16174 <__assert_fail@plt+0x4b98>
   160d8:	add	r0, pc, #8
   160dc:	ldr	r1, [sp, #24]
   160e0:	ldr	r0, [r0, r1, lsl #2]
   160e4:	mov	pc, r0
   160e8:	andeq	r6, r1, r0, ror r1
   160ec:	andeq	r6, r1, r0, ror r1
   160f0:	andeq	r6, r1, r4, ror r1
   160f4:	andeq	r6, r1, r0, ror r1
   160f8:	andeq	r6, r1, r4, ror r1
   160fc:	andeq	r6, r1, r0, ror r1
   16100:	andeq	r6, r1, r4, ror r1
   16104:	andeq	r6, r1, r4, ror r1
   16108:	andeq	r6, r1, r4, ror r1
   1610c:	andeq	r6, r1, r4, ror r1
   16110:	andeq	r6, r1, r4, ror r1
   16114:	andeq	r6, r1, r4, ror r1
   16118:	andeq	r6, r1, r4, ror r1
   1611c:	andeq	r6, r1, r4, ror r1
   16120:	andeq	r6, r1, r4, ror r1
   16124:	andeq	r6, r1, r4, ror r1
   16128:	andeq	r6, r1, r4, ror r1
   1612c:	andeq	r6, r1, r4, ror r1
   16130:	andeq	r6, r1, r4, ror r1
   16134:	andeq	r6, r1, r4, ror r1
   16138:	andeq	r6, r1, r4, ror r1
   1613c:	andeq	r6, r1, r4, ror r1
   16140:	andeq	r6, r1, r4, ror r1
   16144:	andeq	r6, r1, r4, ror r1
   16148:	andeq	r6, r1, r4, ror r1
   1614c:	andeq	r6, r1, r4, ror r1
   16150:	andeq	r6, r1, r4, ror r1
   16154:	andeq	r6, r1, r4, ror r1
   16158:	andeq	r6, r1, r4, ror r1
   1615c:	andeq	r6, r1, r4, ror r1
   16160:	andeq	r6, r1, r4, ror r1
   16164:	andeq	r6, r1, r4, ror r1
   16168:	andeq	r6, r1, r4, ror r1
   1616c:	andeq	r6, r1, r0, ror r1
   16170:	b	1692c <__assert_fail@plt+0x5350>
   16174:	b	16178 <__assert_fail@plt+0x4b9c>
   16178:	b	1617c <__assert_fail@plt+0x4ba0>
   1617c:	ldr	r0, [sp, #88]	; 0x58
   16180:	add	r0, r0, #1
   16184:	str	r0, [sp, #88]	; 0x58
   16188:	b	1609c <__assert_fail@plt+0x4ac0>
   1618c:	b	16190 <__assert_fail@plt+0x4bb4>
   16190:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16194:	bl	113b4 <iswprint@plt>
   16198:	cmp	r0, #0
   1619c:	bne	161a8 <__assert_fail@plt+0x4bcc>
   161a0:	movw	r0, #0
   161a4:	strb	r0, [fp, #-73]	; 0xffffffb7
   161a8:	ldr	r0, [sp, #92]	; 0x5c
   161ac:	ldr	r1, [fp, #-72]	; 0xffffffb8
   161b0:	add	r0, r1, r0
   161b4:	str	r0, [fp, #-72]	; 0xffffffb8
   161b8:	b	161bc <__assert_fail@plt+0x4be0>
   161bc:	b	161c0 <__assert_fail@plt+0x4be4>
   161c0:	b	161c4 <__assert_fail@plt+0x4be8>
   161c4:	sub	r0, fp, #84	; 0x54
   161c8:	bl	11360 <mbsinit@plt>
   161cc:	cmp	r0, #0
   161d0:	movw	r0, #0
   161d4:	movne	r0, #1
   161d8:	mvn	lr, #0
   161dc:	eor	r0, r0, lr
   161e0:	tst	r0, #1
   161e4:	bne	15fa0 <__assert_fail@plt+0x49c4>
   161e8:	b	161ec <__assert_fail@plt+0x4c10>
   161ec:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   161f0:	and	r0, r0, #1
   161f4:	strb	r0, [fp, #-67]	; 0xffffffbd
   161f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   161fc:	movw	r1, #1
   16200:	cmp	r1, r0
   16204:	bcc	16220 <__assert_fail@plt+0x4c44>
   16208:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1620c:	tst	r0, #1
   16210:	beq	16534 <__assert_fail@plt+0x4f58>
   16214:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   16218:	tst	r0, #1
   1621c:	bne	16534 <__assert_fail@plt+0x4f58>
   16220:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16224:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16228:	add	r0, r0, r1
   1622c:	str	r0, [sp, #84]	; 0x54
   16230:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   16234:	tst	r0, #1
   16238:	beq	163e8 <__assert_fail@plt+0x4e0c>
   1623c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   16240:	tst	r0, #1
   16244:	bne	163e8 <__assert_fail@plt+0x4e0c>
   16248:	b	1624c <__assert_fail@plt+0x4c70>
   1624c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16250:	tst	r0, #1
   16254:	beq	1625c <__assert_fail@plt+0x4c80>
   16258:	b	1692c <__assert_fail@plt+0x5350>
   1625c:	movw	r0, #1
   16260:	strb	r0, [fp, #-66]	; 0xffffffbe
   16264:	ldr	r0, [fp, #8]
   16268:	cmp	r0, #2
   1626c:	bne	16320 <__assert_fail@plt+0x4d44>
   16270:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16274:	tst	r0, #1
   16278:	bne	16320 <__assert_fail@plt+0x4d44>
   1627c:	b	16280 <__assert_fail@plt+0x4ca4>
   16280:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16284:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16288:	cmp	r0, r1
   1628c:	bcs	162a4 <__assert_fail@plt+0x4cc8>
   16290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16294:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16298:	add	r0, r0, r1
   1629c:	movw	r1, #39	; 0x27
   162a0:	strb	r1, [r0]
   162a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162a8:	add	r0, r0, #1
   162ac:	str	r0, [fp, #-44]	; 0xffffffd4
   162b0:	b	162b4 <__assert_fail@plt+0x4cd8>
   162b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   162bc:	cmp	r0, r1
   162c0:	bcs	162d8 <__assert_fail@plt+0x4cfc>
   162c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   162cc:	add	r0, r0, r1
   162d0:	movw	r1, #36	; 0x24
   162d4:	strb	r1, [r0]
   162d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162dc:	add	r0, r0, #1
   162e0:	str	r0, [fp, #-44]	; 0xffffffd4
   162e4:	b	162e8 <__assert_fail@plt+0x4d0c>
   162e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   162ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   162f0:	cmp	r0, r1
   162f4:	bcs	1630c <__assert_fail@plt+0x4d30>
   162f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16300:	add	r0, r0, r1
   16304:	movw	r1, #39	; 0x27
   16308:	strb	r1, [r0]
   1630c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16310:	add	r0, r0, #1
   16314:	str	r0, [fp, #-44]	; 0xffffffd4
   16318:	movw	r0, #1
   1631c:	strb	r0, [fp, #-60]	; 0xffffffc4
   16320:	b	16324 <__assert_fail@plt+0x4d48>
   16324:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16328:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1632c:	cmp	r0, r1
   16330:	bcs	16348 <__assert_fail@plt+0x4d6c>
   16334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16338:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1633c:	add	r0, r0, r1
   16340:	movw	r1, #92	; 0x5c
   16344:	strb	r1, [r0]
   16348:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1634c:	add	r0, r0, #1
   16350:	str	r0, [fp, #-44]	; 0xffffffd4
   16354:	b	16358 <__assert_fail@plt+0x4d7c>
   16358:	b	1635c <__assert_fail@plt+0x4d80>
   1635c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16360:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16364:	cmp	r0, r1
   16368:	bcs	16388 <__assert_fail@plt+0x4dac>
   1636c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16370:	asr	r0, r0, #6
   16374:	add	r0, r0, #48	; 0x30
   16378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1637c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16380:	add	r1, r1, r2
   16384:	strb	r0, [r1]
   16388:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1638c:	add	r0, r0, #1
   16390:	str	r0, [fp, #-44]	; 0xffffffd4
   16394:	b	16398 <__assert_fail@plt+0x4dbc>
   16398:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1639c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   163a0:	cmp	r0, r1
   163a4:	bcs	163c8 <__assert_fail@plt+0x4dec>
   163a8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   163ac:	asr	r0, r0, #3
   163b0:	and	r0, r0, #7
   163b4:	add	r0, r0, #48	; 0x30
   163b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   163bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   163c0:	add	r1, r1, r2
   163c4:	strb	r0, [r1]
   163c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   163cc:	add	r0, r0, #1
   163d0:	str	r0, [fp, #-44]	; 0xffffffd4
   163d4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   163d8:	and	r0, r0, #7
   163dc:	add	r0, r0, #48	; 0x30
   163e0:	strb	r0, [fp, #-63]	; 0xffffffc1
   163e4:	b	16434 <__assert_fail@plt+0x4e58>
   163e8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   163ec:	tst	r0, #1
   163f0:	beq	16430 <__assert_fail@plt+0x4e54>
   163f4:	b	163f8 <__assert_fail@plt+0x4e1c>
   163f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   163fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16400:	cmp	r0, r1
   16404:	bcs	1641c <__assert_fail@plt+0x4e40>
   16408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1640c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16410:	add	r0, r0, r1
   16414:	movw	r1, #92	; 0x5c
   16418:	strb	r1, [r0]
   1641c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16420:	add	r0, r0, #1
   16424:	str	r0, [fp, #-44]	; 0xffffffd4
   16428:	movw	r0, #0
   1642c:	strb	r0, [fp, #-65]	; 0xffffffbf
   16430:	b	16434 <__assert_fail@plt+0x4e58>
   16434:	ldr	r0, [sp, #84]	; 0x54
   16438:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1643c:	add	r1, r1, #1
   16440:	cmp	r0, r1
   16444:	bhi	1644c <__assert_fail@plt+0x4e70>
   16448:	b	16530 <__assert_fail@plt+0x4f54>
   1644c:	b	16450 <__assert_fail@plt+0x4e74>
   16450:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   16454:	tst	r0, #1
   16458:	beq	164d8 <__assert_fail@plt+0x4efc>
   1645c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   16460:	tst	r0, #1
   16464:	bne	164d8 <__assert_fail@plt+0x4efc>
   16468:	b	1646c <__assert_fail@plt+0x4e90>
   1646c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16470:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16474:	cmp	r0, r1
   16478:	bcs	16490 <__assert_fail@plt+0x4eb4>
   1647c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16480:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16484:	add	r0, r0, r1
   16488:	movw	r1, #39	; 0x27
   1648c:	strb	r1, [r0]
   16490:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16494:	add	r0, r0, #1
   16498:	str	r0, [fp, #-44]	; 0xffffffd4
   1649c:	b	164a0 <__assert_fail@plt+0x4ec4>
   164a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   164a8:	cmp	r0, r1
   164ac:	bcs	164c4 <__assert_fail@plt+0x4ee8>
   164b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   164b8:	add	r0, r0, r1
   164bc:	movw	r1, #39	; 0x27
   164c0:	strb	r1, [r0]
   164c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164c8:	add	r0, r0, #1
   164cc:	str	r0, [fp, #-44]	; 0xffffffd4
   164d0:	movw	r0, #0
   164d4:	strb	r0, [fp, #-60]	; 0xffffffc4
   164d8:	b	164dc <__assert_fail@plt+0x4f00>
   164dc:	b	164e0 <__assert_fail@plt+0x4f04>
   164e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   164e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   164e8:	cmp	r0, r1
   164ec:	bcs	16504 <__assert_fail@plt+0x4f28>
   164f0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   164f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   164fc:	add	r1, r1, r2
   16500:	strb	r0, [r1]
   16504:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16508:	add	r0, r0, #1
   1650c:	str	r0, [fp, #-44]	; 0xffffffd4
   16510:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16514:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16518:	add	r1, r1, #1
   1651c:	str	r1, [fp, #-40]	; 0xffffffd8
   16520:	add	r0, r0, r1
   16524:	ldrb	r0, [r0]
   16528:	strb	r0, [fp, #-63]	; 0xffffffc1
   1652c:	b	16230 <__assert_fail@plt+0x4c54>
   16530:	b	166c0 <__assert_fail@plt+0x50e4>
   16534:	b	16538 <__assert_fail@plt+0x4f5c>
   16538:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1653c:	tst	r0, #1
   16540:	beq	16550 <__assert_fail@plt+0x4f74>
   16544:	ldr	r0, [fp, #8]
   16548:	cmp	r0, #2
   1654c:	bne	1655c <__assert_fail@plt+0x4f80>
   16550:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16554:	tst	r0, #1
   16558:	beq	16598 <__assert_fail@plt+0x4fbc>
   1655c:	ldr	r0, [fp, #16]
   16560:	movw	r1, #0
   16564:	cmp	r0, r1
   16568:	beq	16598 <__assert_fail@plt+0x4fbc>
   1656c:	ldr	r0, [fp, #16]
   16570:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   16574:	lsr	r1, r1, #5
   16578:	add	r0, r0, r1, lsl #2
   1657c:	ldr	r0, [r0]
   16580:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   16584:	and	r1, r1, #31
   16588:	lsr	r0, r0, r1
   1658c:	and	r0, r0, #1
   16590:	cmp	r0, #0
   16594:	bne	165a8 <__assert_fail@plt+0x4fcc>
   16598:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1659c:	tst	r0, #1
   165a0:	bne	165a8 <__assert_fail@plt+0x4fcc>
   165a4:	b	166c0 <__assert_fail@plt+0x50e4>
   165a8:	b	165ac <__assert_fail@plt+0x4fd0>
   165ac:	b	165b0 <__assert_fail@plt+0x4fd4>
   165b0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   165b4:	tst	r0, #1
   165b8:	beq	165c0 <__assert_fail@plt+0x4fe4>
   165bc:	b	1692c <__assert_fail@plt+0x5350>
   165c0:	movw	r0, #1
   165c4:	strb	r0, [fp, #-66]	; 0xffffffbe
   165c8:	ldr	r0, [fp, #8]
   165cc:	cmp	r0, #2
   165d0:	bne	16684 <__assert_fail@plt+0x50a8>
   165d4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   165d8:	tst	r0, #1
   165dc:	bne	16684 <__assert_fail@plt+0x50a8>
   165e0:	b	165e4 <__assert_fail@plt+0x5008>
   165e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   165e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   165ec:	cmp	r0, r1
   165f0:	bcs	16608 <__assert_fail@plt+0x502c>
   165f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   165fc:	add	r0, r0, r1
   16600:	movw	r1, #39	; 0x27
   16604:	strb	r1, [r0]
   16608:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1660c:	add	r0, r0, #1
   16610:	str	r0, [fp, #-44]	; 0xffffffd4
   16614:	b	16618 <__assert_fail@plt+0x503c>
   16618:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1661c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16620:	cmp	r0, r1
   16624:	bcs	1663c <__assert_fail@plt+0x5060>
   16628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1662c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16630:	add	r0, r0, r1
   16634:	movw	r1, #36	; 0x24
   16638:	strb	r1, [r0]
   1663c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16640:	add	r0, r0, #1
   16644:	str	r0, [fp, #-44]	; 0xffffffd4
   16648:	b	1664c <__assert_fail@plt+0x5070>
   1664c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16650:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16654:	cmp	r0, r1
   16658:	bcs	16670 <__assert_fail@plt+0x5094>
   1665c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16660:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16664:	add	r0, r0, r1
   16668:	movw	r1, #39	; 0x27
   1666c:	strb	r1, [r0]
   16670:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16674:	add	r0, r0, #1
   16678:	str	r0, [fp, #-44]	; 0xffffffd4
   1667c:	movw	r0, #1
   16680:	strb	r0, [fp, #-60]	; 0xffffffc4
   16684:	b	16688 <__assert_fail@plt+0x50ac>
   16688:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1668c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16690:	cmp	r0, r1
   16694:	bcs	166ac <__assert_fail@plt+0x50d0>
   16698:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1669c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   166a0:	add	r0, r0, r1
   166a4:	movw	r1, #92	; 0x5c
   166a8:	strb	r1, [r0]
   166ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   166b0:	add	r0, r0, #1
   166b4:	str	r0, [fp, #-44]	; 0xffffffd4
   166b8:	b	166bc <__assert_fail@plt+0x50e0>
   166bc:	b	166c0 <__assert_fail@plt+0x50e4>
   166c0:	b	166c4 <__assert_fail@plt+0x50e8>
   166c4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   166c8:	tst	r0, #1
   166cc:	beq	1674c <__assert_fail@plt+0x5170>
   166d0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   166d4:	tst	r0, #1
   166d8:	bne	1674c <__assert_fail@plt+0x5170>
   166dc:	b	166e0 <__assert_fail@plt+0x5104>
   166e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   166e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   166e8:	cmp	r0, r1
   166ec:	bcs	16704 <__assert_fail@plt+0x5128>
   166f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   166f8:	add	r0, r0, r1
   166fc:	movw	r1, #39	; 0x27
   16700:	strb	r1, [r0]
   16704:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16708:	add	r0, r0, #1
   1670c:	str	r0, [fp, #-44]	; 0xffffffd4
   16710:	b	16714 <__assert_fail@plt+0x5138>
   16714:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16718:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1671c:	cmp	r0, r1
   16720:	bcs	16738 <__assert_fail@plt+0x515c>
   16724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16728:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1672c:	add	r0, r0, r1
   16730:	movw	r1, #39	; 0x27
   16734:	strb	r1, [r0]
   16738:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1673c:	add	r0, r0, #1
   16740:	str	r0, [fp, #-44]	; 0xffffffd4
   16744:	movw	r0, #0
   16748:	strb	r0, [fp, #-60]	; 0xffffffc4
   1674c:	b	16750 <__assert_fail@plt+0x5174>
   16750:	b	16754 <__assert_fail@plt+0x5178>
   16754:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16758:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1675c:	cmp	r0, r1
   16760:	bcs	16778 <__assert_fail@plt+0x519c>
   16764:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   16768:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1676c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16770:	add	r1, r1, r2
   16774:	strb	r0, [r1]
   16778:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1677c:	add	r0, r0, #1
   16780:	str	r0, [fp, #-44]	; 0xffffffd4
   16784:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   16788:	tst	r0, #1
   1678c:	bne	16798 <__assert_fail@plt+0x51bc>
   16790:	movw	r0, #0
   16794:	strb	r0, [fp, #-62]	; 0xffffffc2
   16798:	b	1679c <__assert_fail@plt+0x51c0>
   1679c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   167a0:	add	r0, r0, #1
   167a4:	str	r0, [fp, #-40]	; 0xffffffd8
   167a8:	b	15550 <__assert_fail@plt+0x3f74>
   167ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   167b0:	cmp	r0, #0
   167b4:	bne	167d4 <__assert_fail@plt+0x51f8>
   167b8:	ldr	r0, [fp, #8]
   167bc:	cmp	r0, #2
   167c0:	bne	167d4 <__assert_fail@plt+0x51f8>
   167c4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   167c8:	tst	r0, #1
   167cc:	beq	167d4 <__assert_fail@plt+0x51f8>
   167d0:	b	1692c <__assert_fail@plt+0x5350>
   167d4:	ldr	r0, [fp, #8]
   167d8:	cmp	r0, #2
   167dc:	bne	1687c <__assert_fail@plt+0x52a0>
   167e0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   167e4:	tst	r0, #1
   167e8:	bne	1687c <__assert_fail@plt+0x52a0>
   167ec:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   167f0:	tst	r0, #1
   167f4:	beq	1687c <__assert_fail@plt+0x52a0>
   167f8:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   167fc:	tst	r0, #1
   16800:	beq	16848 <__assert_fail@plt+0x526c>
   16804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16808:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1680c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16810:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16814:	ldr	ip, [fp, #12]
   16818:	ldr	lr, [fp, #16]
   1681c:	ldr	r4, [fp, #20]
   16820:	ldr	r5, [fp, #24]
   16824:	movw	r6, #5
   16828:	str	r6, [sp]
   1682c:	str	ip, [sp, #4]
   16830:	str	lr, [sp, #8]
   16834:	str	r4, [sp, #12]
   16838:	str	r5, [sp, #16]
   1683c:	bl	15268 <__assert_fail@plt+0x3c8c>
   16840:	str	r0, [fp, #-20]	; 0xffffffec
   16844:	b	16994 <__assert_fail@plt+0x53b8>
   16848:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1684c:	cmp	r0, #0
   16850:	bne	16874 <__assert_fail@plt+0x5298>
   16854:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16858:	cmp	r0, #0
   1685c:	beq	16874 <__assert_fail@plt+0x5298>
   16860:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16864:	str	r0, [fp, #-28]	; 0xffffffe4
   16868:	movw	r0, #0
   1686c:	str	r0, [fp, #-44]	; 0xffffffd4
   16870:	b	15310 <__assert_fail@plt+0x3d34>
   16874:	b	16878 <__assert_fail@plt+0x529c>
   16878:	b	1687c <__assert_fail@plt+0x52a0>
   1687c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16880:	movw	r1, #0
   16884:	cmp	r0, r1
   16888:	beq	168fc <__assert_fail@plt+0x5320>
   1688c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   16890:	tst	r0, #1
   16894:	bne	168fc <__assert_fail@plt+0x5320>
   16898:	b	1689c <__assert_fail@plt+0x52c0>
   1689c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   168a0:	ldrsb	r0, [r0]
   168a4:	cmp	r0, #0
   168a8:	beq	168f8 <__assert_fail@plt+0x531c>
   168ac:	b	168b0 <__assert_fail@plt+0x52d4>
   168b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   168b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   168b8:	cmp	r0, r1
   168bc:	bcs	168d8 <__assert_fail@plt+0x52fc>
   168c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   168c4:	ldrb	r0, [r0]
   168c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   168cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   168d0:	add	r1, r1, r2
   168d4:	strb	r0, [r1]
   168d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   168dc:	add	r0, r0, #1
   168e0:	str	r0, [fp, #-44]	; 0xffffffd4
   168e4:	b	168e8 <__assert_fail@plt+0x530c>
   168e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   168ec:	add	r0, r0, #1
   168f0:	str	r0, [fp, #-52]	; 0xffffffcc
   168f4:	b	1689c <__assert_fail@plt+0x52c0>
   168f8:	b	168fc <__assert_fail@plt+0x5320>
   168fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16900:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16904:	cmp	r0, r1
   16908:	bcs	16920 <__assert_fail@plt+0x5344>
   1690c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16910:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16914:	add	r0, r0, r1
   16918:	movw	r1, #0
   1691c:	strb	r1, [r0]
   16920:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16924:	str	r0, [fp, #-20]	; 0xffffffec
   16928:	b	16994 <__assert_fail@plt+0x53b8>
   1692c:	ldr	r0, [fp, #8]
   16930:	cmp	r0, #2
   16934:	bne	1694c <__assert_fail@plt+0x5370>
   16938:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1693c:	tst	r0, #1
   16940:	beq	1694c <__assert_fail@plt+0x5370>
   16944:	movw	r0, #4
   16948:	str	r0, [fp, #8]
   1694c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16950:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16954:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16958:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1695c:	ldr	ip, [fp, #8]
   16960:	ldr	lr, [fp, #12]
   16964:	mvn	r4, #2
   16968:	and	lr, lr, r4
   1696c:	ldr	r4, [fp, #20]
   16970:	ldr	r5, [fp, #24]
   16974:	str	ip, [sp]
   16978:	str	lr, [sp, #4]
   1697c:	movw	ip, #0
   16980:	str	ip, [sp, #8]
   16984:	str	r4, [sp, #12]
   16988:	str	r5, [sp, #16]
   1698c:	bl	15268 <__assert_fail@plt+0x3c8c>
   16990:	str	r0, [fp, #-20]	; 0xffffffec
   16994:	ldr	r0, [fp, #-20]	; 0xffffffec
   16998:	sub	sp, fp, #16
   1699c:	pop	{r4, r5, r6, sl, fp, pc}
   169a0:	push	{fp, lr}
   169a4:	mov	fp, sp
   169a8:	sub	sp, sp, #16
   169ac:	str	r0, [fp, #-4]
   169b0:	str	r1, [sp, #8]
   169b4:	str	r2, [sp, #4]
   169b8:	ldr	r0, [fp, #-4]
   169bc:	ldr	r1, [sp, #8]
   169c0:	ldr	r3, [sp, #4]
   169c4:	movw	r2, #0
   169c8:	bl	169d4 <__assert_fail@plt+0x53f8>
   169cc:	mov	sp, fp
   169d0:	pop	{fp, pc}
   169d4:	push	{r4, r5, r6, sl, fp, lr}
   169d8:	add	fp, sp, #16
   169dc:	sub	sp, sp, #72	; 0x48
   169e0:	str	r0, [fp, #-20]	; 0xffffffec
   169e4:	str	r1, [fp, #-24]	; 0xffffffe8
   169e8:	str	r2, [fp, #-28]	; 0xffffffe4
   169ec:	str	r3, [fp, #-32]	; 0xffffffe0
   169f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   169f4:	movw	r1, #0
   169f8:	cmp	r0, r1
   169fc:	beq	16a0c <__assert_fail@plt+0x5430>
   16a00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16a04:	str	r0, [sp, #32]
   16a08:	b	16a1c <__assert_fail@plt+0x5440>
   16a0c:	movw	r0, #500	; 0x1f4
   16a10:	movt	r0, #3
   16a14:	str	r0, [sp, #32]
   16a18:	b	16a1c <__assert_fail@plt+0x5440>
   16a1c:	ldr	r0, [sp, #32]
   16a20:	str	r0, [fp, #-36]	; 0xffffffdc
   16a24:	bl	114e0 <__errno_location@plt>
   16a28:	ldr	r0, [r0]
   16a2c:	str	r0, [fp, #-40]	; 0xffffffd8
   16a30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16a34:	ldr	r0, [r0, #4]
   16a38:	ldr	lr, [fp, #-28]	; 0xffffffe4
   16a3c:	movw	r1, #0
   16a40:	cmp	lr, r1
   16a44:	movw	lr, #0
   16a48:	movne	lr, #1
   16a4c:	tst	lr, #1
   16a50:	mov	lr, r1
   16a54:	moveq	lr, #1
   16a58:	orr	r0, r0, lr
   16a5c:	str	r0, [sp, #44]	; 0x2c
   16a60:	ldr	r2, [fp, #-20]	; 0xffffffec
   16a64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16a6c:	ldr	r0, [r0]
   16a70:	ldr	lr, [sp, #44]	; 0x2c
   16a74:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16a78:	add	ip, ip, #8
   16a7c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16a80:	ldr	r4, [r4, #40]	; 0x28
   16a84:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16a88:	ldr	r5, [r5, #44]	; 0x2c
   16a8c:	str	r0, [sp, #28]
   16a90:	mov	r0, r1
   16a94:	ldr	r6, [sp, #28]
   16a98:	str	r6, [sp]
   16a9c:	str	lr, [sp, #4]
   16aa0:	str	ip, [sp, #8]
   16aa4:	str	r4, [sp, #12]
   16aa8:	str	r5, [sp, #16]
   16aac:	bl	15268 <__assert_fail@plt+0x3c8c>
   16ab0:	add	r0, r0, #1
   16ab4:	str	r0, [sp, #40]	; 0x28
   16ab8:	ldr	r0, [sp, #40]	; 0x28
   16abc:	bl	18770 <__assert_fail@plt+0x7194>
   16ac0:	str	r0, [sp, #36]	; 0x24
   16ac4:	ldr	r0, [sp, #36]	; 0x24
   16ac8:	ldr	r1, [sp, #40]	; 0x28
   16acc:	ldr	r2, [fp, #-20]	; 0xffffffec
   16ad0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16ad4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   16ad8:	ldr	ip, [ip]
   16adc:	ldr	lr, [sp, #44]	; 0x2c
   16ae0:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16ae4:	add	r4, r4, #8
   16ae8:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16aec:	ldr	r5, [r5, #40]	; 0x28
   16af0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   16af4:	ldr	r6, [r6, #44]	; 0x2c
   16af8:	str	ip, [sp]
   16afc:	str	lr, [sp, #4]
   16b00:	str	r4, [sp, #8]
   16b04:	str	r5, [sp, #12]
   16b08:	str	r6, [sp, #16]
   16b0c:	bl	15268 <__assert_fail@plt+0x3c8c>
   16b10:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16b14:	str	r0, [sp, #24]
   16b18:	str	r1, [sp, #20]
   16b1c:	bl	114e0 <__errno_location@plt>
   16b20:	ldr	r1, [sp, #20]
   16b24:	str	r1, [r0]
   16b28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16b2c:	movw	r2, #0
   16b30:	cmp	r0, r2
   16b34:	beq	16b48 <__assert_fail@plt+0x556c>
   16b38:	ldr	r0, [sp, #40]	; 0x28
   16b3c:	sub	r0, r0, #1
   16b40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16b44:	str	r0, [r1]
   16b48:	ldr	r0, [sp, #36]	; 0x24
   16b4c:	sub	sp, fp, #16
   16b50:	pop	{r4, r5, r6, sl, fp, pc}
   16b54:	push	{fp, lr}
   16b58:	mov	fp, sp
   16b5c:	sub	sp, sp, #8
   16b60:	movw	r0, #308	; 0x134
   16b64:	movt	r0, #3
   16b68:	ldr	r0, [r0]
   16b6c:	str	r0, [sp, #4]
   16b70:	movw	r0, #1
   16b74:	str	r0, [sp]
   16b78:	ldr	r0, [sp]
   16b7c:	movw	r1, #312	; 0x138
   16b80:	movt	r1, #3
   16b84:	ldr	r1, [r1]
   16b88:	cmp	r0, r1
   16b8c:	bge	16bb4 <__assert_fail@plt+0x55d8>
   16b90:	ldr	r0, [sp, #4]
   16b94:	ldr	r1, [sp]
   16b98:	add	r0, r0, r1, lsl #3
   16b9c:	ldr	r0, [r0, #4]
   16ba0:	bl	14794 <__assert_fail@plt+0x31b8>
   16ba4:	ldr	r0, [sp]
   16ba8:	add	r0, r0, #1
   16bac:	str	r0, [sp]
   16bb0:	b	16b78 <__assert_fail@plt+0x559c>
   16bb4:	ldr	r0, [sp, #4]
   16bb8:	ldr	r0, [r0, #4]
   16bbc:	movw	r1, #548	; 0x224
   16bc0:	movt	r1, #3
   16bc4:	cmp	r0, r1
   16bc8:	beq	16bf4 <__assert_fail@plt+0x5618>
   16bcc:	ldr	r0, [sp, #4]
   16bd0:	ldr	r0, [r0, #4]
   16bd4:	bl	14794 <__assert_fail@plt+0x31b8>
   16bd8:	movw	r0, #256	; 0x100
   16bdc:	movw	lr, #316	; 0x13c
   16be0:	movt	lr, #3
   16be4:	str	r0, [lr]
   16be8:	movw	r0, #548	; 0x224
   16bec:	movt	r0, #3
   16bf0:	str	r0, [lr, #4]
   16bf4:	ldr	r0, [sp, #4]
   16bf8:	movw	r1, #316	; 0x13c
   16bfc:	movt	r1, #3
   16c00:	cmp	r0, r1
   16c04:	beq	16c24 <__assert_fail@plt+0x5648>
   16c08:	ldr	r0, [sp, #4]
   16c0c:	bl	14794 <__assert_fail@plt+0x31b8>
   16c10:	movw	r0, #308	; 0x134
   16c14:	movt	r0, #3
   16c18:	movw	lr, #316	; 0x13c
   16c1c:	movt	lr, #3
   16c20:	str	lr, [r0]
   16c24:	movw	r0, #312	; 0x138
   16c28:	movt	r0, #3
   16c2c:	movw	r1, #1
   16c30:	str	r1, [r0]
   16c34:	mov	sp, fp
   16c38:	pop	{fp, pc}
   16c3c:	push	{fp, lr}
   16c40:	mov	fp, sp
   16c44:	sub	sp, sp, #8
   16c48:	str	r0, [sp, #4]
   16c4c:	str	r1, [sp]
   16c50:	ldr	r0, [sp, #4]
   16c54:	ldr	r1, [sp]
   16c58:	mvn	r2, #0
   16c5c:	movw	r3, #500	; 0x1f4
   16c60:	movt	r3, #3
   16c64:	bl	16c70 <__assert_fail@plt+0x5694>
   16c68:	mov	sp, fp
   16c6c:	pop	{fp, pc}
   16c70:	push	{r4, r5, r6, sl, fp, lr}
   16c74:	add	fp, sp, #16
   16c78:	sub	sp, sp, #88	; 0x58
   16c7c:	str	r0, [fp, #-20]	; 0xffffffec
   16c80:	str	r1, [fp, #-24]	; 0xffffffe8
   16c84:	str	r2, [fp, #-28]	; 0xffffffe4
   16c88:	str	r3, [fp, #-32]	; 0xffffffe0
   16c8c:	bl	114e0 <__errno_location@plt>
   16c90:	ldr	r1, [pc, #676]	; 16f3c <__assert_fail@plt+0x5960>
   16c94:	ldr	r0, [r0]
   16c98:	str	r0, [fp, #-36]	; 0xffffffdc
   16c9c:	movw	r0, #308	; 0x134
   16ca0:	movt	r0, #3
   16ca4:	ldr	r0, [r0]
   16ca8:	str	r0, [fp, #-40]	; 0xffffffd8
   16cac:	str	r1, [fp, #-44]	; 0xffffffd4
   16cb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   16cb4:	movw	r1, #0
   16cb8:	cmp	r1, r0
   16cbc:	bgt	16cd0 <__assert_fail@plt+0x56f4>
   16cc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   16cc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16cc8:	cmp	r0, r1
   16ccc:	blt	16cd4 <__assert_fail@plt+0x56f8>
   16cd0:	bl	115b8 <abort@plt>
   16cd4:	movw	r0, #312	; 0x138
   16cd8:	movt	r0, #3
   16cdc:	ldr	r0, [r0]
   16ce0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ce4:	cmp	r0, r1
   16ce8:	bgt	16de0 <__assert_fail@plt+0x5804>
   16cec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16cf0:	movw	r1, #316	; 0x13c
   16cf4:	movt	r1, #3
   16cf8:	cmp	r0, r1
   16cfc:	movw	r0, #0
   16d00:	moveq	r0, #1
   16d04:	and	r0, r0, #1
   16d08:	strb	r0, [fp, #-45]	; 0xffffffd3
   16d0c:	movw	r0, #312	; 0x138
   16d10:	movt	r0, #3
   16d14:	ldr	r0, [r0]
   16d18:	str	r0, [sp, #52]	; 0x34
   16d1c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16d20:	tst	r0, #1
   16d24:	beq	16d34 <__assert_fail@plt+0x5758>
   16d28:	movw	r0, #0
   16d2c:	str	r0, [sp, #32]
   16d30:	b	16d3c <__assert_fail@plt+0x5760>
   16d34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d38:	str	r0, [sp, #32]
   16d3c:	ldr	r0, [sp, #32]
   16d40:	ldr	r1, [fp, #-20]	; 0xffffffec
   16d44:	movw	r2, #312	; 0x138
   16d48:	movt	r2, #3
   16d4c:	ldr	r2, [r2]
   16d50:	sub	r1, r1, r2
   16d54:	add	r2, r1, #1
   16d58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16d5c:	add	r1, sp, #52	; 0x34
   16d60:	movw	ip, #8
   16d64:	str	ip, [sp]
   16d68:	bl	189ac <__assert_fail@plt+0x73d0>
   16d6c:	str	r0, [fp, #-40]	; 0xffffffd8
   16d70:	movw	r1, #308	; 0x134
   16d74:	movt	r1, #3
   16d78:	str	r0, [r1]
   16d7c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   16d80:	tst	r0, #1
   16d84:	beq	16da4 <__assert_fail@plt+0x57c8>
   16d88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d8c:	movw	r1, #316	; 0x13c
   16d90:	movt	r1, #3
   16d94:	ldr	r2, [r1]
   16d98:	str	r2, [r0]
   16d9c:	ldr	r1, [r1, #4]
   16da0:	str	r1, [r0, #4]
   16da4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16da8:	movw	r1, #312	; 0x138
   16dac:	movt	r1, #3
   16db0:	ldr	r1, [r1]
   16db4:	add	r0, r0, r1, lsl #3
   16db8:	ldr	r2, [sp, #52]	; 0x34
   16dbc:	sub	r1, r2, r1
   16dc0:	lsl	r2, r1, #3
   16dc4:	movw	r1, #0
   16dc8:	and	r1, r1, #255	; 0xff
   16dcc:	bl	11504 <memset@plt>
   16dd0:	ldr	r0, [sp, #52]	; 0x34
   16dd4:	movw	r1, #312	; 0x138
   16dd8:	movt	r1, #3
   16ddc:	str	r0, [r1]
   16de0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16de4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16de8:	ldr	r0, [r0, r1, lsl #3]
   16dec:	str	r0, [sp, #48]	; 0x30
   16df0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16df4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16df8:	add	r0, r0, r1, lsl #3
   16dfc:	ldr	r0, [r0, #4]
   16e00:	str	r0, [sp, #44]	; 0x2c
   16e04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16e08:	ldr	r0, [r0, #4]
   16e0c:	orr	r0, r0, #1
   16e10:	str	r0, [sp, #40]	; 0x28
   16e14:	ldr	r0, [sp, #44]	; 0x2c
   16e18:	ldr	r1, [sp, #48]	; 0x30
   16e1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16e24:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16e28:	ldr	ip, [ip]
   16e2c:	ldr	lr, [sp, #40]	; 0x28
   16e30:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16e34:	add	r4, r4, #8
   16e38:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16e3c:	ldr	r5, [r5, #40]	; 0x28
   16e40:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16e44:	ldr	r6, [r6, #44]	; 0x2c
   16e48:	str	ip, [sp]
   16e4c:	str	lr, [sp, #4]
   16e50:	str	r4, [sp, #8]
   16e54:	str	r5, [sp, #12]
   16e58:	str	r6, [sp, #16]
   16e5c:	bl	15268 <__assert_fail@plt+0x3c8c>
   16e60:	str	r0, [sp, #36]	; 0x24
   16e64:	ldr	r0, [sp, #48]	; 0x30
   16e68:	ldr	r1, [sp, #36]	; 0x24
   16e6c:	cmp	r0, r1
   16e70:	bhi	16f1c <__assert_fail@plt+0x5940>
   16e74:	ldr	r0, [sp, #36]	; 0x24
   16e78:	add	r0, r0, #1
   16e7c:	str	r0, [sp, #48]	; 0x30
   16e80:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16e84:	ldr	r2, [fp, #-20]	; 0xffffffec
   16e88:	add	r1, r1, r2, lsl #3
   16e8c:	str	r0, [r1]
   16e90:	ldr	r0, [sp, #44]	; 0x2c
   16e94:	movw	r1, #548	; 0x224
   16e98:	movt	r1, #3
   16e9c:	cmp	r0, r1
   16ea0:	beq	16eac <__assert_fail@plt+0x58d0>
   16ea4:	ldr	r0, [sp, #44]	; 0x2c
   16ea8:	bl	14794 <__assert_fail@plt+0x31b8>
   16eac:	ldr	r0, [sp, #48]	; 0x30
   16eb0:	bl	18770 <__assert_fail@plt+0x7194>
   16eb4:	mov	lr, r0
   16eb8:	str	r0, [sp, #44]	; 0x2c
   16ebc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16ec0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ec4:	add	r0, r0, r1, lsl #3
   16ec8:	str	lr, [r0, #4]
   16ecc:	ldr	r0, [sp, #44]	; 0x2c
   16ed0:	ldr	r1, [sp, #48]	; 0x30
   16ed4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ed8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16edc:	ldr	lr, [fp, #-32]	; 0xffffffe0
   16ee0:	ldr	lr, [lr]
   16ee4:	ldr	ip, [sp, #40]	; 0x28
   16ee8:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16eec:	add	r4, r4, #8
   16ef0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16ef4:	ldr	r5, [r5, #40]	; 0x28
   16ef8:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16efc:	ldr	r6, [r6, #44]	; 0x2c
   16f00:	str	lr, [sp]
   16f04:	str	ip, [sp, #4]
   16f08:	str	r4, [sp, #8]
   16f0c:	str	r5, [sp, #12]
   16f10:	str	r6, [sp, #16]
   16f14:	bl	15268 <__assert_fail@plt+0x3c8c>
   16f18:	str	r0, [sp, #28]
   16f1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16f20:	str	r0, [sp, #24]
   16f24:	bl	114e0 <__errno_location@plt>
   16f28:	ldr	lr, [sp, #24]
   16f2c:	str	lr, [r0]
   16f30:	ldr	r0, [sp, #44]	; 0x2c
   16f34:	sub	sp, fp, #16
   16f38:	pop	{r4, r5, r6, sl, fp, pc}
   16f3c:	svcvc	0x00ffffff
   16f40:	push	{fp, lr}
   16f44:	mov	fp, sp
   16f48:	sub	sp, sp, #16
   16f4c:	str	r0, [fp, #-4]
   16f50:	str	r1, [sp, #8]
   16f54:	str	r2, [sp, #4]
   16f58:	ldr	r0, [fp, #-4]
   16f5c:	ldr	r1, [sp, #8]
   16f60:	ldr	r2, [sp, #4]
   16f64:	movw	r3, #500	; 0x1f4
   16f68:	movt	r3, #3
   16f6c:	bl	16c70 <__assert_fail@plt+0x5694>
   16f70:	mov	sp, fp
   16f74:	pop	{fp, pc}
   16f78:	push	{fp, lr}
   16f7c:	mov	fp, sp
   16f80:	sub	sp, sp, #8
   16f84:	str	r0, [sp, #4]
   16f88:	ldr	r1, [sp, #4]
   16f8c:	movw	r0, #0
   16f90:	bl	16c3c <__assert_fail@plt+0x5660>
   16f94:	mov	sp, fp
   16f98:	pop	{fp, pc}
   16f9c:	push	{fp, lr}
   16fa0:	mov	fp, sp
   16fa4:	sub	sp, sp, #8
   16fa8:	str	r0, [sp, #4]
   16fac:	str	r1, [sp]
   16fb0:	ldr	r1, [sp, #4]
   16fb4:	ldr	r2, [sp]
   16fb8:	movw	r0, #0
   16fbc:	bl	16f40 <__assert_fail@plt+0x5964>
   16fc0:	mov	sp, fp
   16fc4:	pop	{fp, pc}
   16fc8:	push	{fp, lr}
   16fcc:	mov	fp, sp
   16fd0:	sub	sp, sp, #64	; 0x40
   16fd4:	str	r0, [fp, #-4]
   16fd8:	str	r1, [fp, #-8]
   16fdc:	str	r2, [fp, #-12]
   16fe0:	ldr	r1, [fp, #-8]
   16fe4:	add	r0, sp, #4
   16fe8:	bl	17008 <__assert_fail@plt+0x5a2c>
   16fec:	ldr	r0, [fp, #-4]
   16ff0:	ldr	r1, [fp, #-12]
   16ff4:	mvn	r2, #0
   16ff8:	add	r3, sp, #4
   16ffc:	bl	16c70 <__assert_fail@plt+0x5694>
   17000:	mov	sp, fp
   17004:	pop	{fp, pc}
   17008:	push	{fp, lr}
   1700c:	mov	fp, sp
   17010:	sub	sp, sp, #8
   17014:	str	r1, [sp, #4]
   17018:	mov	r1, r0
   1701c:	str	r0, [sp]
   17020:	mov	r0, r1
   17024:	movw	r1, #0
   17028:	and	r1, r1, #255	; 0xff
   1702c:	movw	r2, #48	; 0x30
   17030:	bl	11504 <memset@plt>
   17034:	ldr	r0, [sp, #4]
   17038:	cmp	r0, #10
   1703c:	bne	17044 <__assert_fail@plt+0x5a68>
   17040:	bl	115b8 <abort@plt>
   17044:	ldr	r0, [sp, #4]
   17048:	ldr	r1, [sp]
   1704c:	str	r0, [r1]
   17050:	mov	sp, fp
   17054:	pop	{fp, pc}
   17058:	push	{fp, lr}
   1705c:	mov	fp, sp
   17060:	sub	sp, sp, #64	; 0x40
   17064:	str	r0, [fp, #-4]
   17068:	str	r1, [fp, #-8]
   1706c:	str	r2, [fp, #-12]
   17070:	str	r3, [fp, #-16]
   17074:	ldr	r1, [fp, #-8]
   17078:	mov	r0, sp
   1707c:	bl	17008 <__assert_fail@plt+0x5a2c>
   17080:	ldr	r0, [fp, #-4]
   17084:	ldr	r1, [fp, #-12]
   17088:	ldr	r2, [fp, #-16]
   1708c:	mov	r3, sp
   17090:	bl	16c70 <__assert_fail@plt+0x5694>
   17094:	mov	sp, fp
   17098:	pop	{fp, pc}
   1709c:	push	{fp, lr}
   170a0:	mov	fp, sp
   170a4:	sub	sp, sp, #8
   170a8:	str	r0, [sp, #4]
   170ac:	str	r1, [sp]
   170b0:	ldr	r1, [sp, #4]
   170b4:	ldr	r2, [sp]
   170b8:	movw	r0, #0
   170bc:	bl	16fc8 <__assert_fail@plt+0x59ec>
   170c0:	mov	sp, fp
   170c4:	pop	{fp, pc}
   170c8:	push	{fp, lr}
   170cc:	mov	fp, sp
   170d0:	sub	sp, sp, #16
   170d4:	str	r0, [fp, #-4]
   170d8:	str	r1, [sp, #8]
   170dc:	str	r2, [sp, #4]
   170e0:	ldr	r1, [fp, #-4]
   170e4:	ldr	r2, [sp, #8]
   170e8:	ldr	r3, [sp, #4]
   170ec:	movw	r0, #0
   170f0:	bl	17058 <__assert_fail@plt+0x5a7c>
   170f4:	mov	sp, fp
   170f8:	pop	{fp, pc}
   170fc:	push	{fp, lr}
   17100:	mov	fp, sp
   17104:	sub	sp, sp, #72	; 0x48
   17108:	movw	r3, #500	; 0x1f4
   1710c:	movt	r3, #3
   17110:	str	r0, [fp, #-4]
   17114:	str	r1, [fp, #-8]
   17118:	strb	r2, [fp, #-9]
   1711c:	add	r0, sp, #12
   17120:	mov	r1, r0
   17124:	str	r0, [sp, #8]
   17128:	mov	r0, r1
   1712c:	mov	r1, r3
   17130:	movw	r2, #48	; 0x30
   17134:	bl	11354 <memcpy@plt>
   17138:	ldr	r0, [sp, #8]
   1713c:	ldrb	r1, [fp, #-9]
   17140:	movw	r2, #1
   17144:	bl	1500c <__assert_fail@plt+0x3a30>
   17148:	ldr	r1, [fp, #-4]
   1714c:	ldr	r2, [fp, #-8]
   17150:	movw	r3, #0
   17154:	str	r0, [sp, #4]
   17158:	mov	r0, r3
   1715c:	add	r3, sp, #12
   17160:	bl	16c70 <__assert_fail@plt+0x5694>
   17164:	mov	sp, fp
   17168:	pop	{fp, pc}
   1716c:	push	{fp, lr}
   17170:	mov	fp, sp
   17174:	sub	sp, sp, #8
   17178:	str	r0, [sp, #4]
   1717c:	strb	r1, [sp, #3]
   17180:	ldr	r0, [sp, #4]
   17184:	mvn	r1, #0
   17188:	ldrb	r2, [sp, #3]
   1718c:	bl	170fc <__assert_fail@plt+0x5b20>
   17190:	mov	sp, fp
   17194:	pop	{fp, pc}
   17198:	push	{fp, lr}
   1719c:	mov	fp, sp
   171a0:	sub	sp, sp, #8
   171a4:	str	r0, [sp, #4]
   171a8:	ldr	r0, [sp, #4]
   171ac:	movw	r1, #58	; 0x3a
   171b0:	and	r1, r1, #255	; 0xff
   171b4:	bl	1716c <__assert_fail@plt+0x5b90>
   171b8:	mov	sp, fp
   171bc:	pop	{fp, pc}
   171c0:	push	{fp, lr}
   171c4:	mov	fp, sp
   171c8:	sub	sp, sp, #8
   171cc:	str	r0, [sp, #4]
   171d0:	str	r1, [sp]
   171d4:	ldr	r0, [sp, #4]
   171d8:	ldr	r1, [sp]
   171dc:	movw	r2, #58	; 0x3a
   171e0:	and	r2, r2, #255	; 0xff
   171e4:	bl	170fc <__assert_fail@plt+0x5b20>
   171e8:	mov	sp, fp
   171ec:	pop	{fp, pc}
   171f0:	push	{fp, lr}
   171f4:	mov	fp, sp
   171f8:	sub	sp, sp, #120	; 0x78
   171fc:	str	r0, [fp, #-4]
   17200:	str	r1, [fp, #-8]
   17204:	str	r2, [fp, #-12]
   17208:	ldr	r1, [fp, #-8]
   1720c:	add	r0, sp, #12
   17210:	bl	17008 <__assert_fail@plt+0x5a2c>
   17214:	add	r0, sp, #60	; 0x3c
   17218:	mov	r1, r0
   1721c:	add	r2, sp, #12
   17220:	str	r0, [sp, #8]
   17224:	mov	r0, r1
   17228:	mov	r1, r2
   1722c:	movw	r2, #48	; 0x30
   17230:	bl	11354 <memcpy@plt>
   17234:	ldr	r0, [sp, #8]
   17238:	movw	r1, #58	; 0x3a
   1723c:	and	r1, r1, #255	; 0xff
   17240:	movw	r2, #1
   17244:	bl	1500c <__assert_fail@plt+0x3a30>
   17248:	ldr	r1, [fp, #-4]
   1724c:	ldr	r2, [fp, #-12]
   17250:	str	r0, [sp, #4]
   17254:	mov	r0, r1
   17258:	mov	r1, r2
   1725c:	mvn	r2, #0
   17260:	add	r3, sp, #60	; 0x3c
   17264:	bl	16c70 <__assert_fail@plt+0x5694>
   17268:	mov	sp, fp
   1726c:	pop	{fp, pc}
   17270:	push	{fp, lr}
   17274:	mov	fp, sp
   17278:	sub	sp, sp, #24
   1727c:	str	r0, [fp, #-4]
   17280:	str	r1, [fp, #-8]
   17284:	str	r2, [sp, #12]
   17288:	str	r3, [sp, #8]
   1728c:	ldr	r0, [fp, #-4]
   17290:	ldr	r1, [fp, #-8]
   17294:	ldr	r2, [sp, #12]
   17298:	ldr	r3, [sp, #8]
   1729c:	mvn	ip, #0
   172a0:	str	ip, [sp]
   172a4:	bl	172b0 <__assert_fail@plt+0x5cd4>
   172a8:	mov	sp, fp
   172ac:	pop	{fp, pc}
   172b0:	push	{fp, lr}
   172b4:	mov	fp, sp
   172b8:	sub	sp, sp, #72	; 0x48
   172bc:	ldr	ip, [fp, #8]
   172c0:	movw	lr, #500	; 0x1f4
   172c4:	movt	lr, #3
   172c8:	str	r0, [fp, #-4]
   172cc:	str	r1, [fp, #-8]
   172d0:	str	r2, [fp, #-12]
   172d4:	str	r3, [fp, #-16]
   172d8:	add	r0, sp, #8
   172dc:	mov	r1, r0
   172e0:	str	r0, [sp, #4]
   172e4:	mov	r0, r1
   172e8:	mov	r1, lr
   172ec:	movw	r2, #48	; 0x30
   172f0:	str	ip, [sp]
   172f4:	bl	11354 <memcpy@plt>
   172f8:	ldr	r1, [fp, #-8]
   172fc:	ldr	r2, [fp, #-12]
   17300:	ldr	r0, [sp, #4]
   17304:	bl	1510c <__assert_fail@plt+0x3b30>
   17308:	ldr	r0, [fp, #-4]
   1730c:	ldr	r1, [fp, #-16]
   17310:	ldr	r2, [fp, #8]
   17314:	add	r3, sp, #8
   17318:	bl	16c70 <__assert_fail@plt+0x5694>
   1731c:	mov	sp, fp
   17320:	pop	{fp, pc}
   17324:	push	{fp, lr}
   17328:	mov	fp, sp
   1732c:	sub	sp, sp, #16
   17330:	str	r0, [fp, #-4]
   17334:	str	r1, [sp, #8]
   17338:	str	r2, [sp, #4]
   1733c:	ldr	r1, [fp, #-4]
   17340:	ldr	r2, [sp, #8]
   17344:	ldr	r3, [sp, #4]
   17348:	movw	r0, #0
   1734c:	bl	17270 <__assert_fail@plt+0x5c94>
   17350:	mov	sp, fp
   17354:	pop	{fp, pc}
   17358:	push	{fp, lr}
   1735c:	mov	fp, sp
   17360:	sub	sp, sp, #24
   17364:	str	r0, [fp, #-4]
   17368:	str	r1, [fp, #-8]
   1736c:	str	r2, [sp, #12]
   17370:	str	r3, [sp, #8]
   17374:	ldr	r1, [fp, #-4]
   17378:	ldr	r2, [fp, #-8]
   1737c:	ldr	r3, [sp, #12]
   17380:	ldr	r0, [sp, #8]
   17384:	movw	ip, #0
   17388:	str	r0, [sp, #4]
   1738c:	mov	r0, ip
   17390:	ldr	ip, [sp, #4]
   17394:	str	ip, [sp]
   17398:	bl	172b0 <__assert_fail@plt+0x5cd4>
   1739c:	mov	sp, fp
   173a0:	pop	{fp, pc}
   173a4:	push	{fp, lr}
   173a8:	mov	fp, sp
   173ac:	sub	sp, sp, #16
   173b0:	str	r0, [fp, #-4]
   173b4:	str	r1, [sp, #8]
   173b8:	str	r2, [sp, #4]
   173bc:	ldr	r0, [fp, #-4]
   173c0:	ldr	r1, [sp, #8]
   173c4:	ldr	r2, [sp, #4]
   173c8:	movw	r3, #324	; 0x144
   173cc:	movt	r3, #3
   173d0:	bl	16c70 <__assert_fail@plt+0x5694>
   173d4:	mov	sp, fp
   173d8:	pop	{fp, pc}
   173dc:	push	{fp, lr}
   173e0:	mov	fp, sp
   173e4:	sub	sp, sp, #8
   173e8:	str	r0, [sp, #4]
   173ec:	str	r1, [sp]
   173f0:	ldr	r1, [sp, #4]
   173f4:	ldr	r2, [sp]
   173f8:	movw	r0, #0
   173fc:	bl	173a4 <__assert_fail@plt+0x5dc8>
   17400:	mov	sp, fp
   17404:	pop	{fp, pc}
   17408:	push	{fp, lr}
   1740c:	mov	fp, sp
   17410:	sub	sp, sp, #8
   17414:	str	r0, [sp, #4]
   17418:	str	r1, [sp]
   1741c:	ldr	r0, [sp, #4]
   17420:	ldr	r1, [sp]
   17424:	mvn	r2, #0
   17428:	bl	173a4 <__assert_fail@plt+0x5dc8>
   1742c:	mov	sp, fp
   17430:	pop	{fp, pc}
   17434:	push	{fp, lr}
   17438:	mov	fp, sp
   1743c:	sub	sp, sp, #8
   17440:	str	r0, [sp, #4]
   17444:	ldr	r1, [sp, #4]
   17448:	movw	r0, #0
   1744c:	bl	17408 <__assert_fail@plt+0x5e2c>
   17450:	mov	sp, fp
   17454:	pop	{fp, pc}
   17458:	push	{fp, lr}
   1745c:	mov	fp, sp
   17460:	sub	sp, sp, #24
   17464:	str	r0, [fp, #-8]
   17468:	str	r1, [sp, #12]
   1746c:	ldr	r0, [fp, #-8]
   17470:	bl	114a4 <gettext@plt>
   17474:	str	r0, [sp, #8]
   17478:	ldr	r0, [sp, #8]
   1747c:	ldr	r1, [fp, #-8]
   17480:	cmp	r0, r1
   17484:	beq	17494 <__assert_fail@plt+0x5eb8>
   17488:	ldr	r0, [sp, #8]
   1748c:	str	r0, [fp, #-4]
   17490:	b	17560 <__assert_fail@plt+0x5f84>
   17494:	bl	1bb44 <__assert_fail@plt+0xa568>
   17498:	str	r0, [sp, #4]
   1749c:	ldr	r0, [sp, #4]
   174a0:	movw	r1, #60976	; 0xee30
   174a4:	movt	r1, #1
   174a8:	bl	1b74c <__assert_fail@plt+0xa170>
   174ac:	cmp	r0, #0
   174b0:	bne	174e8 <__assert_fail@plt+0x5f0c>
   174b4:	ldr	r0, [fp, #-8]
   174b8:	ldrb	r0, [r0]
   174bc:	cmp	r0, #96	; 0x60
   174c0:	movw	r0, #0
   174c4:	moveq	r0, #1
   174c8:	tst	r0, #1
   174cc:	movw	r0, #60986	; 0xee3a
   174d0:	movt	r0, #1
   174d4:	movw	r1, #60982	; 0xee36
   174d8:	movt	r1, #1
   174dc:	movne	r0, r1
   174e0:	str	r0, [fp, #-4]
   174e4:	b	17560 <__assert_fail@plt+0x5f84>
   174e8:	ldr	r0, [sp, #4]
   174ec:	movw	r1, #60990	; 0xee3e
   174f0:	movt	r1, #1
   174f4:	bl	1b74c <__assert_fail@plt+0xa170>
   174f8:	cmp	r0, #0
   174fc:	bne	17534 <__assert_fail@plt+0x5f58>
   17500:	ldr	r0, [fp, #-8]
   17504:	ldrb	r0, [r0]
   17508:	cmp	r0, #96	; 0x60
   1750c:	movw	r0, #0
   17510:	moveq	r0, #1
   17514:	tst	r0, #1
   17518:	movw	r0, #61002	; 0xee4a
   1751c:	movt	r0, #1
   17520:	movw	r1, #60998	; 0xee46
   17524:	movt	r1, #1
   17528:	movne	r0, r1
   1752c:	str	r0, [fp, #-4]
   17530:	b	17560 <__assert_fail@plt+0x5f84>
   17534:	ldr	r0, [sp, #12]
   17538:	cmp	r0, #9
   1753c:	movw	r0, #0
   17540:	moveq	r0, #1
   17544:	tst	r0, #1
   17548:	movw	r0, #60974	; 0xee2e
   1754c:	movt	r0, #1
   17550:	movw	r1, #59955	; 0xea33
   17554:	movt	r1, #1
   17558:	movne	r0, r1
   1755c:	str	r0, [fp, #-4]
   17560:	ldr	r0, [fp, #-4]
   17564:	mov	sp, fp
   17568:	pop	{fp, pc}
   1756c:	push	{fp, lr}
   17570:	mov	fp, sp
   17574:	sub	sp, sp, #32
   17578:	str	r0, [fp, #-4]
   1757c:	ldr	r0, [fp, #-4]
   17580:	movw	r1, #0
   17584:	str	r1, [r0]
   17588:	ldr	r0, [fp, #-4]
   1758c:	str	r1, [r0, #4]
   17590:	ldr	r0, [fp, #-4]
   17594:	str	r1, [r0, #8]
   17598:	ldr	r0, [fp, #-4]
   1759c:	add	r0, r0, #12
   175a0:	str	r1, [fp, #-8]
   175a4:	ldr	r2, [fp, #-8]
   175a8:	movw	r3, #46584	; 0xb5f8
   175ac:	movt	r3, #1
   175b0:	movw	ip, #18324	; 0x4794
   175b4:	movt	ip, #1
   175b8:	str	ip, [sp]
   175bc:	bl	1bba0 <_obstack_begin@@Base>
   175c0:	ldr	r1, [fp, #-4]
   175c4:	add	r1, r1, #56	; 0x38
   175c8:	str	r0, [fp, #-12]
   175cc:	mov	r0, r1
   175d0:	movw	r1, #0
   175d4:	str	r1, [sp, #16]
   175d8:	ldr	r2, [sp, #16]
   175dc:	movw	r3, #46584	; 0xb5f8
   175e0:	movt	r3, #1
   175e4:	movw	ip, #18324	; 0x4794
   175e8:	movt	ip, #1
   175ec:	str	ip, [sp]
   175f0:	bl	1bba0 <_obstack_begin@@Base>
   175f4:	ldr	r1, [fp, #-4]
   175f8:	add	r1, r1, #100	; 0x64
   175fc:	str	r0, [sp, #12]
   17600:	mov	r0, r1
   17604:	movw	r1, #0
   17608:	str	r1, [sp, #8]
   1760c:	ldr	r2, [sp, #8]
   17610:	movw	r3, #46584	; 0xb5f8
   17614:	movt	r3, #1
   17618:	movw	ip, #18324	; 0x4794
   1761c:	movt	ip, #1
   17620:	str	ip, [sp]
   17624:	bl	1bba0 <_obstack_begin@@Base>
   17628:	str	r0, [sp, #4]
   1762c:	mov	sp, fp
   17630:	pop	{fp, pc}
   17634:	push	{fp, lr}
   17638:	mov	fp, sp
   1763c:	sub	sp, sp, #32
   17640:	str	r0, [fp, #-4]
   17644:	ldr	r0, [fp, #-4]
   17648:	add	r0, r0, #12
   1764c:	str	r0, [fp, #-8]
   17650:	movw	r0, #0
   17654:	str	r0, [fp, #-12]
   17658:	ldr	r0, [fp, #-12]
   1765c:	ldr	r1, [fp, #-8]
   17660:	ldr	r1, [r1, #4]
   17664:	cmp	r0, r1
   17668:	bls	17698 <__assert_fail@plt+0x60bc>
   1766c:	ldr	r0, [fp, #-12]
   17670:	ldr	r1, [fp, #-8]
   17674:	ldr	r1, [r1, #16]
   17678:	cmp	r0, r1
   1767c:	bcs	17698 <__assert_fail@plt+0x60bc>
   17680:	ldr	r0, [fp, #-12]
   17684:	ldr	r1, [fp, #-8]
   17688:	str	r0, [r1, #8]
   1768c:	ldr	r1, [fp, #-8]
   17690:	str	r0, [r1, #12]
   17694:	b	176a4 <__assert_fail@plt+0x60c8>
   17698:	ldr	r0, [fp, #-8]
   1769c:	ldr	r1, [fp, #-12]
   176a0:	bl	1c178 <_obstack_free@@Base>
   176a4:	ldr	r0, [fp, #-4]
   176a8:	add	r0, r0, #56	; 0x38
   176ac:	str	r0, [sp, #16]
   176b0:	movw	r0, #0
   176b4:	str	r0, [sp, #12]
   176b8:	ldr	r0, [sp, #12]
   176bc:	ldr	r1, [sp, #16]
   176c0:	ldr	r1, [r1, #4]
   176c4:	cmp	r0, r1
   176c8:	bls	176f8 <__assert_fail@plt+0x611c>
   176cc:	ldr	r0, [sp, #12]
   176d0:	ldr	r1, [sp, #16]
   176d4:	ldr	r1, [r1, #16]
   176d8:	cmp	r0, r1
   176dc:	bcs	176f8 <__assert_fail@plt+0x611c>
   176e0:	ldr	r0, [sp, #12]
   176e4:	ldr	r1, [sp, #16]
   176e8:	str	r0, [r1, #8]
   176ec:	ldr	r1, [sp, #16]
   176f0:	str	r0, [r1, #12]
   176f4:	b	17704 <__assert_fail@plt+0x6128>
   176f8:	ldr	r0, [sp, #16]
   176fc:	ldr	r1, [sp, #12]
   17700:	bl	1c178 <_obstack_free@@Base>
   17704:	ldr	r0, [fp, #-4]
   17708:	add	r0, r0, #100	; 0x64
   1770c:	str	r0, [sp, #8]
   17710:	movw	r0, #0
   17714:	str	r0, [sp, #4]
   17718:	ldr	r0, [sp, #4]
   1771c:	ldr	r1, [sp, #8]
   17720:	ldr	r1, [r1, #4]
   17724:	cmp	r0, r1
   17728:	bls	17758 <__assert_fail@plt+0x617c>
   1772c:	ldr	r0, [sp, #4]
   17730:	ldr	r1, [sp, #8]
   17734:	ldr	r1, [r1, #16]
   17738:	cmp	r0, r1
   1773c:	bcs	17758 <__assert_fail@plt+0x617c>
   17740:	ldr	r0, [sp, #4]
   17744:	ldr	r1, [sp, #8]
   17748:	str	r0, [r1, #8]
   1774c:	ldr	r1, [sp, #8]
   17750:	str	r0, [r1, #12]
   17754:	b	17764 <__assert_fail@plt+0x6188>
   17758:	ldr	r0, [sp, #8]
   1775c:	ldr	r1, [sp, #4]
   17760:	bl	1c178 <_obstack_free@@Base>
   17764:	mov	sp, fp
   17768:	pop	{fp, pc}
   1776c:	push	{fp, lr}
   17770:	mov	fp, sp
   17774:	sub	sp, sp, #96	; 0x60
   17778:	str	r0, [fp, #-4]
   1777c:	str	r1, [fp, #-8]
   17780:	ldr	r0, [fp, #-4]
   17784:	bl	1151c <fgetc@plt>
   17788:	str	r0, [fp, #-12]
   1778c:	ldr	r0, [fp, #-12]
   17790:	cmn	r0, #1
   17794:	bne	17838 <__assert_fail@plt+0x625c>
   17798:	ldr	r0, [fp, #-8]
   1779c:	add	r0, r0, #12
   177a0:	str	r0, [fp, #-20]	; 0xffffffec
   177a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   177a8:	ldr	r0, [r0, #12]
   177ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   177b0:	ldr	r1, [r1, #8]
   177b4:	sub	r0, r0, r1
   177b8:	str	r0, [fp, #-24]	; 0xffffffe8
   177bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177c0:	str	r0, [fp, #-16]
   177c4:	ldr	r0, [fp, #-16]
   177c8:	cmp	r0, #0
   177cc:	beq	17834 <__assert_fail@plt+0x6258>
   177d0:	ldr	r0, [fp, #-8]
   177d4:	add	r0, r0, #12
   177d8:	str	r0, [fp, #-28]	; 0xffffffe4
   177dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   177e0:	str	r0, [fp, #-32]	; 0xffffffe0
   177e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   177e8:	ldr	r0, [r0, #16]
   177ec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   177f0:	ldr	r1, [r1, #12]
   177f4:	sub	r0, r0, r1
   177f8:	str	r0, [fp, #-36]	; 0xffffffdc
   177fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17800:	cmp	r0, #1
   17804:	bcs	17814 <__assert_fail@plt+0x6238>
   17808:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1780c:	movw	r1, #1
   17810:	bl	1bda8 <_obstack_newchunk@@Base>
   17814:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17818:	ldr	r1, [r0, #12]
   1781c:	add	r2, r1, #1
   17820:	str	r2, [r0, #12]
   17824:	movw	r0, #0
   17828:	strb	r0, [r1]
   1782c:	ldr	r0, [fp, #-8]
   17830:	bl	17b10 <__assert_fail@plt+0x6534>
   17834:	b	178ac <__assert_fail@plt+0x62d0>
   17838:	ldr	r0, [fp, #-8]
   1783c:	add	r0, r0, #12
   17840:	str	r0, [fp, #-40]	; 0xffffffd8
   17844:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17848:	str	r0, [fp, #-44]	; 0xffffffd4
   1784c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17850:	ldr	r0, [r0, #16]
   17854:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17858:	ldr	r1, [r1, #12]
   1785c:	sub	r0, r0, r1
   17860:	str	r0, [sp, #48]	; 0x30
   17864:	ldr	r0, [sp, #48]	; 0x30
   17868:	cmp	r0, #1
   1786c:	bcs	1787c <__assert_fail@plt+0x62a0>
   17870:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17874:	movw	r1, #1
   17878:	bl	1bda8 <_obstack_newchunk@@Base>
   1787c:	ldr	r0, [fp, #-12]
   17880:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17884:	ldr	r2, [r1, #12]
   17888:	add	r3, r2, #1
   1788c:	str	r3, [r1, #12]
   17890:	strb	r0, [r2]
   17894:	ldr	r0, [fp, #-12]
   17898:	cmp	r0, #0
   1789c:	bne	178a8 <__assert_fail@plt+0x62cc>
   178a0:	ldr	r0, [fp, #-8]
   178a4:	bl	17b10 <__assert_fail@plt+0x6534>
   178a8:	b	17780 <__assert_fail@plt+0x61a4>
   178ac:	ldr	r0, [fp, #-8]
   178b0:	add	r0, r0, #56	; 0x38
   178b4:	str	r0, [sp, #44]	; 0x2c
   178b8:	ldr	r0, [sp, #44]	; 0x2c
   178bc:	str	r0, [sp, #40]	; 0x28
   178c0:	ldr	r0, [sp, #40]	; 0x28
   178c4:	ldr	r0, [r0, #16]
   178c8:	ldr	r1, [sp, #40]	; 0x28
   178cc:	ldr	r1, [r1, #12]
   178d0:	sub	r0, r0, r1
   178d4:	str	r0, [sp, #36]	; 0x24
   178d8:	ldr	r0, [sp, #36]	; 0x24
   178dc:	cmp	r0, #4
   178e0:	bcs	178f0 <__assert_fail@plt+0x6314>
   178e4:	ldr	r0, [sp, #44]	; 0x2c
   178e8:	movw	r1, #4
   178ec:	bl	1bda8 <_obstack_newchunk@@Base>
   178f0:	ldr	r0, [sp, #44]	; 0x2c
   178f4:	str	r0, [sp, #32]
   178f8:	ldr	r0, [sp, #32]
   178fc:	ldr	r0, [r0, #12]
   17900:	str	r0, [sp, #28]
   17904:	ldr	r0, [sp, #28]
   17908:	movw	r1, #0
   1790c:	str	r1, [r0]
   17910:	ldr	r0, [sp, #32]
   17914:	ldr	r1, [r0, #12]
   17918:	add	r1, r1, #4
   1791c:	str	r1, [r0, #12]
   17920:	ldr	r0, [fp, #-8]
   17924:	add	r0, r0, #56	; 0x38
   17928:	str	r0, [sp, #24]
   1792c:	ldr	r0, [sp, #24]
   17930:	ldr	r0, [r0, #8]
   17934:	str	r0, [sp, #20]
   17938:	ldr	r0, [sp, #24]
   1793c:	ldr	r0, [r0, #12]
   17940:	ldr	r1, [sp, #20]
   17944:	cmp	r0, r1
   17948:	bne	17964 <__assert_fail@plt+0x6388>
   1794c:	ldr	r0, [sp, #24]
   17950:	ldrb	r1, [r0, #40]	; 0x28
   17954:	bic	r1, r1, #2
   17958:	movw	r2, #2
   1795c:	orr	r1, r1, r2
   17960:	strb	r1, [r0, #40]	; 0x28
   17964:	ldr	r0, [sp, #24]
   17968:	ldr	r0, [r0, #12]
   1796c:	sub	r0, r0, #0
   17970:	ldr	r1, [sp, #24]
   17974:	ldr	r1, [r1, #24]
   17978:	add	r0, r0, r1
   1797c:	ldr	r1, [sp, #24]
   17980:	ldr	r1, [r1, #24]
   17984:	mvn	r2, #0
   17988:	eor	r1, r1, r2
   1798c:	and	r0, r0, r1
   17990:	movw	r1, #0
   17994:	add	r0, r1, r0
   17998:	ldr	r1, [sp, #24]
   1799c:	str	r0, [r1, #12]
   179a0:	ldr	r0, [sp, #24]
   179a4:	ldr	r0, [r0, #12]
   179a8:	ldr	r1, [sp, #24]
   179ac:	ldr	r1, [r1, #4]
   179b0:	sub	r0, r0, r1
   179b4:	ldr	r1, [sp, #24]
   179b8:	ldr	r1, [r1, #16]
   179bc:	ldr	r2, [sp, #24]
   179c0:	ldr	r2, [r2, #4]
   179c4:	sub	r1, r1, r2
   179c8:	cmp	r0, r1
   179cc:	bls	179e0 <__assert_fail@plt+0x6404>
   179d0:	ldr	r0, [sp, #24]
   179d4:	ldr	r0, [r0, #16]
   179d8:	ldr	r1, [sp, #24]
   179dc:	str	r0, [r1, #12]
   179e0:	ldr	r0, [sp, #24]
   179e4:	ldr	r0, [r0, #12]
   179e8:	ldr	r1, [sp, #24]
   179ec:	str	r0, [r1, #8]
   179f0:	ldr	r0, [sp, #20]
   179f4:	str	r0, [sp, #16]
   179f8:	ldr	r0, [sp, #16]
   179fc:	ldr	r1, [fp, #-8]
   17a00:	str	r0, [r1, #4]
   17a04:	ldr	r0, [fp, #-8]
   17a08:	add	r0, r0, #100	; 0x64
   17a0c:	str	r0, [sp, #12]
   17a10:	ldr	r0, [sp, #12]
   17a14:	ldr	r0, [r0, #8]
   17a18:	str	r0, [sp, #8]
   17a1c:	ldr	r0, [sp, #12]
   17a20:	ldr	r0, [r0, #12]
   17a24:	ldr	r1, [sp, #8]
   17a28:	cmp	r0, r1
   17a2c:	bne	17a48 <__assert_fail@plt+0x646c>
   17a30:	ldr	r0, [sp, #12]
   17a34:	ldrb	r1, [r0, #40]	; 0x28
   17a38:	bic	r1, r1, #2
   17a3c:	movw	r2, #2
   17a40:	orr	r1, r1, r2
   17a44:	strb	r1, [r0, #40]	; 0x28
   17a48:	ldr	r0, [sp, #12]
   17a4c:	ldr	r0, [r0, #12]
   17a50:	sub	r0, r0, #0
   17a54:	ldr	r1, [sp, #12]
   17a58:	ldr	r1, [r1, #24]
   17a5c:	add	r0, r0, r1
   17a60:	ldr	r1, [sp, #12]
   17a64:	ldr	r1, [r1, #24]
   17a68:	mvn	r2, #0
   17a6c:	eor	r1, r1, r2
   17a70:	and	r0, r0, r1
   17a74:	movw	r1, #0
   17a78:	add	r0, r1, r0
   17a7c:	ldr	r1, [sp, #12]
   17a80:	str	r0, [r1, #12]
   17a84:	ldr	r0, [sp, #12]
   17a88:	ldr	r0, [r0, #12]
   17a8c:	ldr	r1, [sp, #12]
   17a90:	ldr	r1, [r1, #4]
   17a94:	sub	r0, r0, r1
   17a98:	ldr	r1, [sp, #12]
   17a9c:	ldr	r1, [r1, #16]
   17aa0:	ldr	r2, [sp, #12]
   17aa4:	ldr	r2, [r2, #4]
   17aa8:	sub	r1, r1, r2
   17aac:	cmp	r0, r1
   17ab0:	bls	17ac4 <__assert_fail@plt+0x64e8>
   17ab4:	ldr	r0, [sp, #12]
   17ab8:	ldr	r0, [r0, #16]
   17abc:	ldr	r1, [sp, #12]
   17ac0:	str	r0, [r1, #12]
   17ac4:	ldr	r0, [sp, #12]
   17ac8:	ldr	r0, [r0, #12]
   17acc:	ldr	r1, [sp, #12]
   17ad0:	str	r0, [r1, #8]
   17ad4:	ldr	r0, [sp, #8]
   17ad8:	str	r0, [sp, #4]
   17adc:	ldr	r0, [sp, #4]
   17ae0:	ldr	r1, [fp, #-8]
   17ae4:	str	r0, [r1, #8]
   17ae8:	ldr	r0, [fp, #-4]
   17aec:	bl	1133c <ferror@plt>
   17af0:	cmp	r0, #0
   17af4:	movw	r0, #0
   17af8:	movne	r0, #1
   17afc:	mvn	r1, #0
   17b00:	eor	r0, r0, r1
   17b04:	and	r0, r0, #1
   17b08:	mov	sp, fp
   17b0c:	pop	{fp, pc}
   17b10:	push	{fp, lr}
   17b14:	mov	fp, sp
   17b18:	sub	sp, sp, #72	; 0x48
   17b1c:	str	r0, [fp, #-4]
   17b20:	ldr	r0, [fp, #-4]
   17b24:	add	r0, r0, #12
   17b28:	str	r0, [fp, #-12]
   17b2c:	ldr	r0, [fp, #-12]
   17b30:	ldr	r0, [r0, #12]
   17b34:	ldr	r1, [fp, #-12]
   17b38:	ldr	r1, [r1, #8]
   17b3c:	sub	r0, r0, r1
   17b40:	str	r0, [fp, #-16]
   17b44:	ldr	r0, [fp, #-16]
   17b48:	sub	r0, r0, #1
   17b4c:	str	r0, [fp, #-8]
   17b50:	ldr	r0, [fp, #-4]
   17b54:	add	r0, r0, #12
   17b58:	str	r0, [fp, #-24]	; 0xffffffe8
   17b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b60:	ldr	r0, [r0, #8]
   17b64:	str	r0, [fp, #-28]	; 0xffffffe4
   17b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b6c:	ldr	r0, [r0, #12]
   17b70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17b74:	cmp	r0, r1
   17b78:	bne	17b94 <__assert_fail@plt+0x65b8>
   17b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b80:	ldrb	r1, [r0, #40]	; 0x28
   17b84:	bic	r1, r1, #2
   17b88:	movw	r2, #2
   17b8c:	orr	r1, r1, r2
   17b90:	strb	r1, [r0, #40]	; 0x28
   17b94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b98:	ldr	r0, [r0, #12]
   17b9c:	sub	r0, r0, #0
   17ba0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ba4:	ldr	r1, [r1, #24]
   17ba8:	add	r0, r0, r1
   17bac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bb0:	ldr	r1, [r1, #24]
   17bb4:	mvn	r2, #0
   17bb8:	eor	r1, r1, r2
   17bbc:	and	r0, r0, r1
   17bc0:	movw	r1, #0
   17bc4:	add	r0, r1, r0
   17bc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bcc:	str	r0, [r1, #12]
   17bd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bd4:	ldr	r0, [r0, #12]
   17bd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bdc:	ldr	r1, [r1, #4]
   17be0:	sub	r0, r0, r1
   17be4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17be8:	ldr	r1, [r1, #16]
   17bec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17bf0:	ldr	r2, [r2, #4]
   17bf4:	sub	r1, r1, r2
   17bf8:	cmp	r0, r1
   17bfc:	bls	17c10 <__assert_fail@plt+0x6634>
   17c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c04:	ldr	r0, [r0, #16]
   17c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c0c:	str	r0, [r1, #12]
   17c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c14:	ldr	r0, [r0, #12]
   17c18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c1c:	str	r0, [r1, #8]
   17c20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17c24:	str	r0, [fp, #-32]	; 0xffffffe0
   17c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17c2c:	str	r0, [fp, #-20]	; 0xffffffec
   17c30:	ldr	r0, [fp, #-4]
   17c34:	add	r0, r0, #56	; 0x38
   17c38:	str	r0, [sp, #36]	; 0x24
   17c3c:	ldr	r0, [sp, #36]	; 0x24
   17c40:	str	r0, [sp, #32]
   17c44:	ldr	r0, [sp, #32]
   17c48:	ldr	r0, [r0, #16]
   17c4c:	ldr	r1, [sp, #32]
   17c50:	ldr	r1, [r1, #12]
   17c54:	sub	r0, r0, r1
   17c58:	str	r0, [sp, #28]
   17c5c:	ldr	r0, [sp, #28]
   17c60:	cmp	r0, #4
   17c64:	bcs	17c74 <__assert_fail@plt+0x6698>
   17c68:	ldr	r0, [sp, #36]	; 0x24
   17c6c:	movw	r1, #4
   17c70:	bl	1bda8 <_obstack_newchunk@@Base>
   17c74:	ldr	r0, [sp, #36]	; 0x24
   17c78:	str	r0, [sp, #24]
   17c7c:	ldr	r0, [sp, #24]
   17c80:	ldr	r0, [r0, #12]
   17c84:	str	r0, [sp, #20]
   17c88:	ldr	r0, [fp, #-20]	; 0xffffffec
   17c8c:	ldr	r1, [sp, #20]
   17c90:	str	r0, [r1]
   17c94:	ldr	r0, [sp, #24]
   17c98:	ldr	r1, [r0, #12]
   17c9c:	add	r1, r1, #4
   17ca0:	str	r1, [r0, #12]
   17ca4:	ldr	r0, [fp, #-4]
   17ca8:	add	r0, r0, #100	; 0x64
   17cac:	str	r0, [sp, #16]
   17cb0:	movw	r0, #4
   17cb4:	str	r0, [sp, #12]
   17cb8:	ldr	r0, [sp, #16]
   17cbc:	str	r0, [sp, #8]
   17cc0:	ldr	r0, [sp, #8]
   17cc4:	ldr	r0, [r0, #16]
   17cc8:	ldr	r1, [sp, #8]
   17ccc:	ldr	r1, [r1, #12]
   17cd0:	sub	r0, r0, r1
   17cd4:	str	r0, [sp, #4]
   17cd8:	ldr	r0, [sp, #4]
   17cdc:	ldr	r1, [sp, #12]
   17ce0:	cmp	r0, r1
   17ce4:	bcs	17cf4 <__assert_fail@plt+0x6718>
   17ce8:	ldr	r0, [sp, #16]
   17cec:	ldr	r1, [sp, #12]
   17cf0:	bl	1bda8 <_obstack_newchunk@@Base>
   17cf4:	ldr	r0, [sp, #16]
   17cf8:	ldr	r0, [r0, #12]
   17cfc:	sub	r1, fp, #8
   17d00:	ldr	r2, [sp, #12]
   17d04:	bl	11354 <memcpy@plt>
   17d08:	ldr	r0, [sp, #12]
   17d0c:	ldr	r1, [sp, #16]
   17d10:	ldr	r2, [r1, #12]
   17d14:	add	r0, r2, r0
   17d18:	str	r0, [r1, #12]
   17d1c:	ldr	r0, [fp, #-4]
   17d20:	ldr	r1, [r0]
   17d24:	add	r1, r1, #1
   17d28:	str	r1, [r0]
   17d2c:	mov	sp, fp
   17d30:	pop	{fp, pc}
   17d34:	push	{fp, lr}
   17d38:	mov	fp, sp
   17d3c:	sub	sp, sp, #24
   17d40:	str	r0, [fp, #-8]
   17d44:	str	r1, [sp, #12]
   17d48:	str	r2, [sp, #8]
   17d4c:	ldr	r0, [fp, #-8]
   17d50:	ldr	r1, [sp, #12]
   17d54:	ldr	r2, [sp, #8]
   17d58:	bl	11300 <read@plt>
   17d5c:	str	r0, [sp, #4]
   17d60:	ldr	r0, [sp, #4]
   17d64:	movw	r1, #0
   17d68:	cmp	r1, r0
   17d6c:	bgt	17d7c <__assert_fail@plt+0x67a0>
   17d70:	ldr	r0, [sp, #4]
   17d74:	str	r0, [fp, #-4]
   17d78:	b	17dd4 <__assert_fail@plt+0x67f8>
   17d7c:	bl	114e0 <__errno_location@plt>
   17d80:	ldr	r0, [r0]
   17d84:	cmp	r0, #4
   17d88:	bne	17d90 <__assert_fail@plt+0x67b4>
   17d8c:	b	17d4c <__assert_fail@plt+0x6770>
   17d90:	bl	114e0 <__errno_location@plt>
   17d94:	ldr	r0, [r0]
   17d98:	cmp	r0, #22
   17d9c:	bne	17dbc <__assert_fail@plt+0x67e0>
   17da0:	ldr	r0, [pc, #56]	; 17de0 <__assert_fail@plt+0x6804>
   17da4:	ldr	r1, [sp, #8]
   17da8:	cmp	r0, r1
   17dac:	bcs	17dbc <__assert_fail@plt+0x67e0>
   17db0:	ldr	r0, [pc, #40]	; 17de0 <__assert_fail@plt+0x6804>
   17db4:	str	r0, [sp, #8]
   17db8:	b	17dc8 <__assert_fail@plt+0x67ec>
   17dbc:	ldr	r0, [sp, #4]
   17dc0:	str	r0, [fp, #-4]
   17dc4:	b	17dd4 <__assert_fail@plt+0x67f8>
   17dc8:	b	17dcc <__assert_fail@plt+0x67f0>
   17dcc:	b	17dd0 <__assert_fail@plt+0x67f4>
   17dd0:	b	17d4c <__assert_fail@plt+0x6770>
   17dd4:	ldr	r0, [fp, #-4]
   17dd8:	mov	sp, fp
   17ddc:	pop	{fp, pc}
   17de0:	svcvc	0x00f00000	; IMB
   17de4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17de8:	add	fp, sp, #28
   17dec:	sub	sp, sp, #260	; 0x104
   17df0:	ldr	ip, [fp, #12]
   17df4:	ldr	lr, [fp, #8]
   17df8:	str	r0, [fp, #-32]	; 0xffffffe0
   17dfc:	str	r1, [fp, #-36]	; 0xffffffdc
   17e00:	str	r2, [fp, #-40]	; 0xffffffd8
   17e04:	str	r3, [fp, #-44]	; 0xffffffd4
   17e08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17e0c:	movw	r1, #0
   17e10:	cmp	r0, r1
   17e14:	str	lr, [fp, #-48]	; 0xffffffd0
   17e18:	str	ip, [fp, #-52]	; 0xffffffcc
   17e1c:	beq	17e54 <__assert_fail@plt+0x6878>
   17e20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17e28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17e2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   17e30:	movw	ip, #61092	; 0xeea4
   17e34:	movt	ip, #1
   17e38:	str	r1, [fp, #-56]	; 0xffffffc8
   17e3c:	mov	r1, ip
   17e40:	ldr	ip, [fp, #-56]	; 0xffffffc8
   17e44:	str	ip, [sp]
   17e48:	bl	114c8 <fprintf@plt>
   17e4c:	str	r0, [fp, #-60]	; 0xffffffc4
   17e50:	b	17e70 <__assert_fail@plt+0x6894>
   17e54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17e5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17e60:	movw	r1, #61104	; 0xeeb0
   17e64:	movt	r1, #1
   17e68:	bl	114c8 <fprintf@plt>
   17e6c:	str	r0, [fp, #-64]	; 0xffffffc0
   17e70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e74:	movw	r1, #61111	; 0xeeb7
   17e78:	movt	r1, #1
   17e7c:	str	r0, [fp, #-68]	; 0xffffffbc
   17e80:	mov	r0, r1
   17e84:	bl	114a4 <gettext@plt>
   17e88:	movw	r1, #61829	; 0xf185
   17e8c:	movt	r1, #1
   17e90:	movw	r3, #2022	; 0x7e6
   17e94:	ldr	lr, [fp, #-68]	; 0xffffffbc
   17e98:	str	r0, [fp, #-72]	; 0xffffffb8
   17e9c:	mov	r0, lr
   17ea0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17ea4:	bl	114c8 <fprintf@plt>
   17ea8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17eac:	movw	r2, #60464	; 0xec30
   17eb0:	movt	r2, #1
   17eb4:	str	r0, [fp, #-76]	; 0xffffffb4
   17eb8:	mov	r0, r2
   17ebc:	str	r2, [fp, #-80]	; 0xffffffb0
   17ec0:	bl	112c4 <fputs_unlocked@plt>
   17ec4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17ec8:	movw	r2, #61115	; 0xeebb
   17ecc:	movt	r2, #1
   17ed0:	str	r0, [fp, #-84]	; 0xffffffac
   17ed4:	mov	r0, r2
   17ed8:	str	r1, [fp, #-88]	; 0xffffffa8
   17edc:	bl	114a4 <gettext@plt>
   17ee0:	movw	r2, #61286	; 0xef66
   17ee4:	movt	r2, #1
   17ee8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   17eec:	str	r0, [fp, #-92]	; 0xffffffa4
   17ef0:	mov	r0, r1
   17ef4:	ldr	r1, [fp, #-92]	; 0xffffffa4
   17ef8:	bl	114c8 <fprintf@plt>
   17efc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17f00:	ldr	r2, [fp, #-80]	; 0xffffffb0
   17f04:	str	r0, [fp, #-96]	; 0xffffffa0
   17f08:	mov	r0, r2
   17f0c:	bl	112c4 <fputs_unlocked@plt>
   17f10:	ldr	r1, [fp, #12]
   17f14:	cmp	r1, #9
   17f18:	str	r0, [fp, #-100]	; 0xffffff9c
   17f1c:	str	r1, [fp, #-104]	; 0xffffff98
   17f20:	bhi	18360 <__assert_fail@plt+0x6d84>
   17f24:	add	r0, pc, #8
   17f28:	ldr	r1, [fp, #-104]	; 0xffffff98
   17f2c:	ldr	r0, [r0, r1, lsl #2]
   17f30:	mov	pc, r0
   17f34:	andeq	r7, r1, ip, asr pc
   17f38:	andeq	r7, r1, r0, ror #30
   17f3c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   17f40:	andeq	r7, r1, r0, ror #31
   17f44:	andeq	r8, r1, ip, lsr r0
   17f48:	andeq	r8, r1, r4, lsr #1
   17f4c:	andeq	r8, r1, r8, lsl r1
   17f50:	muleq	r1, r8, r1
   17f54:	andeq	r8, r1, r4, lsr #4
   17f58:			; <UNDEFINED> instruction: 0x000182bc
   17f5c:	b	18400 <__assert_fail@plt+0x6e24>
   17f60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17f64:	movw	r1, #61320	; 0xef88
   17f68:	movt	r1, #1
   17f6c:	str	r0, [fp, #-108]	; 0xffffff94
   17f70:	mov	r0, r1
   17f74:	bl	114a4 <gettext@plt>
   17f78:	ldr	r1, [fp, #8]
   17f7c:	ldr	r2, [r1]
   17f80:	ldr	r1, [fp, #-108]	; 0xffffff94
   17f84:	str	r0, [fp, #-112]	; 0xffffff90
   17f88:	mov	r0, r1
   17f8c:	ldr	r1, [fp, #-112]	; 0xffffff90
   17f90:	bl	114c8 <fprintf@plt>
   17f94:	str	r0, [fp, #-116]	; 0xffffff8c
   17f98:	b	18400 <__assert_fail@plt+0x6e24>
   17f9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17fa0:	movw	r1, #61336	; 0xef98
   17fa4:	movt	r1, #1
   17fa8:	str	r0, [fp, #-120]	; 0xffffff88
   17fac:	mov	r0, r1
   17fb0:	bl	114a4 <gettext@plt>
   17fb4:	ldr	r1, [fp, #8]
   17fb8:	ldr	r2, [r1]
   17fbc:	ldr	r1, [fp, #8]
   17fc0:	ldr	r3, [r1, #4]
   17fc4:	ldr	r1, [fp, #-120]	; 0xffffff88
   17fc8:	str	r0, [fp, #-124]	; 0xffffff84
   17fcc:	mov	r0, r1
   17fd0:	ldr	r1, [fp, #-124]	; 0xffffff84
   17fd4:	bl	114c8 <fprintf@plt>
   17fd8:	str	r0, [fp, #-128]	; 0xffffff80
   17fdc:	b	18400 <__assert_fail@plt+0x6e24>
   17fe0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17fe4:	movw	r1, #61359	; 0xefaf
   17fe8:	movt	r1, #1
   17fec:	str	r0, [fp, #-132]	; 0xffffff7c
   17ff0:	mov	r0, r1
   17ff4:	bl	114a4 <gettext@plt>
   17ff8:	ldr	r1, [fp, #8]
   17ffc:	ldr	r2, [r1]
   18000:	ldr	r1, [fp, #8]
   18004:	ldr	r3, [r1, #4]
   18008:	ldr	r1, [fp, #8]
   1800c:	ldr	r1, [r1, #8]
   18010:	ldr	lr, [fp, #-132]	; 0xffffff7c
   18014:	str	r0, [fp, #-136]	; 0xffffff78
   18018:	mov	r0, lr
   1801c:	ldr	ip, [fp, #-136]	; 0xffffff78
   18020:	str	r1, [fp, #-140]	; 0xffffff74
   18024:	mov	r1, ip
   18028:	ldr	r4, [fp, #-140]	; 0xffffff74
   1802c:	str	r4, [sp]
   18030:	bl	114c8 <fprintf@plt>
   18034:	str	r0, [sp, #144]	; 0x90
   18038:	b	18400 <__assert_fail@plt+0x6e24>
   1803c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18040:	movw	r1, #61387	; 0xefcb
   18044:	movt	r1, #1
   18048:	str	r0, [sp, #140]	; 0x8c
   1804c:	mov	r0, r1
   18050:	bl	114a4 <gettext@plt>
   18054:	ldr	r1, [fp, #8]
   18058:	ldr	r2, [r1]
   1805c:	ldr	r1, [fp, #8]
   18060:	ldr	r3, [r1, #4]
   18064:	ldr	r1, [fp, #8]
   18068:	ldr	r1, [r1, #8]
   1806c:	ldr	lr, [fp, #8]
   18070:	ldr	lr, [lr, #12]
   18074:	ldr	ip, [sp, #140]	; 0x8c
   18078:	str	r0, [sp, #136]	; 0x88
   1807c:	mov	r0, ip
   18080:	ldr	r4, [sp, #136]	; 0x88
   18084:	str	r1, [sp, #132]	; 0x84
   18088:	mov	r1, r4
   1808c:	ldr	r5, [sp, #132]	; 0x84
   18090:	str	r5, [sp]
   18094:	str	lr, [sp, #4]
   18098:	bl	114c8 <fprintf@plt>
   1809c:	str	r0, [sp, #128]	; 0x80
   180a0:	b	18400 <__assert_fail@plt+0x6e24>
   180a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   180a8:	movw	r1, #61419	; 0xefeb
   180ac:	movt	r1, #1
   180b0:	str	r0, [sp, #124]	; 0x7c
   180b4:	mov	r0, r1
   180b8:	bl	114a4 <gettext@plt>
   180bc:	ldr	r1, [fp, #8]
   180c0:	ldr	r2, [r1]
   180c4:	ldr	r1, [fp, #8]
   180c8:	ldr	r3, [r1, #4]
   180cc:	ldr	r1, [fp, #8]
   180d0:	ldr	r1, [r1, #8]
   180d4:	ldr	lr, [fp, #8]
   180d8:	ldr	lr, [lr, #12]
   180dc:	ldr	ip, [fp, #8]
   180e0:	ldr	ip, [ip, #16]
   180e4:	ldr	r4, [sp, #124]	; 0x7c
   180e8:	str	r0, [sp, #120]	; 0x78
   180ec:	mov	r0, r4
   180f0:	ldr	r5, [sp, #120]	; 0x78
   180f4:	str	r1, [sp, #116]	; 0x74
   180f8:	mov	r1, r5
   180fc:	ldr	r6, [sp, #116]	; 0x74
   18100:	str	r6, [sp]
   18104:	str	lr, [sp, #4]
   18108:	str	ip, [sp, #8]
   1810c:	bl	114c8 <fprintf@plt>
   18110:	str	r0, [sp, #112]	; 0x70
   18114:	b	18400 <__assert_fail@plt+0x6e24>
   18118:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1811c:	movw	r1, #61455	; 0xf00f
   18120:	movt	r1, #1
   18124:	str	r0, [sp, #108]	; 0x6c
   18128:	mov	r0, r1
   1812c:	bl	114a4 <gettext@plt>
   18130:	ldr	r1, [fp, #8]
   18134:	ldr	r2, [r1]
   18138:	ldr	r1, [fp, #8]
   1813c:	ldr	r3, [r1, #4]
   18140:	ldr	r1, [fp, #8]
   18144:	ldr	r1, [r1, #8]
   18148:	ldr	lr, [fp, #8]
   1814c:	ldr	lr, [lr, #12]
   18150:	ldr	ip, [fp, #8]
   18154:	ldr	ip, [ip, #16]
   18158:	ldr	r4, [fp, #8]
   1815c:	ldr	r4, [r4, #20]
   18160:	ldr	r5, [sp, #108]	; 0x6c
   18164:	str	r0, [sp, #104]	; 0x68
   18168:	mov	r0, r5
   1816c:	ldr	r6, [sp, #104]	; 0x68
   18170:	str	r1, [sp, #100]	; 0x64
   18174:	mov	r1, r6
   18178:	ldr	r7, [sp, #100]	; 0x64
   1817c:	str	r7, [sp]
   18180:	str	lr, [sp, #4]
   18184:	str	ip, [sp, #8]
   18188:	str	r4, [sp, #12]
   1818c:	bl	114c8 <fprintf@plt>
   18190:	str	r0, [sp, #96]	; 0x60
   18194:	b	18400 <__assert_fail@plt+0x6e24>
   18198:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1819c:	movw	r1, #61495	; 0xf037
   181a0:	movt	r1, #1
   181a4:	str	r0, [sp, #92]	; 0x5c
   181a8:	mov	r0, r1
   181ac:	bl	114a4 <gettext@plt>
   181b0:	ldr	r1, [fp, #8]
   181b4:	ldr	r2, [r1]
   181b8:	ldr	r1, [fp, #8]
   181bc:	ldr	r3, [r1, #4]
   181c0:	ldr	r1, [fp, #8]
   181c4:	ldr	r1, [r1, #8]
   181c8:	ldr	lr, [fp, #8]
   181cc:	ldr	lr, [lr, #12]
   181d0:	ldr	ip, [fp, #8]
   181d4:	ldr	ip, [ip, #16]
   181d8:	ldr	r4, [fp, #8]
   181dc:	ldr	r4, [r4, #20]
   181e0:	ldr	r5, [fp, #8]
   181e4:	ldr	r5, [r5, #24]
   181e8:	ldr	r6, [sp, #92]	; 0x5c
   181ec:	str	r0, [sp, #88]	; 0x58
   181f0:	mov	r0, r6
   181f4:	ldr	r7, [sp, #88]	; 0x58
   181f8:	str	r1, [sp, #84]	; 0x54
   181fc:	mov	r1, r7
   18200:	ldr	r8, [sp, #84]	; 0x54
   18204:	str	r8, [sp]
   18208:	str	lr, [sp, #4]
   1820c:	str	ip, [sp, #8]
   18210:	str	r4, [sp, #12]
   18214:	str	r5, [sp, #16]
   18218:	bl	114c8 <fprintf@plt>
   1821c:	str	r0, [sp, #80]	; 0x50
   18220:	b	18400 <__assert_fail@plt+0x6e24>
   18224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18228:	movw	r1, #61539	; 0xf063
   1822c:	movt	r1, #1
   18230:	str	r0, [sp, #76]	; 0x4c
   18234:	mov	r0, r1
   18238:	bl	114a4 <gettext@plt>
   1823c:	ldr	r1, [fp, #8]
   18240:	ldr	r2, [r1]
   18244:	ldr	r1, [fp, #8]
   18248:	ldr	r3, [r1, #4]
   1824c:	ldr	r1, [fp, #8]
   18250:	ldr	r1, [r1, #8]
   18254:	ldr	lr, [fp, #8]
   18258:	ldr	lr, [lr, #12]
   1825c:	ldr	ip, [fp, #8]
   18260:	ldr	ip, [ip, #16]
   18264:	ldr	r4, [fp, #8]
   18268:	ldr	r4, [r4, #20]
   1826c:	ldr	r5, [fp, #8]
   18270:	ldr	r5, [r5, #24]
   18274:	ldr	r6, [fp, #8]
   18278:	ldr	r6, [r6, #28]
   1827c:	ldr	r7, [sp, #76]	; 0x4c
   18280:	str	r0, [sp, #72]	; 0x48
   18284:	mov	r0, r7
   18288:	ldr	r8, [sp, #72]	; 0x48
   1828c:	str	r1, [sp, #68]	; 0x44
   18290:	mov	r1, r8
   18294:	ldr	r9, [sp, #68]	; 0x44
   18298:	str	r9, [sp]
   1829c:	str	lr, [sp, #4]
   182a0:	str	ip, [sp, #8]
   182a4:	str	r4, [sp, #12]
   182a8:	str	r5, [sp, #16]
   182ac:	str	r6, [sp, #20]
   182b0:	bl	114c8 <fprintf@plt>
   182b4:	str	r0, [sp, #64]	; 0x40
   182b8:	b	18400 <__assert_fail@plt+0x6e24>
   182bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   182c0:	movw	r1, #61587	; 0xf093
   182c4:	movt	r1, #1
   182c8:	str	r0, [sp, #60]	; 0x3c
   182cc:	mov	r0, r1
   182d0:	bl	114a4 <gettext@plt>
   182d4:	ldr	r1, [fp, #8]
   182d8:	ldr	r2, [r1]
   182dc:	ldr	r1, [fp, #8]
   182e0:	ldr	r3, [r1, #4]
   182e4:	ldr	r1, [fp, #8]
   182e8:	ldr	r1, [r1, #8]
   182ec:	ldr	lr, [fp, #8]
   182f0:	ldr	lr, [lr, #12]
   182f4:	ldr	ip, [fp, #8]
   182f8:	ldr	ip, [ip, #16]
   182fc:	ldr	r4, [fp, #8]
   18300:	ldr	r4, [r4, #20]
   18304:	ldr	r5, [fp, #8]
   18308:	ldr	r5, [r5, #24]
   1830c:	ldr	r6, [fp, #8]
   18310:	ldr	r6, [r6, #28]
   18314:	ldr	r7, [fp, #8]
   18318:	ldr	r7, [r7, #32]
   1831c:	ldr	r8, [sp, #60]	; 0x3c
   18320:	str	r0, [sp, #56]	; 0x38
   18324:	mov	r0, r8
   18328:	ldr	r9, [sp, #56]	; 0x38
   1832c:	str	r1, [sp, #52]	; 0x34
   18330:	mov	r1, r9
   18334:	ldr	sl, [sp, #52]	; 0x34
   18338:	str	sl, [sp]
   1833c:	str	lr, [sp, #4]
   18340:	str	ip, [sp, #8]
   18344:	str	r4, [sp, #12]
   18348:	str	r5, [sp, #16]
   1834c:	str	r6, [sp, #20]
   18350:	str	r7, [sp, #24]
   18354:	bl	114c8 <fprintf@plt>
   18358:	str	r0, [sp, #48]	; 0x30
   1835c:	b	18400 <__assert_fail@plt+0x6e24>
   18360:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18364:	movw	r1, #61639	; 0xf0c7
   18368:	movt	r1, #1
   1836c:	str	r0, [sp, #44]	; 0x2c
   18370:	mov	r0, r1
   18374:	bl	114a4 <gettext@plt>
   18378:	ldr	r1, [fp, #8]
   1837c:	ldr	r2, [r1]
   18380:	ldr	r1, [fp, #8]
   18384:	ldr	r3, [r1, #4]
   18388:	ldr	r1, [fp, #8]
   1838c:	ldr	r1, [r1, #8]
   18390:	ldr	lr, [fp, #8]
   18394:	ldr	lr, [lr, #12]
   18398:	ldr	ip, [fp, #8]
   1839c:	ldr	ip, [ip, #16]
   183a0:	ldr	r4, [fp, #8]
   183a4:	ldr	r4, [r4, #20]
   183a8:	ldr	r5, [fp, #8]
   183ac:	ldr	r5, [r5, #24]
   183b0:	ldr	r6, [fp, #8]
   183b4:	ldr	r6, [r6, #28]
   183b8:	ldr	r7, [fp, #8]
   183bc:	ldr	r7, [r7, #32]
   183c0:	ldr	r8, [sp, #44]	; 0x2c
   183c4:	str	r0, [sp, #40]	; 0x28
   183c8:	mov	r0, r8
   183cc:	ldr	r9, [sp, #40]	; 0x28
   183d0:	str	r1, [sp, #36]	; 0x24
   183d4:	mov	r1, r9
   183d8:	ldr	sl, [sp, #36]	; 0x24
   183dc:	str	sl, [sp]
   183e0:	str	lr, [sp, #4]
   183e4:	str	ip, [sp, #8]
   183e8:	str	r4, [sp, #12]
   183ec:	str	r5, [sp, #16]
   183f0:	str	r6, [sp, #20]
   183f4:	str	r7, [sp, #24]
   183f8:	bl	114c8 <fprintf@plt>
   183fc:	str	r0, [sp, #32]
   18400:	sub	sp, fp, #28
   18404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18408:	push	{fp, lr}
   1840c:	mov	fp, sp
   18410:	sub	sp, sp, #32
   18414:	ldr	ip, [fp, #8]
   18418:	str	r0, [fp, #-4]
   1841c:	str	r1, [fp, #-8]
   18420:	str	r2, [fp, #-12]
   18424:	str	r3, [sp, #16]
   18428:	movw	r0, #0
   1842c:	str	r0, [sp, #12]
   18430:	str	ip, [sp, #8]
   18434:	ldr	r0, [fp, #8]
   18438:	ldr	r1, [sp, #12]
   1843c:	add	r0, r0, r1, lsl #2
   18440:	ldr	r0, [r0]
   18444:	movw	r1, #0
   18448:	cmp	r0, r1
   1844c:	beq	18464 <__assert_fail@plt+0x6e88>
   18450:	b	18454 <__assert_fail@plt+0x6e78>
   18454:	ldr	r0, [sp, #12]
   18458:	add	r0, r0, #1
   1845c:	str	r0, [sp, #12]
   18460:	b	18434 <__assert_fail@plt+0x6e58>
   18464:	ldr	r0, [fp, #-4]
   18468:	ldr	r1, [fp, #-8]
   1846c:	ldr	r2, [fp, #-12]
   18470:	ldr	r3, [sp, #16]
   18474:	ldr	ip, [fp, #8]
   18478:	ldr	lr, [sp, #12]
   1847c:	str	ip, [sp]
   18480:	str	lr, [sp, #4]
   18484:	bl	17de4 <__assert_fail@plt+0x6808>
   18488:	mov	sp, fp
   1848c:	pop	{fp, pc}
   18490:	push	{fp, lr}
   18494:	mov	fp, sp
   18498:	sub	sp, sp, #80	; 0x50
   1849c:	ldr	ip, [fp, #8]
   184a0:	str	ip, [fp, #-4]
   184a4:	str	r0, [fp, #-8]
   184a8:	str	r1, [fp, #-12]
   184ac:	str	r2, [fp, #-16]
   184b0:	str	r3, [fp, #-20]	; 0xffffffec
   184b4:	movw	r0, #0
   184b8:	str	r0, [fp, #-24]	; 0xffffffe8
   184bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c0:	cmp	r0, #10
   184c4:	movw	r0, #0
   184c8:	str	r0, [sp, #12]
   184cc:	bcs	18504 <__assert_fail@plt+0x6f28>
   184d0:	ldr	r0, [fp, #-4]
   184d4:	add	r1, r0, #4
   184d8:	str	r1, [fp, #-4]
   184dc:	ldr	r0, [r0]
   184e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184e4:	add	r2, sp, #16
   184e8:	add	r1, r2, r1, lsl #2
   184ec:	str	r0, [r1]
   184f0:	movw	r1, #0
   184f4:	cmp	r0, r1
   184f8:	movw	r0, #0
   184fc:	movne	r0, #1
   18500:	str	r0, [sp, #12]
   18504:	ldr	r0, [sp, #12]
   18508:	tst	r0, #1
   1850c:	beq	18524 <__assert_fail@plt+0x6f48>
   18510:	b	18514 <__assert_fail@plt+0x6f38>
   18514:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18518:	add	r0, r0, #1
   1851c:	str	r0, [fp, #-24]	; 0xffffffe8
   18520:	b	184bc <__assert_fail@plt+0x6ee0>
   18524:	add	r0, sp, #16
   18528:	ldr	r1, [fp, #-8]
   1852c:	ldr	r2, [fp, #-12]
   18530:	ldr	r3, [fp, #-16]
   18534:	ldr	ip, [fp, #-20]	; 0xffffffec
   18538:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1853c:	str	r0, [sp, #8]
   18540:	mov	r0, r1
   18544:	mov	r1, r2
   18548:	mov	r2, r3
   1854c:	mov	r3, ip
   18550:	ldr	ip, [sp, #8]
   18554:	str	ip, [sp]
   18558:	str	lr, [sp, #4]
   1855c:	bl	17de4 <__assert_fail@plt+0x6808>
   18560:	mov	sp, fp
   18564:	pop	{fp, pc}
   18568:	push	{fp, lr}
   1856c:	mov	fp, sp
   18570:	sub	sp, sp, #32
   18574:	str	r0, [fp, #-4]
   18578:	str	r1, [fp, #-8]
   1857c:	str	r2, [fp, #-12]
   18580:	str	r3, [sp, #16]
   18584:	add	r0, fp, #8
   18588:	str	r0, [sp, #12]
   1858c:	ldr	r0, [fp, #-4]
   18590:	ldr	r1, [fp, #-8]
   18594:	ldr	r2, [fp, #-12]
   18598:	ldr	r3, [sp, #16]
   1859c:	ldr	ip, [sp, #12]
   185a0:	mov	lr, sp
   185a4:	str	ip, [lr]
   185a8:	bl	18490 <__assert_fail@plt+0x6eb4>
   185ac:	add	r0, sp, #12
   185b0:	str	r0, [sp, #8]
   185b4:	mov	sp, fp
   185b8:	pop	{fp, pc}
   185bc:	push	{fp, lr}
   185c0:	mov	fp, sp
   185c4:	sub	sp, sp, #16
   185c8:	movw	r0, #404	; 0x194
   185cc:	movt	r0, #3
   185d0:	ldr	r1, [r0]
   185d4:	movw	r0, #60464	; 0xec30
   185d8:	movt	r0, #1
   185dc:	bl	112c4 <fputs_unlocked@plt>
   185e0:	movw	r1, #61699	; 0xf103
   185e4:	movt	r1, #1
   185e8:	str	r0, [fp, #-4]
   185ec:	mov	r0, r1
   185f0:	bl	114a4 <gettext@plt>
   185f4:	movw	r1, #61719	; 0xf117
   185f8:	movt	r1, #1
   185fc:	bl	112f4 <printf@plt>
   18600:	movw	r1, #61741	; 0xf12d
   18604:	movt	r1, #1
   18608:	str	r0, [sp, #8]
   1860c:	mov	r0, r1
   18610:	bl	114a4 <gettext@plt>
   18614:	movw	r1, #59734	; 0xe956
   18618:	movt	r1, #1
   1861c:	movw	r2, #60273	; 0xeb71
   18620:	movt	r2, #1
   18624:	bl	112f4 <printf@plt>
   18628:	movw	r1, #61761	; 0xf141
   1862c:	movt	r1, #1
   18630:	str	r0, [sp, #4]
   18634:	mov	r0, r1
   18638:	bl	114a4 <gettext@plt>
   1863c:	movw	r1, #61800	; 0xf168
   18640:	movt	r1, #1
   18644:	bl	112f4 <printf@plt>
   18648:	str	r0, [sp]
   1864c:	mov	sp, fp
   18650:	pop	{fp, pc}
   18654:	push	{fp, lr}
   18658:	mov	fp, sp
   1865c:	sub	sp, sp, #16
   18660:	str	r0, [fp, #-4]
   18664:	str	r1, [sp, #8]
   18668:	str	r2, [sp, #4]
   1866c:	ldr	r0, [fp, #-4]
   18670:	ldr	r1, [sp, #8]
   18674:	ldr	r2, [sp, #4]
   18678:	bl	18684 <__assert_fail@plt+0x70a8>
   1867c:	mov	sp, fp
   18680:	pop	{fp, pc}
   18684:	push	{fp, lr}
   18688:	mov	fp, sp
   1868c:	sub	sp, sp, #16
   18690:	str	r0, [fp, #-4]
   18694:	str	r1, [sp, #8]
   18698:	str	r2, [sp, #4]
   1869c:	ldr	r0, [fp, #-4]
   186a0:	ldr	r1, [sp, #8]
   186a4:	ldr	r2, [sp, #4]
   186a8:	bl	1c35c <_obstack_memory_used@@Base+0xc4>
   186ac:	str	r0, [sp]
   186b0:	ldr	r0, [sp]
   186b4:	movw	r1, #0
   186b8:	cmp	r0, r1
   186bc:	bne	186ec <__assert_fail@plt+0x7110>
   186c0:	ldr	r0, [fp, #-4]
   186c4:	movw	r1, #0
   186c8:	cmp	r0, r1
   186cc:	beq	186e8 <__assert_fail@plt+0x710c>
   186d0:	ldr	r0, [sp, #8]
   186d4:	cmp	r0, #0
   186d8:	beq	186ec <__assert_fail@plt+0x7110>
   186dc:	ldr	r0, [sp, #4]
   186e0:	cmp	r0, #0
   186e4:	beq	186ec <__assert_fail@plt+0x7110>
   186e8:	bl	1b4d4 <__assert_fail@plt+0x9ef8>
   186ec:	ldr	r0, [sp]
   186f0:	mov	sp, fp
   186f4:	pop	{fp, pc}
   186f8:	push	{fp, lr}
   186fc:	mov	fp, sp
   18700:	sub	sp, sp, #8
   18704:	str	r0, [sp, #4]
   18708:	ldr	r0, [sp, #4]
   1870c:	bl	1b5f8 <__assert_fail@plt+0xa01c>
   18710:	bl	1871c <__assert_fail@plt+0x7140>
   18714:	mov	sp, fp
   18718:	pop	{fp, pc}
   1871c:	push	{fp, lr}
   18720:	mov	fp, sp
   18724:	sub	sp, sp, #8
   18728:	str	r0, [sp, #4]
   1872c:	ldr	r0, [sp, #4]
   18730:	movw	r1, #0
   18734:	cmp	r0, r1
   18738:	bne	18740 <__assert_fail@plt+0x7164>
   1873c:	bl	1b4d4 <__assert_fail@plt+0x9ef8>
   18740:	ldr	r0, [sp, #4]
   18744:	mov	sp, fp
   18748:	pop	{fp, pc}
   1874c:	push	{fp, lr}
   18750:	mov	fp, sp
   18754:	sub	sp, sp, #8
   18758:	str	r0, [sp, #4]
   1875c:	ldr	r0, [sp, #4]
   18760:	bl	1b98c <__assert_fail@plt+0xa3b0>
   18764:	bl	1871c <__assert_fail@plt+0x7140>
   18768:	mov	sp, fp
   1876c:	pop	{fp, pc}
   18770:	push	{fp, lr}
   18774:	mov	fp, sp
   18778:	sub	sp, sp, #8
   1877c:	str	r0, [sp, #4]
   18780:	ldr	r0, [sp, #4]
   18784:	bl	186f8 <__assert_fail@plt+0x711c>
   18788:	mov	sp, fp
   1878c:	pop	{fp, pc}
   18790:	push	{fp, lr}
   18794:	mov	fp, sp
   18798:	sub	sp, sp, #16
   1879c:	str	r0, [fp, #-4]
   187a0:	str	r1, [sp, #8]
   187a4:	ldr	r0, [fp, #-4]
   187a8:	ldr	r1, [sp, #8]
   187ac:	bl	1b668 <__assert_fail@plt+0xa08c>
   187b0:	str	r0, [sp, #4]
   187b4:	ldr	r0, [sp, #4]
   187b8:	movw	r1, #0
   187bc:	cmp	r0, r1
   187c0:	bne	187e4 <__assert_fail@plt+0x7208>
   187c4:	ldr	r0, [fp, #-4]
   187c8:	movw	r1, #0
   187cc:	cmp	r0, r1
   187d0:	beq	187e0 <__assert_fail@plt+0x7204>
   187d4:	ldr	r0, [sp, #8]
   187d8:	cmp	r0, #0
   187dc:	beq	187e4 <__assert_fail@plt+0x7208>
   187e0:	bl	1b4d4 <__assert_fail@plt+0x9ef8>
   187e4:	ldr	r0, [sp, #4]
   187e8:	mov	sp, fp
   187ec:	pop	{fp, pc}
   187f0:	push	{fp, lr}
   187f4:	mov	fp, sp
   187f8:	sub	sp, sp, #8
   187fc:	str	r0, [sp, #4]
   18800:	str	r1, [sp]
   18804:	ldr	r0, [sp, #4]
   18808:	ldr	r1, [sp]
   1880c:	bl	1b9cc <__assert_fail@plt+0xa3f0>
   18810:	bl	1871c <__assert_fail@plt+0x7140>
   18814:	mov	sp, fp
   18818:	pop	{fp, pc}
   1881c:	push	{fp, lr}
   18820:	mov	fp, sp
   18824:	sub	sp, sp, #16
   18828:	str	r0, [fp, #-4]
   1882c:	str	r1, [sp, #8]
   18830:	str	r2, [sp, #4]
   18834:	ldr	r0, [fp, #-4]
   18838:	ldr	r1, [sp, #8]
   1883c:	ldr	r2, [sp, #4]
   18840:	bl	1bac4 <__assert_fail@plt+0xa4e8>
   18844:	bl	1871c <__assert_fail@plt+0x7140>
   18848:	mov	sp, fp
   1884c:	pop	{fp, pc}
   18850:	push	{fp, lr}
   18854:	mov	fp, sp
   18858:	sub	sp, sp, #8
   1885c:	str	r0, [sp, #4]
   18860:	str	r1, [sp]
   18864:	ldr	r1, [sp, #4]
   18868:	ldr	r2, [sp]
   1886c:	movw	r0, #0
   18870:	bl	18684 <__assert_fail@plt+0x70a8>
   18874:	mov	sp, fp
   18878:	pop	{fp, pc}
   1887c:	push	{fp, lr}
   18880:	mov	fp, sp
   18884:	sub	sp, sp, #8
   18888:	str	r0, [sp, #4]
   1888c:	str	r1, [sp]
   18890:	ldr	r1, [sp, #4]
   18894:	ldr	r2, [sp]
   18898:	movw	r0, #0
   1889c:	bl	1881c <__assert_fail@plt+0x7240>
   188a0:	mov	sp, fp
   188a4:	pop	{fp, pc}
   188a8:	push	{fp, lr}
   188ac:	mov	fp, sp
   188b0:	sub	sp, sp, #8
   188b4:	str	r0, [sp, #4]
   188b8:	str	r1, [sp]
   188bc:	ldr	r0, [sp, #4]
   188c0:	ldr	r1, [sp]
   188c4:	movw	r2, #1
   188c8:	bl	188d4 <__assert_fail@plt+0x72f8>
   188cc:	mov	sp, fp
   188d0:	pop	{fp, pc}
   188d4:	push	{fp, lr}
   188d8:	mov	fp, sp
   188dc:	sub	sp, sp, #16
   188e0:	str	r0, [fp, #-4]
   188e4:	str	r1, [sp, #8]
   188e8:	str	r2, [sp, #4]
   188ec:	ldr	r0, [sp, #8]
   188f0:	ldr	r0, [r0]
   188f4:	str	r0, [sp]
   188f8:	ldr	r0, [fp, #-4]
   188fc:	movw	r1, #0
   18900:	cmp	r0, r1
   18904:	bne	18950 <__assert_fail@plt+0x7374>
   18908:	ldr	r0, [sp]
   1890c:	cmp	r0, #0
   18910:	bne	1894c <__assert_fail@plt+0x7370>
   18914:	ldr	r0, [sp, #4]
   18918:	movw	r1, #64	; 0x40
   1891c:	udiv	r0, r1, r0
   18920:	str	r0, [sp]
   18924:	ldr	r0, [sp]
   18928:	cmp	r0, #0
   1892c:	movw	r0, #0
   18930:	movne	r0, #1
   18934:	mvn	r1, #0
   18938:	eor	r0, r0, r1
   1893c:	and	r0, r0, #1
   18940:	ldr	r1, [sp]
   18944:	add	r0, r1, r0
   18948:	str	r0, [sp]
   1894c:	b	18980 <__assert_fail@plt+0x73a4>
   18950:	ldr	r0, [sp]
   18954:	ldr	r1, [sp]
   18958:	lsr	r1, r1, #1
   1895c:	add	r1, r1, #1
   18960:	adds	r0, r0, r1
   18964:	mov	r1, #0
   18968:	adc	r1, r1, #0
   1896c:	str	r0, [sp]
   18970:	tst	r1, #1
   18974:	beq	1897c <__assert_fail@plt+0x73a0>
   18978:	bl	1b4d4 <__assert_fail@plt+0x9ef8>
   1897c:	b	18980 <__assert_fail@plt+0x73a4>
   18980:	ldr	r0, [fp, #-4]
   18984:	ldr	r1, [sp]
   18988:	ldr	r2, [sp, #4]
   1898c:	bl	18684 <__assert_fail@plt+0x70a8>
   18990:	str	r0, [fp, #-4]
   18994:	ldr	r0, [sp]
   18998:	ldr	r1, [sp, #8]
   1899c:	str	r0, [r1]
   189a0:	ldr	r0, [fp, #-4]
   189a4:	mov	sp, fp
   189a8:	pop	{fp, pc}
   189ac:	push	{fp, lr}
   189b0:	mov	fp, sp
   189b4:	sub	sp, sp, #376	; 0x178
   189b8:	ldr	ip, [fp, #8]
   189bc:	str	r0, [fp, #-4]
   189c0:	str	r1, [fp, #-8]
   189c4:	str	r2, [fp, #-12]
   189c8:	str	r3, [fp, #-16]
   189cc:	ldr	r0, [fp, #-8]
   189d0:	ldr	r0, [r0]
   189d4:	str	r0, [fp, #-20]	; 0xffffffec
   189d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   189dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   189e0:	asr	r1, r1, #1
   189e4:	add	r1, r0, r1
   189e8:	mov	r2, #1
   189ec:	cmp	r1, r0
   189f0:	movwvc	r2, #0
   189f4:	str	r1, [fp, #-24]	; 0xffffffe8
   189f8:	tst	r2, #1
   189fc:	str	ip, [fp, #-36]	; 0xffffffdc
   18a00:	beq	18a0c <__assert_fail@plt+0x7430>
   18a04:	ldr	r0, [pc, #4044]	; 199d8 <__assert_fail@plt+0x83fc>
   18a08:	str	r0, [fp, #-24]	; 0xffffffe8
   18a0c:	ldr	r0, [fp, #-16]
   18a10:	movw	r1, #0
   18a14:	cmp	r1, r0
   18a18:	bgt	18a34 <__assert_fail@plt+0x7458>
   18a1c:	ldr	r0, [fp, #-16]
   18a20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a24:	cmp	r0, r1
   18a28:	bge	18a34 <__assert_fail@plt+0x7458>
   18a2c:	ldr	r0, [fp, #-16]
   18a30:	str	r0, [fp, #-24]	; 0xffffffe8
   18a34:	b	18e0c <__assert_fail@plt+0x7830>
   18a38:	b	18a3c <__assert_fail@plt+0x7460>
   18a3c:	ldr	r0, [fp, #8]
   18a40:	cmp	r0, #0
   18a44:	bge	18b58 <__assert_fail@plt+0x757c>
   18a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a4c:	cmp	r0, #0
   18a50:	bge	18adc <__assert_fail@plt+0x7500>
   18a54:	b	18a58 <__assert_fail@plt+0x747c>
   18a58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a5c:	ldr	r1, [fp, #8]
   18a60:	movw	r2, #127	; 0x7f
   18a64:	sdiv	r1, r2, r1
   18a68:	cmp	r0, r1
   18a6c:	blt	18bf8 <__assert_fail@plt+0x761c>
   18a70:	b	18c10 <__assert_fail@plt+0x7634>
   18a74:	b	18a78 <__assert_fail@plt+0x749c>
   18a78:	ldr	r0, [pc, #4076]	; 19a6c <__assert_fail@plt+0x8490>
   18a7c:	ldr	r1, [fp, #8]
   18a80:	cmp	r1, r0
   18a84:	blt	18a9c <__assert_fail@plt+0x74c0>
   18a88:	b	18aa8 <__assert_fail@plt+0x74cc>
   18a8c:	ldr	r0, [fp, #8]
   18a90:	movw	r1, #0
   18a94:	cmp	r1, r0
   18a98:	bge	18aa8 <__assert_fail@plt+0x74cc>
   18a9c:	movw	r0, #0
   18aa0:	str	r0, [fp, #-40]	; 0xffffffd8
   18aa4:	b	18ac0 <__assert_fail@plt+0x74e4>
   18aa8:	ldr	r0, [fp, #8]
   18aac:	movw	r1, #0
   18ab0:	sub	r0, r1, r0
   18ab4:	movw	r1, #127	; 0x7f
   18ab8:	sdiv	r0, r1, r0
   18abc:	str	r0, [fp, #-40]	; 0xffffffd8
   18ac0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18ac4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ac8:	mvn	r2, #0
   18acc:	sub	r1, r2, r1
   18ad0:	cmp	r0, r1
   18ad4:	ble	18bf8 <__assert_fail@plt+0x761c>
   18ad8:	b	18c10 <__assert_fail@plt+0x7634>
   18adc:	b	18ae0 <__assert_fail@plt+0x7504>
   18ae0:	b	18b3c <__assert_fail@plt+0x7560>
   18ae4:	b	18b3c <__assert_fail@plt+0x7560>
   18ae8:	ldr	r0, [fp, #8]
   18aec:	cmn	r0, #1
   18af0:	bne	18b3c <__assert_fail@plt+0x7560>
   18af4:	b	18af8 <__assert_fail@plt+0x751c>
   18af8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18afc:	mvn	r1, #127	; 0x7f
   18b00:	add	r0, r0, r1
   18b04:	movw	r1, #0
   18b08:	cmp	r1, r0
   18b0c:	blt	18bf8 <__assert_fail@plt+0x761c>
   18b10:	b	18c10 <__assert_fail@plt+0x7634>
   18b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b18:	movw	r1, #0
   18b1c:	cmp	r1, r0
   18b20:	bge	18c10 <__assert_fail@plt+0x7634>
   18b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b28:	sub	r0, r0, #1
   18b2c:	movw	r1, #127	; 0x7f
   18b30:	cmp	r1, r0
   18b34:	blt	18bf8 <__assert_fail@plt+0x761c>
   18b38:	b	18c10 <__assert_fail@plt+0x7634>
   18b3c:	ldr	r0, [fp, #8]
   18b40:	mvn	r1, #127	; 0x7f
   18b44:	sdiv	r0, r1, r0
   18b48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b4c:	cmp	r0, r1
   18b50:	blt	18bf8 <__assert_fail@plt+0x761c>
   18b54:	b	18c10 <__assert_fail@plt+0x7634>
   18b58:	ldr	r0, [fp, #8]
   18b5c:	cmp	r0, #0
   18b60:	bne	18b68 <__assert_fail@plt+0x758c>
   18b64:	b	18c10 <__assert_fail@plt+0x7634>
   18b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b6c:	cmp	r0, #0
   18b70:	bge	18be0 <__assert_fail@plt+0x7604>
   18b74:	b	18b78 <__assert_fail@plt+0x759c>
   18b78:	b	18bc4 <__assert_fail@plt+0x75e8>
   18b7c:	b	18bc4 <__assert_fail@plt+0x75e8>
   18b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b84:	cmn	r0, #1
   18b88:	bne	18bc4 <__assert_fail@plt+0x75e8>
   18b8c:	b	18b90 <__assert_fail@plt+0x75b4>
   18b90:	ldr	r0, [fp, #8]
   18b94:	mvn	r1, #127	; 0x7f
   18b98:	add	r0, r0, r1
   18b9c:	movw	r1, #0
   18ba0:	cmp	r1, r0
   18ba4:	blt	18bf8 <__assert_fail@plt+0x761c>
   18ba8:	b	18c10 <__assert_fail@plt+0x7634>
   18bac:	ldr	r0, [fp, #8]
   18bb0:	sub	r0, r0, #1
   18bb4:	movw	r1, #127	; 0x7f
   18bb8:	cmp	r1, r0
   18bbc:	blt	18bf8 <__assert_fail@plt+0x761c>
   18bc0:	b	18c10 <__assert_fail@plt+0x7634>
   18bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bc8:	mvn	r1, #127	; 0x7f
   18bcc:	sdiv	r0, r1, r0
   18bd0:	ldr	r1, [fp, #8]
   18bd4:	cmp	r0, r1
   18bd8:	blt	18bf8 <__assert_fail@plt+0x761c>
   18bdc:	b	18c10 <__assert_fail@plt+0x7634>
   18be0:	ldr	r0, [fp, #8]
   18be4:	movw	r1, #127	; 0x7f
   18be8:	sdiv	r0, r1, r0
   18bec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bf0:	cmp	r0, r1
   18bf4:	bge	18c10 <__assert_fail@plt+0x7634>
   18bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bfc:	ldr	r1, [fp, #8]
   18c00:	mul	r0, r0, r1
   18c04:	sxtb	r0, r0
   18c08:	str	r0, [fp, #-28]	; 0xffffffe4
   18c0c:	b	19e24 <__assert_fail@plt+0x8848>
   18c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c14:	ldr	r1, [fp, #8]
   18c18:	mul	r0, r0, r1
   18c1c:	sxtb	r0, r0
   18c20:	str	r0, [fp, #-28]	; 0xffffffe4
   18c24:	b	19e34 <__assert_fail@plt+0x8858>
   18c28:	ldr	r0, [fp, #8]
   18c2c:	cmp	r0, #0
   18c30:	bge	18d40 <__assert_fail@plt+0x7764>
   18c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c38:	cmp	r0, #0
   18c3c:	bge	18cc8 <__assert_fail@plt+0x76ec>
   18c40:	b	18c44 <__assert_fail@plt+0x7668>
   18c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c48:	ldr	r1, [fp, #8]
   18c4c:	movw	r2, #255	; 0xff
   18c50:	sdiv	r1, r2, r1
   18c54:	cmp	r0, r1
   18c58:	blt	18ddc <__assert_fail@plt+0x7800>
   18c5c:	b	18df4 <__assert_fail@plt+0x7818>
   18c60:	b	18c64 <__assert_fail@plt+0x7688>
   18c64:	ldr	r0, [pc, #3584]	; 19a6c <__assert_fail@plt+0x8490>
   18c68:	ldr	r1, [fp, #8]
   18c6c:	cmp	r1, r0
   18c70:	blt	18c88 <__assert_fail@plt+0x76ac>
   18c74:	b	18c94 <__assert_fail@plt+0x76b8>
   18c78:	ldr	r0, [fp, #8]
   18c7c:	movw	r1, #0
   18c80:	cmp	r1, r0
   18c84:	bge	18c94 <__assert_fail@plt+0x76b8>
   18c88:	movw	r0, #0
   18c8c:	str	r0, [fp, #-44]	; 0xffffffd4
   18c90:	b	18cac <__assert_fail@plt+0x76d0>
   18c94:	ldr	r0, [fp, #8]
   18c98:	movw	r1, #0
   18c9c:	sub	r0, r1, r0
   18ca0:	movw	r1, #255	; 0xff
   18ca4:	sdiv	r0, r1, r0
   18ca8:	str	r0, [fp, #-44]	; 0xffffffd4
   18cac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18cb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cb4:	mvn	r2, #0
   18cb8:	sub	r1, r2, r1
   18cbc:	cmp	r0, r1
   18cc0:	ble	18ddc <__assert_fail@plt+0x7800>
   18cc4:	b	18df4 <__assert_fail@plt+0x7818>
   18cc8:	b	18ccc <__assert_fail@plt+0x76f0>
   18ccc:	b	18d24 <__assert_fail@plt+0x7748>
   18cd0:	b	18d24 <__assert_fail@plt+0x7748>
   18cd4:	ldr	r0, [fp, #8]
   18cd8:	cmn	r0, #1
   18cdc:	bne	18d24 <__assert_fail@plt+0x7748>
   18ce0:	b	18ce4 <__assert_fail@plt+0x7708>
   18ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ce8:	add	r0, r0, #0
   18cec:	movw	r1, #0
   18cf0:	cmp	r1, r0
   18cf4:	blt	18ddc <__assert_fail@plt+0x7800>
   18cf8:	b	18df4 <__assert_fail@plt+0x7818>
   18cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d00:	movw	r1, #0
   18d04:	cmp	r1, r0
   18d08:	bge	18df4 <__assert_fail@plt+0x7818>
   18d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d10:	sub	r0, r0, #1
   18d14:	mvn	r1, #0
   18d18:	cmp	r1, r0
   18d1c:	blt	18ddc <__assert_fail@plt+0x7800>
   18d20:	b	18df4 <__assert_fail@plt+0x7818>
   18d24:	ldr	r0, [fp, #8]
   18d28:	movw	r1, #0
   18d2c:	sdiv	r0, r1, r0
   18d30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d34:	cmp	r0, r1
   18d38:	blt	18ddc <__assert_fail@plt+0x7800>
   18d3c:	b	18df4 <__assert_fail@plt+0x7818>
   18d40:	ldr	r0, [fp, #8]
   18d44:	cmp	r0, #0
   18d48:	bne	18d50 <__assert_fail@plt+0x7774>
   18d4c:	b	18df4 <__assert_fail@plt+0x7818>
   18d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d54:	cmp	r0, #0
   18d58:	bge	18dc4 <__assert_fail@plt+0x77e8>
   18d5c:	b	18d60 <__assert_fail@plt+0x7784>
   18d60:	b	18da8 <__assert_fail@plt+0x77cc>
   18d64:	b	18da8 <__assert_fail@plt+0x77cc>
   18d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d6c:	cmn	r0, #1
   18d70:	bne	18da8 <__assert_fail@plt+0x77cc>
   18d74:	b	18d78 <__assert_fail@plt+0x779c>
   18d78:	ldr	r0, [fp, #8]
   18d7c:	add	r0, r0, #0
   18d80:	movw	r1, #0
   18d84:	cmp	r1, r0
   18d88:	blt	18ddc <__assert_fail@plt+0x7800>
   18d8c:	b	18df4 <__assert_fail@plt+0x7818>
   18d90:	ldr	r0, [fp, #8]
   18d94:	sub	r0, r0, #1
   18d98:	mvn	r1, #0
   18d9c:	cmp	r1, r0
   18da0:	blt	18ddc <__assert_fail@plt+0x7800>
   18da4:	b	18df4 <__assert_fail@plt+0x7818>
   18da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18dac:	movw	r1, #0
   18db0:	sdiv	r0, r1, r0
   18db4:	ldr	r1, [fp, #8]
   18db8:	cmp	r0, r1
   18dbc:	blt	18ddc <__assert_fail@plt+0x7800>
   18dc0:	b	18df4 <__assert_fail@plt+0x7818>
   18dc4:	ldr	r0, [fp, #8]
   18dc8:	movw	r1, #255	; 0xff
   18dcc:	sdiv	r0, r1, r0
   18dd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18dd4:	cmp	r0, r1
   18dd8:	bge	18df4 <__assert_fail@plt+0x7818>
   18ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18de0:	ldr	r1, [fp, #8]
   18de4:	mul	r0, r0, r1
   18de8:	and	r0, r0, #255	; 0xff
   18dec:	str	r0, [fp, #-28]	; 0xffffffe4
   18df0:	b	19e24 <__assert_fail@plt+0x8848>
   18df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df8:	ldr	r1, [fp, #8]
   18dfc:	mul	r0, r0, r1
   18e00:	and	r0, r0, #255	; 0xff
   18e04:	str	r0, [fp, #-28]	; 0xffffffe4
   18e08:	b	19e34 <__assert_fail@plt+0x8858>
   18e0c:	b	191e4 <__assert_fail@plt+0x7c08>
   18e10:	b	18e14 <__assert_fail@plt+0x7838>
   18e14:	ldr	r0, [fp, #8]
   18e18:	cmp	r0, #0
   18e1c:	bge	18f30 <__assert_fail@plt+0x7954>
   18e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e24:	cmp	r0, #0
   18e28:	bge	18eb4 <__assert_fail@plt+0x78d8>
   18e2c:	b	18e30 <__assert_fail@plt+0x7854>
   18e30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e34:	ldr	r1, [fp, #8]
   18e38:	movw	r2, #32767	; 0x7fff
   18e3c:	sdiv	r1, r2, r1
   18e40:	cmp	r0, r1
   18e44:	blt	18fd0 <__assert_fail@plt+0x79f4>
   18e48:	b	18fe8 <__assert_fail@plt+0x7a0c>
   18e4c:	b	18e50 <__assert_fail@plt+0x7874>
   18e50:	ldr	r0, [pc, #3092]	; 19a6c <__assert_fail@plt+0x8490>
   18e54:	ldr	r1, [fp, #8]
   18e58:	cmp	r1, r0
   18e5c:	blt	18e74 <__assert_fail@plt+0x7898>
   18e60:	b	18e80 <__assert_fail@plt+0x78a4>
   18e64:	ldr	r0, [fp, #8]
   18e68:	movw	r1, #0
   18e6c:	cmp	r1, r0
   18e70:	bge	18e80 <__assert_fail@plt+0x78a4>
   18e74:	movw	r0, #0
   18e78:	str	r0, [fp, #-48]	; 0xffffffd0
   18e7c:	b	18e98 <__assert_fail@plt+0x78bc>
   18e80:	ldr	r0, [fp, #8]
   18e84:	movw	r1, #0
   18e88:	sub	r0, r1, r0
   18e8c:	movw	r1, #32767	; 0x7fff
   18e90:	sdiv	r0, r1, r0
   18e94:	str	r0, [fp, #-48]	; 0xffffffd0
   18e98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   18e9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ea0:	mvn	r2, #0
   18ea4:	sub	r1, r2, r1
   18ea8:	cmp	r0, r1
   18eac:	ble	18fd0 <__assert_fail@plt+0x79f4>
   18eb0:	b	18fe8 <__assert_fail@plt+0x7a0c>
   18eb4:	b	18eb8 <__assert_fail@plt+0x78dc>
   18eb8:	b	18f14 <__assert_fail@plt+0x7938>
   18ebc:	b	18f14 <__assert_fail@plt+0x7938>
   18ec0:	ldr	r0, [fp, #8]
   18ec4:	cmn	r0, #1
   18ec8:	bne	18f14 <__assert_fail@plt+0x7938>
   18ecc:	b	18ed0 <__assert_fail@plt+0x78f4>
   18ed0:	ldr	r0, [pc, #3928]	; 19e30 <__assert_fail@plt+0x8854>
   18ed4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ed8:	add	r0, r1, r0
   18edc:	movw	r1, #0
   18ee0:	cmp	r1, r0
   18ee4:	blt	18fd0 <__assert_fail@plt+0x79f4>
   18ee8:	b	18fe8 <__assert_fail@plt+0x7a0c>
   18eec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ef0:	movw	r1, #0
   18ef4:	cmp	r1, r0
   18ef8:	bge	18fe8 <__assert_fail@plt+0x7a0c>
   18efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f00:	sub	r0, r0, #1
   18f04:	movw	r1, #32767	; 0x7fff
   18f08:	cmp	r1, r0
   18f0c:	blt	18fd0 <__assert_fail@plt+0x79f4>
   18f10:	b	18fe8 <__assert_fail@plt+0x7a0c>
   18f14:	ldr	r0, [pc, #3860]	; 19e30 <__assert_fail@plt+0x8854>
   18f18:	ldr	r1, [fp, #8]
   18f1c:	sdiv	r0, r0, r1
   18f20:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f24:	cmp	r0, r1
   18f28:	blt	18fd0 <__assert_fail@plt+0x79f4>
   18f2c:	b	18fe8 <__assert_fail@plt+0x7a0c>
   18f30:	ldr	r0, [fp, #8]
   18f34:	cmp	r0, #0
   18f38:	bne	18f40 <__assert_fail@plt+0x7964>
   18f3c:	b	18fe8 <__assert_fail@plt+0x7a0c>
   18f40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f44:	cmp	r0, #0
   18f48:	bge	18fb8 <__assert_fail@plt+0x79dc>
   18f4c:	b	18f50 <__assert_fail@plt+0x7974>
   18f50:	b	18f9c <__assert_fail@plt+0x79c0>
   18f54:	b	18f9c <__assert_fail@plt+0x79c0>
   18f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f5c:	cmn	r0, #1
   18f60:	bne	18f9c <__assert_fail@plt+0x79c0>
   18f64:	b	18f68 <__assert_fail@plt+0x798c>
   18f68:	ldr	r0, [pc, #3776]	; 19e30 <__assert_fail@plt+0x8854>
   18f6c:	ldr	r1, [fp, #8]
   18f70:	add	r0, r1, r0
   18f74:	movw	r1, #0
   18f78:	cmp	r1, r0
   18f7c:	blt	18fd0 <__assert_fail@plt+0x79f4>
   18f80:	b	18fe8 <__assert_fail@plt+0x7a0c>
   18f84:	ldr	r0, [fp, #8]
   18f88:	sub	r0, r0, #1
   18f8c:	movw	r1, #32767	; 0x7fff
   18f90:	cmp	r1, r0
   18f94:	blt	18fd0 <__assert_fail@plt+0x79f4>
   18f98:	b	18fe8 <__assert_fail@plt+0x7a0c>
   18f9c:	ldr	r0, [pc, #3724]	; 19e30 <__assert_fail@plt+0x8854>
   18fa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fa4:	sdiv	r0, r0, r1
   18fa8:	ldr	r1, [fp, #8]
   18fac:	cmp	r0, r1
   18fb0:	blt	18fd0 <__assert_fail@plt+0x79f4>
   18fb4:	b	18fe8 <__assert_fail@plt+0x7a0c>
   18fb8:	ldr	r0, [fp, #8]
   18fbc:	movw	r1, #32767	; 0x7fff
   18fc0:	sdiv	r0, r1, r0
   18fc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fc8:	cmp	r0, r1
   18fcc:	bge	18fe8 <__assert_fail@plt+0x7a0c>
   18fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fd4:	ldr	r1, [fp, #8]
   18fd8:	mul	r0, r0, r1
   18fdc:	sxth	r0, r0
   18fe0:	str	r0, [fp, #-28]	; 0xffffffe4
   18fe4:	b	19e24 <__assert_fail@plt+0x8848>
   18fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fec:	ldr	r1, [fp, #8]
   18ff0:	mul	r0, r0, r1
   18ff4:	sxth	r0, r0
   18ff8:	str	r0, [fp, #-28]	; 0xffffffe4
   18ffc:	b	19e34 <__assert_fail@plt+0x8858>
   19000:	ldr	r0, [fp, #8]
   19004:	cmp	r0, #0
   19008:	bge	19118 <__assert_fail@plt+0x7b3c>
   1900c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19010:	cmp	r0, #0
   19014:	bge	190a0 <__assert_fail@plt+0x7ac4>
   19018:	b	1901c <__assert_fail@plt+0x7a40>
   1901c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19020:	ldr	r1, [fp, #8]
   19024:	movw	r2, #65535	; 0xffff
   19028:	sdiv	r1, r2, r1
   1902c:	cmp	r0, r1
   19030:	blt	191b4 <__assert_fail@plt+0x7bd8>
   19034:	b	191cc <__assert_fail@plt+0x7bf0>
   19038:	b	1903c <__assert_fail@plt+0x7a60>
   1903c:	ldr	r0, [pc, #2600]	; 19a6c <__assert_fail@plt+0x8490>
   19040:	ldr	r1, [fp, #8]
   19044:	cmp	r1, r0
   19048:	blt	19060 <__assert_fail@plt+0x7a84>
   1904c:	b	1906c <__assert_fail@plt+0x7a90>
   19050:	ldr	r0, [fp, #8]
   19054:	movw	r1, #0
   19058:	cmp	r1, r0
   1905c:	bge	1906c <__assert_fail@plt+0x7a90>
   19060:	movw	r0, #0
   19064:	str	r0, [fp, #-52]	; 0xffffffcc
   19068:	b	19084 <__assert_fail@plt+0x7aa8>
   1906c:	ldr	r0, [fp, #8]
   19070:	movw	r1, #0
   19074:	sub	r0, r1, r0
   19078:	movw	r1, #65535	; 0xffff
   1907c:	sdiv	r0, r1, r0
   19080:	str	r0, [fp, #-52]	; 0xffffffcc
   19084:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19088:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1908c:	mvn	r2, #0
   19090:	sub	r1, r2, r1
   19094:	cmp	r0, r1
   19098:	ble	191b4 <__assert_fail@plt+0x7bd8>
   1909c:	b	191cc <__assert_fail@plt+0x7bf0>
   190a0:	b	190a4 <__assert_fail@plt+0x7ac8>
   190a4:	b	190fc <__assert_fail@plt+0x7b20>
   190a8:	b	190fc <__assert_fail@plt+0x7b20>
   190ac:	ldr	r0, [fp, #8]
   190b0:	cmn	r0, #1
   190b4:	bne	190fc <__assert_fail@plt+0x7b20>
   190b8:	b	190bc <__assert_fail@plt+0x7ae0>
   190bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190c0:	add	r0, r0, #0
   190c4:	movw	r1, #0
   190c8:	cmp	r1, r0
   190cc:	blt	191b4 <__assert_fail@plt+0x7bd8>
   190d0:	b	191cc <__assert_fail@plt+0x7bf0>
   190d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190d8:	movw	r1, #0
   190dc:	cmp	r1, r0
   190e0:	bge	191cc <__assert_fail@plt+0x7bf0>
   190e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190e8:	sub	r0, r0, #1
   190ec:	mvn	r1, #0
   190f0:	cmp	r1, r0
   190f4:	blt	191b4 <__assert_fail@plt+0x7bd8>
   190f8:	b	191cc <__assert_fail@plt+0x7bf0>
   190fc:	ldr	r0, [fp, #8]
   19100:	movw	r1, #0
   19104:	sdiv	r0, r1, r0
   19108:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1910c:	cmp	r0, r1
   19110:	blt	191b4 <__assert_fail@plt+0x7bd8>
   19114:	b	191cc <__assert_fail@plt+0x7bf0>
   19118:	ldr	r0, [fp, #8]
   1911c:	cmp	r0, #0
   19120:	bne	19128 <__assert_fail@plt+0x7b4c>
   19124:	b	191cc <__assert_fail@plt+0x7bf0>
   19128:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1912c:	cmp	r0, #0
   19130:	bge	1919c <__assert_fail@plt+0x7bc0>
   19134:	b	19138 <__assert_fail@plt+0x7b5c>
   19138:	b	19180 <__assert_fail@plt+0x7ba4>
   1913c:	b	19180 <__assert_fail@plt+0x7ba4>
   19140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19144:	cmn	r0, #1
   19148:	bne	19180 <__assert_fail@plt+0x7ba4>
   1914c:	b	19150 <__assert_fail@plt+0x7b74>
   19150:	ldr	r0, [fp, #8]
   19154:	add	r0, r0, #0
   19158:	movw	r1, #0
   1915c:	cmp	r1, r0
   19160:	blt	191b4 <__assert_fail@plt+0x7bd8>
   19164:	b	191cc <__assert_fail@plt+0x7bf0>
   19168:	ldr	r0, [fp, #8]
   1916c:	sub	r0, r0, #1
   19170:	mvn	r1, #0
   19174:	cmp	r1, r0
   19178:	blt	191b4 <__assert_fail@plt+0x7bd8>
   1917c:	b	191cc <__assert_fail@plt+0x7bf0>
   19180:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19184:	movw	r1, #0
   19188:	sdiv	r0, r1, r0
   1918c:	ldr	r1, [fp, #8]
   19190:	cmp	r0, r1
   19194:	blt	191b4 <__assert_fail@plt+0x7bd8>
   19198:	b	191cc <__assert_fail@plt+0x7bf0>
   1919c:	ldr	r0, [fp, #8]
   191a0:	movw	r1, #65535	; 0xffff
   191a4:	sdiv	r0, r1, r0
   191a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191ac:	cmp	r0, r1
   191b0:	bge	191cc <__assert_fail@plt+0x7bf0>
   191b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191b8:	ldr	r1, [fp, #8]
   191bc:	mul	r0, r0, r1
   191c0:	uxth	r0, r0
   191c4:	str	r0, [fp, #-28]	; 0xffffffe4
   191c8:	b	19e24 <__assert_fail@plt+0x8848>
   191cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d0:	ldr	r1, [fp, #8]
   191d4:	mul	r0, r0, r1
   191d8:	uxth	r0, r0
   191dc:	str	r0, [fp, #-28]	; 0xffffffe4
   191e0:	b	19e34 <__assert_fail@plt+0x8858>
   191e4:	b	191e8 <__assert_fail@plt+0x7c0c>
   191e8:	b	191ec <__assert_fail@plt+0x7c10>
   191ec:	ldr	r0, [fp, #8]
   191f0:	cmp	r0, #0
   191f4:	bge	192f8 <__assert_fail@plt+0x7d1c>
   191f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191fc:	cmp	r0, #0
   19200:	bge	1928c <__assert_fail@plt+0x7cb0>
   19204:	b	19208 <__assert_fail@plt+0x7c2c>
   19208:	ldr	r0, [pc, #1992]	; 199d8 <__assert_fail@plt+0x83fc>
   1920c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19210:	ldr	r2, [fp, #8]
   19214:	sdiv	r0, r0, r2
   19218:	cmp	r1, r0
   1921c:	blt	19388 <__assert_fail@plt+0x7dac>
   19220:	b	1939c <__assert_fail@plt+0x7dc0>
   19224:	b	19228 <__assert_fail@plt+0x7c4c>
   19228:	ldr	r0, [pc, #2108]	; 19a6c <__assert_fail@plt+0x8490>
   1922c:	ldr	r1, [fp, #8]
   19230:	cmp	r1, r0
   19234:	blt	1924c <__assert_fail@plt+0x7c70>
   19238:	b	19258 <__assert_fail@plt+0x7c7c>
   1923c:	ldr	r0, [fp, #8]
   19240:	movw	r1, #0
   19244:	cmp	r1, r0
   19248:	bge	19258 <__assert_fail@plt+0x7c7c>
   1924c:	movw	r0, #0
   19250:	str	r0, [fp, #-56]	; 0xffffffc8
   19254:	b	19270 <__assert_fail@plt+0x7c94>
   19258:	ldr	r0, [pc, #1912]	; 199d8 <__assert_fail@plt+0x83fc>
   1925c:	ldr	r1, [fp, #8]
   19260:	movw	r2, #0
   19264:	sub	r1, r2, r1
   19268:	sdiv	r0, r0, r1
   1926c:	str	r0, [fp, #-56]	; 0xffffffc8
   19270:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19274:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19278:	mvn	r2, #0
   1927c:	sub	r1, r2, r1
   19280:	cmp	r0, r1
   19284:	ble	19388 <__assert_fail@plt+0x7dac>
   19288:	b	1939c <__assert_fail@plt+0x7dc0>
   1928c:	ldr	r0, [fp, #8]
   19290:	cmn	r0, #1
   19294:	bne	192dc <__assert_fail@plt+0x7d00>
   19298:	b	1929c <__assert_fail@plt+0x7cc0>
   1929c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192a0:	add	r0, r0, #-2147483648	; 0x80000000
   192a4:	movw	r1, #0
   192a8:	cmp	r1, r0
   192ac:	blt	19388 <__assert_fail@plt+0x7dac>
   192b0:	b	1939c <__assert_fail@plt+0x7dc0>
   192b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192b8:	movw	r1, #0
   192bc:	cmp	r1, r0
   192c0:	bge	1939c <__assert_fail@plt+0x7dc0>
   192c4:	ldr	r0, [pc, #1804]	; 199d8 <__assert_fail@plt+0x83fc>
   192c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192cc:	sub	r1, r1, #1
   192d0:	cmp	r0, r1
   192d4:	blt	19388 <__assert_fail@plt+0x7dac>
   192d8:	b	1939c <__assert_fail@plt+0x7dc0>
   192dc:	ldr	r0, [pc, #4072]	; 1a2cc <__assert_fail@plt+0x8cf0>
   192e0:	ldr	r1, [fp, #8]
   192e4:	sdiv	r0, r0, r1
   192e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192ec:	cmp	r0, r1
   192f0:	blt	19388 <__assert_fail@plt+0x7dac>
   192f4:	b	1939c <__assert_fail@plt+0x7dc0>
   192f8:	ldr	r0, [fp, #8]
   192fc:	cmp	r0, #0
   19300:	bne	19308 <__assert_fail@plt+0x7d2c>
   19304:	b	1939c <__assert_fail@plt+0x7dc0>
   19308:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1930c:	cmp	r0, #0
   19310:	bge	19370 <__assert_fail@plt+0x7d94>
   19314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19318:	cmn	r0, #1
   1931c:	bne	19354 <__assert_fail@plt+0x7d78>
   19320:	b	19324 <__assert_fail@plt+0x7d48>
   19324:	ldr	r0, [fp, #8]
   19328:	add	r0, r0, #-2147483648	; 0x80000000
   1932c:	movw	r1, #0
   19330:	cmp	r1, r0
   19334:	blt	19388 <__assert_fail@plt+0x7dac>
   19338:	b	1939c <__assert_fail@plt+0x7dc0>
   1933c:	ldr	r0, [pc, #1684]	; 199d8 <__assert_fail@plt+0x83fc>
   19340:	ldr	r1, [fp, #8]
   19344:	sub	r1, r1, #1
   19348:	cmp	r0, r1
   1934c:	blt	19388 <__assert_fail@plt+0x7dac>
   19350:	b	1939c <__assert_fail@plt+0x7dc0>
   19354:	ldr	r0, [pc, #3952]	; 1a2cc <__assert_fail@plt+0x8cf0>
   19358:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1935c:	sdiv	r0, r0, r1
   19360:	ldr	r1, [fp, #8]
   19364:	cmp	r0, r1
   19368:	blt	19388 <__assert_fail@plt+0x7dac>
   1936c:	b	1939c <__assert_fail@plt+0x7dc0>
   19370:	ldr	r0, [pc, #1632]	; 199d8 <__assert_fail@plt+0x83fc>
   19374:	ldr	r1, [fp, #8]
   19378:	sdiv	r0, r0, r1
   1937c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19380:	cmp	r0, r1
   19384:	bge	1939c <__assert_fail@plt+0x7dc0>
   19388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1938c:	ldr	r1, [fp, #8]
   19390:	mul	r0, r0, r1
   19394:	str	r0, [fp, #-28]	; 0xffffffe4
   19398:	b	19e24 <__assert_fail@plt+0x8848>
   1939c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193a0:	ldr	r1, [fp, #8]
   193a4:	mul	r0, r0, r1
   193a8:	str	r0, [fp, #-28]	; 0xffffffe4
   193ac:	b	19e34 <__assert_fail@plt+0x8858>
   193b0:	ldr	r0, [fp, #8]
   193b4:	cmp	r0, #0
   193b8:	bge	194c8 <__assert_fail@plt+0x7eec>
   193bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193c0:	cmp	r0, #0
   193c4:	bge	19450 <__assert_fail@plt+0x7e74>
   193c8:	b	193e8 <__assert_fail@plt+0x7e0c>
   193cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193d0:	ldr	r1, [fp, #8]
   193d4:	mvn	r2, #0
   193d8:	udiv	r1, r2, r1
   193dc:	cmp	r0, r1
   193e0:	bcc	19564 <__assert_fail@plt+0x7f88>
   193e4:	b	19578 <__assert_fail@plt+0x7f9c>
   193e8:	b	193ec <__assert_fail@plt+0x7e10>
   193ec:	ldr	r0, [pc, #1656]	; 19a6c <__assert_fail@plt+0x8490>
   193f0:	ldr	r1, [fp, #8]
   193f4:	cmp	r1, r0
   193f8:	blt	19410 <__assert_fail@plt+0x7e34>
   193fc:	b	1941c <__assert_fail@plt+0x7e40>
   19400:	ldr	r0, [fp, #8]
   19404:	movw	r1, #0
   19408:	cmp	r1, r0
   1940c:	bge	1941c <__assert_fail@plt+0x7e40>
   19410:	movw	r0, #1
   19414:	str	r0, [fp, #-60]	; 0xffffffc4
   19418:	b	19434 <__assert_fail@plt+0x7e58>
   1941c:	ldr	r0, [fp, #8]
   19420:	movw	r1, #0
   19424:	sub	r0, r1, r0
   19428:	mvn	r1, #0
   1942c:	udiv	r0, r1, r0
   19430:	str	r0, [fp, #-60]	; 0xffffffc4
   19434:	ldr	r0, [fp, #-60]	; 0xffffffc4
   19438:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1943c:	mvn	r2, #0
   19440:	sub	r1, r2, r1
   19444:	cmp	r0, r1
   19448:	bls	19564 <__assert_fail@plt+0x7f88>
   1944c:	b	19578 <__assert_fail@plt+0x7f9c>
   19450:	b	19454 <__assert_fail@plt+0x7e78>
   19454:	b	194ac <__assert_fail@plt+0x7ed0>
   19458:	b	194ac <__assert_fail@plt+0x7ed0>
   1945c:	ldr	r0, [fp, #8]
   19460:	cmn	r0, #1
   19464:	bne	194ac <__assert_fail@plt+0x7ed0>
   19468:	b	1946c <__assert_fail@plt+0x7e90>
   1946c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19470:	add	r0, r0, #0
   19474:	movw	r1, #0
   19478:	cmp	r1, r0
   1947c:	blt	19564 <__assert_fail@plt+0x7f88>
   19480:	b	19578 <__assert_fail@plt+0x7f9c>
   19484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19488:	movw	r1, #0
   1948c:	cmp	r1, r0
   19490:	bge	19578 <__assert_fail@plt+0x7f9c>
   19494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19498:	sub	r0, r0, #1
   1949c:	mvn	r1, #0
   194a0:	cmp	r1, r0
   194a4:	blt	19564 <__assert_fail@plt+0x7f88>
   194a8:	b	19578 <__assert_fail@plt+0x7f9c>
   194ac:	ldr	r0, [fp, #8]
   194b0:	movw	r1, #0
   194b4:	sdiv	r0, r1, r0
   194b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194bc:	cmp	r0, r1
   194c0:	blt	19564 <__assert_fail@plt+0x7f88>
   194c4:	b	19578 <__assert_fail@plt+0x7f9c>
   194c8:	ldr	r0, [fp, #8]
   194cc:	cmp	r0, #0
   194d0:	bne	194d8 <__assert_fail@plt+0x7efc>
   194d4:	b	19578 <__assert_fail@plt+0x7f9c>
   194d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194dc:	cmp	r0, #0
   194e0:	bge	1954c <__assert_fail@plt+0x7f70>
   194e4:	b	194e8 <__assert_fail@plt+0x7f0c>
   194e8:	b	19530 <__assert_fail@plt+0x7f54>
   194ec:	b	19530 <__assert_fail@plt+0x7f54>
   194f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194f4:	cmn	r0, #1
   194f8:	bne	19530 <__assert_fail@plt+0x7f54>
   194fc:	b	19500 <__assert_fail@plt+0x7f24>
   19500:	ldr	r0, [fp, #8]
   19504:	add	r0, r0, #0
   19508:	movw	r1, #0
   1950c:	cmp	r1, r0
   19510:	blt	19564 <__assert_fail@plt+0x7f88>
   19514:	b	19578 <__assert_fail@plt+0x7f9c>
   19518:	ldr	r0, [fp, #8]
   1951c:	sub	r0, r0, #1
   19520:	mvn	r1, #0
   19524:	cmp	r1, r0
   19528:	blt	19564 <__assert_fail@plt+0x7f88>
   1952c:	b	19578 <__assert_fail@plt+0x7f9c>
   19530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19534:	movw	r1, #0
   19538:	sdiv	r0, r1, r0
   1953c:	ldr	r1, [fp, #8]
   19540:	cmp	r0, r1
   19544:	blt	19564 <__assert_fail@plt+0x7f88>
   19548:	b	19578 <__assert_fail@plt+0x7f9c>
   1954c:	ldr	r0, [fp, #8]
   19550:	mvn	r1, #0
   19554:	udiv	r0, r1, r0
   19558:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1955c:	cmp	r0, r1
   19560:	bcs	19578 <__assert_fail@plt+0x7f9c>
   19564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19568:	ldr	r1, [fp, #8]
   1956c:	mul	r0, r0, r1
   19570:	str	r0, [fp, #-28]	; 0xffffffe4
   19574:	b	19e24 <__assert_fail@plt+0x8848>
   19578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1957c:	ldr	r1, [fp, #8]
   19580:	mul	r0, r0, r1
   19584:	str	r0, [fp, #-28]	; 0xffffffe4
   19588:	b	19e34 <__assert_fail@plt+0x8858>
   1958c:	b	19590 <__assert_fail@plt+0x7fb4>
   19590:	b	19594 <__assert_fail@plt+0x7fb8>
   19594:	ldr	r0, [fp, #8]
   19598:	cmp	r0, #0
   1959c:	bge	196a0 <__assert_fail@plt+0x80c4>
   195a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195a4:	cmp	r0, #0
   195a8:	bge	19634 <__assert_fail@plt+0x8058>
   195ac:	b	195b0 <__assert_fail@plt+0x7fd4>
   195b0:	ldr	r0, [pc, #1056]	; 199d8 <__assert_fail@plt+0x83fc>
   195b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195b8:	ldr	r2, [fp, #8]
   195bc:	sdiv	r0, r0, r2
   195c0:	cmp	r1, r0
   195c4:	blt	19730 <__assert_fail@plt+0x8154>
   195c8:	b	19744 <__assert_fail@plt+0x8168>
   195cc:	b	195d0 <__assert_fail@plt+0x7ff4>
   195d0:	ldr	r0, [pc, #1172]	; 19a6c <__assert_fail@plt+0x8490>
   195d4:	ldr	r1, [fp, #8]
   195d8:	cmp	r1, r0
   195dc:	blt	195f4 <__assert_fail@plt+0x8018>
   195e0:	b	19600 <__assert_fail@plt+0x8024>
   195e4:	ldr	r0, [fp, #8]
   195e8:	movw	r1, #0
   195ec:	cmp	r1, r0
   195f0:	bge	19600 <__assert_fail@plt+0x8024>
   195f4:	movw	r0, #0
   195f8:	str	r0, [fp, #-64]	; 0xffffffc0
   195fc:	b	19618 <__assert_fail@plt+0x803c>
   19600:	ldr	r0, [pc, #976]	; 199d8 <__assert_fail@plt+0x83fc>
   19604:	ldr	r1, [fp, #8]
   19608:	movw	r2, #0
   1960c:	sub	r1, r2, r1
   19610:	sdiv	r0, r0, r1
   19614:	str	r0, [fp, #-64]	; 0xffffffc0
   19618:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1961c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19620:	mvn	r2, #0
   19624:	sub	r1, r2, r1
   19628:	cmp	r0, r1
   1962c:	ble	19730 <__assert_fail@plt+0x8154>
   19630:	b	19744 <__assert_fail@plt+0x8168>
   19634:	ldr	r0, [fp, #8]
   19638:	cmn	r0, #1
   1963c:	bne	19684 <__assert_fail@plt+0x80a8>
   19640:	b	19644 <__assert_fail@plt+0x8068>
   19644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19648:	add	r0, r0, #-2147483648	; 0x80000000
   1964c:	movw	r1, #0
   19650:	cmp	r1, r0
   19654:	blt	19730 <__assert_fail@plt+0x8154>
   19658:	b	19744 <__assert_fail@plt+0x8168>
   1965c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19660:	movw	r1, #0
   19664:	cmp	r1, r0
   19668:	bge	19744 <__assert_fail@plt+0x8168>
   1966c:	ldr	r0, [pc, #868]	; 199d8 <__assert_fail@plt+0x83fc>
   19670:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19674:	sub	r1, r1, #1
   19678:	cmp	r0, r1
   1967c:	blt	19730 <__assert_fail@plt+0x8154>
   19680:	b	19744 <__assert_fail@plt+0x8168>
   19684:	ldr	r0, [pc, #3136]	; 1a2cc <__assert_fail@plt+0x8cf0>
   19688:	ldr	r1, [fp, #8]
   1968c:	sdiv	r0, r0, r1
   19690:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19694:	cmp	r0, r1
   19698:	blt	19730 <__assert_fail@plt+0x8154>
   1969c:	b	19744 <__assert_fail@plt+0x8168>
   196a0:	ldr	r0, [fp, #8]
   196a4:	cmp	r0, #0
   196a8:	bne	196b0 <__assert_fail@plt+0x80d4>
   196ac:	b	19744 <__assert_fail@plt+0x8168>
   196b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196b4:	cmp	r0, #0
   196b8:	bge	19718 <__assert_fail@plt+0x813c>
   196bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196c0:	cmn	r0, #1
   196c4:	bne	196fc <__assert_fail@plt+0x8120>
   196c8:	b	196cc <__assert_fail@plt+0x80f0>
   196cc:	ldr	r0, [fp, #8]
   196d0:	add	r0, r0, #-2147483648	; 0x80000000
   196d4:	movw	r1, #0
   196d8:	cmp	r1, r0
   196dc:	blt	19730 <__assert_fail@plt+0x8154>
   196e0:	b	19744 <__assert_fail@plt+0x8168>
   196e4:	ldr	r0, [pc, #748]	; 199d8 <__assert_fail@plt+0x83fc>
   196e8:	ldr	r1, [fp, #8]
   196ec:	sub	r1, r1, #1
   196f0:	cmp	r0, r1
   196f4:	blt	19730 <__assert_fail@plt+0x8154>
   196f8:	b	19744 <__assert_fail@plt+0x8168>
   196fc:	ldr	r0, [pc, #3016]	; 1a2cc <__assert_fail@plt+0x8cf0>
   19700:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19704:	sdiv	r0, r0, r1
   19708:	ldr	r1, [fp, #8]
   1970c:	cmp	r0, r1
   19710:	blt	19730 <__assert_fail@plt+0x8154>
   19714:	b	19744 <__assert_fail@plt+0x8168>
   19718:	ldr	r0, [pc, #696]	; 199d8 <__assert_fail@plt+0x83fc>
   1971c:	ldr	r1, [fp, #8]
   19720:	sdiv	r0, r0, r1
   19724:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19728:	cmp	r0, r1
   1972c:	bge	19744 <__assert_fail@plt+0x8168>
   19730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19734:	ldr	r1, [fp, #8]
   19738:	mul	r0, r0, r1
   1973c:	str	r0, [fp, #-28]	; 0xffffffe4
   19740:	b	19e24 <__assert_fail@plt+0x8848>
   19744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19748:	ldr	r1, [fp, #8]
   1974c:	mul	r0, r0, r1
   19750:	str	r0, [fp, #-28]	; 0xffffffe4
   19754:	b	19e34 <__assert_fail@plt+0x8858>
   19758:	ldr	r0, [fp, #8]
   1975c:	cmp	r0, #0
   19760:	bge	19870 <__assert_fail@plt+0x8294>
   19764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19768:	cmp	r0, #0
   1976c:	bge	197f8 <__assert_fail@plt+0x821c>
   19770:	b	19790 <__assert_fail@plt+0x81b4>
   19774:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19778:	ldr	r1, [fp, #8]
   1977c:	mvn	r2, #0
   19780:	udiv	r1, r2, r1
   19784:	cmp	r0, r1
   19788:	bcc	1990c <__assert_fail@plt+0x8330>
   1978c:	b	19920 <__assert_fail@plt+0x8344>
   19790:	b	19794 <__assert_fail@plt+0x81b8>
   19794:	ldr	r0, [pc, #720]	; 19a6c <__assert_fail@plt+0x8490>
   19798:	ldr	r1, [fp, #8]
   1979c:	cmp	r1, r0
   197a0:	blt	197b8 <__assert_fail@plt+0x81dc>
   197a4:	b	197c4 <__assert_fail@plt+0x81e8>
   197a8:	ldr	r0, [fp, #8]
   197ac:	movw	r1, #0
   197b0:	cmp	r1, r0
   197b4:	bge	197c4 <__assert_fail@plt+0x81e8>
   197b8:	movw	r0, #1
   197bc:	str	r0, [fp, #-68]	; 0xffffffbc
   197c0:	b	197dc <__assert_fail@plt+0x8200>
   197c4:	ldr	r0, [fp, #8]
   197c8:	movw	r1, #0
   197cc:	sub	r0, r1, r0
   197d0:	mvn	r1, #0
   197d4:	udiv	r0, r1, r0
   197d8:	str	r0, [fp, #-68]	; 0xffffffbc
   197dc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   197e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197e4:	mvn	r2, #0
   197e8:	sub	r1, r2, r1
   197ec:	cmp	r0, r1
   197f0:	bls	1990c <__assert_fail@plt+0x8330>
   197f4:	b	19920 <__assert_fail@plt+0x8344>
   197f8:	b	197fc <__assert_fail@plt+0x8220>
   197fc:	b	19854 <__assert_fail@plt+0x8278>
   19800:	b	19854 <__assert_fail@plt+0x8278>
   19804:	ldr	r0, [fp, #8]
   19808:	cmn	r0, #1
   1980c:	bne	19854 <__assert_fail@plt+0x8278>
   19810:	b	19814 <__assert_fail@plt+0x8238>
   19814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19818:	add	r0, r0, #0
   1981c:	movw	r1, #0
   19820:	cmp	r1, r0
   19824:	blt	1990c <__assert_fail@plt+0x8330>
   19828:	b	19920 <__assert_fail@plt+0x8344>
   1982c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19830:	movw	r1, #0
   19834:	cmp	r1, r0
   19838:	bge	19920 <__assert_fail@plt+0x8344>
   1983c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19840:	sub	r0, r0, #1
   19844:	mvn	r1, #0
   19848:	cmp	r1, r0
   1984c:	blt	1990c <__assert_fail@plt+0x8330>
   19850:	b	19920 <__assert_fail@plt+0x8344>
   19854:	ldr	r0, [fp, #8]
   19858:	movw	r1, #0
   1985c:	sdiv	r0, r1, r0
   19860:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19864:	cmp	r0, r1
   19868:	blt	1990c <__assert_fail@plt+0x8330>
   1986c:	b	19920 <__assert_fail@plt+0x8344>
   19870:	ldr	r0, [fp, #8]
   19874:	cmp	r0, #0
   19878:	bne	19880 <__assert_fail@plt+0x82a4>
   1987c:	b	19920 <__assert_fail@plt+0x8344>
   19880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19884:	cmp	r0, #0
   19888:	bge	198f4 <__assert_fail@plt+0x8318>
   1988c:	b	19890 <__assert_fail@plt+0x82b4>
   19890:	b	198d8 <__assert_fail@plt+0x82fc>
   19894:	b	198d8 <__assert_fail@plt+0x82fc>
   19898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1989c:	cmn	r0, #1
   198a0:	bne	198d8 <__assert_fail@plt+0x82fc>
   198a4:	b	198a8 <__assert_fail@plt+0x82cc>
   198a8:	ldr	r0, [fp, #8]
   198ac:	add	r0, r0, #0
   198b0:	movw	r1, #0
   198b4:	cmp	r1, r0
   198b8:	blt	1990c <__assert_fail@plt+0x8330>
   198bc:	b	19920 <__assert_fail@plt+0x8344>
   198c0:	ldr	r0, [fp, #8]
   198c4:	sub	r0, r0, #1
   198c8:	mvn	r1, #0
   198cc:	cmp	r1, r0
   198d0:	blt	1990c <__assert_fail@plt+0x8330>
   198d4:	b	19920 <__assert_fail@plt+0x8344>
   198d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198dc:	movw	r1, #0
   198e0:	sdiv	r0, r1, r0
   198e4:	ldr	r1, [fp, #8]
   198e8:	cmp	r0, r1
   198ec:	blt	1990c <__assert_fail@plt+0x8330>
   198f0:	b	19920 <__assert_fail@plt+0x8344>
   198f4:	ldr	r0, [fp, #8]
   198f8:	mvn	r1, #0
   198fc:	udiv	r0, r1, r0
   19900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19904:	cmp	r0, r1
   19908:	bcs	19920 <__assert_fail@plt+0x8344>
   1990c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19910:	ldr	r1, [fp, #8]
   19914:	mul	r0, r0, r1
   19918:	str	r0, [fp, #-28]	; 0xffffffe4
   1991c:	b	19e24 <__assert_fail@plt+0x8848>
   19920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19924:	ldr	r1, [fp, #8]
   19928:	mul	r0, r0, r1
   1992c:	str	r0, [fp, #-28]	; 0xffffffe4
   19930:	b	19e34 <__assert_fail@plt+0x8858>
   19934:	b	19938 <__assert_fail@plt+0x835c>
   19938:	ldr	r0, [fp, #8]
   1993c:	cmp	r0, #0
   19940:	bge	19ad0 <__assert_fail@plt+0x84f4>
   19944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19948:	cmp	r0, #0
   1994c:	bge	19a38 <__assert_fail@plt+0x845c>
   19950:	b	19954 <__assert_fail@plt+0x8378>
   19954:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19958:	ldr	r1, [fp, #8]
   1995c:	asr	r3, r1, #31
   19960:	mvn	r2, #0
   19964:	mvn	ip, #-2147483648	; 0x80000000
   19968:	str	r0, [fp, #-72]	; 0xffffffb8
   1996c:	mov	r0, r2
   19970:	str	r1, [fp, #-76]	; 0xffffffb4
   19974:	mov	r1, ip
   19978:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1997c:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   19980:	ldr	r2, [fp, #-72]	; 0xffffffb8
   19984:	subs	r0, r2, r0
   19988:	rscs	r1, r1, r2, asr #31
   1998c:	str	r0, [fp, #-80]	; 0xffffffb0
   19990:	str	r1, [fp, #-84]	; 0xffffffac
   19994:	blt	19bb0 <__assert_fail@plt+0x85d4>
   19998:	b	19bc4 <__assert_fail@plt+0x85e8>
   1999c:	b	199a0 <__assert_fail@plt+0x83c4>
   199a0:	ldr	r0, [pc, #196]	; 19a6c <__assert_fail@plt+0x8490>
   199a4:	ldr	r1, [fp, #8]
   199a8:	cmp	r1, r0
   199ac:	blt	199c4 <__assert_fail@plt+0x83e8>
   199b0:	b	199dc <__assert_fail@plt+0x8400>
   199b4:	ldr	r0, [fp, #8]
   199b8:	movw	r1, #0
   199bc:	cmp	r1, r0
   199c0:	bge	199dc <__assert_fail@plt+0x8400>
   199c4:	mov	r0, #0
   199c8:	mvn	r1, #0
   199cc:	str	r1, [fp, #-88]	; 0xffffffa8
   199d0:	str	r0, [fp, #-92]	; 0xffffffa4
   199d4:	b	19a10 <__assert_fail@plt+0x8434>
   199d8:	svcvc	0x00ffffff
   199dc:	ldr	r0, [fp, #8]
   199e0:	rsb	r0, r0, #0
   199e4:	asr	r3, r0, #31
   199e8:	mvn	r1, #0
   199ec:	mvn	r2, #-2147483648	; 0x80000000
   199f0:	str	r0, [fp, #-96]	; 0xffffffa0
   199f4:	mov	r0, r1
   199f8:	mov	r1, r2
   199fc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19a00:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   19a04:	str	r0, [fp, #-88]	; 0xffffffa8
   19a08:	str	r1, [fp, #-92]	; 0xffffffa4
   19a0c:	b	19a10 <__assert_fail@plt+0x8434>
   19a10:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19a14:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19a18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19a1c:	mvn	r2, r2
   19a20:	subs	r1, r2, r1
   19a24:	rscs	r0, r0, r2, asr #31
   19a28:	str	r1, [fp, #-100]	; 0xffffff9c
   19a2c:	str	r0, [fp, #-104]	; 0xffffff98
   19a30:	bge	19bb0 <__assert_fail@plt+0x85d4>
   19a34:	b	19bc4 <__assert_fail@plt+0x85e8>
   19a38:	ldr	r0, [fp, #8]
   19a3c:	cmn	r0, #1
   19a40:	bne	19a90 <__assert_fail@plt+0x84b4>
   19a44:	b	19a48 <__assert_fail@plt+0x846c>
   19a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a4c:	mov	r1, #-2147483648	; 0x80000000
   19a50:	add	r1, r1, r0, asr #31
   19a54:	rsbs	r0, r0, #0
   19a58:	rscs	r1, r1, #0
   19a5c:	str	r0, [fp, #-108]	; 0xffffff94
   19a60:	str	r1, [fp, #-112]	; 0xffffff90
   19a64:	blt	19bb0 <__assert_fail@plt+0x85d4>
   19a68:	b	19bc4 <__assert_fail@plt+0x85e8>
   19a6c:	andhi	r0, r0, r1
   19a70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a74:	movw	r1, #0
   19a78:	cmp	r1, r0
   19a7c:	bge	19bc4 <__assert_fail@plt+0x85e8>
   19a80:	mov	r0, #0
   19a84:	cmp	r0, #0
   19a88:	bne	19bb0 <__assert_fail@plt+0x85d4>
   19a8c:	b	19bc4 <__assert_fail@plt+0x85e8>
   19a90:	ldr	r0, [fp, #8]
   19a94:	asr	r3, r0, #31
   19a98:	mov	r1, #0
   19a9c:	mov	r2, #-2147483648	; 0x80000000
   19aa0:	str	r0, [fp, #-116]	; 0xffffff8c
   19aa4:	mov	r0, r1
   19aa8:	mov	r1, r2
   19aac:	ldr	r2, [fp, #-116]	; 0xffffff8c
   19ab0:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   19ab4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ab8:	subs	r0, r0, r2
   19abc:	sbcs	r1, r1, r2, asr #31
   19ac0:	str	r0, [fp, #-120]	; 0xffffff88
   19ac4:	str	r1, [fp, #-124]	; 0xffffff84
   19ac8:	blt	19bb0 <__assert_fail@plt+0x85d4>
   19acc:	b	19bc4 <__assert_fail@plt+0x85e8>
   19ad0:	ldr	r0, [fp, #8]
   19ad4:	cmp	r0, #0
   19ad8:	bne	19ae0 <__assert_fail@plt+0x8504>
   19adc:	b	19bc4 <__assert_fail@plt+0x85e8>
   19ae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ae4:	cmp	r0, #0
   19ae8:	bge	19b70 <__assert_fail@plt+0x8594>
   19aec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19af0:	cmn	r0, #1
   19af4:	bne	19b30 <__assert_fail@plt+0x8554>
   19af8:	b	19afc <__assert_fail@plt+0x8520>
   19afc:	ldr	r0, [fp, #8]
   19b00:	mov	r1, #-2147483648	; 0x80000000
   19b04:	add	r1, r1, r0, asr #31
   19b08:	rsbs	r0, r0, #0
   19b0c:	rscs	r1, r1, #0
   19b10:	str	r0, [fp, #-128]	; 0xffffff80
   19b14:	str	r1, [fp, #-132]	; 0xffffff7c
   19b18:	blt	19bb0 <__assert_fail@plt+0x85d4>
   19b1c:	b	19bc4 <__assert_fail@plt+0x85e8>
   19b20:	mov	r0, #0
   19b24:	cmp	r0, #0
   19b28:	bne	19bb0 <__assert_fail@plt+0x85d4>
   19b2c:	b	19bc4 <__assert_fail@plt+0x85e8>
   19b30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b34:	asr	r3, r0, #31
   19b38:	mov	r1, #0
   19b3c:	mov	r2, #-2147483648	; 0x80000000
   19b40:	str	r0, [fp, #-136]	; 0xffffff78
   19b44:	mov	r0, r1
   19b48:	mov	r1, r2
   19b4c:	ldr	r2, [fp, #-136]	; 0xffffff78
   19b50:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   19b54:	ldr	r2, [fp, #8]
   19b58:	subs	r0, r0, r2
   19b5c:	sbcs	r1, r1, r2, asr #31
   19b60:	str	r0, [fp, #-140]	; 0xffffff74
   19b64:	str	r1, [fp, #-144]	; 0xffffff70
   19b68:	blt	19bb0 <__assert_fail@plt+0x85d4>
   19b6c:	b	19bc4 <__assert_fail@plt+0x85e8>
   19b70:	ldr	r0, [fp, #8]
   19b74:	asr	r3, r0, #31
   19b78:	mvn	r1, #0
   19b7c:	mvn	r2, #-2147483648	; 0x80000000
   19b80:	str	r0, [fp, #-148]	; 0xffffff6c
   19b84:	mov	r0, r1
   19b88:	mov	r1, r2
   19b8c:	ldr	r2, [fp, #-148]	; 0xffffff6c
   19b90:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   19b94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b98:	subs	r0, r0, r2
   19b9c:	sbcs	r1, r1, r2, asr #31
   19ba0:	str	r0, [fp, #-152]	; 0xffffff68
   19ba4:	str	r1, [fp, #-156]	; 0xffffff64
   19ba8:	bge	19bc4 <__assert_fail@plt+0x85e8>
   19bac:	b	19bb0 <__assert_fail@plt+0x85d4>
   19bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bb4:	ldr	r1, [fp, #8]
   19bb8:	mul	r0, r0, r1
   19bbc:	str	r0, [fp, #-28]	; 0xffffffe4
   19bc0:	b	19e24 <__assert_fail@plt+0x8848>
   19bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bc8:	ldr	r1, [fp, #8]
   19bcc:	mul	r0, r0, r1
   19bd0:	str	r0, [fp, #-28]	; 0xffffffe4
   19bd4:	b	19e34 <__assert_fail@plt+0x8858>
   19bd8:	ldr	r0, [fp, #8]
   19bdc:	cmp	r0, #0
   19be0:	bge	19d40 <__assert_fail@plt+0x8764>
   19be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19be8:	cmp	r0, #0
   19bec:	bge	19cc8 <__assert_fail@plt+0x86ec>
   19bf0:	b	19c38 <__assert_fail@plt+0x865c>
   19bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bf8:	ldr	r1, [fp, #8]
   19bfc:	asr	r3, r1, #31
   19c00:	mvn	r2, #0
   19c04:	str	r0, [fp, #-160]	; 0xffffff60
   19c08:	mov	r0, r2
   19c0c:	str	r1, [fp, #-164]	; 0xffffff5c
   19c10:	mov	r1, r2
   19c14:	ldr	r2, [fp, #-164]	; 0xffffff5c
   19c18:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   19c1c:	ldr	r2, [fp, #-160]	; 0xffffff60
   19c20:	subs	r0, r2, r0
   19c24:	rscs	r1, r1, r2, asr #31
   19c28:	str	r0, [fp, #-168]	; 0xffffff58
   19c2c:	str	r1, [fp, #-172]	; 0xffffff54
   19c30:	bcc	19dfc <__assert_fail@plt+0x8820>
   19c34:	b	19e10 <__assert_fail@plt+0x8834>
   19c38:	b	19c3c <__assert_fail@plt+0x8660>
   19c3c:	ldr	r0, [pc, #-472]	; 19a6c <__assert_fail@plt+0x8490>
   19c40:	ldr	r1, [fp, #8]
   19c44:	cmp	r1, r0
   19c48:	blt	19c60 <__assert_fail@plt+0x8684>
   19c4c:	b	19c74 <__assert_fail@plt+0x8698>
   19c50:	ldr	r0, [fp, #8]
   19c54:	movw	r1, #0
   19c58:	cmp	r1, r0
   19c5c:	bge	19c74 <__assert_fail@plt+0x8698>
   19c60:	mov	r0, #1
   19c64:	mvn	r1, #0
   19c68:	str	r1, [fp, #-176]	; 0xffffff50
   19c6c:	str	r0, [fp, #-180]	; 0xffffff4c
   19c70:	b	19ca0 <__assert_fail@plt+0x86c4>
   19c74:	ldr	r0, [fp, #8]
   19c78:	rsb	r0, r0, #0
   19c7c:	asr	r3, r0, #31
   19c80:	mvn	r1, #0
   19c84:	str	r0, [fp, #-184]	; 0xffffff48
   19c88:	mov	r0, r1
   19c8c:	ldr	r2, [fp, #-184]	; 0xffffff48
   19c90:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   19c94:	str	r0, [fp, #-176]	; 0xffffff50
   19c98:	str	r1, [fp, #-180]	; 0xffffff4c
   19c9c:	b	19ca0 <__assert_fail@plt+0x86c4>
   19ca0:	ldr	r0, [fp, #-180]	; 0xffffff4c
   19ca4:	ldr	r1, [fp, #-176]	; 0xffffff50
   19ca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19cac:	mvn	r2, r2
   19cb0:	subs	r1, r2, r1
   19cb4:	rscs	r0, r0, r2, asr #31
   19cb8:	str	r1, [sp, #188]	; 0xbc
   19cbc:	str	r0, [sp, #184]	; 0xb8
   19cc0:	bcs	19dfc <__assert_fail@plt+0x8820>
   19cc4:	b	19e10 <__assert_fail@plt+0x8834>
   19cc8:	b	19ccc <__assert_fail@plt+0x86f0>
   19ccc:	b	19d24 <__assert_fail@plt+0x8748>
   19cd0:	b	19d24 <__assert_fail@plt+0x8748>
   19cd4:	ldr	r0, [fp, #8]
   19cd8:	cmn	r0, #1
   19cdc:	bne	19d24 <__assert_fail@plt+0x8748>
   19ce0:	b	19ce4 <__assert_fail@plt+0x8708>
   19ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ce8:	add	r0, r0, #0
   19cec:	movw	r1, #0
   19cf0:	cmp	r1, r0
   19cf4:	blt	19dfc <__assert_fail@plt+0x8820>
   19cf8:	b	19e10 <__assert_fail@plt+0x8834>
   19cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d00:	movw	r1, #0
   19d04:	cmp	r1, r0
   19d08:	bge	19e10 <__assert_fail@plt+0x8834>
   19d0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d10:	sub	r0, r0, #1
   19d14:	mvn	r1, #0
   19d18:	cmp	r1, r0
   19d1c:	blt	19dfc <__assert_fail@plt+0x8820>
   19d20:	b	19e10 <__assert_fail@plt+0x8834>
   19d24:	ldr	r0, [fp, #8]
   19d28:	movw	r1, #0
   19d2c:	sdiv	r0, r1, r0
   19d30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19d34:	cmp	r0, r1
   19d38:	blt	19dfc <__assert_fail@plt+0x8820>
   19d3c:	b	19e10 <__assert_fail@plt+0x8834>
   19d40:	ldr	r0, [fp, #8]
   19d44:	cmp	r0, #0
   19d48:	bne	19d50 <__assert_fail@plt+0x8774>
   19d4c:	b	19e10 <__assert_fail@plt+0x8834>
   19d50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d54:	cmp	r0, #0
   19d58:	bge	19dc4 <__assert_fail@plt+0x87e8>
   19d5c:	b	19d60 <__assert_fail@plt+0x8784>
   19d60:	b	19da8 <__assert_fail@plt+0x87cc>
   19d64:	b	19da8 <__assert_fail@plt+0x87cc>
   19d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d6c:	cmn	r0, #1
   19d70:	bne	19da8 <__assert_fail@plt+0x87cc>
   19d74:	b	19d78 <__assert_fail@plt+0x879c>
   19d78:	ldr	r0, [fp, #8]
   19d7c:	add	r0, r0, #0
   19d80:	movw	r1, #0
   19d84:	cmp	r1, r0
   19d88:	blt	19dfc <__assert_fail@plt+0x8820>
   19d8c:	b	19e10 <__assert_fail@plt+0x8834>
   19d90:	ldr	r0, [fp, #8]
   19d94:	sub	r0, r0, #1
   19d98:	mvn	r1, #0
   19d9c:	cmp	r1, r0
   19da0:	blt	19dfc <__assert_fail@plt+0x8820>
   19da4:	b	19e10 <__assert_fail@plt+0x8834>
   19da8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19dac:	movw	r1, #0
   19db0:	sdiv	r0, r1, r0
   19db4:	ldr	r1, [fp, #8]
   19db8:	cmp	r0, r1
   19dbc:	blt	19dfc <__assert_fail@plt+0x8820>
   19dc0:	b	19e10 <__assert_fail@plt+0x8834>
   19dc4:	ldr	r0, [fp, #8]
   19dc8:	asr	r3, r0, #31
   19dcc:	mvn	r1, #0
   19dd0:	str	r0, [sp, #180]	; 0xb4
   19dd4:	mov	r0, r1
   19dd8:	ldr	r2, [sp, #180]	; 0xb4
   19ddc:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   19de0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19de4:	subs	r0, r0, r2
   19de8:	sbcs	r1, r1, r2, asr #31
   19dec:	str	r0, [sp, #176]	; 0xb0
   19df0:	str	r1, [sp, #172]	; 0xac
   19df4:	bcs	19e10 <__assert_fail@plt+0x8834>
   19df8:	b	19dfc <__assert_fail@plt+0x8820>
   19dfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e00:	ldr	r1, [fp, #8]
   19e04:	mul	r0, r0, r1
   19e08:	str	r0, [fp, #-28]	; 0xffffffe4
   19e0c:	b	19e24 <__assert_fail@plt+0x8848>
   19e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e14:	ldr	r1, [fp, #8]
   19e18:	mul	r0, r0, r1
   19e1c:	str	r0, [fp, #-28]	; 0xffffffe4
   19e20:	b	19e34 <__assert_fail@plt+0x8858>
   19e24:	ldr	r0, [pc, #-1108]	; 199d8 <__assert_fail@plt+0x83fc>
   19e28:	str	r0, [sp, #168]	; 0xa8
   19e2c:	b	19e54 <__assert_fail@plt+0x8878>
   19e30:			; <UNDEFINED> instruction: 0xffff8000
   19e34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e38:	cmp	r0, #64	; 0x40
   19e3c:	movw	r0, #0
   19e40:	movlt	r0, #1
   19e44:	tst	r0, #1
   19e48:	movw	r0, #64	; 0x40
   19e4c:	moveq	r0, #0
   19e50:	str	r0, [sp, #168]	; 0xa8
   19e54:	ldr	r0, [sp, #168]	; 0xa8
   19e58:	str	r0, [fp, #-32]	; 0xffffffe0
   19e5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e60:	cmp	r0, #0
   19e64:	beq	19e94 <__assert_fail@plt+0x88b8>
   19e68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e6c:	ldr	r1, [fp, #8]
   19e70:	sdiv	r0, r0, r1
   19e74:	str	r0, [fp, #-24]	; 0xffffffe8
   19e78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e7c:	mov	r1, r0
   19e80:	ldr	r2, [fp, #8]
   19e84:	sdiv	r3, r0, r2
   19e88:	mls	r0, r3, r2, r0
   19e8c:	sub	r0, r1, r0
   19e90:	str	r0, [fp, #-28]	; 0xffffffe4
   19e94:	ldr	r0, [fp, #-4]
   19e98:	movw	r1, #0
   19e9c:	cmp	r0, r1
   19ea0:	bne	19eb0 <__assert_fail@plt+0x88d4>
   19ea4:	ldr	r0, [fp, #-8]
   19ea8:	movw	r1, #0
   19eac:	str	r1, [r0]
   19eb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19eb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19eb8:	sub	r0, r0, r1
   19ebc:	ldr	r1, [fp, #-12]
   19ec0:	cmp	r0, r1
   19ec4:	bge	1b2fc <__assert_fail@plt+0x9d20>
   19ec8:	ldr	r0, [fp, #-20]	; 0xffffffec
   19ecc:	ldr	r1, [fp, #-12]
   19ed0:	add	r1, r0, r1
   19ed4:	mov	r2, #1
   19ed8:	cmp	r1, r0
   19edc:	movwvc	r2, #0
   19ee0:	str	r1, [fp, #-24]	; 0xffffffe8
   19ee4:	tst	r2, #1
   19ee8:	bne	1b2f8 <__assert_fail@plt+0x9d1c>
   19eec:	ldr	r0, [fp, #-16]
   19ef0:	movw	r1, #0
   19ef4:	cmp	r1, r0
   19ef8:	bgt	19f0c <__assert_fail@plt+0x8930>
   19efc:	ldr	r0, [fp, #-16]
   19f00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f04:	cmp	r0, r1
   19f08:	blt	1b2f8 <__assert_fail@plt+0x9d1c>
   19f0c:	b	1a2e8 <__assert_fail@plt+0x8d0c>
   19f10:	b	19f14 <__assert_fail@plt+0x8938>
   19f14:	ldr	r0, [fp, #8]
   19f18:	cmp	r0, #0
   19f1c:	bge	1a030 <__assert_fail@plt+0x8a54>
   19f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f24:	cmp	r0, #0
   19f28:	bge	19fb4 <__assert_fail@plt+0x89d8>
   19f2c:	b	19f30 <__assert_fail@plt+0x8954>
   19f30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f34:	ldr	r1, [fp, #8]
   19f38:	movw	r2, #127	; 0x7f
   19f3c:	sdiv	r1, r2, r1
   19f40:	cmp	r0, r1
   19f44:	blt	1a0d0 <__assert_fail@plt+0x8af4>
   19f48:	b	1a0e8 <__assert_fail@plt+0x8b0c>
   19f4c:	b	19f50 <__assert_fail@plt+0x8974>
   19f50:	ldr	r0, [pc, #-1260]	; 19a6c <__assert_fail@plt+0x8490>
   19f54:	ldr	r1, [fp, #8]
   19f58:	cmp	r1, r0
   19f5c:	blt	19f74 <__assert_fail@plt+0x8998>
   19f60:	b	19f80 <__assert_fail@plt+0x89a4>
   19f64:	ldr	r0, [fp, #8]
   19f68:	movw	r1, #0
   19f6c:	cmp	r1, r0
   19f70:	bge	19f80 <__assert_fail@plt+0x89a4>
   19f74:	movw	r0, #0
   19f78:	str	r0, [sp, #164]	; 0xa4
   19f7c:	b	19f98 <__assert_fail@plt+0x89bc>
   19f80:	ldr	r0, [fp, #8]
   19f84:	movw	r1, #0
   19f88:	sub	r0, r1, r0
   19f8c:	movw	r1, #127	; 0x7f
   19f90:	sdiv	r0, r1, r0
   19f94:	str	r0, [sp, #164]	; 0xa4
   19f98:	ldr	r0, [sp, #164]	; 0xa4
   19f9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19fa0:	mvn	r2, #0
   19fa4:	sub	r1, r2, r1
   19fa8:	cmp	r0, r1
   19fac:	ble	1a0d0 <__assert_fail@plt+0x8af4>
   19fb0:	b	1a0e8 <__assert_fail@plt+0x8b0c>
   19fb4:	b	19fb8 <__assert_fail@plt+0x89dc>
   19fb8:	b	1a014 <__assert_fail@plt+0x8a38>
   19fbc:	b	1a014 <__assert_fail@plt+0x8a38>
   19fc0:	ldr	r0, [fp, #8]
   19fc4:	cmn	r0, #1
   19fc8:	bne	1a014 <__assert_fail@plt+0x8a38>
   19fcc:	b	19fd0 <__assert_fail@plt+0x89f4>
   19fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fd4:	mvn	r1, #127	; 0x7f
   19fd8:	add	r0, r0, r1
   19fdc:	movw	r1, #0
   19fe0:	cmp	r1, r0
   19fe4:	blt	1a0d0 <__assert_fail@plt+0x8af4>
   19fe8:	b	1a0e8 <__assert_fail@plt+0x8b0c>
   19fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ff0:	movw	r1, #0
   19ff4:	cmp	r1, r0
   19ff8:	bge	1a0e8 <__assert_fail@plt+0x8b0c>
   19ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a000:	sub	r0, r0, #1
   1a004:	movw	r1, #127	; 0x7f
   1a008:	cmp	r1, r0
   1a00c:	blt	1a0d0 <__assert_fail@plt+0x8af4>
   1a010:	b	1a0e8 <__assert_fail@plt+0x8b0c>
   1a014:	ldr	r0, [fp, #8]
   1a018:	mvn	r1, #127	; 0x7f
   1a01c:	sdiv	r0, r1, r0
   1a020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a024:	cmp	r0, r1
   1a028:	blt	1a0d0 <__assert_fail@plt+0x8af4>
   1a02c:	b	1a0e8 <__assert_fail@plt+0x8b0c>
   1a030:	ldr	r0, [fp, #8]
   1a034:	cmp	r0, #0
   1a038:	bne	1a040 <__assert_fail@plt+0x8a64>
   1a03c:	b	1a0e8 <__assert_fail@plt+0x8b0c>
   1a040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a044:	cmp	r0, #0
   1a048:	bge	1a0b8 <__assert_fail@plt+0x8adc>
   1a04c:	b	1a050 <__assert_fail@plt+0x8a74>
   1a050:	b	1a09c <__assert_fail@plt+0x8ac0>
   1a054:	b	1a09c <__assert_fail@plt+0x8ac0>
   1a058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a05c:	cmn	r0, #1
   1a060:	bne	1a09c <__assert_fail@plt+0x8ac0>
   1a064:	b	1a068 <__assert_fail@plt+0x8a8c>
   1a068:	ldr	r0, [fp, #8]
   1a06c:	mvn	r1, #127	; 0x7f
   1a070:	add	r0, r0, r1
   1a074:	movw	r1, #0
   1a078:	cmp	r1, r0
   1a07c:	blt	1a0d0 <__assert_fail@plt+0x8af4>
   1a080:	b	1a0e8 <__assert_fail@plt+0x8b0c>
   1a084:	ldr	r0, [fp, #8]
   1a088:	sub	r0, r0, #1
   1a08c:	movw	r1, #127	; 0x7f
   1a090:	cmp	r1, r0
   1a094:	blt	1a0d0 <__assert_fail@plt+0x8af4>
   1a098:	b	1a0e8 <__assert_fail@plt+0x8b0c>
   1a09c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0a0:	mvn	r1, #127	; 0x7f
   1a0a4:	sdiv	r0, r1, r0
   1a0a8:	ldr	r1, [fp, #8]
   1a0ac:	cmp	r0, r1
   1a0b0:	blt	1a0d0 <__assert_fail@plt+0x8af4>
   1a0b4:	b	1a0e8 <__assert_fail@plt+0x8b0c>
   1a0b8:	ldr	r0, [fp, #8]
   1a0bc:	movw	r1, #127	; 0x7f
   1a0c0:	sdiv	r0, r1, r0
   1a0c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a0c8:	cmp	r0, r1
   1a0cc:	bge	1a0e8 <__assert_fail@plt+0x8b0c>
   1a0d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0d4:	ldr	r1, [fp, #8]
   1a0d8:	mul	r0, r0, r1
   1a0dc:	sxtb	r0, r0
   1a0e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a0e4:	b	1b2f8 <__assert_fail@plt+0x9d1c>
   1a0e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a0ec:	ldr	r1, [fp, #8]
   1a0f0:	mul	r0, r0, r1
   1a0f4:	sxtb	r0, r0
   1a0f8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a0fc:	b	1b2fc <__assert_fail@plt+0x9d20>
   1a100:	ldr	r0, [fp, #8]
   1a104:	cmp	r0, #0
   1a108:	bge	1a218 <__assert_fail@plt+0x8c3c>
   1a10c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a110:	cmp	r0, #0
   1a114:	bge	1a1a0 <__assert_fail@plt+0x8bc4>
   1a118:	b	1a11c <__assert_fail@plt+0x8b40>
   1a11c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a120:	ldr	r1, [fp, #8]
   1a124:	movw	r2, #255	; 0xff
   1a128:	sdiv	r1, r2, r1
   1a12c:	cmp	r0, r1
   1a130:	blt	1a2b4 <__assert_fail@plt+0x8cd8>
   1a134:	b	1a2d0 <__assert_fail@plt+0x8cf4>
   1a138:	b	1a13c <__assert_fail@plt+0x8b60>
   1a13c:	ldr	r0, [pc, #-1752]	; 19a6c <__assert_fail@plt+0x8490>
   1a140:	ldr	r1, [fp, #8]
   1a144:	cmp	r1, r0
   1a148:	blt	1a160 <__assert_fail@plt+0x8b84>
   1a14c:	b	1a16c <__assert_fail@plt+0x8b90>
   1a150:	ldr	r0, [fp, #8]
   1a154:	movw	r1, #0
   1a158:	cmp	r1, r0
   1a15c:	bge	1a16c <__assert_fail@plt+0x8b90>
   1a160:	movw	r0, #0
   1a164:	str	r0, [sp, #160]	; 0xa0
   1a168:	b	1a184 <__assert_fail@plt+0x8ba8>
   1a16c:	ldr	r0, [fp, #8]
   1a170:	movw	r1, #0
   1a174:	sub	r0, r1, r0
   1a178:	movw	r1, #255	; 0xff
   1a17c:	sdiv	r0, r1, r0
   1a180:	str	r0, [sp, #160]	; 0xa0
   1a184:	ldr	r0, [sp, #160]	; 0xa0
   1a188:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a18c:	mvn	r2, #0
   1a190:	sub	r1, r2, r1
   1a194:	cmp	r0, r1
   1a198:	ble	1a2b4 <__assert_fail@plt+0x8cd8>
   1a19c:	b	1a2d0 <__assert_fail@plt+0x8cf4>
   1a1a0:	b	1a1a4 <__assert_fail@plt+0x8bc8>
   1a1a4:	b	1a1fc <__assert_fail@plt+0x8c20>
   1a1a8:	b	1a1fc <__assert_fail@plt+0x8c20>
   1a1ac:	ldr	r0, [fp, #8]
   1a1b0:	cmn	r0, #1
   1a1b4:	bne	1a1fc <__assert_fail@plt+0x8c20>
   1a1b8:	b	1a1bc <__assert_fail@plt+0x8be0>
   1a1bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1c0:	add	r0, r0, #0
   1a1c4:	movw	r1, #0
   1a1c8:	cmp	r1, r0
   1a1cc:	blt	1a2b4 <__assert_fail@plt+0x8cd8>
   1a1d0:	b	1a2d0 <__assert_fail@plt+0x8cf4>
   1a1d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1d8:	movw	r1, #0
   1a1dc:	cmp	r1, r0
   1a1e0:	bge	1a2d0 <__assert_fail@plt+0x8cf4>
   1a1e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1e8:	sub	r0, r0, #1
   1a1ec:	mvn	r1, #0
   1a1f0:	cmp	r1, r0
   1a1f4:	blt	1a2b4 <__assert_fail@plt+0x8cd8>
   1a1f8:	b	1a2d0 <__assert_fail@plt+0x8cf4>
   1a1fc:	ldr	r0, [fp, #8]
   1a200:	movw	r1, #0
   1a204:	sdiv	r0, r1, r0
   1a208:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a20c:	cmp	r0, r1
   1a210:	blt	1a2b4 <__assert_fail@plt+0x8cd8>
   1a214:	b	1a2d0 <__assert_fail@plt+0x8cf4>
   1a218:	ldr	r0, [fp, #8]
   1a21c:	cmp	r0, #0
   1a220:	bne	1a228 <__assert_fail@plt+0x8c4c>
   1a224:	b	1a2d0 <__assert_fail@plt+0x8cf4>
   1a228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a22c:	cmp	r0, #0
   1a230:	bge	1a29c <__assert_fail@plt+0x8cc0>
   1a234:	b	1a238 <__assert_fail@plt+0x8c5c>
   1a238:	b	1a280 <__assert_fail@plt+0x8ca4>
   1a23c:	b	1a280 <__assert_fail@plt+0x8ca4>
   1a240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a244:	cmn	r0, #1
   1a248:	bne	1a280 <__assert_fail@plt+0x8ca4>
   1a24c:	b	1a250 <__assert_fail@plt+0x8c74>
   1a250:	ldr	r0, [fp, #8]
   1a254:	add	r0, r0, #0
   1a258:	movw	r1, #0
   1a25c:	cmp	r1, r0
   1a260:	blt	1a2b4 <__assert_fail@plt+0x8cd8>
   1a264:	b	1a2d0 <__assert_fail@plt+0x8cf4>
   1a268:	ldr	r0, [fp, #8]
   1a26c:	sub	r0, r0, #1
   1a270:	mvn	r1, #0
   1a274:	cmp	r1, r0
   1a278:	blt	1a2b4 <__assert_fail@plt+0x8cd8>
   1a27c:	b	1a2d0 <__assert_fail@plt+0x8cf4>
   1a280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a284:	movw	r1, #0
   1a288:	sdiv	r0, r1, r0
   1a28c:	ldr	r1, [fp, #8]
   1a290:	cmp	r0, r1
   1a294:	blt	1a2b4 <__assert_fail@plt+0x8cd8>
   1a298:	b	1a2d0 <__assert_fail@plt+0x8cf4>
   1a29c:	ldr	r0, [fp, #8]
   1a2a0:	movw	r1, #255	; 0xff
   1a2a4:	sdiv	r0, r1, r0
   1a2a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a2ac:	cmp	r0, r1
   1a2b0:	bge	1a2d0 <__assert_fail@plt+0x8cf4>
   1a2b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2b8:	ldr	r1, [fp, #8]
   1a2bc:	mul	r0, r0, r1
   1a2c0:	and	r0, r0, #255	; 0xff
   1a2c4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a2c8:	b	1b2f8 <__assert_fail@plt+0x9d1c>
   1a2cc:	andhi	r0, r0, r0
   1a2d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a2d4:	ldr	r1, [fp, #8]
   1a2d8:	mul	r0, r0, r1
   1a2dc:	and	r0, r0, #255	; 0xff
   1a2e0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a2e4:	b	1b2fc <__assert_fail@plt+0x9d20>
   1a2e8:	b	1a6c0 <__assert_fail@plt+0x90e4>
   1a2ec:	b	1a2f0 <__assert_fail@plt+0x8d14>
   1a2f0:	ldr	r0, [fp, #8]
   1a2f4:	cmp	r0, #0
   1a2f8:	bge	1a40c <__assert_fail@plt+0x8e30>
   1a2fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a300:	cmp	r0, #0
   1a304:	bge	1a390 <__assert_fail@plt+0x8db4>
   1a308:	b	1a30c <__assert_fail@plt+0x8d30>
   1a30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a310:	ldr	r1, [fp, #8]
   1a314:	movw	r2, #32767	; 0x7fff
   1a318:	sdiv	r1, r2, r1
   1a31c:	cmp	r0, r1
   1a320:	blt	1a4ac <__assert_fail@plt+0x8ed0>
   1a324:	b	1a4c4 <__assert_fail@plt+0x8ee8>
   1a328:	b	1a32c <__assert_fail@plt+0x8d50>
   1a32c:	ldr	r0, [pc, #4084]	; 1b328 <__assert_fail@plt+0x9d4c>
   1a330:	ldr	r1, [fp, #8]
   1a334:	cmp	r1, r0
   1a338:	blt	1a350 <__assert_fail@plt+0x8d74>
   1a33c:	b	1a35c <__assert_fail@plt+0x8d80>
   1a340:	ldr	r0, [fp, #8]
   1a344:	movw	r1, #0
   1a348:	cmp	r1, r0
   1a34c:	bge	1a35c <__assert_fail@plt+0x8d80>
   1a350:	movw	r0, #0
   1a354:	str	r0, [sp, #156]	; 0x9c
   1a358:	b	1a374 <__assert_fail@plt+0x8d98>
   1a35c:	ldr	r0, [fp, #8]
   1a360:	movw	r1, #0
   1a364:	sub	r0, r1, r0
   1a368:	movw	r1, #32767	; 0x7fff
   1a36c:	sdiv	r0, r1, r0
   1a370:	str	r0, [sp, #156]	; 0x9c
   1a374:	ldr	r0, [sp, #156]	; 0x9c
   1a378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a37c:	mvn	r2, #0
   1a380:	sub	r1, r2, r1
   1a384:	cmp	r0, r1
   1a388:	ble	1a4ac <__assert_fail@plt+0x8ed0>
   1a38c:	b	1a4c4 <__assert_fail@plt+0x8ee8>
   1a390:	b	1a394 <__assert_fail@plt+0x8db8>
   1a394:	b	1a3f0 <__assert_fail@plt+0x8e14>
   1a398:	b	1a3f0 <__assert_fail@plt+0x8e14>
   1a39c:	ldr	r0, [fp, #8]
   1a3a0:	cmn	r0, #1
   1a3a4:	bne	1a3f0 <__assert_fail@plt+0x8e14>
   1a3a8:	b	1a3ac <__assert_fail@plt+0x8dd0>
   1a3ac:	ldr	r0, [pc, #3964]	; 1b330 <__assert_fail@plt+0x9d54>
   1a3b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a3b4:	add	r0, r1, r0
   1a3b8:	movw	r1, #0
   1a3bc:	cmp	r1, r0
   1a3c0:	blt	1a4ac <__assert_fail@plt+0x8ed0>
   1a3c4:	b	1a4c4 <__assert_fail@plt+0x8ee8>
   1a3c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3cc:	movw	r1, #0
   1a3d0:	cmp	r1, r0
   1a3d4:	bge	1a4c4 <__assert_fail@plt+0x8ee8>
   1a3d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a3dc:	sub	r0, r0, #1
   1a3e0:	movw	r1, #32767	; 0x7fff
   1a3e4:	cmp	r1, r0
   1a3e8:	blt	1a4ac <__assert_fail@plt+0x8ed0>
   1a3ec:	b	1a4c4 <__assert_fail@plt+0x8ee8>
   1a3f0:	ldr	r0, [pc, #3896]	; 1b330 <__assert_fail@plt+0x9d54>
   1a3f4:	ldr	r1, [fp, #8]
   1a3f8:	sdiv	r0, r0, r1
   1a3fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a400:	cmp	r0, r1
   1a404:	blt	1a4ac <__assert_fail@plt+0x8ed0>
   1a408:	b	1a4c4 <__assert_fail@plt+0x8ee8>
   1a40c:	ldr	r0, [fp, #8]
   1a410:	cmp	r0, #0
   1a414:	bne	1a41c <__assert_fail@plt+0x8e40>
   1a418:	b	1a4c4 <__assert_fail@plt+0x8ee8>
   1a41c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a420:	cmp	r0, #0
   1a424:	bge	1a494 <__assert_fail@plt+0x8eb8>
   1a428:	b	1a42c <__assert_fail@plt+0x8e50>
   1a42c:	b	1a478 <__assert_fail@plt+0x8e9c>
   1a430:	b	1a478 <__assert_fail@plt+0x8e9c>
   1a434:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a438:	cmn	r0, #1
   1a43c:	bne	1a478 <__assert_fail@plt+0x8e9c>
   1a440:	b	1a444 <__assert_fail@plt+0x8e68>
   1a444:	ldr	r0, [pc, #3812]	; 1b330 <__assert_fail@plt+0x9d54>
   1a448:	ldr	r1, [fp, #8]
   1a44c:	add	r0, r1, r0
   1a450:	movw	r1, #0
   1a454:	cmp	r1, r0
   1a458:	blt	1a4ac <__assert_fail@plt+0x8ed0>
   1a45c:	b	1a4c4 <__assert_fail@plt+0x8ee8>
   1a460:	ldr	r0, [fp, #8]
   1a464:	sub	r0, r0, #1
   1a468:	movw	r1, #32767	; 0x7fff
   1a46c:	cmp	r1, r0
   1a470:	blt	1a4ac <__assert_fail@plt+0x8ed0>
   1a474:	b	1a4c4 <__assert_fail@plt+0x8ee8>
   1a478:	ldr	r0, [pc, #3760]	; 1b330 <__assert_fail@plt+0x9d54>
   1a47c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a480:	sdiv	r0, r0, r1
   1a484:	ldr	r1, [fp, #8]
   1a488:	cmp	r0, r1
   1a48c:	blt	1a4ac <__assert_fail@plt+0x8ed0>
   1a490:	b	1a4c4 <__assert_fail@plt+0x8ee8>
   1a494:	ldr	r0, [fp, #8]
   1a498:	movw	r1, #32767	; 0x7fff
   1a49c:	sdiv	r0, r1, r0
   1a4a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a4a4:	cmp	r0, r1
   1a4a8:	bge	1a4c4 <__assert_fail@plt+0x8ee8>
   1a4ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4b0:	ldr	r1, [fp, #8]
   1a4b4:	mul	r0, r0, r1
   1a4b8:	sxth	r0, r0
   1a4bc:	str	r0, [fp, #-28]	; 0xffffffe4
   1a4c0:	b	1b2f8 <__assert_fail@plt+0x9d1c>
   1a4c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4c8:	ldr	r1, [fp, #8]
   1a4cc:	mul	r0, r0, r1
   1a4d0:	sxth	r0, r0
   1a4d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1a4d8:	b	1b2fc <__assert_fail@plt+0x9d20>
   1a4dc:	ldr	r0, [fp, #8]
   1a4e0:	cmp	r0, #0
   1a4e4:	bge	1a5f4 <__assert_fail@plt+0x9018>
   1a4e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4ec:	cmp	r0, #0
   1a4f0:	bge	1a57c <__assert_fail@plt+0x8fa0>
   1a4f4:	b	1a4f8 <__assert_fail@plt+0x8f1c>
   1a4f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a4fc:	ldr	r1, [fp, #8]
   1a500:	movw	r2, #65535	; 0xffff
   1a504:	sdiv	r1, r2, r1
   1a508:	cmp	r0, r1
   1a50c:	blt	1a690 <__assert_fail@plt+0x90b4>
   1a510:	b	1a6a8 <__assert_fail@plt+0x90cc>
   1a514:	b	1a518 <__assert_fail@plt+0x8f3c>
   1a518:	ldr	r0, [pc, #3592]	; 1b328 <__assert_fail@plt+0x9d4c>
   1a51c:	ldr	r1, [fp, #8]
   1a520:	cmp	r1, r0
   1a524:	blt	1a53c <__assert_fail@plt+0x8f60>
   1a528:	b	1a548 <__assert_fail@plt+0x8f6c>
   1a52c:	ldr	r0, [fp, #8]
   1a530:	movw	r1, #0
   1a534:	cmp	r1, r0
   1a538:	bge	1a548 <__assert_fail@plt+0x8f6c>
   1a53c:	movw	r0, #0
   1a540:	str	r0, [sp, #152]	; 0x98
   1a544:	b	1a560 <__assert_fail@plt+0x8f84>
   1a548:	ldr	r0, [fp, #8]
   1a54c:	movw	r1, #0
   1a550:	sub	r0, r1, r0
   1a554:	movw	r1, #65535	; 0xffff
   1a558:	sdiv	r0, r1, r0
   1a55c:	str	r0, [sp, #152]	; 0x98
   1a560:	ldr	r0, [sp, #152]	; 0x98
   1a564:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a568:	mvn	r2, #0
   1a56c:	sub	r1, r2, r1
   1a570:	cmp	r0, r1
   1a574:	ble	1a690 <__assert_fail@plt+0x90b4>
   1a578:	b	1a6a8 <__assert_fail@plt+0x90cc>
   1a57c:	b	1a580 <__assert_fail@plt+0x8fa4>
   1a580:	b	1a5d8 <__assert_fail@plt+0x8ffc>
   1a584:	b	1a5d8 <__assert_fail@plt+0x8ffc>
   1a588:	ldr	r0, [fp, #8]
   1a58c:	cmn	r0, #1
   1a590:	bne	1a5d8 <__assert_fail@plt+0x8ffc>
   1a594:	b	1a598 <__assert_fail@plt+0x8fbc>
   1a598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a59c:	add	r0, r0, #0
   1a5a0:	movw	r1, #0
   1a5a4:	cmp	r1, r0
   1a5a8:	blt	1a690 <__assert_fail@plt+0x90b4>
   1a5ac:	b	1a6a8 <__assert_fail@plt+0x90cc>
   1a5b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5b4:	movw	r1, #0
   1a5b8:	cmp	r1, r0
   1a5bc:	bge	1a6a8 <__assert_fail@plt+0x90cc>
   1a5c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a5c4:	sub	r0, r0, #1
   1a5c8:	mvn	r1, #0
   1a5cc:	cmp	r1, r0
   1a5d0:	blt	1a690 <__assert_fail@plt+0x90b4>
   1a5d4:	b	1a6a8 <__assert_fail@plt+0x90cc>
   1a5d8:	ldr	r0, [fp, #8]
   1a5dc:	movw	r1, #0
   1a5e0:	sdiv	r0, r1, r0
   1a5e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a5e8:	cmp	r0, r1
   1a5ec:	blt	1a690 <__assert_fail@plt+0x90b4>
   1a5f0:	b	1a6a8 <__assert_fail@plt+0x90cc>
   1a5f4:	ldr	r0, [fp, #8]
   1a5f8:	cmp	r0, #0
   1a5fc:	bne	1a604 <__assert_fail@plt+0x9028>
   1a600:	b	1a6a8 <__assert_fail@plt+0x90cc>
   1a604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a608:	cmp	r0, #0
   1a60c:	bge	1a678 <__assert_fail@plt+0x909c>
   1a610:	b	1a614 <__assert_fail@plt+0x9038>
   1a614:	b	1a65c <__assert_fail@plt+0x9080>
   1a618:	b	1a65c <__assert_fail@plt+0x9080>
   1a61c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a620:	cmn	r0, #1
   1a624:	bne	1a65c <__assert_fail@plt+0x9080>
   1a628:	b	1a62c <__assert_fail@plt+0x9050>
   1a62c:	ldr	r0, [fp, #8]
   1a630:	add	r0, r0, #0
   1a634:	movw	r1, #0
   1a638:	cmp	r1, r0
   1a63c:	blt	1a690 <__assert_fail@plt+0x90b4>
   1a640:	b	1a6a8 <__assert_fail@plt+0x90cc>
   1a644:	ldr	r0, [fp, #8]
   1a648:	sub	r0, r0, #1
   1a64c:	mvn	r1, #0
   1a650:	cmp	r1, r0
   1a654:	blt	1a690 <__assert_fail@plt+0x90b4>
   1a658:	b	1a6a8 <__assert_fail@plt+0x90cc>
   1a65c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a660:	movw	r1, #0
   1a664:	sdiv	r0, r1, r0
   1a668:	ldr	r1, [fp, #8]
   1a66c:	cmp	r0, r1
   1a670:	blt	1a690 <__assert_fail@plt+0x90b4>
   1a674:	b	1a6a8 <__assert_fail@plt+0x90cc>
   1a678:	ldr	r0, [fp, #8]
   1a67c:	movw	r1, #65535	; 0xffff
   1a680:	sdiv	r0, r1, r0
   1a684:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a688:	cmp	r0, r1
   1a68c:	bge	1a6a8 <__assert_fail@plt+0x90cc>
   1a690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a694:	ldr	r1, [fp, #8]
   1a698:	mul	r0, r0, r1
   1a69c:	uxth	r0, r0
   1a6a0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a6a4:	b	1b2f8 <__assert_fail@plt+0x9d1c>
   1a6a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6ac:	ldr	r1, [fp, #8]
   1a6b0:	mul	r0, r0, r1
   1a6b4:	uxth	r0, r0
   1a6b8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a6bc:	b	1b2fc <__assert_fail@plt+0x9d20>
   1a6c0:	b	1a6c4 <__assert_fail@plt+0x90e8>
   1a6c4:	b	1a6c8 <__assert_fail@plt+0x90ec>
   1a6c8:	ldr	r0, [fp, #8]
   1a6cc:	cmp	r0, #0
   1a6d0:	bge	1a7d4 <__assert_fail@plt+0x91f8>
   1a6d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6d8:	cmp	r0, #0
   1a6dc:	bge	1a768 <__assert_fail@plt+0x918c>
   1a6e0:	b	1a6e4 <__assert_fail@plt+0x9108>
   1a6e4:	ldr	r0, [pc, #3128]	; 1b324 <__assert_fail@plt+0x9d48>
   1a6e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a6ec:	ldr	r2, [fp, #8]
   1a6f0:	sdiv	r0, r0, r2
   1a6f4:	cmp	r1, r0
   1a6f8:	blt	1a864 <__assert_fail@plt+0x9288>
   1a6fc:	b	1a878 <__assert_fail@plt+0x929c>
   1a700:	b	1a704 <__assert_fail@plt+0x9128>
   1a704:	ldr	r0, [pc, #3100]	; 1b328 <__assert_fail@plt+0x9d4c>
   1a708:	ldr	r1, [fp, #8]
   1a70c:	cmp	r1, r0
   1a710:	blt	1a728 <__assert_fail@plt+0x914c>
   1a714:	b	1a734 <__assert_fail@plt+0x9158>
   1a718:	ldr	r0, [fp, #8]
   1a71c:	movw	r1, #0
   1a720:	cmp	r1, r0
   1a724:	bge	1a734 <__assert_fail@plt+0x9158>
   1a728:	movw	r0, #0
   1a72c:	str	r0, [sp, #148]	; 0x94
   1a730:	b	1a74c <__assert_fail@plt+0x9170>
   1a734:	ldr	r0, [pc, #3048]	; 1b324 <__assert_fail@plt+0x9d48>
   1a738:	ldr	r1, [fp, #8]
   1a73c:	movw	r2, #0
   1a740:	sub	r1, r2, r1
   1a744:	sdiv	r0, r0, r1
   1a748:	str	r0, [sp, #148]	; 0x94
   1a74c:	ldr	r0, [sp, #148]	; 0x94
   1a750:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a754:	mvn	r2, #0
   1a758:	sub	r1, r2, r1
   1a75c:	cmp	r0, r1
   1a760:	ble	1a864 <__assert_fail@plt+0x9288>
   1a764:	b	1a878 <__assert_fail@plt+0x929c>
   1a768:	ldr	r0, [fp, #8]
   1a76c:	cmn	r0, #1
   1a770:	bne	1a7b8 <__assert_fail@plt+0x91dc>
   1a774:	b	1a778 <__assert_fail@plt+0x919c>
   1a778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a77c:	add	r0, r0, #-2147483648	; 0x80000000
   1a780:	movw	r1, #0
   1a784:	cmp	r1, r0
   1a788:	blt	1a864 <__assert_fail@plt+0x9288>
   1a78c:	b	1a878 <__assert_fail@plt+0x929c>
   1a790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a794:	movw	r1, #0
   1a798:	cmp	r1, r0
   1a79c:	bge	1a878 <__assert_fail@plt+0x929c>
   1a7a0:	ldr	r0, [pc, #2940]	; 1b324 <__assert_fail@plt+0x9d48>
   1a7a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7a8:	sub	r1, r1, #1
   1a7ac:	cmp	r0, r1
   1a7b0:	blt	1a864 <__assert_fail@plt+0x9288>
   1a7b4:	b	1a878 <__assert_fail@plt+0x929c>
   1a7b8:	ldr	r0, [pc, #2924]	; 1b32c <__assert_fail@plt+0x9d50>
   1a7bc:	ldr	r1, [fp, #8]
   1a7c0:	sdiv	r0, r0, r1
   1a7c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a7c8:	cmp	r0, r1
   1a7cc:	blt	1a864 <__assert_fail@plt+0x9288>
   1a7d0:	b	1a878 <__assert_fail@plt+0x929c>
   1a7d4:	ldr	r0, [fp, #8]
   1a7d8:	cmp	r0, #0
   1a7dc:	bne	1a7e4 <__assert_fail@plt+0x9208>
   1a7e0:	b	1a878 <__assert_fail@plt+0x929c>
   1a7e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7e8:	cmp	r0, #0
   1a7ec:	bge	1a84c <__assert_fail@plt+0x9270>
   1a7f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a7f4:	cmn	r0, #1
   1a7f8:	bne	1a830 <__assert_fail@plt+0x9254>
   1a7fc:	b	1a800 <__assert_fail@plt+0x9224>
   1a800:	ldr	r0, [fp, #8]
   1a804:	add	r0, r0, #-2147483648	; 0x80000000
   1a808:	movw	r1, #0
   1a80c:	cmp	r1, r0
   1a810:	blt	1a864 <__assert_fail@plt+0x9288>
   1a814:	b	1a878 <__assert_fail@plt+0x929c>
   1a818:	ldr	r0, [pc, #2820]	; 1b324 <__assert_fail@plt+0x9d48>
   1a81c:	ldr	r1, [fp, #8]
   1a820:	sub	r1, r1, #1
   1a824:	cmp	r0, r1
   1a828:	blt	1a864 <__assert_fail@plt+0x9288>
   1a82c:	b	1a878 <__assert_fail@plt+0x929c>
   1a830:	ldr	r0, [pc, #2804]	; 1b32c <__assert_fail@plt+0x9d50>
   1a834:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a838:	sdiv	r0, r0, r1
   1a83c:	ldr	r1, [fp, #8]
   1a840:	cmp	r0, r1
   1a844:	blt	1a864 <__assert_fail@plt+0x9288>
   1a848:	b	1a878 <__assert_fail@plt+0x929c>
   1a84c:	ldr	r0, [pc, #2768]	; 1b324 <__assert_fail@plt+0x9d48>
   1a850:	ldr	r1, [fp, #8]
   1a854:	sdiv	r0, r0, r1
   1a858:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a85c:	cmp	r0, r1
   1a860:	bge	1a878 <__assert_fail@plt+0x929c>
   1a864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a868:	ldr	r1, [fp, #8]
   1a86c:	mul	r0, r0, r1
   1a870:	str	r0, [fp, #-28]	; 0xffffffe4
   1a874:	b	1b2f8 <__assert_fail@plt+0x9d1c>
   1a878:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a87c:	ldr	r1, [fp, #8]
   1a880:	mul	r0, r0, r1
   1a884:	str	r0, [fp, #-28]	; 0xffffffe4
   1a888:	b	1b2fc <__assert_fail@plt+0x9d20>
   1a88c:	ldr	r0, [fp, #8]
   1a890:	cmp	r0, #0
   1a894:	bge	1a9a4 <__assert_fail@plt+0x93c8>
   1a898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a89c:	cmp	r0, #0
   1a8a0:	bge	1a92c <__assert_fail@plt+0x9350>
   1a8a4:	b	1a8c4 <__assert_fail@plt+0x92e8>
   1a8a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8ac:	ldr	r1, [fp, #8]
   1a8b0:	mvn	r2, #0
   1a8b4:	udiv	r1, r2, r1
   1a8b8:	cmp	r0, r1
   1a8bc:	bcc	1aa40 <__assert_fail@plt+0x9464>
   1a8c0:	b	1aa54 <__assert_fail@plt+0x9478>
   1a8c4:	b	1a8c8 <__assert_fail@plt+0x92ec>
   1a8c8:	ldr	r0, [pc, #2648]	; 1b328 <__assert_fail@plt+0x9d4c>
   1a8cc:	ldr	r1, [fp, #8]
   1a8d0:	cmp	r1, r0
   1a8d4:	blt	1a8ec <__assert_fail@plt+0x9310>
   1a8d8:	b	1a8f8 <__assert_fail@plt+0x931c>
   1a8dc:	ldr	r0, [fp, #8]
   1a8e0:	movw	r1, #0
   1a8e4:	cmp	r1, r0
   1a8e8:	bge	1a8f8 <__assert_fail@plt+0x931c>
   1a8ec:	movw	r0, #1
   1a8f0:	str	r0, [sp, #144]	; 0x90
   1a8f4:	b	1a910 <__assert_fail@plt+0x9334>
   1a8f8:	ldr	r0, [fp, #8]
   1a8fc:	movw	r1, #0
   1a900:	sub	r0, r1, r0
   1a904:	mvn	r1, #0
   1a908:	udiv	r0, r1, r0
   1a90c:	str	r0, [sp, #144]	; 0x90
   1a910:	ldr	r0, [sp, #144]	; 0x90
   1a914:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a918:	mvn	r2, #0
   1a91c:	sub	r1, r2, r1
   1a920:	cmp	r0, r1
   1a924:	bls	1aa40 <__assert_fail@plt+0x9464>
   1a928:	b	1aa54 <__assert_fail@plt+0x9478>
   1a92c:	b	1a930 <__assert_fail@plt+0x9354>
   1a930:	b	1a988 <__assert_fail@plt+0x93ac>
   1a934:	b	1a988 <__assert_fail@plt+0x93ac>
   1a938:	ldr	r0, [fp, #8]
   1a93c:	cmn	r0, #1
   1a940:	bne	1a988 <__assert_fail@plt+0x93ac>
   1a944:	b	1a948 <__assert_fail@plt+0x936c>
   1a948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a94c:	add	r0, r0, #0
   1a950:	movw	r1, #0
   1a954:	cmp	r1, r0
   1a958:	blt	1aa40 <__assert_fail@plt+0x9464>
   1a95c:	b	1aa54 <__assert_fail@plt+0x9478>
   1a960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a964:	movw	r1, #0
   1a968:	cmp	r1, r0
   1a96c:	bge	1aa54 <__assert_fail@plt+0x9478>
   1a970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a974:	sub	r0, r0, #1
   1a978:	mvn	r1, #0
   1a97c:	cmp	r1, r0
   1a980:	blt	1aa40 <__assert_fail@plt+0x9464>
   1a984:	b	1aa54 <__assert_fail@plt+0x9478>
   1a988:	ldr	r0, [fp, #8]
   1a98c:	movw	r1, #0
   1a990:	sdiv	r0, r1, r0
   1a994:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a998:	cmp	r0, r1
   1a99c:	blt	1aa40 <__assert_fail@plt+0x9464>
   1a9a0:	b	1aa54 <__assert_fail@plt+0x9478>
   1a9a4:	ldr	r0, [fp, #8]
   1a9a8:	cmp	r0, #0
   1a9ac:	bne	1a9b4 <__assert_fail@plt+0x93d8>
   1a9b0:	b	1aa54 <__assert_fail@plt+0x9478>
   1a9b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9b8:	cmp	r0, #0
   1a9bc:	bge	1aa28 <__assert_fail@plt+0x944c>
   1a9c0:	b	1a9c4 <__assert_fail@plt+0x93e8>
   1a9c4:	b	1aa0c <__assert_fail@plt+0x9430>
   1a9c8:	b	1aa0c <__assert_fail@plt+0x9430>
   1a9cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9d0:	cmn	r0, #1
   1a9d4:	bne	1aa0c <__assert_fail@plt+0x9430>
   1a9d8:	b	1a9dc <__assert_fail@plt+0x9400>
   1a9dc:	ldr	r0, [fp, #8]
   1a9e0:	add	r0, r0, #0
   1a9e4:	movw	r1, #0
   1a9e8:	cmp	r1, r0
   1a9ec:	blt	1aa40 <__assert_fail@plt+0x9464>
   1a9f0:	b	1aa54 <__assert_fail@plt+0x9478>
   1a9f4:	ldr	r0, [fp, #8]
   1a9f8:	sub	r0, r0, #1
   1a9fc:	mvn	r1, #0
   1aa00:	cmp	r1, r0
   1aa04:	blt	1aa40 <__assert_fail@plt+0x9464>
   1aa08:	b	1aa54 <__assert_fail@plt+0x9478>
   1aa0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa10:	movw	r1, #0
   1aa14:	sdiv	r0, r1, r0
   1aa18:	ldr	r1, [fp, #8]
   1aa1c:	cmp	r0, r1
   1aa20:	blt	1aa40 <__assert_fail@plt+0x9464>
   1aa24:	b	1aa54 <__assert_fail@plt+0x9478>
   1aa28:	ldr	r0, [fp, #8]
   1aa2c:	mvn	r1, #0
   1aa30:	udiv	r0, r1, r0
   1aa34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa38:	cmp	r0, r1
   1aa3c:	bcs	1aa54 <__assert_fail@plt+0x9478>
   1aa40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa44:	ldr	r1, [fp, #8]
   1aa48:	mul	r0, r0, r1
   1aa4c:	str	r0, [fp, #-28]	; 0xffffffe4
   1aa50:	b	1b2f8 <__assert_fail@plt+0x9d1c>
   1aa54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa58:	ldr	r1, [fp, #8]
   1aa5c:	mul	r0, r0, r1
   1aa60:	str	r0, [fp, #-28]	; 0xffffffe4
   1aa64:	b	1b2fc <__assert_fail@plt+0x9d20>
   1aa68:	b	1aa6c <__assert_fail@plt+0x9490>
   1aa6c:	b	1aa70 <__assert_fail@plt+0x9494>
   1aa70:	ldr	r0, [fp, #8]
   1aa74:	cmp	r0, #0
   1aa78:	bge	1ab7c <__assert_fail@plt+0x95a0>
   1aa7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa80:	cmp	r0, #0
   1aa84:	bge	1ab10 <__assert_fail@plt+0x9534>
   1aa88:	b	1aa8c <__assert_fail@plt+0x94b0>
   1aa8c:	ldr	r0, [pc, #2192]	; 1b324 <__assert_fail@plt+0x9d48>
   1aa90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa94:	ldr	r2, [fp, #8]
   1aa98:	sdiv	r0, r0, r2
   1aa9c:	cmp	r1, r0
   1aaa0:	blt	1ac0c <__assert_fail@plt+0x9630>
   1aaa4:	b	1ac20 <__assert_fail@plt+0x9644>
   1aaa8:	b	1aaac <__assert_fail@plt+0x94d0>
   1aaac:	ldr	r0, [pc, #2164]	; 1b328 <__assert_fail@plt+0x9d4c>
   1aab0:	ldr	r1, [fp, #8]
   1aab4:	cmp	r1, r0
   1aab8:	blt	1aad0 <__assert_fail@plt+0x94f4>
   1aabc:	b	1aadc <__assert_fail@plt+0x9500>
   1aac0:	ldr	r0, [fp, #8]
   1aac4:	movw	r1, #0
   1aac8:	cmp	r1, r0
   1aacc:	bge	1aadc <__assert_fail@plt+0x9500>
   1aad0:	movw	r0, #0
   1aad4:	str	r0, [sp, #140]	; 0x8c
   1aad8:	b	1aaf4 <__assert_fail@plt+0x9518>
   1aadc:	ldr	r0, [pc, #2112]	; 1b324 <__assert_fail@plt+0x9d48>
   1aae0:	ldr	r1, [fp, #8]
   1aae4:	movw	r2, #0
   1aae8:	sub	r1, r2, r1
   1aaec:	sdiv	r0, r0, r1
   1aaf0:	str	r0, [sp, #140]	; 0x8c
   1aaf4:	ldr	r0, [sp, #140]	; 0x8c
   1aaf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aafc:	mvn	r2, #0
   1ab00:	sub	r1, r2, r1
   1ab04:	cmp	r0, r1
   1ab08:	ble	1ac0c <__assert_fail@plt+0x9630>
   1ab0c:	b	1ac20 <__assert_fail@plt+0x9644>
   1ab10:	ldr	r0, [fp, #8]
   1ab14:	cmn	r0, #1
   1ab18:	bne	1ab60 <__assert_fail@plt+0x9584>
   1ab1c:	b	1ab20 <__assert_fail@plt+0x9544>
   1ab20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab24:	add	r0, r0, #-2147483648	; 0x80000000
   1ab28:	movw	r1, #0
   1ab2c:	cmp	r1, r0
   1ab30:	blt	1ac0c <__assert_fail@plt+0x9630>
   1ab34:	b	1ac20 <__assert_fail@plt+0x9644>
   1ab38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab3c:	movw	r1, #0
   1ab40:	cmp	r1, r0
   1ab44:	bge	1ac20 <__assert_fail@plt+0x9644>
   1ab48:	ldr	r0, [pc, #2004]	; 1b324 <__assert_fail@plt+0x9d48>
   1ab4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab50:	sub	r1, r1, #1
   1ab54:	cmp	r0, r1
   1ab58:	blt	1ac0c <__assert_fail@plt+0x9630>
   1ab5c:	b	1ac20 <__assert_fail@plt+0x9644>
   1ab60:	ldr	r0, [pc, #1988]	; 1b32c <__assert_fail@plt+0x9d50>
   1ab64:	ldr	r1, [fp, #8]
   1ab68:	sdiv	r0, r0, r1
   1ab6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ab70:	cmp	r0, r1
   1ab74:	blt	1ac0c <__assert_fail@plt+0x9630>
   1ab78:	b	1ac20 <__assert_fail@plt+0x9644>
   1ab7c:	ldr	r0, [fp, #8]
   1ab80:	cmp	r0, #0
   1ab84:	bne	1ab8c <__assert_fail@plt+0x95b0>
   1ab88:	b	1ac20 <__assert_fail@plt+0x9644>
   1ab8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab90:	cmp	r0, #0
   1ab94:	bge	1abf4 <__assert_fail@plt+0x9618>
   1ab98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab9c:	cmn	r0, #1
   1aba0:	bne	1abd8 <__assert_fail@plt+0x95fc>
   1aba4:	b	1aba8 <__assert_fail@plt+0x95cc>
   1aba8:	ldr	r0, [fp, #8]
   1abac:	add	r0, r0, #-2147483648	; 0x80000000
   1abb0:	movw	r1, #0
   1abb4:	cmp	r1, r0
   1abb8:	blt	1ac0c <__assert_fail@plt+0x9630>
   1abbc:	b	1ac20 <__assert_fail@plt+0x9644>
   1abc0:	ldr	r0, [pc, #1884]	; 1b324 <__assert_fail@plt+0x9d48>
   1abc4:	ldr	r1, [fp, #8]
   1abc8:	sub	r1, r1, #1
   1abcc:	cmp	r0, r1
   1abd0:	blt	1ac0c <__assert_fail@plt+0x9630>
   1abd4:	b	1ac20 <__assert_fail@plt+0x9644>
   1abd8:	ldr	r0, [pc, #1868]	; 1b32c <__assert_fail@plt+0x9d50>
   1abdc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1abe0:	sdiv	r0, r0, r1
   1abe4:	ldr	r1, [fp, #8]
   1abe8:	cmp	r0, r1
   1abec:	blt	1ac0c <__assert_fail@plt+0x9630>
   1abf0:	b	1ac20 <__assert_fail@plt+0x9644>
   1abf4:	ldr	r0, [pc, #1832]	; 1b324 <__assert_fail@plt+0x9d48>
   1abf8:	ldr	r1, [fp, #8]
   1abfc:	sdiv	r0, r0, r1
   1ac00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ac04:	cmp	r0, r1
   1ac08:	bge	1ac20 <__assert_fail@plt+0x9644>
   1ac0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac10:	ldr	r1, [fp, #8]
   1ac14:	mul	r0, r0, r1
   1ac18:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac1c:	b	1b2f8 <__assert_fail@plt+0x9d1c>
   1ac20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac24:	ldr	r1, [fp, #8]
   1ac28:	mul	r0, r0, r1
   1ac2c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac30:	b	1b2fc <__assert_fail@plt+0x9d20>
   1ac34:	ldr	r0, [fp, #8]
   1ac38:	cmp	r0, #0
   1ac3c:	bge	1ad4c <__assert_fail@plt+0x9770>
   1ac40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac44:	cmp	r0, #0
   1ac48:	bge	1acd4 <__assert_fail@plt+0x96f8>
   1ac4c:	b	1ac6c <__assert_fail@plt+0x9690>
   1ac50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac54:	ldr	r1, [fp, #8]
   1ac58:	mvn	r2, #0
   1ac5c:	udiv	r1, r2, r1
   1ac60:	cmp	r0, r1
   1ac64:	bcc	1ade8 <__assert_fail@plt+0x980c>
   1ac68:	b	1adfc <__assert_fail@plt+0x9820>
   1ac6c:	b	1ac70 <__assert_fail@plt+0x9694>
   1ac70:	ldr	r0, [pc, #1712]	; 1b328 <__assert_fail@plt+0x9d4c>
   1ac74:	ldr	r1, [fp, #8]
   1ac78:	cmp	r1, r0
   1ac7c:	blt	1ac94 <__assert_fail@plt+0x96b8>
   1ac80:	b	1aca0 <__assert_fail@plt+0x96c4>
   1ac84:	ldr	r0, [fp, #8]
   1ac88:	movw	r1, #0
   1ac8c:	cmp	r1, r0
   1ac90:	bge	1aca0 <__assert_fail@plt+0x96c4>
   1ac94:	movw	r0, #1
   1ac98:	str	r0, [sp, #136]	; 0x88
   1ac9c:	b	1acb8 <__assert_fail@plt+0x96dc>
   1aca0:	ldr	r0, [fp, #8]
   1aca4:	movw	r1, #0
   1aca8:	sub	r0, r1, r0
   1acac:	mvn	r1, #0
   1acb0:	udiv	r0, r1, r0
   1acb4:	str	r0, [sp, #136]	; 0x88
   1acb8:	ldr	r0, [sp, #136]	; 0x88
   1acbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1acc0:	mvn	r2, #0
   1acc4:	sub	r1, r2, r1
   1acc8:	cmp	r0, r1
   1accc:	bls	1ade8 <__assert_fail@plt+0x980c>
   1acd0:	b	1adfc <__assert_fail@plt+0x9820>
   1acd4:	b	1acd8 <__assert_fail@plt+0x96fc>
   1acd8:	b	1ad30 <__assert_fail@plt+0x9754>
   1acdc:	b	1ad30 <__assert_fail@plt+0x9754>
   1ace0:	ldr	r0, [fp, #8]
   1ace4:	cmn	r0, #1
   1ace8:	bne	1ad30 <__assert_fail@plt+0x9754>
   1acec:	b	1acf0 <__assert_fail@plt+0x9714>
   1acf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acf4:	add	r0, r0, #0
   1acf8:	movw	r1, #0
   1acfc:	cmp	r1, r0
   1ad00:	blt	1ade8 <__assert_fail@plt+0x980c>
   1ad04:	b	1adfc <__assert_fail@plt+0x9820>
   1ad08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad0c:	movw	r1, #0
   1ad10:	cmp	r1, r0
   1ad14:	bge	1adfc <__assert_fail@plt+0x9820>
   1ad18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad1c:	sub	r0, r0, #1
   1ad20:	mvn	r1, #0
   1ad24:	cmp	r1, r0
   1ad28:	blt	1ade8 <__assert_fail@plt+0x980c>
   1ad2c:	b	1adfc <__assert_fail@plt+0x9820>
   1ad30:	ldr	r0, [fp, #8]
   1ad34:	movw	r1, #0
   1ad38:	sdiv	r0, r1, r0
   1ad3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad40:	cmp	r0, r1
   1ad44:	blt	1ade8 <__assert_fail@plt+0x980c>
   1ad48:	b	1adfc <__assert_fail@plt+0x9820>
   1ad4c:	ldr	r0, [fp, #8]
   1ad50:	cmp	r0, #0
   1ad54:	bne	1ad5c <__assert_fail@plt+0x9780>
   1ad58:	b	1adfc <__assert_fail@plt+0x9820>
   1ad5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad60:	cmp	r0, #0
   1ad64:	bge	1add0 <__assert_fail@plt+0x97f4>
   1ad68:	b	1ad6c <__assert_fail@plt+0x9790>
   1ad6c:	b	1adb4 <__assert_fail@plt+0x97d8>
   1ad70:	b	1adb4 <__assert_fail@plt+0x97d8>
   1ad74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ad78:	cmn	r0, #1
   1ad7c:	bne	1adb4 <__assert_fail@plt+0x97d8>
   1ad80:	b	1ad84 <__assert_fail@plt+0x97a8>
   1ad84:	ldr	r0, [fp, #8]
   1ad88:	add	r0, r0, #0
   1ad8c:	movw	r1, #0
   1ad90:	cmp	r1, r0
   1ad94:	blt	1ade8 <__assert_fail@plt+0x980c>
   1ad98:	b	1adfc <__assert_fail@plt+0x9820>
   1ad9c:	ldr	r0, [fp, #8]
   1ada0:	sub	r0, r0, #1
   1ada4:	mvn	r1, #0
   1ada8:	cmp	r1, r0
   1adac:	blt	1ade8 <__assert_fail@plt+0x980c>
   1adb0:	b	1adfc <__assert_fail@plt+0x9820>
   1adb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adb8:	movw	r1, #0
   1adbc:	sdiv	r0, r1, r0
   1adc0:	ldr	r1, [fp, #8]
   1adc4:	cmp	r0, r1
   1adc8:	blt	1ade8 <__assert_fail@plt+0x980c>
   1adcc:	b	1adfc <__assert_fail@plt+0x9820>
   1add0:	ldr	r0, [fp, #8]
   1add4:	mvn	r1, #0
   1add8:	udiv	r0, r1, r0
   1addc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ade0:	cmp	r0, r1
   1ade4:	bcs	1adfc <__assert_fail@plt+0x9820>
   1ade8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1adec:	ldr	r1, [fp, #8]
   1adf0:	mul	r0, r0, r1
   1adf4:	str	r0, [fp, #-28]	; 0xffffffe4
   1adf8:	b	1b2f8 <__assert_fail@plt+0x9d1c>
   1adfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae00:	ldr	r1, [fp, #8]
   1ae04:	mul	r0, r0, r1
   1ae08:	str	r0, [fp, #-28]	; 0xffffffe4
   1ae0c:	b	1b2fc <__assert_fail@plt+0x9d20>
   1ae10:	b	1ae14 <__assert_fail@plt+0x9838>
   1ae14:	ldr	r0, [fp, #8]
   1ae18:	cmp	r0, #0
   1ae1c:	bge	1afa4 <__assert_fail@plt+0x99c8>
   1ae20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae24:	cmp	r0, #0
   1ae28:	bge	1af10 <__assert_fail@plt+0x9934>
   1ae2c:	b	1ae30 <__assert_fail@plt+0x9854>
   1ae30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ae34:	ldr	r1, [fp, #8]
   1ae38:	asr	r3, r1, #31
   1ae3c:	mvn	r2, #0
   1ae40:	mvn	ip, #-2147483648	; 0x80000000
   1ae44:	str	r0, [sp, #132]	; 0x84
   1ae48:	mov	r0, r2
   1ae4c:	str	r1, [sp, #128]	; 0x80
   1ae50:	mov	r1, ip
   1ae54:	ldr	r2, [sp, #128]	; 0x80
   1ae58:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   1ae5c:	ldr	r2, [sp, #132]	; 0x84
   1ae60:	subs	r0, r2, r0
   1ae64:	rscs	r1, r1, r2, asr #31
   1ae68:	str	r0, [sp, #124]	; 0x7c
   1ae6c:	str	r1, [sp, #120]	; 0x78
   1ae70:	blt	1b084 <__assert_fail@plt+0x9aa8>
   1ae74:	b	1b098 <__assert_fail@plt+0x9abc>
   1ae78:	b	1ae7c <__assert_fail@plt+0x98a0>
   1ae7c:	ldr	r0, [pc, #1188]	; 1b328 <__assert_fail@plt+0x9d4c>
   1ae80:	ldr	r1, [fp, #8]
   1ae84:	cmp	r1, r0
   1ae88:	blt	1aea0 <__assert_fail@plt+0x98c4>
   1ae8c:	b	1aeb4 <__assert_fail@plt+0x98d8>
   1ae90:	ldr	r0, [fp, #8]
   1ae94:	movw	r1, #0
   1ae98:	cmp	r1, r0
   1ae9c:	bge	1aeb4 <__assert_fail@plt+0x98d8>
   1aea0:	mov	r0, #0
   1aea4:	mvn	r1, #0
   1aea8:	str	r1, [sp, #116]	; 0x74
   1aeac:	str	r0, [sp, #112]	; 0x70
   1aeb0:	b	1aee8 <__assert_fail@plt+0x990c>
   1aeb4:	ldr	r0, [fp, #8]
   1aeb8:	rsb	r0, r0, #0
   1aebc:	asr	r3, r0, #31
   1aec0:	mvn	r1, #0
   1aec4:	mvn	r2, #-2147483648	; 0x80000000
   1aec8:	str	r0, [sp, #108]	; 0x6c
   1aecc:	mov	r0, r1
   1aed0:	mov	r1, r2
   1aed4:	ldr	r2, [sp, #108]	; 0x6c
   1aed8:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   1aedc:	str	r0, [sp, #116]	; 0x74
   1aee0:	str	r1, [sp, #112]	; 0x70
   1aee4:	b	1aee8 <__assert_fail@plt+0x990c>
   1aee8:	ldr	r0, [sp, #112]	; 0x70
   1aeec:	ldr	r1, [sp, #116]	; 0x74
   1aef0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1aef4:	mvn	r2, r2
   1aef8:	subs	r1, r2, r1
   1aefc:	rscs	r0, r0, r2, asr #31
   1af00:	str	r1, [sp, #104]	; 0x68
   1af04:	str	r0, [sp, #100]	; 0x64
   1af08:	bge	1b084 <__assert_fail@plt+0x9aa8>
   1af0c:	b	1b098 <__assert_fail@plt+0x9abc>
   1af10:	ldr	r0, [fp, #8]
   1af14:	cmn	r0, #1
   1af18:	bne	1af64 <__assert_fail@plt+0x9988>
   1af1c:	b	1af20 <__assert_fail@plt+0x9944>
   1af20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af24:	mov	r1, #-2147483648	; 0x80000000
   1af28:	add	r1, r1, r0, asr #31
   1af2c:	rsbs	r0, r0, #0
   1af30:	rscs	r1, r1, #0
   1af34:	str	r0, [sp, #96]	; 0x60
   1af38:	str	r1, [sp, #92]	; 0x5c
   1af3c:	blt	1b084 <__assert_fail@plt+0x9aa8>
   1af40:	b	1b098 <__assert_fail@plt+0x9abc>
   1af44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af48:	movw	r1, #0
   1af4c:	cmp	r1, r0
   1af50:	bge	1b098 <__assert_fail@plt+0x9abc>
   1af54:	mov	r0, #0
   1af58:	cmp	r0, #0
   1af5c:	bne	1b084 <__assert_fail@plt+0x9aa8>
   1af60:	b	1b098 <__assert_fail@plt+0x9abc>
   1af64:	ldr	r0, [fp, #8]
   1af68:	asr	r3, r0, #31
   1af6c:	mov	r1, #0
   1af70:	mov	r2, #-2147483648	; 0x80000000
   1af74:	str	r0, [sp, #88]	; 0x58
   1af78:	mov	r0, r1
   1af7c:	mov	r1, r2
   1af80:	ldr	r2, [sp, #88]	; 0x58
   1af84:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   1af88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1af8c:	subs	r0, r0, r2
   1af90:	sbcs	r1, r1, r2, asr #31
   1af94:	str	r0, [sp, #84]	; 0x54
   1af98:	str	r1, [sp, #80]	; 0x50
   1af9c:	blt	1b084 <__assert_fail@plt+0x9aa8>
   1afa0:	b	1b098 <__assert_fail@plt+0x9abc>
   1afa4:	ldr	r0, [fp, #8]
   1afa8:	cmp	r0, #0
   1afac:	bne	1afb4 <__assert_fail@plt+0x99d8>
   1afb0:	b	1b098 <__assert_fail@plt+0x9abc>
   1afb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afb8:	cmp	r0, #0
   1afbc:	bge	1b044 <__assert_fail@plt+0x9a68>
   1afc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1afc4:	cmn	r0, #1
   1afc8:	bne	1b004 <__assert_fail@plt+0x9a28>
   1afcc:	b	1afd0 <__assert_fail@plt+0x99f4>
   1afd0:	ldr	r0, [fp, #8]
   1afd4:	mov	r1, #-2147483648	; 0x80000000
   1afd8:	add	r1, r1, r0, asr #31
   1afdc:	rsbs	r0, r0, #0
   1afe0:	rscs	r1, r1, #0
   1afe4:	str	r0, [sp, #76]	; 0x4c
   1afe8:	str	r1, [sp, #72]	; 0x48
   1afec:	blt	1b084 <__assert_fail@plt+0x9aa8>
   1aff0:	b	1b098 <__assert_fail@plt+0x9abc>
   1aff4:	mov	r0, #0
   1aff8:	cmp	r0, #0
   1affc:	bne	1b084 <__assert_fail@plt+0x9aa8>
   1b000:	b	1b098 <__assert_fail@plt+0x9abc>
   1b004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b008:	asr	r3, r0, #31
   1b00c:	mov	r1, #0
   1b010:	mov	r2, #-2147483648	; 0x80000000
   1b014:	str	r0, [sp, #68]	; 0x44
   1b018:	mov	r0, r1
   1b01c:	mov	r1, r2
   1b020:	ldr	r2, [sp, #68]	; 0x44
   1b024:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   1b028:	ldr	r2, [fp, #8]
   1b02c:	subs	r0, r0, r2
   1b030:	sbcs	r1, r1, r2, asr #31
   1b034:	str	r0, [sp, #64]	; 0x40
   1b038:	str	r1, [sp, #60]	; 0x3c
   1b03c:	blt	1b084 <__assert_fail@plt+0x9aa8>
   1b040:	b	1b098 <__assert_fail@plt+0x9abc>
   1b044:	ldr	r0, [fp, #8]
   1b048:	asr	r3, r0, #31
   1b04c:	mvn	r1, #0
   1b050:	mvn	r2, #-2147483648	; 0x80000000
   1b054:	str	r0, [sp, #56]	; 0x38
   1b058:	mov	r0, r1
   1b05c:	mov	r1, r2
   1b060:	ldr	r2, [sp, #56]	; 0x38
   1b064:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   1b068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b06c:	subs	r0, r0, r2
   1b070:	sbcs	r1, r1, r2, asr #31
   1b074:	str	r0, [sp, #52]	; 0x34
   1b078:	str	r1, [sp, #48]	; 0x30
   1b07c:	bge	1b098 <__assert_fail@plt+0x9abc>
   1b080:	b	1b084 <__assert_fail@plt+0x9aa8>
   1b084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b088:	ldr	r1, [fp, #8]
   1b08c:	mul	r0, r0, r1
   1b090:	str	r0, [fp, #-28]	; 0xffffffe4
   1b094:	b	1b2f8 <__assert_fail@plt+0x9d1c>
   1b098:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b09c:	ldr	r1, [fp, #8]
   1b0a0:	mul	r0, r0, r1
   1b0a4:	str	r0, [fp, #-28]	; 0xffffffe4
   1b0a8:	b	1b2fc <__assert_fail@plt+0x9d20>
   1b0ac:	ldr	r0, [fp, #8]
   1b0b0:	cmp	r0, #0
   1b0b4:	bge	1b214 <__assert_fail@plt+0x9c38>
   1b0b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0bc:	cmp	r0, #0
   1b0c0:	bge	1b19c <__assert_fail@plt+0x9bc0>
   1b0c4:	b	1b10c <__assert_fail@plt+0x9b30>
   1b0c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0cc:	ldr	r1, [fp, #8]
   1b0d0:	asr	r3, r1, #31
   1b0d4:	mvn	r2, #0
   1b0d8:	str	r0, [sp, #44]	; 0x2c
   1b0dc:	mov	r0, r2
   1b0e0:	str	r1, [sp, #40]	; 0x28
   1b0e4:	mov	r1, r2
   1b0e8:	ldr	r2, [sp, #40]	; 0x28
   1b0ec:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   1b0f0:	ldr	r2, [sp, #44]	; 0x2c
   1b0f4:	subs	r0, r2, r0
   1b0f8:	rscs	r1, r1, r2, asr #31
   1b0fc:	str	r0, [sp, #36]	; 0x24
   1b100:	str	r1, [sp, #32]
   1b104:	bcc	1b2d0 <__assert_fail@plt+0x9cf4>
   1b108:	b	1b2e4 <__assert_fail@plt+0x9d08>
   1b10c:	b	1b110 <__assert_fail@plt+0x9b34>
   1b110:	ldr	r0, [pc, #528]	; 1b328 <__assert_fail@plt+0x9d4c>
   1b114:	ldr	r1, [fp, #8]
   1b118:	cmp	r1, r0
   1b11c:	blt	1b134 <__assert_fail@plt+0x9b58>
   1b120:	b	1b148 <__assert_fail@plt+0x9b6c>
   1b124:	ldr	r0, [fp, #8]
   1b128:	movw	r1, #0
   1b12c:	cmp	r1, r0
   1b130:	bge	1b148 <__assert_fail@plt+0x9b6c>
   1b134:	mov	r0, #1
   1b138:	mvn	r1, #0
   1b13c:	str	r1, [sp, #28]
   1b140:	str	r0, [sp, #24]
   1b144:	b	1b174 <__assert_fail@plt+0x9b98>
   1b148:	ldr	r0, [fp, #8]
   1b14c:	rsb	r0, r0, #0
   1b150:	asr	r3, r0, #31
   1b154:	mvn	r1, #0
   1b158:	str	r0, [sp, #20]
   1b15c:	mov	r0, r1
   1b160:	ldr	r2, [sp, #20]
   1b164:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   1b168:	str	r0, [sp, #28]
   1b16c:	str	r1, [sp, #24]
   1b170:	b	1b174 <__assert_fail@plt+0x9b98>
   1b174:	ldr	r0, [sp, #24]
   1b178:	ldr	r1, [sp, #28]
   1b17c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b180:	mvn	r2, r2
   1b184:	subs	r1, r2, r1
   1b188:	rscs	r0, r0, r2, asr #31
   1b18c:	str	r1, [sp, #16]
   1b190:	str	r0, [sp, #12]
   1b194:	bcs	1b2d0 <__assert_fail@plt+0x9cf4>
   1b198:	b	1b2e4 <__assert_fail@plt+0x9d08>
   1b19c:	b	1b1a0 <__assert_fail@plt+0x9bc4>
   1b1a0:	b	1b1f8 <__assert_fail@plt+0x9c1c>
   1b1a4:	b	1b1f8 <__assert_fail@plt+0x9c1c>
   1b1a8:	ldr	r0, [fp, #8]
   1b1ac:	cmn	r0, #1
   1b1b0:	bne	1b1f8 <__assert_fail@plt+0x9c1c>
   1b1b4:	b	1b1b8 <__assert_fail@plt+0x9bdc>
   1b1b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1bc:	add	r0, r0, #0
   1b1c0:	movw	r1, #0
   1b1c4:	cmp	r1, r0
   1b1c8:	blt	1b2d0 <__assert_fail@plt+0x9cf4>
   1b1cc:	b	1b2e4 <__assert_fail@plt+0x9d08>
   1b1d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1d4:	movw	r1, #0
   1b1d8:	cmp	r1, r0
   1b1dc:	bge	1b2e4 <__assert_fail@plt+0x9d08>
   1b1e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1e4:	sub	r0, r0, #1
   1b1e8:	mvn	r1, #0
   1b1ec:	cmp	r1, r0
   1b1f0:	blt	1b2d0 <__assert_fail@plt+0x9cf4>
   1b1f4:	b	1b2e4 <__assert_fail@plt+0x9d08>
   1b1f8:	ldr	r0, [fp, #8]
   1b1fc:	movw	r1, #0
   1b200:	sdiv	r0, r1, r0
   1b204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b208:	cmp	r0, r1
   1b20c:	blt	1b2d0 <__assert_fail@plt+0x9cf4>
   1b210:	b	1b2e4 <__assert_fail@plt+0x9d08>
   1b214:	ldr	r0, [fp, #8]
   1b218:	cmp	r0, #0
   1b21c:	bne	1b224 <__assert_fail@plt+0x9c48>
   1b220:	b	1b2e4 <__assert_fail@plt+0x9d08>
   1b224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b228:	cmp	r0, #0
   1b22c:	bge	1b298 <__assert_fail@plt+0x9cbc>
   1b230:	b	1b234 <__assert_fail@plt+0x9c58>
   1b234:	b	1b27c <__assert_fail@plt+0x9ca0>
   1b238:	b	1b27c <__assert_fail@plt+0x9ca0>
   1b23c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b240:	cmn	r0, #1
   1b244:	bne	1b27c <__assert_fail@plt+0x9ca0>
   1b248:	b	1b24c <__assert_fail@plt+0x9c70>
   1b24c:	ldr	r0, [fp, #8]
   1b250:	add	r0, r0, #0
   1b254:	movw	r1, #0
   1b258:	cmp	r1, r0
   1b25c:	blt	1b2d0 <__assert_fail@plt+0x9cf4>
   1b260:	b	1b2e4 <__assert_fail@plt+0x9d08>
   1b264:	ldr	r0, [fp, #8]
   1b268:	sub	r0, r0, #1
   1b26c:	mvn	r1, #0
   1b270:	cmp	r1, r0
   1b274:	blt	1b2d0 <__assert_fail@plt+0x9cf4>
   1b278:	b	1b2e4 <__assert_fail@plt+0x9d08>
   1b27c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b280:	movw	r1, #0
   1b284:	sdiv	r0, r1, r0
   1b288:	ldr	r1, [fp, #8]
   1b28c:	cmp	r0, r1
   1b290:	blt	1b2d0 <__assert_fail@plt+0x9cf4>
   1b294:	b	1b2e4 <__assert_fail@plt+0x9d08>
   1b298:	ldr	r0, [fp, #8]
   1b29c:	asr	r3, r0, #31
   1b2a0:	mvn	r1, #0
   1b2a4:	str	r0, [sp, #8]
   1b2a8:	mov	r0, r1
   1b2ac:	ldr	r2, [sp, #8]
   1b2b0:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   1b2b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b2b8:	subs	r0, r0, r2
   1b2bc:	sbcs	r1, r1, r2, asr #31
   1b2c0:	str	r0, [sp, #4]
   1b2c4:	str	r1, [sp]
   1b2c8:	bcs	1b2e4 <__assert_fail@plt+0x9d08>
   1b2cc:	b	1b2d0 <__assert_fail@plt+0x9cf4>
   1b2d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2d4:	ldr	r1, [fp, #8]
   1b2d8:	mul	r0, r0, r1
   1b2dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1b2e0:	b	1b2f8 <__assert_fail@plt+0x9d1c>
   1b2e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b2e8:	ldr	r1, [fp, #8]
   1b2ec:	mul	r0, r0, r1
   1b2f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1b2f4:	b	1b2fc <__assert_fail@plt+0x9d20>
   1b2f8:	bl	1b4d4 <__assert_fail@plt+0x9ef8>
   1b2fc:	ldr	r0, [fp, #-4]
   1b300:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b304:	bl	18790 <__assert_fail@plt+0x71b4>
   1b308:	str	r0, [fp, #-4]
   1b30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b310:	ldr	r1, [fp, #-8]
   1b314:	str	r0, [r1]
   1b318:	ldr	r0, [fp, #-4]
   1b31c:	mov	sp, fp
   1b320:	pop	{fp, pc}
   1b324:	svcvc	0x00ffffff
   1b328:	andhi	r0, r0, r1
   1b32c:	andhi	r0, r0, r0
   1b330:			; <UNDEFINED> instruction: 0xffff8000
   1b334:	push	{fp, lr}
   1b338:	mov	fp, sp
   1b33c:	sub	sp, sp, #8
   1b340:	str	r0, [sp, #4]
   1b344:	ldr	r0, [sp, #4]
   1b348:	movw	r1, #1
   1b34c:	bl	1b358 <__assert_fail@plt+0x9d7c>
   1b350:	mov	sp, fp
   1b354:	pop	{fp, pc}
   1b358:	push	{fp, lr}
   1b35c:	mov	fp, sp
   1b360:	sub	sp, sp, #8
   1b364:	str	r0, [sp, #4]
   1b368:	str	r1, [sp]
   1b36c:	ldr	r0, [sp, #4]
   1b370:	ldr	r1, [sp]
   1b374:	bl	1b55c <__assert_fail@plt+0x9f80>
   1b378:	bl	1871c <__assert_fail@plt+0x7140>
   1b37c:	mov	sp, fp
   1b380:	pop	{fp, pc}
   1b384:	push	{fp, lr}
   1b388:	mov	fp, sp
   1b38c:	sub	sp, sp, #8
   1b390:	str	r0, [sp, #4]
   1b394:	ldr	r0, [sp, #4]
   1b398:	movw	r1, #1
   1b39c:	bl	1b3a8 <__assert_fail@plt+0x9dcc>
   1b3a0:	mov	sp, fp
   1b3a4:	pop	{fp, pc}
   1b3a8:	push	{fp, lr}
   1b3ac:	mov	fp, sp
   1b3b0:	sub	sp, sp, #8
   1b3b4:	str	r0, [sp, #4]
   1b3b8:	str	r1, [sp]
   1b3bc:	ldr	r0, [sp, #4]
   1b3c0:	ldr	r1, [sp]
   1b3c4:	bl	1ba34 <__assert_fail@plt+0xa458>
   1b3c8:	bl	1871c <__assert_fail@plt+0x7140>
   1b3cc:	mov	sp, fp
   1b3d0:	pop	{fp, pc}
   1b3d4:	push	{fp, lr}
   1b3d8:	mov	fp, sp
   1b3dc:	sub	sp, sp, #16
   1b3e0:	str	r0, [fp, #-4]
   1b3e4:	str	r1, [sp, #8]
   1b3e8:	ldr	r0, [sp, #8]
   1b3ec:	bl	186f8 <__assert_fail@plt+0x711c>
   1b3f0:	ldr	r1, [fp, #-4]
   1b3f4:	ldr	r2, [sp, #8]
   1b3f8:	str	r0, [sp, #4]
   1b3fc:	bl	11354 <memcpy@plt>
   1b400:	ldr	r0, [sp, #4]
   1b404:	mov	sp, fp
   1b408:	pop	{fp, pc}
   1b40c:	push	{fp, lr}
   1b410:	mov	fp, sp
   1b414:	sub	sp, sp, #16
   1b418:	str	r0, [fp, #-4]
   1b41c:	str	r1, [sp, #8]
   1b420:	ldr	r0, [sp, #8]
   1b424:	bl	1874c <__assert_fail@plt+0x7170>
   1b428:	ldr	r1, [fp, #-4]
   1b42c:	ldr	r2, [sp, #8]
   1b430:	str	r0, [sp, #4]
   1b434:	bl	11354 <memcpy@plt>
   1b438:	ldr	r0, [sp, #4]
   1b43c:	mov	sp, fp
   1b440:	pop	{fp, pc}
   1b444:	push	{fp, lr}
   1b448:	mov	fp, sp
   1b44c:	sub	sp, sp, #16
   1b450:	str	r0, [fp, #-4]
   1b454:	str	r1, [sp, #8]
   1b458:	ldr	r0, [sp, #8]
   1b45c:	add	r0, r0, #1
   1b460:	bl	1874c <__assert_fail@plt+0x7170>
   1b464:	str	r0, [sp, #4]
   1b468:	ldr	r0, [sp, #4]
   1b46c:	ldr	r1, [sp, #8]
   1b470:	add	r0, r0, r1
   1b474:	movw	r1, #0
   1b478:	strb	r1, [r0]
   1b47c:	ldr	r0, [sp, #4]
   1b480:	ldr	r1, [fp, #-4]
   1b484:	ldr	r2, [sp, #8]
   1b488:	str	r0, [sp]
   1b48c:	bl	11354 <memcpy@plt>
   1b490:	ldr	r0, [sp]
   1b494:	mov	sp, fp
   1b498:	pop	{fp, pc}
   1b49c:	push	{fp, lr}
   1b4a0:	mov	fp, sp
   1b4a4:	sub	sp, sp, #8
   1b4a8:	str	r0, [sp, #4]
   1b4ac:	ldr	r0, [sp, #4]
   1b4b0:	ldr	r1, [sp, #4]
   1b4b4:	str	r0, [sp]
   1b4b8:	mov	r0, r1
   1b4bc:	bl	114b0 <strlen@plt>
   1b4c0:	add	r1, r0, #1
   1b4c4:	ldr	r0, [sp]
   1b4c8:	bl	1b3d4 <__assert_fail@plt+0x9df8>
   1b4cc:	mov	sp, fp
   1b4d0:	pop	{fp, pc}
   1b4d4:	push	{fp, lr}
   1b4d8:	mov	fp, sp
   1b4dc:	sub	sp, sp, #8
   1b4e0:	movw	r0, #304	; 0x130
   1b4e4:	movt	r0, #3
   1b4e8:	ldr	r0, [r0]
   1b4ec:	movw	r1, #61876	; 0xf1b4
   1b4f0:	movt	r1, #1
   1b4f4:	str	r0, [sp, #4]
   1b4f8:	mov	r0, r1
   1b4fc:	bl	114a4 <gettext@plt>
   1b500:	ldr	r1, [sp, #4]
   1b504:	str	r0, [sp]
   1b508:	mov	r0, r1
   1b50c:	movw	r1, #0
   1b510:	movw	r2, #60792	; 0xed78
   1b514:	movt	r2, #1
   1b518:	ldr	r3, [sp]
   1b51c:	bl	11408 <error@plt>
   1b520:	bl	115b8 <abort@plt>
   1b524:	bx	lr
   1b528:	push	{fp, lr}
   1b52c:	mov	fp, sp
   1b530:	sub	sp, sp, #8
   1b534:	str	r0, [sp, #4]
   1b538:	str	r1, [sp]
   1b53c:	ldr	r0, [sp, #4]
   1b540:	ldr	r1, [sp]
   1b544:	bl	1b724 <__assert_fail@plt+0xa148>
   1b548:	cmp	r0, #0
   1b54c:	bge	1b554 <__assert_fail@plt+0x9f78>
   1b550:	bl	1b524 <__assert_fail@plt+0x9f48>
   1b554:	mov	sp, fp
   1b558:	pop	{fp, pc}
   1b55c:	push	{fp, lr}
   1b560:	mov	fp, sp
   1b564:	sub	sp, sp, #16
   1b568:	str	r0, [sp, #8]
   1b56c:	str	r1, [sp, #4]
   1b570:	ldr	r0, [sp, #8]
   1b574:	cmp	r0, #0
   1b578:	beq	1b588 <__assert_fail@plt+0x9fac>
   1b57c:	ldr	r0, [sp, #4]
   1b580:	cmp	r0, #0
   1b584:	bne	1b594 <__assert_fail@plt+0x9fb8>
   1b588:	movw	r0, #1
   1b58c:	str	r0, [sp, #4]
   1b590:	str	r0, [sp, #8]
   1b594:	ldr	r0, [sp, #4]
   1b598:	cmp	r0, #0
   1b59c:	beq	1b5d0 <__assert_fail@plt+0x9ff4>
   1b5a0:	ldr	r0, [pc, #76]	; 1b5f4 <__assert_fail@plt+0xa018>
   1b5a4:	ldr	r1, [sp, #4]
   1b5a8:	udiv	r0, r0, r1
   1b5ac:	ldr	r1, [sp, #8]
   1b5b0:	cmp	r0, r1
   1b5b4:	bcs	1b5d0 <__assert_fail@plt+0x9ff4>
   1b5b8:	bl	114e0 <__errno_location@plt>
   1b5bc:	movw	lr, #12
   1b5c0:	str	lr, [r0]
   1b5c4:	movw	r0, #0
   1b5c8:	str	r0, [fp, #-4]
   1b5cc:	b	1b5e8 <__assert_fail@plt+0xa00c>
   1b5d0:	ldr	r0, [sp, #8]
   1b5d4:	ldr	r1, [sp, #4]
   1b5d8:	bl	112b8 <calloc@plt>
   1b5dc:	str	r0, [sp]
   1b5e0:	ldr	r0, [sp]
   1b5e4:	str	r0, [fp, #-4]
   1b5e8:	ldr	r0, [fp, #-4]
   1b5ec:	mov	sp, fp
   1b5f0:	pop	{fp, pc}
   1b5f4:	svcvc	0x00ffffff
   1b5f8:	push	{fp, lr}
   1b5fc:	mov	fp, sp
   1b600:	sub	sp, sp, #16
   1b604:	str	r0, [sp, #8]
   1b608:	ldr	r0, [sp, #8]
   1b60c:	cmp	r0, #0
   1b610:	bne	1b61c <__assert_fail@plt+0xa040>
   1b614:	movw	r0, #1
   1b618:	str	r0, [sp, #8]
   1b61c:	ldr	r0, [pc, #64]	; 1b664 <__assert_fail@plt+0xa088>
   1b620:	ldr	r1, [sp, #8]
   1b624:	cmp	r0, r1
   1b628:	bcs	1b644 <__assert_fail@plt+0xa068>
   1b62c:	bl	114e0 <__errno_location@plt>
   1b630:	movw	lr, #12
   1b634:	str	lr, [r0]
   1b638:	movw	r0, #0
   1b63c:	str	r0, [fp, #-4]
   1b640:	b	1b658 <__assert_fail@plt+0xa07c>
   1b644:	ldr	r0, [sp, #8]
   1b648:	bl	11438 <malloc@plt>
   1b64c:	str	r0, [sp, #4]
   1b650:	ldr	r0, [sp, #4]
   1b654:	str	r0, [fp, #-4]
   1b658:	ldr	r0, [fp, #-4]
   1b65c:	mov	sp, fp
   1b660:	pop	{fp, pc}
   1b664:	svcvc	0x00ffffff
   1b668:	push	{fp, lr}
   1b66c:	mov	fp, sp
   1b670:	sub	sp, sp, #16
   1b674:	str	r0, [sp, #8]
   1b678:	str	r1, [sp, #4]
   1b67c:	ldr	r0, [sp, #8]
   1b680:	movw	r1, #0
   1b684:	cmp	r0, r1
   1b688:	bne	1b69c <__assert_fail@plt+0xa0c0>
   1b68c:	ldr	r0, [sp, #4]
   1b690:	bl	1b5f8 <__assert_fail@plt+0xa01c>
   1b694:	str	r0, [fp, #-4]
   1b698:	b	1b6fc <__assert_fail@plt+0xa120>
   1b69c:	ldr	r0, [sp, #4]
   1b6a0:	cmp	r0, #0
   1b6a4:	bne	1b6bc <__assert_fail@plt+0xa0e0>
   1b6a8:	ldr	r0, [sp, #8]
   1b6ac:	bl	14794 <__assert_fail@plt+0x31b8>
   1b6b0:	movw	r0, #0
   1b6b4:	str	r0, [fp, #-4]
   1b6b8:	b	1b6fc <__assert_fail@plt+0xa120>
   1b6bc:	ldr	r0, [pc, #68]	; 1b708 <__assert_fail@plt+0xa12c>
   1b6c0:	ldr	r1, [sp, #4]
   1b6c4:	cmp	r0, r1
   1b6c8:	bcs	1b6e4 <__assert_fail@plt+0xa108>
   1b6cc:	bl	114e0 <__errno_location@plt>
   1b6d0:	movw	lr, #12
   1b6d4:	str	lr, [r0]
   1b6d8:	movw	r0, #0
   1b6dc:	str	r0, [fp, #-4]
   1b6e0:	b	1b6fc <__assert_fail@plt+0xa120>
   1b6e4:	ldr	r0, [sp, #8]
   1b6e8:	ldr	r1, [sp, #4]
   1b6ec:	bl	11384 <realloc@plt>
   1b6f0:	str	r0, [sp]
   1b6f4:	ldr	r0, [sp]
   1b6f8:	str	r0, [fp, #-4]
   1b6fc:	ldr	r0, [fp, #-4]
   1b700:	mov	sp, fp
   1b704:	pop	{fp, pc}
   1b708:	svcvc	0x00ffffff
   1b70c:	sub	sp, sp, #8
   1b710:	str	r0, [sp, #4]
   1b714:	str	r1, [sp]
   1b718:	movw	r0, #0
   1b71c:	add	sp, sp, #8
   1b720:	bx	lr
   1b724:	push	{fp, lr}
   1b728:	mov	fp, sp
   1b72c:	sub	sp, sp, #8
   1b730:	str	r0, [sp, #4]
   1b734:	str	r1, [sp]
   1b738:	ldr	r0, [sp, #4]
   1b73c:	ldr	r1, [sp]
   1b740:	bl	1b70c <__assert_fail@plt+0xa130>
   1b744:	mov	sp, fp
   1b748:	pop	{fp, pc}
   1b74c:	push	{fp, lr}
   1b750:	mov	fp, sp
   1b754:	sub	sp, sp, #24
   1b758:	str	r0, [fp, #-8]
   1b75c:	str	r1, [sp, #12]
   1b760:	ldr	r0, [fp, #-8]
   1b764:	str	r0, [sp, #8]
   1b768:	ldr	r0, [sp, #12]
   1b76c:	str	r0, [sp, #4]
   1b770:	ldr	r0, [sp, #8]
   1b774:	ldr	r1, [sp, #4]
   1b778:	cmp	r0, r1
   1b77c:	bne	1b78c <__assert_fail@plt+0xa1b0>
   1b780:	movw	r0, #0
   1b784:	str	r0, [fp, #-4]
   1b788:	b	1b7f8 <__assert_fail@plt+0xa21c>
   1b78c:	b	1b790 <__assert_fail@plt+0xa1b4>
   1b790:	ldr	r0, [sp, #8]
   1b794:	ldrb	r0, [r0]
   1b798:	bl	1de00 <_obstack_memory_used@@Base+0x1b68>
   1b79c:	strb	r0, [sp, #3]
   1b7a0:	ldr	r0, [sp, #4]
   1b7a4:	ldrb	r0, [r0]
   1b7a8:	bl	1de00 <_obstack_memory_used@@Base+0x1b68>
   1b7ac:	strb	r0, [sp, #2]
   1b7b0:	ldrb	r0, [sp, #3]
   1b7b4:	cmp	r0, #0
   1b7b8:	bne	1b7c0 <__assert_fail@plt+0xa1e4>
   1b7bc:	b	1b7e8 <__assert_fail@plt+0xa20c>
   1b7c0:	ldr	r0, [sp, #8]
   1b7c4:	add	r0, r0, #1
   1b7c8:	str	r0, [sp, #8]
   1b7cc:	ldr	r0, [sp, #4]
   1b7d0:	add	r0, r0, #1
   1b7d4:	str	r0, [sp, #4]
   1b7d8:	ldrb	r0, [sp, #3]
   1b7dc:	ldrb	r1, [sp, #2]
   1b7e0:	cmp	r0, r1
   1b7e4:	beq	1b790 <__assert_fail@plt+0xa1b4>
   1b7e8:	ldrb	r0, [sp, #3]
   1b7ec:	ldrb	r1, [sp, #2]
   1b7f0:	sub	r0, r0, r1
   1b7f4:	str	r0, [fp, #-4]
   1b7f8:	ldr	r0, [fp, #-4]
   1b7fc:	mov	sp, fp
   1b800:	pop	{fp, pc}
   1b804:	push	{fp, lr}
   1b808:	mov	fp, sp
   1b80c:	sub	sp, sp, #16
   1b810:	str	r0, [sp, #8]
   1b814:	ldr	r0, [sp, #8]
   1b818:	bl	113e4 <__fpending@plt>
   1b81c:	cmp	r0, #0
   1b820:	movw	r0, #0
   1b824:	movne	r0, #1
   1b828:	and	r0, r0, #1
   1b82c:	strb	r0, [sp, #7]
   1b830:	ldr	r0, [sp, #8]
   1b834:	bl	113f0 <ferror_unlocked@plt>
   1b838:	cmp	r0, #0
   1b83c:	movw	r0, #0
   1b840:	movne	r0, #1
   1b844:	and	r0, r0, #1
   1b848:	strb	r0, [sp, #6]
   1b84c:	ldr	r0, [sp, #8]
   1b850:	bl	145f8 <__assert_fail@plt+0x301c>
   1b854:	cmp	r0, #0
   1b858:	movw	r0, #0
   1b85c:	movne	r0, #1
   1b860:	and	r0, r0, #1
   1b864:	strb	r0, [sp, #5]
   1b868:	ldrb	r0, [sp, #6]
   1b86c:	tst	r0, #1
   1b870:	bne	1b89c <__assert_fail@plt+0xa2c0>
   1b874:	ldrb	r0, [sp, #5]
   1b878:	tst	r0, #1
   1b87c:	beq	1b8c0 <__assert_fail@plt+0xa2e4>
   1b880:	ldrb	r0, [sp, #7]
   1b884:	tst	r0, #1
   1b888:	bne	1b89c <__assert_fail@plt+0xa2c0>
   1b88c:	bl	114e0 <__errno_location@plt>
   1b890:	ldr	r0, [r0]
   1b894:	cmp	r0, #9
   1b898:	beq	1b8c0 <__assert_fail@plt+0xa2e4>
   1b89c:	ldrb	r0, [sp, #5]
   1b8a0:	tst	r0, #1
   1b8a4:	bne	1b8b4 <__assert_fail@plt+0xa2d8>
   1b8a8:	bl	114e0 <__errno_location@plt>
   1b8ac:	movw	lr, #0
   1b8b0:	str	lr, [r0]
   1b8b4:	mvn	r0, #0
   1b8b8:	str	r0, [fp, #-4]
   1b8bc:	b	1b8c8 <__assert_fail@plt+0xa2ec>
   1b8c0:	movw	r0, #0
   1b8c4:	str	r0, [fp, #-4]
   1b8c8:	ldr	r0, [fp, #-4]
   1b8cc:	mov	sp, fp
   1b8d0:	pop	{fp, pc}
   1b8d4:	push	{r4, r5, fp, lr}
   1b8d8:	add	fp, sp, #8
   1b8dc:	sub	sp, sp, #272	; 0x110
   1b8e0:	add	r1, sp, #7
   1b8e4:	str	r0, [fp, #-16]
   1b8e8:	ldr	r0, [fp, #-16]
   1b8ec:	movw	r2, #257	; 0x101
   1b8f0:	bl	1d6ec <_obstack_memory_used@@Base+0x1454>
   1b8f4:	cmp	r0, #0
   1b8f8:	beq	1b90c <__assert_fail@plt+0xa330>
   1b8fc:	movw	r0, #0
   1b900:	and	r0, r0, #1
   1b904:	strb	r0, [fp, #-9]
   1b908:	b	1b960 <__assert_fail@plt+0xa384>
   1b90c:	add	r0, sp, #7
   1b910:	movw	r1, #61893	; 0xf1c5
   1b914:	movt	r1, #1
   1b918:	bl	112dc <strcmp@plt>
   1b91c:	cmp	r0, #0
   1b920:	movw	r0, #1
   1b924:	str	r0, [sp]
   1b928:	beq	1b94c <__assert_fail@plt+0xa370>
   1b92c:	add	r0, sp, #7
   1b930:	movw	r1, #61895	; 0xf1c7
   1b934:	movt	r1, #1
   1b938:	bl	112dc <strcmp@plt>
   1b93c:	cmp	r0, #0
   1b940:	movw	r0, #0
   1b944:	moveq	r0, #1
   1b948:	str	r0, [sp]
   1b94c:	ldr	r0, [sp]
   1b950:	mvn	r1, #0
   1b954:	eor	r0, r0, r1
   1b958:	and	r0, r0, #1
   1b95c:	strb	r0, [fp, #-9]
   1b960:	ldrb	r0, [fp, #-9]
   1b964:	and	r0, r0, #1
   1b968:	sub	sp, fp, #8
   1b96c:	pop	{r4, r5, fp, pc}
   1b970:	push	{fp, lr}
   1b974:	mov	fp, sp
   1b978:	bl	114e0 <__errno_location@plt>
   1b97c:	movw	lr, #12
   1b980:	str	lr, [r0]
   1b984:	movw	r0, #0
   1b988:	pop	{fp, pc}
   1b98c:	push	{fp, lr}
   1b990:	mov	fp, sp
   1b994:	sub	sp, sp, #8
   1b998:	str	r0, [sp, #4]
   1b99c:	ldr	r0, [sp, #4]
   1b9a0:	cmn	r0, #1
   1b9a4:	bhi	1b9b8 <__assert_fail@plt+0xa3dc>
   1b9a8:	ldr	r0, [sp, #4]
   1b9ac:	bl	1b5f8 <__assert_fail@plt+0xa01c>
   1b9b0:	str	r0, [sp]
   1b9b4:	b	1b9c0 <__assert_fail@plt+0xa3e4>
   1b9b8:	bl	1b970 <__assert_fail@plt+0xa394>
   1b9bc:	str	r0, [sp]
   1b9c0:	ldr	r0, [sp]
   1b9c4:	mov	sp, fp
   1b9c8:	pop	{fp, pc}
   1b9cc:	push	{fp, lr}
   1b9d0:	mov	fp, sp
   1b9d4:	sub	sp, sp, #16
   1b9d8:	str	r0, [fp, #-4]
   1b9dc:	str	r1, [sp, #8]
   1b9e0:	ldr	r0, [sp, #8]
   1b9e4:	cmn	r0, #1
   1b9e8:	bhi	1ba20 <__assert_fail@plt+0xa444>
   1b9ec:	ldr	r0, [fp, #-4]
   1b9f0:	ldr	r1, [sp, #8]
   1b9f4:	ldr	r2, [sp, #8]
   1b9f8:	cmp	r2, #0
   1b9fc:	movw	r2, #0
   1ba00:	movne	r2, #1
   1ba04:	mvn	r3, #0
   1ba08:	eor	r2, r2, r3
   1ba0c:	and	r2, r2, #1
   1ba10:	orr	r1, r1, r2
   1ba14:	bl	1b668 <__assert_fail@plt+0xa08c>
   1ba18:	str	r0, [sp, #4]
   1ba1c:	b	1ba28 <__assert_fail@plt+0xa44c>
   1ba20:	bl	1b970 <__assert_fail@plt+0xa394>
   1ba24:	str	r0, [sp, #4]
   1ba28:	ldr	r0, [sp, #4]
   1ba2c:	mov	sp, fp
   1ba30:	pop	{fp, pc}
   1ba34:	push	{fp, lr}
   1ba38:	mov	fp, sp
   1ba3c:	sub	sp, sp, #16
   1ba40:	str	r0, [sp, #8]
   1ba44:	str	r1, [sp, #4]
   1ba48:	ldr	r0, [sp, #8]
   1ba4c:	mvn	r1, #0
   1ba50:	cmp	r1, r0
   1ba54:	bcs	1ba78 <__assert_fail@plt+0xa49c>
   1ba58:	ldr	r0, [sp, #4]
   1ba5c:	cmp	r0, #0
   1ba60:	beq	1ba70 <__assert_fail@plt+0xa494>
   1ba64:	bl	1b970 <__assert_fail@plt+0xa394>
   1ba68:	str	r0, [fp, #-4]
   1ba6c:	b	1bab8 <__assert_fail@plt+0xa4dc>
   1ba70:	movw	r0, #0
   1ba74:	str	r0, [sp, #8]
   1ba78:	ldr	r0, [sp, #4]
   1ba7c:	mvn	r1, #0
   1ba80:	cmp	r1, r0
   1ba84:	bcs	1baa8 <__assert_fail@plt+0xa4cc>
   1ba88:	ldr	r0, [sp, #8]
   1ba8c:	cmp	r0, #0
   1ba90:	beq	1baa0 <__assert_fail@plt+0xa4c4>
   1ba94:	bl	1b970 <__assert_fail@plt+0xa394>
   1ba98:	str	r0, [fp, #-4]
   1ba9c:	b	1bab8 <__assert_fail@plt+0xa4dc>
   1baa0:	movw	r0, #0
   1baa4:	str	r0, [sp, #4]
   1baa8:	ldr	r0, [sp, #8]
   1baac:	ldr	r1, [sp, #4]
   1bab0:	bl	1b55c <__assert_fail@plt+0x9f80>
   1bab4:	str	r0, [fp, #-4]
   1bab8:	ldr	r0, [fp, #-4]
   1babc:	mov	sp, fp
   1bac0:	pop	{fp, pc}
   1bac4:	push	{fp, lr}
   1bac8:	mov	fp, sp
   1bacc:	sub	sp, sp, #16
   1bad0:	str	r0, [fp, #-4]
   1bad4:	str	r1, [sp, #8]
   1bad8:	str	r2, [sp, #4]
   1badc:	ldr	r0, [sp, #8]
   1bae0:	cmp	r0, #0
   1bae4:	beq	1baf4 <__assert_fail@plt+0xa518>
   1bae8:	ldr	r0, [sp, #4]
   1baec:	cmp	r0, #0
   1baf0:	bne	1bb00 <__assert_fail@plt+0xa524>
   1baf4:	movw	r0, #1
   1baf8:	str	r0, [sp, #4]
   1bafc:	str	r0, [sp, #8]
   1bb00:	ldr	r0, [sp, #8]
   1bb04:	cmn	r0, #1
   1bb08:	bhi	1bb30 <__assert_fail@plt+0xa554>
   1bb0c:	ldr	r0, [sp, #4]
   1bb10:	cmn	r0, #1
   1bb14:	bhi	1bb30 <__assert_fail@plt+0xa554>
   1bb18:	ldr	r0, [fp, #-4]
   1bb1c:	ldr	r1, [sp, #8]
   1bb20:	ldr	r2, [sp, #4]
   1bb24:	bl	1c35c <_obstack_memory_used@@Base+0xc4>
   1bb28:	str	r0, [sp]
   1bb2c:	b	1bb38 <__assert_fail@plt+0xa55c>
   1bb30:	bl	1b970 <__assert_fail@plt+0xa394>
   1bb34:	str	r0, [sp]
   1bb38:	ldr	r0, [sp]
   1bb3c:	mov	sp, fp
   1bb40:	pop	{fp, pc}
   1bb44:	push	{fp, lr}
   1bb48:	mov	fp, sp
   1bb4c:	sub	sp, sp, #8
   1bb50:	movw	r0, #14
   1bb54:	bl	11564 <nl_langinfo@plt>
   1bb58:	str	r0, [sp, #4]
   1bb5c:	ldr	r0, [sp, #4]
   1bb60:	movw	lr, #0
   1bb64:	cmp	r0, lr
   1bb68:	bne	1bb78 <__assert_fail@plt+0xa59c>
   1bb6c:	movw	r0, #60465	; 0xec31
   1bb70:	movt	r0, #1
   1bb74:	str	r0, [sp, #4]
   1bb78:	ldr	r0, [sp, #4]
   1bb7c:	ldrb	r0, [r0]
   1bb80:	cmp	r0, #0
   1bb84:	bne	1bb94 <__assert_fail@plt+0xa5b8>
   1bb88:	movw	r0, #61901	; 0xf1cd
   1bb8c:	movt	r0, #1
   1bb90:	str	r0, [sp, #4]
   1bb94:	ldr	r0, [sp, #4]
   1bb98:	mov	sp, fp
   1bb9c:	pop	{fp, pc}

0001bba0 <_obstack_begin@@Base>:
   1bba0:	push	{fp, lr}
   1bba4:	mov	fp, sp
   1bba8:	sub	sp, sp, #24
   1bbac:	ldr	ip, [fp, #8]
   1bbb0:	str	r0, [fp, #-4]
   1bbb4:	str	r1, [fp, #-8]
   1bbb8:	str	r2, [sp, #12]
   1bbbc:	str	r3, [sp, #8]
   1bbc0:	ldr	r0, [sp, #8]
   1bbc4:	ldr	r1, [fp, #-4]
   1bbc8:	str	r0, [r1, #28]
   1bbcc:	ldr	r0, [fp, #8]
   1bbd0:	ldr	r1, [fp, #-4]
   1bbd4:	str	r0, [r1, #32]
   1bbd8:	ldr	r0, [fp, #-4]
   1bbdc:	ldrb	r1, [r0, #40]	; 0x28
   1bbe0:	bic	r1, r1, #1
   1bbe4:	strb	r1, [r0, #40]	; 0x28
   1bbe8:	ldr	r0, [fp, #-4]
   1bbec:	ldr	r1, [fp, #-8]
   1bbf0:	ldr	r2, [sp, #12]
   1bbf4:	str	ip, [sp, #4]
   1bbf8:	bl	1bc04 <_obstack_begin@@Base+0x64>
   1bbfc:	mov	sp, fp
   1bc00:	pop	{fp, pc}
   1bc04:	push	{fp, lr}
   1bc08:	mov	fp, sp
   1bc0c:	sub	sp, sp, #24
   1bc10:	str	r0, [fp, #-4]
   1bc14:	str	r1, [fp, #-8]
   1bc18:	str	r2, [sp, #12]
   1bc1c:	ldr	r0, [sp, #12]
   1bc20:	cmp	r0, #0
   1bc24:	bne	1bc30 <_obstack_begin@@Base+0x90>
   1bc28:	movw	r0, #8
   1bc2c:	str	r0, [sp, #12]
   1bc30:	ldr	r0, [fp, #-8]
   1bc34:	cmp	r0, #0
   1bc38:	bne	1bc54 <_obstack_begin@@Base+0xb4>
   1bc3c:	movw	r0, #24
   1bc40:	str	r0, [sp, #4]
   1bc44:	ldr	r0, [sp, #4]
   1bc48:	movw	r1, #4096	; 0x1000
   1bc4c:	sub	r0, r1, r0
   1bc50:	str	r0, [fp, #-8]
   1bc54:	ldr	r0, [fp, #-8]
   1bc58:	ldr	r1, [fp, #-4]
   1bc5c:	str	r0, [r1]
   1bc60:	ldr	r0, [sp, #12]
   1bc64:	sub	r0, r0, #1
   1bc68:	ldr	r1, [fp, #-4]
   1bc6c:	str	r0, [r1, #24]
   1bc70:	ldr	r0, [fp, #-4]
   1bc74:	ldr	r1, [fp, #-4]
   1bc78:	ldr	r1, [r1]
   1bc7c:	bl	1bfc4 <_obstack_newchunk@@Base+0x21c>
   1bc80:	ldr	r1, [fp, #-4]
   1bc84:	str	r0, [r1, #4]
   1bc88:	str	r0, [sp, #8]
   1bc8c:	ldr	r0, [sp, #8]
   1bc90:	movw	r1, #0
   1bc94:	cmp	r0, r1
   1bc98:	bne	1bcac <_obstack_begin@@Base+0x10c>
   1bc9c:	movw	r0, #372	; 0x174
   1bca0:	movt	r0, #3
   1bca4:	ldr	r0, [r0]
   1bca8:	blx	r0
   1bcac:	ldr	r0, [sp, #8]
   1bcb0:	ldr	r1, [sp, #12]
   1bcb4:	sub	r1, r1, #1
   1bcb8:	add	r0, r0, r1
   1bcbc:	add	r0, r0, #8
   1bcc0:	bic	r0, r0, r1
   1bcc4:	ldr	r1, [fp, #-4]
   1bcc8:	str	r0, [r1, #8]
   1bccc:	ldr	r1, [fp, #-4]
   1bcd0:	str	r0, [r1, #12]
   1bcd4:	ldr	r0, [sp, #8]
   1bcd8:	ldr	r1, [fp, #-4]
   1bcdc:	ldr	r1, [r1]
   1bce0:	add	r1, r0, r1
   1bce4:	str	r1, [r0]
   1bce8:	ldr	r0, [fp, #-4]
   1bcec:	str	r1, [r0, #16]
   1bcf0:	ldr	r0, [sp, #8]
   1bcf4:	mov	r1, #0
   1bcf8:	str	r1, [r0, #4]
   1bcfc:	ldr	r0, [fp, #-4]
   1bd00:	ldrb	r1, [r0, #40]	; 0x28
   1bd04:	and	r1, r1, #253	; 0xfd
   1bd08:	strb	r1, [r0, #40]	; 0x28
   1bd0c:	ldr	r0, [fp, #-4]
   1bd10:	ldrb	r1, [r0, #40]	; 0x28
   1bd14:	bic	r1, r1, #4
   1bd18:	strb	r1, [r0, #40]	; 0x28
   1bd1c:	movw	r0, #1
   1bd20:	mov	sp, fp
   1bd24:	pop	{fp, pc}

0001bd28 <_obstack_begin_1@@Base>:
   1bd28:	push	{fp, lr}
   1bd2c:	mov	fp, sp
   1bd30:	sub	sp, sp, #24
   1bd34:	ldr	ip, [fp, #12]
   1bd38:	ldr	lr, [fp, #8]
   1bd3c:	str	r0, [fp, #-4]
   1bd40:	str	r1, [fp, #-8]
   1bd44:	str	r2, [sp, #12]
   1bd48:	str	r3, [sp, #8]
   1bd4c:	ldr	r0, [sp, #8]
   1bd50:	ldr	r1, [fp, #-4]
   1bd54:	str	r0, [r1, #28]
   1bd58:	ldr	r0, [fp, #8]
   1bd5c:	ldr	r1, [fp, #-4]
   1bd60:	str	r0, [r1, #32]
   1bd64:	ldr	r0, [fp, #12]
   1bd68:	ldr	r1, [fp, #-4]
   1bd6c:	str	r0, [r1, #36]	; 0x24
   1bd70:	ldr	r0, [fp, #-4]
   1bd74:	ldrb	r1, [r0, #40]	; 0x28
   1bd78:	bic	r1, r1, #1
   1bd7c:	movw	r2, #1
   1bd80:	orr	r1, r1, r2
   1bd84:	strb	r1, [r0, #40]	; 0x28
   1bd88:	ldr	r0, [fp, #-4]
   1bd8c:	ldr	r1, [fp, #-8]
   1bd90:	ldr	r2, [sp, #12]
   1bd94:	str	lr, [sp, #4]
   1bd98:	str	ip, [sp]
   1bd9c:	bl	1bc04 <_obstack_begin@@Base+0x64>
   1bda0:	mov	sp, fp
   1bda4:	pop	{fp, pc}

0001bda8 <_obstack_newchunk@@Base>:
   1bda8:	push	{fp, lr}
   1bdac:	mov	fp, sp
   1bdb0:	sub	sp, sp, #40	; 0x28
   1bdb4:	str	r0, [fp, #-4]
   1bdb8:	str	r1, [fp, #-8]
   1bdbc:	ldr	r0, [fp, #-4]
   1bdc0:	ldr	r0, [r0, #4]
   1bdc4:	str	r0, [fp, #-12]
   1bdc8:	movw	r0, #0
   1bdcc:	str	r0, [fp, #-16]
   1bdd0:	ldr	r0, [fp, #-4]
   1bdd4:	ldr	r0, [r0, #12]
   1bdd8:	ldr	r1, [fp, #-4]
   1bddc:	ldr	r1, [r1, #8]
   1bde0:	sub	r0, r0, r1
   1bde4:	str	r0, [sp, #20]
   1bde8:	ldr	r0, [sp, #20]
   1bdec:	ldr	r1, [fp, #-8]
   1bdf0:	add	r0, r0, r1
   1bdf4:	str	r0, [sp, #12]
   1bdf8:	ldr	r0, [sp, #12]
   1bdfc:	ldr	r1, [fp, #-4]
   1be00:	ldr	r1, [r1, #24]
   1be04:	add	r0, r0, r1
   1be08:	str	r0, [sp, #8]
   1be0c:	ldr	r0, [sp, #8]
   1be10:	ldr	r1, [sp, #20]
   1be14:	lsr	r1, r1, #3
   1be18:	add	r0, r0, r1
   1be1c:	add	r0, r0, #100	; 0x64
   1be20:	str	r0, [sp, #4]
   1be24:	ldr	r0, [sp, #4]
   1be28:	ldr	r1, [sp, #8]
   1be2c:	cmp	r0, r1
   1be30:	bcs	1be3c <_obstack_newchunk@@Base+0x94>
   1be34:	ldr	r0, [sp, #8]
   1be38:	str	r0, [sp, #4]
   1be3c:	ldr	r0, [sp, #4]
   1be40:	ldr	r1, [fp, #-4]
   1be44:	ldr	r1, [r1]
   1be48:	cmp	r0, r1
   1be4c:	bcs	1be5c <_obstack_newchunk@@Base+0xb4>
   1be50:	ldr	r0, [fp, #-4]
   1be54:	ldr	r0, [r0]
   1be58:	str	r0, [sp, #4]
   1be5c:	ldr	r0, [sp, #20]
   1be60:	ldr	r1, [sp, #12]
   1be64:	cmp	r0, r1
   1be68:	bhi	1be8c <_obstack_newchunk@@Base+0xe4>
   1be6c:	ldr	r0, [sp, #12]
   1be70:	ldr	r1, [sp, #8]
   1be74:	cmp	r0, r1
   1be78:	bhi	1be8c <_obstack_newchunk@@Base+0xe4>
   1be7c:	ldr	r0, [fp, #-4]
   1be80:	ldr	r1, [sp, #4]
   1be84:	bl	1bfc4 <_obstack_newchunk@@Base+0x21c>
   1be88:	str	r0, [fp, #-16]
   1be8c:	ldr	r0, [fp, #-16]
   1be90:	movw	r1, #0
   1be94:	cmp	r0, r1
   1be98:	bne	1beac <_obstack_newchunk@@Base+0x104>
   1be9c:	movw	r0, #372	; 0x174
   1bea0:	movt	r0, #3
   1bea4:	ldr	r0, [r0]
   1bea8:	blx	r0
   1beac:	ldr	r0, [fp, #-16]
   1beb0:	ldr	r1, [fp, #-4]
   1beb4:	str	r0, [r1, #4]
   1beb8:	ldr	r0, [fp, #-12]
   1bebc:	ldr	r1, [fp, #-16]
   1bec0:	str	r0, [r1, #4]
   1bec4:	ldr	r0, [fp, #-16]
   1bec8:	ldr	r1, [sp, #4]
   1becc:	add	r0, r0, r1
   1bed0:	ldr	r1, [fp, #-4]
   1bed4:	str	r0, [r1, #16]
   1bed8:	ldr	r1, [fp, #-16]
   1bedc:	str	r0, [r1]
   1bee0:	ldr	r0, [fp, #-16]
   1bee4:	ldr	r1, [fp, #-4]
   1bee8:	ldr	r1, [r1, #24]
   1beec:	add	r0, r0, r1
   1bef0:	add	r0, r0, #8
   1bef4:	bic	r0, r0, r1
   1bef8:	str	r0, [sp, #16]
   1befc:	ldr	r0, [sp, #16]
   1bf00:	ldr	r1, [fp, #-4]
   1bf04:	ldr	r1, [r1, #8]
   1bf08:	ldr	r2, [sp, #20]
   1bf0c:	bl	11354 <memcpy@plt>
   1bf10:	ldr	r1, [fp, #-4]
   1bf14:	ldrb	r1, [r1, #40]	; 0x28
   1bf18:	ubfx	r1, r1, #1, #1
   1bf1c:	and	r1, r1, #255	; 0xff
   1bf20:	cmp	r1, #0
   1bf24:	str	r0, [sp]
   1bf28:	bne	1bf8c <_obstack_newchunk@@Base+0x1e4>
   1bf2c:	ldr	r0, [fp, #-4]
   1bf30:	ldr	r0, [r0, #8]
   1bf34:	ldr	r1, [fp, #-12]
   1bf38:	add	r1, r1, #8
   1bf3c:	sub	r1, r1, #0
   1bf40:	ldr	r2, [fp, #-4]
   1bf44:	ldr	r2, [r2, #24]
   1bf48:	add	r1, r1, r2
   1bf4c:	ldr	r2, [fp, #-4]
   1bf50:	ldr	r2, [r2, #24]
   1bf54:	mvn	r3, #0
   1bf58:	eor	r2, r2, r3
   1bf5c:	and	r1, r1, r2
   1bf60:	movw	r2, #0
   1bf64:	add	r1, r2, r1
   1bf68:	cmp	r0, r1
   1bf6c:	bne	1bf8c <_obstack_newchunk@@Base+0x1e4>
   1bf70:	ldr	r0, [fp, #-12]
   1bf74:	ldr	r0, [r0, #4]
   1bf78:	ldr	r1, [fp, #-16]
   1bf7c:	str	r0, [r1, #4]
   1bf80:	ldr	r0, [fp, #-4]
   1bf84:	ldr	r1, [fp, #-12]
   1bf88:	bl	1c04c <_obstack_newchunk@@Base+0x2a4>
   1bf8c:	ldr	r0, [sp, #16]
   1bf90:	ldr	r1, [fp, #-4]
   1bf94:	str	r0, [r1, #8]
   1bf98:	ldr	r0, [fp, #-4]
   1bf9c:	ldr	r1, [r0, #8]
   1bfa0:	ldr	r2, [sp, #20]
   1bfa4:	add	r1, r1, r2
   1bfa8:	str	r1, [r0, #12]
   1bfac:	ldr	r0, [fp, #-4]
   1bfb0:	ldrb	r1, [r0, #40]	; 0x28
   1bfb4:	bic	r1, r1, #2
   1bfb8:	strb	r1, [r0, #40]	; 0x28
   1bfbc:	mov	sp, fp
   1bfc0:	pop	{fp, pc}
   1bfc4:	push	{fp, lr}
   1bfc8:	mov	fp, sp
   1bfcc:	sub	sp, sp, #24
   1bfd0:	str	r0, [fp, #-8]
   1bfd4:	str	r1, [sp, #12]
   1bfd8:	ldr	r0, [fp, #-8]
   1bfdc:	ldrb	r0, [r0, #40]	; 0x28
   1bfe0:	and	r0, r0, #1
   1bfe4:	and	r0, r0, #255	; 0xff
   1bfe8:	cmp	r0, #0
   1bfec:	beq	1c020 <_obstack_newchunk@@Base+0x278>
   1bff0:	ldr	r0, [fp, #-8]
   1bff4:	ldr	r0, [r0, #28]
   1bff8:	ldr	r1, [fp, #-8]
   1bffc:	ldr	r1, [r1, #36]	; 0x24
   1c000:	ldr	r2, [sp, #12]
   1c004:	str	r0, [sp, #8]
   1c008:	mov	r0, r1
   1c00c:	mov	r1, r2
   1c010:	ldr	r2, [sp, #8]
   1c014:	blx	r2
   1c018:	str	r0, [fp, #-4]
   1c01c:	b	1c040 <_obstack_newchunk@@Base+0x298>
   1c020:	ldr	r0, [fp, #-8]
   1c024:	ldr	r0, [r0, #28]
   1c028:	ldr	r1, [sp, #12]
   1c02c:	str	r0, [sp, #4]
   1c030:	mov	r0, r1
   1c034:	ldr	r1, [sp, #4]
   1c038:	blx	r1
   1c03c:	str	r0, [fp, #-4]
   1c040:	ldr	r0, [fp, #-4]
   1c044:	mov	sp, fp
   1c048:	pop	{fp, pc}
   1c04c:	push	{fp, lr}
   1c050:	mov	fp, sp
   1c054:	sub	sp, sp, #16
   1c058:	str	r0, [fp, #-4]
   1c05c:	str	r1, [sp, #8]
   1c060:	ldr	r0, [fp, #-4]
   1c064:	ldrb	r0, [r0, #40]	; 0x28
   1c068:	and	r0, r0, #1
   1c06c:	and	r0, r0, #255	; 0xff
   1c070:	cmp	r0, #0
   1c074:	beq	1c0a4 <_obstack_newchunk@@Base+0x2fc>
   1c078:	ldr	r0, [fp, #-4]
   1c07c:	ldr	r0, [r0, #32]
   1c080:	ldr	r1, [fp, #-4]
   1c084:	ldr	r1, [r1, #36]	; 0x24
   1c088:	ldr	r2, [sp, #8]
   1c08c:	str	r0, [sp, #4]
   1c090:	mov	r0, r1
   1c094:	mov	r1, r2
   1c098:	ldr	r2, [sp, #4]
   1c09c:	blx	r2
   1c0a0:	b	1c0c0 <_obstack_newchunk@@Base+0x318>
   1c0a4:	ldr	r0, [fp, #-4]
   1c0a8:	ldr	r0, [r0, #32]
   1c0ac:	ldr	r1, [sp, #8]
   1c0b0:	str	r0, [sp]
   1c0b4:	mov	r0, r1
   1c0b8:	ldr	r1, [sp]
   1c0bc:	blx	r1
   1c0c0:	mov	sp, fp
   1c0c4:	pop	{fp, pc}

0001c0c8 <_obstack_allocated_p@@Base>:
   1c0c8:	sub	sp, sp, #24
   1c0cc:	str	r0, [sp, #20]
   1c0d0:	str	r1, [sp, #16]
   1c0d4:	ldr	r0, [sp, #20]
   1c0d8:	ldr	r0, [r0, #4]
   1c0dc:	str	r0, [sp, #12]
   1c0e0:	ldr	r0, [sp, #12]
   1c0e4:	movw	r1, #0
   1c0e8:	cmp	r0, r1
   1c0ec:	movw	r0, #0
   1c0f0:	str	r0, [sp, #4]
   1c0f4:	beq	1c134 <_obstack_allocated_p@@Base+0x6c>
   1c0f8:	ldr	r0, [sp, #12]
   1c0fc:	ldr	r1, [sp, #16]
   1c100:	cmp	r0, r1
   1c104:	movw	r0, #1
   1c108:	str	r0, [sp]
   1c10c:	bcs	1c12c <_obstack_allocated_p@@Base+0x64>
   1c110:	ldr	r0, [sp, #12]
   1c114:	ldr	r0, [r0]
   1c118:	ldr	r1, [sp, #16]
   1c11c:	cmp	r0, r1
   1c120:	movw	r0, #0
   1c124:	movcc	r0, #1
   1c128:	str	r0, [sp]
   1c12c:	ldr	r0, [sp]
   1c130:	str	r0, [sp, #4]
   1c134:	ldr	r0, [sp, #4]
   1c138:	tst	r0, #1
   1c13c:	beq	1c158 <_obstack_allocated_p@@Base+0x90>
   1c140:	ldr	r0, [sp, #12]
   1c144:	ldr	r0, [r0, #4]
   1c148:	str	r0, [sp, #8]
   1c14c:	ldr	r0, [sp, #8]
   1c150:	str	r0, [sp, #12]
   1c154:	b	1c0e0 <_obstack_allocated_p@@Base+0x18>
   1c158:	ldr	r0, [sp, #12]
   1c15c:	movw	r1, #0
   1c160:	cmp	r0, r1
   1c164:	movw	r0, #0
   1c168:	movne	r0, #1
   1c16c:	and	r0, r0, #1
   1c170:	add	sp, sp, #24
   1c174:	bx	lr

0001c178 <_obstack_free@@Base>:
   1c178:	push	{fp, lr}
   1c17c:	mov	fp, sp
   1c180:	sub	sp, sp, #24
   1c184:	str	r0, [fp, #-4]
   1c188:	str	r1, [fp, #-8]
   1c18c:	ldr	r0, [fp, #-4]
   1c190:	ldr	r0, [r0, #4]
   1c194:	str	r0, [sp, #12]
   1c198:	ldr	r0, [sp, #12]
   1c19c:	movw	r1, #0
   1c1a0:	cmp	r0, r1
   1c1a4:	movw	r0, #0
   1c1a8:	str	r0, [sp, #4]
   1c1ac:	beq	1c1ec <_obstack_free@@Base+0x74>
   1c1b0:	ldr	r0, [sp, #12]
   1c1b4:	ldr	r1, [fp, #-8]
   1c1b8:	cmp	r0, r1
   1c1bc:	movw	r0, #1
   1c1c0:	str	r0, [sp]
   1c1c4:	bcs	1c1e4 <_obstack_free@@Base+0x6c>
   1c1c8:	ldr	r0, [sp, #12]
   1c1cc:	ldr	r0, [r0]
   1c1d0:	ldr	r1, [fp, #-8]
   1c1d4:	cmp	r0, r1
   1c1d8:	movw	r0, #0
   1c1dc:	movcc	r0, #1
   1c1e0:	str	r0, [sp]
   1c1e4:	ldr	r0, [sp]
   1c1e8:	str	r0, [sp, #4]
   1c1ec:	ldr	r0, [sp, #4]
   1c1f0:	tst	r0, #1
   1c1f4:	beq	1c234 <_obstack_free@@Base+0xbc>
   1c1f8:	ldr	r0, [sp, #12]
   1c1fc:	ldr	r0, [r0, #4]
   1c200:	str	r0, [sp, #8]
   1c204:	ldr	r0, [fp, #-4]
   1c208:	ldr	r1, [sp, #12]
   1c20c:	bl	1c04c <_obstack_newchunk@@Base+0x2a4>
   1c210:	ldr	r0, [sp, #8]
   1c214:	str	r0, [sp, #12]
   1c218:	ldr	r0, [fp, #-4]
   1c21c:	ldrb	r1, [r0, #40]	; 0x28
   1c220:	bic	r1, r1, #2
   1c224:	movw	lr, #2
   1c228:	orr	r1, r1, lr
   1c22c:	strb	r1, [r0, #40]	; 0x28
   1c230:	b	1c198 <_obstack_free@@Base+0x20>
   1c234:	ldr	r0, [sp, #12]
   1c238:	movw	r1, #0
   1c23c:	cmp	r0, r1
   1c240:	beq	1c278 <_obstack_free@@Base+0x100>
   1c244:	ldr	r0, [fp, #-8]
   1c248:	ldr	r1, [fp, #-4]
   1c24c:	str	r0, [r1, #12]
   1c250:	ldr	r1, [fp, #-4]
   1c254:	str	r0, [r1, #8]
   1c258:	ldr	r0, [sp, #12]
   1c25c:	ldr	r0, [r0]
   1c260:	ldr	r1, [fp, #-4]
   1c264:	str	r0, [r1, #16]
   1c268:	ldr	r0, [sp, #12]
   1c26c:	ldr	r1, [fp, #-4]
   1c270:	str	r0, [r1, #4]
   1c274:	b	1c290 <_obstack_free@@Base+0x118>
   1c278:	ldr	r0, [fp, #-8]
   1c27c:	movw	r1, #0
   1c280:	cmp	r0, r1
   1c284:	beq	1c28c <_obstack_free@@Base+0x114>
   1c288:	bl	115b8 <abort@plt>
   1c28c:	b	1c290 <_obstack_free@@Base+0x118>
   1c290:	mov	sp, fp
   1c294:	pop	{fp, pc}

0001c298 <_obstack_memory_used@@Base>:
   1c298:	sub	sp, sp, #12
   1c29c:	str	r0, [sp, #8]
   1c2a0:	movw	r0, #0
   1c2a4:	str	r0, [sp]
   1c2a8:	ldr	r0, [sp, #8]
   1c2ac:	ldr	r0, [r0, #4]
   1c2b0:	str	r0, [sp, #4]
   1c2b4:	ldr	r0, [sp, #4]
   1c2b8:	movw	r1, #0
   1c2bc:	cmp	r0, r1
   1c2c0:	beq	1c2f0 <_obstack_memory_used@@Base+0x58>
   1c2c4:	ldr	r0, [sp, #4]
   1c2c8:	ldr	r0, [r0]
   1c2cc:	ldr	r1, [sp, #4]
   1c2d0:	sub	r0, r0, r1
   1c2d4:	ldr	r1, [sp]
   1c2d8:	add	r0, r1, r0
   1c2dc:	str	r0, [sp]
   1c2e0:	ldr	r0, [sp, #4]
   1c2e4:	ldr	r0, [r0, #4]
   1c2e8:	str	r0, [sp, #4]
   1c2ec:	b	1c2b4 <_obstack_memory_used@@Base+0x1c>
   1c2f0:	ldr	r0, [sp]
   1c2f4:	add	sp, sp, #12
   1c2f8:	bx	lr
   1c2fc:	push	{fp, lr}
   1c300:	mov	fp, sp
   1c304:	sub	sp, sp, #16
   1c308:	movw	r0, #392	; 0x188
   1c30c:	movt	r0, #3
   1c310:	ldr	r0, [r0]
   1c314:	movw	r1, #61876	; 0xf1b4
   1c318:	movt	r1, #1
   1c31c:	str	r0, [fp, #-4]
   1c320:	mov	r0, r1
   1c324:	bl	114a4 <gettext@plt>
   1c328:	ldr	r1, [fp, #-4]
   1c32c:	str	r0, [sp, #8]
   1c330:	mov	r0, r1
   1c334:	movw	r1, #61100	; 0xeeac
   1c338:	movt	r1, #1
   1c33c:	ldr	r2, [sp, #8]
   1c340:	bl	114c8 <fprintf@plt>
   1c344:	movw	r1, #304	; 0x130
   1c348:	movt	r1, #3
   1c34c:	ldr	r1, [r1]
   1c350:	str	r0, [sp, #4]
   1c354:	mov	r0, r1
   1c358:	bl	11480 <exit@plt>
   1c35c:	push	{fp, lr}
   1c360:	mov	fp, sp
   1c364:	sub	sp, sp, #176	; 0xb0
   1c368:	str	r0, [fp, #-8]
   1c36c:	str	r1, [fp, #-12]
   1c370:	str	r2, [fp, #-16]
   1c374:	b	1c72c <_obstack_memory_used@@Base+0x494>
   1c378:	b	1c54c <_obstack_memory_used@@Base+0x2b4>
   1c37c:	ldr	r0, [fp, #-16]
   1c380:	cmp	r0, #0
   1c384:	bcs	1c488 <_obstack_memory_used@@Base+0x1f0>
   1c388:	ldr	r0, [fp, #-12]
   1c38c:	cmp	r0, #0
   1c390:	bcs	1c418 <_obstack_memory_used@@Base+0x180>
   1c394:	b	1c3b4 <_obstack_memory_used@@Base+0x11c>
   1c398:	ldr	r0, [fp, #-12]
   1c39c:	ldr	r1, [fp, #-16]
   1c3a0:	movw	r2, #127	; 0x7f
   1c3a4:	udiv	r1, r2, r1
   1c3a8:	cmp	r0, r1
   1c3ac:	bcc	1c51c <_obstack_memory_used@@Base+0x284>
   1c3b0:	b	1c534 <_obstack_memory_used@@Base+0x29c>
   1c3b4:	b	1c3c8 <_obstack_memory_used@@Base+0x130>
   1c3b8:	ldr	r0, [fp, #-16]
   1c3bc:	cmp	r0, #1
   1c3c0:	bcc	1c3d8 <_obstack_memory_used@@Base+0x140>
   1c3c4:	b	1c3e4 <_obstack_memory_used@@Base+0x14c>
   1c3c8:	ldr	r0, [fp, #-16]
   1c3cc:	movw	r1, #0
   1c3d0:	cmp	r1, r0
   1c3d4:	bcs	1c3e4 <_obstack_memory_used@@Base+0x14c>
   1c3d8:	movw	r0, #0
   1c3dc:	str	r0, [fp, #-24]	; 0xffffffe8
   1c3e0:	b	1c3fc <_obstack_memory_used@@Base+0x164>
   1c3e4:	ldr	r0, [fp, #-16]
   1c3e8:	movw	r1, #0
   1c3ec:	sub	r0, r1, r0
   1c3f0:	movw	r1, #127	; 0x7f
   1c3f4:	udiv	r0, r1, r0
   1c3f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c3fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c400:	ldr	r1, [fp, #-12]
   1c404:	mvn	r2, #0
   1c408:	sub	r1, r2, r1
   1c40c:	cmp	r0, r1
   1c410:	bls	1c51c <_obstack_memory_used@@Base+0x284>
   1c414:	b	1c534 <_obstack_memory_used@@Base+0x29c>
   1c418:	ldr	r0, [fp, #-16]
   1c41c:	cmn	r0, #1
   1c420:	bne	1c46c <_obstack_memory_used@@Base+0x1d4>
   1c424:	b	1c444 <_obstack_memory_used@@Base+0x1ac>
   1c428:	ldr	r0, [fp, #-12]
   1c42c:	mvn	r1, #127	; 0x7f
   1c430:	add	r0, r0, r1
   1c434:	movw	r1, #0
   1c438:	cmp	r1, r0
   1c43c:	bcc	1c51c <_obstack_memory_used@@Base+0x284>
   1c440:	b	1c534 <_obstack_memory_used@@Base+0x29c>
   1c444:	ldr	r0, [fp, #-12]
   1c448:	movw	r1, #0
   1c44c:	cmp	r1, r0
   1c450:	bcs	1c534 <_obstack_memory_used@@Base+0x29c>
   1c454:	ldr	r0, [fp, #-12]
   1c458:	sub	r0, r0, #1
   1c45c:	movw	r1, #127	; 0x7f
   1c460:	cmp	r1, r0
   1c464:	bcc	1c51c <_obstack_memory_used@@Base+0x284>
   1c468:	b	1c534 <_obstack_memory_used@@Base+0x29c>
   1c46c:	ldr	r0, [fp, #-16]
   1c470:	mvn	r1, #127	; 0x7f
   1c474:	udiv	r0, r1, r0
   1c478:	ldr	r1, [fp, #-12]
   1c47c:	cmp	r0, r1
   1c480:	bcc	1c51c <_obstack_memory_used@@Base+0x284>
   1c484:	b	1c534 <_obstack_memory_used@@Base+0x29c>
   1c488:	ldr	r0, [fp, #-16]
   1c48c:	cmp	r0, #0
   1c490:	bne	1c498 <_obstack_memory_used@@Base+0x200>
   1c494:	b	1c534 <_obstack_memory_used@@Base+0x29c>
   1c498:	ldr	r0, [fp, #-12]
   1c49c:	cmp	r0, #0
   1c4a0:	bcs	1c504 <_obstack_memory_used@@Base+0x26c>
   1c4a4:	ldr	r0, [fp, #-12]
   1c4a8:	cmn	r0, #1
   1c4ac:	bne	1c4e8 <_obstack_memory_used@@Base+0x250>
   1c4b0:	b	1c4d0 <_obstack_memory_used@@Base+0x238>
   1c4b4:	ldr	r0, [fp, #-16]
   1c4b8:	mvn	r1, #127	; 0x7f
   1c4bc:	add	r0, r0, r1
   1c4c0:	movw	r1, #0
   1c4c4:	cmp	r1, r0
   1c4c8:	bcc	1c51c <_obstack_memory_used@@Base+0x284>
   1c4cc:	b	1c534 <_obstack_memory_used@@Base+0x29c>
   1c4d0:	ldr	r0, [fp, #-16]
   1c4d4:	sub	r0, r0, #1
   1c4d8:	movw	r1, #127	; 0x7f
   1c4dc:	cmp	r1, r0
   1c4e0:	bcc	1c51c <_obstack_memory_used@@Base+0x284>
   1c4e4:	b	1c534 <_obstack_memory_used@@Base+0x29c>
   1c4e8:	ldr	r0, [fp, #-12]
   1c4ec:	mvn	r1, #127	; 0x7f
   1c4f0:	udiv	r0, r1, r0
   1c4f4:	ldr	r1, [fp, #-16]
   1c4f8:	cmp	r0, r1
   1c4fc:	bcc	1c51c <_obstack_memory_used@@Base+0x284>
   1c500:	b	1c534 <_obstack_memory_used@@Base+0x29c>
   1c504:	ldr	r0, [fp, #-16]
   1c508:	movw	r1, #127	; 0x7f
   1c50c:	udiv	r0, r1, r0
   1c510:	ldr	r1, [fp, #-12]
   1c514:	cmp	r0, r1
   1c518:	bcs	1c534 <_obstack_memory_used@@Base+0x29c>
   1c51c:	ldr	r0, [fp, #-12]
   1c520:	ldr	r1, [fp, #-16]
   1c524:	mul	r0, r0, r1
   1c528:	sxtb	r0, r0
   1c52c:	str	r0, [fp, #-20]	; 0xffffffec
   1c530:	b	1d6ac <_obstack_memory_used@@Base+0x1414>
   1c534:	ldr	r0, [fp, #-12]
   1c538:	ldr	r1, [fp, #-16]
   1c53c:	mul	r0, r0, r1
   1c540:	sxtb	r0, r0
   1c544:	str	r0, [fp, #-20]	; 0xffffffec
   1c548:	b	1d6c4 <_obstack_memory_used@@Base+0x142c>
   1c54c:	ldr	r0, [fp, #-16]
   1c550:	cmp	r0, #0
   1c554:	bcs	1c660 <_obstack_memory_used@@Base+0x3c8>
   1c558:	ldr	r0, [fp, #-12]
   1c55c:	cmp	r0, #0
   1c560:	bcs	1c5e8 <_obstack_memory_used@@Base+0x350>
   1c564:	b	1c584 <_obstack_memory_used@@Base+0x2ec>
   1c568:	ldr	r0, [fp, #-12]
   1c56c:	ldr	r1, [fp, #-16]
   1c570:	movw	r2, #255	; 0xff
   1c574:	udiv	r1, r2, r1
   1c578:	cmp	r0, r1
   1c57c:	bcc	1c6fc <_obstack_memory_used@@Base+0x464>
   1c580:	b	1c714 <_obstack_memory_used@@Base+0x47c>
   1c584:	b	1c598 <_obstack_memory_used@@Base+0x300>
   1c588:	ldr	r0, [fp, #-16]
   1c58c:	cmp	r0, #1
   1c590:	bcc	1c5a8 <_obstack_memory_used@@Base+0x310>
   1c594:	b	1c5b4 <_obstack_memory_used@@Base+0x31c>
   1c598:	ldr	r0, [fp, #-16]
   1c59c:	movw	r1, #0
   1c5a0:	cmp	r1, r0
   1c5a4:	bcs	1c5b4 <_obstack_memory_used@@Base+0x31c>
   1c5a8:	movw	r0, #0
   1c5ac:	str	r0, [fp, #-28]	; 0xffffffe4
   1c5b0:	b	1c5cc <_obstack_memory_used@@Base+0x334>
   1c5b4:	ldr	r0, [fp, #-16]
   1c5b8:	movw	r1, #0
   1c5bc:	sub	r0, r1, r0
   1c5c0:	movw	r1, #255	; 0xff
   1c5c4:	udiv	r0, r1, r0
   1c5c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1c5cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c5d0:	ldr	r1, [fp, #-12]
   1c5d4:	mvn	r2, #0
   1c5d8:	sub	r1, r2, r1
   1c5dc:	cmp	r0, r1
   1c5e0:	bls	1c6fc <_obstack_memory_used@@Base+0x464>
   1c5e4:	b	1c714 <_obstack_memory_used@@Base+0x47c>
   1c5e8:	b	1c5f0 <_obstack_memory_used@@Base+0x358>
   1c5ec:	b	1c5f4 <_obstack_memory_used@@Base+0x35c>
   1c5f0:	b	1c644 <_obstack_memory_used@@Base+0x3ac>
   1c5f4:	ldr	r0, [fp, #-16]
   1c5f8:	cmn	r0, #1
   1c5fc:	bne	1c644 <_obstack_memory_used@@Base+0x3ac>
   1c600:	b	1c61c <_obstack_memory_used@@Base+0x384>
   1c604:	ldr	r0, [fp, #-12]
   1c608:	add	r0, r0, #0
   1c60c:	movw	r1, #0
   1c610:	cmp	r1, r0
   1c614:	bcc	1c6fc <_obstack_memory_used@@Base+0x464>
   1c618:	b	1c714 <_obstack_memory_used@@Base+0x47c>
   1c61c:	ldr	r0, [fp, #-12]
   1c620:	movw	r1, #0
   1c624:	cmp	r1, r0
   1c628:	bcs	1c714 <_obstack_memory_used@@Base+0x47c>
   1c62c:	ldr	r0, [fp, #-12]
   1c630:	sub	r0, r0, #1
   1c634:	mvn	r1, #0
   1c638:	cmp	r1, r0
   1c63c:	bcc	1c6fc <_obstack_memory_used@@Base+0x464>
   1c640:	b	1c714 <_obstack_memory_used@@Base+0x47c>
   1c644:	ldr	r0, [fp, #-16]
   1c648:	movw	r1, #0
   1c64c:	udiv	r0, r1, r0
   1c650:	ldr	r1, [fp, #-12]
   1c654:	cmp	r0, r1
   1c658:	bcc	1c6fc <_obstack_memory_used@@Base+0x464>
   1c65c:	b	1c714 <_obstack_memory_used@@Base+0x47c>
   1c660:	ldr	r0, [fp, #-16]
   1c664:	cmp	r0, #0
   1c668:	bne	1c670 <_obstack_memory_used@@Base+0x3d8>
   1c66c:	b	1c714 <_obstack_memory_used@@Base+0x47c>
   1c670:	ldr	r0, [fp, #-12]
   1c674:	cmp	r0, #0
   1c678:	bcs	1c6e4 <_obstack_memory_used@@Base+0x44c>
   1c67c:	b	1c684 <_obstack_memory_used@@Base+0x3ec>
   1c680:	b	1c688 <_obstack_memory_used@@Base+0x3f0>
   1c684:	b	1c6c8 <_obstack_memory_used@@Base+0x430>
   1c688:	ldr	r0, [fp, #-12]
   1c68c:	cmn	r0, #1
   1c690:	bne	1c6c8 <_obstack_memory_used@@Base+0x430>
   1c694:	b	1c6b0 <_obstack_memory_used@@Base+0x418>
   1c698:	ldr	r0, [fp, #-16]
   1c69c:	add	r0, r0, #0
   1c6a0:	movw	r1, #0
   1c6a4:	cmp	r1, r0
   1c6a8:	bcc	1c6fc <_obstack_memory_used@@Base+0x464>
   1c6ac:	b	1c714 <_obstack_memory_used@@Base+0x47c>
   1c6b0:	ldr	r0, [fp, #-16]
   1c6b4:	sub	r0, r0, #1
   1c6b8:	mvn	r1, #0
   1c6bc:	cmp	r1, r0
   1c6c0:	bcc	1c6fc <_obstack_memory_used@@Base+0x464>
   1c6c4:	b	1c714 <_obstack_memory_used@@Base+0x47c>
   1c6c8:	ldr	r0, [fp, #-12]
   1c6cc:	movw	r1, #0
   1c6d0:	udiv	r0, r1, r0
   1c6d4:	ldr	r1, [fp, #-16]
   1c6d8:	cmp	r0, r1
   1c6dc:	bcc	1c6fc <_obstack_memory_used@@Base+0x464>
   1c6e0:	b	1c714 <_obstack_memory_used@@Base+0x47c>
   1c6e4:	ldr	r0, [fp, #-16]
   1c6e8:	movw	r1, #255	; 0xff
   1c6ec:	udiv	r0, r1, r0
   1c6f0:	ldr	r1, [fp, #-12]
   1c6f4:	cmp	r0, r1
   1c6f8:	bcs	1c714 <_obstack_memory_used@@Base+0x47c>
   1c6fc:	ldr	r0, [fp, #-12]
   1c700:	ldr	r1, [fp, #-16]
   1c704:	mul	r0, r0, r1
   1c708:	and	r0, r0, #255	; 0xff
   1c70c:	str	r0, [fp, #-20]	; 0xffffffec
   1c710:	b	1d6ac <_obstack_memory_used@@Base+0x1414>
   1c714:	ldr	r0, [fp, #-12]
   1c718:	ldr	r1, [fp, #-16]
   1c71c:	mul	r0, r0, r1
   1c720:	and	r0, r0, #255	; 0xff
   1c724:	str	r0, [fp, #-20]	; 0xffffffec
   1c728:	b	1d6c4 <_obstack_memory_used@@Base+0x142c>
   1c72c:	b	1cae4 <_obstack_memory_used@@Base+0x84c>
   1c730:	b	1c904 <_obstack_memory_used@@Base+0x66c>
   1c734:	ldr	r0, [fp, #-16]
   1c738:	cmp	r0, #0
   1c73c:	bcs	1c840 <_obstack_memory_used@@Base+0x5a8>
   1c740:	ldr	r0, [fp, #-12]
   1c744:	cmp	r0, #0
   1c748:	bcs	1c7d0 <_obstack_memory_used@@Base+0x538>
   1c74c:	b	1c76c <_obstack_memory_used@@Base+0x4d4>
   1c750:	ldr	r0, [fp, #-12]
   1c754:	ldr	r1, [fp, #-16]
   1c758:	movw	r2, #32767	; 0x7fff
   1c75c:	udiv	r1, r2, r1
   1c760:	cmp	r0, r1
   1c764:	bcc	1c8d4 <_obstack_memory_used@@Base+0x63c>
   1c768:	b	1c8ec <_obstack_memory_used@@Base+0x654>
   1c76c:	b	1c780 <_obstack_memory_used@@Base+0x4e8>
   1c770:	ldr	r0, [fp, #-16]
   1c774:	cmp	r0, #1
   1c778:	bcc	1c790 <_obstack_memory_used@@Base+0x4f8>
   1c77c:	b	1c79c <_obstack_memory_used@@Base+0x504>
   1c780:	ldr	r0, [fp, #-16]
   1c784:	movw	r1, #0
   1c788:	cmp	r1, r0
   1c78c:	bcs	1c79c <_obstack_memory_used@@Base+0x504>
   1c790:	movw	r0, #0
   1c794:	str	r0, [fp, #-32]	; 0xffffffe0
   1c798:	b	1c7b4 <_obstack_memory_used@@Base+0x51c>
   1c79c:	ldr	r0, [fp, #-16]
   1c7a0:	movw	r1, #0
   1c7a4:	sub	r0, r1, r0
   1c7a8:	movw	r1, #32767	; 0x7fff
   1c7ac:	udiv	r0, r1, r0
   1c7b0:	str	r0, [fp, #-32]	; 0xffffffe0
   1c7b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c7b8:	ldr	r1, [fp, #-12]
   1c7bc:	mvn	r2, #0
   1c7c0:	sub	r1, r2, r1
   1c7c4:	cmp	r0, r1
   1c7c8:	bls	1c8d4 <_obstack_memory_used@@Base+0x63c>
   1c7cc:	b	1c8ec <_obstack_memory_used@@Base+0x654>
   1c7d0:	ldr	r0, [fp, #-16]
   1c7d4:	cmn	r0, #1
   1c7d8:	bne	1c824 <_obstack_memory_used@@Base+0x58c>
   1c7dc:	b	1c7fc <_obstack_memory_used@@Base+0x564>
   1c7e0:	ldr	r0, [pc, #3840]	; 1d6e8 <_obstack_memory_used@@Base+0x1450>
   1c7e4:	ldr	r1, [fp, #-12]
   1c7e8:	add	r0, r1, r0
   1c7ec:	movw	r1, #0
   1c7f0:	cmp	r1, r0
   1c7f4:	bcc	1c8d4 <_obstack_memory_used@@Base+0x63c>
   1c7f8:	b	1c8ec <_obstack_memory_used@@Base+0x654>
   1c7fc:	ldr	r0, [fp, #-12]
   1c800:	movw	r1, #0
   1c804:	cmp	r1, r0
   1c808:	bcs	1c8ec <_obstack_memory_used@@Base+0x654>
   1c80c:	ldr	r0, [fp, #-12]
   1c810:	sub	r0, r0, #1
   1c814:	movw	r1, #32767	; 0x7fff
   1c818:	cmp	r1, r0
   1c81c:	bcc	1c8d4 <_obstack_memory_used@@Base+0x63c>
   1c820:	b	1c8ec <_obstack_memory_used@@Base+0x654>
   1c824:	ldr	r0, [pc, #3772]	; 1d6e8 <_obstack_memory_used@@Base+0x1450>
   1c828:	ldr	r1, [fp, #-16]
   1c82c:	udiv	r0, r0, r1
   1c830:	ldr	r1, [fp, #-12]
   1c834:	cmp	r0, r1
   1c838:	bcc	1c8d4 <_obstack_memory_used@@Base+0x63c>
   1c83c:	b	1c8ec <_obstack_memory_used@@Base+0x654>
   1c840:	ldr	r0, [fp, #-16]
   1c844:	cmp	r0, #0
   1c848:	bne	1c850 <_obstack_memory_used@@Base+0x5b8>
   1c84c:	b	1c8ec <_obstack_memory_used@@Base+0x654>
   1c850:	ldr	r0, [fp, #-12]
   1c854:	cmp	r0, #0
   1c858:	bcs	1c8bc <_obstack_memory_used@@Base+0x624>
   1c85c:	ldr	r0, [fp, #-12]
   1c860:	cmn	r0, #1
   1c864:	bne	1c8a0 <_obstack_memory_used@@Base+0x608>
   1c868:	b	1c888 <_obstack_memory_used@@Base+0x5f0>
   1c86c:	ldr	r0, [pc, #3700]	; 1d6e8 <_obstack_memory_used@@Base+0x1450>
   1c870:	ldr	r1, [fp, #-16]
   1c874:	add	r0, r1, r0
   1c878:	movw	r1, #0
   1c87c:	cmp	r1, r0
   1c880:	bcc	1c8d4 <_obstack_memory_used@@Base+0x63c>
   1c884:	b	1c8ec <_obstack_memory_used@@Base+0x654>
   1c888:	ldr	r0, [fp, #-16]
   1c88c:	sub	r0, r0, #1
   1c890:	movw	r1, #32767	; 0x7fff
   1c894:	cmp	r1, r0
   1c898:	bcc	1c8d4 <_obstack_memory_used@@Base+0x63c>
   1c89c:	b	1c8ec <_obstack_memory_used@@Base+0x654>
   1c8a0:	ldr	r0, [pc, #3648]	; 1d6e8 <_obstack_memory_used@@Base+0x1450>
   1c8a4:	ldr	r1, [fp, #-12]
   1c8a8:	udiv	r0, r0, r1
   1c8ac:	ldr	r1, [fp, #-16]
   1c8b0:	cmp	r0, r1
   1c8b4:	bcc	1c8d4 <_obstack_memory_used@@Base+0x63c>
   1c8b8:	b	1c8ec <_obstack_memory_used@@Base+0x654>
   1c8bc:	ldr	r0, [fp, #-16]
   1c8c0:	movw	r1, #32767	; 0x7fff
   1c8c4:	udiv	r0, r1, r0
   1c8c8:	ldr	r1, [fp, #-12]
   1c8cc:	cmp	r0, r1
   1c8d0:	bcs	1c8ec <_obstack_memory_used@@Base+0x654>
   1c8d4:	ldr	r0, [fp, #-12]
   1c8d8:	ldr	r1, [fp, #-16]
   1c8dc:	mul	r0, r0, r1
   1c8e0:	sxth	r0, r0
   1c8e4:	str	r0, [fp, #-20]	; 0xffffffec
   1c8e8:	b	1d6ac <_obstack_memory_used@@Base+0x1414>
   1c8ec:	ldr	r0, [fp, #-12]
   1c8f0:	ldr	r1, [fp, #-16]
   1c8f4:	mul	r0, r0, r1
   1c8f8:	sxth	r0, r0
   1c8fc:	str	r0, [fp, #-20]	; 0xffffffec
   1c900:	b	1d6c4 <_obstack_memory_used@@Base+0x142c>
   1c904:	ldr	r0, [fp, #-16]
   1c908:	cmp	r0, #0
   1c90c:	bcs	1ca18 <_obstack_memory_used@@Base+0x780>
   1c910:	ldr	r0, [fp, #-12]
   1c914:	cmp	r0, #0
   1c918:	bcs	1c9a0 <_obstack_memory_used@@Base+0x708>
   1c91c:	b	1c93c <_obstack_memory_used@@Base+0x6a4>
   1c920:	ldr	r0, [fp, #-12]
   1c924:	ldr	r1, [fp, #-16]
   1c928:	movw	r2, #65535	; 0xffff
   1c92c:	udiv	r1, r2, r1
   1c930:	cmp	r0, r1
   1c934:	bcc	1cab4 <_obstack_memory_used@@Base+0x81c>
   1c938:	b	1cacc <_obstack_memory_used@@Base+0x834>
   1c93c:	b	1c950 <_obstack_memory_used@@Base+0x6b8>
   1c940:	ldr	r0, [fp, #-16]
   1c944:	cmp	r0, #1
   1c948:	bcc	1c960 <_obstack_memory_used@@Base+0x6c8>
   1c94c:	b	1c96c <_obstack_memory_used@@Base+0x6d4>
   1c950:	ldr	r0, [fp, #-16]
   1c954:	movw	r1, #0
   1c958:	cmp	r1, r0
   1c95c:	bcs	1c96c <_obstack_memory_used@@Base+0x6d4>
   1c960:	movw	r0, #0
   1c964:	str	r0, [fp, #-36]	; 0xffffffdc
   1c968:	b	1c984 <_obstack_memory_used@@Base+0x6ec>
   1c96c:	ldr	r0, [fp, #-16]
   1c970:	movw	r1, #0
   1c974:	sub	r0, r1, r0
   1c978:	movw	r1, #65535	; 0xffff
   1c97c:	udiv	r0, r1, r0
   1c980:	str	r0, [fp, #-36]	; 0xffffffdc
   1c984:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c988:	ldr	r1, [fp, #-12]
   1c98c:	mvn	r2, #0
   1c990:	sub	r1, r2, r1
   1c994:	cmp	r0, r1
   1c998:	bls	1cab4 <_obstack_memory_used@@Base+0x81c>
   1c99c:	b	1cacc <_obstack_memory_used@@Base+0x834>
   1c9a0:	b	1c9a8 <_obstack_memory_used@@Base+0x710>
   1c9a4:	b	1c9ac <_obstack_memory_used@@Base+0x714>
   1c9a8:	b	1c9fc <_obstack_memory_used@@Base+0x764>
   1c9ac:	ldr	r0, [fp, #-16]
   1c9b0:	cmn	r0, #1
   1c9b4:	bne	1c9fc <_obstack_memory_used@@Base+0x764>
   1c9b8:	b	1c9d4 <_obstack_memory_used@@Base+0x73c>
   1c9bc:	ldr	r0, [fp, #-12]
   1c9c0:	add	r0, r0, #0
   1c9c4:	movw	r1, #0
   1c9c8:	cmp	r1, r0
   1c9cc:	bcc	1cab4 <_obstack_memory_used@@Base+0x81c>
   1c9d0:	b	1cacc <_obstack_memory_used@@Base+0x834>
   1c9d4:	ldr	r0, [fp, #-12]
   1c9d8:	movw	r1, #0
   1c9dc:	cmp	r1, r0
   1c9e0:	bcs	1cacc <_obstack_memory_used@@Base+0x834>
   1c9e4:	ldr	r0, [fp, #-12]
   1c9e8:	sub	r0, r0, #1
   1c9ec:	mvn	r1, #0
   1c9f0:	cmp	r1, r0
   1c9f4:	bcc	1cab4 <_obstack_memory_used@@Base+0x81c>
   1c9f8:	b	1cacc <_obstack_memory_used@@Base+0x834>
   1c9fc:	ldr	r0, [fp, #-16]
   1ca00:	movw	r1, #0
   1ca04:	udiv	r0, r1, r0
   1ca08:	ldr	r1, [fp, #-12]
   1ca0c:	cmp	r0, r1
   1ca10:	bcc	1cab4 <_obstack_memory_used@@Base+0x81c>
   1ca14:	b	1cacc <_obstack_memory_used@@Base+0x834>
   1ca18:	ldr	r0, [fp, #-16]
   1ca1c:	cmp	r0, #0
   1ca20:	bne	1ca28 <_obstack_memory_used@@Base+0x790>
   1ca24:	b	1cacc <_obstack_memory_used@@Base+0x834>
   1ca28:	ldr	r0, [fp, #-12]
   1ca2c:	cmp	r0, #0
   1ca30:	bcs	1ca9c <_obstack_memory_used@@Base+0x804>
   1ca34:	b	1ca3c <_obstack_memory_used@@Base+0x7a4>
   1ca38:	b	1ca40 <_obstack_memory_used@@Base+0x7a8>
   1ca3c:	b	1ca80 <_obstack_memory_used@@Base+0x7e8>
   1ca40:	ldr	r0, [fp, #-12]
   1ca44:	cmn	r0, #1
   1ca48:	bne	1ca80 <_obstack_memory_used@@Base+0x7e8>
   1ca4c:	b	1ca68 <_obstack_memory_used@@Base+0x7d0>
   1ca50:	ldr	r0, [fp, #-16]
   1ca54:	add	r0, r0, #0
   1ca58:	movw	r1, #0
   1ca5c:	cmp	r1, r0
   1ca60:	bcc	1cab4 <_obstack_memory_used@@Base+0x81c>
   1ca64:	b	1cacc <_obstack_memory_used@@Base+0x834>
   1ca68:	ldr	r0, [fp, #-16]
   1ca6c:	sub	r0, r0, #1
   1ca70:	mvn	r1, #0
   1ca74:	cmp	r1, r0
   1ca78:	bcc	1cab4 <_obstack_memory_used@@Base+0x81c>
   1ca7c:	b	1cacc <_obstack_memory_used@@Base+0x834>
   1ca80:	ldr	r0, [fp, #-12]
   1ca84:	movw	r1, #0
   1ca88:	udiv	r0, r1, r0
   1ca8c:	ldr	r1, [fp, #-16]
   1ca90:	cmp	r0, r1
   1ca94:	bcc	1cab4 <_obstack_memory_used@@Base+0x81c>
   1ca98:	b	1cacc <_obstack_memory_used@@Base+0x834>
   1ca9c:	ldr	r0, [fp, #-16]
   1caa0:	movw	r1, #65535	; 0xffff
   1caa4:	udiv	r0, r1, r0
   1caa8:	ldr	r1, [fp, #-12]
   1caac:	cmp	r0, r1
   1cab0:	bcs	1cacc <_obstack_memory_used@@Base+0x834>
   1cab4:	ldr	r0, [fp, #-12]
   1cab8:	ldr	r1, [fp, #-16]
   1cabc:	mul	r0, r0, r1
   1cac0:	uxth	r0, r0
   1cac4:	str	r0, [fp, #-20]	; 0xffffffec
   1cac8:	b	1d6ac <_obstack_memory_used@@Base+0x1414>
   1cacc:	ldr	r0, [fp, #-12]
   1cad0:	ldr	r1, [fp, #-16]
   1cad4:	mul	r0, r0, r1
   1cad8:	uxth	r0, r0
   1cadc:	str	r0, [fp, #-20]	; 0xffffffec
   1cae0:	b	1d6c4 <_obstack_memory_used@@Base+0x142c>
   1cae4:	b	1cae8 <_obstack_memory_used@@Base+0x850>
   1cae8:	b	1ccac <_obstack_memory_used@@Base+0xa14>
   1caec:	ldr	r0, [fp, #-16]
   1caf0:	cmp	r0, #0
   1caf4:	bcs	1cbf4 <_obstack_memory_used@@Base+0x95c>
   1caf8:	ldr	r0, [fp, #-12]
   1cafc:	cmp	r0, #0
   1cb00:	bcs	1cb88 <_obstack_memory_used@@Base+0x8f0>
   1cb04:	b	1cb24 <_obstack_memory_used@@Base+0x88c>
   1cb08:	ldr	r0, [pc, #3024]	; 1d6e0 <_obstack_memory_used@@Base+0x1448>
   1cb0c:	ldr	r1, [fp, #-12]
   1cb10:	ldr	r2, [fp, #-16]
   1cb14:	udiv	r0, r0, r2
   1cb18:	cmp	r1, r0
   1cb1c:	bcc	1cc84 <_obstack_memory_used@@Base+0x9ec>
   1cb20:	b	1cc98 <_obstack_memory_used@@Base+0xa00>
   1cb24:	b	1cb38 <_obstack_memory_used@@Base+0x8a0>
   1cb28:	ldr	r0, [fp, #-16]
   1cb2c:	cmp	r0, #1
   1cb30:	bcc	1cb48 <_obstack_memory_used@@Base+0x8b0>
   1cb34:	b	1cb54 <_obstack_memory_used@@Base+0x8bc>
   1cb38:	ldr	r0, [fp, #-16]
   1cb3c:	movw	r1, #0
   1cb40:	cmp	r1, r0
   1cb44:	bcs	1cb54 <_obstack_memory_used@@Base+0x8bc>
   1cb48:	movw	r0, #0
   1cb4c:	str	r0, [fp, #-40]	; 0xffffffd8
   1cb50:	b	1cb6c <_obstack_memory_used@@Base+0x8d4>
   1cb54:	ldr	r0, [pc, #2948]	; 1d6e0 <_obstack_memory_used@@Base+0x1448>
   1cb58:	ldr	r1, [fp, #-16]
   1cb5c:	movw	r2, #0
   1cb60:	sub	r1, r2, r1
   1cb64:	udiv	r0, r0, r1
   1cb68:	str	r0, [fp, #-40]	; 0xffffffd8
   1cb6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cb70:	ldr	r1, [fp, #-12]
   1cb74:	mvn	r2, #0
   1cb78:	sub	r1, r2, r1
   1cb7c:	cmp	r0, r1
   1cb80:	bls	1cc84 <_obstack_memory_used@@Base+0x9ec>
   1cb84:	b	1cc98 <_obstack_memory_used@@Base+0xa00>
   1cb88:	ldr	r0, [fp, #-16]
   1cb8c:	cmn	r0, #1
   1cb90:	bne	1cbd8 <_obstack_memory_used@@Base+0x940>
   1cb94:	b	1cbb0 <_obstack_memory_used@@Base+0x918>
   1cb98:	ldr	r0, [fp, #-12]
   1cb9c:	add	r0, r0, #-2147483648	; 0x80000000
   1cba0:	movw	r1, #0
   1cba4:	cmp	r1, r0
   1cba8:	bcc	1cc84 <_obstack_memory_used@@Base+0x9ec>
   1cbac:	b	1cc98 <_obstack_memory_used@@Base+0xa00>
   1cbb0:	ldr	r0, [fp, #-12]
   1cbb4:	movw	r1, #0
   1cbb8:	cmp	r1, r0
   1cbbc:	bcs	1cc98 <_obstack_memory_used@@Base+0xa00>
   1cbc0:	ldr	r0, [pc, #2840]	; 1d6e0 <_obstack_memory_used@@Base+0x1448>
   1cbc4:	ldr	r1, [fp, #-12]
   1cbc8:	sub	r1, r1, #1
   1cbcc:	cmp	r0, r1
   1cbd0:	bcc	1cc84 <_obstack_memory_used@@Base+0x9ec>
   1cbd4:	b	1cc98 <_obstack_memory_used@@Base+0xa00>
   1cbd8:	ldr	r0, [pc, #2820]	; 1d6e4 <_obstack_memory_used@@Base+0x144c>
   1cbdc:	ldr	r1, [fp, #-16]
   1cbe0:	udiv	r0, r0, r1
   1cbe4:	ldr	r1, [fp, #-12]
   1cbe8:	cmp	r0, r1
   1cbec:	bcc	1cc84 <_obstack_memory_used@@Base+0x9ec>
   1cbf0:	b	1cc98 <_obstack_memory_used@@Base+0xa00>
   1cbf4:	ldr	r0, [fp, #-16]
   1cbf8:	cmp	r0, #0
   1cbfc:	bne	1cc04 <_obstack_memory_used@@Base+0x96c>
   1cc00:	b	1cc98 <_obstack_memory_used@@Base+0xa00>
   1cc04:	ldr	r0, [fp, #-12]
   1cc08:	cmp	r0, #0
   1cc0c:	bcs	1cc6c <_obstack_memory_used@@Base+0x9d4>
   1cc10:	ldr	r0, [fp, #-12]
   1cc14:	cmn	r0, #1
   1cc18:	bne	1cc50 <_obstack_memory_used@@Base+0x9b8>
   1cc1c:	b	1cc38 <_obstack_memory_used@@Base+0x9a0>
   1cc20:	ldr	r0, [fp, #-16]
   1cc24:	add	r0, r0, #-2147483648	; 0x80000000
   1cc28:	movw	r1, #0
   1cc2c:	cmp	r1, r0
   1cc30:	bcc	1cc84 <_obstack_memory_used@@Base+0x9ec>
   1cc34:	b	1cc98 <_obstack_memory_used@@Base+0xa00>
   1cc38:	ldr	r0, [pc, #2720]	; 1d6e0 <_obstack_memory_used@@Base+0x1448>
   1cc3c:	ldr	r1, [fp, #-16]
   1cc40:	sub	r1, r1, #1
   1cc44:	cmp	r0, r1
   1cc48:	bcc	1cc84 <_obstack_memory_used@@Base+0x9ec>
   1cc4c:	b	1cc98 <_obstack_memory_used@@Base+0xa00>
   1cc50:	ldr	r0, [pc, #2700]	; 1d6e4 <_obstack_memory_used@@Base+0x144c>
   1cc54:	ldr	r1, [fp, #-12]
   1cc58:	udiv	r0, r0, r1
   1cc5c:	ldr	r1, [fp, #-16]
   1cc60:	cmp	r0, r1
   1cc64:	bcc	1cc84 <_obstack_memory_used@@Base+0x9ec>
   1cc68:	b	1cc98 <_obstack_memory_used@@Base+0xa00>
   1cc6c:	ldr	r0, [pc, #2668]	; 1d6e0 <_obstack_memory_used@@Base+0x1448>
   1cc70:	ldr	r1, [fp, #-16]
   1cc74:	udiv	r0, r0, r1
   1cc78:	ldr	r1, [fp, #-12]
   1cc7c:	cmp	r0, r1
   1cc80:	bcs	1cc98 <_obstack_memory_used@@Base+0xa00>
   1cc84:	ldr	r0, [fp, #-12]
   1cc88:	ldr	r1, [fp, #-16]
   1cc8c:	mul	r0, r0, r1
   1cc90:	str	r0, [fp, #-20]	; 0xffffffec
   1cc94:	b	1d6ac <_obstack_memory_used@@Base+0x1414>
   1cc98:	ldr	r0, [fp, #-12]
   1cc9c:	ldr	r1, [fp, #-16]
   1cca0:	mul	r0, r0, r1
   1cca4:	str	r0, [fp, #-20]	; 0xffffffec
   1cca8:	b	1d6c4 <_obstack_memory_used@@Base+0x142c>
   1ccac:	ldr	r0, [fp, #-16]
   1ccb0:	cmp	r0, #0
   1ccb4:	bcs	1cdc0 <_obstack_memory_used@@Base+0xb28>
   1ccb8:	ldr	r0, [fp, #-12]
   1ccbc:	cmp	r0, #0
   1ccc0:	bcs	1cd48 <_obstack_memory_used@@Base+0xab0>
   1ccc4:	b	1cce4 <_obstack_memory_used@@Base+0xa4c>
   1ccc8:	ldr	r0, [fp, #-12]
   1cccc:	ldr	r1, [fp, #-16]
   1ccd0:	mvn	r2, #0
   1ccd4:	udiv	r1, r2, r1
   1ccd8:	cmp	r0, r1
   1ccdc:	bcc	1ce5c <_obstack_memory_used@@Base+0xbc4>
   1cce0:	b	1ce70 <_obstack_memory_used@@Base+0xbd8>
   1cce4:	b	1ccf8 <_obstack_memory_used@@Base+0xa60>
   1cce8:	ldr	r0, [fp, #-16]
   1ccec:	cmp	r0, #1
   1ccf0:	bcc	1cd08 <_obstack_memory_used@@Base+0xa70>
   1ccf4:	b	1cd14 <_obstack_memory_used@@Base+0xa7c>
   1ccf8:	ldr	r0, [fp, #-16]
   1ccfc:	movw	r1, #0
   1cd00:	cmp	r1, r0
   1cd04:	bcs	1cd14 <_obstack_memory_used@@Base+0xa7c>
   1cd08:	movw	r0, #1
   1cd0c:	str	r0, [fp, #-44]	; 0xffffffd4
   1cd10:	b	1cd2c <_obstack_memory_used@@Base+0xa94>
   1cd14:	ldr	r0, [fp, #-16]
   1cd18:	movw	r1, #0
   1cd1c:	sub	r0, r1, r0
   1cd20:	mvn	r1, #0
   1cd24:	udiv	r0, r1, r0
   1cd28:	str	r0, [fp, #-44]	; 0xffffffd4
   1cd2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cd30:	ldr	r1, [fp, #-12]
   1cd34:	mvn	r2, #0
   1cd38:	sub	r1, r2, r1
   1cd3c:	cmp	r0, r1
   1cd40:	bls	1ce5c <_obstack_memory_used@@Base+0xbc4>
   1cd44:	b	1ce70 <_obstack_memory_used@@Base+0xbd8>
   1cd48:	b	1cd50 <_obstack_memory_used@@Base+0xab8>
   1cd4c:	b	1cd54 <_obstack_memory_used@@Base+0xabc>
   1cd50:	b	1cda4 <_obstack_memory_used@@Base+0xb0c>
   1cd54:	ldr	r0, [fp, #-16]
   1cd58:	cmn	r0, #1
   1cd5c:	bne	1cda4 <_obstack_memory_used@@Base+0xb0c>
   1cd60:	b	1cd7c <_obstack_memory_used@@Base+0xae4>
   1cd64:	ldr	r0, [fp, #-12]
   1cd68:	add	r0, r0, #0
   1cd6c:	movw	r1, #0
   1cd70:	cmp	r1, r0
   1cd74:	bcc	1ce5c <_obstack_memory_used@@Base+0xbc4>
   1cd78:	b	1ce70 <_obstack_memory_used@@Base+0xbd8>
   1cd7c:	ldr	r0, [fp, #-12]
   1cd80:	movw	r1, #0
   1cd84:	cmp	r1, r0
   1cd88:	bcs	1ce70 <_obstack_memory_used@@Base+0xbd8>
   1cd8c:	ldr	r0, [fp, #-12]
   1cd90:	sub	r0, r0, #1
   1cd94:	mvn	r1, #0
   1cd98:	cmp	r1, r0
   1cd9c:	bcc	1ce5c <_obstack_memory_used@@Base+0xbc4>
   1cda0:	b	1ce70 <_obstack_memory_used@@Base+0xbd8>
   1cda4:	ldr	r0, [fp, #-16]
   1cda8:	movw	r1, #0
   1cdac:	udiv	r0, r1, r0
   1cdb0:	ldr	r1, [fp, #-12]
   1cdb4:	cmp	r0, r1
   1cdb8:	bcc	1ce5c <_obstack_memory_used@@Base+0xbc4>
   1cdbc:	b	1ce70 <_obstack_memory_used@@Base+0xbd8>
   1cdc0:	ldr	r0, [fp, #-16]
   1cdc4:	cmp	r0, #0
   1cdc8:	bne	1cdd0 <_obstack_memory_used@@Base+0xb38>
   1cdcc:	b	1ce70 <_obstack_memory_used@@Base+0xbd8>
   1cdd0:	ldr	r0, [fp, #-12]
   1cdd4:	cmp	r0, #0
   1cdd8:	bcs	1ce44 <_obstack_memory_used@@Base+0xbac>
   1cddc:	b	1cde4 <_obstack_memory_used@@Base+0xb4c>
   1cde0:	b	1cde8 <_obstack_memory_used@@Base+0xb50>
   1cde4:	b	1ce28 <_obstack_memory_used@@Base+0xb90>
   1cde8:	ldr	r0, [fp, #-12]
   1cdec:	cmn	r0, #1
   1cdf0:	bne	1ce28 <_obstack_memory_used@@Base+0xb90>
   1cdf4:	b	1ce10 <_obstack_memory_used@@Base+0xb78>
   1cdf8:	ldr	r0, [fp, #-16]
   1cdfc:	add	r0, r0, #0
   1ce00:	movw	r1, #0
   1ce04:	cmp	r1, r0
   1ce08:	bcc	1ce5c <_obstack_memory_used@@Base+0xbc4>
   1ce0c:	b	1ce70 <_obstack_memory_used@@Base+0xbd8>
   1ce10:	ldr	r0, [fp, #-16]
   1ce14:	sub	r0, r0, #1
   1ce18:	mvn	r1, #0
   1ce1c:	cmp	r1, r0
   1ce20:	bcc	1ce5c <_obstack_memory_used@@Base+0xbc4>
   1ce24:	b	1ce70 <_obstack_memory_used@@Base+0xbd8>
   1ce28:	ldr	r0, [fp, #-12]
   1ce2c:	movw	r1, #0
   1ce30:	udiv	r0, r1, r0
   1ce34:	ldr	r1, [fp, #-16]
   1ce38:	cmp	r0, r1
   1ce3c:	bcc	1ce5c <_obstack_memory_used@@Base+0xbc4>
   1ce40:	b	1ce70 <_obstack_memory_used@@Base+0xbd8>
   1ce44:	ldr	r0, [fp, #-16]
   1ce48:	mvn	r1, #0
   1ce4c:	udiv	r0, r1, r0
   1ce50:	ldr	r1, [fp, #-12]
   1ce54:	cmp	r0, r1
   1ce58:	bcs	1ce70 <_obstack_memory_used@@Base+0xbd8>
   1ce5c:	ldr	r0, [fp, #-12]
   1ce60:	ldr	r1, [fp, #-16]
   1ce64:	mul	r0, r0, r1
   1ce68:	str	r0, [fp, #-20]	; 0xffffffec
   1ce6c:	b	1d6ac <_obstack_memory_used@@Base+0x1414>
   1ce70:	ldr	r0, [fp, #-12]
   1ce74:	ldr	r1, [fp, #-16]
   1ce78:	mul	r0, r0, r1
   1ce7c:	str	r0, [fp, #-20]	; 0xffffffec
   1ce80:	b	1d6c4 <_obstack_memory_used@@Base+0x142c>
   1ce84:	b	1ce88 <_obstack_memory_used@@Base+0xbf0>
   1ce88:	b	1d04c <_obstack_memory_used@@Base+0xdb4>
   1ce8c:	ldr	r0, [fp, #-16]
   1ce90:	cmp	r0, #0
   1ce94:	bcs	1cf94 <_obstack_memory_used@@Base+0xcfc>
   1ce98:	ldr	r0, [fp, #-12]
   1ce9c:	cmp	r0, #0
   1cea0:	bcs	1cf28 <_obstack_memory_used@@Base+0xc90>
   1cea4:	b	1cec4 <_obstack_memory_used@@Base+0xc2c>
   1cea8:	ldr	r0, [pc, #2096]	; 1d6e0 <_obstack_memory_used@@Base+0x1448>
   1ceac:	ldr	r1, [fp, #-12]
   1ceb0:	ldr	r2, [fp, #-16]
   1ceb4:	udiv	r0, r0, r2
   1ceb8:	cmp	r1, r0
   1cebc:	bcc	1d024 <_obstack_memory_used@@Base+0xd8c>
   1cec0:	b	1d038 <_obstack_memory_used@@Base+0xda0>
   1cec4:	b	1ced8 <_obstack_memory_used@@Base+0xc40>
   1cec8:	ldr	r0, [fp, #-16]
   1cecc:	cmp	r0, #1
   1ced0:	bcc	1cee8 <_obstack_memory_used@@Base+0xc50>
   1ced4:	b	1cef4 <_obstack_memory_used@@Base+0xc5c>
   1ced8:	ldr	r0, [fp, #-16]
   1cedc:	movw	r1, #0
   1cee0:	cmp	r1, r0
   1cee4:	bcs	1cef4 <_obstack_memory_used@@Base+0xc5c>
   1cee8:	movw	r0, #0
   1ceec:	str	r0, [fp, #-48]	; 0xffffffd0
   1cef0:	b	1cf0c <_obstack_memory_used@@Base+0xc74>
   1cef4:	ldr	r0, [pc, #2020]	; 1d6e0 <_obstack_memory_used@@Base+0x1448>
   1cef8:	ldr	r1, [fp, #-16]
   1cefc:	movw	r2, #0
   1cf00:	sub	r1, r2, r1
   1cf04:	udiv	r0, r0, r1
   1cf08:	str	r0, [fp, #-48]	; 0xffffffd0
   1cf0c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1cf10:	ldr	r1, [fp, #-12]
   1cf14:	mvn	r2, #0
   1cf18:	sub	r1, r2, r1
   1cf1c:	cmp	r0, r1
   1cf20:	bls	1d024 <_obstack_memory_used@@Base+0xd8c>
   1cf24:	b	1d038 <_obstack_memory_used@@Base+0xda0>
   1cf28:	ldr	r0, [fp, #-16]
   1cf2c:	cmn	r0, #1
   1cf30:	bne	1cf78 <_obstack_memory_used@@Base+0xce0>
   1cf34:	b	1cf50 <_obstack_memory_used@@Base+0xcb8>
   1cf38:	ldr	r0, [fp, #-12]
   1cf3c:	add	r0, r0, #-2147483648	; 0x80000000
   1cf40:	movw	r1, #0
   1cf44:	cmp	r1, r0
   1cf48:	bcc	1d024 <_obstack_memory_used@@Base+0xd8c>
   1cf4c:	b	1d038 <_obstack_memory_used@@Base+0xda0>
   1cf50:	ldr	r0, [fp, #-12]
   1cf54:	movw	r1, #0
   1cf58:	cmp	r1, r0
   1cf5c:	bcs	1d038 <_obstack_memory_used@@Base+0xda0>
   1cf60:	ldr	r0, [pc, #1912]	; 1d6e0 <_obstack_memory_used@@Base+0x1448>
   1cf64:	ldr	r1, [fp, #-12]
   1cf68:	sub	r1, r1, #1
   1cf6c:	cmp	r0, r1
   1cf70:	bcc	1d024 <_obstack_memory_used@@Base+0xd8c>
   1cf74:	b	1d038 <_obstack_memory_used@@Base+0xda0>
   1cf78:	ldr	r0, [pc, #1892]	; 1d6e4 <_obstack_memory_used@@Base+0x144c>
   1cf7c:	ldr	r1, [fp, #-16]
   1cf80:	udiv	r0, r0, r1
   1cf84:	ldr	r1, [fp, #-12]
   1cf88:	cmp	r0, r1
   1cf8c:	bcc	1d024 <_obstack_memory_used@@Base+0xd8c>
   1cf90:	b	1d038 <_obstack_memory_used@@Base+0xda0>
   1cf94:	ldr	r0, [fp, #-16]
   1cf98:	cmp	r0, #0
   1cf9c:	bne	1cfa4 <_obstack_memory_used@@Base+0xd0c>
   1cfa0:	b	1d038 <_obstack_memory_used@@Base+0xda0>
   1cfa4:	ldr	r0, [fp, #-12]
   1cfa8:	cmp	r0, #0
   1cfac:	bcs	1d00c <_obstack_memory_used@@Base+0xd74>
   1cfb0:	ldr	r0, [fp, #-12]
   1cfb4:	cmn	r0, #1
   1cfb8:	bne	1cff0 <_obstack_memory_used@@Base+0xd58>
   1cfbc:	b	1cfd8 <_obstack_memory_used@@Base+0xd40>
   1cfc0:	ldr	r0, [fp, #-16]
   1cfc4:	add	r0, r0, #-2147483648	; 0x80000000
   1cfc8:	movw	r1, #0
   1cfcc:	cmp	r1, r0
   1cfd0:	bcc	1d024 <_obstack_memory_used@@Base+0xd8c>
   1cfd4:	b	1d038 <_obstack_memory_used@@Base+0xda0>
   1cfd8:	ldr	r0, [pc, #1792]	; 1d6e0 <_obstack_memory_used@@Base+0x1448>
   1cfdc:	ldr	r1, [fp, #-16]
   1cfe0:	sub	r1, r1, #1
   1cfe4:	cmp	r0, r1
   1cfe8:	bcc	1d024 <_obstack_memory_used@@Base+0xd8c>
   1cfec:	b	1d038 <_obstack_memory_used@@Base+0xda0>
   1cff0:	ldr	r0, [pc, #1772]	; 1d6e4 <_obstack_memory_used@@Base+0x144c>
   1cff4:	ldr	r1, [fp, #-12]
   1cff8:	udiv	r0, r0, r1
   1cffc:	ldr	r1, [fp, #-16]
   1d000:	cmp	r0, r1
   1d004:	bcc	1d024 <_obstack_memory_used@@Base+0xd8c>
   1d008:	b	1d038 <_obstack_memory_used@@Base+0xda0>
   1d00c:	ldr	r0, [pc, #1740]	; 1d6e0 <_obstack_memory_used@@Base+0x1448>
   1d010:	ldr	r1, [fp, #-16]
   1d014:	udiv	r0, r0, r1
   1d018:	ldr	r1, [fp, #-12]
   1d01c:	cmp	r0, r1
   1d020:	bcs	1d038 <_obstack_memory_used@@Base+0xda0>
   1d024:	ldr	r0, [fp, #-12]
   1d028:	ldr	r1, [fp, #-16]
   1d02c:	mul	r0, r0, r1
   1d030:	str	r0, [fp, #-20]	; 0xffffffec
   1d034:	b	1d6ac <_obstack_memory_used@@Base+0x1414>
   1d038:	ldr	r0, [fp, #-12]
   1d03c:	ldr	r1, [fp, #-16]
   1d040:	mul	r0, r0, r1
   1d044:	str	r0, [fp, #-20]	; 0xffffffec
   1d048:	b	1d6c4 <_obstack_memory_used@@Base+0x142c>
   1d04c:	ldr	r0, [fp, #-16]
   1d050:	cmp	r0, #0
   1d054:	bcs	1d160 <_obstack_memory_used@@Base+0xec8>
   1d058:	ldr	r0, [fp, #-12]
   1d05c:	cmp	r0, #0
   1d060:	bcs	1d0e8 <_obstack_memory_used@@Base+0xe50>
   1d064:	b	1d084 <_obstack_memory_used@@Base+0xdec>
   1d068:	ldr	r0, [fp, #-12]
   1d06c:	ldr	r1, [fp, #-16]
   1d070:	mvn	r2, #0
   1d074:	udiv	r1, r2, r1
   1d078:	cmp	r0, r1
   1d07c:	bcc	1d1fc <_obstack_memory_used@@Base+0xf64>
   1d080:	b	1d210 <_obstack_memory_used@@Base+0xf78>
   1d084:	b	1d098 <_obstack_memory_used@@Base+0xe00>
   1d088:	ldr	r0, [fp, #-16]
   1d08c:	cmp	r0, #1
   1d090:	bcc	1d0a8 <_obstack_memory_used@@Base+0xe10>
   1d094:	b	1d0b4 <_obstack_memory_used@@Base+0xe1c>
   1d098:	ldr	r0, [fp, #-16]
   1d09c:	movw	r1, #0
   1d0a0:	cmp	r1, r0
   1d0a4:	bcs	1d0b4 <_obstack_memory_used@@Base+0xe1c>
   1d0a8:	movw	r0, #1
   1d0ac:	str	r0, [fp, #-52]	; 0xffffffcc
   1d0b0:	b	1d0cc <_obstack_memory_used@@Base+0xe34>
   1d0b4:	ldr	r0, [fp, #-16]
   1d0b8:	movw	r1, #0
   1d0bc:	sub	r0, r1, r0
   1d0c0:	mvn	r1, #0
   1d0c4:	udiv	r0, r1, r0
   1d0c8:	str	r0, [fp, #-52]	; 0xffffffcc
   1d0cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d0d0:	ldr	r1, [fp, #-12]
   1d0d4:	mvn	r2, #0
   1d0d8:	sub	r1, r2, r1
   1d0dc:	cmp	r0, r1
   1d0e0:	bls	1d1fc <_obstack_memory_used@@Base+0xf64>
   1d0e4:	b	1d210 <_obstack_memory_used@@Base+0xf78>
   1d0e8:	b	1d0f0 <_obstack_memory_used@@Base+0xe58>
   1d0ec:	b	1d0f4 <_obstack_memory_used@@Base+0xe5c>
   1d0f0:	b	1d144 <_obstack_memory_used@@Base+0xeac>
   1d0f4:	ldr	r0, [fp, #-16]
   1d0f8:	cmn	r0, #1
   1d0fc:	bne	1d144 <_obstack_memory_used@@Base+0xeac>
   1d100:	b	1d11c <_obstack_memory_used@@Base+0xe84>
   1d104:	ldr	r0, [fp, #-12]
   1d108:	add	r0, r0, #0
   1d10c:	movw	r1, #0
   1d110:	cmp	r1, r0
   1d114:	bcc	1d1fc <_obstack_memory_used@@Base+0xf64>
   1d118:	b	1d210 <_obstack_memory_used@@Base+0xf78>
   1d11c:	ldr	r0, [fp, #-12]
   1d120:	movw	r1, #0
   1d124:	cmp	r1, r0
   1d128:	bcs	1d210 <_obstack_memory_used@@Base+0xf78>
   1d12c:	ldr	r0, [fp, #-12]
   1d130:	sub	r0, r0, #1
   1d134:	mvn	r1, #0
   1d138:	cmp	r1, r0
   1d13c:	bcc	1d1fc <_obstack_memory_used@@Base+0xf64>
   1d140:	b	1d210 <_obstack_memory_used@@Base+0xf78>
   1d144:	ldr	r0, [fp, #-16]
   1d148:	movw	r1, #0
   1d14c:	udiv	r0, r1, r0
   1d150:	ldr	r1, [fp, #-12]
   1d154:	cmp	r0, r1
   1d158:	bcc	1d1fc <_obstack_memory_used@@Base+0xf64>
   1d15c:	b	1d210 <_obstack_memory_used@@Base+0xf78>
   1d160:	ldr	r0, [fp, #-16]
   1d164:	cmp	r0, #0
   1d168:	bne	1d170 <_obstack_memory_used@@Base+0xed8>
   1d16c:	b	1d210 <_obstack_memory_used@@Base+0xf78>
   1d170:	ldr	r0, [fp, #-12]
   1d174:	cmp	r0, #0
   1d178:	bcs	1d1e4 <_obstack_memory_used@@Base+0xf4c>
   1d17c:	b	1d184 <_obstack_memory_used@@Base+0xeec>
   1d180:	b	1d188 <_obstack_memory_used@@Base+0xef0>
   1d184:	b	1d1c8 <_obstack_memory_used@@Base+0xf30>
   1d188:	ldr	r0, [fp, #-12]
   1d18c:	cmn	r0, #1
   1d190:	bne	1d1c8 <_obstack_memory_used@@Base+0xf30>
   1d194:	b	1d1b0 <_obstack_memory_used@@Base+0xf18>
   1d198:	ldr	r0, [fp, #-16]
   1d19c:	add	r0, r0, #0
   1d1a0:	movw	r1, #0
   1d1a4:	cmp	r1, r0
   1d1a8:	bcc	1d1fc <_obstack_memory_used@@Base+0xf64>
   1d1ac:	b	1d210 <_obstack_memory_used@@Base+0xf78>
   1d1b0:	ldr	r0, [fp, #-16]
   1d1b4:	sub	r0, r0, #1
   1d1b8:	mvn	r1, #0
   1d1bc:	cmp	r1, r0
   1d1c0:	bcc	1d1fc <_obstack_memory_used@@Base+0xf64>
   1d1c4:	b	1d210 <_obstack_memory_used@@Base+0xf78>
   1d1c8:	ldr	r0, [fp, #-12]
   1d1cc:	movw	r1, #0
   1d1d0:	udiv	r0, r1, r0
   1d1d4:	ldr	r1, [fp, #-16]
   1d1d8:	cmp	r0, r1
   1d1dc:	bcc	1d1fc <_obstack_memory_used@@Base+0xf64>
   1d1e0:	b	1d210 <_obstack_memory_used@@Base+0xf78>
   1d1e4:	ldr	r0, [fp, #-16]
   1d1e8:	mvn	r1, #0
   1d1ec:	udiv	r0, r1, r0
   1d1f0:	ldr	r1, [fp, #-12]
   1d1f4:	cmp	r0, r1
   1d1f8:	bcs	1d210 <_obstack_memory_used@@Base+0xf78>
   1d1fc:	ldr	r0, [fp, #-12]
   1d200:	ldr	r1, [fp, #-16]
   1d204:	mul	r0, r0, r1
   1d208:	str	r0, [fp, #-20]	; 0xffffffec
   1d20c:	b	1d6ac <_obstack_memory_used@@Base+0x1414>
   1d210:	ldr	r0, [fp, #-12]
   1d214:	ldr	r1, [fp, #-16]
   1d218:	mul	r0, r0, r1
   1d21c:	str	r0, [fp, #-20]	; 0xffffffec
   1d220:	b	1d6c4 <_obstack_memory_used@@Base+0x142c>
   1d224:	b	1d478 <_obstack_memory_used@@Base+0x11e0>
   1d228:	ldr	r0, [fp, #-16]
   1d22c:	cmp	r0, #0
   1d230:	bcs	1d390 <_obstack_memory_used@@Base+0x10f8>
   1d234:	ldr	r0, [fp, #-12]
   1d238:	cmp	r0, #0
   1d23c:	bcs	1d30c <_obstack_memory_used@@Base+0x1074>
   1d240:	b	1d244 <_obstack_memory_used@@Base+0xfac>
   1d244:	ldr	r0, [fp, #-12]
   1d248:	ldr	r2, [fp, #-16]
   1d24c:	mvn	r1, #0
   1d250:	mvn	r3, #-2147483648	; 0x80000000
   1d254:	mov	ip, #0
   1d258:	str	r0, [fp, #-56]	; 0xffffffc8
   1d25c:	mov	r0, r1
   1d260:	mov	r1, r3
   1d264:	mov	r3, ip
   1d268:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   1d26c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d270:	subs	r0, r2, r0
   1d274:	rscs	r1, r1, #0
   1d278:	str	r0, [fp, #-60]	; 0xffffffc4
   1d27c:	str	r1, [fp, #-64]	; 0xffffffc0
   1d280:	blt	1d450 <_obstack_memory_used@@Base+0x11b8>
   1d284:	b	1d464 <_obstack_memory_used@@Base+0x11cc>
   1d288:	b	1d29c <_obstack_memory_used@@Base+0x1004>
   1d28c:	ldr	r0, [fp, #-16]
   1d290:	cmp	r0, #1
   1d294:	bcc	1d2ac <_obstack_memory_used@@Base+0x1014>
   1d298:	b	1d2c0 <_obstack_memory_used@@Base+0x1028>
   1d29c:	ldr	r0, [fp, #-16]
   1d2a0:	movw	r1, #0
   1d2a4:	cmp	r1, r0
   1d2a8:	bcs	1d2c0 <_obstack_memory_used@@Base+0x1028>
   1d2ac:	mov	r0, #0
   1d2b0:	mvn	r1, #0
   1d2b4:	str	r1, [fp, #-68]	; 0xffffffbc
   1d2b8:	str	r0, [fp, #-72]	; 0xffffffb8
   1d2bc:	b	1d2e4 <_obstack_memory_used@@Base+0x104c>
   1d2c0:	ldr	r0, [fp, #-16]
   1d2c4:	rsb	r2, r0, #0
   1d2c8:	mvn	r0, #0
   1d2cc:	mvn	r1, #-2147483648	; 0x80000000
   1d2d0:	mov	r3, #0
   1d2d4:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   1d2d8:	str	r0, [fp, #-68]	; 0xffffffbc
   1d2dc:	str	r1, [fp, #-72]	; 0xffffffb8
   1d2e0:	b	1d2e4 <_obstack_memory_used@@Base+0x104c>
   1d2e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1d2e8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1d2ec:	ldr	r2, [fp, #-12]
   1d2f0:	mvn	r2, r2
   1d2f4:	subs	r1, r2, r1
   1d2f8:	rscs	r0, r0, #0
   1d2fc:	str	r1, [fp, #-76]	; 0xffffffb4
   1d300:	str	r0, [fp, #-80]	; 0xffffffb0
   1d304:	bge	1d450 <_obstack_memory_used@@Base+0x11b8>
   1d308:	b	1d464 <_obstack_memory_used@@Base+0x11cc>
   1d30c:	ldr	r0, [fp, #-16]
   1d310:	cmn	r0, #1
   1d314:	bne	1d35c <_obstack_memory_used@@Base+0x10c4>
   1d318:	b	1d33c <_obstack_memory_used@@Base+0x10a4>
   1d31c:	ldr	r0, [fp, #-12]
   1d320:	rsbs	r0, r0, #0
   1d324:	mov	r1, #0
   1d328:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d32c:	str	r0, [fp, #-84]	; 0xffffffac
   1d330:	str	r1, [sp, #88]	; 0x58
   1d334:	blt	1d450 <_obstack_memory_used@@Base+0x11b8>
   1d338:	b	1d464 <_obstack_memory_used@@Base+0x11cc>
   1d33c:	ldr	r0, [fp, #-12]
   1d340:	movw	r1, #0
   1d344:	cmp	r1, r0
   1d348:	bcs	1d464 <_obstack_memory_used@@Base+0x11cc>
   1d34c:	mov	r0, #0
   1d350:	cmp	r0, #0
   1d354:	bne	1d450 <_obstack_memory_used@@Base+0x11b8>
   1d358:	b	1d464 <_obstack_memory_used@@Base+0x11cc>
   1d35c:	ldr	r2, [fp, #-16]
   1d360:	mov	r1, #-2147483648	; 0x80000000
   1d364:	mov	r0, #0
   1d368:	str	r0, [sp, #84]	; 0x54
   1d36c:	ldr	r3, [sp, #84]	; 0x54
   1d370:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   1d374:	ldr	r2, [fp, #-12]
   1d378:	subs	r0, r0, r2
   1d37c:	sbcs	r1, r1, #0
   1d380:	str	r0, [sp, #80]	; 0x50
   1d384:	str	r1, [sp, #76]	; 0x4c
   1d388:	blt	1d450 <_obstack_memory_used@@Base+0x11b8>
   1d38c:	b	1d464 <_obstack_memory_used@@Base+0x11cc>
   1d390:	ldr	r0, [fp, #-16]
   1d394:	cmp	r0, #0
   1d398:	bne	1d3a0 <_obstack_memory_used@@Base+0x1108>
   1d39c:	b	1d464 <_obstack_memory_used@@Base+0x11cc>
   1d3a0:	ldr	r0, [fp, #-12]
   1d3a4:	cmp	r0, #0
   1d3a8:	bcs	1d420 <_obstack_memory_used@@Base+0x1188>
   1d3ac:	ldr	r0, [fp, #-12]
   1d3b0:	cmn	r0, #1
   1d3b4:	bne	1d3ec <_obstack_memory_used@@Base+0x1154>
   1d3b8:	b	1d3dc <_obstack_memory_used@@Base+0x1144>
   1d3bc:	ldr	r0, [fp, #-16]
   1d3c0:	rsbs	r0, r0, #0
   1d3c4:	mov	r1, #0
   1d3c8:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1d3cc:	str	r0, [sp, #72]	; 0x48
   1d3d0:	str	r1, [sp, #68]	; 0x44
   1d3d4:	blt	1d450 <_obstack_memory_used@@Base+0x11b8>
   1d3d8:	b	1d464 <_obstack_memory_used@@Base+0x11cc>
   1d3dc:	mov	r0, #0
   1d3e0:	cmp	r0, #0
   1d3e4:	bne	1d450 <_obstack_memory_used@@Base+0x11b8>
   1d3e8:	b	1d464 <_obstack_memory_used@@Base+0x11cc>
   1d3ec:	ldr	r2, [fp, #-12]
   1d3f0:	mov	r1, #-2147483648	; 0x80000000
   1d3f4:	mov	r0, #0
   1d3f8:	str	r0, [sp, #64]	; 0x40
   1d3fc:	ldr	r3, [sp, #64]	; 0x40
   1d400:	bl	1e248 <_obstack_memory_used@@Base+0x1fb0>
   1d404:	ldr	r2, [fp, #-16]
   1d408:	subs	r0, r0, r2
   1d40c:	sbcs	r1, r1, #0
   1d410:	str	r0, [sp, #60]	; 0x3c
   1d414:	str	r1, [sp, #56]	; 0x38
   1d418:	blt	1d450 <_obstack_memory_used@@Base+0x11b8>
   1d41c:	b	1d464 <_obstack_memory_used@@Base+0x11cc>
   1d420:	ldr	r2, [fp, #-16]
   1d424:	mvn	r0, #0
   1d428:	mvn	r1, #-2147483648	; 0x80000000
   1d42c:	mov	r3, #0
   1d430:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   1d434:	ldr	r2, [fp, #-12]
   1d438:	subs	r0, r0, r2
   1d43c:	sbcs	r1, r1, #0
   1d440:	str	r0, [sp, #52]	; 0x34
   1d444:	str	r1, [sp, #48]	; 0x30
   1d448:	bge	1d464 <_obstack_memory_used@@Base+0x11cc>
   1d44c:	b	1d450 <_obstack_memory_used@@Base+0x11b8>
   1d450:	ldr	r0, [fp, #-12]
   1d454:	ldr	r1, [fp, #-16]
   1d458:	mul	r0, r0, r1
   1d45c:	str	r0, [fp, #-20]	; 0xffffffec
   1d460:	b	1d6ac <_obstack_memory_used@@Base+0x1414>
   1d464:	ldr	r0, [fp, #-12]
   1d468:	ldr	r1, [fp, #-16]
   1d46c:	mul	r0, r0, r1
   1d470:	str	r0, [fp, #-20]	; 0xffffffec
   1d474:	b	1d6c4 <_obstack_memory_used@@Base+0x142c>
   1d478:	ldr	r0, [fp, #-16]
   1d47c:	cmp	r0, #0
   1d480:	bcs	1d5cc <_obstack_memory_used@@Base+0x1334>
   1d484:	ldr	r0, [fp, #-12]
   1d488:	cmp	r0, #0
   1d48c:	bcs	1d554 <_obstack_memory_used@@Base+0x12bc>
   1d490:	b	1d4cc <_obstack_memory_used@@Base+0x1234>
   1d494:	ldr	r0, [fp, #-12]
   1d498:	ldr	r2, [fp, #-16]
   1d49c:	mvn	r1, #0
   1d4a0:	mov	r3, #0
   1d4a4:	str	r0, [sp, #44]	; 0x2c
   1d4a8:	mov	r0, r1
   1d4ac:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   1d4b0:	ldr	r2, [sp, #44]	; 0x2c
   1d4b4:	subs	r0, r2, r0
   1d4b8:	rscs	r1, r1, #0
   1d4bc:	str	r0, [sp, #40]	; 0x28
   1d4c0:	str	r1, [sp, #36]	; 0x24
   1d4c4:	bcc	1d684 <_obstack_memory_used@@Base+0x13ec>
   1d4c8:	b	1d698 <_obstack_memory_used@@Base+0x1400>
   1d4cc:	b	1d4e0 <_obstack_memory_used@@Base+0x1248>
   1d4d0:	ldr	r0, [fp, #-16]
   1d4d4:	cmp	r0, #1
   1d4d8:	bcc	1d4f0 <_obstack_memory_used@@Base+0x1258>
   1d4dc:	b	1d504 <_obstack_memory_used@@Base+0x126c>
   1d4e0:	ldr	r0, [fp, #-16]
   1d4e4:	movw	r1, #0
   1d4e8:	cmp	r1, r0
   1d4ec:	bcs	1d504 <_obstack_memory_used@@Base+0x126c>
   1d4f0:	mov	r0, #1
   1d4f4:	mvn	r1, #0
   1d4f8:	str	r1, [sp, #32]
   1d4fc:	str	r0, [sp, #28]
   1d500:	b	1d52c <_obstack_memory_used@@Base+0x1294>
   1d504:	ldr	r0, [fp, #-16]
   1d508:	rsb	r2, r0, #0
   1d50c:	mvn	r0, #0
   1d510:	mov	r3, #0
   1d514:	str	r0, [sp, #24]
   1d518:	ldr	r1, [sp, #24]
   1d51c:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   1d520:	str	r0, [sp, #32]
   1d524:	str	r1, [sp, #28]
   1d528:	b	1d52c <_obstack_memory_used@@Base+0x1294>
   1d52c:	ldr	r0, [sp, #28]
   1d530:	ldr	r1, [sp, #32]
   1d534:	ldr	r2, [fp, #-12]
   1d538:	mvn	r2, r2
   1d53c:	subs	r1, r2, r1
   1d540:	rscs	r0, r0, #0
   1d544:	str	r1, [sp, #20]
   1d548:	str	r0, [sp, #16]
   1d54c:	bcs	1d684 <_obstack_memory_used@@Base+0x13ec>
   1d550:	b	1d698 <_obstack_memory_used@@Base+0x1400>
   1d554:	b	1d55c <_obstack_memory_used@@Base+0x12c4>
   1d558:	b	1d560 <_obstack_memory_used@@Base+0x12c8>
   1d55c:	b	1d5b0 <_obstack_memory_used@@Base+0x1318>
   1d560:	ldr	r0, [fp, #-16]
   1d564:	cmn	r0, #1
   1d568:	bne	1d5b0 <_obstack_memory_used@@Base+0x1318>
   1d56c:	b	1d588 <_obstack_memory_used@@Base+0x12f0>
   1d570:	ldr	r0, [fp, #-12]
   1d574:	add	r0, r0, #0
   1d578:	movw	r1, #0
   1d57c:	cmp	r1, r0
   1d580:	bcc	1d684 <_obstack_memory_used@@Base+0x13ec>
   1d584:	b	1d698 <_obstack_memory_used@@Base+0x1400>
   1d588:	ldr	r0, [fp, #-12]
   1d58c:	movw	r1, #0
   1d590:	cmp	r1, r0
   1d594:	bcs	1d698 <_obstack_memory_used@@Base+0x1400>
   1d598:	ldr	r0, [fp, #-12]
   1d59c:	sub	r0, r0, #1
   1d5a0:	mvn	r1, #0
   1d5a4:	cmp	r1, r0
   1d5a8:	bcc	1d684 <_obstack_memory_used@@Base+0x13ec>
   1d5ac:	b	1d698 <_obstack_memory_used@@Base+0x1400>
   1d5b0:	ldr	r0, [fp, #-16]
   1d5b4:	movw	r1, #0
   1d5b8:	udiv	r0, r1, r0
   1d5bc:	ldr	r1, [fp, #-12]
   1d5c0:	cmp	r0, r1
   1d5c4:	bcc	1d684 <_obstack_memory_used@@Base+0x13ec>
   1d5c8:	b	1d698 <_obstack_memory_used@@Base+0x1400>
   1d5cc:	ldr	r0, [fp, #-16]
   1d5d0:	cmp	r0, #0
   1d5d4:	bne	1d5dc <_obstack_memory_used@@Base+0x1344>
   1d5d8:	b	1d698 <_obstack_memory_used@@Base+0x1400>
   1d5dc:	ldr	r0, [fp, #-12]
   1d5e0:	cmp	r0, #0
   1d5e4:	bcs	1d650 <_obstack_memory_used@@Base+0x13b8>
   1d5e8:	b	1d5f0 <_obstack_memory_used@@Base+0x1358>
   1d5ec:	b	1d5f4 <_obstack_memory_used@@Base+0x135c>
   1d5f0:	b	1d634 <_obstack_memory_used@@Base+0x139c>
   1d5f4:	ldr	r0, [fp, #-12]
   1d5f8:	cmn	r0, #1
   1d5fc:	bne	1d634 <_obstack_memory_used@@Base+0x139c>
   1d600:	b	1d61c <_obstack_memory_used@@Base+0x1384>
   1d604:	ldr	r0, [fp, #-16]
   1d608:	add	r0, r0, #0
   1d60c:	movw	r1, #0
   1d610:	cmp	r1, r0
   1d614:	bcc	1d684 <_obstack_memory_used@@Base+0x13ec>
   1d618:	b	1d698 <_obstack_memory_used@@Base+0x1400>
   1d61c:	ldr	r0, [fp, #-16]
   1d620:	sub	r0, r0, #1
   1d624:	mvn	r1, #0
   1d628:	cmp	r1, r0
   1d62c:	bcc	1d684 <_obstack_memory_used@@Base+0x13ec>
   1d630:	b	1d698 <_obstack_memory_used@@Base+0x1400>
   1d634:	ldr	r0, [fp, #-12]
   1d638:	movw	r1, #0
   1d63c:	udiv	r0, r1, r0
   1d640:	ldr	r1, [fp, #-16]
   1d644:	cmp	r0, r1
   1d648:	bcc	1d684 <_obstack_memory_used@@Base+0x13ec>
   1d64c:	b	1d698 <_obstack_memory_used@@Base+0x1400>
   1d650:	ldr	r2, [fp, #-16]
   1d654:	mvn	r0, #0
   1d658:	mov	r3, #0
   1d65c:	str	r0, [sp, #12]
   1d660:	ldr	r1, [sp, #12]
   1d664:	bl	1e31c <_obstack_memory_used@@Base+0x2084>
   1d668:	ldr	r2, [fp, #-12]
   1d66c:	subs	r0, r0, r2
   1d670:	sbcs	r1, r1, #0
   1d674:	str	r0, [sp, #8]
   1d678:	str	r1, [sp, #4]
   1d67c:	bcs	1d698 <_obstack_memory_used@@Base+0x1400>
   1d680:	b	1d684 <_obstack_memory_used@@Base+0x13ec>
   1d684:	ldr	r0, [fp, #-12]
   1d688:	ldr	r1, [fp, #-16]
   1d68c:	mul	r0, r0, r1
   1d690:	str	r0, [fp, #-20]	; 0xffffffec
   1d694:	b	1d6ac <_obstack_memory_used@@Base+0x1414>
   1d698:	ldr	r0, [fp, #-12]
   1d69c:	ldr	r1, [fp, #-16]
   1d6a0:	mul	r0, r0, r1
   1d6a4:	str	r0, [fp, #-20]	; 0xffffffec
   1d6a8:	b	1d6c4 <_obstack_memory_used@@Base+0x142c>
   1d6ac:	bl	114e0 <__errno_location@plt>
   1d6b0:	movw	lr, #12
   1d6b4:	str	lr, [r0]
   1d6b8:	movw	r0, #0
   1d6bc:	str	r0, [fp, #-4]
   1d6c0:	b	1d6d4 <_obstack_memory_used@@Base+0x143c>
   1d6c4:	ldr	r0, [fp, #-8]
   1d6c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1d6cc:	bl	1b668 <__assert_fail@plt+0xa08c>
   1d6d0:	str	r0, [fp, #-4]
   1d6d4:	ldr	r0, [fp, #-4]
   1d6d8:	mov	sp, fp
   1d6dc:	pop	{fp, pc}
   1d6e0:	svcvc	0x00ffffff
   1d6e4:	andhi	r0, r0, r0
   1d6e8:			; <UNDEFINED> instruction: 0xffff8000
   1d6ec:	push	{fp, lr}
   1d6f0:	mov	fp, sp
   1d6f4:	sub	sp, sp, #16
   1d6f8:	str	r0, [fp, #-4]
   1d6fc:	str	r1, [sp, #8]
   1d700:	str	r2, [sp, #4]
   1d704:	ldr	r0, [fp, #-4]
   1d708:	ldr	r1, [sp, #8]
   1d70c:	ldr	r2, [sp, #4]
   1d710:	bl	1d71c <_obstack_memory_used@@Base+0x1484>
   1d714:	mov	sp, fp
   1d718:	pop	{fp, pc}
   1d71c:	push	{fp, lr}
   1d720:	mov	fp, sp
   1d724:	sub	sp, sp, #24
   1d728:	str	r0, [fp, #-8]
   1d72c:	str	r1, [sp, #12]
   1d730:	str	r2, [sp, #8]
   1d734:	ldr	r0, [fp, #-8]
   1d738:	bl	1d81c <_obstack_memory_used@@Base+0x1584>
   1d73c:	str	r0, [sp, #4]
   1d740:	ldr	r0, [sp, #4]
   1d744:	movw	r1, #0
   1d748:	cmp	r0, r1
   1d74c:	bne	1d774 <_obstack_memory_used@@Base+0x14dc>
   1d750:	ldr	r0, [sp, #8]
   1d754:	cmp	r0, #0
   1d758:	bls	1d768 <_obstack_memory_used@@Base+0x14d0>
   1d75c:	ldr	r0, [sp, #12]
   1d760:	movw	r1, #0
   1d764:	strb	r1, [r0]
   1d768:	movw	r0, #22
   1d76c:	str	r0, [fp, #-4]
   1d770:	b	1d7f0 <_obstack_memory_used@@Base+0x1558>
   1d774:	ldr	r0, [sp, #4]
   1d778:	bl	114b0 <strlen@plt>
   1d77c:	str	r0, [sp]
   1d780:	ldr	r0, [sp]
   1d784:	ldr	lr, [sp, #8]
   1d788:	cmp	r0, lr
   1d78c:	bcs	1d7b0 <_obstack_memory_used@@Base+0x1518>
   1d790:	ldr	r0, [sp, #12]
   1d794:	ldr	r1, [sp, #4]
   1d798:	ldr	r2, [sp]
   1d79c:	add	r2, r2, #1
   1d7a0:	bl	11354 <memcpy@plt>
   1d7a4:	movw	r0, #0
   1d7a8:	str	r0, [fp, #-4]
   1d7ac:	b	1d7f0 <_obstack_memory_used@@Base+0x1558>
   1d7b0:	ldr	r0, [sp, #8]
   1d7b4:	cmp	r0, #0
   1d7b8:	bls	1d7e8 <_obstack_memory_used@@Base+0x1550>
   1d7bc:	ldr	r0, [sp, #12]
   1d7c0:	ldr	r1, [sp, #4]
   1d7c4:	ldr	r2, [sp, #8]
   1d7c8:	sub	r2, r2, #1
   1d7cc:	bl	11354 <memcpy@plt>
   1d7d0:	ldr	r0, [sp, #12]
   1d7d4:	ldr	r1, [sp, #8]
   1d7d8:	sub	r1, r1, #1
   1d7dc:	add	r0, r0, r1
   1d7e0:	movw	r1, #0
   1d7e4:	strb	r1, [r0]
   1d7e8:	movw	r0, #34	; 0x22
   1d7ec:	str	r0, [fp, #-4]
   1d7f0:	ldr	r0, [fp, #-4]
   1d7f4:	mov	sp, fp
   1d7f8:	pop	{fp, pc}
   1d7fc:	push	{fp, lr}
   1d800:	mov	fp, sp
   1d804:	sub	sp, sp, #8
   1d808:	str	r0, [sp, #4]
   1d80c:	ldr	r0, [sp, #4]
   1d810:	bl	1d81c <_obstack_memory_used@@Base+0x1584>
   1d814:	mov	sp, fp
   1d818:	pop	{fp, pc}
   1d81c:	push	{fp, lr}
   1d820:	mov	fp, sp
   1d824:	sub	sp, sp, #8
   1d828:	str	r0, [sp, #4]
   1d82c:	ldr	r0, [sp, #4]
   1d830:	movw	r1, #0
   1d834:	bl	1154c <setlocale@plt>
   1d838:	str	r0, [sp]
   1d83c:	ldr	r0, [sp]
   1d840:	mov	sp, fp
   1d844:	pop	{fp, pc}
   1d848:	sub	sp, sp, #12
   1d84c:	str	r0, [sp, #4]
   1d850:	ldr	r0, [sp, #4]
   1d854:	sub	r1, r0, #48	; 0x30
   1d858:	cmp	r1, #10
   1d85c:	str	r0, [sp]
   1d860:	bcc	1d890 <_obstack_memory_used@@Base+0x15f8>
   1d864:	b	1d868 <_obstack_memory_used@@Base+0x15d0>
   1d868:	ldr	r0, [sp]
   1d86c:	sub	r1, r0, #65	; 0x41
   1d870:	cmp	r1, #26
   1d874:	bcc	1d890 <_obstack_memory_used@@Base+0x15f8>
   1d878:	b	1d87c <_obstack_memory_used@@Base+0x15e4>
   1d87c:	ldr	r0, [sp]
   1d880:	sub	r1, r0, #97	; 0x61
   1d884:	cmp	r1, #25
   1d888:	bhi	1d8a0 <_obstack_memory_used@@Base+0x1608>
   1d88c:	b	1d890 <_obstack_memory_used@@Base+0x15f8>
   1d890:	movw	r0, #1
   1d894:	and	r0, r0, #1
   1d898:	strb	r0, [sp, #11]
   1d89c:	b	1d8ac <_obstack_memory_used@@Base+0x1614>
   1d8a0:	movw	r0, #0
   1d8a4:	and	r0, r0, #1
   1d8a8:	strb	r0, [sp, #11]
   1d8ac:	ldrb	r0, [sp, #11]
   1d8b0:	and	r0, r0, #1
   1d8b4:	add	sp, sp, #12
   1d8b8:	bx	lr
   1d8bc:	sub	sp, sp, #12
   1d8c0:	str	r0, [sp, #4]
   1d8c4:	ldr	r0, [sp, #4]
   1d8c8:	sub	r1, r0, #65	; 0x41
   1d8cc:	cmp	r1, #26
   1d8d0:	str	r0, [sp]
   1d8d4:	bcc	1d8f0 <_obstack_memory_used@@Base+0x1658>
   1d8d8:	b	1d8dc <_obstack_memory_used@@Base+0x1644>
   1d8dc:	ldr	r0, [sp]
   1d8e0:	sub	r1, r0, #97	; 0x61
   1d8e4:	cmp	r1, #25
   1d8e8:	bhi	1d900 <_obstack_memory_used@@Base+0x1668>
   1d8ec:	b	1d8f0 <_obstack_memory_used@@Base+0x1658>
   1d8f0:	movw	r0, #1
   1d8f4:	and	r0, r0, #1
   1d8f8:	strb	r0, [sp, #11]
   1d8fc:	b	1d90c <_obstack_memory_used@@Base+0x1674>
   1d900:	movw	r0, #0
   1d904:	and	r0, r0, #1
   1d908:	strb	r0, [sp, #11]
   1d90c:	ldrb	r0, [sp, #11]
   1d910:	and	r0, r0, #1
   1d914:	add	sp, sp, #12
   1d918:	bx	lr
   1d91c:	sub	sp, sp, #8
   1d920:	str	r0, [sp]
   1d924:	ldr	r0, [sp]
   1d928:	cmp	r0, #127	; 0x7f
   1d92c:	bhi	1d944 <_obstack_memory_used@@Base+0x16ac>
   1d930:	b	1d934 <_obstack_memory_used@@Base+0x169c>
   1d934:	movw	r0, #1
   1d938:	and	r0, r0, #1
   1d93c:	strb	r0, [sp, #7]
   1d940:	b	1d950 <_obstack_memory_used@@Base+0x16b8>
   1d944:	movw	r0, #0
   1d948:	and	r0, r0, #1
   1d94c:	strb	r0, [sp, #7]
   1d950:	ldrb	r0, [sp, #7]
   1d954:	and	r0, r0, #1
   1d958:	add	sp, sp, #8
   1d95c:	bx	lr
   1d960:	sub	sp, sp, #8
   1d964:	str	r0, [sp, #4]
   1d968:	ldr	r0, [sp, #4]
   1d96c:	cmp	r0, #32
   1d970:	movw	r0, #1
   1d974:	str	r0, [sp]
   1d978:	beq	1d990 <_obstack_memory_used@@Base+0x16f8>
   1d97c:	ldr	r0, [sp, #4]
   1d980:	cmp	r0, #9
   1d984:	movw	r0, #0
   1d988:	moveq	r0, #1
   1d98c:	str	r0, [sp]
   1d990:	ldr	r0, [sp]
   1d994:	and	r0, r0, #1
   1d998:	add	sp, sp, #8
   1d99c:	bx	lr
   1d9a0:	sub	sp, sp, #12
   1d9a4:	str	r0, [sp, #4]
   1d9a8:	ldr	r0, [sp, #4]
   1d9ac:	cmp	r0, #32
   1d9b0:	str	r0, [sp]
   1d9b4:	bcc	1d9cc <_obstack_memory_used@@Base+0x1734>
   1d9b8:	b	1d9bc <_obstack_memory_used@@Base+0x1724>
   1d9bc:	ldr	r0, [sp]
   1d9c0:	cmp	r0, #127	; 0x7f
   1d9c4:	bne	1d9dc <_obstack_memory_used@@Base+0x1744>
   1d9c8:	b	1d9cc <_obstack_memory_used@@Base+0x1734>
   1d9cc:	movw	r0, #1
   1d9d0:	and	r0, r0, #1
   1d9d4:	strb	r0, [sp, #11]
   1d9d8:	b	1d9e8 <_obstack_memory_used@@Base+0x1750>
   1d9dc:	movw	r0, #0
   1d9e0:	and	r0, r0, #1
   1d9e4:	strb	r0, [sp, #11]
   1d9e8:	ldrb	r0, [sp, #11]
   1d9ec:	and	r0, r0, #1
   1d9f0:	add	sp, sp, #12
   1d9f4:	bx	lr
   1d9f8:	sub	sp, sp, #8
   1d9fc:	str	r0, [sp]
   1da00:	ldr	r0, [sp]
   1da04:	sub	r0, r0, #48	; 0x30
   1da08:	cmp	r0, #9
   1da0c:	bhi	1da24 <_obstack_memory_used@@Base+0x178c>
   1da10:	b	1da14 <_obstack_memory_used@@Base+0x177c>
   1da14:	movw	r0, #1
   1da18:	and	r0, r0, #1
   1da1c:	strb	r0, [sp, #7]
   1da20:	b	1da30 <_obstack_memory_used@@Base+0x1798>
   1da24:	movw	r0, #0
   1da28:	and	r0, r0, #1
   1da2c:	strb	r0, [sp, #7]
   1da30:	ldrb	r0, [sp, #7]
   1da34:	and	r0, r0, #1
   1da38:	add	sp, sp, #8
   1da3c:	bx	lr
   1da40:	sub	sp, sp, #8
   1da44:	str	r0, [sp]
   1da48:	ldr	r0, [sp]
   1da4c:	sub	r0, r0, #33	; 0x21
   1da50:	cmp	r0, #93	; 0x5d
   1da54:	bhi	1da6c <_obstack_memory_used@@Base+0x17d4>
   1da58:	b	1da5c <_obstack_memory_used@@Base+0x17c4>
   1da5c:	movw	r0, #1
   1da60:	and	r0, r0, #1
   1da64:	strb	r0, [sp, #7]
   1da68:	b	1da78 <_obstack_memory_used@@Base+0x17e0>
   1da6c:	movw	r0, #0
   1da70:	and	r0, r0, #1
   1da74:	strb	r0, [sp, #7]
   1da78:	ldrb	r0, [sp, #7]
   1da7c:	and	r0, r0, #1
   1da80:	add	sp, sp, #8
   1da84:	bx	lr
   1da88:	sub	sp, sp, #8
   1da8c:	str	r0, [sp]
   1da90:	ldr	r0, [sp]
   1da94:	sub	r0, r0, #97	; 0x61
   1da98:	cmp	r0, #25
   1da9c:	bhi	1dab4 <_obstack_memory_used@@Base+0x181c>
   1daa0:	b	1daa4 <_obstack_memory_used@@Base+0x180c>
   1daa4:	movw	r0, #1
   1daa8:	and	r0, r0, #1
   1daac:	strb	r0, [sp, #7]
   1dab0:	b	1dac0 <_obstack_memory_used@@Base+0x1828>
   1dab4:	movw	r0, #0
   1dab8:	and	r0, r0, #1
   1dabc:	strb	r0, [sp, #7]
   1dac0:	ldrb	r0, [sp, #7]
   1dac4:	and	r0, r0, #1
   1dac8:	add	sp, sp, #8
   1dacc:	bx	lr
   1dad0:	sub	sp, sp, #8
   1dad4:	str	r0, [sp]
   1dad8:	ldr	r0, [sp]
   1dadc:	sub	r0, r0, #32
   1dae0:	cmp	r0, #94	; 0x5e
   1dae4:	bhi	1dafc <_obstack_memory_used@@Base+0x1864>
   1dae8:	b	1daec <_obstack_memory_used@@Base+0x1854>
   1daec:	movw	r0, #1
   1daf0:	and	r0, r0, #1
   1daf4:	strb	r0, [sp, #7]
   1daf8:	b	1db08 <_obstack_memory_used@@Base+0x1870>
   1dafc:	movw	r0, #0
   1db00:	and	r0, r0, #1
   1db04:	strb	r0, [sp, #7]
   1db08:	ldrb	r0, [sp, #7]
   1db0c:	and	r0, r0, #1
   1db10:	add	sp, sp, #8
   1db14:	bx	lr
   1db18:	sub	sp, sp, #12
   1db1c:	str	r0, [sp, #4]
   1db20:	ldr	r0, [sp, #4]
   1db24:	sub	r0, r0, #33	; 0x21
   1db28:	cmp	r0, #93	; 0x5d
   1db2c:	str	r0, [sp]
   1db30:	bhi	1dccc <_obstack_memory_used@@Base+0x1a34>
   1db34:	add	r0, pc, #8
   1db38:	ldr	r1, [sp]
   1db3c:	ldr	r0, [r0, r1, lsl #2]
   1db40:	mov	pc, r0
   1db44:			; <UNDEFINED> instruction: 0x0001dcbc
   1db48:			; <UNDEFINED> instruction: 0x0001dcbc
   1db4c:			; <UNDEFINED> instruction: 0x0001dcbc
   1db50:			; <UNDEFINED> instruction: 0x0001dcbc
   1db54:			; <UNDEFINED> instruction: 0x0001dcbc
   1db58:			; <UNDEFINED> instruction: 0x0001dcbc
   1db5c:			; <UNDEFINED> instruction: 0x0001dcbc
   1db60:			; <UNDEFINED> instruction: 0x0001dcbc
   1db64:			; <UNDEFINED> instruction: 0x0001dcbc
   1db68:			; <UNDEFINED> instruction: 0x0001dcbc
   1db6c:			; <UNDEFINED> instruction: 0x0001dcbc
   1db70:			; <UNDEFINED> instruction: 0x0001dcbc
   1db74:			; <UNDEFINED> instruction: 0x0001dcbc
   1db78:			; <UNDEFINED> instruction: 0x0001dcbc
   1db7c:			; <UNDEFINED> instruction: 0x0001dcbc
   1db80:	andeq	sp, r1, ip, asr #25
   1db84:	andeq	sp, r1, ip, asr #25
   1db88:	andeq	sp, r1, ip, asr #25
   1db8c:	andeq	sp, r1, ip, asr #25
   1db90:	andeq	sp, r1, ip, asr #25
   1db94:	andeq	sp, r1, ip, asr #25
   1db98:	andeq	sp, r1, ip, asr #25
   1db9c:	andeq	sp, r1, ip, asr #25
   1dba0:	andeq	sp, r1, ip, asr #25
   1dba4:	andeq	sp, r1, ip, asr #25
   1dba8:			; <UNDEFINED> instruction: 0x0001dcbc
   1dbac:			; <UNDEFINED> instruction: 0x0001dcbc
   1dbb0:			; <UNDEFINED> instruction: 0x0001dcbc
   1dbb4:			; <UNDEFINED> instruction: 0x0001dcbc
   1dbb8:			; <UNDEFINED> instruction: 0x0001dcbc
   1dbbc:			; <UNDEFINED> instruction: 0x0001dcbc
   1dbc0:			; <UNDEFINED> instruction: 0x0001dcbc
   1dbc4:	andeq	sp, r1, ip, asr #25
   1dbc8:	andeq	sp, r1, ip, asr #25
   1dbcc:	andeq	sp, r1, ip, asr #25
   1dbd0:	andeq	sp, r1, ip, asr #25
   1dbd4:	andeq	sp, r1, ip, asr #25
   1dbd8:	andeq	sp, r1, ip, asr #25
   1dbdc:	andeq	sp, r1, ip, asr #25
   1dbe0:	andeq	sp, r1, ip, asr #25
   1dbe4:	andeq	sp, r1, ip, asr #25
   1dbe8:	andeq	sp, r1, ip, asr #25
   1dbec:	andeq	sp, r1, ip, asr #25
   1dbf0:	andeq	sp, r1, ip, asr #25
   1dbf4:	andeq	sp, r1, ip, asr #25
   1dbf8:	andeq	sp, r1, ip, asr #25
   1dbfc:	andeq	sp, r1, ip, asr #25
   1dc00:	andeq	sp, r1, ip, asr #25
   1dc04:	andeq	sp, r1, ip, asr #25
   1dc08:	andeq	sp, r1, ip, asr #25
   1dc0c:	andeq	sp, r1, ip, asr #25
   1dc10:	andeq	sp, r1, ip, asr #25
   1dc14:	andeq	sp, r1, ip, asr #25
   1dc18:	andeq	sp, r1, ip, asr #25
   1dc1c:	andeq	sp, r1, ip, asr #25
   1dc20:	andeq	sp, r1, ip, asr #25
   1dc24:	andeq	sp, r1, ip, asr #25
   1dc28:	andeq	sp, r1, ip, asr #25
   1dc2c:			; <UNDEFINED> instruction: 0x0001dcbc
   1dc30:			; <UNDEFINED> instruction: 0x0001dcbc
   1dc34:			; <UNDEFINED> instruction: 0x0001dcbc
   1dc38:			; <UNDEFINED> instruction: 0x0001dcbc
   1dc3c:			; <UNDEFINED> instruction: 0x0001dcbc
   1dc40:			; <UNDEFINED> instruction: 0x0001dcbc
   1dc44:	andeq	sp, r1, ip, asr #25
   1dc48:	andeq	sp, r1, ip, asr #25
   1dc4c:	andeq	sp, r1, ip, asr #25
   1dc50:	andeq	sp, r1, ip, asr #25
   1dc54:	andeq	sp, r1, ip, asr #25
   1dc58:	andeq	sp, r1, ip, asr #25
   1dc5c:	andeq	sp, r1, ip, asr #25
   1dc60:	andeq	sp, r1, ip, asr #25
   1dc64:	andeq	sp, r1, ip, asr #25
   1dc68:	andeq	sp, r1, ip, asr #25
   1dc6c:	andeq	sp, r1, ip, asr #25
   1dc70:	andeq	sp, r1, ip, asr #25
   1dc74:	andeq	sp, r1, ip, asr #25
   1dc78:	andeq	sp, r1, ip, asr #25
   1dc7c:	andeq	sp, r1, ip, asr #25
   1dc80:	andeq	sp, r1, ip, asr #25
   1dc84:	andeq	sp, r1, ip, asr #25
   1dc88:	andeq	sp, r1, ip, asr #25
   1dc8c:	andeq	sp, r1, ip, asr #25
   1dc90:	andeq	sp, r1, ip, asr #25
   1dc94:	andeq	sp, r1, ip, asr #25
   1dc98:	andeq	sp, r1, ip, asr #25
   1dc9c:	andeq	sp, r1, ip, asr #25
   1dca0:	andeq	sp, r1, ip, asr #25
   1dca4:	andeq	sp, r1, ip, asr #25
   1dca8:	andeq	sp, r1, ip, asr #25
   1dcac:			; <UNDEFINED> instruction: 0x0001dcbc
   1dcb0:			; <UNDEFINED> instruction: 0x0001dcbc
   1dcb4:			; <UNDEFINED> instruction: 0x0001dcbc
   1dcb8:			; <UNDEFINED> instruction: 0x0001dcbc
   1dcbc:	movw	r0, #1
   1dcc0:	and	r0, r0, #1
   1dcc4:	strb	r0, [sp, #11]
   1dcc8:	b	1dcd8 <_obstack_memory_used@@Base+0x1a40>
   1dccc:	movw	r0, #0
   1dcd0:	and	r0, r0, #1
   1dcd4:	strb	r0, [sp, #11]
   1dcd8:	ldrb	r0, [sp, #11]
   1dcdc:	and	r0, r0, #1
   1dce0:	add	sp, sp, #12
   1dce4:	bx	lr
   1dce8:	sub	sp, sp, #12
   1dcec:	str	r0, [sp, #4]
   1dcf0:	ldr	r0, [sp, #4]
   1dcf4:	sub	r1, r0, #9
   1dcf8:	cmp	r1, #5
   1dcfc:	str	r0, [sp]
   1dd00:	bcc	1dd18 <_obstack_memory_used@@Base+0x1a80>
   1dd04:	b	1dd08 <_obstack_memory_used@@Base+0x1a70>
   1dd08:	ldr	r0, [sp]
   1dd0c:	cmp	r0, #32
   1dd10:	bne	1dd28 <_obstack_memory_used@@Base+0x1a90>
   1dd14:	b	1dd18 <_obstack_memory_used@@Base+0x1a80>
   1dd18:	movw	r0, #1
   1dd1c:	and	r0, r0, #1
   1dd20:	strb	r0, [sp, #11]
   1dd24:	b	1dd34 <_obstack_memory_used@@Base+0x1a9c>
   1dd28:	movw	r0, #0
   1dd2c:	and	r0, r0, #1
   1dd30:	strb	r0, [sp, #11]
   1dd34:	ldrb	r0, [sp, #11]
   1dd38:	and	r0, r0, #1
   1dd3c:	add	sp, sp, #12
   1dd40:	bx	lr
   1dd44:	sub	sp, sp, #8
   1dd48:	str	r0, [sp]
   1dd4c:	ldr	r0, [sp]
   1dd50:	sub	r0, r0, #65	; 0x41
   1dd54:	cmp	r0, #25
   1dd58:	bhi	1dd70 <_obstack_memory_used@@Base+0x1ad8>
   1dd5c:	b	1dd60 <_obstack_memory_used@@Base+0x1ac8>
   1dd60:	movw	r0, #1
   1dd64:	and	r0, r0, #1
   1dd68:	strb	r0, [sp, #7]
   1dd6c:	b	1dd7c <_obstack_memory_used@@Base+0x1ae4>
   1dd70:	movw	r0, #0
   1dd74:	and	r0, r0, #1
   1dd78:	strb	r0, [sp, #7]
   1dd7c:	ldrb	r0, [sp, #7]
   1dd80:	and	r0, r0, #1
   1dd84:	add	sp, sp, #8
   1dd88:	bx	lr
   1dd8c:	sub	sp, sp, #12
   1dd90:	str	r0, [sp, #4]
   1dd94:	ldr	r0, [sp, #4]
   1dd98:	sub	r1, r0, #48	; 0x30
   1dd9c:	cmp	r1, #10
   1dda0:	str	r0, [sp]
   1dda4:	bcc	1ddd4 <_obstack_memory_used@@Base+0x1b3c>
   1dda8:	b	1ddac <_obstack_memory_used@@Base+0x1b14>
   1ddac:	ldr	r0, [sp]
   1ddb0:	sub	r1, r0, #65	; 0x41
   1ddb4:	cmp	r1, #6
   1ddb8:	bcc	1ddd4 <_obstack_memory_used@@Base+0x1b3c>
   1ddbc:	b	1ddc0 <_obstack_memory_used@@Base+0x1b28>
   1ddc0:	ldr	r0, [sp]
   1ddc4:	sub	r1, r0, #97	; 0x61
   1ddc8:	cmp	r1, #5
   1ddcc:	bhi	1dde4 <_obstack_memory_used@@Base+0x1b4c>
   1ddd0:	b	1ddd4 <_obstack_memory_used@@Base+0x1b3c>
   1ddd4:	movw	r0, #1
   1ddd8:	and	r0, r0, #1
   1dddc:	strb	r0, [sp, #11]
   1dde0:	b	1ddf0 <_obstack_memory_used@@Base+0x1b58>
   1dde4:	movw	r0, #0
   1dde8:	and	r0, r0, #1
   1ddec:	strb	r0, [sp, #11]
   1ddf0:	ldrb	r0, [sp, #11]
   1ddf4:	and	r0, r0, #1
   1ddf8:	add	sp, sp, #12
   1ddfc:	bx	lr
   1de00:	sub	sp, sp, #8
   1de04:	str	r0, [sp]
   1de08:	ldr	r0, [sp]
   1de0c:	sub	r0, r0, #65	; 0x41
   1de10:	cmp	r0, #25
   1de14:	bhi	1de30 <_obstack_memory_used@@Base+0x1b98>
   1de18:	b	1de1c <_obstack_memory_used@@Base+0x1b84>
   1de1c:	ldr	r0, [sp]
   1de20:	sub	r0, r0, #65	; 0x41
   1de24:	add	r0, r0, #97	; 0x61
   1de28:	str	r0, [sp, #4]
   1de2c:	b	1de38 <_obstack_memory_used@@Base+0x1ba0>
   1de30:	ldr	r0, [sp]
   1de34:	str	r0, [sp, #4]
   1de38:	ldr	r0, [sp, #4]
   1de3c:	add	sp, sp, #8
   1de40:	bx	lr
   1de44:	sub	sp, sp, #8
   1de48:	str	r0, [sp]
   1de4c:	ldr	r0, [sp]
   1de50:	sub	r0, r0, #97	; 0x61
   1de54:	cmp	r0, #25
   1de58:	bhi	1de74 <_obstack_memory_used@@Base+0x1bdc>
   1de5c:	b	1de60 <_obstack_memory_used@@Base+0x1bc8>
   1de60:	ldr	r0, [sp]
   1de64:	sub	r0, r0, #97	; 0x61
   1de68:	add	r0, r0, #65	; 0x41
   1de6c:	str	r0, [sp, #4]
   1de70:	b	1de7c <_obstack_memory_used@@Base+0x1be4>
   1de74:	ldr	r0, [sp]
   1de78:	str	r0, [sp, #4]
   1de7c:	ldr	r0, [sp, #4]
   1de80:	add	sp, sp, #8
   1de84:	bx	lr
   1de88:	eor	r1, r1, #-2147483648	; 0x80000000
   1de8c:	b	1de94 <_obstack_memory_used@@Base+0x1bfc>
   1de90:	eor	r3, r3, #-2147483648	; 0x80000000
   1de94:	push	{r4, r5, lr}
   1de98:	lsl	r4, r1, #1
   1de9c:	lsl	r5, r3, #1
   1dea0:	teq	r4, r5
   1dea4:	teqeq	r0, r2
   1dea8:	orrsne	ip, r4, r0
   1deac:	orrsne	ip, r5, r2
   1deb0:	mvnsne	ip, r4, asr #21
   1deb4:	mvnsne	ip, r5, asr #21
   1deb8:	beq	1e0a4 <_obstack_memory_used@@Base+0x1e0c>
   1debc:	lsr	r4, r4, #21
   1dec0:	rsbs	r5, r4, r5, lsr #21
   1dec4:	rsblt	r5, r5, #0
   1dec8:	ble	1dee8 <_obstack_memory_used@@Base+0x1c50>
   1decc:	add	r4, r4, r5
   1ded0:	eor	r2, r0, r2
   1ded4:	eor	r3, r1, r3
   1ded8:	eor	r0, r2, r0
   1dedc:	eor	r1, r3, r1
   1dee0:	eor	r2, r0, r2
   1dee4:	eor	r3, r1, r3
   1dee8:	cmp	r5, #54	; 0x36
   1deec:	pophi	{r4, r5, pc}
   1def0:	tst	r1, #-2147483648	; 0x80000000
   1def4:	lsl	r1, r1, #12
   1def8:	mov	ip, #1048576	; 0x100000
   1defc:	orr	r1, ip, r1, lsr #12
   1df00:	beq	1df0c <_obstack_memory_used@@Base+0x1c74>
   1df04:	rsbs	r0, r0, #0
   1df08:	rsc	r1, r1, #0
   1df0c:	tst	r3, #-2147483648	; 0x80000000
   1df10:	lsl	r3, r3, #12
   1df14:	orr	r3, ip, r3, lsr #12
   1df18:	beq	1df24 <_obstack_memory_used@@Base+0x1c8c>
   1df1c:	rsbs	r2, r2, #0
   1df20:	rsc	r3, r3, #0
   1df24:	teq	r4, r5
   1df28:	beq	1e08c <_obstack_memory_used@@Base+0x1df4>
   1df2c:	sub	r4, r4, #1
   1df30:	rsbs	lr, r5, #32
   1df34:	blt	1df50 <_obstack_memory_used@@Base+0x1cb8>
   1df38:	lsl	ip, r2, lr
   1df3c:	adds	r0, r0, r2, lsr r5
   1df40:	adc	r1, r1, #0
   1df44:	adds	r0, r0, r3, lsl lr
   1df48:	adcs	r1, r1, r3, asr r5
   1df4c:	b	1df6c <_obstack_memory_used@@Base+0x1cd4>
   1df50:	sub	r5, r5, #32
   1df54:	add	lr, lr, #32
   1df58:	cmp	r2, #1
   1df5c:	lsl	ip, r3, lr
   1df60:	orrcs	ip, ip, #2
   1df64:	adds	r0, r0, r3, asr r5
   1df68:	adcs	r1, r1, r3, asr #31
   1df6c:	and	r5, r1, #-2147483648	; 0x80000000
   1df70:	bpl	1df80 <_obstack_memory_used@@Base+0x1ce8>
   1df74:	rsbs	ip, ip, #0
   1df78:	rscs	r0, r0, #0
   1df7c:	rsc	r1, r1, #0
   1df80:	cmp	r1, #1048576	; 0x100000
   1df84:	bcc	1dfc4 <_obstack_memory_used@@Base+0x1d2c>
   1df88:	cmp	r1, #2097152	; 0x200000
   1df8c:	bcc	1dfac <_obstack_memory_used@@Base+0x1d14>
   1df90:	lsrs	r1, r1, #1
   1df94:	rrxs	r0, r0
   1df98:	rrx	ip, ip
   1df9c:	add	r4, r4, #1
   1dfa0:	lsl	r2, r4, #21
   1dfa4:	cmn	r2, #4194304	; 0x400000
   1dfa8:	bcs	1e104 <_obstack_memory_used@@Base+0x1e6c>
   1dfac:	cmp	ip, #-2147483648	; 0x80000000
   1dfb0:	lsrseq	ip, r0, #1
   1dfb4:	adcs	r0, r0, #0
   1dfb8:	adc	r1, r1, r4, lsl #20
   1dfbc:	orr	r1, r1, r5
   1dfc0:	pop	{r4, r5, pc}
   1dfc4:	lsls	ip, ip, #1
   1dfc8:	adcs	r0, r0, r0
   1dfcc:	adc	r1, r1, r1
   1dfd0:	tst	r1, #1048576	; 0x100000
   1dfd4:	sub	r4, r4, #1
   1dfd8:	bne	1dfac <_obstack_memory_used@@Base+0x1d14>
   1dfdc:	teq	r1, #0
   1dfe0:	moveq	r1, r0
   1dfe4:	moveq	r0, #0
   1dfe8:	clz	r3, r1
   1dfec:	addeq	r3, r3, #32
   1dff0:	sub	r3, r3, #11
   1dff4:	subs	r2, r3, #32
   1dff8:	bge	1e01c <_obstack_memory_used@@Base+0x1d84>
   1dffc:	adds	r2, r2, #12
   1e000:	ble	1e018 <_obstack_memory_used@@Base+0x1d80>
   1e004:	add	ip, r2, #20
   1e008:	rsb	r2, r2, #12
   1e00c:	lsl	r0, r1, ip
   1e010:	lsr	r1, r1, r2
   1e014:	b	1e02c <_obstack_memory_used@@Base+0x1d94>
   1e018:	add	r2, r2, #20
   1e01c:	rsble	ip, r2, #32
   1e020:	lsl	r1, r1, r2
   1e024:	orrle	r1, r1, r0, lsr ip
   1e028:	lslle	r0, r0, r2
   1e02c:	subs	r4, r4, r3
   1e030:	addge	r1, r1, r4, lsl #20
   1e034:	orrge	r1, r1, r5
   1e038:	popge	{r4, r5, pc}
   1e03c:	mvn	r4, r4
   1e040:	subs	r4, r4, #31
   1e044:	bge	1e080 <_obstack_memory_used@@Base+0x1de8>
   1e048:	adds	r4, r4, #12
   1e04c:	bgt	1e068 <_obstack_memory_used@@Base+0x1dd0>
   1e050:	add	r4, r4, #20
   1e054:	rsb	r2, r4, #32
   1e058:	lsr	r0, r0, r4
   1e05c:	orr	r0, r0, r1, lsl r2
   1e060:	orr	r1, r5, r1, lsr r4
   1e064:	pop	{r4, r5, pc}
   1e068:	rsb	r4, r4, #12
   1e06c:	rsb	r2, r4, #32
   1e070:	lsr	r0, r0, r2
   1e074:	orr	r0, r0, r1, lsl r4
   1e078:	mov	r1, r5
   1e07c:	pop	{r4, r5, pc}
   1e080:	lsr	r0, r1, r4
   1e084:	mov	r1, r5
   1e088:	pop	{r4, r5, pc}
   1e08c:	teq	r4, #0
   1e090:	eor	r3, r3, #1048576	; 0x100000
   1e094:	eoreq	r1, r1, #1048576	; 0x100000
   1e098:	addeq	r4, r4, #1
   1e09c:	subne	r5, r5, #1
   1e0a0:	b	1df2c <_obstack_memory_used@@Base+0x1c94>
   1e0a4:	mvns	ip, r4, asr #21
   1e0a8:	mvnsne	ip, r5, asr #21
   1e0ac:	beq	1e114 <_obstack_memory_used@@Base+0x1e7c>
   1e0b0:	teq	r4, r5
   1e0b4:	teqeq	r0, r2
   1e0b8:	beq	1e0cc <_obstack_memory_used@@Base+0x1e34>
   1e0bc:	orrs	ip, r4, r0
   1e0c0:	moveq	r1, r3
   1e0c4:	moveq	r0, r2
   1e0c8:	pop	{r4, r5, pc}
   1e0cc:	teq	r1, r3
   1e0d0:	movne	r1, #0
   1e0d4:	movne	r0, #0
   1e0d8:	popne	{r4, r5, pc}
   1e0dc:	lsrs	ip, r4, #21
   1e0e0:	bne	1e0f4 <_obstack_memory_used@@Base+0x1e5c>
   1e0e4:	lsls	r0, r0, #1
   1e0e8:	adcs	r1, r1, r1
   1e0ec:	orrcs	r1, r1, #-2147483648	; 0x80000000
   1e0f0:	pop	{r4, r5, pc}
   1e0f4:	adds	r4, r4, #4194304	; 0x400000
   1e0f8:	addcc	r1, r1, #1048576	; 0x100000
   1e0fc:	popcc	{r4, r5, pc}
   1e100:	and	r5, r1, #-2147483648	; 0x80000000
   1e104:	orr	r1, r5, #2130706432	; 0x7f000000
   1e108:	orr	r1, r1, #15728640	; 0xf00000
   1e10c:	mov	r0, #0
   1e110:	pop	{r4, r5, pc}
   1e114:	mvns	ip, r4, asr #21
   1e118:	movne	r1, r3
   1e11c:	movne	r0, r2
   1e120:	mvnseq	ip, r5, asr #21
   1e124:	movne	r3, r1
   1e128:	movne	r2, r0
   1e12c:	orrs	r4, r0, r1, lsl #12
   1e130:	orrseq	r5, r2, r3, lsl #12
   1e134:	teqeq	r1, r3
   1e138:	orrne	r1, r1, #524288	; 0x80000
   1e13c:	pop	{r4, r5, pc}
   1e140:	teq	r0, #0
   1e144:	moveq	r1, #0
   1e148:	bxeq	lr
   1e14c:	push	{r4, r5, lr}
   1e150:	mov	r4, #1024	; 0x400
   1e154:	add	r4, r4, #50	; 0x32
   1e158:	mov	r5, #0
   1e15c:	mov	r1, #0
   1e160:	b	1dfdc <_obstack_memory_used@@Base+0x1d44>
   1e164:	teq	r0, #0
   1e168:	moveq	r1, #0
   1e16c:	bxeq	lr
   1e170:	push	{r4, r5, lr}
   1e174:	mov	r4, #1024	; 0x400
   1e178:	add	r4, r4, #50	; 0x32
   1e17c:	ands	r5, r0, #-2147483648	; 0x80000000
   1e180:	rsbmi	r0, r0, #0
   1e184:	mov	r1, #0
   1e188:	b	1dfdc <_obstack_memory_used@@Base+0x1d44>
   1e18c:	lsls	r2, r0, #1
   1e190:	asr	r1, r2, #3
   1e194:	rrx	r1, r1
   1e198:	lsl	r0, r2, #28
   1e19c:	andsne	r3, r2, #-16777216	; 0xff000000
   1e1a0:	teqne	r3, #-16777216	; 0xff000000
   1e1a4:	eorne	r1, r1, #939524096	; 0x38000000
   1e1a8:	bxne	lr
   1e1ac:	bics	r2, r2, #-16777216	; 0xff000000
   1e1b0:	bxeq	lr
   1e1b4:	teq	r3, #-16777216	; 0xff000000
   1e1b8:	orreq	r1, r1, #524288	; 0x80000
   1e1bc:	bxeq	lr
   1e1c0:	push	{r4, r5, lr}
   1e1c4:	mov	r4, #896	; 0x380
   1e1c8:	and	r5, r1, #-2147483648	; 0x80000000
   1e1cc:	bic	r1, r1, #-2147483648	; 0x80000000
   1e1d0:	b	1dfdc <_obstack_memory_used@@Base+0x1d44>
   1e1d4:	orrs	r2, r0, r1
   1e1d8:	bxeq	lr
   1e1dc:	push	{r4, r5, lr}
   1e1e0:	mov	r5, #0
   1e1e4:	b	1e204 <_obstack_memory_used@@Base+0x1f6c>
   1e1e8:	orrs	r2, r0, r1
   1e1ec:	bxeq	lr
   1e1f0:	push	{r4, r5, lr}
   1e1f4:	ands	r5, r1, #-2147483648	; 0x80000000
   1e1f8:	bpl	1e204 <_obstack_memory_used@@Base+0x1f6c>
   1e1fc:	rsbs	r0, r0, #0
   1e200:	rsc	r1, r1, #0
   1e204:	mov	r4, #1024	; 0x400
   1e208:	add	r4, r4, #50	; 0x32
   1e20c:	lsrs	ip, r1, #22
   1e210:	beq	1df80 <_obstack_memory_used@@Base+0x1ce8>
   1e214:	mov	r2, #3
   1e218:	lsrs	ip, ip, #3
   1e21c:	addne	r2, r2, #3
   1e220:	lsrs	ip, ip, #3
   1e224:	addne	r2, r2, #3
   1e228:	add	r2, r2, ip, lsr #3
   1e22c:	rsb	r3, r2, #32
   1e230:	lsl	ip, r0, r3
   1e234:	lsr	r0, r0, r2
   1e238:	orr	r0, r0, r1, lsl r3
   1e23c:	lsr	r1, r1, r2
   1e240:	add	r4, r4, r2
   1e244:	b	1df80 <_obstack_memory_used@@Base+0x1ce8>
   1e248:	cmp	r3, #0
   1e24c:	cmpeq	r2, #0
   1e250:	bne	1e274 <_obstack_memory_used@@Base+0x1fdc>
   1e254:	cmp	r1, #0
   1e258:	movlt	r1, #-2147483648	; 0x80000000
   1e25c:	movlt	r0, #0
   1e260:	blt	1e270 <_obstack_memory_used@@Base+0x1fd8>
   1e264:	cmpeq	r0, #0
   1e268:	mvnne	r1, #-2147483648	; 0x80000000
   1e26c:	mvnne	r0, #0
   1e270:	b	1e358 <_obstack_memory_used@@Base+0x20c0>
   1e274:	sub	sp, sp, #8
   1e278:	push	{sp, lr}
   1e27c:	cmp	r1, #0
   1e280:	blt	1e2a0 <_obstack_memory_used@@Base+0x2008>
   1e284:	cmp	r3, #0
   1e288:	blt	1e2d4 <_obstack_memory_used@@Base+0x203c>
   1e28c:	bl	1e368 <_obstack_memory_used@@Base+0x20d0>
   1e290:	ldr	lr, [sp, #4]
   1e294:	add	sp, sp, #8
   1e298:	pop	{r2, r3}
   1e29c:	bx	lr
   1e2a0:	rsbs	r0, r0, #0
   1e2a4:	sbc	r1, r1, r1, lsl #1
   1e2a8:	cmp	r3, #0
   1e2ac:	blt	1e2f8 <_obstack_memory_used@@Base+0x2060>
   1e2b0:	bl	1e368 <_obstack_memory_used@@Base+0x20d0>
   1e2b4:	ldr	lr, [sp, #4]
   1e2b8:	add	sp, sp, #8
   1e2bc:	pop	{r2, r3}
   1e2c0:	rsbs	r0, r0, #0
   1e2c4:	sbc	r1, r1, r1, lsl #1
   1e2c8:	rsbs	r2, r2, #0
   1e2cc:	sbc	r3, r3, r3, lsl #1
   1e2d0:	bx	lr
   1e2d4:	rsbs	r2, r2, #0
   1e2d8:	sbc	r3, r3, r3, lsl #1
   1e2dc:	bl	1e368 <_obstack_memory_used@@Base+0x20d0>
   1e2e0:	ldr	lr, [sp, #4]
   1e2e4:	add	sp, sp, #8
   1e2e8:	pop	{r2, r3}
   1e2ec:	rsbs	r0, r0, #0
   1e2f0:	sbc	r1, r1, r1, lsl #1
   1e2f4:	bx	lr
   1e2f8:	rsbs	r2, r2, #0
   1e2fc:	sbc	r3, r3, r3, lsl #1
   1e300:	bl	1e368 <_obstack_memory_used@@Base+0x20d0>
   1e304:	ldr	lr, [sp, #4]
   1e308:	add	sp, sp, #8
   1e30c:	pop	{r2, r3}
   1e310:	rsbs	r2, r2, #0
   1e314:	sbc	r3, r3, r3, lsl #1
   1e318:	bx	lr
   1e31c:	cmp	r3, #0
   1e320:	cmpeq	r2, #0
   1e324:	bne	1e33c <_obstack_memory_used@@Base+0x20a4>
   1e328:	cmp	r1, #0
   1e32c:	cmpeq	r0, #0
   1e330:	mvnne	r1, #0
   1e334:	mvnne	r0, #0
   1e338:	b	1e358 <_obstack_memory_used@@Base+0x20c0>
   1e33c:	sub	sp, sp, #8
   1e340:	push	{sp, lr}
   1e344:	bl	1e368 <_obstack_memory_used@@Base+0x20d0>
   1e348:	ldr	lr, [sp, #4]
   1e34c:	add	sp, sp, #8
   1e350:	pop	{r2, r3}
   1e354:	bx	lr
   1e358:	push	{r1, lr}
   1e35c:	mov	r0, #8
   1e360:	bl	112d0 <raise@plt>
   1e364:	pop	{r1, pc}
   1e368:	cmp	r1, r3
   1e36c:	cmpeq	r0, r2
   1e370:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e374:	mov	r4, r0
   1e378:	movcc	r0, #0
   1e37c:	mov	r5, r1
   1e380:	ldr	lr, [sp, #36]	; 0x24
   1e384:	movcc	r1, r0
   1e388:	bcc	1e484 <_obstack_memory_used@@Base+0x21ec>
   1e38c:	cmp	r3, #0
   1e390:	clzeq	ip, r2
   1e394:	clzne	ip, r3
   1e398:	addeq	ip, ip, #32
   1e39c:	cmp	r5, #0
   1e3a0:	clzeq	r1, r4
   1e3a4:	addeq	r1, r1, #32
   1e3a8:	clzne	r1, r5
   1e3ac:	sub	ip, ip, r1
   1e3b0:	sub	sl, ip, #32
   1e3b4:	lsl	r9, r3, ip
   1e3b8:	rsb	fp, ip, #32
   1e3bc:	orr	r9, r9, r2, lsl sl
   1e3c0:	orr	r9, r9, r2, lsr fp
   1e3c4:	lsl	r8, r2, ip
   1e3c8:	cmp	r5, r9
   1e3cc:	cmpeq	r4, r8
   1e3d0:	movcc	r0, #0
   1e3d4:	movcc	r1, r0
   1e3d8:	bcc	1e3f4 <_obstack_memory_used@@Base+0x215c>
   1e3dc:	mov	r0, #1
   1e3e0:	subs	r4, r4, r8
   1e3e4:	lsl	r1, r0, sl
   1e3e8:	orr	r1, r1, r0, lsr fp
   1e3ec:	lsl	r0, r0, ip
   1e3f0:	sbc	r5, r5, r9
   1e3f4:	cmp	ip, #0
   1e3f8:	beq	1e484 <_obstack_memory_used@@Base+0x21ec>
   1e3fc:	lsr	r6, r8, #1
   1e400:	orr	r6, r6, r9, lsl #31
   1e404:	lsr	r7, r9, #1
   1e408:	mov	r2, ip
   1e40c:	b	1e430 <_obstack_memory_used@@Base+0x2198>
   1e410:	subs	r3, r4, r6
   1e414:	sbc	r8, r5, r7
   1e418:	adds	r3, r3, r3
   1e41c:	adc	r8, r8, r8
   1e420:	adds	r4, r3, #1
   1e424:	adc	r5, r8, #0
   1e428:	subs	r2, r2, #1
   1e42c:	beq	1e44c <_obstack_memory_used@@Base+0x21b4>
   1e430:	cmp	r5, r7
   1e434:	cmpeq	r4, r6
   1e438:	bcs	1e410 <_obstack_memory_used@@Base+0x2178>
   1e43c:	adds	r4, r4, r4
   1e440:	adc	r5, r5, r5
   1e444:	subs	r2, r2, #1
   1e448:	bne	1e430 <_obstack_memory_used@@Base+0x2198>
   1e44c:	lsr	r3, r4, ip
   1e450:	orr	r3, r3, r5, lsl fp
   1e454:	lsr	r2, r5, ip
   1e458:	orr	r3, r3, r5, lsr sl
   1e45c:	adds	r0, r0, r4
   1e460:	mov	r4, r3
   1e464:	lsl	r3, r2, ip
   1e468:	orr	r3, r3, r4, lsl sl
   1e46c:	lsl	ip, r4, ip
   1e470:	orr	r3, r3, r4, lsr fp
   1e474:	adc	r1, r1, r5
   1e478:	subs	r0, r0, ip
   1e47c:	mov	r5, r2
   1e480:	sbc	r1, r1, r3
   1e484:	cmp	lr, #0
   1e488:	strdne	r4, [lr]
   1e48c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e490:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e494:	mov	r7, r0
   1e498:	ldr	r6, [pc, #72]	; 1e4e8 <_obstack_memory_used@@Base+0x2250>
   1e49c:	ldr	r5, [pc, #72]	; 1e4ec <_obstack_memory_used@@Base+0x2254>
   1e4a0:	add	r6, pc, r6
   1e4a4:	add	r5, pc, r5
   1e4a8:	sub	r6, r6, r5
   1e4ac:	mov	r8, r1
   1e4b0:	mov	r9, r2
   1e4b4:	bl	11298 <calloc@plt-0x20>
   1e4b8:	asrs	r6, r6, #2
   1e4bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e4c0:	mov	r4, #0
   1e4c4:	add	r4, r4, #1
   1e4c8:	ldr	r3, [r5], #4
   1e4cc:	mov	r2, r9
   1e4d0:	mov	r1, r8
   1e4d4:	mov	r0, r7
   1e4d8:	blx	r3
   1e4dc:	cmp	r6, r4
   1e4e0:	bne	1e4c4 <_obstack_memory_used@@Base+0x222c>
   1e4e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e4e8:	andeq	r1, r1, r4, ror #20
   1e4ec:	andeq	r1, r1, ip, asr sl
   1e4f0:	bx	lr
   1e4f4:	ldr	r3, [pc, #12]	; 1e508 <_obstack_memory_used@@Base+0x2270>
   1e4f8:	mov	r1, #0
   1e4fc:	add	r3, pc, r3
   1e500:	ldr	r2, [r3]
   1e504:	b	114ec <__cxa_atexit@plt>
   1e508:	andeq	r1, r1, r0, lsr #24
   1e50c:	mov	r2, r1
   1e510:	mov	r1, r0
   1e514:	mov	r0, #3
   1e518:	b	11594 <__xstat64@plt>
   1e51c:	mov	r2, r1
   1e520:	mov	r1, r0
   1e524:	mov	r0, #3
   1e528:	b	113c0 <__fxstat64@plt>

Disassembly of section .fini:

0001e52c <.fini>:
   1e52c:	push	{r3, lr}
   1e530:	pop	{r3, pc}
