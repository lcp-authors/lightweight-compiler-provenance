
../repos/prog2/MT2E2-2:     file format elf32-littlearm


Disassembly of section .init:

00010db0 <.init>:
   10db0:	push	{r3, lr}
   10db4:	bl	10ef0 <_start@@Base+0x3c>
   10db8:	pop	{r3, pc}

Disassembly of section .plt:

00010dbc <calloc@plt-0x14>:
   10dbc:	push	{lr}		; (str lr, [sp, #-4]!)
   10dc0:	ldr	lr, [pc, #4]	; 10dcc <calloc@plt-0x4>
   10dc4:	add	lr, pc, lr
   10dc8:	ldr	pc, [lr, #8]!
   10dcc:	andeq	r2, r1, r4, lsr r2

00010dd0 <calloc@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #73728	; 0x12000
   10dd8:	ldr	pc, [ip, #564]!	; 0x234

00010ddc <strcmp@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #73728	; 0x12000
   10de4:	ldr	pc, [ip, #556]!	; 0x22c

00010de8 <strtol@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #73728	; 0x12000
   10df0:	ldr	pc, [ip, #548]!	; 0x224

00010df4 <printf@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #73728	; 0x12000
   10dfc:	ldr	pc, [ip, #540]!	; 0x21c

00010e00 <__isoc99_fscanf@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #73728	; 0x12000
   10e08:	ldr	pc, [ip, #532]!	; 0x214

00010e0c <fopen@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #73728	; 0x12000
   10e14:	ldr	pc, [ip, #524]!	; 0x20c

00010e18 <free@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #73728	; 0x12000
   10e20:	ldr	pc, [ip, #516]!	; 0x204

00010e24 <realloc@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #73728	; 0x12000
   10e2c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e30 <strcpy@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #73728	; 0x12000
   10e38:	ldr	pc, [ip, #500]!	; 0x1f4

00010e3c <puts@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #73728	; 0x12000
   10e44:	ldr	pc, [ip, #492]!	; 0x1ec

00010e48 <malloc@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #73728	; 0x12000
   10e50:	ldr	pc, [ip, #484]!	; 0x1e4

00010e54 <__libc_start_main@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #73728	; 0x12000
   10e5c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e60 <__gmon_start__@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #73728	; 0x12000
   10e68:	ldr	pc, [ip, #468]!	; 0x1d4

00010e6c <strlen@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #73728	; 0x12000
   10e74:	ldr	pc, [ip, #460]!	; 0x1cc

00010e78 <memset@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #73728	; 0x12000
   10e80:	ldr	pc, [ip, #452]!	; 0x1c4

00010e84 <putchar@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #73728	; 0x12000
   10e8c:	ldr	pc, [ip, #444]!	; 0x1bc

00010e90 <fclose@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #73728	; 0x12000
   10e98:	ldr	pc, [ip, #436]!	; 0x1b4

00010e9c <sprintf@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #73728	; 0x12000
   10ea4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ea8 <abort@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #73728	; 0x12000
   10eb0:	ldr	pc, [ip, #420]!	; 0x1a4

Disassembly of section .text:

00010eb4 <_start@@Base>:
   10eb4:	mov	fp, #0
   10eb8:	mov	lr, #0
   10ebc:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec0:	mov	r2, sp
   10ec4:	push	{r2}		; (str r2, [sp, #-4]!)
   10ec8:	push	{r0}		; (str r0, [sp, #-4]!)
   10ecc:	ldr	ip, [pc, #16]	; 10ee4 <_start@@Base+0x30>
   10ed0:	push	{ip}		; (str ip, [sp, #-4]!)
   10ed4:	ldr	r0, [pc, #12]	; 10ee8 <_start@@Base+0x34>
   10ed8:	ldr	r3, [pc, #12]	; 10eec <_start@@Base+0x38>
   10edc:	bl	10e54 <__libc_start_main@plt>
   10ee0:	bl	10ea8 <abort@plt>
   10ee4:	muleq	r1, ip, r5
   10ee8:	muleq	r1, r4, r1
   10eec:	andeq	r2, r1, ip, lsr r5
   10ef0:	ldr	r3, [pc, #20]	; 10f0c <_start@@Base+0x58>
   10ef4:	ldr	r2, [pc, #20]	; 10f10 <_start@@Base+0x5c>
   10ef8:	add	r3, pc, r3
   10efc:	ldr	r2, [r3, r2]
   10f00:	cmp	r2, #0
   10f04:	bxeq	lr
   10f08:	b	10e60 <__gmon_start__@plt>
   10f0c:	andeq	r2, r1, r0, lsl #2
   10f10:	andeq	r0, r0, r8, asr r0
   10f14:	ldr	r0, [pc, #24]	; 10f34 <_start@@Base+0x80>
   10f18:	ldr	r3, [pc, #24]	; 10f38 <_start@@Base+0x84>
   10f1c:	cmp	r3, r0
   10f20:	bxeq	lr
   10f24:	ldr	r3, [pc, #16]	; 10f3c <_start@@Base+0x88>
   10f28:	cmp	r3, #0
   10f2c:	bxeq	lr
   10f30:	bx	r3
   10f34:	andeq	r3, r2, r4, rrx
   10f38:	andeq	r3, r2, r4, rrx
   10f3c:	andeq	r0, r0, r0
   10f40:	ldr	r0, [pc, #36]	; 10f6c <_start@@Base+0xb8>
   10f44:	ldr	r1, [pc, #36]	; 10f70 <_start@@Base+0xbc>
   10f48:	sub	r1, r1, r0
   10f4c:	asr	r1, r1, #2
   10f50:	add	r1, r1, r1, lsr #31
   10f54:	asrs	r1, r1, #1
   10f58:	bxeq	lr
   10f5c:	ldr	r3, [pc, #16]	; 10f74 <_start@@Base+0xc0>
   10f60:	cmp	r3, #0
   10f64:	bxeq	lr
   10f68:	bx	r3
   10f6c:	andeq	r3, r2, r4, rrx
   10f70:	andeq	r3, r2, r4, rrx
   10f74:	andeq	r0, r0, r0
   10f78:	push	{r4, lr}
   10f7c:	ldr	r4, [pc, #24]	; 10f9c <_start@@Base+0xe8>
   10f80:	ldrb	r3, [r4]
   10f84:	cmp	r3, #0
   10f88:	popne	{r4, pc}
   10f8c:	bl	10f14 <_start@@Base+0x60>
   10f90:	mov	r3, #1
   10f94:	strb	r3, [r4]
   10f98:	pop	{r4, pc}
   10f9c:	andeq	r3, r2, r4, rrx
   10fa0:	b	10f40 <_start@@Base+0x8c>

00010fa4 <descobre_caminho@@Base>:
   10fa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fa8:	add	fp, sp, #28
   10fac:	sub	sp, sp, #12
   10fb0:	mov	r6, r3
   10fb4:	str	r2, [sp]
   10fb8:	mov	r5, r1
   10fbc:	mov	sl, r0
   10fc0:	bl	11f64 <lista_nova@@Base>
   10fc4:	mov	r4, r0
   10fc8:	mov	r1, r5
   10fcc:	add	r3, sp, #8
   10fd0:	mov	r0, sl
   10fd4:	mov	r2, r6
   10fd8:	mov	r5, r6
   10fdc:	bl	11918 <grafo_bfs@@Base>
   10fe0:	mov	r9, r0
   10fe4:	ldr	r0, [sp, #8]
   10fe8:	cmp	r0, #1
   10fec:	blt	11030 <descobre_caminho@@Base+0x8c>
   10ff0:	ldr	r6, [pc, #184]	; 110b0 <descobre_caminho@@Base+0x10c>
   10ff4:	mov	r8, #0
   10ff8:	add	r7, sp, #5
   10ffc:	add	r6, pc, r6
   11000:	ldr	r2, [r9, r8, lsl #2]
   11004:	mov	r0, r7
   11008:	mov	r1, r6
   1100c:	bl	10e9c <sprintf@plt>
   11010:	mov	r0, r4
   11014:	mov	r1, r7
   11018:	mvn	r2, #0
   1101c:	bl	120c4 <lista_insere@@Base>
   11020:	ldr	r0, [sp, #8]
   11024:	add	r8, r8, #1
   11028:	cmp	r8, r0
   1102c:	blt	11000 <descobre_caminho@@Base+0x5c>
   11030:	ldr	r2, [sp]
   11034:	add	r3, sp, #8
   11038:	mov	r0, sl
   1103c:	mov	r1, r5
   11040:	bl	11918 <grafo_bfs@@Base>
   11044:	mov	r6, r0
   11048:	ldr	r0, [sp, #8]
   1104c:	cmp	r0, #2
   11050:	blt	11094 <descobre_caminho@@Base+0xf0>
   11054:	ldr	r8, [pc, #88]	; 110b4 <descobre_caminho@@Base+0x110>
   11058:	mov	r5, #1
   1105c:	add	r7, sp, #5
   11060:	add	r8, pc, r8
   11064:	ldr	r2, [r6, r5, lsl #2]
   11068:	mov	r0, r7
   1106c:	mov	r1, r8
   11070:	bl	10e9c <sprintf@plt>
   11074:	mov	r0, r4
   11078:	mov	r1, r7
   1107c:	mvn	r2, #0
   11080:	bl	120c4 <lista_insere@@Base>
   11084:	ldr	r0, [sp, #8]
   11088:	add	r5, r5, #1
   1108c:	cmp	r5, r0
   11090:	blt	11064 <descobre_caminho@@Base+0xc0>
   11094:	mov	r0, r6
   11098:	bl	10e18 <free@plt>
   1109c:	mov	r0, r9
   110a0:	bl	10e18 <free@plt>
   110a4:	mov	r0, r4
   110a8:	sub	sp, fp, #28
   110ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110b0:	andeq	r1, r0, r3, ror r6
   110b4:	andeq	r1, r0, pc, lsl #12

000110b8 <simula_acontecimentos@@Base>:
   110b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   110bc:	add	fp, sp, #24
   110c0:	sub	sp, sp, #24
   110c4:	mov	r9, r0
   110c8:	mov	r0, #0
   110cc:	cmp	r2, #20
   110d0:	bgt	11188 <simula_acontecimentos@@Base+0xd0>
   110d4:	mov	r0, r2
   110d8:	mov	r4, r2
   110dc:	mov	r8, r1
   110e0:	bl	11abc <heap_nova@@Base>
   110e4:	mov	r5, r0
   110e8:	cmp	r4, #1
   110ec:	blt	1117c <simula_acontecimentos@@Base+0xc4>
   110f0:	mov	r6, #0
   110f4:	add	r7, sp, #4
   110f8:	mov	r0, r9
   110fc:	mov	r1, r6
   11100:	bl	11fe4 <lista_elemento@@Base>
   11104:	mov	r1, r0
   11108:	mov	r0, r7
   1110c:	bl	10e30 <strcpy@plt>
   11110:	mov	r0, r8
   11114:	mov	r1, r6
   11118:	bl	11fe4 <lista_elemento@@Base>
   1111c:	mov	r1, #0
   11120:	mov	r2, #10
   11124:	bl	10de8 <strtol@plt>
   11128:	mov	r2, r0
   1112c:	mov	r0, r5
   11130:	mov	r1, r7
   11134:	bl	11bf8 <heap_insere@@Base>
   11138:	add	r6, r6, #1
   1113c:	cmp	r4, r6
   11140:	bne	110f8 <simula_acontecimentos@@Base+0x40>
   11144:	cmp	r4, #1
   11148:	blt	1117c <simula_acontecimentos@@Base+0xc4>
   1114c:	ldr	r7, [pc, #60]	; 11190 <simula_acontecimentos@@Base+0xd8>
   11150:	mov	r6, #0
   11154:	add	r7, pc, r7
   11158:	ldr	r0, [r5, #8]
   1115c:	ldr	r0, [r0, r6, lsl #2]
   11160:	add	r6, r6, #1
   11164:	mov	r1, r6
   11168:	ldr	r2, [r0, #4]
   1116c:	mov	r0, r7
   11170:	bl	10df4 <printf@plt>
   11174:	cmp	r4, r6
   11178:	bne	11158 <simula_acontecimentos@@Base+0xa0>
   1117c:	mov	r0, r5
   11180:	bl	11b18 <heap_apaga@@Base>
   11184:	mov	r0, #1
   11188:	sub	sp, fp, #24
   1118c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11190:	andeq	r1, r0, r8, asr r4

00011194 <main@@Base>:
   11194:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11198:	add	fp, sp, #24
   1119c:	sub	sp, sp, #32
   111a0:	ldr	r0, [pc, #576]	; 113e8 <main@@Base+0x254>
   111a4:	add	r0, pc, r0
   111a8:	bl	10e3c <puts@plt>
   111ac:	mov	r0, #8
   111b0:	mov	r1, #1
   111b4:	bl	1143c <grafo_novo@@Base>
   111b8:	mov	r1, #1
   111bc:	mov	r2, #3
   111c0:	mov	r4, r0
   111c4:	bl	11520 <grafo_adiciona@@Base>
   111c8:	mov	r0, r4
   111cc:	mov	r1, #2
   111d0:	mov	r2, #3
   111d4:	bl	11520 <grafo_adiciona@@Base>
   111d8:	mov	r0, r4
   111dc:	mov	r1, #2
   111e0:	mov	r2, #4
   111e4:	bl	11520 <grafo_adiciona@@Base>
   111e8:	mov	r0, r4
   111ec:	mov	r1, #2
   111f0:	mov	r2, #5
   111f4:	bl	11520 <grafo_adiciona@@Base>
   111f8:	mov	r0, r4
   111fc:	mov	r1, #3
   11200:	mov	r2, #2
   11204:	bl	11520 <grafo_adiciona@@Base>
   11208:	mov	r0, r4
   1120c:	mov	r1, #3
   11210:	mov	r2, #4
   11214:	bl	11520 <grafo_adiciona@@Base>
   11218:	mov	r0, r4
   1121c:	mov	r1, #4
   11220:	mov	r2, #6
   11224:	bl	11520 <grafo_adiciona@@Base>
   11228:	mov	r0, r4
   1122c:	mov	r1, #4
   11230:	mov	r2, #7
   11234:	bl	11520 <grafo_adiciona@@Base>
   11238:	mov	r0, r4
   1123c:	mov	r1, #5
   11240:	mov	r2, #4
   11244:	bl	11520 <grafo_adiciona@@Base>
   11248:	mov	r0, r4
   1124c:	mov	r1, #5
   11250:	mov	r2, #6
   11254:	bl	11520 <grafo_adiciona@@Base>
   11258:	mov	r0, r4
   1125c:	mov	r1, #5
   11260:	mov	r2, #7
   11264:	bl	11520 <grafo_adiciona@@Base>
   11268:	mov	r0, r4
   1126c:	mov	r1, #6
   11270:	mov	r2, #7
   11274:	bl	11520 <grafo_adiciona@@Base>
   11278:	mov	r0, r4
   1127c:	mov	r1, #1
   11280:	mov	r2, #7
   11284:	mov	r3, #5
   11288:	bl	10fa4 <descobre_caminho@@Base>
   1128c:	mov	r5, r0
   11290:	ldr	r0, [pc, #340]	; 113ec <main@@Base+0x258>
   11294:	add	r0, pc, r0
   11298:	bl	10df4 <printf@plt>
   1129c:	mov	r0, r5
   112a0:	bl	11fd4 <lista_tamanho@@Base>
   112a4:	cmp	r0, #1
   112a8:	blt	112e4 <main@@Base+0x150>
   112ac:	ldr	r7, [pc, #316]	; 113f0 <main@@Base+0x25c>
   112b0:	mov	r6, #0
   112b4:	add	r7, pc, r7
   112b8:	mov	r0, r5
   112bc:	mov	r1, r6
   112c0:	bl	11fe4 <lista_elemento@@Base>
   112c4:	mov	r1, r0
   112c8:	mov	r0, r7
   112cc:	bl	10df4 <printf@plt>
   112d0:	mov	r0, r5
   112d4:	add	r6, r6, #1
   112d8:	bl	11fd4 <lista_tamanho@@Base>
   112dc:	cmp	r6, r0
   112e0:	blt	112b8 <main@@Base+0x124>
   112e4:	ldr	r0, [pc, #264]	; 113f4 <main@@Base+0x260>
   112e8:	add	r0, pc, r0
   112ec:	bl	10e3c <puts@plt>
   112f0:	mov	r0, r4
   112f4:	bl	1149c <grafo_apaga@@Base>
   112f8:	mov	r0, r5
   112fc:	bl	11f8c <lista_apaga@@Base>
   11300:	ldr	r0, [pc, #240]	; 113f8 <main@@Base+0x264>
   11304:	add	r0, pc, r0
   11308:	bl	10e3c <puts@plt>
   1130c:	ldr	r0, [pc, #232]	; 113fc <main@@Base+0x268>
   11310:	ldr	r1, [pc, #232]	; 11400 <main@@Base+0x26c>
   11314:	add	r0, pc, r0
   11318:	add	r1, pc, r1
   1131c:	bl	10e0c <fopen@plt>
   11320:	mov	r8, r0
   11324:	bl	11f64 <lista_nova@@Base>
   11328:	mov	r5, r0
   1132c:	bl	11f64 <lista_nova@@Base>
   11330:	ldr	r1, [pc, #204]	; 11404 <main@@Base+0x270>
   11334:	mov	r6, r0
   11338:	add	r2, sp, #11
   1133c:	add	r3, sp, #6
   11340:	mov	r0, r8
   11344:	add	r1, pc, r1
   11348:	bl	10e00 <__isoc99_fscanf@plt>
   1134c:	cmp	r0, #2
   11350:	bne	113a0 <main@@Base+0x20c>
   11354:	ldr	r9, [pc, #172]	; 11408 <main@@Base+0x274>
   11358:	add	r7, sp, #11
   1135c:	add	r4, sp, #6
   11360:	add	r9, pc, r9
   11364:	mov	r0, r5
   11368:	mov	r1, r7
   1136c:	mvn	r2, #0
   11370:	bl	120c4 <lista_insere@@Base>
   11374:	mov	r0, r6
   11378:	mov	r1, r4
   1137c:	mvn	r2, #0
   11380:	bl	120c4 <lista_insere@@Base>
   11384:	mov	r0, r8
   11388:	mov	r1, r9
   1138c:	mov	r2, r7
   11390:	mov	r3, r4
   11394:	bl	10e00 <__isoc99_fscanf@plt>
   11398:	cmp	r0, #2
   1139c:	beq	11364 <main@@Base+0x1d0>
   113a0:	mov	r0, r5
   113a4:	mov	r1, r6
   113a8:	mov	r2, #4
   113ac:	bl	110b8 <simula_acontecimentos@@Base>
   113b0:	cmp	r0, #0
   113b4:	bne	113c4 <main@@Base+0x230>
   113b8:	ldr	r0, [pc, #76]	; 1140c <main@@Base+0x278>
   113bc:	add	r0, pc, r0
   113c0:	bl	10e3c <puts@plt>
   113c4:	mov	r0, r5
   113c8:	bl	11f8c <lista_apaga@@Base>
   113cc:	mov	r0, r6
   113d0:	bl	11f8c <lista_apaga@@Base>
   113d4:	mov	r0, r8
   113d8:	bl	10e90 <fclose@plt>
   113dc:	mov	r0, #0
   113e0:	sub	sp, fp, #24
   113e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   113e8:	andeq	r1, r0, r4, ror #8
   113ec:	andeq	r1, r0, r0, lsr #6
   113f0:	andeq	r1, r0, ip, asr #6
   113f4:	muleq	r0, r7, r3
   113f8:	andeq	r1, r0, r4, lsr #6
   113fc:	ldrdeq	r1, [r0], -sp
   11400:	andeq	r1, r0, r3, ror #5
   11404:			; <UNDEFINED> instruction: 0x000012b9
   11408:	muleq	r0, sp, r2
   1140c:	andeq	r1, r0, ip, lsl #5

00011410 <cria_no@@Base>:
   11410:	push	{r4, sl, fp, lr}
   11414:	add	fp, sp, #8
   11418:	mov	r4, r0
   1141c:	mov	r0, #8
   11420:	bl	10e48 <malloc@plt>
   11424:	cmp	r0, #0
   11428:	moveq	r0, #0
   1142c:	movne	r1, #0
   11430:	strne	r4, [r0]
   11434:	strne	r1, [r0, #4]
   11438:	pop	{r4, sl, fp, pc}

0001143c <grafo_novo@@Base>:
   1143c:	push	{r4, r5, r6, sl, fp, lr}
   11440:	add	fp, sp, #16
   11444:	mov	r5, r0
   11448:	mov	r0, #12
   1144c:	mov	r6, r1
   11450:	bl	10e48 <malloc@plt>
   11454:	cmp	r0, #0
   11458:	beq	11490 <grafo_novo@@Base+0x54>
   1145c:	str	r6, [r0]
   11460:	mov	r4, r0
   11464:	str	r5, [r0, #4]
   11468:	mov	r0, r5
   1146c:	mov	r1, #8
   11470:	bl	10dd0 <calloc@plt>
   11474:	cmp	r0, #0
   11478:	str	r0, [r4, #8]
   1147c:	beq	11488 <grafo_novo@@Base+0x4c>
   11480:	mov	r0, r4
   11484:	pop	{r4, r5, r6, sl, fp, pc}
   11488:	mov	r0, r4
   1148c:	bl	10e18 <free@plt>
   11490:	mov	r4, #0
   11494:	mov	r0, r4
   11498:	pop	{r4, r5, r6, sl, fp, pc}

0001149c <grafo_apaga@@Base>:
   1149c:	cmp	r0, #0
   114a0:	bxeq	lr
   114a4:	push	{r4, r5, fp, lr}
   114a8:	add	fp, sp, #8
   114ac:	mov	r4, r0
   114b0:	ldr	r0, [r0, #8]
   114b4:	cmp	r0, #0
   114b8:	beq	11514 <grafo_apaga@@Base+0x78>
   114bc:	ldr	r2, [r4, #4]
   114c0:	cmp	r2, #1
   114c4:	blt	11510 <grafo_apaga@@Base+0x74>
   114c8:	mov	r5, #0
   114cc:	add	r3, r0, r5, lsl #3
   114d0:	ldr	r1, [r3, #4]!
   114d4:	cmp	r1, #0
   114d8:	beq	11504 <grafo_apaga@@Base+0x68>
   114dc:	ldr	r0, [r1, #4]
   114e0:	str	r0, [r3]
   114e4:	mov	r0, r1
   114e8:	bl	10e18 <free@plt>
   114ec:	ldr	r0, [r4, #8]
   114f0:	add	r3, r0, r5, lsl #3
   114f4:	ldr	r1, [r3, #4]!
   114f8:	cmp	r1, #0
   114fc:	bne	114dc <grafo_apaga@@Base+0x40>
   11500:	ldr	r2, [r4, #4]
   11504:	add	r5, r5, #1
   11508:	cmp	r5, r2
   1150c:	blt	114cc <grafo_apaga@@Base+0x30>
   11510:	bl	10e18 <free@plt>
   11514:	mov	r0, r4
   11518:	pop	{r4, r5, fp, lr}
   1151c:	b	10e18 <free@plt>

00011520 <grafo_adiciona@@Base>:
   11520:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11524:	add	fp, sp, #24
   11528:	cmp	r0, #0
   1152c:	beq	1156c <grafo_adiciona@@Base+0x4c>
   11530:	ldr	r8, [r0, #8]
   11534:	mov	r6, r0
   11538:	mov	r4, r2
   1153c:	mov	r5, r1
   11540:	add	r7, r8, r1, lsl #3
   11544:	ldr	r0, [r7, #4]!
   11548:	cmp	r0, #0
   1154c:	bne	11560 <grafo_adiciona@@Base+0x40>
   11550:	b	11570 <grafo_adiciona@@Base+0x50>
   11554:	ldr	r0, [r0, #4]
   11558:	cmp	r0, #0
   1155c:	beq	11570 <grafo_adiciona@@Base+0x50>
   11560:	ldr	r1, [r0]
   11564:	cmp	r1, r4
   11568:	bne	11554 <grafo_adiciona@@Base+0x34>
   1156c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11570:	mov	r0, #8
   11574:	bl	10e48 <malloc@plt>
   11578:	str	r4, [r0]
   1157c:	ldr	r1, [r7]
   11580:	str	r1, [r0, #4]
   11584:	str	r0, [r7]
   11588:	ldr	r0, [r8, r5, lsl #3]
   1158c:	add	r0, r0, #1
   11590:	str	r0, [r8, r5, lsl #3]
   11594:	ldr	r0, [r6]
   11598:	cmp	r0, #0
   1159c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   115a0:	mov	r0, #8
   115a4:	bl	10e48 <malloc@plt>
   115a8:	str	r5, [r0]
   115ac:	add	r1, r8, r4, lsl #3
   115b0:	ldr	r2, [r1, #4]
   115b4:	str	r2, [r0, #4]
   115b8:	ldr	r2, [r8, r4, lsl #3]
   115bc:	add	r2, r2, #1
   115c0:	str	r2, [r8, r4, lsl #3]
   115c4:	str	r0, [r1, #4]
   115c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115cc <grafo_existe@@Base>:
   115cc:	mov	r3, r0
   115d0:	mov	r0, #0
   115d4:	cmp	r3, #0
   115d8:	beq	11600 <grafo_existe@@Base+0x34>
   115dc:	ldr	r3, [r3, #8]
   115e0:	add	r1, r3, r1, lsl #3
   115e4:	ldr	r1, [r1, #4]
   115e8:	cmp	r1, #0
   115ec:	bxeq	lr
   115f0:	ldr	r3, [r1]
   115f4:	cmp	r3, r2
   115f8:	bne	115e4 <grafo_existe@@Base+0x18>
   115fc:	mov	r0, #1
   11600:	bx	lr

00011604 <grafo_remove@@Base>:
   11604:	push	{r4, r5, r6, sl, fp, lr}
   11608:	add	fp, sp, #16
   1160c:	cmp	r0, #0
   11610:	beq	11680 <grafo_remove@@Base+0x7c>
   11614:	mov	r6, r0
   11618:	ldr	r0, [r0, #8]
   1161c:	mov	r4, r1
   11620:	add	r1, r0, r1, lsl #3
   11624:	ldr	r0, [r1, #4]!
   11628:	cmp	r0, #0
   1162c:	beq	11680 <grafo_remove@@Base+0x7c>
   11630:	mov	r5, r2
   11634:	ldr	r2, [r0]
   11638:	cmp	r2, r5
   1163c:	bne	1164c <grafo_remove@@Base+0x48>
   11640:	ldr	r2, [r0, #4]
   11644:	str	r2, [r1]
   11648:	b	11670 <grafo_remove@@Base+0x6c>
   1164c:	mov	r1, r0
   11650:	ldr	r0, [r0, #4]
   11654:	cmp	r0, #0
   11658:	beq	11674 <grafo_remove@@Base+0x70>
   1165c:	ldr	r2, [r0]
   11660:	cmp	r2, r5
   11664:	bne	1164c <grafo_remove@@Base+0x48>
   11668:	ldr	r2, [r0, #4]
   1166c:	str	r2, [r1, #4]
   11670:	bl	10e18 <free@plt>
   11674:	ldr	r0, [r6]
   11678:	cmp	r0, #0
   1167c:	beq	11684 <grafo_remove@@Base+0x80>
   11680:	pop	{r4, r5, r6, sl, fp, pc}
   11684:	ldr	r0, [r6, #8]
   11688:	add	r1, r0, r5, lsl #3
   1168c:	ldr	r0, [r1, #4]!
   11690:	ldr	r2, [r0]
   11694:	cmp	r2, r4
   11698:	bne	116ac <grafo_remove@@Base+0xa8>
   1169c:	ldr	r2, [r0, #4]
   116a0:	str	r2, [r1]
   116a4:	pop	{r4, r5, r6, sl, fp, lr}
   116a8:	b	10e18 <free@plt>
   116ac:	mov	r1, r0
   116b0:	ldr	r0, [r0, #4]
   116b4:	cmp	r0, #0
   116b8:	popeq	{r4, r5, r6, sl, fp, pc}
   116bc:	ldr	r2, [r0]
   116c0:	cmp	r2, r4
   116c4:	bne	116ac <grafo_remove@@Base+0xa8>
   116c8:	ldr	r2, [r0, #4]
   116cc:	str	r2, [r1, #4]
   116d0:	pop	{r4, r5, r6, sl, fp, lr}
   116d4:	b	10e18 <free@plt>

000116d8 <grafo_imprime@@Base>:
   116d8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   116dc:	add	fp, sp, #24
   116e0:	mov	r4, r0
   116e4:	ldr	r0, [r0, #4]
   116e8:	cmp	r0, #1
   116ec:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
   116f0:	ldr	r9, [pc, #116]	; 1176c <grafo_imprime@@Base+0x94>
   116f4:	ldr	r8, [pc, #116]	; 11770 <grafo_imprime@@Base+0x98>
   116f8:	ldr	r7, [pc, #116]	; 11774 <grafo_imprime@@Base+0x9c>
   116fc:	mov	r5, #0
   11700:	add	r9, pc, r9
   11704:	add	r8, pc, r8
   11708:	add	r7, pc, r7
   1170c:	ldr	r0, [r4, #8]
   11710:	mov	r1, r5
   11714:	add	r0, r0, r5, lsl #3
   11718:	ldr	r6, [r0, #4]
   1171c:	mov	r0, r9
   11720:	bl	10df4 <printf@plt>
   11724:	cmp	r6, #0
   11728:	beq	11750 <grafo_imprime@@Base+0x78>
   1172c:	ldr	r1, [r6]
   11730:	mov	r0, r8
   11734:	b	11740 <grafo_imprime@@Base+0x68>
   11738:	ldr	r1, [r6]
   1173c:	mov	r0, r7
   11740:	bl	10df4 <printf@plt>
   11744:	ldr	r6, [r6, #4]
   11748:	cmp	r6, #0
   1174c:	bne	11738 <grafo_imprime@@Base+0x60>
   11750:	mov	r0, #10
   11754:	bl	10e84 <putchar@plt>
   11758:	ldr	r0, [r4, #4]
   1175c:	add	r5, r5, #1
   11760:	cmp	r5, r0
   11764:	blt	1170c <grafo_imprime@@Base+0x34>
   11768:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1176c:	andeq	r0, r0, r8, ror #30
   11770:	andeq	r0, r0, fp, ror #30
   11774:	andeq	r0, r0, r5, ror #30

00011778 <dfs_helper@@Base>:
   11778:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1177c:	add	fp, sp, #24
   11780:	sub	sp, sp, #8
   11784:	ldr	r9, [fp, #8]
   11788:	mov	r4, r1
   1178c:	mov	r6, r0
   11790:	mov	r0, #0
   11794:	ldr	r1, [r9, r1, lsl #2]
   11798:	cmp	r1, #0
   1179c:	bne	11824 <dfs_helper@@Base+0xac>
   117a0:	cmp	r4, r2
   117a4:	mov	r5, r2
   117a8:	str	r3, [r9, r4, lsl #2]
   117ac:	moveq	r0, r3
   117b0:	subeq	sp, fp, #24
   117b4:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   117b8:	ldr	r0, [r6, #4]
   117bc:	cmp	r0, #1
   117c0:	blt	1181c <dfs_helper@@Base+0xa4>
   117c4:	add	r8, r3, #1
   117c8:	mov	r7, #0
   117cc:	ldr	r1, [r6, #8]
   117d0:	add	r1, r1, r4, lsl #3
   117d4:	ldr	r1, [r1, #4]
   117d8:	cmp	r1, #0
   117dc:	beq	11810 <dfs_helper@@Base+0x98>
   117e0:	ldr	r2, [r1]
   117e4:	cmp	r2, r7
   117e8:	bne	117d4 <dfs_helper@@Base+0x5c>
   117ec:	mov	r0, r6
   117f0:	mov	r1, r7
   117f4:	mov	r2, r5
   117f8:	mov	r3, r8
   117fc:	str	r9, [sp]
   11800:	bl	11778 <dfs_helper@@Base>
   11804:	cmp	r0, #0
   11808:	bne	11824 <dfs_helper@@Base+0xac>
   1180c:	ldr	r0, [r6, #4]
   11810:	add	r7, r7, #1
   11814:	cmp	r7, r0
   11818:	blt	117cc <dfs_helper@@Base+0x54>
   1181c:	mov	r0, #0
   11820:	str	r0, [r9, r4, lsl #2]
   11824:	sub	sp, fp, #24
   11828:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001182c <grafo_dfs@@Base>:
   1182c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11830:	add	fp, sp, #24
   11834:	sub	sp, sp, #8
   11838:	cmp	r0, #0
   1183c:	beq	118f4 <grafo_dfs@@Base+0xc8>
   11840:	mov	r4, r0
   11844:	ldr	r0, [r0, #4]
   11848:	mov	r7, r1
   1184c:	mov	r1, #4
   11850:	mov	r8, r3
   11854:	mov	r6, r2
   11858:	bl	10dd0 <calloc@plt>
   1185c:	mov	r5, r0
   11860:	str	r0, [sp]
   11864:	mov	r0, r4
   11868:	mov	r1, r7
   1186c:	mov	r2, r6
   11870:	mov	r3, #1
   11874:	bl	11778 <dfs_helper@@Base>
   11878:	cmp	r0, #0
   1187c:	beq	118fc <grafo_dfs@@Base+0xd0>
   11880:	mov	r1, #4
   11884:	mov	r7, r0
   11888:	bl	10dd0 <calloc@plt>
   1188c:	mov	r6, r0
   11890:	cmp	r7, #1
   11894:	blt	118e4 <grafo_dfs@@Base+0xb8>
   11898:	ldr	r0, [r4, #4]
   1189c:	mov	r1, #0
   118a0:	mov	r2, r1
   118a4:	add	r1, r1, #1
   118a8:	cmp	r0, #1
   118ac:	blt	118cc <grafo_dfs@@Base+0xa0>
   118b0:	mov	r3, #0
   118b4:	ldr	r4, [r5, r3, lsl #2]
   118b8:	cmp	r4, r1
   118bc:	beq	118d8 <grafo_dfs@@Base+0xac>
   118c0:	add	r3, r3, #1
   118c4:	cmp	r3, r0
   118c8:	blt	118b4 <grafo_dfs@@Base+0x88>
   118cc:	cmp	r1, r7
   118d0:	bne	118a0 <grafo_dfs@@Base+0x74>
   118d4:	b	118e4 <grafo_dfs@@Base+0xb8>
   118d8:	str	r3, [r6, r2, lsl #2]
   118dc:	cmp	r1, r7
   118e0:	bne	118a0 <grafo_dfs@@Base+0x74>
   118e4:	mov	r0, r5
   118e8:	str	r7, [r8]
   118ec:	bl	10e18 <free@plt>
   118f0:	b	1190c <grafo_dfs@@Base+0xe0>
   118f4:	mov	r6, #0
   118f8:	b	1190c <grafo_dfs@@Base+0xe0>
   118fc:	mov	r0, r5
   11900:	bl	10e18 <free@plt>
   11904:	mov	r6, #0
   11908:	str	r6, [r8]
   1190c:	mov	r0, r6
   11910:	sub	sp, fp, #24
   11914:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011918 <grafo_bfs@@Base>:
   11918:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1191c:	add	fp, sp, #28
   11920:	sub	sp, sp, #12
   11924:	cmp	r0, #0
   11928:	beq	11a30 <grafo_bfs@@Base+0x118>
   1192c:	stmib	sp, {r2, r3}
   11930:	mov	r8, r1
   11934:	mov	sl, r0
   11938:	mov	r1, #4
   1193c:	ldr	r7, [r0, #4]
   11940:	mov	r0, r7
   11944:	bl	10dd0 <calloc@plt>
   11948:	mov	r5, r0
   1194c:	mov	r0, r7
   11950:	mov	r1, #4
   11954:	bl	10dd0 <calloc@plt>
   11958:	mov	r9, r0
   1195c:	cmp	r7, #1
   11960:	blt	11974 <grafo_bfs@@Base+0x5c>
   11964:	lsl	r2, r7, #2
   11968:	mov	r0, r5
   1196c:	mov	r1, #255	; 0xff
   11970:	bl	10e78 <memset@plt>
   11974:	str	r8, [r5, r8, lsl #2]
   11978:	str	r8, [r9]
   1197c:	mov	r0, #0
   11980:	mov	r1, #1
   11984:	b	1198c <grafo_bfs@@Base+0x74>
   11988:	ldr	r8, [r9, r0, lsl #2]
   1198c:	add	r0, r0, #1
   11990:	cmp	r7, #1
   11994:	sdiv	r2, r0, r7
   11998:	mls	r0, r2, r7, r0
   1199c:	blt	11a04 <grafo_bfs@@Base+0xec>
   119a0:	ldr	r2, [sl, #8]
   119a4:	mov	r3, #0
   119a8:	add	r2, r2, r8, lsl #3
   119ac:	ldr	r6, [r2, #4]
   119b0:	cmp	r6, #0
   119b4:	mov	r2, r6
   119b8:	beq	119f8 <grafo_bfs@@Base+0xe0>
   119bc:	ldr	r4, [r2]
   119c0:	cmp	r4, r3
   119c4:	beq	119d8 <grafo_bfs@@Base+0xc0>
   119c8:	ldr	r2, [r2, #4]
   119cc:	cmp	r2, #0
   119d0:	bne	119bc <grafo_bfs@@Base+0xa4>
   119d4:	b	119f8 <grafo_bfs@@Base+0xe0>
   119d8:	ldr	r2, [r5, r3, lsl #2]
   119dc:	cmn	r2, #1
   119e0:	bne	119f8 <grafo_bfs@@Base+0xe0>
   119e4:	str	r3, [r9, r1, lsl #2]
   119e8:	add	r1, r1, #1
   119ec:	str	r8, [r5, r3, lsl #2]
   119f0:	sdiv	r2, r1, r7
   119f4:	mls	r1, r2, r7, r1
   119f8:	add	r3, r3, #1
   119fc:	cmp	r3, r7
   11a00:	bne	119b0 <grafo_bfs@@Base+0x98>
   11a04:	cmp	r0, r1
   11a08:	bne	11988 <grafo_bfs@@Base+0x70>
   11a0c:	ldr	r6, [sp, #4]
   11a10:	ldr	r4, [r5, r6, lsl #2]
   11a14:	cmp	r4, #0
   11a18:	blt	11a38 <grafo_bfs@@Base+0x120>
   11a1c:	cmp	r4, r6
   11a20:	bne	11a40 <grafo_bfs@@Base+0x128>
   11a24:	mov	r8, #2
   11a28:	mov	r7, #1
   11a2c:	b	11a60 <grafo_bfs@@Base+0x148>
   11a30:	mov	sl, #0
   11a34:	b	11ab0 <grafo_bfs@@Base+0x198>
   11a38:	mov	r7, #0
   11a3c:	b	11a98 <grafo_bfs@@Base+0x180>
   11a40:	mov	r7, #1
   11a44:	mov	r0, r4
   11a48:	ldr	r1, [r5, r0, lsl #2]
   11a4c:	add	r7, r7, #1
   11a50:	cmp	r1, r0
   11a54:	mov	r0, r1
   11a58:	bne	11a48 <grafo_bfs@@Base+0x130>
   11a5c:	add	r8, r7, #1
   11a60:	lsl	r0, r7, #2
   11a64:	bl	10e48 <malloc@plt>
   11a68:	mov	sl, r0
   11a6c:	add	r0, r0, r7, lsl #2
   11a70:	cmp	r8, #2
   11a74:	str	r6, [r0, #-4]
   11a78:	beq	11a98 <grafo_bfs@@Base+0x180>
   11a7c:	sub	r0, r0, #8
   11a80:	sub	r1, r8, #2
   11a84:	ldr	r2, [r5, r4, lsl #2]
   11a88:	str	r4, [r0], #-4
   11a8c:	subs	r1, r1, #1
   11a90:	mov	r4, r2
   11a94:	bne	11a84 <grafo_bfs@@Base+0x16c>
   11a98:	mov	r0, r9
   11a9c:	bl	10e18 <free@plt>
   11aa0:	mov	r0, r5
   11aa4:	bl	10e18 <free@plt>
   11aa8:	ldr	r0, [sp, #8]
   11aac:	str	r7, [r0]
   11ab0:	mov	r0, sl
   11ab4:	sub	sp, fp, #28
   11ab8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011abc <heap_nova@@Base>:
   11abc:	push	{r4, r5, fp, lr}
   11ac0:	add	fp, sp, #8
   11ac4:	mov	r5, r0
   11ac8:	mov	r0, #12
   11acc:	bl	10e48 <malloc@plt>
   11ad0:	cmp	r0, #0
   11ad4:	beq	11b0c <heap_nova@@Base+0x50>
   11ad8:	mov	r4, r0
   11adc:	mov	r0, #0
   11ae0:	mov	r1, #4
   11ae4:	stm	r4, {r0, r5}
   11ae8:	mov	r0, r5
   11aec:	bl	10dd0 <calloc@plt>
   11af0:	cmp	r0, #0
   11af4:	str	r0, [r4, #8]
   11af8:	beq	11b04 <heap_nova@@Base+0x48>
   11afc:	mov	r0, r4
   11b00:	pop	{r4, r5, fp, pc}
   11b04:	mov	r0, r4
   11b08:	bl	10e18 <free@plt>
   11b0c:	mov	r4, #0
   11b10:	mov	r0, r4
   11b14:	pop	{r4, r5, fp, pc}

00011b18 <heap_apaga@@Base>:
   11b18:	cmp	r0, #0
   11b1c:	bxeq	lr
   11b20:	push	{r4, r5, r6, sl, fp, lr}
   11b24:	add	fp, sp, #16
   11b28:	ldr	r1, [r0]
   11b2c:	mov	r4, r0
   11b30:	ldr	r0, [r0, #8]
   11b34:	cmp	r1, #1
   11b38:	blt	11b78 <heap_apaga@@Base+0x60>
   11b3c:	mov	r5, #0
   11b40:	mov	r6, #0
   11b44:	ldr	r0, [r0, r6, lsl #2]
   11b48:	ldr	r0, [r0, #4]
   11b4c:	bl	10e18 <free@plt>
   11b50:	ldr	r0, [r4, #8]
   11b54:	ldr	r0, [r0, r6, lsl #2]
   11b58:	bl	10e18 <free@plt>
   11b5c:	ldr	r0, [r4, #8]
   11b60:	str	r5, [r0, r6, lsl #2]
   11b64:	add	r6, r6, #1
   11b68:	ldr	r1, [r4]
   11b6c:	ldr	r0, [r4, #8]
   11b70:	cmp	r6, r1
   11b74:	blt	11b44 <heap_apaga@@Base+0x2c>
   11b78:	bl	10e18 <free@plt>
   11b7c:	mov	r0, r4
   11b80:	pop	{r4, r5, r6, sl, fp, lr}
   11b84:	b	10e18 <free@plt>

00011b88 <elemento_cria@@Base>:
   11b88:	push	{r4, r5, r6, r7, fp, lr}
   11b8c:	add	fp, sp, #16
   11b90:	mov	r4, r0
   11b94:	mov	r0, #8
   11b98:	mov	r7, r1
   11b9c:	bl	10e48 <malloc@plt>
   11ba0:	mov	r5, #0
   11ba4:	cmp	r0, #0
   11ba8:	beq	11be0 <elemento_cria@@Base+0x58>
   11bac:	mov	r6, r0
   11bb0:	mov	r0, r7
   11bb4:	bl	10e6c <strlen@plt>
   11bb8:	add	r0, r0, #1
   11bbc:	mov	r1, #1
   11bc0:	bl	10dd0 <calloc@plt>
   11bc4:	cmp	r0, #0
   11bc8:	str	r0, [r6, #4]
   11bcc:	beq	11be8 <elemento_cria@@Base+0x60>
   11bd0:	mov	r1, r7
   11bd4:	bl	10e30 <strcpy@plt>
   11bd8:	mov	r5, r6
   11bdc:	str	r4, [r6]
   11be0:	mov	r0, r5
   11be4:	pop	{r4, r5, r6, r7, fp, pc}
   11be8:	mov	r0, r6
   11bec:	bl	10e18 <free@plt>
   11bf0:	mov	r0, r5
   11bf4:	pop	{r4, r5, r6, r7, fp, pc}

00011bf8 <heap_insere@@Base>:
   11bf8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11bfc:	add	fp, sp, #24
   11c00:	mov	r4, r0
   11c04:	mov	r7, r1
   11c08:	ldr	r0, [r0]
   11c0c:	mov	r5, #0
   11c10:	ldr	r1, [r4, #4]
   11c14:	cmp	r0, r1
   11c18:	bge	11ccc <heap_insere@@Base+0xd4>
   11c1c:	mov	r0, #8
   11c20:	mov	r8, r2
   11c24:	bl	10e48 <malloc@plt>
   11c28:	cmp	r0, #0
   11c2c:	beq	11ccc <heap_insere@@Base+0xd4>
   11c30:	mov	r6, r0
   11c34:	mov	r0, r7
   11c38:	bl	10e6c <strlen@plt>
   11c3c:	add	r0, r0, #1
   11c40:	mov	r1, #1
   11c44:	bl	10dd0 <calloc@plt>
   11c48:	cmp	r0, #0
   11c4c:	str	r0, [r6, #4]
   11c50:	beq	11cd4 <heap_insere@@Base+0xdc>
   11c54:	mov	r1, r7
   11c58:	bl	10e30 <strcpy@plt>
   11c5c:	str	r8, [r6]
   11c60:	ldr	r0, [r4]
   11c64:	ldr	r1, [r4, #8]
   11c68:	str	r6, [r1, r0, lsl #2]
   11c6c:	add	r1, r0, #1
   11c70:	cmp	r0, #0
   11c74:	str	r1, [r4]
   11c78:	beq	11cc8 <heap_insere@@Base+0xd0>
   11c7c:	ldr	r1, [r4, #8]
   11c80:	ldr	r2, [r1, r0, lsl #2]
   11c84:	cmp	r2, #0
   11c88:	subne	r3, r0, #1
   11c8c:	addne	r3, r3, r3, lsr #31
   11c90:	asrne	r3, r3, #1
   11c94:	ldrne	r7, [r1, r3, lsl #2]
   11c98:	cmpne	r7, #0
   11c9c:	beq	11cc8 <heap_insere@@Base+0xd0>
   11ca0:	ldr	r6, [r7]
   11ca4:	ldr	r5, [r2]
   11ca8:	cmp	r5, r6
   11cac:	bge	11cc8 <heap_insere@@Base+0xd0>
   11cb0:	str	r2, [r1, r3, lsl #2]
   11cb4:	cmp	r0, #2
   11cb8:	ldr	r1, [r4, #8]
   11cbc:	str	r7, [r1, r0, lsl #2]
   11cc0:	mov	r0, r3
   11cc4:	bhi	11c7c <heap_insere@@Base+0x84>
   11cc8:	mov	r5, #1
   11ccc:	mov	r0, r5
   11cd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11cd4:	mov	r0, r6
   11cd8:	bl	10e18 <free@plt>
   11cdc:	mov	r0, r5
   11ce0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011ce4 <menor_que@@Base>:
   11ce4:	mov	r2, r0
   11ce8:	mov	r0, #0
   11cec:	cmp	r2, #0
   11cf0:	cmpne	r1, #0
   11cf4:	bne	11cfc <menor_que@@Base+0x18>
   11cf8:	bx	lr
   11cfc:	ldr	r1, [r1]
   11d00:	ldr	r2, [r2]
   11d04:	mov	r0, #0
   11d08:	cmp	r2, r1
   11d0c:	movwlt	r0, #1
   11d10:	bx	lr

00011d14 <heap_remove@@Base>:
   11d14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11d18:	add	fp, sp, #24
   11d1c:	mov	r8, #0
   11d20:	cmp	r0, #0
   11d24:	beq	11e18 <heap_remove@@Base+0x104>
   11d28:	mov	r5, r0
   11d2c:	ldr	r0, [r0]
   11d30:	cmp	r0, #1
   11d34:	blt	11e18 <heap_remove@@Base+0x104>
   11d38:	ldr	r0, [r5, #8]
   11d3c:	ldr	r0, [r0]
   11d40:	ldr	r8, [r0, #4]
   11d44:	bl	10e18 <free@plt>
   11d48:	ldr	r0, [r5]
   11d4c:	ldr	r1, [r5, #8]
   11d50:	mov	r7, #0
   11d54:	sub	lr, r0, #1
   11d58:	cmp	r0, #3
   11d5c:	str	lr, [r5]
   11d60:	ldr	r2, [r1, lr, lsl #2]
   11d64:	str	r2, [r1]
   11d68:	ldr	r1, [r5, #8]
   11d6c:	str	r7, [r1, lr, lsl #2]
   11d70:	blt	11e18 <heap_remove@@Base+0x104>
   11d74:	mov	ip, #1
   11d78:	mov	r3, #1
   11d7c:	mov	r1, #0
   11d80:	ldr	r6, [r5, #8]
   11d84:	add	r2, r7, #2
   11d88:	cmp	r2, lr
   11d8c:	bge	11db4 <heap_remove@@Base+0xa0>
   11d90:	mov	r4, r6
   11d94:	mov	r7, r6
   11d98:	ldr	r0, [r4, r2, lsl #2]!
   11d9c:	ldr	r9, [r7, r3, lsl #2]!
   11da0:	cmp	r0, #0
   11da4:	cmpne	r9, #0
   11da8:	bne	11e04 <heap_remove@@Base+0xf0>
   11dac:	mov	r4, r7
   11db0:	b	11db8 <heap_remove@@Base+0xa4>
   11db4:	add	r4, r6, r3, lsl #2
   11db8:	mov	r2, r3
   11dbc:	ldr	r3, [r4]
   11dc0:	cmp	r3, #0
   11dc4:	ldrne	r0, [r6, r1, lsl #2]
   11dc8:	cmpne	r0, #0
   11dcc:	beq	11e18 <heap_remove@@Base+0x104>
   11dd0:	ldr	r6, [r0]
   11dd4:	ldr	r7, [r3]
   11dd8:	cmp	r7, r6
   11ddc:	bge	11e18 <heap_remove@@Base+0x104>
   11de0:	str	r0, [r4]
   11de4:	lsl	r7, r2, #1
   11de8:	ldr	r0, [r5, #8]
   11dec:	str	r3, [r0, r1, lsl #2]
   11df0:	orr	r3, ip, r2, lsl #1
   11df4:	mov	r1, r2
   11df8:	cmp	r3, lr
   11dfc:	blt	11d80 <heap_remove@@Base+0x6c>
   11e00:	b	11e18 <heap_remove@@Base+0x104>
   11e04:	ldr	r9, [r9]
   11e08:	ldr	r0, [r0]
   11e0c:	cmp	r0, r9
   11e10:	bge	11dac <heap_remove@@Base+0x98>
   11e14:	b	11dbc <heap_remove@@Base+0xa8>
   11e18:	mov	r0, r8
   11e1c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011e20 <mostraHeap@@Base>:
   11e20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e24:	add	fp, sp, #28
   11e28:	sub	sp, sp, #4
   11e2c:	mov	r9, r0
   11e30:	ldr	r0, [r0]
   11e34:	cmp	r0, r1
   11e38:	ble	11ee0 <mostraHeap@@Base+0xc0>
   11e3c:	mov	sl, r1
   11e40:	mov	r7, #0
   11e44:	cmp	r1, #1
   11e48:	blt	11e6c <mostraHeap@@Base+0x4c>
   11e4c:	mov	r0, sl
   11e50:	sub	r1, r0, #1
   11e54:	add	r7, r7, #1
   11e58:	cmp	r0, #2
   11e5c:	add	r1, r1, r1, lsr #31
   11e60:	asr	r1, r1, #1
   11e64:	mov	r0, r1
   11e68:	bgt	11e50 <mostraHeap@@Base+0x30>
   11e6c:	mov	r0, #1
   11e70:	orr	r1, r0, sl, lsl #1
   11e74:	mov	r0, r9
   11e78:	bl	11e20 <mostraHeap@@Base>
   11e7c:	lsl	r8, sl, #1
   11e80:	cmp	r7, #0
   11e84:	beq	11eac <mostraHeap@@Base+0x8c>
   11e88:	ldr	r6, [pc, #96]	; 11ef0 <mostraHeap@@Base+0xd0>
   11e8c:	add	r4, r7, r7, lsl #1
   11e90:	mov	r5, #0
   11e94:	add	r6, pc, r6
   11e98:	mov	r0, r6
   11e9c:	bl	10df4 <printf@plt>
   11ea0:	add	r5, r5, #1
   11ea4:	cmp	r5, r4
   11ea8:	bcc	11e98 <mostraHeap@@Base+0x78>
   11eac:	ldr	r0, [r9, #8]
   11eb0:	ldr	r0, [r0, sl, lsl #2]
   11eb4:	ldr	r2, [r0]
   11eb8:	ldr	r1, [r0, #4]
   11ebc:	ldr	r0, [pc, #48]	; 11ef4 <mostraHeap@@Base+0xd4>
   11ec0:	add	r0, pc, r0
   11ec4:	bl	10df4 <printf@plt>
   11ec8:	add	r1, r8, #2
   11ecc:	mov	r0, r9
   11ed0:	bl	11e20 <mostraHeap@@Base>
   11ed4:	cmp	r7, #0
   11ed8:	subne	sp, fp, #28
   11edc:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ee0:	mov	r0, #10
   11ee4:	sub	sp, fp, #28
   11ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11eec:	b	10e84 <putchar@plt>
   11ef0:	ldrdeq	r0, [r0], -lr
   11ef4:			; <UNDEFINED> instruction: 0x000007b8

00011ef8 <novo_str@@Base>:
   11ef8:	push	{r4, r5, r6, sl, fp, lr}
   11efc:	add	fp, sp, #16
   11f00:	mov	r6, r0
   11f04:	mov	r0, #8
   11f08:	bl	10e48 <malloc@plt>
   11f0c:	mov	r5, #0
   11f10:	cmp	r0, #0
   11f14:	beq	11f4c <novo_str@@Base+0x54>
   11f18:	mov	r4, r0
   11f1c:	mov	r0, r6
   11f20:	bl	10e6c <strlen@plt>
   11f24:	add	r0, r0, #1
   11f28:	bl	10e48 <malloc@plt>
   11f2c:	cmp	r0, #0
   11f30:	str	r0, [r4]
   11f34:	beq	11f54 <novo_str@@Base+0x5c>
   11f38:	mov	r1, r6
   11f3c:	bl	10e30 <strcpy@plt>
   11f40:	mov	r0, #0
   11f44:	mov	r5, r4
   11f48:	str	r0, [r4, #4]
   11f4c:	mov	r0, r5
   11f50:	pop	{r4, r5, r6, sl, fp, pc}
   11f54:	mov	r0, r4
   11f58:	bl	10e18 <free@plt>
   11f5c:	mov	r0, r5
   11f60:	pop	{r4, r5, r6, sl, fp, pc}

00011f64 <lista_nova@@Base>:
   11f64:	push	{fp, lr}
   11f68:	mov	fp, sp
   11f6c:	mov	r0, #8
   11f70:	bl	10e48 <malloc@plt>
   11f74:	cmp	r0, #0
   11f78:	moveq	r0, #0
   11f7c:	movne	r1, #0
   11f80:	strne	r1, [r0]
   11f84:	strne	r1, [r0, #4]
   11f88:	pop	{fp, pc}

00011f8c <lista_apaga@@Base>:
   11f8c:	cmp	r0, #0
   11f90:	bxeq	lr
   11f94:	push	{r4, r5, fp, lr}
   11f98:	add	fp, sp, #8
   11f9c:	mov	r4, r0
   11fa0:	b	11fbc <lista_apaga@@Base+0x30>
   11fa4:	ldr	r0, [r5, #4]
   11fa8:	str	r0, [r4]
   11fac:	ldr	r0, [r5]
   11fb0:	bl	10e18 <free@plt>
   11fb4:	mov	r0, r5
   11fb8:	bl	10e18 <free@plt>
   11fbc:	ldr	r5, [r4]
   11fc0:	cmp	r5, #0
   11fc4:	bne	11fa4 <lista_apaga@@Base+0x18>
   11fc8:	mov	r0, r4
   11fcc:	pop	{r4, r5, fp, lr}
   11fd0:	b	10e18 <free@plt>

00011fd4 <lista_tamanho@@Base>:
   11fd4:	cmp	r0, #0
   11fd8:	ldrne	r0, [r0, #4]
   11fdc:	mvneq	r0, #0
   11fe0:	bx	lr

00011fe4 <lista_elemento@@Base>:
   11fe4:	mov	r2, r0
   11fe8:	mov	r0, #0
   11fec:	cmp	r2, #0
   11ff0:	beq	12034 <lista_elemento@@Base+0x50>
   11ff4:	cmp	r1, #0
   11ff8:	bxlt	lr
   11ffc:	ldr	r2, [r2]
   12000:	cmp	r1, #1
   12004:	blt	1202c <lista_elemento@@Base+0x48>
   12008:	cmp	r2, #0
   1200c:	beq	1202c <lista_elemento@@Base+0x48>
   12010:	mov	r3, #1
   12014:	ldr	r2, [r2, #4]
   12018:	cmp	r3, r1
   1201c:	bge	1202c <lista_elemento@@Base+0x48>
   12020:	add	r3, r3, #1
   12024:	cmp	r2, #0
   12028:	bne	12014 <lista_elemento@@Base+0x30>
   1202c:	cmp	r2, #0
   12030:	ldrne	r0, [r2]
   12034:	bx	lr

00012038 <lista_atribui@@Base>:
   12038:	push	{r4, r5, r6, r7, fp, lr}
   1203c:	add	fp, sp, #16
   12040:	mov	r4, r1
   12044:	mov	r1, r0
   12048:	mvn	r0, #0
   1204c:	cmp	r1, #0
   12050:	beq	120c0 <lista_atribui@@Base+0x88>
   12054:	cmp	r4, #0
   12058:	blt	120c0 <lista_atribui@@Base+0x88>
   1205c:	ldr	r7, [r1]
   12060:	mov	r5, r2
   12064:	cmp	r4, #1
   12068:	blt	12090 <lista_atribui@@Base+0x58>
   1206c:	cmp	r7, #0
   12070:	beq	12090 <lista_atribui@@Base+0x58>
   12074:	mov	r1, #1
   12078:	ldr	r7, [r7, #4]
   1207c:	cmp	r1, r4
   12080:	bge	12090 <lista_atribui@@Base+0x58>
   12084:	add	r1, r1, #1
   12088:	cmp	r7, #0
   1208c:	bne	12078 <lista_atribui@@Base+0x40>
   12090:	cmp	r7, #0
   12094:	popeq	{r4, r5, r6, r7, fp, pc}
   12098:	ldr	r6, [r7]
   1209c:	mov	r0, r5
   120a0:	bl	10e6c <strlen@plt>
   120a4:	add	r1, r0, #1
   120a8:	mov	r0, r6
   120ac:	bl	10e24 <realloc@plt>
   120b0:	mov	r1, r5
   120b4:	str	r0, [r7]
   120b8:	bl	10e30 <strcpy@plt>
   120bc:	mov	r0, r4
   120c0:	pop	{r4, r5, r6, r7, fp, pc}

000120c4 <lista_insere@@Base>:
   120c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   120c8:	add	fp, sp, #24
   120cc:	cmp	r0, #0
   120d0:	beq	12178 <lista_insere@@Base+0xb4>
   120d4:	mov	r4, r2
   120d8:	cmn	r2, #1
   120dc:	blt	12178 <lista_insere@@Base+0xb4>
   120e0:	mov	r7, r1
   120e4:	mov	r6, r0
   120e8:	cmp	r4, #0
   120ec:	beq	120fc <lista_insere@@Base+0x38>
   120f0:	ldr	r0, [r6, #4]
   120f4:	cmp	r0, r4
   120f8:	ble	12178 <lista_insere@@Base+0xb4>
   120fc:	ldr	r5, [r6]
   12100:	mov	r0, #8
   12104:	bl	10e48 <malloc@plt>
   12108:	cmp	r0, #0
   1210c:	beq	12178 <lista_insere@@Base+0xb4>
   12110:	mov	r8, r0
   12114:	mov	r0, r7
   12118:	bl	10e6c <strlen@plt>
   1211c:	add	r0, r0, #1
   12120:	bl	10e48 <malloc@plt>
   12124:	cmp	r0, #0
   12128:	str	r0, [r8]
   1212c:	beq	12170 <lista_insere@@Base+0xac>
   12130:	mov	r1, r7
   12134:	bl	10e30 <strcpy@plt>
   12138:	mov	r0, #0
   1213c:	cmn	r4, #1
   12140:	str	r0, [r8, #4]
   12144:	ldr	r0, [r6, #4]
   12148:	add	r1, r0, #1
   1214c:	str	r1, [r6, #4]
   12150:	beq	12184 <lista_insere@@Base+0xc0>
   12154:	cmp	r4, #0
   12158:	bne	121a8 <lista_insere@@Base+0xe4>
   1215c:	mov	r4, #0
   12160:	str	r5, [r8, #4]
   12164:	str	r8, [r6]
   12168:	mov	r0, r4
   1216c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12170:	mov	r0, r8
   12174:	bl	10e18 <free@plt>
   12178:	mvn	r4, #0
   1217c:	mov	r0, r4
   12180:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12184:	cmp	r5, #0
   12188:	streq	r8, [r6]
   1218c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   12190:	mov	r1, r5
   12194:	ldr	r5, [r5, #4]
   12198:	cmp	r5, #0
   1219c:	bne	12190 <lista_insere@@Base+0xcc>
   121a0:	str	r8, [r1, #4]
   121a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   121a8:	sub	r0, r4, #1
   121ac:	mov	r1, #0
   121b0:	mov	r2, r5
   121b4:	ldr	r5, [r5, #4]
   121b8:	cmp	r1, r0
   121bc:	bge	121cc <lista_insere@@Base+0x108>
   121c0:	add	r1, r1, #1
   121c4:	cmp	r2, #0
   121c8:	bne	121b0 <lista_insere@@Base+0xec>
   121cc:	mov	r0, r4
   121d0:	str	r5, [r8, #4]
   121d4:	str	r8, [r2, #4]
   121d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000121dc <lista_remove@@Base>:
   121dc:	push	{r4, r5, fp, lr}
   121e0:	add	fp, sp, #8
   121e4:	mov	r2, r0
   121e8:	mvn	r0, #0
   121ec:	cmp	r2, #0
   121f0:	popeq	{r4, r5, fp, pc}
   121f4:	cmp	r1, #0
   121f8:	ldrge	r3, [r2, #4]
   121fc:	cmpge	r3, r1
   12200:	bgt	12208 <lista_remove@@Base+0x2c>
   12204:	pop	{r4, r5, fp, pc}
   12208:	sub	r0, r3, #1
   1220c:	cmp	r1, #0
   12210:	str	r0, [r2, #4]
   12214:	ldr	r5, [r2]
   12218:	beq	12264 <lista_remove@@Base+0x88>
   1221c:	mov	r0, r5
   12220:	ldr	r2, [r0, #4]!
   12224:	cmp	r2, #0
   12228:	beq	12270 <lista_remove@@Base+0x94>
   1222c:	mov	r2, #0
   12230:	mov	r3, r5
   12234:	ldr	r5, [r3, #4]
   12238:	add	r2, r2, #1
   1223c:	cmp	r2, r1
   12240:	bge	12278 <lista_remove@@Base+0x9c>
   12244:	mov	r0, r5
   12248:	ldr	r4, [r0, #4]!
   1224c:	cmp	r4, #0
   12250:	mov	r4, r3
   12254:	mov	r3, r5
   12258:	bne	12234 <lista_remove@@Base+0x58>
   1225c:	add	r1, r4, #4
   12260:	b	12284 <lista_remove@@Base+0xa8>
   12264:	ldr	r0, [r5, #4]
   12268:	str	r0, [r2]
   1226c:	b	1228c <lista_remove@@Base+0xb0>
   12270:	add	r1, r4, #4
   12274:	b	12284 <lista_remove@@Base+0xa8>
   12278:	add	r2, r5, #4
   1227c:	mov	r1, r0
   12280:	mov	r0, r2
   12284:	ldr	r0, [r0]
   12288:	str	r0, [r1]
   1228c:	ldr	r0, [r5]
   12290:	bl	10e18 <free@plt>
   12294:	mov	r0, r5
   12298:	bl	10e18 <free@plt>
   1229c:	mov	r0, #0
   122a0:	pop	{r4, r5, fp, pc}

000122a4 <lista_pesquisa@@Base>:
   122a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   122a8:	add	fp, sp, #24
   122ac:	cmp	r0, #0
   122b0:	mvn	r8, #0
   122b4:	ldrne	r7, [r0]
   122b8:	cmpne	r7, #0
   122bc:	beq	12310 <lista_pesquisa@@Base+0x6c>
   122c0:	mov	r4, r2
   122c4:	mov	r6, r1
   122c8:	mov	r5, #0
   122cc:	mvn	r8, #0
   122d0:	ldr	r0, [r7]
   122d4:	mov	r1, r6
   122d8:	bl	10ddc <strcmp@plt>
   122dc:	cmp	r0, #0
   122e0:	bne	12300 <lista_pesquisa@@Base+0x5c>
   122e4:	cmn	r4, #1
   122e8:	beq	122fc <lista_pesquisa@@Base+0x58>
   122ec:	cmp	r4, #0
   122f0:	moveq	r0, r5
   122f4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   122f8:	b	12300 <lista_pesquisa@@Base+0x5c>
   122fc:	mov	r8, r5
   12300:	ldr	r7, [r7, #4]
   12304:	add	r5, r5, #1
   12308:	cmp	r7, #0
   1230c:	bne	122d0 <lista_pesquisa@@Base+0x2c>
   12310:	mov	r0, r8
   12314:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012318 <lista_ordena@@Base>:
   12318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1231c:	add	fp, sp, #28
   12320:	sub	sp, sp, #4
   12324:	cmp	r0, #0
   12328:	mvneq	r0, #0
   1232c:	subeq	sp, fp, #28
   12330:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12334:	ldr	sl, [r0]
   12338:	mov	r9, r0
   1233c:	mov	r0, #0
   12340:	mov	r4, sl
   12344:	ldr	r7, [r4, #4]!
   12348:	cmp	r7, #0
   1234c:	beq	123f8 <lista_ordena@@Base+0xe0>
   12350:	mov	r5, sl
   12354:	b	12364 <lista_ordena@@Base+0x4c>
   12358:	str	r7, [r9]
   1235c:	mov	sl, r7
   12360:	b	123e4 <lista_ordena@@Base+0xcc>
   12364:	ldr	r6, [r7]
   12368:	ldr	r0, [r5]
   1236c:	mov	r1, r6
   12370:	bl	10ddc <strcmp@plt>
   12374:	cmp	r0, #1
   12378:	blt	123e0 <lista_ordena@@Base+0xc8>
   1237c:	ldr	r0, [r7, #4]
   12380:	str	r0, [r4]
   12384:	ldr	r0, [r7, #4]
   12388:	cmp	r0, r5
   1238c:	beq	123e4 <lista_ordena@@Base+0xcc>
   12390:	ldr	r0, [sl]
   12394:	mov	r1, r6
   12398:	bl	10ddc <strcmp@plt>
   1239c:	cmp	r0, #0
   123a0:	mov	r0, sl
   123a4:	mov	r4, sl
   123a8:	bgt	123cc <lista_ordena@@Base+0xb4>
   123ac:	ldr	r8, [r4, #4]
   123b0:	mov	r1, r6
   123b4:	ldr	r0, [r8]
   123b8:	bl	10ddc <strcmp@plt>
   123bc:	cmp	r0, #0
   123c0:	mov	r0, r4
   123c4:	mov	r4, r8
   123c8:	ble	123ac <lista_ordena@@Base+0x94>
   123cc:	cmp	r4, sl
   123d0:	str	r4, [r7, #4]
   123d4:	beq	12358 <lista_ordena@@Base+0x40>
   123d8:	str	r7, [r0, #4]
   123dc:	b	123e4 <lista_ordena@@Base+0xcc>
   123e0:	mov	r5, r7
   123e4:	mov	r4, r5
   123e8:	ldr	r7, [r4, #4]!
   123ec:	cmp	r7, #0
   123f0:	bne	12364 <lista_ordena@@Base+0x4c>
   123f4:	mov	r0, #0
   123f8:	sub	sp, fp, #28
   123fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012400 <lista_compara@@Base>:
   12400:	push	{r4, r5, r6, sl, fp, lr}
   12404:	add	fp, sp, #16
   12408:	cmp	r0, #0
   1240c:	mvn	r4, #0
   12410:	cmpne	r1, #0
   12414:	bne	12420 <lista_compara@@Base+0x20>
   12418:	mov	r0, r4
   1241c:	pop	{r4, r5, r6, sl, fp, pc}
   12420:	ldr	r2, [r1, #4]
   12424:	ldr	r3, [r0, #4]
   12428:	mov	r4, #0
   1242c:	cmp	r3, r2
   12430:	bne	12418 <lista_compara@@Base+0x18>
   12434:	ldr	r6, [r0]
   12438:	ldr	r5, [r1]
   1243c:	cmp	r6, #0
   12440:	bne	12458 <lista_compara@@Base+0x58>
   12444:	b	12470 <lista_compara@@Base+0x70>
   12448:	ldr	r6, [r6, #4]
   1244c:	ldr	r5, [r5, #4]
   12450:	cmp	r6, #0
   12454:	beq	12470 <lista_compara@@Base+0x70>
   12458:	ldr	r1, [r5]
   1245c:	ldr	r0, [r6]
   12460:	bl	10ddc <strcmp@plt>
   12464:	cmp	r0, #0
   12468:	beq	12448 <lista_compara@@Base+0x48>
   1246c:	b	12418 <lista_compara@@Base+0x18>
   12470:	mvn	r4, #0
   12474:	cmp	r5, #0
   12478:	movweq	r4, #1
   1247c:	mov	r0, r4
   12480:	pop	{r4, r5, r6, sl, fp, pc}

00012484 <lista_inverte@@Base>:
   12484:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12488:	add	fp, sp, #24
   1248c:	mov	r5, #0
   12490:	cmp	r0, #0
   12494:	beq	12534 <lista_inverte@@Base+0xb0>
   12498:	mov	r6, r0
   1249c:	mov	r0, #8
   124a0:	bl	10e48 <malloc@plt>
   124a4:	cmp	r0, #0
   124a8:	beq	12534 <lista_inverte@@Base+0xb0>
   124ac:	mov	r7, #0
   124b0:	mov	r8, r0
   124b4:	str	r7, [r0]
   124b8:	str	r7, [r0, #4]
   124bc:	ldr	r4, [r6]
   124c0:	cmp	r4, #0
   124c4:	beq	12530 <lista_inverte@@Base+0xac>
   124c8:	mov	r9, #0
   124cc:	ldr	r6, [r4]
   124d0:	mov	r0, #8
   124d4:	bl	10e48 <malloc@plt>
   124d8:	cmp	r0, #0
   124dc:	beq	12524 <lista_inverte@@Base+0xa0>
   124e0:	mov	r5, r0
   124e4:	mov	r0, r6
   124e8:	bl	10e6c <strlen@plt>
   124ec:	add	r0, r0, #1
   124f0:	bl	10e48 <malloc@plt>
   124f4:	cmp	r0, #0
   124f8:	str	r0, [r5]
   124fc:	beq	1251c <lista_inverte@@Base+0x98>
   12500:	mov	r1, r6
   12504:	bl	10e30 <strcpy@plt>
   12508:	str	r9, [r5, #4]
   1250c:	add	r7, r7, #1
   12510:	mov	r9, r5
   12514:	stm	r8, {r5, r7}
   12518:	b	12524 <lista_inverte@@Base+0xa0>
   1251c:	mov	r0, r5
   12520:	bl	10e18 <free@plt>
   12524:	ldr	r4, [r4, #4]
   12528:	cmp	r4, #0
   1252c:	bne	124cc <lista_inverte@@Base+0x48>
   12530:	mov	r5, r8
   12534:	mov	r0, r5
   12538:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001253c <__libc_csu_init@@Base>:
   1253c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12540:	mov	r7, r0
   12544:	ldr	r6, [pc, #72]	; 12594 <__libc_csu_init@@Base+0x58>
   12548:	ldr	r5, [pc, #72]	; 12598 <__libc_csu_init@@Base+0x5c>
   1254c:	add	r6, pc, r6
   12550:	add	r5, pc, r5
   12554:	sub	r6, r6, r5
   12558:	mov	r8, r1
   1255c:	mov	r9, r2
   12560:	bl	10db0 <calloc@plt-0x20>
   12564:	asrs	r6, r6, #2
   12568:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1256c:	mov	r4, #0
   12570:	add	r4, r4, #1
   12574:	ldr	r3, [r5], #4
   12578:	mov	r2, r9
   1257c:	mov	r1, r8
   12580:	mov	r0, r7
   12584:	blx	r3
   12588:	cmp	r6, r4
   1258c:	bne	12570 <__libc_csu_init@@Base+0x34>
   12590:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12594:			; <UNDEFINED> instruction: 0x000109b8
   12598:			; <UNDEFINED> instruction: 0x000109b0

0001259c <__libc_csu_fini@@Base>:
   1259c:	bx	lr

Disassembly of section .fini:

000125a0 <.fini>:
   125a0:	push	{r3, lr}
   125a4:	pop	{r3, pc}
