
../repos/sgerbino-table-2fdd8d0/bin/table_validator_test:     file format elf32-littlearm


Disassembly of section .init:

00011f9c <.init>:
   11f9c:	push	{r3, lr}
   11fa0:	bl	120ac <_start@@Base+0x3c>
   11fa4:	pop	{r3, pc}

Disassembly of section .plt:

00011fa8 <strcmp@plt-0x14>:
   11fa8:	push	{lr}		; (str lr, [sp, #-4]!)
   11fac:	ldr	lr, [pc, #4]	; 11fb8 <strcmp@plt-0x4>
   11fb0:	add	lr, pc, lr
   11fb4:	ldr	pc, [lr, #8]!
   11fb8:	andeq	r4, r1, r8, asr #32

00011fbc <strcmp@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #20, 20	; 0x14000
   11fc4:	ldr	pc, [ip, #72]!	; 0x48

00011fc8 <printf@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #20, 20	; 0x14000
   11fd0:	ldr	pc, [ip, #64]!	; 0x40

00011fd4 <free@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #20, 20	; 0x14000
   11fdc:	ldr	pc, [ip, #56]!	; 0x38

00011fe0 <time@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #20, 20	; 0x14000
   11fe8:	ldr	pc, [ip, #48]!	; 0x30

00011fec <realloc@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #20, 20	; 0x14000
   11ff4:	ldr	pc, [ip, #40]!	; 0x28

00011ff8 <strcpy@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #20, 20	; 0x14000
   12000:	ldr	pc, [ip, #32]!

00012004 <malloc@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #20, 20	; 0x14000
   1200c:	ldr	pc, [ip, #24]!

00012010 <__libc_start_main@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #20, 20	; 0x14000
   12018:	ldr	pc, [ip, #16]!

0001201c <__gmon_start__@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #20, 20	; 0x14000
   12024:	ldr	pc, [ip, #8]!

00012028 <strlen@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #20, 20	; 0x14000
   12030:	ldr	pc, [ip, #0]!

00012034 <srand@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #77824	; 0x13000
   1203c:	ldr	pc, [ip, #4088]!	; 0xff8

00012040 <snprintf@plt>:
   12040:	add	ip, pc, #0, 12
   12044:	add	ip, ip, #77824	; 0x13000
   12048:	ldr	pc, [ip, #4080]!	; 0xff0

0001204c <__isoc99_sscanf@plt>:
   1204c:	add	ip, pc, #0, 12
   12050:	add	ip, ip, #77824	; 0x13000
   12054:	ldr	pc, [ip, #4072]!	; 0xfe8

00012058 <rand@plt>:
   12058:	add	ip, pc, #0, 12
   1205c:	add	ip, ip, #77824	; 0x13000
   12060:	ldr	pc, [ip, #4064]!	; 0xfe0

00012064 <abort@plt>:
   12064:	add	ip, pc, #0, 12
   12068:	add	ip, ip, #77824	; 0x13000
   1206c:	ldr	pc, [ip, #4056]!	; 0xfd8

Disassembly of section .text:

00012070 <_start@@Base>:
   12070:	mov	fp, #0
   12074:	mov	lr, #0
   12078:	pop	{r1}		; (ldr r1, [sp], #4)
   1207c:	mov	r2, sp
   12080:	push	{r2}		; (str r2, [sp, #-4]!)
   12084:	push	{r0}		; (str r0, [sp, #-4]!)
   12088:	ldr	ip, [pc, #16]	; 120a0 <_start@@Base+0x30>
   1208c:	push	{ip}		; (str ip, [sp, #-4]!)
   12090:	ldr	r0, [pc, #12]	; 120a4 <_start@@Base+0x34>
   12094:	ldr	r3, [pc, #12]	; 120a8 <_start@@Base+0x38>
   12098:	bl	12010 <__libc_start_main@plt>
   1209c:	bl	12064 <abort@plt>
   120a0:	andeq	r5, r1, r8, lsr #16
   120a4:	andeq	r2, r1, r0, ror #2
   120a8:	andeq	r5, r1, r8, asr #15
   120ac:	ldr	r3, [pc, #20]	; 120c8 <_start@@Base+0x58>
   120b0:	ldr	r2, [pc, #20]	; 120cc <_start@@Base+0x5c>
   120b4:	add	r3, pc, r3
   120b8:	ldr	r2, [r3, r2]
   120bc:	cmp	r2, #0
   120c0:	bxeq	lr
   120c4:	b	1201c <__gmon_start__@plt>
   120c8:	andeq	r3, r1, r4, asr #30
   120cc:	andeq	r0, r0, r8, asr #32
   120d0:	ldr	r0, [pc, #24]	; 120f0 <_start@@Base+0x80>
   120d4:	ldr	r3, [pc, #24]	; 120f4 <_start@@Base+0x84>
   120d8:	cmp	r3, r0
   120dc:	bxeq	lr
   120e0:	ldr	r3, [pc, #16]	; 120f8 <_start@@Base+0x88>
   120e4:	cmp	r3, #0
   120e8:	bxeq	lr
   120ec:	bx	r3
   120f0:	andeq	r6, r2, r4, asr r0
   120f4:	andeq	r6, r2, r4, asr r0
   120f8:	andeq	r0, r0, r0
   120fc:	ldr	r0, [pc, #36]	; 12128 <_start@@Base+0xb8>
   12100:	ldr	r1, [pc, #36]	; 1212c <_start@@Base+0xbc>
   12104:	sub	r1, r1, r0
   12108:	asr	r1, r1, #2
   1210c:	add	r1, r1, r1, lsr #31
   12110:	asrs	r1, r1, #1
   12114:	bxeq	lr
   12118:	ldr	r3, [pc, #16]	; 12130 <_start@@Base+0xc0>
   1211c:	cmp	r3, #0
   12120:	bxeq	lr
   12124:	bx	r3
   12128:	andeq	r6, r2, r4, asr r0
   1212c:	andeq	r6, r2, r4, asr r0
   12130:	andeq	r0, r0, r0
   12134:	push	{r4, lr}
   12138:	ldr	r4, [pc, #24]	; 12158 <_start@@Base+0xe8>
   1213c:	ldrb	r3, [r4]
   12140:	cmp	r3, #0
   12144:	popne	{r4, pc}
   12148:	bl	120d0 <_start@@Base+0x60>
   1214c:	mov	r3, #1
   12150:	strb	r3, [r4]
   12154:	pop	{r4, pc}
   12158:	andeq	r6, r2, r4, asr r0
   1215c:	b	120fc <_start@@Base+0x8c>

00012160 <main@@Base>:
   12160:	push	{r4, r5, r6, r7, fp, lr}
   12164:	add	fp, sp, #16
   12168:	sub	sp, sp, #64	; 0x40
   1216c:	add	r4, sp, #4
   12170:	mov	r0, r4
   12174:	bl	11fe0 <time@plt>
   12178:	bl	12034 <srand@plt>
   1217c:	bl	12058 <rand@plt>
   12180:	mov	r5, r0
   12184:	mov	r0, r4
   12188:	bl	11fe0 <time@plt>
   1218c:	bl	12034 <srand@plt>
   12190:	bl	12058 <rand@plt>
   12194:	add	r4, sp, #8
   12198:	mov	r6, r0
   1219c:	mov	r0, r4
   121a0:	bl	1233c <table_init@@Base>
   121a4:	mov	r0, r4
   121a8:	mov	r1, r5
   121ac:	bl	14cc8 <table_row_is_valid@@Base>
   121b0:	cmp	r0, #0
   121b4:	beq	121d0 <main@@Base+0x70>
   121b8:	movw	r0, #22596	; 0x5844
   121bc:	mov	r1, r5
   121c0:	movt	r0, #1
   121c4:	bl	11fc8 <printf@plt>
   121c8:	mvn	r4, #0
   121cc:	b	121d4 <main@@Base+0x74>
   121d0:	mov	r4, #0
   121d4:	add	r0, sp, #8
   121d8:	mov	r1, r6
   121dc:	bl	14c8c <table_column_is_valid@@Base>
   121e0:	cmp	r0, #0
   121e4:	beq	121fc <main@@Base+0x9c>
   121e8:	movw	r0, #22623	; 0x585f
   121ec:	mov	r1, r6
   121f0:	movt	r0, #1
   121f4:	bl	11fc8 <printf@plt>
   121f8:	mvn	r4, #0
   121fc:	add	r0, sp, #8
   12200:	mov	r1, r5
   12204:	mov	r2, r6
   12208:	bl	14d04 <table_cell_is_valid@@Base>
   1220c:	cmp	r0, #0
   12210:	beq	1222c <main@@Base+0xcc>
   12214:	movw	r0, #22653	; 0x587d
   12218:	mov	r1, r5
   1221c:	mov	r2, r6
   12220:	movt	r0, #1
   12224:	bl	11fc8 <printf@plt>
   12228:	mvn	r4, #0
   1222c:	add	r6, sp, #8
   12230:	mov	r0, r6
   12234:	bl	13b94 <table_add_row@@Base>
   12238:	mov	r5, r0
   1223c:	mov	r0, r6
   12240:	mov	r1, r5
   12244:	bl	14cc8 <table_row_is_valid@@Base>
   12248:	cmp	r0, #0
   1224c:	bne	12264 <main@@Base+0x104>
   12250:	movw	r0, #22685	; 0x589d
   12254:	mov	r1, r5
   12258:	movt	r0, #1
   1225c:	bl	11fc8 <printf@plt>
   12260:	mvn	r4, #0
   12264:	movw	r1, #22759	; 0x58e7
   12268:	add	r7, sp, #8
   1226c:	mov	r2, #0
   12270:	movt	r1, #1
   12274:	mov	r0, r7
   12278:	bl	12ec8 <table_add_column@@Base>
   1227c:	mov	r6, r0
   12280:	mov	r0, r7
   12284:	mov	r1, r6
   12288:	bl	14c8c <table_column_is_valid@@Base>
   1228c:	cmp	r0, #0
   12290:	bne	122a8 <main@@Base+0x148>
   12294:	movw	r0, #22708	; 0x58b4
   12298:	mov	r1, r6
   1229c:	movt	r0, #1
   122a0:	bl	11fc8 <printf@plt>
   122a4:	mvn	r4, #0
   122a8:	add	r0, sp, #8
   122ac:	mov	r1, r5
   122b0:	mov	r2, r6
   122b4:	bl	14d04 <table_cell_is_valid@@Base>
   122b8:	cmp	r0, #0
   122bc:	bne	122d8 <main@@Base+0x178>
   122c0:	movw	r0, #22734	; 0x58ce
   122c4:	mov	r1, r5
   122c8:	mov	r2, r6
   122cc:	movt	r0, #1
   122d0:	bl	11fc8 <printf@plt>
   122d4:	mvn	r4, #0
   122d8:	add	r0, sp, #8
   122dc:	bl	12398 <table_destroy@@Base>
   122e0:	mov	r0, r4
   122e4:	sub	sp, fp, #16
   122e8:	pop	{r4, r5, r6, r7, fp, pc}

000122ec <table_new@@Base>:
   122ec:	push	{fp, lr}
   122f0:	mov	fp, sp
   122f4:	mov	r0, #56	; 0x38
   122f8:	bl	12004 <malloc@plt>
   122fc:	mov	r1, #0
   12300:	mov	r2, #10
   12304:	mov	r3, #20
   12308:	vmov.i32	q8, #0	; 0x00000000
   1230c:	str	r1, [r0]
   12310:	stmib	r0, {r1, r2}
   12314:	str	r1, [r0, #12]
   12318:	str	r1, [r0, #16]
   1231c:	str	r1, [r0, #20]
   12320:	str	r3, [r0, #24]
   12324:	str	r1, [r0, #28]
   12328:	str	r2, [r0, #48]	; 0x30
   1232c:	str	r1, [r0, #52]	; 0x34
   12330:	add	r1, r0, #32
   12334:	vst1.32	{d16-d17}, [r1]
   12338:	pop	{fp, pc}

0001233c <table_init@@Base>:
   1233c:	mov	r1, #0
   12340:	mov	r2, #10
   12344:	mov	r3, #20
   12348:	vmov.i32	q8, #0	; 0x00000000
   1234c:	str	r1, [r0]
   12350:	stmib	r0, {r1, r2}
   12354:	str	r1, [r0, #12]
   12358:	str	r1, [r0, #16]
   1235c:	str	r1, [r0, #20]
   12360:	str	r3, [r0, #24]
   12364:	str	r1, [r0, #28]
   12368:	str	r2, [r0, #48]	; 0x30
   1236c:	str	r1, [r0, #52]	; 0x34
   12370:	add	r0, r0, #32
   12374:	vst1.32	{d16-d17}, [r0]
   12378:	bx	lr

0001237c <table_delete@@Base>:
   1237c:	push	{r4, sl, fp, lr}
   12380:	add	fp, sp, #8
   12384:	mov	r4, r0
   12388:	bl	12398 <table_destroy@@Base>
   1238c:	mov	r0, r4
   12390:	pop	{r4, sl, fp, lr}
   12394:	b	11fd4 <free@plt>

00012398 <table_destroy@@Base>:
   12398:	cmp	r0, #0
   1239c:	bxeq	lr
   123a0:	push	{r4, r5, r6, sl, fp, lr}
   123a4:	add	fp, sp, #16
   123a8:	mvn	r1, #0
   123ac:	mvn	r2, #0
   123b0:	mov	r3, #64	; 0x40
   123b4:	mov	r4, r0
   123b8:	bl	12d40 <table_notify@@Base>
   123bc:	mov	r0, r4
   123c0:	bl	13b8c <table_get_row_length@@Base>
   123c4:	cmp	r0, #1
   123c8:	blt	123ec <table_destroy@@Base+0x54>
   123cc:	mov	r5, r0
   123d0:	mov	r6, #0
   123d4:	mov	r0, r4
   123d8:	mov	r1, r6
   123dc:	bl	13b34 <table_row_destroy@@Base>
   123e0:	add	r6, r6, #1
   123e4:	cmp	r5, r6
   123e8:	bne	123d4 <table_destroy@@Base+0x3c>
   123ec:	ldr	r0, [r4, #16]
   123f0:	cmp	r0, #0
   123f4:	beq	123fc <table_destroy@@Base+0x64>
   123f8:	bl	11fd4 <free@plt>
   123fc:	mov	r0, r4
   12400:	bl	12e34 <table_get_column_length@@Base>
   12404:	cmp	r0, #1
   12408:	blt	1242c <table_destroy@@Base+0x94>
   1240c:	mov	r5, r0
   12410:	mov	r6, #0
   12414:	mov	r0, r4
   12418:	mov	r1, r6
   1241c:	bl	12e1c <table_column_destroy@@Base>
   12420:	add	r6, r6, #1
   12424:	cmp	r5, r6
   12428:	bne	12414 <table_destroy@@Base+0x7c>
   1242c:	ldr	r0, [r4]
   12430:	cmp	r0, #0
   12434:	beq	1243c <table_destroy@@Base+0xa4>
   12438:	bl	11fd4 <free@plt>
   1243c:	ldr	r0, [r4, #36]	; 0x24
   12440:	cmp	r0, #0
   12444:	beq	1244c <table_destroy@@Base+0xb4>
   12448:	bl	11fd4 <free@plt>
   1244c:	ldr	r0, [r4, #40]	; 0x28
   12450:	cmp	r0, #0
   12454:	beq	1245c <table_destroy@@Base+0xc4>
   12458:	bl	11fd4 <free@plt>
   1245c:	ldr	r0, [r4, #44]	; 0x2c
   12460:	cmp	r0, #0
   12464:	pop	{r4, r5, r6, sl, fp, lr}
   12468:	beq	12470 <table_destroy@@Base+0xd8>
   1246c:	b	11fd4 <free@plt>
   12470:	bx	lr

00012474 <table_dupe@@Base>:
   12474:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12478:	add	fp, sp, #28
   1247c:	sub	sp, sp, #12
   12480:	mov	r4, r0
   12484:	bl	13b8c <table_get_row_length@@Base>
   12488:	mov	r8, r0
   1248c:	mov	r0, r4
   12490:	bl	12e34 <table_get_column_length@@Base>
   12494:	mov	r6, r0
   12498:	mov	r0, #56	; 0x38
   1249c:	bl	12004 <malloc@plt>
   124a0:	mov	sl, r0
   124a4:	mov	r5, #0
   124a8:	mov	r0, #10
   124ac:	mov	r1, #20
   124b0:	cmp	r6, #1
   124b4:	vmov.i32	q8, #0	; 0x00000000
   124b8:	str	r5, [sl]
   124bc:	str	r5, [sl, #4]
   124c0:	str	r0, [sl, #8]
   124c4:	str	r5, [sl, #12]
   124c8:	str	r5, [sl, #16]
   124cc:	str	r5, [sl, #20]
   124d0:	str	r1, [sl, #24]
   124d4:	str	r5, [sl, #28]
   124d8:	str	r0, [sl, #48]	; 0x30
   124dc:	add	r0, sl, #32
   124e0:	str	r5, [sl, #52]	; 0x34
   124e4:	vst1.32	{d16-d17}, [r0]
   124e8:	blt	12524 <table_dupe@@Base+0xb0>
   124ec:	mov	r0, r4
   124f0:	mov	r1, r5
   124f4:	bl	12ea4 <table_get_column_name@@Base>
   124f8:	mov	r7, r0
   124fc:	mov	r0, r4
   12500:	mov	r1, r5
   12504:	bl	12eb4 <table_get_column_data_type@@Base>
   12508:	mov	r2, r0
   1250c:	mov	r0, sl
   12510:	mov	r1, r7
   12514:	bl	12ec8 <table_add_column@@Base>
   12518:	add	r5, r5, #1
   1251c:	cmp	r6, r5
   12520:	bne	124ec <table_dupe@@Base+0x78>
   12524:	cmp	r8, #1
   12528:	blt	12aa4 <table_dupe@@Base+0x630>
   1252c:	mov	r5, #0
   12530:	add	r9, sp, #8
   12534:	mov	r0, sl
   12538:	bl	13b94 <table_add_row@@Base>
   1253c:	cmp	r6, #1
   12540:	blt	12a98 <table_dupe@@Base+0x624>
   12544:	mov	r7, #0
   12548:	mov	r0, r4
   1254c:	mov	r1, r7
   12550:	bl	12eb4 <table_get_column_data_type@@Base>
   12554:	cmp	r0, #23
   12558:	bhi	125e8 <table_dupe@@Base+0x174>
   1255c:	add	r1, pc, #0
   12560:	ldr	pc, [r1, r0, lsl #2]
   12564:	andeq	r2, r1, r4, asr #11
   12568:	strdeq	r2, [r1], -r8
   1256c:	andeq	r2, r1, ip, lsr #12
   12570:	andeq	r2, r1, r0, ror #12
   12574:	muleq	r1, r4, r6
   12578:	andeq	r2, r1, r8, asr #13
   1257c:	strdeq	r2, [r1], -ip
   12580:	andeq	r2, r1, r0, lsr r7
   12584:	andeq	r2, r1, r4, ror #14
   12588:	muleq	r1, r8, r7
   1258c:	andeq	r2, r1, ip, asr #15
   12590:	andeq	r2, r1, r0, lsl #16
   12594:	andeq	r2, r1, r4, lsr r8
   12598:	andeq	r2, r1, r8, ror #16
   1259c:	muleq	r1, ip, r8
   125a0:	ldrdeq	r2, [r1], -r0
   125a4:	andeq	r2, r1, r4, lsl #18
   125a8:	andeq	r2, r1, r4, lsr r9
   125ac:	andeq	r2, r1, r4, ror #18
   125b0:	muleq	r1, r4, r9
   125b4:	andeq	r2, r1, r8, asr #19
   125b8:	strdeq	r2, [r1], -ip
   125bc:	andeq	r2, r1, r0, lsr sl
   125c0:	andeq	r2, r1, r4, ror #20
   125c4:	mov	r0, r4
   125c8:	mov	r1, r5
   125cc:	mov	r2, r7
   125d0:	bl	138e4 <table_get_int@@Base>
   125d4:	mov	r3, r0
   125d8:	mov	r0, sl
   125dc:	mov	r1, r5
   125e0:	mov	r2, r7
   125e4:	bl	140ec <table_set_int@@Base>
   125e8:	add	r7, r7, #1
   125ec:	cmp	r6, r7
   125f0:	bne	12548 <table_dupe@@Base+0xd4>
   125f4:	b	12a98 <table_dupe@@Base+0x624>
   125f8:	mov	r0, r4
   125fc:	mov	r1, r5
   12600:	mov	r2, r7
   12604:	bl	138fc <table_get_uint@@Base>
   12608:	mov	r3, r0
   1260c:	mov	r0, sl
   12610:	mov	r1, r5
   12614:	mov	r2, r7
   12618:	bl	1416c <table_set_uint@@Base>
   1261c:	add	r7, r7, #1
   12620:	cmp	r6, r7
   12624:	bne	12548 <table_dupe@@Base+0xd4>
   12628:	b	12a98 <table_dupe@@Base+0x624>
   1262c:	mov	r0, r4
   12630:	mov	r1, r5
   12634:	mov	r2, r7
   12638:	bl	13914 <table_get_int8@@Base>
   1263c:	mov	r3, r0
   12640:	mov	r0, sl
   12644:	mov	r1, r5
   12648:	mov	r2, r7
   1264c:	bl	141ec <table_set_int8@@Base>
   12650:	add	r7, r7, #1
   12654:	cmp	r6, r7
   12658:	bne	12548 <table_dupe@@Base+0xd4>
   1265c:	b	12a98 <table_dupe@@Base+0x624>
   12660:	mov	r0, r4
   12664:	mov	r1, r5
   12668:	mov	r2, r7
   1266c:	bl	1392c <table_get_uint8@@Base>
   12670:	mov	r3, r0
   12674:	mov	r0, sl
   12678:	mov	r1, r5
   1267c:	mov	r2, r7
   12680:	bl	1426c <table_set_uint8@@Base>
   12684:	add	r7, r7, #1
   12688:	cmp	r6, r7
   1268c:	bne	12548 <table_dupe@@Base+0xd4>
   12690:	b	12a98 <table_dupe@@Base+0x624>
   12694:	mov	r0, r4
   12698:	mov	r1, r5
   1269c:	mov	r2, r7
   126a0:	bl	13944 <table_get_int16@@Base>
   126a4:	mov	r3, r0
   126a8:	mov	r0, sl
   126ac:	mov	r1, r5
   126b0:	mov	r2, r7
   126b4:	bl	142ec <table_set_int16@@Base>
   126b8:	add	r7, r7, #1
   126bc:	cmp	r6, r7
   126c0:	bne	12548 <table_dupe@@Base+0xd4>
   126c4:	b	12a98 <table_dupe@@Base+0x624>
   126c8:	mov	r0, r4
   126cc:	mov	r1, r5
   126d0:	mov	r2, r7
   126d4:	bl	1395c <table_get_uint16@@Base>
   126d8:	mov	r3, r0
   126dc:	mov	r0, sl
   126e0:	mov	r1, r5
   126e4:	mov	r2, r7
   126e8:	bl	1436c <table_set_uint16@@Base>
   126ec:	add	r7, r7, #1
   126f0:	cmp	r6, r7
   126f4:	bne	12548 <table_dupe@@Base+0xd4>
   126f8:	b	12a98 <table_dupe@@Base+0x624>
   126fc:	mov	r0, r4
   12700:	mov	r1, r5
   12704:	mov	r2, r7
   12708:	bl	13974 <table_get_int32@@Base>
   1270c:	mov	r3, r0
   12710:	mov	r0, sl
   12714:	mov	r1, r5
   12718:	mov	r2, r7
   1271c:	bl	143ec <table_set_int32@@Base>
   12720:	add	r7, r7, #1
   12724:	cmp	r6, r7
   12728:	bne	12548 <table_dupe@@Base+0xd4>
   1272c:	b	12a98 <table_dupe@@Base+0x624>
   12730:	mov	r0, r4
   12734:	mov	r1, r5
   12738:	mov	r2, r7
   1273c:	bl	1398c <table_get_uint32@@Base>
   12740:	mov	r3, r0
   12744:	mov	r0, sl
   12748:	mov	r1, r5
   1274c:	mov	r2, r7
   12750:	bl	1446c <table_set_uint32@@Base>
   12754:	add	r7, r7, #1
   12758:	cmp	r6, r7
   1275c:	bne	12548 <table_dupe@@Base+0xd4>
   12760:	b	12a98 <table_dupe@@Base+0x624>
   12764:	mov	r0, r4
   12768:	mov	r1, r5
   1276c:	mov	r2, r7
   12770:	bl	139a4 <table_get_int64@@Base>
   12774:	stm	sp, {r0, r1}
   12778:	mov	r0, sl
   1277c:	mov	r1, r5
   12780:	mov	r2, r7
   12784:	bl	144ec <table_set_int64@@Base>
   12788:	add	r7, r7, #1
   1278c:	cmp	r6, r7
   12790:	bne	12548 <table_dupe@@Base+0xd4>
   12794:	b	12a98 <table_dupe@@Base+0x624>
   12798:	mov	r0, r4
   1279c:	mov	r1, r5
   127a0:	mov	r2, r7
   127a4:	bl	139bc <table_get_uint64@@Base>
   127a8:	stm	sp, {r0, r1}
   127ac:	mov	r0, sl
   127b0:	mov	r1, r5
   127b4:	mov	r2, r7
   127b8:	bl	14574 <table_set_uint64@@Base>
   127bc:	add	r7, r7, #1
   127c0:	cmp	r6, r7
   127c4:	bne	12548 <table_dupe@@Base+0xd4>
   127c8:	b	12a98 <table_dupe@@Base+0x624>
   127cc:	mov	r0, r4
   127d0:	mov	r1, r5
   127d4:	mov	r2, r7
   127d8:	bl	139d4 <table_get_short@@Base>
   127dc:	mov	r3, r0
   127e0:	mov	r0, sl
   127e4:	mov	r1, r5
   127e8:	mov	r2, r7
   127ec:	bl	145fc <table_set_short@@Base>
   127f0:	add	r7, r7, #1
   127f4:	cmp	r6, r7
   127f8:	bne	12548 <table_dupe@@Base+0xd4>
   127fc:	b	12a98 <table_dupe@@Base+0x624>
   12800:	mov	r0, r4
   12804:	mov	r1, r5
   12808:	mov	r2, r7
   1280c:	bl	139ec <table_get_ushort@@Base>
   12810:	mov	r3, r0
   12814:	mov	r0, sl
   12818:	mov	r1, r5
   1281c:	mov	r2, r7
   12820:	bl	1467c <table_set_ushort@@Base>
   12824:	add	r7, r7, #1
   12828:	cmp	r6, r7
   1282c:	bne	12548 <table_dupe@@Base+0xd4>
   12830:	b	12a98 <table_dupe@@Base+0x624>
   12834:	mov	r0, r4
   12838:	mov	r1, r5
   1283c:	mov	r2, r7
   12840:	bl	13a04 <table_get_long@@Base>
   12844:	mov	r3, r0
   12848:	mov	r0, sl
   1284c:	mov	r1, r5
   12850:	mov	r2, r7
   12854:	bl	146fc <table_set_long@@Base>
   12858:	add	r7, r7, #1
   1285c:	cmp	r6, r7
   12860:	bne	12548 <table_dupe@@Base+0xd4>
   12864:	b	12a98 <table_dupe@@Base+0x624>
   12868:	mov	r0, r4
   1286c:	mov	r1, r5
   12870:	mov	r2, r7
   12874:	bl	13a1c <table_get_ulong@@Base>
   12878:	mov	r3, r0
   1287c:	mov	r0, sl
   12880:	mov	r1, r5
   12884:	mov	r2, r7
   12888:	bl	1477c <table_set_ulong@@Base>
   1288c:	add	r7, r7, #1
   12890:	cmp	r6, r7
   12894:	bne	12548 <table_dupe@@Base+0xd4>
   12898:	b	12a98 <table_dupe@@Base+0x624>
   1289c:	mov	r0, r4
   128a0:	mov	r1, r5
   128a4:	mov	r2, r7
   128a8:	bl	13a34 <table_get_llong@@Base>
   128ac:	stm	sp, {r0, r1}
   128b0:	mov	r0, sl
   128b4:	mov	r1, r5
   128b8:	mov	r2, r7
   128bc:	bl	147fc <table_set_llong@@Base>
   128c0:	add	r7, r7, #1
   128c4:	cmp	r6, r7
   128c8:	bne	12548 <table_dupe@@Base+0xd4>
   128cc:	b	12a98 <table_dupe@@Base+0x624>
   128d0:	mov	r0, r4
   128d4:	mov	r1, r5
   128d8:	mov	r2, r7
   128dc:	bl	13a4c <table_get_ullong@@Base>
   128e0:	stm	sp, {r0, r1}
   128e4:	mov	r0, sl
   128e8:	mov	r1, r5
   128ec:	mov	r2, r7
   128f0:	bl	14884 <table_set_ullong@@Base>
   128f4:	add	r7, r7, #1
   128f8:	cmp	r6, r7
   128fc:	bne	12548 <table_dupe@@Base+0xd4>
   12900:	b	12a98 <table_dupe@@Base+0x624>
   12904:	mov	r0, r4
   12908:	mov	r1, r5
   1290c:	mov	r2, r7
   12910:	bl	13a64 <table_get_float@@Base>
   12914:	mov	r0, sl
   12918:	mov	r1, r5
   1291c:	mov	r2, r7
   12920:	bl	1490c <table_set_float@@Base>
   12924:	add	r7, r7, #1
   12928:	cmp	r6, r7
   1292c:	bne	12548 <table_dupe@@Base+0xd4>
   12930:	b	12a98 <table_dupe@@Base+0x624>
   12934:	mov	r0, r4
   12938:	mov	r1, r5
   1293c:	mov	r2, r7
   12940:	bl	13a7c <table_get_double@@Base>
   12944:	mov	r0, sl
   12948:	mov	r1, r5
   1294c:	mov	r2, r7
   12950:	bl	14998 <table_set_double@@Base>
   12954:	add	r7, r7, #1
   12958:	cmp	r6, r7
   1295c:	bne	12548 <table_dupe@@Base+0xd4>
   12960:	b	12a98 <table_dupe@@Base+0x624>
   12964:	mov	r0, r4
   12968:	mov	r1, r5
   1296c:	mov	r2, r7
   12970:	bl	13a94 <table_get_ldouble@@Base>
   12974:	mov	r0, sl
   12978:	mov	r1, r5
   1297c:	mov	r2, r7
   12980:	bl	14a20 <table_set_ldouble@@Base>
   12984:	add	r7, r7, #1
   12988:	cmp	r6, r7
   1298c:	bne	12548 <table_dupe@@Base+0xd4>
   12990:	b	12a98 <table_dupe@@Base+0x624>
   12994:	mov	r0, r4
   12998:	mov	r1, r5
   1299c:	mov	r2, r7
   129a0:	bl	13aac <table_get_char@@Base>
   129a4:	mov	r3, r0
   129a8:	mov	r0, sl
   129ac:	mov	r1, r5
   129b0:	mov	r2, r7
   129b4:	bl	14b30 <table_set_char@@Base>
   129b8:	add	r7, r7, #1
   129bc:	cmp	r6, r7
   129c0:	bne	12548 <table_dupe@@Base+0xd4>
   129c4:	b	12a98 <table_dupe@@Base+0x624>
   129c8:	mov	r0, r4
   129cc:	mov	r1, r5
   129d0:	mov	r2, r7
   129d4:	bl	13ac4 <table_get_uchar@@Base>
   129d8:	mov	r3, r0
   129dc:	mov	r0, sl
   129e0:	mov	r1, r5
   129e4:	mov	r2, r7
   129e8:	bl	14bb0 <table_set_uchar@@Base>
   129ec:	add	r7, r7, #1
   129f0:	cmp	r6, r7
   129f4:	bne	12548 <table_dupe@@Base+0xd4>
   129f8:	b	12a98 <table_dupe@@Base+0x624>
   129fc:	mov	r0, r4
   12a00:	mov	r1, r5
   12a04:	mov	r2, r7
   12a08:	bl	13adc <table_get_string@@Base>
   12a0c:	mov	r3, r0
   12a10:	mov	r0, sl
   12a14:	mov	r1, r5
   12a18:	mov	r2, r7
   12a1c:	bl	14aa8 <table_set_string@@Base>
   12a20:	add	r7, r7, #1
   12a24:	cmp	r6, r7
   12a28:	bne	12548 <table_dupe@@Base+0xd4>
   12a2c:	b	12a98 <table_dupe@@Base+0x624>
   12a30:	mov	r0, r4
   12a34:	mov	r1, r5
   12a38:	mov	r2, r7
   12a3c:	bl	138cc <table_get_bool@@Base>
   12a40:	mov	r3, r0
   12a44:	mov	r0, sl
   12a48:	mov	r1, r5
   12a4c:	mov	r2, r7
   12a50:	bl	1406c <table_set_bool@@Base>
   12a54:	add	r7, r7, #1
   12a58:	cmp	r6, r7
   12a5c:	bne	12548 <table_dupe@@Base+0xd4>
   12a60:	b	12a98 <table_dupe@@Base+0x624>
   12a64:	mov	r0, r4
   12a68:	mov	r1, r5
   12a6c:	mov	r2, r7
   12a70:	bl	13af0 <table_get_ptr@@Base>
   12a74:	str	r0, [sp, #8]
   12a78:	mov	r0, sl
   12a7c:	mov	r1, r5
   12a80:	mov	r2, r7
   12a84:	mov	r3, r9
   12a88:	bl	14c30 <table_set_ptr@@Base>
   12a8c:	add	r7, r7, #1
   12a90:	cmp	r6, r7
   12a94:	bne	12548 <table_dupe@@Base+0xd4>
   12a98:	add	r5, r5, #1
   12a9c:	cmp	r5, r8
   12aa0:	bne	12534 <table_dupe@@Base+0xc0>
   12aa4:	mov	r0, sl
   12aa8:	sub	sp, fp, #28
   12aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012ab0 <table_get_major_version@@Base>:
   12ab0:	mov	r0, #0
   12ab4:	bx	lr

00012ab8 <table_get_minor_version@@Base>:
   12ab8:	mov	r0, #0
   12abc:	bx	lr

00012ac0 <table_get_patch_version@@Base>:
   12ac0:	mov	r0, #0
   12ac4:	bx	lr

00012ac8 <table_get_version@@Base>:
   12ac8:	movw	r0, #22912	; 0x5980
   12acc:	movt	r0, #1
   12ad0:	bx	lr

00012ad4 <table_get_callback_length@@Base>:
   12ad4:	ldr	r0, [r0, #32]
   12ad8:	bx	lr

00012adc <table_register_callback@@Base>:
   12adc:	push	{r4, r5, r6, r7, fp, lr}
   12ae0:	add	fp, sp, #16
   12ae4:	mov	r5, r0
   12ae8:	ldr	r0, [r0, #32]
   12aec:	mov	r4, r3
   12af0:	mov	r6, r2
   12af4:	mov	r7, r1
   12af8:	cmp	r0, #1
   12afc:	blt	12b30 <table_register_callback@@Base+0x54>
   12b00:	ldr	r2, [r5, #36]	; 0x24
   12b04:	mov	r1, #0
   12b08:	ldr	r3, [r2, r1, lsl #2]
   12b0c:	cmp	r3, r7
   12b10:	bne	12b24 <table_register_callback@@Base+0x48>
   12b14:	ldr	r3, [r5, #40]	; 0x28
   12b18:	ldr	r3, [r3, r1, lsl #2]
   12b1c:	cmp	r3, r6
   12b20:	beq	12bb4 <table_register_callback@@Base+0xd8>
   12b24:	add	r1, r1, #1
   12b28:	cmp	r1, r0
   12b2c:	blt	12b08 <table_register_callback@@Base+0x2c>
   12b30:	ldr	r1, [r5, #48]	; 0x30
   12b34:	udiv	r2, r0, r1
   12b38:	mls	r2, r2, r1, r0
   12b3c:	cmp	r2, #0
   12b40:	bne	12b8c <table_register_callback@@Base+0xb0>
   12b44:	ldr	r2, [r5, #52]	; 0x34
   12b48:	ldr	r0, [r5, #36]	; 0x24
   12b4c:	add	r1, r2, r1
   12b50:	str	r1, [r5, #52]	; 0x34
   12b54:	lsl	r1, r1, #2
   12b58:	bl	11fec <realloc@plt>
   12b5c:	str	r0, [r5, #36]	; 0x24
   12b60:	ldr	r1, [r5, #52]	; 0x34
   12b64:	ldr	r0, [r5, #40]	; 0x28
   12b68:	lsl	r1, r1, #2
   12b6c:	bl	11fec <realloc@plt>
   12b70:	str	r0, [r5, #40]	; 0x28
   12b74:	ldr	r1, [r5, #52]	; 0x34
   12b78:	ldr	r0, [r5, #44]	; 0x2c
   12b7c:	lsl	r1, r1, #2
   12b80:	bl	11fec <realloc@plt>
   12b84:	str	r0, [r5, #44]	; 0x2c
   12b88:	ldr	r0, [r5, #32]
   12b8c:	ldr	r1, [r5, #36]	; 0x24
   12b90:	str	r7, [r1, r0, lsl #2]
   12b94:	ldr	r1, [r5, #40]	; 0x28
   12b98:	str	r6, [r1, r0, lsl #2]
   12b9c:	ldr	r1, [r5, #44]	; 0x2c
   12ba0:	str	r4, [r1, r0, lsl #2]
   12ba4:	ldr	r0, [r5, #32]
   12ba8:	add	r0, r0, #1
   12bac:	str	r0, [r5, #32]
   12bb0:	pop	{r4, r5, r6, r7, fp, pc}
   12bb4:	cmp	r1, #0
   12bb8:	ldrne	r0, [r5, #44]	; 0x2c
   12bbc:	ldrne	r2, [r0, r1, lsl #2]
   12bc0:	orrne	r2, r2, r4
   12bc4:	strne	r2, [r0, r1, lsl #2]
   12bc8:	popne	{r4, r5, r6, r7, fp, pc}
   12bcc:	b	12b30 <table_register_callback@@Base+0x54>

00012bd0 <table_unregister_callback@@Base>:
   12bd0:	push	{r4, r5, r6, sl, fp, lr}
   12bd4:	add	fp, sp, #16
   12bd8:	ldr	r4, [r0, #32]
   12bdc:	cmp	r4, #1
   12be0:	blt	12c18 <table_unregister_callback@@Base+0x48>
   12be4:	ldr	r3, [r0, #36]	; 0x24
   12be8:	mov	r6, r0
   12bec:	mov	r0, #0
   12bf0:	ldr	r5, [r3, r0, lsl #2]
   12bf4:	cmp	r5, r1
   12bf8:	bne	12c0c <table_unregister_callback@@Base+0x3c>
   12bfc:	ldr	r5, [r6, #40]	; 0x28
   12c00:	ldr	r5, [r5, r0, lsl #2]
   12c04:	cmp	r5, r2
   12c08:	beq	12c1c <table_unregister_callback@@Base+0x4c>
   12c0c:	add	r0, r0, #1
   12c10:	cmp	r0, r4
   12c14:	blt	12bf0 <table_unregister_callback@@Base+0x20>
   12c18:	pop	{r4, r5, r6, sl, fp, pc}
   12c1c:	sub	r1, r4, #1
   12c20:	cmp	r0, r1
   12c24:	bge	12cb4 <table_unregister_callback@@Base+0xe4>
   12c28:	add	r1, r3, r0, lsl #2
   12c2c:	ldr	r1, [r1, #4]
   12c30:	str	r1, [r3, r0, lsl #2]
   12c34:	ldr	r1, [r6, #40]	; 0x28
   12c38:	add	r2, r1, r0, lsl #2
   12c3c:	ldr	r2, [r2, #4]
   12c40:	str	r2, [r1, r0, lsl #2]
   12c44:	ldr	r1, [r6, #44]	; 0x2c
   12c48:	add	r2, r1, r0, lsl #2
   12c4c:	ldr	r2, [r2, #4]
   12c50:	str	r2, [r1, r0, lsl #2]
   12c54:	add	r2, r0, #1
   12c58:	ldr	r1, [r6, #32]
   12c5c:	sub	r1, r1, #1
   12c60:	cmp	r2, r1
   12c64:	bge	12cb4 <table_unregister_callback@@Base+0xe4>
   12c68:	ldr	r1, [r6, #36]	; 0x24
   12c6c:	add	r1, r1, r0, lsl #2
   12c70:	ldr	r2, [r1, #8]
   12c74:	str	r2, [r1, #4]
   12c78:	ldr	r1, [r6, #40]	; 0x28
   12c7c:	add	r1, r1, r0, lsl #2
   12c80:	ldr	r2, [r1, #8]
   12c84:	str	r2, [r1, #4]
   12c88:	ldr	r1, [r6, #44]	; 0x2c
   12c8c:	add	r1, r1, r0, lsl #2
   12c90:	ldr	r2, [r1, #8]
   12c94:	str	r2, [r1, #4]
   12c98:	add	r2, r0, #1
   12c9c:	add	r0, r0, #2
   12ca0:	ldr	r1, [r6, #32]
   12ca4:	sub	r1, r1, #1
   12ca8:	cmp	r0, r1
   12cac:	mov	r0, r2
   12cb0:	blt	12c68 <table_unregister_callback@@Base+0x98>
   12cb4:	str	r1, [r6, #32]
   12cb8:	ldr	r2, [r6, #48]	; 0x30
   12cbc:	udiv	r0, r1, r2
   12cc0:	mls	r0, r0, r2, r1
   12cc4:	cmp	r0, #0
   12cc8:	popne	{r4, r5, r6, sl, fp, pc}
   12ccc:	ldr	r1, [r6, #52]	; 0x34
   12cd0:	ldr	r0, [r6, #36]	; 0x24
   12cd4:	subs	r1, r1, r2
   12cd8:	str	r1, [r6, #52]	; 0x34
   12cdc:	beq	12d18 <table_unregister_callback@@Base+0x148>
   12ce0:	lsl	r1, r1, #2
   12ce4:	bl	11fec <realloc@plt>
   12ce8:	str	r0, [r6, #36]	; 0x24
   12cec:	ldr	r1, [r6, #52]	; 0x34
   12cf0:	ldr	r0, [r6, #40]	; 0x28
   12cf4:	lsl	r1, r1, #2
   12cf8:	bl	11fec <realloc@plt>
   12cfc:	str	r0, [r6, #40]	; 0x28
   12d00:	ldr	r1, [r6, #52]	; 0x34
   12d04:	ldr	r0, [r6, #44]	; 0x2c
   12d08:	lsl	r1, r1, #2
   12d0c:	bl	11fec <realloc@plt>
   12d10:	str	r0, [r6, #44]	; 0x2c
   12d14:	pop	{r4, r5, r6, sl, fp, pc}
   12d18:	bl	11fd4 <free@plt>
   12d1c:	ldr	r0, [r6, #40]	; 0x28
   12d20:	bl	11fd4 <free@plt>
   12d24:	ldr	r0, [r6, #44]	; 0x2c
   12d28:	bl	11fd4 <free@plt>
   12d2c:	mov	r0, #0
   12d30:	str	r0, [r6, #36]	; 0x24
   12d34:	str	r0, [r6, #40]	; 0x28
   12d38:	str	r0, [r6, #44]	; 0x2c
   12d3c:	pop	{r4, r5, r6, sl, fp, pc}

00012d40 <table_notify@@Base>:
   12d40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12d44:	add	fp, sp, #24
   12d48:	sub	sp, sp, #8
   12d4c:	mov	r7, r0
   12d50:	ldr	r0, [r0, #32]
   12d54:	cmp	r0, #1
   12d58:	blt	12db4 <table_notify@@Base+0x74>
   12d5c:	mov	r4, r3
   12d60:	mov	r8, r2
   12d64:	mov	r9, r1
   12d68:	mov	r5, #0
   12d6c:	ldr	r1, [r7, #44]	; 0x2c
   12d70:	ldr	r1, [r1, r5, lsl #2]
   12d74:	tst	r1, r4
   12d78:	beq	12da8 <table_notify@@Base+0x68>
   12d7c:	ldr	r0, [r7, #36]	; 0x24
   12d80:	ldr	r1, [r7, #40]	; 0x28
   12d84:	mov	r2, r8
   12d88:	mov	r3, r4
   12d8c:	ldr	r6, [r0, r5, lsl #2]
   12d90:	ldr	r0, [r1, r5, lsl #2]
   12d94:	mov	r1, r9
   12d98:	str	r0, [sp]
   12d9c:	mov	r0, r7
   12da0:	blx	r6
   12da4:	ldr	r0, [r7, #32]
   12da8:	add	r5, r5, #1
   12dac:	cmp	r5, r0
   12db0:	blt	12d6c <table_notify@@Base+0x2c>
   12db4:	sub	sp, fp, #24
   12db8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012dbc <table_column_init@@Base>:
   12dbc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12dc0:	add	fp, sp, #24
   12dc4:	ldr	r7, [r0]
   12dc8:	mov	r0, r2
   12dcc:	mov	r4, r3
   12dd0:	mov	r5, r2
   12dd4:	mov	r6, r1
   12dd8:	bl	12028 <strlen@plt>
   12ddc:	add	r0, r0, #1
   12de0:	bl	12004 <malloc@plt>
   12de4:	ldr	r8, [fp, #8]
   12de8:	add	r6, r6, r6, lsl #1
   12dec:	cmp	r0, #0
   12df0:	str	r0, [r7, r6, lsl #2]
   12df4:	beq	12e00 <table_column_init@@Base+0x44>
   12df8:	mov	r1, r5
   12dfc:	bl	11ff8 <strcpy@plt>
   12e00:	add	r0, r7, r6, lsl #2
   12e04:	stmib	r0, {r4, r8}
   12e08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012e0c <table_get_col_ptr@@Base>:
   12e0c:	ldr	r0, [r0]
   12e10:	add	r1, r1, r1, lsl #1
   12e14:	add	r0, r0, r1, lsl #2
   12e18:	bx	lr

00012e1c <table_column_destroy@@Base>:
   12e1c:	ldr	r0, [r0]
   12e20:	add	r1, r1, r1, lsl #1
   12e24:	ldr	r0, [r0, r1, lsl #2]
   12e28:	cmp	r0, #0
   12e2c:	bxeq	lr
   12e30:	b	11fd4 <free@plt>

00012e34 <table_get_column_length@@Base>:
   12e34:	ldr	r0, [r0, #4]
   12e38:	bx	lr

00012e3c <table_get_column@@Base>:
   12e3c:	push	{r4, r5, r6, r7, fp, lr}
   12e40:	add	fp, sp, #16
   12e44:	ldr	r6, [r0, #4]
   12e48:	cmp	r6, #1
   12e4c:	blt	12e90 <table_get_column@@Base+0x54>
   12e50:	ldr	r7, [r0]
   12e54:	mov	r5, r1
   12e58:	mov	r4, #0
   12e5c:	ldr	r0, [r7]
   12e60:	mov	r1, r5
   12e64:	bl	11fbc <strcmp@plt>
   12e68:	cmp	r0, #0
   12e6c:	beq	12e80 <table_get_column@@Base+0x44>
   12e70:	add	r4, r4, #1
   12e74:	add	r7, r7, #12
   12e78:	cmp	r4, r6
   12e7c:	blt	12e5c <table_get_column@@Base+0x20>
   12e80:	cmp	r4, r6
   12e84:	mvneq	r4, #0
   12e88:	mov	r0, r4
   12e8c:	pop	{r4, r5, r6, r7, fp, pc}
   12e90:	mov	r4, #0
   12e94:	cmp	r4, r6
   12e98:	mvneq	r4, #0
   12e9c:	mov	r0, r4
   12ea0:	pop	{r4, r5, r6, r7, fp, pc}

00012ea4 <table_get_column_name@@Base>:
   12ea4:	ldr	r0, [r0]
   12ea8:	add	r1, r1, r1, lsl #1
   12eac:	ldr	r0, [r0, r1, lsl #2]
   12eb0:	bx	lr

00012eb4 <table_get_column_data_type@@Base>:
   12eb4:	ldr	r0, [r0]
   12eb8:	add	r1, r1, r1, lsl #1
   12ebc:	add	r0, r0, r1, lsl #2
   12ec0:	ldr	r0, [r0, #4]
   12ec4:	bx	lr

00012ec8 <table_add_column@@Base>:
   12ec8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ecc:	add	fp, sp, #28
   12ed0:	sub	sp, sp, #4
   12ed4:	mov	r4, r0
   12ed8:	mov	r8, r1
   12edc:	ldr	r0, [r0, #4]
   12ee0:	mov	r9, r2
   12ee4:	ldr	r1, [r4, #8]
   12ee8:	udiv	r2, r0, r1
   12eec:	mls	r0, r2, r1, r0
   12ef0:	cmp	r0, #0
   12ef4:	bne	12f60 <table_add_column@@Base+0x98>
   12ef8:	ldr	r2, [r4, #12]
   12efc:	ldr	r0, [r4]
   12f00:	add	r1, r2, r1
   12f04:	str	r1, [r4, #12]
   12f08:	add	r1, r1, r1, lsl #1
   12f0c:	lsl	r1, r1, #2
   12f10:	bl	11fec <realloc@plt>
   12f14:	str	r0, [r4]
   12f18:	mov	r0, r4
   12f1c:	bl	13b8c <table_get_row_length@@Base>
   12f20:	cmp	r0, #1
   12f24:	blt	12f60 <table_add_column@@Base+0x98>
   12f28:	mov	r6, r0
   12f2c:	mov	r5, #0
   12f30:	mov	r0, r4
   12f34:	mov	r1, r5
   12f38:	bl	13b28 <table_get_row_ptr@@Base>
   12f3c:	ldr	r1, [r4, #12]
   12f40:	mov	r7, r0
   12f44:	ldr	r0, [r0]
   12f48:	lsl	r1, r1, #2
   12f4c:	bl	11fec <realloc@plt>
   12f50:	add	r5, r5, #1
   12f54:	str	r0, [r7]
   12f58:	cmp	r6, r5
   12f5c:	bne	12f30 <table_add_column@@Base+0x68>
   12f60:	mov	r0, r4
   12f64:	bl	13b8c <table_get_row_length@@Base>
   12f68:	ldr	r6, [r4, #4]
   12f6c:	mov	r7, r0
   12f70:	mov	r0, r9
   12f74:	bl	138a0 <table_get_default_compare_function_for_data_type@@Base>
   12f78:	ldr	r5, [r4]
   12f7c:	mov	sl, r0
   12f80:	mov	r0, r8
   12f84:	bl	12028 <strlen@plt>
   12f88:	add	r0, r0, #1
   12f8c:	bl	12004 <malloc@plt>
   12f90:	mov	r1, r8
   12f94:	add	r8, r6, r6, lsl #1
   12f98:	cmp	r0, #0
   12f9c:	str	r0, [r5, r8, lsl #2]
   12fa0:	beq	12fa8 <table_add_column@@Base+0xe0>
   12fa4:	bl	11ff8 <strcpy@plt>
   12fa8:	add	r0, r5, r8, lsl #2
   12fac:	cmp	r7, #1
   12fb0:	stmib	r0, {r9, sl}
   12fb4:	blt	12fd8 <table_add_column@@Base+0x110>
   12fb8:	mov	r5, #0
   12fbc:	mov	r0, r4
   12fc0:	mov	r1, r5
   12fc4:	mov	r2, r6
   12fc8:	bl	14d90 <table_cell_init@@Base>
   12fcc:	add	r5, r5, #1
   12fd0:	cmp	r7, r5
   12fd4:	bne	12fbc <table_add_column@@Base+0xf4>
   12fd8:	ldr	r2, [r4, #4]
   12fdc:	mov	r0, r4
   12fe0:	mvn	r1, #0
   12fe4:	mov	r3, #8
   12fe8:	bl	12d40 <table_notify@@Base>
   12fec:	ldr	r0, [r4, #4]
   12ff0:	add	r1, r0, #1
   12ff4:	str	r1, [r4, #4]
   12ff8:	sub	sp, fp, #28
   12ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013000 <table_remove_column@@Base>:
   13000:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13004:	add	fp, sp, #24
   13008:	mov	r5, r0
   1300c:	ldr	r0, [r0]
   13010:	add	r6, r1, r1, lsl #1
   13014:	mov	r9, r1
   13018:	ldr	r0, [r0, r6, lsl #2]
   1301c:	cmp	r0, #0
   13020:	beq	13028 <table_remove_column@@Base+0x28>
   13024:	bl	11fd4 <free@plt>
   13028:	ldr	r0, [r5, #4]
   1302c:	sub	r4, r0, #1
   13030:	cmp	r4, r9
   13034:	ble	13064 <table_remove_column@@Base+0x64>
   13038:	sub	r0, r4, r9
   1303c:	lsl	r1, r6, #2
   13040:	ldr	r2, [r5]
   13044:	subs	r0, r0, #1
   13048:	add	r2, r2, r1
   1304c:	add	r1, r1, #12
   13050:	vldr	d16, [r2, #12]
   13054:	ldr	r3, [r2, #20]
   13058:	str	r3, [r2, #8]
   1305c:	vstr	d16, [r2]
   13060:	bne	13040 <table_remove_column@@Base+0x40>
   13064:	mov	r0, r5
   13068:	bl	13b8c <table_get_row_length@@Base>
   1306c:	cmp	r0, #1
   13070:	blt	130f8 <table_remove_column@@Base+0xf8>
   13074:	mov	r6, r0
   13078:	mov	r7, #0
   1307c:	cmp	r4, r9
   13080:	ble	130d0 <table_remove_column@@Base+0xd0>
   13084:	mov	r0, r5
   13088:	mov	r1, r7
   1308c:	mov	r2, r9
   13090:	bl	14dcc <table_cell_destroy@@Base>
   13094:	mov	r0, r5
   13098:	mov	r1, r7
   1309c:	bl	13b28 <table_get_row_ptr@@Base>
   130a0:	mov	r1, r9
   130a4:	ldr	r2, [r0]
   130a8:	add	r3, r2, r1, lsl #2
   130ac:	ldr	r3, [r3, #4]
   130b0:	str	r3, [r2, r1, lsl #2]
   130b4:	add	r1, r1, #1
   130b8:	cmp	r4, r1
   130bc:	bne	130a4 <table_remove_column@@Base+0xa4>
   130c0:	add	r7, r7, #1
   130c4:	cmp	r7, r6
   130c8:	bne	13084 <table_remove_column@@Base+0x84>
   130cc:	b	130f8 <table_remove_column@@Base+0xf8>
   130d0:	mov	r0, r5
   130d4:	mov	r1, r7
   130d8:	mov	r2, r9
   130dc:	bl	14dcc <table_cell_destroy@@Base>
   130e0:	mov	r0, r5
   130e4:	mov	r1, r7
   130e8:	bl	13b28 <table_get_row_ptr@@Base>
   130ec:	add	r7, r7, #1
   130f0:	cmp	r6, r7
   130f4:	bne	130d0 <table_remove_column@@Base+0xd0>
   130f8:	ldmib	r5, {r0, r1}
   130fc:	sub	r0, r0, #1
   13100:	udiv	r2, r0, r1
   13104:	str	r0, [r5, #4]
   13108:	mls	r0, r2, r1, r0
   1310c:	cmp	r0, #0
   13110:	bne	1317c <table_remove_column@@Base+0x17c>
   13114:	ldr	r2, [r5, #12]
   13118:	ldr	r0, [r5]
   1311c:	sub	r1, r2, r1
   13120:	str	r1, [r5, #12]
   13124:	add	r1, r1, r1, lsl #1
   13128:	lsl	r1, r1, #2
   1312c:	bl	11fec <realloc@plt>
   13130:	str	r0, [r5]
   13134:	mov	r0, r5
   13138:	bl	13b8c <table_get_row_length@@Base>
   1313c:	cmp	r0, #1
   13140:	blt	1317c <table_remove_column@@Base+0x17c>
   13144:	mov	r8, r0
   13148:	mov	r7, #0
   1314c:	mov	r0, r5
   13150:	mov	r1, r7
   13154:	bl	13b28 <table_get_row_ptr@@Base>
   13158:	ldr	r1, [r5, #12]
   1315c:	mov	r6, r0
   13160:	ldr	r0, [r0]
   13164:	lsl	r1, r1, #2
   13168:	bl	11fec <realloc@plt>
   1316c:	add	r7, r7, #1
   13170:	str	r0, [r6]
   13174:	cmp	r8, r7
   13178:	bne	1314c <table_remove_column@@Base+0x14c>
   1317c:	mov	r0, r5
   13180:	mvn	r1, #0
   13184:	mov	r2, r9
   13188:	mov	r3, #16
   1318c:	bl	12d40 <table_notify@@Base>
   13190:	mov	r0, #0
   13194:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013198 <table_get_column_compare_function@@Base>:
   13198:	ldr	r0, [r0]
   1319c:	add	r1, r1, r1, lsl #1
   131a0:	add	r0, r0, r1, lsl #2
   131a4:	ldr	r0, [r0, #8]
   131a8:	bx	lr

000131ac <table_set_column_compare_function@@Base>:
   131ac:	ldr	r0, [r0]
   131b0:	add	r1, r1, r1, lsl #1
   131b4:	add	r0, r0, r1, lsl #2
   131b8:	str	r2, [r0, #8]
   131bc:	bx	lr

000131c0 <table_compare_bool@@Base>:
   131c0:	cmp	r0, #0
   131c4:	beq	131f8 <table_compare_bool@@Base+0x38>
   131c8:	cmp	r1, #0
   131cc:	moveq	r1, #1
   131d0:	moveq	r0, r1
   131d4:	bxeq	lr
   131d8:	ldrb	r2, [r1]
   131dc:	ldrb	r0, [r0]
   131e0:	mov	r1, #0
   131e4:	cmp	r0, r2
   131e8:	mvncc	r1, #0
   131ec:	movwhi	r1, #1
   131f0:	mov	r0, r1
   131f4:	bx	lr
   131f8:	cmp	r1, #0
   131fc:	mvnne	r1, #0
   13200:	mov	r0, r1
   13204:	bx	lr

00013208 <table_compare_int@@Base>:
   13208:	cmp	r0, #0
   1320c:	beq	13240 <table_compare_int@@Base+0x38>
   13210:	cmp	r1, #0
   13214:	moveq	r1, #1
   13218:	moveq	r0, r1
   1321c:	bxeq	lr
   13220:	ldr	r2, [r1]
   13224:	ldr	r0, [r0]
   13228:	mov	r1, #0
   1322c:	cmp	r0, r2
   13230:	mvnlt	r1, #0
   13234:	movwgt	r1, #1
   13238:	mov	r0, r1
   1323c:	bx	lr
   13240:	cmp	r1, #0
   13244:	mvnne	r1, #0
   13248:	mov	r0, r1
   1324c:	bx	lr

00013250 <table_compare_uint@@Base>:
   13250:	cmp	r0, #0
   13254:	beq	13288 <table_compare_uint@@Base+0x38>
   13258:	cmp	r1, #0
   1325c:	moveq	r1, #1
   13260:	moveq	r0, r1
   13264:	bxeq	lr
   13268:	ldr	r2, [r1]
   1326c:	ldr	r0, [r0]
   13270:	mov	r1, #0
   13274:	cmp	r0, r2
   13278:	mvncc	r1, #0
   1327c:	movwhi	r1, #1
   13280:	mov	r0, r1
   13284:	bx	lr
   13288:	cmp	r1, #0
   1328c:	mvnne	r1, #0
   13290:	mov	r0, r1
   13294:	bx	lr

00013298 <table_compare_int8@@Base>:
   13298:	cmp	r0, #0
   1329c:	beq	132d0 <table_compare_int8@@Base+0x38>
   132a0:	cmp	r1, #0
   132a4:	moveq	r1, #1
   132a8:	moveq	r0, r1
   132ac:	bxeq	lr
   132b0:	ldrsb	r2, [r1]
   132b4:	ldrsb	r0, [r0]
   132b8:	mov	r1, #0
   132bc:	cmp	r0, r2
   132c0:	mvnlt	r1, #0
   132c4:	movwgt	r1, #1
   132c8:	mov	r0, r1
   132cc:	bx	lr
   132d0:	cmp	r1, #0
   132d4:	mvnne	r1, #0
   132d8:	mov	r0, r1
   132dc:	bx	lr

000132e0 <table_compare_uint8@@Base>:
   132e0:	cmp	r0, #0
   132e4:	beq	13318 <table_compare_uint8@@Base+0x38>
   132e8:	cmp	r1, #0
   132ec:	moveq	r1, #1
   132f0:	moveq	r0, r1
   132f4:	bxeq	lr
   132f8:	ldrb	r2, [r1]
   132fc:	ldrb	r0, [r0]
   13300:	mov	r1, #0
   13304:	cmp	r0, r2
   13308:	mvncc	r1, #0
   1330c:	movwhi	r1, #1
   13310:	mov	r0, r1
   13314:	bx	lr
   13318:	cmp	r1, #0
   1331c:	mvnne	r1, #0
   13320:	mov	r0, r1
   13324:	bx	lr

00013328 <table_compare_int16@@Base>:
   13328:	cmp	r0, #0
   1332c:	beq	13360 <table_compare_int16@@Base+0x38>
   13330:	cmp	r1, #0
   13334:	moveq	r1, #1
   13338:	moveq	r0, r1
   1333c:	bxeq	lr
   13340:	ldrsh	r2, [r1]
   13344:	ldrsh	r0, [r0]
   13348:	mov	r1, #0
   1334c:	cmp	r0, r2
   13350:	mvnlt	r1, #0
   13354:	movwgt	r1, #1
   13358:	mov	r0, r1
   1335c:	bx	lr
   13360:	cmp	r1, #0
   13364:	mvnne	r1, #0
   13368:	mov	r0, r1
   1336c:	bx	lr

00013370 <table_compare_uint16@@Base>:
   13370:	cmp	r0, #0
   13374:	beq	133a8 <table_compare_uint16@@Base+0x38>
   13378:	cmp	r1, #0
   1337c:	moveq	r1, #1
   13380:	moveq	r0, r1
   13384:	bxeq	lr
   13388:	ldrh	r2, [r1]
   1338c:	ldrh	r0, [r0]
   13390:	mov	r1, #0
   13394:	cmp	r0, r2
   13398:	mvncc	r1, #0
   1339c:	movwhi	r1, #1
   133a0:	mov	r0, r1
   133a4:	bx	lr
   133a8:	cmp	r1, #0
   133ac:	mvnne	r1, #0
   133b0:	mov	r0, r1
   133b4:	bx	lr

000133b8 <table_compare_int32@@Base>:
   133b8:	cmp	r0, #0
   133bc:	beq	133f0 <table_compare_int32@@Base+0x38>
   133c0:	cmp	r1, #0
   133c4:	moveq	r1, #1
   133c8:	moveq	r0, r1
   133cc:	bxeq	lr
   133d0:	ldr	r2, [r1]
   133d4:	ldr	r0, [r0]
   133d8:	mov	r1, #0
   133dc:	cmp	r0, r2
   133e0:	mvnlt	r1, #0
   133e4:	movwgt	r1, #1
   133e8:	mov	r0, r1
   133ec:	bx	lr
   133f0:	cmp	r1, #0
   133f4:	mvnne	r1, #0
   133f8:	mov	r0, r1
   133fc:	bx	lr

00013400 <table_compare_uint32@@Base>:
   13400:	cmp	r0, #0
   13404:	beq	13438 <table_compare_uint32@@Base+0x38>
   13408:	cmp	r1, #0
   1340c:	moveq	r1, #1
   13410:	moveq	r0, r1
   13414:	bxeq	lr
   13418:	ldr	r2, [r1]
   1341c:	ldr	r0, [r0]
   13420:	mov	r1, #0
   13424:	cmp	r0, r2
   13428:	mvncc	r1, #0
   1342c:	movwhi	r1, #1
   13430:	mov	r0, r1
   13434:	bx	lr
   13438:	cmp	r1, #0
   1343c:	mvnne	r1, #0
   13440:	mov	r0, r1
   13444:	bx	lr

00013448 <table_compare_int64@@Base>:
   13448:	cmp	r0, #0
   1344c:	beq	134a0 <table_compare_int64@@Base+0x58>
   13450:	cmp	r1, #0
   13454:	moveq	r1, #1
   13458:	moveq	r0, r1
   1345c:	bxeq	lr
   13460:	push	{r5, r7, fp, lr}
   13464:	add	fp, sp, #8
   13468:	ldm	r1, {r2, r7}
   1346c:	ldm	r0, {r0, r5}
   13470:	mov	r1, #0
   13474:	subs	r3, r0, r2
   13478:	sbcs	r3, r5, r7
   1347c:	movwlt	r1, #1
   13480:	cmp	r1, #0
   13484:	mvnne	r1, #0
   13488:	subs	r0, r2, r0
   1348c:	sbcs	r0, r7, r5
   13490:	movwlt	r1, #1
   13494:	pop	{r5, r7, fp, lr}
   13498:	mov	r0, r1
   1349c:	bx	lr
   134a0:	cmp	r1, #0
   134a4:	mvnne	r1, #0
   134a8:	mov	r0, r1
   134ac:	bx	lr

000134b0 <table_compare_uint64@@Base>:
   134b0:	cmp	r0, #0
   134b4:	beq	13508 <table_compare_uint64@@Base+0x58>
   134b8:	cmp	r1, #0
   134bc:	moveq	r1, #1
   134c0:	moveq	r0, r1
   134c4:	bxeq	lr
   134c8:	push	{r5, r7, fp, lr}
   134cc:	add	fp, sp, #8
   134d0:	ldm	r1, {r2, r7}
   134d4:	ldm	r0, {r0, r5}
   134d8:	mov	r1, #0
   134dc:	subs	r3, r0, r2
   134e0:	sbcs	r3, r5, r7
   134e4:	movwcc	r1, #1
   134e8:	cmp	r1, #0
   134ec:	mvnne	r1, #0
   134f0:	subs	r0, r2, r0
   134f4:	sbcs	r0, r7, r5
   134f8:	movwcc	r1, #1
   134fc:	pop	{r5, r7, fp, lr}
   13500:	mov	r0, r1
   13504:	bx	lr
   13508:	cmp	r1, #0
   1350c:	mvnne	r1, #0
   13510:	mov	r0, r1
   13514:	bx	lr

00013518 <table_compare_short@@Base>:
   13518:	cmp	r0, #0
   1351c:	beq	13550 <table_compare_short@@Base+0x38>
   13520:	cmp	r1, #0
   13524:	moveq	r1, #1
   13528:	moveq	r0, r1
   1352c:	bxeq	lr
   13530:	ldrsh	r2, [r1]
   13534:	ldrsh	r0, [r0]
   13538:	mov	r1, #0
   1353c:	cmp	r0, r2
   13540:	mvnlt	r1, #0
   13544:	movwgt	r1, #1
   13548:	mov	r0, r1
   1354c:	bx	lr
   13550:	cmp	r1, #0
   13554:	mvnne	r1, #0
   13558:	mov	r0, r1
   1355c:	bx	lr

00013560 <table_compare_ushort@@Base>:
   13560:	cmp	r0, #0
   13564:	beq	13598 <table_compare_ushort@@Base+0x38>
   13568:	cmp	r1, #0
   1356c:	moveq	r1, #1
   13570:	moveq	r0, r1
   13574:	bxeq	lr
   13578:	ldrh	r2, [r1]
   1357c:	ldrh	r0, [r0]
   13580:	mov	r1, #0
   13584:	cmp	r0, r2
   13588:	mvncc	r1, #0
   1358c:	movwhi	r1, #1
   13590:	mov	r0, r1
   13594:	bx	lr
   13598:	cmp	r1, #0
   1359c:	mvnne	r1, #0
   135a0:	mov	r0, r1
   135a4:	bx	lr

000135a8 <table_compare_long@@Base>:
   135a8:	cmp	r0, #0
   135ac:	beq	135e0 <table_compare_long@@Base+0x38>
   135b0:	cmp	r1, #0
   135b4:	moveq	r1, #1
   135b8:	moveq	r0, r1
   135bc:	bxeq	lr
   135c0:	ldr	r2, [r1]
   135c4:	ldr	r0, [r0]
   135c8:	mov	r1, #0
   135cc:	cmp	r0, r2
   135d0:	mvnlt	r1, #0
   135d4:	movwgt	r1, #1
   135d8:	mov	r0, r1
   135dc:	bx	lr
   135e0:	cmp	r1, #0
   135e4:	mvnne	r1, #0
   135e8:	mov	r0, r1
   135ec:	bx	lr

000135f0 <table_compare_ulong@@Base>:
   135f0:	cmp	r0, #0
   135f4:	beq	13628 <table_compare_ulong@@Base+0x38>
   135f8:	cmp	r1, #0
   135fc:	moveq	r1, #1
   13600:	moveq	r0, r1
   13604:	bxeq	lr
   13608:	ldr	r2, [r1]
   1360c:	ldr	r0, [r0]
   13610:	mov	r1, #0
   13614:	cmp	r0, r2
   13618:	mvncc	r1, #0
   1361c:	movwhi	r1, #1
   13620:	mov	r0, r1
   13624:	bx	lr
   13628:	cmp	r1, #0
   1362c:	mvnne	r1, #0
   13630:	mov	r0, r1
   13634:	bx	lr

00013638 <table_compare_llong@@Base>:
   13638:	cmp	r0, #0
   1363c:	beq	13690 <table_compare_llong@@Base+0x58>
   13640:	cmp	r1, #0
   13644:	moveq	r1, #1
   13648:	moveq	r0, r1
   1364c:	bxeq	lr
   13650:	push	{r5, r7, fp, lr}
   13654:	add	fp, sp, #8
   13658:	ldm	r1, {r2, r7}
   1365c:	ldm	r0, {r0, r5}
   13660:	mov	r1, #0
   13664:	subs	r3, r0, r2
   13668:	sbcs	r3, r5, r7
   1366c:	movwlt	r1, #1
   13670:	cmp	r1, #0
   13674:	mvnne	r1, #0
   13678:	subs	r0, r2, r0
   1367c:	sbcs	r0, r7, r5
   13680:	movwlt	r1, #1
   13684:	pop	{r5, r7, fp, lr}
   13688:	mov	r0, r1
   1368c:	bx	lr
   13690:	cmp	r1, #0
   13694:	mvnne	r1, #0
   13698:	mov	r0, r1
   1369c:	bx	lr

000136a0 <table_compare_ullong@@Base>:
   136a0:	cmp	r0, #0
   136a4:	beq	136d8 <table_compare_ullong@@Base+0x38>
   136a8:	cmp	r1, #0
   136ac:	moveq	r1, #1
   136b0:	moveq	r0, r1
   136b4:	bxeq	lr
   136b8:	ldr	r2, [r1]
   136bc:	ldr	r0, [r0]
   136c0:	mov	r1, #0
   136c4:	cmp	r0, r2
   136c8:	mvncc	r1, #0
   136cc:	movwhi	r1, #1
   136d0:	mov	r0, r1
   136d4:	bx	lr
   136d8:	cmp	r1, #0
   136dc:	mvnne	r1, #0
   136e0:	mov	r0, r1
   136e4:	bx	lr

000136e8 <table_compare_float@@Base>:
   136e8:	cmp	r0, #0
   136ec:	beq	13724 <table_compare_float@@Base+0x3c>
   136f0:	cmp	r1, #0
   136f4:	moveq	r1, #1
   136f8:	moveq	r0, r1
   136fc:	bxeq	lr
   13700:	vldr	s0, [r1]
   13704:	vldr	s2, [r0]
   13708:	mov	r1, #0
   1370c:	vcmpe.f32	s2, s0
   13710:	vmrs	APSR_nzcv, fpscr
   13714:	mvnmi	r1, #0
   13718:	movwgt	r1, #1
   1371c:	mov	r0, r1
   13720:	bx	lr
   13724:	cmp	r1, #0
   13728:	mvnne	r1, #0
   1372c:	mov	r0, r1
   13730:	bx	lr

00013734 <table_compare_double@@Base>:
   13734:	cmp	r0, #0
   13738:	beq	13770 <table_compare_double@@Base+0x3c>
   1373c:	cmp	r1, #0
   13740:	moveq	r1, #1
   13744:	moveq	r0, r1
   13748:	bxeq	lr
   1374c:	vldr	d16, [r1]
   13750:	vldr	d17, [r0]
   13754:	mov	r1, #0
   13758:	vcmpe.f64	d17, d16
   1375c:	vmrs	APSR_nzcv, fpscr
   13760:	mvnmi	r1, #0
   13764:	movwgt	r1, #1
   13768:	mov	r0, r1
   1376c:	bx	lr
   13770:	cmp	r1, #0
   13774:	mvnne	r1, #0
   13778:	mov	r0, r1
   1377c:	bx	lr

00013780 <table_compare_ldouble@@Base>:
   13780:	cmp	r0, #0
   13784:	beq	137bc <table_compare_ldouble@@Base+0x3c>
   13788:	cmp	r1, #0
   1378c:	moveq	r1, #1
   13790:	moveq	r0, r1
   13794:	bxeq	lr
   13798:	vldr	d16, [r1]
   1379c:	vldr	d17, [r0]
   137a0:	mov	r1, #0
   137a4:	vcmpe.f64	d17, d16
   137a8:	vmrs	APSR_nzcv, fpscr
   137ac:	mvnmi	r1, #0
   137b0:	movwgt	r1, #1
   137b4:	mov	r0, r1
   137b8:	bx	lr
   137bc:	cmp	r1, #0
   137c0:	mvnne	r1, #0
   137c4:	mov	r0, r1
   137c8:	bx	lr

000137cc <table_compare_char@@Base>:
   137cc:	cmp	r0, #0
   137d0:	beq	13804 <table_compare_char@@Base+0x38>
   137d4:	cmp	r1, #0
   137d8:	moveq	r1, #1
   137dc:	moveq	r0, r1
   137e0:	bxeq	lr
   137e4:	ldrb	r2, [r1]
   137e8:	ldrb	r0, [r0]
   137ec:	mov	r1, #0
   137f0:	cmp	r0, r2
   137f4:	mvncc	r1, #0
   137f8:	movwhi	r1, #1
   137fc:	mov	r0, r1
   13800:	bx	lr
   13804:	cmp	r1, #0
   13808:	mvnne	r1, #0
   1380c:	mov	r0, r1
   13810:	bx	lr

00013814 <table_compare_uchar@@Base>:
   13814:	cmp	r0, #0
   13818:	beq	1384c <table_compare_uchar@@Base+0x38>
   1381c:	cmp	r1, #0
   13820:	moveq	r1, #1
   13824:	moveq	r0, r1
   13828:	bxeq	lr
   1382c:	ldrb	r2, [r1]
   13830:	ldrb	r0, [r0]
   13834:	mov	r1, #0
   13838:	cmp	r0, r2
   1383c:	mvncc	r1, #0
   13840:	movwhi	r1, #1
   13844:	mov	r0, r1
   13848:	bx	lr
   1384c:	cmp	r1, #0
   13850:	mvnne	r1, #0
   13854:	mov	r0, r1
   13858:	bx	lr

0001385c <table_compare_string@@Base>:
   1385c:	cmp	r0, #0
   13860:	beq	13878 <table_compare_string@@Base+0x1c>
   13864:	cmp	r1, #0
   13868:	moveq	r1, #1
   1386c:	moveq	r0, r1
   13870:	bxeq	lr
   13874:	b	11fbc <strcmp@plt>
   13878:	cmp	r1, #0
   1387c:	mvnne	r1, #0
   13880:	mov	r0, r1
   13884:	bx	lr

00013888 <table_compare_ptr@@Base>:
   13888:	mov	r2, #0
   1388c:	cmp	r0, r1
   13890:	mvncc	r2, #0
   13894:	movwhi	r2, #1
   13898:	mov	r0, r2
   1389c:	bx	lr

000138a0 <table_get_default_compare_function_for_data_type@@Base>:
   138a0:	cmp	r0, #23
   138a4:	movwls	r1, #22768	; 0x58f0
   138a8:	movhi	r0, #0
   138ac:	movtls	r1, #1
   138b0:	ldrls	r0, [r1, r0, lsl #2]
   138b4:	bx	lr

000138b8 <table_get@@Base>:
   138b8:	push	{fp, lr}
   138bc:	mov	fp, sp
   138c0:	bl	14db0 <table_get_cell_ptr@@Base>
   138c4:	ldr	r0, [r0]
   138c8:	pop	{fp, pc}

000138cc <table_get_bool@@Base>:
   138cc:	push	{fp, lr}
   138d0:	mov	fp, sp
   138d4:	bl	14db0 <table_get_cell_ptr@@Base>
   138d8:	ldr	r0, [r0]
   138dc:	ldrb	r0, [r0]
   138e0:	pop	{fp, pc}

000138e4 <table_get_int@@Base>:
   138e4:	push	{fp, lr}
   138e8:	mov	fp, sp
   138ec:	bl	14db0 <table_get_cell_ptr@@Base>
   138f0:	ldr	r0, [r0]
   138f4:	ldr	r0, [r0]
   138f8:	pop	{fp, pc}

000138fc <table_get_uint@@Base>:
   138fc:	push	{fp, lr}
   13900:	mov	fp, sp
   13904:	bl	14db0 <table_get_cell_ptr@@Base>
   13908:	ldr	r0, [r0]
   1390c:	ldr	r0, [r0]
   13910:	pop	{fp, pc}

00013914 <table_get_int8@@Base>:
   13914:	push	{fp, lr}
   13918:	mov	fp, sp
   1391c:	bl	14db0 <table_get_cell_ptr@@Base>
   13920:	ldr	r0, [r0]
   13924:	ldrsb	r0, [r0]
   13928:	pop	{fp, pc}

0001392c <table_get_uint8@@Base>:
   1392c:	push	{fp, lr}
   13930:	mov	fp, sp
   13934:	bl	14db0 <table_get_cell_ptr@@Base>
   13938:	ldr	r0, [r0]
   1393c:	ldrb	r0, [r0]
   13940:	pop	{fp, pc}

00013944 <table_get_int16@@Base>:
   13944:	push	{fp, lr}
   13948:	mov	fp, sp
   1394c:	bl	14db0 <table_get_cell_ptr@@Base>
   13950:	ldr	r0, [r0]
   13954:	ldrsh	r0, [r0]
   13958:	pop	{fp, pc}

0001395c <table_get_uint16@@Base>:
   1395c:	push	{fp, lr}
   13960:	mov	fp, sp
   13964:	bl	14db0 <table_get_cell_ptr@@Base>
   13968:	ldr	r0, [r0]
   1396c:	ldrh	r0, [r0]
   13970:	pop	{fp, pc}

00013974 <table_get_int32@@Base>:
   13974:	push	{fp, lr}
   13978:	mov	fp, sp
   1397c:	bl	14db0 <table_get_cell_ptr@@Base>
   13980:	ldr	r0, [r0]
   13984:	ldr	r0, [r0]
   13988:	pop	{fp, pc}

0001398c <table_get_uint32@@Base>:
   1398c:	push	{fp, lr}
   13990:	mov	fp, sp
   13994:	bl	14db0 <table_get_cell_ptr@@Base>
   13998:	ldr	r0, [r0]
   1399c:	ldr	r0, [r0]
   139a0:	pop	{fp, pc}

000139a4 <table_get_int64@@Base>:
   139a4:	push	{fp, lr}
   139a8:	mov	fp, sp
   139ac:	bl	14db0 <table_get_cell_ptr@@Base>
   139b0:	ldr	r0, [r0]
   139b4:	ldrd	r0, [r0]
   139b8:	pop	{fp, pc}

000139bc <table_get_uint64@@Base>:
   139bc:	push	{fp, lr}
   139c0:	mov	fp, sp
   139c4:	bl	14db0 <table_get_cell_ptr@@Base>
   139c8:	ldr	r0, [r0]
   139cc:	ldrd	r0, [r0]
   139d0:	pop	{fp, pc}

000139d4 <table_get_short@@Base>:
   139d4:	push	{fp, lr}
   139d8:	mov	fp, sp
   139dc:	bl	14db0 <table_get_cell_ptr@@Base>
   139e0:	ldr	r0, [r0]
   139e4:	ldrsh	r0, [r0]
   139e8:	pop	{fp, pc}

000139ec <table_get_ushort@@Base>:
   139ec:	push	{fp, lr}
   139f0:	mov	fp, sp
   139f4:	bl	14db0 <table_get_cell_ptr@@Base>
   139f8:	ldr	r0, [r0]
   139fc:	ldrh	r0, [r0]
   13a00:	pop	{fp, pc}

00013a04 <table_get_long@@Base>:
   13a04:	push	{fp, lr}
   13a08:	mov	fp, sp
   13a0c:	bl	14db0 <table_get_cell_ptr@@Base>
   13a10:	ldr	r0, [r0]
   13a14:	ldr	r0, [r0]
   13a18:	pop	{fp, pc}

00013a1c <table_get_ulong@@Base>:
   13a1c:	push	{fp, lr}
   13a20:	mov	fp, sp
   13a24:	bl	14db0 <table_get_cell_ptr@@Base>
   13a28:	ldr	r0, [r0]
   13a2c:	ldr	r0, [r0]
   13a30:	pop	{fp, pc}

00013a34 <table_get_llong@@Base>:
   13a34:	push	{fp, lr}
   13a38:	mov	fp, sp
   13a3c:	bl	14db0 <table_get_cell_ptr@@Base>
   13a40:	ldr	r0, [r0]
   13a44:	ldrd	r0, [r0]
   13a48:	pop	{fp, pc}

00013a4c <table_get_ullong@@Base>:
   13a4c:	push	{fp, lr}
   13a50:	mov	fp, sp
   13a54:	bl	14db0 <table_get_cell_ptr@@Base>
   13a58:	ldr	r0, [r0]
   13a5c:	ldrd	r0, [r0]
   13a60:	pop	{fp, pc}

00013a64 <table_get_float@@Base>:
   13a64:	push	{fp, lr}
   13a68:	mov	fp, sp
   13a6c:	bl	14db0 <table_get_cell_ptr@@Base>
   13a70:	ldr	r0, [r0]
   13a74:	vldr	s0, [r0]
   13a78:	pop	{fp, pc}

00013a7c <table_get_double@@Base>:
   13a7c:	push	{fp, lr}
   13a80:	mov	fp, sp
   13a84:	bl	14db0 <table_get_cell_ptr@@Base>
   13a88:	ldr	r0, [r0]
   13a8c:	vldr	d0, [r0]
   13a90:	pop	{fp, pc}

00013a94 <table_get_ldouble@@Base>:
   13a94:	push	{fp, lr}
   13a98:	mov	fp, sp
   13a9c:	bl	14db0 <table_get_cell_ptr@@Base>
   13aa0:	ldr	r0, [r0]
   13aa4:	vldr	d0, [r0]
   13aa8:	pop	{fp, pc}

00013aac <table_get_char@@Base>:
   13aac:	push	{fp, lr}
   13ab0:	mov	fp, sp
   13ab4:	bl	14db0 <table_get_cell_ptr@@Base>
   13ab8:	ldr	r0, [r0]
   13abc:	ldrb	r0, [r0]
   13ac0:	pop	{fp, pc}

00013ac4 <table_get_uchar@@Base>:
   13ac4:	push	{fp, lr}
   13ac8:	mov	fp, sp
   13acc:	bl	14db0 <table_get_cell_ptr@@Base>
   13ad0:	ldr	r0, [r0]
   13ad4:	ldrb	r0, [r0]
   13ad8:	pop	{fp, pc}

00013adc <table_get_string@@Base>:
   13adc:	push	{fp, lr}
   13ae0:	mov	fp, sp
   13ae4:	bl	14db0 <table_get_cell_ptr@@Base>
   13ae8:	ldr	r0, [r0]
   13aec:	pop	{fp, pc}

00013af0 <table_get_ptr@@Base>:
   13af0:	push	{fp, lr}
   13af4:	mov	fp, sp
   13af8:	bl	14db0 <table_get_cell_ptr@@Base>
   13afc:	ldr	r0, [r0]
   13b00:	pop	{fp, pc}

00013b04 <table_row_init@@Base>:
   13b04:	push	{r4, r5, fp, lr}
   13b08:	add	fp, sp, #8
   13b0c:	mov	r4, r1
   13b10:	ldr	r1, [r0, #12]
   13b14:	ldr	r5, [r0, #16]
   13b18:	lsl	r0, r1, #2
   13b1c:	bl	12004 <malloc@plt>
   13b20:	str	r0, [r5, r4, lsl #2]
   13b24:	pop	{r4, r5, fp, pc}

00013b28 <table_get_row_ptr@@Base>:
   13b28:	ldr	r0, [r0, #16]
   13b2c:	add	r0, r0, r1, lsl #2
   13b30:	bx	lr

00013b34 <table_row_destroy@@Base>:
   13b34:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b38:	add	fp, sp, #24
   13b3c:	mov	r4, r1
   13b40:	mov	r5, r0
   13b44:	bl	12e34 <table_get_column_length@@Base>
   13b48:	ldr	r8, [r5, #16]
   13b4c:	cmp	r0, #1
   13b50:	blt	13b78 <table_row_destroy@@Base+0x44>
   13b54:	mov	r6, r0
   13b58:	mov	r7, #0
   13b5c:	mov	r0, r5
   13b60:	mov	r1, r4
   13b64:	mov	r2, r7
   13b68:	bl	14dcc <table_cell_destroy@@Base>
   13b6c:	add	r7, r7, #1
   13b70:	cmp	r6, r7
   13b74:	bne	13b5c <table_row_destroy@@Base+0x28>
   13b78:	ldr	r0, [r8, r4, lsl #2]
   13b7c:	cmp	r0, #0
   13b80:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13b84:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13b88:	b	11fd4 <free@plt>

00013b8c <table_get_row_length@@Base>:
   13b8c:	ldr	r0, [r0, #20]
   13b90:	bx	lr

00013b94 <table_add_row@@Base>:
   13b94:	push	{r4, r5, r6, r7, fp, lr}
   13b98:	add	fp, sp, #16
   13b9c:	ldr	r5, [r0, #20]
   13ba0:	ldr	r1, [r0, #24]
   13ba4:	mov	r4, r0
   13ba8:	udiv	r0, r5, r1
   13bac:	mls	r0, r0, r1, r5
   13bb0:	cmp	r0, #0
   13bb4:	bne	13bd8 <table_add_row@@Base+0x44>
   13bb8:	ldr	r2, [r4, #28]
   13bbc:	ldr	r0, [r4, #16]
   13bc0:	add	r1, r2, r1
   13bc4:	str	r1, [r4, #28]
   13bc8:	lsl	r1, r1, #2
   13bcc:	bl	11fec <realloc@plt>
   13bd0:	str	r0, [r4, #16]
   13bd4:	ldr	r5, [r4, #20]
   13bd8:	mov	r0, r4
   13bdc:	bl	12e34 <table_get_column_length@@Base>
   13be0:	mov	r6, r0
   13be4:	ldr	r0, [r4, #12]
   13be8:	ldr	r7, [r4, #16]
   13bec:	lsl	r0, r0, #2
   13bf0:	bl	12004 <malloc@plt>
   13bf4:	cmp	r6, #1
   13bf8:	str	r0, [r7, r5, lsl #2]
   13bfc:	blt	13c20 <table_add_row@@Base+0x8c>
   13c00:	mov	r7, #0
   13c04:	mov	r0, r4
   13c08:	mov	r1, r5
   13c0c:	mov	r2, r7
   13c10:	bl	14d90 <table_cell_init@@Base>
   13c14:	add	r7, r7, #1
   13c18:	cmp	r6, r7
   13c1c:	bne	13c04 <table_add_row@@Base+0x70>
   13c20:	ldr	r1, [r4, #20]
   13c24:	mov	r0, r4
   13c28:	mvn	r2, #0
   13c2c:	mov	r3, #2
   13c30:	bl	12d40 <table_notify@@Base>
   13c34:	ldr	r0, [r4, #20]
   13c38:	add	r1, r0, #1
   13c3c:	str	r1, [r4, #20]
   13c40:	pop	{r4, r5, r6, r7, fp, pc}

00013c44 <table_remove_row@@Base>:
   13c44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13c48:	add	fp, sp, #24
   13c4c:	ldr	r8, [r0, #20]
   13c50:	mov	r4, r1
   13c54:	mov	r5, r0
   13c58:	bl	12e34 <table_get_column_length@@Base>
   13c5c:	cmp	r0, #1
   13c60:	blt	13cac <table_remove_row@@Base+0x68>
   13c64:	mov	r6, r0
   13c68:	mov	r7, #0
   13c6c:	mov	r0, r5
   13c70:	mov	r1, r7
   13c74:	bl	12eb4 <table_get_column_data_type@@Base>
   13c78:	cmp	r0, #23
   13c7c:	beq	13ca0 <table_remove_row@@Base+0x5c>
   13c80:	mov	r0, r5
   13c84:	mov	r1, r4
   13c88:	mov	r2, r7
   13c8c:	bl	14db0 <table_get_cell_ptr@@Base>
   13c90:	ldr	r0, [r0]
   13c94:	cmp	r0, #0
   13c98:	beq	13ca0 <table_remove_row@@Base+0x5c>
   13c9c:	bl	11fd4 <free@plt>
   13ca0:	add	r7, r7, #1
   13ca4:	cmp	r6, r7
   13ca8:	bne	13c6c <table_remove_row@@Base+0x28>
   13cac:	ldr	r0, [r5, #16]
   13cb0:	ldr	r0, [r0, r4, lsl #2]
   13cb4:	cmp	r0, #0
   13cb8:	beq	13cc0 <table_remove_row@@Base+0x7c>
   13cbc:	bl	11fd4 <free@plt>
   13cc0:	sub	r0, r8, #1
   13cc4:	cmp	r0, r4
   13cc8:	ble	13cec <table_remove_row@@Base+0xa8>
   13ccc:	mov	r1, r4
   13cd0:	ldr	r2, [r5, #16]
   13cd4:	add	r3, r2, r1, lsl #2
   13cd8:	ldr	r3, [r3, #4]
   13cdc:	str	r3, [r2, r1, lsl #2]
   13ce0:	add	r1, r1, #1
   13ce4:	cmp	r0, r1
   13ce8:	bne	13cd0 <table_remove_row@@Base+0x8c>
   13cec:	ldr	r0, [r5, #20]
   13cf0:	ldr	r1, [r5, #24]
   13cf4:	sub	r0, r0, #1
   13cf8:	udiv	r2, r0, r1
   13cfc:	str	r0, [r5, #20]
   13d00:	mls	r0, r2, r1, r0
   13d04:	cmp	r0, #0
   13d08:	bne	13d28 <table_remove_row@@Base+0xe4>
   13d0c:	ldr	r2, [r5, #28]
   13d10:	ldr	r0, [r5, #16]
   13d14:	sub	r1, r2, r1
   13d18:	str	r1, [r5, #28]
   13d1c:	lsl	r1, r1, #2
   13d20:	bl	11fec <realloc@plt>
   13d24:	str	r0, [r5, #16]
   13d28:	mov	r0, r5
   13d2c:	mov	r1, r4
   13d30:	mvn	r2, #0
   13d34:	mov	r3, #4
   13d38:	bl	12d40 <table_notify@@Base>
   13d3c:	mov	r0, #0
   13d40:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013d44 <table_set_row_ptr@@Base>:
   13d44:	ldr	r2, [r2]
   13d48:	ldr	r0, [r0, #16]
   13d4c:	str	r2, [r0, r1, lsl #2]
   13d50:	bx	lr

00013d54 <table_set@@Base>:
   13d54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d58:	add	fp, sp, #24
   13d5c:	mov	r8, r3
   13d60:	mov	r4, r2
   13d64:	mov	r9, r1
   13d68:	mov	r6, r0
   13d6c:	bl	14db0 <table_get_cell_ptr@@Base>
   13d70:	mov	r5, r0
   13d74:	mov	r0, r6
   13d78:	mov	r1, r4
   13d7c:	bl	12e0c <table_get_col_ptr@@Base>
   13d80:	ldr	r1, [fp, #8]
   13d84:	mvn	r7, #0
   13d88:	cmp	r1, #23
   13d8c:	bhi	14050 <table_set@@Base+0x2fc>
   13d90:	add	r2, pc, #0
   13d94:	ldr	pc, [r2, r1, lsl #2]
   13d98:	strdeq	r3, [r1], -r8
   13d9c:	andeq	r3, r1, r8, lsl #28
   13da0:	andeq	r3, r1, r8, lsl lr
   13da4:	andeq	r3, r1, r8, lsr #28
   13da8:	andeq	r3, r1, r8, lsr lr
   13dac:	andeq	r3, r1, r8, asr #28
   13db0:	andeq	r3, r1, r8, asr lr
   13db4:	andeq	r3, r1, r8, ror #28
   13db8:	andeq	r3, r1, r8, ror lr
   13dbc:	andeq	r3, r1, r8, lsl #29
   13dc0:	muleq	r1, r8, lr
   13dc4:	andeq	r3, r1, r8, lsr #29
   13dc8:	andeq	r3, r1, r0, ror #29
   13dcc:	strdeq	r3, [r1], -r0
   13dd0:	andeq	r3, r1, r0, lsl #30
   13dd4:	andeq	r3, r1, r0, lsl pc
   13dd8:	andeq	r3, r1, r0, lsr #30
   13ddc:	andeq	r3, r1, r8, asr pc
   13de0:	andeq	r3, r1, r8, ror #30
   13de4:	andeq	r3, r1, r8, lsr #31
   13de8:			; <UNDEFINED> instruction: 0x00013fb8
   13dec:	andeq	r3, r1, r8, asr #31
   13df0:	andeq	r4, r1, r4
   13df4:	andeq	r4, r1, r8, asr r0
   13df8:	ldr	r0, [r0, #4]
   13dfc:	cmp	r0, #0
   13e00:	bne	14050 <table_set@@Base+0x2fc>
   13e04:	b	13f2c <table_set@@Base+0x1d8>
   13e08:	ldr	r0, [r0, #4]
   13e0c:	cmp	r0, #1
   13e10:	beq	13f2c <table_set@@Base+0x1d8>
   13e14:	b	14050 <table_set@@Base+0x2fc>
   13e18:	ldr	r0, [r0, #4]
   13e1c:	cmp	r0, #2
   13e20:	beq	14010 <table_set@@Base+0x2bc>
   13e24:	b	14050 <table_set@@Base+0x2fc>
   13e28:	ldr	r0, [r0, #4]
   13e2c:	cmp	r0, #3
   13e30:	beq	14010 <table_set@@Base+0x2bc>
   13e34:	b	14050 <table_set@@Base+0x2fc>
   13e38:	ldr	r0, [r0, #4]
   13e3c:	cmp	r0, #4
   13e40:	beq	13eb4 <table_set@@Base+0x160>
   13e44:	b	14050 <table_set@@Base+0x2fc>
   13e48:	ldr	r0, [r0, #4]
   13e4c:	cmp	r0, #5
   13e50:	beq	13eb4 <table_set@@Base+0x160>
   13e54:	b	14050 <table_set@@Base+0x2fc>
   13e58:	ldr	r0, [r0, #4]
   13e5c:	cmp	r0, #6
   13e60:	beq	13f2c <table_set@@Base+0x1d8>
   13e64:	b	14050 <table_set@@Base+0x2fc>
   13e68:	ldr	r0, [r0, #4]
   13e6c:	cmp	r0, #7
   13e70:	beq	13f2c <table_set@@Base+0x1d8>
   13e74:	b	14050 <table_set@@Base+0x2fc>
   13e78:	ldr	r0, [r0, #4]
   13e7c:	cmp	r0, #8
   13e80:	beq	13f74 <table_set@@Base+0x220>
   13e84:	b	14050 <table_set@@Base+0x2fc>
   13e88:	ldr	r0, [r0, #4]
   13e8c:	cmp	r0, #9
   13e90:	beq	13f74 <table_set@@Base+0x220>
   13e94:	b	14050 <table_set@@Base+0x2fc>
   13e98:	ldr	r0, [r0, #4]
   13e9c:	cmp	r0, #10
   13ea0:	beq	13eb4 <table_set@@Base+0x160>
   13ea4:	b	14050 <table_set@@Base+0x2fc>
   13ea8:	ldr	r0, [r0, #4]
   13eac:	cmp	r0, #11
   13eb0:	bne	14050 <table_set@@Base+0x2fc>
   13eb4:	ldr	r0, [r5]
   13eb8:	cmp	r0, #0
   13ebc:	bne	13ed4 <table_set@@Base+0x180>
   13ec0:	mov	r0, #2
   13ec4:	bl	12004 <malloc@plt>
   13ec8:	cmp	r0, #0
   13ecc:	str	r0, [r5]
   13ed0:	beq	14050 <table_set@@Base+0x2fc>
   13ed4:	ldrh	r1, [r8]
   13ed8:	strh	r1, [r0]
   13edc:	b	14038 <table_set@@Base+0x2e4>
   13ee0:	ldr	r0, [r0, #4]
   13ee4:	cmp	r0, #12
   13ee8:	beq	13f2c <table_set@@Base+0x1d8>
   13eec:	b	14050 <table_set@@Base+0x2fc>
   13ef0:	ldr	r0, [r0, #4]
   13ef4:	cmp	r0, #13
   13ef8:	beq	13f2c <table_set@@Base+0x1d8>
   13efc:	b	14050 <table_set@@Base+0x2fc>
   13f00:	ldr	r0, [r0, #4]
   13f04:	cmp	r0, #14
   13f08:	beq	13f74 <table_set@@Base+0x220>
   13f0c:	b	14050 <table_set@@Base+0x2fc>
   13f10:	ldr	r0, [r0, #4]
   13f14:	cmp	r0, #15
   13f18:	beq	13f74 <table_set@@Base+0x220>
   13f1c:	b	14050 <table_set@@Base+0x2fc>
   13f20:	ldr	r0, [r0, #4]
   13f24:	cmp	r0, #16
   13f28:	bne	14050 <table_set@@Base+0x2fc>
   13f2c:	ldr	r0, [r5]
   13f30:	cmp	r0, #0
   13f34:	bne	13f4c <table_set@@Base+0x1f8>
   13f38:	mov	r0, #4
   13f3c:	bl	12004 <malloc@plt>
   13f40:	cmp	r0, #0
   13f44:	str	r0, [r5]
   13f48:	beq	14050 <table_set@@Base+0x2fc>
   13f4c:	ldr	r1, [r8]
   13f50:	str	r1, [r0]
   13f54:	b	14038 <table_set@@Base+0x2e4>
   13f58:	ldr	r0, [r0, #4]
   13f5c:	cmp	r0, #17
   13f60:	beq	13f74 <table_set@@Base+0x220>
   13f64:	b	14050 <table_set@@Base+0x2fc>
   13f68:	ldr	r0, [r0, #4]
   13f6c:	cmp	r0, #18
   13f70:	bne	14050 <table_set@@Base+0x2fc>
   13f74:	ldr	r0, [r5]
   13f78:	cmp	r0, #0
   13f7c:	bne	13f94 <table_set@@Base+0x240>
   13f80:	mov	r0, #8
   13f84:	bl	12004 <malloc@plt>
   13f88:	cmp	r0, #0
   13f8c:	str	r0, [r5]
   13f90:	beq	14050 <table_set@@Base+0x2fc>
   13f94:	ldr	r1, [r8]
   13f98:	ldr	r2, [r8, #4]
   13f9c:	str	r2, [r0, #4]
   13fa0:	str	r1, [r0]
   13fa4:	b	14038 <table_set@@Base+0x2e4>
   13fa8:	ldr	r0, [r0, #4]
   13fac:	cmp	r0, #19
   13fb0:	beq	14010 <table_set@@Base+0x2bc>
   13fb4:	b	14050 <table_set@@Base+0x2fc>
   13fb8:	ldr	r0, [r0, #4]
   13fbc:	cmp	r0, #20
   13fc0:	beq	14010 <table_set@@Base+0x2bc>
   13fc4:	b	14050 <table_set@@Base+0x2fc>
   13fc8:	ldr	r0, [r0, #4]
   13fcc:	cmp	r0, #21
   13fd0:	bne	14050 <table_set@@Base+0x2fc>
   13fd4:	mov	r0, r8
   13fd8:	bl	12028 <strlen@plt>
   13fdc:	ldr	r2, [r5]
   13fe0:	add	r1, r0, #1
   13fe4:	mov	r0, r2
   13fe8:	bl	11fec <realloc@plt>
   13fec:	cmp	r0, #0
   13ff0:	str	r0, [r5]
   13ff4:	beq	14050 <table_set@@Base+0x2fc>
   13ff8:	mov	r1, r8
   13ffc:	bl	11ff8 <strcpy@plt>
   14000:	b	14038 <table_set@@Base+0x2e4>
   14004:	ldr	r0, [r0, #4]
   14008:	cmp	r0, #22
   1400c:	bne	14050 <table_set@@Base+0x2fc>
   14010:	ldr	r0, [r5]
   14014:	cmp	r0, #0
   14018:	bne	14030 <table_set@@Base+0x2dc>
   1401c:	mov	r0, #1
   14020:	bl	12004 <malloc@plt>
   14024:	cmp	r0, #0
   14028:	str	r0, [r5]
   1402c:	beq	14050 <table_set@@Base+0x2fc>
   14030:	ldrb	r1, [r8]
   14034:	strb	r1, [r0]
   14038:	mov	r0, r6
   1403c:	mov	r1, r9
   14040:	mov	r2, r4
   14044:	mov	r3, #1
   14048:	bl	12d40 <table_notify@@Base>
   1404c:	mov	r7, #0
   14050:	mov	r0, r7
   14054:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14058:	ldr	r0, [r0, #4]
   1405c:	cmp	r0, #23
   14060:	bne	14050 <table_set@@Base+0x2fc>
   14064:	str	r8, [r5]
   14068:	b	14038 <table_set@@Base+0x2e4>

0001406c <table_set_bool@@Base>:
   1406c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14070:	add	fp, sp, #24
   14074:	mov	r8, r3
   14078:	mov	r4, r2
   1407c:	mov	r9, r1
   14080:	mov	r6, r0
   14084:	bl	14db0 <table_get_cell_ptr@@Base>
   14088:	mov	r5, r0
   1408c:	mov	r0, r6
   14090:	mov	r1, r4
   14094:	bl	12e0c <table_get_col_ptr@@Base>
   14098:	ldr	r0, [r0, #4]
   1409c:	mvn	r7, #0
   140a0:	cmp	r0, #22
   140a4:	bne	140e4 <table_set_bool@@Base+0x78>
   140a8:	ldr	r0, [r5]
   140ac:	cmp	r0, #0
   140b0:	bne	140c8 <table_set_bool@@Base+0x5c>
   140b4:	mov	r0, #1
   140b8:	bl	12004 <malloc@plt>
   140bc:	cmp	r0, #0
   140c0:	str	r0, [r5]
   140c4:	beq	140e4 <table_set_bool@@Base+0x78>
   140c8:	strb	r8, [r0]
   140cc:	mov	r0, r6
   140d0:	mov	r1, r9
   140d4:	mov	r2, r4
   140d8:	mov	r3, #1
   140dc:	bl	12d40 <table_notify@@Base>
   140e0:	mov	r7, #0
   140e4:	mov	r0, r7
   140e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140ec <table_set_int@@Base>:
   140ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140f0:	add	fp, sp, #24
   140f4:	mov	r8, r3
   140f8:	mov	r4, r2
   140fc:	mov	r5, r1
   14100:	mov	r6, r0
   14104:	bl	14db0 <table_get_cell_ptr@@Base>
   14108:	mov	r9, r0
   1410c:	mov	r0, r6
   14110:	mov	r1, r4
   14114:	bl	12e0c <table_get_col_ptr@@Base>
   14118:	ldr	r0, [r0, #4]
   1411c:	mvn	r7, #0
   14120:	cmp	r0, #0
   14124:	bne	14164 <table_set_int@@Base+0x78>
   14128:	ldr	r0, [r9]
   1412c:	cmp	r0, #0
   14130:	bne	14148 <table_set_int@@Base+0x5c>
   14134:	mov	r0, #4
   14138:	bl	12004 <malloc@plt>
   1413c:	cmp	r0, #0
   14140:	str	r0, [r9]
   14144:	beq	14164 <table_set_int@@Base+0x78>
   14148:	str	r8, [r0]
   1414c:	mov	r0, r6
   14150:	mov	r1, r5
   14154:	mov	r2, r4
   14158:	mov	r3, #1
   1415c:	bl	12d40 <table_notify@@Base>
   14160:	mov	r7, #0
   14164:	mov	r0, r7
   14168:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001416c <table_set_uint@@Base>:
   1416c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14170:	add	fp, sp, #24
   14174:	mov	r8, r3
   14178:	mov	r4, r2
   1417c:	mov	r5, r1
   14180:	mov	r6, r0
   14184:	bl	14db0 <table_get_cell_ptr@@Base>
   14188:	mov	r9, r0
   1418c:	mov	r0, r6
   14190:	mov	r1, r4
   14194:	bl	12e0c <table_get_col_ptr@@Base>
   14198:	ldr	r0, [r0, #4]
   1419c:	mvn	r7, #0
   141a0:	cmp	r0, #1
   141a4:	bne	141e4 <table_set_uint@@Base+0x78>
   141a8:	ldr	r0, [r9]
   141ac:	cmp	r0, #0
   141b0:	bne	141c8 <table_set_uint@@Base+0x5c>
   141b4:	mov	r0, #4
   141b8:	bl	12004 <malloc@plt>
   141bc:	cmp	r0, #0
   141c0:	str	r0, [r9]
   141c4:	beq	141e4 <table_set_uint@@Base+0x78>
   141c8:	str	r8, [r0]
   141cc:	mov	r0, r6
   141d0:	mov	r1, r5
   141d4:	mov	r2, r4
   141d8:	mov	r3, #1
   141dc:	bl	12d40 <table_notify@@Base>
   141e0:	mov	r7, #0
   141e4:	mov	r0, r7
   141e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141ec <table_set_int8@@Base>:
   141ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141f0:	add	fp, sp, #24
   141f4:	mov	r8, r3
   141f8:	mov	r4, r2
   141fc:	mov	r9, r1
   14200:	mov	r6, r0
   14204:	bl	14db0 <table_get_cell_ptr@@Base>
   14208:	mov	r5, r0
   1420c:	mov	r0, r6
   14210:	mov	r1, r4
   14214:	bl	12e0c <table_get_col_ptr@@Base>
   14218:	ldr	r0, [r0, #4]
   1421c:	mvn	r7, #0
   14220:	cmp	r0, #2
   14224:	bne	14264 <table_set_int8@@Base+0x78>
   14228:	ldr	r0, [r5]
   1422c:	cmp	r0, #0
   14230:	bne	14248 <table_set_int8@@Base+0x5c>
   14234:	mov	r0, #1
   14238:	bl	12004 <malloc@plt>
   1423c:	cmp	r0, #0
   14240:	str	r0, [r5]
   14244:	beq	14264 <table_set_int8@@Base+0x78>
   14248:	strb	r8, [r0]
   1424c:	mov	r0, r6
   14250:	mov	r1, r9
   14254:	mov	r2, r4
   14258:	mov	r3, #1
   1425c:	bl	12d40 <table_notify@@Base>
   14260:	mov	r7, #0
   14264:	mov	r0, r7
   14268:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001426c <table_set_uint8@@Base>:
   1426c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14270:	add	fp, sp, #24
   14274:	mov	r8, r3
   14278:	mov	r4, r2
   1427c:	mov	r9, r1
   14280:	mov	r6, r0
   14284:	bl	14db0 <table_get_cell_ptr@@Base>
   14288:	mov	r5, r0
   1428c:	mov	r0, r6
   14290:	mov	r1, r4
   14294:	bl	12e0c <table_get_col_ptr@@Base>
   14298:	ldr	r0, [r0, #4]
   1429c:	mvn	r7, #0
   142a0:	cmp	r0, #3
   142a4:	bne	142e4 <table_set_uint8@@Base+0x78>
   142a8:	ldr	r0, [r5]
   142ac:	cmp	r0, #0
   142b0:	bne	142c8 <table_set_uint8@@Base+0x5c>
   142b4:	mov	r0, #1
   142b8:	bl	12004 <malloc@plt>
   142bc:	cmp	r0, #0
   142c0:	str	r0, [r5]
   142c4:	beq	142e4 <table_set_uint8@@Base+0x78>
   142c8:	strb	r8, [r0]
   142cc:	mov	r0, r6
   142d0:	mov	r1, r9
   142d4:	mov	r2, r4
   142d8:	mov	r3, #1
   142dc:	bl	12d40 <table_notify@@Base>
   142e0:	mov	r7, #0
   142e4:	mov	r0, r7
   142e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142ec <table_set_int16@@Base>:
   142ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142f0:	add	fp, sp, #24
   142f4:	mov	r8, r3
   142f8:	mov	r4, r2
   142fc:	mov	r9, r1
   14300:	mov	r6, r0
   14304:	bl	14db0 <table_get_cell_ptr@@Base>
   14308:	mov	r5, r0
   1430c:	mov	r0, r6
   14310:	mov	r1, r4
   14314:	bl	12e0c <table_get_col_ptr@@Base>
   14318:	ldr	r0, [r0, #4]
   1431c:	mvn	r7, #0
   14320:	cmp	r0, #4
   14324:	bne	14364 <table_set_int16@@Base+0x78>
   14328:	ldr	r0, [r5]
   1432c:	cmp	r0, #0
   14330:	bne	14348 <table_set_int16@@Base+0x5c>
   14334:	mov	r0, #2
   14338:	bl	12004 <malloc@plt>
   1433c:	cmp	r0, #0
   14340:	str	r0, [r5]
   14344:	beq	14364 <table_set_int16@@Base+0x78>
   14348:	strh	r8, [r0]
   1434c:	mov	r0, r6
   14350:	mov	r1, r9
   14354:	mov	r2, r4
   14358:	mov	r3, #1
   1435c:	bl	12d40 <table_notify@@Base>
   14360:	mov	r7, #0
   14364:	mov	r0, r7
   14368:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001436c <table_set_uint16@@Base>:
   1436c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14370:	add	fp, sp, #24
   14374:	mov	r8, r3
   14378:	mov	r4, r2
   1437c:	mov	r9, r1
   14380:	mov	r6, r0
   14384:	bl	14db0 <table_get_cell_ptr@@Base>
   14388:	mov	r5, r0
   1438c:	mov	r0, r6
   14390:	mov	r1, r4
   14394:	bl	12e0c <table_get_col_ptr@@Base>
   14398:	ldr	r0, [r0, #4]
   1439c:	mvn	r7, #0
   143a0:	cmp	r0, #5
   143a4:	bne	143e4 <table_set_uint16@@Base+0x78>
   143a8:	ldr	r0, [r5]
   143ac:	cmp	r0, #0
   143b0:	bne	143c8 <table_set_uint16@@Base+0x5c>
   143b4:	mov	r0, #2
   143b8:	bl	12004 <malloc@plt>
   143bc:	cmp	r0, #0
   143c0:	str	r0, [r5]
   143c4:	beq	143e4 <table_set_uint16@@Base+0x78>
   143c8:	strh	r8, [r0]
   143cc:	mov	r0, r6
   143d0:	mov	r1, r9
   143d4:	mov	r2, r4
   143d8:	mov	r3, #1
   143dc:	bl	12d40 <table_notify@@Base>
   143e0:	mov	r7, #0
   143e4:	mov	r0, r7
   143e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143ec <table_set_int32@@Base>:
   143ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143f0:	add	fp, sp, #24
   143f4:	mov	r8, r3
   143f8:	mov	r4, r2
   143fc:	mov	r5, r1
   14400:	mov	r6, r0
   14404:	bl	14db0 <table_get_cell_ptr@@Base>
   14408:	mov	r9, r0
   1440c:	mov	r0, r6
   14410:	mov	r1, r4
   14414:	bl	12e0c <table_get_col_ptr@@Base>
   14418:	ldr	r0, [r0, #4]
   1441c:	mvn	r7, #0
   14420:	cmp	r0, #6
   14424:	bne	14464 <table_set_int32@@Base+0x78>
   14428:	ldr	r0, [r9]
   1442c:	cmp	r0, #0
   14430:	bne	14448 <table_set_int32@@Base+0x5c>
   14434:	mov	r0, #4
   14438:	bl	12004 <malloc@plt>
   1443c:	cmp	r0, #0
   14440:	str	r0, [r9]
   14444:	beq	14464 <table_set_int32@@Base+0x78>
   14448:	str	r8, [r0]
   1444c:	mov	r0, r6
   14450:	mov	r1, r5
   14454:	mov	r2, r4
   14458:	mov	r3, #1
   1445c:	bl	12d40 <table_notify@@Base>
   14460:	mov	r7, #0
   14464:	mov	r0, r7
   14468:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001446c <table_set_uint32@@Base>:
   1446c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14470:	add	fp, sp, #24
   14474:	mov	r8, r3
   14478:	mov	r4, r2
   1447c:	mov	r5, r1
   14480:	mov	r6, r0
   14484:	bl	14db0 <table_get_cell_ptr@@Base>
   14488:	mov	r9, r0
   1448c:	mov	r0, r6
   14490:	mov	r1, r4
   14494:	bl	12e0c <table_get_col_ptr@@Base>
   14498:	ldr	r0, [r0, #4]
   1449c:	mvn	r7, #0
   144a0:	cmp	r0, #7
   144a4:	bne	144e4 <table_set_uint32@@Base+0x78>
   144a8:	ldr	r0, [r9]
   144ac:	cmp	r0, #0
   144b0:	bne	144c8 <table_set_uint32@@Base+0x5c>
   144b4:	mov	r0, #4
   144b8:	bl	12004 <malloc@plt>
   144bc:	cmp	r0, #0
   144c0:	str	r0, [r9]
   144c4:	beq	144e4 <table_set_uint32@@Base+0x78>
   144c8:	str	r8, [r0]
   144cc:	mov	r0, r6
   144d0:	mov	r1, r5
   144d4:	mov	r2, r4
   144d8:	mov	r3, #1
   144dc:	bl	12d40 <table_notify@@Base>
   144e0:	mov	r7, #0
   144e4:	mov	r0, r7
   144e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000144ec <table_set_int64@@Base>:
   144ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144f0:	add	fp, sp, #24
   144f4:	mov	r4, r2
   144f8:	mov	r8, r1
   144fc:	mov	r6, r0
   14500:	bl	14db0 <table_get_cell_ptr@@Base>
   14504:	mov	r5, r0
   14508:	mov	r0, r6
   1450c:	mov	r1, r4
   14510:	bl	12e0c <table_get_col_ptr@@Base>
   14514:	ldr	r0, [r0, #4]
   14518:	mvn	r7, #0
   1451c:	cmp	r0, #8
   14520:	bne	1456c <table_set_int64@@Base+0x80>
   14524:	ldr	r0, [r5]
   14528:	cmp	r0, #0
   1452c:	bne	14544 <table_set_int64@@Base+0x58>
   14530:	mov	r0, #8
   14534:	bl	12004 <malloc@plt>
   14538:	cmp	r0, #0
   1453c:	str	r0, [r5]
   14540:	beq	1456c <table_set_int64@@Base+0x80>
   14544:	ldr	r1, [fp, #12]
   14548:	ldr	r2, [fp, #8]
   1454c:	mov	r3, #1
   14550:	str	r2, [r0]
   14554:	str	r1, [r0, #4]
   14558:	mov	r0, r6
   1455c:	mov	r1, r8
   14560:	mov	r2, r4
   14564:	bl	12d40 <table_notify@@Base>
   14568:	mov	r7, #0
   1456c:	mov	r0, r7
   14570:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014574 <table_set_uint64@@Base>:
   14574:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14578:	add	fp, sp, #24
   1457c:	mov	r4, r2
   14580:	mov	r8, r1
   14584:	mov	r6, r0
   14588:	bl	14db0 <table_get_cell_ptr@@Base>
   1458c:	mov	r5, r0
   14590:	mov	r0, r6
   14594:	mov	r1, r4
   14598:	bl	12e0c <table_get_col_ptr@@Base>
   1459c:	ldr	r0, [r0, #4]
   145a0:	mvn	r7, #0
   145a4:	cmp	r0, #9
   145a8:	bne	145f4 <table_set_uint64@@Base+0x80>
   145ac:	ldr	r0, [r5]
   145b0:	cmp	r0, #0
   145b4:	bne	145cc <table_set_uint64@@Base+0x58>
   145b8:	mov	r0, #8
   145bc:	bl	12004 <malloc@plt>
   145c0:	cmp	r0, #0
   145c4:	str	r0, [r5]
   145c8:	beq	145f4 <table_set_uint64@@Base+0x80>
   145cc:	ldr	r1, [fp, #12]
   145d0:	ldr	r2, [fp, #8]
   145d4:	mov	r3, #1
   145d8:	str	r2, [r0]
   145dc:	str	r1, [r0, #4]
   145e0:	mov	r0, r6
   145e4:	mov	r1, r8
   145e8:	mov	r2, r4
   145ec:	bl	12d40 <table_notify@@Base>
   145f0:	mov	r7, #0
   145f4:	mov	r0, r7
   145f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000145fc <table_set_short@@Base>:
   145fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14600:	add	fp, sp, #24
   14604:	mov	r8, r3
   14608:	mov	r4, r2
   1460c:	mov	r9, r1
   14610:	mov	r6, r0
   14614:	bl	14db0 <table_get_cell_ptr@@Base>
   14618:	mov	r5, r0
   1461c:	mov	r0, r6
   14620:	mov	r1, r4
   14624:	bl	12e0c <table_get_col_ptr@@Base>
   14628:	ldr	r0, [r0, #4]
   1462c:	mvn	r7, #0
   14630:	cmp	r0, #10
   14634:	bne	14674 <table_set_short@@Base+0x78>
   14638:	ldr	r0, [r5]
   1463c:	cmp	r0, #0
   14640:	bne	14658 <table_set_short@@Base+0x5c>
   14644:	mov	r0, #2
   14648:	bl	12004 <malloc@plt>
   1464c:	cmp	r0, #0
   14650:	str	r0, [r5]
   14654:	beq	14674 <table_set_short@@Base+0x78>
   14658:	strh	r8, [r0]
   1465c:	mov	r0, r6
   14660:	mov	r1, r9
   14664:	mov	r2, r4
   14668:	mov	r3, #1
   1466c:	bl	12d40 <table_notify@@Base>
   14670:	mov	r7, #0
   14674:	mov	r0, r7
   14678:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001467c <table_set_ushort@@Base>:
   1467c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14680:	add	fp, sp, #24
   14684:	mov	r8, r3
   14688:	mov	r4, r2
   1468c:	mov	r9, r1
   14690:	mov	r6, r0
   14694:	bl	14db0 <table_get_cell_ptr@@Base>
   14698:	mov	r5, r0
   1469c:	mov	r0, r6
   146a0:	mov	r1, r4
   146a4:	bl	12e0c <table_get_col_ptr@@Base>
   146a8:	ldr	r0, [r0, #4]
   146ac:	mvn	r7, #0
   146b0:	cmp	r0, #11
   146b4:	bne	146f4 <table_set_ushort@@Base+0x78>
   146b8:	ldr	r0, [r5]
   146bc:	cmp	r0, #0
   146c0:	bne	146d8 <table_set_ushort@@Base+0x5c>
   146c4:	mov	r0, #2
   146c8:	bl	12004 <malloc@plt>
   146cc:	cmp	r0, #0
   146d0:	str	r0, [r5]
   146d4:	beq	146f4 <table_set_ushort@@Base+0x78>
   146d8:	strh	r8, [r0]
   146dc:	mov	r0, r6
   146e0:	mov	r1, r9
   146e4:	mov	r2, r4
   146e8:	mov	r3, #1
   146ec:	bl	12d40 <table_notify@@Base>
   146f0:	mov	r7, #0
   146f4:	mov	r0, r7
   146f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000146fc <table_set_long@@Base>:
   146fc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14700:	add	fp, sp, #24
   14704:	mov	r8, r3
   14708:	mov	r4, r2
   1470c:	mov	r5, r1
   14710:	mov	r6, r0
   14714:	bl	14db0 <table_get_cell_ptr@@Base>
   14718:	mov	r9, r0
   1471c:	mov	r0, r6
   14720:	mov	r1, r4
   14724:	bl	12e0c <table_get_col_ptr@@Base>
   14728:	ldr	r0, [r0, #4]
   1472c:	mvn	r7, #0
   14730:	cmp	r0, #12
   14734:	bne	14774 <table_set_long@@Base+0x78>
   14738:	ldr	r0, [r9]
   1473c:	cmp	r0, #0
   14740:	bne	14758 <table_set_long@@Base+0x5c>
   14744:	mov	r0, #4
   14748:	bl	12004 <malloc@plt>
   1474c:	cmp	r0, #0
   14750:	str	r0, [r9]
   14754:	beq	14774 <table_set_long@@Base+0x78>
   14758:	str	r8, [r0]
   1475c:	mov	r0, r6
   14760:	mov	r1, r5
   14764:	mov	r2, r4
   14768:	mov	r3, #1
   1476c:	bl	12d40 <table_notify@@Base>
   14770:	mov	r7, #0
   14774:	mov	r0, r7
   14778:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001477c <table_set_ulong@@Base>:
   1477c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14780:	add	fp, sp, #24
   14784:	mov	r8, r3
   14788:	mov	r4, r2
   1478c:	mov	r5, r1
   14790:	mov	r6, r0
   14794:	bl	14db0 <table_get_cell_ptr@@Base>
   14798:	mov	r9, r0
   1479c:	mov	r0, r6
   147a0:	mov	r1, r4
   147a4:	bl	12e0c <table_get_col_ptr@@Base>
   147a8:	ldr	r0, [r0, #4]
   147ac:	mvn	r7, #0
   147b0:	cmp	r0, #13
   147b4:	bne	147f4 <table_set_ulong@@Base+0x78>
   147b8:	ldr	r0, [r9]
   147bc:	cmp	r0, #0
   147c0:	bne	147d8 <table_set_ulong@@Base+0x5c>
   147c4:	mov	r0, #4
   147c8:	bl	12004 <malloc@plt>
   147cc:	cmp	r0, #0
   147d0:	str	r0, [r9]
   147d4:	beq	147f4 <table_set_ulong@@Base+0x78>
   147d8:	str	r8, [r0]
   147dc:	mov	r0, r6
   147e0:	mov	r1, r5
   147e4:	mov	r2, r4
   147e8:	mov	r3, #1
   147ec:	bl	12d40 <table_notify@@Base>
   147f0:	mov	r7, #0
   147f4:	mov	r0, r7
   147f8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000147fc <table_set_llong@@Base>:
   147fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14800:	add	fp, sp, #24
   14804:	mov	r4, r2
   14808:	mov	r8, r1
   1480c:	mov	r6, r0
   14810:	bl	14db0 <table_get_cell_ptr@@Base>
   14814:	mov	r5, r0
   14818:	mov	r0, r6
   1481c:	mov	r1, r4
   14820:	bl	12e0c <table_get_col_ptr@@Base>
   14824:	ldr	r0, [r0, #4]
   14828:	mvn	r7, #0
   1482c:	cmp	r0, #14
   14830:	bne	1487c <table_set_llong@@Base+0x80>
   14834:	ldr	r0, [r5]
   14838:	cmp	r0, #0
   1483c:	bne	14854 <table_set_llong@@Base+0x58>
   14840:	mov	r0, #8
   14844:	bl	12004 <malloc@plt>
   14848:	cmp	r0, #0
   1484c:	str	r0, [r5]
   14850:	beq	1487c <table_set_llong@@Base+0x80>
   14854:	ldr	r1, [fp, #12]
   14858:	ldr	r2, [fp, #8]
   1485c:	mov	r3, #1
   14860:	str	r2, [r0]
   14864:	str	r1, [r0, #4]
   14868:	mov	r0, r6
   1486c:	mov	r1, r8
   14870:	mov	r2, r4
   14874:	bl	12d40 <table_notify@@Base>
   14878:	mov	r7, #0
   1487c:	mov	r0, r7
   14880:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014884 <table_set_ullong@@Base>:
   14884:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14888:	add	fp, sp, #24
   1488c:	mov	r4, r2
   14890:	mov	r8, r1
   14894:	mov	r6, r0
   14898:	bl	14db0 <table_get_cell_ptr@@Base>
   1489c:	mov	r5, r0
   148a0:	mov	r0, r6
   148a4:	mov	r1, r4
   148a8:	bl	12e0c <table_get_col_ptr@@Base>
   148ac:	ldr	r0, [r0, #4]
   148b0:	mvn	r7, #0
   148b4:	cmp	r0, #15
   148b8:	bne	14904 <table_set_ullong@@Base+0x80>
   148bc:	ldr	r0, [r5]
   148c0:	cmp	r0, #0
   148c4:	bne	148dc <table_set_ullong@@Base+0x58>
   148c8:	mov	r0, #8
   148cc:	bl	12004 <malloc@plt>
   148d0:	cmp	r0, #0
   148d4:	str	r0, [r5]
   148d8:	beq	14904 <table_set_ullong@@Base+0x80>
   148dc:	ldr	r1, [fp, #12]
   148e0:	ldr	r2, [fp, #8]
   148e4:	mov	r3, #1
   148e8:	str	r2, [r0]
   148ec:	str	r1, [r0, #4]
   148f0:	mov	r0, r6
   148f4:	mov	r1, r8
   148f8:	mov	r2, r4
   148fc:	bl	12d40 <table_notify@@Base>
   14900:	mov	r7, #0
   14904:	mov	r0, r7
   14908:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001490c <table_set_float@@Base>:
   1490c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14910:	add	fp, sp, #24
   14914:	vpush	{d8}
   14918:	vmov.f32	s16, s0
   1491c:	mov	r4, r2
   14920:	mov	r8, r1
   14924:	mov	r6, r0
   14928:	bl	14db0 <table_get_cell_ptr@@Base>
   1492c:	mov	r5, r0
   14930:	mov	r0, r6
   14934:	mov	r1, r4
   14938:	bl	12e0c <table_get_col_ptr@@Base>
   1493c:	ldr	r0, [r0, #4]
   14940:	mvn	r7, #0
   14944:	cmp	r0, #16
   14948:	bne	1498c <table_set_float@@Base+0x80>
   1494c:	ldr	r0, [r5]
   14950:	cmp	r0, #0
   14954:	bne	1496c <table_set_float@@Base+0x60>
   14958:	mov	r0, #4
   1495c:	bl	12004 <malloc@plt>
   14960:	cmp	r0, #0
   14964:	str	r0, [r5]
   14968:	beq	1498c <table_set_float@@Base+0x80>
   1496c:	vmov	r1, s16
   14970:	mov	r2, r4
   14974:	mov	r3, #1
   14978:	str	r1, [r0]
   1497c:	mov	r0, r6
   14980:	mov	r1, r8
   14984:	bl	12d40 <table_notify@@Base>
   14988:	mov	r7, #0
   1498c:	mov	r0, r7
   14990:	vpop	{d8}
   14994:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014998 <table_set_double@@Base>:
   14998:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1499c:	add	fp, sp, #24
   149a0:	vpush	{d8}
   149a4:	vorr	d8, d0, d0
   149a8:	mov	r4, r2
   149ac:	mov	r5, r1
   149b0:	mov	r6, r0
   149b4:	bl	14db0 <table_get_cell_ptr@@Base>
   149b8:	mov	r8, r0
   149bc:	mov	r0, r6
   149c0:	mov	r1, r4
   149c4:	bl	12e0c <table_get_col_ptr@@Base>
   149c8:	ldr	r0, [r0, #4]
   149cc:	mvn	r7, #0
   149d0:	cmp	r0, #17
   149d4:	bne	14a14 <table_set_double@@Base+0x7c>
   149d8:	ldr	r0, [r8]
   149dc:	cmp	r0, #0
   149e0:	bne	149f8 <table_set_double@@Base+0x60>
   149e4:	mov	r0, #8
   149e8:	bl	12004 <malloc@plt>
   149ec:	cmp	r0, #0
   149f0:	str	r0, [r8]
   149f4:	beq	14a14 <table_set_double@@Base+0x7c>
   149f8:	vst1.8	{d8}, [r0]
   149fc:	mov	r0, r6
   14a00:	mov	r1, r5
   14a04:	mov	r2, r4
   14a08:	mov	r3, #1
   14a0c:	bl	12d40 <table_notify@@Base>
   14a10:	mov	r7, #0
   14a14:	mov	r0, r7
   14a18:	vpop	{d8}
   14a1c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014a20 <table_set_ldouble@@Base>:
   14a20:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a24:	add	fp, sp, #24
   14a28:	vpush	{d8}
   14a2c:	vorr	d8, d0, d0
   14a30:	mov	r4, r2
   14a34:	mov	r5, r1
   14a38:	mov	r6, r0
   14a3c:	bl	14db0 <table_get_cell_ptr@@Base>
   14a40:	mov	r8, r0
   14a44:	mov	r0, r6
   14a48:	mov	r1, r4
   14a4c:	bl	12e0c <table_get_col_ptr@@Base>
   14a50:	ldr	r0, [r0, #4]
   14a54:	mvn	r7, #0
   14a58:	cmp	r0, #18
   14a5c:	bne	14a9c <table_set_ldouble@@Base+0x7c>
   14a60:	ldr	r0, [r8]
   14a64:	cmp	r0, #0
   14a68:	bne	14a80 <table_set_ldouble@@Base+0x60>
   14a6c:	mov	r0, #8
   14a70:	bl	12004 <malloc@plt>
   14a74:	cmp	r0, #0
   14a78:	str	r0, [r8]
   14a7c:	beq	14a9c <table_set_ldouble@@Base+0x7c>
   14a80:	vst1.8	{d8}, [r0]
   14a84:	mov	r0, r6
   14a88:	mov	r1, r5
   14a8c:	mov	r2, r4
   14a90:	mov	r3, #1
   14a94:	bl	12d40 <table_notify@@Base>
   14a98:	mov	r7, #0
   14a9c:	mov	r0, r7
   14aa0:	vpop	{d8}
   14aa4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014aa8 <table_set_string@@Base>:
   14aa8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14aac:	add	fp, sp, #24
   14ab0:	mov	r8, r3
   14ab4:	mov	r4, r2
   14ab8:	mov	r9, r1
   14abc:	mov	r6, r0
   14ac0:	bl	14db0 <table_get_cell_ptr@@Base>
   14ac4:	mov	r5, r0
   14ac8:	mov	r0, r6
   14acc:	mov	r1, r4
   14ad0:	bl	12e0c <table_get_col_ptr@@Base>
   14ad4:	ldr	r0, [r0, #4]
   14ad8:	mvn	r7, #0
   14adc:	cmp	r0, #21
   14ae0:	bne	14b28 <table_set_string@@Base+0x80>
   14ae4:	mov	r0, r8
   14ae8:	bl	12028 <strlen@plt>
   14aec:	ldr	r2, [r5]
   14af0:	add	r1, r0, #1
   14af4:	mov	r0, r2
   14af8:	bl	11fec <realloc@plt>
   14afc:	cmp	r0, #0
   14b00:	str	r0, [r5]
   14b04:	beq	14b28 <table_set_string@@Base+0x80>
   14b08:	mov	r1, r8
   14b0c:	bl	11ff8 <strcpy@plt>
   14b10:	mov	r0, r6
   14b14:	mov	r1, r9
   14b18:	mov	r2, r4
   14b1c:	mov	r3, #1
   14b20:	bl	12d40 <table_notify@@Base>
   14b24:	mov	r7, #0
   14b28:	mov	r0, r7
   14b2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014b30 <table_set_char@@Base>:
   14b30:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14b34:	add	fp, sp, #24
   14b38:	mov	r8, r3
   14b3c:	mov	r4, r2
   14b40:	mov	r9, r1
   14b44:	mov	r6, r0
   14b48:	bl	14db0 <table_get_cell_ptr@@Base>
   14b4c:	mov	r5, r0
   14b50:	mov	r0, r6
   14b54:	mov	r1, r4
   14b58:	bl	12e0c <table_get_col_ptr@@Base>
   14b5c:	ldr	r0, [r0, #4]
   14b60:	mvn	r7, #0
   14b64:	cmp	r0, #19
   14b68:	bne	14ba8 <table_set_char@@Base+0x78>
   14b6c:	ldr	r0, [r5]
   14b70:	cmp	r0, #0
   14b74:	bne	14b8c <table_set_char@@Base+0x5c>
   14b78:	mov	r0, #1
   14b7c:	bl	12004 <malloc@plt>
   14b80:	cmp	r0, #0
   14b84:	str	r0, [r5]
   14b88:	beq	14ba8 <table_set_char@@Base+0x78>
   14b8c:	strb	r8, [r0]
   14b90:	mov	r0, r6
   14b94:	mov	r1, r9
   14b98:	mov	r2, r4
   14b9c:	mov	r3, #1
   14ba0:	bl	12d40 <table_notify@@Base>
   14ba4:	mov	r7, #0
   14ba8:	mov	r0, r7
   14bac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014bb0 <table_set_uchar@@Base>:
   14bb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14bb4:	add	fp, sp, #24
   14bb8:	mov	r8, r3
   14bbc:	mov	r4, r2
   14bc0:	mov	r9, r1
   14bc4:	mov	r6, r0
   14bc8:	bl	14db0 <table_get_cell_ptr@@Base>
   14bcc:	mov	r5, r0
   14bd0:	mov	r0, r6
   14bd4:	mov	r1, r4
   14bd8:	bl	12e0c <table_get_col_ptr@@Base>
   14bdc:	ldr	r0, [r0, #4]
   14be0:	mvn	r7, #0
   14be4:	cmp	r0, #20
   14be8:	bne	14c28 <table_set_uchar@@Base+0x78>
   14bec:	ldr	r0, [r5]
   14bf0:	cmp	r0, #0
   14bf4:	bne	14c0c <table_set_uchar@@Base+0x5c>
   14bf8:	mov	r0, #1
   14bfc:	bl	12004 <malloc@plt>
   14c00:	cmp	r0, #0
   14c04:	str	r0, [r5]
   14c08:	beq	14c28 <table_set_uchar@@Base+0x78>
   14c0c:	strb	r8, [r0]
   14c10:	mov	r0, r6
   14c14:	mov	r1, r9
   14c18:	mov	r2, r4
   14c1c:	mov	r3, #1
   14c20:	bl	12d40 <table_notify@@Base>
   14c24:	mov	r7, #0
   14c28:	mov	r0, r7
   14c2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014c30 <table_set_ptr@@Base>:
   14c30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14c34:	add	fp, sp, #24
   14c38:	mov	r8, r3
   14c3c:	mov	r4, r2
   14c40:	mov	r5, r1
   14c44:	mov	r6, r0
   14c48:	bl	14db0 <table_get_cell_ptr@@Base>
   14c4c:	mov	r7, r0
   14c50:	mov	r0, r6
   14c54:	mov	r1, r4
   14c58:	bl	12e0c <table_get_col_ptr@@Base>
   14c5c:	ldr	r1, [r0, #4]
   14c60:	mvn	r0, #0
   14c64:	cmp	r1, #23
   14c68:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14c6c:	mov	r0, r6
   14c70:	mov	r1, r5
   14c74:	mov	r2, r4
   14c78:	mov	r3, #1
   14c7c:	str	r8, [r7]
   14c80:	bl	12d40 <table_notify@@Base>
   14c84:	mov	r0, #0
   14c88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014c8c <table_column_is_valid@@Base>:
   14c8c:	cmp	r0, #0
   14c90:	moveq	r0, #0
   14c94:	bxeq	lr
   14c98:	push	{r4, sl, fp, lr}
   14c9c:	add	fp, sp, #8
   14ca0:	mov	r4, r1
   14ca4:	bl	12e34 <table_get_column_length@@Base>
   14ca8:	cmp	r0, r4
   14cac:	mov	r0, #0
   14cb0:	mov	r1, #0
   14cb4:	movwgt	r0, #1
   14cb8:	cmn	r4, #1
   14cbc:	movwgt	r1, #1
   14cc0:	and	r0, r1, r0
   14cc4:	pop	{r4, sl, fp, pc}

00014cc8 <table_row_is_valid@@Base>:
   14cc8:	cmp	r0, #0
   14ccc:	moveq	r0, #0
   14cd0:	bxeq	lr
   14cd4:	push	{r4, sl, fp, lr}
   14cd8:	add	fp, sp, #8
   14cdc:	mov	r4, r1
   14ce0:	bl	13b8c <table_get_row_length@@Base>
   14ce4:	cmp	r0, r4
   14ce8:	mov	r0, #0
   14cec:	mov	r1, #0
   14cf0:	movwgt	r0, #1
   14cf4:	cmn	r4, #1
   14cf8:	movwgt	r1, #1
   14cfc:	and	r0, r1, r0
   14d00:	pop	{r4, sl, fp, pc}

00014d04 <table_cell_is_valid@@Base>:
   14d04:	push	{r4, r5, r6, r7, fp, lr}
   14d08:	add	fp, sp, #16
   14d0c:	mov	r5, #0
   14d10:	cmp	r0, #0
   14d14:	beq	14d34 <table_cell_is_valid@@Base+0x30>
   14d18:	mov	r7, r2
   14d1c:	mov	r4, r1
   14d20:	mov	r6, r0
   14d24:	bl	12e34 <table_get_column_length@@Base>
   14d28:	cmp	r7, #0
   14d2c:	cmpge	r0, r7
   14d30:	bgt	14d3c <table_cell_is_valid@@Base+0x38>
   14d34:	mov	r0, r5
   14d38:	pop	{r4, r5, r6, r7, fp, pc}
   14d3c:	mov	r0, r6
   14d40:	bl	13b8c <table_get_row_length@@Base>
   14d44:	cmp	r0, r4
   14d48:	mov	r0, #0
   14d4c:	mov	r1, #0
   14d50:	movwgt	r0, #1
   14d54:	cmn	r4, #1
   14d58:	movwgt	r1, #1
   14d5c:	and	r5, r1, r0
   14d60:	mov	r0, r5
   14d64:	pop	{r4, r5, r6, r7, fp, pc}

00014d68 <table_cell_has_value@@Base>:
   14d68:	push	{fp, lr}
   14d6c:	mov	fp, sp
   14d70:	bl	14db0 <table_get_cell_ptr@@Base>
   14d74:	cmp	r0, #0
   14d78:	moveq	r0, #0
   14d7c:	popeq	{fp, pc}
   14d80:	ldr	r0, [r0]
   14d84:	cmp	r0, #0
   14d88:	movwne	r0, #1
   14d8c:	pop	{fp, pc}

00014d90 <table_cell_init@@Base>:
   14d90:	push	{r4, sl, fp, lr}
   14d94:	add	fp, sp, #8
   14d98:	mov	r4, r2
   14d9c:	bl	13b28 <table_get_row_ptr@@Base>
   14da0:	ldr	r0, [r0]
   14da4:	mov	r1, #0
   14da8:	str	r1, [r0, r4, lsl #2]
   14dac:	pop	{r4, sl, fp, pc}

00014db0 <table_get_cell_ptr@@Base>:
   14db0:	push	{r4, sl, fp, lr}
   14db4:	add	fp, sp, #8
   14db8:	mov	r4, r2
   14dbc:	bl	13b28 <table_get_row_ptr@@Base>
   14dc0:	ldr	r0, [r0]
   14dc4:	add	r0, r0, r4, lsl #2
   14dc8:	pop	{r4, sl, fp, pc}

00014dcc <table_cell_destroy@@Base>:
   14dcc:	push	{r4, r5, r6, sl, fp, lr}
   14dd0:	add	fp, sp, #16
   14dd4:	mov	r5, r1
   14dd8:	mov	r1, r2
   14ddc:	mov	r4, r2
   14de0:	mov	r6, r0
   14de4:	bl	12eb4 <table_get_column_data_type@@Base>
   14de8:	cmp	r0, #23
   14dec:	popeq	{r4, r5, r6, sl, fp, pc}
   14df0:	mov	r0, r6
   14df4:	mov	r1, r5
   14df8:	bl	13b28 <table_get_row_ptr@@Base>
   14dfc:	ldr	r0, [r0]
   14e00:	ldr	r0, [r0, r4, lsl #2]
   14e04:	cmp	r0, #0
   14e08:	beq	14e14 <table_cell_destroy@@Base+0x48>
   14e0c:	pop	{r4, r5, r6, sl, fp, lr}
   14e10:	b	11fd4 <free@plt>
   14e14:	pop	{r4, r5, r6, sl, fp, pc}

00014e18 <table_cell_to_buffer@@Base>:
   14e18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14e1c:	add	fp, sp, #24
   14e20:	sub	sp, sp, #8
   14e24:	mov	r7, r1
   14e28:	mov	r1, r2
   14e2c:	mov	r5, r3
   14e30:	mov	r6, r2
   14e34:	mov	r4, r0
   14e38:	bl	12eb4 <table_get_column_data_type@@Base>
   14e3c:	cmp	r0, #23
   14e40:	bhi	150b0 <table_cell_to_buffer@@Base+0x298>
   14e44:	ldr	r8, [fp, #8]
   14e48:	add	r1, pc, #0
   14e4c:	ldr	pc, [r1, r0, lsl #2]
   14e50:			; <UNDEFINED> instruction: 0x00014eb0
   14e54:	andeq	r4, r1, r4, asr #29
   14e58:	ldrdeq	r4, [r1], -r8
   14e5c:	andeq	r4, r1, ip, ror #29
   14e60:	andeq	r4, r1, r0, lsl #30
   14e64:	andeq	r4, r1, r4, lsl pc
   14e68:	andeq	r4, r1, r8, lsr #30
   14e6c:	andeq	r4, r1, ip, lsr pc
   14e70:	andeq	r4, r1, ip, asr pc
   14e74:	andeq	r4, r1, r0, ror pc
   14e78:	andeq	r4, r1, r4, lsl #31
   14e7c:	andeq	r4, r1, r4, lsr #31
   14e80:	andeq	r4, r1, r4, asr #31
   14e84:	andeq	r4, r1, r4, ror #31
   14e88:	andeq	r5, r1, r4
   14e8c:	andeq	r5, r1, r4, lsr #32
   14e90:	andeq	r5, r1, r4, asr #32
   14e94:	andeq	r5, r1, r8, rrx
   14e98:	andeq	r5, r1, r8, lsl #1
   14e9c:	strheq	r5, [r1], -ip
   14ea0:	ldrdeq	r5, [r1], -r0
   14ea4:	strdeq	r5, [r1], -r0
   14ea8:	andeq	r5, r1, r0, lsl r1
   14eac:	andeq	r5, r1, r4, asr #2
   14eb0:	mov	r0, r4
   14eb4:	mov	r1, r7
   14eb8:	mov	r2, r6
   14ebc:	bl	138e4 <table_get_int@@Base>
   14ec0:	b	15120 <table_cell_to_buffer@@Base+0x308>
   14ec4:	mov	r0, r4
   14ec8:	mov	r1, r7
   14ecc:	mov	r2, r6
   14ed0:	bl	138fc <table_get_uint@@Base>
   14ed4:	b	14f4c <table_cell_to_buffer@@Base+0x134>
   14ed8:	mov	r0, r4
   14edc:	mov	r1, r7
   14ee0:	mov	r2, r6
   14ee4:	bl	13914 <table_get_int8@@Base>
   14ee8:	b	15120 <table_cell_to_buffer@@Base+0x308>
   14eec:	mov	r0, r4
   14ef0:	mov	r1, r7
   14ef4:	mov	r2, r6
   14ef8:	bl	1392c <table_get_uint8@@Base>
   14efc:	b	14f4c <table_cell_to_buffer@@Base+0x134>
   14f00:	mov	r0, r4
   14f04:	mov	r1, r7
   14f08:	mov	r2, r6
   14f0c:	bl	13944 <table_get_int16@@Base>
   14f10:	b	15120 <table_cell_to_buffer@@Base+0x308>
   14f14:	mov	r0, r4
   14f18:	mov	r1, r7
   14f1c:	mov	r2, r6
   14f20:	bl	1395c <table_get_uint16@@Base>
   14f24:	b	14f4c <table_cell_to_buffer@@Base+0x134>
   14f28:	mov	r0, r4
   14f2c:	mov	r1, r7
   14f30:	mov	r2, r6
   14f34:	bl	13974 <table_get_int32@@Base>
   14f38:	b	15120 <table_cell_to_buffer@@Base+0x308>
   14f3c:	mov	r0, r4
   14f40:	mov	r1, r7
   14f44:	mov	r2, r6
   14f48:	bl	1398c <table_get_uint32@@Base>
   14f4c:	movw	r2, #22867	; 0x5953
   14f50:	mov	r3, r0
   14f54:	movt	r2, #1
   14f58:	b	1512c <table_cell_to_buffer@@Base+0x314>
   14f5c:	mov	r0, r4
   14f60:	mov	r1, r7
   14f64:	mov	r2, r6
   14f68:	bl	139a4 <table_get_int64@@Base>
   14f6c:	b	15014 <table_cell_to_buffer@@Base+0x1fc>
   14f70:	mov	r0, r4
   14f74:	mov	r1, r7
   14f78:	mov	r2, r6
   14f7c:	bl	139bc <table_get_uint64@@Base>
   14f80:	b	15034 <table_cell_to_buffer@@Base+0x21c>
   14f84:	mov	r0, r4
   14f88:	mov	r1, r7
   14f8c:	mov	r2, r6
   14f90:	bl	139d4 <table_get_short@@Base>
   14f94:	movw	r2, #22880	; 0x5960
   14f98:	mov	r3, r0
   14f9c:	movt	r2, #1
   14fa0:	b	1512c <table_cell_to_buffer@@Base+0x314>
   14fa4:	mov	r0, r4
   14fa8:	mov	r1, r7
   14fac:	mov	r2, r6
   14fb0:	bl	139ec <table_get_ushort@@Base>
   14fb4:	movw	r2, #22884	; 0x5964
   14fb8:	mov	r3, r0
   14fbc:	movt	r2, #1
   14fc0:	b	1512c <table_cell_to_buffer@@Base+0x314>
   14fc4:	mov	r0, r4
   14fc8:	mov	r1, r7
   14fcc:	mov	r2, r6
   14fd0:	bl	13a04 <table_get_long@@Base>
   14fd4:	movw	r2, #22888	; 0x5968
   14fd8:	mov	r3, r0
   14fdc:	movt	r2, #1
   14fe0:	b	1512c <table_cell_to_buffer@@Base+0x314>
   14fe4:	mov	r0, r4
   14fe8:	mov	r1, r7
   14fec:	mov	r2, r6
   14ff0:	bl	13a1c <table_get_ulong@@Base>
   14ff4:	movw	r2, #22892	; 0x596c
   14ff8:	mov	r3, r0
   14ffc:	movt	r2, #1
   15000:	b	1512c <table_cell_to_buffer@@Base+0x314>
   15004:	mov	r0, r4
   15008:	mov	r1, r7
   1500c:	mov	r2, r6
   15010:	bl	13a34 <table_get_llong@@Base>
   15014:	movw	r2, #22870	; 0x5956
   15018:	stm	sp, {r0, r1}
   1501c:	movt	r2, #1
   15020:	b	150a4 <table_cell_to_buffer@@Base+0x28c>
   15024:	mov	r0, r4
   15028:	mov	r1, r7
   1502c:	mov	r2, r6
   15030:	bl	13a4c <table_get_ullong@@Base>
   15034:	movw	r2, #22875	; 0x595b
   15038:	stm	sp, {r0, r1}
   1503c:	movt	r2, #1
   15040:	b	150a4 <table_cell_to_buffer@@Base+0x28c>
   15044:	mov	r0, r4
   15048:	mov	r1, r7
   1504c:	mov	r2, r6
   15050:	bl	13a64 <table_get_float@@Base>
   15054:	movw	r2, #22899	; 0x5973
   15058:	vcvt.f64.f32	d16, s0
   1505c:	vstr	d16, [sp]
   15060:	movt	r2, #1
   15064:	b	150a4 <table_cell_to_buffer@@Base+0x28c>
   15068:	mov	r0, r4
   1506c:	mov	r1, r7
   15070:	mov	r2, r6
   15074:	bl	13a7c <table_get_double@@Base>
   15078:	movw	r2, #22902	; 0x5976
   1507c:	vstr	d0, [sp]
   15080:	movt	r2, #1
   15084:	b	150a4 <table_cell_to_buffer@@Base+0x28c>
   15088:	mov	r0, r4
   1508c:	mov	r1, r7
   15090:	mov	r2, r6
   15094:	bl	13a94 <table_get_ldouble@@Base>
   15098:	movw	r2, #22906	; 0x597a
   1509c:	vstr	d0, [sp]
   150a0:	movt	r2, #1
   150a4:	mov	r0, r5
   150a8:	mov	r1, r8
   150ac:	bl	12040 <snprintf@plt>
   150b0:	mov	r0, #0
   150b4:	sub	sp, fp, #24
   150b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   150bc:	mov	r0, r4
   150c0:	mov	r1, r7
   150c4:	mov	r2, r6
   150c8:	bl	13aac <table_get_char@@Base>
   150cc:	b	150e0 <table_cell_to_buffer@@Base+0x2c8>
   150d0:	mov	r0, r4
   150d4:	mov	r1, r7
   150d8:	mov	r2, r6
   150dc:	bl	13ac4 <table_get_uchar@@Base>
   150e0:	movw	r2, #22910	; 0x597e
   150e4:	mov	r3, r0
   150e8:	movt	r2, #1
   150ec:	b	1512c <table_cell_to_buffer@@Base+0x314>
   150f0:	mov	r0, r4
   150f4:	mov	r1, r7
   150f8:	mov	r2, r6
   150fc:	bl	13adc <table_get_string@@Base>
   15100:	movw	r2, #22896	; 0x5970
   15104:	mov	r3, r0
   15108:	movt	r2, #1
   1510c:	b	1512c <table_cell_to_buffer@@Base+0x314>
   15110:	mov	r0, r4
   15114:	mov	r1, r7
   15118:	mov	r2, r6
   1511c:	bl	138cc <table_get_bool@@Base>
   15120:	movw	r2, #22864	; 0x5950
   15124:	mov	r3, r0
   15128:	movt	r2, #1
   1512c:	mov	r0, r5
   15130:	mov	r1, r8
   15134:	bl	12040 <snprintf@plt>
   15138:	mov	r0, #0
   1513c:	sub	sp, fp, #24
   15140:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15144:	mov	r0, r4
   15148:	mov	r1, r7
   1514c:	mov	r2, r6
   15150:	bl	13af0 <table_get_ptr@@Base>
   15154:	movw	r2, #22913	; 0x5981
   15158:	mov	r3, r0
   1515c:	movt	r2, #1
   15160:	b	1512c <table_cell_to_buffer@@Base+0x314>

00015164 <table_cell_from_buffer@@Base>:
   15164:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15168:	add	fp, sp, #24
   1516c:	sub	sp, sp, #264	; 0x108
   15170:	mov	r5, r1
   15174:	mov	r1, r2
   15178:	mov	r7, r3
   1517c:	mov	r4, r2
   15180:	mov	r6, r0
   15184:	bl	12eb4 <table_get_column_data_type@@Base>
   15188:	cmp	r0, #23
   1518c:	bhi	15760 <table_cell_from_buffer@@Base+0x5fc>
   15190:	add	r1, pc, #0
   15194:	ldr	pc, [r1, r0, lsl #2]
   15198:	strdeq	r5, [r1], -r8
   1519c:	andeq	r5, r1, r0, lsr r2
   151a0:	andeq	r5, r1, r8, ror #4
   151a4:	andeq	r5, r1, r0, lsr #5
   151a8:	ldrdeq	r5, [r1], -r8
   151ac:	andeq	r5, r1, r0, lsl r3
   151b0:	andeq	r5, r1, r8, asr #6
   151b4:	andeq	r5, r1, r0, lsl #7
   151b8:			; <UNDEFINED> instruction: 0x000153b8
   151bc:	strdeq	r5, [r1], -r8
   151c0:	andeq	r5, r1, r8, lsr r4
   151c4:	andeq	r5, r1, r0, ror r4
   151c8:	andeq	r5, r1, r8, lsr #9
   151cc:	andeq	r5, r1, r0, ror #9
   151d0:	andeq	r5, r1, r8, lsl r5
   151d4:	andeq	r5, r1, r8, asr r5
   151d8:	muleq	r1, r8, r5
   151dc:	ldrdeq	r5, [r1], -r0
   151e0:	andeq	r5, r1, r8, lsl #12
   151e4:	andeq	r5, r1, r0, asr #12
   151e8:	andeq	r5, r1, r8, ror r6
   151ec:			; <UNDEFINED> instruction: 0x000156b0
   151f0:	andeq	r5, r1, r8, ror #13
   151f4:	andeq	r5, r1, ip, lsr #14
   151f8:	movw	r1, #22864	; 0x5950
   151fc:	add	r2, sp, #8
   15200:	mov	r0, r7
   15204:	movt	r1, #1
   15208:	bl	1204c <__isoc99_sscanf@plt>
   1520c:	mvn	r7, #0
   15210:	cmp	r0, #1
   15214:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15218:	ldr	r3, [sp, #8]
   1521c:	mov	r0, r6
   15220:	mov	r1, r5
   15224:	mov	r2, r4
   15228:	bl	140ec <table_set_int@@Base>
   1522c:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15230:	movw	r1, #22867	; 0x5953
   15234:	add	r2, sp, #8
   15238:	mov	r0, r7
   1523c:	movt	r1, #1
   15240:	bl	1204c <__isoc99_sscanf@plt>
   15244:	mvn	r7, #0
   15248:	cmp	r0, #1
   1524c:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15250:	ldr	r3, [sp, #8]
   15254:	mov	r0, r6
   15258:	mov	r1, r5
   1525c:	mov	r2, r4
   15260:	bl	1416c <table_set_uint@@Base>
   15264:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15268:	movw	r1, #22916	; 0x5984
   1526c:	add	r2, sp, #8
   15270:	mov	r0, r7
   15274:	movt	r1, #1
   15278:	bl	1204c <__isoc99_sscanf@plt>
   1527c:	mvn	r7, #0
   15280:	cmp	r0, #1
   15284:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15288:	ldrsb	r3, [sp, #8]
   1528c:	mov	r0, r6
   15290:	mov	r1, r5
   15294:	mov	r2, r4
   15298:	bl	141ec <table_set_int8@@Base>
   1529c:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   152a0:	movw	r1, #22921	; 0x5989
   152a4:	add	r2, sp, #8
   152a8:	mov	r0, r7
   152ac:	movt	r1, #1
   152b0:	bl	1204c <__isoc99_sscanf@plt>
   152b4:	mvn	r7, #0
   152b8:	cmp	r0, #1
   152bc:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   152c0:	ldrb	r3, [sp, #8]
   152c4:	mov	r0, r6
   152c8:	mov	r1, r5
   152cc:	mov	r2, r4
   152d0:	bl	1426c <table_set_uint8@@Base>
   152d4:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   152d8:	movw	r1, #22880	; 0x5960
   152dc:	add	r2, sp, #8
   152e0:	mov	r0, r7
   152e4:	movt	r1, #1
   152e8:	bl	1204c <__isoc99_sscanf@plt>
   152ec:	mvn	r7, #0
   152f0:	cmp	r0, #1
   152f4:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   152f8:	ldrsh	r3, [sp, #8]
   152fc:	mov	r0, r6
   15300:	mov	r1, r5
   15304:	mov	r2, r4
   15308:	bl	142ec <table_set_int16@@Base>
   1530c:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15310:	movw	r1, #22884	; 0x5964
   15314:	add	r2, sp, #8
   15318:	mov	r0, r7
   1531c:	movt	r1, #1
   15320:	bl	1204c <__isoc99_sscanf@plt>
   15324:	mvn	r7, #0
   15328:	cmp	r0, #1
   1532c:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15330:	ldrh	r3, [sp, #8]
   15334:	mov	r0, r6
   15338:	mov	r1, r5
   1533c:	mov	r2, r4
   15340:	bl	1436c <table_set_uint16@@Base>
   15344:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15348:	movw	r1, #22864	; 0x5950
   1534c:	add	r2, sp, #8
   15350:	mov	r0, r7
   15354:	movt	r1, #1
   15358:	bl	1204c <__isoc99_sscanf@plt>
   1535c:	mvn	r7, #0
   15360:	cmp	r0, #1
   15364:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15368:	ldr	r3, [sp, #8]
   1536c:	mov	r0, r6
   15370:	mov	r1, r5
   15374:	mov	r2, r4
   15378:	bl	143ec <table_set_int32@@Base>
   1537c:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15380:	movw	r1, #22867	; 0x5953
   15384:	add	r2, sp, #8
   15388:	mov	r0, r7
   1538c:	movt	r1, #1
   15390:	bl	1204c <__isoc99_sscanf@plt>
   15394:	mvn	r7, #0
   15398:	cmp	r0, #1
   1539c:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   153a0:	ldr	r3, [sp, #8]
   153a4:	mov	r0, r6
   153a8:	mov	r1, r5
   153ac:	mov	r2, r4
   153b0:	bl	1446c <table_set_uint32@@Base>
   153b4:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   153b8:	movw	r1, #22870	; 0x5956
   153bc:	add	r2, sp, #8
   153c0:	mov	r0, r7
   153c4:	movt	r1, #1
   153c8:	bl	1204c <__isoc99_sscanf@plt>
   153cc:	mvn	r7, #0
   153d0:	cmp	r0, #1
   153d4:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   153d8:	ldr	r0, [sp, #8]
   153dc:	ldr	r1, [sp, #12]
   153e0:	mov	r2, r4
   153e4:	stm	sp, {r0, r1}
   153e8:	mov	r0, r6
   153ec:	mov	r1, r5
   153f0:	bl	144ec <table_set_int64@@Base>
   153f4:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   153f8:	movw	r1, #22875	; 0x595b
   153fc:	add	r2, sp, #8
   15400:	mov	r0, r7
   15404:	movt	r1, #1
   15408:	bl	1204c <__isoc99_sscanf@plt>
   1540c:	mvn	r7, #0
   15410:	cmp	r0, #1
   15414:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15418:	ldr	r0, [sp, #8]
   1541c:	ldr	r1, [sp, #12]
   15420:	mov	r2, r4
   15424:	stm	sp, {r0, r1}
   15428:	mov	r0, r6
   1542c:	mov	r1, r5
   15430:	bl	14574 <table_set_uint64@@Base>
   15434:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15438:	movw	r1, #22880	; 0x5960
   1543c:	add	r2, sp, #8
   15440:	mov	r0, r7
   15444:	movt	r1, #1
   15448:	bl	1204c <__isoc99_sscanf@plt>
   1544c:	mvn	r7, #0
   15450:	cmp	r0, #1
   15454:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15458:	ldrsh	r3, [sp, #8]
   1545c:	mov	r0, r6
   15460:	mov	r1, r5
   15464:	mov	r2, r4
   15468:	bl	145fc <table_set_short@@Base>
   1546c:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15470:	movw	r1, #22884	; 0x5964
   15474:	add	r2, sp, #8
   15478:	mov	r0, r7
   1547c:	movt	r1, #1
   15480:	bl	1204c <__isoc99_sscanf@plt>
   15484:	mvn	r7, #0
   15488:	cmp	r0, #1
   1548c:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15490:	ldrh	r3, [sp, #8]
   15494:	mov	r0, r6
   15498:	mov	r1, r5
   1549c:	mov	r2, r4
   154a0:	bl	1467c <table_set_ushort@@Base>
   154a4:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   154a8:	movw	r1, #22888	; 0x5968
   154ac:	add	r2, sp, #8
   154b0:	mov	r0, r7
   154b4:	movt	r1, #1
   154b8:	bl	1204c <__isoc99_sscanf@plt>
   154bc:	mvn	r7, #0
   154c0:	cmp	r0, #1
   154c4:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   154c8:	ldr	r3, [sp, #8]
   154cc:	mov	r0, r6
   154d0:	mov	r1, r5
   154d4:	mov	r2, r4
   154d8:	bl	146fc <table_set_long@@Base>
   154dc:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   154e0:	movw	r1, #22892	; 0x596c
   154e4:	add	r2, sp, #8
   154e8:	mov	r0, r7
   154ec:	movt	r1, #1
   154f0:	bl	1204c <__isoc99_sscanf@plt>
   154f4:	mvn	r7, #0
   154f8:	cmp	r0, #1
   154fc:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15500:	ldr	r3, [sp, #8]
   15504:	mov	r0, r6
   15508:	mov	r1, r5
   1550c:	mov	r2, r4
   15510:	bl	1477c <table_set_ulong@@Base>
   15514:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15518:	movw	r1, #22870	; 0x5956
   1551c:	add	r2, sp, #8
   15520:	mov	r0, r7
   15524:	movt	r1, #1
   15528:	bl	1204c <__isoc99_sscanf@plt>
   1552c:	mvn	r7, #0
   15530:	cmp	r0, #1
   15534:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15538:	ldr	r0, [sp, #8]
   1553c:	ldr	r1, [sp, #12]
   15540:	mov	r2, r4
   15544:	stm	sp, {r0, r1}
   15548:	mov	r0, r6
   1554c:	mov	r1, r5
   15550:	bl	147fc <table_set_llong@@Base>
   15554:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15558:	movw	r1, #22875	; 0x595b
   1555c:	add	r2, sp, #8
   15560:	mov	r0, r7
   15564:	movt	r1, #1
   15568:	bl	1204c <__isoc99_sscanf@plt>
   1556c:	mvn	r7, #0
   15570:	cmp	r0, #1
   15574:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15578:	ldr	r0, [sp, #8]
   1557c:	ldr	r1, [sp, #12]
   15580:	mov	r2, r4
   15584:	stm	sp, {r0, r1}
   15588:	mov	r0, r6
   1558c:	mov	r1, r5
   15590:	bl	14884 <table_set_ullong@@Base>
   15594:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15598:	movw	r1, #22899	; 0x5973
   1559c:	add	r2, sp, #8
   155a0:	mov	r0, r7
   155a4:	movt	r1, #1
   155a8:	bl	1204c <__isoc99_sscanf@plt>
   155ac:	mvn	r7, #0
   155b0:	cmp	r0, #1
   155b4:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   155b8:	vldr	s0, [sp, #8]
   155bc:	mov	r0, r6
   155c0:	mov	r1, r5
   155c4:	mov	r2, r4
   155c8:	bl	1490c <table_set_float@@Base>
   155cc:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   155d0:	movw	r1, #22902	; 0x5976
   155d4:	add	r2, sp, #8
   155d8:	mov	r0, r7
   155dc:	movt	r1, #1
   155e0:	bl	1204c <__isoc99_sscanf@plt>
   155e4:	mvn	r7, #0
   155e8:	cmp	r0, #1
   155ec:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   155f0:	vldr	d0, [sp, #8]
   155f4:	mov	r0, r6
   155f8:	mov	r1, r5
   155fc:	mov	r2, r4
   15600:	bl	14998 <table_set_double@@Base>
   15604:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15608:	movw	r1, #22906	; 0x597a
   1560c:	add	r2, sp, #8
   15610:	mov	r0, r7
   15614:	movt	r1, #1
   15618:	bl	1204c <__isoc99_sscanf@plt>
   1561c:	mvn	r7, #0
   15620:	cmp	r0, #1
   15624:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15628:	vldr	d0, [sp, #8]
   1562c:	mov	r0, r6
   15630:	mov	r1, r5
   15634:	mov	r2, r4
   15638:	bl	14a20 <table_set_ldouble@@Base>
   1563c:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15640:	movw	r1, #22910	; 0x597e
   15644:	add	r2, sp, #8
   15648:	mov	r0, r7
   1564c:	movt	r1, #1
   15650:	bl	1204c <__isoc99_sscanf@plt>
   15654:	mvn	r7, #0
   15658:	cmp	r0, #1
   1565c:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15660:	ldrb	r3, [sp, #8]
   15664:	mov	r0, r6
   15668:	mov	r1, r5
   1566c:	mov	r2, r4
   15670:	bl	14b30 <table_set_char@@Base>
   15674:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   15678:	movw	r1, #22910	; 0x597e
   1567c:	add	r2, sp, #8
   15680:	mov	r0, r7
   15684:	movt	r1, #1
   15688:	bl	1204c <__isoc99_sscanf@plt>
   1568c:	mvn	r7, #0
   15690:	cmp	r0, #1
   15694:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15698:	ldrb	r3, [sp, #8]
   1569c:	mov	r0, r6
   156a0:	mov	r1, r5
   156a4:	mov	r2, r4
   156a8:	bl	14bb0 <table_set_uchar@@Base>
   156ac:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   156b0:	movw	r1, #22896	; 0x5970
   156b4:	add	r2, sp, #8
   156b8:	mov	r0, r7
   156bc:	movt	r1, #1
   156c0:	bl	1204c <__isoc99_sscanf@plt>
   156c4:	mvn	r7, #0
   156c8:	cmp	r0, #1
   156cc:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   156d0:	add	r3, sp, #8
   156d4:	mov	r0, r6
   156d8:	mov	r1, r5
   156dc:	mov	r2, r4
   156e0:	bl	14aa8 <table_set_string@@Base>
   156e4:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   156e8:	movw	r1, #22864	; 0x5950
   156ec:	add	r2, sp, #8
   156f0:	mov	r0, r7
   156f4:	movt	r1, #1
   156f8:	bl	1204c <__isoc99_sscanf@plt>
   156fc:	mvn	r7, #0
   15700:	cmp	r0, #1
   15704:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   15708:	ldr	r0, [sp, #8]
   1570c:	cmp	r0, #0
   15710:	beq	15770 <table_cell_from_buffer@@Base+0x60c>
   15714:	mov	r0, r6
   15718:	mov	r1, r5
   1571c:	mov	r2, r4
   15720:	mov	r3, #1
   15724:	bl	1406c <table_set_bool@@Base>
   15728:	b	15760 <table_cell_from_buffer@@Base+0x5fc>
   1572c:	movw	r1, #22913	; 0x5981
   15730:	add	r2, sp, #8
   15734:	mov	r0, r7
   15738:	movt	r1, #1
   1573c:	bl	1204c <__isoc99_sscanf@plt>
   15740:	mvn	r7, #0
   15744:	cmp	r0, #1
   15748:	bne	15764 <table_cell_from_buffer@@Base+0x600>
   1574c:	ldr	r3, [sp, #8]
   15750:	mov	r0, r6
   15754:	mov	r1, r5
   15758:	mov	r2, r4
   1575c:	bl	14c30 <table_set_ptr@@Base>
   15760:	mov	r7, #0
   15764:	mov	r0, r7
   15768:	sub	sp, fp, #24
   1576c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15770:	mov	r0, r6
   15774:	mov	r1, r5
   15778:	mov	r2, r4
   1577c:	mov	r3, #0
   15780:	mov	r7, #0
   15784:	bl	1406c <table_set_bool@@Base>
   15788:	mov	r0, r7
   1578c:	sub	sp, fp, #24
   15790:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015794 <table_cell_nullify@@Base>:
   15794:	push	{r4, r5, fp, lr}
   15798:	add	fp, sp, #8
   1579c:	mov	r4, r2
   157a0:	bl	13b28 <table_get_row_ptr@@Base>
   157a4:	ldr	r5, [r0]
   157a8:	ldr	r0, [r5, r4, lsl #2]
   157ac:	cmp	r0, #0
   157b0:	beq	157c0 <table_cell_nullify@@Base+0x2c>
   157b4:	bl	11fd4 <free@plt>
   157b8:	mov	r0, #0
   157bc:	str	r0, [r5, r4, lsl #2]
   157c0:	mov	r0, #0
   157c4:	pop	{r4, r5, fp, pc}

000157c8 <__libc_csu_init@@Base>:
   157c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   157cc:	mov	r7, r0
   157d0:	ldr	r6, [pc, #72]	; 15820 <__libc_csu_init@@Base+0x58>
   157d4:	ldr	r5, [pc, #72]	; 15824 <__libc_csu_init@@Base+0x5c>
   157d8:	add	r6, pc, r6
   157dc:	add	r5, pc, r5
   157e0:	sub	r6, r6, r5
   157e4:	mov	r8, r1
   157e8:	mov	r9, r2
   157ec:	bl	11f9c <strcmp@plt-0x20>
   157f0:	asrs	r6, r6, #2
   157f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   157f8:	mov	r4, #0
   157fc:	add	r4, r4, #1
   15800:	ldr	r3, [r5], #4
   15804:	mov	r2, r9
   15808:	mov	r1, r8
   1580c:	mov	r0, r7
   15810:	blx	r3
   15814:	cmp	r6, r4
   15818:	bne	157fc <__libc_csu_init@@Base+0x34>
   1581c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15820:	andeq	r0, r1, ip, lsr #14
   15824:	andeq	r0, r1, r4, lsr #14

00015828 <__libc_csu_fini@@Base>:
   15828:	bx	lr

Disassembly of section .fini:

0001582c <.fini>:
   1582c:	push	{r3, lr}
   15830:	pop	{r3, pc}
