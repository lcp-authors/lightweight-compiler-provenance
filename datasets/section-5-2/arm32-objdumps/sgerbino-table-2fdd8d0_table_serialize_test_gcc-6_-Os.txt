
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011b4c <.init>:
   11b4c:	push	{r3, lr}
   11b50:	bl	122d8 <_start@@Base+0x3c>
   11b54:	pop	{r3, pc}

Disassembly of section .plt:

00011b58 <raise@plt-0x14>:
   11b58:	push	{lr}		; (str lr, [sp, #-4]!)
   11b5c:	ldr	lr, [pc, #4]	; 11b68 <raise@plt-0x4>
   11b60:	add	lr, pc, lr
   11b64:	ldr	pc, [lr, #8]!
   11b68:	muleq	r1, r8, r4

00011b6c <raise@plt>:
   11b6c:	add	ip, pc, #0, 12
   11b70:	add	ip, ip, #20, 20	; 0x14000
   11b74:	ldr	pc, [ip, #1176]!	; 0x498

00011b78 <strcmp@plt>:
   11b78:	add	ip, pc, #0, 12
   11b7c:	add	ip, ip, #20, 20	; 0x14000
   11b80:	ldr	pc, [ip, #1168]!	; 0x490

00011b84 <printf@plt>:
   11b84:	add	ip, pc, #0, 12
   11b88:	add	ip, ip, #20, 20	; 0x14000
   11b8c:	ldr	pc, [ip, #1160]!	; 0x488

00011b90 <free@plt>:
   11b90:	add	ip, pc, #0, 12
   11b94:	add	ip, ip, #20, 20	; 0x14000
   11b98:	ldr	pc, [ip, #1152]!	; 0x480

00011b9c <time@plt>:
   11b9c:	add	ip, pc, #0, 12
   11ba0:	add	ip, ip, #20, 20	; 0x14000
   11ba4:	ldr	pc, [ip, #1144]!	; 0x478

00011ba8 <realloc@plt>:
   11ba8:	add	ip, pc, #0, 12
   11bac:	add	ip, ip, #20, 20	; 0x14000
   11bb0:	ldr	pc, [ip, #1136]!	; 0x470

00011bb4 <strcpy@plt>:
   11bb4:	add	ip, pc, #0, 12
   11bb8:	add	ip, ip, #20, 20	; 0x14000
   11bbc:	ldr	pc, [ip, #1128]!	; 0x468

00011bc0 <malloc@plt>:
   11bc0:	add	ip, pc, #0, 12
   11bc4:	add	ip, ip, #20, 20	; 0x14000
   11bc8:	ldr	pc, [ip, #1120]!	; 0x460

00011bcc <__libc_start_main@plt>:
   11bcc:	add	ip, pc, #0, 12
   11bd0:	add	ip, ip, #20, 20	; 0x14000
   11bd4:	ldr	pc, [ip, #1112]!	; 0x458

00011bd8 <__gmon_start__@plt>:
   11bd8:	add	ip, pc, #0, 12
   11bdc:	add	ip, ip, #20, 20	; 0x14000
   11be0:	ldr	pc, [ip, #1104]!	; 0x450

00011be4 <strlen@plt>:
   11be4:	add	ip, pc, #0, 12
   11be8:	add	ip, ip, #20, 20	; 0x14000
   11bec:	ldr	pc, [ip, #1096]!	; 0x448

00011bf0 <srand@plt>:
   11bf0:	add	ip, pc, #0, 12
   11bf4:	add	ip, ip, #20, 20	; 0x14000
   11bf8:	ldr	pc, [ip, #1088]!	; 0x440

00011bfc <snprintf@plt>:
   11bfc:	add	ip, pc, #0, 12
   11c00:	add	ip, ip, #20, 20	; 0x14000
   11c04:	ldr	pc, [ip, #1080]!	; 0x438

00011c08 <__isoc99_sscanf@plt>:
   11c08:	add	ip, pc, #0, 12
   11c0c:	add	ip, ip, #20, 20	; 0x14000
   11c10:	ldr	pc, [ip, #1072]!	; 0x430

00011c14 <strncpy@plt>:
   11c14:	add	ip, pc, #0, 12
   11c18:	add	ip, ip, #20, 20	; 0x14000
   11c1c:	ldr	pc, [ip, #1064]!	; 0x428

00011c20 <rand@plt>:
   11c20:	add	ip, pc, #0, 12
   11c24:	add	ip, ip, #20, 20	; 0x14000
   11c28:	ldr	pc, [ip, #1056]!	; 0x420

00011c2c <abort@plt>:
   11c2c:	add	ip, pc, #0, 12
   11c30:	add	ip, ip, #20, 20	; 0x14000
   11c34:	ldr	pc, [ip, #1048]!	; 0x418

Disassembly of section .text:

00011c38 <main@@Base>:
   11c38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c3c:	vpush	{d8}
   11c40:	ldr	r9, [pc, #1592]	; 12280 <main@@Base+0x648>
   11c44:	mov	r4, #0
   11c48:	mov	r8, #255	; 0xff
   11c4c:	sub	sp, sp, #99328	; 0x18400
   11c50:	sub	sp, sp, #748	; 0x2ec
   11c54:	add	r0, sp, #12
   11c58:	bl	11b9c <time@plt>
   11c5c:	bl	11bf0 <srand@plt>
   11c60:	bl	11c20 <rand@plt>
   11c64:	mov	r1, #100	; 0x64
   11c68:	bl	150ec <table_cell_nullify@@Base+0x458>
   11c6c:	add	r0, sp, #16
   11c70:	add	r5, r1, #100	; 0x64
   11c74:	bl	123c4 <table_init@@Base>
   11c78:	mov	r2, #0
   11c7c:	ldr	r1, [pc, #1536]	; 12284 <main@@Base+0x64c>
   11c80:	add	r0, sp, #16
   11c84:	bl	12d44 <table_add_column@@Base>
   11c88:	mov	r2, #21
   11c8c:	ldr	r1, [pc, #1524]	; 12288 <main@@Base+0x650>
   11c90:	mov	r7, r0
   11c94:	add	r0, sp, #16
   11c98:	bl	12d44 <table_add_column@@Base>
   11c9c:	add	r3, sp, #72	; 0x48
   11ca0:	str	r3, [sp, #4]
   11ca4:	mov	r6, r0
   11ca8:	mov	r3, r4
   11cac:	mov	r2, r9
   11cb0:	mov	r1, r8
   11cb4:	ldr	r0, [sp, #4]
   11cb8:	bl	11bfc <snprintf@plt>
   11cbc:	add	r0, sp, #16
   11cc0:	bl	135b8 <table_add_row@@Base>
   11cc4:	mov	r3, r4
   11cc8:	mov	r1, r4
   11ccc:	mov	r2, r7
   11cd0:	add	r0, sp, #16
   11cd4:	bl	13a74 <table_set_int@@Base>
   11cd8:	mov	r1, r4
   11cdc:	ldr	r3, [sp, #4]
   11ce0:	mov	r2, r6
   11ce4:	add	r0, sp, #16
   11ce8:	add	r4, r4, #1
   11cec:	bl	13cf4 <table_set_string@@Base>
   11cf0:	cmp	r5, r4
   11cf4:	bgt	11ca8 <main@@Base+0x70>
   11cf8:	ldr	r2, [pc, #1420]	; 1228c <main@@Base+0x654>
   11cfc:	ldr	r1, [sp, #4]
   11d00:	add	r0, sp, #16
   11d04:	bl	13d6c <table_serialize@@Base>
   11d08:	ldr	r1, [pc, #1404]	; 1228c <main@@Base+0x654>
   11d0c:	ldr	r0, [sp, #4]
   11d10:	bl	13ffc <table_deserialize@@Base>
   11d14:	mov	r6, r0
   11d18:	add	r0, sp, #16
   11d1c:	bl	135b0 <table_get_row_length@@Base>
   11d20:	mov	r4, r0
   11d24:	mov	r0, r6
   11d28:	bl	135b0 <table_get_row_length@@Base>
   11d2c:	cmp	r4, r0
   11d30:	mov	sl, r0
   11d34:	moveq	fp, #0
   11d38:	beq	11d50 <main@@Base+0x118>
   11d3c:	mov	r2, r0
   11d40:	mov	r1, r4
   11d44:	ldr	r0, [pc, #1348]	; 12290 <main@@Base+0x658>
   11d48:	bl	11b84 <printf@plt>
   11d4c:	mvn	fp, #0
   11d50:	add	r0, sp, #16
   11d54:	bl	12cd8 <table_get_column_length@@Base>
   11d58:	mov	r5, r0
   11d5c:	mov	r0, r6
   11d60:	bl	12cd8 <table_get_column_length@@Base>
   11d64:	cmp	r5, r0
   11d68:	mov	r7, r0
   11d6c:	beq	11d84 <main@@Base+0x14c>
   11d70:	mov	r2, r0
   11d74:	mov	r1, r5
   11d78:	ldr	r0, [pc, #1300]	; 12294 <main@@Base+0x65c>
   11d7c:	bl	11b84 <printf@plt>
   11d80:	mvn	fp, #0
   11d84:	cmp	r5, r7
   11d88:	cmpeq	r4, sl
   11d8c:	moveq	r5, #0
   11d90:	beq	11e04 <main@@Base+0x1cc>
   11d94:	add	r0, sp, #16
   11d98:	bl	12424 <table_destroy@@Base>
   11d9c:	mov	r0, r6
   11da0:	bl	124ec <table_delete@@Base>
   11da4:	mov	r0, fp
   11da8:	add	sp, sp, #99328	; 0x18400
   11dac:	add	sp, sp, #748	; 0x2ec
   11db0:	vpop	{d8}
   11db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11db8:	mov	r2, r4
   11dbc:	mov	r1, r5
   11dc0:	add	r0, sp, #16
   11dc4:	bl	13438 <table_get_bool@@Base>
   11dc8:	mov	r2, r4
   11dcc:	mov	r1, r5
   11dd0:	mov	r8, r0
   11dd4:	mov	r0, r6
   11dd8:	bl	13438 <table_get_bool@@Base>
   11ddc:	eor	r0, r0, r8
   11de0:	uxtb	r0, r0
   11de4:	cmp	r0, #0
   11de8:	beq	121fc <main@@Base+0x5c4>
   11dec:	mov	r2, r4
   11df0:	mov	r1, r5
   11df4:	ldr	r0, [pc, #1180]	; 12298 <main@@Base+0x660>
   11df8:	bl	11b84 <printf@plt>
   11dfc:	mvn	fp, #0
   11e00:	add	r5, r5, #1
   11e04:	cmp	r5, sl
   11e08:	bge	11d94 <main@@Base+0x15c>
   11e0c:	mov	r4, #0
   11e10:	b	12200 <main@@Base+0x5c8>
   11e14:	mov	r2, r4
   11e18:	mov	r1, r5
   11e1c:	add	r0, sp, #16
   11e20:	bl	13468 <table_get_int@@Base>
   11e24:	mov	r2, r4
   11e28:	mov	r1, r5
   11e2c:	mov	r8, r0
   11e30:	mov	r0, r6
   11e34:	bl	13468 <table_get_int@@Base>
   11e38:	subs	r0, r8, r0
   11e3c:	movne	r0, #1
   11e40:	b	11de4 <main@@Base+0x1ac>
   11e44:	mov	r2, r4
   11e48:	mov	r1, r5
   11e4c:	add	r0, sp, #16
   11e50:	bl	1347c <table_get_uint@@Base>
   11e54:	mov	r2, r4
   11e58:	mov	r1, r5
   11e5c:	mov	r8, r0
   11e60:	mov	r0, r6
   11e64:	bl	1347c <table_get_uint@@Base>
   11e68:	b	11e38 <main@@Base+0x200>
   11e6c:	mov	r2, r4
   11e70:	mov	r1, r5
   11e74:	add	r0, sp, #16
   11e78:	bl	13448 <table_get_int8@@Base>
   11e7c:	mov	r2, r4
   11e80:	mov	r1, r5
   11e84:	mov	r8, r0
   11e88:	mov	r0, r6
   11e8c:	bl	13448 <table_get_int8@@Base>
   11e90:	b	11e38 <main@@Base+0x200>
   11e94:	mov	r2, r4
   11e98:	mov	r1, r5
   11e9c:	add	r0, sp, #16
   11ea0:	bl	13534 <table_get_uint8@@Base>
   11ea4:	mov	r2, r4
   11ea8:	mov	r1, r5
   11eac:	mov	r8, r0
   11eb0:	mov	r0, r6
   11eb4:	bl	13534 <table_get_uint8@@Base>
   11eb8:	b	11e38 <main@@Base+0x200>
   11ebc:	mov	r2, r4
   11ec0:	mov	r1, r5
   11ec4:	add	r0, sp, #16
   11ec8:	bl	13490 <table_get_int16@@Base>
   11ecc:	mov	r2, r4
   11ed0:	mov	r1, r5
   11ed4:	mov	r8, r0
   11ed8:	mov	r0, r6
   11edc:	bl	13490 <table_get_int16@@Base>
   11ee0:	b	11e38 <main@@Base+0x200>
   11ee4:	mov	r2, r4
   11ee8:	mov	r1, r5
   11eec:	add	r0, sp, #16
   11ef0:	bl	134a4 <table_get_uint16@@Base>
   11ef4:	mov	r2, r4
   11ef8:	mov	r1, r5
   11efc:	mov	r8, r0
   11f00:	mov	r0, r6
   11f04:	bl	134a4 <table_get_uint16@@Base>
   11f08:	b	11e38 <main@@Base+0x200>
   11f0c:	mov	r2, r4
   11f10:	mov	r1, r5
   11f14:	add	r0, sp, #16
   11f18:	bl	13458 <table_get_int32@@Base>
   11f1c:	mov	r2, r4
   11f20:	mov	r1, r5
   11f24:	mov	r8, r0
   11f28:	mov	r0, r6
   11f2c:	bl	13458 <table_get_int32@@Base>
   11f30:	b	11e38 <main@@Base+0x200>
   11f34:	mov	r2, r4
   11f38:	mov	r1, r5
   11f3c:	add	r0, sp, #16
   11f40:	bl	1346c <table_get_uint32@@Base>
   11f44:	mov	r2, r4
   11f48:	mov	r1, r5
   11f4c:	mov	r8, r0
   11f50:	mov	r0, r6
   11f54:	bl	1346c <table_get_uint32@@Base>
   11f58:	b	11e38 <main@@Base+0x200>
   11f5c:	mov	r2, r4
   11f60:	mov	r1, r5
   11f64:	add	r0, sp, #16
   11f68:	bl	134d8 <table_get_int64@@Base>
   11f6c:	mov	r2, r4
   11f70:	mov	r8, r0
   11f74:	mov	r9, r1
   11f78:	mov	r0, r6
   11f7c:	mov	r1, r5
   11f80:	bl	134d8 <table_get_int64@@Base>
   11f84:	cmp	r9, r1
   11f88:	cmpeq	r8, r0
   11f8c:	movne	r0, #1
   11f90:	moveq	r0, #0
   11f94:	b	11de4 <main@@Base+0x1ac>
   11f98:	mov	r2, r4
   11f9c:	mov	r1, r5
   11fa0:	add	r0, sp, #16
   11fa4:	bl	134ec <table_get_uint64@@Base>
   11fa8:	mov	r2, r4
   11fac:	mov	r8, r0
   11fb0:	mov	r9, r1
   11fb4:	mov	r0, r6
   11fb8:	mov	r1, r5
   11fbc:	bl	134ec <table_get_uint64@@Base>
   11fc0:	b	11f84 <main@@Base+0x34c>
   11fc4:	mov	r2, r4
   11fc8:	mov	r1, r5
   11fcc:	add	r0, sp, #16
   11fd0:	bl	13480 <table_get_short@@Base>
   11fd4:	mov	r2, r4
   11fd8:	mov	r1, r5
   11fdc:	mov	r8, r0
   11fe0:	mov	r0, r6
   11fe4:	bl	13480 <table_get_short@@Base>
   11fe8:	b	11e38 <main@@Base+0x200>
   11fec:	mov	r2, r4
   11ff0:	mov	r1, r5
   11ff4:	add	r0, sp, #16
   11ff8:	bl	13494 <table_get_ushort@@Base>
   11ffc:	mov	r2, r4
   12000:	mov	r1, r5
   12004:	mov	r8, r0
   12008:	mov	r0, r6
   1200c:	bl	13494 <table_get_ushort@@Base>
   12010:	b	11e38 <main@@Base+0x200>
   12014:	mov	r2, r4
   12018:	mov	r1, r5
   1201c:	add	r0, sp, #16
   12020:	bl	134a8 <table_get_long@@Base>
   12024:	mov	r2, r4
   12028:	mov	r1, r5
   1202c:	mov	r8, r0
   12030:	mov	r0, r6
   12034:	bl	134a8 <table_get_long@@Base>
   12038:	b	11e38 <main@@Base+0x200>
   1203c:	mov	r2, r4
   12040:	mov	r1, r5
   12044:	add	r0, sp, #16
   12048:	bl	134b8 <table_get_ulong@@Base>
   1204c:	mov	r2, r4
   12050:	mov	r1, r5
   12054:	mov	r8, r0
   12058:	mov	r0, r6
   1205c:	bl	134b8 <table_get_ulong@@Base>
   12060:	b	11e38 <main@@Base+0x200>
   12064:	mov	r2, r4
   12068:	mov	r1, r5
   1206c:	add	r0, sp, #16
   12070:	bl	134c8 <table_get_llong@@Base>
   12074:	mov	r2, r4
   12078:	mov	r8, r0
   1207c:	mov	r9, r1
   12080:	mov	r0, r6
   12084:	mov	r1, r5
   12088:	bl	134c8 <table_get_llong@@Base>
   1208c:	b	11f84 <main@@Base+0x34c>
   12090:	mov	r2, r4
   12094:	mov	r1, r5
   12098:	add	r0, sp, #16
   1209c:	bl	134dc <table_get_ullong@@Base>
   120a0:	mov	r2, r4
   120a4:	mov	r8, r0
   120a8:	mov	r9, r1
   120ac:	mov	r0, r6
   120b0:	mov	r1, r5
   120b4:	bl	134dc <table_get_ullong@@Base>
   120b8:	b	11f84 <main@@Base+0x34c>
   120bc:	mov	r2, r4
   120c0:	mov	r1, r5
   120c4:	add	r0, sp, #16
   120c8:	bl	134f0 <table_get_float@@Base>
   120cc:	mov	r2, r4
   120d0:	mov	r1, r5
   120d4:	mov	r0, r6
   120d8:	vmov.f32	s16, s0
   120dc:	bl	134f0 <table_get_float@@Base>
   120e0:	vcmp.f32	s16, s0
   120e4:	vmrs	APSR_nzcv, fpscr
   120e8:	movne	r0, #1
   120ec:	moveq	r0, #0
   120f0:	b	11de4 <main@@Base+0x1ac>
   120f4:	mov	r2, r4
   120f8:	mov	r1, r5
   120fc:	add	r0, sp, #16
   12100:	bl	13500 <table_get_double@@Base>
   12104:	mov	r2, r4
   12108:	mov	r1, r5
   1210c:	mov	r0, r6
   12110:	vmov.f64	d8, d0
   12114:	bl	13500 <table_get_double@@Base>
   12118:	vcmp.f64	d8, d0
   1211c:	b	120e4 <main@@Base+0x4ac>
   12120:	mov	r2, r4
   12124:	mov	r1, r5
   12128:	add	r0, sp, #16
   1212c:	bl	13510 <table_get_ldouble@@Base>
   12130:	mov	r2, r4
   12134:	mov	r1, r5
   12138:	mov	r0, r6
   1213c:	vmov.f64	d8, d0
   12140:	bl	13510 <table_get_ldouble@@Base>
   12144:	b	12118 <main@@Base+0x4e0>
   12148:	mov	r2, r4
   1214c:	mov	r1, r5
   12150:	add	r0, sp, #16
   12154:	bl	13538 <table_get_string@@Base>
   12158:	mov	r2, r4
   1215c:	mov	r1, r5
   12160:	mov	r8, r0
   12164:	mov	r0, r6
   12168:	bl	13538 <table_get_string@@Base>
   1216c:	mov	r1, r0
   12170:	mov	r0, r8
   12174:	bl	11b78 <strcmp@plt>
   12178:	adds	r0, r0, #0
   1217c:	movne	r0, #1
   12180:	b	11de4 <main@@Base+0x1ac>
   12184:	mov	r2, r4
   12188:	mov	r1, r5
   1218c:	add	r0, sp, #16
   12190:	bl	13530 <table_get_char@@Base>
   12194:	mov	r2, r4
   12198:	mov	r1, r5
   1219c:	mov	r8, r0
   121a0:	mov	r0, r6
   121a4:	bl	13530 <table_get_char@@Base>
   121a8:	b	11e38 <main@@Base+0x200>
   121ac:	mov	r2, r4
   121b0:	mov	r1, r5
   121b4:	add	r0, sp, #16
   121b8:	bl	13520 <table_get_uchar@@Base>
   121bc:	mov	r2, r4
   121c0:	mov	r1, r5
   121c4:	mov	r8, r0
   121c8:	mov	r0, r6
   121cc:	bl	13520 <table_get_uchar@@Base>
   121d0:	b	11e38 <main@@Base+0x200>
   121d4:	mov	r2, r4
   121d8:	mov	r1, r5
   121dc:	add	r0, sp, #16
   121e0:	bl	1353c <table_get_ptr@@Base>
   121e4:	mov	r2, r4
   121e8:	mov	r1, r5
   121ec:	mov	r8, r0
   121f0:	mov	r0, r6
   121f4:	bl	1353c <table_get_ptr@@Base>
   121f8:	b	11e38 <main@@Base+0x200>
   121fc:	add	r4, r4, #1
   12200:	cmp	r4, r7
   12204:	bge	11e00 <main@@Base+0x1c8>
   12208:	mov	r1, r4
   1220c:	add	r0, sp, #16
   12210:	bl	12d30 <table_get_column_data_type@@Base>
   12214:	cmp	r0, #23
   12218:	ldrls	pc, [pc, r0, lsl #2]
   1221c:	b	121fc <main@@Base+0x5c4>
   12220:	andeq	r1, r1, r4, lsl lr
   12224:	andeq	r1, r1, r4, asr #28
   12228:	andeq	r1, r1, ip, ror #28
   1222c:	muleq	r1, r4, lr
   12230:			; <UNDEFINED> instruction: 0x00011ebc
   12234:	andeq	r1, r1, r4, ror #29
   12238:	andeq	r1, r1, ip, lsl #30
   1223c:	andeq	r1, r1, r4, lsr pc
   12240:	andeq	r1, r1, ip, asr pc
   12244:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   12248:	andeq	r1, r1, r4, asr #31
   1224c:	andeq	r1, r1, ip, ror #31
   12250:	andeq	r2, r1, r4, lsl r0
   12254:	andeq	r2, r1, ip, lsr r0
   12258:	andeq	r2, r1, r4, rrx
   1225c:	muleq	r1, r0, r0
   12260:	strheq	r2, [r1], -ip
   12264:	strdeq	r2, [r1], -r4
   12268:	andeq	r2, r1, r0, lsr #2
   1226c:	andeq	r2, r1, r4, lsl #3
   12270:	andeq	r2, r1, ip, lsr #3
   12274:	andeq	r2, r1, r8, asr #2
   12278:			; <UNDEFINED> instruction: 0x00011db8
   1227c:	ldrdeq	r2, [r1], -r4
   12280:	andeq	r5, r1, fp, lsl #4
   12284:	andeq	r5, r1, ip, lsl #3
   12288:	andeq	r5, r1, pc, lsl #3
   1228c:	andeq	r8, r1, r0, lsr #13
   12290:	muleq	r1, r5, r1
   12294:	ldrdeq	r5, [r1], -r0
   12298:	andeq	r5, r1, lr, lsl #4

0001229c <_start@@Base>:
   1229c:	mov	fp, #0
   122a0:	mov	lr, #0
   122a4:	pop	{r1}		; (ldr r1, [sp], #4)
   122a8:	mov	r2, sp
   122ac:	push	{r2}		; (str r2, [sp, #-4]!)
   122b0:	push	{r0}		; (str r0, [sp, #-4]!)
   122b4:	ldr	ip, [pc, #16]	; 122cc <_start@@Base+0x30>
   122b8:	push	{ip}		; (str ip, [sp, #-4]!)
   122bc:	ldr	r0, [pc, #12]	; 122d0 <_start@@Base+0x34>
   122c0:	ldr	r3, [pc, #12]	; 122d4 <_start@@Base+0x38>
   122c4:	bl	11bcc <__libc_start_main@plt>
   122c8:	bl	11c2c <abort@plt>
   122cc:	andeq	r5, r1, ip, ror r1
   122d0:	andeq	r1, r1, r8, lsr ip
   122d4:	andeq	r5, r1, ip, lsl r1
   122d8:	ldr	r3, [pc, #20]	; 122f4 <_start@@Base+0x58>
   122dc:	ldr	r2, [pc, #20]	; 122f8 <_start@@Base+0x5c>
   122e0:	add	r3, pc, r3
   122e4:	ldr	r2, [r3, r2]
   122e8:	cmp	r2, #0
   122ec:	bxeq	lr
   122f0:	b	11bd8 <__gmon_start__@plt>
   122f4:	andeq	r3, r1, r8, lsl sp
   122f8:	andeq	r0, r0, r0, asr r0
   122fc:	ldr	r3, [pc, #28]	; 12320 <_start@@Base+0x84>
   12300:	ldr	r0, [pc, #28]	; 12324 <_start@@Base+0x88>
   12304:	sub	r3, r3, r0
   12308:	cmp	r3, #6
   1230c:	bxls	lr
   12310:	ldr	r3, [pc, #16]	; 12328 <_start@@Base+0x8c>
   12314:	cmp	r3, #0
   12318:	bxeq	lr
   1231c:	bx	r3
   12320:	andeq	r6, r2, pc, asr r0
   12324:	andeq	r6, r2, ip, asr r0
   12328:	andeq	r0, r0, r0
   1232c:	ldr	r1, [pc, #36]	; 12358 <_start@@Base+0xbc>
   12330:	ldr	r0, [pc, #36]	; 1235c <_start@@Base+0xc0>
   12334:	sub	r1, r1, r0
   12338:	asr	r1, r1, #2
   1233c:	add	r1, r1, r1, lsr #31
   12340:	asrs	r1, r1, #1
   12344:	bxeq	lr
   12348:	ldr	r3, [pc, #16]	; 12360 <_start@@Base+0xc4>
   1234c:	cmp	r3, #0
   12350:	bxeq	lr
   12354:	bx	r3
   12358:	andeq	r6, r2, ip, asr r0
   1235c:	andeq	r6, r2, ip, asr r0
   12360:	andeq	r0, r0, r0
   12364:	push	{r4, lr}
   12368:	ldr	r4, [pc, #24]	; 12388 <_start@@Base+0xec>
   1236c:	ldrb	r3, [r4]
   12370:	cmp	r3, #0
   12374:	popne	{r4, pc}
   12378:	bl	122fc <_start@@Base+0x60>
   1237c:	mov	r3, #1
   12380:	strb	r3, [r4]
   12384:	pop	{r4, pc}
   12388:	andeq	r6, r2, ip, asr r0
   1238c:	ldr	r0, [pc, #40]	; 123bc <_start@@Base+0x120>
   12390:	ldr	r3, [r0]
   12394:	cmp	r3, #0
   12398:	bne	123a0 <_start@@Base+0x104>
   1239c:	b	1232c <_start@@Base+0x90>
   123a0:	ldr	r3, [pc, #24]	; 123c0 <_start@@Base+0x124>
   123a4:	cmp	r3, #0
   123a8:	beq	1239c <_start@@Base+0x100>
   123ac:	push	{r4, lr}
   123b0:	blx	r3
   123b4:	pop	{r4, lr}
   123b8:	b	1232c <_start@@Base+0x90>
   123bc:	andeq	r5, r2, r4, lsl pc
   123c0:	andeq	r0, r0, r0

000123c4 <table_init@@Base>:
   123c4:	mov	r3, #0
   123c8:	mov	r2, #10
   123cc:	mov	r1, #20
   123d0:	str	r3, [r0]
   123d4:	str	r3, [r0, #4]
   123d8:	str	r3, [r0, #12]
   123dc:	str	r2, [r0, #8]
   123e0:	str	r3, [r0, #16]
   123e4:	str	r3, [r0, #20]
   123e8:	str	r3, [r0, #28]
   123ec:	str	r1, [r0, #24]
   123f0:	str	r3, [r0, #36]	; 0x24
   123f4:	str	r3, [r0, #40]	; 0x28
   123f8:	str	r3, [r0, #44]	; 0x2c
   123fc:	str	r3, [r0, #32]
   12400:	str	r3, [r0, #52]	; 0x34
   12404:	str	r2, [r0, #48]	; 0x30
   12408:	bx	lr

0001240c <table_new@@Base>:
   1240c:	push	{r4, lr}
   12410:	mov	r0, #56	; 0x38
   12414:	bl	11bc0 <malloc@plt>
   12418:	mov	r4, r0
   1241c:	bl	123c4 <table_init@@Base>
   12420:	pop	{r4, pc}

00012424 <table_destroy@@Base>:
   12424:	push	{r4, r5, r6, lr}
   12428:	subs	r4, r0, #0
   1242c:	popeq	{r4, r5, r6, pc}
   12430:	mvn	r2, #0
   12434:	mov	r3, #64	; 0x40
   12438:	mov	r1, r2
   1243c:	bl	12c00 <table_notify@@Base>
   12440:	mov	r0, r4
   12444:	bl	135b0 <table_get_row_length@@Base>
   12448:	mov	r5, #0
   1244c:	mov	r6, r0
   12450:	cmp	r6, r5
   12454:	bgt	124c4 <table_destroy@@Base+0xa0>
   12458:	ldr	r0, [r4, #16]
   1245c:	cmp	r0, #0
   12460:	beq	12468 <table_destroy@@Base+0x44>
   12464:	bl	11b90 <free@plt>
   12468:	mov	r0, r4
   1246c:	bl	12cd8 <table_get_column_length@@Base>
   12470:	mov	r5, #0
   12474:	mov	r6, r0
   12478:	cmp	r6, r5
   1247c:	bgt	124d8 <table_destroy@@Base+0xb4>
   12480:	ldr	r0, [r4]
   12484:	cmp	r0, #0
   12488:	beq	12490 <table_destroy@@Base+0x6c>
   1248c:	bl	11b90 <free@plt>
   12490:	ldr	r0, [r4, #36]	; 0x24
   12494:	cmp	r0, #0
   12498:	beq	124a0 <table_destroy@@Base+0x7c>
   1249c:	bl	11b90 <free@plt>
   124a0:	ldr	r0, [r4, #40]	; 0x28
   124a4:	cmp	r0, #0
   124a8:	beq	124b0 <table_destroy@@Base+0x8c>
   124ac:	bl	11b90 <free@plt>
   124b0:	ldr	r0, [r4, #44]	; 0x2c
   124b4:	cmp	r0, #0
   124b8:	popeq	{r4, r5, r6, pc}
   124bc:	pop	{r4, r5, r6, lr}
   124c0:	b	11b90 <free@plt>
   124c4:	mov	r1, r5
   124c8:	mov	r0, r4
   124cc:	bl	13560 <table_row_destroy@@Base>
   124d0:	add	r5, r5, #1
   124d4:	b	12450 <table_destroy@@Base+0x2c>
   124d8:	mov	r1, r5
   124dc:	mov	r0, r4
   124e0:	bl	12cbc <table_column_destroy@@Base>
   124e4:	add	r5, r5, #1
   124e8:	b	12478 <table_destroy@@Base+0x54>

000124ec <table_delete@@Base>:
   124ec:	push	{r4, lr}
   124f0:	mov	r4, r0
   124f4:	bl	12424 <table_destroy@@Base>
   124f8:	mov	r0, r4
   124fc:	pop	{r4, lr}
   12500:	b	11b90 <free@plt>

00012504 <table_dupe@@Base>:
   12504:	push	{r4, r5, r6, r7, r8, r9, lr}
   12508:	sub	sp, sp, #20
   1250c:	mov	r6, r0
   12510:	bl	135b0 <table_get_row_length@@Base>
   12514:	mov	r4, #0
   12518:	mov	r9, r0
   1251c:	mov	r0, r6
   12520:	bl	12cd8 <table_get_column_length@@Base>
   12524:	mov	r8, r0
   12528:	bl	1240c <table_new@@Base>
   1252c:	mov	r7, r0
   12530:	cmp	r4, r8
   12534:	blt	12550 <table_dupe@@Base+0x4c>
   12538:	mov	r5, #0
   1253c:	cmp	r5, r9
   12540:	mov	r0, r7
   12544:	blt	12584 <table_dupe@@Base+0x80>
   12548:	add	sp, sp, #20
   1254c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12550:	mov	r1, r4
   12554:	mov	r0, r6
   12558:	bl	12fac <table_get_column_name@@Base>
   1255c:	mov	r1, r4
   12560:	add	r4, r4, #1
   12564:	mov	r5, r0
   12568:	mov	r0, r6
   1256c:	bl	12d30 <table_get_column_data_type@@Base>
   12570:	mov	r1, r5
   12574:	mov	r2, r0
   12578:	mov	r0, r7
   1257c:	bl	12d44 <table_add_column@@Base>
   12580:	b	12530 <table_dupe@@Base+0x2c>
   12584:	bl	135b8 <table_add_row@@Base>
   12588:	mov	r4, #0
   1258c:	cmp	r4, r8
   12590:	addge	r5, r5, #1
   12594:	bge	1253c <table_dupe@@Base+0x38>
   12598:	mov	r1, r4
   1259c:	mov	r0, r6
   125a0:	bl	12d30 <table_get_column_data_type@@Base>
   125a4:	cmp	r0, #23
   125a8:	ldrls	pc, [pc, r0, lsl #2]
   125ac:	b	12634 <table_dupe@@Base+0x130>
   125b0:	andeq	r2, r1, r0, lsl r6
   125b4:	andeq	r2, r1, ip, lsr r6
   125b8:	andeq	r2, r1, r4, ror #12
   125bc:	andeq	r2, r1, ip, lsl #13
   125c0:			; <UNDEFINED> instruction: 0x000126b4
   125c4:	ldrdeq	r2, [r1], -ip
   125c8:	andeq	r2, r1, r4, lsl #14
   125cc:	andeq	r2, r1, ip, lsr #14
   125d0:	andeq	r2, r1, r4, asr r7
   125d4:	andeq	r2, r1, ip, ror r7
   125d8:	andeq	r2, r1, r4, lsr #15
   125dc:	andeq	r2, r1, ip, asr #15
   125e0:	strdeq	r2, [r1], -r4
   125e4:	andeq	r2, r1, ip, lsl r8
   125e8:	andeq	r2, r1, r4, asr #16
   125ec:	andeq	r2, r1, ip, ror #16
   125f0:			; <UNDEFINED> instruction: 0x000128bc
   125f4:	andeq	r2, r1, r0, ror #17
   125f8:	andeq	r2, r1, r4, lsl #18
   125fc:	andeq	r2, r1, r0, asr r9
   12600:	andeq	r2, r1, r8, ror r9
   12604:	muleq	r1, r4, r8
   12608:	andeq	r2, r1, r8, lsr #18
   1260c:	andeq	r2, r1, r0, lsr #19
   12610:	mov	r2, r4
   12614:	mov	r1, r5
   12618:	mov	r0, r6
   1261c:	bl	13468 <table_get_int@@Base>
   12620:	mov	r2, r4
   12624:	mov	r1, r5
   12628:	mov	r3, r0
   1262c:	mov	r0, r7
   12630:	bl	13a74 <table_set_int@@Base>
   12634:	add	r4, r4, #1
   12638:	b	1258c <table_dupe@@Base+0x88>
   1263c:	mov	r2, r4
   12640:	mov	r1, r5
   12644:	mov	r0, r6
   12648:	bl	1347c <table_get_uint@@Base>
   1264c:	mov	r2, r4
   12650:	mov	r1, r5
   12654:	mov	r3, r0
   12658:	mov	r0, r7
   1265c:	bl	13a98 <table_set_uint@@Base>
   12660:	b	12634 <table_dupe@@Base+0x130>
   12664:	mov	r2, r4
   12668:	mov	r1, r5
   1266c:	mov	r0, r6
   12670:	bl	13448 <table_get_int8@@Base>
   12674:	mov	r2, r4
   12678:	mov	r1, r5
   1267c:	mov	r3, r0
   12680:	mov	r0, r7
   12684:	bl	13abc <table_set_int8@@Base>
   12688:	b	12634 <table_dupe@@Base+0x130>
   1268c:	mov	r2, r4
   12690:	mov	r1, r5
   12694:	mov	r0, r6
   12698:	bl	13534 <table_get_uint8@@Base>
   1269c:	mov	r2, r4
   126a0:	mov	r1, r5
   126a4:	mov	r3, r0
   126a8:	mov	r0, r7
   126ac:	bl	13ae0 <table_set_uint8@@Base>
   126b0:	b	12634 <table_dupe@@Base+0x130>
   126b4:	mov	r2, r4
   126b8:	mov	r1, r5
   126bc:	mov	r0, r6
   126c0:	bl	13490 <table_get_int16@@Base>
   126c4:	mov	r2, r4
   126c8:	mov	r1, r5
   126cc:	mov	r3, r0
   126d0:	mov	r0, r7
   126d4:	bl	13b04 <table_set_int16@@Base>
   126d8:	b	12634 <table_dupe@@Base+0x130>
   126dc:	mov	r2, r4
   126e0:	mov	r1, r5
   126e4:	mov	r0, r6
   126e8:	bl	134a4 <table_get_uint16@@Base>
   126ec:	mov	r2, r4
   126f0:	mov	r1, r5
   126f4:	mov	r3, r0
   126f8:	mov	r0, r7
   126fc:	bl	13b28 <table_set_uint16@@Base>
   12700:	b	12634 <table_dupe@@Base+0x130>
   12704:	mov	r2, r4
   12708:	mov	r1, r5
   1270c:	mov	r0, r6
   12710:	bl	13458 <table_get_int32@@Base>
   12714:	mov	r2, r4
   12718:	mov	r1, r5
   1271c:	mov	r3, r0
   12720:	mov	r0, r7
   12724:	bl	13b4c <table_set_int32@@Base>
   12728:	b	12634 <table_dupe@@Base+0x130>
   1272c:	mov	r2, r4
   12730:	mov	r1, r5
   12734:	mov	r0, r6
   12738:	bl	1346c <table_get_uint32@@Base>
   1273c:	mov	r2, r4
   12740:	mov	r1, r5
   12744:	mov	r3, r0
   12748:	mov	r0, r7
   1274c:	bl	13b70 <table_set_uint32@@Base>
   12750:	b	12634 <table_dupe@@Base+0x130>
   12754:	mov	r2, r4
   12758:	mov	r1, r5
   1275c:	mov	r0, r6
   12760:	bl	134d8 <table_get_int64@@Base>
   12764:	mov	r2, r4
   12768:	strd	r0, [sp]
   1276c:	mov	r1, r5
   12770:	mov	r0, r7
   12774:	bl	13b94 <table_set_int64@@Base>
   12778:	b	12634 <table_dupe@@Base+0x130>
   1277c:	mov	r2, r4
   12780:	mov	r1, r5
   12784:	mov	r0, r6
   12788:	bl	134ec <table_get_uint64@@Base>
   1278c:	mov	r2, r4
   12790:	strd	r0, [sp]
   12794:	mov	r1, r5
   12798:	mov	r0, r7
   1279c:	bl	13bb0 <table_set_uint64@@Base>
   127a0:	b	12634 <table_dupe@@Base+0x130>
   127a4:	mov	r2, r4
   127a8:	mov	r1, r5
   127ac:	mov	r0, r6
   127b0:	bl	13480 <table_get_short@@Base>
   127b4:	mov	r2, r4
   127b8:	mov	r1, r5
   127bc:	mov	r3, r0
   127c0:	mov	r0, r7
   127c4:	bl	13bcc <table_set_short@@Base>
   127c8:	b	12634 <table_dupe@@Base+0x130>
   127cc:	mov	r2, r4
   127d0:	mov	r1, r5
   127d4:	mov	r0, r6
   127d8:	bl	13494 <table_get_ushort@@Base>
   127dc:	mov	r2, r4
   127e0:	mov	r1, r5
   127e4:	mov	r3, r0
   127e8:	mov	r0, r7
   127ec:	bl	13bf0 <table_set_ushort@@Base>
   127f0:	b	12634 <table_dupe@@Base+0x130>
   127f4:	mov	r2, r4
   127f8:	mov	r1, r5
   127fc:	mov	r0, r6
   12800:	bl	134a8 <table_get_long@@Base>
   12804:	mov	r2, r4
   12808:	mov	r1, r5
   1280c:	mov	r3, r0
   12810:	mov	r0, r7
   12814:	bl	13c14 <table_set_long@@Base>
   12818:	b	12634 <table_dupe@@Base+0x130>
   1281c:	mov	r2, r4
   12820:	mov	r1, r5
   12824:	mov	r0, r6
   12828:	bl	134b8 <table_get_ulong@@Base>
   1282c:	mov	r2, r4
   12830:	mov	r1, r5
   12834:	mov	r3, r0
   12838:	mov	r0, r7
   1283c:	bl	13c38 <table_set_ulong@@Base>
   12840:	b	12634 <table_dupe@@Base+0x130>
   12844:	mov	r2, r4
   12848:	mov	r1, r5
   1284c:	mov	r0, r6
   12850:	bl	134c8 <table_get_llong@@Base>
   12854:	mov	r2, r4
   12858:	strd	r0, [sp]
   1285c:	mov	r1, r5
   12860:	mov	r0, r7
   12864:	bl	13c5c <table_set_llong@@Base>
   12868:	b	12634 <table_dupe@@Base+0x130>
   1286c:	mov	r2, r4
   12870:	mov	r1, r5
   12874:	mov	r0, r6
   12878:	bl	134dc <table_get_ullong@@Base>
   1287c:	mov	r2, r4
   12880:	strd	r0, [sp]
   12884:	mov	r1, r5
   12888:	mov	r0, r7
   1288c:	bl	13c78 <table_set_ullong@@Base>
   12890:	b	12634 <table_dupe@@Base+0x130>
   12894:	mov	r2, r4
   12898:	mov	r1, r5
   1289c:	mov	r0, r6
   128a0:	bl	13538 <table_get_string@@Base>
   128a4:	mov	r2, r4
   128a8:	mov	r1, r5
   128ac:	mov	r3, r0
   128b0:	mov	r0, r7
   128b4:	bl	13cf4 <table_set_string@@Base>
   128b8:	b	12634 <table_dupe@@Base+0x130>
   128bc:	mov	r2, r4
   128c0:	mov	r1, r5
   128c4:	mov	r0, r6
   128c8:	bl	134f0 <table_get_float@@Base>
   128cc:	mov	r2, r4
   128d0:	mov	r1, r5
   128d4:	mov	r0, r7
   128d8:	bl	13c94 <table_set_float@@Base>
   128dc:	b	12634 <table_dupe@@Base+0x130>
   128e0:	mov	r2, r4
   128e4:	mov	r1, r5
   128e8:	mov	r0, r6
   128ec:	bl	13500 <table_get_double@@Base>
   128f0:	mov	r2, r4
   128f4:	mov	r1, r5
   128f8:	mov	r0, r7
   128fc:	bl	13cb4 <table_set_double@@Base>
   12900:	b	12634 <table_dupe@@Base+0x130>
   12904:	mov	r2, r4
   12908:	mov	r1, r5
   1290c:	mov	r0, r6
   12910:	bl	13510 <table_get_ldouble@@Base>
   12914:	mov	r2, r4
   12918:	mov	r1, r5
   1291c:	mov	r0, r7
   12920:	bl	13cd4 <table_set_ldouble@@Base>
   12924:	b	12634 <table_dupe@@Base+0x130>
   12928:	mov	r2, r4
   1292c:	mov	r1, r5
   12930:	mov	r0, r6
   12934:	bl	13438 <table_get_bool@@Base>
   12938:	mov	r2, r4
   1293c:	mov	r1, r5
   12940:	mov	r3, r0
   12944:	mov	r0, r7
   12948:	bl	13a50 <table_set_bool@@Base>
   1294c:	b	12634 <table_dupe@@Base+0x130>
   12950:	mov	r2, r4
   12954:	mov	r1, r5
   12958:	mov	r0, r6
   1295c:	bl	13530 <table_get_char@@Base>
   12960:	mov	r2, r4
   12964:	mov	r1, r5
   12968:	mov	r3, r0
   1296c:	mov	r0, r7
   12970:	bl	13d0c <table_set_char@@Base>
   12974:	b	12634 <table_dupe@@Base+0x130>
   12978:	mov	r2, r4
   1297c:	mov	r1, r5
   12980:	mov	r0, r6
   12984:	bl	13520 <table_get_uchar@@Base>
   12988:	mov	r2, r4
   1298c:	mov	r1, r5
   12990:	mov	r3, r0
   12994:	mov	r0, r7
   12998:	bl	13d30 <table_set_uchar@@Base>
   1299c:	b	12634 <table_dupe@@Base+0x130>
   129a0:	mov	r2, r4
   129a4:	mov	r1, r5
   129a8:	mov	r0, r6
   129ac:	bl	1353c <table_get_ptr@@Base>
   129b0:	add	r3, sp, #12
   129b4:	mov	r2, r4
   129b8:	mov	r1, r5
   129bc:	str	r0, [sp, #12]
   129c0:	mov	r0, r7
   129c4:	bl	13d54 <table_set_ptr@@Base>
   129c8:	b	12634 <table_dupe@@Base+0x130>

000129cc <table_get_major_version@@Base>:
   129cc:	mov	r0, #0
   129d0:	bx	lr

000129d4 <table_get_minor_version@@Base>:
   129d4:	mov	r0, #0
   129d8:	bx	lr

000129dc <table_get_patch_version@@Base>:
   129dc:	mov	r0, #0
   129e0:	bx	lr

000129e4 <table_get_version@@Base>:
   129e4:	ldr	r0, [pc]	; 129ec <table_get_version@@Base+0x8>
   129e8:	bx	lr
   129ec:	andeq	r5, r1, r1, asr #4

000129f0 <table_get_callback_length@@Base>:
   129f0:	ldr	r0, [r0, #32]
   129f4:	bx	lr

000129f8 <table_register_callback@@Base>:
   129f8:	push	{r4, r5, r6, r7, r8, lr}
   129fc:	mov	r4, r0
   12a00:	ldr	r0, [r0, #32]
   12a04:	mov	ip, #0
   12a08:	cmp	ip, r0
   12a0c:	blt	12aa0 <table_register_callback@@Base+0xa8>
   12a10:	ldr	r5, [r4, #48]	; 0x30
   12a14:	mov	r8, r1
   12a18:	mov	r1, r5
   12a1c:	mov	r6, r3
   12a20:	mov	r7, r2
   12a24:	bl	14eac <table_cell_nullify@@Base+0x218>
   12a28:	cmp	r1, #0
   12a2c:	bne	12a74 <table_register_callback@@Base+0x7c>
   12a30:	ldr	r1, [r4, #52]	; 0x34
   12a34:	ldr	r0, [r4, #36]	; 0x24
   12a38:	add	r1, r5, r1
   12a3c:	str	r1, [r4, #52]	; 0x34
   12a40:	lsl	r1, r1, #2
   12a44:	bl	11ba8 <realloc@plt>
   12a48:	ldr	r1, [r4, #52]	; 0x34
   12a4c:	lsl	r1, r1, #2
   12a50:	str	r0, [r4, #36]	; 0x24
   12a54:	ldr	r0, [r4, #40]	; 0x28
   12a58:	bl	11ba8 <realloc@plt>
   12a5c:	ldr	r1, [r4, #52]	; 0x34
   12a60:	lsl	r1, r1, #2
   12a64:	str	r0, [r4, #40]	; 0x28
   12a68:	ldr	r0, [r4, #44]	; 0x2c
   12a6c:	bl	11ba8 <realloc@plt>
   12a70:	str	r0, [r4, #44]	; 0x2c
   12a74:	ldr	r3, [r4, #32]
   12a78:	ldr	r2, [r4, #36]	; 0x24
   12a7c:	str	r8, [r2, r3, lsl #2]
   12a80:	ldr	r2, [r4, #40]	; 0x28
   12a84:	str	r7, [r2, r3, lsl #2]
   12a88:	ldr	r2, [r4, #44]	; 0x2c
   12a8c:	str	r6, [r2, r3, lsl #2]
   12a90:	ldr	r3, [r4, #32]
   12a94:	add	r3, r3, #1
   12a98:	str	r3, [r4, #32]
   12a9c:	pop	{r4, r5, r6, r7, r8, pc}
   12aa0:	ldr	r5, [r4, #36]	; 0x24
   12aa4:	lsl	lr, ip, #2
   12aa8:	ldr	r5, [r5, ip, lsl #2]
   12aac:	cmp	r1, r5
   12ab0:	bne	12ac4 <table_register_callback@@Base+0xcc>
   12ab4:	ldr	r5, [r4, #40]	; 0x28
   12ab8:	ldr	r5, [r5, ip, lsl #2]
   12abc:	cmp	r2, r5
   12ac0:	beq	12acc <table_register_callback@@Base+0xd4>
   12ac4:	add	ip, ip, #1
   12ac8:	b	12a08 <table_register_callback@@Base+0x10>
   12acc:	cmp	ip, #0
   12ad0:	ble	12a10 <table_register_callback@@Base+0x18>
   12ad4:	ldr	r1, [r4, #44]	; 0x2c
   12ad8:	ldr	r2, [r1, lr]
   12adc:	orr	r3, r2, r3
   12ae0:	str	r3, [r1, lr]
   12ae4:	pop	{r4, r5, r6, r7, r8, pc}

00012ae8 <table_unregister_callback@@Base>:
   12ae8:	push	{r4, r5, r6, lr}
   12aec:	mov	r4, r0
   12af0:	ldr	r0, [r0, #32]
   12af4:	mov	r3, #0
   12af8:	cmp	r3, r0
   12afc:	blt	12b04 <table_unregister_callback@@Base+0x1c>
   12b00:	pop	{r4, r5, r6, pc}
   12b04:	ldr	lr, [r4, #36]	; 0x24
   12b08:	lsl	ip, r3, #2
   12b0c:	ldr	lr, [lr, r3, lsl #2]
   12b10:	cmp	r1, lr
   12b14:	bne	12b28 <table_unregister_callback@@Base+0x40>
   12b18:	ldr	lr, [r4, #40]	; 0x28
   12b1c:	ldr	lr, [lr, r3, lsl #2]
   12b20:	cmp	r2, lr
   12b24:	beq	12b5c <table_unregister_callback@@Base+0x74>
   12b28:	add	r3, r3, #1
   12b2c:	b	12af8 <table_unregister_callback@@Base+0x10>
   12b30:	ldr	r1, [r4, #36]	; 0x24
   12b34:	add	r3, r3, #1
   12b38:	ldr	r0, [r1, r2]
   12b3c:	str	r0, [r1, ip]
   12b40:	ldr	r1, [r4, #40]	; 0x28
   12b44:	ldr	r0, [r1, r2]
   12b48:	str	r0, [r1, ip]
   12b4c:	ldr	r1, [r4, #44]	; 0x2c
   12b50:	ldr	r0, [r1, r2]
   12b54:	str	r0, [r1, ip]
   12b58:	mov	ip, r2
   12b5c:	ldr	r0, [r4, #32]
   12b60:	add	r2, ip, #4
   12b64:	sub	r0, r0, #1
   12b68:	cmp	r3, r0
   12b6c:	blt	12b30 <table_unregister_callback@@Base+0x48>
   12b70:	ldr	r6, [r4, #48]	; 0x30
   12b74:	str	r0, [r4, #32]
   12b78:	mov	r1, r6
   12b7c:	bl	14eac <table_cell_nullify@@Base+0x218>
   12b80:	cmp	r1, #0
   12b84:	popne	{r4, r5, r6, pc}
   12b88:	ldr	r5, [r4, #52]	; 0x34
   12b8c:	sub	r5, r5, r6
   12b90:	cmp	r5, #0
   12b94:	str	r5, [r4, #52]	; 0x34
   12b98:	beq	12bd8 <table_unregister_callback@@Base+0xf0>
   12b9c:	lsl	r1, r5, #2
   12ba0:	ldr	r0, [r4, #36]	; 0x24
   12ba4:	bl	11ba8 <realloc@plt>
   12ba8:	ldr	r1, [r4, #52]	; 0x34
   12bac:	lsl	r1, r1, #2
   12bb0:	str	r0, [r4, #36]	; 0x24
   12bb4:	ldr	r0, [r4, #40]	; 0x28
   12bb8:	bl	11ba8 <realloc@plt>
   12bbc:	ldr	r1, [r4, #52]	; 0x34
   12bc0:	lsl	r1, r1, #2
   12bc4:	str	r0, [r4, #40]	; 0x28
   12bc8:	ldr	r0, [r4, #44]	; 0x2c
   12bcc:	bl	11ba8 <realloc@plt>
   12bd0:	str	r0, [r4, #44]	; 0x2c
   12bd4:	pop	{r4, r5, r6, pc}
   12bd8:	ldr	r0, [r4, #36]	; 0x24
   12bdc:	bl	11b90 <free@plt>
   12be0:	ldr	r0, [r4, #40]	; 0x28
   12be4:	bl	11b90 <free@plt>
   12be8:	ldr	r0, [r4, #44]	; 0x2c
   12bec:	bl	11b90 <free@plt>
   12bf0:	str	r5, [r4, #36]	; 0x24
   12bf4:	str	r5, [r4, #40]	; 0x28
   12bf8:	str	r5, [r4, #44]	; 0x2c
   12bfc:	pop	{r4, r5, r6, pc}

00012c00 <table_notify@@Base>:
   12c00:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12c04:	mov	r5, r0
   12c08:	mov	r7, r1
   12c0c:	mov	r8, r2
   12c10:	mov	r6, r3
   12c14:	mov	r4, #0
   12c18:	ldr	r3, [r5, #32]
   12c1c:	cmp	r4, r3
   12c20:	blt	12c2c <table_notify@@Base+0x2c>
   12c24:	add	sp, sp, #12
   12c28:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12c2c:	ldr	r3, [r5, #44]	; 0x2c
   12c30:	ldr	r3, [r3, r4, lsl #2]
   12c34:	tst	r6, r3
   12c38:	beq	12c64 <table_notify@@Base+0x64>
   12c3c:	ldr	r2, [r5, #40]	; 0x28
   12c40:	ldr	r3, [r5, #36]	; 0x24
   12c44:	mov	r1, r7
   12c48:	ldr	r2, [r2, r4, lsl #2]
   12c4c:	mov	r0, r5
   12c50:	str	r2, [sp]
   12c54:	mov	r2, r8
   12c58:	ldr	r9, [r3, r4, lsl #2]
   12c5c:	mov	r3, r6
   12c60:	blx	r9
   12c64:	add	r4, r4, #1
   12c68:	b	12c18 <table_notify@@Base+0x18>

00012c6c <table_column_init@@Base>:
   12c6c:	push	{r4, r5, r6, r7, r8, lr}
   12c70:	mov	r4, #12
   12c74:	ldr	r7, [r0]
   12c78:	mov	r0, r2
   12c7c:	mul	r4, r4, r1
   12c80:	mov	r6, r2
   12c84:	mov	r8, r3
   12c88:	bl	11be4 <strlen@plt>
   12c8c:	add	r5, r7, r4
   12c90:	add	r0, r0, #1
   12c94:	bl	11bc0 <malloc@plt>
   12c98:	cmp	r0, #0
   12c9c:	str	r0, [r7, r4]
   12ca0:	beq	12cac <table_column_init@@Base+0x40>
   12ca4:	mov	r1, r6
   12ca8:	bl	11bb4 <strcpy@plt>
   12cac:	ldr	r3, [sp, #24]
   12cb0:	str	r8, [r5, #4]
   12cb4:	str	r3, [r5, #8]
   12cb8:	pop	{r4, r5, r6, r7, r8, pc}

00012cbc <table_column_destroy@@Base>:
   12cbc:	mov	r3, #12
   12cc0:	ldr	r2, [r0]
   12cc4:	mul	r1, r3, r1
   12cc8:	ldr	r0, [r2, r1]
   12ccc:	cmp	r0, #0
   12cd0:	bxeq	lr
   12cd4:	b	11b90 <free@plt>

00012cd8 <table_get_column_length@@Base>:
   12cd8:	ldr	r0, [r0, #4]
   12cdc:	bx	lr

00012ce0 <table_get_column@@Base>:
   12ce0:	push	{r4, r5, r6, r7, r8, lr}
   12ce4:	mov	r5, r0
   12ce8:	ldr	r6, [r0, #4]
   12cec:	mov	r7, r1
   12cf0:	mov	r4, #0
   12cf4:	mov	r8, #12
   12cf8:	cmp	r4, r6
   12cfc:	blt	12d0c <table_get_column@@Base+0x2c>
   12d00:	mvneq	r4, #0
   12d04:	mov	r0, r4
   12d08:	pop	{r4, r5, r6, r7, r8, pc}
   12d0c:	mul	r3, r8, r4
   12d10:	ldr	r2, [r5]
   12d14:	mov	r1, r7
   12d18:	ldr	r0, [r2, r3]
   12d1c:	bl	11b78 <strcmp@plt>
   12d20:	cmp	r0, #0
   12d24:	beq	12d04 <table_get_column@@Base+0x24>
   12d28:	add	r4, r4, #1
   12d2c:	b	12cf8 <table_get_column@@Base+0x18>

00012d30 <table_get_column_data_type@@Base>:
   12d30:	ldr	r2, [r0]
   12d34:	mov	r3, #12
   12d38:	mla	r1, r3, r1, r2
   12d3c:	ldr	r0, [r1, #4]
   12d40:	bx	lr

00012d44 <table_add_column@@Base>:
   12d44:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   12d48:	mov	r4, r0
   12d4c:	ldr	r6, [r0, #8]
   12d50:	mov	r8, r1
   12d54:	ldr	r0, [r0, #4]
   12d58:	mov	r1, r6
   12d5c:	mov	r7, r2
   12d60:	bl	14eac <table_cell_nullify@@Base+0x218>
   12d64:	subs	r5, r1, #0
   12d68:	beq	12dd0 <table_add_column@@Base+0x8c>
   12d6c:	mov	r0, r4
   12d70:	bl	135b0 <table_get_row_length@@Base>
   12d74:	ldr	r6, [r4, #4]
   12d78:	mov	r5, #0
   12d7c:	mov	r9, r0
   12d80:	mov	r0, r7
   12d84:	bl	13410 <table_get_default_compare_function_for_data_type@@Base>
   12d88:	mov	r3, r7
   12d8c:	mov	r2, r8
   12d90:	mov	r1, r6
   12d94:	str	r0, [sp]
   12d98:	mov	r0, r4
   12d9c:	bl	12c6c <table_column_init@@Base>
   12da0:	cmp	r9, r5
   12da4:	bgt	12e30 <table_add_column@@Base+0xec>
   12da8:	mov	r0, r4
   12dac:	mov	r3, #8
   12db0:	ldr	r2, [r4, #4]
   12db4:	mvn	r1, #0
   12db8:	bl	12c00 <table_notify@@Base>
   12dbc:	ldr	r0, [r4, #4]
   12dc0:	add	r3, r0, #1
   12dc4:	str	r3, [r4, #4]
   12dc8:	add	sp, sp, #12
   12dcc:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12dd0:	ldr	r1, [r4, #12]
   12dd4:	ldr	r0, [r4]
   12dd8:	add	r6, r6, r1
   12ddc:	mov	r1, #12
   12de0:	str	r6, [r4, #12]
   12de4:	mul	r1, r1, r6
   12de8:	bl	11ba8 <realloc@plt>
   12dec:	str	r0, [r4]
   12df0:	mov	r0, r4
   12df4:	bl	135b0 <table_get_row_length@@Base>
   12df8:	mov	r9, r0
   12dfc:	cmp	r9, r5
   12e00:	ble	12d6c <table_add_column@@Base+0x28>
   12e04:	mov	r1, r5
   12e08:	mov	r0, r4
   12e0c:	bl	13754 <table_get_row_ptr@@Base>
   12e10:	ldr	r1, [r4, #12]
   12e14:	add	r5, r5, #1
   12e18:	lsl	r1, r1, #2
   12e1c:	mov	r6, r0
   12e20:	ldr	r0, [r0]
   12e24:	bl	11ba8 <realloc@plt>
   12e28:	str	r0, [r6]
   12e2c:	b	12dfc <table_add_column@@Base+0xb8>
   12e30:	mov	r1, r5
   12e34:	mov	r2, r6
   12e38:	mov	r0, r4
   12e3c:	bl	14c3c <table_cell_init@@Base>
   12e40:	add	r5, r5, #1
   12e44:	b	12da0 <table_add_column@@Base+0x5c>

00012e48 <table_remove_column@@Base>:
   12e48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e4c:	mov	r5, r1
   12e50:	mov	r4, r0
   12e54:	bl	12cbc <table_column_destroy@@Base>
   12e58:	mov	r3, #12
   12e5c:	ldr	r7, [r4, #4]
   12e60:	mul	r3, r3, r5
   12e64:	mov	r1, r5
   12e68:	sub	r7, r7, #1
   12e6c:	cmp	r1, r7
   12e70:	add	lr, r3, #12
   12e74:	blt	12f04 <table_remove_column@@Base+0xbc>
   12e78:	mov	r0, r4
   12e7c:	bl	135b0 <table_get_row_length@@Base>
   12e80:	lsl	r9, r5, #2
   12e84:	mov	r6, #0
   12e88:	mov	r8, r0
   12e8c:	cmp	r8, r6
   12e90:	bgt	12f34 <table_remove_column@@Base+0xec>
   12e94:	ldr	r0, [r4, #4]
   12e98:	ldr	r7, [r4, #8]
   12e9c:	sub	r0, r0, #1
   12ea0:	str	r0, [r4, #4]
   12ea4:	mov	r1, r7
   12ea8:	bl	14eac <table_cell_nullify@@Base+0x218>
   12eac:	subs	r6, r1, #0
   12eb0:	bne	12ee8 <table_remove_column@@Base+0xa0>
   12eb4:	ldr	r1, [r4, #12]
   12eb8:	mov	r3, #12
   12ebc:	sub	r1, r1, r7
   12ec0:	str	r1, [r4, #12]
   12ec4:	ldr	r0, [r4]
   12ec8:	mul	r1, r3, r1
   12ecc:	bl	11ba8 <realloc@plt>
   12ed0:	str	r0, [r4]
   12ed4:	mov	r0, r4
   12ed8:	bl	135b0 <table_get_row_length@@Base>
   12edc:	mov	r8, r0
   12ee0:	cmp	r8, r6
   12ee4:	bgt	12f80 <table_remove_column@@Base+0x138>
   12ee8:	mov	r0, r4
   12eec:	mov	r3, #16
   12ef0:	mov	r2, r5
   12ef4:	mvn	r1, #0
   12ef8:	bl	12c00 <table_notify@@Base>
   12efc:	mov	r0, #0
   12f00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f04:	ldr	ip, [r4]
   12f08:	add	r1, r1, #1
   12f0c:	add	r0, ip, lr
   12f10:	add	r6, ip, r3
   12f14:	ldr	r2, [r0]
   12f18:	str	r2, [ip, r3]
   12f1c:	ldr	r2, [r0, #4]
   12f20:	mov	r3, lr
   12f24:	str	r2, [r6, #4]
   12f28:	ldr	r2, [r0, #8]
   12f2c:	str	r2, [r6, #8]
   12f30:	b	12e6c <table_remove_column@@Base+0x24>
   12f34:	mov	r2, r5
   12f38:	mov	r1, r6
   12f3c:	mov	r0, r4
   12f40:	bl	14c50 <table_cell_destroy@@Base>
   12f44:	mov	r1, r6
   12f48:	mov	r0, r4
   12f4c:	bl	13754 <table_get_row_ptr@@Base>
   12f50:	mov	r2, r9
   12f54:	mov	r3, r5
   12f58:	cmp	r7, r3
   12f5c:	add	r1, r2, #4
   12f60:	addle	r6, r6, #1
   12f64:	ble	12e8c <table_remove_column@@Base+0x44>
   12f68:	ldr	ip, [r0]
   12f6c:	add	r3, r3, #1
   12f70:	ldr	lr, [ip, r1]
   12f74:	str	lr, [ip, r2]
   12f78:	mov	r2, r1
   12f7c:	b	12f58 <table_remove_column@@Base+0x110>
   12f80:	mov	r1, r6
   12f84:	mov	r0, r4
   12f88:	bl	13754 <table_get_row_ptr@@Base>
   12f8c:	ldr	r1, [r4, #12]
   12f90:	add	r6, r6, #1
   12f94:	lsl	r1, r1, #2
   12f98:	mov	r7, r0
   12f9c:	ldr	r0, [r0]
   12fa0:	bl	11ba8 <realloc@plt>
   12fa4:	str	r0, [r7]
   12fa8:	b	12ee0 <table_remove_column@@Base+0x98>

00012fac <table_get_column_name@@Base>:
   12fac:	mov	r3, #12
   12fb0:	ldr	r2, [r0]
   12fb4:	mul	r1, r3, r1
   12fb8:	ldr	r0, [r2, r1]
   12fbc:	bx	lr

00012fc0 <table_get_col_ptr@@Base>:
   12fc0:	ldr	r3, [r0]
   12fc4:	mov	r0, #12
   12fc8:	mla	r0, r0, r1, r3
   12fcc:	bx	lr

00012fd0 <table_get_column_compare_function@@Base>:
   12fd0:	ldr	r2, [r0]
   12fd4:	mov	r3, #12
   12fd8:	mla	r1, r3, r1, r2
   12fdc:	ldr	r0, [r1, #8]
   12fe0:	bx	lr

00012fe4 <table_set_column_compare_function@@Base>:
   12fe4:	ldr	r0, [r0]
   12fe8:	mov	r3, #12
   12fec:	mla	r1, r3, r1, r0
   12ff0:	str	r2, [r1, #8]
   12ff4:	bx	lr

00012ff8 <table_compare_bool@@Base>:
   12ff8:	cmp	r0, #0
   12ffc:	bne	1300c <table_compare_bool@@Base+0x14>
   13000:	adds	r0, r1, #0
   13004:	mvnne	r0, #0
   13008:	bx	lr
   1300c:	cmp	r1, #0
   13010:	beq	13030 <table_compare_bool@@Base+0x38>
   13014:	ldrb	r2, [r0]
   13018:	ldrb	r3, [r1]
   1301c:	cmp	r2, r3
   13020:	bgt	13030 <table_compare_bool@@Base+0x38>
   13024:	mvnlt	r0, #0
   13028:	movge	r0, #0
   1302c:	bx	lr
   13030:	mov	r0, #1
   13034:	bx	lr

00013038 <table_compare_int8@@Base>:
   13038:	cmp	r0, #0
   1303c:	bne	1304c <table_compare_int8@@Base+0x14>
   13040:	adds	r0, r1, #0
   13044:	mvnne	r0, #0
   13048:	bx	lr
   1304c:	cmp	r1, #0
   13050:	beq	13070 <table_compare_int8@@Base+0x38>
   13054:	ldrsb	r2, [r0]
   13058:	ldrsb	r3, [r1]
   1305c:	cmp	r2, r3
   13060:	bgt	13070 <table_compare_int8@@Base+0x38>
   13064:	mvnlt	r0, #0
   13068:	movge	r0, #0
   1306c:	bx	lr
   13070:	mov	r0, #1
   13074:	bx	lr

00013078 <table_compare_int32@@Base>:
   13078:	cmp	r0, #0
   1307c:	bne	1308c <table_compare_int32@@Base+0x14>
   13080:	adds	r0, r1, #0
   13084:	mvnne	r0, #0
   13088:	bx	lr
   1308c:	cmp	r1, #0
   13090:	beq	130b0 <table_compare_int32@@Base+0x38>
   13094:	ldr	r2, [r0]
   13098:	ldr	r3, [r1]
   1309c:	cmp	r2, r3
   130a0:	bgt	130b0 <table_compare_int32@@Base+0x38>
   130a4:	mvnlt	r0, #0
   130a8:	movge	r0, #0
   130ac:	bx	lr
   130b0:	mov	r0, #1
   130b4:	bx	lr

000130b8 <table_compare_int@@Base>:
   130b8:	b	13078 <table_compare_int32@@Base>

000130bc <table_compare_uint32@@Base>:
   130bc:	cmp	r0, #0
   130c0:	bne	130d0 <table_compare_uint32@@Base+0x14>
   130c4:	adds	r0, r1, #0
   130c8:	mvnne	r0, #0
   130cc:	bx	lr
   130d0:	cmp	r1, #0
   130d4:	beq	130f4 <table_compare_uint32@@Base+0x38>
   130d8:	ldr	r2, [r0]
   130dc:	ldr	r3, [r1]
   130e0:	cmp	r2, r3
   130e4:	bhi	130f4 <table_compare_uint32@@Base+0x38>
   130e8:	mvncc	r0, #0
   130ec:	movcs	r0, #0
   130f0:	bx	lr
   130f4:	mov	r0, #1
   130f8:	bx	lr

000130fc <table_compare_uint@@Base>:
   130fc:	b	130bc <table_compare_uint32@@Base>

00013100 <table_compare_uint64@@Base>:
   13100:	cmp	r0, #0
   13104:	bne	13114 <table_compare_uint64@@Base+0x14>
   13108:	adds	r0, r1, #0
   1310c:	mvnne	r0, #0
   13110:	bx	lr
   13114:	cmp	r1, #0
   13118:	beq	13140 <table_compare_uint64@@Base+0x40>
   1311c:	ldrd	r2, [r1]
   13120:	push	{r4, r5, lr}
   13124:	ldrd	r4, [r0]
   13128:	cmp	r5, r3
   1312c:	cmpeq	r4, r2
   13130:	bhi	13148 <table_compare_uint64@@Base+0x48>
   13134:	mvncc	r0, #0
   13138:	movcs	r0, #0
   1313c:	pop	{r4, r5, pc}
   13140:	mov	r0, #1
   13144:	bx	lr
   13148:	mov	r0, #1
   1314c:	pop	{r4, r5, pc}

00013150 <table_compare_short@@Base>:
   13150:	cmp	r0, #0
   13154:	bne	13164 <table_compare_short@@Base+0x14>
   13158:	adds	r0, r1, #0
   1315c:	mvnne	r0, #0
   13160:	bx	lr
   13164:	cmp	r1, #0
   13168:	beq	13188 <table_compare_short@@Base+0x38>
   1316c:	ldrsh	r2, [r0]
   13170:	ldrsh	r3, [r1]
   13174:	cmp	r2, r3
   13178:	bgt	13188 <table_compare_short@@Base+0x38>
   1317c:	mvnlt	r0, #0
   13180:	movge	r0, #0
   13184:	bx	lr
   13188:	mov	r0, #1
   1318c:	bx	lr

00013190 <table_compare_int16@@Base>:
   13190:	b	13150 <table_compare_short@@Base>

00013194 <table_compare_ushort@@Base>:
   13194:	cmp	r0, #0
   13198:	bne	131a8 <table_compare_ushort@@Base+0x14>
   1319c:	adds	r0, r1, #0
   131a0:	mvnne	r0, #0
   131a4:	bx	lr
   131a8:	cmp	r1, #0
   131ac:	beq	131cc <table_compare_ushort@@Base+0x38>
   131b0:	ldrh	r2, [r0]
   131b4:	ldrh	r3, [r1]
   131b8:	cmp	r2, r3
   131bc:	bhi	131cc <table_compare_ushort@@Base+0x38>
   131c0:	mvncc	r0, #0
   131c4:	movcs	r0, #0
   131c8:	bx	lr
   131cc:	mov	r0, #1
   131d0:	bx	lr

000131d4 <table_compare_uint16@@Base>:
   131d4:	b	13194 <table_compare_ushort@@Base>

000131d8 <table_compare_long@@Base>:
   131d8:	cmp	r0, #0
   131dc:	bne	131ec <table_compare_long@@Base+0x14>
   131e0:	adds	r0, r1, #0
   131e4:	mvnne	r0, #0
   131e8:	bx	lr
   131ec:	cmp	r1, #0
   131f0:	beq	13210 <table_compare_long@@Base+0x38>
   131f4:	ldr	r2, [r0]
   131f8:	ldr	r3, [r1]
   131fc:	cmp	r2, r3
   13200:	bgt	13210 <table_compare_long@@Base+0x38>
   13204:	mvnlt	r0, #0
   13208:	movge	r0, #0
   1320c:	bx	lr
   13210:	mov	r0, #1
   13214:	bx	lr

00013218 <table_compare_llong@@Base>:
   13218:	cmp	r0, #0
   1321c:	bne	1322c <table_compare_llong@@Base+0x14>
   13220:	adds	r0, r1, #0
   13224:	mvnne	r0, #0
   13228:	bx	lr
   1322c:	cmp	r1, #0
   13230:	beq	13260 <table_compare_llong@@Base+0x48>
   13234:	ldrd	r2, [r1]
   13238:	push	{r4, r5, lr}
   1323c:	ldrd	r4, [r0]
   13240:	cmp	r2, r4
   13244:	sbcs	r1, r3, r5
   13248:	blt	13268 <table_compare_llong@@Base+0x50>
   1324c:	cmp	r4, r2
   13250:	sbcs	r3, r5, r3
   13254:	mvnlt	r0, #0
   13258:	movge	r0, #0
   1325c:	pop	{r4, r5, pc}
   13260:	mov	r0, #1
   13264:	bx	lr
   13268:	mov	r0, #1
   1326c:	pop	{r4, r5, pc}

00013270 <table_compare_int64@@Base>:
   13270:	b	13218 <table_compare_llong@@Base>

00013274 <table_compare_ullong@@Base>:
   13274:	cmp	r0, #0
   13278:	bne	13288 <table_compare_ullong@@Base+0x14>
   1327c:	adds	r0, r1, #0
   13280:	mvnne	r0, #0
   13284:	bx	lr
   13288:	cmp	r1, #0
   1328c:	beq	132ac <table_compare_ullong@@Base+0x38>
   13290:	ldr	r2, [r0]
   13294:	ldr	r3, [r1]
   13298:	cmp	r2, r3
   1329c:	bhi	132ac <table_compare_ullong@@Base+0x38>
   132a0:	mvncc	r0, #0
   132a4:	movcs	r0, #0
   132a8:	bx	lr
   132ac:	mov	r0, #1
   132b0:	bx	lr

000132b4 <table_compare_ulong@@Base>:
   132b4:	b	13274 <table_compare_ullong@@Base>

000132b8 <table_compare_float@@Base>:
   132b8:	cmp	r0, #0
   132bc:	bne	132cc <table_compare_float@@Base+0x14>
   132c0:	adds	r0, r1, #0
   132c4:	mvnne	r0, #0
   132c8:	bx	lr
   132cc:	cmp	r1, #0
   132d0:	beq	132f4 <table_compare_float@@Base+0x3c>
   132d4:	vldr	s14, [r0]
   132d8:	vldr	s15, [r1]
   132dc:	vcmpe.f32	s14, s15
   132e0:	vmrs	APSR_nzcv, fpscr
   132e4:	bgt	132f4 <table_compare_float@@Base+0x3c>
   132e8:	mvnmi	r0, #0
   132ec:	movpl	r0, #0
   132f0:	bx	lr
   132f4:	mov	r0, #1
   132f8:	bx	lr

000132fc <table_compare_double@@Base>:
   132fc:	cmp	r0, #0
   13300:	bne	13310 <table_compare_double@@Base+0x14>
   13304:	adds	r0, r1, #0
   13308:	mvnne	r0, #0
   1330c:	bx	lr
   13310:	cmp	r1, #0
   13314:	beq	13338 <table_compare_double@@Base+0x3c>
   13318:	vldr	d6, [r0]
   1331c:	vldr	d7, [r1]
   13320:	vcmpe.f64	d6, d7
   13324:	vmrs	APSR_nzcv, fpscr
   13328:	bgt	13338 <table_compare_double@@Base+0x3c>
   1332c:	mvnmi	r0, #0
   13330:	movpl	r0, #0
   13334:	bx	lr
   13338:	mov	r0, #1
   1333c:	bx	lr

00013340 <table_compare_ldouble@@Base>:
   13340:	cmp	r0, #0
   13344:	bne	13354 <table_compare_ldouble@@Base+0x14>
   13348:	adds	r0, r1, #0
   1334c:	mvnne	r0, #0
   13350:	bx	lr
   13354:	cmp	r1, #0
   13358:	beq	1337c <table_compare_ldouble@@Base+0x3c>
   1335c:	vldr	d6, [r0]
   13360:	vldr	d7, [r1]
   13364:	vcmpe.f64	d6, d7
   13368:	vmrs	APSR_nzcv, fpscr
   1336c:	bgt	1337c <table_compare_ldouble@@Base+0x3c>
   13370:	mvnmi	r0, #0
   13374:	movpl	r0, #0
   13378:	bx	lr
   1337c:	mov	r0, #1
   13380:	bx	lr

00013384 <table_compare_uchar@@Base>:
   13384:	cmp	r0, #0
   13388:	bne	13398 <table_compare_uchar@@Base+0x14>
   1338c:	adds	r0, r1, #0
   13390:	mvnne	r0, #0
   13394:	bx	lr
   13398:	cmp	r1, #0
   1339c:	beq	133bc <table_compare_uchar@@Base+0x38>
   133a0:	ldrb	r2, [r0]
   133a4:	ldrb	r3, [r1]
   133a8:	cmp	r2, r3
   133ac:	bhi	133bc <table_compare_uchar@@Base+0x38>
   133b0:	mvncc	r0, #0
   133b4:	movcs	r0, #0
   133b8:	bx	lr
   133bc:	mov	r0, #1
   133c0:	bx	lr

000133c4 <table_compare_char@@Base>:
   133c4:	b	13384 <table_compare_uchar@@Base>

000133c8 <table_compare_uint8@@Base>:
   133c8:	b	13384 <table_compare_uchar@@Base>

000133cc <table_compare_ptr@@Base>:
   133cc:	cmp	r0, r1
   133d0:	bhi	133e0 <table_compare_ptr@@Base+0x14>
   133d4:	mvncc	r0, #0
   133d8:	movcs	r0, #0
   133dc:	bx	lr
   133e0:	mov	r0, #1
   133e4:	bx	lr

000133e8 <table_compare_string@@Base>:
   133e8:	cmp	r0, #0
   133ec:	bne	133fc <table_compare_string@@Base+0x14>
   133f0:	adds	r0, r1, #0
   133f4:	mvnne	r0, #0
   133f8:	bx	lr
   133fc:	cmp	r1, #0
   13400:	beq	13408 <table_compare_string@@Base+0x20>
   13404:	b	11b78 <strcmp@plt>
   13408:	mov	r0, #1
   1340c:	bx	lr

00013410 <table_get_default_compare_function_for_data_type@@Base>:
   13410:	cmp	r0, #23
   13414:	ldrls	r3, [pc, #8]	; 13424 <table_get_default_compare_function_for_data_type@@Base+0x14>
   13418:	ldrls	r0, [r3, r0, lsl #2]
   1341c:	movhi	r0, #0
   13420:	bx	lr
   13424:	andeq	r5, r1, r4, asr #4

00013428 <table_get@@Base>:
   13428:	push	{r4, lr}
   1342c:	bl	14c24 <table_get_cell_ptr@@Base>
   13430:	ldr	r0, [r0]
   13434:	pop	{r4, pc}

00013438 <table_get_bool@@Base>:
   13438:	push	{r4, lr}
   1343c:	bl	13428 <table_get@@Base>
   13440:	ldrb	r0, [r0]
   13444:	pop	{r4, pc}

00013448 <table_get_int8@@Base>:
   13448:	push	{r4, lr}
   1344c:	bl	13428 <table_get@@Base>
   13450:	ldrsb	r0, [r0]
   13454:	pop	{r4, pc}

00013458 <table_get_int32@@Base>:
   13458:	push	{r4, lr}
   1345c:	bl	13428 <table_get@@Base>
   13460:	ldr	r0, [r0]
   13464:	pop	{r4, pc}

00013468 <table_get_int@@Base>:
   13468:	b	13458 <table_get_int32@@Base>

0001346c <table_get_uint32@@Base>:
   1346c:	push	{r4, lr}
   13470:	bl	13428 <table_get@@Base>
   13474:	ldr	r0, [r0]
   13478:	pop	{r4, pc}

0001347c <table_get_uint@@Base>:
   1347c:	b	1346c <table_get_uint32@@Base>

00013480 <table_get_short@@Base>:
   13480:	push	{r4, lr}
   13484:	bl	13428 <table_get@@Base>
   13488:	ldrsh	r0, [r0]
   1348c:	pop	{r4, pc}

00013490 <table_get_int16@@Base>:
   13490:	b	13480 <table_get_short@@Base>

00013494 <table_get_ushort@@Base>:
   13494:	push	{r4, lr}
   13498:	bl	13428 <table_get@@Base>
   1349c:	ldrh	r0, [r0]
   134a0:	pop	{r4, pc}

000134a4 <table_get_uint16@@Base>:
   134a4:	b	13494 <table_get_ushort@@Base>

000134a8 <table_get_long@@Base>:
   134a8:	push	{r4, lr}
   134ac:	bl	13428 <table_get@@Base>
   134b0:	ldr	r0, [r0]
   134b4:	pop	{r4, pc}

000134b8 <table_get_ulong@@Base>:
   134b8:	push	{r4, lr}
   134bc:	bl	13428 <table_get@@Base>
   134c0:	ldr	r0, [r0]
   134c4:	pop	{r4, pc}

000134c8 <table_get_llong@@Base>:
   134c8:	push	{r4, lr}
   134cc:	bl	13428 <table_get@@Base>
   134d0:	ldrd	r0, [r0]
   134d4:	pop	{r4, pc}

000134d8 <table_get_int64@@Base>:
   134d8:	b	134c8 <table_get_llong@@Base>

000134dc <table_get_ullong@@Base>:
   134dc:	push	{r4, lr}
   134e0:	bl	13428 <table_get@@Base>
   134e4:	ldrd	r0, [r0]
   134e8:	pop	{r4, pc}

000134ec <table_get_uint64@@Base>:
   134ec:	b	134dc <table_get_ullong@@Base>

000134f0 <table_get_float@@Base>:
   134f0:	push	{r4, lr}
   134f4:	bl	13428 <table_get@@Base>
   134f8:	vldr	s0, [r0]
   134fc:	pop	{r4, pc}

00013500 <table_get_double@@Base>:
   13500:	push	{r4, lr}
   13504:	bl	13428 <table_get@@Base>
   13508:	vldr	d0, [r0]
   1350c:	pop	{r4, pc}

00013510 <table_get_ldouble@@Base>:
   13510:	push	{r4, lr}
   13514:	bl	13428 <table_get@@Base>
   13518:	vldr	d0, [r0]
   1351c:	pop	{r4, pc}

00013520 <table_get_uchar@@Base>:
   13520:	push	{r4, lr}
   13524:	bl	13428 <table_get@@Base>
   13528:	ldrb	r0, [r0]
   1352c:	pop	{r4, pc}

00013530 <table_get_char@@Base>:
   13530:	b	13520 <table_get_uchar@@Base>

00013534 <table_get_uint8@@Base>:
   13534:	b	13520 <table_get_uchar@@Base>

00013538 <table_get_string@@Base>:
   13538:	b	13428 <table_get@@Base>

0001353c <table_get_ptr@@Base>:
   1353c:	b	13428 <table_get@@Base>

00013540 <table_row_init@@Base>:
   13540:	push	{r4, r5, r6, lr}
   13544:	mov	r5, r1
   13548:	ldr	r4, [r0, #16]
   1354c:	ldr	r0, [r0, #12]
   13550:	lsl	r0, r0, #2
   13554:	bl	11bc0 <malloc@plt>
   13558:	str	r0, [r4, r5, lsl #2]
   1355c:	pop	{r4, r5, r6, pc}

00013560 <table_row_destroy@@Base>:
   13560:	push	{r4, r5, r6, r7, r8, lr}
   13564:	mov	r6, r0
   13568:	mov	r5, r1
   1356c:	bl	12cd8 <table_get_column_length@@Base>
   13570:	ldr	r7, [r6, #16]
   13574:	mov	r4, #0
   13578:	mov	r8, r0
   1357c:	cmp	r4, r8
   13580:	blt	13598 <table_row_destroy@@Base+0x38>
   13584:	ldr	r0, [r7, r5, lsl #2]
   13588:	cmp	r0, #0
   1358c:	popeq	{r4, r5, r6, r7, r8, pc}
   13590:	pop	{r4, r5, r6, r7, r8, lr}
   13594:	b	11b90 <free@plt>
   13598:	mov	r2, r4
   1359c:	mov	r1, r5
   135a0:	mov	r0, r6
   135a4:	bl	14c50 <table_cell_destroy@@Base>
   135a8:	add	r4, r4, #1
   135ac:	b	1357c <table_row_destroy@@Base+0x1c>

000135b0 <table_get_row_length@@Base>:
   135b0:	ldr	r0, [r0, #20]
   135b4:	bx	lr

000135b8 <table_add_row@@Base>:
   135b8:	push	{r4, r5, r6, r7, r8, lr}
   135bc:	mov	r4, r0
   135c0:	ldr	r5, [r0, #24]
   135c4:	ldr	r0, [r0, #20]
   135c8:	mov	r1, r5
   135cc:	bl	14eac <table_cell_nullify@@Base+0x218>
   135d0:	cmp	r1, #0
   135d4:	bne	135f4 <table_add_row@@Base+0x3c>
   135d8:	ldr	r1, [r4, #28]
   135dc:	ldr	r0, [r4, #16]
   135e0:	add	r1, r5, r1
   135e4:	str	r1, [r4, #28]
   135e8:	lsl	r1, r1, #2
   135ec:	bl	11ba8 <realloc@plt>
   135f0:	str	r0, [r4, #16]
   135f4:	mov	r0, r4
   135f8:	ldr	r6, [r4, #20]
   135fc:	bl	12cd8 <table_get_column_length@@Base>
   13600:	mov	r1, r6
   13604:	mov	r5, #0
   13608:	mov	r7, r0
   1360c:	mov	r0, r4
   13610:	bl	13540 <table_row_init@@Base>
   13614:	cmp	r7, r5
   13618:	bgt	13640 <table_add_row@@Base+0x88>
   1361c:	mov	r0, r4
   13620:	mov	r3, #2
   13624:	mvn	r2, #0
   13628:	ldr	r1, [r4, #20]
   1362c:	bl	12c00 <table_notify@@Base>
   13630:	ldr	r0, [r4, #20]
   13634:	add	r3, r0, #1
   13638:	str	r3, [r4, #20]
   1363c:	pop	{r4, r5, r6, r7, r8, pc}
   13640:	mov	r2, r5
   13644:	mov	r1, r6
   13648:	mov	r0, r4
   1364c:	bl	14c3c <table_cell_init@@Base>
   13650:	add	r5, r5, #1
   13654:	b	13614 <table_add_row@@Base+0x5c>

00013658 <table_remove_row@@Base>:
   13658:	push	{r4, r5, r6, r7, r8, lr}
   1365c:	mov	r4, r0
   13660:	mov	r5, r1
   13664:	ldr	r7, [r0, #20]
   13668:	bl	12cd8 <table_get_column_length@@Base>
   1366c:	mov	r6, #0
   13670:	mov	r8, r0
   13674:	cmp	r8, r6
   13678:	bgt	13700 <table_remove_row@@Base+0xa8>
   1367c:	ldr	r3, [r4, #16]
   13680:	lsl	r6, r5, #2
   13684:	ldr	r0, [r3, r5, lsl #2]
   13688:	cmp	r0, #0
   1368c:	beq	13694 <table_remove_row@@Base+0x3c>
   13690:	bl	11b90 <free@plt>
   13694:	mov	r3, r5
   13698:	sub	r7, r7, #1
   1369c:	cmp	r3, r7
   136a0:	add	r2, r6, #4
   136a4:	blt	1373c <table_remove_row@@Base+0xe4>
   136a8:	ldr	r0, [r4, #20]
   136ac:	ldr	r6, [r4, #24]
   136b0:	sub	r0, r0, #1
   136b4:	str	r0, [r4, #20]
   136b8:	mov	r1, r6
   136bc:	bl	14eac <table_cell_nullify@@Base+0x218>
   136c0:	cmp	r1, #0
   136c4:	bne	136e4 <table_remove_row@@Base+0x8c>
   136c8:	ldr	r1, [r4, #28]
   136cc:	ldr	r0, [r4, #16]
   136d0:	sub	r1, r1, r6
   136d4:	str	r1, [r4, #28]
   136d8:	lsl	r1, r1, #2
   136dc:	bl	11ba8 <realloc@plt>
   136e0:	str	r0, [r4, #16]
   136e4:	mov	r0, r4
   136e8:	mov	r3, #4
   136ec:	mvn	r2, #0
   136f0:	mov	r1, r5
   136f4:	bl	12c00 <table_notify@@Base>
   136f8:	mov	r0, #0
   136fc:	pop	{r4, r5, r6, r7, r8, pc}
   13700:	mov	r1, r6
   13704:	mov	r0, r4
   13708:	bl	12d30 <table_get_column_data_type@@Base>
   1370c:	cmp	r0, #23
   13710:	beq	13734 <table_remove_row@@Base+0xdc>
   13714:	mov	r2, r6
   13718:	mov	r1, r5
   1371c:	mov	r0, r4
   13720:	bl	14c24 <table_get_cell_ptr@@Base>
   13724:	ldr	r0, [r0]
   13728:	cmp	r0, #0
   1372c:	beq	13734 <table_remove_row@@Base+0xdc>
   13730:	bl	11b90 <free@plt>
   13734:	add	r6, r6, #1
   13738:	b	13674 <table_remove_row@@Base+0x1c>
   1373c:	ldr	r1, [r4, #16]
   13740:	add	r3, r3, #1
   13744:	ldr	r0, [r1, r2]
   13748:	str	r0, [r1, r6]
   1374c:	mov	r6, r2
   13750:	b	1369c <table_remove_row@@Base+0x44>

00013754 <table_get_row_ptr@@Base>:
   13754:	ldr	r0, [r0, #16]
   13758:	add	r0, r0, r1, lsl #2
   1375c:	bx	lr

00013760 <table_set_row_ptr@@Base>:
   13760:	ldr	r3, [r0, #16]
   13764:	ldr	r2, [r2]
   13768:	str	r2, [r3, r1, lsl #2]
   1376c:	bx	lr

00013770 <table_set@@Base>:
   13770:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13774:	mov	r6, r0
   13778:	mov	r8, r1
   1377c:	mov	r7, r2
   13780:	ldr	r9, [sp, #32]
   13784:	mov	r5, r3
   13788:	bl	14c24 <table_get_cell_ptr@@Base>
   1378c:	mov	r1, r7
   13790:	mov	r4, r0
   13794:	mov	r0, r6
   13798:	bl	12fc0 <table_get_col_ptr@@Base>
   1379c:	cmp	r9, #23
   137a0:	ldrls	pc, [pc, r9, lsl #2]
   137a4:	b	1387c <table_set@@Base+0x10c>
   137a8:	andeq	r3, r1, r4, asr #16
   137ac:	andeq	r3, r1, r4, lsl #17
   137b0:	muleq	r1, r0, r8
   137b4:	muleq	r1, ip, r8
   137b8:	andeq	r3, r1, r8, lsr #17
   137bc:	strdeq	r3, [r1], -ip
   137c0:	andeq	r3, r1, r8, lsl #18
   137c4:	andeq	r3, r1, r4, lsl r9
   137c8:	andeq	r3, r1, r0, lsr #18
   137cc:	andeq	r3, r1, r0, ror #18
   137d0:	andeq	r3, r1, r0, lsl #19
   137d4:	andeq	r3, r1, ip, lsl #19
   137d8:	muleq	r1, r8, r9
   137dc:	andeq	r3, r1, r4, lsr #19
   137e0:			; <UNDEFINED> instruction: 0x000139b0
   137e4:			; <UNDEFINED> instruction: 0x000139bc
   137e8:	andeq	r3, r1, r8, asr #19
   137ec:	ldrdeq	r3, [r1], -r4
   137f0:	andeq	r3, r1, r0, ror #19
   137f4:	andeq	r3, r1, r4, lsr #20
   137f8:	andeq	r3, r1, r0, lsr sl
   137fc:	andeq	r3, r1, ip, ror #19
   13800:	andeq	r3, r1, r8, lsl #16
   13804:	andeq	r3, r1, ip, lsr sl
   13808:	ldr	r3, [r0, #4]
   1380c:	cmp	r3, #22
   13810:	bne	1387c <table_set@@Base+0x10c>
   13814:	ldr	r3, [r4]
   13818:	cmp	r3, #0
   1381c:	bne	1382c <table_set@@Base+0xbc>
   13820:	mov	r0, #1
   13824:	bl	11bc0 <malloc@plt>
   13828:	str	r0, [r4]
   1382c:	ldr	r3, [r4]
   13830:	cmp	r3, #0
   13834:	ldrbne	r2, [r5]
   13838:	strbne	r2, [r3]
   1383c:	bne	138e0 <table_set@@Base+0x170>
   13840:	b	1387c <table_set@@Base+0x10c>
   13844:	ldr	r3, [r0, #4]
   13848:	cmp	r3, #0
   1384c:	bne	1387c <table_set@@Base+0x10c>
   13850:	ldr	r3, [r4]
   13854:	cmp	r3, #0
   13858:	bne	13868 <table_set@@Base+0xf8>
   1385c:	mov	r0, #4
   13860:	bl	11bc0 <malloc@plt>
   13864:	str	r0, [r4]
   13868:	ldr	r3, [r4]
   1386c:	cmp	r3, #0
   13870:	ldrne	r2, [r5]
   13874:	strne	r2, [r3]
   13878:	bne	138e0 <table_set@@Base+0x170>
   1387c:	mvn	r0, #0
   13880:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13884:	ldr	r3, [r0, #4]
   13888:	cmp	r3, #1
   1388c:	b	1384c <table_set@@Base+0xdc>
   13890:	ldr	r3, [r0, #4]
   13894:	cmp	r3, #2
   13898:	b	13810 <table_set@@Base+0xa0>
   1389c:	ldr	r3, [r0, #4]
   138a0:	cmp	r3, #3
   138a4:	b	13810 <table_set@@Base+0xa0>
   138a8:	ldr	r3, [r0, #4]
   138ac:	cmp	r3, #4
   138b0:	bne	1387c <table_set@@Base+0x10c>
   138b4:	ldr	r3, [r4]
   138b8:	cmp	r3, #0
   138bc:	bne	138cc <table_set@@Base+0x15c>
   138c0:	mov	r0, #2
   138c4:	bl	11bc0 <malloc@plt>
   138c8:	str	r0, [r4]
   138cc:	ldr	r3, [r4]
   138d0:	cmp	r3, #0
   138d4:	beq	1387c <table_set@@Base+0x10c>
   138d8:	ldrh	r2, [r5]
   138dc:	strh	r2, [r3]
   138e0:	mov	r0, r6
   138e4:	mov	r3, #1
   138e8:	mov	r2, r7
   138ec:	mov	r1, r8
   138f0:	bl	12c00 <table_notify@@Base>
   138f4:	mov	r0, #0
   138f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   138fc:	ldr	r3, [r0, #4]
   13900:	cmp	r3, #5
   13904:	b	138b0 <table_set@@Base+0x140>
   13908:	ldr	r3, [r0, #4]
   1390c:	cmp	r3, #6
   13910:	b	1384c <table_set@@Base+0xdc>
   13914:	ldr	r3, [r0, #4]
   13918:	cmp	r3, #7
   1391c:	b	1384c <table_set@@Base+0xdc>
   13920:	ldr	r0, [r0, #4]
   13924:	cmp	r0, #8
   13928:	bne	1387c <table_set@@Base+0x10c>
   1392c:	ldr	r3, [r4]
   13930:	cmp	r3, #0
   13934:	bne	13940 <table_set@@Base+0x1d0>
   13938:	bl	11bc0 <malloc@plt>
   1393c:	str	r0, [r4]
   13940:	ldr	r3, [r4]
   13944:	cmp	r3, #0
   13948:	beq	1387c <table_set@@Base+0x10c>
   1394c:	ldr	r2, [r5]
   13950:	str	r2, [r3]
   13954:	ldr	r2, [r5, #4]
   13958:	str	r2, [r3, #4]
   1395c:	b	138e0 <table_set@@Base+0x170>
   13960:	ldr	r3, [r0, #4]
   13964:	cmp	r3, #9
   13968:	bne	1387c <table_set@@Base+0x10c>
   1396c:	ldr	r3, [r4]
   13970:	cmp	r3, #0
   13974:	bne	13940 <table_set@@Base+0x1d0>
   13978:	mov	r0, #8
   1397c:	b	13938 <table_set@@Base+0x1c8>
   13980:	ldr	r3, [r0, #4]
   13984:	cmp	r3, #10
   13988:	b	138b0 <table_set@@Base+0x140>
   1398c:	ldr	r3, [r0, #4]
   13990:	cmp	r3, #11
   13994:	b	138b0 <table_set@@Base+0x140>
   13998:	ldr	r3, [r0, #4]
   1399c:	cmp	r3, #12
   139a0:	b	1384c <table_set@@Base+0xdc>
   139a4:	ldr	r3, [r0, #4]
   139a8:	cmp	r3, #13
   139ac:	b	1384c <table_set@@Base+0xdc>
   139b0:	ldr	r3, [r0, #4]
   139b4:	cmp	r3, #14
   139b8:	b	13968 <table_set@@Base+0x1f8>
   139bc:	ldr	r3, [r0, #4]
   139c0:	cmp	r3, #15
   139c4:	b	13968 <table_set@@Base+0x1f8>
   139c8:	ldr	r3, [r0, #4]
   139cc:	cmp	r3, #16
   139d0:	b	1384c <table_set@@Base+0xdc>
   139d4:	ldr	r3, [r0, #4]
   139d8:	cmp	r3, #17
   139dc:	b	13968 <table_set@@Base+0x1f8>
   139e0:	ldr	r3, [r0, #4]
   139e4:	cmp	r3, #18
   139e8:	b	13968 <table_set@@Base+0x1f8>
   139ec:	ldr	r3, [r0, #4]
   139f0:	cmp	r3, #21
   139f4:	bne	1387c <table_set@@Base+0x10c>
   139f8:	mov	r0, r5
   139fc:	bl	11be4 <strlen@plt>
   13a00:	add	r1, r0, #1
   13a04:	ldr	r0, [r4]
   13a08:	bl	11ba8 <realloc@plt>
   13a0c:	cmp	r0, #0
   13a10:	str	r0, [r4]
   13a14:	beq	1387c <table_set@@Base+0x10c>
   13a18:	mov	r1, r5
   13a1c:	bl	11bb4 <strcpy@plt>
   13a20:	b	138e0 <table_set@@Base+0x170>
   13a24:	ldr	r3, [r0, #4]
   13a28:	cmp	r3, #19
   13a2c:	b	13810 <table_set@@Base+0xa0>
   13a30:	ldr	r3, [r0, #4]
   13a34:	cmp	r3, #20
   13a38:	b	13810 <table_set@@Base+0xa0>
   13a3c:	ldr	r3, [r0, #4]
   13a40:	cmp	r3, #23
   13a44:	streq	r5, [r4]
   13a48:	beq	138e0 <table_set@@Base+0x170>
   13a4c:	b	1387c <table_set@@Base+0x10c>

00013a50 <table_set_bool@@Base>:
   13a50:	push	{r0, r1, r2, r3, r4, lr}
   13a54:	add	ip, sp, #16
   13a58:	strb	r3, [ip, #-1]!
   13a5c:	mov	r3, #22
   13a60:	str	r3, [sp]
   13a64:	mov	r3, ip
   13a68:	bl	13770 <table_set@@Base>
   13a6c:	add	sp, sp, #20
   13a70:	pop	{pc}		; (ldr pc, [sp], #4)

00013a74 <table_set_int@@Base>:
   13a74:	push	{r0, r1, r2, r3, r4, lr}
   13a78:	add	ip, sp, #16
   13a7c:	str	r3, [ip, #-4]!
   13a80:	mov	r3, #0
   13a84:	str	r3, [sp]
   13a88:	mov	r3, ip
   13a8c:	bl	13770 <table_set@@Base>
   13a90:	add	sp, sp, #20
   13a94:	pop	{pc}		; (ldr pc, [sp], #4)

00013a98 <table_set_uint@@Base>:
   13a98:	push	{r0, r1, r2, r3, r4, lr}
   13a9c:	add	ip, sp, #16
   13aa0:	str	r3, [ip, #-4]!
   13aa4:	mov	r3, #1
   13aa8:	str	r3, [sp]
   13aac:	mov	r3, ip
   13ab0:	bl	13770 <table_set@@Base>
   13ab4:	add	sp, sp, #20
   13ab8:	pop	{pc}		; (ldr pc, [sp], #4)

00013abc <table_set_int8@@Base>:
   13abc:	push	{r0, r1, r2, r3, r4, lr}
   13ac0:	add	ip, sp, #16
   13ac4:	strb	r3, [ip, #-1]!
   13ac8:	mov	r3, #2
   13acc:	str	r3, [sp]
   13ad0:	mov	r3, ip
   13ad4:	bl	13770 <table_set@@Base>
   13ad8:	add	sp, sp, #20
   13adc:	pop	{pc}		; (ldr pc, [sp], #4)

00013ae0 <table_set_uint8@@Base>:
   13ae0:	push	{r0, r1, r2, r3, r4, lr}
   13ae4:	add	ip, sp, #16
   13ae8:	strb	r3, [ip, #-1]!
   13aec:	mov	r3, #3
   13af0:	str	r3, [sp]
   13af4:	mov	r3, ip
   13af8:	bl	13770 <table_set@@Base>
   13afc:	add	sp, sp, #20
   13b00:	pop	{pc}		; (ldr pc, [sp], #4)

00013b04 <table_set_int16@@Base>:
   13b04:	push	{r0, r1, r2, r3, r4, lr}
   13b08:	add	ip, sp, #16
   13b0c:	strh	r3, [ip, #-2]!
   13b10:	mov	r3, #4
   13b14:	str	r3, [sp]
   13b18:	mov	r3, ip
   13b1c:	bl	13770 <table_set@@Base>
   13b20:	add	sp, sp, #20
   13b24:	pop	{pc}		; (ldr pc, [sp], #4)

00013b28 <table_set_uint16@@Base>:
   13b28:	push	{r0, r1, r2, r3, r4, lr}
   13b2c:	add	ip, sp, #16
   13b30:	strh	r3, [ip, #-2]!
   13b34:	mov	r3, #5
   13b38:	str	r3, [sp]
   13b3c:	mov	r3, ip
   13b40:	bl	13770 <table_set@@Base>
   13b44:	add	sp, sp, #20
   13b48:	pop	{pc}		; (ldr pc, [sp], #4)

00013b4c <table_set_int32@@Base>:
   13b4c:	push	{r0, r1, r2, r3, r4, lr}
   13b50:	add	ip, sp, #16
   13b54:	str	r3, [ip, #-4]!
   13b58:	mov	r3, #6
   13b5c:	str	r3, [sp]
   13b60:	mov	r3, ip
   13b64:	bl	13770 <table_set@@Base>
   13b68:	add	sp, sp, #20
   13b6c:	pop	{pc}		; (ldr pc, [sp], #4)

00013b70 <table_set_uint32@@Base>:
   13b70:	push	{r0, r1, r2, r3, r4, lr}
   13b74:	add	ip, sp, #16
   13b78:	str	r3, [ip, #-4]!
   13b7c:	mov	r3, #7
   13b80:	str	r3, [sp]
   13b84:	mov	r3, ip
   13b88:	bl	13770 <table_set@@Base>
   13b8c:	add	sp, sp, #20
   13b90:	pop	{pc}		; (ldr pc, [sp], #4)

00013b94 <table_set_int64@@Base>:
   13b94:	mov	r3, #8
   13b98:	push	{r0, r1, r2, lr}
   13b9c:	str	r3, [sp]
   13ba0:	add	r3, sp, #16
   13ba4:	bl	13770 <table_set@@Base>
   13ba8:	add	sp, sp, #12
   13bac:	pop	{pc}		; (ldr pc, [sp], #4)

00013bb0 <table_set_uint64@@Base>:
   13bb0:	mov	r3, #9
   13bb4:	push	{r0, r1, r2, lr}
   13bb8:	str	r3, [sp]
   13bbc:	add	r3, sp, #16
   13bc0:	bl	13770 <table_set@@Base>
   13bc4:	add	sp, sp, #12
   13bc8:	pop	{pc}		; (ldr pc, [sp], #4)

00013bcc <table_set_short@@Base>:
   13bcc:	push	{r0, r1, r2, r3, r4, lr}
   13bd0:	add	ip, sp, #16
   13bd4:	strh	r3, [ip, #-2]!
   13bd8:	mov	r3, #10
   13bdc:	str	r3, [sp]
   13be0:	mov	r3, ip
   13be4:	bl	13770 <table_set@@Base>
   13be8:	add	sp, sp, #20
   13bec:	pop	{pc}		; (ldr pc, [sp], #4)

00013bf0 <table_set_ushort@@Base>:
   13bf0:	push	{r0, r1, r2, r3, r4, lr}
   13bf4:	add	ip, sp, #16
   13bf8:	strh	r3, [ip, #-2]!
   13bfc:	mov	r3, #11
   13c00:	str	r3, [sp]
   13c04:	mov	r3, ip
   13c08:	bl	13770 <table_set@@Base>
   13c0c:	add	sp, sp, #20
   13c10:	pop	{pc}		; (ldr pc, [sp], #4)

00013c14 <table_set_long@@Base>:
   13c14:	push	{r0, r1, r2, r3, r4, lr}
   13c18:	add	ip, sp, #16
   13c1c:	str	r3, [ip, #-4]!
   13c20:	mov	r3, #12
   13c24:	str	r3, [sp]
   13c28:	mov	r3, ip
   13c2c:	bl	13770 <table_set@@Base>
   13c30:	add	sp, sp, #20
   13c34:	pop	{pc}		; (ldr pc, [sp], #4)

00013c38 <table_set_ulong@@Base>:
   13c38:	push	{r0, r1, r2, r3, r4, lr}
   13c3c:	add	ip, sp, #16
   13c40:	str	r3, [ip, #-4]!
   13c44:	mov	r3, #13
   13c48:	str	r3, [sp]
   13c4c:	mov	r3, ip
   13c50:	bl	13770 <table_set@@Base>
   13c54:	add	sp, sp, #20
   13c58:	pop	{pc}		; (ldr pc, [sp], #4)

00013c5c <table_set_llong@@Base>:
   13c5c:	mov	r3, #14
   13c60:	push	{r0, r1, r2, lr}
   13c64:	str	r3, [sp]
   13c68:	add	r3, sp, #16
   13c6c:	bl	13770 <table_set@@Base>
   13c70:	add	sp, sp, #12
   13c74:	pop	{pc}		; (ldr pc, [sp], #4)

00013c78 <table_set_ullong@@Base>:
   13c78:	mov	r3, #15
   13c7c:	push	{r0, r1, r2, lr}
   13c80:	str	r3, [sp]
   13c84:	add	r3, sp, #16
   13c88:	bl	13770 <table_set@@Base>
   13c8c:	add	sp, sp, #12
   13c90:	pop	{pc}		; (ldr pc, [sp], #4)

00013c94 <table_set_float@@Base>:
   13c94:	push	{r0, r1, r2, r3, r4, lr}
   13c98:	add	r3, sp, #16
   13c9c:	mov	ip, #16
   13ca0:	vstmdb	r3!, {s0}
   13ca4:	str	ip, [sp]
   13ca8:	bl	13770 <table_set@@Base>
   13cac:	add	sp, sp, #20
   13cb0:	pop	{pc}		; (ldr pc, [sp], #4)

00013cb4 <table_set_double@@Base>:
   13cb4:	push	{r0, r1, r2, r3, r4, lr}
   13cb8:	add	r3, sp, #16
   13cbc:	mov	ip, #17
   13cc0:	vstmdb	r3!, {d0}
   13cc4:	str	ip, [sp]
   13cc8:	bl	13770 <table_set@@Base>
   13ccc:	add	sp, sp, #20
   13cd0:	pop	{pc}		; (ldr pc, [sp], #4)

00013cd4 <table_set_ldouble@@Base>:
   13cd4:	push	{r0, r1, r2, r3, r4, lr}
   13cd8:	add	r3, sp, #16
   13cdc:	mov	ip, #18
   13ce0:	vstmdb	r3!, {d0}
   13ce4:	str	ip, [sp]
   13ce8:	bl	13770 <table_set@@Base>
   13cec:	add	sp, sp, #20
   13cf0:	pop	{pc}		; (ldr pc, [sp], #4)

00013cf4 <table_set_string@@Base>:
   13cf4:	mov	ip, #21
   13cf8:	push	{r0, r1, r2, lr}
   13cfc:	str	ip, [sp]
   13d00:	bl	13770 <table_set@@Base>
   13d04:	add	sp, sp, #12
   13d08:	pop	{pc}		; (ldr pc, [sp], #4)

00013d0c <table_set_char@@Base>:
   13d0c:	push	{r0, r1, r2, r3, r4, lr}
   13d10:	add	ip, sp, #16
   13d14:	strb	r3, [ip, #-1]!
   13d18:	mov	r3, #19
   13d1c:	str	r3, [sp]
   13d20:	mov	r3, ip
   13d24:	bl	13770 <table_set@@Base>
   13d28:	add	sp, sp, #20
   13d2c:	pop	{pc}		; (ldr pc, [sp], #4)

00013d30 <table_set_uchar@@Base>:
   13d30:	push	{r0, r1, r2, r3, r4, lr}
   13d34:	add	ip, sp, #16
   13d38:	strb	r3, [ip, #-1]!
   13d3c:	mov	r3, #20
   13d40:	str	r3, [sp]
   13d44:	mov	r3, ip
   13d48:	bl	13770 <table_set@@Base>
   13d4c:	add	sp, sp, #20
   13d50:	pop	{pc}		; (ldr pc, [sp], #4)

00013d54 <table_set_ptr@@Base>:
   13d54:	mov	ip, #23
   13d58:	push	{r0, r1, r2, lr}
   13d5c:	str	ip, [sp]
   13d60:	bl	13770 <table_set@@Base>
   13d64:	add	sp, sp, #12
   13d68:	pop	{pc}		; (ldr pc, [sp], #4)

00013d6c <table_serialize@@Base>:
   13d6c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13d70:	mov	r4, r1
   13d74:	mov	r7, r0
   13d78:	bl	135b0 <table_get_row_length@@Base>
   13d7c:	add	r4, r4, #8
   13d80:	mov	r5, #0
   13d84:	mov	r9, r0
   13d88:	mov	r0, r7
   13d8c:	bl	12cd8 <table_get_column_length@@Base>
   13d90:	str	r0, [r4, #-8]
   13d94:	ldr	r3, [r7, #8]
   13d98:	mov	r8, r0
   13d9c:	str	r3, [r4, #-4]
   13da0:	cmp	r5, r8
   13da4:	blt	13dcc <table_serialize@@Base+0x60>
   13da8:	str	r9, [r4]
   13dac:	ldr	r3, [r7, #24]
   13db0:	add	r4, r4, #8
   13db4:	str	r3, [r4, #-4]
   13db8:	mov	r6, #0
   13dbc:	cmp	r6, r9
   13dc0:	bge	13fa4 <table_serialize@@Base+0x238>
   13dc4:	mov	r5, #0
   13dc8:	b	13ea4 <table_serialize@@Base+0x138>
   13dcc:	mov	r1, r5
   13dd0:	mov	r0, r7
   13dd4:	bl	12fac <table_get_column_name@@Base>
   13dd8:	mov	sl, r0
   13ddc:	bl	11be4 <strlen@plt>
   13de0:	mov	r1, r5
   13de4:	add	r5, r5, #1
   13de8:	add	r6, r0, #1
   13dec:	mov	r0, r7
   13df0:	bl	12d30 <table_get_column_data_type@@Base>
   13df4:	mov	r2, r6
   13df8:	mov	r1, sl
   13dfc:	str	r0, [r4], #4
   13e00:	mov	r0, r4
   13e04:	bl	11c14 <strncpy@plt>
   13e08:	add	r4, r4, r6
   13e0c:	b	13da0 <table_serialize@@Base+0x34>
   13e10:	mov	r1, r5
   13e14:	mov	r0, r7
   13e18:	bl	12d30 <table_get_column_data_type@@Base>
   13e1c:	cmp	r0, #23
   13e20:	ldrls	pc, [pc, r0, lsl #2]
   13e24:	b	13ea0 <table_serialize@@Base+0x134>
   13e28:	andeq	r3, r1, r8, lsl #31
   13e2c:	andeq	r3, r1, r8, lsl #31
   13e30:	andeq	r3, r1, r8, lsl #29
   13e34:	andeq	r3, r1, r0, ror pc
   13e38:	ldrdeq	r3, [r1], -r0
   13e3c:			; <UNDEFINED> instruction: 0x00013eb4
   13e40:	andeq	r3, r1, r8, lsl #31
   13e44:	andeq	r3, r1, r8, lsl #31
   13e48:	andeq	r3, r1, r8, ror #29
   13e4c:	andeq	r3, r1, r8, ror #29
   13e50:	ldrdeq	r3, [r1], -r0
   13e54:			; <UNDEFINED> instruction: 0x00013eb4
   13e58:	andeq	r3, r1, r8, lsl #31
   13e5c:	andeq	r3, r1, r8, lsl #31
   13e60:	andeq	r3, r1, r8, ror #29
   13e64:	andeq	r3, r1, r8, ror #29
   13e68:	andeq	r3, r1, r4, lsl #30
   13e6c:	andeq	r3, r1, r0, lsr #30
   13e70:	andeq	r3, r1, r0, lsr #30
   13e74:	andeq	r3, r1, r0, ror pc
   13e78:	andeq	r3, r1, r0, ror pc
   13e7c:	andeq	r3, r1, ip, lsr pc
   13e80:	andeq	r3, r1, r0, ror pc
   13e84:	andeq	r3, r1, r8, lsl #31
   13e88:	mov	r2, r5
   13e8c:	mov	r1, r6
   13e90:	mov	r0, r7
   13e94:	bl	13428 <table_get@@Base>
   13e98:	ldrsb	r3, [r0]
   13e9c:	strb	r3, [r4], #1
   13ea0:	add	r5, r5, #1
   13ea4:	cmp	r5, r8
   13ea8:	blt	13e10 <table_serialize@@Base+0xa4>
   13eac:	add	r6, r6, #1
   13eb0:	b	13dbc <table_serialize@@Base+0x50>
   13eb4:	mov	r2, r5
   13eb8:	mov	r1, r6
   13ebc:	mov	r0, r7
   13ec0:	bl	13428 <table_get@@Base>
   13ec4:	ldrh	r3, [r0]
   13ec8:	strh	r3, [r4], #2
   13ecc:	b	13ea0 <table_serialize@@Base+0x134>
   13ed0:	mov	r2, r5
   13ed4:	mov	r1, r6
   13ed8:	mov	r0, r7
   13edc:	bl	13428 <table_get@@Base>
   13ee0:	ldrsh	r3, [r0]
   13ee4:	b	13ec8 <table_serialize@@Base+0x15c>
   13ee8:	mov	r2, r5
   13eec:	mov	r1, r6
   13ef0:	mov	r0, r7
   13ef4:	bl	13428 <table_get@@Base>
   13ef8:	ldrd	r2, [r0]
   13efc:	strd	r2, [r4], #8
   13f00:	b	13ea0 <table_serialize@@Base+0x134>
   13f04:	mov	r2, r5
   13f08:	mov	r1, r6
   13f0c:	mov	r0, r7
   13f10:	bl	13428 <table_get@@Base>
   13f14:	ldr	r3, [r0]
   13f18:	str	r3, [r4], #4
   13f1c:	b	13ea0 <table_serialize@@Base+0x134>
   13f20:	mov	r2, r5
   13f24:	mov	r1, r6
   13f28:	mov	r0, r7
   13f2c:	bl	13428 <table_get@@Base>
   13f30:	ldrd	r2, [r0]
   13f34:	strd	r2, [r4], #8
   13f38:	b	13ea0 <table_serialize@@Base+0x134>
   13f3c:	mov	r2, r5
   13f40:	mov	r1, r6
   13f44:	mov	r0, r7
   13f48:	bl	13538 <table_get_string@@Base>
   13f4c:	mov	fp, r0
   13f50:	bl	11be4 <strlen@plt>
   13f54:	mov	r1, fp
   13f58:	add	sl, r0, #1
   13f5c:	mov	r2, sl
   13f60:	mov	r0, r4
   13f64:	bl	11c14 <strncpy@plt>
   13f68:	add	r4, r4, sl
   13f6c:	b	13ea0 <table_serialize@@Base+0x134>
   13f70:	mov	r2, r5
   13f74:	mov	r1, r6
   13f78:	mov	r0, r7
   13f7c:	bl	13428 <table_get@@Base>
   13f80:	ldrb	r3, [r0]
   13f84:	b	13e9c <table_serialize@@Base+0x130>
   13f88:	mov	r2, r5
   13f8c:	mov	r1, r6
   13f90:	mov	r0, r7
   13f94:	bl	13428 <table_get@@Base>
   13f98:	ldr	r3, [r0]
   13f9c:	str	r3, [r4], #4
   13fa0:	b	13ea0 <table_serialize@@Base+0x134>
   13fa4:	ldr	r3, [r7, #32]
   13fa8:	add	r4, r4, #8
   13fac:	str	r3, [r4, #-8]
   13fb0:	ldr	r3, [r7, #48]	; 0x30
   13fb4:	str	r3, [r4, #-4]
   13fb8:	mov	r3, #0
   13fbc:	ldr	r2, [r7, #32]
   13fc0:	add	r4, r4, #12
   13fc4:	cmp	r3, r2
   13fc8:	blt	13fd0 <table_serialize@@Base+0x264>
   13fcc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13fd0:	ldr	r2, [r7, #36]	; 0x24
   13fd4:	ldr	r2, [r2, r3, lsl #2]
   13fd8:	str	r2, [r4, #-12]
   13fdc:	ldr	r2, [r7, #40]	; 0x28
   13fe0:	ldr	r2, [r2, r3, lsl #2]
   13fe4:	str	r2, [r4, #-8]
   13fe8:	ldr	r2, [r7, #44]	; 0x2c
   13fec:	ldr	r2, [r2, r3, lsl #2]
   13ff0:	add	r3, r3, #1
   13ff4:	str	r2, [r4, #-4]
   13ff8:	b	13fbc <table_serialize@@Base+0x250>

00013ffc <table_deserialize@@Base>:
   13ffc:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   14000:	mov	r4, r0
   14004:	bl	1240c <table_new@@Base>
   14008:	add	r4, r4, #8
   1400c:	ldr	r8, [r4, #-8]
   14010:	ldr	r3, [r4, #-4]
   14014:	mov	r5, #0
   14018:	mov	r7, r0
   1401c:	str	r3, [r0, #8]
   14020:	cmp	r5, r8
   14024:	blt	14070 <table_deserialize@@Base+0x74>
   14028:	ldr	r9, [r4]
   1402c:	ldr	r3, [r4, #4]
   14030:	mov	r6, #0
   14034:	add	r4, r4, #8
   14038:	str	r3, [r7, #24]
   1403c:	cmp	r6, r9
   14040:	blt	1409c <table_deserialize@@Base+0xa0>
   14044:	ldr	r6, [r4]
   14048:	ldr	r3, [r4, #4]
   1404c:	mov	r5, #0
   14050:	add	r4, r4, #8
   14054:	str	r3, [r7, #48]	; 0x30
   14058:	cmp	r5, r6
   1405c:	add	r4, r4, #12
   14060:	blt	14390 <table_deserialize@@Base+0x394>
   14064:	mov	r0, r7
   14068:	add	sp, sp, #12
   1406c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14070:	add	r6, r4, #4
   14074:	ldr	r2, [r4]
   14078:	mov	r1, r6
   1407c:	mov	r0, r7
   14080:	bl	12d44 <table_add_column@@Base>
   14084:	mov	r0, r6
   14088:	bl	11be4 <strlen@plt>
   1408c:	add	r5, r5, #1
   14090:	add	r4, r0, #1
   14094:	add	r4, r6, r4
   14098:	b	14020 <table_deserialize@@Base+0x24>
   1409c:	mov	r0, r7
   140a0:	bl	135b8 <table_add_row@@Base>
   140a4:	mov	r5, #0
   140a8:	cmp	r5, r8
   140ac:	addge	r6, r6, #1
   140b0:	bge	1403c <table_deserialize@@Base+0x40>
   140b4:	mov	r1, r5
   140b8:	mov	r0, r7
   140bc:	bl	12d30 <table_get_column_data_type@@Base>
   140c0:	cmp	r0, #23
   140c4:	ldrls	pc, [pc, r0, lsl #2]
   140c8:	b	14140 <table_deserialize@@Base+0x144>
   140cc:	andeq	r4, r1, r8, asr #2
   140d0:	andeq	r4, r1, r0, ror #2
   140d4:	andeq	r4, r1, r8, ror r1
   140d8:	muleq	r1, r0, r1
   140dc:	andeq	r4, r1, r8, lsr #3
   140e0:	andeq	r4, r1, r0, asr #3
   140e4:	ldrdeq	r4, [r1], -r8
   140e8:	strdeq	r4, [r1], -r0
   140ec:	andeq	r4, r1, r8, lsl #4
   140f0:	andeq	r4, r1, r4, lsr #4
   140f4:	andeq	r4, r1, r0, asr #4
   140f8:	andeq	r4, r1, r8, asr r2
   140fc:	andeq	r4, r1, r0, ror r2
   14100:	andeq	r4, r1, r8, lsl #5
   14104:	andeq	r4, r1, r0, lsr #5
   14108:			; <UNDEFINED> instruction: 0x000142bc
   1410c:	ldrdeq	r4, [r1], -r8
   14110:	strdeq	r4, [r1], -r0
   14114:	andeq	r4, r1, r8, lsl #6
   14118:	andeq	r4, r1, r8, asr #6
   1411c:	andeq	r4, r1, r0, ror #6
   14120:	andeq	r4, r1, r0, lsr #6
   14124:	andeq	r4, r1, ip, lsr #2
   14128:	andeq	r4, r1, r8, ror r3
   1412c:	ldrb	r3, [r4], #1
   14130:	mov	r2, r5
   14134:	mov	r1, r6
   14138:	mov	r0, r7
   1413c:	bl	13a50 <table_set_bool@@Base>
   14140:	add	r5, r5, #1
   14144:	b	140a8 <table_deserialize@@Base+0xac>
   14148:	ldr	r3, [r4], #4
   1414c:	mov	r2, r5
   14150:	mov	r1, r6
   14154:	mov	r0, r7
   14158:	bl	13a74 <table_set_int@@Base>
   1415c:	b	14140 <table_deserialize@@Base+0x144>
   14160:	ldr	r3, [r4], #4
   14164:	mov	r2, r5
   14168:	mov	r1, r6
   1416c:	mov	r0, r7
   14170:	bl	13a98 <table_set_uint@@Base>
   14174:	b	14140 <table_deserialize@@Base+0x144>
   14178:	ldrsb	r3, [r4], #1
   1417c:	mov	r2, r5
   14180:	mov	r1, r6
   14184:	mov	r0, r7
   14188:	bl	13abc <table_set_int8@@Base>
   1418c:	b	14140 <table_deserialize@@Base+0x144>
   14190:	ldrb	r3, [r4], #1
   14194:	mov	r2, r5
   14198:	mov	r1, r6
   1419c:	mov	r0, r7
   141a0:	bl	13ae0 <table_set_uint8@@Base>
   141a4:	b	14140 <table_deserialize@@Base+0x144>
   141a8:	ldrsh	r3, [r4], #2
   141ac:	mov	r2, r5
   141b0:	mov	r1, r6
   141b4:	mov	r0, r7
   141b8:	bl	13b04 <table_set_int16@@Base>
   141bc:	b	14140 <table_deserialize@@Base+0x144>
   141c0:	ldrh	r3, [r4], #2
   141c4:	mov	r2, r5
   141c8:	mov	r1, r6
   141cc:	mov	r0, r7
   141d0:	bl	13b28 <table_set_uint16@@Base>
   141d4:	b	14140 <table_deserialize@@Base+0x144>
   141d8:	ldr	r3, [r4], #4
   141dc:	mov	r2, r5
   141e0:	mov	r1, r6
   141e4:	mov	r0, r7
   141e8:	bl	13b4c <table_set_int32@@Base>
   141ec:	b	14140 <table_deserialize@@Base+0x144>
   141f0:	ldr	r3, [r4], #4
   141f4:	mov	r2, r5
   141f8:	mov	r1, r6
   141fc:	mov	r0, r7
   14200:	bl	13b70 <table_set_uint32@@Base>
   14204:	b	14140 <table_deserialize@@Base+0x144>
   14208:	ldrd	r2, [r4], #8
   1420c:	mov	r1, r6
   14210:	mov	r0, r7
   14214:	strd	r2, [sp]
   14218:	mov	r2, r5
   1421c:	bl	13b94 <table_set_int64@@Base>
   14220:	b	14140 <table_deserialize@@Base+0x144>
   14224:	ldrd	r2, [r4], #8
   14228:	mov	r1, r6
   1422c:	mov	r0, r7
   14230:	strd	r2, [sp]
   14234:	mov	r2, r5
   14238:	bl	13bb0 <table_set_uint64@@Base>
   1423c:	b	14140 <table_deserialize@@Base+0x144>
   14240:	ldrsh	r3, [r4], #2
   14244:	mov	r2, r5
   14248:	mov	r1, r6
   1424c:	mov	r0, r7
   14250:	bl	13bcc <table_set_short@@Base>
   14254:	b	14140 <table_deserialize@@Base+0x144>
   14258:	ldrh	r3, [r4], #2
   1425c:	mov	r2, r5
   14260:	mov	r1, r6
   14264:	mov	r0, r7
   14268:	bl	13bf0 <table_set_ushort@@Base>
   1426c:	b	14140 <table_deserialize@@Base+0x144>
   14270:	ldr	r3, [r4], #4
   14274:	mov	r2, r5
   14278:	mov	r1, r6
   1427c:	mov	r0, r7
   14280:	bl	13c14 <table_set_long@@Base>
   14284:	b	14140 <table_deserialize@@Base+0x144>
   14288:	ldr	r3, [r4], #4
   1428c:	mov	r2, r5
   14290:	mov	r1, r6
   14294:	mov	r0, r7
   14298:	bl	13c38 <table_set_ulong@@Base>
   1429c:	b	14140 <table_deserialize@@Base+0x144>
   142a0:	ldrd	r2, [r4], #8
   142a4:	mov	r1, r6
   142a8:	mov	r0, r7
   142ac:	strd	r2, [sp]
   142b0:	mov	r2, r5
   142b4:	bl	13c5c <table_set_llong@@Base>
   142b8:	b	14140 <table_deserialize@@Base+0x144>
   142bc:	ldrd	r2, [r4], #8
   142c0:	mov	r1, r6
   142c4:	mov	r0, r7
   142c8:	strd	r2, [sp]
   142cc:	mov	r2, r5
   142d0:	bl	13c78 <table_set_ullong@@Base>
   142d4:	b	14140 <table_deserialize@@Base+0x144>
   142d8:	vldmia	r4!, {s0}
   142dc:	mov	r2, r5
   142e0:	mov	r1, r6
   142e4:	mov	r0, r7
   142e8:	bl	13c94 <table_set_float@@Base>
   142ec:	b	14140 <table_deserialize@@Base+0x144>
   142f0:	vldmia	r4!, {d0}
   142f4:	mov	r2, r5
   142f8:	mov	r1, r6
   142fc:	mov	r0, r7
   14300:	bl	13cb4 <table_set_double@@Base>
   14304:	b	14140 <table_deserialize@@Base+0x144>
   14308:	vldmia	r4!, {d0}
   1430c:	mov	r2, r5
   14310:	mov	r1, r6
   14314:	mov	r0, r7
   14318:	bl	13cd4 <table_set_ldouble@@Base>
   1431c:	b	14140 <table_deserialize@@Base+0x144>
   14320:	mov	r3, r4
   14324:	mov	r2, r5
   14328:	mov	r1, r6
   1432c:	mov	r0, r7
   14330:	bl	13cf4 <table_set_string@@Base>
   14334:	mov	r0, r4
   14338:	bl	11be4 <strlen@plt>
   1433c:	add	r0, r0, #1
   14340:	add	r4, r4, r0
   14344:	b	14140 <table_deserialize@@Base+0x144>
   14348:	ldrb	r3, [r4], #1
   1434c:	mov	r2, r5
   14350:	mov	r1, r6
   14354:	mov	r0, r7
   14358:	bl	13d0c <table_set_char@@Base>
   1435c:	b	14140 <table_deserialize@@Base+0x144>
   14360:	ldrb	r3, [r4], #1
   14364:	mov	r2, r5
   14368:	mov	r1, r6
   1436c:	mov	r0, r7
   14370:	bl	13d30 <table_set_uchar@@Base>
   14374:	b	14140 <table_deserialize@@Base+0x144>
   14378:	ldr	r3, [r4], #4
   1437c:	mov	r2, r5
   14380:	mov	r1, r6
   14384:	mov	r0, r7
   14388:	bl	13d54 <table_set_ptr@@Base>
   1438c:	b	14140 <table_deserialize@@Base+0x144>
   14390:	ldmdb	r4, {r1, r2, r3}
   14394:	mov	r0, r7
   14398:	bl	129f8 <table_register_callback@@Base>
   1439c:	add	r5, r5, #1
   143a0:	b	14058 <table_deserialize@@Base+0x5c>

000143a4 <table_cell_to_buffer@@Base>:
   143a4:	push	{r4, r5, r6, r7, lr}
   143a8:	sub	sp, sp, #20
   143ac:	mov	r7, r1
   143b0:	mov	r1, r2
   143b4:	str	r2, [sp, #12]
   143b8:	mov	r6, r0
   143bc:	mov	r4, r3
   143c0:	ldr	r5, [sp, #40]	; 0x28
   143c4:	bl	12d30 <table_get_column_data_type@@Base>
   143c8:	ldr	r2, [sp, #12]
   143cc:	cmp	r0, #23
   143d0:	ldrls	pc, [pc, r0, lsl #2]
   143d4:	b	144f4 <table_cell_to_buffer@@Base+0x150>
   143d8:	andeq	r4, r1, r8, lsr r4
   143dc:	andeq	r4, r1, r0, asr r4
   143e0:	andeq	r4, r1, r4, ror r4
   143e4:	andeq	r4, r1, r4, lsl #9
   143e8:	muleq	r1, r4, r4
   143ec:	andeq	r4, r1, r4, lsr #9
   143f0:			; <UNDEFINED> instruction: 0x000144b4
   143f4:	andeq	r4, r1, r4, asr #9
   143f8:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143fc:	andeq	r4, r1, r0, lsl #10
   14400:	andeq	r4, r1, r8, lsl r5
   14404:	andeq	r4, r1, r0, lsr r5
   14408:	andeq	r4, r1, r8, asr #10
   1440c:	andeq	r4, r1, r0, ror #10
   14410:	andeq	r4, r1, r8, ror r5
   14414:	andeq	r4, r1, r8, lsl #11
   14418:			; <UNDEFINED> instruction: 0x000145b0
   1441c:	ldrdeq	r4, [r1], -r8
   14420:	strdeq	r4, [r1], -r0
   14424:	andeq	r4, r1, r8, lsl r6
   14428:	andeq	r4, r1, r0, lsr r6
   1442c:	muleq	r1, r8, r5
   14430:	andeq	r4, r1, r8, lsl #12
   14434:	andeq	r4, r1, r0, asr #12
   14438:	mov	r1, r7
   1443c:	mov	r0, r6
   14440:	bl	13468 <table_get_int@@Base>
   14444:	mov	r3, r0
   14448:	ldr	r2, [pc, #520]	; 14658 <table_cell_to_buffer@@Base+0x2b4>
   1444c:	b	14464 <table_cell_to_buffer@@Base+0xc0>
   14450:	mov	r1, r7
   14454:	mov	r0, r6
   14458:	bl	1347c <table_get_uint@@Base>
   1445c:	ldr	r2, [pc, #504]	; 1465c <table_cell_to_buffer@@Base+0x2b8>
   14460:	mov	r3, r0
   14464:	mov	r1, r5
   14468:	mov	r0, r4
   1446c:	bl	11bfc <snprintf@plt>
   14470:	b	144f4 <table_cell_to_buffer@@Base+0x150>
   14474:	mov	r1, r7
   14478:	mov	r0, r6
   1447c:	bl	13448 <table_get_int8@@Base>
   14480:	b	14444 <table_cell_to_buffer@@Base+0xa0>
   14484:	mov	r1, r7
   14488:	mov	r0, r6
   1448c:	bl	13534 <table_get_uint8@@Base>
   14490:	b	1445c <table_cell_to_buffer@@Base+0xb8>
   14494:	mov	r1, r7
   14498:	mov	r0, r6
   1449c:	bl	13490 <table_get_int16@@Base>
   144a0:	b	14444 <table_cell_to_buffer@@Base+0xa0>
   144a4:	mov	r1, r7
   144a8:	mov	r0, r6
   144ac:	bl	134a4 <table_get_uint16@@Base>
   144b0:	b	1445c <table_cell_to_buffer@@Base+0xb8>
   144b4:	mov	r1, r7
   144b8:	mov	r0, r6
   144bc:	bl	13458 <table_get_int32@@Base>
   144c0:	b	14444 <table_cell_to_buffer@@Base+0xa0>
   144c4:	mov	r1, r7
   144c8:	mov	r0, r6
   144cc:	bl	1346c <table_get_uint32@@Base>
   144d0:	b	1445c <table_cell_to_buffer@@Base+0xb8>
   144d4:	mov	r1, r7
   144d8:	mov	r0, r6
   144dc:	bl	134d8 <table_get_int64@@Base>
   144e0:	ldr	r2, [pc, #376]	; 14660 <table_cell_to_buffer@@Base+0x2bc>
   144e4:	strd	r0, [sp]
   144e8:	mov	r1, r5
   144ec:	mov	r0, r4
   144f0:	bl	11bfc <snprintf@plt>
   144f4:	mov	r0, #0
   144f8:	add	sp, sp, #20
   144fc:	pop	{r4, r5, r6, r7, pc}
   14500:	mov	r1, r7
   14504:	mov	r0, r6
   14508:	bl	134ec <table_get_uint64@@Base>
   1450c:	strd	r0, [sp]
   14510:	ldr	r2, [pc, #332]	; 14664 <table_cell_to_buffer@@Base+0x2c0>
   14514:	b	144e8 <table_cell_to_buffer@@Base+0x144>
   14518:	mov	r1, r7
   1451c:	mov	r0, r6
   14520:	bl	13480 <table_get_short@@Base>
   14524:	ldr	r2, [pc, #316]	; 14668 <table_cell_to_buffer@@Base+0x2c4>
   14528:	mov	r3, r0
   1452c:	b	14464 <table_cell_to_buffer@@Base+0xc0>
   14530:	mov	r1, r7
   14534:	mov	r0, r6
   14538:	bl	13494 <table_get_ushort@@Base>
   1453c:	ldr	r2, [pc, #296]	; 1466c <table_cell_to_buffer@@Base+0x2c8>
   14540:	mov	r3, r0
   14544:	b	14464 <table_cell_to_buffer@@Base+0xc0>
   14548:	mov	r1, r7
   1454c:	mov	r0, r6
   14550:	bl	134a8 <table_get_long@@Base>
   14554:	ldr	r2, [pc, #276]	; 14670 <table_cell_to_buffer@@Base+0x2cc>
   14558:	mov	r3, r0
   1455c:	b	14464 <table_cell_to_buffer@@Base+0xc0>
   14560:	mov	r1, r7
   14564:	mov	r0, r6
   14568:	bl	134b8 <table_get_ulong@@Base>
   1456c:	ldr	r2, [pc, #256]	; 14674 <table_cell_to_buffer@@Base+0x2d0>
   14570:	mov	r3, r0
   14574:	b	14464 <table_cell_to_buffer@@Base+0xc0>
   14578:	mov	r1, r7
   1457c:	mov	r0, r6
   14580:	bl	134c8 <table_get_llong@@Base>
   14584:	b	144e0 <table_cell_to_buffer@@Base+0x13c>
   14588:	mov	r1, r7
   1458c:	mov	r0, r6
   14590:	bl	134dc <table_get_ullong@@Base>
   14594:	b	1450c <table_cell_to_buffer@@Base+0x168>
   14598:	mov	r1, r7
   1459c:	mov	r0, r6
   145a0:	bl	13538 <table_get_string@@Base>
   145a4:	ldr	r2, [pc, #204]	; 14678 <table_cell_to_buffer@@Base+0x2d4>
   145a8:	mov	r3, r0
   145ac:	b	14464 <table_cell_to_buffer@@Base+0xc0>
   145b0:	mov	r1, r7
   145b4:	mov	r0, r6
   145b8:	bl	134f0 <table_get_float@@Base>
   145bc:	ldr	r2, [pc, #184]	; 1467c <table_cell_to_buffer@@Base+0x2d8>
   145c0:	vcvt.f64.f32	d0, s0
   145c4:	vstr	d0, [sp]
   145c8:	mov	r1, r5
   145cc:	mov	r0, r4
   145d0:	bl	11bfc <snprintf@plt>
   145d4:	b	144f4 <table_cell_to_buffer@@Base+0x150>
   145d8:	mov	r1, r7
   145dc:	mov	r0, r6
   145e0:	bl	13500 <table_get_double@@Base>
   145e4:	ldr	r2, [pc, #148]	; 14680 <table_cell_to_buffer@@Base+0x2dc>
   145e8:	vstr	d0, [sp]
   145ec:	b	145c8 <table_cell_to_buffer@@Base+0x224>
   145f0:	mov	r1, r7
   145f4:	mov	r0, r6
   145f8:	bl	13510 <table_get_ldouble@@Base>
   145fc:	ldr	r2, [pc, #128]	; 14684 <table_cell_to_buffer@@Base+0x2e0>
   14600:	vstr	d0, [sp]
   14604:	b	145c8 <table_cell_to_buffer@@Base+0x224>
   14608:	mov	r1, r7
   1460c:	mov	r0, r6
   14610:	bl	13438 <table_get_bool@@Base>
   14614:	b	14444 <table_cell_to_buffer@@Base+0xa0>
   14618:	mov	r1, r7
   1461c:	mov	r0, r6
   14620:	bl	13530 <table_get_char@@Base>
   14624:	mov	r3, r0
   14628:	ldr	r2, [pc, #88]	; 14688 <table_cell_to_buffer@@Base+0x2e4>
   1462c:	b	14464 <table_cell_to_buffer@@Base+0xc0>
   14630:	mov	r1, r7
   14634:	mov	r0, r6
   14638:	bl	13520 <table_get_uchar@@Base>
   1463c:	b	14624 <table_cell_to_buffer@@Base+0x280>
   14640:	mov	r1, r7
   14644:	mov	r0, r6
   14648:	bl	1353c <table_get_ptr@@Base>
   1464c:	ldr	r2, [pc, #56]	; 1468c <table_cell_to_buffer@@Base+0x2e8>
   14650:	mov	r3, r0
   14654:	b	14464 <table_cell_to_buffer@@Base+0xc0>
   14658:	andeq	r5, r1, fp, lsl #4
   1465c:	andeq	r5, r1, r4, lsr #5
   14660:	andeq	r5, r1, r7, lsr #5
   14664:	andeq	r5, r1, ip, lsr #5
   14668:			; <UNDEFINED> instruction: 0x000152b1
   1466c:			; <UNDEFINED> instruction: 0x000152b5
   14670:			; <UNDEFINED> instruction: 0x000152b9
   14674:			; <UNDEFINED> instruction: 0x000152bd
   14678:	andeq	r5, r1, r1, asr #5
   1467c:	andeq	r5, r1, r4, asr #5
   14680:	andeq	r5, r1, r7, asr #5
   14684:	andeq	r5, r1, fp, asr #5
   14688:	andeq	r5, r1, pc, asr #5
   1468c:	ldrdeq	r5, [r1], -r2

00014690 <table_cell_from_buffer@@Base>:
   14690:	push	{r4, r5, r6, r7, lr}
   14694:	mov	r7, r1
   14698:	sub	sp, sp, #268	; 0x10c
   1469c:	mov	r1, r2
   146a0:	mov	r6, r0
   146a4:	mov	r5, r2
   146a8:	mov	r4, r3
   146ac:	bl	12d30 <table_get_column_data_type@@Base>
   146b0:	cmp	r0, #23
   146b4:	ldrls	pc, [pc, r0, lsl #2]
   146b8:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   146bc:	andeq	r4, r1, ip, lsl r7
   146c0:	andeq	r4, r1, r0, asr r7
   146c4:	andeq	r4, r1, r0, lsl #15
   146c8:			; <UNDEFINED> instruction: 0x000147b0
   146cc:	andeq	r4, r1, r0, ror #15
   146d0:	andeq	r4, r1, r0, lsl r8
   146d4:	andeq	r4, r1, r0, asr #16
   146d8:	andeq	r4, r1, r0, ror r8
   146dc:	andeq	r4, r1, r0, lsr #17
   146e0:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   146e4:	andeq	r4, r1, r8, lsl #18
   146e8:	andeq	r4, r1, r8, lsr r9
   146ec:	andeq	r4, r1, r8, ror #18
   146f0:	muleq	r1, r8, r9
   146f4:	andeq	r4, r1, r8, asr #19
   146f8:	strdeq	r4, [r1], -ip
   146fc:	andeq	r4, r1, r0, ror #20
   14700:	muleq	r1, r0, sl
   14704:	andeq	r4, r1, r0, asr #21
   14708:	andeq	r4, r1, ip, asr #22
   1470c:	andeq	r4, r1, ip, ror fp
   14710:	andeq	r4, r1, r0, lsr sl
   14714:	strdeq	r4, [r1], -r0
   14718:	andeq	r4, r1, ip, lsr #23
   1471c:	add	r2, sp, #8
   14720:	ldr	r1, [pc, #1212]	; 14be4 <table_cell_from_buffer@@Base+0x554>
   14724:	mov	r0, r4
   14728:	bl	11c08 <__isoc99_sscanf@plt>
   1472c:	cmp	r0, #1
   14730:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14734:	ldr	r3, [sp, #8]
   14738:	mov	r2, r5
   1473c:	mov	r1, r7
   14740:	mov	r0, r6
   14744:	bl	13a74 <table_set_int@@Base>
   14748:	mov	r4, #0
   1474c:	b	14b40 <table_cell_from_buffer@@Base+0x4b0>
   14750:	add	r2, sp, #8
   14754:	ldr	r1, [pc, #1164]	; 14be8 <table_cell_from_buffer@@Base+0x558>
   14758:	mov	r0, r4
   1475c:	bl	11c08 <__isoc99_sscanf@plt>
   14760:	cmp	r0, #1
   14764:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14768:	ldr	r3, [sp, #8]
   1476c:	mov	r2, r5
   14770:	mov	r1, r7
   14774:	mov	r0, r6
   14778:	bl	13a98 <table_set_uint@@Base>
   1477c:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14780:	add	r2, sp, #8
   14784:	ldr	r1, [pc, #1120]	; 14bec <table_cell_from_buffer@@Base+0x55c>
   14788:	mov	r0, r4
   1478c:	bl	11c08 <__isoc99_sscanf@plt>
   14790:	cmp	r0, #1
   14794:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14798:	ldrsb	r3, [sp, #8]
   1479c:	mov	r2, r5
   147a0:	mov	r1, r7
   147a4:	mov	r0, r6
   147a8:	bl	13abc <table_set_int8@@Base>
   147ac:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   147b0:	add	r2, sp, #8
   147b4:	ldr	r1, [pc, #1076]	; 14bf0 <table_cell_from_buffer@@Base+0x560>
   147b8:	mov	r0, r4
   147bc:	bl	11c08 <__isoc99_sscanf@plt>
   147c0:	cmp	r0, #1
   147c4:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   147c8:	ldrb	r3, [sp, #8]
   147cc:	mov	r2, r5
   147d0:	mov	r1, r7
   147d4:	mov	r0, r6
   147d8:	bl	13ae0 <table_set_uint8@@Base>
   147dc:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   147e0:	add	r2, sp, #8
   147e4:	ldr	r1, [pc, #1032]	; 14bf4 <table_cell_from_buffer@@Base+0x564>
   147e8:	mov	r0, r4
   147ec:	bl	11c08 <__isoc99_sscanf@plt>
   147f0:	cmp	r0, #1
   147f4:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   147f8:	ldrsh	r3, [sp, #8]
   147fc:	mov	r2, r5
   14800:	mov	r1, r7
   14804:	mov	r0, r6
   14808:	bl	13b04 <table_set_int16@@Base>
   1480c:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14810:	add	r2, sp, #8
   14814:	ldr	r1, [pc, #988]	; 14bf8 <table_cell_from_buffer@@Base+0x568>
   14818:	mov	r0, r4
   1481c:	bl	11c08 <__isoc99_sscanf@plt>
   14820:	cmp	r0, #1
   14824:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14828:	ldrh	r3, [sp, #8]
   1482c:	mov	r2, r5
   14830:	mov	r1, r7
   14834:	mov	r0, r6
   14838:	bl	13b28 <table_set_uint16@@Base>
   1483c:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14840:	add	r2, sp, #8
   14844:	ldr	r1, [pc, #920]	; 14be4 <table_cell_from_buffer@@Base+0x554>
   14848:	mov	r0, r4
   1484c:	bl	11c08 <__isoc99_sscanf@plt>
   14850:	cmp	r0, #1
   14854:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14858:	ldr	r3, [sp, #8]
   1485c:	mov	r2, r5
   14860:	mov	r1, r7
   14864:	mov	r0, r6
   14868:	bl	13b4c <table_set_int32@@Base>
   1486c:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14870:	add	r2, sp, #8
   14874:	ldr	r1, [pc, #876]	; 14be8 <table_cell_from_buffer@@Base+0x558>
   14878:	mov	r0, r4
   1487c:	bl	11c08 <__isoc99_sscanf@plt>
   14880:	cmp	r0, #1
   14884:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14888:	ldr	r3, [sp, #8]
   1488c:	mov	r2, r5
   14890:	mov	r1, r7
   14894:	mov	r0, r6
   14898:	bl	13b70 <table_set_uint32@@Base>
   1489c:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   148a0:	add	r2, sp, #8
   148a4:	ldr	r1, [pc, #848]	; 14bfc <table_cell_from_buffer@@Base+0x56c>
   148a8:	mov	r0, r4
   148ac:	bl	11c08 <__isoc99_sscanf@plt>
   148b0:	cmp	r0, #1
   148b4:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   148b8:	ldrd	r2, [sp, #8]
   148bc:	mov	r1, r7
   148c0:	mov	r0, r6
   148c4:	strd	r2, [sp]
   148c8:	mov	r2, r5
   148cc:	bl	13b94 <table_set_int64@@Base>
   148d0:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   148d4:	add	r2, sp, #8
   148d8:	ldr	r1, [pc, #800]	; 14c00 <table_cell_from_buffer@@Base+0x570>
   148dc:	mov	r0, r4
   148e0:	bl	11c08 <__isoc99_sscanf@plt>
   148e4:	cmp	r0, #1
   148e8:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   148ec:	ldrd	r2, [sp, #8]
   148f0:	mov	r1, r7
   148f4:	mov	r0, r6
   148f8:	strd	r2, [sp]
   148fc:	mov	r2, r5
   14900:	bl	13bb0 <table_set_uint64@@Base>
   14904:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14908:	add	r2, sp, #8
   1490c:	ldr	r1, [pc, #736]	; 14bf4 <table_cell_from_buffer@@Base+0x564>
   14910:	mov	r0, r4
   14914:	bl	11c08 <__isoc99_sscanf@plt>
   14918:	cmp	r0, #1
   1491c:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14920:	ldrsh	r3, [sp, #8]
   14924:	mov	r2, r5
   14928:	mov	r1, r7
   1492c:	mov	r0, r6
   14930:	bl	13bcc <table_set_short@@Base>
   14934:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14938:	add	r2, sp, #8
   1493c:	ldr	r1, [pc, #692]	; 14bf8 <table_cell_from_buffer@@Base+0x568>
   14940:	mov	r0, r4
   14944:	bl	11c08 <__isoc99_sscanf@plt>
   14948:	cmp	r0, #1
   1494c:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14950:	ldrh	r3, [sp, #8]
   14954:	mov	r2, r5
   14958:	mov	r1, r7
   1495c:	mov	r0, r6
   14960:	bl	13bf0 <table_set_ushort@@Base>
   14964:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14968:	add	r2, sp, #8
   1496c:	ldr	r1, [pc, #656]	; 14c04 <table_cell_from_buffer@@Base+0x574>
   14970:	mov	r0, r4
   14974:	bl	11c08 <__isoc99_sscanf@plt>
   14978:	cmp	r0, #1
   1497c:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14980:	ldr	r3, [sp, #8]
   14984:	mov	r2, r5
   14988:	mov	r1, r7
   1498c:	mov	r0, r6
   14990:	bl	13c14 <table_set_long@@Base>
   14994:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14998:	add	r2, sp, #8
   1499c:	ldr	r1, [pc, #612]	; 14c08 <table_cell_from_buffer@@Base+0x578>
   149a0:	mov	r0, r4
   149a4:	bl	11c08 <__isoc99_sscanf@plt>
   149a8:	cmp	r0, #1
   149ac:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   149b0:	ldr	r3, [sp, #8]
   149b4:	mov	r2, r5
   149b8:	mov	r1, r7
   149bc:	mov	r0, r6
   149c0:	bl	13c38 <table_set_ulong@@Base>
   149c4:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   149c8:	add	r2, sp, #8
   149cc:	ldr	r1, [pc, #552]	; 14bfc <table_cell_from_buffer@@Base+0x56c>
   149d0:	mov	r0, r4
   149d4:	bl	11c08 <__isoc99_sscanf@plt>
   149d8:	cmp	r0, #1
   149dc:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   149e0:	ldrd	r2, [sp, #8]
   149e4:	mov	r1, r7
   149e8:	mov	r0, r6
   149ec:	strd	r2, [sp]
   149f0:	mov	r2, r5
   149f4:	bl	13c5c <table_set_llong@@Base>
   149f8:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   149fc:	add	r2, sp, #8
   14a00:	ldr	r1, [pc, #504]	; 14c00 <table_cell_from_buffer@@Base+0x570>
   14a04:	mov	r0, r4
   14a08:	bl	11c08 <__isoc99_sscanf@plt>
   14a0c:	cmp	r0, #1
   14a10:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14a14:	ldrd	r2, [sp, #8]
   14a18:	mov	r1, r7
   14a1c:	mov	r0, r6
   14a20:	strd	r2, [sp]
   14a24:	mov	r2, r5
   14a28:	bl	13c78 <table_set_ullong@@Base>
   14a2c:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14a30:	add	r2, sp, #8
   14a34:	ldr	r1, [pc, #464]	; 14c0c <table_cell_from_buffer@@Base+0x57c>
   14a38:	mov	r0, r4
   14a3c:	bl	11c08 <__isoc99_sscanf@plt>
   14a40:	cmp	r0, #1
   14a44:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14a48:	add	r3, sp, #8
   14a4c:	mov	r2, r5
   14a50:	mov	r1, r7
   14a54:	mov	r0, r6
   14a58:	bl	13cf4 <table_set_string@@Base>
   14a5c:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14a60:	add	r2, sp, #8
   14a64:	ldr	r1, [pc, #420]	; 14c10 <table_cell_from_buffer@@Base+0x580>
   14a68:	mov	r0, r4
   14a6c:	bl	11c08 <__isoc99_sscanf@plt>
   14a70:	cmp	r0, #1
   14a74:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14a78:	vldr	s0, [sp, #8]
   14a7c:	mov	r2, r5
   14a80:	mov	r1, r7
   14a84:	mov	r0, r6
   14a88:	bl	13c94 <table_set_float@@Base>
   14a8c:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14a90:	add	r2, sp, #8
   14a94:	ldr	r1, [pc, #376]	; 14c14 <table_cell_from_buffer@@Base+0x584>
   14a98:	mov	r0, r4
   14a9c:	bl	11c08 <__isoc99_sscanf@plt>
   14aa0:	cmp	r0, #1
   14aa4:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14aa8:	vldr	d0, [sp, #8]
   14aac:	mov	r2, r5
   14ab0:	mov	r1, r7
   14ab4:	mov	r0, r6
   14ab8:	bl	13cb4 <table_set_double@@Base>
   14abc:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14ac0:	add	r2, sp, #8
   14ac4:	ldr	r1, [pc, #332]	; 14c18 <table_cell_from_buffer@@Base+0x588>
   14ac8:	mov	r0, r4
   14acc:	bl	11c08 <__isoc99_sscanf@plt>
   14ad0:	cmp	r0, #1
   14ad4:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14ad8:	vldr	d0, [sp, #8]
   14adc:	mov	r2, r5
   14ae0:	mov	r1, r7
   14ae4:	mov	r0, r6
   14ae8:	bl	13cd4 <table_set_ldouble@@Base>
   14aec:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14af0:	add	r2, sp, #8
   14af4:	ldr	r1, [pc, #232]	; 14be4 <table_cell_from_buffer@@Base+0x554>
   14af8:	mov	r0, r4
   14afc:	bl	11c08 <__isoc99_sscanf@plt>
   14b00:	cmp	r0, #1
   14b04:	mov	r3, r0
   14b08:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14b0c:	ldr	r4, [sp, #8]
   14b10:	cmp	r4, #0
   14b14:	beq	14b2c <table_cell_from_buffer@@Base+0x49c>
   14b18:	mov	r2, r5
   14b1c:	mov	r1, r7
   14b20:	mov	r0, r6
   14b24:	bl	13a50 <table_set_bool@@Base>
   14b28:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14b2c:	mov	r3, r4
   14b30:	mov	r2, r5
   14b34:	mov	r1, r7
   14b38:	mov	r0, r6
   14b3c:	bl	13a50 <table_set_bool@@Base>
   14b40:	mov	r0, r4
   14b44:	add	sp, sp, #268	; 0x10c
   14b48:	pop	{r4, r5, r6, r7, pc}
   14b4c:	add	r2, sp, #8
   14b50:	ldr	r1, [pc, #196]	; 14c1c <table_cell_from_buffer@@Base+0x58c>
   14b54:	mov	r0, r4
   14b58:	bl	11c08 <__isoc99_sscanf@plt>
   14b5c:	cmp	r0, #1
   14b60:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14b64:	ldrb	r3, [sp, #8]
   14b68:	mov	r2, r5
   14b6c:	mov	r1, r7
   14b70:	mov	r0, r6
   14b74:	bl	13d0c <table_set_char@@Base>
   14b78:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14b7c:	add	r2, sp, #8
   14b80:	ldr	r1, [pc, #148]	; 14c1c <table_cell_from_buffer@@Base+0x58c>
   14b84:	mov	r0, r4
   14b88:	bl	11c08 <__isoc99_sscanf@plt>
   14b8c:	cmp	r0, #1
   14b90:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14b94:	ldrb	r3, [sp, #8]
   14b98:	mov	r2, r5
   14b9c:	mov	r1, r7
   14ba0:	mov	r0, r6
   14ba4:	bl	13d30 <table_set_uchar@@Base>
   14ba8:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14bac:	add	r2, sp, #8
   14bb0:	ldr	r1, [pc, #104]	; 14c20 <table_cell_from_buffer@@Base+0x590>
   14bb4:	mov	r0, r4
   14bb8:	bl	11c08 <__isoc99_sscanf@plt>
   14bbc:	cmp	r0, #1
   14bc0:	bne	14bdc <table_cell_from_buffer@@Base+0x54c>
   14bc4:	ldr	r3, [sp, #8]
   14bc8:	mov	r2, r5
   14bcc:	mov	r1, r7
   14bd0:	mov	r0, r6
   14bd4:	bl	13d54 <table_set_ptr@@Base>
   14bd8:	b	14748 <table_cell_from_buffer@@Base+0xb8>
   14bdc:	mvn	r4, #0
   14be0:	b	14b40 <table_cell_from_buffer@@Base+0x4b0>
   14be4:	andeq	r5, r1, fp, lsl #4
   14be8:	andeq	r5, r1, r4, lsr #5
   14bec:	ldrdeq	r5, [r1], -r5	; <UNPREDICTABLE>
   14bf0:	ldrdeq	r5, [r1], -sl
   14bf4:			; <UNDEFINED> instruction: 0x000152b1
   14bf8:			; <UNDEFINED> instruction: 0x000152b5
   14bfc:	andeq	r5, r1, r7, lsr #5
   14c00:	andeq	r5, r1, ip, lsr #5
   14c04:			; <UNDEFINED> instruction: 0x000152b9
   14c08:			; <UNDEFINED> instruction: 0x000152bd
   14c0c:	andeq	r5, r1, r1, asr #5
   14c10:	andeq	r5, r1, r4, asr #5
   14c14:	andeq	r5, r1, r7, asr #5
   14c18:	andeq	r5, r1, fp, asr #5
   14c1c:	andeq	r5, r1, pc, asr #5
   14c20:	ldrdeq	r5, [r1], -r2

00014c24 <table_get_cell_ptr@@Base>:
   14c24:	push	{r4, lr}
   14c28:	mov	r4, r2
   14c2c:	bl	13754 <table_get_row_ptr@@Base>
   14c30:	ldr	r0, [r0]
   14c34:	add	r0, r0, r4, lsl #2
   14c38:	pop	{r4, pc}

00014c3c <table_cell_init@@Base>:
   14c3c:	push	{r4, lr}
   14c40:	bl	14c24 <table_get_cell_ptr@@Base>
   14c44:	mov	r3, #0
   14c48:	str	r3, [r0]
   14c4c:	pop	{r4, pc}

00014c50 <table_cell_destroy@@Base>:
   14c50:	push	{r4, r5, r6, lr}
   14c54:	mov	r6, r1
   14c58:	mov	r1, r2
   14c5c:	mov	r5, r0
   14c60:	mov	r4, r2
   14c64:	bl	12d30 <table_get_column_data_type@@Base>
   14c68:	cmp	r0, #23
   14c6c:	popeq	{r4, r5, r6, pc}
   14c70:	mov	r2, r4
   14c74:	mov	r1, r6
   14c78:	mov	r0, r5
   14c7c:	bl	14c24 <table_get_cell_ptr@@Base>
   14c80:	ldr	r0, [r0]
   14c84:	cmp	r0, #0
   14c88:	popeq	{r4, r5, r6, pc}
   14c8c:	pop	{r4, r5, r6, lr}
   14c90:	b	11b90 <free@plt>

00014c94 <table_cell_nullify@@Base>:
   14c94:	push	{r4, lr}
   14c98:	bl	14c24 <table_get_cell_ptr@@Base>
   14c9c:	mov	r4, r0
   14ca0:	ldr	r0, [r0]
   14ca4:	cmp	r0, #0
   14ca8:	beq	14cb8 <table_cell_nullify@@Base+0x24>
   14cac:	bl	11b90 <free@plt>
   14cb0:	mov	r3, #0
   14cb4:	str	r3, [r4]
   14cb8:	mov	r0, #0
   14cbc:	pop	{r4, pc}
   14cc0:	subs	r2, r1, #1
   14cc4:	bxeq	lr
   14cc8:	bcc	14ea0 <table_cell_nullify@@Base+0x20c>
   14ccc:	cmp	r0, r1
   14cd0:	bls	14e84 <table_cell_nullify@@Base+0x1f0>
   14cd4:	tst	r1, r2
   14cd8:	beq	14e90 <table_cell_nullify@@Base+0x1fc>
   14cdc:	clz	r3, r0
   14ce0:	clz	r2, r1
   14ce4:	sub	r3, r2, r3
   14ce8:	rsbs	r3, r3, #31
   14cec:	addne	r3, r3, r3, lsl #1
   14cf0:	mov	r2, #0
   14cf4:	addne	pc, pc, r3, lsl #2
   14cf8:	nop			; (mov r0, r0)
   14cfc:	cmp	r0, r1, lsl #31
   14d00:	adc	r2, r2, r2
   14d04:	subcs	r0, r0, r1, lsl #31
   14d08:	cmp	r0, r1, lsl #30
   14d0c:	adc	r2, r2, r2
   14d10:	subcs	r0, r0, r1, lsl #30
   14d14:	cmp	r0, r1, lsl #29
   14d18:	adc	r2, r2, r2
   14d1c:	subcs	r0, r0, r1, lsl #29
   14d20:	cmp	r0, r1, lsl #28
   14d24:	adc	r2, r2, r2
   14d28:	subcs	r0, r0, r1, lsl #28
   14d2c:	cmp	r0, r1, lsl #27
   14d30:	adc	r2, r2, r2
   14d34:	subcs	r0, r0, r1, lsl #27
   14d38:	cmp	r0, r1, lsl #26
   14d3c:	adc	r2, r2, r2
   14d40:	subcs	r0, r0, r1, lsl #26
   14d44:	cmp	r0, r1, lsl #25
   14d48:	adc	r2, r2, r2
   14d4c:	subcs	r0, r0, r1, lsl #25
   14d50:	cmp	r0, r1, lsl #24
   14d54:	adc	r2, r2, r2
   14d58:	subcs	r0, r0, r1, lsl #24
   14d5c:	cmp	r0, r1, lsl #23
   14d60:	adc	r2, r2, r2
   14d64:	subcs	r0, r0, r1, lsl #23
   14d68:	cmp	r0, r1, lsl #22
   14d6c:	adc	r2, r2, r2
   14d70:	subcs	r0, r0, r1, lsl #22
   14d74:	cmp	r0, r1, lsl #21
   14d78:	adc	r2, r2, r2
   14d7c:	subcs	r0, r0, r1, lsl #21
   14d80:	cmp	r0, r1, lsl #20
   14d84:	adc	r2, r2, r2
   14d88:	subcs	r0, r0, r1, lsl #20
   14d8c:	cmp	r0, r1, lsl #19
   14d90:	adc	r2, r2, r2
   14d94:	subcs	r0, r0, r1, lsl #19
   14d98:	cmp	r0, r1, lsl #18
   14d9c:	adc	r2, r2, r2
   14da0:	subcs	r0, r0, r1, lsl #18
   14da4:	cmp	r0, r1, lsl #17
   14da8:	adc	r2, r2, r2
   14dac:	subcs	r0, r0, r1, lsl #17
   14db0:	cmp	r0, r1, lsl #16
   14db4:	adc	r2, r2, r2
   14db8:	subcs	r0, r0, r1, lsl #16
   14dbc:	cmp	r0, r1, lsl #15
   14dc0:	adc	r2, r2, r2
   14dc4:	subcs	r0, r0, r1, lsl #15
   14dc8:	cmp	r0, r1, lsl #14
   14dcc:	adc	r2, r2, r2
   14dd0:	subcs	r0, r0, r1, lsl #14
   14dd4:	cmp	r0, r1, lsl #13
   14dd8:	adc	r2, r2, r2
   14ddc:	subcs	r0, r0, r1, lsl #13
   14de0:	cmp	r0, r1, lsl #12
   14de4:	adc	r2, r2, r2
   14de8:	subcs	r0, r0, r1, lsl #12
   14dec:	cmp	r0, r1, lsl #11
   14df0:	adc	r2, r2, r2
   14df4:	subcs	r0, r0, r1, lsl #11
   14df8:	cmp	r0, r1, lsl #10
   14dfc:	adc	r2, r2, r2
   14e00:	subcs	r0, r0, r1, lsl #10
   14e04:	cmp	r0, r1, lsl #9
   14e08:	adc	r2, r2, r2
   14e0c:	subcs	r0, r0, r1, lsl #9
   14e10:	cmp	r0, r1, lsl #8
   14e14:	adc	r2, r2, r2
   14e18:	subcs	r0, r0, r1, lsl #8
   14e1c:	cmp	r0, r1, lsl #7
   14e20:	adc	r2, r2, r2
   14e24:	subcs	r0, r0, r1, lsl #7
   14e28:	cmp	r0, r1, lsl #6
   14e2c:	adc	r2, r2, r2
   14e30:	subcs	r0, r0, r1, lsl #6
   14e34:	cmp	r0, r1, lsl #5
   14e38:	adc	r2, r2, r2
   14e3c:	subcs	r0, r0, r1, lsl #5
   14e40:	cmp	r0, r1, lsl #4
   14e44:	adc	r2, r2, r2
   14e48:	subcs	r0, r0, r1, lsl #4
   14e4c:	cmp	r0, r1, lsl #3
   14e50:	adc	r2, r2, r2
   14e54:	subcs	r0, r0, r1, lsl #3
   14e58:	cmp	r0, r1, lsl #2
   14e5c:	adc	r2, r2, r2
   14e60:	subcs	r0, r0, r1, lsl #2
   14e64:	cmp	r0, r1, lsl #1
   14e68:	adc	r2, r2, r2
   14e6c:	subcs	r0, r0, r1, lsl #1
   14e70:	cmp	r0, r1
   14e74:	adc	r2, r2, r2
   14e78:	subcs	r0, r0, r1
   14e7c:	mov	r0, r2
   14e80:	bx	lr
   14e84:	moveq	r0, #1
   14e88:	movne	r0, #0
   14e8c:	bx	lr
   14e90:	clz	r2, r1
   14e94:	rsb	r2, r2, #31
   14e98:	lsr	r0, r0, r2
   14e9c:	bx	lr
   14ea0:	cmp	r0, #0
   14ea4:	mvnne	r0, #0
   14ea8:	b	1510c <table_cell_nullify@@Base+0x478>
   14eac:	cmp	r1, #0
   14eb0:	beq	14ea0 <table_cell_nullify@@Base+0x20c>
   14eb4:	push	{r0, r1, lr}
   14eb8:	bl	14cc0 <table_cell_nullify@@Base+0x2c>
   14ebc:	pop	{r1, r2, lr}
   14ec0:	mul	r3, r2, r0
   14ec4:	sub	r1, r1, r3
   14ec8:	bx	lr
   14ecc:	cmp	r1, #0
   14ed0:	beq	150dc <table_cell_nullify@@Base+0x448>
   14ed4:	eor	ip, r0, r1
   14ed8:	rsbmi	r1, r1, #0
   14edc:	subs	r2, r1, #1
   14ee0:	beq	150a8 <table_cell_nullify@@Base+0x414>
   14ee4:	movs	r3, r0
   14ee8:	rsbmi	r3, r0, #0
   14eec:	cmp	r3, r1
   14ef0:	bls	150b4 <table_cell_nullify@@Base+0x420>
   14ef4:	tst	r1, r2
   14ef8:	beq	150c4 <table_cell_nullify@@Base+0x430>
   14efc:	clz	r2, r3
   14f00:	clz	r0, r1
   14f04:	sub	r2, r0, r2
   14f08:	rsbs	r2, r2, #31
   14f0c:	addne	r2, r2, r2, lsl #1
   14f10:	mov	r0, #0
   14f14:	addne	pc, pc, r2, lsl #2
   14f18:	nop			; (mov r0, r0)
   14f1c:	cmp	r3, r1, lsl #31
   14f20:	adc	r0, r0, r0
   14f24:	subcs	r3, r3, r1, lsl #31
   14f28:	cmp	r3, r1, lsl #30
   14f2c:	adc	r0, r0, r0
   14f30:	subcs	r3, r3, r1, lsl #30
   14f34:	cmp	r3, r1, lsl #29
   14f38:	adc	r0, r0, r0
   14f3c:	subcs	r3, r3, r1, lsl #29
   14f40:	cmp	r3, r1, lsl #28
   14f44:	adc	r0, r0, r0
   14f48:	subcs	r3, r3, r1, lsl #28
   14f4c:	cmp	r3, r1, lsl #27
   14f50:	adc	r0, r0, r0
   14f54:	subcs	r3, r3, r1, lsl #27
   14f58:	cmp	r3, r1, lsl #26
   14f5c:	adc	r0, r0, r0
   14f60:	subcs	r3, r3, r1, lsl #26
   14f64:	cmp	r3, r1, lsl #25
   14f68:	adc	r0, r0, r0
   14f6c:	subcs	r3, r3, r1, lsl #25
   14f70:	cmp	r3, r1, lsl #24
   14f74:	adc	r0, r0, r0
   14f78:	subcs	r3, r3, r1, lsl #24
   14f7c:	cmp	r3, r1, lsl #23
   14f80:	adc	r0, r0, r0
   14f84:	subcs	r3, r3, r1, lsl #23
   14f88:	cmp	r3, r1, lsl #22
   14f8c:	adc	r0, r0, r0
   14f90:	subcs	r3, r3, r1, lsl #22
   14f94:	cmp	r3, r1, lsl #21
   14f98:	adc	r0, r0, r0
   14f9c:	subcs	r3, r3, r1, lsl #21
   14fa0:	cmp	r3, r1, lsl #20
   14fa4:	adc	r0, r0, r0
   14fa8:	subcs	r3, r3, r1, lsl #20
   14fac:	cmp	r3, r1, lsl #19
   14fb0:	adc	r0, r0, r0
   14fb4:	subcs	r3, r3, r1, lsl #19
   14fb8:	cmp	r3, r1, lsl #18
   14fbc:	adc	r0, r0, r0
   14fc0:	subcs	r3, r3, r1, lsl #18
   14fc4:	cmp	r3, r1, lsl #17
   14fc8:	adc	r0, r0, r0
   14fcc:	subcs	r3, r3, r1, lsl #17
   14fd0:	cmp	r3, r1, lsl #16
   14fd4:	adc	r0, r0, r0
   14fd8:	subcs	r3, r3, r1, lsl #16
   14fdc:	cmp	r3, r1, lsl #15
   14fe0:	adc	r0, r0, r0
   14fe4:	subcs	r3, r3, r1, lsl #15
   14fe8:	cmp	r3, r1, lsl #14
   14fec:	adc	r0, r0, r0
   14ff0:	subcs	r3, r3, r1, lsl #14
   14ff4:	cmp	r3, r1, lsl #13
   14ff8:	adc	r0, r0, r0
   14ffc:	subcs	r3, r3, r1, lsl #13
   15000:	cmp	r3, r1, lsl #12
   15004:	adc	r0, r0, r0
   15008:	subcs	r3, r3, r1, lsl #12
   1500c:	cmp	r3, r1, lsl #11
   15010:	adc	r0, r0, r0
   15014:	subcs	r3, r3, r1, lsl #11
   15018:	cmp	r3, r1, lsl #10
   1501c:	adc	r0, r0, r0
   15020:	subcs	r3, r3, r1, lsl #10
   15024:	cmp	r3, r1, lsl #9
   15028:	adc	r0, r0, r0
   1502c:	subcs	r3, r3, r1, lsl #9
   15030:	cmp	r3, r1, lsl #8
   15034:	adc	r0, r0, r0
   15038:	subcs	r3, r3, r1, lsl #8
   1503c:	cmp	r3, r1, lsl #7
   15040:	adc	r0, r0, r0
   15044:	subcs	r3, r3, r1, lsl #7
   15048:	cmp	r3, r1, lsl #6
   1504c:	adc	r0, r0, r0
   15050:	subcs	r3, r3, r1, lsl #6
   15054:	cmp	r3, r1, lsl #5
   15058:	adc	r0, r0, r0
   1505c:	subcs	r3, r3, r1, lsl #5
   15060:	cmp	r3, r1, lsl #4
   15064:	adc	r0, r0, r0
   15068:	subcs	r3, r3, r1, lsl #4
   1506c:	cmp	r3, r1, lsl #3
   15070:	adc	r0, r0, r0
   15074:	subcs	r3, r3, r1, lsl #3
   15078:	cmp	r3, r1, lsl #2
   1507c:	adc	r0, r0, r0
   15080:	subcs	r3, r3, r1, lsl #2
   15084:	cmp	r3, r1, lsl #1
   15088:	adc	r0, r0, r0
   1508c:	subcs	r3, r3, r1, lsl #1
   15090:	cmp	r3, r1
   15094:	adc	r0, r0, r0
   15098:	subcs	r3, r3, r1
   1509c:	cmp	ip, #0
   150a0:	rsbmi	r0, r0, #0
   150a4:	bx	lr
   150a8:	teq	ip, r0
   150ac:	rsbmi	r0, r0, #0
   150b0:	bx	lr
   150b4:	movcc	r0, #0
   150b8:	asreq	r0, ip, #31
   150bc:	orreq	r0, r0, #1
   150c0:	bx	lr
   150c4:	clz	r2, r1
   150c8:	rsb	r2, r2, #31
   150cc:	cmp	ip, #0
   150d0:	lsr	r0, r3, r2
   150d4:	rsbmi	r0, r0, #0
   150d8:	bx	lr
   150dc:	cmp	r0, #0
   150e0:	mvngt	r0, #-2147483648	; 0x80000000
   150e4:	movlt	r0, #-2147483648	; 0x80000000
   150e8:	b	1510c <table_cell_nullify@@Base+0x478>
   150ec:	cmp	r1, #0
   150f0:	beq	150dc <table_cell_nullify@@Base+0x448>
   150f4:	push	{r0, r1, lr}
   150f8:	bl	14ed4 <table_cell_nullify@@Base+0x240>
   150fc:	pop	{r1, r2, lr}
   15100:	mul	r3, r2, r0
   15104:	sub	r1, r1, r3
   15108:	bx	lr
   1510c:	push	{r1, lr}
   15110:	mov	r0, #8
   15114:	bl	11b6c <raise@plt>
   15118:	pop	{r1, pc}

0001511c <__libc_csu_init@@Base>:
   1511c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15120:	mov	r7, r0
   15124:	ldr	r6, [pc, #72]	; 15174 <__libc_csu_init@@Base+0x58>
   15128:	ldr	r5, [pc, #72]	; 15178 <__libc_csu_init@@Base+0x5c>
   1512c:	add	r6, pc, r6
   15130:	add	r5, pc, r5
   15134:	sub	r6, r6, r5
   15138:	mov	r8, r1
   1513c:	mov	r9, r2
   15140:	bl	11b4c <raise@plt-0x20>
   15144:	asrs	r6, r6, #2
   15148:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1514c:	mov	r4, #0
   15150:	add	r4, r4, #1
   15154:	ldr	r3, [r5], #4
   15158:	mov	r2, r9
   1515c:	mov	r1, r8
   15160:	mov	r0, r7
   15164:	blx	r3
   15168:	cmp	r6, r4
   1516c:	bne	15150 <__libc_csu_init@@Base+0x34>
   15170:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15174:	ldrdeq	r0, [r1], -ip
   15178:	ldrdeq	r0, [r1], -r4

0001517c <__libc_csu_fini@@Base>:
   1517c:	bx	lr

Disassembly of section .fini:

00015180 <.fini>:
   15180:	push	{r3, lr}
   15184:	pop	{r3, pc}
