
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

00010e74 <.init>:
   10e74:	push	{r3, lr}
   10e78:	bl	111f8 <_start@@Base+0x3c>
   10e7c:	pop	{r3, pc}

Disassembly of section .plt:

00010e80 <calloc@plt-0x14>:
   10e80:	push	{lr}		; (str lr, [sp, #-4]!)
   10e84:	ldr	lr, [pc, #4]	; 10e90 <calloc@plt-0x4>
   10e88:	add	lr, pc, lr
   10e8c:	ldr	pc, [lr, #8]!
   10e90:	andeq	r3, r1, r0, ror r1

00010e94 <calloc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #77824	; 0x13000
   10e9c:	ldr	pc, [ip, #368]!	; 0x170

00010ea0 <strcmp@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #77824	; 0x13000
   10ea8:	ldr	pc, [ip, #360]!	; 0x168

00010eac <strtol@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #77824	; 0x13000
   10eb4:	ldr	pc, [ip, #352]!	; 0x160

00010eb8 <printf@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #77824	; 0x13000
   10ec0:	ldr	pc, [ip, #344]!	; 0x158

00010ec4 <__isoc99_fscanf@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #77824	; 0x13000
   10ecc:	ldr	pc, [ip, #336]!	; 0x150

00010ed0 <fopen@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #77824	; 0x13000
   10ed8:	ldr	pc, [ip, #328]!	; 0x148

00010edc <free@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #77824	; 0x13000
   10ee4:	ldr	pc, [ip, #320]!	; 0x140

00010ee8 <memcpy@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #77824	; 0x13000
   10ef0:	ldr	pc, [ip, #312]!	; 0x138

00010ef4 <realloc@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #77824	; 0x13000
   10efc:	ldr	pc, [ip, #304]!	; 0x130

00010f00 <strcpy@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #77824	; 0x13000
   10f08:	ldr	pc, [ip, #296]!	; 0x128

00010f0c <puts@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #77824	; 0x13000
   10f14:	ldr	pc, [ip, #288]!	; 0x120

00010f18 <malloc@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #77824	; 0x13000
   10f20:	ldr	pc, [ip, #280]!	; 0x118

00010f24 <__libc_start_main@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #77824	; 0x13000
   10f2c:	ldr	pc, [ip, #272]!	; 0x110

00010f30 <__gmon_start__@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #77824	; 0x13000
   10f38:	ldr	pc, [ip, #264]!	; 0x108

00010f3c <strlen@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #77824	; 0x13000
   10f44:	ldr	pc, [ip, #256]!	; 0x100

00010f48 <setvbuf@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #77824	; 0x13000
   10f50:	ldr	pc, [ip, #248]!	; 0xf8

00010f54 <memset@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #77824	; 0x13000
   10f5c:	ldr	pc, [ip, #240]!	; 0xf0

00010f60 <putchar@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #77824	; 0x13000
   10f68:	ldr	pc, [ip, #232]!	; 0xe8

00010f6c <fclose@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #77824	; 0x13000
   10f74:	ldr	pc, [ip, #224]!	; 0xe0

00010f78 <getline@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #77824	; 0x13000
   10f80:	ldr	pc, [ip, #216]!	; 0xd8

00010f84 <abort@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #77824	; 0x13000
   10f8c:	ldr	pc, [ip, #208]!	; 0xd0

Disassembly of section .text:

00010f90 <main@@Base>:
   10f90:	mov	r3, #0
   10f94:	movw	r1, #16492	; 0x406c
   10f98:	movt	r1, #2
   10f9c:	mov	r2, #2
   10fa0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10fa4:	ldr	r0, [r1]
   10fa8:	mov	r1, r3
   10fac:	strd	r6, [sp, #8]
   10fb0:	strd	r8, [sp, #16]
   10fb4:	str	lr, [sp, #24]
   10fb8:	sub	sp, sp, #36	; 0x24
   10fbc:	bl	10f48 <setvbuf@plt>
   10fc0:	movw	r1, #11920	; 0x2e90
   10fc4:	movt	r1, #1
   10fc8:	movw	r0, #11996	; 0x2edc
   10fcc:	movt	r0, #1
   10fd0:	bl	10ed0 <fopen@plt>
   10fd4:	mov	r7, r0
   10fd8:	bl	125d8 <lista_nova@@Base>
   10fdc:	mov	r3, #0
   10fe0:	mov	r5, r0
   10fe4:	mov	r6, r3
   10fe8:	str	r3, [sp, #4]
   10fec:	str	r3, [sp, #8]
   10ff0:	b	11018 <main@@Base+0x88>
   10ff4:	ldr	r4, [sp, #4]
   10ff8:	mov	r0, r4
   10ffc:	bl	10f3c <strlen@plt>
   11000:	add	r4, r4, r0
   11004:	mov	r2, #0
   11008:	mov	r0, r5
   1100c:	strb	r6, [r4, #-1]
   11010:	ldr	r1, [sp, #4]
   11014:	bl	126a0 <lista_insere@@Base>
   11018:	mov	r2, r7
   1101c:	add	r1, sp, #8
   11020:	add	r0, sp, #4
   11024:	bl	10f78 <getline@plt>
   11028:	cmn	r0, #1
   1102c:	bne	10ff4 <main@@Base+0x64>
   11030:	ldr	r0, [sp, #4]
   11034:	movw	r6, #12060	; 0x2f1c
   11038:	movt	r6, #1
   1103c:	bl	10edc <free@plt>
   11040:	mov	r0, r7
   11044:	bl	10f6c <fclose@plt>
   11048:	movw	r1, #12012	; 0x2eec
   1104c:	movt	r1, #1
   11050:	mov	r0, r5
   11054:	bl	114fc <carrega_rotas@@Base>
   11058:	mov	r9, r0
   1105c:	movw	r0, #12024	; 0x2ef8
   11060:	movt	r0, #1
   11064:	bl	10f0c <puts@plt>
   11068:	movw	r1, #11920	; 0x2e90
   1106c:	movt	r1, #1
   11070:	movw	r0, #12044	; 0x2f0c
   11074:	movt	r0, #1
   11078:	bl	10ed0 <fopen@plt>
   1107c:	mov	r7, r0
   11080:	bl	125d8 <lista_nova@@Base>
   11084:	mov	r4, r0
   11088:	bl	125d8 <lista_nova@@Base>
   1108c:	mov	r8, r0
   11090:	b	110a8 <main@@Base+0x118>
   11094:	bl	126a0 <lista_insere@@Base>
   11098:	mov	r2, #0
   1109c:	add	r1, sp, #20
   110a0:	mov	r0, r8
   110a4:	bl	126a0 <lista_insere@@Base>
   110a8:	add	r2, sp, #12
   110ac:	mov	r1, r6
   110b0:	add	r3, sp, #20
   110b4:	mov	r0, r7
   110b8:	bl	10ec4 <__isoc99_fscanf@plt>
   110bc:	cmp	r0, #2
   110c0:	mov	r2, #0
   110c4:	add	r1, sp, #12
   110c8:	mov	r0, r4
   110cc:	beq	11094 <main@@Base+0x104>
   110d0:	mov	r3, #5
   110d4:	mov	r2, r5
   110d8:	mov	r1, r8
   110dc:	bl	112ac <proximas_n_chegadas@@Base>
   110e0:	cmp	r0, #1
   110e4:	beq	110f4 <main@@Base+0x164>
   110e8:	movw	r0, #12068	; 0x2f24
   110ec:	movt	r0, #1
   110f0:	bl	10f0c <puts@plt>
   110f4:	mov	r0, r4
   110f8:	bl	12618 <lista_apaga@@Base>
   110fc:	mov	r0, r8
   11100:	bl	12618 <lista_apaga@@Base>
   11104:	mov	r0, r7
   11108:	bl	10f6c <fclose@plt>
   1110c:	movw	r0, #12096	; 0x2f40
   11110:	movt	r0, #1
   11114:	bl	10f0c <puts@plt>
   11118:	movw	r2, #12116	; 0x2f54
   1111c:	movt	r2, #1
   11120:	mov	r1, r5
   11124:	mov	r0, r9
   11128:	bl	1140c <pesquisa_destinos@@Base>
   1112c:	subs	r6, r0, #0
   11130:	beq	111a4 <main@@Base+0x214>
   11134:	bl	12678 <lista_tamanho@@Base>
   11138:	mov	r2, r0
   1113c:	movw	r1, #12116	; 0x2f54
   11140:	movt	r1, #1
   11144:	movw	r0, #12168	; 0x2f88
   11148:	movt	r0, #1
   1114c:	bl	10eb8 <printf@plt>
   11150:	ldr	r4, [r6]
   11154:	cmp	r4, #0
   11158:	beq	11170 <main@@Base+0x1e0>
   1115c:	ldr	r0, [r4]
   11160:	bl	10f0c <puts@plt>
   11164:	ldr	r4, [r4, #4]
   11168:	cmp	r4, #0
   1116c:	bne	1115c <main@@Base+0x1cc>
   11170:	mov	r0, r6
   11174:	bl	12618 <lista_apaga@@Base>
   11178:	mov	r0, r9
   1117c:	bl	11664 <grafo_apaga@@Base>
   11180:	mov	r0, r5
   11184:	bl	12618 <lista_apaga@@Base>
   11188:	mov	r0, #0
   1118c:	add	sp, sp, #36	; 0x24
   11190:	ldrd	r4, [sp]
   11194:	ldrd	r6, [sp, #8]
   11198:	ldrd	r8, [sp, #16]
   1119c:	add	sp, sp, #24
   111a0:	pop	{pc}		; (ldr pc, [sp], #4)
   111a4:	movw	r1, #12116	; 0x2f54
   111a8:	movt	r1, #1
   111ac:	movw	r0, #12128	; 0x2f60
   111b0:	movt	r0, #1
   111b4:	bl	10eb8 <printf@plt>
   111b8:	b	11178 <main@@Base+0x1e8>

000111bc <_start@@Base>:
   111bc:	mov	fp, #0
   111c0:	mov	lr, #0
   111c4:	pop	{r1}		; (ldr r1, [sp], #4)
   111c8:	mov	r2, sp
   111cc:	push	{r2}		; (str r2, [sp, #-4]!)
   111d0:	push	{r0}		; (str r0, [sp, #-4]!)
   111d4:	ldr	ip, [pc, #16]	; 111ec <_start@@Base+0x30>
   111d8:	push	{ip}		; (str ip, [sp, #-4]!)
   111dc:	ldr	r0, [pc, #12]	; 111f0 <_start@@Base+0x34>
   111e0:	ldr	r3, [pc, #12]	; 111f4 <_start@@Base+0x38>
   111e4:	bl	10f24 <__libc_start_main@plt>
   111e8:	bl	10f84 <abort@plt>
   111ec:	andeq	r2, r1, r4, ror lr
   111f0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   111f4:	andeq	r2, r1, r4, lsl lr
   111f8:	ldr	r3, [pc, #20]	; 11214 <_start@@Base+0x58>
   111fc:	ldr	r2, [pc, #20]	; 11218 <_start@@Base+0x5c>
   11200:	add	r3, pc, r3
   11204:	ldr	r2, [r3, r2]
   11208:	cmp	r2, #0
   1120c:	bxeq	lr
   11210:	b	10f30 <__gmon_start__@plt>
   11214:	strdeq	r2, [r1], -r8
   11218:	andeq	r0, r0, r0, rrx
   1121c:	ldr	r0, [pc, #24]	; 1123c <_start@@Base+0x80>
   11220:	ldr	r3, [pc, #24]	; 11240 <_start@@Base+0x84>
   11224:	cmp	r3, r0
   11228:	bxeq	lr
   1122c:	ldr	r3, [pc, #16]	; 11244 <_start@@Base+0x88>
   11230:	cmp	r3, #0
   11234:	bxeq	lr
   11238:	bx	r3
   1123c:	andeq	r4, r2, ip, rrx
   11240:	andeq	r4, r2, ip, rrx
   11244:	andeq	r0, r0, r0
   11248:	ldr	r0, [pc, #36]	; 11274 <_start@@Base+0xb8>
   1124c:	ldr	r1, [pc, #36]	; 11278 <_start@@Base+0xbc>
   11250:	sub	r1, r1, r0
   11254:	asr	r1, r1, #2
   11258:	add	r1, r1, r1, lsr #31
   1125c:	asrs	r1, r1, #1
   11260:	bxeq	lr
   11264:	ldr	r3, [pc, #16]	; 1127c <_start@@Base+0xc0>
   11268:	cmp	r3, #0
   1126c:	bxeq	lr
   11270:	bx	r3
   11274:	andeq	r4, r2, ip, rrx
   11278:	andeq	r4, r2, ip, rrx
   1127c:	andeq	r0, r0, r0
   11280:	push	{r4, lr}
   11284:	ldr	r4, [pc, #24]	; 112a4 <_start@@Base+0xe8>
   11288:	ldrb	r3, [r4]
   1128c:	cmp	r3, #0
   11290:	popne	{r4, pc}
   11294:	bl	1121c <_start@@Base+0x60>
   11298:	mov	r3, #1
   1129c:	strb	r3, [r4]
   112a0:	pop	{r4, pc}
   112a4:	andeq	r4, r2, r0, ror r0
   112a8:	b	11248 <_start@@Base+0x8c>

000112ac <proximas_n_chegadas@@Base>:
   112ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   112b0:	ldr	r4, [r2]
   112b4:	strd	r6, [sp, #8]
   112b8:	mov	r7, r3
   112bc:	strd	sl, [sp, #24]
   112c0:	mov	fp, r0
   112c4:	mov	sl, r1
   112c8:	ldr	r0, [r2, #8]
   112cc:	strd	r8, [sp, #16]
   112d0:	mov	r9, r2
   112d4:	str	lr, [sp, #32]
   112d8:	sub	sp, sp, #4
   112dc:	lsl	r0, r0, #2
   112e0:	bl	10f18 <malloc@plt>
   112e4:	cmp	r4, #0
   112e8:	mov	r8, r0
   112ec:	beq	11314 <proximas_n_chegadas@@Base+0x68>
   112f0:	sub	r5, r0, #4
   112f4:	mov	r0, #200	; 0xc8
   112f8:	bl	10f18 <malloc@plt>
   112fc:	str	r0, [r5, #4]!
   11300:	ldr	r1, [r4]
   11304:	bl	10f00 <strcpy@plt>
   11308:	ldr	r4, [r4, #4]
   1130c:	cmp	r4, #0
   11310:	bne	112f4 <proximas_n_chegadas@@Base+0x48>
   11314:	ldr	r0, [fp, #8]
   11318:	bl	12068 <heap_nova@@Base>
   1131c:	ldr	r4, [fp]
   11320:	mov	r6, r0
   11324:	ldr	r5, [sl]
   11328:	cmp	r4, #0
   1132c:	beq	11374 <proximas_n_chegadas@@Base+0xc8>
   11330:	mov	r2, #10
   11334:	mov	r1, #0
   11338:	ldr	r0, [r5]
   1133c:	bl	10eac <strtol@plt>
   11340:	ldr	sl, [r8, r0, lsl #2]
   11344:	mov	r2, #10
   11348:	mov	r1, #0
   1134c:	ldr	r0, [r4]
   11350:	bl	10eac <strtol@plt>
   11354:	mov	r2, r0
   11358:	mov	r0, r6
   1135c:	mov	r1, sl
   11360:	bl	121e0 <heap_insere@@Base>
   11364:	ldr	r4, [r4, #4]
   11368:	ldr	r5, [r5, #4]
   1136c:	cmp	r4, #0
   11370:	bne	11330 <proximas_n_chegadas@@Base+0x84>
   11374:	ldr	r5, [r9, #8]
   11378:	cmp	r5, #0
   1137c:	ble	11398 <proximas_n_chegadas@@Base+0xec>
   11380:	add	r5, r8, r5, lsl #2
   11384:	mov	r4, r8
   11388:	ldr	r0, [r4], #4
   1138c:	bl	10edc <free@plt>
   11390:	cmp	r5, r4
   11394:	bne	11388 <proximas_n_chegadas@@Base+0xdc>
   11398:	mov	r0, r8
   1139c:	bl	10edc <free@plt>
   113a0:	cmp	r7, #0
   113a4:	ble	113e4 <proximas_n_chegadas@@Base+0x138>
   113a8:	movw	r8, #11908	; 0x2e84
   113ac:	movt	r8, #1
   113b0:	mov	r4, #0
   113b4:	mov	r0, r6
   113b8:	add	r4, r4, #1
   113bc:	bl	12320 <heap_remove@@Base>
   113c0:	mov	r2, r0
   113c4:	mov	r5, r0
   113c8:	mov	r1, r4
   113cc:	mov	r0, r8
   113d0:	bl	10eb8 <printf@plt>
   113d4:	mov	r0, r5
   113d8:	bl	10edc <free@plt>
   113dc:	cmp	r4, r7
   113e0:	bne	113b4 <proximas_n_chegadas@@Base+0x108>
   113e4:	mov	r0, r6
   113e8:	bl	120d0 <heap_apaga@@Base>
   113ec:	mov	r0, #1
   113f0:	add	sp, sp, #4
   113f4:	ldrd	r4, [sp]
   113f8:	ldrd	r6, [sp, #8]
   113fc:	ldrd	r8, [sp, #16]
   11400:	ldrd	sl, [sp, #24]
   11404:	add	sp, sp, #32
   11408:	pop	{pc}		; (ldr pc, [sp], #4)

0001140c <pesquisa_destinos@@Base>:
   1140c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11410:	strd	r6, [sp, #8]
   11414:	mov	r7, r0
   11418:	mov	r6, r2
   1141c:	strd	r8, [sp, #16]
   11420:	mov	r9, r1
   11424:	str	sl, [sp, #24]
   11428:	str	lr, [sp, #28]
   1142c:	bl	125d8 <lista_nova@@Base>
   11430:	ldr	r4, [r9]
   11434:	mov	r8, r0
   11438:	cmp	r4, #0
   1143c:	moveq	r5, r4
   11440:	beq	11470 <pesquisa_destinos@@Base+0x64>
   11444:	mov	r5, #0
   11448:	b	1145c <pesquisa_destinos@@Base+0x50>
   1144c:	ldr	r4, [r4, #4]
   11450:	add	r5, r5, #1
   11454:	cmp	r4, #0
   11458:	beq	11470 <pesquisa_destinos@@Base+0x64>
   1145c:	mov	r1, r6
   11460:	ldr	r0, [r4]
   11464:	bl	10ea0 <strcmp@plt>
   11468:	cmp	r0, #0
   1146c:	bne	1144c <pesquisa_destinos@@Base+0x40>
   11470:	mov	r0, r7
   11474:	mov	r1, r5
   11478:	bl	11a40 <v_sucessores@@Base>
   1147c:	ldr	r3, [r0]
   11480:	mov	r7, r0
   11484:	cmp	r3, #0
   11488:	ble	114d8 <pesquisa_destinos@@Base+0xcc>
   1148c:	mov	r6, #0
   11490:	mov	r4, #0
   11494:	ldr	r5, [r9]
   11498:	b	114a0 <pesquisa_destinos@@Base+0x94>
   1149c:	ldr	r5, [r5, #4]
   114a0:	mov	r1, r6
   114a4:	mov	r0, r7
   114a8:	bl	12b10 <vetor_elemento@@Base>
   114ac:	cmp	r0, r4
   114b0:	add	r4, r4, #1
   114b4:	bgt	1149c <pesquisa_destinos@@Base+0x90>
   114b8:	mov	r2, #0
   114bc:	mov	r0, r8
   114c0:	ldr	r1, [r5]
   114c4:	bl	126a0 <lista_insere@@Base>
   114c8:	ldr	r3, [r7]
   114cc:	add	r6, r6, #1
   114d0:	cmp	r3, r6
   114d4:	bgt	11490 <pesquisa_destinos@@Base+0x84>
   114d8:	mov	r0, r7
   114dc:	bl	12a90 <vetor_apaga@@Base>
   114e0:	mov	r0, r8
   114e4:	ldrd	r4, [sp]
   114e8:	ldrd	r6, [sp, #8]
   114ec:	ldrd	r8, [sp, #16]
   114f0:	ldr	sl, [sp, #24]
   114f4:	add	sp, sp, #28
   114f8:	pop	{pc}		; (ldr pc, [sp], #4)

000114fc <carrega_rotas@@Base>:
   114fc:	strd	r4, [sp, #-16]!
   11500:	subs	r4, r1, #0
   11504:	str	r6, [sp, #8]
   11508:	str	lr, [sp, #12]
   1150c:	sub	sp, sp, #8
   11510:	beq	11584 <carrega_rotas@@Base+0x88>
   11514:	mov	r5, r0
   11518:	movw	r1, #11920	; 0x2e90
   1151c:	movt	r1, #1
   11520:	mov	r0, r4
   11524:	bl	10ed0 <fopen@plt>
   11528:	subs	r6, r0, #0
   1152c:	beq	1159c <carrega_rotas@@Base+0xa0>
   11530:	mov	r0, r5
   11534:	bl	12678 <lista_tamanho@@Base>
   11538:	mov	r1, #0
   1153c:	bl	115f8 <grafo_novo@@Base>
   11540:	subs	r4, r0, #0
   11544:	beq	115b4 <carrega_rotas@@Base+0xb8>
   11548:	movw	r5, #11988	; 0x2ed4
   1154c:	movt	r5, #1
   11550:	b	1155c <carrega_rotas@@Base+0x60>
   11554:	ldm	sp, {r1, r2}
   11558:	bl	11708 <grafo_adiciona@@Base>
   1155c:	add	r3, sp, #4
   11560:	mov	r2, sp
   11564:	mov	r1, r5
   11568:	mov	r0, r6
   1156c:	bl	10ec4 <__isoc99_fscanf@plt>
   11570:	cmp	r0, #2
   11574:	mov	r0, r4
   11578:	beq	11554 <carrega_rotas@@Base+0x58>
   1157c:	mov	r0, r6
   11580:	bl	10f6c <fclose@plt>
   11584:	mov	r0, r4
   11588:	add	sp, sp, #8
   1158c:	ldrd	r4, [sp]
   11590:	ldr	r6, [sp, #8]
   11594:	add	sp, sp, #12
   11598:	pop	{pc}		; (ldr pc, [sp], #4)
   1159c:	mov	r1, r4
   115a0:	movw	r0, #11924	; 0x2e94
   115a4:	movt	r0, #1
   115a8:	mov	r4, r6
   115ac:	bl	10eb8 <printf@plt>
   115b0:	b	11584 <carrega_rotas@@Base+0x88>
   115b4:	movw	r0, #11960	; 0x2eb8
   115b8:	movt	r0, #1
   115bc:	bl	10f0c <puts@plt>
   115c0:	b	11584 <carrega_rotas@@Base+0x88>

000115c4 <cria_no@@Base>:
   115c4:	str	r4, [sp, #-8]!
   115c8:	mov	r4, r0
   115cc:	mov	r0, #8
   115d0:	str	lr, [sp, #4]
   115d4:	bl	10f18 <malloc@plt>
   115d8:	cmp	r0, #0
   115dc:	beq	115ec <cria_no@@Base+0x28>
   115e0:	mov	r3, #0
   115e4:	str	r4, [r0]
   115e8:	str	r3, [r0, #4]
   115ec:	ldr	r4, [sp]
   115f0:	add	sp, sp, #4
   115f4:	pop	{pc}		; (ldr pc, [sp], #4)

000115f8 <grafo_novo@@Base>:
   115f8:	strd	r4, [sp, #-16]!
   115fc:	mov	r5, r0
   11600:	mov	r0, #12
   11604:	str	r6, [sp, #8]
   11608:	mov	r6, r1
   1160c:	str	lr, [sp, #12]
   11610:	bl	10f18 <malloc@plt>
   11614:	subs	r4, r0, #0
   11618:	beq	11640 <grafo_novo@@Base+0x48>
   1161c:	mov	r0, r5
   11620:	mov	r1, #8
   11624:	str	r6, [r4]
   11628:	str	r5, [r4, #4]
   1162c:	bl	10e94 <calloc@plt>
   11630:	cmp	r0, #0
   11634:	mov	r3, r0
   11638:	str	r0, [r4, #8]
   1163c:	beq	11654 <grafo_novo@@Base+0x5c>
   11640:	mov	r0, r4
   11644:	ldrd	r4, [sp]
   11648:	ldr	r6, [sp, #8]
   1164c:	add	sp, sp, #12
   11650:	pop	{pc}		; (ldr pc, [sp], #4)
   11654:	mov	r0, r4
   11658:	mov	r4, r3
   1165c:	bl	10edc <free@plt>
   11660:	b	11640 <grafo_novo@@Base+0x48>

00011664 <grafo_apaga@@Base>:
   11664:	strd	r4, [sp, #-16]!
   11668:	subs	r5, r0, #0
   1166c:	str	r6, [sp, #8]
   11670:	str	lr, [sp, #12]
   11674:	beq	116f8 <grafo_apaga@@Base+0x94>
   11678:	ldr	r2, [r5, #8]
   1167c:	cmp	r2, #0
   11680:	beq	116e0 <grafo_apaga@@Base+0x7c>
   11684:	ldr	r1, [r5, #4]
   11688:	cmp	r1, #0
   1168c:	movgt	r6, #0
   11690:	ble	116d8 <grafo_apaga@@Base+0x74>
   11694:	lsl	r4, r6, #3
   11698:	add	r3, r2, r4
   1169c:	ldr	r0, [r3, #4]
   116a0:	cmp	r0, #0
   116a4:	beq	116cc <grafo_apaga@@Base+0x68>
   116a8:	ldr	r2, [r0, #4]
   116ac:	str	r2, [r3, #4]
   116b0:	bl	10edc <free@plt>
   116b4:	ldr	r2, [r5, #8]
   116b8:	add	r3, r2, r4
   116bc:	ldr	r0, [r3, #4]
   116c0:	cmp	r0, #0
   116c4:	bne	116a8 <grafo_apaga@@Base+0x44>
   116c8:	ldr	r1, [r5, #4]
   116cc:	add	r6, r6, #1
   116d0:	cmp	r6, r1
   116d4:	blt	11694 <grafo_apaga@@Base+0x30>
   116d8:	mov	r0, r2
   116dc:	bl	10edc <free@plt>
   116e0:	mov	r0, r5
   116e4:	ldrd	r4, [sp]
   116e8:	ldr	r6, [sp, #8]
   116ec:	ldr	lr, [sp, #12]
   116f0:	add	sp, sp, #16
   116f4:	b	10edc <free@plt>
   116f8:	ldrd	r4, [sp]
   116fc:	ldr	r6, [sp, #8]
   11700:	add	sp, sp, #12
   11704:	pop	{pc}		; (ldr pc, [sp], #4)

00011708 <grafo_adiciona@@Base>:
   11708:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1170c:	strd	r6, [sp, #8]
   11710:	subs	r6, r0, #0
   11714:	strd	r8, [sp, #16]
   11718:	str	sl, [sp, #24]
   1171c:	str	lr, [sp, #28]
   11720:	beq	1179c <grafo_adiciona@@Base+0x94>
   11724:	ldr	r8, [r6, #8]
   11728:	add	r9, r8, r1, lsl #3
   1172c:	ldr	r5, [r9, #4]
   11730:	cmp	r5, #0
   11734:	beq	11764 <grafo_adiciona@@Base+0x5c>
   11738:	ldr	r3, [r5]
   1173c:	cmp	r2, r3
   11740:	beq	1179c <grafo_adiciona@@Base+0x94>
   11744:	mov	r3, r5
   11748:	b	11758 <grafo_adiciona@@Base+0x50>
   1174c:	ldr	ip, [r3]
   11750:	cmp	r2, ip
   11754:	beq	1179c <grafo_adiciona@@Base+0x94>
   11758:	ldr	r3, [r3, #4]
   1175c:	cmp	r3, #0
   11760:	bne	1174c <grafo_adiciona@@Base+0x44>
   11764:	mov	r0, #8
   11768:	mov	r4, r2
   1176c:	mov	r7, r1
   11770:	bl	10f18 <malloc@plt>
   11774:	cmp	r0, #0
   11778:	beq	117f0 <grafo_adiciona@@Base+0xe8>
   1177c:	ldr	r3, [r8, r7, lsl #3]
   11780:	strd	r4, [r0]
   11784:	ldr	r2, [r6]
   11788:	str	r0, [r9, #4]
   1178c:	add	r3, r3, #1
   11790:	cmp	r2, #0
   11794:	str	r3, [r8, r7, lsl #3]
   11798:	beq	117b4 <grafo_adiciona@@Base+0xac>
   1179c:	ldrd	r4, [sp]
   117a0:	ldrd	r6, [sp, #8]
   117a4:	ldrd	r8, [sp, #16]
   117a8:	ldr	sl, [sp, #24]
   117ac:	add	sp, sp, #28
   117b0:	pop	{pc}		; (ldr pc, [sp], #4)
   117b4:	mov	r0, #8
   117b8:	bl	10f18 <malloc@plt>
   117bc:	add	r2, r8, r4, lsl #3
   117c0:	cmp	r0, #0
   117c4:	ldr	r1, [r2, #4]
   117c8:	beq	117e8 <grafo_adiciona@@Base+0xe0>
   117cc:	ldr	r3, [r8, r4, lsl #3]
   117d0:	str	r7, [r0]
   117d4:	str	r1, [r0, #4]
   117d8:	str	r0, [r2, #4]
   117dc:	add	r3, r3, #1
   117e0:	str	r3, [r8, r4, lsl #3]
   117e4:	b	1179c <grafo_adiciona@@Base+0x94>
   117e8:	str	r1, [r0, #4]
   117ec:	udf	#0
   117f0:	str	r5, [r0, #4]
   117f4:	udf	#0

000117f8 <grafo_remove@@Base>:
   117f8:	strd	r4, [sp, #-16]!
   117fc:	str	r6, [sp, #8]
   11800:	subs	r6, r0, #0
   11804:	str	lr, [sp, #12]
   11808:	beq	118bc <grafo_remove@@Base+0xc4>
   1180c:	ldr	ip, [r6, #8]
   11810:	add	ip, ip, r1, lsl #3
   11814:	ldr	lr, [ip, #4]
   11818:	cmp	lr, #0
   1181c:	beq	118bc <grafo_remove@@Base+0xc4>
   11820:	mov	r4, r2
   11824:	ldrd	r2, [lr]
   11828:	mov	r5, r1
   1182c:	cmp	r2, r4
   11830:	beq	1191c <grafo_remove@@Base+0x124>
   11834:	cmp	r3, #0
   11838:	beq	1185c <grafo_remove@@Base+0x64>
   1183c:	ldr	r2, [r3]
   11840:	cmp	r4, r2
   11844:	bne	118dc <grafo_remove@@Base+0xe4>
   11848:	mov	r0, r3
   1184c:	mov	r3, lr
   11850:	ldr	r2, [r0, #4]
   11854:	str	r2, [r3, #4]
   11858:	bl	10edc <free@plt>
   1185c:	ldr	r3, [r6]
   11860:	cmp	r3, #0
   11864:	bne	118bc <grafo_remove@@Base+0xc4>
   11868:	ldr	r2, [r6, #8]
   1186c:	add	r4, r2, r4, lsl #3
   11870:	ldr	r2, [r4, #4]
   11874:	ldm	r2, {r1, r3}
   11878:	cmp	r1, r5
   1187c:	moveq	r0, r2
   11880:	streq	r3, [r4, #4]
   11884:	beq	11908 <grafo_remove@@Base+0x110>
   11888:	cmp	r3, #0
   1188c:	beq	118bc <grafo_remove@@Base+0xc4>
   11890:	ldr	r1, [r3]
   11894:	cmp	r1, r5
   11898:	bne	118b0 <grafo_remove@@Base+0xb8>
   1189c:	b	118f8 <grafo_remove@@Base+0x100>
   118a0:	ldr	r2, [r0]
   118a4:	cmp	r2, r5
   118a8:	beq	11900 <grafo_remove@@Base+0x108>
   118ac:	mov	r3, r0
   118b0:	ldr	r0, [r3, #4]
   118b4:	cmp	r0, #0
   118b8:	bne	118a0 <grafo_remove@@Base+0xa8>
   118bc:	ldrd	r4, [sp]
   118c0:	ldr	r6, [sp, #8]
   118c4:	add	sp, sp, #12
   118c8:	pop	{pc}		; (ldr pc, [sp], #4)
   118cc:	ldr	ip, [r0]
   118d0:	cmp	ip, r4
   118d4:	beq	11850 <grafo_remove@@Base+0x58>
   118d8:	mov	r3, r0
   118dc:	ldr	r0, [r3, #4]
   118e0:	cmp	r0, #0
   118e4:	bne	118cc <grafo_remove@@Base+0xd4>
   118e8:	ldr	r3, [r6]
   118ec:	cmp	r3, #0
   118f0:	bne	118bc <grafo_remove@@Base+0xc4>
   118f4:	b	11868 <grafo_remove@@Base+0x70>
   118f8:	mov	r0, r3
   118fc:	mov	r3, r2
   11900:	ldr	r2, [r0, #4]
   11904:	str	r2, [r3, #4]
   11908:	ldrd	r4, [sp]
   1190c:	ldr	r6, [sp, #8]
   11910:	ldr	lr, [sp, #12]
   11914:	add	sp, sp, #16
   11918:	b	10edc <free@plt>
   1191c:	mov	r0, lr
   11920:	str	r3, [ip, #4]
   11924:	bl	10edc <free@plt>
   11928:	ldr	r3, [r6]
   1192c:	cmp	r3, #0
   11930:	bne	118bc <grafo_remove@@Base+0xc4>
   11934:	b	11868 <grafo_remove@@Base+0x70>

00011938 <grafo_aresta@@Base>:
   11938:	cmp	r0, #0
   1193c:	beq	11984 <grafo_aresta@@Base+0x4c>
   11940:	ldr	r3, [r0, #8]
   11944:	add	r3, r3, r1, lsl #3
   11948:	ldr	r0, [r3, #4]
   1194c:	cmp	r0, #0
   11950:	beq	11984 <grafo_aresta@@Base+0x4c>
   11954:	ldr	r3, [r0]
   11958:	cmp	r2, r3
   1195c:	bne	11970 <grafo_aresta@@Base+0x38>
   11960:	b	11980 <grafo_aresta@@Base+0x48>
   11964:	ldr	r3, [r0]
   11968:	cmp	r3, r2
   1196c:	beq	11980 <grafo_aresta@@Base+0x48>
   11970:	ldr	r0, [r0, #4]
   11974:	cmp	r0, #0
   11978:	bne	11964 <grafo_aresta@@Base+0x2c>
   1197c:	bx	lr
   11980:	mov	r0, #1
   11984:	bx	lr

00011988 <grafo_imprime@@Base>:
   11988:	ldr	r3, [r0, #4]
   1198c:	cmp	r3, #0
   11990:	bxle	lr
   11994:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11998:	mov	r5, #0
   1199c:	strd	r6, [sp, #8]
   119a0:	movw	r6, #12220	; 0x2fbc
   119a4:	movt	r6, #1
   119a8:	mov	r7, r0
   119ac:	strd	r8, [sp, #16]
   119b0:	movw	r8, #12208	; 0x2fb0
   119b4:	movt	r8, #1
   119b8:	movw	r9, #12216	; 0x2fb8
   119bc:	movt	r9, #1
   119c0:	str	sl, [sp, #24]
   119c4:	str	lr, [sp, #28]
   119c8:	b	119e4 <grafo_imprime@@Base+0x5c>
   119cc:	mov	r0, #10
   119d0:	add	r5, r5, #1
   119d4:	bl	10f60 <putchar@plt>
   119d8:	ldr	r3, [r7, #4]
   119dc:	cmp	r3, r5
   119e0:	ble	11a28 <grafo_imprime@@Base+0xa0>
   119e4:	ldr	r3, [r7, #8]
   119e8:	mov	r1, r5
   119ec:	mov	r0, r8
   119f0:	add	r3, r3, r5, lsl #3
   119f4:	ldr	r4, [r3, #4]
   119f8:	bl	10eb8 <printf@plt>
   119fc:	cmp	r4, #0
   11a00:	beq	119cc <grafo_imprime@@Base+0x44>
   11a04:	mov	r0, r9
   11a08:	b	11a10 <grafo_imprime@@Base+0x88>
   11a0c:	mov	r0, r6
   11a10:	ldr	r1, [r4]
   11a14:	bl	10eb8 <printf@plt>
   11a18:	ldr	r4, [r4, #4]
   11a1c:	cmp	r4, #0
   11a20:	bne	11a0c <grafo_imprime@@Base+0x84>
   11a24:	b	119cc <grafo_imprime@@Base+0x44>
   11a28:	ldrd	r4, [sp]
   11a2c:	ldrd	r6, [sp, #8]
   11a30:	ldrd	r8, [sp, #16]
   11a34:	ldr	sl, [sp, #24]
   11a38:	add	sp, sp, #28
   11a3c:	pop	{pc}		; (ldr pc, [sp], #4)

00011a40 <v_sucessores@@Base>:
   11a40:	cmp	r0, #0
   11a44:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11a48:	lsrne	r4, r1, #31
   11a4c:	moveq	r4, #1
   11a50:	strd	r6, [sp, #8]
   11a54:	str	r8, [sp, #16]
   11a58:	cmp	r4, #0
   11a5c:	str	lr, [sp, #20]
   11a60:	bne	11b14 <v_sucessores@@Base+0xd4>
   11a64:	ldr	r3, [r0, #4]
   11a68:	cmp	r3, r1
   11a6c:	ble	11b14 <v_sucessores@@Base+0xd4>
   11a70:	mov	r5, r0
   11a74:	mov	r6, r1
   11a78:	bl	12a50 <vetor_novo@@Base>
   11a7c:	mov	r7, r0
   11a80:	ldr	r0, [r5, #4]
   11a84:	cmp	r0, #0
   11a88:	ble	11ad8 <v_sucessores@@Base+0x98>
   11a8c:	lsl	r6, r6, #3
   11a90:	ldr	r3, [r5, #8]
   11a94:	add	r3, r3, r6
   11a98:	ldr	r3, [r3, #4]
   11a9c:	cmp	r3, #0
   11aa0:	beq	11acc <v_sucessores@@Base+0x8c>
   11aa4:	ldr	r2, [r3]
   11aa8:	cmp	r4, r2
   11aac:	bne	11ac0 <v_sucessores@@Base+0x80>
   11ab0:	b	11af0 <v_sucessores@@Base+0xb0>
   11ab4:	ldr	r2, [r3]
   11ab8:	cmp	r2, r4
   11abc:	beq	11af0 <v_sucessores@@Base+0xb0>
   11ac0:	ldr	r3, [r3, #4]
   11ac4:	cmp	r3, #0
   11ac8:	bne	11ab4 <v_sucessores@@Base+0x74>
   11acc:	add	r4, r4, #1
   11ad0:	cmp	r4, r0
   11ad4:	blt	11a90 <v_sucessores@@Base+0x50>
   11ad8:	mov	r0, r7
   11adc:	ldrd	r4, [sp]
   11ae0:	ldrd	r6, [sp, #8]
   11ae4:	ldr	r8, [sp, #16]
   11ae8:	add	sp, sp, #20
   11aec:	pop	{pc}		; (ldr pc, [sp], #4)
   11af0:	mov	r1, r4
   11af4:	mvn	r2, #0
   11af8:	mov	r0, r7
   11afc:	add	r4, r4, #1
   11b00:	bl	12b44 <vetor_insere@@Base>
   11b04:	ldr	r0, [r5, #4]
   11b08:	cmp	r4, r0
   11b0c:	blt	11a90 <v_sucessores@@Base+0x50>
   11b10:	b	11ad8 <v_sucessores@@Base+0x98>
   11b14:	mov	r7, #0
   11b18:	b	11ad8 <v_sucessores@@Base+0x98>

00011b1c <v_antecessores@@Base>:
   11b1c:	cmp	r0, #0
   11b20:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11b24:	lsrne	r5, r1, #31
   11b28:	moveq	r5, #1
   11b2c:	strd	r6, [sp, #8]
   11b30:	str	r8, [sp, #16]
   11b34:	cmp	r5, #0
   11b38:	str	lr, [sp, #20]
   11b3c:	bne	11bd4 <v_antecessores@@Base+0xb8>
   11b40:	ldr	r3, [r0, #4]
   11b44:	cmp	r3, r1
   11b48:	ble	11bd4 <v_antecessores@@Base+0xb8>
   11b4c:	mov	r6, r0
   11b50:	mov	r4, r1
   11b54:	bl	12a50 <vetor_novo@@Base>
   11b58:	ldr	r1, [r6, #4]
   11b5c:	mov	r7, r0
   11b60:	cmp	r1, #0
   11b64:	ble	11b98 <v_antecessores@@Base+0x7c>
   11b68:	ldr	r3, [r6, #8]
   11b6c:	add	r3, r3, r5, lsl #3
   11b70:	b	11b80 <v_antecessores@@Base+0x64>
   11b74:	ldr	r2, [r3]
   11b78:	cmp	r4, r2
   11b7c:	beq	11bb0 <v_antecessores@@Base+0x94>
   11b80:	ldr	r3, [r3, #4]
   11b84:	cmp	r3, #0
   11b88:	bne	11b74 <v_antecessores@@Base+0x58>
   11b8c:	add	r5, r5, #1
   11b90:	cmp	r5, r1
   11b94:	blt	11b68 <v_antecessores@@Base+0x4c>
   11b98:	mov	r0, r7
   11b9c:	ldrd	r4, [sp]
   11ba0:	ldrd	r6, [sp, #8]
   11ba4:	ldr	r8, [sp, #16]
   11ba8:	add	sp, sp, #20
   11bac:	pop	{pc}		; (ldr pc, [sp], #4)
   11bb0:	mov	r1, r5
   11bb4:	mvn	r2, #0
   11bb8:	mov	r0, r7
   11bbc:	add	r5, r5, #1
   11bc0:	bl	12b44 <vetor_insere@@Base>
   11bc4:	ldr	r1, [r6, #4]
   11bc8:	cmp	r5, r1
   11bcc:	blt	11b68 <v_antecessores@@Base+0x4c>
   11bd0:	b	11b98 <v_antecessores@@Base+0x7c>
   11bd4:	mov	r7, #0
   11bd8:	b	11b98 <v_antecessores@@Base+0x7c>

00011bdc <dfs_helper@@Base>:
   11bdc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11be0:	strd	r6, [sp, #8]
   11be4:	strd	r8, [sp, #16]
   11be8:	strd	sl, [sp, #24]
   11bec:	str	lr, [sp, #32]
   11bf0:	sub	sp, sp, #12
   11bf4:	ldr	r8, [sp, #48]	; 0x30
   11bf8:	ldr	r9, [r8, r1, lsl #2]
   11bfc:	cmp	r9, #0
   11c00:	movne	r9, #0
   11c04:	bne	11c8c <dfs_helper@@Base+0xb0>
   11c08:	cmp	r1, r2
   11c0c:	str	r3, [r8, r1, lsl #2]
   11c10:	moveq	r9, r3
   11c14:	beq	11c8c <dfs_helper@@Base+0xb0>
   11c18:	mov	r6, r1
   11c1c:	ldr	r1, [r0, #4]
   11c20:	mov	fp, r2
   11c24:	mov	r5, r0
   11c28:	cmp	r1, #0
   11c2c:	lslgt	sl, r6, #3
   11c30:	addgt	r7, r3, #1
   11c34:	movgt	r4, r9
   11c38:	ble	11c84 <dfs_helper@@Base+0xa8>
   11c3c:	ldr	r3, [r5, #8]
   11c40:	add	r3, r3, sl
   11c44:	ldr	r3, [r3, #4]
   11c48:	cmp	r3, #0
   11c4c:	beq	11c78 <dfs_helper@@Base+0x9c>
   11c50:	ldr	r2, [r3]
   11c54:	cmp	r4, r2
   11c58:	bne	11c6c <dfs_helper@@Base+0x90>
   11c5c:	b	11cac <dfs_helper@@Base+0xd0>
   11c60:	ldr	r2, [r3]
   11c64:	cmp	r2, r4
   11c68:	beq	11cac <dfs_helper@@Base+0xd0>
   11c6c:	ldr	r3, [r3, #4]
   11c70:	cmp	r3, #0
   11c74:	bne	11c60 <dfs_helper@@Base+0x84>
   11c78:	add	r4, r4, #1
   11c7c:	cmp	r4, r1
   11c80:	blt	11c3c <dfs_helper@@Base+0x60>
   11c84:	mov	r3, #0
   11c88:	str	r3, [r8, r6, lsl #2]
   11c8c:	mov	r0, r9
   11c90:	add	sp, sp, #12
   11c94:	ldrd	r4, [sp]
   11c98:	ldrd	r6, [sp, #8]
   11c9c:	ldrd	r8, [sp, #16]
   11ca0:	ldrd	sl, [sp, #24]
   11ca4:	add	sp, sp, #32
   11ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   11cac:	mov	r3, r7
   11cb0:	mov	r2, fp
   11cb4:	str	r8, [sp]
   11cb8:	mov	r1, r4
   11cbc:	mov	r0, r5
   11cc0:	bl	11bdc <dfs_helper@@Base>
   11cc4:	cmp	r0, #0
   11cc8:	bne	11ce0 <dfs_helper@@Base+0x104>
   11ccc:	ldr	r1, [r5, #4]
   11cd0:	add	r4, r4, #1
   11cd4:	cmp	r4, r1
   11cd8:	blt	11c3c <dfs_helper@@Base+0x60>
   11cdc:	b	11c84 <dfs_helper@@Base+0xa8>
   11ce0:	mov	r9, r0
   11ce4:	b	11c8c <dfs_helper@@Base+0xb0>

00011ce8 <grafo_dfs@@Base>:
   11ce8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11cec:	strd	r6, [sp, #8]
   11cf0:	subs	r6, r0, #0
   11cf4:	moveq	r4, r6
   11cf8:	strd	r8, [sp, #16]
   11cfc:	strd	sl, [sp, #24]
   11d00:	str	lr, [sp, #32]
   11d04:	sub	sp, sp, #20
   11d08:	beq	11dd0 <grafo_dfs@@Base+0xe8>
   11d0c:	ldr	fp, [r6, #4]
   11d10:	mov	r7, r1
   11d14:	mov	r1, #4
   11d18:	mov	r9, r3
   11d1c:	mov	r8, r2
   11d20:	mov	r0, fp
   11d24:	bl	10e94 <calloc@plt>
   11d28:	ldr	r4, [r0, r7, lsl #2]
   11d2c:	mov	r5, r0
   11d30:	cmp	r4, #0
   11d34:	bne	11dbc <grafo_dfs@@Base+0xd4>
   11d38:	mov	sl, #1
   11d3c:	cmp	r7, r8
   11d40:	str	sl, [r0, r7, lsl #2]
   11d44:	beq	11e80 <grafo_dfs@@Base+0x198>
   11d48:	cmp	fp, #0
   11d4c:	lslgt	sl, r7, #3
   11d50:	ble	11db4 <grafo_dfs@@Base+0xcc>
   11d54:	ldr	r3, [r6, #8]
   11d58:	add	r3, r3, sl
   11d5c:	ldr	r0, [r3, #4]
   11d60:	cmp	r0, #0
   11d64:	bne	11d78 <grafo_dfs@@Base+0x90>
   11d68:	b	11da8 <grafo_dfs@@Base+0xc0>
   11d6c:	ldr	r0, [r0, #4]
   11d70:	cmp	r0, #0
   11d74:	beq	11da8 <grafo_dfs@@Base+0xc0>
   11d78:	ldr	r3, [r0]
   11d7c:	cmp	r4, r3
   11d80:	bne	11d6c <grafo_dfs@@Base+0x84>
   11d84:	mov	r3, #2
   11d88:	mov	r2, r8
   11d8c:	str	r5, [sp]
   11d90:	mov	r1, r4
   11d94:	mov	r0, r6
   11d98:	bl	11bdc <dfs_helper@@Base>
   11d9c:	subs	r3, r0, #0
   11da0:	bne	11df0 <grafo_dfs@@Base+0x108>
   11da4:	ldr	fp, [r6, #4]
   11da8:	add	r4, r4, #1
   11dac:	cmp	r4, fp
   11db0:	blt	11d54 <grafo_dfs@@Base+0x6c>
   11db4:	mov	r3, #0
   11db8:	str	r3, [r5, r7, lsl #2]
   11dbc:	mov	r0, r5
   11dc0:	bl	10edc <free@plt>
   11dc4:	mov	r3, #0
   11dc8:	mov	r4, r3
   11dcc:	str	r3, [r9]
   11dd0:	mov	r0, r4
   11dd4:	add	sp, sp, #20
   11dd8:	ldrd	r4, [sp]
   11ddc:	ldrd	r6, [sp, #8]
   11de0:	ldrd	r8, [sp, #16]
   11de4:	ldrd	sl, [sp, #24]
   11de8:	add	sp, sp, #32
   11dec:	pop	{pc}		; (ldr pc, [sp], #4)
   11df0:	mov	r1, #4
   11df4:	str	r3, [sp, #12]
   11df8:	bl	10e94 <calloc@plt>
   11dfc:	ldr	r3, [sp, #12]
   11e00:	mov	r4, r0
   11e04:	cmp	r3, #0
   11e08:	ble	11e5c <grafo_dfs@@Base+0x174>
   11e0c:	ldr	fp, [r6, #4]
   11e10:	mov	ip, #0
   11e14:	sub	lr, r4, #4
   11e18:	cmp	fp, #0
   11e1c:	add	ip, ip, #1
   11e20:	ble	11e54 <grafo_dfs@@Base+0x16c>
   11e24:	ldr	r2, [r5]
   11e28:	cmp	ip, r2
   11e2c:	movne	r1, r5
   11e30:	movne	r2, #0
   11e34:	bne	11e48 <grafo_dfs@@Base+0x160>
   11e38:	b	11e6c <grafo_dfs@@Base+0x184>
   11e3c:	ldr	r0, [r1, #4]!
   11e40:	cmp	r0, ip
   11e44:	beq	11e70 <grafo_dfs@@Base+0x188>
   11e48:	add	r2, r2, #1
   11e4c:	cmp	r2, fp
   11e50:	bne	11e3c <grafo_dfs@@Base+0x154>
   11e54:	cmp	ip, r3
   11e58:	blt	11e18 <grafo_dfs@@Base+0x130>
   11e5c:	mov	r0, r5
   11e60:	str	r3, [r9]
   11e64:	bl	10edc <free@plt>
   11e68:	b	11dd0 <grafo_dfs@@Base+0xe8>
   11e6c:	mov	r2, #0
   11e70:	cmp	ip, r3
   11e74:	str	r2, [lr, ip, lsl #2]
   11e78:	blt	11e18 <grafo_dfs@@Base+0x130>
   11e7c:	b	11e5c <grafo_dfs@@Base+0x174>
   11e80:	mov	r1, #4
   11e84:	mov	r0, sl
   11e88:	bl	10e94 <calloc@plt>
   11e8c:	mov	r4, r0
   11e90:	mov	r3, sl
   11e94:	b	11e10 <grafo_dfs@@Base+0x128>

00011e98 <grafo_bfs@@Base>:
   11e98:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11e9c:	strd	r6, [sp, #8]
   11ea0:	strd	sl, [sp, #24]
   11ea4:	subs	fp, r0, #0
   11ea8:	moveq	r7, fp
   11eac:	strd	r8, [sp, #16]
   11eb0:	str	lr, [sp, #32]
   11eb4:	sub	sp, sp, #4
   11eb8:	beq	11fd8 <grafo_bfs@@Base+0x140>
   11ebc:	ldr	r4, [fp, #4]
   11ec0:	mov	r6, r1
   11ec4:	mov	r1, #4
   11ec8:	mov	r8, r2
   11ecc:	mov	r9, r3
   11ed0:	mov	r0, r4
   11ed4:	bl	10e94 <calloc@plt>
   11ed8:	mov	r5, r0
   11edc:	mov	r1, #4
   11ee0:	mov	r0, r4
   11ee4:	bl	10e94 <calloc@plt>
   11ee8:	cmp	r4, #0
   11eec:	mov	sl, r0
   11ef0:	ble	11ff8 <grafo_bfs@@Base+0x160>
   11ef4:	lsl	r2, r4, #2
   11ef8:	mov	r1, #255	; 0xff
   11efc:	mov	r0, r5
   11f00:	bl	10f54 <memset@plt>
   11f04:	ldr	fp, [fp, #8]
   11f08:	mov	ip, #1
   11f0c:	mov	lr, #0
   11f10:	str	r6, [r5, r6, lsl #2]
   11f14:	str	r6, [sl]
   11f18:	add	lr, lr, #1
   11f1c:	add	r3, fp, r6, lsl #3
   11f20:	mov	r1, #0
   11f24:	sdiv	r2, lr, r4
   11f28:	ldr	r0, [r3, #4]
   11f2c:	mls	lr, r4, r2, lr
   11f30:	cmp	r0, #0
   11f34:	beq	11f64 <grafo_bfs@@Base+0xcc>
   11f38:	ldr	r3, [r0]
   11f3c:	cmp	r3, r1
   11f40:	beq	11f80 <grafo_bfs@@Base+0xe8>
   11f44:	mov	r3, r0
   11f48:	b	11f58 <grafo_bfs@@Base+0xc0>
   11f4c:	ldr	r2, [r3]
   11f50:	cmp	r2, r1
   11f54:	beq	11f80 <grafo_bfs@@Base+0xe8>
   11f58:	ldr	r3, [r3, #4]
   11f5c:	cmp	r3, #0
   11f60:	bne	11f4c <grafo_bfs@@Base+0xb4>
   11f64:	add	r1, r1, #1
   11f68:	cmp	r4, r1
   11f6c:	bne	11f30 <grafo_bfs@@Base+0x98>
   11f70:	cmp	ip, lr
   11f74:	beq	12000 <grafo_bfs@@Base+0x168>
   11f78:	ldr	r6, [sl, lr, lsl #2]
   11f7c:	b	11f18 <grafo_bfs@@Base+0x80>
   11f80:	ldr	r3, [r5, r1, lsl #2]
   11f84:	cmn	r3, #1
   11f88:	bne	11f64 <grafo_bfs@@Base+0xcc>
   11f8c:	add	r3, ip, #1
   11f90:	str	r1, [sl, ip, lsl #2]
   11f94:	str	r6, [r5, r1, lsl #2]
   11f98:	add	r1, r1, #1
   11f9c:	sdiv	ip, r3, r4
   11fa0:	cmp	r4, r1
   11fa4:	mls	ip, r4, ip, r3
   11fa8:	bne	11f30 <grafo_bfs@@Base+0x98>
   11fac:	b	11f70 <grafo_bfs@@Base+0xd8>
   11fb0:	mov	r0, #4
   11fb4:	mov	r6, #1
   11fb8:	bl	10f18 <malloc@plt>
   11fbc:	mov	r7, r0
   11fc0:	str	r8, [r0]
   11fc4:	mov	r0, sl
   11fc8:	bl	10edc <free@plt>
   11fcc:	mov	r0, r5
   11fd0:	bl	10edc <free@plt>
   11fd4:	str	r6, [r9]
   11fd8:	mov	r0, r7
   11fdc:	add	sp, sp, #4
   11fe0:	ldrd	r4, [sp]
   11fe4:	ldrd	r6, [sp, #8]
   11fe8:	ldrd	r8, [sp, #16]
   11fec:	ldrd	sl, [sp, #24]
   11ff0:	add	sp, sp, #32
   11ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ff8:	str	r6, [r5, r6, lsl #2]
   11ffc:	str	r6, [r0]
   12000:	ldr	r4, [r5, r8, lsl #2]
   12004:	cmp	r4, #0
   12008:	movlt	r6, #0
   1200c:	blt	11fc4 <grafo_bfs@@Base+0x12c>
   12010:	cmp	r4, r8
   12014:	beq	11fb0 <grafo_bfs@@Base+0x118>
   12018:	mov	r3, r4
   1201c:	mov	fp, #1
   12020:	b	12028 <grafo_bfs@@Base+0x190>
   12024:	mov	fp, r6
   12028:	ldr	r2, [r5, r3, lsl #2]
   1202c:	add	r6, fp, #1
   12030:	cmp	r2, r3
   12034:	mov	r3, r2
   12038:	bne	12024 <grafo_bfs@@Base+0x18c>
   1203c:	lsl	r0, r6, #2
   12040:	bl	10f18 <malloc@plt>
   12044:	add	r3, r0, fp, lsl #2
   12048:	mov	r7, r0
   1204c:	str	r8, [r0, fp, lsl #2]
   12050:	ldr	r2, [r5, r4, lsl #2]
   12054:	str	r4, [r3, #-4]!
   12058:	cmp	r3, r7
   1205c:	mov	r4, r2
   12060:	bne	12050 <grafo_bfs@@Base+0x1b8>
   12064:	b	11fc4 <grafo_bfs@@Base+0x12c>

00012068 <heap_nova@@Base>:
   12068:	strd	r4, [sp, #-16]!
   1206c:	mov	r5, r0
   12070:	mov	r0, #12
   12074:	str	r6, [sp, #8]
   12078:	str	lr, [sp, #12]
   1207c:	bl	10f18 <malloc@plt>
   12080:	subs	r4, r0, #0
   12084:	beq	120ac <heap_nova@@Base+0x44>
   12088:	mov	r3, #0
   1208c:	mov	r0, r5
   12090:	mov	r1, #4
   12094:	stm	r4, {r3, r5}
   12098:	bl	10e94 <calloc@plt>
   1209c:	cmp	r0, #0
   120a0:	mov	r3, r0
   120a4:	str	r0, [r4, #8]
   120a8:	beq	120c0 <heap_nova@@Base+0x58>
   120ac:	mov	r0, r4
   120b0:	ldrd	r4, [sp]
   120b4:	ldr	r6, [sp, #8]
   120b8:	add	sp, sp, #12
   120bc:	pop	{pc}		; (ldr pc, [sp], #4)
   120c0:	mov	r0, r4
   120c4:	mov	r4, r3
   120c8:	bl	10edc <free@plt>
   120cc:	b	120ac <heap_nova@@Base+0x44>

000120d0 <heap_apaga@@Base>:
   120d0:	strd	r4, [sp, #-16]!
   120d4:	subs	r5, r0, #0
   120d8:	str	r6, [sp, #8]
   120dc:	str	lr, [sp, #12]
   120e0:	beq	12148 <heap_apaga@@Base+0x78>
   120e4:	ldr	r3, [r5]
   120e8:	ldr	r0, [r5, #8]
   120ec:	cmp	r3, #0
   120f0:	ble	1212c <heap_apaga@@Base+0x5c>
   120f4:	mov	r4, #0
   120f8:	mov	r6, r4
   120fc:	ldr	r3, [r0, r4, lsl #2]
   12100:	ldr	r0, [r3, #4]
   12104:	bl	10edc <free@plt>
   12108:	ldr	r3, [r5, #8]
   1210c:	ldr	r0, [r3, r4, lsl #2]
   12110:	bl	10edc <free@plt>
   12114:	ldr	r3, [r5]
   12118:	ldr	r0, [r5, #8]
   1211c:	str	r6, [r0, r4, lsl #2]
   12120:	add	r4, r4, #1
   12124:	cmp	r3, r4
   12128:	bgt	120fc <heap_apaga@@Base+0x2c>
   1212c:	bl	10edc <free@plt>
   12130:	mov	r0, r5
   12134:	ldrd	r4, [sp]
   12138:	ldr	r6, [sp, #8]
   1213c:	ldr	lr, [sp, #12]
   12140:	add	sp, sp, #16
   12144:	b	10edc <free@plt>
   12148:	ldrd	r4, [sp]
   1214c:	ldr	r6, [sp, #8]
   12150:	add	sp, sp, #12
   12154:	pop	{pc}		; (ldr pc, [sp], #4)

00012158 <elemento_cria@@Base>:
   12158:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1215c:	mov	r5, r1
   12160:	strd	r6, [sp, #8]
   12164:	mov	r7, r0
   12168:	mov	r0, #8
   1216c:	str	r8, [sp, #16]
   12170:	str	lr, [sp, #20]
   12174:	bl	10f18 <malloc@plt>
   12178:	subs	r4, r0, #0
   1217c:	beq	121b8 <elemento_cria@@Base+0x60>
   12180:	mov	r0, r5
   12184:	bl	10f3c <strlen@plt>
   12188:	add	r6, r0, #1
   1218c:	mov	r1, #1
   12190:	mov	r0, r6
   12194:	bl	10e94 <calloc@plt>
   12198:	cmp	r0, #0
   1219c:	mov	r3, r0
   121a0:	str	r0, [r4, #4]
   121a4:	beq	121d0 <elemento_cria@@Base+0x78>
   121a8:	mov	r2, r6
   121ac:	mov	r1, r5
   121b0:	bl	10ee8 <memcpy@plt>
   121b4:	str	r7, [r4]
   121b8:	mov	r0, r4
   121bc:	ldrd	r4, [sp]
   121c0:	ldrd	r6, [sp, #8]
   121c4:	ldr	r8, [sp, #16]
   121c8:	add	sp, sp, #20
   121cc:	pop	{pc}		; (ldr pc, [sp], #4)
   121d0:	mov	r0, r4
   121d4:	mov	r4, r3
   121d8:	bl	10edc <free@plt>
   121dc:	b	121b8 <elemento_cria@@Base+0x60>

000121e0 <heap_insere@@Base>:
   121e0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   121e4:	ldr	r4, [r0]
   121e8:	ldr	r3, [r0, #4]
   121ec:	strd	r6, [sp, #8]
   121f0:	strd	r8, [sp, #16]
   121f4:	str	sl, [sp, #24]
   121f8:	str	lr, [sp, #28]
   121fc:	cmp	r4, r3
   12200:	blt	12220 <heap_insere@@Base+0x40>
   12204:	mov	r0, #0
   12208:	ldrd	r4, [sp]
   1220c:	ldrd	r6, [sp, #8]
   12210:	ldrd	r8, [sp, #16]
   12214:	ldr	sl, [sp, #24]
   12218:	add	sp, sp, #28
   1221c:	pop	{pc}		; (ldr pc, [sp], #4)
   12220:	mov	r5, r0
   12224:	mov	r0, #8
   12228:	mov	r6, r2
   1222c:	mov	r9, r1
   12230:	bl	10f18 <malloc@plt>
   12234:	subs	r7, r0, #0
   12238:	beq	12204 <heap_insere@@Base+0x24>
   1223c:	mov	r0, r9
   12240:	bl	10f3c <strlen@plt>
   12244:	add	sl, r0, #1
   12248:	mov	r1, #1
   1224c:	mov	r0, sl
   12250:	bl	10e94 <calloc@plt>
   12254:	cmp	r0, #0
   12258:	mov	r8, r0
   1225c:	str	r0, [r7, #4]
   12260:	beq	12310 <heap_insere@@Base+0x130>
   12264:	mov	r1, r9
   12268:	mov	r2, sl
   1226c:	bl	10ee8 <memcpy@plt>
   12270:	ldr	r1, [r5, #8]
   12274:	add	r3, r4, #1
   12278:	cmp	r4, #0
   1227c:	str	r6, [r7]
   12280:	add	lr, r1, r4, lsl #2
   12284:	str	r7, [r1, r4, lsl #2]
   12288:	str	r3, [r5]
   1228c:	beq	12308 <heap_insere@@Base+0x128>
   12290:	sub	r4, r4, #1
   12294:	add	r4, r4, r4, lsr #31
   12298:	asr	r3, r4, #1
   1229c:	ldr	r2, [r1, r3, lsl #2]
   122a0:	lsl	r0, r3, #2
   122a4:	add	r4, r1, r0
   122a8:	cmp	r2, #0
   122ac:	beq	12308 <heap_insere@@Base+0x128>
   122b0:	ldr	ip, [r2]
   122b4:	cmp	r6, ip
   122b8:	bge	12308 <heap_insere@@Base+0x128>
   122bc:	sub	ip, r3, #1
   122c0:	cmp	r3, #0
   122c4:	str	r7, [r4]
   122c8:	add	ip, ip, ip, lsr #31
   122cc:	str	r2, [lr]
   122d0:	add	lr, r1, r0
   122d4:	beq	12308 <heap_insere@@Base+0x128>
   122d8:	asr	r3, ip, #1
   122dc:	ldr	r7, [r1, r0]
   122e0:	ldr	r2, [r1, r3, lsl #2]
   122e4:	lsl	r0, r3, #2
   122e8:	add	r4, r1, r0
   122ec:	cmp	r2, #0
   122f0:	cmpne	r7, #0
   122f4:	beq	12308 <heap_insere@@Base+0x128>
   122f8:	ldr	ip, [r2]
   122fc:	ldr	r5, [r7]
   12300:	cmp	r5, ip
   12304:	blt	122bc <heap_insere@@Base+0xdc>
   12308:	mov	r0, #1
   1230c:	b	12208 <heap_insere@@Base+0x28>
   12310:	mov	r0, r7
   12314:	bl	10edc <free@plt>
   12318:	mov	r0, r8
   1231c:	b	12208 <heap_insere@@Base+0x28>

00012320 <heap_remove@@Base>:
   12320:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12324:	subs	r4, r0, #0
   12328:	strd	r6, [sp, #8]
   1232c:	strd	r8, [sp, #16]
   12330:	str	sl, [sp, #24]
   12334:	str	lr, [sp, #28]
   12338:	beq	12428 <heap_remove@@Base+0x108>
   1233c:	ldr	r3, [r4]
   12340:	cmp	r3, #0
   12344:	ble	12428 <heap_remove@@Base+0x108>
   12348:	ldr	r3, [r4, #8]
   1234c:	ldr	r3, [r3]
   12350:	mov	r0, r3
   12354:	ldr	r6, [r3, #4]
   12358:	bl	10edc <free@plt>
   1235c:	ldr	lr, [r4]
   12360:	mov	r1, #0
   12364:	ldr	r3, [r4, #8]
   12368:	sub	lr, lr, #1
   1236c:	cmp	lr, #1
   12370:	ldr	r2, [r3, lr, lsl #2]
   12374:	str	lr, [r4]
   12378:	str	r2, [r3]
   1237c:	str	r1, [r3, lr, lsl #2]
   12380:	ble	1240c <heap_remove@@Base+0xec>
   12384:	mov	r2, #1
   12388:	add	r0, r1, #1
   1238c:	lsl	r4, r1, #2
   12390:	lsl	ip, r0, #1
   12394:	add	r5, r3, r0, lsl #3
   12398:	cmp	lr, ip
   1239c:	ble	123c4 <heap_remove@@Base+0xa4>
   123a0:	ldr	r5, [r5, #-4]
   123a4:	ldr	r0, [r3, r0, lsl #3]
   123a8:	cmp	r0, #0
   123ac:	cmpne	r5, #0
   123b0:	beq	123c4 <heap_remove@@Base+0xa4>
   123b4:	ldr	r7, [r0]
   123b8:	ldr	r0, [r5]
   123bc:	cmp	r7, r0
   123c0:	movlt	r2, ip
   123c4:	ldr	r5, [r3, r1, lsl #2]
   123c8:	lsl	ip, r2, #1
   123cc:	mov	r1, r2
   123d0:	lsl	r7, r2, #2
   123d4:	ldr	r0, [r3, r2, lsl #2]
   123d8:	add	ip, ip, #1
   123dc:	mov	r2, ip
   123e0:	cmp	r5, #0
   123e4:	cmpne	r0, #0
   123e8:	beq	1240c <heap_remove@@Base+0xec>
   123ec:	ldr	r9, [r0]
   123f0:	ldr	r8, [r5]
   123f4:	cmp	r9, r8
   123f8:	bge	1240c <heap_remove@@Base+0xec>
   123fc:	cmp	lr, ip
   12400:	str	r5, [r3, r7]
   12404:	str	r0, [r3, r4]
   12408:	bgt	12388 <heap_remove@@Base+0x68>
   1240c:	mov	r0, r6
   12410:	ldrd	r4, [sp]
   12414:	ldrd	r6, [sp, #8]
   12418:	ldrd	r8, [sp, #16]
   1241c:	ldr	sl, [sp, #24]
   12420:	add	sp, sp, #28
   12424:	pop	{pc}		; (ldr pc, [sp], #4)
   12428:	mov	r6, #0
   1242c:	b	1240c <heap_remove@@Base+0xec>

00012430 <mostraHeap@@Base>:
   12430:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12434:	movw	r5, #12228	; 0x2fc4
   12438:	movt	r5, #1
   1243c:	strd	r6, [sp, #8]
   12440:	mov	r7, r0
   12444:	mov	r6, r1
   12448:	ldr	r3, [r7]
   1244c:	strd	r8, [sp, #16]
   12450:	movw	r8, #12236	; 0x2fcc
   12454:	movt	r8, #1
   12458:	str	sl, [sp, #24]
   1245c:	str	lr, [sp, #28]
   12460:	cmp	r3, r6
   12464:	ble	124d8 <mostraHeap@@Base+0xa8>
   12468:	lsl	r9, r6, #1
   1246c:	cmp	r6, #0
   12470:	add	r1, r9, #1
   12474:	ble	124f8 <mostraHeap@@Base+0xc8>
   12478:	mov	r4, r6
   1247c:	mov	r3, #0
   12480:	sub	r4, r4, #1
   12484:	add	r3, r3, #1
   12488:	asrs	r4, r4, #1
   1248c:	bne	12480 <mostraHeap@@Base+0x50>
   12490:	mov	r0, r7
   12494:	add	sl, r3, r3, lsl #1
   12498:	bl	12430 <mostraHeap@@Base>
   1249c:	add	r4, r4, #1
   124a0:	mov	r0, r5
   124a4:	bl	10eb8 <printf@plt>
   124a8:	cmp	r4, sl
   124ac:	blt	1249c <mostraHeap@@Base+0x6c>
   124b0:	ldr	r3, [r7, #8]
   124b4:	mov	r0, r8
   124b8:	ldr	r3, [r3, r6, lsl #2]
   124bc:	add	r6, r9, #2
   124c0:	ldr	r2, [r3]
   124c4:	ldr	r1, [r3, #4]
   124c8:	bl	10eb8 <printf@plt>
   124cc:	ldr	r3, [r7]
   124d0:	cmp	r3, r6
   124d4:	bgt	12468 <mostraHeap@@Base+0x38>
   124d8:	mov	r0, #10
   124dc:	ldrd	r4, [sp]
   124e0:	ldrd	r6, [sp, #8]
   124e4:	ldrd	r8, [sp, #16]
   124e8:	ldr	sl, [sp, #24]
   124ec:	ldr	lr, [sp, #28]
   124f0:	add	sp, sp, #32
   124f4:	b	10f60 <putchar@plt>
   124f8:	mov	r0, r7
   124fc:	bl	12430 <mostraHeap@@Base>
   12500:	ldr	r3, [r7, #8]
   12504:	movw	r0, #12236	; 0x2fcc
   12508:	movt	r0, #1
   1250c:	ldr	r3, [r3, r6, lsl #2]
   12510:	ldr	r2, [r3]
   12514:	ldr	r1, [r3, #4]
   12518:	bl	10eb8 <printf@plt>
   1251c:	add	r1, r9, #2
   12520:	mov	r0, r7
   12524:	bl	12430 <mostraHeap@@Base>
   12528:	b	124d8 <mostraHeap@@Base+0xa8>

0001252c <menor_que@@Base>:
   1252c:	cmp	r1, #0
   12530:	cmpne	r0, #0
   12534:	beq	12550 <menor_que@@Base+0x24>
   12538:	ldr	r0, [r0]
   1253c:	ldr	r3, [r1]
   12540:	cmp	r0, r3
   12544:	movge	r0, #0
   12548:	movlt	r0, #1
   1254c:	bx	lr
   12550:	mov	r0, #0
   12554:	bx	lr

00012558 <novo_str@@Base>:
   12558:	strd	r4, [sp, #-16]!
   1255c:	mov	r5, r0
   12560:	mov	r0, #12
   12564:	str	r6, [sp, #8]
   12568:	str	lr, [sp, #12]
   1256c:	bl	10f18 <malloc@plt>
   12570:	subs	r4, r0, #0
   12574:	beq	125b4 <novo_str@@Base+0x5c>
   12578:	mov	r0, r5
   1257c:	bl	10f3c <strlen@plt>
   12580:	add	r6, r0, #1
   12584:	mov	r0, r6
   12588:	bl	10f18 <malloc@plt>
   1258c:	cmp	r0, #0
   12590:	mov	r3, r0
   12594:	str	r0, [r4]
   12598:	beq	125c8 <novo_str@@Base+0x70>
   1259c:	mov	r2, r6
   125a0:	mov	r1, r5
   125a4:	bl	10ee8 <memcpy@plt>
   125a8:	mov	r3, #0
   125ac:	str	r3, [r4, #4]
   125b0:	str	r3, [r4, #8]
   125b4:	mov	r0, r4
   125b8:	ldrd	r4, [sp]
   125bc:	ldr	r6, [sp, #8]
   125c0:	add	sp, sp, #12
   125c4:	pop	{pc}		; (ldr pc, [sp], #4)
   125c8:	mov	r0, r4
   125cc:	mov	r4, r3
   125d0:	bl	10edc <free@plt>
   125d4:	b	125b4 <novo_str@@Base+0x5c>

000125d8 <lista_nova@@Base>:
   125d8:	mov	r0, #12
   125dc:	strd	r4, [sp, #-16]!
   125e0:	str	r6, [sp, #8]
   125e4:	str	lr, [sp, #12]
   125e8:	bl	10f18 <malloc@plt>
   125ec:	cmp	r0, #0
   125f0:	beq	12608 <lista_nova@@Base+0x30>
   125f4:	mov	r4, #0
   125f8:	mov	r5, #0
   125fc:	mov	r3, #0
   12600:	strd	r4, [r0]
   12604:	str	r3, [r0, #8]
   12608:	ldrd	r4, [sp]
   1260c:	ldr	r6, [sp, #8]
   12610:	add	sp, sp, #12
   12614:	pop	{pc}		; (ldr pc, [sp], #4)

00012618 <lista_apaga@@Base>:
   12618:	strd	r4, [sp, #-16]!
   1261c:	subs	r5, r0, #0
   12620:	str	r6, [sp, #8]
   12624:	str	lr, [sp, #12]
   12628:	bne	12644 <lista_apaga@@Base+0x2c>
   1262c:	b	12668 <lista_apaga@@Base+0x50>
   12630:	ldm	r4, {r0, r3}
   12634:	str	r3, [r5]
   12638:	bl	10edc <free@plt>
   1263c:	mov	r0, r4
   12640:	bl	10edc <free@plt>
   12644:	ldr	r4, [r5]
   12648:	cmp	r4, #0
   1264c:	bne	12630 <lista_apaga@@Base+0x18>
   12650:	mov	r0, r5
   12654:	ldrd	r4, [sp]
   12658:	ldr	r6, [sp, #8]
   1265c:	ldr	lr, [sp, #12]
   12660:	add	sp, sp, #16
   12664:	b	10edc <free@plt>
   12668:	ldrd	r4, [sp]
   1266c:	ldr	r6, [sp, #8]
   12670:	add	sp, sp, #12
   12674:	pop	{pc}		; (ldr pc, [sp], #4)

00012678 <lista_tamanho@@Base>:
   12678:	cmp	r0, #0
   1267c:	ldrne	r0, [r0, #8]
   12680:	mvneq	r0, #0
   12684:	bx	lr

00012688 <lista_inicio@@Base>:
   12688:	cmp	r0, #0
   1268c:	ldrne	r0, [r0]
   12690:	bx	lr

00012694 <lista_fim@@Base>:
   12694:	cmp	r0, #0
   12698:	ldrne	r0, [r0, #4]
   1269c:	bx	lr

000126a0 <lista_insere@@Base>:
   126a0:	clz	r3, r1
   126a4:	cmp	r0, #0
   126a8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   126ac:	lsr	r3, r3, #5
   126b0:	strd	r6, [sp, #8]
   126b4:	moveq	r7, #1
   126b8:	strd	r8, [sp, #16]
   126bc:	movne	r7, r3
   126c0:	str	sl, [sp, #24]
   126c4:	cmp	r7, #0
   126c8:	str	lr, [sp, #28]
   126cc:	bne	12780 <lista_insere@@Base+0xe0>
   126d0:	mov	r5, r0
   126d4:	mov	r0, #12
   126d8:	mov	r8, r1
   126dc:	mov	r6, r2
   126e0:	bl	10f18 <malloc@plt>
   126e4:	subs	r4, r0, #0
   126e8:	beq	12780 <lista_insere@@Base+0xe0>
   126ec:	mov	r0, r8
   126f0:	bl	10f3c <strlen@plt>
   126f4:	add	r9, r0, #1
   126f8:	mov	r0, r9
   126fc:	bl	10f18 <malloc@plt>
   12700:	cmp	r0, #0
   12704:	mov	r3, r0
   12708:	str	r0, [r4]
   1270c:	beq	127a4 <lista_insere@@Base+0x104>
   12710:	mov	r2, r9
   12714:	mov	r1, r8
   12718:	bl	10ee8 <memcpy@plt>
   1271c:	cmp	r6, #0
   12720:	str	r7, [r4, #4]
   12724:	ldr	r3, [r5, #8]
   12728:	str	r7, [r4, #8]
   1272c:	ldr	r2, [r5]
   12730:	add	r3, r3, #1
   12734:	str	r3, [r5, #8]
   12738:	beq	12788 <lista_insere@@Base+0xe8>
   1273c:	cmp	r6, r2
   12740:	streq	r6, [r4, #4]
   12744:	streq	r4, [r6, #8]
   12748:	streq	r4, [r5]
   1274c:	beq	12764 <lista_insere@@Base+0xc4>
   12750:	ldr	r3, [r6, #8]
   12754:	str	r6, [r4, #4]
   12758:	str	r3, [r4, #8]
   1275c:	str	r4, [r3, #4]
   12760:	str	r4, [r6, #8]
   12764:	mov	r0, r4
   12768:	ldrd	r4, [sp]
   1276c:	ldrd	r6, [sp, #8]
   12770:	ldrd	r8, [sp, #16]
   12774:	ldr	sl, [sp, #24]
   12778:	add	sp, sp, #28
   1277c:	pop	{pc}		; (ldr pc, [sp], #4)
   12780:	mov	r4, #0
   12784:	b	12764 <lista_insere@@Base+0xc4>
   12788:	cmp	r2, #0
   1278c:	ldrne	r3, [r5, #4]
   12790:	streq	r4, [r5]
   12794:	strne	r3, [r4, #8]
   12798:	strne	r4, [r3, #4]
   1279c:	str	r4, [r5, #4]
   127a0:	b	12764 <lista_insere@@Base+0xc4>
   127a4:	mov	r0, r4
   127a8:	mov	r4, r3
   127ac:	bl	10edc <free@plt>
   127b0:	b	12764 <lista_insere@@Base+0xc4>

000127b4 <lista_remove@@Base>:
   127b4:	cmp	r1, #0
   127b8:	cmpne	r0, #0
   127bc:	strd	r4, [sp, #-16]!
   127c0:	moveq	r5, #0
   127c4:	str	r6, [sp, #8]
   127c8:	str	lr, [sp, #12]
   127cc:	beq	12814 <lista_remove@@Base+0x60>
   127d0:	ldr	r3, [r0, #8]
   127d4:	mov	r4, r1
   127d8:	ldr	r2, [r1, #8]
   127dc:	ldr	r5, [r1, #4]
   127e0:	sub	r3, r3, #1
   127e4:	cmp	r2, #0
   127e8:	str	r3, [r0, #8]
   127ec:	strne	r5, [r2, #4]
   127f0:	ldrne	r5, [r1, #4]
   127f4:	streq	r5, [r0]
   127f8:	cmp	r5, #0
   127fc:	streq	r2, [r0, #4]
   12800:	strne	r2, [r5, #8]
   12804:	ldr	r0, [r1]
   12808:	bl	10edc <free@plt>
   1280c:	mov	r0, r4
   12810:	bl	10edc <free@plt>
   12814:	mov	r0, r5
   12818:	ldrd	r4, [sp]
   1281c:	ldr	r6, [sp, #8]
   12820:	add	sp, sp, #12
   12824:	pop	{pc}		; (ldr pc, [sp], #4)

00012828 <lista_pesquisa@@Base>:
   12828:	strd	r4, [sp, #-16]!
   1282c:	clz	r4, r1
   12830:	cmp	r0, #0
   12834:	lsr	r4, r4, #5
   12838:	moveq	r4, #1
   1283c:	str	r6, [sp, #8]
   12840:	str	lr, [sp, #12]
   12844:	cmp	r4, #0
   12848:	movne	r4, #0
   1284c:	bne	12894 <lista_pesquisa@@Base+0x6c>
   12850:	cmp	r2, #1
   12854:	bhi	12894 <lista_pesquisa@@Base+0x6c>
   12858:	cmp	r2, #0
   1285c:	mov	r5, r1
   12860:	bne	128a8 <lista_pesquisa@@Base+0x80>
   12864:	ldr	r4, [r0]
   12868:	cmp	r4, #0
   1286c:	bne	12880 <lista_pesquisa@@Base+0x58>
   12870:	b	12894 <lista_pesquisa@@Base+0x6c>
   12874:	ldr	r4, [r4, #4]
   12878:	cmp	r4, #0
   1287c:	beq	12894 <lista_pesquisa@@Base+0x6c>
   12880:	mov	r1, r5
   12884:	ldr	r0, [r4]
   12888:	bl	10ea0 <strcmp@plt>
   1288c:	cmp	r0, #0
   12890:	bne	12874 <lista_pesquisa@@Base+0x4c>
   12894:	mov	r0, r4
   12898:	ldrd	r4, [sp]
   1289c:	ldr	r6, [sp, #8]
   128a0:	add	sp, sp, #12
   128a4:	pop	{pc}		; (ldr pc, [sp], #4)
   128a8:	ldr	r4, [r0, #4]
   128ac:	cmp	r4, #0
   128b0:	bne	128c4 <lista_pesquisa@@Base+0x9c>
   128b4:	b	12894 <lista_pesquisa@@Base+0x6c>
   128b8:	ldr	r4, [r4, #8]
   128bc:	cmp	r4, #0
   128c0:	beq	12894 <lista_pesquisa@@Base+0x6c>
   128c4:	mov	r1, r5
   128c8:	ldr	r0, [r4]
   128cc:	bl	10ea0 <strcmp@plt>
   128d0:	cmp	r0, #0
   128d4:	bne	128b8 <lista_pesquisa@@Base+0x90>
   128d8:	b	12894 <lista_pesquisa@@Base+0x6c>

000128dc <lista_ordena@@Base>:
   128dc:	cmp	r0, #0
   128e0:	beq	129a0 <lista_ordena@@Base+0xc4>
   128e4:	ldr	r3, [r0, #8]
   128e8:	cmp	r3, #0
   128ec:	beq	12998 <lista_ordena@@Base+0xbc>
   128f0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   128f4:	strd	r6, [sp, #8]
   128f8:	strd	r8, [sp, #16]
   128fc:	ldr	r8, [r0]
   12900:	str	sl, [sp, #24]
   12904:	str	lr, [sp, #28]
   12908:	ldr	r9, [r8, #4]
   1290c:	cmp	r9, #0
   12910:	beq	1297c <lista_ordena@@Base+0xa0>
   12914:	ldr	sl, [r8]
   12918:	mov	r7, r8
   1291c:	mov	r4, r9
   12920:	mov	r5, sl
   12924:	ldr	r6, [r4]
   12928:	mov	r1, r5
   1292c:	mov	r0, r6
   12930:	bl	10ea0 <strcmp@plt>
   12934:	cmp	r0, #0
   12938:	movlt	r7, r4
   1293c:	ldr	r4, [r4, #4]
   12940:	movlt	r5, r6
   12944:	cmp	r4, #0
   12948:	bne	12924 <lista_ordena@@Base+0x48>
   1294c:	cmp	r7, r8
   12950:	ldr	r3, [r9, #4]
   12954:	beq	12974 <lista_ordena@@Base+0x98>
   12958:	cmp	r3, #0
   1295c:	str	r5, [r8]
   12960:	str	sl, [r7]
   12964:	beq	1297c <lista_ordena@@Base+0xa0>
   12968:	mov	r8, r9
   1296c:	mov	r9, r3
   12970:	b	12914 <lista_ordena@@Base+0x38>
   12974:	cmp	r3, #0
   12978:	bne	12968 <lista_ordena@@Base+0x8c>
   1297c:	ldrd	r4, [sp]
   12980:	mov	r0, #0
   12984:	ldrd	r6, [sp, #8]
   12988:	ldrd	r8, [sp, #16]
   1298c:	ldr	sl, [sp, #24]
   12990:	add	sp, sp, #28
   12994:	pop	{pc}		; (ldr pc, [sp], #4)
   12998:	mov	r0, #0
   1299c:	bx	lr
   129a0:	mvn	r0, #0
   129a4:	bx	lr

000129a8 <lista_inverte@@Base>:
   129a8:	strd	r4, [sp, #-12]!
   129ac:	subs	r5, r0, #0
   129b0:	str	lr, [sp, #8]
   129b4:	beq	12a48 <lista_inverte@@Base+0xa0>
   129b8:	ldr	r4, [r5, #8]
   129bc:	cmp	r4, #1
   129c0:	movle	r0, #0
   129c4:	ble	12a34 <lista_inverte@@Base+0x8c>
   129c8:	ldr	r1, [r5]
   129cc:	cmp	r4, #2
   129d0:	ldr	r3, [r1, #4]
   129d4:	beq	12a40 <lista_inverte@@Base+0x98>
   129d8:	sub	r4, r4, #2
   129dc:	mov	ip, #0
   129e0:	b	129e8 <lista_inverte@@Base+0x40>
   129e4:	mov	r3, r2
   129e8:	ldmib	r3, {r2, lr}
   129ec:	add	ip, ip, #1
   129f0:	cmp	r4, ip
   129f4:	str	r2, [lr, #4]
   129f8:	str	lr, [r2, #8]
   129fc:	str	r1, [r3, #4]
   12a00:	str	r3, [r1, #8]
   12a04:	mov	r1, r3
   12a08:	bne	129e4 <lista_inverte@@Base+0x3c>
   12a0c:	ldr	r2, [r5, #4]
   12a10:	mov	r1, #0
   12a14:	mov	r0, r1
   12a18:	ldr	ip, [r2, #8]
   12a1c:	str	ip, [r5, #4]
   12a20:	str	r1, [ip, #4]
   12a24:	str	r3, [r2, #4]
   12a28:	str	r1, [r2, #8]
   12a2c:	str	r2, [r3, #8]
   12a30:	str	r2, [r5]
   12a34:	ldrd	r4, [sp]
   12a38:	add	sp, sp, #8
   12a3c:	pop	{pc}		; (ldr pc, [sp], #4)
   12a40:	mov	r3, r1
   12a44:	b	12a0c <lista_inverte@@Base+0x64>
   12a48:	mvn	r0, #0
   12a4c:	b	12a34 <lista_inverte@@Base+0x8c>

00012a50 <vetor_novo@@Base>:
   12a50:	mov	r0, #12
   12a54:	strd	r4, [sp, #-16]!
   12a58:	str	r6, [sp, #8]
   12a5c:	str	lr, [sp, #12]
   12a60:	bl	10f18 <malloc@plt>
   12a64:	cmp	r0, #0
   12a68:	beq	12a80 <vetor_novo@@Base+0x30>
   12a6c:	mov	r4, #0
   12a70:	mov	r5, #0
   12a74:	mov	r3, #0
   12a78:	strd	r4, [r0]
   12a7c:	str	r3, [r0, #8]
   12a80:	ldrd	r4, [sp]
   12a84:	ldr	r6, [sp, #8]
   12a88:	add	sp, sp, #12
   12a8c:	pop	{pc}		; (ldr pc, [sp], #4)

00012a90 <vetor_apaga@@Base>:
   12a90:	str	r4, [sp, #-8]!
   12a94:	subs	r4, r0, #0
   12a98:	str	lr, [sp, #4]
   12a9c:	beq	12abc <vetor_apaga@@Base+0x2c>
   12aa0:	ldr	r0, [r4, #8]
   12aa4:	bl	10edc <free@plt>
   12aa8:	mov	r0, r4
   12aac:	ldr	r4, [sp]
   12ab0:	ldr	lr, [sp, #4]
   12ab4:	add	sp, sp, #8
   12ab8:	b	10edc <free@plt>
   12abc:	ldr	r4, [sp]
   12ac0:	add	sp, sp, #4
   12ac4:	pop	{pc}		; (ldr pc, [sp], #4)

00012ac8 <vetor_atribui@@Base>:
   12ac8:	cmp	r0, #0
   12acc:	lsrne	r3, r1, #31
   12ad0:	moveq	r3, #1
   12ad4:	cmp	r3, #0
   12ad8:	bne	12af8 <vetor_atribui@@Base+0x30>
   12adc:	ldr	r3, [r0]
   12ae0:	cmp	r3, r1
   12ae4:	ble	12af8 <vetor_atribui@@Base+0x30>
   12ae8:	ldr	r3, [r0, #8]
   12aec:	mov	r0, r1
   12af0:	str	r2, [r3, r1, lsl #2]
   12af4:	bx	lr
   12af8:	mvn	r0, #0
   12afc:	bx	lr

00012b00 <vetor_tamanho@@Base>:
   12b00:	cmp	r0, #0
   12b04:	ldrne	r0, [r0]
   12b08:	mvneq	r0, #0
   12b0c:	bx	lr

00012b10 <vetor_elemento@@Base>:
   12b10:	cmp	r0, #0
   12b14:	lsrne	r3, r1, #31
   12b18:	moveq	r3, #1
   12b1c:	cmp	r3, #0
   12b20:	bne	12b3c <vetor_elemento@@Base+0x2c>
   12b24:	ldr	r3, [r0]
   12b28:	cmp	r3, r1
   12b2c:	ble	12b3c <vetor_elemento@@Base+0x2c>
   12b30:	ldr	r3, [r0, #8]
   12b34:	ldr	r0, [r3, r1, lsl #2]
   12b38:	bx	lr
   12b3c:	mov	r0, #-2147483648	; 0x80000000
   12b40:	bx	lr

00012b44 <vetor_insere@@Base>:
   12b44:	cmn	r2, #1
   12b48:	movge	r3, #0
   12b4c:	movlt	r3, #1
   12b50:	cmp	r0, #0
   12b54:	moveq	r3, #1
   12b58:	cmp	r3, #0
   12b5c:	bne	12c14 <vetor_insere@@Base+0xd0>
   12b60:	strd	r4, [sp, #-16]!
   12b64:	mov	r4, r2
   12b68:	mov	r5, r0
   12b6c:	str	r6, [sp, #8]
   12b70:	mov	r6, r1
   12b74:	ldr	r1, [r0]
   12b78:	str	lr, [sp, #12]
   12b7c:	cmp	r1, r2
   12b80:	blt	12c0c <vetor_insere@@Base+0xc8>
   12b84:	ldr	r3, [r0, #4]
   12b88:	cmn	r2, #1
   12b8c:	moveq	r4, r1
   12b90:	ldr	r0, [r0, #8]
   12b94:	cmp	r1, r3
   12b98:	beq	12bdc <vetor_insere@@Base+0x98>
   12b9c:	cmp	r4, r1
   12ba0:	addlt	r3, r0, r1, lsl #2
   12ba4:	addlt	r2, r0, r4, lsl #2
   12ba8:	bge	12bbc <vetor_insere@@Base+0x78>
   12bac:	ldr	ip, [r3, #-4]
   12bb0:	str	ip, [r3], #-4
   12bb4:	cmp	r3, r2
   12bb8:	bne	12bac <vetor_insere@@Base+0x68>
   12bbc:	add	r1, r1, #1
   12bc0:	str	r6, [r0, r4, lsl #2]
   12bc4:	mov	r0, r4
   12bc8:	str	r1, [r5]
   12bcc:	ldrd	r4, [sp]
   12bd0:	ldr	r6, [sp, #8]
   12bd4:	add	sp, sp, #12
   12bd8:	pop	{pc}		; (ldr pc, [sp], #4)
   12bdc:	cmp	r1, #0
   12be0:	lslne	r3, r1, #1
   12be4:	moveq	r3, #1
   12be8:	moveq	r1, #4
   12bec:	lslne	r1, r1, #3
   12bf0:	str	r3, [r5, #4]
   12bf4:	bl	10ef4 <realloc@plt>
   12bf8:	cmp	r0, #0
   12bfc:	str	r0, [r5, #8]
   12c00:	beq	12c0c <vetor_insere@@Base+0xc8>
   12c04:	ldr	r1, [r5]
   12c08:	b	12b9c <vetor_insere@@Base+0x58>
   12c0c:	mvn	r0, #0
   12c10:	b	12bcc <vetor_insere@@Base+0x88>
   12c14:	mvn	r0, #0
   12c18:	bx	lr

00012c1c <vetor_remove@@Base>:
   12c1c:	cmp	r0, #0
   12c20:	lsrne	r3, r1, #31
   12c24:	moveq	r3, #1
   12c28:	cmp	r3, #0
   12c2c:	bne	12d28 <vetor_remove@@Base+0x10c>
   12c30:	strd	r4, [sp, #-20]!	; 0xffffffec
   12c34:	strd	r6, [sp, #8]
   12c38:	str	lr, [sp, #16]
   12c3c:	ldr	lr, [r0]
   12c40:	cmp	lr, r1
   12c44:	ble	12d34 <vetor_remove@@Base+0x118>
   12c48:	add	r6, r1, #1
   12c4c:	cmp	lr, r6
   12c50:	ble	12cec <vetor_remove@@Base+0xd0>
   12c54:	ldr	ip, [r0, #8]
   12c58:	lsl	r2, r6, #2
   12c5c:	sub	r4, lr, r1
   12c60:	sub	r7, r4, #2
   12c64:	sub	r3, r2, #4
   12c68:	add	r4, r2, #8
   12c6c:	add	r5, r2, #4
   12c70:	cmp	r5, r2
   12c74:	cmpgt	r4, r3
   12c78:	add	r3, ip, r3
   12c7c:	add	r5, ip, r2
   12c80:	movle	r4, #1
   12c84:	movgt	r4, #0
   12c88:	orr	r5, r3, r5
   12c8c:	cmp	r7, #3
   12c90:	movls	r4, #0
   12c94:	andhi	r4, r4, #1
   12c98:	tst	r5, #7
   12c9c:	movne	r4, #0
   12ca0:	cmp	r4, #0
   12ca4:	beq	12d0c <vetor_remove@@Base+0xf0>
   12ca8:	mvn	r1, r1
   12cac:	sub	r2, r2, #8
   12cb0:	add	r1, r1, lr
   12cb4:	add	r2, ip, r2
   12cb8:	lsr	r7, r1, #1
   12cbc:	add	r7, r3, r7, lsl #3
   12cc0:	ldrd	r4, [r2, #8]!
   12cc4:	strd	r4, [r3], #8
   12cc8:	cmp	r3, r7
   12ccc:	bne	12cc0 <vetor_remove@@Base+0xa4>
   12cd0:	bic	r2, r1, #1
   12cd4:	cmp	r1, r2
   12cd8:	add	r3, r2, r6
   12cdc:	beq	12cec <vetor_remove@@Base+0xd0>
   12ce0:	ldr	r2, [ip, r3, lsl #2]
   12ce4:	add	r3, ip, r3, lsl #2
   12ce8:	str	r2, [r3, #-4]
   12cec:	sub	lr, lr, #1
   12cf0:	mov	r3, #0
   12cf4:	str	lr, [r0]
   12cf8:	ldrd	r4, [sp]
   12cfc:	mov	r0, r3
   12d00:	ldrd	r6, [sp, #8]
   12d04:	add	sp, sp, #16
   12d08:	pop	{pc}		; (ldr pc, [sp], #4)
   12d0c:	sub	ip, ip, #4
   12d10:	add	ip, ip, lr, lsl #2
   12d14:	ldr	r2, [r3, #4]
   12d18:	str	r2, [r3], #4
   12d1c:	cmp	r3, ip
   12d20:	bne	12d14 <vetor_remove@@Base+0xf8>
   12d24:	b	12cec <vetor_remove@@Base+0xd0>
   12d28:	mvn	r3, #0
   12d2c:	mov	r0, r3
   12d30:	bx	lr
   12d34:	mvn	r3, #0
   12d38:	b	12cf8 <vetor_remove@@Base+0xdc>

00012d3c <vetor_pesquisa@@Base>:
   12d3c:	cmp	r0, #0
   12d40:	beq	12d80 <vetor_pesquisa@@Base+0x44>
   12d44:	ldr	ip, [r0]
   12d48:	cmp	ip, #0
   12d4c:	ble	12d80 <vetor_pesquisa@@Base+0x44>
   12d50:	ldr	r3, [r0, #8]
   12d54:	mov	r0, #0
   12d58:	ldr	r2, [r3]
   12d5c:	cmp	r1, r2
   12d60:	bne	12d74 <vetor_pesquisa@@Base+0x38>
   12d64:	b	12d88 <vetor_pesquisa@@Base+0x4c>
   12d68:	ldr	r2, [r3, #4]!
   12d6c:	cmp	r2, r1
   12d70:	beq	12d88 <vetor_pesquisa@@Base+0x4c>
   12d74:	add	r0, r0, #1
   12d78:	cmp	ip, r0
   12d7c:	bne	12d68 <vetor_pesquisa@@Base+0x2c>
   12d80:	mvn	r0, #0
   12d84:	bx	lr
   12d88:	bx	lr

00012d8c <vetor_ordena@@Base>:
   12d8c:	cmp	r0, #0
   12d90:	beq	12e0c <vetor_ordena@@Base+0x80>
   12d94:	strd	r4, [sp, #-16]!
   12d98:	ldr	r5, [r0]
   12d9c:	str	r6, [sp, #8]
   12da0:	str	lr, [sp, #12]
   12da4:	cmp	r5, #1
   12da8:	ble	12df8 <vetor_ordena@@Base+0x6c>
   12dac:	ldr	r6, [r0, #8]
   12db0:	mov	lr, #1
   12db4:	mov	r4, r6
   12db8:	ldr	ip, [r4, #4]!
   12dbc:	mov	r2, lr
   12dc0:	mov	r3, r4
   12dc4:	ldr	r1, [r3, #-4]
   12dc8:	mov	r0, r3
   12dcc:	cmp	r1, ip
   12dd0:	ble	12de8 <vetor_ordena@@Base+0x5c>
   12dd4:	subs	r2, r2, #1
   12dd8:	str	r1, [r3]
   12ddc:	sub	r3, r0, #4
   12de0:	bne	12dc4 <vetor_ordena@@Base+0x38>
   12de4:	mov	r0, r6
   12de8:	add	lr, lr, #1
   12dec:	str	ip, [r0]
   12df0:	cmp	lr, r5
   12df4:	bne	12db8 <vetor_ordena@@Base+0x2c>
   12df8:	ldrd	r4, [sp]
   12dfc:	mov	r0, #0
   12e00:	ldr	r6, [sp, #8]
   12e04:	add	sp, sp, #12
   12e08:	pop	{pc}		; (ldr pc, [sp], #4)
   12e0c:	mvn	r0, #0
   12e10:	bx	lr

00012e14 <__libc_csu_init@@Base>:
   12e14:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e18:	mov	r7, r0
   12e1c:	ldr	r6, [pc, #72]	; 12e6c <__libc_csu_init@@Base+0x58>
   12e20:	ldr	r5, [pc, #72]	; 12e70 <__libc_csu_init@@Base+0x5c>
   12e24:	add	r6, pc, r6
   12e28:	add	r5, pc, r5
   12e2c:	sub	r6, r6, r5
   12e30:	mov	r8, r1
   12e34:	mov	r9, r2
   12e38:	bl	10e74 <calloc@plt-0x20>
   12e3c:	asrs	r6, r6, #2
   12e40:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e44:	mov	r4, #0
   12e48:	add	r4, r4, #1
   12e4c:	ldr	r3, [r5], #4
   12e50:	mov	r2, r9
   12e54:	mov	r1, r8
   12e58:	mov	r0, r7
   12e5c:	blx	r3
   12e60:	cmp	r6, r4
   12e64:	bne	12e48 <__libc_csu_init@@Base+0x34>
   12e68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12e6c:	andeq	r1, r1, r8, ror #1
   12e70:	andeq	r1, r1, r0, ror #1

00012e74 <__libc_csu_fini@@Base>:
   12e74:	bx	lr

Disassembly of section .fini:

00012e78 <.fini>:
   12e78:	push	{r3, lr}
   12e7c:	pop	{r3, pc}
