
../repos/charybdis/extensions/.libs/ip_cloaking_4.0.so:     file format elf32-littlearm


Disassembly of section .init:

0000069c <_init>:
 69c:	push	{r3, lr}
 6a0:	bl	770 <call_weak_fn>
 6a4:	pop	{r3, pc}

Disassembly of section .plt:

000006a8 <.plt>:
 6a8:	push	{lr}		; (str lr, [sp, #-4]!)
 6ac:	ldr	lr, [pc, #4]	; 6b8 <.plt+0x10>
 6b0:	add	lr, pc, lr
 6b4:	ldr	pc, [lr, #8]!
 6b8:	.word	0x00011948

000006bc <calloc@plt>:
 6bc:	add	ip, pc, #0, 12
 6c0:	add	ip, ip, #69632	; 0x11000
 6c4:	ldr	pc, [ip, #2376]!	; 0x948

000006c8 <strcmp@plt>:
 6c8:	add	ip, pc, #0, 12
 6cc:	add	ip, ip, #69632	; 0x11000
 6d0:	ldr	pc, [ip, #2368]!	; 0x940

000006d4 <__cxa_finalize@plt>:
 6d4:	add	ip, pc, #0, 12
 6d8:	add	ip, ip, #69632	; 0x11000
 6dc:	ldr	pc, [ip, #2360]!	; 0x938

000006e0 <rb_outofmemory@plt>:
 6e0:	add	ip, pc, #0, 12
 6e4:	add	ip, ip, #69632	; 0x11000
 6e8:	ldr	pc, [ip, #2352]!	; 0x930

000006ec <find_umode_slot@plt>:
 6ec:	add	ip, pc, #0, 12
 6f0:	add	ip, ip, #69632	; 0x11000
 6f4:	ldr	pc, [ip, #2344]!	; 0x928

000006f8 <fnv_hash@plt>:
 6f8:	add	ip, pc, #0, 12
 6fc:	add	ip, ip, #69632	; 0x11000
 700:	ldr	pc, [ip, #2336]!	; 0x920

00000704 <sendto_server@plt>:
 704:	add	ip, pc, #0, 12
 708:	add	ip, ip, #69632	; 0x11000
 70c:	ldr	pc, [ip, #2328]!	; 0x918

00000710 <__gmon_start__@plt>:
 710:	add	ip, pc, #0, 12
 714:	add	ip, ip, #69632	; 0x11000
 718:	ldr	pc, [ip, #2320]!	; 0x910

0000071c <__ctype_b_loc@plt>:
 71c:	add	ip, pc, #0, 12
 720:	add	ip, ip, #69632	; 0x11000
 724:	ldr	pc, [ip, #2312]!	; 0x908

00000728 <sendto_one_numeric@plt>:
 728:	add	ip, pc, #0, 12
 72c:	add	ip, ip, #69632	; 0x11000
 730:	ldr	pc, [ip, #2304]!	; 0x900

00000734 <strchr@plt>:
 734:	add	ip, pc, #0, 12
 738:	add	ip, ip, #69632	; 0x11000
 73c:	ldr	pc, [ip, #2296]!	; 0x8f8

00000740 <change_nick_user_host@plt>:
 740:	add	ip, pc, #0, 12
 744:	add	ip, ip, #69632	; 0x11000
 748:	ldr	pc, [ip, #2288]!	; 0x8f0

0000074c <rb_strlcpy@plt>:
 74c:	add	ip, pc, #0, 12
 750:	add	ip, ip, #69632	; 0x11000
 754:	ldr	pc, [ip, #2280]!	; 0x8e8

00000758 <irccmp@plt>:
 758:	add	ip, pc, #0, 12
 75c:	add	ip, ip, #69632	; 0x11000
 760:	ldr	pc, [ip, #2272]!	; 0x8e0

00000764 <construct_umodebuf@plt>:
 764:	add	ip, pc, #0, 12
 768:	add	ip, ip, #69632	; 0x11000
 76c:	ldr	pc, [ip, #2264]!	; 0x8d8

Disassembly of section .text:

00000770 <call_weak_fn>:
 770:	ldr	r3, [pc, #20]	; 78c <call_weak_fn+0x1c>
 774:	ldr	r2, [pc, #20]	; 790 <call_weak_fn+0x20>
 778:	add	r3, pc, r3
 77c:	ldr	r2, [r3, r2]
 780:	cmp	r2, #0
 784:	bxeq	lr
 788:	b	710 <__gmon_start__@plt>
 78c:	.word	0x00011880
 790:	.word	0x00000058

00000794 <deregister_tm_clones>:
 794:	ldr	r0, [pc, #44]	; 7c8 <deregister_tm_clones+0x34>
 798:	ldr	r3, [pc, #44]	; 7cc <deregister_tm_clones+0x38>
 79c:	add	r0, pc, r0
 7a0:	add	r3, pc, r3
 7a4:	cmp	r3, r0
 7a8:	ldr	r3, [pc, #32]	; 7d0 <deregister_tm_clones+0x3c>
 7ac:	add	r3, pc, r3
 7b0:	bxeq	lr
 7b4:	ldr	r2, [pc, #24]	; 7d4 <deregister_tm_clones+0x40>
 7b8:	ldr	r3, [r3, r2]
 7bc:	cmp	r3, #0
 7c0:	bxeq	lr
 7c4:	bx	r3
 7c8:	.word	0x00011914
 7cc:	.word	0x00011910
 7d0:	.word	0x0001184c
 7d4:	.word	0x0000004c

000007d8 <register_tm_clones>:
 7d8:	ldr	r0, [pc, #56]	; 818 <register_tm_clones+0x40>
 7dc:	ldr	r3, [pc, #56]	; 81c <register_tm_clones+0x44>
 7e0:	add	r0, pc, r0
 7e4:	add	r3, pc, r3
 7e8:	sub	r1, r3, r0
 7ec:	ldr	r3, [pc, #44]	; 820 <register_tm_clones+0x48>
 7f0:	asr	r1, r1, #2
 7f4:	add	r3, pc, r3
 7f8:	add	r1, r1, r1, lsr #31
 7fc:	asrs	r1, r1, #1
 800:	bxeq	lr
 804:	ldr	r2, [pc, #24]	; 824 <register_tm_clones+0x4c>
 808:	ldr	r3, [r3, r2]
 80c:	cmp	r3, #0
 810:	bxeq	lr
 814:	bx	r3
 818:	.word	0x000118d0
 81c:	.word	0x000118cc
 820:	.word	0x00011804
 824:	.word	0x00000060

00000828 <__do_global_dtors_aux>:
 828:	ldr	r3, [pc, #76]	; 87c <__do_global_dtors_aux+0x54>
 82c:	ldr	r2, [pc, #76]	; 880 <__do_global_dtors_aux+0x58>
 830:	add	r3, pc, r3
 834:	add	r2, pc, r2
 838:	ldrb	r3, [r3]
 83c:	cmp	r3, #0
 840:	bxne	lr
 844:	ldr	r3, [pc, #56]	; 884 <__do_global_dtors_aux+0x5c>
 848:	push	{r4, lr}
 84c:	ldr	r3, [r2, r3]
 850:	cmp	r3, #0
 854:	beq	864 <__do_global_dtors_aux+0x3c>
 858:	ldr	r3, [pc, #40]	; 888 <__do_global_dtors_aux+0x60>
 85c:	ldr	r0, [pc, r3]
 860:	bl	6d4 <__cxa_finalize@plt>
 864:	bl	794 <deregister_tm_clones>
 868:	ldr	r3, [pc, #28]	; 88c <__do_global_dtors_aux+0x64>
 86c:	mov	r2, #1
 870:	add	r3, pc, r3
 874:	strb	r2, [r3]
 878:	pop	{r4, pc}
 87c:	.word	0x00011880
 880:	.word	0x000117c4
 884:	.word	0x00000048
 888:	.word	0x00011804
 88c:	.word	0x00011840

00000890 <frame_dummy>:
 890:	b	7d8 <register_tm_clones>

00000894 <check_umode_change>:
 894:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 898:	add	fp, sp, #28
 89c:	sub	sp, sp, #20
 8a0:	ldr	r4, [r0]
 8a4:	mov	r7, r4
 8a8:	ldr	r1, [r7, #64]!	; 0x40
 8ac:	tst	r1, #8192	; 0x2000
 8b0:	beq	a58 <check_umode_change+0x1c4>
 8b4:	ldrh	r2, [r4, #80]	; 0x50
 8b8:	cmp	r2, #64	; 0x40
 8bc:	bne	a58 <check_umode_change+0x1c4>
 8c0:	ldr	r0, [r0, #4]
 8c4:	ldr	r5, [r4, #56]	; 0x38
 8c8:	ldr	r2, [pc, #772]	; bd4 <check_umode_change+0x340>
 8cc:	ldr	r2, [pc, r2]
 8d0:	eor	r0, r5, r0
 8d4:	ldr	r6, [r2, #480]	; 0x1e0
 8d8:	tst	r0, r6
 8dc:	beq	a58 <check_umode_change+0x1c4>
 8e0:	tst	r6, r5
 8e4:	beq	92c <check_umode_change+0x98>
 8e8:	tst	r1, #16777216	; 0x1000000
 8ec:	bne	91c <check_umode_change+0x88>
 8f0:	ldr	r0, [r4, #432]	; 0x1b0
 8f4:	ldr	sl, [r0, #432]	; 0x1b0
 8f8:	cmp	sl, #0
 8fc:	beq	91c <check_umode_change+0x88>
 900:	tst	r1, #131072	; 0x20000
 904:	beq	a60 <check_umode_change+0x1cc>
 908:	add	r0, r4, #163	; 0xa3
 90c:	mov	r1, sl
 910:	bl	6c8 <strcmp@plt>
 914:	cmp	r0, #0
 918:	beq	a60 <check_umode_change+0x1cc>
 91c:	bic	r0, r5, r6
 920:	str	r0, [r4, #56]	; 0x38
 924:	sub	sp, fp, #28
 928:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 92c:	ldr	r0, [r4, #432]	; 0x1b0
 930:	ldr	r1, [r0, #432]	; 0x1b0
 934:	cmp	r1, #0
 938:	beq	a58 <check_umode_change+0x1c4>
 93c:	add	r0, r4, #163	; 0xa3
 940:	bl	6c8 <strcmp@plt>
 944:	cmp	r0, #0
 948:	bne	a58 <check_umode_change+0x1c4>
 94c:	ldr	r2, [pc, #688]	; c04 <check_umode_change+0x370>
 950:	add	r8, r4, #227	; 0xe3
 954:	mov	r0, r4
 958:	mov	r1, #396	; 0x18c
 95c:	mov	r3, r8
 960:	add	r2, pc, r2
 964:	bl	728 <sendto_one_numeric@plt>
 968:	ldr	r0, [pc, #664]	; c08 <check_umode_change+0x374>
 96c:	mov	r6, r4
 970:	add	r9, r4, #88	; 0x58
 974:	ldr	r0, [pc, r0]
 978:	ldr	r0, [r0]
 97c:	ldr	r1, [pc, #648]	; c0c <check_umode_change+0x378>
 980:	ldr	r1, [pc, r1]
 984:	ldr	r1, [r1]
 988:	ldr	r5, [pc, #640]	; c10 <check_umode_change+0x37c>
 98c:	ldr	r5, [pc, r5]
 990:	ldrb	r3, [r6, #396]!	; 0x18c
 994:	ldrb	r2, [r5, #396]!	; 0x18c
 998:	ldr	ip, [pc, #628]	; c14 <check_umode_change+0x380>
 99c:	cmp	r3, #0
 9a0:	mov	r3, r6
 9a4:	moveq	r3, r9
 9a8:	sub	sl, r5, #308	; 0x134
 9ac:	cmp	r2, #0
 9b0:	mov	r2, r5
 9b4:	add	ip, pc, ip
 9b8:	moveq	r2, sl
 9bc:	str	ip, [sp]
 9c0:	stmib	sp, {r2, r3, r8}
 9c4:	orr	r2, r0, r1
 9c8:	mov	r0, #0
 9cc:	mov	r1, #0
 9d0:	mov	r3, #0
 9d4:	bl	704 <sendto_server@plt>
 9d8:	ldr	r0, [pc, #568]	; c18 <check_umode_change+0x384>
 9dc:	ldr	r0, [pc, r0]
 9e0:	ldr	r3, [r0]
 9e4:	ldr	r0, [pc, #560]	; c1c <check_umode_change+0x388>
 9e8:	ldr	r0, [pc, r0]
 9ec:	ldrb	r1, [r6]
 9f0:	ldr	r2, [r0]
 9f4:	ldrb	r0, [r5]
 9f8:	ldr	ip, [pc, #544]	; c20 <check_umode_change+0x38c>
 9fc:	cmp	r1, #0
 a00:	mov	r1, #0
 a04:	moveq	r6, r9
 a08:	cmp	r0, #0
 a0c:	add	ip, pc, ip
 a10:	mov	r0, #0
 a14:	moveq	r5, sl
 a18:	str	ip, [sp]
 a1c:	stmib	sp, {r5, r6, r8}
 a20:	bl	704 <sendto_server@plt>
 a24:	ldr	r0, [pc, #504]	; c24 <check_umode_change+0x390>
 a28:	mov	r1, #0
 a2c:	add	r2, r4, #152	; 0x98
 a30:	mov	r3, r8
 a34:	str	r1, [sp]
 a38:	mov	r1, r9
 a3c:	add	r0, pc, r0
 a40:	str	r0, [sp, #4]
 a44:	mov	r0, r4
 a48:	bl	740 <change_nick_user_host@plt>
 a4c:	ldr	r0, [r7]
 a50:	bic	r0, r0, #131072	; 0x20000
 a54:	str	r0, [r7]
 a58:	sub	sp, fp, #28
 a5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 a60:	add	r6, r4, #163	; 0xa3
 a64:	mov	r1, sl
 a68:	mov	r0, r6
 a6c:	bl	6c8 <strcmp@plt>
 a70:	cmp	r0, #0
 a74:	beq	bb4 <check_umode_change+0x320>
 a78:	add	r1, r4, #227	; 0xe3
 a7c:	mov	r3, sl
 a80:	str	r1, [sp, #16]
 a84:	cmp	r1, sl
 a88:	mov	r1, #396	; 0x18c
 a8c:	ldr	r0, [pc, #324]	; bd8 <check_umode_change+0x344>
 a90:	ldr	r2, [pc, #324]	; bdc <check_umode_change+0x348>
 a94:	add	r0, pc, r0
 a98:	add	r2, pc, r2
 a9c:	movne	r2, r0
 aa0:	mov	r0, r4
 aa4:	bl	728 <sendto_one_numeric@plt>
 aa8:	ldr	r0, [pc, #304]	; be0 <check_umode_change+0x34c>
 aac:	mov	r5, r4
 ab0:	add	r9, r4, #88	; 0x58
 ab4:	ldr	r0, [pc, r0]
 ab8:	ldr	r0, [r0]
 abc:	ldr	r1, [pc, #288]	; be4 <check_umode_change+0x350>
 ac0:	ldr	r1, [pc, r1]
 ac4:	ldr	r1, [r1]
 ac8:	ldr	r6, [pc, #280]	; be8 <check_umode_change+0x354>
 acc:	ldr	r6, [pc, r6]
 ad0:	ldrb	r3, [r5, #396]!	; 0x18c
 ad4:	ldrb	r2, [r6, #396]!	; 0x18c
 ad8:	ldr	ip, [pc, #268]	; bec <check_umode_change+0x358>
 adc:	cmp	r3, #0
 ae0:	mov	r3, r5
 ae4:	moveq	r3, r9
 ae8:	sub	r8, r6, #308	; 0x134
 aec:	cmp	r2, #0
 af0:	mov	r2, r6
 af4:	add	ip, pc, ip
 af8:	moveq	r2, r8
 afc:	str	ip, [sp]
 b00:	stmib	sp, {r2, r3, sl}
 b04:	orr	r2, r0, r1
 b08:	mov	r0, #0
 b0c:	mov	r1, #0
 b10:	mov	r3, #0
 b14:	bl	704 <sendto_server@plt>
 b18:	ldr	r0, [pc, #208]	; bf0 <check_umode_change+0x35c>
 b1c:	ldr	r0, [pc, r0]
 b20:	ldr	r3, [r0]
 b24:	ldr	r0, [pc, #200]	; bf4 <check_umode_change+0x360>
 b28:	ldr	r0, [pc, r0]
 b2c:	ldrb	r1, [r5]
 b30:	ldr	r2, [r0]
 b34:	ldrb	r0, [r6]
 b38:	ldr	ip, [pc, #184]	; bf8 <check_umode_change+0x364>
 b3c:	cmp	r1, #0
 b40:	mov	r1, #0
 b44:	str	sl, [sp, #12]
 b48:	moveq	r5, r9
 b4c:	str	r5, [sp, #8]
 b50:	cmp	r0, #0
 b54:	add	ip, pc, ip
 b58:	mov	r0, #0
 b5c:	moveq	r6, r8
 b60:	str	ip, [sp]
 b64:	str	r6, [sp, #4]
 b68:	bl	704 <sendto_server@plt>
 b6c:	ldr	r0, [pc, #136]	; bfc <check_umode_change+0x368>
 b70:	mov	r1, #0
 b74:	add	r2, r4, #152	; 0x98
 b78:	mov	r3, sl
 b7c:	str	r1, [sp]
 b80:	mov	r1, r9
 b84:	add	r0, pc, r0
 b88:	str	r0, [sp, #4]
 b8c:	mov	r0, r4
 b90:	bl	740 <change_nick_user_host@plt>
 b94:	ldr	r2, [sp, #16]
 b98:	ldr	r0, [r7]
 b9c:	cmp	r2, sl
 ba0:	bic	r1, r0, #131072	; 0x20000
 ba4:	orrne	r1, r0, #131072	; 0x20000
 ba8:	str	r1, [r7]
 bac:	sub	sp, fp, #28
 bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 bb4:	ldr	r2, [pc, #68]	; c00 <check_umode_change+0x36c>
 bb8:	mov	r0, r4
 bbc:	mov	r1, #396	; 0x18c
 bc0:	mov	r3, r6
 bc4:	add	r2, pc, r2
 bc8:	sub	sp, fp, #28
 bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 bd0:	b	728 <sendto_one_numeric@plt>
 bd4:	.word	0x00011780
 bd8:	.word	0x00000575
 bdc:	.word	0x0000058d
 be0:	.word	0x00011594
 be4:	.word	0x00011594
 be8:	.word	0x00011590
 bec:	.word	0x00000544
 bf0:	.word	0x00011538
 bf4:	.word	0x00011520
 bf8:	.word	0x000004f7
 bfc:	.word	0x000004e2
 c00:	.word	0x00000445
 c04:	.word	0x000006c5
 c08:	.word	0x000116d4
 c0c:	.word	0x000116d4
 c10:	.word	0x000116d0
 c14:	.word	0x00000684
 c18:	.word	0x00011678
 c1c:	.word	0x00011660
 c20:	.word	0x0000063f
 c24:	.word	0x0000062a

00000c28 <check_new_user>:
 c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 c2c:	add	fp, sp, #28
 c30:	sub	sp, sp, #12
 c34:	mov	r9, r0
 c38:	ldrb	r0, [r0, #67]	; 0x43
 c3c:	tst	r0, #1
 c40:	bne	cd4 <check_new_user+0xac>
 c44:	mov	r0, #1
 c48:	mov	r1, #64	; 0x40
 c4c:	bl	6bc <calloc@plt>
 c50:	cmp	r0, #0
 c54:	beq	f90 <check_new_user+0x368>
 c58:	ldr	r1, [r9, #432]	; 0x1b0
 c5c:	add	r4, r9, #227	; 0xe3
 c60:	add	sl, r9, #64	; 0x40
 c64:	str	r0, [r1, #432]	; 0x1b0
 c68:	movw	r0, #291	; 0x123
 c6c:	add	r1, r9, r0
 c70:	mov	r0, r4
 c74:	bl	758 <irccmp@plt>
 c78:	mov	r5, r0
 c7c:	ldr	r0, [r9, #432]	; 0x1b0
 c80:	mov	r1, #32
 c84:	ldr	r8, [r0, #432]	; 0x1b0
 c88:	mov	r0, r4
 c8c:	bl	6f8 <fnv_hash@plt>
 c90:	mov	r6, r0
 c94:	mov	r0, r8
 c98:	mov	r1, r4
 c9c:	mov	r2, #64	; 0x40
 ca0:	bl	74c <rb_strlcpy@plt>
 ca4:	cmp	r5, #0
 ca8:	str	r4, [sp, #8]
 cac:	beq	db4 <check_new_user+0x18c>
 cb0:	str	sl, [sp]
 cb4:	str	r9, [sp, #4]
 cb8:	movw	r5, #60495	; 0xec4f
 cbc:	mov	r4, #26
 cc0:	mov	r7, r8
 cc4:	ldr	r9, [pc, #716]	; f98 <check_new_user+0x370>
 cc8:	movt	r5, #20164	; 0x4ec4
 ccc:	add	r9, pc, r9
 cd0:	b	d34 <check_new_user+0x10c>
 cd4:	ldr	r0, [r9, #56]	; 0x38
 cd8:	ldr	r1, [pc, #692]	; f94 <check_new_user+0x36c>
 cdc:	ldr	r1, [pc, r1]
 ce0:	ldr	r1, [r1, #480]	; 0x1e0
 ce4:	bic	r0, r0, r1
 ce8:	str	r0, [r9, #56]	; 0x38
 cec:	sub	sp, fp, #28
 cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 cf4:	bl	71c <__ctype_b_loc@plt>
 cf8:	cmp	sl, #45	; 0x2d
 cfc:	beq	d30 <check_new_user+0x108>
 d00:	ldr	r0, [r0]
 d04:	add	r0, r0, sl, lsl #1
 d08:	ldrh	r0, [r0]
 d0c:	ands	r0, r0, #2048	; 0x800
 d10:	bne	d30 <check_new_user+0x108>
 d14:	add	r0, r6, sl
 d18:	ror	r6, r6, #31
 d1c:	umull	r1, r2, r0, r5
 d20:	lsr	r1, r2, #3
 d24:	mls	r0, r1, r4, r0
 d28:	ldrb	r0, [r9, r0]
 d2c:	strb	r0, [r7]
 d30:	add	r7, r7, #1
 d34:	ldrb	sl, [r7]
 d38:	cmp	sl, #0
 d3c:	cmpne	sl, #46	; 0x2e
 d40:	bne	cf4 <check_new_user+0xcc>
 d44:	ldrb	r5, [r8]
 d48:	ldr	r9, [sp, #4]
 d4c:	ldr	sl, [sp]
 d50:	cmp	r5, #0
 d54:	beq	f14 <check_new_user+0x2ec>
 d58:	add	r4, r8, #1
 d5c:	bl	71c <__ctype_b_loc@plt>
 d60:	movw	r1, #52429	; 0xcccd
 d64:	movt	r1, #52428	; 0xcccc
 d68:	b	d7c <check_new_user+0x154>
 d6c:	ldrb	r5, [r4], #1
 d70:	ror	r6, r6, #31
 d74:	cmp	r5, #0
 d78:	beq	f14 <check_new_user+0x2ec>
 d7c:	ldr	r3, [r0]
 d80:	uxtb	r2, r5
 d84:	add	r3, r3, r2, lsl #1
 d88:	ldrb	r3, [r3, #1]
 d8c:	tst	r3, #8
 d90:	beq	d6c <check_new_user+0x144>
 d94:	add	r2, r6, r2
 d98:	umull	r3, r7, r2, r1
 d9c:	lsr	r3, r7, #3
 da0:	add	r3, r3, r3, lsl #2
 da4:	sub	r2, r2, r3, lsl #1
 da8:	orr	r2, r2, #48	; 0x30
 dac:	strb	r2, [r4, #-1]
 db0:	b	d6c <check_new_user+0x144>
 db4:	mov	r0, r8
 db8:	mov	r1, #58	; 0x3a
 dbc:	bl	734 <strchr@plt>
 dc0:	cmp	r0, #0
 dc4:	beq	e8c <check_new_user+0x264>
 dc8:	mov	r0, #0
 dcc:	mov	r1, r8
 dd0:	ldrb	r2, [r1]
 dd4:	cmp	r2, #58	; 0x3a
 dd8:	bne	e04 <check_new_user+0x1dc>
 ddc:	b	df0 <check_new_user+0x1c8>
 de0:	add	r1, r1, #1
 de4:	ldrb	r2, [r1]
 de8:	cmp	r2, #58	; 0x3a
 dec:	bne	e04 <check_new_user+0x1dc>
 df0:	add	r0, r0, #1
 df4:	add	r1, r1, #1
 df8:	ldrb	r2, [r1]
 dfc:	cmp	r2, #58	; 0x3a
 e00:	beq	df0 <check_new_user+0x1c8>
 e04:	cmp	r2, #0
 e08:	bne	de0 <check_new_user+0x1b8>
 e0c:	ldr	r3, [pc, #392]	; f9c <check_new_user+0x374>
 e10:	add	r0, r0, r0, lsr #31
 e14:	movw	r2, #52429	; 0xcccd
 e18:	mov	r1, #0
 e1c:	movt	r2, #52428	; 0xcccc
 e20:	asr	r0, r0, #1
 e24:	add	r3, pc, r3
 e28:	ldrb	r7, [r8]
 e2c:	cmp	r7, #46	; 0x2e
 e30:	cmpne	r7, #58	; 0x3a
 e34:	beq	e68 <check_new_user+0x240>
 e38:	b	e80 <check_new_user+0x258>
 e3c:	cmp	r1, r0
 e40:	blt	e6c <check_new_user+0x244>
 e44:	add	r7, r6, r7
 e48:	ror	r6, r6, #31
 e4c:	umull	r5, r4, r7, r2
 e50:	lsr	r5, r4, #4
 e54:	add	r5, r5, r5, lsl #2
 e58:	sub	r7, r7, r5, lsl #2
 e5c:	ldrb	r7, [r3, r7]
 e60:	strb	r7, [r8]
 e64:	b	e6c <check_new_user+0x244>
 e68:	add	r1, r1, #1
 e6c:	add	r8, r8, #1
 e70:	ldrb	r7, [r8]
 e74:	cmp	r7, #46	; 0x2e
 e78:	cmpne	r7, #58	; 0x3a
 e7c:	beq	e68 <check_new_user+0x240>
 e80:	cmp	r7, #0
 e84:	bne	e3c <check_new_user+0x214>
 e88:	b	f14 <check_new_user+0x2ec>
 e8c:	mov	r0, r8
 e90:	mov	r1, #46	; 0x2e
 e94:	bl	734 <strchr@plt>
 e98:	cmp	r0, #0
 e9c:	beq	f14 <check_new_user+0x2ec>
 ea0:	ldr	r2, [pc, #248]	; fa0 <check_new_user+0x378>
 ea4:	movw	r1, #52429	; 0xcccd
 ea8:	mov	r0, #0
 eac:	movt	r1, #52428	; 0xcccc
 eb0:	add	r2, pc, r2
 eb4:	ldrb	r3, [r8]
 eb8:	cmp	r3, #46	; 0x2e
 ebc:	cmpne	r3, #58	; 0x3a
 ec0:	beq	ef4 <check_new_user+0x2cc>
 ec4:	b	f0c <check_new_user+0x2e4>
 ec8:	cmp	r0, #2
 ecc:	blt	ef8 <check_new_user+0x2d0>
 ed0:	add	r3, r6, r3
 ed4:	ror	r6, r6, #31
 ed8:	umull	r7, r5, r3, r1
 edc:	lsr	r7, r5, #4
 ee0:	add	r7, r7, r7, lsl #2
 ee4:	sub	r3, r3, r7, lsl #2
 ee8:	ldrb	r3, [r2, r3]
 eec:	strb	r3, [r8]
 ef0:	b	ef8 <check_new_user+0x2d0>
 ef4:	add	r0, r0, #1
 ef8:	add	r8, r8, #1
 efc:	ldrb	r3, [r8]
 f00:	cmp	r3, #46	; 0x2e
 f04:	cmpne	r3, #58	; 0x3a
 f08:	beq	ef4 <check_new_user+0x2cc>
 f0c:	cmp	r3, #0
 f10:	bne	ec8 <check_new_user+0x2a0>
 f14:	ldrb	r0, [sl, #2]
 f18:	tst	r0, #2
 f1c:	bne	f28 <check_new_user+0x300>
 f20:	ldr	r0, [r9, #56]	; 0x38
 f24:	b	f40 <check_new_user+0x318>
 f28:	ldr	r0, [r9, #56]	; 0x38
 f2c:	ldr	r1, [pc, #112]	; fa4 <check_new_user+0x37c>
 f30:	ldr	r1, [pc, r1]
 f34:	ldr	r1, [r1, #480]	; 0x1e0
 f38:	bic	r0, r0, r1
 f3c:	str	r0, [r9, #56]	; 0x38
 f40:	ldr	r1, [pc, #96]	; fa8 <check_new_user+0x380>
 f44:	ldr	r1, [pc, r1]
 f48:	ldr	r1, [r1, #480]	; 0x1e0
 f4c:	tst	r1, r0
 f50:	beq	f88 <check_new_user+0x360>
 f54:	ldr	r0, [r9, #432]	; 0x1b0
 f58:	add	r4, r9, #163	; 0xa3
 f5c:	mov	r2, #64	; 0x40
 f60:	ldr	r1, [r0, #432]	; 0x1b0
 f64:	mov	r0, r4
 f68:	bl	74c <rb_strlcpy@plt>
 f6c:	ldr	r1, [sp, #8]
 f70:	mov	r0, r4
 f74:	bl	758 <irccmp@plt>
 f78:	cmp	r0, #0
 f7c:	ldrne	r0, [sl]
 f80:	orrne	r0, r0, #131072	; 0x20000
 f84:	strne	r0, [sl]
 f88:	sub	sp, fp, #28
 f8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 f90:	bl	6e0 <rb_outofmemory@plt>
 f94:	.word	0x00011370
 f98:	.word	0x000003a8
 f9c:	.word	0x00000256
 fa0:	.word	0x000001ca
 fa4:	.word	0x0001111c
 fa8:	.word	0x00011108

00000fac <_modinit>:
 fac:	push	{fp, lr}
 fb0:	mov	fp, sp
 fb4:	bl	6ec <find_umode_slot@plt>
 fb8:	ldr	r1, [pc, #16]	; fd0 <_modinit+0x24>
 fbc:	ldr	r1, [pc, r1]
 fc0:	str	r0, [r1, #480]	; 0x1e0
 fc4:	bl	764 <construct_umodebuf@plt>
 fc8:	mov	r0, #0
 fcc:	pop	{fp, pc}
 fd0:	.word	0x00011090

00000fd4 <_moddeinit>:
 fd4:	ldr	r0, [pc, #12]	; fe8 <_moddeinit+0x14>
 fd8:	mov	r1, #0
 fdc:	ldr	r0, [pc, r0]
 fe0:	str	r1, [r0, #480]	; 0x1e0
 fe4:	b	764 <construct_umodebuf@plt>
 fe8:	.word	0x00011070

Disassembly of section .fini:

00000fec <_fini>:
 fec:	push	{r3, lr}
 ff0:	pop	{r3, pc}
