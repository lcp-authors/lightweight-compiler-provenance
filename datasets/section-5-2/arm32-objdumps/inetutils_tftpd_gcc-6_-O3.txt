
../repos/inetutils/src/tftpd:     file format elf32-littlearm


Disassembly of section .init:

000111d8 <.init>:
   111d8:	push	{r3, lr}
   111dc:	bl	11a14 <__assert_fail@plt+0x474>
   111e0:	pop	{r3, pc}

Disassembly of section .plt:

000111e4 <fdopen@plt-0x14>:
   111e4:	push	{lr}		; (str lr, [sp, #-4]!)
   111e8:	ldr	lr, [pc, #4]	; 111f4 <fdopen@plt-0x4>
   111ec:	add	lr, pc, lr
   111f0:	ldr	pc, [lr, #8]!
   111f4:	andeq	ip, r1, ip, lsl #28

000111f8 <fdopen@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #28, 20	; 0x1c000
   11200:	ldr	pc, [ip, #3596]!	; 0xe0c

00011204 <calloc@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #28, 20	; 0x1c000
   1120c:	ldr	pc, [ip, #3588]!	; 0xe04

00011210 <fputs_unlocked@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #28, 20	; 0x1c000
   11218:	ldr	pc, [ip, #3580]!	; 0xdfc

0001121c <strstr@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #28, 20	; 0x1c000
   11224:	ldr	pc, [ip, #3572]!	; 0xdf4

00011228 <raise@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #28, 20	; 0x1c000
   11230:	ldr	pc, [ip, #3564]!	; 0xdec

00011234 <getpwnam@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #28, 20	; 0x1c000
   1123c:	ldr	pc, [ip, #3556]!	; 0xde4

00011240 <strcmp@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #28, 20	; 0x1c000
   11248:	ldr	pc, [ip, #3548]!	; 0xddc

0001124c <strtol@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #28, 20	; 0x1c000
   11254:	ldr	pc, [ip, #3540]!	; 0xdd4

00011258 <printf@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #28, 20	; 0x1c000
   11260:	ldr	pc, [ip, #3532]!	; 0xdcc

00011264 <read@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #28, 20	; 0x1c000
   1126c:	ldr	pc, [ip, #3524]!	; 0xdc4

00011270 <getuid@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #28, 20	; 0x1c000
   11278:	ldr	pc, [ip, #3516]!	; 0xdbc

0001127c <memmove@plt>:
   1127c:	add	ip, pc, #0, 12
   11280:	add	ip, ip, #28, 20	; 0x1c000
   11284:	ldr	pc, [ip, #3508]!	; 0xdb4

00011288 <strchrnul@plt>:
   11288:	add	ip, pc, #0, 12
   1128c:	add	ip, ip, #28, 20	; 0x1c000
   11290:	ldr	pc, [ip, #3500]!	; 0xdac

00011294 <free@plt>:
   11294:	add	ip, pc, #0, 12
   11298:	add	ip, ip, #28, 20	; 0x1c000
   1129c:	ldr	pc, [ip, #3492]!	; 0xda4

000112a0 <gai_strerror@plt>:
   112a0:	add	ip, pc, #0, 12
   112a4:	add	ip, ip, #28, 20	; 0x1c000
   112a8:	ldr	pc, [ip, #3484]!	; 0xd9c

000112ac <strndup@plt>:
   112ac:	add	ip, pc, #0, 12
   112b0:	add	ip, ip, #28, 20	; 0x1c000
   112b4:	ldr	pc, [ip, #3476]!	; 0xd94

000112b8 <memcpy@plt>:
   112b8:	add	ip, pc, #0, 12
   112bc:	add	ip, ip, #28, 20	; 0x1c000
   112c0:	ldr	pc, [ip, #3468]!	; 0xd8c

000112c4 <signal@plt>:
   112c4:	add	ip, pc, #0, 12
   112c8:	add	ip, ip, #28, 20	; 0x1c000
   112cc:	ldr	pc, [ip, #3460]!	; 0xd84

000112d0 <fwrite_unlocked@plt>:
   112d0:	add	ip, pc, #0, 12
   112d4:	add	ip, ip, #28, 20	; 0x1c000
   112d8:	ldr	pc, [ip, #3452]!	; 0xd7c

000112dc <sleep@plt>:
   112dc:	add	ip, pc, #0, 12
   112e0:	add	ip, ip, #28, 20	; 0x1c000
   112e4:	ldr	pc, [ip, #3444]!	; 0xd74

000112e8 <recvfrom@plt>:
   112e8:	add	ip, pc, #0, 12
   112ec:	add	ip, ip, #28, 20	; 0x1c000
   112f0:	ldr	pc, [ip, #3436]!	; 0xd6c

000112f4 <alarm@plt>:
   112f4:	add	ip, pc, #0, 12
   112f8:	add	ip, ip, #28, 20	; 0x1c000
   112fc:	ldr	pc, [ip, #3428]!	; 0xd64

00011300 <realloc@plt>:
   11300:	add	ip, pc, #0, 12
   11304:	add	ip, ip, #28, 20	; 0x1c000
   11308:	ldr	pc, [ip, #3420]!	; 0xd5c

0001130c <chdir@plt>:
   1130c:	add	ip, pc, #0, 12
   11310:	add	ip, ip, #28, 20	; 0x1c000
   11314:	ldr	pc, [ip, #3412]!	; 0xd54

00011318 <strcasecmp@plt>:
   11318:	add	ip, pc, #0, 12
   1131c:	add	ip, ip, #28, 20	; 0x1c000
   11320:	ldr	pc, [ip, #3404]!	; 0xd4c

00011324 <funlockfile@plt>:
   11324:	add	ip, pc, #0, 12
   11328:	add	ip, ip, #28, 20	; 0x1c000
   1132c:	ldr	pc, [ip, #3396]!	; 0xd44

00011330 <fwrite@plt>:
   11330:	add	ip, pc, #0, 12
   11334:	add	ip, ip, #28, 20	; 0x1c000
   11338:	ldr	pc, [ip, #3388]!	; 0xd3c

0001133c <ioctl@plt>:
   1133c:	add	ip, pc, #0, 12
   11340:	add	ip, ip, #28, 20	; 0x1c000
   11344:	ldr	pc, [ip, #3380]!	; 0xd34

00011348 <chroot@plt>:
   11348:	add	ip, pc, #0, 12
   1134c:	add	ip, ip, #28, 20	; 0x1c000
   11350:	ldr	pc, [ip, #3372]!	; 0xd2c

00011354 <error@plt>:
   11354:	add	ip, pc, #0, 12
   11358:	add	ip, ip, #28, 20	; 0x1c000
   1135c:	ldr	pc, [ip, #3364]!	; 0xd24

00011360 <open64@plt>:
   11360:	add	ip, pc, #0, 12
   11364:	add	ip, ip, #28, 20	; 0x1c000
   11368:	ldr	pc, [ip, #3356]!	; 0xd1c

0001136c <getenv@plt>:
   1136c:	add	ip, pc, #0, 12
   11370:	add	ip, ip, #28, 20	; 0x1c000
   11374:	ldr	pc, [ip, #3348]!	; 0xd14

00011378 <setgid@plt>:
   11378:	add	ip, pc, #0, 12
   1137c:	add	ip, ip, #28, 20	; 0x1c000
   11380:	ldr	pc, [ip, #3340]!	; 0xd0c

00011384 <malloc@plt>:
   11384:	add	ip, pc, #0, 12
   11388:	add	ip, ip, #28, 20	; 0x1c000
   1138c:	ldr	pc, [ip, #3332]!	; 0xd04

00011390 <__libc_start_main@plt>:
   11390:	add	ip, pc, #0, 12
   11394:	add	ip, ip, #28, 20	; 0x1c000
   11398:	ldr	pc, [ip, #3324]!	; 0xcfc

0001139c <strerror@plt>:
   1139c:	add	ip, pc, #0, 12
   113a0:	add	ip, ip, #28, 20	; 0x1c000
   113a4:	ldr	pc, [ip, #3316]!	; 0xcf4

000113a8 <__ctype_tolower_loc@plt>:
   113a8:	add	ip, pc, #0, 12
   113ac:	add	ip, ip, #28, 20	; 0x1c000
   113b0:	ldr	pc, [ip, #3308]!	; 0xcec

000113b4 <__gmon_start__@plt>:
   113b4:	add	ip, pc, #0, 12
   113b8:	add	ip, ip, #28, 20	; 0x1c000
   113bc:	ldr	pc, [ip, #3300]!	; 0xce4

000113c0 <mempcpy@plt>:
   113c0:	add	ip, pc, #0, 12
   113c4:	add	ip, ip, #28, 20	; 0x1c000
   113c8:	ldr	pc, [ip, #3292]!	; 0xcdc

000113cc <__ctype_b_loc@plt>:
   113cc:	add	ip, pc, #0, 12
   113d0:	add	ip, ip, #28, 20	; 0x1c000
   113d4:	ldr	pc, [ip, #3284]!	; 0xcd4

000113d8 <exit@plt>:
   113d8:	add	ip, pc, #0, 12
   113dc:	add	ip, ip, #28, 20	; 0x1c000
   113e0:	ldr	pc, [ip, #3276]!	; 0xccc

000113e4 <strlen@plt>:
   113e4:	add	ip, pc, #0, 12
   113e8:	add	ip, ip, #28, 20	; 0x1c000
   113ec:	ldr	pc, [ip, #3268]!	; 0xcc4

000113f0 <strchr@plt>:
   113f0:	add	ip, pc, #0, 12
   113f4:	add	ip, ip, #28, 20	; 0x1c000
   113f8:	ldr	pc, [ip, #3260]!	; 0xcbc

000113fc <fprintf@plt>:
   113fc:	add	ip, pc, #0, 12
   11400:	add	ip, ip, #28, 20	; 0x1c000
   11404:	ldr	pc, [ip, #3252]!	; 0xcb4

00011408 <__errno_location@plt>:
   11408:	add	ip, pc, #0, 12
   1140c:	add	ip, ip, #28, 20	; 0x1c000
   11410:	ldr	pc, [ip, #3244]!	; 0xcac

00011414 <strerror_r@plt>:
   11414:	add	ip, pc, #0, 12
   11418:	add	ip, ip, #28, 20	; 0x1c000
   1141c:	ldr	pc, [ip, #3236]!	; 0xca4

00011420 <bind@plt>:
   11420:	add	ip, pc, #0, 12
   11424:	add	ip, ip, #28, 20	; 0x1c000
   11428:	ldr	pc, [ip, #3228]!	; 0xc9c

0001142c <memset@plt>:
   1142c:	add	ip, pc, #0, 12
   11430:	add	ip, ip, #28, 20	; 0x1c000
   11434:	ldr	pc, [ip, #3220]!	; 0xc94

00011438 <write@plt>:
   11438:	add	ip, pc, #0, 12
   1143c:	add	ip, ip, #28, 20	; 0x1c000
   11440:	ldr	pc, [ip, #3212]!	; 0xc8c

00011444 <fileno@plt>:
   11444:	add	ip, pc, #0, 12
   11448:	add	ip, ip, #28, 20	; 0x1c000
   1144c:	ldr	pc, [ip, #3204]!	; 0xc84

00011450 <memchr@plt>:
   11450:	add	ip, pc, #0, 12
   11454:	add	ip, ip, #28, 20	; 0x1c000
   11458:	ldr	pc, [ip, #3196]!	; 0xc7c

0001145c <fclose@plt>:
   1145c:	add	ip, pc, #0, 12
   11460:	add	ip, ip, #28, 20	; 0x1c000
   11464:	ldr	pc, [ip, #3188]!	; 0xc74

00011468 <fseeko64@plt>:
   11468:	add	ip, pc, #0, 12
   1146c:	add	ip, ip, #28, 20	; 0x1c000
   11470:	ldr	pc, [ip, #3180]!	; 0xc6c

00011474 <sendto@plt>:
   11474:	add	ip, pc, #0, 12
   11478:	add	ip, ip, #28, 20	; 0x1c000
   1147c:	ldr	pc, [ip, #3172]!	; 0xc64

00011480 <__overflow@plt>:
   11480:	add	ip, pc, #0, 12
   11484:	add	ip, ip, #28, 20	; 0x1c000
   11488:	ldr	pc, [ip, #3164]!	; 0xc5c

0001148c <fork@plt>:
   1148c:	add	ip, pc, #0, 12
   11490:	add	ip, ip, #28, 20	; 0x1c000
   11494:	ldr	pc, [ip, #3156]!	; 0xc54

00011498 <getnameinfo@plt>:
   11498:	add	ip, pc, #0, 12
   1149c:	add	ip, ip, #28, 20	; 0x1c000
   114a0:	ldr	pc, [ip, #3148]!	; 0xc4c

000114a4 <strrchr@plt>:
   114a4:	add	ip, pc, #0, 12
   114a8:	add	ip, ip, #28, 20	; 0x1c000
   114ac:	ldr	pc, [ip, #3140]!	; 0xc44

000114b0 <vfprintf@plt>:
   114b0:	add	ip, pc, #0, 12
   114b4:	add	ip, ip, #28, 20	; 0x1c000
   114b8:	ldr	pc, [ip, #3132]!	; 0xc3c

000114bc <__sigsetjmp@plt>:
   114bc:	add	ip, pc, #0, 12
   114c0:	add	ip, ip, #28, 20	; 0x1c000
   114c4:	ldr	pc, [ip, #3124]!	; 0xc34

000114c8 <fputc@plt>:
   114c8:	add	ip, pc, #0, 12
   114cc:	add	ip, ip, #28, 20	; 0x1c000
   114d0:	ldr	pc, [ip, #3116]!	; 0xc2c

000114d4 <syslog@plt>:
   114d4:	add	ip, pc, #0, 12
   114d8:	add	ip, ip, #28, 20	; 0x1c000
   114dc:	ldr	pc, [ip, #3108]!	; 0xc24

000114e0 <setuid@plt>:
   114e0:	add	ip, pc, #0, 12
   114e4:	add	ip, ip, #28, 20	; 0x1c000
   114e8:	ldr	pc, [ip, #3100]!	; 0xc1c

000114ec <sprintf@plt>:
   114ec:	add	ip, pc, #0, 12
   114f0:	add	ip, ip, #28, 20	; 0x1c000
   114f4:	ldr	pc, [ip, #3092]!	; 0xc14

000114f8 <openlog@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #28, 20	; 0x1c000
   11500:	ldr	pc, [ip, #3084]!	; 0xc0c

00011504 <putc@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #28, 20	; 0x1c000
   1150c:	ldr	pc, [ip, #3076]!	; 0xc04

00011510 <flockfile@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #28, 20	; 0x1c000
   11518:	ldr	pc, [ip, #3068]!	; 0xbfc

0001151c <vsnprintf@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #28, 20	; 0x1c000
   11524:	ldr	pc, [ip, #3060]!	; 0xbf4

00011528 <qsort@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #28, 20	; 0x1c000
   11530:	ldr	pc, [ip, #3052]!	; 0xbec

00011534 <socket@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #28, 20	; 0x1c000
   1153c:	ldr	pc, [ip, #3044]!	; 0xbe4

00011540 <__xstat64@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #28, 20	; 0x1c000
   11548:	ldr	pc, [ip, #3036]!	; 0xbdc

0001154c <strncmp@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #28, 20	; 0x1c000
   11554:	ldr	pc, [ip, #3028]!	; 0xbd4

00011558 <abort@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #28, 20	; 0x1c000
   11560:	ldr	pc, [ip, #3020]!	; 0xbcc

00011564 <getc@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #28, 20	; 0x1c000
   1156c:	ldr	pc, [ip, #3012]!	; 0xbc4

00011570 <recv@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #28, 20	; 0x1c000
   11578:	ldr	pc, [ip, #3004]!	; 0xbbc

0001157c <siglongjmp@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #28, 20	; 0x1c000
   11584:	ldr	pc, [ip, #2996]!	; 0xbb4

00011588 <close@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #28, 20	; 0x1c000
   11590:	ldr	pc, [ip, #2988]!	; 0xbac

00011594 <getgrnam@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #28, 20	; 0x1c000
   1159c:	ldr	pc, [ip, #2980]!	; 0xba4

000115a0 <__assert_fail@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #28, 20	; 0x1c000
   115a8:	ldr	pc, [ip, #2972]!	; 0xb9c

Disassembly of section .text:

000115ac <argp_parse@@Base-0x22d4>:
   115ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115b0:	mov	r8, r0
   115b4:	sub	sp, sp, #156	; 0x9c
   115b8:	ldr	r0, [pc, #968]	; 11988 <__assert_fail@plt+0x3e8>
   115bc:	mov	r6, r1
   115c0:	bl	15d64 <argp_parse@@Base+0x24e4>
   115c4:	ldr	r5, [pc, #960]	; 1198c <__assert_fail@plt+0x3ec>
   115c8:	str	r0, [r5, #1356]	; 0x54c
   115cc:	ldr	r0, [r6]
   115d0:	bl	14934 <argp_parse@@Base+0x10b4>
   115d4:	ldr	r3, [pc, #948]	; 11990 <__assert_fail@plt+0x3f0>
   115d8:	ldr	r2, [pc, #948]	; 11994 <__assert_fail@plt+0x3f4>
   115dc:	ldr	r1, [pc, #948]	; 11998 <__assert_fail@plt+0x3f8>
   115e0:	ldr	r0, [pc, #948]	; 1199c <__assert_fail@plt+0x3fc>
   115e4:	str	r2, [r3]
   115e8:	bl	14728 <argp_parse@@Base+0xea8>
   115ec:	mov	r3, #0
   115f0:	add	r0, sp, #16
   115f4:	mov	r2, r6
   115f8:	stm	sp, {r0, r3}
   115fc:	mov	r1, r8
   11600:	ldr	r0, [pc, #920]	; 119a0 <__assert_fail@plt+0x400>
   11604:	bl	13880 <argp_parse@@Base>
   11608:	mov	r2, #88	; 0x58
   1160c:	mov	r1, #9
   11610:	ldr	r0, [pc, #900]	; 1199c <__assert_fail@plt+0x3fc>
   11614:	bl	114f8 <openlog@plt>
   11618:	ldr	r4, [sp, #16]
   1161c:	cmp	r8, r4
   11620:	ble	11680 <__assert_fail@plt+0xe0>
   11624:	add	r6, r6, r4, lsl #2
   11628:	add	r7, r5, #652	; 0x28c
   1162c:	add	r9, r5, #812	; 0x32c
   11630:	b	11658 <__assert_fail@plt+0xb8>
   11634:	cmp	r7, r9
   11638:	add	r4, r4, #1
   1163c:	movcs	r3, #0
   11640:	movcc	r3, #1
   11644:	cmp	r8, r4
   11648:	movle	r3, #0
   1164c:	cmp	r3, #0
   11650:	str	r4, [sp, #16]
   11654:	beq	11680 <__assert_fail@plt+0xe0>
   11658:	ldr	r3, [r6], #4
   1165c:	ldrb	r2, [r3]
   11660:	cmp	r2, #47	; 0x2f
   11664:	bne	11634 <__assert_fail@plt+0x94>
   11668:	str	r3, [r7]
   1166c:	mov	r0, r3
   11670:	bl	113e4 <strlen@plt>
   11674:	add	r7, r7, #8
   11678:	str	r0, [r7, #-4]
   1167c:	b	11634 <__assert_fail@plt+0x94>
   11680:	add	r2, sp, #152	; 0x98
   11684:	mov	fp, #1
   11688:	str	fp, [r2, #-132]!	; 0xffffff7c
   1168c:	ldr	r1, [pc, #784]	; 119a4 <__assert_fail@plt+0x404>
   11690:	mov	r0, #0
   11694:	bl	14904 <argp_parse@@Base+0x1084>
   11698:	cmp	r0, #0
   1169c:	blt	11810 <__assert_fail@plt+0x270>
   116a0:	ldr	r4, [pc, #768]	; 119a8 <__assert_fail@plt+0x408>
   116a4:	mov	r3, #0
   116a8:	add	r2, r4, #128	; 0x80
   116ac:	str	r2, [sp, #4]
   116b0:	mov	r0, r3
   116b4:	str	r4, [sp]
   116b8:	sub	r1, r4, #520	; 0x208
   116bc:	mov	r6, #128	; 0x80
   116c0:	mov	r2, #516	; 0x204
   116c4:	str	r6, [r5, #648]	; 0x288
   116c8:	bl	112e8 <recvfrom@plt>
   116cc:	subs	r3, r0, #0
   116d0:	str	r3, [sp, #8]
   116d4:	blt	11824 <__assert_fail@plt+0x284>
   116d8:	add	sl, sp, #24
   116dc:	mov	r9, #0
   116e0:	mov	r8, #516	; 0x204
   116e4:	sub	r7, r4, #520	; 0x208
   116e8:	bl	1148c <fork@plt>
   116ec:	subs	r3, r0, #0
   116f0:	bge	11748 <__assert_fail@plt+0x1a8>
   116f4:	mov	r0, fp
   116f8:	bl	112dc <sleep@plt>
   116fc:	mov	r3, r9
   11700:	stm	sp, {r4, sl}
   11704:	mov	r2, r8
   11708:	mov	r1, r7
   1170c:	mov	r0, #0
   11710:	str	r6, [sp, #24]
   11714:	bl	112e8 <recvfrom@plt>
   11718:	cmp	r0, #0
   1171c:	add	fp, r0, #1
   11720:	ldrgt	r3, [sp, #24]
   11724:	strgt	r0, [sp, #8]
   11728:	strgt	r3, [r5, #648]	; 0x288
   1172c:	cmp	fp, #19
   11730:	ble	116e8 <__assert_fail@plt+0x148>
   11734:	ldr	r1, [pc, #624]	; 119ac <__assert_fail@plt+0x40c>
   11738:	mov	r0, #3
   1173c:	bl	114d4 <syslog@plt>
   11740:	mov	r0, #1
   11744:	bl	113d8 <exit@plt>
   11748:	bne	11808 <__assert_fail@plt+0x268>
   1174c:	str	r3, [sp, #12]
   11750:	bl	112f4 <alarm@plt>
   11754:	ldr	r3, [sp, #12]
   11758:	mov	r0, r3
   1175c:	bl	11588 <close@plt>
   11760:	mov	r0, #1
   11764:	bl	11588 <close@plt>
   11768:	ldr	r3, [sp, #12]
   1176c:	mov	r1, #2
   11770:	mov	r2, r3
   11774:	ldrh	r0, [r4]
   11778:	bl	11534 <socket@plt>
   1177c:	ldr	r3, [sp, #12]
   11780:	cmp	r0, #0
   11784:	mov	r6, r0
   11788:	str	r0, [r5, #516]	; 0x204
   1178c:	blt	11838 <__assert_fail@plt+0x298>
   11790:	mov	r1, r3
   11794:	mov	r2, #128	; 0x80
   11798:	add	r0, sp, #24
   1179c:	str	r3, [sp, #12]
   117a0:	bl	1142c <memset@plt>
   117a4:	ldrh	ip, [r4]
   117a8:	add	r1, sp, #24
   117ac:	mov	r0, r6
   117b0:	ldr	r2, [r5, #648]	; 0x288
   117b4:	strh	ip, [sp, #24]
   117b8:	bl	11420 <bind@plt>
   117bc:	ldr	r3, [sp, #12]
   117c0:	cmp	r0, #0
   117c4:	blt	1184c <__assert_fail@plt+0x2ac>
   117c8:	ldr	r2, [r5, #1352]	; 0x548
   117cc:	cmp	r2, #0
   117d0:	beq	117e0 <__assert_fail@plt+0x240>
   117d4:	ldrb	r2, [r2]
   117d8:	cmp	r2, #0
   117dc:	bne	11860 <__assert_fail@plt+0x2c0>
   117e0:	ldrh	r3, [r5]
   117e4:	rev16	r3, r3
   117e8:	sub	r2, r3, #1
   117ec:	strh	r3, [r5]
   117f0:	uxth	r3, r2
   117f4:	cmp	r3, #1
   117f8:	bhi	11740 <__assert_fail@plt+0x1a0>
   117fc:	ldr	r1, [sp, #8]
   11800:	ldr	r0, [pc, #388]	; 1198c <__assert_fail@plt+0x3ec>
   11804:	bl	1254c <__assert_fail@plt+0xfac>
   11808:	mov	r0, #0
   1180c:	bl	113d8 <exit@plt>
   11810:	mov	r0, #3
   11814:	ldr	r1, [pc, #404]	; 119b0 <__assert_fail@plt+0x410>
   11818:	bl	114d4 <syslog@plt>
   1181c:	mov	r0, fp
   11820:	bl	113d8 <exit@plt>
   11824:	mov	r0, #3
   11828:	ldr	r1, [pc, #388]	; 119b4 <__assert_fail@plt+0x414>
   1182c:	bl	114d4 <syslog@plt>
   11830:	mov	r0, fp
   11834:	bl	113d8 <exit@plt>
   11838:	mov	r0, #3
   1183c:	ldr	r1, [pc, #372]	; 119b8 <__assert_fail@plt+0x418>
   11840:	bl	114d4 <syslog@plt>
   11844:	mov	r0, #1
   11848:	bl	113d8 <exit@plt>
   1184c:	mov	r0, #3
   11850:	ldr	r1, [pc, #356]	; 119bc <__assert_fail@plt+0x41c>
   11854:	bl	114d4 <syslog@plt>
   11858:	mov	r0, #1
   1185c:	bl	113d8 <exit@plt>
   11860:	str	r3, [sp, #12]
   11864:	bl	11270 <getuid@plt>
   11868:	ldr	r3, [sp, #12]
   1186c:	cmp	r0, #0
   11870:	bne	11938 <__assert_fail@plt+0x398>
   11874:	ldr	r0, [r5, #1356]	; 0x54c
   11878:	bl	11234 <getpwnam@plt>
   1187c:	subs	r7, r0, #0
   11880:	ldreq	r2, [r5, #1356]	; 0x54c
   11884:	ldreq	r1, [pc, #308]	; 119c0 <__assert_fail@plt+0x420>
   11888:	beq	11958 <__assert_fail@plt+0x3b8>
   1188c:	ldr	r0, [r5, #1344]	; 0x540
   11890:	cmp	r0, #0
   11894:	beq	118a4 <__assert_fail@plt+0x304>
   11898:	ldrb	r3, [r0]
   1189c:	cmp	r3, #0
   118a0:	bne	11944 <__assert_fail@plt+0x3a4>
   118a4:	mov	r4, #0
   118a8:	ldr	r6, [r5, #1352]	; 0x548
   118ac:	mov	r0, r6
   118b0:	bl	11348 <chroot@plt>
   118b4:	cmp	r0, #0
   118b8:	bne	11918 <__assert_fail@plt+0x378>
   118bc:	ldr	r0, [pc, #256]	; 119c4 <__assert_fail@plt+0x424>
   118c0:	bl	1130c <chdir@plt>
   118c4:	cmp	r0, #0
   118c8:	bne	11918 <__assert_fail@plt+0x378>
   118cc:	cmp	r7, #0
   118d0:	beq	117e0 <__assert_fail@plt+0x240>
   118d4:	cmp	r4, #0
   118d8:	beq	11970 <__assert_fail@plt+0x3d0>
   118dc:	ldr	r0, [r4, #8]
   118e0:	bl	11378 <setgid@plt>
   118e4:	cmp	r0, #0
   118e8:	bne	11980 <__assert_fail@plt+0x3e0>
   118ec:	ldr	r0, [r7, #8]
   118f0:	bl	114e0 <setuid@plt>
   118f4:	cmp	r0, #0
   118f8:	beq	117e0 <__assert_fail@plt+0x240>
   118fc:	ldr	r1, [pc, #196]	; 119c8 <__assert_fail@plt+0x428>
   11900:	mov	r0, #3
   11904:	bl	114d4 <syslog@plt>
   11908:	mov	r0, #7
   1190c:	bl	11b0c <__assert_fail@plt+0x56c>
   11910:	mov	r0, #1
   11914:	bl	113d8 <exit@plt>
   11918:	mov	r2, r6
   1191c:	ldr	r1, [pc, #168]	; 119cc <__assert_fail@plt+0x42c>
   11920:	mov	r0, #3
   11924:	bl	114d4 <syslog@plt>
   11928:	mov	r0, #2
   1192c:	bl	11b0c <__assert_fail@plt+0x56c>
   11930:	mov	r0, #1
   11934:	bl	113d8 <exit@plt>
   11938:	mov	r4, r3
   1193c:	mov	r7, r3
   11940:	b	118a8 <__assert_fail@plt+0x308>
   11944:	bl	11594 <getgrnam@plt>
   11948:	subs	r4, r0, #0
   1194c:	bne	118a8 <__assert_fail@plt+0x308>
   11950:	ldr	r2, [r5, #1344]	; 0x540
   11954:	ldr	r1, [pc, #116]	; 119d0 <__assert_fail@plt+0x430>
   11958:	mov	r0, #3
   1195c:	bl	114d4 <syslog@plt>
   11960:	mov	r0, #7
   11964:	bl	11b0c <__assert_fail@plt+0x56c>
   11968:	mov	r0, #1
   1196c:	bl	113d8 <exit@plt>
   11970:	ldr	r0, [r7, #12]
   11974:	bl	11378 <setgid@plt>
   11978:	cmp	r0, #0
   1197c:	beq	118ec <__assert_fail@plt+0x34c>
   11980:	ldr	r1, [pc, #76]	; 119d4 <__assert_fail@plt+0x434>
   11984:	b	11900 <__assert_fail@plt+0x360>
   11988:			; <UNDEFINED> instruction: 0x0001c9b8
   1198c:	strdeq	lr, [r2], -ip
   11990:	andeq	pc, r2, r8, asr #4
   11994:	andeq	ip, r1, r0, asr #19
   11998:	muleq	r2, ip, r2
   1199c:	ldrdeq	ip, [r1], -r8
   119a0:	ldrdeq	lr, [r2], -r8
   119a4:	andeq	r5, r0, r1, lsr #8
   119a8:	andeq	lr, r2, r4, lsl #10
   119ac:	andeq	ip, r1, r4, ror sl
   119b0:	andeq	ip, r1, r0, ror #19
   119b4:	strdeq	ip, [r1], -r4
   119b8:	andeq	ip, r1, r4, lsl #20
   119bc:	andeq	ip, r1, r0, lsl sl
   119c0:	andeq	ip, r1, ip, lsl sl
   119c4:	andeq	ip, r1, r8, asr sl
   119c8:	andeq	ip, r1, r8, ror #20
   119cc:	andeq	ip, r1, r4, asr #20
   119d0:	andeq	ip, r1, r0, lsr sl
   119d4:	andeq	ip, r1, ip, asr sl
   119d8:	mov	fp, #0
   119dc:	mov	lr, #0
   119e0:	pop	{r1}		; (ldr r1, [sp], #4)
   119e4:	mov	r2, sp
   119e8:	push	{r2}		; (str r2, [sp, #-4]!)
   119ec:	push	{r0}		; (str r0, [sp, #-4]!)
   119f0:	ldr	ip, [pc, #16]	; 11a08 <__assert_fail@plt+0x468>
   119f4:	push	{ip}		; (str ip, [sp, #-4]!)
   119f8:	ldr	r0, [pc, #12]	; 11a0c <__assert_fail@plt+0x46c>
   119fc:	ldr	r3, [pc, #12]	; 11a10 <__assert_fail@plt+0x470>
   11a00:	bl	11390 <__libc_start_main@plt>
   11a04:	bl	11558 <abort@plt>
   11a08:	andeq	ip, r1, r8, ror #17
   11a0c:	andeq	r1, r1, ip, lsr #11
   11a10:	andeq	ip, r1, r8, lsl #17
   11a14:	ldr	r3, [pc, #20]	; 11a30 <__assert_fail@plt+0x490>
   11a18:	ldr	r2, [pc, #20]	; 11a34 <__assert_fail@plt+0x494>
   11a1c:	add	r3, pc, r3
   11a20:	ldr	r2, [r3, r2]
   11a24:	cmp	r2, #0
   11a28:	bxeq	lr
   11a2c:	b	113b4 <__gmon_start__@plt>
   11a30:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   11a34:	andeq	r0, r0, r8, asr #2
   11a38:	ldr	r3, [pc, #28]	; 11a5c <__assert_fail@plt+0x4bc>
   11a3c:	ldr	r0, [pc, #28]	; 11a60 <__assert_fail@plt+0x4c0>
   11a40:	sub	r3, r3, r0
   11a44:	cmp	r3, #6
   11a48:	bxls	lr
   11a4c:	ldr	r3, [pc, #16]	; 11a64 <__assert_fail@plt+0x4c4>
   11a50:	cmp	r3, #0
   11a54:	bxeq	lr
   11a58:	bx	r3
   11a5c:	andeq	lr, r2, r7, ror #5
   11a60:	andeq	lr, r2, r4, ror #5
   11a64:	andeq	r0, r0, r0
   11a68:	ldr	r1, [pc, #36]	; 11a94 <__assert_fail@plt+0x4f4>
   11a6c:	ldr	r0, [pc, #36]	; 11a98 <__assert_fail@plt+0x4f8>
   11a70:	sub	r1, r1, r0
   11a74:	asr	r1, r1, #2
   11a78:	add	r1, r1, r1, lsr #31
   11a7c:	asrs	r1, r1, #1
   11a80:	bxeq	lr
   11a84:	ldr	r3, [pc, #16]	; 11a9c <__assert_fail@plt+0x4fc>
   11a88:	cmp	r3, #0
   11a8c:	bxeq	lr
   11a90:	bx	r3
   11a94:	andeq	lr, r2, r4, ror #5
   11a98:	andeq	lr, r2, r4, ror #5
   11a9c:	andeq	r0, r0, r0
   11aa0:	push	{r4, lr}
   11aa4:	ldr	r4, [pc, #24]	; 11ac4 <__assert_fail@plt+0x524>
   11aa8:	ldrb	r3, [r4]
   11aac:	cmp	r3, #0
   11ab0:	popne	{r4, pc}
   11ab4:	bl	11a38 <__assert_fail@plt+0x498>
   11ab8:	mov	r3, #1
   11abc:	strb	r3, [r4]
   11ac0:	pop	{r4, pc}
   11ac4:	strdeq	lr, [r2], -r8
   11ac8:	ldr	r0, [pc, #40]	; 11af8 <__assert_fail@plt+0x558>
   11acc:	ldr	r3, [r0]
   11ad0:	cmp	r3, #0
   11ad4:	bne	11adc <__assert_fail@plt+0x53c>
   11ad8:	b	11a68 <__assert_fail@plt+0x4c8>
   11adc:	ldr	r3, [pc, #24]	; 11afc <__assert_fail@plt+0x55c>
   11ae0:	cmp	r3, #0
   11ae4:	beq	11ad8 <__assert_fail@plt+0x538>
   11ae8:	push	{r4, lr}
   11aec:	blx	r3
   11af0:	pop	{r4, lr}
   11af4:	b	11a68 <__assert_fail@plt+0x4c8>
   11af8:	andeq	sp, r2, ip, lsl #30
   11afc:	andeq	r0, r0, r0
   11b00:	push	{r4, lr}
   11b04:	mov	r0, #0
   11b08:	bl	113d8 <exit@plt>
   11b0c:	ldr	r3, [pc, #240]	; 11c04 <__assert_fail@plt+0x664>
   11b10:	push	{r4, r5, r6, lr}
   11b14:	rev16	ip, r0
   11b18:	ldr	r5, [pc, #232]	; 11c08 <__assert_fail@plt+0x668>
   11b1c:	ldr	r2, [r3]
   11b20:	mov	r1, #1280	; 0x500
   11b24:	cmp	r2, #0
   11b28:	sub	sp, sp, #8
   11b2c:	strh	ip, [r5, #2]
   11b30:	strh	r1, [r5]
   11b34:	blt	11bf4 <__assert_fail@plt+0x654>
   11b38:	cmp	r0, r2
   11b3c:	bne	11b50 <__assert_fail@plt+0x5b0>
   11b40:	b	11bfc <__assert_fail@plt+0x65c>
   11b44:	cmp	r0, r2
   11b48:	beq	11be4 <__assert_fail@plt+0x644>
   11b4c:	mov	r3, r4
   11b50:	ldr	r2, [r3, #8]
   11b54:	add	r4, r3, #8
   11b58:	cmp	r2, #0
   11b5c:	bge	11b44 <__assert_fail@plt+0x5a4>
   11b60:	sub	r0, r0, #100	; 0x64
   11b64:	bl	1139c <strerror@plt>
   11b68:	mov	r3, #0
   11b6c:	strh	r3, [r5, #2]
   11b70:	mov	r6, r0
   11b74:	str	r0, [r4, #4]
   11b78:	mov	r0, r6
   11b7c:	bl	113e4 <strlen@plt>
   11b80:	mov	r1, r6
   11b84:	mov	r4, r0
   11b88:	mov	r2, r0
   11b8c:	ldr	r0, [pc, #120]	; 11c0c <__assert_fail@plt+0x66c>
   11b90:	bl	112b8 <memcpy@plt>
   11b94:	ldr	r2, [r5, #648]	; 0x288
   11b98:	ldr	r0, [r5, #516]	; 0x204
   11b9c:	ldr	r1, [pc, #108]	; 11c10 <__assert_fail@plt+0x670>
   11ba0:	add	r5, r5, r4
   11ba4:	mov	ip, #0
   11ba8:	add	r4, r4, #5
   11bac:	str	r2, [sp, #4]
   11bb0:	str	r1, [sp]
   11bb4:	mov	r3, ip
   11bb8:	mov	r2, r4
   11bbc:	sub	r1, r1, #520	; 0x208
   11bc0:	strb	ip, [r5, #4]
   11bc4:	bl	11474 <sendto@plt>
   11bc8:	cmp	r4, r0
   11bcc:	beq	11bec <__assert_fail@plt+0x64c>
   11bd0:	ldr	r1, [pc, #60]	; 11c14 <__assert_fail@plt+0x674>
   11bd4:	mov	r0, #3
   11bd8:	add	sp, sp, #8
   11bdc:	pop	{r4, r5, r6, lr}
   11be0:	b	114d4 <syslog@plt>
   11be4:	ldr	r6, [r3, #12]
   11be8:	b	11b78 <__assert_fail@plt+0x5d8>
   11bec:	add	sp, sp, #8
   11bf0:	pop	{r4, r5, r6, pc}
   11bf4:	mov	r4, r3
   11bf8:	b	11b60 <__assert_fail@plt+0x5c0>
   11bfc:	ldr	r6, [r3, #4]
   11c00:	b	11b78 <__assert_fail@plt+0x5d8>
   11c04:	andeq	lr, r2, r4, asr r1
   11c08:	strdeq	lr, [r2], -ip
   11c0c:	andeq	lr, r2, r0, lsl #6
   11c10:	andeq	lr, r2, r4, lsl #10
   11c14:	strdeq	ip, [r1], -r8
   11c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c1c:	mov	r6, r0
   11c20:	ldr	r5, [r0]
   11c24:	sub	sp, sp, #108	; 0x6c
   11c28:	mov	r4, r1
   11c2c:	mov	r0, r5
   11c30:	ldr	r1, [pc, #568]	; 11e70 <__assert_fail@plt+0x8d0>
   11c34:	bl	1121c <strstr@plt>
   11c38:	cmp	r0, #0
   11c3c:	beq	11c4c <__assert_fail@plt+0x6ac>
   11c40:	mov	r0, #2
   11c44:	add	sp, sp, #108	; 0x6c
   11c48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c4c:	ldrb	r3, [r5]
   11c50:	cmp	r3, #47	; 0x2f
   11c54:	beq	11d28 <__assert_fail@plt+0x788>
   11c58:	cmp	r4, #1
   11c5c:	bne	11c40 <__assert_fail@plt+0x6a0>
   11c60:	mov	r2, #3
   11c64:	ldr	r1, [pc, #520]	; 11e74 <__assert_fail@plt+0x8d4>
   11c68:	mov	r0, r5
   11c6c:	bl	1154c <strncmp@plt>
   11c70:	cmp	r0, #0
   11c74:	beq	11c40 <__assert_fail@plt+0x6a0>
   11c78:	ldr	r8, [pc, #504]	; 11e78 <__assert_fail@plt+0x8d8>
   11c7c:	ldr	r3, [r8, #652]	; 0x28c
   11c80:	cmp	r3, #0
   11c84:	beq	11e24 <__assert_fail@plt+0x884>
   11c88:	ldr	fp, [r8, #820]	; 0x334
   11c8c:	ldr	r9, [pc, #488]	; 11e7c <__assert_fail@plt+0x8dc>
   11c90:	add	r7, r8, #652	; 0x28c
   11c94:	mov	sl, #3
   11c98:	b	11ca8 <__assert_fail@plt+0x708>
   11c9c:	ldr	r2, [r7, #8]!
   11ca0:	cmp	r2, #0
   11ca4:	beq	11e24 <__assert_fail@plt+0x884>
   11ca8:	mov	r0, fp
   11cac:	bl	147fc <argp_parse@@Base+0xf7c>
   11cb0:	ldr	r0, [r7]
   11cb4:	bl	113e4 <strlen@plt>
   11cb8:	mov	fp, r0
   11cbc:	mov	r0, r5
   11cc0:	bl	113e4 <strlen@plt>
   11cc4:	add	r0, fp, r0
   11cc8:	add	r0, r0, #2
   11ccc:	bl	15e10 <argp_parse@@Base+0x2590>
   11cd0:	mov	r3, r5
   11cd4:	mov	r1, r9
   11cd8:	cmp	r0, #0
   11cdc:	str	r0, [r8, #820]	; 0x334
   11ce0:	beq	11e2c <__assert_fail@plt+0x88c>
   11ce4:	ldr	r2, [r7]
   11ce8:	bl	114ec <sprintf@plt>
   11cec:	ldr	fp, [r8, #820]	; 0x334
   11cf0:	mov	r2, sp
   11cf4:	mov	r1, fp
   11cf8:	mov	r0, sl
   11cfc:	bl	11540 <__xstat64@plt>
   11d00:	cmp	r0, #0
   11d04:	bne	11c9c <__assert_fail@plt+0x6fc>
   11d08:	ldr	r2, [sp, #16]
   11d0c:	and	r1, r2, #61440	; 0xf000
   11d10:	cmp	r1, #32768	; 0x8000
   11d14:	bne	11c9c <__assert_fail@plt+0x6fc>
   11d18:	tst	r2, #4
   11d1c:	bne	11e5c <__assert_fail@plt+0x8bc>
   11d20:	mov	r4, #2
   11d24:	b	11c9c <__assert_fail@plt+0x6fc>
   11d28:	ldr	r3, [pc, #328]	; 11e78 <__assert_fail@plt+0x8d8>
   11d2c:	ldr	r1, [r3, #652]	; 0x28c
   11d30:	cmp	r1, #0
   11d34:	beq	11d90 <__assert_fail@plt+0x7f0>
   11d38:	ldr	r6, [r3, #656]	; 0x290
   11d3c:	cmp	r6, #1
   11d40:	beq	11d90 <__assert_fail@plt+0x7f0>
   11d44:	add	r8, r3, #652	; 0x28c
   11d48:	mov	r7, r8
   11d4c:	b	11d5c <__assert_fail@plt+0x7bc>
   11d50:	ldr	r6, [r7, #4]
   11d54:	cmp	r6, #1
   11d58:	beq	11d90 <__assert_fail@plt+0x7f0>
   11d5c:	mov	r2, r6
   11d60:	mov	r0, r5
   11d64:	bl	1154c <strncmp@plt>
   11d68:	cmp	r0, #0
   11d6c:	bne	11d7c <__assert_fail@plt+0x7dc>
   11d70:	ldrb	r3, [r5, r6]
   11d74:	cmp	r3, #47	; 0x2f
   11d78:	beq	11d90 <__assert_fail@plt+0x7f0>
   11d7c:	ldr	r1, [r7, #8]!
   11d80:	cmp	r1, #0
   11d84:	bne	11d50 <__assert_fail@plt+0x7b0>
   11d88:	cmp	r7, r8
   11d8c:	bne	11c40 <__assert_fail@plt+0x6a0>
   11d90:	mov	r2, sp
   11d94:	mov	r1, r5
   11d98:	mov	r0, #3
   11d9c:	bl	11540 <__xstat64@plt>
   11da0:	cmp	r0, #0
   11da4:	blt	11e10 <__assert_fail@plt+0x870>
   11da8:	ldr	r3, [sp, #16]
   11dac:	and	r2, r3, #61440	; 0xf000
   11db0:	cmp	r2, #32768	; 0x8000
   11db4:	beq	11dc0 <__assert_fail@plt+0x820>
   11db8:	mov	r0, #1
   11dbc:	b	11c44 <__assert_fail@plt+0x6a4>
   11dc0:	cmp	r4, #1
   11dc4:	beq	11e34 <__assert_fail@plt+0x894>
   11dc8:	tst	r3, #2
   11dcc:	beq	11c40 <__assert_fail@plt+0x6a0>
   11dd0:	mov	r0, r5
   11dd4:	ldr	r1, [pc, #164]	; 11e80 <__assert_fail@plt+0x8e0>
   11dd8:	bl	11360 <open64@plt>
   11ddc:	cmp	r0, #0
   11de0:	blt	11e00 <__assert_fail@plt+0x860>
   11de4:	ldr	r1, [pc, #152]	; 11e84 <__assert_fail@plt+0x8e4>
   11de8:	bl	111f8 <fdopen@plt>
   11dec:	ldr	r3, [pc, #148]	; 11e88 <__assert_fail@plt+0x8e8>
   11df0:	cmp	r0, #0
   11df4:	str	r0, [r3]
   11df8:	movne	r0, #0
   11dfc:	bne	11c44 <__assert_fail@plt+0x6a4>
   11e00:	bl	11408 <__errno_location@plt>
   11e04:	ldr	r0, [r0]
   11e08:	add	r0, r0, #100	; 0x64
   11e0c:	b	11c44 <__assert_fail@plt+0x6a4>
   11e10:	bl	11408 <__errno_location@plt>
   11e14:	ldr	r3, [r0]
   11e18:	cmp	r3, #2
   11e1c:	bne	11c40 <__assert_fail@plt+0x6a0>
   11e20:	b	11db8 <__assert_fail@plt+0x818>
   11e24:	mov	r0, r4
   11e28:	b	11c44 <__assert_fail@plt+0x6a4>
   11e2c:	mov	r0, #12
   11e30:	b	11c44 <__assert_fail@plt+0x6a4>
   11e34:	tst	r3, #4
   11e38:	movne	fp, r5
   11e3c:	beq	11c40 <__assert_fail@plt+0x6a0>
   11e40:	mov	r1, #0
   11e44:	mov	r0, fp
   11e48:	bl	11360 <open64@plt>
   11e4c:	cmp	r0, #0
   11e50:	ldrge	r1, [pc, #52]	; 11e8c <__assert_fail@plt+0x8ec>
   11e54:	blt	11e00 <__assert_fail@plt+0x860>
   11e58:	b	11de8 <__assert_fail@plt+0x848>
   11e5c:	ldr	r2, [r7]
   11e60:	cmp	r2, #0
   11e64:	beq	11e24 <__assert_fail@plt+0x884>
   11e68:	str	fp, [r6]
   11e6c:	b	11e40 <__assert_fail@plt+0x8a0>
   11e70:	andeq	ip, r1, r8, lsl #18
   11e74:	andeq	ip, r1, r0, lsl r9
   11e78:	strdeq	lr, [r2], -ip
   11e7c:	andeq	ip, r1, r4, lsl r9
   11e80:	andeq	r0, r0, r1, lsl #4
   11e84:	andeq	ip, r1, r4, lsl #18
   11e88:	andeq	lr, r2, r4, lsr lr
   11e8c:	muleq	r1, r0, r5
   11e90:	ldr	r2, [pc, #40]	; 11ec0 <__assert_fail@plt+0x920>
   11e94:	push	{r4, lr}
   11e98:	ldr	r3, [r2]
   11e9c:	add	r3, r3, #5
   11ea0:	cmp	r3, #24
   11ea4:	str	r3, [r2]
   11ea8:	ble	11eb4 <__assert_fail@plt+0x914>
   11eac:	mov	r0, #1
   11eb0:	bl	113d8 <exit@plt>
   11eb4:	mov	r1, #1
   11eb8:	ldr	r0, [pc, #4]	; 11ec4 <__assert_fail@plt+0x924>
   11ebc:	bl	1157c <siglongjmp@plt>
   11ec0:	andeq	lr, r2, r0, lsr lr
   11ec4:	andeq	lr, r2, r8, lsr #25
   11ec8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11ecc:	sub	sp, sp, #32
   11ed0:	ldr	r1, [pc, #536]	; 120f0 <__assert_fail@plt+0xb50>
   11ed4:	str	r0, [sp, #16]
   11ed8:	mov	r0, #14
   11edc:	bl	112c4 <signal@plt>
   11ee0:	bl	12878 <__assert_fail@plt+0x12d8>
   11ee4:	ldr	r3, [pc, #520]	; 120f4 <__assert_fail@plt+0xb54>
   11ee8:	add	r3, r3, #824	; 0x338
   11eec:	str	r3, [sp, #12]
   11ef0:	mov	r3, #1
   11ef4:	str	r3, [sp, #28]
   11ef8:	str	r0, [sp, #24]
   11efc:	ldr	r3, [sp, #16]
   11f00:	add	r1, sp, #24
   11f04:	ldr	r2, [r3, #16]
   11f08:	ldr	r3, [pc, #488]	; 120f8 <__assert_fail@plt+0xb58>
   11f0c:	ldr	r0, [r3]
   11f10:	bl	129ec <__assert_fail@plt+0x144c>
   11f14:	subs	r3, r0, #0
   11f18:	str	r3, [sp, #20]
   11f1c:	blt	120b0 <__assert_fail@plt+0xb10>
   11f20:	ldr	r3, [sp, #28]
   11f24:	ldr	r2, [sp, #24]
   11f28:	rev16	r3, r3
   11f2c:	mov	ip, #0
   11f30:	uxth	r3, r3
   11f34:	strb	r3, [r2, #2]
   11f38:	lsr	r0, r3, #8
   11f3c:	ldr	r3, [pc, #440]	; 120fc <__assert_fail@plt+0xb5c>
   11f40:	mov	r1, #3
   11f44:	strb	r0, [r2, #3]
   11f48:	strb	r1, [r2, #1]
   11f4c:	strb	ip, [r2]
   11f50:	mov	r1, #14
   11f54:	ldr	r0, [pc, #420]	; 12100 <__assert_fail@plt+0xb60>
   11f58:	str	ip, [r3]
   11f5c:	bl	114bc <__sigsetjmp@plt>
   11f60:	mov	r4, #0
   11f64:	mov	r6, #5
   11f68:	ldr	r3, [sp, #20]
   11f6c:	add	r8, r3, #4
   11f70:	ldr	r3, [pc, #380]	; 120f4 <__assert_fail@plt+0xb54>
   11f74:	mov	r9, r8
   11f78:	add	r5, r3, #824	; 0x338
   11f7c:	ldr	r3, [pc, #368]	; 120f4 <__assert_fail@plt+0xb54>
   11f80:	ldr	r2, [pc, #380]	; 12104 <__assert_fail@plt+0xb64>
   11f84:	ldr	r1, [sp, #24]
   11f88:	ldr	r0, [r3, #516]	; 0x204
   11f8c:	ldr	r3, [r3, #648]	; 0x288
   11f90:	stm	sp, {r2, r3}
   11f94:	mov	r3, r4
   11f98:	mov	r2, r9
   11f9c:	bl	11474 <sendto@plt>
   11fa0:	cmp	r0, r8
   11fa4:	bne	120c4 <__assert_fail@plt+0xb24>
   11fa8:	ldr	r3, [sp, #16]
   11fac:	mov	r7, #516	; 0x204
   11fb0:	ldr	r1, [r3, #16]
   11fb4:	ldr	r3, [pc, #316]	; 120f8 <__assert_fail@plt+0xb58>
   11fb8:	ldr	r0, [r3]
   11fbc:	bl	128c8 <__assert_fail@plt+0x1328>
   11fc0:	b	1201c <__assert_fail@plt+0xa7c>
   11fc4:	ldr	ip, [sp, #12]
   11fc8:	ldrb	r0, [ip, #1]
   11fcc:	ldrb	r1, [ip, #3]
   11fd0:	ldrb	r3, [ip]
   11fd4:	ldrb	r2, [ip, #2]
   11fd8:	orr	r3, r3, r0, lsl #8
   11fdc:	orr	r2, r2, r1, lsl #8
   11fe0:	rev16	r3, r3
   11fe4:	rev16	r2, r2
   11fe8:	uxth	r1, r3
   11fec:	uxth	r2, r2
   11ff0:	sxth	r3, r3
   11ff4:	lsr	r0, r1, #8
   11ff8:	strb	r1, [ip]
   11ffc:	cmp	r3, #5
   12000:	lsr	r1, r2, #8
   12004:	strb	r0, [ip, #1]
   12008:	strb	r2, [ip, #2]
   1200c:	strb	r1, [ip, #3]
   12010:	beq	12058 <__assert_fail@plt+0xab8>
   12014:	cmp	r3, #4
   12018:	beq	1206c <__assert_fail@plt+0xacc>
   1201c:	mov	r0, r6
   12020:	bl	112f4 <alarm@plt>
   12024:	mov	r3, r4
   12028:	mov	r2, r7
   1202c:	mov	r1, r5
   12030:	ldr	r0, [r5, #-308]	; 0xfffffecc
   12034:	bl	11570 <recv@plt>
   12038:	mov	sl, r0
   1203c:	mov	r0, r4
   12040:	bl	112f4 <alarm@plt>
   12044:	cmp	sl, #0
   12048:	bge	11fc4 <__assert_fail@plt+0xa24>
   1204c:	ldr	r1, [pc, #180]	; 12108 <__assert_fail@plt+0xb68>
   12050:	mov	r0, #3
   12054:	bl	114d4 <syslog@plt>
   12058:	ldr	r3, [pc, #152]	; 120f8 <__assert_fail@plt+0xb58>
   1205c:	ldr	r0, [r3]
   12060:	bl	1145c <fclose@plt>
   12064:	add	sp, sp, #32
   12068:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1206c:	ldr	r3, [sp, #28]
   12070:	uxth	r3, r3
   12074:	cmp	r3, r2
   12078:	beq	120d4 <__assert_fail@plt+0xb34>
   1207c:	ldr	r3, [pc, #112]	; 120f4 <__assert_fail@plt+0xb54>
   12080:	ldr	r0, [r3, #516]	; 0x204
   12084:	bl	12ca0 <__assert_fail@plt+0x1700>
   12088:	ldr	r2, [sp, #12]
   1208c:	ldr	r3, [sp, #28]
   12090:	ldrb	r1, [r2, #3]
   12094:	ldrb	r2, [r2, #2]
   12098:	sub	r3, r3, #1
   1209c:	orr	r2, r2, r1, lsl #8
   120a0:	uxth	r3, r3
   120a4:	cmp	r2, r3
   120a8:	bne	1201c <__assert_fail@plt+0xa7c>
   120ac:	b	11f7c <__assert_fail@plt+0x9dc>
   120b0:	bl	11408 <__errno_location@plt>
   120b4:	ldr	r0, [r0]
   120b8:	add	r0, r0, #100	; 0x64
   120bc:	bl	11b0c <__assert_fail@plt+0x56c>
   120c0:	b	12058 <__assert_fail@plt+0xab8>
   120c4:	ldr	r1, [pc, #64]	; 1210c <__assert_fail@plt+0xb6c>
   120c8:	mov	r0, #3
   120cc:	bl	114d4 <syslog@plt>
   120d0:	b	12058 <__assert_fail@plt+0xab8>
   120d4:	ldr	r3, [sp, #28]
   120d8:	ldr	r2, [sp, #20]
   120dc:	add	r3, r3, #1
   120e0:	cmp	r2, #512	; 0x200
   120e4:	str	r3, [sp, #28]
   120e8:	bne	12058 <__assert_fail@plt+0xab8>
   120ec:	b	11efc <__assert_fail@plt+0x95c>
   120f0:	muleq	r1, r0, lr
   120f4:	strdeq	lr, [r2], -ip
   120f8:	andeq	lr, r2, r4, lsr lr
   120fc:	andeq	lr, r2, r0, lsr lr
   12100:	andeq	lr, r2, r8, lsr #25
   12104:	andeq	lr, r2, r4, lsl #10
   12108:	andeq	ip, r1, r0, lsr r9
   1210c:	andeq	ip, r1, ip, lsl r9
   12110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12114:	sub	sp, sp, #28
   12118:	ldr	r1, [pc, #784]	; 12430 <__assert_fail@plt+0xe90>
   1211c:	str	r0, [sp, #12]
   12120:	mov	r0, #14
   12124:	bl	112c4 <signal@plt>
   12128:	bl	1282c <__assert_fail@plt+0x128c>
   1212c:	mov	r3, #0
   12130:	str	r3, [sp, #20]
   12134:	str	r0, [sp, #16]
   12138:	ldr	r3, [sp, #20]
   1213c:	ldr	r1, [pc, #752]	; 12434 <__assert_fail@plt+0xe94>
   12140:	mov	r0, #0
   12144:	rev16	r3, r3
   12148:	str	r0, [r1]
   1214c:	ldr	r1, [pc, #740]	; 12438 <__assert_fail@plt+0xe98>
   12150:	uxth	r3, r3
   12154:	ldr	r2, [sp, #20]
   12158:	strb	r3, [r1, #2]
   1215c:	lsr	r3, r3, #8
   12160:	strb	r3, [r1, #3]
   12164:	ldr	r3, [pc, #716]	; 12438 <__assert_fail@plt+0xe98>
   12168:	mov	ip, #4
   1216c:	strb	r0, [r1]
   12170:	add	r2, r2, #1
   12174:	mov	r1, #14
   12178:	ldr	r0, [pc, #700]	; 1243c <__assert_fail@plt+0xe9c>
   1217c:	strb	ip, [r3, #1]
   12180:	str	r2, [sp, #20]
   12184:	bl	114bc <__sigsetjmp@plt>
   12188:	ldr	r3, [pc, #688]	; 12440 <__assert_fail@plt+0xea0>
   1218c:	mov	r9, #4
   12190:	add	r8, r3, #824	; 0x338
   12194:	ldr	r3, [pc, #676]	; 12440 <__assert_fail@plt+0xea0>
   12198:	ldr	r2, [pc, #676]	; 12444 <__assert_fail@plt+0xea4>
   1219c:	mov	r1, r8
   121a0:	ldr	r0, [r3, #516]	; 0x204
   121a4:	ldr	r3, [r3, #648]	; 0x288
   121a8:	stm	sp, {r2, r3}
   121ac:	mov	r3, #0
   121b0:	mov	r2, r9
   121b4:	bl	11474 <sendto@plt>
   121b8:	cmp	r0, #4
   121bc:	bne	122c4 <__assert_fail@plt+0xd24>
   121c0:	ldr	r3, [sp, #12]
   121c4:	mov	r5, #5
   121c8:	ldr	sl, [pc, #624]	; 12440 <__assert_fail@plt+0xea0>
   121cc:	ldr	r1, [r3, #16]
   121d0:	ldr	r3, [pc, #624]	; 12448 <__assert_fail@plt+0xea8>
   121d4:	mov	r4, #516	; 0x204
   121d8:	ldr	r0, [r3]
   121dc:	bl	12ba4 <__assert_fail@plt+0x1604>
   121e0:	b	12240 <__assert_fail@plt+0xca0>
   121e4:	ldr	r1, [sp, #16]
   121e8:	mov	r7, #0
   121ec:	ldrb	ip, [r1, #1]
   121f0:	ldrb	r0, [r1, #3]
   121f4:	ldrb	r3, [r1]
   121f8:	ldrb	r2, [r1, #2]
   121fc:	orr	r3, r3, ip, lsl #8
   12200:	orr	r2, r2, r0, lsl #8
   12204:	rev16	r3, r3
   12208:	rev16	r2, r2
   1220c:	uxth	r0, r3
   12210:	uxth	r2, r2
   12214:	sxth	r3, r3
   12218:	strb	r0, [r1]
   1221c:	lsr	r0, r0, #8
   12220:	strb	r0, [r1, #1]
   12224:	cmp	r3, #5
   12228:	lsr	r0, r2, #8
   1222c:	strb	r2, [r1, #2]
   12230:	strb	r0, [r1, #3]
   12234:	beq	12280 <__assert_fail@plt+0xce0>
   12238:	cmp	r3, #3
   1223c:	beq	12288 <__assert_fail@plt+0xce8>
   12240:	mov	r0, r5
   12244:	bl	112f4 <alarm@plt>
   12248:	ldr	r0, [pc, #496]	; 12440 <__assert_fail@plt+0xea0>
   1224c:	mov	r3, #0
   12250:	mov	r2, r4
   12254:	ldr	r1, [sp, #16]
   12258:	ldr	r0, [r0, #516]	; 0x204
   1225c:	bl	11570 <recv@plt>
   12260:	mov	fp, r0
   12264:	mov	r0, #0
   12268:	bl	112f4 <alarm@plt>
   1226c:	cmp	fp, #0
   12270:	bge	121e4 <__assert_fail@plt+0xc44>
   12274:	ldr	r1, [pc, #464]	; 1244c <__assert_fail@plt+0xeac>
   12278:	mov	r0, #3
   1227c:	bl	114d4 <syslog@plt>
   12280:	add	sp, sp, #28
   12284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12288:	ldr	r1, [sp, #20]
   1228c:	cmp	r2, r1
   12290:	beq	122d4 <__assert_fail@plt+0xd34>
   12294:	ldr	r3, [pc, #420]	; 12440 <__assert_fail@plt+0xea0>
   12298:	ldr	r0, [r3, #516]	; 0x204
   1229c:	bl	12ca0 <__assert_fail@plt+0x1700>
   122a0:	ldr	r1, [sp, #16]
   122a4:	ldr	r3, [sp, #20]
   122a8:	ldrb	r0, [r1, #3]
   122ac:	ldrb	r2, [r1, #2]
   122b0:	sub	r3, r3, #1
   122b4:	orr	r2, r2, r0, lsl #8
   122b8:	cmp	r2, r3
   122bc:	bne	12240 <__assert_fail@plt+0xca0>
   122c0:	b	12194 <__assert_fail@plt+0xbf4>
   122c4:	ldr	r1, [pc, #388]	; 12450 <__assert_fail@plt+0xeb0>
   122c8:	mov	r0, #3
   122cc:	bl	114d4 <syslog@plt>
   122d0:	b	12280 <__assert_fail@plt+0xce0>
   122d4:	mov	r4, r3
   122d8:	ldr	r0, [pc, #360]	; 12448 <__assert_fail@plt+0xea8>
   122dc:	ldr	r3, [sp, #12]
   122e0:	sub	fp, fp, #4
   122e4:	mov	r2, fp
   122e8:	ldr	r3, [r3, #16]
   122ec:	add	r1, sp, #16
   122f0:	ldr	r0, [r0]
   122f4:	bl	12a60 <__assert_fail@plt+0x14c0>
   122f8:	cmp	fp, r0
   122fc:	beq	12314 <__assert_fail@plt+0xd74>
   12300:	cmp	r0, #0
   12304:	blt	1241c <__assert_fail@plt+0xe7c>
   12308:	mov	r0, r4
   1230c:	bl	11b0c <__assert_fail@plt+0x56c>
   12310:	b	12280 <__assert_fail@plt+0xce0>
   12314:	cmp	fp, #512	; 0x200
   12318:	beq	12138 <__assert_fail@plt+0xb98>
   1231c:	ldr	r3, [sp, #12]
   12320:	add	r4, sl, #824	; 0x338
   12324:	add	r5, sl, #520	; 0x208
   12328:	ldr	r1, [r3, #16]
   1232c:	ldr	r3, [pc, #276]	; 12448 <__assert_fail@plt+0xea8>
   12330:	ldr	r0, [r3]
   12334:	bl	12ba4 <__assert_fail@plt+0x1604>
   12338:	ldr	r3, [pc, #264]	; 12448 <__assert_fail@plt+0xea8>
   1233c:	ldr	r0, [r3]
   12340:	bl	1145c <fclose@plt>
   12344:	ldr	r3, [sp, #20]
   12348:	ldr	r2, [sl, #648]	; 0x288
   1234c:	rev16	r3, r3
   12350:	mov	ip, #0
   12354:	uxth	r3, r3
   12358:	str	r2, [sp, #4]
   1235c:	orr	r2, r7, r3, lsr #8
   12360:	orr	r7, r7, #4
   12364:	strb	ip, [sl, #824]	; 0x338
   12368:	strb	r3, [sl, #826]	; 0x33a
   1236c:	str	r5, [sp]
   12370:	mov	r3, #0
   12374:	mov	r1, r4
   12378:	strb	r2, [r4, #3]
   1237c:	ldr	r0, [sl, #516]	; 0x204
   12380:	mov	r2, #4
   12384:	strb	r7, [r4, #1]
   12388:	bl	11474 <sendto@plt>
   1238c:	ldr	r1, [pc, #192]	; 12454 <__assert_fail@plt+0xeb4>
   12390:	mov	r0, #14
   12394:	bl	112c4 <signal@plt>
   12398:	mov	r0, #5
   1239c:	bl	112f4 <alarm@plt>
   123a0:	mov	r3, #0
   123a4:	mov	r2, #516	; 0x204
   123a8:	mov	r1, sl
   123ac:	ldr	r0, [sl, #516]	; 0x204
   123b0:	bl	11570 <recv@plt>
   123b4:	mov	r6, r0
   123b8:	mov	r0, #0
   123bc:	bl	112f4 <alarm@plt>
   123c0:	cmp	r6, #3
   123c4:	ble	12280 <__assert_fail@plt+0xce0>
   123c8:	ldr	r3, [sp, #16]
   123cc:	ldrb	r1, [r3, #1]
   123d0:	ldrb	r2, [r3]
   123d4:	orr	r2, r2, r1, lsl #8
   123d8:	cmp	r2, #3
   123dc:	bne	12280 <__assert_fail@plt+0xce0>
   123e0:	ldrb	r1, [r3, #3]
   123e4:	ldrb	r3, [r3, #2]
   123e8:	ldr	r2, [sp, #20]
   123ec:	orr	r3, r3, r1, lsl #8
   123f0:	cmp	r3, r2
   123f4:	bne	12280 <__assert_fail@plt+0xce0>
   123f8:	ldr	r2, [sl, #648]	; 0x288
   123fc:	ldr	r0, [sl, #516]	; 0x204
   12400:	str	r2, [sp, #4]
   12404:	str	r5, [sp]
   12408:	mov	r3, #0
   1240c:	mov	r1, r4
   12410:	mov	r2, #4
   12414:	bl	11474 <sendto@plt>
   12418:	b	12280 <__assert_fail@plt+0xce0>
   1241c:	bl	11408 <__errno_location@plt>
   12420:	ldr	r0, [r0]
   12424:	add	r0, r0, #100	; 0x64
   12428:	bl	11b0c <__assert_fail@plt+0x56c>
   1242c:	b	12280 <__assert_fail@plt+0xce0>
   12430:	muleq	r1, r0, lr
   12434:	andeq	lr, r2, r0, lsr lr
   12438:	andeq	lr, r2, r4, lsr r6
   1243c:	andeq	lr, r2, r8, lsr #25
   12440:	strdeq	lr, [r2], -ip
   12444:	andeq	lr, r2, r4, lsl #10
   12448:	andeq	lr, r2, r4, lsr lr
   1244c:	andeq	ip, r1, r0, lsr r9
   12450:	andeq	ip, r1, ip, lsl r9
   12454:	andeq	r1, r1, r0, lsl #22
   12458:	sub	r0, r0, #103	; 0x67
   1245c:	push	{r4, r5, r6, lr}
   12460:	mov	r4, r1
   12464:	cmp	r0, #14
   12468:	ldrls	pc, [pc, r0, lsl #2]
   1246c:	b	12540 <__assert_fail@plt+0xfa0>
   12470:	ldrdeq	r2, [r1], -r0
   12474:	andeq	r2, r1, r0, asr #10
   12478:	andeq	r2, r1, r0, asr #10
   1247c:	andeq	r2, r1, r0, asr #10
   12480:	andeq	r2, r1, r0, asr #10
   12484:	strdeq	r2, [r1], -r4
   12488:	andeq	r2, r1, r0, asr #10
   1248c:	andeq	r2, r1, ip, lsl #10
   12490:	andeq	r2, r1, r0, asr #10
   12494:	andeq	r2, r1, r0, asr #10
   12498:	andeq	r2, r1, r0, asr #10
   1249c:	andeq	r2, r1, r0, asr #10
   124a0:	andeq	r2, r1, r4, lsr #10
   124a4:	andeq	r2, r1, r0, asr #10
   124a8:	andeq	r2, r1, ip, lsr #9
   124ac:	ldr	r5, [pc, #148]	; 12548 <__assert_fail@plt+0xfa8>
   124b0:	ldr	r0, [r5, #1356]	; 0x54c
   124b4:	bl	147fc <argp_parse@@Base+0xf7c>
   124b8:	mov	r0, r4
   124bc:	bl	15d64 <argp_parse@@Base+0x24e4>
   124c0:	mov	r3, #0
   124c4:	str	r0, [r5, #1356]	; 0x54c
   124c8:	mov	r0, r3
   124cc:	pop	{r4, r5, r6, pc}
   124d0:	ldr	r5, [pc, #112]	; 12548 <__assert_fail@plt+0xfa8>
   124d4:	ldr	r0, [r5, #1344]	; 0x540
   124d8:	bl	147fc <argp_parse@@Base+0xf7c>
   124dc:	mov	r0, r4
   124e0:	bl	15d64 <argp_parse@@Base+0x24e4>
   124e4:	mov	r3, #0
   124e8:	str	r0, [r5, #1344]	; 0x540
   124ec:	mov	r0, r3
   124f0:	pop	{r4, r5, r6, pc}
   124f4:	ldr	r2, [pc, #76]	; 12548 <__assert_fail@plt+0xfa8>
   124f8:	mov	r1, #1
   124fc:	mov	r3, #0
   12500:	str	r1, [r2, #1340]	; 0x53c
   12504:	mov	r0, r3
   12508:	pop	{r4, r5, r6, pc}
   1250c:	ldr	r2, [pc, #52]	; 12548 <__assert_fail@plt+0xfa8>
   12510:	mov	r1, #1
   12514:	mov	r3, #0
   12518:	str	r1, [r2, #1348]	; 0x544
   1251c:	mov	r0, r3
   12520:	pop	{r4, r5, r6, pc}
   12524:	mov	r0, r1
   12528:	bl	15d64 <argp_parse@@Base+0x24e4>
   1252c:	ldr	r2, [pc, #20]	; 12548 <__assert_fail@plt+0xfa8>
   12530:	mov	r3, #0
   12534:	str	r0, [r2, #1352]	; 0x548
   12538:	mov	r0, r3
   1253c:	pop	{r4, r5, r6, pc}
   12540:	mov	r3, #7
   12544:	b	124c8 <__assert_fail@plt+0xf28>
   12548:	strdeq	lr, [r2], -ip
   1254c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12550:	sub	sp, sp, #36	; 0x24
   12554:	ldr	r6, [pc, #656]	; 127ec <__assert_fail@plt+0x124c>
   12558:	add	r3, r0, #2
   1255c:	mov	r5, r0
   12560:	add	r2, r0, #3
   12564:	str	r3, [sp, #28]
   12568:	add	r1, r6, r1
   1256c:	mov	r0, #1
   12570:	mov	lr, #0
   12574:	b	12598 <__assert_fail@plt+0xff8>
   12578:	cmp	ip, #0
   1257c:	bne	127a4 <__assert_fail@plt+0x1204>
   12580:	cmp	r0, #0
   12584:	beq	125b4 <__assert_fail@plt+0x1014>
   12588:	mov	r7, r2
   1258c:	mov	r0, lr
   12590:	add	r3, r3, #1
   12594:	add	r2, r2, #1
   12598:	cmp	r1, r3
   1259c:	ldrb	ip, [r3]
   125a0:	bls	12578 <__assert_fail@plt+0xfd8>
   125a4:	cmp	ip, #0
   125a8:	bne	12590 <__assert_fail@plt+0xff0>
   125ac:	cmp	r0, #0
   125b0:	bne	12588 <__assert_fail@plt+0xfe8>
   125b4:	ldrb	r4, [r7]
   125b8:	cmp	r4, #0
   125bc:	beq	12600 <__assert_fail@plt+0x1060>
   125c0:	bl	113cc <__ctype_b_loc@plt>
   125c4:	mov	r8, r7
   125c8:	mov	r9, r0
   125cc:	sxth	r4, r4
   125d0:	ldr	r2, [r9]
   125d4:	lsl	r3, r4, #1
   125d8:	ldrh	r3, [r2, r3]
   125dc:	tst	r3, #256	; 0x100
   125e0:	beq	125f4 <__assert_fail@plt+0x1054>
   125e4:	bl	113a8 <__ctype_tolower_loc@plt>
   125e8:	ldr	r3, [r0]
   125ec:	ldr	r3, [r3, r4, lsl #2]
   125f0:	strb	r3, [r8]
   125f4:	ldrb	r4, [r8, #1]!
   125f8:	cmp	r4, #0
   125fc:	bne	125cc <__assert_fail@plt+0x102c>
   12600:	ldr	r8, [pc, #488]	; 127f0 <__assert_fail@plt+0x1250>
   12604:	ldr	r0, [r8, #72]	; 0x48
   12608:	cmp	r0, #0
   1260c:	addne	r4, r8, #72	; 0x48
   12610:	bne	12624 <__assert_fail@plt+0x1084>
   12614:	b	127a4 <__assert_fail@plt+0x1204>
   12618:	ldr	r0, [r4, #20]!
   1261c:	cmp	r0, #0
   12620:	beq	127a4 <__assert_fail@plt+0x1204>
   12624:	mov	r1, r7
   12628:	bl	11240 <strcmp@plt>
   1262c:	cmp	r0, #0
   12630:	bne	12618 <__assert_fail@plt+0x1078>
   12634:	ldrb	r2, [r5, #1]
   12638:	ldrb	r1, [r5]
   1263c:	ldr	r3, [r4, #4]
   12640:	add	r0, sp, #28
   12644:	orr	r1, r1, r2, lsl #8
   12648:	sxth	r1, r1
   1264c:	blx	r3
   12650:	ldr	r3, [r6, #1340]	; 0x53c
   12654:	cmp	r3, #0
   12658:	mov	r7, r0
   1265c:	beq	12760 <__assert_fail@plt+0x11c0>
   12660:	ldr	r3, [pc, #396]	; 127f4 <__assert_fail@plt+0x1254>
   12664:	ldrh	r3, [r3]
   12668:	cmp	r3, #2
   1266c:	beq	127dc <__assert_fail@plt+0x123c>
   12670:	ldr	r2, [pc, #384]	; 127f8 <__assert_fail@plt+0x1258>
   12674:	cmp	r3, #10
   12678:	ldr	sl, [pc, #380]	; 127fc <__assert_fail@plt+0x125c>
   1267c:	movne	sl, r2
   12680:	ldr	r2, [pc, #376]	; 12800 <__assert_fail@plt+0x1260>
   12684:	mov	r3, #0
   12688:	str	r3, [sp, #8]
   1268c:	str	r3, [sp, #4]
   12690:	str	r3, [sp]
   12694:	sub	r0, r2, #840	; 0x348
   12698:	ldr	r3, [pc, #356]	; 12804 <__assert_fail@plt+0x1264>
   1269c:	ldr	r1, [r6, #648]	; 0x288
   126a0:	bl	11498 <getnameinfo@plt>
   126a4:	cmp	r0, #0
   126a8:	ldreq	fp, [pc, #336]	; 12800 <__assert_fail@plt+0x1260>
   126ac:	beq	126c8 <__assert_fail@plt+0x1128>
   126b0:	bl	112a0 <gai_strerror@plt>
   126b4:	ldr	r1, [pc, #332]	; 12808 <__assert_fail@plt+0x1268>
   126b8:	ldr	fp, [pc, #332]	; 1280c <__assert_fail@plt+0x126c>
   126bc:	mov	r2, r0
   126c0:	mov	r0, #3
   126c4:	bl	114d4 <syslog@plt>
   126c8:	ldrb	r1, [r5, #1]
   126cc:	ldrb	r3, [r5]
   126d0:	ldr	r2, [pc, #312]	; 12810 <__assert_fail@plt+0x1270>
   126d4:	ldr	r9, [pc, #312]	; 12814 <__assert_fail@plt+0x1274>
   126d8:	orr	r3, r3, r1, lsl #8
   126dc:	cmp	r3, #2
   126e0:	moveq	r9, r2
   126e4:	cmp	r7, #0
   126e8:	ldr	r3, [sp, #28]
   126ec:	ldreq	r2, [pc, #292]	; 12818 <__assert_fail@plt+0x1278>
   126f0:	beq	12740 <__assert_fail@plt+0x11a0>
   126f4:	ldr	r2, [r8]
   126f8:	cmp	r2, #0
   126fc:	blt	12724 <__assert_fail@plt+0x1184>
   12700:	cmp	r7, r2
   12704:	ldr	r1, [pc, #228]	; 127f0 <__assert_fail@plt+0x1250>
   12708:	bne	12718 <__assert_fail@plt+0x1178>
   1270c:	b	127e4 <__assert_fail@plt+0x1244>
   12710:	cmp	r7, r2
   12714:	beq	127e4 <__assert_fail@plt+0x1244>
   12718:	ldr	r2, [r1, #8]!
   1271c:	cmp	r2, #0
   12720:	bge	12710 <__assert_fail@plt+0x1170>
   12724:	mov	r2, r7
   12728:	ldr	r1, [pc, #236]	; 1281c <__assert_fail@plt+0x127c>
   1272c:	ldr	r0, [pc, #236]	; 12820 <__assert_fail@plt+0x1280>
   12730:	str	r3, [sp, #20]
   12734:	bl	114ec <sprintf@plt>
   12738:	ldr	r2, [pc, #224]	; 12820 <__assert_fail@plt+0x1280>
   1273c:	ldr	r3, [sp, #20]
   12740:	str	r2, [sp, #8]
   12744:	str	r3, [sp, #4]
   12748:	str	r9, [sp]
   1274c:	mov	r3, sl
   12750:	mov	r2, fp
   12754:	ldr	r1, [pc, #200]	; 12824 <__assert_fail@plt+0x1284>
   12758:	mov	r0, #6
   1275c:	bl	114d4 <syslog@plt>
   12760:	cmp	r7, #0
   12764:	beq	127b4 <__assert_fail@plt+0x1214>
   12768:	ldr	r3, [r6, #1348]	; 0x544
   1276c:	cmp	r3, #0
   12770:	beq	12794 <__assert_fail@plt+0x11f4>
   12774:	ldr	r3, [sp, #28]
   12778:	ldrb	r3, [r3]
   1277c:	subs	r3, r3, #47	; 0x2f
   12780:	movne	r3, #1
   12784:	cmp	r7, #1
   12788:	movne	r3, #0
   1278c:	cmp	r3, #0
   12790:	bne	127d4 <__assert_fail@plt+0x1234>
   12794:	mov	r0, r7
   12798:	bl	11b0c <__assert_fail@plt+0x56c>
   1279c:	mov	r0, #1
   127a0:	bl	113d8 <exit@plt>
   127a4:	mov	r0, #4
   127a8:	bl	11b0c <__assert_fail@plt+0x56c>
   127ac:	mov	r0, #1
   127b0:	bl	113d8 <exit@plt>
   127b4:	ldrb	r2, [r5, #1]
   127b8:	ldrb	r3, [r5]
   127bc:	mov	r0, r4
   127c0:	orr	r3, r3, r2, lsl #8
   127c4:	cmp	r3, #2
   127c8:	ldreq	r3, [r4, #12]
   127cc:	ldrne	r3, [r4, #8]
   127d0:	blx	r3
   127d4:	mov	r0, #0
   127d8:	bl	113d8 <exit@plt>
   127dc:	ldr	sl, [pc, #68]	; 12828 <__assert_fail@plt+0x1288>
   127e0:	b	12680 <__assert_fail@plt+0x10e0>
   127e4:	ldr	r2, [r1, #4]
   127e8:	b	12740 <__assert_fail@plt+0x11a0>
   127ec:	strdeq	lr, [r2], -ip
   127f0:	andeq	lr, r2, r4, asr r1
   127f4:	andeq	lr, r2, r4, lsl #10
   127f8:	andeq	ip, r1, r4, asr r9
   127fc:	andeq	ip, r1, ip, asr #18
   12800:	andeq	lr, r2, ip, asr #16
   12804:	andeq	r0, r0, r1, lsl #8
   12808:	andeq	ip, r1, r8, ror r9
   1280c:	andeq	ip, r1, r8, asr r9
   12810:	andeq	ip, r1, r0, ror #18
   12814:	andeq	ip, r1, r8, ror #18
   12818:	andeq	ip, r1, r0, ror r9
   1281c:	andeq	ip, r1, ip, lsl #19
   12820:	andeq	lr, r2, r0, asr ip
   12824:	muleq	r1, r8, r9
   12828:	andeq	ip, r1, r4, asr #18
   1282c:	push	{r4, lr}
   12830:	mov	r2, #0
   12834:	ldr	r3, [pc, #48]	; 1286c <__assert_fail@plt+0x12cc>
   12838:	ldr	r0, [pc, #48]	; 12870 <__assert_fail@plt+0x12d0>
   1283c:	ldr	lr, [pc, #48]	; 12874 <__assert_fail@plt+0x12d4>
   12840:	mvn	r4, #0
   12844:	mvn	ip, #2
   12848:	mvn	r1, #1
   1284c:	str	ip, [r0]
   12850:	str	r1, [r0, #520]	; 0x208
   12854:	str	r2, [r3]
   12858:	str	r2, [r3, #4]
   1285c:	str	r2, [r3, #8]
   12860:	str	r4, [lr]
   12864:	add	r0, r0, #4
   12868:	pop	{r4, pc}
   1286c:	andeq	lr, r2, r4, ror #24
   12870:	andeq	lr, r2, r8, lsr lr
   12874:	andeq	lr, r2, r4, lsr #5
   12878:	push	{r4, r5, lr}
   1287c:	mov	r2, #0
   12880:	ldr	r3, [pc, #52]	; 128bc <__assert_fail@plt+0x131c>
   12884:	ldr	r0, [pc, #52]	; 128c0 <__assert_fail@plt+0x1320>
   12888:	ldr	lr, [pc, #52]	; 128c4 <__assert_fail@plt+0x1324>
   1288c:	mov	r5, #1
   12890:	mvn	r4, #0
   12894:	mvn	ip, #2
   12898:	mvn	r1, #1
   1289c:	str	ip, [r0]
   128a0:	str	r1, [r0, #520]	; 0x208
   128a4:	str	r5, [r3, #8]
   128a8:	str	r2, [r3]
   128ac:	str	r2, [r3, #4]
   128b0:	str	r4, [lr]
   128b4:	add	r0, r0, #4
   128b8:	pop	{r4, r5, pc}
   128bc:	andeq	lr, r2, r4, ror #24
   128c0:	andeq	lr, r2, r8, lsr lr
   128c4:	andeq	lr, r2, r4, lsr #5
   128c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128cc:	sub	sp, sp, #20
   128d0:	ldr	r5, [pc, #264]	; 129e0 <__assert_fail@plt+0x1440>
   128d4:	ldr	sl, [pc, #264]	; 129e4 <__assert_fail@plt+0x1444>
   128d8:	ldr	r3, [r5, #8]
   128dc:	str	r3, [sp, #4]
   128e0:	lsl	r2, r3, #6
   128e4:	add	r4, r2, r3
   128e8:	str	r2, [sp, #8]
   128ec:	lsl	r4, r4, #3
   128f0:	ldr	r3, [sl, r4]
   128f4:	cmn	r3, #2
   128f8:	beq	12904 <__assert_fail@plt+0x1364>
   128fc:	add	sp, sp, #20
   12900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12904:	cmp	r1, #0
   12908:	ldr	r3, [sp, #4]
   1290c:	add	r1, r4, #4
   12910:	clz	r3, r3
   12914:	lsr	r3, r3, #5
   12918:	str	r3, [r5, #8]
   1291c:	add	r9, sl, r1
   12920:	beq	129c8 <__assert_fail@plt+0x1428>
   12924:	add	r3, r9, #4
   12928:	mov	r6, r0
   1292c:	str	r3, [sp, #12]
   12930:	ldr	r8, [pc, #176]	; 129e8 <__assert_fail@plt+0x1448>
   12934:	add	r9, r9, #516	; 0x204
   12938:	mov	r4, r3
   1293c:	mov	r7, #13
   12940:	mov	fp, #0
   12944:	b	12968 <__assert_fail@plt+0x13c8>
   12948:	ldr	r3, [r8]
   1294c:	str	fp, [r5]
   12950:	cmp	r3, #10
   12954:	moveq	r3, #10
   12958:	movne	r3, #0
   1295c:	strb	r3, [r4], #1
   12960:	cmp	r4, r9
   12964:	beq	129ac <__assert_fail@plt+0x140c>
   12968:	ldr	r3, [r5]
   1296c:	cmp	r3, #0
   12970:	bne	12948 <__assert_fail@plt+0x13a8>
   12974:	mov	r0, r6
   12978:	bl	11564 <getc@plt>
   1297c:	mov	r3, r7
   12980:	cmn	r0, #1
   12984:	beq	129ac <__assert_fail@plt+0x140c>
   12988:	cmp	r0, #13
   1298c:	cmpne	r0, #10
   12990:	uxtbne	r3, r0
   12994:	moveq	r2, #1
   12998:	streq	r0, [r8]
   1299c:	streq	r2, [r5]
   129a0:	strb	r3, [r4], #1
   129a4:	cmp	r4, r9
   129a8:	bne	12968 <__assert_fail@plt+0x13c8>
   129ac:	ldmib	sp, {r2, r3}
   129b0:	add	r8, r3, r2
   129b4:	ldr	r3, [sp, #12]
   129b8:	sub	r4, r4, r3
   129bc:	str	r4, [sl, r8, lsl #3]
   129c0:	add	sp, sp, #20
   129c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   129c8:	bl	11444 <fileno@plt>
   129cc:	add	r1, r9, #4
   129d0:	mov	r2, #512	; 0x200
   129d4:	bl	11264 <read@plt>
   129d8:	str	r0, [sl, r4]
   129dc:	b	128fc <__assert_fail@plt+0x135c>
   129e0:	andeq	lr, r2, r4, ror #24
   129e4:	andeq	lr, r2, r8, lsr lr
   129e8:	andeq	lr, r2, r4, lsr #5
   129ec:	ldr	ip, [pc, #100]	; 12a58 <__assert_fail@plt+0x14b8>
   129f0:	push	{r4, r5, r6, r7, r8, lr}
   129f4:	mvn	lr, #1
   129f8:	ldr	r3, [ip, #4]
   129fc:	clz	r5, r3
   12a00:	lsr	r5, r5, #5
   12a04:	ldr	r4, [pc, #80]	; 12a5c <__assert_fail@plt+0x14bc>
   12a08:	lsl	r6, r5, #6
   12a0c:	add	r7, r6, r5
   12a10:	add	r3, r3, r3, lsl #6
   12a14:	lsl	r7, r7, #3
   12a18:	str	lr, [r4, r3, lsl #3]
   12a1c:	ldr	r3, [r4, r7]
   12a20:	mov	r8, r1
   12a24:	cmp	r3, lr
   12a28:	str	r5, [ip, #4]
   12a2c:	beq	12a48 <__assert_fail@plt+0x14a8>
   12a30:	add	r5, r6, r5
   12a34:	mov	r0, r3
   12a38:	add	r4, r4, r5, lsl #3
   12a3c:	add	r4, r4, #4
   12a40:	str	r4, [r8]
   12a44:	pop	{r4, r5, r6, r7, r8, pc}
   12a48:	mov	r1, r2
   12a4c:	bl	128c8 <__assert_fail@plt+0x1328>
   12a50:	ldr	r3, [r4, r7]
   12a54:	b	12a30 <__assert_fail@plt+0x1490>
   12a58:	andeq	lr, r2, r4, ror #24
   12a5c:	andeq	lr, r2, r8, lsr lr
   12a60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a64:	mov	fp, r2
   12a68:	ldr	r9, [pc, #296]	; 12b98 <__assert_fail@plt+0x15f8>
   12a6c:	ldr	r6, [pc, #296]	; 12b9c <__assert_fail@plt+0x15fc>
   12a70:	sub	sp, sp, #20
   12a74:	ldr	r2, [r9, #4]
   12a78:	clz	lr, r2
   12a7c:	lsr	lr, lr, #5
   12a80:	add	r2, r2, r2, lsl #6
   12a84:	lsl	ip, lr, #6
   12a88:	add	r4, ip, lr
   12a8c:	str	fp, [r6, r2, lsl #3]
   12a90:	ldr	r2, [r6, r4, lsl #3]
   12a94:	str	r1, [sp, #12]
   12a98:	cmn	r2, #2
   12a9c:	str	lr, [r9, #4]
   12aa0:	beq	12b34 <__assert_fail@plt+0x1594>
   12aa4:	ldr	r1, [r9, #8]
   12aa8:	add	r2, r1, r1, lsl #6
   12aac:	lsl	r2, r2, #3
   12ab0:	ldr	r7, [r6, r2]
   12ab4:	cmn	r7, #1
   12ab8:	blt	12b34 <__assert_fail@plt+0x1594>
   12abc:	clz	r1, r1
   12ac0:	mvn	r4, #1
   12ac4:	lsr	r1, r1, #5
   12ac8:	add	r5, r6, r2
   12acc:	cmp	r7, #0
   12ad0:	str	r1, [r9, #8]
   12ad4:	str	r4, [r6, r2]
   12ad8:	add	r5, r5, #8
   12adc:	ble	12b34 <__assert_fail@plt+0x1594>
   12ae0:	cmp	r3, #0
   12ae4:	beq	12b7c <__assert_fail@plt+0x15dc>
   12ae8:	ldr	r8, [pc, #176]	; 12ba0 <__assert_fail@plt+0x1600>
   12aec:	mov	sl, r0
   12af0:	add	r7, r5, r7
   12af4:	ldr	r4, [r8]
   12af8:	cmp	r4, #13
   12afc:	ldrb	r4, [r5], #1
   12b00:	bne	12b14 <__assert_fail@plt+0x1574>
   12b04:	cmp	r4, #10
   12b08:	beq	12b60 <__assert_fail@plt+0x15c0>
   12b0c:	cmp	r4, #0
   12b10:	beq	12b20 <__assert_fail@plt+0x1580>
   12b14:	mov	r1, sl
   12b18:	mov	r0, r4
   12b1c:	bl	11504 <putc@plt>
   12b20:	cmp	r5, r7
   12b24:	str	r4, [r8]
   12b28:	bne	12af8 <__assert_fail@plt+0x1558>
   12b2c:	ldr	lr, [r9, #4]
   12b30:	lsl	ip, lr, #6
   12b34:	add	ip, ip, lr
   12b38:	mvn	r2, #2
   12b3c:	lsl	ip, ip, #3
   12b40:	add	r3, ip, #4
   12b44:	str	r2, [r6, ip]
   12b48:	ldr	r2, [sp, #12]
   12b4c:	add	r3, r6, r3
   12b50:	mov	r0, fp
   12b54:	str	r3, [r2]
   12b58:	add	sp, sp, #20
   12b5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b60:	mov	r3, #1
   12b64:	str	r3, [sp]
   12b68:	mvn	r2, #0
   12b6c:	mvn	r3, #0
   12b70:	mov	r0, sl
   12b74:	bl	11468 <fseeko64@plt>
   12b78:	b	12b14 <__assert_fail@plt+0x1574>
   12b7c:	bl	11444 <fileno@plt>
   12b80:	mov	r2, r7
   12b84:	mov	r1, r5
   12b88:	bl	11438 <write@plt>
   12b8c:	ldr	lr, [r9, #4]
   12b90:	lsl	ip, lr, #6
   12b94:	b	12b34 <__assert_fail@plt+0x1594>
   12b98:	andeq	lr, r2, r4, ror #24
   12b9c:	andeq	lr, r2, r8, lsr lr
   12ba0:	andeq	lr, r2, r4, lsr #5
   12ba4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ba8:	sub	sp, sp, #8
   12bac:	ldr	lr, [pc, #224]	; 12c94 <__assert_fail@plt+0x16f4>
   12bb0:	ldr	ip, [pc, #224]	; 12c98 <__assert_fail@plt+0x16f8>
   12bb4:	ldr	r3, [lr, #8]
   12bb8:	add	r2, r3, r3, lsl #6
   12bbc:	lsl	r2, r2, #3
   12bc0:	ldr	r9, [ip, r2]
   12bc4:	cmn	r9, #1
   12bc8:	blt	12c64 <__assert_fail@plt+0x16c4>
   12bcc:	clz	r3, r3
   12bd0:	mvn	r4, #1
   12bd4:	lsr	r3, r3, #5
   12bd8:	add	r5, ip, r2
   12bdc:	cmp	r9, #0
   12be0:	str	r3, [lr, #8]
   12be4:	str	r4, [ip, r2]
   12be8:	add	r5, r5, #8
   12bec:	ble	12c8c <__assert_fail@plt+0x16ec>
   12bf0:	cmp	r1, #0
   12bf4:	beq	12c74 <__assert_fail@plt+0x16d4>
   12bf8:	ldr	r7, [pc, #156]	; 12c9c <__assert_fail@plt+0x16fc>
   12bfc:	mov	r6, r0
   12c00:	add	r8, r5, r9
   12c04:	ldr	r4, [r7]
   12c08:	mov	sl, #1
   12c0c:	cmp	r4, #13
   12c10:	ldrb	r4, [r5], #1
   12c14:	bne	12c28 <__assert_fail@plt+0x1688>
   12c18:	cmp	r4, #10
   12c1c:	beq	12c4c <__assert_fail@plt+0x16ac>
   12c20:	cmp	r4, #0
   12c24:	beq	12c34 <__assert_fail@plt+0x1694>
   12c28:	mov	r1, r6
   12c2c:	mov	r0, r4
   12c30:	bl	11504 <putc@plt>
   12c34:	cmp	r5, r8
   12c38:	str	r4, [r7]
   12c3c:	bne	12c0c <__assert_fail@plt+0x166c>
   12c40:	mov	r0, r9
   12c44:	add	sp, sp, #8
   12c48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c4c:	str	sl, [sp]
   12c50:	mvn	r2, #0
   12c54:	mvn	r3, #0
   12c58:	mov	r0, r6
   12c5c:	bl	11468 <fseeko64@plt>
   12c60:	b	12c28 <__assert_fail@plt+0x1688>
   12c64:	mov	r9, #0
   12c68:	mov	r0, r9
   12c6c:	add	sp, sp, #8
   12c70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c74:	bl	11444 <fileno@plt>
   12c78:	mov	r2, r9
   12c7c:	mov	r1, r5
   12c80:	add	sp, sp, #8
   12c84:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12c88:	b	11438 <write@plt>
   12c8c:	mvn	r9, #0
   12c90:	b	12c40 <__assert_fail@plt+0x16a0>
   12c94:	andeq	lr, r2, r4, ror #24
   12c98:	andeq	lr, r2, r8, lsr lr
   12c9c:	andeq	lr, r2, r4, lsr #5
   12ca0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12ca4:	mov	r4, #0
   12ca8:	sub	sp, sp, #664	; 0x298
   12cac:	ldr	r7, [pc, #96]	; 12d14 <__assert_fail@plt+0x1774>
   12cb0:	mov	r5, r0
   12cb4:	mov	r6, r4
   12cb8:	mov	sl, #128	; 0x80
   12cbc:	add	r9, sp, #20
   12cc0:	add	r8, sp, #16
   12cc4:	b	12cdc <__assert_fail@plt+0x173c>
   12cc8:	str	r8, [sp, #4]
   12ccc:	str	r9, [sp]
   12cd0:	add	r4, r4, #1
   12cd4:	str	sl, [sp, #16]
   12cd8:	bl	112e8 <recvfrom@plt>
   12cdc:	add	r2, sp, #12
   12ce0:	mov	r1, r7
   12ce4:	mov	r0, r5
   12ce8:	bl	14904 <argp_parse@@Base+0x1084>
   12cec:	ldr	r2, [sp, #12]
   12cf0:	mov	r3, r6
   12cf4:	cmp	r2, #0
   12cf8:	add	r1, sp, #148	; 0x94
   12cfc:	mov	r2, #516	; 0x204
   12d00:	mov	r0, r5
   12d04:	bne	12cc8 <__assert_fail@plt+0x1728>
   12d08:	mov	r0, r4
   12d0c:	add	sp, sp, #664	; 0x298
   12d10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12d14:	andeq	r5, r0, fp, lsl r4
   12d18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d1c:	sub	sp, sp, #36	; 0x24
   12d20:	ldr	sl, [r0]
   12d24:	str	r0, [sp, #12]
   12d28:	cmp	sl, #0
   12d2c:	str	r1, [sp, #16]
   12d30:	str	r2, [sp, #20]
   12d34:	mov	r9, r3
   12d38:	ldr	r8, [r0, #16]
   12d3c:	ldr	r7, [sp, #72]	; 0x48
   12d40:	beq	12f0c <__assert_fail@plt+0x196c>
   12d44:	add	fp, sl, #24
   12d48:	str	r8, [sp, #28]
   12d4c:	str	r3, [sp, #24]
   12d50:	ldr	r4, [fp, #-20]	; 0xffffffec
   12d54:	sub	r1, fp, #24
   12d58:	cmp	r4, #0
   12d5c:	bne	12d6c <__assert_fail@plt+0x17cc>
   12d60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12d64:	cmp	r3, #0
   12d68:	beq	12ee0 <__assert_fail@plt+0x1940>
   12d6c:	ldr	r3, [fp, #-12]
   12d70:	tst	r3, #4
   12d74:	moveq	sl, r1
   12d78:	moveq	r5, r3
   12d7c:	ldrne	r5, [sl, #12]
   12d80:	ands	r5, r5, #8
   12d84:	bne	12ec8 <__assert_fail@plt+0x1928>
   12d88:	tst	r3, #8
   12d8c:	bne	12e08 <__assert_fail@plt+0x1868>
   12d90:	sub	r3, r4, #1
   12d94:	cmp	r3, #254	; 0xfe
   12d98:	bhi	12e08 <__assert_fail@plt+0x1868>
   12d9c:	bl	113cc <__ctype_b_loc@plt>
   12da0:	lsl	r3, r4, #1
   12da4:	ldr	r1, [r0]
   12da8:	ldrh	r3, [r1, r3]
   12dac:	tst	r3, #16384	; 0x4000
   12db0:	beq	12e08 <__assert_fail@plt+0x1868>
   12db4:	ldr	r3, [r7, #4]
   12db8:	add	r1, r3, #1
   12dbc:	str	r1, [r7, #4]
   12dc0:	strb	r4, [r3]
   12dc4:	ldr	r3, [sl, #8]
   12dc8:	cmp	r3, #0
   12dcc:	beq	12dfc <__assert_fail@plt+0x185c>
   12dd0:	ldr	r3, [r7, #4]
   12dd4:	mov	r2, #58	; 0x3a
   12dd8:	add	r1, r3, #1
   12ddc:	str	r1, [r7, #4]
   12de0:	strb	r2, [r3]
   12de4:	ldr	r3, [sl, #12]
   12de8:	tst	r3, #1
   12dec:	ldrne	r3, [r7, #4]
   12df0:	addne	r1, r3, #1
   12df4:	strne	r1, [r7, #4]
   12df8:	strbne	r2, [r3]
   12dfc:	ldr	r3, [r7, #4]
   12e00:	mov	r2, #0
   12e04:	strb	r2, [r3]
   12e08:	ldr	r4, [fp, #-24]	; 0xffffffe8
   12e0c:	cmp	r4, #0
   12e10:	beq	12ec8 <__assert_fail@plt+0x1928>
   12e14:	ldr	r8, [r7]
   12e18:	ldr	r6, [r8, #8]
   12e1c:	ldr	r0, [r6]
   12e20:	cmp	r0, #0
   12e24:	beq	12e48 <__assert_fail@plt+0x18a8>
   12e28:	mov	r9, r6
   12e2c:	mov	r1, r4
   12e30:	bl	11240 <strcmp@plt>
   12e34:	cmp	r0, #0
   12e38:	beq	12ed0 <__assert_fail@plt+0x1930>
   12e3c:	ldr	r0, [r9, #16]!
   12e40:	cmp	r0, #0
   12e44:	bne	12e2c <__assert_fail@plt+0x188c>
   12e48:	ldr	r3, [sl, #8]
   12e4c:	ldr	r1, [r7, #8]
   12e50:	cmp	r3, #0
   12e54:	str	r4, [r1]
   12e58:	beq	12e6c <__assert_fail@plt+0x18cc>
   12e5c:	ldr	r3, [sl, #12]
   12e60:	tst	r3, #1
   12e64:	moveq	r5, #1
   12e68:	movne	r5, #2
   12e6c:	str	r5, [r1, #4]
   12e70:	ldr	ip, [fp, #-20]	; 0xffffffec
   12e74:	mov	r3, #0
   12e78:	cmp	ip, r3
   12e7c:	str	r3, [r1, #8]
   12e80:	ldr	r2, [sp, #24]
   12e84:	ldr	r3, [r8, #48]	; 0x30
   12e88:	ldreq	ip, [sl, #4]
   12e8c:	sub	r3, r2, r3
   12e90:	bic	ip, ip, #-16777216	; 0xff000000
   12e94:	asr	r3, r3, #2
   12e98:	add	lr, r1, #16
   12e9c:	rsb	r0, r3, r3, lsl #3
   12ea0:	add	r0, r0, r0, lsl #6
   12ea4:	add	r0, r3, r0, lsl #3
   12ea8:	rsb	r0, r0, r0, lsl #15
   12eac:	add	r3, r3, r0, lsl #3
   12eb0:	add	r3, r3, #1
   12eb4:	add	r3, ip, r3, lsl #24
   12eb8:	str	r3, [r1, #12]
   12ebc:	mov	r3, #0
   12ec0:	str	lr, [r7, #8]
   12ec4:	str	r3, [r1, #16]
   12ec8:	add	fp, fp, #24
   12ecc:	b	12d50 <__assert_fail@plt+0x17b0>
   12ed0:	sub	r6, r9, r6
   12ed4:	cmn	r6, #15
   12ed8:	bge	12ec8 <__assert_fail@plt+0x1928>
   12edc:	b	12e48 <__assert_fail@plt+0x18a8>
   12ee0:	ldr	r3, [fp, #-8]
   12ee4:	cmp	r3, #0
   12ee8:	bne	12d6c <__assert_fail@plt+0x17cc>
   12eec:	ldr	r3, [fp, #-4]
   12ef0:	cmp	r3, #0
   12ef4:	bne	12d6c <__assert_fail@plt+0x17cc>
   12ef8:	ldr	r3, [sp, #12]
   12efc:	ldr	r8, [sp, #28]
   12f00:	ldr	r9, [sp, #24]
   12f04:	ldr	r3, [r3, #4]
   12f08:	b	12f20 <__assert_fail@plt+0x1980>
   12f0c:	ldr	r3, [r0, #4]
   12f10:	cmp	r3, #0
   12f14:	moveq	r0, r9
   12f18:	moveq	r9, r3
   12f1c:	beq	12f90 <__assert_fail@plt+0x19f0>
   12f20:	ldr	r2, [r7, #4]
   12f24:	ldr	r1, [sp, #12]
   12f28:	str	r3, [r9]
   12f2c:	cmp	r8, #0
   12f30:	stmib	r9, {r1, r2}
   12f34:	ldr	r2, [sp, #16]
   12f38:	mov	r3, #0
   12f3c:	str	r2, [r9, #16]
   12f40:	ldr	r2, [sp, #20]
   12f44:	str	r3, [r9, #12]
   12f48:	str	r2, [r9, #20]
   12f4c:	str	r3, [r9, #24]
   12f50:	str	r3, [r9, #32]
   12f54:	str	r3, [r9, #28]
   12f58:	beq	12f8c <__assert_fail@plt+0x19ec>
   12f5c:	ldr	r2, [r8]
   12f60:	cmp	r2, r3
   12f64:	beq	12fd8 <__assert_fail@plt+0x1a38>
   12f68:	add	r3, r3, #1
   12f6c:	ldr	r2, [r8, r3, lsl #4]
   12f70:	cmp	r2, #0
   12f74:	bne	12f68 <__assert_fail@plt+0x19c8>
   12f78:	lsl	r3, r3, #2
   12f7c:	ldr	r2, [r7, #12]
   12f80:	add	r3, r2, r3
   12f84:	str	r2, [r9, #28]
   12f88:	str	r3, [r7, #12]
   12f8c:	add	r0, r9, #36	; 0x24
   12f90:	cmp	r8, #0
   12f94:	beq	12fd0 <__assert_fail@plt+0x1a30>
   12f98:	ldr	r1, [r8]
   12f9c:	cmp	r1, #0
   12fa0:	beq	12fd0 <__assert_fail@plt+0x1a30>
   12fa4:	mov	r2, #0
   12fa8:	add	r4, r2, #1
   12fac:	mov	r3, r0
   12fb0:	str	r7, [sp]
   12fb4:	mov	r0, r1
   12fb8:	mov	r1, r9
   12fbc:	bl	12d18 <__assert_fail@plt+0x1778>
   12fc0:	ldr	r1, [r8, r4, lsl #4]
   12fc4:	mov	r2, r4
   12fc8:	cmp	r1, #0
   12fcc:	bne	12fa8 <__assert_fail@plt+0x1a08>
   12fd0:	add	sp, sp, #36	; 0x24
   12fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12fd8:	mov	r3, r2
   12fdc:	b	12f7c <__assert_fail@plt+0x19dc>
   12fe0:	cmp	r0, #86	; 0x56
   12fe4:	beq	12ff0 <__assert_fail@plt+0x1a50>
   12fe8:	mov	r0, #7
   12fec:	bx	lr
   12ff0:	ldr	r3, [pc, #104]	; 13060 <__assert_fail@plt+0x1ac0>
   12ff4:	push	{r4, lr}
   12ff8:	mov	r4, r2
   12ffc:	ldr	r3, [r3]
   13000:	cmp	r3, #0
   13004:	beq	13028 <__assert_fail@plt+0x1a88>
   13008:	mov	r1, r2
   1300c:	ldr	r0, [r2, #48]	; 0x30
   13010:	blx	r3
   13014:	ldr	r0, [r4, #16]
   13018:	ands	r0, r0, #32
   1301c:	beq	1305c <__assert_fail@plt+0x1abc>
   13020:	mov	r0, #0
   13024:	pop	{r4, pc}
   13028:	ldr	r3, [pc, #52]	; 13064 <__assert_fail@plt+0x1ac4>
   1302c:	ldr	r2, [r3]
   13030:	cmp	r2, #0
   13034:	beq	13048 <__assert_fail@plt+0x1aa8>
   13038:	ldr	r1, [pc, #40]	; 13068 <__assert_fail@plt+0x1ac8>
   1303c:	ldr	r0, [r4, #48]	; 0x30
   13040:	bl	113fc <fprintf@plt>
   13044:	b	13014 <__assert_fail@plt+0x1a74>
   13048:	ldr	r2, [pc, #28]	; 1306c <__assert_fail@plt+0x1acc>
   1304c:	ldr	r1, [pc, #28]	; 13070 <__assert_fail@plt+0x1ad0>
   13050:	mov	r0, r4
   13054:	bl	1a1dc <argp_error@@Base>
   13058:	b	13014 <__assert_fail@plt+0x1a74>
   1305c:	bl	113d8 <exit@plt>
   13060:	andeq	lr, r2, r4, ror ip
   13064:	andeq	pc, r2, ip, asr #4
   13068:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1306c:	strdeq	ip, [r1], -r4
   13070:			; <UNDEFINED> instruction: 0x0001c9b4
   13074:	cmn	r0, #3
   13078:	push	{r4, r5, lr}
   1307c:	mov	r4, r2
   13080:	sub	sp, sp, #12
   13084:	beq	13168 <__assert_fail@plt+0x1bc8>
   13088:	ble	130f8 <__assert_fail@plt+0x1b58>
   1308c:	cmn	r0, #2
   13090:	beq	130b8 <__assert_fail@plt+0x1b18>
   13094:	cmp	r0, #63	; 0x3f
   13098:	bne	1315c <__assert_fail@plt+0x1bbc>
   1309c:	mov	r0, r4
   130a0:	ldr	r2, [pc, #236]	; 13194 <__assert_fail@plt+0x1bf4>
   130a4:	ldr	r1, [r4, #48]	; 0x30
   130a8:	bl	1a12c <argp_state_help@@Base>
   130ac:	mov	r0, #0
   130b0:	add	sp, sp, #12
   130b4:	pop	{r4, r5, pc}
   130b8:	ldr	r3, [pc, #216]	; 13198 <__assert_fail@plt+0x1bf8>
   130bc:	mov	r0, r1
   130c0:	str	r1, [sp, #4]
   130c4:	str	r1, [r3]
   130c8:	bl	14750 <argp_parse@@Base+0xed0>
   130cc:	ldr	r3, [r4, #16]
   130d0:	ldr	r2, [pc, #196]	; 1319c <__assert_fail@plt+0x1bfc>
   130d4:	and	r3, r3, #3
   130d8:	cmp	r3, #1
   130dc:	ldr	r1, [sp, #4]
   130e0:	str	r0, [r4, #40]	; 0x28
   130e4:	str	r0, [r2]
   130e8:	beq	13184 <__assert_fail@plt+0x1be4>
   130ec:	mov	r0, #0
   130f0:	add	sp, sp, #12
   130f4:	pop	{r4, r5, pc}
   130f8:	cmn	r0, #4
   130fc:	bne	1315c <__assert_fail@plt+0x1bbc>
   13100:	cmp	r1, #0
   13104:	ldr	r0, [pc, #148]	; 131a0 <__assert_fail@plt+0x1c00>
   13108:	mov	r2, #10
   1310c:	movne	r0, r1
   13110:	mov	r1, #0
   13114:	bl	1124c <strtol@plt>
   13118:	ldr	r4, [pc, #132]	; 131a4 <__assert_fail@plt+0x1c04>
   1311c:	str	r0, [r4]
   13120:	ldr	r3, [r4]
   13124:	cmp	r3, #0
   13128:	sub	r3, r3, #1
   1312c:	str	r3, [r4]
   13130:	ble	130ec <__assert_fail@plt+0x1b4c>
   13134:	mov	r5, #1
   13138:	mov	r0, r5
   1313c:	bl	112dc <sleep@plt>
   13140:	ldr	r3, [r4]
   13144:	cmp	r3, #0
   13148:	sub	r3, r3, #1
   1314c:	str	r3, [r4]
   13150:	bgt	13138 <__assert_fail@plt+0x1b98>
   13154:	mov	r0, #0
   13158:	b	130f0 <__assert_fail@plt+0x1b50>
   1315c:	mov	r0, #7
   13160:	add	sp, sp, #12
   13164:	pop	{r4, r5, pc}
   13168:	mov	r0, r4
   1316c:	ldr	r2, [pc, #52]	; 131a8 <__assert_fail@plt+0x1c08>
   13170:	ldr	r1, [r4, #48]	; 0x30
   13174:	bl	1a12c <argp_state_help@@Base>
   13178:	mov	r0, #0
   1317c:	add	sp, sp, #12
   13180:	pop	{r4, r5, pc}
   13184:	ldr	r3, [r4, #8]
   13188:	mov	r0, #0
   1318c:	str	r1, [r3]
   13190:	b	130b0 <__assert_fail@plt+0x1b10>
   13194:	andeq	r0, r0, sl, ror r2
   13198:	andeq	lr, r2, ip, ror #5
   1319c:	andeq	lr, r2, r8, ror #5
   131a0:	andeq	ip, r1, r8, lsl lr
   131a4:	andeq	lr, r2, r0, ror ip
   131a8:	andeq	r0, r0, r1, lsl #4
   131ac:	ldr	r3, [r0]
   131b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131b4:	cmp	r3, #0
   131b8:	sub	sp, sp, #12
   131bc:	ldr	lr, [r0, #16]
   131c0:	beq	131f8 <__assert_fail@plt+0x1c58>
   131c4:	ldr	r0, [r1, #8]
   131c8:	mov	r2, #0
   131cc:	add	r0, r0, #1
   131d0:	str	r0, [r1, #8]
   131d4:	add	r3, r3, #24
   131d8:	ldr	r0, [r3, #-20]	; 0xffffffec
   131dc:	cmp	r0, #0
   131e0:	bne	131f0 <__assert_fail@plt+0x1c50>
   131e4:	ldr	r0, [r3, #-24]	; 0xffffffe8
   131e8:	cmp	r0, #0
   131ec:	beq	137b0 <__assert_fail@plt+0x2210>
   131f0:	add	r2, r2, #1
   131f4:	b	131d4 <__assert_fail@plt+0x1c34>
   131f8:	ldr	r3, [r0, #4]
   131fc:	cmp	r3, #0
   13200:	ldrne	r3, [r1, #8]
   13204:	addne	r3, r3, #1
   13208:	strne	r3, [r1, #8]
   1320c:	cmp	lr, #0
   13210:	beq	1359c <__assert_fail@plt+0x1ffc>
   13214:	ldr	r0, [lr]
   13218:	cmp	r0, #0
   1321c:	beq	1359c <__assert_fail@plt+0x1ffc>
   13220:	mov	r6, r1
   13224:	str	lr, [sp]
   13228:	ldr	r2, [r0]
   1322c:	ldr	r7, [r0, #16]
   13230:	cmp	r2, #0
   13234:	beq	1326c <__assert_fail@plt+0x1ccc>
   13238:	ldr	r0, [r6, #8]
   1323c:	mov	r1, #0
   13240:	add	r0, r0, #1
   13244:	str	r0, [r6, #8]
   13248:	add	r2, r2, #24
   1324c:	ldr	r0, [r2, #-20]	; 0xffffffec
   13250:	cmp	r0, #0
   13254:	bne	13264 <__assert_fail@plt+0x1cc4>
   13258:	ldr	r0, [r2, #-24]	; 0xffffffe8
   1325c:	cmp	r0, #0
   13260:	beq	137e0 <__assert_fail@plt+0x2240>
   13264:	add	r1, r1, #1
   13268:	b	13248 <__assert_fail@plt+0x1ca8>
   1326c:	ldr	r2, [r0, #4]
   13270:	cmp	r2, #0
   13274:	ldrne	r2, [r6, #8]
   13278:	addne	r2, r2, #1
   1327c:	strne	r2, [r6, #8]
   13280:	cmp	r7, #0
   13284:	beq	13840 <__assert_fail@plt+0x22a0>
   13288:	ldr	r1, [r7]
   1328c:	cmp	r1, #0
   13290:	beq	13840 <__assert_fail@plt+0x22a0>
   13294:	str	r7, [sp, #4]
   13298:	ldr	r2, [r1]
   1329c:	ldr	r8, [r1, #16]
   132a0:	cmp	r2, #0
   132a4:	beq	132dc <__assert_fail@plt+0x1d3c>
   132a8:	ldr	r0, [r6, #8]
   132ac:	mov	r1, #0
   132b0:	add	r0, r0, #1
   132b4:	str	r0, [r6, #8]
   132b8:	add	r2, r2, #24
   132bc:	ldr	r0, [r2, #-20]	; 0xffffffec
   132c0:	cmp	r0, #0
   132c4:	bne	132d4 <__assert_fail@plt+0x1d34>
   132c8:	ldr	r0, [r2, #-24]	; 0xffffffe8
   132cc:	cmp	r0, #0
   132d0:	beq	13810 <__assert_fail@plt+0x2270>
   132d4:	add	r1, r1, #1
   132d8:	b	132b8 <__assert_fail@plt+0x1d18>
   132dc:	ldr	r2, [r1, #4]
   132e0:	cmp	r2, #0
   132e4:	ldrne	r2, [r6, #8]
   132e8:	addne	r2, r2, #1
   132ec:	strne	r2, [r6, #8]
   132f0:	cmp	r8, #0
   132f4:	beq	13848 <__assert_fail@plt+0x22a8>
   132f8:	ldr	r1, [r8]
   132fc:	cmp	r1, #0
   13300:	beq	13848 <__assert_fail@plt+0x22a8>
   13304:	ldr	r2, [r1]
   13308:	ldr	r9, [r1, #16]
   1330c:	cmp	r2, #0
   13310:	beq	13348 <__assert_fail@plt+0x1da8>
   13314:	ldr	r0, [r6, #8]
   13318:	mov	r1, #0
   1331c:	add	r0, r0, #1
   13320:	str	r0, [r6, #8]
   13324:	add	r2, r2, #24
   13328:	ldr	r0, [r2, #-20]	; 0xffffffec
   1332c:	cmp	r0, #0
   13330:	bne	13340 <__assert_fail@plt+0x1da0>
   13334:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13338:	cmp	r0, #0
   1333c:	beq	13850 <__assert_fail@plt+0x22b0>
   13340:	add	r1, r1, #1
   13344:	b	13324 <__assert_fail@plt+0x1d84>
   13348:	ldr	r2, [r1, #4]
   1334c:	cmp	r2, #0
   13350:	ldrne	r2, [r6, #8]
   13354:	addne	r2, r2, #1
   13358:	strne	r2, [r6, #8]
   1335c:	cmp	r9, #0
   13360:	beq	1354c <__assert_fail@plt+0x1fac>
   13364:	ldr	r1, [r9]
   13368:	cmp	r1, #0
   1336c:	beq	1354c <__assert_fail@plt+0x1fac>
   13370:	ldr	r2, [r1]
   13374:	ldr	sl, [r1, #16]
   13378:	cmp	r2, #0
   1337c:	beq	133e4 <__assert_fail@plt+0x1e44>
   13380:	ldr	r0, [r6, #8]
   13384:	mov	r1, #0
   13388:	add	r0, r0, #1
   1338c:	str	r0, [r6, #8]
   13390:	b	13398 <__assert_fail@plt+0x1df8>
   13394:	add	r1, r1, #1
   13398:	add	r2, r2, #24
   1339c:	ldr	r0, [r2, #-20]	; 0xffffffec
   133a0:	cmp	r0, #0
   133a4:	bne	13394 <__assert_fail@plt+0x1df4>
   133a8:	ldr	r0, [r2, #-24]	; 0xffffffe8
   133ac:	cmp	r0, #0
   133b0:	bne	13394 <__assert_fail@plt+0x1df4>
   133b4:	ldr	r0, [r2, #-8]
   133b8:	cmp	r0, #0
   133bc:	bne	13394 <__assert_fail@plt+0x1df4>
   133c0:	ldr	r0, [r2, #-4]
   133c4:	cmp	r0, #0
   133c8:	bne	13394 <__assert_fail@plt+0x1df4>
   133cc:	ldm	r6, {r0, r2}
   133d0:	add	ip, r1, r1, lsl #1
   133d4:	add	r0, r0, ip
   133d8:	add	r1, r2, r1
   133dc:	stm	r6, {r0, r1}
   133e0:	b	133f8 <__assert_fail@plt+0x1e58>
   133e4:	ldr	r2, [r1, #4]
   133e8:	cmp	r2, #0
   133ec:	ldrne	r2, [r6, #8]
   133f0:	addne	r2, r2, #1
   133f4:	strne	r2, [r6, #8]
   133f8:	cmp	sl, #0
   133fc:	beq	137a8 <__assert_fail@plt+0x2208>
   13400:	ldr	r1, [sl]
   13404:	cmp	r1, #0
   13408:	beq	137a8 <__assert_fail@plt+0x2208>
   1340c:	ldr	r2, [r1]
   13410:	ldr	fp, [r1, #16]
   13414:	cmp	r2, #0
   13418:	beq	13780 <__assert_fail@plt+0x21e0>
   1341c:	ldr	r0, [r6, #8]
   13420:	mov	r1, #0
   13424:	add	r0, r0, #1
   13428:	str	r0, [r6, #8]
   1342c:	b	13434 <__assert_fail@plt+0x1e94>
   13430:	add	r1, r1, #1
   13434:	add	r2, r2, #24
   13438:	ldr	r0, [r2, #-20]	; 0xffffffec
   1343c:	cmp	r0, #0
   13440:	bne	13430 <__assert_fail@plt+0x1e90>
   13444:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13448:	cmp	r0, #0
   1344c:	bne	13430 <__assert_fail@plt+0x1e90>
   13450:	ldr	r0, [r2, #-8]
   13454:	cmp	r0, #0
   13458:	bne	13430 <__assert_fail@plt+0x1e90>
   1345c:	ldr	r0, [r2, #-4]
   13460:	cmp	r0, #0
   13464:	bne	13430 <__assert_fail@plt+0x1e90>
   13468:	ldm	r6, {r0, r2}
   1346c:	add	ip, r1, r1, lsl #1
   13470:	add	r0, r0, ip
   13474:	add	r1, r2, r1
   13478:	stm	r6, {r0, r1}
   1347c:	cmp	fp, #0
   13480:	beq	137a0 <__assert_fail@plt+0x2200>
   13484:	ldr	r0, [fp]
   13488:	cmp	r0, #0
   1348c:	beq	137a0 <__assert_fail@plt+0x2200>
   13490:	ldr	r2, [r0]
   13494:	ldr	r5, [r0, #16]
   13498:	cmp	r2, #0
   1349c:	beq	135a4 <__assert_fail@plt+0x2004>
   134a0:	ldr	r0, [r6, #8]
   134a4:	mov	r1, #0
   134a8:	add	r0, r0, #1
   134ac:	str	r0, [r6, #8]
   134b0:	b	134b8 <__assert_fail@plt+0x1f18>
   134b4:	add	r1, r1, #1
   134b8:	add	r2, r2, #24
   134bc:	ldr	r0, [r2, #-20]	; 0xffffffec
   134c0:	cmp	r0, #0
   134c4:	bne	134b4 <__assert_fail@plt+0x1f14>
   134c8:	ldr	r0, [r2, #-24]	; 0xffffffe8
   134cc:	cmp	r0, #0
   134d0:	bne	134b4 <__assert_fail@plt+0x1f14>
   134d4:	ldr	r0, [r2, #-8]
   134d8:	cmp	r0, #0
   134dc:	bne	134b4 <__assert_fail@plt+0x1f14>
   134e0:	ldr	r0, [r2, #-4]
   134e4:	cmp	r0, #0
   134e8:	bne	134b4 <__assert_fail@plt+0x1f14>
   134ec:	ldm	r6, {r0, r2}
   134f0:	add	ip, r1, r1, lsl #1
   134f4:	cmp	r5, #0
   134f8:	add	r0, r0, ip
   134fc:	add	r1, r2, r1
   13500:	stm	r6, {r0, r1}
   13504:	bne	135c0 <__assert_fail@plt+0x2020>
   13508:	ldr	r1, [r6, #12]
   1350c:	ldr	r0, [fp, #16]!
   13510:	add	r2, r1, #1
   13514:	cmp	r0, #0
   13518:	str	r2, [r6, #12]
   1351c:	bne	13490 <__assert_fail@plt+0x1ef0>
   13520:	ldr	r1, [sl, #16]!
   13524:	add	r2, r2, #1
   13528:	cmp	r1, #0
   1352c:	str	r2, [r6, #12]
   13530:	bne	1340c <__assert_fail@plt+0x1e6c>
   13534:	ldr	r1, [r9, #16]!
   13538:	add	r2, r2, #1
   1353c:	cmp	r1, #0
   13540:	str	r2, [r6, #12]
   13544:	bne	13370 <__assert_fail@plt+0x1dd0>
   13548:	b	13550 <__assert_fail@plt+0x1fb0>
   1354c:	ldr	r2, [r6, #12]
   13550:	ldr	r1, [r8, #16]!
   13554:	add	r2, r2, #1
   13558:	cmp	r1, #0
   1355c:	str	r2, [r6, #12]
   13560:	bne	13304 <__assert_fail@plt+0x1d64>
   13564:	ldr	r3, [sp, #4]
   13568:	add	r2, r2, #1
   1356c:	ldr	r1, [r3, #16]!
   13570:	str	r2, [r6, #12]
   13574:	cmp	r1, #0
   13578:	str	r3, [sp, #4]
   1357c:	bne	13298 <__assert_fail@plt+0x1cf8>
   13580:	ldr	r3, [sp]
   13584:	add	r2, r2, #1
   13588:	ldr	r0, [r3, #16]!
   1358c:	str	r2, [r6, #12]
   13590:	cmp	r0, #0
   13594:	str	r3, [sp]
   13598:	bne	13228 <__assert_fail@plt+0x1c88>
   1359c:	add	sp, sp, #12
   135a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135a4:	ldr	r2, [r0, #4]
   135a8:	cmp	r2, #0
   135ac:	ldrne	r2, [r6, #8]
   135b0:	addne	r2, r2, #1
   135b4:	strne	r2, [r6, #8]
   135b8:	cmp	r5, #0
   135bc:	beq	13508 <__assert_fail@plt+0x1f68>
   135c0:	ldr	r0, [r5]
   135c4:	cmp	r0, #0
   135c8:	beq	13508 <__assert_fail@plt+0x1f68>
   135cc:	ldr	r2, [r0]
   135d0:	ldr	r4, [r0, #16]
   135d4:	cmp	r2, #0
   135d8:	beq	13738 <__assert_fail@plt+0x2198>
   135dc:	ldr	r0, [r6, #8]
   135e0:	mov	r1, #0
   135e4:	add	r0, r0, #1
   135e8:	str	r0, [r6, #8]
   135ec:	b	135f4 <__assert_fail@plt+0x2054>
   135f0:	add	r1, r1, #1
   135f4:	add	r2, r2, #24
   135f8:	ldr	r0, [r2, #-20]	; 0xffffffec
   135fc:	cmp	r0, #0
   13600:	bne	135f0 <__assert_fail@plt+0x2050>
   13604:	ldr	r0, [r2, #-24]	; 0xffffffe8
   13608:	cmp	r0, #0
   1360c:	bne	135f0 <__assert_fail@plt+0x2050>
   13610:	ldr	r0, [r2, #-8]
   13614:	cmp	r0, #0
   13618:	bne	135f0 <__assert_fail@plt+0x2050>
   1361c:	ldr	r0, [r2, #-4]
   13620:	cmp	r0, #0
   13624:	bne	135f0 <__assert_fail@plt+0x2050>
   13628:	ldm	r6, {r0, r2}
   1362c:	add	ip, r1, r1, lsl #1
   13630:	add	r0, r0, ip
   13634:	add	r1, r2, r1
   13638:	stm	r6, {r0, r1}
   1363c:	cmp	r4, #0
   13640:	beq	13758 <__assert_fail@plt+0x21b8>
   13644:	ldr	r0, [r4]
   13648:	cmp	r0, #0
   1364c:	beq	13758 <__assert_fail@plt+0x21b8>
   13650:	ldr	r1, [r0]
   13654:	ldr	r2, [r0, #16]
   13658:	cmp	r1, #0
   1365c:	beq	13768 <__assert_fail@plt+0x21c8>
   13660:	ldr	ip, [r6, #8]
   13664:	mov	r0, #0
   13668:	add	ip, ip, #1
   1366c:	str	ip, [r6, #8]
   13670:	b	13678 <__assert_fail@plt+0x20d8>
   13674:	add	r0, r0, #1
   13678:	add	r1, r1, #24
   1367c:	ldr	ip, [r1, #-20]	; 0xffffffec
   13680:	cmp	ip, #0
   13684:	bne	13674 <__assert_fail@plt+0x20d4>
   13688:	ldr	ip, [r1, #-24]	; 0xffffffe8
   1368c:	cmp	ip, #0
   13690:	bne	13674 <__assert_fail@plt+0x20d4>
   13694:	ldr	ip, [r1, #-8]
   13698:	cmp	ip, #0
   1369c:	bne	13674 <__assert_fail@plt+0x20d4>
   136a0:	ldr	ip, [r1, #-4]
   136a4:	cmp	ip, #0
   136a8:	bne	13674 <__assert_fail@plt+0x20d4>
   136ac:	ldr	ip, [r6]
   136b0:	ldr	r1, [r6, #4]
   136b4:	add	lr, r0, r0, lsl #1
   136b8:	add	ip, ip, lr
   136bc:	add	r0, r1, r0
   136c0:	str	ip, [r6]
   136c4:	str	r0, [r6, #4]
   136c8:	cmp	r2, #0
   136cc:	beq	13760 <__assert_fail@plt+0x21c0>
   136d0:	ldr	r0, [r2]
   136d4:	cmp	r0, #0
   136d8:	beq	13760 <__assert_fail@plt+0x21c0>
   136dc:	mov	r7, r2
   136e0:	mov	r1, r6
   136e4:	bl	131ac <__assert_fail@plt+0x1c0c>
   136e8:	ldr	r1, [r6, #12]
   136ec:	ldr	r0, [r7, #16]!
   136f0:	add	r1, r1, #1
   136f4:	cmp	r0, #0
   136f8:	str	r1, [r6, #12]
   136fc:	bne	136e0 <__assert_fail@plt+0x2140>
   13700:	ldr	r0, [r4, #16]!
   13704:	add	r1, r1, #1
   13708:	cmp	r0, #0
   1370c:	str	r1, [r6, #12]
   13710:	bne	13650 <__assert_fail@plt+0x20b0>
   13714:	ldr	r0, [r5, #16]!
   13718:	add	r1, r1, #1
   1371c:	cmp	r0, #0
   13720:	str	r1, [r6, #12]
   13724:	beq	1350c <__assert_fail@plt+0x1f6c>
   13728:	ldr	r2, [r0]
   1372c:	ldr	r4, [r0, #16]
   13730:	cmp	r2, #0
   13734:	bne	135dc <__assert_fail@plt+0x203c>
   13738:	ldr	r2, [r0, #4]
   1373c:	cmp	r2, #0
   13740:	beq	1363c <__assert_fail@plt+0x209c>
   13744:	ldr	r2, [r6, #8]
   13748:	cmp	r4, #0
   1374c:	add	r2, r2, #1
   13750:	str	r2, [r6, #8]
   13754:	bne	13644 <__assert_fail@plt+0x20a4>
   13758:	ldr	r1, [r6, #12]
   1375c:	b	13714 <__assert_fail@plt+0x2174>
   13760:	ldr	r1, [r6, #12]
   13764:	b	13700 <__assert_fail@plt+0x2160>
   13768:	ldr	r1, [r0, #4]
   1376c:	cmp	r1, #0
   13770:	ldrne	r1, [r6, #8]
   13774:	addne	r1, r1, #1
   13778:	strne	r1, [r6, #8]
   1377c:	b	136c8 <__assert_fail@plt+0x2128>
   13780:	ldr	r2, [r1, #4]
   13784:	cmp	r2, #0
   13788:	beq	1347c <__assert_fail@plt+0x1edc>
   1378c:	ldr	r2, [r6, #8]
   13790:	cmp	fp, #0
   13794:	add	r2, r2, #1
   13798:	str	r2, [r6, #8]
   1379c:	bne	13484 <__assert_fail@plt+0x1ee4>
   137a0:	ldr	r2, [r6, #12]
   137a4:	b	13520 <__assert_fail@plt+0x1f80>
   137a8:	ldr	r2, [r6, #12]
   137ac:	b	13534 <__assert_fail@plt+0x1f94>
   137b0:	ldr	r0, [r3, #-8]
   137b4:	cmp	r0, #0
   137b8:	bne	131f0 <__assert_fail@plt+0x1c50>
   137bc:	ldr	r0, [r3, #-4]
   137c0:	cmp	r0, #0
   137c4:	bne	131f0 <__assert_fail@plt+0x1c50>
   137c8:	ldm	r1, {r0, r3}
   137cc:	add	ip, r2, r2, lsl #1
   137d0:	add	r0, r0, ip
   137d4:	add	r2, r3, r2
   137d8:	stm	r1, {r0, r2}
   137dc:	b	1320c <__assert_fail@plt+0x1c6c>
   137e0:	ldr	r0, [r2, #-8]
   137e4:	cmp	r0, #0
   137e8:	bne	13264 <__assert_fail@plt+0x1cc4>
   137ec:	ldr	r0, [r2, #-4]
   137f0:	cmp	r0, #0
   137f4:	bne	13264 <__assert_fail@plt+0x1cc4>
   137f8:	ldm	r6, {r0, r2}
   137fc:	add	ip, r1, r1, lsl #1
   13800:	add	r0, r0, ip
   13804:	add	r1, r2, r1
   13808:	stm	r6, {r0, r1}
   1380c:	b	13280 <__assert_fail@plt+0x1ce0>
   13810:	ldr	r0, [r2, #-8]
   13814:	cmp	r0, #0
   13818:	bne	132d4 <__assert_fail@plt+0x1d34>
   1381c:	ldr	r0, [r2, #-4]
   13820:	cmp	r0, #0
   13824:	bne	132d4 <__assert_fail@plt+0x1d34>
   13828:	ldm	r6, {r0, r2}
   1382c:	add	ip, r1, r1, lsl #1
   13830:	add	r0, r0, ip
   13834:	add	r1, r2, r1
   13838:	stm	r6, {r0, r1}
   1383c:	b	132f0 <__assert_fail@plt+0x1d50>
   13840:	ldr	r2, [r6, #12]
   13844:	b	13580 <__assert_fail@plt+0x1fe0>
   13848:	ldr	r2, [r6, #12]
   1384c:	b	13564 <__assert_fail@plt+0x1fc4>
   13850:	ldr	r0, [r2, #-8]
   13854:	cmp	r0, #0
   13858:	bne	13340 <__assert_fail@plt+0x1da0>
   1385c:	ldr	r0, [r2, #-4]
   13860:	cmp	r0, #0
   13864:	bne	13340 <__assert_fail@plt+0x1da0>
   13868:	ldm	r6, {r0, r2}
   1386c:	add	ip, r1, r1, lsl #1
   13870:	add	r0, r0, ip
   13874:	add	r1, r2, r1
   13878:	stm	r6, {r0, r1}
   1387c:	b	1335c <__assert_fail@plt+0x1dbc>

00013880 <argp_parse@@Base>:
   13880:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13884:	add	fp, sp, #32
   13888:	tst	r3, #1
   1388c:	sub	sp, sp, #220	; 0xdc
   13890:	mov	r7, r3
   13894:	mov	r8, r0
   13898:	str	r1, [fp, #-240]	; 0xffffff10
   1389c:	str	r2, [fp, #-236]	; 0xffffff14
   138a0:	bne	138cc <argp_parse@@Base+0x4c>
   138a4:	ldr	r3, [pc, #3488]	; 1464c <argp_parse@@Base+0xdcc>
   138a8:	ldr	r4, [pc, #3488]	; 14650 <argp_parse@@Base+0xdd0>
   138ac:	ldr	r2, [r3]
   138b0:	cmp	r2, #0
   138b4:	ldreq	r2, [fp, #-236]	; 0xffffff14
   138b8:	ldreq	r2, [r2]
   138bc:	streq	r2, [r3]
   138c0:	ldr	r3, [r4]
   138c4:	cmp	r3, #0
   138c8:	beq	13fac <argp_parse@@Base+0x72c>
   138cc:	ands	r3, r7, #16
   138d0:	beq	13e90 <argp_parse@@Base+0x610>
   138d4:	sub	r5, fp, #196	; 0xc4
   138d8:	mov	r0, r5
   138dc:	mov	r2, #36	; 0x24
   138e0:	mov	r1, #0
   138e4:	bl	1142c <memset@plt>
   138e8:	ands	r3, r7, #4
   138ec:	str	r3, [fp, #-244]	; 0xffffff0c
   138f0:	mov	r3, #0
   138f4:	moveq	r0, #1
   138f8:	movne	r0, #0
   138fc:	cmp	r8, r3
   13900:	str	r3, [fp, #-224]	; 0xffffff20
   13904:	str	r3, [fp, #-220]	; 0xffffff24
   13908:	str	r3, [fp, #-216]	; 0xffffff28
   1390c:	str	r0, [fp, #-228]	; 0xffffff1c
   13910:	beq	13984 <argp_parse@@Base+0x104>
   13914:	ldr	r4, [r8, #16]
   13918:	ldr	r3, [r8]
   1391c:	cmp	r3, #0
   13920:	movne	r2, #1
   13924:	strne	r2, [fp, #-220]	; 0xffffff24
   13928:	movne	r2, #0
   1392c:	bne	13938 <argp_parse@@Base+0xb8>
   13930:	b	14478 <argp_parse@@Base+0xbf8>
   13934:	add	r2, r2, #1
   13938:	add	r3, r3, #24
   1393c:	ldr	r1, [r3, #-20]	; 0xffffffec
   13940:	cmp	r1, #0
   13944:	bne	13934 <argp_parse@@Base+0xb4>
   13948:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1394c:	cmp	r1, #0
   13950:	bne	13934 <argp_parse@@Base+0xb4>
   13954:	ldr	r1, [r3, #-8]
   13958:	cmp	r1, #0
   1395c:	bne	13934 <argp_parse@@Base+0xb4>
   13960:	ldr	r1, [r3, #-4]
   13964:	cmp	r1, #0
   13968:	bne	13934 <argp_parse@@Base+0xb4>
   1396c:	add	r3, r2, r2, lsl #1
   13970:	add	r0, r3, r0
   13974:	str	r2, [fp, #-224]	; 0xffffff20
   13978:	str	r0, [fp, #-228]	; 0xffffff1c
   1397c:	mov	r6, #72	; 0x48
   13980:	b	14490 <argp_parse@@Base+0xc10>
   13984:	mov	sl, #36	; 0x24
   13988:	mov	r6, sl
   1398c:	mov	r4, r8
   13990:	mov	r3, #52	; 0x34
   13994:	str	r3, [fp, #-232]	; 0xffffff18
   13998:	add	r0, r3, r0
   1399c:	add	r0, r0, #1
   139a0:	bl	15e10 <argp_parse@@Base+0x2590>
   139a4:	cmp	r0, #0
   139a8:	mov	r9, r0
   139ac:	str	r0, [fp, #-40]	; 0xffffffd8
   139b0:	moveq	r5, #12
   139b4:	beq	13db0 <argp_parse@@Base+0x530>
   139b8:	mov	lr, r5
   139bc:	mov	r3, #1
   139c0:	str	r3, [fp, #-196]	; 0xffffff3c
   139c4:	str	r3, [fp, #-192]	; 0xffffff40
   139c8:	ldm	lr!, {r0, r1, r2, r3}
   139cc:	sub	ip, fp, #148	; 0x94
   139d0:	add	r5, r9, sl
   139d4:	ldr	sl, [fp, #-232]	; 0xffffff18
   139d8:	stmia	ip!, {r0, r1, r2, r3}
   139dc:	add	r6, r9, r6
   139e0:	ldm	lr!, {r0, r1, r2, r3}
   139e4:	add	sl, r9, sl
   139e8:	str	r6, [fp, #-104]	; 0xffffff98
   139ec:	str	r5, [fp, #-152]	; 0xffffff68
   139f0:	ldr	lr, [lr]
   139f4:	stmia	ip!, {r0, r1, r2, r3}
   139f8:	mov	r2, r4
   139fc:	mov	r0, r6
   13a00:	mov	r1, #0
   13a04:	str	r9, [fp, #-112]	; 0xffffff90
   13a08:	str	lr, [ip]
   13a0c:	str	sl, [fp, #-156]	; 0xffffff64
   13a10:	sub	r4, fp, #160	; 0xa0
   13a14:	bl	1142c <memset@plt>
   13a18:	tst	r7, #8
   13a1c:	str	r5, [fp, #-204]	; 0xffffff34
   13a20:	str	sl, [fp, #-208]	; 0xffffff30
   13a24:	str	r6, [fp, #-200]	; 0xffffff38
   13a28:	str	r4, [fp, #-212]	; 0xffffff2c
   13a2c:	beq	13f44 <argp_parse@@Base+0x6c4>
   13a30:	ldr	r2, [fp, #-232]	; 0xffffff18
   13a34:	add	sl, sl, #1
   13a38:	mov	r3, #45	; 0x2d
   13a3c:	str	sl, [fp, #-208]	; 0xffffff30
   13a40:	strb	r3, [r9, r2]
   13a44:	mov	r2, #0
   13a48:	strb	r2, [sl]
   13a4c:	ldr	r3, [fp, #-204]	; 0xffffff34
   13a50:	cmp	r8, r2
   13a54:	str	r2, [r3]
   13a58:	str	r8, [fp, #-160]	; 0xffffff60
   13a5c:	beq	13f74 <argp_parse@@Base+0x6f4>
   13a60:	sub	r1, fp, #212	; 0xd4
   13a64:	mov	r0, r8
   13a68:	str	r1, [sp]
   13a6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   13a70:	mov	r1, r2
   13a74:	bl	12d18 <__assert_fail@plt+0x1778>
   13a78:	ldr	r8, [fp, #-160]	; 0xffffff60
   13a7c:	ldr	r5, [fp, #-112]	; 0xffffff90
   13a80:	mov	r6, r0
   13a84:	str	r0, [fp, #-108]	; 0xffffff94
   13a88:	mov	r2, #56	; 0x38
   13a8c:	mov	r1, #0
   13a90:	sub	r0, fp, #96	; 0x60
   13a94:	bl	1142c <memset@plt>
   13a98:	ldr	r2, [pc, #2996]	; 14654 <argp_parse@@Base+0xdd4>
   13a9c:	ldr	r3, [pc, #2996]	; 14658 <argp_parse@@Base+0xdd8>
   13aa0:	ldr	r0, [fp, #-240]	; 0xffffff10
   13aa4:	ldr	r1, [r2]
   13aa8:	str	r0, [fp, #-92]	; 0xffffffa4
   13aac:	ldr	r2, [r3]
   13ab0:	ldr	r0, [fp, #-236]	; 0xffffff14
   13ab4:	mov	r3, #1
   13ab8:	cmp	r5, r6
   13abc:	str	r8, [fp, #-96]	; 0xffffffa0
   13ac0:	str	r0, [fp, #-88]	; 0xffffffa8
   13ac4:	str	r7, [fp, #-80]	; 0xffffffb0
   13ac8:	str	r4, [fp, #-44]	; 0xffffffd4
   13acc:	str	r1, [fp, #-52]	; 0xffffffcc
   13ad0:	str	r2, [fp, #-48]	; 0xffffffd0
   13ad4:	str	r3, [fp, #-100]	; 0xffffff9c
   13ad8:	bcc	13dbc <argp_parse@@Base+0x53c>
   13adc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13ae0:	tst	r3, #2
   13ae4:	bne	13f84 <argp_parse@@Base+0x704>
   13ae8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13aec:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13af0:	mov	r2, #1
   13af4:	str	r2, [fp, #-144]	; 0xffffff70
   13af8:	ldr	r2, [fp, #-236]	; 0xffffff14
   13afc:	cmp	r2, r3
   13b00:	beq	14524 <argp_parse@@Base+0xca4>
   13b04:	ldr	r3, [pc, #2884]	; 14650 <argp_parse@@Base+0xdd0>
   13b08:	ldr	r3, [r3]
   13b0c:	str	r3, [fp, #-56]	; 0xffffffc8
   13b10:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13b14:	ldr	r5, [fp, #-84]	; 0xffffffac
   13b18:	ldr	sl, [pc, #2876]	; 1465c <argp_parse@@Base+0xddc>
   13b1c:	mov	r0, r4
   13b20:	mov	r6, #0
   13b24:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13b28:	cmp	r3, #0
   13b2c:	beq	13fc0 <argp_parse@@Base+0x740>
   13b30:	cmp	r3, r5
   13b34:	strgt	r6, [fp, #-72]	; 0xffffffb8
   13b38:	bgt	13fc0 <argp_parse@@Base+0x740>
   13b3c:	cmp	r5, r0
   13b40:	blt	1435c <argp_parse@@Base+0xadc>
   13b44:	cmp	r5, r0
   13b48:	bne	14368 <argp_parse@@Base+0xae8>
   13b4c:	ldr	r6, [fp, #-112]	; 0xffffff90
   13b50:	ldr	ip, [fp, #-108]	; 0xffffff94
   13b54:	cmp	r6, ip
   13b58:	bcs	145ec <argp_parse@@Base+0xd6c>
   13b5c:	mov	r5, #0
   13b60:	add	r6, r6, #36	; 0x24
   13b64:	mov	r8, r5
   13b68:	ldr	r7, [pc, #2800]	; 14660 <argp_parse@@Base+0xde0>
   13b6c:	mov	r0, r5
   13b70:	b	13bb8 <argp_parse@@Base+0x338>
   13b74:	ldr	ip, [r6, #-4]
   13b78:	str	ip, [fp, #-60]	; 0xffffffc4
   13b7c:	ldr	ip, [r6, #-12]
   13b80:	str	ip, [fp, #-68]	; 0xffffffbc
   13b84:	ldr	ip, [r6, #-8]
   13b88:	str	r3, [fp, #-76]	; 0xffffffb4
   13b8c:	str	ip, [fp, #-64]	; 0xffffffc0
   13b90:	blx	r4
   13b94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13b98:	str	r3, [r6, #-4]
   13b9c:	ldr	ip, [fp, #-108]	; 0xffffff94
   13ba0:	cmp	ip, r6
   13ba4:	bls	14594 <argp_parse@@Base+0xd14>
   13ba8:	cmp	r0, #7
   13bac:	cmpne	r0, #0
   13bb0:	bne	14554 <argp_parse@@Base+0xcd4>
   13bb4:	add	r6, r6, #36	; 0x24
   13bb8:	ldr	r3, [r6, #-24]	; 0xffffffe8
   13bbc:	cmp	r3, #0
   13bc0:	bne	13ba0 <argp_parse@@Base+0x320>
   13bc4:	ldr	r4, [r6, #-36]	; 0xffffffdc
   13bc8:	sub	r2, fp, #96	; 0x60
   13bcc:	cmp	r4, #0
   13bd0:	mov	r1, r8
   13bd4:	mov	r0, r7
   13bd8:	bne	13b74 <argp_parse@@Base+0x2f4>
   13bdc:	cmp	ip, r6
   13be0:	mov	r0, #7
   13be4:	bhi	13bb4 <argp_parse@@Base+0x334>
   13be8:	ldr	r6, [fp, #-112]	; 0xffffff90
   13bec:	sub	r4, ip, #36	; 0x24
   13bf0:	cmp	r6, r4
   13bf4:	movls	r5, #7
   13bf8:	bhi	13c80 <argp_parse@@Base+0x400>
   13bfc:	cmp	r5, #7
   13c00:	cmpne	r5, #0
   13c04:	bne	14568 <argp_parse@@Base+0xce8>
   13c08:	sub	r4, r4, #36	; 0x24
   13c0c:	mov	r8, #0
   13c10:	ldr	r7, [pc, #2636]	; 14664 <argp_parse@@Base+0xde4>
   13c14:	b	13c60 <argp_parse@@Base+0x3e0>
   13c18:	ldr	ip, [r4, #68]	; 0x44
   13c1c:	ldr	lr, [r4, #48]	; 0x30
   13c20:	str	ip, [fp, #-60]	; 0xffffffc4
   13c24:	ldr	ip, [r4, #60]	; 0x3c
   13c28:	str	ip, [fp, #-68]	; 0xffffffbc
   13c2c:	ldr	ip, [r4, #64]	; 0x40
   13c30:	str	lr, [fp, #-76]	; 0xffffffb4
   13c34:	str	ip, [fp, #-64]	; 0xffffffc0
   13c38:	blx	r3
   13c3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13c40:	str	r3, [r4, #68]	; 0x44
   13c44:	ldr	r6, [fp, #-112]	; 0xffffff90
   13c48:	cmp	r6, r4
   13c4c:	bhi	145e4 <argp_parse@@Base+0xd64>
   13c50:	cmp	r0, #7
   13c54:	cmpne	r0, #0
   13c58:	bne	14578 <argp_parse@@Base+0xcf8>
   13c5c:	sub	r4, r4, #36	; 0x24
   13c60:	ldr	r3, [r4, #36]	; 0x24
   13c64:	sub	r2, fp, #96	; 0x60
   13c68:	cmp	r3, #0
   13c6c:	mov	r1, r8
   13c70:	mov	r0, r7
   13c74:	bne	13c18 <argp_parse@@Base+0x398>
   13c78:	cmp	r6, r4
   13c7c:	bls	13c5c <argp_parse@@Base+0x3dc>
   13c80:	ldr	r3, [fp, #4]
   13c84:	cmp	r3, #0
   13c88:	beq	13ca4 <argp_parse@@Base+0x424>
   13c8c:	mov	r5, #0
   13c90:	ldr	r2, [fp, #4]
   13c94:	ldr	r3, [fp, #-84]	; 0xffffffac
   13c98:	str	r3, [r2]
   13c9c:	cmp	r5, #0
   13ca0:	bne	14588 <argp_parse@@Base+0xd08>
   13ca4:	ldr	ip, [fp, #-108]	; 0xffffff94
   13ca8:	b	14380 <argp_parse@@Base+0xb00>
   13cac:	ldr	r6, [fp, #-112]	; 0xffffff90
   13cb0:	mov	r5, r0
   13cb4:	ldr	ip, [fp, #-108]	; 0xffffff94
   13cb8:	cmp	r6, ip
   13cbc:	mov	r4, ip
   13cc0:	subcs	r4, ip, #36	; 0x24
   13cc4:	bcs	13d34 <argp_parse@@Base+0x4b4>
   13cc8:	ldr	r8, [pc, #2456]	; 14668 <argp_parse@@Base+0xde8>
   13ccc:	add	r6, r6, #36	; 0x24
   13cd0:	mov	r9, #0
   13cd4:	ldr	r3, [r6, #-36]	; 0xffffffdc
   13cd8:	sub	r2, fp, #96	; 0x60
   13cdc:	cmp	r3, #0
   13ce0:	mov	r1, r9
   13ce4:	mov	r0, r8
   13ce8:	mov	r7, r6
   13cec:	beq	13d20 <argp_parse@@Base+0x4a0>
   13cf0:	ldr	ip, [r6, #-4]
   13cf4:	ldr	lr, [r6, #-24]	; 0xffffffe8
   13cf8:	str	ip, [fp, #-60]	; 0xffffffc4
   13cfc:	ldr	ip, [r6, #-12]
   13d00:	str	ip, [fp, #-68]	; 0xffffffbc
   13d04:	ldr	ip, [r6, #-8]
   13d08:	str	lr, [fp, #-76]	; 0xffffffb4
   13d0c:	str	ip, [fp, #-64]	; 0xffffffc0
   13d10:	blx	r3
   13d14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13d18:	str	r3, [r6, #-4]
   13d1c:	ldr	r4, [fp, #-108]	; 0xffffff94
   13d20:	cmp	r7, r4
   13d24:	add	r6, r6, #36	; 0x24
   13d28:	bcc	13cd4 <argp_parse@@Base+0x454>
   13d2c:	ldr	r6, [fp, #-112]	; 0xffffff90
   13d30:	sub	r4, r4, #36	; 0x24
   13d34:	cmp	r6, r4
   13d38:	bhi	13da0 <argp_parse@@Base+0x520>
   13d3c:	ldr	r8, [pc, #2344]	; 1466c <argp_parse@@Base+0xdec>
   13d40:	sub	r4, r4, #36	; 0x24
   13d44:	mov	r9, #0
   13d48:	ldr	r3, [r4, #36]	; 0x24
   13d4c:	sub	r2, fp, #96	; 0x60
   13d50:	cmp	r3, #0
   13d54:	mov	r1, r9
   13d58:	mov	r0, r8
   13d5c:	mov	r7, r4
   13d60:	beq	13d94 <argp_parse@@Base+0x514>
   13d64:	ldr	ip, [r4, #68]	; 0x44
   13d68:	ldr	lr, [r4, #48]	; 0x30
   13d6c:	str	ip, [fp, #-60]	; 0xffffffc4
   13d70:	ldr	ip, [r4, #60]	; 0x3c
   13d74:	str	ip, [fp, #-68]	; 0xffffffbc
   13d78:	ldr	ip, [r4, #64]	; 0x40
   13d7c:	str	lr, [fp, #-76]	; 0xffffffb4
   13d80:	str	ip, [fp, #-64]	; 0xffffffc0
   13d84:	blx	r3
   13d88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13d8c:	str	r3, [r4, #68]	; 0x44
   13d90:	ldr	r6, [fp, #-112]	; 0xffffff90
   13d94:	cmp	r6, r7
   13d98:	sub	r4, r4, #36	; 0x24
   13d9c:	bls	13d48 <argp_parse@@Base+0x4c8>
   13da0:	cmp	r5, #7
   13da4:	moveq	r5, #22
   13da8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13dac:	bl	147fc <argp_parse@@Base+0xf7c>
   13db0:	mov	r0, r5
   13db4:	sub	sp, fp, #32
   13db8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13dbc:	ldr	r3, [fp, #8]
   13dc0:	add	r4, r5, #36	; 0x24
   13dc4:	str	r3, [r5, #24]
   13dc8:	mov	r7, #0
   13dcc:	ldr	r6, [pc, #2204]	; 14670 <argp_parse@@Base+0xdf0>
   13dd0:	b	13e28 <argp_parse@@Base+0x5a8>
   13dd4:	ldr	r2, [r4, #-4]
   13dd8:	ldr	r0, [r4, #-24]	; 0xffffffe8
   13ddc:	str	r2, [fp, #-60]	; 0xffffffc4
   13de0:	ldr	r1, [r4, #-12]
   13de4:	sub	r2, fp, #96	; 0x60
   13de8:	str	r1, [fp, #-68]	; 0xffffffbc
   13dec:	ldr	ip, [r4, #-8]
   13df0:	mov	r1, r7
   13df4:	str	r0, [fp, #-76]	; 0xffffffb4
   13df8:	str	ip, [fp, #-64]	; 0xffffffc0
   13dfc:	mov	r0, r6
   13e00:	blx	r3
   13e04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13e08:	str	r3, [r4, #-4]
   13e0c:	ldr	r3, [fp, #-108]	; 0xffffff94
   13e10:	cmp	r3, r4
   13e14:	bls	14620 <argp_parse@@Base+0xda0>
   13e18:	cmp	r0, #7
   13e1c:	cmpne	r0, #0
   13e20:	bne	13f64 <argp_parse@@Base+0x6e4>
   13e24:	add	r4, r4, #36	; 0x24
   13e28:	ldr	r3, [r4, #-20]	; 0xffffffec
   13e2c:	cmp	r3, #0
   13e30:	ldrne	r3, [r3, #28]
   13e34:	ldrne	r2, [r4, #-16]
   13e38:	ldrne	r3, [r3, r2, lsl #2]
   13e3c:	strne	r3, [r4, #-12]
   13e40:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13e44:	cmp	r3, #0
   13e48:	bne	13dd4 <argp_parse@@Base+0x554>
   13e4c:	ldr	r3, [r4, #-32]	; 0xffffffe0
   13e50:	ldr	r3, [r3, #16]
   13e54:	cmp	r3, #0
   13e58:	beq	13e80 <argp_parse@@Base+0x600>
   13e5c:	ldr	r3, [r3]
   13e60:	cmp	r3, #0
   13e64:	beq	13e80 <argp_parse@@Base+0x600>
   13e68:	ldr	r3, [r4, #-8]
   13e6c:	ldr	r2, [r4, #-12]
   13e70:	str	r2, [r3]
   13e74:	ldr	r3, [r4, #-36]	; 0xffffffdc
   13e78:	cmp	r3, #0
   13e7c:	bne	13dd4 <argp_parse@@Base+0x554>
   13e80:	ldr	r3, [fp, #-108]	; 0xffffff94
   13e84:	cmp	r3, r4
   13e88:	bhi	13e24 <argp_parse@@Base+0x5a4>
   13e8c:	b	13adc <argp_parse@@Base+0x25c>
   13e90:	sub	sp, sp, #72	; 0x48
   13e94:	add	r4, sp, #8
   13e98:	sub	sp, sp, #40	; 0x28
   13e9c:	add	r6, sp, #8
   13ea0:	mov	r1, r3
   13ea4:	str	r3, [r6]
   13ea8:	str	r3, [r6, #4]
   13eac:	str	r3, [r6, #8]
   13eb0:	str	r3, [r6, #12]
   13eb4:	str	r3, [r6, #20]
   13eb8:	str	r3, [r6, #24]
   13ebc:	mov	r2, #64	; 0x40
   13ec0:	mov	r0, r4
   13ec4:	str	r4, [r6, #16]
   13ec8:	bl	1142c <memset@plt>
   13ecc:	ldr	r2, [pc, #1952]	; 14674 <argp_parse@@Base+0xdf4>
   13ed0:	cmp	r8, #0
   13ed4:	addne	r3, r4, #16
   13ed8:	ldr	r2, [r2]
   13edc:	moveq	r3, r4
   13ee0:	ldr	r1, [pc, #1936]	; 14678 <argp_parse@@Base+0xdf8>
   13ee4:	strne	r8, [r4]
   13ee8:	cmp	r2, #0
   13eec:	str	r1, [r3]
   13ef0:	beq	1453c <argp_parse@@Base+0xcbc>
   13ef4:	ldr	r2, [pc, #1920]	; 1467c <argp_parse@@Base+0xdfc>
   13ef8:	add	ip, r3, #32
   13efc:	str	r2, [r3, #16]
   13f00:	mov	r9, #0
   13f04:	sub	r5, fp, #196	; 0xc4
   13f08:	mov	r1, r9
   13f0c:	mov	r0, r5
   13f10:	mov	r2, #36	; 0x24
   13f14:	str	r9, [ip]
   13f18:	bl	1142c <memset@plt>
   13f1c:	ands	r3, r7, #4
   13f20:	moveq	r0, #1
   13f24:	movne	r0, r9
   13f28:	str	r3, [fp, #-244]	; 0xffffff0c
   13f2c:	mov	r8, r6
   13f30:	str	r9, [fp, #-224]	; 0xffffff20
   13f34:	str	r9, [fp, #-220]	; 0xffffff24
   13f38:	str	r9, [fp, #-216]	; 0xffffff28
   13f3c:	str	r0, [fp, #-228]	; 0xffffff1c
   13f40:	b	13918 <argp_parse@@Base+0x98>
   13f44:	ldr	r3, [fp, #-244]	; 0xffffff0c
   13f48:	cmp	r3, #0
   13f4c:	addne	r3, sl, #1
   13f50:	movne	r2, #43	; 0x2b
   13f54:	strbne	r2, [sl]
   13f58:	strne	r3, [fp, #-208]	; 0xffffff30
   13f5c:	movne	sl, r3
   13f60:	b	13a44 <argp_parse@@Base+0x1c4>
   13f64:	mov	r5, r0
   13f68:	mov	r0, r5
   13f6c:	sub	sp, fp, #32
   13f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13f74:	ldr	r5, [fp, #-112]	; 0xffffff90
   13f78:	mov	r6, r5
   13f7c:	str	r5, [fp, #-108]	; 0xffffff94
   13f80:	b	13a88 <argp_parse@@Base+0x208>
   13f84:	tst	r3, #1
   13f88:	mov	r3, #0
   13f8c:	str	r3, [fp, #-144]	; 0xffffff70
   13f90:	ldr	r4, [fp, #-92]	; 0xffffffa4
   13f94:	ldr	r3, [fp, #-88]	; 0xffffffa8
   13f98:	subne	r3, r3, #4
   13f9c:	addne	r4, r4, #1
   13fa0:	strne	r3, [fp, #-88]	; 0xffffffa8
   13fa4:	strne	r4, [fp, #-92]	; 0xffffffa4
   13fa8:	b	13af8 <argp_parse@@Base+0x278>
   13fac:	ldr	r3, [fp, #-236]	; 0xffffff14
   13fb0:	ldr	r0, [r3]
   13fb4:	bl	14750 <argp_parse@@Base+0xed0>
   13fb8:	str	r0, [r4]
   13fbc:	b	138cc <argp_parse@@Base+0x4c>
   13fc0:	cmp	r2, #0
   13fc4:	beq	13b3c <argp_parse@@Base+0x2bc>
   13fc8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13fcc:	str	r5, [fp, #-148]	; 0xffffff6c
   13fd0:	ands	ip, r3, #64	; 0x40
   13fd4:	mvn	r3, #0
   13fd8:	str	r3, [fp, #-140]	; 0xffffff74
   13fdc:	ldr	r2, [fp, #-156]	; 0xffffff64
   13fe0:	ldr	r3, [fp, #-152]	; 0xffffff68
   13fe4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13fe8:	beq	14308 <argp_parse@@Base+0xa88>
   13fec:	sub	ip, fp, #148	; 0x94
   13ff0:	stm	sp, {r6, ip}
   13ff4:	bl	148d0 <argp_parse@@Base+0x1050>
   13ff8:	ldr	r5, [fp, #-148]	; 0xffffff6c
   13ffc:	str	r5, [fp, #-84]	; 0xffffffac
   14000:	mov	r7, r0
   14004:	cmn	r7, #1
   14008:	beq	14328 <argp_parse@@Base+0xaa8>
   1400c:	cmp	r7, #63	; 0x3f
   14010:	beq	1442c <argp_parse@@Base+0xbac>
   14014:	cmp	r7, #1
   14018:	beq	14170 <argp_parse@@Base+0x8f0>
   1401c:	asrs	r8, r7, #24
   14020:	bne	140cc <argp_parse@@Base+0x84c>
   14024:	mov	r1, r7
   14028:	ldr	r0, [fp, #-156]	; 0xffffff64
   1402c:	bl	113f0 <strchr@plt>
   14030:	cmp	r0, #0
   14034:	beq	1413c <argp_parse@@Base+0x8bc>
   14038:	ldr	r4, [fp, #-112]	; 0xffffff90
   1403c:	ldr	r2, [fp, #-108]	; 0xffffff94
   14040:	cmp	r4, r2
   14044:	bcc	14058 <argp_parse@@Base+0x7d8>
   14048:	b	1413c <argp_parse@@Base+0x8bc>
   1404c:	add	r4, r4, #36	; 0x24
   14050:	cmp	r4, r2
   14054:	bcs	1413c <argp_parse@@Base+0x8bc>
   14058:	ldr	r3, [r4, #8]
   1405c:	cmp	r0, r3
   14060:	bcs	1404c <argp_parse@@Base+0x7cc>
   14064:	ldr	r3, [r4]
   14068:	cmp	r3, #0
   1406c:	beq	1413c <argp_parse@@Base+0x8bc>
   14070:	ldr	r2, [r4, #32]
   14074:	ldr	r0, [r4, #28]
   14078:	ldr	ip, [r4, #24]
   1407c:	str	r2, [fp, #-60]	; 0xffffffc4
   14080:	ldr	r2, [r4, #12]
   14084:	ldr	r1, [fp, #-136]	; 0xffffff78
   14088:	str	r0, [fp, #-64]	; 0xffffffc0
   1408c:	str	r2, [fp, #-76]	; 0xffffffb4
   14090:	str	ip, [fp, #-68]	; 0xffffffbc
   14094:	sub	r2, fp, #96	; 0x60
   14098:	mov	r0, r7
   1409c:	blx	r3
   140a0:	mov	r8, r6
   140a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   140a8:	str	r3, [r4, #32]
   140ac:	cmp	r0, #7
   140b0:	beq	14134 <argp_parse@@Base+0x8b4>
   140b4:	cmp	r0, #0
   140b8:	bne	13cac <argp_parse@@Base+0x42c>
   140bc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   140c0:	ldr	r5, [fp, #-84]	; 0xffffffac
   140c4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   140c8:	b	13b24 <argp_parse@@Base+0x2a4>
   140cc:	add	r3, r8, r8, lsl #3
   140d0:	ldr	r2, [fp, #-112]	; 0xffffff90
   140d4:	lsl	r3, r3, #2
   140d8:	sub	r3, r3, #36	; 0x24
   140dc:	add	r4, r2, r3
   140e0:	ldr	r5, [r2, r3]
   140e4:	ands	r3, r7, #8388608	; 0x800000
   140e8:	movne	r3, #-16777216	; 0xff000000
   140ec:	cmp	r5, #0
   140f0:	beq	142c0 <argp_parse@@Base+0xa40>
   140f4:	ldr	r0, [r4, #32]
   140f8:	ldr	r2, [r4, #24]
   140fc:	str	r0, [fp, #-60]	; 0xffffffc4
   14100:	ldr	r0, [r4, #28]
   14104:	str	r2, [fp, #-68]	; 0xffffffbc
   14108:	ldr	r2, [r4, #12]
   1410c:	str	r0, [fp, #-64]	; 0xffffffc0
   14110:	bic	r0, r7, #-16777216	; 0xff000000
   14114:	str	r2, [fp, #-76]	; 0xffffffb4
   14118:	orr	r0, r0, r3
   1411c:	ldr	r1, [fp, #-136]	; 0xffffff78
   14120:	sub	r2, fp, #96	; 0x60
   14124:	blx	r5
   14128:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1412c:	str	r3, [r4, #32]
   14130:	b	140ac <argp_parse@@Base+0x82c>
   14134:	cmp	r8, #0
   14138:	bne	142c0 <argp_parse@@Base+0xa40>
   1413c:	mov	r2, r7
   14140:	ldr	r3, [pc, #1336]	; 14680 <argp_parse@@Base+0xe00>
   14144:	ldr	r1, [pc, #1336]	; 14684 <argp_parse@@Base+0xe04>
   14148:	sub	r0, fp, #96	; 0x60
   1414c:	bl	1a1dc <argp_error@@Base>
   14150:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14154:	mov	r2, #260	; 0x104
   14158:	sub	r0, fp, #96	; 0x60
   1415c:	bl	1a12c <argp_state_help@@Base>
   14160:	mov	r5, #7
   14164:	ldr	r6, [fp, #-112]	; 0xffffff90
   14168:	ldr	ip, [fp, #-108]	; 0xffffff94
   1416c:	b	13cb8 <argp_parse@@Base+0x438>
   14170:	ldr	r7, [fp, #-136]	; 0xffffff78
   14174:	ldr	r3, [fp, #-112]	; 0xffffff90
   14178:	ldr	ip, [fp, #-108]	; 0xffffff94
   1417c:	sub	r8, r5, #1
   14180:	cmp	r3, ip
   14184:	str	r8, [fp, #-84]	; 0xffffffac
   14188:	bcs	142b4 <argp_parse@@Base+0xa34>
   1418c:	mov	lr, r8
   14190:	add	r4, r3, #36	; 0x24
   14194:	ldr	r3, [r4, #-36]	; 0xffffffdc
   14198:	add	r5, lr, #1
   1419c:	cmp	r3, #0
   141a0:	str	r5, [fp, #-84]	; 0xffffffac
   141a4:	sub	r2, fp, #96	; 0x60
   141a8:	mov	r1, r7
   141ac:	mov	r0, r6
   141b0:	sub	r5, r4, #36	; 0x24
   141b4:	mov	r9, r4
   141b8:	streq	lr, [fp, #-84]	; 0xffffffac
   141bc:	beq	142a8 <argp_parse@@Base+0xa28>
   141c0:	ldr	ip, [r4, #-4]
   141c4:	ldr	lr, [r4, #-24]	; 0xffffffe8
   141c8:	str	ip, [fp, #-60]	; 0xffffffc4
   141cc:	ldr	ip, [r4, #-12]
   141d0:	str	ip, [fp, #-68]	; 0xffffffbc
   141d4:	ldr	ip, [r4, #-8]
   141d8:	str	lr, [fp, #-76]	; 0xffffffb4
   141dc:	str	ip, [fp, #-64]	; 0xffffffc0
   141e0:	blx	r3
   141e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   141e8:	str	r3, [r4, #-4]
   141ec:	cmp	r0, #7
   141f0:	beq	1422c <argp_parse@@Base+0x9ac>
   141f4:	cmp	r0, #0
   141f8:	bne	13cac <argp_parse@@Base+0x42c>
   141fc:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14200:	ldr	r5, [fp, #-84]	; 0xffffffac
   14204:	cmp	r8, r5
   14208:	sublt	r8, r5, r8
   1420c:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   14210:	movge	r3, #1
   14214:	addlt	r8, r3, r8
   14218:	strlt	r8, [r4, #-24]	; 0xffffffe8
   1421c:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   14220:	strge	r3, [fp, #-100]	; 0xffffff9c
   14224:	movge	r2, r3
   14228:	b	13b24 <argp_parse@@Base+0x2a4>
   1422c:	ldr	lr, [fp, #-84]	; 0xffffffac
   14230:	ldr	r3, [r4, #-36]	; 0xffffffdc
   14234:	sub	lr, lr, #1
   14238:	cmp	r3, #0
   1423c:	str	lr, [fp, #-84]	; 0xffffffac
   14240:	beq	142a4 <argp_parse@@Base+0xa24>
   14244:	add	r0, r5, #24
   14248:	ldr	r2, [r5, #12]
   1424c:	ldm	r0, {r0, r1, ip}
   14250:	str	r2, [fp, #-76]	; 0xffffffb4
   14254:	sub	r2, fp, #96	; 0x60
   14258:	str	ip, [fp, #-60]	; 0xffffffc4
   1425c:	str	r0, [fp, #-68]	; 0xffffffbc
   14260:	str	r1, [fp, #-64]	; 0xffffffc0
   14264:	mov	r0, sl
   14268:	mov	r1, r6
   1426c:	blx	r3
   14270:	ldr	ip, [fp, #-108]	; 0xffffff94
   14274:	ldr	r2, [fp, #-60]	; 0xffffffc4
   14278:	cmp	r4, ip
   1427c:	movcs	r1, #0
   14280:	movcc	r1, #1
   14284:	mov	r3, r4
   14288:	str	r2, [r5, #32]
   1428c:	cmp	r0, #7
   14290:	movne	r1, #0
   14294:	cmp	r1, #0
   14298:	beq	14608 <argp_parse@@Base+0xd88>
   1429c:	ldr	lr, [fp, #-84]	; 0xffffffac
   142a0:	b	14190 <argp_parse@@Base+0x910>
   142a4:	ldr	ip, [fp, #-108]	; 0xffffff94
   142a8:	cmp	r9, ip
   142ac:	add	r4, r4, #36	; 0x24
   142b0:	bcc	14194 <argp_parse@@Base+0x914>
   142b4:	ldr	r5, [fp, #-84]	; 0xffffffac
   142b8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   142bc:	b	13b44 <argp_parse@@Base+0x2c4>
   142c0:	ldr	r3, [fp, #-152]	; 0xffffff68
   142c4:	ldr	r2, [r3, #12]
   142c8:	cmp	r7, r2
   142cc:	bne	142e4 <argp_parse@@Base+0xa64>
   142d0:	b	14418 <argp_parse@@Base+0xb98>
   142d4:	add	r3, r3, #16
   142d8:	ldr	r2, [r3, #12]
   142dc:	cmp	r7, r2
   142e0:	beq	14418 <argp_parse@@Base+0xb98>
   142e4:	ldr	r2, [r3]
   142e8:	cmp	r2, #0
   142ec:	bne	142d4 <argp_parse@@Base+0xa54>
   142f0:	ldr	r2, [pc, #912]	; 14688 <argp_parse@@Base+0xe08>
   142f4:	ldr	r3, [pc, #900]	; 14680 <argp_parse@@Base+0xe00>
   142f8:	ldr	r1, [pc, #908]	; 1468c <argp_parse@@Base+0xe0c>
   142fc:	sub	r0, fp, #96	; 0x60
   14300:	bl	1a1dc <argp_error@@Base>
   14304:	b	14150 <argp_parse@@Base+0x8d0>
   14308:	sub	lr, fp, #148	; 0x94
   1430c:	stm	sp, {ip, lr}
   14310:	bl	1487c <argp_parse@@Base+0xffc>
   14314:	ldr	r5, [fp, #-148]	; 0xffffff6c
   14318:	str	r5, [fp, #-84]	; 0xffffffac
   1431c:	mov	r7, r0
   14320:	cmn	r7, #1
   14324:	bne	1400c <argp_parse@@Base+0x78c>
   14328:	cmp	r5, #1
   1432c:	str	r6, [fp, #-100]	; 0xffffff9c
   14330:	ble	14350 <argp_parse@@Base+0xad0>
   14334:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14338:	sub	r3, r5, #-1073741823	; 0xc0000001
   1433c:	ldr	r1, [pc, #844]	; 14690 <argp_parse@@Base+0xe10>
   14340:	ldr	r0, [r2, r3, lsl #2]
   14344:	bl	11240 <strcmp@plt>
   14348:	cmp	r0, #0
   1434c:	streq	r5, [fp, #-72]	; 0xffffffb8
   14350:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14354:	cmp	r5, r0
   14358:	bge	13b44 <argp_parse@@Base+0x2c4>
   1435c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14360:	tst	r3, #4
   14364:	beq	1443c <argp_parse@@Base+0xbbc>
   14368:	ldr	r3, [fp, #4]
   1436c:	cmp	r3, #0
   14370:	beq	145b4 <argp_parse@@Base+0xd34>
   14374:	ldr	r6, [fp, #-112]	; 0xffffff90
   14378:	ldr	ip, [fp, #-108]	; 0xffffff94
   1437c:	str	r5, [r3]
   14380:	sub	r3, ip, #36	; 0x24
   14384:	cmp	r6, r3
   14388:	bhi	14470 <argp_parse@@Base+0xbf0>
   1438c:	ldr	r7, [pc, #768]	; 14694 <argp_parse@@Base+0xe14>
   14390:	sub	r4, ip, #72	; 0x48
   14394:	mov	r8, #0
   14398:	ldr	r3, [r4, #36]	; 0x24
   1439c:	sub	r2, fp, #96	; 0x60
   143a0:	cmp	r3, #0
   143a4:	mov	r1, r8
   143a8:	mov	r0, r7
   143ac:	beq	14408 <argp_parse@@Base+0xb88>
   143b0:	ldr	ip, [r4, #68]	; 0x44
   143b4:	ldr	lr, [r4, #48]	; 0x30
   143b8:	str	ip, [fp, #-60]	; 0xffffffc4
   143bc:	ldr	ip, [r4, #60]	; 0x3c
   143c0:	str	ip, [fp, #-68]	; 0xffffffbc
   143c4:	ldr	ip, [r4, #64]	; 0x40
   143c8:	str	lr, [fp, #-76]	; 0xffffffb4
   143cc:	str	ip, [fp, #-64]	; 0xffffffc0
   143d0:	blx	r3
   143d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   143d8:	str	r3, [r4, #68]	; 0x44
   143dc:	ldr	r6, [fp, #-112]	; 0xffffff90
   143e0:	cmp	r6, r4
   143e4:	bhi	14450 <argp_parse@@Base+0xbd0>
   143e8:	cmp	r0, #7
   143ec:	cmpne	r0, #0
   143f0:	sub	r4, r4, #36	; 0x24
   143f4:	beq	14398 <argp_parse@@Base+0xb18>
   143f8:	ldr	r4, [fp, #-108]	; 0xffffff94
   143fc:	mov	r5, r0
   14400:	sub	r4, r4, #36	; 0x24
   14404:	b	13d34 <argp_parse@@Base+0x4b4>
   14408:	cmp	r6, r4
   1440c:	bhi	1445c <argp_parse@@Base+0xbdc>
   14410:	sub	r4, r4, #36	; 0x24
   14414:	b	14398 <argp_parse@@Base+0xb18>
   14418:	ldr	r2, [r3]
   1441c:	ldr	r3, [pc, #612]	; 14688 <argp_parse@@Base+0xe08>
   14420:	cmp	r2, #0
   14424:	moveq	r2, r3
   14428:	b	142f4 <argp_parse@@Base+0xa74>
   1442c:	ldr	r3, [fp, #-140]	; 0xffffff74
   14430:	cmn	r3, #1
   14434:	bne	14150 <argp_parse@@Base+0x8d0>
   14438:	b	14024 <argp_parse@@Base+0x7a4>
   1443c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   14440:	ldr	r7, [r3, r5, lsl #2]
   14444:	add	r5, r5, #1
   14448:	str	r7, [fp, #-136]	; 0xffffff78
   1444c:	b	14174 <argp_parse@@Base+0x8f4>
   14450:	cmp	r0, #7
   14454:	mov	r5, r0
   14458:	bne	14518 <argp_parse@@Base+0xc98>
   1445c:	ldr	r4, [fp, #-108]	; 0xffffff94
   14460:	sub	r4, r4, #36	; 0x24
   14464:	cmp	r6, r4
   14468:	movls	r5, #0
   1446c:	bls	13d3c <argp_parse@@Base+0x4bc>
   14470:	mov	r5, #0
   14474:	b	13da8 <argp_parse@@Base+0x528>
   14478:	ldr	r3, [r8, #4]
   1447c:	cmp	r3, #0
   14480:	moveq	r6, #36	; 0x24
   14484:	movne	r6, #72	; 0x48
   14488:	movne	r3, #1
   1448c:	strne	r3, [fp, #-220]	; 0xffffff24
   14490:	cmp	r4, #0
   14494:	beq	144f4 <argp_parse@@Base+0xc74>
   14498:	ldr	r0, [r4]
   1449c:	cmp	r0, #0
   144a0:	beq	144f4 <argp_parse@@Base+0xc74>
   144a4:	sub	r1, fp, #228	; 0xe4
   144a8:	bl	131ac <__assert_fail@plt+0x1c0c>
   144ac:	ldr	r3, [fp, #-216]	; 0xffffff28
   144b0:	ldr	r0, [r4, #16]!
   144b4:	add	r3, r3, #1
   144b8:	cmp	r0, #0
   144bc:	str	r3, [fp, #-216]	; 0xffffff28
   144c0:	bne	144a4 <argp_parse@@Base+0xc24>
   144c4:	ldr	r6, [fp, #-220]	; 0xffffff24
   144c8:	ldr	r2, [fp, #-224]	; 0xffffff20
   144cc:	add	r6, r6, #1
   144d0:	lsl	r4, r3, #2
   144d4:	add	r6, r6, r6, lsl #3
   144d8:	add	r3, r2, #1
   144dc:	lsl	r6, r6, #2
   144e0:	add	sl, r4, r6
   144e4:	add	r3, sl, r3, lsl #4
   144e8:	str	r3, [fp, #-232]	; 0xffffff18
   144ec:	ldr	r0, [fp, #-228]	; 0xffffff1c
   144f0:	b	13998 <argp_parse@@Base+0x118>
   144f4:	ldr	r4, [fp, #-216]	; 0xffffff28
   144f8:	ldr	r3, [fp, #-224]	; 0xffffff20
   144fc:	ldr	r0, [fp, #-228]	; 0xffffff1c
   14500:	lsl	r4, r4, #2
   14504:	add	r3, r3, #1
   14508:	add	sl, r4, r6
   1450c:	add	r3, sl, r3, lsl #4
   14510:	str	r3, [fp, #-232]	; 0xffffff18
   14514:	b	13998 <argp_parse@@Base+0x118>
   14518:	ldr	r4, [fp, #-108]	; 0xffffff94
   1451c:	sub	r4, r4, #36	; 0x24
   14520:	b	13d34 <argp_parse@@Base+0x4b4>
   14524:	ldr	r0, [r2]
   14528:	cmp	r0, #0
   1452c:	beq	13b04 <argp_parse@@Base+0x284>
   14530:	bl	14750 <argp_parse@@Base+0xed0>
   14534:	str	r0, [fp, #-56]	; 0xffffffc8
   14538:	b	13b10 <argp_parse@@Base+0x290>
   1453c:	ldr	r2, [pc, #340]	; 14698 <argp_parse@@Base+0xe18>
   14540:	ldr	r2, [r2]
   14544:	cmp	r2, #0
   14548:	addeq	ip, r3, #16
   1454c:	bne	13ef4 <argp_parse@@Base+0x674>
   14550:	b	13f00 <argp_parse@@Base+0x680>
   14554:	ldr	r6, [fp, #-112]	; 0xffffff90
   14558:	sub	ip, ip, #36	; 0x24
   1455c:	cmp	r6, ip
   14560:	mov	r5, r0
   14564:	bls	1457c <argp_parse@@Base+0xcfc>
   14568:	ldr	r3, [fp, #4]
   1456c:	cmp	r3, #0
   14570:	bne	13c90 <argp_parse@@Base+0x410>
   14574:	b	13c9c <argp_parse@@Base+0x41c>
   14578:	mov	r5, r0
   1457c:	ldr	r3, [fp, #4]
   14580:	cmp	r3, #0
   14584:	bne	13c90 <argp_parse@@Base+0x410>
   14588:	cmp	r5, #7
   1458c:	bne	13cb4 <argp_parse@@Base+0x434>
   14590:	b	14150 <argp_parse@@Base+0x8d0>
   14594:	ldr	r6, [fp, #-112]	; 0xffffff90
   14598:	sub	r4, ip, #36	; 0x24
   1459c:	cmp	r4, r6
   145a0:	mov	r5, r0
   145a4:	bcs	13bfc <argp_parse@@Base+0x37c>
   145a8:	cmp	r5, #7
   145ac:	beq	13c80 <argp_parse@@Base+0x400>
   145b0:	b	14568 <argp_parse@@Base+0xce8>
   145b4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   145b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   145bc:	tst	r3, #2
   145c0:	bne	14154 <argp_parse@@Base+0x8d4>
   145c4:	cmp	r1, #0
   145c8:	beq	14154 <argp_parse@@Base+0x8d4>
   145cc:	mov	r0, r1
   145d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   145d4:	ldr	r1, [pc, #192]	; 1469c <argp_parse@@Base+0xe1c>
   145d8:	bl	113fc <fprintf@plt>
   145dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   145e0:	b	14154 <argp_parse@@Base+0x8d4>
   145e4:	mov	r5, r0
   145e8:	b	145a8 <argp_parse@@Base+0xd28>
   145ec:	sub	r4, ip, #36	; 0x24
   145f0:	cmp	r6, r4
   145f4:	bls	13c08 <argp_parse@@Base+0x388>
   145f8:	ldr	r3, [fp, #4]
   145fc:	cmp	r3, #0
   14600:	bne	13c8c <argp_parse@@Base+0x40c>
   14604:	b	14380 <argp_parse@@Base+0xb00>
   14608:	cmp	r0, #0
   1460c:	bne	14638 <argp_parse@@Base+0xdb8>
   14610:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14614:	mov	r5, r0
   14618:	str	r0, [fp, #-84]	; 0xffffffac
   1461c:	b	14204 <argp_parse@@Base+0x984>
   14620:	cmp	r0, #7
   14624:	mov	r5, r0
   14628:	beq	13adc <argp_parse@@Base+0x25c>
   1462c:	cmp	r0, #0
   14630:	bne	13db0 <argp_parse@@Base+0x530>
   14634:	b	13adc <argp_parse@@Base+0x25c>
   14638:	cmp	r0, #7
   1463c:	mov	r5, r0
   14640:	beq	142b4 <argp_parse@@Base+0xa34>
   14644:	ldr	r6, [fp, #-112]	; 0xffffff90
   14648:	b	13cb8 <argp_parse@@Base+0x438>
   1464c:	andeq	lr, r2, ip, ror #5
   14650:	andeq	lr, r2, r8, ror #5
   14654:	strdeq	lr, [r2], -r0
   14658:	strdeq	lr, [r2], -r4
   1465c:	tsteq	r0, r6
   14660:	tsteq	r0, r2
   14664:	tsteq	r0, r1
   14668:	tsteq	r0, r5
   1466c:	tsteq	r0, r7
   14670:	tsteq	r0, r3
   14674:	andeq	pc, r2, ip, asr #4
   14678:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   1467c:	strdeq	ip, [r1], -r8
   14680:	andeq	ip, r1, r4, lsl sp
   14684:	andeq	ip, r1, r8, lsr #28
   14688:	andeq	ip, r1, r0, lsr #28
   1468c:	andeq	ip, r1, r0, lsr lr
   14690:	andeq	ip, r1, r4, lsr #28
   14694:	tsteq	r0, r4
   14698:	andeq	lr, r2, r4, ror ip
   1469c:	andeq	ip, r1, ip, lsr lr
   146a0:	cmp	r1, #0
   146a4:	beq	146e4 <argp_parse@@Base+0xe64>
   146a8:	ldr	r2, [r1, #52]	; 0x34
   146ac:	ldr	r3, [r2, #48]	; 0x30
   146b0:	ldr	r1, [r2, #52]	; 0x34
   146b4:	cmp	r3, r1
   146b8:	bcs	146e4 <argp_parse@@Base+0xe64>
   146bc:	ldr	r2, [r3, #4]
   146c0:	cmp	r0, r2
   146c4:	bne	146d8 <argp_parse@@Base+0xe58>
   146c8:	b	146ec <argp_parse@@Base+0xe6c>
   146cc:	ldr	r2, [r3, #4]
   146d0:	cmp	r2, r0
   146d4:	beq	146ec <argp_parse@@Base+0xe6c>
   146d8:	add	r3, r3, #36	; 0x24
   146dc:	cmp	r3, r1
   146e0:	bcc	146cc <argp_parse@@Base+0xe4c>
   146e4:	mov	r0, #0
   146e8:	bx	lr
   146ec:	ldr	r0, [r3, #24]
   146f0:	bx	lr
   146f4:	ldr	ip, [pc, #32]	; 1471c <argp_parse@@Base+0xe9c>
   146f8:	push	{lr}		; (str lr, [sp, #-4]!)
   146fc:	sub	sp, sp, #12
   14700:	ldm	ip, {r1, ip}
   14704:	ldr	r3, [pc, #20]	; 14720 <argp_parse@@Base+0xea0>
   14708:	ldr	r2, [pc, #20]	; 14724 <argp_parse@@Base+0xea4>
   1470c:	str	ip, [sp]
   14710:	bl	14c90 <argp_parse@@Base+0x1410>
   14714:	add	sp, sp, #12
   14718:	pop	{pc}		; (ldr pc, [sp], #4)
   1471c:	andeq	lr, r2, r8, ror ip
   14720:	andeq	ip, r1, r4, lsr #30
   14724:	andeq	ip, r1, r4, lsr pc
   14728:	ldr	r3, [pc, #20]	; 14744 <argp_parse@@Base+0xec4>
   1472c:	ldr	r2, [pc, #20]	; 14748 <argp_parse@@Base+0xec8>
   14730:	ldr	ip, [pc, #20]	; 1474c <argp_parse@@Base+0xecc>
   14734:	str	r0, [r3]
   14738:	str	ip, [r2]
   1473c:	str	r1, [r3, #4]
   14740:	bx	lr
   14744:	andeq	lr, r2, r8, ror ip
   14748:	andeq	lr, r2, r4, ror ip
   1474c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14750:	ldrb	r3, [r0]
   14754:	cmp	r3, #47	; 0x2f
   14758:	bne	14768 <argp_parse@@Base+0xee8>
   1475c:	ldrb	r3, [r0, #1]!
   14760:	cmp	r3, #47	; 0x2f
   14764:	beq	1475c <argp_parse@@Base+0xedc>
   14768:	cmp	r3, #0
   1476c:	bxeq	lr
   14770:	mov	r2, #0
   14774:	push	{lr}		; (str lr, [sp, #-4]!)
   14778:	mov	ip, r2
   1477c:	mov	r1, r0
   14780:	mov	lr, #1
   14784:	cmp	r3, #47	; 0x2f
   14788:	moveq	r2, lr
   1478c:	beq	1479c <argp_parse@@Base+0xf1c>
   14790:	cmp	r2, #0
   14794:	movne	r0, r1
   14798:	movne	r2, ip
   1479c:	ldrb	r3, [r1, #1]!
   147a0:	cmp	r3, #0
   147a4:	bne	14784 <argp_parse@@Base+0xf04>
   147a8:	pop	{pc}		; (ldr pc, [sp], #4)
   147ac:	push	{r4, lr}
   147b0:	mov	r4, r0
   147b4:	bl	113e4 <strlen@plt>
   147b8:	cmp	r0, #1
   147bc:	popls	{r4, pc}
   147c0:	sub	r3, r0, #1
   147c4:	add	r2, r4, r3
   147c8:	ldrb	r1, [r4, r3]
   147cc:	cmp	r1, #47	; 0x2f
   147d0:	popne	{r4, pc}
   147d4:	cmp	r3, #1
   147d8:	beq	147ec <argp_parse@@Base+0xf6c>
   147dc:	ldrb	r1, [r2, #-1]!
   147e0:	sub	r0, r3, #1
   147e4:	cmp	r1, #47	; 0x2f
   147e8:	beq	147f4 <argp_parse@@Base+0xf74>
   147ec:	mov	r0, r3
   147f0:	pop	{r4, pc}
   147f4:	mov	r3, r0
   147f8:	b	147d4 <argp_parse@@Base+0xf54>
   147fc:	push	{r4, r5, lr}
   14800:	sub	sp, sp, #12
   14804:	mov	r5, r0
   14808:	bl	11408 <__errno_location@plt>
   1480c:	mov	r2, #0
   14810:	mov	r4, r0
   14814:	ldr	r3, [r0]
   14818:	str	r2, [r4]
   1481c:	mov	r0, r5
   14820:	str	r3, [sp]
   14824:	str	r3, [sp, #4]
   14828:	bl	11294 <free@plt>
   1482c:	ldr	r3, [r4]
   14830:	add	r2, sp, #8
   14834:	cmp	r3, #0
   14838:	moveq	r3, #4
   1483c:	movne	r3, #0
   14840:	add	r3, r2, r3
   14844:	ldr	r3, [r3, #-8]
   14848:	str	r3, [r4]
   1484c:	add	sp, sp, #12
   14850:	pop	{r4, r5, pc}
   14854:	push	{lr}		; (str lr, [sp, #-4]!)
   14858:	sub	sp, sp, #20
   1485c:	mov	ip, #0
   14860:	ldr	lr, [sp, #24]
   14864:	str	ip, [sp, #8]
   14868:	str	lr, [sp]
   1486c:	str	ip, [sp, #4]
   14870:	bl	1b0cc <argp_error@@Base+0xef0>
   14874:	add	sp, sp, #20
   14878:	pop	{pc}		; (ldr pc, [sp], #4)
   1487c:	push	{r4, lr}
   14880:	sub	sp, sp, #16
   14884:	mov	ip, #0
   14888:	ldr	r4, [sp, #24]
   1488c:	ldr	lr, [sp, #28]
   14890:	str	r4, [sp]
   14894:	str	lr, [sp, #8]
   14898:	str	ip, [sp, #12]
   1489c:	str	ip, [sp, #4]
   148a0:	bl	1ab58 <argp_error@@Base+0x97c>
   148a4:	add	sp, sp, #16
   148a8:	pop	{r4, pc}
   148ac:	push	{r4, lr}
   148b0:	sub	sp, sp, #16
   148b4:	mov	lr, #0
   148b8:	ldr	r4, [sp, #24]
   148bc:	mov	ip, #1
   148c0:	stm	sp, {r4, ip, lr}
   148c4:	bl	1b0cc <argp_error@@Base+0xef0>
   148c8:	add	sp, sp, #16
   148cc:	pop	{r4, pc}
   148d0:	push	{r4, r5, lr}
   148d4:	sub	sp, sp, #20
   148d8:	mov	lr, #0
   148dc:	ldr	r5, [sp, #32]
   148e0:	ldr	r4, [sp, #36]	; 0x24
   148e4:	mov	ip, #1
   148e8:	str	r5, [sp]
   148ec:	str	r4, [sp, #8]
   148f0:	str	lr, [sp, #12]
   148f4:	str	ip, [sp, #4]
   148f8:	bl	1ab58 <argp_error@@Base+0x97c>
   148fc:	add	sp, sp, #20
   14900:	pop	{r4, r5, pc}
   14904:	push	{r1, r2, r3}
   14908:	push	{lr}		; (str lr, [sp, #-4]!)
   1490c:	sub	sp, sp, #8
   14910:	add	r3, sp, #16
   14914:	ldr	r2, [sp, #16]
   14918:	ldr	r1, [sp, #12]
   1491c:	str	r3, [sp, #4]
   14920:	bl	1133c <ioctl@plt>
   14924:	add	sp, sp, #8
   14928:	pop	{lr}		; (ldr lr, [sp], #4)
   1492c:	add	sp, sp, #12
   14930:	bx	lr
   14934:	push	{r4, r5, r6, lr}
   14938:	subs	r4, r0, #0
   1493c:	beq	149b0 <argp_parse@@Base+0x1130>
   14940:	mov	r1, #47	; 0x2f
   14944:	bl	114a4 <strrchr@plt>
   14948:	subs	r5, r0, #0
   1494c:	beq	1499c <argp_parse@@Base+0x111c>
   14950:	add	r6, r5, #1
   14954:	sub	r3, r6, r4
   14958:	cmp	r3, #6
   1495c:	ble	1499c <argp_parse@@Base+0x111c>
   14960:	mov	r2, #7
   14964:	ldr	r1, [pc, #96]	; 149cc <argp_parse@@Base+0x114c>
   14968:	sub	r0, r5, #6
   1496c:	bl	1154c <strncmp@plt>
   14970:	cmp	r0, #0
   14974:	bne	1499c <argp_parse@@Base+0x111c>
   14978:	mov	r2, #3
   1497c:	ldr	r1, [pc, #76]	; 149d0 <argp_parse@@Base+0x1150>
   14980:	mov	r0, r6
   14984:	bl	1154c <strncmp@plt>
   14988:	cmp	r0, #0
   1498c:	movne	r4, r6
   14990:	ldreq	r3, [pc, #60]	; 149d4 <argp_parse@@Base+0x1154>
   14994:	addeq	r4, r5, #4
   14998:	streq	r4, [r3]
   1499c:	ldr	r2, [pc, #52]	; 149d8 <argp_parse@@Base+0x1158>
   149a0:	ldr	r3, [pc, #52]	; 149dc <argp_parse@@Base+0x115c>
   149a4:	str	r4, [r2]
   149a8:	str	r4, [r3]
   149ac:	pop	{r4, r5, r6, pc}
   149b0:	ldr	r3, [pc, #40]	; 149e0 <argp_parse@@Base+0x1160>
   149b4:	mov	r2, #55	; 0x37
   149b8:	mov	r1, #1
   149bc:	ldr	r3, [r3]
   149c0:	ldr	r0, [pc, #28]	; 149e4 <argp_parse@@Base+0x1164>
   149c4:	bl	11330 <fwrite@plt>
   149c8:	bl	11558 <abort@plt>
   149cc:	andeq	ip, r1, ip, ror pc
   149d0:	andeq	ip, r1, r4, lsl #31
   149d4:	andeq	lr, r2, r8, ror #5
   149d8:	andeq	lr, r2, r0, lsl #25
   149dc:	andeq	lr, r2, ip, ror #5
   149e0:	strdeq	lr, [r2], -r0
   149e4:	andeq	ip, r1, r4, asr #30
   149e8:	push	{r4, r5, r6, r7, lr}
   149ec:	sub	sp, sp, #36	; 0x24
   149f0:	cmp	r1, #0
   149f4:	mov	r4, r0
   149f8:	ldr	r5, [sp, #56]	; 0x38
   149fc:	ldr	r6, [sp, #60]	; 0x3c
   14a00:	beq	14c40 <argp_parse@@Base+0x13c0>
   14a04:	str	r3, [sp]
   14a08:	mov	r3, r2
   14a0c:	mov	r2, r1
   14a10:	ldr	r1, [pc, #564]	; 14c4c <argp_parse@@Base+0x13cc>
   14a14:	bl	113fc <fprintf@plt>
   14a18:	ldr	r3, [pc, #560]	; 14c50 <argp_parse@@Base+0x13d0>
   14a1c:	ldr	r2, [pc, #560]	; 14c54 <argp_parse@@Base+0x13d4>
   14a20:	ldr	r1, [pc, #560]	; 14c58 <argp_parse@@Base+0x13d8>
   14a24:	mov	r0, r4
   14a28:	bl	113fc <fprintf@plt>
   14a2c:	mov	r1, r4
   14a30:	mov	r0, #10
   14a34:	bl	114c8 <fputc@plt>
   14a38:	ldr	r1, [pc, #540]	; 14c5c <argp_parse@@Base+0x13dc>
   14a3c:	ldr	r2, [pc, #540]	; 14c60 <argp_parse@@Base+0x13e0>
   14a40:	mov	r0, r4
   14a44:	bl	113fc <fprintf@plt>
   14a48:	mov	r1, r4
   14a4c:	mov	r0, #10
   14a50:	bl	114c8 <fputc@plt>
   14a54:	cmp	r6, #9
   14a58:	ldrls	pc, [pc, r6, lsl #2]
   14a5c:	b	14a88 <argp_parse@@Base+0x1208>
   14a60:	andeq	r4, r1, r8, asr #21
   14a64:	andeq	r4, r1, r4, lsl fp
   14a68:	andeq	r4, r1, ip, lsr #22
   14a6c:	andeq	r4, r1, r4, asr #22
   14a70:	andeq	r4, r1, r4, ror #22
   14a74:	andeq	r4, r1, ip, lsl #23
   14a78:	andeq	r4, r1, ip, lsr #23
   14a7c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14a80:	andeq	r4, r1, r4, lsl #24
   14a84:	ldrdeq	r4, [r1], -r0
   14a88:	ldr	ip, [r5, #32]
   14a8c:	ldr	r1, [r5, #28]
   14a90:	ldm	r5, {r2, r3}
   14a94:	ldr	r7, [r5, #24]
   14a98:	ldr	r6, [r5, #20]
   14a9c:	str	ip, [sp, #24]
   14aa0:	ldr	lr, [r5, #16]
   14aa4:	str	r1, [sp, #20]
   14aa8:	ldr	r1, [r5, #8]
   14aac:	ldr	ip, [r5, #12]
   14ab0:	mov	r0, r4
   14ab4:	str	r7, [sp, #16]
   14ab8:	stm	sp, {r1, ip, lr}
   14abc:	str	r6, [sp, #12]
   14ac0:	ldr	r1, [pc, #412]	; 14c64 <argp_parse@@Base+0x13e4>
   14ac4:	bl	113fc <fprintf@plt>
   14ac8:	add	sp, sp, #36	; 0x24
   14acc:	pop	{r4, r5, r6, r7, pc}
   14ad0:	ldr	ip, [r5, #32]
   14ad4:	ldr	r1, [r5, #28]
   14ad8:	ldm	r5, {r2, r3}
   14adc:	ldr	r7, [r5, #24]
   14ae0:	ldr	r6, [r5, #20]
   14ae4:	str	ip, [sp, #24]
   14ae8:	ldr	lr, [r5, #16]
   14aec:	str	r1, [sp, #20]
   14af0:	ldr	r1, [r5, #8]
   14af4:	ldr	ip, [r5, #12]
   14af8:	mov	r0, r4
   14afc:	str	r7, [sp, #16]
   14b00:	stm	sp, {r1, ip, lr}
   14b04:	str	r6, [sp, #12]
   14b08:	ldr	r1, [pc, #344]	; 14c68 <argp_parse@@Base+0x13e8>
   14b0c:	bl	113fc <fprintf@plt>
   14b10:	b	14ac8 <argp_parse@@Base+0x1248>
   14b14:	ldr	r2, [r5]
   14b18:	mov	r0, r4
   14b1c:	ldr	r1, [pc, #328]	; 14c6c <argp_parse@@Base+0x13ec>
   14b20:	add	sp, sp, #36	; 0x24
   14b24:	pop	{r4, r5, r6, r7, lr}
   14b28:	b	113fc <fprintf@plt>
   14b2c:	mov	r0, r4
   14b30:	ldm	r5, {r2, r3}
   14b34:	ldr	r1, [pc, #308]	; 14c70 <argp_parse@@Base+0x13f0>
   14b38:	add	sp, sp, #36	; 0x24
   14b3c:	pop	{r4, r5, r6, r7, lr}
   14b40:	b	113fc <fprintf@plt>
   14b44:	ldr	r1, [r5, #8]
   14b48:	ldm	r5, {r2, r3}
   14b4c:	mov	r0, r4
   14b50:	str	r1, [sp, #56]	; 0x38
   14b54:	ldr	r1, [pc, #280]	; 14c74 <argp_parse@@Base+0x13f4>
   14b58:	add	sp, sp, #36	; 0x24
   14b5c:	pop	{r4, r5, r6, r7, lr}
   14b60:	b	113fc <fprintf@plt>
   14b64:	ldr	r1, [r5, #8]
   14b68:	ldr	ip, [r5, #12]
   14b6c:	ldm	r5, {r2, r3}
   14b70:	mov	r0, r4
   14b74:	str	r1, [sp, #56]	; 0x38
   14b78:	str	ip, [sp, #60]	; 0x3c
   14b7c:	ldr	r1, [pc, #244]	; 14c78 <argp_parse@@Base+0x13f8>
   14b80:	add	sp, sp, #36	; 0x24
   14b84:	pop	{r4, r5, r6, r7, lr}
   14b88:	b	113fc <fprintf@plt>
   14b8c:	add	r1, r5, #8
   14b90:	ldm	r5, {r2, r3}
   14b94:	ldm	r1, {r1, ip, lr}
   14b98:	mov	r0, r4
   14b9c:	stm	sp, {r1, ip, lr}
   14ba0:	ldr	r1, [pc, #212]	; 14c7c <argp_parse@@Base+0x13fc>
   14ba4:	bl	113fc <fprintf@plt>
   14ba8:	b	14ac8 <argp_parse@@Base+0x1248>
   14bac:	add	r1, r5, #8
   14bb0:	ldr	r6, [r5, #20]
   14bb4:	ldm	r1, {r1, ip, lr}
   14bb8:	mov	r0, r4
   14bbc:	ldm	r5, {r2, r3}
   14bc0:	str	r6, [sp, #12]
   14bc4:	stm	sp, {r1, ip, lr}
   14bc8:	ldr	r1, [pc, #176]	; 14c80 <argp_parse@@Base+0x1400>
   14bcc:	bl	113fc <fprintf@plt>
   14bd0:	b	14ac8 <argp_parse@@Base+0x1248>
   14bd4:	add	r1, r5, #8
   14bd8:	ldr	r7, [r5, #24]
   14bdc:	ldm	r1, {r1, ip, lr}
   14be0:	mov	r0, r4
   14be4:	ldr	r6, [r5, #20]
   14be8:	ldm	r5, {r2, r3}
   14bec:	stm	sp, {r1, ip, lr}
   14bf0:	str	r7, [sp, #16]
   14bf4:	str	r6, [sp, #12]
   14bf8:	ldr	r1, [pc, #132]	; 14c84 <argp_parse@@Base+0x1404>
   14bfc:	bl	113fc <fprintf@plt>
   14c00:	b	14ac8 <argp_parse@@Base+0x1248>
   14c04:	ldr	r1, [r5, #28]
   14c08:	ldm	r5, {r2, r3}
   14c0c:	ldr	r7, [r5, #24]
   14c10:	ldr	r6, [r5, #20]
   14c14:	ldr	lr, [r5, #16]
   14c18:	str	r1, [sp, #20]
   14c1c:	ldr	r1, [r5, #8]
   14c20:	ldr	ip, [r5, #12]
   14c24:	mov	r0, r4
   14c28:	str	r7, [sp, #16]
   14c2c:	stm	sp, {r1, ip, lr}
   14c30:	str	r6, [sp, #12]
   14c34:	ldr	r1, [pc, #76]	; 14c88 <argp_parse@@Base+0x1408>
   14c38:	bl	113fc <fprintf@plt>
   14c3c:	b	14ac8 <argp_parse@@Base+0x1248>
   14c40:	ldr	r1, [pc, #68]	; 14c8c <argp_parse@@Base+0x140c>
   14c44:	bl	113fc <fprintf@plt>
   14c48:	b	14a18 <argp_parse@@Base+0x1198>
   14c4c:	andeq	ip, r1, r8, lsl #31
   14c50:	andeq	r0, r0, r6, ror #15
   14c54:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14c58:	muleq	r1, ip, r2
   14c5c:	andeq	ip, r1, r4, asr #31
   14c60:	andeq	ip, r1, r0, lsr #31
   14c64:			; <UNDEFINED> instruction: 0x0001d1b0
   14c68:	andeq	sp, r1, ip, ror r1
   14c6c:	andeq	sp, r1, r0, ror r0
   14c70:	andeq	sp, r1, r0, lsl #1
   14c74:	muleq	r1, r8, r0
   14c78:	strheq	sp, [r1], -r4
   14c7c:	ldrdeq	sp, [r1], -r4
   14c80:	strdeq	sp, [r1], -r8
   14c84:	andeq	sp, r1, r0, lsr #2
   14c88:	andeq	sp, r1, ip, asr #2
   14c8c:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   14c90:	push	{r4, r5, r6, r7, lr}
   14c94:	sub	sp, sp, #36	; 0x24
   14c98:	mov	r6, r0
   14c9c:	ldr	r5, [sp, #56]	; 0x38
   14ca0:	ldr	r4, [r5]
   14ca4:	cmp	r4, #0
   14ca8:	beq	14cc4 <argp_parse@@Base+0x1444>
   14cac:	mov	r0, r5
   14cb0:	mov	r4, #0
   14cb4:	ldr	ip, [r0, #4]!
   14cb8:	add	r4, r4, #1
   14cbc:	cmp	ip, #0
   14cc0:	bne	14cb4 <argp_parse@@Base+0x1434>
   14cc4:	cmp	r1, #0
   14cc8:	beq	14f04 <argp_parse@@Base+0x1684>
   14ccc:	str	r3, [sp]
   14cd0:	mov	r0, r6
   14cd4:	mov	r3, r2
   14cd8:	mov	r2, r1
   14cdc:	ldr	r1, [pc, #560]	; 14f14 <argp_parse@@Base+0x1694>
   14ce0:	bl	113fc <fprintf@plt>
   14ce4:	ldr	r3, [pc, #556]	; 14f18 <argp_parse@@Base+0x1698>
   14ce8:	ldr	r2, [pc, #556]	; 14f1c <argp_parse@@Base+0x169c>
   14cec:	ldr	r1, [pc, #556]	; 14f20 <argp_parse@@Base+0x16a0>
   14cf0:	mov	r0, r6
   14cf4:	bl	113fc <fprintf@plt>
   14cf8:	mov	r1, r6
   14cfc:	mov	r0, #10
   14d00:	bl	114c8 <fputc@plt>
   14d04:	ldr	r1, [pc, #536]	; 14f24 <argp_parse@@Base+0x16a4>
   14d08:	ldr	r2, [pc, #536]	; 14f28 <argp_parse@@Base+0x16a8>
   14d0c:	mov	r0, r6
   14d10:	bl	113fc <fprintf@plt>
   14d14:	mov	r1, r6
   14d18:	mov	r0, #10
   14d1c:	bl	114c8 <fputc@plt>
   14d20:	cmp	r4, #9
   14d24:	ldrls	pc, [pc, r4, lsl #2]
   14d28:	b	14d54 <argp_parse@@Base+0x14d4>
   14d2c:	muleq	r1, r4, sp
   14d30:	andeq	r4, r1, r0, ror #27
   14d34:	strdeq	r4, [r1], -r8
   14d38:	andeq	r4, r1, r0, lsl lr
   14d3c:	andeq	r4, r1, r0, lsr lr
   14d40:	andeq	r4, r1, r0, asr lr
   14d44:	andeq	r4, r1, r0, ror lr
   14d48:	muleq	r1, r8, lr
   14d4c:	andeq	r4, r1, r8, asr #29
   14d50:	muleq	r1, ip, sp
   14d54:	ldr	ip, [r5, #32]
   14d58:	ldr	r1, [r5, #28]
   14d5c:	ldm	r5, {r2, r3}
   14d60:	ldr	r7, [r5, #24]
   14d64:	ldr	r4, [r5, #20]
   14d68:	str	ip, [sp, #24]
   14d6c:	ldr	lr, [r5, #16]
   14d70:	str	r1, [sp, #20]
   14d74:	ldr	r1, [r5, #8]
   14d78:	ldr	ip, [r5, #12]
   14d7c:	mov	r0, r6
   14d80:	str	r7, [sp, #16]
   14d84:	stm	sp, {r1, ip, lr}
   14d88:	str	r4, [sp, #12]
   14d8c:	ldr	r1, [pc, #408]	; 14f2c <argp_parse@@Base+0x16ac>
   14d90:	bl	113fc <fprintf@plt>
   14d94:	add	sp, sp, #36	; 0x24
   14d98:	pop	{r4, r5, r6, r7, pc}
   14d9c:	ldr	ip, [r5, #32]
   14da0:	ldr	r1, [r5, #28]
   14da4:	ldm	r5, {r2, r3}
   14da8:	ldr	r7, [r5, #24]
   14dac:	ldr	r4, [r5, #20]
   14db0:	str	ip, [sp, #24]
   14db4:	ldr	lr, [r5, #16]
   14db8:	str	r1, [sp, #20]
   14dbc:	ldr	r1, [r5, #8]
   14dc0:	ldr	ip, [r5, #12]
   14dc4:	mov	r0, r6
   14dc8:	str	r7, [sp, #16]
   14dcc:	stm	sp, {r1, ip, lr}
   14dd0:	str	r4, [sp, #12]
   14dd4:	ldr	r1, [pc, #340]	; 14f30 <argp_parse@@Base+0x16b0>
   14dd8:	bl	113fc <fprintf@plt>
   14ddc:	b	14d94 <argp_parse@@Base+0x1514>
   14de0:	ldr	r2, [r5]
   14de4:	mov	r0, r6
   14de8:	ldr	r1, [pc, #324]	; 14f34 <argp_parse@@Base+0x16b4>
   14dec:	add	sp, sp, #36	; 0x24
   14df0:	pop	{r4, r5, r6, r7, lr}
   14df4:	b	113fc <fprintf@plt>
   14df8:	mov	r0, r6
   14dfc:	ldm	r5, {r2, r3}
   14e00:	ldr	r1, [pc, #304]	; 14f38 <argp_parse@@Base+0x16b8>
   14e04:	add	sp, sp, #36	; 0x24
   14e08:	pop	{r4, r5, r6, r7, lr}
   14e0c:	b	113fc <fprintf@plt>
   14e10:	ldr	r1, [r5, #8]
   14e14:	ldm	r5, {r2, r3}
   14e18:	mov	r0, r6
   14e1c:	str	r1, [sp, #56]	; 0x38
   14e20:	ldr	r1, [pc, #276]	; 14f3c <argp_parse@@Base+0x16bc>
   14e24:	add	sp, sp, #36	; 0x24
   14e28:	pop	{r4, r5, r6, r7, lr}
   14e2c:	b	113fc <fprintf@plt>
   14e30:	ldr	r1, [r5, #8]
   14e34:	ldr	ip, [r5, #12]
   14e38:	ldm	r5, {r2, r3}
   14e3c:	mov	r0, r6
   14e40:	stm	sp, {r1, ip}
   14e44:	ldr	r1, [pc, #244]	; 14f40 <argp_parse@@Base+0x16c0>
   14e48:	bl	113fc <fprintf@plt>
   14e4c:	b	14d94 <argp_parse@@Base+0x1514>
   14e50:	add	r1, r5, #8
   14e54:	ldm	r5, {r2, r3}
   14e58:	ldm	r1, {r1, ip, lr}
   14e5c:	mov	r0, r6
   14e60:	stm	sp, {r1, ip, lr}
   14e64:	ldr	r1, [pc, #216]	; 14f44 <argp_parse@@Base+0x16c4>
   14e68:	bl	113fc <fprintf@plt>
   14e6c:	b	14d94 <argp_parse@@Base+0x1514>
   14e70:	add	r1, r5, #8
   14e74:	ldr	r4, [r5, #20]
   14e78:	ldm	r1, {r1, ip, lr}
   14e7c:	mov	r0, r6
   14e80:	ldm	r5, {r2, r3}
   14e84:	str	r4, [sp, #12]
   14e88:	stm	sp, {r1, ip, lr}
   14e8c:	ldr	r1, [pc, #180]	; 14f48 <argp_parse@@Base+0x16c8>
   14e90:	bl	113fc <fprintf@plt>
   14e94:	b	14d94 <argp_parse@@Base+0x1514>
   14e98:	add	r1, r5, #8
   14e9c:	ldr	r7, [r5, #24]
   14ea0:	ldm	r1, {r1, ip, lr}
   14ea4:	mov	r0, r6
   14ea8:	ldr	r4, [r5, #20]
   14eac:	ldm	r5, {r2, r3}
   14eb0:	stm	sp, {r1, ip, lr}
   14eb4:	str	r7, [sp, #16]
   14eb8:	str	r4, [sp, #12]
   14ebc:	ldr	r1, [pc, #136]	; 14f4c <argp_parse@@Base+0x16cc>
   14ec0:	bl	113fc <fprintf@plt>
   14ec4:	b	14d94 <argp_parse@@Base+0x1514>
   14ec8:	ldr	r1, [r5, #28]
   14ecc:	ldm	r5, {r2, r3}
   14ed0:	ldr	r7, [r5, #24]
   14ed4:	ldr	r4, [r5, #20]
   14ed8:	ldr	lr, [r5, #16]
   14edc:	str	r1, [sp, #20]
   14ee0:	ldr	r1, [r5, #8]
   14ee4:	ldr	ip, [r5, #12]
   14ee8:	mov	r0, r6
   14eec:	str	r7, [sp, #16]
   14ef0:	stm	sp, {r1, ip, lr}
   14ef4:	str	r4, [sp, #12]
   14ef8:	ldr	r1, [pc, #80]	; 14f50 <argp_parse@@Base+0x16d0>
   14efc:	bl	113fc <fprintf@plt>
   14f00:	b	14d94 <argp_parse@@Base+0x1514>
   14f04:	ldr	r1, [pc, #72]	; 14f54 <argp_parse@@Base+0x16d4>
   14f08:	mov	r0, r6
   14f0c:	bl	113fc <fprintf@plt>
   14f10:	b	14ce4 <argp_parse@@Base+0x1464>
   14f14:	andeq	ip, r1, r8, lsl #31
   14f18:	andeq	r0, r0, r6, ror #15
   14f1c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14f20:	muleq	r1, ip, r2
   14f24:	andeq	ip, r1, r4, asr #31
   14f28:	andeq	ip, r1, r0, lsr #31
   14f2c:			; <UNDEFINED> instruction: 0x0001d1b0
   14f30:	andeq	sp, r1, ip, ror r1
   14f34:	andeq	sp, r1, r0, ror r0
   14f38:	andeq	sp, r1, r0, lsl #1
   14f3c:	muleq	r1, r8, r0
   14f40:	strheq	sp, [r1], -r4
   14f44:	ldrdeq	sp, [r1], -r4
   14f48:	strdeq	sp, [r1], -r8
   14f4c:	andeq	sp, r1, r0, lsr #2
   14f50:	andeq	sp, r1, ip, asr #2
   14f54:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   14f58:	push	{r4, r5, r6, lr}
   14f5c:	sub	sp, sp, #72	; 0x48
   14f60:	mov	r5, r0
   14f64:	ldr	ip, [sp, #88]	; 0x58
   14f68:	ldr	r0, [ip]
   14f6c:	cmp	r0, #0
   14f70:	str	r0, [sp, #32]
   14f74:	beq	1527c <argp_parse@@Base+0x19fc>
   14f78:	ldr	r0, [ip, #4]
   14f7c:	cmp	r0, #0
   14f80:	str	r0, [sp, #36]	; 0x24
   14f84:	beq	15284 <argp_parse@@Base+0x1a04>
   14f88:	ldr	r0, [ip, #8]
   14f8c:	cmp	r0, #0
   14f90:	str	r0, [sp, #40]	; 0x28
   14f94:	beq	1528c <argp_parse@@Base+0x1a0c>
   14f98:	ldr	r0, [ip, #12]
   14f9c:	cmp	r0, #0
   14fa0:	str	r0, [sp, #44]	; 0x2c
   14fa4:	beq	15294 <argp_parse@@Base+0x1a14>
   14fa8:	ldr	r0, [ip, #16]
   14fac:	cmp	r0, #0
   14fb0:	str	r0, [sp, #48]	; 0x30
   14fb4:	beq	1529c <argp_parse@@Base+0x1a1c>
   14fb8:	ldr	r0, [ip, #20]
   14fbc:	cmp	r0, #0
   14fc0:	str	r0, [sp, #52]	; 0x34
   14fc4:	beq	152a4 <argp_parse@@Base+0x1a24>
   14fc8:	ldr	r0, [ip, #24]
   14fcc:	cmp	r0, #0
   14fd0:	str	r0, [sp, #56]	; 0x38
   14fd4:	beq	152ac <argp_parse@@Base+0x1a2c>
   14fd8:	ldr	r0, [ip, #28]
   14fdc:	cmp	r0, #0
   14fe0:	str	r0, [sp, #60]	; 0x3c
   14fe4:	beq	152b4 <argp_parse@@Base+0x1a34>
   14fe8:	ldr	r0, [ip, #32]
   14fec:	cmp	r0, #0
   14ff0:	str	r0, [sp, #64]	; 0x40
   14ff4:	beq	152bc <argp_parse@@Base+0x1a3c>
   14ff8:	ldr	r0, [ip, #36]	; 0x24
   14ffc:	cmp	r0, #0
   15000:	movne	r4, #10
   15004:	moveq	r4, #9
   15008:	cmp	r1, #0
   1500c:	beq	1526c <argp_parse@@Base+0x19ec>
   15010:	str	r3, [sp]
   15014:	mov	r0, r5
   15018:	mov	r3, r2
   1501c:	mov	r2, r1
   15020:	ldr	r1, [pc, #668]	; 152c4 <argp_parse@@Base+0x1a44>
   15024:	bl	113fc <fprintf@plt>
   15028:	ldr	r3, [pc, #664]	; 152c8 <argp_parse@@Base+0x1a48>
   1502c:	ldr	r2, [pc, #664]	; 152cc <argp_parse@@Base+0x1a4c>
   15030:	ldr	r1, [pc, #664]	; 152d0 <argp_parse@@Base+0x1a50>
   15034:	mov	r0, r5
   15038:	bl	113fc <fprintf@plt>
   1503c:	mov	r1, r5
   15040:	mov	r0, #10
   15044:	bl	114c8 <fputc@plt>
   15048:	ldr	r1, [pc, #644]	; 152d4 <argp_parse@@Base+0x1a54>
   1504c:	ldr	r2, [pc, #644]	; 152d8 <argp_parse@@Base+0x1a58>
   15050:	mov	r0, r5
   15054:	bl	113fc <fprintf@plt>
   15058:	mov	r1, r5
   1505c:	mov	r0, #10
   15060:	bl	114c8 <fputc@plt>
   15064:	cmp	r4, #9
   15068:	ldrls	pc, [pc, r4, lsl #2]
   1506c:	b	15098 <argp_parse@@Base+0x1818>
   15070:	ldrdeq	r5, [r1], -ip
   15074:	andeq	r5, r1, ip, lsr #2
   15078:	andeq	r5, r1, r4, asr #2
   1507c:	andeq	r5, r1, r0, ror #2
   15080:	andeq	r5, r1, r4, lsl #3
   15084:	andeq	r5, r1, r8, lsr #3
   15088:	andeq	r5, r1, ip, asr #3
   1508c:	strdeq	r5, [r1], -r8
   15090:	andeq	r5, r1, ip, lsr #4
   15094:	andeq	r5, r1, r4, ror #1
   15098:	ldr	ip, [sp, #64]	; 0x40
   1509c:	ldr	r1, [sp, #60]	; 0x3c
   150a0:	ldr	lr, [sp, #48]	; 0x30
   150a4:	str	ip, [sp, #24]
   150a8:	str	r1, [sp, #20]
   150ac:	ldr	ip, [sp, #44]	; 0x2c
   150b0:	ldr	r1, [sp, #40]	; 0x28
   150b4:	ldr	r6, [sp, #56]	; 0x38
   150b8:	ldr	r4, [sp, #52]	; 0x34
   150bc:	stm	sp, {r1, ip, lr}
   150c0:	mov	r0, r5
   150c4:	ldr	r3, [sp, #36]	; 0x24
   150c8:	ldr	r2, [sp, #32]
   150cc:	str	r6, [sp, #16]
   150d0:	str	r4, [sp, #12]
   150d4:	ldr	r1, [pc, #512]	; 152dc <argp_parse@@Base+0x1a5c>
   150d8:	bl	113fc <fprintf@plt>
   150dc:	add	sp, sp, #72	; 0x48
   150e0:	pop	{r4, r5, r6, pc}
   150e4:	ldr	ip, [sp, #64]	; 0x40
   150e8:	ldr	r1, [sp, #60]	; 0x3c
   150ec:	ldr	lr, [sp, #48]	; 0x30
   150f0:	str	ip, [sp, #24]
   150f4:	str	r1, [sp, #20]
   150f8:	ldr	ip, [sp, #44]	; 0x2c
   150fc:	ldr	r1, [sp, #40]	; 0x28
   15100:	ldr	r6, [sp, #56]	; 0x38
   15104:	ldr	r4, [sp, #52]	; 0x34
   15108:	stm	sp, {r1, ip, lr}
   1510c:	mov	r0, r5
   15110:	ldr	r3, [sp, #36]	; 0x24
   15114:	ldr	r2, [sp, #32]
   15118:	str	r6, [sp, #16]
   1511c:	str	r4, [sp, #12]
   15120:	ldr	r1, [pc, #440]	; 152e0 <argp_parse@@Base+0x1a60>
   15124:	bl	113fc <fprintf@plt>
   15128:	b	150dc <argp_parse@@Base+0x185c>
   1512c:	mov	r0, r5
   15130:	ldr	r2, [sp, #32]
   15134:	ldr	r1, [pc, #424]	; 152e4 <argp_parse@@Base+0x1a64>
   15138:	add	sp, sp, #72	; 0x48
   1513c:	pop	{r4, r5, r6, lr}
   15140:	b	113fc <fprintf@plt>
   15144:	mov	r0, r5
   15148:	ldr	r3, [sp, #36]	; 0x24
   1514c:	ldr	r2, [sp, #32]
   15150:	ldr	r1, [pc, #400]	; 152e8 <argp_parse@@Base+0x1a68>
   15154:	add	sp, sp, #72	; 0x48
   15158:	pop	{r4, r5, r6, lr}
   1515c:	b	113fc <fprintf@plt>
   15160:	ldr	r1, [sp, #40]	; 0x28
   15164:	ldr	r3, [sp, #36]	; 0x24
   15168:	str	r1, [sp, #88]	; 0x58
   1516c:	ldr	r2, [sp, #32]
   15170:	mov	r0, r5
   15174:	ldr	r1, [pc, #368]	; 152ec <argp_parse@@Base+0x1a6c>
   15178:	add	sp, sp, #72	; 0x48
   1517c:	pop	{r4, r5, r6, lr}
   15180:	b	113fc <fprintf@plt>
   15184:	ldr	r1, [sp, #40]	; 0x28
   15188:	ldr	ip, [sp, #44]	; 0x2c
   1518c:	ldr	r3, [sp, #36]	; 0x24
   15190:	ldr	r2, [sp, #32]
   15194:	stm	sp, {r1, ip}
   15198:	mov	r0, r5
   1519c:	ldr	r1, [pc, #332]	; 152f0 <argp_parse@@Base+0x1a70>
   151a0:	bl	113fc <fprintf@plt>
   151a4:	b	150dc <argp_parse@@Base+0x185c>
   151a8:	add	r1, sp, #40	; 0x28
   151ac:	ldr	r3, [sp, #36]	; 0x24
   151b0:	ldm	r1, {r1, ip, lr}
   151b4:	mov	r0, r5
   151b8:	ldr	r2, [sp, #32]
   151bc:	stm	sp, {r1, ip, lr}
   151c0:	ldr	r1, [pc, #300]	; 152f4 <argp_parse@@Base+0x1a74>
   151c4:	bl	113fc <fprintf@plt>
   151c8:	b	150dc <argp_parse@@Base+0x185c>
   151cc:	add	r1, sp, #40	; 0x28
   151d0:	ldr	r4, [sp, #52]	; 0x34
   151d4:	ldm	r1, {r1, ip, lr}
   151d8:	mov	r0, r5
   151dc:	ldr	r3, [sp, #36]	; 0x24
   151e0:	ldr	r2, [sp, #32]
   151e4:	stm	sp, {r1, ip, lr}
   151e8:	str	r4, [sp, #12]
   151ec:	ldr	r1, [pc, #260]	; 152f8 <argp_parse@@Base+0x1a78>
   151f0:	bl	113fc <fprintf@plt>
   151f4:	b	150dc <argp_parse@@Base+0x185c>
   151f8:	add	r1, sp, #40	; 0x28
   151fc:	ldr	r6, [sp, #56]	; 0x38
   15200:	ldm	r1, {r1, ip, lr}
   15204:	mov	r0, r5
   15208:	ldr	r4, [sp, #52]	; 0x34
   1520c:	ldr	r3, [sp, #36]	; 0x24
   15210:	stm	sp, {r1, ip, lr}
   15214:	ldr	r2, [sp, #32]
   15218:	str	r6, [sp, #16]
   1521c:	str	r4, [sp, #12]
   15220:	ldr	r1, [pc, #212]	; 152fc <argp_parse@@Base+0x1a7c>
   15224:	bl	113fc <fprintf@plt>
   15228:	b	150dc <argp_parse@@Base+0x185c>
   1522c:	ldr	r1, [sp, #60]	; 0x3c
   15230:	ldr	lr, [sp, #48]	; 0x30
   15234:	ldr	ip, [sp, #44]	; 0x2c
   15238:	str	r1, [sp, #20]
   1523c:	ldr	r1, [sp, #40]	; 0x28
   15240:	ldr	r6, [sp, #56]	; 0x38
   15244:	ldr	r4, [sp, #52]	; 0x34
   15248:	stm	sp, {r1, ip, lr}
   1524c:	mov	r0, r5
   15250:	ldr	r3, [sp, #36]	; 0x24
   15254:	ldr	r2, [sp, #32]
   15258:	str	r6, [sp, #16]
   1525c:	str	r4, [sp, #12]
   15260:	ldr	r1, [pc, #152]	; 15300 <argp_parse@@Base+0x1a80>
   15264:	bl	113fc <fprintf@plt>
   15268:	b	150dc <argp_parse@@Base+0x185c>
   1526c:	ldr	r1, [pc, #144]	; 15304 <argp_parse@@Base+0x1a84>
   15270:	mov	r0, r5
   15274:	bl	113fc <fprintf@plt>
   15278:	b	15028 <argp_parse@@Base+0x17a8>
   1527c:	mov	r4, r0
   15280:	b	15008 <argp_parse@@Base+0x1788>
   15284:	mov	r4, #1
   15288:	b	15008 <argp_parse@@Base+0x1788>
   1528c:	mov	r4, #2
   15290:	b	15008 <argp_parse@@Base+0x1788>
   15294:	mov	r4, #3
   15298:	b	15008 <argp_parse@@Base+0x1788>
   1529c:	mov	r4, #4
   152a0:	b	15008 <argp_parse@@Base+0x1788>
   152a4:	mov	r4, #5
   152a8:	b	15008 <argp_parse@@Base+0x1788>
   152ac:	mov	r4, #6
   152b0:	b	15008 <argp_parse@@Base+0x1788>
   152b4:	mov	r4, #7
   152b8:	b	15008 <argp_parse@@Base+0x1788>
   152bc:	mov	r4, #8
   152c0:	b	15008 <argp_parse@@Base+0x1788>
   152c4:	andeq	ip, r1, r8, lsl #31
   152c8:	andeq	r0, r0, r6, ror #15
   152cc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   152d0:	muleq	r1, ip, r2
   152d4:	andeq	ip, r1, r4, asr #31
   152d8:	andeq	ip, r1, r0, lsr #31
   152dc:			; <UNDEFINED> instruction: 0x0001d1b0
   152e0:	andeq	sp, r1, ip, ror r1
   152e4:	andeq	sp, r1, r0, ror r0
   152e8:	andeq	sp, r1, r0, lsl #1
   152ec:	muleq	r1, r8, r0
   152f0:	strheq	sp, [r1], -r4
   152f4:	ldrdeq	sp, [r1], -r4
   152f8:	strdeq	sp, [r1], -r8
   152fc:	andeq	sp, r1, r0, lsr #2
   15300:	andeq	sp, r1, ip, asr #2
   15304:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   15308:	push	{r3}		; (str r3, [sp, #-4]!)
   1530c:	push	{r4, r5, r6, lr}
   15310:	sub	sp, sp, #84	; 0x54
   15314:	add	ip, sp, #104	; 0x68
   15318:	ldr	lr, [sp, #104]	; 0x68
   1531c:	mov	r5, r0
   15320:	cmp	lr, #0
   15324:	str	lr, [sp, #40]	; 0x28
   15328:	str	ip, [sp, #36]	; 0x24
   1532c:	beq	15634 <argp_parse@@Base+0x1db4>
   15330:	ldr	r0, [sp, #108]	; 0x6c
   15334:	cmp	r0, #0
   15338:	str	r0, [sp, #44]	; 0x2c
   1533c:	beq	1563c <argp_parse@@Base+0x1dbc>
   15340:	ldr	r0, [sp, #112]	; 0x70
   15344:	cmp	r0, #0
   15348:	str	r0, [sp, #48]	; 0x30
   1534c:	beq	15644 <argp_parse@@Base+0x1dc4>
   15350:	ldr	r0, [sp, #116]	; 0x74
   15354:	cmp	r0, #0
   15358:	str	r0, [sp, #52]	; 0x34
   1535c:	beq	1564c <argp_parse@@Base+0x1dcc>
   15360:	ldr	r0, [sp, #120]	; 0x78
   15364:	cmp	r0, #0
   15368:	str	r0, [sp, #56]	; 0x38
   1536c:	beq	15654 <argp_parse@@Base+0x1dd4>
   15370:	ldr	r0, [sp, #124]	; 0x7c
   15374:	cmp	r0, #0
   15378:	str	r0, [sp, #60]	; 0x3c
   1537c:	beq	1565c <argp_parse@@Base+0x1ddc>
   15380:	ldr	r0, [sp, #128]	; 0x80
   15384:	cmp	r0, #0
   15388:	str	r0, [sp, #64]	; 0x40
   1538c:	beq	15664 <argp_parse@@Base+0x1de4>
   15390:	ldr	r0, [sp, #132]	; 0x84
   15394:	cmp	r0, #0
   15398:	str	r0, [sp, #68]	; 0x44
   1539c:	beq	1566c <argp_parse@@Base+0x1dec>
   153a0:	ldr	r3, [sp, #136]	; 0x88
   153a4:	cmp	r3, #0
   153a8:	str	r3, [sp, #72]	; 0x48
   153ac:	beq	15674 <argp_parse@@Base+0x1df4>
   153b0:	ldr	lr, [sp, #140]	; 0x8c
   153b4:	cmp	lr, #0
   153b8:	movne	r4, #10
   153bc:	moveq	r4, #9
   153c0:	cmp	r1, #0
   153c4:	ldr	r3, [sp, #100]	; 0x64
   153c8:	beq	15624 <argp_parse@@Base+0x1da4>
   153cc:	str	r3, [sp]
   153d0:	mov	r0, r5
   153d4:	mov	r3, r2
   153d8:	mov	r2, r1
   153dc:	ldr	r1, [pc, #664]	; 1567c <argp_parse@@Base+0x1dfc>
   153e0:	bl	113fc <fprintf@plt>
   153e4:	ldr	r3, [pc, #660]	; 15680 <argp_parse@@Base+0x1e00>
   153e8:	ldr	r2, [pc, #660]	; 15684 <argp_parse@@Base+0x1e04>
   153ec:	ldr	r1, [pc, #660]	; 15688 <argp_parse@@Base+0x1e08>
   153f0:	mov	r0, r5
   153f4:	bl	113fc <fprintf@plt>
   153f8:	mov	r1, r5
   153fc:	mov	r0, #10
   15400:	bl	114c8 <fputc@plt>
   15404:	ldr	r1, [pc, #640]	; 1568c <argp_parse@@Base+0x1e0c>
   15408:	ldr	r2, [pc, #640]	; 15690 <argp_parse@@Base+0x1e10>
   1540c:	mov	r0, r5
   15410:	bl	113fc <fprintf@plt>
   15414:	mov	r1, r5
   15418:	mov	r0, #10
   1541c:	bl	114c8 <fputc@plt>
   15420:	cmp	r4, #9
   15424:	ldrls	pc, [pc, r4, lsl #2]
   15428:	b	15454 <argp_parse@@Base+0x1bd4>
   1542c:	muleq	r1, r8, r4
   15430:	strdeq	r5, [r1], -r0
   15434:	andeq	r5, r1, r4, lsl #10
   15438:	andeq	r5, r1, ip, lsl r5
   1543c:	andeq	r5, r1, ip, lsr r5
   15440:	andeq	r5, r1, r0, ror #10
   15444:	andeq	r5, r1, r4, lsl #11
   15448:			; <UNDEFINED> instruction: 0x000155b0
   1544c:	andeq	r5, r1, r4, ror #11
   15450:	andeq	r5, r1, r8, lsr #9
   15454:	ldr	ip, [sp, #72]	; 0x48
   15458:	ldr	r1, [sp, #68]	; 0x44
   1545c:	ldr	lr, [sp, #56]	; 0x38
   15460:	str	ip, [sp, #24]
   15464:	str	r1, [sp, #20]
   15468:	ldr	ip, [sp, #52]	; 0x34
   1546c:	ldr	r1, [sp, #48]	; 0x30
   15470:	ldr	r6, [sp, #64]	; 0x40
   15474:	ldr	r4, [sp, #60]	; 0x3c
   15478:	stm	sp, {r1, ip, lr}
   1547c:	mov	r0, r5
   15480:	ldr	r3, [sp, #44]	; 0x2c
   15484:	ldr	r2, [sp, #40]	; 0x28
   15488:	str	r6, [sp, #16]
   1548c:	str	r4, [sp, #12]
   15490:	ldr	r1, [pc, #508]	; 15694 <argp_parse@@Base+0x1e14>
   15494:	bl	113fc <fprintf@plt>
   15498:	add	sp, sp, #84	; 0x54
   1549c:	pop	{r4, r5, r6, lr}
   154a0:	add	sp, sp, #4
   154a4:	bx	lr
   154a8:	ldr	ip, [sp, #72]	; 0x48
   154ac:	ldr	r1, [sp, #68]	; 0x44
   154b0:	ldr	lr, [sp, #56]	; 0x38
   154b4:	str	ip, [sp, #24]
   154b8:	str	r1, [sp, #20]
   154bc:	ldr	ip, [sp, #52]	; 0x34
   154c0:	ldr	r1, [sp, #48]	; 0x30
   154c4:	ldr	r6, [sp, #64]	; 0x40
   154c8:	ldr	r4, [sp, #60]	; 0x3c
   154cc:	stm	sp, {r1, ip, lr}
   154d0:	mov	r0, r5
   154d4:	ldr	r3, [sp, #44]	; 0x2c
   154d8:	ldr	r2, [sp, #40]	; 0x28
   154dc:	str	r6, [sp, #16]
   154e0:	str	r4, [sp, #12]
   154e4:	ldr	r1, [pc, #428]	; 15698 <argp_parse@@Base+0x1e18>
   154e8:	bl	113fc <fprintf@plt>
   154ec:	b	15498 <argp_parse@@Base+0x1c18>
   154f0:	mov	r0, r5
   154f4:	ldr	r2, [sp, #40]	; 0x28
   154f8:	ldr	r1, [pc, #412]	; 1569c <argp_parse@@Base+0x1e1c>
   154fc:	bl	113fc <fprintf@plt>
   15500:	b	15498 <argp_parse@@Base+0x1c18>
   15504:	mov	r0, r5
   15508:	ldr	r3, [sp, #44]	; 0x2c
   1550c:	ldr	r2, [sp, #40]	; 0x28
   15510:	ldr	r1, [pc, #392]	; 156a0 <argp_parse@@Base+0x1e20>
   15514:	bl	113fc <fprintf@plt>
   15518:	b	15498 <argp_parse@@Base+0x1c18>
   1551c:	ldr	r1, [sp, #48]	; 0x30
   15520:	ldr	r3, [sp, #44]	; 0x2c
   15524:	str	r1, [sp]
   15528:	ldr	r2, [sp, #40]	; 0x28
   1552c:	mov	r0, r5
   15530:	ldr	r1, [pc, #364]	; 156a4 <argp_parse@@Base+0x1e24>
   15534:	bl	113fc <fprintf@plt>
   15538:	b	15498 <argp_parse@@Base+0x1c18>
   1553c:	ldr	r1, [sp, #48]	; 0x30
   15540:	ldr	ip, [sp, #52]	; 0x34
   15544:	ldr	r3, [sp, #44]	; 0x2c
   15548:	ldr	r2, [sp, #40]	; 0x28
   1554c:	stm	sp, {r1, ip}
   15550:	mov	r0, r5
   15554:	ldr	r1, [pc, #332]	; 156a8 <argp_parse@@Base+0x1e28>
   15558:	bl	113fc <fprintf@plt>
   1555c:	b	15498 <argp_parse@@Base+0x1c18>
   15560:	add	r1, sp, #48	; 0x30
   15564:	ldr	r3, [sp, #44]	; 0x2c
   15568:	ldm	r1, {r1, ip, lr}
   1556c:	mov	r0, r5
   15570:	ldr	r2, [sp, #40]	; 0x28
   15574:	stm	sp, {r1, ip, lr}
   15578:	ldr	r1, [pc, #300]	; 156ac <argp_parse@@Base+0x1e2c>
   1557c:	bl	113fc <fprintf@plt>
   15580:	b	15498 <argp_parse@@Base+0x1c18>
   15584:	add	r1, sp, #48	; 0x30
   15588:	ldr	r4, [sp, #60]	; 0x3c
   1558c:	ldm	r1, {r1, ip, lr}
   15590:	mov	r0, r5
   15594:	ldr	r3, [sp, #44]	; 0x2c
   15598:	ldr	r2, [sp, #40]	; 0x28
   1559c:	stm	sp, {r1, ip, lr}
   155a0:	str	r4, [sp, #12]
   155a4:	ldr	r1, [pc, #260]	; 156b0 <argp_parse@@Base+0x1e30>
   155a8:	bl	113fc <fprintf@plt>
   155ac:	b	15498 <argp_parse@@Base+0x1c18>
   155b0:	add	r1, sp, #48	; 0x30
   155b4:	ldr	r6, [sp, #64]	; 0x40
   155b8:	ldm	r1, {r1, ip, lr}
   155bc:	mov	r0, r5
   155c0:	ldr	r4, [sp, #60]	; 0x3c
   155c4:	ldr	r3, [sp, #44]	; 0x2c
   155c8:	stm	sp, {r1, ip, lr}
   155cc:	ldr	r2, [sp, #40]	; 0x28
   155d0:	str	r6, [sp, #16]
   155d4:	str	r4, [sp, #12]
   155d8:	ldr	r1, [pc, #212]	; 156b4 <argp_parse@@Base+0x1e34>
   155dc:	bl	113fc <fprintf@plt>
   155e0:	b	15498 <argp_parse@@Base+0x1c18>
   155e4:	ldr	r1, [sp, #68]	; 0x44
   155e8:	ldr	lr, [sp, #56]	; 0x38
   155ec:	ldr	ip, [sp, #52]	; 0x34
   155f0:	str	r1, [sp, #20]
   155f4:	ldr	r1, [sp, #48]	; 0x30
   155f8:	ldr	r6, [sp, #64]	; 0x40
   155fc:	ldr	r4, [sp, #60]	; 0x3c
   15600:	stm	sp, {r1, ip, lr}
   15604:	mov	r0, r5
   15608:	ldr	r3, [sp, #44]	; 0x2c
   1560c:	ldr	r2, [sp, #40]	; 0x28
   15610:	str	r6, [sp, #16]
   15614:	str	r4, [sp, #12]
   15618:	ldr	r1, [pc, #152]	; 156b8 <argp_parse@@Base+0x1e38>
   1561c:	bl	113fc <fprintf@plt>
   15620:	b	15498 <argp_parse@@Base+0x1c18>
   15624:	ldr	r1, [pc, #144]	; 156bc <argp_parse@@Base+0x1e3c>
   15628:	mov	r0, r5
   1562c:	bl	113fc <fprintf@plt>
   15630:	b	153e4 <argp_parse@@Base+0x1b64>
   15634:	mov	r4, lr
   15638:	b	153c0 <argp_parse@@Base+0x1b40>
   1563c:	mov	r4, #1
   15640:	b	153c0 <argp_parse@@Base+0x1b40>
   15644:	mov	r4, #2
   15648:	b	153c0 <argp_parse@@Base+0x1b40>
   1564c:	mov	r4, #3
   15650:	b	153c0 <argp_parse@@Base+0x1b40>
   15654:	mov	r4, #4
   15658:	b	153c0 <argp_parse@@Base+0x1b40>
   1565c:	mov	r4, #5
   15660:	b	153c0 <argp_parse@@Base+0x1b40>
   15664:	mov	r4, #6
   15668:	b	153c0 <argp_parse@@Base+0x1b40>
   1566c:	mov	r4, #7
   15670:	b	153c0 <argp_parse@@Base+0x1b40>
   15674:	mov	r4, #8
   15678:	b	153c0 <argp_parse@@Base+0x1b40>
   1567c:	andeq	ip, r1, r8, lsl #31
   15680:	andeq	r0, r0, r6, ror #15
   15684:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15688:	muleq	r1, ip, r2
   1568c:	andeq	ip, r1, r4, asr #31
   15690:	andeq	ip, r1, r0, lsr #31
   15694:			; <UNDEFINED> instruction: 0x0001d1b0
   15698:	andeq	sp, r1, ip, ror r1
   1569c:	andeq	sp, r1, r0, ror r0
   156a0:	andeq	sp, r1, r0, lsl #1
   156a4:	muleq	r1, r8, r0
   156a8:	strheq	sp, [r1], -r4
   156ac:	ldrdeq	sp, [r1], -r4
   156b0:	strdeq	sp, [r1], -r8
   156b4:	andeq	sp, r1, r0, lsr #2
   156b8:	andeq	sp, r1, ip, asr #2
   156bc:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   156c0:	ldr	r3, [pc, #56]	; 15700 <argp_parse@@Base+0x1e80>
   156c4:	push	{r4, lr}
   156c8:	mov	r0, #10
   156cc:	ldr	r1, [r3]
   156d0:	bl	114c8 <fputc@plt>
   156d4:	ldr	r1, [pc, #40]	; 15704 <argp_parse@@Base+0x1e84>
   156d8:	ldr	r0, [pc, #40]	; 15708 <argp_parse@@Base+0x1e88>
   156dc:	bl	11258 <printf@plt>
   156e0:	ldr	r1, [pc, #36]	; 1570c <argp_parse@@Base+0x1e8c>
   156e4:	ldr	r2, [pc, #36]	; 15710 <argp_parse@@Base+0x1e90>
   156e8:	ldr	r0, [pc, #36]	; 15714 <argp_parse@@Base+0x1e94>
   156ec:	bl	11258 <printf@plt>
   156f0:	ldr	r1, [pc, #32]	; 15718 <argp_parse@@Base+0x1e98>
   156f4:	ldr	r0, [pc, #32]	; 1571c <argp_parse@@Base+0x1e9c>
   156f8:	pop	{r4, lr}
   156fc:	b	11258 <printf@plt>
   15700:	strdeq	lr, [r2], -r4
   15704:	andeq	sp, r1, ip, ror #3
   15708:	andeq	sp, r1, r4, lsl #4
   1570c:	andeq	ip, r1, r4, lsr pc
   15710:	andeq	sp, r1, r8, lsl r2
   15714:	andeq	sp, r1, r0, asr #4
   15718:	andeq	sp, r1, r4, asr r2
   1571c:	andeq	sp, r1, r4, ror r2
   15720:	push	{r4, r5, r6, lr}
   15724:	mov	r6, r0
   15728:	mov	r5, r1
   1572c:	mov	r4, r2
   15730:	bl	1bb70 <argp_error@@Base+0x1994>
   15734:	cmp	r0, #0
   15738:	popne	{r4, r5, r6, pc}
   1573c:	cmp	r6, #0
   15740:	beq	15750 <argp_parse@@Base+0x1ed0>
   15744:	cmp	r5, #0
   15748:	cmpne	r4, #0
   1574c:	popeq	{r4, r5, r6, pc}
   15750:	bl	15d9c <argp_parse@@Base+0x251c>
   15754:	push	{r4, lr}
   15758:	bl	15e10 <argp_parse@@Base+0x2590>
   1575c:	cmp	r0, #0
   15760:	popne	{r4, pc}
   15764:	bl	15d9c <argp_parse@@Base+0x251c>
   15768:	push	{r4, lr}
   1576c:	bl	15e10 <argp_parse@@Base+0x2590>
   15770:	cmp	r0, #0
   15774:	popne	{r4, pc}
   15778:	bl	15d9c <argp_parse@@Base+0x251c>
   1577c:	push	{r4, lr}
   15780:	bl	15e10 <argp_parse@@Base+0x2590>
   15784:	cmp	r0, #0
   15788:	popne	{r4, pc}
   1578c:	bl	15d9c <argp_parse@@Base+0x251c>
   15790:	push	{r4, r5, r6, lr}
   15794:	mov	r5, r0
   15798:	mov	r4, r1
   1579c:	bl	15e3c <argp_parse@@Base+0x25bc>
   157a0:	cmp	r0, #0
   157a4:	popne	{r4, r5, r6, pc}
   157a8:	adds	r4, r4, #0
   157ac:	movne	r4, #1
   157b0:	cmp	r5, #0
   157b4:	orreq	r4, r4, #1
   157b8:	cmp	r4, #0
   157bc:	popeq	{r4, r5, r6, pc}
   157c0:	bl	15d9c <argp_parse@@Base+0x251c>
   157c4:	push	{r4, lr}
   157c8:	cmp	r1, #0
   157cc:	orreq	r1, r1, #1
   157d0:	bl	15e3c <argp_parse@@Base+0x25bc>
   157d4:	cmp	r0, #0
   157d8:	popne	{r4, pc}
   157dc:	bl	15d9c <argp_parse@@Base+0x251c>
   157e0:	push	{r4, r5, r6, lr}
   157e4:	mov	r6, r0
   157e8:	mov	r5, r1
   157ec:	mov	r4, r2
   157f0:	bl	1bb70 <argp_error@@Base+0x1994>
   157f4:	cmp	r0, #0
   157f8:	popne	{r4, r5, r6, pc}
   157fc:	cmp	r6, #0
   15800:	beq	15810 <argp_parse@@Base+0x1f90>
   15804:	cmp	r5, #0
   15808:	cmpne	r4, #0
   1580c:	popeq	{r4, r5, r6, pc}
   15810:	bl	15d9c <argp_parse@@Base+0x251c>
   15814:	cmp	r2, #0
   15818:	cmpne	r1, #0
   1581c:	moveq	r2, #1
   15820:	moveq	r1, r2
   15824:	push	{r4, lr}
   15828:	bl	1bb70 <argp_error@@Base+0x1994>
   1582c:	cmp	r0, #0
   15830:	popne	{r4, pc}
   15834:	bl	15d9c <argp_parse@@Base+0x251c>
   15838:	push	{r4, lr}
   1583c:	mov	r2, r1
   15840:	mov	r1, r0
   15844:	mov	r0, #0
   15848:	bl	1bb70 <argp_error@@Base+0x1994>
   1584c:	cmp	r0, #0
   15850:	popne	{r4, pc}
   15854:	bl	15d9c <argp_parse@@Base+0x251c>
   15858:	cmp	r1, #0
   1585c:	cmpne	r0, #0
   15860:	moveq	r2, #1
   15864:	movne	r2, r1
   15868:	moveq	r1, r2
   1586c:	movne	r1, r0
   15870:	push	{r4, lr}
   15874:	mov	r0, #0
   15878:	bl	1bb70 <argp_error@@Base+0x1994>
   1587c:	cmp	r0, #0
   15880:	popne	{r4, pc}
   15884:	bl	15d9c <argp_parse@@Base+0x251c>
   15888:	cmp	r0, #0
   1588c:	push	{r4, r5, r6, lr}
   15890:	mov	r5, r1
   15894:	ldr	r4, [r1]
   15898:	beq	158d4 <argp_parse@@Base+0x2054>
   1589c:	lsr	r2, r4, #1
   158a0:	add	r3, r2, #1
   158a4:	mvn	r3, r3
   158a8:	cmp	r4, r3
   158ac:	bhi	158f0 <argp_parse@@Base+0x2070>
   158b0:	add	r4, r4, #1
   158b4:	add	r4, r4, r2
   158b8:	mov	r1, r4
   158bc:	mov	r2, #1
   158c0:	bl	1bb70 <argp_error@@Base+0x1994>
   158c4:	cmp	r0, #0
   158c8:	beq	158f4 <argp_parse@@Base+0x2074>
   158cc:	str	r4, [r5]
   158d0:	pop	{r4, r5, r6, pc}
   158d4:	cmp	r4, #0
   158d8:	moveq	r4, #64	; 0x40
   158dc:	mov	r1, r4
   158e0:	mov	r2, #1
   158e4:	bl	1bb70 <argp_error@@Base+0x1994>
   158e8:	cmp	r0, #0
   158ec:	bne	158cc <argp_parse@@Base+0x204c>
   158f0:	bl	15d9c <argp_parse@@Base+0x251c>
   158f4:	cmp	r4, #0
   158f8:	bne	158f0 <argp_parse@@Base+0x2070>
   158fc:	str	r4, [r5]
   15900:	pop	{r4, r5, r6, pc}
   15904:	cmp	r0, #0
   15908:	push	{r4, r5, r6, lr}
   1590c:	mov	r5, r1
   15910:	ldr	r4, [r1]
   15914:	mov	r6, r2
   15918:	beq	1595c <argp_parse@@Base+0x20dc>
   1591c:	lsr	r1, r4, #1
   15920:	add	r3, r1, #1
   15924:	mvn	r3, r3
   15928:	cmp	r4, r3
   1592c:	bhi	15994 <argp_parse@@Base+0x2114>
   15930:	add	r4, r4, #1
   15934:	add	r4, r4, r1
   15938:	mov	r1, r4
   1593c:	bl	1bb70 <argp_error@@Base+0x1994>
   15940:	cmp	r0, #0
   15944:	bne	15954 <argp_parse@@Base+0x20d4>
   15948:	cmp	r4, #0
   1594c:	cmpne	r6, #0
   15950:	bne	15994 <argp_parse@@Base+0x2114>
   15954:	str	r4, [r5]
   15958:	pop	{r4, r5, r6, pc}
   1595c:	cmp	r4, #0
   15960:	bne	1597c <argp_parse@@Base+0x20fc>
   15964:	mov	r1, r2
   15968:	mov	r0, #64	; 0x40
   1596c:	bl	1c42c <argp_error@@Base+0x2250>
   15970:	cmp	r0, #0
   15974:	movne	r4, r0
   15978:	addeq	r4, r0, #1
   1597c:	mov	r2, r6
   15980:	mov	r1, r4
   15984:	mov	r0, #0
   15988:	bl	1bb70 <argp_error@@Base+0x1994>
   1598c:	cmp	r0, #0
   15990:	bne	15954 <argp_parse@@Base+0x20d4>
   15994:	bl	15d9c <argp_parse@@Base+0x251c>
   15998:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1599c:	sub	sp, sp, #12
   159a0:	ldr	r6, [r1]
   159a4:	mov	r8, r1
   159a8:	mov	r9, r0
   159ac:	asrs	r4, r6, #1
   159b0:	mov	sl, r2
   159b4:	mov	fp, r3
   159b8:	ldr	r7, [sp, #48]	; 0x30
   159bc:	bmi	15b38 <argp_parse@@Base+0x22b8>
   159c0:	mvn	r1, #-2147483648	; 0x80000000
   159c4:	sub	r1, r1, r4
   159c8:	cmp	r6, r1
   159cc:	movle	r1, #0
   159d0:	movgt	r1, #1
   159d4:	mvn	r3, fp
   159d8:	cmp	r1, #0
   159dc:	addeq	r4, r4, r6
   159e0:	mvnne	r4, #-2147483648	; 0x80000000
   159e4:	lsr	r3, r3, #31
   159e8:	cmp	fp, r4
   159ec:	movge	r2, #0
   159f0:	andlt	r2, r3, #1
   159f4:	cmp	r2, #0
   159f8:	beq	15ae8 <argp_parse@@Base+0x2268>
   159fc:	cmp	r7, #0
   15a00:	blt	15bd0 <argp_parse@@Base+0x2350>
   15a04:	bne	15bc8 <argp_parse@@Base+0x2348>
   15a08:	mov	r5, #64	; 0x40
   15a0c:	mov	r1, r7
   15a10:	mov	r0, r5
   15a14:	str	r3, [sp, #4]
   15a18:	bl	1c638 <argp_error@@Base+0x245c>
   15a1c:	mov	r1, r7
   15a20:	mov	r4, r0
   15a24:	mov	r0, r5
   15a28:	bl	1c858 <argp_error@@Base+0x267c>
   15a2c:	ldr	r3, [sp, #4]
   15a30:	sub	r5, r5, r1
   15a34:	cmp	r9, #0
   15a38:	sub	r2, r4, r6
   15a3c:	streq	r9, [r8]
   15a40:	cmp	r2, sl
   15a44:	bge	15ac8 <argp_parse@@Base+0x2248>
   15a48:	cmp	sl, #0
   15a4c:	blt	15b68 <argp_parse@@Base+0x22e8>
   15a50:	cmp	r6, #0
   15a54:	blt	15a74 <argp_parse@@Base+0x21f4>
   15a58:	mvn	r2, #-2147483648	; 0x80000000
   15a5c:	sub	r2, r2, sl
   15a60:	cmp	r6, r2
   15a64:	movle	r2, #0
   15a68:	movgt	r2, #1
   15a6c:	cmp	r2, #0
   15a70:	bne	15b64 <argp_parse@@Base+0x22e4>
   15a74:	add	r6, r6, sl
   15a78:	cmp	fp, r6
   15a7c:	movge	r3, #0
   15a80:	andlt	r3, r3, #1
   15a84:	cmp	r3, #0
   15a88:	mov	r4, r6
   15a8c:	bne	15b64 <argp_parse@@Base+0x22e4>
   15a90:	cmp	r7, #0
   15a94:	blt	15b7c <argp_parse@@Base+0x22fc>
   15a98:	beq	15ac4 <argp_parse@@Base+0x2244>
   15a9c:	cmp	r6, #0
   15aa0:	blt	15c20 <argp_parse@@Base+0x23a0>
   15aa4:	mov	r1, r7
   15aa8:	mvn	r0, #-2147483648	; 0x80000000
   15aac:	bl	1c638 <argp_error@@Base+0x245c>
   15ab0:	cmp	r6, r0
   15ab4:	movle	r0, #0
   15ab8:	movgt	r0, #1
   15abc:	cmp	r0, #0
   15ac0:	bne	15b64 <argp_parse@@Base+0x22e4>
   15ac4:	mul	r5, r6, r7
   15ac8:	mov	r1, r5
   15acc:	mov	r0, r9
   15ad0:	bl	15e3c <argp_parse@@Base+0x25bc>
   15ad4:	cmp	r0, #0
   15ad8:	beq	15b4c <argp_parse@@Base+0x22cc>
   15adc:	str	r4, [r8]
   15ae0:	add	sp, sp, #12
   15ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ae8:	cmp	r7, #0
   15aec:	blt	15ba8 <argp_parse@@Base+0x2328>
   15af0:	beq	15a08 <argp_parse@@Base+0x2188>
   15af4:	cmp	r4, #0
   15af8:	blt	15bd8 <argp_parse@@Base+0x2358>
   15afc:	mov	r1, r7
   15b00:	mvn	r0, #-2147483648	; 0x80000000
   15b04:	str	r3, [sp, #4]
   15b08:	bl	1c638 <argp_error@@Base+0x245c>
   15b0c:	ldr	r3, [sp, #4]
   15b10:	cmp	r0, r4
   15b14:	movge	r0, #0
   15b18:	movlt	r0, #1
   15b1c:	cmp	r0, #0
   15b20:	mvnne	r5, #-2147483648	; 0x80000000
   15b24:	bne	15a0c <argp_parse@@Base+0x218c>
   15b28:	mul	r5, r7, r4
   15b2c:	cmp	r5, #63	; 0x3f
   15b30:	bgt	15a34 <argp_parse@@Base+0x21b4>
   15b34:	b	15a08 <argp_parse@@Base+0x2188>
   15b38:	rsb	r1, r4, #-2147483648	; 0x80000000
   15b3c:	cmp	r6, r1
   15b40:	movge	r1, #0
   15b44:	movlt	r1, #1
   15b48:	b	159d4 <argp_parse@@Base+0x2154>
   15b4c:	adds	r5, r5, #0
   15b50:	movne	r5, #1
   15b54:	cmp	r9, #0
   15b58:	orreq	r5, r5, #1
   15b5c:	cmp	r5, #0
   15b60:	beq	15adc <argp_parse@@Base+0x225c>
   15b64:	bl	15d9c <argp_parse@@Base+0x251c>
   15b68:	rsb	r2, sl, #-2147483648	; 0x80000000
   15b6c:	cmp	r6, r2
   15b70:	movge	r2, #0
   15b74:	movlt	r2, #1
   15b78:	b	15a6c <argp_parse@@Base+0x21ec>
   15b7c:	cmp	r6, #0
   15b80:	blt	15c04 <argp_parse@@Base+0x2384>
   15b84:	cmn	r7, #1
   15b88:	beq	15ac4 <argp_parse@@Base+0x2244>
   15b8c:	mov	r1, r7
   15b90:	mov	r0, #-2147483648	; 0x80000000
   15b94:	bl	1c638 <argp_error@@Base+0x245c>
   15b98:	cmp	r6, r0
   15b9c:	movle	r0, #0
   15ba0:	movgt	r0, #1
   15ba4:	b	15abc <argp_parse@@Base+0x223c>
   15ba8:	cmp	r4, #0
   15bac:	blt	15c44 <argp_parse@@Base+0x23c4>
   15bb0:	cmn	r7, #1
   15bb4:	beq	15b28 <argp_parse@@Base+0x22a8>
   15bb8:	str	r3, [sp, #4]
   15bbc:	mov	r1, r7
   15bc0:	mov	r0, #-2147483648	; 0x80000000
   15bc4:	b	15b08 <argp_parse@@Base+0x2288>
   15bc8:	mov	r4, fp
   15bcc:	b	15afc <argp_parse@@Base+0x227c>
   15bd0:	mov	r4, fp
   15bd4:	b	15bb0 <argp_parse@@Base+0x2330>
   15bd8:	cmn	r4, #1
   15bdc:	beq	15b28 <argp_parse@@Base+0x22a8>
   15be0:	mov	r1, r4
   15be4:	mov	r0, #-2147483648	; 0x80000000
   15be8:	str	r3, [sp, #4]
   15bec:	bl	1c638 <argp_error@@Base+0x245c>
   15bf0:	ldr	r3, [sp, #4]
   15bf4:	cmp	r7, r0
   15bf8:	movle	r0, #0
   15bfc:	movgt	r0, #1
   15c00:	b	15b1c <argp_parse@@Base+0x229c>
   15c04:	mov	r1, r7
   15c08:	mvn	r0, #-2147483648	; 0x80000000
   15c0c:	bl	1c638 <argp_error@@Base+0x245c>
   15c10:	cmp	r6, r0
   15c14:	movge	r0, #0
   15c18:	movlt	r0, #1
   15c1c:	b	15abc <argp_parse@@Base+0x223c>
   15c20:	cmn	r6, #1
   15c24:	beq	15ac4 <argp_parse@@Base+0x2244>
   15c28:	mov	r1, r6
   15c2c:	mov	r0, #-2147483648	; 0x80000000
   15c30:	bl	1c638 <argp_error@@Base+0x245c>
   15c34:	cmp	r7, r0
   15c38:	movle	r0, #0
   15c3c:	movgt	r0, #1
   15c40:	b	15abc <argp_parse@@Base+0x223c>
   15c44:	mov	r1, r7
   15c48:	mvn	r0, #-2147483648	; 0x80000000
   15c4c:	str	r3, [sp, #4]
   15c50:	bl	1c638 <argp_error@@Base+0x245c>
   15c54:	ldr	r3, [sp, #4]
   15c58:	cmp	r0, r4
   15c5c:	movle	r0, #0
   15c60:	movgt	r0, #1
   15c64:	b	15b1c <argp_parse@@Base+0x229c>
   15c68:	push	{r4, lr}
   15c6c:	mov	r1, #1
   15c70:	bl	15dc8 <argp_parse@@Base+0x2548>
   15c74:	cmp	r0, #0
   15c78:	popne	{r4, pc}
   15c7c:	bl	15d9c <argp_parse@@Base+0x251c>
   15c80:	push	{r4, lr}
   15c84:	mov	r1, #1
   15c88:	bl	15dc8 <argp_parse@@Base+0x2548>
   15c8c:	cmp	r0, #0
   15c90:	popne	{r4, pc}
   15c94:	bl	15d9c <argp_parse@@Base+0x251c>
   15c98:	push	{r4, lr}
   15c9c:	bl	15dc8 <argp_parse@@Base+0x2548>
   15ca0:	cmp	r0, #0
   15ca4:	popne	{r4, pc}
   15ca8:	bl	15d9c <argp_parse@@Base+0x251c>
   15cac:	push	{r4, lr}
   15cb0:	bl	15dc8 <argp_parse@@Base+0x2548>
   15cb4:	cmp	r0, #0
   15cb8:	popne	{r4, pc}
   15cbc:	bl	15d9c <argp_parse@@Base+0x251c>
   15cc0:	push	{r4, r5, r6, lr}
   15cc4:	mov	r6, r0
   15cc8:	mov	r0, r1
   15ccc:	mov	r4, r1
   15cd0:	bl	15e10 <argp_parse@@Base+0x2590>
   15cd4:	subs	r5, r0, #0
   15cd8:	beq	15cf0 <argp_parse@@Base+0x2470>
   15cdc:	mov	r2, r4
   15ce0:	mov	r1, r6
   15ce4:	bl	112b8 <memcpy@plt>
   15ce8:	mov	r0, r5
   15cec:	pop	{r4, r5, r6, pc}
   15cf0:	bl	15d9c <argp_parse@@Base+0x251c>
   15cf4:	push	{r4, r5, r6, lr}
   15cf8:	mov	r6, r0
   15cfc:	mov	r0, r1
   15d00:	mov	r4, r1
   15d04:	bl	15e10 <argp_parse@@Base+0x2590>
   15d08:	subs	r5, r0, #0
   15d0c:	beq	15d24 <argp_parse@@Base+0x24a4>
   15d10:	mov	r2, r4
   15d14:	mov	r1, r6
   15d18:	bl	112b8 <memcpy@plt>
   15d1c:	mov	r0, r5
   15d20:	pop	{r4, r5, r6, pc}
   15d24:	bl	15d9c <argp_parse@@Base+0x251c>
   15d28:	push	{r4, r5, r6, lr}
   15d2c:	mov	r6, r0
   15d30:	add	r0, r1, #1
   15d34:	mov	r4, r1
   15d38:	bl	15e10 <argp_parse@@Base+0x2590>
   15d3c:	subs	r5, r0, #0
   15d40:	beq	15d60 <argp_parse@@Base+0x24e0>
   15d44:	mov	r3, #0
   15d48:	mov	r1, r6
   15d4c:	strb	r3, [r5, r4]
   15d50:	mov	r2, r4
   15d54:	bl	112b8 <memcpy@plt>
   15d58:	mov	r0, r5
   15d5c:	pop	{r4, r5, r6, pc}
   15d60:	bl	15d9c <argp_parse@@Base+0x251c>
   15d64:	push	{r4, r5, r6, lr}
   15d68:	mov	r6, r0
   15d6c:	bl	113e4 <strlen@plt>
   15d70:	add	r4, r0, #1
   15d74:	mov	r0, r4
   15d78:	bl	15e10 <argp_parse@@Base+0x2590>
   15d7c:	subs	r5, r0, #0
   15d80:	beq	15d98 <argp_parse@@Base+0x2518>
   15d84:	mov	r2, r4
   15d88:	mov	r1, r6
   15d8c:	bl	112b8 <memcpy@plt>
   15d90:	mov	r0, r5
   15d94:	pop	{r4, r5, r6, pc}
   15d98:	bl	15d9c <argp_parse@@Base+0x251c>
   15d9c:	ldr	r1, [pc, #24]	; 15dbc <argp_parse@@Base+0x253c>
   15da0:	push	{r4, lr}
   15da4:	ldr	r0, [r1]
   15da8:	ldr	r3, [pc, #16]	; 15dc0 <argp_parse@@Base+0x2540>
   15dac:	ldr	r2, [pc, #16]	; 15dc4 <argp_parse@@Base+0x2544>
   15db0:	mov	r1, #0
   15db4:	bl	11354 <error@plt>
   15db8:	bl	11558 <abort@plt>
   15dbc:	ldrdeq	lr, [r2], -r0
   15dc0:	andeq	sp, r1, ip, asr #5
   15dc4:			; <UNDEFINED> instruction: 0x0001c9b4
   15dc8:	cmp	r1, #0
   15dcc:	cmpne	r0, #0
   15dd0:	moveq	r1, #1
   15dd4:	moveq	r0, r1
   15dd8:	umull	r2, r3, r0, r1
   15ddc:	adds	r3, r3, #0
   15de0:	movne	r3, #1
   15de4:	cmp	r2, #0
   15de8:	blt	15df8 <argp_parse@@Base+0x2578>
   15dec:	cmp	r3, #0
   15df0:	bne	15df8 <argp_parse@@Base+0x2578>
   15df4:	b	11204 <calloc@plt>
   15df8:	push	{r4, lr}
   15dfc:	bl	11408 <__errno_location@plt>
   15e00:	mov	r3, #12
   15e04:	str	r3, [r0]
   15e08:	mov	r0, #0
   15e0c:	pop	{r4, pc}
   15e10:	cmp	r0, #0
   15e14:	moveq	r0, #1
   15e18:	cmp	r0, #0
   15e1c:	blt	15e24 <argp_parse@@Base+0x25a4>
   15e20:	b	11384 <malloc@plt>
   15e24:	push	{r4, lr}
   15e28:	bl	11408 <__errno_location@plt>
   15e2c:	mov	r3, #12
   15e30:	str	r3, [r0]
   15e34:	mov	r0, #0
   15e38:	pop	{r4, pc}
   15e3c:	cmp	r0, #0
   15e40:	beq	15e64 <argp_parse@@Base+0x25e4>
   15e44:	cmp	r1, #0
   15e48:	push	{lr}		; (str lr, [sp, #-4]!)
   15e4c:	sub	sp, sp, #12
   15e50:	beq	15e6c <argp_parse@@Base+0x25ec>
   15e54:	blt	15e84 <argp_parse@@Base+0x2604>
   15e58:	add	sp, sp, #12
   15e5c:	pop	{lr}		; (ldr lr, [sp], #4)
   15e60:	b	11300 <realloc@plt>
   15e64:	mov	r0, r1
   15e68:	b	15e10 <argp_parse@@Base+0x2590>
   15e6c:	str	r1, [sp, #4]
   15e70:	bl	147fc <argp_parse@@Base+0xf7c>
   15e74:	ldr	r3, [sp, #4]
   15e78:	mov	r0, r3
   15e7c:	add	sp, sp, #12
   15e80:	pop	{pc}		; (ldr pc, [sp], #4)
   15e84:	bl	11408 <__errno_location@plt>
   15e88:	mov	r2, #12
   15e8c:	mov	r3, #0
   15e90:	str	r2, [r0]
   15e94:	b	15e78 <argp_parse@@Base+0x25f8>
   15e98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e9c:	mov	r7, r3
   15ea0:	ldr	sl, [r0, #12]
   15ea4:	sub	sp, sp, #36	; 0x24
   15ea8:	ldr	r3, [r0, #16]
   15eac:	cmp	sl, #0
   15eb0:	mov	fp, r0
   15eb4:	mov	r6, r2
   15eb8:	str	r3, [sp, #16]
   15ebc:	mov	r9, r1
   15ec0:	ldr	r8, [sp, #72]	; 0x48
   15ec4:	ldr	r5, [sp, #76]	; 0x4c
   15ec8:	beq	16298 <argp_parse@@Base+0x2a18>
   15ecc:	mov	r1, #11
   15ed0:	mov	r0, sl
   15ed4:	bl	113f0 <strchr@plt>
   15ed8:	cmp	r6, #0
   15edc:	bne	161b4 <argp_parse@@Base+0x2934>
   15ee0:	cmp	r0, #0
   15ee4:	ldr	r3, [fp, #20]
   15ee8:	beq	163f0 <argp_parse@@Base+0x2b70>
   15eec:	cmp	r3, #0
   15ef0:	sub	r4, r0, sl
   15ef4:	beq	16388 <argp_parse@@Base+0x2b08>
   15ef8:	cmp	r4, #0
   15efc:	beq	16328 <argp_parse@@Base+0x2aa8>
   15f00:	mov	r0, sl
   15f04:	mov	r1, r4
   15f08:	bl	112ac <strndup@plt>
   15f0c:	mov	r3, #1
   15f10:	str	r3, [sp, #24]
   15f14:	mov	sl, r0
   15f18:	adds	r3, r0, #0
   15f1c:	movne	r3, #1
   15f20:	str	r3, [sp, #20]
   15f24:	mov	r1, r9
   15f28:	mov	r0, fp
   15f2c:	bl	146a0 <argp_parse@@Base+0xe20>
   15f30:	ldr	r3, [fp, #20]
   15f34:	str	r0, [sp, #12]
   15f38:	ldr	r0, [pc, #1272]	; 16438 <argp_parse@@Base+0x2bb8>
   15f3c:	ldr	r2, [sp, #12]
   15f40:	mov	r1, sl
   15f44:	blx	r3
   15f48:	subs	r3, r0, #0
   15f4c:	beq	162d8 <argp_parse@@Base+0x2a58>
   15f50:	cmp	r7, #0
   15f54:	beq	15f78 <argp_parse@@Base+0x26f8>
   15f58:	ldr	r2, [r5, #28]
   15f5c:	ldr	r1, [r5, #32]
   15f60:	cmp	r2, r1
   15f64:	bcs	162e0 <argp_parse@@Base+0x2a60>
   15f68:	add	r0, r2, #1
   15f6c:	mov	r1, #10
   15f70:	str	r0, [r5, #28]
   15f74:	strb	r1, [r2]
   15f78:	ldr	r2, [sp, #24]
   15f7c:	cmp	sl, r3
   15f80:	movne	r2, #0
   15f84:	andeq	r2, r2, #1
   15f88:	cmp	r2, #0
   15f8c:	beq	161f8 <argp_parse@@Base+0x2978>
   15f90:	ldr	r0, [r5, #28]
   15f94:	ldr	r1, [r5, #32]
   15f98:	add	r2, r0, r4
   15f9c:	cmp	r1, r2
   15fa0:	bcs	16258 <argp_parse@@Base+0x29d8>
   15fa4:	mov	r1, r4
   15fa8:	mov	r0, r5
   15fac:	str	r3, [sp, #24]
   15fb0:	bl	1c1e4 <argp_error@@Base+0x2008>
   15fb4:	ldr	r3, [sp, #24]
   15fb8:	cmp	r0, #0
   15fbc:	bne	16254 <argp_parse@@Base+0x29d4>
   15fc0:	ldr	r4, [r5, #28]
   15fc4:	ldr	r1, [r5, #24]
   15fc8:	ldr	r2, [r5, #16]
   15fcc:	sub	r4, r4, r1
   15fd0:	cmp	r4, r2
   15fd4:	bhi	1627c <argp_parse@@Base+0x29fc>
   15fd8:	ldr	r2, [r5, #20]
   15fdc:	ldr	r1, [r5, #4]
   15fe0:	bic	r2, r2, r2, asr #31
   15fe4:	cmp	r1, r2
   15fe8:	bcs	1600c <argp_parse@@Base+0x278c>
   15fec:	ldr	r2, [r5, #28]
   15ff0:	ldr	r1, [r5, #32]
   15ff4:	cmp	r2, r1
   15ff8:	bcs	16304 <argp_parse@@Base+0x2a84>
   15ffc:	add	r0, r2, #1
   16000:	mov	r1, #10
   16004:	str	r0, [r5, #28]
   16008:	strb	r1, [r2]
   1600c:	cmp	sl, r3
   16010:	moveq	r4, #1
   16014:	beq	16024 <argp_parse@@Base+0x27a4>
   16018:	mov	r0, r3
   1601c:	bl	147fc <argp_parse@@Base+0xf7c>
   16020:	mov	r4, #1
   16024:	ldr	r3, [sp, #20]
   16028:	cmp	r3, #0
   1602c:	beq	16044 <argp_parse@@Base+0x27c4>
   16030:	ldr	r3, [fp, #20]
   16034:	cmp	r3, #0
   16038:	beq	16128 <argp_parse@@Base+0x28a8>
   1603c:	mov	r0, sl
   16040:	bl	147fc <argp_parse@@Base+0xf7c>
   16044:	cmp	r6, #0
   16048:	beq	16128 <argp_parse@@Base+0x28a8>
   1604c:	ldr	r3, [fp, #20]
   16050:	cmp	r3, #0
   16054:	beq	16128 <argp_parse@@Base+0x28a8>
   16058:	ldr	r2, [sp, #12]
   1605c:	mov	r1, #0
   16060:	ldr	r0, [pc, #980]	; 1643c <argp_parse@@Base+0x2bbc>
   16064:	blx	r3
   16068:	subs	sl, r0, #0
   1606c:	beq	16128 <argp_parse@@Base+0x28a8>
   16070:	orrs	r3, r7, r4
   16074:	beq	16098 <argp_parse@@Base+0x2818>
   16078:	ldr	r3, [r5, #28]
   1607c:	ldr	r2, [r5, #32]
   16080:	cmp	r3, r2
   16084:	bcs	163c0 <argp_parse@@Base+0x2b40>
   16088:	add	r1, r3, #1
   1608c:	mov	r2, #10
   16090:	str	r1, [r5, #28]
   16094:	strb	r2, [r3]
   16098:	mov	r0, sl
   1609c:	bl	113e4 <strlen@plt>
   160a0:	subs	r4, r0, #0
   160a4:	beq	160d0 <argp_parse@@Base+0x2850>
   160a8:	ldr	r0, [r5, #28]
   160ac:	ldr	r2, [r5, #32]
   160b0:	add	r3, r0, r4
   160b4:	cmp	r2, r3
   160b8:	bcs	16338 <argp_parse@@Base+0x2ab8>
   160bc:	mov	r1, r4
   160c0:	mov	r0, r5
   160c4:	bl	1c1e4 <argp_error@@Base+0x2008>
   160c8:	cmp	r0, #0
   160cc:	bne	16334 <argp_parse@@Base+0x2ab4>
   160d0:	mov	r0, sl
   160d4:	bl	147fc <argp_parse@@Base+0xf7c>
   160d8:	ldr	r3, [r5, #28]
   160dc:	ldr	r1, [r5, #24]
   160e0:	ldr	r2, [r5, #16]
   160e4:	sub	r3, r3, r1
   160e8:	cmp	r3, r2
   160ec:	bhi	16354 <argp_parse@@Base+0x2ad4>
   160f0:	ldr	r3, [r5, #20]
   160f4:	ldr	r2, [r5, #4]
   160f8:	bic	r3, r3, r3, asr #31
   160fc:	cmp	r2, r3
   16100:	bcs	16290 <argp_parse@@Base+0x2a10>
   16104:	ldr	r3, [r5, #28]
   16108:	ldr	r2, [r5, #32]
   1610c:	cmp	r3, r2
   16110:	bcs	163a4 <argp_parse@@Base+0x2b24>
   16114:	mov	r4, #1
   16118:	add	r2, r3, r4
   1611c:	str	r2, [r5, #28]
   16120:	mov	r2, #10
   16124:	strb	r2, [r3]
   16128:	ldr	fp, [sp, #16]
   1612c:	cmp	fp, #0
   16130:	beq	161a8 <argp_parse@@Base+0x2928>
   16134:	ldr	r3, [fp]
   16138:	cmp	r3, #0
   1613c:	beq	161a8 <argp_parse@@Base+0x2928>
   16140:	eor	r2, r4, #1
   16144:	and	r2, r2, #1
   16148:	clz	sl, r8
   1614c:	lsr	sl, sl, #5
   16150:	orrs	r2, sl, r2
   16154:	bne	16170 <argp_parse@@Base+0x28f0>
   16158:	b	163dc <argp_parse@@Base+0x2b5c>
   1615c:	cmp	r4, #0
   16160:	movne	r2, sl
   16164:	orreq	r2, sl, #1
   16168:	cmp	r2, #0
   1616c:	beq	161a8 <argp_parse@@Base+0x2928>
   16170:	orrs	r2, r7, r4
   16174:	mov	r0, r3
   16178:	str	r5, [sp, #4]
   1617c:	movne	r3, #1
   16180:	moveq	r3, #0
   16184:	str	r8, [sp]
   16188:	mov	r2, r6
   1618c:	mov	r1, r9
   16190:	bl	15e98 <argp_parse@@Base+0x2618>
   16194:	ldr	r3, [fp, #16]
   16198:	add	fp, fp, #16
   1619c:	cmp	r3, #0
   161a0:	orr	r4, r4, r0
   161a4:	bne	1615c <argp_parse@@Base+0x28dc>
   161a8:	mov	r0, r4
   161ac:	add	sp, sp, #36	; 0x24
   161b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   161b4:	cmp	r0, #0
   161b8:	addne	sl, r0, #1
   161bc:	beq	16380 <argp_parse@@Base+0x2b00>
   161c0:	ldr	r3, [fp, #20]
   161c4:	cmp	r3, #0
   161c8:	beq	16360 <argp_parse@@Base+0x2ae0>
   161cc:	mov	r3, #0
   161d0:	mov	r1, r9
   161d4:	mov	r0, fp
   161d8:	mov	r4, r3
   161dc:	str	r3, [sp, #20]
   161e0:	bl	146a0 <argp_parse@@Base+0xe20>
   161e4:	str	r4, [sp, #24]
   161e8:	ldr	r3, [fp, #20]
   161ec:	str	r0, [sp, #12]
   161f0:	ldr	r0, [pc, #584]	; 16440 <argp_parse@@Base+0x2bc0>
   161f4:	b	15f3c <argp_parse@@Base+0x26bc>
   161f8:	mov	r0, r3
   161fc:	str	r3, [sp, #24]
   16200:	bl	113e4 <strlen@plt>
   16204:	ldr	r3, [sp, #24]
   16208:	subs	r4, r0, #0
   1620c:	beq	15fc0 <argp_parse@@Base+0x2740>
   16210:	ldr	r0, [r5, #28]
   16214:	ldr	r1, [r5, #32]
   16218:	add	r2, r0, r4
   1621c:	cmp	r1, r2
   16220:	bcs	16244 <argp_parse@@Base+0x29c4>
   16224:	mov	r1, r4
   16228:	mov	r0, r5
   1622c:	str	r3, [sp, #24]
   16230:	bl	1c1e4 <argp_error@@Base+0x2008>
   16234:	ldr	r3, [sp, #24]
   16238:	cmp	r0, #0
   1623c:	beq	15fc0 <argp_parse@@Base+0x2740>
   16240:	ldr	r0, [r5, #28]
   16244:	mov	r2, r4
   16248:	mov	r1, r3
   1624c:	str	r3, [sp, #24]
   16250:	b	16264 <argp_parse@@Base+0x29e4>
   16254:	ldr	r0, [r5, #28]
   16258:	mov	r2, r4
   1625c:	mov	r1, sl
   16260:	str	r3, [sp, #24]
   16264:	bl	112b8 <memcpy@plt>
   16268:	ldr	r2, [r5, #28]
   1626c:	ldr	r3, [sp, #24]
   16270:	add	r4, r2, r4
   16274:	str	r4, [r5, #28]
   16278:	b	15fc4 <argp_parse@@Base+0x2744>
   1627c:	mov	r0, r5
   16280:	str	r3, [sp, #24]
   16284:	bl	1bc38 <argp_error@@Base+0x1a5c>
   16288:	ldr	r3, [sp, #24]
   1628c:	b	15fd8 <argp_parse@@Base+0x2758>
   16290:	mov	r4, #1
   16294:	b	16128 <argp_parse@@Base+0x28a8>
   16298:	ldr	r4, [r0, #20]
   1629c:	cmp	r4, #0
   162a0:	beq	163e8 <argp_parse@@Base+0x2b68>
   162a4:	bl	146a0 <argp_parse@@Base+0xe20>
   162a8:	cmp	r6, #0
   162ac:	ldr	r3, [fp, #20]
   162b0:	strne	sl, [sp, #20]
   162b4:	strne	sl, [sp, #24]
   162b8:	movne	r4, sl
   162bc:	streq	r6, [sp, #20]
   162c0:	streq	r6, [sp, #24]
   162c4:	moveq	r4, r6
   162c8:	str	r0, [sp, #12]
   162cc:	ldrne	r0, [pc, #364]	; 16440 <argp_parse@@Base+0x2bc0>
   162d0:	ldreq	r0, [pc, #352]	; 16438 <argp_parse@@Base+0x2bb8>
   162d4:	b	15f3c <argp_parse@@Base+0x26bc>
   162d8:	mov	r4, r3
   162dc:	b	16024 <argp_parse@@Base+0x27a4>
   162e0:	mov	r1, #1
   162e4:	mov	r0, r5
   162e8:	str	r3, [sp, #28]
   162ec:	bl	1c1e4 <argp_error@@Base+0x2008>
   162f0:	ldr	r3, [sp, #28]
   162f4:	cmp	r0, #0
   162f8:	beq	15f78 <argp_parse@@Base+0x26f8>
   162fc:	ldr	r2, [r5, #28]
   16300:	b	15f68 <argp_parse@@Base+0x26e8>
   16304:	mov	r1, #1
   16308:	mov	r0, r5
   1630c:	str	r3, [sp, #24]
   16310:	bl	1c1e4 <argp_error@@Base+0x2008>
   16314:	ldr	r3, [sp, #24]
   16318:	cmp	r0, #0
   1631c:	beq	1600c <argp_parse@@Base+0x278c>
   16320:	ldr	r2, [r5, #28]
   16324:	b	15ffc <argp_parse@@Base+0x277c>
   16328:	str	r4, [sp, #20]
   1632c:	str	r4, [sp, #24]
   16330:	b	15f24 <argp_parse@@Base+0x26a4>
   16334:	ldr	r0, [r5, #28]
   16338:	mov	r2, r4
   1633c:	mov	r1, sl
   16340:	bl	112b8 <memcpy@plt>
   16344:	ldr	r3, [r5, #28]
   16348:	add	r4, r3, r4
   1634c:	str	r4, [r5, #28]
   16350:	b	160d0 <argp_parse@@Base+0x2850>
   16354:	mov	r0, r5
   16358:	bl	1bc38 <argp_error@@Base+0x1a5c>
   1635c:	b	160f0 <argp_parse@@Base+0x2870>
   16360:	cmp	sl, #0
   16364:	beq	163e4 <argp_parse@@Base+0x2b64>
   16368:	str	r3, [sp, #20]
   1636c:	str	r3, [sp, #24]
   16370:	mov	r4, r3
   16374:	str	r3, [sp, #12]
   16378:	mov	r3, sl
   1637c:	b	15f50 <argp_parse@@Base+0x26d0>
   16380:	mov	sl, r0
   16384:	b	161c0 <argp_parse@@Base+0x2940>
   16388:	adds	r3, r4, #0
   1638c:	movne	r3, #1
   16390:	str	r3, [sp, #24]
   16394:	str	r3, [sp, #20]
   16398:	str	r6, [sp, #12]
   1639c:	mov	r3, sl
   163a0:	b	15f50 <argp_parse@@Base+0x26d0>
   163a4:	mov	r1, #1
   163a8:	mov	r0, r5
   163ac:	bl	1c1e4 <argp_error@@Base+0x2008>
   163b0:	cmp	r0, #0
   163b4:	beq	16290 <argp_parse@@Base+0x2a10>
   163b8:	ldr	r3, [r5, #28]
   163bc:	b	16114 <argp_parse@@Base+0x2894>
   163c0:	mov	r1, #1
   163c4:	mov	r0, r5
   163c8:	bl	1c1e4 <argp_error@@Base+0x2008>
   163cc:	cmp	r0, #0
   163d0:	beq	16098 <argp_parse@@Base+0x2818>
   163d4:	ldr	r3, [r5, #28]
   163d8:	b	16088 <argp_parse@@Base+0x2808>
   163dc:	mov	r4, #1
   163e0:	b	161a8 <argp_parse@@Base+0x2928>
   163e4:	mov	r4, sl
   163e8:	str	r4, [sp, #12]
   163ec:	b	16044 <argp_parse@@Base+0x27c4>
   163f0:	cmp	r3, #0
   163f4:	beq	16420 <argp_parse@@Base+0x2ba0>
   163f8:	mov	r1, r9
   163fc:	mov	r0, fp
   16400:	bl	146a0 <argp_parse@@Base+0xe20>
   16404:	mov	r4, r6
   16408:	ldr	r3, [fp, #20]
   1640c:	str	r6, [sp, #20]
   16410:	str	r6, [sp, #24]
   16414:	str	r0, [sp, #12]
   16418:	ldr	r0, [pc, #24]	; 16438 <argp_parse@@Base+0x2bb8>
   1641c:	b	15f3c <argp_parse@@Base+0x26bc>
   16420:	mov	r3, sl
   16424:	str	r6, [sp, #20]
   16428:	str	r6, [sp, #24]
   1642c:	mov	r4, r6
   16430:	str	r6, [sp, #12]
   16434:	b	15f50 <argp_parse@@Base+0x26d0>
   16438:	andeq	r0, r0, #1
   1643c:	andeq	r0, r0, #4
   16440:	andeq	r0, r0, #2
   16444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16448:	sub	sp, sp, #52	; 0x34
   1644c:	mov	r3, r0
   16450:	str	r0, [sp, #20]
   16454:	mov	r0, #16
   16458:	ldr	r6, [r3, #16]
   1645c:	ldr	r4, [r3]
   16460:	str	r1, [sp, #28]
   16464:	bl	15e10 <argp_parse@@Base+0x2590>
   16468:	subs	r3, r0, #0
   1646c:	str	r3, [sp, #16]
   16470:	beq	16a60 <argp_parse@@Base+0x31e0>
   16474:	mov	r2, r3
   16478:	cmp	r4, #0
   1647c:	mov	r3, #0
   16480:	str	r3, [r2, #4]
   16484:	str	r3, [r2, #12]
   16488:	beq	1669c <argp_parse@@Base+0x2e1c>
   1648c:	ldr	fp, [r4, #12]
   16490:	ands	fp, fp, #4
   16494:	bne	16a74 <argp_parse@@Base+0x31f4>
   16498:	add	r5, r4, #24
   1649c:	mov	r7, r4
   164a0:	mov	r9, fp
   164a4:	mov	sl, fp
   164a8:	mov	r4, r2
   164ac:	b	164f0 <argp_parse@@Base+0x2c70>
   164b0:	ldr	r3, [r5, #-12]
   164b4:	tst	r3, #4
   164b8:	addeq	r9, r9, #1
   164bc:	streq	r9, [r4, #4]
   164c0:	tst	r3, #8
   164c4:	bne	164ec <argp_parse@@Base+0x2c6c>
   164c8:	sub	r3, r8, #1
   164cc:	cmp	r3, #254	; 0xfe
   164d0:	bhi	164ec <argp_parse@@Base+0x2c6c>
   164d4:	bl	113cc <__ctype_b_loc@plt>
   164d8:	lsl	r8, r8, #1
   164dc:	ldr	r3, [r0]
   164e0:	ldrh	r3, [r3, r8]
   164e4:	tst	r3, #16384	; 0x4000
   164e8:	addne	sl, sl, #1
   164ec:	add	r5, r5, #24
   164f0:	ldr	r8, [r5, #-20]	; 0xffffffec
   164f4:	cmp	r8, #0
   164f8:	bne	164b0 <argp_parse@@Base+0x2c30>
   164fc:	ldr	r3, [r5, #-24]	; 0xffffffe8
   16500:	cmp	r3, #0
   16504:	bne	164b0 <argp_parse@@Base+0x2c30>
   16508:	ldr	r3, [r5, #-8]
   1650c:	cmp	r3, #0
   16510:	bne	164b0 <argp_parse@@Base+0x2c30>
   16514:	ldr	r3, [r5, #-4]
   16518:	cmp	r3, #0
   1651c:	bne	164b0 <argp_parse@@Base+0x2c30>
   16520:	rsb	r9, r9, r9, lsl #3
   16524:	mov	r4, r7
   16528:	lsl	r0, r9, #2
   1652c:	mov	r7, r3
   16530:	bl	15e10 <argp_parse@@Base+0x2590>
   16534:	ldr	r5, [sp, #16]
   16538:	str	r0, [r5]
   1653c:	add	r0, sl, #1
   16540:	bl	15e10 <argp_parse@@Base+0x2590>
   16544:	ldr	r8, [r5]
   16548:	mov	r3, r5
   1654c:	cmp	r0, #0
   16550:	cmpne	r8, #0
   16554:	mov	sl, r0
   16558:	str	r0, [r3, #8]
   1655c:	beq	16b1c <argp_parse@@Base+0x329c>
   16560:	ldr	r2, [sp, #16]
   16564:	ldr	r3, [pc, #1476]	; 16b30 <argp_parse@@Base+0x32b0>
   16568:	ldr	r2, [r2, #4]
   1656c:	cmp	r2, r3
   16570:	bhi	16b08 <argp_parse@@Base+0x3288>
   16574:	add	r8, r8, #28
   16578:	mov	r9, sl
   1657c:	mov	r2, fp
   16580:	ldr	r3, [r4, #4]
   16584:	mov	fp, sl
   16588:	mov	sl, r8
   1658c:	ldr	r8, [sp, #28]
   16590:	str	r6, [sp, #4]
   16594:	cmp	r3, #0
   16598:	bne	165a8 <argp_parse@@Base+0x2d28>
   1659c:	ldr	r0, [r4]
   165a0:	cmp	r0, #0
   165a4:	beq	16ac0 <argp_parse@@Base+0x3240>
   165a8:	str	r7, [sl, #-24]	; 0xffffffe8
   165ac:	ldr	r5, [r4, #20]
   165b0:	str	r4, [sl, #-28]	; 0xffffffe4
   165b4:	cmp	r5, #0
   165b8:	str	fp, [sl, #-20]	; 0xffffffec
   165bc:	bne	165d4 <argp_parse@@Base+0x2d54>
   165c0:	ldr	r0, [r4]
   165c4:	cmp	r0, #0
   165c8:	cmpeq	r3, #0
   165cc:	movne	r5, r2
   165d0:	beq	16ae4 <argp_parse@@Base+0x3264>
   165d4:	ldr	r2, [sp, #20]
   165d8:	mov	r3, r7
   165dc:	str	r5, [sl, #-16]
   165e0:	str	r8, [sl, #-12]
   165e4:	str	r2, [sl, #-8]
   165e8:	add	r3, r3, #1
   165ec:	str	r3, [sl, #-24]	; 0xffffffe8
   165f0:	ldr	r3, [r4, #12]
   165f4:	tst	r3, #8
   165f8:	bne	16664 <argp_parse@@Base+0x2de4>
   165fc:	ldr	r6, [r4, #4]
   16600:	sub	r2, r6, #1
   16604:	cmp	r2, #254	; 0xfe
   16608:	bhi	16664 <argp_parse@@Base+0x2de4>
   1660c:	bl	113cc <__ctype_b_loc@plt>
   16610:	lsl	r2, r6, #1
   16614:	ldr	r0, [r0]
   16618:	ldrh	r2, [r0, r2]
   1661c:	tst	r2, #16384	; 0x4000
   16620:	beq	16664 <argp_parse@@Base+0x2de4>
   16624:	cmp	r9, fp
   16628:	uxtb	r0, r6
   1662c:	bcs	1665c <argp_parse@@Base+0x2ddc>
   16630:	ldrb	r3, [r9]
   16634:	cmp	r3, r0
   16638:	movne	r3, r9
   1663c:	subne	ip, fp, #1
   16640:	bne	16654 <argp_parse@@Base+0x2dd4>
   16644:	b	16664 <argp_parse@@Base+0x2de4>
   16648:	ldrb	r2, [r3, #1]!
   1664c:	cmp	r2, r0
   16650:	beq	16664 <argp_parse@@Base+0x2de4>
   16654:	cmp	ip, r3
   16658:	bne	16648 <argp_parse@@Base+0x2dc8>
   1665c:	strb	r0, [fp]
   16660:	add	fp, fp, #1
   16664:	add	r4, r4, #24
   16668:	ldr	r3, [r4, #4]
   1666c:	cmp	r3, #0
   16670:	bne	16680 <argp_parse@@Base+0x2e00>
   16674:	ldr	r2, [r4]
   16678:	cmp	r2, #0
   1667c:	beq	16a9c <argp_parse@@Base+0x321c>
   16680:	ldr	r2, [r4, #12]
   16684:	tst	r2, #4
   16688:	beq	16ab4 <argp_parse@@Base+0x3234>
   1668c:	ldr	r3, [sl, #-24]	; 0xffffffe8
   16690:	b	165e8 <argp_parse@@Base+0x2d68>
   16694:	ldr	r6, [sp, #4]
   16698:	strb	r3, [fp]
   1669c:	cmp	r6, #0
   166a0:	beq	167dc <argp_parse@@Base+0x2f5c>
   166a4:	ldr	r0, [r6]
   166a8:	cmp	r0, #0
   166ac:	beq	167dc <argp_parse@@Base+0x2f5c>
   166b0:	add	r3, r6, #16
   166b4:	str	r3, [sp, #8]
   166b8:	ldr	r3, [sp, #16]
   166bc:	add	r3, r3, #12
   166c0:	str	r3, [sp, #44]	; 0x2c
   166c4:	ldr	r3, [sp, #8]
   166c8:	ldr	r5, [r3, #-4]
   166cc:	ldr	r6, [r3, #-8]
   166d0:	cmp	r5, #0
   166d4:	bne	166e0 <argp_parse@@Base+0x2e60>
   166d8:	cmp	r6, #0
   166dc:	beq	16a34 <argp_parse@@Base+0x31b4>
   166e0:	ldr	r3, [sp, #20]
   166e4:	mov	r0, #28
   166e8:	ldr	r2, [r3, #16]
   166ec:	ldr	r3, [sp, #8]
   166f0:	sub	r3, r3, #16
   166f4:	sub	r3, r3, r2
   166f8:	asr	r4, r3, #4
   166fc:	bl	15e10 <argp_parse@@Base+0x2590>
   16700:	subs	r1, r0, #0
   16704:	beq	16748 <argp_parse@@Base+0x2ec8>
   16708:	ldr	r3, [sp, #28]
   1670c:	ldr	r0, [sp, #16]
   16710:	cmp	r3, #0
   16714:	ldr	r2, [sp, #20]
   16718:	str	r3, [r1, #12]
   1671c:	ldrne	r3, [r3, #20]
   16720:	str	r2, [r1, #16]
   16724:	ldr	r2, [r0, #12]
   16728:	addne	r3, r3, #1
   1672c:	moveq	r3, #0
   16730:	str	r5, [r1, #8]
   16734:	str	r6, [r1]
   16738:	str	r4, [r1, #4]
   1673c:	str	r3, [r1, #20]
   16740:	str	r2, [r1, #24]
   16744:	str	r1, [r0, #12]
   16748:	ldr	r3, [sp, #8]
   1674c:	ldr	r0, [r3, #-16]
   16750:	bl	16444 <argp_parse@@Base+0x2bc4>
   16754:	ldr	r3, [sp, #16]
   16758:	ldr	r2, [r3, #12]
   1675c:	cmp	r2, #0
   16760:	mov	sl, r0
   16764:	bne	16770 <argp_parse@@Base+0x2ef0>
   16768:	b	16a3c <argp_parse@@Base+0x31bc>
   1676c:	mov	r2, r3
   16770:	ldr	r3, [r2, #24]
   16774:	cmp	r3, #0
   16778:	bne	1676c <argp_parse@@Base+0x2eec>
   1677c:	add	r2, r2, #24
   16780:	ldr	r3, [sl, #4]
   16784:	ldr	r1, [sl, #12]
   16788:	cmp	r3, #0
   1678c:	str	r1, [r2]
   16790:	mov	r2, #0
   16794:	str	r2, [sl, #12]
   16798:	beq	167c0 <argp_parse@@Base+0x2f40>
   1679c:	ldr	ip, [sp, #16]
   167a0:	ldr	r2, [ip, #4]
   167a4:	cmp	r2, #0
   167a8:	bne	167e8 <argp_parse@@Base+0x2f68>
   167ac:	ldr	r0, [sl]
   167b0:	ldr	r1, [sl, #8]
   167b4:	stm	ip, {r0, r3}
   167b8:	str	r1, [ip, #8]
   167bc:	str	r2, [sl, #4]
   167c0:	mov	r0, sl
   167c4:	bl	147fc <argp_parse@@Base+0xf7c>
   167c8:	ldr	r3, [sp, #8]
   167cc:	ldr	r0, [r3], #16
   167d0:	cmp	r0, #0
   167d4:	str	r3, [sp, #8]
   167d8:	bne	166c8 <argp_parse@@Base+0x2e48>
   167dc:	ldr	r0, [sp, #16]
   167e0:	add	sp, sp, #52	; 0x34
   167e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   167e8:	add	r3, r3, r2
   167ec:	str	r3, [sp, #32]
   167f0:	rsb	r0, r3, r3, lsl #3
   167f4:	lsl	r0, r0, #2
   167f8:	bl	15e10 <argp_parse@@Base+0x2590>
   167fc:	ldr	r3, [sp, #16]
   16800:	mov	r4, r0
   16804:	str	r0, [sp, #24]
   16808:	ldr	r0, [r3, #8]
   1680c:	bl	113e4 <strlen@plt>
   16810:	mov	r5, r0
   16814:	ldr	r0, [sl, #8]
   16818:	bl	113e4 <strlen@plt>
   1681c:	add	r0, r5, r0
   16820:	add	r0, r0, #1
   16824:	bl	15e10 <argp_parse@@Base+0x2590>
   16828:	cmp	r4, #0
   1682c:	cmpne	r0, #0
   16830:	mov	r7, r0
   16834:	beq	16a4c <argp_parse@@Base+0x31cc>
   16838:	ldr	r3, [sp, #32]
   1683c:	ldr	r2, [pc, #748]	; 16b30 <argp_parse@@Base+0x32b0>
   16840:	cmp	r3, r2
   16844:	bhi	16a88 <argp_parse@@Base+0x3208>
   16848:	ldr	r6, [sp, #16]
   1684c:	ldr	r8, [sp, #24]
   16850:	ldm	r6, {r3, r4}
   16854:	mov	r0, r8
   16858:	rsb	r9, r4, r4, lsl #3
   1685c:	mov	r1, r3
   16860:	lsl	r9, r9, #2
   16864:	mov	r2, r9
   16868:	str	r3, [sp, #36]	; 0x24
   1686c:	bl	113c0 <mempcpy@plt>
   16870:	ldr	r3, [sl, #4]
   16874:	ldr	r1, [sl]
   16878:	str	r3, [sp, #4]
   1687c:	rsb	r2, r3, r3, lsl #3
   16880:	lsl	r2, r2, #2
   16884:	bl	112b8 <memcpy@plt>
   16888:	ldr	r6, [r6, #8]
   1688c:	mov	r2, r5
   16890:	mov	r1, r6
   16894:	mov	r0, r7
   16898:	bl	112b8 <memcpy@plt>
   1689c:	cmp	r4, #0
   168a0:	beq	16a44 <argp_parse@@Base+0x31c4>
   168a4:	mov	r2, r8
   168a8:	ldr	r3, [r2, #8]
   168ac:	subs	r4, r4, #1
   168b0:	sub	r3, r3, r6
   168b4:	add	r3, r7, r3
   168b8:	str	r3, [r2, #8]
   168bc:	add	r2, r2, #28
   168c0:	bne	168a8 <argp_parse@@Base+0x3028>
   168c4:	ldr	r3, [sp, #24]
   168c8:	add	r1, r3, r9
   168cc:	ldr	r3, [sp, #4]
   168d0:	ldr	r9, [sl, #8]
   168d4:	cmp	r3, #0
   168d8:	add	r3, r7, r5
   168dc:	str	r3, [sp, #12]
   168e0:	beq	169cc <argp_parse@@Base+0x314c>
   168e4:	add	fp, r1, #28
   168e8:	sub	r8, r3, #1
   168ec:	str	sl, [sp, #40]	; 0x28
   168f0:	mov	r6, r3
   168f4:	mov	sl, r9
   168f8:	mov	r9, fp
   168fc:	mov	fp, r8
   16900:	ldr	r5, [r9, #-24]	; 0xffffffe8
   16904:	str	r6, [r9, #-20]	; 0xffffffec
   16908:	cmp	r5, #0
   1690c:	ldr	r4, [r9, #-28]	; 0xffffffe4
   16910:	bne	16924 <argp_parse@@Base+0x30a4>
   16914:	b	169b0 <argp_parse@@Base+0x3130>
   16918:	subs	r5, r5, #1
   1691c:	add	r4, r4, #24
   16920:	beq	169b0 <argp_parse@@Base+0x3130>
   16924:	ldr	r3, [r4, #12]
   16928:	tst	r3, #8
   1692c:	bne	16918 <argp_parse@@Base+0x3098>
   16930:	ldr	r8, [r4, #4]
   16934:	sub	r3, r8, #1
   16938:	cmp	r3, #254	; 0xfe
   1693c:	bhi	16918 <argp_parse@@Base+0x3098>
   16940:	bl	113cc <__ctype_b_loc@plt>
   16944:	lsl	r3, r8, #1
   16948:	ldr	r2, [r0]
   1694c:	ldrh	r3, [r2, r3]
   16950:	tst	r3, #16384	; 0x4000
   16954:	beq	16918 <argp_parse@@Base+0x3098>
   16958:	ldrb	r1, [sl]
   1695c:	cmp	r1, r8
   16960:	bne	16918 <argp_parse@@Base+0x3098>
   16964:	ldr	r3, [sp, #12]
   16968:	cmp	r7, r3
   1696c:	bcs	16998 <argp_parse@@Base+0x3118>
   16970:	ldrb	r3, [r7]
   16974:	cmp	r3, r1
   16978:	movne	r3, r7
   1697c:	bne	16990 <argp_parse@@Base+0x3110>
   16980:	b	169a0 <argp_parse@@Base+0x3120>
   16984:	ldrb	r2, [r3, #1]!
   16988:	cmp	r2, r1
   1698c:	beq	169a0 <argp_parse@@Base+0x3120>
   16990:	cmp	fp, r3
   16994:	bne	16984 <argp_parse@@Base+0x3104>
   16998:	strb	r1, [r6]
   1699c:	add	r6, r6, #1
   169a0:	subs	r5, r5, #1
   169a4:	add	sl, sl, #1
   169a8:	add	r4, r4, #24
   169ac:	bne	16924 <argp_parse@@Base+0x30a4>
   169b0:	ldr	r3, [sp, #4]
   169b4:	add	r9, r9, #28
   169b8:	subs	r3, r3, #1
   169bc:	str	r3, [sp, #4]
   169c0:	bne	16900 <argp_parse@@Base+0x3080>
   169c4:	ldr	sl, [sp, #40]	; 0x28
   169c8:	mov	r3, r6
   169cc:	mov	r2, #0
   169d0:	strb	r2, [r3]
   169d4:	ldr	r0, [sp, #36]	; 0x24
   169d8:	bl	147fc <argp_parse@@Base+0xf7c>
   169dc:	ldr	r4, [sp, #16]
   169e0:	ldr	r0, [r4, #8]
   169e4:	bl	147fc <argp_parse@@Base+0xf7c>
   169e8:	ldr	r2, [sp, #24]
   169ec:	ldr	r0, [sl, #12]
   169f0:	str	r2, [r4]
   169f4:	ldr	r2, [sp, #32]
   169f8:	cmp	r0, #0
   169fc:	stmib	r4, {r2, r7}
   16a00:	beq	16a14 <argp_parse@@Base+0x3194>
   16a04:	ldr	r4, [r0, #24]
   16a08:	bl	147fc <argp_parse@@Base+0xf7c>
   16a0c:	subs	r0, r4, #0
   16a10:	bne	16a04 <argp_parse@@Base+0x3184>
   16a14:	ldr	r3, [sl, #4]
   16a18:	cmp	r3, #0
   16a1c:	beq	167c0 <argp_parse@@Base+0x2f40>
   16a20:	ldr	r0, [sl]
   16a24:	bl	147fc <argp_parse@@Base+0xf7c>
   16a28:	ldr	r0, [sl, #8]
   16a2c:	bl	147fc <argp_parse@@Base+0xf7c>
   16a30:	b	167c0 <argp_parse@@Base+0x2f40>
   16a34:	ldr	r1, [sp, #28]
   16a38:	b	16750 <argp_parse@@Base+0x2ed0>
   16a3c:	ldr	r2, [sp, #44]	; 0x2c
   16a40:	b	16780 <argp_parse@@Base+0x2f00>
   16a44:	ldr	r1, [sp, #24]
   16a48:	b	168cc <argp_parse@@Base+0x304c>
   16a4c:	ldr	r3, [pc, #224]	; 16b34 <argp_parse@@Base+0x32b4>
   16a50:	ldr	r2, [pc, #224]	; 16b38 <argp_parse@@Base+0x32b8>
   16a54:	ldr	r1, [pc, #224]	; 16b3c <argp_parse@@Base+0x32bc>
   16a58:	ldr	r0, [pc, #224]	; 16b40 <argp_parse@@Base+0x32c0>
   16a5c:	bl	115a0 <__assert_fail@plt>
   16a60:	ldr	r3, [pc, #220]	; 16b44 <argp_parse@@Base+0x32c4>
   16a64:	ldr	r2, [pc, #220]	; 16b48 <argp_parse@@Base+0x32c8>
   16a68:	ldr	r1, [pc, #204]	; 16b3c <argp_parse@@Base+0x32bc>
   16a6c:	ldr	r0, [pc, #216]	; 16b4c <argp_parse@@Base+0x32cc>
   16a70:	bl	115a0 <__assert_fail@plt>
   16a74:	ldr	r3, [pc, #200]	; 16b44 <argp_parse@@Base+0x32c4>
   16a78:	mov	r2, #460	; 0x1cc
   16a7c:	ldr	r1, [pc, #184]	; 16b3c <argp_parse@@Base+0x32bc>
   16a80:	ldr	r0, [pc, #200]	; 16b50 <argp_parse@@Base+0x32d0>
   16a84:	bl	115a0 <__assert_fail@plt>
   16a88:	ldr	r3, [pc, #164]	; 16b34 <argp_parse@@Base+0x32b4>
   16a8c:	mov	r2, #972	; 0x3cc
   16a90:	ldr	r1, [pc, #164]	; 16b3c <argp_parse@@Base+0x32bc>
   16a94:	ldr	r0, [pc, #184]	; 16b54 <argp_parse@@Base+0x32d4>
   16a98:	bl	115a0 <__assert_fail@plt>
   16a9c:	ldr	r2, [r4, #16]
   16aa0:	cmp	r2, #0
   16aa4:	bne	16680 <argp_parse@@Base+0x2e00>
   16aa8:	ldr	r2, [r4, #20]
   16aac:	cmp	r2, #0
   16ab0:	bne	16680 <argp_parse@@Base+0x2e00>
   16ab4:	add	sl, sl, #28
   16ab8:	mov	r2, r5
   16abc:	b	16594 <argp_parse@@Base+0x2d14>
   16ac0:	ldr	r0, [r4, #16]
   16ac4:	cmp	r0, #0
   16ac8:	beq	16aec <argp_parse@@Base+0x326c>
   16acc:	str	r3, [sl, #-24]	; 0xffffffe8
   16ad0:	ldr	r5, [r4, #20]
   16ad4:	str	r4, [sl, #-28]	; 0xffffffe4
   16ad8:	cmp	r5, #0
   16adc:	str	fp, [sl, #-20]	; 0xffffffec
   16ae0:	bne	165d4 <argp_parse@@Base+0x2d54>
   16ae4:	add	r5, r2, #1
   16ae8:	b	165d4 <argp_parse@@Base+0x2d54>
   16aec:	ldr	r5, [r4, #20]
   16af0:	cmp	r5, #0
   16af4:	beq	16694 <argp_parse@@Base+0x2e14>
   16af8:	str	r4, [sl, #-28]	; 0xffffffe4
   16afc:	str	r3, [sl, #-24]	; 0xffffffe8
   16b00:	str	fp, [sl, #-20]	; 0xffffffec
   16b04:	b	165d4 <argp_parse@@Base+0x2d54>
   16b08:	ldr	r3, [pc, #52]	; 16b44 <argp_parse@@Base+0x32c4>
   16b0c:	mov	r2, #476	; 0x1dc
   16b10:	ldr	r1, [pc, #36]	; 16b3c <argp_parse@@Base+0x32bc>
   16b14:	ldr	r0, [pc, #60]	; 16b58 <argp_parse@@Base+0x32d8>
   16b18:	bl	115a0 <__assert_fail@plt>
   16b1c:	ldr	r3, [pc, #32]	; 16b44 <argp_parse@@Base+0x32c4>
   16b20:	ldr	r2, [pc, #52]	; 16b5c <argp_parse@@Base+0x32dc>
   16b24:	ldr	r1, [pc, #16]	; 16b3c <argp_parse@@Base+0x32bc>
   16b28:	ldr	r0, [pc, #48]	; 16b60 <argp_parse@@Base+0x32e0>
   16b2c:	bl	115a0 <__assert_fail@plt>
   16b30:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   16b34:	andeq	sp, r1, ip, ror #5
   16b38:	andeq	r0, r0, sl, asr #7
   16b3c:	andeq	sp, r1, r8, lsl #7
   16b40:	andeq	sp, r1, r8, lsl #8
   16b44:	andeq	sp, r1, r0, ror #5
   16b48:	andeq	r0, r0, r2, asr #3
   16b4c:	muleq	r1, r4, r3
   16b50:	muleq	r1, r8, r3
   16b54:	andeq	sp, r1, r4, lsr #8
   16b58:	andeq	sp, r1, ip, asr #7
   16b5c:	ldrdeq	r0, [r0], -sl
   16b60:	andeq	sp, r1, r8, lsr #7
   16b64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16b68:	mov	r7, r2
   16b6c:	sub	sp, sp, #28
   16b70:	mov	r4, r3
   16b74:	ldr	r3, [r7]
   16b78:	ldr	r2, [r0, #20]
   16b7c:	str	r3, [sp, #20]
   16b80:	ldr	r3, [r0, #16]
   16b84:	cmp	r2, #0
   16b88:	str	r3, [sp, #12]
   16b8c:	ldr	r3, [r0, #8]
   16b90:	mov	r8, r1
   16b94:	mov	r9, r3
   16b98:	str	r3, [sp, #16]
   16b9c:	ldr	r5, [sp, #64]	; 0x40
   16ba0:	beq	16df8 <argp_parse@@Base+0x3578>
   16ba4:	mov	r6, r0
   16ba8:	bl	146a0 <argp_parse@@Base+0xe20>
   16bac:	ldr	r3, [r6, #20]
   16bb0:	mov	r1, r9
   16bb4:	mov	r2, r0
   16bb8:	ldr	r0, [pc, #640]	; 16e40 <argp_parse@@Base+0x35c0>
   16bbc:	blx	r3
   16bc0:	mov	r3, r0
   16bc4:	str	r0, [sp, #8]
   16bc8:	cmp	r3, #0
   16bcc:	beq	16d98 <argp_parse@@Base+0x3518>
   16bd0:	mov	r1, #10
   16bd4:	mov	r0, r3
   16bd8:	bl	11288 <strchrnul@plt>
   16bdc:	ldrb	sl, [r0]
   16be0:	mov	r6, r0
   16be4:	cmp	sl, #0
   16be8:	bne	16d30 <argp_parse@@Base+0x34b0>
   16bec:	ldr	fp, [sp, #8]
   16bf0:	ldr	r3, [r5, #28]
   16bf4:	ldr	r1, [r5, #24]
   16bf8:	ldr	r0, [r5, #16]
   16bfc:	sub	r1, r3, r1
   16c00:	cmp	r1, r0
   16c04:	add	r9, r6, #1
   16c08:	mov	r1, r3
   16c0c:	sub	r9, r9, fp
   16c10:	bhi	16dc8 <argp_parse@@Base+0x3548>
   16c14:	ldr	r0, [r5, #20]
   16c18:	ldr	ip, [r5, #8]
   16c1c:	cmp	r0, #0
   16c20:	addge	r9, r9, r0
   16c24:	cmp	r9, ip
   16c28:	bcc	16d78 <argp_parse@@Base+0x34f8>
   16c2c:	ldr	r1, [r5, #32]
   16c30:	cmp	r1, r3
   16c34:	bls	16e00 <argp_parse@@Base+0x3580>
   16c38:	add	r0, r3, #1
   16c3c:	mov	r1, #10
   16c40:	str	r0, [r5, #28]
   16c44:	strb	r1, [r3]
   16c48:	ldr	r0, [r5, #28]
   16c4c:	sub	r9, r6, fp
   16c50:	ldr	r1, [r5, #32]
   16c54:	add	r3, r0, r9
   16c58:	cmp	r1, r3
   16c5c:	bcs	16c78 <argp_parse@@Base+0x33f8>
   16c60:	mov	r1, r9
   16c64:	mov	r0, r5
   16c68:	bl	1c1e4 <argp_error@@Base+0x2008>
   16c6c:	cmp	r0, #0
   16c70:	beq	16c90 <argp_parse@@Base+0x3410>
   16c74:	ldr	r0, [r5, #28]
   16c78:	mov	r2, r9
   16c7c:	mov	r1, fp
   16c80:	bl	112b8 <memcpy@plt>
   16c84:	ldr	r3, [r5, #28]
   16c88:	add	r9, r3, r9
   16c8c:	str	r9, [r5, #28]
   16c90:	ldr	r3, [sp, #16]
   16c94:	ldr	r2, [sp, #8]
   16c98:	cmp	r3, r2
   16c9c:	beq	16ca8 <argp_parse@@Base+0x3428>
   16ca0:	mov	r0, r2
   16ca4:	bl	147fc <argp_parse@@Base+0xf7c>
   16ca8:	ldr	r3, [sp, #12]
   16cac:	cmp	r3, #0
   16cb0:	beq	16cf4 <argp_parse@@Base+0x3474>
   16cb4:	ldr	r2, [r3]
   16cb8:	cmp	r2, #0
   16cbc:	beq	16cf4 <argp_parse@@Base+0x3474>
   16cc0:	ldr	r9, [sp, #12]
   16cc4:	mov	r3, r4
   16cc8:	mov	r0, r2
   16ccc:	str	r5, [sp]
   16cd0:	mov	r2, r7
   16cd4:	mov	r1, r8
   16cd8:	bl	16b64 <argp_parse@@Base+0x32e4>
   16cdc:	ldr	r2, [r9, #16]!
   16ce0:	cmp	r2, #0
   16ce4:	clz	r3, r0
   16ce8:	lsr	r3, r3, #5
   16cec:	bne	16cc8 <argp_parse@@Base+0x3448>
   16cf0:	mov	r4, r3
   16cf4:	cmp	r4, #0
   16cf8:	moveq	sl, #0
   16cfc:	andne	sl, sl, #1
   16d00:	cmp	sl, #0
   16d04:	beq	16db8 <argp_parse@@Base+0x3538>
   16d08:	ldrb	r0, [r6]
   16d0c:	cmp	r0, #0
   16d10:	bne	16ddc <argp_parse@@Base+0x355c>
   16d14:	ldr	r3, [sp, #20]
   16d18:	ldrb	r4, [r3]
   16d1c:	cmp	r4, #0
   16d20:	moveq	r0, r4
   16d24:	strbne	r0, [r3]
   16d28:	add	sp, sp, #28
   16d2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d30:	ldr	r3, [sp, #20]
   16d34:	ldrb	r9, [r3]
   16d38:	cmp	r9, #0
   16d3c:	beq	16e38 <argp_parse@@Base+0x35b8>
   16d40:	mov	sl, #0
   16d44:	add	fp, r0, #1
   16d48:	add	sl, sl, #1
   16d4c:	mov	r0, fp
   16d50:	mov	r1, #10
   16d54:	bl	11288 <strchrnul@plt>
   16d58:	cmp	sl, r9
   16d5c:	bne	16d44 <argp_parse@@Base+0x34c4>
   16d60:	mov	r6, r0
   16d64:	ldr	r3, [r7]
   16d68:	mov	sl, #1
   16d6c:	add	r3, r3, sl
   16d70:	str	r3, [r7]
   16d74:	b	16bf0 <argp_parse@@Base+0x3370>
   16d78:	ldr	r0, [r5, #32]
   16d7c:	cmp	r0, r3
   16d80:	bls	16e1c <argp_parse@@Base+0x359c>
   16d84:	add	r0, r1, #1
   16d88:	mov	r3, #32
   16d8c:	str	r0, [r5, #28]
   16d90:	strb	r3, [r1]
   16d94:	b	16c48 <argp_parse@@Base+0x33c8>
   16d98:	ldr	r3, [sp, #12]
   16d9c:	cmp	r3, #0
   16da0:	beq	16db8 <argp_parse@@Base+0x3538>
   16da4:	ldr	r2, [r3]
   16da8:	cmp	r2, #0
   16dac:	ldrne	r6, [sp, #8]
   16db0:	movne	sl, r6
   16db4:	bne	16cc0 <argp_parse@@Base+0x3440>
   16db8:	clz	r0, r4
   16dbc:	lsr	r0, r0, #5
   16dc0:	add	sp, sp, #28
   16dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16dc8:	mov	r0, r5
   16dcc:	bl	1bc38 <argp_error@@Base+0x1a5c>
   16dd0:	ldr	r3, [r5, #28]
   16dd4:	mov	r1, r3
   16dd8:	b	16c14 <argp_parse@@Base+0x3394>
   16ddc:	ldr	r2, [sp, #20]
   16de0:	mov	r0, #1
   16de4:	ldrb	r3, [r2]
   16de8:	add	r3, r3, r0
   16dec:	strb	r3, [r2]
   16df0:	add	sp, sp, #28
   16df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16df8:	str	r3, [sp, #8]
   16dfc:	b	16bc8 <argp_parse@@Base+0x3348>
   16e00:	mov	r1, #1
   16e04:	mov	r0, r5
   16e08:	bl	1c1e4 <argp_error@@Base+0x2008>
   16e0c:	cmp	r0, #0
   16e10:	beq	16c48 <argp_parse@@Base+0x33c8>
   16e14:	ldr	r3, [r5, #28]
   16e18:	b	16c38 <argp_parse@@Base+0x33b8>
   16e1c:	mov	r1, #1
   16e20:	mov	r0, r5
   16e24:	bl	1c1e4 <argp_error@@Base+0x2008>
   16e28:	cmp	r0, #0
   16e2c:	beq	16c48 <argp_parse@@Base+0x33c8>
   16e30:	ldr	r1, [r5, #28]
   16e34:	b	16d84 <argp_parse@@Base+0x3504>
   16e38:	ldr	fp, [sp, #8]
   16e3c:	b	16d64 <argp_parse@@Base+0x34e4>
   16e40:	andeq	r0, r0, #6
   16e44:	subs	r3, r0, #0
   16e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16e4c:	moveq	r0, r3
   16e50:	sub	sp, sp, #52	; 0x34
   16e54:	mov	r4, r1
   16e58:	beq	16e6c <argp_parse@@Base+0x35ec>
   16e5c:	mov	r1, #10
   16e60:	bl	113f0 <strchr@plt>
   16e64:	adds	r0, r0, #0
   16e68:	movne	r0, #1
   16e6c:	cmp	r4, #0
   16e70:	str	r0, [sp, #20]
   16e74:	beq	17184 <argp_parse@@Base+0x3904>
   16e78:	ldr	r3, [r4]
   16e7c:	cmp	r3, #0
   16e80:	beq	17184 <argp_parse@@Base+0x3904>
   16e84:	mov	r9, #0
   16e88:	mov	r8, #10
   16e8c:	str	r4, [sp, #24]
   16e90:	ldr	r0, [r3, #8]
   16e94:	ldr	r4, [r3, #16]
   16e98:	cmp	r0, #0
   16e9c:	moveq	r0, r9
   16ea0:	beq	16eb4 <argp_parse@@Base+0x3634>
   16ea4:	mov	r1, r8
   16ea8:	bl	113f0 <strchr@plt>
   16eac:	adds	r0, r0, #0
   16eb0:	movne	r0, #1
   16eb4:	cmp	r4, #0
   16eb8:	str	r0, [sp]
   16ebc:	beq	17160 <argp_parse@@Base+0x38e0>
   16ec0:	ldr	r3, [r4]
   16ec4:	cmp	r3, #0
   16ec8:	beq	17160 <argp_parse@@Base+0x38e0>
   16ecc:	str	r4, [sp, #28]
   16ed0:	ldr	r0, [r3, #8]
   16ed4:	ldr	r4, [r3, #16]
   16ed8:	cmp	r0, #0
   16edc:	moveq	r0, r9
   16ee0:	beq	16ef4 <argp_parse@@Base+0x3674>
   16ee4:	mov	r1, r8
   16ee8:	bl	113f0 <strchr@plt>
   16eec:	adds	r0, r0, #0
   16ef0:	movne	r0, #1
   16ef4:	cmp	r4, #0
   16ef8:	str	r0, [sp, #4]
   16efc:	beq	17140 <argp_parse@@Base+0x38c0>
   16f00:	ldr	r3, [r4]
   16f04:	cmp	r3, #0
   16f08:	beq	17140 <argp_parse@@Base+0x38c0>
   16f0c:	str	r4, [sp, #32]
   16f10:	ldr	r0, [r3, #8]
   16f14:	ldr	r4, [r3, #16]
   16f18:	cmp	r0, #0
   16f1c:	moveq	r0, r9
   16f20:	beq	16f34 <argp_parse@@Base+0x36b4>
   16f24:	mov	r1, r8
   16f28:	bl	113f0 <strchr@plt>
   16f2c:	adds	r0, r0, #0
   16f30:	movne	r0, #1
   16f34:	cmp	r4, #0
   16f38:	str	r0, [sp, #8]
   16f3c:	beq	17120 <argp_parse@@Base+0x38a0>
   16f40:	ldr	r3, [r4]
   16f44:	cmp	r3, #0
   16f48:	beq	17120 <argp_parse@@Base+0x38a0>
   16f4c:	str	r4, [sp, #36]	; 0x24
   16f50:	ldr	r0, [r3, #8]
   16f54:	ldr	r4, [r3, #16]
   16f58:	cmp	r0, #0
   16f5c:	moveq	r0, r9
   16f60:	beq	16f74 <argp_parse@@Base+0x36f4>
   16f64:	mov	r1, r8
   16f68:	bl	113f0 <strchr@plt>
   16f6c:	adds	r0, r0, #0
   16f70:	movne	r0, #1
   16f74:	cmp	r4, #0
   16f78:	str	r0, [sp, #12]
   16f7c:	beq	170fc <argp_parse@@Base+0x387c>
   16f80:	ldr	r3, [r4]
   16f84:	cmp	r3, #0
   16f88:	beq	170fc <argp_parse@@Base+0x387c>
   16f8c:	str	r4, [sp, #40]	; 0x28
   16f90:	ldr	r0, [r3, #8]
   16f94:	ldr	fp, [r3, #16]
   16f98:	cmp	r0, #0
   16f9c:	moveq	r0, r9
   16fa0:	beq	16fb4 <argp_parse@@Base+0x3734>
   16fa4:	mov	r1, r8
   16fa8:	bl	113f0 <strchr@plt>
   16fac:	adds	r0, r0, #0
   16fb0:	movne	r0, #1
   16fb4:	cmp	fp, #0
   16fb8:	str	r0, [sp, #16]
   16fbc:	beq	170d8 <argp_parse@@Base+0x3858>
   16fc0:	ldr	r3, [fp]
   16fc4:	cmp	r3, #0
   16fc8:	beq	170d8 <argp_parse@@Base+0x3858>
   16fcc:	str	fp, [sp, #44]	; 0x2c
   16fd0:	ldr	r0, [r3, #8]
   16fd4:	ldr	r7, [r3, #16]
   16fd8:	cmp	r0, #0
   16fdc:	moveq	r0, r9
   16fe0:	beq	16ff4 <argp_parse@@Base+0x3774>
   16fe4:	mov	r1, r8
   16fe8:	bl	113f0 <strchr@plt>
   16fec:	adds	r0, r0, #0
   16ff0:	movne	r0, #1
   16ff4:	cmp	r7, #0
   16ff8:	mov	r6, r0
   16ffc:	beq	170b8 <argp_parse@@Base+0x3838>
   17000:	ldr	r3, [r7]
   17004:	cmp	r3, #0
   17008:	beq	170b8 <argp_parse@@Base+0x3838>
   1700c:	ldr	r0, [r3, #8]
   17010:	ldr	r5, [r3, #16]
   17014:	cmp	r0, #0
   17018:	moveq	sl, r9
   1701c:	beq	17030 <argp_parse@@Base+0x37b0>
   17020:	mov	r1, r8
   17024:	bl	113f0 <strchr@plt>
   17028:	adds	sl, r0, #0
   1702c:	movne	sl, #1
   17030:	cmp	r5, #0
   17034:	beq	170a8 <argp_parse@@Base+0x3828>
   17038:	ldr	r3, [r5]
   1703c:	cmp	r3, #0
   17040:	beq	170a8 <argp_parse@@Base+0x3828>
   17044:	ldr	r0, [r3, #8]
   17048:	ldr	r4, [r3, #16]
   1704c:	cmp	r0, #0
   17050:	moveq	fp, r9
   17054:	beq	17068 <argp_parse@@Base+0x37e8>
   17058:	mov	r1, r8
   1705c:	bl	113f0 <strchr@plt>
   17060:	adds	fp, r0, #0
   17064:	movne	fp, #1
   17068:	cmp	r4, #0
   1706c:	beq	17098 <argp_parse@@Base+0x3818>
   17070:	ldr	r3, [r4]
   17074:	cmp	r3, #0
   17078:	beq	17098 <argp_parse@@Base+0x3818>
   1707c:	ldr	r1, [r3, #16]
   17080:	ldr	r0, [r3, #8]
   17084:	bl	16e44 <argp_parse@@Base+0x35c4>
   17088:	ldr	r3, [r4, #16]!
   1708c:	cmp	r3, #0
   17090:	add	fp, fp, r0
   17094:	bne	1707c <argp_parse@@Base+0x37fc>
   17098:	ldr	r3, [r5, #16]!
   1709c:	add	sl, sl, fp
   170a0:	cmp	r3, #0
   170a4:	bne	17044 <argp_parse@@Base+0x37c4>
   170a8:	ldr	r3, [r7, #16]!
   170ac:	add	r6, r6, sl
   170b0:	cmp	r3, #0
   170b4:	bne	1700c <argp_parse@@Base+0x378c>
   170b8:	ldr	r2, [sp, #44]	; 0x2c
   170bc:	ldr	r3, [r2, #16]!
   170c0:	str	r2, [sp, #44]	; 0x2c
   170c4:	ldr	r2, [sp, #16]
   170c8:	cmp	r3, #0
   170cc:	add	r2, r2, r6
   170d0:	str	r2, [sp, #16]
   170d4:	bne	16fd0 <argp_parse@@Base+0x3750>
   170d8:	ldr	r2, [sp, #40]	; 0x28
   170dc:	ldr	r1, [sp, #16]
   170e0:	ldr	r3, [r2, #16]!
   170e4:	str	r2, [sp, #40]	; 0x28
   170e8:	ldr	r2, [sp, #12]
   170ec:	cmp	r3, #0
   170f0:	add	r2, r2, r1
   170f4:	str	r2, [sp, #12]
   170f8:	bne	16f90 <argp_parse@@Base+0x3710>
   170fc:	ldr	r2, [sp, #36]	; 0x24
   17100:	ldr	r1, [sp, #12]
   17104:	ldr	r3, [r2, #16]!
   17108:	str	r2, [sp, #36]	; 0x24
   1710c:	ldr	r2, [sp, #8]
   17110:	cmp	r3, #0
   17114:	add	r2, r2, r1
   17118:	str	r2, [sp, #8]
   1711c:	bne	16f50 <argp_parse@@Base+0x36d0>
   17120:	ldr	r2, [sp, #32]
   17124:	ldr	r3, [r2, #16]!
   17128:	str	r2, [sp, #32]
   1712c:	ldmib	sp, {r1, r2}
   17130:	cmp	r3, #0
   17134:	add	r2, r2, r1
   17138:	str	r2, [sp, #4]
   1713c:	bne	16f10 <argp_parse@@Base+0x3690>
   17140:	ldr	r2, [sp, #28]
   17144:	ldr	r3, [r2, #16]!
   17148:	str	r2, [sp, #28]
   1714c:	ldm	sp, {r1, r2}
   17150:	cmp	r3, #0
   17154:	add	r2, r2, r1
   17158:	str	r2, [sp]
   1715c:	bne	16ed0 <argp_parse@@Base+0x3650>
   17160:	ldr	r2, [sp, #24]
   17164:	ldr	r1, [sp]
   17168:	ldr	r3, [r2, #16]!
   1716c:	str	r2, [sp, #24]
   17170:	ldr	r2, [sp, #20]
   17174:	cmp	r3, #0
   17178:	add	r2, r2, r1
   1717c:	str	r2, [sp, #20]
   17180:	bne	16e90 <argp_parse@@Base+0x3610>
   17184:	ldr	r0, [sp, #20]
   17188:	add	sp, sp, #52	; 0x34
   1718c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17190:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17194:	add	fp, sp, #32
   17198:	sub	sp, sp, #36	; 0x24
   1719c:	ldr	r3, [r0, #4]
   171a0:	cmp	r3, #0
   171a4:	str	r3, [fp, #-40]	; 0xffffffd8
   171a8:	bne	171b4 <argp_parse@@Base+0x3934>
   171ac:	sub	sp, fp, #32
   171b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   171b4:	mov	r4, r0
   171b8:	str	r0, [fp, #-60]	; 0xffffffc4
   171bc:	ldr	r0, [r0, #8]
   171c0:	str	r1, [fp, #-44]	; 0xffffffd4
   171c4:	bl	113e4 <strlen@plt>
   171c8:	ldr	r3, [r4]
   171cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   171d0:	add	r3, r3, #28
   171d4:	mov	r9, r3
   171d8:	str	r3, [fp, #-64]	; 0xffffffc0
   171dc:	mov	sl, r9
   171e0:	str	r2, [fp, #-48]	; 0xffffffd0
   171e4:	add	r3, r0, #15
   171e8:	bic	r3, r3, #7
   171ec:	sub	sp, sp, r3
   171f0:	str	sp, [fp, #-56]	; 0xffffffc8
   171f4:	str	sp, [fp, #-52]	; 0xffffffcc
   171f8:	ldr	r5, [sl, #-24]	; 0xffffffe8
   171fc:	ldr	r4, [sl, #-28]	; 0xffffffe4
   17200:	cmp	r5, #0
   17204:	ldr	r9, [sl, #-20]	; 0xffffffec
   17208:	beq	17280 <argp_parse@@Base+0x3a00>
   1720c:	mov	r8, r4
   17210:	b	17220 <argp_parse@@Base+0x39a0>
   17214:	subs	r5, r5, #1
   17218:	add	r4, r4, #24
   1721c:	beq	17280 <argp_parse@@Base+0x3a00>
   17220:	ldr	r6, [r4, #12]
   17224:	tst	r6, #8
   17228:	bne	17214 <argp_parse@@Base+0x3994>
   1722c:	ldr	r7, [r4, #4]
   17230:	sub	r3, r7, #1
   17234:	cmp	r3, #254	; 0xfe
   17238:	bhi	17214 <argp_parse@@Base+0x3994>
   1723c:	bl	113cc <__ctype_b_loc@plt>
   17240:	lsl	r3, r7, #1
   17244:	ldr	r2, [r0]
   17248:	ldrh	r3, [r2, r3]
   1724c:	tst	r3, #16384	; 0x4000
   17250:	beq	17214 <argp_parse@@Base+0x3994>
   17254:	ldrb	r3, [r9]
   17258:	cmp	r7, r3
   1725c:	bne	17214 <argp_parse@@Base+0x3994>
   17260:	tst	r6, #4
   17264:	moveq	r8, r4
   17268:	tst	r6, #2
   1726c:	beq	173f4 <argp_parse@@Base+0x3b74>
   17270:	subs	r5, r5, #1
   17274:	add	r9, r9, #1
   17278:	add	r4, r4, #24
   1727c:	bne	17220 <argp_parse@@Base+0x39a0>
   17280:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17284:	add	sl, sl, #28
   17288:	subs	r3, r3, #1
   1728c:	str	r3, [fp, #-48]	; 0xffffffd0
   17290:	bne	171f8 <argp_parse@@Base+0x3978>
   17294:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17298:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1729c:	cmp	r3, r2
   172a0:	bcc	175a8 <argp_parse@@Base+0x3d28>
   172a4:	ldr	r7, [fp, #-64]	; 0xffffffc0
   172a8:	ldr	r5, [r7, #-24]	; 0xffffffe8
   172ac:	ldr	r4, [r7, #-28]	; 0xffffffe4
   172b0:	cmp	r5, #0
   172b4:	ldr	r6, [r7, #-20]	; 0xffffffec
   172b8:	movne	r8, r4
   172bc:	bne	172d0 <argp_parse@@Base+0x3a50>
   172c0:	b	17330 <argp_parse@@Base+0x3ab0>
   172c4:	subs	r5, r5, #1
   172c8:	add	r4, r4, #24
   172cc:	beq	17330 <argp_parse@@Base+0x3ab0>
   172d0:	ldr	r9, [r4, #12]
   172d4:	tst	r9, #8
   172d8:	bne	172c4 <argp_parse@@Base+0x3a44>
   172dc:	ldr	sl, [r4, #4]
   172e0:	sub	r3, sl, #1
   172e4:	cmp	r3, #254	; 0xfe
   172e8:	bhi	172c4 <argp_parse@@Base+0x3a44>
   172ec:	bl	113cc <__ctype_b_loc@plt>
   172f0:	lsl	r3, sl, #1
   172f4:	ldr	r1, [r0]
   172f8:	ldrh	r3, [r1, r3]
   172fc:	tst	r3, #16384	; 0x4000
   17300:	beq	172c4 <argp_parse@@Base+0x3a44>
   17304:	ldrb	r3, [r6]
   17308:	cmp	sl, r3
   1730c:	bne	172c4 <argp_parse@@Base+0x3a44>
   17310:	tst	r9, #4
   17314:	moveq	r8, r4
   17318:	tst	r9, #2
   1731c:	beq	1742c <argp_parse@@Base+0x3bac>
   17320:	subs	r5, r5, #1
   17324:	add	r6, r6, #1
   17328:	add	r4, r4, #24
   1732c:	bne	172d0 <argp_parse@@Base+0x3a50>
   17330:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17334:	add	r7, r7, #28
   17338:	subs	r3, r3, #1
   1733c:	str	r3, [fp, #-40]	; 0xffffffd8
   17340:	bne	172a8 <argp_parse@@Base+0x3a28>
   17344:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17348:	ldm	r3, {r7, r8}
   1734c:	cmp	r8, #0
   17350:	beq	171ac <argp_parse@@Base+0x392c>
   17354:	ldr	sl, [pc, #652]	; 175e8 <argp_parse@@Base+0x3d68>
   17358:	ldr	r9, [pc, #652]	; 175ec <argp_parse@@Base+0x3d6c>
   1735c:	add	r7, r7, #28
   17360:	ldr	r5, [r7, #-24]	; 0xffffffe8
   17364:	ldr	r4, [r7, #-28]	; 0xffffffe4
   17368:	cmp	r5, #0
   1736c:	movne	r6, r4
   17370:	bne	17384 <argp_parse@@Base+0x3b04>
   17374:	b	173e0 <argp_parse@@Base+0x3b60>
   17378:	subs	r5, r5, #1
   1737c:	add	r4, r4, #24
   17380:	beq	173e0 <argp_parse@@Base+0x3b60>
   17384:	ldr	r2, [r4]
   17388:	cmp	r2, #0
   1738c:	beq	17378 <argp_parse@@Base+0x3af8>
   17390:	ldr	r1, [r4, #12]
   17394:	tst	r1, #4
   17398:	moveq	r6, r4
   1739c:	tst	r1, #2
   173a0:	bne	17378 <argp_parse@@Base+0x3af8>
   173a4:	ldr	r3, [r4, #8]
   173a8:	ldr	r0, [r6, #12]
   173ac:	cmp	r3, #0
   173b0:	orr	r1, r1, r0
   173b4:	beq	174d8 <argp_parse@@Base+0x3c58>
   173b8:	tst	r1, #16
   173bc:	bne	17378 <argp_parse@@Base+0x3af8>
   173c0:	tst	r1, #1
   173c4:	movne	r1, r9
   173c8:	moveq	r1, sl
   173cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   173d0:	bl	1c2e4 <argp_error@@Base+0x2108>
   173d4:	subs	r5, r5, #1
   173d8:	add	r4, r4, #24
   173dc:	bne	17384 <argp_parse@@Base+0x3b04>
   173e0:	subs	r8, r8, #1
   173e4:	add	r7, r7, #28
   173e8:	bne	17360 <argp_parse@@Base+0x3ae0>
   173ec:	sub	sp, fp, #32
   173f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   173f4:	ldr	r3, [r4, #8]
   173f8:	cmp	r3, #0
   173fc:	bne	17270 <argp_parse@@Base+0x39f0>
   17400:	ldr	r3, [r8, #8]
   17404:	cmp	r3, #0
   17408:	bne	17270 <argp_parse@@Base+0x39f0>
   1740c:	ldr	r3, [r8, #12]
   17410:	orr	r6, r6, r3
   17414:	tst	r6, #16
   17418:	ldreq	r3, [fp, #-52]	; 0xffffffcc
   1741c:	strbeq	r7, [r3]
   17420:	addeq	r3, r3, #1
   17424:	streq	r3, [fp, #-52]	; 0xffffffcc
   17428:	b	17270 <argp_parse@@Base+0x39f0>
   1742c:	ldr	r3, [r4, #8]
   17430:	ldr	r1, [r8, #12]
   17434:	cmp	r3, #0
   17438:	orr	r9, r9, r1
   1743c:	beq	17534 <argp_parse@@Base+0x3cb4>
   17440:	tst	r9, #16
   17444:	bne	17320 <argp_parse@@Base+0x3aa0>
   17448:	tst	r9, #1
   1744c:	bne	174fc <argp_parse@@Base+0x3c7c>
   17450:	mov	r0, r3
   17454:	str	r3, [fp, #-48]	; 0xffffffd0
   17458:	bl	113e4 <strlen@plt>
   1745c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17460:	ldr	r1, [r3, #28]
   17464:	ldr	r2, [r3, #24]
   17468:	sub	r2, r1, r2
   1746c:	mov	r9, r0
   17470:	ldr	r0, [r3, #16]
   17474:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17478:	cmp	r2, r0
   1747c:	bhi	17590 <argp_parse@@Base+0x3d10>
   17480:	ldr	ip, [fp, #-44]	; 0xffffffd4
   17484:	ldr	r2, [ip, #20]
   17488:	ldr	r0, [ip, #8]
   1748c:	bic	r2, r2, r2, asr #31
   17490:	add	r2, r2, #6
   17494:	add	r2, r2, r9
   17498:	cmp	r2, r0
   1749c:	bcc	17510 <argp_parse@@Base+0x3c90>
   174a0:	ldr	r2, [ip, #32]
   174a4:	mov	r0, ip
   174a8:	cmp	r2, r1
   174ac:	bls	17544 <argp_parse@@Base+0x3cc4>
   174b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   174b4:	add	r2, r1, #1
   174b8:	str	r2, [r0, #28]
   174bc:	mov	r2, #10
   174c0:	strb	r2, [r1]
   174c4:	ldr	r2, [r4, #4]
   174c8:	ldr	r1, [pc, #288]	; 175f0 <argp_parse@@Base+0x3d70>
   174cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   174d0:	bl	1c2e4 <argp_error@@Base+0x2108>
   174d4:	b	17320 <argp_parse@@Base+0x3aa0>
   174d8:	tst	r1, #16
   174dc:	bne	17378 <argp_parse@@Base+0x3af8>
   174e0:	ldr	r3, [r6, #8]
   174e4:	cmp	r3, #0
   174e8:	bne	173c0 <argp_parse@@Base+0x3b40>
   174ec:	ldr	r1, [pc, #256]	; 175f4 <argp_parse@@Base+0x3d74>
   174f0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   174f4:	bl	1c2e4 <argp_error@@Base+0x2108>
   174f8:	b	17378 <argp_parse@@Base+0x3af8>
   174fc:	mov	r2, sl
   17500:	ldr	r1, [pc, #240]	; 175f8 <argp_parse@@Base+0x3d78>
   17504:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17508:	bl	1c2e4 <argp_error@@Base+0x2108>
   1750c:	b	17320 <argp_parse@@Base+0x3aa0>
   17510:	ldr	r2, [ip, #32]
   17514:	cmp	r2, r1
   17518:	bls	17568 <argp_parse@@Base+0x3ce8>
   1751c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17520:	add	r2, r1, #1
   17524:	str	r2, [r0, #28]
   17528:	mov	r2, #32
   1752c:	strb	r2, [r1]
   17530:	b	174c4 <argp_parse@@Base+0x3c44>
   17534:	ldr	r3, [r8, #8]
   17538:	cmp	r3, #0
   1753c:	beq	17320 <argp_parse@@Base+0x3aa0>
   17540:	b	17440 <argp_parse@@Base+0x3bc0>
   17544:	mov	r1, #1
   17548:	str	r3, [fp, #-48]	; 0xffffffd0
   1754c:	mov	r9, ip
   17550:	bl	1c1e4 <argp_error@@Base+0x2008>
   17554:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17558:	cmp	r0, #0
   1755c:	beq	174c4 <argp_parse@@Base+0x3c44>
   17560:	ldr	r1, [r9, #28]
   17564:	b	174b0 <argp_parse@@Base+0x3c30>
   17568:	ldr	r9, [fp, #-44]	; 0xffffffd4
   1756c:	mov	r1, #1
   17570:	mov	r0, r9
   17574:	str	r3, [fp, #-48]	; 0xffffffd0
   17578:	bl	1c1e4 <argp_error@@Base+0x2008>
   1757c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17580:	cmp	r0, #0
   17584:	beq	174c4 <argp_parse@@Base+0x3c44>
   17588:	ldr	r1, [r9, #28]
   1758c:	b	1751c <argp_parse@@Base+0x3c9c>
   17590:	ldr	sl, [fp, #-44]	; 0xffffffd4
   17594:	mov	r0, sl
   17598:	bl	1bc38 <argp_error@@Base+0x1a5c>
   1759c:	ldr	r1, [sl, #28]
   175a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   175a4:	b	17480 <argp_parse@@Base+0x3c00>
   175a8:	mov	r2, r3
   175ac:	ldrb	ip, [fp, #-48]	; 0xffffffd0
   175b0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   175b4:	ldr	r1, [pc, #64]	; 175fc <argp_parse@@Base+0x3d7c>
   175b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   175bc:	strb	ip, [r3]
   175c0:	bl	1c2e4 <argp_error@@Base+0x2108>
   175c4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   175c8:	ldr	r3, [r2, #4]
   175cc:	cmp	r3, #0
   175d0:	str	r3, [fp, #-40]	; 0xffffffd8
   175d4:	beq	171ac <argp_parse@@Base+0x392c>
   175d8:	ldr	r3, [r2]
   175dc:	add	r3, r3, #28
   175e0:	str	r3, [fp, #-64]	; 0xffffffc0
   175e4:	b	172a4 <argp_parse@@Base+0x3a24>
   175e8:	andeq	sp, r1, r8, lsl #9
   175ec:	andeq	sp, r1, r8, ror r4
   175f0:	andeq	sp, r1, ip, ror #8
   175f4:	muleq	r1, r4, r4
   175f8:	andeq	sp, r1, r0, ror #8
   175fc:	andeq	sp, r1, r8, asr r4
   17600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17604:	subs	r4, r1, #0
   17608:	sub	sp, sp, #12
   1760c:	mov	r8, r0
   17610:	mov	r7, r2
   17614:	beq	177e8 <argp_parse@@Base+0x3f68>
   17618:	ldr	r3, [r4, #20]
   1761c:	cmp	r3, #0
   17620:	beq	177e8 <argp_parse@@Base+0x3f68>
   17624:	ldr	r1, [r2, #16]
   17628:	mov	r0, r4
   1762c:	bl	146a0 <argp_parse@@Base+0xe20>
   17630:	ldr	r3, [r4, #20]
   17634:	mov	r1, r8
   17638:	mov	r2, r0
   1763c:	ldr	r0, [pc, #628]	; 178b8 <argp_parse@@Base+0x4038>
   17640:	blx	r3
   17644:	mov	r6, r0
   17648:	cmp	r6, #0
   1764c:	beq	177b4 <argp_parse@@Base+0x3f34>
   17650:	ldrb	r3, [r6]
   17654:	cmp	r3, #0
   17658:	beq	177a8 <argp_parse@@Base+0x3f28>
   1765c:	ldr	r3, [r7, #8]
   17660:	ldr	r3, [r3]
   17664:	cmp	r3, #0
   17668:	beq	17690 <argp_parse@@Base+0x3e10>
   1766c:	ldr	r4, [r7, #4]
   17670:	ldr	r3, [r4, #28]
   17674:	ldr	r2, [r4, #32]
   17678:	cmp	r3, r2
   1767c:	bcs	1789c <argp_parse@@Base+0x401c>
   17680:	add	r1, r3, #1
   17684:	mov	r2, #10
   17688:	str	r1, [r4, #28]
   1768c:	strb	r2, [r3]
   17690:	ldr	r4, [r7, #4]
   17694:	ldr	sl, [pc, #544]	; 178bc <argp_parse@@Base+0x403c>
   17698:	ldr	r3, [r4, #28]
   1769c:	ldr	r1, [r4, #24]
   176a0:	ldr	r2, [r4, #16]
   176a4:	sub	r3, r3, r1
   176a8:	cmp	r3, r2
   176ac:	ldr	r5, [sl, #24]
   176b0:	bhi	17874 <argp_parse@@Base+0x3ff4>
   176b4:	ldr	r3, [r4, #20]
   176b8:	mov	fp, #32
   176bc:	cmp	r3, #0
   176c0:	subge	r5, r5, r3
   176c4:	mov	r9, #1
   176c8:	cmp	r5, #0
   176cc:	sub	r5, r5, #1
   176d0:	ble	176fc <argp_parse@@Base+0x3e7c>
   176d4:	ldr	r3, [r4, #28]
   176d8:	ldr	r2, [r4, #32]
   176dc:	cmp	r3, r2
   176e0:	bcs	177cc <argp_parse@@Base+0x3f4c>
   176e4:	add	r2, r3, #1
   176e8:	cmp	r5, #0
   176ec:	str	r2, [r4, #28]
   176f0:	sub	r5, r5, #1
   176f4:	strb	fp, [r3]
   176f8:	bgt	176d4 <argp_parse@@Base+0x3e54>
   176fc:	ldr	r4, [r7, #4]
   17700:	ldr	r9, [sl, #24]
   17704:	ldr	r5, [r4, #28]
   17708:	ldr	r3, [r4, #24]
   1770c:	ldr	r2, [r4, #16]
   17710:	sub	r3, r5, r3
   17714:	cmp	r3, r2
   17718:	strls	r9, [r4, #4]
   1771c:	movls	fp, r4
   17720:	bhi	17828 <argp_parse@@Base+0x3fa8>
   17724:	str	r9, [fp, #12]
   17728:	mov	r0, r6
   1772c:	bl	113e4 <strlen@plt>
   17730:	subs	r9, r0, #0
   17734:	beq	1776c <argp_parse@@Base+0x3eec>
   17738:	ldr	r2, [r4, #32]
   1773c:	add	r3, r5, r9
   17740:	cmp	r2, r3
   17744:	bcc	177f8 <argp_parse@@Base+0x3f78>
   17748:	mov	r2, r9
   1774c:	mov	r0, r5
   17750:	mov	r1, r6
   17754:	bl	112b8 <memcpy@plt>
   17758:	ldr	r3, [r4, #28]
   1775c:	add	r9, r3, r9
   17760:	str	r9, [r4, #28]
   17764:	ldr	r4, [r7, #4]
   17768:	ldr	r5, [r4, #28]
   1776c:	ldr	r3, [r4, #24]
   17770:	ldr	r2, [r4, #16]
   17774:	sub	r3, r5, r3
   17778:	cmp	r3, r2
   1777c:	movls	r9, r4
   17780:	bhi	17814 <argp_parse@@Base+0x3f94>
   17784:	ldr	r2, [r9, #32]
   17788:	mov	r3, #0
   1778c:	cmp	r2, r5
   17790:	str	r3, [r4, #4]
   17794:	bls	17880 <argp_parse@@Base+0x4000>
   17798:	add	r2, r5, #1
   1779c:	mov	r3, #10
   177a0:	str	r2, [r9, #28]
   177a4:	strb	r3, [r5]
   177a8:	ldr	r3, [r7, #8]
   177ac:	mov	r2, #1
   177b0:	str	r2, [r3, #4]
   177b4:	cmp	r8, r6
   177b8:	beq	177f0 <argp_parse@@Base+0x3f70>
   177bc:	mov	r0, r6
   177c0:	add	sp, sp, #12
   177c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177c8:	b	147fc <argp_parse@@Base+0xf7c>
   177cc:	mov	r1, r9
   177d0:	mov	r0, r4
   177d4:	bl	1c1e4 <argp_error@@Base+0x2008>
   177d8:	cmp	r0, #0
   177dc:	beq	176c8 <argp_parse@@Base+0x3e48>
   177e0:	ldr	r3, [r4, #28]
   177e4:	b	176e4 <argp_parse@@Base+0x3e64>
   177e8:	mov	r6, r8
   177ec:	b	17648 <argp_parse@@Base+0x3dc8>
   177f0:	add	sp, sp, #12
   177f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   177f8:	mov	r1, r9
   177fc:	mov	r0, r4
   17800:	bl	1c1e4 <argp_error@@Base+0x2008>
   17804:	cmp	r0, #0
   17808:	beq	17764 <argp_parse@@Base+0x3ee4>
   1780c:	ldr	r5, [r4, #28]
   17810:	b	17748 <argp_parse@@Base+0x3ec8>
   17814:	mov	r0, r4
   17818:	bl	1bc38 <argp_error@@Base+0x1a5c>
   1781c:	ldr	r9, [r7, #4]
   17820:	ldr	r5, [r9, #28]
   17824:	b	17784 <argp_parse@@Base+0x3f04>
   17828:	mov	r0, r4
   1782c:	str	r9, [sp, #4]
   17830:	bl	1bc38 <argp_error@@Base+0x1a5c>
   17834:	ldr	fp, [r7, #4]
   17838:	ldr	r3, [sp, #4]
   1783c:	ldr	r9, [sl, #24]
   17840:	ldr	r5, [fp, #28]
   17844:	ldr	r2, [fp, #24]
   17848:	ldr	r1, [fp, #16]
   1784c:	sub	r2, r5, r2
   17850:	cmp	r2, r1
   17854:	str	r3, [r4, #4]
   17858:	movls	r4, fp
   1785c:	bls	17724 <argp_parse@@Base+0x3ea4>
   17860:	mov	r0, fp
   17864:	bl	1bc38 <argp_error@@Base+0x1a5c>
   17868:	ldr	r4, [r7, #4]
   1786c:	ldr	r5, [r4, #28]
   17870:	b	17724 <argp_parse@@Base+0x3ea4>
   17874:	mov	r0, r4
   17878:	bl	1bc38 <argp_error@@Base+0x1a5c>
   1787c:	b	176b4 <argp_parse@@Base+0x3e34>
   17880:	mov	r1, #1
   17884:	mov	r0, r9
   17888:	bl	1c1e4 <argp_error@@Base+0x2008>
   1788c:	cmp	r0, #0
   17890:	beq	177a8 <argp_parse@@Base+0x3f28>
   17894:	ldr	r5, [r9, #28]
   17898:	b	17798 <argp_parse@@Base+0x3f18>
   1789c:	mov	r1, #1
   178a0:	mov	r0, r4
   178a4:	bl	1c1e4 <argp_error@@Base+0x2008>
   178a8:	cmp	r0, #0
   178ac:	beq	17690 <argp_parse@@Base+0x3e10>
   178b0:	ldr	r3, [r4, #28]
   178b4:	b	17680 <argp_parse@@Base+0x3e00>
   178b8:	andeq	r0, r0, #3
   178bc:	andeq	lr, r2, r8, lsr #5
   178c0:	ldr	r3, [r1, #12]
   178c4:	push	{r4, r5, r6, r7, r8, lr}
   178c8:	cmp	r3, #0
   178cc:	mov	r6, r1
   178d0:	mov	r5, r0
   178d4:	beq	179bc <argp_parse@@Base+0x413c>
   178d8:	ldr	r3, [r1, #8]
   178dc:	ldr	r2, [r1]
   178e0:	ldr	r7, [r3]
   178e4:	ldr	r3, [r3, #4]
   178e8:	ldr	r4, [r2, #16]
   178ec:	cmp	r3, #0
   178f0:	cmpne	r7, #0
   178f4:	beq	1792c <argp_parse@@Base+0x40ac>
   178f8:	ldr	r2, [r2, #12]
   178fc:	ldr	r3, [r7, #12]
   17900:	cmp	r2, r3
   17904:	beq	1792c <argp_parse@@Base+0x40ac>
   17908:	ldr	r8, [r1, #4]
   1790c:	ldr	r3, [r8, #28]
   17910:	ldr	r2, [r8, #32]
   17914:	cmp	r3, r2
   17918:	bcs	17af4 <argp_parse@@Base+0x4274>
   1791c:	add	r1, r3, #1
   17920:	mov	r2, #10
   17924:	str	r1, [r8, #28]
   17928:	strb	r2, [r3]
   1792c:	cmp	r4, #0
   17930:	beq	17a70 <argp_parse@@Base+0x41f0>
   17934:	ldr	r0, [r4]
   17938:	cmp	r0, #0
   1793c:	beq	17a70 <argp_parse@@Base+0x41f0>
   17940:	ldrb	r3, [r0]
   17944:	cmp	r3, #0
   17948:	beq	17a70 <argp_parse@@Base+0x41f0>
   1794c:	cmp	r7, #0
   17950:	beq	17980 <argp_parse@@Base+0x4100>
   17954:	ldr	r3, [r7, #16]
   17958:	cmp	r4, r3
   1795c:	beq	17a70 <argp_parse@@Base+0x41f0>
   17960:	cmp	r3, #0
   17964:	beq	17980 <argp_parse@@Base+0x4100>
   17968:	ldr	r3, [r3, #12]
   1796c:	cmp	r3, #0
   17970:	cmpne	r4, r3
   17974:	bne	17968 <argp_parse@@Base+0x40e8>
   17978:	cmp	r4, r3
   1797c:	beq	17a70 <argp_parse@@Base+0x41f0>
   17980:	ldr	r3, [r6, #4]
   17984:	ldr	r1, [r4, #16]
   17988:	mov	r2, r6
   1798c:	ldr	r7, [r3, #12]
   17990:	bl	17600 <argp_parse@@Base+0x3d80>
   17994:	ldr	r8, [r6, #4]
   17998:	ldr	r3, [r8, #28]
   1799c:	ldr	r1, [r8, #24]
   179a0:	ldr	r2, [r8, #16]
   179a4:	sub	r3, r3, r1
   179a8:	cmp	r3, r2
   179ac:	movls	r4, r8
   179b0:	bhi	17ad4 <argp_parse@@Base+0x4254>
   179b4:	str	r7, [r8, #12]
   179b8:	b	17a84 <argp_parse@@Base+0x4204>
   179bc:	ldr	r7, [r1, #4]
   179c0:	ldr	r3, [r7, #28]
   179c4:	ldr	r1, [r7, #32]
   179c8:	add	r2, r3, #2
   179cc:	cmp	r1, r2
   179d0:	bcc	17a54 <argp_parse@@Base+0x41d4>
   179d4:	ldr	r2, [pc, #308]	; 17b10 <argp_parse@@Base+0x4290>
   179d8:	ldrh	r2, [r2]
   179dc:	strh	r2, [r3]
   179e0:	ldr	r4, [r6, #4]
   179e4:	ldr	r3, [r7, #28]
   179e8:	add	r3, r3, #2
   179ec:	str	r3, [r7, #28]
   179f0:	ldr	r1, [r4, #24]
   179f4:	ldr	r3, [r4, #28]
   179f8:	ldr	r2, [r4, #16]
   179fc:	sub	r3, r3, r1
   17a00:	cmp	r3, r2
   17a04:	bhi	17a94 <argp_parse@@Base+0x4214>
   17a08:	ldr	r3, [r4, #20]
   17a0c:	mov	r6, #32
   17a10:	cmp	r3, #0
   17a14:	subge	r5, r5, r3
   17a18:	mov	r7, #1
   17a1c:	cmp	r5, #0
   17a20:	sub	r5, r5, #1
   17a24:	ble	17a50 <argp_parse@@Base+0x41d0>
   17a28:	ldr	r3, [r4, #28]
   17a2c:	ldr	r2, [r4, #32]
   17a30:	cmp	r3, r2
   17a34:	bcs	17aa0 <argp_parse@@Base+0x4220>
   17a38:	add	r2, r3, #1
   17a3c:	cmp	r5, #0
   17a40:	str	r2, [r4, #28]
   17a44:	sub	r5, r5, #1
   17a48:	strb	r6, [r3]
   17a4c:	bgt	17a28 <argp_parse@@Base+0x41a8>
   17a50:	pop	{r4, r5, r6, r7, r8, pc}
   17a54:	mov	r1, #2
   17a58:	mov	r0, r7
   17a5c:	bl	1c1e4 <argp_error@@Base+0x2008>
   17a60:	cmp	r0, #0
   17a64:	beq	17abc <argp_parse@@Base+0x423c>
   17a68:	ldr	r3, [r7, #28]
   17a6c:	b	179d4 <argp_parse@@Base+0x4154>
   17a70:	ldr	r4, [r6, #4]
   17a74:	ldr	r3, [r4, #28]
   17a78:	ldr	r1, [r4, #24]
   17a7c:	ldr	r2, [r4, #16]
   17a80:	sub	r3, r3, r1
   17a84:	mov	r1, #0
   17a88:	cmp	r3, r2
   17a8c:	str	r1, [r6, #12]
   17a90:	bls	17a08 <argp_parse@@Base+0x4188>
   17a94:	mov	r0, r4
   17a98:	bl	1bc38 <argp_error@@Base+0x1a5c>
   17a9c:	b	17a08 <argp_parse@@Base+0x4188>
   17aa0:	mov	r1, r7
   17aa4:	mov	r0, r4
   17aa8:	bl	1c1e4 <argp_error@@Base+0x2008>
   17aac:	cmp	r0, #0
   17ab0:	beq	17a1c <argp_parse@@Base+0x419c>
   17ab4:	ldr	r3, [r4, #28]
   17ab8:	b	17a38 <argp_parse@@Base+0x41b8>
   17abc:	ldr	r4, [r6, #4]
   17ac0:	ldr	r3, [r4, #28]
   17ac4:	ldr	r1, [r4, #24]
   17ac8:	ldr	r2, [r4, #16]
   17acc:	sub	r3, r3, r1
   17ad0:	b	17a00 <argp_parse@@Base+0x4180>
   17ad4:	mov	r0, r8
   17ad8:	bl	1bc38 <argp_error@@Base+0x1a5c>
   17adc:	ldr	r4, [r6, #4]
   17ae0:	ldr	r3, [r4, #28]
   17ae4:	ldr	r1, [r4, #24]
   17ae8:	ldr	r2, [r4, #16]
   17aec:	sub	r3, r3, r1
   17af0:	b	179b4 <argp_parse@@Base+0x4134>
   17af4:	mov	r1, #1
   17af8:	mov	r0, r8
   17afc:	bl	1c1e4 <argp_error@@Base+0x2008>
   17b00:	cmp	r0, #0
   17b04:	beq	1792c <argp_parse@@Base+0x40ac>
   17b08:	ldr	r3, [r8, #28]
   17b0c:	b	1791c <argp_parse@@Base+0x409c>
   17b10:	muleq	r1, ip, r4
   17b14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b18:	sub	sp, sp, #28
   17b1c:	ldr	r6, [r0, #12]
   17b20:	ldr	r7, [r1, #12]
   17b24:	cmp	r6, r7
   17b28:	beq	17da0 <argp_parse@@Base+0x4520>
   17b2c:	ldr	r8, [r6, #12]
   17b30:	ldr	r9, [r7, #12]
   17b34:	mov	r5, r1
   17b38:	cmp	r8, r9
   17b3c:	mov	r4, r0
   17b40:	beq	17d68 <argp_parse@@Base+0x44e8>
   17b44:	ldr	sl, [r8, #12]
   17b48:	ldr	fp, [r9, #12]
   17b4c:	cmp	sl, fp
   17b50:	beq	17e08 <argp_parse@@Base+0x4588>
   17b54:	ldr	r3, [sl, #12]
   17b58:	ldr	r2, [fp, #12]
   17b5c:	cmp	r3, r2
   17b60:	beq	17e3c <argp_parse@@Base+0x45bc>
   17b64:	ldr	r1, [r3, #12]
   17b68:	ldr	r0, [r2, #12]
   17b6c:	str	r1, [sp]
   17b70:	cmp	r1, r0
   17b74:	str	r0, [sp, #4]
   17b78:	beq	17dd4 <argp_parse@@Base+0x4554>
   17b7c:	ldr	r1, [r1, #12]
   17b80:	ldr	r0, [r0, #12]
   17b84:	str	r1, [sp, #8]
   17b88:	cmp	r1, r0
   17b8c:	str	r0, [sp, #12]
   17b90:	beq	17e70 <argp_parse@@Base+0x45f0>
   17b94:	ldr	r0, [r1, #12]
   17b98:	ldr	r1, [sp, #12]
   17b9c:	ldr	r1, [r1, #12]
   17ba0:	cmp	r0, r1
   17ba4:	beq	17eb0 <argp_parse@@Base+0x4630>
   17ba8:	str	r2, [sp, #20]
   17bac:	str	r3, [sp, #16]
   17bb0:	bl	17b14 <argp_parse@@Base+0x4294>
   17bb4:	cmp	r0, #0
   17bb8:	bne	17d60 <argp_parse@@Base+0x44e0>
   17bbc:	ldr	r3, [sp, #12]
   17bc0:	ldr	r2, [sp, #20]
   17bc4:	ldr	r1, [r3, #8]
   17bc8:	ldr	r3, [sp, #8]
   17bcc:	mvn	ip, r1
   17bd0:	ldr	r0, [r3, #8]
   17bd4:	lsr	ip, ip, #31
   17bd8:	ldr	r3, [sp, #16]
   17bdc:	cmp	ip, r0, lsr #31
   17be0:	subne	r0, r0, r1
   17be4:	subeq	r0, r1, r0
   17be8:	cmp	r0, #0
   17bec:	bne	17d60 <argp_parse@@Base+0x44e0>
   17bf0:	ldr	r1, [sp, #12]
   17bf4:	ldr	r0, [sp, #8]
   17bf8:	ldr	r1, [r1, #4]
   17bfc:	ldr	r0, [r0, #4]
   17c00:	sub	r0, r1, r0
   17c04:	cmp	r0, #0
   17c08:	bne	17d60 <argp_parse@@Base+0x44e0>
   17c0c:	ldr	r1, [sp, #4]
   17c10:	ldr	r0, [sp]
   17c14:	ldr	r1, [r1, #8]
   17c18:	ldr	r0, [r0, #8]
   17c1c:	mvn	ip, r1
   17c20:	lsr	ip, ip, #31
   17c24:	cmp	ip, r0, lsr #31
   17c28:	subne	r0, r0, r1
   17c2c:	subeq	r0, r1, r0
   17c30:	cmp	r0, #0
   17c34:	bne	17d60 <argp_parse@@Base+0x44e0>
   17c38:	ldr	r1, [sp, #4]
   17c3c:	ldr	r0, [sp]
   17c40:	ldr	r1, [r1, #4]
   17c44:	ldr	r0, [r0, #4]
   17c48:	sub	r0, r1, r0
   17c4c:	cmp	r0, #0
   17c50:	bne	17d60 <argp_parse@@Base+0x44e0>
   17c54:	ldr	r1, [r2, #8]
   17c58:	ldr	r0, [r3, #8]
   17c5c:	mvn	ip, r1
   17c60:	lsr	ip, ip, #31
   17c64:	cmp	ip, r0, lsr #31
   17c68:	subne	r0, r0, r1
   17c6c:	subeq	r0, r1, r0
   17c70:	cmp	r0, #0
   17c74:	bne	17d60 <argp_parse@@Base+0x44e0>
   17c78:	ldr	r2, [r2, #4]
   17c7c:	ldr	r0, [r3, #4]
   17c80:	sub	r0, r2, r0
   17c84:	cmp	r0, #0
   17c88:	bne	17d60 <argp_parse@@Base+0x44e0>
   17c8c:	ldr	r3, [fp, #8]
   17c90:	ldr	r0, [sl, #8]
   17c94:	mvn	r2, r3
   17c98:	lsr	r2, r2, #31
   17c9c:	cmp	r2, r0, lsr #31
   17ca0:	subne	r0, r0, r3
   17ca4:	subeq	r0, r3, r0
   17ca8:	cmp	r0, #0
   17cac:	bne	17d60 <argp_parse@@Base+0x44e0>
   17cb0:	ldr	r3, [fp, #4]
   17cb4:	ldr	r0, [sl, #4]
   17cb8:	sub	r0, r3, r0
   17cbc:	cmp	r0, #0
   17cc0:	bne	17d60 <argp_parse@@Base+0x44e0>
   17cc4:	ldr	r3, [r9, #8]
   17cc8:	ldr	r0, [r8, #8]
   17ccc:	mvn	r2, r3
   17cd0:	lsr	r2, r2, #31
   17cd4:	cmp	r2, r0, lsr #31
   17cd8:	subne	r0, r0, r3
   17cdc:	subeq	r0, r3, r0
   17ce0:	cmp	r0, #0
   17ce4:	bne	17d60 <argp_parse@@Base+0x44e0>
   17ce8:	ldr	r3, [r9, #4]
   17cec:	ldr	r0, [r8, #4]
   17cf0:	sub	r0, r3, r0
   17cf4:	cmp	r0, #0
   17cf8:	bne	17d60 <argp_parse@@Base+0x44e0>
   17cfc:	ldr	r3, [r7, #8]
   17d00:	ldr	r0, [r6, #8]
   17d04:	mvn	r2, r3
   17d08:	lsr	r2, r2, #31
   17d0c:	cmp	r2, r0, lsr #31
   17d10:	subne	r0, r0, r3
   17d14:	subeq	r0, r3, r0
   17d18:	cmp	r0, #0
   17d1c:	bne	17d60 <argp_parse@@Base+0x44e0>
   17d20:	ldr	r3, [r7, #4]
   17d24:	ldr	r0, [r6, #4]
   17d28:	sub	r0, r3, r0
   17d2c:	cmp	r0, #0
   17d30:	bne	17d60 <argp_parse@@Base+0x44e0>
   17d34:	ldr	r3, [r5, #8]
   17d38:	ldr	r0, [r4, #8]
   17d3c:	mvn	r2, r3
   17d40:	lsr	r2, r2, #31
   17d44:	cmp	r2, r0, lsr #31
   17d48:	subne	r0, r0, r3
   17d4c:	subeq	r0, r3, r0
   17d50:	cmp	r0, #0
   17d54:	ldreq	r3, [r5, #4]
   17d58:	ldreq	r0, [r4, #4]
   17d5c:	subeq	r0, r3, r0
   17d60:	add	sp, sp, #28
   17d64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d68:	ldr	r3, [r7, #8]
   17d6c:	ldr	r0, [r6, #8]
   17d70:	mvn	r2, r3
   17d74:	ldr	r1, [r7, #4]
   17d78:	lsr	r2, r2, #31
   17d7c:	cmp	r2, r0, lsr #31
   17d80:	subne	r0, r0, r3
   17d84:	subeq	r0, r3, r0
   17d88:	ldr	r2, [r6, #4]
   17d8c:	cmp	r0, #0
   17d90:	subeq	r0, r1, r2
   17d94:	beq	17d2c <argp_parse@@Base+0x44ac>
   17d98:	add	sp, sp, #28
   17d9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17da0:	ldr	r2, [r1, #8]
   17da4:	ldr	r3, [r0, #8]
   17da8:	mvn	ip, r2
   17dac:	ldr	lr, [r1, #4]
   17db0:	lsr	ip, ip, #31
   17db4:	cmp	ip, r3, lsr #31
   17db8:	ldr	r1, [r0, #4]
   17dbc:	subne	r0, r3, r2
   17dc0:	subeq	r0, r2, r3
   17dc4:	cmp	r0, #0
   17dc8:	subeq	r0, lr, r1
   17dcc:	add	sp, sp, #28
   17dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17dd4:	ldr	r1, [r2, #8]
   17dd8:	ldr	r0, [r3, #8]
   17ddc:	mvn	ip, r1
   17de0:	ldr	r2, [r2, #4]
   17de4:	lsr	ip, ip, #31
   17de8:	cmp	ip, r0, lsr #31
   17dec:	subne	r0, r0, r1
   17df0:	subeq	r0, r1, r0
   17df4:	ldr	r3, [r3, #4]
   17df8:	cmp	r0, #0
   17dfc:	subeq	r0, r2, r3
   17e00:	beq	17c84 <argp_parse@@Base+0x4404>
   17e04:	b	17d60 <argp_parse@@Base+0x44e0>
   17e08:	ldr	r3, [r9, #8]
   17e0c:	ldr	r0, [r8, #8]
   17e10:	mvn	r2, r3
   17e14:	ldr	r1, [r9, #4]
   17e18:	lsr	r2, r2, #31
   17e1c:	cmp	r2, r0, lsr #31
   17e20:	subne	r0, r0, r3
   17e24:	subeq	r0, r3, r0
   17e28:	ldr	r2, [r8, #4]
   17e2c:	cmp	r0, #0
   17e30:	subeq	r0, r1, r2
   17e34:	beq	17cf4 <argp_parse@@Base+0x4474>
   17e38:	b	17d60 <argp_parse@@Base+0x44e0>
   17e3c:	ldr	r3, [fp, #8]
   17e40:	ldr	r0, [sl, #8]
   17e44:	mvn	r2, r3
   17e48:	ldr	r1, [fp, #4]
   17e4c:	lsr	r2, r2, #31
   17e50:	cmp	r2, r0, lsr #31
   17e54:	subne	r0, r0, r3
   17e58:	subeq	r0, r3, r0
   17e5c:	ldr	r2, [sl, #4]
   17e60:	cmp	r0, #0
   17e64:	subeq	r0, r1, r2
   17e68:	beq	17cbc <argp_parse@@Base+0x443c>
   17e6c:	b	17d60 <argp_parse@@Base+0x44e0>
   17e70:	ldr	ip, [sp, #4]
   17e74:	ldr	r1, [sp]
   17e78:	ldr	lr, [ip, #8]
   17e7c:	ldr	r0, [r1, #8]
   17e80:	mvn	r1, lr
   17e84:	ldr	ip, [ip, #4]
   17e88:	lsr	r1, r1, #31
   17e8c:	cmp	r1, r0, lsr #31
   17e90:	ldr	r1, [sp]
   17e94:	subne	r0, r0, lr
   17e98:	subeq	r0, lr, r0
   17e9c:	ldr	r1, [r1, #4]
   17ea0:	cmp	r0, #0
   17ea4:	subeq	r0, ip, r1
   17ea8:	beq	17c4c <argp_parse@@Base+0x43cc>
   17eac:	b	17d60 <argp_parse@@Base+0x44e0>
   17eb0:	ldr	ip, [sp, #12]
   17eb4:	ldr	r1, [sp, #8]
   17eb8:	ldr	lr, [ip, #8]
   17ebc:	ldr	r0, [r1, #8]
   17ec0:	mvn	r1, lr
   17ec4:	ldr	ip, [ip, #4]
   17ec8:	lsr	r1, r1, #31
   17ecc:	cmp	r1, r0, lsr #31
   17ed0:	ldr	r1, [sp, #8]
   17ed4:	subne	r0, r0, lr
   17ed8:	subeq	r0, lr, r0
   17edc:	ldr	r1, [r1, #4]
   17ee0:	cmp	r0, #0
   17ee4:	subeq	r0, ip, r1
   17ee8:	beq	17c04 <argp_parse@@Base+0x4384>
   17eec:	b	17d60 <argp_parse@@Base+0x44e0>
   17ef0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ef4:	mov	r6, r1
   17ef8:	ldr	r4, [r0, #16]
   17efc:	sub	sp, sp, #28
   17f00:	cmp	r4, #0
   17f04:	movne	r2, r4
   17f08:	bne	17f14 <argp_parse@@Base+0x4694>
   17f0c:	b	1853c <argp_parse@@Base+0x4cbc>
   17f10:	mov	r2, r3
   17f14:	ldr	r3, [r2, #12]
   17f18:	cmp	r3, #0
   17f1c:	bne	17f10 <argp_parse@@Base+0x4690>
   17f20:	ldr	r5, [r6, #16]
   17f24:	ldr	ip, [r2, #8]
   17f28:	cmp	r5, #0
   17f2c:	movne	r2, r5
   17f30:	bne	17f3c <argp_parse@@Base+0x46bc>
   17f34:	b	18550 <argp_parse@@Base+0x4cd0>
   17f38:	mov	r2, r3
   17f3c:	ldr	r3, [r2, #12]
   17f40:	cmp	r3, #0
   17f44:	bne	17f38 <argp_parse@@Base+0x46b8>
   17f48:	ldr	r3, [r2, #8]
   17f4c:	mvn	r2, r3
   17f50:	lsr	r2, r2, #31
   17f54:	cmp	r2, ip, lsr #31
   17f58:	subne	r1, ip, r3
   17f5c:	subeq	r1, r3, ip
   17f60:	cmp	r1, #0
   17f64:	bne	180e0 <argp_parse@@Base+0x4860>
   17f68:	adds	r1, r5, #0
   17f6c:	movne	r1, #1
   17f70:	cmp	r4, #0
   17f74:	rsbeq	r1, r1, #0
   17f78:	rsbne	r1, r1, #1
   17f7c:	cmp	r1, #0
   17f80:	bne	180e0 <argp_parse@@Base+0x4860>
   17f84:	cmp	r4, #0
   17f88:	mov	fp, r0
   17f8c:	beq	182d8 <argp_parse@@Base+0x4a58>
   17f90:	ldr	r1, [r4, #20]
   17f94:	ldr	r2, [r5, #20]
   17f98:	cmp	r1, r2
   17f9c:	bgt	180ec <argp_parse@@Base+0x486c>
   17fa0:	bge	18284 <argp_parse@@Base+0x4a04>
   17fa4:	ldr	r5, [r5, #12]
   17fa8:	ldr	r3, [r5, #20]
   17fac:	cmp	r1, r3
   17fb0:	blt	17fa4 <argp_parse@@Base+0x4724>
   17fb4:	ldr	r6, [r4, #12]
   17fb8:	ldr	r7, [r5, #12]
   17fbc:	cmp	r6, r7
   17fc0:	beq	187c0 <argp_parse@@Base+0x4f40>
   17fc4:	ldr	r8, [r6, #12]
   17fc8:	ldr	r9, [r7, #12]
   17fcc:	cmp	r8, r9
   17fd0:	beq	186f8 <argp_parse@@Base+0x4e78>
   17fd4:	ldr	sl, [r8, #12]
   17fd8:	ldr	fp, [r9, #12]
   17fdc:	cmp	sl, fp
   17fe0:	beq	18828 <argp_parse@@Base+0x4fa8>
   17fe4:	ldr	r0, [sl, #12]
   17fe8:	ldr	r1, [fp, #12]
   17fec:	cmp	r0, r1
   17ff0:	beq	188d4 <argp_parse@@Base+0x5054>
   17ff4:	bl	17b14 <argp_parse@@Base+0x4294>
   17ff8:	subs	r1, r0, #0
   17ffc:	bne	180e0 <argp_parse@@Base+0x4860>
   18000:	ldr	r1, [fp, #8]
   18004:	ldr	r3, [sl, #8]
   18008:	mvn	r2, r1
   1800c:	lsr	r2, r2, #31
   18010:	cmp	r2, r3, lsr #31
   18014:	subne	r1, r3, r1
   18018:	subeq	r1, r1, r3
   1801c:	cmp	r1, #0
   18020:	bne	180e0 <argp_parse@@Base+0x4860>
   18024:	ldr	r1, [fp, #4]
   18028:	ldr	r3, [sl, #4]
   1802c:	sub	r1, r1, r3
   18030:	cmp	r1, #0
   18034:	bne	180e0 <argp_parse@@Base+0x4860>
   18038:	ldr	r1, [r9, #8]
   1803c:	ldr	r3, [r8, #8]
   18040:	mvn	r2, r1
   18044:	lsr	r2, r2, #31
   18048:	cmp	r2, r3, lsr #31
   1804c:	subne	r1, r3, r1
   18050:	subeq	r1, r1, r3
   18054:	cmp	r1, #0
   18058:	bne	180e0 <argp_parse@@Base+0x4860>
   1805c:	ldr	r1, [r9, #4]
   18060:	ldr	r3, [r8, #4]
   18064:	sub	r1, r1, r3
   18068:	cmp	r1, #0
   1806c:	bne	180e0 <argp_parse@@Base+0x4860>
   18070:	ldr	r1, [r7, #8]
   18074:	ldr	r3, [r6, #8]
   18078:	mvn	r2, r1
   1807c:	lsr	r2, r2, #31
   18080:	cmp	r2, r3, lsr #31
   18084:	subne	r1, r3, r1
   18088:	subeq	r1, r1, r3
   1808c:	cmp	r1, #0
   18090:	bne	180e0 <argp_parse@@Base+0x4860>
   18094:	ldr	r1, [r7, #4]
   18098:	ldr	r3, [r6, #4]
   1809c:	sub	r1, r1, r3
   180a0:	cmp	r1, #0
   180a4:	bne	180e0 <argp_parse@@Base+0x4860>
   180a8:	ldr	r1, [r5, #8]
   180ac:	ldr	r3, [r4, #8]
   180b0:	mvn	r2, r1
   180b4:	lsr	r2, r2, #31
   180b8:	cmp	r2, r3, lsr #31
   180bc:	subne	r1, r3, r1
   180c0:	subeq	r1, r1, r3
   180c4:	cmp	r1, #0
   180c8:	bne	180e0 <argp_parse@@Base+0x4860>
   180cc:	ldr	r1, [r5, #4]
   180d0:	ldr	r3, [r4, #4]
   180d4:	sub	r1, r1, r3
   180d8:	cmp	r1, #0
   180dc:	mvneq	r1, #0
   180e0:	mov	r0, r1
   180e4:	add	sp, sp, #28
   180e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   180ec:	ldr	r4, [r4, #12]
   180f0:	ldr	r3, [r4, #20]
   180f4:	cmp	r2, r3
   180f8:	blt	180ec <argp_parse@@Base+0x486c>
   180fc:	ldr	r6, [r4, #12]
   18100:	ldr	r7, [r5, #12]
   18104:	cmp	r6, r7
   18108:	beq	18760 <argp_parse@@Base+0x4ee0>
   1810c:	ldr	r8, [r6, #12]
   18110:	ldr	r9, [r7, #12]
   18114:	cmp	r8, r9
   18118:	beq	187f4 <argp_parse@@Base+0x4f74>
   1811c:	ldr	sl, [r8, #12]
   18120:	ldr	fp, [r9, #12]
   18124:	cmp	sl, fp
   18128:	beq	1872c <argp_parse@@Base+0x4eac>
   1812c:	ldr	r3, [sl, #12]
   18130:	ldr	r2, [fp, #12]
   18134:	cmp	r3, r2
   18138:	beq	1885c <argp_parse@@Base+0x4fdc>
   1813c:	ldr	r0, [r3, #12]
   18140:	ldr	r1, [r2, #12]
   18144:	cmp	r0, r1
   18148:	beq	18908 <argp_parse@@Base+0x5088>
   1814c:	str	r2, [sp, #8]
   18150:	str	r3, [sp, #4]
   18154:	bl	17b14 <argp_parse@@Base+0x4294>
   18158:	subs	r1, r0, #0
   1815c:	bne	180e0 <argp_parse@@Base+0x4860>
   18160:	ldr	r2, [sp, #8]
   18164:	ldr	r3, [sp, #4]
   18168:	ldr	r0, [r2, #8]
   1816c:	ldr	r1, [r3, #8]
   18170:	mvn	ip, r0
   18174:	lsr	ip, ip, #31
   18178:	cmp	ip, r1, lsr #31
   1817c:	subne	r1, r1, r0
   18180:	subeq	r1, r0, r1
   18184:	cmp	r1, #0
   18188:	bne	180e0 <argp_parse@@Base+0x4860>
   1818c:	ldr	r1, [r2, #4]
   18190:	ldr	r3, [r3, #4]
   18194:	sub	r1, r1, r3
   18198:	cmp	r1, #0
   1819c:	bne	180e0 <argp_parse@@Base+0x4860>
   181a0:	ldr	r1, [fp, #8]
   181a4:	ldr	r3, [sl, #8]
   181a8:	mvn	r2, r1
   181ac:	lsr	r2, r2, #31
   181b0:	cmp	r2, r3, lsr #31
   181b4:	subne	r1, r3, r1
   181b8:	subeq	r1, r1, r3
   181bc:	cmp	r1, #0
   181c0:	bne	180e0 <argp_parse@@Base+0x4860>
   181c4:	ldr	r1, [fp, #4]
   181c8:	ldr	r3, [sl, #4]
   181cc:	sub	r1, r1, r3
   181d0:	cmp	r1, #0
   181d4:	bne	180e0 <argp_parse@@Base+0x4860>
   181d8:	ldr	r1, [r9, #8]
   181dc:	ldr	r3, [r8, #8]
   181e0:	mvn	r2, r1
   181e4:	lsr	r2, r2, #31
   181e8:	cmp	r2, r3, lsr #31
   181ec:	subne	r1, r3, r1
   181f0:	subeq	r1, r1, r3
   181f4:	cmp	r1, #0
   181f8:	bne	180e0 <argp_parse@@Base+0x4860>
   181fc:	ldr	r1, [r9, #4]
   18200:	ldr	r3, [r8, #4]
   18204:	sub	r1, r1, r3
   18208:	cmp	r1, #0
   1820c:	bne	180e0 <argp_parse@@Base+0x4860>
   18210:	ldr	r1, [r7, #8]
   18214:	ldr	r3, [r6, #8]
   18218:	mvn	r2, r1
   1821c:	lsr	r2, r2, #31
   18220:	cmp	r2, r3, lsr #31
   18224:	subne	r1, r3, r1
   18228:	subeq	r1, r1, r3
   1822c:	cmp	r1, #0
   18230:	bne	180e0 <argp_parse@@Base+0x4860>
   18234:	ldr	r1, [r7, #4]
   18238:	ldr	r3, [r6, #4]
   1823c:	sub	r1, r1, r3
   18240:	cmp	r1, #0
   18244:	bne	180e0 <argp_parse@@Base+0x4860>
   18248:	ldr	r1, [r5, #8]
   1824c:	ldr	r3, [r4, #8]
   18250:	mvn	r2, r1
   18254:	lsr	r2, r2, #31
   18258:	cmp	r2, r3, lsr #31
   1825c:	subne	r1, r3, r1
   18260:	subeq	r1, r1, r3
   18264:	cmp	r1, #0
   18268:	bne	180e0 <argp_parse@@Base+0x4860>
   1826c:	ldr	r1, [r5, #4]
   18270:	ldr	r3, [r4, #4]
   18274:	sub	r1, r1, r3
   18278:	cmp	r1, #0
   1827c:	moveq	r1, #1
   18280:	b	180e0 <argp_parse@@Base+0x4860>
   18284:	ldr	r0, [r4, #12]
   18288:	ldr	r1, [r5, #12]
   1828c:	cmp	r0, r1
   18290:	beq	18890 <argp_parse@@Base+0x5010>
   18294:	bl	17b14 <argp_parse@@Base+0x4294>
   18298:	subs	r1, r0, #0
   1829c:	bne	180e0 <argp_parse@@Base+0x4860>
   182a0:	ldr	r1, [r5, #8]
   182a4:	ldr	r3, [r4, #8]
   182a8:	mvn	r2, r1
   182ac:	lsr	r2, r2, #31
   182b0:	cmp	r2, r3, lsr #31
   182b4:	subne	r1, r3, r1
   182b8:	subeq	r1, r1, r3
   182bc:	cmp	r1, #0
   182c0:	bne	180e0 <argp_parse@@Base+0x4860>
   182c4:	ldr	r1, [r5, #4]
   182c8:	ldr	r3, [r4, #4]
   182cc:	sub	r1, r1, r3
   182d0:	cmp	r1, #0
   182d4:	bne	180e0 <argp_parse@@Base+0x4860>
   182d8:	ldr	r1, [r6, #12]
   182dc:	ldr	r3, [fp, #12]
   182e0:	mvn	r2, r1
   182e4:	lsr	r2, r2, #31
   182e8:	cmp	r2, r3, lsr #31
   182ec:	subne	r1, r3, r1
   182f0:	subeq	r1, r1, r3
   182f4:	cmp	r1, #0
   182f8:	bne	180e0 <argp_parse@@Base+0x4860>
   182fc:	ldm	fp, {r8, r9}
   18300:	cmp	r9, #0
   18304:	beq	1893c <argp_parse@@Base+0x50bc>
   18308:	add	r3, r8, #24
   1830c:	mov	r2, r9
   18310:	ldr	r4, [r3, #-24]	; 0xffffffe8
   18314:	cmp	r4, #0
   18318:	beq	18328 <argp_parse@@Base+0x4aa8>
   1831c:	ldr	r0, [r3, #-12]
   18320:	tst	r0, #2
   18324:	beq	18338 <argp_parse@@Base+0x4ab8>
   18328:	subs	r2, r2, #1
   1832c:	add	r3, r3, #24
   18330:	bne	18310 <argp_parse@@Base+0x4a90>
   18334:	mov	r4, r2
   18338:	ldm	r6, {r7, sl}
   1833c:	cmp	sl, #0
   18340:	beq	18944 <argp_parse@@Base+0x50c4>
   18344:	add	r3, r7, #24
   18348:	mov	r2, sl
   1834c:	ldr	r5, [r3, #-24]	; 0xffffffe8
   18350:	cmp	r5, #0
   18354:	beq	18364 <argp_parse@@Base+0x4ae4>
   18358:	ldr	r0, [r3, #-12]
   1835c:	tst	r0, #2
   18360:	beq	18374 <argp_parse@@Base+0x4af4>
   18364:	subs	r2, r2, #1
   18368:	add	r3, r3, #24
   1836c:	bne	1834c <argp_parse@@Base+0x4acc>
   18370:	mov	r5, r2
   18374:	ldr	r3, [r8, #12]
   18378:	tst	r3, #8
   1837c:	beq	183e8 <argp_parse@@Base+0x4b68>
   18380:	cmp	r4, #0
   18384:	beq	183e8 <argp_parse@@Base+0x4b68>
   18388:	str	r1, [sp, #4]
   1838c:	bl	113cc <__ctype_b_loc@plt>
   18390:	ldr	r1, [sp, #4]
   18394:	mov	ip, r4
   18398:	ldr	r0, [r0]
   1839c:	ldrb	r2, [ip]
   183a0:	mov	r4, ip
   183a4:	add	ip, ip, #1
   183a8:	lsl	r3, r2, #1
   183ac:	ldrh	r3, [r0, r3]
   183b0:	tst	r3, #8192	; 0x2000
   183b4:	bne	1839c <argp_parse@@Base+0x4b1c>
   183b8:	cmp	r2, #0
   183bc:	bne	183d8 <argp_parse@@Base+0x4b58>
   183c0:	b	186e4 <argp_parse@@Base+0x4e64>
   183c4:	ldrb	r3, [r4, #1]!
   183c8:	cmp	r3, #0
   183cc:	lsl	r3, r3, #1
   183d0:	beq	183e0 <argp_parse@@Base+0x4b60>
   183d4:	ldrh	r3, [r0, r3]
   183d8:	tst	r3, #8
   183dc:	beq	183c4 <argp_parse@@Base+0x4b44>
   183e0:	cmp	r2, #45	; 0x2d
   183e4:	bne	186e4 <argp_parse@@Base+0x4e64>
   183e8:	ldr	r3, [r7, #12]
   183ec:	tst	r3, #8
   183f0:	beq	1847c <argp_parse@@Base+0x4bfc>
   183f4:	cmp	r5, #0
   183f8:	movne	r2, r1
   183fc:	beq	1847c <argp_parse@@Base+0x4bfc>
   18400:	str	r1, [sp, #8]
   18404:	str	r2, [sp, #4]
   18408:	bl	113cc <__ctype_b_loc@plt>
   1840c:	ldr	r2, [sp, #4]
   18410:	ldr	r1, [sp, #8]
   18414:	mov	r3, r5
   18418:	ldr	ip, [r0]
   1841c:	ldrb	r0, [r3]
   18420:	mov	r5, r3
   18424:	add	r3, r3, #1
   18428:	lsl	lr, r0, #1
   1842c:	ldrh	lr, [ip, lr]
   18430:	tst	lr, #8192	; 0x2000
   18434:	bne	1841c <argp_parse@@Base+0x4b9c>
   18438:	cmp	r0, #0
   1843c:	beq	18468 <argp_parse@@Base+0x4be8>
   18440:	tst	lr, #8
   18444:	beq	18458 <argp_parse@@Base+0x4bd8>
   18448:	b	18468 <argp_parse@@Base+0x4be8>
   1844c:	ldrh	r3, [ip, r3]
   18450:	tst	r3, #8
   18454:	bne	18468 <argp_parse@@Base+0x4be8>
   18458:	ldrb	r3, [r5, #1]!
   1845c:	cmp	r3, #0
   18460:	lsl	r3, r3, #1
   18464:	bne	1844c <argp_parse@@Base+0x4bcc>
   18468:	cmp	r0, #45	; 0x2d
   1846c:	subne	r2, r2, #1
   18470:	cmp	r2, #0
   18474:	movne	r1, r2
   18478:	bne	180e0 <argp_parse@@Base+0x4860>
   1847c:	ldr	r3, [fp, #8]
   18480:	cmp	r9, #0
   18484:	mov	r2, r3
   18488:	beq	1894c <argp_parse@@Base+0x50cc>
   1848c:	str	r7, [sp, #16]
   18490:	str	r6, [sp, #20]
   18494:	mov	r3, #1
   18498:	str	r4, [sp, #8]
   1849c:	str	r5, [sp, #12]
   184a0:	mov	r7, r1
   184a4:	mov	r6, r2
   184a8:	b	184c4 <argp_parse@@Base+0x4c44>
   184ac:	subs	r9, r9, #1
   184b0:	moveq	ip, #0
   184b4:	andne	ip, ip, #1
   184b8:	cmp	ip, #0
   184bc:	add	r8, r8, #24
   184c0:	beq	18558 <argp_parse@@Base+0x4cd8>
   184c4:	ldr	r4, [r8, #12]
   184c8:	mov	ip, r3
   184cc:	ands	fp, r4, #8
   184d0:	movne	fp, r7
   184d4:	bne	184ac <argp_parse@@Base+0x4c2c>
   184d8:	ldr	r5, [r8, #4]
   184dc:	sub	r0, r5, #1
   184e0:	cmp	r0, #254	; 0xfe
   184e4:	bhi	184ac <argp_parse@@Base+0x4c2c>
   184e8:	str	r3, [sp, #4]
   184ec:	bl	113cc <__ctype_b_loc@plt>
   184f0:	lsl	lr, r5, #1
   184f4:	ldr	r3, [sp, #4]
   184f8:	mov	ip, r3
   184fc:	ldr	r0, [r0]
   18500:	ldrh	r0, [r0, lr]
   18504:	tst	r0, #16384	; 0x4000
   18508:	beq	184ac <argp_parse@@Base+0x4c2c>
   1850c:	ldrb	r0, [r6]
   18510:	mov	ip, r3
   18514:	cmp	r5, r0
   18518:	bne	184ac <argp_parse@@Base+0x4c2c>
   1851c:	and	r4, r4, #10
   18520:	cmp	r4, #0
   18524:	moveq	fp, r5
   18528:	movne	fp, #0
   1852c:	add	r6, r6, #1
   18530:	movne	ip, #1
   18534:	moveq	ip, #0
   18538:	b	184ac <argp_parse@@Base+0x4c2c>
   1853c:	ldr	r5, [r6, #16]
   18540:	ldr	ip, [r0, #12]
   18544:	cmp	r5, #0
   18548:	movne	r2, r5
   1854c:	bne	17f3c <argp_parse@@Base+0x46bc>
   18550:	ldr	r3, [r6, #12]
   18554:	b	17f4c <argp_parse@@Base+0x46cc>
   18558:	mov	r3, fp
   1855c:	ldr	r6, [sp, #20]
   18560:	uxtb	r3, r3
   18564:	cmp	sl, #0
   18568:	str	fp, [sp, #4]
   1856c:	mov	r1, r7
   18570:	ldr	r4, [sp, #8]
   18574:	ldr	r7, [sp, #16]
   18578:	ldr	r5, [sp, #12]
   1857c:	ldr	fp, [r6, #8]
   18580:	str	r3, [sp, #16]
   18584:	beq	18794 <argp_parse@@Base+0x4f14>
   18588:	str	r4, [sp, #8]
   1858c:	mov	r8, #1
   18590:	str	r5, [sp, #12]
   18594:	mov	r4, r1
   18598:	b	185b4 <argp_parse@@Base+0x4d34>
   1859c:	subs	sl, sl, #1
   185a0:	moveq	r3, #0
   185a4:	andne	r3, r3, #1
   185a8:	cmp	r3, #0
   185ac:	add	r7, r7, #24
   185b0:	beq	18620 <argp_parse@@Base+0x4da0>
   185b4:	ldr	r6, [r7, #12]
   185b8:	mov	r3, r8
   185bc:	ands	r9, r6, #8
   185c0:	movne	r9, r4
   185c4:	bne	1859c <argp_parse@@Base+0x4d1c>
   185c8:	ldr	r5, [r7, #4]
   185cc:	sub	r0, r5, #1
   185d0:	cmp	r0, #254	; 0xfe
   185d4:	bhi	1859c <argp_parse@@Base+0x4d1c>
   185d8:	bl	113cc <__ctype_b_loc@plt>
   185dc:	lsl	ip, r5, #1
   185e0:	mov	r3, r8
   185e4:	ldr	r0, [r0]
   185e8:	ldrh	r0, [r0, ip]
   185ec:	tst	r0, #16384	; 0x4000
   185f0:	beq	1859c <argp_parse@@Base+0x4d1c>
   185f4:	ldrb	r0, [fp]
   185f8:	mov	r3, r8
   185fc:	cmp	r5, r0
   18600:	bne	1859c <argp_parse@@Base+0x4d1c>
   18604:	and	r6, r6, #2
   18608:	cmp	r6, #0
   1860c:	moveq	r9, r5
   18610:	add	fp, fp, #1
   18614:	movne	r3, #1
   18618:	moveq	r3, #0
   1861c:	b	1859c <argp_parse@@Base+0x4d1c>
   18620:	mov	r1, r4
   18624:	ldmib	sp, {r3, r4}
   18628:	ldr	r5, [sp, #12]
   1862c:	uxtb	r6, r9
   18630:	cmp	r3, #0
   18634:	beq	186d0 <argp_parse@@Base+0x4e50>
   18638:	ldr	r3, [sp, #16]
   1863c:	mov	r7, r3
   18640:	lsl	r8, r3, #2
   18644:	cmp	r9, #0
   18648:	beq	187ac <argp_parse@@Base+0x4f2c>
   1864c:	lsl	sl, r6, #2
   18650:	bl	113a8 <__ctype_tolower_loc@plt>
   18654:	ldr	r3, [r0]
   18658:	ldr	r1, [r3, r8]
   1865c:	ldr	r3, [r3, sl]
   18660:	subs	r1, r1, r3
   18664:	bne	180e0 <argp_parse@@Base+0x4860>
   18668:	subs	r1, r6, r7
   1866c:	bne	180e0 <argp_parse@@Base+0x4860>
   18670:	adds	r1, r9, #0
   18674:	ldr	r3, [sp, #4]
   18678:	movne	r1, #1
   1867c:	cmp	r3, #0
   18680:	rsbeq	r1, r1, #0
   18684:	rsbne	r1, r1, #1
   18688:	cmp	r1, #0
   1868c:	bne	180e0 <argp_parse@@Base+0x4860>
   18690:	cmp	r3, #0
   18694:	bne	180e0 <argp_parse@@Base+0x4860>
   18698:	adds	r1, r5, #0
   1869c:	movne	r1, #1
   186a0:	cmp	r4, #0
   186a4:	rsbeq	r1, r1, #0
   186a8:	rsbne	r1, r1, #1
   186ac:	cmp	r1, #0
   186b0:	bne	180e0 <argp_parse@@Base+0x4860>
   186b4:	cmp	r4, #0
   186b8:	beq	180e0 <argp_parse@@Base+0x4860>
   186bc:	mov	r1, r5
   186c0:	mov	r0, r4
   186c4:	add	sp, sp, #28
   186c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   186cc:	b	11318 <strcasecmp@plt>
   186d0:	cmp	r4, #0
   186d4:	beq	18978 <argp_parse@@Base+0x50f8>
   186d8:	ldrb	r7, [r4]
   186dc:	lsl	r8, r7, #2
   186e0:	b	18644 <argp_parse@@Base+0x4dc4>
   186e4:	ldr	r3, [r7, #12]
   186e8:	tst	r3, #8
   186ec:	bne	188c4 <argp_parse@@Base+0x5044>
   186f0:	mov	r1, #1
   186f4:	b	180e0 <argp_parse@@Base+0x4860>
   186f8:	ldr	r1, [r7, #8]
   186fc:	ldr	r3, [r6, #8]
   18700:	mvn	r2, r1
   18704:	ldr	r0, [r7, #4]
   18708:	lsr	r2, r2, #31
   1870c:	cmp	r2, r3, lsr #31
   18710:	subne	r1, r3, r1
   18714:	subeq	r1, r1, r3
   18718:	ldr	r2, [r6, #4]
   1871c:	cmp	r1, #0
   18720:	subeq	r1, r0, r2
   18724:	beq	180a0 <argp_parse@@Base+0x4820>
   18728:	b	180e0 <argp_parse@@Base+0x4860>
   1872c:	ldr	r1, [r9, #8]
   18730:	ldr	r3, [r8, #8]
   18734:	mvn	r2, r1
   18738:	ldr	r0, [r9, #4]
   1873c:	lsr	r2, r2, #31
   18740:	cmp	r2, r3, lsr #31
   18744:	subne	r1, r3, r1
   18748:	subeq	r1, r1, r3
   1874c:	ldr	r2, [r8, #4]
   18750:	cmp	r1, #0
   18754:	subeq	r1, r0, r2
   18758:	beq	18208 <argp_parse@@Base+0x4988>
   1875c:	b	180e0 <argp_parse@@Base+0x4860>
   18760:	ldr	r1, [r5, #8]
   18764:	ldr	r3, [r4, #8]
   18768:	mvn	r2, r1
   1876c:	ldr	r0, [r5, #4]
   18770:	lsr	r2, r2, #31
   18774:	cmp	r2, r3, lsr #31
   18778:	subne	r1, r3, r1
   1877c:	subeq	r1, r1, r3
   18780:	ldr	r2, [r4, #4]
   18784:	cmp	r1, #0
   18788:	subeq	r1, r0, r2
   1878c:	beq	18278 <argp_parse@@Base+0x49f8>
   18790:	b	180e0 <argp_parse@@Base+0x4860>
   18794:	ldr	r3, [sp, #4]
   18798:	cmp	r3, #0
   1879c:	beq	18984 <argp_parse@@Base+0x5104>
   187a0:	ldr	r3, [sp, #16]
   187a4:	mov	r7, r3
   187a8:	lsl	r8, r3, #2
   187ac:	cmp	r5, #0
   187b0:	beq	18968 <argp_parse@@Base+0x50e8>
   187b4:	ldrb	r6, [r5]
   187b8:	mov	r9, r1
   187bc:	b	1864c <argp_parse@@Base+0x4dcc>
   187c0:	ldr	r1, [r5, #8]
   187c4:	ldr	r3, [r4, #8]
   187c8:	mvn	r2, r1
   187cc:	ldr	r0, [r5, #4]
   187d0:	lsr	r2, r2, #31
   187d4:	cmp	r2, r3, lsr #31
   187d8:	subne	r1, r3, r1
   187dc:	subeq	r1, r1, r3
   187e0:	ldr	r2, [r4, #4]
   187e4:	cmp	r1, #0
   187e8:	subeq	r1, r0, r2
   187ec:	beq	180d8 <argp_parse@@Base+0x4858>
   187f0:	b	180e0 <argp_parse@@Base+0x4860>
   187f4:	ldr	r1, [r7, #8]
   187f8:	ldr	r3, [r6, #8]
   187fc:	mvn	r2, r1
   18800:	ldr	r0, [r7, #4]
   18804:	lsr	r2, r2, #31
   18808:	cmp	r2, r3, lsr #31
   1880c:	subne	r1, r3, r1
   18810:	subeq	r1, r1, r3
   18814:	ldr	r2, [r6, #4]
   18818:	cmp	r1, #0
   1881c:	subeq	r1, r0, r2
   18820:	beq	18240 <argp_parse@@Base+0x49c0>
   18824:	b	180e0 <argp_parse@@Base+0x4860>
   18828:	ldr	r1, [r9, #8]
   1882c:	ldr	r3, [r8, #8]
   18830:	mvn	r2, r1
   18834:	ldr	r0, [r9, #4]
   18838:	lsr	r2, r2, #31
   1883c:	cmp	r2, r3, lsr #31
   18840:	subne	r1, r3, r1
   18844:	subeq	r1, r1, r3
   18848:	ldr	r2, [r8, #4]
   1884c:	cmp	r1, #0
   18850:	subeq	r1, r0, r2
   18854:	beq	18068 <argp_parse@@Base+0x47e8>
   18858:	b	180e0 <argp_parse@@Base+0x4860>
   1885c:	ldr	r1, [fp, #8]
   18860:	ldr	r3, [sl, #8]
   18864:	mvn	r2, r1
   18868:	ldr	r0, [fp, #4]
   1886c:	lsr	r2, r2, #31
   18870:	cmp	r2, r3, lsr #31
   18874:	subne	r1, r3, r1
   18878:	subeq	r1, r1, r3
   1887c:	ldr	r2, [sl, #4]
   18880:	cmp	r1, #0
   18884:	subeq	r1, r0, r2
   18888:	beq	181d0 <argp_parse@@Base+0x4950>
   1888c:	b	180e0 <argp_parse@@Base+0x4860>
   18890:	ldr	r1, [r5, #8]
   18894:	ldr	r3, [r4, #8]
   18898:	mvn	r2, r1
   1889c:	ldr	r0, [r5, #4]
   188a0:	lsr	r2, r2, #31
   188a4:	cmp	r2, r3, lsr #31
   188a8:	subne	r1, r3, r1
   188ac:	subeq	r1, r1, r3
   188b0:	ldr	r2, [r4, #4]
   188b4:	cmp	r1, #0
   188b8:	subeq	r1, r0, r2
   188bc:	beq	182d0 <argp_parse@@Base+0x4a50>
   188c0:	b	180e0 <argp_parse@@Base+0x4860>
   188c4:	cmp	r5, #0
   188c8:	beq	186f0 <argp_parse@@Base+0x4e70>
   188cc:	mov	r2, #1
   188d0:	b	18400 <argp_parse@@Base+0x4b80>
   188d4:	ldr	r1, [fp, #8]
   188d8:	ldr	r3, [sl, #8]
   188dc:	mvn	r2, r1
   188e0:	ldr	r0, [fp, #4]
   188e4:	lsr	r2, r2, #31
   188e8:	cmp	r2, r3, lsr #31
   188ec:	subne	r1, r3, r1
   188f0:	subeq	r1, r1, r3
   188f4:	ldr	r2, [sl, #4]
   188f8:	cmp	r1, #0
   188fc:	subeq	r1, r0, r2
   18900:	beq	18030 <argp_parse@@Base+0x47b0>
   18904:	b	180e0 <argp_parse@@Base+0x4860>
   18908:	ldr	r0, [r2, #8]
   1890c:	ldr	r1, [r3, #8]
   18910:	mvn	ip, r0
   18914:	ldr	r2, [r2, #4]
   18918:	lsr	ip, ip, #31
   1891c:	cmp	ip, r1, lsr #31
   18920:	subne	r1, r1, r0
   18924:	subeq	r1, r0, r1
   18928:	ldr	r3, [r3, #4]
   1892c:	cmp	r1, #0
   18930:	subeq	r1, r2, r3
   18934:	beq	18198 <argp_parse@@Base+0x4918>
   18938:	b	180e0 <argp_parse@@Base+0x4860>
   1893c:	mov	r4, r1
   18940:	b	18338 <argp_parse@@Base+0x4ab8>
   18944:	mov	r5, sl
   18948:	b	18374 <argp_parse@@Base+0x4af4>
   1894c:	cmp	sl, #0
   18950:	ldr	fp, [r6, #8]
   18954:	streq	r1, [sp, #4]
   18958:	beq	18984 <argp_parse@@Base+0x5104>
   1895c:	str	r9, [sp, #16]
   18960:	str	r1, [sp, #4]
   18964:	b	18588 <argp_parse@@Base+0x4d08>
   18968:	mov	r9, r1
   1896c:	mov	sl, r5
   18970:	mov	r6, r5
   18974:	b	18650 <argp_parse@@Base+0x4dd0>
   18978:	mov	r8, r4
   1897c:	mov	r7, r4
   18980:	b	18644 <argp_parse@@Base+0x4dc4>
   18984:	cmp	r4, #0
   18988:	moveq	r8, r4
   1898c:	moveq	r7, r4
   18990:	beq	187ac <argp_parse@@Base+0x4f2c>
   18994:	mov	r9, r1
   18998:	mov	r6, #0
   1899c:	b	186d8 <argp_parse@@Base+0x4e58>

000189a0 <argp_failure@@Base>:
   189a0:	push	{r3}		; (str r3, [sp, #-4]!)
   189a4:	push	{r4, r5, r6, r7, lr}
   189a8:	subs	r5, r0, #0
   189ac:	sub	sp, sp, #200	; 0xc8
   189b0:	mov	r7, r1
   189b4:	mov	r6, r2
   189b8:	beq	18b08 <argp_failure@@Base+0x168>
   189bc:	ldr	r3, [r5, #16]
   189c0:	tst	r3, #2
   189c4:	bne	18af8 <argp_failure@@Base+0x158>
   189c8:	ldr	r4, [r5, #44]	; 0x2c
   189cc:	cmp	r4, #0
   189d0:	beq	18af8 <argp_failure@@Base+0x158>
   189d4:	mov	r0, r4
   189d8:	bl	11510 <flockfile@plt>
   189dc:	ldr	r0, [r5, #40]	; 0x28
   189e0:	mov	r1, r4
   189e4:	bl	11210 <fputs_unlocked@plt>
   189e8:	ldr	r3, [sp, #220]	; 0xdc
   189ec:	cmp	r3, #0
   189f0:	beq	18a4c <argp_failure@@Base+0xac>
   189f4:	ldr	r3, [r4, #20]
   189f8:	ldr	r1, [r4, #24]
   189fc:	add	r2, sp, #224	; 0xe0
   18a00:	cmp	r3, r1
   18a04:	str	r2, [sp]
   18a08:	addcc	r1, r3, #1
   18a0c:	movcc	r2, #58	; 0x3a
   18a10:	strcc	r1, [r4, #20]
   18a14:	strbcc	r2, [r3]
   18a18:	bcs	18b54 <argp_failure@@Base+0x1b4>
   18a1c:	ldr	r3, [r4, #20]
   18a20:	ldr	r2, [r4, #24]
   18a24:	cmp	r3, r2
   18a28:	addcc	r1, r3, #1
   18a2c:	movcc	r2, #32
   18a30:	strcc	r1, [r4, #20]
   18a34:	strbcc	r2, [r3]
   18a38:	bcs	18b44 <argp_failure@@Base+0x1a4>
   18a3c:	ldr	r2, [sp]
   18a40:	ldr	r1, [sp, #220]	; 0xdc
   18a44:	mov	r0, r4
   18a48:	bl	114b0 <vfprintf@plt>
   18a4c:	cmp	r6, #0
   18a50:	beq	18ab4 <argp_failure@@Base+0x114>
   18a54:	ldr	r3, [r4, #20]
   18a58:	ldr	r2, [r4, #24]
   18a5c:	cmp	r3, r2
   18a60:	addcc	r1, r3, #1
   18a64:	movcc	r2, #58	; 0x3a
   18a68:	strcc	r1, [r4, #20]
   18a6c:	strbcc	r2, [r3]
   18a70:	bcs	18b74 <argp_failure@@Base+0x1d4>
   18a74:	ldr	r3, [r4, #20]
   18a78:	ldr	r2, [r4, #24]
   18a7c:	cmp	r3, r2
   18a80:	addcc	r1, r3, #1
   18a84:	movcc	r2, #32
   18a88:	strcc	r1, [r4, #20]
   18a8c:	strbcc	r2, [r3]
   18a90:	bcs	18b64 <argp_failure@@Base+0x1c4>
   18a94:	mov	r2, #200	; 0xc8
   18a98:	mov	r1, sp
   18a9c:	mov	r0, r6
   18aa0:	bl	11414 <strerror_r@plt>
   18aa4:	cmp	r0, #0
   18aa8:	beq	18b84 <argp_failure@@Base+0x1e4>
   18aac:	mov	r1, r4
   18ab0:	bl	11210 <fputs_unlocked@plt>
   18ab4:	ldr	r3, [r4, #20]
   18ab8:	ldr	r2, [r4, #24]
   18abc:	cmp	r3, r2
   18ac0:	addcc	r1, r3, #1
   18ac4:	movcc	r2, #10
   18ac8:	strcc	r1, [r4, #20]
   18acc:	strbcc	r2, [r3]
   18ad0:	bcs	18b2c <argp_failure@@Base+0x18c>
   18ad4:	mov	r0, r4
   18ad8:	bl	11324 <funlockfile@plt>
   18adc:	cmp	r7, #0
   18ae0:	beq	18af8 <argp_failure@@Base+0x158>
   18ae4:	cmp	r5, #0
   18ae8:	beq	18b3c <argp_failure@@Base+0x19c>
   18aec:	ldr	r3, [r5, #16]
   18af0:	tst	r3, #32
   18af4:	beq	18b3c <argp_failure@@Base+0x19c>
   18af8:	add	sp, sp, #200	; 0xc8
   18afc:	pop	{r4, r5, r6, r7, lr}
   18b00:	add	sp, sp, #4
   18b04:	bx	lr
   18b08:	ldr	r3, [pc, #140]	; 18b9c <argp_failure@@Base+0x1fc>
   18b0c:	ldr	r4, [r3]
   18b10:	cmp	r4, #0
   18b14:	beq	18af8 <argp_failure@@Base+0x158>
   18b18:	mov	r0, r4
   18b1c:	bl	11510 <flockfile@plt>
   18b20:	ldr	r3, [pc, #120]	; 18ba0 <argp_failure@@Base+0x200>
   18b24:	ldr	r0, [r3]
   18b28:	b	189e0 <argp_failure@@Base+0x40>
   18b2c:	mov	r1, #10
   18b30:	mov	r0, r4
   18b34:	bl	11480 <__overflow@plt>
   18b38:	b	18ad4 <argp_failure@@Base+0x134>
   18b3c:	mov	r0, r7
   18b40:	bl	113d8 <exit@plt>
   18b44:	mov	r1, #32
   18b48:	mov	r0, r4
   18b4c:	bl	11480 <__overflow@plt>
   18b50:	b	18a3c <argp_failure@@Base+0x9c>
   18b54:	mov	r1, #58	; 0x3a
   18b58:	mov	r0, r4
   18b5c:	bl	11480 <__overflow@plt>
   18b60:	b	18a1c <argp_failure@@Base+0x7c>
   18b64:	mov	r1, #32
   18b68:	mov	r0, r4
   18b6c:	bl	11480 <__overflow@plt>
   18b70:	b	18a94 <argp_failure@@Base+0xf4>
   18b74:	mov	r1, #58	; 0x3a
   18b78:	mov	r0, r4
   18b7c:	bl	11480 <__overflow@plt>
   18b80:	b	18a74 <argp_failure@@Base+0xd4>
   18b84:	mov	r0, r6
   18b88:	bl	1139c <strerror@plt>
   18b8c:	ldr	r3, [pc, #16]	; 18ba4 <argp_failure@@Base+0x204>
   18b90:	cmp	r0, #0
   18b94:	moveq	r0, r3
   18b98:	b	18aac <argp_failure@@Base+0x10c>
   18b9c:	strdeq	lr, [r2], -r0
   18ba0:	andeq	lr, r2, r8, ror #5
   18ba4:	andeq	sp, r1, r0, lsr #9
   18ba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18bac:	add	fp, sp, #32
   18bb0:	cmp	r2, #0
   18bb4:	sub	sp, sp, #116	; 0x74
   18bb8:	str	r2, [fp, #-136]	; 0xffffff78
   18bbc:	str	r0, [fp, #-116]	; 0xffffff8c
   18bc0:	str	r1, [fp, #-104]	; 0xffffff98
   18bc4:	str	r3, [fp, #-100]	; 0xffffff9c
   18bc8:	beq	18cec <argp_failure@@Base+0x34c>
   18bcc:	ldr	r3, [pc, #4076]	; 19bc0 <argp_failure@@Base+0x1220>
   18bd0:	mov	r0, r2
   18bd4:	mov	r4, r3
   18bd8:	str	r3, [fp, #-96]	; 0xffffffa0
   18bdc:	bl	11510 <flockfile@plt>
   18be0:	ldr	sl, [r4, #36]	; 0x24
   18be4:	cmp	sl, #0
   18be8:	beq	19100 <argp_failure@@Base+0x760>
   18bec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18bf0:	mov	r3, #0
   18bf4:	mov	r1, r3
   18bf8:	ldr	r2, [r2, #32]
   18bfc:	ldr	r0, [fp, #-136]	; 0xffffff78
   18c00:	bl	1bbbc <argp_error@@Base+0x19e0>
   18c04:	subs	sl, r0, #0
   18c08:	beq	19f1c <argp_failure@@Base+0x157c>
   18c0c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18c10:	ands	r3, r3, #11
   18c14:	streq	r3, [fp, #-108]	; 0xffffff94
   18c18:	bne	1952c <argp_failure@@Base+0xb8c>
   18c1c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18c20:	ands	r4, r3, #3
   18c24:	bne	19654 <argp_failure@@Base+0xcb4>
   18c28:	tst	r3, #16
   18c2c:	bne	1962c <argp_failure@@Base+0xc8c>
   18c30:	tst	r3, #4
   18c34:	bne	1950c <argp_failure@@Base+0xb6c>
   18c38:	tst	r3, #8
   18c3c:	bne	18cf4 <argp_failure@@Base+0x354>
   18c40:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18c44:	tst	r3, #32
   18c48:	bne	190bc <argp_failure@@Base+0x71c>
   18c4c:	tst	r3, #64	; 0x40
   18c50:	beq	18c9c <argp_failure@@Base+0x2fc>
   18c54:	ldr	r5, [pc, #3944]	; 19bc4 <argp_failure@@Base+0x1224>
   18c58:	ldr	r2, [r5]
   18c5c:	cmp	r2, #0
   18c60:	beq	18c9c <argp_failure@@Base+0x2fc>
   18c64:	cmp	r4, #0
   18c68:	beq	18c90 <argp_failure@@Base+0x2f0>
   18c6c:	ldr	r3, [sl, #28]
   18c70:	ldr	r2, [sl, #32]
   18c74:	cmp	r3, r2
   18c78:	bcs	19eec <argp_failure@@Base+0x154c>
   18c7c:	add	r1, r3, #1
   18c80:	mov	r2, #10
   18c84:	str	r1, [sl, #28]
   18c88:	strb	r2, [r3]
   18c8c:	ldr	r2, [r5]
   18c90:	ldr	r1, [pc, #3888]	; 19bc8 <argp_failure@@Base+0x1228>
   18c94:	mov	r0, sl
   18c98:	bl	1c2e4 <argp_error@@Base+0x2108>
   18c9c:	ldr	r0, [fp, #-136]	; 0xffffff78
   18ca0:	bl	11324 <funlockfile@plt>
   18ca4:	ldr	r3, [fp, #-108]	; 0xffffff94
   18ca8:	cmp	r3, #0
   18cac:	beq	18ce4 <argp_failure@@Base+0x344>
   18cb0:	ldr	r0, [r3, #12]
   18cb4:	cmp	r0, #0
   18cb8:	beq	18cd0 <argp_failure@@Base+0x330>
   18cbc:	ldr	r4, [r0, #24]
   18cc0:	bl	147fc <argp_parse@@Base+0xf7c>
   18cc4:	subs	r0, r4, #0
   18cc8:	bne	18cbc <argp_failure@@Base+0x31c>
   18ccc:	ldr	r3, [fp, #-108]	; 0xffffff94
   18cd0:	ldr	r3, [r3, #4]
   18cd4:	cmp	r3, #0
   18cd8:	bne	190e8 <argp_failure@@Base+0x748>
   18cdc:	ldr	r0, [fp, #-108]	; 0xffffff94
   18ce0:	bl	147fc <argp_parse@@Base+0xf7c>
   18ce4:	mov	r0, sl
   18ce8:	bl	1c1a4 <argp_error@@Base+0x1fc8>
   18cec:	sub	sp, fp, #32
   18cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18cf4:	ldr	r3, [fp, #-108]	; 0xffffff94
   18cf8:	ldr	r3, [r3, #4]
   18cfc:	cmp	r3, #0
   18d00:	str	r3, [fp, #-112]	; 0xffffff90
   18d04:	beq	18c40 <argp_failure@@Base+0x2a0>
   18d08:	cmp	r4, #0
   18d0c:	beq	19dfc <argp_failure@@Base+0x145c>
   18d10:	ldr	r3, [sl, #28]
   18d14:	ldr	r2, [sl, #32]
   18d18:	cmp	r3, r2
   18d1c:	bcs	1a068 <argp_failure@@Base+0x16c8>
   18d20:	add	r1, r3, #1
   18d24:	mov	r2, #10
   18d28:	str	r1, [sl, #28]
   18d2c:	strb	r2, [r3]
   18d30:	ldr	r3, [fp, #-108]	; 0xffffff94
   18d34:	ldr	r2, [fp, #-108]	; 0xffffff94
   18d38:	ldr	r3, [r3, #4]
   18d3c:	ldr	r8, [r2]
   18d40:	str	r3, [fp, #-112]	; 0xffffff90
   18d44:	cmp	r3, #0
   18d48:	mov	r3, #0
   18d4c:	str	r3, [fp, #-88]	; 0xffffffa8
   18d50:	str	r3, [fp, #-84]	; 0xffffffac
   18d54:	str	r3, [fp, #-80]	; 0xffffffb0
   18d58:	beq	190ac <argp_failure@@Base+0x70c>
   18d5c:	ldr	ip, [sl, #28]
   18d60:	ldr	r3, [sl, #24]
   18d64:	ldr	lr, [sl, #16]
   18d68:	sub	ip, ip, r3
   18d6c:	cmp	ip, lr
   18d70:	ldr	r6, [r8]
   18d74:	ldr	r9, [r8, #8]
   18d78:	bhi	19c5c <argp_failure@@Base+0x12bc>
   18d7c:	ldr	r3, [sl, #4]
   18d80:	ldr	r0, [r6, #12]
   18d84:	str	r3, [fp, #-120]	; 0xffffff88
   18d88:	ldr	r3, [sl, #12]
   18d8c:	mov	r7, #0
   18d90:	str	r3, [fp, #-124]	; 0xffffff84
   18d94:	sub	r3, fp, #88	; 0x58
   18d98:	str	r7, [sl, #4]
   18d9c:	str	r3, [fp, #-68]	; 0xffffffbc
   18da0:	ldr	r3, [fp, #-104]	; 0xffffff98
   18da4:	ands	r0, r0, #8
   18da8:	mov	r2, #1
   18dac:	str	r2, [fp, #-64]	; 0xffffffc0
   18db0:	str	r8, [fp, #-76]	; 0xffffffb4
   18db4:	str	sl, [fp, #-72]	; 0xffffffb8
   18db8:	str	r3, [fp, #-60]	; 0xffffffc4
   18dbc:	strne	r7, [fp, #-132]	; 0xffffff7c
   18dc0:	bne	18dfc <argp_failure@@Base+0x45c>
   18dc4:	ldr	r1, [r8, #4]
   18dc8:	cmp	r1, r7
   18dcc:	beq	18df8 <argp_failure@@Base+0x458>
   18dd0:	add	r2, r6, #24
   18dd4:	ldr	r3, [r2, #-24]	; 0xffffffe8
   18dd8:	cmp	r3, #0
   18ddc:	beq	18dec <argp_failure@@Base+0x44c>
   18de0:	ldr	r3, [r2, #-12]
   18de4:	tst	r3, #2
   18de8:	beq	19ca0 <argp_failure@@Base+0x1300>
   18dec:	subs	r1, r1, #1
   18df0:	add	r2, r2, #24
   18df4:	bne	18dd4 <argp_failure@@Base+0x434>
   18df8:	str	r0, [fp, #-132]	; 0xffffff7c
   18dfc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18e00:	cmp	ip, lr
   18e04:	ldr	r4, [r3, #8]
   18e08:	bhi	19c48 <argp_failure@@Base+0x12a8>
   18e0c:	str	r4, [sl, #12]
   18e10:	ldr	r5, [r8, #4]
   18e14:	cmp	r5, #0
   18e18:	beq	18e9c <argp_failure@@Base+0x4fc>
   18e1c:	str	r8, [fp, #-128]	; 0xffffff80
   18e20:	mov	r4, r6
   18e24:	mov	r8, r9
   18e28:	b	18e38 <argp_failure@@Base+0x498>
   18e2c:	subs	r5, r5, #1
   18e30:	add	r4, r4, #24
   18e34:	beq	18e90 <argp_failure@@Base+0x4f0>
   18e38:	ldr	r7, [r4, #12]
   18e3c:	tst	r7, #8
   18e40:	bne	18e2c <argp_failure@@Base+0x48c>
   18e44:	ldr	r9, [r4, #4]
   18e48:	sub	r2, r9, #1
   18e4c:	cmp	r2, #254	; 0xfe
   18e50:	bhi	18e2c <argp_failure@@Base+0x48c>
   18e54:	bl	113cc <__ctype_b_loc@plt>
   18e58:	lsl	r2, r9, #1
   18e5c:	ldr	r1, [r0]
   18e60:	ldrh	r2, [r1, r2]
   18e64:	tst	r2, #16384	; 0x4000
   18e68:	beq	18e2c <argp_failure@@Base+0x48c>
   18e6c:	ldrb	r2, [r8]
   18e70:	cmp	r9, r2
   18e74:	bne	18e2c <argp_failure@@Base+0x48c>
   18e78:	tst	r7, #2
   18e7c:	beq	199c0 <argp_failure@@Base+0x1020>
   18e80:	subs	r5, r5, #1
   18e84:	add	r8, r8, #1
   18e88:	add	r4, r4, #24
   18e8c:	bne	18e38 <argp_failure@@Base+0x498>
   18e90:	ldr	r0, [r6, #12]
   18e94:	ldr	r8, [fp, #-128]	; 0xffffff80
   18e98:	and	r0, r0, #8
   18e9c:	ldr	r3, [sl, #28]
   18ea0:	ldr	r1, [sl, #24]
   18ea4:	cmp	r0, #0
   18ea8:	ldr	r2, [sl, #16]
   18eac:	sub	r3, r3, r1
   18eb0:	beq	1992c <argp_failure@@Base+0xf8c>
   18eb4:	cmp	r3, r2
   18eb8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18ebc:	ldr	r4, [r3, #16]
   18ec0:	bhi	19cb8 <argp_failure@@Base+0x1318>
   18ec4:	str	r4, [sl, #12]
   18ec8:	ldr	r5, [r8, #4]
   18ecc:	cmp	r5, #0
   18ed0:	addne	r4, r6, #24
   18ed4:	bne	18ee8 <argp_failure@@Base+0x548>
   18ed8:	b	18f78 <argp_failure@@Base+0x5d8>
   18edc:	subs	r5, r5, #1
   18ee0:	add	r4, r4, #24
   18ee4:	beq	18f78 <argp_failure@@Base+0x5d8>
   18ee8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   18eec:	cmp	r3, #0
   18ef0:	beq	18edc <argp_failure@@Base+0x53c>
   18ef4:	ldr	r3, [r4, #-12]
   18ef8:	tst	r3, #2
   18efc:	bne	18edc <argp_failure@@Base+0x53c>
   18f00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18f04:	sub	r1, fp, #76	; 0x4c
   18f08:	ldr	r0, [r3, #16]
   18f0c:	bl	178c0 <argp_parse@@Base+0x4040>
   18f10:	ldr	r9, [r4, #-24]	; 0xffffffe8
   18f14:	mov	r0, r9
   18f18:	bl	113e4 <strlen@plt>
   18f1c:	subs	r7, r0, #0
   18f20:	beq	18edc <argp_failure@@Base+0x53c>
   18f24:	ldr	r2, [sl, #28]
   18f28:	ldr	lr, [sl, #32]
   18f2c:	add	ip, r2, r7
   18f30:	cmp	lr, ip
   18f34:	mov	r1, r7
   18f38:	mov	r0, sl
   18f3c:	bcs	18f50 <argp_failure@@Base+0x5b0>
   18f40:	bl	1c1e4 <argp_error@@Base+0x2008>
   18f44:	cmp	r0, #0
   18f48:	beq	18edc <argp_failure@@Base+0x53c>
   18f4c:	ldr	r2, [sl, #28]
   18f50:	mov	r0, r2
   18f54:	mov	r1, r9
   18f58:	mov	r2, r7
   18f5c:	bl	112b8 <memcpy@plt>
   18f60:	ldr	r2, [sl, #28]
   18f64:	subs	r5, r5, #1
   18f68:	add	r3, r2, r7
   18f6c:	str	r3, [sl, #28]
   18f70:	add	r4, r4, #24
   18f74:	bne	18ee8 <argp_failure@@Base+0x548>
   18f78:	ldr	r3, [sl, #28]
   18f7c:	ldr	r1, [sl, #24]
   18f80:	ldr	r2, [sl, #16]
   18f84:	sub	r3, r3, r1
   18f88:	cmp	r3, r2
   18f8c:	bhi	19b80 <argp_failure@@Base+0x11e0>
   18f90:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18f94:	mov	r3, #0
   18f98:	cmp	r2, r3
   18f9c:	str	r3, [sl, #4]
   18fa0:	beq	19a40 <argp_failure@@Base+0x10a0>
   18fa4:	ldr	r3, [r6, #12]
   18fa8:	tst	r3, #8
   18fac:	bne	18fd8 <argp_failure@@Base+0x638>
   18fb0:	ldr	r4, [r6, #4]
   18fb4:	sub	r3, r4, #1
   18fb8:	cmp	r3, #254	; 0xfe
   18fbc:	bhi	18fd8 <argp_failure@@Base+0x638>
   18fc0:	bl	113cc <__ctype_b_loc@plt>
   18fc4:	lsl	r4, r4, #1
   18fc8:	ldr	r3, [r0]
   18fcc:	ldrh	r3, [r3, r4]
   18fd0:	tst	r3, #16384	; 0x4000
   18fd4:	bne	18fe4 <argp_failure@@Base+0x644>
   18fd8:	ldr	r3, [r6]
   18fdc:	cmp	r3, #0
   18fe0:	beq	19f08 <argp_failure@@Base+0x1568>
   18fe4:	ldr	r3, [sl, #28]
   18fe8:	ldr	r1, [sl, #24]
   18fec:	ldr	r2, [sl, #16]
   18ff0:	sub	r3, r3, r1
   18ff4:	cmp	r3, r2
   18ff8:	bhi	19b8c <argp_failure@@Base+0x11ec>
   18ffc:	ldr	r3, [fp, #-120]	; 0xffffff88
   19000:	str	r3, [sl, #4]
   19004:	ldr	r3, [fp, #-112]	; 0xffffff90
   19008:	add	r8, r8, #28
   1900c:	subs	r3, r3, #1
   19010:	str	r3, [fp, #-112]	; 0xffffff90
   19014:	ldr	r3, [fp, #-124]	; 0xffffff84
   19018:	str	r3, [sl, #12]
   1901c:	bne	18d5c <argp_failure@@Base+0x3bc>
   19020:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19024:	cmp	r3, #0
   19028:	beq	190ac <argp_failure@@Base+0x70c>
   1902c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19030:	ldr	r3, [r3, #4]
   19034:	cmp	r3, #0
   19038:	beq	190ac <argp_failure@@Base+0x70c>
   1903c:	ldr	r1, [fp, #-104]	; 0xffffff98
   19040:	cmp	r1, #0
   19044:	beq	1a0cc <argp_failure@@Base+0x172c>
   19048:	ldr	r4, [r1]
   1904c:	cmp	r4, #0
   19050:	beq	1a0fc <argp_failure@@Base+0x175c>
   19054:	ldr	r3, [r4, #20]
   19058:	cmp	r3, #0
   1905c:	beq	19fcc <argp_failure@@Base+0x162c>
   19060:	mov	r0, r4
   19064:	bl	146a0 <argp_parse@@Base+0xe20>
   19068:	ldr	r9, [pc, #3028]	; 19c44 <argp_failure@@Base+0x12a4>
   1906c:	ldr	r3, [r4, #20]
   19070:	mov	r1, r9
   19074:	mov	r2, r0
   19078:	ldr	r0, [pc, #2892]	; 19bcc <argp_failure@@Base+0x122c>
   1907c:	blx	r3
   19080:	subs	r4, r0, #0
   19084:	beq	190ac <argp_failure@@Base+0x70c>
   19088:	ldrb	r3, [r4]
   1908c:	subs	r9, r4, r9
   19090:	movne	r9, #1
   19094:	cmp	r3, #0
   19098:	bne	19fd4 <argp_failure@@Base+0x1634>
   1909c:	cmp	r9, #0
   190a0:	beq	190ac <argp_failure@@Base+0x70c>
   190a4:	mov	r0, r4
   190a8:	bl	147fc <argp_parse@@Base+0xf7c>
   190ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   190b0:	mov	r4, #1
   190b4:	tst	r3, #32
   190b8:	beq	18c4c <argp_failure@@Base+0x2ac>
   190bc:	mov	r3, #0
   190c0:	str	r3, [sp]
   190c4:	str	sl, [sp, #4]
   190c8:	mov	r3, r4
   190cc:	ldr	r1, [fp, #-104]	; 0xffffff98
   190d0:	ldr	r0, [fp, #-116]	; 0xffffff8c
   190d4:	mov	r2, #1
   190d8:	bl	15e98 <argp_parse@@Base+0x2618>
   190dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   190e0:	orr	r4, r4, r0
   190e4:	b	18c4c <argp_failure@@Base+0x2ac>
   190e8:	ldr	r4, [fp, #-108]	; 0xffffff94
   190ec:	ldr	r0, [r4]
   190f0:	bl	147fc <argp_parse@@Base+0xf7c>
   190f4:	ldr	r0, [r4, #8]
   190f8:	bl	147fc <argp_parse@@Base+0xf7c>
   190fc:	b	18cdc <argp_failure@@Base+0x33c>
   19100:	ldr	r0, [pc, #2760]	; 19bd0 <argp_failure@@Base+0x1230>
   19104:	bl	1136c <getenv@plt>
   19108:	ldr	lr, [fp, #-96]	; 0xffffffa0
   1910c:	sub	r3, fp, #76	; 0x4c
   19110:	mov	ip, r3
   19114:	str	r3, [fp, #-112]	; 0xffffff90
   19118:	mov	r5, r0
   1911c:	ldm	lr!, {r0, r1, r2, r3}
   19120:	cmp	r5, #0
   19124:	stmia	ip!, {r0, r1, r2, r3}
   19128:	ldm	lr!, {r0, r1, r2, r3}
   1912c:	stmia	ip!, {r0, r1, r2, r3}
   19130:	ldm	lr, {r0, r1}
   19134:	stm	ip, {r0, r1}
   19138:	beq	18bec <argp_failure@@Base+0x24c>
   1913c:	ldrb	r8, [r5]
   19140:	ldr	r9, [pc, #2700]	; 19bd4 <argp_failure@@Base+0x1234>
   19144:	str	sl, [fp, #-120]	; 0xffffff88
   19148:	cmp	r8, #0
   1914c:	beq	19300 <argp_failure@@Base+0x960>
   19150:	bl	113cc <__ctype_b_loc@plt>
   19154:	mov	r7, r0
   19158:	ldr	r0, [r0]
   1915c:	b	19164 <argp_failure@@Base+0x7c4>
   19160:	ldrb	r8, [r5, #1]!
   19164:	lsl	r3, r8, #1
   19168:	ldrh	r1, [r0, r3]
   1916c:	tst	r1, #8192	; 0x2000
   19170:	bne	19160 <argp_failure@@Base+0x7c0>
   19174:	ands	r2, r1, #1024	; 0x400
   19178:	beq	192f8 <argp_failure@@Base+0x958>
   1917c:	cmp	r8, #95	; 0x5f
   19180:	cmpne	r8, #45	; 0x2d
   19184:	lsl	r3, r1, #28
   19188:	moveq	r6, #1
   1918c:	movne	r6, #0
   19190:	orrs	r6, r6, r3, lsr #31
   19194:	beq	19d9c <argp_failure@@Base+0x13fc>
   19198:	mov	r4, r5
   1919c:	ldrb	r3, [r4, #1]!
   191a0:	cmp	r3, #95	; 0x5f
   191a4:	cmpne	r3, #45	; 0x2d
   191a8:	lsl	r1, r3, #1
   191ac:	moveq	r2, #1
   191b0:	ldrh	r1, [r0, r1]
   191b4:	movne	r2, #0
   191b8:	lsl	ip, r1, #28
   191bc:	orrs	r2, r2, ip, lsr #31
   191c0:	bne	1919c <argp_failure@@Base+0x7fc>
   191c4:	tst	r1, #8192	; 0x2000
   191c8:	sub	r6, r4, r5
   191cc:	beq	191e4 <argp_failure@@Base+0x844>
   191d0:	ldrb	r3, [r4, #1]!
   191d4:	lsl	r2, r3, #1
   191d8:	ldrh	r1, [r0, r2]
   191dc:	tst	r1, #8192	; 0x2000
   191e0:	bne	191d0 <argp_failure@@Base+0x830>
   191e4:	cmp	r3, #44	; 0x2c
   191e8:	cmpne	r3, #0
   191ec:	beq	19384 <argp_failure@@Base+0x9e4>
   191f0:	cmp	r3, #61	; 0x3d
   191f4:	beq	198fc <argp_failure@@Base+0xf5c>
   191f8:	tst	r1, #2048	; 0x800
   191fc:	bne	1986c <argp_failure@@Base+0xecc>
   19200:	ldr	r3, [fp, #-120]	; 0xffffff88
   19204:	mov	sl, r3
   19208:	str	r3, [fp, #-108]	; 0xffffff94
   1920c:	mov	r0, r9
   19210:	bl	113e4 <strlen@plt>
   19214:	cmp	r6, r0
   19218:	beq	193a4 <argp_failure@@Base+0xa04>
   1921c:	ldr	r0, [pc, #2484]	; 19bd8 <argp_failure@@Base+0x1238>
   19220:	bl	113e4 <strlen@plt>
   19224:	cmp	r6, r0
   19228:	mov	r7, r0
   1922c:	beq	19438 <argp_failure@@Base+0xa98>
   19230:	ldr	r0, [pc, #2556]	; 19c34 <argp_failure@@Base+0x1294>
   19234:	bl	113e4 <strlen@plt>
   19238:	cmp	r6, r0
   1923c:	mov	r7, r0
   19240:	beq	193ec <argp_failure@@Base+0xa4c>
   19244:	ldr	r0, [pc, #2532]	; 19c30 <argp_failure@@Base+0x1290>
   19248:	bl	113e4 <strlen@plt>
   1924c:	cmp	r6, r0
   19250:	mov	r7, r0
   19254:	beq	19458 <argp_failure@@Base+0xab8>
   19258:	ldr	r0, [pc, #2500]	; 19c24 <argp_failure@@Base+0x1284>
   1925c:	bl	113e4 <strlen@plt>
   19260:	cmp	r6, r0
   19264:	mov	r7, r0
   19268:	beq	19478 <argp_failure@@Base+0xad8>
   1926c:	ldr	r8, [pc, #2504]	; 19c3c <argp_failure@@Base+0x129c>
   19270:	mov	r0, r8
   19274:	bl	113e4 <strlen@plt>
   19278:	cmp	r6, r0
   1927c:	mov	r7, r0
   19280:	beq	19498 <argp_failure@@Base+0xaf8>
   19284:	ldr	r8, [pc, #2476]	; 19c38 <argp_failure@@Base+0x1298>
   19288:	mov	r0, r8
   1928c:	bl	113e4 <strlen@plt>
   19290:	cmp	r6, r0
   19294:	mov	r7, r0
   19298:	beq	194b4 <argp_failure@@Base+0xb14>
   1929c:	ldr	r8, [pc, #2460]	; 19c40 <argp_failure@@Base+0x12a0>
   192a0:	mov	r0, r8
   192a4:	bl	113e4 <strlen@plt>
   192a8:	cmp	r6, r0
   192ac:	mov	r7, r0
   192b0:	beq	194d0 <argp_failure@@Base+0xb30>
   192b4:	ldr	r8, [pc, #2336]	; 19bdc <argp_failure@@Base+0x123c>
   192b8:	mov	r0, r8
   192bc:	bl	113e4 <strlen@plt>
   192c0:	cmp	r0, r6
   192c4:	beq	194ec <argp_failure@@Base+0xb4c>
   192c8:	mov	r2, #0
   192cc:	str	r5, [sp, #4]
   192d0:	str	r6, [sp]
   192d4:	mov	r1, r2
   192d8:	ldr	r3, [pc, #2304]	; 19be0 <argp_failure@@Base+0x1240>
   192dc:	ldr	r0, [fp, #-104]	; 0xffffff98
   192e0:	bl	189a0 <argp_failure@@Base>
   192e4:	ldrb	r8, [r4]
   192e8:	cmp	r8, #44	; 0x2c
   192ec:	beq	193e0 <argp_failure@@Base+0xa40>
   192f0:	mov	r5, r4
   192f4:	b	19148 <argp_failure@@Base+0x7a8>
   192f8:	cmp	r8, #0
   192fc:	bne	19ea8 <argp_failure@@Base+0x1508>
   19300:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19304:	ldr	r2, [fp, #-68]	; 0xffffffbc
   19308:	cmp	r3, r2
   1930c:	ble	1a08c <argp_failure@@Base+0x16ec>
   19310:	ldr	r2, [fp, #-64]	; 0xffffffc0
   19314:	cmp	r3, r2
   19318:	ble	19ee4 <argp_failure@@Base+0x1544>
   1931c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19320:	cmp	r3, r2
   19324:	ble	19ec0 <argp_failure@@Base+0x1520>
   19328:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1932c:	cmp	r3, r2
   19330:	ble	1a0c4 <argp_failure@@Base+0x1724>
   19334:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19338:	cmp	r3, r2
   1933c:	ble	1a0bc <argp_failure@@Base+0x171c>
   19340:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19344:	cmp	r3, r2
   19348:	ble	1a0d8 <argp_failure@@Base+0x1738>
   1934c:	ldr	lr, [fp, #-112]	; 0xffffff90
   19350:	ldr	r3, [pc, #2152]	; 19bc0 <argp_failure@@Base+0x1220>
   19354:	mov	r4, #1
   19358:	mov	r5, r3
   1935c:	str	r3, [fp, #-96]	; 0xffffffa0
   19360:	ldm	lr!, {r0, r1, r2, r3}
   19364:	mov	ip, r5
   19368:	stmia	ip!, {r0, r1, r2, r3}
   1936c:	ldm	lr!, {r0, r1, r2, r3}
   19370:	stmia	ip!, {r0, r1, r2, r3}
   19374:	ldm	lr, {r0, r1}
   19378:	stm	ip, {r0, r1}
   1937c:	str	r4, [r5, #36]	; 0x24
   19380:	b	18bec <argp_failure@@Base+0x24c>
   19384:	cmp	r8, #110	; 0x6e
   19388:	beq	198cc <argp_failure@@Base+0xf2c>
   1938c:	mov	sl, #1
   19390:	mov	r0, r9
   19394:	str	sl, [fp, #-108]	; 0xffffff94
   19398:	bl	113e4 <strlen@plt>
   1939c:	cmp	r6, r0
   193a0:	bne	1921c <argp_failure@@Base+0x87c>
   193a4:	mov	r2, r6
   193a8:	mov	r1, r9
   193ac:	mov	r0, r5
   193b0:	bl	1154c <strncmp@plt>
   193b4:	cmp	r0, #0
   193b8:	bne	1921c <argp_failure@@Base+0x87c>
   193bc:	mov	r8, r9
   193c0:	ldrb	r3, [r8, #15]
   193c4:	ldrb	r8, [r4]
   193c8:	sub	r2, fp, #36	; 0x24
   193cc:	add	r3, r2, r3
   193d0:	ldr	r2, [fp, #-108]	; 0xffffff94
   193d4:	cmp	r8, #44	; 0x2c
   193d8:	str	r2, [r3, #-40]	; 0xffffffd8
   193dc:	bne	192f0 <argp_failure@@Base+0x950>
   193e0:	ldrb	r8, [r4, #1]
   193e4:	add	r4, r4, #1
   193e8:	b	192f0 <argp_failure@@Base+0x950>
   193ec:	mov	r2, r0
   193f0:	ldr	r1, [pc, #2108]	; 19c34 <argp_failure@@Base+0x1294>
   193f4:	mov	r0, r5
   193f8:	bl	1154c <strncmp@plt>
   193fc:	cmp	r0, #0
   19400:	bne	19244 <argp_failure@@Base+0x8a4>
   19404:	ldr	r8, [pc, #2088]	; 19c34 <argp_failure@@Base+0x1294>
   19408:	cmp	sl, #0
   1940c:	beq	193c0 <argp_failure@@Base+0xa20>
   19410:	ldrb	r2, [r8, #14]
   19414:	cmp	r2, #0
   19418:	bne	193c0 <argp_failure@@Base+0xa20>
   1941c:	str	r5, [sp, #4]
   19420:	str	r7, [sp]
   19424:	ldr	r3, [pc, #1976]	; 19be4 <argp_failure@@Base+0x1244>
   19428:	mov	r1, r2
   1942c:	ldr	r0, [fp, #-104]	; 0xffffff98
   19430:	bl	189a0 <argp_failure@@Base>
   19434:	b	192e4 <argp_failure@@Base+0x944>
   19438:	mov	r2, r0
   1943c:	ldr	r1, [pc, #1940]	; 19bd8 <argp_failure@@Base+0x1238>
   19440:	mov	r0, r5
   19444:	bl	1154c <strncmp@plt>
   19448:	cmp	r0, #0
   1944c:	bne	19230 <argp_failure@@Base+0x890>
   19450:	ldr	r8, [pc, #1920]	; 19bd8 <argp_failure@@Base+0x1238>
   19454:	b	19408 <argp_failure@@Base+0xa68>
   19458:	mov	r2, r0
   1945c:	ldr	r1, [pc, #1996]	; 19c30 <argp_failure@@Base+0x1290>
   19460:	mov	r0, r5
   19464:	bl	1154c <strncmp@plt>
   19468:	cmp	r0, #0
   1946c:	bne	19258 <argp_failure@@Base+0x8b8>
   19470:	ldr	r8, [pc, #1976]	; 19c30 <argp_failure@@Base+0x1290>
   19474:	b	19408 <argp_failure@@Base+0xa68>
   19478:	mov	r2, r0
   1947c:	ldr	r1, [pc, #1952]	; 19c24 <argp_failure@@Base+0x1284>
   19480:	mov	r0, r5
   19484:	bl	1154c <strncmp@plt>
   19488:	cmp	r0, #0
   1948c:	bne	1926c <argp_failure@@Base+0x8cc>
   19490:	ldr	r8, [pc, #1932]	; 19c24 <argp_failure@@Base+0x1284>
   19494:	b	19408 <argp_failure@@Base+0xa68>
   19498:	mov	r2, r0
   1949c:	mov	r1, r8
   194a0:	mov	r0, r5
   194a4:	bl	1154c <strncmp@plt>
   194a8:	cmp	r0, #0
   194ac:	bne	19284 <argp_failure@@Base+0x8e4>
   194b0:	b	19408 <argp_failure@@Base+0xa68>
   194b4:	mov	r2, r0
   194b8:	mov	r1, r8
   194bc:	mov	r0, r5
   194c0:	bl	1154c <strncmp@plt>
   194c4:	cmp	r0, #0
   194c8:	bne	1929c <argp_failure@@Base+0x8fc>
   194cc:	b	19408 <argp_failure@@Base+0xa68>
   194d0:	mov	r2, r0
   194d4:	mov	r1, r8
   194d8:	mov	r0, r5
   194dc:	bl	1154c <strncmp@plt>
   194e0:	cmp	r0, #0
   194e4:	bne	192b4 <argp_failure@@Base+0x914>
   194e8:	b	19408 <argp_failure@@Base+0xa68>
   194ec:	mov	r2, r6
   194f0:	mov	r1, r8
   194f4:	mov	r0, r5
   194f8:	bl	1154c <strncmp@plt>
   194fc:	cmp	r0, #0
   19500:	moveq	r7, r6
   19504:	bne	192c8 <argp_failure@@Base+0x928>
   19508:	b	19408 <argp_failure@@Base+0xa68>
   1950c:	ldr	r3, [fp, #4]
   19510:	ldr	r1, [pc, #1744]	; 19be8 <argp_failure@@Base+0x1248>
   19514:	mov	r2, r3
   19518:	mov	r0, sl
   1951c:	bl	1c2e4 <argp_error@@Base+0x2108>
   19520:	mov	r4, #1
   19524:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19528:	b	18c38 <argp_failure@@Base+0x298>
   1952c:	mov	r1, #0
   19530:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19534:	bl	16444 <argp_parse@@Base+0x2bc4>
   19538:	ldr	r2, [r0, #4]
   1953c:	ldr	r3, [r0]
   19540:	cmp	r2, #0
   19544:	str	r0, [fp, #-108]	; 0xffffff94
   19548:	str	r2, [fp, #-120]	; 0xffffff88
   1954c:	str	r3, [fp, #-112]	; 0xffffff90
   19550:	sub	r6, r2, #1
   19554:	beq	18c1c <argp_failure@@Base+0x27c>
   19558:	ldr	r5, [pc, #1676]	; 19bec <argp_failure@@Base+0x124c>
   1955c:	mov	r8, r6
   19560:	mov	r7, r3
   19564:	ldm	r7, {r4, r9}
   19568:	cmp	r9, #0
   1956c:	sub	r9, r9, #1
   19570:	beq	195b0 <argp_failure@@Base+0xc10>
   19574:	add	r4, r4, #24
   19578:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1957c:	mov	r1, r5
   19580:	subs	r0, r3, #0
   19584:	sub	r9, r9, #1
   19588:	beq	195a4 <argp_failure@@Base+0xc04>
   1958c:	ldr	r3, [r4, #-12]
   19590:	tst	r3, #2
   19594:	bne	195a4 <argp_failure@@Base+0xc04>
   19598:	bl	11240 <strcmp@plt>
   1959c:	cmp	r0, #0
   195a0:	beq	19d44 <argp_failure@@Base+0x13a4>
   195a4:	cmn	r9, #1
   195a8:	add	r4, r4, #24
   195ac:	bne	19578 <argp_failure@@Base+0xbd8>
   195b0:	sub	r8, r8, #1
   195b4:	cmn	r8, #1
   195b8:	add	r7, r7, #28
   195bc:	bne	19564 <argp_failure@@Base+0xbc4>
   195c0:	ldr	r7, [fp, #-112]	; 0xffffff90
   195c4:	ldr	r9, [pc, #1572]	; 19bf0 <argp_failure@@Base+0x1250>
   195c8:	ldm	r7, {r4, r5}
   195cc:	cmp	r5, #0
   195d0:	sub	r5, r5, #1
   195d4:	beq	19614 <argp_failure@@Base+0xc74>
   195d8:	add	r4, r4, #24
   195dc:	ldr	r3, [r4, #-24]	; 0xffffffe8
   195e0:	mov	r1, r9
   195e4:	subs	r0, r3, #0
   195e8:	sub	r5, r5, #1
   195ec:	beq	19608 <argp_failure@@Base+0xc68>
   195f0:	ldr	r3, [r4, #-12]
   195f4:	tst	r3, #2
   195f8:	bne	19608 <argp_failure@@Base+0xc68>
   195fc:	bl	11240 <strcmp@plt>
   19600:	cmp	r0, #0
   19604:	beq	19cfc <argp_failure@@Base+0x135c>
   19608:	cmn	r5, #1
   1960c:	add	r4, r4, #24
   19610:	bne	195dc <argp_failure@@Base+0xc3c>
   19614:	cmp	r6, #0
   19618:	add	r7, r7, #28
   1961c:	sub	r6, r6, #1
   19620:	bne	195c8 <argp_failure@@Base+0xc28>
   19624:	ldr	r1, [fp, #-120]	; 0xffffff88
   19628:	b	19d14 <argp_failure@@Base+0x1374>
   1962c:	mov	r2, #1
   19630:	mov	r3, #0
   19634:	stm	sp, {r2, sl}
   19638:	ldr	r1, [fp, #-104]	; 0xffffff98
   1963c:	mov	r2, r3
   19640:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19644:	bl	15e98 <argp_parse@@Base+0x2618>
   19648:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1964c:	orr	r4, r4, r0
   19650:	b	18c30 <argp_failure@@Base+0x290>
   19654:	ldr	r3, [fp, #-116]	; 0xffffff8c
   19658:	mov	r4, #1
   1965c:	ldr	r8, [pc, #1424]	; 19bf4 <argp_failure@@Base+0x1254>
   19660:	ldr	r1, [r3, #16]
   19664:	ldr	r0, [r3, #8]
   19668:	bl	16e44 <argp_parse@@Base+0x35c4>
   1966c:	mov	r1, #0
   19670:	mov	r6, r4
   19674:	add	r3, r0, #14
   19678:	bic	r3, r3, #7
   1967c:	sub	sp, sp, r3
   19680:	add	r7, sp, #8
   19684:	mov	r2, r0
   19688:	mov	r0, r7
   1968c:	bl	1142c <memset@plt>
   19690:	sub	r3, fp, #76	; 0x4c
   19694:	str	r3, [fp, #-112]	; 0xffffff90
   19698:	str	r7, [fp, #-120]	; 0xffffff88
   1969c:	ldr	r5, [fp, #-96]	; 0xffffffa0
   196a0:	b	197c0 <argp_failure@@Base+0xe20>
   196a4:	cmp	r4, #0
   196a8:	ldr	r3, [fp, #-120]	; 0xffffff88
   196ac:	ldr	r7, [sl, #12]
   196b0:	ldrne	r2, [pc, #1344]	; 19bf8 <argp_failure@@Base+0x1258>
   196b4:	str	r9, [sl, #12]
   196b8:	ldreq	r2, [pc, #1340]	; 19bfc <argp_failure@@Base+0x125c>
   196bc:	str	r3, [fp, #-76]	; 0xffffffb4
   196c0:	mov	r1, r8
   196c4:	ldr	r3, [fp, #4]
   196c8:	mov	r0, sl
   196cc:	bl	1c2e4 <argp_error@@Base+0x2108>
   196d0:	ldr	r3, [sl, #28]
   196d4:	ldr	r1, [sl, #24]
   196d8:	ldr	r2, [sl, #16]
   196dc:	sub	r3, r3, r1
   196e0:	cmp	r3, r2
   196e4:	ldr	r9, [r5, #28]
   196e8:	bhi	19838 <argp_failure@@Base+0xe98>
   196ec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   196f0:	ldr	r4, [sl, #4]
   196f4:	tst	r3, #2
   196f8:	str	r9, [sl, #4]
   196fc:	beq	19844 <argp_failure@@Base+0xea4>
   19700:	ldr	r3, [fp, #-108]	; 0xffffff94
   19704:	ldr	r3, [r3, #4]
   19708:	cmp	r3, #0
   1970c:	beq	1975c <argp_failure@@Base+0xdbc>
   19710:	ldr	ip, [sl, #28]
   19714:	ldr	r2, [sl, #32]
   19718:	add	r3, ip, #12
   1971c:	cmp	r2, r3
   19720:	bcs	1973c <argp_failure@@Base+0xd9c>
   19724:	mov	r1, #12
   19728:	mov	r0, sl
   1972c:	bl	1c1e4 <argp_error@@Base+0x2008>
   19730:	cmp	r0, #0
   19734:	beq	1975c <argp_failure@@Base+0xdbc>
   19738:	ldr	ip, [sl, #28]
   1973c:	ldr	r3, [pc, #1212]	; 19c00 <argp_failure@@Base+0x1260>
   19740:	ldm	r3!, {r0, r1, r2}
   19744:	str	r0, [ip]
   19748:	str	r1, [ip, #4]
   1974c:	str	r2, [ip, #8]
   19750:	ldr	r3, [sl, #28]
   19754:	add	r3, r3, #12
   19758:	str	r3, [sl, #28]
   1975c:	mov	r3, r6
   19760:	ldr	r1, [fp, #-104]	; 0xffffff98
   19764:	str	sl, [sp]
   19768:	ldr	r2, [fp, #-112]	; 0xffffff90
   1976c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   19770:	bl	16b64 <argp_parse@@Base+0x32e4>
   19774:	ldr	r3, [sl, #28]
   19778:	ldr	r1, [sl, #24]
   1977c:	sub	r1, r3, r1
   19780:	mov	r9, r0
   19784:	ldr	r0, [sl, #16]
   19788:	cmp	r1, r0
   1978c:	strls	r7, [sl, #12]
   19790:	bhi	19804 <argp_failure@@Base+0xe64>
   19794:	ldr	r1, [sl, #32]
   19798:	str	r4, [sl, #4]
   1979c:	cmp	r1, r3
   197a0:	bls	197e8 <argp_failure@@Base+0xe48>
   197a4:	add	r1, r3, #1
   197a8:	mov	r2, #10
   197ac:	str	r1, [sl, #28]
   197b0:	strb	r2, [r3]
   197b4:	cmp	r9, #0
   197b8:	mov	r4, #0
   197bc:	beq	19860 <argp_failure@@Base+0xec0>
   197c0:	ldr	r3, [sl, #28]
   197c4:	ldr	r1, [sl, #24]
   197c8:	ldr	r2, [sl, #16]
   197cc:	sub	r3, r3, r1
   197d0:	cmp	r3, r2
   197d4:	ldr	r9, [r5, #28]
   197d8:	bls	196a4 <argp_failure@@Base+0xd04>
   197dc:	mov	r0, sl
   197e0:	bl	1bc38 <argp_error@@Base+0x1a5c>
   197e4:	b	196a4 <argp_failure@@Base+0xd04>
   197e8:	mov	r1, r6
   197ec:	mov	r0, sl
   197f0:	bl	1c1e4 <argp_error@@Base+0x2008>
   197f4:	cmp	r0, #0
   197f8:	beq	197b4 <argp_failure@@Base+0xe14>
   197fc:	ldr	r3, [sl, #28]
   19800:	b	197a4 <argp_failure@@Base+0xe04>
   19804:	mov	r0, sl
   19808:	bl	1bc38 <argp_error@@Base+0x1a5c>
   1980c:	ldr	r3, [sl, #28]
   19810:	ldr	r1, [sl, #24]
   19814:	ldr	r0, [sl, #16]
   19818:	sub	r1, r3, r1
   1981c:	cmp	r1, r0
   19820:	str	r7, [sl, #12]
   19824:	bls	19794 <argp_failure@@Base+0xdf4>
   19828:	mov	r0, sl
   1982c:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19830:	ldr	r3, [sl, #28]
   19834:	b	19794 <argp_failure@@Base+0xdf4>
   19838:	mov	r0, sl
   1983c:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19840:	b	196ec <argp_failure@@Base+0xd4c>
   19844:	mov	r1, sl
   19848:	ldr	r0, [fp, #-108]	; 0xffffff94
   1984c:	bl	17190 <argp_parse@@Base+0x3910>
   19850:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19854:	orr	r3, r3, #2
   19858:	str	r3, [fp, #-100]	; 0xffffff9c
   1985c:	b	1975c <argp_failure@@Base+0xdbc>
   19860:	mov	r4, #1
   19864:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19868:	b	18c28 <argp_failure@@Base+0x288>
   1986c:	mov	r2, #10
   19870:	mov	r1, #0
   19874:	mov	r0, r4
   19878:	bl	1124c <strtol@plt>
   1987c:	ldrb	r3, [r4]
   19880:	ldr	r2, [r7]
   19884:	lsl	r3, r3, #1
   19888:	ldrh	r3, [r2, r3]
   1988c:	tst	r3, #2048	; 0x800
   19890:	str	r0, [fp, #-108]	; 0xffffff94
   19894:	beq	198bc <argp_failure@@Base+0xf1c>
   19898:	ldrb	r3, [r4, #1]!
   1989c:	lsl	r3, r3, #1
   198a0:	ldrh	r3, [r2, r3]
   198a4:	tst	r3, #2048	; 0x800
   198a8:	bne	19898 <argp_failure@@Base+0xef8>
   198ac:	b	198bc <argp_failure@@Base+0xf1c>
   198b0:	ldrb	r3, [r4, #1]!
   198b4:	lsl	r3, r3, #1
   198b8:	ldrh	r3, [r2, r3]
   198bc:	tst	r3, #8192	; 0x2000
   198c0:	bne	198b0 <argp_failure@@Base+0xf10>
   198c4:	ldr	sl, [fp, #-120]	; 0xffffff88
   198c8:	b	1920c <argp_failure@@Base+0x86c>
   198cc:	ldrb	r3, [r5, #1]
   198d0:	cmp	r3, #111	; 0x6f
   198d4:	bne	1938c <argp_failure@@Base+0x9ec>
   198d8:	ldrb	r3, [r5, #2]
   198dc:	cmp	r3, #45	; 0x2d
   198e0:	bne	1938c <argp_failure@@Base+0x9ec>
   198e4:	ldr	r3, [fp, #-120]	; 0xffffff88
   198e8:	add	r5, r5, #3
   198ec:	sub	r6, r6, #3
   198f0:	str	r3, [fp, #-108]	; 0xffffff94
   198f4:	mov	sl, #1
   198f8:	b	1920c <argp_failure@@Base+0x86c>
   198fc:	ldrb	r3, [r4, #1]
   19900:	add	r4, r4, #1
   19904:	lsl	r3, r3, #1
   19908:	ldrh	r1, [r0, r3]
   1990c:	tst	r1, #8192	; 0x2000
   19910:	beq	191f8 <argp_failure@@Base+0x858>
   19914:	ldrb	r3, [r4, #1]!
   19918:	lsl	r3, r3, #1
   1991c:	ldrh	r1, [r0, r3]
   19920:	tst	r1, #8192	; 0x2000
   19924:	bne	19914 <argp_failure@@Base+0xf74>
   19928:	b	191f8 <argp_failure@@Base+0x858>
   1992c:	cmp	r3, r2
   19930:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19934:	ldr	r4, [r3, #12]
   19938:	bhi	19cac <argp_failure@@Base+0x130c>
   1993c:	str	r4, [sl, #12]
   19940:	ldr	r5, [r8, #4]
   19944:	cmp	r5, #0
   19948:	beq	18f78 <argp_failure@@Base+0x5d8>
   1994c:	add	r4, r6, #24
   19950:	ldr	r7, [fp, #-96]	; 0xffffffa0
   19954:	b	19964 <argp_failure@@Base+0xfc4>
   19958:	subs	r5, r5, #1
   1995c:	add	r4, r4, #24
   19960:	beq	18f78 <argp_failure@@Base+0x5d8>
   19964:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19968:	cmp	r3, #0
   1996c:	beq	19958 <argp_failure@@Base+0xfb8>
   19970:	ldr	r3, [r4, #-12]
   19974:	tst	r3, #2
   19978:	bne	19958 <argp_failure@@Base+0xfb8>
   1997c:	sub	r1, fp, #76	; 0x4c
   19980:	ldr	r0, [r7, #12]
   19984:	bl	178c0 <argp_parse@@Base+0x4040>
   19988:	ldr	r2, [r4, #-24]	; 0xffffffe8
   1998c:	ldr	r1, [pc, #624]	; 19c04 <argp_failure@@Base+0x1264>
   19990:	mov	r0, sl
   19994:	bl	1c2e4 <argp_error@@Base+0x2108>
   19998:	ldr	r3, [r6, #8]
   1999c:	ldr	r1, [pc, #612]	; 19c08 <argp_failure@@Base+0x1268>
   199a0:	subs	r2, r3, #0
   199a4:	mov	r0, sl
   199a8:	beq	19958 <argp_failure@@Base+0xfb8>
   199ac:	ldr	ip, [r6, #12]
   199b0:	tst	ip, #1
   199b4:	ldrne	r1, [pc, #592]	; 19c0c <argp_failure@@Base+0x126c>
   199b8:	bl	1c2e4 <argp_error@@Base+0x2108>
   199bc:	b	19958 <argp_failure@@Base+0xfb8>
   199c0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   199c4:	sub	r1, fp, #76	; 0x4c
   199c8:	ldr	r0, [r3, #8]
   199cc:	bl	178c0 <argp_parse@@Base+0x4040>
   199d0:	ldr	r2, [sl, #28]
   199d4:	ldr	r1, [sl, #32]
   199d8:	cmp	r2, r1
   199dc:	bcs	19ce0 <argp_failure@@Base+0x1340>
   199e0:	add	r1, r2, #1
   199e4:	mov	r3, #45	; 0x2d
   199e8:	str	r1, [sl, #28]
   199ec:	strb	r3, [r2]
   199f0:	ldr	r2, [sl, #28]
   199f4:	ldr	r1, [sl, #32]
   199f8:	ldrb	r7, [r8]
   199fc:	cmp	r2, r1
   19a00:	bcs	19cc4 <argp_failure@@Base+0x1324>
   19a04:	add	r1, r2, #1
   19a08:	str	r1, [sl, #28]
   19a0c:	strb	r7, [r2]
   19a10:	ldr	r3, [fp, #-132]	; 0xffffff7c
   19a14:	cmp	r3, #0
   19a18:	beq	19c78 <argp_failure@@Base+0x12d8>
   19a1c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a20:	ldr	r2, [r3]
   19a24:	cmp	r2, #0
   19a28:	bne	19c78 <argp_failure@@Base+0x12d8>
   19a2c:	ldr	r2, [r6, #8]
   19a30:	cmp	r2, #0
   19a34:	movne	r3, #1
   19a38:	strne	r3, [fp, #-80]	; 0xffffffb0
   19a3c:	b	18e80 <argp_failure@@Base+0x4e0>
   19a40:	ldr	r5, [r8, #20]
   19a44:	ldr	r9, [r6, #16]
   19a48:	cmp	r5, #0
   19a4c:	beq	19d68 <argp_failure@@Base+0x13c8>
   19a50:	ldr	r3, [r5, #20]
   19a54:	cmp	r3, #0
   19a58:	beq	19d68 <argp_failure@@Base+0x13c8>
   19a5c:	ldr	r1, [fp, #-104]	; 0xffffff98
   19a60:	mov	r0, r5
   19a64:	ldr	r4, [r6, #4]
   19a68:	bl	146a0 <argp_parse@@Base+0xe20>
   19a6c:	ldr	r3, [r5, #20]
   19a70:	mov	r1, r9
   19a74:	mov	r2, r0
   19a78:	mov	r0, r4
   19a7c:	blx	r3
   19a80:	mov	r4, r0
   19a84:	cmp	r4, #0
   19a88:	beq	19b3c <argp_failure@@Base+0x119c>
   19a8c:	ldrb	r3, [r4]
   19a90:	cmp	r3, #0
   19a94:	beq	19b2c <argp_failure@@Base+0x118c>
   19a98:	ldr	r3, [sl, #28]
   19a9c:	ldr	r2, [sl, #24]
   19aa0:	ldr	r1, [sl, #16]
   19aa4:	sub	r2, r3, r2
   19aa8:	cmp	r2, r1
   19aac:	bhi	19e34 <argp_failure@@Base+0x1494>
   19ab0:	ldr	r6, [sl, #20]
   19ab4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19ab8:	bic	r6, r6, r6, asr #31
   19abc:	ldr	r5, [r2, #20]
   19ac0:	mov	r7, r5
   19ac4:	str	r5, [sl, #4]
   19ac8:	add	r2, r5, #3
   19acc:	cmp	r2, r6
   19ad0:	str	r7, [sl, #12]
   19ad4:	bcs	19da8 <argp_failure@@Base+0x1408>
   19ad8:	ldr	r2, [sl, #32]
   19adc:	cmp	r2, r3
   19ae0:	bls	19fb0 <argp_failure@@Base+0x1610>
   19ae4:	add	r1, r3, #1
   19ae8:	mov	r2, #10
   19aec:	str	r1, [sl, #28]
   19af0:	strb	r2, [r3]
   19af4:	mov	r0, r4
   19af8:	bl	113e4 <strlen@plt>
   19afc:	subs	r5, r0, #0
   19b00:	beq	19b2c <argp_failure@@Base+0x118c>
   19b04:	ldr	r0, [sl, #28]
   19b08:	ldr	r2, [sl, #32]
   19b0c:	add	r3, r0, r5
   19b10:	cmp	r2, r3
   19b14:	bcs	19e18 <argp_failure@@Base+0x1478>
   19b18:	mov	r1, r5
   19b1c:	mov	r0, sl
   19b20:	bl	1c1e4 <argp_error@@Base+0x2008>
   19b24:	cmp	r0, #0
   19b28:	bne	19e14 <argp_failure@@Base+0x1474>
   19b2c:	cmp	r9, r4
   19b30:	beq	19b3c <argp_failure@@Base+0x119c>
   19b34:	mov	r0, r4
   19b38:	bl	147fc <argp_parse@@Base+0xf7c>
   19b3c:	ldr	r3, [sl, #28]
   19b40:	ldr	r2, [sl, #24]
   19b44:	ldr	r1, [sl, #16]
   19b48:	sub	r2, r3, r2
   19b4c:	cmp	r2, r1
   19b50:	bhi	19d8c <argp_failure@@Base+0x13ec>
   19b54:	ldr	r1, [sl, #32]
   19b58:	mov	r2, #0
   19b5c:	cmp	r1, r3
   19b60:	str	r2, [sl, #4]
   19b64:	bls	19d70 <argp_failure@@Base+0x13d0>
   19b68:	add	r1, r3, #1
   19b6c:	mov	r2, #10
   19b70:	str	r1, [sl, #28]
   19b74:	strb	r2, [r3]
   19b78:	str	r8, [fp, #-88]	; 0xffffffa8
   19b7c:	b	18fe4 <argp_failure@@Base+0x644>
   19b80:	mov	r0, sl
   19b84:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19b88:	b	18f90 <argp_failure@@Base+0x5f0>
   19b8c:	mov	r0, sl
   19b90:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19b94:	ldr	r2, [fp, #-120]	; 0xffffff88
   19b98:	ldr	r3, [sl, #28]
   19b9c:	ldr	r1, [sl, #24]
   19ba0:	str	r2, [sl, #4]
   19ba4:	ldr	r2, [sl, #16]
   19ba8:	sub	r3, r3, r1
   19bac:	cmp	r3, r2
   19bb0:	bls	19004 <argp_failure@@Base+0x664>
   19bb4:	mov	r0, sl
   19bb8:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19bbc:	b	19004 <argp_failure@@Base+0x664>
   19bc0:	andeq	lr, r2, r8, lsr #5
   19bc4:	andeq	pc, r2, r8, asr #4
   19bc8:	andeq	sp, r1, r0, ror r6
   19bcc:	andeq	r0, r0, #5
   19bd0:	andeq	sp, r1, ip, lsr #10
   19bd4:	strdeq	sp, [r1], -r8
   19bd8:	andeq	sp, r1, r8, lsl #6
   19bdc:	andeq	sp, r1, r8, ror r3
   19be0:	andeq	sp, r1, ip, ror #10
   19be4:	andeq	sp, r1, ip, lsr r5
   19be8:	andeq	sp, r1, r8, lsl r6
   19bec:	andeq	ip, r1, ip, ror lr
   19bf0:	andeq	ip, r1, ip, asr lr
   19bf4:	strdeq	sp, [r1], -r8
   19bf8:	strdeq	sp, [r1], -r0
   19bfc:	andeq	sp, r1, r0, lsl #12
   19c00:	andeq	sp, r1, r8, lsl #12
   19c04:	andeq	sp, r1, r8, asr r6
   19c08:	andeq	sp, r1, r8, ror #12
   19c0c:	andeq	sp, r1, r0, ror #12
   19c10:	andeq	sp, r1, r0, asr r6
   19c14:	andeq	ip, r1, ip, lsr #28
   19c18:	strdeq	r7, [r1], -r0
   19c1c:	andeq	sp, r1, ip, ror #12
   19c20:	muleq	r1, r4, r5
   19c24:	andeq	sp, r1, r8, lsr r3
   19c28:	andeq	sp, r1, r8, ror #11
   19c2c:			; <UNDEFINED> instruction: 0x0001d5b4
   19c30:	andeq	sp, r1, r8, lsr #6
   19c34:	andeq	sp, r1, r8, lsl r3
   19c38:	andeq	sp, r1, r8, asr r3
   19c3c:	andeq	sp, r1, r8, asr #6
   19c40:	andeq	sp, r1, r8, ror #6
   19c44:			; <UNDEFINED> instruction: 0x0001d4b8
   19c48:	mov	r0, sl
   19c4c:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19c50:	ldr	r0, [r6, #12]
   19c54:	and	r0, r0, #8
   19c58:	b	18e0c <argp_failure@@Base+0x46c>
   19c5c:	mov	r0, sl
   19c60:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19c64:	ldr	ip, [sl, #28]
   19c68:	ldr	r2, [sl, #24]
   19c6c:	ldr	lr, [sl, #16]
   19c70:	sub	ip, ip, r2
   19c74:	b	18d7c <argp_failure@@Base+0x3dc>
   19c78:	ldr	r2, [r6, #8]
   19c7c:	cmp	r2, #0
   19c80:	beq	18e80 <argp_failure@@Base+0x4e0>
   19c84:	ldr	r1, [r6, #12]
   19c88:	mov	r0, sl
   19c8c:	tst	r1, #1
   19c90:	ldrne	r1, [pc, #-136]	; 19c10 <argp_failure@@Base+0x1270>
   19c94:	ldreq	r1, [pc, #-136]	; 19c14 <argp_failure@@Base+0x1274>
   19c98:	bl	1c2e4 <argp_error@@Base+0x2108>
   19c9c:	b	18e80 <argp_failure@@Base+0x4e0>
   19ca0:	mov	r3, #1
   19ca4:	str	r3, [fp, #-132]	; 0xffffff7c
   19ca8:	b	18dfc <argp_failure@@Base+0x45c>
   19cac:	mov	r0, sl
   19cb0:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19cb4:	b	1993c <argp_failure@@Base+0xf9c>
   19cb8:	mov	r0, sl
   19cbc:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19cc0:	b	18ec4 <argp_failure@@Base+0x524>
   19cc4:	mov	r1, #1
   19cc8:	mov	r0, sl
   19ccc:	bl	1c1e4 <argp_error@@Base+0x2008>
   19cd0:	cmp	r0, #0
   19cd4:	beq	19a10 <argp_failure@@Base+0x1070>
   19cd8:	ldr	r2, [sl, #28]
   19cdc:	b	19a04 <argp_failure@@Base+0x1064>
   19ce0:	mov	r1, #1
   19ce4:	mov	r0, sl
   19ce8:	bl	1c1e4 <argp_error@@Base+0x2008>
   19cec:	cmp	r0, #0
   19cf0:	beq	199f0 <argp_failure@@Base+0x1050>
   19cf4:	ldr	r2, [sl, #28]
   19cf8:	b	199e0 <argp_failure@@Base+0x1040>
   19cfc:	mvn	r3, #0
   19d00:	str	r3, [r7, #12]
   19d04:	ldr	r3, [fp, #-108]	; 0xffffff94
   19d08:	ldr	r1, [r3, #4]
   19d0c:	cmp	r1, #0
   19d10:	beq	18c1c <argp_failure@@Base+0x27c>
   19d14:	ldr	r2, [fp, #-112]	; 0xffffff90
   19d18:	mov	r3, #0
   19d1c:	str	r3, [r2, #24]
   19d20:	add	r3, r3, #1
   19d24:	cmp	r3, r1
   19d28:	add	r2, r2, #28
   19d2c:	bcc	19d1c <argp_failure@@Base+0x137c>
   19d30:	ldr	r0, [fp, #-112]	; 0xffffff90
   19d34:	ldr	r3, [pc, #-292]	; 19c18 <argp_failure@@Base+0x1278>
   19d38:	mov	r2, #28
   19d3c:	bl	11528 <qsort@plt>
   19d40:	b	18c1c <argp_failure@@Base+0x27c>
   19d44:	mvn	r3, #0
   19d48:	str	r3, [r7, #12]
   19d4c:	ldr	r3, [fp, #-108]	; 0xffffff94
   19d50:	ldr	r3, [r3, #4]
   19d54:	cmp	r3, #0
   19d58:	str	r3, [fp, #-120]	; 0xffffff88
   19d5c:	sub	r6, r3, #1
   19d60:	bne	195c0 <argp_failure@@Base+0xc20>
   19d64:	b	18c1c <argp_failure@@Base+0x27c>
   19d68:	mov	r4, r9
   19d6c:	b	19a84 <argp_failure@@Base+0x10e4>
   19d70:	mov	r1, #1
   19d74:	mov	r0, sl
   19d78:	bl	1c1e4 <argp_error@@Base+0x2008>
   19d7c:	cmp	r0, #0
   19d80:	beq	19b78 <argp_failure@@Base+0x11d8>
   19d84:	ldr	r3, [sl, #28]
   19d88:	b	19b68 <argp_failure@@Base+0x11c8>
   19d8c:	mov	r0, sl
   19d90:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19d94:	ldr	r3, [sl, #28]
   19d98:	b	19b54 <argp_failure@@Base+0x11b4>
   19d9c:	mov	r3, r8
   19da0:	mov	r4, r5
   19da4:	b	191e4 <argp_failure@@Base+0x844>
   19da8:	cmp	r5, r6
   19dac:	bhi	19f28 <argp_failure@@Base+0x1588>
   19db0:	ldr	r1, [sl, #32]
   19db4:	add	r2, r3, #3
   19db8:	cmp	r1, r2
   19dbc:	bcs	19dd8 <argp_failure@@Base+0x1438>
   19dc0:	mov	r1, #3
   19dc4:	mov	r0, sl
   19dc8:	bl	1c1e4 <argp_error@@Base+0x2008>
   19dcc:	cmp	r0, #0
   19dd0:	beq	19af4 <argp_failure@@Base+0x1154>
   19dd4:	ldr	r3, [sl, #28]
   19dd8:	ldr	r2, [pc, #-452]	; 19c1c <argp_failure@@Base+0x127c>
   19ddc:	ldrh	r1, [r2]
   19de0:	ldrb	r2, [r2, #2]
   19de4:	strh	r1, [r3]
   19de8:	strb	r2, [r3, #2]
   19dec:	ldr	r3, [sl, #28]
   19df0:	add	r3, r3, #3
   19df4:	str	r3, [sl, #28]
   19df8:	b	19af4 <argp_failure@@Base+0x1154>
   19dfc:	ldr	r3, [fp, #-108]	; 0xffffff94
   19e00:	ldr	r8, [r3]
   19e04:	str	r4, [fp, #-88]	; 0xffffffa8
   19e08:	str	r4, [fp, #-84]	; 0xffffffac
   19e0c:	str	r4, [fp, #-80]	; 0xffffffb0
   19e10:	b	18d5c <argp_failure@@Base+0x3bc>
   19e14:	ldr	r0, [sl, #28]
   19e18:	mov	r2, r5
   19e1c:	mov	r1, r4
   19e20:	bl	112b8 <memcpy@plt>
   19e24:	ldr	r3, [sl, #28]
   19e28:	add	r5, r3, r5
   19e2c:	str	r5, [sl, #28]
   19e30:	b	19b2c <argp_failure@@Base+0x118c>
   19e34:	mov	r0, sl
   19e38:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19e3c:	ldr	r3, [sl, #28]
   19e40:	ldr	r2, [sl, #24]
   19e44:	ldr	r1, [sl, #16]
   19e48:	ldr	r6, [sl, #20]
   19e4c:	ldr	r7, [fp, #-96]	; 0xffffffa0
   19e50:	sub	r2, r3, r2
   19e54:	cmp	r2, r1
   19e58:	bic	r6, r6, r6, asr #31
   19e5c:	ldr	r5, [r7, #20]
   19e60:	bls	19ac0 <argp_failure@@Base+0x1120>
   19e64:	mov	r0, sl
   19e68:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19e6c:	ldr	r3, [sl, #28]
   19e70:	ldr	r2, [sl, #24]
   19e74:	ldr	r1, [sl, #16]
   19e78:	sub	r2, r3, r2
   19e7c:	str	r5, [sl, #4]
   19e80:	mov	r5, r7
   19e84:	ldr	r7, [r7, #20]
   19e88:	cmp	r2, r1
   19e8c:	movls	r5, r7
   19e90:	bls	19ac8 <argp_failure@@Base+0x1128>
   19e94:	mov	r0, sl
   19e98:	bl	1bc38 <argp_error@@Base+0x1a5c>
   19e9c:	ldr	r5, [r5, #20]
   19ea0:	ldr	r3, [sl, #28]
   19ea4:	b	19ac8 <argp_failure@@Base+0x1128>
   19ea8:	str	r5, [sp]
   19eac:	ldr	r3, [pc, #-660]	; 19c20 <argp_failure@@Base+0x1280>
   19eb0:	mov	r1, r2
   19eb4:	ldr	r0, [fp, #-104]	; 0xffffff98
   19eb8:	bl	189a0 <argp_failure@@Base>
   19ebc:	b	19300 <argp_failure@@Base+0x960>
   19ec0:	ldr	r3, [pc, #-676]	; 19c24 <argp_failure@@Base+0x1284>
   19ec4:	ldr	r1, [pc, #-676]	; 19c28 <argp_failure@@Base+0x1288>
   19ec8:	mov	r2, #0
   19ecc:	ldr	r0, [fp, #-104]	; 0xffffff98
   19ed0:	stm	sp, {r1, r3}
   19ed4:	mov	r1, r2
   19ed8:	ldr	r3, [pc, #-692]	; 19c2c <argp_failure@@Base+0x128c>
   19edc:	bl	189a0 <argp_failure@@Base>
   19ee0:	b	18bec <argp_failure@@Base+0x24c>
   19ee4:	ldr	r3, [pc, #-700]	; 19c30 <argp_failure@@Base+0x1290>
   19ee8:	b	19ec4 <argp_failure@@Base+0x1524>
   19eec:	mov	r1, #1
   19ef0:	mov	r0, sl
   19ef4:	bl	1c1e4 <argp_error@@Base+0x2008>
   19ef8:	cmp	r0, #0
   19efc:	beq	18c8c <argp_failure@@Base+0x2ec>
   19f00:	ldr	r3, [sl, #28]
   19f04:	b	18c7c <argp_failure@@Base+0x2dc>
   19f08:	ldr	r0, [r6, #16]
   19f0c:	sub	r2, fp, #76	; 0x4c
   19f10:	ldr	r1, [r8, #20]
   19f14:	bl	17600 <argp_parse@@Base+0x3d80>
   19f18:	b	19b78 <argp_failure@@Base+0x11d8>
   19f1c:	ldr	r0, [fp, #-136]	; 0xffffff78
   19f20:	bl	11324 <funlockfile@plt>
   19f24:	b	18cec <argp_failure@@Base+0x34c>
   19f28:	ldr	r2, [sl, #24]
   19f2c:	ldr	r1, [sl, #16]
   19f30:	sub	r3, r3, r2
   19f34:	cmp	r3, r1
   19f38:	bhi	1a0b0 <argp_failure@@Base+0x1710>
   19f3c:	ldr	r3, [sl, #20]
   19f40:	mov	r6, #32
   19f44:	cmp	r3, #0
   19f48:	subge	r5, r5, r3
   19f4c:	mov	r7, #1
   19f50:	cmp	r5, #0
   19f54:	sub	r5, r5, #1
   19f58:	ble	19af4 <argp_failure@@Base+0x1154>
   19f5c:	ldr	r3, [sl, #28]
   19f60:	ldr	r2, [sl, #32]
   19f64:	cmp	r3, r2
   19f68:	bcs	19f94 <argp_failure@@Base+0x15f4>
   19f6c:	add	r2, r3, #1
   19f70:	cmp	r5, #0
   19f74:	str	r2, [sl, #28]
   19f78:	sub	r5, r5, #1
   19f7c:	strb	r6, [r3]
   19f80:	ble	19af4 <argp_failure@@Base+0x1154>
   19f84:	ldr	r3, [sl, #28]
   19f88:	ldr	r2, [sl, #32]
   19f8c:	cmp	r3, r2
   19f90:	bcc	19f6c <argp_failure@@Base+0x15cc>
   19f94:	mov	r1, r7
   19f98:	mov	r0, sl
   19f9c:	bl	1c1e4 <argp_error@@Base+0x2008>
   19fa0:	cmp	r0, #0
   19fa4:	beq	19f50 <argp_failure@@Base+0x15b0>
   19fa8:	ldr	r3, [sl, #28]
   19fac:	b	19f6c <argp_failure@@Base+0x15cc>
   19fb0:	mov	r1, #1
   19fb4:	mov	r0, sl
   19fb8:	bl	1c1e4 <argp_error@@Base+0x2008>
   19fbc:	cmp	r0, #0
   19fc0:	beq	19af4 <argp_failure@@Base+0x1154>
   19fc4:	ldr	r3, [sl, #28]
   19fc8:	b	19ae4 <argp_failure@@Base+0x1144>
   19fcc:	ldr	r4, [pc, #-912]	; 19c44 <argp_failure@@Base+0x12a4>
   19fd0:	ldr	r9, [fp, #-112]	; 0xffffff90
   19fd4:	ldr	r3, [sl, #28]
   19fd8:	ldr	r2, [sl, #32]
   19fdc:	cmp	r3, r2
   19fe0:	bcs	1a094 <argp_failure@@Base+0x16f4>
   19fe4:	add	r1, r3, #1
   19fe8:	mov	r2, #10
   19fec:	str	r1, [sl, #28]
   19ff0:	strb	r2, [r3]
   19ff4:	mov	r0, r4
   19ff8:	bl	113e4 <strlen@plt>
   19ffc:	subs	r6, r0, #0
   1a000:	beq	1a084 <argp_failure@@Base+0x16e4>
   1a004:	ldr	r0, [sl, #28]
   1a008:	ldr	r2, [sl, #32]
   1a00c:	add	r3, r0, r6
   1a010:	cmp	r2, r3
   1a014:	bcs	1a030 <argp_failure@@Base+0x1690>
   1a018:	mov	r1, r6
   1a01c:	mov	r0, sl
   1a020:	bl	1c1e4 <argp_error@@Base+0x2008>
   1a024:	cmp	r0, #0
   1a028:	beq	1a084 <argp_failure@@Base+0x16e4>
   1a02c:	ldr	r0, [sl, #28]
   1a030:	mov	r2, r6
   1a034:	mov	r1, r4
   1a038:	bl	112b8 <memcpy@plt>
   1a03c:	ldr	r3, [sl, #28]
   1a040:	add	r3, r3, r6
   1a044:	str	r3, [sl, #28]
   1a048:	ldr	r2, [sl, #32]
   1a04c:	cmp	r2, r3
   1a050:	bls	1a0e0 <argp_failure@@Base+0x1740>
   1a054:	add	r1, r3, #1
   1a058:	mov	r2, #10
   1a05c:	str	r1, [sl, #28]
   1a060:	strb	r2, [r3]
   1a064:	b	1909c <argp_failure@@Base+0x6fc>
   1a068:	mov	r1, #1
   1a06c:	mov	r0, sl
   1a070:	bl	1c1e4 <argp_error@@Base+0x2008>
   1a074:	cmp	r0, #0
   1a078:	beq	18d30 <argp_failure@@Base+0x390>
   1a07c:	ldr	r3, [sl, #28]
   1a080:	b	18d20 <argp_failure@@Base+0x380>
   1a084:	ldr	r3, [sl, #28]
   1a088:	b	1a048 <argp_failure@@Base+0x16a8>
   1a08c:	ldr	r3, [pc, #-1120]	; 19c34 <argp_failure@@Base+0x1294>
   1a090:	b	19ec4 <argp_failure@@Base+0x1524>
   1a094:	mov	r1, #1
   1a098:	mov	r0, sl
   1a09c:	bl	1c1e4 <argp_error@@Base+0x2008>
   1a0a0:	cmp	r0, #0
   1a0a4:	beq	19ff4 <argp_failure@@Base+0x1654>
   1a0a8:	ldr	r3, [sl, #28]
   1a0ac:	b	19fe4 <argp_failure@@Base+0x1644>
   1a0b0:	mov	r0, sl
   1a0b4:	bl	1bc38 <argp_error@@Base+0x1a5c>
   1a0b8:	b	19f3c <argp_failure@@Base+0x159c>
   1a0bc:	ldr	r3, [pc, #-1164]	; 19c38 <argp_failure@@Base+0x1298>
   1a0c0:	b	19ec4 <argp_failure@@Base+0x1524>
   1a0c4:	ldr	r3, [pc, #-1168]	; 19c3c <argp_failure@@Base+0x129c>
   1a0c8:	b	19ec4 <argp_failure@@Base+0x1524>
   1a0cc:	mov	r9, r1
   1a0d0:	ldr	r4, [pc, #-1172]	; 19c44 <argp_failure@@Base+0x12a4>
   1a0d4:	b	19fd4 <argp_failure@@Base+0x1634>
   1a0d8:	ldr	r3, [pc, #-1184]	; 19c40 <argp_failure@@Base+0x12a0>
   1a0dc:	b	19ec4 <argp_failure@@Base+0x1524>
   1a0e0:	mov	r1, #1
   1a0e4:	mov	r0, sl
   1a0e8:	bl	1c1e4 <argp_error@@Base+0x2008>
   1a0ec:	cmp	r0, #0
   1a0f0:	beq	1909c <argp_failure@@Base+0x6fc>
   1a0f4:	ldr	r3, [sl, #28]
   1a0f8:	b	1a054 <argp_failure@@Base+0x16b4>
   1a0fc:	ldr	r9, [fp, #-112]	; 0xffffff90
   1a100:	ldr	r4, [pc, #-1220]	; 19c44 <argp_failure@@Base+0x12a4>
   1a104:	b	19fd4 <argp_failure@@Base+0x1634>

0001a108 <argp_help@@Base>:
   1a108:	push	{lr}		; (str lr, [sp, #-4]!)
   1a10c:	sub	sp, sp, #12
   1a110:	str	r3, [sp]
   1a114:	mov	r3, r2
   1a118:	mov	r2, r1
   1a11c:	mov	r1, #0
   1a120:	bl	18ba8 <argp_failure@@Base+0x208>
   1a124:	add	sp, sp, #12
   1a128:	pop	{pc}		; (ldr pc, [sp], #4)

0001a12c <argp_state_help@@Base>:
   1a12c:	push	{r4, r5, lr}
   1a130:	subs	r4, r0, #0
   1a134:	sub	sp, sp, #12
   1a138:	mov	r5, r2
   1a13c:	beq	1a19c <argp_state_help@@Base+0x70>
   1a140:	ldr	r3, [r4, #16]
   1a144:	tst	r3, #2
   1a148:	bne	1a194 <argp_state_help@@Base+0x68>
   1a14c:	cmp	r1, #0
   1a150:	beq	1a194 <argp_state_help@@Base+0x68>
   1a154:	tst	r3, #64	; 0x40
   1a158:	ldr	r3, [r4, #40]	; 0x28
   1a15c:	orrne	r5, r5, #128	; 0x80
   1a160:	ldr	r0, [r4]
   1a164:	mov	r2, r1
   1a168:	str	r3, [sp]
   1a16c:	mov	r1, r4
   1a170:	mov	r3, r5
   1a174:	bl	18ba8 <argp_failure@@Base+0x208>
   1a178:	ldr	r3, [r4, #16]
   1a17c:	tst	r3, #32
   1a180:	bne	1a194 <argp_state_help@@Base+0x68>
   1a184:	ands	r0, r5, #256	; 0x100
   1a188:	bne	1a1c8 <argp_state_help@@Base+0x9c>
   1a18c:	tst	r5, #512	; 0x200
   1a190:	bne	1a1c4 <argp_state_help@@Base+0x98>
   1a194:	add	sp, sp, #12
   1a198:	pop	{r4, r5, pc}
   1a19c:	cmp	r1, #0
   1a1a0:	beq	1a194 <argp_state_help@@Base+0x68>
   1a1a4:	ldr	r3, [pc, #40]	; 1a1d4 <argp_state_help@@Base+0xa8>
   1a1a8:	mov	r2, r1
   1a1ac:	mov	r1, r4
   1a1b0:	ldr	ip, [r3]
   1a1b4:	mov	r3, r5
   1a1b8:	str	ip, [sp]
   1a1bc:	bl	18ba8 <argp_failure@@Base+0x208>
   1a1c0:	b	1a184 <argp_state_help@@Base+0x58>
   1a1c4:	bl	113d8 <exit@plt>
   1a1c8:	ldr	r3, [pc, #8]	; 1a1d8 <argp_state_help@@Base+0xac>
   1a1cc:	ldr	r0, [r3]
   1a1d0:	bl	113d8 <exit@plt>
   1a1d4:	andeq	lr, r2, r8, ror #5
   1a1d8:	andeq	lr, r2, r0, ror #5

0001a1dc <argp_error@@Base>:
   1a1dc:	push	{r1, r2, r3}
   1a1e0:	push	{r4, r5, lr}
   1a1e4:	subs	r5, r0, #0
   1a1e8:	sub	sp, sp, #16
   1a1ec:	beq	1a2fc <argp_error@@Base+0x120>
   1a1f0:	ldr	r3, [r5, #16]
   1a1f4:	tst	r3, #2
   1a1f8:	bne	1a2ec <argp_error@@Base+0x110>
   1a1fc:	ldr	r4, [r5, #44]	; 0x2c
   1a200:	cmp	r4, #0
   1a204:	beq	1a2ec <argp_error@@Base+0x110>
   1a208:	mov	r0, r4
   1a20c:	bl	11510 <flockfile@plt>
   1a210:	ldr	r0, [r5, #40]	; 0x28
   1a214:	add	r3, sp, #32
   1a218:	str	r3, [sp, #12]
   1a21c:	mov	r1, r4
   1a220:	bl	11210 <fputs_unlocked@plt>
   1a224:	ldr	r3, [r4, #20]
   1a228:	ldr	r2, [r4, #24]
   1a22c:	cmp	r3, r2
   1a230:	addcc	r1, r3, #1
   1a234:	movcc	r2, #58	; 0x3a
   1a238:	strcc	r1, [r4, #20]
   1a23c:	strbcc	r2, [r3]
   1a240:	bcs	1a328 <argp_error@@Base+0x14c>
   1a244:	ldr	r3, [r4, #20]
   1a248:	ldr	r2, [r4, #24]
   1a24c:	cmp	r3, r2
   1a250:	addcc	r1, r3, #1
   1a254:	movcc	r2, #32
   1a258:	strcc	r1, [r4, #20]
   1a25c:	strbcc	r2, [r3]
   1a260:	bcs	1a348 <argp_error@@Base+0x16c>
   1a264:	ldr	r1, [sp, #28]
   1a268:	ldr	r2, [sp, #12]
   1a26c:	mov	r0, r4
   1a270:	bl	114b0 <vfprintf@plt>
   1a274:	ldr	r3, [r4, #20]
   1a278:	ldr	r2, [r4, #24]
   1a27c:	cmp	r3, r2
   1a280:	addcc	r1, r3, #1
   1a284:	movcc	r2, #10
   1a288:	strcc	r1, [r4, #20]
   1a28c:	strbcc	r2, [r3]
   1a290:	bcs	1a338 <argp_error@@Base+0x15c>
   1a294:	cmp	r5, #0
   1a298:	beq	1a358 <argp_error@@Base+0x17c>
   1a29c:	ldr	r3, [r5, #16]
   1a2a0:	tst	r3, #2
   1a2a4:	bne	1a2e4 <argp_error@@Base+0x108>
   1a2a8:	ldr	r2, [r5, #40]	; 0x28
   1a2ac:	tst	r3, #64	; 0x40
   1a2b0:	moveq	r3, #260	; 0x104
   1a2b4:	movne	r3, #388	; 0x184
   1a2b8:	ldr	r0, [r5]
   1a2bc:	mov	r1, r5
   1a2c0:	str	r2, [sp]
   1a2c4:	mov	r2, r4
   1a2c8:	bl	18ba8 <argp_failure@@Base+0x208>
   1a2cc:	ldr	r3, [r5, #16]
   1a2d0:	tst	r3, #32
   1a2d4:	bne	1a2e4 <argp_error@@Base+0x108>
   1a2d8:	ldr	r3, [pc, #156]	; 1a37c <argp_error@@Base+0x1a0>
   1a2dc:	ldr	r0, [r3]
   1a2e0:	bl	113d8 <exit@plt>
   1a2e4:	mov	r0, r4
   1a2e8:	bl	11324 <funlockfile@plt>
   1a2ec:	add	sp, sp, #16
   1a2f0:	pop	{r4, r5, lr}
   1a2f4:	add	sp, sp, #12
   1a2f8:	bx	lr
   1a2fc:	ldr	r3, [pc, #124]	; 1a380 <argp_error@@Base+0x1a4>
   1a300:	ldr	r4, [r3]
   1a304:	cmp	r4, #0
   1a308:	beq	1a2ec <argp_error@@Base+0x110>
   1a30c:	mov	r0, r4
   1a310:	bl	11510 <flockfile@plt>
   1a314:	ldr	r2, [pc, #104]	; 1a384 <argp_error@@Base+0x1a8>
   1a318:	add	r3, sp, #32
   1a31c:	str	r3, [sp, #12]
   1a320:	ldr	r0, [r2]
   1a324:	b	1a21c <argp_error@@Base+0x40>
   1a328:	mov	r1, #58	; 0x3a
   1a32c:	mov	r0, r4
   1a330:	bl	11480 <__overflow@plt>
   1a334:	b	1a244 <argp_error@@Base+0x68>
   1a338:	mov	r1, #10
   1a33c:	mov	r0, r4
   1a340:	bl	11480 <__overflow@plt>
   1a344:	b	1a294 <argp_error@@Base+0xb8>
   1a348:	mov	r1, #32
   1a34c:	mov	r0, r4
   1a350:	bl	11480 <__overflow@plt>
   1a354:	b	1a264 <argp_error@@Base+0x88>
   1a358:	ldr	r1, [pc, #36]	; 1a384 <argp_error@@Base+0x1a8>
   1a35c:	mov	r2, r4
   1a360:	mov	r3, #260	; 0x104
   1a364:	ldr	r0, [r1]
   1a368:	mov	r1, r5
   1a36c:	str	r0, [sp]
   1a370:	mov	r0, r5
   1a374:	bl	18ba8 <argp_failure@@Base+0x208>
   1a378:	b	1a2d8 <argp_error@@Base+0xfc>
   1a37c:	andeq	lr, r2, r0, ror #5
   1a380:	strdeq	lr, [r2], -r0
   1a384:	andeq	lr, r2, r8, ror #5
   1a388:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a38c:	ldr	r4, [r1, #32]
   1a390:	ldr	r8, [r1, #28]
   1a394:	ldr	r7, [r1]
   1a398:	add	r6, r0, r4, lsl #2
   1a39c:	mov	r2, r8
   1a3a0:	mov	r5, r7
   1a3a4:	cmp	r5, r4
   1a3a8:	movle	r3, #0
   1a3ac:	movgt	r3, #1
   1a3b0:	cmp	r2, r4
   1a3b4:	movge	r3, #0
   1a3b8:	cmp	r3, #0
   1a3bc:	beq	1a430 <argp_error@@Base+0x254>
   1a3c0:	sub	r3, r5, r4
   1a3c4:	sub	sl, r4, r2
   1a3c8:	cmp	r3, sl
   1a3cc:	ble	1a400 <argp_error@@Base+0x224>
   1a3d0:	sub	r5, r5, sl
   1a3d4:	add	sl, sl, r2
   1a3d8:	add	ip, r0, r5, lsl #2
   1a3dc:	add	sl, r0, sl, lsl #2
   1a3e0:	add	r3, r0, r2, lsl #2
   1a3e4:	ldr	r9, [ip]
   1a3e8:	ldr	lr, [r3]
   1a3ec:	str	r9, [r3], #4
   1a3f0:	cmp	r3, sl
   1a3f4:	str	lr, [ip], #4
   1a3f8:	bne	1a3e4 <argp_error@@Base+0x208>
   1a3fc:	b	1a3a4 <argp_error@@Base+0x1c8>
   1a400:	add	sl, r3, r2
   1a404:	add	r3, r0, r2, lsl #2
   1a408:	add	r9, r0, sl, lsl #2
   1a40c:	mov	r2, r6
   1a410:	ldr	lr, [r2]
   1a414:	ldr	ip, [r3]
   1a418:	str	lr, [r3], #4
   1a41c:	cmp	r9, r3
   1a420:	str	ip, [r2], #4
   1a424:	bne	1a410 <argp_error@@Base+0x234>
   1a428:	mov	r2, sl
   1a42c:	b	1a3a4 <argp_error@@Base+0x1c8>
   1a430:	sub	r4, r7, r4
   1a434:	add	r8, r4, r8
   1a438:	str	r8, [r1, #28]
   1a43c:	str	r7, [r1, #32]
   1a440:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a448:	sub	sp, sp, #52	; 0x34
   1a44c:	str	r1, [sp, #24]
   1a450:	ldr	r1, [sp, #96]	; 0x60
   1a454:	str	r0, [sp, #28]
   1a458:	str	r2, [sp, #32]
   1a45c:	ldr	r8, [r1, #20]
   1a460:	str	r3, [sp, #12]
   1a464:	mov	r7, r8
   1a468:	ldrb	r5, [r8]
   1a46c:	cmp	r5, #61	; 0x3d
   1a470:	cmpne	r5, #0
   1a474:	movne	r5, #1
   1a478:	moveq	r5, #0
   1a47c:	beq	1a498 <argp_error@@Base+0x2bc>
   1a480:	ldrb	r3, [r7, #1]!
   1a484:	cmp	r3, #0
   1a488:	cmpne	r3, #61	; 0x3d
   1a48c:	bne	1a480 <argp_error@@Base+0x2a4>
   1a490:	ldr	r3, [sp, #12]
   1a494:	sub	r5, r7, r8
   1a498:	ldr	sl, [r3]
   1a49c:	cmp	sl, #0
   1a4a0:	beq	1a878 <argp_error@@Base+0x69c>
   1a4a4:	mov	fp, r3
   1a4a8:	mov	r4, sl
   1a4ac:	mov	r6, #0
   1a4b0:	str	r3, [sp, #20]
   1a4b4:	mov	r2, r5
   1a4b8:	mov	r1, r8
   1a4bc:	mov	r0, r4
   1a4c0:	bl	1154c <strncmp@plt>
   1a4c4:	mov	r9, fp
   1a4c8:	cmp	r0, #0
   1a4cc:	mov	r0, r4
   1a4d0:	bne	1a4e0 <argp_error@@Base+0x304>
   1a4d4:	bl	113e4 <strlen@plt>
   1a4d8:	cmp	r0, r5
   1a4dc:	beq	1a5a0 <argp_error@@Base+0x3c4>
   1a4e0:	ldr	r4, [fp, #16]!
   1a4e4:	add	r6, r6, #1
   1a4e8:	cmp	r4, #0
   1a4ec:	bne	1a4b4 <argp_error@@Base+0x2d8>
   1a4f0:	ldr	r3, [sp, #100]	; 0x64
   1a4f4:	cmp	r3, #0
   1a4f8:	ldr	r3, [sp, #92]	; 0x5c
   1a4fc:	beq	1a644 <argp_error@@Base+0x468>
   1a500:	cmp	r3, #0
   1a504:	bne	1a75c <argp_error@@Base+0x580>
   1a508:	mov	fp, r3
   1a50c:	mov	r0, sl
   1a510:	ldr	r4, [sp, #12]
   1a514:	ldr	sl, [sp, #96]	; 0x60
   1a518:	mov	r9, fp
   1a51c:	mov	r1, r8
   1a520:	str	r3, [sp, #16]
   1a524:	str	r3, [sp, #44]	; 0x2c
   1a528:	mvn	r3, #0
   1a52c:	str	r3, [sp, #40]	; 0x28
   1a530:	str	fp, [sp, #36]	; 0x24
   1a534:	mov	r2, r5
   1a538:	bl	1154c <strncmp@plt>
   1a53c:	cmp	r0, #0
   1a540:	bne	1a57c <argp_error@@Base+0x3a0>
   1a544:	cmp	r9, #0
   1a548:	beq	1aab0 <argp_error@@Base+0x8d4>
   1a54c:	ldr	r2, [r9, #4]
   1a550:	ldr	r3, [r4, #4]
   1a554:	cmp	r2, r3
   1a558:	beq	1ab0c <argp_error@@Base+0x930>
   1a55c:	ldr	r3, [sp, #16]
   1a560:	cmp	r3, #0
   1a564:	bne	1a57c <argp_error@@Base+0x3a0>
   1a568:	ldr	r3, [sp, #36]	; 0x24
   1a56c:	cmp	r3, #0
   1a570:	beq	1a9e8 <argp_error@@Base+0x80c>
   1a574:	mov	r2, #1
   1a578:	strb	r2, [r3, fp]
   1a57c:	ldr	r0, [r4, #16]!
   1a580:	add	fp, fp, #1
   1a584:	cmp	r0, #0
   1a588:	beq	1a6b8 <argp_error@@Base+0x4dc>
   1a58c:	ldr	r1, [sl, #20]
   1a590:	b	1a534 <argp_error@@Base+0x358>
   1a594:	cmp	r9, #0
   1a598:	beq	1a878 <argp_error@@Base+0x69c>
   1a59c:	ldr	r6, [sp, #40]	; 0x28
   1a5a0:	ldr	r3, [sp, #96]	; 0x60
   1a5a4:	ldr	r0, [sp, #96]	; 0x60
   1a5a8:	mov	r1, #0
   1a5ac:	ldr	r2, [r3]
   1a5b0:	str	r1, [r0, #20]
   1a5b4:	add	r3, r2, #1
   1a5b8:	str	r3, [r0]
   1a5bc:	ldrb	r1, [r7]
   1a5c0:	cmp	r1, #0
   1a5c4:	bne	1a604 <argp_error@@Base+0x428>
   1a5c8:	ldr	r1, [r9, #4]
   1a5cc:	cmp	r1, #1
   1a5d0:	beq	1a8e8 <argp_error@@Base+0x70c>
   1a5d4:	ldr	r3, [sp, #88]	; 0x58
   1a5d8:	ldr	r2, [r9, #8]
   1a5dc:	cmp	r3, #0
   1a5e0:	strne	r6, [r3]
   1a5e4:	cmp	r2, #0
   1a5e8:	movne	r3, #0
   1a5ec:	ldreq	r3, [r9, #12]
   1a5f0:	ldrne	r1, [r9, #12]
   1a5f4:	strne	r1, [r2]
   1a5f8:	mov	r0, r3
   1a5fc:	add	sp, sp, #52	; 0x34
   1a600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a604:	ldr	r3, [r9, #4]
   1a608:	cmp	r3, #0
   1a60c:	movne	r3, r0
   1a610:	addne	r7, r7, #1
   1a614:	strne	r7, [r3, #12]
   1a618:	bne	1a5d4 <argp_error@@Base+0x3f8>
   1a61c:	ldr	r3, [sp, #100]	; 0x64
   1a620:	cmp	r3, #0
   1a624:	bne	1a840 <argp_error@@Base+0x664>
   1a628:	ldr	r1, [sp, #96]	; 0x60
   1a62c:	ldr	r2, [r9, #12]
   1a630:	mov	r3, #63	; 0x3f
   1a634:	str	r2, [r1, #8]
   1a638:	mov	r0, r3
   1a63c:	add	sp, sp, #52	; 0x34
   1a640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a644:	cmp	r3, #0
   1a648:	bne	1a7d8 <argp_error@@Base+0x5fc>
   1a64c:	mov	fp, r3
   1a650:	ldr	r4, [sp, #12]
   1a654:	mov	r9, fp
   1a658:	mov	r0, sl
   1a65c:	str	r3, [sp, #16]
   1a660:	mvn	r3, #0
   1a664:	str	r3, [sp, #40]	; 0x28
   1a668:	mov	r2, r5
   1a66c:	mov	r1, r8
   1a670:	bl	1154c <strncmp@plt>
   1a674:	cmp	r0, #0
   1a678:	bne	1a69c <argp_error@@Base+0x4c0>
   1a67c:	cmp	r9, #0
   1a680:	beq	1aaa4 <argp_error@@Base+0x8c8>
   1a684:	ldr	r2, [r9, #4]
   1a688:	ldr	r3, [r4, #4]
   1a68c:	cmp	r2, r3
   1a690:	beq	1aae0 <argp_error@@Base+0x904>
   1a694:	mov	r3, #1
   1a698:	str	r3, [sp, #16]
   1a69c:	ldr	r0, [r4, #16]!
   1a6a0:	add	fp, fp, #1
   1a6a4:	cmp	r0, #0
   1a6a8:	bne	1a668 <argp_error@@Base+0x48c>
   1a6ac:	ldr	r3, [sp, #92]	; 0x5c
   1a6b0:	str	r0, [sp, #36]	; 0x24
   1a6b4:	str	r3, [sp, #44]	; 0x2c
   1a6b8:	ldr	r2, [sp, #36]	; 0x24
   1a6bc:	ldr	r3, [sp, #16]
   1a6c0:	cmp	r3, #0
   1a6c4:	cmpeq	r2, #0
   1a6c8:	beq	1a594 <argp_error@@Base+0x3b8>
   1a6cc:	ldr	r2, [sp, #100]	; 0x64
   1a6d0:	cmp	r2, #0
   1a6d4:	beq	1a938 <argp_error@@Base+0x75c>
   1a6d8:	cmp	r3, #0
   1a6dc:	bne	1a910 <argp_error@@Base+0x734>
   1a6e0:	ldr	r5, [pc, #1108]	; 1ab3c <argp_error@@Base+0x960>
   1a6e4:	ldr	r3, [sp, #36]	; 0x24
   1a6e8:	ldr	r7, [pc, #1104]	; 1ab40 <argp_error@@Base+0x964>
   1a6ec:	ldr	r0, [r5]
   1a6f0:	add	r6, r3, r6
   1a6f4:	mov	r4, r3
   1a6f8:	bl	11510 <flockfile@plt>
   1a6fc:	ldr	r3, [sp, #24]
   1a700:	ldr	r0, [r5]
   1a704:	ldr	r1, [pc, #1080]	; 1ab44 <argp_error@@Base+0x968>
   1a708:	ldr	r2, [r3]
   1a70c:	ldr	r3, [sp, #96]	; 0x60
   1a710:	ldr	r3, [r3, #20]
   1a714:	str	r3, [sp]
   1a718:	ldr	r3, [sp, #104]	; 0x68
   1a71c:	bl	113fc <fprintf@plt>
   1a720:	ldr	r8, [sp, #16]
   1a724:	ldr	r9, [sp, #12]
   1a728:	b	1a738 <argp_error@@Base+0x55c>
   1a72c:	cmp	r4, r6
   1a730:	add	r8, r8, #1
   1a734:	beq	1aac8 <argp_error@@Base+0x8ec>
   1a738:	ldrb	r3, [r4], #1
   1a73c:	cmp	r3, #0
   1a740:	beq	1a72c <argp_error@@Base+0x550>
   1a744:	ldr	r3, [r9, r8, lsl #4]
   1a748:	ldr	r2, [sp, #104]	; 0x68
   1a74c:	mov	r1, r7
   1a750:	ldr	r0, [r5]
   1a754:	bl	113fc <fprintf@plt>
   1a758:	b	1a72c <argp_error@@Base+0x550>
   1a75c:	mov	r9, r4
   1a760:	str	r4, [sp, #16]
   1a764:	str	r4, [sp, #44]	; 0x2c
   1a768:	str	r4, [sp, #36]	; 0x24
   1a76c:	mov	r1, r8
   1a770:	mov	r0, sl
   1a774:	mov	r8, r4
   1a778:	ldr	sl, [sp, #20]
   1a77c:	ldr	r4, [sp, #96]	; 0x60
   1a780:	mov	fp, #1
   1a784:	mvn	r3, #0
   1a788:	str	r3, [sp, #40]	; 0x28
   1a78c:	mov	r2, r5
   1a790:	bl	1154c <strncmp@plt>
   1a794:	cmp	r0, #0
   1a798:	bne	1a7c0 <argp_error@@Base+0x5e4>
   1a79c:	cmp	r9, #0
   1a7a0:	beq	1aabc <argp_error@@Base+0x8e0>
   1a7a4:	ldr	r3, [sp, #16]
   1a7a8:	cmp	r3, #0
   1a7ac:	bne	1a7c0 <argp_error@@Base+0x5e4>
   1a7b0:	ldr	r3, [sp, #36]	; 0x24
   1a7b4:	cmp	r3, #0
   1a7b8:	beq	1aa2c <argp_error@@Base+0x850>
   1a7bc:	strb	fp, [r3, r8]
   1a7c0:	ldr	r0, [sl, #16]!
   1a7c4:	add	r8, r8, #1
   1a7c8:	cmp	r0, #0
   1a7cc:	beq	1a6b8 <argp_error@@Base+0x4dc>
   1a7d0:	ldr	r1, [r4, #20]
   1a7d4:	b	1a78c <argp_error@@Base+0x5b0>
   1a7d8:	ldr	r3, [sp, #100]	; 0x64
   1a7dc:	mov	r0, sl
   1a7e0:	mov	r4, r3
   1a7e4:	ldr	sl, [sp, #20]
   1a7e8:	mov	r9, r4
   1a7ec:	str	r3, [sp, #16]
   1a7f0:	mvn	r3, #0
   1a7f4:	str	r3, [sp, #40]	; 0x28
   1a7f8:	mov	r2, r5
   1a7fc:	mov	r1, r8
   1a800:	bl	1154c <strncmp@plt>
   1a804:	cmp	r0, #0
   1a808:	bne	1a820 <argp_error@@Base+0x644>
   1a80c:	cmp	r9, #0
   1a810:	moveq	r9, sl
   1a814:	movne	r3, #1
   1a818:	strne	r3, [sp, #16]
   1a81c:	streq	r4, [sp, #40]	; 0x28
   1a820:	ldr	r0, [sl, #16]!
   1a824:	add	r4, r4, #1
   1a828:	cmp	r0, #0
   1a82c:	bne	1a7f8 <argp_error@@Base+0x61c>
   1a830:	ldr	r3, [sp, #100]	; 0x64
   1a834:	str	r0, [sp, #36]	; 0x24
   1a838:	str	r3, [sp, #44]	; 0x2c
   1a83c:	b	1a6b8 <argp_error@@Base+0x4dc>
   1a840:	ldr	r3, [sp, #24]
   1a844:	ldr	r1, [pc, #752]	; 1ab3c <argp_error@@Base+0x960>
   1a848:	ldr	r2, [r3]
   1a84c:	ldr	r3, [r9]
   1a850:	ldr	r0, [r1]
   1a854:	str	r3, [sp]
   1a858:	ldr	r1, [pc, #744]	; 1ab48 <argp_error@@Base+0x96c>
   1a85c:	ldr	r3, [sp, #104]	; 0x68
   1a860:	bl	113fc <fprintf@plt>
   1a864:	ldr	r1, [sp, #96]	; 0x60
   1a868:	ldr	r2, [r9, #12]
   1a86c:	mov	r3, #63	; 0x3f
   1a870:	str	r2, [r1, #8]
   1a874:	b	1a638 <argp_error@@Base+0x45c>
   1a878:	ldr	r3, [sp, #92]	; 0x5c
   1a87c:	cmp	r3, #0
   1a880:	bne	1aa64 <argp_error@@Base+0x888>
   1a884:	ldr	r3, [sp, #100]	; 0x64
   1a888:	cmp	r3, #0
   1a88c:	beq	1a8b8 <argp_error@@Base+0x6dc>
   1a890:	ldr	r3, [sp, #24]
   1a894:	ldr	r1, [pc, #672]	; 1ab3c <argp_error@@Base+0x960>
   1a898:	ldr	r2, [r3]
   1a89c:	ldr	r3, [sp, #96]	; 0x60
   1a8a0:	ldr	r0, [r1]
   1a8a4:	ldr	r1, [pc, #672]	; 1ab4c <argp_error@@Base+0x970>
   1a8a8:	ldr	r3, [r3, #20]
   1a8ac:	str	r3, [sp]
   1a8b0:	ldr	r3, [sp, #104]	; 0x68
   1a8b4:	bl	113fc <fprintf@plt>
   1a8b8:	ldr	r3, [sp, #96]	; 0x60
   1a8bc:	ldr	r1, [sp, #96]	; 0x60
   1a8c0:	mov	r2, #0
   1a8c4:	ldr	r3, [r3]
   1a8c8:	str	r2, [r1, #20]
   1a8cc:	add	r3, r3, #1
   1a8d0:	str	r3, [r1]
   1a8d4:	mov	r3, #63	; 0x3f
   1a8d8:	mov	r0, r3
   1a8dc:	str	r2, [r1, #8]
   1a8e0:	add	sp, sp, #52	; 0x34
   1a8e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a8e8:	ldr	r1, [sp, #28]
   1a8ec:	cmp	r3, r1
   1a8f0:	bge	1a990 <argp_error@@Base+0x7b4>
   1a8f4:	ldr	r1, [sp, #24]
   1a8f8:	add	r2, r2, #2
   1a8fc:	ldr	r3, [r1, r3, lsl #2]
   1a900:	ldr	r1, [sp, #96]	; 0x60
   1a904:	str	r3, [r1, #12]
   1a908:	str	r2, [r1]
   1a90c:	b	1a5d4 <argp_error@@Base+0x3f8>
   1a910:	ldr	r3, [sp, #24]
   1a914:	ldr	r1, [pc, #544]	; 1ab3c <argp_error@@Base+0x960>
   1a918:	ldr	r2, [r3]
   1a91c:	ldr	r3, [sp, #96]	; 0x60
   1a920:	ldr	r0, [r1]
   1a924:	ldr	r1, [pc, #548]	; 1ab50 <argp_error@@Base+0x974>
   1a928:	ldr	r3, [r3, #20]
   1a92c:	str	r3, [sp]
   1a930:	ldr	r3, [sp, #104]	; 0x68
   1a934:	bl	113fc <fprintf@plt>
   1a938:	ldr	r3, [sp, #44]	; 0x2c
   1a93c:	cmp	r3, #0
   1a940:	beq	1a94c <argp_error@@Base+0x770>
   1a944:	ldr	r0, [sp, #36]	; 0x24
   1a948:	bl	147fc <argp_parse@@Base+0xf7c>
   1a94c:	ldr	r3, [sp, #96]	; 0x60
   1a950:	ldr	r4, [r3, #20]
   1a954:	mov	r0, r4
   1a958:	bl	113e4 <strlen@plt>
   1a95c:	ldr	r3, [sp, #96]	; 0x60
   1a960:	ldr	r1, [sp, #96]	; 0x60
   1a964:	mov	r2, #0
   1a968:	ldr	r3, [r3]
   1a96c:	str	r2, [r1, #8]
   1a970:	add	r3, r3, #1
   1a974:	str	r3, [r1]
   1a978:	mov	r3, #63	; 0x3f
   1a97c:	add	r0, r4, r0
   1a980:	str	r0, [r1, #20]
   1a984:	mov	r0, r3
   1a988:	add	sp, sp, #52	; 0x34
   1a98c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a990:	ldr	r3, [sp, #100]	; 0x64
   1a994:	cmp	r3, #0
   1a998:	bne	1a9c0 <argp_error@@Base+0x7e4>
   1a99c:	ldr	r2, [sp, #96]	; 0x60
   1a9a0:	ldr	r3, [r9, #12]
   1a9a4:	str	r3, [r2, #8]
   1a9a8:	ldr	r3, [sp, #32]
   1a9ac:	ldrb	r3, [r3]
   1a9b0:	cmp	r3, #58	; 0x3a
   1a9b4:	movne	r3, #63	; 0x3f
   1a9b8:	moveq	r3, #58	; 0x3a
   1a9bc:	b	1a5f8 <argp_error@@Base+0x41c>
   1a9c0:	ldr	r3, [sp, #24]
   1a9c4:	ldr	r1, [pc, #368]	; 1ab3c <argp_error@@Base+0x960>
   1a9c8:	ldr	r2, [r3]
   1a9cc:	ldr	r3, [r9]
   1a9d0:	ldr	r0, [r1]
   1a9d4:	str	r3, [sp]
   1a9d8:	ldr	r1, [pc, #372]	; 1ab54 <argp_error@@Base+0x978>
   1a9dc:	ldr	r3, [sp, #104]	; 0x68
   1a9e0:	bl	113fc <fprintf@plt>
   1a9e4:	b	1a99c <argp_error@@Base+0x7c0>
   1a9e8:	mov	r0, r6
   1a9ec:	bl	15e10 <argp_parse@@Base+0x2590>
   1a9f0:	subs	r3, r0, #0
   1a9f4:	mov	r8, r3
   1a9f8:	str	r3, [sp, #36]	; 0x24
   1a9fc:	mov	r3, #1
   1aa00:	streq	r3, [sp, #16]
   1aa04:	beq	1a57c <argp_error@@Base+0x3a0>
   1aa08:	mov	r2, r6
   1aa0c:	mov	r1, #0
   1aa10:	str	r3, [sp, #44]	; 0x2c
   1aa14:	bl	1142c <memset@plt>
   1aa18:	ldr	r2, [sp, #40]	; 0x28
   1aa1c:	mov	r1, #1
   1aa20:	ldr	r3, [sp, #36]	; 0x24
   1aa24:	strb	r1, [r8, r2]
   1aa28:	b	1a574 <argp_error@@Base+0x398>
   1aa2c:	mov	r0, r6
   1aa30:	bl	15e10 <argp_parse@@Base+0x2590>
   1aa34:	subs	r3, r0, #0
   1aa38:	str	r3, [sp, #36]	; 0x24
   1aa3c:	beq	1ab30 <argp_error@@Base+0x954>
   1aa40:	mov	r2, r6
   1aa44:	mov	r1, #0
   1aa48:	bl	1142c <memset@plt>
   1aa4c:	mov	r2, #1
   1aa50:	str	r2, [sp, #44]	; 0x2c
   1aa54:	ldr	r3, [sp, #36]	; 0x24
   1aa58:	ldr	r2, [sp, #40]	; 0x28
   1aa5c:	strb	fp, [r3, r2]
   1aa60:	b	1a7bc <argp_error@@Base+0x5e0>
   1aa64:	ldr	r3, [sp, #96]	; 0x60
   1aa68:	ldr	r2, [sp, #24]
   1aa6c:	ldr	r3, [r3]
   1aa70:	ldr	r3, [r2, r3, lsl #2]
   1aa74:	ldrb	r3, [r3, #1]
   1aa78:	cmp	r3, #45	; 0x2d
   1aa7c:	beq	1a884 <argp_error@@Base+0x6a8>
   1aa80:	ldr	r3, [sp, #96]	; 0x60
   1aa84:	ldr	r0, [sp, #32]
   1aa88:	ldr	r3, [r3, #20]
   1aa8c:	ldrb	r1, [r3]
   1aa90:	bl	113f0 <strchr@plt>
   1aa94:	cmp	r0, #0
   1aa98:	beq	1a884 <argp_error@@Base+0x6a8>
   1aa9c:	mvn	r3, #0
   1aaa0:	b	1a5f8 <argp_error@@Base+0x41c>
   1aaa4:	str	fp, [sp, #40]	; 0x28
   1aaa8:	mov	r9, r4
   1aaac:	b	1a69c <argp_error@@Base+0x4c0>
   1aab0:	str	fp, [sp, #40]	; 0x28
   1aab4:	mov	r9, r4
   1aab8:	b	1a57c <argp_error@@Base+0x3a0>
   1aabc:	str	r8, [sp, #40]	; 0x28
   1aac0:	mov	r9, sl
   1aac4:	b	1a7c0 <argp_error@@Base+0x5e4>
   1aac8:	ldr	r1, [r5]
   1aacc:	mov	r0, #10
   1aad0:	bl	114c8 <fputc@plt>
   1aad4:	ldr	r0, [r5]
   1aad8:	bl	11324 <funlockfile@plt>
   1aadc:	b	1a938 <argp_error@@Base+0x75c>
   1aae0:	ldr	r2, [r9, #8]
   1aae4:	ldr	r3, [r4, #8]
   1aae8:	cmp	r2, r3
   1aaec:	bne	1a694 <argp_error@@Base+0x4b8>
   1aaf0:	ldr	r2, [r9, #12]
   1aaf4:	ldr	r3, [r4, #12]
   1aaf8:	ldr	r1, [sp, #16]
   1aafc:	cmp	r2, r3
   1ab00:	movne	r1, #1
   1ab04:	str	r1, [sp, #16]
   1ab08:	b	1a69c <argp_error@@Base+0x4c0>
   1ab0c:	ldr	r2, [r9, #8]
   1ab10:	ldr	r3, [r4, #8]
   1ab14:	cmp	r2, r3
   1ab18:	bne	1a55c <argp_error@@Base+0x380>
   1ab1c:	ldr	r2, [r9, #12]
   1ab20:	ldr	r3, [r4, #12]
   1ab24:	cmp	r2, r3
   1ab28:	bne	1a55c <argp_error@@Base+0x380>
   1ab2c:	b	1a57c <argp_error@@Base+0x3a0>
   1ab30:	mov	r3, #1
   1ab34:	str	r3, [sp, #16]
   1ab38:	b	1a7c0 <argp_error@@Base+0x5e4>
   1ab3c:	strdeq	lr, [r2], -r0
   1ab40:	ldrdeq	sp, [r1], -r4
   1ab44:	andeq	sp, r1, r4, lsr #13
   1ab48:	strdeq	sp, [r1], -ip
   1ab4c:	ldrdeq	sp, [r1], -ip
   1ab50:	andeq	sp, r1, r4, lsl #13
   1ab54:	andeq	sp, r1, ip, lsr #14
   1ab58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ab5c:	sub	sp, sp, #36	; 0x24
   1ab60:	subs	r6, r0, #0
   1ab64:	ldr	r4, [sp, #80]	; 0x50
   1ab68:	ldr	r8, [r4, #4]
   1ab6c:	ble	1ad40 <argp_error@@Base+0xb64>
   1ab70:	mov	sl, r3
   1ab74:	ldr	r3, [r4]
   1ab78:	mov	r7, r2
   1ab7c:	mov	r2, #0
   1ab80:	cmp	r3, r2
   1ab84:	mov	r9, r1
   1ab88:	str	r2, [r4, #12]
   1ab8c:	beq	1adc8 <argp_error@@Base+0xbec>
   1ab90:	ldr	r2, [r4, #16]
   1ab94:	cmp	r2, #0
   1ab98:	bne	1ad4c <argp_error@@Base+0xb70>
   1ab9c:	mov	r5, #0
   1aba0:	str	r3, [r4, #32]
   1aba4:	str	r3, [r4, #28]
   1aba8:	str	r5, [r4, #20]
   1abac:	ldrb	r3, [r7]
   1abb0:	cmp	r3, #45	; 0x2d
   1abb4:	moveq	r3, #2
   1abb8:	addeq	r7, r7, #1
   1abbc:	streq	r3, [r4, #24]
   1abc0:	beq	1abe8 <argp_error@@Base+0xa0c>
   1abc4:	cmp	r3, #43	; 0x2b
   1abc8:	streq	r5, [r4, #24]
   1abcc:	addeq	r7, r7, #1
   1abd0:	beq	1abe8 <argp_error@@Base+0xa0c>
   1abd4:	ldr	r3, [sp, #84]	; 0x54
   1abd8:	cmp	r3, #0
   1abdc:	beq	1ae58 <argp_error@@Base+0xc7c>
   1abe0:	mov	r3, #0
   1abe4:	str	r3, [r4, #24]
   1abe8:	mov	r3, #1
   1abec:	str	r3, [r4, #16]
   1abf0:	ldrb	r3, [r7]
   1abf4:	cmp	r3, #58	; 0x3a
   1abf8:	moveq	r8, #0
   1abfc:	cmp	r5, #0
   1ac00:	beq	1aca8 <argp_error@@Base+0xacc>
   1ac04:	ldrb	r3, [r5]
   1ac08:	cmp	r3, #0
   1ac0c:	beq	1aca8 <argp_error@@Base+0xacc>
   1ac10:	add	r3, r5, #1
   1ac14:	str	r3, [r4, #20]
   1ac18:	ldrb	fp, [r5]
   1ac1c:	mov	r0, r7
   1ac20:	str	r3, [sp, #28]
   1ac24:	mov	r1, fp
   1ac28:	bl	113f0 <strchr@plt>
   1ac2c:	ldrb	r1, [r5, #1]
   1ac30:	ldr	r3, [sp, #28]
   1ac34:	cmp	r1, #0
   1ac38:	ldreq	r1, [r4]
   1ac3c:	addeq	r1, r1, #1
   1ac40:	streq	r1, [r4]
   1ac44:	sub	r1, fp, #58	; 0x3a
   1ac48:	mov	r2, r0
   1ac4c:	cmp	r2, #0
   1ac50:	cmpne	r1, #1
   1ac54:	mov	r0, fp
   1ac58:	bls	1ad98 <argp_error@@Base+0xbbc>
   1ac5c:	ldrb	r1, [r2]
   1ac60:	cmp	r1, #87	; 0x57
   1ac64:	ldrb	r1, [r2, #1]
   1ac68:	beq	1aee4 <argp_error@@Base+0xd08>
   1ac6c:	cmp	r1, #58	; 0x3a
   1ac70:	bne	1ad90 <argp_error@@Base+0xbb4>
   1ac74:	ldrb	r2, [r2, #2]
   1ac78:	cmp	r2, #58	; 0x3a
   1ac7c:	ldrb	r2, [r5, #1]
   1ac80:	beq	1afdc <argp_error@@Base+0xe00>
   1ac84:	cmp	r2, #0
   1ac88:	beq	1afbc <argp_error@@Base+0xde0>
   1ac8c:	ldr	r2, [r4]
   1ac90:	str	r3, [r4, #12]
   1ac94:	add	r3, r2, #1
   1ac98:	str	r3, [r4]
   1ac9c:	mov	r3, #0
   1aca0:	str	r3, [r4, #20]
   1aca4:	b	1ad90 <argp_error@@Base+0xbb4>
   1aca8:	ldr	fp, [r4]
   1acac:	ldr	r3, [r4, #32]
   1acb0:	ldr	r2, [r4, #28]
   1acb4:	cmp	r3, fp
   1acb8:	ldr	r3, [r4, #24]
   1acbc:	strgt	fp, [r4, #32]
   1acc0:	cmp	fp, r2
   1acc4:	movlt	r2, fp
   1acc8:	strlt	fp, [r4, #28]
   1accc:	cmp	r3, #1
   1acd0:	beq	1add8 <argp_error@@Base+0xbfc>
   1acd4:	cmp	r6, fp
   1acd8:	beq	1ae40 <argp_error@@Base+0xc64>
   1acdc:	ldr	r3, [pc, #972]	; 1b0b0 <argp_error@@Base+0xed4>
   1ace0:	ldr	r5, [r9, fp, lsl #2]
   1ace4:	mov	r1, r3
   1ace8:	mov	r0, r5
   1acec:	str	r3, [sp, #28]
   1acf0:	bl	11240 <strcmp@plt>
   1acf4:	ldr	r3, [sp, #28]
   1acf8:	cmp	r0, #0
   1acfc:	bne	1ad68 <argp_error@@Base+0xb8c>
   1ad00:	ldr	r3, [r4, #28]
   1ad04:	ldr	r2, [r4, #32]
   1ad08:	add	fp, fp, #1
   1ad0c:	cmp	r3, r2
   1ad10:	str	fp, [r4]
   1ad14:	beq	1aed8 <argp_error@@Base+0xcfc>
   1ad18:	cmp	fp, r2
   1ad1c:	beq	1ad30 <argp_error@@Base+0xb54>
   1ad20:	mov	r0, r9
   1ad24:	mov	r1, r4
   1ad28:	bl	1a388 <argp_error@@Base+0x1ac>
   1ad2c:	ldr	r3, [r4, #28]
   1ad30:	cmp	r6, r3
   1ad34:	str	r6, [r4]
   1ad38:	str	r6, [r4, #32]
   1ad3c:	strne	r3, [r4]
   1ad40:	mvn	r0, #0
   1ad44:	add	sp, sp, #36	; 0x24
   1ad48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad4c:	ldrb	r3, [r7]
   1ad50:	ldr	r5, [r4, #20]
   1ad54:	sub	r2, r3, #43	; 0x2b
   1ad58:	tst	r2, #253	; 0xfd
   1ad5c:	ldrbeq	r3, [r7, #1]
   1ad60:	addeq	r7, r7, #1
   1ad64:	b	1abf4 <argp_error@@Base+0xa18>
   1ad68:	ldrb	r2, [r5]
   1ad6c:	cmp	r2, #45	; 0x2d
   1ad70:	beq	1ae8c <argp_error@@Base+0xcb0>
   1ad74:	ldr	r3, [r4, #24]
   1ad78:	cmp	r3, #0
   1ad7c:	beq	1ad40 <argp_error@@Base+0xb64>
   1ad80:	mov	r0, #1
   1ad84:	add	fp, fp, #1
   1ad88:	str	fp, [r4]
   1ad8c:	str	r5, [r4, #12]
   1ad90:	add	sp, sp, #36	; 0x24
   1ad94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ad98:	cmp	r8, #0
   1ad9c:	beq	1adb8 <argp_error@@Base+0xbdc>
   1ada0:	ldr	r1, [pc, #780]	; 1b0b4 <argp_error@@Base+0xed8>
   1ada4:	ldr	r2, [r9]
   1ada8:	mov	r3, fp
   1adac:	ldr	r0, [r1]
   1adb0:	ldr	r1, [pc, #768]	; 1b0b8 <argp_error@@Base+0xedc>
   1adb4:	bl	113fc <fprintf@plt>
   1adb8:	mov	r0, #63	; 0x3f
   1adbc:	str	fp, [r4, #8]
   1adc0:	add	sp, sp, #36	; 0x24
   1adc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1adc8:	mov	r2, #1
   1adcc:	mov	r3, r2
   1add0:	str	r2, [r4]
   1add4:	b	1ab9c <argp_error@@Base+0x9c0>
   1add8:	ldr	r3, [r4, #32]
   1addc:	cmp	r3, r2
   1ade0:	beq	1af58 <argp_error@@Base+0xd7c>
   1ade4:	cmp	fp, r3
   1ade8:	beq	1adfc <argp_error@@Base+0xc20>
   1adec:	mov	r1, r4
   1adf0:	mov	r0, r9
   1adf4:	bl	1a388 <argp_error@@Base+0x1ac>
   1adf8:	ldr	r3, [r4]
   1adfc:	cmp	r6, r3
   1ae00:	addgt	r1, r9, r3, lsl #2
   1ae04:	bgt	1ae1c <argp_error@@Base+0xc40>
   1ae08:	b	1ae38 <argp_error@@Base+0xc5c>
   1ae0c:	add	r3, r3, #1
   1ae10:	cmp	r6, r3
   1ae14:	str	r3, [r4]
   1ae18:	beq	1ae78 <argp_error@@Base+0xc9c>
   1ae1c:	ldr	r2, [r1], #4
   1ae20:	ldrb	r0, [r2]
   1ae24:	cmp	r0, #45	; 0x2d
   1ae28:	bne	1ae0c <argp_error@@Base+0xc30>
   1ae2c:	ldrb	r2, [r2, #1]
   1ae30:	cmp	r2, #0
   1ae34:	beq	1ae0c <argp_error@@Base+0xc30>
   1ae38:	mov	fp, r3
   1ae3c:	b	1ae7c <argp_error@@Base+0xca0>
   1ae40:	ldr	r3, [r4, #28]
   1ae44:	ldr	r6, [r4, #32]
   1ae48:	mvn	r0, #0
   1ae4c:	cmp	r6, r3
   1ae50:	strne	r3, [r4]
   1ae54:	b	1ad44 <argp_error@@Base+0xb68>
   1ae58:	ldr	r0, [pc, #604]	; 1b0bc <argp_error@@Base+0xee0>
   1ae5c:	bl	1136c <getenv@plt>
   1ae60:	ldr	r5, [r4, #20]
   1ae64:	cmp	r0, #0
   1ae68:	bne	1abe0 <argp_error@@Base+0xa04>
   1ae6c:	mov	r3, #1
   1ae70:	str	r3, [r4, #24]
   1ae74:	b	1abe8 <argp_error@@Base+0xa0c>
   1ae78:	mov	fp, r6
   1ae7c:	cmp	r6, fp
   1ae80:	str	fp, [r4, #32]
   1ae84:	bne	1acdc <argp_error@@Base+0xb00>
   1ae88:	b	1ae40 <argp_error@@Base+0xc64>
   1ae8c:	ldrb	r1, [r5, #1]
   1ae90:	cmp	r1, #0
   1ae94:	beq	1ad74 <argp_error@@Base+0xb98>
   1ae98:	cmp	sl, #0
   1ae9c:	beq	1aed0 <argp_error@@Base+0xcf4>
   1aea0:	cmp	r1, #45	; 0x2d
   1aea4:	beq	1b000 <argp_error@@Base+0xe24>
   1aea8:	ldr	r3, [sp, #76]	; 0x4c
   1aeac:	cmp	r3, #0
   1aeb0:	beq	1aed0 <argp_error@@Base+0xcf4>
   1aeb4:	ldrb	r3, [r5, #2]
   1aeb8:	cmp	r3, #0
   1aebc:	bne	1af6c <argp_error@@Base+0xd90>
   1aec0:	mov	r0, r7
   1aec4:	bl	113f0 <strchr@plt>
   1aec8:	cmp	r0, #0
   1aecc:	beq	1af6c <argp_error@@Base+0xd90>
   1aed0:	add	r5, r5, #1
   1aed4:	b	1ac10 <argp_error@@Base+0xa34>
   1aed8:	mov	r3, fp
   1aedc:	str	fp, [r4, #28]
   1aee0:	b	1ad30 <argp_error@@Base+0xb54>
   1aee4:	adds	ip, sl, #0
   1aee8:	movne	ip, #1
   1aeec:	cmp	r1, #59	; 0x3b
   1aef0:	movne	ip, #0
   1aef4:	cmp	ip, #0
   1aef8:	beq	1ac6c <argp_error@@Base+0xa90>
   1aefc:	ldrb	r2, [r5, #1]
   1af00:	cmp	r2, #0
   1af04:	bne	1af18 <argp_error@@Base+0xd3c>
   1af08:	ldr	r3, [r4]
   1af0c:	cmp	r6, r3
   1af10:	ldrne	r3, [r9, r3, lsl #2]
   1af14:	beq	1b05c <argp_error@@Base+0xe80>
   1af18:	str	r3, [r4, #20]
   1af1c:	ldr	lr, [pc, #412]	; 1b0c0 <argp_error@@Base+0xee4>
   1af20:	ldr	r3, [sp, #72]	; 0x48
   1af24:	mov	ip, #0
   1af28:	str	r3, [sp]
   1af2c:	str	r8, [sp, #12]
   1af30:	str	r4, [sp, #8]
   1af34:	str	lr, [sp, #16]
   1af38:	mov	r3, sl
   1af3c:	str	ip, [r4, #12]
   1af40:	mov	r2, r7
   1af44:	mov	r1, r9
   1af48:	mov	r0, r6
   1af4c:	str	ip, [sp, #4]
   1af50:	bl	1a444 <argp_error@@Base+0x268>
   1af54:	b	1ad90 <argp_error@@Base+0xbb4>
   1af58:	cmp	fp, r2
   1af5c:	strne	fp, [r4, #28]
   1af60:	movne	r3, fp
   1af64:	moveq	r3, r2
   1af68:	b	1adfc <argp_error@@Base+0xc20>
   1af6c:	ldr	r2, [sp, #76]	; 0x4c
   1af70:	add	r5, r5, #1
   1af74:	str	r5, [r4, #20]
   1af78:	ldr	r3, [pc, #324]	; 1b0c4 <argp_error@@Base+0xee8>
   1af7c:	str	r2, [sp, #4]
   1af80:	ldr	r2, [sp, #72]	; 0x48
   1af84:	str	r3, [sp, #16]
   1af88:	str	r2, [sp]
   1af8c:	str	r8, [sp, #12]
   1af90:	str	r4, [sp, #8]
   1af94:	mov	r3, sl
   1af98:	mov	r2, r7
   1af9c:	mov	r1, r9
   1afa0:	mov	r0, r6
   1afa4:	bl	1a444 <argp_error@@Base+0x268>
   1afa8:	cmn	r0, #1
   1afac:	bne	1ad90 <argp_error@@Base+0xbb4>
   1afb0:	ldr	r3, [r4]
   1afb4:	ldr	r5, [r9, r3, lsl #2]
   1afb8:	b	1aed0 <argp_error@@Base+0xcf4>
   1afbc:	ldr	r3, [r4]
   1afc0:	cmp	r6, r3
   1afc4:	beq	1b03c <argp_error@@Base+0xe60>
   1afc8:	ldr	r2, [r9, r3, lsl #2]
   1afcc:	add	r3, r3, #1
   1afd0:	str	r2, [r4, #12]
   1afd4:	str	r3, [r4]
   1afd8:	b	1ac9c <argp_error@@Base+0xac0>
   1afdc:	cmp	r2, #0
   1afe0:	moveq	r3, r2
   1afe4:	ldrne	r2, [r4]
   1afe8:	str	r3, [r4, #12]
   1afec:	addne	r2, r2, #1
   1aff0:	strne	r2, [r4]
   1aff4:	mov	r2, #0
   1aff8:	str	r2, [r4, #20]
   1affc:	b	1ad90 <argp_error@@Base+0xbb4>
   1b000:	add	r5, r5, #2
   1b004:	str	r5, [r4, #20]
   1b008:	str	r3, [sp, #16]
   1b00c:	ldr	r3, [sp, #76]	; 0x4c
   1b010:	str	r8, [sp, #12]
   1b014:	str	r3, [sp, #4]
   1b018:	ldr	r3, [sp, #72]	; 0x48
   1b01c:	str	r4, [sp, #8]
   1b020:	str	r3, [sp]
   1b024:	mov	r2, r7
   1b028:	mov	r3, sl
   1b02c:	mov	r1, r9
   1b030:	mov	r0, r6
   1b034:	bl	1a444 <argp_error@@Base+0x268>
   1b038:	b	1ad90 <argp_error@@Base+0xbb4>
   1b03c:	cmp	r8, #0
   1b040:	bne	1b094 <argp_error@@Base+0xeb8>
   1b044:	str	fp, [r4, #8]
   1b048:	ldrb	r0, [r7]
   1b04c:	cmp	r0, #58	; 0x3a
   1b050:	movne	r0, #63	; 0x3f
   1b054:	moveq	r0, #58	; 0x3a
   1b058:	b	1ac9c <argp_error@@Base+0xac0>
   1b05c:	cmp	r8, #0
   1b060:	beq	1b07c <argp_error@@Base+0xea0>
   1b064:	ldr	r1, [pc, #72]	; 1b0b4 <argp_error@@Base+0xed8>
   1b068:	ldr	r2, [r9]
   1b06c:	mov	r3, fp
   1b070:	ldr	r0, [r1]
   1b074:	ldr	r1, [pc, #76]	; 1b0c8 <argp_error@@Base+0xeec>
   1b078:	bl	113fc <fprintf@plt>
   1b07c:	str	fp, [r4, #8]
   1b080:	ldrb	r0, [r7]
   1b084:	cmp	r0, #58	; 0x3a
   1b088:	movne	r0, #63	; 0x3f
   1b08c:	moveq	r0, #58	; 0x3a
   1b090:	b	1ad90 <argp_error@@Base+0xbb4>
   1b094:	ldr	r1, [pc, #24]	; 1b0b4 <argp_error@@Base+0xed8>
   1b098:	ldr	r2, [r9]
   1b09c:	mov	r3, fp
   1b0a0:	ldr	r0, [r1]
   1b0a4:	ldr	r1, [pc, #28]	; 1b0c8 <argp_error@@Base+0xeec>
   1b0a8:	bl	113fc <fprintf@plt>
   1b0ac:	b	1b044 <argp_error@@Base+0xe68>
   1b0b0:	andeq	ip, r1, r4, lsr #28
   1b0b4:	strdeq	lr, [r2], -r0
   1b0b8:	andeq	sp, r1, r8, ror #14
   1b0bc:	andeq	sp, r1, r4, asr r7
   1b0c0:			; <UNDEFINED> instruction: 0x0001d7b0
   1b0c4:	andeq	sp, r1, r4, ror #14
   1b0c8:	andeq	sp, r1, r4, lsl #15
   1b0cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b0d0:	sub	sp, sp, #44	; 0x2c
   1b0d4:	ldr	r7, [pc, #1572]	; 1b700 <argp_error@@Base+0x1524>
   1b0d8:	ldr	r4, [pc, #1572]	; 1b704 <argp_error@@Base+0x1528>
   1b0dc:	subs	r6, r0, #0
   1b0e0:	ldm	r7, {r5, sl}
   1b0e4:	str	r1, [sp, #32]
   1b0e8:	str	r3, [sp, #36]	; 0x24
   1b0ec:	stm	r4, {r5, sl}
   1b0f0:	ble	1b29c <argp_error@@Base+0x10c0>
   1b0f4:	mov	r3, #0
   1b0f8:	cmp	r5, #0
   1b0fc:	mov	fp, r2
   1b100:	str	r3, [r4, #12]
   1b104:	beq	1b358 <argp_error@@Base+0x117c>
   1b108:	ldr	r3, [r4, #16]
   1b10c:	cmp	r3, #0
   1b110:	bne	1b2b4 <argp_error@@Base+0x10d8>
   1b114:	mov	r3, #0
   1b118:	str	r5, [r4, #32]
   1b11c:	str	r5, [r4, #28]
   1b120:	str	r3, [r4, #20]
   1b124:	ldrb	r2, [fp]
   1b128:	cmp	r2, #45	; 0x2d
   1b12c:	beq	1b408 <argp_error@@Base+0x122c>
   1b130:	cmp	r2, #43	; 0x2b
   1b134:	streq	r3, [r4, #24]
   1b138:	addeq	fp, fp, #1
   1b13c:	moveq	r5, r3
   1b140:	beq	1b15c <argp_error@@Base+0xf80>
   1b144:	ldr	r2, [sp, #88]	; 0x58
   1b148:	cmp	r2, #0
   1b14c:	movne	r5, r3
   1b150:	beq	1b3e8 <argp_error@@Base+0x120c>
   1b154:	mov	r3, #0
   1b158:	str	r3, [r4, #24]
   1b15c:	mov	r3, #1
   1b160:	str	r3, [r4, #16]
   1b164:	ldrb	r3, [fp]
   1b168:	cmp	r3, #58	; 0x3a
   1b16c:	moveq	sl, #0
   1b170:	cmp	r5, #0
   1b174:	beq	1b1f8 <argp_error@@Base+0x101c>
   1b178:	ldrb	r3, [r5]
   1b17c:	cmp	r3, #0
   1b180:	beq	1b1f8 <argp_error@@Base+0x101c>
   1b184:	add	r9, r5, #1
   1b188:	str	r9, [r4, #20]
   1b18c:	ldrb	r8, [r5]
   1b190:	mov	r0, fp
   1b194:	mov	r1, r8
   1b198:	bl	113f0 <strchr@plt>
   1b19c:	ldrb	r3, [r5, #1]
   1b1a0:	str	r8, [sp, #28]
   1b1a4:	cmp	r3, #0
   1b1a8:	ldreq	r3, [r4]
   1b1ac:	addeq	r3, r3, #1
   1b1b0:	streq	r3, [r4]
   1b1b4:	sub	r3, r8, #58	; 0x3a
   1b1b8:	cmp	r0, #0
   1b1bc:	cmpne	r3, #1
   1b1c0:	bls	1b31c <argp_error@@Base+0x1140>
   1b1c4:	ldrb	r3, [r0]
   1b1c8:	cmp	r3, #87	; 0x57
   1b1cc:	ldrb	r3, [r0, #1]
   1b1d0:	beq	1b490 <argp_error@@Base+0x12b4>
   1b1d4:	cmp	r3, #58	; 0x3a
   1b1d8:	beq	1b534 <argp_error@@Base+0x1358>
   1b1dc:	ldr	r3, [r4, #8]
   1b1e0:	mov	r0, r8
   1b1e4:	ldr	r9, [r4, #12]
   1b1e8:	ldr	r5, [r4]
   1b1ec:	str	r3, [sp, #28]
   1b1f0:	mov	r2, r3
   1b1f4:	b	1b304 <argp_error@@Base+0x1128>
   1b1f8:	ldr	r5, [r4]
   1b1fc:	ldr	r8, [r4, #32]
   1b200:	ldr	r3, [r4, #28]
   1b204:	cmp	r8, r5
   1b208:	ldr	r2, [r4, #24]
   1b20c:	movgt	r8, r5
   1b210:	strgt	r5, [r4, #32]
   1b214:	cmp	r5, r3
   1b218:	movlt	r3, r5
   1b21c:	strlt	r5, [r4, #28]
   1b220:	cmp	r2, #1
   1b224:	beq	1b368 <argp_error@@Base+0x118c>
   1b228:	cmp	r6, r5
   1b22c:	beq	1b3d0 <argp_error@@Base+0x11f4>
   1b230:	ldr	r3, [sp, #32]
   1b234:	ldr	r9, [r3, r5, lsl #2]
   1b238:	ldr	r3, [pc, #1224]	; 1b708 <argp_error@@Base+0x152c>
   1b23c:	mov	r0, r9
   1b240:	mov	r1, r3
   1b244:	str	r3, [sp, #28]
   1b248:	bl	11240 <strcmp@plt>
   1b24c:	ldr	r3, [sp, #28]
   1b250:	cmp	r0, #0
   1b254:	bne	1b2d0 <argp_error@@Base+0x10f4>
   1b258:	add	r3, r5, #1
   1b25c:	ldr	r5, [r4, #28]
   1b260:	str	r3, [r4]
   1b264:	cmp	r5, r8
   1b268:	beq	1b484 <argp_error@@Base+0x12a8>
   1b26c:	cmp	r3, r8
   1b270:	beq	1b284 <argp_error@@Base+0x10a8>
   1b274:	ldr	r0, [sp, #32]
   1b278:	ldr	r1, [pc, #1156]	; 1b704 <argp_error@@Base+0x1528>
   1b27c:	bl	1a388 <argp_error@@Base+0x1ac>
   1b280:	ldr	r5, [r4, #28]
   1b284:	mov	r8, r6
   1b288:	cmp	r8, r5
   1b28c:	str	r6, [r4, #32]
   1b290:	str	r6, [r4]
   1b294:	moveq	r5, r6
   1b298:	bne	1b3e0 <argp_error@@Base+0x1204>
   1b29c:	ldr	r3, [r4, #8]
   1b2a0:	ldr	r9, [r4, #12]
   1b2a4:	str	r3, [sp, #28]
   1b2a8:	mvn	r0, #0
   1b2ac:	mov	r2, r3
   1b2b0:	b	1b304 <argp_error@@Base+0x1128>
   1b2b4:	ldrb	r3, [r2]
   1b2b8:	ldr	r5, [r4, #20]
   1b2bc:	sub	r2, r3, #43	; 0x2b
   1b2c0:	tst	r2, #253	; 0xfd
   1b2c4:	ldrbeq	r3, [fp, #1]
   1b2c8:	addeq	fp, fp, #1
   1b2cc:	b	1b168 <argp_error@@Base+0xf8c>
   1b2d0:	ldrb	r2, [r9]
   1b2d4:	cmp	r2, #45	; 0x2d
   1b2d8:	beq	1b434 <argp_error@@Base+0x1258>
   1b2dc:	ldr	r3, [r4, #24]
   1b2e0:	cmp	r3, #0
   1b2e4:	beq	1b29c <argp_error@@Base+0x10c0>
   1b2e8:	ldr	r3, [r4, #8]
   1b2ec:	mov	r0, #1
   1b2f0:	mov	r2, r3
   1b2f4:	add	r5, r5, #1
   1b2f8:	str	r5, [r4]
   1b2fc:	str	r9, [r4, #12]
   1b300:	str	r3, [sp, #28]
   1b304:	ldr	r3, [pc, #1024]	; 1b70c <argp_error@@Base+0x1530>
   1b308:	str	r5, [r7]
   1b30c:	str	r2, [r7, #8]
   1b310:	str	r9, [r3]
   1b314:	add	sp, sp, #44	; 0x2c
   1b318:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b31c:	cmp	sl, #0
   1b320:	beq	1b340 <argp_error@@Base+0x1164>
   1b324:	ldr	r1, [pc, #996]	; 1b710 <argp_error@@Base+0x1534>
   1b328:	ldr	r3, [sp, #32]
   1b32c:	ldr	r0, [r1]
   1b330:	ldr	r2, [r3]
   1b334:	ldr	r1, [pc, #984]	; 1b714 <argp_error@@Base+0x1538>
   1b338:	mov	r3, r8
   1b33c:	bl	113fc <fprintf@plt>
   1b340:	str	r8, [r4, #8]
   1b344:	ldr	r5, [r4]
   1b348:	ldr	r9, [r4, #12]
   1b34c:	mov	r0, #63	; 0x3f
   1b350:	ldr	r2, [sp, #28]
   1b354:	b	1b304 <argp_error@@Base+0x1128>
   1b358:	mov	r3, #1
   1b35c:	mov	r5, r3
   1b360:	str	r3, [r4]
   1b364:	b	1b114 <argp_error@@Base+0xf38>
   1b368:	cmp	r8, r3
   1b36c:	beq	1b524 <argp_error@@Base+0x1348>
   1b370:	cmp	r5, r8
   1b374:	beq	1b388 <argp_error@@Base+0x11ac>
   1b378:	ldr	r1, [pc, #900]	; 1b704 <argp_error@@Base+0x1528>
   1b37c:	ldr	r0, [sp, #32]
   1b380:	bl	1a388 <argp_error@@Base+0x1ac>
   1b384:	ldr	r8, [r4]
   1b388:	cmp	r6, r8
   1b38c:	ldrgt	r3, [sp, #32]
   1b390:	addgt	r2, r3, r8, lsl #2
   1b394:	bgt	1b3ac <argp_error@@Base+0x11d0>
   1b398:	b	1b3c8 <argp_error@@Base+0x11ec>
   1b39c:	add	r8, r8, #1
   1b3a0:	cmp	r6, r8
   1b3a4:	str	r8, [r4]
   1b3a8:	beq	1b41c <argp_error@@Base+0x1240>
   1b3ac:	ldr	r3, [r2], #4
   1b3b0:	ldrb	r1, [r3]
   1b3b4:	cmp	r1, #45	; 0x2d
   1b3b8:	bne	1b39c <argp_error@@Base+0x11c0>
   1b3bc:	ldrb	r3, [r3, #1]
   1b3c0:	cmp	r3, #0
   1b3c4:	beq	1b39c <argp_error@@Base+0x11c0>
   1b3c8:	mov	r5, r8
   1b3cc:	b	1b420 <argp_error@@Base+0x1244>
   1b3d0:	ldr	r5, [r4, #28]
   1b3d4:	cmp	r8, r5
   1b3d8:	moveq	r5, r6
   1b3dc:	beq	1b29c <argp_error@@Base+0x10c0>
   1b3e0:	str	r5, [r4]
   1b3e4:	b	1b29c <argp_error@@Base+0x10c0>
   1b3e8:	ldr	r0, [pc, #808]	; 1b718 <argp_error@@Base+0x153c>
   1b3ec:	bl	1136c <getenv@plt>
   1b3f0:	ldr	r5, [r4, #20]
   1b3f4:	cmp	r0, #0
   1b3f8:	bne	1b154 <argp_error@@Base+0xf78>
   1b3fc:	mov	r3, #1
   1b400:	str	r3, [r4, #24]
   1b404:	b	1b15c <argp_error@@Base+0xf80>
   1b408:	mov	r2, #2
   1b40c:	add	fp, fp, #1
   1b410:	mov	r5, r3
   1b414:	str	r2, [r4, #24]
   1b418:	b	1b15c <argp_error@@Base+0xf80>
   1b41c:	mov	r5, r6
   1b420:	cmp	r6, r5
   1b424:	mov	r8, r5
   1b428:	str	r5, [r4, #32]
   1b42c:	bne	1b230 <argp_error@@Base+0x1054>
   1b430:	b	1b3d0 <argp_error@@Base+0x11f4>
   1b434:	ldrb	r1, [r9, #1]
   1b438:	cmp	r1, #0
   1b43c:	beq	1b2dc <argp_error@@Base+0x1100>
   1b440:	ldr	r2, [sp, #36]	; 0x24
   1b444:	cmp	r2, #0
   1b448:	beq	1b47c <argp_error@@Base+0x12a0>
   1b44c:	cmp	r1, #45	; 0x2d
   1b450:	beq	1b630 <argp_error@@Base+0x1454>
   1b454:	ldr	r3, [sp, #84]	; 0x54
   1b458:	cmp	r3, #0
   1b45c:	beq	1b47c <argp_error@@Base+0x12a0>
   1b460:	ldrb	r3, [r9, #2]
   1b464:	cmp	r3, #0
   1b468:	bne	1b578 <argp_error@@Base+0x139c>
   1b46c:	mov	r0, fp
   1b470:	bl	113f0 <strchr@plt>
   1b474:	cmp	r0, #0
   1b478:	beq	1b578 <argp_error@@Base+0x139c>
   1b47c:	add	r5, r9, #1
   1b480:	b	1b184 <argp_error@@Base+0xfa8>
   1b484:	mov	r5, r3
   1b488:	str	r3, [r4, #28]
   1b48c:	b	1b284 <argp_error@@Base+0x10a8>
   1b490:	ldr	r1, [sp, #36]	; 0x24
   1b494:	sub	r2, r3, #59	; 0x3b
   1b498:	cmp	r1, #0
   1b49c:	clz	r2, r2
   1b4a0:	lsr	r2, r2, #5
   1b4a4:	moveq	r2, #0
   1b4a8:	cmp	r2, #0
   1b4ac:	beq	1b1d4 <argp_error@@Base+0xff8>
   1b4b0:	ldrb	r3, [r5, #1]
   1b4b4:	cmp	r3, #0
   1b4b8:	bne	1b4d0 <argp_error@@Base+0x12f4>
   1b4bc:	ldr	r3, [r4]
   1b4c0:	cmp	r6, r3
   1b4c4:	beq	1b698 <argp_error@@Base+0x14bc>
   1b4c8:	ldr	r2, [sp, #32]
   1b4cc:	ldr	r9, [r2, r3, lsl #2]
   1b4d0:	ldr	r3, [sp, #80]	; 0x50
   1b4d4:	ldr	r1, [sp, #32]
   1b4d8:	str	r3, [sp]
   1b4dc:	ldr	r3, [sp, #36]	; 0x24
   1b4e0:	ldr	lr, [pc, #564]	; 1b71c <argp_error@@Base+0x1540>
   1b4e4:	mov	r2, fp
   1b4e8:	mov	r0, r6
   1b4ec:	mov	ip, #0
   1b4f0:	str	sl, [sp, #12]
   1b4f4:	str	r4, [sp, #8]
   1b4f8:	str	lr, [sp, #16]
   1b4fc:	str	ip, [sp, #4]
   1b500:	str	r9, [r4, #20]
   1b504:	str	ip, [r4, #12]
   1b508:	bl	1a444 <argp_error@@Base+0x268>
   1b50c:	ldr	r3, [r4, #8]
   1b510:	ldr	r5, [r4]
   1b514:	ldr	r9, [r4, #12]
   1b518:	str	r3, [sp, #28]
   1b51c:	mov	r2, r3
   1b520:	b	1b304 <argp_error@@Base+0x1128>
   1b524:	cmp	r5, r8
   1b528:	movne	r8, r5
   1b52c:	strne	r5, [r4, #28]
   1b530:	b	1b388 <argp_error@@Base+0x11ac>
   1b534:	ldrb	r3, [r0, #2]
   1b538:	cmp	r3, #58	; 0x3a
   1b53c:	ldrb	r3, [r5, #1]
   1b540:	beq	1b5f8 <argp_error@@Base+0x141c>
   1b544:	cmp	r3, #0
   1b548:	ldr	r5, [r4]
   1b54c:	beq	1b5cc <argp_error@@Base+0x13f0>
   1b550:	ldr	r3, [r4, #8]
   1b554:	mov	r0, r8
   1b558:	add	r5, r5, #1
   1b55c:	str	r9, [r4, #12]
   1b560:	str	r5, [r4]
   1b564:	str	r3, [sp, #28]
   1b568:	mov	r3, #0
   1b56c:	str	r3, [r4, #20]
   1b570:	ldr	r2, [sp, #28]
   1b574:	b	1b304 <argp_error@@Base+0x1128>
   1b578:	ldr	r2, [sp, #84]	; 0x54
   1b57c:	ldr	r3, [pc, #412]	; 1b720 <argp_error@@Base+0x1544>
   1b580:	str	r2, [sp, #4]
   1b584:	ldr	r2, [sp, #80]	; 0x50
   1b588:	str	r3, [sp, #16]
   1b58c:	str	r2, [sp]
   1b590:	add	r9, r9, #1
   1b594:	str	sl, [sp, #12]
   1b598:	str	r4, [sp, #8]
   1b59c:	ldr	r3, [sp, #36]	; 0x24
   1b5a0:	mov	r2, fp
   1b5a4:	ldr	r1, [sp, #32]
   1b5a8:	mov	r0, r6
   1b5ac:	str	r9, [r4, #20]
   1b5b0:	bl	1a444 <argp_error@@Base+0x268>
   1b5b4:	cmn	r0, #1
   1b5b8:	bne	1b50c <argp_error@@Base+0x1330>
   1b5bc:	ldr	r3, [r4]
   1b5c0:	ldr	r2, [sp, #32]
   1b5c4:	ldr	r9, [r2, r3, lsl #2]
   1b5c8:	b	1b47c <argp_error@@Base+0x12a0>
   1b5cc:	cmp	r6, r5
   1b5d0:	beq	1b668 <argp_error@@Base+0x148c>
   1b5d4:	ldr	r3, [r4, #8]
   1b5d8:	mov	r0, r8
   1b5dc:	str	r3, [sp, #28]
   1b5e0:	ldr	r3, [sp, #32]
   1b5e4:	ldr	r9, [r3, r5, lsl #2]
   1b5e8:	add	r5, r5, #1
   1b5ec:	str	r9, [r4, #12]
   1b5f0:	str	r5, [r4]
   1b5f4:	b	1b568 <argp_error@@Base+0x138c>
   1b5f8:	cmp	r3, #0
   1b5fc:	moveq	r9, r3
   1b600:	ldrne	r5, [r4]
   1b604:	mov	r3, #0
   1b608:	str	r3, [r4, #20]
   1b60c:	ldr	r3, [r4, #8]
   1b610:	addne	r5, r5, #1
   1b614:	ldreq	r5, [r4]
   1b618:	strne	r5, [r4]
   1b61c:	str	r9, [r4, #12]
   1b620:	mov	r0, r8
   1b624:	str	r3, [sp, #28]
   1b628:	mov	r2, r3
   1b62c:	b	1b304 <argp_error@@Base+0x1128>
   1b630:	str	r3, [sp, #16]
   1b634:	ldr	r3, [sp, #84]	; 0x54
   1b638:	add	r9, r9, #2
   1b63c:	str	r3, [sp, #4]
   1b640:	ldr	r3, [sp, #80]	; 0x50
   1b644:	str	sl, [sp, #12]
   1b648:	str	r3, [sp]
   1b64c:	str	r4, [sp, #8]
   1b650:	mov	r3, r2
   1b654:	ldr	r1, [sp, #32]
   1b658:	mov	r2, fp
   1b65c:	mov	r0, r6
   1b660:	str	r9, [r4, #20]
   1b664:	b	1b508 <argp_error@@Base+0x132c>
   1b668:	cmp	sl, #0
   1b66c:	bne	1b6e0 <argp_error@@Base+0x1504>
   1b670:	str	r8, [r4, #8]
   1b674:	ldrb	r8, [fp]
   1b678:	cmp	r8, #58	; 0x3a
   1b67c:	moveq	r0, r8
   1b680:	ldreq	r5, [r4]
   1b684:	ldreq	r9, [r4, #12]
   1b688:	ldrne	r5, [r4]
   1b68c:	ldrne	r9, [r4, #12]
   1b690:	movne	r0, #63	; 0x3f
   1b694:	b	1b568 <argp_error@@Base+0x138c>
   1b698:	cmp	sl, #0
   1b69c:	beq	1b6bc <argp_error@@Base+0x14e0>
   1b6a0:	ldr	r1, [pc, #104]	; 1b710 <argp_error@@Base+0x1534>
   1b6a4:	ldr	r3, [sp, #32]
   1b6a8:	ldr	r0, [r1]
   1b6ac:	ldr	r2, [r3]
   1b6b0:	ldr	r1, [pc, #108]	; 1b724 <argp_error@@Base+0x1548>
   1b6b4:	mov	r3, r8
   1b6b8:	bl	113fc <fprintf@plt>
   1b6bc:	str	r8, [r4, #8]
   1b6c0:	ldrb	r8, [fp]
   1b6c4:	ldr	r5, [r4]
   1b6c8:	ldr	r9, [r4, #12]
   1b6cc:	cmp	r8, #58	; 0x3a
   1b6d0:	movne	r0, #63	; 0x3f
   1b6d4:	moveq	r0, #58	; 0x3a
   1b6d8:	ldr	r2, [sp, #28]
   1b6dc:	b	1b304 <argp_error@@Base+0x1128>
   1b6e0:	ldr	r3, [sp, #32]
   1b6e4:	ldr	r1, [pc, #36]	; 1b710 <argp_error@@Base+0x1534>
   1b6e8:	ldr	r2, [r3]
   1b6ec:	ldr	r0, [r1]
   1b6f0:	mov	r3, r8
   1b6f4:	ldr	r1, [pc, #40]	; 1b724 <argp_error@@Base+0x1548>
   1b6f8:	bl	113fc <fprintf@plt>
   1b6fc:	b	1b670 <argp_error@@Base+0x1494>
   1b700:	ldrdeq	lr, [r2], -r4
   1b704:	andeq	lr, r2, r4, lsl #25
   1b708:	andeq	ip, r1, r4, lsr #28
   1b70c:	andeq	pc, r2, r0, asr r2	; <UNPREDICTABLE>
   1b710:	strdeq	lr, [r2], -r0
   1b714:	andeq	sp, r1, r8, ror #14
   1b718:	andeq	sp, r1, r4, asr r7
   1b71c:			; <UNDEFINED> instruction: 0x0001d7b0
   1b720:	andeq	sp, r1, r4, ror #14
   1b724:	andeq	sp, r1, r4, lsl #15
   1b728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b72c:	sub	sp, sp, #20
   1b730:	ldr	r7, [pc, #1052]	; 1bb54 <argp_error@@Base+0x1978>
   1b734:	ldr	r4, [pc, #1052]	; 1bb58 <argp_error@@Base+0x197c>
   1b738:	subs	r6, r0, #0
   1b73c:	ldr	r5, [r7]
   1b740:	ldr	r3, [r7, #4]
   1b744:	str	r1, [sp, #4]
   1b748:	str	r5, [r4]
   1b74c:	str	r3, [r4, #4]
   1b750:	ble	1ba28 <argp_error@@Base+0x184c>
   1b754:	mov	sl, r2
   1b758:	cmp	r5, #0
   1b75c:	mov	r2, #0
   1b760:	str	r2, [r4, #12]
   1b764:	beq	1b810 <argp_error@@Base+0x1634>
   1b768:	ldr	r2, [r4, #16]
   1b76c:	cmp	r2, #0
   1b770:	beq	1b81c <argp_error@@Base+0x1640>
   1b774:	ldrb	r2, [sl]
   1b778:	sub	r1, r2, #43	; 0x2b
   1b77c:	tst	r1, #253	; 0xfd
   1b780:	ldrbeq	r2, [sl, #1]
   1b784:	addeq	sl, sl, #1
   1b788:	cmp	r2, #58	; 0x3a
   1b78c:	ldr	r2, [r4, #20]
   1b790:	moveq	r3, #0
   1b794:	cmp	r2, #0
   1b798:	beq	1b870 <argp_error@@Base+0x1694>
   1b79c:	ldrb	r1, [r2]
   1b7a0:	cmp	r1, #0
   1b7a4:	beq	1b870 <argp_error@@Base+0x1694>
   1b7a8:	add	r9, r2, #1
   1b7ac:	str	r9, [r4, #20]
   1b7b0:	ldrb	r8, [r2]
   1b7b4:	mov	r0, sl
   1b7b8:	str	r3, [sp, #12]
   1b7bc:	mov	r1, r8
   1b7c0:	str	r2, [sp, #8]
   1b7c4:	bl	113f0 <strchr@plt>
   1b7c8:	ldr	r2, [sp, #8]
   1b7cc:	mov	fp, r8
   1b7d0:	ldr	r3, [sp, #12]
   1b7d4:	ldrb	r1, [r2, #1]
   1b7d8:	cmp	r1, #0
   1b7dc:	addeq	r5, r5, #1
   1b7e0:	sub	r1, r8, #58	; 0x3a
   1b7e4:	streq	r5, [r4]
   1b7e8:	cmp	r0, #0
   1b7ec:	cmpne	r1, #1
   1b7f0:	bls	1b95c <argp_error@@Base+0x1780>
   1b7f4:	ldrb	r1, [r0, #1]
   1b7f8:	cmp	r1, #58	; 0x3a
   1b7fc:	beq	1ba68 <argp_error@@Base+0x188c>
   1b800:	mov	r0, r8
   1b804:	ldr	r9, [r4, #12]
   1b808:	ldr	fp, [r4, #8]
   1b80c:	b	1b944 <argp_error@@Base+0x1768>
   1b810:	mov	r2, #1
   1b814:	mov	r5, r2
   1b818:	str	r2, [r4]
   1b81c:	mov	r2, #0
   1b820:	str	r5, [r4, #32]
   1b824:	str	r5, [r4, #28]
   1b828:	str	r2, [r4, #20]
   1b82c:	ldrb	r1, [sl]
   1b830:	cmp	r1, #45	; 0x2d
   1b834:	moveq	r1, #2
   1b838:	addeq	sl, sl, #1
   1b83c:	streq	r1, [r4, #24]
   1b840:	beq	1b85c <argp_error@@Base+0x1680>
   1b844:	cmp	r1, #43	; 0x2b
   1b848:	addeq	sl, sl, #1
   1b84c:	moveq	r1, r2
   1b850:	movne	r1, r2
   1b854:	streq	r2, [r4, #24]
   1b858:	strne	r2, [r4, #24]
   1b85c:	mov	r2, #1
   1b860:	str	r2, [r4, #16]
   1b864:	ldrb	r2, [sl]
   1b868:	cmp	r2, #58	; 0x3a
   1b86c:	beq	1b994 <argp_error@@Base+0x17b8>
   1b870:	add	r1, r4, #24
   1b874:	ldm	r1, {r1, r2, r8}
   1b878:	cmp	r8, r5
   1b87c:	movgt	r8, r5
   1b880:	strgt	r5, [r4, #32]
   1b884:	cmp	r5, r2
   1b888:	movlt	r2, r5
   1b88c:	strlt	r5, [r4, #28]
   1b890:	cmp	r1, #1
   1b894:	beq	1b9a8 <argp_error@@Base+0x17cc>
   1b898:	cmp	r6, r5
   1b89c:	str	r3, [sp, #8]
   1b8a0:	beq	1ba18 <argp_error@@Base+0x183c>
   1b8a4:	ldr	fp, [sp, #4]
   1b8a8:	ldr	r1, [pc, #684]	; 1bb5c <argp_error@@Base+0x1980>
   1b8ac:	ldr	r9, [fp, r5, lsl #2]
   1b8b0:	mov	r0, r9
   1b8b4:	bl	11240 <strcmp@plt>
   1b8b8:	ldr	r3, [sp, #8]
   1b8bc:	cmp	r0, #0
   1b8c0:	bne	1b918 <argp_error@@Base+0x173c>
   1b8c4:	add	r3, r5, #1
   1b8c8:	ldr	r5, [r4, #28]
   1b8cc:	str	r3, [r4]
   1b8d0:	cmp	r5, r8
   1b8d4:	beq	1ba5c <argp_error@@Base+0x1880>
   1b8d8:	cmp	r3, r8
   1b8dc:	beq	1b8f0 <argp_error@@Base+0x1714>
   1b8e0:	mov	r0, fp
   1b8e4:	ldr	r1, [pc, #620]	; 1bb58 <argp_error@@Base+0x197c>
   1b8e8:	bl	1a388 <argp_error@@Base+0x1ac>
   1b8ec:	ldr	r5, [r4, #28]
   1b8f0:	mov	r8, r6
   1b8f4:	cmp	r8, r5
   1b8f8:	str	r6, [r4, #32]
   1b8fc:	str	r6, [r4]
   1b900:	beq	1ba24 <argp_error@@Base+0x1848>
   1b904:	str	r5, [r4]
   1b908:	ldr	r9, [r4, #12]
   1b90c:	ldr	fp, [r4, #8]
   1b910:	mvn	r0, #0
   1b914:	b	1b944 <argp_error@@Base+0x1768>
   1b918:	ldrb	r2, [r9]
   1b91c:	cmp	r2, #45	; 0x2d
   1b920:	beq	1ba48 <argp_error@@Base+0x186c>
   1b924:	ldr	r3, [r4, #24]
   1b928:	cmp	r3, #0
   1b92c:	beq	1ba28 <argp_error@@Base+0x184c>
   1b930:	ldr	fp, [r4, #8]
   1b934:	mov	r0, #1
   1b938:	add	r5, r5, #1
   1b93c:	str	r5, [r4]
   1b940:	str	r9, [r4, #12]
   1b944:	ldr	r3, [pc, #532]	; 1bb60 <argp_error@@Base+0x1984>
   1b948:	str	r5, [r7]
   1b94c:	str	fp, [r7, #8]
   1b950:	str	r9, [r3]
   1b954:	add	sp, sp, #20
   1b958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b95c:	cmp	r3, #0
   1b960:	beq	1b984 <argp_error@@Base+0x17a8>
   1b964:	ldr	r3, [sp, #4]
   1b968:	ldr	r1, [pc, #500]	; 1bb64 <argp_error@@Base+0x1988>
   1b96c:	ldr	r2, [r3]
   1b970:	ldr	r0, [r1]
   1b974:	mov	r3, r8
   1b978:	ldr	r1, [pc, #488]	; 1bb68 <argp_error@@Base+0x198c>
   1b97c:	bl	113fc <fprintf@plt>
   1b980:	ldr	r5, [r4]
   1b984:	str	r8, [r4, #8]
   1b988:	ldr	r9, [r4, #12]
   1b98c:	mov	r0, #63	; 0x3f
   1b990:	b	1b944 <argp_error@@Base+0x1768>
   1b994:	cmp	r1, #1
   1b998:	mov	r8, r5
   1b99c:	mov	r2, r5
   1b9a0:	mov	r3, #0
   1b9a4:	bne	1b898 <argp_error@@Base+0x16bc>
   1b9a8:	cmp	r2, r8
   1b9ac:	beq	1baa0 <argp_error@@Base+0x18c4>
   1b9b0:	cmp	r5, r8
   1b9b4:	beq	1b9d0 <argp_error@@Base+0x17f4>
   1b9b8:	ldr	r1, [pc, #408]	; 1bb58 <argp_error@@Base+0x197c>
   1b9bc:	ldr	r0, [sp, #4]
   1b9c0:	str	r3, [sp, #8]
   1b9c4:	bl	1a388 <argp_error@@Base+0x1ac>
   1b9c8:	ldr	r8, [r4]
   1b9cc:	ldr	r3, [sp, #8]
   1b9d0:	cmp	r6, r8
   1b9d4:	ldrgt	r2, [sp, #4]
   1b9d8:	addgt	r1, r2, r8, lsl #2
   1b9dc:	bgt	1b9f4 <argp_error@@Base+0x1818>
   1b9e0:	b	1ba10 <argp_error@@Base+0x1834>
   1b9e4:	add	r8, r8, #1
   1b9e8:	cmp	r6, r8
   1b9ec:	str	r8, [r4]
   1b9f0:	beq	1ba38 <argp_error@@Base+0x185c>
   1b9f4:	ldr	r2, [r1], #4
   1b9f8:	ldrb	r0, [r2]
   1b9fc:	cmp	r0, #45	; 0x2d
   1ba00:	bne	1b9e4 <argp_error@@Base+0x1808>
   1ba04:	ldrb	r2, [r2, #1]
   1ba08:	cmp	r2, #0
   1ba0c:	beq	1b9e4 <argp_error@@Base+0x1808>
   1ba10:	mov	r5, r8
   1ba14:	b	1ba3c <argp_error@@Base+0x1860>
   1ba18:	ldr	r5, [r4, #28]
   1ba1c:	cmp	r8, r5
   1ba20:	bne	1b904 <argp_error@@Base+0x1728>
   1ba24:	mov	r5, r6
   1ba28:	ldr	r9, [r4, #12]
   1ba2c:	ldr	fp, [r4, #8]
   1ba30:	mvn	r0, #0
   1ba34:	b	1b944 <argp_error@@Base+0x1768>
   1ba38:	mov	r5, r6
   1ba3c:	mov	r8, r5
   1ba40:	str	r5, [r4, #32]
   1ba44:	b	1b898 <argp_error@@Base+0x16bc>
   1ba48:	ldrb	r2, [r9, #1]
   1ba4c:	cmp	r2, #0
   1ba50:	beq	1b924 <argp_error@@Base+0x1748>
   1ba54:	add	r2, r9, #1
   1ba58:	b	1b7a8 <argp_error@@Base+0x15cc>
   1ba5c:	mov	r5, r3
   1ba60:	str	r3, [r4, #28]
   1ba64:	b	1b8f0 <argp_error@@Base+0x1714>
   1ba68:	ldrb	r1, [r0, #2]
   1ba6c:	cmp	r1, #58	; 0x3a
   1ba70:	beq	1badc <argp_error@@Base+0x1900>
   1ba74:	ldrb	r2, [r2, #1]
   1ba78:	cmp	r2, #0
   1ba7c:	beq	1bab0 <argp_error@@Base+0x18d4>
   1ba80:	ldr	fp, [r4, #8]
   1ba84:	mov	r0, r8
   1ba88:	add	r5, r5, #1
   1ba8c:	str	r5, [r4]
   1ba90:	str	r9, [r4, #12]
   1ba94:	mov	r3, #0
   1ba98:	str	r3, [r4, #20]
   1ba9c:	b	1b944 <argp_error@@Base+0x1768>
   1baa0:	cmp	r5, r8
   1baa4:	movne	r8, r5
   1baa8:	strne	r5, [r4, #28]
   1baac:	b	1b9d0 <argp_error@@Base+0x17f4>
   1bab0:	cmp	r6, r5
   1bab4:	beq	1bb08 <argp_error@@Base+0x192c>
   1bab8:	ldr	r2, [sp, #4]
   1babc:	add	r3, r5, #1
   1bac0:	ldr	fp, [r4, #8]
   1bac4:	ldr	r9, [r2, r5, lsl #2]
   1bac8:	mov	r0, r8
   1bacc:	mov	r5, r3
   1bad0:	str	r9, [r4, #12]
   1bad4:	str	r3, [r4]
   1bad8:	b	1ba94 <argp_error@@Base+0x18b8>
   1badc:	ldrb	r3, [r2, #1]
   1bae0:	mov	r0, r8
   1bae4:	ldr	fp, [r4, #8]
   1bae8:	cmp	r3, #0
   1baec:	moveq	r9, r3
   1baf0:	addne	r5, r5, #1
   1baf4:	mov	r3, #0
   1baf8:	strne	r5, [r4]
   1bafc:	str	r9, [r4, #12]
   1bb00:	str	r3, [r4, #20]
   1bb04:	b	1b944 <argp_error@@Base+0x1768>
   1bb08:	cmp	r3, #0
   1bb0c:	beq	1bb30 <argp_error@@Base+0x1954>
   1bb10:	ldr	r3, [sp, #4]
   1bb14:	ldr	r1, [pc, #72]	; 1bb64 <argp_error@@Base+0x1988>
   1bb18:	ldr	r2, [r3]
   1bb1c:	ldr	r0, [r1]
   1bb20:	mov	r3, r8
   1bb24:	ldr	r1, [pc, #64]	; 1bb6c <argp_error@@Base+0x1990>
   1bb28:	bl	113fc <fprintf@plt>
   1bb2c:	ldr	r6, [r4]
   1bb30:	str	r8, [r4, #8]
   1bb34:	ldrb	r8, [sl]
   1bb38:	mov	r5, r6
   1bb3c:	cmp	r8, #58	; 0x3a
   1bb40:	moveq	r0, r8
   1bb44:	ldreq	r9, [r4, #12]
   1bb48:	ldrne	r9, [r4, #12]
   1bb4c:	movne	r0, #63	; 0x3f
   1bb50:	b	1ba94 <argp_error@@Base+0x18b8>
   1bb54:	ldrdeq	lr, [r2], -r4
   1bb58:	andeq	lr, r2, r4, lsl #25
   1bb5c:	andeq	ip, r1, r4, lsr #28
   1bb60:	andeq	pc, r2, r0, asr r2	; <UNPREDICTABLE>
   1bb64:	strdeq	lr, [r2], -r0
   1bb68:	andeq	sp, r1, r8, ror #14
   1bb6c:	andeq	sp, r1, r4, lsl #15
   1bb70:	push	{r4, r5, r6, lr}
   1bb74:	subs	r4, r2, #0
   1bb78:	mov	r6, r0
   1bb7c:	mov	r5, r1
   1bb80:	beq	1bbac <argp_error@@Base+0x19d0>
   1bb84:	mov	r1, r4
   1bb88:	mvn	r0, #0
   1bb8c:	bl	1c42c <argp_error@@Base+0x2250>
   1bb90:	cmp	r0, r5
   1bb94:	bcs	1bbac <argp_error@@Base+0x19d0>
   1bb98:	bl	11408 <__errno_location@plt>
   1bb9c:	mov	r3, #12
   1bba0:	str	r3, [r0]
   1bba4:	mov	r0, #0
   1bba8:	pop	{r4, r5, r6, pc}
   1bbac:	mul	r1, r5, r4
   1bbb0:	mov	r0, r6
   1bbb4:	pop	{r4, r5, r6, lr}
   1bbb8:	b	15e3c <argp_parse@@Base+0x25bc>
   1bbbc:	push	{r4, r5, r6, r7, r8, lr}
   1bbc0:	mov	r8, r0
   1bbc4:	mov	r0, #36	; 0x24
   1bbc8:	mov	r7, r1
   1bbcc:	mov	r6, r2
   1bbd0:	mov	r5, r3
   1bbd4:	bl	15e10 <argp_parse@@Base+0x2590>
   1bbd8:	subs	r4, r0, #0
   1bbdc:	beq	1bc20 <argp_error@@Base+0x1a44>
   1bbe0:	mov	r0, #0
   1bbe4:	str	r5, [r4, #12]
   1bbe8:	str	r0, [r4, #20]
   1bbec:	str	r0, [r4, #16]
   1bbf0:	str	r8, [r4]
   1bbf4:	str	r7, [r4, #4]
   1bbf8:	str	r6, [r4, #8]
   1bbfc:	mov	r0, #200	; 0xc8
   1bc00:	bl	15e10 <argp_parse@@Base+0x2590>
   1bc04:	cmp	r0, #0
   1bc08:	addne	r3, r0, #200	; 0xc8
   1bc0c:	mov	r5, r0
   1bc10:	str	r0, [r4, #24]
   1bc14:	strne	r0, [r4, #28]
   1bc18:	strne	r3, [r4, #32]
   1bc1c:	beq	1bc28 <argp_error@@Base+0x1a4c>
   1bc20:	mov	r0, r4
   1bc24:	pop	{r4, r5, r6, r7, r8, pc}
   1bc28:	mov	r0, r4
   1bc2c:	bl	147fc <argp_parse@@Base+0xf7c>
   1bc30:	mov	r4, r5
   1bc34:	b	1bc20 <argp_error@@Base+0x1a44>
   1bc38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc3c:	mov	r7, r0
   1bc40:	ldr	r4, [r0, #24]
   1bc44:	ldr	r3, [r0, #16]
   1bc48:	ldr	r9, [r0, #28]
   1bc4c:	sub	sp, sp, #12
   1bc50:	add	r4, r4, r3
   1bc54:	mov	sl, #32
   1bc58:	cmp	r4, r9
   1bc5c:	bcs	1bd30 <argp_error@@Base+0x1b54>
   1bc60:	ldr	r8, [r7, #20]
   1bc64:	cmp	r8, #0
   1bc68:	bne	1bcd4 <argp_error@@Base+0x1af8>
   1bc6c:	ldr	r5, [r7, #4]
   1bc70:	cmp	r5, #0
   1bc74:	beq	1bfa4 <argp_error@@Base+0x1dc8>
   1bc78:	ldr	r2, [r7, #32]
   1bc7c:	add	r3, r9, r5
   1bc80:	cmp	r2, r3
   1bc84:	bls	1bc9c <argp_error@@Base+0x1ac0>
   1bc88:	b	1c0cc <argp_error@@Base+0x1ef0>
   1bc8c:	cmp	r5, r8
   1bc90:	str	r1, [r0, #20]
   1bc94:	strb	sl, [r3]
   1bc98:	beq	1bcc8 <argp_error@@Base+0x1aec>
   1bc9c:	ldr	r0, [r7]
   1bca0:	add	r8, r8, #1
   1bca4:	ldr	r3, [r0, #20]
   1bca8:	ldr	r2, [r0, #24]
   1bcac:	add	r1, r3, #1
   1bcb0:	cmp	r3, r2
   1bcb4:	bcc	1bc8c <argp_error@@Base+0x1ab0>
   1bcb8:	mov	r1, sl
   1bcbc:	bl	11480 <__overflow@plt>
   1bcc0:	cmp	r5, r8
   1bcc4:	bne	1bc9c <argp_error@@Base+0x1ac0>
   1bcc8:	ldr	r9, [r7, #28]
   1bccc:	mov	r8, r5
   1bcd0:	str	r5, [r7, #20]
   1bcd4:	sub	fp, r9, r4
   1bcd8:	mov	r2, fp
   1bcdc:	mov	r1, #10
   1bce0:	mov	r0, r4
   1bce4:	bl	11450 <memchr@plt>
   1bce8:	cmp	r8, #0
   1bcec:	movlt	r8, #0
   1bcf0:	movlt	r3, r8
   1bcf4:	mov	r5, r0
   1bcf8:	strlt	r3, [r7, #20]
   1bcfc:	cmp	r5, #0
   1bd00:	beq	1bfc4 <argp_error@@Base+0x1de8>
   1bd04:	sub	r2, r5, r4
   1bd08:	ldr	r3, [r7, #8]
   1bd0c:	add	r2, r2, r8
   1bd10:	cmp	r2, r3
   1bd14:	bge	1bd44 <argp_error@@Base+0x1b68>
   1bd18:	ldr	r9, [r7, #28]
   1bd1c:	add	r4, r5, #1
   1bd20:	mov	r3, #0
   1bd24:	cmp	r4, r9
   1bd28:	str	r3, [r7, #20]
   1bd2c:	bcc	1bc60 <argp_error@@Base+0x1a84>
   1bd30:	ldr	r3, [r7, #24]
   1bd34:	sub	r9, r9, r3
   1bd38:	str	r9, [r7, #16]
   1bd3c:	add	sp, sp, #12
   1bd40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bd44:	ldr	r2, [r7, #12]
   1bd48:	sub	r6, r3, #1
   1bd4c:	cmp	r2, #0
   1bd50:	str	r2, [sp, #4]
   1bd54:	blt	1c07c <argp_error@@Base+0x1ea0>
   1bd58:	add	r6, r6, #1
   1bd5c:	sub	r8, r6, r8
   1bd60:	adds	r8, r4, r8
   1bd64:	bcs	1bffc <argp_error@@Base+0x1e20>
   1bd68:	bl	113cc <__ctype_b_loc@plt>
   1bd6c:	mov	r3, r8
   1bd70:	ldr	r0, [r0]
   1bd74:	b	1bd80 <argp_error@@Base+0x1ba4>
   1bd78:	cmp	r3, r4
   1bd7c:	bcc	1c000 <argp_error@@Base+0x1e24>
   1bd80:	mov	r1, r3
   1bd84:	sub	r3, r3, #1
   1bd88:	ldrb	r2, [r1]
   1bd8c:	mov	r6, r3
   1bd90:	lsl	r2, r2, #1
   1bd94:	ldrh	r2, [r0, r2]
   1bd98:	tst	r2, #1
   1bd9c:	beq	1bd78 <argp_error@@Base+0x1b9c>
   1bda0:	add	r6, r1, #1
   1bda4:	cmp	r6, r4
   1bda8:	bls	1c014 <argp_error@@Base+0x1e38>
   1bdac:	cmp	r4, r1
   1bdb0:	bhi	1c00c <argp_error@@Base+0x1e30>
   1bdb4:	mov	r1, r3
   1bdb8:	sub	r8, r4, #1
   1bdbc:	b	1bdd8 <argp_error@@Base+0x1bfc>
   1bdc0:	ldrb	r3, [r1]
   1bdc4:	sub	r1, r1, #1
   1bdc8:	lsl	r3, r3, #1
   1bdcc:	ldrh	r3, [r0, r3]
   1bdd0:	tst	r3, #1
   1bdd4:	beq	1c104 <argp_error@@Base+0x1f28>
   1bdd8:	cmp	r8, r1
   1bddc:	mov	r2, r1
   1bde0:	bne	1bdc0 <argp_error@@Base+0x1be4>
   1bde4:	add	r8, r8, #1
   1bde8:	add	r3, fp, #1
   1bdec:	add	r3, r4, r3
   1bdf0:	cmp	r6, r3
   1bdf4:	beq	1bed4 <argp_error@@Base+0x1cf8>
   1bdf8:	add	r5, r8, #1
   1bdfc:	ldr	r3, [sp, #4]
   1be00:	sub	r1, r6, r5
   1be04:	cmp	r1, r3
   1be08:	bge	1bef0 <argp_error@@Base+0x1d14>
   1be0c:	cmp	r6, r9
   1be10:	bcs	1bee8 <argp_error@@Base+0x1d0c>
   1be14:	ldr	r3, [r7, #32]
   1be18:	ldr	r2, [sp, #4]
   1be1c:	sub	r3, r3, r9
   1be20:	add	r0, r2, #1
   1be24:	cmp	r3, r0
   1be28:	bgt	1c134 <argp_error@@Base+0x1f58>
   1be2c:	ldr	r0, [r7, #24]
   1be30:	cmp	r8, r0
   1be34:	bls	1be48 <argp_error@@Base+0x1c6c>
   1be38:	sub	r2, r8, r0
   1be3c:	ldr	r3, [r7]
   1be40:	mov	r1, #1
   1be44:	bl	112d0 <fwrite_unlocked@plt>
   1be48:	ldr	r0, [r7]
   1be4c:	ldr	r2, [r0, #24]
   1be50:	ldr	r3, [r0, #20]
   1be54:	cmp	r3, r2
   1be58:	addcc	r2, r3, #1
   1be5c:	strcc	r2, [r0, #20]
   1be60:	movcc	r2, #10
   1be64:	strbcc	r2, [r3]
   1be68:	bcs	1c174 <argp_error@@Base+0x1f98>
   1be6c:	ldr	r5, [r7, #24]
   1be70:	sub	r4, r4, r5
   1be74:	sub	r1, r6, r5
   1be78:	add	fp, fp, r4
   1be7c:	mov	r9, r1
   1be80:	mov	r2, r5
   1be84:	ldr	r3, [r7, #12]
   1be88:	cmp	r3, r1
   1be8c:	bgt	1bf0c <argp_error@@Base+0x1d30>
   1be90:	cmp	r3, #0
   1be94:	mov	r4, r5
   1be98:	ble	1beb0 <argp_error@@Base+0x1cd4>
   1be9c:	strb	sl, [r4], #1
   1bea0:	ldr	r3, [r7, #12]
   1bea4:	sub	r1, r4, r5
   1bea8:	cmp	r1, r3
   1beac:	blt	1be9c <argp_error@@Base+0x1cc0>
   1beb0:	cmp	r4, r6
   1beb4:	bcc	1bf88 <argp_error@@Base+0x1dac>
   1beb8:	sub	r9, fp, r9
   1bebc:	cmp	r3, #0
   1bec0:	add	r9, r4, r9
   1bec4:	mvneq	r3, #0
   1bec8:	str	r9, [r7, #28]
   1becc:	str	r3, [r7, #20]
   1bed0:	b	1bc58 <argp_error@@Base+0x1a7c>
   1bed4:	ldr	r3, [r7, #32]
   1bed8:	ldr	r2, [sp, #4]
   1bedc:	sub	r3, r3, r8
   1bee0:	cmp	r3, r2
   1bee4:	ble	1be0c <argp_error@@Base+0x1c30>
   1bee8:	add	r5, r8, #1
   1beec:	sub	r1, r6, r5
   1bef0:	mov	r3, #10
   1bef4:	strb	r3, [r8]
   1bef8:	ldr	r3, [r7, #12]
   1befc:	sub	r9, r6, r4
   1bf00:	cmp	r3, r1
   1bf04:	mov	r2, r4
   1bf08:	ble	1be90 <argp_error@@Base+0x1cb4>
   1bf0c:	add	r1, fp, #1
   1bf10:	add	r1, r2, r1
   1bf14:	cmp	r6, r1
   1bf18:	beq	1c120 <argp_error@@Base+0x1f44>
   1bf1c:	cmp	r3, #0
   1bf20:	ble	1bf7c <argp_error@@Base+0x1da0>
   1bf24:	mov	r4, #0
   1bf28:	mov	r8, r2
   1bf2c:	b	1bf48 <argp_error@@Base+0x1d6c>
   1bf30:	str	ip, [r0, #20]
   1bf34:	strb	sl, [r3]
   1bf38:	ldr	r3, [r7, #12]
   1bf3c:	add	r4, r4, #1
   1bf40:	cmp	r3, r4
   1bf44:	ble	1bf78 <argp_error@@Base+0x1d9c>
   1bf48:	ldr	r0, [r7]
   1bf4c:	ldr	r3, [r0, #20]
   1bf50:	ldr	r1, [r0, #24]
   1bf54:	add	ip, r3, #1
   1bf58:	cmp	r3, r1
   1bf5c:	bcc	1bf30 <argp_error@@Base+0x1d54>
   1bf60:	mov	r1, sl
   1bf64:	bl	11480 <__overflow@plt>
   1bf68:	ldr	r3, [r7, #12]
   1bf6c:	add	r4, r4, #1
   1bf70:	cmp	r3, r4
   1bf74:	bgt	1bf48 <argp_error@@Base+0x1d6c>
   1bf78:	mov	r2, r8
   1bf7c:	mov	r4, r5
   1bf80:	cmp	r4, r6
   1bf84:	bcs	1beb8 <argp_error@@Base+0x1cdc>
   1bf88:	add	r2, r2, fp
   1bf8c:	sub	r2, r2, r6
   1bf90:	mov	r1, r6
   1bf94:	mov	r0, r4
   1bf98:	bl	1127c <memmove@plt>
   1bf9c:	ldr	r3, [r7, #12]
   1bfa0:	b	1beb8 <argp_error@@Base+0x1cdc>
   1bfa4:	sub	fp, r9, r4
   1bfa8:	mov	r2, fp
   1bfac:	mov	r1, #10
   1bfb0:	mov	r0, r4
   1bfb4:	bl	11450 <memchr@plt>
   1bfb8:	mov	r5, r0
   1bfbc:	cmp	r5, #0
   1bfc0:	bne	1bd04 <argp_error@@Base+0x1b28>
   1bfc4:	ldr	r6, [r7, #8]
   1bfc8:	add	r3, fp, r8
   1bfcc:	cmp	r3, r6
   1bfd0:	bcc	1c198 <argp_error@@Base+0x1fbc>
   1bfd4:	ldr	r2, [r7, #12]
   1bfd8:	sub	r6, r6, #1
   1bfdc:	cmp	r2, #0
   1bfe0:	str	r2, [sp, #4]
   1bfe4:	blt	1c184 <argp_error@@Base+0x1fa8>
   1bfe8:	add	r6, r6, #1
   1bfec:	sub	r8, r6, r8
   1bff0:	adds	r8, r4, r8
   1bff4:	mov	r5, r9
   1bff8:	bcc	1bd68 <argp_error@@Base+0x1b8c>
   1bffc:	mov	r6, r8
   1c000:	add	r6, r6, #1
   1c004:	cmp	r4, r6
   1c008:	bcs	1c014 <argp_error@@Base+0x1e38>
   1c00c:	mov	r8, r6
   1c010:	b	1bde8 <argp_error@@Base+0x1c0c>
   1c014:	cmp	r8, r5
   1c018:	bcs	1c050 <argp_error@@Base+0x1e74>
   1c01c:	add	r6, r8, #1
   1c020:	b	1c044 <argp_error@@Base+0x1e68>
   1c024:	bl	113cc <__ctype_b_loc@plt>
   1c028:	ldrb	r3, [r6]
   1c02c:	add	r6, r6, #1
   1c030:	lsl	r3, r3, #1
   1c034:	ldr	r2, [r0]
   1c038:	ldrh	r3, [r2, r3]
   1c03c:	tst	r3, #1
   1c040:	bne	1c060 <argp_error@@Base+0x1e84>
   1c044:	cmp	r6, r5
   1c048:	mov	r8, r6
   1c04c:	bne	1c024 <argp_error@@Base+0x1e48>
   1c050:	cmp	r8, r5
   1c054:	beq	1c10c <argp_error@@Base+0x1f30>
   1c058:	bl	113cc <__ctype_b_loc@plt>
   1c05c:	ldr	r2, [r0]
   1c060:	mov	r6, r8
   1c064:	ldrb	r3, [r6, #1]!
   1c068:	lsl	r3, r3, #1
   1c06c:	ldrh	r3, [r2, r3]
   1c070:	tst	r3, #1
   1c074:	bne	1c064 <argp_error@@Base+0x1e88>
   1c078:	b	1bde8 <argp_error@@Base+0x1c0c>
   1c07c:	cmp	r9, r5
   1c080:	str	r3, [sp, #4]
   1c084:	bls	1c180 <argp_error@@Base+0x1fa4>
   1c088:	sub	r0, r6, r8
   1c08c:	sub	r2, r9, r5
   1c090:	add	r0, r4, r0
   1c094:	mov	r1, r5
   1c098:	bl	1127c <memmove@plt>
   1c09c:	ldr	r2, [r7, #20]
   1c0a0:	ldr	r9, [r7, #28]
   1c0a4:	sub	r6, r6, r2
   1c0a8:	add	r6, r4, r6
   1c0ac:	mov	r3, #0
   1c0b0:	sub	r5, r6, r5
   1c0b4:	str	r3, [r7, #20]
   1c0b8:	ldr	r3, [sp, #4]
   1c0bc:	sub	r9, r9, r5
   1c0c0:	add	r4, r4, r3
   1c0c4:	str	r9, [r7, #28]
   1c0c8:	b	1bc58 <argp_error@@Base+0x1a7c>
   1c0cc:	add	r6, r4, r5
   1c0d0:	sub	r2, r9, r4
   1c0d4:	mov	r1, r4
   1c0d8:	mov	r0, r6
   1c0dc:	bl	1127c <memmove@plt>
   1c0e0:	ldr	r3, [r7, #28]
   1c0e4:	mov	r0, r4
   1c0e8:	add	r3, r3, r5
   1c0ec:	str	r3, [r7, #28]
   1c0f0:	mov	r2, r5
   1c0f4:	mov	r1, sl
   1c0f8:	mov	r4, r6
   1c0fc:	bl	1142c <memset@plt>
   1c100:	b	1bcc8 <argp_error@@Base+0x1aec>
   1c104:	add	r8, r2, #1
   1c108:	b	1bde8 <argp_error@@Base+0x1c0c>
   1c10c:	mov	r3, #0
   1c110:	str	r3, [r7, #20]
   1c114:	add	r4, r8, #1
   1c118:	ldr	r9, [r7, #28]
   1c11c:	b	1bc58 <argp_error@@Base+0x1a7c>
   1c120:	ldr	r1, [r7, #32]
   1c124:	sub	r1, r1, r6
   1c128:	cmp	r3, r1
   1c12c:	ble	1be90 <argp_error@@Base+0x1cb4>
   1c130:	b	1bf1c <argp_error@@Base+0x1d40>
   1c134:	sub	r9, r9, r6
   1c138:	mov	r1, r6
   1c13c:	mov	r2, r9
   1c140:	add	r0, r8, r0
   1c144:	bl	1127c <memmove@plt>
   1c148:	ldr	r1, [r7, #12]
   1c14c:	mov	r3, #10
   1c150:	add	r6, r1, #1
   1c154:	add	r6, r8, r6
   1c158:	add	r9, r6, r9
   1c15c:	sub	fp, r9, r4
   1c160:	add	r5, r8, #1
   1c164:	strb	r3, [r8]
   1c168:	sub	r9, r6, r4
   1c16c:	mov	r2, r4
   1c170:	b	1be84 <argp_error@@Base+0x1ca8>
   1c174:	mov	r1, #10
   1c178:	bl	11480 <__overflow@plt>
   1c17c:	b	1be6c <argp_error@@Base+0x1c90>
   1c180:	add	r3, r8, fp
   1c184:	sub	r6, r6, r3
   1c188:	add	r9, r9, r6
   1c18c:	str	r9, [r7, #28]
   1c190:	str	r3, [r7, #20]
   1c194:	b	1bd30 <argp_error@@Base+0x1b54>
   1c198:	str	r3, [r7, #20]
   1c19c:	ldr	r9, [r7, #28]
   1c1a0:	b	1bd30 <argp_error@@Base+0x1b54>
   1c1a4:	push	{r4, lr}
   1c1a8:	mov	r4, r0
   1c1ac:	bl	1bc38 <argp_error@@Base+0x1a5c>
   1c1b0:	ldr	r2, [r4, #28]
   1c1b4:	ldr	r0, [r4, #24]
   1c1b8:	cmp	r2, r0
   1c1bc:	bls	1c1d4 <argp_error@@Base+0x1ff8>
   1c1c0:	sub	r2, r2, r0
   1c1c4:	ldr	r3, [r4]
   1c1c8:	mov	r1, #1
   1c1cc:	bl	112d0 <fwrite_unlocked@plt>
   1c1d0:	ldr	r0, [r4, #24]
   1c1d4:	bl	147fc <argp_parse@@Base+0xf7c>
   1c1d8:	mov	r0, r4
   1c1dc:	pop	{r4, lr}
   1c1e0:	b	147fc <argp_parse@@Base+0xf7c>
   1c1e4:	ldr	r3, [r0, #32]
   1c1e8:	ldr	r2, [r0, #28]
   1c1ec:	sub	r3, r3, r2
   1c1f0:	cmp	r3, r1
   1c1f4:	bcc	1c204 <argp_error@@Base+0x2028>
   1c1f8:	mov	r3, #1
   1c1fc:	mov	r0, r3
   1c200:	bx	lr
   1c204:	push	{r4, r5, r6, lr}
   1c208:	mov	r4, r0
   1c20c:	mov	r5, r1
   1c210:	bl	1bc38 <argp_error@@Base+0x1a5c>
   1c214:	ldr	r3, [r4, #24]
   1c218:	ldr	r2, [r4, #28]
   1c21c:	mov	r0, r3
   1c220:	sub	r2, r2, r3
   1c224:	mov	r1, #1
   1c228:	ldr	r3, [r4]
   1c22c:	bl	112d0 <fwrite_unlocked@plt>
   1c230:	ldr	r2, [r4, #28]
   1c234:	ldr	r3, [r4, #24]
   1c238:	sub	r1, r2, r3
   1c23c:	cmp	r0, r1
   1c240:	bne	1c288 <argp_error@@Base+0x20ac>
   1c244:	ldr	r1, [r4, #32]
   1c248:	mov	r2, #0
   1c24c:	sub	r1, r1, r3
   1c250:	cmp	r5, r1
   1c254:	str	r3, [r4, #28]
   1c258:	str	r2, [r4, #16]
   1c25c:	bls	1c27c <argp_error@@Base+0x20a0>
   1c260:	adds	r5, r5, r1
   1c264:	bcc	1c2b8 <argp_error@@Base+0x20dc>
   1c268:	bl	11408 <__errno_location@plt>
   1c26c:	mov	r2, #12
   1c270:	mov	r3, #0
   1c274:	str	r2, [r0]
   1c278:	b	1c280 <argp_error@@Base+0x20a4>
   1c27c:	mov	r3, #1
   1c280:	mov	r0, r3
   1c284:	pop	{r4, r5, r6, pc}
   1c288:	ldr	r1, [r4, #16]
   1c28c:	sub	r2, r2, r0
   1c290:	sub	r1, r1, r0
   1c294:	str	r2, [r4, #28]
   1c298:	str	r1, [r4, #16]
   1c29c:	sub	r2, r2, r3
   1c2a0:	add	r1, r3, r0
   1c2a4:	mov	r0, r3
   1c2a8:	bl	1127c <memmove@plt>
   1c2ac:	mov	r3, #0
   1c2b0:	mov	r0, r3
   1c2b4:	pop	{r4, r5, r6, pc}
   1c2b8:	mov	r0, r3
   1c2bc:	mov	r1, r5
   1c2c0:	bl	15e3c <argp_parse@@Base+0x25bc>
   1c2c4:	cmp	r0, #0
   1c2c8:	beq	1c268 <argp_error@@Base+0x208c>
   1c2cc:	add	r5, r0, r5
   1c2d0:	mov	r3, #1
   1c2d4:	str	r5, [r4, #32]
   1c2d8:	str	r0, [r4, #24]
   1c2dc:	str	r0, [r4, #28]
   1c2e0:	b	1c280 <argp_error@@Base+0x20a4>
   1c2e4:	push	{r1, r2, r3}
   1c2e8:	push	{r4, r5, r6, r7, r8, r9, lr}
   1c2ec:	sub	sp, sp, #8
   1c2f0:	mov	r5, r0
   1c2f4:	ldr	r7, [sp, #36]	; 0x24
   1c2f8:	mov	r4, #150	; 0x96
   1c2fc:	mov	r8, #1
   1c300:	mov	r9, #0
   1c304:	add	r6, sp, #40	; 0x28
   1c308:	ldr	r1, [r5, #32]
   1c30c:	ldr	r0, [r5, #28]
   1c310:	sub	r3, r1, r0
   1c314:	cmp	r4, r3
   1c318:	bhi	1c360 <argp_error@@Base+0x2184>
   1c31c:	sub	r4, r1, r0
   1c320:	mov	r1, r4
   1c324:	mov	r3, r6
   1c328:	mov	r2, r7
   1c32c:	str	r6, [sp, #4]
   1c330:	bl	1151c <vsnprintf@plt>
   1c334:	cmp	r4, r0
   1c338:	bls	1c358 <argp_error@@Base+0x217c>
   1c33c:	ldr	r3, [r5, #28]
   1c340:	add	r3, r3, r0
   1c344:	str	r3, [r5, #28]
   1c348:	add	sp, sp, #8
   1c34c:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1c350:	add	sp, sp, #12
   1c354:	bx	lr
   1c358:	add	r4, r0, #1
   1c35c:	b	1c308 <argp_error@@Base+0x212c>
   1c360:	mov	r0, r5
   1c364:	bl	1bc38 <argp_error@@Base+0x1a5c>
   1c368:	ldr	r3, [r5, #24]
   1c36c:	ldr	r2, [r5, #28]
   1c370:	mov	r0, r3
   1c374:	sub	r2, r2, r3
   1c378:	mov	r1, r8
   1c37c:	ldr	r3, [r5]
   1c380:	bl	112d0 <fwrite_unlocked@plt>
   1c384:	ldr	r2, [r5, #28]
   1c388:	ldr	r3, [r5, #24]
   1c38c:	sub	r1, r2, r3
   1c390:	cmp	r0, r1
   1c394:	bne	1c3dc <argp_error@@Base+0x2200>
   1c398:	ldr	r1, [r5, #32]
   1c39c:	str	r3, [r5, #28]
   1c3a0:	sub	r0, r1, r3
   1c3a4:	cmp	r4, r0
   1c3a8:	str	r9, [r5, #16]
   1c3ac:	movls	r0, r3
   1c3b0:	bls	1c31c <argp_error@@Base+0x2140>
   1c3b4:	adds	r4, r4, r0
   1c3b8:	bcc	1c404 <argp_error@@Base+0x2228>
   1c3bc:	bl	11408 <__errno_location@plt>
   1c3c0:	mov	r3, #12
   1c3c4:	str	r3, [r0]
   1c3c8:	mvn	r0, #0
   1c3cc:	add	sp, sp, #8
   1c3d0:	pop	{r4, r5, r6, r7, r8, r9, lr}
   1c3d4:	add	sp, sp, #12
   1c3d8:	bx	lr
   1c3dc:	ldr	r1, [r5, #16]
   1c3e0:	sub	r2, r2, r0
   1c3e4:	sub	r1, r1, r0
   1c3e8:	str	r2, [r5, #28]
   1c3ec:	str	r1, [r5, #16]
   1c3f0:	sub	r2, r2, r3
   1c3f4:	add	r1, r3, r0
   1c3f8:	mov	r0, r3
   1c3fc:	bl	1127c <memmove@plt>
   1c400:	b	1c3c8 <argp_error@@Base+0x21ec>
   1c404:	mov	r1, r4
   1c408:	mov	r0, r3
   1c40c:	bl	15e3c <argp_parse@@Base+0x25bc>
   1c410:	cmp	r0, #0
   1c414:	add	r1, r0, r4
   1c418:	beq	1c3bc <argp_error@@Base+0x21e0>
   1c41c:	str	r0, [r5, #24]
   1c420:	str	r1, [r5, #32]
   1c424:	str	r0, [r5, #28]
   1c428:	b	1c31c <argp_error@@Base+0x2140>
   1c42c:	subs	r2, r1, #1
   1c430:	bxeq	lr
   1c434:	bcc	1c60c <argp_error@@Base+0x2430>
   1c438:	cmp	r0, r1
   1c43c:	bls	1c5f0 <argp_error@@Base+0x2414>
   1c440:	tst	r1, r2
   1c444:	beq	1c5fc <argp_error@@Base+0x2420>
   1c448:	clz	r3, r0
   1c44c:	clz	r2, r1
   1c450:	sub	r3, r2, r3
   1c454:	rsbs	r3, r3, #31
   1c458:	addne	r3, r3, r3, lsl #1
   1c45c:	mov	r2, #0
   1c460:	addne	pc, pc, r3, lsl #2
   1c464:	nop			; (mov r0, r0)
   1c468:	cmp	r0, r1, lsl #31
   1c46c:	adc	r2, r2, r2
   1c470:	subcs	r0, r0, r1, lsl #31
   1c474:	cmp	r0, r1, lsl #30
   1c478:	adc	r2, r2, r2
   1c47c:	subcs	r0, r0, r1, lsl #30
   1c480:	cmp	r0, r1, lsl #29
   1c484:	adc	r2, r2, r2
   1c488:	subcs	r0, r0, r1, lsl #29
   1c48c:	cmp	r0, r1, lsl #28
   1c490:	adc	r2, r2, r2
   1c494:	subcs	r0, r0, r1, lsl #28
   1c498:	cmp	r0, r1, lsl #27
   1c49c:	adc	r2, r2, r2
   1c4a0:	subcs	r0, r0, r1, lsl #27
   1c4a4:	cmp	r0, r1, lsl #26
   1c4a8:	adc	r2, r2, r2
   1c4ac:	subcs	r0, r0, r1, lsl #26
   1c4b0:	cmp	r0, r1, lsl #25
   1c4b4:	adc	r2, r2, r2
   1c4b8:	subcs	r0, r0, r1, lsl #25
   1c4bc:	cmp	r0, r1, lsl #24
   1c4c0:	adc	r2, r2, r2
   1c4c4:	subcs	r0, r0, r1, lsl #24
   1c4c8:	cmp	r0, r1, lsl #23
   1c4cc:	adc	r2, r2, r2
   1c4d0:	subcs	r0, r0, r1, lsl #23
   1c4d4:	cmp	r0, r1, lsl #22
   1c4d8:	adc	r2, r2, r2
   1c4dc:	subcs	r0, r0, r1, lsl #22
   1c4e0:	cmp	r0, r1, lsl #21
   1c4e4:	adc	r2, r2, r2
   1c4e8:	subcs	r0, r0, r1, lsl #21
   1c4ec:	cmp	r0, r1, lsl #20
   1c4f0:	adc	r2, r2, r2
   1c4f4:	subcs	r0, r0, r1, lsl #20
   1c4f8:	cmp	r0, r1, lsl #19
   1c4fc:	adc	r2, r2, r2
   1c500:	subcs	r0, r0, r1, lsl #19
   1c504:	cmp	r0, r1, lsl #18
   1c508:	adc	r2, r2, r2
   1c50c:	subcs	r0, r0, r1, lsl #18
   1c510:	cmp	r0, r1, lsl #17
   1c514:	adc	r2, r2, r2
   1c518:	subcs	r0, r0, r1, lsl #17
   1c51c:	cmp	r0, r1, lsl #16
   1c520:	adc	r2, r2, r2
   1c524:	subcs	r0, r0, r1, lsl #16
   1c528:	cmp	r0, r1, lsl #15
   1c52c:	adc	r2, r2, r2
   1c530:	subcs	r0, r0, r1, lsl #15
   1c534:	cmp	r0, r1, lsl #14
   1c538:	adc	r2, r2, r2
   1c53c:	subcs	r0, r0, r1, lsl #14
   1c540:	cmp	r0, r1, lsl #13
   1c544:	adc	r2, r2, r2
   1c548:	subcs	r0, r0, r1, lsl #13
   1c54c:	cmp	r0, r1, lsl #12
   1c550:	adc	r2, r2, r2
   1c554:	subcs	r0, r0, r1, lsl #12
   1c558:	cmp	r0, r1, lsl #11
   1c55c:	adc	r2, r2, r2
   1c560:	subcs	r0, r0, r1, lsl #11
   1c564:	cmp	r0, r1, lsl #10
   1c568:	adc	r2, r2, r2
   1c56c:	subcs	r0, r0, r1, lsl #10
   1c570:	cmp	r0, r1, lsl #9
   1c574:	adc	r2, r2, r2
   1c578:	subcs	r0, r0, r1, lsl #9
   1c57c:	cmp	r0, r1, lsl #8
   1c580:	adc	r2, r2, r2
   1c584:	subcs	r0, r0, r1, lsl #8
   1c588:	cmp	r0, r1, lsl #7
   1c58c:	adc	r2, r2, r2
   1c590:	subcs	r0, r0, r1, lsl #7
   1c594:	cmp	r0, r1, lsl #6
   1c598:	adc	r2, r2, r2
   1c59c:	subcs	r0, r0, r1, lsl #6
   1c5a0:	cmp	r0, r1, lsl #5
   1c5a4:	adc	r2, r2, r2
   1c5a8:	subcs	r0, r0, r1, lsl #5
   1c5ac:	cmp	r0, r1, lsl #4
   1c5b0:	adc	r2, r2, r2
   1c5b4:	subcs	r0, r0, r1, lsl #4
   1c5b8:	cmp	r0, r1, lsl #3
   1c5bc:	adc	r2, r2, r2
   1c5c0:	subcs	r0, r0, r1, lsl #3
   1c5c4:	cmp	r0, r1, lsl #2
   1c5c8:	adc	r2, r2, r2
   1c5cc:	subcs	r0, r0, r1, lsl #2
   1c5d0:	cmp	r0, r1, lsl #1
   1c5d4:	adc	r2, r2, r2
   1c5d8:	subcs	r0, r0, r1, lsl #1
   1c5dc:	cmp	r0, r1
   1c5e0:	adc	r2, r2, r2
   1c5e4:	subcs	r0, r0, r1
   1c5e8:	mov	r0, r2
   1c5ec:	bx	lr
   1c5f0:	moveq	r0, #1
   1c5f4:	movne	r0, #0
   1c5f8:	bx	lr
   1c5fc:	clz	r2, r1
   1c600:	rsb	r2, r2, #31
   1c604:	lsr	r0, r0, r2
   1c608:	bx	lr
   1c60c:	cmp	r0, #0
   1c610:	mvnne	r0, #0
   1c614:	b	1c878 <argp_error@@Base+0x269c>
   1c618:	cmp	r1, #0
   1c61c:	beq	1c60c <argp_error@@Base+0x2430>
   1c620:	push	{r0, r1, lr}
   1c624:	bl	1c42c <argp_error@@Base+0x2250>
   1c628:	pop	{r1, r2, lr}
   1c62c:	mul	r3, r2, r0
   1c630:	sub	r1, r1, r3
   1c634:	bx	lr
   1c638:	cmp	r1, #0
   1c63c:	beq	1c848 <argp_error@@Base+0x266c>
   1c640:	eor	ip, r0, r1
   1c644:	rsbmi	r1, r1, #0
   1c648:	subs	r2, r1, #1
   1c64c:	beq	1c814 <argp_error@@Base+0x2638>
   1c650:	movs	r3, r0
   1c654:	rsbmi	r3, r0, #0
   1c658:	cmp	r3, r1
   1c65c:	bls	1c820 <argp_error@@Base+0x2644>
   1c660:	tst	r1, r2
   1c664:	beq	1c830 <argp_error@@Base+0x2654>
   1c668:	clz	r2, r3
   1c66c:	clz	r0, r1
   1c670:	sub	r2, r0, r2
   1c674:	rsbs	r2, r2, #31
   1c678:	addne	r2, r2, r2, lsl #1
   1c67c:	mov	r0, #0
   1c680:	addne	pc, pc, r2, lsl #2
   1c684:	nop			; (mov r0, r0)
   1c688:	cmp	r3, r1, lsl #31
   1c68c:	adc	r0, r0, r0
   1c690:	subcs	r3, r3, r1, lsl #31
   1c694:	cmp	r3, r1, lsl #30
   1c698:	adc	r0, r0, r0
   1c69c:	subcs	r3, r3, r1, lsl #30
   1c6a0:	cmp	r3, r1, lsl #29
   1c6a4:	adc	r0, r0, r0
   1c6a8:	subcs	r3, r3, r1, lsl #29
   1c6ac:	cmp	r3, r1, lsl #28
   1c6b0:	adc	r0, r0, r0
   1c6b4:	subcs	r3, r3, r1, lsl #28
   1c6b8:	cmp	r3, r1, lsl #27
   1c6bc:	adc	r0, r0, r0
   1c6c0:	subcs	r3, r3, r1, lsl #27
   1c6c4:	cmp	r3, r1, lsl #26
   1c6c8:	adc	r0, r0, r0
   1c6cc:	subcs	r3, r3, r1, lsl #26
   1c6d0:	cmp	r3, r1, lsl #25
   1c6d4:	adc	r0, r0, r0
   1c6d8:	subcs	r3, r3, r1, lsl #25
   1c6dc:	cmp	r3, r1, lsl #24
   1c6e0:	adc	r0, r0, r0
   1c6e4:	subcs	r3, r3, r1, lsl #24
   1c6e8:	cmp	r3, r1, lsl #23
   1c6ec:	adc	r0, r0, r0
   1c6f0:	subcs	r3, r3, r1, lsl #23
   1c6f4:	cmp	r3, r1, lsl #22
   1c6f8:	adc	r0, r0, r0
   1c6fc:	subcs	r3, r3, r1, lsl #22
   1c700:	cmp	r3, r1, lsl #21
   1c704:	adc	r0, r0, r0
   1c708:	subcs	r3, r3, r1, lsl #21
   1c70c:	cmp	r3, r1, lsl #20
   1c710:	adc	r0, r0, r0
   1c714:	subcs	r3, r3, r1, lsl #20
   1c718:	cmp	r3, r1, lsl #19
   1c71c:	adc	r0, r0, r0
   1c720:	subcs	r3, r3, r1, lsl #19
   1c724:	cmp	r3, r1, lsl #18
   1c728:	adc	r0, r0, r0
   1c72c:	subcs	r3, r3, r1, lsl #18
   1c730:	cmp	r3, r1, lsl #17
   1c734:	adc	r0, r0, r0
   1c738:	subcs	r3, r3, r1, lsl #17
   1c73c:	cmp	r3, r1, lsl #16
   1c740:	adc	r0, r0, r0
   1c744:	subcs	r3, r3, r1, lsl #16
   1c748:	cmp	r3, r1, lsl #15
   1c74c:	adc	r0, r0, r0
   1c750:	subcs	r3, r3, r1, lsl #15
   1c754:	cmp	r3, r1, lsl #14
   1c758:	adc	r0, r0, r0
   1c75c:	subcs	r3, r3, r1, lsl #14
   1c760:	cmp	r3, r1, lsl #13
   1c764:	adc	r0, r0, r0
   1c768:	subcs	r3, r3, r1, lsl #13
   1c76c:	cmp	r3, r1, lsl #12
   1c770:	adc	r0, r0, r0
   1c774:	subcs	r3, r3, r1, lsl #12
   1c778:	cmp	r3, r1, lsl #11
   1c77c:	adc	r0, r0, r0
   1c780:	subcs	r3, r3, r1, lsl #11
   1c784:	cmp	r3, r1, lsl #10
   1c788:	adc	r0, r0, r0
   1c78c:	subcs	r3, r3, r1, lsl #10
   1c790:	cmp	r3, r1, lsl #9
   1c794:	adc	r0, r0, r0
   1c798:	subcs	r3, r3, r1, lsl #9
   1c79c:	cmp	r3, r1, lsl #8
   1c7a0:	adc	r0, r0, r0
   1c7a4:	subcs	r3, r3, r1, lsl #8
   1c7a8:	cmp	r3, r1, lsl #7
   1c7ac:	adc	r0, r0, r0
   1c7b0:	subcs	r3, r3, r1, lsl #7
   1c7b4:	cmp	r3, r1, lsl #6
   1c7b8:	adc	r0, r0, r0
   1c7bc:	subcs	r3, r3, r1, lsl #6
   1c7c0:	cmp	r3, r1, lsl #5
   1c7c4:	adc	r0, r0, r0
   1c7c8:	subcs	r3, r3, r1, lsl #5
   1c7cc:	cmp	r3, r1, lsl #4
   1c7d0:	adc	r0, r0, r0
   1c7d4:	subcs	r3, r3, r1, lsl #4
   1c7d8:	cmp	r3, r1, lsl #3
   1c7dc:	adc	r0, r0, r0
   1c7e0:	subcs	r3, r3, r1, lsl #3
   1c7e4:	cmp	r3, r1, lsl #2
   1c7e8:	adc	r0, r0, r0
   1c7ec:	subcs	r3, r3, r1, lsl #2
   1c7f0:	cmp	r3, r1, lsl #1
   1c7f4:	adc	r0, r0, r0
   1c7f8:	subcs	r3, r3, r1, lsl #1
   1c7fc:	cmp	r3, r1
   1c800:	adc	r0, r0, r0
   1c804:	subcs	r3, r3, r1
   1c808:	cmp	ip, #0
   1c80c:	rsbmi	r0, r0, #0
   1c810:	bx	lr
   1c814:	teq	ip, r0
   1c818:	rsbmi	r0, r0, #0
   1c81c:	bx	lr
   1c820:	movcc	r0, #0
   1c824:	asreq	r0, ip, #31
   1c828:	orreq	r0, r0, #1
   1c82c:	bx	lr
   1c830:	clz	r2, r1
   1c834:	rsb	r2, r2, #31
   1c838:	cmp	ip, #0
   1c83c:	lsr	r0, r3, r2
   1c840:	rsbmi	r0, r0, #0
   1c844:	bx	lr
   1c848:	cmp	r0, #0
   1c84c:	mvngt	r0, #-2147483648	; 0x80000000
   1c850:	movlt	r0, #-2147483648	; 0x80000000
   1c854:	b	1c878 <argp_error@@Base+0x269c>
   1c858:	cmp	r1, #0
   1c85c:	beq	1c848 <argp_error@@Base+0x266c>
   1c860:	push	{r0, r1, lr}
   1c864:	bl	1c640 <argp_error@@Base+0x2464>
   1c868:	pop	{r1, r2, lr}
   1c86c:	mul	r3, r2, r0
   1c870:	sub	r1, r1, r3
   1c874:	bx	lr
   1c878:	push	{r1, lr}
   1c87c:	mov	r0, #8
   1c880:	bl	11228 <raise@plt>
   1c884:	pop	{r1, pc}
   1c888:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1c88c:	mov	r7, r0
   1c890:	ldr	r6, [pc, #72]	; 1c8e0 <argp_error@@Base+0x2704>
   1c894:	ldr	r5, [pc, #72]	; 1c8e4 <argp_error@@Base+0x2708>
   1c898:	add	r6, pc, r6
   1c89c:	add	r5, pc, r5
   1c8a0:	sub	r6, r6, r5
   1c8a4:	mov	r8, r1
   1c8a8:	mov	r9, r2
   1c8ac:	bl	111d8 <fdopen@plt-0x20>
   1c8b0:	asrs	r6, r6, #2
   1c8b4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c8b8:	mov	r4, #0
   1c8bc:	add	r4, r4, #1
   1c8c0:	ldr	r3, [r5], #4
   1c8c4:	mov	r2, r9
   1c8c8:	mov	r1, r8
   1c8cc:	mov	r0, r7
   1c8d0:	blx	r3
   1c8d4:	cmp	r6, r4
   1c8d8:	bne	1c8bc <argp_error@@Base+0x26e0>
   1c8dc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1c8e0:	andeq	r1, r1, r8, ror #12
   1c8e4:	andeq	r1, r1, r0, ror #12
   1c8e8:	bx	lr

Disassembly of section .fini:

0001c8ec <.fini>:
   1c8ec:	push	{r3, lr}
   1c8f0:	pop	{r3, pc}
