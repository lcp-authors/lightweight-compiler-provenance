
../repos/coreutils/src/dirname:     file format elf32-littlearm


Disassembly of section .init:

00010c58 <.init>:
   10c58:	push	{r3, lr}
   10c5c:	bl	10ec4 <putchar_unlocked@plt+0x48>
   10c60:	pop	{r3, pc}

Disassembly of section .plt:

00010c64 <calloc@plt-0x14>:
   10c64:	push	{lr}		; (str lr, [sp, #-4]!)
   10c68:	ldr	lr, [pc, #4]	; 10c74 <calloc@plt-0x4>
   10c6c:	add	lr, pc, lr
   10c70:	ldr	pc, [lr, #8]!
   10c74:	andeq	r4, r1, ip, lsl #7

00010c78 <calloc@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #20, 20	; 0x14000
   10c80:	ldr	pc, [ip, #908]!	; 0x38c

00010c84 <fputs_unlocked@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #900]!	; 0x384

00010c90 <strcmp@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #892]!	; 0x37c

00010c9c <fflush@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #884]!	; 0x374

00010ca8 <free@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #876]!	; 0x36c

00010cb4 <_exit@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #868]!	; 0x364

00010cc0 <memcpy@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #860]!	; 0x35c

00010ccc <mbsinit@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #852]!	; 0x354

00010cd8 <fwrite_unlocked@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #844]!	; 0x34c

00010ce4 <memcmp@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #836]!	; 0x344

00010cf0 <dcgettext@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #828]!	; 0x33c

00010cfc <realloc@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #820]!	; 0x334

00010d08 <textdomain@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #812]!	; 0x32c

00010d14 <iswprint@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #804]!	; 0x324

00010d20 <fwrite@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #796]!	; 0x31c

00010d2c <lseek64@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #20, 20	; 0x14000
   10d34:	ldr	pc, [ip, #788]!	; 0x314

00010d38 <__ctype_get_mb_cur_max@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #20, 20	; 0x14000
   10d40:	ldr	pc, [ip, #780]!	; 0x30c

00010d44 <__fpending@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #20, 20	; 0x14000
   10d4c:	ldr	pc, [ip, #772]!	; 0x304

00010d50 <ferror_unlocked@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #20, 20	; 0x14000
   10d58:	ldr	pc, [ip, #764]!	; 0x2fc

00010d5c <mbrtowc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #20, 20	; 0x14000
   10d64:	ldr	pc, [ip, #756]!	; 0x2f4

00010d68 <error@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #20, 20	; 0x14000
   10d70:	ldr	pc, [ip, #748]!	; 0x2ec

00010d74 <malloc@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #20, 20	; 0x14000
   10d7c:	ldr	pc, [ip, #740]!	; 0x2e4

00010d80 <__libc_start_main@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #20, 20	; 0x14000
   10d88:	ldr	pc, [ip, #732]!	; 0x2dc

00010d8c <__freading@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #20, 20	; 0x14000
   10d94:	ldr	pc, [ip, #724]!	; 0x2d4

00010d98 <__gmon_start__@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #20, 20	; 0x14000
   10da0:	ldr	pc, [ip, #716]!	; 0x2cc

00010da4 <getopt_long@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #20, 20	; 0x14000
   10dac:	ldr	pc, [ip, #708]!	; 0x2c4

00010db0 <__ctype_b_loc@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #20, 20	; 0x14000
   10db8:	ldr	pc, [ip, #700]!	; 0x2bc

00010dbc <exit@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #692]!	; 0x2b4

00010dc8 <strlen@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #684]!	; 0x2ac

00010dd4 <__errno_location@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #676]!	; 0x2a4

00010de0 <__cxa_atexit@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #668]!	; 0x29c

00010dec <memset@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #20, 20	; 0x14000
   10df4:	ldr	pc, [ip, #660]!	; 0x294

00010df8 <__printf_chk@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #20, 20	; 0x14000
   10e00:	ldr	pc, [ip, #652]!	; 0x28c

00010e04 <fileno@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #20, 20	; 0x14000
   10e0c:	ldr	pc, [ip, #644]!	; 0x284

00010e10 <__fprintf_chk@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #20, 20	; 0x14000
   10e18:	ldr	pc, [ip, #636]!	; 0x27c

00010e1c <fclose@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #20, 20	; 0x14000
   10e24:	ldr	pc, [ip, #628]!	; 0x274

00010e28 <fseeko64@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #20, 20	; 0x14000
   10e30:	ldr	pc, [ip, #620]!	; 0x26c

00010e34 <setlocale@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #20, 20	; 0x14000
   10e3c:	ldr	pc, [ip, #612]!	; 0x264

00010e40 <strrchr@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #20, 20	; 0x14000
   10e48:	ldr	pc, [ip, #604]!	; 0x25c

00010e4c <nl_langinfo@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #20, 20	; 0x14000
   10e54:	ldr	pc, [ip, #596]!	; 0x254

00010e58 <bindtextdomain@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #20, 20	; 0x14000
   10e60:	ldr	pc, [ip, #588]!	; 0x24c

00010e64 <strncmp@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #20, 20	; 0x14000
   10e6c:	ldr	pc, [ip, #580]!	; 0x244

00010e70 <abort@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #20, 20	; 0x14000
   10e78:	ldr	pc, [ip, #572]!	; 0x23c

00010e7c <putchar_unlocked@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #20, 20	; 0x14000
   10e84:	ldr	pc, [ip, #564]!	; 0x234

Disassembly of section .text:

00010e88 <.text>:
   10e88:	mov	fp, #0
   10e8c:	mov	lr, #0
   10e90:	pop	{r1}		; (ldr r1, [sp], #4)
   10e94:	mov	r2, sp
   10e98:	push	{r2}		; (str r2, [sp, #-4]!)
   10e9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10ea0:	ldr	ip, [pc, #16]	; 10eb8 <putchar_unlocked@plt+0x3c>
   10ea4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ea8:	ldr	r0, [pc, #12]	; 10ebc <putchar_unlocked@plt+0x40>
   10eac:	ldr	r3, [pc, #12]	; 10ec0 <putchar_unlocked@plt+0x44>
   10eb0:	bl	10d80 <__libc_start_main@plt>
   10eb4:	bl	10e70 <abort@plt>
   10eb8:	andeq	r4, r1, r0, lsr #8
   10ebc:	andeq	r1, r1, r4, lsr r2
   10ec0:	andeq	r4, r1, r0, asr #7
   10ec4:	ldr	r3, [pc, #20]	; 10ee0 <putchar_unlocked@plt+0x64>
   10ec8:	ldr	r2, [pc, #20]	; 10ee4 <putchar_unlocked@plt+0x68>
   10ecc:	add	r3, pc, r3
   10ed0:	ldr	r2, [r3, r2]
   10ed4:	cmp	r2, #0
   10ed8:	bxeq	lr
   10edc:	b	10d98 <__gmon_start__@plt>
   10ee0:	andeq	r4, r1, ip, lsr #2
   10ee4:	strheq	r0, [r0], -ip
   10ee8:	ldr	r0, [pc, #24]	; 10f08 <putchar_unlocked@plt+0x8c>
   10eec:	ldr	r3, [pc, #24]	; 10f0c <putchar_unlocked@plt+0x90>
   10ef0:	cmp	r3, r0
   10ef4:	bxeq	lr
   10ef8:	ldr	r3, [pc, #16]	; 10f10 <putchar_unlocked@plt+0x94>
   10efc:	cmp	r3, #0
   10f00:	bxeq	lr
   10f04:	bx	r3
   10f08:	andeq	r5, r2, r0, lsl r1
   10f0c:	andeq	r5, r2, r0, lsl r1
   10f10:	andeq	r0, r0, r0
   10f14:	ldr	r0, [pc, #36]	; 10f40 <putchar_unlocked@plt+0xc4>
   10f18:	ldr	r1, [pc, #36]	; 10f44 <putchar_unlocked@plt+0xc8>
   10f1c:	sub	r1, r1, r0
   10f20:	asr	r1, r1, #2
   10f24:	add	r1, r1, r1, lsr #31
   10f28:	asrs	r1, r1, #1
   10f2c:	bxeq	lr
   10f30:	ldr	r3, [pc, #16]	; 10f48 <putchar_unlocked@plt+0xcc>
   10f34:	cmp	r3, #0
   10f38:	bxeq	lr
   10f3c:	bx	r3
   10f40:	andeq	r5, r2, r0, lsl r1
   10f44:	andeq	r5, r2, r0, lsl r1
   10f48:	andeq	r0, r0, r0
   10f4c:	push	{r4, lr}
   10f50:	ldr	r4, [pc, #24]	; 10f70 <putchar_unlocked@plt+0xf4>
   10f54:	ldrb	r3, [r4]
   10f58:	cmp	r3, #0
   10f5c:	popne	{r4, pc}
   10f60:	bl	10ee8 <putchar_unlocked@plt+0x6c>
   10f64:	mov	r3, #1
   10f68:	strb	r3, [r4]
   10f6c:	pop	{r4, pc}
   10f70:	andeq	r5, r2, r8, lsr #2
   10f74:	b	10f14 <putchar_unlocked@plt+0x98>
   10f78:	push	{fp, lr}
   10f7c:	mov	fp, sp
   10f80:	sub	sp, sp, #8
   10f84:	mov	r4, r0
   10f88:	cmp	r0, #0
   10f8c:	bne	1106c <putchar_unlocked@plt+0x1f0>
   10f90:	movw	r1, #17523	; 0x4473
   10f94:	movt	r1, #1
   10f98:	mov	r0, #0
   10f9c:	mov	r2, #5
   10fa0:	bl	10cf0 <dcgettext@plt>
   10fa4:	mov	r1, r0
   10fa8:	movw	r5, #20788	; 0x5134
   10fac:	movt	r5, #2
   10fb0:	ldr	r2, [r5]
   10fb4:	mov	r0, #1
   10fb8:	bl	10df8 <__printf_chk@plt>
   10fbc:	movw	r1, #17551	; 0x448f
   10fc0:	movt	r1, #1
   10fc4:	mov	r0, #0
   10fc8:	mov	r2, #5
   10fcc:	bl	10cf0 <dcgettext@plt>
   10fd0:	movw	r6, #20772	; 0x5124
   10fd4:	movt	r6, #2
   10fd8:	ldr	r1, [r6]
   10fdc:	bl	10c84 <fputs_unlocked@plt>
   10fe0:	movw	r1, #17703	; 0x4527
   10fe4:	movt	r1, #1
   10fe8:	mov	r0, #0
   10fec:	mov	r2, #5
   10ff0:	bl	10cf0 <dcgettext@plt>
   10ff4:	ldr	r1, [r6]
   10ff8:	bl	10c84 <fputs_unlocked@plt>
   10ffc:	movw	r1, #17764	; 0x4564
   11000:	movt	r1, #1
   11004:	mov	r0, #0
   11008:	mov	r2, #5
   1100c:	bl	10cf0 <dcgettext@plt>
   11010:	ldr	r1, [r6]
   11014:	bl	10c84 <fputs_unlocked@plt>
   11018:	movw	r1, #17809	; 0x4591
   1101c:	movt	r1, #1
   11020:	mov	r0, #0
   11024:	mov	r2, #5
   11028:	bl	10cf0 <dcgettext@plt>
   1102c:	ldr	r1, [r6]
   11030:	bl	10c84 <fputs_unlocked@plt>
   11034:	movw	r1, #17863	; 0x45c7
   11038:	movt	r1, #1
   1103c:	mov	r0, #0
   11040:	mov	r2, #5
   11044:	bl	10cf0 <dcgettext@plt>
   11048:	mov	r1, r0
   1104c:	ldr	r2, [r5]
   11050:	str	r2, [sp]
   11054:	mov	r0, #1
   11058:	mov	r3, r2
   1105c:	bl	10df8 <__printf_chk@plt>
   11060:	bl	110b0 <putchar_unlocked@plt+0x234>
   11064:	mov	r0, r4
   11068:	bl	10dbc <exit@plt>
   1106c:	movw	r0, #20768	; 0x5120
   11070:	movt	r0, #2
   11074:	ldr	r5, [r0]
   11078:	movw	r1, #17484	; 0x444c
   1107c:	movt	r1, #1
   11080:	mov	r0, #0
   11084:	mov	r2, #5
   11088:	bl	10cf0 <dcgettext@plt>
   1108c:	mov	r2, r0
   11090:	movw	r0, #20788	; 0x5134
   11094:	movt	r0, #2
   11098:	ldr	r3, [r0]
   1109c:	mov	r0, r5
   110a0:	mov	r1, #1
   110a4:	bl	10e10 <__fprintf_chk@plt>
   110a8:	mov	r0, r4
   110ac:	bl	10dbc <exit@plt>
   110b0:	push	{r4, r5, fp, lr}
   110b4:	add	fp, sp, #8
   110b8:	sub	sp, sp, #56	; 0x38
   110bc:	movw	r0, #18488	; 0x4838
   110c0:	movt	r0, #1
   110c4:	add	r1, r0, #32
   110c8:	mov	r5, sp
   110cc:	mov	r2, #48	; 0x30
   110d0:	vld1.64	{d16-d17}, [r1]
   110d4:	add	r1, r5, #32
   110d8:	add	r3, r0, #16
   110dc:	vld1.64	{d18-d19}, [r0], r2
   110e0:	vld1.64	{d20-d21}, [r3]
   110e4:	vldr	d22, [r0]
   110e8:	vst1.64	{d16-d17}, [r1]
   110ec:	add	r0, r5, #16
   110f0:	vst1.64	{d20-d21}, [r0]
   110f4:	mov	r0, r5
   110f8:	vst1.64	{d18-d19}, [r0], r2
   110fc:	vstr	d22, [r0]
   11100:	ldr	r1, [sp]
   11104:	cmp	r1, #0
   11108:	beq	11130 <putchar_unlocked@plt+0x2b4>
   1110c:	mov	r5, sp
   11110:	movw	r4, #17993	; 0x4649
   11114:	movt	r4, #1
   11118:	mov	r0, r4
   1111c:	bl	10c90 <strcmp@plt>
   11120:	cmp	r0, #0
   11124:	ldrne	r1, [r5, #8]!
   11128:	cmpne	r1, #0
   1112c:	bne	11118 <putchar_unlocked@plt+0x29c>
   11130:	ldr	r4, [r5, #4]
   11134:	movw	r1, #18181	; 0x4705
   11138:	movt	r1, #1
   1113c:	mov	r0, #0
   11140:	mov	r2, #5
   11144:	bl	10cf0 <dcgettext@plt>
   11148:	mov	r1, r0
   1114c:	movw	r2, #18027	; 0x466b
   11150:	movt	r2, #1
   11154:	movw	r3, #18204	; 0x471c
   11158:	movt	r3, #1
   1115c:	mov	r0, #1
   11160:	bl	10df8 <__printf_chk@plt>
   11164:	movw	r5, #17993	; 0x4649
   11168:	movt	r5, #1
   1116c:	cmp	r4, #0
   11170:	moveq	r4, r5
   11174:	mov	r0, #5
   11178:	mov	r1, #0
   1117c:	bl	10e34 <setlocale@plt>
   11180:	cmp	r0, #0
   11184:	beq	111c4 <putchar_unlocked@plt+0x348>
   11188:	movw	r1, #18244	; 0x4744
   1118c:	movt	r1, #1
   11190:	mov	r2, #3
   11194:	bl	10e64 <strncmp@plt>
   11198:	cmp	r0, #0
   1119c:	beq	111c4 <putchar_unlocked@plt+0x348>
   111a0:	movw	r1, #18248	; 0x4748
   111a4:	movt	r1, #1
   111a8:	mov	r0, #0
   111ac:	mov	r2, #5
   111b0:	bl	10cf0 <dcgettext@plt>
   111b4:	movw	r1, #20772	; 0x5124
   111b8:	movt	r1, #2
   111bc:	ldr	r1, [r1]
   111c0:	bl	10c84 <fputs_unlocked@plt>
   111c4:	movw	r1, #18319	; 0x478f
   111c8:	movt	r1, #1
   111cc:	mov	r0, #0
   111d0:	mov	r2, #5
   111d4:	bl	10cf0 <dcgettext@plt>
   111d8:	mov	r1, r0
   111dc:	movw	r2, #18204	; 0x471c
   111e0:	movt	r2, #1
   111e4:	mov	r0, #1
   111e8:	mov	r3, r5
   111ec:	bl	10df8 <__printf_chk@plt>
   111f0:	movw	r1, #18346	; 0x47aa
   111f4:	movt	r1, #1
   111f8:	mov	r0, #0
   111fc:	mov	r2, #5
   11200:	bl	10cf0 <dcgettext@plt>
   11204:	mov	r1, r0
   11208:	movw	r0, #18114	; 0x46c2
   1120c:	movt	r0, #1
   11210:	movw	r3, #17702	; 0x4526
   11214:	movt	r3, #1
   11218:	cmp	r4, r5
   1121c:	moveq	r3, r0
   11220:	mov	r0, #1
   11224:	mov	r2, r4
   11228:	bl	10df8 <__printf_chk@plt>
   1122c:	sub	sp, fp, #8
   11230:	pop	{r4, r5, fp, pc}
   11234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11238:	add	fp, sp, #28
   1123c:	sub	sp, sp, #12
   11240:	mov	r9, r1
   11244:	mov	r5, r0
   11248:	ldr	r0, [r1]
   1124c:	bl	115b0 <putchar_unlocked@plt+0x734>
   11250:	movw	r1, #17702	; 0x4526
   11254:	movt	r1, #1
   11258:	mov	r0, #6
   1125c:	bl	10e34 <setlocale@plt>
   11260:	movw	r6, #18031	; 0x466f
   11264:	movt	r6, #1
   11268:	movw	r1, #18001	; 0x4651
   1126c:	movt	r1, #1
   11270:	mov	r0, r6
   11274:	bl	10e58 <bindtextdomain@plt>
   11278:	mov	r0, r6
   1127c:	bl	10d08 <textdomain@plt>
   11280:	movw	r0, #5152	; 0x1420
   11284:	movt	r0, #1
   11288:	bl	14424 <putchar_unlocked@plt+0x35a8>
   1128c:	mov	r6, #10
   11290:	movw	r8, #18025	; 0x4669
   11294:	movt	r8, #1
   11298:	movw	r7, #18420	; 0x47f4
   1129c:	movt	r7, #1
   112a0:	mov	r0, #0
   112a4:	str	r0, [sp]
   112a8:	mov	r0, r5
   112ac:	mov	r1, r9
   112b0:	mov	r2, r8
   112b4:	mov	r3, r7
   112b8:	bl	10da4 <getopt_long@plt>
   112bc:	cmp	r0, #121	; 0x79
   112c0:	ble	112d4 <putchar_unlocked@plt+0x458>
   112c4:	cmp	r0, #122	; 0x7a
   112c8:	mov	r6, #0
   112cc:	beq	112a0 <putchar_unlocked@plt+0x424>
   112d0:	b	113cc <putchar_unlocked@plt+0x550>
   112d4:	cmn	r0, #1
   112d8:	bne	11360 <putchar_unlocked@plt+0x4e4>
   112dc:	movw	r4, #20760	; 0x5118
   112e0:	movt	r4, #2
   112e4:	ldr	r0, [r4]
   112e8:	cmp	r0, r5
   112ec:	bge	113d4 <putchar_unlocked@plt+0x558>
   112f0:	ldr	r0, [r4]
   112f4:	cmp	r0, r5
   112f8:	bge	11354 <putchar_unlocked@plt+0x4d8>
   112fc:	movw	r8, #18416	; 0x47f0
   11300:	movt	r8, #1
   11304:	movw	sl, #20772	; 0x5124
   11308:	movt	sl, #2
   1130c:	ldr	r7, [r9, r0, lsl #2]
   11310:	mov	r0, r7
   11314:	bl	11508 <putchar_unlocked@plt+0x68c>
   11318:	mov	r2, r0
   1131c:	cmp	r0, #0
   11320:	moveq	r7, r8
   11324:	movweq	r2, #1
   11328:	ldr	r3, [sl]
   1132c:	mov	r0, r7
   11330:	mov	r1, #1
   11334:	bl	10cd8 <fwrite_unlocked@plt>
   11338:	mov	r0, r6
   1133c:	bl	10e7c <putchar_unlocked@plt>
   11340:	ldr	r0, [r4]
   11344:	add	r0, r0, #1
   11348:	str	r0, [r4]
   1134c:	cmp	r0, r5
   11350:	blt	1130c <putchar_unlocked@plt+0x490>
   11354:	mov	r0, #0
   11358:	sub	sp, fp, #28
   1135c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11360:	cmn	r0, #3
   11364:	bne	113bc <putchar_unlocked@plt+0x540>
   11368:	movw	r0, #20680	; 0x50c8
   1136c:	movt	r0, #2
   11370:	ldr	r3, [r0]
   11374:	movw	r0, #20772	; 0x5124
   11378:	movt	r0, #2
   1137c:	ldr	r0, [r0]
   11380:	mov	r1, #0
   11384:	movw	r2, #18057	; 0x4689
   11388:	movt	r2, #1
   1138c:	movw	r7, #18041	; 0x4679
   11390:	movt	r7, #1
   11394:	str	r7, [sp]
   11398:	str	r2, [sp, #4]
   1139c:	str	r1, [sp, #8]
   113a0:	movw	r1, #17993	; 0x4649
   113a4:	movt	r1, #1
   113a8:	movw	r2, #18027	; 0x466b
   113ac:	movt	r2, #1
   113b0:	bl	135b8 <putchar_unlocked@plt+0x273c>
   113b4:	mov	r0, #0
   113b8:	bl	10dbc <exit@plt>
   113bc:	cmn	r0, #2
   113c0:	bne	113cc <putchar_unlocked@plt+0x550>
   113c4:	mov	r0, #0
   113c8:	bl	10f78 <putchar_unlocked@plt+0xfc>
   113cc:	mov	r0, #1
   113d0:	bl	10f78 <putchar_unlocked@plt+0xfc>
   113d4:	movw	r1, #18070	; 0x4696
   113d8:	movt	r1, #1
   113dc:	mov	r0, #0
   113e0:	mov	r2, #5
   113e4:	bl	10cf0 <dcgettext@plt>
   113e8:	mov	r2, r0
   113ec:	mov	r0, #0
   113f0:	mov	r1, #0
   113f4:	bl	10d68 <error@plt>
   113f8:	mov	r0, #1
   113fc:	bl	10f78 <putchar_unlocked@plt+0xfc>
   11400:	movw	r1, #20780	; 0x512c
   11404:	movt	r1, #2
   11408:	str	r0, [r1]
   1140c:	bx	lr
   11410:	movw	r1, #20784	; 0x5130
   11414:	movt	r1, #2
   11418:	strb	r0, [r1]
   1141c:	bx	lr
   11420:	push	{r4, r5, r6, sl, fp, lr}
   11424:	add	fp, sp, #16
   11428:	sub	sp, sp, #8
   1142c:	movw	r0, #20772	; 0x5124
   11430:	movt	r0, #2
   11434:	ldr	r0, [r0]
   11438:	bl	13f34 <putchar_unlocked@plt+0x30b8>
   1143c:	cmp	r0, #0
   11440:	beq	11468 <putchar_unlocked@plt+0x5ec>
   11444:	movw	r0, #20784	; 0x5130
   11448:	movt	r0, #2
   1144c:	ldrb	r0, [r0]
   11450:	cmp	r0, #0
   11454:	beq	11488 <putchar_unlocked@plt+0x60c>
   11458:	bl	10dd4 <__errno_location@plt>
   1145c:	ldr	r0, [r0]
   11460:	cmp	r0, #32
   11464:	bne	11488 <putchar_unlocked@plt+0x60c>
   11468:	movw	r0, #20768	; 0x5120
   1146c:	movt	r0, #2
   11470:	ldr	r0, [r0]
   11474:	bl	13f34 <putchar_unlocked@plt+0x30b8>
   11478:	cmp	r0, #0
   1147c:	subeq	sp, fp, #16
   11480:	popeq	{r4, r5, r6, sl, fp, pc}
   11484:	b	114f8 <putchar_unlocked@plt+0x67c>
   11488:	movw	r1, #18559	; 0x487f
   1148c:	movt	r1, #1
   11490:	mov	r0, #0
   11494:	mov	r2, #5
   11498:	bl	10cf0 <dcgettext@plt>
   1149c:	mov	r4, r0
   114a0:	movw	r0, #20780	; 0x512c
   114a4:	movt	r0, #2
   114a8:	ldr	r6, [r0]
   114ac:	bl	10dd4 <__errno_location@plt>
   114b0:	ldr	r5, [r0]
   114b4:	cmp	r6, #0
   114b8:	bne	114d4 <putchar_unlocked@plt+0x658>
   114bc:	movw	r2, #18575	; 0x488f
   114c0:	movt	r2, #1
   114c4:	mov	r0, #0
   114c8:	mov	r1, r5
   114cc:	mov	r3, r4
   114d0:	b	114f4 <putchar_unlocked@plt+0x678>
   114d4:	mov	r0, r6
   114d8:	bl	12c98 <putchar_unlocked@plt+0x1e1c>
   114dc:	mov	r3, r0
   114e0:	str	r4, [sp]
   114e4:	movw	r2, #18571	; 0x488b
   114e8:	movt	r2, #1
   114ec:	mov	r0, #0
   114f0:	mov	r1, r5
   114f4:	bl	10d68 <error@plt>
   114f8:	movw	r0, #20684	; 0x50cc
   114fc:	movt	r0, #2
   11500:	ldr	r0, [r0]
   11504:	bl	10cb4 <_exit@plt>
   11508:	push	{r4, r5, r6, sl, fp, lr}
   1150c:	add	fp, sp, #16
   11510:	mov	r4, r0
   11514:	mov	r5, r0
   11518:	ldrb	r6, [r5], #-1
   1151c:	bl	13b8c <putchar_unlocked@plt+0x2d10>
   11520:	sub	r2, r0, r4
   11524:	sub	r0, r6, #47	; 0x2f
   11528:	clz	r0, r0
   1152c:	lsr	r1, r0, #5
   11530:	mov	r0, r2
   11534:	cmp	r2, r1
   11538:	popls	{r4, r5, r6, sl, fp, pc}
   1153c:	ldrb	r3, [r5, r0]
   11540:	sub	r2, r0, #1
   11544:	cmp	r3, #47	; 0x2f
   11548:	beq	11530 <putchar_unlocked@plt+0x6b4>
   1154c:	pop	{r4, r5, r6, sl, fp, pc}
   11550:	push	{r4, r5, r6, sl, fp, lr}
   11554:	add	fp, sp, #16
   11558:	mov	r6, r0
   1155c:	bl	11508 <putchar_unlocked@plt+0x68c>
   11560:	mov	r4, r0
   11564:	cmp	r0, #0
   11568:	addeq	r0, r0, #1
   1156c:	add	r0, r0, #1
   11570:	bl	13b08 <putchar_unlocked@plt+0x2c8c>
   11574:	mov	r5, r0
   11578:	cmp	r0, #0
   1157c:	beq	115a8 <putchar_unlocked@plt+0x72c>
   11580:	mov	r0, r5
   11584:	mov	r1, r6
   11588:	mov	r2, r4
   1158c:	bl	10cc0 <memcpy@plt>
   11590:	cmp	r4, #0
   11594:	moveq	r0, #46	; 0x2e
   11598:	strbeq	r0, [r5, r4]
   1159c:	moveq	r4, #1
   115a0:	mov	r0, #0
   115a4:	strb	r0, [r5, r4]
   115a8:	mov	r0, r5
   115ac:	pop	{r4, r5, r6, sl, fp, pc}
   115b0:	push	{r4, r5, fp, lr}
   115b4:	add	fp, sp, #8
   115b8:	cmp	r0, #0
   115bc:	beq	11650 <putchar_unlocked@plt+0x7d4>
   115c0:	mov	r4, r0
   115c4:	mov	r1, #47	; 0x2f
   115c8:	bl	10e40 <strrchr@plt>
   115cc:	cmp	r0, #0
   115d0:	mov	r5, r4
   115d4:	addne	r5, r0, #1
   115d8:	sub	r0, r5, r4
   115dc:	cmp	r0, #7
   115e0:	blt	11634 <putchar_unlocked@plt+0x7b8>
   115e4:	sub	r0, r5, #7
   115e8:	movw	r1, #18634	; 0x48ca
   115ec:	movt	r1, #1
   115f0:	mov	r2, #7
   115f4:	bl	10e64 <strncmp@plt>
   115f8:	cmp	r0, #0
   115fc:	bne	11634 <putchar_unlocked@plt+0x7b8>
   11600:	movw	r1, #18642	; 0x48d2
   11604:	movt	r1, #1
   11608:	mov	r0, r5
   1160c:	mov	r2, #3
   11610:	bl	10e64 <strncmp@plt>
   11614:	cmp	r0, #0
   11618:	beq	11624 <putchar_unlocked@plt+0x7a8>
   1161c:	mov	r4, r5
   11620:	b	11634 <putchar_unlocked@plt+0x7b8>
   11624:	add	r4, r5, #3
   11628:	movw	r0, #20752	; 0x5110
   1162c:	movt	r0, #2
   11630:	str	r4, [r0]
   11634:	movw	r0, #20756	; 0x5114
   11638:	movt	r0, #2
   1163c:	str	r4, [r0]
   11640:	movw	r0, #20788	; 0x5134
   11644:	movt	r0, #2
   11648:	str	r4, [r0]
   1164c:	pop	{r4, r5, fp, pc}
   11650:	movw	r0, #20768	; 0x5120
   11654:	movt	r0, #2
   11658:	ldr	r3, [r0]
   1165c:	movw	r0, #18578	; 0x4892
   11660:	movt	r0, #1
   11664:	mov	r1, #55	; 0x37
   11668:	mov	r2, #1
   1166c:	bl	10d20 <fwrite@plt>
   11670:	bl	10e70 <abort@plt>
   11674:	push	{r4, r5, r6, sl, fp, lr}
   11678:	add	fp, sp, #16
   1167c:	mov	r4, r0
   11680:	movw	r0, #20792	; 0x5138
   11684:	movt	r0, #2
   11688:	cmp	r4, #0
   1168c:	moveq	r4, r0
   11690:	bl	10dd4 <__errno_location@plt>
   11694:	mov	r5, r0
   11698:	ldr	r6, [r0]
   1169c:	mov	r0, r4
   116a0:	mov	r1, #48	; 0x30
   116a4:	bl	139b4 <putchar_unlocked@plt+0x2b38>
   116a8:	str	r6, [r5]
   116ac:	pop	{r4, r5, r6, sl, fp, pc}
   116b0:	movw	r1, #20792	; 0x5138
   116b4:	movt	r1, #2
   116b8:	cmp	r0, #0
   116bc:	movne	r1, r0
   116c0:	ldr	r0, [r1]
   116c4:	bx	lr
   116c8:	movw	r2, #20792	; 0x5138
   116cc:	movt	r2, #2
   116d0:	cmp	r0, #0
   116d4:	movne	r2, r0
   116d8:	str	r1, [r2]
   116dc:	bx	lr
   116e0:	movw	r3, #20792	; 0x5138
   116e4:	movt	r3, #2
   116e8:	cmp	r0, #0
   116ec:	movne	r3, r0
   116f0:	ubfx	r0, r1, #5, #3
   116f4:	add	r0, r3, r0, lsl #2
   116f8:	ldr	r3, [r0, #8]
   116fc:	and	r1, r1, #31
   11700:	eor	r2, r2, r3, lsr r1
   11704:	and	r2, r2, #1
   11708:	eor	r2, r3, r2, lsl r1
   1170c:	str	r2, [r0, #8]
   11710:	mov	r0, #1
   11714:	and	r0, r0, r3, lsr r1
   11718:	bx	lr
   1171c:	movw	r2, #20792	; 0x5138
   11720:	movt	r2, #2
   11724:	cmp	r0, #0
   11728:	movne	r2, r0
   1172c:	ldr	r0, [r2, #4]
   11730:	str	r1, [r2, #4]
   11734:	bx	lr
   11738:	movw	r3, #20792	; 0x5138
   1173c:	movt	r3, #2
   11740:	cmp	r0, #0
   11744:	movne	r3, r0
   11748:	mov	r0, #10
   1174c:	str	r0, [r3]
   11750:	cmp	r1, #0
   11754:	cmpne	r2, #0
   11758:	bne	11768 <putchar_unlocked@plt+0x8ec>
   1175c:	push	{fp, lr}
   11760:	mov	fp, sp
   11764:	bl	10e70 <abort@plt>
   11768:	str	r1, [r3, #40]	; 0x28
   1176c:	str	r2, [r3, #44]	; 0x2c
   11770:	bx	lr
   11774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11778:	add	fp, sp, #28
   1177c:	sub	sp, sp, #20
   11780:	mov	r8, r3
   11784:	mov	r9, r2
   11788:	mov	sl, r1
   1178c:	mov	r7, r0
   11790:	ldr	r0, [fp, #8]
   11794:	movw	r5, #20792	; 0x5138
   11798:	movt	r5, #2
   1179c:	cmp	r0, #0
   117a0:	movne	r5, r0
   117a4:	bl	10dd4 <__errno_location@plt>
   117a8:	mov	r4, r0
   117ac:	ldm	r5, {r0, r1}
   117b0:	ldr	r2, [r5, #40]	; 0x28
   117b4:	ldr	r3, [r5, #44]	; 0x2c
   117b8:	ldr	r6, [r4]
   117bc:	add	r5, r5, #8
   117c0:	stm	sp, {r0, r1, r5}
   117c4:	str	r2, [sp, #12]
   117c8:	str	r3, [sp, #16]
   117cc:	mov	r0, r7
   117d0:	mov	r1, sl
   117d4:	mov	r2, r9
   117d8:	mov	r3, r8
   117dc:	bl	117ec <putchar_unlocked@plt+0x970>
   117e0:	str	r6, [r4]
   117e4:	sub	sp, fp, #28
   117e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117f0:	add	fp, sp, #28
   117f4:	sub	sp, sp, #156	; 0x9c
   117f8:	mov	r9, r3
   117fc:	str	r2, [fp, #-84]	; 0xffffffac
   11800:	mov	r6, r1
   11804:	mov	r7, r0
   11808:	ldr	r0, [fp, #12]
   1180c:	and	r1, r0, #4
   11810:	str	r1, [sp, #32]
   11814:	and	r1, r0, #1
   11818:	str	r1, [sp, #36]	; 0x24
   1181c:	ubfx	sl, r0, #1, #1
   11820:	bl	10d38 <__ctype_get_mb_cur_max@plt>
   11824:	str	r0, [sp, #40]	; 0x28
   11828:	ldr	r0, [fp, #24]
   1182c:	str	r0, [sp, #76]	; 0x4c
   11830:	ldr	r0, [fp, #20]
   11834:	str	r0, [sp, #68]	; 0x44
   11838:	ldr	r0, [fp, #8]
   1183c:	str	r0, [fp, #-60]	; 0xffffffc4
   11840:	mov	r0, #0
   11844:	str	r0, [sp, #72]	; 0x48
   11848:	mov	r0, #0
   1184c:	str	r0, [sp, #92]	; 0x5c
   11850:	mov	r0, #0
   11854:	str	r0, [fp, #-72]	; 0xffffffb8
   11858:	mov	r0, #0
   1185c:	mov	r1, #0
   11860:	str	r1, [fp, #-56]	; 0xffffffc8
   11864:	mov	r1, #0
   11868:	str	r1, [sp, #56]	; 0x38
   1186c:	mov	r5, #1
   11870:	str	r7, [sp, #80]	; 0x50
   11874:	mov	r4, r6
   11878:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1187c:	cmp	r6, #10
   11880:	bhi	127e8 <putchar_unlocked@plt+0x196c>
   11884:	add	r1, pc, #20
   11888:	mov	r8, #0
   1188c:	mov	r2, #1
   11890:	mov	r3, #0
   11894:	ldr	ip, [fp, #-84]	; 0xffffffac
   11898:	mov	lr, r9
   1189c:	ldr	pc, [r1, r6, lsl #2]
   118a0:	andeq	r1, r1, r8, ror r9
   118a4:	andeq	r1, r1, r8, lsr #19
   118a8:	andeq	r1, r1, r8, ror #18
   118ac:	andeq	r1, r1, r0, ror #18
   118b0:	muleq	r1, ip, r9
   118b4:	strdeq	r1, [r1], -ip
   118b8:	andeq	r1, r1, r8, lsl #19
   118bc:	andeq	r1, r1, r8, asr sl
   118c0:	andeq	r1, r1, ip, asr #17
   118c4:	andeq	r1, r1, ip, asr #17
   118c8:	strdeq	r1, [r1], -r4
   118cc:	movw	r0, #18726	; 0x4926
   118d0:	movt	r0, #1
   118d4:	mov	r1, r6
   118d8:	bl	12df4 <putchar_unlocked@plt+0x1f78>
   118dc:	str	r0, [sp, #68]	; 0x44
   118e0:	movw	r0, #18728	; 0x4928
   118e4:	movt	r0, #1
   118e8:	mov	r1, r6
   118ec:	bl	12df4 <putchar_unlocked@plt+0x1f78>
   118f0:	str	r0, [sp, #76]	; 0x4c
   118f4:	mov	r8, #0
   118f8:	tst	sl, #1
   118fc:	bne	11934 <putchar_unlocked@plt+0xab8>
   11900:	ldr	r0, [sp, #68]	; 0x44
   11904:	ldrb	r0, [r0]
   11908:	cmp	r0, #0
   1190c:	beq	11934 <putchar_unlocked@plt+0xab8>
   11910:	ldr	r1, [sp, #68]	; 0x44
   11914:	add	r1, r1, #1
   11918:	mov	r8, #0
   1191c:	cmp	r8, r4
   11920:	strbcc	r0, [r7, r8]
   11924:	ldrb	r0, [r1, r8]
   11928:	add	r8, r8, #1
   1192c:	cmp	r0, #0
   11930:	bne	1191c <putchar_unlocked@plt+0xaa0>
   11934:	ldr	r6, [sp, #76]	; 0x4c
   11938:	mov	r0, r6
   1193c:	bl	10dc8 <strlen@plt>
   11940:	str	r0, [fp, #-72]	; 0xffffffb8
   11944:	str	r6, [sp, #92]	; 0x5c
   11948:	mov	r2, #1
   1194c:	mov	r3, sl
   11950:	ldr	ip, [fp, #-84]	; 0xffffffac
   11954:	mov	lr, r9
   11958:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1195c:	b	11a58 <putchar_unlocked@plt+0xbdc>
   11960:	mov	r0, #1
   11964:	b	119a8 <putchar_unlocked@plt+0xb2c>
   11968:	tst	sl, #1
   1196c:	bne	119a8 <putchar_unlocked@plt+0xb2c>
   11970:	mov	r2, r0
   11974:	b	119d0 <putchar_unlocked@plt+0xb54>
   11978:	mov	r6, #0
   1197c:	mov	r8, #0
   11980:	mov	r2, r0
   11984:	b	11a54 <putchar_unlocked@plt+0xbd8>
   11988:	mov	r0, #1
   1198c:	str	r0, [fp, #-72]	; 0xffffffb8
   11990:	mov	r8, #0
   11994:	mov	r6, #5
   11998:	b	11a14 <putchar_unlocked@plt+0xb98>
   1199c:	mov	r2, #1
   119a0:	tst	sl, #1
   119a4:	beq	119d0 <putchar_unlocked@plt+0xb54>
   119a8:	mov	r1, #1
   119ac:	str	r1, [fp, #-72]	; 0xffffffb8
   119b0:	mov	r8, #0
   119b4:	mov	r6, #2
   119b8:	movw	r1, #18728	; 0x4928
   119bc:	movt	r1, #1
   119c0:	str	r1, [sp, #92]	; 0x5c
   119c4:	mov	r2, r0
   119c8:	mov	r3, #1
   119cc:	b	11a58 <putchar_unlocked@plt+0xbdc>
   119d0:	mov	r8, #1
   119d4:	mov	r6, #2
   119d8:	cmp	r4, #0
   119dc:	movne	r0, #39	; 0x27
   119e0:	strbne	r0, [r7]
   119e4:	movw	r0, #18728	; 0x4928
   119e8:	movt	r0, #1
   119ec:	str	r0, [sp, #92]	; 0x5c
   119f0:	mov	r0, #1
   119f4:	str	r0, [fp, #-72]	; 0xffffffb8
   119f8:	b	11a54 <putchar_unlocked@plt+0xbd8>
   119fc:	mov	r6, #5
   11a00:	tst	sl, #1
   11a04:	beq	11a2c <putchar_unlocked@plt+0xbb0>
   11a08:	mov	r0, #1
   11a0c:	str	r0, [fp, #-72]	; 0xffffffb8
   11a10:	mov	r8, #0
   11a14:	movw	r0, #18724	; 0x4924
   11a18:	movt	r0, #1
   11a1c:	str	r0, [sp, #92]	; 0x5c
   11a20:	mov	r2, #1
   11a24:	mov	r3, #1
   11a28:	b	11a58 <putchar_unlocked@plt+0xbdc>
   11a2c:	cmp	r4, #0
   11a30:	movne	r0, #34	; 0x22
   11a34:	strbne	r0, [r7]
   11a38:	mov	r8, #1
   11a3c:	movw	r0, #18724	; 0x4924
   11a40:	movt	r0, #1
   11a44:	str	r0, [sp, #92]	; 0x5c
   11a48:	mov	r0, #1
   11a4c:	str	r0, [fp, #-72]	; 0xffffffb8
   11a50:	mov	r2, #1
   11a54:	mov	r3, #0
   11a58:	ldr	r0, [fp, #16]
   11a5c:	cmp	r0, #0
   11a60:	movwne	r0, #1
   11a64:	and	r0, r0, r3
   11a68:	str	r0, [fp, #-88]	; 0xffffffa8
   11a6c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11a70:	cmp	r0, #0
   11a74:	movwne	r0, #1
   11a78:	and	r1, r0, r3
   11a7c:	and	r1, r2, r1
   11a80:	str	r1, [sp, #48]	; 0x30
   11a84:	str	r6, [fp, #-60]	; 0xffffffc4
   11a88:	subs	r6, r6, #2
   11a8c:	clz	r1, r6
   11a90:	lsr	r1, r1, #5
   11a94:	and	r1, r1, r3
   11a98:	str	r1, [sp, #60]	; 0x3c
   11a9c:	str	r6, [fp, #-80]	; 0xffffffb0
   11aa0:	mov	r1, r6
   11aa4:	movwne	r1, #1
   11aa8:	str	r3, [fp, #-76]	; 0xffffffb4
   11aac:	eor	r3, r3, #1
   11ab0:	str	r3, [sp, #88]	; 0x58
   11ab4:	orr	r3, r1, r3
   11ab8:	str	r3, [sp, #64]	; 0x40
   11abc:	and	r1, r1, r2
   11ac0:	str	r1, [fp, #-68]	; 0xffffffbc
   11ac4:	and	r0, r0, r1
   11ac8:	str	r0, [fp, #-64]	; 0xffffffc0
   11acc:	str	r2, [sp, #84]	; 0x54
   11ad0:	eor	r0, r2, #1
   11ad4:	str	r0, [sp, #52]	; 0x34
   11ad8:	mov	r6, #0
   11adc:	cmn	lr, #1
   11ae0:	beq	11af0 <putchar_unlocked@plt+0xc74>
   11ae4:	cmp	r6, lr
   11ae8:	bne	11afc <putchar_unlocked@plt+0xc80>
   11aec:	b	12668 <putchar_unlocked@plt+0x17ec>
   11af0:	ldrb	r0, [ip, r6]
   11af4:	cmp	r0, #0
   11af8:	beq	12668 <putchar_unlocked@plt+0x17ec>
   11afc:	str	r5, [fp, #-48]	; 0xffffffd0
   11b00:	mov	sl, #0
   11b04:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11b08:	cmp	r0, #0
   11b0c:	beq	11b40 <putchar_unlocked@plt+0xcc4>
   11b10:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11b14:	add	r5, r6, r0
   11b18:	cmp	r0, #2
   11b1c:	bcc	11b38 <putchar_unlocked@plt+0xcbc>
   11b20:	cmn	lr, #1
   11b24:	bne	11b38 <putchar_unlocked@plt+0xcbc>
   11b28:	mov	r0, ip
   11b2c:	bl	10dc8 <strlen@plt>
   11b30:	ldr	ip, [fp, #-84]	; 0xffffffac
   11b34:	mov	lr, r0
   11b38:	cmp	r5, lr
   11b3c:	bls	11b4c <putchar_unlocked@plt+0xcd0>
   11b40:	mov	r0, #0
   11b44:	str	r0, [fp, #-52]	; 0xffffffcc
   11b48:	b	11b98 <putchar_unlocked@plt+0xd1c>
   11b4c:	mov	r5, r4
   11b50:	mov	r4, lr
   11b54:	add	r0, ip, r6
   11b58:	ldr	r1, [sp, #92]	; 0x5c
   11b5c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11b60:	bl	10ce4 <memcmp@plt>
   11b64:	cmp	r0, #0
   11b68:	mov	r1, r0
   11b6c:	movwne	r1, #1
   11b70:	ldr	r2, [sp, #88]	; 0x58
   11b74:	orr	r1, r1, r2
   11b78:	tst	r1, #1
   11b7c:	beq	1272c <putchar_unlocked@plt+0x18b0>
   11b80:	clz	r0, r0
   11b84:	lsr	r0, r0, #5
   11b88:	str	r0, [fp, #-52]	; 0xffffffcc
   11b8c:	ldr	ip, [fp, #-84]	; 0xffffffac
   11b90:	mov	lr, r4
   11b94:	mov	r4, r5
   11b98:	ldrb	r5, [ip, r6]
   11b9c:	cmp	r5, #126	; 0x7e
   11ba0:	bhi	11f5c <putchar_unlocked@plt+0x10e0>
   11ba4:	mov	r9, #1
   11ba8:	mov	r2, #110	; 0x6e
   11bac:	mov	r0, #97	; 0x61
   11bb0:	add	r3, pc, #4
   11bb4:	mov	r1, #0
   11bb8:	ldr	pc, [r3, r5, lsl #2]
   11bbc:	andeq	r1, r1, r4, asr lr
   11bc0:	andeq	r1, r1, ip, asr pc
   11bc4:	andeq	r1, r1, ip, asr pc
   11bc8:	andeq	r1, r1, ip, asr pc
   11bcc:	andeq	r1, r1, ip, asr pc
   11bd0:	andeq	r1, r1, ip, asr pc
   11bd4:	andeq	r1, r1, ip, asr pc
   11bd8:	andeq	r2, r1, r0, lsr #32
   11bdc:	andeq	r1, r1, r4, lsr lr
   11be0:	andeq	r1, r1, ip, lsr #28
   11be4:	andeq	r1, r1, r0, asr #28
   11be8:	andeq	r1, r1, r4, asr #29
   11bec:	andeq	r1, r1, r4, lsr #28
   11bf0:	andeq	r1, r1, ip, lsr lr
   11bf4:	andeq	r1, r1, ip, asr pc
   11bf8:	andeq	r1, r1, ip, asr pc
   11bfc:	andeq	r1, r1, ip, asr pc
   11c00:	andeq	r1, r1, ip, asr pc
   11c04:	andeq	r1, r1, ip, asr pc
   11c08:	andeq	r1, r1, ip, asr pc
   11c0c:	andeq	r1, r1, ip, asr pc
   11c10:	andeq	r1, r1, ip, asr pc
   11c14:	andeq	r1, r1, ip, asr pc
   11c18:	andeq	r1, r1, ip, asr pc
   11c1c:	andeq	r1, r1, ip, asr pc
   11c20:	andeq	r1, r1, ip, asr pc
   11c24:	andeq	r1, r1, ip, asr pc
   11c28:	andeq	r1, r1, ip, asr pc
   11c2c:	andeq	r1, r1, ip, asr pc
   11c30:	andeq	r1, r1, ip, asr pc
   11c34:	andeq	r1, r1, ip, asr pc
   11c38:	andeq	r1, r1, ip, asr pc
   11c3c:	ldrdeq	r1, [r1], -r0
   11c40:	ldrdeq	r1, [r1], -r4
   11c44:	ldrdeq	r1, [r1], -r4
   11c48:	andeq	r1, r1, ip, asr #27
   11c4c:	ldrdeq	r1, [r1], -r4
   11c50:			; <UNDEFINED> instruction: 0x00011db8
   11c54:	ldrdeq	r1, [r1], -r4
   11c58:	andeq	r1, r1, ip, asr #29
   11c5c:	ldrdeq	r1, [r1], -r4
   11c60:	ldrdeq	r1, [r1], -r4
   11c64:	ldrdeq	r1, [r1], -r4
   11c68:			; <UNDEFINED> instruction: 0x00011db8
   11c6c:			; <UNDEFINED> instruction: 0x00011db8
   11c70:			; <UNDEFINED> instruction: 0x00011db8
   11c74:			; <UNDEFINED> instruction: 0x00011db8
   11c78:			; <UNDEFINED> instruction: 0x00011db8
   11c7c:			; <UNDEFINED> instruction: 0x00011db8
   11c80:			; <UNDEFINED> instruction: 0x00011db8
   11c84:			; <UNDEFINED> instruction: 0x00011db8
   11c88:			; <UNDEFINED> instruction: 0x00011db8
   11c8c:			; <UNDEFINED> instruction: 0x00011db8
   11c90:			; <UNDEFINED> instruction: 0x00011db8
   11c94:			; <UNDEFINED> instruction: 0x00011db8
   11c98:			; <UNDEFINED> instruction: 0x00011db8
   11c9c:			; <UNDEFINED> instruction: 0x00011db8
   11ca0:			; <UNDEFINED> instruction: 0x00011db8
   11ca4:			; <UNDEFINED> instruction: 0x00011db8
   11ca8:	ldrdeq	r1, [r1], -r4
   11cac:	ldrdeq	r1, [r1], -r4
   11cb0:	ldrdeq	r1, [r1], -r4
   11cb4:	ldrdeq	r1, [r1], -r4
   11cb8:	muleq	r1, r4, lr
   11cbc:	andeq	r1, r1, ip, asr pc
   11cc0:			; <UNDEFINED> instruction: 0x00011db8
   11cc4:			; <UNDEFINED> instruction: 0x00011db8
   11cc8:			; <UNDEFINED> instruction: 0x00011db8
   11ccc:			; <UNDEFINED> instruction: 0x00011db8
   11cd0:			; <UNDEFINED> instruction: 0x00011db8
   11cd4:			; <UNDEFINED> instruction: 0x00011db8
   11cd8:			; <UNDEFINED> instruction: 0x00011db8
   11cdc:			; <UNDEFINED> instruction: 0x00011db8
   11ce0:			; <UNDEFINED> instruction: 0x00011db8
   11ce4:			; <UNDEFINED> instruction: 0x00011db8
   11ce8:			; <UNDEFINED> instruction: 0x00011db8
   11cec:			; <UNDEFINED> instruction: 0x00011db8
   11cf0:			; <UNDEFINED> instruction: 0x00011db8
   11cf4:			; <UNDEFINED> instruction: 0x00011db8
   11cf8:			; <UNDEFINED> instruction: 0x00011db8
   11cfc:			; <UNDEFINED> instruction: 0x00011db8
   11d00:			; <UNDEFINED> instruction: 0x00011db8
   11d04:			; <UNDEFINED> instruction: 0x00011db8
   11d08:			; <UNDEFINED> instruction: 0x00011db8
   11d0c:			; <UNDEFINED> instruction: 0x00011db8
   11d10:			; <UNDEFINED> instruction: 0x00011db8
   11d14:			; <UNDEFINED> instruction: 0x00011db8
   11d18:			; <UNDEFINED> instruction: 0x00011db8
   11d1c:			; <UNDEFINED> instruction: 0x00011db8
   11d20:			; <UNDEFINED> instruction: 0x00011db8
   11d24:			; <UNDEFINED> instruction: 0x00011db8
   11d28:	ldrdeq	r1, [r1], -r4
   11d2c:	andeq	r1, r1, r0, lsl #28
   11d30:			; <UNDEFINED> instruction: 0x00011db8
   11d34:	ldrdeq	r1, [r1], -r4
   11d38:			; <UNDEFINED> instruction: 0x00011db8
   11d3c:	ldrdeq	r1, [r1], -r4
   11d40:			; <UNDEFINED> instruction: 0x00011db8
   11d44:			; <UNDEFINED> instruction: 0x00011db8
   11d48:			; <UNDEFINED> instruction: 0x00011db8
   11d4c:			; <UNDEFINED> instruction: 0x00011db8
   11d50:			; <UNDEFINED> instruction: 0x00011db8
   11d54:			; <UNDEFINED> instruction: 0x00011db8
   11d58:			; <UNDEFINED> instruction: 0x00011db8
   11d5c:			; <UNDEFINED> instruction: 0x00011db8
   11d60:			; <UNDEFINED> instruction: 0x00011db8
   11d64:			; <UNDEFINED> instruction: 0x00011db8
   11d68:			; <UNDEFINED> instruction: 0x00011db8
   11d6c:			; <UNDEFINED> instruction: 0x00011db8
   11d70:			; <UNDEFINED> instruction: 0x00011db8
   11d74:			; <UNDEFINED> instruction: 0x00011db8
   11d78:			; <UNDEFINED> instruction: 0x00011db8
   11d7c:			; <UNDEFINED> instruction: 0x00011db8
   11d80:			; <UNDEFINED> instruction: 0x00011db8
   11d84:			; <UNDEFINED> instruction: 0x00011db8
   11d88:			; <UNDEFINED> instruction: 0x00011db8
   11d8c:			; <UNDEFINED> instruction: 0x00011db8
   11d90:			; <UNDEFINED> instruction: 0x00011db8
   11d94:			; <UNDEFINED> instruction: 0x00011db8
   11d98:			; <UNDEFINED> instruction: 0x00011db8
   11d9c:			; <UNDEFINED> instruction: 0x00011db8
   11da0:			; <UNDEFINED> instruction: 0x00011db8
   11da4:			; <UNDEFINED> instruction: 0x00011db8
   11da8:	andeq	r1, r1, r0, ror #27
   11dac:	ldrdeq	r1, [r1], -r4
   11db0:	andeq	r1, r1, r0, ror #27
   11db4:	andeq	r1, r1, ip, asr #27
   11db8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11dbc:	cmp	r0, #0
   11dc0:	beq	12034 <putchar_unlocked@plt+0x11b8>
   11dc4:	ldr	r0, [fp, #16]
   11dc8:	b	12038 <putchar_unlocked@plt+0x11bc>
   11dcc:	mov	r9, #0
   11dd0:	cmp	r6, #0
   11dd4:	beq	11fd0 <putchar_unlocked@plt+0x1154>
   11dd8:	mov	sl, #0
   11ddc:	b	11db8 <putchar_unlocked@plt+0xf3c>
   11de0:	mov	r9, #0
   11de4:	cmn	lr, #1
   11de8:	beq	11fb4 <putchar_unlocked@plt+0x1138>
   11dec:	cmp	r6, #0
   11df0:	bne	11dd8 <putchar_unlocked@plt+0xf5c>
   11df4:	cmp	lr, #1
   11df8:	beq	11fd0 <putchar_unlocked@plt+0x1154>
   11dfc:	b	11dd8 <putchar_unlocked@plt+0xf5c>
   11e00:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11e04:	cmp	r0, #2
   11e08:	bne	11ffc <putchar_unlocked@plt+0x1180>
   11e0c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11e10:	tst	r0, #1
   11e14:	bne	12744 <putchar_unlocked@plt+0x18c8>
   11e18:	mov	sl, #0
   11e1c:	mov	r0, #92	; 0x5c
   11e20:	b	12010 <putchar_unlocked@plt+0x1194>
   11e24:	mov	r0, #102	; 0x66
   11e28:	b	12020 <putchar_unlocked@plt+0x11a4>
   11e2c:	mov	r2, #116	; 0x74
   11e30:	b	11e40 <putchar_unlocked@plt+0xfc4>
   11e34:	mov	r0, #98	; 0x62
   11e38:	b	12020 <putchar_unlocked@plt+0x11a4>
   11e3c:	mov	r2, #114	; 0x72
   11e40:	ldr	r0, [sp, #64]	; 0x40
   11e44:	tst	r0, #1
   11e48:	mov	r0, r2
   11e4c:	bne	12020 <putchar_unlocked@plt+0x11a4>
   11e50:	b	12744 <putchar_unlocked@plt+0x18c8>
   11e54:	ldr	r0, [sp, #84]	; 0x54
   11e58:	tst	r0, #1
   11e5c:	beq	12110 <putchar_unlocked@plt+0x1294>
   11e60:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11e64:	tst	r0, #1
   11e68:	bne	12744 <putchar_unlocked@plt+0x18c8>
   11e6c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11e70:	cmp	r0, #2
   11e74:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11e78:	movwne	r0, #1
   11e7c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11e80:	orr	r0, r0, r2
   11e84:	tst	r0, #1
   11e88:	beq	12504 <putchar_unlocked@plt+0x1688>
   11e8c:	mov	r0, r8
   11e90:	b	12538 <putchar_unlocked@plt+0x16bc>
   11e94:	mov	sl, #0
   11e98:	mov	r5, #63	; 0x3f
   11e9c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11ea0:	cmp	r0, #5
   11ea4:	beq	122c4 <putchar_unlocked@plt+0x1448>
   11ea8:	cmp	r0, #2
   11eac:	bne	12364 <putchar_unlocked@plt+0x14e8>
   11eb0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11eb4:	tst	r0, #1
   11eb8:	mov	r9, #0
   11ebc:	beq	11db8 <putchar_unlocked@plt+0xf3c>
   11ec0:	b	12744 <putchar_unlocked@plt+0x18c8>
   11ec4:	mov	r0, #118	; 0x76
   11ec8:	b	12020 <putchar_unlocked@plt+0x11a4>
   11ecc:	mov	r5, #39	; 0x27
   11ed0:	mov	r0, #1
   11ed4:	str	r0, [sp, #56]	; 0x38
   11ed8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11edc:	cmp	r0, #2
   11ee0:	bne	12130 <putchar_unlocked@plt+0x12b4>
   11ee4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11ee8:	tst	r0, #1
   11eec:	bne	12744 <putchar_unlocked@plt+0x18c8>
   11ef0:	ldr	r2, [sp, #72]	; 0x48
   11ef4:	cmp	r2, #0
   11ef8:	mov	r0, r2
   11efc:	movwne	r0, #1
   11f00:	clz	r1, r4
   11f04:	lsr	r1, r1, #5
   11f08:	orrs	r0, r0, r1
   11f0c:	moveq	r2, r4
   11f10:	str	r2, [sp, #72]	; 0x48
   11f14:	moveq	r4, r0
   11f18:	cmp	r8, r4
   11f1c:	movcc	r0, #39	; 0x27
   11f20:	strbcc	r0, [r7, r8]
   11f24:	add	r0, r8, #1
   11f28:	cmp	r0, r4
   11f2c:	movcc	r1, #92	; 0x5c
   11f30:	strbcc	r1, [r7, r0]
   11f34:	add	r0, r8, #2
   11f38:	cmp	r0, r4
   11f3c:	movcc	r1, #39	; 0x27
   11f40:	strbcc	r1, [r7, r0]
   11f44:	add	r8, r8, #3
   11f48:	mov	r0, #0
   11f4c:	str	r0, [fp, #-56]	; 0xffffffc8
   11f50:	mov	sl, #0
   11f54:	mov	r9, #1
   11f58:	b	11db8 <putchar_unlocked@plt+0xf3c>
   11f5c:	str	r4, [sp, #24]
   11f60:	ldr	r0, [sp, #40]	; 0x28
   11f64:	cmp	r0, #1
   11f68:	bne	12138 <putchar_unlocked@plt+0x12bc>
   11f6c:	str	lr, [sp, #28]
   11f70:	bl	10db0 <__ctype_b_loc@plt>
   11f74:	ldr	ip, [fp, #-84]	; 0xffffffac
   11f78:	ldr	r0, [r0]
   11f7c:	add	r0, r0, r5, lsl #1
   11f80:	ldrb	r0, [r0, #1]
   11f84:	ubfx	r9, r0, #6, #1
   11f88:	mov	r1, #1
   11f8c:	ldr	r4, [sp, #24]
   11f90:	ldr	r0, [sp, #52]	; 0x34
   11f94:	orr	r0, r9, r0
   11f98:	mov	r2, r1
   11f9c:	cmp	r1, #1
   11fa0:	bhi	1236c <putchar_unlocked@plt+0x14f0>
   11fa4:	tst	r0, #1
   11fa8:	beq	1236c <putchar_unlocked@plt+0x14f0>
   11fac:	ldr	lr, [sp, #28]
   11fb0:	b	11db8 <putchar_unlocked@plt+0xf3c>
   11fb4:	cmp	r6, #0
   11fb8:	ldrbeq	r0, [ip, #1]
   11fbc:	cmpeq	r0, #0
   11fc0:	beq	11fd0 <putchar_unlocked@plt+0x1154>
   11fc4:	mvn	lr, #0
   11fc8:	mov	sl, #0
   11fcc:	b	11db8 <putchar_unlocked@plt+0xf3c>
   11fd0:	mov	r1, #1
   11fd4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11fd8:	cmp	r0, #2
   11fdc:	bne	11ff4 <putchar_unlocked@plt+0x1178>
   11fe0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11fe4:	tst	r0, #1
   11fe8:	mov	r9, r1
   11fec:	beq	11db8 <putchar_unlocked@plt+0xf3c>
   11ff0:	b	12744 <putchar_unlocked@plt+0x18c8>
   11ff4:	mov	r9, r1
   11ff8:	b	11db8 <putchar_unlocked@plt+0xf3c>
   11ffc:	mov	sl, #0
   12000:	mov	r0, #92	; 0x5c
   12004:	ldr	r1, [sp, #48]	; 0x30
   12008:	cmp	r1, #0
   1200c:	beq	12020 <putchar_unlocked@plt+0x11a4>
   12010:	mov	r9, #0
   12014:	cmp	sl, #0
   12018:	beq	125d0 <putchar_unlocked@plt+0x1754>
   1201c:	b	1260c <putchar_unlocked@plt+0x1790>
   12020:	mov	r9, #0
   12024:	ldr	r1, [sp, #84]	; 0x54
   12028:	tst	r1, #1
   1202c:	mov	sl, #0
   12030:	bne	12070 <putchar_unlocked@plt+0x11f4>
   12034:	ldr	r0, [fp, #-88]	; 0xffffffa8
   12038:	cmp	r0, #0
   1203c:	mov	r0, r5
   12040:	beq	12064 <putchar_unlocked@plt+0x11e8>
   12044:	ubfx	r0, r5, #5, #3
   12048:	ldr	r1, [fp, #16]
   1204c:	ldr	r0, [r1, r0, lsl #2]
   12050:	and	r1, r5, #31
   12054:	mov	r2, #1
   12058:	tst	r0, r2, lsl r1
   1205c:	mov	r0, r5
   12060:	bne	12070 <putchar_unlocked@plt+0x11f4>
   12064:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12068:	cmp	r1, #0
   1206c:	beq	125c8 <putchar_unlocked@plt+0x174c>
   12070:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12074:	tst	r1, #1
   12078:	bne	12744 <putchar_unlocked@plt+0x18c8>
   1207c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12080:	cmp	r1, #2
   12084:	ldr	r1, [fp, #-80]	; 0xffffffb0
   12088:	movwne	r1, #1
   1208c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   12090:	orr	r1, r1, r2
   12094:	tst	r1, #1
   12098:	beq	120a4 <putchar_unlocked@plt+0x1228>
   1209c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   120a0:	b	120e0 <putchar_unlocked@plt+0x1264>
   120a4:	cmp	r8, r4
   120a8:	movcc	r1, #39	; 0x27
   120ac:	strbcc	r1, [r7, r8]
   120b0:	add	r1, r8, #1
   120b4:	cmp	r1, r4
   120b8:	ldr	r5, [fp, #-48]	; 0xffffffd0
   120bc:	movcc	r2, #36	; 0x24
   120c0:	strbcc	r2, [r7, r1]
   120c4:	add	r1, r8, #2
   120c8:	cmp	r1, r4
   120cc:	movcc	r2, #39	; 0x27
   120d0:	strbcc	r2, [r7, r1]
   120d4:	add	r8, r8, #3
   120d8:	mov	r1, #1
   120dc:	str	r1, [fp, #-56]	; 0xffffffc8
   120e0:	cmp	r8, r4
   120e4:	movcc	r1, #92	; 0x5c
   120e8:	strbcc	r1, [r7, r8]
   120ec:	add	r8, r8, #1
   120f0:	cmp	r8, r4
   120f4:	strbcc	r0, [r7, r8]
   120f8:	and	r5, r5, r9
   120fc:	add	r8, r8, #1
   12100:	add	r6, r6, #1
   12104:	cmn	lr, #1
   12108:	bne	11ae4 <putchar_unlocked@plt+0xc68>
   1210c:	b	11af0 <putchar_unlocked@plt+0xc74>
   12110:	mov	r9, #0
   12114:	ldr	r0, [sp, #36]	; 0x24
   12118:	cmp	r0, #0
   1211c:	mov	sl, #0
   12120:	mov	r5, #0
   12124:	beq	12034 <putchar_unlocked@plt+0x11b8>
   12128:	ldr	r5, [fp, #-48]	; 0xffffffd0
   1212c:	b	12100 <putchar_unlocked@plt+0x1284>
   12130:	mov	r9, #1
   12134:	b	11db8 <putchar_unlocked@plt+0xf3c>
   12138:	mov	r0, #0
   1213c:	str	r0, [fp, #-36]	; 0xffffffdc
   12140:	str	r0, [fp, #-40]	; 0xffffffd8
   12144:	cmn	lr, #1
   12148:	bne	1215c <putchar_unlocked@plt+0x12e0>
   1214c:	mov	r0, ip
   12150:	bl	10dc8 <strlen@plt>
   12154:	ldr	ip, [fp, #-84]	; 0xffffffac
   12158:	mov	lr, r0
   1215c:	add	r0, ip, r6
   12160:	str	r0, [sp, #20]
   12164:	mov	r9, #1
   12168:	mov	r7, #0
   1216c:	sub	r4, fp, #40	; 0x28
   12170:	str	lr, [sp, #28]
   12174:	str	r7, [sp, #44]	; 0x2c
   12178:	add	r7, r7, r6
   1217c:	add	r1, ip, r7
   12180:	sub	r2, lr, r7
   12184:	sub	r0, fp, #44	; 0x2c
   12188:	mov	r3, r4
   1218c:	bl	14218 <putchar_unlocked@plt+0x339c>
   12190:	cmp	r0, #0
   12194:	beq	12654 <putchar_unlocked@plt+0x17d8>
   12198:	cmn	r0, #1
   1219c:	beq	12614 <putchar_unlocked@plt+0x1798>
   121a0:	cmn	r0, #2
   121a4:	ldr	lr, [sp, #28]
   121a8:	beq	1261c <putchar_unlocked@plt+0x17a0>
   121ac:	cmp	r0, #2
   121b0:	mov	r1, #0
   121b4:	movwcc	r1, #1
   121b8:	ldr	r2, [sp, #60]	; 0x3c
   121bc:	eor	r2, r2, #1
   121c0:	orrs	r1, r2, r1
   121c4:	ldr	r4, [sp, #24]
   121c8:	bne	12288 <putchar_unlocked@plt+0x140c>
   121cc:	ldr	r1, [sp, #44]	; 0x2c
   121d0:	ldr	r2, [sp, #20]
   121d4:	add	r1, r2, r1
   121d8:	mov	r2, #1
   121dc:	ldrb	r3, [r1, r2]
   121e0:	sub	r3, r3, #91	; 0x5b
   121e4:	cmp	r3, #33	; 0x21
   121e8:	bhi	1227c <putchar_unlocked@plt+0x1400>
   121ec:	add	r7, pc, #0
   121f0:	ldr	pc, [r7, r3, lsl #2]
   121f4:	andeq	r2, r1, ip, lsr r7
   121f8:	andeq	r2, r1, ip, lsr r7
   121fc:	andeq	r2, r1, ip, ror r2
   12200:	andeq	r2, r1, ip, lsr r7
   12204:	andeq	r2, r1, ip, ror r2
   12208:	andeq	r2, r1, ip, lsr r7
   1220c:	andeq	r2, r1, ip, ror r2
   12210:	andeq	r2, r1, ip, ror r2
   12214:	andeq	r2, r1, ip, ror r2
   12218:	andeq	r2, r1, ip, ror r2
   1221c:	andeq	r2, r1, ip, ror r2
   12220:	andeq	r2, r1, ip, ror r2
   12224:	andeq	r2, r1, ip, ror r2
   12228:	andeq	r2, r1, ip, ror r2
   1222c:	andeq	r2, r1, ip, ror r2
   12230:	andeq	r2, r1, ip, ror r2
   12234:	andeq	r2, r1, ip, ror r2
   12238:	andeq	r2, r1, ip, ror r2
   1223c:	andeq	r2, r1, ip, ror r2
   12240:	andeq	r2, r1, ip, ror r2
   12244:	andeq	r2, r1, ip, ror r2
   12248:	andeq	r2, r1, ip, ror r2
   1224c:	andeq	r2, r1, ip, ror r2
   12250:	andeq	r2, r1, ip, ror r2
   12254:	andeq	r2, r1, ip, ror r2
   12258:	andeq	r2, r1, ip, ror r2
   1225c:	andeq	r2, r1, ip, ror r2
   12260:	andeq	r2, r1, ip, ror r2
   12264:	andeq	r2, r1, ip, ror r2
   12268:	andeq	r2, r1, ip, ror r2
   1226c:	andeq	r2, r1, ip, ror r2
   12270:	andeq	r2, r1, ip, ror r2
   12274:	andeq	r2, r1, ip, ror r2
   12278:	andeq	r2, r1, ip, lsr r7
   1227c:	add	r2, r2, #1
   12280:	cmp	r2, r0
   12284:	bcc	121dc <putchar_unlocked@plt+0x1360>
   12288:	ldr	r7, [sp, #44]	; 0x2c
   1228c:	add	r7, r0, r7
   12290:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12294:	bl	10d14 <iswprint@plt>
   12298:	cmp	r0, #0
   1229c:	movwne	r0, #1
   122a0:	and	r9, r9, r0
   122a4:	sub	r4, fp, #40	; 0x28
   122a8:	mov	r0, r4
   122ac:	bl	10ccc <mbsinit@plt>
   122b0:	ldr	lr, [sp, #28]
   122b4:	cmp	r0, #0
   122b8:	ldr	ip, [fp, #-84]	; 0xffffffac
   122bc:	beq	12174 <putchar_unlocked@plt+0x12f8>
   122c0:	b	1265c <putchar_unlocked@plt+0x17e0>
   122c4:	ldr	r0, [sp, #32]
   122c8:	cmp	r0, #0
   122cc:	beq	12364 <putchar_unlocked@plt+0x14e8>
   122d0:	add	r0, r6, #2
   122d4:	cmp	r0, lr
   122d8:	bcs	12364 <putchar_unlocked@plt+0x14e8>
   122dc:	add	r1, ip, r6
   122e0:	ldrb	r1, [r1, #1]
   122e4:	cmp	r1, #63	; 0x3f
   122e8:	bne	12364 <putchar_unlocked@plt+0x14e8>
   122ec:	ldrb	r9, [ip, r0]
   122f0:	sub	r2, r9, #33	; 0x21
   122f4:	cmp	r2, #29
   122f8:	bhi	12364 <putchar_unlocked@plt+0x14e8>
   122fc:	mov	r3, #1
   12300:	movw	r1, #20929	; 0x51c1
   12304:	movt	r1, #14336	; 0x3800
   12308:	tst	r1, r3, lsl r2
   1230c:	beq	12364 <putchar_unlocked@plt+0x14e8>
   12310:	ldr	r1, [fp, #-76]	; 0xffffffb4
   12314:	tst	r1, #1
   12318:	bne	12744 <putchar_unlocked@plt+0x18c8>
   1231c:	cmp	r8, r4
   12320:	movcc	r1, #63	; 0x3f
   12324:	strbcc	r1, [r7, r8]
   12328:	add	r2, r8, #1
   1232c:	cmp	r2, r4
   12330:	movcc	r1, #34	; 0x22
   12334:	strbcc	r1, [r7, r2]
   12338:	add	r2, r8, #2
   1233c:	cmp	r2, r4
   12340:	movcc	r1, #34	; 0x22
   12344:	strbcc	r1, [r7, r2]
   12348:	add	r2, r8, #3
   1234c:	cmp	r2, r4
   12350:	movcc	r1, #63	; 0x3f
   12354:	strbcc	r1, [r7, r2]
   12358:	add	r8, r8, #4
   1235c:	mov	r6, r0
   12360:	mov	r5, r9
   12364:	mov	r9, #0
   12368:	b	11db8 <putchar_unlocked@plt+0xf3c>
   1236c:	add	r1, r2, r6
   12370:	str	r1, [sp, #44]	; 0x2c
   12374:	add	r1, r6, #1
   12378:	mov	r3, #0
   1237c:	ldr	lr, [sp, #28]
   12380:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12384:	tst	r0, #1
   12388:	bne	1247c <putchar_unlocked@plt+0x1600>
   1238c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12390:	tst	r2, #1
   12394:	bne	12744 <putchar_unlocked@plt+0x18c8>
   12398:	cmp	r6, #2
   1239c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   123a0:	movwne	r3, #1
   123a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   123a8:	orr	r3, r3, r2
   123ac:	tst	r3, #1
   123b0:	bne	123ec <putchar_unlocked@plt+0x1570>
   123b4:	cmp	r8, r4
   123b8:	movcc	r2, #39	; 0x27
   123bc:	strbcc	r2, [r7, r8]
   123c0:	add	r3, r8, #1
   123c4:	cmp	r3, r4
   123c8:	movcc	r2, #36	; 0x24
   123cc:	strbcc	r2, [r7, r3]
   123d0:	add	r3, r8, #2
   123d4:	cmp	r3, r4
   123d8:	movcc	r2, #39	; 0x27
   123dc:	strbcc	r2, [r7, r3]
   123e0:	add	r8, r8, #3
   123e4:	mov	r2, #1
   123e8:	str	r2, [fp, #-56]	; 0xffffffc8
   123ec:	cmp	r8, r4
   123f0:	movcc	r2, #92	; 0x5c
   123f4:	strbcc	r2, [r7, r8]
   123f8:	add	r3, r8, #1
   123fc:	cmp	r3, r4
   12400:	bcs	12420 <putchar_unlocked@plt+0x15a4>
   12404:	and	r7, r5, #192	; 0xc0
   12408:	mov	r2, #48	; 0x30
   1240c:	orr	r7, r2, r7, lsr #6
   12410:	ldr	r6, [sp, #80]	; 0x50
   12414:	strb	r7, [r6, r3]
   12418:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1241c:	ldr	r7, [sp, #80]	; 0x50
   12420:	add	r3, r8, #2
   12424:	cmp	r3, r4
   12428:	bcs	12448 <putchar_unlocked@plt+0x15cc>
   1242c:	lsr	r7, r5, #3
   12430:	mov	r2, #6
   12434:	bfi	r7, r2, #3, #29
   12438:	ldr	r6, [sp, #80]	; 0x50
   1243c:	strb	r7, [r6, r3]
   12440:	ldr	r6, [fp, #-60]	; 0xffffffc4
   12444:	ldr	r7, [sp, #80]	; 0x50
   12448:	mov	r2, #6
   1244c:	bfi	r5, r2, #3, #29
   12450:	add	r8, r8, #3
   12454:	mov	r3, #1
   12458:	b	124a0 <putchar_unlocked@plt+0x1624>
   1245c:	ldr	r7, [sp, #80]	; 0x50
   12460:	cmp	r8, r4
   12464:	strbcc	r5, [r7, r8]
   12468:	ldrb	r5, [ip, r1]
   1246c:	add	r1, r1, #1
   12470:	add	r8, r8, #1
   12474:	tst	r0, #1
   12478:	beq	1238c <putchar_unlocked@plt+0x1510>
   1247c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12480:	tst	r2, #1
   12484:	beq	12498 <putchar_unlocked@plt+0x161c>
   12488:	cmp	r8, r4
   1248c:	movcc	r2, #92	; 0x5c
   12490:	strbcc	r2, [r7, r8]
   12494:	add	r8, r8, #1
   12498:	mov	r2, #0
   1249c:	str	r2, [fp, #-52]	; 0xffffffcc
   124a0:	and	sl, r3, #1
   124a4:	ldr	r2, [sp, #44]	; 0x2c
   124a8:	cmp	r2, r1
   124ac:	bls	125b8 <putchar_unlocked@plt+0x173c>
   124b0:	cmp	sl, #0
   124b4:	movwne	sl, #1
   124b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   124bc:	mvn	r7, r2
   124c0:	orr	r7, r7, sl
   124c4:	tst	r7, #1
   124c8:	bne	1245c <putchar_unlocked@plt+0x15e0>
   124cc:	cmp	r8, r4
   124d0:	ldrcc	r7, [sp, #80]	; 0x50
   124d4:	movcc	r2, #39	; 0x27
   124d8:	strbcc	r2, [r7, r8]
   124dc:	add	r7, r8, #1
   124e0:	cmp	r7, r4
   124e4:	ldrcc	r6, [sp, #80]	; 0x50
   124e8:	movcc	r2, #39	; 0x27
   124ec:	strbcc	r2, [r6, r7]
   124f0:	ldrcc	r6, [fp, #-60]	; 0xffffffc4
   124f4:	add	r8, r8, #2
   124f8:	mov	r2, #0
   124fc:	str	r2, [fp, #-56]	; 0xffffffc8
   12500:	b	1245c <putchar_unlocked@plt+0x15e0>
   12504:	cmp	r8, r4
   12508:	movcc	r0, #39	; 0x27
   1250c:	strbcc	r0, [r7, r8]
   12510:	add	r0, r8, #1
   12514:	cmp	r0, r4
   12518:	movcc	r1, #36	; 0x24
   1251c:	strbcc	r1, [r7, r0]
   12520:	add	r0, r8, #2
   12524:	cmp	r0, r4
   12528:	movcc	r1, #39	; 0x27
   1252c:	strbcc	r1, [r7, r0]
   12530:	add	r0, r8, #3
   12534:	mov	r2, #1
   12538:	cmp	r0, r4
   1253c:	movcc	r1, #92	; 0x5c
   12540:	strbcc	r1, [r7, r0]
   12544:	str	r2, [fp, #-56]	; 0xffffffc8
   12548:	add	r8, r0, #1
   1254c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   12550:	cmp	r1, #2
   12554:	beq	125a8 <putchar_unlocked@plt+0x172c>
   12558:	add	r1, r6, #1
   1255c:	mov	r9, #0
   12560:	mov	sl, #1
   12564:	mov	r5, #48	; 0x30
   12568:	cmp	r1, lr
   1256c:	bcs	11db8 <putchar_unlocked@plt+0xf3c>
   12570:	ldrb	r1, [ip, r1]
   12574:	sub	r1, r1, #48	; 0x30
   12578:	uxtb	r1, r1
   1257c:	cmp	r1, #9
   12580:	bhi	11db8 <putchar_unlocked@plt+0xf3c>
   12584:	cmp	r8, r4
   12588:	movcc	r1, #48	; 0x30
   1258c:	strbcc	r1, [r7, r8]
   12590:	add	r1, r0, #2
   12594:	cmp	r1, r4
   12598:	movcc	r2, #48	; 0x30
   1259c:	strbcc	r2, [r7, r1]
   125a0:	add	r8, r0, #3
   125a4:	b	11db8 <putchar_unlocked@plt+0xf3c>
   125a8:	mov	r0, #48	; 0x30
   125ac:	mov	sl, #1
   125b0:	mov	r9, #0
   125b4:	b	12064 <putchar_unlocked@plt+0x11e8>
   125b8:	sub	r6, r1, #1
   125bc:	cmp	sl, #0
   125c0:	movwne	sl, #1
   125c4:	mov	r0, r5
   125c8:	cmp	sl, #0
   125cc:	bne	1260c <putchar_unlocked@plt+0x1790>
   125d0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   125d4:	tst	r1, #1
   125d8:	beq	1260c <putchar_unlocked@plt+0x1790>
   125dc:	cmp	r8, r4
   125e0:	ldr	r5, [fp, #-48]	; 0xffffffd0
   125e4:	movcc	r1, #39	; 0x27
   125e8:	strbcc	r1, [r7, r8]
   125ec:	add	r1, r8, #1
   125f0:	cmp	r1, r4
   125f4:	movcc	r2, #39	; 0x27
   125f8:	strbcc	r2, [r7, r1]
   125fc:	add	r8, r8, #2
   12600:	mov	r1, #0
   12604:	str	r1, [fp, #-56]	; 0xffffffc8
   12608:	b	120f0 <putchar_unlocked@plt+0x1274>
   1260c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12610:	b	120f0 <putchar_unlocked@plt+0x1274>
   12614:	mov	r9, #0
   12618:	b	12654 <putchar_unlocked@plt+0x17d8>
   1261c:	mov	r9, #0
   12620:	cmp	r7, lr
   12624:	bcs	12654 <putchar_unlocked@plt+0x17d8>
   12628:	ldr	ip, [fp, #-84]	; 0xffffffac
   1262c:	ldr	r7, [sp, #44]	; 0x2c
   12630:	ldr	r0, [sp, #20]
   12634:	ldrb	r0, [r0, r7]
   12638:	cmp	r0, #0
   1263c:	beq	1265c <putchar_unlocked@plt+0x17e0>
   12640:	add	r7, r7, #1
   12644:	add	r0, r6, r7
   12648:	cmp	r0, lr
   1264c:	bcc	12630 <putchar_unlocked@plt+0x17b4>
   12650:	b	1265c <putchar_unlocked@plt+0x17e0>
   12654:	ldr	ip, [fp, #-84]	; 0xffffffac
   12658:	ldr	r7, [sp, #44]	; 0x2c
   1265c:	mov	r1, r7
   12660:	ldr	r7, [sp, #80]	; 0x50
   12664:	b	11f8c <putchar_unlocked@plt+0x1110>
   12668:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1266c:	eor	r0, r1, #2
   12670:	orr	r0, r0, r8
   12674:	clz	r0, r0
   12678:	lsr	r0, r0, #5
   1267c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   12680:	tst	r2, r0
   12684:	bne	12744 <putchar_unlocked@plt+0x18c8>
   12688:	cmp	r1, #2
   1268c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   12690:	movwne	r0, #1
   12694:	orr	r0, r2, r0
   12698:	tst	r0, #1
   1269c:	ldreq	r0, [sp, #56]	; 0x38
   126a0:	eoreq	r0, r0, #1
   126a4:	tsteq	r0, #1
   126a8:	bne	126dc <putchar_unlocked@plt+0x1860>
   126ac:	mov	r9, lr
   126b0:	tst	r5, #1
   126b4:	bne	127ac <putchar_unlocked@plt+0x1930>
   126b8:	ldr	r0, [sp, #72]	; 0x48
   126bc:	cmp	r0, #0
   126c0:	beq	126dc <putchar_unlocked@plt+0x1860>
   126c4:	mov	r5, #0
   126c8:	cmp	r4, #0
   126cc:	ldr	r0, [sp, #84]	; 0x54
   126d0:	mov	sl, r2
   126d4:	ldr	r6, [sp, #72]	; 0x48
   126d8:	beq	11874 <putchar_unlocked@plt+0x9f8>
   126dc:	ldr	r1, [sp, #92]	; 0x5c
   126e0:	clz	r0, r1
   126e4:	lsr	r0, r0, #5
   126e8:	orr	r0, r0, r2
   126ec:	tst	r0, #1
   126f0:	bne	1271c <putchar_unlocked@plt+0x18a0>
   126f4:	ldrb	r0, [r1]
   126f8:	cmp	r0, #0
   126fc:	beq	1271c <putchar_unlocked@plt+0x18a0>
   12700:	add	r1, r1, #1
   12704:	cmp	r8, r4
   12708:	strbcc	r0, [r7, r8]
   1270c:	add	r8, r8, #1
   12710:	ldrb	r0, [r1], #1
   12714:	cmp	r0, #0
   12718:	bne	12704 <putchar_unlocked@plt+0x1888>
   1271c:	cmp	r8, r4
   12720:	movcc	r0, #0
   12724:	strbcc	r0, [r7, r8]
   12728:	b	127a0 <putchar_unlocked@plt+0x1924>
   1272c:	ldr	ip, [fp, #-84]	; 0xffffffac
   12730:	mov	lr, r4
   12734:	mov	r4, r5
   12738:	b	12744 <putchar_unlocked@plt+0x18c8>
   1273c:	ldr	r7, [sp, #80]	; 0x50
   12740:	ldr	ip, [fp, #-84]	; 0xffffffac
   12744:	mov	r0, #0
   12748:	ldr	r1, [fp, #12]
   1274c:	bic	r1, r1, #2
   12750:	ldr	r2, [sp, #84]	; 0x54
   12754:	tst	r2, #1
   12758:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1275c:	mov	r2, r3
   12760:	movwne	r2, #4
   12764:	cmp	r3, #2
   12768:	movne	r2, r3
   1276c:	str	r2, [sp]
   12770:	str	r1, [sp, #4]
   12774:	str	r0, [sp, #8]
   12778:	ldr	r0, [sp, #68]	; 0x44
   1277c:	str	r0, [sp, #12]
   12780:	ldr	r0, [sp, #76]	; 0x4c
   12784:	str	r0, [sp, #16]
   12788:	mov	r0, r7
   1278c:	mov	r1, r4
   12790:	mov	r2, ip
   12794:	mov	r3, lr
   12798:	bl	117ec <putchar_unlocked@plt+0x970>
   1279c:	mov	r8, r0
   127a0:	mov	r0, r8
   127a4:	sub	sp, fp, #28
   127a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127ac:	mov	r0, #5
   127b0:	str	r0, [sp]
   127b4:	ldr	r0, [fp, #12]
   127b8:	str	r0, [sp, #4]
   127bc:	ldr	r0, [fp, #16]
   127c0:	str	r0, [sp, #8]
   127c4:	ldr	r0, [sp, #68]	; 0x44
   127c8:	str	r0, [sp, #12]
   127cc:	ldr	r0, [sp, #76]	; 0x4c
   127d0:	str	r0, [sp, #16]
   127d4:	mov	r0, r7
   127d8:	ldr	r1, [sp, #72]	; 0x48
   127dc:	ldr	r2, [fp, #-84]	; 0xffffffac
   127e0:	mov	r3, r9
   127e4:	b	12798 <putchar_unlocked@plt+0x191c>
   127e8:	bl	10e70 <abort@plt>
   127ec:	mov	r3, r2
   127f0:	mov	r2, #0
   127f4:	b	127f8 <putchar_unlocked@plt+0x197c>
   127f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127fc:	add	fp, sp, #28
   12800:	sub	sp, sp, #36	; 0x24
   12804:	mov	r4, r2
   12808:	str	r2, [sp, #24]
   1280c:	mov	r5, r1
   12810:	mov	r6, r0
   12814:	str	r0, [sp, #20]
   12818:	movw	r8, #20792	; 0x5138
   1281c:	movt	r8, #2
   12820:	cmp	r3, #0
   12824:	movne	r8, r3
   12828:	bl	10dd4 <__errno_location@plt>
   1282c:	str	r0, [sp, #28]
   12830:	ldm	r8, {r3, r9}
   12834:	ldr	r1, [r8, #40]	; 0x28
   12838:	ldr	r2, [r8, #44]	; 0x2c
   1283c:	ldr	r7, [r0]
   12840:	str	r7, [sp, #32]
   12844:	add	sl, r8, #8
   12848:	cmp	r4, #0
   1284c:	orreq	r9, r9, #1
   12850:	stm	sp, {r3, r9, sl}
   12854:	str	r1, [sp, #12]
   12858:	str	r2, [sp, #16]
   1285c:	mov	r0, #0
   12860:	mov	r1, #0
   12864:	mov	r2, r6
   12868:	mov	r3, r5
   1286c:	mov	r7, r5
   12870:	bl	117ec <putchar_unlocked@plt+0x970>
   12874:	mov	r5, r0
   12878:	add	r4, r0, #1
   1287c:	mov	r0, r4
   12880:	bl	136fc <putchar_unlocked@plt+0x2880>
   12884:	mov	r6, r0
   12888:	ldr	r0, [r8]
   1288c:	ldr	r1, [r8, #40]	; 0x28
   12890:	ldr	r2, [r8, #44]	; 0x2c
   12894:	stm	sp, {r0, r9, sl}
   12898:	str	r1, [sp, #12]
   1289c:	str	r2, [sp, #16]
   128a0:	mov	r0, r6
   128a4:	mov	r1, r4
   128a8:	ldr	r2, [sp, #20]
   128ac:	mov	r3, r7
   128b0:	bl	117ec <putchar_unlocked@plt+0x970>
   128b4:	ldr	r0, [sp, #24]
   128b8:	ldr	r1, [sp, #32]
   128bc:	ldr	r2, [sp, #28]
   128c0:	str	r1, [r2]
   128c4:	cmp	r0, #0
   128c8:	strne	r5, [r0]
   128cc:	mov	r0, r6
   128d0:	sub	sp, fp, #28
   128d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128d8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   128dc:	add	fp, sp, #24
   128e0:	movw	r8, #20688	; 0x50d0
   128e4:	movt	r8, #2
   128e8:	ldr	r4, [r8]
   128ec:	movw	r5, #20692	; 0x50d4
   128f0:	movt	r5, #2
   128f4:	ldr	r0, [r5]
   128f8:	cmp	r0, #2
   128fc:	blt	12928 <putchar_unlocked@plt+0x1aac>
   12900:	add	r7, r4, #12
   12904:	mov	r6, #0
   12908:	ldr	r0, [r7, r6, lsl #3]
   1290c:	bl	140c4 <putchar_unlocked@plt+0x3248>
   12910:	add	r0, r6, #1
   12914:	ldr	r1, [r5]
   12918:	add	r2, r6, #2
   1291c:	cmp	r2, r1
   12920:	mov	r6, r0
   12924:	blt	12908 <putchar_unlocked@plt+0x1a8c>
   12928:	ldr	r0, [r4, #4]
   1292c:	movw	r7, #20840	; 0x5168
   12930:	movt	r7, #2
   12934:	cmp	r0, r7
   12938:	beq	12950 <putchar_unlocked@plt+0x1ad4>
   1293c:	bl	140c4 <putchar_unlocked@plt+0x3248>
   12940:	movw	r0, #20696	; 0x50d8
   12944:	movt	r0, #2
   12948:	mov	r6, #256	; 0x100
   1294c:	strd	r6, [r0]
   12950:	movw	r6, #20696	; 0x50d8
   12954:	movt	r6, #2
   12958:	cmp	r4, r6
   1295c:	beq	1296c <putchar_unlocked@plt+0x1af0>
   12960:	mov	r0, r4
   12964:	bl	140c4 <putchar_unlocked@plt+0x3248>
   12968:	str	r6, [r8]
   1296c:	mov	r0, #1
   12970:	str	r0, [r5]
   12974:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12978:	movw	r3, #20792	; 0x5138
   1297c:	movt	r3, #2
   12980:	mvn	r2, #0
   12984:	b	12988 <putchar_unlocked@plt+0x1b0c>
   12988:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1298c:	add	fp, sp, #28
   12990:	sub	sp, sp, #44	; 0x2c
   12994:	mov	r7, r3
   12998:	str	r2, [sp, #36]	; 0x24
   1299c:	str	r1, [sp, #32]
   129a0:	mov	r5, r0
   129a4:	bl	10dd4 <__errno_location@plt>
   129a8:	cmp	r5, #0
   129ac:	blt	12b18 <putchar_unlocked@plt+0x1c9c>
   129b0:	cmn	r5, #-2147483647	; 0x80000001
   129b4:	beq	12b18 <putchar_unlocked@plt+0x1c9c>
   129b8:	movw	r4, #20688	; 0x50d0
   129bc:	movt	r4, #2
   129c0:	ldr	r6, [r4]
   129c4:	str	r0, [sp, #28]
   129c8:	ldr	r0, [r0]
   129cc:	str	r0, [sp, #24]
   129d0:	movw	r8, #20692	; 0x50d4
   129d4:	movt	r8, #2
   129d8:	ldr	r1, [r8]
   129dc:	cmp	r1, r5
   129e0:	ble	129ec <putchar_unlocked@plt+0x1b70>
   129e4:	mov	sl, r6
   129e8:	b	12a54 <putchar_unlocked@plt+0x1bd8>
   129ec:	str	r1, [fp, #-32]	; 0xffffffe0
   129f0:	mov	r0, #8
   129f4:	str	r0, [sp]
   129f8:	movw	r9, #20696	; 0x50d8
   129fc:	movt	r9, #2
   12a00:	subs	r0, r6, r9
   12a04:	movne	r0, r6
   12a08:	add	r2, r5, #1
   12a0c:	sub	r2, r2, r1
   12a10:	sub	r1, fp, #32
   12a14:	mvn	r3, #-2147483648	; 0x80000000
   12a18:	bl	137e4 <putchar_unlocked@plt+0x2968>
   12a1c:	mov	sl, r0
   12a20:	str	r0, [r4]
   12a24:	cmp	r6, r9
   12a28:	ldrdeq	r0, [r9]
   12a2c:	stmeq	sl, {r0, r1}
   12a30:	ldr	r1, [r8]
   12a34:	add	r0, sl, r1, lsl #3
   12a38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12a3c:	sub	r1, r2, r1
   12a40:	lsl	r2, r1, #3
   12a44:	mov	r1, #0
   12a48:	bl	10dec <memset@plt>
   12a4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a50:	str	r0, [r8]
   12a54:	mov	r9, sl
   12a58:	ldr	r6, [r9, r5, lsl #3]!
   12a5c:	ldr	r4, [r9, #4]!
   12a60:	ldm	r7, {r0, r1}
   12a64:	ldr	r2, [r7, #40]	; 0x28
   12a68:	ldr	r3, [r7, #44]	; 0x2c
   12a6c:	orr	r8, r1, #1
   12a70:	add	r1, r7, #8
   12a74:	stm	sp, {r0, r8}
   12a78:	str	r1, [sp, #20]
   12a7c:	add	r0, sp, #8
   12a80:	stm	r0, {r1, r2, r3}
   12a84:	mov	r0, r4
   12a88:	mov	r1, r6
   12a8c:	ldr	r2, [sp, #32]
   12a90:	ldr	r3, [sp, #36]	; 0x24
   12a94:	bl	117ec <putchar_unlocked@plt+0x970>
   12a98:	cmp	r6, r0
   12a9c:	bhi	12b00 <putchar_unlocked@plt+0x1c84>
   12aa0:	add	r6, r0, #1
   12aa4:	str	r6, [sl, r5, lsl #3]
   12aa8:	movw	r0, #20840	; 0x5168
   12aac:	movt	r0, #2
   12ab0:	cmp	r4, r0
   12ab4:	beq	12ac0 <putchar_unlocked@plt+0x1c44>
   12ab8:	mov	r0, r4
   12abc:	bl	140c4 <putchar_unlocked@plt+0x3248>
   12ac0:	mov	r0, r6
   12ac4:	bl	136fc <putchar_unlocked@plt+0x2880>
   12ac8:	mov	r4, r0
   12acc:	str	r0, [r9]
   12ad0:	ldr	r0, [r7]
   12ad4:	ldr	r1, [r7, #40]	; 0x28
   12ad8:	ldr	r2, [r7, #44]	; 0x2c
   12adc:	stm	sp, {r0, r8}
   12ae0:	ldr	r0, [sp, #20]
   12ae4:	add	r3, sp, #8
   12ae8:	stm	r3, {r0, r1, r2}
   12aec:	mov	r0, r4
   12af0:	mov	r1, r6
   12af4:	ldr	r2, [sp, #32]
   12af8:	ldr	r3, [sp, #36]	; 0x24
   12afc:	bl	117ec <putchar_unlocked@plt+0x970>
   12b00:	ldr	r0, [sp, #28]
   12b04:	ldr	r1, [sp, #24]
   12b08:	str	r1, [r0]
   12b0c:	mov	r0, r4
   12b10:	sub	sp, fp, #28
   12b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b18:	bl	10e70 <abort@plt>
   12b1c:	movw	r3, #20792	; 0x5138
   12b20:	movt	r3, #2
   12b24:	b	12988 <putchar_unlocked@plt+0x1b0c>
   12b28:	mov	r1, r0
   12b2c:	mov	r0, #0
   12b30:	b	12978 <putchar_unlocked@plt+0x1afc>
   12b34:	mov	r2, r1
   12b38:	mov	r1, r0
   12b3c:	mov	r0, #0
   12b40:	b	12b1c <putchar_unlocked@plt+0x1ca0>
   12b44:	push	{r4, r5, r6, sl, fp, lr}
   12b48:	add	fp, sp, #16
   12b4c:	sub	sp, sp, #48	; 0x30
   12b50:	mov	r4, r2
   12b54:	mov	r5, r0
   12b58:	mov	r6, sp
   12b5c:	mov	r0, r6
   12b60:	bl	12b80 <putchar_unlocked@plt+0x1d04>
   12b64:	mov	r0, r5
   12b68:	mov	r1, r4
   12b6c:	mvn	r2, #0
   12b70:	mov	r3, r6
   12b74:	bl	12988 <putchar_unlocked@plt+0x1b0c>
   12b78:	sub	sp, fp, #16
   12b7c:	pop	{r4, r5, r6, sl, fp, pc}
   12b80:	vmov.i32	q8, #0	; 0x00000000
   12b84:	mov	r2, #32
   12b88:	mov	r3, r0
   12b8c:	vst1.32	{d16-d17}, [r3], r2
   12b90:	vst1.32	{d16-d17}, [r3]
   12b94:	add	r2, r0, #16
   12b98:	vst1.32	{d16-d17}, [r2]
   12b9c:	cmp	r1, #10
   12ba0:	strne	r1, [r0]
   12ba4:	bxne	lr
   12ba8:	push	{fp, lr}
   12bac:	mov	fp, sp
   12bb0:	bl	10e70 <abort@plt>
   12bb4:	push	{r4, r5, r6, r7, fp, lr}
   12bb8:	add	fp, sp, #16
   12bbc:	sub	sp, sp, #48	; 0x30
   12bc0:	mov	r4, r3
   12bc4:	mov	r5, r2
   12bc8:	mov	r6, r0
   12bcc:	mov	r7, sp
   12bd0:	mov	r0, r7
   12bd4:	bl	12b80 <putchar_unlocked@plt+0x1d04>
   12bd8:	mov	r0, r6
   12bdc:	mov	r1, r5
   12be0:	mov	r2, r4
   12be4:	mov	r3, r7
   12be8:	bl	12988 <putchar_unlocked@plt+0x1b0c>
   12bec:	sub	sp, fp, #16
   12bf0:	pop	{r4, r5, r6, r7, fp, pc}
   12bf4:	mov	r2, r1
   12bf8:	mov	r1, r0
   12bfc:	mov	r0, #0
   12c00:	b	12b44 <putchar_unlocked@plt+0x1cc8>
   12c04:	mov	r3, r2
   12c08:	mov	r2, r1
   12c0c:	mov	r1, r0
   12c10:	mov	r0, #0
   12c14:	b	12bb4 <putchar_unlocked@plt+0x1d38>
   12c18:	push	{r4, r5, r6, sl, fp, lr}
   12c1c:	add	fp, sp, #16
   12c20:	sub	sp, sp, #48	; 0x30
   12c24:	mov	r4, r1
   12c28:	mov	r5, r0
   12c2c:	mov	r0, #32
   12c30:	movw	r1, #20792	; 0x5138
   12c34:	movt	r1, #2
   12c38:	add	r3, r1, #16
   12c3c:	vld1.64	{d16-d17}, [r1], r0
   12c40:	mov	r6, sp
   12c44:	vld1.64	{d18-d19}, [r3]
   12c48:	add	r3, r6, #16
   12c4c:	vld1.64	{d20-d21}, [r1]
   12c50:	vst1.64	{d18-d19}, [r3]
   12c54:	mov	r1, r6
   12c58:	vst1.64	{d16-d17}, [r1], r0
   12c5c:	vst1.64	{d20-d21}, [r1]
   12c60:	mov	r0, r6
   12c64:	mov	r1, r2
   12c68:	mov	r2, #1
   12c6c:	bl	116e0 <putchar_unlocked@plt+0x864>
   12c70:	mov	r0, #0
   12c74:	mov	r1, r5
   12c78:	mov	r2, r4
   12c7c:	mov	r3, r6
   12c80:	bl	12988 <putchar_unlocked@plt+0x1b0c>
   12c84:	sub	sp, fp, #16
   12c88:	pop	{r4, r5, r6, sl, fp, pc}
   12c8c:	mov	r2, r1
   12c90:	mvn	r1, #0
   12c94:	b	12c18 <putchar_unlocked@plt+0x1d9c>
   12c98:	mov	r1, #58	; 0x3a
   12c9c:	b	12c8c <putchar_unlocked@plt+0x1e10>
   12ca0:	mov	r2, #58	; 0x3a
   12ca4:	b	12c18 <putchar_unlocked@plt+0x1d9c>
   12ca8:	push	{r4, r5, r6, sl, fp, lr}
   12cac:	add	fp, sp, #16
   12cb0:	sub	sp, sp, #48	; 0x30
   12cb4:	mov	r4, r2
   12cb8:	mov	r5, r0
   12cbc:	mov	r6, sp
   12cc0:	mov	r0, r6
   12cc4:	bl	12b80 <putchar_unlocked@plt+0x1d04>
   12cc8:	mov	r0, r6
   12ccc:	mov	r1, #58	; 0x3a
   12cd0:	mov	r2, #1
   12cd4:	bl	116e0 <putchar_unlocked@plt+0x864>
   12cd8:	mov	r0, r5
   12cdc:	mov	r1, r4
   12ce0:	mvn	r2, #0
   12ce4:	mov	r3, r6
   12ce8:	bl	12988 <putchar_unlocked@plt+0x1b0c>
   12cec:	sub	sp, fp, #16
   12cf0:	pop	{r4, r5, r6, sl, fp, pc}
   12cf4:	push	{fp, lr}
   12cf8:	mov	fp, sp
   12cfc:	sub	sp, sp, #8
   12d00:	mvn	ip, #0
   12d04:	str	ip, [sp]
   12d08:	bl	12d14 <putchar_unlocked@plt+0x1e98>
   12d0c:	mov	sp, fp
   12d10:	pop	{fp, pc}
   12d14:	push	{r4, r5, r6, r7, fp, lr}
   12d18:	add	fp, sp, #16
   12d1c:	sub	sp, sp, #48	; 0x30
   12d20:	mov	r7, r3
   12d24:	mov	r5, r0
   12d28:	mov	r0, #32
   12d2c:	movw	r3, #20792	; 0x5138
   12d30:	movt	r3, #2
   12d34:	add	r4, r3, #16
   12d38:	vld1.64	{d16-d17}, [r3], r0
   12d3c:	mov	r6, sp
   12d40:	vld1.64	{d18-d19}, [r4]
   12d44:	add	r4, r6, #16
   12d48:	vld1.64	{d20-d21}, [r3]
   12d4c:	vst1.64	{d18-d19}, [r4]
   12d50:	mov	r3, r6
   12d54:	vst1.64	{d16-d17}, [r3], r0
   12d58:	vst1.64	{d20-d21}, [r3]
   12d5c:	mov	r0, r6
   12d60:	bl	11738 <putchar_unlocked@plt+0x8bc>
   12d64:	ldr	r2, [fp, #8]
   12d68:	mov	r0, r5
   12d6c:	mov	r1, r7
   12d70:	mov	r3, r6
   12d74:	bl	12988 <putchar_unlocked@plt+0x1b0c>
   12d78:	sub	sp, fp, #16
   12d7c:	pop	{r4, r5, r6, r7, fp, pc}
   12d80:	mov	r3, r2
   12d84:	mov	r2, r1
   12d88:	mov	r1, r0
   12d8c:	mov	r0, #0
   12d90:	b	12cf4 <putchar_unlocked@plt+0x1e78>
   12d94:	push	{fp, lr}
   12d98:	mov	fp, sp
   12d9c:	sub	sp, sp, #8
   12da0:	mov	ip, r2
   12da4:	mov	r2, r1
   12da8:	mov	r1, r0
   12dac:	str	r3, [sp]
   12db0:	mov	r0, #0
   12db4:	mov	r3, ip
   12db8:	bl	12d14 <putchar_unlocked@plt+0x1e98>
   12dbc:	mov	sp, fp
   12dc0:	pop	{fp, pc}
   12dc4:	movw	r3, #20704	; 0x50e0
   12dc8:	movt	r3, #2
   12dcc:	b	12988 <putchar_unlocked@plt+0x1b0c>
   12dd0:	mov	r2, r1
   12dd4:	mov	r1, r0
   12dd8:	mov	r0, #0
   12ddc:	b	12dc4 <putchar_unlocked@plt+0x1f48>
   12de0:	mvn	r2, #0
   12de4:	b	12dc4 <putchar_unlocked@plt+0x1f48>
   12de8:	mov	r1, r0
   12dec:	mov	r0, #0
   12df0:	b	12de0 <putchar_unlocked@plt+0x1f64>
   12df4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12df8:	add	fp, sp, #24
   12dfc:	sub	sp, sp, #16
   12e00:	mov	r4, r1
   12e04:	mov	r5, r0
   12e08:	mov	r7, #0
   12e0c:	mov	r0, #0
   12e10:	mov	r1, r5
   12e14:	mov	r2, #5
   12e18:	bl	10cf0 <dcgettext@plt>
   12e1c:	cmp	r0, r5
   12e20:	beq	12e2c <putchar_unlocked@plt+0x1fb0>
   12e24:	sub	sp, fp, #24
   12e28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e2c:	bl	141e0 <putchar_unlocked@plt+0x3364>
   12e30:	mov	r6, r0
   12e34:	mov	r8, #56	; 0x38
   12e38:	mov	r0, #45	; 0x2d
   12e3c:	stm	sp, {r0, r8}
   12e40:	str	r7, [sp, #8]
   12e44:	str	r7, [sp, #12]
   12e48:	mov	r0, r6
   12e4c:	mov	r1, #85	; 0x55
   12e50:	mov	r2, #84	; 0x54
   12e54:	mov	r3, #70	; 0x46
   12e58:	bl	12ef0 <putchar_unlocked@plt+0x2074>
   12e5c:	cmp	r0, #0
   12e60:	beq	12e7c <putchar_unlocked@plt+0x2000>
   12e64:	ldrb	r1, [r5]
   12e68:	movw	r2, #18730	; 0x492a
   12e6c:	movt	r2, #1
   12e70:	movw	r0, #18734	; 0x492e
   12e74:	movt	r0, #1
   12e78:	b	12ec0 <putchar_unlocked@plt+0x2044>
   12e7c:	mov	r0, #48	; 0x30
   12e80:	mov	r1, #51	; 0x33
   12e84:	str	r8, [sp]
   12e88:	stmib	sp, {r0, r1}
   12e8c:	str	r0, [sp, #12]
   12e90:	mov	r0, r6
   12e94:	mov	r1, #71	; 0x47
   12e98:	mov	r2, #66	; 0x42
   12e9c:	mov	r3, #49	; 0x31
   12ea0:	bl	12ef0 <putchar_unlocked@plt+0x2074>
   12ea4:	cmp	r0, #0
   12ea8:	beq	12ed0 <putchar_unlocked@plt+0x2054>
   12eac:	ldrb	r1, [r5]
   12eb0:	movw	r2, #18738	; 0x4932
   12eb4:	movt	r2, #1
   12eb8:	movw	r0, #18742	; 0x4936
   12ebc:	movt	r0, #1
   12ec0:	cmp	r1, #96	; 0x60
   12ec4:	moveq	r0, r2
   12ec8:	sub	sp, fp, #24
   12ecc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ed0:	movw	r1, #18724	; 0x4924
   12ed4:	movt	r1, #1
   12ed8:	movw	r0, #18728	; 0x4928
   12edc:	movt	r0, #1
   12ee0:	cmp	r4, #9
   12ee4:	moveq	r0, r1
   12ee8:	sub	sp, fp, #24
   12eec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12ef0:	push	{r4, r5, r6, r7, fp, lr}
   12ef4:	add	fp, sp, #16
   12ef8:	sub	sp, sp, #16
   12efc:	mov	r4, r3
   12f00:	mov	r5, r2
   12f04:	mov	r7, r1
   12f08:	mov	r6, r0
   12f0c:	mov	r0, r1
   12f10:	bl	13ec4 <putchar_unlocked@plt+0x3048>
   12f14:	ldrb	r1, [r6]
   12f18:	cmp	r0, #0
   12f1c:	andne	r1, r1, #223	; 0xdf
   12f20:	mov	r0, #0
   12f24:	cmp	r1, r7
   12f28:	bne	12f68 <putchar_unlocked@plt+0x20ec>
   12f2c:	cmp	r7, #0
   12f30:	moveq	r0, #1
   12f34:	subeq	sp, fp, #16
   12f38:	popeq	{r4, r5, r6, r7, fp, pc}
   12f3c:	ldr	r0, [fp, #20]
   12f40:	ldr	r1, [fp, #16]
   12f44:	ldr	r2, [fp, #12]
   12f48:	ldr	r3, [fp, #8]
   12f4c:	str	r2, [sp]
   12f50:	str	r1, [sp, #4]
   12f54:	str	r0, [sp, #8]
   12f58:	mov	r0, r6
   12f5c:	mov	r1, r5
   12f60:	mov	r2, r4
   12f64:	bl	12f70 <putchar_unlocked@plt+0x20f4>
   12f68:	sub	sp, fp, #16
   12f6c:	pop	{r4, r5, r6, r7, fp, pc}
   12f70:	push	{r4, r5, r6, r7, fp, lr}
   12f74:	add	fp, sp, #16
   12f78:	sub	sp, sp, #8
   12f7c:	mov	r4, r3
   12f80:	mov	r5, r2
   12f84:	mov	r7, r1
   12f88:	mov	r6, r0
   12f8c:	mov	r0, r1
   12f90:	bl	13ec4 <putchar_unlocked@plt+0x3048>
   12f94:	ldrb	r1, [r6, #1]
   12f98:	cmp	r0, #0
   12f9c:	andne	r1, r1, #223	; 0xdf
   12fa0:	mov	r0, #0
   12fa4:	cmp	r1, r7
   12fa8:	bne	12fe0 <putchar_unlocked@plt+0x2164>
   12fac:	cmp	r7, #0
   12fb0:	moveq	r0, #1
   12fb4:	subeq	sp, fp, #16
   12fb8:	popeq	{r4, r5, r6, r7, fp, pc}
   12fbc:	ldr	r0, [fp, #16]
   12fc0:	ldr	r1, [fp, #12]
   12fc4:	ldr	r3, [fp, #8]
   12fc8:	str	r1, [sp]
   12fcc:	str	r0, [sp, #4]
   12fd0:	mov	r0, r6
   12fd4:	mov	r1, r5
   12fd8:	mov	r2, r4
   12fdc:	bl	12fe8 <putchar_unlocked@plt+0x216c>
   12fe0:	sub	sp, fp, #16
   12fe4:	pop	{r4, r5, r6, r7, fp, pc}
   12fe8:	push	{r4, r5, r6, r7, fp, lr}
   12fec:	add	fp, sp, #16
   12ff0:	sub	sp, sp, #8
   12ff4:	mov	r4, r3
   12ff8:	mov	r5, r2
   12ffc:	mov	r7, r1
   13000:	mov	r6, r0
   13004:	mov	r0, r1
   13008:	bl	13ec4 <putchar_unlocked@plt+0x3048>
   1300c:	ldrb	r1, [r6, #2]
   13010:	cmp	r0, #0
   13014:	andne	r1, r1, #223	; 0xdf
   13018:	mov	r0, #0
   1301c:	cmp	r1, r7
   13020:	bne	13050 <putchar_unlocked@plt+0x21d4>
   13024:	cmp	r7, #0
   13028:	moveq	r0, #1
   1302c:	subeq	sp, fp, #16
   13030:	popeq	{r4, r5, r6, r7, fp, pc}
   13034:	ldr	r0, [fp, #12]
   13038:	ldr	r3, [fp, #8]
   1303c:	str	r0, [sp]
   13040:	mov	r0, r6
   13044:	mov	r1, r5
   13048:	mov	r2, r4
   1304c:	bl	13058 <putchar_unlocked@plt+0x21dc>
   13050:	sub	sp, fp, #16
   13054:	pop	{r4, r5, r6, r7, fp, pc}
   13058:	push	{r4, r5, r6, r7, fp, lr}
   1305c:	add	fp, sp, #16
   13060:	mov	r4, r3
   13064:	mov	r5, r2
   13068:	mov	r7, r1
   1306c:	mov	r6, r0
   13070:	mov	r0, r1
   13074:	bl	13ec4 <putchar_unlocked@plt+0x3048>
   13078:	ldrb	r1, [r6, #3]
   1307c:	ldr	r3, [fp, #8]
   13080:	cmp	r0, #0
   13084:	andne	r1, r1, #223	; 0xdf
   13088:	mov	r0, #0
   1308c:	cmp	r1, r7
   13090:	popne	{r4, r5, r6, r7, fp, pc}
   13094:	cmp	r7, #0
   13098:	beq	130b0 <putchar_unlocked@plt+0x2234>
   1309c:	mov	r0, r6
   130a0:	mov	r1, r5
   130a4:	mov	r2, r4
   130a8:	pop	{r4, r5, r6, r7, fp, lr}
   130ac:	b	130b8 <putchar_unlocked@plt+0x223c>
   130b0:	mov	r0, #1
   130b4:	pop	{r4, r5, r6, r7, fp, pc}
   130b8:	push	{r4, r5, r6, r7, fp, lr}
   130bc:	add	fp, sp, #16
   130c0:	mov	r4, r3
   130c4:	mov	r5, r2
   130c8:	mov	r7, r1
   130cc:	mov	r6, r0
   130d0:	mov	r0, r1
   130d4:	bl	13ec4 <putchar_unlocked@plt+0x3048>
   130d8:	ldrb	r1, [r6, #4]
   130dc:	cmp	r0, #0
   130e0:	andne	r1, r1, #223	; 0xdf
   130e4:	mov	r0, #0
   130e8:	cmp	r1, r7
   130ec:	popne	{r4, r5, r6, r7, fp, pc}
   130f0:	cmp	r7, #0
   130f4:	beq	1310c <putchar_unlocked@plt+0x2290>
   130f8:	mov	r0, r6
   130fc:	mov	r1, r5
   13100:	mov	r2, r4
   13104:	pop	{r4, r5, r6, r7, fp, lr}
   13108:	b	13114 <putchar_unlocked@plt+0x2298>
   1310c:	mov	r0, #1
   13110:	pop	{r4, r5, r6, r7, fp, pc}
   13114:	push	{r4, r5, r6, sl, fp, lr}
   13118:	add	fp, sp, #16
   1311c:	mov	r4, r2
   13120:	mov	r6, r1
   13124:	mov	r5, r0
   13128:	mov	r0, r1
   1312c:	bl	13ec4 <putchar_unlocked@plt+0x3048>
   13130:	ldrb	r1, [r5, #5]
   13134:	cmp	r0, #0
   13138:	andne	r1, r1, #223	; 0xdf
   1313c:	mov	r0, #0
   13140:	cmp	r1, r6
   13144:	popne	{r4, r5, r6, sl, fp, pc}
   13148:	cmp	r6, #0
   1314c:	beq	13160 <putchar_unlocked@plt+0x22e4>
   13150:	mov	r0, r5
   13154:	mov	r1, r4
   13158:	pop	{r4, r5, r6, sl, fp, lr}
   1315c:	b	13168 <putchar_unlocked@plt+0x22ec>
   13160:	mov	r0, #1
   13164:	pop	{r4, r5, r6, sl, fp, pc}
   13168:	push	{r4, r5, fp, lr}
   1316c:	add	fp, sp, #8
   13170:	mov	r5, r1
   13174:	mov	r4, r0
   13178:	mov	r0, r1
   1317c:	bl	13ec4 <putchar_unlocked@plt+0x3048>
   13180:	ldrb	r1, [r4, #6]
   13184:	cmp	r0, #0
   13188:	andne	r1, r1, #223	; 0xdf
   1318c:	mov	r0, #0
   13190:	cmp	r1, r5
   13194:	popne	{r4, r5, fp, pc}
   13198:	cmp	r5, #0
   1319c:	beq	131ac <putchar_unlocked@plt+0x2330>
   131a0:	mov	r0, r4
   131a4:	pop	{r4, r5, fp, lr}
   131a8:	b	131b4 <putchar_unlocked@plt+0x2338>
   131ac:	mov	r0, #1
   131b0:	pop	{r4, r5, fp, pc}
   131b4:	push	{r4, sl, fp, lr}
   131b8:	add	fp, sp, #8
   131bc:	mov	r4, r0
   131c0:	mov	r0, #0
   131c4:	bl	13ec4 <putchar_unlocked@plt+0x3048>
   131c8:	ldrb	r1, [r4, #7]
   131cc:	cmp	r0, #0
   131d0:	beq	131e8 <putchar_unlocked@plt+0x236c>
   131d4:	tst	r1, #223	; 0xdf
   131d8:	moveq	r0, #1
   131dc:	popeq	{r4, sl, fp, pc}
   131e0:	mov	r0, #0
   131e4:	pop	{r4, sl, fp, pc}
   131e8:	cmp	r1, #0
   131ec:	moveq	r0, #1
   131f0:	popeq	{r4, sl, fp, pc}
   131f4:	mov	r0, #0
   131f8:	pop	{r4, sl, fp, pc}
   131fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13200:	add	fp, sp, #24
   13204:	sub	sp, sp, #32
   13208:	mov	r4, r2
   1320c:	mov	r8, r0
   13210:	ldr	r6, [fp, #12]
   13214:	ldr	r7, [fp, #8]
   13218:	cmp	r1, #0
   1321c:	beq	13244 <putchar_unlocked@plt+0x23c8>
   13220:	mov	r5, r1
   13224:	str	r4, [sp]
   13228:	str	r3, [sp, #4]
   1322c:	movw	r2, #18832	; 0x4990
   13230:	movt	r2, #1
   13234:	mov	r0, r8
   13238:	mov	r1, #1
   1323c:	mov	r3, r5
   13240:	b	1325c <putchar_unlocked@plt+0x23e0>
   13244:	str	r3, [sp]
   13248:	movw	r2, #18844	; 0x499c
   1324c:	movt	r2, #1
   13250:	mov	r0, r8
   13254:	mov	r1, #1
   13258:	mov	r3, r4
   1325c:	bl	10e10 <__fprintf_chk@plt>
   13260:	movw	r1, #18851	; 0x49a3
   13264:	movt	r1, #1
   13268:	mov	r0, #0
   1326c:	mov	r2, #5
   13270:	bl	10cf0 <dcgettext@plt>
   13274:	mov	r3, r0
   13278:	movw	r0, #2022	; 0x7e6
   1327c:	str	r0, [sp]
   13280:	movw	r2, #19569	; 0x4c71
   13284:	movt	r2, #1
   13288:	mov	r0, r8
   1328c:	mov	r1, #1
   13290:	bl	10e10 <__fprintf_chk@plt>
   13294:	movw	r4, #17701	; 0x4525
   13298:	movt	r4, #1
   1329c:	mov	r0, r4
   132a0:	mov	r1, r8
   132a4:	bl	10c84 <fputs_unlocked@plt>
   132a8:	movw	r1, #18855	; 0x49a7
   132ac:	movt	r1, #1
   132b0:	mov	r0, #0
   132b4:	mov	r2, #5
   132b8:	bl	10cf0 <dcgettext@plt>
   132bc:	mov	r2, r0
   132c0:	movw	r3, #19026	; 0x4a52
   132c4:	movt	r3, #1
   132c8:	mov	r0, r8
   132cc:	mov	r1, #1
   132d0:	bl	10e10 <__fprintf_chk@plt>
   132d4:	mov	r0, r4
   132d8:	mov	r1, r8
   132dc:	bl	10c84 <fputs_unlocked@plt>
   132e0:	cmp	r6, #9
   132e4:	bhi	13320 <putchar_unlocked@plt+0x24a4>
   132e8:	add	r0, pc, #0
   132ec:	ldr	pc, [r0, r6, lsl #2]
   132f0:	andeq	r3, r1, r8, lsl r3
   132f4:	andeq	r3, r1, ip, lsr #6
   132f8:	andeq	r3, r1, ip, asr r3
   132fc:	andeq	r3, r1, r4, lsl #7
   13300:	andeq	r3, r1, ip, lsr #7
   13304:	ldrdeq	r3, [r1], -r4
   13308:	strdeq	r3, [r1], -ip
   1330c:	andeq	r3, r1, r4, lsr r4
   13310:	ldrdeq	r3, [r1], -r4
   13314:	andeq	r3, r1, ip, ror r4
   13318:	sub	sp, fp, #24
   1331c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13320:	movw	r1, #19379	; 0x4bb3
   13324:	movt	r1, #1
   13328:	b	13484 <putchar_unlocked@plt+0x2608>
   1332c:	movw	r1, #19060	; 0x4a74
   13330:	movt	r1, #1
   13334:	mov	r0, #0
   13338:	mov	r2, #5
   1333c:	bl	10cf0 <dcgettext@plt>
   13340:	mov	r2, r0
   13344:	ldr	r3, [r7]
   13348:	mov	r0, r8
   1334c:	mov	r1, #1
   13350:	sub	sp, fp, #24
   13354:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13358:	b	10e10 <__fprintf_chk@plt>
   1335c:	movw	r1, #19076	; 0x4a84
   13360:	movt	r1, #1
   13364:	mov	r0, #0
   13368:	mov	r2, #5
   1336c:	bl	10cf0 <dcgettext@plt>
   13370:	mov	r2, r0
   13374:	ldr	r3, [r7]
   13378:	ldr	r0, [r7, #4]
   1337c:	str	r0, [sp]
   13380:	b	13470 <putchar_unlocked@plt+0x25f4>
   13384:	movw	r1, #19099	; 0x4a9b
   13388:	movt	r1, #1
   1338c:	mov	r0, #0
   13390:	mov	r2, #5
   13394:	bl	10cf0 <dcgettext@plt>
   13398:	mov	r2, r0
   1339c:	ldr	r3, [r7]
   133a0:	ldmib	r7, {r0, r1}
   133a4:	stm	sp, {r0, r1}
   133a8:	b	13470 <putchar_unlocked@plt+0x25f4>
   133ac:	movw	r1, #19127	; 0x4ab7
   133b0:	movt	r1, #1
   133b4:	mov	r0, #0
   133b8:	mov	r2, #5
   133bc:	bl	10cf0 <dcgettext@plt>
   133c0:	mov	r2, r0
   133c4:	ldr	r3, [r7]
   133c8:	ldmib	r7, {r0, r1, r7}
   133cc:	stm	sp, {r0, r1, r7}
   133d0:	b	13470 <putchar_unlocked@plt+0x25f4>
   133d4:	movw	r1, #19159	; 0x4ad7
   133d8:	movt	r1, #1
   133dc:	mov	r0, #0
   133e0:	mov	r2, #5
   133e4:	bl	10cf0 <dcgettext@plt>
   133e8:	mov	r2, r0
   133ec:	ldr	r3, [r7]
   133f0:	ldmib	r7, {r0, r1, r6, r7}
   133f4:	stm	sp, {r0, r1, r6, r7}
   133f8:	b	13470 <putchar_unlocked@plt+0x25f4>
   133fc:	movw	r1, #19195	; 0x4afb
   13400:	movt	r1, #1
   13404:	mov	r0, #0
   13408:	mov	r2, #5
   1340c:	bl	10cf0 <dcgettext@plt>
   13410:	mov	r2, r0
   13414:	ldr	r3, [r7]
   13418:	ldmib	r7, {r0, r1, r6}
   1341c:	ldr	r5, [r7, #16]
   13420:	ldr	r7, [r7, #20]
   13424:	stm	sp, {r0, r1, r6}
   13428:	str	r5, [sp, #12]
   1342c:	str	r7, [sp, #16]
   13430:	b	13470 <putchar_unlocked@plt+0x25f4>
   13434:	movw	r1, #19235	; 0x4b23
   13438:	movt	r1, #1
   1343c:	mov	r0, #0
   13440:	mov	r2, #5
   13444:	bl	10cf0 <dcgettext@plt>
   13448:	mov	r2, r0
   1344c:	ldr	r3, [r7]
   13450:	ldmib	r7, {r0, r1, r6}
   13454:	ldr	r5, [r7, #16]
   13458:	ldr	r4, [r7, #20]
   1345c:	ldr	r7, [r7, #24]
   13460:	stm	sp, {r0, r1, r6}
   13464:	str	r5, [sp, #12]
   13468:	str	r4, [sp, #16]
   1346c:	str	r7, [sp, #20]
   13470:	mov	r0, r8
   13474:	mov	r1, #1
   13478:	b	13524 <putchar_unlocked@plt+0x26a8>
   1347c:	movw	r1, #19327	; 0x4b7f
   13480:	movt	r1, #1
   13484:	mov	r0, #0
   13488:	mov	r2, #5
   1348c:	bl	10cf0 <dcgettext@plt>
   13490:	mov	ip, r0
   13494:	ldr	r3, [r7]
   13498:	ldr	r0, [r7, #4]
   1349c:	ldr	r1, [r7, #8]
   134a0:	ldr	r6, [r7, #12]
   134a4:	ldr	r5, [r7, #16]
   134a8:	ldr	r4, [r7, #20]
   134ac:	ldr	r2, [r7, #24]
   134b0:	ldr	lr, [r7, #28]
   134b4:	ldr	r7, [r7, #32]
   134b8:	stm	sp, {r0, r1, r6}
   134bc:	str	r5, [sp, #12]
   134c0:	str	r4, [sp, #16]
   134c4:	str	r2, [sp, #20]
   134c8:	str	lr, [sp, #24]
   134cc:	str	r7, [sp, #28]
   134d0:	b	13518 <putchar_unlocked@plt+0x269c>
   134d4:	movw	r1, #19279	; 0x4b4f
   134d8:	movt	r1, #1
   134dc:	mov	r0, #0
   134e0:	mov	r2, #5
   134e4:	bl	10cf0 <dcgettext@plt>
   134e8:	mov	ip, r0
   134ec:	ldr	r3, [r7]
   134f0:	ldmib	r7, {r0, r1, r6}
   134f4:	ldr	r5, [r7, #16]
   134f8:	ldr	r4, [r7, #20]
   134fc:	ldr	r2, [r7, #24]
   13500:	ldr	r7, [r7, #28]
   13504:	stm	sp, {r0, r1, r6}
   13508:	str	r5, [sp, #12]
   1350c:	str	r4, [sp, #16]
   13510:	str	r2, [sp, #20]
   13514:	str	r7, [sp, #24]
   13518:	mov	r0, r8
   1351c:	mov	r1, #1
   13520:	mov	r2, ip
   13524:	bl	10e10 <__fprintf_chk@plt>
   13528:	sub	sp, fp, #24
   1352c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13530:	push	{r4, sl, fp, lr}
   13534:	add	fp, sp, #8
   13538:	sub	sp, sp, #8
   1353c:	mov	lr, #0
   13540:	ldr	ip, [fp, #8]
   13544:	ldr	r4, [ip, lr, lsl #2]
   13548:	add	lr, lr, #1
   1354c:	cmp	r4, #0
   13550:	bne	13544 <putchar_unlocked@plt+0x26c8>
   13554:	sub	r4, lr, #1
   13558:	str	ip, [sp]
   1355c:	str	r4, [sp, #4]
   13560:	bl	131fc <putchar_unlocked@plt+0x2380>
   13564:	sub	sp, fp, #8
   13568:	pop	{r4, sl, fp, pc}
   1356c:	push	{r4, r5, fp, lr}
   13570:	add	fp, sp, #8
   13574:	sub	sp, sp, #48	; 0x30
   13578:	mov	ip, #0
   1357c:	ldr	r4, [fp, #8]
   13580:	add	lr, sp, #8
   13584:	ldr	r5, [r4]
   13588:	str	r5, [lr, ip, lsl #2]
   1358c:	cmp	r5, #0
   13590:	beq	135a4 <putchar_unlocked@plt+0x2728>
   13594:	add	ip, ip, #1
   13598:	add	r4, r4, #4
   1359c:	cmp	ip, #10
   135a0:	bcc	13584 <putchar_unlocked@plt+0x2708>
   135a4:	str	lr, [sp]
   135a8:	str	ip, [sp, #4]
   135ac:	bl	131fc <putchar_unlocked@plt+0x2380>
   135b0:	sub	sp, fp, #8
   135b4:	pop	{r4, r5, fp, pc}
   135b8:	push	{fp, lr}
   135bc:	mov	fp, sp
   135c0:	sub	sp, sp, #8
   135c4:	add	ip, fp, #8
   135c8:	str	ip, [sp, #4]
   135cc:	str	ip, [sp]
   135d0:	bl	1356c <putchar_unlocked@plt+0x26f0>
   135d4:	mov	sp, fp
   135d8:	pop	{fp, pc}
   135dc:	push	{fp, lr}
   135e0:	mov	fp, sp
   135e4:	movw	r0, #20772	; 0x5124
   135e8:	movt	r0, #2
   135ec:	ldr	r1, [r0]
   135f0:	movw	r0, #17701	; 0x4525
   135f4:	movt	r0, #1
   135f8:	bl	10c84 <fputs_unlocked@plt>
   135fc:	movw	r1, #19439	; 0x4bef
   13600:	movt	r1, #1
   13604:	mov	r0, #0
   13608:	mov	r2, #5
   1360c:	bl	10cf0 <dcgettext@plt>
   13610:	mov	r1, r0
   13614:	movw	r2, #19459	; 0x4c03
   13618:	movt	r2, #1
   1361c:	mov	r0, #1
   13620:	bl	10df8 <__printf_chk@plt>
   13624:	movw	r1, #19481	; 0x4c19
   13628:	movt	r1, #1
   1362c:	mov	r0, #0
   13630:	mov	r2, #5
   13634:	bl	10cf0 <dcgettext@plt>
   13638:	mov	r1, r0
   1363c:	movw	r2, #18027	; 0x466b
   13640:	movt	r2, #1
   13644:	movw	r3, #18204	; 0x471c
   13648:	movt	r3, #1
   1364c:	mov	r0, #1
   13650:	bl	10df8 <__printf_chk@plt>
   13654:	movw	r1, #19501	; 0x4c2d
   13658:	movt	r1, #1
   1365c:	mov	r0, #0
   13660:	mov	r2, #5
   13664:	bl	10cf0 <dcgettext@plt>
   13668:	mov	r1, r0
   1366c:	movw	r2, #19540	; 0x4c54
   13670:	movt	r2, #1
   13674:	mov	r0, #1
   13678:	pop	{fp, lr}
   1367c:	b	10df8 <__printf_chk@plt>
   13680:	b	13684 <putchar_unlocked@plt+0x2808>
   13684:	push	{r4, r5, r6, sl, fp, lr}
   13688:	add	fp, sp, #16
   1368c:	mov	r4, r2
   13690:	mov	r5, r1
   13694:	mov	r6, r0
   13698:	bl	14278 <putchar_unlocked@plt+0x33fc>
   1369c:	cmp	r0, #0
   136a0:	popne	{r4, r5, r6, sl, fp, pc}
   136a4:	cmp	r6, #0
   136a8:	beq	136bc <putchar_unlocked@plt+0x2840>
   136ac:	cmp	r5, #0
   136b0:	cmpne	r4, #0
   136b4:	bne	136bc <putchar_unlocked@plt+0x2840>
   136b8:	pop	{r4, r5, r6, sl, fp, pc}
   136bc:	bl	13a70 <putchar_unlocked@plt+0x2bf4>
   136c0:	push	{fp, lr}
   136c4:	mov	fp, sp
   136c8:	bl	13b08 <putchar_unlocked@plt+0x2c8c>
   136cc:	bl	136d4 <putchar_unlocked@plt+0x2858>
   136d0:	pop	{fp, pc}
   136d4:	cmp	r0, #0
   136d8:	bxne	lr
   136dc:	push	{fp, lr}
   136e0:	mov	fp, sp
   136e4:	bl	13a70 <putchar_unlocked@plt+0x2bf4>
   136e8:	push	{fp, lr}
   136ec:	mov	fp, sp
   136f0:	bl	141ac <putchar_unlocked@plt+0x3330>
   136f4:	bl	136d4 <putchar_unlocked@plt+0x2858>
   136f8:	pop	{fp, pc}
   136fc:	b	136c0 <putchar_unlocked@plt+0x2844>
   13700:	push	{r4, r5, fp, lr}
   13704:	add	fp, sp, #8
   13708:	mov	r4, r1
   1370c:	mov	r5, r0
   13710:	bl	13b38 <putchar_unlocked@plt+0x2cbc>
   13714:	cmp	r0, #0
   13718:	popne	{r4, r5, fp, pc}
   1371c:	cmp	r5, #0
   13720:	beq	13730 <putchar_unlocked@plt+0x28b4>
   13724:	cmp	r4, #0
   13728:	bne	13730 <putchar_unlocked@plt+0x28b4>
   1372c:	pop	{r4, r5, fp, pc}
   13730:	bl	13a70 <putchar_unlocked@plt+0x2bf4>
   13734:	push	{fp, lr}
   13738:	mov	fp, sp
   1373c:	bl	141b0 <putchar_unlocked@plt+0x3334>
   13740:	bl	136d4 <putchar_unlocked@plt+0x2858>
   13744:	pop	{fp, pc}
   13748:	push	{fp, lr}
   1374c:	mov	fp, sp
   13750:	bl	141c0 <putchar_unlocked@plt+0x3344>
   13754:	bl	136d4 <putchar_unlocked@plt+0x2858>
   13758:	pop	{fp, pc}
   1375c:	push	{fp, lr}
   13760:	mov	fp, sp
   13764:	mov	r2, r1
   13768:	mov	r1, r0
   1376c:	mov	r0, #0
   13770:	bl	13684 <putchar_unlocked@plt+0x2808>
   13774:	pop	{fp, pc}
   13778:	mov	r2, r1
   1377c:	mov	r1, r0
   13780:	mov	r0, #0
   13784:	b	13748 <putchar_unlocked@plt+0x28cc>
   13788:	mov	r2, #1
   1378c:	b	13790 <putchar_unlocked@plt+0x2914>
   13790:	push	{r4, r5, fp, lr}
   13794:	add	fp, sp, #8
   13798:	mov	r4, r1
   1379c:	ldr	r5, [r1]
   137a0:	cmp	r0, #0
   137a4:	beq	137bc <putchar_unlocked@plt+0x2940>
   137a8:	mov	r1, #1
   137ac:	add	r1, r1, r5, lsr #1
   137b0:	adds	r5, r5, r1
   137b4:	bcc	137d4 <putchar_unlocked@plt+0x2958>
   137b8:	bl	13a70 <putchar_unlocked@plt+0x2bf4>
   137bc:	cmp	r5, #0
   137c0:	bne	137d4 <putchar_unlocked@plt+0x2958>
   137c4:	mov	r1, #64	; 0x40
   137c8:	udiv	r5, r1, r2
   137cc:	cmp	r2, #64	; 0x40
   137d0:	addhi	r5, r5, #1
   137d4:	mov	r1, r5
   137d8:	bl	13684 <putchar_unlocked@plt+0x2808>
   137dc:	str	r5, [r4]
   137e0:	pop	{r4, r5, fp, pc}
   137e4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   137e8:	add	fp, sp, #24
   137ec:	mov	r8, r1
   137f0:	ldr	r6, [r1]
   137f4:	add	r1, r6, r6, asr #1
   137f8:	cmp	r1, r6
   137fc:	mvnvs	r1, #-2147483648	; 0x80000000
   13800:	cmp	r1, r3
   13804:	mov	r5, r1
   13808:	movgt	r5, r3
   1380c:	cmn	r3, #1
   13810:	movle	r5, r1
   13814:	ldr	r4, [fp, #8]
   13818:	cmn	r4, #1
   1381c:	ble	13844 <putchar_unlocked@plt+0x29c8>
   13820:	cmp	r4, #0
   13824:	beq	13898 <putchar_unlocked@plt+0x2a1c>
   13828:	cmn	r5, #1
   1382c:	ble	1386c <putchar_unlocked@plt+0x29f0>
   13830:	mvn	r7, #-2147483648	; 0x80000000
   13834:	udiv	r1, r7, r4
   13838:	cmp	r1, r5
   1383c:	bge	13898 <putchar_unlocked@plt+0x2a1c>
   13840:	b	138a8 <putchar_unlocked@plt+0x2a2c>
   13844:	cmn	r5, #1
   13848:	ble	13888 <putchar_unlocked@plt+0x2a0c>
   1384c:	cmn	r4, #1
   13850:	beq	13898 <putchar_unlocked@plt+0x2a1c>
   13854:	mov	r1, #-2147483648	; 0x80000000
   13858:	sdiv	r1, r1, r4
   1385c:	mvn	r7, #-2147483648	; 0x80000000
   13860:	cmp	r1, r5
   13864:	bge	13898 <putchar_unlocked@plt+0x2a1c>
   13868:	b	138a8 <putchar_unlocked@plt+0x2a2c>
   1386c:	beq	13898 <putchar_unlocked@plt+0x2a1c>
   13870:	mov	r1, #-2147483648	; 0x80000000
   13874:	sdiv	r1, r1, r5
   13878:	mvn	r7, #-2147483648	; 0x80000000
   1387c:	cmp	r1, r4
   13880:	bge	13898 <putchar_unlocked@plt+0x2a1c>
   13884:	b	138a8 <putchar_unlocked@plt+0x2a2c>
   13888:	mvn	r7, #-2147483648	; 0x80000000
   1388c:	sdiv	r1, r7, r4
   13890:	cmp	r5, r1
   13894:	blt	138a8 <putchar_unlocked@plt+0x2a2c>
   13898:	mul	r1, r5, r4
   1389c:	mov	r7, #64	; 0x40
   138a0:	cmp	r1, #63	; 0x3f
   138a4:	bgt	138b0 <putchar_unlocked@plt+0x2a34>
   138a8:	sdiv	r5, r7, r4
   138ac:	mul	r1, r5, r4
   138b0:	cmp	r0, #0
   138b4:	moveq	r7, #0
   138b8:	streq	r7, [r8]
   138bc:	sub	r7, r5, r6
   138c0:	cmp	r7, r2
   138c4:	bge	13970 <putchar_unlocked@plt+0x2af4>
   138c8:	add	r5, r6, r2
   138cc:	mov	r1, #0
   138d0:	cmp	r5, r3
   138d4:	mov	r2, #0
   138d8:	movwgt	r2, #1
   138dc:	cmn	r3, #1
   138e0:	movwgt	r1, #1
   138e4:	cmp	r5, r6
   138e8:	bvs	13958 <putchar_unlocked@plt+0x2adc>
   138ec:	ands	r1, r1, r2
   138f0:	bne	13958 <putchar_unlocked@plt+0x2adc>
   138f4:	cmn	r4, #1
   138f8:	ble	13920 <putchar_unlocked@plt+0x2aa4>
   138fc:	cmp	r4, #0
   13900:	beq	1396c <putchar_unlocked@plt+0x2af0>
   13904:	cmn	r5, #1
   13908:	ble	13944 <putchar_unlocked@plt+0x2ac8>
   1390c:	mvn	r1, #-2147483648	; 0x80000000
   13910:	udiv	r1, r1, r4
   13914:	cmp	r1, r5
   13918:	bge	1396c <putchar_unlocked@plt+0x2af0>
   1391c:	b	13958 <putchar_unlocked@plt+0x2adc>
   13920:	cmn	r5, #1
   13924:	ble	1395c <putchar_unlocked@plt+0x2ae0>
   13928:	cmn	r4, #1
   1392c:	beq	1396c <putchar_unlocked@plt+0x2af0>
   13930:	mov	r1, #-2147483648	; 0x80000000
   13934:	sdiv	r1, r1, r4
   13938:	cmp	r1, r5
   1393c:	bge	1396c <putchar_unlocked@plt+0x2af0>
   13940:	b	13958 <putchar_unlocked@plt+0x2adc>
   13944:	beq	1396c <putchar_unlocked@plt+0x2af0>
   13948:	mov	r1, #-2147483648	; 0x80000000
   1394c:	sdiv	r1, r1, r5
   13950:	cmp	r1, r4
   13954:	bge	1396c <putchar_unlocked@plt+0x2af0>
   13958:	bl	13a70 <putchar_unlocked@plt+0x2bf4>
   1395c:	mvn	r1, #-2147483648	; 0x80000000
   13960:	sdiv	r1, r1, r4
   13964:	cmp	r5, r1
   13968:	blt	13958 <putchar_unlocked@plt+0x2adc>
   1396c:	mul	r1, r5, r4
   13970:	bl	13700 <putchar_unlocked@plt+0x2884>
   13974:	str	r5, [r8]
   13978:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1397c:	mov	r1, #1
   13980:	b	13984 <putchar_unlocked@plt+0x2b08>
   13984:	push	{fp, lr}
   13988:	mov	fp, sp
   1398c:	bl	13ab4 <putchar_unlocked@plt+0x2c38>
   13990:	bl	136d4 <putchar_unlocked@plt+0x2858>
   13994:	pop	{fp, pc}
   13998:	mov	r1, #1
   1399c:	b	139a0 <putchar_unlocked@plt+0x2b24>
   139a0:	push	{fp, lr}
   139a4:	mov	fp, sp
   139a8:	bl	141bc <putchar_unlocked@plt+0x3340>
   139ac:	bl	136d4 <putchar_unlocked@plt+0x2858>
   139b0:	pop	{fp, pc}
   139b4:	push	{r4, r5, r6, sl, fp, lr}
   139b8:	add	fp, sp, #16
   139bc:	mov	r4, r1
   139c0:	mov	r5, r0
   139c4:	mov	r0, r1
   139c8:	bl	136c0 <putchar_unlocked@plt+0x2844>
   139cc:	mov	r6, r0
   139d0:	mov	r1, r5
   139d4:	mov	r2, r4
   139d8:	bl	10cc0 <memcpy@plt>
   139dc:	mov	r0, r6
   139e0:	pop	{r4, r5, r6, sl, fp, pc}
   139e4:	push	{r4, r5, r6, sl, fp, lr}
   139e8:	add	fp, sp, #16
   139ec:	mov	r4, r1
   139f0:	mov	r5, r0
   139f4:	mov	r0, r1
   139f8:	bl	136e8 <putchar_unlocked@plt+0x286c>
   139fc:	mov	r6, r0
   13a00:	mov	r1, r5
   13a04:	mov	r2, r4
   13a08:	bl	10cc0 <memcpy@plt>
   13a0c:	mov	r0, r6
   13a10:	pop	{r4, r5, r6, sl, fp, pc}
   13a14:	push	{r4, r5, r6, sl, fp, lr}
   13a18:	add	fp, sp, #16
   13a1c:	mov	r4, r1
   13a20:	mov	r5, r0
   13a24:	add	r0, r1, #1
   13a28:	bl	136e8 <putchar_unlocked@plt+0x286c>
   13a2c:	mov	r6, r0
   13a30:	mov	r0, #0
   13a34:	strb	r0, [r6, r4]
   13a38:	mov	r0, r6
   13a3c:	mov	r1, r5
   13a40:	mov	r2, r4
   13a44:	bl	10cc0 <memcpy@plt>
   13a48:	mov	r0, r6
   13a4c:	pop	{r4, r5, r6, sl, fp, pc}
   13a50:	push	{r4, sl, fp, lr}
   13a54:	add	fp, sp, #8
   13a58:	mov	r4, r0
   13a5c:	bl	10dc8 <strlen@plt>
   13a60:	add	r1, r0, #1
   13a64:	mov	r0, r4
   13a68:	pop	{r4, sl, fp, lr}
   13a6c:	b	139b4 <putchar_unlocked@plt+0x2b38>
   13a70:	push	{fp, lr}
   13a74:	mov	fp, sp
   13a78:	movw	r0, #20684	; 0x50cc
   13a7c:	movt	r0, #2
   13a80:	ldr	r4, [r0]
   13a84:	movw	r1, #19616	; 0x4ca0
   13a88:	movt	r1, #1
   13a8c:	mov	r0, #0
   13a90:	mov	r2, #5
   13a94:	bl	10cf0 <dcgettext@plt>
   13a98:	mov	r3, r0
   13a9c:	movw	r2, #18575	; 0x488f
   13aa0:	movt	r2, #1
   13aa4:	mov	r0, r4
   13aa8:	mov	r1, #0
   13aac:	bl	10d68 <error@plt>
   13ab0:	bl	10e70 <abort@plt>
   13ab4:	clz	r2, r1
   13ab8:	lsr	r2, r2, #5
   13abc:	clz	r3, r0
   13ac0:	lsr	r3, r3, #5
   13ac4:	orrs	r2, r3, r2
   13ac8:	movwne	r1, #1
   13acc:	movwne	r0, #1
   13ad0:	cmp	r1, #0
   13ad4:	beq	13b04 <putchar_unlocked@plt+0x2c88>
   13ad8:	mvn	r2, #-2147483648	; 0x80000000
   13adc:	udiv	r2, r2, r1
   13ae0:	cmp	r2, r0
   13ae4:	bcs	13b04 <putchar_unlocked@plt+0x2c88>
   13ae8:	push	{fp, lr}
   13aec:	mov	fp, sp
   13af0:	bl	10dd4 <__errno_location@plt>
   13af4:	mov	r1, #12
   13af8:	str	r1, [r0]
   13afc:	mov	r0, #0
   13b00:	pop	{fp, pc}
   13b04:	b	10c78 <calloc@plt>
   13b08:	cmp	r0, #0
   13b0c:	movweq	r0, #1
   13b10:	cmn	r0, #1
   13b14:	ble	13b1c <putchar_unlocked@plt+0x2ca0>
   13b18:	b	10d74 <malloc@plt>
   13b1c:	push	{fp, lr}
   13b20:	mov	fp, sp
   13b24:	bl	10dd4 <__errno_location@plt>
   13b28:	mov	r1, #12
   13b2c:	str	r1, [r0]
   13b30:	mov	r0, #0
   13b34:	pop	{fp, pc}
   13b38:	push	{fp, lr}
   13b3c:	mov	fp, sp
   13b40:	cmp	r0, #0
   13b44:	beq	13b60 <putchar_unlocked@plt+0x2ce4>
   13b48:	cmp	r1, #0
   13b4c:	beq	13b6c <putchar_unlocked@plt+0x2cf0>
   13b50:	cmn	r1, #1
   13b54:	ble	13b78 <putchar_unlocked@plt+0x2cfc>
   13b58:	pop	{fp, lr}
   13b5c:	b	10cfc <realloc@plt>
   13b60:	mov	r0, r1
   13b64:	pop	{fp, lr}
   13b68:	b	13b08 <putchar_unlocked@plt+0x2c8c>
   13b6c:	bl	140c4 <putchar_unlocked@plt+0x3248>
   13b70:	mov	r0, #0
   13b74:	pop	{fp, pc}
   13b78:	bl	10dd4 <__errno_location@plt>
   13b7c:	mov	r1, #12
   13b80:	str	r1, [r0]
   13b84:	mov	r0, #0
   13b88:	pop	{fp, pc}
   13b8c:	sub	r0, r0, #1
   13b90:	ldrb	r3, [r0, #1]!
   13b94:	cmp	r3, #47	; 0x2f
   13b98:	beq	13b90 <putchar_unlocked@plt+0x2d14>
   13b9c:	mov	r2, #0
   13ba0:	mov	r1, r0
   13ba4:	b	13bc0 <putchar_unlocked@plt+0x2d44>
   13ba8:	cmp	r3, #0
   13bac:	bxeq	lr
   13bb0:	tst	r2, #1
   13bb4:	movne	r0, r1
   13bb8:	mov	r2, #0
   13bbc:	ldrb	r3, [r1, #1]!
   13bc0:	uxtb	r3, r3
   13bc4:	cmp	r3, #47	; 0x2f
   13bc8:	bne	13ba8 <putchar_unlocked@plt+0x2d2c>
   13bcc:	mov	r2, #1
   13bd0:	ldrb	r3, [r1, #1]!
   13bd4:	b	13bc0 <putchar_unlocked@plt+0x2d44>
   13bd8:	push	{r4, sl, fp, lr}
   13bdc:	add	fp, sp, #8
   13be0:	mov	r4, r0
   13be4:	bl	10dc8 <strlen@plt>
   13be8:	mov	r1, r0
   13bec:	sub	r2, r4, #1
   13bf0:	mov	r0, r1
   13bf4:	cmp	r1, #2
   13bf8:	popcc	{r4, sl, fp, pc}
   13bfc:	ldrb	r3, [r2, r0]
   13c00:	sub	r1, r0, #1
   13c04:	cmp	r3, #47	; 0x2f
   13c08:	beq	13bf0 <putchar_unlocked@plt+0x2d74>
   13c0c:	pop	{r4, sl, fp, pc}
   13c10:	mov	r1, r0
   13c14:	sub	r2, r0, #65	; 0x41
   13c18:	mov	r0, #1
   13c1c:	cmp	r2, #26
   13c20:	subcs	r2, r1, #97	; 0x61
   13c24:	cmpcs	r2, #26
   13c28:	bcs	13c30 <putchar_unlocked@plt+0x2db4>
   13c2c:	bx	lr
   13c30:	sub	r1, r1, #48	; 0x30
   13c34:	cmp	r1, #10
   13c38:	movcs	r0, #0
   13c3c:	bx	lr
   13c40:	mov	r1, r0
   13c44:	sub	r2, r0, #65	; 0x41
   13c48:	mov	r0, #1
   13c4c:	cmp	r2, #26
   13c50:	subcs	r1, r1, #97	; 0x61
   13c54:	cmpcs	r1, #26
   13c58:	movcs	r0, #0
   13c5c:	bx	lr
   13c60:	mov	r1, #0
   13c64:	cmp	r0, #128	; 0x80
   13c68:	movwcc	r1, #1
   13c6c:	mov	r0, r1
   13c70:	bx	lr
   13c74:	sub	r1, r0, #9
   13c78:	clz	r1, r1
   13c7c:	lsr	r1, r1, #5
   13c80:	sub	r0, r0, #32
   13c84:	clz	r0, r0
   13c88:	lsr	r0, r0, #5
   13c8c:	orr	r0, r0, r1
   13c90:	bx	lr
   13c94:	mov	r1, r0
   13c98:	mov	r0, #1
   13c9c:	cmp	r1, #32
   13ca0:	bxcc	lr
   13ca4:	cmp	r1, #127	; 0x7f
   13ca8:	movne	r0, #0
   13cac:	bx	lr
   13cb0:	sub	r1, r0, #48	; 0x30
   13cb4:	mov	r0, #0
   13cb8:	cmp	r1, #10
   13cbc:	movwcc	r0, #1
   13cc0:	bx	lr
   13cc4:	sub	r1, r0, #33	; 0x21
   13cc8:	mov	r0, #0
   13ccc:	cmp	r1, #94	; 0x5e
   13cd0:	movwcc	r0, #1
   13cd4:	bx	lr
   13cd8:	sub	r1, r0, #97	; 0x61
   13cdc:	mov	r0, #0
   13ce0:	cmp	r1, #26
   13ce4:	movwcc	r0, #1
   13ce8:	bx	lr
   13cec:	sub	r1, r0, #32
   13cf0:	mov	r0, #0
   13cf4:	cmp	r1, #95	; 0x5f
   13cf8:	movwcc	r0, #1
   13cfc:	bx	lr
   13d00:	sub	r1, r0, #33	; 0x21
   13d04:	cmp	r1, #93	; 0x5d
   13d08:	bhi	13e94 <putchar_unlocked@plt+0x3018>
   13d0c:	mov	r0, #1
   13d10:	add	r2, pc, #0
   13d14:	ldr	pc, [r2, r1, lsl #2]
   13d18:	muleq	r1, r0, lr
   13d1c:	muleq	r1, r0, lr
   13d20:	muleq	r1, r0, lr
   13d24:	muleq	r1, r0, lr
   13d28:	muleq	r1, r0, lr
   13d2c:	muleq	r1, r0, lr
   13d30:	muleq	r1, r0, lr
   13d34:	muleq	r1, r0, lr
   13d38:	muleq	r1, r0, lr
   13d3c:	muleq	r1, r0, lr
   13d40:	muleq	r1, r0, lr
   13d44:	muleq	r1, r0, lr
   13d48:	muleq	r1, r0, lr
   13d4c:	muleq	r1, r0, lr
   13d50:	muleq	r1, r0, lr
   13d54:	muleq	r1, r4, lr
   13d58:	muleq	r1, r4, lr
   13d5c:	muleq	r1, r4, lr
   13d60:	muleq	r1, r4, lr
   13d64:	muleq	r1, r4, lr
   13d68:	muleq	r1, r4, lr
   13d6c:	muleq	r1, r4, lr
   13d70:	muleq	r1, r4, lr
   13d74:	muleq	r1, r4, lr
   13d78:	muleq	r1, r4, lr
   13d7c:	muleq	r1, r0, lr
   13d80:	muleq	r1, r0, lr
   13d84:	muleq	r1, r0, lr
   13d88:	muleq	r1, r0, lr
   13d8c:	muleq	r1, r0, lr
   13d90:	muleq	r1, r0, lr
   13d94:	muleq	r1, r0, lr
   13d98:	muleq	r1, r4, lr
   13d9c:	muleq	r1, r4, lr
   13da0:	muleq	r1, r4, lr
   13da4:	muleq	r1, r4, lr
   13da8:	muleq	r1, r4, lr
   13dac:	muleq	r1, r4, lr
   13db0:	muleq	r1, r4, lr
   13db4:	muleq	r1, r4, lr
   13db8:	muleq	r1, r4, lr
   13dbc:	muleq	r1, r4, lr
   13dc0:	muleq	r1, r4, lr
   13dc4:	muleq	r1, r4, lr
   13dc8:	muleq	r1, r4, lr
   13dcc:	muleq	r1, r4, lr
   13dd0:	muleq	r1, r4, lr
   13dd4:	muleq	r1, r4, lr
   13dd8:	muleq	r1, r4, lr
   13ddc:	muleq	r1, r4, lr
   13de0:	muleq	r1, r4, lr
   13de4:	muleq	r1, r4, lr
   13de8:	muleq	r1, r4, lr
   13dec:	muleq	r1, r4, lr
   13df0:	muleq	r1, r4, lr
   13df4:	muleq	r1, r4, lr
   13df8:	muleq	r1, r4, lr
   13dfc:	muleq	r1, r4, lr
   13e00:	muleq	r1, r0, lr
   13e04:	muleq	r1, r0, lr
   13e08:	muleq	r1, r0, lr
   13e0c:	muleq	r1, r0, lr
   13e10:	muleq	r1, r0, lr
   13e14:	muleq	r1, r0, lr
   13e18:	muleq	r1, r4, lr
   13e1c:	muleq	r1, r4, lr
   13e20:	muleq	r1, r4, lr
   13e24:	muleq	r1, r4, lr
   13e28:	muleq	r1, r4, lr
   13e2c:	muleq	r1, r4, lr
   13e30:	muleq	r1, r4, lr
   13e34:	muleq	r1, r4, lr
   13e38:	muleq	r1, r4, lr
   13e3c:	muleq	r1, r4, lr
   13e40:	muleq	r1, r4, lr
   13e44:	muleq	r1, r4, lr
   13e48:	muleq	r1, r4, lr
   13e4c:	muleq	r1, r4, lr
   13e50:	muleq	r1, r4, lr
   13e54:	muleq	r1, r4, lr
   13e58:	muleq	r1, r4, lr
   13e5c:	muleq	r1, r4, lr
   13e60:	muleq	r1, r4, lr
   13e64:	muleq	r1, r4, lr
   13e68:	muleq	r1, r4, lr
   13e6c:	muleq	r1, r4, lr
   13e70:	muleq	r1, r4, lr
   13e74:	muleq	r1, r4, lr
   13e78:	muleq	r1, r4, lr
   13e7c:	muleq	r1, r4, lr
   13e80:	muleq	r1, r0, lr
   13e84:	muleq	r1, r0, lr
   13e88:	muleq	r1, r0, lr
   13e8c:	muleq	r1, r0, lr
   13e90:	bx	lr
   13e94:	mov	r0, #0
   13e98:	bx	lr
   13e9c:	sub	r0, r0, #9
   13ea0:	cmp	r0, #23
   13ea4:	movhi	r0, #0
   13ea8:	bxhi	lr
   13eac:	bic	r0, r0, #-16777216	; 0xff000000
   13eb0:	movw	r1, #31
   13eb4:	movt	r1, #128	; 0x80
   13eb8:	mov	r2, #1
   13ebc:	and	r0, r2, r1, lsr r0
   13ec0:	bx	lr
   13ec4:	sub	r1, r0, #65	; 0x41
   13ec8:	mov	r0, #0
   13ecc:	cmp	r1, #26
   13ed0:	movwcc	r0, #1
   13ed4:	bx	lr
   13ed8:	mov	r1, r0
   13edc:	sub	r2, r0, #48	; 0x30
   13ee0:	mov	r0, #1
   13ee4:	cmp	r2, #22
   13ee8:	bhi	13f00 <putchar_unlocked@plt+0x3084>
   13eec:	mov	ip, #1
   13ef0:	movw	r3, #1023	; 0x3ff
   13ef4:	movt	r3, #126	; 0x7e
   13ef8:	tst	r3, ip, lsl r2
   13efc:	bxne	lr
   13f00:	sub	r1, r1, #97	; 0x61
   13f04:	cmp	r1, #6
   13f08:	movcs	r0, #0
   13f0c:	bxcs	lr
   13f10:	bx	lr
   13f14:	sub	r1, r0, #65	; 0x41
   13f18:	cmp	r1, #26
   13f1c:	addcc	r0, r0, #32
   13f20:	bx	lr
   13f24:	sub	r1, r0, #97	; 0x61
   13f28:	cmp	r1, #26
   13f2c:	subcc	r0, r0, #32
   13f30:	bx	lr
   13f34:	push	{r4, r5, r6, sl, fp, lr}
   13f38:	add	fp, sp, #16
   13f3c:	mov	r4, r0
   13f40:	bl	10d44 <__fpending@plt>
   13f44:	mov	r5, r0
   13f48:	mov	r0, r4
   13f4c:	bl	10d50 <ferror_unlocked@plt>
   13f50:	mov	r6, r0
   13f54:	mov	r0, r4
   13f58:	bl	13fbc <putchar_unlocked@plt+0x3140>
   13f5c:	cmp	r6, #0
   13f60:	beq	13f80 <putchar_unlocked@plt+0x3104>
   13f64:	mvn	r4, #0
   13f68:	cmp	r0, #0
   13f6c:	bne	13fb4 <putchar_unlocked@plt+0x3138>
   13f70:	bl	10dd4 <__errno_location@plt>
   13f74:	mov	r1, #0
   13f78:	str	r1, [r0]
   13f7c:	b	13fb4 <putchar_unlocked@plt+0x3138>
   13f80:	cmp	r0, #0
   13f84:	mov	r4, r0
   13f88:	mvnne	r4, #0
   13f8c:	cmp	r5, #0
   13f90:	bne	13fb4 <putchar_unlocked@plt+0x3138>
   13f94:	cmp	r0, #0
   13f98:	beq	13fb4 <putchar_unlocked@plt+0x3138>
   13f9c:	bl	10dd4 <__errno_location@plt>
   13fa0:	ldr	r0, [r0]
   13fa4:	subs	r4, r0, #9
   13fa8:	mvnne	r4, #0
   13fac:	mov	r0, r4
   13fb0:	pop	{r4, r5, r6, sl, fp, pc}
   13fb4:	mov	r0, r4
   13fb8:	pop	{r4, r5, r6, sl, fp, pc}
   13fbc:	push	{r4, r5, fp, lr}
   13fc0:	add	fp, sp, #8
   13fc4:	sub	sp, sp, #8
   13fc8:	mov	r4, r0
   13fcc:	bl	10e04 <fileno@plt>
   13fd0:	cmn	r0, #1
   13fd4:	ble	1404c <putchar_unlocked@plt+0x31d0>
   13fd8:	mov	r0, r4
   13fdc:	bl	10d8c <__freading@plt>
   13fe0:	cmp	r0, #0
   13fe4:	beq	14010 <putchar_unlocked@plt+0x3194>
   13fe8:	mov	r0, r4
   13fec:	bl	10e04 <fileno@plt>
   13ff0:	mov	r1, #1
   13ff4:	str	r1, [sp]
   13ff8:	mov	r2, #0
   13ffc:	mov	r3, #0
   14000:	bl	10d2c <lseek64@plt>
   14004:	and	r0, r0, r1
   14008:	cmn	r0, #1
   1400c:	beq	1404c <putchar_unlocked@plt+0x31d0>
   14010:	mov	r0, r4
   14014:	bl	1405c <putchar_unlocked@plt+0x31e0>
   14018:	cmp	r0, #0
   1401c:	beq	1404c <putchar_unlocked@plt+0x31d0>
   14020:	bl	10dd4 <__errno_location@plt>
   14024:	ldr	r5, [r0]
   14028:	mov	r0, r4
   1402c:	bl	10e1c <fclose@plt>
   14030:	cmp	r5, #0
   14034:	beq	14044 <putchar_unlocked@plt+0x31c8>
   14038:	bl	10dd4 <__errno_location@plt>
   1403c:	str	r5, [r0]
   14040:	mvn	r0, #0
   14044:	sub	sp, fp, #8
   14048:	pop	{r4, r5, fp, pc}
   1404c:	mov	r0, r4
   14050:	sub	sp, fp, #8
   14054:	pop	{r4, r5, fp, lr}
   14058:	b	10e1c <fclose@plt>
   1405c:	push	{r4, sl, fp, lr}
   14060:	add	fp, sp, #8
   14064:	mov	r4, r0
   14068:	cmp	r0, #0
   1406c:	beq	14084 <putchar_unlocked@plt+0x3208>
   14070:	mov	r0, r4
   14074:	bl	10d8c <__freading@plt>
   14078:	cmp	r0, #0
   1407c:	movne	r0, r4
   14080:	blne	14090 <putchar_unlocked@plt+0x3214>
   14084:	mov	r0, r4
   14088:	pop	{r4, sl, fp, lr}
   1408c:	b	10c9c <fflush@plt>
   14090:	ldrb	r1, [r0, #1]
   14094:	tst	r1, #1
   14098:	bxeq	lr
   1409c:	push	{fp, lr}
   140a0:	mov	fp, sp
   140a4:	sub	sp, sp, #8
   140a8:	mov	r1, #1
   140ac:	str	r1, [sp]
   140b0:	mov	r2, #0
   140b4:	mov	r3, #0
   140b8:	bl	140ec <putchar_unlocked@plt+0x3270>
   140bc:	mov	sp, fp
   140c0:	pop	{fp, pc}
   140c4:	push	{r4, r5, r6, sl, fp, lr}
   140c8:	add	fp, sp, #16
   140cc:	mov	r4, r0
   140d0:	bl	10dd4 <__errno_location@plt>
   140d4:	mov	r5, r0
   140d8:	ldr	r6, [r0]
   140dc:	mov	r0, r4
   140e0:	bl	10ca8 <free@plt>
   140e4:	str	r6, [r5]
   140e8:	pop	{r4, r5, r6, sl, fp, pc}
   140ec:	push	{r4, r5, r6, r7, fp, lr}
   140f0:	add	fp, sp, #16
   140f4:	sub	sp, sp, #8
   140f8:	mov	r5, r3
   140fc:	mov	r6, r2
   14100:	mov	r4, r0
   14104:	ldr	r0, [r0, #4]
   14108:	ldr	r1, [r4, #8]
   1410c:	cmp	r1, r0
   14110:	bne	1412c <putchar_unlocked@plt+0x32b0>
   14114:	ldrd	r0, [r4, #16]
   14118:	cmp	r1, r0
   1411c:	bne	1412c <putchar_unlocked@plt+0x32b0>
   14120:	ldr	r0, [r4, #36]	; 0x24
   14124:	cmp	r0, #0
   14128:	beq	14144 <putchar_unlocked@plt+0x32c8>
   1412c:	mov	r0, r4
   14130:	mov	r2, r6
   14134:	mov	r3, r5
   14138:	sub	sp, fp, #16
   1413c:	pop	{r4, r5, r6, r7, fp, lr}
   14140:	b	10e28 <fseeko64@plt>
   14144:	ldr	r7, [fp, #8]
   14148:	mov	r0, r4
   1414c:	bl	10e04 <fileno@plt>
   14150:	str	r7, [sp]
   14154:	mov	r2, r6
   14158:	mov	r3, r5
   1415c:	bl	10d2c <lseek64@plt>
   14160:	and	r2, r0, r1
   14164:	cmn	r2, #1
   14168:	mvneq	r0, #0
   1416c:	subeq	sp, fp, #16
   14170:	popeq	{r4, r5, r6, r7, fp, pc}
   14174:	strd	r0, [r4, #80]	; 0x50
   14178:	ldr	r0, [r4]
   1417c:	bic	r0, r0, #16
   14180:	str	r0, [r4]
   14184:	mov	r0, #0
   14188:	sub	sp, fp, #16
   1418c:	pop	{r4, r5, r6, r7, fp, pc}
   14190:	push	{fp, lr}
   14194:	mov	fp, sp
   14198:	bl	10dd4 <__errno_location@plt>
   1419c:	mov	r1, #12
   141a0:	str	r1, [r0]
   141a4:	mov	r0, #0
   141a8:	pop	{fp, pc}
   141ac:	b	13b08 <putchar_unlocked@plt+0x2c8c>
   141b0:	cmp	r1, #0
   141b4:	orreq	r1, r1, #1
   141b8:	b	13b38 <putchar_unlocked@plt+0x2cbc>
   141bc:	b	13ab4 <putchar_unlocked@plt+0x2c38>
   141c0:	clz	r3, r2
   141c4:	lsr	ip, r3, #5
   141c8:	clz	r3, r1
   141cc:	lsr	r3, r3, #5
   141d0:	orrs	r3, r3, ip
   141d4:	movwne	r1, #1
   141d8:	movwne	r2, #1
   141dc:	b	14278 <putchar_unlocked@plt+0x33fc>
   141e0:	push	{fp, lr}
   141e4:	mov	fp, sp
   141e8:	mov	r0, #14
   141ec:	bl	10e4c <nl_langinfo@plt>
   141f0:	movw	r1, #17702	; 0x4526
   141f4:	movt	r1, #1
   141f8:	cmp	r0, #0
   141fc:	movne	r1, r0
   14200:	ldrb	r2, [r1]
   14204:	movw	r0, #19633	; 0x4cb1
   14208:	movt	r0, #1
   1420c:	cmp	r2, #0
   14210:	movne	r0, r1
   14214:	pop	{fp, pc}
   14218:	push	{r4, r5, r6, r7, fp, lr}
   1421c:	add	fp, sp, #16
   14220:	sub	sp, sp, #8
   14224:	mov	r7, r2
   14228:	mov	r4, r1
   1422c:	add	r5, sp, #4
   14230:	cmp	r0, #0
   14234:	movne	r5, r0
   14238:	mov	r0, r5
   1423c:	bl	10d5c <mbrtowc@plt>
   14240:	mov	r6, r0
   14244:	cmp	r7, #0
   14248:	beq	1426c <putchar_unlocked@plt+0x33f0>
   1424c:	cmn	r6, #2
   14250:	bcc	1426c <putchar_unlocked@plt+0x33f0>
   14254:	mov	r0, #0
   14258:	bl	142b4 <putchar_unlocked@plt+0x3438>
   1425c:	cmp	r0, #0
   14260:	ldrbeq	r0, [r4]
   14264:	streq	r0, [r5]
   14268:	moveq	r6, #1
   1426c:	mov	r0, r6
   14270:	sub	sp, fp, #16
   14274:	pop	{r4, r5, r6, r7, fp, pc}
   14278:	cmp	r2, #0
   1427c:	beq	142ac <putchar_unlocked@plt+0x3430>
   14280:	mvn	r3, #0
   14284:	udiv	r3, r3, r2
   14288:	cmp	r3, r1
   1428c:	bcs	142ac <putchar_unlocked@plt+0x3430>
   14290:	push	{fp, lr}
   14294:	mov	fp, sp
   14298:	bl	10dd4 <__errno_location@plt>
   1429c:	mov	r1, #12
   142a0:	str	r1, [r0]
   142a4:	mov	r0, #0
   142a8:	pop	{fp, pc}
   142ac:	mul	r1, r2, r1
   142b0:	b	13b38 <putchar_unlocked@plt+0x2cbc>
   142b4:	push	{r4, sl, fp, lr}
   142b8:	add	fp, sp, #8
   142bc:	sub	sp, sp, #264	; 0x108
   142c0:	add	r1, sp, #7
   142c4:	movw	r2, #257	; 0x101
   142c8:	bl	14318 <putchar_unlocked@plt+0x349c>
   142cc:	mov	r4, #0
   142d0:	cmp	r0, #0
   142d4:	bne	1430c <putchar_unlocked@plt+0x3490>
   142d8:	add	r0, sp, #7
   142dc:	movw	r1, #19639	; 0x4cb7
   142e0:	movt	r1, #1
   142e4:	bl	10c90 <strcmp@plt>
   142e8:	cmp	r0, #0
   142ec:	beq	1430c <putchar_unlocked@plt+0x3490>
   142f0:	add	r0, sp, #7
   142f4:	movw	r1, #19641	; 0x4cb9
   142f8:	movt	r1, #1
   142fc:	bl	10c90 <strcmp@plt>
   14300:	mov	r4, r0
   14304:	cmp	r0, #0
   14308:	movwne	r4, #1
   1430c:	mov	r0, r4
   14310:	sub	sp, fp, #8
   14314:	pop	{r4, sl, fp, pc}
   14318:	b	1431c <putchar_unlocked@plt+0x34a0>
   1431c:	push	{r4, r5, r6, r7, fp, lr}
   14320:	add	fp, sp, #16
   14324:	mov	r6, r2
   14328:	mov	r4, r1
   1432c:	bl	143b8 <putchar_unlocked@plt+0x353c>
   14330:	cmp	r0, #0
   14334:	beq	14364 <putchar_unlocked@plt+0x34e8>
   14338:	mov	r7, r0
   1433c:	bl	10dc8 <strlen@plt>
   14340:	cmp	r0, r6
   14344:	bcs	14384 <putchar_unlocked@plt+0x3508>
   14348:	add	r2, r0, #1
   1434c:	mov	r0, r4
   14350:	mov	r1, r7
   14354:	bl	10cc0 <memcpy@plt>
   14358:	mov	r5, #0
   1435c:	mov	r0, r5
   14360:	pop	{r4, r5, r6, r7, fp, pc}
   14364:	mov	r5, #22
   14368:	cmp	r6, #0
   1436c:	movne	r0, #0
   14370:	strbne	r0, [r4]
   14374:	movne	r0, r5
   14378:	popne	{r4, r5, r6, r7, fp, pc}
   1437c:	mov	r0, r5
   14380:	pop	{r4, r5, r6, r7, fp, pc}
   14384:	mov	r5, #34	; 0x22
   14388:	cmp	r6, #0
   1438c:	beq	143ac <putchar_unlocked@plt+0x3530>
   14390:	sub	r6, r6, #1
   14394:	mov	r0, r4
   14398:	mov	r1, r7
   1439c:	mov	r2, r6
   143a0:	bl	10cc0 <memcpy@plt>
   143a4:	mov	r0, #0
   143a8:	strb	r0, [r4, r6]
   143ac:	mov	r0, r5
   143b0:	pop	{r4, r5, r6, r7, fp, pc}
   143b4:	b	143b8 <putchar_unlocked@plt+0x353c>
   143b8:	mov	r1, #0
   143bc:	b	10e34 <setlocale@plt>
   143c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   143c4:	mov	r7, r0
   143c8:	ldr	r6, [pc, #72]	; 14418 <putchar_unlocked@plt+0x359c>
   143cc:	ldr	r5, [pc, #72]	; 1441c <putchar_unlocked@plt+0x35a0>
   143d0:	add	r6, pc, r6
   143d4:	add	r5, pc, r5
   143d8:	sub	r6, r6, r5
   143dc:	mov	r8, r1
   143e0:	mov	r9, r2
   143e4:	bl	10c58 <calloc@plt-0x20>
   143e8:	asrs	r6, r6, #2
   143ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   143f0:	mov	r4, #0
   143f4:	add	r4, r4, #1
   143f8:	ldr	r3, [r5], #4
   143fc:	mov	r2, r9
   14400:	mov	r1, r8
   14404:	mov	r0, r7
   14408:	blx	r3
   1440c:	cmp	r6, r4
   14410:	bne	143f4 <putchar_unlocked@plt+0x3578>
   14414:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14418:	andeq	r0, r1, r4, lsr fp
   1441c:	andeq	r0, r1, ip, lsr #22
   14420:	bx	lr
   14424:	ldr	r3, [pc, #12]	; 14438 <putchar_unlocked@plt+0x35bc>
   14428:	mov	r1, #0
   1442c:	add	r3, pc, r3
   14430:	ldr	r2, [r3]
   14434:	b	10de0 <__cxa_atexit@plt>
   14438:	muleq	r1, r0, ip

Disassembly of section .fini:

0001443c <.fini>:
   1443c:	push	{r3, lr}
   14440:	pop	{r3, pc}
