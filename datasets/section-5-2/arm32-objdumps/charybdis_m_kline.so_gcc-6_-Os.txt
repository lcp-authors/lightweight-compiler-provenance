
../repos/charybdis/modules/.libs/m_kline.so:     file format elf32-littlearm


Disassembly of section .init:

00000be8 <_init>:
 be8:	push	{r3, lr}
 bec:	bl	e18 <call_weak_fn>
 bf0:	pop	{r3, pc}

Disassembly of section .plt:

00000bf4 <.plt>:
 bf4:	push	{lr}		; (str lr, [sp, #-4]!)
 bf8:	ldr	lr, [pc, #4]	; c04 <.plt+0x10>
 bfc:	add	lr, pc, lr
 c00:	ldr	pc, [lr, #8]!
 c04:	.word	0x000133fc

00000c08 <propagate_generic@plt>:
 c08:	add	ip, pc, #0, 12
 c0c:	add	ip, ip, #77824	; 0x13000
 c10:	ldr	pc, [ip, #1020]!	; 0x3fc

00000c14 <make_conf@plt>:
 c14:	add	ip, pc, #0, 12
 c18:	add	ip, ip, #77824	; 0x13000
 c1c:	ldr	pc, [ip, #1012]!	; 0x3f4

00000c20 <parse_netmask_strict@plt>:
 c20:	add	ip, pc, #0, 12
 c24:	add	ip, ip, #77824	; 0x13000
 c28:	ldr	pc, [ip, #1004]!	; 0x3ec

00000c2c <raise@plt>:
 c2c:	add	ip, pc, #0, 12
 c30:	add	ip, ip, #77824	; 0x13000
 c34:	ldr	pc, [ip, #996]!	; 0x3e4

00000c38 <rb_current_time@plt>:
 c38:	add	ip, pc, #0, 12
 c3c:	add	ip, ip, #77824	; 0x13000
 c40:	ldr	pc, [ip, #988]!	; 0x3dc

00000c44 <__cxa_finalize@plt>:
 c44:	add	ip, pc, #0, 12
 c48:	add	ip, ip, #77824	; 0x13000
 c4c:	ldr	pc, [ip, #980]!	; 0x3d4

00000c50 <sendto_one@plt>:
 c50:	add	ip, pc, #0, 12
 c54:	add	ip, ip, #77824	; 0x13000
 c58:	ldr	pc, [ip, #972]!	; 0x3cc

00000c5c <find_conf_by_address@plt>:
 c5c:	add	ip, pc, #0, 12
 c60:	add	ip, ip, #77824	; 0x13000
 c64:	ldr	pc, [ip, #964]!	; 0x3c4

00000c68 <add_temp_kline@plt>:
 c68:	add	ip, pc, #0, 12
 c6c:	add	ip, ip, #77824	; 0x13000
 c70:	ldr	pc, [ip, #956]!	; 0x3bc

00000c74 <replace_old_ban@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #77824	; 0x13000
 c7c:	ldr	pc, [ip, #948]!	; 0x3b4

00000c80 <rb_outofmemory@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #77824	; 0x13000
 c88:	ldr	pc, [ip, #940]!	; 0x3ac

00000c8c <operhash_delete@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #77824	; 0x13000
 c94:	ldr	pc, [ip, #932]!	; 0x3a4

00000c98 <sendto_realops_snomask@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #77824	; 0x13000
 ca0:	ldr	pc, [ip, #924]!	; 0x39c

00000ca4 <bandb_add@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #77824	; 0x13000
 cac:	ldr	pc, [ip, #916]!	; 0x394

00000cb0 <deactivate_conf@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #77824	; 0x13000
 cb8:	ldr	pc, [ip, #908]!	; 0x38c

00000cbc <get_oper_name@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #77824	; 0x13000
 cc4:	ldr	pc, [ip, #900]!	; 0x384

00000cc8 <rb_free_rb_dlink_node@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #77824	; 0x13000
 cd0:	ldr	pc, [ip, #892]!	; 0x37c

00000cd4 <cluster_generic@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #77824	; 0x13000
 cdc:	ldr	pc, [ip, #884]!	; 0x374

00000ce0 <operhash_add@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #77824	; 0x13000
 ce8:	ldr	pc, [ip, #876]!	; 0x36c

00000cec <check_one_kline@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #77824	; 0x13000
 cf4:	ldr	pc, [ip, #868]!	; 0x364

00000cf8 <strcpy@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #77824	; 0x13000
 d00:	ldr	pc, [ip, #860]!	; 0x35c

00000d04 <sendto_server@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #77824	; 0x13000
 d0c:	ldr	pc, [ip, #852]!	; 0x354

00000d10 <rb_set_time@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #77824	; 0x13000
 d18:	ldr	pc, [ip, #844]!	; 0x34c

00000d1c <valid_wild_card@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #77824	; 0x13000
 d24:	ldr	pc, [ip, #836]!	; 0x344

00000d28 <malloc@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #77824	; 0x13000
 d30:	ldr	pc, [ip, #828]!	; 0x33c

00000d34 <add_conf_by_address@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #77824	; 0x13000
 d3c:	ldr	pc, [ip, #820]!	; 0x334

00000d40 <__gmon_start__@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #77824	; 0x13000
 d48:	ldr	pc, [ip, #812]!	; 0x32c

00000d4c <rb_make_rb_dlink_node@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #77824	; 0x13000
 d54:	ldr	pc, [ip, #804]!	; 0x324

00000d58 <strlen@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #77824	; 0x13000
 d60:	ldr	pc, [ip, #796]!	; 0x31c

00000d64 <strchr@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #77824	; 0x13000
 d6c:	ldr	pc, [ip, #788]!	; 0x314

00000d70 <delete_one_address_conf@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #77824	; 0x13000
 d78:	ldr	pc, [ip, #780]!	; 0x30c

00000d7c <ilog@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #77824	; 0x13000
 d84:	ldr	pc, [ip, #772]!	; 0x304

00000d88 <match@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #77824	; 0x13000
 d90:	ldr	pc, [ip, #764]!	; 0x2fc

00000d94 <valid_temp_time@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #77824	; 0x13000
 d9c:	ldr	pc, [ip, #756]!	; 0x2f4

00000da0 <remove_reject_mask@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #77824	; 0x13000
 da8:	ldr	pc, [ip, #748]!	; 0x2ec

00000dac <sendto_one_notice@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #77824	; 0x13000
 db4:	ldr	pc, [ip, #740]!	; 0x2e4

00000db8 <bandb_del@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #77824	; 0x13000
 dc0:	ldr	pc, [ip, #732]!	; 0x2dc

00000dc4 <atoi@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #77824	; 0x13000
 dcc:	ldr	pc, [ip, #724]!	; 0x2d4

00000dd0 <find_exact_conf_by_address@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #77824	; 0x13000
 dd8:	ldr	pc, [ip, #716]!	; 0x2cc

00000ddc <rb_strlcpy@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #77824	; 0x13000
 de4:	ldr	pc, [ip, #708]!	; 0x2c4

00000de8 <find_shared_conf@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #77824	; 0x13000
 df0:	ldr	pc, [ip, #700]!	; 0x2bc

00000df4 <privilegeset_in_set@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #77824	; 0x13000
 dfc:	ldr	pc, [ip, #692]!	; 0x2b4

00000e00 <irccmp@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #77824	; 0x13000
 e08:	ldr	pc, [ip, #684]!	; 0x2ac

00000e0c <__assert_fail@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #77824	; 0x13000
 e14:	ldr	pc, [ip, #676]!	; 0x2a4

Disassembly of section .text:

00000e18 <call_weak_fn>:
     e18:	ldr	r3, [pc, #20]	; e34 <call_weak_fn+0x1c>
     e1c:	ldr	r2, [pc, #20]	; e38 <call_weak_fn+0x20>
     e20:	add	r3, pc, r3
     e24:	ldr	r2, [r3, r2]
     e28:	cmp	r2, #0
     e2c:	bxeq	lr
     e30:	b	d40 <__gmon_start__@plt>
     e34:	.word	0x000131d8
     e38:	.word	0x000000d4

00000e3c <deregister_tm_clones>:
     e3c:	ldr	r3, [pc, #52]	; e78 <deregister_tm_clones+0x3c>
     e40:	ldr	r0, [pc, #52]	; e7c <deregister_tm_clones+0x40>
     e44:	add	r3, pc, r3
     e48:	add	r0, pc, r0
     e4c:	add	r3, r3, #3
     e50:	sub	r3, r3, r0
     e54:	cmp	r3, #6
     e58:	ldr	r3, [pc, #32]	; e80 <deregister_tm_clones+0x44>
     e5c:	add	r3, pc, r3
     e60:	bxls	lr
     e64:	ldr	r2, [pc, #24]	; e84 <deregister_tm_clones+0x48>
     e68:	ldr	r3, [r3, r2]
     e6c:	cmp	r3, #0
     e70:	bxeq	lr
     e74:	bx	r3
     e78:	.word	0x00013368
     e7c:	.word	0x00013364
     e80:	.word	0x0001319c
     e84:	.word	0x000000c4

00000e88 <register_tm_clones>:
     e88:	ldr	r1, [pc, #56]	; ec8 <register_tm_clones+0x40>
     e8c:	ldr	r0, [pc, #56]	; ecc <register_tm_clones+0x44>
     e90:	add	r1, pc, r1
     e94:	add	r0, pc, r0
     e98:	sub	r1, r1, r0
     e9c:	ldr	r3, [pc, #44]	; ed0 <register_tm_clones+0x48>
     ea0:	asr	r1, r1, #2
     ea4:	add	r3, pc, r3
     ea8:	add	r1, r1, r1, lsr #31
     eac:	asrs	r1, r1, #1
     eb0:	bxeq	lr
     eb4:	ldr	r2, [pc, #24]	; ed4 <register_tm_clones+0x4c>
     eb8:	ldr	r3, [r3, r2]
     ebc:	cmp	r3, #0
     ec0:	bxeq	lr
     ec4:	bx	r3
     ec8:	.word	0x0001331c
     ecc:	.word	0x00013318
     ed0:	.word	0x00013154
     ed4:	.word	0x000000e8

00000ed8 <__do_global_dtors_aux>:
     ed8:	ldr	r3, [pc, #76]	; f2c <__do_global_dtors_aux+0x54>
     edc:	ldr	r2, [pc, #76]	; f30 <__do_global_dtors_aux+0x58>
     ee0:	add	r3, pc, r3
     ee4:	add	r2, pc, r2
     ee8:	ldrb	r3, [r3]
     eec:	cmp	r3, #0
     ef0:	bxne	lr
     ef4:	ldr	r3, [pc, #56]	; f34 <__do_global_dtors_aux+0x5c>
     ef8:	push	{r4, lr}
     efc:	ldr	r3, [r2, r3]
     f00:	cmp	r3, #0
     f04:	beq	f14 <__do_global_dtors_aux+0x3c>
     f08:	ldr	r3, [pc, #40]	; f38 <__do_global_dtors_aux+0x60>
     f0c:	ldr	r0, [pc, r3]
     f10:	bl	c44 <__cxa_finalize@plt>
     f14:	bl	e3c <deregister_tm_clones>
     f18:	ldr	r3, [pc, #28]	; f3c <__do_global_dtors_aux+0x64>
     f1c:	mov	r2, #1
     f20:	add	r3, pc, r3
     f24:	strb	r2, [r3]
     f28:	pop	{r4, pc}
     f2c:	.word	0x000132cc
     f30:	.word	0x00013114
     f34:	.word	0x000000bc
     f38:	.word	0x000131e0
     f3c:	.word	0x0001328c

00000f40 <frame_dummy>:
     f40:	ldr	r0, [pc, #56]	; f80 <frame_dummy+0x40>
     f44:	ldr	r3, [pc, #56]	; f84 <frame_dummy+0x44>
     f48:	add	r0, pc, r0
     f4c:	ldr	r2, [r0]
     f50:	add	r3, pc, r3
     f54:	cmp	r2, #0
     f58:	bne	f60 <frame_dummy+0x20>
     f5c:	b	e88 <register_tm_clones>
     f60:	ldr	r2, [pc, #32]	; f88 <frame_dummy+0x48>
     f64:	ldr	r3, [r3, r2]
     f68:	cmp	r3, #0
     f6c:	beq	f5c <frame_dummy+0x1c>
     f70:	push	{r4, lr}
     f74:	blx	r3
     f78:	pop	{r4, lr}
     f7c:	b	e88 <register_tm_clones>
     f80:	.word	0x00012fac
     f84:	.word	0x000130a8
     f88:	.word	0x000000e0

00000f8c <valid_user_host>:
     f8c:	push	{r4, r5, r6, lr}
     f90:	mov	r6, r0
     f94:	mov	r5, r1
     f98:	mov	r0, r2
     f9c:	mov	r1, #35	; 0x23
     fa0:	mov	r4, r2
     fa4:	bl	d64 <strchr@plt>
     fa8:	cmp	r0, #0
     fac:	bne	fec <valid_user_host+0x60>
     fb0:	mov	r1, #35	; 0x23
     fb4:	mov	r0, r5
     fb8:	bl	d64 <strchr@plt>
     fbc:	cmp	r0, #0
     fc0:	bne	fec <valid_user_host+0x60>
     fc4:	mov	r1, #33	; 0x21
     fc8:	mov	r0, r5
     fcc:	bl	d64 <strchr@plt>
     fd0:	cmp	r0, #0
     fd4:	bne	fec <valid_user_host+0x60>
     fd8:	mov	r1, #64	; 0x40
     fdc:	mov	r0, r4
     fe0:	bl	d64 <strchr@plt>
     fe4:	cmp	r0, #0
     fe8:	beq	1004 <valid_user_host+0x78>
     fec:	ldr	r1, [pc, #24]	; 100c <valid_user_host+0x80>
     ff0:	mov	r0, r6
     ff4:	add	r1, pc, r1
     ff8:	bl	dac <sendto_one_notice@plt>
     ffc:	mov	r0, #0
    1000:	pop	{r4, r5, r6, pc}
    1004:	mov	r0, #1
    1008:	pop	{r4, r5, r6, pc}
    100c:	.word	0x00001b46

00001010 <already_placed_kline>:
    1010:	push	{r4, r5, r6, r7, r8, r9, lr}
    1014:	mov	r6, r2
    1018:	sub	sp, sp, #156	; 0x9c
    101c:	mov	r2, r1
    1020:	mov	r8, r0
    1024:	mov	r7, r1
    1028:	mov	r0, r6
    102c:	mov	r1, #64	; 0x40
    1030:	mov	r9, r3
    1034:	bl	dd0 <find_exact_conf_by_address@plt>
    1038:	ldr	r5, [pc, #268]	; 114c <already_placed_kline+0x13c>
    103c:	add	r5, pc, r5
    1040:	subs	r4, r0, #0
    1044:	bne	10f4 <already_placed_kline+0xe4>
    1048:	ldr	r3, [pc, #256]	; 1150 <already_placed_kline+0x140>
    104c:	ldr	r3, [r5, r3]
    1050:	ldr	r3, [r3, #140]	; 0x8c
    1054:	cmp	r3, #0
    1058:	bne	1068 <already_placed_kline+0x58>
    105c:	mov	r0, #0
    1060:	add	sp, sp, #156	; 0x9c
    1064:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1068:	add	r2, sp, #152	; 0x98
    106c:	add	r5, sp, #24
    1070:	str	r4, [r2, #-132]!	; 0xffffff7c
    1074:	mov	r1, r5
    1078:	mov	r0, r6
    107c:	bl	c20 <parse_netmask_strict@plt>
    1080:	cmp	r0, #2
    1084:	beq	1098 <already_placed_kline+0x88>
    1088:	cmp	r0, #3
    108c:	movne	r3, r4
    1090:	bne	109c <already_placed_kline+0x8c>
    1094:	mov	r0, #10
    1098:	mov	r3, r5
    109c:	mov	r2, #64	; 0x40
    10a0:	str	r2, [sp]
    10a4:	mov	r2, #0
    10a8:	str	r4, [sp, #12]
    10ac:	stmib	sp, {r0, r7}
    10b0:	mov	r1, r2
    10b4:	mov	r0, r6
    10b8:	bl	c5c <find_conf_by_address@plt>
    10bc:	subs	r4, r0, #0
    10c0:	beq	105c <already_placed_kline+0x4c>
    10c4:	mov	r1, #47	; 0x2f
    10c8:	ldr	r0, [r4, #16]
    10cc:	bl	d64 <strchr@plt>
    10d0:	ldr	r5, [sp, #20]
    10d4:	cmp	r5, #0
    10d8:	ble	10f4 <already_placed_kline+0xe4>
    10dc:	cmp	r0, #0
    10e0:	beq	105c <already_placed_kline+0x4c>
    10e4:	add	r0, r0, #1
    10e8:	bl	dc4 <atoi@plt>
    10ec:	cmp	r5, r0
    10f0:	blt	105c <already_placed_kline+0x4c>
    10f4:	cmp	r9, #0
    10f8:	bne	1108 <already_placed_kline+0xf8>
    10fc:	ldr	r3, [r4, #4]
    1100:	tst	r3, #8388608	; 0x800000
    1104:	bne	105c <already_placed_kline+0x4c>
    1108:	ldr	r3, [r4, #20]
    110c:	cmp	r3, #0
    1110:	ldreq	r3, [pc, #60]	; 1154 <already_placed_kline+0x144>
    1114:	addeq	r3, pc, r3
    1118:	str	r3, [sp, #8]
    111c:	ldr	r3, [r4, #16]
    1120:	ldr	r1, [pc, #48]	; 1158 <already_placed_kline+0x148>
    1124:	str	r3, [sp, #4]
    1128:	ldr	r3, [r4, #28]
    112c:	mov	r0, r8
    1130:	str	r3, [sp]
    1134:	mov	r2, r7
    1138:	mov	r3, r6
    113c:	add	r1, pc, r1
    1140:	bl	dac <sendto_one_notice@plt>
    1144:	mov	r0, #1
    1148:	b	1060 <already_placed_kline+0x50>
    114c:	.word	0x00012fbc
    1150:	.word	0x000000f0
    1154:	.word	0x00001a36
    1158:	.word	0x00001a1a

0000115c <rb_strdup>:
    115c:	push	{r4, r5, r6, lr}
    1160:	mov	r5, r0
    1164:	bl	d58 <strlen@plt>
    1168:	add	r0, r0, #1
    116c:	bl	d28 <malloc@plt>
    1170:	subs	r4, r0, #0
    1174:	bne	117c <rb_strdup+0x20>
    1178:	bl	c80 <rb_outofmemory@plt>
    117c:	mov	r1, r5
    1180:	bl	cf8 <strcpy@plt>
    1184:	mov	r0, r4
    1188:	pop	{r4, r5, r6, pc}

0000118c <apply_tkline>:
    118c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1190:	sub	sp, sp, #24
    1194:	mov	r4, r1
    1198:	mov	r8, r3
    119c:	mov	r5, r0
    11a0:	mov	r7, r2
    11a4:	ldr	r6, [sp, #56]	; 0x38
    11a8:	bl	c38 <rb_current_time@plt>
    11ac:	add	r0, r0, r6
    11b0:	str	r0, [r4, #36]	; 0x24
    11b4:	mov	r0, r4
    11b8:	bl	c68 <add_temp_kline@plt>
    11bc:	cmp	r8, #0
    11c0:	mov	r0, r5
    11c4:	beq	11d4 <apply_tkline+0x48>
    11c8:	ldrb	r3, [r8]
    11cc:	cmp	r3, #0
    11d0:	bne	1284 <apply_tkline+0xf8>
    11d4:	bl	cbc <get_oper_name@plt>
    11d8:	mov	r1, #60	; 0x3c
    11dc:	mov	r9, r0
    11e0:	mov	r0, r6
    11e4:	bl	28a8 <__divsi3>
    11e8:	ldr	r3, [r4, #16]
    11ec:	ldr	r2, [pc, #280]	; 130c <apply_tkline+0x180>
    11f0:	str	r3, [sp, #8]
    11f4:	ldr	r3, [r4, #28]
    11f8:	add	r2, pc, r2
    11fc:	mov	r1, #0
    1200:	str	r3, [sp, #4]
    1204:	str	r7, [sp, #12]
    1208:	mov	r3, r9
    120c:	mov	r8, r0
    1210:	str	r0, [sp]
    1214:	mov	r0, #256	; 0x100
    1218:	bl	c98 <sendto_realops_snomask@plt>
    121c:	mov	r0, r5
    1220:	bl	cbc <get_oper_name@plt>
    1224:	ldr	r3, [r4, #16]
    1228:	ldr	r1, [pc, #224]	; 1310 <apply_tkline+0x184>
    122c:	str	r3, [sp, #4]
    1230:	ldr	r3, [r4, #28]
    1234:	str	r7, [sp, #8]
    1238:	str	r3, [sp]
    123c:	add	r1, pc, r1
    1240:	mov	r3, r8
    1244:	mov	r2, r0
    1248:	mov	r0, #7
    124c:	bl	d7c <ilog@plt>
    1250:	mov	r1, #60	; 0x3c
    1254:	mov	r0, r6
    1258:	bl	28a8 <__divsi3>
    125c:	ldr	r3, [r4, #16]
    1260:	ldr	r1, [pc, #172]	; 1314 <apply_tkline+0x188>
    1264:	str	r3, [sp, #56]	; 0x38
    1268:	add	r1, pc, r1
    126c:	ldr	r3, [r4, #28]
    1270:	mov	r2, r0
    1274:	mov	r0, r5
    1278:	add	sp, sp, #24
    127c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1280:	b	dac <sendto_one_notice@plt>
    1284:	bl	cbc <get_oper_name@plt>
    1288:	mov	r1, #60	; 0x3c
    128c:	mov	sl, r0
    1290:	mov	r0, r6
    1294:	bl	28a8 <__divsi3>
    1298:	ldr	r3, [r4, #16]
    129c:	ldr	r2, [pc, #116]	; 1318 <apply_tkline+0x18c>
    12a0:	str	r3, [sp, #8]
    12a4:	ldr	r3, [r4, #28]
    12a8:	add	r2, pc, r2
    12ac:	str	r3, [sp, #4]
    12b0:	mov	r1, #0
    12b4:	mov	r3, sl
    12b8:	str	r8, [sp, #16]
    12bc:	str	r7, [sp, #12]
    12c0:	mov	r9, r0
    12c4:	str	r0, [sp]
    12c8:	mov	r0, #256	; 0x100
    12cc:	bl	c98 <sendto_realops_snomask@plt>
    12d0:	mov	r0, r5
    12d4:	bl	cbc <get_oper_name@plt>
    12d8:	ldr	r3, [r4, #16]
    12dc:	ldr	r1, [pc, #56]	; 131c <apply_tkline+0x190>
    12e0:	str	r3, [sp, #4]
    12e4:	ldr	r3, [r4, #28]
    12e8:	str	r8, [sp, #12]
    12ec:	str	r3, [sp]
    12f0:	str	r7, [sp, #8]
    12f4:	mov	r3, r9
    12f8:	add	r1, pc, r1
    12fc:	mov	r2, r0
    1300:	mov	r0, #7
    1304:	bl	d7c <ilog@plt>
    1308:	b	1250 <apply_tkline+0xc4>
    130c:	.word	0x00001987
    1310:	.word	0x00001976
    1314:	.word	0x000019a5
    1318:	.word	0x0000191b
    131c:	.word	0x00001901

00001320 <apply_kline>:
    1320:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    1324:	mov	r4, r1
    1328:	mov	r5, r3
    132c:	str	r1, [sp]
    1330:	mov	r3, #0
    1334:	mov	r6, r0
    1338:	mov	r7, r2
    133c:	ldr	r0, [r4, #16]
    1340:	ldr	r2, [r1, #28]
    1344:	mov	r1, #64	; 0x40
    1348:	bl	d34 <add_conf_by_address@plt>
    134c:	cmp	r5, #0
    1350:	ldr	r2, [r4, #28]
    1354:	ldr	r3, [r4, #16]
    1358:	moveq	r1, r5
    135c:	beq	1370 <apply_kline+0x50>
    1360:	ldrb	r1, [r5]
    1364:	cmp	r1, #0
    1368:	movne	r1, r5
    136c:	moveq	r1, #0
    1370:	mov	r8, #0
    1374:	mov	r0, r8
    1378:	stmib	sp, {r1, r8}
    137c:	str	r7, [sp]
    1380:	mov	r1, r6
    1384:	bl	ca4 <bandb_add@plt>
    1388:	cmp	r5, r8
    138c:	mov	r0, r6
    1390:	beq	13a0 <apply_kline+0x80>
    1394:	ldrb	r3, [r5]
    1398:	cmp	r3, r8
    139c:	bne	141c <apply_kline+0xfc>
    13a0:	bl	cbc <get_oper_name@plt>
    13a4:	ldr	r3, [r4, #16]
    13a8:	ldr	r2, [pc, #212]	; 1484 <apply_kline+0x164>
    13ac:	str	r3, [sp, #4]
    13b0:	ldr	r3, [r4, #28]
    13b4:	add	r2, pc, r2
    13b8:	mov	r1, #0
    13bc:	str	r3, [sp]
    13c0:	str	r7, [sp, #8]
    13c4:	mov	r3, r0
    13c8:	mov	r0, #256	; 0x100
    13cc:	bl	c98 <sendto_realops_snomask@plt>
    13d0:	mov	r0, r6
    13d4:	bl	cbc <get_oper_name@plt>
    13d8:	ldr	r3, [r4, #16]
    13dc:	ldr	r1, [pc, #164]	; 1488 <apply_kline+0x168>
    13e0:	str	r3, [sp]
    13e4:	str	r7, [sp, #4]
    13e8:	ldr	r3, [r4, #28]
    13ec:	add	r1, pc, r1
    13f0:	mov	r2, r0
    13f4:	mov	r0, #7
    13f8:	bl	d7c <ilog@plt>
    13fc:	ldr	r1, [pc, #136]	; 148c <apply_kline+0x16c>
    1400:	ldr	r3, [r4, #16]
    1404:	ldr	r2, [r4, #28]
    1408:	add	r1, pc, r1
    140c:	mov	r0, r6
    1410:	add	sp, sp, #16
    1414:	pop	{r4, r5, r6, r7, r8, lr}
    1418:	b	dac <sendto_one_notice@plt>
    141c:	bl	cbc <get_oper_name@plt>
    1420:	ldr	r3, [r4, #16]
    1424:	ldr	r2, [pc, #100]	; 1490 <apply_kline+0x170>
    1428:	str	r3, [sp, #4]
    142c:	ldr	r3, [r4, #28]
    1430:	mov	r1, r8
    1434:	str	r3, [sp]
    1438:	add	r2, pc, r2
    143c:	str	r5, [sp, #12]
    1440:	str	r7, [sp, #8]
    1444:	mov	r3, r0
    1448:	mov	r0, #256	; 0x100
    144c:	bl	c98 <sendto_realops_snomask@plt>
    1450:	mov	r0, r6
    1454:	bl	cbc <get_oper_name@plt>
    1458:	ldr	r3, [r4, #16]
    145c:	ldr	r1, [pc, #48]	; 1494 <apply_kline+0x174>
    1460:	str	r3, [sp]
    1464:	str	r5, [sp, #8]
    1468:	str	r7, [sp, #4]
    146c:	ldr	r3, [r4, #28]
    1470:	add	r1, pc, r1
    1474:	mov	r2, r0
    1478:	mov	r0, #7
    147c:	bl	d7c <ilog@plt>
    1480:	b	13fc <apply_kline+0xdc>
    1484:	.word	0x00001881
    1488:	.word	0x0000186a
    148c:	.word	0x00001895
    1490:	.word	0x0000182e
    1494:	.word	0x0000181a

00001498 <handle_remote_kline>:
    1498:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    149c:	add	fp, sp, #32
    14a0:	sub	sp, sp, #12
    14a4:	mov	r5, r0
    14a8:	ldr	r0, [fp, #4]
    14ac:	mov	r7, r3
    14b0:	mov	r8, r1
    14b4:	mov	r9, r2
    14b8:	bl	d58 <strlen@plt>
    14bc:	ldr	r1, [fp, #4]
    14c0:	ldr	r4, [pc, #408]	; 1660 <handle_remote_kline+0x1c8>
    14c4:	add	r4, pc, r4
    14c8:	add	r0, r0, #15
    14cc:	bic	r0, r0, #7
    14d0:	sub	sp, sp, r0
    14d4:	add	r6, sp, #8
    14d8:	mov	r0, r6
    14dc:	bl	cf8 <strcpy@plt>
    14e0:	ldr	r2, [r5, #32]
    14e4:	cmp	r8, #0
    14e8:	movgt	r3, #1
    14ec:	movle	r3, #2
    14f0:	add	r2, r2, #88	; 0x58
    14f4:	add	r1, r5, #163	; 0xa3
    14f8:	add	r0, r5, #152	; 0x98
    14fc:	bl	de8 <find_shared_conf@plt>
    1500:	cmp	r0, #0
    1504:	beq	1550 <handle_remote_kline+0xb8>
    1508:	mov	r2, r7
    150c:	mov	r1, r9
    1510:	mov	r0, r5
    1514:	bl	f8c <valid_user_host>
    1518:	cmp	r0, #0
    151c:	beq	1550 <handle_remote_kline+0xb8>
    1520:	mov	r1, r7
    1524:	mov	r0, r9
    1528:	bl	d1c <valid_wild_card@plt>
    152c:	cmp	r0, #0
    1530:	bne	1558 <handle_remote_kline+0xc0>
    1534:	ldr	r3, [pc, #296]	; 1664 <handle_remote_kline+0x1cc>
    1538:	ldr	r1, [pc, #296]	; 1668 <handle_remote_kline+0x1d0>
    153c:	mov	r0, r5
    1540:	ldr	r3, [r4, r3]
    1544:	add	r1, pc, r1
    1548:	ldr	r2, [r3, #236]	; 0xec
    154c:	bl	dac <sendto_one_notice@plt>
    1550:	sub	sp, fp, #32
    1554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1558:	mov	r3, r8
    155c:	mov	r2, r7
    1560:	mov	r1, r9
    1564:	mov	r0, r5
    1568:	bl	1010 <already_placed_kline>
    156c:	subs	sl, r0, #0
    1570:	bne	1550 <handle_remote_kline+0xb8>
    1574:	bl	c14 <make_conf@plt>
    1578:	mov	r3, #64	; 0x40
    157c:	str	r3, [r0]
    1580:	mov	r4, r0
    1584:	bl	c38 <rb_current_time@plt>
    1588:	str	r0, [r4, #40]	; 0x28
    158c:	mov	r0, r9
    1590:	bl	115c <rb_strdup>
    1594:	str	r0, [r4, #28]
    1598:	mov	r0, r7
    159c:	bl	115c <rb_strdup>
    15a0:	str	r0, [r4, #16]
    15a4:	mov	r0, r5
    15a8:	bl	cbc <get_oper_name@plt>
    15ac:	bl	ce0 <operhash_add@plt>
    15b0:	str	r0, [r4, #12]
    15b4:	mov	r0, r6
    15b8:	bl	d58 <strlen@plt>
    15bc:	ldr	r3, [pc, #168]	; 166c <handle_remote_kline+0x1d4>
    15c0:	mov	r1, #124	; 0x7c
    15c4:	cmp	r0, r3
    15c8:	mov	r0, r6
    15cc:	strbhi	sl, [r6, #390]	; 0x186
    15d0:	bl	d64 <strchr@plt>
    15d4:	cmp	r0, #0
    15d8:	bne	1618 <handle_remote_kline+0x180>
    15dc:	mov	r7, #0
    15e0:	mov	r0, r6
    15e4:	bl	115c <rb_strdup>
    15e8:	cmp	r8, #0
    15ec:	str	r0, [r4, #20]
    15f0:	ble	1648 <handle_remote_kline+0x1b0>
    15f4:	str	r8, [sp]
    15f8:	mov	r3, r7
    15fc:	mov	r2, r6
    1600:	mov	r1, r4
    1604:	mov	r0, r5
    1608:	bl	118c <apply_tkline>
    160c:	mov	r0, r4
    1610:	bl	cec <check_one_kline@plt>
    1614:	b	1550 <handle_remote_kline+0xb8>
    1618:	mov	r7, r0
    161c:	mov	r3, #0
    1620:	strb	r3, [r7], #1
    1624:	cmp	r7, r3
    1628:	beq	15dc <handle_remote_kline+0x144>
    162c:	ldrb	r3, [r0, #1]
    1630:	cmp	r3, #0
    1634:	beq	15e0 <handle_remote_kline+0x148>
    1638:	mov	r0, r7
    163c:	bl	115c <rb_strdup>
    1640:	str	r0, [r4, #24]
    1644:	b	15e0 <handle_remote_kline+0x148>
    1648:	mov	r3, r7
    164c:	mov	r2, r6
    1650:	mov	r1, r4
    1654:	mov	r0, r5
    1658:	bl	1320 <apply_kline>
    165c:	b	160c <handle_remote_kline+0x174>
    1660:	.word	0x00012b34
    1664:	.word	0x000000f0
    1668:	.word	0x0000176f
    166c:	.word	0x00000186

00001670 <ms_kline>:
    1670:	push	{r4, r5, r6, r7, r8, lr}
    1674:	sub	sp, sp, #24
    1678:	mov	r8, r3
    167c:	ldr	r4, [sp, #48]	; 0x30
    1680:	ldr	r6, [pc, #212]	; 175c <ms_kline+0xec>
    1684:	mov	r5, r2
    1688:	ldr	r0, [r4, #8]
    168c:	bl	dc4 <atoi@plt>
    1690:	cmp	r8, #5
    1694:	add	r6, pc, r6
    1698:	ble	1754 <ms_kline+0xe4>
    169c:	ldr	r3, [r4, #20]
    16a0:	cmp	r3, #0
    16a4:	beq	1754 <ms_kline+0xe4>
    16a8:	ldrb	r2, [r3]
    16ac:	cmp	r2, #0
    16b0:	beq	1754 <ms_kline+0xe4>
    16b4:	ldr	r2, [pc, #164]	; 1760 <ms_kline+0xf0>
    16b8:	ldr	r1, [pc, #164]	; 1764 <ms_kline+0xf4>
    16bc:	mov	r7, r0
    16c0:	ldr	r2, [r6, r2]
    16c4:	str	r3, [sp, #16]
    16c8:	ldr	r3, [r4, #16]
    16cc:	add	r1, pc, r1
    16d0:	str	r3, [sp, #12]
    16d4:	ldr	r3, [r4, #12]
    16d8:	str	r0, [sp, #4]
    16dc:	str	r3, [sp, #8]
    16e0:	ldr	r3, [pc, #128]	; 1768 <ms_kline+0xf8>
    16e4:	mov	r0, r5
    16e8:	add	r3, pc, r3
    16ec:	str	r3, [sp]
    16f0:	ldr	r3, [r2]
    16f4:	ldr	r2, [r4, #4]
    16f8:	bl	c08 <propagate_generic@plt>
    16fc:	ldr	r3, [pc, #104]	; 176c <ms_kline+0xfc>
    1700:	ldr	r0, [r4, #4]
    1704:	ldr	r1, [r6, r3]
    1708:	add	r1, r1, #88	; 0x58
    170c:	bl	d88 <match@plt>
    1710:	cmp	r0, #0
    1714:	beq	1754 <ms_kline+0xe4>
    1718:	ldrh	r3, [r5, #80]	; 0x50
    171c:	cmp	r3, #64	; 0x40
    1720:	bne	1754 <ms_kline+0xe4>
    1724:	ldr	r3, [r5, #24]
    1728:	cmp	r3, #0
    172c:	beq	1754 <ms_kline+0xe4>
    1730:	ldr	r3, [r4, #20]
    1734:	mov	r1, r7
    1738:	str	r3, [sp, #48]	; 0x30
    173c:	mov	r0, r5
    1740:	ldr	r3, [r4, #16]
    1744:	ldr	r2, [r4, #12]
    1748:	add	sp, sp, #24
    174c:	pop	{r4, r5, r6, r7, r8, lr}
    1750:	b	1498 <handle_remote_kline>
    1754:	add	sp, sp, #24
    1758:	pop	{r4, r5, r6, r7, r8, pc}
    175c:	.word	0x00012964
    1760:	.word	0x000000dc
    1764:	.word	0x00001736
    1768:	.word	0x00001612
    176c:	.word	0x000000ec

00001770 <remove_temp_kline>:
    1770:	ldr	r3, [pc, #320]	; 18b8 <remove_temp_kline+0x148>
    1774:	ldr	ip, [pc, #320]	; 18bc <remove_temp_kline+0x14c>
    1778:	add	r3, pc, r3
    177c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    1780:	mov	r6, #0
    1784:	ldr	r8, [r3, ip]
    1788:	mov	r2, #12
    178c:	mul	r3, r2, r6
    1790:	ldr	r4, [r3, r8]
    1794:	cmp	r4, #0
    1798:	bne	17b0 <remove_temp_kline+0x40>
    179c:	add	r6, r6, #1
    17a0:	cmp	r6, #4
    17a4:	bne	178c <remove_temp_kline+0x1c>
    17a8:	mov	r0, r4
    17ac:	b	18a8 <remove_temp_kline+0x138>
    17b0:	ldr	r9, [r4]
    17b4:	cmp	r9, r1
    17b8:	bne	18b0 <remove_temp_kline+0x140>
    17bc:	mov	r5, r1
    17c0:	ldr	r3, [r1, #16]
    17c4:	ldr	r2, [r1, #28]
    17c8:	ldr	r1, [pc, #240]	; 18c0 <remove_temp_kline+0x150>
    17cc:	mov	r7, r0
    17d0:	add	r1, pc, r1
    17d4:	bl	dac <sendto_one_notice@plt>
    17d8:	mov	r0, r7
    17dc:	bl	cbc <get_oper_name@plt>
    17e0:	ldr	r3, [r5, #16]
    17e4:	ldr	r2, [pc, #216]	; 18c4 <remove_temp_kline+0x154>
    17e8:	str	r3, [sp, #4]
    17ec:	ldr	r3, [r5, #28]
    17f0:	add	r2, pc, r2
    17f4:	mov	r1, #0
    17f8:	str	r3, [sp]
    17fc:	mov	r3, r0
    1800:	mov	r0, #256	; 0x100
    1804:	bl	c98 <sendto_realops_snomask@plt>
    1808:	mov	r0, r7
    180c:	bl	cbc <get_oper_name@plt>
    1810:	ldr	r3, [r5, #16]
    1814:	ldr	r1, [pc, #172]	; 18c8 <remove_temp_kline+0x158>
    1818:	str	r3, [sp]
    181c:	add	r1, pc, r1
    1820:	ldr	r3, [r5, #28]
    1824:	mov	r2, r0
    1828:	mov	r0, #7
    182c:	bl	d7c <ilog@plt>
    1830:	ldr	r3, [r4, #8]
    1834:	ldr	r1, [r4, #4]
    1838:	cmp	r3, #0
    183c:	moveq	r2, #12
    1840:	strne	r1, [r3, #4]
    1844:	mov	r0, r4
    1848:	mlaeq	r2, r2, r6, r8
    184c:	streq	r1, [r2, #4]
    1850:	ldr	r2, [r4, #4]
    1854:	cmp	r2, #0
    1858:	moveq	r2, #12
    185c:	strne	r3, [r2, #8]
    1860:	muleq	r2, r2, r6
    1864:	streq	r3, [r8, r2]
    1868:	mov	r3, #0
    186c:	str	r3, [r4, #4]
    1870:	str	r3, [r4, #8]
    1874:	mov	r3, #12
    1878:	mla	r6, r3, r6, r8
    187c:	ldr	r3, [r6, #8]
    1880:	sub	r3, r3, #1
    1884:	str	r3, [r6, #8]
    1888:	bl	cc8 <rb_free_rb_dlink_node@plt>
    188c:	ldr	r1, [r9, #16]
    1890:	ldr	r0, [r9, #28]
    1894:	bl	da0 <remove_reject_mask@plt>
    1898:	ldr	r0, [r9, #16]
    189c:	mov	r1, r9
    18a0:	bl	d70 <delete_one_address_conf@plt>
    18a4:	mov	r0, #1
    18a8:	add	sp, sp, #12
    18ac:	pop	{r4, r5, r6, r7, r8, r9, pc}
    18b0:	ldr	r4, [r4, #8]
    18b4:	b	1794 <remove_temp_kline+0x24>
    18b8:	.word	0x00012880
    18bc:	.word	0x000000e4
    18c0:	.word	0x00001537
    18c4:	.word	0x00001541
    18c8:	.word	0x00001546

000018cc <remove_permkline_match>:
    18cc:	push	{r0, r1, r2, r4, r5, lr}
    18d0:	mov	r4, r1
    18d4:	ldr	r3, [r1, #16]
    18d8:	ldr	r2, [r1, #28]
    18dc:	ldr	r1, [pc, #144]	; 1974 <remove_permkline_match+0xa8>
    18e0:	mov	r5, r0
    18e4:	add	r1, pc, r1
    18e8:	bl	dac <sendto_one_notice@plt>
    18ec:	mov	r0, r5
    18f0:	bl	cbc <get_oper_name@plt>
    18f4:	ldr	r3, [r4, #16]
    18f8:	ldr	r2, [pc, #120]	; 1978 <remove_permkline_match+0xac>
    18fc:	str	r3, [sp, #4]
    1900:	ldr	r3, [r4, #28]
    1904:	add	r2, pc, r2
    1908:	str	r3, [sp]
    190c:	mov	r1, #0
    1910:	mov	r3, r0
    1914:	mov	r0, #256	; 0x100
    1918:	bl	c98 <sendto_realops_snomask@plt>
    191c:	mov	r0, r5
    1920:	bl	cbc <get_oper_name@plt>
    1924:	ldr	r3, [r4, #16]
    1928:	ldr	r1, [pc, #76]	; 197c <remove_permkline_match+0xb0>
    192c:	str	r3, [sp]
    1930:	add	r1, pc, r1
    1934:	ldr	r3, [r4, #28]
    1938:	mov	r2, r0
    193c:	mov	r0, #7
    1940:	bl	d7c <ilog@plt>
    1944:	ldr	r1, [r4, #16]
    1948:	ldr	r0, [r4, #28]
    194c:	bl	da0 <remove_reject_mask@plt>
    1950:	ldr	r1, [r4, #28]
    1954:	ldr	r2, [r4, #16]
    1958:	mov	r0, #0
    195c:	bl	db8 <bandb_del@plt>
    1960:	mov	r1, r4
    1964:	ldr	r0, [r4, #16]
    1968:	add	sp, sp, #12
    196c:	pop	{r4, r5, lr}
    1970:	b	d70 <delete_one_address_conf@plt>
    1974:	.word	0x0000148a
    1978:	.word	0x00001489
    197c:	.word	0x00001432

00001980 <me_kline>:
    1980:	ldrh	r3, [r2, #80]	; 0x50
    1984:	push	{r4, r5, r6, lr}
    1988:	cmp	r3, #64	; 0x40
    198c:	ldr	r5, [sp, #16]
    1990:	popne	{r4, r5, r6, pc}
    1994:	ldr	r3, [r2, #24]
    1998:	cmp	r3, #0
    199c:	popeq	{r4, r5, r6, pc}
    19a0:	ldr	r0, [r5, #4]
    19a4:	mov	r4, r2
    19a8:	bl	dc4 <atoi@plt>
    19ac:	ldr	r3, [r5, #16]
    19b0:	str	r3, [sp, #16]
    19b4:	ldr	r3, [r5, #12]
    19b8:	ldr	r2, [r5, #8]
    19bc:	mov	r1, r0
    19c0:	mov	r0, r4
    19c4:	pop	{r4, r5, r6, lr}
    19c8:	b	1498 <handle_remote_kline>

000019cc <handle_remote_unkline>:
    19cc:	push	{r4, r5, r6, r7, r8, lr}
    19d0:	mov	r7, r2
    19d4:	ldr	r2, [r0, #32]
    19d8:	mov	r4, r0
    19dc:	mov	r6, r1
    19e0:	mov	r3, #4
    19e4:	add	r1, r0, #163	; 0xa3
    19e8:	add	r2, r2, #88	; 0x58
    19ec:	add	r0, r0, #152	; 0x98
    19f0:	bl	de8 <find_shared_conf@plt>
    19f4:	cmp	r0, #0
    19f8:	popeq	{r4, r5, r6, r7, r8, pc}
    19fc:	mov	r2, r6
    1a00:	mov	r1, #64	; 0x40
    1a04:	mov	r0, r7
    1a08:	bl	dd0 <find_exact_conf_by_address@plt>
    1a0c:	subs	r5, r0, #0
    1a10:	bne	1a30 <handle_remote_unkline+0x64>
    1a14:	ldr	r1, [pc, #84]	; 1a70 <handle_remote_unkline+0xa4>
    1a18:	mov	r3, r7
    1a1c:	mov	r2, r6
    1a20:	add	r1, pc, r1
    1a24:	mov	r0, r4
    1a28:	pop	{r4, r5, r6, r7, r8, lr}
    1a2c:	b	dac <sendto_one_notice@plt>
    1a30:	ldr	r3, [r5, #44]	; 0x2c
    1a34:	cmp	r3, #0
    1a38:	ldrne	r1, [pc, #52]	; 1a74 <handle_remote_unkline+0xa8>
    1a3c:	movne	r3, r7
    1a40:	movne	r2, r6
    1a44:	addne	r1, pc, r1
    1a48:	bne	1a24 <handle_remote_unkline+0x58>
    1a4c:	mov	r1, r5
    1a50:	mov	r0, r4
    1a54:	bl	1770 <remove_temp_kline>
    1a58:	cmp	r0, #0
    1a5c:	popne	{r4, r5, r6, r7, r8, pc}
    1a60:	mov	r1, r5
    1a64:	mov	r0, r4
    1a68:	pop	{r4, r5, r6, r7, r8, lr}
    1a6c:	b	18cc <remove_permkline_match>
    1a70:	.word	0x00001394
    1a74:	.word	0x00001385

00001a78 <me_unkline>:
    1a78:	mov	r0, r2
    1a7c:	ldrh	r2, [r2, #80]	; 0x50
    1a80:	ldr	r3, [sp]
    1a84:	cmp	r2, #64	; 0x40
    1a88:	bxne	lr
    1a8c:	ldr	r2, [r0, #24]
    1a90:	cmp	r2, #0
    1a94:	bxeq	lr
    1a98:	ldmib	r3, {r1, r2}
    1a9c:	b	19cc <handle_remote_unkline>

00001aa0 <ms_unkline>:
    1aa0:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    1aa4:	mov	r5, r2
    1aa8:	ldr	r4, [sp, #32]
    1aac:	ldr	r6, [pc, #144]	; 1b44 <ms_unkline+0xa4>
    1ab0:	ldr	r3, [pc, #144]	; 1b48 <ms_unkline+0xa8>
    1ab4:	ldr	r2, [r4, #12]
    1ab8:	add	r6, pc, r6
    1abc:	ldr	r1, [pc, #136]	; 1b4c <ms_unkline+0xac>
    1ac0:	ldr	r3, [r6, r3]
    1ac4:	str	r2, [sp, #8]
    1ac8:	ldr	r2, [r4, #8]
    1acc:	add	r1, pc, r1
    1ad0:	str	r2, [sp, #4]
    1ad4:	ldr	r2, [pc, #116]	; 1b50 <ms_unkline+0xb0>
    1ad8:	mov	r0, r5
    1adc:	add	r2, pc, r2
    1ae0:	str	r2, [sp]
    1ae4:	ldr	r3, [r3]
    1ae8:	ldr	r2, [r4, #4]
    1aec:	bl	c08 <propagate_generic@plt>
    1af0:	ldr	r3, [pc, #92]	; 1b54 <ms_unkline+0xb4>
    1af4:	ldr	r0, [r4, #4]
    1af8:	ldr	r1, [r6, r3]
    1afc:	add	r1, r1, #88	; 0x58
    1b00:	bl	d88 <match@plt>
    1b04:	cmp	r0, #0
    1b08:	beq	1b3c <ms_unkline+0x9c>
    1b0c:	ldrh	r3, [r5, #80]	; 0x50
    1b10:	cmp	r3, #64	; 0x40
    1b14:	bne	1b3c <ms_unkline+0x9c>
    1b18:	ldr	r3, [r5, #24]
    1b1c:	cmp	r3, #0
    1b20:	beq	1b3c <ms_unkline+0x9c>
    1b24:	ldr	r2, [r4, #12]
    1b28:	ldr	r1, [r4, #8]
    1b2c:	mov	r0, r5
    1b30:	add	sp, sp, #16
    1b34:	pop	{r4, r5, r6, lr}
    1b38:	b	19cc <handle_remote_unkline>
    1b3c:	add	sp, sp, #16
    1b40:	pop	{r4, r5, r6, pc}
    1b44:	.word	0x00012540
    1b48:	.word	0x000000c0
    1b4c:	.word	0x00001334
    1b50:	.word	0x00001184
    1b54:	.word	0x000000ec

00001b58 <mo_unkline>:
    1b58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1b5c:	add	fp, sp, #32
    1b60:	sub	sp, sp, #44	; 0x2c
    1b64:	ldr	r4, [fp, #4]
    1b68:	mov	r9, r3
    1b6c:	mov	r3, #42	; 0x2a
    1b70:	ldr	r8, [r4, #4]
    1b74:	mov	r5, r2
    1b78:	mov	r0, r8
    1b7c:	strh	r3, [fp, #-40]	; 0xffffffd8
    1b80:	bl	d58 <strlen@plt>
    1b84:	mov	r1, r8
    1b88:	ldr	r7, [pc, #1048]	; 1fa8 <mo_unkline+0x450>
    1b8c:	add	r7, pc, r7
    1b90:	add	r0, r0, #15
    1b94:	bic	r0, r0, #7
    1b98:	sub	sp, sp, r0
    1b9c:	add	r6, sp, #32
    1ba0:	mov	r0, r6
    1ba4:	bl	cf8 <strcpy@plt>
    1ba8:	ldr	r3, [r5, #24]
    1bac:	cmp	r3, #0
    1bb0:	bne	1be4 <mo_unkline+0x8c>
    1bb4:	ldr	r3, [pc, #1008]	; 1fac <mo_unkline+0x454>
    1bb8:	ldr	r1, [pc, #1008]	; 1fb0 <mo_unkline+0x458>
    1bbc:	ldr	r2, [r7, r3]
    1bc0:	ldr	r3, [pc, #1004]	; 1fb4 <mo_unkline+0x45c>
    1bc4:	add	r2, r2, #88	; 0x58
    1bc8:	add	r3, pc, r3
    1bcc:	str	r3, [sp]
    1bd0:	add	r1, pc, r1
    1bd4:	add	r3, r5, #88	; 0x58
    1bd8:	mov	r0, r5
    1bdc:	bl	c50 <sendto_one@plt>
    1be0:	b	1c5c <mo_unkline+0x104>
    1be4:	ldr	r0, [r3, #36]	; 0x24
    1be8:	cmp	r0, #0
    1bec:	beq	1bb4 <mo_unkline+0x5c>
    1bf0:	ldr	r1, [pc, #960]	; 1fb8 <mo_unkline+0x460>
    1bf4:	add	r1, pc, r1
    1bf8:	bl	df4 <privilegeset_in_set@plt>
    1bfc:	cmp	r0, #0
    1c00:	beq	1bb4 <mo_unkline+0x5c>
    1c04:	mov	r1, #64	; 0x40
    1c08:	mov	r0, r6
    1c0c:	bl	d64 <strchr@plt>
    1c10:	cmp	r0, #0
    1c14:	bne	1c64 <mo_unkline+0x10c>
    1c18:	ldrb	r3, [r6]
    1c1c:	cmp	r3, #42	; 0x2a
    1c20:	beq	1c90 <mo_unkline+0x138>
    1c24:	mov	r1, #46	; 0x2e
    1c28:	mov	r0, r6
    1c2c:	bl	d64 <strchr@plt>
    1c30:	cmp	r0, #0
    1c34:	bne	1c90 <mo_unkline+0x138>
    1c38:	mov	r1, #58	; 0x3a
    1c3c:	mov	r0, r6
    1c40:	bl	d64 <strchr@plt>
    1c44:	cmp	r0, #0
    1c48:	bne	1c90 <mo_unkline+0x138>
    1c4c:	ldr	r1, [pc, #872]	; 1fbc <mo_unkline+0x464>
    1c50:	mov	r0, r5
    1c54:	add	r1, pc, r1
    1c58:	bl	dac <sendto_one_notice@plt>
    1c5c:	sub	sp, fp, #32
    1c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1c64:	mov	r3, #0
    1c68:	strb	r3, [r0]
    1c6c:	ldrb	r3, [r6]
    1c70:	cmp	r3, #0
    1c74:	ldrb	r3, [r0, #1]
    1c78:	movne	r8, r6
    1c7c:	subeq	r8, fp, #40	; 0x28
    1c80:	cmp	r3, #0
    1c84:	addne	r6, r0, #1
    1c88:	subeq	r6, fp, #40	; 0x28
    1c8c:	b	1c94 <mo_unkline+0x13c>
    1c90:	sub	r8, fp, #40	; 0x28
    1c94:	cmp	r9, #3
    1c98:	bgt	1d3c <mo_unkline+0x1e4>
    1c9c:	mov	r9, #1
    1ca0:	mov	r2, r8
    1ca4:	mov	r1, #64	; 0x40
    1ca8:	mov	r0, r6
    1cac:	bl	dd0 <find_exact_conf_by_address@plt>
    1cb0:	cmp	r9, #0
    1cb4:	mov	r4, r0
    1cb8:	beq	1d18 <mo_unkline+0x1c0>
    1cbc:	cmp	r0, #0
    1cc0:	beq	1cd0 <mo_unkline+0x178>
    1cc4:	ldr	r3, [r0, #44]	; 0x2c
    1cc8:	cmp	r3, #0
    1ccc:	bne	1df4 <mo_unkline+0x29c>
    1cd0:	ldr	r3, [pc, #744]	; 1fc0 <mo_unkline+0x468>
    1cd4:	ldr	r3, [r7, r3]
    1cd8:	ldr	r3, [r3, #8]
    1cdc:	cmp	r3, #0
    1ce0:	beq	1d18 <mo_unkline+0x1c0>
    1ce4:	ldr	r3, [pc, #728]	; 1fc4 <mo_unkline+0x46c>
    1ce8:	ldr	r2, [pc, #728]	; 1fc8 <mo_unkline+0x470>
    1cec:	ldr	r1, [pc, #728]	; 1fcc <mo_unkline+0x474>
    1cf0:	ldr	r3, [r7, r3]
    1cf4:	add	r2, pc, r2
    1cf8:	str	r2, [sp]
    1cfc:	str	r6, [sp, #8]
    1d00:	str	r8, [sp, #4]
    1d04:	mov	r2, #4
    1d08:	ldr	r3, [r3]
    1d0c:	add	r1, pc, r1
    1d10:	mov	r0, r5
    1d14:	bl	cd4 <cluster_generic@plt>
    1d18:	cmp	r4, #0
    1d1c:	bne	1df4 <mo_unkline+0x29c>
    1d20:	ldr	r1, [pc, #680]	; 1fd0 <mo_unkline+0x478>
    1d24:	mov	r3, r6
    1d28:	mov	r2, r8
    1d2c:	add	r1, pc, r1
    1d30:	mov	r0, r5
    1d34:	bl	dac <sendto_one_notice@plt>
    1d38:	b	1c5c <mo_unkline+0x104>
    1d3c:	ldr	r1, [pc, #656]	; 1fd4 <mo_unkline+0x47c>
    1d40:	ldr	r0, [r4, #8]
    1d44:	add	r1, pc, r1
    1d48:	bl	e00 <irccmp@plt>
    1d4c:	subs	r9, r0, #0
    1d50:	bne	1c9c <mo_unkline+0x144>
    1d54:	ldr	r3, [r5, #24]
    1d58:	ldr	r2, [pc, #588]	; 1fac <mo_unkline+0x454>
    1d5c:	cmp	r3, #0
    1d60:	ldr	sl, [r7, r2]
    1d64:	bne	1d88 <mo_unkline+0x230>
    1d68:	ldr	r3, [pc, #616]	; 1fd8 <mo_unkline+0x480>
    1d6c:	ldr	r1, [pc, #616]	; 1fdc <mo_unkline+0x484>
    1d70:	add	r3, pc, r3
    1d74:	str	r3, [sp]
    1d78:	add	r2, sl, #88	; 0x58
    1d7c:	add	r3, r5, #88	; 0x58
    1d80:	add	r1, pc, r1
    1d84:	b	1bd8 <mo_unkline+0x80>
    1d88:	ldr	r0, [r3, #36]	; 0x24
    1d8c:	cmp	r0, #0
    1d90:	beq	1d68 <mo_unkline+0x210>
    1d94:	ldr	r1, [pc, #580]	; 1fe0 <mo_unkline+0x488>
    1d98:	add	r1, pc, r1
    1d9c:	bl	df4 <privilegeset_in_set@plt>
    1da0:	cmp	r0, #0
    1da4:	beq	1d68 <mo_unkline+0x210>
    1da8:	ldr	r3, [pc, #532]	; 1fc4 <mo_unkline+0x46c>
    1dac:	ldr	r2, [pc, #560]	; 1fe4 <mo_unkline+0x48c>
    1db0:	ldr	r1, [pc, #560]	; 1fe8 <mo_unkline+0x490>
    1db4:	ldr	r3, [r7, r3]
    1db8:	add	r2, pc, r2
    1dbc:	str	r6, [sp, #8]
    1dc0:	str	r8, [sp, #4]
    1dc4:	str	r2, [sp]
    1dc8:	add	r1, pc, r1
    1dcc:	ldr	r3, [r3]
    1dd0:	ldr	r2, [r4, #12]
    1dd4:	mov	r0, r5
    1dd8:	bl	c08 <propagate_generic@plt>
    1ddc:	add	r1, sl, #88	; 0x58
    1de0:	ldr	r0, [r4, #12]
    1de4:	bl	d88 <match@plt>
    1de8:	cmp	r0, #0
    1dec:	beq	1c5c <mo_unkline+0x104>
    1df0:	b	1ca0 <mo_unkline+0x148>
    1df4:	ldr	r3, [r4, #44]	; 0x2c
    1df8:	cmp	r3, #0
    1dfc:	beq	1e44 <mo_unkline+0x2ec>
    1e00:	cmp	r9, #0
    1e04:	beq	1e30 <mo_unkline+0x2d8>
    1e08:	ldr	r3, [pc, #476]	; 1fec <mo_unkline+0x494>
    1e0c:	ldr	r3, [r7, r3]
    1e10:	ldr	r6, [r3]
    1e14:	cmp	r6, #0
    1e18:	beq	1c5c <mo_unkline+0x104>
    1e1c:	ldr	r3, [r6]
    1e20:	cmp	r4, r3
    1e24:	beq	1e68 <mo_unkline+0x310>
    1e28:	ldr	r6, [r6, #8]
    1e2c:	b	1e14 <mo_unkline+0x2bc>
    1e30:	ldr	r1, [pc, #440]	; 1ff0 <mo_unkline+0x498>
    1e34:	mov	r3, r6
    1e38:	mov	r2, r8
    1e3c:	add	r1, pc, r1
    1e40:	b	1d30 <mo_unkline+0x1d8>
    1e44:	mov	r1, r4
    1e48:	mov	r0, r5
    1e4c:	bl	1770 <remove_temp_kline>
    1e50:	cmp	r0, #0
    1e54:	bne	1c5c <mo_unkline+0x104>
    1e58:	mov	r1, r4
    1e5c:	mov	r0, r5
    1e60:	bl	18cc <remove_permkline_match>
    1e64:	b	1c5c <mo_unkline+0x104>
    1e68:	ldr	r1, [pc, #388]	; 1ff4 <mo_unkline+0x49c>
    1e6c:	ldr	r3, [r4, #16]
    1e70:	ldr	r2, [r4, #28]
    1e74:	add	r1, pc, r1
    1e78:	mov	r0, r5
    1e7c:	bl	dac <sendto_one_notice@plt>
    1e80:	mov	r0, r5
    1e84:	bl	cbc <get_oper_name@plt>
    1e88:	ldr	r3, [r4, #16]
    1e8c:	ldr	r2, [pc, #356]	; 1ff8 <mo_unkline+0x4a0>
    1e90:	str	r3, [sp, #4]
    1e94:	ldr	r3, [r4, #28]
    1e98:	add	r2, pc, r2
    1e9c:	mov	r1, #0
    1ea0:	str	r3, [sp]
    1ea4:	mov	r3, r0
    1ea8:	mov	r0, #256	; 0x100
    1eac:	bl	c98 <sendto_realops_snomask@plt>
    1eb0:	mov	r0, r5
    1eb4:	bl	cbc <get_oper_name@plt>
    1eb8:	ldr	r3, [r4, #16]
    1ebc:	ldr	r1, [pc, #312]	; 1ffc <mo_unkline+0x4a4>
    1ec0:	str	r3, [sp]
    1ec4:	add	r1, pc, r1
    1ec8:	ldr	r3, [r4, #28]
    1ecc:	mov	r2, r0
    1ed0:	mov	r0, #7
    1ed4:	bl	d7c <ilog@plt>
    1ed8:	bl	c38 <rb_current_time@plt>
    1edc:	ldr	r3, [r4, #40]	; 0x28
    1ee0:	cmp	r0, r3
    1ee4:	mov	r8, r0
    1ee8:	strgt	r0, [r4, #40]	; 0x28
    1eec:	addle	r3, r3, #1
    1ef0:	strle	r3, [r4, #40]	; 0x28
    1ef4:	ldr	r3, [r4, #40]	; 0x28
    1ef8:	ldr	r0, [r4, #12]
    1efc:	str	r3, [r4, #36]	; 0x24
    1f00:	bl	c8c <operhash_delete@plt>
    1f04:	mov	r0, r5
    1f08:	bl	cbc <get_oper_name@plt>
    1f0c:	bl	ce0 <operhash_add@plt>
    1f10:	ldr	r3, [r4, #4]
    1f14:	ldr	r1, [r4, #40]	; 0x28
    1f18:	orr	r3, r3, #8912896	; 0x880000
    1f1c:	str	r3, [r4, #4]
    1f20:	ldr	r3, [pc, #216]	; 2000 <mo_unkline+0x4a8>
    1f24:	add	r5, r5, #396	; 0x18c
    1f28:	str	r0, [r4, #12]
    1f2c:	ldr	r2, [r7, r3]
    1f30:	ldr	r3, [pc, #204]	; 2004 <mo_unkline+0x4ac>
    1f34:	ldr	r0, [r2]
    1f38:	ldr	r3, [r7, r3]
    1f3c:	ldr	r2, [r3]
    1f40:	ldr	r3, [r4, #44]	; 0x2c
    1f44:	str	r1, [sp, #16]
    1f48:	sub	r3, r3, r1
    1f4c:	str	r3, [sp, #24]
    1f50:	mov	r3, #0
    1f54:	str	r3, [sp, #20]
    1f58:	ldr	r1, [r4, #16]
    1f5c:	orr	r2, r0, r2
    1f60:	str	r1, [sp, #12]
    1f64:	ldr	r1, [r4, #28]
    1f68:	mov	r0, r3
    1f6c:	str	r1, [sp, #8]
    1f70:	ldr	r1, [pc, #144]	; 2008 <mo_unkline+0x4b0>
    1f74:	str	r5, [sp, #4]
    1f78:	add	r1, pc, r1
    1f7c:	str	r1, [sp]
    1f80:	mov	r1, r3
    1f84:	bl	d04 <sendto_server@plt>
    1f88:	ldr	r1, [r4, #16]
    1f8c:	ldr	r0, [r4, #28]
    1f90:	bl	da0 <remove_reject_mask@plt>
    1f94:	mov	r2, r8
    1f98:	mov	r1, r6
    1f9c:	mov	r0, r4
    1fa0:	bl	cb0 <deactivate_conf@plt>
    1fa4:	b	1c5c <mo_unkline+0x104>
    1fa8:	.word	0x0001246c
    1fac:	.word	0x000000ec
    1fb0:	.word	0x00001238
    1fb4:	.word	0x0000126c
    1fb8:	.word	0x0000123b
    1fbc:	.word	0x000011e8
    1fc0:	.word	0x000000d8
    1fc4:	.word	0x000000c0
    1fc8:	.word	0x00000f6c
    1fcc:	.word	0x000010f4
    1fd0:	.word	0x00001088
    1fd4:	.word	0x0000110c
    1fd8:	.word	0x000010e8
    1fdc:	.word	0x00001088
    1fe0:	.word	0x000010bb
    1fe4:	.word	0x00000ea8
    1fe8:	.word	0x00001038
    1fec:	.word	0x000000c8
    1ff0:	.word	0x00000f8d
    1ff4:	.word	0x0000100d
    1ff8:	.word	0x00001010
    1ffc:	.word	0x00000e9e
    2000:	.word	0x000000cc
    2004:	.word	0x000000d0
    2008:	.word	0x00000eea

0000200c <mo_kline>:
    200c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2010:	mov	sl, r3
    2014:	add	fp, sp, #32
    2018:	sub	sp, sp, #140	; 0x8c
    201c:	ldr	r3, [r2, #24]
    2020:	ldr	r8, [pc, #2016]	; 2808 <mo_kline+0x7fc>
    2024:	cmp	r3, #0
    2028:	add	r8, pc, r8
    202c:	mov	r5, r2
    2030:	bne	2068 <mo_kline+0x5c>
    2034:	ldr	r3, [pc, #2000]	; 280c <mo_kline+0x800>
    2038:	ldr	r1, [pc, #2000]	; 2810 <mo_kline+0x804>
    203c:	ldr	r2, [r8, r3]
    2040:	ldr	r3, [pc, #1996]	; 2814 <mo_kline+0x808>
    2044:	add	r2, r2, #88	; 0x58
    2048:	add	r3, pc, r3
    204c:	str	r3, [sp]
    2050:	add	r1, pc, r1
    2054:	add	r3, r5, #88	; 0x58
    2058:	mov	r0, r5
    205c:	bl	c50 <sendto_one@plt>
    2060:	sub	sp, fp, #32
    2064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2068:	ldr	r0, [r3, #36]	; 0x24
    206c:	cmp	r0, #0
    2070:	beq	2034 <mo_kline+0x28>
    2074:	ldr	r3, [pc, #1948]	; 2818 <mo_kline+0x80c>
    2078:	ldr	r1, [pc, #1948]	; 281c <mo_kline+0x810>
    207c:	ldr	r3, [r8, r3]
    2080:	add	r1, pc, r1
    2084:	str	r3, [fp, #-124]	; 0xffffff84
    2088:	ldr	r3, [r3, #324]	; 0x144
    208c:	str	r3, [fp, #-120]	; 0xffffff88
    2090:	bl	df4 <privilegeset_in_set@plt>
    2094:	cmp	r0, #0
    2098:	beq	2034 <mo_kline+0x28>
    209c:	ldr	r3, [fp, #4]
    20a0:	ldr	r0, [r3, #4]
    20a4:	bl	d94 <valid_temp_time@plt>
    20a8:	mov	r1, #64	; 0x40
    20ac:	subs	r7, r0, #0
    20b0:	movge	r6, #2
    20b4:	movlt	r6, #1
    20b8:	movlt	r7, #0
    20bc:	lsl	r3, r6, #2
    20c0:	str	r3, [fp, #-128]	; 0xffffff80
    20c4:	ldr	r3, [fp, #4]
    20c8:	ldr	r4, [r3, r6, lsl #2]
    20cc:	mov	r0, r4
    20d0:	bl	d64 <strchr@plt>
    20d4:	subs	r9, r0, #0
    20d8:	beq	2160 <mo_kline+0x154>
    20dc:	mov	r2, #0
    20e0:	strb	r2, [r9]
    20e4:	ldrb	r2, [r4]
    20e8:	sub	r0, fp, #116	; 0x74
    20ec:	cmp	r2, #0
    20f0:	beq	2150 <mo_kline+0x144>
    20f4:	mov	r2, #11
    20f8:	mov	r1, r4
    20fc:	bl	ddc <rb_strlcpy@plt>
    2100:	ldrb	r2, [r9, #1]
    2104:	sub	r0, fp, #104	; 0x68
    2108:	cmp	r2, #0
    210c:	movne	r2, #64	; 0x40
    2110:	addne	r1, r9, #1
    2114:	addne	r0, r0, #1
    2118:	bne	21b8 <mo_kline+0x1ac>
    211c:	ldr	r1, [pc, #1788]	; 2820 <mo_kline+0x814>
    2120:	add	r0, r0, #1
    2124:	add	r1, pc, r1
    2128:	bl	cf8 <strcpy@plt>
    212c:	ldrb	r3, [fp, #-116]	; 0xffffff8c
    2130:	cmp	r3, #58	; 0x3a
    2134:	beq	2144 <mo_kline+0x138>
    2138:	ldrb	r3, [fp, #-103]	; 0xffffff99
    213c:	cmp	r3, #58	; 0x3a
    2140:	bne	2794 <mo_kline+0x788>
    2144:	ldr	r1, [pc, #1752]	; 2824 <mo_kline+0x818>
    2148:	add	r1, pc, r1
    214c:	b	2190 <mo_kline+0x184>
    2150:	ldr	r1, [pc, #1744]	; 2828 <mo_kline+0x81c>
    2154:	add	r1, pc, r1
    2158:	bl	cf8 <strcpy@plt>
    215c:	b	2100 <mo_kline+0xf4>
    2160:	mov	r1, #46	; 0x2e
    2164:	mov	r0, r4
    2168:	bl	d64 <strchr@plt>
    216c:	cmp	r0, #0
    2170:	bne	219c <mo_kline+0x190>
    2174:	mov	r1, #58	; 0x3a
    2178:	mov	r0, r4
    217c:	bl	d64 <strchr@plt>
    2180:	cmp	r0, #0
    2184:	bne	219c <mo_kline+0x190>
    2188:	ldr	r1, [pc, #1692]	; 282c <mo_kline+0x820>
    218c:	add	r1, pc, r1
    2190:	mov	r0, r5
    2194:	bl	dac <sendto_one_notice@plt>
    2198:	b	2060 <mo_kline+0x54>
    219c:	mov	r3, #42	; 0x2a
    21a0:	mov	r2, #64	; 0x40
    21a4:	mov	r1, r4
    21a8:	sub	r0, fp, #103	; 0x67
    21ac:	strb	r3, [fp, #-116]	; 0xffffff8c
    21b0:	mov	r3, #0
    21b4:	strb	r3, [fp, #-115]	; 0xffffff8d
    21b8:	bl	ddc <rb_strlcpy@plt>
    21bc:	b	212c <mo_kline+0x120>
    21c0:	ldr	r0, [r3, #36]	; 0x24
    21c4:	cmp	r0, #0
    21c8:	beq	27e0 <mo_kline+0x7d4>
    21cc:	ldr	r1, [pc, #1628]	; 2830 <mo_kline+0x824>
    21d0:	add	r1, pc, r1
    21d4:	bl	df4 <privilegeset_in_set@plt>
    21d8:	cmp	r0, #0
    21dc:	beq	27e0 <mo_kline+0x7d4>
    21e0:	ldr	r4, [r4, #8]
    21e4:	add	r3, r6, #3
    21e8:	cmp	r3, sl
    21ec:	blt	221c <mo_kline+0x210>
    21f0:	ldr	r3, [pc, #1556]	; 280c <mo_kline+0x800>
    21f4:	ldr	r1, [pc, #1592]	; 2834 <mo_kline+0x828>
    21f8:	ldr	r2, [r8, r3]
    21fc:	ldr	r3, [pc, #1588]	; 2838 <mo_kline+0x82c>
    2200:	add	r2, r2, #88	; 0x58
    2204:	add	r3, pc, r3
    2208:	str	r3, [sp]
    220c:	add	r1, pc, r1
    2210:	add	r3, r5, #88	; 0x58
    2214:	b	2058 <mo_kline+0x4c>
    2218:	mov	r4, #0
    221c:	ldr	r2, [fp, #4]
    2220:	ldr	r9, [r2, r3, lsl #2]
    2224:	cmp	r9, #0
    2228:	beq	21f0 <mo_kline+0x1e4>
    222c:	ldrb	r3, [r9]
    2230:	cmp	r3, #0
    2234:	beq	21f0 <mo_kline+0x1e4>
    2238:	mov	r0, r9
    223c:	bl	d58 <strlen@plt>
    2240:	sub	sl, fp, #104	; 0x68
    2244:	mov	r1, r9
    2248:	sub	r9, fp, #116	; 0x74
    224c:	add	r0, r0, #15
    2250:	bic	r0, r0, #7
    2254:	sub	sp, sp, r0
    2258:	add	r6, sp, #40	; 0x28
    225c:	mov	r0, r6
    2260:	bl	cf8 <strcpy@plt>
    2264:	add	r3, sl, #1
    2268:	mov	r2, #0
    226c:	mov	r0, r3
    2270:	mov	r1, r2
    2274:	str	r3, [fp, #-128]	; 0xffffff80
    2278:	bl	c20 <parse_netmask_strict@plt>
    227c:	ldr	r3, [fp, #-128]	; 0xffffff80
    2280:	cmp	r0, #0
    2284:	bne	22a0 <mo_kline+0x294>
    2288:	ldr	r1, [pc, #1452]	; 283c <mo_kline+0x830>
    228c:	mov	r2, r9
    2290:	add	r1, pc, r1
    2294:	mov	r0, r5
    2298:	bl	dac <sendto_one_notice@plt>
    229c:	b	2060 <mo_kline+0x54>
    22a0:	cmp	r4, #0
    22a4:	beq	2308 <mo_kline+0x2fc>
    22a8:	ldr	r2, [pc, #1424]	; 2840 <mo_kline+0x834>
    22ac:	ldr	r1, [pc, #1424]	; 2844 <mo_kline+0x838>
    22b0:	mov	r0, r5
    22b4:	ldr	r2, [r8, r2]
    22b8:	str	r3, [sp, #12]
    22bc:	ldr	r3, [pc, #1412]	; 2848 <mo_kline+0x83c>
    22c0:	str	r6, [sp, #16]
    22c4:	add	r3, pc, r3
    22c8:	stmib	sp, {r7, r9}
    22cc:	str	r3, [sp]
    22d0:	add	r1, pc, r1
    22d4:	ldr	r3, [r2]
    22d8:	mov	r2, r4
    22dc:	bl	c08 <propagate_generic@plt>
    22e0:	ldr	r3, [pc, #1316]	; 280c <mo_kline+0x800>
    22e4:	mov	r0, r4
    22e8:	ldr	r1, [r8, r3]
    22ec:	add	r1, r1, #88	; 0x58
    22f0:	bl	d88 <match@plt>
    22f4:	cmp	r0, #0
    22f8:	beq	2060 <mo_kline+0x54>
    22fc:	mov	r3, #0
    2300:	str	r3, [fp, #-120]	; 0xffffff88
    2304:	b	2368 <mo_kline+0x35c>
    2308:	ldr	r2, [fp, #-120]	; 0xffffff88
    230c:	cmp	r2, #0
    2310:	bne	23b4 <mo_kline+0x3a8>
    2314:	ldr	r2, [pc, #1328]	; 284c <mo_kline+0x840>
    2318:	ldr	r2, [r8, r2]
    231c:	ldr	r2, [r2, #8]
    2320:	cmp	r2, #0
    2324:	beq	22fc <mo_kline+0x2f0>
    2328:	ldr	r2, [pc, #1296]	; 2840 <mo_kline+0x834>
    232c:	ldr	r1, [pc, #1308]	; 2850 <mo_kline+0x844>
    2330:	cmp	r7, #0
    2334:	ldr	r2, [r8, r2]
    2338:	str	r3, [sp, #12]
    233c:	ldr	r3, [pc, #1296]	; 2854 <mo_kline+0x848>
    2340:	str	r6, [sp, #16]
    2344:	add	r3, pc, r3
    2348:	stmib	sp, {r7, r9}
    234c:	str	r3, [sp]
    2350:	add	r1, pc, r1
    2354:	ldr	r3, [r2]
    2358:	mov	r0, r5
    235c:	movne	r2, #1
    2360:	moveq	r2, #2
    2364:	bl	cd4 <cluster_generic@plt>
    2368:	add	sl, sl, #1
    236c:	mov	r2, sl
    2370:	mov	r1, r9
    2374:	mov	r0, r5
    2378:	bl	f8c <valid_user_host>
    237c:	cmp	r0, #0
    2380:	beq	2060 <mo_kline+0x54>
    2384:	mov	r1, sl
    2388:	mov	r0, r9
    238c:	bl	d1c <valid_wild_card@plt>
    2390:	cmp	r0, #0
    2394:	bne	23bc <mo_kline+0x3b0>
    2398:	ldr	r3, [fp, #-124]	; 0xffffff84
    239c:	ldr	r1, [pc, #1204]	; 2858 <mo_kline+0x84c>
    23a0:	mov	r0, r5
    23a4:	ldr	r2, [r3, #236]	; 0xec
    23a8:	add	r1, pc, r1
    23ac:	bl	dac <sendto_one_notice@plt>
    23b0:	b	2060 <mo_kline+0x54>
    23b4:	mov	r3, #1
    23b8:	b	2300 <mo_kline+0x2f4>
    23bc:	ldr	r3, [fp, #-120]	; 0xffffff88
    23c0:	cmp	r7, #0
    23c4:	movne	r3, #0
    23c8:	andeq	r3, r3, #1
    23cc:	cmp	r3, #0
    23d0:	ldrne	r1, [pc, #1156]	; 285c <mo_kline+0x850>
    23d4:	addne	r1, pc, r1
    23d8:	bne	2190 <mo_kline+0x184>
    23dc:	mov	r3, r7
    23e0:	mov	r2, sl
    23e4:	mov	r1, r9
    23e8:	mov	r0, r5
    23ec:	bl	1010 <already_placed_kline>
    23f0:	subs	r3, r0, #0
    23f4:	str	r3, [fp, #-124]	; 0xffffff84
    23f8:	bne	2060 <mo_kline+0x54>
    23fc:	bl	d10 <rb_set_time@plt>
    2400:	bl	c14 <make_conf@plt>
    2404:	mov	r3, #64	; 0x40
    2408:	str	r3, [r0]
    240c:	mov	r4, r0
    2410:	bl	c38 <rb_current_time@plt>
    2414:	str	r0, [r4, #40]	; 0x28
    2418:	mov	r0, sl
    241c:	bl	115c <rb_strdup>
    2420:	str	r0, [r4, #16]
    2424:	mov	r0, r9
    2428:	bl	115c <rb_strdup>
    242c:	ldr	r3, [fp, #-124]	; 0xffffff84
    2430:	str	r3, [r4, #32]
    2434:	str	r0, [r4, #28]
    2438:	mov	r0, r5
    243c:	bl	cbc <get_oper_name@plt>
    2440:	bl	ce0 <operhash_add@plt>
    2444:	str	r0, [r4, #12]
    2448:	mov	r0, r6
    244c:	bl	d58 <strlen@plt>
    2450:	ldr	r3, [pc, #1032]	; 2860 <mo_kline+0x854>
    2454:	mov	r1, #124	; 0x7c
    2458:	cmp	r0, r3
    245c:	mov	r0, r6
    2460:	ldrbhi	r3, [fp, #-124]	; 0xffffff84
    2464:	strbhi	r3, [r6, #390]	; 0x186
    2468:	bl	d64 <strchr@plt>
    246c:	cmp	r0, #0
    2470:	bne	24e0 <mo_kline+0x4d4>
    2474:	mov	r9, #0
    2478:	mov	r0, r6
    247c:	bl	115c <rb_strdup>
    2480:	ldr	r3, [fp, #-120]	; 0xffffff88
    2484:	cmp	r3, #0
    2488:	str	r0, [r4, #20]
    248c:	beq	2758 <mo_kline+0x74c>
    2490:	ldr	r3, [r4, #4]
    2494:	orr	r3, r3, #8912896	; 0x880000
    2498:	str	r3, [r4, #4]
    249c:	bl	c38 <rb_current_time@plt>
    24a0:	add	r0, r7, r0
    24a4:	str	r0, [r4, #36]	; 0x24
    24a8:	str	r0, [r4, #44]	; 0x2c
    24ac:	mov	r0, r4
    24b0:	bl	c74 <replace_old_ban@plt>
    24b4:	bl	d4c <rb_make_rb_dlink_node@plt>
    24b8:	cmp	r0, #0
    24bc:	bne	2510 <mo_kline+0x504>
    24c0:	ldr	r3, [pc, #924]	; 2864 <mo_kline+0x858>
    24c4:	ldr	r1, [pc, #924]	; 2868 <mo_kline+0x85c>
    24c8:	ldr	r0, [pc, #924]	; 286c <mo_kline+0x860>
    24cc:	add	r3, pc, r3
    24d0:	mov	r2, #144	; 0x90
    24d4:	add	r1, pc, r1
    24d8:	add	r0, pc, r0
    24dc:	bl	e0c <__assert_fail@plt>
    24e0:	mov	r9, r0
    24e4:	mov	r3, #0
    24e8:	strb	r3, [r9], #1
    24ec:	cmp	r9, r3
    24f0:	beq	2474 <mo_kline+0x468>
    24f4:	ldrb	r3, [r0, #1]
    24f8:	cmp	r3, #0
    24fc:	beq	2478 <mo_kline+0x46c>
    2500:	mov	r0, r9
    2504:	bl	115c <rb_strdup>
    2508:	str	r0, [r4, #24]
    250c:	b	2478 <mo_kline+0x46c>
    2510:	mov	r3, #0
    2514:	str	r3, [r0, #4]
    2518:	ldr	r3, [pc, #848]	; 2870 <mo_kline+0x864>
    251c:	str	r4, [r0]
    2520:	ldr	r3, [r8, r3]
    2524:	ldr	r2, [r3]
    2528:	cmp	r2, #0
    252c:	str	r2, [r0, #8]
    2530:	strne	r0, [r2, #4]
    2534:	bne	2544 <mo_kline+0x538>
    2538:	ldr	r2, [r3, #4]
    253c:	cmp	r2, #0
    2540:	streq	r0, [r3, #4]
    2544:	ldr	r2, [r3, #8]
    2548:	str	r0, [r3]
    254c:	add	r2, r2, #1
    2550:	str	r2, [r3, #8]
    2554:	mov	r1, #64	; 0x40
    2558:	str	r4, [sp]
    255c:	mov	r3, #0
    2560:	ldr	r0, [r4, #16]
    2564:	ldr	r2, [r4, #28]
    2568:	bl	d34 <add_conf_by_address@plt>
    256c:	cmp	r9, #0
    2570:	mov	r0, r5
    2574:	beq	2584 <mo_kline+0x578>
    2578:	ldrb	r3, [r9]
    257c:	cmp	r3, #0
    2580:	bne	26c4 <mo_kline+0x6b8>
    2584:	bl	cbc <get_oper_name@plt>
    2588:	mov	r1, #60	; 0x3c
    258c:	str	r0, [fp, #-120]	; 0xffffff88
    2590:	mov	r0, r7
    2594:	bl	28a8 <__divsi3>
    2598:	str	r6, [sp, #12]
    259c:	ldr	r2, [r4, #16]
    25a0:	ldr	r3, [fp, #-120]	; 0xffffff88
    25a4:	str	r2, [sp, #8]
    25a8:	ldr	r2, [r4, #28]
    25ac:	mov	r1, #0
    25b0:	str	r2, [sp, #4]
    25b4:	ldr	r2, [pc, #696]	; 2874 <mo_kline+0x868>
    25b8:	add	r2, pc, r2
    25bc:	mov	sl, r0
    25c0:	str	r0, [sp]
    25c4:	mov	r0, #256	; 0x100
    25c8:	bl	c98 <sendto_realops_snomask@plt>
    25cc:	mov	r0, r5
    25d0:	bl	cbc <get_oper_name@plt>
    25d4:	str	r6, [sp, #8]
    25d8:	ldr	r3, [r4, #16]
    25dc:	ldr	r1, [pc, #660]	; 2878 <mo_kline+0x86c>
    25e0:	str	r3, [sp, #4]
    25e4:	ldr	r3, [r4, #28]
    25e8:	add	r1, pc, r1
    25ec:	str	r3, [sp]
    25f0:	mov	r3, sl
    25f4:	mov	r2, r0
    25f8:	mov	r0, #7
    25fc:	bl	d7c <ilog@plt>
    2600:	mov	r1, #60	; 0x3c
    2604:	mov	r0, r7
    2608:	bl	28a8 <__divsi3>
    260c:	ldr	r3, [r4, #16]
    2610:	ldr	r1, [pc, #612]	; 287c <mo_kline+0x870>
    2614:	str	r3, [sp]
    2618:	add	r1, pc, r1
    261c:	ldr	r3, [r4, #28]
    2620:	mov	r2, r0
    2624:	mov	r0, r5
    2628:	bl	dac <sendto_one_notice@plt>
    262c:	ldr	r3, [pc, #588]	; 2880 <mo_kline+0x874>
    2630:	ldr	r2, [pc, #588]	; 2884 <mo_kline+0x878>
    2634:	ldr	r1, [r4, #36]	; 0x24
    2638:	ldr	r3, [r8, r3]
    263c:	ldr	r2, [r8, r2]
    2640:	ldr	r0, [r4, #44]	; 0x2c
    2644:	ldr	r3, [r3]
    2648:	ldr	r2, [r2]
    264c:	cmp	r9, #0
    2650:	orr	r2, r3, r2
    2654:	ldr	r3, [r4, #40]	; 0x28
    2658:	add	r5, r5, #396	; 0x18c
    265c:	ldr	lr, [r4, #28]
    2660:	ldr	r7, [r4, #16]
    2664:	sub	r1, r1, r3
    2668:	sub	r0, r0, r3
    266c:	bne	274c <mo_kline+0x740>
    2670:	ldr	ip, [pc, #528]	; 2888 <mo_kline+0x87c>
    2674:	add	ip, pc, ip
    2678:	mov	r9, ip
    267c:	str	r3, [sp, #16]
    2680:	ldr	r3, [pc, #516]	; 288c <mo_kline+0x880>
    2684:	str	r0, [sp, #24]
    2688:	add	r3, pc, r3
    268c:	str	r3, [sp]
    2690:	mov	r3, #0
    2694:	str	r1, [sp, #20]
    2698:	str	r9, [sp, #36]	; 0x24
    269c:	str	ip, [sp, #32]
    26a0:	str	r6, [sp, #28]
    26a4:	str	r7, [sp, #12]
    26a8:	stmib	sp, {r5, lr}
    26ac:	mov	r1, r3
    26b0:	mov	r0, r3
    26b4:	bl	d04 <sendto_server@plt>
    26b8:	mov	r0, r4
    26bc:	bl	cec <check_one_kline@plt>
    26c0:	b	2060 <mo_kline+0x54>
    26c4:	bl	cbc <get_oper_name@plt>
    26c8:	mov	r1, #60	; 0x3c
    26cc:	str	r0, [fp, #-120]	; 0xffffff88
    26d0:	mov	r0, r7
    26d4:	bl	28a8 <__divsi3>
    26d8:	str	r9, [sp, #16]
    26dc:	str	r6, [sp, #12]
    26e0:	ldr	r2, [r4, #16]
    26e4:	ldr	r3, [fp, #-120]	; 0xffffff88
    26e8:	str	r2, [sp, #8]
    26ec:	ldr	r2, [r4, #28]
    26f0:	mov	r1, #0
    26f4:	str	r2, [sp, #4]
    26f8:	ldr	r2, [pc, #400]	; 2890 <mo_kline+0x884>
    26fc:	add	r2, pc, r2
    2700:	mov	sl, r0
    2704:	str	r0, [sp]
    2708:	mov	r0, #256	; 0x100
    270c:	bl	c98 <sendto_realops_snomask@plt>
    2710:	mov	r0, r5
    2714:	bl	cbc <get_oper_name@plt>
    2718:	str	r9, [sp, #12]
    271c:	str	r6, [sp, #8]
    2720:	ldr	r3, [r4, #16]
    2724:	ldr	r1, [pc, #360]	; 2894 <mo_kline+0x888>
    2728:	str	r3, [sp, #4]
    272c:	ldr	r3, [r4, #28]
    2730:	add	r1, pc, r1
    2734:	str	r3, [sp]
    2738:	mov	r3, sl
    273c:	mov	r2, r0
    2740:	mov	r0, #7
    2744:	bl	d7c <ilog@plt>
    2748:	b	2600 <mo_kline+0x5f4>
    274c:	ldr	ip, [pc, #324]	; 2898 <mo_kline+0x88c>
    2750:	add	ip, pc, ip
    2754:	b	267c <mo_kline+0x670>
    2758:	cmp	r7, #0
    275c:	beq	277c <mo_kline+0x770>
    2760:	str	r7, [sp]
    2764:	mov	r3, r9
    2768:	mov	r2, r6
    276c:	mov	r1, r4
    2770:	mov	r0, r5
    2774:	bl	118c <apply_tkline>
    2778:	b	26b8 <mo_kline+0x6ac>
    277c:	mov	r3, r9
    2780:	mov	r2, r6
    2784:	mov	r1, r4
    2788:	mov	r0, r5
    278c:	bl	1320 <apply_kline>
    2790:	b	26b8 <mo_kline+0x6ac>
    2794:	add	r2, r6, #2
    2798:	cmp	r2, sl
    279c:	add	r3, r6, #1
    27a0:	movge	r4, #0
    27a4:	bge	21e8 <mo_kline+0x1dc>
    27a8:	str	r3, [fp, #-128]	; 0xffffff80
    27ac:	ldr	r3, [fp, #4]
    27b0:	lsl	r2, r6, #2
    27b4:	add	r4, r3, r2
    27b8:	ldr	r1, [pc, #220]	; 289c <mo_kline+0x890>
    27bc:	ldr	r0, [r4, #4]
    27c0:	add	r1, pc, r1
    27c4:	bl	e00 <irccmp@plt>
    27c8:	ldr	r3, [fp, #-128]	; 0xffffff80
    27cc:	cmp	r0, #0
    27d0:	bne	2218 <mo_kline+0x20c>
    27d4:	ldr	r3, [r5, #24]
    27d8:	cmp	r3, #0
    27dc:	bne	21c0 <mo_kline+0x1b4>
    27e0:	ldr	r3, [pc, #36]	; 280c <mo_kline+0x800>
    27e4:	ldr	r1, [pc, #180]	; 28a0 <mo_kline+0x894>
    27e8:	ldr	r2, [r8, r3]
    27ec:	ldr	r3, [pc, #176]	; 28a4 <mo_kline+0x898>
    27f0:	add	r2, r2, #88	; 0x58
    27f4:	add	r3, pc, r3
    27f8:	str	r3, [sp]
    27fc:	add	r1, pc, r1
    2800:	add	r3, r5, #88	; 0x58
    2804:	b	2058 <mo_kline+0x4c>
    2808:	.word	0x00011fd0
    280c:	.word	0x000000ec
    2810:	.word	0x00000db8
    2814:	.word	0x00000e95
    2818:	.word	0x000000f0
    281c:	.word	0x00000e58
    2820:	.word	0x00000d5b
    2824:	.word	0x000009f2
    2828:	.word	0x00000d2b
    282c:	.word	0x00000d57
    2830:	.word	0x00000c83
    2834:	.word	0x00000cfb
    2838:	.word	0x00000bfe
    283c:	.word	0x00000c9c
    2840:	.word	0x000000dc
    2844:	.word	0x00000b32
    2848:	.word	0x00000a36
    284c:	.word	0x000000d8
    2850:	.word	0x00000ab2
    2854:	.word	0x00000c28
    2858:	.word	0x0000090b
    285c:	.word	0x00000ba6
    2860:	.word	0x00000186
    2864:	.word	0x0000062c
    2868:	.word	0x00000ac9
    286c:	.word	0x00000ae1
    2870:	.word	0x000000c8
    2874:	.word	0x00000a0b
    2878:	.word	0x000005ca
    287c:	.word	0x00000a0e
    2880:	.word	0x000000cc
    2884:	.word	0x000000d0
    2888:	.word	0x0000080c
    288c:	.word	0x000009c3
    2890:	.word	0x000008f7
    2894:	.word	0x000004c9
    2898:	.word	0x00000786
    289c:	.word	0x00000690
    28a0:	.word	0x0000060c
    28a4:	.word	0x00000664

000028a8 <__divsi3>:
    28a8:	cmp	r1, #0
    28ac:	beq	2ab8 <.divsi3_skip_div0_test+0x208>

000028b0 <.divsi3_skip_div0_test>:
    28b0:	eor	ip, r0, r1
    28b4:	rsbmi	r1, r1, #0
    28b8:	subs	r2, r1, #1
    28bc:	beq	2a84 <.divsi3_skip_div0_test+0x1d4>
    28c0:	movs	r3, r0
    28c4:	rsbmi	r3, r0, #0
    28c8:	cmp	r3, r1
    28cc:	bls	2a90 <.divsi3_skip_div0_test+0x1e0>
    28d0:	tst	r1, r2
    28d4:	beq	2aa0 <.divsi3_skip_div0_test+0x1f0>
    28d8:	clz	r2, r3
    28dc:	clz	r0, r1
    28e0:	sub	r2, r0, r2
    28e4:	rsbs	r2, r2, #31
    28e8:	addne	r2, r2, r2, lsl #1
    28ec:	mov	r0, #0
    28f0:	addne	pc, pc, r2, lsl #2
    28f4:	nop			; (mov r0, r0)
    28f8:	cmp	r3, r1, lsl #31
    28fc:	adc	r0, r0, r0
    2900:	subcs	r3, r3, r1, lsl #31
    2904:	cmp	r3, r1, lsl #30
    2908:	adc	r0, r0, r0
    290c:	subcs	r3, r3, r1, lsl #30
    2910:	cmp	r3, r1, lsl #29
    2914:	adc	r0, r0, r0
    2918:	subcs	r3, r3, r1, lsl #29
    291c:	cmp	r3, r1, lsl #28
    2920:	adc	r0, r0, r0
    2924:	subcs	r3, r3, r1, lsl #28
    2928:	cmp	r3, r1, lsl #27
    292c:	adc	r0, r0, r0
    2930:	subcs	r3, r3, r1, lsl #27
    2934:	cmp	r3, r1, lsl #26
    2938:	adc	r0, r0, r0
    293c:	subcs	r3, r3, r1, lsl #26
    2940:	cmp	r3, r1, lsl #25
    2944:	adc	r0, r0, r0
    2948:	subcs	r3, r3, r1, lsl #25
    294c:	cmp	r3, r1, lsl #24
    2950:	adc	r0, r0, r0
    2954:	subcs	r3, r3, r1, lsl #24
    2958:	cmp	r3, r1, lsl #23
    295c:	adc	r0, r0, r0
    2960:	subcs	r3, r3, r1, lsl #23
    2964:	cmp	r3, r1, lsl #22
    2968:	adc	r0, r0, r0
    296c:	subcs	r3, r3, r1, lsl #22
    2970:	cmp	r3, r1, lsl #21
    2974:	adc	r0, r0, r0
    2978:	subcs	r3, r3, r1, lsl #21
    297c:	cmp	r3, r1, lsl #20
    2980:	adc	r0, r0, r0
    2984:	subcs	r3, r3, r1, lsl #20
    2988:	cmp	r3, r1, lsl #19
    298c:	adc	r0, r0, r0
    2990:	subcs	r3, r3, r1, lsl #19
    2994:	cmp	r3, r1, lsl #18
    2998:	adc	r0, r0, r0
    299c:	subcs	r3, r3, r1, lsl #18
    29a0:	cmp	r3, r1, lsl #17
    29a4:	adc	r0, r0, r0
    29a8:	subcs	r3, r3, r1, lsl #17
    29ac:	cmp	r3, r1, lsl #16
    29b0:	adc	r0, r0, r0
    29b4:	subcs	r3, r3, r1, lsl #16
    29b8:	cmp	r3, r1, lsl #15
    29bc:	adc	r0, r0, r0
    29c0:	subcs	r3, r3, r1, lsl #15
    29c4:	cmp	r3, r1, lsl #14
    29c8:	adc	r0, r0, r0
    29cc:	subcs	r3, r3, r1, lsl #14
    29d0:	cmp	r3, r1, lsl #13
    29d4:	adc	r0, r0, r0
    29d8:	subcs	r3, r3, r1, lsl #13
    29dc:	cmp	r3, r1, lsl #12
    29e0:	adc	r0, r0, r0
    29e4:	subcs	r3, r3, r1, lsl #12
    29e8:	cmp	r3, r1, lsl #11
    29ec:	adc	r0, r0, r0
    29f0:	subcs	r3, r3, r1, lsl #11
    29f4:	cmp	r3, r1, lsl #10
    29f8:	adc	r0, r0, r0
    29fc:	subcs	r3, r3, r1, lsl #10
    2a00:	cmp	r3, r1, lsl #9
    2a04:	adc	r0, r0, r0
    2a08:	subcs	r3, r3, r1, lsl #9
    2a0c:	cmp	r3, r1, lsl #8
    2a10:	adc	r0, r0, r0
    2a14:	subcs	r3, r3, r1, lsl #8
    2a18:	cmp	r3, r1, lsl #7
    2a1c:	adc	r0, r0, r0
    2a20:	subcs	r3, r3, r1, lsl #7
    2a24:	cmp	r3, r1, lsl #6
    2a28:	adc	r0, r0, r0
    2a2c:	subcs	r3, r3, r1, lsl #6
    2a30:	cmp	r3, r1, lsl #5
    2a34:	adc	r0, r0, r0
    2a38:	subcs	r3, r3, r1, lsl #5
    2a3c:	cmp	r3, r1, lsl #4
    2a40:	adc	r0, r0, r0
    2a44:	subcs	r3, r3, r1, lsl #4
    2a48:	cmp	r3, r1, lsl #3
    2a4c:	adc	r0, r0, r0
    2a50:	subcs	r3, r3, r1, lsl #3
    2a54:	cmp	r3, r1, lsl #2
    2a58:	adc	r0, r0, r0
    2a5c:	subcs	r3, r3, r1, lsl #2
    2a60:	cmp	r3, r1, lsl #1
    2a64:	adc	r0, r0, r0
    2a68:	subcs	r3, r3, r1, lsl #1
    2a6c:	cmp	r3, r1
    2a70:	adc	r0, r0, r0
    2a74:	subcs	r3, r3, r1
    2a78:	cmp	ip, #0
    2a7c:	rsbmi	r0, r0, #0
    2a80:	bx	lr
    2a84:	teq	ip, r0
    2a88:	rsbmi	r0, r0, #0
    2a8c:	bx	lr
    2a90:	movcc	r0, #0
    2a94:	asreq	r0, ip, #31
    2a98:	orreq	r0, r0, #1
    2a9c:	bx	lr
    2aa0:	clz	r2, r1
    2aa4:	rsb	r2, r2, #31
    2aa8:	cmp	ip, #0
    2aac:	lsr	r0, r3, r2
    2ab0:	rsbmi	r0, r0, #0
    2ab4:	bx	lr
    2ab8:	cmp	r0, #0
    2abc:	mvngt	r0, #-2147483648	; 0x80000000
    2ac0:	movlt	r0, #-2147483648	; 0x80000000
    2ac4:	b	2ae8 <__aeabi_idiv0>

00002ac8 <__aeabi_idivmod>:
    2ac8:	cmp	r1, #0
    2acc:	beq	2ab8 <.divsi3_skip_div0_test+0x208>
    2ad0:	push	{r0, r1, lr}
    2ad4:	bl	28b0 <.divsi3_skip_div0_test>
    2ad8:	pop	{r1, r2, lr}
    2adc:	mul	r3, r2, r0
    2ae0:	sub	r1, r1, r3
    2ae4:	bx	lr

00002ae8 <__aeabi_idiv0>:
    2ae8:	push	{r1, lr}
    2aec:	mov	r0, #8
    2af0:	bl	c2c <raise@plt>
    2af4:	pop	{r1, pc}

Disassembly of section .fini:

00002af8 <_fini>:
    2af8:	push	{r3, lr}
    2afc:	pop	{r3, pc}
