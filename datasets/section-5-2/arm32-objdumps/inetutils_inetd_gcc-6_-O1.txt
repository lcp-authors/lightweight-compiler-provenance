
../repos/inetutils/src/inetd:     file format elf32-littlearm


Disassembly of section .init:

00011704 <.init>:
   11704:	push	{r3, lr}
   11708:	bl	11c70 <__assert_fail@plt+0x48>
   1170c:	pop	{r3, pc}

Disassembly of section .plt:

00011710 <calloc@plt-0x14>:
   11710:	push	{lr}		; (str lr, [sp, #-4]!)
   11714:	ldr	lr, [pc, #4]	; 11720 <calloc@plt-0x4>
   11718:	add	lr, pc, lr
   1171c:	ldr	pc, [lr, #8]!
   11720:	andeq	fp, r1, r0, ror #17

00011724 <calloc@plt>:
   11724:	add	ip, pc, #0, 12
   11728:	add	ip, ip, #110592	; 0x1b000
   1172c:	ldr	pc, [ip, #2272]!	; 0x8e0

00011730 <fputs_unlocked@plt>:
   11730:	add	ip, pc, #0, 12
   11734:	add	ip, ip, #110592	; 0x1b000
   11738:	ldr	pc, [ip, #2264]!	; 0x8d8

0001173c <__getdelim@plt>:
   1173c:	add	ip, pc, #0, 12
   11740:	add	ip, ip, #110592	; 0x1b000
   11744:	ldr	pc, [ip, #2256]!	; 0x8d0

00011748 <getpwnam@plt>:
   11748:	add	ip, pc, #0, 12
   1174c:	add	ip, ip, #110592	; 0x1b000
   11750:	ldr	pc, [ip, #2248]!	; 0x8c8

00011754 <strcmp@plt>:
   11754:	add	ip, pc, #0, 12
   11758:	add	ip, ip, #110592	; 0x1b000
   1175c:	ldr	pc, [ip, #2240]!	; 0x8c0

00011760 <strtol@plt>:
   11760:	add	ip, pc, #0, 12
   11764:	add	ip, ip, #110592	; 0x1b000
   11768:	ldr	pc, [ip, #2232]!	; 0x8b8

0001176c <setsockopt@plt>:
   1176c:	add	ip, pc, #0, 12
   11770:	add	ip, ip, #110592	; 0x1b000
   11774:	ldr	pc, [ip, #2224]!	; 0x8b0

00011778 <strcspn@plt>:
   11778:	add	ip, pc, #0, 12
   1177c:	add	ip, ip, #110592	; 0x1b000
   11780:	ldr	pc, [ip, #2216]!	; 0x8a8

00011784 <pause@plt>:
   11784:	add	ip, pc, #0, 12
   11788:	add	ip, ip, #110592	; 0x1b000
   1178c:	ldr	pc, [ip, #2208]!	; 0x8a0

00011790 <printf@plt>:
   11790:	add	ip, pc, #0, 12
   11794:	add	ip, ip, #110592	; 0x1b000
   11798:	ldr	pc, [ip, #2200]!	; 0x898

0001179c <read@plt>:
   1179c:	add	ip, pc, #0, 12
   117a0:	add	ip, ip, #110592	; 0x1b000
   117a4:	ldr	pc, [ip, #2192]!	; 0x890

000117a8 <getprotobyname@plt>:
   117a8:	add	ip, pc, #0, 12
   117ac:	add	ip, ip, #110592	; 0x1b000
   117b0:	ldr	pc, [ip, #2184]!	; 0x888

000117b4 <sigprocmask@plt>:
   117b4:	add	ip, pc, #0, 12
   117b8:	add	ip, ip, #110592	; 0x1b000
   117bc:	ldr	pc, [ip, #2176]!	; 0x880

000117c0 <memmove@plt>:
   117c0:	add	ip, pc, #0, 12
   117c4:	add	ip, ip, #110592	; 0x1b000
   117c8:	ldr	pc, [ip, #2168]!	; 0x878

000117cc <strchrnul@plt>:
   117cc:	add	ip, pc, #0, 12
   117d0:	add	ip, ip, #110592	; 0x1b000
   117d4:	ldr	pc, [ip, #2160]!	; 0x870

000117d8 <free@plt>:
   117d8:	add	ip, pc, #0, 12
   117dc:	add	ip, ip, #110592	; 0x1b000
   117e0:	ldr	pc, [ip, #2152]!	; 0x868

000117e4 <gai_strerror@plt>:
   117e4:	add	ip, pc, #0, 12
   117e8:	add	ip, ip, #110592	; 0x1b000
   117ec:	ldr	pc, [ip, #2144]!	; 0x860

000117f0 <strndup@plt>:
   117f0:	add	ip, pc, #0, 12
   117f4:	add	ip, ip, #110592	; 0x1b000
   117f8:	ldr	pc, [ip, #2136]!	; 0x858

000117fc <_exit@plt>:
   117fc:	add	ip, pc, #0, 12
   11800:	add	ip, ip, #110592	; 0x1b000
   11804:	ldr	pc, [ip, #2128]!	; 0x850

00011808 <memcpy@plt>:
   11808:	add	ip, pc, #0, 12
   1180c:	add	ip, ip, #110592	; 0x1b000
   11810:	ldr	pc, [ip, #2120]!	; 0x848

00011814 <signal@plt>:
   11814:	add	ip, pc, #0, 12
   11818:	add	ip, ip, #110592	; 0x1b000
   1181c:	ldr	pc, [ip, #2112]!	; 0x840

00011820 <time@plt>:
   11820:	add	ip, pc, #0, 12
   11824:	add	ip, ip, #110592	; 0x1b000
   11828:	ldr	pc, [ip, #2104]!	; 0x838

0001182c <fwrite_unlocked@plt>:
   1182c:	add	ip, pc, #0, 12
   11830:	add	ip, ip, #110592	; 0x1b000
   11834:	ldr	pc, [ip, #2096]!	; 0x830

00011838 <memcmp@plt>:
   11838:	add	ip, pc, #0, 12
   1183c:	add	ip, ip, #110592	; 0x1b000
   11840:	ldr	pc, [ip, #2088]!	; 0x828

00011844 <select@plt>:
   11844:	add	ip, pc, #0, 12
   11848:	add	ip, ip, #110592	; 0x1b000
   1184c:	ldr	pc, [ip, #2080]!	; 0x820

00011850 <sleep@plt>:
   11850:	add	ip, pc, #0, 12
   11854:	add	ip, ip, #110592	; 0x1b000
   11858:	ldr	pc, [ip, #2072]!	; 0x818

0001185c <ctime@plt>:
   1185c:	add	ip, pc, #0, 12
   11860:	add	ip, ip, #110592	; 0x1b000
   11864:	ldr	pc, [ip, #2064]!	; 0x810

00011868 <recvfrom@plt>:
   11868:	add	ip, pc, #0, 12
   1186c:	add	ip, ip, #110592	; 0x1b000
   11870:	ldr	pc, [ip, #2056]!	; 0x808

00011874 <strdup@plt>:
   11874:	add	ip, pc, #0, 12
   11878:	add	ip, ip, #110592	; 0x1b000
   1187c:	ldr	pc, [ip, #2048]!	; 0x800

00011880 <alarm@plt>:
   11880:	add	ip, pc, #0, 12
   11884:	add	ip, ip, #110592	; 0x1b000
   11888:	ldr	pc, [ip, #2040]!	; 0x7f8

0001188c <sysconf@plt>:
   1188c:	add	ip, pc, #0, 12
   11890:	add	ip, ip, #110592	; 0x1b000
   11894:	ldr	pc, [ip, #2032]!	; 0x7f0

00011898 <dup2@plt>:
   11898:	add	ip, pc, #0, 12
   1189c:	add	ip, ip, #110592	; 0x1b000
   118a0:	ldr	pc, [ip, #2024]!	; 0x7e8

000118a4 <realloc@plt>:
   118a4:	add	ip, pc, #0, 12
   118a8:	add	ip, ip, #110592	; 0x1b000
   118ac:	ldr	pc, [ip, #2016]!	; 0x7e0

000118b0 <initgroups@plt>:
   118b0:	add	ip, pc, #0, 12
   118b4:	add	ip, ip, #110592	; 0x1b000
   118b8:	ldr	pc, [ip, #2008]!	; 0x7d8

000118bc <chdir@plt>:
   118bc:	add	ip, pc, #0, 12
   118c0:	add	ip, ip, #110592	; 0x1b000
   118c4:	ldr	pc, [ip, #2000]!	; 0x7d0

000118c8 <strcasecmp@plt>:
   118c8:	add	ip, pc, #0, 12
   118cc:	add	ip, ip, #110592	; 0x1b000
   118d0:	ldr	pc, [ip, #1992]!	; 0x7c8

000118d4 <funlockfile@plt>:
   118d4:	add	ip, pc, #0, 12
   118d8:	add	ip, ip, #110592	; 0x1b000
   118dc:	ldr	pc, [ip, #1984]!	; 0x7c0

000118e0 <accept@plt>:
   118e0:	add	ip, pc, #0, 12
   118e4:	add	ip, ip, #110592	; 0x1b000
   118e8:	ldr	pc, [ip, #1976]!	; 0x7b8

000118ec <sigaction@plt>:
   118ec:	add	ip, pc, #0, 12
   118f0:	add	ip, ip, #110592	; 0x1b000
   118f4:	ldr	pc, [ip, #1968]!	; 0x7b0

000118f8 <fwrite@plt>:
   118f8:	add	ip, pc, #0, 12
   118fc:	add	ip, ip, #110592	; 0x1b000
   11900:	ldr	pc, [ip, #1960]!	; 0x7a8

00011904 <strcat@plt>:
   11904:	add	ip, pc, #0, 12
   11908:	add	ip, ip, #110592	; 0x1b000
   1190c:	ldr	pc, [ip, #1952]!	; 0x7a0

00011910 <gettimeofday@plt>:
   11910:	add	ip, pc, #0, 12
   11914:	add	ip, ip, #110592	; 0x1b000
   11918:	ldr	pc, [ip, #1944]!	; 0x798

0001191c <error@plt>:
   1191c:	add	ip, pc, #0, 12
   11920:	add	ip, ip, #110592	; 0x1b000
   11924:	ldr	pc, [ip, #1936]!	; 0x790

00011928 <opendir@plt>:
   11928:	add	ip, pc, #0, 12
   1192c:	add	ip, ip, #110592	; 0x1b000
   11930:	ldr	pc, [ip, #1928]!	; 0x788

00011934 <open64@plt>:
   11934:	add	ip, pc, #0, 12
   11938:	add	ip, ip, #110592	; 0x1b000
   1193c:	ldr	pc, [ip, #1920]!	; 0x780

00011940 <getenv@plt>:
   11940:	add	ip, pc, #0, 12
   11944:	add	ip, ip, #110592	; 0x1b000
   11948:	ldr	pc, [ip, #1912]!	; 0x778

0001194c <setgid@plt>:
   1194c:	add	ip, pc, #0, 12
   11950:	add	ip, ip, #110592	; 0x1b000
   11954:	ldr	pc, [ip, #1904]!	; 0x770

00011958 <malloc@plt>:
   11958:	add	ip, pc, #0, 12
   1195c:	add	ip, ip, #110592	; 0x1b000
   11960:	ldr	pc, [ip, #1896]!	; 0x768

00011964 <sigaddset@plt>:
   11964:	add	ip, pc, #0, 12
   11968:	add	ip, ip, #110592	; 0x1b000
   1196c:	ldr	pc, [ip, #1888]!	; 0x760

00011970 <__libc_start_main@plt>:
   11970:	add	ip, pc, #0, 12
   11974:	add	ip, ip, #110592	; 0x1b000
   11978:	ldr	pc, [ip, #1880]!	; 0x758

0001197c <strerror@plt>:
   1197c:	add	ip, pc, #0, 12
   11980:	add	ip, ip, #110592	; 0x1b000
   11984:	ldr	pc, [ip, #1872]!	; 0x750

00011988 <__ctype_tolower_loc@plt>:
   11988:	add	ip, pc, #0, 12
   1198c:	add	ip, ip, #110592	; 0x1b000
   11990:	ldr	pc, [ip, #1864]!	; 0x748

00011994 <__gmon_start__@plt>:
   11994:	add	ip, pc, #0, 12
   11998:	add	ip, ip, #110592	; 0x1b000
   1199c:	ldr	pc, [ip, #1856]!	; 0x740

000119a0 <mempcpy@plt>:
   119a0:	add	ip, pc, #0, 12
   119a4:	add	ip, ip, #110592	; 0x1b000
   119a8:	ldr	pc, [ip, #1848]!	; 0x738

000119ac <__ctype_b_loc@plt>:
   119ac:	add	ip, pc, #0, 12
   119b0:	add	ip, ip, #110592	; 0x1b000
   119b4:	ldr	pc, [ip, #1840]!	; 0x730

000119b8 <getpid@plt>:
   119b8:	add	ip, pc, #0, 12
   119bc:	add	ip, ip, #110592	; 0x1b000
   119c0:	ldr	pc, [ip, #1832]!	; 0x728

000119c4 <exit@plt>:
   119c4:	add	ip, pc, #0, 12
   119c8:	add	ip, ip, #110592	; 0x1b000
   119cc:	ldr	pc, [ip, #1824]!	; 0x720

000119d0 <strtoul@plt>:
   119d0:	add	ip, pc, #0, 12
   119d4:	add	ip, ip, #110592	; 0x1b000
   119d8:	ldr	pc, [ip, #1816]!	; 0x718

000119dc <strlen@plt>:
   119dc:	add	ip, pc, #0, 12
   119e0:	add	ip, ip, #110592	; 0x1b000
   119e4:	ldr	pc, [ip, #1808]!	; 0x710

000119e8 <setsid@plt>:
   119e8:	add	ip, pc, #0, 12
   119ec:	add	ip, ip, #110592	; 0x1b000
   119f0:	ldr	pc, [ip, #1800]!	; 0x708

000119f4 <strchr@plt>:
   119f4:	add	ip, pc, #0, 12
   119f8:	add	ip, ip, #110592	; 0x1b000
   119fc:	ldr	pc, [ip, #1792]!	; 0x700

00011a00 <setenv@plt>:
   11a00:	add	ip, pc, #0, 12
   11a04:	add	ip, ip, #110592	; 0x1b000
   11a08:	ldr	pc, [ip, #1784]!	; 0x6f8

00011a0c <fprintf@plt>:
   11a0c:	add	ip, pc, #0, 12
   11a10:	add	ip, ip, #110592	; 0x1b000
   11a14:	ldr	pc, [ip, #1776]!	; 0x6f0

00011a18 <execv@plt>:
   11a18:	add	ip, pc, #0, 12
   11a1c:	add	ip, ip, #110592	; 0x1b000
   11a20:	ldr	pc, [ip, #1768]!	; 0x6e8

00011a24 <__errno_location@plt>:
   11a24:	add	ip, pc, #0, 12
   11a28:	add	ip, ip, #110592	; 0x1b000
   11a2c:	ldr	pc, [ip, #1760]!	; 0x6e0

00011a30 <snprintf@plt>:
   11a30:	add	ip, pc, #0, 12
   11a34:	add	ip, ip, #110592	; 0x1b000
   11a38:	ldr	pc, [ip, #1752]!	; 0x6d8

00011a3c <strerror_r@plt>:
   11a3c:	add	ip, pc, #0, 12
   11a40:	add	ip, ip, #110592	; 0x1b000
   11a44:	ldr	pc, [ip, #1744]!	; 0x6d0

00011a48 <bind@plt>:
   11a48:	add	ip, pc, #0, 12
   11a4c:	add	ip, ip, #110592	; 0x1b000
   11a50:	ldr	pc, [ip, #1736]!	; 0x6c8

00011a54 <memset@plt>:
   11a54:	add	ip, pc, #0, 12
   11a58:	add	ip, ip, #110592	; 0x1b000
   11a5c:	ldr	pc, [ip, #1728]!	; 0x6c0

00011a60 <strncpy@plt>:
   11a60:	add	ip, pc, #0, 12
   11a64:	add	ip, ip, #110592	; 0x1b000
   11a68:	ldr	pc, [ip, #1720]!	; 0x6b8

00011a6c <sigsuspend@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #110592	; 0x1b000
   11a74:	ldr	pc, [ip, #1712]!	; 0x6b0

00011a78 <wait3@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #110592	; 0x1b000
   11a80:	ldr	pc, [ip, #1704]!	; 0x6a8

00011a84 <write@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #110592	; 0x1b000
   11a8c:	ldr	pc, [ip, #1696]!	; 0x6a0

00011a90 <memchr@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #110592	; 0x1b000
   11a98:	ldr	pc, [ip, #1688]!	; 0x698

00011a9c <fclose@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #110592	; 0x1b000
   11aa4:	ldr	pc, [ip, #1680]!	; 0x690

00011aa8 <sendto@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #110592	; 0x1b000
   11ab0:	ldr	pc, [ip, #1672]!	; 0x688

00011ab4 <__overflow@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #110592	; 0x1b000
   11abc:	ldr	pc, [ip, #1664]!	; 0x680

00011ac0 <sigemptyset@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #110592	; 0x1b000
   11ac8:	ldr	pc, [ip, #1656]!	; 0x678

00011acc <fork@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #110592	; 0x1b000
   11ad4:	ldr	pc, [ip, #1648]!	; 0x670

00011ad8 <getnameinfo@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #110592	; 0x1b000
   11ae0:	ldr	pc, [ip, #1640]!	; 0x668

00011ae4 <strrchr@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #110592	; 0x1b000
   11aec:	ldr	pc, [ip, #1632]!	; 0x660

00011af0 <listen@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #110592	; 0x1b000
   11af8:	ldr	pc, [ip, #1624]!	; 0x658

00011afc <vfprintf@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #110592	; 0x1b000
   11b04:	ldr	pc, [ip, #1616]!	; 0x650

00011b08 <fputc@plt>:
   11b08:	add	ip, pc, #0, 12
   11b0c:	add	ip, ip, #110592	; 0x1b000
   11b10:	ldr	pc, [ip, #1608]!	; 0x648

00011b14 <syslog@plt>:
   11b14:	add	ip, pc, #0, 12
   11b18:	add	ip, ip, #110592	; 0x1b000
   11b1c:	ldr	pc, [ip, #1600]!	; 0x640

00011b20 <setuid@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #110592	; 0x1b000
   11b28:	ldr	pc, [ip, #1592]!	; 0x638

00011b2c <sprintf@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #110592	; 0x1b000
   11b34:	ldr	pc, [ip, #1584]!	; 0x630

00011b38 <readdir64@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #110592	; 0x1b000
   11b40:	ldr	pc, [ip, #1576]!	; 0x628

00011b44 <openlog@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #110592	; 0x1b000
   11b4c:	ldr	pc, [ip, #1568]!	; 0x620

00011b50 <getsockname@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #110592	; 0x1b000
   11b58:	ldr	pc, [ip, #1560]!	; 0x618

00011b5c <flockfile@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #110592	; 0x1b000
   11b64:	ldr	pc, [ip, #1552]!	; 0x610

00011b68 <vsnprintf@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #110592	; 0x1b000
   11b70:	ldr	pc, [ip, #1544]!	; 0x608

00011b74 <fopen64@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #110592	; 0x1b000
   11b7c:	ldr	pc, [ip, #1536]!	; 0x600

00011b80 <qsort@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #110592	; 0x1b000
   11b88:	ldr	pc, [ip, #1528]!	; 0x5f8

00011b8c <getpeername@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #110592	; 0x1b000
   11b94:	ldr	pc, [ip, #1520]!	; 0x5f0

00011b98 <freeaddrinfo@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #110592	; 0x1b000
   11ba0:	ldr	pc, [ip, #1512]!	; 0x5e8

00011ba4 <getaddrinfo@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #110592	; 0x1b000
   11bac:	ldr	pc, [ip, #1504]!	; 0x5e0

00011bb0 <socket@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #110592	; 0x1b000
   11bb8:	ldr	pc, [ip, #1496]!	; 0x5d8

00011bbc <__xstat64@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #110592	; 0x1b000
   11bc4:	ldr	pc, [ip, #1488]!	; 0x5d0

00011bc8 <unsetenv@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #110592	; 0x1b000
   11bd0:	ldr	pc, [ip, #1480]!	; 0x5c8

00011bd4 <strncmp@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #110592	; 0x1b000
   11bdc:	ldr	pc, [ip, #1472]!	; 0x5c0

00011be0 <abort@plt>:
   11be0:	add	ip, pc, #0, 12
   11be4:	add	ip, ip, #110592	; 0x1b000
   11be8:	ldr	pc, [ip, #1464]!	; 0x5b8

00011bec <recv@plt>:
   11bec:	add	ip, pc, #0, 12
   11bf0:	add	ip, ip, #110592	; 0x1b000
   11bf4:	ldr	pc, [ip, #1456]!	; 0x5b0

00011bf8 <close@plt>:
   11bf8:	add	ip, pc, #0, 12
   11bfc:	add	ip, ip, #110592	; 0x1b000
   11c00:	ldr	pc, [ip, #1448]!	; 0x5a8

00011c04 <closedir@plt>:
   11c04:	add	ip, pc, #0, 12
   11c08:	add	ip, ip, #110592	; 0x1b000
   11c0c:	ldr	pc, [ip, #1440]!	; 0x5a0

00011c10 <getgrnam@plt>:
   11c10:	add	ip, pc, #0, 12
   11c14:	add	ip, ip, #110592	; 0x1b000
   11c18:	ldr	pc, [ip, #1432]!	; 0x598

00011c1c <strspn@plt>:
   11c1c:	add	ip, pc, #0, 12
   11c20:	add	ip, ip, #110592	; 0x1b000
   11c24:	ldr	pc, [ip, #1424]!	; 0x590

00011c28 <__assert_fail@plt>:
   11c28:	add	ip, pc, #0, 12
   11c2c:	add	ip, ip, #110592	; 0x1b000
   11c30:	ldr	pc, [ip, #1416]!	; 0x588

Disassembly of section .text:

00011c34 <daemon@@Base-0x3c3c>:
   11c34:	mov	fp, #0
   11c38:	mov	lr, #0
   11c3c:	pop	{r1}		; (ldr r1, [sp], #4)
   11c40:	mov	r2, sp
   11c44:	push	{r2}		; (str r2, [sp, #-4]!)
   11c48:	push	{r0}		; (str r0, [sp, #-4]!)
   11c4c:	ldr	ip, [pc, #16]	; 11c64 <__assert_fail@plt+0x3c>
   11c50:	push	{ip}		; (str ip, [sp, #-4]!)
   11c54:	ldr	r0, [pc, #12]	; 11c68 <__assert_fail@plt+0x40>
   11c58:	ldr	r3, [pc, #12]	; 11c6c <__assert_fail@plt+0x44>
   11c5c:	bl	11970 <__libc_start_main@plt>
   11c60:	bl	11be0 <abort@plt>
   11c64:	andeq	fp, r1, r4, lsr #13
   11c68:	andeq	r4, r1, r8, lsl fp
   11c6c:	andeq	fp, r1, r4, asr #12
   11c70:	ldr	r3, [pc, #20]	; 11c8c <__assert_fail@plt+0x64>
   11c74:	ldr	r2, [pc, #20]	; 11c90 <__assert_fail@plt+0x68>
   11c78:	add	r3, pc, r3
   11c7c:	ldr	r2, [r3, r2]
   11c80:	cmp	r2, #0
   11c84:	bxeq	lr
   11c88:	b	11994 <__gmon_start__@plt>
   11c8c:	andeq	fp, r1, r0, lsl #7
   11c90:			; <UNDEFINED> instruction: 0x000001bc
   11c94:	ldr	r3, [pc, #28]	; 11cb8 <__assert_fail@plt+0x90>
   11c98:	ldr	r0, [pc, #28]	; 11cbc <__assert_fail@plt+0x94>
   11c9c:	sub	r3, r3, r0
   11ca0:	cmp	r3, #6
   11ca4:	bxls	lr
   11ca8:	ldr	r3, [pc, #16]	; 11cc0 <__assert_fail@plt+0x98>
   11cac:	cmp	r3, #0
   11cb0:	bxeq	lr
   11cb4:	bx	r3
   11cb8:	andeq	sp, r2, fp, lsr #7
   11cbc:	andeq	sp, r2, r8, lsr #7
   11cc0:	andeq	r0, r0, r0
   11cc4:	ldr	r1, [pc, #36]	; 11cf0 <__assert_fail@plt+0xc8>
   11cc8:	ldr	r0, [pc, #36]	; 11cf4 <__assert_fail@plt+0xcc>
   11ccc:	sub	r1, r1, r0
   11cd0:	asr	r1, r1, #2
   11cd4:	add	r1, r1, r1, lsr #31
   11cd8:	asrs	r1, r1, #1
   11cdc:	bxeq	lr
   11ce0:	ldr	r3, [pc, #16]	; 11cf8 <__assert_fail@plt+0xd0>
   11ce4:	cmp	r3, #0
   11ce8:	bxeq	lr
   11cec:	bx	r3
   11cf0:	andeq	sp, r2, r8, lsr #7
   11cf4:	andeq	sp, r2, r8, lsr #7
   11cf8:	andeq	r0, r0, r0
   11cfc:	push	{r4, lr}
   11d00:	ldr	r4, [pc, #24]	; 11d20 <__assert_fail@plt+0xf8>
   11d04:	ldrb	r3, [r4]
   11d08:	cmp	r3, #0
   11d0c:	popne	{r4, pc}
   11d10:	bl	11c94 <__assert_fail@plt+0x6c>
   11d14:	mov	r3, #1
   11d18:	strb	r3, [r4]
   11d1c:	pop	{r4, pc}
   11d20:			; <UNDEFINED> instruction: 0x0002d3b8
   11d24:	ldr	r0, [pc, #40]	; 11d54 <__assert_fail@plt+0x12c>
   11d28:	ldr	r3, [r0]
   11d2c:	cmp	r3, #0
   11d30:	bne	11d38 <__assert_fail@plt+0x110>
   11d34:	b	11cc4 <__assert_fail@plt+0x9c>
   11d38:	ldr	r3, [pc, #24]	; 11d58 <__assert_fail@plt+0x130>
   11d3c:	cmp	r3, #0
   11d40:	beq	11d34 <__assert_fail@plt+0x10c>
   11d44:	push	{r4, lr}
   11d48:	blx	r3
   11d4c:	pop	{r4, lr}
   11d50:	b	11cc4 <__assert_fail@plt+0x9c>
   11d54:	andeq	ip, r2, ip, lsl #30
   11d58:	andeq	r0, r0, r0
   11d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d60:	sub	sp, sp, #12
   11d64:	ldr	r8, [pc, #264]	; 11e74 <__assert_fail@plt+0x24c>
   11d68:	ldr	fp, [pc, #264]	; 11e78 <__assert_fail@plt+0x250>
   11d6c:	ldr	r9, [pc, #264]	; 11e7c <__assert_fail@plt+0x254>
   11d70:	ldr	r7, [pc, #264]	; 11e80 <__assert_fail@plt+0x258>
   11d74:	ldr	r6, [pc, #264]	; 11e84 <__assert_fail@plt+0x25c>
   11d78:	mov	r2, #0
   11d7c:	mov	r1, #1
   11d80:	add	r0, sp, #4
   11d84:	bl	11a78 <wait3@plt>
   11d88:	subs	r5, r0, #0
   11d8c:	ble	11e6c <__assert_fail@plt+0x244>
   11d90:	ldrb	r3, [r8]
   11d94:	cmp	r3, #0
   11d98:	bne	11db0 <__assert_fail@plt+0x188>
   11d9c:	ldr	r4, [r9]
   11da0:	cmp	r4, #0
   11da4:	beq	11d78 <__assert_fail@plt+0x150>
   11da8:	ldr	sl, [pc, #216]	; 11e88 <__assert_fail@plt+0x260>
   11dac:	b	11e30 <__assert_fail@plt+0x208>
   11db0:	ldr	r3, [sp, #4]
   11db4:	mov	r2, r5
   11db8:	ldr	r1, [pc, #204]	; 11e8c <__assert_fail@plt+0x264>
   11dbc:	ldr	r0, [fp]
   11dc0:	bl	11a0c <fprintf@plt>
   11dc4:	b	11d9c <__assert_fail@plt+0x174>
   11dc8:	ldr	r2, [r4, #48]	; 0x30
   11dcc:	ldr	r1, [pc, #188]	; 11e90 <__assert_fail@plt+0x268>
   11dd0:	mov	r0, #4
   11dd4:	bl	11b14 <syslog@plt>
   11dd8:	b	11e48 <__assert_fail@plt+0x220>
   11ddc:	ldr	r3, [r4, #60]	; 0x3c
   11de0:	add	r2, r3, #31
   11de4:	cmp	r3, #0
   11de8:	movge	r2, r3
   11dec:	asr	r2, r2, #5
   11df0:	asr	r1, r3, #31
   11df4:	lsr	r1, r1, #27
   11df8:	add	r3, r3, r1
   11dfc:	and	r3, r3, #31
   11e00:	sub	r3, r3, r1
   11e04:	mov	r1, #1
   11e08:	ldr	r0, [r7, r2, lsl #2]
   11e0c:	orr	r3, r0, r1, lsl r3
   11e10:	str	r3, [r7, r2, lsl #2]
   11e14:	ldr	r3, [r6]
   11e18:	add	r3, r3, r1
   11e1c:	str	r3, [r6]
   11e20:	str	r1, [r4, #24]
   11e24:	ldr	r4, [r4, #220]	; 0xdc
   11e28:	cmp	r4, #0
   11e2c:	beq	11d78 <__assert_fail@plt+0x150>
   11e30:	ldr	r3, [r4, #24]
   11e34:	cmp	r5, r3
   11e38:	bne	11e24 <__assert_fail@plt+0x1fc>
   11e3c:	ldr	r3, [sp, #4]
   11e40:	cmp	r3, #0
   11e44:	bne	11dc8 <__assert_fail@plt+0x1a0>
   11e48:	ldrb	r3, [r8]
   11e4c:	cmp	r3, #0
   11e50:	beq	11ddc <__assert_fail@plt+0x1b4>
   11e54:	ldr	r3, [r4, #60]	; 0x3c
   11e58:	ldr	r2, [r4, #12]
   11e5c:	mov	r1, sl
   11e60:	ldr	r0, [fp]
   11e64:	bl	11a0c <fprintf@plt>
   11e68:	b	11ddc <__assert_fail@plt+0x1b4>
   11e6c:	add	sp, sp, #12
   11e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e74:			; <UNDEFINED> instruction: 0x0002d3bc
   11e78:			; <UNDEFINED> instruction: 0x0002d3b0
   11e7c:	andeq	sp, r2, ip, lsl #12
   11e80:	andeq	sp, r2, r8, ror #10
   11e84:	andeq	sp, r2, ip, ror #11
   11e88:	andeq	fp, r1, r8, lsl r7
   11e8c:	andeq	fp, r1, r8, ror #13
   11e90:	andeq	fp, r1, r0, lsl #14
   11e94:	push	{lr}		; (str lr, [sp, #-4]!)
   11e98:	sub	sp, sp, #8192	; 0x2000
   11e9c:	sub	sp, sp, #4
   11ea0:	mov	r2, #8192	; 0x2000
   11ea4:	mov	r1, sp
   11ea8:	bl	1179c <read@plt>
   11eac:	add	sp, sp, #8192	; 0x2000
   11eb0:	add	sp, sp, #4
   11eb4:	pop	{pc}		; (ldr pc, [sp], #4)
   11eb8:	push	{r4, lr}
   11ebc:	sub	sp, sp, #8320	; 0x2080
   11ec0:	sub	sp, sp, #16
   11ec4:	mov	r4, r0
   11ec8:	add	r3, sp, #144	; 0x90
   11ecc:	mov	r2, #128	; 0x80
   11ed0:	str	r2, [r3, #-4]!
   11ed4:	str	r3, [sp, #4]
   11ed8:	add	r3, sp, #12
   11edc:	str	r3, [sp]
   11ee0:	mov	r3, #0
   11ee4:	mov	r2, #8192	; 0x2000
   11ee8:	add	r1, sp, #144	; 0x90
   11eec:	bl	11868 <recvfrom@plt>
   11ef0:	subs	r2, r0, #0
   11ef4:	bge	11f04 <__assert_fail@plt+0x2dc>
   11ef8:	add	sp, sp, #8320	; 0x2080
   11efc:	add	sp, sp, #16
   11f00:	pop	{r4, pc}
   11f04:	mov	r3, #128	; 0x80
   11f08:	str	r3, [sp, #4]
   11f0c:	add	r3, sp, #12
   11f10:	str	r3, [sp]
   11f14:	mov	r3, #0
   11f18:	add	r1, sp, #144	; 0x90
   11f1c:	mov	r0, r4
   11f20:	bl	11aa8 <sendto@plt>
   11f24:	b	11ef8 <__assert_fail@plt+0x2d0>
   11f28:	push	{r4, lr}
   11f2c:	sub	sp, sp, #264	; 0x108
   11f30:	mov	r4, r0
   11f34:	mov	r0, #0
   11f38:	bl	11820 <time@plt>
   11f3c:	add	r3, sp, #264	; 0x108
   11f40:	str	r0, [r3, #-260]!	; 0xfffffefc
   11f44:	mov	r0, r3
   11f48:	bl	1185c <ctime@plt>
   11f4c:	mov	r2, r0
   11f50:	ldr	r1, [pc, #36]	; 11f7c <__assert_fail@plt+0x354>
   11f54:	add	r0, sp, #8
   11f58:	bl	11b2c <sprintf@plt>
   11f5c:	add	r0, sp, #8
   11f60:	bl	119dc <strlen@plt>
   11f64:	mov	r2, r0
   11f68:	add	r1, sp, #8
   11f6c:	mov	r0, r4
   11f70:	bl	11a84 <write@plt>
   11f74:	add	sp, sp, #264	; 0x108
   11f78:	pop	{r4, pc}
   11f7c:	andeq	fp, r1, ip, lsr #14
   11f80:	push	{r4, lr}
   11f84:	sub	sp, sp, #400	; 0x190
   11f88:	mov	r4, r0
   11f8c:	mov	r0, #0
   11f90:	bl	11820 <time@plt>
   11f94:	str	r0, [sp, #140]	; 0x8c
   11f98:	mov	r3, #128	; 0x80
   11f9c:	str	r3, [sp, #8]
   11fa0:	add	r3, sp, #8
   11fa4:	str	r3, [sp, #4]
   11fa8:	add	r3, sp, #12
   11fac:	str	r3, [sp]
   11fb0:	mov	r3, #0
   11fb4:	mov	r2, #256	; 0x100
   11fb8:	add	r1, sp, #144	; 0x90
   11fbc:	mov	r0, r4
   11fc0:	bl	11868 <recvfrom@plt>
   11fc4:	cmp	r0, #0
   11fc8:	bge	11fd4 <__assert_fail@plt+0x3ac>
   11fcc:	add	sp, sp, #400	; 0x190
   11fd0:	pop	{r4, pc}
   11fd4:	add	r0, sp, #140	; 0x8c
   11fd8:	bl	1185c <ctime@plt>
   11fdc:	mov	r2, r0
   11fe0:	ldr	r1, [pc, #52]	; 1201c <__assert_fail@plt+0x3f4>
   11fe4:	add	r0, sp, #144	; 0x90
   11fe8:	bl	11b2c <sprintf@plt>
   11fec:	add	r0, sp, #144	; 0x90
   11ff0:	bl	119dc <strlen@plt>
   11ff4:	mov	r3, #128	; 0x80
   11ff8:	str	r3, [sp, #4]
   11ffc:	add	r3, sp, #12
   12000:	str	r3, [sp]
   12004:	mov	r3, #0
   12008:	mov	r2, r0
   1200c:	add	r1, sp, #144	; 0x90
   12010:	mov	r0, r4
   12014:	bl	11aa8 <sendto@plt>
   12018:	b	11fcc <__assert_fail@plt+0x3a4>
   1201c:	andeq	fp, r1, ip, lsr #14
   12020:	cmp	r0, #112	; 0x70
   12024:	beq	1209c <__assert_fail@plt+0x474>
   12028:	bgt	12060 <__assert_fail@plt+0x438>
   1202c:	cmp	r0, #82	; 0x52
   12030:	beq	120d0 <__assert_fail@plt+0x4a8>
   12034:	cmp	r0, #100	; 0x64
   12038:	bne	12130 <__assert_fail@plt+0x508>
   1203c:	mov	r2, #1
   12040:	ldr	r3, [pc, #240]	; 12138 <__assert_fail@plt+0x510>
   12044:	strb	r2, [r3]
   12048:	ldr	r2, [pc, #236]	; 1213c <__assert_fail@plt+0x514>
   1204c:	ldr	r3, [r2]
   12050:	orr	r3, r3, #1
   12054:	str	r3, [r2]
   12058:	mov	r0, #0
   1205c:	bx	lr
   12060:	cmp	r0, #256	; 0x100
   12064:	beq	12088 <__assert_fail@plt+0x460>
   12068:	ldr	r3, [pc, #208]	; 12140 <__assert_fail@plt+0x518>
   1206c:	cmp	r0, r3
   12070:	bne	12130 <__assert_fail@plt+0x508>
   12074:	mov	r2, #1
   12078:	ldr	r3, [pc, #184]	; 12138 <__assert_fail@plt+0x510>
   1207c:	strb	r2, [r3, #2]
   12080:	mov	r0, #0
   12084:	bx	lr
   12088:	mov	r2, #1
   1208c:	ldr	r3, [pc, #164]	; 12138 <__assert_fail@plt+0x510>
   12090:	strb	r2, [r3, #1]
   12094:	mov	r0, #0
   12098:	bx	lr
   1209c:	cmp	r1, #0
   120a0:	beq	120c0 <__assert_fail@plt+0x498>
   120a4:	ldrb	r3, [r1]
   120a8:	cmp	r3, #0
   120ac:	beq	120c0 <__assert_fail@plt+0x498>
   120b0:	ldr	r3, [pc, #140]	; 12144 <__assert_fail@plt+0x51c>
   120b4:	str	r1, [r3]
   120b8:	mov	r0, #0
   120bc:	bx	lr
   120c0:	mov	r0, #0
   120c4:	ldr	r3, [pc, #120]	; 12144 <__assert_fail@plt+0x51c>
   120c8:	strb	r0, [r3, #4]
   120cc:	bx	lr
   120d0:	push	{r4, lr}
   120d4:	sub	sp, sp, #8
   120d8:	mov	r4, r1
   120dc:	mov	r2, #0
   120e0:	add	r1, sp, #4
   120e4:	mov	r0, r4
   120e8:	bl	11760 <strtol@plt>
   120ec:	cmp	r0, #0
   120f0:	ble	12104 <__assert_fail@plt+0x4dc>
   120f4:	ldr	r3, [sp, #4]
   120f8:	ldrb	r3, [r3]
   120fc:	cmp	r3, #0
   12100:	beq	12120 <__assert_fail@plt+0x4f8>
   12104:	mov	r2, r4
   12108:	ldr	r1, [pc, #56]	; 12148 <__assert_fail@plt+0x520>
   1210c:	mov	r0, #3
   12110:	bl	11b14 <syslog@plt>
   12114:	mov	r0, #0
   12118:	add	sp, sp, #8
   1211c:	pop	{r4, pc}
   12120:	ldr	r3, [pc, #28]	; 12144 <__assert_fail@plt+0x51c>
   12124:	str	r0, [r3, #8]
   12128:	mov	r0, #0
   1212c:	b	12118 <__assert_fail@plt+0x4f0>
   12130:	mov	r0, #7
   12134:	bx	lr
   12138:			; <UNDEFINED> instruction: 0x0002d3bc
   1213c:	strdeq	sp, [r2], -r0
   12140:	andeq	r0, r0, r1, lsl #2
   12144:	andeq	sp, r2, r8, asr #3
   12148:	andeq	fp, r1, r4, lsr r7
   1214c:	push	{r4, r5, r6, r7, r8, lr}
   12150:	mov	r7, r0
   12154:	ldr	r3, [pc, #88]	; 121b4 <__assert_fail@plt+0x58c>
   12158:	ldr	r0, [r3, #12]
   1215c:	cmp	r0, #0
   12160:	beq	121ac <__assert_fail@plt+0x584>
   12164:	ldr	r6, [r7, #16]
   12168:	add	r4, r3, #12
   1216c:	b	1217c <__assert_fail@plt+0x554>
   12170:	ldr	r0, [r4, #16]!
   12174:	cmp	r0, #0
   12178:	beq	121a0 <__assert_fail@plt+0x578>
   1217c:	mov	r5, r4
   12180:	ldr	r3, [r4, #4]
   12184:	cmp	r3, r6
   12188:	bne	12170 <__assert_fail@plt+0x548>
   1218c:	ldr	r1, [r7, #12]
   12190:	bl	11754 <strcmp@plt>
   12194:	cmp	r0, #0
   12198:	bne	12170 <__assert_fail@plt+0x548>
   1219c:	b	121a4 <__assert_fail@plt+0x57c>
   121a0:	mov	r5, #0
   121a4:	mov	r0, r5
   121a8:	pop	{r4, r5, r6, r7, r8, pc}
   121ac:	mov	r5, #0
   121b0:	b	121a4 <__assert_fail@plt+0x57c>
   121b4:	andeq	sp, r2, r8, asr #3
   121b8:	push	{r4, r5, lr}
   121bc:	sub	sp, sp, #148	; 0x94
   121c0:	mov	r4, r0
   121c4:	mov	r5, r1
   121c8:	mov	r2, #140	; 0x8c
   121cc:	mov	r1, #0
   121d0:	add	r0, sp, #4
   121d4:	bl	11a54 <memset@plt>
   121d8:	add	r0, sp, #8
   121dc:	bl	11ac0 <sigemptyset@plt>
   121e0:	mov	r1, r4
   121e4:	add	r0, sp, #8
   121e8:	bl	11964 <sigaddset@plt>
   121ec:	mov	r3, #268435456	; 0x10000000
   121f0:	str	r3, [sp, #136]	; 0x88
   121f4:	str	r5, [sp, #4]
   121f8:	mov	r2, #0
   121fc:	add	r1, sp, #4
   12200:	mov	r0, r4
   12204:	bl	118ec <sigaction@plt>
   12208:	add	sp, sp, #148	; 0x94
   1220c:	pop	{r4, r5, pc}
   12210:	push	{r4, lr}
   12214:	sub	sp, sp, #128	; 0x80
   12218:	mov	r4, r0
   1221c:	mov	r0, sp
   12220:	bl	11ac0 <sigemptyset@plt>
   12224:	mov	r1, #17
   12228:	mov	r0, sp
   1222c:	bl	11964 <sigaddset@plt>
   12230:	mov	r1, #1
   12234:	mov	r0, sp
   12238:	bl	11964 <sigaddset@plt>
   1223c:	mov	r1, #14
   12240:	mov	r0, sp
   12244:	bl	11964 <sigaddset@plt>
   12248:	mov	r2, r4
   1224c:	mov	r1, sp
   12250:	mov	r0, #0
   12254:	bl	117b4 <sigprocmask@plt>
   12258:	add	sp, sp, #128	; 0x80
   1225c:	pop	{r4, pc}
   12260:	push	{lr}		; (str lr, [sp, #-4]!)
   12264:	sub	sp, sp, #132	; 0x84
   12268:	subs	r1, r0, #0
   1226c:	beq	12284 <__assert_fail@plt+0x65c>
   12270:	mov	r2, #0
   12274:	mov	r0, #2
   12278:	bl	117b4 <sigprocmask@plt>
   1227c:	add	sp, sp, #132	; 0x84
   12280:	pop	{pc}		; (ldr pc, [sp], #4)
   12284:	mov	r0, sp
   12288:	bl	11ac0 <sigemptyset@plt>
   1228c:	mov	r2, #0
   12290:	mov	r1, sp
   12294:	mov	r0, #2
   12298:	bl	117b4 <sigprocmask@plt>
   1229c:	b	1227c <__assert_fail@plt+0x654>
   122a0:	push	{r4, r5, r6, lr}
   122a4:	sub	sp, sp, #64	; 0x40
   122a8:	mov	r5, r0
   122ac:	mov	r4, r1
   122b0:	ldr	r3, [r1, #44]	; 0x2c
   122b4:	cmp	r3, #0
   122b8:	beq	122cc <__assert_fail@plt+0x6a4>
   122bc:	ldr	r3, [r3, #12]
   122c0:	blx	r3
   122c4:	add	sp, sp, #64	; 0x40
   122c8:	pop	{r4, r5, r6, pc}
   122cc:	ldr	r3, [pc, #556]	; 12500 <__assert_fail@plt+0x8d8>
   122d0:	ldrb	r3, [r3]
   122d4:	cmp	r3, #0
   122d8:	bne	1236c <__assert_fail@plt+0x744>
   122dc:	mov	r1, #0
   122e0:	mov	r0, r5
   122e4:	bl	11898 <dup2@plt>
   122e8:	mov	r0, r5
   122ec:	bl	11bf8 <close@plt>
   122f0:	mov	r1, #1
   122f4:	mov	r0, #0
   122f8:	bl	11898 <dup2@plt>
   122fc:	mov	r1, #2
   12300:	mov	r0, #0
   12304:	bl	11898 <dup2@plt>
   12308:	ldr	r0, [r4, #36]	; 0x24
   1230c:	bl	11748 <getpwnam@plt>
   12310:	subs	r5, r0, #0
   12314:	beq	12390 <__assert_fail@plt+0x768>
   12318:	ldr	r0, [r4, #40]	; 0x28
   1231c:	cmp	r0, #0
   12320:	beq	12330 <__assert_fail@plt+0x708>
   12324:	ldrb	r3, [r0]
   12328:	cmp	r3, #0
   1232c:	bne	123d4 <__assert_fail@plt+0x7ac>
   12330:	ldr	r3, [r5, #8]
   12334:	cmp	r3, #0
   12338:	beq	12430 <__assert_fail@plt+0x808>
   1233c:	ldr	r0, [r5, #12]
   12340:	bl	1194c <setgid@plt>
   12344:	cmp	r0, #0
   12348:	ldrge	r0, [r5]
   1234c:	bge	12418 <__assert_fail@plt+0x7f0>
   12350:	ldr	r3, [r5, #12]
   12354:	ldr	r2, [r4, #12]
   12358:	ldr	r1, [pc, #420]	; 12504 <__assert_fail@plt+0x8dc>
   1235c:	mov	r0, #3
   12360:	bl	11b14 <syslog@plt>
   12364:	mov	r0, #1
   12368:	bl	117fc <_exit@plt>
   1236c:	ldr	r3, [pc, #404]	; 12508 <__assert_fail@plt+0x8e0>
   12370:	ldr	r6, [r3]
   12374:	bl	119b8 <getpid@plt>
   12378:	ldr	r3, [r4, #48]	; 0x30
   1237c:	mov	r2, r0
   12380:	ldr	r1, [pc, #388]	; 1250c <__assert_fail@plt+0x8e4>
   12384:	mov	r0, r6
   12388:	bl	11a0c <fprintf@plt>
   1238c:	b	122dc <__assert_fail@plt+0x6b4>
   12390:	ldr	r3, [r4, #36]	; 0x24
   12394:	str	r3, [sp]
   12398:	ldr	r3, [r4, #20]
   1239c:	ldr	r2, [r4, #12]
   123a0:	ldr	r1, [pc, #360]	; 12510 <__assert_fail@plt+0x8e8>
   123a4:	mov	r0, #3
   123a8:	bl	11b14 <syslog@plt>
   123ac:	ldr	r3, [r4, #16]
   123b0:	cmp	r3, #1
   123b4:	beq	123cc <__assert_fail@plt+0x7a4>
   123b8:	mov	r3, #0
   123bc:	mov	r2, #50	; 0x32
   123c0:	add	r1, sp, #12
   123c4:	mov	r0, r3
   123c8:	bl	11bec <recv@plt>
   123cc:	mov	r0, #1
   123d0:	bl	117fc <_exit@plt>
   123d4:	bl	11c10 <getgrnam@plt>
   123d8:	subs	r6, r0, #0
   123dc:	beq	12474 <__assert_fail@plt+0x84c>
   123e0:	ldr	r3, [r5, #8]
   123e4:	cmp	r3, #0
   123e8:	beq	12430 <__assert_fail@plt+0x808>
   123ec:	ldr	r0, [r6, #8]
   123f0:	cmp	r0, #0
   123f4:	bne	124b8 <__assert_fail@plt+0x890>
   123f8:	ldr	r0, [r5, #12]
   123fc:	bl	1194c <setgid@plt>
   12400:	cmp	r0, #0
   12404:	ldrge	r0, [r5]
   12408:	blt	12350 <__assert_fail@plt+0x728>
   1240c:	ldr	r1, [r6, #8]
   12410:	cmp	r1, #0
   12414:	bne	1241c <__assert_fail@plt+0x7f4>
   12418:	ldr	r1, [r5, #12]
   1241c:	bl	118b0 <initgroups@plt>
   12420:	ldr	r0, [r5, #8]
   12424:	bl	11b20 <setuid@plt>
   12428:	cmp	r0, #0
   1242c:	blt	124e4 <__assert_fail@plt+0x8bc>
   12430:	ldr	r1, [r4, #52]	; 0x34
   12434:	ldr	r0, [r4, #48]	; 0x30
   12438:	bl	11a18 <execv@plt>
   1243c:	ldr	r3, [r4, #16]
   12440:	cmp	r3, #1
   12444:	beq	1245c <__assert_fail@plt+0x834>
   12448:	mov	r3, #0
   1244c:	mov	r2, #50	; 0x32
   12450:	add	r1, sp, #12
   12454:	mov	r0, r3
   12458:	bl	11bec <recv@plt>
   1245c:	ldr	r2, [r4, #48]	; 0x30
   12460:	ldr	r1, [pc, #172]	; 12514 <__assert_fail@plt+0x8ec>
   12464:	mov	r0, #3
   12468:	bl	11b14 <syslog@plt>
   1246c:	mov	r0, #1
   12470:	bl	117fc <_exit@plt>
   12474:	ldr	r3, [r4, #40]	; 0x28
   12478:	str	r3, [sp]
   1247c:	ldr	r3, [r4, #20]
   12480:	ldr	r2, [r4, #12]
   12484:	ldr	r1, [pc, #140]	; 12518 <__assert_fail@plt+0x8f0>
   12488:	mov	r0, #3
   1248c:	bl	11b14 <syslog@plt>
   12490:	ldr	r3, [r4, #16]
   12494:	cmp	r3, #1
   12498:	beq	124b0 <__assert_fail@plt+0x888>
   1249c:	mov	r3, #0
   124a0:	mov	r2, #50	; 0x32
   124a4:	add	r1, sp, #12
   124a8:	mov	r0, r3
   124ac:	bl	11bec <recv@plt>
   124b0:	mov	r0, #1
   124b4:	bl	117fc <_exit@plt>
   124b8:	bl	1194c <setgid@plt>
   124bc:	cmp	r0, #0
   124c0:	ldrge	r0, [r5]
   124c4:	bge	1240c <__assert_fail@plt+0x7e4>
   124c8:	ldr	r3, [r6, #8]
   124cc:	ldr	r2, [r4, #12]
   124d0:	ldr	r1, [pc, #44]	; 12504 <__assert_fail@plt+0x8dc>
   124d4:	mov	r0, #3
   124d8:	bl	11b14 <syslog@plt>
   124dc:	mov	r0, #1
   124e0:	bl	117fc <_exit@plt>
   124e4:	ldr	r3, [r5, #8]
   124e8:	ldr	r2, [r4, #12]
   124ec:	ldr	r1, [pc, #40]	; 1251c <__assert_fail@plt+0x8f4>
   124f0:	mov	r0, #3
   124f4:	bl	11b14 <syslog@plt>
   124f8:	mov	r0, #1
   124fc:	bl	117fc <_exit@plt>
   12500:			; <UNDEFINED> instruction: 0x0002d3bc
   12504:	andeq	fp, r1, r8, lsr #15
   12508:			; <UNDEFINED> instruction: 0x0002d3b0
   1250c:	andeq	fp, r1, r4, ror #14
   12510:	andeq	fp, r1, r4, ror r7
   12514:	andeq	fp, r1, r0, ror #15
   12518:	andeq	fp, r1, ip, lsl #15
   1251c:	andeq	fp, r1, r4, asr #15
   12520:	push	{r4, r5, r6, r7, r8, lr}
   12524:	sub	sp, sp, #264	; 0x108
   12528:	mov	r6, r0
   1252c:	mov	r4, #0
   12530:	add	r8, sp, #4
   12534:	ldr	r5, [pc, #508]	; 12738 <__assert_fail@plt+0xb10>
   12538:	ldr	r7, [pc, #508]	; 1273c <__assert_fail@plt+0xb14>
   1253c:	rsb	r2, r4, #256	; 0x100
   12540:	add	r2, r2, #2
   12544:	mov	r1, r8
   12548:	mov	r0, r6
   1254c:	bl	1179c <read@plt>
   12550:	cmp	r0, #0
   12554:	beq	125cc <__assert_fail@plt+0x9a4>
   12558:	blt	1263c <__assert_fail@plt+0xa14>
   1255c:	cmp	r0, #1
   12560:	bmi	125bc <__assert_fail@plt+0x994>
   12564:	ldrb	r3, [r8]
   12568:	cmp	r3, #13
   1256c:	bhi	1257c <__assert_fail@plt+0x954>
   12570:	lsr	r3, r5, r3
   12574:	tst	r3, #1
   12578:	bne	125d4 <__assert_fail@plt+0x9ac>
   1257c:	add	r3, r8, #1
   12580:	add	r0, r8, r0
   12584:	sub	r4, r4, r8
   12588:	b	12598 <__assert_fail@plt+0x970>
   1258c:	lsr	r2, r5, r2
   12590:	tst	r2, #1
   12594:	bne	125d8 <__assert_fail@plt+0x9b0>
   12598:	add	r1, r4, r3
   1259c:	cmp	r3, r0
   125a0:	beq	125b4 <__assert_fail@plt+0x98c>
   125a4:	ldrb	r2, [r3], #1
   125a8:	cmp	r2, #13
   125ac:	bhi	12598 <__assert_fail@plt+0x970>
   125b0:	b	1258c <__assert_fail@plt+0x964>
   125b4:	mov	r4, r1
   125b8:	mov	r8, r3
   125bc:	cmp	r4, r7
   125c0:	ble	1253c <__assert_fail@plt+0x914>
   125c4:	mov	r1, r4
   125c8:	b	125d8 <__assert_fail@plt+0x9b0>
   125cc:	mov	r1, r4
   125d0:	b	125d8 <__assert_fail@plt+0x9b0>
   125d4:	mov	r1, r4
   125d8:	cmp	r1, #0
   125dc:	blt	1263c <__assert_fail@plt+0xa14>
   125e0:	add	r3, sp, #264	; 0x108
   125e4:	add	r1, r3, r1
   125e8:	mov	r3, #0
   125ec:	strb	r3, [r1, #-260]	; 0xfffffefc
   125f0:	ldr	r3, [pc, #328]	; 12740 <__assert_fail@plt+0xb18>
   125f4:	ldrb	r3, [r3]
   125f8:	cmp	r3, #0
   125fc:	bne	12654 <__assert_fail@plt+0xa2c>
   12600:	ldr	r1, [pc, #316]	; 12744 <__assert_fail@plt+0xb1c>
   12604:	add	r0, sp, #4
   12608:	bl	118c8 <strcasecmp@plt>
   1260c:	cmp	r0, #0
   12610:	beq	1266c <__assert_fail@plt+0xa44>
   12614:	ldr	r3, [pc, #300]	; 12748 <__assert_fail@plt+0xb20>
   12618:	ldr	r4, [r3]
   1261c:	cmp	r4, #0
   12620:	bne	126f8 <__assert_fail@plt+0xad0>
   12624:	mov	r2, #24
   12628:	ldr	r1, [pc, #284]	; 1274c <__assert_fail@plt+0xb24>
   1262c:	mov	r0, r6
   12630:	bl	11a84 <write@plt>
   12634:	mov	r0, #1
   12638:	bl	119c4 <exit@plt>
   1263c:	mov	r2, #29
   12640:	ldr	r1, [pc, #264]	; 12750 <__assert_fail@plt+0xb28>
   12644:	mov	r0, r6
   12648:	bl	11a84 <write@plt>
   1264c:	mov	r0, #1
   12650:	bl	117fc <_exit@plt>
   12654:	add	r2, sp, #4
   12658:	ldr	r1, [pc, #244]	; 12754 <__assert_fail@plt+0xb2c>
   1265c:	ldr	r3, [pc, #244]	; 12758 <__assert_fail@plt+0xb30>
   12660:	ldr	r0, [r3]
   12664:	bl	11a0c <fprintf@plt>
   12668:	b	12600 <__assert_fail@plt+0x9d8>
   1266c:	ldr	r3, [pc, #212]	; 12748 <__assert_fail@plt+0xb20>
   12670:	ldr	r4, [r3]
   12674:	cmp	r4, #0
   12678:	beq	126a0 <__assert_fail@plt+0xa78>
   1267c:	ldr	r8, [pc, #216]	; 1275c <__assert_fail@plt+0xb34>
   12680:	mov	r7, #2
   12684:	ldr	r3, [r4, #64]	; 0x40
   12688:	sub	r3, r3, #1
   1268c:	cmp	r3, #1
   12690:	bls	126a8 <__assert_fail@plt+0xa80>
   12694:	ldr	r4, [r4, #220]	; 0xdc
   12698:	cmp	r4, #0
   1269c:	bne	12684 <__assert_fail@plt+0xa5c>
   126a0:	mov	r0, #1
   126a4:	bl	117fc <_exit@plt>
   126a8:	ldr	r5, [r4, #12]
   126ac:	mov	r0, r5
   126b0:	bl	119dc <strlen@plt>
   126b4:	mov	r2, r0
   126b8:	mov	r1, r5
   126bc:	mov	r0, r6
   126c0:	bl	11a84 <write@plt>
   126c4:	mov	r2, r7
   126c8:	mov	r1, r8
   126cc:	mov	r0, r6
   126d0:	bl	11a84 <write@plt>
   126d4:	b	12694 <__assert_fail@plt+0xa6c>
   126d8:	mov	r2, #5
   126dc:	ldr	r1, [pc, #124]	; 12760 <__assert_fail@plt+0xb38>
   126e0:	mov	r0, r6
   126e4:	bl	11a84 <write@plt>
   126e8:	b	12724 <__assert_fail@plt+0xafc>
   126ec:	ldr	r4, [r4, #220]	; 0xdc
   126f0:	cmp	r4, #0
   126f4:	beq	12624 <__assert_fail@plt+0x9fc>
   126f8:	ldr	r5, [r4, #64]	; 0x40
   126fc:	sub	r3, r5, #1
   12700:	cmp	r3, #1
   12704:	bhi	126ec <__assert_fail@plt+0xac4>
   12708:	ldr	r1, [r4, #12]
   1270c:	add	r0, sp, #4
   12710:	bl	118c8 <strcasecmp@plt>
   12714:	cmp	r0, #0
   12718:	bne	126ec <__assert_fail@plt+0xac4>
   1271c:	cmp	r5, #2
   12720:	beq	126d8 <__assert_fail@plt+0xab0>
   12724:	mov	r1, r4
   12728:	mov	r0, r6
   1272c:	bl	122a0 <__assert_fail@plt+0x678>
   12730:	add	sp, sp, #264	; 0x108
   12734:	pop	{r4, r5, r6, r7, r8, pc}
   12738:	andeq	r2, r0, r1, lsl #8
   1273c:	andeq	r0, r0, r1, lsl #2
   12740:			; <UNDEFINED> instruction: 0x0002d3bc
   12744:	andeq	fp, r1, r4, lsr r8
   12748:	andeq	sp, r2, ip, lsl #12
   1274c:	andeq	fp, r1, r8, asr #16
   12750:	strdeq	fp, [r1], -r8
   12754:	andeq	fp, r1, r8, lsl r8
   12758:			; <UNDEFINED> instruction: 0x0002d3b0
   1275c:	andeq	fp, r1, ip, lsr r8
   12760:	andeq	fp, r1, r0, asr #16
   12764:	push	{r4, lr}
   12768:	ldr	r3, [pc, #36]	; 12794 <__assert_fail@plt+0xb6c>
   1276c:	cmp	r0, #0
   12770:	moveq	r0, r3
   12774:	bl	11874 <strdup@plt>
   12778:	cmp	r0, #0
   1277c:	popne	{r4, pc}
   12780:	ldr	r1, [pc, #16]	; 12798 <__assert_fail@plt+0xb70>
   12784:	mov	r0, #3
   12788:	bl	11b14 <syslog@plt>
   1278c:	mvn	r0, #0
   12790:	bl	119c4 <exit@plt>
   12794:	andeq	fp, r1, r0, ror #16
   12798:	andeq	fp, r1, r4, ror #16
   1279c:	push	{r4, r5, r6, lr}
   127a0:	mov	r5, r0
   127a4:	mov	r4, r1
   127a8:	mov	r0, r1
   127ac:	bl	170a4 <argp_parse@@Base+0x122c>
   127b0:	subs	r6, r0, #0
   127b4:	beq	127d0 <__assert_fail@plt+0xba8>
   127b8:	mov	r2, r4
   127bc:	ldr	r1, [r5]
   127c0:	mov	r0, r6
   127c4:	bl	11808 <memcpy@plt>
   127c8:	str	r6, [r5]
   127cc:	pop	{r4, r5, r6, pc}
   127d0:	ldr	r1, [pc, #12]	; 127e4 <__assert_fail@plt+0xbbc>
   127d4:	mov	r0, #3
   127d8:	bl	11b14 <syslog@plt>
   127dc:	mvn	r0, #0
   127e0:	bl	119c4 <exit@plt>
   127e4:	andeq	fp, r1, r0, ror r8
   127e8:	ldr	r3, [r0]
   127ec:	cmp	r3, #0
   127f0:	bxeq	lr
   127f4:	push	{r4, lr}
   127f8:	mov	r4, r0
   127fc:	mov	r0, r3
   12800:	bl	119dc <strlen@plt>
   12804:	add	r1, r0, #1
   12808:	mov	r0, r4
   1280c:	bl	1279c <__assert_fail@plt+0xb74>
   12810:	pop	{r4, pc}
   12814:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12818:	sub	sp, sp, #40	; 0x28
   1281c:	mov	r4, r0
   12820:	ldr	r3, [pc, #160]	; 128c8 <__assert_fail@plt+0xca0>
   12824:	ldr	r0, [r3]
   12828:	ldr	r2, [r1]
   1282c:	ldr	r3, [r1, #4]
   12830:	ldr	lr, [r1, #64]	; 0x40
   12834:	sub	ip, lr, #1
   12838:	cmp	ip, #1
   1283c:	bls	128b4 <__assert_fail@plt+0xc8c>
   12840:	ldr	ip, [r1, #8]
   12844:	ldr	lr, [pc, #128]	; 128cc <__assert_fail@plt+0xca4>
   12848:	cmp	ip, #0
   1284c:	moveq	ip, lr
   12850:	ldr	r5, [r1, #12]
   12854:	ldr	r6, [r1, #20]
   12858:	ldr	r7, [r1, #24]
   1285c:	ldr	r8, [r1, #28]
   12860:	ldr	r9, [r1, #36]	; 0x24
   12864:	ldr	sl, [r1, #40]	; 0x28
   12868:	ldr	lr, [r1, #44]	; 0x2c
   1286c:	cmp	lr, #0
   12870:	ldrne	lr, [lr]
   12874:	ldreq	lr, [pc, #84]	; 128d0 <__assert_fail@plt+0xca8>
   12878:	ldr	r1, [r1, #48]	; 0x30
   1287c:	str	r1, [sp, #36]	; 0x24
   12880:	str	lr, [sp, #32]
   12884:	str	sl, [sp, #28]
   12888:	str	r9, [sp, #24]
   1288c:	str	r8, [sp, #20]
   12890:	str	r7, [sp, #16]
   12894:	str	r6, [sp, #12]
   12898:	str	r5, [sp, #8]
   1289c:	str	ip, [sp, #4]
   128a0:	str	r4, [sp]
   128a4:	ldr	r1, [pc, #40]	; 128d4 <__assert_fail@plt+0xcac>
   128a8:	bl	11a0c <fprintf@plt>
   128ac:	add	sp, sp, #40	; 0x28
   128b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128b4:	ldr	ip, [pc, #28]	; 128d8 <__assert_fail@plt+0xcb0>
   128b8:	ldr	r5, [pc, #28]	; 128dc <__assert_fail@plt+0xcb4>
   128bc:	cmp	lr, #2
   128c0:	moveq	ip, r5
   128c4:	b	12850 <__assert_fail@plt+0xc28>
   128c8:			; <UNDEFINED> instruction: 0x0002d3b0
   128cc:	andeq	fp, r1, ip, ror r8
   128d0:	andeq	fp, r1, ip, lsl #17
   128d4:	muleq	r1, r0, r8
   128d8:	andeq	fp, r1, ip, lsl #25
   128dc:	andeq	fp, r1, r0, lsl #17
   128e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   128e4:	sub	sp, sp, #16
   128e8:	mov	r4, r0
   128ec:	mov	r3, #1
   128f0:	str	r3, [sp, #12]
   128f4:	mov	r5, #0
   128f8:	ldr	r6, [pc, #776]	; 12c08 <__assert_fail@plt+0xfe0>
   128fc:	ldr	r8, [pc, #776]	; 12c0c <__assert_fail@plt+0xfe4>
   12900:	ldr	r7, [pc, #776]	; 12c10 <__assert_fail@plt+0xfe8>
   12904:	ldr	r9, [pc, #776]	; 12c14 <__assert_fail@plt+0xfec>
   12908:	ldr	sl, [pc, #776]	; 12c18 <__assert_fail@plt+0xff0>
   1290c:	b	12a54 <__assert_fail@plt+0xe2c>
   12910:	bl	11a24 <__errno_location@plt>
   12914:	ldr	r0, [r0]
   12918:	cmp	r0, #97	; 0x61
   1291c:	bne	12940 <__assert_fail@plt+0xd18>
   12920:	ldrh	r3, [r4, #68]	; 0x44
   12924:	cmp	r3, #10
   12928:	bne	12940 <__assert_fail@plt+0xd18>
   1292c:	ldrb	r3, [r4, #70]	; 0x46
   12930:	cmp	r3, #0
   12934:	movne	r3, #2
   12938:	strhne	r3, [r4, #68]	; 0x44
   1293c:	bne	12a54 <__assert_fail@plt+0xe2c>
   12940:	ldr	r3, [pc, #724]	; 12c1c <__assert_fail@plt+0xff4>
   12944:	ldrb	r3, [r3]
   12948:	cmp	r3, #0
   1294c:	bne	1296c <__assert_fail@plt+0xd44>
   12950:	ldr	r3, [r4, #20]
   12954:	ldr	r2, [r4, #12]
   12958:	ldr	r1, [pc, #704]	; 12c20 <__assert_fail@plt+0xff8>
   1295c:	mov	r0, #3
   12960:	bl	11b14 <syslog@plt>
   12964:	mov	r0, #1
   12968:	b	12b50 <__assert_fail@plt+0xf28>
   1296c:	ldr	r3, [pc, #688]	; 12c24 <__assert_fail@plt+0xffc>
   12970:	ldr	r5, [r3]
   12974:	ldr	r6, [r4, #12]
   12978:	ldr	r7, [r4, #20]
   1297c:	bl	1197c <strerror@plt>
   12980:	str	r0, [sp]
   12984:	mov	r3, r7
   12988:	mov	r2, r6
   1298c:	ldr	r1, [pc, #660]	; 12c28 <__assert_fail@plt+0x1000>
   12990:	mov	r0, r5
   12994:	bl	11a0c <fprintf@plt>
   12998:	b	12950 <__assert_fail@plt+0xd28>
   1299c:	ldrb	r2, [r4, #70]	; 0x46
   129a0:	clz	r2, r2
   129a4:	lsr	r2, r2, #5
   129a8:	add	r3, sp, #16
   129ac:	str	r2, [r3, #-8]!
   129b0:	mov	r2, #4
   129b4:	str	r2, [sp]
   129b8:	mov	r2, #26
   129bc:	mov	r1, #41	; 0x29
   129c0:	bl	1176c <setsockopt@plt>
   129c4:	cmp	r0, #0
   129c8:	bge	12a7c <__assert_fail@plt+0xe54>
   129cc:	mov	r1, sl
   129d0:	mov	r0, #3
   129d4:	bl	11b14 <syslog@plt>
   129d8:	b	12a7c <__assert_fail@plt+0xe54>
   129dc:	mov	r3, #4
   129e0:	str	r3, [sp]
   129e4:	add	r3, sp, #12
   129e8:	mov	r2, #2
   129ec:	mov	r1, #1
   129f0:	ldr	r0, [r4, #60]	; 0x3c
   129f4:	bl	1176c <setsockopt@plt>
   129f8:	cmp	r0, #0
   129fc:	blt	12ae4 <__assert_fail@plt+0xebc>
   12a00:	ldr	r2, [r4, #200]	; 0xc8
   12a04:	add	r1, r4, #72	; 0x48
   12a08:	ldr	r0, [r4, #60]	; 0x3c
   12a0c:	bl	11a48 <bind@plt>
   12a10:	cmp	r0, #0
   12a14:	bge	12c00 <__assert_fail@plt+0xfd8>
   12a18:	bl	11a24 <__errno_location@plt>
   12a1c:	ldr	r0, [r0]
   12a20:	bic	r3, r0, #2
   12a24:	cmp	r3, #97	; 0x61
   12a28:	bne	12af4 <__assert_fail@plt+0xecc>
   12a2c:	ldrh	r3, [r4, #68]	; 0x44
   12a30:	cmp	r3, #10
   12a34:	bne	12af4 <__assert_fail@plt+0xecc>
   12a38:	ldrb	r3, [r4, #70]	; 0x46
   12a3c:	cmp	r3, #0
   12a40:	beq	12af4 <__assert_fail@plt+0xecc>
   12a44:	mov	r3, #2
   12a48:	strh	r3, [r4, #68]	; 0x44
   12a4c:	ldr	r0, [r4, #60]	; 0x3c
   12a50:	bl	11bf8 <close@plt>
   12a54:	mov	r2, r5
   12a58:	ldr	r1, [r4, #16]
   12a5c:	ldrh	r0, [r4, #68]	; 0x44
   12a60:	bl	11bb0 <socket@plt>
   12a64:	str	r0, [r4, #60]	; 0x3c
   12a68:	cmp	r0, #0
   12a6c:	blt	12910 <__assert_fail@plt+0xce8>
   12a70:	ldrh	r3, [r4, #68]	; 0x44
   12a74:	cmp	r3, #10
   12a78:	beq	1299c <__assert_fail@plt+0xd74>
   12a7c:	mov	r2, #3
   12a80:	mov	r1, r6
   12a84:	ldr	r0, [r4, #20]
   12a88:	bl	11bd4 <strncmp@plt>
   12a8c:	cmp	r0, #0
   12a90:	bne	129dc <__assert_fail@plt+0xdb4>
   12a94:	ldr	r3, [r7]
   12a98:	tst	r3, #1
   12a9c:	beq	129dc <__assert_fail@plt+0xdb4>
   12aa0:	mov	r3, #4
   12aa4:	str	r3, [sp]
   12aa8:	add	r3, sp, #12
   12aac:	mov	r2, #1
   12ab0:	mov	r1, r2
   12ab4:	ldr	r0, [r4, #60]	; 0x3c
   12ab8:	bl	1176c <setsockopt@plt>
   12abc:	cmp	r0, #0
   12ac0:	bge	129dc <__assert_fail@plt+0xdb4>
   12ac4:	bl	11a24 <__errno_location@plt>
   12ac8:	ldr	r3, [r0]
   12acc:	cmp	r3, #13
   12ad0:	beq	129dc <__assert_fail@plt+0xdb4>
   12ad4:	mov	r1, r9
   12ad8:	mov	r0, #3
   12adc:	bl	11b14 <syslog@plt>
   12ae0:	b	129dc <__assert_fail@plt+0xdb4>
   12ae4:	mov	r1, r8
   12ae8:	mov	r0, #3
   12aec:	bl	11b14 <syslog@plt>
   12af0:	b	12a00 <__assert_fail@plt+0xdd8>
   12af4:	ldr	r5, [r4, #8]
   12af8:	cmp	r5, #0
   12afc:	beq	12b8c <__assert_fail@plt+0xf64>
   12b00:	ldr	r3, [pc, #276]	; 12c1c <__assert_fail@plt+0xff4>
   12b04:	ldrb	r3, [r3]
   12b08:	cmp	r3, #0
   12b0c:	bne	12b58 <__assert_fail@plt+0xf30>
   12b10:	ldr	r3, [r4, #20]
   12b14:	str	r3, [sp]
   12b18:	ldr	r3, [r4, #12]
   12b1c:	ldr	r2, [r4, #8]
   12b20:	ldr	r1, [pc, #260]	; 12c2c <__assert_fail@plt+0x1004>
   12b24:	mov	r0, #3
   12b28:	bl	11b14 <syslog@plt>
   12b2c:	ldr	r0, [r4, #60]	; 0x3c
   12b30:	bl	11bf8 <close@plt>
   12b34:	mvn	r3, #0
   12b38:	str	r3, [r4, #60]	; 0x3c
   12b3c:	ldr	r3, [pc, #236]	; 12c30 <__assert_fail@plt+0x1008>
   12b40:	ldr	r3, [r3]
   12b44:	cmp	r3, #0
   12b48:	movne	r0, #1
   12b4c:	beq	12be4 <__assert_fail@plt+0xfbc>
   12b50:	add	sp, sp, #16
   12b54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b58:	ldr	r3, [pc, #196]	; 12c24 <__assert_fail@plt+0xffc>
   12b5c:	ldr	r6, [r3]
   12b60:	ldr	r7, [r4, #12]
   12b64:	ldr	r8, [r4, #20]
   12b68:	bl	1197c <strerror@plt>
   12b6c:	str	r0, [sp, #4]
   12b70:	str	r8, [sp]
   12b74:	mov	r3, r7
   12b78:	mov	r2, r5
   12b7c:	ldr	r1, [pc, #176]	; 12c34 <__assert_fail@plt+0x100c>
   12b80:	mov	r0, r6
   12b84:	bl	11a0c <fprintf@plt>
   12b88:	b	12b10 <__assert_fail@plt+0xee8>
   12b8c:	ldr	r3, [pc, #136]	; 12c1c <__assert_fail@plt+0xff4>
   12b90:	ldrb	r3, [r3]
   12b94:	cmp	r3, #0
   12b98:	bne	12bb4 <__assert_fail@plt+0xf8c>
   12b9c:	ldr	r3, [r4, #20]
   12ba0:	ldr	r2, [r4, #12]
   12ba4:	ldr	r1, [pc, #140]	; 12c38 <__assert_fail@plt+0x1010>
   12ba8:	mov	r0, #3
   12bac:	bl	11b14 <syslog@plt>
   12bb0:	b	12b2c <__assert_fail@plt+0xf04>
   12bb4:	ldr	r3, [pc, #104]	; 12c24 <__assert_fail@plt+0xffc>
   12bb8:	ldr	r5, [r3]
   12bbc:	ldr	r6, [r4, #12]
   12bc0:	ldr	r7, [r4, #20]
   12bc4:	bl	1197c <strerror@plt>
   12bc8:	str	r0, [sp]
   12bcc:	mov	r3, r7
   12bd0:	mov	r2, r6
   12bd4:	ldr	r1, [pc, #96]	; 12c3c <__assert_fail@plt+0x1014>
   12bd8:	mov	r0, r5
   12bdc:	bl	11a0c <fprintf@plt>
   12be0:	b	12b9c <__assert_fail@plt+0xf74>
   12be4:	mov	r4, #1
   12be8:	ldr	r3, [pc, #64]	; 12c30 <__assert_fail@plt+0x1008>
   12bec:	str	r4, [r3]
   12bf0:	mov	r0, #600	; 0x258
   12bf4:	bl	11880 <alarm@plt>
   12bf8:	mov	r0, r4
   12bfc:	b	12b50 <__assert_fail@plt+0xf28>
   12c00:	mov	r0, #0
   12c04:	b	12b50 <__assert_fail@plt+0xf28>
   12c08:	andeq	fp, r1, r4, lsr r9
   12c0c:	andeq	fp, r1, r4, asr r9
   12c10:	strdeq	sp, [r2], -r0
   12c14:	andeq	fp, r1, r8, lsr r9
   12c18:	andeq	fp, r1, r4, lsl r9
   12c1c:			; <UNDEFINED> instruction: 0x0002d3bc
   12c20:	andeq	fp, r1, r0, lsl #18
   12c24:			; <UNDEFINED> instruction: 0x0002d3b0
   12c28:	andeq	fp, r1, r4, ror #17
   12c2c:	muleq	r1, r4, r9
   12c30:	andeq	sp, r2, r0, lsl #12
   12c34:	andeq	fp, r1, r4, ror r9
   12c38:	andeq	fp, r1, r4, asr #19
   12c3c:	andeq	fp, r1, r8, lsr #19
   12c40:	push	{r4, lr}
   12c44:	mov	r2, #0
   12c48:	ldr	r3, [pc, #76]	; 12c9c <__assert_fail@plt+0x1074>
   12c4c:	str	r2, [r3]
   12c50:	ldr	r3, [pc, #72]	; 12ca0 <__assert_fail@plt+0x1078>
   12c54:	ldr	r4, [r3]
   12c58:	cmp	r4, r2
   12c5c:	bne	12c70 <__assert_fail@plt+0x1048>
   12c60:	pop	{r4, pc}
   12c64:	ldr	r4, [r4, #220]	; 0xdc
   12c68:	cmp	r4, #0
   12c6c:	beq	12c98 <__assert_fail@plt+0x1070>
   12c70:	ldr	r3, [r4, #60]	; 0x3c
   12c74:	cmn	r3, #1
   12c78:	bne	12c64 <__assert_fail@plt+0x103c>
   12c7c:	ldr	r3, [r4, #64]	; 0x40
   12c80:	sub	r3, r3, #1
   12c84:	cmp	r3, #1
   12c88:	bls	12c64 <__assert_fail@plt+0x103c>
   12c8c:	mov	r0, r4
   12c90:	bl	128e0 <__assert_fail@plt+0xcb8>
   12c94:	b	12c64 <__assert_fail@plt+0x103c>
   12c98:	pop	{r4, pc}
   12c9c:	andeq	sp, r2, r0, lsl #12
   12ca0:	andeq	sp, r2, ip, lsl #12
   12ca4:	mov	r3, #1
   12ca8:	strh	r3, [r0, #32]
   12cac:	ldr	r3, [r0, #60]	; 0x3c
   12cb0:	cmn	r3, #1
   12cb4:	bxne	lr
   12cb8:	push	{r4, lr}
   12cbc:	mov	r4, r0
   12cc0:	bl	128e0 <__assert_fail@plt+0xcb8>
   12cc4:	cmp	r0, #0
   12cc8:	popne	{r4, pc}
   12ccc:	ldr	r3, [r4, #16]
   12cd0:	cmp	r3, #1
   12cd4:	beq	12d64 <__assert_fail@plt+0x113c>
   12cd8:	ldr	r3, [r4, #60]	; 0x3c
   12cdc:	add	r2, r3, #31
   12ce0:	cmp	r3, #0
   12ce4:	movge	r2, r3
   12ce8:	asr	r2, r2, #5
   12cec:	ldr	r0, [pc, #128]	; 12d74 <__assert_fail@plt+0x114c>
   12cf0:	asr	r1, r3, #31
   12cf4:	lsr	r1, r1, #27
   12cf8:	add	r3, r3, r1
   12cfc:	and	r3, r3, #31
   12d00:	sub	r3, r3, r1
   12d04:	ldr	r1, [r0, r2, lsl #2]
   12d08:	mov	ip, #1
   12d0c:	orr	r3, r1, ip, lsl r3
   12d10:	str	r3, [r0, r2, lsl #2]
   12d14:	ldr	r2, [pc, #92]	; 12d78 <__assert_fail@plt+0x1150>
   12d18:	ldr	r3, [r2]
   12d1c:	add	r3, r3, ip
   12d20:	str	r3, [r2]
   12d24:	ldr	r3, [r4, #60]	; 0x3c
   12d28:	ldr	r2, [pc, #76]	; 12d7c <__assert_fail@plt+0x1154>
   12d2c:	ldr	r2, [r2]
   12d30:	cmp	r3, r2
   12d34:	ldrgt	r2, [pc, #64]	; 12d7c <__assert_fail@plt+0x1154>
   12d38:	strgt	r3, [r2]
   12d3c:	ldr	r2, [pc, #60]	; 12d80 <__assert_fail@plt+0x1158>
   12d40:	ldrb	r2, [r2]
   12d44:	cmp	r2, #0
   12d48:	popeq	{r4, pc}
   12d4c:	ldr	r2, [r4, #48]	; 0x30
   12d50:	ldr	r1, [pc, #44]	; 12d84 <__assert_fail@plt+0x115c>
   12d54:	ldr	r0, [pc, #44]	; 12d88 <__assert_fail@plt+0x1160>
   12d58:	ldr	r0, [r0]
   12d5c:	bl	11a0c <fprintf@plt>
   12d60:	pop	{r4, pc}
   12d64:	mov	r1, #10
   12d68:	ldr	r0, [r4, #60]	; 0x3c
   12d6c:	bl	11af0 <listen@plt>
   12d70:	b	12cd8 <__assert_fail@plt+0x10b0>
   12d74:	andeq	sp, r2, r8, ror #10
   12d78:	andeq	sp, r2, ip, ror #11
   12d7c:	andeq	sp, r2, r4, ror #10
   12d80:			; <UNDEFINED> instruction: 0x0002d3bc
   12d84:	ldrdeq	fp, [r1], -r4
   12d88:			; <UNDEFINED> instruction: 0x0002d3b0
   12d8c:	push	{r4, lr}
   12d90:	mov	r4, r0
   12d94:	ldr	r3, [r0, #60]	; 0x3c
   12d98:	cmp	r3, #0
   12d9c:	blt	12df8 <__assert_fail@plt+0x11d0>
   12da0:	ldr	r1, [pc, #108]	; 12e14 <__assert_fail@plt+0x11ec>
   12da4:	ldr	r2, [r1]
   12da8:	sub	r2, r2, #1
   12dac:	str	r2, [r1]
   12db0:	add	r2, r3, #31
   12db4:	cmp	r3, #0
   12db8:	movge	r2, r3
   12dbc:	asr	r2, r2, #5
   12dc0:	ldr	r0, [pc, #80]	; 12e18 <__assert_fail@plt+0x11f0>
   12dc4:	asr	r1, r3, #31
   12dc8:	lsr	r1, r1, #27
   12dcc:	add	r3, r3, r1
   12dd0:	and	r3, r3, #31
   12dd4:	sub	r3, r3, r1
   12dd8:	ldr	r1, [r0, r2, lsl #2]
   12ddc:	mov	ip, #1
   12de0:	bic	r3, r1, ip, lsl r3
   12de4:	str	r3, [r0, r2, lsl #2]
   12de8:	ldr	r0, [r4, #60]	; 0x3c
   12dec:	bl	11bf8 <close@plt>
   12df0:	mvn	r3, #0
   12df4:	str	r3, [r4, #60]	; 0x3c
   12df8:	mov	r3, #0
   12dfc:	str	r3, [r4, #208]	; 0xd0
   12e00:	ldr	r3, [r4, #24]
   12e04:	cmp	r3, #1
   12e08:	movgt	r3, #1
   12e0c:	strgt	r3, [r4, #24]
   12e10:	pop	{r4, pc}
   12e14:	andeq	sp, r2, ip, ror #11
   12e18:	andeq	sp, r2, r8, ror #10
   12e1c:	push	{r4, r5, r6, r7, lr}
   12e20:	sub	sp, sp, #132	; 0x84
   12e24:	mov	r5, r0
   12e28:	ldr	r3, [pc, #604]	; 1308c <__assert_fail@plt+0x1464>
   12e2c:	ldr	r4, [r3]
   12e30:	cmp	r4, #0
   12e34:	beq	12fa0 <__assert_fail@plt+0x1378>
   12e38:	add	r7, r0, #72	; 0x48
   12e3c:	mov	r6, #128	; 0x80
   12e40:	b	12e50 <__assert_fail@plt+0x1228>
   12e44:	ldr	r4, [r4, #220]	; 0xdc
   12e48:	cmp	r4, #0
   12e4c:	beq	12fa0 <__assert_fail@plt+0x1378>
   12e50:	mov	r2, r6
   12e54:	mov	r1, r7
   12e58:	add	r0, r4, #72	; 0x48
   12e5c:	bl	11838 <memcmp@plt>
   12e60:	cmp	r0, #0
   12e64:	bne	12e44 <__assert_fail@plt+0x121c>
   12e68:	ldr	r1, [r5, #12]
   12e6c:	ldr	r0, [r4, #12]
   12e70:	bl	11754 <strcmp@plt>
   12e74:	cmp	r0, #0
   12e78:	bne	12e44 <__assert_fail@plt+0x121c>
   12e7c:	ldr	r1, [r5, #20]
   12e80:	ldr	r0, [r4, #20]
   12e84:	bl	11754 <strcmp@plt>
   12e88:	cmp	r0, #0
   12e8c:	bne	12e44 <__assert_fail@plt+0x121c>
   12e90:	ldr	r2, [r4, #64]	; 0x40
   12e94:	sub	r2, r2, #1
   12e98:	ldr	r3, [r5, #64]	; 0x40
   12e9c:	sub	r3, r3, #1
   12ea0:	cmp	r2, #1
   12ea4:	movls	r2, #0
   12ea8:	movhi	r2, #1
   12eac:	cmp	r3, #1
   12eb0:	movhi	r3, #0
   12eb4:	movls	r3, #1
   12eb8:	cmp	r2, r3
   12ebc:	beq	12e44 <__assert_fail@plt+0x121c>
   12ec0:	cmp	r4, #0
   12ec4:	beq	12fa0 <__assert_fail@plt+0x1378>
   12ec8:	mov	r0, sp
   12ecc:	bl	12210 <__assert_fail@plt+0x5e8>
   12ed0:	ldr	r3, [r5, #44]	; 0x2c
   12ed4:	cmp	r3, #0
   12ed8:	beq	12f6c <__assert_fail@plt+0x1344>
   12edc:	ldr	r3, [r5, #36]	; 0x24
   12ee0:	cmp	r3, #0
   12ee4:	ldrne	r2, [r4, #36]	; 0x24
   12ee8:	strne	r3, [r4, #36]	; 0x24
   12eec:	strne	r2, [r5, #36]	; 0x24
   12ef0:	ldr	r3, [r5, #40]	; 0x28
   12ef4:	cmp	r3, #0
   12ef8:	ldrne	r2, [r4, #40]	; 0x28
   12efc:	strne	r3, [r4, #40]	; 0x28
   12f00:	strne	r2, [r5, #40]	; 0x28
   12f04:	ldr	r3, [r5, #48]	; 0x30
   12f08:	cmp	r3, #0
   12f0c:	ldrne	r2, [r4, #48]	; 0x30
   12f10:	strne	r3, [r4, #48]	; 0x30
   12f14:	strne	r2, [r5, #48]	; 0x30
   12f18:	ldr	r1, [r4, #52]	; 0x34
   12f1c:	ldr	r0, [r4, #56]	; 0x38
   12f20:	bl	1559c <__assert_fail@plt+0x3974>
   12f24:	ldr	r3, [r5, #56]	; 0x38
   12f28:	str	r3, [r4, #56]	; 0x38
   12f2c:	ldr	r3, [r5, #52]	; 0x34
   12f30:	str	r3, [r4, #52]	; 0x34
   12f34:	mov	r3, #0
   12f38:	str	r3, [r5, #56]	; 0x38
   12f3c:	str	r3, [r5, #52]	; 0x34
   12f40:	mov	r3, #1
   12f44:	strh	r3, [r4, #32]
   12f48:	mov	r0, sp
   12f4c:	bl	12260 <__assert_fail@plt+0x638>
   12f50:	ldr	r3, [pc, #312]	; 13090 <__assert_fail@plt+0x1468>
   12f54:	ldrb	r3, [r3]
   12f58:	cmp	r3, #0
   12f5c:	bne	12f90 <__assert_fail@plt+0x1368>
   12f60:	mov	r0, r4
   12f64:	add	sp, sp, #132	; 0x84
   12f68:	pop	{r4, r5, r6, r7, pc}
   12f6c:	ldr	r3, [r4, #24]
   12f70:	cmp	r3, #1
   12f74:	beq	12f84 <__assert_fail@plt+0x135c>
   12f78:	ldr	r3, [r5, #24]
   12f7c:	cmp	r3, #0
   12f80:	bne	12edc <__assert_fail@plt+0x12b4>
   12f84:	ldr	r3, [r5, #24]
   12f88:	str	r3, [r4, #24]
   12f8c:	b	12edc <__assert_fail@plt+0x12b4>
   12f90:	mov	r1, r4
   12f94:	ldr	r0, [pc, #248]	; 13094 <__assert_fail@plt+0x146c>
   12f98:	bl	12814 <__assert_fail@plt+0xbec>
   12f9c:	b	12f60 <__assert_fail@plt+0x1338>
   12fa0:	ldr	r3, [pc, #232]	; 13090 <__assert_fail@plt+0x1468>
   12fa4:	ldrb	r3, [r3]
   12fa8:	cmp	r3, #0
   12fac:	bne	13068 <__assert_fail@plt+0x1440>
   12fb0:	mov	r0, #224	; 0xe0
   12fb4:	bl	170a4 <argp_parse@@Base+0x122c>
   12fb8:	subs	r4, r0, #0
   12fbc:	beq	13078 <__assert_fail@plt+0x1450>
   12fc0:	mov	r2, #224	; 0xe0
   12fc4:	mov	r1, r5
   12fc8:	mov	r0, r4
   12fcc:	bl	11808 <memcpy@plt>
   12fd0:	add	r0, r4, #8
   12fd4:	bl	127e8 <__assert_fail@plt+0xbc0>
   12fd8:	add	r0, r4, #12
   12fdc:	bl	127e8 <__assert_fail@plt+0xbc0>
   12fe0:	add	r0, r4, #20
   12fe4:	bl	127e8 <__assert_fail@plt+0xbc0>
   12fe8:	add	r0, r4, #36	; 0x24
   12fec:	bl	127e8 <__assert_fail@plt+0xbc0>
   12ff0:	add	r0, r4, #40	; 0x28
   12ff4:	bl	127e8 <__assert_fail@plt+0xbc0>
   12ff8:	add	r0, r4, #48	; 0x30
   12ffc:	bl	127e8 <__assert_fail@plt+0xbc0>
   13000:	ldr	r1, [r4, #56]	; 0x38
   13004:	lsl	r1, r1, #2
   13008:	add	r0, r4, #52	; 0x34
   1300c:	bl	1279c <__assert_fail@plt+0xb74>
   13010:	ldr	r3, [r4, #56]	; 0x38
   13014:	cmp	r3, #0
   13018:	beq	1303c <__assert_fail@plt+0x1414>
   1301c:	mov	r5, #0
   13020:	ldr	r0, [r4, #52]	; 0x34
   13024:	add	r0, r0, r5, lsl #2
   13028:	bl	127e8 <__assert_fail@plt+0xbc0>
   1302c:	add	r5, r5, #1
   13030:	ldr	r3, [r4, #56]	; 0x38
   13034:	cmp	r3, r5
   13038:	bhi	13020 <__assert_fail@plt+0x13f8>
   1303c:	mvn	r3, #0
   13040:	str	r3, [r4, #60]	; 0x3c
   13044:	mov	r0, sp
   13048:	bl	12210 <__assert_fail@plt+0x5e8>
   1304c:	ldr	r3, [pc, #56]	; 1308c <__assert_fail@plt+0x1464>
   13050:	ldr	r2, [r3]
   13054:	str	r2, [r4, #220]	; 0xdc
   13058:	str	r4, [r3]
   1305c:	mov	r0, sp
   13060:	bl	12260 <__assert_fail@plt+0x638>
   13064:	b	12f60 <__assert_fail@plt+0x1338>
   13068:	mov	r1, r5
   1306c:	ldr	r0, [pc, #36]	; 13098 <__assert_fail@plt+0x1470>
   13070:	bl	12814 <__assert_fail@plt+0xbec>
   13074:	b	12fb0 <__assert_fail@plt+0x1388>
   13078:	ldr	r1, [pc, #28]	; 1309c <__assert_fail@plt+0x1474>
   1307c:	mov	r0, #3
   13080:	bl	11b14 <syslog@plt>
   13084:	mvn	r0, #0
   13088:	bl	119c4 <exit@plt>
   1308c:	andeq	sp, r2, ip, lsl #12
   13090:			; <UNDEFINED> instruction: 0x0002d3bc
   13094:	andeq	fp, r1, ip, ror #19
   13098:	strdeq	fp, [r1], -r4
   1309c:	andeq	fp, r1, r0, lsl ip
   130a0:	push	{r4, r5, r6, r7, r8, lr}
   130a4:	sub	sp, sp, #32
   130a8:	mov	r4, r0
   130ac:	mov	r6, r1
   130b0:	mov	r7, r2
   130b4:	ldr	r5, [r0, #8]
   130b8:	cmp	r5, #0
   130bc:	beq	13154 <__assert_fail@plt+0x152c>
   130c0:	ldr	r1, [pc, #328]	; 13210 <__assert_fail@plt+0x15e8>
   130c4:	mov	r0, r5
   130c8:	bl	11c1c <strspn@plt>
   130cc:	mov	r8, r0
   130d0:	mov	r0, r5
   130d4:	bl	119dc <strlen@plt>
   130d8:	cmp	r8, r0
   130dc:	beq	1319c <__assert_fail@plt+0x1574>
   130e0:	mov	r1, #58	; 0x3a
   130e4:	mov	r0, r5
   130e8:	bl	119f4 <strchr@plt>
   130ec:	cmp	r0, #0
   130f0:	beq	13108 <__assert_fail@plt+0x14e0>
   130f4:	ldr	r1, [pc, #280]	; 13214 <__assert_fail@plt+0x15ec>
   130f8:	mov	r0, r5
   130fc:	bl	11c1c <strspn@plt>
   13100:	cmp	r0, #0
   13104:	bne	1319c <__assert_fail@plt+0x1574>
   13108:	ldr	r3, [pc, #264]	; 13218 <__assert_fail@plt+0x15f0>
   1310c:	ldrb	r3, [r3]
   13110:	cmp	r3, #0
   13114:	beq	1312c <__assert_fail@plt+0x1504>
   13118:	mov	r2, r5
   1311c:	ldr	r1, [pc, #248]	; 1321c <__assert_fail@plt+0x15f4>
   13120:	ldr	r3, [pc, #248]	; 13220 <__assert_fail@plt+0x15f8>
   13124:	ldr	r0, [r3]
   13128:	bl	11a0c <fprintf@plt>
   1312c:	mov	r2, #32
   13130:	mov	r1, #0
   13134:	mov	r0, sp
   13138:	bl	11a54 <memset@plt>
   1313c:	mov	r3, #1
   13140:	str	r3, [sp]
   13144:	ldrb	r3, [r4, #70]	; 0x46
   13148:	cmp	r3, #0
   1314c:	beq	131cc <__assert_fail@plt+0x15a4>
   13150:	b	13178 <__assert_fail@plt+0x1550>
   13154:	mov	r2, #32
   13158:	mov	r1, #0
   1315c:	mov	r0, sp
   13160:	bl	11a54 <memset@plt>
   13164:	mov	r3, #1
   13168:	str	r3, [sp]
   1316c:	ldrb	r3, [r4, #70]	; 0x46
   13170:	cmp	r3, #0
   13174:	beq	131cc <__assert_fail@plt+0x15a4>
   13178:	ldrh	r3, [r4, #68]	; 0x44
   1317c:	cmp	r3, #2
   13180:	movne	r2, #0
   13184:	beq	131cc <__assert_fail@plt+0x15a4>
   13188:	mov	r3, #9
   1318c:	str	r3, [sp]
   13190:	cmp	r2, #0
   13194:	bne	131c0 <__assert_fail@plt+0x1598>
   13198:	b	131cc <__assert_fail@plt+0x15a4>
   1319c:	mov	r2, #32
   131a0:	mov	r1, #0
   131a4:	mov	r0, sp
   131a8:	bl	11a54 <memset@plt>
   131ac:	mov	r3, #1
   131b0:	str	r3, [sp]
   131b4:	ldrb	r3, [r4, #70]	; 0x46
   131b8:	cmp	r3, #0
   131bc:	bne	131fc <__assert_fail@plt+0x15d4>
   131c0:	ldr	r3, [sp]
   131c4:	orr	r3, r3, #4
   131c8:	str	r3, [sp]
   131cc:	ldrh	r3, [r4, #68]	; 0x44
   131d0:	str	r3, [sp, #4]
   131d4:	ldr	r3, [r4, #16]
   131d8:	str	r3, [sp, #8]
   131dc:	str	r6, [sp, #12]
   131e0:	mov	r3, r7
   131e4:	mov	r2, sp
   131e8:	ldr	r1, [r4, #12]
   131ec:	ldr	r0, [r4, #8]
   131f0:	bl	11ba4 <getaddrinfo@plt>
   131f4:	add	sp, sp, #32
   131f8:	pop	{r4, r5, r6, r7, r8, pc}
   131fc:	ldrh	r3, [r4, #68]	; 0x44
   13200:	cmp	r3, #2
   13204:	movne	r2, #1
   13208:	bne	13188 <__assert_fail@plt+0x1560>
   1320c:	b	131c0 <__assert_fail@plt+0x1598>
   13210:	strdeq	fp, [r1], -ip
   13214:	andeq	fp, r1, r8, lsl #20
   13218:			; <UNDEFINED> instruction: 0x0002d3bc
   1321c:	andeq	fp, r1, r4, lsr #20
   13220:			; <UNDEFINED> instruction: 0x0002d3b0
   13224:	push	{r4, r5, r6, r7, r8, r9, lr}
   13228:	sub	sp, sp, #20
   1322c:	mov	r5, r0
   13230:	ldr	r4, [r0, #20]
   13234:	mov	r2, #3
   13238:	ldr	r1, [pc, #520]	; 13448 <__assert_fail@plt+0x1820>
   1323c:	mov	r0, r4
   13240:	bl	11bd4 <strncmp@plt>
   13244:	cmp	r0, #0
   13248:	beq	13308 <__assert_fail@plt+0x16e0>
   1324c:	mov	r2, #3
   13250:	ldr	r1, [pc, #500]	; 1344c <__assert_fail@plt+0x1824>
   13254:	mov	r0, r4
   13258:	bl	11bd4 <strncmp@plt>
   1325c:	cmp	r0, #0
   13260:	ldreq	r0, [pc, #484]	; 1344c <__assert_fail@plt+0x1824>
   13264:	movne	r0, r4
   13268:	bl	117a8 <getprotobyname@plt>
   1326c:	mov	r4, r0
   13270:	cmp	r4, #0
   13274:	beq	13318 <__assert_fail@plt+0x16f0>
   13278:	add	r2, sp, #12
   1327c:	ldr	r1, [r4, #8]
   13280:	mov	r0, r5
   13284:	bl	130a0 <__assert_fail@plt+0x1478>
   13288:	mov	r9, r0
   1328c:	cmn	r0, #9
   13290:	beq	13330 <__assert_fail@plt+0x1708>
   13294:	cmp	r9, #0
   13298:	bne	133b8 <__assert_fail@plt+0x1790>
   1329c:	ldr	r4, [sp, #12]
   132a0:	cmp	r4, #0
   132a4:	beq	132f4 <__assert_fail@plt+0x16cc>
   132a8:	add	r6, r5, #72	; 0x48
   132ac:	mov	r8, #128	; 0x80
   132b0:	mov	r7, #0
   132b4:	mov	r2, r8
   132b8:	mov	r1, r7
   132bc:	mov	r0, r6
   132c0:	bl	11a54 <memset@plt>
   132c4:	ldr	r2, [r4, #16]
   132c8:	ldr	r1, [r4, #20]
   132cc:	mov	r0, r6
   132d0:	bl	11808 <memcpy@plt>
   132d4:	ldr	r3, [r4, #16]
   132d8:	str	r3, [r5, #200]	; 0xc8
   132dc:	mov	r0, r5
   132e0:	bl	12e1c <__assert_fail@plt+0x11f4>
   132e4:	bl	12ca4 <__assert_fail@plt+0x107c>
   132e8:	ldr	r4, [r4, #28]
   132ec:	cmp	r4, #0
   132f0:	bne	132b4 <__assert_fail@plt+0x168c>
   132f4:	ldr	r0, [sp, #12]
   132f8:	bl	11b98 <freeaddrinfo@plt>
   132fc:	mov	r0, r9
   13300:	add	sp, sp, #20
   13304:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13308:	ldr	r0, [pc, #312]	; 13448 <__assert_fail@plt+0x1820>
   1330c:	bl	117a8 <getprotobyname@plt>
   13310:	mov	r4, r0
   13314:	b	13270 <__assert_fail@plt+0x1648>
   13318:	ldr	r2, [r5, #20]
   1331c:	ldr	r1, [pc, #300]	; 13450 <__assert_fail@plt+0x1828>
   13320:	mov	r0, #3
   13324:	bl	11b14 <syslog@plt>
   13328:	mov	r9, #1
   1332c:	b	132fc <__assert_fail@plt+0x16d4>
   13330:	ldrh	r3, [r5, #68]	; 0x44
   13334:	cmp	r3, #10
   13338:	beq	1338c <__assert_fail@plt+0x1764>
   1333c:	mov	r0, r9
   13340:	bl	117e4 <gai_strerror@plt>
   13344:	mov	r4, r0
   13348:	ldr	r2, [r5, #8]
   1334c:	cmp	r2, #0
   13350:	beq	133f8 <__assert_fail@plt+0x17d0>
   13354:	ldr	r3, [pc, #248]	; 13454 <__assert_fail@plt+0x182c>
   13358:	ldrb	r3, [r3]
   1335c:	cmp	r3, #0
   13360:	bne	133d4 <__assert_fail@plt+0x17ac>
   13364:	ldr	r3, [r5, #12]
   13368:	ldr	r2, [r5, #8]
   1336c:	str	r4, [sp, #4]
   13370:	ldr	r1, [r5, #20]
   13374:	str	r1, [sp]
   13378:	ldr	r1, [pc, #216]	; 13458 <__assert_fail@plt+0x1830>
   1337c:	mov	r0, #3
   13380:	bl	11b14 <syslog@plt>
   13384:	mov	r9, #1
   13388:	b	132fc <__assert_fail@plt+0x16d4>
   1338c:	ldrb	r3, [r5, #70]	; 0x46
   13390:	cmp	r3, #0
   13394:	beq	1333c <__assert_fail@plt+0x1714>
   13398:	mov	r3, #2
   1339c:	strh	r3, [r5, #68]	; 0x44
   133a0:	add	r2, sp, #12
   133a4:	ldr	r1, [r4, #8]
   133a8:	mov	r0, r5
   133ac:	bl	130a0 <__assert_fail@plt+0x1478>
   133b0:	mov	r9, r0
   133b4:	b	13294 <__assert_fail@plt+0x166c>
   133b8:	cmn	r9, #11
   133bc:	bne	1333c <__assert_fail@plt+0x1714>
   133c0:	bl	11a24 <__errno_location@plt>
   133c4:	ldr	r0, [r0]
   133c8:	bl	1197c <strerror@plt>
   133cc:	mov	r4, r0
   133d0:	b	13348 <__assert_fail@plt+0x1720>
   133d4:	ldr	r3, [pc, #128]	; 1345c <__assert_fail@plt+0x1834>
   133d8:	ldr	r0, [r3]
   133dc:	str	r4, [sp, #4]
   133e0:	ldr	r3, [r5, #20]
   133e4:	str	r3, [sp]
   133e8:	ldr	r3, [r5, #12]
   133ec:	ldr	r1, [pc, #108]	; 13460 <__assert_fail@plt+0x1838>
   133f0:	bl	11a0c <fprintf@plt>
   133f4:	b	13364 <__assert_fail@plt+0x173c>
   133f8:	ldr	r3, [pc, #84]	; 13454 <__assert_fail@plt+0x182c>
   133fc:	ldrb	r3, [r3]
   13400:	cmp	r3, #0
   13404:	bne	13428 <__assert_fail@plt+0x1800>
   13408:	ldr	r3, [r5, #20]
   1340c:	ldr	r2, [r5, #12]
   13410:	str	r4, [sp]
   13414:	ldr	r1, [pc, #72]	; 13464 <__assert_fail@plt+0x183c>
   13418:	mov	r0, #3
   1341c:	bl	11b14 <syslog@plt>
   13420:	mov	r9, #1
   13424:	b	132fc <__assert_fail@plt+0x16d4>
   13428:	ldr	r3, [pc, #44]	; 1345c <__assert_fail@plt+0x1834>
   1342c:	ldr	r0, [r3]
   13430:	str	r4, [sp]
   13434:	ldr	r3, [r5, #20]
   13438:	ldr	r2, [r5, #12]
   1343c:	ldr	r1, [pc, #36]	; 13468 <__assert_fail@plt+0x1840>
   13440:	bl	11a0c <fprintf@plt>
   13444:	b	13408 <__assert_fail@plt+0x17e0>
   13448:	andeq	fp, r1, r4, lsr r9
   1344c:	andeq	fp, r1, ip, lsr sl
   13450:	andeq	fp, r1, r0, asr #20
   13454:			; <UNDEFINED> instruction: 0x0002d3bc
   13458:	andeq	fp, r1, ip, ror sl
   1345c:			; <UNDEFINED> instruction: 0x0002d3b0
   13460:	andeq	fp, r1, r8, asr sl
   13464:			; <UNDEFINED> instruction: 0x0001bab8
   13468:	muleq	r1, r8, sl
   1346c:	push	{r4, lr}
   13470:	ldr	r1, [pc, #4]	; 1347c <__assert_fail@plt+0x1854>
   13474:	bl	11b74 <fopen64@plt>
   13478:	pop	{r4, pc}
   1347c:	andeq	ip, r1, r0, lsr #21
   13480:	cmp	r0, #0
   13484:	bxeq	lr
   13488:	push	{r4, lr}
   1348c:	bl	11a9c <fclose@plt>
   13490:	pop	{r4, pc}
   13494:	push	{r4, lr}
   13498:	mov	r4, r0
   1349c:	ldr	r0, [r0, #8]
   134a0:	bl	16a6c <argp_parse@@Base+0xbf4>
   134a4:	ldr	r0, [r4, #12]
   134a8:	bl	16a6c <argp_parse@@Base+0xbf4>
   134ac:	ldr	r0, [r4, #20]
   134b0:	bl	16a6c <argp_parse@@Base+0xbf4>
   134b4:	ldr	r0, [r4, #36]	; 0x24
   134b8:	bl	16a6c <argp_parse@@Base+0xbf4>
   134bc:	ldr	r0, [r4, #40]	; 0x28
   134c0:	bl	16a6c <argp_parse@@Base+0xbf4>
   134c4:	ldr	r0, [r4, #48]	; 0x30
   134c8:	bl	16a6c <argp_parse@@Base+0xbf4>
   134cc:	ldr	r1, [r4, #52]	; 0x34
   134d0:	ldr	r0, [r4, #56]	; 0x38
   134d4:	bl	1559c <__assert_fail@plt+0x3974>
   134d8:	pop	{r4, pc}
   134dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   134e0:	mov	r6, r0
   134e4:	ldr	r3, [pc, #172]	; 13598 <__assert_fail@plt+0x1970>
   134e8:	ldr	r3, [r3]
   134ec:	cmp	r3, #0
   134f0:	beq	13564 <__assert_fail@plt+0x193c>
   134f4:	ldr	r2, [pc, #160]	; 1359c <__assert_fail@plt+0x1974>
   134f8:	ldr	r0, [r2]
   134fc:	ldr	r1, [pc, #156]	; 135a0 <__assert_fail@plt+0x1978>
   13500:	add	r0, r3, r0
   13504:	bl	11778 <strcspn@plt>
   13508:	mov	r4, r0
   1350c:	add	r0, r0, #1
   13510:	bl	170a4 <argp_parse@@Base+0x122c>
   13514:	mov	r5, r0
   13518:	str	r0, [r6, #8]
   1351c:	cmp	r0, #0
   13520:	beq	1356c <__assert_fail@plt+0x1944>
   13524:	ldr	r3, [pc, #108]	; 13598 <__assert_fail@plt+0x1970>
   13528:	ldr	r7, [r3]
   1352c:	ldr	r8, [pc, #104]	; 1359c <__assert_fail@plt+0x1974>
   13530:	ldr	r9, [r8]
   13534:	mov	r2, r4
   13538:	add	r1, r7, r9
   1353c:	bl	11808 <memcpy@plt>
   13540:	mov	r3, #0
   13544:	strb	r3, [r5, r4]
   13548:	add	r4, r4, r9
   1354c:	str	r4, [r8]
   13550:	ldrb	r3, [r7, r4]
   13554:	cmp	r3, #0
   13558:	beq	13580 <__assert_fail@plt+0x1958>
   1355c:	add	r4, r4, #1
   13560:	str	r4, [r8]
   13564:	mov	r0, r6
   13568:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1356c:	ldr	r1, [pc, #48]	; 135a4 <__assert_fail@plt+0x197c>
   13570:	mov	r0, #3
   13574:	bl	11b14 <syslog@plt>
   13578:	mvn	r0, #0
   1357c:	bl	119c4 <exit@plt>
   13580:	mov	r0, r7
   13584:	bl	16a6c <argp_parse@@Base+0xbf4>
   13588:	mov	r2, #0
   1358c:	ldr	r3, [pc, #4]	; 13598 <__assert_fail@plt+0x1970>
   13590:	str	r2, [r3]
   13594:	b	13564 <__assert_fail@plt+0x193c>
   13598:	andeq	sp, r2, r4, lsl #12
   1359c:	strdeq	sp, [r2], -ip
   135a0:	ldrdeq	fp, [r1], -r0
   135a4:	ldrdeq	fp, [r1], -r4
   135a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   135ac:	sub	sp, sp, #36	; 0x24
   135b0:	str	r1, [sp, #12]
   135b4:	mov	r3, #0
   135b8:	str	r3, [sp, #28]
   135bc:	str	r3, [sp, #24]
   135c0:	ldr	r3, [pc, #1668]	; 13c4c <__assert_fail@plt+0x2024>
   135c4:	ldr	r3, [r3]
   135c8:	cmp	r3, #0
   135cc:	beq	135e0 <__assert_fail@plt+0x19b8>
   135d0:	ldr	r0, [pc, #1656]	; 13c50 <__assert_fail@plt+0x2028>
   135d4:	bl	134dc <__assert_fail@plt+0x18b4>
   135d8:	add	sp, sp, #36	; 0x24
   135dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   135e0:	mov	r5, r0
   135e4:	mov	r6, r2
   135e8:	mov	r2, #224	; 0xe0
   135ec:	mov	r1, #0
   135f0:	ldr	r0, [pc, #1624]	; 13c50 <__assert_fail@plt+0x2028>
   135f4:	bl	11a54 <memset@plt>
   135f8:	ldr	r4, [pc, #1620]	; 13c54 <__assert_fail@plt+0x202c>
   135fc:	add	fp, r4, #4
   13600:	mov	sl, #0
   13604:	add	r9, r4, #228	; 0xe4
   13608:	add	r8, r4, #232	; 0xe8
   1360c:	ldr	r1, [sp, #24]
   13610:	ldr	r0, [sp, #28]
   13614:	bl	1559c <__assert_fail@plt+0x3974>
   13618:	mov	r0, fp
   1361c:	bl	13494 <__assert_fail@plt+0x186c>
   13620:	mov	r2, #224	; 0xe0
   13624:	mov	r1, sl
   13628:	mov	r0, fp
   1362c:	bl	11a54 <memset@plt>
   13630:	mov	r7, #10
   13634:	b	1364c <__assert_fail@plt+0x1a24>
   13638:	ldr	r0, [r4, #232]	; 0xe8
   1363c:	ldrb	r3, [r0]
   13640:	cmp	r3, #0
   13644:	cmpne	r3, #35	; 0x23
   13648:	bne	13690 <__assert_fail@plt+0x1a68>
   1364c:	mov	r3, r5
   13650:	mov	r2, r7
   13654:	mov	r1, r9
   13658:	mov	r0, r8
   1365c:	bl	1173c <__getdelim@plt>
   13660:	cmp	r0, #0
   13664:	blt	13c44 <__assert_fail@plt+0x201c>
   13668:	beq	13638 <__assert_fail@plt+0x1a10>
   1366c:	sub	r0, r0, #1
   13670:	ldr	r3, [r4, #232]	; 0xe8
   13674:	ldrb	r2, [r3, r0]
   13678:	cmp	r2, #10
   1367c:	strbeq	sl, [r3, r0]
   13680:	ldr	r3, [r6]
   13684:	add	r3, r3, #1
   13688:	str	r3, [r6]
   1368c:	b	13638 <__assert_fail@plt+0x1a10>
   13690:	add	r3, sp, #24
   13694:	add	r2, sp, #28
   13698:	ldr	r1, [pc, #1464]	; 13c58 <__assert_fail@plt+0x2030>
   1369c:	bl	153a0 <__assert_fail@plt+0x3778>
   136a0:	cmp	r0, #0
   136a4:	bne	1360c <__assert_fail@plt+0x19e4>
   136a8:	ldr	r3, [sp, #28]
   136ac:	cmp	r3, #5
   136b0:	bgt	13738 <__assert_fail@plt+0x1b10>
   136b4:	cmp	r3, #1
   136b8:	beq	136d4 <__assert_fail@plt+0x1aac>
   136bc:	ldr	r3, [r6]
   136c0:	ldr	r2, [sp, #12]
   136c4:	ldr	r1, [pc, #1424]	; 13c5c <__assert_fail@plt+0x2034>
   136c8:	mov	r0, #3
   136cc:	bl	11b14 <syslog@plt>
   136d0:	b	13600 <__assert_fail@plt+0x19d8>
   136d4:	ldr	r3, [sp, #24]
   136d8:	ldr	r7, [r3]
   136dc:	mov	r0, r7
   136e0:	bl	119dc <strlen@plt>
   136e4:	sub	r0, r0, #1
   136e8:	ldrb	r3, [r7, r0]
   136ec:	cmp	r3, #58	; 0x3a
   136f0:	bne	136bc <__assert_fail@plt+0x1a94>
   136f4:	mov	r3, #0
   136f8:	strb	r3, [r7, r0]
   136fc:	ldr	r3, [pc, #1372]	; 13c60 <__assert_fail@plt+0x2038>
   13700:	ldr	r0, [r3]
   13704:	bl	16a6c <argp_parse@@Base+0xbf4>
   13708:	ldr	r3, [sp, #24]
   1370c:	ldr	r7, [r3]
   13710:	ldr	r1, [pc, #1356]	; 13c64 <__assert_fail@plt+0x203c>
   13714:	mov	r0, r7
   13718:	bl	11754 <strcmp@plt>
   1371c:	cmp	r0, #0
   13720:	beq	13600 <__assert_fail@plt+0x19d8>
   13724:	mov	r0, r7
   13728:	bl	12764 <__assert_fail@plt+0xb3c>
   1372c:	ldr	r3, [pc, #1324]	; 13c60 <__assert_fail@plt+0x2038>
   13730:	str	r0, [r3]
   13734:	b	13600 <__assert_fail@plt+0x19d8>
   13738:	ldr	r3, [sp, #12]
   1373c:	str	r3, [r4, #4]
   13740:	ldr	r3, [r6]
   13744:	str	r3, [r4, #8]
   13748:	ldr	r3, [sp, #24]
   1374c:	ldr	r8, [r3]
   13750:	mov	r1, #58	; 0x3a
   13754:	mov	r0, r8
   13758:	bl	11ae4 <strrchr@plt>
   1375c:	cmp	r0, #0
   13760:	beq	13a74 <__assert_fail@plt+0x1e4c>
   13764:	add	r7, r0, #1
   13768:	mov	r3, #0
   1376c:	strb	r3, [r0]
   13770:	ldr	r1, [pc, #1260]	; 13c64 <__assert_fail@plt+0x203c>
   13774:	mov	r0, r8
   13778:	bl	11754 <strcmp@plt>
   1377c:	cmp	r0, #0
   13780:	bne	13aa8 <__assert_fail@plt+0x1e80>
   13784:	mov	r2, #7
   13788:	ldr	r1, [pc, #1240]	; 13c68 <__assert_fail@plt+0x2040>
   1378c:	mov	r0, r7
   13790:	bl	11bd4 <strncmp@plt>
   13794:	cmp	r0, #0
   13798:	bne	13ac8 <__assert_fail@plt+0x1ea0>
   1379c:	ldrb	r3, [r7, #7]
   137a0:	cmp	r3, #43	; 0x2b
   137a4:	moveq	r3, #2
   137a8:	streq	r3, [r4, #68]	; 0x44
   137ac:	addeq	r0, r7, #8
   137b0:	addne	r0, r7, #7
   137b4:	movne	r3, #1
   137b8:	strne	r3, [r4, #68]	; 0x44
   137bc:	bl	12764 <__assert_fail@plt+0xb3c>
   137c0:	str	r0, [r4, #16]
   137c4:	ldr	r3, [sp, #24]
   137c8:	ldr	r7, [r3, #4]
   137cc:	ldr	r1, [pc, #1176]	; 13c6c <__assert_fail@plt+0x2044>
   137d0:	mov	r0, r7
   137d4:	bl	11754 <strcmp@plt>
   137d8:	cmp	r0, #0
   137dc:	moveq	r3, #1
   137e0:	streq	r3, [r4, #20]
   137e4:	beq	13858 <__assert_fail@plt+0x1c30>
   137e8:	ldr	r1, [pc, #1152]	; 13c70 <__assert_fail@plt+0x2048>
   137ec:	mov	r0, r7
   137f0:	bl	11754 <strcmp@plt>
   137f4:	cmp	r0, #0
   137f8:	moveq	r3, #2
   137fc:	streq	r3, [r4, #20]
   13800:	beq	13858 <__assert_fail@plt+0x1c30>
   13804:	ldr	r1, [pc, #1128]	; 13c74 <__assert_fail@plt+0x204c>
   13808:	mov	r0, r7
   1380c:	bl	11754 <strcmp@plt>
   13810:	cmp	r0, #0
   13814:	moveq	r3, #4
   13818:	streq	r3, [r4, #20]
   1381c:	beq	13858 <__assert_fail@plt+0x1c30>
   13820:	ldr	r1, [pc, #1104]	; 13c78 <__assert_fail@plt+0x2050>
   13824:	mov	r0, r7
   13828:	bl	11754 <strcmp@plt>
   1382c:	cmp	r0, #0
   13830:	moveq	r3, #5
   13834:	streq	r3, [r4, #20]
   13838:	beq	13858 <__assert_fail@plt+0x1c30>
   1383c:	ldr	r1, [pc, #1080]	; 13c7c <__assert_fail@plt+0x2054>
   13840:	mov	r0, r7
   13844:	bl	11754 <strcmp@plt>
   13848:	cmp	r0, #0
   1384c:	bne	13ae0 <__assert_fail@plt+0x1eb8>
   13850:	mov	r3, #3
   13854:	str	r3, [r4, #20]
   13858:	ldr	r3, [sp, #24]
   1385c:	ldr	r0, [r3, #8]
   13860:	bl	12764 <__assert_fail@plt+0xb3c>
   13864:	mov	r7, r0
   13868:	str	r0, [r4, #24]
   1386c:	mov	r3, #2
   13870:	strh	r3, [r4, #72]	; 0x48
   13874:	mov	r3, #1
   13878:	strb	r3, [r4, #74]	; 0x4a
   1387c:	mov	r2, #3
   13880:	ldr	r1, [pc, #1016]	; 13c80 <__assert_fail@plt+0x2058>
   13884:	bl	11bd4 <strncmp@plt>
   13888:	cmp	r0, #0
   1388c:	beq	138a8 <__assert_fail@plt+0x1c80>
   13890:	mov	r2, #3
   13894:	ldr	r1, [pc, #1000]	; 13c84 <__assert_fail@plt+0x205c>
   13898:	mov	r0, r7
   1389c:	bl	11bd4 <strncmp@plt>
   138a0:	cmp	r0, #0
   138a4:	bne	138c0 <__assert_fail@plt+0x1c98>
   138a8:	ldrb	r3, [r7, #3]
   138ac:	cmp	r3, #54	; 0x36
   138b0:	moveq	r3, #10
   138b4:	strheq	r3, [r4, #72]	; 0x48
   138b8:	moveq	r3, #0
   138bc:	strbeq	r3, [r4, #74]	; 0x4a
   138c0:	mov	r1, #46	; 0x2e
   138c4:	ldr	r3, [sp, #24]
   138c8:	ldr	r0, [r3, #12]
   138cc:	bl	119f4 <strchr@plt>
   138d0:	cmp	r0, #0
   138d4:	addne	r7, r0, #1
   138d8:	movne	r3, #0
   138dc:	strbne	r3, [r0]
   138e0:	moveq	r7, r0
   138e4:	ldr	r3, [sp, #24]
   138e8:	ldr	r8, [r3, #12]
   138ec:	ldr	r1, [pc, #916]	; 13c88 <__assert_fail@plt+0x2060>
   138f0:	mov	r0, r8
   138f4:	bl	11754 <strcmp@plt>
   138f8:	cmp	r0, #0
   138fc:	moveq	r3, #1
   13900:	streq	r3, [r4, #28]
   13904:	beq	13924 <__assert_fail@plt+0x1cfc>
   13908:	ldr	r1, [pc, #892]	; 13c8c <__assert_fail@plt+0x2064>
   1390c:	mov	r0, r8
   13910:	bl	11754 <strcmp@plt>
   13914:	cmp	r0, #0
   13918:	bne	13b00 <__assert_fail@plt+0x1ed8>
   1391c:	mov	r3, #0
   13920:	str	r3, [r4, #28]
   13924:	cmp	r7, #0
   13928:	beq	13950 <__assert_fail@plt+0x1d28>
   1392c:	mov	r2, #10
   13930:	add	r1, sp, #20
   13934:	mov	r0, r7
   13938:	bl	119d0 <strtoul@plt>
   1393c:	str	r0, [r4, #32]
   13940:	ldr	r3, [sp, #20]
   13944:	ldrb	r3, [r3]
   13948:	cmp	r3, #0
   1394c:	bne	13b18 <__assert_fail@plt+0x1ef0>
   13950:	ldr	r3, [r4, #68]	; 0x44
   13954:	sub	r3, r3, #1
   13958:	cmp	r3, #1
   1395c:	bls	13b34 <__assert_fail@plt+0x1f0c>
   13960:	ldr	r3, [sp, #24]
   13964:	ldr	r0, [r3, #16]
   13968:	bl	12764 <__assert_fail@plt+0xb3c>
   1396c:	mov	r7, r0
   13970:	str	r0, [r4, #40]	; 0x28
   13974:	mov	r1, #58	; 0x3a
   13978:	bl	119f4 <strchr@plt>
   1397c:	cmp	r0, #0
   13980:	beq	13ba0 <__assert_fail@plt+0x1f78>
   13984:	mov	r3, #0
   13988:	strb	r3, [r0], #1
   1398c:	bl	12764 <__assert_fail@plt+0xb3c>
   13990:	str	r0, [r4, #44]	; 0x2c
   13994:	ldr	r3, [sp, #24]
   13998:	ldr	r0, [r3, #20]
   1399c:	bl	12764 <__assert_fail@plt+0xb3c>
   139a0:	str	r0, [r4, #52]	; 0x34
   139a4:	ldr	r1, [pc, #740]	; 13c90 <__assert_fail@plt+0x2068>
   139a8:	bl	11754 <strcmp@plt>
   139ac:	cmp	r0, #0
   139b0:	bne	13be4 <__assert_fail@plt+0x1fbc>
   139b4:	mov	r0, fp
   139b8:	bl	1214c <__assert_fail@plt+0x524>
   139bc:	str	r0, [r4, #48]	; 0x30
   139c0:	cmp	r0, #0
   139c4:	beq	13bc4 <__assert_fail@plt+0x1f9c>
   139c8:	ldrsh	r2, [r0, #10]
   139cc:	ldr	r3, [pc, #640]	; 13c54 <__assert_fail@plt+0x202c>
   139d0:	str	r2, [r3, #28]
   139d4:	ldr	r0, [sp, #28]
   139d8:	sub	r3, r0, #5
   139dc:	ldr	r4, [pc, #624]	; 13c54 <__assert_fail@plt+0x202c>
   139e0:	str	r3, [r4, #60]	; 0x3c
   139e4:	mov	r1, #4
   139e8:	sub	r0, r0, #4
   139ec:	bl	17054 <argp_parse@@Base+0x11dc>
   139f0:	str	r0, [r4, #56]	; 0x38
   139f4:	cmp	r0, #0
   139f8:	beq	13bf4 <__assert_fail@plt+0x1fcc>
   139fc:	ldr	r4, [r4, #60]	; 0x3c
   13a00:	cmp	r4, #0
   13a04:	beq	13a4c <__assert_fail@plt+0x1e24>
   13a08:	mov	r3, #24
   13a0c:	mov	r4, #0
   13a10:	ldr	r1, [pc, #572]	; 13c54 <__assert_fail@plt+0x202c>
   13a14:	mov	ip, r4
   13a18:	ldr	r2, [sp, #24]
   13a1c:	ldr	r0, [r2, r3]
   13a20:	ldr	r2, [r1, #56]	; 0x38
   13a24:	str	r0, [r2, r4, lsl #2]
   13a28:	ldr	r2, [sp, #24]
   13a2c:	str	ip, [r2, r3]
   13a30:	add	r4, r4, #1
   13a34:	ldr	r2, [r1, #60]	; 0x3c
   13a38:	add	r3, r3, #4
   13a3c:	cmp	r2, r4
   13a40:	bhi	13a18 <__assert_fail@plt+0x1df0>
   13a44:	cmp	r2, #1
   13a48:	beq	13c10 <__assert_fail@plt+0x1fe8>
   13a4c:	ldr	r5, [pc, #512]	; 13c54 <__assert_fail@plt+0x202c>
   13a50:	ldr	r3, [r5, #56]	; 0x38
   13a54:	mov	r2, #0
   13a58:	str	r2, [r3, r4, lsl #2]
   13a5c:	ldr	r1, [sp, #24]
   13a60:	ldr	r0, [sp, #28]
   13a64:	bl	1559c <__assert_fail@plt+0x3974>
   13a68:	add	r0, r5, #4
   13a6c:	bl	134dc <__assert_fail@plt+0x18b4>
   13a70:	b	135d8 <__assert_fail@plt+0x19b0>
   13a74:	ldr	r3, [pc, #484]	; 13c60 <__assert_fail@plt+0x2038>
   13a78:	ldr	r0, [r3]
   13a7c:	cmp	r0, #0
   13a80:	beq	13a9c <__assert_fail@plt+0x1e74>
   13a84:	bl	12764 <__assert_fail@plt+0xb3c>
   13a88:	ldr	r3, [pc, #444]	; 13c4c <__assert_fail@plt+0x2024>
   13a8c:	str	r0, [r3]
   13a90:	mov	r2, #0
   13a94:	ldr	r3, [pc, #504]	; 13c94 <__assert_fail@plt+0x206c>
   13a98:	str	r2, [r3]
   13a9c:	ldr	r3, [sp, #24]
   13aa0:	ldr	r7, [r3]
   13aa4:	b	13784 <__assert_fail@plt+0x1b5c>
   13aa8:	mov	r0, r8
   13aac:	bl	12764 <__assert_fail@plt+0xb3c>
   13ab0:	ldr	r3, [pc, #404]	; 13c4c <__assert_fail@plt+0x2024>
   13ab4:	str	r0, [r3]
   13ab8:	mov	r2, #0
   13abc:	ldr	r3, [pc, #464]	; 13c94 <__assert_fail@plt+0x206c>
   13ac0:	str	r2, [r3]
   13ac4:	b	13784 <__assert_fail@plt+0x1b5c>
   13ac8:	mov	r0, r7
   13acc:	bl	12764 <__assert_fail@plt+0xb3c>
   13ad0:	str	r0, [r4, #16]
   13ad4:	mov	r3, #0
   13ad8:	str	r3, [r4, #68]	; 0x44
   13adc:	b	137c4 <__assert_fail@plt+0x1b9c>
   13ae0:	ldr	r3, [r6]
   13ae4:	ldr	r2, [sp, #12]
   13ae8:	ldr	r1, [pc, #424]	; 13c98 <__assert_fail@plt+0x2070>
   13aec:	mov	r0, #4
   13af0:	bl	11b14 <syslog@plt>
   13af4:	mvn	r3, #0
   13af8:	str	r3, [r4, #20]
   13afc:	b	13858 <__assert_fail@plt+0x1c30>
   13b00:	ldr	r3, [r6]
   13b04:	ldr	r2, [sp, #12]
   13b08:	ldr	r1, [pc, #396]	; 13c9c <__assert_fail@plt+0x2074>
   13b0c:	mov	r0, #4
   13b10:	bl	11b14 <syslog@plt>
   13b14:	b	13924 <__assert_fail@plt+0x1cfc>
   13b18:	str	r7, [sp]
   13b1c:	ldr	r3, [r6]
   13b20:	ldr	r2, [sp, #12]
   13b24:	ldr	r1, [pc, #372]	; 13ca0 <__assert_fail@plt+0x2078>
   13b28:	mov	r0, #4
   13b2c:	bl	11b14 <syslog@plt>
   13b30:	b	13950 <__assert_fail@plt+0x1d28>
   13b34:	mov	r3, #0
   13b38:	str	r3, [r4, #28]
   13b3c:	mov	r2, #3
   13b40:	ldr	r1, [pc, #312]	; 13c80 <__assert_fail@plt+0x2058>
   13b44:	ldr	r0, [r4, #24]
   13b48:	bl	11bd4 <strncmp@plt>
   13b4c:	cmp	r0, #0
   13b50:	bne	13b80 <__assert_fail@plt+0x1f58>
   13b54:	ldr	r3, [r4, #20]
   13b58:	cmp	r3, #1
   13b5c:	beq	13960 <__assert_fail@plt+0x1d38>
   13b60:	ldr	r3, [r4, #16]
   13b64:	str	r3, [sp]
   13b68:	ldr	r3, [r6]
   13b6c:	ldr	r2, [sp, #12]
   13b70:	ldr	r1, [pc, #300]	; 13ca4 <__assert_fail@plt+0x207c>
   13b74:	mov	r0, #3
   13b78:	bl	11b14 <syslog@plt>
   13b7c:	b	13600 <__assert_fail@plt+0x19d8>
   13b80:	ldr	r3, [r4, #16]
   13b84:	str	r3, [sp]
   13b88:	ldr	r3, [r6]
   13b8c:	ldr	r2, [sp, #12]
   13b90:	ldr	r1, [pc, #272]	; 13ca8 <__assert_fail@plt+0x2080>
   13b94:	mov	r0, #3
   13b98:	bl	11b14 <syslog@plt>
   13b9c:	b	13600 <__assert_fail@plt+0x19d8>
   13ba0:	mov	r1, #46	; 0x2e
   13ba4:	mov	r0, r7
   13ba8:	bl	119f4 <strchr@plt>
   13bac:	cmp	r0, #0
   13bb0:	bne	13984 <__assert_fail@plt+0x1d5c>
   13bb4:	mov	r0, #0
   13bb8:	bl	12764 <__assert_fail@plt+0xb3c>
   13bbc:	str	r0, [r4, #44]	; 0x2c
   13bc0:	b	13994 <__assert_fail@plt+0x1d6c>
   13bc4:	ldr	r3, [r4, #16]
   13bc8:	str	r3, [sp]
   13bcc:	ldr	r3, [r6]
   13bd0:	ldr	r2, [sp, #12]
   13bd4:	ldr	r1, [pc, #208]	; 13cac <__assert_fail@plt+0x2084>
   13bd8:	mov	r0, #3
   13bdc:	bl	11b14 <syslog@plt>
   13be0:	b	13600 <__assert_fail@plt+0x19d8>
   13be4:	mov	r2, #0
   13be8:	ldr	r3, [pc, #100]	; 13c54 <__assert_fail@plt+0x202c>
   13bec:	str	r2, [r3, #48]	; 0x30
   13bf0:	b	139d4 <__assert_fail@plt+0x1dac>
   13bf4:	ldr	r3, [r6]
   13bf8:	ldr	r2, [sp, #12]
   13bfc:	ldr	r1, [pc, #172]	; 13cb0 <__assert_fail@plt+0x2088>
   13c00:	mov	r0, #3
   13c04:	bl	11b14 <syslog@plt>
   13c08:	mvn	r0, #0
   13c0c:	bl	119c4 <exit@plt>
   13c10:	ldr	r3, [pc, #60]	; 13c54 <__assert_fail@plt+0x202c>
   13c14:	ldr	r5, [r3, #52]	; 0x34
   13c18:	mov	r1, #47	; 0x2f
   13c1c:	mov	r0, r5
   13c20:	bl	11ae4 <strrchr@plt>
   13c24:	cmp	r0, #0
   13c28:	addne	r0, r0, #1
   13c2c:	moveq	r0, r5
   13c30:	ldr	r3, [pc, #28]	; 13c54 <__assert_fail@plt+0x202c>
   13c34:	ldr	r5, [r3, #56]	; 0x38
   13c38:	bl	12764 <__assert_fail@plt+0xb3c>
   13c3c:	str	r0, [r5]
   13c40:	b	13a4c <__assert_fail@plt+0x1e24>
   13c44:	mov	r0, #0
   13c48:	b	135d8 <__assert_fail@plt+0x19b0>
   13c4c:	andeq	sp, r2, r4, lsl #12
   13c50:	andeq	sp, r2, r0, asr #7
   13c54:			; <UNDEFINED> instruction: 0x0002d3bc
   13c58:	andeq	fp, r1, r0, ror #16
   13c5c:	andeq	fp, r1, r0, ror #21
   13c60:	andeq	sp, r2, r0, lsl r6
   13c64:	andeq	fp, r1, ip, ror r8
   13c68:	muleq	r2, r4, r2
   13c6c:	strdeq	fp, [r1], -ip
   13c70:	andeq	fp, r1, r4, lsl #22
   13c74:	andeq	fp, r1, ip, lsl #22
   13c78:	andeq	fp, r1, r0, lsl fp
   13c7c:	andeq	fp, r1, ip, lsl fp
   13c80:	andeq	fp, r1, r4, lsr r9
   13c84:	andeq	fp, r1, ip, lsr sl
   13c88:	andeq	fp, r1, r8, lsr fp
   13c8c:	andeq	fp, r1, r0, asr #22
   13c90:	ldrdeq	fp, [r1], -r8
   13c94:	strdeq	sp, [r2], -ip
   13c98:	andeq	fp, r1, r0, lsr #22
   13c9c:	andeq	fp, r1, r8, asr #22
   13ca0:	andeq	fp, r1, r0, ror #22
   13ca4:	andeq	fp, r1, r8, lsr #23
   13ca8:	andeq	fp, r1, ip, ror fp
   13cac:	andeq	fp, r1, r4, ror #23
   13cb0:	andeq	fp, r1, r8, lsl #24
   13cb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13cb8:	sub	sp, sp, #148	; 0x94
   13cbc:	mov	r6, r0
   13cc0:	mov	r3, #0
   13cc4:	str	r3, [sp, #12]
   13cc8:	bl	1346c <__assert_fail@plt+0x1844>
   13ccc:	subs	r5, r0, #0
   13cd0:	beq	13cec <__assert_fail@plt+0x20c4>
   13cd4:	ldr	r7, [pc, #404]	; 13e70 <__assert_fail@plt+0x2248>
   13cd8:	mvn	r9, #0
   13cdc:	mov	r8, #1
   13ce0:	ldr	fp, [pc, #396]	; 13e74 <__assert_fail@plt+0x224c>
   13ce4:	ldr	sl, [pc, #396]	; 13e78 <__assert_fail@plt+0x2250>
   13ce8:	b	13d4c <__assert_fail@plt+0x2124>
   13cec:	mov	r2, r6
   13cf0:	ldr	r1, [pc, #388]	; 13e7c <__assert_fail@plt+0x2254>
   13cf4:	mov	r0, #3
   13cf8:	bl	11b14 <syslog@plt>
   13cfc:	b	13e68 <__assert_fail@plt+0x2240>
   13d00:	ldr	r3, [r4, #20]
   13d04:	ldr	r2, [r4, #12]
   13d08:	ldr	r1, [r4, #36]	; 0x24
   13d0c:	str	r1, [sp]
   13d10:	mov	r1, sl
   13d14:	mov	r0, #3
   13d18:	bl	11b14 <syslog@plt>
   13d1c:	b	13d4c <__assert_fail@plt+0x2124>
   13d20:	ldr	r3, [r4, #64]	; 0x40
   13d24:	sub	r3, r3, #1
   13d28:	cmp	r3, #1
   13d2c:	bls	13db8 <__assert_fail@plt+0x2190>
   13d30:	mov	r0, r4
   13d34:	bl	13224 <__assert_fail@plt+0x15fc>
   13d38:	ldr	r3, [r7]
   13d3c:	cmp	r3, #0
   13d40:	beq	13dcc <__assert_fail@plt+0x21a4>
   13d44:	ldr	r0, [r4, #8]
   13d48:	bl	16a6c <argp_parse@@Base+0xbf4>
   13d4c:	add	r2, sp, #12
   13d50:	mov	r1, r6
   13d54:	mov	r0, r5
   13d58:	bl	135a8 <__assert_fail@plt+0x1980>
   13d5c:	subs	r4, r0, #0
   13d60:	beq	13dd8 <__assert_fail@plt+0x21b0>
   13d64:	ldr	r0, [r4, #36]	; 0x24
   13d68:	bl	11748 <getpwnam@plt>
   13d6c:	cmp	r0, #0
   13d70:	beq	13d00 <__assert_fail@plt+0x20d8>
   13d74:	ldr	r0, [r4, #40]	; 0x28
   13d78:	cmp	r0, #0
   13d7c:	beq	13d20 <__assert_fail@plt+0x20f8>
   13d80:	ldrb	r3, [r0]
   13d84:	cmp	r3, #0
   13d88:	beq	13d20 <__assert_fail@plt+0x20f8>
   13d8c:	bl	11c10 <getgrnam@plt>
   13d90:	cmp	r0, #0
   13d94:	bne	13d20 <__assert_fail@plt+0x20f8>
   13d98:	ldr	r3, [r4, #20]
   13d9c:	ldr	r2, [r4, #12]
   13da0:	ldr	r1, [r4, #40]	; 0x28
   13da4:	str	r1, [sp]
   13da8:	mov	r1, fp
   13dac:	mov	r0, #3
   13db0:	bl	11b14 <syslog@plt>
   13db4:	b	13d4c <__assert_fail@plt+0x2124>
   13db8:	str	r9, [r4, #60]	; 0x3c
   13dbc:	strh	r8, [r4, #32]
   13dc0:	mov	r0, r4
   13dc4:	bl	12e1c <__assert_fail@plt+0x11f4>
   13dc8:	b	13d38 <__assert_fail@plt+0x2110>
   13dcc:	mov	r0, r4
   13dd0:	bl	13494 <__assert_fail@plt+0x186c>
   13dd4:	b	13d4c <__assert_fail@plt+0x2124>
   13dd8:	mov	r0, r5
   13ddc:	bl	13480 <__assert_fail@plt+0x1858>
   13de0:	add	r0, sp, #16
   13de4:	bl	12210 <__assert_fail@plt+0x5e8>
   13de8:	ldr	r5, [pc, #144]	; 13e80 <__assert_fail@plt+0x2258>
   13dec:	ldr	r6, [pc, #144]	; 13e84 <__assert_fail@plt+0x225c>
   13df0:	ldr	r7, [pc, #144]	; 13e88 <__assert_fail@plt+0x2260>
   13df4:	b	13e14 <__assert_fail@plt+0x21ec>
   13df8:	ldrb	r3, [r6]
   13dfc:	cmp	r3, #0
   13e00:	bne	13e50 <__assert_fail@plt+0x2228>
   13e04:	mov	r0, r4
   13e08:	bl	13494 <__assert_fail@plt+0x186c>
   13e0c:	mov	r0, r4
   13e10:	bl	16a6c <argp_parse@@Base+0xbf4>
   13e14:	ldr	r4, [r5]
   13e18:	cmp	r4, #0
   13e1c:	beq	13e60 <__assert_fail@plt+0x2238>
   13e20:	ldrsh	r3, [r4, #32]
   13e24:	cmp	r3, #0
   13e28:	addne	r5, r4, #220	; 0xdc
   13e2c:	bne	13e14 <__assert_fail@plt+0x21ec>
   13e30:	ldr	r3, [r4, #220]	; 0xdc
   13e34:	str	r3, [r5]
   13e38:	ldr	r3, [r4, #60]	; 0x3c
   13e3c:	cmp	r3, #0
   13e40:	blt	13df8 <__assert_fail@plt+0x21d0>
   13e44:	mov	r0, r4
   13e48:	bl	12d8c <__assert_fail@plt+0x1164>
   13e4c:	b	13df8 <__assert_fail@plt+0x21d0>
   13e50:	mov	r1, r4
   13e54:	mov	r0, r7
   13e58:	bl	12814 <__assert_fail@plt+0xbec>
   13e5c:	b	13e04 <__assert_fail@plt+0x21dc>
   13e60:	add	r0, sp, #16
   13e64:	bl	12260 <__assert_fail@plt+0x638>
   13e68:	add	sp, sp, #148	; 0x94
   13e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e70:	andeq	sp, r2, r4, lsl #12
   13e74:	andeq	fp, r1, r4, asr ip
   13e78:	andeq	fp, r1, r8, lsr #24
   13e7c:	andeq	fp, r1, r0, lsr #24
   13e80:	andeq	sp, r2, ip, lsl #12
   13e84:			; <UNDEFINED> instruction: 0x0002d3bc
   13e88:	andeq	fp, r1, r0, lsl #25
   13e8c:	push	{r4, r5, r6, r7, r8, lr}
   13e90:	sub	sp, sp, #224	; 0xe0
   13e94:	ldr	r3, [pc, #448]	; 1405c <__assert_fail@plt+0x2434>
   13e98:	ldr	r4, [r3]
   13e9c:	cmp	r4, #0
   13ea0:	beq	13f30 <__assert_fail@plt+0x2308>
   13ea4:	mov	r6, #0
   13ea8:	mov	r7, r6
   13eac:	ldr	r5, [pc, #428]	; 14060 <__assert_fail@plt+0x2438>
   13eb0:	mov	r8, #1
   13eb4:	b	13ee4 <__assert_fail@plt+0x22bc>
   13eb8:	cmp	r6, #0
   13ebc:	bne	13f30 <__assert_fail@plt+0x2308>
   13ec0:	mov	r1, r5
   13ec4:	ldr	r0, [r4, #12]
   13ec8:	bl	11754 <strcmp@plt>
   13ecc:	cmp	r0, #0
   13ed0:	beq	13f30 <__assert_fail@plt+0x2308>
   13ed4:	mov	r7, r8
   13ed8:	ldr	r4, [r4, #220]	; 0xdc
   13edc:	cmp	r4, #0
   13ee0:	beq	13f24 <__assert_fail@plt+0x22fc>
   13ee4:	ldrsh	r3, [r4, #32]
   13ee8:	cmp	r3, #0
   13eec:	beq	13ed8 <__assert_fail@plt+0x22b0>
   13ef0:	ldr	r3, [r4, #64]	; 0x40
   13ef4:	sub	r3, r3, #1
   13ef8:	cmp	r3, #1
   13efc:	bls	13eb8 <__assert_fail@plt+0x2290>
   13f00:	mov	r1, r5
   13f04:	ldr	r0, [r4, #12]
   13f08:	bl	11754 <strcmp@plt>
   13f0c:	cmp	r0, #0
   13f10:	bne	13ed8 <__assert_fail@plt+0x22b0>
   13f14:	cmp	r7, #0
   13f18:	bne	13f30 <__assert_fail@plt+0x2308>
   13f1c:	mov	r6, r8
   13f20:	b	13ed8 <__assert_fail@plt+0x22b0>
   13f24:	eor	r6, r6, #1
   13f28:	tst	r7, r6
   13f2c:	bne	13f38 <__assert_fail@plt+0x2310>
   13f30:	add	sp, sp, #224	; 0xe0
   13f34:	pop	{r4, r5, r6, r7, r8, pc}
   13f38:	mov	r2, #224	; 0xe0
   13f3c:	mov	r1, #0
   13f40:	mov	r0, sp
   13f44:	bl	11a54 <memset@plt>
   13f48:	ldr	r3, [pc, #276]	; 14064 <__assert_fail@plt+0x243c>
   13f4c:	str	r3, [sp]
   13f50:	ldr	r0, [pc, #264]	; 14060 <__assert_fail@plt+0x2438>
   13f54:	bl	12764 <__assert_fail@plt+0xb3c>
   13f58:	str	r0, [sp, #12]
   13f5c:	mov	r3, #1
   13f60:	str	r3, [sp, #16]
   13f64:	strh	r3, [sp, #32]
   13f68:	ldr	r0, [pc, #248]	; 14068 <__assert_fail@plt+0x2440>
   13f6c:	bl	12764 <__assert_fail@plt+0xb3c>
   13f70:	str	r0, [sp, #36]	; 0x24
   13f74:	mov	r0, #0
   13f78:	bl	12764 <__assert_fail@plt+0xb3c>
   13f7c:	str	r0, [sp, #40]	; 0x28
   13f80:	mov	r0, sp
   13f84:	bl	1214c <__assert_fail@plt+0x524>
   13f88:	str	r0, [sp, #44]	; 0x2c
   13f8c:	cmp	r0, #0
   13f90:	beq	13ffc <__assert_fail@plt+0x23d4>
   13f94:	ldrsh	r3, [r0, #10]
   13f98:	str	r3, [sp, #24]
   13f9c:	ldr	r0, [pc, #200]	; 1406c <__assert_fail@plt+0x2444>
   13fa0:	bl	12764 <__assert_fail@plt+0xb3c>
   13fa4:	str	r0, [sp, #48]	; 0x30
   13fa8:	mvn	r3, #0
   13fac:	str	r3, [sp, #60]	; 0x3c
   13fb0:	mov	r3, #0
   13fb4:	str	r3, [sp, #64]	; 0x40
   13fb8:	ldr	r0, [pc, #176]	; 14070 <__assert_fail@plt+0x2448>
   13fbc:	bl	12764 <__assert_fail@plt+0xb3c>
   13fc0:	str	r0, [sp, #20]
   13fc4:	mov	r3, #10
   13fc8:	strh	r3, [sp, #68]	; 0x44
   13fcc:	mov	r3, #1
   13fd0:	strb	r3, [sp, #70]	; 0x46
   13fd4:	ldr	r3, [pc, #152]	; 14074 <__assert_fail@plt+0x244c>
   13fd8:	ldrb	r3, [r3]
   13fdc:	cmp	r3, #0
   13fe0:	bne	14040 <__assert_fail@plt+0x2418>
   13fe4:	ldr	r1, [pc, #140]	; 14078 <__assert_fail@plt+0x2450>
   13fe8:	mov	r0, #6
   13fec:	bl	11b14 <syslog@plt>
   13ff0:	mov	r0, sp
   13ff4:	bl	13224 <__assert_fail@plt+0x15fc>
   13ff8:	b	13f30 <__assert_fail@plt+0x2308>
   13ffc:	mov	r0, sp
   14000:	bl	13494 <__assert_fail@plt+0x186c>
   14004:	ldr	r3, [pc, #104]	; 14074 <__assert_fail@plt+0x244c>
   14008:	ldrb	r3, [r3]
   1400c:	cmp	r3, #0
   14010:	bne	14024 <__assert_fail@plt+0x23fc>
   14014:	ldr	r1, [pc, #96]	; 1407c <__assert_fail@plt+0x2454>
   14018:	mov	r0, #3
   1401c:	bl	11b14 <syslog@plt>
   14020:	b	13f30 <__assert_fail@plt+0x2308>
   14024:	ldr	r3, [pc, #84]	; 14080 <__assert_fail@plt+0x2458>
   14028:	ldr	r3, [r3]
   1402c:	mov	r2, #46	; 0x2e
   14030:	mov	r1, #1
   14034:	ldr	r0, [pc, #64]	; 1407c <__assert_fail@plt+0x2454>
   14038:	bl	118f8 <fwrite@plt>
   1403c:	b	14014 <__assert_fail@plt+0x23ec>
   14040:	ldr	r3, [pc, #56]	; 14080 <__assert_fail@plt+0x2458>
   14044:	ldr	r3, [r3]
   14048:	mov	r2, #31
   1404c:	mov	r1, #1
   14050:	ldr	r0, [pc, #44]	; 14084 <__assert_fail@plt+0x245c>
   14054:	bl	118f8 <fwrite@plt>
   14058:	b	13fe4 <__assert_fail@plt+0x23bc>
   1405c:	andeq	sp, r2, ip, lsl #12
   14060:	andeq	fp, r1, ip, lsl #25
   14064:	andeq	fp, r1, r8, lsl #25
   14068:	muleq	r1, r4, ip
   1406c:	ldrdeq	fp, [r1], -r8
   14070:	andeq	fp, r1, ip, asr #25
   14074:			; <UNDEFINED> instruction: 0x0002d3bc
   14078:	strdeq	fp, [r1], -r4
   1407c:	muleq	r1, ip, ip
   14080:			; <UNDEFINED> instruction: 0x0002d3b0
   14084:	ldrdeq	fp, [r1], -r4
   14088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1408c:	sub	sp, sp, #212	; 0xd4
   14090:	mov	sl, r0
   14094:	ldr	r3, [pc, #448]	; 1425c <__assert_fail@plt+0x2634>
   14098:	ldr	r3, [r3]
   1409c:	cmp	r3, #0
   140a0:	beq	140b8 <__assert_fail@plt+0x2490>
   140a4:	mov	r2, #0
   140a8:	strh	r2, [r3, #32]
   140ac:	ldr	r3, [r3, #220]	; 0xdc
   140b0:	cmp	r3, #0
   140b4:	bne	140a8 <__assert_fail@plt+0x2480>
   140b8:	ldr	r3, [pc, #416]	; 14260 <__assert_fail@plt+0x2638>
   140bc:	ldr	r3, [r3]
   140c0:	ldr	r1, [r3]
   140c4:	cmp	r1, #0
   140c8:	beq	14238 <__assert_fail@plt+0x2610>
   140cc:	mov	r5, #0
   140d0:	ldr	r7, [pc, #392]	; 14260 <__assert_fail@plt+0x2638>
   140d4:	ldr	fp, [pc, #392]	; 14264 <__assert_fail@plt+0x263c>
   140d8:	b	141e4 <__assert_fail@plt+0x25bc>
   140dc:	ldr	r3, [r7]
   140e0:	ldr	r0, [r3, r5]
   140e4:	bl	11928 <opendir@plt>
   140e8:	subs	r8, r0, #0
   140ec:	movne	r9, #1
   140f0:	beq	141d0 <__assert_fail@plt+0x25a8>
   140f4:	mov	r0, r8
   140f8:	bl	11b38 <readdir64@plt>
   140fc:	subs	r4, r0, #0
   14100:	beq	14190 <__assert_fail@plt+0x2568>
   14104:	ldr	r3, [r7]
   14108:	ldr	r0, [r3, r5]
   1410c:	bl	119dc <strlen@plt>
   14110:	mov	r6, r0
   14114:	add	r4, r4, #19
   14118:	mov	r0, r4
   1411c:	bl	119dc <strlen@plt>
   14120:	add	r0, r6, r0
   14124:	mov	r1, r9
   14128:	add	r0, r0, #2
   1412c:	bl	17054 <argp_parse@@Base+0x11dc>
   14130:	subs	r6, r0, #0
   14134:	beq	140f4 <__assert_fail@plt+0x24cc>
   14138:	ldr	r2, [r7]
   1413c:	mov	r3, r4
   14140:	ldr	r2, [r2, r5]
   14144:	ldr	r1, [pc, #284]	; 14268 <__assert_fail@plt+0x2640>
   14148:	mov	r0, r6
   1414c:	bl	11b2c <sprintf@plt>
   14150:	add	r2, sp, #104	; 0x68
   14154:	mov	r1, r6
   14158:	mov	r0, #3
   1415c:	bl	11bbc <__xstat64@plt>
   14160:	cmp	r0, #0
   14164:	bne	14178 <__assert_fail@plt+0x2550>
   14168:	ldr	r3, [sp, #120]	; 0x78
   1416c:	and	r3, r3, #61440	; 0xf000
   14170:	cmp	r3, #32768	; 0x8000
   14174:	beq	14184 <__assert_fail@plt+0x255c>
   14178:	mov	r0, r6
   1417c:	bl	16a6c <argp_parse@@Base+0xbf4>
   14180:	b	140f4 <__assert_fail@plt+0x24cc>
   14184:	mov	r0, r6
   14188:	bl	13cb4 <__assert_fail@plt+0x208c>
   1418c:	b	14178 <__assert_fail@plt+0x2550>
   14190:	mov	r0, r8
   14194:	bl	11c04 <closedir@plt>
   14198:	b	141d0 <__assert_fail@plt+0x25a8>
   1419c:	cmp	sl, #0
   141a0:	bne	14220 <__assert_fail@plt+0x25f8>
   141a4:	ldr	r4, [fp]
   141a8:	ldr	r3, [r7]
   141ac:	ldr	r6, [r3, r5]
   141b0:	bl	11a24 <__errno_location@plt>
   141b4:	ldr	r0, [r0]
   141b8:	bl	1197c <strerror@plt>
   141bc:	mov	r3, r0
   141c0:	mov	r2, r6
   141c4:	ldr	r1, [pc, #160]	; 1426c <__assert_fail@plt+0x2644>
   141c8:	mov	r0, r4
   141cc:	bl	11a0c <fprintf@plt>
   141d0:	add	r5, r5, #4
   141d4:	ldr	r3, [r7]
   141d8:	ldr	r1, [r3, r5]
   141dc:	cmp	r1, #0
   141e0:	beq	14238 <__assert_fail@plt+0x2610>
   141e4:	mov	r2, sp
   141e8:	mov	r0, #3
   141ec:	bl	11bbc <__xstat64@plt>
   141f0:	cmp	r0, #0
   141f4:	bne	1419c <__assert_fail@plt+0x2574>
   141f8:	ldr	r3, [sp, #16]
   141fc:	and	r3, r3, #61440	; 0xf000
   14200:	cmp	r3, #16384	; 0x4000
   14204:	beq	140dc <__assert_fail@plt+0x24b4>
   14208:	cmp	r3, #32768	; 0x8000
   1420c:	bne	141d0 <__assert_fail@plt+0x25a8>
   14210:	ldr	r3, [r7]
   14214:	ldr	r0, [r3, r5]
   14218:	bl	13cb4 <__assert_fail@plt+0x208c>
   1421c:	b	141d0 <__assert_fail@plt+0x25a8>
   14220:	ldr	r3, [r7]
   14224:	ldr	r2, [r3, r5]
   14228:	ldr	r1, [pc, #64]	; 14270 <__assert_fail@plt+0x2648>
   1422c:	mov	r0, #3
   14230:	bl	11b14 <syslog@plt>
   14234:	b	141d0 <__assert_fail@plt+0x25a8>
   14238:	ldr	r4, [pc, #52]	; 14274 <__assert_fail@plt+0x264c>
   1423c:	ldr	r0, [r4, #232]	; 0xe8
   14240:	bl	16a6c <argp_parse@@Base+0xbf4>
   14244:	mov	r3, #0
   14248:	str	r3, [r4, #232]	; 0xe8
   1424c:	str	r3, [r4, #228]	; 0xe4
   14250:	bl	13e8c <__assert_fail@plt+0x2264>
   14254:	add	sp, sp, #212	; 0xd4
   14258:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1425c:	andeq	sp, r2, ip, lsl #12
   14260:	andeq	sp, r2, r8, lsl #12
   14264:			; <UNDEFINED> instruction: 0x0002d3b0
   14268:	andeq	fp, r1, r4, lsl sp
   1426c:	andeq	fp, r1, ip, lsl sp
   14270:	andeq	fp, r1, r0, lsr #24
   14274:			; <UNDEFINED> instruction: 0x0002d3bc
   14278:	push	{r4, r5, lr}
   1427c:	sub	sp, sp, #316	; 0x13c
   14280:	mov	r5, r0
   14284:	mov	r0, r1
   14288:	ldr	r3, [pc, #236]	; 1437c <__assert_fail@plt+0x2754>
   1428c:	ldr	r3, [r3]
   14290:	ldr	r4, [r3]
   14294:	mov	r3, #128	; 0x80
   14298:	str	r3, [sp, #308]	; 0x134
   1429c:	add	r2, sp, #308	; 0x134
   142a0:	add	r1, sp, #180	; 0xb4
   142a4:	bl	11b8c <getpeername@plt>
   142a8:	cmp	r0, #0
   142ac:	bne	14318 <__assert_fail@plt+0x26f0>
   142b0:	mov	r3, #1
   142b4:	str	r3, [sp, #8]
   142b8:	mov	r3, #0
   142bc:	str	r3, [sp, #4]
   142c0:	str	r3, [sp]
   142c4:	mov	r3, #80	; 0x50
   142c8:	add	r2, sp, #20
   142cc:	mov	r1, #128	; 0x80
   142d0:	add	r0, sp, #180	; 0xb4
   142d4:	bl	11ad8 <getnameinfo@plt>
   142d8:	cmp	r0, #0
   142dc:	bne	14300 <__assert_fail@plt+0x26d8>
   142e0:	add	r3, sp, #20
   142e4:	str	r3, [sp]
   142e8:	mov	r3, r5
   142ec:	ldr	r2, [pc, #140]	; 14380 <__assert_fail@plt+0x2758>
   142f0:	mov	r1, #80	; 0x50
   142f4:	add	r0, sp, #100	; 0x64
   142f8:	bl	11a30 <snprintf@plt>
   142fc:	b	1432c <__assert_fail@plt+0x2704>
   14300:	mov	r3, r5
   14304:	ldr	r2, [pc, #120]	; 14384 <__assert_fail@plt+0x275c>
   14308:	mov	r1, #80	; 0x50
   1430c:	add	r0, sp, #100	; 0x64
   14310:	bl	11a30 <snprintf@plt>
   14314:	b	1432c <__assert_fail@plt+0x2704>
   14318:	mov	r3, r5
   1431c:	ldr	r2, [pc, #96]	; 14384 <__assert_fail@plt+0x275c>
   14320:	mov	r1, #80	; 0x50
   14324:	add	r0, sp, #100	; 0x64
   14328:	bl	11a30 <snprintf@plt>
   1432c:	ldr	r5, [pc, #84]	; 14388 <__assert_fail@plt+0x2760>
   14330:	ldr	r2, [r5]
   14334:	sub	r2, r2, r4
   14338:	add	r1, sp, #100	; 0x64
   1433c:	mov	r0, r4
   14340:	bl	11a60 <strncpy@plt>
   14344:	mov	r0, r4
   14348:	bl	119dc <strlen@plt>
   1434c:	add	r0, r4, r0
   14350:	ldr	r3, [r5]
   14354:	cmp	r0, r3
   14358:	bcs	14374 <__assert_fail@plt+0x274c>
   1435c:	mov	r1, #32
   14360:	mov	r2, r5
   14364:	strb	r1, [r0], #1
   14368:	ldr	r3, [r2]
   1436c:	cmp	r3, r0
   14370:	bhi	14364 <__assert_fail@plt+0x273c>
   14374:	add	sp, sp, #316	; 0x13c
   14378:	pop	{r4, r5, pc}
   1437c:	strdeq	sp, [r2], -r4
   14380:	andeq	fp, r1, ip, lsr #26
   14384:	andeq	fp, r1, r8, lsr sp
   14388:	strdeq	sp, [r2], -r8
   1438c:	push	{r4, r5, lr}
   14390:	sub	sp, sp, #8192	; 0x2000
   14394:	sub	sp, sp, #4
   14398:	mov	r4, r0
   1439c:	ldr	r0, [r1, #12]
   143a0:	mov	r1, r4
   143a4:	bl	14278 <__assert_fail@plt+0x2650>
   143a8:	mov	r5, #8192	; 0x2000
   143ac:	mov	r2, r5
   143b0:	mov	r1, sp
   143b4:	mov	r0, r4
   143b8:	bl	1179c <read@plt>
   143bc:	subs	r2, r0, #0
   143c0:	ble	143d8 <__assert_fail@plt+0x27b0>
   143c4:	mov	r1, sp
   143c8:	mov	r0, r4
   143cc:	bl	11a84 <write@plt>
   143d0:	cmp	r0, #0
   143d4:	bgt	143ac <__assert_fail@plt+0x2784>
   143d8:	mov	r0, #0
   143dc:	bl	119c4 <exit@plt>
   143e0:	push	{r4, r5, lr}
   143e4:	sub	sp, sp, #8192	; 0x2000
   143e8:	sub	sp, sp, #4
   143ec:	mov	r4, r0
   143f0:	ldr	r0, [r1, #12]
   143f4:	mov	r1, r4
   143f8:	bl	14278 <__assert_fail@plt+0x2650>
   143fc:	mov	r5, #8192	; 0x2000
   14400:	mov	r2, r5
   14404:	mov	r1, sp
   14408:	mov	r0, r4
   1440c:	bl	1179c <read@plt>
   14410:	cmp	r0, #0
   14414:	bgt	14400 <__assert_fail@plt+0x27d8>
   14418:	beq	1442c <__assert_fail@plt+0x2804>
   1441c:	bl	11a24 <__errno_location@plt>
   14420:	ldr	r3, [r0]
   14424:	cmp	r3, #4
   14428:	beq	14400 <__assert_fail@plt+0x27d8>
   1442c:	mov	r0, #0
   14430:	bl	119c4 <exit@plt>
   14434:	push	{r4, lr}
   14438:	ldr	r2, [pc, #64]	; 14480 <__assert_fail@plt+0x2858>
   1443c:	ldr	r3, [pc, #64]	; 14484 <__assert_fail@plt+0x285c>
   14440:	str	r2, [r3]
   14444:	bl	119ac <__ctype_b_loc@plt>
   14448:	mov	r3, #0
   1444c:	ldr	ip, [pc, #48]	; 14484 <__assert_fail@plt+0x285c>
   14450:	ldr	r1, [r0]
   14454:	lsl	r2, r3, #1
   14458:	ldrh	r2, [r1, r2]
   1445c:	tst	r2, #16384	; 0x4000
   14460:	ldrne	r2, [ip]
   14464:	addne	r1, r2, #1
   14468:	strne	r1, [ip]
   1446c:	strbne	r3, [r2]
   14470:	add	r3, r3, #1
   14474:	cmp	r3, #129	; 0x81
   14478:	bne	14450 <__assert_fail@plt+0x2828>
   1447c:	pop	{r4, pc}
   14480:	andeq	sp, r2, r4, ror #9
   14484:	andeq	sp, r2, r8, ror #11
   14488:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1448c:	sub	sp, sp, #80	; 0x50
   14490:	mov	r8, r0
   14494:	ldr	r0, [r1, #12]
   14498:	mov	r1, r8
   1449c:	bl	14278 <__assert_fail@plt+0x2650>
   144a0:	ldr	r3, [pc, #176]	; 14558 <__assert_fail@plt+0x2930>
   144a4:	ldr	r3, [r3]
   144a8:	cmp	r3, #0
   144ac:	beq	144d8 <__assert_fail@plt+0x28b0>
   144b0:	mov	r3, #13
   144b4:	strb	r3, [sp, #76]	; 0x4c
   144b8:	mov	r3, #10
   144bc:	strb	r3, [sp, #77]	; 0x4d
   144c0:	ldr	r4, [pc, #148]	; 1455c <__assert_fail@plt+0x2934>
   144c4:	ldr	r6, [pc, #140]	; 14558 <__assert_fail@plt+0x2930>
   144c8:	mov	r7, r4
   144cc:	mov	sl, #72	; 0x48
   144d0:	mov	r9, #74	; 0x4a
   144d4:	b	1452c <__assert_fail@plt+0x2904>
   144d8:	bl	14434 <__assert_fail@plt+0x280c>
   144dc:	b	144b0 <__assert_fail@plt+0x2888>
   144e0:	mov	r2, r5
   144e4:	mov	r1, r4
   144e8:	add	r0, sp, #4
   144ec:	bl	11808 <memcpy@plt>
   144f0:	rsb	r2, r5, #72	; 0x48
   144f4:	mov	r1, r7
   144f8:	add	r3, sp, #4
   144fc:	add	r0, r3, r5
   14500:	bl	11808 <memcpy@plt>
   14504:	add	r4, r4, #1
   14508:	ldr	r3, [r6]
   1450c:	cmp	r4, r3
   14510:	moveq	r4, r7
   14514:	mov	r2, r9
   14518:	add	r1, sp, #4
   1451c:	mov	r0, r8
   14520:	bl	11a84 <write@plt>
   14524:	cmp	r0, #74	; 0x4a
   14528:	bne	14550 <__assert_fail@plt+0x2928>
   1452c:	ldr	r5, [r6]
   14530:	sub	r5, r5, r4
   14534:	cmp	r5, #71	; 0x47
   14538:	ble	144e0 <__assert_fail@plt+0x28b8>
   1453c:	mov	r2, sl
   14540:	mov	r1, r4
   14544:	add	r0, sp, #4
   14548:	bl	11808 <memcpy@plt>
   1454c:	b	14504 <__assert_fail@plt+0x28dc>
   14550:	mov	r0, #0
   14554:	bl	119c4 <exit@plt>
   14558:	andeq	sp, r2, r8, ror #11
   1455c:	andeq	sp, r2, r4, ror #9
   14560:	push	{r4, r5, lr}
   14564:	sub	sp, sp, #220	; 0xdc
   14568:	mov	r5, r0
   1456c:	ldr	r3, [pc, #256]	; 14674 <__assert_fail@plt+0x2a4c>
   14570:	ldr	r3, [r3]
   14574:	cmp	r3, #0
   14578:	beq	1463c <__assert_fail@plt+0x2a14>
   1457c:	mov	r3, #128	; 0x80
   14580:	str	r3, [sp, #84]	; 0x54
   14584:	add	r3, sp, #84	; 0x54
   14588:	str	r3, [sp, #4]
   1458c:	add	r3, sp, #88	; 0x58
   14590:	str	r3, [sp]
   14594:	mov	r3, #0
   14598:	mov	r2, #74	; 0x4a
   1459c:	add	r1, sp, #8
   145a0:	mov	r0, r5
   145a4:	bl	11868 <recvfrom@plt>
   145a8:	cmp	r0, #0
   145ac:	blt	14634 <__assert_fail@plt+0x2a0c>
   145b0:	ldr	r3, [pc, #192]	; 14678 <__assert_fail@plt+0x2a50>
   145b4:	ldr	r1, [r3, #236]	; 0xec
   145b8:	ldr	r3, [pc, #180]	; 14674 <__assert_fail@plt+0x2a4c>
   145bc:	ldr	r4, [r3]
   145c0:	sub	r4, r4, r1
   145c4:	cmp	r4, #71	; 0x47
   145c8:	ble	14650 <__assert_fail@plt+0x2a28>
   145cc:	mov	r2, #72	; 0x48
   145d0:	add	r0, sp, #8
   145d4:	bl	117c0 <memmove@plt>
   145d8:	ldr	r2, [pc, #152]	; 14678 <__assert_fail@plt+0x2a50>
   145dc:	ldr	r3, [r2, #236]	; 0xec
   145e0:	add	r3, r3, #1
   145e4:	str	r3, [r2, #236]	; 0xec
   145e8:	ldr	r2, [pc, #132]	; 14674 <__assert_fail@plt+0x2a4c>
   145ec:	ldr	r2, [r2]
   145f0:	cmp	r3, r2
   145f4:	ldreq	r2, [pc, #128]	; 1467c <__assert_fail@plt+0x2a54>
   145f8:	ldreq	r3, [pc, #120]	; 14678 <__assert_fail@plt+0x2a50>
   145fc:	streq	r2, [r3, #236]	; 0xec
   14600:	mov	r3, #13
   14604:	strb	r3, [sp, #80]	; 0x50
   14608:	mov	r3, #10
   1460c:	strb	r3, [sp, #81]	; 0x51
   14610:	mov	r3, #128	; 0x80
   14614:	str	r3, [sp, #4]
   14618:	add	r3, sp, #88	; 0x58
   1461c:	str	r3, [sp]
   14620:	mov	r3, #0
   14624:	mov	r2, #74	; 0x4a
   14628:	add	r1, sp, #8
   1462c:	mov	r0, r5
   14630:	bl	11aa8 <sendto@plt>
   14634:	add	sp, sp, #220	; 0xdc
   14638:	pop	{r4, r5, pc}
   1463c:	bl	14434 <__assert_fail@plt+0x280c>
   14640:	ldr	r2, [pc, #52]	; 1467c <__assert_fail@plt+0x2a54>
   14644:	ldr	r3, [pc, #44]	; 14678 <__assert_fail@plt+0x2a50>
   14648:	str	r2, [r3, #236]	; 0xec
   1464c:	b	1457c <__assert_fail@plt+0x2954>
   14650:	mov	r2, r4
   14654:	add	r0, sp, #8
   14658:	bl	117c0 <memmove@plt>
   1465c:	rsb	r2, r4, #72	; 0x48
   14660:	ldr	r1, [pc, #20]	; 1467c <__assert_fail@plt+0x2a54>
   14664:	add	r3, sp, #8
   14668:	add	r0, r3, r4
   1466c:	bl	11808 <memcpy@plt>
   14670:	b	145d8 <__assert_fail@plt+0x29b0>
   14674:	andeq	sp, r2, r8, ror #11
   14678:			; <UNDEFINED> instruction: 0x0002d3bc
   1467c:	andeq	sp, r2, r4, ror #9
   14680:	push	{lr}		; (str lr, [sp, #-4]!)
   14684:	sub	sp, sp, #12
   14688:	mov	r1, #0
   1468c:	mov	r0, sp
   14690:	bl	11910 <gettimeofday@plt>
   14694:	cmp	r0, #0
   14698:	blt	146b4 <__assert_fail@plt+0x2a8c>
   1469c:	ldr	r0, [pc, #68]	; 146e8 <__assert_fail@plt+0x2ac0>
   146a0:	ldr	r3, [sp]
   146a4:	add	r0, r3, r0
   146a8:	rev	r0, r0
   146ac:	add	sp, sp, #12
   146b0:	pop	{pc}		; (ldr pc, [sp], #4)
   146b4:	ldr	r3, [pc, #48]	; 146ec <__assert_fail@plt+0x2ac4>
   146b8:	ldrb	r3, [r3]
   146bc:	cmp	r3, #0
   146c0:	moveq	r0, #0
   146c4:	beq	146ac <__assert_fail@plt+0x2a84>
   146c8:	ldr	r3, [pc, #32]	; 146f0 <__assert_fail@plt+0x2ac8>
   146cc:	ldr	r3, [r3]
   146d0:	mov	r2, #26
   146d4:	mov	r1, #1
   146d8:	ldr	r0, [pc, #20]	; 146f4 <__assert_fail@plt+0x2acc>
   146dc:	bl	118f8 <fwrite@plt>
   146e0:	mov	r0, #0
   146e4:	b	146ac <__assert_fail@plt+0x2a84>
   146e8:			; <UNDEFINED> instruction: 0x83aa7e80
   146ec:			; <UNDEFINED> instruction: 0x0002d3bc
   146f0:			; <UNDEFINED> instruction: 0x0002d3b0
   146f4:	andeq	fp, r1, ip, lsr sp
   146f8:	push	{r4, lr}
   146fc:	sub	sp, sp, #8
   14700:	mov	r4, r0
   14704:	bl	14680 <__assert_fail@plt+0x2a58>
   14708:	add	r1, sp, #8
   1470c:	str	r0, [r1, #-4]!
   14710:	mov	r2, #4
   14714:	mov	r0, r4
   14718:	bl	11a84 <write@plt>
   1471c:	add	sp, sp, #8
   14720:	pop	{r4, pc}
   14724:	push	{r4, lr}
   14728:	sub	sp, sp, #144	; 0x90
   1472c:	mov	r4, r0
   14730:	mov	r3, #128	; 0x80
   14734:	str	r3, [sp, #8]
   14738:	add	r3, sp, #8
   1473c:	str	r3, [sp, #4]
   14740:	add	r3, sp, #12
   14744:	str	r3, [sp]
   14748:	mov	r3, #0
   1474c:	mov	r2, #4
   14750:	add	r1, sp, #140	; 0x8c
   14754:	bl	11868 <recvfrom@plt>
   14758:	cmp	r0, #0
   1475c:	bge	14768 <__assert_fail@plt+0x2b40>
   14760:	add	sp, sp, #144	; 0x90
   14764:	pop	{r4, pc}
   14768:	bl	14680 <__assert_fail@plt+0x2a58>
   1476c:	str	r0, [sp, #140]	; 0x8c
   14770:	mov	r3, #128	; 0x80
   14774:	str	r3, [sp, #4]
   14778:	add	r3, sp, #12
   1477c:	str	r3, [sp]
   14780:	mov	r3, #0
   14784:	mov	r2, #4
   14788:	add	r1, sp, #140	; 0x8c
   1478c:	mov	r0, r4
   14790:	bl	11aa8 <sendto@plt>
   14794:	b	14760 <__assert_fail@plt+0x2b38>
   14798:	push	{r4, r5, r6, lr}
   1479c:	sub	sp, sp, #352	; 0x160
   147a0:	mov	r6, r0
   147a4:	mov	r4, r1
   147a8:	mov	r5, r2
   147ac:	mov	r3, #128	; 0x80
   147b0:	str	r3, [sp, #20]
   147b4:	mov	r2, #1
   147b8:	ldr	r1, [pc, #772]	; 14ac4 <__assert_fail@plt+0x2e9c>
   147bc:	ldr	r0, [pc, #772]	; 14ac8 <__assert_fail@plt+0x2ea0>
   147c0:	bl	11a00 <setenv@plt>
   147c4:	ldr	r0, [pc, #768]	; 14acc <__assert_fail@plt+0x2ea4>
   147c8:	bl	11bc8 <unsetenv@plt>
   147cc:	ldr	r0, [pc, #764]	; 14ad0 <__assert_fail@plt+0x2ea8>
   147d0:	bl	11bc8 <unsetenv@plt>
   147d4:	ldr	r0, [pc, #760]	; 14ad4 <__assert_fail@plt+0x2eac>
   147d8:	bl	11bc8 <unsetenv@plt>
   147dc:	ldr	r0, [pc, #756]	; 14ad8 <__assert_fail@plt+0x2eb0>
   147e0:	bl	11bc8 <unsetenv@plt>
   147e4:	ldr	r0, [pc, #752]	; 14adc <__assert_fail@plt+0x2eb4>
   147e8:	bl	11bc8 <unsetenv@plt>
   147ec:	ldr	r0, [pc, #748]	; 14ae0 <__assert_fail@plt+0x2eb8>
   147f0:	bl	11bc8 <unsetenv@plt>
   147f4:	add	r2, sp, #20
   147f8:	add	r1, sp, #24
   147fc:	mov	r0, r6
   14800:	bl	11b50 <getsockname@plt>
   14804:	cmp	r0, #0
   14808:	blt	14890 <__assert_fail@plt+0x2c68>
   1480c:	mov	r3, #3
   14810:	str	r3, [sp, #8]
   14814:	mov	r3, #16
   14818:	str	r3, [sp, #4]
   1481c:	add	r3, sp, #336	; 0x150
   14820:	str	r3, [sp]
   14824:	mov	r3, #184	; 0xb8
   14828:	add	r2, sp, #152	; 0x98
   1482c:	ldr	r1, [sp, #20]
   14830:	add	r0, sp, #24
   14834:	bl	11ad8 <getnameinfo@plt>
   14838:	cmp	r0, #0
   1483c:	bne	148c8 <__assert_fail@plt+0x2ca0>
   14840:	mov	r2, #1
   14844:	add	r1, sp, #152	; 0x98
   14848:	ldr	r0, [pc, #636]	; 14acc <__assert_fail@plt+0x2ea4>
   1484c:	bl	11a00 <setenv@plt>
   14850:	cmp	r0, #0
   14854:	blt	148a0 <__assert_fail@plt+0x2c78>
   14858:	ldr	r3, [pc, #644]	; 14ae4 <__assert_fail@plt+0x2ebc>
   1485c:	ldrb	r3, [r3]
   14860:	cmp	r3, #0
   14864:	bne	148b0 <__assert_fail@plt+0x2c88>
   14868:	mov	r2, #1
   1486c:	add	r1, sp, #336	; 0x150
   14870:	ldr	r0, [pc, #604]	; 14ad4 <__assert_fail@plt+0x2eac>
   14874:	bl	11a00 <setenv@plt>
   14878:	cmp	r0, #0
   1487c:	bge	148dc <__assert_fail@plt+0x2cb4>
   14880:	ldr	r1, [pc, #608]	; 14ae8 <__assert_fail@plt+0x2ec0>
   14884:	mov	r0, #4
   14888:	bl	11b14 <syslog@plt>
   1488c:	b	148dc <__assert_fail@plt+0x2cb4>
   14890:	ldr	r1, [pc, #596]	; 14aec <__assert_fail@plt+0x2ec4>
   14894:	mov	r0, #4
   14898:	bl	11b14 <syslog@plt>
   1489c:	b	148ec <__assert_fail@plt+0x2cc4>
   148a0:	ldr	r1, [pc, #584]	; 14af0 <__assert_fail@plt+0x2ec8>
   148a4:	mov	r0, #4
   148a8:	bl	11b14 <syslog@plt>
   148ac:	b	14868 <__assert_fail@plt+0x2c40>
   148b0:	add	r2, sp, #152	; 0x98
   148b4:	ldr	r1, [pc, #568]	; 14af4 <__assert_fail@plt+0x2ecc>
   148b8:	ldr	r3, [pc, #568]	; 14af8 <__assert_fail@plt+0x2ed0>
   148bc:	ldr	r0, [r3]
   148c0:	bl	11a0c <fprintf@plt>
   148c4:	b	14868 <__assert_fail@plt+0x2c40>
   148c8:	bl	117e4 <gai_strerror@plt>
   148cc:	mov	r2, r0
   148d0:	ldr	r1, [pc, #548]	; 14afc <__assert_fail@plt+0x2ed4>
   148d4:	mov	r0, #4
   148d8:	bl	11b14 <syslog@plt>
   148dc:	ldr	r3, [pc, #512]	; 14ae4 <__assert_fail@plt+0x2ebc>
   148e0:	ldrb	r3, [r3, #2]
   148e4:	cmp	r3, #0
   148e8:	bne	149dc <__assert_fail@plt+0x2db4>
   148ec:	mov	r3, #3
   148f0:	str	r3, [sp, #8]
   148f4:	mov	r3, #16
   148f8:	str	r3, [sp, #4]
   148fc:	add	r3, sp, #336	; 0x150
   14900:	str	r3, [sp]
   14904:	mov	r3, #184	; 0xb8
   14908:	add	r2, sp, #152	; 0x98
   1490c:	mov	r1, r5
   14910:	mov	r0, r4
   14914:	bl	11ad8 <getnameinfo@plt>
   14918:	cmp	r0, #0
   1491c:	bne	14aa8 <__assert_fail@plt+0x2e80>
   14920:	mov	r2, #1
   14924:	add	r1, sp, #152	; 0x98
   14928:	ldr	r0, [pc, #424]	; 14ad8 <__assert_fail@plt+0x2eb0>
   1492c:	bl	11a00 <setenv@plt>
   14930:	cmp	r0, #0
   14934:	blt	14a48 <__assert_fail@plt+0x2e20>
   14938:	ldr	r3, [pc, #420]	; 14ae4 <__assert_fail@plt+0x2ebc>
   1493c:	ldrb	r3, [r3]
   14940:	cmp	r3, #0
   14944:	bne	14a58 <__assert_fail@plt+0x2e30>
   14948:	mov	r2, #1
   1494c:	add	r1, sp, #336	; 0x150
   14950:	ldr	r0, [pc, #388]	; 14adc <__assert_fail@plt+0x2eb4>
   14954:	bl	11a00 <setenv@plt>
   14958:	cmp	r0, #0
   1495c:	blt	14a70 <__assert_fail@plt+0x2e48>
   14960:	ldr	r3, [pc, #380]	; 14ae4 <__assert_fail@plt+0x2ebc>
   14964:	ldrb	r3, [r3, #2]
   14968:	cmp	r3, #0
   1496c:	beq	14abc <__assert_fail@plt+0x2e94>
   14970:	mov	r3, #0
   14974:	str	r3, [sp, #8]
   14978:	str	r3, [sp, #4]
   1497c:	str	r3, [sp]
   14980:	mov	r3, #184	; 0xb8
   14984:	add	r2, sp, #152	; 0x98
   14988:	mov	r1, r5
   1498c:	mov	r0, r4
   14990:	bl	11ad8 <getnameinfo@plt>
   14994:	cmp	r0, #0
   14998:	bne	14a80 <__assert_fail@plt+0x2e58>
   1499c:	mov	r2, #1
   149a0:	add	r1, sp, #152	; 0x98
   149a4:	ldr	r0, [pc, #308]	; 14ae0 <__assert_fail@plt+0x2eb8>
   149a8:	bl	11a00 <setenv@plt>
   149ac:	cmp	r0, #0
   149b0:	blt	14a98 <__assert_fail@plt+0x2e70>
   149b4:	ldr	r3, [pc, #296]	; 14ae4 <__assert_fail@plt+0x2ebc>
   149b8:	ldrb	r3, [r3]
   149bc:	cmp	r3, #0
   149c0:	beq	14abc <__assert_fail@plt+0x2e94>
   149c4:	add	r2, sp, #152	; 0x98
   149c8:	ldr	r1, [pc, #304]	; 14b00 <__assert_fail@plt+0x2ed8>
   149cc:	ldr	r3, [pc, #292]	; 14af8 <__assert_fail@plt+0x2ed0>
   149d0:	ldr	r0, [r3]
   149d4:	bl	11a0c <fprintf@plt>
   149d8:	b	14abc <__assert_fail@plt+0x2e94>
   149dc:	mov	r3, #0
   149e0:	str	r3, [sp, #8]
   149e4:	str	r3, [sp, #4]
   149e8:	str	r3, [sp]
   149ec:	mov	r3, #184	; 0xb8
   149f0:	add	r2, sp, #152	; 0x98
   149f4:	ldr	r1, [sp, #20]
   149f8:	add	r0, sp, #24
   149fc:	bl	11ad8 <getnameinfo@plt>
   14a00:	cmp	r0, #0
   14a04:	beq	14a20 <__assert_fail@plt+0x2df8>
   14a08:	bl	117e4 <gai_strerror@plt>
   14a0c:	mov	r2, r0
   14a10:	ldr	r1, [pc, #228]	; 14afc <__assert_fail@plt+0x2ed4>
   14a14:	mov	r0, #4
   14a18:	bl	11b14 <syslog@plt>
   14a1c:	b	148ec <__assert_fail@plt+0x2cc4>
   14a20:	mov	r2, #1
   14a24:	add	r1, sp, #152	; 0x98
   14a28:	ldr	r0, [pc, #160]	; 14ad0 <__assert_fail@plt+0x2ea8>
   14a2c:	bl	11a00 <setenv@plt>
   14a30:	cmp	r0, #0
   14a34:	bge	148ec <__assert_fail@plt+0x2cc4>
   14a38:	ldr	r1, [pc, #196]	; 14b04 <__assert_fail@plt+0x2edc>
   14a3c:	mov	r0, #4
   14a40:	bl	11b14 <syslog@plt>
   14a44:	b	148ec <__assert_fail@plt+0x2cc4>
   14a48:	ldr	r1, [pc, #184]	; 14b08 <__assert_fail@plt+0x2ee0>
   14a4c:	mov	r0, #4
   14a50:	bl	11b14 <syslog@plt>
   14a54:	b	14948 <__assert_fail@plt+0x2d20>
   14a58:	add	r2, sp, #152	; 0x98
   14a5c:	ldr	r1, [pc, #168]	; 14b0c <__assert_fail@plt+0x2ee4>
   14a60:	ldr	r3, [pc, #144]	; 14af8 <__assert_fail@plt+0x2ed0>
   14a64:	ldr	r0, [r3]
   14a68:	bl	11a0c <fprintf@plt>
   14a6c:	b	14948 <__assert_fail@plt+0x2d20>
   14a70:	ldr	r1, [pc, #152]	; 14b10 <__assert_fail@plt+0x2ee8>
   14a74:	mov	r0, #4
   14a78:	bl	11b14 <syslog@plt>
   14a7c:	b	14960 <__assert_fail@plt+0x2d38>
   14a80:	bl	117e4 <gai_strerror@plt>
   14a84:	mov	r2, r0
   14a88:	ldr	r1, [pc, #108]	; 14afc <__assert_fail@plt+0x2ed4>
   14a8c:	mov	r0, #4
   14a90:	bl	11b14 <syslog@plt>
   14a94:	b	14abc <__assert_fail@plt+0x2e94>
   14a98:	ldr	r1, [pc, #116]	; 14b14 <__assert_fail@plt+0x2eec>
   14a9c:	mov	r0, #4
   14aa0:	bl	11b14 <syslog@plt>
   14aa4:	b	14abc <__assert_fail@plt+0x2e94>
   14aa8:	bl	117e4 <gai_strerror@plt>
   14aac:	mov	r2, r0
   14ab0:	ldr	r1, [pc, #68]	; 14afc <__assert_fail@plt+0x2ed4>
   14ab4:	mov	r0, #4
   14ab8:	bl	11b14 <syslog@plt>
   14abc:	add	sp, sp, #352	; 0x160
   14ac0:	pop	{r4, r5, r6, pc}
   14ac4:	andeq	fp, r1, r8, asr sp
   14ac8:	andeq	fp, r1, ip, asr sp
   14acc:	andeq	fp, r1, r4, ror #26
   14ad0:	andeq	fp, r1, r0, ror sp
   14ad4:	andeq	fp, r1, r0, lsl #27
   14ad8:	muleq	r1, r0, sp
   14adc:	muleq	r1, ip, sp
   14ae0:	andeq	fp, r1, ip, lsr #27
   14ae4:			; <UNDEFINED> instruction: 0x0002d3bc
   14ae8:	andeq	fp, r1, r4, lsl #28
   14aec:			; <UNDEFINED> instruction: 0x0001bdbc
   14af0:	ldrdeq	fp, [r1], -r0
   14af4:	andeq	fp, r1, r8, ror #27
   14af8:			; <UNDEFINED> instruction: 0x0002d3b0
   14afc:	andeq	fp, r1, r0, lsr #28
   14b00:			; <UNDEFINED> instruction: 0x0001beb8
   14b04:	andeq	fp, r1, r0, lsr lr
   14b08:	andeq	fp, r1, ip, asr #28
   14b0c:	andeq	fp, r1, r4, ror #28
   14b10:	andeq	fp, r1, r0, lsl #29
   14b14:	muleq	r1, ip, lr
   14b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b1c:	sub	sp, sp, #276	; 0x114
   14b20:	mov	r6, r0
   14b24:	mov	r4, r1
   14b28:	mov	r5, r2
   14b2c:	ldr	r0, [r1]
   14b30:	bl	16b7c <argp_parse@@Base+0xd04>
   14b34:	ldr	r3, [pc, #1780]	; 15230 <__assert_fail@plt+0x3608>
   14b38:	str	r4, [r3]
   14b3c:	cmp	r5, #0
   14b40:	beq	14b50 <__assert_fail@plt+0x2f28>
   14b44:	ldr	r3, [r5]
   14b48:	cmp	r3, #0
   14b4c:	bne	14b60 <__assert_fail@plt+0x2f38>
   14b50:	ldr	r3, [r4]
   14b54:	cmp	r3, #0
   14b58:	beq	14c74 <__assert_fail@plt+0x304c>
   14b5c:	mov	r5, r4
   14b60:	ldr	r3, [r5, #4]!
   14b64:	cmp	r3, #0
   14b68:	bne	14b60 <__assert_fail@plt+0x2f38>
   14b6c:	ldr	r5, [r5, #-4]
   14b70:	mov	r0, r5
   14b74:	bl	119dc <strlen@plt>
   14b78:	add	r0, r5, r0
   14b7c:	ldr	r3, [pc, #1712]	; 15234 <__assert_fail@plt+0x360c>
   14b80:	str	r0, [r3]
   14b84:	ldr	r2, [pc, #1708]	; 15238 <__assert_fail@plt+0x3610>
   14b88:	ldr	r3, [pc, #1708]	; 1523c <__assert_fail@plt+0x3614>
   14b8c:	str	r2, [r3]
   14b90:	ldr	r5, [pc, #1704]	; 15240 <__assert_fail@plt+0x3618>
   14b94:	add	r1, r5, #212	; 0xd4
   14b98:	ldr	r0, [pc, #1700]	; 15244 <__assert_fail@plt+0x361c>
   14b9c:	bl	16984 <argp_parse@@Base+0xb0c>
   14ba0:	mov	r3, #0
   14ba4:	str	r3, [sp, #4]
   14ba8:	add	r2, sp, #268	; 0x10c
   14bac:	str	r2, [sp]
   14bb0:	mov	r2, r4
   14bb4:	mov	r1, r6
   14bb8:	add	r0, r5, #252	; 0xfc
   14bbc:	bl	15e78 <argp_parse@@Base>
   14bc0:	ldr	r3, [pc, #1664]	; 15248 <__assert_fail@plt+0x3620>
   14bc4:	ldrb	r3, [r3, #2]
   14bc8:	cmp	r3, #0
   14bcc:	movne	r2, #1
   14bd0:	ldrne	r3, [pc, #1648]	; 15248 <__assert_fail@plt+0x3620>
   14bd4:	strbne	r2, [r3, #1]
   14bd8:	ldr	r3, [sp, #268]	; 0x10c
   14bdc:	cmp	r6, r3
   14be0:	ble	14c7c <__assert_fail@plt+0x3054>
   14be4:	sub	r3, r6, r3
   14be8:	mov	r1, #4
   14bec:	add	r0, r3, #1
   14bf0:	bl	17054 <argp_parse@@Base+0x11dc>
   14bf4:	ldr	r3, [pc, #1616]	; 1524c <__assert_fail@plt+0x3624>
   14bf8:	str	r0, [r3]
   14bfc:	ldr	r3, [sp, #268]	; 0x10c
   14c00:	cmp	r6, r3
   14c04:	ble	14c38 <__assert_fail@plt+0x3010>
   14c08:	mov	r5, #0
   14c0c:	ldr	r7, [pc, #1592]	; 1524c <__assert_fail@plt+0x3624>
   14c10:	ldr	r8, [r7]
   14c14:	ldr	r0, [r4, r3, lsl #2]
   14c18:	bl	11874 <strdup@plt>
   14c1c:	str	r0, [r8, r5]
   14c20:	ldr	r3, [sp, #268]	; 0x10c
   14c24:	add	r3, r3, #1
   14c28:	str	r3, [sp, #268]	; 0x10c
   14c2c:	add	r5, r5, #4
   14c30:	cmp	r6, r3
   14c34:	bgt	14c10 <__assert_fail@plt+0x2fe8>
   14c38:	ldr	r3, [pc, #1544]	; 15248 <__assert_fail@plt+0x3620>
   14c3c:	ldrb	r3, [r3]
   14c40:	cmp	r3, #0
   14c44:	bne	14cb4 <__assert_fail@plt+0x308c>
   14c48:	mov	r1, #0
   14c4c:	mov	r0, r1
   14c50:	bl	15870 <daemon@@Base>
   14c54:	cmp	r0, #0
   14c58:	bge	14cb4 <__assert_fail@plt+0x308c>
   14c5c:	ldr	r2, [r4]
   14c60:	ldr	r1, [pc, #1512]	; 15250 <__assert_fail@plt+0x3628>
   14c64:	mov	r0, #27
   14c68:	bl	11b14 <syslog@plt>
   14c6c:	mov	r0, #1
   14c70:	bl	119c4 <exit@plt>
   14c74:	mov	r5, r4
   14c78:	b	14b6c <__assert_fail@plt+0x2f44>
   14c7c:	mov	r1, #4
   14c80:	mov	r0, #3
   14c84:	bl	17054 <argp_parse@@Base+0x11dc>
   14c88:	mov	r6, r0
   14c8c:	ldr	r5, [pc, #1464]	; 1524c <__assert_fail@plt+0x3624>
   14c90:	str	r0, [r5]
   14c94:	ldr	r0, [pc, #1464]	; 15254 <__assert_fail@plt+0x362c>
   14c98:	bl	12764 <__assert_fail@plt+0xb3c>
   14c9c:	str	r0, [r6]
   14ca0:	ldr	r5, [r5]
   14ca4:	ldr	r0, [pc, #1452]	; 15258 <__assert_fail@plt+0x3630>
   14ca8:	bl	12764 <__assert_fail@plt+0xb3c>
   14cac:	str	r0, [r5, #4]
   14cb0:	b	14c38 <__assert_fail@plt+0x3010>
   14cb4:	mov	r2, #24
   14cb8:	mov	r1, #17
   14cbc:	ldr	r0, [pc, #1408]	; 15244 <__assert_fail@plt+0x361c>
   14cc0:	bl	11b44 <openlog@plt>
   14cc4:	ldr	r3, [pc, #1396]	; 15240 <__assert_fail@plt+0x3618>
   14cc8:	ldrb	r3, [r3, #4]
   14ccc:	cmp	r3, #0
   14cd0:	beq	14d30 <__assert_fail@plt+0x3108>
   14cd4:	ldr	r1, [pc, #1408]	; 1525c <__assert_fail@plt+0x3634>
   14cd8:	ldr	r3, [pc, #1376]	; 15240 <__assert_fail@plt+0x3618>
   14cdc:	ldr	r0, [r3]
   14ce0:	bl	11b74 <fopen64@plt>
   14ce4:	subs	r4, r0, #0
   14ce8:	beq	14da0 <__assert_fail@plt+0x3178>
   14cec:	ldr	r3, [pc, #1364]	; 15248 <__assert_fail@plt+0x3620>
   14cf0:	ldrb	r3, [r3]
   14cf4:	cmp	r3, #0
   14cf8:	beq	14d14 <__assert_fail@plt+0x30ec>
   14cfc:	ldr	r3, [pc, #1340]	; 15240 <__assert_fail@plt+0x3618>
   14d00:	ldr	r2, [r3]
   14d04:	ldr	r1, [pc, #1364]	; 15260 <__assert_fail@plt+0x3638>
   14d08:	ldr	r3, [pc, #1364]	; 15264 <__assert_fail@plt+0x363c>
   14d0c:	ldr	r0, [r3]
   14d10:	bl	11a0c <fprintf@plt>
   14d14:	bl	119b8 <getpid@plt>
   14d18:	mov	r2, r0
   14d1c:	ldr	r1, [pc, #1348]	; 15268 <__assert_fail@plt+0x3640>
   14d20:	mov	r0, r4
   14d24:	bl	11a0c <fprintf@plt>
   14d28:	mov	r0, r4
   14d2c:	bl	11a9c <fclose@plt>
   14d30:	ldr	r1, [pc, #1332]	; 1526c <__assert_fail@plt+0x3644>
   14d34:	mov	r0, #14
   14d38:	bl	121b8 <__assert_fail@plt+0x590>
   14d3c:	mov	r0, #0
   14d40:	bl	14088 <__assert_fail@plt+0x2460>
   14d44:	ldr	r1, [pc, #1316]	; 15270 <__assert_fail@plt+0x3648>
   14d48:	mov	r0, #1
   14d4c:	bl	121b8 <__assert_fail@plt+0x590>
   14d50:	ldr	r1, [pc, #1308]	; 15274 <__assert_fail@plt+0x364c>
   14d54:	mov	r0, #17
   14d58:	bl	121b8 <__assert_fail@plt+0x590>
   14d5c:	mov	r1, #1
   14d60:	mov	r0, #13
   14d64:	bl	121b8 <__assert_fail@plt+0x590>
   14d68:	mov	r2, #99	; 0x63
   14d6c:	mov	r1, #120	; 0x78
   14d70:	add	r0, sp, #140	; 0x8c
   14d74:	bl	11a54 <memset@plt>
   14d78:	mov	r3, #0
   14d7c:	strb	r3, [sp, #239]	; 0xef
   14d80:	mov	r2, #1
   14d84:	add	r1, sp, #140	; 0x8c
   14d88:	ldr	r0, [pc, #1256]	; 15278 <__assert_fail@plt+0x3650>
   14d8c:	bl	11a00 <setenv@plt>
   14d90:	ldr	r6, [pc, #1252]	; 1527c <__assert_fail@plt+0x3654>
   14d94:	ldr	sl, [pc, #1252]	; 15280 <__assert_fail@plt+0x3658>
   14d98:	ldr	r9, [pc, #1192]	; 15248 <__assert_fail@plt+0x3620>
   14d9c:	b	14dd8 <__assert_fail@plt+0x31b0>
   14da0:	ldr	r3, [pc, #1176]	; 15240 <__assert_fail@plt+0x3618>
   14da4:	ldr	r4, [r3]
   14da8:	bl	11a24 <__errno_location@plt>
   14dac:	ldr	r0, [r0]
   14db0:	bl	1197c <strerror@plt>
   14db4:	mov	r3, r0
   14db8:	mov	r2, r4
   14dbc:	ldr	r1, [pc, #1216]	; 15284 <__assert_fail@plt+0x365c>
   14dc0:	mov	r0, #2
   14dc4:	bl	11b14 <syslog@plt>
   14dc8:	b	14d30 <__assert_fail@plt+0x3108>
   14dcc:	blt	14e68 <__assert_fail@plt+0x3240>
   14dd0:	mov	r0, #1
   14dd4:	bl	11850 <sleep@plt>
   14dd8:	ldr	r3, [r6]
   14ddc:	cmp	r3, #0
   14de0:	bne	14e1c <__assert_fail@plt+0x31f4>
   14de4:	add	r0, sp, #140	; 0x8c
   14de8:	bl	11ac0 <sigemptyset@plt>
   14dec:	mov	r0, #0
   14df0:	bl	12210 <__assert_fail@plt+0x5e8>
   14df4:	ldr	r3, [r6]
   14df8:	cmp	r3, #0
   14dfc:	bne	14e14 <__assert_fail@plt+0x31ec>
   14e00:	add	r0, sp, #140	; 0x8c
   14e04:	bl	11a6c <sigsuspend@plt>
   14e08:	ldr	r3, [r6]
   14e0c:	cmp	r3, #0
   14e10:	beq	14e00 <__assert_fail@plt+0x31d8>
   14e14:	mov	r0, #0
   14e18:	bl	12260 <__assert_fail@plt+0x638>
   14e1c:	mov	r2, #128	; 0x80
   14e20:	ldr	r1, [pc, #1120]	; 15288 <__assert_fail@plt+0x3660>
   14e24:	add	r0, sp, #12
   14e28:	bl	11808 <memcpy@plt>
   14e2c:	ldr	r0, [sl]
   14e30:	mov	r2, #0
   14e34:	str	r2, [sp]
   14e38:	mov	r3, r2
   14e3c:	add	r1, sp, #12
   14e40:	add	r0, r0, #1
   14e44:	bl	11844 <select@plt>
   14e48:	subs	r5, r0, #0
   14e4c:	ble	14dcc <__assert_fail@plt+0x31a4>
   14e50:	ldr	r3, [pc, #1076]	; 1528c <__assert_fail@plt+0x3664>
   14e54:	ldr	r4, [r3]
   14e58:	cmp	r4, #0
   14e5c:	beq	14dd8 <__assert_fail@plt+0x31b0>
   14e60:	ldr	r7, [pc, #1020]	; 15264 <__assert_fail@plt+0x363c>
   14e64:	b	150dc <__assert_fail@plt+0x34b4>
   14e68:	bl	11a24 <__errno_location@plt>
   14e6c:	ldr	r3, [r0]
   14e70:	cmp	r3, #4
   14e74:	beq	14dd0 <__assert_fail@plt+0x31a8>
   14e78:	ldr	r1, [pc, #1040]	; 15290 <__assert_fail@plt+0x3668>
   14e7c:	mov	r0, #4
   14e80:	bl	11b14 <syslog@plt>
   14e84:	b	14dd0 <__assert_fail@plt+0x31a8>
   14e88:	ldr	r2, [r4, #12]
   14e8c:	ldr	r1, [pc, #1024]	; 15294 <__assert_fail@plt+0x366c>
   14e90:	ldr	r0, [r7]
   14e94:	bl	11a0c <fprintf@plt>
   14e98:	b	15134 <__assert_fail@plt+0x350c>
   14e9c:	mov	r3, #128	; 0x80
   14ea0:	str	r3, [sp, #8]
   14ea4:	add	r2, sp, #8
   14ea8:	add	r1, sp, #140	; 0x8c
   14eac:	ldr	r0, [r4, #60]	; 0x3c
   14eb0:	bl	118e0 <accept@plt>
   14eb4:	mov	fp, r0
   14eb8:	ldrb	r3, [r9]
   14ebc:	cmp	r3, #0
   14ec0:	bne	14eec <__assert_fail@plt+0x32c4>
   14ec4:	cmp	fp, #0
   14ec8:	blt	14f00 <__assert_fail@plt+0x32d8>
   14ecc:	ldrb	r3, [r9, #1]
   14ed0:	cmp	r3, #0
   14ed4:	beq	15150 <__assert_fail@plt+0x3528>
   14ed8:	ldr	r2, [sp, #8]
   14edc:	add	r1, sp, #140	; 0x8c
   14ee0:	mov	r0, fp
   14ee4:	bl	14798 <__assert_fail@plt+0x2b70>
   14ee8:	b	15150 <__assert_fail@plt+0x3528>
   14eec:	mov	r2, r0
   14ef0:	ldr	r1, [pc, #928]	; 15298 <__assert_fail@plt+0x3670>
   14ef4:	ldr	r0, [r7]
   14ef8:	bl	11a0c <fprintf@plt>
   14efc:	b	14ec4 <__assert_fail@plt+0x329c>
   14f00:	bl	11a24 <__errno_location@plt>
   14f04:	ldr	r3, [r0]
   14f08:	cmp	r3, #4
   14f0c:	beq	150cc <__assert_fail@plt+0x34a4>
   14f10:	ldr	r2, [r4, #12]
   14f14:	ldr	r1, [pc, #896]	; 1529c <__assert_fail@plt+0x3674>
   14f18:	mov	r0, #4
   14f1c:	bl	11b14 <syslog@plt>
   14f20:	b	150cc <__assert_fail@plt+0x34a4>
   14f24:	mov	r8, #1
   14f28:	ldr	r2, [r4, #208]	; 0xd0
   14f2c:	add	r3, r2, #1
   14f30:	str	r3, [r4, #208]	; 0xd0
   14f34:	cmp	r2, #0
   14f38:	beq	15018 <__assert_fail@plt+0x33f0>
   14f3c:	ldr	r2, [r4, #28]
   14f40:	cmp	r2, #0
   14f44:	cmpne	r3, r2
   14f48:	bhi	14f5c <__assert_fail@plt+0x3334>
   14f4c:	ldr	r2, [pc, #748]	; 15240 <__assert_fail@plt+0x3618>
   14f50:	ldr	r2, [r2, #8]
   14f54:	cmp	r3, r2
   14f58:	bcc	14f94 <__assert_fail@plt+0x336c>
   14f5c:	mov	r1, #0
   14f60:	add	r0, sp, #140	; 0x8c
   14f64:	bl	11910 <gettimeofday@plt>
   14f68:	ldr	r2, [r4, #212]	; 0xd4
   14f6c:	ldr	r3, [sp, #140]	; 0x8c
   14f70:	sub	r3, r3, r2
   14f74:	cmp	r3, #60	; 0x3c
   14f78:	ble	15028 <__assert_fail@plt+0x3400>
   14f7c:	add	r3, r4, #212	; 0xd4
   14f80:	add	r2, sp, #140	; 0x8c
   14f84:	ldm	r2, {r0, r1}
   14f88:	stm	r3, {r0, r1}
   14f8c:	mov	r3, #1
   14f90:	str	r3, [r4, #208]	; 0xd0
   14f94:	bl	11acc <fork@plt>
   14f98:	cmp	r0, #0
   14f9c:	blt	15098 <__assert_fail@plt+0x3470>
   14fa0:	cmp	r0, #0
   14fa4:	beq	15210 <__assert_fail@plt+0x35e8>
   14fa8:	ldr	r3, [r4, #24]
   14fac:	cmp	r3, #0
   14fb0:	beq	1500c <__assert_fail@plt+0x33e4>
   14fb4:	str	r0, [r4, #24]
   14fb8:	ldr	r3, [r4, #60]	; 0x3c
   14fbc:	cmp	r3, #0
   14fc0:	blt	1500c <__assert_fail@plt+0x33e4>
   14fc4:	add	r2, r3, #31
   14fc8:	cmp	r3, #0
   14fcc:	movge	r2, r3
   14fd0:	asr	r2, r2, #5
   14fd4:	asr	r1, r3, #31
   14fd8:	lsr	r1, r1, #27
   14fdc:	add	r3, r3, r1
   14fe0:	and	r3, r3, #31
   14fe4:	sub	r3, r3, r1
   14fe8:	ldr	r1, [pc, #664]	; 15288 <__assert_fail@plt+0x3660>
   14fec:	ldr	r1, [r1, r2, lsl #2]
   14ff0:	mov	r0, #1
   14ff4:	bic	r3, r1, r0, lsl r3
   14ff8:	ldr	r1, [pc, #648]	; 15288 <__assert_fail@plt+0x3660>
   14ffc:	str	r3, [r1, r2, lsl #2]
   15000:	ldr	r3, [r6]
   15004:	sub	r3, r3, #1
   15008:	str	r3, [r6]
   1500c:	mov	r0, #0
   15010:	bl	12260 <__assert_fail@plt+0x638>
   15014:	b	1518c <__assert_fail@plt+0x3564>
   15018:	mov	r1, #0
   1501c:	add	r0, r4, #212	; 0xd4
   15020:	bl	11910 <gettimeofday@plt>
   15024:	b	14f94 <__assert_fail@plt+0x336c>
   15028:	ldr	r3, [r4, #20]
   1502c:	ldr	r2, [r4, #12]
   15030:	ldr	r1, [pc, #616]	; 152a0 <__assert_fail@plt+0x3678>
   15034:	mov	r0, #3
   15038:	bl	11b14 <syslog@plt>
   1503c:	mov	r0, r4
   15040:	bl	12d8c <__assert_fail@plt+0x1164>
   15044:	ldr	r3, [r4, #24]
   15048:	cmp	r3, #0
   1504c:	bne	1505c <__assert_fail@plt+0x3434>
   15050:	ldr	r3, [r4, #16]
   15054:	cmp	r3, #1
   15058:	beq	1508c <__assert_fail@plt+0x3464>
   1505c:	mov	r0, #0
   15060:	bl	12260 <__assert_fail@plt+0x638>
   15064:	ldr	r3, [pc, #568]	; 152a4 <__assert_fail@plt+0x367c>
   15068:	ldr	r3, [r3]
   1506c:	cmp	r3, #0
   15070:	bne	150cc <__assert_fail@plt+0x34a4>
   15074:	mov	r2, #1
   15078:	ldr	r3, [pc, #548]	; 152a4 <__assert_fail@plt+0x367c>
   1507c:	str	r2, [r3]
   15080:	mov	r0, #600	; 0x258
   15084:	bl	11880 <alarm@plt>
   15088:	b	150cc <__assert_fail@plt+0x34a4>
   1508c:	mov	r0, fp
   15090:	bl	11bf8 <close@plt>
   15094:	b	1505c <__assert_fail@plt+0x3434>
   15098:	ldr	r1, [pc, #520]	; 152a8 <__assert_fail@plt+0x3680>
   1509c:	mov	r0, #3
   150a0:	bl	11b14 <syslog@plt>
   150a4:	ldr	r3, [r4, #24]
   150a8:	cmp	r3, #0
   150ac:	bne	150bc <__assert_fail@plt+0x3494>
   150b0:	ldr	r3, [r4, #16]
   150b4:	cmp	r3, #1
   150b8:	beq	151b0 <__assert_fail@plt+0x3588>
   150bc:	mov	r0, #0
   150c0:	bl	12260 <__assert_fail@plt+0x638>
   150c4:	mov	r0, #1
   150c8:	bl	11850 <sleep@plt>
   150cc:	ldr	r4, [r4, #220]	; 0xdc
   150d0:	cmp	r5, #0
   150d4:	cmpne	r4, #0
   150d8:	beq	14dd8 <__assert_fail@plt+0x31b0>
   150dc:	ldr	r3, [r4, #60]	; 0x3c
   150e0:	cmn	r3, #1
   150e4:	beq	150cc <__assert_fail@plt+0x34a4>
   150e8:	add	r2, r3, #31
   150ec:	cmp	r3, #0
   150f0:	movge	r2, r3
   150f4:	asr	r2, r2, #5
   150f8:	add	r1, sp, #272	; 0x110
   150fc:	add	r2, r1, r2, lsl #2
   15100:	asr	r1, r3, #31
   15104:	lsr	r1, r1, #27
   15108:	add	r3, r3, r1
   1510c:	and	r3, r3, #31
   15110:	sub	r3, r3, r1
   15114:	ldr	r2, [r2, #-260]	; 0xfffffefc
   15118:	mov	r1, #1
   1511c:	ands	r3, r2, r1, lsl r3
   15120:	beq	150cc <__assert_fail@plt+0x34a4>
   15124:	sub	r5, r5, #1
   15128:	ldrb	r3, [r9]
   1512c:	cmp	r3, #0
   15130:	bne	14e88 <__assert_fail@plt+0x3260>
   15134:	ldr	r3, [r4, #24]
   15138:	cmp	r3, #0
   1513c:	bne	1514c <__assert_fail@plt+0x3524>
   15140:	ldr	r3, [r4, #16]
   15144:	cmp	r3, #1
   15148:	beq	14e9c <__assert_fail@plt+0x3274>
   1514c:	ldr	fp, [r4, #60]	; 0x3c
   15150:	mov	r0, #0
   15154:	bl	12210 <__assert_fail@plt+0x5e8>
   15158:	ldr	r3, [r4, #44]	; 0x2c
   1515c:	cmp	r3, #0
   15160:	beq	14f24 <__assert_fail@plt+0x32fc>
   15164:	ldrsh	r3, [r3, #8]
   15168:	cmp	r3, #0
   1516c:	movne	r8, #1
   15170:	moveq	r8, #0
   15174:	bne	14f28 <__assert_fail@plt+0x3300>
   15178:	mov	r0, #0
   1517c:	bl	12260 <__assert_fail@plt+0x638>
   15180:	mov	r1, r4
   15184:	mov	r0, fp
   15188:	bl	122a0 <__assert_fail@plt+0x678>
   1518c:	ldr	r3, [r4, #24]
   15190:	cmp	r3, #0
   15194:	bne	150cc <__assert_fail@plt+0x34a4>
   15198:	ldr	r3, [r4, #16]
   1519c:	cmp	r3, #1
   151a0:	bne	150cc <__assert_fail@plt+0x34a4>
   151a4:	mov	r0, fp
   151a8:	bl	11bf8 <close@plt>
   151ac:	b	150cc <__assert_fail@plt+0x34a4>
   151b0:	mov	r0, fp
   151b4:	bl	11bf8 <close@plt>
   151b8:	b	150bc <__assert_fail@plt+0x3494>
   151bc:	bl	119e8 <setsid@plt>
   151c0:	cmp	r8, #0
   151c4:	beq	15180 <__assert_fail@plt+0x3558>
   151c8:	ldrb	r3, [r9]
   151cc:	cmp	r3, #0
   151d0:	beq	151e4 <__assert_fail@plt+0x35bc>
   151d4:	ldr	r2, [sl]
   151d8:	ldr	r1, [pc, #204]	; 152ac <__assert_fail@plt+0x3684>
   151dc:	ldr	r0, [r7]
   151e0:	bl	11a0c <fprintf@plt>
   151e4:	ldr	r8, [sl]
   151e8:	cmp	r8, #2
   151ec:	ble	15180 <__assert_fail@plt+0x3558>
   151f0:	cmp	fp, r8
   151f4:	beq	15200 <__assert_fail@plt+0x35d8>
   151f8:	mov	r0, r8
   151fc:	bl	11bf8 <close@plt>
   15200:	sub	r8, r8, #1
   15204:	cmp	r8, #2
   15208:	bne	151f0 <__assert_fail@plt+0x35c8>
   1520c:	b	15180 <__assert_fail@plt+0x3558>
   15210:	mov	r0, #0
   15214:	bl	12260 <__assert_fail@plt+0x638>
   15218:	ldrb	r3, [r9]
   1521c:	tst	r8, r3
   15220:	bne	151bc <__assert_fail@plt+0x3594>
   15224:	cmp	r8, #0
   15228:	bne	151e4 <__assert_fail@plt+0x35bc>
   1522c:	b	15180 <__assert_fail@plt+0x3558>
   15230:	strdeq	sp, [r2], -r4
   15234:	strdeq	sp, [r2], -r8
   15238:	ldrdeq	fp, [r1], -r8
   1523c:	andeq	sp, r2, r4, lsl r6
   15240:	andeq	sp, r2, r8, asr #3
   15244:	strdeq	fp, [r1], -r0
   15248:			; <UNDEFINED> instruction: 0x0002d3bc
   1524c:	andeq	sp, r2, r8, lsl #12
   15250:	andeq	fp, r1, ip, lsr #30
   15254:	strdeq	fp, [r1], -r8
   15258:	andeq	fp, r1, r4, lsl pc
   1525c:	andeq	fp, r1, r0, asr pc
   15260:	andeq	fp, r1, r4, asr pc
   15264:			; <UNDEFINED> instruction: 0x0002d3b0
   15268:	andeq	fp, r1, r8, lsr #14
   1526c:	andeq	r2, r1, r0, asr #24
   15270:	andeq	r4, r1, r8, lsl #1
   15274:	andeq	r1, r1, ip, asr sp
   15278:	andeq	fp, r1, r4, lsl #31
   1527c:	andeq	sp, r2, ip, ror #11
   15280:	andeq	sp, r2, r4, ror #10
   15284:	andeq	fp, r1, r0, ror pc
   15288:	andeq	sp, r2, r8, ror #10
   1528c:	andeq	sp, r2, ip, lsl #12
   15290:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   15294:	andeq	fp, r1, r0, lsr #16
   15298:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1529c:			; <UNDEFINED> instruction: 0x0001bfb0
   152a0:	andeq	fp, r1, r4, asr #31
   152a4:	andeq	sp, r2, r0, lsl #12
   152a8:	strdeq	fp, [r1], -r8
   152ac:	andeq	ip, r1, r4
   152b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   152b4:	ldr	r5, [sp, #36]	; 0x24
   152b8:	ldr	r4, [r5]
   152bc:	cmp	r4, r0
   152c0:	bge	152f4 <__assert_fail@plt+0x36cc>
   152c4:	add	lr, r1, r4
   152c8:	ldrb	ip, [r1, r4]
   152cc:	cmp	ip, #9
   152d0:	cmpne	ip, #32
   152d4:	bne	152f4 <__assert_fail@plt+0x36cc>
   152d8:	add	r4, r4, #1
   152dc:	cmp	r0, r4
   152e0:	beq	152f4 <__assert_fail@plt+0x36cc>
   152e4:	ldrb	ip, [lr, #1]!
   152e8:	cmp	ip, #9
   152ec:	cmpne	ip, #32
   152f0:	beq	152d8 <__assert_fail@plt+0x36b0>
   152f4:	str	r4, [r3]
   152f8:	add	r3, r1, r4
   152fc:	ldrb	lr, [r1, r4]
   15300:	cmp	lr, #34	; 0x22
   15304:	beq	1534c <__assert_fail@plt+0x3724>
   15308:	cmp	lr, #39	; 0x27
   1530c:	beq	1534c <__assert_fail@plt+0x3724>
   15310:	add	r8, r1, r4
   15314:	ldrb	r1, [r1, r4]
   15318:	cmp	r1, #34	; 0x22
   1531c:	beq	15338 <__assert_fail@plt+0x3710>
   15320:	mov	r7, r2
   15324:	mov	r9, r0
   15328:	mov	r0, r2
   1532c:	bl	119f4 <strchr@plt>
   15330:	cmp	r0, #0
   15334:	beq	1536c <__assert_fail@plt+0x3744>
   15338:	ldr	r3, [sp, #32]
   1533c:	str	r4, [r3]
   15340:	add	r0, r4, #1
   15344:	str	r0, [r5]
   15348:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1534c:	add	r4, r4, #1
   15350:	cmp	r0, r4
   15354:	ble	15310 <__assert_fail@plt+0x36e8>
   15358:	ldrb	ip, [r3, #1]!
   1535c:	cmp	ip, lr
   15360:	bne	1534c <__assert_fail@plt+0x3724>
   15364:	b	15338 <__assert_fail@plt+0x3710>
   15368:	mov	r4, r6
   1536c:	add	r6, r4, #1
   15370:	cmp	r9, r6
   15374:	ble	15338 <__assert_fail@plt+0x3710>
   15378:	ldrb	r1, [r8, #1]!
   1537c:	and	r3, r1, #253	; 0xfd
   15380:	cmp	r3, #32
   15384:	cmpne	r1, #9
   15388:	beq	15338 <__assert_fail@plt+0x3710>
   1538c:	mov	r0, r7
   15390:	bl	119f4 <strchr@plt>
   15394:	cmp	r0, #0
   15398:	beq	15368 <__assert_fail@plt+0x3740>
   1539c:	b	15338 <__assert_fail@plt+0x3710>
   153a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   153a4:	sub	sp, sp, #36	; 0x24
   153a8:	mov	r6, r0
   153ac:	str	r1, [sp, #12]
   153b0:	mov	r8, r2
   153b4:	mov	r7, r3
   153b8:	bl	119dc <strlen@plt>
   153bc:	mov	r3, #0
   153c0:	str	r3, [r8]
   153c4:	str	r3, [r7]
   153c8:	cmp	r0, r3
   153cc:	ble	1558c <__assert_fail@plt+0x3964>
   153d0:	mov	r5, r0
   153d4:	mov	r4, r0
   153d8:	bl	119ac <__ctype_b_loc@plt>
   153dc:	ldr	r2, [r0]
   153e0:	add	r0, r6, r5
   153e4:	ldrb	r3, [r0, #-1]!
   153e8:	lsl	r3, r3, #1
   153ec:	ldrh	r3, [r2, r3]
   153f0:	tst	r3, #8192	; 0x2000
   153f4:	beq	1540c <__assert_fail@plt+0x37e4>
   153f8:	subs	r4, r4, #1
   153fc:	bne	153e4 <__assert_fail@plt+0x37bc>
   15400:	mov	r0, #1
   15404:	add	sp, sp, #36	; 0x24
   15408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1540c:	cmp	r4, #0
   15410:	movle	r0, #1
   15414:	ble	15404 <__assert_fail@plt+0x37dc>
   15418:	mov	r3, #1
   1541c:	str	r3, [r8]
   15420:	mov	r3, #0
   15424:	str	r3, [sp, #20]
   15428:	add	r9, sp, #20
   1542c:	add	r5, sp, #24
   15430:	b	15440 <__assert_fail@plt+0x3818>
   15434:	ldr	r3, [r8]
   15438:	add	r3, r3, #1
   1543c:	str	r3, [r8]
   15440:	str	r9, [sp, #4]
   15444:	str	r5, [sp]
   15448:	add	r3, sp, #28
   1544c:	ldr	r2, [sp, #12]
   15450:	mov	r1, r6
   15454:	mov	r0, r4
   15458:	bl	152b0 <__assert_fail@plt+0x3688>
   1545c:	cmp	r0, r4
   15460:	blt	15434 <__assert_fail@plt+0x380c>
   15464:	ldr	r0, [r8]
   15468:	mov	r1, #4
   1546c:	add	r0, r0, #1
   15470:	bl	17054 <argp_parse@@Base+0x11dc>
   15474:	str	r0, [r7]
   15478:	mov	r3, #0
   1547c:	str	r3, [sp, #20]
   15480:	ldr	r3, [r8]
   15484:	cmp	r3, #0
   15488:	ble	15578 <__assert_fail@plt+0x3950>
   1548c:	mov	r5, #0
   15490:	add	fp, sp, #20
   15494:	b	1550c <__assert_fail@plt+0x38e4>
   15498:	ldr	r3, [sp, #24]
   1549c:	ldrb	r1, [r6, r3]
   154a0:	cmp	r1, #34	; 0x22
   154a4:	beq	15564 <__assert_fail@plt+0x393c>
   154a8:	ldr	r3, [sp, #28]
   154ac:	ldr	r0, [sp, #24]
   154b0:	sub	r0, r0, r3
   154b4:	add	r9, r0, #1
   154b8:	ldr	sl, [r7]
   154bc:	mov	r1, #1
   154c0:	add	r0, r0, #2
   154c4:	bl	17054 <argp_parse@@Base+0x11dc>
   154c8:	str	r0, [sl, r5, lsl #2]
   154cc:	ldr	r3, [r7]
   154d0:	ldr	r0, [r3, r5, lsl #2]
   154d4:	cmp	r0, #0
   154d8:	beq	15594 <__assert_fail@plt+0x396c>
   154dc:	mov	r2, r9
   154e0:	ldr	r1, [sp, #28]
   154e4:	add	r1, r6, r1
   154e8:	bl	11808 <memcpy@plt>
   154ec:	ldr	r3, [r7]
   154f0:	ldr	r3, [r3, r5, lsl #2]
   154f4:	mov	r2, #0
   154f8:	strb	r2, [r3, r9]
   154fc:	add	r5, r5, #1
   15500:	ldr	r3, [r8]
   15504:	cmp	r3, r5
   15508:	ble	1557c <__assert_fail@plt+0x3954>
   1550c:	str	fp, [sp, #4]
   15510:	add	r3, sp, #24
   15514:	str	r3, [sp]
   15518:	add	r3, sp, #28
   1551c:	ldr	r2, [sp, #12]
   15520:	mov	r1, r6
   15524:	mov	r0, r4
   15528:	bl	152b0 <__assert_fail@plt+0x3688>
   1552c:	ldr	r2, [sp, #28]
   15530:	ldrb	r3, [r6, r2]
   15534:	cmp	r3, #34	; 0x22
   15538:	beq	15498 <__assert_fail@plt+0x3870>
   1553c:	cmp	r3, #39	; 0x27
   15540:	bne	154a8 <__assert_fail@plt+0x3880>
   15544:	ldr	r3, [sp, #24]
   15548:	ldrb	r1, [r6, r3]
   1554c:	cmp	r1, #39	; 0x27
   15550:	addeq	r2, r2, #1
   15554:	streq	r2, [sp, #28]
   15558:	subeq	r3, r3, #1
   1555c:	streq	r3, [sp, #24]
   15560:	b	154a8 <__assert_fail@plt+0x3880>
   15564:	add	r2, r2, #1
   15568:	str	r2, [sp, #28]
   1556c:	sub	r3, r3, #1
   15570:	str	r3, [sp, #24]
   15574:	b	154a8 <__assert_fail@plt+0x3880>
   15578:	mov	r5, #0
   1557c:	ldr	r3, [r7]
   15580:	mov	r0, #0
   15584:	str	r0, [r3, r5, lsl #2]
   15588:	b	15404 <__assert_fail@plt+0x37dc>
   1558c:	mov	r0, #1
   15590:	b	15404 <__assert_fail@plt+0x37dc>
   15594:	mov	r0, #1
   15598:	b	15404 <__assert_fail@plt+0x37dc>
   1559c:	push	{r4, r5, r6, lr}
   155a0:	mov	r6, r1
   155a4:	subs	r4, r0, #1
   155a8:	bmi	155c4 <__assert_fail@plt+0x399c>
   155ac:	add	r5, r1, r0, lsl #2
   155b0:	ldr	r0, [r5, #-4]!
   155b4:	bl	16a6c <argp_parse@@Base+0xbf4>
   155b8:	sub	r4, r4, #1
   155bc:	cmn	r4, #1
   155c0:	bne	155b0 <__assert_fail@plt+0x3988>
   155c4:	mov	r0, r6
   155c8:	bl	16a6c <argp_parse@@Base+0xbf4>
   155cc:	mov	r0, #1
   155d0:	pop	{r4, r5, r6, pc}
   155d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   155d8:	subs	sl, r2, #0
   155dc:	beq	156a8 <__assert_fail@plt+0x3a80>
   155e0:	mov	r6, r1
   155e4:	mov	r8, r0
   155e8:	mov	r0, #1
   155ec:	bl	170a4 <argp_parse@@Base+0x122c>
   155f0:	subs	r4, r0, #0
   155f4:	beq	156b0 <__assert_fail@plt+0x3a88>
   155f8:	mov	r3, #0
   155fc:	strb	r3, [r4]
   15600:	cmp	r8, r3
   15604:	ble	1569c <__assert_fail@plt+0x3a74>
   15608:	sub	r6, r6, #4
   1560c:	mov	r7, r3
   15610:	mov	r5, r3
   15614:	ldr	r9, [pc, #164]	; 156c0 <__assert_fail@plt+0x3a98>
   15618:	ldr	r0, [r6, #4]
   1561c:	bl	119dc <strlen@plt>
   15620:	add	r0, r0, #2
   15624:	add	r7, r7, r0
   15628:	mov	r1, r7
   1562c:	mov	r0, r4
   15630:	bl	170d4 <argp_parse@@Base+0x125c>
   15634:	subs	r4, r0, #0
   15638:	beq	156b8 <__assert_fail@plt+0x3a90>
   1563c:	cmp	r5, #0
   15640:	beq	15654 <__assert_fail@plt+0x3a2c>
   15644:	mov	r0, r4
   15648:	bl	119dc <strlen@plt>
   1564c:	ldrh	r3, [r9]
   15650:	strh	r3, [r4, r0]
   15654:	ldr	r1, [r6, #4]!
   15658:	mov	r0, r4
   1565c:	bl	11904 <strcat@plt>
   15660:	add	r5, r5, #1
   15664:	cmp	r8, r5
   15668:	bne	15618 <__assert_fail@plt+0x39f0>
   1566c:	ldrb	r3, [r4]
   15670:	cmp	r3, #0
   15674:	movne	r5, #0
   15678:	bne	15684 <__assert_fail@plt+0x3a5c>
   1567c:	b	1569c <__assert_fail@plt+0x3a74>
   15680:	strb	r5, [r4, r0]
   15684:	mov	r0, r4
   15688:	bl	119dc <strlen@plt>
   1568c:	sub	r0, r0, #1
   15690:	ldrb	r3, [r4, r0]
   15694:	cmp	r3, #32
   15698:	beq	15680 <__assert_fail@plt+0x3a58>
   1569c:	str	r4, [sl]
   156a0:	mov	r0, #0
   156a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   156a8:	mov	r0, #1
   156ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   156b0:	mov	r0, #1
   156b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   156b8:	mov	r0, #1
   156bc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   156c0:	andeq	ip, r1, ip, asr #4
   156c4:	push	{r4, lr}
   156c8:	mov	r0, #0
   156cc:	bl	11880 <alarm@plt>
   156d0:	mov	r4, r0
   156d4:	mov	r1, #0
   156d8:	mov	r0, #14
   156dc:	bl	11814 <signal@plt>
   156e0:	cmp	r4, #0
   156e4:	popne	{r4, pc}
   156e8:	ldr	r2, [pc, #12]	; 156fc <__assert_fail@plt+0x3ad4>
   156ec:	mov	r1, #0
   156f0:	mov	r0, #1
   156f4:	bl	1191c <error@plt>
   156f8:	pop	{r4, pc}
   156fc:	andeq	ip, r1, r0, asr r2
   15700:	push	{r4, r5, r6, r7, r8, lr}
   15704:	mov	r6, r0
   15708:	mov	r4, r1
   1570c:	mov	r5, r2
   15710:	bl	119b8 <getpid@plt>
   15714:	mov	r7, r0
   15718:	bl	11acc <fork@plt>
   1571c:	cmn	r0, #1
   15720:	beq	1584c <__assert_fail@plt+0x3c24>
   15724:	cmp	r0, #0
   15728:	beq	15754 <__assert_fail@plt+0x3b2c>
   1572c:	cmp	r5, #0
   15730:	ble	1574c <__assert_fail@plt+0x3b24>
   15734:	ldr	r1, [pc, #296]	; 15864 <__assert_fail@plt+0x3c3c>
   15738:	mov	r0, #14
   1573c:	bl	11814 <signal@plt>
   15740:	mov	r0, r5
   15744:	bl	11880 <alarm@plt>
   15748:	bl	11784 <pause@plt>
   1574c:	mov	r0, #0
   15750:	bl	117fc <_exit@plt>
   15754:	bl	119e8 <setsid@plt>
   15758:	cmn	r0, #1
   1575c:	beq	15854 <__assert_fail@plt+0x3c2c>
   15760:	mov	r1, #1
   15764:	mov	r0, r1
   15768:	bl	11814 <signal@plt>
   1576c:	bl	11acc <fork@plt>
   15770:	cmn	r0, #1
   15774:	popeq	{r4, r5, r6, r7, r8, pc}
   15778:	cmp	r0, #0
   1577c:	beq	15788 <__assert_fail@plt+0x3b60>
   15780:	mov	r0, #0
   15784:	bl	117fc <_exit@plt>
   15788:	cmp	r6, #0
   1578c:	beq	157a0 <__assert_fail@plt+0x3b78>
   15790:	cmp	r4, #0
   15794:	beq	157b8 <__assert_fail@plt+0x3b90>
   15798:	mov	r0, r7
   1579c:	pop	{r4, r5, r6, r7, r8, pc}
   157a0:	ldr	r0, [pc, #192]	; 15868 <__assert_fail@plt+0x3c40>
   157a4:	bl	118bc <chdir@plt>
   157a8:	cmp	r0, #0
   157ac:	bge	15790 <__assert_fail@plt+0x3b68>
   157b0:	mvn	r0, #0
   157b4:	pop	{r4, r5, r6, r7, r8, pc}
   157b8:	mov	r0, #4
   157bc:	bl	1188c <sysconf@plt>
   157c0:	mov	r5, r0
   157c4:	cmn	r0, #1
   157c8:	beq	15834 <__assert_fail@plt+0x3c0c>
   157cc:	cmp	r0, #0
   157d0:	ble	157e8 <__assert_fail@plt+0x3bc0>
   157d4:	mov	r0, r4
   157d8:	bl	11bf8 <close@plt>
   157dc:	add	r4, r4, #1
   157e0:	cmp	r4, r5
   157e4:	blt	157d4 <__assert_fail@plt+0x3bac>
   157e8:	mov	r2, #0
   157ec:	mov	r1, #2
   157f0:	ldr	r0, [pc, #116]	; 1586c <__assert_fail@plt+0x3c44>
   157f4:	bl	11934 <open64@plt>
   157f8:	mov	r4, r0
   157fc:	cmn	r0, #1
   15800:	beq	1585c <__assert_fail@plt+0x3c34>
   15804:	mov	r1, #0
   15808:	bl	11898 <dup2@plt>
   1580c:	mov	r1, #1
   15810:	mov	r0, r4
   15814:	bl	11898 <dup2@plt>
   15818:	mov	r1, #2
   1581c:	mov	r0, r4
   15820:	bl	11898 <dup2@plt>
   15824:	cmp	r4, #2
   15828:	bgt	1583c <__assert_fail@plt+0x3c14>
   1582c:	mov	r0, r7
   15830:	pop	{r4, r5, r6, r7, r8, pc}
   15834:	mov	r5, #64	; 0x40
   15838:	b	157d4 <__assert_fail@plt+0x3bac>
   1583c:	mov	r0, r4
   15840:	bl	11bf8 <close@plt>
   15844:	mov	r0, r7
   15848:	pop	{r4, r5, r6, r7, r8, pc}
   1584c:	mvn	r0, #0
   15850:	pop	{r4, r5, r6, r7, r8, pc}
   15854:	mvn	r0, #0
   15858:	pop	{r4, r5, r6, r7, r8, pc}
   1585c:	mov	r0, r7
   15860:	pop	{r4, r5, r6, r7, r8, pc}
   15864:	andeq	r5, r1, r4, asr #13
   15868:	andeq	ip, r1, ip, ror #4
   1586c:	andeq	ip, r1, r0, ror r2

00015870 <daemon@@Base>:
   15870:	push	{r4, lr}
   15874:	mov	r2, #0
   15878:	bl	15700 <__assert_fail@plt+0x3ad8>
   1587c:	cmn	r0, #1
   15880:	movne	r0, #0
   15884:	moveq	r0, #1
   15888:	rsb	r0, r0, #0
   1588c:	pop	{r4, pc}
   15890:	ldr	ip, [r0]
   15894:	cmp	ip, #0
   15898:	beq	158ec <daemon@@Base+0x7c>
   1589c:	push	{r4, r5, r6, lr}
   158a0:	mov	ip, r2
   158a4:	mov	r5, r1
   158a8:	mov	r4, r0
   158ac:	ldr	r2, [r0, #32]
   158b0:	str	r2, [r1, #36]	; 0x24
   158b4:	ldr	r2, [r0, #24]
   158b8:	str	r2, [r1, #28]
   158bc:	ldr	r2, [r0, #28]
   158c0:	str	r2, [r1, #32]
   158c4:	ldr	r2, [r0, #12]
   158c8:	str	r2, [r1, #20]
   158cc:	ldr	r6, [r0]
   158d0:	mov	r2, r1
   158d4:	mov	r1, r3
   158d8:	mov	r0, ip
   158dc:	blx	r6
   158e0:	ldr	r3, [r5, #36]	; 0x24
   158e4:	str	r3, [r4, #32]
   158e8:	pop	{r4, r5, r6, pc}
   158ec:	mov	r0, #7
   158f0:	bx	lr
   158f4:	push	{r4, r5, r6, lr}
   158f8:	ldr	r5, [r0, #16]
   158fc:	ldr	r3, [r0]
   15900:	cmp	r3, #0
   15904:	beq	1591c <daemon@@Base+0xac>
   15908:	ldr	r2, [r1, #8]
   1590c:	add	r2, r2, #1
   15910:	str	r2, [r1, #8]
   15914:	mov	r2, #0
   15918:	b	15970 <daemon@@Base+0x100>
   1591c:	ldr	r3, [r0, #4]
   15920:	cmp	r3, #0
   15924:	ldrne	r3, [r1, #8]
   15928:	addne	r3, r3, #1
   1592c:	strne	r3, [r1, #8]
   15930:	cmp	r5, #0
   15934:	popeq	{r4, r5, r6, pc}
   15938:	ldr	r0, [r5]
   1593c:	cmp	r0, #0
   15940:	popeq	{r4, r5, r6, pc}
   15944:	mov	r4, r1
   15948:	mov	r1, r4
   1594c:	bl	158f4 <daemon@@Base+0x84>
   15950:	ldr	r3, [r4, #12]
   15954:	add	r3, r3, #1
   15958:	str	r3, [r4, #12]
   1595c:	ldr	r0, [r5, #16]!
   15960:	cmp	r0, #0
   15964:	bne	15948 <daemon@@Base+0xd8>
   15968:	pop	{r4, r5, r6, pc}
   1596c:	add	r2, r2, #1
   15970:	add	r3, r3, #24
   15974:	ldr	r0, [r3, #-20]	; 0xffffffec
   15978:	cmp	r0, #0
   1597c:	bne	1596c <daemon@@Base+0xfc>
   15980:	ldr	r0, [r3, #-24]	; 0xffffffe8
   15984:	cmp	r0, #0
   15988:	bne	1596c <daemon@@Base+0xfc>
   1598c:	ldr	r0, [r3, #-8]
   15990:	cmp	r0, #0
   15994:	bne	1596c <daemon@@Base+0xfc>
   15998:	ldr	r0, [r3, #-4]
   1599c:	cmp	r0, #0
   159a0:	bne	1596c <daemon@@Base+0xfc>
   159a4:	add	r0, r2, r2, lsl #1
   159a8:	ldr	r3, [r1]
   159ac:	add	r3, r3, r0
   159b0:	str	r3, [r1]
   159b4:	ldr	r3, [r1, #4]
   159b8:	add	r2, r3, r2
   159bc:	str	r2, [r1, #4]
   159c0:	b	15930 <daemon@@Base+0xc0>
   159c4:	cmp	r0, #86	; 0x56
   159c8:	beq	159d4 <daemon@@Base+0x164>
   159cc:	mov	r0, #7
   159d0:	bx	lr
   159d4:	push	{r4, lr}
   159d8:	mov	r4, r2
   159dc:	ldr	r3, [pc, #100]	; 15a48 <daemon@@Base+0x1d8>
   159e0:	ldr	r3, [r3]
   159e4:	cmp	r3, #0
   159e8:	beq	15a0c <daemon@@Base+0x19c>
   159ec:	mov	r1, r2
   159f0:	ldr	r0, [r2, #48]	; 0x30
   159f4:	blx	r3
   159f8:	ldr	r3, [r4, #16]
   159fc:	tst	r3, #32
   15a00:	beq	15a40 <daemon@@Base+0x1d0>
   15a04:	mov	r0, #0
   15a08:	pop	{r4, pc}
   15a0c:	ldr	r3, [pc, #56]	; 15a4c <daemon@@Base+0x1dc>
   15a10:	ldr	r2, [r3]
   15a14:	cmp	r2, #0
   15a18:	beq	15a2c <daemon@@Base+0x1bc>
   15a1c:	ldr	r1, [pc, #44]	; 15a50 <daemon@@Base+0x1e0>
   15a20:	ldr	r0, [r4, #48]	; 0x30
   15a24:	bl	11a0c <fprintf@plt>
   15a28:	b	159f8 <daemon@@Base+0x188>
   15a2c:	ldr	r2, [pc, #32]	; 15a54 <daemon@@Base+0x1e4>
   15a30:	ldr	r1, [pc, #32]	; 15a58 <daemon@@Base+0x1e8>
   15a34:	mov	r0, r4
   15a38:	bl	1a1a4 <argp_error@@Base>
   15a3c:	b	159f8 <daemon@@Base+0x188>
   15a40:	mov	r0, #0
   15a44:	bl	119c4 <exit@plt>
   15a48:			; <UNDEFINED> instruction: 0x0002d4b0
   15a4c:	andeq	sp, r2, r8, lsl r6
   15a50:	andeq	ip, r1, r8, lsr #10
   15a54:	muleq	r1, r4, r3
   15a58:	andeq	fp, r1, ip, asr #21
   15a5c:	push	{r4, r5, r6, lr}
   15a60:	mov	r4, r2
   15a64:	cmn	r0, #3
   15a68:	beq	15b04 <daemon@@Base+0x294>
   15a6c:	mov	r5, r1
   15a70:	ble	15a9c <daemon@@Base+0x22c>
   15a74:	cmn	r0, #2
   15a78:	beq	15b1c <daemon@@Base+0x2ac>
   15a7c:	cmp	r0, #63	; 0x3f
   15a80:	bne	15b60 <daemon@@Base+0x2f0>
   15a84:	ldr	r2, [pc, #228]	; 15b70 <daemon@@Base+0x300>
   15a88:	ldr	r1, [r4, #48]	; 0x30
   15a8c:	mov	r0, r4
   15a90:	bl	1a0e8 <argp_state_help@@Base>
   15a94:	mov	r0, #0
   15a98:	pop	{r4, r5, r6, pc}
   15a9c:	cmn	r0, #4
   15aa0:	bne	15b60 <daemon@@Base+0x2f0>
   15aa4:	mov	r2, #10
   15aa8:	mov	r1, #0
   15aac:	ldr	r0, [pc, #192]	; 15b74 <daemon@@Base+0x304>
   15ab0:	cmp	r5, r1
   15ab4:	movne	r0, r5
   15ab8:	bl	11760 <strtol@plt>
   15abc:	ldr	r3, [pc, #180]	; 15b78 <daemon@@Base+0x308>
   15ac0:	str	r0, [r3]
   15ac4:	ldr	r2, [r3]
   15ac8:	sub	r1, r2, #1
   15acc:	str	r1, [r3]
   15ad0:	cmp	r2, #0
   15ad4:	ble	15b68 <daemon@@Base+0x2f8>
   15ad8:	mov	r5, #1
   15adc:	mov	r4, r3
   15ae0:	mov	r0, r5
   15ae4:	bl	11850 <sleep@plt>
   15ae8:	ldr	r3, [r4]
   15aec:	sub	r2, r3, #1
   15af0:	str	r2, [r4]
   15af4:	cmp	r3, #0
   15af8:	bgt	15ae0 <daemon@@Base+0x270>
   15afc:	mov	r0, #0
   15b00:	pop	{r4, r5, r6, pc}
   15b04:	ldr	r2, [pc, #112]	; 15b7c <daemon@@Base+0x30c>
   15b08:	ldr	r1, [r4, #48]	; 0x30
   15b0c:	mov	r0, r4
   15b10:	bl	1a0e8 <argp_state_help@@Base>
   15b14:	mov	r0, #0
   15b18:	pop	{r4, r5, r6, pc}
   15b1c:	ldr	r3, [pc, #92]	; 15b80 <daemon@@Base+0x310>
   15b20:	str	r1, [r3]
   15b24:	mov	r0, r1
   15b28:	bl	169ac <argp_parse@@Base+0xb34>
   15b2c:	str	r0, [r4, #40]	; 0x28
   15b30:	ldr	r3, [pc, #76]	; 15b84 <daemon@@Base+0x314>
   15b34:	str	r0, [r3]
   15b38:	ldr	r3, [r4, #16]
   15b3c:	and	r3, r3, #3
   15b40:	cmp	r3, #1
   15b44:	beq	15b50 <daemon@@Base+0x2e0>
   15b48:	mov	r0, #0
   15b4c:	pop	{r4, r5, r6, pc}
   15b50:	ldr	r3, [r4, #8]
   15b54:	str	r5, [r3]
   15b58:	mov	r0, #0
   15b5c:	pop	{r4, r5, r6, pc}
   15b60:	mov	r0, #7
   15b64:	pop	{r4, r5, r6, pc}
   15b68:	mov	r0, #0
   15b6c:	pop	{r4, r5, r6, pc}
   15b70:	andeq	r0, r0, sl, ror r2
   15b74:			; <UNDEFINED> instruction: 0x0001c3b8
   15b78:	andeq	sp, r2, ip, lsr #9
   15b7c:	andeq	r0, r0, r1, lsl #4
   15b80:	andeq	sp, r2, ip, lsr #7
   15b84:	andeq	sp, r2, r8, lsr #7
   15b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b8c:	sub	sp, sp, #36	; 0x24
   15b90:	str	r0, [sp, #12]
   15b94:	str	r1, [sp, #16]
   15b98:	str	r2, [sp, #20]
   15b9c:	mov	r8, r3
   15ba0:	ldr	sl, [sp, #72]	; 0x48
   15ba4:	ldr	r9, [r0]
   15ba8:	ldr	r5, [r0, #16]
   15bac:	cmp	r9, #0
   15bb0:	addne	r6, r9, #24
   15bb4:	strne	r5, [sp, #28]
   15bb8:	strne	r8, [sp, #24]
   15bbc:	bne	15cc8 <daemon@@Base+0x458>
   15bc0:	ldr	r3, [sp, #12]
   15bc4:	ldr	r3, [r3, #4]
   15bc8:	cmp	r3, #0
   15bcc:	moveq	r0, r8
   15bd0:	moveq	r8, #0
   15bd4:	beq	15c54 <daemon@@Base+0x3e4>
   15bd8:	ldr	r2, [sp, #12]
   15bdc:	ldr	r3, [r2, #4]
   15be0:	str	r3, [r8]
   15be4:	str	r2, [r8, #4]
   15be8:	ldr	r3, [sl, #4]
   15bec:	str	r3, [r8, #8]
   15bf0:	mov	r3, #0
   15bf4:	str	r3, [r8, #12]
   15bf8:	ldr	r2, [sp, #16]
   15bfc:	str	r2, [r8, #16]
   15c00:	ldr	r2, [sp, #20]
   15c04:	str	r2, [r8, #20]
   15c08:	str	r3, [r8, #24]
   15c0c:	str	r3, [r8, #32]
   15c10:	str	r3, [r8, #28]
   15c14:	cmp	r5, r3
   15c18:	beq	15c50 <daemon@@Base+0x3e0>
   15c1c:	ldr	r3, [r5]
   15c20:	cmp	r3, #0
   15c24:	beq	15e70 <daemon@@Base+0x600>
   15c28:	mov	r3, #0
   15c2c:	add	r3, r3, #1
   15c30:	ldr	r2, [r5, r3, lsl #4]
   15c34:	cmp	r2, #0
   15c38:	bne	15c2c <daemon@@Base+0x3bc>
   15c3c:	ldr	r2, [sl, #12]
   15c40:	str	r2, [r8, #28]
   15c44:	ldr	r2, [sl, #12]
   15c48:	add	r3, r2, r3, lsl #2
   15c4c:	str	r3, [sl, #12]
   15c50:	add	r0, r8, #36	; 0x24
   15c54:	cmp	r5, #0
   15c58:	beq	15c94 <daemon@@Base+0x424>
   15c5c:	ldr	ip, [r5]
   15c60:	cmp	ip, #0
   15c64:	beq	15c94 <daemon@@Base+0x424>
   15c68:	mov	r2, #0
   15c6c:	add	r4, r2, #1
   15c70:	str	sl, [sp]
   15c74:	mov	r3, r0
   15c78:	mov	r1, r8
   15c7c:	mov	r0, ip
   15c80:	bl	15b88 <daemon@@Base+0x318>
   15c84:	ldr	ip, [r5, r4, lsl #4]
   15c88:	mov	r2, r4
   15c8c:	cmp	ip, #0
   15c90:	bne	15c6c <daemon@@Base+0x3fc>
   15c94:	add	sp, sp, #36	; 0x24
   15c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15c9c:	ldr	r0, [r4, #16]!
   15ca0:	cmp	r0, #0
   15ca4:	beq	15db0 <daemon@@Base+0x540>
   15ca8:	mov	r1, r7
   15cac:	bl	11754 <strcmp@plt>
   15cb0:	cmp	r0, #0
   15cb4:	bne	15c9c <daemon@@Base+0x42c>
   15cb8:	sub	r4, r4, fp
   15cbc:	cmn	r4, #15
   15cc0:	blt	15db0 <daemon@@Base+0x540>
   15cc4:	add	r6, r6, #24
   15cc8:	sub	r2, r6, #24
   15ccc:	mov	r8, r6
   15cd0:	ldr	r4, [r6, #-20]	; 0xffffffec
   15cd4:	cmp	r4, #0
   15cd8:	bne	15ce8 <daemon@@Base+0x478>
   15cdc:	ldr	r3, [r6, #-24]	; 0xffffffe8
   15ce0:	cmp	r3, #0
   15ce4:	beq	15e4c <daemon@@Base+0x5dc>
   15ce8:	ldr	r3, [r8, #-12]
   15cec:	and	r1, r3, #4
   15cf0:	cmp	r1, #0
   15cf4:	moveq	r9, r2
   15cf8:	ldr	r5, [r9, #12]
   15cfc:	ands	r5, r5, #8
   15d00:	bne	15cc4 <daemon@@Base+0x454>
   15d04:	tst	r3, #8
   15d08:	bne	15d8c <daemon@@Base+0x51c>
   15d0c:	sub	r3, r4, #1
   15d10:	cmp	r3, #254	; 0xfe
   15d14:	bhi	15d8c <daemon@@Base+0x51c>
   15d18:	bl	119ac <__ctype_b_loc@plt>
   15d1c:	ldr	r3, [r0]
   15d20:	lsl	r4, r4, #1
   15d24:	ldrh	r3, [r3, r4]
   15d28:	tst	r3, #16384	; 0x4000
   15d2c:	beq	15d8c <daemon@@Base+0x51c>
   15d30:	ldr	r3, [sl, #4]
   15d34:	add	r2, r3, #1
   15d38:	str	r2, [sl, #4]
   15d3c:	ldr	r2, [r8, #-20]	; 0xffffffec
   15d40:	strb	r2, [r3]
   15d44:	ldr	r3, [r9, #8]
   15d48:	cmp	r3, #0
   15d4c:	beq	15d80 <daemon@@Base+0x510>
   15d50:	ldr	r3, [sl, #4]
   15d54:	add	r2, r3, #1
   15d58:	str	r2, [sl, #4]
   15d5c:	mov	r2, #58	; 0x3a
   15d60:	strb	r2, [r3]
   15d64:	ldr	r3, [r9, #12]
   15d68:	tst	r3, #1
   15d6c:	ldrne	r3, [sl, #4]
   15d70:	addne	r2, r3, #1
   15d74:	strne	r2, [sl, #4]
   15d78:	movne	r2, #58	; 0x3a
   15d7c:	strbne	r2, [r3]
   15d80:	ldr	r3, [sl, #4]
   15d84:	mov	r2, #0
   15d88:	strb	r2, [r3]
   15d8c:	ldr	r7, [r8, #-24]	; 0xffffffe8
   15d90:	cmp	r7, #0
   15d94:	beq	15cc4 <daemon@@Base+0x454>
   15d98:	ldr	r3, [sl]
   15d9c:	ldr	fp, [r3, #8]
   15da0:	ldr	r0, [fp]
   15da4:	cmp	r0, #0
   15da8:	movne	r4, fp
   15dac:	bne	15ca8 <daemon@@Base+0x438>
   15db0:	ldr	r3, [sl, #8]
   15db4:	str	r7, [r3]
   15db8:	ldr	r3, [sl, #8]
   15dbc:	ldr	r2, [r9, #8]
   15dc0:	cmp	r2, #0
   15dc4:	beq	15ddc <daemon@@Base+0x56c>
   15dc8:	ldr	r5, [r9, #12]
   15dcc:	and	r5, r5, #1
   15dd0:	cmp	r5, #0
   15dd4:	movne	r5, #2
   15dd8:	moveq	r5, #1
   15ddc:	str	r5, [r3, #4]
   15de0:	ldr	r3, [sl, #8]
   15de4:	mov	r2, #0
   15de8:	str	r2, [r3, #8]
   15dec:	ldr	r1, [sl, #8]
   15df0:	ldr	r0, [r8, #-20]	; 0xffffffec
   15df4:	cmp	r0, r2
   15df8:	ldreq	r0, [r9, #4]
   15dfc:	bic	r0, r0, #-16777216	; 0xff000000
   15e00:	ldr	r3, [sl]
   15e04:	ldr	r3, [r3, #48]	; 0x30
   15e08:	ldr	r2, [sp, #24]
   15e0c:	sub	r3, r2, r3
   15e10:	asr	r3, r3, #2
   15e14:	rsb	r2, r3, r3, lsl #3
   15e18:	add	r2, r2, r2, lsl #6
   15e1c:	add	r2, r3, r2, lsl #3
   15e20:	rsb	r2, r2, r2, lsl #15
   15e24:	add	r3, r3, r2, lsl #3
   15e28:	add	r3, r3, #1
   15e2c:	add	r3, r0, r3, lsl #24
   15e30:	str	r3, [r1, #12]
   15e34:	ldr	r3, [sl, #8]
   15e38:	add	r2, r3, #16
   15e3c:	str	r2, [sl, #8]
   15e40:	mov	r2, #0
   15e44:	str	r2, [r3, #16]
   15e48:	b	15cc4 <daemon@@Base+0x454>
   15e4c:	ldr	r3, [r6, #-8]
   15e50:	cmp	r3, #0
   15e54:	bne	15ce8 <daemon@@Base+0x478>
   15e58:	ldr	r3, [r6, #-4]
   15e5c:	cmp	r3, #0
   15e60:	bne	15ce8 <daemon@@Base+0x478>
   15e64:	ldr	r5, [sp, #28]
   15e68:	ldr	r8, [sp, #24]
   15e6c:	b	15bd8 <daemon@@Base+0x368>
   15e70:	mov	r3, #0
   15e74:	b	15c3c <daemon@@Base+0x3cc>

00015e78 <argp_parse@@Base>:
   15e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e7c:	add	fp, sp, #32
   15e80:	sub	sp, sp, #220	; 0xdc
   15e84:	mov	r8, r0
   15e88:	str	r1, [fp, #-236]	; 0xffffff14
   15e8c:	str	r2, [fp, #-232]	; 0xffffff18
   15e90:	mov	r6, r3
   15e94:	tst	r3, #1
   15e98:	bne	15ec8 <argp_parse@@Base+0x50>
   15e9c:	ldr	r3, [pc, #2548]	; 16898 <argp_parse@@Base+0xa20>
   15ea0:	ldr	r3, [r3]
   15ea4:	cmp	r3, #0
   15ea8:	moveq	r3, r2
   15eac:	ldreq	r2, [r3]
   15eb0:	ldreq	r3, [pc, #2528]	; 16898 <argp_parse@@Base+0xa20>
   15eb4:	streq	r2, [r3]
   15eb8:	ldr	r3, [pc, #2524]	; 1689c <argp_parse@@Base+0xa24>
   15ebc:	ldr	r3, [r3]
   15ec0:	cmp	r3, #0
   15ec4:	beq	160b8 <argp_parse@@Base+0x240>
   15ec8:	tst	r6, #16
   15ecc:	beq	160d0 <argp_parse@@Base+0x258>
   15ed0:	mov	r2, #36	; 0x24
   15ed4:	mov	r1, #0
   15ed8:	sub	r0, fp, #196	; 0xc4
   15edc:	bl	11a54 <memset@plt>
   15ee0:	ands	r3, r6, #4
   15ee4:	str	r3, [fp, #-240]	; 0xffffff10
   15ee8:	moveq	r3, #1
   15eec:	movne	r3, #0
   15ef0:	str	r3, [fp, #-228]	; 0xffffff1c
   15ef4:	mov	r3, #0
   15ef8:	str	r3, [fp, #-224]	; 0xffffff20
   15efc:	str	r3, [fp, #-220]	; 0xffffff24
   15f00:	str	r3, [fp, #-216]	; 0xffffff28
   15f04:	cmp	r8, r3
   15f08:	beq	15f18 <argp_parse@@Base+0xa0>
   15f0c:	sub	r1, fp, #228	; 0xe4
   15f10:	mov	r0, r8
   15f14:	bl	158f4 <daemon@@Base+0x84>
   15f18:	ldr	r4, [fp, #-220]	; 0xffffff24
   15f1c:	add	r4, r4, #1
   15f20:	add	r4, r4, r4, lsl #3
   15f24:	lsl	r4, r4, #2
   15f28:	ldr	r9, [fp, #-216]	; 0xffffff28
   15f2c:	lsl	r9, r9, #2
   15f30:	add	sl, r9, r4
   15f34:	ldr	r5, [fp, #-224]	; 0xffffff20
   15f38:	add	r5, r5, #1
   15f3c:	add	r5, sl, r5, lsl #4
   15f40:	ldr	r0, [fp, #-228]	; 0xffffff1c
   15f44:	add	r0, r0, #1
   15f48:	add	r0, r0, r5
   15f4c:	bl	170a4 <argp_parse@@Base+0x122c>
   15f50:	mov	r7, r0
   15f54:	str	r0, [fp, #-40]	; 0xffffffd8
   15f58:	cmp	r0, #0
   15f5c:	moveq	r4, #12
   15f60:	beq	166e8 <argp_parse@@Base+0x870>
   15f64:	str	r0, [fp, #-112]	; 0xffffff90
   15f68:	add	r4, r0, r4
   15f6c:	str	r4, [fp, #-104]	; 0xffffff98
   15f70:	add	r3, r0, sl
   15f74:	str	r3, [fp, #-244]	; 0xffffff0c
   15f78:	str	r3, [fp, #-152]	; 0xffffff68
   15f7c:	add	sl, r0, r5
   15f80:	str	sl, [fp, #-156]	; 0xffffff64
   15f84:	mov	r3, #1
   15f88:	str	r3, [fp, #-196]	; 0xffffff3c
   15f8c:	str	r3, [fp, #-192]	; 0xffffff40
   15f90:	sub	ip, fp, #148	; 0x94
   15f94:	sub	lr, fp, #196	; 0xc4
   15f98:	ldm	lr!, {r0, r1, r2, r3}
   15f9c:	stmia	ip!, {r0, r1, r2, r3}
   15fa0:	ldm	lr!, {r0, r1, r2, r3}
   15fa4:	stmia	ip!, {r0, r1, r2, r3}
   15fa8:	ldr	r3, [lr]
   15fac:	str	r3, [ip]
   15fb0:	mov	r2, r9
   15fb4:	mov	r1, #0
   15fb8:	mov	r0, r4
   15fbc:	bl	11a54 <memset@plt>
   15fc0:	sub	r3, fp, #160	; 0xa0
   15fc4:	str	r3, [fp, #-212]	; 0xffffff2c
   15fc8:	str	sl, [fp, #-208]	; 0xffffff30
   15fcc:	ldr	r3, [fp, #-244]	; 0xffffff0c
   15fd0:	str	r3, [fp, #-204]	; 0xffffff34
   15fd4:	str	r4, [fp, #-200]	; 0xffffff38
   15fd8:	tst	r6, #8
   15fdc:	beq	16168 <argp_parse@@Base+0x2f0>
   15fe0:	add	sl, sl, #1
   15fe4:	str	sl, [fp, #-208]	; 0xffffff30
   15fe8:	mov	r3, #45	; 0x2d
   15fec:	strb	r3, [r7, r5]
   15ff0:	mov	r3, #0
   15ff4:	ldr	r2, [fp, #-208]	; 0xffffff30
   15ff8:	strb	r3, [r2]
   15ffc:	ldr	r2, [fp, #-204]	; 0xffffff34
   16000:	str	r3, [r2]
   16004:	str	r8, [fp, #-160]	; 0xffffff60
   16008:	cmp	r8, r3
   1600c:	beq	16184 <argp_parse@@Base+0x30c>
   16010:	sub	r3, fp, #212	; 0xd4
   16014:	str	r3, [sp]
   16018:	ldr	r3, [fp, #-112]	; 0xffffff90
   1601c:	mov	r2, #0
   16020:	mov	r1, r2
   16024:	mov	r0, r8
   16028:	bl	15b88 <daemon@@Base+0x318>
   1602c:	str	r0, [fp, #-108]	; 0xffffff94
   16030:	mov	r2, #56	; 0x38
   16034:	mov	r1, #0
   16038:	sub	r0, fp, #96	; 0x60
   1603c:	bl	11a54 <memset@plt>
   16040:	ldr	r3, [fp, #-160]	; 0xffffff60
   16044:	str	r3, [fp, #-96]	; 0xffffffa0
   16048:	ldr	r3, [fp, #-236]	; 0xffffff14
   1604c:	str	r3, [fp, #-92]	; 0xffffffa4
   16050:	ldr	r3, [fp, #-232]	; 0xffffff18
   16054:	str	r3, [fp, #-88]	; 0xffffffa8
   16058:	str	r6, [fp, #-80]	; 0xffffffb0
   1605c:	ldr	r3, [pc, #2108]	; 168a0 <argp_parse@@Base+0xa28>
   16060:	ldr	r3, [r3]
   16064:	str	r3, [fp, #-52]	; 0xffffffcc
   16068:	ldr	r3, [pc, #2100]	; 168a4 <argp_parse@@Base+0xa2c>
   1606c:	ldr	r3, [r3]
   16070:	str	r3, [fp, #-48]	; 0xffffffd0
   16074:	sub	r3, fp, #160	; 0xa0
   16078:	str	r3, [fp, #-44]	; 0xffffffd4
   1607c:	mov	r3, #1
   16080:	str	r3, [fp, #-100]	; 0xffffff9c
   16084:	ldr	r3, [fp, #-112]	; 0xffffff90
   16088:	ldr	r2, [fp, #-108]	; 0xffffff94
   1608c:	cmp	r3, r2
   16090:	bcs	1621c <argp_parse@@Base+0x3a4>
   16094:	ldr	r2, [fp, #8]
   16098:	str	r2, [r3, #24]
   1609c:	ldr	r5, [fp, #-112]	; 0xffffff90
   160a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   160a4:	cmp	r5, r3
   160a8:	bcs	16228 <argp_parse@@Base+0x3b0>
   160ac:	ldr	r7, [pc, #2036]	; 168a8 <argp_parse@@Base+0xa30>
   160b0:	mov	r6, #0
   160b4:	b	161c0 <argp_parse@@Base+0x348>
   160b8:	ldr	r3, [fp, #-232]	; 0xffffff18
   160bc:	ldr	r0, [r3]
   160c0:	bl	169ac <argp_parse@@Base+0xb34>
   160c4:	ldr	r3, [pc, #2000]	; 1689c <argp_parse@@Base+0xa24>
   160c8:	str	r0, [r3]
   160cc:	b	15ec8 <argp_parse@@Base+0x50>
   160d0:	sub	sp, sp, #72	; 0x48
   160d4:	add	r5, sp, #8
   160d8:	sub	sp, sp, #40	; 0x28
   160dc:	add	r4, sp, #8
   160e0:	mov	r1, #0
   160e4:	str	r1, [r4]
   160e8:	str	r1, [r4, #4]
   160ec:	str	r1, [r4, #8]
   160f0:	str	r1, [r4, #12]
   160f4:	str	r1, [r4, #20]
   160f8:	str	r1, [r4, #24]
   160fc:	str	r5, [r4, #16]
   16100:	mov	r2, #64	; 0x40
   16104:	mov	r0, r5
   16108:	bl	11a54 <memset@plt>
   1610c:	cmp	r8, #0
   16110:	addne	r3, r5, #16
   16114:	strne	r8, [r5]
   16118:	moveq	r3, r5
   1611c:	ldr	r2, [pc, #1928]	; 168ac <argp_parse@@Base+0xa34>
   16120:	str	r2, [r3]
   16124:	ldr	r2, [pc, #1924]	; 168b0 <argp_parse@@Base+0xa38>
   16128:	ldr	r2, [r2]
   1612c:	cmp	r2, #0
   16130:	beq	16150 <argp_parse@@Base+0x2d8>
   16134:	add	r2, r3, #32
   16138:	ldr	r1, [pc, #1908]	; 168b4 <argp_parse@@Base+0xa3c>
   1613c:	str	r1, [r3, #16]
   16140:	mov	r3, #0
   16144:	str	r3, [r2]
   16148:	mov	r8, r4
   1614c:	b	15ed0 <argp_parse@@Base+0x58>
   16150:	ldr	r2, [pc, #1888]	; 168b8 <argp_parse@@Base+0xa40>
   16154:	ldr	r2, [r2]
   16158:	cmp	r2, #0
   1615c:	addeq	r2, r3, #16
   16160:	bne	16134 <argp_parse@@Base+0x2bc>
   16164:	b	16140 <argp_parse@@Base+0x2c8>
   16168:	ldr	r3, [fp, #-240]	; 0xffffff10
   1616c:	cmp	r3, #0
   16170:	addne	sl, sl, #1
   16174:	strne	sl, [fp, #-208]	; 0xffffff30
   16178:	movne	r3, #43	; 0x2b
   1617c:	strbne	r3, [r7, r5]
   16180:	b	15ff0 <argp_parse@@Base+0x178>
   16184:	ldr	r3, [fp, #-112]	; 0xffffff90
   16188:	str	r3, [fp, #-108]	; 0xffffff94
   1618c:	b	16030 <argp_parse@@Base+0x1b8>
   16190:	mov	r3, r6
   16194:	mov	r2, r7
   16198:	sub	r1, fp, #96	; 0x60
   1619c:	mov	r0, r5
   161a0:	bl	15890 <daemon@@Base+0x20>
   161a4:	add	r5, r5, #36	; 0x24
   161a8:	ldr	r3, [fp, #-108]	; 0xffffff94
   161ac:	cmp	r5, r3
   161b0:	bcs	1620c <argp_parse@@Base+0x394>
   161b4:	cmp	r0, #7
   161b8:	cmpne	r0, #0
   161bc:	bne	1620c <argp_parse@@Base+0x394>
   161c0:	ldr	r3, [r5, #16]
   161c4:	cmp	r3, #0
   161c8:	ldrne	r2, [r5, #20]
   161cc:	ldrne	r3, [r3, #28]
   161d0:	ldrne	r3, [r3, r2, lsl #2]
   161d4:	strne	r3, [r5, #24]
   161d8:	ldr	r3, [r5]
   161dc:	cmp	r3, #0
   161e0:	bne	16190 <argp_parse@@Base+0x318>
   161e4:	ldr	r3, [r5, #4]
   161e8:	ldr	r3, [r3, #16]
   161ec:	cmp	r3, #0
   161f0:	beq	16190 <argp_parse@@Base+0x318>
   161f4:	ldr	r3, [r3]
   161f8:	cmp	r3, #0
   161fc:	ldrne	r3, [r5, #28]
   16200:	ldrne	r2, [r5, #24]
   16204:	strne	r2, [r3]
   16208:	b	16190 <argp_parse@@Base+0x318>
   1620c:	mov	r4, r0
   16210:	cmp	r0, #7
   16214:	beq	16228 <argp_parse@@Base+0x3b0>
   16218:	b	16220 <argp_parse@@Base+0x3a8>
   1621c:	mov	r4, #0
   16220:	cmp	r4, #0
   16224:	bne	166e8 <argp_parse@@Base+0x870>
   16228:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1622c:	tst	r3, #2
   16230:	moveq	r3, #1
   16234:	streq	r3, [fp, #-144]	; 0xffffff70
   16238:	beq	16264 <argp_parse@@Base+0x3ec>
   1623c:	mov	r2, #0
   16240:	str	r2, [fp, #-144]	; 0xffffff70
   16244:	tst	r3, #1
   16248:	beq	16264 <argp_parse@@Base+0x3ec>
   1624c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16250:	sub	r3, r3, #4
   16254:	str	r3, [fp, #-88]	; 0xffffffa8
   16258:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1625c:	add	r3, r3, #1
   16260:	str	r3, [fp, #-92]	; 0xffffffa4
   16264:	ldr	r3, [fp, #-88]	; 0xffffffa8
   16268:	ldr	r2, [fp, #-232]	; 0xffffff18
   1626c:	cmp	r2, r3
   16270:	beq	16290 <argp_parse@@Base+0x418>
   16274:	ldr	r3, [pc, #1568]	; 1689c <argp_parse@@Base+0xa24>
   16278:	ldr	r3, [r3]
   1627c:	str	r3, [fp, #-56]	; 0xffffffc8
   16280:	mov	r6, #0
   16284:	mov	sl, #1
   16288:	mvn	r9, #0
   1628c:	b	16500 <argp_parse@@Base+0x688>
   16290:	ldr	r0, [r2]
   16294:	cmp	r0, #0
   16298:	beq	16274 <argp_parse@@Base+0x3fc>
   1629c:	bl	169ac <argp_parse@@Base+0xb34>
   162a0:	str	r0, [fp, #-56]	; 0xffffffc8
   162a4:	b	16280 <argp_parse@@Base+0x408>
   162a8:	ldr	r3, [fp, #-84]	; 0xffffffac
   162ac:	str	r3, [fp, #-148]	; 0xffffff6c
   162b0:	str	r9, [fp, #-140]	; 0xffffff74
   162b4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   162b8:	tst	r3, #64	; 0x40
   162bc:	beq	16388 <argp_parse@@Base+0x510>
   162c0:	sub	r3, fp, #148	; 0x94
   162c4:	str	r3, [sp, #4]
   162c8:	str	r6, [sp]
   162cc:	ldr	r3, [fp, #-152]	; 0xffffff68
   162d0:	ldr	r2, [fp, #-156]	; 0xffffff64
   162d4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   162d8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   162dc:	bl	16b48 <argp_parse@@Base+0xcd0>
   162e0:	mov	r5, r0
   162e4:	ldr	r4, [fp, #-148]	; 0xffffff6c
   162e8:	str	r4, [fp, #-84]	; 0xffffffac
   162ec:	cmn	r5, #1
   162f0:	beq	163b0 <argp_parse@@Base+0x538>
   162f4:	cmp	r5, #63	; 0x3f
   162f8:	beq	163dc <argp_parse@@Base+0x564>
   162fc:	cmp	r5, #1
   16300:	beq	16414 <argp_parse@@Base+0x59c>
   16304:	ldr	r4, [fp, #-136]	; 0xffffff78
   16308:	asrs	r3, r5, #24
   1630c:	bne	164c0 <argp_parse@@Base+0x648>
   16310:	mov	r1, r5
   16314:	ldr	r0, [fp, #-156]	; 0xffffff64
   16318:	bl	119f4 <strchr@plt>
   1631c:	subs	r1, r0, #0
   16320:	beq	16370 <argp_parse@@Base+0x4f8>
   16324:	ldr	r0, [fp, #-112]	; 0xffffff90
   16328:	ldr	r2, [fp, #-108]	; 0xffffff94
   1632c:	cmp	r2, r0
   16330:	bls	16370 <argp_parse@@Base+0x4f8>
   16334:	ldr	r3, [r0, #8]
   16338:	cmp	r1, r3
   1633c:	bcc	16358 <argp_parse@@Base+0x4e0>
   16340:	add	r0, r0, #36	; 0x24
   16344:	cmp	r2, r0
   16348:	bls	16370 <argp_parse@@Base+0x4f8>
   1634c:	ldr	r3, [r0, #8]
   16350:	cmp	r1, r3
   16354:	bcs	16340 <argp_parse@@Base+0x4c8>
   16358:	mov	r3, r4
   1635c:	mov	r2, r5
   16360:	sub	r1, fp, #96	; 0x60
   16364:	bl	15890 <daemon@@Base+0x20>
   16368:	cmp	r0, #7
   1636c:	bne	164f8 <argp_parse@@Base+0x680>
   16370:	ldr	r3, [pc, #1348]	; 168bc <argp_parse@@Base+0xa44>
   16374:	mov	r2, r5
   16378:	ldr	r1, [pc, #1344]	; 168c0 <argp_parse@@Base+0xa48>
   1637c:	sub	r0, fp, #96	; 0x60
   16380:	bl	1a1a4 <argp_error@@Base>
   16384:	b	165a0 <argp_parse@@Base+0x728>
   16388:	sub	r3, fp, #148	; 0x94
   1638c:	str	r3, [sp, #4]
   16390:	str	r6, [sp]
   16394:	ldr	r3, [fp, #-152]	; 0xffffff68
   16398:	ldr	r2, [fp, #-156]	; 0xffffff64
   1639c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   163a0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   163a4:	bl	16aec <argp_parse@@Base+0xc74>
   163a8:	mov	r5, r0
   163ac:	b	162e4 <argp_parse@@Base+0x46c>
   163b0:	str	r6, [fp, #-100]	; 0xffffff9c
   163b4:	cmp	r4, #1
   163b8:	ble	16528 <argp_parse@@Base+0x6b0>
   163bc:	sub	r3, r4, #-1073741823	; 0xc0000001
   163c0:	ldr	r1, [pc, #1276]	; 168c4 <argp_parse@@Base+0xa4c>
   163c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   163c8:	ldr	r0, [r2, r3, lsl #2]
   163cc:	bl	11754 <strcmp@plt>
   163d0:	cmp	r0, #0
   163d4:	streq	r4, [fp, #-72]	; 0xffffffb8
   163d8:	b	16528 <argp_parse@@Base+0x6b0>
   163dc:	ldr	r3, [fp, #-140]	; 0xffffff74
   163e0:	cmn	r3, #1
   163e4:	beq	16304 <argp_parse@@Base+0x48c>
   163e8:	mov	r3, #0
   163ec:	b	165b0 <argp_parse@@Base+0x738>
   163f0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   163f4:	tst	r2, #4
   163f8:	movne	r3, #1
   163fc:	bne	165b0 <argp_parse@@Base+0x738>
   16400:	add	r2, r3, #1
   16404:	str	r2, [fp, #-84]	; 0xffffffac
   16408:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1640c:	ldr	r3, [r2, r3, lsl #2]
   16410:	str	r3, [fp, #-136]	; 0xffffff78
   16414:	ldr	r7, [fp, #-136]	; 0xffffff78
   16418:	ldr	r8, [fp, #-84]	; 0xffffffac
   1641c:	sub	r8, r8, #1
   16420:	str	r8, [fp, #-84]	; 0xffffffac
   16424:	ldr	r5, [fp, #-112]	; 0xffffff90
   16428:	ldr	r3, [fp, #-108]	; 0xffffff94
   1642c:	cmp	r3, r5
   16430:	bhi	1647c <argp_parse@@Base+0x604>
   16434:	b	164b8 <argp_parse@@Base+0x640>
   16438:	ldr	r3, [fp, #-84]	; 0xffffffac
   1643c:	sub	r3, r3, #1
   16440:	str	r3, [fp, #-84]	; 0xffffffac
   16444:	mov	r3, r6
   16448:	ldr	r2, [pc, #1144]	; 168c8 <argp_parse@@Base+0xa50>
   1644c:	sub	r1, fp, #96	; 0x60
   16450:	mov	r0, r5
   16454:	bl	15890 <daemon@@Base+0x20>
   16458:	add	r5, r5, #36	; 0x24
   1645c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16460:	cmp	r5, r3
   16464:	movcs	r3, #0
   16468:	movcc	r3, #1
   1646c:	cmp	r0, #7
   16470:	movne	r3, #0
   16474:	cmp	r3, #0
   16478:	beq	1685c <argp_parse@@Base+0x9e4>
   1647c:	ldr	r3, [fp, #-84]	; 0xffffffac
   16480:	add	r3, r3, #1
   16484:	str	r3, [fp, #-84]	; 0xffffffac
   16488:	mov	r3, r7
   1648c:	mov	r2, r6
   16490:	sub	r1, fp, #96	; 0x60
   16494:	mov	r0, r5
   16498:	bl	15890 <daemon@@Base+0x20>
   1649c:	cmp	r0, #7
   164a0:	beq	16438 <argp_parse@@Base+0x5c0>
   164a4:	add	r5, r5, #36	; 0x24
   164a8:	cmp	r0, #0
   164ac:	beq	1686c <argp_parse@@Base+0x9f4>
   164b0:	cmp	r0, #7
   164b4:	bne	164f8 <argp_parse@@Base+0x680>
   164b8:	mov	r5, #1
   164bc:	b	165a0 <argp_parse@@Base+0x728>
   164c0:	ands	r1, r5, #8388608	; 0x800000
   164c4:	movne	r1, #-16777216	; 0xff000000
   164c8:	bic	r2, r5, #-16777216	; 0xff000000
   164cc:	add	r0, r3, r3, lsl #3
   164d0:	lsl	r0, r0, #2
   164d4:	sub	r0, r0, #36	; 0x24
   164d8:	mov	r3, r4
   164dc:	orr	r2, r2, r1
   164e0:	sub	r1, fp, #96	; 0x60
   164e4:	ldr	ip, [fp, #-112]	; 0xffffff90
   164e8:	add	r0, ip, r0
   164ec:	bl	15890 <daemon@@Base+0x20>
   164f0:	cmp	r0, #7
   164f4:	beq	16540 <argp_parse@@Base+0x6c8>
   164f8:	cmp	r0, #0
   164fc:	bne	16650 <argp_parse@@Base+0x7d8>
   16500:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16504:	cmp	r3, #0
   16508:	beq	1651c <argp_parse@@Base+0x6a4>
   1650c:	ldr	r2, [fp, #-84]	; 0xffffffac
   16510:	cmp	r3, r2
   16514:	strgt	r6, [fp, #-72]	; 0xffffffb8
   16518:	ble	16528 <argp_parse@@Base+0x6b0>
   1651c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16520:	cmp	r3, #0
   16524:	bne	162a8 <argp_parse@@Base+0x430>
   16528:	ldr	r3, [fp, #-84]	; 0xffffffac
   1652c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16530:	cmp	r3, r2
   16534:	blt	163f0 <argp_parse@@Base+0x578>
   16538:	mov	r3, #1
   1653c:	b	165b0 <argp_parse@@Base+0x738>
   16540:	ldr	r3, [fp, #-152]	; 0xffffff68
   16544:	ldr	r2, [r3, #12]
   16548:	cmp	r2, r5
   1654c:	beq	16580 <argp_parse@@Base+0x708>
   16550:	ldr	r2, [r3]
   16554:	cmp	r2, #0
   16558:	beq	16648 <argp_parse@@Base+0x7d0>
   1655c:	add	r3, r3, #16
   16560:	ldr	r2, [r3, #12]
   16564:	cmp	r2, r5
   16568:	beq	16580 <argp_parse@@Base+0x708>
   1656c:	ldr	r2, [r3]
   16570:	cmp	r2, #0
   16574:	bne	1655c <argp_parse@@Base+0x6e4>
   16578:	ldr	r2, [pc, #844]	; 168cc <argp_parse@@Base+0xa54>
   1657c:	b	16590 <argp_parse@@Base+0x718>
   16580:	ldr	r2, [r3]
   16584:	ldr	r3, [pc, #832]	; 168cc <argp_parse@@Base+0xa54>
   16588:	cmp	r2, #0
   1658c:	moveq	r2, r3
   16590:	ldr	r3, [pc, #804]	; 168bc <argp_parse@@Base+0xa44>
   16594:	ldr	r1, [pc, #820]	; 168d0 <argp_parse@@Base+0xa58>
   16598:	sub	r0, fp, #96	; 0x60
   1659c:	bl	1a1a4 <argp_error@@Base>
   165a0:	add	r5, r5, #1
   165a4:	bics	r3, r5, #2
   165a8:	moveq	r3, #1
   165ac:	movne	r3, #0
   165b0:	cmp	r3, #0
   165b4:	moveq	r4, #7
   165b8:	beq	16654 <argp_parse@@Base+0x7dc>
   165bc:	ldr	r3, [fp, #-84]	; 0xffffffac
   165c0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   165c4:	cmp	r3, r2
   165c8:	beq	166f4 <argp_parse@@Base+0x87c>
   165cc:	ldr	r2, [fp, #4]
   165d0:	cmp	r2, #0
   165d4:	strne	r3, [r2]
   165d8:	beq	167f0 <argp_parse@@Base+0x978>
   165dc:	ldr	r5, [fp, #-108]	; 0xffffff94
   165e0:	sub	r5, r5, #36	; 0x24
   165e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   165e8:	cmp	r5, r3
   165ec:	bcc	1682c <argp_parse@@Base+0x9b4>
   165f0:	ldr	r7, [pc, #732]	; 168d4 <argp_parse@@Base+0xa5c>
   165f4:	mov	r6, #0
   165f8:	mov	r3, r6
   165fc:	mov	r2, r7
   16600:	sub	r1, fp, #96	; 0x60
   16604:	mov	r0, r5
   16608:	bl	15890 <daemon@@Base+0x20>
   1660c:	sub	r5, r5, #36	; 0x24
   16610:	ldr	r3, [fp, #-112]	; 0xffffff90
   16614:	cmp	r5, r3
   16618:	bcc	16628 <argp_parse@@Base+0x7b0>
   1661c:	cmp	r0, #7
   16620:	cmpne	r0, #0
   16624:	beq	165f8 <argp_parse@@Base+0x780>
   16628:	mov	r4, r0
   1662c:	cmp	r0, #7
   16630:	moveq	r4, #0
   16634:	ldr	r5, [fp, #-108]	; 0xffffff94
   16638:	sub	r5, r5, #36	; 0x24
   1663c:	cmp	r3, r5
   16640:	bls	166ac <argp_parse@@Base+0x834>
   16644:	b	166e0 <argp_parse@@Base+0x868>
   16648:	ldr	r2, [pc, #636]	; 168cc <argp_parse@@Base+0xa54>
   1664c:	b	16590 <argp_parse@@Base+0x718>
   16650:	mov	r4, r0
   16654:	cmp	r4, #7
   16658:	beq	16814 <argp_parse@@Base+0x99c>
   1665c:	ldr	r5, [fp, #-112]	; 0xffffff90
   16660:	ldr	r3, [fp, #-108]	; 0xffffff94
   16664:	cmp	r3, r5
   16668:	bls	16698 <argp_parse@@Base+0x820>
   1666c:	ldr	r7, [pc, #612]	; 168d8 <argp_parse@@Base+0xa60>
   16670:	mov	r6, #0
   16674:	mov	r3, r6
   16678:	mov	r2, r7
   1667c:	sub	r1, fp, #96	; 0x60
   16680:	mov	r0, r5
   16684:	bl	15890 <daemon@@Base+0x20>
   16688:	add	r5, r5, #36	; 0x24
   1668c:	ldr	r3, [fp, #-108]	; 0xffffff94
   16690:	cmp	r5, r3
   16694:	bcc	16674 <argp_parse@@Base+0x7fc>
   16698:	ldr	r5, [fp, #-108]	; 0xffffff94
   1669c:	sub	r5, r5, #36	; 0x24
   166a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   166a4:	cmp	r3, r5
   166a8:	bhi	166d8 <argp_parse@@Base+0x860>
   166ac:	ldr	r7, [pc, #552]	; 168dc <argp_parse@@Base+0xa64>
   166b0:	mov	r6, #0
   166b4:	mov	r3, r6
   166b8:	mov	r2, r7
   166bc:	sub	r1, fp, #96	; 0x60
   166c0:	mov	r0, r5
   166c4:	bl	15890 <daemon@@Base+0x20>
   166c8:	sub	r5, r5, #36	; 0x24
   166cc:	ldr	r3, [fp, #-112]	; 0xffffff90
   166d0:	cmp	r5, r3
   166d4:	bcs	166b4 <argp_parse@@Base+0x83c>
   166d8:	cmp	r4, #7
   166dc:	moveq	r4, #22
   166e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   166e4:	bl	16a6c <argp_parse@@Base+0xbf4>
   166e8:	mov	r0, r4
   166ec:	sub	sp, fp, #32
   166f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   166f4:	ldr	r6, [fp, #-112]	; 0xffffff90
   166f8:	ldr	r5, [fp, #-108]	; 0xffffff94
   166fc:	cmp	r6, r5
   16700:	bcs	16834 <argp_parse@@Base+0x9bc>
   16704:	mov	r4, #0
   16708:	ldr	r8, [pc, #464]	; 168e0 <argp_parse@@Base+0xa68>
   1670c:	mov	r7, r4
   16710:	mov	r0, r4
   16714:	b	16734 <argp_parse@@Base+0x8bc>
   16718:	add	r6, r6, #36	; 0x24
   1671c:	ldr	r5, [fp, #-108]	; 0xffffff94
   16720:	cmp	r6, r5
   16724:	bcs	16760 <argp_parse@@Base+0x8e8>
   16728:	cmp	r0, #7
   1672c:	cmpne	r0, #0
   16730:	bne	16758 <argp_parse@@Base+0x8e0>
   16734:	ldr	r3, [r6, #12]
   16738:	cmp	r3, #0
   1673c:	bne	16718 <argp_parse@@Base+0x8a0>
   16740:	mov	r3, r7
   16744:	mov	r2, r8
   16748:	sub	r1, fp, #96	; 0x60
   1674c:	mov	r0, r6
   16750:	bl	15890 <daemon@@Base+0x20>
   16754:	b	16718 <argp_parse@@Base+0x8a0>
   16758:	mov	r4, r0
   1675c:	b	167c4 <argp_parse@@Base+0x94c>
   16760:	mov	r4, r0
   16764:	sub	r5, r5, #36	; 0x24
   16768:	ldr	r3, [fp, #-112]	; 0xffffff90
   1676c:	cmp	r3, r5
   16770:	bhi	167c4 <argp_parse@@Base+0x94c>
   16774:	cmp	r0, #0
   16778:	cmpne	r0, #7
   1677c:	bne	167c4 <argp_parse@@Base+0x94c>
   16780:	ldr	r7, [pc, #348]	; 168e4 <argp_parse@@Base+0xa6c>
   16784:	mov	r6, #0
   16788:	mov	r3, r6
   1678c:	mov	r2, r7
   16790:	sub	r1, fp, #96	; 0x60
   16794:	mov	r0, r5
   16798:	bl	15890 <daemon@@Base+0x20>
   1679c:	sub	r5, r5, #36	; 0x24
   167a0:	ldr	r3, [fp, #-112]	; 0xffffff90
   167a4:	cmp	r5, r3
   167a8:	bcc	167c0 <argp_parse@@Base+0x948>
   167ac:	cmp	r0, #7
   167b0:	cmpne	r0, #0
   167b4:	beq	16788 <argp_parse@@Base+0x910>
   167b8:	mov	r4, r0
   167bc:	b	167c4 <argp_parse@@Base+0x94c>
   167c0:	mov	r4, r0
   167c4:	cmp	r4, #7
   167c8:	beq	16848 <argp_parse@@Base+0x9d0>
   167cc:	ldr	r3, [fp, #4]
   167d0:	cmp	r3, #0
   167d4:	beq	1688c <argp_parse@@Base+0xa14>
   167d8:	ldr	r3, [fp, #-84]	; 0xffffffac
   167dc:	ldr	r2, [fp, #4]
   167e0:	str	r3, [r2]
   167e4:	cmp	r4, #0
   167e8:	beq	165dc <argp_parse@@Base+0x764>
   167ec:	b	16654 <argp_parse@@Base+0x7dc>
   167f0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   167f4:	tst	r3, #2
   167f8:	bne	16814 <argp_parse@@Base+0x99c>
   167fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16800:	cmp	r0, #0
   16804:	beq	16814 <argp_parse@@Base+0x99c>
   16808:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1680c:	ldr	r1, [pc, #212]	; 168e8 <argp_parse@@Base+0xa70>
   16810:	bl	11a0c <fprintf@plt>
   16814:	mov	r2, #260	; 0x104
   16818:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1681c:	sub	r0, fp, #96	; 0x60
   16820:	bl	1a0e8 <argp_state_help@@Base>
   16824:	mov	r4, #7
   16828:	b	1665c <argp_parse@@Base+0x7e4>
   1682c:	mov	r4, #0
   16830:	b	166d8 <argp_parse@@Base+0x860>
   16834:	sub	r5, r5, #36	; 0x24
   16838:	cmp	r6, r5
   1683c:	movhi	r4, #0
   16840:	bls	16780 <argp_parse@@Base+0x908>
   16844:	b	167cc <argp_parse@@Base+0x954>
   16848:	ldr	r3, [fp, #4]
   1684c:	cmp	r3, #0
   16850:	movne	r4, #0
   16854:	bne	167d8 <argp_parse@@Base+0x960>
   16858:	b	165dc <argp_parse@@Base+0x764>
   1685c:	cmp	r0, #0
   16860:	bne	164b0 <argp_parse@@Base+0x638>
   16864:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16868:	str	r3, [fp, #-84]	; 0xffffffac
   1686c:	ldr	r3, [fp, #-84]	; 0xffffffac
   16870:	cmp	r8, r3
   16874:	sublt	r8, r3, r8
   16878:	ldrlt	r3, [r5, #-24]	; 0xffffffe8
   1687c:	addlt	r8, r3, r8
   16880:	strlt	r8, [r5, #-24]	; 0xffffffe8
   16884:	strge	sl, [fp, #-100]	; 0xffffff9c
   16888:	b	16500 <argp_parse@@Base+0x688>
   1688c:	cmp	r4, #0
   16890:	beq	165dc <argp_parse@@Base+0x764>
   16894:	b	1665c <argp_parse@@Base+0x7e4>
   16898:	andeq	sp, r2, ip, lsr #7
   1689c:	andeq	sp, r2, r8, lsr #7
   168a0:			; <UNDEFINED> instruction: 0x0002d3b0
   168a4:			; <UNDEFINED> instruction: 0x0002d3b4
   168a8:	tsteq	r0, r3
   168ac:	andeq	ip, r1, ip, ror r2
   168b0:	andeq	sp, r2, r8, lsl r6
   168b4:	muleq	r1, r8, r2
   168b8:			; <UNDEFINED> instruction: 0x0002d4b0
   168bc:			; <UNDEFINED> instruction: 0x0001c2b4
   168c0:	andeq	ip, r1, r8, asr #7
   168c4:	andeq	ip, r1, r4, asr #7
   168c8:	tsteq	r0, r6
   168cc:	andeq	ip, r1, r0, asr #7
   168d0:	ldrdeq	ip, [r1], -r0
   168d4:	tsteq	r0, r4
   168d8:	tsteq	r0, r5
   168dc:	tsteq	r0, r7
   168e0:	tsteq	r0, r2
   168e4:	tsteq	r0, r1
   168e8:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   168ec:	cmp	r1, #0
   168f0:	beq	1693c <argp_parse@@Base+0xac4>
   168f4:	ldr	r2, [r1, #52]	; 0x34
   168f8:	ldr	r3, [r2, #48]	; 0x30
   168fc:	ldr	r1, [r2, #52]	; 0x34
   16900:	cmp	r3, r1
   16904:	bcs	16944 <argp_parse@@Base+0xacc>
   16908:	ldr	r2, [r3, #4]
   1690c:	cmp	r0, r2
   16910:	beq	1692c <argp_parse@@Base+0xab4>
   16914:	add	r3, r3, #36	; 0x24
   16918:	cmp	r3, r1
   1691c:	bcs	16934 <argp_parse@@Base+0xabc>
   16920:	ldr	r2, [r3, #4]
   16924:	cmp	r2, r0
   16928:	bne	16914 <argp_parse@@Base+0xa9c>
   1692c:	ldr	r0, [r3, #24]
   16930:	bx	lr
   16934:	mov	r0, #0
   16938:	bx	lr
   1693c:	mov	r0, #0
   16940:	bx	lr
   16944:	mov	r0, #0
   16948:	bx	lr
   1694c:	push	{lr}		; (str lr, [sp, #-4]!)
   16950:	sub	sp, sp, #12
   16954:	ldr	r3, [pc, #28]	; 16978 <argp_parse@@Base+0xb00>
   16958:	ldr	r1, [r3]
   1695c:	ldr	r3, [r3, #4]
   16960:	str	r3, [sp]
   16964:	ldr	r3, [pc, #16]	; 1697c <argp_parse@@Base+0xb04>
   16968:	ldr	r2, [pc, #16]	; 16980 <argp_parse@@Base+0xb08>
   1696c:	bl	16f2c <argp_parse@@Base+0x10b4>
   16970:	add	sp, sp, #12
   16974:	pop	{pc}		; (ldr pc, [sp], #4)
   16978:			; <UNDEFINED> instruction: 0x0002d4b4
   1697c:			; <UNDEFINED> instruction: 0x0001c4bc
   16980:	andeq	ip, r1, ip, asr #9
   16984:	ldr	r2, [pc, #20]	; 169a0 <argp_parse@@Base+0xb28>
   16988:	ldr	r3, [pc, #20]	; 169a4 <argp_parse@@Base+0xb2c>
   1698c:	str	r2, [r3]
   16990:	ldr	r3, [pc, #16]	; 169a8 <argp_parse@@Base+0xb30>
   16994:	str	r0, [r3]
   16998:	str	r1, [r3, #4]
   1699c:	bx	lr
   169a0:	andeq	r6, r1, ip, asr #18
   169a4:			; <UNDEFINED> instruction: 0x0002d4b0
   169a8:			; <UNDEFINED> instruction: 0x0002d4b4
   169ac:	ldrb	r3, [r0]
   169b0:	cmp	r3, #47	; 0x2f
   169b4:	bne	169c4 <argp_parse@@Base+0xb4c>
   169b8:	ldrb	r3, [r0, #1]!
   169bc:	cmp	r3, #47	; 0x2f
   169c0:	beq	169b8 <argp_parse@@Base+0xb40>
   169c4:	ldrb	r2, [r0]
   169c8:	cmp	r2, #0
   169cc:	bxeq	lr
   169d0:	push	{lr}		; (str lr, [sp, #-4]!)
   169d4:	mov	r1, r0
   169d8:	mov	r3, #0
   169dc:	mov	lr, #1
   169e0:	mov	ip, r3
   169e4:	b	169f4 <argp_parse@@Base+0xb7c>
   169e8:	ldrb	r2, [r1, #1]!
   169ec:	cmp	r2, #0
   169f0:	beq	16a10 <argp_parse@@Base+0xb98>
   169f4:	cmp	r2, #47	; 0x2f
   169f8:	moveq	r3, lr
   169fc:	beq	169e8 <argp_parse@@Base+0xb70>
   16a00:	cmp	r3, #0
   16a04:	movne	r0, r1
   16a08:	movne	r3, ip
   16a0c:	b	169e8 <argp_parse@@Base+0xb70>
   16a10:	pop	{pc}		; (ldr pc, [sp], #4)
   16a14:	push	{r4, lr}
   16a18:	mov	r4, r0
   16a1c:	bl	119dc <strlen@plt>
   16a20:	cmp	r0, #1
   16a24:	popls	{r4, pc}
   16a28:	sub	r3, r0, #1
   16a2c:	add	r2, r4, r3
   16a30:	ldrb	r1, [r4, r3]
   16a34:	cmp	r1, #47	; 0x2f
   16a38:	popne	{r4, pc}
   16a3c:	cmp	r3, #1
   16a40:	beq	16a64 <argp_parse@@Base+0xbec>
   16a44:	sub	r0, r3, #1
   16a48:	ldrb	r1, [r2, #-1]!
   16a4c:	cmp	r1, #47	; 0x2f
   16a50:	beq	16a5c <argp_parse@@Base+0xbe4>
   16a54:	mov	r0, r3
   16a58:	pop	{r4, pc}
   16a5c:	mov	r3, r0
   16a60:	b	16a3c <argp_parse@@Base+0xbc4>
   16a64:	mov	r0, #1
   16a68:	pop	{r4, pc}
   16a6c:	push	{r4, r5, lr}
   16a70:	sub	sp, sp, #12
   16a74:	mov	r5, r0
   16a78:	bl	11a24 <__errno_location@plt>
   16a7c:	mov	r4, r0
   16a80:	ldr	r3, [r0]
   16a84:	str	r3, [sp]
   16a88:	str	r3, [sp, #4]
   16a8c:	mov	r3, #0
   16a90:	str	r3, [r0]
   16a94:	mov	r0, r5
   16a98:	bl	117d8 <free@plt>
   16a9c:	ldr	r3, [r4]
   16aa0:	cmp	r3, #0
   16aa4:	moveq	r3, #4
   16aa8:	movne	r3, #0
   16aac:	add	r2, sp, #8
   16ab0:	add	r3, r2, r3
   16ab4:	ldr	r3, [r3, #-8]
   16ab8:	str	r3, [r4]
   16abc:	add	sp, sp, #12
   16ac0:	pop	{r4, r5, pc}
   16ac4:	push	{lr}		; (str lr, [sp, #-4]!)
   16ac8:	sub	sp, sp, #20
   16acc:	mov	ip, #0
   16ad0:	str	ip, [sp, #8]
   16ad4:	str	ip, [sp, #4]
   16ad8:	ldr	ip, [sp, #24]
   16adc:	str	ip, [sp]
   16ae0:	bl	1ae20 <argp_error@@Base+0xc7c>
   16ae4:	add	sp, sp, #20
   16ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   16aec:	push	{lr}		; (str lr, [sp, #-4]!)
   16af0:	sub	sp, sp, #20
   16af4:	mov	ip, #0
   16af8:	str	ip, [sp, #12]
   16afc:	ldr	lr, [sp, #28]
   16b00:	str	lr, [sp, #8]
   16b04:	str	ip, [sp, #4]
   16b08:	ldr	ip, [sp, #24]
   16b0c:	str	ip, [sp]
   16b10:	bl	1a8a4 <argp_error@@Base+0x700>
   16b14:	add	sp, sp, #20
   16b18:	pop	{pc}		; (ldr pc, [sp], #4)
   16b1c:	push	{lr}		; (str lr, [sp, #-4]!)
   16b20:	sub	sp, sp, #20
   16b24:	mov	ip, #0
   16b28:	str	ip, [sp, #8]
   16b2c:	mov	ip, #1
   16b30:	str	ip, [sp, #4]
   16b34:	ldr	ip, [sp, #24]
   16b38:	str	ip, [sp]
   16b3c:	bl	1ae20 <argp_error@@Base+0xc7c>
   16b40:	add	sp, sp, #20
   16b44:	pop	{pc}		; (ldr pc, [sp], #4)
   16b48:	push	{lr}		; (str lr, [sp, #-4]!)
   16b4c:	sub	sp, sp, #20
   16b50:	mov	ip, #0
   16b54:	str	ip, [sp, #12]
   16b58:	ldr	ip, [sp, #28]
   16b5c:	str	ip, [sp, #8]
   16b60:	mov	ip, #1
   16b64:	str	ip, [sp, #4]
   16b68:	ldr	ip, [sp, #24]
   16b6c:	str	ip, [sp]
   16b70:	bl	1a8a4 <argp_error@@Base+0x700>
   16b74:	add	sp, sp, #20
   16b78:	pop	{pc}		; (ldr pc, [sp], #4)
   16b7c:	push	{r4, r5, r6, lr}
   16b80:	subs	r4, r0, #0
   16b84:	beq	16bfc <argp_parse@@Base+0xd84>
   16b88:	mov	r1, #47	; 0x2f
   16b8c:	mov	r0, r4
   16b90:	bl	11ae4 <strrchr@plt>
   16b94:	cmp	r0, #0
   16b98:	addne	r5, r0, #1
   16b9c:	moveq	r5, r4
   16ba0:	sub	r3, r5, r4
   16ba4:	cmp	r3, #6
   16ba8:	ble	16be8 <argp_parse@@Base+0xd70>
   16bac:	mov	r2, #7
   16bb0:	ldr	r1, [pc, #96]	; 16c18 <argp_parse@@Base+0xda0>
   16bb4:	sub	r0, r5, #7
   16bb8:	bl	11bd4 <strncmp@plt>
   16bbc:	cmp	r0, #0
   16bc0:	bne	16be8 <argp_parse@@Base+0xd70>
   16bc4:	mov	r2, #3
   16bc8:	ldr	r1, [pc, #76]	; 16c1c <argp_parse@@Base+0xda4>
   16bcc:	mov	r0, r5
   16bd0:	bl	11bd4 <strncmp@plt>
   16bd4:	cmp	r0, #0
   16bd8:	addeq	r4, r5, #3
   16bdc:	ldreq	r3, [pc, #60]	; 16c20 <argp_parse@@Base+0xda8>
   16be0:	streq	r4, [r3]
   16be4:	movne	r4, r5
   16be8:	ldr	r3, [pc, #52]	; 16c24 <argp_parse@@Base+0xdac>
   16bec:	str	r4, [r3]
   16bf0:	ldr	r3, [pc, #48]	; 16c28 <argp_parse@@Base+0xdb0>
   16bf4:	str	r4, [r3]
   16bf8:	pop	{r4, r5, r6, pc}
   16bfc:	ldr	r3, [pc, #40]	; 16c2c <argp_parse@@Base+0xdb4>
   16c00:	ldr	r3, [r3]
   16c04:	mov	r2, #55	; 0x37
   16c08:	mov	r1, #1
   16c0c:	ldr	r0, [pc, #28]	; 16c30 <argp_parse@@Base+0xdb8>
   16c10:	bl	118f8 <fwrite@plt>
   16c14:	bl	11be0 <abort@plt>
   16c18:	andeq	ip, r1, r4, lsl r5
   16c1c:	andeq	ip, r1, ip, lsl r5
   16c20:	andeq	sp, r2, r8, lsr #7
   16c24:			; <UNDEFINED> instruction: 0x0002d4bc
   16c28:	andeq	sp, r2, ip, lsr #7
   16c2c:			; <UNDEFINED> instruction: 0x0002d3b0
   16c30:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   16c34:	push	{r4, r5, r6, lr}
   16c38:	sub	sp, sp, #32
   16c3c:	mov	r4, r0
   16c40:	ldr	r5, [sp, #48]	; 0x30
   16c44:	ldr	r6, [sp, #52]	; 0x34
   16c48:	cmp	r1, #0
   16c4c:	beq	16cd4 <argp_parse@@Base+0xe5c>
   16c50:	str	r3, [sp]
   16c54:	mov	r3, r2
   16c58:	mov	r2, r1
   16c5c:	ldr	r1, [pc, #644]	; 16ee8 <argp_parse@@Base+0x1070>
   16c60:	bl	11a0c <fprintf@plt>
   16c64:	ldr	r3, [pc, #640]	; 16eec <argp_parse@@Base+0x1074>
   16c68:	ldr	r2, [pc, #640]	; 16ef0 <argp_parse@@Base+0x1078>
   16c6c:	ldr	r1, [pc, #640]	; 16ef4 <argp_parse@@Base+0x107c>
   16c70:	mov	r0, r4
   16c74:	bl	11a0c <fprintf@plt>
   16c78:	mov	r1, r4
   16c7c:	mov	r0, #10
   16c80:	bl	11b08 <fputc@plt>
   16c84:	ldr	r2, [pc, #620]	; 16ef8 <argp_parse@@Base+0x1080>
   16c88:	ldr	r1, [pc, #620]	; 16efc <argp_parse@@Base+0x1084>
   16c8c:	mov	r0, r4
   16c90:	bl	11a0c <fprintf@plt>
   16c94:	mov	r1, r4
   16c98:	mov	r0, #10
   16c9c:	bl	11b08 <fputc@plt>
   16ca0:	cmp	r6, #9
   16ca4:	ldrls	pc, [pc, r6, lsl #2]
   16ca8:	b	16e98 <argp_parse@@Base+0x1020>
   16cac:	strdeq	r6, [r1], -r0
   16cb0:	andeq	r6, r1, r0, ror #25
   16cb4:	strdeq	r6, [r1], -r8
   16cb8:	andeq	r6, r1, r0, lsl sp
   16cbc:	andeq	r6, r1, r0, lsr sp
   16cc0:	andeq	r6, r1, r8, asr sp
   16cc4:	andeq	r6, r1, r8, lsl #27
   16cc8:	andeq	r6, r1, r0, asr #27
   16ccc:	andeq	r6, r1, r0, lsl #28
   16cd0:	andeq	r6, r1, r8, asr #28
   16cd4:	ldr	r1, [pc, #548]	; 16f00 <argp_parse@@Base+0x1088>
   16cd8:	bl	11a0c <fprintf@plt>
   16cdc:	b	16c64 <argp_parse@@Base+0xdec>
   16ce0:	ldr	r2, [r5]
   16ce4:	ldr	r1, [pc, #536]	; 16f04 <argp_parse@@Base+0x108c>
   16ce8:	mov	r0, r4
   16cec:	bl	11a0c <fprintf@plt>
   16cf0:	add	sp, sp, #32
   16cf4:	pop	{r4, r5, r6, pc}
   16cf8:	ldr	r3, [r5, #4]
   16cfc:	ldr	r2, [r5]
   16d00:	ldr	r1, [pc, #512]	; 16f08 <argp_parse@@Base+0x1090>
   16d04:	mov	r0, r4
   16d08:	bl	11a0c <fprintf@plt>
   16d0c:	b	16cf0 <argp_parse@@Base+0xe78>
   16d10:	ldr	r3, [r5, #4]
   16d14:	ldr	r2, [r5]
   16d18:	ldr	r1, [r5, #8]
   16d1c:	str	r1, [sp]
   16d20:	ldr	r1, [pc, #484]	; 16f0c <argp_parse@@Base+0x1094>
   16d24:	mov	r0, r4
   16d28:	bl	11a0c <fprintf@plt>
   16d2c:	b	16cf0 <argp_parse@@Base+0xe78>
   16d30:	ldr	r3, [r5, #4]
   16d34:	ldr	r2, [r5]
   16d38:	ldr	r1, [r5, #12]
   16d3c:	str	r1, [sp, #4]
   16d40:	ldr	r1, [r5, #8]
   16d44:	str	r1, [sp]
   16d48:	ldr	r1, [pc, #448]	; 16f10 <argp_parse@@Base+0x1098>
   16d4c:	mov	r0, r4
   16d50:	bl	11a0c <fprintf@plt>
   16d54:	b	16cf0 <argp_parse@@Base+0xe78>
   16d58:	ldr	r3, [r5, #4]
   16d5c:	ldr	r2, [r5]
   16d60:	ldr	r1, [r5, #16]
   16d64:	str	r1, [sp, #8]
   16d68:	ldr	r1, [r5, #12]
   16d6c:	str	r1, [sp, #4]
   16d70:	ldr	r1, [r5, #8]
   16d74:	str	r1, [sp]
   16d78:	ldr	r1, [pc, #404]	; 16f14 <argp_parse@@Base+0x109c>
   16d7c:	mov	r0, r4
   16d80:	bl	11a0c <fprintf@plt>
   16d84:	b	16cf0 <argp_parse@@Base+0xe78>
   16d88:	ldr	r3, [r5, #4]
   16d8c:	ldr	r2, [r5]
   16d90:	ldr	r1, [r5, #20]
   16d94:	str	r1, [sp, #12]
   16d98:	ldr	r1, [r5, #16]
   16d9c:	str	r1, [sp, #8]
   16da0:	ldr	r1, [r5, #12]
   16da4:	str	r1, [sp, #4]
   16da8:	ldr	r1, [r5, #8]
   16dac:	str	r1, [sp]
   16db0:	ldr	r1, [pc, #352]	; 16f18 <argp_parse@@Base+0x10a0>
   16db4:	mov	r0, r4
   16db8:	bl	11a0c <fprintf@plt>
   16dbc:	b	16cf0 <argp_parse@@Base+0xe78>
   16dc0:	ldr	r3, [r5, #4]
   16dc4:	ldr	r2, [r5]
   16dc8:	ldr	r1, [r5, #24]
   16dcc:	str	r1, [sp, #16]
   16dd0:	ldr	r1, [r5, #20]
   16dd4:	str	r1, [sp, #12]
   16dd8:	ldr	r1, [r5, #16]
   16ddc:	str	r1, [sp, #8]
   16de0:	ldr	r1, [r5, #12]
   16de4:	str	r1, [sp, #4]
   16de8:	ldr	r1, [r5, #8]
   16dec:	str	r1, [sp]
   16df0:	ldr	r1, [pc, #292]	; 16f1c <argp_parse@@Base+0x10a4>
   16df4:	mov	r0, r4
   16df8:	bl	11a0c <fprintf@plt>
   16dfc:	b	16cf0 <argp_parse@@Base+0xe78>
   16e00:	ldr	r3, [r5, #4]
   16e04:	ldr	r2, [r5]
   16e08:	ldr	r1, [r5, #28]
   16e0c:	str	r1, [sp, #20]
   16e10:	ldr	r1, [r5, #24]
   16e14:	str	r1, [sp, #16]
   16e18:	ldr	r1, [r5, #20]
   16e1c:	str	r1, [sp, #12]
   16e20:	ldr	r1, [r5, #16]
   16e24:	str	r1, [sp, #8]
   16e28:	ldr	r1, [r5, #12]
   16e2c:	str	r1, [sp, #4]
   16e30:	ldr	r1, [r5, #8]
   16e34:	str	r1, [sp]
   16e38:	ldr	r1, [pc, #224]	; 16f20 <argp_parse@@Base+0x10a8>
   16e3c:	mov	r0, r4
   16e40:	bl	11a0c <fprintf@plt>
   16e44:	b	16cf0 <argp_parse@@Base+0xe78>
   16e48:	ldr	r3, [r5, #4]
   16e4c:	ldr	r2, [r5]
   16e50:	ldr	r1, [r5, #32]
   16e54:	str	r1, [sp, #24]
   16e58:	ldr	r1, [r5, #28]
   16e5c:	str	r1, [sp, #20]
   16e60:	ldr	r1, [r5, #24]
   16e64:	str	r1, [sp, #16]
   16e68:	ldr	r1, [r5, #20]
   16e6c:	str	r1, [sp, #12]
   16e70:	ldr	r1, [r5, #16]
   16e74:	str	r1, [sp, #8]
   16e78:	ldr	r1, [r5, #12]
   16e7c:	str	r1, [sp, #4]
   16e80:	ldr	r1, [r5, #8]
   16e84:	str	r1, [sp]
   16e88:	ldr	r1, [pc, #148]	; 16f24 <argp_parse@@Base+0x10ac>
   16e8c:	mov	r0, r4
   16e90:	bl	11a0c <fprintf@plt>
   16e94:	b	16cf0 <argp_parse@@Base+0xe78>
   16e98:	ldr	r3, [r5, #4]
   16e9c:	ldr	r2, [r5]
   16ea0:	ldr	r1, [r5, #32]
   16ea4:	str	r1, [sp, #24]
   16ea8:	ldr	r1, [r5, #28]
   16eac:	str	r1, [sp, #20]
   16eb0:	ldr	r1, [r5, #24]
   16eb4:	str	r1, [sp, #16]
   16eb8:	ldr	r1, [r5, #20]
   16ebc:	str	r1, [sp, #12]
   16ec0:	ldr	r1, [r5, #16]
   16ec4:	str	r1, [sp, #8]
   16ec8:	ldr	r1, [r5, #12]
   16ecc:	str	r1, [sp, #4]
   16ed0:	ldr	r1, [r5, #8]
   16ed4:	str	r1, [sp]
   16ed8:	ldr	r1, [pc, #72]	; 16f28 <argp_parse@@Base+0x10b0>
   16edc:	mov	r0, r4
   16ee0:	bl	11a0c <fprintf@plt>
   16ee4:	b	16cf0 <argp_parse@@Base+0xe78>
   16ee8:	andeq	ip, r1, r0, lsr #10
   16eec:	andeq	r0, r0, r6, ror #15
   16ef0:	andeq	ip, r1, r4, lsr r5
   16ef4:	andeq	ip, r1, r4, lsr r8
   16ef8:	andeq	ip, r1, r8, lsr r5
   16efc:	andeq	ip, r1, ip, asr r5
   16f00:	andeq	ip, r1, ip, lsr #10
   16f04:	andeq	ip, r1, r8, lsl #12
   16f08:	andeq	ip, r1, r8, lsl r6
   16f0c:	andeq	ip, r1, r0, lsr r6
   16f10:	andeq	ip, r1, ip, asr #12
   16f14:	andeq	ip, r1, ip, ror #12
   16f18:	muleq	r1, r0, r6
   16f1c:			; <UNDEFINED> instruction: 0x0001c6b8
   16f20:	andeq	ip, r1, r4, ror #13
   16f24:	andeq	ip, r1, r4, lsl r7
   16f28:	andeq	ip, r1, r8, asr #14
   16f2c:	push	{r4, r5, lr}
   16f30:	sub	sp, sp, #12
   16f34:	ldr	r5, [sp, #24]
   16f38:	ldr	ip, [r5]
   16f3c:	cmp	ip, #0
   16f40:	beq	16f70 <argp_parse@@Base+0x10f8>
   16f44:	mov	lr, r5
   16f48:	mov	ip, #0
   16f4c:	add	ip, ip, #1
   16f50:	ldr	r4, [lr, #4]!
   16f54:	cmp	r4, #0
   16f58:	bne	16f4c <argp_parse@@Base+0x10d4>
   16f5c:	str	ip, [sp, #4]
   16f60:	str	r5, [sp]
   16f64:	bl	16c34 <argp_parse@@Base+0xdbc>
   16f68:	add	sp, sp, #12
   16f6c:	pop	{r4, r5, pc}
   16f70:	mov	ip, #0
   16f74:	b	16f5c <argp_parse@@Base+0x10e4>
   16f78:	push	{r4, r5, lr}
   16f7c:	sub	sp, sp, #52	; 0x34
   16f80:	ldr	r4, [sp, #64]	; 0x40
   16f84:	sub	r4, r4, #4
   16f88:	add	r5, sp, #4
   16f8c:	mov	ip, #0
   16f90:	ldr	lr, [r4, #4]!
   16f94:	str	lr, [r5, #4]!
   16f98:	cmp	lr, #0
   16f9c:	beq	16fac <argp_parse@@Base+0x1134>
   16fa0:	add	ip, ip, #1
   16fa4:	cmp	ip, #10
   16fa8:	bne	16f90 <argp_parse@@Base+0x1118>
   16fac:	str	ip, [sp, #4]
   16fb0:	add	ip, sp, #8
   16fb4:	str	ip, [sp]
   16fb8:	bl	16c34 <argp_parse@@Base+0xdbc>
   16fbc:	add	sp, sp, #52	; 0x34
   16fc0:	pop	{r4, r5, pc}
   16fc4:	push	{r3}		; (str r3, [sp, #-4]!)
   16fc8:	push	{lr}		; (str lr, [sp, #-4]!)
   16fcc:	sub	sp, sp, #16
   16fd0:	add	r3, sp, #24
   16fd4:	str	r3, [sp, #12]
   16fd8:	str	r3, [sp]
   16fdc:	ldr	r3, [sp, #20]
   16fe0:	bl	16f78 <argp_parse@@Base+0x1100>
   16fe4:	add	sp, sp, #16
   16fe8:	pop	{lr}		; (ldr lr, [sp], #4)
   16fec:	add	sp, sp, #4
   16ff0:	bx	lr
   16ff4:	push	{r4, lr}
   16ff8:	ldr	r3, [pc, #52]	; 17034 <argp_parse@@Base+0x11bc>
   16ffc:	ldr	r1, [r3]
   17000:	mov	r0, #10
   17004:	bl	11b08 <fputc@plt>
   17008:	ldr	r1, [pc, #40]	; 17038 <argp_parse@@Base+0x11c0>
   1700c:	ldr	r0, [pc, #40]	; 1703c <argp_parse@@Base+0x11c4>
   17010:	bl	11790 <printf@plt>
   17014:	ldr	r2, [pc, #36]	; 17040 <argp_parse@@Base+0x11c8>
   17018:	ldr	r1, [pc, #36]	; 17044 <argp_parse@@Base+0x11cc>
   1701c:	ldr	r0, [pc, #36]	; 17048 <argp_parse@@Base+0x11d0>
   17020:	bl	11790 <printf@plt>
   17024:	ldr	r1, [pc, #32]	; 1704c <argp_parse@@Base+0x11d4>
   17028:	ldr	r0, [pc, #32]	; 17050 <argp_parse@@Base+0x11d8>
   1702c:	bl	11790 <printf@plt>
   17030:	pop	{r4, pc}
   17034:			; <UNDEFINED> instruction: 0x0002d3b4
   17038:	andeq	ip, r1, r4, lsl #15
   1703c:	muleq	r1, ip, r7
   17040:			; <UNDEFINED> instruction: 0x0001c7b0
   17044:	andeq	ip, r1, ip, asr #9
   17048:	ldrdeq	ip, [r1], -r8
   1704c:	andeq	ip, r1, ip, ror #15
   17050:	andeq	ip, r1, ip, lsl #16
   17054:	push	{r4, lr}
   17058:	mov	r2, r0
   1705c:	mov	r3, r1
   17060:	cmp	r1, #0
   17064:	cmpne	r0, #0
   17068:	moveq	r3, #1
   1706c:	moveq	r2, r3
   17070:	umull	r0, r1, r2, r3
   17074:	cmp	r0, #0
   17078:	cmpge	r1, #0
   1707c:	bne	17090 <argp_parse@@Base+0x1218>
   17080:	mov	r1, r3
   17084:	mov	r0, r2
   17088:	bl	11724 <calloc@plt>
   1708c:	pop	{r4, pc}
   17090:	bl	11a24 <__errno_location@plt>
   17094:	mov	r3, #12
   17098:	str	r3, [r0]
   1709c:	mov	r0, #0
   170a0:	pop	{r4, pc}
   170a4:	push	{r4, lr}
   170a8:	cmp	r0, #0
   170ac:	moveq	r0, #1
   170b0:	cmp	r0, #0
   170b4:	blt	170c0 <argp_parse@@Base+0x1248>
   170b8:	bl	11958 <malloc@plt>
   170bc:	pop	{r4, pc}
   170c0:	bl	11a24 <__errno_location@plt>
   170c4:	mov	r3, #12
   170c8:	str	r3, [r0]
   170cc:	mov	r0, #0
   170d0:	pop	{r4, pc}
   170d4:	push	{r4, lr}
   170d8:	cmp	r0, #0
   170dc:	beq	170f8 <argp_parse@@Base+0x1280>
   170e0:	cmp	r1, #0
   170e4:	beq	17104 <argp_parse@@Base+0x128c>
   170e8:	cmp	r1, #0
   170ec:	blt	17110 <argp_parse@@Base+0x1298>
   170f0:	bl	118a4 <realloc@plt>
   170f4:	pop	{r4, pc}
   170f8:	mov	r0, r1
   170fc:	bl	170a4 <argp_parse@@Base+0x122c>
   17100:	pop	{r4, pc}
   17104:	bl	16a6c <argp_parse@@Base+0xbf4>
   17108:	mov	r0, #0
   1710c:	pop	{r4, pc}
   17110:	bl	11a24 <__errno_location@plt>
   17114:	mov	r3, #12
   17118:	str	r3, [r0]
   1711c:	mov	r0, #0
   17120:	pop	{r4, pc}
   17124:	ldr	r3, [r0]
   17128:	ldr	r2, [r0, #4]
   1712c:	cmp	r2, #0
   17130:	beq	1716c <argp_parse@@Base+0x12f4>
   17134:	add	r3, r3, #24
   17138:	b	17148 <argp_parse@@Base+0x12d0>
   1713c:	add	r3, r3, #24
   17140:	subs	r2, r2, #1
   17144:	beq	17164 <argp_parse@@Base+0x12ec>
   17148:	ldr	r0, [r3, #-24]	; 0xffffffe8
   1714c:	cmp	r0, #0
   17150:	beq	1713c <argp_parse@@Base+0x12c4>
   17154:	ldr	r1, [r3, #-12]
   17158:	tst	r1, #2
   1715c:	bne	1713c <argp_parse@@Base+0x12c4>
   17160:	bx	lr
   17164:	mov	r0, #0
   17168:	bx	lr
   1716c:	mov	r0, #0
   17170:	bx	lr
   17174:	ldr	r2, [r0, #8]
   17178:	cmp	r2, #0
   1717c:	beq	17188 <argp_parse@@Base+0x1310>
   17180:	mov	r0, #0
   17184:	bx	lr
   17188:	ldr	r2, [r1, #8]
   1718c:	cmp	r2, #0
   17190:	bne	17180 <argp_parse@@Base+0x1308>
   17194:	ldr	r2, [r0, #12]
   17198:	ldr	r1, [r1, #12]
   1719c:	orr	r2, r2, r1
   171a0:	tst	r2, #16
   171a4:	ldreq	r2, [r3]
   171a8:	addeq	r1, r2, #1
   171ac:	streq	r1, [r3]
   171b0:	ldreq	r3, [r0, #4]
   171b4:	strbeq	r3, [r2]
   171b8:	b	17180 <argp_parse@@Base+0x1308>
   171bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   171c0:	sub	sp, sp, #12
   171c4:	ldr	r4, [r0]
   171c8:	ldr	r9, [r0, #8]
   171cc:	ldr	r5, [r0, #4]
   171d0:	cmp	r5, #0
   171d4:	beq	17228 <argp_parse@@Base+0x13b0>
   171d8:	str	r3, [sp, #4]
   171dc:	str	r2, [sp]
   171e0:	mov	fp, r1
   171e4:	mov	sl, r4
   171e8:	mov	r8, #0
   171ec:	b	17268 <argp_parse@@Base+0x13f0>
   171f0:	and	r3, r6, #4
   171f4:	cmp	r3, #0
   171f8:	moveq	sl, r4
   171fc:	tst	r6, #2
   17200:	beq	1720c <argp_parse@@Base+0x1394>
   17204:	add	r9, r9, #1
   17208:	b	17244 <argp_parse@@Base+0x13cc>
   1720c:	ldr	r3, [sp, #4]
   17210:	ldr	r2, [sp]
   17214:	mov	r1, sl
   17218:	mov	r0, r4
   1721c:	blx	fp
   17220:	mov	r8, r0
   17224:	b	17204 <argp_parse@@Base+0x138c>
   17228:	mov	r8, #0
   1722c:	mov	r0, r8
   17230:	add	sp, sp, #12
   17234:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17238:	ldrb	r3, [r9]
   1723c:	cmp	r3, r7
   17240:	beq	171f0 <argp_parse@@Base+0x1378>
   17244:	add	r4, r4, #24
   17248:	subs	r5, r5, #1
   1724c:	movne	r3, #1
   17250:	moveq	r3, #0
   17254:	cmp	r8, #0
   17258:	movne	r3, #0
   1725c:	andeq	r3, r3, #1
   17260:	cmp	r3, #0
   17264:	beq	1722c <argp_parse@@Base+0x13b4>
   17268:	ldr	r6, [r4, #12]
   1726c:	tst	r6, #8
   17270:	bne	17244 <argp_parse@@Base+0x13cc>
   17274:	ldr	r7, [r4, #4]
   17278:	sub	r3, r7, #1
   1727c:	cmp	r3, #254	; 0xfe
   17280:	bhi	17244 <argp_parse@@Base+0x13cc>
   17284:	bl	119ac <__ctype_b_loc@plt>
   17288:	ldr	r2, [r0]
   1728c:	lsl	r3, r7, #1
   17290:	ldrh	r3, [r2, r3]
   17294:	tst	r3, #16384	; 0x4000
   17298:	bne	17238 <argp_parse@@Base+0x13c0>
   1729c:	b	17244 <argp_parse@@Base+0x13cc>
   172a0:	push	{r4, r5, r6, lr}
   172a4:	ldr	r4, [r0, #12]
   172a8:	ands	r4, r4, #8
   172ac:	movne	r4, #0
   172b0:	bne	172e0 <argp_parse@@Base+0x1468>
   172b4:	ldr	r5, [r0, #4]
   172b8:	sub	r3, r5, #1
   172bc:	cmp	r3, #254	; 0xfe
   172c0:	bhi	172e0 <argp_parse@@Base+0x1468>
   172c4:	bl	119ac <__ctype_b_loc@plt>
   172c8:	ldr	r2, [r0]
   172cc:	lsl	r3, r5, #1
   172d0:	ldrh	r3, [r2, r3]
   172d4:	and	r3, r3, #16384	; 0x4000
   172d8:	cmp	r3, #0
   172dc:	movne	r4, r5
   172e0:	mov	r0, r4
   172e4:	pop	{r4, r5, r6, pc}
   172e8:	push	{r4, lr}
   172ec:	mov	r4, r0
   172f0:	bl	119ac <__ctype_b_loc@plt>
   172f4:	b	17300 <argp_parse@@Base+0x1488>
   172f8:	add	r3, r3, #1
   172fc:	str	r3, [r4]
   17300:	ldr	r3, [r4]
   17304:	ldrb	r2, [r3]
   17308:	ldr	ip, [r0]
   1730c:	lsl	r1, r2, #1
   17310:	ldrh	r1, [ip, r1]
   17314:	tst	r1, #8192	; 0x2000
   17318:	bne	172f8 <argp_parse@@Base+0x1480>
   1731c:	subs	ip, r2, #45	; 0x2d
   17320:	movne	ip, #1
   17324:	cmp	r2, #0
   17328:	beq	1735c <argp_parse@@Base+0x14e4>
   1732c:	tst	r1, #8
   17330:	bne	1735c <argp_parse@@Base+0x14e4>
   17334:	add	r3, r3, #1
   17338:	str	r3, [r4]
   1733c:	ldrb	r2, [r3]
   17340:	cmp	r2, #0
   17344:	beq	1735c <argp_parse@@Base+0x14e4>
   17348:	ldr	r1, [r0]
   1734c:	lsl	r2, r2, #1
   17350:	ldrh	r2, [r1, r2]
   17354:	tst	r2, #8
   17358:	beq	17334 <argp_parse@@Base+0x14bc>
   1735c:	mov	r0, ip
   17360:	pop	{r4, pc}
   17364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17368:	add	fp, sp, #32
   1736c:	sub	sp, sp, #12
   17370:	ldr	r5, [r0, #4]
   17374:	cmp	r5, #0
   17378:	bne	17384 <argp_parse@@Base+0x150c>
   1737c:	sub	sp, fp, #32
   17380:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17384:	mov	r9, r1
   17388:	mov	r6, r0
   1738c:	ldr	r0, [r0, #8]
   17390:	bl	119dc <strlen@plt>
   17394:	add	r3, r0, #15
   17398:	bic	r3, r3, #7
   1739c:	sub	sp, sp, r3
   173a0:	mov	sl, sp
   173a4:	sub	r7, fp, #36	; 0x24
   173a8:	str	sp, [r7, #-4]!
   173ac:	ldr	r4, [r6]
   173b0:	ldr	r8, [pc, #336]	; 17508 <argp_parse@@Base+0x1690>
   173b4:	ldr	r2, [r4, #20]
   173b8:	mov	r3, r7
   173bc:	ldr	r2, [r2, #24]
   173c0:	mov	r1, r8
   173c4:	mov	r0, r4
   173c8:	bl	171bc <argp_parse@@Base+0x1344>
   173cc:	add	r4, r4, #28
   173d0:	subs	r5, r5, #1
   173d4:	bne	173b4 <argp_parse@@Base+0x153c>
   173d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   173dc:	cmp	sl, r3
   173e0:	bcc	17438 <argp_parse@@Base+0x15c0>
   173e4:	ldr	r4, [r6]
   173e8:	ldr	r5, [r6, #4]
   173ec:	cmp	r5, #0
   173f0:	beq	1737c <argp_parse@@Base+0x1504>
   173f4:	ldr	r7, [pc, #272]	; 1750c <argp_parse@@Base+0x1694>
   173f8:	ldr	r2, [r4, #20]
   173fc:	mov	r3, r9
   17400:	ldr	r2, [r2, #24]
   17404:	mov	r1, r7
   17408:	mov	r0, r4
   1740c:	bl	171bc <argp_parse@@Base+0x1344>
   17410:	add	r4, r4, #28
   17414:	subs	r5, r5, #1
   17418:	bne	173f8 <argp_parse@@Base+0x1580>
   1741c:	ldr	r7, [r6]
   17420:	ldr	r8, [r6, #4]
   17424:	cmp	r8, #0
   17428:	beq	1737c <argp_parse@@Base+0x1504>
   1742c:	add	r7, r7, #28
   17430:	ldr	sl, [pc, #216]	; 17510 <argp_parse@@Base+0x1698>
   17434:	b	174f0 <argp_parse@@Base+0x1678>
   17438:	add	r2, r3, #1
   1743c:	str	r2, [fp, #-40]	; 0xffffffd8
   17440:	mov	r2, #0
   17444:	strb	r2, [r3]
   17448:	mov	r2, sl
   1744c:	ldr	r1, [pc, #192]	; 17514 <argp_parse@@Base+0x169c>
   17450:	mov	r0, r9
   17454:	bl	1b5c4 <argp_error@@Base+0x1420>
   17458:	b	173e4 <argp_parse@@Base+0x156c>
   1745c:	tst	r1, #16
   17460:	bne	17484 <argp_parse@@Base+0x160c>
   17464:	ldr	r3, [r6, #8]
   17468:	cmp	r3, #0
   1746c:	beq	174d4 <argp_parse@@Base+0x165c>
   17470:	tst	r1, #1
   17474:	ldrne	r1, [pc, #156]	; 17518 <argp_parse@@Base+0x16a0>
   17478:	moveq	r1, sl
   1747c:	mov	r0, r9
   17480:	bl	1b5c4 <argp_error@@Base+0x1420>
   17484:	add	r4, r4, #24
   17488:	subs	r5, r5, #1
   1748c:	beq	174e4 <argp_parse@@Base+0x166c>
   17490:	ldr	r2, [r4]
   17494:	cmp	r2, #0
   17498:	beq	17484 <argp_parse@@Base+0x160c>
   1749c:	ldr	r1, [r4, #12]
   174a0:	and	r3, r1, #4
   174a4:	cmp	r3, #0
   174a8:	moveq	r6, r4
   174ac:	tst	r1, #2
   174b0:	bne	17484 <argp_parse@@Base+0x160c>
   174b4:	ldr	r3, [r4, #8]
   174b8:	ldr	r0, [r6, #12]
   174bc:	orr	r1, r1, r0
   174c0:	cmp	r3, #0
   174c4:	beq	1745c <argp_parse@@Base+0x15e4>
   174c8:	tst	r1, #16
   174cc:	beq	17470 <argp_parse@@Base+0x15f8>
   174d0:	b	17484 <argp_parse@@Base+0x160c>
   174d4:	ldr	r1, [pc, #64]	; 1751c <argp_parse@@Base+0x16a4>
   174d8:	mov	r0, r9
   174dc:	bl	1b5c4 <argp_error@@Base+0x1420>
   174e0:	b	17484 <argp_parse@@Base+0x160c>
   174e4:	add	r7, r7, #28
   174e8:	subs	r8, r8, #1
   174ec:	beq	1737c <argp_parse@@Base+0x1504>
   174f0:	ldr	r4, [r7, #-28]	; 0xffffffe4
   174f4:	ldr	r5, [r7, #-24]	; 0xffffffe8
   174f8:	cmp	r5, #0
   174fc:	beq	174e4 <argp_parse@@Base+0x166c>
   17500:	mov	r6, r4
   17504:	b	17490 <argp_parse@@Base+0x1618>
   17508:	andeq	r7, r1, r4, ror r1
   1750c:			; <UNDEFINED> instruction: 0x000177b4
   17510:	andeq	ip, r1, r4, lsr #18
   17514:	andeq	ip, r1, ip, lsl #18
   17518:	andeq	ip, r1, r4, lsl r9
   1751c:	andeq	ip, r1, r0, lsr r9
   17520:	push	{r4, r5, r6, lr}
   17524:	mov	r5, r0
   17528:	ldr	r0, [r0, #12]
   1752c:	cmp	r0, #0
   17530:	beq	17548 <argp_parse@@Base+0x16d0>
   17534:	ldr	r4, [r0, #24]
   17538:	bl	16a6c <argp_parse@@Base+0xbf4>
   1753c:	mov	r0, r4
   17540:	cmp	r4, #0
   17544:	bne	17534 <argp_parse@@Base+0x16bc>
   17548:	ldr	r3, [r5, #4]
   1754c:	cmp	r3, #0
   17550:	bne	17560 <argp_parse@@Base+0x16e8>
   17554:	mov	r0, r5
   17558:	bl	16a6c <argp_parse@@Base+0xbf4>
   1755c:	pop	{r4, r5, r6, pc}
   17560:	ldr	r0, [r5]
   17564:	bl	16a6c <argp_parse@@Base+0xbf4>
   17568:	ldr	r0, [r5, #8]
   1756c:	bl	16a6c <argp_parse@@Base+0xbf4>
   17570:	b	17554 <argp_parse@@Base+0x16dc>
   17574:	push	{r4, r5, r6, r7, r8, lr}
   17578:	mov	r6, r1
   1757c:	ldr	r7, [r0]
   17580:	ldr	r3, [r0, #4]
   17584:	sub	r8, r3, #1
   17588:	cmp	r3, #0
   1758c:	bne	175e8 <argp_parse@@Base+0x1770>
   17590:	mov	r7, #0
   17594:	b	175d0 <argp_parse@@Base+0x1758>
   17598:	sub	r5, r5, #1
   1759c:	add	r4, r4, #24
   175a0:	cmn	r5, #1
   175a4:	beq	175d8 <argp_parse@@Base+0x1760>
   175a8:	ldr	r0, [r4, #-24]	; 0xffffffe8
   175ac:	cmp	r0, #0
   175b0:	beq	17598 <argp_parse@@Base+0x1720>
   175b4:	ldr	r3, [r4, #-12]
   175b8:	tst	r3, #2
   175bc:	bne	17598 <argp_parse@@Base+0x1720>
   175c0:	mov	r1, r6
   175c4:	bl	11754 <strcmp@plt>
   175c8:	cmp	r0, #0
   175cc:	bne	17598 <argp_parse@@Base+0x1720>
   175d0:	mov	r0, r7
   175d4:	pop	{r4, r5, r6, r7, r8, pc}
   175d8:	add	r7, r7, #28
   175dc:	sub	r8, r8, #1
   175e0:	cmn	r8, #1
   175e4:	beq	17604 <argp_parse@@Base+0x178c>
   175e8:	ldr	r4, [r7]
   175ec:	ldr	r3, [r7, #4]
   175f0:	sub	r5, r3, #1
   175f4:	cmp	r3, #0
   175f8:	beq	175d8 <argp_parse@@Base+0x1760>
   175fc:	add	r4, r4, #24
   17600:	b	175a8 <argp_parse@@Base+0x1730>
   17604:	mov	r7, #0
   17608:	b	175d0 <argp_parse@@Base+0x1758>
   1760c:	push	{r4, r5, r6, lr}
   17610:	ldr	r4, [r0, #16]
   17614:	ldr	r0, [r0, #8]
   17618:	cmp	r0, #0
   1761c:	moveq	r5, #0
   17620:	beq	17634 <argp_parse@@Base+0x17bc>
   17624:	mov	r1, #10
   17628:	bl	119f4 <strchr@plt>
   1762c:	adds	r5, r0, #0
   17630:	movne	r5, #1
   17634:	cmp	r4, #0
   17638:	beq	1765c <argp_parse@@Base+0x17e4>
   1763c:	ldr	r0, [r4]
   17640:	cmp	r0, #0
   17644:	beq	1765c <argp_parse@@Base+0x17e4>
   17648:	bl	1760c <argp_parse@@Base+0x1794>
   1764c:	add	r5, r5, r0
   17650:	ldr	r0, [r4, #16]!
   17654:	cmp	r0, #0
   17658:	bne	17648 <argp_parse@@Base+0x17d0>
   1765c:	mov	r0, r5
   17660:	pop	{r4, r5, r6, pc}
   17664:	push	{r4, r5, r6, r7, r8, lr}
   17668:	mov	r4, r0
   1766c:	mov	r5, r1
   17670:	ldr	r3, [r0, #28]
   17674:	ldr	r2, [r0, #24]
   17678:	sub	r3, r3, r2
   1767c:	ldr	r2, [r0, #16]
   17680:	cmp	r3, r2
   17684:	bhi	176a0 <argp_parse@@Base+0x1828>
   17688:	ldr	r3, [r4, #20]
   1768c:	cmp	r3, #0
   17690:	subge	r5, r5, r3
   17694:	mov	r6, #32
   17698:	mov	r7, #1
   1769c:	b	176bc <argp_parse@@Base+0x1844>
   176a0:	bl	1af30 <argp_error@@Base+0xd8c>
   176a4:	b	17688 <argp_parse@@Base+0x1810>
   176a8:	ldr	r3, [r4, #28]
   176ac:	add	r2, r3, #1
   176b0:	str	r2, [r4, #28]
   176b4:	strb	r6, [r3]
   176b8:	sub	r5, r5, #1
   176bc:	cmp	r5, #0
   176c0:	ble	176ec <argp_parse@@Base+0x1874>
   176c4:	ldr	r2, [r4, #28]
   176c8:	ldr	r3, [r4, #32]
   176cc:	cmp	r2, r3
   176d0:	bcc	176a8 <argp_parse@@Base+0x1830>
   176d4:	mov	r1, r7
   176d8:	mov	r0, r4
   176dc:	bl	1b4d4 <argp_error@@Base+0x1330>
   176e0:	cmp	r0, #0
   176e4:	beq	176b8 <argp_parse@@Base+0x1840>
   176e8:	b	176a8 <argp_parse@@Base+0x1830>
   176ec:	pop	{r4, r5, r6, r7, r8, pc}
   176f0:	push	{r4, r5, r6, lr}
   176f4:	mov	r4, r0
   176f8:	mov	r5, r1
   176fc:	ldr	r3, [r0, #28]
   17700:	ldr	r2, [r0, #24]
   17704:	sub	r3, r3, r2
   17708:	ldr	r2, [r0, #16]
   1770c:	cmp	r3, r2
   17710:	bhi	17754 <argp_parse@@Base+0x18dc>
   17714:	ldr	r3, [r4, #20]
   17718:	cmp	r3, #0
   1771c:	addge	r5, r5, r3
   17720:	ldr	r3, [r4, #8]
   17724:	cmp	r5, r3
   17728:	bcc	17774 <argp_parse@@Base+0x18fc>
   1772c:	ldr	r2, [r4, #28]
   17730:	ldr	r3, [r4, #32]
   17734:	cmp	r2, r3
   17738:	bcs	1775c <argp_parse@@Base+0x18e4>
   1773c:	ldr	r3, [r4, #28]
   17740:	add	r2, r3, #1
   17744:	str	r2, [r4, #28]
   17748:	mov	r2, #10
   1774c:	strb	r2, [r3]
   17750:	pop	{r4, r5, r6, pc}
   17754:	bl	1af30 <argp_error@@Base+0xd8c>
   17758:	b	17714 <argp_parse@@Base+0x189c>
   1775c:	mov	r1, #1
   17760:	mov	r0, r4
   17764:	bl	1b4d4 <argp_error@@Base+0x1330>
   17768:	cmp	r0, #0
   1776c:	popeq	{r4, r5, r6, pc}
   17770:	b	1773c <argp_parse@@Base+0x18c4>
   17774:	ldr	r2, [r4, #28]
   17778:	ldr	r3, [r4, #32]
   1777c:	cmp	r2, r3
   17780:	bcs	1779c <argp_parse@@Base+0x1924>
   17784:	ldr	r3, [r4, #28]
   17788:	add	r2, r3, #1
   1778c:	str	r2, [r4, #28]
   17790:	mov	r2, #32
   17794:	strb	r2, [r3]
   17798:	pop	{r4, r5, r6, pc}
   1779c:	mov	r1, #1
   177a0:	mov	r0, r4
   177a4:	bl	1b4d4 <argp_error@@Base+0x1330>
   177a8:	cmp	r0, #0
   177ac:	bne	17784 <argp_parse@@Base+0x190c>
   177b0:	pop	{r4, r5, r6, pc}
   177b4:	push	{r4, r5, r6, lr}
   177b8:	ldr	r5, [r0, #8]
   177bc:	ldr	r2, [r0, #12]
   177c0:	ldr	ip, [r1, #12]
   177c4:	orr	r2, r2, ip
   177c8:	cmp	r5, #0
   177cc:	beq	17818 <argp_parse@@Base+0x19a0>
   177d0:	tst	r2, #16
   177d4:	bne	17810 <argp_parse@@Base+0x1998>
   177d8:	mov	r6, r3
   177dc:	mov	r4, r0
   177e0:	tst	r2, #1
   177e4:	bne	17828 <argp_parse@@Base+0x19b0>
   177e8:	mov	r0, r5
   177ec:	bl	119dc <strlen@plt>
   177f0:	add	r1, r0, #6
   177f4:	mov	r0, r6
   177f8:	bl	176f0 <argp_parse@@Base+0x1878>
   177fc:	mov	r3, r5
   17800:	ldr	r2, [r4, #4]
   17804:	ldr	r1, [pc, #52]	; 17840 <argp_parse@@Base+0x19c8>
   17808:	mov	r0, r6
   1780c:	bl	1b5c4 <argp_error@@Base+0x1420>
   17810:	mov	r0, #0
   17814:	pop	{r4, r5, r6, pc}
   17818:	ldr	r5, [r1, #8]
   1781c:	cmp	r5, #0
   17820:	beq	17810 <argp_parse@@Base+0x1998>
   17824:	b	177d0 <argp_parse@@Base+0x1958>
   17828:	mov	r3, r5
   1782c:	ldr	r2, [r0, #4]
   17830:	ldr	r1, [pc, #12]	; 17844 <argp_parse@@Base+0x19cc>
   17834:	mov	r0, r6
   17838:	bl	1b5c4 <argp_error@@Base+0x1420>
   1783c:	b	17810 <argp_parse@@Base+0x1998>
   17840:	andeq	ip, r1, r4, asr #18
   17844:	andeq	ip, r1, r8, lsr r9
   17848:	push	{r4, r5, r6, lr}
   1784c:	subs	r5, r2, #0
   17850:	popeq	{r4, r5, r6, pc}
   17854:	ldr	ip, [r5, #20]
   17858:	cmp	ip, #0
   1785c:	popeq	{r4, r5, r6, pc}
   17860:	mov	r6, r1
   17864:	mov	r4, r0
   17868:	mov	r1, r3
   1786c:	mov	r0, r5
   17870:	bl	168ec <argp_parse@@Base+0xa74>
   17874:	ldr	r3, [r5, #20]
   17878:	mov	r2, r0
   1787c:	mov	r1, r4
   17880:	mov	r0, r6
   17884:	blx	r3
   17888:	pop	{r4, r5, r6, pc}
   1788c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17890:	sub	sp, sp, #28
   17894:	str	r1, [sp, #16]
   17898:	mov	r8, r2
   1789c:	mov	r4, r3
   178a0:	ldr	r5, [sp, #64]	; 0x40
   178a4:	ldr	r3, [r2]
   178a8:	mov	r6, r3
   178ac:	str	r3, [sp, #20]
   178b0:	ldr	sl, [r0, #16]
   178b4:	ldr	r2, [r0, #8]
   178b8:	mov	ip, r2
   178bc:	str	r2, [sp, #12]
   178c0:	mov	r3, r1
   178c4:	mov	r2, r0
   178c8:	ldr	r1, [pc, #424]	; 17a78 <argp_parse@@Base+0x1c00>
   178cc:	mov	r0, ip
   178d0:	bl	17848 <argp_parse@@Base+0x19d0>
   178d4:	subs	r3, r0, #0
   178d8:	str	r3, [sp, #8]
   178dc:	beq	17a64 <argp_parse@@Base+0x1bec>
   178e0:	mov	r1, #10
   178e4:	mov	r0, r3
   178e8:	bl	117cc <strchrnul@plt>
   178ec:	mov	r7, r0
   178f0:	ldrb	r3, [r0]
   178f4:	cmp	r3, #0
   178f8:	beq	17a34 <argp_parse@@Base+0x1bbc>
   178fc:	ldrb	fp, [r6]
   17900:	cmp	fp, #0
   17904:	ble	17a2c <argp_parse@@Base+0x1bb4>
   17908:	mov	r6, #0
   1790c:	add	r9, r0, #1
   17910:	mov	r1, #10
   17914:	mov	r0, r9
   17918:	bl	117cc <strchrnul@plt>
   1791c:	add	r6, r6, #1
   17920:	cmp	r6, fp
   17924:	bne	1790c <argp_parse@@Base+0x1a94>
   17928:	mov	r7, r0
   1792c:	ldr	r3, [r8]
   17930:	add	r3, r3, #1
   17934:	str	r3, [r8]
   17938:	mov	fp, #1
   1793c:	add	r1, r7, #1
   17940:	sub	r1, r1, r9
   17944:	mov	r0, r5
   17948:	bl	176f0 <argp_parse@@Base+0x1878>
   1794c:	sub	r6, r7, r9
   17950:	ldr	r3, [r5, #28]
   17954:	add	r3, r3, r6
   17958:	ldr	r2, [r5, #32]
   1795c:	cmp	r2, r3
   17960:	bcs	17978 <argp_parse@@Base+0x1b00>
   17964:	mov	r1, r6
   17968:	mov	r0, r5
   1796c:	bl	1b4d4 <argp_error@@Base+0x1330>
   17970:	cmp	r0, #0
   17974:	beq	17994 <argp_parse@@Base+0x1b1c>
   17978:	mov	r2, r6
   1797c:	mov	r1, r9
   17980:	ldr	r0, [r5, #28]
   17984:	bl	11808 <memcpy@plt>
   17988:	ldr	r3, [r5, #28]
   1798c:	add	r6, r3, r6
   17990:	str	r6, [r5, #28]
   17994:	ldr	r3, [sp, #12]
   17998:	ldr	r2, [sp, #8]
   1799c:	cmp	r3, r2
   179a0:	bne	17a40 <argp_parse@@Base+0x1bc8>
   179a4:	cmp	sl, #0
   179a8:	beq	179e8 <argp_parse@@Base+0x1b70>
   179ac:	ldr	r0, [sl]
   179b0:	cmp	r0, #0
   179b4:	beq	179e8 <argp_parse@@Base+0x1b70>
   179b8:	mov	r3, r4
   179bc:	ldr	r4, [sp, #16]
   179c0:	str	r5, [sp]
   179c4:	mov	r2, r8
   179c8:	mov	r1, r4
   179cc:	bl	1788c <argp_parse@@Base+0x1a14>
   179d0:	clz	r3, r0
   179d4:	lsr	r3, r3, #5
   179d8:	ldr	r0, [sl, #16]!
   179dc:	cmp	r0, #0
   179e0:	bne	179c0 <argp_parse@@Base+0x1b48>
   179e4:	mov	r4, r3
   179e8:	cmp	r4, #0
   179ec:	moveq	fp, #0
   179f0:	andne	fp, fp, #1
   179f4:	cmp	fp, #0
   179f8:	beq	17a1c <argp_parse@@Base+0x1ba4>
   179fc:	ldrb	r3, [r7]
   17a00:	cmp	r3, #0
   17a04:	bne	17a4c <argp_parse@@Base+0x1bd4>
   17a08:	ldr	r2, [sp, #20]
   17a0c:	ldrb	r3, [r2]
   17a10:	cmp	r3, #0
   17a14:	movne	r3, #0
   17a18:	strbne	r3, [r2]
   17a1c:	clz	r0, r4
   17a20:	lsr	r0, r0, #5
   17a24:	add	sp, sp, #28
   17a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17a2c:	ldr	r9, [sp, #8]
   17a30:	b	1792c <argp_parse@@Base+0x1ab4>
   17a34:	ldr	r9, [sp, #8]
   17a38:	mov	fp, #0
   17a3c:	b	1793c <argp_parse@@Base+0x1ac4>
   17a40:	mov	r0, r2
   17a44:	bl	16a6c <argp_parse@@Base+0xbf4>
   17a48:	b	179a4 <argp_parse@@Base+0x1b2c>
   17a4c:	ldr	r2, [sp, #20]
   17a50:	ldrb	r3, [r2]
   17a54:	add	r3, r3, #1
   17a58:	strb	r3, [r2]
   17a5c:	mov	r4, #0
   17a60:	b	17a1c <argp_parse@@Base+0x1ba4>
   17a64:	cmp	sl, #0
   17a68:	beq	17a1c <argp_parse@@Base+0x1ba4>
   17a6c:	ldr	r7, [sp, #8]
   17a70:	mov	fp, #0
   17a74:	b	179ac <argp_parse@@Base+0x1b34>
   17a78:	andeq	r0, r0, #6
   17a7c:	push	{r4, r5, r6, r7, r8, lr}
   17a80:	mov	r7, r0
   17a84:	mov	r4, r2
   17a88:	ldr	r3, [r2, #16]
   17a8c:	mov	r2, r1
   17a90:	ldr	r1, [pc, #448]	; 17c58 <argp_parse@@Base+0x1de0>
   17a94:	bl	17848 <argp_parse@@Base+0x19d0>
   17a98:	subs	r5, r0, #0
   17a9c:	beq	17bf0 <argp_parse@@Base+0x1d78>
   17aa0:	ldrb	r3, [r5]
   17aa4:	cmp	r3, #0
   17aa8:	beq	17be4 <argp_parse@@Base+0x1d6c>
   17aac:	ldr	r3, [r4, #8]
   17ab0:	ldr	r3, [r3]
   17ab4:	cmp	r3, #0
   17ab8:	beq	17ae4 <argp_parse@@Base+0x1c6c>
   17abc:	ldr	r6, [r4, #4]
   17ac0:	ldr	r2, [r6, #28]
   17ac4:	ldr	r3, [r6, #32]
   17ac8:	cmp	r2, r3
   17acc:	bcs	17c04 <argp_parse@@Base+0x1d8c>
   17ad0:	ldr	r3, [r6, #28]
   17ad4:	add	r2, r3, #1
   17ad8:	str	r2, [r6, #28]
   17adc:	mov	r2, #10
   17ae0:	strb	r2, [r3]
   17ae4:	ldr	r8, [pc, #368]	; 17c5c <argp_parse@@Base+0x1de4>
   17ae8:	ldr	r1, [r8, #24]
   17aec:	ldr	r0, [r4, #4]
   17af0:	bl	17664 <argp_parse@@Base+0x17ec>
   17af4:	ldr	r6, [r4, #4]
   17af8:	ldr	r8, [r8, #24]
   17afc:	ldr	r3, [r6, #28]
   17b00:	ldr	r2, [r6, #24]
   17b04:	sub	r3, r3, r2
   17b08:	ldr	r2, [r6, #16]
   17b0c:	cmp	r3, r2
   17b10:	bhi	17c1c <argp_parse@@Base+0x1da4>
   17b14:	str	r8, [r6, #4]
   17b18:	ldr	r6, [r4, #4]
   17b1c:	ldr	r3, [pc, #312]	; 17c5c <argp_parse@@Base+0x1de4>
   17b20:	ldr	r8, [r3, #24]
   17b24:	ldr	r3, [r6, #28]
   17b28:	ldr	r2, [r6, #24]
   17b2c:	sub	r3, r3, r2
   17b30:	ldr	r2, [r6, #16]
   17b34:	cmp	r3, r2
   17b38:	bhi	17c28 <argp_parse@@Base+0x1db0>
   17b3c:	str	r8, [r6, #12]
   17b40:	mov	r0, r5
   17b44:	bl	119dc <strlen@plt>
   17b48:	subs	r8, r0, #0
   17b4c:	beq	17b98 <argp_parse@@Base+0x1d20>
   17b50:	ldr	r6, [r4, #4]
   17b54:	ldr	r3, [r6, #28]
   17b58:	add	r3, r3, r8
   17b5c:	ldr	r2, [r6, #32]
   17b60:	cmp	r2, r3
   17b64:	bcs	17b7c <argp_parse@@Base+0x1d04>
   17b68:	mov	r1, r8
   17b6c:	mov	r0, r6
   17b70:	bl	1b4d4 <argp_error@@Base+0x1330>
   17b74:	cmp	r0, #0
   17b78:	beq	17b98 <argp_parse@@Base+0x1d20>
   17b7c:	mov	r2, r8
   17b80:	mov	r1, r5
   17b84:	ldr	r0, [r6, #28]
   17b88:	bl	11808 <memcpy@plt>
   17b8c:	ldr	r3, [r6, #28]
   17b90:	add	r8, r3, r8
   17b94:	str	r8, [r6, #28]
   17b98:	ldr	r6, [r4, #4]
   17b9c:	ldr	r3, [r6, #28]
   17ba0:	ldr	r2, [r6, #24]
   17ba4:	sub	r3, r3, r2
   17ba8:	ldr	r2, [r6, #16]
   17bac:	cmp	r3, r2
   17bb0:	bhi	17c34 <argp_parse@@Base+0x1dbc>
   17bb4:	mov	r3, #0
   17bb8:	str	r3, [r6, #4]
   17bbc:	ldr	r6, [r4, #4]
   17bc0:	ldr	r2, [r6, #28]
   17bc4:	ldr	r3, [r6, #32]
   17bc8:	cmp	r2, r3
   17bcc:	bcs	17c40 <argp_parse@@Base+0x1dc8>
   17bd0:	ldr	r3, [r6, #28]
   17bd4:	add	r2, r3, #1
   17bd8:	str	r2, [r6, #28]
   17bdc:	mov	r2, #10
   17be0:	strb	r2, [r3]
   17be4:	ldr	r3, [r4, #8]
   17be8:	mov	r2, #1
   17bec:	str	r2, [r3, #4]
   17bf0:	cmp	r7, r5
   17bf4:	popeq	{r4, r5, r6, r7, r8, pc}
   17bf8:	mov	r0, r5
   17bfc:	bl	16a6c <argp_parse@@Base+0xbf4>
   17c00:	pop	{r4, r5, r6, r7, r8, pc}
   17c04:	mov	r1, #1
   17c08:	mov	r0, r6
   17c0c:	bl	1b4d4 <argp_error@@Base+0x1330>
   17c10:	cmp	r0, #0
   17c14:	beq	17ae4 <argp_parse@@Base+0x1c6c>
   17c18:	b	17ad0 <argp_parse@@Base+0x1c58>
   17c1c:	mov	r0, r6
   17c20:	bl	1af30 <argp_error@@Base+0xd8c>
   17c24:	b	17b14 <argp_parse@@Base+0x1c9c>
   17c28:	mov	r0, r6
   17c2c:	bl	1af30 <argp_error@@Base+0xd8c>
   17c30:	b	17b3c <argp_parse@@Base+0x1cc4>
   17c34:	mov	r0, r6
   17c38:	bl	1af30 <argp_error@@Base+0xd8c>
   17c3c:	b	17bb4 <argp_parse@@Base+0x1d3c>
   17c40:	mov	r1, #1
   17c44:	mov	r0, r6
   17c48:	bl	1b4d4 <argp_error@@Base+0x1330>
   17c4c:	cmp	r0, #0
   17c50:	beq	17be4 <argp_parse@@Base+0x1d6c>
   17c54:	b	17bd0 <argp_parse@@Base+0x1d58>
   17c58:	andeq	r0, r0, #3
   17c5c:	andeq	sp, r2, r0, ror r3
   17c60:	push	{r4, r5, r6, r7, r8, lr}
   17c64:	mov	r6, r0
   17c68:	mov	r4, r1
   17c6c:	ldr	r3, [r1, #12]
   17c70:	cmp	r3, #0
   17c74:	beq	17d94 <argp_parse@@Base+0x1f1c>
   17c78:	ldr	r3, [r1, #8]
   17c7c:	ldr	r7, [r3]
   17c80:	ldr	r2, [r1]
   17c84:	ldr	r5, [r2, #16]
   17c88:	ldr	r3, [r3, #4]
   17c8c:	cmp	r3, #0
   17c90:	cmpne	r7, #0
   17c94:	beq	17cd0 <argp_parse@@Base+0x1e58>
   17c98:	ldr	r2, [r2, #12]
   17c9c:	ldr	r3, [r7, #12]
   17ca0:	cmp	r2, r3
   17ca4:	beq	17cd0 <argp_parse@@Base+0x1e58>
   17ca8:	ldr	r8, [r1, #4]
   17cac:	ldr	r2, [r8, #28]
   17cb0:	ldr	r3, [r8, #32]
   17cb4:	cmp	r2, r3
   17cb8:	bcs	17d70 <argp_parse@@Base+0x1ef8>
   17cbc:	ldr	r3, [r8, #28]
   17cc0:	add	r2, r3, #1
   17cc4:	str	r2, [r8, #28]
   17cc8:	mov	r2, #10
   17ccc:	strb	r2, [r3]
   17cd0:	cmp	r5, #0
   17cd4:	beq	17d58 <argp_parse@@Base+0x1ee0>
   17cd8:	ldr	r0, [r5]
   17cdc:	cmp	r0, #0
   17ce0:	beq	17d58 <argp_parse@@Base+0x1ee0>
   17ce4:	ldrb	r3, [r0]
   17ce8:	cmp	r3, #0
   17cec:	beq	17d58 <argp_parse@@Base+0x1ee0>
   17cf0:	cmp	r7, #0
   17cf4:	beq	17d24 <argp_parse@@Base+0x1eac>
   17cf8:	ldr	r3, [r7, #16]
   17cfc:	cmp	r5, r3
   17d00:	beq	17d58 <argp_parse@@Base+0x1ee0>
   17d04:	cmp	r3, #0
   17d08:	beq	17d24 <argp_parse@@Base+0x1eac>
   17d0c:	ldr	r3, [r3, #12]
   17d10:	cmp	r3, #0
   17d14:	cmpne	r5, r3
   17d18:	bne	17d0c <argp_parse@@Base+0x1e94>
   17d1c:	cmp	r5, r3
   17d20:	beq	17d58 <argp_parse@@Base+0x1ee0>
   17d24:	ldr	r3, [r4, #4]
   17d28:	ldr	r7, [r3, #12]
   17d2c:	mov	r2, r4
   17d30:	ldr	r1, [r5, #16]
   17d34:	bl	17a7c <argp_parse@@Base+0x1c04>
   17d38:	ldr	r5, [r4, #4]
   17d3c:	ldr	r3, [r5, #28]
   17d40:	ldr	r2, [r5, #24]
   17d44:	sub	r3, r3, r2
   17d48:	ldr	r2, [r5, #16]
   17d4c:	cmp	r3, r2
   17d50:	bhi	17d88 <argp_parse@@Base+0x1f10>
   17d54:	str	r7, [r5, #12]
   17d58:	mov	r3, #0
   17d5c:	str	r3, [r4, #12]
   17d60:	mov	r1, r6
   17d64:	ldr	r0, [r4, #4]
   17d68:	bl	17664 <argp_parse@@Base+0x17ec>
   17d6c:	pop	{r4, r5, r6, r7, r8, pc}
   17d70:	mov	r1, #1
   17d74:	mov	r0, r8
   17d78:	bl	1b4d4 <argp_error@@Base+0x1330>
   17d7c:	cmp	r0, #0
   17d80:	beq	17cd0 <argp_parse@@Base+0x1e58>
   17d84:	b	17cbc <argp_parse@@Base+0x1e44>
   17d88:	mov	r0, r5
   17d8c:	bl	1af30 <argp_error@@Base+0xd8c>
   17d90:	b	17d54 <argp_parse@@Base+0x1edc>
   17d94:	ldr	r5, [r1, #4]
   17d98:	ldr	r3, [r5, #28]
   17d9c:	add	r3, r3, #2
   17da0:	ldr	r2, [r5, #32]
   17da4:	cmp	r2, r3
   17da8:	bcs	17dc0 <argp_parse@@Base+0x1f48>
   17dac:	mov	r1, #2
   17db0:	mov	r0, r5
   17db4:	bl	1b4d4 <argp_error@@Base+0x1330>
   17db8:	cmp	r0, #0
   17dbc:	beq	17d60 <argp_parse@@Base+0x1ee8>
   17dc0:	ldr	r3, [r5, #28]
   17dc4:	ldr	r2, [pc, #20]	; 17de0 <argp_parse@@Base+0x1f68>
   17dc8:	ldrh	r2, [r2]
   17dcc:	strh	r2, [r3]
   17dd0:	ldr	r3, [r5, #28]
   17dd4:	add	r3, r3, #2
   17dd8:	str	r3, [r5, #28]
   17ddc:	b	17d60 <argp_parse@@Base+0x1ee8>
   17de0:	andeq	ip, r1, r0, asr r9
   17de4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17de8:	sub	sp, sp, #28
   17dec:	mov	fp, r0
   17df0:	str	r1, [sp, #8]
   17df4:	mov	r6, r2
   17df8:	mov	r8, r3
   17dfc:	ldr	r7, [sp, #64]	; 0x40
   17e00:	ldr	r5, [sp, #68]	; 0x44
   17e04:	ldr	r9, [r0, #12]
   17e08:	ldr	r3, [r0, #16]
   17e0c:	str	r3, [sp, #16]
   17e10:	cmp	r9, #0
   17e14:	beq	18270 <argp_parse@@Base+0x23f8>
   17e18:	mov	r1, #11
   17e1c:	mov	r0, r9
   17e20:	bl	119f4 <strchr@plt>
   17e24:	cmp	r6, #0
   17e28:	beq	18120 <argp_parse@@Base+0x22a8>
   17e2c:	cmp	r0, #0
   17e30:	addne	r9, r0, #1
   17e34:	beq	18258 <argp_parse@@Base+0x23e0>
   17e38:	ldr	r3, [fp, #20]
   17e3c:	cmp	r3, #0
   17e40:	movne	sl, #0
   17e44:	beq	18260 <argp_parse@@Base+0x23e8>
   17e48:	ldr	r1, [sp, #8]
   17e4c:	mov	r0, fp
   17e50:	bl	168ec <argp_parse@@Base+0xa74>
   17e54:	str	r0, [sp, #12]
   17e58:	ldr	r3, [fp, #20]
   17e5c:	ldr	r2, [pc, #1140]	; 182d8 <argp_parse@@Base+0x2460>
   17e60:	ldr	r0, [pc, #1140]	; 182dc <argp_parse@@Base+0x2464>
   17e64:	cmp	r6, #0
   17e68:	moveq	r0, r2
   17e6c:	ldr	r2, [sp, #12]
   17e70:	mov	r1, r9
   17e74:	blx	r3
   17e78:	mov	r4, r0
   17e7c:	cmp	r4, #0
   17e80:	beq	18210 <argp_parse@@Base+0x2398>
   17e84:	cmp	r8, #0
   17e88:	beq	17eb0 <argp_parse@@Base+0x2038>
   17e8c:	ldr	r2, [r5, #28]
   17e90:	ldr	r3, [r5, #32]
   17e94:	cmp	r2, r3
   17e98:	bcs	18164 <argp_parse@@Base+0x22ec>
   17e9c:	ldr	r3, [r5, #28]
   17ea0:	add	r2, r3, #1
   17ea4:	str	r2, [r5, #28]
   17ea8:	mov	r2, #10
   17eac:	strb	r2, [r3]
   17eb0:	cmp	r4, r9
   17eb4:	movne	r3, #0
   17eb8:	moveq	r3, #1
   17ebc:	cmp	sl, #0
   17ec0:	moveq	r3, #0
   17ec4:	cmp	r3, #0
   17ec8:	beq	1817c <argp_parse@@Base+0x2304>
   17ecc:	ldr	r3, [r5, #28]
   17ed0:	add	r3, r3, sl
   17ed4:	ldr	r2, [r5, #32]
   17ed8:	cmp	r2, r3
   17edc:	bcs	17ef4 <argp_parse@@Base+0x207c>
   17ee0:	mov	r1, sl
   17ee4:	mov	r0, r5
   17ee8:	bl	1b4d4 <argp_error@@Base+0x1330>
   17eec:	cmp	r0, #0
   17ef0:	beq	17f10 <argp_parse@@Base+0x2098>
   17ef4:	mov	r2, sl
   17ef8:	mov	r1, r9
   17efc:	ldr	r0, [r5, #28]
   17f00:	bl	11808 <memcpy@plt>
   17f04:	ldr	r3, [r5, #28]
   17f08:	add	r3, r3, sl
   17f0c:	str	r3, [r5, #28]
   17f10:	ldr	r3, [r5, #28]
   17f14:	ldr	r2, [r5, #24]
   17f18:	sub	r3, r3, r2
   17f1c:	ldr	r2, [r5, #16]
   17f20:	cmp	r3, r2
   17f24:	bhi	181dc <argp_parse@@Base+0x2364>
   17f28:	ldr	r3, [r5, #20]
   17f2c:	bic	r3, r3, r3, asr #31
   17f30:	ldr	r2, [r5, #4]
   17f34:	cmp	r2, r3
   17f38:	bcs	17f60 <argp_parse@@Base+0x20e8>
   17f3c:	ldr	r2, [r5, #28]
   17f40:	ldr	r3, [r5, #32]
   17f44:	cmp	r2, r3
   17f48:	bcs	181e8 <argp_parse@@Base+0x2370>
   17f4c:	ldr	r3, [r5, #28]
   17f50:	add	r2, r3, #1
   17f54:	str	r2, [r5, #28]
   17f58:	mov	r2, #10
   17f5c:	strb	r2, [r3]
   17f60:	cmp	r4, r9
   17f64:	moveq	r4, #1
   17f68:	bne	18200 <argp_parse@@Base+0x2388>
   17f6c:	cmp	r9, #0
   17f70:	cmpne	sl, #0
   17f74:	beq	17f8c <argp_parse@@Base+0x2114>
   17f78:	ldr	r3, [fp, #20]
   17f7c:	cmp	r3, #0
   17f80:	beq	18098 <argp_parse@@Base+0x2220>
   17f84:	mov	r0, r9
   17f88:	bl	16a6c <argp_parse@@Base+0xbf4>
   17f8c:	cmp	r6, #0
   17f90:	beq	18098 <argp_parse@@Base+0x2220>
   17f94:	ldr	r3, [fp, #20]
   17f98:	cmp	r3, #0
   17f9c:	beq	18098 <argp_parse@@Base+0x2220>
   17fa0:	ldr	r2, [sp, #12]
   17fa4:	mov	r1, #0
   17fa8:	ldr	r0, [pc, #816]	; 182e0 <argp_parse@@Base+0x2468>
   17fac:	blx	r3
   17fb0:	subs	r9, r0, #0
   17fb4:	beq	18098 <argp_parse@@Base+0x2220>
   17fb8:	orrs	r3, r8, r4
   17fbc:	beq	17fe4 <argp_parse@@Base+0x216c>
   17fc0:	ldr	r2, [r5, #28]
   17fc4:	ldr	r3, [r5, #32]
   17fc8:	cmp	r2, r3
   17fcc:	bcs	18218 <argp_parse@@Base+0x23a0>
   17fd0:	ldr	r3, [r5, #28]
   17fd4:	add	r2, r3, #1
   17fd8:	str	r2, [r5, #28]
   17fdc:	mov	r2, #10
   17fe0:	strb	r2, [r3]
   17fe4:	mov	r0, r9
   17fe8:	bl	119dc <strlen@plt>
   17fec:	subs	r4, r0, #0
   17ff0:	beq	18038 <argp_parse@@Base+0x21c0>
   17ff4:	ldr	r3, [r5, #28]
   17ff8:	add	r3, r3, r4
   17ffc:	ldr	r2, [r5, #32]
   18000:	cmp	r2, r3
   18004:	bcs	1801c <argp_parse@@Base+0x21a4>
   18008:	mov	r1, r4
   1800c:	mov	r0, r5
   18010:	bl	1b4d4 <argp_error@@Base+0x1330>
   18014:	cmp	r0, #0
   18018:	beq	18038 <argp_parse@@Base+0x21c0>
   1801c:	mov	r2, r4
   18020:	mov	r1, r9
   18024:	ldr	r0, [r5, #28]
   18028:	bl	11808 <memcpy@plt>
   1802c:	ldr	r3, [r5, #28]
   18030:	add	r4, r3, r4
   18034:	str	r4, [r5, #28]
   18038:	mov	r0, r9
   1803c:	bl	16a6c <argp_parse@@Base+0xbf4>
   18040:	ldr	r3, [r5, #28]
   18044:	ldr	r2, [r5, #24]
   18048:	sub	r3, r3, r2
   1804c:	ldr	r2, [r5, #16]
   18050:	cmp	r3, r2
   18054:	bhi	18230 <argp_parse@@Base+0x23b8>
   18058:	ldr	r3, [r5, #20]
   1805c:	bic	r3, r3, r3, asr #31
   18060:	ldr	r2, [r5, #4]
   18064:	cmp	r2, r3
   18068:	movcs	r4, #1
   1806c:	bcs	18098 <argp_parse@@Base+0x2220>
   18070:	ldr	r2, [r5, #28]
   18074:	ldr	r3, [r5, #32]
   18078:	cmp	r2, r3
   1807c:	bcs	1823c <argp_parse@@Base+0x23c4>
   18080:	ldr	r3, [r5, #28]
   18084:	add	r2, r3, #1
   18088:	str	r2, [r5, #28]
   1808c:	mov	r2, #10
   18090:	strb	r2, [r3]
   18094:	mov	r4, #1
   18098:	ldr	r3, [sp, #16]
   1809c:	cmp	r3, #0
   180a0:	beq	18114 <argp_parse@@Base+0x229c>
   180a4:	ldr	r0, [r3]
   180a8:	cmp	r0, #0
   180ac:	beq	18114 <argp_parse@@Base+0x229c>
   180b0:	clz	r9, r7
   180b4:	lsr	r9, r9, #5
   180b8:	cmp	r7, #0
   180bc:	cmpne	r4, #0
   180c0:	bne	18114 <argp_parse@@Base+0x229c>
   180c4:	mov	sl, r3
   180c8:	ldr	fp, [sp, #8]
   180cc:	orrs	r3, r8, r4
   180d0:	str	r5, [sp, #4]
   180d4:	str	r7, [sp]
   180d8:	movne	r3, #1
   180dc:	moveq	r3, #0
   180e0:	mov	r2, r6
   180e4:	mov	r1, fp
   180e8:	bl	17de4 <argp_parse@@Base+0x1f6c>
   180ec:	orr	r4, r4, r0
   180f0:	ldr	r0, [sl, #16]
   180f4:	cmp	r0, #0
   180f8:	beq	18114 <argp_parse@@Base+0x229c>
   180fc:	add	sl, sl, #16
   18100:	cmp	r4, #0
   18104:	movne	r3, r9
   18108:	orreq	r3, r9, #1
   1810c:	cmp	r3, #0
   18110:	bne	180cc <argp_parse@@Base+0x2254>
   18114:	mov	r0, r4
   18118:	add	sp, sp, #28
   1811c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18120:	cmp	r0, #0
   18124:	beq	182a8 <argp_parse@@Base+0x2430>
   18128:	sub	sl, r0, r9
   1812c:	ldr	r3, [fp, #20]
   18130:	cmp	r3, #0
   18134:	beq	18154 <argp_parse@@Base+0x22dc>
   18138:	cmp	sl, #0
   1813c:	beq	17e48 <argp_parse@@Base+0x1fd0>
   18140:	mov	r1, sl
   18144:	mov	r0, r9
   18148:	bl	117f0 <strndup@plt>
   1814c:	mov	r9, r0
   18150:	b	17e48 <argp_parse@@Base+0x1fd0>
   18154:	mov	r4, r9
   18158:	mov	r3, #0
   1815c:	str	r3, [sp, #12]
   18160:	b	17e84 <argp_parse@@Base+0x200c>
   18164:	mov	r1, #1
   18168:	mov	r0, r5
   1816c:	bl	1b4d4 <argp_error@@Base+0x1330>
   18170:	cmp	r0, #0
   18174:	beq	17eb0 <argp_parse@@Base+0x2038>
   18178:	b	17e9c <argp_parse@@Base+0x2024>
   1817c:	mov	r0, r4
   18180:	bl	119dc <strlen@plt>
   18184:	subs	r3, r0, #0
   18188:	mov	r1, r3
   1818c:	str	r3, [sp, #20]
   18190:	beq	17f10 <argp_parse@@Base+0x2098>
   18194:	ldr	r3, [r5, #28]
   18198:	add	r3, r3, r1
   1819c:	ldr	r2, [r5, #32]
   181a0:	cmp	r2, r3
   181a4:	bcs	181b8 <argp_parse@@Base+0x2340>
   181a8:	mov	r0, r5
   181ac:	bl	1b4d4 <argp_error@@Base+0x1330>
   181b0:	cmp	r0, #0
   181b4:	beq	17f10 <argp_parse@@Base+0x2098>
   181b8:	ldr	r2, [sp, #20]
   181bc:	mov	r1, r4
   181c0:	ldr	r0, [r5, #28]
   181c4:	bl	11808 <memcpy@plt>
   181c8:	ldr	r3, [r5, #28]
   181cc:	ldr	r2, [sp, #20]
   181d0:	add	r3, r3, r2
   181d4:	str	r3, [r5, #28]
   181d8:	b	17f10 <argp_parse@@Base+0x2098>
   181dc:	mov	r0, r5
   181e0:	bl	1af30 <argp_error@@Base+0xd8c>
   181e4:	b	17f28 <argp_parse@@Base+0x20b0>
   181e8:	mov	r1, #1
   181ec:	mov	r0, r5
   181f0:	bl	1b4d4 <argp_error@@Base+0x1330>
   181f4:	cmp	r0, #0
   181f8:	beq	17f60 <argp_parse@@Base+0x20e8>
   181fc:	b	17f4c <argp_parse@@Base+0x20d4>
   18200:	mov	r0, r4
   18204:	bl	16a6c <argp_parse@@Base+0xbf4>
   18208:	mov	r4, #1
   1820c:	b	17f6c <argp_parse@@Base+0x20f4>
   18210:	mov	r4, #0
   18214:	b	17f6c <argp_parse@@Base+0x20f4>
   18218:	mov	r1, #1
   1821c:	mov	r0, r5
   18220:	bl	1b4d4 <argp_error@@Base+0x1330>
   18224:	cmp	r0, #0
   18228:	beq	17fe4 <argp_parse@@Base+0x216c>
   1822c:	b	17fd0 <argp_parse@@Base+0x2158>
   18230:	mov	r0, r5
   18234:	bl	1af30 <argp_error@@Base+0xd8c>
   18238:	b	18058 <argp_parse@@Base+0x21e0>
   1823c:	mov	r1, #1
   18240:	mov	r0, r5
   18244:	bl	1b4d4 <argp_error@@Base+0x1330>
   18248:	cmp	r0, #0
   1824c:	moveq	r4, #1
   18250:	beq	18098 <argp_parse@@Base+0x2220>
   18254:	b	18080 <argp_parse@@Base+0x2208>
   18258:	mov	r9, #0
   1825c:	b	17e38 <argp_parse@@Base+0x1fc0>
   18260:	mov	r4, r9
   18264:	mov	sl, #0
   18268:	str	sl, [sp, #12]
   1826c:	b	17e7c <argp_parse@@Base+0x2004>
   18270:	ldr	r3, [r0, #20]
   18274:	cmp	r3, #0
   18278:	movne	sl, #0
   1827c:	bne	17e48 <argp_parse@@Base+0x1fd0>
   18280:	mov	r3, r9
   18284:	cmp	r9, #0
   18288:	moveq	r4, #0
   1828c:	streq	r4, [sp, #12]
   18290:	beq	17f8c <argp_parse@@Base+0x2114>
   18294:	mov	r4, r9
   18298:	mov	r9, r3
   1829c:	mov	sl, #0
   182a0:	str	sl, [sp, #12]
   182a4:	b	17e84 <argp_parse@@Base+0x200c>
   182a8:	ldr	r3, [fp, #20]
   182ac:	cmp	r3, #0
   182b0:	moveq	r3, r9
   182b4:	beq	18284 <argp_parse@@Base+0x240c>
   182b8:	ldr	r1, [sp, #8]
   182bc:	mov	r0, fp
   182c0:	bl	168ec <argp_parse@@Base+0xa74>
   182c4:	str	r0, [sp, #12]
   182c8:	ldr	r3, [fp, #20]
   182cc:	mov	sl, #0
   182d0:	ldr	r0, [pc]	; 182d8 <argp_parse@@Base+0x2460>
   182d4:	b	17e6c <argp_parse@@Base+0x1ff4>
   182d8:	andeq	r0, r0, #1
   182dc:	andeq	r0, r0, #2
   182e0:	andeq	r0, r0, #4
   182e4:	ldr	r3, [r0, #12]
   182e8:	ldr	r2, [r1, #12]
   182ec:	cmp	r3, r2
   182f0:	beq	18348 <argp_parse@@Base+0x24d0>
   182f4:	push	{r4, r5, r6, lr}
   182f8:	mov	r5, r1
   182fc:	mov	r4, r0
   18300:	mov	r1, r2
   18304:	mov	r0, r3
   18308:	bl	182e4 <argp_parse@@Base+0x246c>
   1830c:	subs	r3, r0, #0
   18310:	bne	18340 <argp_parse@@Base+0x24c8>
   18314:	ldr	r0, [r4, #8]
   18318:	ldr	r3, [r5, #8]
   1831c:	mvn	r2, r3
   18320:	lsr	r2, r2, #31
   18324:	cmp	r2, r0, lsr #31
   18328:	subne	r3, r0, r3
   1832c:	subeq	r3, r3, r0
   18330:	cmp	r3, #0
   18334:	ldreq	r3, [r5, #4]
   18338:	ldreq	r0, [r4, #4]
   1833c:	subeq	r3, r3, r0
   18340:	mov	r0, r3
   18344:	pop	{r4, r5, r6, pc}
   18348:	ldr	r2, [r0, #8]
   1834c:	ldr	r3, [r1, #8]
   18350:	mvn	ip, r3
   18354:	lsr	ip, ip, #31
   18358:	cmp	ip, r2, lsr #31
   1835c:	subne	r3, r2, r3
   18360:	subeq	r3, r3, r2
   18364:	cmp	r3, #0
   18368:	ldreq	r3, [r1, #4]
   1836c:	ldreq	r0, [r0, #4]
   18370:	subeq	r3, r3, r0
   18374:	mov	r0, r3
   18378:	bx	lr
   1837c:	push	{r4, r5, r6, r7, r8, lr}
   18380:	sub	sp, sp, #8
   18384:	ldr	lr, [r0, #16]
   18388:	cmp	lr, #0
   1838c:	movne	r2, lr
   18390:	bne	183a0 <argp_parse@@Base+0x2528>
   18394:	ldr	ip, [r0, #12]
   18398:	b	183b0 <argp_parse@@Base+0x2538>
   1839c:	mov	r2, r3
   183a0:	ldr	r3, [r2, #12]
   183a4:	cmp	r3, #0
   183a8:	bne	1839c <argp_parse@@Base+0x2524>
   183ac:	ldr	ip, [r2, #8]
   183b0:	ldr	r5, [r1, #16]
   183b4:	cmp	r5, #0
   183b8:	movne	r2, r5
   183bc:	bne	183cc <argp_parse@@Base+0x2554>
   183c0:	ldr	r4, [r1, #12]
   183c4:	b	183dc <argp_parse@@Base+0x2564>
   183c8:	mov	r2, r3
   183cc:	ldr	r3, [r2, #12]
   183d0:	cmp	r3, #0
   183d4:	bne	183c8 <argp_parse@@Base+0x2550>
   183d8:	ldr	r4, [r2, #8]
   183dc:	mvn	r3, r4
   183e0:	lsr	r3, r3, #31
   183e4:	cmp	r3, ip, lsr #31
   183e8:	subne	r4, ip, r4
   183ec:	subeq	r4, r4, ip
   183f0:	cmp	r4, #0
   183f4:	bne	1845c <argp_parse@@Base+0x25e4>
   183f8:	adds	r4, r5, #0
   183fc:	movne	r4, #1
   18400:	cmp	lr, #0
   18404:	rsbeq	r4, r4, #0
   18408:	rsbne	r4, r4, #1
   1840c:	cmp	r4, #0
   18410:	bne	1845c <argp_parse@@Base+0x25e4>
   18414:	mov	r6, r1
   18418:	mov	r7, r0
   1841c:	cmp	lr, #0
   18420:	beq	184ac <argp_parse@@Base+0x2634>
   18424:	ldr	ip, [lr, #20]
   18428:	ldr	r2, [r5, #20]
   1842c:	cmp	ip, r2
   18430:	ble	18468 <argp_parse@@Base+0x25f0>
   18434:	mov	r0, lr
   18438:	ldr	r0, [r0, #12]
   1843c:	ldr	r3, [r0, #20]
   18440:	cmp	r2, r3
   18444:	blt	18438 <argp_parse@@Base+0x25c0>
   18448:	mov	r1, r5
   1844c:	bl	182e4 <argp_parse@@Base+0x246c>
   18450:	subs	r4, r0, #0
   18454:	cmp	r0, #0
   18458:	moveq	r4, #1
   1845c:	mov	r0, r4
   18460:	add	sp, sp, #8
   18464:	pop	{r4, r5, r6, r7, r8, pc}
   18468:	cmp	ip, r2
   1846c:	bge	18498 <argp_parse@@Base+0x2620>
   18470:	mov	r1, r5
   18474:	ldr	r1, [r1, #12]
   18478:	ldr	r3, [r1, #20]
   1847c:	cmp	ip, r3
   18480:	blt	18474 <argp_parse@@Base+0x25fc>
   18484:	mov	r0, lr
   18488:	bl	182e4 <argp_parse@@Base+0x246c>
   1848c:	subs	r4, r0, #0
   18490:	mvneq	r4, #0
   18494:	b	1845c <argp_parse@@Base+0x25e4>
   18498:	mov	r1, r5
   1849c:	mov	r0, lr
   184a0:	bl	182e4 <argp_parse@@Base+0x246c>
   184a4:	subs	r4, r0, #0
   184a8:	bne	1845c <argp_parse@@Base+0x25e4>
   184ac:	ldr	r3, [r7, #12]
   184b0:	ldr	r4, [r6, #12]
   184b4:	mvn	r2, r4
   184b8:	lsr	r2, r2, #31
   184bc:	cmp	r2, r3, lsr #31
   184c0:	subne	r4, r3, r4
   184c4:	subeq	r4, r4, r3
   184c8:	cmp	r4, #0
   184cc:	bne	1845c <argp_parse@@Base+0x25e4>
   184d0:	mov	r0, r7
   184d4:	bl	17124 <argp_parse@@Base+0x12ac>
   184d8:	mov	r5, r0
   184dc:	str	r0, [sp]
   184e0:	mov	r0, r6
   184e4:	bl	17124 <argp_parse@@Base+0x12ac>
   184e8:	str	r0, [sp, #4]
   184ec:	ldr	r3, [r7]
   184f0:	ldr	r3, [r3, #12]
   184f4:	adds	r5, r5, #0
   184f8:	movne	r5, #1
   184fc:	ands	r3, r5, r3, lsr #3
   18500:	beq	18644 <argp_parse@@Base+0x27cc>
   18504:	mov	r0, sp
   18508:	bl	172e8 <argp_parse@@Base+0x1470>
   1850c:	adds	r5, r0, #0
   18510:	movne	r5, #1
   18514:	ldr	r3, [r6]
   18518:	ldr	r0, [r3, #12]
   1851c:	ands	r0, r0, #8
   18520:	beq	18540 <argp_parse@@Base+0x26c8>
   18524:	ldr	r3, [sp, #4]
   18528:	cmp	r3, #0
   1852c:	beq	1863c <argp_parse@@Base+0x27c4>
   18530:	add	r0, sp, #4
   18534:	bl	172e8 <argp_parse@@Base+0x1470>
   18538:	adds	r0, r0, #0
   1853c:	movne	r0, #1
   18540:	subs	r4, r5, r0
   18544:	bne	1845c <argp_parse@@Base+0x25e4>
   18548:	ldr	r2, [r7, #20]
   1854c:	ldr	r4, [pc, #276]	; 18668 <argp_parse@@Base+0x27f0>
   18550:	mov	r3, #0
   18554:	ldr	r2, [r2, #24]
   18558:	mov	r1, r4
   1855c:	mov	r0, r7
   18560:	bl	171bc <argp_parse@@Base+0x1344>
   18564:	mov	r5, r0
   18568:	uxtb	r8, r0
   1856c:	ldr	r2, [r6, #20]
   18570:	mov	r3, #0
   18574:	ldr	r2, [r2, #24]
   18578:	mov	r1, r4
   1857c:	mov	r0, r6
   18580:	bl	171bc <argp_parse@@Base+0x1344>
   18584:	uxtb	r7, r0
   18588:	cmp	r8, #0
   1858c:	movne	r5, r8
   18590:	bne	185a4 <argp_parse@@Base+0x272c>
   18594:	ldr	r3, [sp]
   18598:	cmp	r3, #0
   1859c:	ldrbne	r5, [r3]
   185a0:	moveq	r5, #0
   185a4:	cmp	r7, #0
   185a8:	uxtbne	r6, r0
   185ac:	bne	185c0 <argp_parse@@Base+0x2748>
   185b0:	ldr	r3, [sp, #4]
   185b4:	cmp	r3, #0
   185b8:	ldrbne	r6, [r3]
   185bc:	moveq	r6, #0
   185c0:	bl	11988 <__ctype_tolower_loc@plt>
   185c4:	ldr	r3, [r0]
   185c8:	ldr	r4, [r3, r5, lsl #2]
   185cc:	ldr	r3, [r3, r6, lsl #2]
   185d0:	subs	r4, r4, r3
   185d4:	bne	1845c <argp_parse@@Base+0x25e4>
   185d8:	subs	r4, r6, r5
   185dc:	bne	1845c <argp_parse@@Base+0x25e4>
   185e0:	adds	r4, r7, #0
   185e4:	movne	r4, #1
   185e8:	cmp	r8, #0
   185ec:	rsbeq	r4, r4, #0
   185f0:	rsbne	r4, r4, #1
   185f4:	cmp	r4, #0
   185f8:	bne	1845c <argp_parse@@Base+0x25e4>
   185fc:	cmp	r8, #0
   18600:	bne	1845c <argp_parse@@Base+0x25e4>
   18604:	ldr	r0, [sp]
   18608:	ldr	r1, [sp, #4]
   1860c:	adds	r4, r1, #0
   18610:	movne	r4, #1
   18614:	cmp	r0, #0
   18618:	rsbeq	r4, r4, #0
   1861c:	rsbne	r4, r4, #1
   18620:	cmp	r4, #0
   18624:	bne	1845c <argp_parse@@Base+0x25e4>
   18628:	cmp	r0, #0
   1862c:	beq	1845c <argp_parse@@Base+0x25e4>
   18630:	bl	118c8 <strcasecmp@plt>
   18634:	mov	r4, r0
   18638:	b	1845c <argp_parse@@Base+0x25e4>
   1863c:	mov	r0, r4
   18640:	b	18540 <argp_parse@@Base+0x26c8>
   18644:	ldr	r3, [r6]
   18648:	ldr	r3, [r3, #12]
   1864c:	tst	r3, #8
   18650:	beq	18548 <argp_parse@@Base+0x26d0>
   18654:	ldr	r3, [sp, #4]
   18658:	cmp	r3, #0
   1865c:	movne	r5, r4
   18660:	bne	18530 <argp_parse@@Base+0x26b8>
   18664:	b	18548 <argp_parse@@Base+0x26d0>
   18668:	andeq	r7, r1, r0, lsr #5
   1866c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18670:	sub	sp, sp, #52	; 0x34
   18674:	str	r0, [sp, #24]
   18678:	str	r1, [sp, #28]
   1867c:	ldr	r2, [r0, #16]
   18680:	str	r2, [sp, #8]
   18684:	ldr	r5, [r0]
   18688:	mov	r0, #16
   1868c:	bl	170a4 <argp_parse@@Base+0x122c>
   18690:	subs	fp, r0, #0
   18694:	beq	186c4 <argp_parse@@Base+0x284c>
   18698:	mov	r3, #0
   1869c:	str	r3, [fp, #4]
   186a0:	str	r3, [fp, #12]
   186a4:	cmp	r5, r3
   186a8:	beq	1889c <argp_parse@@Base+0x2a24>
   186ac:	ldr	r4, [r5, #12]
   186b0:	ands	r4, r4, #4
   186b4:	bne	186d8 <argp_parse@@Base+0x2860>
   186b8:	add	r6, r5, #24
   186bc:	mov	r8, r3
   186c0:	b	18700 <argp_parse@@Base+0x2888>
   186c4:	ldr	r3, [pc, #1576]	; 18cf4 <argp_parse@@Base+0x2e7c>
   186c8:	ldr	r2, [pc, #1576]	; 18cf8 <argp_parse@@Base+0x2e80>
   186cc:	ldr	r1, [pc, #1576]	; 18cfc <argp_parse@@Base+0x2e84>
   186d0:	ldr	r0, [pc, #1576]	; 18d00 <argp_parse@@Base+0x2e88>
   186d4:	bl	11c28 <__assert_fail@plt>
   186d8:	ldr	r3, [pc, #1556]	; 18cf4 <argp_parse@@Base+0x2e7c>
   186dc:	mov	r2, #460	; 0x1cc
   186e0:	ldr	r1, [pc, #1556]	; 18cfc <argp_parse@@Base+0x2e84>
   186e4:	ldr	r0, [pc, #1560]	; 18d04 <argp_parse@@Base+0x2e8c>
   186e8:	bl	11c28 <__assert_fail@plt>
   186ec:	ldr	r2, [fp, #4]
   186f0:	add	r2, r2, #1
   186f4:	str	r2, [fp, #4]
   186f8:	b	18728 <argp_parse@@Base+0x28b0>
   186fc:	add	r6, r6, #24
   18700:	mov	r3, r6
   18704:	ldr	r2, [r6, #-20]	; 0xffffffec
   18708:	cmp	r2, #0
   1870c:	bne	1871c <argp_parse@@Base+0x28a4>
   18710:	ldr	r2, [r6, #-24]	; 0xffffffe8
   18714:	cmp	r2, #0
   18718:	beq	18760 <argp_parse@@Base+0x28e8>
   1871c:	ldr	r2, [r3, #-12]
   18720:	tst	r2, #4
   18724:	beq	186ec <argp_parse@@Base+0x2874>
   18728:	ldr	r2, [r3, #-12]
   1872c:	tst	r2, #8
   18730:	bne	186fc <argp_parse@@Base+0x2884>
   18734:	ldr	r7, [r3, #-20]	; 0xffffffec
   18738:	sub	r3, r7, #1
   1873c:	cmp	r3, #254	; 0xfe
   18740:	bhi	186fc <argp_parse@@Base+0x2884>
   18744:	bl	119ac <__ctype_b_loc@plt>
   18748:	ldr	r3, [r0]
   1874c:	lsl	r7, r7, #1
   18750:	ldrh	r3, [r3, r7]
   18754:	tst	r3, #16384	; 0x4000
   18758:	addne	r8, r8, #1
   1875c:	b	186fc <argp_parse@@Base+0x2884>
   18760:	ldr	r2, [r6, #-8]
   18764:	cmp	r2, #0
   18768:	bne	1871c <argp_parse@@Base+0x28a4>
   1876c:	ldr	r2, [r6, #-4]
   18770:	cmp	r2, #0
   18774:	bne	1871c <argp_parse@@Base+0x28a4>
   18778:	ldr	r0, [fp, #4]
   1877c:	rsb	r0, r0, r0, lsl #3
   18780:	lsl	r0, r0, #2
   18784:	bl	170a4 <argp_parse@@Base+0x122c>
   18788:	str	r0, [fp]
   1878c:	add	r0, r8, #1
   18790:	bl	170a4 <argp_parse@@Base+0x122c>
   18794:	str	r0, [fp, #8]
   18798:	ldr	r8, [fp]
   1879c:	cmp	r0, #0
   187a0:	cmpne	r8, #0
   187a4:	bne	187bc <argp_parse@@Base+0x2944>
   187a8:	ldr	r3, [pc, #1348]	; 18cf4 <argp_parse@@Base+0x2e7c>
   187ac:	ldr	r2, [pc, #1364]	; 18d08 <argp_parse@@Base+0x2e90>
   187b0:	ldr	r1, [pc, #1348]	; 18cfc <argp_parse@@Base+0x2e84>
   187b4:	ldr	r0, [pc, #1360]	; 18d0c <argp_parse@@Base+0x2e94>
   187b8:	bl	11c28 <__assert_fail@plt>
   187bc:	ldr	r2, [fp, #4]
   187c0:	ldr	r3, [pc, #1352]	; 18d10 <argp_parse@@Base+0x2e98>
   187c4:	cmp	r2, r3
   187c8:	addls	r8, r8, #28
   187cc:	movls	r7, r0
   187d0:	movls	sl, #0
   187d4:	bls	18820 <argp_parse@@Base+0x29a8>
   187d8:	ldr	r3, [pc, #1300]	; 18cf4 <argp_parse@@Base+0x2e7c>
   187dc:	mov	r2, #476	; 0x1dc
   187e0:	ldr	r1, [pc, #1300]	; 18cfc <argp_parse@@Base+0x2e84>
   187e4:	ldr	r0, [pc, #1320]	; 18d14 <argp_parse@@Base+0x2e9c>
   187e8:	bl	11c28 <__assert_fail@plt>
   187ec:	ldr	r3, [r5, #4]
   187f0:	cmp	r3, #0
   187f4:	addeq	r9, r4, #1
   187f8:	movne	r9, r4
   187fc:	b	18864 <argp_parse@@Base+0x29ec>
   18800:	ldr	r3, [r5, #16]
   18804:	cmp	r3, #0
   18808:	bne	18c10 <argp_parse@@Base+0x2d98>
   1880c:	ldr	r3, [r5, #20]
   18810:	cmp	r3, #0
   18814:	bne	18c10 <argp_parse@@Base+0x2d98>
   18818:	add	r8, r8, #28
   1881c:	mov	r4, r9
   18820:	ldr	r3, [r5, #4]
   18824:	cmp	r3, #0
   18828:	bne	18838 <argp_parse@@Base+0x29c0>
   1882c:	ldr	r3, [r5]
   18830:	cmp	r3, #0
   18834:	beq	1887c <argp_parse@@Base+0x2a04>
   18838:	mov	r6, r8
   1883c:	str	r5, [r8, #-28]	; 0xffffffe4
   18840:	str	sl, [r8, #-24]	; 0xffffffe8
   18844:	str	r7, [r8, #-20]	; 0xffffffec
   18848:	ldr	r9, [r5, #20]
   1884c:	cmp	r9, #0
   18850:	bne	18864 <argp_parse@@Base+0x29ec>
   18854:	ldr	r3, [r5]
   18858:	cmp	r3, #0
   1885c:	movne	r9, r4
   18860:	beq	187ec <argp_parse@@Base+0x2974>
   18864:	str	r9, [r6, #-16]
   18868:	ldr	r3, [sp, #28]
   1886c:	str	r3, [r6, #-12]
   18870:	ldr	r3, [sp, #24]
   18874:	str	r3, [r6, #-8]
   18878:	b	18c1c <argp_parse@@Base+0x2da4>
   1887c:	ldr	r3, [r5, #16]
   18880:	cmp	r3, #0
   18884:	bne	18838 <argp_parse@@Base+0x29c0>
   18888:	ldr	r3, [r5, #20]
   1888c:	cmp	r3, #0
   18890:	bne	18838 <argp_parse@@Base+0x29c0>
   18894:	mov	r3, #0
   18898:	strb	r3, [r7]
   1889c:	ldr	r3, [sp, #8]
   188a0:	cmp	r3, #0
   188a4:	beq	18be0 <argp_parse@@Base+0x2d68>
   188a8:	ldr	r3, [r3]
   188ac:	cmp	r3, #0
   188b0:	beq	18be0 <argp_parse@@Base+0x2d68>
   188b4:	add	r3, fp, #12
   188b8:	str	r3, [sp, #44]	; 0x2c
   188bc:	str	fp, [sp, #20]
   188c0:	b	18950 <argp_parse@@Base+0x2ad8>
   188c4:	ldr	r1, [sp, #28]
   188c8:	b	189d0 <argp_parse@@Base+0x2b58>
   188cc:	mov	r2, r3
   188d0:	ldr	r3, [r2, #24]
   188d4:	cmp	r3, #0
   188d8:	bne	188cc <argp_parse@@Base+0x2a54>
   188dc:	add	r2, r2, #24
   188e0:	ldr	r1, [sp, #16]
   188e4:	ldr	r3, [r1, #12]
   188e8:	str	r3, [r2]
   188ec:	mov	r2, #0
   188f0:	str	r2, [r1, #12]
   188f4:	ldr	r3, [r1, #4]
   188f8:	cmp	r3, r2
   188fc:	beq	18934 <argp_parse@@Base+0x2abc>
   18900:	ldr	r0, [sp, #20]
   18904:	ldr	r2, [r0, #4]
   18908:	cmp	r2, #0
   1890c:	bne	189f8 <argp_parse@@Base+0x2b80>
   18910:	str	r3, [r0, #4]
   18914:	mov	r2, r1
   18918:	ldr	r3, [r1]
   1891c:	str	r3, [r0]
   18920:	ldr	r3, [r2, #8]
   18924:	str	r3, [r0, #8]
   18928:	mov	r3, r2
   1892c:	mov	r2, #0
   18930:	str	r2, [r3, #4]
   18934:	ldr	r0, [sp, #16]
   18938:	bl	17520 <argp_parse@@Base+0x16a8>
   1893c:	ldr	r2, [sp, #8]
   18940:	ldr	r3, [r2, #16]!
   18944:	str	r2, [sp, #8]
   18948:	cmp	r3, #0
   1894c:	beq	18bdc <argp_parse@@Base+0x2d64>
   18950:	ldr	r3, [sp, #8]
   18954:	ldr	r4, [r3, #12]
   18958:	cmp	r4, #0
   1895c:	bne	1896c <argp_parse@@Base+0x2af4>
   18960:	ldr	r3, [r3, #8]
   18964:	cmp	r3, #0
   18968:	beq	188c4 <argp_parse@@Base+0x2a4c>
   1896c:	ldr	r2, [sp, #8]
   18970:	ldr	r5, [r2, #8]
   18974:	ldr	r7, [sp, #24]
   18978:	ldr	r3, [r7, #16]
   1897c:	sub	r3, r2, r3
   18980:	asr	r6, r3, #4
   18984:	mov	r0, #28
   18988:	bl	170a4 <argp_parse@@Base+0x122c>
   1898c:	subs	r1, r0, #0
   18990:	beq	189d0 <argp_parse@@Base+0x2b58>
   18994:	str	r4, [r1, #8]
   18998:	str	r5, [r1]
   1899c:	str	r6, [r1, #4]
   189a0:	ldr	r3, [sp, #28]
   189a4:	str	r3, [r1, #12]
   189a8:	str	r7, [r1, #16]
   189ac:	cmp	r3, #0
   189b0:	ldrne	r3, [r3, #20]
   189b4:	addne	r3, r3, #1
   189b8:	moveq	r3, #0
   189bc:	str	r3, [r1, #20]
   189c0:	ldr	r2, [sp, #20]
   189c4:	ldr	r3, [r2, #12]
   189c8:	str	r3, [r1, #24]
   189cc:	str	r1, [r2, #12]
   189d0:	ldr	r3, [sp, #8]
   189d4:	ldr	r0, [r3]
   189d8:	bl	1866c <argp_parse@@Base+0x27f4>
   189dc:	str	r0, [sp, #16]
   189e0:	ldr	r3, [sp, #20]
   189e4:	ldr	r2, [r3, #12]
   189e8:	cmp	r2, #0
   189ec:	ldreq	r2, [sp, #44]	; 0x2c
   189f0:	bne	188d0 <argp_parse@@Base+0x2a58>
   189f4:	b	188e0 <argp_parse@@Base+0x2a68>
   189f8:	add	r3, r3, r2
   189fc:	str	r3, [sp, #36]	; 0x24
   18a00:	rsb	r0, r3, r3, lsl #3
   18a04:	lsl	r0, r0, #2
   18a08:	bl	170a4 <argp_parse@@Base+0x122c>
   18a0c:	mov	r4, r0
   18a10:	str	r0, [sp, #32]
   18a14:	ldr	r3, [sp, #20]
   18a18:	ldr	r0, [r3, #8]
   18a1c:	bl	119dc <strlen@plt>
   18a20:	mov	r6, r0
   18a24:	ldr	r3, [sp, #16]
   18a28:	ldr	r0, [r3, #8]
   18a2c:	bl	119dc <strlen@plt>
   18a30:	add	r0, r6, r0
   18a34:	add	r0, r0, #1
   18a38:	bl	170a4 <argp_parse@@Base+0x122c>
   18a3c:	mov	sl, r0
   18a40:	cmp	r4, #0
   18a44:	cmpne	r0, #0
   18a48:	beq	18b14 <argp_parse@@Base+0x2c9c>
   18a4c:	ldr	r3, [sp, #36]	; 0x24
   18a50:	ldr	r2, [pc, #696]	; 18d10 <argp_parse@@Base+0x2e98>
   18a54:	cmp	r3, r2
   18a58:	bhi	18b28 <argp_parse@@Base+0x2cb0>
   18a5c:	ldr	r5, [sp, #20]
   18a60:	ldr	r2, [r5]
   18a64:	mov	r1, r2
   18a68:	str	r2, [sp, #40]	; 0x28
   18a6c:	ldr	r4, [r5, #4]
   18a70:	rsb	r7, r4, r4, lsl #3
   18a74:	lsl	r7, r7, #2
   18a78:	mov	r2, r7
   18a7c:	ldr	r8, [sp, #32]
   18a80:	mov	r0, r8
   18a84:	bl	119a0 <mempcpy@plt>
   18a88:	ldr	r3, [sp, #16]
   18a8c:	ldr	r1, [r3, #4]
   18a90:	str	r1, [sp, #4]
   18a94:	rsb	r2, r1, r1, lsl #3
   18a98:	lsl	r2, r2, #2
   18a9c:	ldr	r1, [r3]
   18aa0:	bl	11808 <memcpy@plt>
   18aa4:	ldr	r5, [r5, #8]
   18aa8:	mov	r2, r6
   18aac:	mov	r1, r5
   18ab0:	mov	r0, sl
   18ab4:	bl	11808 <memcpy@plt>
   18ab8:	cmp	r4, #0
   18abc:	beq	18b3c <argp_parse@@Base+0x2cc4>
   18ac0:	mov	r2, r8
   18ac4:	ldr	r3, [r2, #8]
   18ac8:	sub	r3, r3, r5
   18acc:	add	r3, sl, r3
   18ad0:	str	r3, [r2, #8]
   18ad4:	add	r2, r2, #28
   18ad8:	subs	r4, r4, #1
   18adc:	bne	18ac4 <argp_parse@@Base+0x2c4c>
   18ae0:	ldr	r3, [sp, #32]
   18ae4:	add	r7, r3, r7
   18ae8:	add	r3, sl, r6
   18aec:	str	r3, [sp, #12]
   18af0:	ldr	r2, [sp, #16]
   18af4:	ldr	r8, [r2, #8]
   18af8:	ldr	r2, [sp, #4]
   18afc:	cmp	r2, #0
   18b00:	beq	18ba4 <argp_parse@@Base+0x2d2c>
   18b04:	add	r9, r7, #28
   18b08:	mov	fp, r3
   18b0c:	sub	r7, r3, #1
   18b10:	b	18b8c <argp_parse@@Base+0x2d14>
   18b14:	ldr	r3, [pc, #508]	; 18d18 <argp_parse@@Base+0x2ea0>
   18b18:	ldr	r2, [pc, #508]	; 18d1c <argp_parse@@Base+0x2ea4>
   18b1c:	ldr	r1, [pc, #472]	; 18cfc <argp_parse@@Base+0x2e84>
   18b20:	ldr	r0, [pc, #504]	; 18d20 <argp_parse@@Base+0x2ea8>
   18b24:	bl	11c28 <__assert_fail@plt>
   18b28:	ldr	r3, [pc, #488]	; 18d18 <argp_parse@@Base+0x2ea0>
   18b2c:	mov	r2, #972	; 0x3cc
   18b30:	ldr	r1, [pc, #452]	; 18cfc <argp_parse@@Base+0x2e84>
   18b34:	ldr	r0, [pc, #488]	; 18d24 <argp_parse@@Base+0x2eac>
   18b38:	bl	11c28 <__assert_fail@plt>
   18b3c:	ldr	r7, [sp, #32]
   18b40:	b	18ae8 <argp_parse@@Base+0x2c70>
   18b44:	ldr	r3, [sp, #12]
   18b48:	cmp	sl, r3
   18b4c:	bcs	18ce4 <argp_parse@@Base+0x2e6c>
   18b50:	ldrb	r3, [sl]
   18b54:	cmp	r3, r1
   18b58:	beq	18cec <argp_parse@@Base+0x2e74>
   18b5c:	mov	r3, sl
   18b60:	cmp	r7, r3
   18b64:	beq	18ce4 <argp_parse@@Base+0x2e6c>
   18b68:	ldrb	r2, [r3, #1]!
   18b6c:	cmp	r2, r1
   18b70:	bne	18b60 <argp_parse@@Base+0x2ce8>
   18b74:	b	18cec <argp_parse@@Base+0x2e74>
   18b78:	add	r9, r9, #28
   18b7c:	ldr	r3, [sp, #4]
   18b80:	subs	r3, r3, #1
   18b84:	str	r3, [sp, #4]
   18b88:	beq	18ba8 <argp_parse@@Base+0x2d30>
   18b8c:	str	fp, [r9, #-20]	; 0xffffffec
   18b90:	ldr	r5, [r9, #-24]	; 0xffffffe8
   18b94:	ldr	r4, [r9, #-28]	; 0xffffffe4
   18b98:	cmp	r5, #0
   18b9c:	bne	18cac <argp_parse@@Base+0x2e34>
   18ba0:	b	18b78 <argp_parse@@Base+0x2d00>
   18ba4:	ldr	fp, [sp, #12]
   18ba8:	mov	r3, #0
   18bac:	strb	r3, [fp]
   18bb0:	ldr	r0, [sp, #40]	; 0x28
   18bb4:	bl	16a6c <argp_parse@@Base+0xbf4>
   18bb8:	ldr	r4, [sp, #20]
   18bbc:	ldr	r0, [r4, #8]
   18bc0:	bl	16a6c <argp_parse@@Base+0xbf4>
   18bc4:	ldr	r2, [sp, #32]
   18bc8:	str	r2, [r4]
   18bcc:	ldr	r2, [sp, #36]	; 0x24
   18bd0:	str	r2, [r4, #4]
   18bd4:	str	sl, [r4, #8]
   18bd8:	b	18934 <argp_parse@@Base+0x2abc>
   18bdc:	ldr	fp, [sp, #20]
   18be0:	mov	r0, fp
   18be4:	add	sp, sp, #52	; 0x34
   18be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18bec:	strb	r4, [r7]
   18bf0:	add	r7, r7, #1
   18bf4:	add	r5, r5, #24
   18bf8:	ldr	r3, [r5, #4]
   18bfc:	cmp	r3, #0
   18c00:	bne	18c10 <argp_parse@@Base+0x2d98>
   18c04:	ldr	r3, [r5]
   18c08:	cmp	r3, #0
   18c0c:	beq	18800 <argp_parse@@Base+0x2988>
   18c10:	ldr	r3, [r5, #12]
   18c14:	tst	r3, #4
   18c18:	beq	18818 <argp_parse@@Base+0x29a0>
   18c1c:	ldr	r3, [r6, #-24]	; 0xffffffe8
   18c20:	add	r3, r3, #1
   18c24:	str	r3, [r6, #-24]	; 0xffffffe8
   18c28:	ldr	r3, [r5, #12]
   18c2c:	tst	r3, #8
   18c30:	bne	18bf4 <argp_parse@@Base+0x2d7c>
   18c34:	ldr	r4, [r5, #4]
   18c38:	sub	r3, r4, #1
   18c3c:	cmp	r3, #254	; 0xfe
   18c40:	bhi	18bf4 <argp_parse@@Base+0x2d7c>
   18c44:	bl	119ac <__ctype_b_loc@plt>
   18c48:	ldr	r2, [r0]
   18c4c:	lsl	r3, r4, #1
   18c50:	ldrh	r3, [r2, r3]
   18c54:	tst	r3, #16384	; 0x4000
   18c58:	beq	18bf4 <argp_parse@@Base+0x2d7c>
   18c5c:	uxtb	r4, r4
   18c60:	ldr	r3, [fp, #8]
   18c64:	cmp	r3, r7
   18c68:	bcs	18bec <argp_parse@@Base+0x2d74>
   18c6c:	ldrb	r2, [r3]
   18c70:	cmp	r2, r4
   18c74:	beq	18bf4 <argp_parse@@Base+0x2d7c>
   18c78:	sub	r1, r7, #1
   18c7c:	cmp	r3, r1
   18c80:	beq	18bec <argp_parse@@Base+0x2d74>
   18c84:	ldrb	r2, [r3, #1]!
   18c88:	cmp	r2, r4
   18c8c:	bne	18c7c <argp_parse@@Base+0x2e04>
   18c90:	b	18bf4 <argp_parse@@Base+0x2d7c>
   18c94:	ldrb	r1, [r8]
   18c98:	cmp	r1, r6
   18c9c:	beq	18b44 <argp_parse@@Base+0x2ccc>
   18ca0:	add	r4, r4, #24
   18ca4:	subs	r5, r5, #1
   18ca8:	beq	18b78 <argp_parse@@Base+0x2d00>
   18cac:	ldr	r3, [r4, #12]
   18cb0:	tst	r3, #8
   18cb4:	bne	18ca0 <argp_parse@@Base+0x2e28>
   18cb8:	ldr	r6, [r4, #4]
   18cbc:	sub	r3, r6, #1
   18cc0:	cmp	r3, #254	; 0xfe
   18cc4:	bhi	18ca0 <argp_parse@@Base+0x2e28>
   18cc8:	bl	119ac <__ctype_b_loc@plt>
   18ccc:	ldr	r2, [r0]
   18cd0:	lsl	r3, r6, #1
   18cd4:	ldrh	r3, [r2, r3]
   18cd8:	tst	r3, #16384	; 0x4000
   18cdc:	bne	18c94 <argp_parse@@Base+0x2e1c>
   18ce0:	b	18ca0 <argp_parse@@Base+0x2e28>
   18ce4:	strb	r1, [fp]
   18ce8:	add	fp, fp, #1
   18cec:	add	r8, r8, #1
   18cf0:	b	18ca0 <argp_parse@@Base+0x2e28>
   18cf4:	andeq	ip, r1, r4, ror #16
   18cf8:	andeq	r0, r0, r2, asr #3
   18cfc:	andeq	ip, r1, r4, asr r9
   18d00:	andeq	ip, r1, r0, ror #18
   18d04:	andeq	ip, r1, r4, ror #18
   18d08:	ldrdeq	r0, [r0], -sl
   18d0c:	andeq	ip, r1, r4, ror r9
   18d10:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   18d14:	muleq	r1, r8, r9
   18d18:	andeq	ip, r1, r0, ror r8
   18d1c:	andeq	r0, r0, sl, asr #7
   18d20:	ldrdeq	ip, [r1], -r4
   18d24:	strdeq	ip, [r1], -r0

00018d28 <argp_failure@@Base>:
   18d28:	push	{r3}		; (str r3, [sp, #-4]!)
   18d2c:	push	{r4, r5, r6, r7, lr}
   18d30:	sub	sp, sp, #200	; 0xc8
   18d34:	mov	r7, r1
   18d38:	mov	r6, r2
   18d3c:	subs	r5, r0, #0
   18d40:	beq	18e90 <argp_failure@@Base+0x168>
   18d44:	ldr	r3, [r5, #16]
   18d48:	tst	r3, #2
   18d4c:	bne	18e80 <argp_failure@@Base+0x158>
   18d50:	ldr	r4, [r5, #44]	; 0x2c
   18d54:	cmp	r4, #0
   18d58:	beq	18e80 <argp_failure@@Base+0x158>
   18d5c:	mov	r0, r4
   18d60:	bl	11b5c <flockfile@plt>
   18d64:	ldr	r0, [r5, #40]	; 0x28
   18d68:	mov	r1, r4
   18d6c:	bl	11730 <fputs_unlocked@plt>
   18d70:	ldr	r3, [sp, #220]	; 0xdc
   18d74:	cmp	r3, #0
   18d78:	beq	18dd4 <argp_failure@@Base+0xac>
   18d7c:	add	r3, sp, #224	; 0xe0
   18d80:	str	r3, [sp]
   18d84:	ldr	r3, [r4, #20]
   18d88:	ldr	r2, [r4, #24]
   18d8c:	cmp	r3, r2
   18d90:	addcc	r2, r3, #1
   18d94:	strcc	r2, [r4, #20]
   18d98:	movcc	r2, #58	; 0x3a
   18d9c:	strbcc	r2, [r3]
   18da0:	bcs	18eb4 <argp_failure@@Base+0x18c>
   18da4:	ldr	r3, [r4, #20]
   18da8:	ldr	r2, [r4, #24]
   18dac:	cmp	r3, r2
   18db0:	addcc	r2, r3, #1
   18db4:	strcc	r2, [r4, #20]
   18db8:	movcc	r2, #32
   18dbc:	strbcc	r2, [r3]
   18dc0:	bcs	18ec4 <argp_failure@@Base+0x19c>
   18dc4:	ldr	r2, [sp]
   18dc8:	ldr	r1, [sp, #220]	; 0xdc
   18dcc:	mov	r0, r4
   18dd0:	bl	11afc <vfprintf@plt>
   18dd4:	cmp	r6, #0
   18dd8:	beq	18e3c <argp_failure@@Base+0x114>
   18ddc:	ldr	r3, [r4, #20]
   18de0:	ldr	r2, [r4, #24]
   18de4:	cmp	r3, r2
   18de8:	addcc	r2, r3, #1
   18dec:	strcc	r2, [r4, #20]
   18df0:	movcc	r2, #58	; 0x3a
   18df4:	strbcc	r2, [r3]
   18df8:	bcs	18ed4 <argp_failure@@Base+0x1ac>
   18dfc:	ldr	r3, [r4, #20]
   18e00:	ldr	r2, [r4, #24]
   18e04:	cmp	r3, r2
   18e08:	addcc	r2, r3, #1
   18e0c:	strcc	r2, [r4, #20]
   18e10:	movcc	r2, #32
   18e14:	strbcc	r2, [r3]
   18e18:	bcs	18ee4 <argp_failure@@Base+0x1bc>
   18e1c:	mov	r2, #200	; 0xc8
   18e20:	mov	r1, sp
   18e24:	mov	r0, r6
   18e28:	bl	11a3c <strerror_r@plt>
   18e2c:	cmp	r0, #0
   18e30:	beq	18ef4 <argp_failure@@Base+0x1cc>
   18e34:	mov	r1, r4
   18e38:	bl	11730 <fputs_unlocked@plt>
   18e3c:	ldr	r3, [r4, #20]
   18e40:	ldr	r2, [r4, #24]
   18e44:	cmp	r3, r2
   18e48:	addcc	r2, r3, #1
   18e4c:	strcc	r2, [r4, #20]
   18e50:	movcc	r2, #10
   18e54:	strbcc	r2, [r3]
   18e58:	bcs	18f0c <argp_failure@@Base+0x1e4>
   18e5c:	mov	r0, r4
   18e60:	bl	118d4 <funlockfile@plt>
   18e64:	cmp	r7, #0
   18e68:	beq	18e80 <argp_failure@@Base+0x158>
   18e6c:	cmp	r5, #0
   18e70:	beq	18f1c <argp_failure@@Base+0x1f4>
   18e74:	ldr	r3, [r5, #16]
   18e78:	tst	r3, #32
   18e7c:	beq	18f1c <argp_failure@@Base+0x1f4>
   18e80:	add	sp, sp, #200	; 0xc8
   18e84:	pop	{r4, r5, r6, r7, lr}
   18e88:	add	sp, sp, #4
   18e8c:	bx	lr
   18e90:	ldr	r3, [pc, #140]	; 18f24 <argp_failure@@Base+0x1fc>
   18e94:	ldr	r4, [r3]
   18e98:	cmp	r4, #0
   18e9c:	beq	18e80 <argp_failure@@Base+0x158>
   18ea0:	mov	r0, r4
   18ea4:	bl	11b5c <flockfile@plt>
   18ea8:	ldr	r3, [pc, #120]	; 18f28 <argp_failure@@Base+0x200>
   18eac:	ldr	r0, [r3]
   18eb0:	b	18d68 <argp_failure@@Base+0x40>
   18eb4:	mov	r1, #58	; 0x3a
   18eb8:	mov	r0, r4
   18ebc:	bl	11ab4 <__overflow@plt>
   18ec0:	b	18da4 <argp_failure@@Base+0x7c>
   18ec4:	mov	r1, #32
   18ec8:	mov	r0, r4
   18ecc:	bl	11ab4 <__overflow@plt>
   18ed0:	b	18dc4 <argp_failure@@Base+0x9c>
   18ed4:	mov	r1, #58	; 0x3a
   18ed8:	mov	r0, r4
   18edc:	bl	11ab4 <__overflow@plt>
   18ee0:	b	18dfc <argp_failure@@Base+0xd4>
   18ee4:	mov	r1, #32
   18ee8:	mov	r0, r4
   18eec:	bl	11ab4 <__overflow@plt>
   18ef0:	b	18e1c <argp_failure@@Base+0xf4>
   18ef4:	mov	r0, r6
   18ef8:	bl	1197c <strerror@plt>
   18efc:	ldr	r3, [pc, #40]	; 18f2c <argp_failure@@Base+0x204>
   18f00:	cmp	r0, #0
   18f04:	moveq	r0, r3
   18f08:	b	18e34 <argp_failure@@Base+0x10c>
   18f0c:	mov	r1, #10
   18f10:	mov	r0, r4
   18f14:	bl	11ab4 <__overflow@plt>
   18f18:	b	18e5c <argp_failure@@Base+0x134>
   18f1c:	mov	r0, r7
   18f20:	bl	119c4 <exit@plt>
   18f24:			; <UNDEFINED> instruction: 0x0002d3b0
   18f28:	andeq	sp, r2, r8, lsr #7
   18f2c:	andeq	ip, r1, r4, lsr #20
   18f30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f34:	add	fp, sp, #32
   18f38:	sub	sp, sp, #108	; 0x6c
   18f3c:	str	r0, [fp, #-112]	; 0xffffff90
   18f40:	str	r1, [fp, #-100]	; 0xffffff9c
   18f44:	str	r3, [fp, #-104]	; 0xffffff98
   18f48:	subs	r3, r2, #0
   18f4c:	str	r3, [fp, #-132]	; 0xffffff7c
   18f50:	beq	19fbc <argp_failure@@Base+0x1294>
   18f54:	mov	r0, r3
   18f58:	bl	11b5c <flockfile@plt>
   18f5c:	ldr	r3, [pc, #3772]	; 19e20 <argp_failure@@Base+0x10f8>
   18f60:	ldr	r3, [r3, #36]	; 0x24
   18f64:	str	r3, [fp, #-108]	; 0xffffff94
   18f68:	cmp	r3, #0
   18f6c:	beq	19044 <argp_failure@@Base+0x31c>
   18f70:	mov	r3, #0
   18f74:	ldr	r2, [pc, #3748]	; 19e20 <argp_failure@@Base+0x10f8>
   18f78:	ldr	r2, [r2, #32]
   18f7c:	mov	r1, r3
   18f80:	ldr	r0, [fp, #-132]	; 0xffffff7c
   18f84:	bl	1aeb8 <argp_error@@Base+0xd14>
   18f88:	subs	sl, r0, #0
   18f8c:	beq	193f0 <argp_failure@@Base+0x6c8>
   18f90:	ldr	r3, [fp, #-104]	; 0xffffff98
   18f94:	tst	r3, #11
   18f98:	moveq	r3, #0
   18f9c:	streq	r3, [fp, #-108]	; 0xffffff94
   18fa0:	bne	193fc <argp_failure@@Base+0x6d4>
   18fa4:	ldr	r3, [fp, #-104]	; 0xffffff98
   18fa8:	tst	r3, #3
   18fac:	moveq	r4, #0
   18fb0:	bne	19480 <argp_failure@@Base+0x758>
   18fb4:	ldr	r3, [fp, #-104]	; 0xffffff98
   18fb8:	tst	r3, #16
   18fbc:	bne	1967c <argp_failure@@Base+0x954>
   18fc0:	ldr	r3, [fp, #-104]	; 0xffffff98
   18fc4:	tst	r3, #4
   18fc8:	bne	196a4 <argp_failure@@Base+0x97c>
   18fcc:	ldr	r3, [fp, #-104]	; 0xffffff98
   18fd0:	tst	r3, #8
   18fd4:	beq	19f30 <argp_failure@@Base+0x1208>
   18fd8:	ldr	r3, [fp, #-108]	; 0xffffff94
   18fdc:	ldr	r3, [r3, #4]
   18fe0:	cmp	r3, #0
   18fe4:	beq	19f30 <argp_failure@@Base+0x1208>
   18fe8:	cmp	r4, #0
   18fec:	beq	19014 <argp_failure@@Base+0x2ec>
   18ff0:	ldr	r2, [sl, #28]
   18ff4:	ldr	r3, [sl, #32]
   18ff8:	cmp	r2, r3
   18ffc:	bcs	196c0 <argp_failure@@Base+0x998>
   19000:	ldr	r3, [sl, #28]
   19004:	add	r2, r3, #1
   19008:	str	r2, [sl, #28]
   1900c:	mov	r2, #10
   19010:	strb	r2, [r3]
   19014:	mov	r3, #0
   19018:	str	r3, [fp, #-88]	; 0xffffffa8
   1901c:	str	r3, [fp, #-84]	; 0xffffffac
   19020:	str	r3, [fp, #-80]	; 0xffffffb0
   19024:	ldr	r3, [fp, #-108]	; 0xffffff94
   19028:	ldr	r2, [r3]
   1902c:	str	r2, [fp, #-96]	; 0xffffffa0
   19030:	ldr	r3, [r3, #4]
   19034:	str	r3, [fp, #-120]	; 0xffffff88
   19038:	cmp	r3, #0
   1903c:	bne	19aa8 <argp_failure@@Base+0xd80>
   19040:	b	19f2c <argp_failure@@Base+0x1204>
   19044:	ldr	r0, [pc, #3452]	; 19dc8 <argp_failure@@Base+0x10a0>
   19048:	bl	11940 <getenv@plt>
   1904c:	mov	r9, r0
   19050:	sub	ip, fp, #76	; 0x4c
   19054:	ldr	lr, [pc, #3524]	; 19e20 <argp_failure@@Base+0x10f8>
   19058:	ldm	lr!, {r0, r1, r2, r3}
   1905c:	stmia	ip!, {r0, r1, r2, r3}
   19060:	ldm	lr!, {r0, r1, r2, r3}
   19064:	stmia	ip!, {r0, r1, r2, r3}
   19068:	ldm	lr, {r0, r1}
   1906c:	stm	ip, {r0, r1}
   19070:	cmp	r9, #0
   19074:	ldrne	sl, [pc, #3408]	; 19dcc <argp_failure@@Base+0x10a4>
   19078:	addne	r8, sl, #168	; 0xa8
   1907c:	bne	19320 <argp_failure@@Base+0x5f8>
   19080:	b	18f70 <argp_failure@@Base+0x248>
   19084:	mov	r5, r3
   19088:	mov	r9, r5
   1908c:	mov	r3, r5
   19090:	ldrb	r0, [r3], #1
   19094:	lsl	r2, r0, #1
   19098:	ldrh	r2, [r1, r2]
   1909c:	tst	r2, #8192	; 0x2000
   190a0:	bne	19084 <argp_failure@@Base+0x35c>
   190a4:	tst	r2, #1024	; 0x400
   190a8:	beq	19318 <argp_failure@@Base+0x5f0>
   190ac:	cmp	r0, #95	; 0x5f
   190b0:	cmpne	r0, #45	; 0x2d
   190b4:	moveq	r3, #1
   190b8:	movne	r3, #0
   190bc:	lsl	r2, r2, #28
   190c0:	orrs	r3, r3, r2, lsr #31
   190c4:	beq	1a040 <argp_failure@@Base+0x1318>
   190c8:	mov	r4, r5
   190cc:	ldrb	r3, [r4, #1]!
   190d0:	lsl	r2, r3, #1
   190d4:	ldrh	r2, [r1, r2]
   190d8:	lsl	r2, r2, #28
   190dc:	cmp	r3, #95	; 0x5f
   190e0:	cmpne	r3, #45	; 0x2d
   190e4:	moveq	r3, #1
   190e8:	movne	r3, #0
   190ec:	orrs	r3, r3, r2, lsr #31
   190f0:	bne	190cc <argp_failure@@Base+0x3a4>
   190f4:	sub	r5, r4, r5
   190f8:	ldrb	r3, [r4]
   190fc:	lsl	r2, r3, #1
   19100:	ldrh	r2, [r1, r2]
   19104:	tst	r2, #8192	; 0x2000
   19108:	beq	19120 <argp_failure@@Base+0x3f8>
   1910c:	ldrb	r3, [r4, #1]!
   19110:	lsl	r2, r3, #1
   19114:	ldrh	r2, [r1, r2]
   19118:	tst	r2, #8192	; 0x2000
   1911c:	bne	1910c <argp_failure@@Base+0x3e4>
   19120:	cmp	r3, #44	; 0x2c
   19124:	cmpne	r3, #0
   19128:	beq	1a058 <argp_failure@@Base+0x1330>
   1912c:	cmp	r3, #61	; 0x3d
   19130:	beq	19158 <argp_failure@@Base+0x430>
   19134:	ldrb	r3, [r4]
   19138:	lsl	r3, r3, #1
   1913c:	ldrh	r3, [r1, r3]
   19140:	tst	r3, #2048	; 0x800
   19144:	bne	191d8 <argp_failure@@Base+0x4b0>
   19148:	ldr	r3, [fp, #-108]	; 0xffffff94
   1914c:	str	r3, [fp, #-96]	; 0xffffffa0
   19150:	str	r3, [fp, #-116]	; 0xffffff8c
   19154:	b	1a06c <argp_failure@@Base+0x1344>
   19158:	add	r2, r4, #1
   1915c:	ldrb	r3, [r4, #1]
   19160:	lsl	r3, r3, #1
   19164:	ldrh	r3, [r1, r3]
   19168:	tst	r3, #8192	; 0x2000
   1916c:	beq	1a050 <argp_failure@@Base+0x1328>
   19170:	ldrb	r3, [r2, #1]!
   19174:	lsl	r3, r3, #1
   19178:	ldrh	r3, [r1, r3]
   1917c:	tst	r3, #8192	; 0x2000
   19180:	bne	19170 <argp_failure@@Base+0x448>
   19184:	mov	r4, r2
   19188:	b	19134 <argp_failure@@Base+0x40c>
   1918c:	ldrb	r3, [r9, #1]
   19190:	cmp	r3, #111	; 0x6f
   19194:	movne	r3, #1
   19198:	strne	r3, [fp, #-96]	; 0xffffffa0
   1919c:	strne	r3, [fp, #-116]	; 0xffffff8c
   191a0:	bne	1a06c <argp_failure@@Base+0x1344>
   191a4:	ldrb	r3, [r9, #2]
   191a8:	cmp	r3, #45	; 0x2d
   191ac:	movne	r3, #1
   191b0:	strne	r3, [fp, #-96]	; 0xffffffa0
   191b4:	strne	r3, [fp, #-116]	; 0xffffff8c
   191b8:	bne	1a06c <argp_failure@@Base+0x1344>
   191bc:	add	r9, r9, #3
   191c0:	sub	r5, r5, #3
   191c4:	ldr	r3, [fp, #-108]	; 0xffffff94
   191c8:	str	r3, [fp, #-116]	; 0xffffff8c
   191cc:	mov	r3, #1
   191d0:	str	r3, [fp, #-96]	; 0xffffffa0
   191d4:	b	1a06c <argp_failure@@Base+0x1344>
   191d8:	mov	r2, #10
   191dc:	mov	r1, #0
   191e0:	mov	r0, r4
   191e4:	bl	11760 <strtol@plt>
   191e8:	str	r0, [fp, #-116]	; 0xffffff8c
   191ec:	ldr	r2, [r6]
   191f0:	ldrb	r3, [r4]
   191f4:	lsl	r3, r3, #1
   191f8:	ldrh	r3, [r2, r3]
   191fc:	tst	r3, #2048	; 0x800
   19200:	beq	19218 <argp_failure@@Base+0x4f0>
   19204:	ldrb	r3, [r4, #1]!
   19208:	lsl	r3, r3, #1
   1920c:	ldrh	r3, [r2, r3]
   19210:	tst	r3, #2048	; 0x800
   19214:	bne	19204 <argp_failure@@Base+0x4dc>
   19218:	ldrb	r3, [r4]
   1921c:	lsl	r3, r3, #1
   19220:	ldrh	r3, [r2, r3]
   19224:	tst	r3, #8192	; 0x2000
   19228:	beq	1924c <argp_failure@@Base+0x524>
   1922c:	ldrb	r3, [r4, #1]!
   19230:	lsl	r3, r3, #1
   19234:	ldrh	r3, [r2, r3]
   19238:	tst	r3, #8192	; 0x2000
   1923c:	bne	1922c <argp_failure@@Base+0x504>
   19240:	ldr	r3, [fp, #-108]	; 0xffffff94
   19244:	str	r3, [fp, #-96]	; 0xffffffa0
   19248:	b	1a06c <argp_failure@@Base+0x1344>
   1924c:	ldr	r3, [fp, #-108]	; 0xffffff94
   19250:	str	r3, [fp, #-96]	; 0xffffffa0
   19254:	b	1a06c <argp_failure@@Base+0x1344>
   19258:	str	r9, [sp, #4]
   1925c:	str	r7, [sp]
   19260:	ldr	r3, [pc, #2920]	; 19dd0 <argp_failure@@Base+0x10a8>
   19264:	mov	r2, #0
   19268:	mov	r1, r2
   1926c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19270:	bl	18d28 <argp_failure@@Base>
   19274:	b	192dc <argp_failure@@Base+0x5b4>
   19278:	add	r6, r6, #16
   1927c:	cmp	r6, r8
   19280:	beq	192f8 <argp_failure@@Base+0x5d0>
   19284:	mov	r0, r6
   19288:	bl	119dc <strlen@plt>
   1928c:	mov	r7, r0
   19290:	cmp	r0, r5
   19294:	bne	19278 <argp_failure@@Base+0x550>
   19298:	mov	r2, r5
   1929c:	mov	r1, r6
   192a0:	mov	r0, r9
   192a4:	bl	11bd4 <strncmp@plt>
   192a8:	cmp	r0, #0
   192ac:	bne	19278 <argp_failure@@Base+0x550>
   192b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   192b4:	cmp	r3, #0
   192b8:	beq	192c8 <argp_failure@@Base+0x5a0>
   192bc:	ldrb	r3, [r6, #14]
   192c0:	cmp	r3, #0
   192c4:	beq	19258 <argp_failure@@Base+0x530>
   192c8:	ldrb	r3, [r6, #15]
   192cc:	sub	r2, fp, #36	; 0x24
   192d0:	add	r3, r2, r3
   192d4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   192d8:	str	r2, [r3, #-40]	; 0xffffffd8
   192dc:	cmp	r6, r8
   192e0:	beq	192f8 <argp_failure@@Base+0x5d0>
   192e4:	ldrb	r3, [r4]
   192e8:	cmp	r3, #44	; 0x2c
   192ec:	addeq	r9, r4, #1
   192f0:	movne	r9, r4
   192f4:	b	19320 <argp_failure@@Base+0x5f8>
   192f8:	str	r9, [sp, #4]
   192fc:	str	r5, [sp]
   19300:	ldr	r3, [pc, #2764]	; 19dd4 <argp_failure@@Base+0x10ac>
   19304:	mov	r2, #0
   19308:	mov	r1, r2
   1930c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19310:	bl	18d28 <argp_failure@@Base>
   19314:	b	192e4 <argp_failure@@Base+0x5bc>
   19318:	cmp	r0, #0
   1931c:	bne	19340 <argp_failure@@Base+0x618>
   19320:	ldrb	r3, [r9]
   19324:	cmp	r3, #0
   19328:	beq	19358 <argp_failure@@Base+0x630>
   1932c:	bl	119ac <__ctype_b_loc@plt>
   19330:	mov	r6, r0
   19334:	ldr	r1, [r0]
   19338:	mov	r5, r9
   1933c:	b	19088 <argp_failure@@Base+0x360>
   19340:	str	r5, [sp]
   19344:	ldr	r3, [pc, #2700]	; 19dd8 <argp_failure@@Base+0x10b0>
   19348:	mov	r2, #0
   1934c:	mov	r1, r2
   19350:	ldr	r0, [fp, #-100]	; 0xffffff9c
   19354:	bl	18d28 <argp_failure@@Base>
   19358:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1935c:	ldr	r3, [pc, #2680]	; 19ddc <argp_failure@@Base+0x10b4>
   19360:	add	r1, r3, #144	; 0x90
   19364:	add	r3, r3, #16
   19368:	cmp	r3, r1
   1936c:	beq	193c0 <argp_failure@@Base+0x698>
   19370:	ldrb	r2, [r3, #14]
   19374:	cmp	r2, #0
   19378:	bne	19364 <argp_failure@@Base+0x63c>
   1937c:	ldrb	r2, [r3, #15]
   19380:	cmp	r2, #32
   19384:	beq	19364 <argp_failure@@Base+0x63c>
   19388:	sub	ip, fp, #36	; 0x24
   1938c:	add	r2, ip, r2
   19390:	ldr	r2, [r2, #-40]	; 0xffffffd8
   19394:	cmp	r2, r0
   19398:	blt	19364 <argp_failure@@Base+0x63c>
   1939c:	str	r3, [sp, #4]
   193a0:	ldr	r3, [pc, #2616]	; 19de0 <argp_failure@@Base+0x10b8>
   193a4:	str	r3, [sp]
   193a8:	ldr	r3, [pc, #2612]	; 19de4 <argp_failure@@Base+0x10bc>
   193ac:	mov	r2, #0
   193b0:	mov	r1, r2
   193b4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   193b8:	bl	18d28 <argp_failure@@Base>
   193bc:	b	18f70 <argp_failure@@Base+0x248>
   193c0:	ldr	r4, [pc, #2648]	; 19e20 <argp_failure@@Base+0x10f8>
   193c4:	mov	ip, r4
   193c8:	sub	lr, fp, #76	; 0x4c
   193cc:	ldm	lr!, {r0, r1, r2, r3}
   193d0:	stmia	ip!, {r0, r1, r2, r3}
   193d4:	ldm	lr!, {r0, r1, r2, r3}
   193d8:	stmia	ip!, {r0, r1, r2, r3}
   193dc:	ldm	lr, {r0, r1}
   193e0:	stm	ip, {r0, r1}
   193e4:	mov	r3, #1
   193e8:	str	r3, [r4, #36]	; 0x24
   193ec:	b	18f70 <argp_failure@@Base+0x248>
   193f0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   193f4:	bl	118d4 <funlockfile@plt>
   193f8:	b	19fbc <argp_failure@@Base+0x1294>
   193fc:	mov	r1, #0
   19400:	ldr	r0, [fp, #-112]	; 0xffffff90
   19404:	bl	1866c <argp_parse@@Base+0x27f4>
   19408:	str	r0, [fp, #-108]	; 0xffffff94
   1940c:	ldr	r1, [pc, #2516]	; 19de8 <argp_failure@@Base+0x10c0>
   19410:	bl	17574 <argp_parse@@Base+0x16fc>
   19414:	cmp	r0, #0
   19418:	mvnne	r3, #0
   1941c:	strne	r3, [r0, #12]
   19420:	ldr	r1, [pc, #2500]	; 19dec <argp_failure@@Base+0x10c4>
   19424:	ldr	r0, [fp, #-108]	; 0xffffff94
   19428:	bl	17574 <argp_parse@@Base+0x16fc>
   1942c:	cmp	r0, #0
   19430:	mvnne	r3, #0
   19434:	strne	r3, [r0, #12]
   19438:	ldr	r0, [fp, #-108]	; 0xffffff94
   1943c:	ldr	r3, [r0, #4]
   19440:	cmp	r3, #0
   19444:	beq	18fa4 <argp_failure@@Base+0x27c>
   19448:	ldr	r2, [r0]
   1944c:	mov	r3, #0
   19450:	str	r3, [r2, #24]
   19454:	add	r3, r3, #1
   19458:	add	r2, r2, #28
   1945c:	ldr	r1, [r0, #4]
   19460:	cmp	r3, r1
   19464:	bcc	19450 <argp_failure@@Base+0x728>
   19468:	ldr	r3, [pc, #2432]	; 19df0 <argp_failure@@Base+0x10c8>
   1946c:	mov	r2, #28
   19470:	ldr	r0, [fp, #-108]	; 0xffffff94
   19474:	ldr	r0, [r0]
   19478:	bl	11b80 <qsort@plt>
   1947c:	b	18fa4 <argp_failure@@Base+0x27c>
   19480:	ldr	r0, [fp, #-112]	; 0xffffff90
   19484:	bl	1760c <argp_parse@@Base+0x1794>
   19488:	mov	r2, r0
   1948c:	add	r3, r0, #14
   19490:	bic	r3, r3, #7
   19494:	sub	sp, sp, r3
   19498:	add	r8, sp, #8
   1949c:	mov	r1, #0
   194a0:	mov	r0, r8
   194a4:	bl	11a54 <memset@plt>
   194a8:	mov	r5, #1
   194ac:	ldr	r4, [pc, #2412]	; 19e20 <argp_failure@@Base+0x10f8>
   194b0:	ldr	r9, [pc, #2364]	; 19df4 <argp_failure@@Base+0x10cc>
   194b4:	str	r8, [fp, #-96]	; 0xffffffa0
   194b8:	ldr	r8, [fp, #-104]	; 0xffffff98
   194bc:	b	1956c <argp_failure@@Base+0x844>
   194c0:	mov	r0, sl
   194c4:	bl	1af30 <argp_error@@Base+0xd8c>
   194c8:	b	19588 <argp_failure@@Base+0x860>
   194cc:	mov	r0, sl
   194d0:	bl	1af30 <argp_error@@Base+0xd8c>
   194d4:	b	195d0 <argp_failure@@Base+0x8a8>
   194d8:	mov	r1, sl
   194dc:	ldr	r0, [fp, #-108]	; 0xffffff94
   194e0:	bl	17364 <argp_parse@@Base+0x14ec>
   194e4:	orr	r8, r8, #2
   194e8:	str	sl, [sp]
   194ec:	mov	r3, #1
   194f0:	sub	r2, fp, #76	; 0x4c
   194f4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   194f8:	ldr	r0, [fp, #-112]	; 0xffffff90
   194fc:	bl	1788c <argp_parse@@Base+0x1a14>
   19500:	mov	r6, r0
   19504:	ldr	r3, [sl, #28]
   19508:	ldr	r2, [sl, #24]
   1950c:	sub	r3, r3, r2
   19510:	ldr	r2, [sl, #16]
   19514:	cmp	r3, r2
   19518:	bhi	19640 <argp_failure@@Base+0x918>
   1951c:	str	r7, [sl, #12]
   19520:	ldr	r3, [sl, #28]
   19524:	ldr	r2, [sl, #24]
   19528:	sub	r3, r3, r2
   1952c:	ldr	r2, [sl, #16]
   19530:	cmp	r3, r2
   19534:	bhi	1964c <argp_failure@@Base+0x924>
   19538:	str	r5, [sl, #4]
   1953c:	ldr	r2, [sl, #28]
   19540:	ldr	r3, [sl, #32]
   19544:	cmp	r2, r3
   19548:	bcs	19658 <argp_failure@@Base+0x930>
   1954c:	ldr	r3, [sl, #28]
   19550:	add	r2, r3, #1
   19554:	str	r2, [sl, #28]
   19558:	mov	r2, #10
   1955c:	strb	r2, [r3]
   19560:	mov	r5, #0
   19564:	cmp	r6, r5
   19568:	beq	19670 <argp_failure@@Base+0x948>
   1956c:	ldr	r6, [r4, #28]
   19570:	ldr	r3, [sl, #28]
   19574:	ldr	r2, [sl, #24]
   19578:	sub	r3, r3, r2
   1957c:	ldr	r2, [sl, #16]
   19580:	cmp	r3, r2
   19584:	bhi	194c0 <argp_failure@@Base+0x798>
   19588:	ldr	r7, [sl, #12]
   1958c:	str	r6, [sl, #12]
   19590:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19594:	str	r3, [fp, #-76]	; 0xffffffb4
   19598:	cmp	r5, #0
   1959c:	ldr	r3, [fp, #4]
   195a0:	ldrne	r2, [pc, #2128]	; 19df8 <argp_failure@@Base+0x10d0>
   195a4:	ldreq	r2, [pc, #2128]	; 19dfc <argp_failure@@Base+0x10d4>
   195a8:	mov	r1, r9
   195ac:	mov	r0, sl
   195b0:	bl	1b5c4 <argp_error@@Base+0x1420>
   195b4:	ldr	r6, [r4, #28]
   195b8:	ldr	r3, [sl, #28]
   195bc:	ldr	r2, [sl, #24]
   195c0:	sub	r3, r3, r2
   195c4:	ldr	r2, [sl, #16]
   195c8:	cmp	r3, r2
   195cc:	bhi	194cc <argp_failure@@Base+0x7a4>
   195d0:	ldr	r5, [sl, #4]
   195d4:	str	r6, [sl, #4]
   195d8:	tst	r8, #2
   195dc:	beq	194d8 <argp_failure@@Base+0x7b0>
   195e0:	ldr	r3, [fp, #-108]	; 0xffffff94
   195e4:	ldr	r3, [r3, #4]
   195e8:	cmp	r3, #0
   195ec:	beq	194e8 <argp_failure@@Base+0x7c0>
   195f0:	ldr	r3, [sl, #28]
   195f4:	add	r3, r3, #12
   195f8:	ldr	r2, [sl, #32]
   195fc:	cmp	r2, r3
   19600:	bcs	19618 <argp_failure@@Base+0x8f0>
   19604:	mov	r1, #12
   19608:	mov	r0, sl
   1960c:	bl	1b4d4 <argp_error@@Base+0x1330>
   19610:	cmp	r0, #0
   19614:	beq	194e8 <argp_failure@@Base+0x7c0>
   19618:	ldr	ip, [sl, #28]
   1961c:	ldr	r3, [pc, #2012]	; 19e00 <argp_failure@@Base+0x10d8>
   19620:	ldm	r3!, {r0, r1, r2}
   19624:	str	r0, [ip]
   19628:	str	r1, [ip, #4]
   1962c:	str	r2, [ip, #8]
   19630:	ldr	r3, [sl, #28]
   19634:	add	r3, r3, #12
   19638:	str	r3, [sl, #28]
   1963c:	b	194e8 <argp_failure@@Base+0x7c0>
   19640:	mov	r0, sl
   19644:	bl	1af30 <argp_error@@Base+0xd8c>
   19648:	b	1951c <argp_failure@@Base+0x7f4>
   1964c:	mov	r0, sl
   19650:	bl	1af30 <argp_error@@Base+0xd8c>
   19654:	b	19538 <argp_failure@@Base+0x810>
   19658:	mov	r1, #1
   1965c:	mov	r0, sl
   19660:	bl	1b4d4 <argp_error@@Base+0x1330>
   19664:	cmp	r0, #0
   19668:	beq	19560 <argp_failure@@Base+0x838>
   1966c:	b	1954c <argp_failure@@Base+0x824>
   19670:	str	r8, [fp, #-104]	; 0xffffff98
   19674:	mov	r4, #1
   19678:	b	18fb4 <argp_failure@@Base+0x28c>
   1967c:	str	sl, [sp, #4]
   19680:	mov	r3, #1
   19684:	str	r3, [sp]
   19688:	mov	r3, #0
   1968c:	mov	r2, r3
   19690:	ldr	r1, [fp, #-100]	; 0xffffff9c
   19694:	ldr	r0, [fp, #-112]	; 0xffffff90
   19698:	bl	17de4 <argp_parse@@Base+0x1f6c>
   1969c:	orr	r4, r4, r0
   196a0:	b	18fc0 <argp_failure@@Base+0x298>
   196a4:	ldr	r3, [fp, #4]
   196a8:	mov	r2, r3
   196ac:	ldr	r1, [pc, #1872]	; 19e04 <argp_failure@@Base+0x10dc>
   196b0:	mov	r0, sl
   196b4:	bl	1b5c4 <argp_error@@Base+0x1420>
   196b8:	mov	r4, #1
   196bc:	b	18fcc <argp_failure@@Base+0x2a4>
   196c0:	mov	r1, #1
   196c4:	mov	r0, sl
   196c8:	bl	1b4d4 <argp_error@@Base+0x1330>
   196cc:	cmp	r0, #0
   196d0:	beq	19014 <argp_failure@@Base+0x2ec>
   196d4:	b	19000 <argp_failure@@Base+0x2d8>
   196d8:	mov	r0, sl
   196dc:	bl	1af30 <argp_error@@Base+0xd8c>
   196e0:	b	19acc <argp_failure@@Base+0xda4>
   196e4:	add	r3, r3, #24
   196e8:	subs	r2, r2, #1
   196ec:	beq	19710 <argp_failure@@Base+0x9e8>
   196f0:	ldr	r1, [r3, #-24]	; 0xffffffe8
   196f4:	cmp	r1, #0
   196f8:	beq	196e4 <argp_failure@@Base+0x9bc>
   196fc:	ldr	r1, [r3, #-12]
   19700:	tst	r1, #2
   19704:	bne	196e4 <argp_failure@@Base+0x9bc>
   19708:	mov	r3, #1
   1970c:	str	r3, [fp, #-116]	; 0xffffff8c
   19710:	ldr	r3, [pc, #1800]	; 19e20 <argp_failure@@Base+0x10f8>
   19714:	ldr	r4, [r3, #8]
   19718:	ldr	r3, [sl, #28]
   1971c:	ldr	r2, [sl, #24]
   19720:	sub	r3, r3, r2
   19724:	ldr	r2, [sl, #16]
   19728:	cmp	r3, r2
   1972c:	bhi	1974c <argp_failure@@Base+0xa24>
   19730:	str	r4, [sl, #12]
   19734:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19738:	ldr	r5, [r3, #4]
   1973c:	cmp	r5, #0
   19740:	beq	19848 <argp_failure@@Base+0xb20>
   19744:	mov	r4, r8
   19748:	b	1a08c <argp_failure@@Base+0x1364>
   1974c:	mov	r0, sl
   19750:	bl	1af30 <argp_error@@Base+0xd8c>
   19754:	b	19730 <argp_failure@@Base+0xa08>
   19758:	tst	r6, #2
   1975c:	beq	19768 <argp_failure@@Base+0xa40>
   19760:	add	r9, r9, #1
   19764:	b	1a080 <argp_failure@@Base+0x1358>
   19768:	sub	r1, fp, #76	; 0x4c
   1976c:	ldr	r3, [pc, #1708]	; 19e20 <argp_failure@@Base+0x10f8>
   19770:	ldr	r0, [r3, #8]
   19774:	bl	17c60 <argp_parse@@Base+0x1de8>
   19778:	ldr	r2, [sl, #28]
   1977c:	ldr	r3, [sl, #32]
   19780:	cmp	r2, r3
   19784:	bcs	19804 <argp_failure@@Base+0xadc>
   19788:	ldr	r3, [sl, #28]
   1978c:	add	r2, r3, #1
   19790:	str	r2, [sl, #28]
   19794:	mov	r2, #45	; 0x2d
   19798:	strb	r2, [r3]
   1979c:	ldrb	r6, [r9]
   197a0:	ldr	r2, [sl, #28]
   197a4:	ldr	r3, [sl, #32]
   197a8:	cmp	r2, r3
   197ac:	bcs	1981c <argp_failure@@Base+0xaf4>
   197b0:	ldr	r3, [sl, #28]
   197b4:	add	r2, r3, #1
   197b8:	str	r2, [sl, #28]
   197bc:	strb	r6, [r3]
   197c0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   197c4:	cmp	r3, #0
   197c8:	beq	197dc <argp_failure@@Base+0xab4>
   197cc:	ldr	r3, [pc, #1612]	; 19e20 <argp_failure@@Base+0x10f8>
   197d0:	ldr	r3, [r3]
   197d4:	cmp	r3, #0
   197d8:	beq	19834 <argp_failure@@Base+0xb0c>
   197dc:	ldr	r2, [r8, #8]
   197e0:	cmp	r2, #0
   197e4:	beq	19760 <argp_failure@@Base+0xa38>
   197e8:	ldr	r3, [r8, #12]
   197ec:	tst	r3, #1
   197f0:	ldrne	r1, [pc, #1552]	; 19e08 <argp_failure@@Base+0x10e0>
   197f4:	ldreq	r1, [pc, #1552]	; 19e0c <argp_failure@@Base+0x10e4>
   197f8:	mov	r0, sl
   197fc:	bl	1b5c4 <argp_error@@Base+0x1420>
   19800:	b	19760 <argp_failure@@Base+0xa38>
   19804:	mov	r1, #1
   19808:	mov	r0, sl
   1980c:	bl	1b4d4 <argp_error@@Base+0x1330>
   19810:	cmp	r0, #0
   19814:	beq	1979c <argp_failure@@Base+0xa74>
   19818:	b	19788 <argp_failure@@Base+0xa60>
   1981c:	mov	r1, #1
   19820:	mov	r0, sl
   19824:	bl	1b4d4 <argp_error@@Base+0x1330>
   19828:	cmp	r0, #0
   1982c:	beq	197c0 <argp_failure@@Base+0xa98>
   19830:	b	197b0 <argp_failure@@Base+0xa88>
   19834:	ldr	r3, [r8, #8]
   19838:	cmp	r3, #0
   1983c:	movne	r3, #1
   19840:	strne	r3, [fp, #-80]	; 0xffffffb0
   19844:	b	19760 <argp_failure@@Base+0xa38>
   19848:	ldr	r3, [r8, #12]
   1984c:	tst	r3, #8
   19850:	beq	1992c <argp_failure@@Base+0xc04>
   19854:	ldr	r3, [pc, #1476]	; 19e20 <argp_failure@@Base+0x10f8>
   19858:	ldr	r4, [r3, #16]
   1985c:	ldr	r3, [sl, #28]
   19860:	ldr	r2, [sl, #24]
   19864:	sub	r3, r3, r2
   19868:	ldr	r2, [sl, #16]
   1986c:	cmp	r3, r2
   19870:	bhi	19890 <argp_failure@@Base+0xb68>
   19874:	str	r4, [sl, #12]
   19878:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1987c:	ldr	r5, [r3, #4]
   19880:	cmp	r5, #0
   19884:	beq	199e0 <argp_failure@@Base+0xcb8>
   19888:	add	r4, r8, #24
   1988c:	b	198c4 <argp_failure@@Base+0xb9c>
   19890:	mov	r0, sl
   19894:	bl	1af30 <argp_error@@Base+0xd8c>
   19898:	b	19874 <argp_failure@@Base+0xb4c>
   1989c:	mov	r2, r6
   198a0:	mov	r1, r7
   198a4:	ldr	r0, [sl, #28]
   198a8:	bl	11808 <memcpy@plt>
   198ac:	ldr	r3, [sl, #28]
   198b0:	add	r6, r3, r6
   198b4:	str	r6, [sl, #28]
   198b8:	add	r4, r4, #24
   198bc:	subs	r5, r5, #1
   198c0:	beq	199e0 <argp_failure@@Base+0xcb8>
   198c4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   198c8:	cmp	r3, #0
   198cc:	beq	198b8 <argp_failure@@Base+0xb90>
   198d0:	ldr	r3, [r4, #-12]
   198d4:	tst	r3, #2
   198d8:	bne	198b8 <argp_failure@@Base+0xb90>
   198dc:	sub	r1, fp, #76	; 0x4c
   198e0:	ldr	r3, [pc, #1336]	; 19e20 <argp_failure@@Base+0x10f8>
   198e4:	ldr	r0, [r3, #16]
   198e8:	bl	17c60 <argp_parse@@Base+0x1de8>
   198ec:	ldr	r7, [r4, #-24]	; 0xffffffe8
   198f0:	mov	r0, r7
   198f4:	bl	119dc <strlen@plt>
   198f8:	subs	r6, r0, #0
   198fc:	beq	198b8 <argp_failure@@Base+0xb90>
   19900:	ldr	r3, [sl, #28]
   19904:	add	r3, r3, r6
   19908:	ldr	r2, [sl, #32]
   1990c:	cmp	r2, r3
   19910:	bcs	1989c <argp_failure@@Base+0xb74>
   19914:	mov	r1, r6
   19918:	mov	r0, sl
   1991c:	bl	1b4d4 <argp_error@@Base+0x1330>
   19920:	cmp	r0, #0
   19924:	beq	198b8 <argp_failure@@Base+0xb90>
   19928:	b	1989c <argp_failure@@Base+0xb74>
   1992c:	ldr	r3, [pc, #1260]	; 19e20 <argp_failure@@Base+0x10f8>
   19930:	ldr	r4, [r3, #12]
   19934:	ldr	r3, [sl, #28]
   19938:	ldr	r2, [sl, #24]
   1993c:	sub	r3, r3, r2
   19940:	ldr	r2, [sl, #16]
   19944:	cmp	r3, r2
   19948:	bhi	19968 <argp_failure@@Base+0xc40>
   1994c:	str	r4, [sl, #12]
   19950:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19954:	ldr	r5, [r3, #4]
   19958:	cmp	r5, #0
   1995c:	beq	199e0 <argp_failure@@Base+0xcb8>
   19960:	add	r4, r8, #24
   19964:	b	19980 <argp_failure@@Base+0xc58>
   19968:	mov	r0, sl
   1996c:	bl	1af30 <argp_error@@Base+0xd8c>
   19970:	b	1994c <argp_failure@@Base+0xc24>
   19974:	add	r4, r4, #24
   19978:	subs	r5, r5, #1
   1997c:	beq	199e0 <argp_failure@@Base+0xcb8>
   19980:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19984:	cmp	r3, #0
   19988:	beq	19974 <argp_failure@@Base+0xc4c>
   1998c:	ldr	r3, [r4, #-12]
   19990:	tst	r3, #2
   19994:	bne	19974 <argp_failure@@Base+0xc4c>
   19998:	sub	r1, fp, #76	; 0x4c
   1999c:	ldr	r3, [pc, #1148]	; 19e20 <argp_failure@@Base+0x10f8>
   199a0:	ldr	r0, [r3, #12]
   199a4:	bl	17c60 <argp_parse@@Base+0x1de8>
   199a8:	ldr	r2, [r4, #-24]	; 0xffffffe8
   199ac:	ldr	r1, [pc, #1116]	; 19e10 <argp_failure@@Base+0x10e8>
   199b0:	mov	r0, sl
   199b4:	bl	1b5c4 <argp_error@@Base+0x1420>
   199b8:	ldr	r2, [r8, #8]
   199bc:	cmp	r2, #0
   199c0:	beq	19974 <argp_failure@@Base+0xc4c>
   199c4:	ldr	r3, [r8, #12]
   199c8:	tst	r3, #1
   199cc:	ldrne	r1, [pc, #1088]	; 19e14 <argp_failure@@Base+0x10ec>
   199d0:	ldreq	r1, [pc, #1088]	; 19e18 <argp_failure@@Base+0x10f0>
   199d4:	mov	r0, sl
   199d8:	bl	1b5c4 <argp_error@@Base+0x1420>
   199dc:	b	19974 <argp_failure@@Base+0xc4c>
   199e0:	ldr	r3, [sl, #28]
   199e4:	ldr	r2, [sl, #24]
   199e8:	sub	r3, r3, r2
   199ec:	ldr	r2, [sl, #16]
   199f0:	cmp	r3, r2
   199f4:	bhi	19b34 <argp_failure@@Base+0xe0c>
   199f8:	mov	r3, #0
   199fc:	str	r3, [sl, #4]
   19a00:	ldr	r3, [fp, #-64]	; 0xffffffc0
   19a04:	cmp	r3, #0
   19a08:	beq	19b58 <argp_failure@@Base+0xe30>
   19a0c:	ldr	r3, [r8, #12]
   19a10:	tst	r3, #8
   19a14:	bne	19a40 <argp_failure@@Base+0xd18>
   19a18:	ldr	r4, [r8, #4]
   19a1c:	sub	r3, r4, #1
   19a20:	cmp	r3, #254	; 0xfe
   19a24:	bhi	19a40 <argp_failure@@Base+0xd18>
   19a28:	bl	119ac <__ctype_b_loc@plt>
   19a2c:	ldr	r3, [r0]
   19a30:	lsl	r4, r4, #1
   19a34:	ldrh	r3, [r3, r4]
   19a38:	tst	r3, #16384	; 0x4000
   19a3c:	bne	19a4c <argp_failure@@Base+0xd24>
   19a40:	ldr	r3, [r8]
   19a44:	cmp	r3, #0
   19a48:	beq	19b40 <argp_failure@@Base+0xe18>
   19a4c:	ldr	r3, [sl, #28]
   19a50:	ldr	r2, [sl, #24]
   19a54:	sub	r3, r3, r2
   19a58:	ldr	r2, [sl, #16]
   19a5c:	cmp	r3, r2
   19a60:	bhi	19db0 <argp_failure@@Base+0x1088>
   19a64:	ldr	r3, [fp, #-124]	; 0xffffff84
   19a68:	str	r3, [sl, #4]
   19a6c:	ldr	r3, [sl, #28]
   19a70:	ldr	r2, [sl, #24]
   19a74:	sub	r3, r3, r2
   19a78:	ldr	r2, [sl, #16]
   19a7c:	cmp	r3, r2
   19a80:	bhi	19dbc <argp_failure@@Base+0x1094>
   19a84:	ldr	r3, [fp, #-128]	; 0xffffff80
   19a88:	str	r3, [sl, #12]
   19a8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19a90:	add	r3, r3, #28
   19a94:	str	r3, [fp, #-96]	; 0xffffffa0
   19a98:	ldr	r3, [fp, #-120]	; 0xffffff88
   19a9c:	subs	r3, r3, #1
   19aa0:	str	r3, [fp, #-120]	; 0xffffff88
   19aa4:	beq	19e34 <argp_failure@@Base+0x110c>
   19aa8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19aac:	ldr	r8, [r3]
   19ab0:	ldr	r9, [r3, #8]
   19ab4:	ldr	r3, [sl, #28]
   19ab8:	ldr	r2, [sl, #24]
   19abc:	sub	r3, r3, r2
   19ac0:	ldr	r2, [sl, #16]
   19ac4:	cmp	r3, r2
   19ac8:	bhi	196d8 <argp_failure@@Base+0x9b0>
   19acc:	ldr	r3, [sl, #4]
   19ad0:	str	r3, [fp, #-124]	; 0xffffff84
   19ad4:	mov	r3, #0
   19ad8:	str	r3, [sl, #4]
   19adc:	ldr	r3, [sl, #12]
   19ae0:	str	r3, [fp, #-128]	; 0xffffff80
   19ae4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19ae8:	str	r2, [fp, #-76]	; 0xffffffb4
   19aec:	str	sl, [fp, #-72]	; 0xffffffb8
   19af0:	sub	r3, fp, #88	; 0x58
   19af4:	str	r3, [fp, #-68]	; 0xffffffbc
   19af8:	mov	r3, #1
   19afc:	str	r3, [fp, #-64]	; 0xffffffc0
   19b00:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19b04:	str	r3, [fp, #-60]	; 0xffffffc4
   19b08:	ldr	r3, [r8, #12]
   19b0c:	ands	r3, r3, #8
   19b10:	str	r3, [fp, #-116]	; 0xffffff8c
   19b14:	movne	r3, #0
   19b18:	strne	r3, [fp, #-116]	; 0xffffff8c
   19b1c:	bne	19710 <argp_failure@@Base+0x9e8>
   19b20:	ldr	r2, [r2, #4]
   19b24:	cmp	r2, #0
   19b28:	beq	19710 <argp_failure@@Base+0x9e8>
   19b2c:	add	r3, r8, #24
   19b30:	b	196f0 <argp_failure@@Base+0x9c8>
   19b34:	mov	r0, sl
   19b38:	bl	1af30 <argp_error@@Base+0xd8c>
   19b3c:	b	199f8 <argp_failure@@Base+0xcd0>
   19b40:	sub	r2, fp, #76	; 0x4c
   19b44:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19b48:	ldr	r1, [r3, #20]
   19b4c:	ldr	r0, [r8, #16]
   19b50:	bl	17a7c <argp_parse@@Base+0x1c04>
   19b54:	b	19cb0 <argp_failure@@Base+0xf88>
   19b58:	ldr	r7, [r8, #16]
   19b5c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19b60:	ldr	r2, [fp, #-96]	; 0xffffffa0
   19b64:	ldr	r2, [r2, #20]
   19b68:	ldr	r1, [r8, #4]
   19b6c:	mov	r0, r7
   19b70:	bl	17848 <argp_parse@@Base+0x19d0>
   19b74:	subs	r4, r0, #0
   19b78:	beq	19c6c <argp_failure@@Base+0xf44>
   19b7c:	ldrb	r3, [r4]
   19b80:	cmp	r3, #0
   19b84:	beq	19c64 <argp_failure@@Base+0xf3c>
   19b88:	ldr	r3, [sl, #28]
   19b8c:	ldr	r2, [sl, #24]
   19b90:	sub	r3, r3, r2
   19b94:	ldr	r2, [sl, #16]
   19b98:	cmp	r3, r2
   19b9c:	bhi	19cbc <argp_failure@@Base+0xf94>
   19ba0:	ldr	r5, [sl, #20]
   19ba4:	bic	r5, r5, r5, asr #31
   19ba8:	ldr	r3, [pc, #624]	; 19e20 <argp_failure@@Base+0x10f8>
   19bac:	ldr	r6, [r3, #20]
   19bb0:	str	r6, [sl, #4]
   19bb4:	ldr	r3, [pc, #612]	; 19e20 <argp_failure@@Base+0x10f8>
   19bb8:	ldr	r6, [r3, #20]
   19bbc:	ldr	r3, [sl, #28]
   19bc0:	ldr	r2, [sl, #24]
   19bc4:	sub	r3, r3, r2
   19bc8:	ldr	r2, [sl, #16]
   19bcc:	cmp	r3, r2
   19bd0:	bhi	19cf8 <argp_failure@@Base+0xfd0>
   19bd4:	str	r6, [sl, #12]
   19bd8:	ldr	r3, [pc, #576]	; 19e20 <argp_failure@@Base+0x10f8>
   19bdc:	ldr	r1, [r3, #20]
   19be0:	add	r3, r1, #3
   19be4:	cmp	r3, r5
   19be8:	bcs	19d1c <argp_failure@@Base+0xff4>
   19bec:	ldr	r2, [sl, #28]
   19bf0:	ldr	r3, [sl, #32]
   19bf4:	cmp	r2, r3
   19bf8:	bcs	19d04 <argp_failure@@Base+0xfdc>
   19bfc:	ldr	r3, [sl, #28]
   19c00:	add	r2, r3, #1
   19c04:	str	r2, [sl, #28]
   19c08:	mov	r2, #10
   19c0c:	strb	r2, [r3]
   19c10:	mov	r0, r4
   19c14:	bl	119dc <strlen@plt>
   19c18:	subs	r5, r0, #0
   19c1c:	beq	19c64 <argp_failure@@Base+0xf3c>
   19c20:	ldr	r3, [sl, #28]
   19c24:	add	r3, r3, r5
   19c28:	ldr	r2, [sl, #32]
   19c2c:	cmp	r2, r3
   19c30:	bcs	19c48 <argp_failure@@Base+0xf20>
   19c34:	mov	r1, r5
   19c38:	mov	r0, sl
   19c3c:	bl	1b4d4 <argp_error@@Base+0x1330>
   19c40:	cmp	r0, #0
   19c44:	beq	19c64 <argp_failure@@Base+0xf3c>
   19c48:	mov	r2, r5
   19c4c:	mov	r1, r4
   19c50:	ldr	r0, [sl, #28]
   19c54:	bl	11808 <memcpy@plt>
   19c58:	ldr	r3, [sl, #28]
   19c5c:	add	r5, r3, r5
   19c60:	str	r5, [sl, #28]
   19c64:	cmp	r7, r4
   19c68:	bne	19d80 <argp_failure@@Base+0x1058>
   19c6c:	ldr	r3, [sl, #28]
   19c70:	ldr	r2, [sl, #24]
   19c74:	sub	r3, r3, r2
   19c78:	ldr	r2, [sl, #16]
   19c7c:	cmp	r3, r2
   19c80:	bhi	19d8c <argp_failure@@Base+0x1064>
   19c84:	mov	r3, #0
   19c88:	str	r3, [sl, #4]
   19c8c:	ldr	r2, [sl, #28]
   19c90:	ldr	r3, [sl, #32]
   19c94:	cmp	r2, r3
   19c98:	bcs	19d98 <argp_failure@@Base+0x1070>
   19c9c:	ldr	r3, [sl, #28]
   19ca0:	add	r2, r3, #1
   19ca4:	str	r2, [sl, #28]
   19ca8:	mov	r2, #10
   19cac:	strb	r2, [r3]
   19cb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   19cb4:	str	r3, [fp, #-88]	; 0xffffffa8
   19cb8:	b	19a4c <argp_failure@@Base+0xd24>
   19cbc:	mov	r0, sl
   19cc0:	bl	1af30 <argp_error@@Base+0xd8c>
   19cc4:	ldr	r5, [sl, #20]
   19cc8:	bic	r5, r5, r5, asr #31
   19ccc:	ldr	r3, [pc, #332]	; 19e20 <argp_failure@@Base+0x10f8>
   19cd0:	ldr	r6, [r3, #20]
   19cd4:	ldr	r3, [sl, #28]
   19cd8:	ldr	r2, [sl, #24]
   19cdc:	sub	r3, r3, r2
   19ce0:	ldr	r2, [sl, #16]
   19ce4:	cmp	r3, r2
   19ce8:	bls	19bb0 <argp_failure@@Base+0xe88>
   19cec:	mov	r0, sl
   19cf0:	bl	1af30 <argp_error@@Base+0xd8c>
   19cf4:	b	19bb0 <argp_failure@@Base+0xe88>
   19cf8:	mov	r0, sl
   19cfc:	bl	1af30 <argp_error@@Base+0xd8c>
   19d00:	b	19bd4 <argp_failure@@Base+0xeac>
   19d04:	mov	r1, #1
   19d08:	mov	r0, sl
   19d0c:	bl	1b4d4 <argp_error@@Base+0x1330>
   19d10:	cmp	r0, #0
   19d14:	beq	19c10 <argp_failure@@Base+0xee8>
   19d18:	b	19bfc <argp_failure@@Base+0xed4>
   19d1c:	cmp	r1, r5
   19d20:	bhi	19d74 <argp_failure@@Base+0x104c>
   19d24:	ldr	r3, [sl, #28]
   19d28:	add	r3, r3, #3
   19d2c:	ldr	r2, [sl, #32]
   19d30:	cmp	r2, r3
   19d34:	bcs	19d4c <argp_failure@@Base+0x1024>
   19d38:	mov	r1, #3
   19d3c:	mov	r0, sl
   19d40:	bl	1b4d4 <argp_error@@Base+0x1330>
   19d44:	cmp	r0, #0
   19d48:	beq	19c10 <argp_failure@@Base+0xee8>
   19d4c:	ldr	r3, [sl, #28]
   19d50:	ldr	r2, [pc, #196]	; 19e1c <argp_failure@@Base+0x10f4>
   19d54:	ldrh	r1, [r2]
   19d58:	ldrb	r2, [r2, #2]
   19d5c:	strh	r1, [r3]
   19d60:	strb	r2, [r3, #2]
   19d64:	ldr	r3, [sl, #28]
   19d68:	add	r3, r3, #3
   19d6c:	str	r3, [sl, #28]
   19d70:	b	19c10 <argp_failure@@Base+0xee8>
   19d74:	mov	r0, sl
   19d78:	bl	17664 <argp_parse@@Base+0x17ec>
   19d7c:	b	19c10 <argp_failure@@Base+0xee8>
   19d80:	mov	r0, r4
   19d84:	bl	16a6c <argp_parse@@Base+0xbf4>
   19d88:	b	19c6c <argp_failure@@Base+0xf44>
   19d8c:	mov	r0, sl
   19d90:	bl	1af30 <argp_error@@Base+0xd8c>
   19d94:	b	19c84 <argp_failure@@Base+0xf5c>
   19d98:	mov	r1, #1
   19d9c:	mov	r0, sl
   19da0:	bl	1b4d4 <argp_error@@Base+0x1330>
   19da4:	cmp	r0, #0
   19da8:	beq	19cb0 <argp_failure@@Base+0xf88>
   19dac:	b	19c9c <argp_failure@@Base+0xf74>
   19db0:	mov	r0, sl
   19db4:	bl	1af30 <argp_error@@Base+0xd8c>
   19db8:	b	19a64 <argp_failure@@Base+0xd3c>
   19dbc:	mov	r0, sl
   19dc0:	bl	1af30 <argp_error@@Base+0xd8c>
   19dc4:	b	19a84 <argp_failure@@Base+0xd5c>
   19dc8:	andeq	ip, r1, ip, lsr sl
   19dcc:	andeq	ip, r1, r4, ror #16
   19dd0:	andeq	ip, r1, ip, asr #20
   19dd4:	andeq	ip, r1, ip, ror sl
   19dd8:	andeq	ip, r1, r4, lsr #21
   19ddc:	andeq	ip, r1, ip, ror r8
   19de0:	strdeq	ip, [r1], -r8
   19de4:	andeq	ip, r1, r4, asr #21
   19de8:	andeq	fp, r1, r4, lsr r8
   19dec:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   19df0:	andeq	r8, r1, ip, ror r3
   19df4:	andeq	ip, r1, r8, lsl #22
   19df8:	andeq	ip, r1, r0, lsl #22
   19dfc:	andeq	ip, r1, r0, lsl fp
   19e00:	andeq	ip, r1, r8, lsl fp
   19e04:	andeq	ip, r1, r8, lsr #22
   19e08:	andeq	fp, r1, r0, lsr sp
   19e0c:	andeq	ip, r1, ip, asr #7
   19e10:	andeq	ip, r1, r0, ror #22
   19e14:	andeq	ip, r1, r8, ror #22
   19e18:	andeq	ip, r1, r0, ror fp
   19e1c:	andeq	ip, r1, r4, ror fp
   19e20:	andeq	sp, r2, r0, ror r3
   19e24:	andeq	r0, r0, #5
   19e28:	andeq	ip, r1, r8, ror fp
   19e2c:	andeq	sp, r2, r4, lsl r6
   19e30:	andeq	ip, r1, ip, ror #23
   19e34:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19e38:	cmp	r3, #0
   19e3c:	beq	19f2c <argp_failure@@Base+0x1204>
   19e40:	ldr	r3, [pc, #-40]	; 19e20 <argp_failure@@Base+0x10f8>
   19e44:	ldr	r3, [r3, #4]
   19e48:	cmp	r3, #0
   19e4c:	beq	19f2c <argp_failure@@Base+0x1204>
   19e50:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19e54:	cmp	r3, #0
   19e58:	ldrne	r2, [r3]
   19e5c:	moveq	r2, #0
   19e60:	ldr	r3, [fp, #-100]	; 0xffffff9c
   19e64:	ldr	r1, [pc, #-72]	; 19e24 <argp_failure@@Base+0x10fc>
   19e68:	ldr	r0, [pc, #-72]	; 19e28 <argp_failure@@Base+0x1100>
   19e6c:	bl	17848 <argp_parse@@Base+0x19d0>
   19e70:	subs	r4, r0, #0
   19e74:	beq	19f2c <argp_failure@@Base+0x1204>
   19e78:	ldrb	r3, [r4]
   19e7c:	cmp	r3, #0
   19e80:	beq	19f20 <argp_failure@@Base+0x11f8>
   19e84:	ldr	r2, [sl, #28]
   19e88:	ldr	r3, [sl, #32]
   19e8c:	cmp	r2, r3
   19e90:	bcs	19fc4 <argp_failure@@Base+0x129c>
   19e94:	ldr	r3, [sl, #28]
   19e98:	add	r2, r3, #1
   19e9c:	str	r2, [sl, #28]
   19ea0:	mov	r2, #10
   19ea4:	strb	r2, [r3]
   19ea8:	mov	r0, r4
   19eac:	bl	119dc <strlen@plt>
   19eb0:	subs	r5, r0, #0
   19eb4:	beq	19efc <argp_failure@@Base+0x11d4>
   19eb8:	ldr	r3, [sl, #28]
   19ebc:	add	r3, r3, r5
   19ec0:	ldr	r2, [sl, #32]
   19ec4:	cmp	r2, r3
   19ec8:	bcs	19ee0 <argp_failure@@Base+0x11b8>
   19ecc:	mov	r1, r5
   19ed0:	mov	r0, sl
   19ed4:	bl	1b4d4 <argp_error@@Base+0x1330>
   19ed8:	cmp	r0, #0
   19edc:	beq	19efc <argp_failure@@Base+0x11d4>
   19ee0:	mov	r2, r5
   19ee4:	mov	r1, r4
   19ee8:	ldr	r0, [sl, #28]
   19eec:	bl	11808 <memcpy@plt>
   19ef0:	ldr	r3, [sl, #28]
   19ef4:	add	r5, r3, r5
   19ef8:	str	r5, [sl, #28]
   19efc:	ldr	r2, [sl, #28]
   19f00:	ldr	r3, [sl, #32]
   19f04:	cmp	r2, r3
   19f08:	bcs	19fdc <argp_failure@@Base+0x12b4>
   19f0c:	ldr	r3, [sl, #28]
   19f10:	add	r2, r3, #1
   19f14:	str	r2, [sl, #28]
   19f18:	mov	r2, #10
   19f1c:	strb	r2, [r3]
   19f20:	ldr	r3, [pc, #-256]	; 19e28 <argp_failure@@Base+0x1100>
   19f24:	cmp	r4, r3
   19f28:	bne	19ff4 <argp_failure@@Base+0x12cc>
   19f2c:	mov	r4, #1
   19f30:	ldr	r3, [fp, #-104]	; 0xffffff98
   19f34:	tst	r3, #32
   19f38:	bne	1a000 <argp_failure@@Base+0x12d8>
   19f3c:	ldr	r3, [fp, #-104]	; 0xffffff98
   19f40:	tst	r3, #64	; 0x40
   19f44:	beq	19f98 <argp_failure@@Base+0x1270>
   19f48:	ldr	r3, [pc, #-292]	; 19e2c <argp_failure@@Base+0x1104>
   19f4c:	ldr	r3, [r3]
   19f50:	cmp	r3, #0
   19f54:	beq	19f98 <argp_failure@@Base+0x1270>
   19f58:	cmp	r4, #0
   19f5c:	beq	19f84 <argp_failure@@Base+0x125c>
   19f60:	ldr	r2, [sl, #28]
   19f64:	ldr	r3, [sl, #32]
   19f68:	cmp	r2, r3
   19f6c:	bcs	1a028 <argp_failure@@Base+0x1300>
   19f70:	ldr	r3, [sl, #28]
   19f74:	add	r2, r3, #1
   19f78:	str	r2, [sl, #28]
   19f7c:	mov	r2, #10
   19f80:	strb	r2, [r3]
   19f84:	ldr	r3, [pc, #-352]	; 19e2c <argp_failure@@Base+0x1104>
   19f88:	ldr	r2, [r3]
   19f8c:	ldr	r1, [pc, #-356]	; 19e30 <argp_failure@@Base+0x1108>
   19f90:	mov	r0, sl
   19f94:	bl	1b5c4 <argp_error@@Base+0x1420>
   19f98:	ldr	r0, [fp, #-132]	; 0xffffff7c
   19f9c:	bl	118d4 <funlockfile@plt>
   19fa0:	ldr	r3, [fp, #-108]	; 0xffffff94
   19fa4:	cmp	r3, #0
   19fa8:	beq	19fb4 <argp_failure@@Base+0x128c>
   19fac:	mov	r0, r3
   19fb0:	bl	17520 <argp_parse@@Base+0x16a8>
   19fb4:	mov	r0, sl
   19fb8:	bl	1b494 <argp_error@@Base+0x12f0>
   19fbc:	sub	sp, fp, #32
   19fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19fc4:	mov	r1, #1
   19fc8:	mov	r0, sl
   19fcc:	bl	1b4d4 <argp_error@@Base+0x1330>
   19fd0:	cmp	r0, #0
   19fd4:	beq	19ea8 <argp_failure@@Base+0x1180>
   19fd8:	b	19e94 <argp_failure@@Base+0x116c>
   19fdc:	mov	r1, #1
   19fe0:	mov	r0, sl
   19fe4:	bl	1b4d4 <argp_error@@Base+0x1330>
   19fe8:	cmp	r0, #0
   19fec:	beq	19f20 <argp_failure@@Base+0x11f8>
   19ff0:	b	19f0c <argp_failure@@Base+0x11e4>
   19ff4:	mov	r0, r4
   19ff8:	bl	16a6c <argp_parse@@Base+0xbf4>
   19ffc:	b	19f2c <argp_failure@@Base+0x1204>
   1a000:	str	sl, [sp, #4]
   1a004:	mov	r3, #0
   1a008:	str	r3, [sp]
   1a00c:	mov	r3, r4
   1a010:	mov	r2, #1
   1a014:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1a018:	ldr	r0, [fp, #-112]	; 0xffffff90
   1a01c:	bl	17de4 <argp_parse@@Base+0x1f6c>
   1a020:	orr	r4, r4, r0
   1a024:	b	19f3c <argp_failure@@Base+0x1214>
   1a028:	mov	r1, #1
   1a02c:	mov	r0, sl
   1a030:	bl	1b4d4 <argp_error@@Base+0x1330>
   1a034:	cmp	r0, #0
   1a038:	beq	19f84 <argp_failure@@Base+0x125c>
   1a03c:	b	19f70 <argp_failure@@Base+0x1248>
   1a040:	ldrb	r3, [r5]
   1a044:	mov	r4, r5
   1a048:	mov	r5, #0
   1a04c:	b	19120 <argp_failure@@Base+0x3f8>
   1a050:	mov	r4, r2
   1a054:	b	19134 <argp_failure@@Base+0x40c>
   1a058:	cmp	r0, #110	; 0x6e
   1a05c:	beq	1918c <argp_failure@@Base+0x464>
   1a060:	mov	r3, #1
   1a064:	str	r3, [fp, #-96]	; 0xffffffa0
   1a068:	str	r3, [fp, #-116]	; 0xffffff8c
   1a06c:	add	r6, sl, #24
   1a070:	b	19284 <argp_failure@@Base+0x55c>
   1a074:	ldrb	r3, [r9]
   1a078:	cmp	r7, r3
   1a07c:	beq	19758 <argp_failure@@Base+0xa30>
   1a080:	add	r4, r4, #24
   1a084:	subs	r5, r5, #1
   1a088:	beq	19848 <argp_failure@@Base+0xb20>
   1a08c:	ldr	r6, [r4, #12]
   1a090:	tst	r6, #8
   1a094:	bne	1a080 <argp_failure@@Base+0x1358>
   1a098:	ldr	r7, [r4, #4]
   1a09c:	sub	r3, r7, #1
   1a0a0:	cmp	r3, #254	; 0xfe
   1a0a4:	bhi	1a080 <argp_failure@@Base+0x1358>
   1a0a8:	bl	119ac <__ctype_b_loc@plt>
   1a0ac:	ldr	r2, [r0]
   1a0b0:	lsl	r3, r7, #1
   1a0b4:	ldrh	r3, [r2, r3]
   1a0b8:	tst	r3, #16384	; 0x4000
   1a0bc:	bne	1a074 <argp_failure@@Base+0x134c>
   1a0c0:	b	1a080 <argp_failure@@Base+0x1358>

0001a0c4 <argp_help@@Base>:
   1a0c4:	push	{lr}		; (str lr, [sp, #-4]!)
   1a0c8:	sub	sp, sp, #12
   1a0cc:	str	r3, [sp]
   1a0d0:	mov	r3, r2
   1a0d4:	mov	r2, r1
   1a0d8:	mov	r1, #0
   1a0dc:	bl	18f30 <argp_failure@@Base+0x208>
   1a0e0:	add	sp, sp, #12
   1a0e4:	pop	{pc}		; (ldr pc, [sp], #4)

0001a0e8 <argp_state_help@@Base>:
   1a0e8:	push	{r4, r5, lr}
   1a0ec:	sub	sp, sp, #12
   1a0f0:	mov	r5, r2
   1a0f4:	subs	r4, r0, #0
   1a0f8:	beq	1a15c <argp_state_help@@Base+0x74>
   1a0fc:	ldr	r3, [r4, #16]
   1a100:	tst	r3, #2
   1a104:	bne	1a154 <argp_state_help@@Base+0x6c>
   1a108:	cmp	r1, #0
   1a10c:	beq	1a154 <argp_state_help@@Base+0x6c>
   1a110:	ldr	r3, [r4, #16]
   1a114:	tst	r3, #64	; 0x40
   1a118:	orrne	r5, r5, #128	; 0x80
   1a11c:	ldr	r0, [r4]
   1a120:	ldr	r3, [r4, #40]	; 0x28
   1a124:	str	r3, [sp]
   1a128:	mov	r3, r5
   1a12c:	mov	r2, r1
   1a130:	mov	r1, r4
   1a134:	bl	18f30 <argp_failure@@Base+0x208>
   1a138:	ldr	r3, [r4, #16]
   1a13c:	tst	r3, #32
   1a140:	bne	1a154 <argp_state_help@@Base+0x6c>
   1a144:	tst	r5, #256	; 0x100
   1a148:	bne	1a188 <argp_state_help@@Base+0xa0>
   1a14c:	tst	r5, #512	; 0x200
   1a150:	bne	1a194 <argp_state_help@@Base+0xac>
   1a154:	add	sp, sp, #12
   1a158:	pop	{r4, r5, pc}
   1a15c:	cmp	r1, #0
   1a160:	beq	1a154 <argp_state_help@@Base+0x6c>
   1a164:	ldr	r3, [pc, #48]	; 1a19c <argp_state_help@@Base+0xb4>
   1a168:	ldr	r3, [r3]
   1a16c:	str	r3, [sp]
   1a170:	mov	r3, r2
   1a174:	mov	r2, r1
   1a178:	mov	r1, #0
   1a17c:	mov	r0, r1
   1a180:	bl	18f30 <argp_failure@@Base+0x208>
   1a184:	b	1a144 <argp_state_help@@Base+0x5c>
   1a188:	ldr	r3, [pc, #16]	; 1a1a0 <argp_state_help@@Base+0xb8>
   1a18c:	ldr	r0, [r3]
   1a190:	bl	119c4 <exit@plt>
   1a194:	mov	r0, #0
   1a198:	bl	119c4 <exit@plt>
   1a19c:	andeq	sp, r2, r8, lsr #7
   1a1a0:	andeq	sp, r2, r4, lsr #7

0001a1a4 <argp_error@@Base>:
   1a1a4:	push	{r1, r2, r3}
   1a1a8:	push	{r4, r5, lr}
   1a1ac:	sub	sp, sp, #8
   1a1b0:	subs	r5, r0, #0
   1a1b4:	beq	1a284 <argp_error@@Base+0xe0>
   1a1b8:	ldr	r3, [r5, #16]
   1a1bc:	tst	r3, #2
   1a1c0:	bne	1a274 <argp_error@@Base+0xd0>
   1a1c4:	ldr	r4, [r5, #44]	; 0x2c
   1a1c8:	cmp	r4, #0
   1a1cc:	beq	1a274 <argp_error@@Base+0xd0>
   1a1d0:	mov	r0, r4
   1a1d4:	bl	11b5c <flockfile@plt>
   1a1d8:	add	r3, sp, #24
   1a1dc:	str	r3, [sp, #4]
   1a1e0:	ldr	r0, [r5, #40]	; 0x28
   1a1e4:	mov	r1, r4
   1a1e8:	bl	11730 <fputs_unlocked@plt>
   1a1ec:	ldr	r3, [r4, #20]
   1a1f0:	ldr	r2, [r4, #24]
   1a1f4:	cmp	r3, r2
   1a1f8:	addcc	r2, r3, #1
   1a1fc:	strcc	r2, [r4, #20]
   1a200:	movcc	r2, #58	; 0x3a
   1a204:	strbcc	r2, [r3]
   1a208:	bcs	1a2b0 <argp_error@@Base+0x10c>
   1a20c:	ldr	r3, [r4, #20]
   1a210:	ldr	r2, [r4, #24]
   1a214:	cmp	r3, r2
   1a218:	addcc	r2, r3, #1
   1a21c:	strcc	r2, [r4, #20]
   1a220:	movcc	r2, #32
   1a224:	strbcc	r2, [r3]
   1a228:	bcs	1a2c0 <argp_error@@Base+0x11c>
   1a22c:	ldr	r2, [sp, #4]
   1a230:	ldr	r1, [sp, #20]
   1a234:	mov	r0, r4
   1a238:	bl	11afc <vfprintf@plt>
   1a23c:	ldr	r3, [r4, #20]
   1a240:	ldr	r2, [r4, #24]
   1a244:	cmp	r3, r2
   1a248:	addcc	r2, r3, #1
   1a24c:	strcc	r2, [r4, #20]
   1a250:	movcc	r2, #10
   1a254:	strbcc	r2, [r3]
   1a258:	bcs	1a2d0 <argp_error@@Base+0x12c>
   1a25c:	mov	r2, #260	; 0x104
   1a260:	mov	r1, r4
   1a264:	mov	r0, r5
   1a268:	bl	1a0e8 <argp_state_help@@Base>
   1a26c:	mov	r0, r4
   1a270:	bl	118d4 <funlockfile@plt>
   1a274:	add	sp, sp, #8
   1a278:	pop	{r4, r5, lr}
   1a27c:	add	sp, sp, #12
   1a280:	bx	lr
   1a284:	ldr	r3, [pc, #84]	; 1a2e0 <argp_error@@Base+0x13c>
   1a288:	ldr	r4, [r3]
   1a28c:	cmp	r4, #0
   1a290:	beq	1a274 <argp_error@@Base+0xd0>
   1a294:	mov	r0, r4
   1a298:	bl	11b5c <flockfile@plt>
   1a29c:	add	r3, sp, #24
   1a2a0:	str	r3, [sp, #4]
   1a2a4:	ldr	r3, [pc, #56]	; 1a2e4 <argp_error@@Base+0x140>
   1a2a8:	ldr	r0, [r3]
   1a2ac:	b	1a1e4 <argp_error@@Base+0x40>
   1a2b0:	mov	r1, #58	; 0x3a
   1a2b4:	mov	r0, r4
   1a2b8:	bl	11ab4 <__overflow@plt>
   1a2bc:	b	1a20c <argp_error@@Base+0x68>
   1a2c0:	mov	r1, #32
   1a2c4:	mov	r0, r4
   1a2c8:	bl	11ab4 <__overflow@plt>
   1a2cc:	b	1a22c <argp_error@@Base+0x88>
   1a2d0:	mov	r1, #10
   1a2d4:	mov	r0, r4
   1a2d8:	bl	11ab4 <__overflow@plt>
   1a2dc:	b	1a25c <argp_error@@Base+0xb8>
   1a2e0:			; <UNDEFINED> instruction: 0x0002d3b0
   1a2e4:	andeq	sp, r2, r8, lsr #7
   1a2e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1a2ec:	ldr	r4, [r1, #28]
   1a2f0:	ldr	r5, [r1, #32]
   1a2f4:	ldr	r6, [r1]
   1a2f8:	add	r7, r0, r5, lsl #2
   1a2fc:	b	1a334 <argp_error@@Base+0x190>
   1a300:	cmp	sl, #0
   1a304:	ble	1a330 <argp_error@@Base+0x18c>
   1a308:	add	r2, r0, r4, lsl #2
   1a30c:	sub	r3, r6, sl
   1a310:	add	r3, r0, r3, lsl #2
   1a314:	add	r8, r0, r6, lsl #2
   1a318:	ldr	ip, [r2]
   1a31c:	ldr	lr, [r3]
   1a320:	str	lr, [r2], #4
   1a324:	str	ip, [r3], #4
   1a328:	cmp	r3, r8
   1a32c:	bne	1a318 <argp_error@@Base+0x174>
   1a330:	sub	r6, r6, sl
   1a334:	cmp	r6, r5
   1a338:	movle	r3, #0
   1a33c:	movgt	r3, #1
   1a340:	cmp	r4, r5
   1a344:	movge	r3, #0
   1a348:	cmp	r3, #0
   1a34c:	beq	1a398 <argp_error@@Base+0x1f4>
   1a350:	sub	r9, r6, r5
   1a354:	sub	sl, r5, r4
   1a358:	cmp	r9, sl
   1a35c:	bgt	1a300 <argp_error@@Base+0x15c>
   1a360:	cmp	r9, #0
   1a364:	addgt	r3, r0, r4, lsl #2
   1a368:	addgt	r8, r9, r4
   1a36c:	addgt	r8, r0, r8, lsl #2
   1a370:	movgt	r2, r7
   1a374:	ble	1a390 <argp_error@@Base+0x1ec>
   1a378:	ldr	ip, [r3]
   1a37c:	ldr	lr, [r2]
   1a380:	str	lr, [r3], #4
   1a384:	str	ip, [r2], #4
   1a388:	cmp	r3, r8
   1a38c:	bne	1a378 <argp_error@@Base+0x1d4>
   1a390:	add	r4, r4, r9
   1a394:	b	1a334 <argp_error@@Base+0x190>
   1a398:	ldr	r0, [r1]
   1a39c:	ldr	r3, [r1, #32]
   1a3a0:	sub	r2, r0, r3
   1a3a4:	ldr	r3, [r1, #28]
   1a3a8:	add	r3, r3, r2
   1a3ac:	str	r3, [r1, #28]
   1a3b0:	str	r0, [r1, #32]
   1a3b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1a3b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a3bc:	sub	sp, sp, #44	; 0x2c
   1a3c0:	str	r0, [sp, #20]
   1a3c4:	str	r1, [sp, #12]
   1a3c8:	str	r2, [sp, #24]
   1a3cc:	str	r3, [sp, #8]
   1a3d0:	ldr	fp, [sp, #88]	; 0x58
   1a3d4:	ldr	sl, [fp, #20]
   1a3d8:	ldrb	r3, [sl]
   1a3dc:	cmp	r3, #0
   1a3e0:	cmpne	r3, #61	; 0x3d
   1a3e4:	beq	1a420 <argp_error@@Base+0x27c>
   1a3e8:	mov	r8, sl
   1a3ec:	ldrb	r3, [r8, #1]!
   1a3f0:	cmp	r3, #0
   1a3f4:	cmpne	r3, #61	; 0x3d
   1a3f8:	bne	1a3ec <argp_error@@Base+0x248>
   1a3fc:	sub	r7, r8, sl
   1a400:	ldr	r5, [sp, #8]
   1a404:	ldr	r3, [r5]
   1a408:	str	r3, [sp, #16]
   1a40c:	cmp	r3, #0
   1a410:	beq	1a714 <argp_error@@Base+0x570>
   1a414:	mov	r4, r3
   1a418:	mov	r6, #0
   1a41c:	b	1a438 <argp_error@@Base+0x294>
   1a420:	mov	r8, sl
   1a424:	b	1a3fc <argp_error@@Base+0x258>
   1a428:	add	r6, r6, #1
   1a42c:	ldr	r4, [r5, #16]!
   1a430:	cmp	r4, #0
   1a434:	beq	1a470 <argp_error@@Base+0x2cc>
   1a438:	mov	r9, r5
   1a43c:	mov	r2, r7
   1a440:	mov	r1, sl
   1a444:	mov	r0, r4
   1a448:	bl	11bd4 <strncmp@plt>
   1a44c:	cmp	r0, #0
   1a450:	bne	1a428 <argp_error@@Base+0x284>
   1a454:	mov	r0, r4
   1a458:	bl	119dc <strlen@plt>
   1a45c:	cmp	r7, r0
   1a460:	bne	1a428 <argp_error@@Base+0x284>
   1a464:	cmp	r5, #0
   1a468:	strne	r6, [sp, #28]
   1a46c:	bne	1a6c4 <argp_error@@Base+0x520>
   1a470:	ldr	r4, [sp, #8]
   1a474:	mvn	r3, #0
   1a478:	str	r3, [sp, #28]
   1a47c:	mov	sl, #0
   1a480:	str	sl, [sp, #36]	; 0x24
   1a484:	mov	r5, sl
   1a488:	mov	r9, sl
   1a48c:	str	r8, [sp, #32]
   1a490:	mov	r8, sl
   1a494:	ldr	r0, [sp, #16]
   1a498:	b	1a4e8 <argp_error@@Base+0x344>
   1a49c:	ldr	r2, [r9, #8]
   1a4a0:	ldr	r3, [r4, #8]
   1a4a4:	cmp	r2, r3
   1a4a8:	bne	1a520 <argp_error@@Base+0x37c>
   1a4ac:	ldr	r2, [r9, #12]
   1a4b0:	ldr	r3, [r4, #12]
   1a4b4:	cmp	r2, r3
   1a4b8:	bne	1a520 <argp_error@@Base+0x37c>
   1a4bc:	b	1a4d8 <argp_error@@Base+0x334>
   1a4c0:	cmp	r8, #0
   1a4c4:	moveq	sl, #1
   1a4c8:	beq	1a4d8 <argp_error@@Base+0x334>
   1a4cc:	mov	sl, #1
   1a4d0:	mov	r3, #1
   1a4d4:	strb	r3, [r8, r5]
   1a4d8:	add	r5, r5, #1
   1a4dc:	ldr	r0, [r4, #16]!
   1a4e0:	cmp	r0, #0
   1a4e4:	beq	1a588 <argp_error@@Base+0x3e4>
   1a4e8:	mov	r2, r7
   1a4ec:	ldr	r1, [fp, #20]
   1a4f0:	bl	11bd4 <strncmp@plt>
   1a4f4:	cmp	r0, #0
   1a4f8:	bne	1a4d8 <argp_error@@Base+0x334>
   1a4fc:	cmp	r9, #0
   1a500:	beq	1a574 <argp_error@@Base+0x3d0>
   1a504:	ldr	r3, [sp, #84]	; 0x54
   1a508:	cmp	r3, #0
   1a50c:	bne	1a520 <argp_error@@Base+0x37c>
   1a510:	ldr	r2, [r9, #4]
   1a514:	ldr	r3, [r4, #4]
   1a518:	cmp	r2, r3
   1a51c:	beq	1a49c <argp_error@@Base+0x2f8>
   1a520:	cmp	sl, #0
   1a524:	bne	1a4d8 <argp_error@@Base+0x334>
   1a528:	ldr	r3, [sp, #92]	; 0x5c
   1a52c:	cmp	r3, #0
   1a530:	beq	1a4c0 <argp_error@@Base+0x31c>
   1a534:	cmp	r8, #0
   1a538:	bne	1a4d0 <argp_error@@Base+0x32c>
   1a53c:	mov	r0, r6
   1a540:	bl	170a4 <argp_parse@@Base+0x122c>
   1a544:	subs	r8, r0, #0
   1a548:	beq	1a580 <argp_error@@Base+0x3dc>
   1a54c:	mov	r2, r6
   1a550:	mov	r1, #0
   1a554:	mov	r0, r8
   1a558:	bl	11a54 <memset@plt>
   1a55c:	ldr	r3, [sp, #28]
   1a560:	mov	r2, #1
   1a564:	strb	r2, [r8, r3]
   1a568:	mov	r3, #1
   1a56c:	str	r3, [sp, #36]	; 0x24
   1a570:	b	1a4d0 <argp_error@@Base+0x32c>
   1a574:	str	r5, [sp, #28]
   1a578:	mov	r9, r4
   1a57c:	b	1a4d8 <argp_error@@Base+0x334>
   1a580:	mov	sl, #1
   1a584:	b	1a4d8 <argp_error@@Base+0x334>
   1a588:	mov	r3, r8
   1a58c:	str	r8, [sp, #16]
   1a590:	ldr	r8, [sp, #32]
   1a594:	cmp	sl, #0
   1a598:	cmpeq	r3, #0
   1a59c:	beq	1a6bc <argp_error@@Base+0x518>
   1a5a0:	ldr	r3, [sp, #92]	; 0x5c
   1a5a4:	cmp	r3, #0
   1a5a8:	beq	1a5d8 <argp_error@@Base+0x434>
   1a5ac:	cmp	sl, #0
   1a5b0:	beq	1a614 <argp_error@@Base+0x470>
   1a5b4:	ldr	r3, [sp, #12]
   1a5b8:	ldr	r2, [r3]
   1a5bc:	ldr	r3, [pc, #708]	; 1a888 <argp_error@@Base+0x6e4>
   1a5c0:	ldr	r0, [r3]
   1a5c4:	ldr	r3, [fp, #20]
   1a5c8:	str	r3, [sp]
   1a5cc:	ldr	r3, [sp, #96]	; 0x60
   1a5d0:	ldr	r1, [pc, #692]	; 1a88c <argp_error@@Base+0x6e8>
   1a5d4:	bl	11a0c <fprintf@plt>
   1a5d8:	ldr	r3, [sp, #36]	; 0x24
   1a5dc:	cmp	r3, #0
   1a5e0:	bne	1a6b0 <argp_error@@Base+0x50c>
   1a5e4:	ldr	r4, [fp, #20]
   1a5e8:	mov	r0, r4
   1a5ec:	bl	119dc <strlen@plt>
   1a5f0:	add	r0, r4, r0
   1a5f4:	str	r0, [fp, #20]
   1a5f8:	ldr	r3, [fp]
   1a5fc:	add	r3, r3, #1
   1a600:	str	r3, [fp]
   1a604:	mov	r3, #0
   1a608:	str	r3, [fp, #8]
   1a60c:	mov	r0, #63	; 0x3f
   1a610:	b	1a808 <argp_error@@Base+0x664>
   1a614:	ldr	r4, [pc, #620]	; 1a888 <argp_error@@Base+0x6e4>
   1a618:	ldr	r0, [r4]
   1a61c:	bl	11b5c <flockfile@plt>
   1a620:	ldr	r3, [sp, #12]
   1a624:	ldr	r2, [r3]
   1a628:	ldr	r0, [r4]
   1a62c:	ldr	r3, [fp, #20]
   1a630:	str	r3, [sp]
   1a634:	ldr	r3, [sp, #96]	; 0x60
   1a638:	ldr	r1, [pc, #592]	; 1a890 <argp_error@@Base+0x6ec>
   1a63c:	bl	11a0c <fprintf@plt>
   1a640:	cmp	r6, #0
   1a644:	ble	1a694 <argp_error@@Base+0x4f0>
   1a648:	ldr	r3, [sp, #16]
   1a64c:	mov	r4, r3
   1a650:	add	r6, r3, r6
   1a654:	ldr	r7, [pc, #568]	; 1a894 <argp_error@@Base+0x6f0>
   1a658:	ldr	r5, [pc, #552]	; 1a888 <argp_error@@Base+0x6e4>
   1a65c:	ldr	r8, [sp, #8]
   1a660:	b	1a670 <argp_error@@Base+0x4cc>
   1a664:	add	sl, sl, #1
   1a668:	cmp	r4, r6
   1a66c:	beq	1a694 <argp_error@@Base+0x4f0>
   1a670:	ldrb	r3, [r4], #1
   1a674:	cmp	r3, #0
   1a678:	beq	1a664 <argp_error@@Base+0x4c0>
   1a67c:	ldr	r3, [r8, sl, lsl #4]
   1a680:	ldr	r2, [sp, #96]	; 0x60
   1a684:	mov	r1, r7
   1a688:	ldr	r0, [r5]
   1a68c:	bl	11a0c <fprintf@plt>
   1a690:	b	1a664 <argp_error@@Base+0x4c0>
   1a694:	ldr	r4, [pc, #492]	; 1a888 <argp_error@@Base+0x6e4>
   1a698:	ldr	r1, [r4]
   1a69c:	mov	r0, #10
   1a6a0:	bl	11b08 <fputc@plt>
   1a6a4:	ldr	r0, [r4]
   1a6a8:	bl	118d4 <funlockfile@plt>
   1a6ac:	b	1a5d8 <argp_error@@Base+0x434>
   1a6b0:	ldr	r0, [sp, #16]
   1a6b4:	bl	16a6c <argp_parse@@Base+0xbf4>
   1a6b8:	b	1a5e4 <argp_error@@Base+0x440>
   1a6bc:	cmp	r9, #0
   1a6c0:	beq	1a714 <argp_error@@Base+0x570>
   1a6c4:	ldr	r2, [fp]
   1a6c8:	add	r3, r2, #1
   1a6cc:	str	r3, [fp]
   1a6d0:	mov	r1, #0
   1a6d4:	str	r1, [fp, #20]
   1a6d8:	ldrb	r1, [r8]
   1a6dc:	cmp	r1, #0
   1a6e0:	beq	1a7d4 <argp_error@@Base+0x630>
   1a6e4:	ldr	r3, [r9, #4]
   1a6e8:	cmp	r3, #0
   1a6ec:	addne	r8, r8, #1
   1a6f0:	strne	r8, [fp, #12]
   1a6f4:	bne	1a7e0 <argp_error@@Base+0x63c>
   1a6f8:	ldr	r3, [sp, #92]	; 0x5c
   1a6fc:	cmp	r3, #0
   1a700:	bne	1a7ac <argp_error@@Base+0x608>
   1a704:	ldr	r3, [r9, #12]
   1a708:	str	r3, [fp, #8]
   1a70c:	mov	r0, #63	; 0x3f
   1a710:	b	1a808 <argp_error@@Base+0x664>
   1a714:	ldr	r3, [sp, #84]	; 0x54
   1a718:	cmp	r3, #0
   1a71c:	bne	1a74c <argp_error@@Base+0x5a8>
   1a720:	ldr	r3, [sp, #92]	; 0x5c
   1a724:	cmp	r3, #0
   1a728:	bne	1a784 <argp_error@@Base+0x5e0>
   1a72c:	mov	r2, #0
   1a730:	str	r2, [fp, #20]
   1a734:	ldr	r3, [fp]
   1a738:	add	r3, r3, #1
   1a73c:	str	r3, [fp]
   1a740:	str	r2, [fp, #8]
   1a744:	mov	r0, #63	; 0x3f
   1a748:	b	1a808 <argp_error@@Base+0x664>
   1a74c:	ldr	r3, [fp]
   1a750:	ldr	r2, [sp, #12]
   1a754:	ldr	r3, [r2, r3, lsl #2]
   1a758:	ldrb	r3, [r3, #1]
   1a75c:	cmp	r3, #45	; 0x2d
   1a760:	beq	1a720 <argp_error@@Base+0x57c>
   1a764:	ldr	r3, [fp, #20]
   1a768:	ldrb	r1, [r3]
   1a76c:	ldr	r0, [sp, #24]
   1a770:	bl	119f4 <strchr@plt>
   1a774:	cmp	r0, #0
   1a778:	beq	1a720 <argp_error@@Base+0x57c>
   1a77c:	mvn	r0, #0
   1a780:	b	1a808 <argp_error@@Base+0x664>
   1a784:	ldr	r3, [sp, #12]
   1a788:	ldr	r2, [r3]
   1a78c:	ldr	r3, [pc, #244]	; 1a888 <argp_error@@Base+0x6e4>
   1a790:	ldr	r0, [r3]
   1a794:	ldr	r3, [fp, #20]
   1a798:	str	r3, [sp]
   1a79c:	ldr	r3, [sp, #96]	; 0x60
   1a7a0:	ldr	r1, [pc, #240]	; 1a898 <argp_error@@Base+0x6f4>
   1a7a4:	bl	11a0c <fprintf@plt>
   1a7a8:	b	1a72c <argp_error@@Base+0x588>
   1a7ac:	ldr	r3, [sp, #12]
   1a7b0:	ldr	r2, [r3]
   1a7b4:	ldr	r3, [pc, #204]	; 1a888 <argp_error@@Base+0x6e4>
   1a7b8:	ldr	r0, [r3]
   1a7bc:	ldr	r3, [r9]
   1a7c0:	str	r3, [sp]
   1a7c4:	ldr	r3, [sp, #96]	; 0x60
   1a7c8:	ldr	r1, [pc, #204]	; 1a89c <argp_error@@Base+0x6f8>
   1a7cc:	bl	11a0c <fprintf@plt>
   1a7d0:	b	1a704 <argp_error@@Base+0x560>
   1a7d4:	ldr	r1, [r9, #4]
   1a7d8:	cmp	r1, #1
   1a7dc:	beq	1a810 <argp_error@@Base+0x66c>
   1a7e0:	ldr	r3, [sp, #80]	; 0x50
   1a7e4:	cmp	r3, #0
   1a7e8:	ldrne	r2, [sp, #28]
   1a7ec:	strne	r2, [r3]
   1a7f0:	ldr	r3, [r9, #8]
   1a7f4:	cmp	r3, #0
   1a7f8:	ldrne	r2, [r9, #12]
   1a7fc:	strne	r2, [r3]
   1a800:	movne	r0, #0
   1a804:	ldreq	r0, [r9, #12]
   1a808:	add	sp, sp, #44	; 0x2c
   1a80c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a810:	ldr	r1, [sp, #20]
   1a814:	cmp	r3, r1
   1a818:	bge	1a834 <argp_error@@Base+0x690>
   1a81c:	add	r2, r2, #2
   1a820:	str	r2, [fp]
   1a824:	ldr	r2, [sp, #12]
   1a828:	ldr	r3, [r2, r3, lsl #2]
   1a82c:	str	r3, [fp, #12]
   1a830:	b	1a7e0 <argp_error@@Base+0x63c>
   1a834:	ldr	r3, [sp, #92]	; 0x5c
   1a838:	cmp	r3, #0
   1a83c:	bne	1a860 <argp_error@@Base+0x6bc>
   1a840:	ldr	r3, [r9, #12]
   1a844:	str	r3, [fp, #8]
   1a848:	ldr	r3, [sp, #24]
   1a84c:	ldrb	r0, [r3]
   1a850:	cmp	r0, #58	; 0x3a
   1a854:	moveq	r0, #58	; 0x3a
   1a858:	movne	r0, #63	; 0x3f
   1a85c:	b	1a808 <argp_error@@Base+0x664>
   1a860:	ldr	r3, [sp, #12]
   1a864:	ldr	r2, [r3]
   1a868:	ldr	r3, [pc, #24]	; 1a888 <argp_error@@Base+0x6e4>
   1a86c:	ldr	r0, [r3]
   1a870:	ldr	r3, [r9]
   1a874:	str	r3, [sp]
   1a878:	ldr	r3, [sp, #96]	; 0x60
   1a87c:	ldr	r1, [pc, #28]	; 1a8a0 <argp_error@@Base+0x6fc>
   1a880:	bl	11a0c <fprintf@plt>
   1a884:	b	1a840 <argp_error@@Base+0x69c>
   1a888:			; <UNDEFINED> instruction: 0x0002d3b0
   1a88c:	andeq	ip, r1, r0, lsl #24
   1a890:	andeq	ip, r1, r0, lsr #24
   1a894:	andeq	ip, r1, r0, asr ip
   1a898:	andeq	ip, r1, r8, asr ip
   1a89c:	andeq	ip, r1, r8, ror ip
   1a8a0:	andeq	ip, r1, r8, lsr #25
   1a8a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a8a8:	sub	sp, sp, #36	; 0x24
   1a8ac:	str	r3, [sp, #24]
   1a8b0:	ldr	r4, [sp, #80]	; 0x50
   1a8b4:	ldr	r8, [r4, #4]
   1a8b8:	subs	r5, r0, #0
   1a8bc:	ble	1adc4 <argp_error@@Base+0xc20>
   1a8c0:	mov	r9, r1
   1a8c4:	mov	r6, r2
   1a8c8:	mov	r3, #0
   1a8cc:	str	r3, [r4, #12]
   1a8d0:	ldr	r3, [r4]
   1a8d4:	cmp	r3, #0
   1a8d8:	beq	1a8fc <argp_error@@Base+0x758>
   1a8dc:	ldr	r3, [r4, #16]
   1a8e0:	cmp	r3, #0
   1a8e4:	beq	1a904 <argp_error@@Base+0x760>
   1a8e8:	ldrb	r3, [r2]
   1a8ec:	sub	r3, r3, #43	; 0x2b
   1a8f0:	tst	r3, #253	; 0xfd
   1a8f4:	addeq	r6, r2, #1
   1a8f8:	b	1a960 <argp_error@@Base+0x7bc>
   1a8fc:	mov	r3, #1
   1a900:	str	r3, [r4]
   1a904:	ldr	r3, [r4]
   1a908:	str	r3, [r4, #32]
   1a90c:	str	r3, [r4, #28]
   1a910:	mov	r3, #0
   1a914:	str	r3, [r4, #20]
   1a918:	ldrb	r3, [r6]
   1a91c:	cmp	r3, #45	; 0x2d
   1a920:	moveq	r3, #2
   1a924:	streq	r3, [r4, #24]
   1a928:	addeq	r6, r6, #1
   1a92c:	beq	1a958 <argp_error@@Base+0x7b4>
   1a930:	cmp	r3, #43	; 0x2b
   1a934:	moveq	r3, #0
   1a938:	streq	r3, [r4, #24]
   1a93c:	addeq	r6, r6, #1
   1a940:	beq	1a958 <argp_error@@Base+0x7b4>
   1a944:	ldr	r3, [sp, #84]	; 0x54
   1a948:	cmp	r3, #0
   1a94c:	beq	1a9fc <argp_error@@Base+0x858>
   1a950:	mov	r3, #0
   1a954:	str	r3, [r4, #24]
   1a958:	mov	r3, #1
   1a95c:	str	r3, [r4, #16]
   1a960:	ldrb	r3, [r6]
   1a964:	cmp	r3, #58	; 0x3a
   1a968:	moveq	r8, #0
   1a96c:	ldr	r3, [r4, #20]
   1a970:	cmp	r3, #0
   1a974:	beq	1a984 <argp_error@@Base+0x7e0>
   1a978:	ldrb	r3, [r3]
   1a97c:	cmp	r3, #0
   1a980:	bne	1ab10 <argp_error@@Base+0x96c>
   1a984:	ldr	r3, [r4]
   1a988:	ldr	r2, [r4, #32]
   1a98c:	cmp	r2, r3
   1a990:	strgt	r3, [r4, #32]
   1a994:	ldr	r2, [r4, #28]
   1a998:	cmp	r3, r2
   1a99c:	strlt	r3, [r4, #28]
   1a9a0:	ldr	r2, [r4, #24]
   1a9a4:	cmp	r2, #1
   1a9a8:	beq	1aa18 <argp_error@@Base+0x874>
   1a9ac:	ldr	r7, [r4]
   1a9b0:	cmp	r5, r7
   1a9b4:	beq	1aa9c <argp_error@@Base+0x8f8>
   1a9b8:	ldr	sl, [r9, r7, lsl #2]
   1a9bc:	ldr	r1, [pc, #1088]	; 1ae04 <argp_error@@Base+0xc60>
   1a9c0:	mov	r0, sl
   1a9c4:	bl	11754 <strcmp@plt>
   1a9c8:	cmp	r0, #0
   1a9cc:	bne	1add4 <argp_error@@Base+0xc30>
   1a9d0:	add	r7, r7, #1
   1a9d4:	str	r7, [r4]
   1a9d8:	ldr	r2, [r4, #28]
   1a9dc:	ldr	r3, [r4, #32]
   1a9e0:	cmp	r7, r3
   1a9e4:	cmpne	r2, r3
   1a9e8:	beq	1aa8c <argp_error@@Base+0x8e8>
   1a9ec:	mov	r1, r4
   1a9f0:	mov	r0, r9
   1a9f4:	bl	1a2e8 <argp_error@@Base+0x144>
   1a9f8:	b	1aa94 <argp_error@@Base+0x8f0>
   1a9fc:	ldr	r0, [pc, #1028]	; 1ae08 <argp_error@@Base+0xc64>
   1aa00:	bl	11940 <getenv@plt>
   1aa04:	cmp	r0, #0
   1aa08:	bne	1a950 <argp_error@@Base+0x7ac>
   1aa0c:	mov	r3, #1
   1aa10:	str	r3, [r4, #24]
   1aa14:	b	1a958 <argp_error@@Base+0x7b4>
   1aa18:	ldr	r2, [r4, #32]
   1aa1c:	ldr	r1, [r4, #28]
   1aa20:	cmp	r1, r2
   1aa24:	cmpne	r3, r2
   1aa28:	beq	1aa3c <argp_error@@Base+0x898>
   1aa2c:	mov	r1, r4
   1aa30:	mov	r0, r9
   1aa34:	bl	1a2e8 <argp_error@@Base+0x144>
   1aa38:	b	1aa44 <argp_error@@Base+0x8a0>
   1aa3c:	cmp	r3, r2
   1aa40:	strne	r3, [r4, #28]
   1aa44:	ldr	r3, [r4]
   1aa48:	cmp	r5, r3
   1aa4c:	ble	1aa84 <argp_error@@Base+0x8e0>
   1aa50:	add	r1, r9, r3, lsl #2
   1aa54:	b	1aa68 <argp_error@@Base+0x8c4>
   1aa58:	add	r3, r3, #1
   1aa5c:	str	r3, [r4]
   1aa60:	cmp	r5, r3
   1aa64:	beq	1aa84 <argp_error@@Base+0x8e0>
   1aa68:	ldr	r2, [r1], #4
   1aa6c:	ldrb	r0, [r2]
   1aa70:	cmp	r0, #45	; 0x2d
   1aa74:	bne	1aa58 <argp_error@@Base+0x8b4>
   1aa78:	ldrb	r2, [r2, #1]
   1aa7c:	cmp	r2, #0
   1aa80:	beq	1aa58 <argp_error@@Base+0x8b4>
   1aa84:	str	r3, [r4, #32]
   1aa88:	b	1a9ac <argp_error@@Base+0x808>
   1aa8c:	cmp	r2, r3
   1aa90:	streq	r7, [r4, #28]
   1aa94:	str	r5, [r4, #32]
   1aa98:	str	r5, [r4]
   1aa9c:	ldr	r3, [r4, #28]
   1aaa0:	ldr	r2, [r4, #32]
   1aaa4:	cmp	r3, r2
   1aaa8:	mvneq	r0, #0
   1aaac:	strne	r3, [r4]
   1aab0:	mvnne	r0, #0
   1aab4:	b	1ac14 <argp_error@@Base+0xa70>
   1aab8:	ldrb	r1, [sl, #1]
   1aabc:	cmp	r1, #0
   1aac0:	beq	1ade0 <argp_error@@Base+0xc3c>
   1aac4:	ldr	r3, [sp, #24]
   1aac8:	cmp	r3, #0
   1aacc:	beq	1ab00 <argp_error@@Base+0x95c>
   1aad0:	cmp	r1, #45	; 0x2d
   1aad4:	beq	1ab78 <argp_error@@Base+0x9d4>
   1aad8:	ldr	r3, [sp, #76]	; 0x4c
   1aadc:	cmp	r3, #0
   1aae0:	beq	1ab00 <argp_error@@Base+0x95c>
   1aae4:	ldrb	r3, [sl, #2]
   1aae8:	cmp	r3, #0
   1aaec:	bne	1abb8 <argp_error@@Base+0xa14>
   1aaf0:	mov	r0, r6
   1aaf4:	bl	119f4 <strchr@plt>
   1aaf8:	cmp	r0, #0
   1aafc:	beq	1abb8 <argp_error@@Base+0xa14>
   1ab00:	ldr	r3, [r4]
   1ab04:	ldr	r3, [r9, r3, lsl #2]
   1ab08:	add	r3, r3, #1
   1ab0c:	str	r3, [r4, #20]
   1ab10:	ldr	sl, [r4, #20]
   1ab14:	add	fp, sl, #1
   1ab18:	str	fp, [r4, #20]
   1ab1c:	ldrb	r7, [sl]
   1ab20:	str	r7, [sp, #28]
   1ab24:	mov	r1, r7
   1ab28:	mov	r0, r6
   1ab2c:	bl	119f4 <strchr@plt>
   1ab30:	ldrb	r3, [sl, #1]
   1ab34:	cmp	r3, #0
   1ab38:	ldreq	r3, [r4]
   1ab3c:	addeq	r3, r3, #1
   1ab40:	streq	r3, [r4]
   1ab44:	sub	r3, r7, #58	; 0x3a
   1ab48:	uxtb	r3, r3
   1ab4c:	cmp	r0, #0
   1ab50:	cmpne	r3, #1
   1ab54:	bls	1ac00 <argp_error@@Base+0xa5c>
   1ab58:	ldrb	r3, [r0]
   1ab5c:	cmp	r3, #87	; 0x57
   1ab60:	beq	1ac38 <argp_error@@Base+0xa94>
   1ab64:	ldrb	r3, [r0, #1]
   1ab68:	cmp	r3, #58	; 0x3a
   1ab6c:	beq	1ad04 <argp_error@@Base+0xb60>
   1ab70:	mov	r0, r7
   1ab74:	b	1ac14 <argp_error@@Base+0xa70>
   1ab78:	add	sl, sl, #2
   1ab7c:	str	sl, [r4, #20]
   1ab80:	ldr	r3, [pc, #636]	; 1ae04 <argp_error@@Base+0xc60>
   1ab84:	str	r3, [sp, #16]
   1ab88:	str	r8, [sp, #12]
   1ab8c:	str	r4, [sp, #8]
   1ab90:	ldr	r3, [sp, #76]	; 0x4c
   1ab94:	str	r3, [sp, #4]
   1ab98:	ldr	r3, [sp, #72]	; 0x48
   1ab9c:	str	r3, [sp]
   1aba0:	ldr	r3, [sp, #24]
   1aba4:	mov	r2, r6
   1aba8:	mov	r1, r9
   1abac:	mov	r0, r5
   1abb0:	bl	1a3b8 <argp_error@@Base+0x214>
   1abb4:	b	1ac14 <argp_error@@Base+0xa70>
   1abb8:	add	sl, sl, #1
   1abbc:	str	sl, [r4, #20]
   1abc0:	ldr	r3, [pc, #580]	; 1ae0c <argp_error@@Base+0xc68>
   1abc4:	str	r3, [sp, #16]
   1abc8:	str	r8, [sp, #12]
   1abcc:	str	r4, [sp, #8]
   1abd0:	ldr	r3, [sp, #76]	; 0x4c
   1abd4:	str	r3, [sp, #4]
   1abd8:	ldr	r3, [sp, #72]	; 0x48
   1abdc:	str	r3, [sp]
   1abe0:	ldr	r3, [sp, #24]
   1abe4:	mov	r2, r6
   1abe8:	mov	r1, r9
   1abec:	mov	r0, r5
   1abf0:	bl	1a3b8 <argp_error@@Base+0x214>
   1abf4:	cmn	r0, #1
   1abf8:	bne	1ac14 <argp_error@@Base+0xa70>
   1abfc:	b	1ab00 <argp_error@@Base+0x95c>
   1ac00:	cmp	r8, #0
   1ac04:	bne	1ac1c <argp_error@@Base+0xa78>
   1ac08:	ldr	r3, [sp, #28]
   1ac0c:	str	r3, [r4, #8]
   1ac10:	mov	r0, #63	; 0x3f
   1ac14:	add	sp, sp, #36	; 0x24
   1ac18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ac1c:	ldr	r3, [sp, #28]
   1ac20:	ldr	r2, [r9]
   1ac24:	ldr	r1, [pc, #484]	; 1ae10 <argp_error@@Base+0xc6c>
   1ac28:	ldr	r0, [pc, #484]	; 1ae14 <argp_error@@Base+0xc70>
   1ac2c:	ldr	r0, [r0]
   1ac30:	bl	11a0c <fprintf@plt>
   1ac34:	b	1ac08 <argp_error@@Base+0xa64>
   1ac38:	ldrb	r3, [r0, #1]
   1ac3c:	ldr	r2, [sp, #24]
   1ac40:	cmp	r3, #59	; 0x3b
   1ac44:	movne	r3, #0
   1ac48:	moveq	r3, #1
   1ac4c:	cmp	r2, #0
   1ac50:	moveq	r3, #0
   1ac54:	cmp	r3, #0
   1ac58:	beq	1ab64 <argp_error@@Base+0x9c0>
   1ac5c:	ldrb	r3, [sl, #1]
   1ac60:	cmp	r3, #0
   1ac64:	strne	fp, [r4, #12]
   1ac68:	bne	1ac80 <argp_error@@Base+0xadc>
   1ac6c:	ldr	r3, [r4]
   1ac70:	cmp	r5, r3
   1ac74:	beq	1acc4 <argp_error@@Base+0xb20>
   1ac78:	ldr	r3, [r9, r3, lsl #2]
   1ac7c:	str	r3, [r4, #12]
   1ac80:	ldr	r3, [r4, #12]
   1ac84:	str	r3, [r4, #20]
   1ac88:	mov	r3, #0
   1ac8c:	str	r3, [r4, #12]
   1ac90:	ldr	r2, [pc, #384]	; 1ae18 <argp_error@@Base+0xc74>
   1ac94:	str	r2, [sp, #16]
   1ac98:	str	r8, [sp, #12]
   1ac9c:	str	r4, [sp, #8]
   1aca0:	str	r3, [sp, #4]
   1aca4:	ldr	r3, [sp, #72]	; 0x48
   1aca8:	str	r3, [sp]
   1acac:	ldr	r3, [sp, #24]
   1acb0:	mov	r2, r6
   1acb4:	mov	r1, r9
   1acb8:	mov	r0, r5
   1acbc:	bl	1a3b8 <argp_error@@Base+0x214>
   1acc0:	b	1ac14 <argp_error@@Base+0xa70>
   1acc4:	cmp	r8, #0
   1acc8:	bne	1ace8 <argp_error@@Base+0xb44>
   1accc:	ldr	r3, [sp, #28]
   1acd0:	str	r3, [r4, #8]
   1acd4:	ldrb	r0, [r6]
   1acd8:	cmp	r0, #58	; 0x3a
   1acdc:	moveq	r0, #58	; 0x3a
   1ace0:	movne	r0, #63	; 0x3f
   1ace4:	b	1ac14 <argp_error@@Base+0xa70>
   1ace8:	ldr	r3, [sp, #28]
   1acec:	ldr	r2, [r9]
   1acf0:	ldr	r1, [pc, #292]	; 1ae1c <argp_error@@Base+0xc78>
   1acf4:	ldr	r0, [pc, #280]	; 1ae14 <argp_error@@Base+0xc70>
   1acf8:	ldr	r0, [r0]
   1acfc:	bl	11a0c <fprintf@plt>
   1ad00:	b	1accc <argp_error@@Base+0xb28>
   1ad04:	ldrb	r3, [r0, #2]
   1ad08:	cmp	r3, #58	; 0x3a
   1ad0c:	beq	1ad38 <argp_error@@Base+0xb94>
   1ad10:	ldrb	r3, [sl, #1]
   1ad14:	cmp	r3, #0
   1ad18:	beq	1ad64 <argp_error@@Base+0xbc0>
   1ad1c:	str	fp, [r4, #12]
   1ad20:	ldr	r3, [r4]
   1ad24:	add	r3, r3, #1
   1ad28:	str	r3, [r4]
   1ad2c:	mov	r3, #0
   1ad30:	str	r3, [r4, #20]
   1ad34:	b	1ab70 <argp_error@@Base+0x9cc>
   1ad38:	ldrb	r3, [sl, #1]
   1ad3c:	cmp	r3, #0
   1ad40:	strne	fp, [r4, #12]
   1ad44:	ldrne	r3, [r4]
   1ad48:	addne	r3, r3, #1
   1ad4c:	strne	r3, [r4]
   1ad50:	moveq	r3, #0
   1ad54:	streq	r3, [r4, #12]
   1ad58:	mov	r3, #0
   1ad5c:	str	r3, [r4, #20]
   1ad60:	b	1ab70 <argp_error@@Base+0x9cc>
   1ad64:	ldr	r3, [r4]
   1ad68:	cmp	r5, r3
   1ad6c:	beq	1ad84 <argp_error@@Base+0xbe0>
   1ad70:	add	r2, r3, #1
   1ad74:	str	r2, [r4]
   1ad78:	ldr	r3, [r9, r3, lsl #2]
   1ad7c:	str	r3, [r4, #12]
   1ad80:	b	1ad2c <argp_error@@Base+0xb88>
   1ad84:	cmp	r8, #0
   1ad88:	bne	1ada8 <argp_error@@Base+0xc04>
   1ad8c:	ldr	r3, [sp, #28]
   1ad90:	str	r3, [r4, #8]
   1ad94:	ldrb	r7, [r6]
   1ad98:	cmp	r7, #58	; 0x3a
   1ad9c:	moveq	r7, #58	; 0x3a
   1ada0:	movne	r7, #63	; 0x3f
   1ada4:	b	1ad2c <argp_error@@Base+0xb88>
   1ada8:	ldr	r3, [sp, #28]
   1adac:	ldr	r2, [r9]
   1adb0:	ldr	r1, [pc, #100]	; 1ae1c <argp_error@@Base+0xc78>
   1adb4:	ldr	r0, [pc, #88]	; 1ae14 <argp_error@@Base+0xc70>
   1adb8:	ldr	r0, [r0]
   1adbc:	bl	11a0c <fprintf@plt>
   1adc0:	b	1ad8c <argp_error@@Base+0xbe8>
   1adc4:	mvn	r0, #0
   1adc8:	b	1ac14 <argp_error@@Base+0xa70>
   1adcc:	mvn	r0, #0
   1add0:	b	1ac14 <argp_error@@Base+0xa70>
   1add4:	ldrb	r3, [sl]
   1add8:	cmp	r3, #45	; 0x2d
   1addc:	beq	1aab8 <argp_error@@Base+0x914>
   1ade0:	ldr	r3, [r4, #24]
   1ade4:	cmp	r3, #0
   1ade8:	beq	1adcc <argp_error@@Base+0xc28>
   1adec:	add	r3, r7, #1
   1adf0:	str	r3, [r4]
   1adf4:	ldr	r3, [r9, r7, lsl #2]
   1adf8:	str	r3, [r4, #12]
   1adfc:	mov	r0, #1
   1ae00:	b	1ac14 <argp_error@@Base+0xa70>
   1ae04:	andeq	ip, r1, r4, asr #7
   1ae08:	ldrdeq	ip, [r1], -r0
   1ae0c:	andeq	ip, r1, r0, ror #25
   1ae10:	andeq	ip, r1, r4, ror #25
   1ae14:			; <UNDEFINED> instruction: 0x0002d3b0
   1ae18:	andeq	ip, r1, ip, lsr #26
   1ae1c:	andeq	ip, r1, r0, lsl #26
   1ae20:	push	{r4, r5, lr}
   1ae24:	sub	sp, sp, #20
   1ae28:	ldr	r4, [pc, #84]	; 1ae84 <argp_error@@Base+0xce0>
   1ae2c:	ldr	r5, [pc, #84]	; 1ae88 <argp_error@@Base+0xce4>
   1ae30:	ldr	ip, [r5]
   1ae34:	str	ip, [r4]
   1ae38:	ldr	ip, [r5, #4]
   1ae3c:	str	ip, [r4, #4]
   1ae40:	ldr	ip, [sp, #40]	; 0x28
   1ae44:	str	ip, [sp, #12]
   1ae48:	str	r4, [sp, #8]
   1ae4c:	ldr	ip, [sp, #36]	; 0x24
   1ae50:	str	ip, [sp, #4]
   1ae54:	ldr	ip, [sp, #32]
   1ae58:	str	ip, [sp]
   1ae5c:	bl	1a8a4 <argp_error@@Base+0x700>
   1ae60:	ldr	r3, [r4]
   1ae64:	str	r3, [r5]
   1ae68:	ldr	r2, [r4, #12]
   1ae6c:	ldr	r3, [pc, #24]	; 1ae8c <argp_error@@Base+0xce8>
   1ae70:	str	r2, [r3]
   1ae74:	ldr	r3, [r4, #8]
   1ae78:	str	r3, [r5, #8]
   1ae7c:	add	sp, sp, #20
   1ae80:	pop	{r4, r5, pc}
   1ae84:	andeq	sp, r2, r0, asr #9
   1ae88:	muleq	r2, r8, r3
   1ae8c:	andeq	sp, r2, ip, lsl r6
   1ae90:	push	{lr}		; (str lr, [sp, #-4]!)
   1ae94:	sub	sp, sp, #20
   1ae98:	mov	r3, #1
   1ae9c:	str	r3, [sp, #8]
   1aea0:	mov	r3, #0
   1aea4:	str	r3, [sp, #4]
   1aea8:	str	r3, [sp]
   1aeac:	bl	1ae20 <argp_error@@Base+0xc7c>
   1aeb0:	add	sp, sp, #20
   1aeb4:	pop	{pc}		; (ldr pc, [sp], #4)
   1aeb8:	push	{r4, r5, r6, r7, r8, lr}
   1aebc:	mov	r8, r0
   1aec0:	mov	r7, r1
   1aec4:	mov	r6, r2
   1aec8:	mov	r5, r3
   1aecc:	mov	r0, #36	; 0x24
   1aed0:	bl	170a4 <argp_parse@@Base+0x122c>
   1aed4:	subs	r4, r0, #0
   1aed8:	beq	1af18 <argp_error@@Base+0xd74>
   1aedc:	str	r8, [r4]
   1aee0:	str	r7, [r4, #4]
   1aee4:	str	r6, [r4, #8]
   1aee8:	str	r5, [r4, #12]
   1aeec:	mov	r3, #0
   1aef0:	str	r3, [r4, #20]
   1aef4:	str	r3, [r4, #16]
   1aef8:	mov	r0, #200	; 0xc8
   1aefc:	bl	170a4 <argp_parse@@Base+0x122c>
   1af00:	str	r0, [r4, #24]
   1af04:	cmp	r0, #0
   1af08:	strne	r0, [r4, #28]
   1af0c:	addne	r0, r0, #200	; 0xc8
   1af10:	strne	r0, [r4, #32]
   1af14:	beq	1af20 <argp_error@@Base+0xd7c>
   1af18:	mov	r0, r4
   1af1c:	pop	{r4, r5, r6, r7, r8, pc}
   1af20:	mov	r0, r4
   1af24:	bl	16a6c <argp_parse@@Base+0xbf4>
   1af28:	mov	r4, #0
   1af2c:	b	1af18 <argp_error@@Base+0xd74>
   1af30:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1af34:	sub	sp, sp, #20
   1af38:	mov	r4, r0
   1af3c:	ldr	r2, [r0, #24]
   1af40:	ldr	r3, [r0, #16]
   1af44:	add	r9, r2, r3
   1af48:	mov	sl, #32
   1af4c:	b	1aff8 <argp_error@@Base+0xe54>
   1af50:	add	r5, r5, #1
   1af54:	cmp	r6, r5
   1af58:	beq	1af88 <argp_error@@Base+0xde4>
   1af5c:	ldr	r0, [r4]
   1af60:	ldr	r3, [r0, #20]
   1af64:	ldr	r2, [r0, #24]
   1af68:	cmp	r3, r2
   1af6c:	addcc	r2, r3, #1
   1af70:	strcc	r2, [r0, #20]
   1af74:	strbcc	sl, [r3]
   1af78:	bcc	1af50 <argp_error@@Base+0xdac>
   1af7c:	mov	r1, sl
   1af80:	bl	11ab4 <__overflow@plt>
   1af84:	b	1af50 <argp_error@@Base+0xdac>
   1af88:	str	r6, [r4, #20]
   1af8c:	ldr	fp, [r4, #28]
   1af90:	str	fp, [sp, #8]
   1af94:	str	r9, [sp, #4]
   1af98:	sub	r3, fp, r9
   1af9c:	str	r3, [sp]
   1afa0:	mov	r2, r3
   1afa4:	mov	r1, #10
   1afa8:	mov	r0, r9
   1afac:	bl	11a90 <memchr@plt>
   1afb0:	mov	r7, r0
   1afb4:	ldr	r3, [r4, #20]
   1afb8:	cmp	r3, #0
   1afbc:	movlt	r3, #0
   1afc0:	strlt	r3, [r4, #20]
   1afc4:	cmp	r7, #0
   1afc8:	beq	1b068 <argp_error@@Base+0xec4>
   1afcc:	ldr	r0, [r4, #20]
   1afd0:	mov	r5, r7
   1afd4:	ldr	r8, [r4, #8]
   1afd8:	ldr	r3, [sp, #4]
   1afdc:	sub	r3, r7, r3
   1afe0:	add	r3, r3, r0
   1afe4:	cmp	r3, r8
   1afe8:	bge	1b0b8 <argp_error@@Base+0xf14>
   1afec:	mov	r3, #0
   1aff0:	str	r3, [r4, #20]
   1aff4:	add	r9, r7, #1
   1aff8:	ldr	fp, [r4, #28]
   1affc:	cmp	r9, fp
   1b000:	bcs	1b0a0 <argp_error@@Base+0xefc>
   1b004:	ldr	r3, [r4, #20]
   1b008:	cmp	r3, #0
   1b00c:	bne	1af8c <argp_error@@Base+0xde8>
   1b010:	ldr	r6, [r4, #4]
   1b014:	cmp	r6, #0
   1b018:	beq	1b464 <argp_error@@Base+0x12c0>
   1b01c:	add	r3, fp, r6
   1b020:	ldr	r2, [r4, #32]
   1b024:	cmp	r2, r3
   1b028:	movls	r5, #0
   1b02c:	bls	1af5c <argp_error@@Base+0xdb8>
   1b030:	add	r5, r9, r6
   1b034:	sub	r2, fp, r9
   1b038:	mov	r1, r9
   1b03c:	mov	r0, r5
   1b040:	bl	117c0 <memmove@plt>
   1b044:	ldr	r3, [r4, #28]
   1b048:	add	r3, r3, r6
   1b04c:	str	r3, [r4, #28]
   1b050:	mov	r2, r6
   1b054:	mov	r1, sl
   1b058:	mov	r0, r9
   1b05c:	bl	11a54 <memset@plt>
   1b060:	mov	r9, r5
   1b064:	b	1af88 <argp_error@@Base+0xde4>
   1b068:	ldr	r3, [r4, #20]
   1b06c:	ldr	r2, [sp]
   1b070:	add	r3, r2, r3
   1b074:	ldr	r6, [r4, #8]
   1b078:	cmp	r3, r6
   1b07c:	bcc	1b09c <argp_error@@Base+0xef8>
   1b080:	sub	r6, r6, #1
   1b084:	ldr	r3, [r4, #12]
   1b088:	str	r3, [sp, #12]
   1b08c:	cmp	r3, #0
   1b090:	blt	1b1ac <argp_error@@Base+0x1008>
   1b094:	mov	r7, fp
   1b098:	b	1b0cc <argp_error@@Base+0xf28>
   1b09c:	str	r3, [r4, #20]
   1b0a0:	ldr	r3, [r4, #28]
   1b0a4:	ldr	r2, [r4, #24]
   1b0a8:	sub	r3, r3, r2
   1b0ac:	str	r3, [r4, #16]
   1b0b0:	add	sp, sp, #20
   1b0b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b0b8:	sub	r6, r8, #1
   1b0bc:	ldr	r3, [r4, #12]
   1b0c0:	str	r3, [sp, #12]
   1b0c4:	cmp	r3, #0
   1b0c8:	blt	1b160 <argp_error@@Base+0xfbc>
   1b0cc:	ldr	r5, [r4, #20]
   1b0d0:	rsb	r5, r5, #1
   1b0d4:	add	r5, r5, r6
   1b0d8:	adds	r5, r9, r5
   1b0dc:	bcs	1b48c <argp_error@@Base+0x12e8>
   1b0e0:	bl	119ac <__ctype_b_loc@plt>
   1b0e4:	ldr	r0, [r0]
   1b0e8:	mov	r3, r5
   1b0ec:	mov	r1, r3
   1b0f0:	sub	r3, r3, #1
   1b0f4:	ldrb	r2, [r1]
   1b0f8:	lsl	r2, r2, #1
   1b0fc:	ldrh	r2, [r0, r2]
   1b100:	tst	r2, #1
   1b104:	bne	1b1cc <argp_error@@Base+0x1028>
   1b108:	mov	r1, r3
   1b10c:	cmp	r3, r9
   1b110:	bcs	1b0ec <argp_error@@Base+0xf48>
   1b114:	add	r6, r1, #1
   1b118:	cmp	r6, r9
   1b11c:	bhi	1b208 <argp_error@@Base+0x1064>
   1b120:	cmp	r5, r7
   1b124:	bcs	1b2b8 <argp_error@@Base+0x1114>
   1b128:	add	r6, r5, #1
   1b12c:	mov	r8, r7
   1b130:	mov	r5, r6
   1b134:	cmp	r8, r6
   1b138:	beq	1b2b8 <argp_error@@Base+0x1114>
   1b13c:	bl	119ac <__ctype_b_loc@plt>
   1b140:	add	r6, r6, #1
   1b144:	ldrb	r3, [r5]
   1b148:	ldr	r2, [r0]
   1b14c:	lsl	r3, r3, #1
   1b150:	ldrh	r3, [r2, r3]
   1b154:	tst	r3, #1
   1b158:	beq	1b130 <argp_error@@Base+0xf8c>
   1b15c:	b	1b2cc <argp_error@@Base+0x1128>
   1b160:	cmp	fp, r7
   1b164:	bls	1b1ac <argp_error@@Base+0x1008>
   1b168:	sub	r0, r6, r0
   1b16c:	ldr	r3, [sp, #8]
   1b170:	sub	r2, r3, r7
   1b174:	mov	r1, r7
   1b178:	add	r0, r9, r0
   1b17c:	bl	117c0 <memmove@plt>
   1b180:	ldr	r3, [r4, #20]
   1b184:	sub	r6, r6, r3
   1b188:	add	r6, r9, r6
   1b18c:	sub	r5, r6, r7
   1b190:	ldr	r3, [r4, #28]
   1b194:	sub	r5, r3, r5
   1b198:	str	r5, [r4, #28]
   1b19c:	mov	r3, #0
   1b1a0:	str	r3, [r4, #20]
   1b1a4:	add	r9, r9, r8
   1b1a8:	b	1aff8 <argp_error@@Base+0xe54>
   1b1ac:	ldr	r3, [r4, #20]
   1b1b0:	ldr	r2, [sp]
   1b1b4:	add	r3, r2, r3
   1b1b8:	str	r3, [r4, #20]
   1b1bc:	sub	r3, r6, r3
   1b1c0:	add	r3, fp, r3
   1b1c4:	str	r3, [r4, #28]
   1b1c8:	b	1b0a0 <argp_error@@Base+0xefc>
   1b1cc:	add	r6, r1, #1
   1b1d0:	cmp	r6, r9
   1b1d4:	bls	1b120 <argp_error@@Base+0xf7c>
   1b1d8:	cmp	r1, r9
   1b1dc:	bcc	1b208 <argp_error@@Base+0x1064>
   1b1e0:	sub	ip, r9, #1
   1b1e4:	mov	r1, r3
   1b1e8:	cmp	ip, r3
   1b1ec:	beq	1b208 <argp_error@@Base+0x1064>
   1b1f0:	sub	r3, r3, #1
   1b1f4:	ldrb	r2, [r1]
   1b1f8:	lsl	r2, r2, #1
   1b1fc:	ldrh	r2, [r0, r2]
   1b200:	tst	r2, #1
   1b204:	bne	1b1e4 <argp_error@@Base+0x1040>
   1b208:	add	r5, r1, #1
   1b20c:	ldr	r3, [sp]
   1b210:	add	r3, r3, #1
   1b214:	add	r3, r9, r3
   1b218:	cmp	r6, r3
   1b21c:	beq	1b2f0 <argp_error@@Base+0x114c>
   1b220:	add	r3, r5, #1
   1b224:	sub	r3, r6, r3
   1b228:	ldr	r2, [sp, #12]
   1b22c:	cmp	r3, r2
   1b230:	bge	1b308 <argp_error@@Base+0x1164>
   1b234:	cmp	r6, fp
   1b238:	bcs	1b308 <argp_error@@Base+0x1164>
   1b23c:	ldr	r3, [r4, #32]
   1b240:	ldr	r2, [sp, #8]
   1b244:	sub	r3, r3, r2
   1b248:	ldr	r2, [sp, #12]
   1b24c:	add	r2, r2, #1
   1b250:	cmp	r3, r2
   1b254:	bgt	1b350 <argp_error@@Base+0x11ac>
   1b258:	ldr	r0, [r4, #24]
   1b25c:	cmp	r5, r0
   1b260:	bls	1b274 <argp_error@@Base+0x10d0>
   1b264:	ldr	r3, [r4]
   1b268:	sub	r2, r5, r0
   1b26c:	mov	r1, #1
   1b270:	bl	1182c <fwrite_unlocked@plt>
   1b274:	ldr	r0, [r4]
   1b278:	ldr	r3, [r0, #20]
   1b27c:	ldr	r2, [r0, #24]
   1b280:	cmp	r3, r2
   1b284:	addcc	r2, r3, #1
   1b288:	strcc	r2, [r0, #20]
   1b28c:	movcc	r2, #10
   1b290:	strbcc	r2, [r3]
   1b294:	bcs	1b39c <argp_error@@Base+0x11f8>
   1b298:	ldr	r7, [r4, #24]
   1b29c:	ldr	r3, [sp, #4]
   1b2a0:	sub	r3, r3, r7
   1b2a4:	ldr	r2, [sp]
   1b2a8:	add	r3, r2, r3
   1b2ac:	str	r3, [sp]
   1b2b0:	mov	r9, r7
   1b2b4:	b	1b318 <argp_error@@Base+0x1174>
   1b2b8:	cmp	r5, r7
   1b2bc:	moveq	r3, #0
   1b2c0:	streq	r3, [r4, #20]
   1b2c4:	addeq	r9, r7, #1
   1b2c8:	beq	1aff8 <argp_error@@Base+0xe54>
   1b2cc:	bl	119ac <__ctype_b_loc@plt>
   1b2d0:	ldr	r2, [r0]
   1b2d4:	mov	r6, r5
   1b2d8:	ldrb	r3, [r6, #1]!
   1b2dc:	lsl	r3, r3, #1
   1b2e0:	ldrh	r3, [r2, r3]
   1b2e4:	tst	r3, #1
   1b2e8:	bne	1b2d8 <argp_error@@Base+0x1134>
   1b2ec:	b	1b20c <argp_error@@Base+0x1068>
   1b2f0:	ldr	r3, [r4, #32]
   1b2f4:	sub	r3, r3, r5
   1b2f8:	ldr	r2, [sp, #12]
   1b2fc:	add	r2, r2, #1
   1b300:	cmp	r3, r2
   1b304:	blt	1b234 <argp_error@@Base+0x1090>
   1b308:	mov	r3, #10
   1b30c:	strb	r3, [r5]
   1b310:	mov	r7, r9
   1b314:	add	r9, r5, #1
   1b318:	mov	r8, r6
   1b31c:	ldr	r3, [r4, #12]
   1b320:	sub	r2, r6, r9
   1b324:	cmp	r2, r3
   1b328:	bge	1b3b8 <argp_error@@Base+0x1214>
   1b32c:	ldr	r2, [sp]
   1b330:	add	r2, r2, #1
   1b334:	add	r2, r7, r2
   1b338:	cmp	r6, r2
   1b33c:	beq	1b3a8 <argp_error@@Base+0x1204>
   1b340:	cmp	r3, #0
   1b344:	movgt	r5, #0
   1b348:	bgt	1b41c <argp_error@@Base+0x1278>
   1b34c:	b	1b3dc <argp_error@@Base+0x1238>
   1b350:	ldr	r3, [sp, #8]
   1b354:	sub	r7, r3, r6
   1b358:	mov	r0, r2
   1b35c:	mov	r2, r7
   1b360:	mov	r1, r6
   1b364:	add	r0, r5, r0
   1b368:	bl	117c0 <memmove@plt>
   1b36c:	ldr	r6, [r4, #12]
   1b370:	add	r6, r6, #1
   1b374:	add	r6, r5, r6
   1b378:	add	r7, r6, r7
   1b37c:	ldr	r3, [sp, #4]
   1b380:	sub	r3, r7, r3
   1b384:	str	r3, [sp]
   1b388:	mov	r3, #10
   1b38c:	strb	r3, [r5]
   1b390:	mov	r7, r9
   1b394:	add	r9, r5, #1
   1b398:	b	1b318 <argp_error@@Base+0x1174>
   1b39c:	mov	r1, #10
   1b3a0:	bl	11ab4 <__overflow@plt>
   1b3a4:	b	1b298 <argp_error@@Base+0x10f4>
   1b3a8:	ldr	r2, [r4, #32]
   1b3ac:	sub	r2, r2, r6
   1b3b0:	cmp	r3, r2
   1b3b4:	bgt	1b340 <argp_error@@Base+0x119c>
   1b3b8:	cmp	r3, #0
   1b3bc:	ble	1b3dc <argp_error@@Base+0x1238>
   1b3c0:	mov	r3, r9
   1b3c4:	strb	sl, [r3], #1
   1b3c8:	sub	r1, r3, r9
   1b3cc:	ldr	r2, [r4, #12]
   1b3d0:	cmp	r1, r2
   1b3d4:	blt	1b3c4 <argp_error@@Base+0x1220>
   1b3d8:	mov	r9, r3
   1b3dc:	cmp	r9, r6
   1b3e0:	bcc	1b448 <argp_error@@Base+0x12a4>
   1b3e4:	sub	r7, r8, r7
   1b3e8:	ldr	r3, [sp]
   1b3ec:	sub	r7, r3, r7
   1b3f0:	add	r7, r9, r7
   1b3f4:	str	r7, [r4, #28]
   1b3f8:	ldr	r3, [r4, #12]
   1b3fc:	cmp	r3, #0
   1b400:	mvneq	r3, #0
   1b404:	str	r3, [r4, #20]
   1b408:	b	1aff8 <argp_error@@Base+0xe54>
   1b40c:	add	r5, r5, #1
   1b410:	ldr	r3, [r4, #12]
   1b414:	cmp	r3, r5
   1b418:	ble	1b3dc <argp_error@@Base+0x1238>
   1b41c:	ldr	r0, [r4]
   1b420:	ldr	r3, [r0, #20]
   1b424:	ldr	r2, [r0, #24]
   1b428:	cmp	r3, r2
   1b42c:	addcc	r2, r3, #1
   1b430:	strcc	r2, [r0, #20]
   1b434:	strbcc	sl, [r3]
   1b438:	bcc	1b40c <argp_error@@Base+0x1268>
   1b43c:	mov	r1, sl
   1b440:	bl	11ab4 <__overflow@plt>
   1b444:	b	1b40c <argp_error@@Base+0x1268>
   1b448:	ldr	r3, [sp]
   1b44c:	add	r2, r7, r3
   1b450:	sub	r2, r2, r8
   1b454:	mov	r1, r6
   1b458:	mov	r0, r9
   1b45c:	bl	117c0 <memmove@plt>
   1b460:	b	1b3e4 <argp_error@@Base+0x1240>
   1b464:	str	fp, [sp, #8]
   1b468:	str	r9, [sp, #4]
   1b46c:	sub	r3, fp, r9
   1b470:	str	r3, [sp]
   1b474:	mov	r2, r3
   1b478:	mov	r1, #10
   1b47c:	mov	r0, r9
   1b480:	bl	11a90 <memchr@plt>
   1b484:	mov	r7, r0
   1b488:	b	1afc4 <argp_error@@Base+0xe20>
   1b48c:	mov	r1, r5
   1b490:	b	1b114 <argp_error@@Base+0xf70>
   1b494:	push	{r4, lr}
   1b498:	mov	r4, r0
   1b49c:	bl	1af30 <argp_error@@Base+0xd8c>
   1b4a0:	ldr	r2, [r4, #28]
   1b4a4:	ldr	r0, [r4, #24]
   1b4a8:	cmp	r2, r0
   1b4ac:	bls	1b4c0 <argp_error@@Base+0x131c>
   1b4b0:	ldr	r3, [r4]
   1b4b4:	sub	r2, r2, r0
   1b4b8:	mov	r1, #1
   1b4bc:	bl	1182c <fwrite_unlocked@plt>
   1b4c0:	ldr	r0, [r4, #24]
   1b4c4:	bl	16a6c <argp_parse@@Base+0xbf4>
   1b4c8:	mov	r0, r4
   1b4cc:	bl	16a6c <argp_parse@@Base+0xbf4>
   1b4d0:	pop	{r4, pc}
   1b4d4:	ldr	r3, [r0, #32]
   1b4d8:	ldr	r2, [r0, #28]
   1b4dc:	sub	r3, r3, r2
   1b4e0:	cmp	r3, r1
   1b4e4:	bcc	1b4f0 <argp_error@@Base+0x134c>
   1b4e8:	mov	r0, #1
   1b4ec:	bx	lr
   1b4f0:	push	{r4, r5, r6, lr}
   1b4f4:	mov	r5, r1
   1b4f8:	mov	r4, r0
   1b4fc:	bl	1af30 <argp_error@@Base+0xd8c>
   1b500:	ldr	r0, [r4, #24]
   1b504:	ldr	r2, [r4, #28]
   1b508:	ldr	r3, [r4]
   1b50c:	sub	r2, r2, r0
   1b510:	mov	r1, #1
   1b514:	bl	1182c <fwrite_unlocked@plt>
   1b518:	ldr	r2, [r4, #28]
   1b51c:	ldr	r3, [r4, #24]
   1b520:	sub	r1, r2, r3
   1b524:	cmp	r0, r1
   1b528:	bne	1b56c <argp_error@@Base+0x13c8>
   1b52c:	str	r3, [r4, #28]
   1b530:	mov	r2, #0
   1b534:	str	r2, [r4, #16]
   1b538:	ldr	r1, [r4, #32]
   1b53c:	sub	r1, r1, r3
   1b540:	cmp	r5, r1
   1b544:	bls	1b564 <argp_error@@Base+0x13c0>
   1b548:	adds	r5, r5, r1
   1b54c:	bcc	1b598 <argp_error@@Base+0x13f4>
   1b550:	bl	11a24 <__errno_location@plt>
   1b554:	mov	r3, #12
   1b558:	str	r3, [r0]
   1b55c:	mov	r0, #0
   1b560:	pop	{r4, r5, r6, pc}
   1b564:	mov	r0, #1
   1b568:	pop	{r4, r5, r6, pc}
   1b56c:	sub	r2, r2, r0
   1b570:	str	r2, [r4, #28]
   1b574:	ldr	r1, [r4, #16]
   1b578:	sub	r1, r1, r0
   1b57c:	str	r1, [r4, #16]
   1b580:	sub	r2, r2, r3
   1b584:	add	r1, r3, r0
   1b588:	mov	r0, r3
   1b58c:	bl	117c0 <memmove@plt>
   1b590:	mov	r0, #0
   1b594:	pop	{r4, r5, r6, pc}
   1b598:	mov	r1, r5
   1b59c:	mov	r0, r3
   1b5a0:	bl	170d4 <argp_parse@@Base+0x125c>
   1b5a4:	cmp	r0, #0
   1b5a8:	beq	1b550 <argp_error@@Base+0x13ac>
   1b5ac:	str	r0, [r4, #24]
   1b5b0:	add	r5, r0, r5
   1b5b4:	str	r5, [r4, #32]
   1b5b8:	str	r0, [r4, #28]
   1b5bc:	mov	r0, #1
   1b5c0:	pop	{r4, r5, r6, pc}
   1b5c4:	push	{r1, r2, r3}
   1b5c8:	push	{r4, r5, r6, r7, lr}
   1b5cc:	sub	sp, sp, #8
   1b5d0:	mov	r5, r0
   1b5d4:	ldr	r7, [sp, #28]
   1b5d8:	mov	r1, #150	; 0x96
   1b5dc:	add	r6, sp, #32
   1b5e0:	mov	r0, r5
   1b5e4:	bl	1b4d4 <argp_error@@Base+0x1330>
   1b5e8:	cmp	r0, #0
   1b5ec:	beq	1b620 <argp_error@@Base+0x147c>
   1b5f0:	str	r6, [sp, #4]
   1b5f4:	ldr	r0, [r5, #28]
   1b5f8:	ldr	r4, [r5, #32]
   1b5fc:	sub	r4, r4, r0
   1b600:	mov	r3, r6
   1b604:	mov	r2, r7
   1b608:	mov	r1, r4
   1b60c:	bl	11b68 <vsnprintf@plt>
   1b610:	cmp	r4, r0
   1b614:	bhi	1b628 <argp_error@@Base+0x1484>
   1b618:	add	r1, r0, #1
   1b61c:	b	1b5e0 <argp_error@@Base+0x143c>
   1b620:	mvn	r0, #0
   1b624:	b	1b634 <argp_error@@Base+0x1490>
   1b628:	ldr	r3, [r5, #28]
   1b62c:	add	r3, r3, r0
   1b630:	str	r3, [r5, #28]
   1b634:	add	sp, sp, #8
   1b638:	pop	{r4, r5, r6, r7, lr}
   1b63c:	add	sp, sp, #12
   1b640:	bx	lr
   1b644:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b648:	mov	r7, r0
   1b64c:	ldr	r6, [pc, #72]	; 1b69c <argp_error@@Base+0x14f8>
   1b650:	ldr	r5, [pc, #72]	; 1b6a0 <argp_error@@Base+0x14fc>
   1b654:	add	r6, pc, r6
   1b658:	add	r5, pc, r5
   1b65c:	sub	r6, r6, r5
   1b660:	mov	r8, r1
   1b664:	mov	r9, r2
   1b668:	bl	11704 <calloc@plt-0x20>
   1b66c:	asrs	r6, r6, #2
   1b670:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b674:	mov	r4, #0
   1b678:	add	r4, r4, #1
   1b67c:	ldr	r3, [r5], #4
   1b680:	mov	r2, r9
   1b684:	mov	r1, r8
   1b688:	mov	r0, r7
   1b68c:	blx	r3
   1b690:	cmp	r6, r4
   1b694:	bne	1b678 <argp_error@@Base+0x14d4>
   1b698:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b69c:	andeq	r1, r1, ip, lsr #17
   1b6a0:	andeq	r1, r1, r4, lsr #17
   1b6a4:	bx	lr

Disassembly of section .fini:

0001b6a8 <.fini>:
   1b6a8:	push	{r3, lr}
   1b6ac:	pop	{r3, pc}
