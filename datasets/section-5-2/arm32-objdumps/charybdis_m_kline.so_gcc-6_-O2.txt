
../repos/charybdis/modules/.libs/m_kline.so:     file format elf32-littlearm


Disassembly of section .init:

00000be8 <_init>:
 be8:	push	{r3, lr}
 bec:	bl	e18 <call_weak_fn>
 bf0:	pop	{r3, pc}

Disassembly of section .plt:

00000bf4 <.plt>:
 bf4:	push	{lr}		; (str lr, [sp, #-4]!)
 bf8:	ldr	lr, [pc, #4]	; c04 <.plt+0x10>
 bfc:	add	lr, pc, lr
 c00:	ldr	pc, [lr, #8]!
 c04:	.word	0x000133fc

00000c08 <propagate_generic@plt>:
 c08:	add	ip, pc, #0, 12
 c0c:	add	ip, ip, #77824	; 0x13000
 c10:	ldr	pc, [ip, #1020]!	; 0x3fc

00000c14 <make_conf@plt>:
 c14:	add	ip, pc, #0, 12
 c18:	add	ip, ip, #77824	; 0x13000
 c1c:	ldr	pc, [ip, #1012]!	; 0x3f4

00000c20 <parse_netmask_strict@plt>:
 c20:	add	ip, pc, #0, 12
 c24:	add	ip, ip, #77824	; 0x13000
 c28:	ldr	pc, [ip, #1004]!	; 0x3ec

00000c2c <raise@plt>:
 c2c:	add	ip, pc, #0, 12
 c30:	add	ip, ip, #77824	; 0x13000
 c34:	ldr	pc, [ip, #996]!	; 0x3e4

00000c38 <rb_current_time@plt>:
 c38:	add	ip, pc, #0, 12
 c3c:	add	ip, ip, #77824	; 0x13000
 c40:	ldr	pc, [ip, #988]!	; 0x3dc

00000c44 <__cxa_finalize@plt>:
 c44:	add	ip, pc, #0, 12
 c48:	add	ip, ip, #77824	; 0x13000
 c4c:	ldr	pc, [ip, #980]!	; 0x3d4

00000c50 <strtol@plt>:
 c50:	add	ip, pc, #0, 12
 c54:	add	ip, ip, #77824	; 0x13000
 c58:	ldr	pc, [ip, #972]!	; 0x3cc

00000c5c <sendto_one@plt>:
 c5c:	add	ip, pc, #0, 12
 c60:	add	ip, ip, #77824	; 0x13000
 c64:	ldr	pc, [ip, #964]!	; 0x3c4

00000c68 <find_conf_by_address@plt>:
 c68:	add	ip, pc, #0, 12
 c6c:	add	ip, ip, #77824	; 0x13000
 c70:	ldr	pc, [ip, #956]!	; 0x3bc

00000c74 <add_temp_kline@plt>:
 c74:	add	ip, pc, #0, 12
 c78:	add	ip, ip, #77824	; 0x13000
 c7c:	ldr	pc, [ip, #948]!	; 0x3b4

00000c80 <replace_old_ban@plt>:
 c80:	add	ip, pc, #0, 12
 c84:	add	ip, ip, #77824	; 0x13000
 c88:	ldr	pc, [ip, #940]!	; 0x3ac

00000c8c <memcpy@plt>:
 c8c:	add	ip, pc, #0, 12
 c90:	add	ip, ip, #77824	; 0x13000
 c94:	ldr	pc, [ip, #932]!	; 0x3a4

00000c98 <rb_outofmemory@plt>:
 c98:	add	ip, pc, #0, 12
 c9c:	add	ip, ip, #77824	; 0x13000
 ca0:	ldr	pc, [ip, #924]!	; 0x39c

00000ca4 <operhash_delete@plt>:
 ca4:	add	ip, pc, #0, 12
 ca8:	add	ip, ip, #77824	; 0x13000
 cac:	ldr	pc, [ip, #916]!	; 0x394

00000cb0 <sendto_realops_snomask@plt>:
 cb0:	add	ip, pc, #0, 12
 cb4:	add	ip, ip, #77824	; 0x13000
 cb8:	ldr	pc, [ip, #908]!	; 0x38c

00000cbc <bandb_add@plt>:
 cbc:	add	ip, pc, #0, 12
 cc0:	add	ip, ip, #77824	; 0x13000
 cc4:	ldr	pc, [ip, #900]!	; 0x384

00000cc8 <deactivate_conf@plt>:
 cc8:	add	ip, pc, #0, 12
 ccc:	add	ip, ip, #77824	; 0x13000
 cd0:	ldr	pc, [ip, #892]!	; 0x37c

00000cd4 <get_oper_name@plt>:
 cd4:	add	ip, pc, #0, 12
 cd8:	add	ip, ip, #77824	; 0x13000
 cdc:	ldr	pc, [ip, #884]!	; 0x374

00000ce0 <rb_free_rb_dlink_node@plt>:
 ce0:	add	ip, pc, #0, 12
 ce4:	add	ip, ip, #77824	; 0x13000
 ce8:	ldr	pc, [ip, #876]!	; 0x36c

00000cec <cluster_generic@plt>:
 cec:	add	ip, pc, #0, 12
 cf0:	add	ip, ip, #77824	; 0x13000
 cf4:	ldr	pc, [ip, #868]!	; 0x364

00000cf8 <operhash_add@plt>:
 cf8:	add	ip, pc, #0, 12
 cfc:	add	ip, ip, #77824	; 0x13000
 d00:	ldr	pc, [ip, #860]!	; 0x35c

00000d04 <check_one_kline@plt>:
 d04:	add	ip, pc, #0, 12
 d08:	add	ip, ip, #77824	; 0x13000
 d0c:	ldr	pc, [ip, #852]!	; 0x354

00000d10 <sendto_server@plt>:
 d10:	add	ip, pc, #0, 12
 d14:	add	ip, ip, #77824	; 0x13000
 d18:	ldr	pc, [ip, #844]!	; 0x34c

00000d1c <rb_set_time@plt>:
 d1c:	add	ip, pc, #0, 12
 d20:	add	ip, ip, #77824	; 0x13000
 d24:	ldr	pc, [ip, #836]!	; 0x344

00000d28 <valid_wild_card@plt>:
 d28:	add	ip, pc, #0, 12
 d2c:	add	ip, ip, #77824	; 0x13000
 d30:	ldr	pc, [ip, #828]!	; 0x33c

00000d34 <malloc@plt>:
 d34:	add	ip, pc, #0, 12
 d38:	add	ip, ip, #77824	; 0x13000
 d3c:	ldr	pc, [ip, #820]!	; 0x334

00000d40 <add_conf_by_address@plt>:
 d40:	add	ip, pc, #0, 12
 d44:	add	ip, ip, #77824	; 0x13000
 d48:	ldr	pc, [ip, #812]!	; 0x32c

00000d4c <__gmon_start__@plt>:
 d4c:	add	ip, pc, #0, 12
 d50:	add	ip, ip, #77824	; 0x13000
 d54:	ldr	pc, [ip, #804]!	; 0x324

00000d58 <rb_make_rb_dlink_node@plt>:
 d58:	add	ip, pc, #0, 12
 d5c:	add	ip, ip, #77824	; 0x13000
 d60:	ldr	pc, [ip, #796]!	; 0x31c

00000d64 <strlen@plt>:
 d64:	add	ip, pc, #0, 12
 d68:	add	ip, ip, #77824	; 0x13000
 d6c:	ldr	pc, [ip, #788]!	; 0x314

00000d70 <strchr@plt>:
 d70:	add	ip, pc, #0, 12
 d74:	add	ip, ip, #77824	; 0x13000
 d78:	ldr	pc, [ip, #780]!	; 0x30c

00000d7c <delete_one_address_conf@plt>:
 d7c:	add	ip, pc, #0, 12
 d80:	add	ip, ip, #77824	; 0x13000
 d84:	ldr	pc, [ip, #772]!	; 0x304

00000d88 <ilog@plt>:
 d88:	add	ip, pc, #0, 12
 d8c:	add	ip, ip, #77824	; 0x13000
 d90:	ldr	pc, [ip, #764]!	; 0x2fc

00000d94 <match@plt>:
 d94:	add	ip, pc, #0, 12
 d98:	add	ip, ip, #77824	; 0x13000
 d9c:	ldr	pc, [ip, #756]!	; 0x2f4

00000da0 <valid_temp_time@plt>:
 da0:	add	ip, pc, #0, 12
 da4:	add	ip, ip, #77824	; 0x13000
 da8:	ldr	pc, [ip, #748]!	; 0x2ec

00000dac <remove_reject_mask@plt>:
 dac:	add	ip, pc, #0, 12
 db0:	add	ip, ip, #77824	; 0x13000
 db4:	ldr	pc, [ip, #740]!	; 0x2e4

00000db8 <sendto_one_notice@plt>:
 db8:	add	ip, pc, #0, 12
 dbc:	add	ip, ip, #77824	; 0x13000
 dc0:	ldr	pc, [ip, #732]!	; 0x2dc

00000dc4 <bandb_del@plt>:
 dc4:	add	ip, pc, #0, 12
 dc8:	add	ip, ip, #77824	; 0x13000
 dcc:	ldr	pc, [ip, #724]!	; 0x2d4

00000dd0 <find_exact_conf_by_address@plt>:
 dd0:	add	ip, pc, #0, 12
 dd4:	add	ip, ip, #77824	; 0x13000
 dd8:	ldr	pc, [ip, #716]!	; 0x2cc

00000ddc <rb_strlcpy@plt>:
 ddc:	add	ip, pc, #0, 12
 de0:	add	ip, ip, #77824	; 0x13000
 de4:	ldr	pc, [ip, #708]!	; 0x2c4

00000de8 <find_shared_conf@plt>:
 de8:	add	ip, pc, #0, 12
 dec:	add	ip, ip, #77824	; 0x13000
 df0:	ldr	pc, [ip, #700]!	; 0x2bc

00000df4 <privilegeset_in_set@plt>:
 df4:	add	ip, pc, #0, 12
 df8:	add	ip, ip, #77824	; 0x13000
 dfc:	ldr	pc, [ip, #692]!	; 0x2b4

00000e00 <irccmp@plt>:
 e00:	add	ip, pc, #0, 12
 e04:	add	ip, ip, #77824	; 0x13000
 e08:	ldr	pc, [ip, #684]!	; 0x2ac

00000e0c <__assert_fail@plt>:
 e0c:	add	ip, pc, #0, 12
 e10:	add	ip, ip, #77824	; 0x13000
 e14:	ldr	pc, [ip, #676]!	; 0x2a4

Disassembly of section .text:

00000e18 <call_weak_fn>:
     e18:	ldr	r3, [pc, #20]	; e34 <call_weak_fn+0x1c>
     e1c:	ldr	r2, [pc, #20]	; e38 <call_weak_fn+0x20>
     e20:	add	r3, pc, r3
     e24:	ldr	r2, [r3, r2]
     e28:	cmp	r2, #0
     e2c:	bxeq	lr
     e30:	b	d4c <__gmon_start__@plt>
     e34:	.word	0x000131d8
     e38:	.word	0x000000d4

00000e3c <deregister_tm_clones>:
     e3c:	ldr	r3, [pc, #52]	; e78 <deregister_tm_clones+0x3c>
     e40:	ldr	r0, [pc, #52]	; e7c <deregister_tm_clones+0x40>
     e44:	add	r3, pc, r3
     e48:	add	r0, pc, r0
     e4c:	add	r3, r3, #3
     e50:	sub	r3, r3, r0
     e54:	cmp	r3, #6
     e58:	ldr	r3, [pc, #32]	; e80 <deregister_tm_clones+0x44>
     e5c:	add	r3, pc, r3
     e60:	bxls	lr
     e64:	ldr	r2, [pc, #24]	; e84 <deregister_tm_clones+0x48>
     e68:	ldr	r3, [r3, r2]
     e6c:	cmp	r3, #0
     e70:	bxeq	lr
     e74:	bx	r3
     e78:	.word	0x00013368
     e7c:	.word	0x00013364
     e80:	.word	0x0001319c
     e84:	.word	0x000000c4

00000e88 <register_tm_clones>:
     e88:	ldr	r1, [pc, #56]	; ec8 <register_tm_clones+0x40>
     e8c:	ldr	r0, [pc, #56]	; ecc <register_tm_clones+0x44>
     e90:	add	r1, pc, r1
     e94:	add	r0, pc, r0
     e98:	sub	r1, r1, r0
     e9c:	ldr	r3, [pc, #44]	; ed0 <register_tm_clones+0x48>
     ea0:	asr	r1, r1, #2
     ea4:	add	r3, pc, r3
     ea8:	add	r1, r1, r1, lsr #31
     eac:	asrs	r1, r1, #1
     eb0:	bxeq	lr
     eb4:	ldr	r2, [pc, #24]	; ed4 <register_tm_clones+0x4c>
     eb8:	ldr	r3, [r3, r2]
     ebc:	cmp	r3, #0
     ec0:	bxeq	lr
     ec4:	bx	r3
     ec8:	.word	0x0001331c
     ecc:	.word	0x00013318
     ed0:	.word	0x00013154
     ed4:	.word	0x000000e8

00000ed8 <__do_global_dtors_aux>:
     ed8:	ldr	r3, [pc, #76]	; f2c <__do_global_dtors_aux+0x54>
     edc:	ldr	r2, [pc, #76]	; f30 <__do_global_dtors_aux+0x58>
     ee0:	add	r3, pc, r3
     ee4:	add	r2, pc, r2
     ee8:	ldrb	r3, [r3]
     eec:	cmp	r3, #0
     ef0:	bxne	lr
     ef4:	ldr	r3, [pc, #56]	; f34 <__do_global_dtors_aux+0x5c>
     ef8:	push	{r4, lr}
     efc:	ldr	r3, [r2, r3]
     f00:	cmp	r3, #0
     f04:	beq	f14 <__do_global_dtors_aux+0x3c>
     f08:	ldr	r3, [pc, #40]	; f38 <__do_global_dtors_aux+0x60>
     f0c:	ldr	r0, [pc, r3]
     f10:	bl	c44 <__cxa_finalize@plt>
     f14:	bl	e3c <deregister_tm_clones>
     f18:	ldr	r3, [pc, #28]	; f3c <__do_global_dtors_aux+0x64>
     f1c:	mov	r2, #1
     f20:	add	r3, pc, r3
     f24:	strb	r2, [r3]
     f28:	pop	{r4, pc}
     f2c:	.word	0x000132cc
     f30:	.word	0x00013114
     f34:	.word	0x000000bc
     f38:	.word	0x000131e0
     f3c:	.word	0x0001328c

00000f40 <frame_dummy>:
     f40:	ldr	r0, [pc, #56]	; f80 <frame_dummy+0x40>
     f44:	ldr	r3, [pc, #56]	; f84 <frame_dummy+0x44>
     f48:	add	r0, pc, r0
     f4c:	ldr	r2, [r0]
     f50:	add	r3, pc, r3
     f54:	cmp	r2, #0
     f58:	bne	f60 <frame_dummy+0x20>
     f5c:	b	e88 <register_tm_clones>
     f60:	ldr	r2, [pc, #32]	; f88 <frame_dummy+0x48>
     f64:	ldr	r3, [r3, r2]
     f68:	cmp	r3, #0
     f6c:	beq	f5c <frame_dummy+0x1c>
     f70:	push	{r4, lr}
     f74:	blx	r3
     f78:	pop	{r4, lr}
     f7c:	b	e88 <register_tm_clones>
     f80:	.word	0x00012fac
     f84:	.word	0x000130a8
     f88:	.word	0x000000e0

00000f8c <valid_user_host>:
     f8c:	push	{r4, r5, r6, lr}
     f90:	mov	r5, r0
     f94:	mov	r6, r1
     f98:	mov	r0, r2
     f9c:	mov	r1, #35	; 0x23
     fa0:	mov	r4, r2
     fa4:	bl	d70 <strchr@plt>
     fa8:	cmp	r0, #0
     fac:	beq	fc8 <valid_user_host+0x3c>
     fb0:	ldr	r1, [pc, #84]	; 100c <valid_user_host+0x80>
     fb4:	mov	r0, r5
     fb8:	add	r1, pc, r1
     fbc:	bl	db8 <sendto_one_notice@plt>
     fc0:	mov	r0, #0
     fc4:	pop	{r4, r5, r6, pc}
     fc8:	mov	r1, #35	; 0x23
     fcc:	mov	r0, r6
     fd0:	bl	d70 <strchr@plt>
     fd4:	cmp	r0, #0
     fd8:	bne	fb0 <valid_user_host+0x24>
     fdc:	mov	r0, r6
     fe0:	mov	r1, #33	; 0x21
     fe4:	bl	d70 <strchr@plt>
     fe8:	cmp	r0, #0
     fec:	bne	fb0 <valid_user_host+0x24>
     ff0:	mov	r0, r4
     ff4:	mov	r1, #64	; 0x40
     ff8:	bl	d70 <strchr@plt>
     ffc:	cmp	r0, #0
    1000:	bne	fb0 <valid_user_host+0x24>
    1004:	mov	r0, #1
    1008:	pop	{r4, r5, r6, pc}
    100c:	.word	0x00001d5c

00001010 <already_placed_kline>:
    1010:	push	{r4, r5, r6, r7, r8, r9, lr}
    1014:	mov	r5, r2
    1018:	sub	sp, sp, #156	; 0x9c
    101c:	mov	r2, r1
    1020:	mov	r6, r1
    1024:	mov	r8, r0
    1028:	mov	r1, #64	; 0x40
    102c:	mov	r0, r5
    1030:	mov	r7, r3
    1034:	bl	dd0 <find_exact_conf_by_address@plt>
    1038:	ldr	r3, [pc, #296]	; 1168 <already_placed_kline+0x158>
    103c:	add	r3, pc, r3
    1040:	subs	r4, r0, #0
    1044:	beq	10ac <already_placed_kline+0x9c>
    1048:	cmp	r7, #0
    104c:	beq	1094 <already_placed_kline+0x84>
    1050:	ldr	r3, [r4, #20]
    1054:	cmp	r3, #0
    1058:	beq	115c <already_placed_kline+0x14c>
    105c:	str	r3, [sp, #8]
    1060:	ldr	r2, [r4, #16]
    1064:	mov	r0, r8
    1068:	str	r2, [sp, #4]
    106c:	ldr	r1, [r4, #28]
    1070:	mov	r3, r5
    1074:	str	r1, [sp]
    1078:	ldr	r1, [pc, #236]	; 116c <already_placed_kline+0x15c>
    107c:	mov	r2, r6
    1080:	add	r1, pc, r1
    1084:	bl	db8 <sendto_one_notice@plt>
    1088:	mov	r0, #1
    108c:	add	sp, sp, #156	; 0x9c
    1090:	pop	{r4, r5, r6, r7, r8, r9, pc}
    1094:	ldr	r3, [r4, #4]
    1098:	tst	r3, #8388608	; 0x800000
    109c:	beq	1050 <already_placed_kline+0x40>
    10a0:	mov	r0, #0
    10a4:	add	sp, sp, #156	; 0x9c
    10a8:	pop	{r4, r5, r6, r7, r8, r9, pc}
    10ac:	ldr	r2, [pc, #188]	; 1170 <already_placed_kline+0x160>
    10b0:	ldr	r3, [r3, r2]
    10b4:	ldr	r3, [r3, #140]	; 0x8c
    10b8:	cmp	r3, #0
    10bc:	beq	10a0 <already_placed_kline+0x90>
    10c0:	add	r2, sp, #152	; 0x98
    10c4:	add	r9, sp, #24
    10c8:	str	r4, [r2, #-132]!	; 0xffffff7c
    10cc:	mov	r1, r9
    10d0:	mov	r0, r5
    10d4:	bl	c20 <parse_netmask_strict@plt>
    10d8:	cmp	r0, #2
    10dc:	moveq	r3, r9
    10e0:	beq	10f4 <already_placed_kline+0xe4>
    10e4:	cmp	r0, #3
    10e8:	movne	r3, r4
    10ec:	moveq	r3, r9
    10f0:	moveq	r0, #10
    10f4:	mov	r9, #0
    10f8:	mov	ip, #64	; 0x40
    10fc:	stmib	sp, {r0, r6, r9}
    1100:	mov	r2, r9
    1104:	mov	r1, r9
    1108:	str	ip, [sp]
    110c:	mov	r0, r5
    1110:	bl	c68 <find_conf_by_address@plt>
    1114:	subs	r4, r0, #0
    1118:	beq	10a0 <already_placed_kline+0x90>
    111c:	mov	r1, #47	; 0x2f
    1120:	ldr	r0, [r4, #16]
    1124:	bl	d70 <strchr@plt>
    1128:	ldr	r3, [sp, #20]
    112c:	cmp	r3, r9
    1130:	ble	1048 <already_placed_kline+0x38>
    1134:	cmp	r0, r9
    1138:	beq	10a0 <already_placed_kline+0x90>
    113c:	mov	r1, r9
    1140:	add	r0, r0, #1
    1144:	mov	r2, #10
    1148:	bl	c50 <strtol@plt>
    114c:	ldr	r3, [sp, #20]
    1150:	cmp	r3, r0
    1154:	blt	10a0 <already_placed_kline+0x90>
    1158:	b	1048 <already_placed_kline+0x38>
    115c:	ldr	r3, [pc, #16]	; 1174 <already_placed_kline+0x164>
    1160:	add	r3, pc, r3
    1164:	b	105c <already_placed_kline+0x4c>
    1168:	.word	0x00012fbc
    116c:	.word	0x00001cb0
    1170:	.word	0x000000f0
    1174:	.word	0x00001bc4

00001178 <rb_strdup>:
    1178:	push	{r4, r5, r6, lr}
    117c:	mov	r6, r0
    1180:	bl	d64 <strlen@plt>
    1184:	add	r4, r0, #1
    1188:	mov	r0, r4
    118c:	bl	d34 <malloc@plt>
    1190:	subs	r5, r0, #0
    1194:	beq	11ac <rb_strdup+0x34>
    1198:	mov	r2, r4
    119c:	mov	r1, r6
    11a0:	bl	c8c <memcpy@plt>
    11a4:	mov	r0, r5
    11a8:	pop	{r4, r5, r6, pc}
    11ac:	bl	c98 <rb_outofmemory@plt>

000011b0 <apply_tkline>:
    11b0:	push	{r4, r5, r6, r7, r8, r9, lr}
    11b4:	sub	sp, sp, #28
    11b8:	mov	r4, r1
    11bc:	mov	r9, r3
    11c0:	mov	r7, r0
    11c4:	mov	r8, r2
    11c8:	ldr	r6, [sp, #56]	; 0x38
    11cc:	bl	c38 <rb_current_time@plt>
    11d0:	add	r0, r0, r6
    11d4:	str	r0, [r4, #36]	; 0x24
    11d8:	mov	r0, r4
    11dc:	bl	c74 <add_temp_kline@plt>
    11e0:	cmp	r9, #0
    11e4:	mov	r0, r7
    11e8:	beq	11f8 <apply_tkline+0x48>
    11ec:	ldrb	r3, [r9]
    11f0:	cmp	r3, #0
    11f4:	bne	129c <apply_tkline+0xec>
    11f8:	bl	cd4 <get_oper_name@plt>
    11fc:	ldr	r5, [pc, #288]	; 1324 <apply_tkline+0x174>
    1200:	ldr	r2, [r4, #16]
    1204:	asr	r1, r6, #31
    1208:	smull	r3, r5, r5, r6
    120c:	str	r8, [sp, #12]
    1210:	add	r6, r5, r6
    1214:	ldr	r3, [r4, #28]
    1218:	str	r2, [sp, #8]
    121c:	ldr	r2, [pc, #260]	; 1328 <apply_tkline+0x178>
    1220:	rsb	r6, r1, r6, asr #5
    1224:	add	r2, pc, r2
    1228:	mov	r1, #0
    122c:	str	r3, [sp, #4]
    1230:	str	r6, [sp]
    1234:	mov	r3, r0
    1238:	mov	r0, #256	; 0x100
    123c:	bl	cb0 <sendto_realops_snomask@plt>
    1240:	mov	r0, r7
    1244:	bl	cd4 <get_oper_name@plt>
    1248:	ldr	r1, [r4, #16]
    124c:	ldr	r2, [r4, #28]
    1250:	str	r1, [sp, #4]
    1254:	ldr	r1, [pc, #208]	; 132c <apply_tkline+0x17c>
    1258:	str	r2, [sp]
    125c:	str	r8, [sp, #8]
    1260:	mov	r3, r6
    1264:	add	r1, pc, r1
    1268:	mov	r2, r0
    126c:	mov	r0, #7
    1270:	bl	d88 <ilog@plt>
    1274:	ldr	r1, [r4, #16]
    1278:	ldr	r3, [r4, #28]
    127c:	str	r1, [sp, #56]	; 0x38
    1280:	ldr	r1, [pc, #168]	; 1330 <apply_tkline+0x180>
    1284:	mov	r2, r6
    1288:	mov	r0, r7
    128c:	add	r1, pc, r1
    1290:	add	sp, sp, #28
    1294:	pop	{r4, r5, r6, r7, r8, r9, lr}
    1298:	b	db8 <sendto_one_notice@plt>
    129c:	bl	cd4 <get_oper_name@plt>
    12a0:	ldr	r5, [pc, #124]	; 1324 <apply_tkline+0x174>
    12a4:	ldr	r2, [r4, #16]
    12a8:	asr	r1, r6, #31
    12ac:	smull	r3, r5, r5, r6
    12b0:	str	r9, [sp, #16]
    12b4:	add	r6, r5, r6
    12b8:	ldr	r3, [r4, #28]
    12bc:	str	r2, [sp, #8]
    12c0:	ldr	r2, [pc, #108]	; 1334 <apply_tkline+0x184>
    12c4:	rsb	r6, r1, r6, asr #5
    12c8:	str	r3, [sp, #4]
    12cc:	add	r2, pc, r2
    12d0:	mov	r1, #0
    12d4:	str	r8, [sp, #12]
    12d8:	str	r6, [sp]
    12dc:	mov	r3, r0
    12e0:	mov	r0, #256	; 0x100
    12e4:	bl	cb0 <sendto_realops_snomask@plt>
    12e8:	mov	r0, r7
    12ec:	bl	cd4 <get_oper_name@plt>
    12f0:	ldr	r1, [r4, #16]
    12f4:	ldr	r2, [r4, #28]
    12f8:	str	r1, [sp, #4]
    12fc:	ldr	r1, [pc, #52]	; 1338 <apply_tkline+0x188>
    1300:	str	r2, [sp]
    1304:	str	r9, [sp, #12]
    1308:	str	r8, [sp, #8]
    130c:	mov	r3, r6
    1310:	add	r1, pc, r1
    1314:	mov	r2, r0
    1318:	mov	r0, #7
    131c:	bl	d88 <ilog@plt>
    1320:	b	1274 <apply_tkline+0xc4>
    1324:	.word	0x88888889
    1328:	.word	0x00001b38
    132c:	.word	0x00001b2c
    1330:	.word	0x00001b64
    1334:	.word	0x00001ad8
    1338:	.word	0x00001acc

0000133c <apply_kline>:
    133c:	push	{r4, r5, r6, r7, lr}
    1340:	sub	sp, sp, #20
    1344:	mov	r4, r1
    1348:	str	r1, [sp]
    134c:	ldr	ip, [r1, #28]
    1350:	ldr	r1, [r1, #16]
    1354:	mov	r5, r3
    1358:	mov	r6, r0
    135c:	mov	r3, #0
    1360:	mov	r0, r1
    1364:	mov	r7, r2
    1368:	mov	r1, #64	; 0x40
    136c:	mov	r2, ip
    1370:	bl	d40 <add_conf_by_address@plt>
    1374:	cmp	r5, #0
    1378:	ldr	r2, [r4, #28]
    137c:	ldr	r3, [r4, #16]
    1380:	beq	14b0 <apply_kline+0x174>
    1384:	ldrb	r0, [r5]
    1388:	cmp	r0, #0
    138c:	bne	1428 <apply_kline+0xec>
    1390:	str	r0, [sp, #8]
    1394:	str	r0, [sp, #4]
    1398:	str	r7, [sp]
    139c:	mov	r1, r6
    13a0:	bl	cbc <bandb_add@plt>
    13a4:	ldrb	r3, [r5]
    13a8:	cmp	r3, #0
    13ac:	bne	144c <apply_kline+0x110>
    13b0:	mov	r0, r6
    13b4:	bl	cd4 <get_oper_name@plt>
    13b8:	ldr	r2, [r4, #16]
    13bc:	ldr	r3, [r4, #28]
    13c0:	mov	r1, #0
    13c4:	stmib	sp, {r2, r7}
    13c8:	ldr	r2, [pc, #252]	; 14cc <apply_kline+0x190>
    13cc:	str	r3, [sp]
    13d0:	add	r2, pc, r2
    13d4:	mov	r3, r0
    13d8:	mov	r0, #256	; 0x100
    13dc:	bl	cb0 <sendto_realops_snomask@plt>
    13e0:	mov	r0, r6
    13e4:	bl	cd4 <get_oper_name@plt>
    13e8:	ldr	r2, [r4, #16]
    13ec:	ldr	r1, [pc, #220]	; 14d0 <apply_kline+0x194>
    13f0:	ldr	r3, [r4, #28]
    13f4:	add	r1, pc, r1
    13f8:	stm	sp, {r2, r7}
    13fc:	mov	r2, r0
    1400:	mov	r0, #7
    1404:	bl	d88 <ilog@plt>
    1408:	ldr	r1, [pc, #196]	; 14d4 <apply_kline+0x198>
    140c:	mov	r0, r6
    1410:	ldr	r3, [r4, #16]
    1414:	ldr	r2, [r4, #28]
    1418:	add	r1, pc, r1
    141c:	add	sp, sp, #20
    1420:	pop	{r4, r5, r6, r7, lr}
    1424:	b	db8 <sendto_one_notice@plt>
    1428:	mov	r0, #0
    142c:	str	r5, [sp, #4]
    1430:	str	r7, [sp]
    1434:	str	r0, [sp, #8]
    1438:	mov	r1, r6
    143c:	bl	cbc <bandb_add@plt>
    1440:	ldrb	r3, [r5]
    1444:	cmp	r3, #0
    1448:	beq	13b0 <apply_kline+0x74>
    144c:	mov	r0, r6
    1450:	bl	cd4 <get_oper_name@plt>
    1454:	ldr	r2, [r4, #16]
    1458:	ldr	r3, [r4, #28]
    145c:	mov	r1, #0
    1460:	stmib	sp, {r2, r7}
    1464:	ldr	r2, [pc, #108]	; 14d8 <apply_kline+0x19c>
    1468:	str	r3, [sp]
    146c:	add	r2, pc, r2
    1470:	str	r5, [sp, #12]
    1474:	mov	r3, r0
    1478:	mov	r0, #256	; 0x100
    147c:	bl	cb0 <sendto_realops_snomask@plt>
    1480:	mov	r0, r6
    1484:	bl	cd4 <get_oper_name@plt>
    1488:	ldr	r2, [r4, #16]
    148c:	ldr	r1, [pc, #72]	; 14dc <apply_kline+0x1a0>
    1490:	ldr	r3, [r4, #28]
    1494:	add	r1, pc, r1
    1498:	stm	sp, {r2, r7}
    149c:	str	r5, [sp, #8]
    14a0:	mov	r2, r0
    14a4:	mov	r0, #7
    14a8:	bl	d88 <ilog@plt>
    14ac:	b	1408 <apply_kline+0xcc>
    14b0:	str	r5, [sp, #8]
    14b4:	str	r5, [sp, #4]
    14b8:	str	r7, [sp]
    14bc:	mov	r0, r5
    14c0:	mov	r1, r6
    14c4:	bl	cbc <bandb_add@plt>
    14c8:	b	13b0 <apply_kline+0x74>
    14cc:	.word	0x00001a48
    14d0:	.word	0x00001a48
    14d4:	.word	0x00001a6c
    14d8:	.word	0x000019e0
    14dc:	.word	0x000019dc

000014e0 <remove_temp_kline>:
    14e0:	ldr	r3, [pc, #344]	; 1640 <remove_temp_kline+0x160>
    14e4:	ldr	ip, [pc, #344]	; 1644 <remove_temp_kline+0x164>
    14e8:	add	r3, pc, r3
    14ec:	mov	r2, #0
    14f0:	push	{r4, r5, r6, r7, r8, lr}
    14f4:	mov	r7, r2
    14f8:	sub	sp, sp, #8
    14fc:	ldr	r6, [r3, ip]
    1500:	ldr	r4, [r6, r2]
    1504:	cmp	r4, #0
    1508:	bne	151c <remove_temp_kline+0x3c>
    150c:	b	1624 <remove_temp_kline+0x144>
    1510:	ldr	r4, [r4, #8]
    1514:	cmp	r4, #0
    1518:	beq	1624 <remove_temp_kline+0x144>
    151c:	ldr	r3, [r4]
    1520:	cmp	r3, r1
    1524:	bne	1510 <remove_temp_kline+0x30>
    1528:	mov	r5, r1
    152c:	ldr	r3, [r1, #16]
    1530:	ldr	r2, [r1, #28]
    1534:	ldr	r1, [pc, #268]	; 1648 <remove_temp_kline+0x168>
    1538:	mov	r8, r0
    153c:	add	r1, pc, r1
    1540:	bl	db8 <sendto_one_notice@plt>
    1544:	mov	r0, r8
    1548:	bl	cd4 <get_oper_name@plt>
    154c:	ldr	r2, [r5, #16]
    1550:	ldr	r3, [r5, #28]
    1554:	str	r2, [sp, #4]
    1558:	ldr	r2, [pc, #236]	; 164c <remove_temp_kline+0x16c>
    155c:	str	r3, [sp]
    1560:	add	r2, pc, r2
    1564:	mov	r1, #0
    1568:	mov	r3, r0
    156c:	mov	r0, #256	; 0x100
    1570:	bl	cb0 <sendto_realops_snomask@plt>
    1574:	mov	r0, r8
    1578:	bl	cd4 <get_oper_name@plt>
    157c:	ldr	r2, [r5, #16]
    1580:	ldr	r1, [pc, #200]	; 1650 <remove_temp_kline+0x170>
    1584:	ldr	r3, [r5, #28]
    1588:	add	r1, pc, r1
    158c:	str	r2, [sp]
    1590:	mov	r2, r0
    1594:	mov	r0, #7
    1598:	bl	d88 <ilog@plt>
    159c:	ldr	r2, [r4, #8]
    15a0:	cmp	r2, #0
    15a4:	lsleq	r3, r7, #1
    15a8:	ldrne	r1, [r4, #4]
    15ac:	ldreq	r1, [r4, #4]
    15b0:	lslne	r3, r7, #1
    15b4:	addeq	r0, r3, r7
    15b8:	strne	r1, [r2, #4]
    15bc:	addeq	r0, r6, r0, lsl #2
    15c0:	ldrne	r1, [r4, #4]
    15c4:	streq	r1, [r0, #4]
    15c8:	cmp	r1, #0
    15cc:	addeq	r1, r3, r7
    15d0:	add	r7, r3, r7
    15d4:	streq	r2, [r6, r1, lsl #2]
    15d8:	add	r6, r6, r7, lsl #2
    15dc:	strne	r2, [r1, #8]
    15e0:	ldr	r3, [r6, #8]
    15e4:	mov	r2, #0
    15e8:	sub	r3, r3, #1
    15ec:	str	r2, [r4, #4]
    15f0:	str	r2, [r4, #8]
    15f4:	mov	r0, r4
    15f8:	str	r3, [r6, #8]
    15fc:	bl	ce0 <rb_free_rb_dlink_node@plt>
    1600:	ldr	r1, [r5, #16]
    1604:	ldr	r0, [r5, #28]
    1608:	bl	dac <remove_reject_mask@plt>
    160c:	ldr	r0, [r5, #16]
    1610:	mov	r1, r5
    1614:	bl	d7c <delete_one_address_conf@plt>
    1618:	mov	r0, #1
    161c:	add	sp, sp, #8
    1620:	pop	{r4, r5, r6, r7, r8, pc}
    1624:	add	r7, r7, #1
    1628:	cmp	r7, #4
    162c:	add	r2, r2, #12
    1630:	bne	1500 <remove_temp_kline+0x20>
    1634:	mov	r0, #0
    1638:	add	sp, sp, #8
    163c:	pop	{r4, r5, r6, r7, r8, pc}
    1640:	.word	0x00012b10
    1644:	.word	0x000000e4
    1648:	.word	0x00001960
    164c:	.word	0x00001968
    1650:	.word	0x00001974

00001654 <remove_permkline_match>:
    1654:	push	{r4, r5, lr}
    1658:	mov	r4, r1
    165c:	ldr	r3, [r1, #16]
    1660:	ldr	r2, [r1, #28]
    1664:	ldr	r1, [pc, #148]	; 1700 <remove_permkline_match+0xac>
    1668:	sub	sp, sp, #12
    166c:	mov	r5, r0
    1670:	add	r1, pc, r1
    1674:	bl	db8 <sendto_one_notice@plt>
    1678:	mov	r0, r5
    167c:	bl	cd4 <get_oper_name@plt>
    1680:	ldr	r2, [r4, #16]
    1684:	ldr	r3, [r4, #28]
    1688:	str	r2, [sp, #4]
    168c:	ldr	r2, [pc, #112]	; 1704 <remove_permkline_match+0xb0>
    1690:	str	r3, [sp]
    1694:	add	r2, pc, r2
    1698:	mov	r1, #0
    169c:	mov	r3, r0
    16a0:	mov	r0, #256	; 0x100
    16a4:	bl	cb0 <sendto_realops_snomask@plt>
    16a8:	mov	r0, r5
    16ac:	bl	cd4 <get_oper_name@plt>
    16b0:	ldr	r2, [r4, #16]
    16b4:	ldr	r1, [pc, #76]	; 1708 <remove_permkline_match+0xb4>
    16b8:	ldr	r3, [r4, #28]
    16bc:	add	r1, pc, r1
    16c0:	str	r2, [sp]
    16c4:	mov	r2, r0
    16c8:	mov	r0, #7
    16cc:	bl	d88 <ilog@plt>
    16d0:	ldr	r1, [r4, #16]
    16d4:	ldr	r0, [r4, #28]
    16d8:	bl	dac <remove_reject_mask@plt>
    16dc:	ldr	r1, [r4, #28]
    16e0:	ldr	r2, [r4, #16]
    16e4:	mov	r0, #0
    16e8:	bl	dc4 <bandb_del@plt>
    16ec:	mov	r1, r4
    16f0:	ldr	r0, [r4, #16]
    16f4:	add	sp, sp, #12
    16f8:	pop	{r4, r5, lr}
    16fc:	b	d7c <delete_one_address_conf@plt>
    1700:	.word	0x00001898
    1704:	.word	0x00001894
    1708:	.word	0x00001840

0000170c <handle_remote_unkline>:
    170c:	ldr	r3, [r0, #32]
    1710:	push	{r4, r5, r6, r7, r8, lr}
    1714:	mov	r4, r0
    1718:	mov	r5, r1
    171c:	mov	r6, r2
    1720:	add	r1, r0, #163	; 0xa3
    1724:	add	r2, r3, #88	; 0x58
    1728:	add	r0, r0, #152	; 0x98
    172c:	mov	r3, #4
    1730:	bl	de8 <find_shared_conf@plt>
    1734:	cmp	r0, #0
    1738:	popeq	{r4, r5, r6, r7, r8, pc}
    173c:	mov	r2, r5
    1740:	mov	r1, #64	; 0x40
    1744:	mov	r0, r6
    1748:	bl	dd0 <find_exact_conf_by_address@plt>
    174c:	subs	r7, r0, #0
    1750:	beq	17a0 <handle_remote_unkline+0x94>
    1754:	ldr	r3, [r7, #44]	; 0x2c
    1758:	cmp	r3, #0
    175c:	bne	1784 <handle_remote_unkline+0x78>
    1760:	mov	r1, r7
    1764:	mov	r0, r4
    1768:	bl	14e0 <remove_temp_kline>
    176c:	cmp	r0, #0
    1770:	popne	{r4, r5, r6, r7, r8, pc}
    1774:	mov	r1, r7
    1778:	mov	r0, r4
    177c:	pop	{r4, r5, r6, r7, r8, lr}
    1780:	b	1654 <remove_permkline_match>
    1784:	ldr	r1, [pc, #48]	; 17bc <handle_remote_unkline+0xb0>
    1788:	mov	r3, r6
    178c:	mov	r2, r5
    1790:	mov	r0, r4
    1794:	add	r1, pc, r1
    1798:	pop	{r4, r5, r6, r7, r8, lr}
    179c:	b	db8 <sendto_one_notice@plt>
    17a0:	ldr	r1, [pc, #24]	; 17c0 <handle_remote_unkline+0xb4>
    17a4:	mov	r3, r6
    17a8:	mov	r2, r5
    17ac:	mov	r0, r4
    17b0:	add	r1, pc, r1
    17b4:	pop	{r4, r5, r6, r7, r8, lr}
    17b8:	b	db8 <sendto_one_notice@plt>
    17bc:	.word	0x000017d4
    17c0:	.word	0x000017a0

000017c4 <me_unkline>:
    17c4:	ldrh	r3, [r2, #80]	; 0x50
    17c8:	ldr	r1, [sp]
    17cc:	cmp	r3, #64	; 0x40
    17d0:	bxne	lr
    17d4:	ldr	r3, [r2, #24]
    17d8:	cmp	r3, #0
    17dc:	bxeq	lr
    17e0:	mov	r0, r2
    17e4:	ldmib	r1, {r1, r2}
    17e8:	b	170c <handle_remote_unkline>

000017ec <ms_unkline>:
    17ec:	push	{r4, r5, r6, lr}
    17f0:	sub	sp, sp, #16
    17f4:	ldr	r4, [pc, #152]	; 1894 <ms_unkline+0xa8>
    17f8:	ldr	r3, [pc, #152]	; 1898 <ms_unkline+0xac>
    17fc:	add	r4, pc, r4
    1800:	ldr	r5, [sp, #32]
    1804:	ldr	r3, [r4, r3]
    1808:	ldr	r1, [pc, #140]	; 189c <ms_unkline+0xb0>
    180c:	ldr	ip, [r5, #12]
    1810:	ldr	r0, [r5, #8]
    1814:	add	r1, pc, r1
    1818:	ldr	lr, [r5, #4]
    181c:	ldr	r3, [r3]
    1820:	str	r1, [sp]
    1824:	ldr	r1, [pc, #116]	; 18a0 <ms_unkline+0xb4>
    1828:	mov	r6, r2
    182c:	stmib	sp, {r0, ip}
    1830:	mov	r2, lr
    1834:	mov	r0, r6
    1838:	add	r1, pc, r1
    183c:	bl	c08 <propagate_generic@plt>
    1840:	ldr	r3, [pc, #92]	; 18a4 <ms_unkline+0xb8>
    1844:	ldr	r0, [r5, #4]
    1848:	ldr	r1, [r4, r3]
    184c:	add	r1, r1, #88	; 0x58
    1850:	bl	d94 <match@plt>
    1854:	cmp	r0, #0
    1858:	beq	1868 <ms_unkline+0x7c>
    185c:	ldrh	r3, [r6, #80]	; 0x50
    1860:	cmp	r3, #64	; 0x40
    1864:	beq	1870 <ms_unkline+0x84>
    1868:	add	sp, sp, #16
    186c:	pop	{r4, r5, r6, pc}
    1870:	ldr	r3, [r6, #24]
    1874:	cmp	r3, #0
    1878:	beq	1868 <ms_unkline+0x7c>
    187c:	mov	r0, r6
    1880:	ldr	r2, [r5, #12]
    1884:	ldr	r1, [r5, #8]
    1888:	add	sp, sp, #16
    188c:	pop	{r4, r5, r6, lr}
    1890:	b	170c <handle_remote_unkline>
    1894:	.word	0x000127fc
    1898:	.word	0x000000c0
    189c:	.word	0x00001794
    18a0:	.word	0x00001768
    18a4:	.word	0x000000ec

000018a8 <mo_unkline>:
    18a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    18ac:	add	fp, sp, #32
    18b0:	sub	sp, sp, #44	; 0x2c
    18b4:	ldr	r7, [fp, #4]
    18b8:	mov	r1, #42	; 0x2a
    18bc:	mov	r4, r2
    18c0:	ldr	r6, [r7, #4]
    18c4:	mov	r8, r3
    18c8:	mov	r0, r6
    18cc:	strh	r1, [fp, #-40]	; 0xffffffd8
    18d0:	bl	d64 <strlen@plt>
    18d4:	mov	r1, r6
    18d8:	ldr	r6, [pc, #1132]	; 1d4c <mo_unkline+0x4a4>
    18dc:	add	r6, pc, r6
    18e0:	add	r3, r0, #15
    18e4:	bic	r3, r3, #7
    18e8:	sub	sp, sp, r3
    18ec:	add	r5, sp, #32
    18f0:	add	r2, r0, #1
    18f4:	mov	r0, r5
    18f8:	bl	c8c <memcpy@plt>
    18fc:	ldr	r3, [r4, #24]
    1900:	cmp	r3, #0
    1904:	beq	1928 <mo_unkline+0x80>
    1908:	ldr	r0, [r3, #36]	; 0x24
    190c:	cmp	r0, #0
    1910:	beq	1928 <mo_unkline+0x80>
    1914:	ldr	r1, [pc, #1076]	; 1d50 <mo_unkline+0x4a8>
    1918:	add	r1, pc, r1
    191c:	bl	df4 <privilegeset_in_set@plt>
    1920:	cmp	r0, #0
    1924:	bne	195c <mo_unkline+0xb4>
    1928:	ldr	r2, [pc, #1060]	; 1d54 <mo_unkline+0x4ac>
    192c:	ldr	r1, [pc, #1060]	; 1d58 <mo_unkline+0x4b0>
    1930:	add	r3, r4, #88	; 0x58
    1934:	add	r1, pc, r1
    1938:	ldr	r2, [r6, r2]
    193c:	str	r1, [sp]
    1940:	ldr	r1, [pc, #1044]	; 1d5c <mo_unkline+0x4b4>
    1944:	mov	r0, r4
    1948:	add	r2, r2, #88	; 0x58
    194c:	add	r1, pc, r1
    1950:	bl	c5c <sendto_one@plt>
    1954:	sub	sp, fp, #32
    1958:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    195c:	mov	r1, #64	; 0x40
    1960:	mov	r0, r5
    1964:	bl	d70 <strchr@plt>
    1968:	cmp	r0, #0
    196c:	beq	1c94 <mo_unkline+0x3ec>
    1970:	mov	r3, #0
    1974:	strb	r3, [r0]
    1978:	ldrb	r3, [r5]
    197c:	cmp	r3, #0
    1980:	ldrb	r3, [r0, #1]
    1984:	movne	r9, r5
    1988:	subeq	r9, fp, #40	; 0x28
    198c:	cmp	r3, #0
    1990:	addne	r5, r0, #1
    1994:	beq	1ba8 <mo_unkline+0x300>
    1998:	cmp	r8, #3
    199c:	ble	1a14 <mo_unkline+0x16c>
    19a0:	ldr	r1, [pc, #952]	; 1d60 <mo_unkline+0x4b8>
    19a4:	ldr	r0, [r7, #8]
    19a8:	add	r1, pc, r1
    19ac:	bl	e00 <irccmp@plt>
    19b0:	subs	r8, r0, #0
    19b4:	bne	1a14 <mo_unkline+0x16c>
    19b8:	ldr	r3, [r4, #24]
    19bc:	cmp	r3, #0
    19c0:	beq	19e4 <mo_unkline+0x13c>
    19c4:	ldr	r0, [r3, #36]	; 0x24
    19c8:	cmp	r0, #0
    19cc:	beq	19e4 <mo_unkline+0x13c>
    19d0:	ldr	r1, [pc, #908]	; 1d64 <mo_unkline+0x4bc>
    19d4:	add	r1, pc, r1
    19d8:	bl	df4 <privilegeset_in_set@plt>
    19dc:	cmp	r0, #0
    19e0:	bne	1bfc <mo_unkline+0x354>
    19e4:	ldr	r2, [pc, #872]	; 1d54 <mo_unkline+0x4ac>
    19e8:	ldr	r1, [pc, #888]	; 1d68 <mo_unkline+0x4c0>
    19ec:	add	r3, r4, #88	; 0x58
    19f0:	add	r1, pc, r1
    19f4:	ldr	r2, [r6, r2]
    19f8:	str	r1, [sp]
    19fc:	ldr	r1, [pc, #872]	; 1d6c <mo_unkline+0x4c4>
    1a00:	mov	r0, r4
    1a04:	add	r2, r2, #88	; 0x58
    1a08:	add	r1, pc, r1
    1a0c:	bl	c5c <sendto_one@plt>
    1a10:	b	1954 <mo_unkline+0xac>
    1a14:	mov	r2, r9
    1a18:	mov	r1, #64	; 0x40
    1a1c:	mov	r0, r5
    1a20:	bl	dd0 <find_exact_conf_by_address@plt>
    1a24:	subs	r7, r0, #0
    1a28:	beq	1cbc <mo_unkline+0x414>
    1a2c:	ldr	r3, [r7, #44]	; 0x2c
    1a30:	cmp	r3, #0
    1a34:	beq	1bb8 <mo_unkline+0x310>
    1a38:	ldr	r3, [pc, #816]	; 1d70 <mo_unkline+0x4c8>
    1a3c:	ldr	r3, [r6, r3]
    1a40:	ldr	r5, [r3]
    1a44:	cmp	r5, #0
    1a48:	beq	1954 <mo_unkline+0xac>
    1a4c:	ldr	r3, [r5]
    1a50:	cmp	r7, r3
    1a54:	beq	1a70 <mo_unkline+0x1c8>
    1a58:	ldr	r5, [r5, #8]
    1a5c:	cmp	r5, #0
    1a60:	beq	1954 <mo_unkline+0xac>
    1a64:	ldr	r3, [r5]
    1a68:	cmp	r3, r7
    1a6c:	bne	1a58 <mo_unkline+0x1b0>
    1a70:	ldr	r1, [pc, #764]	; 1d74 <mo_unkline+0x4cc>
    1a74:	ldr	r3, [r7, #16]
    1a78:	ldr	r2, [r7, #28]
    1a7c:	add	r1, pc, r1
    1a80:	mov	r0, r4
    1a84:	bl	db8 <sendto_one_notice@plt>
    1a88:	mov	r0, r4
    1a8c:	bl	cd4 <get_oper_name@plt>
    1a90:	ldr	r3, [r7, #16]
    1a94:	ldr	r2, [pc, #732]	; 1d78 <mo_unkline+0x4d0>
    1a98:	str	r3, [sp, #4]
    1a9c:	ldr	r3, [r7, #28]
    1aa0:	add	r2, pc, r2
    1aa4:	mov	r1, #0
    1aa8:	str	r3, [sp]
    1aac:	mov	r3, r0
    1ab0:	mov	r0, #256	; 0x100
    1ab4:	bl	cb0 <sendto_realops_snomask@plt>
    1ab8:	mov	r0, r4
    1abc:	bl	cd4 <get_oper_name@plt>
    1ac0:	ldr	r2, [r7, #16]
    1ac4:	ldr	r1, [pc, #688]	; 1d7c <mo_unkline+0x4d4>
    1ac8:	ldr	r3, [r7, #28]
    1acc:	add	r1, pc, r1
    1ad0:	str	r2, [sp]
    1ad4:	mov	r2, r0
    1ad8:	mov	r0, #7
    1adc:	bl	d88 <ilog@plt>
    1ae0:	bl	c38 <rb_current_time@plt>
    1ae4:	ldr	r3, [r7, #40]	; 0x28
    1ae8:	cmp	r0, r3
    1aec:	mov	r8, r0
    1af0:	strgt	r0, [r7, #40]	; 0x28
    1af4:	movgt	r3, r0
    1af8:	ble	1bf0 <mo_unkline+0x348>
    1afc:	str	r3, [r7, #36]	; 0x24
    1b00:	ldr	r0, [r7, #12]
    1b04:	bl	ca4 <operhash_delete@plt>
    1b08:	mov	r0, r4
    1b0c:	bl	cd4 <get_oper_name@plt>
    1b10:	bl	cf8 <operhash_add@plt>
    1b14:	ldr	r3, [r7, #4]
    1b18:	ldr	lr, [pc, #608]	; 1d80 <mo_unkline+0x4d8>
    1b1c:	ldr	r2, [pc, #608]	; 1d84 <mo_unkline+0x4dc>
    1b20:	orr	r3, r3, #8912896	; 0x880000
    1b24:	str	r3, [r7, #4]
    1b28:	ldr	r9, [r7, #40]	; 0x28
    1b2c:	ldr	sl, [r7, #44]	; 0x2c
    1b30:	mov	r3, #0
    1b34:	sub	sl, sl, r9
    1b38:	ldr	ip, [pc, #584]	; 1d88 <mo_unkline+0x4e0>
    1b3c:	add	r4, r4, #396	; 0x18c
    1b40:	add	ip, pc, ip
    1b44:	mov	r1, r3
    1b48:	str	r0, [r7, #12]
    1b4c:	ldr	r0, [r6, lr]
    1b50:	ldr	r2, [r6, r2]
    1b54:	str	r3, [sp, #20]
    1b58:	str	sl, [sp, #24]
    1b5c:	str	r9, [sp, #16]
    1b60:	ldr	lr, [r0]
    1b64:	ldr	r2, [r2]
    1b68:	ldr	r0, [r7, #16]
    1b6c:	orr	r2, lr, r2
    1b70:	str	r0, [sp, #12]
    1b74:	ldr	lr, [r7, #28]
    1b78:	mov	r0, r3
    1b7c:	str	ip, [sp]
    1b80:	stmib	sp, {r4, lr}
    1b84:	bl	d10 <sendto_server@plt>
    1b88:	ldr	r1, [r7, #16]
    1b8c:	ldr	r0, [r7, #28]
    1b90:	bl	dac <remove_reject_mask@plt>
    1b94:	mov	r2, r8
    1b98:	mov	r1, r5
    1b9c:	mov	r0, r7
    1ba0:	bl	cc8 <deactivate_conf@plt>
    1ba4:	b	1954 <mo_unkline+0xac>
    1ba8:	cmp	r8, #3
    1bac:	sub	r5, fp, #40	; 0x28
    1bb0:	ble	1a14 <mo_unkline+0x16c>
    1bb4:	b	19a0 <mo_unkline+0xf8>
    1bb8:	ldr	r3, [pc, #460]	; 1d8c <mo_unkline+0x4e4>
    1bbc:	ldr	r3, [r6, r3]
    1bc0:	ldr	r3, [r3, #8]
    1bc4:	cmp	r3, #0
    1bc8:	bne	1cd0 <mo_unkline+0x428>
    1bcc:	mov	r1, r7
    1bd0:	mov	r0, r4
    1bd4:	bl	14e0 <remove_temp_kline>
    1bd8:	cmp	r0, #0
    1bdc:	bne	1954 <mo_unkline+0xac>
    1be0:	mov	r1, r7
    1be4:	mov	r0, r4
    1be8:	bl	1654 <remove_permkline_match>
    1bec:	b	1954 <mo_unkline+0xac>
    1bf0:	add	r3, r3, #1
    1bf4:	str	r3, [r7, #40]	; 0x28
    1bf8:	b	1afc <mo_unkline+0x254>
    1bfc:	ldr	r3, [pc, #396]	; 1d90 <mo_unkline+0x4e8>
    1c00:	ldr	r1, [pc, #396]	; 1d94 <mo_unkline+0x4ec>
    1c04:	ldr	r2, [r7, #12]
    1c08:	ldr	r3, [r6, r3]
    1c0c:	add	r1, pc, r1
    1c10:	str	r5, [sp, #8]
    1c14:	ldr	r3, [r3]
    1c18:	stm	sp, {r1, r9}
    1c1c:	ldr	r1, [pc, #372]	; 1d98 <mo_unkline+0x4f0>
    1c20:	mov	r0, r4
    1c24:	add	r1, pc, r1
    1c28:	bl	c08 <propagate_generic@plt>
    1c2c:	ldr	r3, [pc, #288]	; 1d54 <mo_unkline+0x4ac>
    1c30:	ldr	r0, [r7, #12]
    1c34:	ldr	r1, [r6, r3]
    1c38:	add	r1, r1, #88	; 0x58
    1c3c:	bl	d94 <match@plt>
    1c40:	cmp	r0, #0
    1c44:	beq	1954 <mo_unkline+0xac>
    1c48:	mov	r2, r9
    1c4c:	mov	r1, #64	; 0x40
    1c50:	mov	r0, r5
    1c54:	bl	dd0 <find_exact_conf_by_address@plt>
    1c58:	mov	r7, r0
    1c5c:	cmp	r7, #0
    1c60:	beq	1d08 <mo_unkline+0x460>
    1c64:	ldr	r3, [r7, #44]	; 0x2c
    1c68:	cmp	r3, #0
    1c6c:	beq	1bcc <mo_unkline+0x324>
    1c70:	cmp	r8, #0
    1c74:	bne	1a38 <mo_unkline+0x190>
    1c78:	ldr	r1, [pc, #284]	; 1d9c <mo_unkline+0x4f4>
    1c7c:	mov	r3, r5
    1c80:	mov	r2, r9
    1c84:	mov	r0, r4
    1c88:	add	r1, pc, r1
    1c8c:	bl	db8 <sendto_one_notice@plt>
    1c90:	b	1954 <mo_unkline+0xac>
    1c94:	ldrb	r3, [r5]
    1c98:	cmp	r3, #42	; 0x2a
    1c9c:	beq	1cb4 <mo_unkline+0x40c>
    1ca0:	mov	r1, #46	; 0x2e
    1ca4:	mov	r0, r5
    1ca8:	bl	d70 <strchr@plt>
    1cac:	cmp	r0, #0
    1cb0:	beq	1d24 <mo_unkline+0x47c>
    1cb4:	sub	r9, fp, #40	; 0x28
    1cb8:	b	1998 <mo_unkline+0xf0>
    1cbc:	ldr	r3, [pc, #200]	; 1d8c <mo_unkline+0x4e4>
    1cc0:	ldr	r3, [r6, r3]
    1cc4:	ldr	r3, [r3, #8]
    1cc8:	cmp	r3, #0
    1ccc:	beq	1d08 <mo_unkline+0x460>
    1cd0:	ldr	r3, [pc, #184]	; 1d90 <mo_unkline+0x4e8>
    1cd4:	ldr	r0, [pc, #196]	; 1da0 <mo_unkline+0x4f8>
    1cd8:	ldr	r1, [pc, #196]	; 1da4 <mo_unkline+0x4fc>
    1cdc:	ldr	r3, [r6, r3]
    1ce0:	add	r0, pc, r0
    1ce4:	str	r5, [sp, #8]
    1ce8:	mov	r2, #4
    1cec:	ldr	r3, [r3]
    1cf0:	add	r1, pc, r1
    1cf4:	stm	sp, {r0, r9}
    1cf8:	mov	r0, r4
    1cfc:	bl	cec <cluster_generic@plt>
    1d00:	mov	r8, #1
    1d04:	b	1c5c <mo_unkline+0x3b4>
    1d08:	ldr	r1, [pc, #152]	; 1da8 <mo_unkline+0x500>
    1d0c:	mov	r3, r5
    1d10:	mov	r2, r9
    1d14:	mov	r0, r4
    1d18:	add	r1, pc, r1
    1d1c:	bl	db8 <sendto_one_notice@plt>
    1d20:	b	1954 <mo_unkline+0xac>
    1d24:	mov	r1, #58	; 0x3a
    1d28:	mov	r0, r5
    1d2c:	bl	d70 <strchr@plt>
    1d30:	cmp	r0, #0
    1d34:	bne	1cb4 <mo_unkline+0x40c>
    1d38:	ldr	r1, [pc, #108]	; 1dac <mo_unkline+0x504>
    1d3c:	mov	r0, r4
    1d40:	add	r1, pc, r1
    1d44:	bl	db8 <sendto_one_notice@plt>
    1d48:	b	1954 <mo_unkline+0xac>
    1d4c:	.word	0x0001271c
    1d50:	.word	0x000016c8
    1d54:	.word	0x000000ec
    1d58:	.word	0x000016a4
    1d5c:	.word	0x00001664
    1d60:	.word	0x0000165c
    1d64:	.word	0x00001640
    1d68:	.word	0x00001618
    1d6c:	.word	0x000015a8
    1d70:	.word	0x000000c8
    1d74:	.word	0x000015c8
    1d78:	.word	0x000015cc
    1d7c:	.word	0x00001430
    1d80:	.word	0x000000cc
    1d84:	.word	0x000000d0
    1d88:	.word	0x000014e4
    1d8c:	.word	0x000000d8
    1d90:	.word	0x000000c0
    1d94:	.word	0x0000139c
    1d98:	.word	0x0000137c
    1d9c:	.word	0x000012e0
    1da0:	.word	0x000012c8
    1da4:	.word	0x000012b0
    1da8:	.word	0x00001238
    1dac:	.word	0x000012b0

00001db0 <mo_kline>:
    1db0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1db4:	mov	r9, r3
    1db8:	add	fp, sp, #32
    1dbc:	sub	sp, sp, #140	; 0x8c
    1dc0:	ldr	r3, [r2, #24]
    1dc4:	ldr	r5, [pc, #2116]	; 2610 <mo_kline+0x860>
    1dc8:	cmp	r3, #0
    1dcc:	mov	r4, r2
    1dd0:	add	r5, pc, r5
    1dd4:	beq	1e08 <mo_kline+0x58>
    1dd8:	ldr	r0, [r3, #36]	; 0x24
    1ddc:	cmp	r0, #0
    1de0:	beq	1e08 <mo_kline+0x58>
    1de4:	ldr	r3, [pc, #2088]	; 2614 <mo_kline+0x864>
    1de8:	ldr	r1, [pc, #2088]	; 2618 <mo_kline+0x868>
    1dec:	ldr	r3, [r5, r3]
    1df0:	add	r1, pc, r1
    1df4:	str	r3, [fp, #-120]	; 0xffffff88
    1df8:	ldr	r7, [r3, #324]	; 0x144
    1dfc:	bl	df4 <privilegeset_in_set@plt>
    1e00:	cmp	r0, #0
    1e04:	bne	1e3c <mo_kline+0x8c>
    1e08:	ldr	r2, [pc, #2060]	; 261c <mo_kline+0x86c>
    1e0c:	ldr	r1, [pc, #2060]	; 2620 <mo_kline+0x870>
    1e10:	add	r3, r4, #88	; 0x58
    1e14:	add	r1, pc, r1
    1e18:	ldr	r2, [r5, r2]
    1e1c:	str	r1, [sp]
    1e20:	ldr	r1, [pc, #2044]	; 2624 <mo_kline+0x874>
    1e24:	mov	r0, r4
    1e28:	add	r2, r2, #88	; 0x58
    1e2c:	add	r1, pc, r1
    1e30:	bl	c5c <sendto_one@plt>
    1e34:	sub	sp, fp, #32
    1e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1e3c:	ldr	r3, [fp, #4]
    1e40:	ldr	r0, [r3, #4]
    1e44:	bl	da0 <valid_temp_time@plt>
    1e48:	ldr	r2, [fp, #4]
    1e4c:	mov	r1, #64	; 0x40
    1e50:	subs	r6, r0, #0
    1e54:	movlt	r3, #4
    1e58:	movge	r3, #8
    1e5c:	movlt	r6, #0
    1e60:	ldr	sl, [r2, r3]
    1e64:	movlt	r3, #1
    1e68:	movge	r3, #2
    1e6c:	mov	r0, sl
    1e70:	str	r3, [fp, #-124]	; 0xffffff84
    1e74:	bl	d70 <strchr@plt>
    1e78:	subs	r8, r0, #0
    1e7c:	beq	2088 <mo_kline+0x2d8>
    1e80:	mov	r2, #0
    1e84:	strb	r2, [r8]
    1e88:	ldrb	r2, [sl]
    1e8c:	cmp	r2, #0
    1e90:	moveq	r3, #42	; 0x2a
    1e94:	strheq	r3, [fp, #-116]	; 0xffffff8c
    1e98:	beq	1eac <mo_kline+0xfc>
    1e9c:	mov	r1, sl
    1ea0:	mov	r2, #11
    1ea4:	sub	r0, fp, #116	; 0x74
    1ea8:	bl	ddc <rb_strlcpy@plt>
    1eac:	ldrb	r3, [r8, #1]
    1eb0:	cmp	r3, #0
    1eb4:	beq	2074 <mo_kline+0x2c4>
    1eb8:	add	r1, r8, #1
    1ebc:	mov	r2, #64	; 0x40
    1ec0:	sub	r0, fp, #103	; 0x67
    1ec4:	bl	ddc <rb_strlcpy@plt>
    1ec8:	ldrb	r3, [fp, #-116]	; 0xffffff8c
    1ecc:	cmp	r3, #58	; 0x3a
    1ed0:	beq	2060 <mo_kline+0x2b0>
    1ed4:	ldrb	r3, [fp, #-103]	; 0xffffff99
    1ed8:	cmp	r3, #58	; 0x3a
    1edc:	beq	2060 <mo_kline+0x2b0>
    1ee0:	ldr	r2, [fp, #-124]	; 0xffffff84
    1ee4:	add	r3, r2, #2
    1ee8:	cmp	r3, r9
    1eec:	movge	r8, #0
    1ef0:	add	r3, r2, #1
    1ef4:	blt	20c0 <mo_kline+0x310>
    1ef8:	cmp	r3, r9
    1efc:	bge	2030 <mo_kline+0x280>
    1f00:	ldr	r2, [fp, #4]
    1f04:	add	r3, r2, r3, lsl #2
    1f08:	ldr	sl, [r3]
    1f0c:	cmp	sl, #0
    1f10:	beq	2030 <mo_kline+0x280>
    1f14:	ldrb	r3, [sl]
    1f18:	cmp	r3, #0
    1f1c:	beq	2030 <mo_kline+0x280>
    1f20:	mov	r0, sl
    1f24:	bl	d64 <strlen@plt>
    1f28:	mov	r1, sl
    1f2c:	sub	sl, fp, #103	; 0x67
    1f30:	add	r3, r0, #15
    1f34:	bic	r3, r3, #7
    1f38:	sub	sp, sp, r3
    1f3c:	add	r9, sp, #40	; 0x28
    1f40:	add	r2, r0, #1
    1f44:	mov	r0, r9
    1f48:	bl	c8c <memcpy@plt>
    1f4c:	mov	r2, #0
    1f50:	mov	r0, sl
    1f54:	mov	r1, r2
    1f58:	bl	c20 <parse_netmask_strict@plt>
    1f5c:	cmp	r0, #0
    1f60:	beq	218c <mo_kline+0x3dc>
    1f64:	cmp	r8, #0
    1f68:	beq	21a8 <mo_kline+0x3f8>
    1f6c:	ldr	r3, [pc, #1716]	; 2628 <mo_kline+0x878>
    1f70:	sub	r2, fp, #116	; 0x74
    1f74:	ldr	r1, [pc, #1712]	; 262c <mo_kline+0x87c>
    1f78:	str	r2, [fp, #-124]	; 0xffffff84
    1f7c:	ldr	r3, [r5, r3]
    1f80:	add	r1, pc, r1
    1f84:	str	r9, [sp, #16]
    1f88:	ldr	r3, [r3]
    1f8c:	stm	sp, {r1, r6}
    1f90:	ldr	r1, [pc, #1688]	; 2630 <mo_kline+0x880>
    1f94:	mov	r0, r2
    1f98:	str	r0, [sp, #8]
    1f9c:	mov	r2, r8
    1fa0:	add	r1, pc, r1
    1fa4:	mov	r0, r4
    1fa8:	str	sl, [sp, #12]
    1fac:	bl	c08 <propagate_generic@plt>
    1fb0:	ldr	r3, [pc, #1636]	; 261c <mo_kline+0x86c>
    1fb4:	mov	r0, r8
    1fb8:	ldr	r1, [r5, r3]
    1fbc:	add	r1, r1, #88	; 0x58
    1fc0:	bl	d94 <match@plt>
    1fc4:	cmp	r0, #0
    1fc8:	beq	1e34 <mo_kline+0x84>
    1fcc:	sub	r8, fp, #104	; 0x68
    1fd0:	mov	r3, #0
    1fd4:	str	r3, [fp, #-128]	; 0xffffff80
    1fd8:	mov	r2, sl
    1fdc:	ldr	r1, [fp, #-124]	; 0xffffff84
    1fe0:	mov	r0, r4
    1fe4:	bl	f8c <valid_user_host>
    1fe8:	cmp	r0, #0
    1fec:	beq	1e34 <mo_kline+0x84>
    1ff0:	mov	r1, sl
    1ff4:	ldr	r0, [fp, #-124]	; 0xffffff84
    1ff8:	bl	d28 <valid_wild_card@plt>
    1ffc:	cmp	r0, #0
    2000:	beq	2338 <mo_kline+0x588>
    2004:	ldr	r3, [fp, #-128]	; 0xffffff80
    2008:	cmp	r6, #0
    200c:	movne	r3, #0
    2010:	andeq	r3, r3, #1
    2014:	cmp	r3, #0
    2018:	beq	2244 <mo_kline+0x494>
    201c:	ldr	r1, [pc, #1552]	; 2634 <mo_kline+0x884>
    2020:	mov	r0, r4
    2024:	add	r1, pc, r1
    2028:	bl	db8 <sendto_one_notice@plt>
    202c:	b	1e34 <mo_kline+0x84>
    2030:	ldr	r2, [pc, #1508]	; 261c <mo_kline+0x86c>
    2034:	ldr	r1, [pc, #1532]	; 2638 <mo_kline+0x888>
    2038:	add	r3, r4, #88	; 0x58
    203c:	add	r1, pc, r1
    2040:	ldr	r2, [r5, r2]
    2044:	str	r1, [sp]
    2048:	ldr	r1, [pc, #1516]	; 263c <mo_kline+0x88c>
    204c:	mov	r0, r4
    2050:	add	r2, r2, #88	; 0x58
    2054:	add	r1, pc, r1
    2058:	bl	c5c <sendto_one@plt>
    205c:	b	1e34 <mo_kline+0x84>
    2060:	ldr	r1, [pc, #1496]	; 2640 <mo_kline+0x890>
    2064:	mov	r0, r4
    2068:	add	r1, pc, r1
    206c:	bl	db8 <sendto_one_notice@plt>
    2070:	b	1e34 <mo_kline+0x84>
    2074:	ldr	r3, [pc, #1480]	; 2644 <mo_kline+0x894>
    2078:	add	r3, pc, r3
    207c:	ldrh	r3, [r3]
    2080:	strh	r3, [fp, #-103]	; 0xffffff99
    2084:	b	1ec8 <mo_kline+0x118>
    2088:	mov	r1, #46	; 0x2e
    208c:	mov	r0, sl
    2090:	bl	d70 <strchr@plt>
    2094:	cmp	r0, #0
    2098:	beq	2164 <mo_kline+0x3b4>
    209c:	mov	r0, #42	; 0x2a
    20a0:	mov	r3, #0
    20a4:	strb	r0, [fp, #-116]	; 0xffffff8c
    20a8:	mov	r1, sl
    20ac:	mov	r2, #64	; 0x40
    20b0:	sub	r0, fp, #103	; 0x67
    20b4:	strb	r3, [fp, #-115]	; 0xffffff8d
    20b8:	bl	ddc <rb_strlcpy@plt>
    20bc:	b	1ec8 <mo_kline+0x118>
    20c0:	ldr	r2, [fp, #4]
    20c4:	ldr	r1, [pc, #1404]	; 2648 <mo_kline+0x898>
    20c8:	ldr	r0, [r2, r3, lsl #2]
    20cc:	add	r1, pc, r1
    20d0:	add	r3, r2, r3, lsl #2
    20d4:	str	r3, [fp, #-128]	; 0xffffff80
    20d8:	bl	e00 <irccmp@plt>
    20dc:	ldr	r3, [fp, #-128]	; 0xffffff80
    20e0:	cmp	r0, #0
    20e4:	bne	212c <mo_kline+0x37c>
    20e8:	ldr	r2, [r4, #24]
    20ec:	cmp	r2, #0
    20f0:	beq	2134 <mo_kline+0x384>
    20f4:	ldr	r0, [r2, #36]	; 0x24
    20f8:	str	r3, [fp, #-128]	; 0xffffff80
    20fc:	cmp	r0, #0
    2100:	beq	2134 <mo_kline+0x384>
    2104:	ldr	r1, [pc, #1344]	; 264c <mo_kline+0x89c>
    2108:	add	r1, pc, r1
    210c:	bl	df4 <privilegeset_in_set@plt>
    2110:	cmp	r0, #0
    2114:	beq	2134 <mo_kline+0x384>
    2118:	ldr	r3, [fp, #-128]	; 0xffffff80
    211c:	ldr	r8, [r3, #4]
    2120:	ldr	r3, [fp, #-124]	; 0xffffff84
    2124:	add	r3, r3, #3
    2128:	b	1ef8 <mo_kline+0x148>
    212c:	mov	r8, #0
    2130:	b	1f08 <mo_kline+0x158>
    2134:	ldr	r2, [pc, #1248]	; 261c <mo_kline+0x86c>
    2138:	ldr	r1, [pc, #1296]	; 2650 <mo_kline+0x8a0>
    213c:	add	r3, r4, #88	; 0x58
    2140:	add	r1, pc, r1
    2144:	ldr	r2, [r5, r2]
    2148:	str	r1, [sp]
    214c:	ldr	r1, [pc, #1280]	; 2654 <mo_kline+0x8a4>
    2150:	mov	r0, r4
    2154:	add	r2, r2, #88	; 0x58
    2158:	add	r1, pc, r1
    215c:	bl	c5c <sendto_one@plt>
    2160:	b	1e34 <mo_kline+0x84>
    2164:	mov	r1, #58	; 0x3a
    2168:	mov	r0, sl
    216c:	bl	d70 <strchr@plt>
    2170:	cmp	r0, #0
    2174:	bne	209c <mo_kline+0x2ec>
    2178:	ldr	r1, [pc, #1240]	; 2658 <mo_kline+0x8a8>
    217c:	mov	r0, r4
    2180:	add	r1, pc, r1
    2184:	bl	db8 <sendto_one_notice@plt>
    2188:	b	1e34 <mo_kline+0x84>
    218c:	ldr	r1, [pc, #1224]	; 265c <mo_kline+0x8ac>
    2190:	mov	r3, sl
    2194:	mov	r0, r4
    2198:	sub	r2, fp, #116	; 0x74
    219c:	add	r1, pc, r1
    21a0:	bl	db8 <sendto_one_notice@plt>
    21a4:	b	1e34 <mo_kline+0x84>
    21a8:	cmp	r7, #0
    21ac:	bne	21d0 <mo_kline+0x420>
    21b0:	ldr	r3, [pc, #1192]	; 2660 <mo_kline+0x8b0>
    21b4:	ldr	r3, [r5, r3]
    21b8:	ldr	r3, [r3, #8]
    21bc:	cmp	r3, #0
    21c0:	bne	21e8 <mo_kline+0x438>
    21c4:	sub	r3, fp, #116	; 0x74
    21c8:	str	r3, [fp, #-124]	; 0xffffff84
    21cc:	b	1fcc <mo_kline+0x21c>
    21d0:	mov	r3, #1
    21d4:	str	r3, [fp, #-128]	; 0xffffff80
    21d8:	sub	r3, fp, #116	; 0x74
    21dc:	str	r3, [fp, #-124]	; 0xffffff84
    21e0:	sub	r8, fp, #104	; 0x68
    21e4:	b	1fd8 <mo_kline+0x228>
    21e8:	ldr	r3, [pc, #1080]	; 2628 <mo_kline+0x878>
    21ec:	sub	r8, fp, #104	; 0x68
    21f0:	add	r1, r8, #1
    21f4:	ldr	r3, [r5, r3]
    21f8:	ldr	r2, [pc, #1124]	; 2664 <mo_kline+0x8b4>
    21fc:	sub	r0, fp, #116	; 0x74
    2200:	ldr	r3, [r3]
    2204:	str	r1, [sp, #12]
    2208:	ldr	r1, [pc, #1112]	; 2668 <mo_kline+0x8b8>
    220c:	add	r2, pc, r2
    2210:	cmp	r6, #0
    2214:	str	r2, [sp]
    2218:	str	r0, [fp, #-124]	; 0xffffff84
    221c:	str	r0, [sp, #8]
    2220:	str	r9, [sp, #16]
    2224:	str	r6, [sp, #4]
    2228:	moveq	r2, #2
    222c:	movne	r2, #1
    2230:	add	r1, pc, r1
    2234:	mov	r0, r4
    2238:	str	r7, [fp, #-128]	; 0xffffff80
    223c:	bl	cec <cluster_generic@plt>
    2240:	b	1fd8 <mo_kline+0x228>
    2244:	add	r8, r8, #1
    2248:	mov	r2, r8
    224c:	mov	r3, r6
    2250:	ldr	r1, [fp, #-124]	; 0xffffff84
    2254:	mov	r0, r4
    2258:	bl	1010 <already_placed_kline>
    225c:	subs	sl, r0, #0
    2260:	bne	1e34 <mo_kline+0x84>
    2264:	bl	d1c <rb_set_time@plt>
    2268:	bl	c14 <make_conf@plt>
    226c:	mov	r3, #64	; 0x40
    2270:	str	r3, [r0]
    2274:	mov	r7, r0
    2278:	bl	c38 <rb_current_time@plt>
    227c:	str	r0, [r7, #40]	; 0x28
    2280:	mov	r0, r8
    2284:	bl	1178 <rb_strdup>
    2288:	str	r0, [r7, #16]
    228c:	ldr	r0, [fp, #-124]	; 0xffffff84
    2290:	bl	1178 <rb_strdup>
    2294:	str	sl, [r7, #32]
    2298:	str	r0, [r7, #28]
    229c:	mov	r0, r4
    22a0:	bl	cd4 <get_oper_name@plt>
    22a4:	bl	cf8 <operhash_add@plt>
    22a8:	str	r0, [r7, #12]
    22ac:	mov	r0, r9
    22b0:	bl	d64 <strlen@plt>
    22b4:	ldr	r3, [pc, #944]	; 266c <mo_kline+0x8bc>
    22b8:	mov	r1, #124	; 0x7c
    22bc:	cmp	r0, r3
    22c0:	strbhi	sl, [r9, #390]	; 0x186
    22c4:	mov	r0, r9
    22c8:	bl	d70 <strchr@plt>
    22cc:	cmp	r0, #0
    22d0:	beq	2568 <mo_kline+0x7b8>
    22d4:	mov	r8, r0
    22d8:	mov	r3, #0
    22dc:	strb	r3, [r8], #1
    22e0:	cmp	r8, r3
    22e4:	beq	2568 <mo_kline+0x7b8>
    22e8:	ldrb	r3, [r0, #1]
    22ec:	cmp	r3, #0
    22f0:	bne	2558 <mo_kline+0x7a8>
    22f4:	mov	r0, r9
    22f8:	bl	1178 <rb_strdup>
    22fc:	ldr	r3, [fp, #-128]	; 0xffffff80
    2300:	cmp	r3, #0
    2304:	str	r0, [r7, #20]
    2308:	bne	2354 <mo_kline+0x5a4>
    230c:	cmp	r6, #0
    2310:	beq	2570 <mo_kline+0x7c0>
    2314:	str	r6, [sp]
    2318:	mov	r3, r8
    231c:	mov	r2, r9
    2320:	mov	r0, r4
    2324:	mov	r1, r7
    2328:	bl	11b0 <apply_tkline>
    232c:	mov	r0, r7
    2330:	bl	d04 <check_one_kline@plt>
    2334:	b	1e34 <mo_kline+0x84>
    2338:	ldr	r3, [fp, #-120]	; 0xffffff88
    233c:	ldr	r1, [pc, #812]	; 2670 <mo_kline+0x8c0>
    2340:	mov	r0, r4
    2344:	ldr	r2, [r3, #236]	; 0xec
    2348:	add	r1, pc, r1
    234c:	bl	db8 <sendto_one_notice@plt>
    2350:	b	1e34 <mo_kline+0x84>
    2354:	ldr	r3, [r7, #4]
    2358:	orr	r3, r3, #8912896	; 0x880000
    235c:	str	r3, [r7, #4]
    2360:	bl	c38 <rb_current_time@plt>
    2364:	add	r0, r6, r0
    2368:	str	r0, [r7, #36]	; 0x24
    236c:	str	r0, [r7, #44]	; 0x2c
    2370:	mov	r0, r7
    2374:	bl	c80 <replace_old_ban@plt>
    2378:	bl	d58 <rb_make_rb_dlink_node@plt>
    237c:	subs	r3, r0, #0
    2380:	beq	2528 <mo_kline+0x778>
    2384:	ldr	r2, [pc, #744]	; 2674 <mo_kline+0x8c4>
    2388:	mov	r1, #0
    238c:	str	r7, [r3]
    2390:	str	r1, [r3, #4]
    2394:	ldr	r1, [r5, r2]
    2398:	ldr	r2, [r1]
    239c:	cmp	r2, #0
    23a0:	str	r2, [r3, #8]
    23a4:	strne	r3, [r2, #4]
    23a8:	beq	2518 <mo_kline+0x768>
    23ac:	ldr	ip, [r1, #8]
    23b0:	str	r7, [sp]
    23b4:	add	ip, ip, #1
    23b8:	str	r3, [r1]
    23bc:	ldr	r0, [r7, #16]
    23c0:	str	ip, [r1, #8]
    23c4:	ldr	r2, [r7, #28]
    23c8:	mov	r3, #0
    23cc:	mov	r1, #64	; 0x40
    23d0:	bl	d40 <add_conf_by_address@plt>
    23d4:	cmp	r8, #0
    23d8:	mov	r0, r4
    23dc:	beq	23ec <mo_kline+0x63c>
    23e0:	ldrb	r3, [r8]
    23e4:	cmp	r3, #0
    23e8:	bne	2588 <mo_kline+0x7d8>
    23ec:	bl	cd4 <get_oper_name@plt>
    23f0:	mov	r1, #60	; 0x3c
    23f4:	str	r0, [fp, #-120]	; 0xffffff88
    23f8:	mov	r0, r6
    23fc:	bl	2a80 <__divsi3>
    2400:	str	r9, [sp, #12]
    2404:	ldr	r2, [r7, #16]
    2408:	ldr	r3, [fp, #-120]	; 0xffffff88
    240c:	str	r2, [sp, #8]
    2410:	ldr	r2, [pc, #608]	; 2678 <mo_kline+0x8c8>
    2414:	ldr	r1, [r7, #28]
    2418:	add	r2, pc, r2
    241c:	str	r1, [sp, #4]
    2420:	mov	r1, #0
    2424:	mov	sl, r0
    2428:	str	r0, [sp]
    242c:	mov	r0, #256	; 0x100
    2430:	bl	cb0 <sendto_realops_snomask@plt>
    2434:	mov	r0, r4
    2438:	bl	cd4 <get_oper_name@plt>
    243c:	str	r9, [sp, #8]
    2440:	ldr	r2, [r7, #16]
    2444:	ldr	r1, [pc, #560]	; 267c <mo_kline+0x8cc>
    2448:	str	r2, [sp, #4]
    244c:	ldr	r2, [r7, #28]
    2450:	mov	r3, sl
    2454:	str	r2, [sp]
    2458:	add	r1, pc, r1
    245c:	mov	r2, r0
    2460:	mov	r0, #7
    2464:	bl	d88 <ilog@plt>
    2468:	mov	r0, r6
    246c:	mov	r1, #60	; 0x3c
    2470:	bl	2a80 <__divsi3>
    2474:	ldr	r3, [r7, #16]
    2478:	ldr	r1, [pc, #512]	; 2680 <mo_kline+0x8d0>
    247c:	str	r3, [sp]
    2480:	add	r1, pc, r1
    2484:	ldr	r3, [r7, #28]
    2488:	mov	r2, r0
    248c:	mov	r0, r4
    2490:	bl	db8 <sendto_one_notice@plt>
    2494:	ldr	r2, [pc, #488]	; 2684 <mo_kline+0x8d4>
    2498:	ldr	r3, [pc, #488]	; 2688 <mo_kline+0x8d8>
    249c:	ldr	r0, [r7, #40]	; 0x28
    24a0:	ldr	r2, [r5, r2]
    24a4:	ldr	r3, [r5, r3]
    24a8:	ldr	ip, [r7, #36]	; 0x24
    24ac:	ldr	r2, [r2]
    24b0:	ldr	r3, [r3]
    24b4:	ldr	lr, [r7, #44]	; 0x2c
    24b8:	cmp	r8, #0
    24bc:	add	r4, r4, #396	; 0x18c
    24c0:	orr	r2, r2, r3
    24c4:	sub	ip, ip, r0
    24c8:	sub	lr, lr, r0
    24cc:	ldr	r6, [r7, #28]
    24d0:	ldr	sl, [r7, #16]
    24d4:	beq	2548 <mo_kline+0x798>
    24d8:	ldr	r5, [pc, #428]	; 268c <mo_kline+0x8dc>
    24dc:	add	r5, pc, r5
    24e0:	ldr	r1, [pc, #424]	; 2690 <mo_kline+0x8e0>
    24e4:	mov	r3, #0
    24e8:	add	r1, pc, r1
    24ec:	str	r0, [sp, #16]
    24f0:	stm	sp, {r1, r4, r6, sl}
    24f4:	mov	r0, r3
    24f8:	str	r8, [sp, #36]	; 0x24
    24fc:	str	r5, [sp, #32]
    2500:	str	r9, [sp, #28]
    2504:	str	lr, [sp, #24]
    2508:	str	ip, [sp, #20]
    250c:	mov	r1, r3
    2510:	bl	d10 <sendto_server@plt>
    2514:	b	232c <mo_kline+0x57c>
    2518:	ldr	r2, [r1, #4]
    251c:	cmp	r2, #0
    2520:	streq	r3, [r1, #4]
    2524:	b	23ac <mo_kline+0x5fc>
    2528:	ldr	r3, [pc, #356]	; 2694 <mo_kline+0x8e4>
    252c:	ldr	r1, [pc, #356]	; 2698 <mo_kline+0x8e8>
    2530:	ldr	r0, [pc, #356]	; 269c <mo_kline+0x8ec>
    2534:	add	r3, pc, r3
    2538:	mov	r2, #144	; 0x90
    253c:	add	r1, pc, r1
    2540:	add	r0, pc, r0
    2544:	bl	e0c <__assert_fail@plt>
    2548:	ldr	r5, [pc, #336]	; 26a0 <mo_kline+0x8f0>
    254c:	add	r5, pc, r5
    2550:	mov	r8, r5
    2554:	b	24e0 <mo_kline+0x730>
    2558:	mov	r0, r8
    255c:	bl	1178 <rb_strdup>
    2560:	str	r0, [r7, #24]
    2564:	b	22f4 <mo_kline+0x544>
    2568:	mov	r8, #0
    256c:	b	22f4 <mo_kline+0x544>
    2570:	mov	r3, r8
    2574:	mov	r2, r9
    2578:	mov	r0, r4
    257c:	mov	r1, r7
    2580:	bl	133c <apply_kline>
    2584:	b	232c <mo_kline+0x57c>
    2588:	bl	cd4 <get_oper_name@plt>
    258c:	mov	r1, #60	; 0x3c
    2590:	str	r0, [fp, #-120]	; 0xffffff88
    2594:	mov	r0, r6
    2598:	bl	2a80 <__divsi3>
    259c:	str	r8, [sp, #16]
    25a0:	str	r9, [sp, #12]
    25a4:	ldr	r2, [r7, #16]
    25a8:	ldr	r3, [fp, #-120]	; 0xffffff88
    25ac:	str	r2, [sp, #8]
    25b0:	ldr	r2, [pc, #236]	; 26a4 <mo_kline+0x8f4>
    25b4:	ldr	r1, [r7, #28]
    25b8:	add	r2, pc, r2
    25bc:	str	r1, [sp, #4]
    25c0:	mov	r1, #0
    25c4:	mov	sl, r0
    25c8:	str	r0, [sp]
    25cc:	mov	r0, #256	; 0x100
    25d0:	bl	cb0 <sendto_realops_snomask@plt>
    25d4:	mov	r0, r4
    25d8:	bl	cd4 <get_oper_name@plt>
    25dc:	str	r8, [sp, #12]
    25e0:	str	r9, [sp, #8]
    25e4:	ldr	r2, [r7, #16]
    25e8:	ldr	r1, [pc, #184]	; 26a8 <mo_kline+0x8f8>
    25ec:	str	r2, [sp, #4]
    25f0:	ldr	r2, [r7, #28]
    25f4:	mov	r3, sl
    25f8:	str	r2, [sp]
    25fc:	add	r1, pc, r1
    2600:	mov	r2, r0
    2604:	mov	r0, #7
    2608:	bl	d88 <ilog@plt>
    260c:	b	2468 <mo_kline+0x6b8>
    2610:	.word	0x00012228
    2614:	.word	0x000000f0
    2618:	.word	0x000012b8
    261c:	.word	0x000000ec
    2620:	.word	0x0000128c
    2624:	.word	0x00001184
    2628:	.word	0x000000dc
    262c:	.word	0x000011cc
    2630:	.word	0x00001164
    2634:	.word	0x00001190
    2638:	.word	0x000010c8
    263c:	.word	0x00001088
    2640:	.word	0x00000cac
    2644:	.word	0x0000103c
    2648:	.word	0x00000f38
    264c:	.word	0x00000f0c
    2650:	.word	0x00000ec8
    2654:	.word	0x00000e58
    2658:	.word	0x00000f38
    265c:	.word	0x00000f70
    2660:	.word	0x000000d8
    2664:	.word	0x00000f50
    2668:	.word	0x00000ed4
    266c:	.word	0x00000186
    2670:	.word	0x00000e24
    2674:	.word	0x000000c8
    2678:	.word	0x00000de8
    267c:	.word	0x00000938
    2680:	.word	0x00000de4
    2684:	.word	0x000000cc
    2688:	.word	0x000000d0
    268c:	.word	0x00000bc0
    2690:	.word	0x00000da4
    2694:	.word	0x0000079c
    2698:	.word	0x00000c9c
    269c:	.word	0x00000cb4
    26a0:	.word	0x000009ac
    26a4:	.word	0x00000c78
    26a8:	.word	0x000007e0

000026ac <handle_remote_kline>:
    26ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    26b0:	add	fp, sp, #32
    26b4:	sub	sp, sp, #20
    26b8:	mov	r4, r0
    26bc:	ldr	r0, [fp, #4]
    26c0:	mov	r5, r1
    26c4:	mov	r6, r2
    26c8:	mov	r7, r3
    26cc:	bl	d64 <strlen@plt>
    26d0:	ldr	r1, [fp, #4]
    26d4:	ldr	r9, [pc, #572]	; 2918 <handle_remote_kline+0x26c>
    26d8:	add	r9, pc, r9
    26dc:	add	r3, r0, #15
    26e0:	bic	r3, r3, #7
    26e4:	sub	sp, sp, r3
    26e8:	add	r8, sp, #8
    26ec:	add	r2, r0, #1
    26f0:	mov	r0, r8
    26f4:	bl	c8c <memcpy@plt>
    26f8:	ldr	r2, [r4, #32]
    26fc:	cmp	r5, #0
    2700:	movgt	r3, #1
    2704:	movle	r3, #2
    2708:	add	r2, r2, #88	; 0x58
    270c:	add	r1, r4, #163	; 0xa3
    2710:	add	r0, r4, #152	; 0x98
    2714:	bl	de8 <find_shared_conf@plt>
    2718:	cmp	r0, #0
    271c:	bne	2728 <handle_remote_kline+0x7c>
    2720:	sub	sp, fp, #32
    2724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2728:	mov	r2, r7
    272c:	mov	r1, r6
    2730:	mov	r0, r4
    2734:	bl	f8c <valid_user_host>
    2738:	cmp	r0, #0
    273c:	beq	2720 <handle_remote_kline+0x74>
    2740:	mov	r1, r7
    2744:	mov	r0, r6
    2748:	bl	d28 <valid_wild_card@plt>
    274c:	cmp	r0, #0
    2750:	beq	28a4 <handle_remote_kline+0x1f8>
    2754:	mov	r3, r5
    2758:	mov	r2, r7
    275c:	mov	r1, r6
    2760:	mov	r0, r4
    2764:	bl	1010 <already_placed_kline>
    2768:	subs	sl, r0, #0
    276c:	bne	2720 <handle_remote_kline+0x74>
    2770:	bl	c14 <make_conf@plt>
    2774:	mov	r3, #64	; 0x40
    2778:	str	r3, [r0]
    277c:	mov	r9, r0
    2780:	bl	c38 <rb_current_time@plt>
    2784:	str	r0, [r9, #40]	; 0x28
    2788:	mov	r0, r6
    278c:	bl	d64 <strlen@plt>
    2790:	add	r2, r0, #1
    2794:	mov	r0, r2
    2798:	str	r2, [fp, #-40]	; 0xffffffd8
    279c:	bl	d34 <malloc@plt>
    27a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    27a4:	subs	r3, r0, #0
    27a8:	beq	28c4 <handle_remote_kline+0x218>
    27ac:	mov	r1, r6
    27b0:	str	r3, [fp, #-40]	; 0xffffffd8
    27b4:	bl	c8c <memcpy@plt>
    27b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    27bc:	mov	r0, r7
    27c0:	str	r3, [r9, #28]
    27c4:	bl	d64 <strlen@plt>
    27c8:	add	r6, r0, #1
    27cc:	mov	r0, r6
    27d0:	bl	d34 <malloc@plt>
    27d4:	subs	r3, r0, #0
    27d8:	str	r3, [fp, #-40]	; 0xffffffd8
    27dc:	beq	28c4 <handle_remote_kline+0x218>
    27e0:	mov	r2, r6
    27e4:	mov	r1, r7
    27e8:	bl	c8c <memcpy@plt>
    27ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
    27f0:	mov	r0, r4
    27f4:	str	r3, [r9, #16]
    27f8:	bl	cd4 <get_oper_name@plt>
    27fc:	bl	cf8 <operhash_add@plt>
    2800:	str	r0, [r9, #12]
    2804:	mov	r0, r8
    2808:	bl	d64 <strlen@plt>
    280c:	ldr	r3, [pc, #264]	; 291c <handle_remote_kline+0x270>
    2810:	mov	r1, #124	; 0x7c
    2814:	cmp	r0, r3
    2818:	mov	r0, r8
    281c:	strbhi	sl, [r8, #390]	; 0x186
    2820:	bl	d70 <strchr@plt>
    2824:	cmp	r0, #0
    2828:	beq	28c8 <handle_remote_kline+0x21c>
    282c:	mov	r6, r0
    2830:	mov	r3, #0
    2834:	strb	r3, [r6], #1
    2838:	cmp	r6, r3
    283c:	beq	28c8 <handle_remote_kline+0x21c>
    2840:	ldrb	r3, [r0, #1]
    2844:	cmp	r3, #0
    2848:	bne	28e8 <handle_remote_kline+0x23c>
    284c:	mov	r0, r8
    2850:	bl	d64 <strlen@plt>
    2854:	add	r7, r0, #1
    2858:	mov	r0, r7
    285c:	bl	d34 <malloc@plt>
    2860:	subs	sl, r0, #0
    2864:	beq	28c4 <handle_remote_kline+0x218>
    2868:	mov	r2, r7
    286c:	mov	r1, r8
    2870:	bl	c8c <memcpy@plt>
    2874:	cmp	r5, #0
    2878:	str	sl, [r9, #20]
    287c:	ble	28d0 <handle_remote_kline+0x224>
    2880:	str	r5, [sp]
    2884:	mov	r3, r6
    2888:	mov	r2, r8
    288c:	mov	r0, r4
    2890:	mov	r1, r9
    2894:	bl	11b0 <apply_tkline>
    2898:	mov	r0, r9
    289c:	bl	d04 <check_one_kline@plt>
    28a0:	b	2720 <handle_remote_kline+0x74>
    28a4:	ldr	r3, [pc, #116]	; 2920 <handle_remote_kline+0x274>
    28a8:	ldr	r1, [pc, #116]	; 2924 <handle_remote_kline+0x278>
    28ac:	mov	r0, r4
    28b0:	ldr	r3, [r9, r3]
    28b4:	add	r1, pc, r1
    28b8:	ldr	r2, [r3, #236]	; 0xec
    28bc:	bl	db8 <sendto_one_notice@plt>
    28c0:	b	2720 <handle_remote_kline+0x74>
    28c4:	bl	c98 <rb_outofmemory@plt>
    28c8:	mov	r6, #0
    28cc:	b	284c <handle_remote_kline+0x1a0>
    28d0:	mov	r3, r6
    28d4:	mov	r2, r8
    28d8:	mov	r0, r4
    28dc:	mov	r1, r9
    28e0:	bl	133c <apply_kline>
    28e4:	b	2898 <handle_remote_kline+0x1ec>
    28e8:	mov	r0, r6
    28ec:	bl	d64 <strlen@plt>
    28f0:	add	r7, r0, #1
    28f4:	mov	r0, r7
    28f8:	bl	d34 <malloc@plt>
    28fc:	subs	sl, r0, #0
    2900:	beq	28c4 <handle_remote_kline+0x218>
    2904:	mov	r2, r7
    2908:	mov	r1, r6
    290c:	bl	c8c <memcpy@plt>
    2910:	str	sl, [r9, #24]
    2914:	b	284c <handle_remote_kline+0x1a0>
    2918:	.word	0x00011920
    291c:	.word	0x00000186
    2920:	.word	0x000000f0
    2924:	.word	0x000008b8

00002928 <me_kline>:
    2928:	ldrh	r3, [r2, #80]	; 0x50
    292c:	push	{r4, r5, r6, lr}
    2930:	cmp	r3, #64	; 0x40
    2934:	ldr	r5, [sp, #16]
    2938:	popne	{r4, r5, r6, pc}
    293c:	ldr	r3, [r2, #24]
    2940:	cmp	r3, #0
    2944:	popeq	{r4, r5, r6, pc}
    2948:	mov	r4, r2
    294c:	mov	r1, #0
    2950:	mov	r2, #10
    2954:	ldr	r0, [r5, #4]
    2958:	bl	c50 <strtol@plt>
    295c:	ldr	r1, [r5, #16]
    2960:	ldr	r3, [r5, #12]
    2964:	ldr	r2, [r5, #8]
    2968:	str	r1, [sp, #16]
    296c:	mov	r1, r0
    2970:	mov	r0, r4
    2974:	pop	{r4, r5, r6, lr}
    2978:	b	26ac <handle_remote_kline>

0000297c <ms_kline>:
    297c:	push	{r4, r5, r6, r7, lr}
    2980:	sub	sp, sp, #28
    2984:	mov	r5, r3
    2988:	ldr	r4, [sp, #48]	; 0x30
    298c:	mov	r6, r2
    2990:	mov	r1, #0
    2994:	ldr	r0, [r4, #8]
    2998:	mov	r2, #10
    299c:	bl	c50 <strtol@plt>
    29a0:	cmp	r5, #5
    29a4:	ldr	r5, [pc, #192]	; 2a6c <ms_kline+0xf0>
    29a8:	add	r5, pc, r5
    29ac:	ble	29c8 <ms_kline+0x4c>
    29b0:	ldr	r3, [r4, #20]
    29b4:	cmp	r3, #0
    29b8:	beq	29c8 <ms_kline+0x4c>
    29bc:	ldrb	r2, [r3]
    29c0:	cmp	r2, #0
    29c4:	bne	29d0 <ms_kline+0x54>
    29c8:	add	sp, sp, #28
    29cc:	pop	{r4, r5, r6, r7, pc}
    29d0:	ldr	r1, [pc, #152]	; 2a70 <ms_kline+0xf4>
    29d4:	ldr	r2, [r4, #4]
    29d8:	ldr	ip, [r4, #16]
    29dc:	ldr	r1, [r5, r1]
    29e0:	mov	r7, r0
    29e4:	ldr	r0, [r4, #12]
    29e8:	str	r3, [sp, #16]
    29ec:	ldr	r3, [r1]
    29f0:	ldr	r1, [pc, #124]	; 2a74 <ms_kline+0xf8>
    29f4:	str	ip, [sp, #12]
    29f8:	add	r1, pc, r1
    29fc:	str	r1, [sp]
    2a00:	ldr	r1, [pc, #112]	; 2a78 <ms_kline+0xfc>
    2a04:	str	r0, [sp, #8]
    2a08:	add	r1, pc, r1
    2a0c:	mov	r0, r6
    2a10:	str	r7, [sp, #4]
    2a14:	bl	c08 <propagate_generic@plt>
    2a18:	ldr	r3, [pc, #92]	; 2a7c <ms_kline+0x100>
    2a1c:	ldr	r0, [r4, #4]
    2a20:	ldr	r1, [r5, r3]
    2a24:	add	r1, r1, #88	; 0x58
    2a28:	bl	d94 <match@plt>
    2a2c:	cmp	r0, #0
    2a30:	beq	29c8 <ms_kline+0x4c>
    2a34:	ldrh	r3, [r6, #80]	; 0x50
    2a38:	cmp	r3, #64	; 0x40
    2a3c:	bne	29c8 <ms_kline+0x4c>
    2a40:	ldr	r3, [r6, #24]
    2a44:	cmp	r3, #0
    2a48:	beq	29c8 <ms_kline+0x4c>
    2a4c:	add	r2, r4, #12
    2a50:	mov	r1, r7
    2a54:	ldm	r2, {r2, r3, ip}
    2a58:	mov	r0, r6
    2a5c:	str	ip, [sp, #48]	; 0x30
    2a60:	add	sp, sp, #28
    2a64:	pop	{r4, r5, r6, r7, lr}
    2a68:	b	26ac <handle_remote_kline>
    2a6c:	.word	0x00011650
    2a70:	.word	0x000000dc
    2a74:	.word	0x00000754
    2a78:	.word	0x000006fc
    2a7c:	.word	0x000000ec

00002a80 <__divsi3>:
    2a80:	cmp	r1, #0
    2a84:	beq	2c90 <.divsi3_skip_div0_test+0x208>

00002a88 <.divsi3_skip_div0_test>:
    2a88:	eor	ip, r0, r1
    2a8c:	rsbmi	r1, r1, #0
    2a90:	subs	r2, r1, #1
    2a94:	beq	2c5c <.divsi3_skip_div0_test+0x1d4>
    2a98:	movs	r3, r0
    2a9c:	rsbmi	r3, r0, #0
    2aa0:	cmp	r3, r1
    2aa4:	bls	2c68 <.divsi3_skip_div0_test+0x1e0>
    2aa8:	tst	r1, r2
    2aac:	beq	2c78 <.divsi3_skip_div0_test+0x1f0>
    2ab0:	clz	r2, r3
    2ab4:	clz	r0, r1
    2ab8:	sub	r2, r0, r2
    2abc:	rsbs	r2, r2, #31
    2ac0:	addne	r2, r2, r2, lsl #1
    2ac4:	mov	r0, #0
    2ac8:	addne	pc, pc, r2, lsl #2
    2acc:	nop			; (mov r0, r0)
    2ad0:	cmp	r3, r1, lsl #31
    2ad4:	adc	r0, r0, r0
    2ad8:	subcs	r3, r3, r1, lsl #31
    2adc:	cmp	r3, r1, lsl #30
    2ae0:	adc	r0, r0, r0
    2ae4:	subcs	r3, r3, r1, lsl #30
    2ae8:	cmp	r3, r1, lsl #29
    2aec:	adc	r0, r0, r0
    2af0:	subcs	r3, r3, r1, lsl #29
    2af4:	cmp	r3, r1, lsl #28
    2af8:	adc	r0, r0, r0
    2afc:	subcs	r3, r3, r1, lsl #28
    2b00:	cmp	r3, r1, lsl #27
    2b04:	adc	r0, r0, r0
    2b08:	subcs	r3, r3, r1, lsl #27
    2b0c:	cmp	r3, r1, lsl #26
    2b10:	adc	r0, r0, r0
    2b14:	subcs	r3, r3, r1, lsl #26
    2b18:	cmp	r3, r1, lsl #25
    2b1c:	adc	r0, r0, r0
    2b20:	subcs	r3, r3, r1, lsl #25
    2b24:	cmp	r3, r1, lsl #24
    2b28:	adc	r0, r0, r0
    2b2c:	subcs	r3, r3, r1, lsl #24
    2b30:	cmp	r3, r1, lsl #23
    2b34:	adc	r0, r0, r0
    2b38:	subcs	r3, r3, r1, lsl #23
    2b3c:	cmp	r3, r1, lsl #22
    2b40:	adc	r0, r0, r0
    2b44:	subcs	r3, r3, r1, lsl #22
    2b48:	cmp	r3, r1, lsl #21
    2b4c:	adc	r0, r0, r0
    2b50:	subcs	r3, r3, r1, lsl #21
    2b54:	cmp	r3, r1, lsl #20
    2b58:	adc	r0, r0, r0
    2b5c:	subcs	r3, r3, r1, lsl #20
    2b60:	cmp	r3, r1, lsl #19
    2b64:	adc	r0, r0, r0
    2b68:	subcs	r3, r3, r1, lsl #19
    2b6c:	cmp	r3, r1, lsl #18
    2b70:	adc	r0, r0, r0
    2b74:	subcs	r3, r3, r1, lsl #18
    2b78:	cmp	r3, r1, lsl #17
    2b7c:	adc	r0, r0, r0
    2b80:	subcs	r3, r3, r1, lsl #17
    2b84:	cmp	r3, r1, lsl #16
    2b88:	adc	r0, r0, r0
    2b8c:	subcs	r3, r3, r1, lsl #16
    2b90:	cmp	r3, r1, lsl #15
    2b94:	adc	r0, r0, r0
    2b98:	subcs	r3, r3, r1, lsl #15
    2b9c:	cmp	r3, r1, lsl #14
    2ba0:	adc	r0, r0, r0
    2ba4:	subcs	r3, r3, r1, lsl #14
    2ba8:	cmp	r3, r1, lsl #13
    2bac:	adc	r0, r0, r0
    2bb0:	subcs	r3, r3, r1, lsl #13
    2bb4:	cmp	r3, r1, lsl #12
    2bb8:	adc	r0, r0, r0
    2bbc:	subcs	r3, r3, r1, lsl #12
    2bc0:	cmp	r3, r1, lsl #11
    2bc4:	adc	r0, r0, r0
    2bc8:	subcs	r3, r3, r1, lsl #11
    2bcc:	cmp	r3, r1, lsl #10
    2bd0:	adc	r0, r0, r0
    2bd4:	subcs	r3, r3, r1, lsl #10
    2bd8:	cmp	r3, r1, lsl #9
    2bdc:	adc	r0, r0, r0
    2be0:	subcs	r3, r3, r1, lsl #9
    2be4:	cmp	r3, r1, lsl #8
    2be8:	adc	r0, r0, r0
    2bec:	subcs	r3, r3, r1, lsl #8
    2bf0:	cmp	r3, r1, lsl #7
    2bf4:	adc	r0, r0, r0
    2bf8:	subcs	r3, r3, r1, lsl #7
    2bfc:	cmp	r3, r1, lsl #6
    2c00:	adc	r0, r0, r0
    2c04:	subcs	r3, r3, r1, lsl #6
    2c08:	cmp	r3, r1, lsl #5
    2c0c:	adc	r0, r0, r0
    2c10:	subcs	r3, r3, r1, lsl #5
    2c14:	cmp	r3, r1, lsl #4
    2c18:	adc	r0, r0, r0
    2c1c:	subcs	r3, r3, r1, lsl #4
    2c20:	cmp	r3, r1, lsl #3
    2c24:	adc	r0, r0, r0
    2c28:	subcs	r3, r3, r1, lsl #3
    2c2c:	cmp	r3, r1, lsl #2
    2c30:	adc	r0, r0, r0
    2c34:	subcs	r3, r3, r1, lsl #2
    2c38:	cmp	r3, r1, lsl #1
    2c3c:	adc	r0, r0, r0
    2c40:	subcs	r3, r3, r1, lsl #1
    2c44:	cmp	r3, r1
    2c48:	adc	r0, r0, r0
    2c4c:	subcs	r3, r3, r1
    2c50:	cmp	ip, #0
    2c54:	rsbmi	r0, r0, #0
    2c58:	bx	lr
    2c5c:	teq	ip, r0
    2c60:	rsbmi	r0, r0, #0
    2c64:	bx	lr
    2c68:	movcc	r0, #0
    2c6c:	asreq	r0, ip, #31
    2c70:	orreq	r0, r0, #1
    2c74:	bx	lr
    2c78:	clz	r2, r1
    2c7c:	rsb	r2, r2, #31
    2c80:	cmp	ip, #0
    2c84:	lsr	r0, r3, r2
    2c88:	rsbmi	r0, r0, #0
    2c8c:	bx	lr
    2c90:	cmp	r0, #0
    2c94:	mvngt	r0, #-2147483648	; 0x80000000
    2c98:	movlt	r0, #-2147483648	; 0x80000000
    2c9c:	b	2cc0 <__aeabi_idiv0>

00002ca0 <__aeabi_idivmod>:
    2ca0:	cmp	r1, #0
    2ca4:	beq	2c90 <.divsi3_skip_div0_test+0x208>
    2ca8:	push	{r0, r1, lr}
    2cac:	bl	2a88 <.divsi3_skip_div0_test>
    2cb0:	pop	{r1, r2, lr}
    2cb4:	mul	r3, r2, r0
    2cb8:	sub	r1, r1, r3
    2cbc:	bx	lr

00002cc0 <__aeabi_idiv0>:
    2cc0:	push	{r1, lr}
    2cc4:	mov	r0, #8
    2cc8:	bl	c2c <raise@plt>
    2ccc:	pop	{r1, pc}

Disassembly of section .fini:

00002cd0 <_fini>:
    2cd0:	push	{r3, lr}
    2cd4:	pop	{r3, pc}
