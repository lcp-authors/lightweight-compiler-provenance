
../repos/ReadStat/.libs/libreadstat.so.1.1.4:     file format elf32-littlearm


Disassembly of section .init:

00003d20 <_init>:
    3d20:	push	{r3, lr}
    3d24:	bl	4568 <call_weak_fn>
    3d28:	pop	{r3, pc}

Disassembly of section .plt:

00003d2c <.plt>:
    3d2c:	push	{lr}		; (str lr, [sp, #-4]!)
    3d30:	ldr	lr, [pc, #4]	; 3d3c <.plt+0x10>
    3d34:	add	lr, pc, lr
    3d38:	ldr	pc, [lr, #8]!
    3d3c:	.word	0x000422c4

00003d40 <sas_validate_name@plt>:
    3d40:	add	ip, pc, #0, 12
    3d44:	add	ip, ip, #270336	; 0x42000
    3d48:	ldr	pc, [ip, #708]!	; 0x2c4

00003d4c <calloc@plt>:
    3d4c:	add	ip, pc, #0, 12
    3d50:	add	ip, ip, #270336	; 0x42000
    3d54:	ldr	pc, [ip, #700]!	; 0x2bc

00003d58 <readstat_set_seek_handler@plt>:
    3d58:	add	ip, pc, #0, 12
    3d5c:	add	ip, ip, #270336	; 0x42000
    3d60:	ldr	pc, [ip, #692]!	; 0x2b4

00003d64 <readstat_set_open_handler@plt>:
    3d64:	add	ip, pc, #0, 12
    3d68:	add	ip, ip, #270336	; 0x42000
    3d6c:	ldr	pc, [ip, #684]!	; 0x2ac

00003d70 <byteswap8@plt>:
    3d70:	add	ip, pc, #0, 12
    3d74:	add	ip, ip, #270336	; 0x42000
    3d78:	ldr	pc, [ip, #676]!	; 0x2a4

00003d7c <raise@plt>:
    3d7c:	add	ip, pc, #0, 12
    3d80:	add	ip, ip, #270336	; 0x42000
    3d84:	ldr	pc, [ip, #668]!	; 0x29c

00003d88 <byteswap4@plt>:
    3d88:	add	ip, pc, #0, 12
    3d8c:	add	ip, ip, #270336	; 0x42000
    3d90:	ldr	pc, [ip, #660]!	; 0x294

00003d94 <readstat_validate_metadata@plt>:
    3d94:	add	ip, pc, #0, 12
    3d98:	add	ip, ip, #270336	; 0x42000
    3d9c:	ldr	pc, [ip, #652]!	; 0x28c

00003da0 <readstat_sort_label_set@plt>:
    3da0:	add	ip, pc, #0, 12
    3da4:	add	ip, ip, #270336	; 0x42000
    3da8:	ldr	pc, [ip, #644]!	; 0x284

00003dac <por_ctx_free@plt>:
    3dac:	add	ip, pc, #0, 12
    3db0:	add	ip, ip, #270336	; 0x42000
    3db4:	ldr	pc, [ip, #636]!	; 0x27c

00003db8 <memreverse@plt>:
    3db8:	add	ip, pc, #0, 12
    3dbc:	add	ip, ip, #270336	; 0x42000
    3dc0:	ldr	pc, [ip, #628]!	; 0x274

00003dc4 <iconv_close@plt>:
    3dc4:	add	ip, pc, #0, 12
    3dc8:	add	ip, ip, #270336	; 0x42000
    3dcc:	ldr	pc, [ip, #620]!	; 0x26c

00003dd0 <readstat_write_spaces@plt>:
    3dd0:	add	ip, pc, #0, 12
    3dd4:	add	ip, ip, #270336	; 0x42000
    3dd8:	ldr	pc, [ip, #612]!	; 0x264

00003ddc <iconv@plt>:
    3ddc:	add	ip, pc, #0, 12
    3de0:	add	ip, ip, #270336	; 0x42000
    3de4:	ldr	pc, [ip, #604]!	; 0x25c

00003de8 <sav_parse_timestamp@plt>:
    3de8:	add	ip, pc, #0, 12
    3dec:	add	ip, ip, #270336	; 0x42000
    3df0:	ldr	pc, [ip, #596]!	; 0x254

00003df4 <strcmp@plt>:
    3df4:	add	ip, pc, #0, 12
    3df8:	add	ip, ip, #270336	; 0x42000
    3dfc:	ldr	pc, [ip, #588]!	; 0x24c

00003e00 <__cxa_finalize@plt>:
    3e00:	add	ip, pc, #0, 12
    3e04:	add	ip, ip, #270336	; 0x42000
    3e08:	ldr	pc, [ip, #580]!	; 0x244

00003e0c <ck_hash_table_wipe@plt>:
    3e0c:	add	ip, pc, #0, 12
    3e10:	add	ip, ip, #270336	; 0x42000
    3e14:	ldr	pc, [ip, #572]!	; 0x23c

00003e18 <readstat_type_class@plt>:
    3e18:	add	ip, pc, #0, 12
    3e1c:	add	ip, ip, #270336	; 0x42000
    3e20:	ldr	pc, [ip, #564]!	; 0x234

00003e24 <strtol@plt>:
    3e24:	add	ip, pc, #0, 12
    3e28:	add	ip, ip, #270336	; 0x42000
    3e2c:	ldr	pc, [ip, #556]!	; 0x22c

00003e30 <read@plt>:
    3e30:	add	ip, pc, #0, 12
    3e34:	add	ip, ip, #270336	; 0x42000
    3e38:	ldr	pc, [ip, #548]!	; 0x224

00003e3c <readstat_error_message@plt>:
    3e3c:	add	ip, pc, #0, 12
    3e40:	add	ip, ip, #270336	; 0x42000
    3e44:	ldr	pc, [ip, #540]!	; 0x21c

00003e48 <mktime@plt>:
    3e48:	add	ip, pc, #0, 12
    3e4c:	add	ip, ip, #270336	; 0x42000
    3e50:	ldr	pc, [ip, #532]!	; 0x214

00003e54 <spss_alignment_from_readstat_alignment@plt>:
    3e54:	add	ip, pc, #0, 12
    3e58:	add	ip, ip, #270336	; 0x42000
    3e5c:	ldr	pc, [ip, #524]!	; 0x20c

00003e60 <readstat_copy@plt>:
    3e60:	add	ip, pc, #0, 12
    3e64:	add	ip, ip, #270336	; 0x42000
    3e68:	ldr	pc, [ip, #516]!	; 0x204

00003e6c <dta_ctx_free@plt>:
    3e6c:	add	ip, pc, #0, 12
    3e70:	add	ip, ip, #270336	; 0x42000
    3e74:	ldr	pc, [ip, #508]!	; 0x1fc

00003e78 <deflateBound@plt>:
    3e78:	add	ip, pc, #0, 12
    3e7c:	add	ip, ip, #270336	; 0x42000
    3e80:	ldr	pc, [ip, #500]!	; 0x1f4

00003e84 <readstat_set_update_handler@plt>:
    3e84:	add	ip, pc, #0, 12
    3e88:	add	ip, ip, #270336	; 0x42000
    3e8c:	ldr	pc, [ip, #492]!	; 0x1ec

00003e90 <memmove@plt>:
    3e90:	add	ip, pc, #0, 12
    3e94:	add	ip, ip, #270336	; 0x42000
    3e98:	ldr	pc, [ip, #484]!	; 0x1e4

00003e9c <byteswap2@plt>:
    3e9c:	add	ip, pc, #0, 12
    3ea0:	add	ip, ip, #270336	; 0x42000
    3ea4:	ldr	pc, [ip, #476]!	; 0x1dc

00003ea8 <machine_is_little_endian@plt>:
    3ea8:	add	ip, pc, #0, 12
    3eac:	add	ip, ip, #270336	; 0x42000
    3eb0:	ldr	pc, [ip, #468]!	; 0x1d4

00003eb4 <free@plt>:
    3eb4:	add	ip, pc, #0, 12
    3eb8:	add	ip, ip, #270336	; 0x42000
    3ebc:	ldr	pc, [ip, #460]!	; 0x1cc

00003ec0 <readstat_value_is_system_missing@plt>:
    3ec0:	add	ip, pc, #0, 12
    3ec4:	add	ip, ip, #270336	; 0x42000
    3ec8:	ldr	pc, [ip, #452]!	; 0x1c4

00003ecc <sav_parse_time@plt>:
    3ecc:	add	ip, pc, #0, 12
    3ed0:	add	ip, ip, #270336	; 0x42000
    3ed4:	ldr	pc, [ip, #444]!	; 0x1bc

00003ed8 <readstat_variable_get_format@plt>:
    3ed8:	add	ip, pc, #0, 12
    3edc:	add	ip, ip, #270336	; 0x42000
    3ee0:	ldr	pc, [ip, #436]!	; 0x1b4

00003ee4 <readstat_value_is_defined_missing@plt>:
    3ee4:	add	ip, pc, #0, 12
    3ee8:	add	ip, ip, #270336	; 0x42000
    3eec:	ldr	pc, [ip, #428]!	; 0x1ac

00003ef0 <ones_to_twos_complement4@plt>:
    3ef0:	add	ip, pc, #0, 12
    3ef4:	add	ip, ip, #270336	; 0x42000
    3ef8:	ldr	pc, [ip, #420]!	; 0x1a4

00003efc <ones_to_twos_complement2@plt>:
    3efc:	add	ip, pc, #0, 12
    3f00:	add	ip, ip, #270336	; 0x42000
    3f04:	ldr	pc, [ip, #412]!	; 0x19c

00003f08 <sav_ctx_free@plt>:
    3f08:	add	ip, pc, #0, 12
    3f0c:	add	ip, ip, #270336	; 0x42000
    3f10:	ldr	pc, [ip, #404]!	; 0x194

00003f14 <memcpy@plt>:
    3f14:	add	ip, pc, #0, 12
    3f18:	add	ip, ip, #270336	; 0x42000
    3f1c:	ldr	pc, [ip, #396]!	; 0x18c

00003f20 <spss_parse_format@plt>:
    3f20:	add	ip, pc, #0, 12
    3f24:	add	ip, ip, #270336	; 0x42000
    3f28:	ldr	pc, [ip, #388]!	; 0x184

00003f2c <submit_columns@plt>:
    3f2c:	add	ip, pc, #0, 12
    3f30:	add	ip, ip, #270336	; 0x42000
    3f34:	ldr	pc, [ip, #380]!	; 0x17c

00003f38 <readstat_variable_get_missing_range_lo@plt>:
    3f38:	add	ip, pc, #0, 12
    3f3c:	add	ip, ip, #270336	; 0x42000
    3f40:	ldr	pc, [ip, #372]!	; 0x174

00003f44 <readstat_insert_string_ref@plt>:
    3f44:	add	ip, pc, #0, 12
    3f48:	add	ip, ip, #270336	; 0x42000
    3f4c:	ldr	pc, [ip, #364]!	; 0x16c

00003f50 <time@plt>:
    3f50:	add	ip, pc, #0, 12
    3f54:	add	ip, ip, #270336	; 0x42000
    3f58:	ldr	pc, [ip, #356]!	; 0x164

00003f5c <readstat_begin_writing_file@plt>:
    3f5c:	add	ip, pc, #0, 12
    3f60:	add	ip, ip, #270336	; 0x42000
    3f64:	ldr	pc, [ip, #348]!	; 0x15c

00003f68 <lseek@plt>:
    3f68:	add	ip, pc, #0, 12
    3f6c:	add	ip, ip, #270336	; 0x42000
    3f70:	ldr	pc, [ip, #340]!	; 0x154

00003f74 <unistd_io_init@plt>:
    3f74:	add	ip, pc, #0, 12
    3f78:	add	ip, ip, #270336	; 0x42000
    3f7c:	ldr	pc, [ip, #332]!	; 0x14c

00003f80 <pow@plt>:
    3f80:	add	ip, pc, #0, 12
    3f84:	add	ip, ip, #270336	; 0x42000
    3f88:	ldr	pc, [ip, #324]!	; 0x144

00003f8c <uncompress@plt>:
    3f8c:	add	ip, pc, #0, 12
    3f90:	add	ip, ip, #270336	; 0x42000
    3f94:	ldr	pc, [ip, #316]!	; 0x13c

00003f98 <memcmp@plt>:
    3f98:	add	ip, pc, #0, 12
    3f9c:	add	ip, ip, #270336	; 0x42000
    3fa0:	ldr	pc, [ip, #308]!	; 0x134

00003fa4 <readstat_string_value@plt>:
    3fa4:	add	ip, pc, #0, 12
    3fa8:	add	ip, ip, #270336	; 0x42000
    3fac:	ldr	pc, [ip, #300]!	; 0x12c

00003fb0 <readstat_schema_free@plt>:
    3fb0:	add	ip, pc, #0, 12
    3fb4:	add	ip, ip, #270336	; 0x42000
    3fb8:	ldr	pc, [ip, #292]!	; 0x124

00003fbc <readstat_calloc@plt>:
    3fbc:	add	ip, pc, #0, 12
    3fc0:	add	ip, ip, #270336	; 0x42000
    3fc4:	ldr	pc, [ip, #284]!	; 0x11c

00003fc8 <ck_str_hash_lookup@plt>:
    3fc8:	add	ip, pc, #0, 12
    3fcc:	add	ip, ip, #270336	; 0x42000
    3fd0:	ldr	pc, [ip, #276]!	; 0x114

00003fd4 <sav_compressed_row_bound@plt>:
    3fd4:	add	ip, pc, #0, 12
    3fd8:	add	ip, ip, #270336	; 0x42000
    3fdc:	ldr	pc, [ip, #268]!	; 0x10c

00003fe0 <ck_hash_table_grow@plt>:
    3fe0:	add	ip, pc, #0, 12
    3fe4:	add	ip, ip, #270336	; 0x42000
    3fe8:	ldr	pc, [ip, #260]!	; 0x104

00003fec <realloc@plt>:
    3fec:	add	ip, pc, #0, 12
    3ff0:	add	ip, ip, #270336	; 0x42000
    3ff4:	ldr	pc, [ip, #252]!	; 0xfc

00003ff8 <cnxptiee@plt>:
    3ff8:	add	ip, pc, #0, 12
    3ffc:	add	ip, ip, #270336	; 0x42000
    4000:	ldr	pc, [ip, #244]!	; 0xf4

00004004 <read_version_and_timestamp@plt>:
    4004:	add	ip, pc, #0, 12
    4008:	add	ip, ip, #270336	; 0x42000
    400c:	ldr	pc, [ip, #236]!	; 0xec

00004010 <readstat_write_zeros@plt>:
    4010:	add	ip, pc, #0, 12
    4014:	add	ip, ip, #270336	; 0x42000
    4018:	ldr	pc, [ip, #228]!	; 0xe4

0000401c <strcasecmp@plt>:
    401c:	add	ip, pc, #0, 12
    4020:	add	ip, ip, #270336	; 0x42000
    4024:	ldr	pc, [ip, #220]!	; 0xdc

00004028 <readstat_copy_quoted@plt>:
    4028:	add	ip, pc, #0, 12
    402c:	add	ip, ip, #270336	; 0x42000
    4030:	ldr	pc, [ip, #212]!	; 0xd4

00004034 <deflate@plt>:
    4034:	add	ip, pc, #0, 12
    4038:	add	ip, ip, #270336	; 0x42000
    403c:	ldr	pc, [ip, #204]!	; 0xcc

00004040 <submit_value_label@plt>:
    4040:	add	ip, pc, #0, 12
    4044:	add	ip, ip, #270336	; 0x42000
    4048:	ldr	pc, [ip, #196]!	; 0xc4

0000404c <sav_ctx_init@plt>:
    404c:	add	ip, pc, #0, 12
    4050:	add	ip, ip, #270336	; 0x42000
    4054:	ldr	pc, [ip, #188]!	; 0xbc

00004058 <ck_str_n_hash_lookup@plt>:
    4058:	add	ip, pc, #0, 12
    405c:	add	ip, ip, #270336	; 0x42000
    4060:	ldr	pc, [ip, #180]!	; 0xb4

00004064 <spss_measure_from_readstat_measure@plt>:
    4064:	add	ip, pc, #0, 12
    4068:	add	ip, ip, #270336	; 0x42000
    406c:	ldr	pc, [ip, #172]!	; 0xac

00004070 <sas_rle_decompress@plt>:
    4070:	add	ip, pc, #0, 12
    4074:	add	ip, ip, #270336	; 0x42000
    4078:	ldr	pc, [ip, #164]!	; 0xa4

0000407c <sav_parse_date@plt>:
    407c:	add	ip, pc, #0, 12
    4080:	add	ip, ip, #270336	; 0x42000
    4084:	ldr	pc, [ip, #156]!	; 0x9c

00004088 <xport_namestr_bswap@plt>:
    4088:	add	ip, pc, #0, 12
    408c:	add	ip, ip, #270336	; 0x42000
    4090:	ldr	pc, [ip, #148]!	; 0x94

00004094 <strcpy@plt>:
    4094:	add	ip, pc, #0, 12
    4098:	add	ip, ip, #270336	; 0x42000
    409c:	ldr	pc, [ip, #140]!	; 0x8c

000040a0 <zsav_current_block@plt>:
    40a0:	add	ip, pc, #0, 12
    40a4:	add	ip, ip, #270336	; 0x42000
    40a8:	ldr	pc, [ip, #132]!	; 0x84

000040ac <zsav_ctx_init@plt>:
    40ac:	add	ip, pc, #0, 12
    40b0:	add	ip, ip, #270336	; 0x42000
    40b4:	ldr	pc, [ip, #124]!	; 0x7c

000040b8 <sas_write_header@plt>:
    40b8:	add	ip, pc, #0, 12
    40bc:	add	ip, ip, #270336	; 0x42000
    40c0:	ldr	pc, [ip, #116]!	; 0x74

000040c4 <strtof@plt>:
    40c4:	add	ip, pc, #0, 12
    40c8:	add	ip, ip, #270336	; 0x42000
    40cc:	ldr	pc, [ip, #108]!	; 0x6c

000040d0 <readstat_schema_find_or_create_entry@plt>:
    40d0:	add	ip, pc, #0, 12
    40d4:	add	ip, ip, #270336	; 0x42000
    40d8:	ldr	pc, [ip, #100]!	; 0x64

000040dc <readstat_value_type_class@plt>:
    40dc:	add	ip, pc, #0, 12
    40e0:	add	ip, ip, #270336	; 0x42000
    40e4:	ldr	pc, [ip, #92]!	; 0x5c

000040e8 <readstat_set_io_ctx@plt>:
    40e8:	add	ip, pc, #0, 12
    40ec:	add	ip, ip, #270336	; 0x42000
    40f0:	ldr	pc, [ip, #84]!	; 0x54

000040f4 <spss_format_for_variable@plt>:
    40f4:	add	ip, pc, #0, 12
    40f8:	add	ip, ip, #270336	; 0x42000
    40fc:	ldr	pc, [ip, #76]!	; 0x4c

00004100 <readstat_parser_free@plt>:
    4100:	add	ip, pc, #0, 12
    4104:	add	ip, ip, #270336	; 0x42000
    4108:	ldr	pc, [ip, #68]!	; 0x44

0000410c <malloc@plt>:
    410c:	add	ip, pc, #0, 12
    4110:	add	ip, ip, #270336	; 0x42000
    4114:	ldr	pc, [ip, #60]!	; 0x3c

00004118 <zsav_add_block@plt>:
    4118:	add	ip, pc, #0, 12
    411c:	add	ip, ip, #270336	; 0x42000
    4120:	ldr	pc, [ip, #52]!	; 0x34

00004124 <deflateInit_@plt>:
    4124:	add	ip, pc, #0, 12
    4128:	add	ip, ip, #270336	; 0x42000
    412c:	ldr	pc, [ip, #44]!	; 0x2c

00004130 <iconv_open@plt>:
    4130:	add	ip, pc, #0, 12
    4134:	add	ip, ip, #270336	; 0x42000
    4138:	ldr	pc, [ip, #36]!	; 0x24

0000413c <strerror@plt>:
    413c:	add	ip, pc, #0, 12
    4140:	add	ip, ip, #270336	; 0x42000
    4144:	ldr	pc, [ip, #28]!

00004148 <sas_validate_tag@plt>:
    4148:	add	ip, pc, #0, 12
    414c:	add	ip, ip, #270336	; 0x42000
    4150:	ldr	pc, [ip, #20]!

00004154 <readstat_write_string@plt>:
    4154:	add	ip, pc, #0, 12
    4158:	add	ip, ip, #270336	; 0x42000
    415c:	ldr	pc, [ip, #12]!

00004160 <localtime@plt>:
    4160:	add	ip, pc, #0, 12
    4164:	add	ip, ip, #270336	; 0x42000
    4168:	ldr	pc, [ip, #4]!

0000416c <__ctype_tolower_loc@plt>:
    416c:	add	ip, pc, #0, 12
    4170:	add	ip, ip, #266240	; 0x41000
    4174:	ldr	pc, [ip, #4092]!	; 0xffc

00004178 <modf@plt>:
    4178:	add	ip, pc, #0, 12
    417c:	add	ip, ip, #266240	; 0x41000
    4180:	ldr	pc, [ip, #4084]!	; 0xff4

00004184 <__ctype_toupper_loc@plt>:
    4184:	add	ip, pc, #0, 12
    4188:	add	ip, ip, #266240	; 0x41000
    418c:	ldr	pc, [ip, #4076]!	; 0xfec

00004190 <ck_hash_table_init@plt>:
    4190:	add	ip, pc, #0, 12
    4194:	add	ip, ip, #266240	; 0x41000
    4198:	ldr	pc, [ip, #4068]!	; 0xfe4

0000419c <__gmon_start__@plt>:
    419c:	add	ip, pc, #0, 12
    41a0:	add	ip, ip, #266240	; 0x41000
    41a4:	ldr	pc, [ip, #4060]!	; 0xfdc

000041a8 <open@plt>:
    41a8:	add	ip, pc, #0, 12
    41ac:	add	ip, ip, #266240	; 0x41000
    41b0:	ldr	pc, [ip, #4052]!	; 0xfd4

000041b4 <readstat_double_value@plt>:
    41b4:	add	ip, pc, #0, 12
    41b8:	add	ip, ip, #266240	; 0x41000
    41bc:	ldr	pc, [ip, #4044]!	; 0xfcc

000041c0 <get_native@plt>:
    41c0:	add	ip, pc, #0, 12
    41c4:	add	ip, ip, #266240	; 0x41000
    41c8:	ldr	pc, [ip, #4036]!	; 0xfc4

000041cc <dta_ctx_init@plt>:
    41cc:	add	ip, pc, #0, 12
    41d0:	add	ip, ip, #266240	; 0x41000
    41d4:	ldr	pc, [ip, #4028]!	; 0xfbc

000041d8 <readstat_variable_get_type@plt>:
    41d8:	add	ip, pc, #0, 12
    41dc:	add	ip, ip, #266240	; 0x41000
    41e0:	ldr	pc, [ip, #4020]!	; 0xfb4

000041e4 <dta_type_info@plt>:
    41e4:	add	ip, pc, #0, 12
    41e8:	add	ip, ip, #266240	; 0x41000
    41ec:	ldr	pc, [ip, #4012]!	; 0xfac

000041f0 <sav_parse_long_variable_names_record@plt>:
    41f0:	add	ip, pc, #0, 12
    41f4:	add	ip, ip, #266240	; 0x41000
    41f8:	ldr	pc, [ip, #4004]!	; 0xfa4

000041fc <strlen@plt>:
    41fc:	add	ip, pc, #0, 12
    4200:	add	ip, ip, #266240	; 0x41000
    4204:	ldr	pc, [ip, #3996]!	; 0xf9c

00004208 <spss_varinfo_compare@plt>:
    4208:	add	ip, pc, #0, 12
    420c:	add	ip, ip, #266240	; 0x41000
    4210:	ldr	pc, [ip, #3988]!	; 0xf94

00004214 <sav_decompress_row@plt>:
    4214:	add	ip, pc, #0, 12
    4218:	add	ip, ip, #266240	; 0x41000
    421c:	ldr	pc, [ip, #3980]!	; 0xf8c

00004220 <readstat_variable_get_display_width@plt>:
    4220:	add	ip, pc, #0, 12
    4224:	add	ip, ip, #266240	; 0x41000
    4228:	ldr	pc, [ip, #3972]!	; 0xf84

0000422c <readstat_malloc@plt>:
    422c:	add	ip, pc, #0, 12
    4230:	add	ip, ip, #266240	; 0x41000
    4234:	ldr	pc, [ip, #3964]!	; 0xf7c

00004238 <readstat_convert@plt>:
    4238:	add	ip, pc, #0, 12
    423c:	add	ip, ip, #266240	; 0x41000
    4240:	ldr	pc, [ip, #3956]!	; 0xf74

00004244 <ck_hash_table_free@plt>:
    4244:	add	ip, pc, #0, 12
    4248:	add	ip, ip, #266240	; 0x41000
    424c:	ldr	pc, [ip, #3948]!	; 0xf6c

00004250 <readstat_por_parse_double@plt>:
    4250:	add	ip, pc, #0, 12
    4254:	add	ip, ip, #266240	; 0x41000
    4258:	ldr	pc, [ip, #3940]!	; 0xf64

0000425c <por_utf8_encode@plt>:
    425c:	add	ip, pc, #0, 12
    4260:	add	ip, ip, #266240	; 0x41000
    4264:	ldr	pc, [ip, #3932]!	; 0xf5c

00004268 <__errno_location@plt>:
    4268:	add	ip, pc, #0, 12
    426c:	add	ip, ip, #266240	; 0x41000
    4270:	ldr	pc, [ip, #3924]!	; 0xf54

00004274 <spss_init_variable_for_info@plt>:
    4274:	add	ip, pc, #0, 12
    4278:	add	ip, ip, #266240	; 0x41000
    427c:	ldr	pc, [ip, #3916]!	; 0xf4c

00004280 <snprintf@plt>:
    4280:	add	ip, pc, #0, 12
    4284:	add	ip, ip, #266240	; 0x41000
    4288:	ldr	pc, [ip, #3908]!	; 0xf44

0000428c <__isoc99_sscanf@plt>:
    428c:	add	ip, pc, #0, 12
    4290:	add	ip, ip, #266240	; 0x41000
    4294:	ldr	pc, [ip, #3900]!	; 0xf3c

00004298 <ck_str_n_hash_insert@plt>:
    4298:	add	ip, pc, #0, 12
    429c:	add	ip, ip, #266240	; 0x41000
    42a0:	ldr	pc, [ip, #3892]!	; 0xf34

000042a4 <memset@plt>:
    42a4:	add	ip, pc, #0, 12
    42a8:	add	ip, ip, #266240	; 0x41000
    42ac:	ldr	pc, [ip, #3884]!	; 0xf2c

000042b0 <spss_64bit_value@plt>:
    42b0:	add	ip, pc, #0, 12
    42b4:	add	ip, ip, #266240	; 0x41000
    42b8:	ldr	pc, [ip, #3876]!	; 0xf24

000042bc <strncpy@plt>:
    42bc:	add	ip, pc, #0, 12
    42c0:	add	ip, ip, #266240	; 0x41000
    42c4:	ldr	pc, [ip, #3868]!	; 0xf1c

000042c8 <readstat_variable_get_storage_width@plt>:
    42c8:	add	ip, pc, #0, 12
    42cc:	add	ip, ip, #266240	; 0x41000
    42d0:	ldr	pc, [ip, #3860]!	; 0xf14

000042d4 <sav_parse_very_long_string_record@plt>:
    42d4:	add	ip, pc, #0, 12
    42d8:	add	ip, ip, #266240	; 0x41000
    42dc:	ldr	pc, [ip, #3852]!	; 0xf0c

000042e0 <readstat_realloc@plt>:
    42e0:	add	ip, pc, #0, 12
    42e4:	add	ip, ip, #266240	; 0x41000
    42e8:	ldr	pc, [ip, #3844]!	; 0xf04

000042ec <dta_parse_timestamp@plt>:
    42ec:	add	ip, pc, #0, 12
    42f0:	add	ip, ip, #266240	; 0x41000
    42f4:	ldr	pc, [ip, #3836]!	; 0xefc

000042f8 <strtod@plt>:
    42f8:	add	ip, pc, #0, 12
    42fc:	add	ip, ip, #266240	; 0x41000
    4300:	ldr	pc, [ip, #3828]!	; 0xef4

00004304 <readstat_variable_get_missing_ranges_count@plt>:
    4304:	add	ip, pc, #0, 12
    4308:	add	ip, ip, #266240	; 0x41000
    430c:	ldr	pc, [ip, #3820]!	; 0xeec

00004310 <deflateEnd@plt>:
    4310:	add	ip, pc, #0, 12
    4314:	add	ip, ip, #266240	; 0x41000
    4318:	ldr	pc, [ip, #3812]!	; 0xee4

0000431c <readstat_variable_get_measure@plt>:
    431c:	add	ip, pc, #0, 12
    4320:	add	ip, ip, #266240	; 0x41000
    4324:	ldr	pc, [ip, #3804]!	; 0xedc

00004328 <readstat_variable_get_missing_range_hi@plt>:
    4328:	add	ip, pc, #0, 12
    432c:	add	ip, ip, #266240	; 0x41000
    4330:	ldr	pc, [ip, #3796]!	; 0xed4

00004334 <readstat_set_read_handler@plt>:
    4334:	add	ip, pc, #0, 12
    4338:	add	ip, ip, #266240	; 0x41000
    433c:	ldr	pc, [ip, #3788]!	; 0xecc

00004340 <readstat_value_type@plt>:
    4340:	add	ip, pc, #0, 12
    4344:	add	ip, ip, #266240	; 0x41000
    4348:	ldr	pc, [ip, #3780]!	; 0xec4

0000434c <sas_header_info_init@plt>:
    434c:	add	ip, pc, #0, 12
    4350:	add	ip, ip, #266240	; 0x41000
    4354:	ldr	pc, [ip, #3772]!	; 0xebc

00004358 <readstat_string_ref_init@plt>:
    4358:	add	ip, pc, #0, 12
    435c:	add	ip, ip, #266240	; 0x41000
    4360:	ldr	pc, [ip, #3764]!	; 0xeb4

00004364 <readstat_variable_get_name@plt>:
    4364:	add	ip, pc, #0, 12
    4368:	add	ip, ip, #266240	; 0x41000
    436c:	ldr	pc, [ip, #3756]!	; 0xeac

00004370 <ones_to_twos_complement1@plt>:
    4370:	add	ip, pc, #0, 12
    4374:	add	ip, ip, #266240	; 0x41000
    4378:	ldr	pc, [ip, #3748]!	; 0xea4

0000437c <readstat_get_variable@plt>:
    437c:	add	ip, pc, #0, 12
    4380:	add	ip, ip, #266240	; 0x41000
    4384:	ldr	pc, [ip, #3740]!	; 0xe9c

00004388 <spss_alignment_to_readstat_alignment@plt>:
    4388:	add	ip, pc, #0, 12
    438c:	add	ip, ip, #266240	; 0x41000
    4390:	ldr	pc, [ip, #3732]!	; 0xe94

00004394 <por_utf8_decode@plt>:
    4394:	add	ip, pc, #0, 12
    4398:	add	ip, ip, #266240	; 0x41000
    439c:	ldr	pc, [ip, #3724]!	; 0xe8c

000043a0 <sas_read_header@plt>:
    43a0:	add	ip, pc, #0, 12
    43a4:	add	ip, ip, #266240	; 0x41000
    43a8:	ldr	pc, [ip, #3716]!	; 0xe84

000043ac <spss_measure_to_readstat_measure@plt>:
    43ac:	add	ip, pc, #0, 12
    43b0:	add	ip, ip, #266240	; 0x41000
    43b4:	ldr	pc, [ip, #3708]!	; 0xe7c

000043b8 <sas_subheader_remainder@plt>:
    43b8:	add	ip, pc, #0, 12
    43bc:	add	ip, ip, #266240	; 0x41000
    43c0:	ldr	pc, [ip, #3700]!	; 0xe74

000043c4 <sas_read8@plt>:
    43c4:	add	ip, pc, #0, 12
    43c8:	add	ip, ip, #266240	; 0x41000
    43cc:	ldr	pc, [ip, #3692]!	; 0xe6c

000043d0 <sas_read2@plt>:
    43d0:	add	ip, pc, #0, 12
    43d4:	add	ip, ip, #266240	; 0x41000
    43d8:	ldr	pc, [ip, #3684]!	; 0xe64

000043dc <readstat_copy_lower@plt>:
    43dc:	add	ip, pc, #0, 12
    43e0:	add	ip, ip, #266240	; 0x41000
    43e4:	ldr	pc, [ip, #3676]!	; 0xe5c

000043e8 <sprintf@plt>:
    43e8:	add	ip, pc, #0, 12
    43ec:	add	ip, ip, #266240	; 0x41000
    43f0:	ldr	pc, [ip, #3668]!	; 0xe54

000043f4 <sas_read4@plt>:
    43f4:	add	ip, pc, #0, 12
    43f8:	add	ip, ip, #266240	; 0x41000
    43fc:	ldr	pc, [ip, #3660]!	; 0xe4c

00004400 <readstat_variable_get_label@plt>:
    4400:	add	ip, pc, #0, 12
    4404:	add	ip, ip, #266240	; 0x41000
    4408:	ldr	pc, [ip, #3652]!	; 0xe44

0000440c <spss_format@plt>:
    440c:	add	ip, pc, #0, 12
    4410:	add	ip, ip, #266240	; 0x41000
    4414:	ldr	pc, [ip, #3644]!	; 0xe3c

00004418 <spss_varinfo_free@plt>:
    4418:	add	ip, pc, #0, 12
    441c:	add	ip, ip, #266240	; 0x41000
    4420:	ldr	pc, [ip, #3636]!	; 0xe34

00004424 <readstat_get_label_set@plt>:
    4424:	add	ip, pc, #0, 12
    4428:	add	ip, ip, #266240	; 0x41000
    442c:	ldr	pc, [ip, #3628]!	; 0xe2c

00004430 <readstat_variable_get_alignment@plt>:
    4430:	add	ip, pc, #0, 12
    4434:	add	ip, ip, #266240	; 0x41000
    4438:	ldr	pc, [ip, #3620]!	; 0xe24

0000443c <qsort@plt>:
    443c:	add	ip, pc, #0, 12
    4440:	add	ip, ip, #266240	; 0x41000
    4444:	ldr	pc, [ip, #3612]!	; 0xe1c

00004448 <readstat_get_label_set_variable@plt>:
    4448:	add	ip, pc, #0, 12
    444c:	add	ip, ip, #266240	; 0x41000
    4450:	ldr	pc, [ip, #3604]!	; 0xe14

00004454 <readstat_write_bytes@plt>:
    4454:	add	ip, pc, #0, 12
    4458:	add	ip, ip, #266240	; 0x41000
    445c:	ldr	pc, [ip, #3596]!	; 0xe0c

00004460 <sav_compress_row@plt>:
    4460:	add	ip, pc, #0, 12
    4464:	add	ip, ip, #266240	; 0x41000
    4468:	ldr	pc, [ip, #3588]!	; 0xe04

0000446c <readstat_set_close_handler@plt>:
    446c:	add	ip, pc, #0, 12
    4470:	add	ip, ip, #266240	; 0x41000
    4474:	ldr	pc, [ip, #3580]!	; 0xdfc

00004478 <sas_fill_page@plt>:
    4478:	add	ip, pc, #0, 12
    447c:	add	ip, ip, #266240	; 0x41000
    4480:	ldr	pc, [ip, #3572]!	; 0xdf4

00004484 <sas_rle_compressed_len@plt>:
    4484:	add	ip, pc, #0, 12
    4488:	add	ip, ip, #266240	; 0x41000
    448c:	ldr	pc, [ip, #3564]!	; 0xdec

00004490 <por_ctx_init@plt>:
    4490:	add	ip, pc, #0, 12
    4494:	add	ip, ip, #266240	; 0x41000
    4498:	ldr	pc, [ip, #3556]!	; 0xde4

0000449c <readstat_validate_variable@plt>:
    449c:	add	ip, pc, #0, 12
    44a0:	add	ip, ip, #266240	; 0x41000
    44a4:	ldr	pc, [ip, #3548]!	; 0xddc

000044a8 <sas_assign_tag@plt>:
    44a8:	add	ip, pc, #0, 12
    44ac:	add	ip, ip, #266240	; 0x41000
    44b0:	ldr	pc, [ip, #3540]!	; 0xdd4

000044b4 <zsav_compress_row@plt>:
    44b4:	add	ip, pc, #0, 12
    44b8:	add	ip, ip, #266240	; 0x41000
    44bc:	ldr	pc, [ip, #3532]!	; 0xdcc

000044c0 <zsav_read_compressed_data@plt>:
    44c0:	add	ip, pc, #0, 12
    44c4:	add	ip, ip, #266240	; 0x41000
    44c8:	ldr	pc, [ip, #3524]!	; 0xdc4

000044cc <readstat_get_value_label@plt>:
    44cc:	add	ip, pc, #0, 12
    44d0:	add	ip, ip, #266240	; 0x41000
    44d4:	ldr	pc, [ip, #3516]!	; 0xdbc

000044d8 <sas_rle_compress@plt>:
    44d8:	add	ip, pc, #0, 12
    44dc:	add	ip, ip, #266240	; 0x41000
    44e0:	ldr	pc, [ip, #3508]!	; 0xdb4

000044e4 <readstat_write_line_padding@plt>:
    44e4:	add	ip, pc, #0, 12
    44e8:	add	ip, ip, #266240	; 0x41000
    44ec:	ldr	pc, [ip, #3500]!	; 0xdac

000044f0 <ck_str_hash_insert@plt>:
    44f0:	add	ip, pc, #0, 12
    44f4:	add	ip, ip, #266240	; 0x41000
    44f8:	ldr	pc, [ip, #3492]!	; 0xda4

000044fc <strncmp@plt>:
    44fc:	add	ip, pc, #0, 12
    4500:	add	ip, ip, #266240	; 0x41000
    4504:	ldr	pc, [ip, #3484]!	; 0xd9c

00004508 <byteswap_double@plt>:
    4508:	add	ip, pc, #0, 12
    450c:	add	ip, ip, #266240	; 0x41000
    4510:	ldr	pc, [ip, #3476]!	; 0xd94

00004514 <close@plt>:
    4514:	add	ip, pc, #0, 12
    4518:	add	ip, ip, #266240	; 0x41000
    451c:	ldr	pc, [ip, #3468]!	; 0xd8c

00004520 <readstat_write_bytes_as_lines@plt>:
    4520:	add	ip, pc, #0, 12
    4524:	add	ip, ip, #266240	; 0x41000
    4528:	ldr	pc, [ip, #3460]!	; 0xd84

0000452c <spss_missingness_for_info@plt>:
    452c:	add	ip, pc, #0, 12
    4530:	add	ip, ip, #266240	; 0x41000
    4534:	ldr	pc, [ip, #3452]!	; 0xd7c

00004538 <handle_variables@plt>:
    4538:	add	ip, pc, #0, 12
    453c:	add	ip, ip, #266240	; 0x41000
    4540:	ldr	pc, [ip, #3444]!	; 0xd74

00004544 <readstat_variable_get_type_class@plt>:
    4544:	add	ip, pc, #0, 12
    4548:	add	ip, ip, #266240	; 0x41000
    454c:	ldr	pc, [ip, #3436]!	; 0xd6c

00004550 <readstat_write_space_padded_string@plt>:
    4550:	add	ip, pc, #0, 12
    4554:	add	ip, ip, #266240	; 0x41000
    4558:	ldr	pc, [ip, #3428]!	; 0xd64

0000455c <dta_ctx_alloc@plt>:
    455c:	add	ip, pc, #0, 12
    4560:	add	ip, ip, #266240	; 0x41000
    4564:	ldr	pc, [ip, #3420]!	; 0xd5c

Disassembly of section .text:

00004568 <call_weak_fn>:
    4568:	ldr	r3, [pc, #20]	; 4584 <call_weak_fn+0x1c>
    456c:	ldr	r2, [pc, #20]	; 4588 <call_weak_fn+0x20>
    4570:	add	r3, pc, r3
    4574:	ldr	r2, [r3, r2]
    4578:	cmp	r2, #0
    457c:	bxeq	lr
    4580:	b	419c <__gmon_start__@plt>
    4584:	.word	0x00041a88
    4588:	.word	0x000002e8

0000458c <deregister_tm_clones>:
    458c:	ldr	r0, [pc, #44]	; 45c0 <deregister_tm_clones+0x34>
    4590:	ldr	r3, [pc, #44]	; 45c4 <deregister_tm_clones+0x38>
    4594:	add	r0, pc, r0
    4598:	add	r3, pc, r3
    459c:	cmp	r3, r0
    45a0:	ldr	r3, [pc, #32]	; 45c8 <deregister_tm_clones+0x3c>
    45a4:	add	r3, pc, r3
    45a8:	bxeq	lr
    45ac:	ldr	r2, [pc, #24]	; 45cc <deregister_tm_clones+0x40>
    45b0:	ldr	r3, [r3, r2]
    45b4:	cmp	r3, #0
    45b8:	bxeq	lr
    45bc:	bx	r3
    45c0:	.word	0x00043788
    45c4:	.word	0x00043784
    45c8:	.word	0x00041a54
    45cc:	.word	0x000002d0

000045d0 <register_tm_clones>:
    45d0:	ldr	r0, [pc, #56]	; 4610 <register_tm_clones+0x40>
    45d4:	ldr	r3, [pc, #56]	; 4614 <register_tm_clones+0x44>
    45d8:	add	r0, pc, r0
    45dc:	add	r3, pc, r3
    45e0:	sub	r1, r3, r0
    45e4:	ldr	r3, [pc, #44]	; 4618 <register_tm_clones+0x48>
    45e8:	asr	r1, r1, #2
    45ec:	add	r3, pc, r3
    45f0:	add	r1, r1, r1, lsr #31
    45f4:	asrs	r1, r1, #1
    45f8:	bxeq	lr
    45fc:	ldr	r2, [pc, #24]	; 461c <register_tm_clones+0x4c>
    4600:	ldr	r3, [r3, r2]
    4604:	cmp	r3, #0
    4608:	bxeq	lr
    460c:	bx	r3
    4610:	.word	0x00043744
    4614:	.word	0x00043740
    4618:	.word	0x00041a0c
    461c:	.word	0x00000310

00004620 <__do_global_dtors_aux>:
    4620:	ldr	r3, [pc, #76]	; 4674 <__do_global_dtors_aux+0x54>
    4624:	ldr	r2, [pc, #76]	; 4678 <__do_global_dtors_aux+0x58>
    4628:	add	r3, pc, r3
    462c:	add	r2, pc, r2
    4630:	ldrb	r3, [r3]
    4634:	cmp	r3, #0
    4638:	bxne	lr
    463c:	ldr	r3, [pc, #56]	; 467c <__do_global_dtors_aux+0x5c>
    4640:	push	{r4, lr}
    4644:	ldr	r3, [r2, r3]
    4648:	cmp	r3, #0
    464c:	beq	465c <__do_global_dtors_aux+0x3c>
    4650:	ldr	r3, [pc, #40]	; 4680 <__do_global_dtors_aux+0x60>
    4654:	ldr	r0, [pc, r3]
    4658:	bl	3e00 <__cxa_finalize@plt>
    465c:	bl	458c <deregister_tm_clones>
    4660:	ldr	r3, [pc, #28]	; 4684 <__do_global_dtors_aux+0x64>
    4664:	mov	r2, #1
    4668:	add	r3, pc, r3
    466c:	strb	r2, [r3]
    4670:	pop	{r4, pc}
    4674:	.word	0x000436f4
    4678:	.word	0x000419cc
    467c:	.word	0x000002cc
    4680:	.word	0x00041cbc
    4684:	.word	0x000436b4

00004688 <frame_dummy>:
    4688:	b	45d0 <register_tm_clones>
    468c:	andeq	r0, r0, r0

00004690 <ck_hash_str>:
    4690:	strd	r4, [sp, #-8]!
    4694:	mov	ip, r0
    4698:	ldrb	r4, [ip], #1
    469c:	cmp	r4, #0
    46a0:	beq	46e8 <ck_hash_str+0x58>
    46a4:	movw	r0, #5381	; 0x1505
    46a8:	mov	r1, #0
    46ac:	lsl	r2, r1, #5
    46b0:	orr	r2, r2, r0, lsr #27
    46b4:	lsl	r3, r0, #5
    46b8:	uxtb	r4, r4
    46bc:	mov	r5, #0
    46c0:	adds	r3, r3, r4
    46c4:	adc	r2, r2, r5
    46c8:	adds	r0, r0, r3
    46cc:	adc	r1, r1, r2
    46d0:	ldrb	r4, [ip], #1
    46d4:	cmp	r4, #0
    46d8:	bne	46ac <ck_hash_str+0x1c>
    46dc:	ldrd	r4, [sp]
    46e0:	add	sp, sp, #8
    46e4:	bx	lr
    46e8:	movw	r0, #5381	; 0x1505
    46ec:	mov	r1, #0
    46f0:	b	46dc <ck_hash_str+0x4c>

000046f4 <ck_str_n_hash_lookup>:
    46f4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    46f8:	strd	r6, [sp, #8]
    46fc:	strd	r8, [sp, #16]
    4700:	strd	sl, [sp, #24]
    4704:	str	lr, [sp, #32]
    4708:	sub	sp, sp, #12
    470c:	ldrd	r4, [r2, #8]
    4710:	orrs	r3, r4, r5
    4714:	moveq	r0, #0
    4718:	beq	4854 <ck_str_n_hash_lookup+0x160>
    471c:	sub	r3, r1, #1
    4720:	cmp	r3, #126	; 0x7e
    4724:	movhi	r0, #0
    4728:	bhi	4854 <ck_str_n_hash_lookup+0x160>
    472c:	mov	r6, r0
    4730:	ldrb	r4, [r6], #1
    4734:	cmp	r4, #0
    4738:	beq	4844 <ck_str_n_hash_lookup+0x150>
    473c:	movw	lr, #5381	; 0x1505
    4740:	mov	ip, #0
    4744:	lsl	r7, ip, #5
    4748:	orr	r7, r7, lr, lsr #27
    474c:	lsl	r3, lr, #5
    4750:	uxtb	r4, r4
    4754:	mov	r5, #0
    4758:	adds	r3, r3, r4
    475c:	adc	r7, r7, r5
    4760:	adds	lr, lr, r3
    4764:	adc	ip, ip, r7
    4768:	ldrb	r4, [r6], #1
    476c:	cmp	r4, #0
    4770:	bne	4744 <ck_str_n_hash_lookup+0x50>
    4774:	mov	r6, r2
    4778:	mov	sl, r1
    477c:	mov	fp, r0
    4780:	ldrd	r8, [r2]
    4784:	strd	r8, [sp]
    4788:	mov	r2, r8
    478c:	mov	r3, r9
    4790:	mov	r0, lr
    4794:	mov	r1, ip
    4798:	bl	25ba4 <__aeabi_uldivmod>
    479c:	mov	r4, r2
    47a0:	mov	r5, r3
    47a4:	mov	r2, r8
    47a8:	mov	r3, r9
    47ac:	subs	r0, r4, #1
    47b0:	sbc	r1, r5, #0
    47b4:	bl	25ba4 <__aeabi_uldivmod>
    47b8:	mov	r8, r2
    47bc:	mov	r9, r3
    47c0:	cmp	r5, r3
    47c4:	cmpeq	r4, r2
    47c8:	beq	4870 <ck_str_n_hash_lookup+0x17c>
    47cc:	ldr	r6, [r6, #16]
    47d0:	add	r3, r4, r4, lsl #5
    47d4:	lsl	r3, r3, #2
    47d8:	add	r7, r6, r3
    47dc:	ldrb	r3, [r6, r3]
    47e0:	cmp	r3, #0
    47e4:	beq	4878 <ck_str_n_hash_lookup+0x184>
    47e8:	add	sl, sl, #1
    47ec:	mov	r2, sl
    47f0:	mov	r1, fp
    47f4:	mov	r0, r7
    47f8:	bl	44fc <strncmp@plt>
    47fc:	cmp	r0, #0
    4800:	beq	4850 <ck_str_n_hash_lookup+0x15c>
    4804:	ldrd	r2, [sp]
    4808:	adds	r0, r4, #1
    480c:	adc	r1, r5, #0
    4810:	bl	25ba4 <__aeabi_uldivmod>
    4814:	mov	r4, r2
    4818:	mov	r5, r3
    481c:	cmp	r9, r3
    4820:	cmpeq	r8, r2
    4824:	beq	4880 <ck_str_n_hash_lookup+0x18c>
    4828:	add	r3, r2, r2, lsl #5
    482c:	add	r7, r6, r3, lsl #2
    4830:	ldrb	r3, [r6, r3, lsl #2]
    4834:	cmp	r3, #0
    4838:	bne	47ec <ck_str_n_hash_lookup+0xf8>
    483c:	mov	r0, #0
    4840:	b	4854 <ck_str_n_hash_lookup+0x160>
    4844:	movw	lr, #5381	; 0x1505
    4848:	mov	ip, #0
    484c:	b	4774 <ck_str_n_hash_lookup+0x80>
    4850:	ldr	r0, [r7, #128]	; 0x80
    4854:	add	sp, sp, #12
    4858:	ldrd	r4, [sp]
    485c:	ldrd	r6, [sp, #8]
    4860:	ldrd	r8, [sp, #16]
    4864:	ldrd	sl, [sp, #24]
    4868:	add	sp, sp, #32
    486c:	pop	{pc}		; (ldr pc, [sp], #4)
    4870:	mov	r0, #0
    4874:	b	4854 <ck_str_n_hash_lookup+0x160>
    4878:	mov	r0, #0
    487c:	b	4854 <ck_str_n_hash_lookup+0x160>
    4880:	mov	r0, #0
    4884:	b	4854 <ck_str_n_hash_lookup+0x160>

00004888 <ck_float_hash_lookup>:
    4888:	str	r4, [sp, #-8]!
    488c:	str	lr, [sp, #4]
    4890:	sub	sp, sp, #8
    4894:	vmov	r2, s0
    4898:	ubfx	lr, r2, #8, #8
    489c:	ubfx	ip, r2, #16, #8
    48a0:	ubfx	r1, r2, #24, #8
    48a4:	and	r3, lr, #2
    48a8:	and	r4, r1, #8
    48ac:	orr	r3, r3, r4
    48b0:	and	r4, r2, #1
    48b4:	orr	r3, r3, r4
    48b8:	and	r4, ip, #4
    48bc:	orr	r3, r3, r4
    48c0:	mvn	r3, r3, lsl #28
    48c4:	mvn	r3, r3, lsr #28
    48c8:	strb	r3, [sp, #4]
    48cc:	orr	r2, r2, #1
    48d0:	strb	r2, [sp]
    48d4:	orr	lr, lr, #2
    48d8:	strb	lr, [sp, #1]
    48dc:	orr	ip, ip, #4
    48e0:	strb	ip, [sp, #2]
    48e4:	orr	r1, r1, #8
    48e8:	strb	r1, [sp, #3]
    48ec:	mov	r3, #0
    48f0:	strb	r3, [sp, #5]
    48f4:	mov	r2, r0
    48f8:	mov	r1, #5
    48fc:	mov	r0, sp
    4900:	bl	4058 <ck_str_n_hash_lookup@plt>
    4904:	add	sp, sp, #8
    4908:	ldr	r4, [sp]
    490c:	add	sp, sp, #4
    4910:	pop	{pc}		; (ldr pc, [sp], #4)

00004914 <ck_double_hash_lookup>:
    4914:	strd	r4, [sp, #-20]!	; 0xffffffec
    4918:	strd	r6, [sp, #8]
    491c:	str	lr, [sp, #16]
    4920:	sub	sp, sp, #20
    4924:	vmov	r6, r7, d0
    4928:	uxtb	lr, r6
    492c:	ubfx	ip, r6, #8, #8
    4930:	ubfx	r1, r6, #16, #8
    4934:	ubfx	r2, r6, #24, #8
    4938:	and	r3, lr, #1
    493c:	and	r4, r2, #8
    4940:	orr	r3, r3, r4
    4944:	and	r4, ip, #2
    4948:	orr	r3, r3, r4
    494c:	and	r4, r1, #4
    4950:	orr	r3, r3, r4
    4954:	mvn	r4, #15
    4958:	orr	r3, r4, r3
    495c:	strb	r3, [sp, #12]
    4960:	orr	lr, lr, #1
    4964:	strb	lr, [sp, #4]
    4968:	orr	ip, ip, #2
    496c:	strb	ip, [sp, #5]
    4970:	orr	r1, r1, #4
    4974:	strb	r1, [sp, #6]
    4978:	orr	r2, r2, #8
    497c:	strb	r2, [sp, #7]
    4980:	uxtb	ip, r7
    4984:	ubfx	r1, r7, #8, #8
    4988:	ubfx	r2, r7, #16, #8
    498c:	ubfx	lr, r7, #24, #8
    4990:	and	r3, ip, #1
    4994:	and	r5, lr, #8
    4998:	orr	r3, r3, r5
    499c:	and	r5, r1, #2
    49a0:	orr	r3, r3, r5
    49a4:	and	r5, r2, #4
    49a8:	orr	r3, r3, r5
    49ac:	orr	r3, r4, r3
    49b0:	strb	r3, [sp, #13]
    49b4:	orr	ip, ip, #1
    49b8:	strb	ip, [sp, #8]
    49bc:	orr	r1, r1, #2
    49c0:	strb	r1, [sp, #9]
    49c4:	orr	r2, r2, #4
    49c8:	strb	r2, [sp, #10]
    49cc:	orr	r3, lr, #8
    49d0:	strb	r3, [sp, #11]
    49d4:	mov	r3, #0
    49d8:	strb	r3, [sp, #14]
    49dc:	mov	r2, r0
    49e0:	mov	r1, #10
    49e4:	add	r0, sp, #4
    49e8:	bl	4058 <ck_str_n_hash_lookup@plt>
    49ec:	add	sp, sp, #20
    49f0:	ldrd	r4, [sp]
    49f4:	ldrd	r6, [sp, #8]
    49f8:	add	sp, sp, #16
    49fc:	pop	{pc}		; (ldr pc, [sp], #4)

00004a00 <ck_str_hash_lookup>:
    4a00:	strd	r4, [sp, #-16]!
    4a04:	str	r6, [sp, #8]
    4a08:	str	lr, [sp, #12]
    4a0c:	mov	r4, r0
    4a10:	mov	r5, r1
    4a14:	bl	41fc <strlen@plt>
    4a18:	mov	r2, r5
    4a1c:	cmp	r0, #127	; 0x7f
    4a20:	movcc	r1, r0
    4a24:	movcs	r1, #127	; 0x7f
    4a28:	mov	r0, r4
    4a2c:	bl	4058 <ck_str_n_hash_lookup@plt>
    4a30:	ldrd	r4, [sp]
    4a34:	ldr	r6, [sp, #8]
    4a38:	add	sp, sp, #12
    4a3c:	pop	{pc}		; (ldr pc, [sp], #4)

00004a40 <ck_hash_table_free>:
    4a40:	str	r4, [sp, #-8]!
    4a44:	str	lr, [sp, #4]
    4a48:	mov	r4, r0
    4a4c:	ldr	r0, [r0, #16]
    4a50:	bl	3eb4 <free@plt>
    4a54:	mov	r0, r4
    4a58:	bl	3eb4 <free@plt>
    4a5c:	ldr	r4, [sp]
    4a60:	add	sp, sp, #4
    4a64:	pop	{pc}		; (ldr pc, [sp], #4)

00004a68 <ck_hash_table_wipe>:
    4a68:	str	r4, [sp, #-8]!
    4a6c:	str	lr, [sp, #4]
    4a70:	ldr	r2, [r0]
    4a74:	add	r2, r2, r2, lsl #5
    4a78:	lsl	r2, r2, #2
    4a7c:	mov	r1, #0
    4a80:	ldr	r0, [r0, #16]
    4a84:	bl	42a4 <memset@plt>
    4a88:	ldr	r4, [sp]
    4a8c:	add	sp, sp, #4
    4a90:	pop	{pc}		; (ldr pc, [sp], #4)

00004a94 <ck_hash_table_init>:
    4a94:	strd	r4, [sp, #-16]!
    4a98:	str	r6, [sp, #8]
    4a9c:	str	lr, [sp, #12]
    4aa0:	mov	r5, r0
    4aa4:	mov	r0, #24
    4aa8:	bl	410c <malloc@plt>
    4aac:	subs	r4, r0, #0
    4ab0:	beq	4af4 <ck_hash_table_init+0x60>
    4ab4:	lsl	r6, r5, #1
    4ab8:	add	r5, r5, r5, lsl #5
    4abc:	lsl	r0, r5, #3
    4ac0:	bl	410c <malloc@plt>
    4ac4:	mov	r5, r0
    4ac8:	str	r0, [r4, #16]
    4acc:	cmp	r0, #0
    4ad0:	beq	4b08 <ck_hash_table_init+0x74>
    4ad4:	str	r6, [r4]
    4ad8:	mov	r3, #0
    4adc:	str	r3, [r4, #4]
    4ae0:	mov	r2, #0
    4ae4:	mov	r3, #0
    4ae8:	strd	r2, [r4, #8]
    4aec:	mov	r0, r4
    4af0:	bl	3e0c <ck_hash_table_wipe@plt>
    4af4:	mov	r0, r4
    4af8:	ldrd	r4, [sp]
    4afc:	ldr	r6, [sp, #8]
    4b00:	add	sp, sp, #12
    4b04:	pop	{pc}		; (ldr pc, [sp], #4)
    4b08:	mov	r0, r4
    4b0c:	bl	3eb4 <free@plt>
    4b10:	mov	r4, r5
    4b14:	b	4af4 <ck_hash_table_init+0x60>

00004b18 <ck_hash_table_grow>:
    4b18:	strd	r4, [sp, #-32]!	; 0xffffffe0
    4b1c:	strd	r6, [sp, #8]
    4b20:	strd	r8, [sp, #16]
    4b24:	str	sl, [sp, #24]
    4b28:	str	lr, [sp, #28]
    4b2c:	mov	r7, r0
    4b30:	ldr	sl, [r0, #16]
    4b34:	ldrd	r8, [r0]
    4b38:	adds	r4, r8, r8
    4b3c:	adc	r5, r9, r9
    4b40:	mov	r1, #132	; 0x84
    4b44:	mov	r0, r4
    4b48:	bl	3d4c <calloc@plt>
    4b4c:	str	r0, [r7, #16]
    4b50:	cmp	r0, #0
    4b54:	beq	4bec <ck_hash_table_grow+0xd4>
    4b58:	str	r4, [r7]
    4b5c:	str	r5, [r7, #4]
    4b60:	mov	r2, #0
    4b64:	mov	r3, #0
    4b68:	strd	r2, [r7, #8]
    4b6c:	orrs	r3, r8, r9
    4b70:	beq	4bc8 <ck_hash_table_grow+0xb0>
    4b74:	add	r6, sl, #128	; 0x80
    4b78:	mov	r4, #0
    4b7c:	mov	r5, #0
    4b80:	b	4b9c <ck_hash_table_grow+0x84>
    4b84:	adds	r4, r4, #1
    4b88:	adc	r5, r5, #0
    4b8c:	add	r6, r6, #132	; 0x84
    4b90:	cmp	r5, r9
    4b94:	cmpeq	r4, r8
    4b98:	beq	4bc8 <ck_hash_table_grow+0xb0>
    4b9c:	ldrb	r3, [r6, #-128]	; 0xffffff80
    4ba0:	cmp	r3, #0
    4ba4:	beq	4b84 <ck_hash_table_grow+0x6c>
    4ba8:	mov	r0, r6
    4bac:	mov	r2, r7
    4bb0:	ldr	r1, [r0], #-128	; 0xffffff80
    4bb4:	bl	44f0 <ck_str_hash_insert@plt>
    4bb8:	cmp	r0, #0
    4bbc:	bne	4b84 <ck_hash_table_grow+0x6c>
    4bc0:	mvn	r0, #0
    4bc4:	b	4bd4 <ck_hash_table_grow+0xbc>
    4bc8:	mov	r0, sl
    4bcc:	bl	3eb4 <free@plt>
    4bd0:	mov	r0, #0
    4bd4:	ldrd	r4, [sp]
    4bd8:	ldrd	r6, [sp, #8]
    4bdc:	ldrd	r8, [sp, #16]
    4be0:	ldr	sl, [sp, #24]
    4be4:	add	sp, sp, #28
    4be8:	pop	{pc}		; (ldr pc, [sp], #4)
    4bec:	mvn	r0, #0
    4bf0:	b	4bd4 <ck_hash_table_grow+0xbc>

00004bf4 <ck_str_n_hash_insert>:
    4bf4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4bf8:	strd	r6, [sp, #8]
    4bfc:	strd	r8, [sp, #16]
    4c00:	strd	sl, [sp, #24]
    4c04:	str	lr, [sp, #32]
    4c08:	vpush	{d8}
    4c0c:	sub	sp, sp, #28
    4c10:	ldrd	r4, [r3]
    4c14:	orrs	ip, r4, r5
    4c18:	moveq	r0, #0
    4c1c:	beq	4e10 <ck_str_n_hash_insert+0x21c>
    4c20:	sub	ip, r1, #1
    4c24:	cmp	ip, #126	; 0x7e
    4c28:	movhi	r0, #0
    4c2c:	bhi	4e10 <ck_str_n_hash_insert+0x21c>
    4c30:	mov	r6, r3
    4c34:	str	r2, [sp, #20]
    4c38:	str	r1, [sp, #16]
    4c3c:	str	r0, [sp]
    4c40:	ldrd	r0, [r3, #8]
    4c44:	bl	25a5c <__aeabi_ul2d>
    4c48:	vmov	d8, r0, r1
    4c4c:	mov	r0, r4
    4c50:	mov	r1, r5
    4c54:	bl	25a5c <__aeabi_ul2d>
    4c58:	vldr	d7, [pc, #480]	; 4e40 <ck_str_n_hash_insert+0x24c>
    4c5c:	vmov	d6, r0, r1
    4c60:	vmul.f64	d7, d6, d7
    4c64:	vcmpe.f64	d8, d7
    4c68:	vmrs	APSR_nzcv, fpscr
    4c6c:	bge	4d20 <ck_str_n_hash_insert+0x12c>
    4c70:	ldr	r4, [sp]
    4c74:	ldrb	r2, [r4], #1
    4c78:	cmp	r2, #0
    4c7c:	beq	4d38 <ck_str_n_hash_insert+0x144>
    4c80:	movw	r0, #5381	; 0x1505
    4c84:	mov	r1, #0
    4c88:	mov	sl, r2
    4c8c:	lsl	r2, r1, #5
    4c90:	orr	r2, r2, r0, lsr #27
    4c94:	lsl	r3, r0, #5
    4c98:	uxtb	sl, sl
    4c9c:	mov	fp, #0
    4ca0:	adds	r3, r3, sl
    4ca4:	adc	r2, r2, fp
    4ca8:	adds	r0, r0, r3
    4cac:	adc	r1, r1, r2
    4cb0:	ldrb	sl, [r4], #1
    4cb4:	cmp	sl, #0
    4cb8:	bne	4c8c <ck_str_n_hash_insert+0x98>
    4cbc:	ldr	r7, [r6]
    4cc0:	ldr	sl, [r6, #4]
    4cc4:	str	sl, [sp, #4]
    4cc8:	mov	r2, r7
    4ccc:	mov	r3, sl
    4cd0:	bl	25ba4 <__aeabi_uldivmod>
    4cd4:	mov	r4, r2
    4cd8:	mov	r5, r3
    4cdc:	orrs	r3, r4, r5
    4ce0:	beq	4d44 <ck_str_n_hash_insert+0x150>
    4ce4:	mov	r2, r7
    4ce8:	mov	r3, sl
    4cec:	subs	r0, r4, #1
    4cf0:	sbc	r1, r5, #0
    4cf4:	bl	25ba4 <__aeabi_uldivmod>
    4cf8:	mov	r8, r2
    4cfc:	mov	r9, r3
    4d00:	cmp	r9, r5
    4d04:	cmpeq	r8, r4
    4d08:	beq	4e38 <ck_str_n_hash_insert+0x244>
    4d0c:	ldr	fp, [r6, #16]
    4d10:	ldr	r3, [sp, #16]
    4d14:	add	r3, r3, #1
    4d18:	str	r3, [sp, #12]
    4d1c:	b	4d94 <ck_str_n_hash_insert+0x1a0>
    4d20:	mov	r0, r6
    4d24:	bl	3fe0 <ck_hash_table_grow@plt>
    4d28:	cmn	r0, #1
    4d2c:	moveq	r0, #0
    4d30:	bne	4c70 <ck_str_n_hash_insert+0x7c>
    4d34:	b	4e10 <ck_str_n_hash_insert+0x21c>
    4d38:	movw	r0, #5381	; 0x1505
    4d3c:	mov	r1, #0
    4d40:	b	4cbc <ck_str_n_hash_insert+0xc8>
    4d44:	subs	r8, r7, #1
    4d48:	ldr	r3, [sp, #4]
    4d4c:	sbc	r9, r3, #0
    4d50:	b	4d00 <ck_str_n_hash_insert+0x10c>
    4d54:	ldr	r2, [sp, #12]
    4d58:	ldr	r1, [sp]
    4d5c:	mov	r0, sl
    4d60:	bl	44fc <strncmp@plt>
    4d64:	cmp	r0, #0
    4d68:	beq	4dd4 <ck_str_n_hash_insert+0x1e0>
    4d6c:	mov	r2, r7
    4d70:	ldr	r3, [sp, #4]
    4d74:	adds	r0, r4, #1
    4d78:	adc	r1, r5, #0
    4d7c:	bl	25ba4 <__aeabi_uldivmod>
    4d80:	mov	r4, r2
    4d84:	mov	r5, r3
    4d88:	cmp	r9, r3
    4d8c:	cmpeq	r8, r2
    4d90:	beq	4e30 <ck_str_n_hash_insert+0x23c>
    4d94:	add	r3, r4, r4, lsl #5
    4d98:	lsl	r0, r3, #2
    4d9c:	str	r0, [sp, #8]
    4da0:	add	sl, fp, r0
    4da4:	ldrb	r2, [fp, r3, lsl #2]
    4da8:	cmp	r2, #0
    4dac:	bne	4d54 <ck_str_n_hash_insert+0x160>
    4db0:	ldr	r2, [r6, #8]
    4db4:	ldr	r1, [r6, #12]
    4db8:	adds	r2, r2, #1
    4dbc:	adc	r1, r1, #0
    4dc0:	str	r2, [r6, #8]
    4dc4:	str	r1, [r6, #12]
    4dc8:	ldrb	r3, [fp, r3, lsl #2]
    4dcc:	cmp	r3, #0
    4dd0:	bne	4d54 <ck_str_n_hash_insert+0x160>
    4dd4:	ldr	r4, [sp, #16]
    4dd8:	mov	r2, r4
    4ddc:	ldr	r1, [sp]
    4de0:	mov	r0, sl
    4de4:	bl	3f14 <memcpy@plt>
    4de8:	ldr	r3, [r6, #16]
    4dec:	ldr	r1, [sp, #8]
    4df0:	add	r3, r3, r1
    4df4:	mov	r2, #0
    4df8:	strb	r2, [r3, r4]
    4dfc:	ldr	r3, [r6, #16]
    4e00:	add	r3, r3, r1
    4e04:	ldr	r2, [sp, #20]
    4e08:	str	r2, [r3, #128]	; 0x80
    4e0c:	mov	r0, #1
    4e10:	add	sp, sp, #28
    4e14:	vpop	{d8}
    4e18:	ldrd	r4, [sp]
    4e1c:	ldrd	r6, [sp, #8]
    4e20:	ldrd	r8, [sp, #16]
    4e24:	ldrd	sl, [sp, #24]
    4e28:	add	sp, sp, #32
    4e2c:	pop	{pc}		; (ldr pc, [sp], #4)
    4e30:	mov	r0, #0
    4e34:	b	4e10 <ck_str_n_hash_insert+0x21c>
    4e38:	mov	r0, #0
    4e3c:	b	4e10 <ck_str_n_hash_insert+0x21c>
    4e40:	.word	0x00000000
    4e44:	.word	0x3fe80000

00004e48 <ck_float_hash_insert>:
    4e48:	strd	r4, [sp, #-12]!
    4e4c:	str	lr, [sp, #8]
    4e50:	sub	sp, sp, #12
    4e54:	vmov	r2, s0
    4e58:	ubfx	r4, r2, #8, #8
    4e5c:	ubfx	lr, r2, #16, #8
    4e60:	ubfx	ip, r2, #24, #8
    4e64:	and	r3, r4, #2
    4e68:	and	r5, ip, #8
    4e6c:	orr	r3, r3, r5
    4e70:	and	r5, r2, #1
    4e74:	orr	r3, r3, r5
    4e78:	and	r5, lr, #4
    4e7c:	orr	r3, r3, r5
    4e80:	mvn	r3, r3, lsl #28
    4e84:	mvn	r3, r3, lsr #28
    4e88:	strb	r3, [sp, #4]
    4e8c:	orr	r2, r2, #1
    4e90:	strb	r2, [sp]
    4e94:	orr	r4, r4, #2
    4e98:	strb	r4, [sp, #1]
    4e9c:	orr	lr, lr, #4
    4ea0:	strb	lr, [sp, #2]
    4ea4:	orr	ip, ip, #8
    4ea8:	strb	ip, [sp, #3]
    4eac:	mov	r3, #0
    4eb0:	strb	r3, [sp, #5]
    4eb4:	mov	r3, r1
    4eb8:	mov	r2, r0
    4ebc:	mov	r1, #5
    4ec0:	mov	r0, sp
    4ec4:	bl	4298 <ck_str_n_hash_insert@plt>
    4ec8:	add	sp, sp, #12
    4ecc:	ldrd	r4, [sp]
    4ed0:	add	sp, sp, #8
    4ed4:	pop	{pc}		; (ldr pc, [sp], #4)

00004ed8 <ck_double_hash_insert>:
    4ed8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    4edc:	str	r6, [sp, #8]
    4ee0:	strd	r8, [sp, #12]
    4ee4:	str	lr, [sp, #20]
    4ee8:	sub	sp, sp, #16
    4eec:	vmov	r8, r9, d0
    4ef0:	uxtb	r6, r8
    4ef4:	ubfx	lr, r8, #8, #8
    4ef8:	ubfx	ip, r8, #16, #8
    4efc:	ubfx	r3, r8, #24, #8
    4f00:	and	r2, r6, #1
    4f04:	and	r4, r3, #8
    4f08:	orr	r2, r2, r4
    4f0c:	and	r4, lr, #2
    4f10:	orr	r2, r2, r4
    4f14:	and	r4, ip, #4
    4f18:	orr	r2, r2, r4
    4f1c:	mvn	r4, #15
    4f20:	orr	r2, r4, r2
    4f24:	strb	r2, [sp, #12]
    4f28:	orr	r6, r6, #1
    4f2c:	strb	r6, [sp, #4]
    4f30:	orr	lr, lr, #2
    4f34:	strb	lr, [sp, #5]
    4f38:	orr	ip, ip, #4
    4f3c:	strb	ip, [sp, #6]
    4f40:	orr	r3, r3, #8
    4f44:	strb	r3, [sp, #7]
    4f48:	uxtb	r5, r9
    4f4c:	ubfx	lr, r9, #8, #8
    4f50:	ubfx	ip, r9, #16, #8
    4f54:	ubfx	r3, r9, #24, #8
    4f58:	and	r2, r5, #1
    4f5c:	and	r6, r3, #8
    4f60:	orr	r2, r2, r6
    4f64:	and	r6, lr, #2
    4f68:	orr	r2, r2, r6
    4f6c:	and	r6, ip, #4
    4f70:	orr	r2, r2, r6
    4f74:	orr	r2, r4, r2
    4f78:	strb	r2, [sp, #13]
    4f7c:	orr	r5, r5, #1
    4f80:	strb	r5, [sp, #8]
    4f84:	orr	lr, lr, #2
    4f88:	strb	lr, [sp, #9]
    4f8c:	orr	ip, ip, #4
    4f90:	strb	ip, [sp, #10]
    4f94:	orr	r3, r3, #8
    4f98:	strb	r3, [sp, #11]
    4f9c:	mov	r3, #0
    4fa0:	strb	r3, [sp, #14]
    4fa4:	mov	r3, r1
    4fa8:	mov	r2, r0
    4fac:	mov	r1, #10
    4fb0:	add	r0, sp, #4
    4fb4:	bl	4298 <ck_str_n_hash_insert@plt>
    4fb8:	add	sp, sp, #16
    4fbc:	ldrd	r4, [sp]
    4fc0:	ldr	r6, [sp, #8]
    4fc4:	ldrd	r8, [sp, #12]
    4fc8:	add	sp, sp, #20
    4fcc:	pop	{pc}		; (ldr pc, [sp], #4)

00004fd0 <ck_str_hash_insert>:
    4fd0:	strd	r4, [sp, #-16]!
    4fd4:	str	r6, [sp, #8]
    4fd8:	str	lr, [sp, #12]
    4fdc:	mov	r4, r0
    4fe0:	mov	r5, r1
    4fe4:	mov	r6, r2
    4fe8:	bl	41fc <strlen@plt>
    4fec:	mov	r3, r6
    4ff0:	mov	r2, r5
    4ff4:	cmp	r0, #127	; 0x7f
    4ff8:	movcc	r1, r0
    4ffc:	movcs	r1, #127	; 0x7f
    5000:	mov	r0, r4
    5004:	bl	4298 <ck_str_n_hash_insert@plt>
    5008:	ldrd	r4, [sp]
    500c:	ldr	r6, [sp, #8]
    5010:	add	sp, sp, #12
    5014:	pop	{pc}		; (ldr pc, [sp], #4)

00005018 <machine_is_little_endian>:
    5018:	mov	r0, #1
    501c:	bx	lr

00005020 <ones_to_twos_complement1>:
    5020:	bx	lr

00005024 <ones_to_twos_complement2>:
    5024:	cmp	r0, #0
    5028:	addlt	r0, r0, #1
    502c:	sxthlt	r0, r0
    5030:	bx	lr

00005034 <ones_to_twos_complement4>:
    5034:	cmp	r0, #0
    5038:	addlt	r0, r0, #1
    503c:	bx	lr

00005040 <twos_to_ones_complement1>:
    5040:	bx	lr

00005044 <twos_to_ones_complement2>:
    5044:	cmp	r0, #0
    5048:	sublt	r0, r0, #1
    504c:	sxthlt	r0, r0
    5050:	bx	lr

00005054 <twos_to_ones_complement4>:
    5054:	cmp	r0, #0
    5058:	sublt	r0, r0, #1
    505c:	bx	lr

00005060 <byteswap2>:
    5060:	lsl	r3, r0, #8
    5064:	orr	r0, r3, r0, lsr #8
    5068:	uxth	r0, r0
    506c:	bx	lr

00005070 <byteswap4>:
    5070:	ror	r0, r0, #16
    5074:	lsr	r3, r0, #8
    5078:	bic	r3, r3, #65280	; 0xff00
    507c:	lsl	r0, r0, #8
    5080:	bic	r0, r0, #16711680	; 0xff0000
    5084:	bic	r0, r0, #255	; 0xff
    5088:	orr	r0, r3, r0
    508c:	bx	lr

00005090 <byteswap8>:
    5090:	movw	r2, #65535	; 0xffff
    5094:	and	ip, r0, r2
    5098:	and	r3, r1, r2
    509c:	lsl	r3, r3, #16
    50a0:	lsl	r2, ip, #16
    50a4:	orr	r3, r3, r1, lsr #16
    50a8:	orr	r2, r2, r0, lsr #16
    50ac:	lsr	r0, r3, #8
    50b0:	lsr	r1, r2, #8
    50b4:	bic	r0, r0, #-16777216	; 0xff000000
    50b8:	bic	r0, r0, #65280	; 0xff00
    50bc:	bic	r1, r1, #-16777216	; 0xff000000
    50c0:	bic	r1, r1, #65280	; 0xff00
    50c4:	lsl	r2, r2, #8
    50c8:	lsl	r3, r3, #8
    50cc:	bic	r3, r3, #16711680	; 0xff0000
    50d0:	bic	r3, r3, #255	; 0xff
    50d4:	bic	r2, r2, #16711680	; 0xff0000
    50d8:	bic	r2, r2, #255	; 0xff
    50dc:	orr	r0, r0, r3
    50e0:	orr	r1, r1, r2
    50e4:	bx	lr

000050e8 <byteswap_float>:
    50e8:	str	r4, [sp, #-8]!
    50ec:	str	lr, [sp, #4]
    50f0:	vmov	r0, s0
    50f4:	bl	3d88 <byteswap4@plt>
    50f8:	vmov	s0, r0
    50fc:	ldr	r4, [sp]
    5100:	add	sp, sp, #4
    5104:	pop	{pc}		; (ldr pc, [sp], #4)

00005108 <byteswap_double>:
    5108:	str	r4, [sp, #-8]!
    510c:	str	lr, [sp, #4]
    5110:	vmov	r0, r1, d0
    5114:	bl	3d70 <byteswap8@plt>
    5118:	vmov	d0, r0, r1
    511c:	ldr	r4, [sp]
    5120:	add	sp, sp, #4
    5124:	pop	{pc}		; (ldr pc, [sp], #4)

00005128 <readstat_convert>:
    5128:	strd	r4, [sp, #-16]!
    512c:	str	r6, [sp, #8]
    5130:	str	lr, [sp, #12]
    5134:	sub	sp, sp, #24
    5138:	str	r2, [sp, #12]
    513c:	str	r3, [sp, #8]
    5140:	subs	ip, r3, #0
    5144:	beq	51fc <readstat_convert+0xd4>
    5148:	sub	r4, ip, #1
    514c:	add	r3, r2, r4
    5150:	ldrb	r2, [r2, r4]
    5154:	cmp	r2, #32
    5158:	beq	5168 <readstat_convert+0x40>
    515c:	mov	r4, ip
    5160:	b	5184 <readstat_convert+0x5c>
    5164:	mov	r4, ip
    5168:	str	r4, [sp, #8]
    516c:	cmp	r4, #0
    5170:	beq	5184 <readstat_convert+0x5c>
    5174:	sub	ip, r4, #1
    5178:	ldrb	r2, [r3, #-1]!
    517c:	cmp	r2, #32
    5180:	beq	5164 <readstat_convert+0x3c>
    5184:	cmp	r1, #0
    5188:	moveq	r0, #19
    518c:	beq	51e8 <readstat_convert+0xc0>
    5190:	mov	r6, r1
    5194:	mov	r5, r0
    5198:	ldr	r3, [sp, #40]	; 0x28
    519c:	cmp	r3, #0
    51a0:	beq	5234 <readstat_convert+0x10c>
    51a4:	sub	r3, r1, #1
    51a8:	str	r3, [sp, #16]
    51ac:	str	r0, [sp, #20]
    51b0:	add	r3, sp, #16
    51b4:	str	r3, [sp]
    51b8:	add	r3, sp, #20
    51bc:	add	r2, sp, #8
    51c0:	add	r1, sp, #12
    51c4:	ldr	r0, [sp, #40]	; 0x28
    51c8:	bl	3ddc <iconv@plt>
    51cc:	cmn	r0, #1
    51d0:	beq	5204 <readstat_convert+0xdc>
    51d4:	ldr	r3, [sp, #16]
    51d8:	mvn	r3, r3
    51dc:	add	r1, r5, r6
    51e0:	mov	r0, #0
    51e4:	strb	r0, [r1, r3]
    51e8:	add	sp, sp, #24
    51ec:	ldrd	r4, [sp]
    51f0:	ldr	r6, [sp, #8]
    51f4:	add	sp, sp, #12
    51f8:	pop	{pc}		; (ldr pc, [sp], #4)
    51fc:	mov	r4, ip
    5200:	b	5184 <readstat_convert+0x5c>
    5204:	bl	4268 <__errno_location@plt>
    5208:	ldr	r3, [r0]
    520c:	cmp	r3, #7
    5210:	moveq	r0, #19
    5214:	beq	51e8 <readstat_convert+0xc0>
    5218:	cmp	r3, #84	; 0x54
    521c:	moveq	r0, #17
    5220:	beq	51e8 <readstat_convert+0xc0>
    5224:	cmp	r3, #22
    5228:	movne	r0, #16
    522c:	bne	51e8 <readstat_convert+0xc0>
    5230:	b	51d4 <readstat_convert+0xac>
    5234:	add	r3, r4, #1
    5238:	cmp	r3, r1
    523c:	movhi	r0, #19
    5240:	bhi	51e8 <readstat_convert+0xc0>
    5244:	mov	r2, r4
    5248:	ldr	r1, [sp, #12]
    524c:	mov	r0, r5
    5250:	bl	3f14 <memcpy@plt>
    5254:	mov	r0, #0
    5258:	strb	r0, [r5, r4]
    525c:	b	51e8 <readstat_convert+0xc0>

00005260 <readstat_error_message>:
    5260:	cmp	r0, #0
    5264:	beq	53b8 <readstat_error_message+0x158>
    5268:	cmp	r0, #1
    526c:	beq	53c0 <readstat_error_message+0x160>
    5270:	cmp	r0, #2
    5274:	beq	53cc <readstat_error_message+0x16c>
    5278:	cmp	r0, #3
    527c:	beq	53d8 <readstat_error_message+0x178>
    5280:	cmp	r0, #4
    5284:	beq	53e4 <readstat_error_message+0x184>
    5288:	cmp	r0, #5
    528c:	beq	53f0 <readstat_error_message+0x190>
    5290:	cmp	r0, #6
    5294:	beq	53fc <readstat_error_message+0x19c>
    5298:	cmp	r0, #7
    529c:	beq	5408 <readstat_error_message+0x1a8>
    52a0:	cmp	r0, #8
    52a4:	beq	5414 <readstat_error_message+0x1b4>
    52a8:	cmp	r0, #9
    52ac:	beq	5420 <readstat_error_message+0x1c0>
    52b0:	cmp	r0, #10
    52b4:	beq	542c <readstat_error_message+0x1cc>
    52b8:	cmp	r0, #11
    52bc:	beq	5438 <readstat_error_message+0x1d8>
    52c0:	cmp	r0, #12
    52c4:	beq	5444 <readstat_error_message+0x1e4>
    52c8:	cmp	r0, #13
    52cc:	beq	5450 <readstat_error_message+0x1f0>
    52d0:	cmp	r0, #14
    52d4:	beq	545c <readstat_error_message+0x1fc>
    52d8:	cmp	r0, #15
    52dc:	beq	5468 <readstat_error_message+0x208>
    52e0:	cmp	r0, #16
    52e4:	beq	5474 <readstat_error_message+0x214>
    52e8:	cmp	r0, #17
    52ec:	beq	5480 <readstat_error_message+0x220>
    52f0:	cmp	r0, #18
    52f4:	beq	548c <readstat_error_message+0x22c>
    52f8:	cmp	r0, #19
    52fc:	beq	5498 <readstat_error_message+0x238>
    5300:	cmp	r0, #20
    5304:	beq	54a4 <readstat_error_message+0x244>
    5308:	cmp	r0, #21
    530c:	beq	54b0 <readstat_error_message+0x250>
    5310:	cmp	r0, #22
    5314:	beq	54bc <readstat_error_message+0x25c>
    5318:	cmp	r0, #23
    531c:	beq	54c8 <readstat_error_message+0x268>
    5320:	cmp	r0, #24
    5324:	beq	54d4 <readstat_error_message+0x274>
    5328:	cmp	r0, #25
    532c:	beq	54e0 <readstat_error_message+0x280>
    5330:	cmp	r0, #26
    5334:	beq	54ec <readstat_error_message+0x28c>
    5338:	cmp	r0, #27
    533c:	beq	54f8 <readstat_error_message+0x298>
    5340:	cmp	r0, #28
    5344:	beq	5504 <readstat_error_message+0x2a4>
    5348:	cmp	r0, #38	; 0x26
    534c:	beq	5510 <readstat_error_message+0x2b0>
    5350:	cmp	r0, #29
    5354:	beq	551c <readstat_error_message+0x2bc>
    5358:	cmp	r0, #30
    535c:	beq	5528 <readstat_error_message+0x2c8>
    5360:	cmp	r0, #31
    5364:	beq	5534 <readstat_error_message+0x2d4>
    5368:	cmp	r0, #32
    536c:	beq	5540 <readstat_error_message+0x2e0>
    5370:	cmp	r0, #33	; 0x21
    5374:	beq	554c <readstat_error_message+0x2ec>
    5378:	cmp	r0, #34	; 0x22
    537c:	beq	5558 <readstat_error_message+0x2f8>
    5380:	cmp	r0, #35	; 0x23
    5384:	beq	5564 <readstat_error_message+0x304>
    5388:	cmp	r0, #36	; 0x24
    538c:	beq	5570 <readstat_error_message+0x310>
    5390:	cmp	r0, #37	; 0x25
    5394:	beq	557c <readstat_error_message+0x31c>
    5398:	cmp	r0, #39	; 0x27
    539c:	beq	53ac <readstat_error_message+0x14c>
    53a0:	ldr	r0, [pc, #480]	; 5588 <readstat_error_message+0x328>
    53a4:	add	r0, pc, r0
    53a8:	bx	lr
    53ac:	ldr	r0, [pc, #472]	; 558c <readstat_error_message+0x32c>
    53b0:	add	r0, pc, r0
    53b4:	bx	lr
    53b8:	mov	r0, #0
    53bc:	bx	lr
    53c0:	ldr	r0, [pc, #456]	; 5590 <readstat_error_message+0x330>
    53c4:	add	r0, pc, r0
    53c8:	bx	lr
    53cc:	ldr	r0, [pc, #448]	; 5594 <readstat_error_message+0x334>
    53d0:	add	r0, pc, r0
    53d4:	bx	lr
    53d8:	ldr	r0, [pc, #440]	; 5598 <readstat_error_message+0x338>
    53dc:	add	r0, pc, r0
    53e0:	bx	lr
    53e4:	ldr	r0, [pc, #432]	; 559c <readstat_error_message+0x33c>
    53e8:	add	r0, pc, r0
    53ec:	bx	lr
    53f0:	ldr	r0, [pc, #424]	; 55a0 <readstat_error_message+0x340>
    53f4:	add	r0, pc, r0
    53f8:	bx	lr
    53fc:	ldr	r0, [pc, #416]	; 55a4 <readstat_error_message+0x344>
    5400:	add	r0, pc, r0
    5404:	bx	lr
    5408:	ldr	r0, [pc, #408]	; 55a8 <readstat_error_message+0x348>
    540c:	add	r0, pc, r0
    5410:	bx	lr
    5414:	ldr	r0, [pc, #400]	; 55ac <readstat_error_message+0x34c>
    5418:	add	r0, pc, r0
    541c:	bx	lr
    5420:	ldr	r0, [pc, #392]	; 55b0 <readstat_error_message+0x350>
    5424:	add	r0, pc, r0
    5428:	bx	lr
    542c:	ldr	r0, [pc, #384]	; 55b4 <readstat_error_message+0x354>
    5430:	add	r0, pc, r0
    5434:	bx	lr
    5438:	ldr	r0, [pc, #376]	; 55b8 <readstat_error_message+0x358>
    543c:	add	r0, pc, r0
    5440:	bx	lr
    5444:	ldr	r0, [pc, #368]	; 55bc <readstat_error_message+0x35c>
    5448:	add	r0, pc, r0
    544c:	bx	lr
    5450:	ldr	r0, [pc, #360]	; 55c0 <readstat_error_message+0x360>
    5454:	add	r0, pc, r0
    5458:	bx	lr
    545c:	ldr	r0, [pc, #352]	; 55c4 <readstat_error_message+0x364>
    5460:	add	r0, pc, r0
    5464:	bx	lr
    5468:	ldr	r0, [pc, #344]	; 55c8 <readstat_error_message+0x368>
    546c:	add	r0, pc, r0
    5470:	bx	lr
    5474:	ldr	r0, [pc, #336]	; 55cc <readstat_error_message+0x36c>
    5478:	add	r0, pc, r0
    547c:	bx	lr
    5480:	ldr	r0, [pc, #328]	; 55d0 <readstat_error_message+0x370>
    5484:	add	r0, pc, r0
    5488:	bx	lr
    548c:	ldr	r0, [pc, #320]	; 55d4 <readstat_error_message+0x374>
    5490:	add	r0, pc, r0
    5494:	bx	lr
    5498:	ldr	r0, [pc, #312]	; 55d8 <readstat_error_message+0x378>
    549c:	add	r0, pc, r0
    54a0:	bx	lr
    54a4:	ldr	r0, [pc, #304]	; 55dc <readstat_error_message+0x37c>
    54a8:	add	r0, pc, r0
    54ac:	bx	lr
    54b0:	ldr	r0, [pc, #296]	; 55e0 <readstat_error_message+0x380>
    54b4:	add	r0, pc, r0
    54b8:	bx	lr
    54bc:	ldr	r0, [pc, #288]	; 55e4 <readstat_error_message+0x384>
    54c0:	add	r0, pc, r0
    54c4:	bx	lr
    54c8:	ldr	r0, [pc, #280]	; 55e8 <readstat_error_message+0x388>
    54cc:	add	r0, pc, r0
    54d0:	bx	lr
    54d4:	ldr	r0, [pc, #272]	; 55ec <readstat_error_message+0x38c>
    54d8:	add	r0, pc, r0
    54dc:	bx	lr
    54e0:	ldr	r0, [pc, #264]	; 55f0 <readstat_error_message+0x390>
    54e4:	add	r0, pc, r0
    54e8:	bx	lr
    54ec:	ldr	r0, [pc, #256]	; 55f4 <readstat_error_message+0x394>
    54f0:	add	r0, pc, r0
    54f4:	bx	lr
    54f8:	ldr	r0, [pc, #248]	; 55f8 <readstat_error_message+0x398>
    54fc:	add	r0, pc, r0
    5500:	bx	lr
    5504:	ldr	r0, [pc, #240]	; 55fc <readstat_error_message+0x39c>
    5508:	add	r0, pc, r0
    550c:	bx	lr
    5510:	ldr	r0, [pc, #232]	; 5600 <readstat_error_message+0x3a0>
    5514:	add	r0, pc, r0
    5518:	bx	lr
    551c:	ldr	r0, [pc, #224]	; 5604 <readstat_error_message+0x3a4>
    5520:	add	r0, pc, r0
    5524:	bx	lr
    5528:	ldr	r0, [pc, #216]	; 5608 <readstat_error_message+0x3a8>
    552c:	add	r0, pc, r0
    5530:	bx	lr
    5534:	ldr	r0, [pc, #208]	; 560c <readstat_error_message+0x3ac>
    5538:	add	r0, pc, r0
    553c:	bx	lr
    5540:	ldr	r0, [pc, #200]	; 5610 <readstat_error_message+0x3b0>
    5544:	add	r0, pc, r0
    5548:	bx	lr
    554c:	ldr	r0, [pc, #192]	; 5614 <readstat_error_message+0x3b4>
    5550:	add	r0, pc, r0
    5554:	bx	lr
    5558:	ldr	r0, [pc, #184]	; 5618 <readstat_error_message+0x3b8>
    555c:	add	r0, pc, r0
    5560:	bx	lr
    5564:	ldr	r0, [pc, #176]	; 561c <readstat_error_message+0x3bc>
    5568:	add	r0, pc, r0
    556c:	bx	lr
    5570:	ldr	r0, [pc, #168]	; 5620 <readstat_error_message+0x3c0>
    5574:	add	r0, pc, r0
    5578:	bx	lr
    557c:	ldr	r0, [pc, #160]	; 5624 <readstat_error_message+0x3c4>
    5580:	add	r0, pc, r0
    5584:	bx	lr
    5588:	.word	0x00020a0c
    558c:	.word	0x0002120c
    5590:	.word	0x000209fc
    5594:	.word	0x00020a04
    5598:	.word	0x00020a14
    559c:	.word	0x00020a24
    55a0:	.word	0x00020a54
    55a4:	.word	0x00020a78
    55a8:	.word	0x00020a94
    55ac:	.word	0x00020ab0
    55b0:	.word	0x00020ad8
    55b4:	.word	0x00020b00
    55b8:	.word	0x00020b24
    55bc:	.word	0x00020b4c
    55c0:	.word	0x00020b84
    55c4:	.word	0x00020b90
    55c8:	.word	0x00020bf0
    55cc:	.word	0x00020c00
    55d0:	.word	0x00020c28
    55d4:	.word	0x00020c68
    55d8:	.word	0x00020cac
    55dc:	.word	0x00020cf0
    55e0:	.word	0x00020d48
    55e4:	.word	0x00020d98
    55e8:	.word	0x00020de8
    55ec:	.word	0x00020e24
    55f0:	.word	0x00020e4c
    55f4:	.word	0x00020e74
    55f8:	.word	0x00020e98
    55fc:	.word	0x00020eb0
    5600:	.word	0x00020ed4
    5604:	.word	0x00020eec
    5608:	.word	0x00020f08
    560c:	.word	0x00020f38
    5610:	.word	0x00020f6c
    5614:	.word	0x00020f94
    5618:	.word	0x00020fcc
    561c:	.word	0x00020ff4
    5620:	.word	0x00020814
    5624:	.word	0x0002100c

00005628 <unistd_open_handler>:
    5628:	str	r4, [sp, #-8]!
    562c:	str	lr, [sp, #4]
    5630:	mov	r4, r1
    5634:	mov	r1, #0
    5638:	bl	41a8 <open@plt>
    563c:	str	r0, [r4]
    5640:	ldr	r4, [sp]
    5644:	add	sp, sp, #4
    5648:	pop	{pc}		; (ldr pc, [sp], #4)

0000564c <unistd_close_handler>:
    564c:	ldr	r0, [r0]
    5650:	cmn	r0, #1
    5654:	bne	5660 <unistd_close_handler+0x14>
    5658:	mov	r0, #0
    565c:	bx	lr
    5660:	str	r4, [sp, #-8]!
    5664:	str	lr, [sp, #4]
    5668:	bl	4514 <close@plt>
    566c:	ldr	r4, [sp]
    5670:	add	sp, sp, #4
    5674:	pop	{pc}		; (ldr pc, [sp], #4)

00005678 <unistd_seek_handler>:
    5678:	cmp	r1, #1
    567c:	beq	569c <unistd_seek_handler+0x24>
    5680:	cmp	r1, #0
    5684:	beq	56a4 <unistd_seek_handler+0x2c>
    5688:	cmp	r1, #2
    568c:	moveq	ip, #2
    5690:	beq	56a8 <unistd_seek_handler+0x30>
    5694:	mvn	r0, #0
    5698:	bx	lr
    569c:	mov	ip, #1
    56a0:	b	56a8 <unistd_seek_handler+0x30>
    56a4:	mov	ip, #0
    56a8:	str	r4, [sp, #-8]!
    56ac:	str	lr, [sp, #4]
    56b0:	mov	r3, r2
    56b4:	mov	r1, r0
    56b8:	mov	r2, ip
    56bc:	ldr	r0, [r3]
    56c0:	bl	3f68 <lseek@plt>
    56c4:	ldr	r4, [sp]
    56c8:	add	sp, sp, #4
    56cc:	pop	{pc}		; (ldr pc, [sp], #4)

000056d0 <unistd_update_handler>:
    56d0:	strd	r4, [sp, #-12]!
    56d4:	str	lr, [sp, #8]
    56d8:	sub	sp, sp, #12
    56dc:	subs	r4, r1, #0
    56e0:	moveq	r0, #0
    56e4:	beq	5730 <unistd_update_handler+0x60>
    56e8:	mov	r5, r2
    56ec:	str	r0, [sp, #4]
    56f0:	mov	r2, #1
    56f4:	mov	r1, #0
    56f8:	ldr	r0, [r3]
    56fc:	bl	3f68 <lseek@plt>
    5700:	cmn	r0, #1
    5704:	beq	5740 <unistd_update_handler+0x70>
    5708:	vmov	s15, r0
    570c:	vcvt.f64.s32	d7, s15
    5710:	vldr	s13, [sp, #4]
    5714:	vcvt.f64.s32	d0, s13
    5718:	mov	r0, r5
    571c:	vdiv.f64	d0, d7, d0
    5720:	blx	r4
    5724:	cmp	r0, #0
    5728:	moveq	r0, #0
    572c:	movne	r0, #4
    5730:	add	sp, sp, #12
    5734:	ldrd	r4, [sp]
    5738:	add	sp, sp, #8
    573c:	pop	{pc}		; (ldr pc, [sp], #4)
    5740:	mov	r0, #15
    5744:	b	5730 <unistd_update_handler+0x60>

00005748 <unistd_read_handler>:
    5748:	str	r4, [sp, #-8]!
    574c:	str	lr, [sp, #4]
    5750:	ldr	r3, [r2]
    5754:	mov	r2, r1
    5758:	mov	r1, r0
    575c:	mov	r0, r3
    5760:	bl	3e30 <read@plt>
    5764:	ldr	r4, [sp]
    5768:	add	sp, sp, #4
    576c:	pop	{pc}		; (ldr pc, [sp], #4)

00005770 <unistd_io_init>:
    5770:	strd	r4, [sp, #-16]!
    5774:	str	r6, [sp, #8]
    5778:	str	lr, [sp, #12]
    577c:	sub	sp, sp, #8
    5780:	mov	r6, r0
    5784:	ldr	r4, [pc, #232]	; 5874 <unistd_io_init+0x104>
    5788:	add	r4, pc, r4
    578c:	ldr	r3, [pc, #228]	; 5878 <unistd_io_init+0x108>
    5790:	ldr	r3, [r4, r3]
    5794:	str	r3, [sp, #4]
    5798:	mov	r1, r3
    579c:	bl	3d64 <readstat_set_open_handler@plt>
    57a0:	subs	r5, r0, #0
    57a4:	beq	57c0 <unistd_io_init+0x50>
    57a8:	mov	r0, r5
    57ac:	add	sp, sp, #8
    57b0:	ldrd	r4, [sp]
    57b4:	ldr	r6, [sp, #8]
    57b8:	add	sp, sp, #12
    57bc:	pop	{pc}		; (ldr pc, [sp], #4)
    57c0:	ldr	r3, [pc, #180]	; 587c <unistd_io_init+0x10c>
    57c4:	ldr	r3, [r4, r3]
    57c8:	str	r3, [sp, #4]
    57cc:	mov	r1, r3
    57d0:	mov	r0, r6
    57d4:	bl	446c <readstat_set_close_handler@plt>
    57d8:	subs	r5, r0, #0
    57dc:	bne	57a8 <unistd_io_init+0x38>
    57e0:	ldr	r3, [pc, #152]	; 5880 <unistd_io_init+0x110>
    57e4:	ldr	r3, [r4, r3]
    57e8:	str	r3, [sp, #4]
    57ec:	mov	r1, r3
    57f0:	mov	r0, r6
    57f4:	bl	3d58 <readstat_set_seek_handler@plt>
    57f8:	subs	r5, r0, #0
    57fc:	bne	57a8 <unistd_io_init+0x38>
    5800:	ldr	r3, [pc, #124]	; 5884 <unistd_io_init+0x114>
    5804:	ldr	r3, [r4, r3]
    5808:	str	r3, [sp, #4]
    580c:	mov	r1, r3
    5810:	mov	r0, r6
    5814:	bl	4334 <readstat_set_read_handler@plt>
    5818:	subs	r5, r0, #0
    581c:	bne	57a8 <unistd_io_init+0x38>
    5820:	ldr	r3, [pc, #96]	; 5888 <unistd_io_init+0x118>
    5824:	ldr	r3, [r4, r3]
    5828:	str	r3, [sp, #4]
    582c:	mov	r1, r3
    5830:	mov	r0, r6
    5834:	bl	3e84 <readstat_set_update_handler@plt>
    5838:	cmp	r0, #0
    583c:	bne	57a8 <unistd_io_init+0x38>
    5840:	mov	r1, #4
    5844:	mov	r0, #1
    5848:	bl	3d4c <calloc@plt>
    584c:	mov	r1, r0
    5850:	mvn	r3, #0
    5854:	str	r3, [r0]
    5858:	mov	r0, r6
    585c:	bl	40e8 <readstat_set_io_ctx@plt>
    5860:	mov	r5, r0
    5864:	ldr	r3, [r6, #32]
    5868:	mov	r2, #1
    586c:	str	r2, [r3, #24]
    5870:	b	57a8 <unistd_io_init+0x38>
    5874:	.word	0x00040870
    5878:	.word	0x000002e0
    587c:	.word	0x0000030c
    5880:	.word	0x00000308
    5884:	.word	0x000002c4
    5888:	.word	0x000002fc

0000588c <readstat_malloc>:
    588c:	sub	r2, r0, #1
    5890:	movw	r3, #61439	; 0xefff
    5894:	movt	r3, #255	; 0xff
    5898:	cmp	r2, r3
    589c:	bhi	58b8 <readstat_malloc+0x2c>
    58a0:	str	r4, [sp, #-8]!
    58a4:	str	lr, [sp, #4]
    58a8:	bl	410c <malloc@plt>
    58ac:	ldr	r4, [sp]
    58b0:	add	sp, sp, #4
    58b4:	pop	{pc}		; (ldr pc, [sp], #4)
    58b8:	mov	r0, #0
    58bc:	bx	lr

000058c0 <readstat_calloc>:
    58c0:	mul	r2, r1, r0
    58c4:	mov	r3, #61440	; 0xf000
    58c8:	movt	r3, #255	; 0xff
    58cc:	cmp	r2, r3
    58d0:	bhi	5908 <readstat_calloc+0x48>
    58d4:	sub	r2, r0, #1
    58d8:	movw	r3, #61439	; 0xefff
    58dc:	movt	r3, #255	; 0xff
    58e0:	sub	ip, r1, #1
    58e4:	cmp	ip, r3
    58e8:	cmpls	r2, r3
    58ec:	bhi	5910 <readstat_calloc+0x50>
    58f0:	str	r4, [sp, #-8]!
    58f4:	str	lr, [sp, #4]
    58f8:	bl	3d4c <calloc@plt>
    58fc:	ldr	r4, [sp]
    5900:	add	sp, sp, #4
    5904:	pop	{pc}		; (ldr pc, [sp], #4)
    5908:	mov	r0, #0
    590c:	bx	lr
    5910:	mov	r0, #0
    5914:	bx	lr

00005918 <readstat_realloc>:
    5918:	str	r4, [sp, #-8]!
    591c:	str	lr, [sp, #4]
    5920:	sub	r2, r1, #1
    5924:	movw	r3, #61439	; 0xefff
    5928:	movt	r3, #255	; 0xff
    592c:	cmp	r2, r3
    5930:	bhi	5944 <readstat_realloc+0x2c>
    5934:	bl	3fec <realloc@plt>
    5938:	ldr	r4, [sp]
    593c:	add	sp, sp, #4
    5940:	pop	{pc}		; (ldr pc, [sp], #4)
    5944:	cmp	r0, #0
    5948:	beq	5938 <readstat_realloc+0x20>
    594c:	bl	3eb4 <free@plt>
    5950:	mov	r0, #0
    5954:	b	5938 <readstat_realloc+0x20>

00005958 <readstat_get_row_count>:
    5958:	ldr	r0, [r0]
    595c:	bx	lr

00005960 <readstat_get_var_count>:
    5960:	ldr	r0, [r0, #8]
    5964:	bx	lr

00005968 <readstat_get_creation_time>:
    5968:	ldr	r0, [r0, #16]
    596c:	bx	lr

00005970 <readstat_get_modified_time>:
    5970:	ldr	r0, [r0, #20]
    5974:	bx	lr

00005978 <readstat_get_file_format_version>:
    5978:	ldr	r0, [r0, #24]
    597c:	bx	lr

00005980 <readstat_get_file_format_is_64bit>:
    5980:	ldrb	r0, [r0, #52]	; 0x34
    5984:	and	r0, r0, #1
    5988:	bx	lr

0000598c <readstat_get_compression>:
    598c:	ldr	r0, [r0, #32]
    5990:	bx	lr

00005994 <readstat_get_endianness>:
    5994:	ldr	r0, [r0, #36]	; 0x24
    5998:	bx	lr

0000599c <readstat_get_file_label>:
    599c:	ldr	r0, [r0, #44]	; 0x2c
    59a0:	bx	lr

000059a4 <readstat_get_file_encoding>:
    59a4:	ldr	r0, [r0, #48]	; 0x30
    59a8:	bx	lr

000059ac <readstat_get_table_name>:
    59ac:	ldr	r0, [r0, #40]	; 0x28
    59b0:	bx	lr

000059b4 <readstat_set_metadata_handler>:
    59b4:	str	r1, [r0]
    59b8:	mov	r0, #0
    59bc:	bx	lr

000059c0 <readstat_set_note_handler>:
    59c0:	str	r1, [r0, #4]
    59c4:	mov	r0, #0
    59c8:	bx	lr

000059cc <readstat_set_variable_handler>:
    59cc:	str	r1, [r0, #8]
    59d0:	mov	r0, #0
    59d4:	bx	lr

000059d8 <readstat_set_value_handler>:
    59d8:	str	r1, [r0, #16]
    59dc:	mov	r0, #0
    59e0:	bx	lr

000059e4 <readstat_set_value_label_handler>:
    59e4:	str	r1, [r0, #20]
    59e8:	mov	r0, #0
    59ec:	bx	lr

000059f0 <readstat_set_error_handler>:
    59f0:	str	r1, [r0, #24]
    59f4:	mov	r0, #0
    59f8:	bx	lr

000059fc <readstat_set_progress_handler>:
    59fc:	str	r1, [r0, #28]
    5a00:	mov	r0, #0
    5a04:	bx	lr

00005a08 <readstat_set_fweight_handler>:
    5a08:	str	r1, [r0, #12]
    5a0c:	mov	r0, #0
    5a10:	bx	lr

00005a14 <readstat_set_open_handler>:
    5a14:	ldr	r3, [r0, #32]
    5a18:	str	r1, [r3]
    5a1c:	mov	r0, #0
    5a20:	bx	lr

00005a24 <readstat_set_close_handler>:
    5a24:	ldr	r3, [r0, #32]
    5a28:	str	r1, [r3, #4]
    5a2c:	mov	r0, #0
    5a30:	bx	lr

00005a34 <readstat_set_seek_handler>:
    5a34:	ldr	r3, [r0, #32]
    5a38:	str	r1, [r3, #8]
    5a3c:	mov	r0, #0
    5a40:	bx	lr

00005a44 <readstat_set_read_handler>:
    5a44:	ldr	r3, [r0, #32]
    5a48:	str	r1, [r3, #12]
    5a4c:	mov	r0, #0
    5a50:	bx	lr

00005a54 <readstat_set_update_handler>:
    5a54:	ldr	r3, [r0, #32]
    5a58:	str	r1, [r3, #16]
    5a5c:	mov	r0, #0
    5a60:	bx	lr

00005a64 <readstat_set_io_ctx>:
    5a64:	strd	r4, [sp, #-16]!
    5a68:	str	r6, [sp, #8]
    5a6c:	str	lr, [sp, #12]
    5a70:	mov	r4, r0
    5a74:	mov	r5, r1
    5a78:	ldr	r3, [r0, #32]
    5a7c:	ldr	r2, [r3, #24]
    5a80:	cmp	r2, #0
    5a84:	bne	5aac <readstat_set_io_ctx+0x48>
    5a88:	ldr	r3, [r4, #32]
    5a8c:	str	r5, [r3, #20]
    5a90:	ldr	r3, [r4, #32]
    5a94:	mov	r0, #0
    5a98:	str	r0, [r3, #24]
    5a9c:	ldrd	r4, [sp]
    5aa0:	ldr	r6, [sp, #8]
    5aa4:	add	sp, sp, #12
    5aa8:	pop	{pc}		; (ldr pc, [sp], #4)
    5aac:	ldr	r0, [r3, #20]
    5ab0:	bl	3eb4 <free@plt>
    5ab4:	b	5a88 <readstat_set_io_ctx+0x24>

00005ab8 <readstat_parser_free>:
    5ab8:	str	r4, [sp, #-8]!
    5abc:	str	lr, [sp, #4]
    5ac0:	subs	r4, r0, #0
    5ac4:	beq	5af0 <readstat_parser_free+0x38>
    5ac8:	ldr	r3, [r4, #32]
    5acc:	cmp	r3, #0
    5ad0:	beq	5ae8 <readstat_parser_free+0x30>
    5ad4:	mov	r1, #0
    5ad8:	mov	r0, r4
    5adc:	bl	40e8 <readstat_set_io_ctx@plt>
    5ae0:	ldr	r0, [r4, #32]
    5ae4:	bl	3eb4 <free@plt>
    5ae8:	mov	r0, r4
    5aec:	bl	3eb4 <free@plt>
    5af0:	ldr	r4, [sp]
    5af4:	add	sp, sp, #4
    5af8:	pop	{pc}		; (ldr pc, [sp], #4)

00005afc <readstat_parser_init>:
    5afc:	str	r4, [sp, #-8]!
    5b00:	str	lr, [sp, #4]
    5b04:	mov	r1, #52	; 0x34
    5b08:	mov	r0, #1
    5b0c:	bl	3d4c <calloc@plt>
    5b10:	mov	r4, r0
    5b14:	mov	r1, #28
    5b18:	mov	r0, #1
    5b1c:	bl	3d4c <calloc@plt>
    5b20:	str	r0, [r4, #32]
    5b24:	mov	r0, r4
    5b28:	bl	3f74 <unistd_io_init@plt>
    5b2c:	cmp	r0, #0
    5b30:	bne	5b50 <readstat_parser_init+0x54>
    5b34:	ldr	r3, [pc, #36]	; 5b60 <readstat_parser_init+0x64>
    5b38:	add	r3, pc, r3
    5b3c:	str	r3, [r4, #40]	; 0x28
    5b40:	mov	r0, r4
    5b44:	ldr	r4, [sp]
    5b48:	add	sp, sp, #4
    5b4c:	pop	{pc}		; (ldr pc, [sp], #4)
    5b50:	mov	r0, r4
    5b54:	bl	4100 <readstat_parser_free@plt>
    5b58:	mov	r4, #0
    5b5c:	b	5b40 <readstat_parser_init+0x44>
    5b60:	.word	0x00020aac

00005b64 <readstat_set_file_character_encoding>:
    5b64:	str	r1, [r0, #36]	; 0x24
    5b68:	mov	r0, #0
    5b6c:	bx	lr

00005b70 <readstat_set_handler_character_encoding>:
    5b70:	str	r1, [r0, #40]	; 0x28
    5b74:	mov	r0, #0
    5b78:	bx	lr

00005b7c <readstat_set_row_limit>:
    5b7c:	str	r1, [r0, #44]	; 0x2c
    5b80:	mov	r0, #0
    5b84:	bx	lr

00005b88 <readstat_set_row_offset>:
    5b88:	str	r1, [r0, #48]	; 0x30
    5b8c:	mov	r0, #0
    5b90:	bx	lr
    5b94:	andeq	r0, r0, r0

00005b98 <readstat_type_class>:
    5b98:	cmp	r0, #6
    5b9c:	movne	r3, #0
    5ba0:	moveq	r3, #1
    5ba4:	cmp	r0, #0
    5ba8:	movne	r0, r3
    5bac:	moveq	r0, #1
    5bb0:	eor	r0, r0, #1
    5bb4:	bx	lr

00005bb8 <readstat_value_type>:
    5bb8:	sub	sp, sp, #16
    5bbc:	add	ip, sp, #16
    5bc0:	stmdb	ip, {r0, r1, r2, r3}
    5bc4:	ldr	r0, [sp, #8]
    5bc8:	add	sp, sp, #16
    5bcc:	bx	lr

00005bd0 <readstat_value_type_class>:
    5bd0:	push	{lr}		; (str lr, [sp, #-4]!)
    5bd4:	sub	sp, sp, #20
    5bd8:	add	ip, sp, #16
    5bdc:	stmdb	ip, {r0, r1, r2, r3}
    5be0:	ldr	r0, [sp, #8]
    5be4:	bl	3e18 <readstat_type_class@plt>
    5be8:	add	sp, sp, #20
    5bec:	pop	{pc}		; (ldr pc, [sp], #4)

00005bf0 <readstat_value_tag>:
    5bf0:	sub	sp, sp, #16
    5bf4:	add	ip, sp, #16
    5bf8:	stmdb	ip, {r0, r1, r2, r3}
    5bfc:	ldrb	r0, [sp, #12]
    5c00:	add	sp, sp, #16
    5c04:	bx	lr

00005c08 <readstat_value_is_system_missing>:
    5c08:	sub	sp, sp, #16
    5c0c:	add	ip, sp, #16
    5c10:	stmdb	ip, {r0, r1, r2, r3}
    5c14:	ldrb	r0, [sp, #13]
    5c18:	and	r0, r0, #1
    5c1c:	add	sp, sp, #16
    5c20:	bx	lr

00005c24 <readstat_value_is_tagged_missing>:
    5c24:	sub	sp, sp, #16
    5c28:	add	ip, sp, #16
    5c2c:	stmdb	ip, {r0, r1, r2, r3}
    5c30:	ldrb	r0, [sp, #13]
    5c34:	ubfx	r0, r0, #1, #1
    5c38:	add	sp, sp, #16
    5c3c:	bx	lr

00005c40 <readstat_int8_value>:
    5c40:	str	r4, [sp, #-8]!
    5c44:	str	lr, [sp, #4]
    5c48:	sub	sp, sp, #24
    5c4c:	add	ip, sp, #8
    5c50:	stm	ip, {r0, r1, r2, r3}
    5c54:	ldr	r4, [sp, #16]
    5c58:	ldm	ip, {r0, r1, r2, r3}
    5c5c:	bl	3ec0 <readstat_value_is_system_missing@plt>
    5c60:	cmp	r0, #0
    5c64:	movne	r0, #0
    5c68:	bne	5c98 <readstat_int8_value+0x58>
    5c6c:	cmp	r4, #5
    5c70:	beq	5ca8 <readstat_int8_value+0x68>
    5c74:	cmp	r4, #4
    5c78:	beq	5cbc <readstat_int8_value+0x7c>
    5c7c:	cmp	r4, #3
    5c80:	beq	5cd0 <readstat_int8_value+0x90>
    5c84:	cmp	r4, #2
    5c88:	beq	5cd8 <readstat_int8_value+0x98>
    5c8c:	cmp	r4, #1
    5c90:	ldrbeq	r0, [sp, #8]
    5c94:	movne	r0, #0
    5c98:	add	sp, sp, #24
    5c9c:	ldr	r4, [sp]
    5ca0:	add	sp, sp, #4
    5ca4:	pop	{pc}		; (ldr pc, [sp], #4)
    5ca8:	vldr	d7, [sp, #8]
    5cac:	vcvt.u32.f64	s15, d7
    5cb0:	vstr	s15, [sp, #4]
    5cb4:	ldrb	r0, [sp, #4]
    5cb8:	b	5c98 <readstat_int8_value+0x58>
    5cbc:	vldr	s15, [sp, #8]
    5cc0:	vcvt.u32.f32	s15, s15
    5cc4:	vstr	s15, [sp, #4]
    5cc8:	ldrb	r0, [sp, #4]
    5ccc:	b	5c98 <readstat_int8_value+0x58>
    5cd0:	ldrb	r0, [sp, #8]
    5cd4:	b	5c98 <readstat_int8_value+0x58>
    5cd8:	ldrb	r0, [sp, #8]
    5cdc:	b	5c98 <readstat_int8_value+0x58>

00005ce0 <readstat_int16_value>:
    5ce0:	str	r4, [sp, #-8]!
    5ce4:	str	lr, [sp, #4]
    5ce8:	sub	sp, sp, #16
    5cec:	mov	ip, sp
    5cf0:	stm	ip, {r0, r1, r2, r3}
    5cf4:	mov	r4, r2
    5cf8:	ldm	ip, {r0, r1, r2, r3}
    5cfc:	bl	3ec0 <readstat_value_is_system_missing@plt>
    5d00:	cmp	r0, #0
    5d04:	movne	r0, #0
    5d08:	bne	5d38 <readstat_int16_value+0x58>
    5d0c:	cmp	r4, #5
    5d10:	beq	5d48 <readstat_int16_value+0x68>
    5d14:	cmp	r4, #4
    5d18:	beq	5d5c <readstat_int16_value+0x7c>
    5d1c:	cmp	r4, #3
    5d20:	beq	5d70 <readstat_int16_value+0x90>
    5d24:	cmp	r4, #2
    5d28:	beq	5d78 <readstat_int16_value+0x98>
    5d2c:	cmp	r4, #1
    5d30:	ldrsbeq	r0, [sp]
    5d34:	movne	r0, #0
    5d38:	add	sp, sp, #16
    5d3c:	ldr	r4, [sp]
    5d40:	add	sp, sp, #4
    5d44:	pop	{pc}		; (ldr pc, [sp], #4)
    5d48:	vldr	d7, [sp]
    5d4c:	vcvt.s32.f64	s14, d7
    5d50:	vmov	r3, s14
    5d54:	sxth	r0, r3
    5d58:	b	5d38 <readstat_int16_value+0x58>
    5d5c:	vldr	s15, [sp]
    5d60:	vcvt.s32.f32	s15, s15
    5d64:	vmov	r3, s15
    5d68:	sxth	r0, r3
    5d6c:	b	5d38 <readstat_int16_value+0x58>
    5d70:	ldrsh	r0, [sp]
    5d74:	b	5d38 <readstat_int16_value+0x58>
    5d78:	ldrsh	r0, [sp]
    5d7c:	b	5d38 <readstat_int16_value+0x58>

00005d80 <readstat_int32_value>:
    5d80:	str	r4, [sp, #-8]!
    5d84:	str	lr, [sp, #4]
    5d88:	sub	sp, sp, #16
    5d8c:	mov	ip, sp
    5d90:	stm	ip, {r0, r1, r2, r3}
    5d94:	mov	r4, r2
    5d98:	ldm	ip, {r0, r1, r2, r3}
    5d9c:	bl	3ec0 <readstat_value_is_system_missing@plt>
    5da0:	cmp	r0, #0
    5da4:	movne	r0, #0
    5da8:	bne	5dd4 <readstat_int32_value+0x54>
    5dac:	cmp	r4, #5
    5db0:	beq	5de4 <readstat_int32_value+0x64>
    5db4:	cmp	r4, #4
    5db8:	beq	5df4 <readstat_int32_value+0x74>
    5dbc:	cmp	r4, #3
    5dc0:	beq	5e04 <readstat_int32_value+0x84>
    5dc4:	cmp	r4, #2
    5dc8:	beq	5e0c <readstat_int32_value+0x8c>
    5dcc:	cmp	r4, #1
    5dd0:	ldrsbeq	r0, [sp]
    5dd4:	add	sp, sp, #16
    5dd8:	ldr	r4, [sp]
    5ddc:	add	sp, sp, #4
    5de0:	pop	{pc}		; (ldr pc, [sp], #4)
    5de4:	vldr	d7, [sp]
    5de8:	vcvt.s32.f64	s15, d7
    5dec:	vmov	r0, s15
    5df0:	b	5dd4 <readstat_int32_value+0x54>
    5df4:	vldr	s15, [sp]
    5df8:	vcvt.s32.f32	s15, s15
    5dfc:	vmov	r0, s15
    5e00:	b	5dd4 <readstat_int32_value+0x54>
    5e04:	ldr	r0, [sp]
    5e08:	b	5dd4 <readstat_int32_value+0x54>
    5e0c:	ldrsh	r0, [sp]
    5e10:	b	5dd4 <readstat_int32_value+0x54>

00005e14 <readstat_float_value>:
    5e14:	str	r4, [sp, #-8]!
    5e18:	str	lr, [sp, #4]
    5e1c:	sub	sp, sp, #16
    5e20:	mov	ip, sp
    5e24:	stm	ip, {r0, r1, r2, r3}
    5e28:	mov	r4, r2
    5e2c:	ldm	ip, {r0, r1, r2, r3}
    5e30:	bl	3ec0 <readstat_value_is_system_missing@plt>
    5e34:	cmp	r0, #0
    5e38:	bne	5ea4 <readstat_float_value+0x90>
    5e3c:	cmp	r4, #5
    5e40:	beq	5e74 <readstat_float_value+0x60>
    5e44:	cmp	r4, #4
    5e48:	beq	5e80 <readstat_float_value+0x6c>
    5e4c:	cmp	r4, #3
    5e50:	beq	5e88 <readstat_float_value+0x74>
    5e54:	cmp	r4, #2
    5e58:	beq	5e94 <readstat_float_value+0x80>
    5e5c:	cmp	r4, #1
    5e60:	ldrsbeq	r3, [sp]
    5e64:	vmoveq	s0, r3
    5e68:	vcvteq.f32.s32	s0, s0
    5e6c:	vldrne	s0, [sp]
    5e70:	b	5ea8 <readstat_float_value+0x94>
    5e74:	vldr	d0, [sp]
    5e78:	vcvt.f32.f64	s0, d0
    5e7c:	b	5ea8 <readstat_float_value+0x94>
    5e80:	vldr	s0, [sp]
    5e84:	b	5ea8 <readstat_float_value+0x94>
    5e88:	vldr	s15, [sp]
    5e8c:	vcvt.f32.s32	s0, s15
    5e90:	b	5ea8 <readstat_float_value+0x94>
    5e94:	ldrsh	r3, [sp]
    5e98:	vmov	s0, r3
    5e9c:	vcvt.f32.s32	s0, s0
    5ea0:	b	5ea8 <readstat_float_value+0x94>
    5ea4:	vldr	s0, [pc, #12]	; 5eb8 <readstat_float_value+0xa4>
    5ea8:	add	sp, sp, #16
    5eac:	ldr	r4, [sp]
    5eb0:	add	sp, sp, #4
    5eb4:	pop	{pc}		; (ldr pc, [sp], #4)
    5eb8:	.word	0x7fc00000

00005ebc <readstat_double_value>:
    5ebc:	str	r4, [sp, #-8]!
    5ec0:	str	lr, [sp, #4]
    5ec4:	sub	sp, sp, #16
    5ec8:	mov	ip, sp
    5ecc:	stm	ip, {r0, r1, r2, r3}
    5ed0:	mov	r4, r2
    5ed4:	ldm	ip, {r0, r1, r2, r3}
    5ed8:	bl	3ec0 <readstat_value_is_system_missing@plt>
    5edc:	cmp	r0, #0
    5ee0:	bne	5f54 <readstat_double_value+0x98>
    5ee4:	cmp	r4, #5
    5ee8:	beq	5f14 <readstat_double_value+0x58>
    5eec:	cmp	r4, #4
    5ef0:	beq	5f1c <readstat_double_value+0x60>
    5ef4:	cmp	r4, #3
    5ef8:	beq	5f28 <readstat_double_value+0x6c>
    5efc:	cmp	r4, #2
    5f00:	beq	5f34 <readstat_double_value+0x78>
    5f04:	cmp	r4, #1
    5f08:	beq	5f44 <readstat_double_value+0x88>
    5f0c:	vldr	d0, [pc, #84]	; 5f68 <readstat_double_value+0xac>
    5f10:	b	5f58 <readstat_double_value+0x9c>
    5f14:	vldr	d0, [sp]
    5f18:	b	5f58 <readstat_double_value+0x9c>
    5f1c:	vldr	s0, [sp]
    5f20:	vcvt.f64.f32	d0, s0
    5f24:	b	5f58 <readstat_double_value+0x9c>
    5f28:	vldr	s15, [sp]
    5f2c:	vcvt.f64.s32	d0, s15
    5f30:	b	5f58 <readstat_double_value+0x9c>
    5f34:	ldrsh	r3, [sp]
    5f38:	vmov	s0, r3
    5f3c:	vcvt.f64.s32	d0, s0
    5f40:	b	5f58 <readstat_double_value+0x9c>
    5f44:	ldrsb	r3, [sp]
    5f48:	vmov	s0, r3
    5f4c:	vcvt.f64.s32	d0, s0
    5f50:	b	5f58 <readstat_double_value+0x9c>
    5f54:	vldr	d0, [pc, #12]	; 5f68 <readstat_double_value+0xac>
    5f58:	add	sp, sp, #16
    5f5c:	ldr	r4, [sp]
    5f60:	add	sp, sp, #4
    5f64:	pop	{pc}		; (ldr pc, [sp], #4)
    5f68:	.word	0x00000000
    5f6c:	.word	0x7ff80000

00005f70 <readstat_string_value>:
    5f70:	push	{lr}		; (str lr, [sp, #-4]!)
    5f74:	sub	sp, sp, #20
    5f78:	mov	ip, sp
    5f7c:	stm	ip, {r0, r1, r2, r3}
    5f80:	ldm	ip, {r0, r1, r2, r3}
    5f84:	bl	4340 <readstat_value_type@plt>
    5f88:	cmp	r0, #0
    5f8c:	ldreq	r0, [sp]
    5f90:	movne	r0, #0
    5f94:	add	sp, sp, #20
    5f98:	pop	{pc}		; (ldr pc, [sp], #4)

00005f9c <readstat_value_is_defined_missing>:
    5f9c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    5fa0:	strd	r6, [sp, #8]
    5fa4:	strd	r8, [sp, #16]
    5fa8:	str	sl, [sp, #24]
    5fac:	str	lr, [sp, #28]
    5fb0:	vpush	{d8-d9}
    5fb4:	sub	sp, sp, #80	; 0x50
    5fb8:	mov	ip, sp
    5fbc:	stm	ip, {r0, r1, r2, r3}
    5fc0:	ldm	ip, {r0, r1, r2, r3}
    5fc4:	bl	40dc <readstat_value_type_class@plt>
    5fc8:	mov	r4, r0
    5fcc:	ldr	r0, [sp, #128]	; 0x80
    5fd0:	bl	4544 <readstat_variable_get_type_class@plt>
    5fd4:	cmp	r4, r0
    5fd8:	movne	r0, #0
    5fdc:	beq	6000 <readstat_value_is_defined_missing+0x64>
    5fe0:	add	sp, sp, #80	; 0x50
    5fe4:	vpop	{d8-d9}
    5fe8:	ldrd	r4, [sp]
    5fec:	ldrd	r6, [sp, #8]
    5ff0:	ldrd	r8, [sp, #16]
    5ff4:	ldr	sl, [sp, #24]
    5ff8:	add	sp, sp, #28
    5ffc:	pop	{pc}		; (ldr pc, [sp], #4)
    6000:	mov	r3, sp
    6004:	ldm	r3, {r0, r1, r2, r3}
    6008:	bl	40dc <readstat_value_type_class@plt>
    600c:	cmp	r0, #0
    6010:	beq	605c <readstat_value_is_defined_missing+0xc0>
    6014:	mov	r3, sp
    6018:	ldm	r3, {r0, r1, r2, r3}
    601c:	bl	40dc <readstat_value_type_class@plt>
    6020:	cmp	r0, #1
    6024:	movne	r0, #0
    6028:	bne	5fe0 <readstat_value_is_defined_missing+0x44>
    602c:	mov	r3, sp
    6030:	ldm	r3, {r0, r1, r2, r3}
    6034:	bl	41b4 <readstat_double_value@plt>
    6038:	vmov.f64	d9, d0
    603c:	ldr	r0, [sp, #128]	; 0x80
    6040:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    6044:	subs	r7, r0, #0
    6048:	ble	618c <readstat_value_is_defined_missing+0x1f0>
    604c:	mov	r6, #0
    6050:	add	r5, sp, #64	; 0x40
    6054:	add	r4, sp, #48	; 0x30
    6058:	b	6128 <readstat_value_is_defined_missing+0x18c>
    605c:	mov	r3, sp
    6060:	ldm	r3, {r0, r1, r2, r3}
    6064:	bl	3fa4 <readstat_string_value@plt>
    6068:	subs	sl, r0, #0
    606c:	moveq	r0, #0
    6070:	beq	5fe0 <readstat_value_is_defined_missing+0x44>
    6074:	ldr	r0, [sp, #128]	; 0x80
    6078:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    607c:	subs	r9, r0, #0
    6080:	ble	6184 <readstat_value_is_defined_missing+0x1e8>
    6084:	mov	r6, #0
    6088:	add	r5, sp, #32
    608c:	add	r4, sp, #16
    6090:	b	60a0 <readstat_value_is_defined_missing+0x104>
    6094:	add	r6, r6, #1
    6098:	cmp	r9, r6
    609c:	beq	6114 <readstat_value_is_defined_missing+0x178>
    60a0:	mov	r2, r6
    60a4:	ldr	r1, [sp, #128]	; 0x80
    60a8:	mov	r0, r5
    60ac:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
    60b0:	ldm	r5, {r0, r1, r2, r3}
    60b4:	bl	3fa4 <readstat_string_value@plt>
    60b8:	mov	r7, r0
    60bc:	mov	r2, r6
    60c0:	ldr	r1, [sp, #128]	; 0x80
    60c4:	mov	r0, r4
    60c8:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
    60cc:	ldm	r4, {r0, r1, r2, r3}
    60d0:	bl	3fa4 <readstat_string_value@plt>
    60d4:	mov	r8, r0
    60d8:	cmp	r7, #0
    60dc:	cmpne	r0, #0
    60e0:	beq	6094 <readstat_value_is_defined_missing+0xf8>
    60e4:	mov	r1, r7
    60e8:	mov	r0, sl
    60ec:	bl	3df4 <strcmp@plt>
    60f0:	cmp	r0, #0
    60f4:	blt	6094 <readstat_value_is_defined_missing+0xf8>
    60f8:	mov	r1, r8
    60fc:	mov	r0, sl
    6100:	bl	3df4 <strcmp@plt>
    6104:	cmp	r0, #0
    6108:	bgt	6094 <readstat_value_is_defined_missing+0xf8>
    610c:	mov	r0, #1
    6110:	b	5fe0 <readstat_value_is_defined_missing+0x44>
    6114:	mov	r0, #0
    6118:	b	5fe0 <readstat_value_is_defined_missing+0x44>
    611c:	add	r6, r6, #1
    6120:	cmp	r7, r6
    6124:	beq	617c <readstat_value_is_defined_missing+0x1e0>
    6128:	mov	r2, r6
    612c:	ldr	r1, [sp, #128]	; 0x80
    6130:	mov	r0, r5
    6134:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
    6138:	ldm	r5, {r0, r1, r2, r3}
    613c:	bl	41b4 <readstat_double_value@plt>
    6140:	vmov.f64	d8, d0
    6144:	mov	r2, r6
    6148:	ldr	r1, [sp, #128]	; 0x80
    614c:	mov	r0, r4
    6150:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
    6154:	ldm	r4, {r0, r1, r2, r3}
    6158:	bl	41b4 <readstat_double_value@plt>
    615c:	vcmpe.f64	d9, d8
    6160:	vmrs	APSR_nzcv, fpscr
    6164:	blt	611c <readstat_value_is_defined_missing+0x180>
    6168:	vcmpe.f64	d9, d0
    616c:	vmrs	APSR_nzcv, fpscr
    6170:	bhi	611c <readstat_value_is_defined_missing+0x180>
    6174:	mov	r0, #1
    6178:	b	5fe0 <readstat_value_is_defined_missing+0x44>
    617c:	mov	r0, #0
    6180:	b	5fe0 <readstat_value_is_defined_missing+0x44>
    6184:	mov	r0, #0
    6188:	b	5fe0 <readstat_value_is_defined_missing+0x44>
    618c:	mov	r0, #0
    6190:	b	5fe0 <readstat_value_is_defined_missing+0x44>

00006194 <readstat_value_is_missing>:
    6194:	push	{lr}		; (str lr, [sp, #-4]!)
    6198:	sub	sp, sp, #28
    619c:	add	ip, sp, #24
    61a0:	stmdb	ip, {r0, r1, r2, r3}
    61a4:	ldrb	r3, [sp, #21]
    61a8:	tst	r3, #3
    61ac:	movne	r0, #1
    61b0:	bne	61c4 <readstat_value_is_missing+0x30>
    61b4:	ldr	r3, [sp, #32]
    61b8:	cmp	r3, #0
    61bc:	moveq	r0, #0
    61c0:	bne	61cc <readstat_value_is_missing+0x38>
    61c4:	add	sp, sp, #28
    61c8:	pop	{pc}		; (ldr pc, [sp], #4)
    61cc:	str	r3, [sp]
    61d0:	ldmdb	ip, {r0, r1, r2, r3}
    61d4:	bl	3ee4 <readstat_value_is_defined_missing@plt>
    61d8:	b	61c4 <readstat_value_is_missing+0x30>

000061dc <make_double_value>:
    61dc:	mov	r2, #0
    61e0:	str	r2, [r0, #12]
    61e4:	vstr	d0, [r0]
    61e8:	mov	r2, #5
    61ec:	str	r2, [r0, #8]
    61f0:	bx	lr

000061f4 <make_string_value>:
    61f4:	mov	r2, #0
    61f8:	str	r2, [r0, #4]
    61fc:	str	r2, [r0, #8]
    6200:	str	r2, [r0, #12]
    6204:	str	r1, [r0]
    6208:	bx	lr

0000620c <readstat_variable_get_name>:
    620c:	ldrb	r3, [r0, #8]
    6210:	cmp	r3, #0
    6214:	addne	r0, r0, #8
    6218:	moveq	r0, #0
    621c:	bx	lr

00006220 <readstat_variable_get_label>:
    6220:	ldrb	r3, [r0, #564]	; 0x234
    6224:	cmp	r3, #0
    6228:	addne	r0, r0, #564	; 0x234
    622c:	moveq	r0, #0
    6230:	bx	lr

00006234 <readstat_variable_get_format>:
    6234:	ldrb	r3, [r0, #308]	; 0x134
    6238:	cmp	r3, #0
    623c:	addne	r0, r0, #308	; 0x134
    6240:	moveq	r0, #0
    6244:	bx	lr

00006248 <readstat_variable_get_type>:
    6248:	ldr	r0, [r0]
    624c:	bx	lr

00006250 <readstat_variable_get_type_class>:
    6250:	str	r4, [sp, #-8]!
    6254:	str	lr, [sp, #4]
    6258:	ldr	r0, [r0]
    625c:	bl	3e18 <readstat_type_class@plt>
    6260:	ldr	r4, [sp]
    6264:	add	sp, sp, #4
    6268:	pop	{pc}		; (ldr pc, [sp], #4)

0000626c <readstat_variable_get_index>:
    626c:	ldr	r0, [r0, #4]
    6270:	bx	lr

00006274 <readstat_variable_get_index_after_skipping>:
    6274:	ldr	r0, [r0, #2148]	; 0x864
    6278:	bx	lr

0000627c <readstat_variable_get_storage_width>:
    627c:	ldr	r0, [r0, #1596]	; 0x63c
    6280:	bx	lr

00006284 <readstat_variable_get_measure>:
    6284:	ldr	r0, [r0, #2128]	; 0x850
    6288:	bx	lr

0000628c <readstat_variable_get_alignment>:
    628c:	ldr	r0, [r0, #2132]	; 0x854
    6290:	bx	lr

00006294 <readstat_variable_get_display_width>:
    6294:	ldr	r0, [r0, #2136]	; 0x858
    6298:	bx	lr

0000629c <readstat_variable_get_missing_ranges_count>:
    629c:	ldr	r0, [r0, #2120]	; 0x848
    62a0:	bx	lr

000062a4 <readstat_variable_get_missing_range_lo>:
    62a4:	ldr	r3, [r1, #2120]	; 0x848
    62a8:	cmp	r3, r2
    62ac:	ble	62c0 <readstat_variable_get_missing_range_lo+0x1c>
    62b0:	lsl	r2, r2, #1
    62b4:	add	r3, r2, #1
    62b8:	cmp	r3, #31
    62bc:	bls	62fc <readstat_variable_get_missing_range_lo+0x58>
    62c0:	sub	sp, sp, #16
    62c4:	mov	r3, #0
    62c8:	str	r3, [sp, #12]
    62cc:	mov	r3, #5
    62d0:	str	r3, [sp, #8]
    62d4:	mov	r3, #1
    62d8:	strb	r3, [sp, #13]
    62dc:	mov	r2, #0
    62e0:	mov	r3, #0
    62e4:	movt	r3, #32760	; 0x7ff8
    62e8:	strd	r2, [r0]
    62ec:	ldrd	r2, [sp, #8]
    62f0:	strd	r2, [r0, #8]
    62f4:	add	sp, sp, #16
    62f8:	bx	lr
    62fc:	add	r2, r1, r2, lsl #4
    6300:	movw	r3, #1608	; 0x648
    6304:	add	r1, r2, r3
    6308:	add	r2, r2, r3
    630c:	ldrd	r2, [r2]
    6310:	strd	r2, [r0]
    6314:	ldrd	r2, [r1, #8]
    6318:	strd	r2, [r0, #8]
    631c:	bx	lr

00006320 <readstat_variable_get_missing_range_hi>:
    6320:	ldr	r3, [r1, #2120]	; 0x848
    6324:	cmp	r3, r2
    6328:	ble	633c <readstat_variable_get_missing_range_hi+0x1c>
    632c:	lsl	r2, r2, #1
    6330:	add	r2, r2, #1
    6334:	cmp	r2, #31
    6338:	bls	6378 <readstat_variable_get_missing_range_hi+0x58>
    633c:	sub	sp, sp, #16
    6340:	mov	r3, #0
    6344:	str	r3, [sp, #12]
    6348:	mov	r3, #5
    634c:	str	r3, [sp, #8]
    6350:	mov	r3, #1
    6354:	strb	r3, [sp, #13]
    6358:	mov	r2, #0
    635c:	mov	r3, #0
    6360:	movt	r3, #32760	; 0x7ff8
    6364:	strd	r2, [r0]
    6368:	ldrd	r2, [sp, #8]
    636c:	strd	r2, [r0, #8]
    6370:	add	sp, sp, #16
    6374:	bx	lr
    6378:	add	r2, r1, r2, lsl #4
    637c:	movw	r3, #1608	; 0x648
    6380:	add	r1, r2, r3
    6384:	add	r2, r2, r3
    6388:	ldrd	r2, [r2]
    638c:	strd	r2, [r0]
    6390:	ldrd	r2, [r1, #8]
    6394:	strd	r2, [r0, #8]
    6398:	bx	lr

0000639c <readstat_variable_add_missing_double_range>:
    639c:	strd	r4, [sp, #-16]!
    63a0:	str	r6, [sp, #8]
    63a4:	str	lr, [sp, #12]
    63a8:	vpush	{d8}
    63ac:	sub	sp, sp, #64	; 0x40
    63b0:	mov	r5, r0
    63b4:	vmov.f64	d8, d1
    63b8:	add	r6, sp, #32
    63bc:	mov	r0, r6
    63c0:	bl	61dc <make_double_value>
    63c4:	vmov.f64	d0, d8
    63c8:	add	r4, sp, #48	; 0x30
    63cc:	mov	r0, r4
    63d0:	bl	61dc <make_double_value>
    63d4:	ldrd	r2, [sp, #32]
    63d8:	strd	r2, [sp]
    63dc:	ldrd	r2, [r6, #8]
    63e0:	strd	r2, [sp, #8]
    63e4:	ldrd	r2, [sp, #48]	; 0x30
    63e8:	strd	r2, [sp, #16]
    63ec:	ldrd	r2, [r4, #8]
    63f0:	strd	r2, [sp, #24]
    63f4:	mov	r0, r5
    63f8:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    63fc:	lsl	r0, r0, #1
    6400:	cmp	r0, #31
    6404:	movhi	r0, #31
    6408:	bls	6424 <readstat_variable_add_missing_double_range+0x88>
    640c:	add	sp, sp, #64	; 0x40
    6410:	vpop	{d8}
    6414:	ldrd	r4, [sp]
    6418:	ldr	r6, [sp, #8]
    641c:	add	sp, sp, #12
    6420:	pop	{pc}		; (ldr pc, [sp], #4)
    6424:	add	ip, r5, r0, lsl #4
    6428:	movw	r1, #1608	; 0x648
    642c:	add	lr, ip, r1
    6430:	ldrd	r2, [sp]
    6434:	strd	r2, [ip, r1]
    6438:	ldrd	r2, [sp, #8]
    643c:	strd	r2, [lr, #8]
    6440:	add	r0, r0, #1
    6444:	add	r0, r5, r0, lsl #4
    6448:	add	ip, r0, r1
    644c:	ldrd	r2, [sp, #16]
    6450:	strd	r2, [r0, r1]
    6454:	ldrd	r2, [sp, #24]
    6458:	strd	r2, [ip, #8]
    645c:	ldr	r3, [r5, #2120]	; 0x848
    6460:	add	r3, r3, #1
    6464:	str	r3, [r5, #2120]	; 0x848
    6468:	mov	r0, #0
    646c:	b	640c <readstat_variable_add_missing_double_range+0x70>

00006470 <readstat_variable_add_missing_double_value>:
    6470:	strd	r4, [sp, #-16]!
    6474:	str	r6, [sp, #8]
    6478:	str	lr, [sp, #12]
    647c:	vpush	{d8}
    6480:	sub	sp, sp, #64	; 0x40
    6484:	mov	r5, r0
    6488:	vmov.f64	d8, d0
    648c:	add	r6, sp, #32
    6490:	mov	r0, r6
    6494:	bl	61dc <make_double_value>
    6498:	vmov.f64	d0, d8
    649c:	add	r4, sp, #48	; 0x30
    64a0:	mov	r0, r4
    64a4:	bl	61dc <make_double_value>
    64a8:	ldrd	r2, [sp, #32]
    64ac:	strd	r2, [sp]
    64b0:	ldrd	r2, [r6, #8]
    64b4:	strd	r2, [sp, #8]
    64b8:	ldrd	r2, [sp, #48]	; 0x30
    64bc:	strd	r2, [sp, #16]
    64c0:	ldrd	r2, [r4, #8]
    64c4:	strd	r2, [sp, #24]
    64c8:	mov	r0, r5
    64cc:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    64d0:	lsl	r0, r0, #1
    64d4:	cmp	r0, #31
    64d8:	movhi	r0, #31
    64dc:	bls	64f8 <readstat_variable_add_missing_double_value+0x88>
    64e0:	add	sp, sp, #64	; 0x40
    64e4:	vpop	{d8}
    64e8:	ldrd	r4, [sp]
    64ec:	ldr	r6, [sp, #8]
    64f0:	add	sp, sp, #12
    64f4:	pop	{pc}		; (ldr pc, [sp], #4)
    64f8:	add	ip, r5, r0, lsl #4
    64fc:	movw	r1, #1608	; 0x648
    6500:	add	lr, ip, r1
    6504:	ldrd	r2, [sp]
    6508:	strd	r2, [ip, r1]
    650c:	ldrd	r2, [sp, #8]
    6510:	strd	r2, [lr, #8]
    6514:	add	r0, r0, #1
    6518:	add	r0, r5, r0, lsl #4
    651c:	add	ip, r0, r1
    6520:	ldrd	r2, [sp, #16]
    6524:	strd	r2, [r0, r1]
    6528:	ldrd	r2, [sp, #24]
    652c:	strd	r2, [ip, #8]
    6530:	ldr	r3, [r5, #2120]	; 0x848
    6534:	add	r3, r3, #1
    6538:	str	r3, [r5, #2120]	; 0x848
    653c:	mov	r0, #0
    6540:	b	64e0 <readstat_variable_add_missing_double_value+0x70>

00006544 <readstat_variable_add_missing_string_range>:
    6544:	strd	r4, [sp, #-16]!
    6548:	str	r6, [sp, #8]
    654c:	str	lr, [sp, #12]
    6550:	sub	sp, sp, #64	; 0x40
    6554:	mov	r5, r0
    6558:	mov	r4, r2
    655c:	add	r6, sp, #32
    6560:	mov	r0, r6
    6564:	bl	61f4 <make_string_value>
    6568:	mov	r1, r4
    656c:	add	r4, sp, #48	; 0x30
    6570:	mov	r0, r4
    6574:	bl	61f4 <make_string_value>
    6578:	ldrd	r2, [sp, #32]
    657c:	strd	r2, [sp]
    6580:	ldrd	r2, [r6, #8]
    6584:	strd	r2, [sp, #8]
    6588:	ldrd	r2, [sp, #48]	; 0x30
    658c:	strd	r2, [sp, #16]
    6590:	ldrd	r2, [r4, #8]
    6594:	strd	r2, [sp, #24]
    6598:	mov	r0, r5
    659c:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    65a0:	lsl	r0, r0, #1
    65a4:	cmp	r0, #31
    65a8:	movhi	r0, #31
    65ac:	bls	65c4 <readstat_variable_add_missing_string_range+0x80>
    65b0:	add	sp, sp, #64	; 0x40
    65b4:	ldrd	r4, [sp]
    65b8:	ldr	r6, [sp, #8]
    65bc:	add	sp, sp, #12
    65c0:	pop	{pc}		; (ldr pc, [sp], #4)
    65c4:	add	ip, r5, r0, lsl #4
    65c8:	movw	r1, #1608	; 0x648
    65cc:	add	lr, ip, r1
    65d0:	ldrd	r2, [sp]
    65d4:	strd	r2, [ip, r1]
    65d8:	ldrd	r2, [sp, #8]
    65dc:	strd	r2, [lr, #8]
    65e0:	add	r0, r0, #1
    65e4:	add	r0, r5, r0, lsl #4
    65e8:	add	ip, r0, r1
    65ec:	ldrd	r2, [sp, #16]
    65f0:	strd	r2, [r0, r1]
    65f4:	ldrd	r2, [sp, #24]
    65f8:	strd	r2, [ip, #8]
    65fc:	ldr	r3, [r5, #2120]	; 0x848
    6600:	add	r3, r3, #1
    6604:	str	r3, [r5, #2120]	; 0x848
    6608:	mov	r0, #0
    660c:	b	65b0 <readstat_variable_add_missing_string_range+0x6c>

00006610 <readstat_variable_add_missing_string_value>:
    6610:	strd	r4, [sp, #-16]!
    6614:	str	r6, [sp, #8]
    6618:	str	lr, [sp, #12]
    661c:	sub	sp, sp, #64	; 0x40
    6620:	mov	r5, r0
    6624:	mov	r4, r1
    6628:	add	r6, sp, #32
    662c:	mov	r0, r6
    6630:	bl	61f4 <make_string_value>
    6634:	mov	r1, r4
    6638:	add	r4, sp, #48	; 0x30
    663c:	mov	r0, r4
    6640:	bl	61f4 <make_string_value>
    6644:	ldrd	r2, [sp, #32]
    6648:	strd	r2, [sp]
    664c:	ldrd	r2, [r6, #8]
    6650:	strd	r2, [sp, #8]
    6654:	ldrd	r2, [sp, #48]	; 0x30
    6658:	strd	r2, [sp, #16]
    665c:	ldrd	r2, [r4, #8]
    6660:	strd	r2, [sp, #24]
    6664:	mov	r0, r5
    6668:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
    666c:	lsl	r0, r0, #1
    6670:	cmp	r0, #31
    6674:	movhi	r0, #31
    6678:	bls	6690 <readstat_variable_add_missing_string_value+0x80>
    667c:	add	sp, sp, #64	; 0x40
    6680:	ldrd	r4, [sp]
    6684:	ldr	r6, [sp, #8]
    6688:	add	sp, sp, #12
    668c:	pop	{pc}		; (ldr pc, [sp], #4)
    6690:	add	ip, r5, r0, lsl #4
    6694:	movw	r1, #1608	; 0x648
    6698:	add	lr, ip, r1
    669c:	ldrd	r2, [sp]
    66a0:	strd	r2, [ip, r1]
    66a4:	ldrd	r2, [sp, #8]
    66a8:	strd	r2, [lr, #8]
    66ac:	add	r0, r0, #1
    66b0:	add	r0, r5, r0, lsl #4
    66b4:	add	ip, r0, r1
    66b8:	ldrd	r2, [sp, #16]
    66bc:	strd	r2, [r0, r1]
    66c0:	ldrd	r2, [sp, #24]
    66c4:	strd	r2, [ip, #8]
    66c8:	ldr	r3, [r5, #2120]	; 0x848
    66cc:	add	r3, r3, #1
    66d0:	str	r3, [r5, #2120]	; 0x848
    66d4:	mov	r0, #0
    66d8:	b	667c <readstat_variable_add_missing_string_value+0x6c>

000066dc <readstat_compare_string_refs>:
    66dc:	push	{lr}		; (str lr, [sp, #-4]!)
    66e0:	ldr	lr, [r0]
    66e4:	ldr	ip, [r1]
    66e8:	ldrd	r0, [lr]
    66ec:	ldrd	r2, [ip]
    66f0:	cmp	r1, r3
    66f4:	cmpeq	r0, r2
    66f8:	ldreq	r0, [lr, #8]
    66fc:	ldreq	r3, [ip, #8]
    6700:	subeq	r0, r0, r3
    6704:	subne	r0, r0, r2
    6708:	pop	{pc}		; (ldr pc, [sp], #4)

0000670c <readstat_add_value_label>:
    670c:	strd	r4, [sp, #-16]!
    6710:	str	r6, [sp, #8]
    6714:	str	lr, [sp, #12]
    6718:	mov	r4, r0
    671c:	mov	r5, r1
    6720:	ldr	r1, [r0, #268]	; 0x10c
    6724:	ldr	r3, [r0, #264]	; 0x108
    6728:	cmp	r3, r1
    672c:	beq	677c <readstat_add_value_label+0x70>
    6730:	ldr	r3, [r4, #260]	; 0x104
    6734:	ldr	r2, [r4, #264]	; 0x108
    6738:	add	r1, r2, #1
    673c:	str	r1, [r4, #264]	; 0x108
    6740:	add	r4, r3, r2, lsl #5
    6744:	mov	r2, #32
    6748:	mov	r1, #0
    674c:	mov	r0, r4
    6750:	bl	42a4 <memset@plt>
    6754:	cmp	r5, #0
    6758:	beq	6768 <readstat_add_value_label+0x5c>
    675c:	ldrb	r3, [r5]
    6760:	cmp	r3, #0
    6764:	bne	6798 <readstat_add_value_label+0x8c>
    6768:	mov	r0, r4
    676c:	ldrd	r4, [sp]
    6770:	ldr	r6, [sp, #8]
    6774:	add	sp, sp, #12
    6778:	pop	{pc}		; (ldr pc, [sp], #4)
    677c:	lsl	r3, r1, #1
    6780:	str	r3, [r0, #268]	; 0x10c
    6784:	lsl	r1, r1, #6
    6788:	ldr	r0, [r0, #260]	; 0x104
    678c:	bl	3fec <realloc@plt>
    6790:	str	r0, [r4, #260]	; 0x104
    6794:	b	6730 <readstat_add_value_label+0x24>
    6798:	mov	r0, r5
    679c:	bl	41fc <strlen@plt>
    67a0:	mov	r6, r0
    67a4:	str	r0, [r4, #28]
    67a8:	bl	410c <malloc@plt>
    67ac:	str	r0, [r4, #24]
    67b0:	mov	r2, r6
    67b4:	mov	r1, r5
    67b8:	bl	3f14 <memcpy@plt>
    67bc:	b	6768 <readstat_add_value_label+0x5c>

000067c0 <readstat_string_ref_init>:
    67c0:	strd	r4, [sp, #-16]!
    67c4:	str	r6, [sp, #8]
    67c8:	str	lr, [sp, #12]
    67cc:	mov	r6, r0
    67d0:	bl	41fc <strlen@plt>
    67d4:	add	r5, r0, #1
    67d8:	add	r1, r0, #25
    67dc:	mov	r0, #1
    67e0:	bl	3d4c <calloc@plt>
    67e4:	mov	r4, r0
    67e8:	mvn	r2, #0
    67ec:	mvn	r3, #0
    67f0:	strd	r2, [r0, #8]
    67f4:	strd	r2, [r0]
    67f8:	str	r5, [r0, #16]
    67fc:	mov	r2, r5
    6800:	mov	r1, r6
    6804:	add	r0, r0, #20
    6808:	bl	3f14 <memcpy@plt>
    680c:	mov	r0, r4
    6810:	ldrd	r4, [sp]
    6814:	ldr	r6, [sp, #8]
    6818:	add	sp, sp, #12
    681c:	pop	{pc}		; (ldr pc, [sp], #4)

00006820 <readstat_writer_init>:
    6820:	strd	r4, [sp, #-16]!
    6824:	str	r6, [sp, #8]
    6828:	str	lr, [sp, #12]
    682c:	mov	r1, #312	; 0x138
    6830:	mov	r0, #1
    6834:	bl	3d4c <calloc@plt>
    6838:	mov	r4, r0
    683c:	mov	r1, #4
    6840:	mov	r0, #50	; 0x32
    6844:	bl	3d4c <calloc@plt>
    6848:	str	r0, [r4, #24]
    684c:	mov	r5, #50	; 0x32
    6850:	str	r5, [r4, #32]
    6854:	mov	r1, #4
    6858:	mov	r0, r5
    685c:	bl	3d4c <calloc@plt>
    6860:	str	r0, [r4, #36]	; 0x24
    6864:	str	r5, [r4, #44]	; 0x2c
    6868:	mov	r1, #4
    686c:	mov	r0, r5
    6870:	bl	3d4c <calloc@plt>
    6874:	str	r0, [r4, #48]	; 0x30
    6878:	str	r5, [r4, #56]	; 0x38
    687c:	mov	r1, #4
    6880:	mov	r0, #100	; 0x64
    6884:	bl	3d4c <calloc@plt>
    6888:	str	r0, [r4, #60]	; 0x3c
    688c:	mov	r3, #100	; 0x64
    6890:	str	r3, [r4, #68]	; 0x44
    6894:	mov	r0, #0
    6898:	bl	3f50 <time@plt>
    689c:	str	r0, [r4, #20]
    68a0:	mov	r3, #1
    68a4:	str	r3, [r4, #12]
    68a8:	ldr	r3, [pc, #24]	; 68c8 <readstat_writer_init+0xa8>
    68ac:	add	r3, pc, r3
    68b0:	str	r3, [r4, #280]	; 0x118
    68b4:	mov	r0, r4
    68b8:	ldrd	r4, [sp]
    68bc:	ldr	r6, [sp, #8]
    68c0:	add	sp, sp, #12
    68c4:	pop	{pc}		; (ldr pc, [sp], #4)
    68c8:	.word	0x000000fc

000068cc <readstat_validate_variable>:
    68cc:	ldr	r3, [r0, #308]	; 0x134
    68d0:	cmp	r3, #0
    68d4:	beq	6900 <readstat_validate_variable+0x34>
    68d8:	ldr	r3, [r0, #232]	; 0xe8
    68dc:	cmp	r3, #0
    68e0:	beq	6908 <readstat_validate_variable+0x3c>
    68e4:	str	r4, [sp, #-8]!
    68e8:	str	lr, [sp, #4]
    68ec:	mov	r0, r1
    68f0:	blx	r3
    68f4:	ldr	r4, [sp]
    68f8:	add	sp, sp, #4
    68fc:	pop	{pc}		; (ldr pc, [sp], #4)
    6900:	mov	r0, #14
    6904:	bx	lr
    6908:	mov	r0, #0
    690c:	bx	lr

00006910 <readstat_validate_metadata>:
    6910:	ldr	r3, [r0, #308]	; 0x134
    6914:	cmp	r3, #0
    6918:	beq	6940 <readstat_validate_metadata+0x30>
    691c:	ldr	r3, [r0, #292]	; 0x124
    6920:	cmp	r3, #0
    6924:	beq	6948 <readstat_validate_metadata+0x38>
    6928:	str	r4, [sp, #-8]!
    692c:	str	lr, [sp, #4]
    6930:	blx	r3
    6934:	ldr	r4, [sp]
    6938:	add	sp, sp, #4
    693c:	pop	{pc}		; (ldr pc, [sp], #4)
    6940:	mov	r0, #14
    6944:	bx	lr
    6948:	mov	r0, #0
    694c:	bx	lr

00006950 <readstat_set_data_writer>:
    6950:	str	r1, [r0]
    6954:	mov	r0, #0
    6958:	bx	lr

0000695c <readstat_write_bytes>:
    695c:	strd	r4, [sp, #-16]!
    6960:	str	r6, [sp, #8]
    6964:	str	lr, [sp, #12]
    6968:	mov	r4, r0
    696c:	mov	r0, r1
    6970:	mov	r5, r2
    6974:	ldr	r3, [r4]
    6978:	ldr	r2, [r4, #304]	; 0x130
    697c:	mov	r1, r5
    6980:	blx	r3
    6984:	cmp	r5, r0
    6988:	movhi	r0, #13
    698c:	bhi	69a0 <readstat_write_bytes+0x44>
    6990:	ldr	r3, [r4, #4]
    6994:	add	r3, r3, r0
    6998:	str	r3, [r4, #4]
    699c:	mov	r0, #0
    69a0:	ldrd	r4, [sp]
    69a4:	ldr	r6, [sp, #8]
    69a8:	add	sp, sp, #12
    69ac:	pop	{pc}		; (ldr pc, [sp], #4)

000069b0 <readstat_write_row_default_callback>:
    69b0:	str	r4, [sp, #-8]!
    69b4:	str	lr, [sp, #4]
    69b8:	bl	4454 <readstat_write_bytes@plt>
    69bc:	ldr	r4, [sp]
    69c0:	add	sp, sp, #4
    69c4:	pop	{pc}		; (ldr pc, [sp], #4)

000069c8 <readstat_write_bytes_as_lines>:
    69c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    69cc:	strd	r6, [sp, #8]
    69d0:	strd	r8, [sp, #16]
    69d4:	strd	sl, [sp, #24]
    69d8:	str	lr, [sp, #32]
    69dc:	sub	sp, sp, #12
    69e0:	mov	r7, r0
    69e4:	mov	fp, r1
    69e8:	mov	r8, r2
    69ec:	mov	r9, r3
    69f0:	ldr	r0, [sp, #48]	; 0x30
    69f4:	bl	41fc <strlen@plt>
    69f8:	str	r0, [sp, #4]
    69fc:	cmp	r8, #0
    6a00:	beq	6abc <readstat_write_bytes_as_lines+0xf4>
    6a04:	mov	r5, #0
    6a08:	add	r6, r0, r9
    6a0c:	b	6a4c <readstat_write_bytes_as_lines+0x84>
    6a10:	mov	r2, r4
    6a14:	add	r1, fp, r5
    6a18:	mov	r0, r7
    6a1c:	bl	4454 <readstat_write_bytes@plt>
    6a20:	mov	sl, r0
    6a24:	add	r5, r5, r4
    6a28:	cmp	sl, #0
    6a2c:	bne	6a9c <readstat_write_bytes_as_lines+0xd4>
    6a30:	ldr	r2, [r7, #4]
    6a34:	udiv	r3, r2, r6
    6a38:	mls	r3, r6, r3, r2
    6a3c:	cmp	r3, r9
    6a40:	beq	6a80 <readstat_write_bytes_as_lines+0xb8>
    6a44:	cmp	r5, r8
    6a48:	bcs	6a9c <readstat_write_bytes_as_lines+0xd4>
    6a4c:	ldr	r3, [r7, #4]
    6a50:	udiv	r4, r3, r6
    6a54:	mls	r4, r6, r4, r3
    6a58:	sub	r4, r9, r4
    6a5c:	sub	r2, r8, r5
    6a60:	cmp	r4, r2
    6a64:	bls	6a10 <readstat_write_bytes_as_lines+0x48>
    6a68:	add	r1, fp, r5
    6a6c:	mov	r0, r7
    6a70:	bl	4454 <readstat_write_bytes@plt>
    6a74:	mov	sl, r0
    6a78:	mov	r5, r8
    6a7c:	b	6a28 <readstat_write_bytes_as_lines+0x60>
    6a80:	ldr	r2, [sp, #4]
    6a84:	ldr	r1, [sp, #48]	; 0x30
    6a88:	mov	r0, r7
    6a8c:	bl	4454 <readstat_write_bytes@plt>
    6a90:	cmp	r0, #0
    6a94:	beq	6a44 <readstat_write_bytes_as_lines+0x7c>
    6a98:	mov	sl, r0
    6a9c:	mov	r0, sl
    6aa0:	add	sp, sp, #12
    6aa4:	ldrd	r4, [sp]
    6aa8:	ldrd	r6, [sp, #8]
    6aac:	ldrd	r8, [sp, #16]
    6ab0:	ldrd	sl, [sp, #24]
    6ab4:	add	sp, sp, #32
    6ab8:	pop	{pc}		; (ldr pc, [sp], #4)
    6abc:	mov	sl, r8
    6ac0:	b	6a9c <readstat_write_bytes_as_lines+0xd4>

00006ac4 <readstat_write_line_padding>:
    6ac4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    6ac8:	strd	r6, [sp, #8]
    6acc:	strd	r8, [sp, #16]
    6ad0:	str	sl, [sp, #24]
    6ad4:	str	lr, [sp, #28]
    6ad8:	mov	r5, r0
    6adc:	mov	r8, r1
    6ae0:	mov	r4, r2
    6ae4:	mov	r6, r3
    6ae8:	mov	r0, r3
    6aec:	bl	41fc <strlen@plt>
    6af0:	add	r3, r0, r4
    6af4:	ldr	r1, [r5, #4]
    6af8:	udiv	r2, r1, r3
    6afc:	mls	r2, r3, r2, r1
    6b00:	cmp	r2, #0
    6b04:	bne	6b24 <readstat_write_line_padding+0x60>
    6b08:	mov	r0, #0
    6b0c:	ldrd	r4, [sp]
    6b10:	ldrd	r6, [sp, #8]
    6b14:	ldrd	r8, [sp, #16]
    6b18:	ldr	sl, [sp, #24]
    6b1c:	add	sp, sp, #28
    6b20:	pop	{pc}		; (ldr pc, [sp], #4)
    6b24:	mov	r7, r0
    6b28:	sub	r4, r4, r2
    6b2c:	mov	r0, r4
    6b30:	bl	410c <malloc@plt>
    6b34:	mov	r9, r0
    6b38:	mov	r2, r4
    6b3c:	mov	r1, r8
    6b40:	bl	42a4 <memset@plt>
    6b44:	mov	r2, r4
    6b48:	mov	r1, r9
    6b4c:	mov	r0, r5
    6b50:	bl	4454 <readstat_write_bytes@plt>
    6b54:	cmp	r0, #0
    6b58:	beq	6b68 <readstat_write_line_padding+0xa4>
    6b5c:	mov	r0, r9
    6b60:	bl	3eb4 <free@plt>
    6b64:	b	6b08 <readstat_write_line_padding+0x44>
    6b68:	mov	r2, r7
    6b6c:	mov	r1, r6
    6b70:	mov	r0, r5
    6b74:	bl	4454 <readstat_write_bytes@plt>
    6b78:	b	6b5c <readstat_write_line_padding+0x98>

00006b7c <readstat_write_string>:
    6b7c:	strd	r4, [sp, #-16]!
    6b80:	str	r6, [sp, #8]
    6b84:	str	lr, [sp, #12]
    6b88:	mov	r5, r0
    6b8c:	mov	r4, r1
    6b90:	mov	r0, r1
    6b94:	bl	41fc <strlen@plt>
    6b98:	mov	r2, r0
    6b9c:	mov	r1, r4
    6ba0:	mov	r0, r5
    6ba4:	bl	4454 <readstat_write_bytes@plt>
    6ba8:	ldrd	r4, [sp]
    6bac:	ldr	r6, [sp, #8]
    6bb0:	add	sp, sp, #12
    6bb4:	pop	{pc}		; (ldr pc, [sp], #4)

00006bb8 <readstat_write_zeros>:
    6bb8:	strd	r4, [sp, #-16]!
    6bbc:	str	fp, [sp, #8]
    6bc0:	str	lr, [sp, #12]
    6bc4:	add	fp, sp, #12
    6bc8:	subs	r4, r1, #0
    6bcc:	bne	6be8 <readstat_write_zeros+0x30>
    6bd0:	mov	r0, r4
    6bd4:	sub	sp, fp, #12
    6bd8:	ldrd	r4, [sp]
    6bdc:	ldr	fp, [sp, #8]
    6be0:	add	sp, sp, #12
    6be4:	pop	{pc}		; (ldr pc, [sp], #4)
    6be8:	mov	r5, r0
    6bec:	add	r3, r4, #7
    6bf0:	bic	r3, r3, #7
    6bf4:	sub	sp, sp, r3
    6bf8:	mov	r2, r4
    6bfc:	mov	r1, #0
    6c00:	mov	r0, sp
    6c04:	bl	42a4 <memset@plt>
    6c08:	mov	r2, r4
    6c0c:	mov	r1, sp
    6c10:	mov	r0, r5
    6c14:	bl	4454 <readstat_write_bytes@plt>
    6c18:	mov	r4, r0
    6c1c:	b	6bd0 <readstat_write_zeros+0x18>

00006c20 <readstat_write_spaces>:
    6c20:	strd	r4, [sp, #-16]!
    6c24:	str	fp, [sp, #8]
    6c28:	str	lr, [sp, #12]
    6c2c:	add	fp, sp, #12
    6c30:	subs	r4, r1, #0
    6c34:	bne	6c50 <readstat_write_spaces+0x30>
    6c38:	mov	r0, r4
    6c3c:	sub	sp, fp, #12
    6c40:	ldrd	r4, [sp]
    6c44:	ldr	fp, [sp, #8]
    6c48:	add	sp, sp, #12
    6c4c:	pop	{pc}		; (ldr pc, [sp], #4)
    6c50:	mov	r5, r0
    6c54:	add	r3, r4, #7
    6c58:	bic	r3, r3, #7
    6c5c:	sub	sp, sp, r3
    6c60:	mov	r2, r4
    6c64:	mov	r1, #32
    6c68:	mov	r0, sp
    6c6c:	bl	42a4 <memset@plt>
    6c70:	mov	r2, r4
    6c74:	mov	r1, sp
    6c78:	mov	r0, r5
    6c7c:	bl	4454 <readstat_write_bytes@plt>
    6c80:	mov	r4, r0
    6c84:	b	6c38 <readstat_write_spaces+0x18>

00006c88 <readstat_write_space_padded_string>:
    6c88:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6c8c:	strd	r6, [sp, #8]
    6c90:	str	r8, [sp, #16]
    6c94:	str	lr, [sp, #20]
    6c98:	mov	r6, r0
    6c9c:	mov	r5, r2
    6ca0:	subs	r4, r1, #0
    6ca4:	beq	6cf0 <readstat_write_space_padded_string+0x68>
    6ca8:	ldrb	r3, [r4]
    6cac:	cmp	r3, #0
    6cb0:	beq	6cf0 <readstat_write_space_padded_string+0x68>
    6cb4:	mov	r0, r4
    6cb8:	bl	41fc <strlen@plt>
    6cbc:	cmp	r0, r5
    6cc0:	movcc	r7, r0
    6cc4:	movcs	r7, r5
    6cc8:	mov	r2, r7
    6ccc:	mov	r1, r4
    6cd0:	mov	r0, r6
    6cd4:	bl	4454 <readstat_write_bytes@plt>
    6cd8:	cmp	r0, #0
    6cdc:	bne	6cfc <readstat_write_space_padded_string+0x74>
    6ce0:	sub	r1, r5, r7
    6ce4:	mov	r0, r6
    6ce8:	bl	3dd0 <readstat_write_spaces@plt>
    6cec:	b	6cfc <readstat_write_space_padded_string+0x74>
    6cf0:	mov	r1, r5
    6cf4:	mov	r0, r6
    6cf8:	bl	3dd0 <readstat_write_spaces@plt>
    6cfc:	ldrd	r4, [sp]
    6d00:	ldrd	r6, [sp, #8]
    6d04:	ldr	r8, [sp, #16]
    6d08:	add	sp, sp, #20
    6d0c:	pop	{pc}		; (ldr pc, [sp], #4)

00006d10 <readstat_add_label_set>:
    6d10:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6d14:	strd	r6, [sp, #8]
    6d18:	str	r8, [sp, #16]
    6d1c:	str	lr, [sp, #20]
    6d20:	mov	r5, r0
    6d24:	mov	r7, r1
    6d28:	mov	r6, r2
    6d2c:	ldr	r1, [r0, #44]	; 0x2c
    6d30:	ldr	r3, [r0, #40]	; 0x28
    6d34:	cmp	r3, r1
    6d38:	beq	6dc0 <readstat_add_label_set+0xb0>
    6d3c:	mov	r1, #284	; 0x11c
    6d40:	mov	r0, #1
    6d44:	bl	3d4c <calloc@plt>
    6d48:	mov	r4, r0
    6d4c:	ldr	r2, [r5, #36]	; 0x24
    6d50:	ldr	r3, [r5, #40]	; 0x28
    6d54:	add	r1, r3, #1
    6d58:	str	r1, [r5, #40]	; 0x28
    6d5c:	str	r0, [r2, r3, lsl #2]
    6d60:	str	r7, [r0], #4
    6d64:	mov	r3, r6
    6d68:	ldr	r2, [pc, #108]	; 6ddc <readstat_add_label_set+0xcc>
    6d6c:	add	r2, pc, r2
    6d70:	mov	r1, #256	; 0x100
    6d74:	bl	4280 <snprintf@plt>
    6d78:	mov	r1, #32
    6d7c:	mov	r0, #10
    6d80:	bl	3d4c <calloc@plt>
    6d84:	str	r0, [r4, #260]	; 0x104
    6d88:	mov	r3, #10
    6d8c:	str	r3, [r4, #268]	; 0x10c
    6d90:	mov	r1, #4
    6d94:	mov	r0, #2
    6d98:	bl	3d4c <calloc@plt>
    6d9c:	str	r0, [r4, #272]	; 0x110
    6da0:	mov	r3, #2
    6da4:	str	r3, [r4, #280]	; 0x118
    6da8:	mov	r0, r4
    6dac:	ldrd	r4, [sp]
    6db0:	ldrd	r6, [sp, #8]
    6db4:	ldr	r8, [sp, #16]
    6db8:	add	sp, sp, #20
    6dbc:	pop	{pc}		; (ldr pc, [sp], #4)
    6dc0:	lsl	r3, r1, #1
    6dc4:	str	r3, [r0, #44]	; 0x2c
    6dc8:	lsl	r1, r1, #3
    6dcc:	ldr	r0, [r0, #36]	; 0x24
    6dd0:	bl	3fec <realloc@plt>
    6dd4:	str	r0, [r5, #36]	; 0x24
    6dd8:	b	6d3c <readstat_add_label_set+0x2c>
    6ddc:	.word	0x0001f880

00006de0 <readstat_get_label_set>:
    6de0:	ldr	r3, [r0, #40]	; 0x28
    6de4:	cmp	r3, r1
    6de8:	ldrgt	r3, [r0, #36]	; 0x24
    6dec:	ldrgt	r0, [r3, r1, lsl #2]
    6df0:	movle	r0, #0
    6df4:	bx	lr

00006df8 <readstat_sort_label_set>:
    6df8:	str	r4, [sp, #-8]!
    6dfc:	str	lr, [sp, #4]
    6e00:	mov	r3, r1
    6e04:	mov	r2, #32
    6e08:	ldr	r1, [r0, #264]	; 0x108
    6e0c:	ldr	r0, [r0, #260]	; 0x104
    6e10:	bl	443c <qsort@plt>
    6e14:	ldr	r4, [sp]
    6e18:	add	sp, sp, #4
    6e1c:	pop	{pc}		; (ldr pc, [sp], #4)

00006e20 <readstat_get_value_label>:
    6e20:	ldr	r3, [r0, #264]	; 0x108
    6e24:	cmp	r3, r1
    6e28:	ldrgt	r0, [r0, #260]	; 0x104
    6e2c:	addgt	r0, r0, r1, lsl #5
    6e30:	movle	r0, #0
    6e34:	bx	lr

00006e38 <readstat_writer_free>:
    6e38:	strd	r4, [sp, #-24]!	; 0xffffffe8
    6e3c:	strd	r6, [sp, #8]
    6e40:	str	r8, [sp, #16]
    6e44:	str	lr, [sp, #20]
    6e48:	subs	r4, r0, #0
    6e4c:	beq	6ff4 <readstat_writer_free+0x1bc>
    6e50:	ldr	r3, [r4, #288]	; 0x120
    6e54:	cmp	r3, #0
    6e58:	beq	6e6c <readstat_writer_free+0x34>
    6e5c:	ldr	r0, [r4, #300]	; 0x12c
    6e60:	cmp	r0, #0
    6e64:	beq	6e6c <readstat_writer_free+0x34>
    6e68:	blx	r3
    6e6c:	ldr	r3, [r4, #24]
    6e70:	cmp	r3, #0
    6e74:	beq	6eac <readstat_writer_free+0x74>
    6e78:	ldr	r3, [r4, #28]
    6e7c:	cmp	r3, #0
    6e80:	ble	6ea4 <readstat_writer_free+0x6c>
    6e84:	mov	r5, #0
    6e88:	ldr	r3, [r4, #24]
    6e8c:	ldr	r0, [r3, r5, lsl #2]
    6e90:	bl	3eb4 <free@plt>
    6e94:	add	r5, r5, #1
    6e98:	ldr	r3, [r4, #28]
    6e9c:	cmp	r3, r5
    6ea0:	bgt	6e88 <readstat_writer_free+0x50>
    6ea4:	ldr	r0, [r4, #24]
    6ea8:	bl	3eb4 <free@plt>
    6eac:	ldr	r3, [r4, #36]	; 0x24
    6eb0:	cmp	r3, #0
    6eb4:	beq	6f5c <readstat_writer_free+0x124>
    6eb8:	ldr	r3, [r4, #40]	; 0x28
    6ebc:	cmp	r3, #0
    6ec0:	ble	6f54 <readstat_writer_free+0x11c>
    6ec4:	mov	r7, #0
    6ec8:	b	6f38 <readstat_writer_free+0x100>
    6ecc:	bl	3eb4 <free@plt>
    6ed0:	add	r6, r6, #1
    6ed4:	ldr	r3, [r5, #264]	; 0x108
    6ed8:	cmp	r6, r3
    6edc:	bge	6f10 <readstat_writer_free+0xd8>
    6ee0:	mov	r1, r6
    6ee4:	mov	r0, r5
    6ee8:	bl	44cc <readstat_get_value_label@plt>
    6eec:	mov	r8, r0
    6ef0:	ldr	r0, [r0, #24]
    6ef4:	cmp	r0, #0
    6ef8:	beq	6f00 <readstat_writer_free+0xc8>
    6efc:	bl	3eb4 <free@plt>
    6f00:	ldr	r0, [r8, #16]
    6f04:	cmp	r0, #0
    6f08:	bne	6ecc <readstat_writer_free+0x94>
    6f0c:	b	6ed0 <readstat_writer_free+0x98>
    6f10:	ldr	r0, [r5, #260]	; 0x104
    6f14:	bl	3eb4 <free@plt>
    6f18:	ldr	r0, [r5, #272]	; 0x110
    6f1c:	bl	3eb4 <free@plt>
    6f20:	mov	r0, r5
    6f24:	bl	3eb4 <free@plt>
    6f28:	add	r7, r7, #1
    6f2c:	ldr	r3, [r4, #40]	; 0x28
    6f30:	cmp	r3, r7
    6f34:	ble	6f54 <readstat_writer_free+0x11c>
    6f38:	ldr	r3, [r4, #36]	; 0x24
    6f3c:	ldr	r5, [r3, r7, lsl #2]
    6f40:	ldr	r3, [r5, #264]	; 0x108
    6f44:	cmp	r3, #0
    6f48:	ble	6f10 <readstat_writer_free+0xd8>
    6f4c:	mov	r6, #0
    6f50:	b	6ee0 <readstat_writer_free+0xa8>
    6f54:	ldr	r0, [r4, #36]	; 0x24
    6f58:	bl	3eb4 <free@plt>
    6f5c:	ldr	r3, [r4, #48]	; 0x30
    6f60:	cmp	r3, #0
    6f64:	beq	6f9c <readstat_writer_free+0x164>
    6f68:	ldr	r3, [r4, #52]	; 0x34
    6f6c:	cmp	r3, #0
    6f70:	ble	6f94 <readstat_writer_free+0x15c>
    6f74:	mov	r5, #0
    6f78:	ldr	r3, [r4, #48]	; 0x30
    6f7c:	ldr	r0, [r3, r5, lsl #2]
    6f80:	bl	3eb4 <free@plt>
    6f84:	add	r5, r5, #1
    6f88:	ldr	r3, [r4, #52]	; 0x34
    6f8c:	cmp	r3, r5
    6f90:	bgt	6f78 <readstat_writer_free+0x140>
    6f94:	ldr	r0, [r4, #48]	; 0x30
    6f98:	bl	3eb4 <free@plt>
    6f9c:	ldr	r3, [r4, #60]	; 0x3c
    6fa0:	cmp	r3, #0
    6fa4:	beq	6fdc <readstat_writer_free+0x1a4>
    6fa8:	ldr	r3, [r4, #64]	; 0x40
    6fac:	cmp	r3, #0
    6fb0:	ble	6fd4 <readstat_writer_free+0x19c>
    6fb4:	mov	r5, #0
    6fb8:	ldr	r3, [r4, #60]	; 0x3c
    6fbc:	ldr	r0, [r3, r5, lsl #2]
    6fc0:	bl	3eb4 <free@plt>
    6fc4:	add	r5, r5, #1
    6fc8:	ldr	r3, [r4, #64]	; 0x40
    6fcc:	cmp	r3, r5
    6fd0:	bgt	6fb8 <readstat_writer_free+0x180>
    6fd4:	ldr	r0, [r4, #60]	; 0x3c
    6fd8:	bl	3eb4 <free@plt>
    6fdc:	ldr	r0, [r4, #72]	; 0x48
    6fe0:	cmp	r0, #0
    6fe4:	beq	6fec <readstat_writer_free+0x1b4>
    6fe8:	bl	3eb4 <free@plt>
    6fec:	mov	r0, r4
    6ff0:	bl	3eb4 <free@plt>
    6ff4:	ldrd	r4, [sp]
    6ff8:	ldrd	r6, [sp, #8]
    6ffc:	ldr	r8, [sp, #16]
    7000:	add	sp, sp, #20
    7004:	pop	{pc}		; (ldr pc, [sp], #4)

00007008 <readstat_get_label_set_variable>:
    7008:	ldr	r3, [r0, #276]	; 0x114
    700c:	cmp	r3, r1
    7010:	ldrgt	r3, [r0, #272]	; 0x110
    7014:	ldrgt	r0, [r3, r1, lsl #2]
    7018:	movle	r0, #0
    701c:	bx	lr

00007020 <readstat_label_double_value>:
    7020:	str	r4, [sp, #-8]!
    7024:	str	lr, [sp, #4]
    7028:	vpush	{d8}
    702c:	vmov.f64	d8, d0
    7030:	bl	670c <readstat_add_value_label>
    7034:	vstr	d8, [r0]
    7038:	vcvt.s32.f64	s16, d8
    703c:	vstr	s16, [r0, #8]
    7040:	vpop	{d8}
    7044:	ldr	r4, [sp]
    7048:	add	sp, sp, #4
    704c:	pop	{pc}		; (ldr pc, [sp], #4)

00007050 <readstat_label_int32_value>:
    7050:	str	r4, [sp, #-8]!
    7054:	str	lr, [sp, #4]
    7058:	mov	r4, r1
    705c:	mov	r1, r2
    7060:	bl	670c <readstat_add_value_label>
    7064:	vmov	s15, r4
    7068:	vcvt.f64.s32	d7, s15
    706c:	vstr	d7, [r0]
    7070:	str	r4, [r0, #8]
    7074:	ldr	r4, [sp]
    7078:	add	sp, sp, #4
    707c:	pop	{pc}		; (ldr pc, [sp], #4)

00007080 <readstat_label_string_value>:
    7080:	strd	r4, [sp, #-16]!
    7084:	str	r6, [sp, #8]
    7088:	str	lr, [sp, #12]
    708c:	mov	r4, r1
    7090:	mov	r1, r2
    7094:	bl	670c <readstat_add_value_label>
    7098:	cmp	r4, #0
    709c:	beq	70b0 <readstat_label_string_value+0x30>
    70a0:	mov	r5, r0
    70a4:	ldrb	r3, [r4]
    70a8:	cmp	r3, #0
    70ac:	bne	70c0 <readstat_label_string_value+0x40>
    70b0:	ldrd	r4, [sp]
    70b4:	ldr	r6, [sp, #8]
    70b8:	add	sp, sp, #12
    70bc:	pop	{pc}		; (ldr pc, [sp], #4)
    70c0:	mov	r0, r4
    70c4:	bl	41fc <strlen@plt>
    70c8:	mov	r6, r0
    70cc:	str	r0, [r5, #20]
    70d0:	bl	410c <malloc@plt>
    70d4:	str	r0, [r5, #16]
    70d8:	mov	r2, r6
    70dc:	mov	r1, r4
    70e0:	bl	3f14 <memcpy@plt>
    70e4:	b	70b0 <readstat_label_string_value+0x30>

000070e8 <readstat_label_tagged_value>:
    70e8:	str	r4, [sp, #-8]!
    70ec:	str	lr, [sp, #4]
    70f0:	mov	r4, r1
    70f4:	mov	r1, r2
    70f8:	bl	670c <readstat_add_value_label>
    70fc:	strb	r4, [r0, #12]
    7100:	ldr	r4, [sp]
    7104:	add	sp, sp, #4
    7108:	pop	{pc}		; (ldr pc, [sp], #4)

0000710c <readstat_add_variable>:
    710c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    7110:	strd	r6, [sp, #8]
    7114:	str	r8, [sp, #16]
    7118:	str	lr, [sp, #20]
    711c:	mov	r5, r0
    7120:	mov	r6, r1
    7124:	mov	r7, r2
    7128:	mov	r8, r3
    712c:	ldr	r1, [r0, #32]
    7130:	ldr	r3, [r0, #28]
    7134:	cmp	r3, r1
    7138:	beq	71c0 <readstat_add_variable+0xb4>
    713c:	movw	r1, #2152	; 0x868
    7140:	mov	r0, #1
    7144:	bl	3d4c <calloc@plt>
    7148:	mov	r4, r0
    714c:	ldr	r3, [r5, #28]
    7150:	add	r2, r3, #1
    7154:	str	r2, [r5, #28]
    7158:	str	r3, [r0, #4]
    715c:	ldr	r2, [r5, #24]
    7160:	str	r0, [r2, r3, lsl #2]
    7164:	str	r8, [r0, #1600]	; 0x640
    7168:	str	r7, [r0]
    716c:	bl	4544 <readstat_variable_get_type_class@plt>
    7170:	cmp	r0, #0
    7174:	moveq	r3, #1
    7178:	movne	r3, #3
    717c:	str	r3, [r4, #2132]	; 0x854
    7180:	mov	r3, #0
    7184:	str	r3, [r4, #2128]	; 0x850
    7188:	cmp	r6, r3
    718c:	beq	71a8 <readstat_add_variable+0x9c>
    7190:	mov	r3, r6
    7194:	ldr	r2, [pc, #64]	; 71dc <readstat_add_variable+0xd0>
    7198:	add	r2, pc, r2
    719c:	mov	r1, #300	; 0x12c
    71a0:	add	r0, r4, #8
    71a4:	bl	4280 <snprintf@plt>
    71a8:	mov	r0, r4
    71ac:	ldrd	r4, [sp]
    71b0:	ldrd	r6, [sp, #8]
    71b4:	ldr	r8, [sp, #16]
    71b8:	add	sp, sp, #20
    71bc:	pop	{pc}		; (ldr pc, [sp], #4)
    71c0:	lsl	r3, r1, #1
    71c4:	str	r3, [r0, #32]
    71c8:	lsl	r1, r1, #3
    71cc:	ldr	r0, [r0, #24]
    71d0:	bl	3fec <realloc@plt>
    71d4:	str	r0, [r5, #24]
    71d8:	b	713c <readstat_add_variable+0x30>
    71dc:	.word	0x0001f454

000071e0 <readstat_add_string_ref>:
    71e0:	strd	r4, [sp, #-16]!
    71e4:	str	r6, [sp, #8]
    71e8:	str	lr, [sp, #12]
    71ec:	mov	r4, r0
    71f0:	mov	r0, r1
    71f4:	bl	4358 <readstat_string_ref_init@plt>
    71f8:	mov	r5, r0
    71fc:	ldr	r1, [r4, #68]	; 0x44
    7200:	ldr	r3, [r4, #64]	; 0x40
    7204:	cmp	r3, r1
    7208:	beq	7234 <readstat_add_string_ref+0x54>
    720c:	ldr	r2, [r4, #60]	; 0x3c
    7210:	ldr	r3, [r4, #64]	; 0x40
    7214:	add	r1, r3, #1
    7218:	str	r1, [r4, #64]	; 0x40
    721c:	str	r5, [r2, r3, lsl #2]
    7220:	mov	r0, r5
    7224:	ldrd	r4, [sp]
    7228:	ldr	r6, [sp, #8]
    722c:	add	sp, sp, #12
    7230:	pop	{pc}		; (ldr pc, [sp], #4)
    7234:	lsl	r3, r1, #1
    7238:	str	r3, [r4, #68]	; 0x44
    723c:	lsl	r1, r1, #3
    7240:	ldr	r0, [r4, #60]	; 0x3c
    7244:	bl	3fec <realloc@plt>
    7248:	str	r0, [r4, #60]	; 0x3c
    724c:	b	720c <readstat_add_string_ref+0x2c>

00007250 <readstat_add_note>:
    7250:	strd	r4, [sp, #-16]!
    7254:	str	r6, [sp, #8]
    7258:	str	lr, [sp, #12]
    725c:	mov	r4, r0
    7260:	mov	r5, r1
    7264:	ldr	r1, [r0, #56]	; 0x38
    7268:	ldr	r3, [r0, #52]	; 0x34
    726c:	cmp	r3, r1
    7270:	beq	72b4 <readstat_add_note+0x64>
    7274:	mov	r0, r5
    7278:	bl	41fc <strlen@plt>
    727c:	add	r0, r0, #1
    7280:	bl	410c <malloc@plt>
    7284:	mov	r6, r0
    7288:	mov	r1, r5
    728c:	bl	4094 <strcpy@plt>
    7290:	ldr	r2, [r4, #48]	; 0x30
    7294:	ldr	r3, [r4, #52]	; 0x34
    7298:	add	r1, r3, #1
    729c:	str	r1, [r4, #52]	; 0x34
    72a0:	str	r6, [r2, r3, lsl #2]
    72a4:	ldrd	r4, [sp]
    72a8:	ldr	r6, [sp, #8]
    72ac:	add	sp, sp, #12
    72b0:	pop	{pc}		; (ldr pc, [sp], #4)
    72b4:	lsl	r3, r1, #1
    72b8:	str	r3, [r0, #56]	; 0x38
    72bc:	lsl	r1, r1, #3
    72c0:	ldr	r0, [r0, #48]	; 0x30
    72c4:	bl	3fec <realloc@plt>
    72c8:	str	r0, [r4, #48]	; 0x30
    72cc:	b	7274 <readstat_add_note+0x24>

000072d0 <readstat_variable_set_label>:
    72d0:	str	r4, [sp, #-8]!
    72d4:	str	lr, [sp, #4]
    72d8:	subs	r3, r1, #0
    72dc:	beq	7300 <readstat_variable_set_label+0x30>
    72e0:	ldr	r2, [pc, #44]	; 7314 <readstat_variable_set_label+0x44>
    72e4:	add	r2, pc, r2
    72e8:	mov	r1, #1024	; 0x400
    72ec:	add	r0, r0, #564	; 0x234
    72f0:	bl	4280 <snprintf@plt>
    72f4:	ldr	r4, [sp]
    72f8:	add	sp, sp, #4
    72fc:	pop	{pc}		; (ldr pc, [sp], #4)
    7300:	mov	r2, #1024	; 0x400
    7304:	mov	r1, #0
    7308:	add	r0, r0, #564	; 0x234
    730c:	bl	42a4 <memset@plt>
    7310:	b	72f4 <readstat_variable_set_label+0x24>
    7314:	.word	0x0001f308

00007318 <readstat_variable_set_format>:
    7318:	str	r4, [sp, #-8]!
    731c:	str	lr, [sp, #4]
    7320:	subs	r3, r1, #0
    7324:	beq	7348 <readstat_variable_set_format+0x30>
    7328:	ldr	r2, [pc, #44]	; 735c <readstat_variable_set_format+0x44>
    732c:	add	r2, pc, r2
    7330:	mov	r1, #256	; 0x100
    7334:	add	r0, r0, #308	; 0x134
    7338:	bl	4280 <snprintf@plt>
    733c:	ldr	r4, [sp]
    7340:	add	sp, sp, #4
    7344:	pop	{pc}		; (ldr pc, [sp], #4)
    7348:	mov	r2, #256	; 0x100
    734c:	mov	r1, #0
    7350:	add	r0, r0, #308	; 0x134
    7354:	bl	42a4 <memset@plt>
    7358:	b	733c <readstat_variable_set_format+0x24>
    735c:	.word	0x0001f2c0

00007360 <readstat_variable_set_measure>:
    7360:	str	r1, [r0, #2128]	; 0x850
    7364:	bx	lr

00007368 <readstat_variable_set_alignment>:
    7368:	str	r1, [r0, #2132]	; 0x854
    736c:	bx	lr

00007370 <readstat_variable_set_display_width>:
    7370:	str	r1, [r0, #2136]	; 0x858
    7374:	bx	lr

00007378 <readstat_variable_set_label_set>:
    7378:	str	r1, [r0, #1588]	; 0x634
    737c:	cmp	r1, #0
    7380:	bxeq	lr
    7384:	strd	r4, [sp, #-16]!
    7388:	str	r6, [sp, #8]
    738c:	str	lr, [sp, #12]
    7390:	mov	r4, r1
    7394:	mov	r5, r0
    7398:	ldr	r1, [r1, #280]	; 0x118
    739c:	ldr	r3, [r4, #276]	; 0x114
    73a0:	cmp	r3, r1
    73a4:	beq	73cc <readstat_variable_set_label_set+0x54>
    73a8:	ldr	r2, [r4, #272]	; 0x110
    73ac:	ldr	r3, [r4, #276]	; 0x114
    73b0:	add	r1, r3, #1
    73b4:	str	r1, [r4, #276]	; 0x114
    73b8:	str	r5, [r2, r3, lsl #2]
    73bc:	ldrd	r4, [sp]
    73c0:	ldr	r6, [sp, #8]
    73c4:	add	sp, sp, #12
    73c8:	pop	{pc}		; (ldr pc, [sp], #4)
    73cc:	lsl	r3, r1, #1
    73d0:	str	r3, [r4, #280]	; 0x118
    73d4:	lsl	r1, r1, #3
    73d8:	ldr	r0, [r4, #272]	; 0x110
    73dc:	bl	3fec <realloc@plt>
    73e0:	str	r0, [r4, #272]	; 0x110
    73e4:	b	73a8 <readstat_variable_set_label_set+0x30>

000073e8 <readstat_get_variable>:
    73e8:	ldr	r3, [r0, #28]
    73ec:	cmp	r3, r1
    73f0:	ldrgt	r3, [r0, #24]
    73f4:	ldrgt	r0, [r3, r1, lsl #2]
    73f8:	movle	r0, #0
    73fc:	bx	lr

00007400 <readstat_begin_writing_data>:
    7400:	strd	r4, [sp, #-24]!	; 0xffffffe8
    7404:	strd	r6, [sp, #8]
    7408:	str	r8, [sp, #16]
    740c:	str	lr, [sp, #20]
    7410:	mov	r4, r0
    7414:	bl	3d94 <readstat_validate_metadata@plt>
    7418:	subs	r8, r0, #0
    741c:	bne	74e4 <readstat_begin_writing_data+0xe4>
    7420:	ldr	r3, [r4, #28]
    7424:	cmp	r3, #0
    7428:	ble	74fc <readstat_begin_writing_data+0xfc>
    742c:	mov	r7, r8
    7430:	mov	r6, #0
    7434:	mov	r1, r6
    7438:	mov	r0, r4
    743c:	bl	437c <readstat_get_variable@plt>
    7440:	mov	r5, r0
    7444:	ldr	r3, [r4, #228]	; 0xe4
    7448:	ldr	r1, [r0, #1600]	; 0x640
    744c:	ldr	r0, [r0]
    7450:	blx	r3
    7454:	str	r0, [r5, #1596]	; 0x63c
    7458:	str	r7, [r5, #1592]	; 0x638
    745c:	add	r7, r7, r0
    7460:	add	r6, r6, #1
    7464:	ldr	r3, [r4, #28]
    7468:	cmp	r3, r6
    746c:	bgt	7434 <readstat_begin_writing_data+0x34>
    7470:	ldr	r3, [r4, #232]	; 0xe8
    7474:	cmp	r3, #0
    7478:	beq	74bc <readstat_begin_writing_data+0xbc>
    747c:	ldr	r3, [r4, #28]
    7480:	cmp	r3, #0
    7484:	ble	74bc <readstat_begin_writing_data+0xbc>
    7488:	mov	r5, #0
    748c:	mov	r1, r5
    7490:	mov	r0, r4
    7494:	bl	437c <readstat_get_variable@plt>
    7498:	mov	r1, r0
    749c:	mov	r0, r4
    74a0:	bl	449c <readstat_validate_variable@plt>
    74a4:	cmp	r0, #0
    74a8:	bne	7504 <readstat_begin_writing_data+0x104>
    74ac:	add	r5, r5, #1
    74b0:	ldr	r3, [r4, #28]
    74b4:	cmp	r3, r5
    74b8:	bgt	748c <readstat_begin_writing_data+0x8c>
    74bc:	str	r7, [r4, #76]	; 0x4c
    74c0:	mov	r0, r7
    74c4:	bl	410c <malloc@plt>
    74c8:	str	r0, [r4, #72]	; 0x48
    74cc:	ldr	r3, [r4, #276]	; 0x114
    74d0:	cmp	r3, #0
    74d4:	beq	74e4 <readstat_begin_writing_data+0xe4>
    74d8:	mov	r0, r4
    74dc:	blx	r3
    74e0:	mov	r8, r0
    74e4:	mov	r0, r8
    74e8:	ldrd	r4, [sp]
    74ec:	ldrd	r6, [sp, #8]
    74f0:	ldr	r8, [sp, #16]
    74f4:	add	sp, sp, #20
    74f8:	pop	{pc}		; (ldr pc, [sp], #4)
    74fc:	mov	r7, r8
    7500:	b	74bc <readstat_begin_writing_data+0xbc>
    7504:	mov	r8, r0
    7508:	b	74e4 <readstat_begin_writing_data+0xe4>

0000750c <readstat_get_string_ref>:
    750c:	ldr	r3, [r0, #64]	; 0x40
    7510:	cmp	r3, r1
    7514:	ldrgt	r3, [r0, #60]	; 0x3c
    7518:	ldrgt	r0, [r3, r1, lsl #2]
    751c:	movle	r0, #0
    7520:	bx	lr

00007524 <readstat_writer_set_file_label>:
    7524:	str	r4, [sp, #-8]!
    7528:	str	lr, [sp, #4]
    752c:	mov	r3, r1
    7530:	ldr	r2, [pc, #28]	; 7554 <readstat_writer_set_file_label+0x30>
    7534:	add	r2, pc, r2
    7538:	mov	r1, #100	; 0x64
    753c:	add	r0, r0, #88	; 0x58
    7540:	bl	4280 <snprintf@plt>
    7544:	mov	r0, #0
    7548:	ldr	r4, [sp]
    754c:	add	sp, sp, #4
    7550:	pop	{pc}		; (ldr pc, [sp], #4)
    7554:	.word	0x0001f0b8

00007558 <readstat_writer_set_file_timestamp>:
    7558:	str	r1, [r0, #20]
    755c:	mov	r0, #0
    7560:	bx	lr

00007564 <readstat_writer_set_table_name>:
    7564:	str	r4, [sp, #-8]!
    7568:	str	lr, [sp, #4]
    756c:	mov	r3, r1
    7570:	ldr	r2, [pc, #28]	; 7594 <readstat_writer_set_table_name+0x30>
    7574:	add	r2, pc, r2
    7578:	mov	r1, #33	; 0x21
    757c:	add	r0, r0, #188	; 0xbc
    7580:	bl	4280 <snprintf@plt>
    7584:	mov	r0, #0
    7588:	ldr	r4, [sp]
    758c:	add	sp, sp, #4
    7590:	pop	{pc}		; (ldr pc, [sp], #4)
    7594:	.word	0x0001f078

00007598 <readstat_writer_set_fweight_variable>:
    7598:	strd	r4, [sp, #-16]!
    759c:	str	r6, [sp, #8]
    75a0:	str	lr, [sp, #12]
    75a4:	mov	r5, r0
    75a8:	mov	r4, r1
    75ac:	mov	r0, r1
    75b0:	bl	4544 <readstat_variable_get_type_class@plt>
    75b4:	cmp	r0, #0
    75b8:	strne	r4, [r5, #224]	; 0xe0
    75bc:	movne	r0, #0
    75c0:	moveq	r0, #30
    75c4:	ldrd	r4, [sp]
    75c8:	ldr	r6, [sp, #8]
    75cc:	add	sp, sp, #12
    75d0:	pop	{pc}		; (ldr pc, [sp], #4)

000075d4 <readstat_writer_set_file_format_version>:
    75d4:	str	r1, [r0, #8]
    75d8:	mov	r0, #0
    75dc:	bx	lr

000075e0 <readstat_writer_set_file_format_is_64bit>:
    75e0:	str	r1, [r0, #12]
    75e4:	mov	r0, #0
    75e8:	bx	lr

000075ec <readstat_writer_set_compression>:
    75ec:	str	r1, [r0, #16]
    75f0:	mov	r0, #0
    75f4:	bx	lr

000075f8 <readstat_writer_set_error_handler>:
    75f8:	str	r1, [r0, #296]	; 0x128
    75fc:	mov	r0, #0
    7600:	bx	lr

00007604 <readstat_begin_writing_file>:
    7604:	str	r4, [sp, #-8]!
    7608:	str	lr, [sp, #4]
    760c:	str	r2, [r0, #80]	; 0x50
    7610:	str	r1, [r0, #304]	; 0x130
    7614:	mov	r2, #1
    7618:	str	r2, [r0, #308]	; 0x134
    761c:	bl	3d94 <readstat_validate_metadata@plt>
    7620:	ldr	r4, [sp]
    7624:	add	sp, sp, #4
    7628:	pop	{pc}		; (ldr pc, [sp], #4)

0000762c <readstat_begin_row>:
    762c:	strd	r4, [sp, #-16]!
    7630:	str	r6, [sp, #8]
    7634:	str	lr, [sp, #12]
    7638:	ldr	r3, [r0, #308]	; 0x134
    763c:	cmp	r3, #0
    7640:	moveq	r5, #14
    7644:	beq	766c <readstat_begin_row+0x40>
    7648:	mov	r4, r0
    764c:	ldr	r3, [r0, #84]	; 0x54
    7650:	cmp	r3, #0
    7654:	movne	r5, #0
    7658:	beq	7680 <readstat_begin_row+0x54>
    765c:	ldr	r2, [r4, #76]	; 0x4c
    7660:	mov	r1, #0
    7664:	ldr	r0, [r4, #72]	; 0x48
    7668:	bl	42a4 <memset@plt>
    766c:	mov	r0, r5
    7670:	ldrd	r4, [sp]
    7674:	ldr	r6, [sp, #8]
    7678:	add	sp, sp, #12
    767c:	pop	{pc}		; (ldr pc, [sp], #4)
    7680:	bl	7400 <readstat_begin_writing_data>
    7684:	mov	r5, r0
    7688:	b	765c <readstat_begin_row+0x30>

0000768c <readstat_insert_int8_value>:
    768c:	ldr	r3, [r0, #308]	; 0x134
    7690:	cmp	r3, #0
    7694:	beq	76cc <readstat_insert_int8_value+0x40>
    7698:	ldr	r3, [r1]
    769c:	cmp	r3, #1
    76a0:	bne	76d4 <readstat_insert_int8_value+0x48>
    76a4:	str	r4, [sp, #-8]!
    76a8:	str	lr, [sp, #4]
    76ac:	ldr	lr, [r0, #72]	; 0x48
    76b0:	ldr	ip, [r1, #1592]	; 0x638
    76b4:	ldr	r3, [r0, #236]	; 0xec
    76b8:	add	r0, lr, ip
    76bc:	blx	r3
    76c0:	ldr	r4, [sp]
    76c4:	add	sp, sp, #4
    76c8:	pop	{pc}		; (ldr pc, [sp], #4)
    76cc:	mov	r0, #14
    76d0:	bx	lr
    76d4:	mov	r0, #12
    76d8:	bx	lr

000076dc <readstat_insert_int16_value>:
    76dc:	ldr	r3, [r0, #308]	; 0x134
    76e0:	cmp	r3, #0
    76e4:	beq	771c <readstat_insert_int16_value+0x40>
    76e8:	ldr	r3, [r1]
    76ec:	cmp	r3, #2
    76f0:	bne	7724 <readstat_insert_int16_value+0x48>
    76f4:	str	r4, [sp, #-8]!
    76f8:	str	lr, [sp, #4]
    76fc:	ldr	lr, [r0, #72]	; 0x48
    7700:	ldr	ip, [r1, #1592]	; 0x638
    7704:	ldr	r3, [r0, #240]	; 0xf0
    7708:	add	r0, lr, ip
    770c:	blx	r3
    7710:	ldr	r4, [sp]
    7714:	add	sp, sp, #4
    7718:	pop	{pc}		; (ldr pc, [sp], #4)
    771c:	mov	r0, #14
    7720:	bx	lr
    7724:	mov	r0, #12
    7728:	bx	lr

0000772c <readstat_insert_int32_value>:
    772c:	ldr	r3, [r0, #308]	; 0x134
    7730:	cmp	r3, #0
    7734:	beq	776c <readstat_insert_int32_value+0x40>
    7738:	ldr	r3, [r1]
    773c:	cmp	r3, #3
    7740:	bne	7774 <readstat_insert_int32_value+0x48>
    7744:	str	r4, [sp, #-8]!
    7748:	str	lr, [sp, #4]
    774c:	ldr	lr, [r0, #72]	; 0x48
    7750:	ldr	ip, [r1, #1592]	; 0x638
    7754:	ldr	r3, [r0, #244]	; 0xf4
    7758:	add	r0, lr, ip
    775c:	blx	r3
    7760:	ldr	r4, [sp]
    7764:	add	sp, sp, #4
    7768:	pop	{pc}		; (ldr pc, [sp], #4)
    776c:	mov	r0, #14
    7770:	bx	lr
    7774:	mov	r0, #12
    7778:	bx	lr

0000777c <readstat_insert_float_value>:
    777c:	ldr	r3, [r0, #308]	; 0x134
    7780:	cmp	r3, #0
    7784:	beq	77bc <readstat_insert_float_value+0x40>
    7788:	ldr	r3, [r1]
    778c:	cmp	r3, #4
    7790:	bne	77c4 <readstat_insert_float_value+0x48>
    7794:	str	r4, [sp, #-8]!
    7798:	str	lr, [sp, #4]
    779c:	ldr	ip, [r0, #72]	; 0x48
    77a0:	ldr	r2, [r1, #1592]	; 0x638
    77a4:	ldr	r3, [r0, #248]	; 0xf8
    77a8:	add	r0, ip, r2
    77ac:	blx	r3
    77b0:	ldr	r4, [sp]
    77b4:	add	sp, sp, #4
    77b8:	pop	{pc}		; (ldr pc, [sp], #4)
    77bc:	mov	r0, #14
    77c0:	bx	lr
    77c4:	mov	r0, #12
    77c8:	bx	lr

000077cc <readstat_insert_double_value>:
    77cc:	ldr	r3, [r0, #308]	; 0x134
    77d0:	cmp	r3, #0
    77d4:	beq	780c <readstat_insert_double_value+0x40>
    77d8:	ldr	r3, [r1]
    77dc:	cmp	r3, #5
    77e0:	bne	7814 <readstat_insert_double_value+0x48>
    77e4:	str	r4, [sp, #-8]!
    77e8:	str	lr, [sp, #4]
    77ec:	ldr	ip, [r0, #72]	; 0x48
    77f0:	ldr	r2, [r1, #1592]	; 0x638
    77f4:	ldr	r3, [r0, #252]	; 0xfc
    77f8:	add	r0, ip, r2
    77fc:	blx	r3
    7800:	ldr	r4, [sp]
    7804:	add	sp, sp, #4
    7808:	pop	{pc}		; (ldr pc, [sp], #4)
    780c:	mov	r0, #14
    7810:	bx	lr
    7814:	mov	r0, #12
    7818:	bx	lr

0000781c <readstat_insert_string_value>:
    781c:	ldr	r3, [r0, #308]	; 0x134
    7820:	cmp	r3, #0
    7824:	beq	785c <readstat_insert_string_value+0x40>
    7828:	ldr	r3, [r1]
    782c:	cmp	r3, #0
    7830:	bne	7864 <readstat_insert_string_value+0x48>
    7834:	str	r4, [sp, #-8]!
    7838:	str	lr, [sp, #4]
    783c:	ldr	lr, [r0, #72]	; 0x48
    7840:	ldr	ip, [r1, #1592]	; 0x638
    7844:	ldr	r3, [r0, #256]	; 0x100
    7848:	add	r0, lr, ip
    784c:	blx	r3
    7850:	ldr	r4, [sp]
    7854:	add	sp, sp, #4
    7858:	pop	{pc}		; (ldr pc, [sp], #4)
    785c:	mov	r0, #14
    7860:	bx	lr
    7864:	mov	r0, #12
    7868:	bx	lr

0000786c <readstat_insert_string_ref>:
    786c:	ldr	r3, [r0, #308]	; 0x134
    7870:	cmp	r3, #0
    7874:	beq	7914 <readstat_insert_string_ref+0xa8>
    7878:	ldr	r3, [r1]
    787c:	cmp	r3, #6
    7880:	bne	791c <readstat_insert_string_ref+0xb0>
    7884:	ldr	r3, [r0, #260]	; 0x104
    7888:	cmp	r3, #0
    788c:	beq	7924 <readstat_insert_string_ref+0xb8>
    7890:	strd	r4, [sp, #-24]!	; 0xffffffe8
    7894:	strd	r6, [sp, #8]
    7898:	str	r8, [sp, #16]
    789c:	str	lr, [sp, #20]
    78a0:	cmp	r2, #0
    78a4:	beq	78c0 <readstat_insert_string_ref+0x54>
    78a8:	ldrd	r4, [r2, #8]
    78ac:	mvn	r6, #0
    78b0:	mvn	r7, #0
    78b4:	cmp	r5, r7
    78b8:	cmpeq	r4, r6
    78bc:	beq	78e8 <readstat_insert_string_ref+0x7c>
    78c0:	ldr	lr, [r0, #72]	; 0x48
    78c4:	ldr	ip, [r1, #1592]	; 0x638
    78c8:	ldr	r3, [r0, #260]	; 0x104
    78cc:	add	r0, lr, ip
    78d0:	blx	r3
    78d4:	ldrd	r4, [sp]
    78d8:	ldrd	r6, [sp, #8]
    78dc:	ldr	r8, [sp, #16]
    78e0:	add	sp, sp, #20
    78e4:	pop	{pc}		; (ldr pc, [sp], #4)
    78e8:	ldrd	r4, [r2]
    78ec:	cmp	r5, r7
    78f0:	cmpeq	r4, r6
    78f4:	bne	78c0 <readstat_insert_string_ref+0x54>
    78f8:	ldr	r4, [r0, #84]	; 0x54
    78fc:	asr	r5, r4, #31
    7900:	strd	r4, [r2, #8]
    7904:	ldr	r4, [r1, #4]
    7908:	asr	r5, r4, #31
    790c:	strd	r4, [r2]
    7910:	b	78c0 <readstat_insert_string_ref+0x54>
    7914:	mov	r0, #14
    7918:	bx	lr
    791c:	mov	r0, #12
    7920:	bx	lr
    7924:	mov	r0, #33	; 0x21
    7928:	bx	lr

0000792c <readstat_insert_missing_value>:
    792c:	ldr	r3, [r0, #308]	; 0x134
    7930:	cmp	r3, #0
    7934:	beq	7998 <readstat_insert_missing_value+0x6c>
    7938:	str	r4, [sp, #-8]!
    793c:	str	lr, [sp, #4]
    7940:	ldr	r3, [r1]
    7944:	cmp	r3, #0
    7948:	beq	7974 <readstat_insert_missing_value+0x48>
    794c:	cmp	r3, #6
    7950:	beq	798c <readstat_insert_missing_value+0x60>
    7954:	ldr	ip, [r0, #72]	; 0x48
    7958:	ldr	r2, [r1, #1592]	; 0x638
    795c:	ldr	r3, [r0, #268]	; 0x10c
    7960:	add	r0, ip, r2
    7964:	blx	r3
    7968:	ldr	r4, [sp]
    796c:	add	sp, sp, #4
    7970:	pop	{pc}		; (ldr pc, [sp], #4)
    7974:	ldr	ip, [r0, #72]	; 0x48
    7978:	ldr	r2, [r1, #1592]	; 0x638
    797c:	ldr	r3, [r0, #264]	; 0x108
    7980:	add	r0, ip, r2
    7984:	blx	r3
    7988:	b	7968 <readstat_insert_missing_value+0x3c>
    798c:	mov	r2, #0
    7990:	bl	3f44 <readstat_insert_string_ref@plt>
    7994:	b	7968 <readstat_insert_missing_value+0x3c>
    7998:	mov	r0, #14
    799c:	bx	lr

000079a0 <readstat_insert_tagged_missing_value>:
    79a0:	ldr	r3, [r0, #308]	; 0x134
    79a4:	cmp	r3, #0
    79a8:	beq	79f8 <readstat_insert_tagged_missing_value+0x58>
    79ac:	str	r4, [sp, #-8]!
    79b0:	str	lr, [sp, #4]
    79b4:	ldr	r3, [r0, #272]	; 0x110
    79b8:	cmp	r3, #0
    79bc:	beq	79dc <readstat_insert_tagged_missing_value+0x3c>
    79c0:	ldr	ip, [r0, #72]	; 0x48
    79c4:	ldr	r0, [r1, #1592]	; 0x638
    79c8:	add	r0, ip, r0
    79cc:	blx	r3
    79d0:	ldr	r4, [sp]
    79d4:	add	sp, sp, #4
    79d8:	pop	{pc}		; (ldr pc, [sp], #4)
    79dc:	ldr	ip, [r0, #72]	; 0x48
    79e0:	ldr	r2, [r1, #1592]	; 0x638
    79e4:	ldr	r3, [r0, #268]	; 0x10c
    79e8:	add	r0, ip, r2
    79ec:	blx	r3
    79f0:	mov	r0, #23
    79f4:	b	79d0 <readstat_insert_tagged_missing_value+0x30>
    79f8:	mov	r0, #14
    79fc:	bx	lr

00007a00 <readstat_end_row>:
    7a00:	ldr	r3, [r0, #308]	; 0x134
    7a04:	cmp	r3, #0
    7a08:	beq	7a48 <readstat_end_row+0x48>
    7a0c:	str	r4, [sp, #-8]!
    7a10:	str	lr, [sp, #4]
    7a14:	mov	r4, r0
    7a18:	ldr	r3, [r0, #280]	; 0x118
    7a1c:	ldr	r2, [r0, #76]	; 0x4c
    7a20:	ldr	r1, [r0, #72]	; 0x48
    7a24:	blx	r3
    7a28:	cmp	r0, #0
    7a2c:	bne	7a3c <readstat_end_row+0x3c>
    7a30:	ldr	r3, [r4, #84]	; 0x54
    7a34:	add	r3, r3, #1
    7a38:	str	r3, [r4, #84]	; 0x54
    7a3c:	ldr	r4, [sp]
    7a40:	add	sp, sp, #4
    7a44:	pop	{pc}		; (ldr pc, [sp], #4)
    7a48:	mov	r0, #14
    7a4c:	bx	lr

00007a50 <readstat_end_writing>:
    7a50:	ldr	r3, [r0, #308]	; 0x134
    7a54:	cmp	r3, #0
    7a58:	beq	7b1c <readstat_end_writing+0xcc>
    7a5c:	ldr	r3, [r0, #80]	; 0x50
    7a60:	ldr	r2, [r0, #84]	; 0x54
    7a64:	cmp	r2, r3
    7a68:	bne	7b24 <readstat_end_writing+0xd4>
    7a6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    7a70:	strd	r6, [sp, #8]
    7a74:	str	r8, [sp, #16]
    7a78:	str	lr, [sp, #20]
    7a7c:	mov	r7, r0
    7a80:	cmp	r3, #0
    7a84:	beq	7ac8 <readstat_end_writing+0x78>
    7a88:	ldr	r6, [r7, #64]	; 0x40
    7a8c:	cmp	r6, #1
    7a90:	ble	7af0 <readstat_end_writing+0xa0>
    7a94:	ldr	r8, [r7, #60]	; 0x3c
    7a98:	mov	r4, r8
    7a9c:	mov	r5, #1
    7aa0:	mov	r0, r4
    7aa4:	add	r4, r4, #4
    7aa8:	mov	r1, r4
    7aac:	bl	66dc <readstat_compare_string_refs>
    7ab0:	cmp	r0, #0
    7ab4:	bgt	7ad8 <readstat_end_writing+0x88>
    7ab8:	add	r5, r5, #1
    7abc:	cmp	r5, r6
    7ac0:	bne	7aa0 <readstat_end_writing+0x50>
    7ac4:	b	7af0 <readstat_end_writing+0xa0>
    7ac8:	bl	7400 <readstat_begin_writing_data>
    7acc:	cmp	r0, #0
    7ad0:	beq	7a88 <readstat_end_writing+0x38>
    7ad4:	b	7b08 <readstat_end_writing+0xb8>
    7ad8:	ldr	r3, [pc, #76]	; 7b2c <readstat_end_writing+0xdc>
    7adc:	add	r3, pc, r3
    7ae0:	mov	r2, #4
    7ae4:	mov	r1, r6
    7ae8:	mov	r0, r8
    7aec:	bl	443c <qsort@plt>
    7af0:	ldr	r3, [r7, #284]	; 0x11c
    7af4:	cmp	r3, #0
    7af8:	moveq	r0, #0
    7afc:	beq	7b08 <readstat_end_writing+0xb8>
    7b00:	mov	r0, r7
    7b04:	blx	r3
    7b08:	ldrd	r4, [sp]
    7b0c:	ldrd	r6, [sp, #8]
    7b10:	ldr	r8, [sp, #16]
    7b14:	add	sp, sp, #20
    7b18:	pop	{pc}		; (ldr pc, [sp], #4)
    7b1c:	mov	r0, #14
    7b20:	bx	lr
    7b24:	mov	r0, #9
    7b28:	bx	lr
    7b2c:	.word	0xffffebf8

00007b30 <memreverse>:
    7b30:	strd	r4, [sp, #-16]!
    7b34:	str	r6, [sp, #8]
    7b38:	str	lr, [sp, #12]
    7b3c:	mov	r5, r0
    7b40:	mov	r4, r1
    7b44:	bl	3ea8 <machine_is_little_endian@plt>
    7b48:	cmp	r0, #0
    7b4c:	beq	7b8c <memreverse+0x5c>
    7b50:	add	ip, r4, r4, lsr #31
    7b54:	asr	ip, ip, #1
    7b58:	cmp	r4, #1
    7b5c:	ble	7b8c <memreverse+0x5c>
    7b60:	sub	r3, r5, #1
    7b64:	add	r1, r5, r4
    7b68:	ldrb	r2, [r3, #1]
    7b6c:	ldrb	r0, [r1, #-1]!
    7b70:	strb	r0, [r3, #1]
    7b74:	strb	r2, [r1]
    7b78:	add	r2, r3, #2
    7b7c:	sub	r2, r2, r5
    7b80:	add	r3, r3, #1
    7b84:	cmp	ip, r2
    7b88:	bgt	7b68 <memreverse+0x38>
    7b8c:	ldrd	r4, [sp]
    7b90:	ldr	r6, [sp, #8]
    7b94:	add	sp, sp, #12
    7b98:	pop	{pc}		; (ldr pc, [sp], #4)

00007b9c <get_native>:
    7b9c:	str	r4, [sp, #-8]!
    7ba0:	str	lr, [sp, #4]
    7ba4:	ldr	r0, [pc, #108]	; 7c18 <get_native+0x7c>
    7ba8:	add	r0, pc, r0
    7bac:	mov	r2, #8
    7bb0:	add	r1, r0, r2
    7bb4:	bl	3f98 <memcmp@plt>
    7bb8:	cmp	r0, #0
    7bbc:	beq	7c10 <get_native+0x74>
    7bc0:	ldr	r0, [pc, #84]	; 7c1c <get_native+0x80>
    7bc4:	add	r0, pc, r0
    7bc8:	mov	r2, #8
    7bcc:	add	r1, r0, #16
    7bd0:	bl	3f98 <memcmp@plt>
    7bd4:	cmp	r0, #0
    7bd8:	beq	7c0c <get_native+0x70>
    7bdc:	ldr	r0, [pc, #60]	; 7c20 <get_native+0x84>
    7be0:	add	r0, pc, r0
    7be4:	mov	r2, #8
    7be8:	add	r1, r0, #24
    7bec:	bl	3f98 <memcmp@plt>
    7bf0:	cmp	r0, #0
    7bf4:	moveq	r0, #2
    7bf8:	beq	7c10 <get_native+0x74>
    7bfc:	mvn	r0, #0
    7c00:	ldr	r4, [sp]
    7c04:	add	sp, sp, #4
    7c08:	pop	{pc}		; (ldr pc, [sp], #4)
    7c0c:	mov	r0, #1
    7c10:	add	r0, r0, #1
    7c14:	b	7c00 <get_native+0x64>
    7c18:	.word	0x0003e770
    7c1c:	.word	0x0003e754
    7c20:	.word	0x0003e738

00007c24 <cnxptiee>:
    7c24:	strd	r4, [sp, #-20]!	; 0xffffffec
    7c28:	strd	r6, [sp, #8]
    7c2c:	str	lr, [sp, #16]
    7c30:	sub	sp, sp, #36	; 0x24
    7c34:	mov	r6, r0
    7c38:	mov	r5, r2
    7c3c:	mov	r7, r3
    7c40:	subs	r4, r1, #0
    7c44:	beq	7cf4 <cnxptiee+0xd0>
    7c48:	cmp	r4, #0
    7c4c:	mvnle	r0, #0
    7c50:	ble	7ce0 <cnxptiee+0xbc>
    7c54:	cmp	r4, #2
    7c58:	ble	7c90 <cnxptiee+0x6c>
    7c5c:	cmp	r4, #3
    7c60:	mvnne	r0, #0
    7c64:	bne	7ce0 <cnxptiee+0xbc>
    7c68:	cmp	r7, #3
    7c6c:	beq	7d0c <cnxptiee+0xe8>
    7c70:	add	r3, r6, #8
    7c74:	add	r2, sp, #24
    7c78:	ldrb	r1, [r3, #-1]!
    7c7c:	strb	r1, [r2], #1
    7c80:	cmp	r3, r6
    7c84:	bne	7c78 <cnxptiee+0x54>
    7c88:	add	r6, sp, #24
    7c8c:	mov	r4, #2
    7c90:	cmp	r7, #0
    7c94:	beq	7d00 <cnxptiee+0xdc>
    7c98:	sub	r3, r7, #1
    7c9c:	cmp	r3, #2
    7ca0:	bhi	8028 <cnxptiee+0x404>
    7ca4:	cmp	r4, r7
    7ca8:	beq	7d0c <cnxptiee+0xe8>
    7cac:	cmp	r4, #1
    7cb0:	beq	7e78 <cnxptiee+0x254>
    7cb4:	cmp	r4, #2
    7cb8:	bne	7cd4 <cnxptiee+0xb0>
    7cbc:	cmp	r7, #1
    7cc0:	beq	7d24 <cnxptiee+0x100>
    7cc4:	ldr	r2, [r6]
    7cc8:	ldr	r3, [r6, #4]
    7ccc:	str	r2, [r5]
    7cd0:	str	r3, [r5, #4]
    7cd4:	cmp	r7, #3
    7cd8:	movne	r0, #0
    7cdc:	beq	7ff4 <cnxptiee+0x3d0>
    7ce0:	add	sp, sp, #36	; 0x24
    7ce4:	ldrd	r4, [sp]
    7ce8:	ldrd	r6, [sp, #8]
    7cec:	add	sp, sp, #16
    7cf0:	pop	{pc}		; (ldr pc, [sp], #4)
    7cf4:	bl	41c0 <get_native@plt>
    7cf8:	mov	r4, r0
    7cfc:	b	7c48 <cnxptiee+0x24>
    7d00:	bl	41c0 <get_native@plt>
    7d04:	mov	r7, r0
    7d08:	b	7c98 <cnxptiee+0x74>
    7d0c:	ldr	r2, [r6]
    7d10:	ldr	r3, [r6, #4]
    7d14:	str	r2, [r5]
    7d18:	str	r3, [r5, #4]
    7d1c:	mov	r0, #0
    7d20:	b	7ce0 <cnxptiee+0xbc>
    7d24:	mov	r7, #0
    7d28:	str	r7, [sp, #12]
    7d2c:	ldr	r2, [r6]
    7d30:	ldr	r3, [r6, #4]
    7d34:	str	r2, [sp, #16]
    7d38:	str	r3, [sp, #20]
    7d3c:	mov	r4, r3
    7d40:	str	r2, [sp, #8]
    7d44:	mov	r1, #4
    7d48:	add	r0, sp, #8
    7d4c:	bl	3db8 <memreverse@plt>
    7d50:	str	r4, [sp, #12]
    7d54:	mov	r1, #4
    7d58:	add	r0, sp, #12
    7d5c:	bl	3db8 <memreverse@plt>
    7d60:	str	r7, [r5]
    7d64:	str	r7, [r5, #4]
    7d68:	ldrb	r3, [sp, #16]
    7d6c:	ldrb	r2, [sp, #17]
    7d70:	and	r3, r3, r2
    7d74:	cmp	r3, #255	; 0xff
    7d78:	beq	7e20 <cnxptiee+0x1fc>
    7d7c:	ldr	r2, [sp, #8]
    7d80:	ubfx	r1, r2, #0, #20
    7d84:	str	r1, [sp]
    7d88:	ldr	r0, [sp, #12]
    7d8c:	str	r0, [sp, #4]
    7d90:	orrs	r3, r2, r0
    7d94:	beq	7e4c <cnxptiee+0x228>
    7d98:	ubfx	r3, r2, #20, #11
    7d9c:	sub	r3, r3, #1020	; 0x3fc
    7da0:	sub	r3, r3, #3
    7da4:	orr	r1, r1, #1048576	; 0x100000
    7da8:	ands	ip, r3, #3
    7dac:	streq	r1, [sp]
    7db0:	beq	7dd4 <cnxptiee+0x1b0>
    7db4:	lsr	lr, r0, #24
    7db8:	and	lr, lr, #224	; 0xe0
    7dbc:	rsb	r4, ip, #8
    7dc0:	lsl	r1, r1, ip
    7dc4:	orr	r1, r1, lr, lsr r4
    7dc8:	str	r1, [sp]
    7dcc:	lsl	r0, r0, ip
    7dd0:	str	r0, [sp, #4]
    7dd4:	lsr	r2, r2, #24
    7dd8:	asr	r1, r3, #2
    7ddc:	add	r1, r1, #65	; 0x41
    7de0:	and	r0, r2, #128	; 0x80
    7de4:	orr	r1, r1, r0
    7de8:	ldr	r0, [sp]
    7dec:	orr	r1, r0, r1, lsl #24
    7df0:	str	r1, [sp]
    7df4:	cmn	r3, #260	; 0x104
    7df8:	blt	7e3c <cnxptiee+0x218>
    7dfc:	cmp	r3, #248	; 0xf8
    7e00:	ble	7e4c <cnxptiee+0x228>
    7e04:	mvn	r3, #0
    7e08:	str	r3, [r5, #1]
    7e0c:	str	r3, [r5, #4]
    7e10:	orr	r2, r2, #127	; 0x7f
    7e14:	strb	r2, [r5]
    7e18:	mov	r0, #0
    7e1c:	b	7ce0 <cnxptiee+0xbc>
    7e20:	ldrb	r3, [sp, #18]
    7e24:	mvn	r3, r3
    7e28:	uxtb	r3, r3
    7e2c:	cmp	r3, #210	; 0xd2
    7e30:	moveq	r3, #109	; 0x6d
    7e34:	strb	r3, [r5]
    7e38:	b	7e18 <cnxptiee+0x1f4>
    7e3c:	mov	r3, #0
    7e40:	str	r3, [r5]
    7e44:	str	r3, [r5, #4]
    7e48:	b	7e18 <cnxptiee+0x1f4>
    7e4c:	mov	r1, #4
    7e50:	mov	r0, sp
    7e54:	bl	3db8 <memreverse@plt>
    7e58:	ldr	r3, [sp]
    7e5c:	str	r3, [r5]
    7e60:	mov	r1, #4
    7e64:	add	r0, sp, r1
    7e68:	bl	3db8 <memreverse@plt>
    7e6c:	ldr	r3, [sp, #4]
    7e70:	str	r3, [r5, #4]
    7e74:	b	7e18 <cnxptiee+0x1f4>
    7e78:	mov	r3, #0
    7e7c:	str	r3, [sp, #8]
    7e80:	str	r3, [sp, #12]
    7e84:	ldr	r2, [r6]
    7e88:	ldr	r1, [r6, #4]
    7e8c:	str	r2, [sp, #16]
    7e90:	str	r1, [sp, #20]
    7e94:	str	r3, [r5]
    7e98:	str	r3, [r5, #4]
    7e9c:	ands	r6, r2, #255	; 0xff
    7ea0:	beq	7ebc <cnxptiee+0x298>
    7ea4:	mov	r2, #7
    7ea8:	mov	r1, r5
    7eac:	add	r0, sp, #17
    7eb0:	bl	3f98 <memcmp@plt>
    7eb4:	cmp	r0, #0
    7eb8:	beq	7f2c <cnxptiee+0x308>
    7ebc:	ldr	r3, [sp, #16]
    7ec0:	str	r3, [sp, #8]
    7ec4:	mov	r1, #4
    7ec8:	add	r0, sp, #8
    7ecc:	bl	3db8 <memreverse@plt>
    7ed0:	ldr	r3, [sp, #20]
    7ed4:	str	r3, [sp, #12]
    7ed8:	mov	r1, #4
    7edc:	add	r0, sp, #12
    7ee0:	bl	3db8 <memreverse@plt>
    7ee4:	ldr	r3, [sp, #8]
    7ee8:	bic	r2, r3, #-2147483648	; 0x80000000
    7eec:	cmn	r2, #-2147483647	; 0x80000001
    7ef0:	beq	7f44 <cnxptiee+0x320>
    7ef4:	bic	r1, r3, #-16777216	; 0xff000000
    7ef8:	str	r1, [sp]
    7efc:	ldr	r2, [sp, #12]
    7f00:	str	r2, [sp, #4]
    7f04:	orrs	r0, r3, r2
    7f08:	beq	7cd4 <cnxptiee+0xb0>
    7f0c:	tst	r3, #8388608	; 0x800000
    7f10:	bne	7f78 <cnxptiee+0x354>
    7f14:	tst	r3, #4194304	; 0x400000
    7f18:	bne	7fec <cnxptiee+0x3c8>
    7f1c:	ands	r0, r3, #2097152	; 0x200000
    7f20:	moveq	r4, r0
    7f24:	beq	7f98 <cnxptiee+0x374>
    7f28:	b	7f7c <cnxptiee+0x358>
    7f2c:	mvn	r3, #0
    7f30:	strb	r3, [r5, #1]
    7f34:	strb	r3, [r5]
    7f38:	mvn	r2, r6
    7f3c:	strb	r2, [r5, #2]
    7f40:	b	7cd4 <cnxptiee+0xb0>
    7f44:	ldr	r2, [sp, #12]
    7f48:	cmn	r2, #1
    7f4c:	bicne	r1, r3, #-16777216	; 0xff000000
    7f50:	strne	r1, [sp]
    7f54:	strne	r2, [sp, #4]
    7f58:	bne	7f0c <cnxptiee+0x2e8>
    7f5c:	and	r3, r3, #-2147483648	; 0x80000000
    7f60:	orr	r3, r3, #2130706432	; 0x7f000000
    7f64:	orr	r3, r3, #15728640	; 0xf00000
    7f68:	str	r3, [sp]
    7f6c:	mov	r3, #0
    7f70:	str	r3, [sp, #4]
    7f74:	b	7fc0 <cnxptiee+0x39c>
    7f78:	mov	r4, #3
    7f7c:	lsr	r1, r1, r4
    7f80:	str	r1, [sp]
    7f84:	and	ip, r3, #7
    7f88:	rsb	r0, r4, #32
    7f8c:	lsr	r1, r2, r4
    7f90:	orr	r2, r1, ip, lsl r0
    7f94:	str	r2, [sp, #4]
    7f98:	and	r2, r6, #127	; 0x7f
    7f9c:	add	r4, r4, r2, lsl #2
    7fa0:	add	r4, r4, #760	; 0x2f8
    7fa4:	add	r4, r4, #3
    7fa8:	ldr	r2, [sp]
    7fac:	bic	r2, r2, #1048576	; 0x100000
    7fb0:	and	r3, r3, #-2147483648	; 0x80000000
    7fb4:	orr	r3, r2, r3
    7fb8:	orr	r3, r3, r4, lsl #20
    7fbc:	str	r3, [sp]
    7fc0:	mov	r1, #4
    7fc4:	mov	r0, sp
    7fc8:	bl	3db8 <memreverse@plt>
    7fcc:	ldr	r3, [sp]
    7fd0:	str	r3, [r5]
    7fd4:	mov	r1, #4
    7fd8:	add	r0, sp, r1
    7fdc:	bl	3db8 <memreverse@plt>
    7fe0:	ldr	r3, [sp, #4]
    7fe4:	str	r3, [r5, #4]
    7fe8:	b	7cd4 <cnxptiee+0xb0>
    7fec:	mov	r4, #2
    7ff0:	b	7f7c <cnxptiee+0x358>
    7ff4:	ldr	r2, [r5]
    7ff8:	ldr	r3, [r5, #4]
    7ffc:	str	r2, [sp, #24]
    8000:	str	r3, [sp, #28]
    8004:	add	r2, sp, #32
    8008:	sub	r3, r5, #1
    800c:	add	r5, r5, #7
    8010:	ldrb	r1, [r2, #-1]!
    8014:	strb	r1, [r3, #1]!
    8018:	cmp	r3, r5
    801c:	bne	8010 <cnxptiee+0x3ec>
    8020:	mov	r0, #0
    8024:	b	7ce0 <cnxptiee+0xbc>
    8028:	mvn	r0, #1
    802c:	b	7ce0 <cnxptiee+0xbc>

00008030 <sas_read8>:
    8030:	push	{lr}		; (str lr, [sp, #-4]!)
    8034:	sub	sp, sp, #12
    8038:	ldr	r2, [r0]
    803c:	ldr	r3, [r0, #4]
    8040:	str	r2, [sp]
    8044:	str	r3, [sp, #4]
    8048:	cmp	r1, #0
    804c:	bne	805c <sas_read8+0x2c>
    8050:	ldrd	r0, [sp]
    8054:	add	sp, sp, #12
    8058:	pop	{pc}		; (ldr pc, [sp], #4)
    805c:	ldrd	r0, [sp]
    8060:	bl	3d70 <byteswap8@plt>
    8064:	b	8054 <sas_read8+0x24>

00008068 <sas_read4>:
    8068:	ldr	r0, [r0]
    806c:	cmp	r1, #0
    8070:	bxeq	lr
    8074:	str	r4, [sp, #-8]!
    8078:	str	lr, [sp, #4]
    807c:	bl	3d88 <byteswap4@plt>
    8080:	ldr	r4, [sp]
    8084:	add	sp, sp, #4
    8088:	pop	{pc}		; (ldr pc, [sp], #4)

0000808c <sas_read2>:
    808c:	ldrh	r0, [r0]
    8090:	cmp	r1, #0
    8094:	bxeq	lr
    8098:	str	r4, [sp, #-8]!
    809c:	str	lr, [sp, #4]
    80a0:	bl	3e9c <byteswap2@plt>
    80a4:	ldr	r4, [sp]
    80a8:	add	sp, sp, #4
    80ac:	pop	{pc}		; (ldr pc, [sp], #4)

000080b0 <sas_subheader_remainder>:
    80b0:	add	r1, r1, #2
    80b4:	sub	r0, r0, r1, lsl #1
    80b8:	bx	lr

000080bc <sas_read_header>:
    80bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
    80c0:	strd	r6, [sp, #8]
    80c4:	strd	r8, [sp, #16]
    80c8:	strd	sl, [sp, #24]
    80cc:	str	lr, [sp, #32]
    80d0:	sub	sp, sp, #1424	; 0x590
    80d4:	sub	sp, sp, #4
    80d8:	mov	r4, r0
    80dc:	mov	r5, r1
    80e0:	mov	r7, r2
    80e4:	mov	r8, r3
    80e8:	ldr	r9, [pc, #1728]	; 87b0 <sas_read_header+0x6f4>
    80ec:	add	r9, pc, r9
    80f0:	mov	r3, #0
    80f4:	str	r3, [sp, #72]	; 0x48
    80f8:	add	r0, sp, #72	; 0x48
    80fc:	str	r3, [r0, #4]
    8100:	str	r3, [r0, #8]
    8104:	str	r3, [r0, #16]
    8108:	str	r3, [r0, #24]
    810c:	str	r3, [r0, #28]
    8110:	str	r3, [r0, #32]
    8114:	str	r3, [r0, #36]	; 0x24
    8118:	str	r3, [r0, #40]	; 0x28
    811c:	mov	r3, #1
    8120:	str	r3, [sp, #84]	; 0x54
    8124:	mov	r3, #60	; 0x3c
    8128:	str	r3, [sp, #92]	; 0x5c
    812c:	bl	3e48 <mktime@plt>
    8130:	mov	r6, r0
    8134:	ldr	r3, [r4, #12]
    8138:	ldr	r2, [r4, #20]
    813c:	mov	r1, #164	; 0xa4
    8140:	add	r0, sp, #1248	; 0x4e0
    8144:	add	r0, r0, #12
    8148:	blx	r3
    814c:	cmp	r0, #163	; 0xa3
    8150:	movls	r0, #2
    8154:	bls	81e4 <sas_read_header+0x128>
    8158:	ldr	r3, [pc, #1620]	; 87b4 <sas_read_header+0x6f8>
    815c:	ldr	r3, [r9, r3]
    8160:	str	r3, [sp, #12]
    8164:	mov	r2, #32
    8168:	mov	r1, r3
    816c:	add	r0, sp, #1248	; 0x4e0
    8170:	add	r0, r0, #12
    8174:	bl	3f98 <memcmp@plt>
    8178:	cmp	r0, #0
    817c:	beq	81ac <sas_read_header+0xf0>
    8180:	ldr	r3, [pc, #1584]	; 87b8 <sas_read_header+0x6fc>
    8184:	ldr	r3, [r9, r3]
    8188:	str	r3, [sp, #12]
    818c:	mov	r2, #32
    8190:	mov	r1, r3
    8194:	add	r0, sp, #1248	; 0x4e0
    8198:	add	r0, r0, #12
    819c:	bl	3f98 <memcmp@plt>
    81a0:	cmp	r0, #0
    81a4:	movne	r0, #5
    81a8:	bne	81e4 <sas_read_header+0x128>
    81ac:	ldrb	r3, [sp, #1295]	; 0x50f
    81b0:	cmp	r3, #51	; 0x33
    81b4:	moveq	r3, #4
    81b8:	streq	r3, [r5, #24]
    81bc:	ldrb	r3, [sp, #1292]	; 0x50c
    81c0:	cmp	r3, #51	; 0x33
    81c4:	moveq	r3, #1
    81c8:	streq	r3, [r5, #4]
    81cc:	ldrb	r3, [sp, #1297]	; 0x511
    81d0:	cmp	r3, #0
    81d4:	beq	8204 <sas_read_header+0x148>
    81d8:	cmp	r3, #1
    81dc:	movne	r0, #5
    81e0:	beq	8298 <sas_read_header+0x1dc>
    81e4:	add	sp, sp, #1424	; 0x590
    81e8:	add	sp, sp, #4
    81ec:	ldrd	r4, [sp]
    81f0:	ldrd	r6, [sp, #8]
    81f4:	ldrd	r8, [sp, #16]
    81f8:	ldrd	sl, [sp, #24]
    81fc:	add	sp, sp, #32
    8200:	pop	{pc}		; (ldr pc, [sp], #4)
    8204:	bl	3ea8 <machine_is_little_endian@plt>
    8208:	mov	r9, r0
    820c:	mov	r3, #0
    8210:	str	r3, [r5]
    8214:	ldrb	r3, [sp, #1330]	; 0x532
    8218:	ldr	r2, [pc, #1436]	; 87bc <sas_read_header+0x700>
    821c:	add	r2, pc, r2
    8220:	ldr	r2, [r2]
    8224:	cmp	r3, r2
    8228:	beq	82b0 <sas_read_header+0x1f4>
    822c:	ldr	r1, [pc, #1420]	; 87c0 <sas_read_header+0x704>
    8230:	add	r1, pc, r1
    8234:	mov	r2, #1
    8238:	ldr	r0, [r1, #36]	; 0x24
    823c:	cmp	r0, r3
    8240:	beq	82b4 <sas_read_header+0x1f8>
    8244:	add	r2, r2, #1
    8248:	add	r1, r1, #36	; 0x24
    824c:	cmp	r2, #62	; 0x3e
    8250:	bne	8238 <sas_read_header+0x17c>
    8254:	ldr	r2, [r5, #144]	; 0x90
    8258:	cmp	r2, #0
    825c:	bne	82cc <sas_read_header+0x210>
    8260:	cmp	r7, #0
    8264:	moveq	r0, #7
    8268:	beq	81e4 <sas_read_header+0x128>
    826c:	ldr	r2, [pc, #1360]	; 87c4 <sas_read_header+0x708>
    8270:	add	r2, pc, r2
    8274:	mov	r1, #1024	; 0x400
    8278:	add	r4, sp, #116	; 0x74
    827c:	mov	r0, r4
    8280:	bl	4280 <snprintf@plt>
    8284:	mov	r1, r8
    8288:	mov	r0, r4
    828c:	blx	r7
    8290:	mov	r0, #7
    8294:	b	81e4 <sas_read_header+0x128>
    8298:	bl	3ea8 <machine_is_little_endian@plt>
    829c:	clz	r9, r0
    82a0:	lsr	r9, r9, #5
    82a4:	mov	r3, #1
    82a8:	str	r3, [r5]
    82ac:	b	8214 <sas_read_header+0x158>
    82b0:	mov	r2, #0
    82b4:	add	r2, r2, r2, lsl #3
    82b8:	ldr	r3, [pc, #1288]	; 87c8 <sas_read_header+0x70c>
    82bc:	add	r3, pc, r3
    82c0:	add	r2, r3, r2, lsl #2
    82c4:	add	r2, r2, #4
    82c8:	str	r2, [r5, #144]	; 0x90
    82cc:	ldr	r1, [sp, #1356]	; 0x54c
    82d0:	ldr	r0, [sp, #1352]	; 0x548
    82d4:	str	r0, [r5, #80]	; 0x50
    82d8:	str	r1, [r5, #84]	; 0x54
    82dc:	ldr	r0, [sp, #1360]	; 0x550
    82e0:	ldr	r1, [sp, #1364]	; 0x554
    82e4:	str	r0, [r5, #88]	; 0x58
    82e8:	str	r1, [r5, #92]	; 0x5c
    82ec:	ldr	r0, [sp, #1368]	; 0x558
    82f0:	ldr	r1, [sp, #1372]	; 0x55c
    82f4:	str	r0, [r5, #96]	; 0x60
    82f8:	str	r1, [r5, #100]	; 0x64
    82fc:	ldr	r0, [sp, #1376]	; 0x560
    8300:	ldr	r1, [sp, #1380]	; 0x564
    8304:	str	r0, [r5, #104]	; 0x68
    8308:	str	r1, [r5, #108]	; 0x6c
    830c:	ldr	r0, [sp, #1384]	; 0x568
    8310:	ldr	r1, [sp, #1388]	; 0x56c
    8314:	str	r0, [r5, #112]	; 0x70
    8318:	str	r1, [r5, #116]	; 0x74
    831c:	ldr	r0, [sp, #1392]	; 0x570
    8320:	ldr	r1, [sp, #1396]	; 0x574
    8324:	str	r0, [r5, #120]	; 0x78
    8328:	str	r1, [r5, #124]	; 0x7c
    832c:	ldr	r0, [sp, #1400]	; 0x578
    8330:	ldr	r1, [sp, #1404]	; 0x57c
    8334:	str	r0, [r5, #128]	; 0x80
    8338:	str	r1, [r5, #132]	; 0x84
    833c:	ldr	r1, [sp, #1408]	; 0x580
    8340:	ldr	r2, [sp, #1412]	; 0x584
    8344:	str	r1, [r5, #136]	; 0x88
    8348:	str	r2, [r5, #140]	; 0x8c
    834c:	ldr	r3, [r4, #8]
    8350:	ldr	r2, [r4, #20]
    8354:	mov	r1, #1
    8358:	ldr	r0, [r5, #24]
    835c:	blx	r3
    8360:	cmn	r0, #1
    8364:	moveq	r0, #15
    8368:	beq	81e4 <sas_read_header+0x128>
    836c:	ldr	r3, [r4, #12]
    8370:	ldr	r2, [r4, #20]
    8374:	mov	r1, #8
    8378:	add	r0, sp, #64	; 0x40
    837c:	blx	r3
    8380:	cmp	r0, #7
    8384:	movls	r0, #2
    8388:	bls	81e4 <sas_read_header+0x128>
    838c:	cmp	r9, #0
    8390:	bne	86a0 <sas_read_header+0x5e4>
    8394:	ldr	r3, [r4, #12]
    8398:	ldr	r2, [r4, #20]
    839c:	mov	r1, #8
    83a0:	add	r0, sp, #56	; 0x38
    83a4:	blx	r3
    83a8:	cmp	r0, #7
    83ac:	bls	8814 <sas_read_header+0x758>
    83b0:	vmov	s15, r6
    83b4:	vcvt.f64.s32	d7, s15
    83b8:	add	r3, sp, #64	; 0x40
    83bc:	vldr	d6, [sp, #64]	; 0x40
    83c0:	vadd.f64	d6, d7, d6
    83c4:	vcmp.f64	d6, d6
    83c8:	vmrs	APSR_nzcv, fpscr
    83cc:	bvs	86e4 <sas_read_header+0x628>
    83d0:	vldr	d5, [pc, #968]	; 87a0 <sas_read_header+0x6e4>
    83d4:	vcmpe.f64	d6, d5
    83d8:	vmrs	APSR_nzcv, fpscr
    83dc:	mvngt	r3, #-2147483648	; 0x80000000
    83e0:	bgt	83fc <sas_read_header+0x340>
    83e4:	vldr	d5, [pc, #956]	; 87a8 <sas_read_header+0x6ec>
    83e8:	vcmpe.f64	d6, d5
    83ec:	vmrs	APSR_nzcv, fpscr
    83f0:	bmi	86ec <sas_read_header+0x630>
    83f4:	vcvt.s32.f64	s13, d6
    83f8:	vmov	r3, s13
    83fc:	str	r3, [r5, #72]	; 0x48
    8400:	add	r3, sp, #64	; 0x40
    8404:	vldr	d6, [sp, #56]	; 0x38
    8408:	vadd.f64	d7, d7, d6
    840c:	vcmp.f64	d7, d7
    8410:	vmrs	APSR_nzcv, fpscr
    8414:	bvs	86f4 <sas_read_header+0x638>
    8418:	vldr	d6, [pc, #896]	; 87a0 <sas_read_header+0x6e4>
    841c:	vcmpe.f64	d7, d6
    8420:	vmrs	APSR_nzcv, fpscr
    8424:	mvngt	r3, #-2147483648	; 0x80000000
    8428:	bgt	8444 <sas_read_header+0x388>
    842c:	vldr	d6, [pc, #884]	; 87a8 <sas_read_header+0x6ec>
    8430:	vcmpe.f64	d7, d6
    8434:	vmrs	APSR_nzcv, fpscr
    8438:	bmi	86fc <sas_read_header+0x640>
    843c:	vcvt.s32.f64	s15, d7
    8440:	vmov	r3, s15
    8444:	str	r3, [r5, #76]	; 0x4c
    8448:	ldr	r3, [r4, #8]
    844c:	ldr	r2, [r4, #20]
    8450:	mov	r1, #1
    8454:	mov	r0, #16
    8458:	blx	r3
    845c:	cmn	r0, #1
    8460:	moveq	r0, #15
    8464:	beq	81e4 <sas_read_header+0x128>
    8468:	ldr	r3, [r4, #12]
    846c:	ldr	r2, [r4, #20]
    8470:	mov	r1, #4
    8474:	add	r0, sp, #52	; 0x34
    8478:	blx	r3
    847c:	cmp	r0, #3
    8480:	movls	r0, #2
    8484:	bls	81e4 <sas_read_header+0x128>
    8488:	ldr	r3, [r4, #12]
    848c:	ldr	r2, [r4, #20]
    8490:	mov	r1, #4
    8494:	add	r0, sp, #48	; 0x30
    8498:	blx	r3
    849c:	cmp	r0, #3
    84a0:	movls	r0, #2
    84a4:	bls	81e4 <sas_read_header+0x128>
    84a8:	cmp	r9, #0
    84ac:	bne	8704 <sas_read_header+0x648>
    84b0:	ldr	r3, [sp, #52]	; 0x34
    84b4:	str	r3, [r5, #64]	; 0x40
    84b8:	mov	r3, #0
    84bc:	str	r3, [r5, #68]	; 0x44
    84c0:	ldr	r0, [sp, #48]	; 0x30
    84c4:	str	r0, [r5, #32]
    84c8:	mov	r3, #0
    84cc:	str	r3, [r5, #36]	; 0x24
    84d0:	ldr	r3, [r5, #64]	; 0x40
    84d4:	ldr	r2, [r5, #68]	; 0x44
    84d8:	subs	r3, r3, #1024	; 0x400
    84dc:	str	r3, [sp, #16]
    84e0:	sbc	r3, r2, #0
    84e4:	str	r3, [sp, #20]
    84e8:	mov	r2, #64512	; 0xfc00
    84ec:	movt	r2, #15
    84f0:	mov	r3, #0
    84f4:	ldrd	sl, [sp, #16]
    84f8:	cmp	fp, r3
    84fc:	cmpeq	sl, r2
    8500:	movhi	r3, #1
    8504:	movls	r3, #0
    8508:	sub	r0, r0, #1024	; 0x400
    850c:	mov	r2, #64512	; 0xfc00
    8510:	movt	r2, #255	; 0xff
    8514:	cmp	r0, r2
    8518:	movls	r0, r3
    851c:	orrhi	r0, r3, #1
    8520:	cmp	r0, #0
    8524:	movne	r0, #5
    8528:	bne	81e4 <sas_read_header+0x128>
    852c:	ldr	r3, [r5, #4]
    8530:	cmp	r3, #0
    8534:	beq	8724 <sas_read_header+0x668>
    8538:	mov	r2, #40	; 0x28
    853c:	mov	r3, #0
    8540:	strd	r2, [r5, #40]	; 0x28
    8544:	mov	r2, #24
    8548:	mov	r3, #0
    854c:	strd	r2, [r5, #48]	; 0x30
    8550:	ldr	r3, [r4, #12]
    8554:	ldr	r2, [r4, #20]
    8558:	mov	r1, #8
    855c:	add	r0, sp, #24
    8560:	blx	r3
    8564:	cmp	r0, #7
    8568:	bls	8774 <sas_read_header+0x6b8>
    856c:	cmp	r9, #0
    8570:	bne	877c <sas_read_header+0x6c0>
    8574:	ldrd	r0, [sp, #24]
    8578:	strd	r0, [r5, #56]	; 0x38
    857c:	ldrd	r2, [r5, #56]	; 0x38
    8580:	mov	r0, #16777216	; 0x1000000
    8584:	mov	r1, #0
    8588:	cmp	r0, r2
    858c:	sbcs	r3, r1, r3
    8590:	movlt	r0, #5
    8594:	blt	81e4 <sas_read_header+0x128>
    8598:	ldr	r3, [r4, #8]
    859c:	ldr	r2, [r4, #20]
    85a0:	mov	r1, #1
    85a4:	mov	r0, #8
    85a8:	blx	r3
    85ac:	cmn	r0, #1
    85b0:	beq	87d8 <sas_read_header+0x71c>
    85b4:	ldr	r3, [r4, #12]
    85b8:	ldr	r2, [r4, #20]
    85bc:	mov	r1, #120	; 0x78
    85c0:	add	r0, sp, #1136	; 0x470
    85c4:	add	r0, r0, #4
    85c8:	blx	r3
    85cc:	cmp	r0, #119	; 0x77
    85d0:	movls	r0, #2
    85d4:	bls	81e4 <sas_read_header+0x128>
    85d8:	add	r3, sp, #36	; 0x24
    85dc:	str	r3, [sp]
    85e0:	add	r3, sp, #40	; 0x28
    85e4:	add	r2, sp, #44	; 0x2c
    85e8:	ldr	r1, [pc, #476]	; 87cc <sas_read_header+0x710>
    85ec:	add	r1, pc, r1
    85f0:	add	r0, sp, #1136	; 0x470
    85f4:	add	r0, r0, #4
    85f8:	bl	428c <__isoc99_sscanf@plt>
    85fc:	cmp	r0, #3
    8600:	movne	r0, #5
    8604:	bne	81e4 <sas_read_header+0x128>
    8608:	ldr	r3, [sp, #44]	; 0x2c
    860c:	str	r3, [r5, #12]
    8610:	ldr	r2, [sp, #40]	; 0x28
    8614:	str	r2, [r5, #16]
    8618:	ldr	r1, [sp, #36]	; 0x24
    861c:	str	r1, [r5, #20]
    8620:	sub	r3, r3, #8
    8624:	orr	r2, r2, r1
    8628:	cmp	r3, #1
    862c:	cmpls	r2, #0
    8630:	moveq	r3, #1
    8634:	movne	r3, #0
    8638:	eor	r3, r3, #1
    863c:	str	r3, [r5, #8]
    8640:	ldr	r3, [r4, #8]
    8644:	ldr	r2, [r4, #20]
    8648:	mov	r1, #0
    864c:	ldr	r0, [r5, #64]	; 0x40
    8650:	blx	r3
    8654:	cmn	r0, #1
    8658:	movne	r0, #0
    865c:	bne	81e4 <sas_read_header+0x128>
    8660:	cmp	r7, #0
    8664:	moveq	r0, #15
    8668:	beq	81e4 <sas_read_header+0x128>
    866c:	ldrd	r2, [r5, #64]	; 0x40
    8670:	strd	r2, [sp]
    8674:	ldr	r2, [pc, #340]	; 87d0 <sas_read_header+0x714>
    8678:	add	r2, pc, r2
    867c:	mov	r1, #1024	; 0x400
    8680:	add	r4, sp, #116	; 0x74
    8684:	mov	r0, r4
    8688:	bl	4280 <snprintf@plt>
    868c:	mov	r1, r8
    8690:	mov	r0, r4
    8694:	blx	r7
    8698:	mov	r0, #15
    869c:	b	81e4 <sas_read_header+0x128>
    86a0:	add	sl, sp, #64	; 0x40
    86a4:	vldr	d0, [sp, #64]	; 0x40
    86a8:	bl	4508 <byteswap_double@plt>
    86ac:	sub	r0, sl, #8
    86b0:	vstr	d0, [sl]
    86b4:	ldr	r3, [r4, #12]
    86b8:	ldr	r2, [r4, #20]
    86bc:	mov	r1, #8
    86c0:	blx	r3
    86c4:	cmp	r0, #7
    86c8:	movls	r0, #2
    86cc:	bls	81e4 <sas_read_header+0x128>
    86d0:	add	sl, sp, #64	; 0x40
    86d4:	vldr	d0, [sp, #56]	; 0x38
    86d8:	bl	4508 <byteswap_double@plt>
    86dc:	vstr	d0, [sl, #-8]
    86e0:	b	83b0 <sas_read_header+0x2f4>
    86e4:	mov	r3, #0
    86e8:	b	83fc <sas_read_header+0x340>
    86ec:	mov	r3, #-2147483648	; 0x80000000
    86f0:	b	83fc <sas_read_header+0x340>
    86f4:	mov	r3, #0
    86f8:	b	8444 <sas_read_header+0x388>
    86fc:	mov	r3, #-2147483648	; 0x80000000
    8700:	b	8444 <sas_read_header+0x388>
    8704:	ldr	r0, [sp, #52]	; 0x34
    8708:	bl	3d88 <byteswap4@plt>
    870c:	str	r0, [r5, #64]	; 0x40
    8710:	mov	r3, #0
    8714:	str	r3, [r5, #68]	; 0x44
    8718:	ldr	r0, [sp, #48]	; 0x30
    871c:	bl	3d88 <byteswap4@plt>
    8720:	b	84c4 <sas_read_header+0x408>
    8724:	mov	r2, #24
    8728:	mov	r3, #0
    872c:	strd	r2, [r5, #40]	; 0x28
    8730:	mov	r2, #12
    8734:	mov	r3, #0
    8738:	strd	r2, [r5, #48]	; 0x30
    873c:	ldr	r3, [r4, #12]
    8740:	ldr	r2, [r4, #20]
    8744:	mov	r1, #4
    8748:	add	r0, sp, #24
    874c:	blx	r3
    8750:	cmp	r0, #3
    8754:	bls	8788 <sas_read_header+0x6cc>
    8758:	cmp	r9, #0
    875c:	bne	8790 <sas_read_header+0x6d4>
    8760:	ldr	r0, [sp, #24]
    8764:	str	r0, [r5, #56]	; 0x38
    8768:	mov	r3, #0
    876c:	str	r3, [r5, #60]	; 0x3c
    8770:	b	857c <sas_read_header+0x4c0>
    8774:	mov	r0, #2
    8778:	b	81e4 <sas_read_header+0x128>
    877c:	ldrd	r0, [sp, #24]
    8780:	bl	3d70 <byteswap8@plt>
    8784:	b	8578 <sas_read_header+0x4bc>
    8788:	mov	r0, #2
    878c:	b	81e4 <sas_read_header+0x128>
    8790:	ldr	r0, [sp, #24]
    8794:	bl	3d88 <byteswap4@plt>
    8798:	b	8764 <sas_read_header+0x6a8>
    879c:	nop	{0}
    87a0:	.word	0xffc00000
    87a4:	.word	0x41dfffff
    87a8:	.word	0x00000000
    87ac:	.word	0xc1e00000
    87b0:	.word	0x0003df0c
    87b4:	.word	0x000002f4
    87b8:	.word	0x000002c8
    87bc:	.word	0x0003e11c
    87c0:	.word	0x0003e108
    87c4:	.word	0x0001e390
    87c8:	.word	0x0003e07c
    87cc:	.word	0x0001e060
    87d0:	.word	0x0001dfe4
    87d4:	.word	0x0001de38
    87d8:	cmp	r7, #0
    87dc:	moveq	r0, #15
    87e0:	beq	81e4 <sas_read_header+0x128>
    87e4:	mov	r3, #8
    87e8:	ldr	r2, [pc, #-28]	; 87d4 <sas_read_header+0x718>
    87ec:	add	r2, pc, r2
    87f0:	mov	r1, #1024	; 0x400
    87f4:	add	r4, sp, #116	; 0x74
    87f8:	mov	r0, r4
    87fc:	bl	4280 <snprintf@plt>
    8800:	mov	r1, r8
    8804:	mov	r0, r4
    8808:	blx	r7
    880c:	mov	r0, #15
    8810:	b	81e4 <sas_read_header+0x128>
    8814:	mov	r0, #2
    8818:	b	81e4 <sas_read_header+0x128>

0000881c <sas_write_header>:
    881c:	sub	sp, sp, #8
    8820:	strd	r4, [sp, #-20]!	; 0xffffffec
    8824:	strd	r6, [sp, #8]
    8828:	str	lr, [sp, #16]
    882c:	sub	sp, sp, #228	; 0xe4
    8830:	mov	r4, r0
    8834:	mov	r6, r1
    8838:	add	r1, sp, #244	; 0xf4
    883c:	stmib	r1, {r2, r3}
    8840:	mov	r3, #0
    8844:	str	r3, [sp, #180]	; 0xb4
    8848:	add	r0, sp, #180	; 0xb4
    884c:	str	r3, [r0, #4]
    8850:	str	r3, [r0, #8]
    8854:	str	r3, [r0, #16]
    8858:	str	r3, [r0, #24]
    885c:	str	r3, [r0, #28]
    8860:	str	r3, [r0, #32]
    8864:	str	r3, [r0, #36]	; 0x24
    8868:	str	r3, [r0, #40]	; 0x28
    886c:	mov	r3, #1
    8870:	str	r3, [sp, #192]	; 0xc0
    8874:	mov	r3, #60	; 0x3c
    8878:	str	r3, [sp, #200]	; 0xc8
    887c:	bl	3e48 <mktime@plt>
    8880:	mov	r7, r0
    8884:	mov	r2, #64	; 0x40
    8888:	mov	r1, #32
    888c:	add	r0, sp, #340	; 0x154
    8890:	bl	42a4 <memset@plt>
    8894:	add	r5, r4, #88	; 0x58
    8898:	mov	r0, r5
    889c:	bl	41fc <strlen@plt>
    88a0:	cmp	r0, #64	; 0x40
    88a4:	bhi	88f4 <sas_write_header+0xd8>
    88a8:	cmp	r0, #0
    88ac:	beq	88fc <sas_write_header+0xe0>
    88b0:	mov	r2, r0
    88b4:	mov	r1, r5
    88b8:	add	r0, sp, #340	; 0x154
    88bc:	bl	3f14 <memcpy@plt>
    88c0:	mov	r2, #164	; 0xa4
    88c4:	add	r1, sp, #248	; 0xf8
    88c8:	mov	r0, r4
    88cc:	bl	4454 <readstat_write_bytes@plt>
    88d0:	cmp	r0, #0
    88d4:	beq	8924 <sas_write_header+0x108>
    88d8:	add	sp, sp, #228	; 0xe4
    88dc:	ldrd	r4, [sp]
    88e0:	ldrd	r6, [sp, #8]
    88e4:	ldr	lr, [sp, #16]
    88e8:	add	sp, sp, #20
    88ec:	add	sp, sp, #8
    88f0:	bx	lr
    88f4:	mov	r0, #64	; 0x40
    88f8:	b	88b0 <sas_write_header+0x94>
    88fc:	add	r2, sp, #340	; 0x154
    8900:	ldr	r3, [pc, #496]	; 8af8 <sas_write_header+0x2dc>
    8904:	add	r3, pc, r3
    8908:	ldr	r1, [r3]
    890c:	str	r1, [sp, #340]	; 0x154
    8910:	ldrh	r1, [r3, #4]
    8914:	strh	r1, [r2, #4]
    8918:	ldrb	r3, [r3, #6]
    891c:	strb	r3, [sp, #346]	; 0x15a
    8920:	b	88c0 <sas_write_header+0xa4>
    8924:	ldr	r1, [r6, #24]
    8928:	mov	r0, r4
    892c:	bl	4010 <readstat_write_zeros@plt>
    8930:	cmp	r0, #0
    8934:	bne	88d8 <sas_write_header+0xbc>
    8938:	ldr	r3, [r6, #72]	; 0x48
    893c:	sub	r3, r3, r7
    8940:	vmov	s15, r3
    8944:	vcvt.f64.s32	d7, s15
    8948:	vstr	d7, [sp, #168]	; 0xa8
    894c:	mov	r2, #8
    8950:	add	r1, sp, #168	; 0xa8
    8954:	mov	r0, r4
    8958:	bl	4454 <readstat_write_bytes@plt>
    895c:	cmp	r0, #0
    8960:	bne	88d8 <sas_write_header+0xbc>
    8964:	ldr	r3, [r6, #76]	; 0x4c
    8968:	sub	r7, r3, r7
    896c:	vmov	s15, r7
    8970:	vcvt.f64.s32	d7, s15
    8974:	vstr	d7, [sp, #160]	; 0xa0
    8978:	mov	r2, #8
    897c:	add	r1, sp, #160	; 0xa0
    8980:	mov	r0, r4
    8984:	bl	4454 <readstat_write_bytes@plt>
    8988:	cmp	r0, #0
    898c:	bne	88d8 <sas_write_header+0xbc>
    8990:	mov	r1, #16
    8994:	mov	r0, r4
    8998:	bl	4010 <readstat_write_zeros@plt>
    899c:	cmp	r0, #0
    89a0:	bne	88d8 <sas_write_header+0xbc>
    89a4:	ldr	r3, [r6, #64]	; 0x40
    89a8:	str	r3, [sp, #156]	; 0x9c
    89ac:	ldr	r3, [r6, #32]
    89b0:	str	r3, [sp, #152]	; 0x98
    89b4:	mov	r2, #4
    89b8:	add	r1, sp, #156	; 0x9c
    89bc:	mov	r0, r4
    89c0:	bl	4454 <readstat_write_bytes@plt>
    89c4:	cmp	r0, #0
    89c8:	bne	88d8 <sas_write_header+0xbc>
    89cc:	mov	r2, #4
    89d0:	add	r1, sp, #152	; 0x98
    89d4:	mov	r0, r4
    89d8:	bl	4454 <readstat_write_bytes@plt>
    89dc:	cmp	r0, #0
    89e0:	bne	88d8 <sas_write_header+0xbc>
    89e4:	ldr	r3, [r6, #4]
    89e8:	cmp	r3, #0
    89ec:	beq	8adc <sas_write_header+0x2c0>
    89f0:	ldrd	r2, [r6, #56]	; 0x38
    89f4:	strd	r2, [sp, #8]
    89f8:	mov	r2, #8
    89fc:	add	r1, sp, r2
    8a00:	mov	r0, r4
    8a04:	bl	4454 <readstat_write_bytes@plt>
    8a08:	cmp	r0, #0
    8a0c:	bne	88d8 <sas_write_header+0xbc>
    8a10:	mov	r1, #8
    8a14:	mov	r0, r4
    8a18:	bl	4010 <readstat_write_zeros@plt>
    8a1c:	cmp	r0, #0
    8a20:	bne	88d8 <sas_write_header+0xbc>
    8a24:	mov	r7, #120	; 0x78
    8a28:	mov	r2, r7
    8a2c:	mov	r1, #0
    8a30:	add	r5, sp, #32
    8a34:	mov	r0, r5
    8a38:	bl	42a4 <memset@plt>
    8a3c:	ldr	r1, [pc, #184]	; 8afc <sas_write_header+0x2e0>
    8a40:	add	r1, pc, r1
    8a44:	ldrd	r2, [r1]
    8a48:	strd	r2, [sp, #40]	; 0x28
    8a4c:	ldrh	r3, [r1, #8]
    8a50:	strh	r3, [sp, #48]	; 0x30
    8a54:	mov	r3, #0
    8a58:	str	r3, [sp, #50]	; 0x32
    8a5c:	strh	r3, [sp, #54]	; 0x36
    8a60:	str	r3, [sp, #20]
    8a64:	add	r0, sp, #20
    8a68:	str	r3, [r0, #4]
    8a6c:	strb	r3, [r0, #8]
    8a70:	ldr	r3, [r4, #8]
    8a74:	movw	r2, #52429	; 0xcccd
    8a78:	movt	r2, #52428	; 0xcccc
    8a7c:	umull	r1, r2, r2, r3
    8a80:	lsr	r2, r2, #3
    8a84:	add	r2, r2, r2, lsl #2
    8a88:	mov	r1, #101	; 0x65
    8a8c:	str	r1, [sp]
    8a90:	sub	r3, r3, r2, lsl #1
    8a94:	ldr	r2, [pc, #100]	; 8b00 <sas_write_header+0x2e4>
    8a98:	add	r2, pc, r2
    8a9c:	mov	r1, #9
    8aa0:	bl	4280 <snprintf@plt>
    8aa4:	ldrd	r2, [sp, #20]
    8aa8:	strd	r2, [sp, #32]
    8aac:	mov	r2, r7
    8ab0:	mov	r1, r5
    8ab4:	mov	r0, r4
    8ab8:	bl	4454 <readstat_write_bytes@plt>
    8abc:	cmp	r0, #0
    8ac0:	bne	88d8 <sas_write_header+0xbc>
    8ac4:	ldr	r1, [r6, #64]	; 0x40
    8ac8:	ldr	r3, [r4, #4]
    8acc:	sub	r1, r1, r3
    8ad0:	mov	r0, r4
    8ad4:	bl	4010 <readstat_write_zeros@plt>
    8ad8:	b	88d8 <sas_write_header+0xbc>
    8adc:	ldr	r3, [r6, #56]	; 0x38
    8ae0:	str	r3, [sp, #8]
    8ae4:	mov	r2, #4
    8ae8:	add	r1, sp, #8
    8aec:	mov	r0, r4
    8af0:	bl	4454 <readstat_write_bytes@plt>
    8af4:	b	8a08 <sas_write_header+0x1ec>
    8af8:	.word	0x0001dd84
    8afc:	.word	0x0001dbb0
    8b00:	.word	0x0001dbf8

00008b04 <sas_header_info_init>:
    8b04:	strd	r4, [sp, #-16]!
    8b08:	str	r6, [sp, #8]
    8b0c:	str	lr, [sp, #12]
    8b10:	mov	r5, r0
    8b14:	mov	r4, r1
    8b18:	mov	r1, #152	; 0x98
    8b1c:	mov	r0, #1
    8b20:	bl	3d4c <calloc@plt>
    8b24:	ldr	r3, [r5, #20]
    8b28:	str	r3, [r0, #72]	; 0x48
    8b2c:	str	r3, [r0, #76]	; 0x4c
    8b30:	mov	r2, #4096	; 0x1000
    8b34:	mov	r3, #0
    8b38:	strd	r2, [r0, #32]
    8b3c:	cmp	r4, #0
    8b40:	movne	r3, #1
    8b44:	moveq	r3, #0
    8b48:	str	r3, [r0, #4]
    8b4c:	beq	8b84 <sas_header_info_init+0x80>
    8b50:	mov	r2, #8192	; 0x2000
    8b54:	mov	r3, #0
    8b58:	strd	r2, [r0, #64]	; 0x40
    8b5c:	mov	r2, #40	; 0x28
    8b60:	mov	r3, #0
    8b64:	strd	r2, [r0, #40]	; 0x28
    8b68:	mov	r2, #24
    8b6c:	mov	r3, #0
    8b70:	strd	r2, [r0, #48]	; 0x30
    8b74:	ldrd	r4, [sp]
    8b78:	ldr	r6, [sp, #8]
    8b7c:	add	sp, sp, #12
    8b80:	pop	{pc}		; (ldr pc, [sp], #4)
    8b84:	mov	r2, #1024	; 0x400
    8b88:	mov	r3, #0
    8b8c:	strd	r2, [r0, #64]	; 0x40
    8b90:	mov	r2, #24
    8b94:	mov	r3, #0
    8b98:	strd	r2, [r0, #40]	; 0x28
    8b9c:	mov	r2, #12
    8ba0:	mov	r3, #0
    8ba4:	strd	r2, [r0, #48]	; 0x30
    8ba8:	b	8b74 <sas_header_info_init+0x70>

00008bac <sas_fill_page>:
    8bac:	strd	r4, [sp, #-32]!	; 0xffffffe0
    8bb0:	strd	r6, [sp, #8]
    8bb4:	strd	r8, [sp, #16]
    8bb8:	str	sl, [sp, #24]
    8bbc:	str	lr, [sp, #28]
    8bc0:	mov	r4, r0
    8bc4:	ldr	r5, [r1, #32]
    8bc8:	ldr	r0, [r0, #4]
    8bcc:	ldrd	r6, [r1, #64]	; 0x40
    8bd0:	mov	r2, r5
    8bd4:	ldr	r3, [r1, #36]	; 0x24
    8bd8:	subs	r8, r0, r6
    8bdc:	rsc	r9, r7, #0
    8be0:	mov	r0, r8
    8be4:	mov	r1, r9
    8be8:	bl	25ad0 <__aeabi_ldivmod>
    8bec:	orrs	r1, r2, r3
    8bf0:	moveq	r0, #0
    8bf4:	bne	8c10 <sas_fill_page+0x64>
    8bf8:	ldrd	r4, [sp]
    8bfc:	ldrd	r6, [sp, #8]
    8c00:	ldrd	r8, [sp, #16]
    8c04:	ldr	sl, [sp, #24]
    8c08:	add	sp, sp, #28
    8c0c:	pop	{pc}		; (ldr pc, [sp], #4)
    8c10:	sub	r1, r5, r2
    8c14:	mov	r0, r4
    8c18:	bl	4010 <readstat_write_zeros@plt>
    8c1c:	b	8bf8 <sas_fill_page+0x4c>

00008c20 <sas_validate_name>:
    8c20:	strd	r4, [sp, #-16]!
    8c24:	str	r6, [sp, #8]
    8c28:	str	lr, [sp, #12]
    8c2c:	ldrb	lr, [r0]
    8c30:	cmp	lr, #0
    8c34:	beq	8cac <sas_validate_name+0x8c>
    8c38:	mov	ip, r0
    8c3c:	mov	r3, lr
    8c40:	b	8c50 <sas_validate_name+0x30>
    8c44:	ldrb	r3, [ip, #1]!
    8c48:	cmp	r3, #0
    8c4c:	beq	8cb4 <sas_validate_name+0x94>
    8c50:	cmp	r3, #95	; 0x5f
    8c54:	beq	8c44 <sas_validate_name+0x24>
    8c58:	bic	r2, r3, #32
    8c5c:	sub	r2, r2, #65	; 0x41
    8c60:	uxtb	r2, r2
    8c64:	cmp	r2, #25
    8c68:	bls	8c44 <sas_validate_name+0x24>
    8c6c:	sub	r3, r3, #48	; 0x30
    8c70:	uxtb	r3, r3
    8c74:	cmp	r3, #9
    8c78:	bls	8c44 <sas_validate_name+0x24>
    8c7c:	mov	r0, #26
    8c80:	ldrd	r4, [sp]
    8c84:	ldr	r6, [sp, #8]
    8c88:	add	sp, sp, #12
    8c8c:	pop	{pc}		; (ldr pc, [sp], #4)
    8c90:	bic	r3, lr, #32
    8c94:	sub	r3, r3, #65	; 0x41
    8c98:	uxtb	r3, r3
    8c9c:	cmp	r3, #25
    8ca0:	movhi	r0, #25
    8ca4:	bls	8cbc <sas_validate_name+0x9c>
    8ca8:	b	8c80 <sas_validate_name+0x60>
    8cac:	mov	r0, #38	; 0x26
    8cb0:	b	8c80 <sas_validate_name+0x60>
    8cb4:	cmp	lr, #95	; 0x5f
    8cb8:	bne	8c90 <sas_validate_name+0x70>
    8cbc:	mov	r5, r1
    8cc0:	mov	r4, r0
    8cc4:	ldr	r1, [pc, #152]	; 8d64 <sas_validate_name+0x144>
    8cc8:	add	r1, pc, r1
    8ccc:	bl	3df4 <strcmp@plt>
    8cd0:	cmp	r0, #0
    8cd4:	moveq	r0, #27
    8cd8:	beq	8c80 <sas_validate_name+0x60>
    8cdc:	ldr	r1, [pc, #132]	; 8d68 <sas_validate_name+0x148>
    8ce0:	add	r1, pc, r1
    8ce4:	mov	r0, r4
    8ce8:	bl	3df4 <strcmp@plt>
    8cec:	cmp	r0, #0
    8cf0:	moveq	r0, #27
    8cf4:	beq	8c80 <sas_validate_name+0x60>
    8cf8:	ldr	r1, [pc, #108]	; 8d6c <sas_validate_name+0x14c>
    8cfc:	add	r1, pc, r1
    8d00:	mov	r0, r4
    8d04:	bl	3df4 <strcmp@plt>
    8d08:	cmp	r0, #0
    8d0c:	moveq	r0, #27
    8d10:	beq	8c80 <sas_validate_name+0x60>
    8d14:	ldr	r1, [pc, #84]	; 8d70 <sas_validate_name+0x150>
    8d18:	add	r1, pc, r1
    8d1c:	mov	r0, r4
    8d20:	bl	3df4 <strcmp@plt>
    8d24:	cmp	r0, #0
    8d28:	moveq	r0, #27
    8d2c:	beq	8c80 <sas_validate_name+0x60>
    8d30:	ldr	r1, [pc, #60]	; 8d74 <sas_validate_name+0x154>
    8d34:	add	r1, pc, r1
    8d38:	mov	r0, r4
    8d3c:	bl	3df4 <strcmp@plt>
    8d40:	cmp	r0, #0
    8d44:	moveq	r0, #27
    8d48:	beq	8c80 <sas_validate_name+0x60>
    8d4c:	mov	r0, r4
    8d50:	bl	41fc <strlen@plt>
    8d54:	cmp	r0, r5
    8d58:	movhi	r0, #28
    8d5c:	movls	r0, #0
    8d60:	b	8c80 <sas_validate_name+0x60>
    8d64:	.word	0x0001d9d4
    8d68:	.word	0x0001d9c0
    8d6c:	.word	0x0001d9ac
    8d70:	.word	0x0001d99c
    8d74:	.word	0x0001d98c

00008d78 <sas_validate_variable>:
    8d78:	str	r4, [sp, #-8]!
    8d7c:	str	lr, [sp, #4]
    8d80:	bl	4364 <readstat_variable_get_name@plt>
    8d84:	mov	r1, #32
    8d88:	bl	3d40 <sas_validate_name@plt>
    8d8c:	ldr	r4, [sp]
    8d90:	add	sp, sp, #4
    8d94:	pop	{pc}		; (ldr pc, [sp], #4)

00008d98 <sas_validate_tag>:
    8d98:	sub	r3, r0, #65	; 0x41
    8d9c:	uxtb	r3, r3
    8da0:	cmp	r0, #95	; 0x5f
    8da4:	cmpne	r3, #25
    8da8:	movls	r3, #1
    8dac:	movhi	r3, #0
    8db0:	cmp	r3, #0
    8db4:	moveq	r0, #21
    8db8:	movne	r0, #0
    8dbc:	bx	lr

00008dc0 <sas_assign_tag>:
    8dc0:	strd	r4, [sp, #-16]!
    8dc4:	str	r6, [sp, #8]
    8dc8:	str	lr, [sp, #12]
    8dcc:	mov	r5, r0
    8dd0:	subs	r4, r1, #0
    8dd4:	moveq	r4, #95	; 0x5f
    8dd8:	beq	8df0 <sas_assign_tag+0x30>
    8ddc:	sub	r3, r4, #2
    8de0:	uxtb	r3, r3
    8de4:	cmp	r3, #25
    8de8:	addls	r4, r4, #63	; 0x3f
    8dec:	uxtbls	r4, r4
    8df0:	mov	r0, r4
    8df4:	bl	4148 <sas_validate_tag@plt>
    8df8:	cmp	r0, #0
    8dfc:	bne	8e20 <sas_assign_tag+0x60>
    8e00:	strb	r4, [r5, #12]
    8e04:	ldrb	r3, [r5, #13]
    8e08:	orr	r3, r3, #2
    8e0c:	strb	r3, [r5, #13]
    8e10:	ldrd	r4, [sp]
    8e14:	ldr	r6, [sp, #8]
    8e18:	add	sp, sp, #12
    8e1c:	pop	{pc}		; (ldr pc, [sp], #4)
    8e20:	mov	r3, #0
    8e24:	strb	r3, [r5, #12]
    8e28:	ldrb	r3, [r5, #13]
    8e2c:	orr	r3, r3, #1
    8e30:	strb	r3, [r5, #13]
    8e34:	b	8e10 <sas_assign_tag+0x50>

00008e38 <compare_block_pointers>:
    8e38:	ldr	r0, [r0]
    8e3c:	ldr	r3, [r1]
    8e40:	sub	r0, r0, r3
    8e44:	bx	lr

00008e48 <sas7bcat_augment_index>:
    8e48:	strd	r4, [sp, #-32]!	; 0xffffffe0
    8e4c:	strd	r6, [sp, #8]
    8e50:	strd	r8, [sp, #16]
    8e54:	str	sl, [sp, #24]
    8e58:	str	lr, [sp, #28]
    8e5c:	sub	sp, sp, #8
    8e60:	add	r7, r0, r1
    8e64:	ldr	r3, [r2, #32]
    8e68:	add	r3, r0, r3
    8e6c:	cmp	r7, r3
    8e70:	bcc	8fc8 <sas7bcat_augment_index+0x180>
    8e74:	mov	r4, r0
    8e78:	mov	r5, r2
    8e7c:	ldr	r8, [pc, #332]	; 8fd0 <sas7bcat_augment_index+0x188>
    8e80:	add	r8, pc, r8
    8e84:	mov	r6, #4
    8e88:	ldr	r9, [pc, #324]	; 8fd4 <sas7bcat_augment_index+0x18c>
    8e8c:	add	r9, pc, r9
    8e90:	b	8ec8 <sas7bcat_augment_index+0x80>
    8e94:	ldr	r3, [r5, #48]	; 0x30
    8e98:	ldrb	r3, [r4, r3]
    8e9c:	cmp	r3, #79	; 0x4f
    8ea0:	beq	8f1c <sas7bcat_augment_index+0xd4>
    8ea4:	ldr	r1, [r5, #88]	; 0x58
    8ea8:	ldr	r3, [r5, #84]	; 0x54
    8eac:	cmp	r3, r1
    8eb0:	beq	8f98 <sas7bcat_augment_index+0x150>
    8eb4:	ldr	r3, [r5, #32]
    8eb8:	add	r4, r4, r3
    8ebc:	add	r3, r4, r3
    8ec0:	cmp	r7, r3
    8ec4:	bcc	8fc0 <sas7bcat_augment_index+0x178>
    8ec8:	mov	r2, r6
    8ecc:	mov	r1, r8
    8ed0:	mov	r0, r4
    8ed4:	bl	3f98 <memcmp@plt>
    8ed8:	cmp	r0, #0
    8edc:	beq	8e94 <sas7bcat_augment_index+0x4c>
    8ee0:	add	r4, r4, #8
    8ee4:	mov	r2, r6
    8ee8:	mov	r1, r9
    8eec:	mov	r0, r4
    8ef0:	bl	3f98 <memcmp@plt>
    8ef4:	cmp	r0, #0
    8ef8:	beq	8e94 <sas7bcat_augment_index+0x4c>
    8efc:	mov	r0, #0
    8f00:	add	sp, sp, #8
    8f04:	ldrd	r4, [sp]
    8f08:	ldrd	r6, [sp, #8]
    8f0c:	ldrd	r8, [sp, #16]
    8f10:	ldr	sl, [sp, #24]
    8f14:	add	sp, sp, #28
    8f18:	pop	{pc}		; (ldr pc, [sp], #4)
    8f1c:	ldr	r3, [r5, #16]
    8f20:	cmp	r3, #0
    8f24:	beq	8f78 <sas7bcat_augment_index+0x130>
    8f28:	ldr	r1, [r5, #24]
    8f2c:	add	r0, r4, #8
    8f30:	bl	43f4 <sas_read4@plt>
    8f34:	mov	sl, r0
    8f38:	ldr	r1, [r5, #24]
    8f3c:	add	r0, r4, #16
    8f40:	bl	43f4 <sas_read4@plt>
    8f44:	ldr	r1, [r5, #80]	; 0x50
    8f48:	ldr	r3, [r5, #84]	; 0x54
    8f4c:	add	r2, r3, #1
    8f50:	str	r2, [r5, #84]	; 0x54
    8f54:	lsl	ip, r3, #3
    8f58:	str	sl, [sp, #4]
    8f5c:	mov	r3, #0
    8f60:	str	r3, [sp]
    8f64:	ldrd	r2, [sp]
    8f68:	adds	r2, r2, r0
    8f6c:	adc	r3, r3, #0
    8f70:	strd	r2, [r1, ip]
    8f74:	b	8ea4 <sas7bcat_augment_index+0x5c>
    8f78:	ldr	r1, [r5, #24]
    8f7c:	add	r0, r4, #4
    8f80:	bl	43d0 <sas_read2@plt>
    8f84:	mov	sl, r0
    8f88:	ldr	r1, [r5, #24]
    8f8c:	add	r0, r4, #8
    8f90:	bl	43d0 <sas_read2@plt>
    8f94:	b	8f44 <sas7bcat_augment_index+0xfc>
    8f98:	lsl	r3, r1, #1
    8f9c:	str	r3, [r5, #88]	; 0x58
    8fa0:	lsl	r1, r1, #4
    8fa4:	ldr	r0, [r5, #80]	; 0x50
    8fa8:	bl	42e0 <readstat_realloc@plt>
    8fac:	str	r0, [r5, #80]	; 0x50
    8fb0:	cmp	r0, #0
    8fb4:	bne	8eb4 <sas7bcat_augment_index+0x6c>
    8fb8:	mov	r0, #3
    8fbc:	b	8f00 <sas7bcat_augment_index+0xb8>
    8fc0:	mov	r0, #0
    8fc4:	b	8f00 <sas7bcat_augment_index+0xb8>
    8fc8:	mov	r0, #0
    8fcc:	b	8f00 <sas7bcat_augment_index+0xb8>
    8fd0:	.word	0x0001d848
    8fd4:	.word	0x0001d83c

00008fd8 <readstat_parse_sas7bcat>:
    8fd8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    8fdc:	strd	r6, [sp, #8]
    8fe0:	strd	r8, [sp, #16]
    8fe4:	strd	sl, [sp, #24]
    8fe8:	str	lr, [sp, #32]
    8fec:	vpush	{d8}
    8ff0:	add	fp, sp, #40	; 0x28
    8ff4:	sub	sp, sp, #436	; 0x1b4
    8ff8:	mov	r4, r0
    8ffc:	mov	r6, r1
    9000:	mov	r5, r2
    9004:	ldr	sl, [r0, #32]
    9008:	mov	r1, #104	; 0x68
    900c:	mov	r0, #1
    9010:	bl	3d4c <calloc@plt>
    9014:	mov	r9, r0
    9018:	mov	r1, #152	; 0x98
    901c:	mov	r0, #1
    9020:	bl	3d4c <calloc@plt>
    9024:	mov	r7, r0
    9028:	str	r0, [fp, #-396]	; 0xfffffe74
    902c:	mov	r3, #200	; 0xc8
    9030:	str	r3, [r9, #88]	; 0x58
    9034:	mov	r0, #1600	; 0x640
    9038:	bl	410c <malloc@plt>
    903c:	str	r0, [r9, #80]	; 0x50
    9040:	ldr	r3, [r4, #20]
    9044:	str	r3, [r9, #4]
    9048:	ldr	r3, [r4]
    904c:	str	r3, [r9]
    9050:	ldr	r3, [r4, #36]	; 0x24
    9054:	str	r3, [r9, #92]	; 0x5c
    9058:	ldr	r3, [r4, #40]	; 0x28
    905c:	str	r3, [r9, #96]	; 0x60
    9060:	str	r5, [r9, #8]
    9064:	str	sl, [r9, #12]
    9068:	ldr	r3, [sl]
    906c:	ldr	r1, [sl, #20]
    9070:	mov	r0, r6
    9074:	blx	r3
    9078:	cmn	r0, #1
    907c:	beq	9b1c <readstat_parse_sas7bcat+0xb44>
    9080:	mov	r3, r5
    9084:	ldr	r2, [r4, #24]
    9088:	mov	r1, r7
    908c:	mov	r0, sl
    9090:	bl	43a0 <sas_read_header@plt>
    9094:	subs	r3, r0, #0
    9098:	str	r3, [fp, #-392]	; 0xfffffe78
    909c:	bne	9b24 <readstat_parse_sas7bcat+0xb4c>
    90a0:	ldr	r3, [r7, #4]
    90a4:	str	r3, [r9, #16]
    90a8:	ldr	r3, [r7, #24]
    90ac:	str	r3, [r9, #20]
    90b0:	bl	3ea8 <machine_is_little_endian@plt>
    90b4:	ldr	r3, [r7]
    90b8:	eor	r0, r0, r3
    90bc:	str	r0, [r9, #24]
    90c0:	ldrd	r2, [r7, #64]	; 0x40
    90c4:	strd	r2, [r9, #72]	; 0x48
    90c8:	ldrd	r2, [r7, #56]	; 0x38
    90cc:	strd	r2, [r9, #56]	; 0x38
    90d0:	ldrd	r2, [r7, #32]
    90d4:	strd	r2, [r9, #64]	; 0x40
    90d8:	ldr	r3, [r9, #92]	; 0x5c
    90dc:	cmp	r3, #0
    90e0:	beq	9338 <readstat_parse_sas7bcat+0x360>
    90e4:	ldr	r2, [r9, #20]
    90e8:	add	r4, r2, #212	; 0xd4
    90ec:	asr	r5, r4, #31
    90f0:	strd	r4, [r9, #32]
    90f4:	add	r0, r2, #428	; 0x1ac
    90f8:	lsl	r0, r0, #1
    90fc:	mov	r6, r0
    9100:	asr	r7, r0, #31
    9104:	strd	r6, [r9, #40]	; 0x28
    9108:	add	r2, r2, #50	; 0x32
    910c:	asr	r1, r2, #31
    9110:	mov	r3, r1
    9114:	strd	r2, [r9, #48]	; 0x30
    9118:	ldr	ip, [r9, #16]
    911c:	cmp	ip, #0
    9120:	beq	9158 <readstat_parse_sas7bcat+0x180>
    9124:	adds	r0, r6, #144	; 0x90
    9128:	adc	r1, r7, #0
    912c:	str	r0, [r9, #40]	; 0x28
    9130:	str	r1, [r9, #44]	; 0x2c
    9134:	adds	r0, r4, #72	; 0x48
    9138:	adc	r1, r5, #0
    913c:	str	r0, [r9, #32]
    9140:	str	r1, [r9, #36]	; 0x24
    9144:	mov	r1, r3
    9148:	adds	r2, r2, #24
    914c:	adc	r3, r1, #0
    9150:	str	r2, [r9, #48]	; 0x30
    9154:	str	r3, [r9, #52]	; 0x34
    9158:	ldr	r4, [r9, #92]	; 0x5c
    915c:	cmp	r4, #0
    9160:	beq	9184 <readstat_parse_sas7bcat+0x1ac>
    9164:	ldr	r5, [r9, #96]	; 0x60
    9168:	cmp	r5, #0
    916c:	beq	9184 <readstat_parse_sas7bcat+0x1ac>
    9170:	mov	r1, r5
    9174:	mov	r0, r4
    9178:	bl	3df4 <strcmp@plt>
    917c:	cmp	r0, #0
    9180:	bne	9348 <readstat_parse_sas7bcat+0x370>
    9184:	ldr	r3, [r9]
    9188:	cmp	r3, #0
    918c:	beq	9240 <readstat_parse_sas7bcat+0x268>
    9190:	mov	r2, #56	; 0x38
    9194:	mov	r1, #0
    9198:	sub	r0, fp, #372	; 0x174
    919c:	bl	42a4 <memset@plt>
    91a0:	ldr	r0, [fp, #-396]	; 0xfffffe74
    91a4:	ldr	r3, [r0, #72]	; 0x48
    91a8:	str	r3, [fp, #-356]	; 0xfffffe9c
    91ac:	ldr	r3, [r0, #76]	; 0x4c
    91b0:	str	r3, [fp, #-352]	; 0xfffffea0
    91b4:	ldr	r2, [r0, #12]
    91b8:	asr	r3, r2, #31
    91bc:	sub	r1, fp, #364	; 0x16c
    91c0:	strd	r2, [r1, #16]
    91c4:	mov	r2, r0
    91c8:	ldr	r3, [r2], #80	; 0x50
    91cc:	cmp	r3, #0
    91d0:	movne	r3, #1
    91d4:	moveq	r3, #2
    91d8:	str	r3, [fp, #-336]	; 0xfffffeb0
    91dc:	ldr	r3, [r9, #92]	; 0x5c
    91e0:	str	r3, [fp, #-324]	; 0xfffffebc
    91e4:	mov	r3, #0
    91e8:	ldr	r1, [r9, #16]
    91ec:	bfi	r3, r1, #0, #1
    91f0:	strb	r3, [fp, #-320]	; 0xfffffec0
    91f4:	ldr	r3, [r9, #100]	; 0x64
    91f8:	str	r3, [sp]
    91fc:	mov	r3, #64	; 0x40
    9200:	movw	r1, #257	; 0x101
    9204:	sub	r0, fp, #304	; 0x130
    9208:	bl	4238 <readstat_convert@plt>
    920c:	subs	r3, r0, #0
    9210:	str	r3, [fp, #-392]	; 0xfffffe78
    9214:	bne	9b24 <readstat_parse_sas7bcat+0xb4c>
    9218:	sub	r3, fp, #304	; 0x130
    921c:	str	r3, [fp, #-328]	; 0xfffffeb8
    9220:	ldr	r3, [r9]
    9224:	ldr	r1, [r9, #8]
    9228:	sub	r0, fp, #372	; 0x174
    922c:	blx	r3
    9230:	cmp	r0, #0
    9234:	movne	r3, #4
    9238:	strne	r3, [fp, #-392]	; 0xfffffe78
    923c:	bne	9b24 <readstat_parse_sas7bcat+0xb4c>
    9240:	ldr	r0, [r9, #64]	; 0x40
    9244:	bl	422c <readstat_malloc@plt>
    9248:	subs	r6, r0, #0
    924c:	str	r6, [fp, #-412]	; 0xfffffe64
    9250:	beq	9b40 <readstat_parse_sas7bcat+0xb68>
    9254:	ldr	ip, [r9, #72]	; 0x48
    9258:	ldr	r0, [r9, #64]	; 0x40
    925c:	ldr	r3, [sl, #8]
    9260:	ldr	r2, [sl, #20]
    9264:	mov	r1, #0
    9268:	add	r0, ip, r0
    926c:	blx	r3
    9270:	cmn	r0, #1
    9274:	beq	9ab8 <readstat_parse_sas7bcat+0xae0>
    9278:	ldr	r3, [sl, #12]
    927c:	ldr	r2, [sl, #20]
    9280:	ldr	r1, [r9, #64]	; 0x40
    9284:	mov	r0, r6
    9288:	blx	r3
    928c:	ldrd	r4, [r9, #64]	; 0x40
    9290:	asr	r1, r0, #31
    9294:	cmp	r0, r4
    9298:	sbcs	r3, r1, r5
    929c:	bge	9364 <readstat_parse_sas7bcat+0x38c>
    92a0:	mov	r3, #2
    92a4:	str	r3, [fp, #-392]	; 0xfffffe78
    92a8:	mov	r3, #0
    92ac:	str	r3, [fp, #-400]	; 0xfffffe70
    92b0:	ldr	r3, [sl, #4]
    92b4:	ldr	r0, [sl, #20]
    92b8:	blx	r3
    92bc:	ldr	r0, [fp, #-412]	; 0xfffffe64
    92c0:	bl	3eb4 <free@plt>
    92c4:	ldr	r3, [fp, #-400]	; 0xfffffe70
    92c8:	cmp	r3, #0
    92cc:	beq	92d8 <readstat_parse_sas7bcat+0x300>
    92d0:	ldr	r0, [fp, #-400]	; 0xfffffe70
    92d4:	bl	3eb4 <free@plt>
    92d8:	ldr	r0, [r9, #100]	; 0x64
    92dc:	cmp	r0, #0
    92e0:	beq	92e8 <readstat_parse_sas7bcat+0x310>
    92e4:	bl	3dc4 <iconv_close@plt>
    92e8:	ldr	r0, [r9, #80]	; 0x50
    92ec:	cmp	r0, #0
    92f0:	beq	92f8 <readstat_parse_sas7bcat+0x320>
    92f4:	bl	3eb4 <free@plt>
    92f8:	mov	r0, r9
    92fc:	bl	3eb4 <free@plt>
    9300:	ldr	r3, [fp, #-396]	; 0xfffffe74
    9304:	cmp	r3, #0
    9308:	beq	9314 <readstat_parse_sas7bcat+0x33c>
    930c:	mov	r0, r3
    9310:	bl	3eb4 <free@plt>
    9314:	ldr	r0, [fp, #-392]	; 0xfffffe78
    9318:	sub	sp, fp, #40	; 0x28
    931c:	vpop	{d8}
    9320:	ldrd	r4, [sp]
    9324:	ldrd	r6, [sp, #8]
    9328:	ldrd	r8, [sp, #16]
    932c:	ldrd	sl, [sp, #24]
    9330:	add	sp, sp, #32
    9334:	pop	{pc}		; (ldr pc, [sp], #4)
    9338:	ldr	r3, [fp, #-396]	; 0xfffffe74
    933c:	ldr	r3, [r3, #144]	; 0x90
    9340:	str	r3, [r9, #92]	; 0x5c
    9344:	b	90e4 <readstat_parse_sas7bcat+0x10c>
    9348:	mov	r1, r4
    934c:	mov	r0, r5
    9350:	bl	4130 <iconv_open@plt>
    9354:	cmn	r0, #1
    9358:	beq	9b34 <readstat_parse_sas7bcat+0xb5c>
    935c:	str	r0, [r9, #100]	; 0x64
    9360:	b	9184 <readstat_parse_sas7bcat+0x1ac>
    9364:	ldr	r0, [r9, #40]	; 0x28
    9368:	mov	r2, r9
    936c:	sub	r1, r4, r0
    9370:	add	r0, r6, r0
    9374:	bl	8e48 <sas7bcat_augment_index>
    9378:	subs	r3, r0, #0
    937c:	str	r3, [fp, #-392]	; 0xfffffe78
    9380:	bne	9acc <readstat_parse_sas7bcat+0xaf4>
    9384:	ldrd	r2, [r9, #56]	; 0x38
    9388:	cmp	r2, #4
    938c:	sbcs	r3, r3, #0
    9390:	blt	9454 <readstat_parse_sas7bcat+0x47c>
    9394:	mov	r4, #3
    9398:	mov	r5, #0
    939c:	add	r8, r6, #16
    93a0:	ldr	r3, [pc, #1368]	; 9900 <readstat_parse_sas7bcat+0x928>
    93a4:	add	r3, pc, r3
    93a8:	str	r3, [fp, #-400]	; 0xfffffe70
    93ac:	b	93c8 <readstat_parse_sas7bcat+0x3f0>
    93b0:	adds	r4, r4, #1
    93b4:	adc	r5, r5, #0
    93b8:	ldrd	r2, [r9, #56]	; 0x38
    93bc:	cmp	r4, r2
    93c0:	sbcs	r3, r5, r3
    93c4:	bge	9454 <readstat_parse_sas7bcat+0x47c>
    93c8:	ldr	ip, [r9, #64]	; 0x40
    93cc:	ldr	r0, [r9, #72]	; 0x48
    93d0:	ldr	r3, [sl, #8]
    93d4:	ldr	r2, [sl, #20]
    93d8:	mov	r1, #0
    93dc:	mla	r0, ip, r4, r0
    93e0:	blx	r3
    93e4:	cmn	r0, #1
    93e8:	beq	9ad8 <readstat_parse_sas7bcat+0xb00>
    93ec:	ldr	r3, [sl, #12]
    93f0:	ldr	r2, [sl, #20]
    93f4:	ldr	r1, [r9, #64]	; 0x40
    93f8:	ldr	r0, [fp, #-412]	; 0xfffffe64
    93fc:	blx	r3
    9400:	ldrd	r6, [r9, #64]	; 0x40
    9404:	asr	r1, r0, #31
    9408:	cmp	r0, r6
    940c:	sbcs	r3, r1, r7
    9410:	blt	9aec <readstat_parse_sas7bcat+0xb14>
    9414:	mov	r2, #4
    9418:	ldr	r1, [fp, #-400]	; 0xfffffe70
    941c:	mov	r0, r8
    9420:	bl	3f98 <memcmp@plt>
    9424:	cmp	r0, #0
    9428:	bne	93b0 <readstat_parse_sas7bcat+0x3d8>
    942c:	mov	r2, r9
    9430:	sub	r1, r6, #16
    9434:	mov	r0, r8
    9438:	bl	8e48 <sas7bcat_augment_index>
    943c:	cmp	r0, #0
    9440:	beq	93b0 <readstat_parse_sas7bcat+0x3d8>
    9444:	str	r0, [fp, #-392]	; 0xfffffe78
    9448:	mov	r3, #0
    944c:	str	r3, [fp, #-400]	; 0xfffffe70
    9450:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9454:	ldr	r1, [r9, #84]	; 0x54
    9458:	cmp	r1, #0
    945c:	beq	9e88 <readstat_parse_sas7bcat+0xeb0>
    9460:	cmp	r1, #1
    9464:	ble	94cc <readstat_parse_sas7bcat+0x4f4>
    9468:	ldr	r0, [r9, #80]	; 0x50
    946c:	ldrd	r4, [r0]
    9470:	ldrd	r2, [r0, #8]
    9474:	cmp	r5, r3
    9478:	cmpeq	r4, r2
    947c:	addls	lr, r0, #8
    9480:	movls	ip, #1
    9484:	bhi	94b0 <readstat_parse_sas7bcat+0x4d8>
    9488:	add	ip, ip, #1
    948c:	cmp	r1, ip
    9490:	beq	94cc <readstat_parse_sas7bcat+0x4f4>
    9494:	mov	r3, lr
    9498:	ldrd	r4, [lr, #8]
    949c:	add	lr, lr, #8
    94a0:	ldrd	r2, [r3]
    94a4:	cmp	r5, r3
    94a8:	cmpeq	r4, r2
    94ac:	bcs	9488 <readstat_parse_sas7bcat+0x4b0>
    94b0:	ldr	r3, [pc, #1100]	; 9904 <readstat_parse_sas7bcat+0x92c>
    94b4:	add	r3, pc, r3
    94b8:	mov	r2, #8
    94bc:	bl	443c <qsort@plt>
    94c0:	ldr	r1, [r9, #84]	; 0x54
    94c4:	cmp	r1, #0
    94c8:	beq	9e88 <readstat_parse_sas7bcat+0xeb0>
    94cc:	cmp	r1, #1
    94d0:	ble	9ea4 <readstat_parse_sas7bcat+0xecc>
    94d4:	mov	r5, #8
    94d8:	mov	lr, #1
    94dc:	mov	ip, lr
    94e0:	mov	r6, r5
    94e4:	b	950c <readstat_parse_sas7bcat+0x534>
    94e8:	cmp	ip, lr
    94ec:	lslne	r3, lr, #3
    94f0:	strdne	r0, [r2, r3]
    94f4:	add	lr, lr, #1
    94f8:	add	ip, ip, #1
    94fc:	add	r6, r6, #8
    9500:	ldr	r3, [r9, #84]	; 0x54
    9504:	cmp	ip, r3
    9508:	bge	952c <readstat_parse_sas7bcat+0x554>
    950c:	ldr	r2, [r9, #80]	; 0x50
    9510:	mov	r3, r2
    9514:	ldrd	r0, [r3, r6]!
    9518:	ldrd	r4, [r3, #-8]
    951c:	cmp	r1, r5
    9520:	cmpeq	r0, r4
    9524:	bne	94e8 <readstat_parse_sas7bcat+0x510>
    9528:	b	94f8 <readstat_parse_sas7bcat+0x520>
    952c:	str	lr, [r9, #84]	; 0x54
    9530:	cmp	lr, #0
    9534:	ble	9b00 <readstat_parse_sas7bcat+0xb28>
    9538:	mov	r3, #0
    953c:	str	r3, [fp, #-400]	; 0xfffffe70
    9540:	mov	r2, #0
    9544:	mov	r3, #0
    9548:	sub	r1, fp, #420	; 0x1a4
    954c:	strd	r2, [r1]
    9550:	vldr	d8, [pc, #928]	; 98f8 <readstat_parse_sas7bcat+0x920>
    9554:	str	sl, [fp, #-440]	; 0xfffffe48
    9558:	b	9bc4 <readstat_parse_sas7bcat+0xbec>
    955c:	ldr	r1, [r9, #24]
    9560:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    9564:	bl	43f4 <sas_read4@plt>
    9568:	mov	r5, r0
    956c:	ldr	r1, [r9, #24]
    9570:	ldr	r0, [fp, #-424]	; 0xfffffe58
    9574:	bl	43d0 <sas_read2@plt>
    9578:	mov	r4, r0
    957c:	ldr	r1, [r9, #24]
    9580:	sub	r0, fp, #296	; 0x128
    9584:	sub	r0, r0, #2
    9588:	bl	43d0 <sas_read2@plt>
    958c:	add	sl, sl, r0
    9590:	cmp	r5, #0
    9594:	cmpgt	r4, #0
    9598:	ble	9e10 <readstat_parse_sas7bcat+0xe38>
    959c:	ldrd	r2, [r9, #56]	; 0x38
    95a0:	asr	r1, r5, #31
    95a4:	cmp	r2, r5
    95a8:	sbcs	r1, r3, r1
    95ac:	blt	9e10 <readstat_parse_sas7bcat+0xe38>
    95b0:	adds	r6, r6, #1
    95b4:	adc	r7, r7, #0
    95b8:	cmp	r6, r2
    95bc:	sbcs	r3, r7, r3
    95c0:	bge	9e10 <readstat_parse_sas7bcat+0xe38>
    95c4:	sub	r5, r5, #1
    95c8:	ldr	r0, [r9, #64]	; 0x40
    95cc:	ldr	r3, [r9, #72]	; 0x48
    95d0:	add	r4, r4, r3
    95d4:	ldr	r3, [r8, #8]
    95d8:	ldr	r2, [r8, #20]
    95dc:	mov	r1, #0
    95e0:	mla	r0, r0, r5, r4
    95e4:	blx	r3
    95e8:	cmn	r0, #1
    95ec:	beq	9df0 <readstat_parse_sas7bcat+0xe18>
    95f0:	ldr	r3, [r8, #12]
    95f4:	ldr	r2, [r8, #20]
    95f8:	ldr	r4, [fp, #-408]	; 0xfffffe68
    95fc:	mov	r1, r4
    9600:	ldr	r5, [fp, #-404]	; 0xfffffe6c
    9604:	mov	r0, r5
    9608:	blx	r3
    960c:	cmp	r4, r0
    9610:	bgt	9e00 <readstat_parse_sas7bcat+0xe28>
    9614:	ldr	r3, [r9, #16]
    9618:	cmp	r3, #0
    961c:	beq	955c <readstat_parse_sas7bcat+0x584>
    9620:	ldr	r1, [r9, #24]
    9624:	mov	r0, r5
    9628:	bl	43f4 <sas_read4@plt>
    962c:	mov	r5, r0
    9630:	ldr	r1, [r9, #24]
    9634:	sub	r0, fp, #296	; 0x128
    9638:	bl	43d0 <sas_read2@plt>
    963c:	mov	r4, r0
    9640:	ldr	r1, [r9, #24]
    9644:	sub	r0, fp, #292	; 0x124
    9648:	sub	r0, r0, #2
    964c:	bl	43d0 <sas_read2@plt>
    9650:	b	958c <readstat_parse_sas7bcat+0x5b4>
    9654:	ldr	r1, [r9, #24]
    9658:	ldr	r0, [fp, #-408]	; 0xfffffe68
    965c:	bl	43f4 <sas_read4@plt>
    9660:	mov	r5, r0
    9664:	ldr	r1, [r9, #24]
    9668:	ldr	r0, [fp, #-432]	; 0xfffffe50
    966c:	bl	43d0 <sas_read2@plt>
    9670:	mov	sl, r0
    9674:	ldr	r1, [r9, #24]
    9678:	sub	r0, fp, #296	; 0x128
    967c:	sub	r0, r0, #2
    9680:	bl	43d0 <sas_read2@plt>
    9684:	mov	r8, r0
    9688:	ldr	r0, [fp, #-404]	; 0xfffffe6c
    968c:	add	r3, r8, r0
    9690:	ldr	r2, [fp, #-424]	; 0xfffffe58
    9694:	str	r3, [fp, #-404]	; 0xfffffe6c
    9698:	cmp	r2, r3
    969c:	bcc	9dd0 <readstat_parse_sas7bcat+0xdf8>
    96a0:	ldr	r3, [r4, #12]
    96a4:	ldr	r2, [r4, #20]
    96a8:	mov	r1, r8
    96ac:	ldr	ip, [fp, #-400]	; 0xfffffe70
    96b0:	add	r0, ip, r0
    96b4:	blx	r3
    96b8:	adds	r6, r6, #1
    96bc:	adc	r7, r7, #0
    96c0:	cmp	r8, r0
    96c4:	bgt	9de0 <readstat_parse_sas7bcat+0xe08>
    96c8:	cmp	r5, #0
    96cc:	cmpgt	sl, #0
    96d0:	ble	9cac <readstat_parse_sas7bcat+0xcd4>
    96d4:	ldrd	r2, [r9, #56]	; 0x38
    96d8:	asr	r1, r5, #31
    96dc:	cmp	r2, r5
    96e0:	sbcs	r1, r3, r1
    96e4:	blt	9cac <readstat_parse_sas7bcat+0xcd4>
    96e8:	cmp	r6, r2
    96ec:	sbcs	r3, r7, r3
    96f0:	bge	9cac <readstat_parse_sas7bcat+0xcd4>
    96f4:	sub	r5, r5, #1
    96f8:	ldr	r0, [r9, #64]	; 0x40
    96fc:	ldr	r3, [r9, #72]	; 0x48
    9700:	add	sl, sl, r3
    9704:	ldr	r3, [r4, #8]
    9708:	ldr	r2, [r4, #20]
    970c:	mov	r1, #0
    9710:	mla	r0, r0, r5, sl
    9714:	blx	r3
    9718:	cmn	r0, #1
    971c:	beq	9db0 <readstat_parse_sas7bcat+0xdd8>
    9720:	ldr	r3, [r4, #12]
    9724:	ldr	r2, [r4, #20]
    9728:	ldr	r5, [fp, #-428]	; 0xfffffe54
    972c:	mov	r1, r5
    9730:	ldr	r8, [fp, #-408]	; 0xfffffe68
    9734:	mov	r0, r8
    9738:	blx	r3
    973c:	cmp	r5, r0
    9740:	bgt	9dc0 <readstat_parse_sas7bcat+0xde8>
    9744:	ldr	r3, [r9, #16]
    9748:	cmp	r3, #0
    974c:	beq	9654 <readstat_parse_sas7bcat+0x67c>
    9750:	ldr	r1, [r9, #24]
    9754:	mov	r0, r8
    9758:	bl	43f4 <sas_read4@plt>
    975c:	mov	r5, r0
    9760:	ldr	r1, [r9, #24]
    9764:	sub	r0, fp, #296	; 0x128
    9768:	bl	43d0 <sas_read2@plt>
    976c:	mov	sl, r0
    9770:	ldr	r1, [r9, #24]
    9774:	sub	r0, fp, #292	; 0x124
    9778:	sub	r0, r0, #2
    977c:	bl	43d0 <sas_read2@plt>
    9780:	mov	r8, r0
    9784:	b	9688 <readstat_parse_sas7bcat+0x6b0>
    9788:	add	r0, sl, #38	; 0x26
    978c:	ldr	r1, [r9, #24]
    9790:	ldr	r4, [fp, #-400]	; 0xfffffe70
    9794:	add	r0, r4, r0
    9798:	bl	43f4 <sas_read4@plt>
    979c:	mov	r8, r0
    97a0:	add	r0, sl, #42	; 0x2a
    97a4:	ldr	r1, [r9, #24]
    97a8:	add	r0, r4, r0
    97ac:	bl	43f4 <sas_read4@plt>
    97b0:	mov	r7, r0
    97b4:	mov	r5, #106	; 0x6a
    97b8:	b	9d00 <readstat_parse_sas7bcat+0xd28>
    97bc:	ldr	r3, [r9, #16]
    97c0:	cmp	r3, #0
    97c4:	bne	9d44 <readstat_parse_sas7bcat+0xd6c>
    97c8:	add	r2, r5, sl
    97cc:	add	r3, r2, #32
    97d0:	ldr	r0, [fp, #-424]	; 0xfffffe58
    97d4:	cmp	r0, r3
    97d8:	bcc	9b90 <readstat_parse_sas7bcat+0xbb8>
    97dc:	ldr	r3, [r9, #100]	; 0x64
    97e0:	str	r3, [sp]
    97e4:	mov	r3, #32
    97e8:	add	r2, r1, r2
    97ec:	mov	r1, #129	; 0x81
    97f0:	sub	r0, fp, #304	; 0x130
    97f4:	bl	4238 <readstat_convert@plt>
    97f8:	cmp	r0, #0
    97fc:	bne	9b4c <readstat_parse_sas7bcat+0xb74>
    9800:	add	sl, sl, #32
    9804:	b	9d44 <readstat_parse_sas7bcat+0xd6c>
    9808:	ldrb	r3, [r4, #2]
    980c:	add	r3, r3, #6
    9810:	add	r4, r4, r3
    9814:	add	r5, r5, #1
    9818:	cmp	r8, r5
    981c:	beq	9880 <readstat_parse_sas7bcat+0x8a8>
    9820:	add	r3, r4, #3
    9824:	sub	r3, r3, r6
    9828:	cmp	sl, r3
    982c:	bcc	9b74 <readstat_parse_sas7bcat+0xb9c>
    9830:	cmp	r7, r5
    9834:	ble	9808 <readstat_parse_sas7bcat+0x830>
    9838:	ldr	r0, [r9, #20]
    983c:	add	r3, r0, #14
    9840:	add	r3, r4, r3
    9844:	sub	r3, r3, r6
    9848:	cmp	sl, r3
    984c:	bcc	9c44 <readstat_parse_sas7bcat+0xc6c>
    9850:	add	r0, r0, #10
    9854:	ldr	r1, [r9, #24]
    9858:	add	r0, r4, r0
    985c:	bl	43f4 <sas_read4@plt>
    9860:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    9864:	cmp	r3, r0
    9868:	bls	9c50 <readstat_parse_sas7bcat+0xc78>
    986c:	sub	r3, r4, r6
    9870:	ldr	r2, [fp, #-408]	; 0xfffffe68
    9874:	str	r3, [r2, r0, lsl #2]
    9878:	b	9808 <readstat_parse_sas7bcat+0x830>
    987c:	mov	r4, r6
    9880:	cmp	r7, r8
    9884:	movlt	r3, r7
    9888:	movge	r3, r8
    988c:	str	r3, [fp, #-436]	; 0xfffffe4c
    9890:	cmp	r3, #0
    9894:	ble	9b7c <readstat_parse_sas7bcat+0xba4>
    9898:	ldr	r2, [fp, #-408]	; 0xfffffe68
    989c:	ldr	r3, [r2]
    98a0:	add	r0, r6, r3
    98a4:	add	r3, r3, #30
    98a8:	cmp	sl, r3
    98ac:	bcc	9a90 <readstat_parse_sas7bcat+0xab8>
    98b0:	add	r7, r4, #10
    98b4:	sub	r3, r7, r6
    98b8:	cmp	sl, r3
    98bc:	bcc	9a9c <readstat_parse_sas7bcat+0xac4>
    98c0:	str	r2, [fp, #-424]	; 0xfffffe58
    98c4:	mov	r8, #0
    98c8:	str	r4, [fp, #-404]	; 0xfffffe6c
    98cc:	mov	ip, r0
    98d0:	b	9958 <readstat_parse_sas7bcat+0x980>
    98d4:	ubfx	r1, r1, #8, #8
    98d8:	sub	r0, fp, #388	; 0x184
    98dc:	bl	44a8 <sas_assign_tag@plt>
    98e0:	vmov.f64	d7, d8
    98e4:	b	99bc <readstat_parse_sas7bcat+0x9e4>
    98e8:	mov	r0, #4
    98ec:	ldr	sp, [fp, #-456]	; 0xfffffe38
    98f0:	str	r0, [fp, #-428]	; 0xfffffe54
    98f4:	b	9b7c <readstat_parse_sas7bcat+0xba4>
    98f8:	.word	0x00000000
    98fc:	.word	0x7ff80000
    9900:	.word	0x0001d324
    9904:	.word	0xfffff97c
    9908:	add	r5, r5, #11
    990c:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    9910:	add	r3, r3, r5
    9914:	str	r3, [fp, #-404]	; 0xfffffe6c
    9918:	add	r8, r8, #1
    991c:	ldr	r3, [fp, #-436]	; 0xfffffe4c
    9920:	cmp	r8, r3
    9924:	beq	9b7c <readstat_parse_sas7bcat+0xba4>
    9928:	ldr	r2, [fp, #-424]	; 0xfffffe58
    992c:	ldr	r3, [r2, #4]!
    9930:	str	r2, [fp, #-424]	; 0xfffffe58
    9934:	add	ip, r6, r3
    9938:	add	r3, r3, #30
    993c:	cmp	sl, r3
    9940:	bcc	9a6c <readstat_parse_sas7bcat+0xa94>
    9944:	ldr	r3, [fp, #-404]	; 0xfffffe6c
    9948:	add	r7, r3, #10
    994c:	sub	r3, r7, r6
    9950:	cmp	sl, r3
    9954:	bcc	9a78 <readstat_parse_sas7bcat+0xaa0>
    9958:	sub	r3, fp, #388	; 0x184
    995c:	mov	r0, #0
    9960:	mov	r1, #0
    9964:	strd	r0, [r3]
    9968:	strd	r0, [r3, #8]
    996c:	ldr	r3, [fp, #-432]	; 0xfffffe50
    9970:	cmp	r3, #36	; 0x24
    9974:	beq	9c6c <readstat_parse_sas7bcat+0xc94>
    9978:	mov	r3, #5
    997c:	str	r3, [fp, #-380]	; 0xfffffe84
    9980:	ldr	r1, [fp, #-444]	; 0xfffffe44
    9984:	add	r0, ip, #22
    9988:	bl	43c4 <sas_read8@plt>
    998c:	str	r0, [fp, #-452]	; 0xfffffe3c
    9990:	orr	r3, r1, #65280	; 0xff00
    9994:	str	r3, [fp, #-448]	; 0xfffffe40
    9998:	sub	r3, fp, #452	; 0x1c4
    999c:	ldrd	r2, [r3]
    99a0:	mvn	r4, #0
    99a4:	movw	r5, #65535	; 0xffff
    99a8:	cmp	r3, r5
    99ac:	cmpeq	r2, r4
    99b0:	vmovne	d7, r0, r1
    99b4:	vnegne.f64	d7, d7
    99b8:	beq	98d4 <readstat_parse_sas7bcat+0x8fc>
    99bc:	vstr	d7, [fp, #-388]	; 0xfffffe7c
    99c0:	ldr	r1, [r9, #24]
    99c4:	ldr	r4, [fp, #-404]	; 0xfffffe6c
    99c8:	add	r0, r4, #8
    99cc:	bl	43d0 <sas_read2@plt>
    99d0:	mov	r5, r0
    99d4:	add	r3, r0, #10
    99d8:	add	r3, r4, r3
    99dc:	sub	r3, r3, r6
    99e0:	cmp	sl, r3
    99e4:	bcc	9a84 <readstat_parse_sas7bcat+0xaac>
    99e8:	ldr	r3, [r9, #4]
    99ec:	cmp	r3, #0
    99f0:	beq	9908 <readstat_parse_sas7bcat+0x930>
    99f4:	str	sp, [fp, #-456]	; 0xfffffe38
    99f8:	lsl	r1, r0, #2
    99fc:	add	r3, r1, #8
    9a00:	bic	r3, r3, #7
    9a04:	sub	sp, sp, r3
    9a08:	mov	r4, sp
    9a0c:	ldr	r3, [r9, #100]	; 0x64
    9a10:	str	r3, [r4], #16
    9a14:	mov	r3, r0
    9a18:	mov	r2, r7
    9a1c:	add	r1, r1, #1
    9a20:	mov	r0, r4
    9a24:	bl	4238 <readstat_convert@plt>
    9a28:	cmp	r0, #0
    9a2c:	bne	98ec <readstat_parse_sas7bcat+0x914>
    9a30:	ldr	r3, [r9, #8]
    9a34:	str	r3, [sp, #12]
    9a38:	str	r4, [sp, #8]
    9a3c:	sub	r3, fp, #380	; 0x17c
    9a40:	ldrd	r2, [r3]
    9a44:	strd	r2, [sp]
    9a48:	sub	r3, fp, #388	; 0x184
    9a4c:	ldm	r3, {r2, r3}
    9a50:	ldr	r1, [r9, #4]
    9a54:	sub	r0, fp, #304	; 0x130
    9a58:	blx	r1
    9a5c:	cmp	r0, #0
    9a60:	bne	98e8 <readstat_parse_sas7bcat+0x910>
    9a64:	ldr	sp, [fp, #-456]	; 0xfffffe38
    9a68:	b	9908 <readstat_parse_sas7bcat+0x930>
    9a6c:	mov	r3, #5
    9a70:	str	r3, [fp, #-428]	; 0xfffffe54
    9a74:	b	9b7c <readstat_parse_sas7bcat+0xba4>
    9a78:	mov	r3, #5
    9a7c:	str	r3, [fp, #-428]	; 0xfffffe54
    9a80:	b	9b7c <readstat_parse_sas7bcat+0xba4>
    9a84:	mov	r3, #5
    9a88:	str	r3, [fp, #-428]	; 0xfffffe54
    9a8c:	b	9b7c <readstat_parse_sas7bcat+0xba4>
    9a90:	mov	r3, #5
    9a94:	str	r3, [fp, #-428]	; 0xfffffe54
    9a98:	b	9b7c <readstat_parse_sas7bcat+0xba4>
    9a9c:	mov	r3, #5
    9aa0:	str	r3, [fp, #-428]	; 0xfffffe54
    9aa4:	b	9b7c <readstat_parse_sas7bcat+0xba4>
    9aa8:	str	r0, [fp, #-428]	; 0xfffffe54
    9aac:	b	9b7c <readstat_parse_sas7bcat+0xba4>
    9ab0:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9ab4:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9ab8:	mov	r3, #15
    9abc:	str	r3, [fp, #-392]	; 0xfffffe78
    9ac0:	mov	r3, #0
    9ac4:	str	r3, [fp, #-400]	; 0xfffffe70
    9ac8:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9acc:	mov	r3, #0
    9ad0:	str	r3, [fp, #-400]	; 0xfffffe70
    9ad4:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9ad8:	mov	r3, #15
    9adc:	str	r3, [fp, #-392]	; 0xfffffe78
    9ae0:	mov	r3, #0
    9ae4:	str	r3, [fp, #-400]	; 0xfffffe70
    9ae8:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9aec:	mov	r3, #2
    9af0:	str	r3, [fp, #-392]	; 0xfffffe78
    9af4:	mov	r3, #0
    9af8:	str	r3, [fp, #-400]	; 0xfffffe70
    9afc:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9b00:	mov	r3, #0
    9b04:	str	r3, [fp, #-400]	; 0xfffffe70
    9b08:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9b0c:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9b10:	mov	r3, #3
    9b14:	str	r3, [fp, #-392]	; 0xfffffe78
    9b18:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9b1c:	mov	r3, #1
    9b20:	str	r3, [fp, #-392]	; 0xfffffe78
    9b24:	ldr	r3, [sl, #4]
    9b28:	ldr	r0, [sl, #20]
    9b2c:	blx	r3
    9b30:	b	92d8 <readstat_parse_sas7bcat+0x300>
    9b34:	mov	r3, #7
    9b38:	str	r3, [fp, #-392]	; 0xfffffe78
    9b3c:	b	9b24 <readstat_parse_sas7bcat+0xb4c>
    9b40:	mov	r3, #3
    9b44:	str	r3, [fp, #-392]	; 0xfffffe78
    9b48:	b	9b24 <readstat_parse_sas7bcat+0xb4c>
    9b4c:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9b50:	str	r0, [fp, #-428]	; 0xfffffe54
    9b54:	b	9b5c <readstat_parse_sas7bcat+0xb84>
    9b58:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9b5c:	ldr	r3, [fp, #-428]	; 0xfffffe54
    9b60:	str	r3, [fp, #-392]	; 0xfffffe78
    9b64:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9b68:	mov	r3, #5
    9b6c:	str	r3, [fp, #-428]	; 0xfffffe54
    9b70:	b	9b7c <readstat_parse_sas7bcat+0xba4>
    9b74:	mov	r3, #5
    9b78:	str	r3, [fp, #-428]	; 0xfffffe54
    9b7c:	ldr	r0, [fp, #-408]	; 0xfffffe68
    9b80:	bl	3eb4 <free@plt>
    9b84:	ldr	r3, [fp, #-428]	; 0xfffffe54
    9b88:	cmp	r3, #0
    9b8c:	bne	9c5c <readstat_parse_sas7bcat+0xc84>
    9b90:	ldr	r3, [fp, #-420]	; 0xfffffe5c
    9b94:	adds	r3, r3, #1
    9b98:	str	r3, [fp, #-420]	; 0xfffffe5c
    9b9c:	ldr	r3, [fp, #-416]	; 0xfffffe60
    9ba0:	adc	r3, r3, #0
    9ba4:	str	r3, [fp, #-416]	; 0xfffffe60
    9ba8:	ldr	r2, [r9, #84]	; 0x54
    9bac:	asr	r3, r2, #31
    9bb0:	sub	r1, fp, #420	; 0x1a4
    9bb4:	ldrd	r0, [r1]
    9bb8:	cmp	r0, r2
    9bbc:	sbcs	r3, r1, r3
    9bc0:	bge	9ab0 <readstat_parse_sas7bcat+0xad8>
    9bc4:	ldr	r2, [r9, #80]	; 0x50
    9bc8:	ldr	r3, [fp, #-420]	; 0xfffffe5c
    9bcc:	lsl	r3, r3, #3
    9bd0:	add	r1, r2, r3
    9bd4:	ldr	r0, [r1, #4]
    9bd8:	str	r0, [fp, #-436]	; 0xfffffe4c
    9bdc:	ldrh	r2, [r2, r3]
    9be0:	str	r2, [fp, #-428]	; 0xfffffe54
    9be4:	ldr	r8, [r9, #12]
    9be8:	ldr	r3, [r9, #16]
    9bec:	cmp	r3, #0
    9bf0:	moveq	r3, #16
    9bf4:	movne	r3, #32
    9bf8:	str	r3, [fp, #-408]	; 0xfffffe68
    9bfc:	cmp	r2, #0
    9c00:	cmpne	r0, #0
    9c04:	ble	9b90 <readstat_parse_sas7bcat+0xbb8>
    9c08:	ldrd	r2, [r9, #56]	; 0x38
    9c0c:	asr	r5, r0, #31
    9c10:	cmp	r2, r0
    9c14:	sbcs	r3, r3, r5
    9c18:	blt	9b90 <readstat_parse_sas7bcat+0xbb8>
    9c1c:	ldr	r4, [fp, #-428]	; 0xfffffe54
    9c20:	mov	r5, r0
    9c24:	mov	r6, #0
    9c28:	mov	r7, #0
    9c2c:	mov	sl, #0
    9c30:	sub	r3, fp, #304	; 0x130
    9c34:	str	r3, [fp, #-404]	; 0xfffffe6c
    9c38:	sub	r3, fp, #300	; 0x12c
    9c3c:	str	r3, [fp, #-424]	; 0xfffffe58
    9c40:	b	95c4 <readstat_parse_sas7bcat+0x5ec>
    9c44:	mov	r3, #5
    9c48:	str	r3, [fp, #-428]	; 0xfffffe54
    9c4c:	b	9b7c <readstat_parse_sas7bcat+0xba4>
    9c50:	mov	r3, #5
    9c54:	str	r3, [fp, #-428]	; 0xfffffe54
    9c58:	b	9b7c <readstat_parse_sas7bcat+0xba4>
    9c5c:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9c60:	ldr	r3, [fp, #-428]	; 0xfffffe54
    9c64:	str	r3, [fp, #-392]	; 0xfffffe78
    9c68:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9c6c:	mov	r3, #0
    9c70:	str	r3, [fp, #-380]	; 0xfffffe84
    9c74:	ldrb	r2, [ip, #2]
    9c78:	sub	r2, r2, #10
    9c7c:	ldr	r3, [r9, #100]	; 0x64
    9c80:	str	r3, [sp]
    9c84:	mov	r3, #16
    9c88:	add	r2, ip, r2
    9c8c:	mov	r1, #65	; 0x41
    9c90:	sub	r0, fp, #372	; 0x174
    9c94:	bl	4238 <readstat_convert@plt>
    9c98:	cmp	r0, #0
    9c9c:	bne	9aa8 <readstat_parse_sas7bcat+0xad0>
    9ca0:	sub	r3, fp, #372	; 0x174
    9ca4:	str	r3, [fp, #-388]	; 0xfffffe7c
    9ca8:	b	99c0 <readstat_parse_sas7bcat+0x9e8>
    9cac:	ldr	r3, [fp, #-424]	; 0xfffffe58
    9cb0:	cmp	r3, #105	; 0x69
    9cb4:	bls	9b90 <readstat_parse_sas7bcat+0xbb8>
    9cb8:	ldr	r4, [fp, #-400]	; 0xfffffe70
    9cbc:	ldrb	sl, [r4, #2]
    9cc0:	asr	sl, sl, #1
    9cc4:	and	sl, sl, #4
    9cc8:	ldr	r3, [r9, #16]
    9ccc:	cmp	r3, #0
    9cd0:	beq	9788 <readstat_parse_sas7bcat+0x7b0>
    9cd4:	add	r0, sl, #42	; 0x2a
    9cd8:	ldr	r1, [r9, #24]
    9cdc:	add	r0, r4, r0
    9ce0:	bl	43f4 <sas_read4@plt>
    9ce4:	mov	r8, r0
    9ce8:	add	r0, sl, #50	; 0x32
    9cec:	ldr	r1, [r9, #24]
    9cf0:	add	r0, r4, r0
    9cf4:	bl	43f4 <sas_read4@plt>
    9cf8:	mov	r7, r0
    9cfc:	mov	r5, #138	; 0x8a
    9d00:	ldr	r3, [r9, #100]	; 0x64
    9d04:	str	r3, [sp]
    9d08:	mov	r3, #8
    9d0c:	ldr	r2, [fp, #-400]	; 0xfffffe70
    9d10:	add	r2, r2, r3
    9d14:	mov	r1, #129	; 0x81
    9d18:	sub	r0, fp, #304	; 0x130
    9d1c:	bl	4238 <readstat_convert@plt>
    9d20:	subs	r3, r0, #0
    9d24:	str	r3, [fp, #-428]	; 0xfffffe54
    9d28:	bne	9b58 <readstat_parse_sas7bcat+0xb80>
    9d2c:	cmp	sl, #0
    9d30:	addne	sl, sl, #16
    9d34:	ldr	r1, [fp, #-400]	; 0xfffffe70
    9d38:	ldrsb	r3, [r1, #2]
    9d3c:	cmp	r3, #0
    9d40:	blt	97bc <readstat_parse_sas7bcat+0x7e4>
    9d44:	add	r6, r5, sl
    9d48:	ldr	r3, [fp, #-424]	; 0xfffffe58
    9d4c:	cmp	r3, r6
    9d50:	bcc	9b90 <readstat_parse_sas7bcat+0xbb8>
    9d54:	ldr	r2, [fp, #-400]	; 0xfffffe70
    9d58:	add	r6, r2, r6
    9d5c:	sub	r5, r3, r5
    9d60:	sub	sl, r5, sl
    9d64:	str	r7, [fp, #-404]	; 0xfffffe6c
    9d68:	mov	r1, #4
    9d6c:	mov	r0, r7
    9d70:	bl	3fbc <readstat_calloc@plt>
    9d74:	mov	r4, r0
    9d78:	str	r0, [fp, #-408]	; 0xfffffe68
    9d7c:	bl	3ea8 <machine_is_little_endian@plt>
    9d80:	str	r0, [fp, #-444]	; 0xfffffe44
    9d84:	ldrb	r3, [fp, #-304]	; 0xfffffed0
    9d88:	str	r3, [fp, #-432]	; 0xfffffe50
    9d8c:	cmp	r4, #0
    9d90:	beq	9e94 <readstat_parse_sas7bcat+0xebc>
    9d94:	cmp	r8, #0
    9d98:	ble	987c <readstat_parse_sas7bcat+0x8a4>
    9d9c:	cmp	sl, #2
    9da0:	bls	9b68 <readstat_parse_sas7bcat+0xb90>
    9da4:	mov	r4, r6
    9da8:	mov	r5, #0
    9dac:	b	9830 <readstat_parse_sas7bcat+0x858>
    9db0:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9db4:	mov	r3, #15
    9db8:	str	r3, [fp, #-392]	; 0xfffffe78
    9dbc:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9dc0:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9dc4:	mov	r3, #2
    9dc8:	str	r3, [fp, #-392]	; 0xfffffe78
    9dcc:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9dd0:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9dd4:	mov	r3, #5
    9dd8:	str	r3, [fp, #-392]	; 0xfffffe78
    9ddc:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9de0:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9de4:	mov	r3, #2
    9de8:	str	r3, [fp, #-392]	; 0xfffffe78
    9dec:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9df0:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9df4:	mov	r3, #15
    9df8:	str	r3, [fp, #-392]	; 0xfffffe78
    9dfc:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9e00:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9e04:	mov	r3, #2
    9e08:	str	r3, [fp, #-392]	; 0xfffffe78
    9e0c:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9e10:	cmn	sl, #1
    9e14:	beq	9e80 <readstat_parse_sas7bcat+0xea8>
    9e18:	cmp	sl, #0
    9e1c:	beq	9b90 <readstat_parse_sas7bcat+0xbb8>
    9e20:	str	sl, [fp, #-424]	; 0xfffffe58
    9e24:	mov	r1, sl
    9e28:	ldr	r0, [fp, #-400]	; 0xfffffe70
    9e2c:	bl	42e0 <readstat_realloc@plt>
    9e30:	subs	r3, r0, #0
    9e34:	str	r3, [fp, #-400]	; 0xfffffe70
    9e38:	beq	9b0c <readstat_parse_sas7bcat+0xb34>
    9e3c:	ldr	r4, [r9, #12]
    9e40:	ldr	r3, [r9, #16]
    9e44:	cmp	r3, #0
    9e48:	moveq	r8, #16
    9e4c:	movne	r8, #32
    9e50:	mov	r6, #0
    9e54:	mov	r7, #0
    9e58:	mov	r3, #0
    9e5c:	str	r3, [fp, #-404]	; 0xfffffe6c
    9e60:	sub	r3, fp, #304	; 0x130
    9e64:	str	r3, [fp, #-408]	; 0xfffffe68
    9e68:	sub	r3, fp, #300	; 0x12c
    9e6c:	str	r3, [fp, #-432]	; 0xfffffe50
    9e70:	ldr	r5, [fp, #-436]	; 0xfffffe4c
    9e74:	ldr	sl, [fp, #-428]	; 0xfffffe54
    9e78:	str	r8, [fp, #-428]	; 0xfffffe54
    9e7c:	b	96c8 <readstat_parse_sas7bcat+0x6f0>
    9e80:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9e84:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9e88:	mov	r3, #0
    9e8c:	str	r3, [fp, #-400]	; 0xfffffe70
    9e90:	b	92b0 <readstat_parse_sas7bcat+0x2d8>
    9e94:	ldr	sl, [fp, #-440]	; 0xfffffe48
    9e98:	mov	r3, #3
    9e9c:	str	r3, [fp, #-428]	; 0xfffffe54
    9ea0:	b	9c60 <readstat_parse_sas7bcat+0xc88>
    9ea4:	mov	r3, #1
    9ea8:	str	r3, [r9, #84]	; 0x54
    9eac:	b	9538 <readstat_parse_sas7bcat+0x560>

00009eb0 <sas7bcat_begin_data>:
    9eb0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    9eb4:	strd	r6, [sp, #8]
    9eb8:	strd	r8, [sp, #16]
    9ebc:	strd	sl, [sp, #24]
    9ec0:	str	lr, [sp, #32]
    9ec4:	sub	sp, sp, #380	; 0x17c
    9ec8:	mov	sl, r0
    9ecc:	ldr	r3, [pc, #980]	; a2a8 <sas7bcat_begin_data+0x3f8>
    9ed0:	add	r3, pc, r3
    9ed4:	str	r3, [sp, #180]	; 0xb4
    9ed8:	mov	r1, #0
    9edc:	bl	434c <sas_header_info_init@plt>
    9ee0:	mov	r5, r0
    9ee4:	str	r0, [sp, #168]	; 0xa8
    9ee8:	ldr	r4, [sl, #40]	; 0x28
    9eec:	lsl	r0, r4, #3
    9ef0:	bl	410c <malloc@plt>
    9ef4:	mov	r6, r0
    9ef8:	str	r0, [sp, #172]	; 0xac
    9efc:	ldr	r0, [r5, #32]
    9f00:	bl	410c <malloc@plt>
    9f04:	str	r0, [sp, #176]	; 0xb0
    9f08:	cmp	r4, #0
    9f0c:	ble	a140 <sas7bcat_begin_data+0x290>
    9f10:	sub	r3, r6, #4
    9f14:	str	r3, [sp, #160]	; 0xa0
    9f18:	mov	fp, #0
    9f1c:	add	r3, sp, #196	; 0xc4
    9f20:	str	r3, [sp, #164]	; 0xa4
    9f24:	b	a038 <sas7bcat_begin_data+0x188>
    9f28:	add	r3, pc, #880	; 0x370
    9f2c:	ldrd	r2, [r3]
    9f30:	strd	r2, [r0, #12]
    9f34:	mov	r2, r4
    9f38:	ldr	r1, [sp, #164]	; 0xa4
    9f3c:	add	r0, r0, #12
    9f40:	bl	3f14 <memcpy@plt>
    9f44:	mov	r4, #106	; 0x6a
    9f48:	b	a114 <sas7bcat_begin_data+0x264>
    9f4c:	vldr	d7, [r0]
    9f50:	vneg.f64	d7, d7
    9f54:	vmov	r2, r3, d7
    9f58:	strd	r2, [sp, #184]	; 0xb8
    9f5c:	bl	3ea8 <machine_is_little_endian@plt>
    9f60:	cmp	r0, #0
    9f64:	bne	a00c <sas7bcat_begin_data+0x15c>
    9f68:	ldr	r3, [sp, #184]	; 0xb8
    9f6c:	str	r3, [r5, #22]
    9f70:	ldr	r3, [sp, #188]	; 0xbc
    9f74:	str	r3, [r5, #26]
    9f78:	ldr	r2, [r8, #28]
    9f7c:	strh	r2, [r4, #8]
    9f80:	sxth	r2, r2
    9f84:	ldr	r1, [r8, #24]
    9f88:	add	r0, r4, #10
    9f8c:	bl	3f14 <memcpy@plt>
    9f90:	add	r5, r5, #30
    9f94:	ldr	r3, [r8, #28]
    9f98:	add	r3, r3, #11
    9f9c:	add	r4, r4, r3
    9fa0:	add	r9, r9, #1
    9fa4:	ldr	r3, [r6, #264]	; 0x108
    9fa8:	cmp	r9, r3
    9fac:	bge	a01c <sas7bcat_begin_data+0x16c>
    9fb0:	mov	r1, r9
    9fb4:	mov	r0, r6
    9fb8:	bl	44cc <readstat_get_value_label@plt>
    9fbc:	mov	r8, r0
    9fc0:	mov	r3, #24
    9fc4:	strb	r3, [r5, #2]
    9fc8:	str	r9, [r5, #10]
    9fcc:	ldr	r3, [r6]
    9fd0:	cmp	r3, #0
    9fd4:	bne	9f4c <sas7bcat_begin_data+0x9c>
    9fd8:	ldr	r2, [r0, #20]
    9fdc:	add	r0, r5, #14
    9fe0:	movw	r3, #8224	; 0x2020
    9fe4:	bfi	r3, r3, #16, #16
    9fe8:	str	r3, [r5, #14]
    9fec:	str	r3, [r0, #4]
    9ff0:	str	r3, [r0, #8]
    9ff4:	str	r3, [r0, #12]
    9ff8:	cmp	r2, #16
    9ffc:	movcs	r2, #16
    a000:	ldr	r1, [r8, #16]
    a004:	bl	3f14 <memcpy@plt>
    a008:	b	9f78 <sas7bcat_begin_data+0xc8>
    a00c:	ldrd	r0, [sp, #184]	; 0xb8
    a010:	bl	3d70 <byteswap8@plt>
    a014:	strd	r0, [sp, #184]	; 0xb8
    a018:	b	9f68 <sas7bcat_begin_data+0xb8>
    a01c:	ldr	r3, [sp, #160]	; 0xa0
    a020:	str	r7, [r3, #4]!
    a024:	str	r3, [sp, #160]	; 0xa0
    a028:	add	fp, fp, #1
    a02c:	ldr	r3, [sl, #40]	; 0x28
    a030:	cmp	r3, fp
    a034:	ble	a140 <sas7bcat_begin_data+0x290>
    a038:	ldr	r3, [sl, #36]	; 0x24
    a03c:	ldr	r6, [r3, fp, lsl #2]
    a040:	add	r7, r6, #4
    a044:	mov	r0, r7
    a048:	bl	41fc <strlen@plt>
    a04c:	mov	r4, r0
    a050:	cmp	r0, #8
    a054:	movls	r5, #106	; 0x6a
    a058:	bls	a06c <sas7bcat_begin_data+0x1bc>
    a05c:	cmp	r0, #32
    a060:	movcc	r4, r0
    a064:	movcs	r4, #32
    a068:	mov	r5, #138	; 0x8a
    a06c:	mov	r2, r4
    a070:	mov	r1, r7
    a074:	ldr	r0, [sp, #164]	; 0xa4
    a078:	bl	3f14 <memcpy@plt>
    a07c:	ldr	r8, [r6, #264]	; 0x108
    a080:	cmp	r8, #0
    a084:	ble	a0b4 <sas7bcat_begin_data+0x204>
    a088:	mov	r7, #0
    a08c:	mov	r1, r7
    a090:	mov	r0, r6
    a094:	bl	44cc <readstat_get_value_label@plt>
    a098:	ldr	r3, [r0, #28]
    a09c:	add	r3, r3, #41	; 0x29
    a0a0:	add	r5, r5, r3
    a0a4:	add	r7, r7, #1
    a0a8:	ldr	r8, [r6, #264]	; 0x108
    a0ac:	cmp	r7, r8
    a0b0:	blt	a08c <sas7bcat_begin_data+0x1dc>
    a0b4:	add	r1, r5, #8
    a0b8:	mov	r0, #1
    a0bc:	bl	3d4c <calloc@plt>
    a0c0:	mov	r7, r0
    a0c4:	str	r5, [r0]
    a0c8:	str	r8, [r0, #42]	; 0x2a
    a0cc:	str	r8, [r0, #46]	; 0x2e
    a0d0:	cmp	r4, #8
    a0d4:	bls	9f28 <sas7bcat_begin_data+0x78>
    a0d8:	mvn	r3, #127	; 0x7f
    a0dc:	strb	r3, [r0, #6]
    a0e0:	ldr	r9, [sp, #164]	; 0xa4
    a0e4:	ldrd	r2, [r9]
    a0e8:	strd	r2, [r0, #12]
    a0ec:	add	r5, r0, #110	; 0x6e
    a0f0:	mov	r2, #32
    a0f4:	mov	r1, r2
    a0f8:	mov	r0, r5
    a0fc:	bl	42a4 <memset@plt>
    a100:	mov	r2, r4
    a104:	mov	r1, r9
    a108:	mov	r0, r5
    a10c:	bl	3f14 <memcpy@plt>
    a110:	mov	r4, #138	; 0x8a
    a114:	add	r5, r4, #4
    a118:	add	r5, r7, r5
    a11c:	rsb	r8, r8, r8, lsl #4
    a120:	add	r4, r4, r8, lsl #1
    a124:	add	r4, r4, #4
    a128:	add	r4, r7, r4
    a12c:	ldr	r3, [r6, #264]	; 0x108
    a130:	cmp	r3, #0
    a134:	ble	a01c <sas7bcat_begin_data+0x16c>
    a138:	mov	r9, #0
    a13c:	b	9fb0 <sas7bcat_begin_data+0x100>
    a140:	mov	r2, #4
    a144:	mov	r3, #0
    a148:	ldr	r5, [sp, #168]	; 0xa8
    a14c:	strd	r2, [r5, #56]	; 0x38
    a150:	mov	r2, #124	; 0x7c
    a154:	mov	r1, #0
    a158:	add	r0, sp, #228	; 0xe4
    a15c:	bl	42a4 <memset@plt>
    a160:	ldr	r3, [r5, #4]
    a164:	cmp	r3, #0
    a168:	movne	r3, #51	; 0x33
    a16c:	moveq	r3, #34	; 0x22
    a170:	strb	r3, [sp, #228]	; 0xe4
    a174:	mov	r3, #34	; 0x22
    a178:	strb	r3, [sp, #231]	; 0xe7
    a17c:	bl	3ea8 <machine_is_little_endian@plt>
    a180:	adds	r0, r0, #0
    a184:	movne	r0, #1
    a188:	strb	r0, [sp, #233]	; 0xe9
    a18c:	mov	r3, #49	; 0x31
    a190:	strb	r3, [sp, #235]	; 0xeb
    a194:	mov	r3, #20
    a198:	strb	r3, [sp, #266]	; 0x10a
    a19c:	ldr	r1, [pc, #264]	; a2ac <sas7bcat_begin_data+0x3fc>
    a1a0:	add	r1, pc, r1
    a1a4:	ldrd	r2, [r1]
    a1a8:	add	r0, sp, #280	; 0x118
    a1ac:	strd	r2, [r0]
    a1b0:	ldrd	r2, [r1, #12]
    a1b4:	add	r1, sp, #352	; 0x160
    a1b8:	strd	r2, [r1]
    a1bc:	ldr	r3, [pc, #236]	; a2b0 <sas7bcat_begin_data+0x400>
    a1c0:	ldr	r2, [sp, #180]	; 0xb4
    a1c4:	ldr	r3, [r2, r3]
    a1c8:	add	r4, sp, #196	; 0xc4
    a1cc:	ldr	r1, [r3]
    a1d0:	ldr	r2, [r3, #4]
    a1d4:	str	r1, [sp, #196]	; 0xc4
    a1d8:	str	r2, [sp, #200]	; 0xc8
    a1dc:	ldr	r1, [r3, #8]
    a1e0:	ldr	r2, [r3, #12]
    a1e4:	str	r1, [sp, #204]	; 0xcc
    a1e8:	str	r2, [sp, #208]	; 0xd0
    a1ec:	ldr	r1, [r3, #16]
    a1f0:	ldr	r2, [r3, #20]
    a1f4:	str	r1, [sp, #212]	; 0xd4
    a1f8:	str	r2, [sp, #216]	; 0xd8
    a1fc:	ldr	r2, [r3, #24]
    a200:	ldr	r3, [r3, #28]
    a204:	str	r2, [sp, #220]	; 0xdc
    a208:	str	r3, [sp, #224]	; 0xe0
    a20c:	mov	r2, #156	; 0x9c
    a210:	add	r1, sp, #204	; 0xcc
    a214:	mov	r0, sp
    a218:	bl	3f14 <memcpy@plt>
    a21c:	ldm	r4, {r2, r3}
    a220:	mov	r1, r5
    a224:	mov	r0, sl
    a228:	bl	40b8 <sas_write_header@plt>
    a22c:	subs	r6, r0, #0
    a230:	beq	a2b4 <sas7bcat_begin_data+0x404>
    a234:	ldr	r3, [sl, #40]	; 0x28
    a238:	cmp	r3, #0
    a23c:	ble	a264 <sas7bcat_begin_data+0x3b4>
    a240:	ldr	r3, [sp, #172]	; 0xac
    a244:	sub	r5, r3, #4
    a248:	mov	r4, #0
    a24c:	ldr	r0, [r5, #4]!
    a250:	bl	3eb4 <free@plt>
    a254:	add	r4, r4, #1
    a258:	ldr	r3, [sl, #40]	; 0x28
    a25c:	cmp	r3, r4
    a260:	bgt	a24c <sas7bcat_begin_data+0x39c>
    a264:	ldr	r0, [sp, #172]	; 0xac
    a268:	bl	3eb4 <free@plt>
    a26c:	ldr	r0, [sp, #168]	; 0xa8
    a270:	bl	3eb4 <free@plt>
    a274:	ldr	r0, [sp, #176]	; 0xb0
    a278:	bl	3eb4 <free@plt>
    a27c:	mov	r0, r6
    a280:	add	sp, sp, #380	; 0x17c
    a284:	ldrd	r4, [sp]
    a288:	ldrd	r6, [sp, #8]
    a28c:	ldrd	r8, [sp, #16]
    a290:	ldrd	sl, [sp, #24]
    a294:	add	sp, sp, #32
    a298:	pop	{pc}		; (ldr pc, [sp], #4)
    a29c:	nop	{0}
    a2a0:	.word	0x20202020
    a2a4:	.word	0x20202020
    a2a8:	.word	0x0003c128
    a2ac:	.word	0x0001c530
    a2b0:	.word	0x000002c8
    a2b4:	mov	r7, r5
    a2b8:	ldr	r1, [r5, #32]
    a2bc:	mov	r0, sl
    a2c0:	bl	4010 <readstat_write_zeros@plt>
    a2c4:	subs	r6, r0, #0
    a2c8:	bne	a234 <sas7bcat_begin_data+0x384>
    a2cc:	ldr	r2, [r5, #32]
    a2d0:	mov	r1, #0
    a2d4:	ldr	r8, [sp, #176]	; 0xb0
    a2d8:	mov	r0, r8
    a2dc:	bl	42a4 <memset@plt>
    a2e0:	add	r3, r8, #856	; 0x358
    a2e4:	ldr	ip, [sl, #40]	; 0x28
    a2e8:	cmp	ip, #0
    a2ec:	ble	a378 <sas7bcat_begin_data+0x4c8>
    a2f0:	add	r1, r8, #1056	; 0x420
    a2f4:	add	r1, r1, #12
    a2f8:	ldr	r2, [r5, #32]
    a2fc:	add	r2, r8, r2
    a300:	cmp	r1, r2
    a304:	bhi	a378 <sas7bcat_begin_data+0x4c8>
    a308:	ldr	r2, [sp, #172]	; 0xac
    a30c:	sub	r0, r2, #4
    a310:	mov	r2, #16
    a314:	mov	r1, #0
    a318:	movw	lr, #19544	; 0x4c58
    a31c:	movt	lr, #21075	; 0x5253
    a320:	mov	r5, #4
    a324:	mov	r4, #79	; 0x4f
    a328:	str	lr, [r3]
    a32c:	strh	r5, [r3, #4]
    a330:	uxth	r2, r2
    a334:	strh	r2, [r3, #8]
    a338:	strb	r4, [r3, #50]	; 0x32
    a33c:	ldr	r6, [r0, #4]!
    a340:	ldr	r6, [r6]
    a344:	add	r2, r2, r6
    a348:	sxth	r2, r2
    a34c:	add	r1, r1, #1
    a350:	cmp	r1, ip
    a354:	beq	a378 <sas7bcat_begin_data+0x4c8>
    a358:	add	r9, r3, #212	; 0xd4
    a35c:	ldr	r6, [r7, #32]
    a360:	add	r6, r8, r6
    a364:	add	r3, r3, #424	; 0x1a8
    a368:	cmp	r6, r3
    a36c:	bcc	a378 <sas7bcat_begin_data+0x4c8>
    a370:	mov	r3, r9
    a374:	b	a328 <sas7bcat_begin_data+0x478>
    a378:	ldr	fp, [sp, #168]	; 0xa8
    a37c:	ldr	r2, [fp, #32]
    a380:	ldr	r9, [sp, #176]	; 0xb0
    a384:	mov	r1, r9
    a388:	mov	r0, sl
    a38c:	bl	4454 <readstat_write_bytes@plt>
    a390:	subs	r6, r0, #0
    a394:	bne	a234 <sas7bcat_begin_data+0x384>
    a398:	ldr	r1, [fp, #32]
    a39c:	mov	r0, sl
    a3a0:	bl	4010 <readstat_write_zeros@plt>
    a3a4:	subs	r6, r0, #0
    a3a8:	bne	a234 <sas7bcat_begin_data+0x384>
    a3ac:	ldr	r2, [fp, #32]
    a3b0:	mov	r1, #0
    a3b4:	mov	r0, r9
    a3b8:	bl	42a4 <memset@plt>
    a3bc:	ldr	r7, [sl, #40]	; 0x28
    a3c0:	cmp	r7, #0
    a3c4:	ble	a48c <sas7bcat_begin_data+0x5dc>
    a3c8:	ldr	r6, [sp, #172]	; 0xac
    a3cc:	ldr	r4, [r6]
    a3d0:	ldr	ip, [r4]
    a3d4:	add	r0, ip, #32
    a3d8:	mov	r1, #0
    a3dc:	ldrd	r2, [fp, #32]
    a3e0:	cmp	r2, r0
    a3e4:	sbcs	r3, r3, r1
    a3e8:	blt	a48c <sas7bcat_begin_data+0x5dc>
    a3ec:	mov	lr, #16
    a3f0:	mov	r5, #0
    a3f4:	mov	r8, lr
    a3f8:	add	r2, sp, #360	; 0x168
    a3fc:	mov	r0, #0
    a400:	mov	r1, #0
    a404:	strd	r0, [r2]
    a408:	strd	r0, [r2, #8]
    a40c:	add	r3, sp, #364	; 0x16c
    a410:	add	r3, r3, #2
    a414:	strh	ip, [r3]
    a418:	add	r3, r9, r8
    a41c:	ldr	r1, [sp, #364]	; 0x16c
    a420:	str	r0, [r9, r8]
    a424:	str	r1, [r3, #4]
    a428:	ldr	r2, [sp, #372]	; 0x174
    a42c:	str	r0, [r3, #8]
    a430:	str	r2, [r3, #12]
    a434:	add	lr, lr, #16
    a438:	uxth	r8, lr
    a43c:	mov	r1, r4
    a440:	ldr	r2, [r1], #4
    a444:	sxtah	r0, r9, r8
    a448:	bl	3f14 <memcpy@plt>
    a44c:	ldr	lr, [r4]
    a450:	add	lr, r8, lr
    a454:	sxth	lr, lr
    a458:	add	r5, r5, #1
    a45c:	cmp	r5, r7
    a460:	beq	a48c <sas7bcat_begin_data+0x5dc>
    a464:	mov	r8, lr
    a468:	ldr	r4, [r6, #4]!
    a46c:	ldr	ip, [r4]
    a470:	add	r0, ip, #16
    a474:	add	r0, r0, lr
    a478:	mov	r1, #0
    a47c:	ldrd	r2, [fp, #32]
    a480:	cmp	r2, r0
    a484:	sbcs	r3, r3, r1
    a488:	bge	a3f8 <sas7bcat_begin_data+0x548>
    a48c:	ldr	r3, [sp, #168]	; 0xa8
    a490:	ldr	r2, [r3, #32]
    a494:	ldr	r1, [sp, #176]	; 0xb0
    a498:	mov	r0, sl
    a49c:	bl	4454 <readstat_write_bytes@plt>
    a4a0:	mov	r6, r0
    a4a4:	b	a234 <sas7bcat_begin_data+0x384>

0000a4a8 <readstat_begin_writing_sas7bcat>:
    a4a8:	str	r4, [sp, #-8]!
    a4ac:	str	lr, [sp, #4]
    a4b0:	ldr	r3, [r0, #8]
    a4b4:	cmp	r3, #0
    a4b8:	moveq	r3, #9
    a4bc:	streq	r3, [r0, #8]
    a4c0:	ldr	r3, [pc, #24]	; a4e0 <readstat_begin_writing_sas7bcat+0x38>
    a4c4:	add	r3, pc, r3
    a4c8:	str	r3, [r0, #276]	; 0x114
    a4cc:	mov	r2, #0
    a4d0:	bl	3f5c <readstat_begin_writing_file@plt>
    a4d4:	ldr	r4, [sp]
    a4d8:	add	sp, sp, #4
    a4dc:	pop	{pc}		; (ldr pc, [sp], #4)
    a4e0:	.word	0xfffff9e4
    a4e4:	.word	0x00000000

0000a4e8 <sas7bdat_update_progress>:
    a4e8:	str	r4, [sp, #-8]!
    a4ec:	str	lr, [sp, #4]
    a4f0:	ldr	r3, [r0, #56]	; 0x38
    a4f4:	ldr	r4, [r3, #16]
    a4f8:	ldr	r3, [r3, #20]
    a4fc:	ldr	r2, [r0, #52]	; 0x34
    a500:	ldr	r1, [r0, #28]
    a504:	ldr	r0, [r0, #32]
    a508:	blx	r4
    a50c:	ldr	r4, [sp]
    a510:	add	sp, sp, #4
    a514:	pop	{pc}		; (ldr pc, [sp], #4)

0000a518 <sas7bdat_validate_subheader_pointer>:
    a518:	strd	r4, [sp, #-32]!	; 0xffffffe0
    a51c:	strd	r6, [sp, #8]
    a520:	strd	r8, [sp, #16]
    a524:	strd	sl, [sp, #24]
    a528:	sub	sp, sp, #24
    a52c:	ldrd	r4, [r0]
    a530:	mov	r9, #0
    a534:	cmp	r5, r9
    a538:	cmpeq	r4, r1
    a53c:	movhi	r0, #5
    a540:	bhi	a60c <sas7bdat_validate_subheader_pointer+0xf4>
    a544:	mov	ip, r3
    a548:	mov	r8, r1
    a54c:	ldrd	sl, [r0, #8]
    a550:	cmp	r9, fp
    a554:	cmpeq	r1, sl
    a558:	movcc	r0, #5
    a55c:	bcc	a60c <sas7bdat_validate_subheader_pointer+0xf4>
    a560:	adds	r6, r4, sl
    a564:	adc	r7, r5, fp
    a568:	cmp	r9, r7
    a56c:	cmpeq	r1, r6
    a570:	movcc	r0, #5
    a574:	bcc	a60c <sas7bdat_validate_subheader_pointer+0xf4>
    a578:	uxth	r6, r2
    a57c:	mov	r7, #0
    a580:	strd	r6, [sp]
    a584:	ldr	r6, [r3, #144]	; 0x90
    a588:	ldr	r3, [r3, #148]	; 0x94
    a58c:	ldr	r2, [sp]
    a590:	umull	r6, r7, r6, r2
    a594:	mla	r7, r3, r2, r7
    a598:	ldr	r3, [ip, #128]	; 0x80
    a59c:	ldr	r2, [ip, #132]	; 0x84
    a5a0:	adds	r3, r6, r3
    a5a4:	str	r3, [sp, #8]
    a5a8:	adc	r3, r7, r2
    a5ac:	str	r3, [sp, #12]
    a5b0:	ldrd	r2, [sp, #8]
    a5b4:	cmp	r5, r3
    a5b8:	cmpeq	r4, r2
    a5bc:	movcc	r0, #5
    a5c0:	bcc	a60c <sas7bdat_validate_subheader_pointer+0xf4>
    a5c4:	ldrb	r3, [r0, #16]
    a5c8:	cmp	r3, #0
    a5cc:	movne	r0, #0
    a5d0:	bne	a60c <sas7bdat_validate_subheader_pointer+0xf4>
    a5d4:	ldrd	r2, [ip, #136]	; 0x88
    a5d8:	cmp	fp, r3
    a5dc:	cmpeq	sl, r2
    a5e0:	movcc	r0, #5
    a5e4:	bcc	a60c <sas7bdat_validate_subheader_pointer+0xf4>
    a5e8:	adds	r1, r4, r2
    a5ec:	str	r1, [sp, #16]
    a5f0:	adc	r3, r5, r3
    a5f4:	str	r3, [sp, #20]
    a5f8:	ldrd	r2, [sp, #16]
    a5fc:	cmp	r9, r3
    a600:	cmpeq	r8, r2
    a604:	movcs	r0, #0
    a608:	movcc	r0, #5
    a60c:	add	sp, sp, #24
    a610:	ldrd	r4, [sp]
    a614:	ldrd	r6, [sp, #8]
    a618:	ldrd	r8, [sp, #16]
    a61c:	ldrd	sl, [sp, #24]
    a620:	add	sp, sp, #32
    a624:	bx	lr

0000a628 <sas7bdat_copy_text_ref>:
    a628:	strd	r4, [sp, #-12]!
    a62c:	str	lr, [sp, #8]
    a630:	sub	sp, sp, #20
    a634:	add	ip, sp, #16
    a638:	stmdb	ip, {r2, r3}
    a63c:	ldr	ip, [sp, #32]
    a640:	ldrh	lr, [sp, #8]
    a644:	ldr	r3, [ip, #152]	; 0x98
    a648:	cmp	lr, r3
    a64c:	movge	r0, #5
    a650:	bge	a69c <sas7bdat_copy_text_ref+0x74>
    a654:	ldrh	r3, [sp, #12]
    a658:	cmp	r3, #0
    a65c:	strbeq	r3, [r0]
    a660:	moveq	r0, r3
    a664:	beq	a69c <sas7bdat_copy_text_ref+0x74>
    a668:	ldrh	r2, [sp, #10]
    a66c:	add	r5, r2, r3
    a670:	ldr	r4, [ip, #156]	; 0x9c
    a674:	ldr	r4, [r4, lr, lsl #2]
    a678:	cmp	r5, r4
    a67c:	movhi	r0, #5
    a680:	bhi	a69c <sas7bdat_copy_text_ref+0x74>
    a684:	ldr	r4, [ip, #160]	; 0xa0
    a688:	ldr	lr, [r4, lr, lsl #2]
    a68c:	ldr	ip, [ip, #208]	; 0xd0
    a690:	str	ip, [sp]
    a694:	add	r2, lr, r2
    a698:	bl	4238 <readstat_convert@plt>
    a69c:	add	sp, sp, #20
    a6a0:	ldrd	r4, [sp]
    a6a4:	add	sp, sp, #8
    a6a8:	pop	{pc}		; (ldr pc, [sp], #4)

0000a6ac <sas7bdat_parse_text_ref>:
    a6ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
    a6b0:	strd	r6, [sp, #8]
    a6b4:	str	r8, [sp, #16]
    a6b8:	str	lr, [sp, #20]
    a6bc:	mov	r4, r0
    a6c0:	mov	r5, r1
    a6c4:	mov	r6, r2
    a6c8:	ldr	r1, [r2, #60]	; 0x3c
    a6cc:	mov	r0, r5
    a6d0:	bl	43d0 <sas_read2@plt>
    a6d4:	mov	r8, r0
    a6d8:	ldr	r1, [r6, #60]	; 0x3c
    a6dc:	add	r0, r5, #2
    a6e0:	bl	43d0 <sas_read2@plt>
    a6e4:	mov	r7, r0
    a6e8:	ldr	r1, [r6, #60]	; 0x3c
    a6ec:	add	r0, r5, #4
    a6f0:	bl	43d0 <sas_read2@plt>
    a6f4:	strh	r8, [r4]
    a6f8:	strh	r7, [r4, #2]
    a6fc:	strh	r0, [r4, #4]
    a700:	mov	r0, r4
    a704:	ldrd	r4, [sp]
    a708:	ldrd	r6, [sp, #8]
    a70c:	ldr	r8, [sp, #16]
    a710:	add	sp, sp, #20
    a714:	pop	{pc}		; (ldr pc, [sp], #4)

0000a718 <sas7bdat_parse_subheader_pointer>:
    a718:	strd	r4, [sp, #-24]!	; 0xffffffe8
    a71c:	strd	r6, [sp, #8]
    a720:	str	r8, [sp, #16]
    a724:	str	lr, [sp, #20]
    a728:	mov	r5, r0
    a72c:	mov	r4, r2
    a730:	mov	r6, r3
    a734:	ldr	r3, [r3, #44]	; 0x2c
    a738:	cmp	r3, #0
    a73c:	beq	a794 <sas7bdat_parse_subheader_pointer+0x7c>
    a740:	cmp	r1, #17
    a744:	movls	r0, #5
    a748:	bls	a780 <sas7bdat_parse_subheader_pointer+0x68>
    a74c:	ldr	r1, [r6, #60]	; 0x3c
    a750:	mov	r0, r5
    a754:	bl	43c4 <sas_read8@plt>
    a758:	strd	r0, [r4]
    a75c:	ldr	r1, [r6, #60]	; 0x3c
    a760:	add	r0, r5, #8
    a764:	bl	43c4 <sas_read8@plt>
    a768:	strd	r0, [r4, #8]
    a76c:	ldrb	r3, [r5, #16]
    a770:	strb	r3, [r4, #16]
    a774:	ldrb	r3, [r5, #17]
    a778:	strb	r3, [r4, #17]
    a77c:	mov	r0, #0
    a780:	ldrd	r4, [sp]
    a784:	ldrd	r6, [sp, #8]
    a788:	ldr	r8, [sp, #16]
    a78c:	add	sp, sp, #20
    a790:	pop	{pc}		; (ldr pc, [sp], #4)
    a794:	cmp	r1, #9
    a798:	movls	r0, #5
    a79c:	bls	a780 <sas7bdat_parse_subheader_pointer+0x68>
    a7a0:	ldr	r1, [r6, #60]	; 0x3c
    a7a4:	mov	r0, r5
    a7a8:	bl	43f4 <sas_read4@plt>
    a7ac:	mov	r7, #0
    a7b0:	str	r0, [r4]
    a7b4:	str	r7, [r4, #4]
    a7b8:	ldr	r1, [r6, #60]	; 0x3c
    a7bc:	add	r0, r5, #4
    a7c0:	bl	43f4 <sas_read4@plt>
    a7c4:	str	r0, [r4, #8]
    a7c8:	str	r7, [r4, #12]
    a7cc:	ldrb	r3, [r5, #8]
    a7d0:	strb	r3, [r4, #16]
    a7d4:	ldrb	r3, [r5, #9]
    a7d8:	strb	r3, [r4, #17]
    a7dc:	mov	r0, r7
    a7e0:	b	a780 <sas7bdat_parse_subheader_pointer+0x68>

0000a7e4 <sas7bdat_realloc_col_info>:
    a7e4:	strd	r4, [sp, #-16]!
    a7e8:	str	r6, [sp, #8]
    a7ec:	str	lr, [sp, #12]
    a7f0:	ldr	r6, [r0, #188]	; 0xbc
    a7f4:	cmp	r6, r1
    a7f8:	movcs	r0, #0
    a7fc:	bcc	a810 <sas7bdat_realloc_col_info+0x2c>
    a800:	ldrd	r4, [sp]
    a804:	ldr	r6, [sp, #8]
    a808:	add	sp, sp, #12
    a80c:	pop	{pc}		; (ldr pc, [sp], #4)
    a810:	mov	r4, r1
    a814:	mov	r5, r0
    a818:	str	r1, [r5, #188]	; 0xbc
    a81c:	add	r1, r1, r1, lsl #2
    a820:	lsl	r1, r1, #3
    a824:	ldr	r0, [r0, #192]	; 0xc0
    a828:	bl	42e0 <readstat_realloc@plt>
    a82c:	str	r0, [r5, #192]	; 0xc0
    a830:	cmp	r0, #0
    a834:	moveq	r0, #3
    a838:	beq	a800 <sas7bdat_realloc_col_info+0x1c>
    a83c:	sub	r1, r4, r6
    a840:	add	r1, r1, r1, lsl #2
    a844:	add	r6, r6, r6, lsl #2
    a848:	lsl	r2, r1, #3
    a84c:	mov	r1, #0
    a850:	add	r0, r0, r6, lsl #3
    a854:	bl	42a4 <memset@plt>
    a858:	mov	r0, #0
    a85c:	b	a800 <sas7bdat_realloc_col_info+0x1c>

0000a860 <sas7bdat_parse_subheader>:
    a860:	strd	r4, [sp, #-36]!	; 0xffffffdc
    a864:	strd	r6, [sp, #8]
    a868:	strd	r8, [sp, #16]
    a86c:	strd	sl, [sp, #24]
    a870:	str	lr, [sp, #32]
    a874:	sub	sp, sp, #12
    a878:	ldr	sl, [r3, #136]	; 0x88
    a87c:	ldr	ip, [r3, #140]	; 0x8c
    a880:	mov	r6, r2
    a884:	mov	r7, #0
    a888:	adds	r4, sl, #2
    a88c:	adc	r5, ip, #0
    a890:	cmp	r7, r5
    a894:	cmpeq	r2, r4
    a898:	movcc	r6, #5
    a89c:	bcc	a91c <sas7bdat_parse_subheader+0xbc>
    a8a0:	mov	r4, r3
    a8a4:	mov	r6, r2
    a8a8:	mov	r5, r1
    a8ac:	movw	r3, #63479	; 0xf7f7
    a8b0:	movt	r3, #63479	; 0xf7f7
    a8b4:	cmp	r0, r3
    a8b8:	beq	a93c <sas7bdat_parse_subheader+0xdc>
    a8bc:	movw	r3, #63222	; 0xf6f6
    a8c0:	movt	r3, #63222	; 0xf6f6
    a8c4:	cmp	r0, r3
    a8c8:	beq	a99c <sas7bdat_parse_subheader+0x13c>
    a8cc:	cmn	r0, #1024	; 0x400
    a8d0:	moveq	r6, #0
    a8d4:	beq	a91c <sas7bdat_parse_subheader+0xbc>
    a8d8:	cmn	r0, #3
    a8dc:	beq	a9e4 <sas7bdat_parse_subheader+0x184>
    a8e0:	cmn	r0, #1
    a8e4:	beq	aadc <sas7bdat_parse_subheader+0x27c>
    a8e8:	cmn	r0, #4
    a8ec:	beq	ab9c <sas7bdat_parse_subheader+0x33c>
    a8f0:	movw	r3, #64510	; 0xfbfe
    a8f4:	movt	r3, #65535	; 0xffff
    a8f8:	cmp	r0, r3
    a8fc:	beq	ad08 <sas7bdat_parse_subheader+0x4a8>
    a900:	cmn	r0, #2
    a904:	moveq	r6, #0
    a908:	beq	a91c <sas7bdat_parse_subheader+0xbc>
    a90c:	bic	r0, r0, #7
    a910:	cmn	r0, #8
    a914:	moveq	r6, #0
    a918:	movne	r6, #5
    a91c:	mov	r0, r6
    a920:	add	sp, sp, #12
    a924:	ldrd	r4, [sp]
    a928:	ldrd	r6, [sp, #8]
    a92c:	ldrd	r8, [sp, #16]
    a930:	ldrd	sl, [sp, #24]
    a934:	add	sp, sp, #32
    a938:	pop	{pc}		; (ldr pc, [sp], #4)
    a93c:	ldr	r3, [r4, #44]	; 0x2c
    a940:	cmp	r3, #0
    a944:	bne	adf4 <sas7bdat_parse_subheader+0x594>
    a948:	cmp	r2, #63	; 0x3f
    a94c:	bls	addc <sas7bdat_parse_subheader+0x57c>
    a950:	ldr	r1, [r4, #60]	; 0x3c
    a954:	add	r0, r5, #20
    a958:	bl	43f4 <sas_read4@plt>
    a95c:	mov	sl, r0
    a960:	ldr	r1, [r4, #60]	; 0x3c
    a964:	add	r0, r5, #24
    a968:	bl	43f4 <sas_read4@plt>
    a96c:	mov	r6, r0
    a970:	mov	r7, #0
    a974:	ldr	r1, [r4, #60]	; 0x3c
    a978:	add	r0, r5, #60	; 0x3c
    a97c:	bl	43f4 <sas_read4@plt>
    a980:	mov	r5, r0
    a984:	b	ae30 <sas7bdat_parse_subheader+0x5d0>
    a988:	str	r6, [r4, #88]	; 0x58
    a98c:	mov	r8, #0
    a990:	str	r8, [r4, #84]	; 0x54
    a994:	mov	r6, #0
    a998:	b	a91c <sas7bdat_parse_subheader+0xbc>
    a99c:	ldr	r3, [r4, #80]	; 0x50
    a9a0:	cmp	r3, #0
    a9a4:	movne	r6, #5
    a9a8:	bne	a91c <sas7bdat_parse_subheader+0xbc>
    a9ac:	ldr	r3, [r4, #64]	; 0x40
    a9b0:	cmp	r3, #0
    a9b4:	movne	r6, #5
    a9b8:	bne	a91c <sas7bdat_parse_subheader+0xbc>
    a9bc:	ldr	r3, [r4, #44]	; 0x2c
    a9c0:	cmp	r3, #0
    a9c4:	bne	ae90 <sas7bdat_parse_subheader+0x630>
    a9c8:	cmp	r6, #7
    a9cc:	bls	adec <sas7bdat_parse_subheader+0x58c>
    a9d0:	ldr	r1, [r4, #60]	; 0x3c
    a9d4:	add	r0, r5, #4
    a9d8:	bl	43f4 <sas_read4@plt>
    a9dc:	mov	r1, r0
    a9e0:	b	aea8 <sas7bdat_parse_subheader+0x648>
    a9e4:	add	r5, r1, sl
    a9e8:	ldr	r1, [r4, #60]	; 0x3c
    a9ec:	mov	r0, r5
    a9f0:	bl	43d0 <sas_read2@plt>
    a9f4:	mov	r7, r0
    a9f8:	mov	r1, sl
    a9fc:	mov	r0, r6
    aa00:	bl	43b8 <sas_subheader_remainder@plt>
    aa04:	cmp	r7, r0
    aa08:	movne	r6, #5
    aa0c:	bne	a91c <sas7bdat_parse_subheader+0xbc>
    aa10:	ldr	r1, [r4, #152]	; 0x98
    aa14:	add	r1, r1, #1
    aa18:	str	r1, [r4, #152]	; 0x98
    aa1c:	lsl	r1, r1, #2
    aa20:	ldr	r0, [r4, #160]	; 0xa0
    aa24:	bl	42e0 <readstat_realloc@plt>
    aa28:	str	r0, [r4, #160]	; 0xa0
    aa2c:	ldr	r1, [r4, #152]	; 0x98
    aa30:	lsl	r1, r1, #2
    aa34:	ldr	r0, [r4, #156]	; 0x9c
    aa38:	bl	42e0 <readstat_realloc@plt>
    aa3c:	str	r0, [r4, #156]	; 0x9c
    aa40:	ldr	r3, [r4, #160]	; 0xa0
    aa44:	cmp	r0, #0
    aa48:	cmpne	r3, #0
    aa4c:	moveq	r6, #3
    aa50:	beq	a91c <sas7bdat_parse_subheader+0xbc>
    aa54:	sub	sl, r6, sl
    aa58:	mov	r0, sl
    aa5c:	bl	422c <readstat_malloc@plt>
    aa60:	subs	r6, r0, #0
    aa64:	moveq	r6, #3
    aa68:	beq	a91c <sas7bdat_parse_subheader+0xbc>
    aa6c:	mov	r2, sl
    aa70:	mov	r1, r5
    aa74:	mov	r0, r6
    aa78:	bl	3f14 <memcpy@plt>
    aa7c:	ldr	r3, [r4, #152]	; 0x98
    aa80:	sub	r3, r3, #-1073741823	; 0xc0000001
    aa84:	ldr	r2, [r4, #156]	; 0x9c
    aa88:	str	sl, [r2, r3, lsl #2]
    aa8c:	ldr	r3, [r4, #152]	; 0x98
    aa90:	sub	r3, r3, #-1073741823	; 0xc0000001
    aa94:	ldr	r2, [r4, #160]	; 0xa0
    aa98:	str	r6, [r2, r3, lsl #2]
    aa9c:	cmp	sl, #20
    aaa0:	movls	r6, #0
    aaa4:	bls	a91c <sas7bdat_parse_subheader+0xbc>
    aaa8:	mov	r2, #8
    aaac:	ldr	r1, [pc, #1032]	; aebc <sas7bdat_parse_subheader+0x65c>
    aab0:	add	r1, pc, r1
    aab4:	add	r0, r6, #12
    aab8:	bl	44fc <strncmp@plt>
    aabc:	cmp	r0, #0
    aac0:	movne	r6, #0
    aac4:	bne	a91c <sas7bdat_parse_subheader+0xbc>
    aac8:	ldrb	r3, [r4, #2529]	; 0x9e1
    aacc:	orr	r3, r3, #1
    aad0:	strb	r3, [r4, #2529]	; 0x9e1
    aad4:	mov	r6, #0
    aad8:	b	a91c <sas7bdat_parse_subheader+0xbc>
    aadc:	ldr	r3, [r4, #44]	; 0x2c
    aae0:	cmp	r3, #0
    aae4:	subne	r7, r6, #28
    aae8:	subeq	r7, r6, #20
    aaec:	lsr	r7, r7, #3
    aaf0:	ldr	r1, [r4, #60]	; 0x3c
    aaf4:	add	r0, r5, sl
    aaf8:	bl	43d0 <sas_read2@plt>
    aafc:	mov	r8, r0
    ab00:	mov	r1, sl
    ab04:	mov	r0, r6
    ab08:	bl	43b8 <sas_subheader_remainder@plt>
    ab0c:	cmp	r8, r0
    ab10:	movne	r6, #5
    ab14:	bne	a91c <sas7bdat_parse_subheader+0xbc>
    ab18:	ldr	r1, [r4, #164]	; 0xa4
    ab1c:	add	r1, r7, r1
    ab20:	str	r1, [r4, #164]	; 0xa4
    ab24:	mov	r0, r4
    ab28:	bl	a7e4 <sas7bdat_realloc_col_info>
    ab2c:	subs	r6, r0, #0
    ab30:	bne	a91c <sas7bdat_parse_subheader+0xbc>
    ab34:	ldr	r3, [r4, #164]	; 0xa4
    ab38:	sub	r7, r3, r7
    ab3c:	cmp	r3, r7
    ab40:	ble	a91c <sas7bdat_parse_subheader+0xbc>
    ab44:	add	r8, sl, #8
    ab48:	add	r8, r5, r8
    ab4c:	add	r5, r7, r7, lsl #2
    ab50:	lsl	r5, r5, #3
    ab54:	mov	r9, sp
    ab58:	ldr	sl, [r4, #192]	; 0xc0
    ab5c:	mov	r2, r4
    ab60:	mov	r1, r8
    ab64:	mov	r0, r9
    ab68:	bl	a6ac <sas7bdat_parse_text_ref>
    ab6c:	add	r3, sl, r5
    ab70:	ldr	r2, [r9]
    ab74:	str	r2, [sl, r5]
    ab78:	ldrh	r2, [r9, #4]
    ab7c:	strh	r2, [r3, #4]
    ab80:	add	r8, r8, #8
    ab84:	add	r7, r7, #1
    ab88:	add	r5, r5, #40	; 0x28
    ab8c:	ldr	r3, [r4, #164]	; 0xa4
    ab90:	cmp	r7, r3
    ab94:	blt	ab58 <sas7bdat_parse_subheader+0x2f8>
    ab98:	b	a91c <sas7bdat_parse_subheader+0xbc>
    ab9c:	ldr	r3, [r4, #44]	; 0x2c
    aba0:	cmp	r3, #0
    aba4:	subne	r7, r6, #28
    aba8:	lsrne	r7, r7, #4
    abac:	bne	abc4 <sas7bdat_parse_subheader+0x364>
    abb0:	sub	r7, r6, #20
    abb4:	movw	r3, #43691	; 0xaaab
    abb8:	movt	r3, #43690	; 0xaaaa
    abbc:	umull	r3, r7, r3, r7
    abc0:	lsr	r7, r7, #3
    abc4:	ldr	r1, [r4, #60]	; 0x3c
    abc8:	add	r0, r5, sl
    abcc:	bl	43d0 <sas_read2@plt>
    abd0:	mov	r8, r0
    abd4:	mov	r1, sl
    abd8:	mov	r0, r6
    abdc:	bl	43b8 <sas_subheader_remainder@plt>
    abe0:	cmp	r8, r0
    abe4:	movne	r6, #5
    abe8:	bne	a91c <sas7bdat_parse_subheader+0xbc>
    abec:	ldr	r1, [r4, #168]	; 0xa8
    abf0:	add	r1, r7, r1
    abf4:	str	r1, [r4, #168]	; 0xa8
    abf8:	mov	r0, r4
    abfc:	bl	a7e4 <sas7bdat_realloc_col_info>
    ac00:	subs	r6, r0, #0
    ac04:	bne	a91c <sas7bdat_parse_subheader+0xbc>
    ac08:	ldr	r3, [r4, #168]	; 0xa8
    ac0c:	sub	r7, r3, r7
    ac10:	cmp	r3, r7
    ac14:	ble	a91c <sas7bdat_parse_subheader+0xbc>
    ac18:	add	sl, sl, #8
    ac1c:	add	r5, r5, sl
    ac20:	mov	fp, #0
    ac24:	b	acdc <sas7bdat_parse_subheader+0x47c>
    ac28:	ldr	r1, [r4, #60]	; 0x3c
    ac2c:	mov	r0, r5
    ac30:	bl	43f4 <sas_read4@plt>
    ac34:	ldr	r3, [r4, #192]	; 0xc0
    ac38:	add	r2, r7, r7, lsl #2
    ac3c:	add	r3, r3, r2, lsl #3
    ac40:	str	r0, [r3, #24]
    ac44:	str	fp, [r3, #28]
    ac48:	ldr	r3, [r4, #44]	; 0x2c
    ac4c:	cmp	r3, #0
    ac50:	moveq	r0, #4
    ac54:	movne	r0, #8
    ac58:	mov	r9, r0
    ac5c:	add	r8, r7, r7, lsl #2
    ac60:	lsl	r8, r8, #3
    ac64:	ldr	sl, [r4, #192]	; 0xc0
    ac68:	add	sl, sl, r8
    ac6c:	ldr	r1, [r4, #60]	; 0x3c
    ac70:	add	r0, r5, r0
    ac74:	bl	43f4 <sas_read4@plt>
    ac78:	str	r0, [sl, #32]
    ac7c:	ldr	r3, [r4, #192]	; 0xc0
    ac80:	add	r3, r3, r8
    ac84:	ldr	r2, [r3, #32]
    ac88:	ldr	r1, [r4, #176]	; 0xb0
    ac8c:	cmp	r2, r1
    ac90:	strhi	r2, [r4, #176]	; 0xb0
    ac94:	add	r2, r5, r9
    ac98:	ldrb	r2, [r2, #6]
    ac9c:	cmp	r2, #1
    aca0:	moveq	r2, #5
    aca4:	streq	r2, [r3, #36]	; 0x24
    aca8:	beq	acb8 <sas7bdat_parse_subheader+0x458>
    acac:	cmp	r2, #2
    acb0:	bne	adcc <sas7bdat_parse_subheader+0x56c>
    acb4:	str	fp, [r3, #36]	; 0x24
    acb8:	ldr	r3, [r4, #192]	; 0xc0
    acbc:	add	r8, r3, r8
    acc0:	str	r7, [r8, #20]
    acc4:	add	r9, r9, #8
    acc8:	add	r5, r5, r9
    accc:	add	r7, r7, #1
    acd0:	ldr	r3, [r4, #168]	; 0xa8
    acd4:	cmp	r7, r3
    acd8:	bge	a91c <sas7bdat_parse_subheader+0xbc>
    acdc:	ldr	r3, [r4, #44]	; 0x2c
    ace0:	cmp	r3, #0
    ace4:	beq	ac28 <sas7bdat_parse_subheader+0x3c8>
    ace8:	add	r8, r7, r7, lsl #2
    acec:	ldr	r3, [r4, #192]	; 0xc0
    acf0:	add	r8, r3, r8, lsl #3
    acf4:	ldr	r1, [r4, #60]	; 0x3c
    acf8:	mov	r0, r5
    acfc:	bl	43c4 <sas_read8@plt>
    ad00:	strd	r0, [r8, #24]
    ad04:	b	ac48 <sas7bdat_parse_subheader+0x3e8>
    ad08:	ldr	r3, [r4, #44]	; 0x2c
    ad0c:	cmp	r3, #0
    ad10:	movne	r3, #58	; 0x3a
    ad14:	moveq	r3, #46	; 0x2e
    ad18:	cmp	r6, r3
    ad1c:	movcc	r6, #5
    ad20:	bcc	a91c <sas7bdat_parse_subheader+0xbc>
    ad24:	ldr	r1, [r4, #172]	; 0xac
    ad28:	add	r1, r1, #1
    ad2c:	str	r1, [r4, #172]	; 0xac
    ad30:	mov	r0, r4
    ad34:	bl	a7e4 <sas7bdat_realloc_col_info>
    ad38:	subs	r6, r0, #0
    ad3c:	bne	a91c <sas7bdat_parse_subheader+0xbc>
    ad40:	ldr	r3, [r4, #44]	; 0x2c
    ad44:	cmp	r3, #0
    ad48:	addne	r1, r5, #46	; 0x2e
    ad4c:	addeq	r1, r5, #34	; 0x22
    ad50:	ldr	r3, [r4, #172]	; 0xac
    ad54:	ldr	r8, [r4, #192]	; 0xc0
    ad58:	add	r3, r3, r3, lsl #2
    ad5c:	add	r8, r8, r3, lsl #3
    ad60:	mov	r2, r4
    ad64:	mov	r7, sp
    ad68:	mov	r0, r7
    ad6c:	bl	a6ac <sas7bdat_parse_text_ref>
    ad70:	ldr	r3, [r7]
    ad74:	str	r3, [r8, #-34]	; 0xffffffde
    ad78:	ldrh	r3, [r7, #4]
    ad7c:	strh	r3, [r8, #-30]	; 0xffffffe2
    ad80:	ldr	r3, [r4, #44]	; 0x2c
    ad84:	cmp	r3, #0
    ad88:	addne	r1, r5, #52	; 0x34
    ad8c:	addeq	r1, r5, #40	; 0x28
    ad90:	ldr	r3, [r4, #172]	; 0xac
    ad94:	ldr	r7, [r4, #192]	; 0xc0
    ad98:	add	r3, r3, r3, lsl #2
    ad9c:	add	r7, r7, r3, lsl #3
    ada0:	mov	r2, r4
    ada4:	mov	r4, sp
    ada8:	mov	r0, r4
    adac:	bl	a6ac <sas7bdat_parse_text_ref>
    adb0:	ldr	r3, [r4]
    adb4:	str	r3, [r7, #-28]	; 0xffffffe4
    adb8:	ldrh	r3, [r4, #4]
    adbc:	strh	r3, [r7, #-24]	; 0xffffffe8
    adc0:	b	a91c <sas7bdat_parse_subheader+0xbc>
    adc4:	mov	r6, #3
    adc8:	b	a91c <sas7bdat_parse_subheader+0xbc>
    adcc:	mov	r6, #5
    add0:	b	a91c <sas7bdat_parse_subheader+0xbc>
    add4:	mov	r6, #5
    add8:	b	a91c <sas7bdat_parse_subheader+0xbc>
    addc:	mov	r6, #5
    ade0:	b	a91c <sas7bdat_parse_subheader+0xbc>
    ade4:	mov	r6, #5
    ade8:	b	a91c <sas7bdat_parse_subheader+0xbc>
    adec:	mov	r6, #5
    adf0:	b	a91c <sas7bdat_parse_subheader+0xbc>
    adf4:	cmp	r2, #127	; 0x7f
    adf8:	bls	add4 <sas7bdat_parse_subheader+0x574>
    adfc:	ldr	r1, [r4, #60]	; 0x3c
    ae00:	add	r0, r5, #40	; 0x28
    ae04:	bl	43c4 <sas_read8@plt>
    ae08:	mov	sl, r0
    ae0c:	ldr	r1, [r4, #60]	; 0x3c
    ae10:	add	r0, r5, #48	; 0x30
    ae14:	bl	43c4 <sas_read8@plt>
    ae18:	mov	r6, r0
    ae1c:	mov	r7, r1
    ae20:	ldr	r1, [r4, #60]	; 0x3c
    ae24:	add	r0, r5, #120	; 0x78
    ae28:	bl	43c4 <sas_read8@plt>
    ae2c:	mov	r5, r0
    ae30:	str	sl, [r4, #68]	; 0x44
    ae34:	mov	r1, sl
    ae38:	ldr	r0, [r4, #124]	; 0x7c
    ae3c:	bl	42e0 <readstat_realloc@plt>
    ae40:	str	r0, [r4, #124]	; 0x7c
    ae44:	cmp	r0, #0
    ae48:	beq	adc4 <sas7bdat_parse_subheader+0x564>
    ae4c:	str	r5, [r4, #72]	; 0x48
    ae50:	ldr	r2, [r4, #88]	; 0x58
    ae54:	mov	r3, #0
    ae58:	cmp	r3, r7
    ae5c:	cmpeq	r2, r6
    ae60:	bcs	a988 <sas7bdat_parse_subheader+0x128>
    ae64:	subs	r8, r6, r2
    ae68:	sbc	r9, r7, r3
    ae6c:	ldr	r2, [r4, #84]	; 0x54
    ae70:	cmp	r2, #0
    ae74:	beq	a990 <sas7bdat_parse_subheader+0x130>
    ae78:	mov	r3, #0
    ae7c:	cmp	r9, r3
    ae80:	cmpeq	r8, r2
    ae84:	movcs	r6, #0
    ae88:	bcs	a91c <sas7bdat_parse_subheader+0xbc>
    ae8c:	b	a990 <sas7bdat_parse_subheader+0x130>
    ae90:	cmp	r6, #15
    ae94:	bls	ade4 <sas7bdat_parse_subheader+0x584>
    ae98:	ldr	r1, [r4, #60]	; 0x3c
    ae9c:	add	r0, r5, #8
    aea0:	bl	43c4 <sas_read8@plt>
    aea4:	mov	r1, r0
    aea8:	str	r1, [r4, #80]	; 0x50
    aeac:	mov	r0, r4
    aeb0:	bl	a7e4 <sas7bdat_realloc_col_info>
    aeb4:	mov	r6, r0
    aeb8:	b	a91c <sas7bdat_parse_subheader+0xbc>
    aebc:	.word	0x0001bc38

0000aec0 <sas7bdat_parse_page_pass1>:
    aec0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    aec4:	strd	r6, [sp, #8]
    aec8:	strd	r8, [sp, #16]
    aecc:	strd	sl, [sp, #24]
    aed0:	str	lr, [sp, #32]
    aed4:	sub	sp, sp, #52	; 0x34
    aed8:	mov	r9, r0
    aedc:	mov	r4, r1
    aee0:	str	r1, [sp]
    aee4:	mov	r7, r2
    aee8:	ldr	r0, [r2, #128]	; 0x80
    aeec:	sub	r0, r0, #4
    aef0:	ldr	r1, [r2, #60]	; 0x3c
    aef4:	add	r0, r9, r0
    aef8:	bl	43d0 <sas_read2@plt>
    aefc:	str	r0, [sp, #20]
    af00:	ldrd	sl, [r7, #128]	; 0x80
    af04:	add	r5, r9, sl
    af08:	ldr	r2, [r7, #144]	; 0x90
    af0c:	str	r2, [sp, #16]
    af10:	str	r0, [sp, #12]
    af14:	mul	r1, r2, r0
    af18:	adds	r2, sl, r1
    af1c:	adc	r3, fp, r1, asr #31
    af20:	mov	r1, #0
    af24:	cmp	r3, r1
    af28:	cmpeq	r2, r4
    af2c:	bhi	b074 <sas7bdat_parse_page_pass1+0x1b4>
    af30:	ldr	r3, [sp, #20]
    af34:	cmp	r3, #0
    af38:	movle	r3, #0
    af3c:	strle	r3, [sp, #4]
    af40:	ble	b07c <sas7bdat_parse_page_pass1+0x1bc>
    af44:	mov	r6, #0
    af48:	add	r4, sp, #24
    af4c:	mov	sl, #0
    af50:	mov	fp, #0
    af54:	b	afa4 <sas7bdat_parse_page_pass1+0xe4>
    af58:	ldr	r1, [r7, #60]	; 0x3c
    af5c:	ldr	r0, [sp, #24]
    af60:	add	r0, r9, r0
    af64:	bl	43f4 <sas_read4@plt>
    af68:	ldr	r3, [r7, #40]	; 0x28
    af6c:	cmp	r3, #0
    af70:	bne	af84 <sas7bdat_parse_page_pass1+0xc4>
    af74:	ldr	r3, [sp, #8]
    af78:	cmp	r3, #8
    af7c:	cmneq	r0, #1
    af80:	beq	b030 <sas7bdat_parse_page_pass1+0x170>
    af84:	cmn	r0, #3
    af88:	beq	b048 <sas7bdat_parse_page_pass1+0x188>
    af8c:	ldr	r3, [sp, #16]
    af90:	add	r5, r5, r3
    af94:	add	r6, r6, #1
    af98:	ldr	r3, [sp, #12]
    af9c:	cmp	r3, r6
    afa0:	beq	b07c <sas7bdat_parse_page_pass1+0x1bc>
    afa4:	strd	sl, [r4]
    afa8:	strd	sl, [r4, #8]
    afac:	strd	sl, [r4, #16]
    afb0:	ldr	r3, [r7, #136]	; 0x88
    afb4:	str	r3, [sp, #8]
    afb8:	ldr	r3, [sp]
    afbc:	add	r1, r9, r3
    afc0:	mov	r3, r7
    afc4:	mov	r2, r4
    afc8:	sub	r1, r1, r5
    afcc:	mov	r0, r5
    afd0:	bl	a718 <sas7bdat_parse_subheader_pointer>
    afd4:	subs	r2, r0, #0
    afd8:	str	r2, [sp, #4]
    afdc:	bne	b07c <sas7bdat_parse_page_pass1+0x1bc>
    afe0:	ldrd	r2, [sp, #32]
    afe4:	orrs	r2, r2, r3
    afe8:	beq	af8c <sas7bdat_parse_page_pass1+0xcc>
    afec:	ldrb	r8, [sp, #40]	; 0x28
    aff0:	cmp	r8, #1
    aff4:	beq	af8c <sas7bdat_parse_page_pass1+0xcc>
    aff8:	mov	r3, r7
    affc:	ldr	r2, [sp, #20]
    b000:	ldr	r1, [sp]
    b004:	mov	r0, r4
    b008:	bl	a518 <sas7bdat_validate_subheader_pointer>
    b00c:	cmp	r0, #0
    b010:	bne	b06c <sas7bdat_parse_page_pass1+0x1ac>
    b014:	cmp	r8, #0
    b018:	beq	af58 <sas7bdat_parse_page_pass1+0x98>
    b01c:	cmp	r8, #4
    b020:	beq	af8c <sas7bdat_parse_page_pass1+0xcc>
    b024:	mov	r3, #6
    b028:	str	r3, [sp, #4]
    b02c:	b	b07c <sas7bdat_parse_page_pass1+0x1bc>
    b030:	ldr	r0, [sp, #24]
    b034:	add	r0, r0, #4
    b038:	ldr	r1, [r7, #60]	; 0x3c
    b03c:	add	r0, r9, r0
    b040:	bl	43f4 <sas_read4@plt>
    b044:	b	af84 <sas7bdat_parse_page_pass1+0xc4>
    b048:	mov	r3, r7
    b04c:	ldr	r2, [sp, #32]
    b050:	ldr	r1, [sp, #24]
    b054:	add	r1, r9, r1
    b058:	bl	a860 <sas7bdat_parse_subheader>
    b05c:	cmp	r0, #0
    b060:	beq	af8c <sas7bdat_parse_page_pass1+0xcc>
    b064:	str	r0, [sp, #4]
    b068:	b	b07c <sas7bdat_parse_page_pass1+0x1bc>
    b06c:	str	r0, [sp, #4]
    b070:	b	b07c <sas7bdat_parse_page_pass1+0x1bc>
    b074:	mov	r3, #5
    b078:	str	r3, [sp, #4]
    b07c:	ldr	r0, [sp, #4]
    b080:	add	sp, sp, #52	; 0x34
    b084:	ldrd	r4, [sp]
    b088:	ldrd	r6, [sp, #8]
    b08c:	ldrd	r8, [sp, #16]
    b090:	ldrd	sl, [sp, #24]
    b094:	add	sp, sp, #32
    b098:	pop	{pc}		; (ldr pc, [sp], #4)

0000b09c <sas7bdat_parse_single_row>:
    b09c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    b0a0:	strd	r6, [sp, #8]
    b0a4:	strd	r8, [sp, #16]
    b0a8:	strd	sl, [sp, #24]
    b0ac:	str	lr, [sp, #32]
    b0b0:	vpush	{d8-d9}
    b0b4:	sub	sp, sp, #60	; 0x3c
    b0b8:	ldr	r2, [r1, #76]	; 0x4c
    b0bc:	ldr	r3, [r1, #84]	; 0x54
    b0c0:	cmp	r2, r3
    b0c4:	moveq	fp, #0
    b0c8:	beq	b398 <sas7bdat_parse_single_row+0x2fc>
    b0cc:	ldr	fp, [r1, #88]	; 0x58
    b0d0:	cmp	fp, #0
    b0d4:	subne	fp, fp, #1
    b0d8:	strne	fp, [r1, #88]	; 0x58
    b0dc:	movne	fp, #0
    b0e0:	bne	b398 <sas7bdat_parse_single_row+0x2fc>
    b0e4:	mov	r4, r1
    b0e8:	mov	r5, r0
    b0ec:	ldr	r3, [r1, #16]
    b0f0:	cmp	r3, #0
    b0f4:	beq	b38c <sas7bdat_parse_single_row+0x2f0>
    b0f8:	ldr	r1, [r1, #176]	; 0xb0
    b0fc:	lsl	r1, r1, #2
    b100:	add	r1, r1, #1
    b104:	str	r1, [r4, #184]	; 0xb8
    b108:	ldr	r0, [r4, #180]	; 0xb4
    b10c:	bl	42e0 <readstat_realloc@plt>
    b110:	str	r0, [r4, #180]	; 0xb4
    b114:	cmp	r0, #0
    b118:	beq	b3bc <sas7bdat_parse_single_row+0x320>
    b11c:	ldr	r3, [r4, #80]	; 0x50
    b120:	cmp	r3, #0
    b124:	beq	b38c <sas7bdat_parse_single_row+0x2f0>
    b128:	mov	sl, fp
    b12c:	mov	r9, #0
    b130:	vldr	d8, [pc, #680]	; b3e0 <sas7bdat_parse_single_row+0x344>
    b134:	vldr	d9, [pc, #684]	; b3e8 <sas7bdat_parse_single_row+0x34c>
    b138:	str	fp, [sp, #28]
    b13c:	mov	fp, r5
    b140:	b	b1b4 <sas7bdat_parse_single_row+0x118>
    b144:	ldr	r3, [r4, #208]	; 0xd0
    b148:	str	r3, [sp]
    b14c:	mov	r3, ip
    b150:	mov	r2, r6
    b154:	ldr	r1, [r4, #184]	; 0xb8
    b158:	ldr	r0, [r4, #180]	; 0xb4
    b15c:	bl	4238 <readstat_convert@plt>
    b160:	cmp	r0, #0
    b164:	bne	b280 <sas7bdat_parse_single_row+0x1e4>
    b168:	ldr	r3, [r4, #180]	; 0xb4
    b16c:	str	r3, [sp, #40]	; 0x28
    b170:	ldr	r3, [r4, #52]	; 0x34
    b174:	str	r3, [sp, #8]
    b178:	ldrd	r2, [sp, #48]	; 0x30
    b17c:	strd	r2, [sp]
    b180:	add	r3, sp, #40	; 0x28
    b184:	ldm	r3, {r2, r3}
    b188:	ldr	r6, [r4, #16]
    b18c:	mov	r1, r5
    b190:	ldr	r0, [r4, #76]	; 0x4c
    b194:	blx	r6
    b198:	cmp	r0, #0
    b19c:	bne	b3d4 <sas7bdat_parse_single_row+0x338>
    b1a0:	add	r9, r9, #1
    b1a4:	add	sl, sl, #40	; 0x28
    b1a8:	ldr	r3, [r4, #80]	; 0x50
    b1ac:	cmp	r3, r9
    b1b0:	bls	b388 <sas7bdat_parse_single_row+0x2ec>
    b1b4:	ldr	r3, [r4, #196]	; 0xc4
    b1b8:	ldr	r5, [r3, r9, lsl #2]
    b1bc:	ldr	r3, [r5, #2144]	; 0x860
    b1c0:	cmp	r3, #0
    b1c4:	bne	b1a0 <sas7bdat_parse_single_row+0x104>
    b1c8:	ldr	r8, [r4, #192]	; 0xc0
    b1cc:	add	r8, r8, sl
    b1d0:	ldrd	r2, [r8, #24]
    b1d4:	ldr	r0, [r4, #68]	; 0x44
    b1d8:	mov	r1, #0
    b1dc:	cmp	r3, r1
    b1e0:	cmpeq	r2, r0
    b1e4:	bhi	b3c4 <sas7bdat_parse_single_row+0x328>
    b1e8:	ldr	ip, [r8, #32]
    b1ec:	adds	r6, r2, ip
    b1f0:	adc	r7, r3, #0
    b1f4:	cmp	r1, r7
    b1f8:	cmpeq	r0, r6
    b1fc:	bcc	b3cc <sas7bdat_parse_single_row+0x330>
    b200:	add	r6, fp, r2
    b204:	mov	r0, #0
    b208:	mov	r1, #0
    b20c:	strd	r0, [sp, #40]	; 0x28
    b210:	strd	r0, [sp, #48]	; 0x30
    b214:	ldr	r3, [r8, #36]	; 0x24
    b218:	str	r3, [sp, #48]	; 0x30
    b21c:	cmp	r3, #0
    b220:	beq	b144 <sas7bdat_parse_single_row+0xa8>
    b224:	cmp	r3, #5
    b228:	bne	b170 <sas7bdat_parse_single_row+0xd4>
    b22c:	vstr	d8, [sp, #32]
    b230:	ldr	r3, [r4, #40]	; 0x28
    b234:	cmp	r3, #0
    b238:	bne	b2e0 <sas7bdat_parse_single_row+0x244>
    b23c:	cmp	ip, #0
    b240:	vmoveq.f64	d7, d9
    b244:	beq	b35c <sas7bdat_parse_single_row+0x2c0>
    b248:	sub	r7, r6, #1
    b24c:	sub	r2, ip, #1
    b250:	add	r2, r6, r2
    b254:	mov	lr, #0
    b258:	mov	r1, lr
    b25c:	mov	r3, r9
    b260:	lsl	r1, r1, #8
    b264:	orr	r1, r1, lr, lsr #24
    b268:	ldrb	r8, [r7, #1]!
    b26c:	orr	lr, r8, lr, lsl #8
    b270:	cmp	r2, r7
    b274:	bne	b260 <sas7bdat_parse_single_row+0x1c4>
    b278:	mov	r9, r3
    b27c:	b	b318 <sas7bdat_parse_single_row+0x27c>
    b280:	mov	r7, r0
    b284:	ldr	r3, [r4, #24]
    b288:	cmp	r3, #0
    b28c:	beq	b3d8 <sas7bdat_parse_single_row+0x33c>
    b290:	add	r5, r4, #480	; 0x1e0
    b294:	add	r5, r5, #1
    b298:	ldr	r3, [r4, #76]	; 0x4c
    b29c:	str	r6, [sp, #8]
    b2a0:	ldr	r2, [r8, #32]
    b2a4:	str	r2, [sp, #4]
    b2a8:	ldr	r2, [r8, #20]
    b2ac:	add	r2, r2, #1
    b2b0:	str	r2, [sp]
    b2b4:	add	r3, r3, #1
    b2b8:	ldr	r2, [pc, #304]	; b3f0 <sas7bdat_parse_single_row+0x354>
    b2bc:	add	r2, pc, r2
    b2c0:	mov	r1, #2048	; 0x800
    b2c4:	mov	r0, r5
    b2c8:	bl	4280 <snprintf@plt>
    b2cc:	ldr	r3, [r4, #24]
    b2d0:	ldr	r1, [r4, #52]	; 0x34
    b2d4:	mov	r0, r5
    b2d8:	blx	r3
    b2dc:	b	b3d8 <sas7bdat_parse_single_row+0x33c>
    b2e0:	cmp	ip, #0
    b2e4:	beq	b380 <sas7bdat_parse_single_row+0x2e4>
    b2e8:	add	r7, r6, ip
    b2ec:	mov	r2, r6
    b2f0:	mov	lr, #0
    b2f4:	mov	r1, lr
    b2f8:	mov	r3, r9
    b2fc:	lsl	r1, r1, #8
    b300:	orr	r1, r1, lr, lsr #24
    b304:	ldrb	r8, [r7, #-1]!
    b308:	orr	lr, r8, lr, lsl #8
    b30c:	cmp	r7, r2
    b310:	bne	b2fc <sas7bdat_parse_single_row+0x260>
    b314:	mov	r9, r3
    b318:	lsl	ip, ip, #3
    b31c:	rsb	ip, ip, #0
    b320:	add	r3, ip, #64	; 0x40
    b324:	add	ip, ip, #32
    b328:	rsb	r2, r3, #32
    b32c:	lsl	r1, r1, r3
    b330:	orr	r1, r1, lr, lsl ip
    b334:	orr	r2, r1, lr, lsr r2
    b338:	str	r2, [sp, #20]
    b33c:	lsl	r3, lr, r3
    b340:	str	r3, [sp, #16]
    b344:	ldrd	r2, [sp, #16]
    b348:	strd	r2, [sp, #32]
    b34c:	vmov	d7, r2, r3
    b350:	vcmp.f64	d7, d7
    b354:	vmrs	APSR_nzcv, fpscr
    b358:	bvs	b364 <sas7bdat_parse_single_row+0x2c8>
    b35c:	vstr	d7, [sp, #40]	; 0x28
    b360:	b	b170 <sas7bdat_parse_single_row+0xd4>
    b364:	vstr	d8, [sp, #40]	; 0x28
    b368:	ldr	r3, [sp, #20]
    b36c:	mvn	r1, r3, lsr #8
    b370:	uxtb	r1, r1
    b374:	add	r0, sp, #40	; 0x28
    b378:	bl	44a8 <sas_assign_tag@plt>
    b37c:	b	b170 <sas7bdat_parse_single_row+0xd4>
    b380:	vmov.f64	d7, d9
    b384:	b	b35c <sas7bdat_parse_single_row+0x2c0>
    b388:	ldr	fp, [sp, #28]
    b38c:	ldr	r3, [r4, #76]	; 0x4c
    b390:	add	r3, r3, #1
    b394:	str	r3, [r4, #76]	; 0x4c
    b398:	mov	r0, fp
    b39c:	add	sp, sp, #60	; 0x3c
    b3a0:	vpop	{d8-d9}
    b3a4:	ldrd	r4, [sp]
    b3a8:	ldrd	r6, [sp, #8]
    b3ac:	ldrd	r8, [sp, #16]
    b3b0:	ldrd	sl, [sp, #24]
    b3b4:	add	sp, sp, #32
    b3b8:	pop	{pc}		; (ldr pc, [sp], #4)
    b3bc:	mov	fp, #3
    b3c0:	b	b398 <sas7bdat_parse_single_row+0x2fc>
    b3c4:	mov	fp, #5
    b3c8:	b	b398 <sas7bdat_parse_single_row+0x2fc>
    b3cc:	mov	fp, #5
    b3d0:	b	b398 <sas7bdat_parse_single_row+0x2fc>
    b3d4:	mov	r7, #4
    b3d8:	mov	fp, r7
    b3dc:	b	b398 <sas7bdat_parse_single_row+0x2fc>
    b3e0:	.word	0x00000000
    b3e4:	.word	0x7ff80000
	...
    b3f0:	.word	0x0001b438

0000b3f4 <sas7bdat_submit_columns_if_needed>:
    b3f4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    b3f8:	strd	r6, [sp, #8]
    b3fc:	strd	r8, [sp, #16]
    b400:	strd	sl, [sp, #24]
    b404:	str	lr, [sp, #32]
    b408:	sub	sp, sp, #84	; 0x54
    b40c:	ldr	r5, [r0, #64]	; 0x40
    b410:	cmp	r5, #0
    b414:	movne	sl, #0
    b418:	beq	b43c <sas7bdat_submit_columns_if_needed+0x48>
    b41c:	mov	r0, sl
    b420:	add	sp, sp, #84	; 0x54
    b424:	ldrd	r4, [sp]
    b428:	ldrd	r6, [sp, #8]
    b42c:	ldrd	r8, [sp, #16]
    b430:	ldrd	sl, [sp, #24]
    b434:	add	sp, sp, #32
    b438:	pop	{pc}		; (ldr pc, [sp], #4)
    b43c:	mov	r4, r0
    b440:	ldr	r8, [r0]
    b444:	cmp	r8, #0
    b448:	beq	b500 <sas7bdat_submit_columns_if_needed+0x10c>
    b44c:	mov	r6, #0
    b450:	mov	r7, #0
    b454:	strd	r6, [sp, #56]	; 0x38
    b458:	strd	r6, [sp, #64]	; 0x40
    b45c:	strd	r6, [sp, #72]	; 0x48
    b460:	ldr	r2, [r0, #84]	; 0x54
    b464:	mov	r3, #0
    b468:	str	r2, [sp, #24]
    b46c:	str	r3, [sp, #28]
    b470:	ldr	r2, [r0, #80]	; 0x50
    b474:	str	r2, [sp, #32]
    b478:	str	r3, [sp, #36]	; 0x24
    b47c:	ldr	r3, [r0, #212]	; 0xd4
    b480:	str	r3, [sp, #40]	; 0x28
    b484:	ldr	r3, [r0, #216]	; 0xd8
    b488:	str	r3, [sp, #44]	; 0x2c
    b48c:	ldr	r2, [r0, #220]	; 0xdc
    b490:	asr	r3, r2, #31
    b494:	strd	r2, [sp, #48]	; 0x30
    b498:	ldr	r3, [r0, #40]	; 0x28
    b49c:	cmp	r3, #0
    b4a0:	movne	r3, #1
    b4a4:	moveq	r3, #2
    b4a8:	str	r3, [sp, #60]	; 0x3c
    b4ac:	add	r3, r0, #224	; 0xe0
    b4b0:	str	r3, [sp, #68]	; 0x44
    b4b4:	ldr	r3, [r0, #200]	; 0xc8
    b4b8:	str	r3, [sp, #72]	; 0x48
    b4bc:	ldrb	r3, [sp, #76]	; 0x4c
    b4c0:	ldr	r2, [r0, #44]	; 0x2c
    b4c4:	bfi	r3, r2, #0, #1
    b4c8:	strb	r3, [sp, #76]	; 0x4c
    b4cc:	cmp	r1, #0
    b4d0:	beq	b4e8 <sas7bdat_submit_columns_if_needed+0xf4>
    b4d4:	ldrb	r3, [r0, #2529]	; 0x9e1
    b4d8:	tst	r3, #1
    b4dc:	movne	r3, #2
    b4e0:	moveq	r3, #1
    b4e4:	str	r3, [sp, #56]	; 0x38
    b4e8:	ldr	r1, [r4, #52]	; 0x34
    b4ec:	add	r0, sp, #24
    b4f0:	blx	r8
    b4f4:	cmp	r0, #0
    b4f8:	movne	sl, #4
    b4fc:	bne	b41c <sas7bdat_submit_columns_if_needed+0x28>
    b500:	ldr	r0, [r4, #80]	; 0x50
    b504:	cmp	r0, #0
    b508:	bne	b51c <sas7bdat_submit_columns_if_needed+0x128>
    b50c:	mov	r3, #1
    b510:	str	r3, [r4, #64]	; 0x40
    b514:	mov	sl, #0
    b518:	b	b41c <sas7bdat_submit_columns_if_needed+0x28>
    b51c:	mov	r1, #4
    b520:	bl	3fbc <readstat_calloc@plt>
    b524:	str	r0, [r4, #196]	; 0xc4
    b528:	cmp	r0, #0
    b52c:	moveq	sl, #3
    b530:	beq	b41c <sas7bdat_submit_columns_if_needed+0x28>
    b534:	ldr	r3, [r4, #80]	; 0x50
    b538:	cmp	r3, #0
    b53c:	beq	b50c <sas7bdat_submit_columns_if_needed+0x118>
    b540:	mov	r9, r5
    b544:	mov	sl, #0
    b548:	add	r3, r4, #480	; 0x1e0
    b54c:	add	r3, r3, #1
    b550:	str	r3, [sp, #16]
    b554:	ldr	r3, [pc, #520]	; b764 <sas7bdat_submit_columns_if_needed+0x370>
    b558:	add	r3, pc, r3
    b55c:	str	r3, [sp, #20]
    b560:	b	b62c <sas7bdat_submit_columns_if_needed+0x238>
    b564:	ldr	r2, [r3, #32]
    b568:	sub	r2, r2, #3
    b56c:	cmp	r2, #5
    b570:	bls	b6a4 <sas7bdat_submit_columns_if_needed+0x2b0>
    b574:	mov	r0, r6
    b578:	bl	3eb4 <free@plt>
    b57c:	mov	sl, #5
    b580:	mov	r6, #0
    b584:	b	b5d8 <sas7bdat_submit_columns_if_needed+0x1e4>
    b588:	ldr	r3, [r4, #192]	; 0xc0
    b58c:	add	r3, r3, r7
    b590:	str	r4, [sp]
    b594:	ldr	r2, [r3, #6]
    b598:	ldrh	r3, [r3, #10]
    b59c:	mov	r1, #256	; 0x100
    b5a0:	add	r0, r6, #308	; 0x134
    b5a4:	bl	a628 <sas7bdat_copy_text_ref>
    b5a8:	cmp	r0, #0
    b5ac:	bne	b6c0 <sas7bdat_submit_columns_if_needed+0x2cc>
    b5b0:	ldr	r3, [r4, #192]	; 0xc0
    b5b4:	add	r7, r3, r7
    b5b8:	str	r4, [sp]
    b5bc:	add	r7, r7, #12
    b5c0:	ldm	r7, {r2, r3}
    b5c4:	mov	r1, #1024	; 0x400
    b5c8:	add	r0, r6, #564	; 0x234
    b5cc:	bl	a628 <sas7bdat_copy_text_ref>
    b5d0:	cmp	r0, #0
    b5d4:	bne	b6c8 <sas7bdat_submit_columns_if_needed+0x2d4>
    b5d8:	str	r6, [fp, r8]
    b5dc:	ldr	r3, [r4, #196]	; 0xc4
    b5e0:	ldr	r1, [r3, r8]
    b5e4:	cmp	r1, #0
    b5e8:	beq	b750 <sas7bdat_submit_columns_if_needed+0x35c>
    b5ec:	ldr	r6, [r4, #8]
    b5f0:	cmp	r6, #0
    b5f4:	beq	b618 <sas7bdat_submit_columns_if_needed+0x224>
    b5f8:	ldr	r3, [r4, #52]	; 0x34
    b5fc:	add	r2, r1, #308	; 0x134
    b600:	mov	r0, r5
    b604:	blx	r6
    b608:	cmp	r0, #1
    b60c:	beq	b75c <sas7bdat_submit_columns_if_needed+0x368>
    b610:	cmp	r0, #2
    b614:	beq	b73c <sas7bdat_submit_columns_if_needed+0x348>
    b618:	add	r9, r9, #1
    b61c:	add	r5, r5, #1
    b620:	ldr	r3, [r4, #80]	; 0x50
    b624:	cmp	r3, r5
    b628:	bls	b750 <sas7bdat_submit_columns_if_needed+0x35c>
    b62c:	lsl	r8, r5, #2
    b630:	ldr	fp, [r4, #196]	; 0xc4
    b634:	movw	r1, #2152	; 0x868
    b638:	mov	r0, #1
    b63c:	bl	3fbc <readstat_calloc@plt>
    b640:	mov	r6, r0
    b644:	str	r5, [r0, #4]
    b648:	str	r9, [r0, #2148]	; 0x864
    b64c:	add	r7, r8, r5
    b650:	lsl	r7, r7, #3
    b654:	ldr	r3, [r4, #192]	; 0xc0
    b658:	add	r3, r3, r7
    b65c:	ldr	r3, [r3, #36]	; 0x24
    b660:	str	r3, [r0]
    b664:	ldr	r3, [r4, #192]	; 0xc0
    b668:	add	r3, r3, r7
    b66c:	ldr	r3, [r3, #32]
    b670:	str	r3, [r0, #1596]	; 0x63c
    b674:	ldr	r3, [r4, #192]	; 0xc0
    b678:	add	r3, r3, r7
    b67c:	ldr	r2, [r3, #36]	; 0x24
    b680:	cmp	r2, #5
    b684:	beq	b564 <sas7bdat_submit_columns_if_needed+0x170>
    b688:	cmp	r2, #0
    b68c:	bne	b6a4 <sas7bdat_submit_columns_if_needed+0x2b0>
    b690:	ldr	r2, [r3, #32]
    b694:	sub	r2, r2, #1
    b698:	movw	r1, #32766	; 0x7ffe
    b69c:	cmp	r2, r1
    b6a0:	bhi	b574 <sas7bdat_submit_columns_if_needed+0x180>
    b6a4:	str	r4, [sp]
    b6a8:	ldm	r3, {r2, r3}
    b6ac:	mov	r1, #300	; 0x12c
    b6b0:	add	r0, r6, #8
    b6b4:	bl	a628 <sas7bdat_copy_text_ref>
    b6b8:	cmp	r0, #0
    b6bc:	beq	b588 <sas7bdat_submit_columns_if_needed+0x194>
    b6c0:	mov	sl, r0
    b6c4:	b	b6cc <sas7bdat_submit_columns_if_needed+0x2d8>
    b6c8:	mov	sl, r0
    b6cc:	mov	r0, r6
    b6d0:	bl	3eb4 <free@plt>
    b6d4:	cmp	sl, #17
    b6d8:	bne	b734 <sas7bdat_submit_columns_if_needed+0x340>
    b6dc:	ldr	r3, [r4, #24]
    b6e0:	cmp	r3, #0
    b6e4:	moveq	r6, #0
    b6e8:	beq	b5d8 <sas7bdat_submit_columns_if_needed+0x1e4>
    b6ec:	add	r3, r6, #564	; 0x234
    b6f0:	str	r3, [sp, #8]
    b6f4:	add	r3, r6, #308	; 0x134
    b6f8:	str	r3, [sp, #4]
    b6fc:	add	r6, r6, #8
    b700:	str	r6, [sp]
    b704:	mov	r3, r5
    b708:	ldr	r2, [sp, #20]
    b70c:	mov	r1, #2048	; 0x800
    b710:	ldr	r6, [sp, #16]
    b714:	mov	r0, r6
    b718:	bl	4280 <snprintf@plt>
    b71c:	ldr	r3, [r4, #24]
    b720:	ldr	r1, [r4, #52]	; 0x34
    b724:	mov	r0, r6
    b728:	blx	r3
    b72c:	mov	r6, #0
    b730:	b	b5d8 <sas7bdat_submit_columns_if_needed+0x1e4>
    b734:	mov	r6, #0
    b738:	b	b5d8 <sas7bdat_submit_columns_if_needed+0x1e4>
    b73c:	ldr	r3, [r4, #196]	; 0xc4
    b740:	ldr	r3, [r3, r8]
    b744:	mov	r2, #1
    b748:	str	r2, [r3, #2144]	; 0x860
    b74c:	b	b61c <sas7bdat_submit_columns_if_needed+0x228>
    b750:	cmp	sl, #0
    b754:	beq	b50c <sas7bdat_submit_columns_if_needed+0x118>
    b758:	b	b41c <sas7bdat_submit_columns_if_needed+0x28>
    b75c:	mov	sl, #4
    b760:	b	b41c <sas7bdat_submit_columns_if_needed+0x28>
    b764:	.word	0x0001b1ec

0000b768 <readstat_parse_sas7bdat>:
    b768:	strd	r4, [sp, #-36]!	; 0xffffffdc
    b76c:	strd	r6, [sp, #8]
    b770:	strd	r8, [sp, #16]
    b774:	strd	sl, [sp, #24]
    b778:	str	lr, [sp, #32]
    b77c:	sub	sp, sp, #148	; 0x94
    b780:	mov	r4, r0
    b784:	mov	r5, r1
    b788:	mov	r6, r2
    b78c:	str	r2, [sp, #56]	; 0x38
    b790:	ldr	r8, [r0, #32]
    b794:	movw	r1, #2536	; 0x9e8
    b798:	mov	r0, #1
    b79c:	bl	3d4c <calloc@plt>
    b7a0:	mov	sl, r0
    b7a4:	mov	r1, #152	; 0x98
    b7a8:	mov	r0, #1
    b7ac:	bl	3d4c <calloc@plt>
    b7b0:	mov	r9, r0
    b7b4:	ldrd	r2, [r4]
    b7b8:	strd	r2, [sl]
    b7bc:	ldrd	r2, [r4, #8]
    b7c0:	strd	r2, [sl, #8]
    b7c4:	ldrd	r2, [r4, #16]
    b7c8:	strd	r2, [sl, #16]
    b7cc:	ldrd	r2, [r4, #24]
    b7d0:	strd	r2, [sl, #24]
    b7d4:	ldr	r3, [r4, #36]	; 0x24
    b7d8:	str	r3, [sl, #200]	; 0xc8
    b7dc:	ldr	r3, [r4, #40]	; 0x28
    b7e0:	str	r3, [sl, #204]	; 0xcc
    b7e4:	str	r6, [sl, #52]	; 0x34
    b7e8:	str	r8, [sl, #56]	; 0x38
    b7ec:	ldr	r3, [r4, #44]	; 0x2c
    b7f0:	str	r3, [sl, #84]	; 0x54
    b7f4:	ldr	r3, [r4, #48]	; 0x30
    b7f8:	cmp	r3, #0
    b7fc:	strgt	r3, [sl, #88]	; 0x58
    b800:	ldr	r3, [r8]
    b804:	ldr	r1, [r8, #20]
    b808:	mov	r0, r5
    b80c:	blx	r3
    b810:	cmn	r0, #1
    b814:	beq	c9dc <readstat_parse_sas7bdat+0x1274>
    b818:	ldr	r3, [r8, #8]
    b81c:	ldr	r2, [r8, #20]
    b820:	mov	r1, #2
    b824:	mov	r0, #0
    b828:	blx	r3
    b82c:	asr	r1, r0, #31
    b830:	strd	r0, [sl, #32]
    b834:	mvn	r2, #0
    b838:	mvn	r3, #0
    b83c:	cmp	r1, r3
    b840:	cmpeq	r0, r2
    b844:	beq	b904 <readstat_parse_sas7bdat+0x19c>
    b848:	ldr	r3, [r8, #8]
    b84c:	ldr	r2, [r8, #20]
    b850:	mov	r1, #0
    b854:	mov	r0, r1
    b858:	blx	r3
    b85c:	cmn	r0, #1
    b860:	beq	b984 <readstat_parse_sas7bdat+0x21c>
    b864:	ldr	r3, [sp, #56]	; 0x38
    b868:	ldr	r2, [sl, #24]
    b86c:	mov	r1, r9
    b870:	mov	r0, r8
    b874:	bl	43a0 <sas_read_header@plt>
    b878:	subs	fp, r0, #0
    b87c:	beq	ba14 <readstat_parse_sas7bdat+0x2ac>
    b880:	ldr	r3, [r8, #4]
    b884:	ldr	r0, [r8, #20]
    b888:	blx	r3
    b88c:	sub	r3, fp, #1
    b890:	cmp	fp, #15
    b894:	cmpne	r3, #1
    b898:	bls	c9ec <readstat_parse_sas7bdat+0x1284>
    b89c:	ldr	r3, [sl, #160]	; 0xa0
    b8a0:	cmp	r3, #0
    b8a4:	beq	b8e4 <readstat_parse_sas7bdat+0x17c>
    b8a8:	ldr	r3, [sl, #152]	; 0x98
    b8ac:	cmp	r3, #0
    b8b0:	ble	b8d4 <readstat_parse_sas7bdat+0x16c>
    b8b4:	mov	r4, #0
    b8b8:	ldr	r3, [sl, #160]	; 0xa0
    b8bc:	ldr	r0, [r3, r4, lsl #2]
    b8c0:	bl	3eb4 <free@plt>
    b8c4:	add	r4, r4, #1
    b8c8:	ldr	r3, [sl, #152]	; 0x98
    b8cc:	cmp	r4, r3
    b8d0:	blt	b8b8 <readstat_parse_sas7bdat+0x150>
    b8d4:	ldr	r0, [sl, #160]	; 0xa0
    b8d8:	bl	3eb4 <free@plt>
    b8dc:	ldr	r0, [sl, #156]	; 0x9c
    b8e0:	bl	3eb4 <free@plt>
    b8e4:	ldr	r3, [sl, #196]	; 0xc4
    b8e8:	cmp	r3, #0
    b8ec:	beq	c938 <readstat_parse_sas7bdat+0x11d0>
    b8f0:	ldr	r3, [sl, #80]	; 0x50
    b8f4:	cmp	r3, #0
    b8f8:	beq	c930 <readstat_parse_sas7bdat+0x11c8>
    b8fc:	mov	r4, #0
    b900:	b	c8f0 <readstat_parse_sas7bdat+0x1188>
    b904:	ldr	r2, [sl, #24]
    b908:	cmp	r2, #0
    b90c:	moveq	fp, #15
    b910:	beq	c9e0 <readstat_parse_sas7bdat+0x1278>
    b914:	add	r0, sl, #480	; 0x1e0
    b918:	add	r0, r0, #1
    b91c:	ldr	r3, [pc, #4064]	; c904 <readstat_parse_sas7bdat+0x119c>
    b920:	add	r3, pc, r3
    b924:	ldr	ip, [r3]
    b928:	ldr	r1, [r3, #4]
    b92c:	str	ip, [sl, #481]	; 0x1e1
    b930:	str	r1, [r0, #4]
    b934:	ldr	ip, [r3, #8]
    b938:	ldr	r1, [r3, #12]
    b93c:	str	ip, [r0, #8]
    b940:	str	r1, [r0, #12]
    b944:	ldr	ip, [r3, #16]
    b948:	ldr	r1, [r3, #20]
    b94c:	str	ip, [r0, #16]
    b950:	str	r1, [r0, #20]
    b954:	ldr	ip, [r3, #24]
    b958:	ldr	r1, [r3, #28]
    b95c:	str	ip, [r0, #24]
    b960:	str	r1, [r0, #28]
    b964:	ldr	r1, [r3, #32]
    b968:	ldr	r3, [r3, #36]	; 0x24
    b96c:	str	r1, [r0, #32]
    b970:	str	r3, [r0, #36]	; 0x24
    b974:	ldr	r1, [sl, #52]	; 0x34
    b978:	blx	r2
    b97c:	mov	fp, #15
    b980:	b	c9e0 <readstat_parse_sas7bdat+0x1278>
    b984:	ldr	r2, [sl, #24]
    b988:	cmp	r2, #0
    b98c:	moveq	fp, #15
    b990:	beq	c9e0 <readstat_parse_sas7bdat+0x1278>
    b994:	add	r0, sl, #480	; 0x1e0
    b998:	add	r0, r0, #1
    b99c:	ldr	r3, [pc, #3940]	; c908 <readstat_parse_sas7bdat+0x11a0>
    b9a0:	add	r3, pc, r3
    b9a4:	ldr	ip, [r3]
    b9a8:	ldr	r1, [r3, #4]
    b9ac:	str	ip, [sl, #481]	; 0x1e1
    b9b0:	str	r1, [r0, #4]
    b9b4:	ldr	ip, [r3, #8]
    b9b8:	ldr	r1, [r3, #12]
    b9bc:	str	ip, [r0, #8]
    b9c0:	str	r1, [r0, #12]
    b9c4:	ldr	ip, [r3, #16]
    b9c8:	ldr	r1, [r3, #20]
    b9cc:	str	ip, [r0, #16]
    b9d0:	str	r1, [r0, #20]
    b9d4:	ldr	ip, [r3, #24]
    b9d8:	ldr	r1, [r3, #28]
    b9dc:	str	ip, [r0, #24]
    b9e0:	str	r1, [r0, #28]
    b9e4:	ldr	ip, [r3, #32]
    b9e8:	ldr	r1, [r3, #36]	; 0x24
    b9ec:	str	ip, [r0, #32]
    b9f0:	str	r1, [r0, #36]	; 0x24
    b9f4:	ldr	r1, [r3, #40]	; 0x28
    b9f8:	str	r1, [r0, #40]	; 0x28
    b9fc:	ldrh	r3, [r3, #44]	; 0x2c
    ba00:	strh	r3, [r0, #44]	; 0x2c
    ba04:	ldr	r1, [sl, #52]	; 0x34
    ba08:	blx	r2
    ba0c:	mov	fp, #15
    ba10:	b	c9e0 <readstat_parse_sas7bdat+0x1278>
    ba14:	ldr	r3, [r9, #4]
    ba18:	str	r3, [sl, #44]	; 0x2c
    ba1c:	ldr	r3, [r9]
    ba20:	str	r3, [sl, #40]	; 0x28
    ba24:	ldr	r3, [r9, #8]
    ba28:	str	r3, [sl, #48]	; 0x30
    ba2c:	bl	3ea8 <machine_is_little_endian@plt>
    ba30:	ldr	r3, [r9]
    ba34:	eor	r0, r0, r3
    ba38:	str	r0, [sl, #60]	; 0x3c
    ba3c:	ldrd	r2, [r9, #64]	; 0x40
    ba40:	strd	r2, [sl, #96]	; 0x60
    ba44:	ldrd	r2, [r9, #56]	; 0x38
    ba48:	strd	r2, [sl, #104]	; 0x68
    ba4c:	ldr	r0, [r9, #32]
    ba50:	ldr	r3, [r9, #36]	; 0x24
    ba54:	str	r0, [sl, #112]	; 0x70
    ba58:	str	r3, [sl, #116]	; 0x74
    ba5c:	ldrd	r2, [r9, #40]	; 0x28
    ba60:	strd	r2, [sl, #128]	; 0x80
    ba64:	ldrd	r2, [r9, #48]	; 0x30
    ba68:	strd	r2, [sl, #144]	; 0x90
    ba6c:	ldr	r3, [sl, #44]	; 0x2c
    ba70:	cmp	r3, #0
    ba74:	moveq	r2, #4
    ba78:	movne	r2, #8
    ba7c:	mov	r3, #0
    ba80:	strd	r2, [sl, #136]	; 0x88
    ba84:	ldr	r3, [r9, #72]	; 0x48
    ba88:	str	r3, [sl, #212]	; 0xd4
    ba8c:	ldr	r3, [r9, #76]	; 0x4c
    ba90:	str	r3, [sl, #216]	; 0xd8
    ba94:	ldr	r3, [r9, #12]
    ba98:	str	r3, [sl, #220]	; 0xdc
    ba9c:	ldr	r3, [sl, #200]	; 0xc8
    baa0:	cmp	r3, #0
    baa4:	ldreq	r3, [r9, #144]	; 0x90
    baa8:	streq	r3, [sl, #200]	; 0xc8
    baac:	bl	422c <readstat_malloc@plt>
    bab0:	str	r0, [sl, #120]	; 0x78
    bab4:	cmp	r0, #0
    bab8:	beq	c9c0 <readstat_parse_sas7bdat+0x1258>
    babc:	ldr	r4, [sl, #200]	; 0xc8
    bac0:	cmp	r4, #0
    bac4:	beq	bae8 <readstat_parse_sas7bdat+0x380>
    bac8:	ldr	r5, [sl, #204]	; 0xcc
    bacc:	cmp	r5, #0
    bad0:	beq	bae8 <readstat_parse_sas7bdat+0x380>
    bad4:	mov	r1, r5
    bad8:	mov	r0, r4
    badc:	bl	3df4 <strcmp@plt>
    bae0:	cmp	r0, #0
    bae4:	bne	bb34 <readstat_parse_sas7bdat+0x3cc>
    bae8:	ldr	r3, [sl, #208]	; 0xd0
    baec:	str	r3, [sp]
    baf0:	mov	r3, #64	; 0x40
    baf4:	add	r2, r9, #80	; 0x50
    baf8:	movw	r1, #257	; 0x101
    bafc:	add	r0, sl, #224	; 0xe0
    bb00:	bl	4238 <readstat_convert@plt>
    bb04:	subs	fp, r0, #0
    bb08:	bne	b880 <readstat_parse_sas7bdat+0x118>
    bb0c:	ldr	r7, [sl, #56]	; 0x38
    bb10:	ldrd	r2, [sl, #104]	; 0x68
    bb14:	strd	r2, [sp, #32]
    bb18:	orrs	r3, r2, r3
    bb1c:	beq	cb48 <readstat_parse_sas7bdat+0x13e0>
    bb20:	mov	r4, #0
    bb24:	mov	r5, #0
    bb28:	str	r9, [sp, #40]	; 0x28
    bb2c:	mov	r9, r8
    bb30:	b	bc00 <readstat_parse_sas7bdat+0x498>
    bb34:	mov	r1, r4
    bb38:	mov	r0, r5
    bb3c:	bl	4130 <iconv_open@plt>
    bb40:	cmn	r0, #1
    bb44:	beq	c9d4 <readstat_parse_sas7bdat+0x126c>
    bb48:	str	r0, [sl, #208]	; 0xd0
    bb4c:	b	bae8 <readstat_parse_sas7bdat+0x380>
    bb50:	mov	r8, r9
    bb54:	ldr	r9, [sp, #40]	; 0x28
    bb58:	ldr	r3, [sl, #24]
    bb5c:	cmp	r3, #0
    bb60:	moveq	fp, #15
    bb64:	beq	cae0 <readstat_parse_sas7bdat+0x1378>
    bb68:	add	r6, sl, #480	; 0x1e0
    bb6c:	add	r6, r6, #1
    bb70:	ldr	r3, [sl, #96]	; 0x60
    bb74:	ldr	r2, [sl, #100]	; 0x64
    bb78:	ldr	r0, [sl, #112]	; 0x70
    bb7c:	ldr	r1, [sl, #116]	; 0x74
    bb80:	str	r0, [sp, #24]
    bb84:	str	r1, [sp, #28]
    bb88:	strd	r4, [sp, #16]
    bb8c:	str	r3, [sp, #8]
    bb90:	str	r2, [sp, #12]
    bb94:	ldrd	r4, [sp, #32]
    bb98:	mul	ip, r0, r5
    bb9c:	mla	ip, r1, r4, ip
    bba0:	umull	r0, r1, r0, r4
    bba4:	add	r1, ip, r1
    bba8:	adds	r3, r0, r3
    bbac:	adc	r2, r1, r2
    bbb0:	str	r3, [sp]
    bbb4:	str	r2, [sp, #4]
    bbb8:	ldr	r2, [pc, #3404]	; c90c <readstat_parse_sas7bdat+0x11a4>
    bbbc:	add	r2, pc, r2
    bbc0:	mov	r1, #2048	; 0x800
    bbc4:	mov	r0, r6
    bbc8:	bl	4280 <snprintf@plt>
    bbcc:	ldr	r3, [sl, #24]
    bbd0:	ldr	r1, [sl, #52]	; 0x34
    bbd4:	mov	r0, r6
    bbd8:	blx	r3
    bbdc:	mov	fp, #15
    bbe0:	b	cae0 <readstat_parse_sas7bdat+0x1378>
    bbe4:	adds	r4, r4, #1
    bbe8:	adc	r5, r5, #0
    bbec:	strd	r4, [sp, #32]
    bbf0:	ldrd	r2, [sl, #104]	; 0x68
    bbf4:	cmp	r3, r5
    bbf8:	cmpeq	r2, r4
    bbfc:	bls	bd4c <readstat_parse_sas7bdat+0x5e4>
    bc00:	strd	r4, [sp, #32]
    bc04:	ldr	ip, [sl, #112]	; 0x70
    bc08:	ldr	r0, [sl, #96]	; 0x60
    bc0c:	ldr	r3, [r7, #8]
    bc10:	ldr	r2, [r7, #20]
    bc14:	mov	r1, #0
    bc18:	mla	r0, ip, r4, r0
    bc1c:	blx	r3
    bc20:	cmn	r0, #1
    bc24:	beq	bb50 <readstat_parse_sas7bdat+0x3e8>
    bc28:	ldr	r6, [sl, #44]	; 0x2c
    bc2c:	cmp	r6, #0
    bc30:	movne	r6, #16
    bc34:	add	fp, r6, #18
    bc38:	ldr	r8, [sl, #112]	; 0x70
    bc3c:	ldr	r3, [r7, #12]
    bc40:	ldr	r2, [r7, #20]
    bc44:	mov	r1, fp
    bc48:	ldr	r0, [sl, #120]	; 0x78
    bc4c:	blx	r3
    bc50:	cmp	fp, r0
    bc54:	bhi	cad4 <readstat_parse_sas7bdat+0x136c>
    bc58:	add	r6, r6, #16
    bc5c:	ldr	r0, [sl, #120]	; 0x78
    bc60:	ldr	r1, [sl, #60]	; 0x3c
    bc64:	add	r0, r0, r6
    bc68:	bl	43d0 <sas_read2@plt>
    bc6c:	and	r3, r0, #3840	; 0xf00
    bc70:	cmp	r3, #256	; 0x100
    bc74:	beq	bd4c <readstat_parse_sas7bdat+0x5e4>
    bc78:	tst	r0, #36864	; 0x9000
    bc7c:	bne	bbe4 <readstat_parse_sas7bdat+0x47c>
    bc80:	sub	r8, r8, fp
    bc84:	ldr	r0, [sl, #120]	; 0x78
    bc88:	ldr	r3, [r7, #12]
    bc8c:	ldr	r2, [r7, #20]
    bc90:	mov	r1, r8
    bc94:	add	r0, r0, fp
    bc98:	blx	r3
    bc9c:	cmp	r8, r0
    bca0:	bhi	caf0 <readstat_parse_sas7bdat+0x1388>
    bca4:	mov	r2, sl
    bca8:	ldr	r1, [sl, #112]	; 0x70
    bcac:	ldr	r0, [sl, #120]	; 0x78
    bcb0:	bl	aec0 <sas7bdat_parse_page_pass1>
    bcb4:	cmp	r0, #0
    bcb8:	beq	bbe4 <readstat_parse_sas7bdat+0x47c>
    bcbc:	mov	r8, r9
    bcc0:	ldr	r9, [sp, #40]	; 0x28
    bcc4:	mov	fp, r0
    bcc8:	ldr	r3, [sl, #24]
    bccc:	cmp	r3, #0
    bcd0:	cmpne	r0, #4
    bcd4:	beq	b880 <readstat_parse_sas7bdat+0x118>
    bcd8:	ldr	r3, [r7, #8]
    bcdc:	ldr	r2, [r7, #20]
    bce0:	mov	r1, #1
    bce4:	mov	r0, #0
    bce8:	blx	r3
    bcec:	add	r6, sl, #480	; 0x1e0
    bcf0:	add	r6, r6, #1
    bcf4:	asr	r1, r0, #31
    bcf8:	subs	r2, r0, #1
    bcfc:	sbc	r3, r1, #0
    bd00:	str	r2, [sp, #16]
    bd04:	str	r3, [sp, #20]
    bd08:	ldr	r3, [sl, #112]	; 0x70
    bd0c:	ldr	r2, [sl, #116]	; 0x74
    bd10:	subs	r3, r0, r3
    bd14:	sbc	r2, r1, r2
    bd18:	str	r3, [sp, #8]
    bd1c:	str	r2, [sp, #12]
    bd20:	strd	r4, [sp]
    bd24:	ldr	r2, [pc, #3044]	; c910 <readstat_parse_sas7bdat+0x11a8>
    bd28:	add	r2, pc, r2
    bd2c:	mov	r1, #2048	; 0x800
    bd30:	mov	r0, r6
    bd34:	bl	4280 <snprintf@plt>
    bd38:	ldr	r3, [sl, #24]
    bd3c:	ldr	r1, [sl, #52]	; 0x34
    bd40:	mov	r0, r6
    bd44:	blx	r3
    bd48:	b	b880 <readstat_parse_sas7bdat+0x118>
    bd4c:	mov	r8, r9
    bd50:	ldr	r9, [sp, #40]	; 0x28
    bd54:	ldr	r5, [sl, #56]	; 0x38
    bd58:	ldr	r3, [sl, #104]	; 0x68
    bd5c:	ldr	r2, [sl, #108]	; 0x6c
    bd60:	subs	r3, r3, #1
    bd64:	str	r3, [sp, #48]	; 0x30
    bd68:	sbc	r3, r2, #0
    bd6c:	str	r3, [sp, #52]	; 0x34
    bd70:	ldrd	r2, [sp, #48]	; 0x30
    bd74:	ldrd	r0, [sp, #32]
    bd78:	cmp	r3, r1
    bd7c:	cmpeq	r2, r0
    bd80:	bls	be4c <readstat_parse_sas7bdat+0x6e4>
    bd84:	mov	r2, #0
    bd88:	mov	r3, #0
    bd8c:	strd	r2, [sp, #40]	; 0x28
    bd90:	mov	fp, r8
    bd94:	str	r9, [sp, #60]	; 0x3c
    bd98:	ldrd	r8, [sp, #48]	; 0x30
    bd9c:	b	bf44 <readstat_parse_sas7bdat+0x7dc>
    bda0:	mov	r6, r8
    bda4:	mov	r7, r9
    bda8:	mov	r8, fp
    bdac:	ldr	r9, [sp, #60]	; 0x3c
    bdb0:	ldr	r3, [sl, #24]
    bdb4:	cmp	r3, #0
    bdb8:	moveq	fp, #15
    bdbc:	beq	cb0c <readstat_parse_sas7bdat+0x13a4>
    bdc0:	add	r4, sl, #480	; 0x1e0
    bdc4:	add	r4, r4, #1
    bdc8:	ldr	r1, [sl, #96]	; 0x60
    bdcc:	ldr	r0, [sl, #100]	; 0x64
    bdd0:	ldr	r2, [sl, #112]	; 0x70
    bdd4:	ldr	r3, [sl, #116]	; 0x74
    bdd8:	str	r2, [sp, #24]
    bddc:	str	r3, [sp, #28]
    bde0:	strd	r6, [sp, #16]
    bde4:	str	r1, [sp, #8]
    bde8:	str	r0, [sp, #12]
    bdec:	mul	ip, r2, r7
    bdf0:	mla	ip, r3, r6, ip
    bdf4:	umull	r2, r3, r2, r6
    bdf8:	add	r3, ip, r3
    bdfc:	adds	r1, r2, r1
    be00:	adc	r0, r3, r0
    be04:	str	r1, [sp]
    be08:	str	r0, [sp, #4]
    be0c:	ldr	r2, [pc, #2816]	; c914 <readstat_parse_sas7bdat+0x11ac>
    be10:	add	r2, pc, r2
    be14:	mov	r1, #2048	; 0x800
    be18:	mov	r0, r4
    be1c:	bl	4280 <snprintf@plt>
    be20:	ldr	r3, [sl, #24]
    be24:	ldr	r1, [sl, #52]	; 0x34
    be28:	mov	r0, r4
    be2c:	blx	r3
    be30:	mov	fp, #15
    be34:	b	cb0c <readstat_parse_sas7bdat+0x13a4>
    be38:	ldrd	r2, [sp, #40]	; 0x28
    be3c:	orrs	r3, r2, r3
    be40:	beq	bf2c <readstat_parse_sas7bdat+0x7c4>
    be44:	mov	r8, fp
    be48:	ldr	r9, [sp, #60]	; 0x3c
    be4c:	ldr	r3, [r8, #8]
    be50:	ldr	r2, [r8, #20]
    be54:	mov	r1, #0
    be58:	ldr	r0, [sl, #96]	; 0x60
    be5c:	blx	r3
    be60:	cmn	r0, #1
    be64:	beq	c024 <readstat_parse_sas7bdat+0x8bc>
    be68:	ldr	r3, [sl, #56]	; 0x38
    be6c:	str	r3, [sp, #76]	; 0x4c
    be70:	ldrd	r2, [sl, #104]	; 0x68
    be74:	orrs	r3, r2, r3
    be78:	beq	ca80 <readstat_parse_sas7bdat+0x1318>
    be7c:	mov	r2, #0
    be80:	mov	r3, #0
    be84:	strd	r2, [sp, #32]
    be88:	str	r8, [sp, #96]	; 0x60
    be8c:	str	r9, [sp, #100]	; 0x64
    be90:	b	c680 <readstat_parse_sas7bdat+0xf18>
    be94:	mov	r6, r8
    be98:	mov	r7, r9
    be9c:	mov	r8, fp
    bea0:	ldr	r9, [sp, #60]	; 0x3c
    bea4:	mov	fp, r0
    bea8:	ldr	r3, [sl, #24]
    beac:	cmp	r3, #0
    beb0:	cmpne	r0, #4
    beb4:	beq	b880 <readstat_parse_sas7bdat+0x118>
    beb8:	ldr	r3, [r5, #8]
    bebc:	ldr	r2, [r5, #20]
    bec0:	mov	r1, #1
    bec4:	mov	r0, #0
    bec8:	blx	r3
    becc:	add	r4, sl, #480	; 0x1e0
    bed0:	add	r4, r4, #1
    bed4:	asr	r1, r0, #31
    bed8:	subs	r2, r0, #1
    bedc:	sbc	r3, r1, #0
    bee0:	str	r2, [sp, #16]
    bee4:	str	r3, [sp, #20]
    bee8:	ldr	r3, [sl, #112]	; 0x70
    beec:	ldr	r2, [sl, #116]	; 0x74
    bef0:	subs	r3, r0, r3
    bef4:	sbc	r2, r1, r2
    bef8:	str	r3, [sp, #8]
    befc:	str	r2, [sp, #12]
    bf00:	strd	r6, [sp]
    bf04:	ldr	r2, [pc, #2572]	; c918 <readstat_parse_sas7bdat+0x11b0>
    bf08:	add	r2, pc, r2
    bf0c:	mov	r1, #2048	; 0x800
    bf10:	mov	r0, r4
    bf14:	bl	4280 <snprintf@plt>
    bf18:	ldr	r3, [sl, #24]
    bf1c:	ldr	r1, [sl, #52]	; 0x34
    bf20:	mov	r0, r4
    bf24:	blx	r3
    bf28:	b	b880 <readstat_parse_sas7bdat+0x118>
    bf2c:	subs	r8, r8, #1
    bf30:	sbc	r9, r9, #0
    bf34:	ldrd	r2, [sp, #32]
    bf38:	cmp	r9, r3
    bf3c:	cmpeq	r8, r2
    bf40:	bls	c018 <readstat_parse_sas7bdat+0x8b0>
    bf44:	ldr	ip, [sl, #112]	; 0x70
    bf48:	ldr	r0, [sl, #96]	; 0x60
    bf4c:	ldr	r3, [r5, #8]
    bf50:	ldr	r2, [r5, #20]
    bf54:	mov	r1, #0
    bf58:	mla	r0, ip, r8, r0
    bf5c:	blx	r3
    bf60:	cmn	r0, #1
    bf64:	beq	bda0 <readstat_parse_sas7bdat+0x638>
    bf68:	ldr	r4, [sl, #44]	; 0x2c
    bf6c:	cmp	r4, #0
    bf70:	movne	r4, #16
    bf74:	add	r6, r4, #18
    bf78:	ldr	r7, [sl, #112]	; 0x70
    bf7c:	ldr	r3, [r5, #12]
    bf80:	ldr	r2, [r5, #20]
    bf84:	mov	r1, r6
    bf88:	ldr	r0, [sl, #120]	; 0x78
    bf8c:	blx	r3
    bf90:	cmp	r6, r0
    bf94:	bhi	cb00 <readstat_parse_sas7bdat+0x1398>
    bf98:	add	r4, r4, #16
    bf9c:	ldr	r0, [sl, #120]	; 0x78
    bfa0:	ldr	r1, [sl, #60]	; 0x3c
    bfa4:	add	r0, r0, r4
    bfa8:	bl	43d0 <sas_read2@plt>
    bfac:	and	r3, r0, #3840	; 0xf00
    bfb0:	cmp	r3, #256	; 0x100
    bfb4:	beq	be38 <readstat_parse_sas7bdat+0x6d0>
    bfb8:	tst	r0, #36864	; 0x9000
    bfbc:	bne	bf2c <readstat_parse_sas7bdat+0x7c4>
    bfc0:	sub	r7, r7, r6
    bfc4:	ldr	r0, [sl, #120]	; 0x78
    bfc8:	ldr	r3, [r5, #12]
    bfcc:	ldr	r2, [r5, #20]
    bfd0:	mov	r1, r7
    bfd4:	add	r0, r0, r6
    bfd8:	blx	r3
    bfdc:	cmp	r7, r0
    bfe0:	bhi	cb1c <readstat_parse_sas7bdat+0x13b4>
    bfe4:	mov	r2, sl
    bfe8:	ldr	r1, [sl, #112]	; 0x70
    bfec:	ldr	r0, [sl, #120]	; 0x78
    bff0:	bl	aec0 <sas7bdat_parse_page_pass1>
    bff4:	cmp	r0, #0
    bff8:	bne	be94 <readstat_parse_sas7bdat+0x72c>
    bffc:	ldr	r3, [sp, #40]	; 0x28
    c000:	adds	r3, r3, #1
    c004:	str	r3, [sp, #40]	; 0x28
    c008:	ldr	r3, [sp, #44]	; 0x2c
    c00c:	adc	r3, r3, #0
    c010:	str	r3, [sp, #44]	; 0x2c
    c014:	b	bf2c <readstat_parse_sas7bdat+0x7c4>
    c018:	mov	r8, fp
    c01c:	ldr	r9, [sp, #60]	; 0x3c
    c020:	b	be4c <readstat_parse_sas7bdat+0x6e4>
    c024:	ldr	r3, [sl, #24]
    c028:	cmp	r3, #0
    c02c:	moveq	fp, #15
    c030:	beq	c9e0 <readstat_parse_sas7bdat+0x1278>
    c034:	add	r4, sl, #480	; 0x1e0
    c038:	add	r4, r4, #1
    c03c:	ldrd	r2, [sl, #96]	; 0x60
    c040:	strd	r2, [sp]
    c044:	ldr	r2, [pc, #2256]	; c91c <readstat_parse_sas7bdat+0x11b4>
    c048:	add	r2, pc, r2
    c04c:	mov	r1, #2048	; 0x800
    c050:	mov	r0, r4
    c054:	bl	4280 <snprintf@plt>
    c058:	ldr	r3, [sl, #24]
    c05c:	ldr	r1, [sl, #52]	; 0x34
    c060:	mov	r0, r4
    c064:	blx	r3
    c068:	mov	fp, #15
    c06c:	b	c9e0 <readstat_parse_sas7bdat+0x1278>
    c070:	ldr	r0, [sl, #128]	; 0x80
    c074:	sub	r0, r0, #6
    c078:	ldr	r1, [sl, #60]	; 0x3c
    c07c:	add	r0, r6, r0
    c080:	bl	43d0 <sas_read2@plt>
    c084:	str	r0, [sl, #72]	; 0x48
    c088:	ldr	r3, [sl, #128]	; 0x80
    c08c:	add	r7, r6, r3
    c090:	cmp	r7, #0
    c094:	beq	c644 <readstat_parse_sas7bdat+0xedc>
    c098:	mov	r1, #0
    c09c:	mov	r0, sl
    c0a0:	bl	b3f4 <sas7bdat_submit_columns_if_needed>
    c0a4:	subs	fp, r0, #0
    c0a8:	bne	c870 <readstat_parse_sas7bdat+0x1108>
    c0ac:	ldr	r3, [sl, #16]
    c0b0:	cmp	r3, #0
    c0b4:	beq	c644 <readstat_parse_sas7bdat+0xedc>
    c0b8:	ldr	r3, [sp, #64]	; 0x40
    c0bc:	add	r4, r6, r3
    c0c0:	sub	r4, r4, r7
    c0c4:	ldr	r3, [sl, #72]	; 0x48
    c0c8:	cmp	r3, #0
    c0cc:	beq	c644 <readstat_parse_sas7bdat+0xedc>
    c0d0:	ldr	r2, [sl, #76]	; 0x4c
    c0d4:	ldr	r3, [sl, #84]	; 0x54
    c0d8:	cmp	r2, r3
    c0dc:	bcs	c644 <readstat_parse_sas7bdat+0xedc>
    c0e0:	ldr	r3, [sl, #68]	; 0x44
    c0e4:	cmp	r3, r4
    c0e8:	bhi	ca58 <readstat_parse_sas7bdat+0x12f0>
    c0ec:	mov	r5, #0
    c0f0:	mov	r1, sl
    c0f4:	add	r0, r7, fp
    c0f8:	bl	b09c <sas7bdat_parse_single_row>
    c0fc:	cmp	r0, #0
    c100:	bne	ca68 <readstat_parse_sas7bdat+0x1300>
    c104:	ldr	r3, [sl, #68]	; 0x44
    c108:	add	fp, fp, r3
    c10c:	add	r5, r5, #1
    c110:	ldr	r2, [sl, #72]	; 0x48
    c114:	cmp	r5, r2
    c118:	bcs	c644 <readstat_parse_sas7bdat+0xedc>
    c11c:	ldr	r1, [sl, #76]	; 0x4c
    c120:	ldr	r2, [sl, #84]	; 0x54
    c124:	cmp	r1, r2
    c128:	bcs	c644 <readstat_parse_sas7bdat+0xedc>
    c12c:	add	r3, r3, fp
    c130:	cmp	r4, r3
    c134:	bcs	c0f0 <readstat_parse_sas7bdat+0x988>
    c138:	ldr	r8, [sp, #96]	; 0x60
    c13c:	ldr	r9, [sp, #100]	; 0x64
    c140:	mov	fp, #10
    c144:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c148:	ldr	r8, [sp, #96]	; 0x60
    c14c:	ldr	r9, [sp, #100]	; 0x64
    c150:	mov	fp, #5
    c154:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c158:	ldr	r1, [sl, #60]	; 0x3c
    c15c:	ldr	r0, [sp, #120]	; 0x78
    c160:	add	r0, r6, r0
    c164:	bl	43f4 <sas_read4@plt>
    c168:	ldr	r3, [sl, #40]	; 0x28
    c16c:	cmp	r3, #0
    c170:	cmneq	r0, #1
    c174:	beq	c1d0 <readstat_parse_sas7bdat+0xa68>
    c178:	ldrb	r3, [sp, #137]	; 0x89
    c17c:	cmp	r3, #0
    c180:	beq	c1a0 <readstat_parse_sas7bdat+0xa38>
    c184:	movw	r2, #63479	; 0xf7f7
    c188:	movt	r2, #63479	; 0xf7f7
    c18c:	movw	r3, #63222	; 0xf6f6
    c190:	movt	r3, #63222	; 0xf6f6
    c194:	cmp	r0, r3
    c198:	cmpne	r0, r2
    c19c:	bne	c20c <readstat_parse_sas7bdat+0xaa4>
    c1a0:	cmn	r0, #3
    c1a4:	beq	c45c <readstat_parse_sas7bdat+0xcf4>
    c1a8:	mov	r3, sl
    c1ac:	ldr	r2, [sp, #128]	; 0x80
    c1b0:	ldr	r1, [sp, #120]	; 0x78
    c1b4:	add	r1, r6, r1
    c1b8:	bl	a860 <sas7bdat_parse_subheader>
    c1bc:	subs	fp, r0, #0
    c1c0:	beq	c45c <readstat_parse_sas7bdat+0xcf4>
    c1c4:	ldr	r8, [sp, #96]	; 0x60
    c1c8:	ldr	r9, [sp, #100]	; 0x64
    c1cc:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c1d0:	ldr	r3, [sl, #44]	; 0x2c
    c1d4:	cmp	r3, #0
    c1d8:	bne	c1f4 <readstat_parse_sas7bdat+0xa8c>
    c1dc:	ldrb	r3, [sp, #137]	; 0x89
    c1e0:	cmp	r3, #0
    c1e4:	mvneq	r0, #0
    c1e8:	beq	c1a8 <readstat_parse_sas7bdat+0xa40>
    c1ec:	mvn	r0, #0
    c1f0:	b	c21c <readstat_parse_sas7bdat+0xab4>
    c1f4:	ldr	r0, [sp, #120]	; 0x78
    c1f8:	add	r0, r0, #4
    c1fc:	ldr	r1, [sl, #60]	; 0x3c
    c200:	add	r0, r6, r0
    c204:	bl	43f4 <sas_read4@plt>
    c208:	b	c178 <readstat_parse_sas7bdat+0xa10>
    c20c:	add	r3, r0, #1024	; 0x400
    c210:	add	r3, r3, #2
    c214:	bics	r3, r3, #2
    c218:	beq	c1a0 <readstat_parse_sas7bdat+0xa38>
    c21c:	bic	r3, r0, #7
    c220:	cmn	r3, #8
    c224:	beq	c1a0 <readstat_parse_sas7bdat+0xa38>
    c228:	ldr	r0, [sl, #68]	; 0x44
    c22c:	mov	r1, #0
    c230:	ldrd	r2, [sp, #128]	; 0x80
    c234:	cmp	r3, r1
    c238:	cmpeq	r2, r0
    c23c:	bne	c618 <readstat_parse_sas7bdat+0xeb0>
    c240:	mov	r1, #1
    c244:	mov	r0, sl
    c248:	bl	b3f4 <sas7bdat_submit_columns_if_needed>
    c24c:	subs	fp, r0, #0
    c250:	bne	c84c <readstat_parse_sas7bdat+0x10e4>
    c254:	mov	r1, sl
    c258:	ldr	r0, [sp, #120]	; 0x78
    c25c:	add	r0, r6, r0
    c260:	bl	b09c <sas7bdat_parse_single_row>
    c264:	subs	fp, r0, #0
    c268:	beq	c45c <readstat_parse_sas7bdat+0xcf4>
    c26c:	ldr	r8, [sp, #96]	; 0x60
    c270:	ldr	r9, [sp, #100]	; 0x64
    c274:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c278:	ldr	r3, [sl, #68]	; 0x44
    c27c:	str	r3, [sp, #104]	; 0x68
    c280:	mov	r0, r3
    c284:	bl	410c <malloc@plt>
    c288:	str	r0, [sp, #92]	; 0x5c
    c28c:	mov	r3, r4
    c290:	add	fp, r4, r5
    c294:	ldr	r2, [sp, #104]	; 0x68
    c298:	add	r2, r0, r2
    c29c:	str	sl, [sp, #108]	; 0x6c
    c2a0:	str	r6, [sp, #112]	; 0x70
    c2a4:	str	r7, [sp, #116]	; 0x74
    c2a8:	mov	r7, r2
    c2ac:	add	r4, r3, #2
    c2b0:	cmp	fp, r4
    c2b4:	bcc	c404 <readstat_parse_sas7bdat+0xc9c>
    c2b8:	ldrb	r2, [r3]
    c2bc:	ldrb	r6, [r3, #1]
    c2c0:	add	r6, r6, r2, lsl #8
    c2c4:	uxth	r6, r6
    c2c8:	mov	r5, #15
    c2cc:	b	c39c <readstat_parse_sas7bdat+0xc34>
    c2d0:	add	r3, r4, #2
    c2d4:	cmp	fp, r3
    c2d8:	bcc	c5a0 <readstat_parse_sas7bdat+0xe38>
    c2dc:	mov	sl, r4
    c2e0:	ldrb	r3, [sl], #2
    c2e4:	ldrb	r1, [r4, #1]
    c2e8:	cmp	r3, #15
    c2ec:	addls	r2, r3, #3
    c2f0:	bls	c378 <readstat_parse_sas7bdat+0xc10>
    c2f4:	lsr	r2, r3, #4
    c2f8:	cmp	r2, #1
    c2fc:	beq	c35c <readstat_parse_sas7bdat+0xbf4>
    c300:	cmp	r2, #2
    c304:	beq	c3d4 <readstat_parse_sas7bdat+0xc6c>
    c308:	and	r3, r3, #15
    c30c:	add	r3, r3, #3
    c310:	add	r1, r3, r1, lsl #4
    c314:	mov	r4, sl
    c318:	ldr	r3, [sp, #92]	; 0x5c
    c31c:	sub	r3, r0, r3
    c320:	cmp	r2, r1
    c324:	movls	ip, #0
    c328:	movhi	ip, #1
    c32c:	cmp	r3, r1
    c330:	movcs	r3, ip
    c334:	orrcc	r3, ip, #1
    c338:	cmp	r3, #0
    c33c:	bne	cac0 <readstat_parse_sas7bdat+0x1358>
    c340:	add	sl, r0, r2
    c344:	cmp	sl, r7
    c348:	bhi	c5dc <readstat_parse_sas7bdat+0xe74>
    c34c:	sub	r1, r0, r1
    c350:	bl	3f14 <memcpy@plt>
    c354:	mov	r0, sl
    c358:	b	c390 <readstat_parse_sas7bdat+0xc28>
    c35c:	add	sl, r4, #3
    c360:	cmp	fp, sl
    c364:	bcc	c5b4 <readstat_parse_sas7bdat+0xe4c>
    c368:	and	r3, r3, #15
    c36c:	add	r3, r3, #19
    c370:	add	r2, r3, r1, lsl #4
    c374:	ldrb	r1, [r4, #2]
    c378:	add	r4, r0, r2
    c37c:	cmp	r4, r7
    c380:	bhi	c5f0 <readstat_parse_sas7bdat+0xe88>
    c384:	bl	42a4 <memset@plt>
    c388:	mov	r0, r4
    c38c:	mov	r4, sl
    c390:	sub	r5, r5, #1
    c394:	cmn	r5, #1
    c398:	beq	c3fc <readstat_parse_sas7bdat+0xc94>
    c39c:	asr	r3, r6, r5
    c3a0:	tst	r3, #1
    c3a4:	bne	c2d0 <readstat_parse_sas7bdat+0xb68>
    c3a8:	add	r3, r4, #1
    c3ac:	cmp	r3, fp
    c3b0:	bhi	c3fc <readstat_parse_sas7bdat+0xc94>
    c3b4:	add	r2, r0, #1
    c3b8:	cmp	r2, r7
    c3bc:	bhi	c43c <readstat_parse_sas7bdat+0xcd4>
    c3c0:	ldrb	r1, [r4]
    c3c4:	strb	r1, [r0]
    c3c8:	mov	r0, r2
    c3cc:	mov	r4, r3
    c3d0:	b	c390 <readstat_parse_sas7bdat+0xc28>
    c3d4:	add	ip, r4, #3
    c3d8:	cmp	fp, ip
    c3dc:	bcc	c5c8 <readstat_parse_sas7bdat+0xe60>
    c3e0:	ldrb	r2, [r4, #2]
    c3e4:	add	r2, r2, #16
    c3e8:	and	r3, r3, #15
    c3ec:	add	r3, r3, #3
    c3f0:	add	r1, r3, r1, lsl #4
    c3f4:	mov	r4, ip
    c3f8:	b	c318 <readstat_parse_sas7bdat+0xbb0>
    c3fc:	mov	r3, r4
    c400:	b	c2ac <readstat_parse_sas7bdat+0xb44>
    c404:	ldr	sl, [sp, #108]	; 0x6c
    c408:	ldr	r6, [sp, #112]	; 0x70
    c40c:	ldr	r7, [sp, #116]	; 0x74
    c410:	ldr	r3, [sp, #92]	; 0x5c
    c414:	sub	r0, r0, r3
    c418:	ldr	r2, [sp, #104]	; 0x68
    c41c:	cmp	r2, r0
    c420:	movne	fp, #10
    c424:	bne	c44c <readstat_parse_sas7bdat+0xce4>
    c428:	mov	r1, sl
    c42c:	mov	r0, r3
    c430:	bl	b09c <sas7bdat_parse_single_row>
    c434:	mov	fp, r0
    c438:	b	c44c <readstat_parse_sas7bdat+0xce4>
    c43c:	ldr	sl, [sp, #108]	; 0x6c
    c440:	ldr	r6, [sp, #112]	; 0x70
    c444:	ldr	r7, [sp, #116]	; 0x74
    c448:	mov	fp, #10
    c44c:	ldr	r0, [sp, #92]	; 0x5c
    c450:	bl	3eb4 <free@plt>
    c454:	cmp	fp, #0
    c458:	bne	c864 <readstat_parse_sas7bdat+0x10fc>
    c45c:	ldr	r3, [sp, #60]	; 0x3c
    c460:	add	r7, r7, r3
    c464:	add	r9, r9, #1
    c468:	ldr	r3, [sp, #48]	; 0x30
    c46c:	cmp	r3, r9
    c470:	beq	c638 <readstat_parse_sas7bdat+0xed0>
    c474:	mov	r2, #0
    c478:	mov	r3, #0
    c47c:	strd	r2, [r8]
    c480:	strd	r2, [r8, #8]
    c484:	strd	r2, [r8, #16]
    c488:	ldr	r5, [sp, #40]	; 0x28
    c48c:	add	r1, r6, r5
    c490:	mov	r3, sl
    c494:	mov	r2, r8
    c498:	sub	r1, r1, r7
    c49c:	mov	r0, r7
    c4a0:	bl	a718 <sas7bdat_parse_subheader_pointer>
    c4a4:	subs	fp, r0, #0
    c4a8:	bne	c7ac <readstat_parse_sas7bdat+0x1044>
    c4ac:	ldrd	r2, [sp, #128]	; 0x80
    c4b0:	orrs	r3, r2, r3
    c4b4:	beq	c45c <readstat_parse_sas7bdat+0xcf4>
    c4b8:	ldrb	r4, [sp, #136]	; 0x88
    c4bc:	cmp	r4, #1
    c4c0:	beq	c45c <readstat_parse_sas7bdat+0xcf4>
    c4c4:	mov	r3, sl
    c4c8:	ldr	r2, [sp, #72]	; 0x48
    c4cc:	mov	r1, r5
    c4d0:	mov	r0, r8
    c4d4:	bl	a518 <sas7bdat_validate_subheader_pointer>
    c4d8:	subs	fp, r0, #0
    c4dc:	bne	c840 <readstat_parse_sas7bdat+0x10d8>
    c4e0:	cmp	r4, #0
    c4e4:	beq	c158 <readstat_parse_sas7bdat+0x9f0>
    c4e8:	cmp	r4, #4
    c4ec:	bne	c628 <readstat_parse_sas7bdat+0xec0>
    c4f0:	mov	r1, #1
    c4f4:	mov	r0, sl
    c4f8:	bl	b3f4 <sas7bdat_submit_columns_if_needed>
    c4fc:	subs	fp, r0, #0
    c500:	bne	c858 <readstat_parse_sas7bdat+0x10f0>
    c504:	ldr	r4, [sp, #120]	; 0x78
    c508:	add	r4, r6, r4
    c50c:	ldr	r5, [sp, #128]	; 0x80
    c510:	ldrb	r3, [sl, #2529]	; 0x9e1
    c514:	tst	r3, #1
    c518:	bne	c278 <readstat_parse_sas7bdat+0xb10>
    c51c:	ldr	r2, [sl, #84]	; 0x54
    c520:	ldr	r3, [sl, #76]	; 0x4c
    c524:	cmp	r2, r3
    c528:	beq	c45c <readstat_parse_sas7bdat+0xcf4>
    c52c:	mov	r3, r5
    c530:	mov	r2, r4
    c534:	ldr	r1, [sl, #68]	; 0x44
    c538:	ldr	r0, [sl, #124]	; 0x7c
    c53c:	bl	4070 <sas_rle_decompress@plt>
    c540:	ldr	r3, [sl, #68]	; 0x44
    c544:	cmp	r3, r0
    c548:	beq	c604 <readstat_parse_sas7bdat+0xe9c>
    c54c:	ldr	r8, [sp, #96]	; 0x60
    c550:	ldr	r9, [sp, #100]	; 0x64
    c554:	ldr	r2, [sl, #24]
    c558:	cmp	r2, #0
    c55c:	beq	c598 <readstat_parse_sas7bdat+0xe30>
    c560:	add	r4, sl, #480	; 0x1e0
    c564:	add	r4, r4, #1
    c568:	str	r3, [sp, #4]
    c56c:	str	r0, [sp]
    c570:	ldr	r3, [sl, #76]	; 0x4c
    c574:	ldr	r2, [pc, #932]	; c920 <readstat_parse_sas7bdat+0x11b8>
    c578:	add	r2, pc, r2
    c57c:	mov	r1, #2048	; 0x800
    c580:	mov	r0, r4
    c584:	bl	4280 <snprintf@plt>
    c588:	ldr	r3, [sl, #24]
    c58c:	ldr	r1, [sl, #52]	; 0x34
    c590:	mov	r0, r4
    c594:	blx	r3
    c598:	mov	fp, #10
    c59c:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c5a0:	ldr	sl, [sp, #108]	; 0x6c
    c5a4:	ldr	r6, [sp, #112]	; 0x70
    c5a8:	ldr	r7, [sp, #116]	; 0x74
    c5ac:	mov	fp, #5
    c5b0:	b	c44c <readstat_parse_sas7bdat+0xce4>
    c5b4:	ldr	sl, [sp, #108]	; 0x6c
    c5b8:	ldr	r6, [sp, #112]	; 0x70
    c5bc:	ldr	r7, [sp, #116]	; 0x74
    c5c0:	mov	fp, #5
    c5c4:	b	c44c <readstat_parse_sas7bdat+0xce4>
    c5c8:	ldr	sl, [sp, #108]	; 0x6c
    c5cc:	ldr	r6, [sp, #112]	; 0x70
    c5d0:	ldr	r7, [sp, #116]	; 0x74
    c5d4:	mov	fp, #5
    c5d8:	b	c44c <readstat_parse_sas7bdat+0xce4>
    c5dc:	ldr	sl, [sp, #108]	; 0x6c
    c5e0:	ldr	r6, [sp, #112]	; 0x70
    c5e4:	ldr	r7, [sp, #116]	; 0x74
    c5e8:	mov	fp, #10
    c5ec:	b	c44c <readstat_parse_sas7bdat+0xce4>
    c5f0:	ldr	sl, [sp, #108]	; 0x6c
    c5f4:	ldr	r6, [sp, #112]	; 0x70
    c5f8:	ldr	r7, [sp, #116]	; 0x74
    c5fc:	mov	fp, #10
    c600:	b	c44c <readstat_parse_sas7bdat+0xce4>
    c604:	mov	r1, sl
    c608:	ldr	r0, [sl, #124]	; 0x7c
    c60c:	bl	b09c <sas7bdat_parse_single_row>
    c610:	mov	fp, r0
    c614:	b	c454 <readstat_parse_sas7bdat+0xcec>
    c618:	ldr	r8, [sp, #96]	; 0x60
    c61c:	ldr	r9, [sp, #100]	; 0x64
    c620:	mov	fp, #10
    c624:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c628:	ldr	r8, [sp, #96]	; 0x60
    c62c:	ldr	r9, [sp, #100]	; 0x64
    c630:	mov	fp, #6
    c634:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c638:	ldr	r3, [sp, #88]	; 0x58
    c63c:	cmp	r3, #512	; 0x200
    c640:	beq	c764 <readstat_parse_sas7bdat+0xffc>
    c644:	ldr	r2, [sl, #76]	; 0x4c
    c648:	ldr	r3, [sl, #84]	; 0x54
    c64c:	cmp	r2, r3
    c650:	beq	ca78 <readstat_parse_sas7bdat+0x1310>
    c654:	ldr	r3, [sp, #32]
    c658:	adds	r3, r3, #1
    c65c:	str	r3, [sp, #32]
    c660:	ldr	r3, [sp, #36]	; 0x24
    c664:	adc	r3, r3, #0
    c668:	str	r3, [sp, #36]	; 0x24
    c66c:	ldrd	r2, [sl, #104]	; 0x68
    c670:	ldrd	r0, [sp, #32]
    c674:	cmp	r3, r1
    c678:	cmpeq	r2, r0
    c67c:	bls	c87c <readstat_parse_sas7bdat+0x1114>
    c680:	mov	r0, sl
    c684:	bl	a4e8 <sas7bdat_update_progress>
    c688:	subs	fp, r0, #0
    c68c:	bne	c8d0 <readstat_parse_sas7bdat+0x1168>
    c690:	ldr	r2, [sp, #76]	; 0x4c
    c694:	ldr	r3, [r2, #12]
    c698:	ldr	r2, [r2, #20]
    c69c:	ldr	r1, [sl, #112]	; 0x70
    c6a0:	ldr	r0, [sl, #120]	; 0x78
    c6a4:	blx	r3
    c6a8:	ldrd	r2, [sl, #112]	; 0x70
    c6ac:	strd	r2, [sp, #64]	; 0x40
    c6b0:	asr	r1, r0, #31
    c6b4:	cmp	r1, r3
    c6b8:	cmpeq	r0, r2
    c6bc:	bcc	cb2c <readstat_parse_sas7bdat+0x13c4>
    c6c0:	ldr	r6, [sl, #120]	; 0x78
    c6c4:	str	r2, [sp, #40]	; 0x28
    c6c8:	ldr	r0, [sl, #128]	; 0x80
    c6cc:	sub	r0, r0, #8
    c6d0:	ldr	r1, [sl, #60]	; 0x3c
    c6d4:	add	r0, r6, r0
    c6d8:	bl	43d0 <sas_read2@plt>
    c6dc:	and	r3, r0, #3840	; 0xf00
    c6e0:	str	r3, [sp, #88]	; 0x58
    c6e4:	cmp	r3, #256	; 0x100
    c6e8:	beq	c070 <readstat_parse_sas7bdat+0x908>
    c6ec:	tst	r0, #36864	; 0x9000
    c6f0:	bne	c644 <readstat_parse_sas7bdat+0xedc>
    c6f4:	ldr	r0, [sl, #128]	; 0x80
    c6f8:	sub	r0, r0, #4
    c6fc:	ldr	r1, [sl, #60]	; 0x3c
    c700:	add	r0, r6, r0
    c704:	bl	43d0 <sas_read2@plt>
    c708:	str	r0, [sp, #72]	; 0x48
    c70c:	ldrd	r4, [sl, #128]	; 0x80
    c710:	add	r7, r6, r4
    c714:	ldr	r2, [sl, #144]	; 0x90
    c718:	str	r2, [sp, #60]	; 0x3c
    c71c:	str	r0, [sp, #48]	; 0x30
    c720:	mul	r1, r2, r0
    c724:	adds	r2, r4, r1
    c728:	adc	r3, r5, r1, asr #31
    c72c:	ldr	r1, [sp, #64]	; 0x40
    c730:	str	r1, [sp, #80]	; 0x50
    c734:	mov	r1, #0
    c738:	str	r1, [sp, #84]	; 0x54
    c73c:	ldrd	r0, [sp, #80]	; 0x50
    c740:	cmp	r3, r1
    c744:	cmpeq	r2, r0
    c748:	bhi	c148 <readstat_parse_sas7bdat+0x9e0>
    c74c:	ldr	r3, [sp, #72]	; 0x48
    c750:	cmp	r3, #0
    c754:	movgt	r9, #0
    c758:	addgt	r8, sp, #120	; 0x78
    c75c:	bgt	c474 <readstat_parse_sas7bdat+0xd0c>
    c760:	b	c638 <readstat_parse_sas7bdat+0xed0>
    c764:	sub	r3, r7, r6
    c768:	rsbs	r2, r3, #0
    c76c:	and	r3, r3, #7
    c770:	and	r2, r2, #7
    c774:	rsbpl	r3, r2, #0
    c778:	cmp	r3, #4
    c77c:	bne	c090 <readstat_parse_sas7bdat+0x928>
    c780:	ldr	r2, [r7]
    c784:	movw	r3, #8224	; 0x2020
    c788:	movt	r3, #8224	; 0x2020
    c78c:	cmp	r2, r3
    c790:	cmpne	r2, #0
    c794:	beq	c7a4 <readstat_parse_sas7bdat+0x103c>
    c798:	ldr	r3, [sl, #48]	; 0x30
    c79c:	cmp	r3, #0
    c7a0:	beq	c098 <readstat_parse_sas7bdat+0x930>
    c7a4:	add	r7, r7, #4
    c7a8:	b	c090 <readstat_parse_sas7bdat+0x928>
    c7ac:	ldr	r8, [sp, #96]	; 0x60
    c7b0:	ldr	r9, [sp, #100]	; 0x64
    c7b4:	ldr	r3, [sl, #24]
    c7b8:	cmp	r3, #0
    c7bc:	cmpne	fp, #4
    c7c0:	beq	b880 <readstat_parse_sas7bdat+0x118>
    c7c4:	ldr	r2, [sp, #76]	; 0x4c
    c7c8:	ldr	r3, [r2, #8]
    c7cc:	ldr	r2, [r2, #20]
    c7d0:	mov	r1, #1
    c7d4:	mov	r0, #0
    c7d8:	blx	r3
    c7dc:	add	r4, sl, #480	; 0x1e0
    c7e0:	add	r4, r4, #1
    c7e4:	asr	r1, r0, #31
    c7e8:	subs	r2, r0, #1
    c7ec:	sbc	r3, r1, #0
    c7f0:	str	r2, [sp, #16]
    c7f4:	str	r3, [sp, #20]
    c7f8:	ldr	r3, [sl, #112]	; 0x70
    c7fc:	ldr	r2, [sl, #116]	; 0x74
    c800:	subs	r3, r0, r3
    c804:	sbc	r2, r1, r2
    c808:	str	r3, [sp, #8]
    c80c:	str	r2, [sp, #12]
    c810:	ldrd	r2, [sp, #32]
    c814:	strd	r2, [sp]
    c818:	ldr	r2, [pc, #260]	; c924 <readstat_parse_sas7bdat+0x11bc>
    c81c:	add	r2, pc, r2
    c820:	mov	r1, #2048	; 0x800
    c824:	mov	r0, r4
    c828:	bl	4280 <snprintf@plt>
    c82c:	ldr	r3, [sl, #24]
    c830:	ldr	r1, [sl, #52]	; 0x34
    c834:	mov	r0, r4
    c838:	blx	r3
    c83c:	b	b880 <readstat_parse_sas7bdat+0x118>
    c840:	ldr	r8, [sp, #96]	; 0x60
    c844:	ldr	r9, [sp, #100]	; 0x64
    c848:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c84c:	ldr	r8, [sp, #96]	; 0x60
    c850:	ldr	r9, [sp, #100]	; 0x64
    c854:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c858:	ldr	r8, [sp, #96]	; 0x60
    c85c:	ldr	r9, [sp, #100]	; 0x64
    c860:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c864:	ldr	r8, [sp, #96]	; 0x60
    c868:	ldr	r9, [sp, #100]	; 0x64
    c86c:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c870:	ldr	r8, [sp, #96]	; 0x60
    c874:	ldr	r9, [sp, #100]	; 0x64
    c878:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    c87c:	ldr	r8, [sp, #96]	; 0x60
    c880:	ldr	r9, [sp, #100]	; 0x64
    c884:	b	ca80 <readstat_parse_sas7bdat+0x1318>
    c888:	ldr	r1, [sl, #24]
    c88c:	cmp	r1, #0
    c890:	moveq	fp, #9
    c894:	beq	c9c4 <readstat_parse_sas7bdat+0x125c>
    c898:	add	r4, sl, #480	; 0x1e0
    c89c:	add	r4, r4, #1
    c8a0:	str	r2, [sp]
    c8a4:	ldr	r2, [pc, #124]	; c928 <readstat_parse_sas7bdat+0x11c0>
    c8a8:	add	r2, pc, r2
    c8ac:	mov	r1, #2048	; 0x800
    c8b0:	mov	r0, r4
    c8b4:	bl	4280 <snprintf@plt>
    c8b8:	ldr	r3, [sl, #24]
    c8bc:	ldr	r1, [sl, #52]	; 0x34
    c8c0:	mov	r0, r4
    c8c4:	blx	r3
    c8c8:	mov	fp, #9
    c8cc:	b	c9c4 <readstat_parse_sas7bdat+0x125c>
    c8d0:	ldr	r8, [sp, #96]	; 0x60
    c8d4:	ldr	r9, [sp, #100]	; 0x64
    c8d8:	b	b880 <readstat_parse_sas7bdat+0x118>
    c8dc:	bl	3eb4 <free@plt>
    c8e0:	add	r4, r4, #1
    c8e4:	ldr	r3, [sl, #80]	; 0x50
    c8e8:	cmp	r3, r4
    c8ec:	bls	c930 <readstat_parse_sas7bdat+0x11c8>
    c8f0:	ldr	r3, [sl, #196]	; 0xc4
    c8f4:	ldr	r0, [r3, r4, lsl #2]
    c8f8:	cmp	r0, #0
    c8fc:	bne	c8dc <readstat_parse_sas7bdat+0x1174>
    c900:	b	c8e0 <readstat_parse_sas7bdat+0x1178>
    c904:	.word	0x0001ae74
    c908:	.word	0x0001ae1c
    c90c:	.word	0x0001ac30
    c910:	.word	0x0001ab04
    c914:	.word	0x0001a9dc
    c918:	.word	0x0001a924
    c91c:	.word	0x0001a614
    c920:	.word	0x0001a2e8
    c924:	.word	0x0001a010
    c928:	.word	0x00019ff8
    c92c:	.word	0x00019e9c
    c930:	ldr	r0, [sl, #196]	; 0xc4
    c934:	bl	3eb4 <free@plt>
    c938:	ldr	r0, [sl, #192]	; 0xc0
    c93c:	cmp	r0, #0
    c940:	beq	c948 <readstat_parse_sas7bdat+0x11e0>
    c944:	bl	3eb4 <free@plt>
    c948:	ldr	r0, [sl, #180]	; 0xb4
    c94c:	cmp	r0, #0
    c950:	beq	c958 <readstat_parse_sas7bdat+0x11f0>
    c954:	bl	3eb4 <free@plt>
    c958:	ldr	r0, [sl, #120]	; 0x78
    c95c:	cmp	r0, #0
    c960:	beq	c968 <readstat_parse_sas7bdat+0x1200>
    c964:	bl	3eb4 <free@plt>
    c968:	ldr	r0, [sl, #124]	; 0x7c
    c96c:	cmp	r0, #0
    c970:	beq	c978 <readstat_parse_sas7bdat+0x1210>
    c974:	bl	3eb4 <free@plt>
    c978:	ldr	r0, [sl, #208]	; 0xd0
    c97c:	cmp	r0, #0
    c980:	beq	c988 <readstat_parse_sas7bdat+0x1220>
    c984:	bl	3dc4 <iconv_close@plt>
    c988:	mov	r0, sl
    c98c:	bl	3eb4 <free@plt>
    c990:	cmp	r9, #0
    c994:	beq	c9a0 <readstat_parse_sas7bdat+0x1238>
    c998:	mov	r0, r9
    c99c:	bl	3eb4 <free@plt>
    c9a0:	mov	r0, fp
    c9a4:	add	sp, sp, #148	; 0x94
    c9a8:	ldrd	r4, [sp]
    c9ac:	ldrd	r6, [sp, #8]
    c9b0:	ldrd	r8, [sp, #16]
    c9b4:	ldrd	sl, [sp, #24]
    c9b8:	add	sp, sp, #32
    c9bc:	pop	{pc}		; (ldr pc, [sp], #4)
    c9c0:	mov	fp, #3
    c9c4:	ldr	r3, [r8, #4]
    c9c8:	ldr	r0, [r8, #20]
    c9cc:	blx	r3
    c9d0:	b	b89c <readstat_parse_sas7bdat+0x134>
    c9d4:	mov	fp, #7
    c9d8:	b	c9c4 <readstat_parse_sas7bdat+0x125c>
    c9dc:	mov	fp, #1
    c9e0:	ldr	r3, [r8, #4]
    c9e4:	ldr	r0, [r8, #20]
    c9e8:	blx	r3
    c9ec:	ldr	r3, [sl, #24]
    c9f0:	cmp	r3, #0
    c9f4:	beq	b89c <readstat_parse_sas7bdat+0x134>
    c9f8:	add	r4, sl, #480	; 0x1e0
    c9fc:	add	r4, r4, #1
    ca00:	mov	r0, fp
    ca04:	bl	3e3c <readstat_error_message@plt>
    ca08:	mov	r6, r0
    ca0c:	bl	4268 <__errno_location@plt>
    ca10:	mov	r5, r0
    ca14:	ldr	r0, [r0]
    ca18:	bl	413c <strerror@plt>
    ca1c:	ldr	r3, [r5]
    ca20:	str	r3, [sp, #8]
    ca24:	str	r0, [sp, #4]
    ca28:	str	fp, [sp]
    ca2c:	mov	r3, r6
    ca30:	ldr	r2, [pc, #-268]	; c92c <readstat_parse_sas7bdat+0x11c4>
    ca34:	add	r2, pc, r2
    ca38:	mov	r1, #2048	; 0x800
    ca3c:	mov	r0, r4
    ca40:	bl	4280 <snprintf@plt>
    ca44:	ldr	r3, [sl, #24]
    ca48:	ldr	r1, [sp, #56]	; 0x38
    ca4c:	mov	r0, r4
    ca50:	blx	r3
    ca54:	b	b89c <readstat_parse_sas7bdat+0x134>
    ca58:	ldr	r8, [sp, #96]	; 0x60
    ca5c:	ldr	r9, [sp, #100]	; 0x64
    ca60:	mov	fp, #10
    ca64:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    ca68:	ldr	r8, [sp, #96]	; 0x60
    ca6c:	ldr	r9, [sp, #100]	; 0x64
    ca70:	mov	fp, r0
    ca74:	b	c7b4 <readstat_parse_sas7bdat+0x104c>
    ca78:	ldr	r8, [sp, #96]	; 0x60
    ca7c:	ldr	r9, [sp, #100]	; 0x64
    ca80:	mov	r1, #0
    ca84:	mov	r0, sl
    ca88:	bl	b3f4 <sas7bdat_submit_columns_if_needed>
    ca8c:	subs	fp, r0, #0
    ca90:	bne	b880 <readstat_parse_sas7bdat+0x118>
    ca94:	ldr	r3, [sl, #16]
    ca98:	cmp	r3, #0
    ca9c:	beq	cab0 <readstat_parse_sas7bdat+0x1348>
    caa0:	ldr	r2, [sl, #76]	; 0x4c
    caa4:	ldr	r3, [sl, #84]	; 0x54
    caa8:	cmp	r2, r3
    caac:	bne	c888 <readstat_parse_sas7bdat+0x1120>
    cab0:	mov	r0, sl
    cab4:	bl	a4e8 <sas7bdat_update_progress>
    cab8:	mov	fp, r0
    cabc:	b	b880 <readstat_parse_sas7bdat+0x118>
    cac0:	ldr	sl, [sp, #108]	; 0x6c
    cac4:	ldr	r6, [sp, #112]	; 0x70
    cac8:	ldr	r7, [sp, #116]	; 0x74
    cacc:	mov	fp, #5
    cad0:	b	c44c <readstat_parse_sas7bdat+0xce4>
    cad4:	mov	r8, r9
    cad8:	ldr	r9, [sp, #40]	; 0x28
    cadc:	mov	fp, #2
    cae0:	ldr	r3, [r8, #4]
    cae4:	ldr	r0, [r8, #20]
    cae8:	blx	r3
    caec:	b	c9ec <readstat_parse_sas7bdat+0x1284>
    caf0:	mov	r8, r9
    caf4:	ldr	r9, [sp, #40]	; 0x28
    caf8:	mov	fp, #2
    cafc:	b	cae0 <readstat_parse_sas7bdat+0x1378>
    cb00:	mov	r8, fp
    cb04:	ldr	r9, [sp, #60]	; 0x3c
    cb08:	mov	fp, #2
    cb0c:	ldr	r3, [r8, #4]
    cb10:	ldr	r0, [r8, #20]
    cb14:	blx	r3
    cb18:	b	c9ec <readstat_parse_sas7bdat+0x1284>
    cb1c:	mov	r8, fp
    cb20:	ldr	r9, [sp, #60]	; 0x3c
    cb24:	mov	fp, #2
    cb28:	b	cb0c <readstat_parse_sas7bdat+0x13a4>
    cb2c:	ldr	r8, [sp, #96]	; 0x60
    cb30:	ldr	r9, [sp, #100]	; 0x64
    cb34:	ldr	r3, [r8, #4]
    cb38:	ldr	r0, [r8, #20]
    cb3c:	blx	r3
    cb40:	mov	fp, #2
    cb44:	b	c9ec <readstat_parse_sas7bdat+0x1284>
    cb48:	ldr	r5, [sl, #56]	; 0x38
    cb4c:	ldr	r3, [sl, #104]	; 0x68
    cb50:	ldr	r2, [sl, #108]	; 0x6c
    cb54:	subs	r3, r3, #1
    cb58:	str	r3, [sp, #48]	; 0x30
    cb5c:	sbc	r3, r2, #0
    cb60:	str	r3, [sp, #52]	; 0x34
    cb64:	b	bd84 <readstat_parse_sas7bdat+0x61c>

0000cb68 <sas7bdat_subheader_type>:
    cb68:	add	r0, r0, #4
    cb6c:	cmp	r0, #3
    cb70:	movhi	r0, #0
    cb74:	movls	r0, #1
    cb78:	bx	lr

0000cb7c <sas7bdat_variable_width>:
    cb7c:	cmp	r0, #0
    cb80:	moveq	r0, r1
    cb84:	movne	r0, #8
    cb88:	bx	lr

0000cb8c <sas7bdat_metadata_ok>:
    cb8c:	ldr	r3, [r0, #16]
    cb90:	cmp	r3, #2
    cb94:	movcc	r0, #0
    cb98:	movcs	r0, #6
    cb9c:	bx	lr

0000cba0 <sas7bdat_write_double>:
    cba0:	sub	sp, sp, #8
    cba4:	vstr	d0, [sp]
    cba8:	ldr	r3, [sp]
    cbac:	str	r3, [r0]
    cbb0:	ldr	r3, [sp, #4]
    cbb4:	str	r3, [r0, #4]
    cbb8:	mov	r0, #0
    cbbc:	add	sp, sp, #8
    cbc0:	bx	lr

0000cbc4 <sas7bdat_subheader_init>:
    cbc4:	strd	r4, [sp, #-16]!
    cbc8:	str	r6, [sp, #8]
    cbcc:	str	lr, [sp, #12]
    cbd0:	mov	r6, r0
    cbd4:	mov	r5, r1
    cbd8:	mov	r1, #20
    cbdc:	mov	r0, #1
    cbe0:	bl	3d4c <calloc@plt>
    cbe4:	mov	r4, r0
    cbe8:	str	r6, [r0]
    cbec:	str	r5, [r0, #8]
    cbf0:	mov	r1, r5
    cbf4:	mov	r0, #1
    cbf8:	bl	3d4c <calloc@plt>
    cbfc:	str	r0, [r4, #4]
    cc00:	mov	r0, r4
    cc04:	ldrd	r4, [sp]
    cc08:	ldr	r6, [sp, #8]
    cc0c:	add	sp, sp, #12
    cc10:	pop	{pc}		; (ldr pc, [sp], #4)

0000cc14 <sas7bdat_subheader_free>:
    cc14:	str	r4, [sp, #-8]!
    cc18:	str	lr, [sp, #4]
    cc1c:	subs	r4, r0, #0
    cc20:	beq	cc3c <sas7bdat_subheader_free+0x28>
    cc24:	ldr	r0, [r4, #4]
    cc28:	cmp	r0, #0
    cc2c:	beq	cc34 <sas7bdat_subheader_free+0x20>
    cc30:	bl	3eb4 <free@plt>
    cc34:	mov	r0, r4
    cc38:	bl	3eb4 <free@plt>
    cc3c:	ldr	r4, [sp]
    cc40:	add	sp, sp, #4
    cc44:	pop	{pc}		; (ldr pc, [sp], #4)

0000cc48 <sas7bdat_subheader_array_free>:
    cc48:	strd	r4, [sp, #-16]!
    cc4c:	str	r6, [sp, #8]
    cc50:	str	lr, [sp, #12]
    cc54:	mov	r6, r0
    cc58:	ldrd	r2, [r0]
    cc5c:	cmp	r2, #1
    cc60:	sbcs	r3, r3, #0
    cc64:	blt	cc94 <sas7bdat_subheader_array_free+0x4c>
    cc68:	mov	r4, #0
    cc6c:	mov	r5, #0
    cc70:	ldr	r3, [r6, #16]
    cc74:	ldr	r0, [r3, r4, lsl #2]
    cc78:	bl	cc14 <sas7bdat_subheader_free>
    cc7c:	adds	r4, r4, #1
    cc80:	adc	r5, r5, #0
    cc84:	ldrd	r2, [r6]
    cc88:	cmp	r4, r2
    cc8c:	sbcs	r3, r5, r3
    cc90:	blt	cc70 <sas7bdat_subheader_array_free+0x28>
    cc94:	ldr	r0, [r6, #16]
    cc98:	bl	3eb4 <free@plt>
    cc9c:	mov	r0, r6
    cca0:	bl	3eb4 <free@plt>
    cca4:	ldrd	r4, [sp]
    cca8:	ldr	r6, [sp, #8]
    ccac:	add	sp, sp, #12
    ccb0:	pop	{pc}		; (ldr pc, [sp], #4)

0000ccb4 <sas7bdat_module_ctx_free>:
    ccb4:	str	r4, [sp, #-8]!
    ccb8:	str	lr, [sp, #4]
    ccbc:	mov	r4, r0
    ccc0:	ldr	r0, [r0]
    ccc4:	bl	3eb4 <free@plt>
    ccc8:	ldr	r0, [r4, #4]
    cccc:	bl	cc48 <sas7bdat_subheader_array_free>
    ccd0:	mov	r0, r4
    ccd4:	bl	3eb4 <free@plt>
    ccd8:	ldr	r4, [sp]
    ccdc:	add	sp, sp, #4
    cce0:	pop	{pc}		; (ldr pc, [sp], #4)

0000cce4 <sas7bdat_make_text_ref>:
    cce4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    cce8:	strd	r6, [sp, #8]
    ccec:	strd	r8, [sp, #16]
    ccf0:	strd	sl, [sp, #24]
    ccf4:	str	lr, [sp, #32]
    ccf8:	sub	sp, sp, #12
    ccfc:	mov	r6, r0
    cd00:	mov	fp, r1
    cd04:	str	r2, [sp, #4]
    cd08:	mov	r0, r2
    cd0c:	bl	41fc <strlen@plt>
    cd10:	mov	r7, r0
    cd14:	add	r5, r0, #3
    cd18:	bic	r5, r5, #3
    cd1c:	ldr	r0, [fp, #8]
    cd20:	ldr	r1, [fp]
    cd24:	ldr	ip, [fp, #4]
    cd28:	sub	r3, r1, #-1073741823	; 0xc0000001
    cd2c:	ldr	r4, [r0, r3, lsl #2]
    cd30:	ldr	r3, [r4, #8]
    cd34:	add	r3, r5, r3
    cd38:	ldr	r2, [r4, #4]
    cd3c:	cmp	r3, r2
    cd40:	bhi	cd9c <sas7bdat_make_text_ref+0xb8>
    cd44:	ldrh	sl, [r4, #16]
    cd48:	ldr	r9, [r4, #8]
    cd4c:	ldr	r0, [r4]
    cd50:	mov	r2, r5
    cd54:	ldr	r1, [sp, #4]
    cd58:	add	r0, r0, r9
    cd5c:	bl	42bc <strncpy@plt>
    cd60:	ldr	r3, [r4, #8]
    cd64:	add	r5, r3, r5
    cd68:	str	r5, [r4, #8]
    cd6c:	strh	sl, [r6]
    cd70:	add	r9, r9, #28
    cd74:	strh	r9, [r6, #2]
    cd78:	strh	r7, [r6, #4]
    cd7c:	mov	r0, r6
    cd80:	add	sp, sp, #12
    cd84:	ldrd	r4, [sp]
    cd88:	ldrd	r6, [sp, #8]
    cd8c:	ldrd	r8, [sp, #16]
    cd90:	ldrd	sl, [sp, #24]
    cd94:	add	sp, sp, #32
    cd98:	pop	{pc}		; (ldr pc, [sp], #4)
    cd9c:	adds	r1, r1, #1
    cda0:	adc	ip, ip, #0
    cda4:	str	r1, [fp]
    cda8:	str	ip, [fp, #4]
    cdac:	lsl	r1, r1, #2
    cdb0:	bl	3fec <realloc@plt>
    cdb4:	mov	sl, r0
    cdb8:	str	r0, [fp, #8]
    cdbc:	ldr	r9, [fp]
    cdc0:	ldr	r8, [fp, #4]
    cdc4:	ldr	fp, [r4, #4]
    cdc8:	mov	r1, #24
    cdcc:	mov	r0, #1
    cdd0:	bl	3d4c <calloc@plt>
    cdd4:	mov	r4, r0
    cdd8:	mov	r0, fp
    cddc:	bl	410c <malloc@plt>
    cde0:	str	r0, [r4]
    cde4:	str	fp, [r4, #4]
    cde8:	subs	r2, r9, #1
    cdec:	sbc	r3, r8, #0
    cdf0:	str	r2, [r4, #16]
    cdf4:	str	r3, [r4, #20]
    cdf8:	sub	r9, r9, #-1073741823	; 0xc0000001
    cdfc:	str	r4, [sl, r9, lsl #2]
    ce00:	b	cd44 <sas7bdat_make_text_ref+0x60>

0000ce04 <sas7bdat_write_string>:
    ce04:	strd	r4, [sp, #-16]!
    ce08:	str	r6, [sp, #8]
    ce0c:	str	lr, [sp, #12]
    ce10:	mov	r6, r0
    ce14:	mov	r4, r2
    ce18:	mov	r0, r1
    ce1c:	bl	42c8 <readstat_variable_get_storage_width@plt>
    ce20:	mov	r5, r0
    ce24:	cmp	r4, #0
    ce28:	beq	ce38 <sas7bdat_write_string+0x34>
    ce2c:	ldrb	r3, [r4]
    ce30:	cmp	r3, #0
    ce34:	bne	ce5c <sas7bdat_write_string+0x58>
    ce38:	mov	r2, r5
    ce3c:	mov	r1, #0
    ce40:	mov	r0, r6
    ce44:	bl	42a4 <memset@plt>
    ce48:	mov	r0, #0
    ce4c:	ldrd	r4, [sp]
    ce50:	ldr	r6, [sp, #8]
    ce54:	add	sp, sp, #12
    ce58:	pop	{pc}		; (ldr pc, [sp], #4)
    ce5c:	mov	r0, r4
    ce60:	bl	41fc <strlen@plt>
    ce64:	cmp	r5, r0
    ce68:	movcc	r0, #22
    ce6c:	bcc	ce4c <sas7bdat_write_string+0x48>
    ce70:	mov	r2, r5
    ce74:	mov	r1, r4
    ce78:	mov	r0, r6
    ce7c:	bl	42bc <strncpy@plt>
    ce80:	mov	r0, #0
    ce84:	b	ce4c <sas7bdat_write_string+0x48>

0000ce88 <sas7bdat_write_missing_string>:
    ce88:	str	r4, [sp, #-8]!
    ce8c:	str	lr, [sp, #4]
    ce90:	mov	r2, #0
    ce94:	bl	ce04 <sas7bdat_write_string>
    ce98:	ldr	r4, [sp]
    ce9c:	add	sp, sp, #4
    cea0:	pop	{pc}		; (ldr pc, [sp], #4)

0000cea4 <sas7bdat_row_length>:
    cea4:	strd	r4, [sp, #-24]!	; 0xffffffe8
    cea8:	strd	r6, [sp, #8]
    ceac:	str	r8, [sp, #16]
    ceb0:	str	lr, [sp, #20]
    ceb4:	ldr	r3, [r0, #28]
    ceb8:	cmp	r3, #0
    cebc:	ble	cf28 <sas7bdat_row_length+0x84>
    cec0:	mov	r6, r0
    cec4:	mov	r7, #0
    cec8:	mov	r4, r7
    cecc:	mov	r1, r4
    ced0:	mov	r0, r6
    ced4:	bl	437c <readstat_get_variable@plt>
    ced8:	mov	r8, r0
    cedc:	bl	41d8 <readstat_variable_get_type@plt>
    cee0:	mov	r5, r0
    cee4:	mov	r0, r8
    cee8:	bl	42c8 <readstat_variable_get_storage_width@plt>
    ceec:	mov	r3, r0
    cef0:	cmp	r5, #0
    cef4:	moveq	r3, r0
    cef8:	movne	r3, #8
    cefc:	add	r7, r7, r3
    cf00:	add	r4, r4, #1
    cf04:	ldr	r3, [r6, #28]
    cf08:	cmp	r3, r4
    cf0c:	bgt	cecc <sas7bdat_row_length+0x28>
    cf10:	mov	r0, r7
    cf14:	ldrd	r4, [sp]
    cf18:	ldrd	r6, [sp, #8]
    cf1c:	ldr	r8, [sp, #16]
    cf20:	add	sp, sp, #20
    cf24:	pop	{pc}		; (ldr pc, [sp], #4)
    cf28:	mov	r7, #0
    cf2c:	b	cf10 <sas7bdat_row_length+0x6c>

0000cf30 <sas7bdat_write_row>:
    cf30:	strd	r4, [sp, #-36]!	; 0xffffffdc
    cf34:	strd	r6, [sp, #8]
    cf38:	strd	r8, [sp, #16]
    cf3c:	strd	sl, [sp, #24]
    cf40:	str	lr, [sp, #32]
    cf44:	add	fp, sp, #32
    cf48:	sub	sp, sp, #4
    cf4c:	mov	r8, r1
    cf50:	mov	r6, r2
    cf54:	ldr	r7, [r0, #300]	; 0x12c
    cf58:	ldr	r3, [r0, #16]
    cf5c:	cmp	r3, #0
    cf60:	beq	cf8c <sas7bdat_write_row+0x5c>
    cf64:	cmp	r3, #1
    cf68:	movne	r0, #0
    cf6c:	beq	d070 <sas7bdat_write_row+0x140>
    cf70:	sub	sp, fp, #32
    cf74:	ldrd	r4, [sp]
    cf78:	ldrd	r6, [sp, #8]
    cf7c:	ldrd	r8, [sp, #16]
    cf80:	ldrd	sl, [sp, #24]
    cf84:	add	sp, sp, #32
    cf88:	pop	{pc}		; (ldr pc, [sp], #4)
    cf8c:	mov	r4, r0
    cf90:	ldr	r5, [r7]
    cf94:	bl	cea4 <sas7bdat_row_length>
    cf98:	ldr	lr, [r5, #32]
    cf9c:	ldr	r9, [r5, #36]	; 0x24
    cfa0:	ldr	ip, [r5, #40]	; 0x28
    cfa4:	ldr	r1, [r5, #44]	; 0x2c
    cfa8:	mov	r2, r0
    cfac:	mov	r3, #0
    cfb0:	subs	r0, lr, ip
    cfb4:	sbc	r1, r9, r1
    cfb8:	bl	25ad0 <__aeabi_ldivmod>
    cfbc:	mov	r9, r0
    cfc0:	ldr	r2, [r4, #84]	; 0x54
    cfc4:	sdiv	r3, r2, r0
    cfc8:	mls	r3, r0, r3, r2
    cfcc:	cmp	r3, #0
    cfd0:	bne	d05c <sas7bdat_write_row+0x12c>
    cfd4:	mov	sl, sp
    cfd8:	ldr	r1, [r7]
    cfdc:	mov	r0, r4
    cfe0:	bl	4478 <sas_fill_page@plt>
    cfe4:	cmp	r0, #0
    cfe8:	beq	cff4 <sas7bdat_write_row+0xc4>
    cfec:	mov	sp, sl
    cff0:	b	cf70 <sas7bdat_write_row+0x40>
    cff4:	ldr	r3, [r4, #80]	; 0x50
    cff8:	ldr	r2, [r4, #84]	; 0x54
    cffc:	sub	r3, r3, r2
    d000:	cmp	r3, r9
    d004:	movlt	r9, r3
    d008:	ldr	r2, [r5, #40]	; 0x28
    d00c:	add	r3, r2, #7
    d010:	bic	r3, r3, #7
    d014:	sub	sp, sp, r3
    d018:	mov	r1, #0
    d01c:	mov	r0, sp
    d020:	bl	42a4 <memset@plt>
    d024:	ldr	r3, [r5, #40]	; 0x28
    d028:	add	r3, sp, r3
    d02c:	strh	r9, [r3, #-6]
    d030:	ldr	r3, [r5, #40]	; 0x28
    d034:	add	r3, sp, r3
    d038:	mov	r2, #256	; 0x100
    d03c:	strh	r2, [r3, #-8]
    d040:	ldr	r2, [r5, #40]	; 0x28
    d044:	mov	r1, sp
    d048:	mov	r0, r4
    d04c:	bl	4454 <readstat_write_bytes@plt>
    d050:	cmp	r0, #0
    d054:	bne	cfec <sas7bdat_write_row+0xbc>
    d058:	mov	sp, sl
    d05c:	mov	r2, r6
    d060:	mov	r1, r8
    d064:	mov	r0, r4
    d068:	bl	4454 <readstat_write_bytes@plt>
    d06c:	b	cf70 <sas7bdat_write_row+0x40>
    d070:	mov	r1, r2
    d074:	mov	r0, r8
    d078:	bl	4484 <sas_rle_compressed_len@plt>
    d07c:	mov	r5, r0
    d080:	cmp	r6, r0
    d084:	bls	d0d0 <sas7bdat_write_row+0x1a0>
    d088:	mov	r1, r0
    d08c:	mov	r0, #0
    d090:	bl	cbc4 <sas7bdat_subheader_init>
    d094:	mov	r4, r0
    d098:	mov	r3, #1
    d09c:	str	r3, [r0, #12]
    d0a0:	str	r3, [r0, #16]
    d0a4:	mov	r3, r6
    d0a8:	mov	r2, r8
    d0ac:	ldr	r1, [r0, #8]
    d0b0:	ldr	r0, [r0, #4]
    d0b4:	bl	44d8 <sas_rle_compress@plt>
    d0b8:	cmp	r5, r0
    d0bc:	beq	d0f8 <sas7bdat_write_row+0x1c8>
    d0c0:	mov	r0, r4
    d0c4:	bl	cc14 <sas7bdat_subheader_free>
    d0c8:	mov	r0, #10
    d0cc:	b	cf70 <sas7bdat_write_row+0x40>
    d0d0:	mov	r1, r6
    d0d4:	mov	r0, #0
    d0d8:	bl	cbc4 <sas7bdat_subheader_init>
    d0dc:	mov	r4, r0
    d0e0:	mov	r3, #1
    d0e4:	str	r3, [r0, #12]
    d0e8:	mov	r2, r6
    d0ec:	mov	r1, r8
    d0f0:	ldr	r0, [r0, #4]
    d0f4:	bl	3f14 <memcpy@plt>
    d0f8:	ldr	r2, [r7, #4]
    d0fc:	ldr	r0, [r2, #16]
    d100:	ldr	r3, [r2]
    d104:	ldr	r1, [r2, #4]
    d108:	adds	ip, r3, #1
    d10c:	adc	r1, r1, #0
    d110:	str	ip, [r2]
    d114:	str	r1, [r2, #4]
    d118:	str	r4, [r0, r3, lsl #2]
    d11c:	mov	r0, #0
    d120:	b	cf70 <sas7bdat_write_row+0x40>

0000d124 <sas7bdat_write_missing_tagged>:
    d124:	strd	r4, [sp, #-12]!
    d128:	str	lr, [sp, #8]
    d12c:	sub	sp, sp, #12
    d130:	mov	r5, r0
    d134:	mov	r4, r2
    d138:	mov	r0, r2
    d13c:	bl	4148 <sas_validate_tag@plt>
    d140:	cmp	r0, #0
    d144:	beq	d158 <sas7bdat_write_missing_tagged+0x34>
    d148:	add	sp, sp, #12
    d14c:	ldrd	r4, [sp]
    d150:	add	sp, sp, #8
    d154:	pop	{pc}		; (ldr pc, [sp], #4)
    d158:	mov	r2, #0
    d15c:	mov	r3, #0
    d160:	movt	r3, #32760	; 0x7ff8
    d164:	mvn	r4, r4
    d168:	bfi	r3, r4, #8, #8
    d16c:	strd	r2, [sp]
    d170:	ldr	r3, [sp]
    d174:	str	r3, [r5]
    d178:	ldr	r3, [sp, #4]
    d17c:	str	r3, [r5, #4]
    d180:	b	d148 <sas7bdat_write_missing_tagged+0x24>

0000d184 <sas7bdat_write_int8>:
    d184:	sub	sp, sp, #8
    d188:	vmov	s15, r2
    d18c:	vcvt.f64.s32	d7, s15
    d190:	vstr	d7, [sp]
    d194:	ldr	r3, [sp]
    d198:	str	r3, [r0]
    d19c:	ldr	r3, [sp, #4]
    d1a0:	str	r3, [r0, #4]
    d1a4:	mov	r0, #0
    d1a8:	add	sp, sp, #8
    d1ac:	bx	lr

0000d1b0 <sas7bdat_write_int16>:
    d1b0:	sub	sp, sp, #8
    d1b4:	vmov	s15, r2
    d1b8:	vcvt.f64.s32	d7, s15
    d1bc:	vstr	d7, [sp]
    d1c0:	ldr	r3, [sp]
    d1c4:	str	r3, [r0]
    d1c8:	ldr	r3, [sp, #4]
    d1cc:	str	r3, [r0, #4]
    d1d0:	mov	r0, #0
    d1d4:	add	sp, sp, #8
    d1d8:	bx	lr

0000d1dc <sas7bdat_write_int32>:
    d1dc:	sub	sp, sp, #8
    d1e0:	vmov	s15, r2
    d1e4:	vcvt.f64.s32	d7, s15
    d1e8:	vstr	d7, [sp]
    d1ec:	ldr	r3, [sp]
    d1f0:	str	r3, [r0]
    d1f4:	ldr	r3, [sp, #4]
    d1f8:	str	r3, [r0, #4]
    d1fc:	mov	r0, #0
    d200:	add	sp, sp, #8
    d204:	bx	lr

0000d208 <sas7bdat_write_float>:
    d208:	sub	sp, sp, #8
    d20c:	vcvt.f64.f32	d0, s0
    d210:	vstr	d0, [sp]
    d214:	ldr	r3, [sp]
    d218:	str	r3, [r0]
    d21c:	ldr	r3, [sp, #4]
    d220:	str	r3, [r0, #4]
    d224:	mov	r0, #0
    d228:	add	sp, sp, #8
    d22c:	bx	lr

0000d230 <sas7bdat_write_missing_numeric>:
    d230:	sub	sp, sp, #8
    d234:	mov	r2, #0
    d238:	mov	r3, #0
    d23c:	movt	r3, #32760	; 0x7ff8
    d240:	mvn	r1, #46	; 0x2e
    d244:	bfi	r3, r1, #8, #8
    d248:	strd	r2, [sp]
    d24c:	ldr	r3, [sp]
    d250:	str	r3, [r0]
    d254:	ldr	r3, [sp, #4]
    d258:	str	r3, [r0, #4]
    d25c:	mov	r0, #0
    d260:	add	sp, sp, #8
    d264:	bx	lr

0000d268 <sas7bdat_emit_header_and_meta_pages>:
    d268:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d26c:	strd	r6, [sp, #8]
    d270:	strd	r8, [sp, #16]
    d274:	strd	sl, [sp, #24]
    d278:	str	lr, [sp, #32]
    d27c:	sub	sp, sp, #372	; 0x174
    d280:	mov	r6, r0
    d284:	str	r0, [sp, #176]	; 0xb0
    d288:	ldr	r5, [pc, #1200]	; d740 <sas7bdat_emit_header_and_meta_pages+0x4d8>
    d28c:	add	r5, pc, r5
    d290:	ldr	r4, [r0, #300]	; 0x12c
    d294:	bl	cea4 <sas7bdat_row_length>
    d298:	cmp	r0, #0
    d29c:	beq	d728 <sas7bdat_emit_header_and_meta_pages+0x4c0>
    d2a0:	mov	r0, r6
    d2a4:	ldr	r3, [r6, #16]
    d2a8:	cmp	r3, #0
    d2ac:	bne	d2e4 <sas7bdat_emit_header_and_meta_pages+0x7c>
    d2b0:	ldr	r6, [r4]
    d2b4:	bl	cea4 <sas7bdat_row_length>
    d2b8:	ldr	lr, [r6, #32]
    d2bc:	ldr	r7, [r6, #36]	; 0x24
    d2c0:	ldr	ip, [r6, #40]	; 0x28
    d2c4:	ldr	r1, [r6, #44]	; 0x2c
    d2c8:	mov	r2, r0
    d2cc:	mov	r3, #0
    d2d0:	subs	r0, lr, ip
    d2d4:	sbc	r1, r7, r1
    d2d8:	bl	25ad0 <__aeabi_ldivmod>
    d2dc:	cmp	r0, #0
    d2e0:	beq	d734 <sas7bdat_emit_header_and_meta_pages+0x4cc>
    d2e4:	ldr	r3, [sp, #176]	; 0xb0
    d2e8:	ldr	r2, [r3, #300]	; 0x12c
    d2ec:	ldr	r3, [r2]
    d2f0:	ldr	r2, [r2, #4]
    d2f4:	ldr	r0, [r3, #32]
    d2f8:	ldr	r1, [r3, #40]	; 0x28
    d2fc:	sub	r0, r0, r1
    d300:	ldr	lr, [r3, #48]	; 0x30
    d304:	ldr	r3, [r2]
    d308:	subs	ip, r3, #1
    d30c:	bmi	d4b4 <sas7bdat_emit_header_and_meta_pages+0x24c>
    d310:	ldr	r1, [r2, #16]
    d314:	add	r1, r1, r3, lsl #2
    d318:	mov	r2, r0
    d31c:	mov	r6, #1
    d320:	ldr	r3, [r1, #-4]!
    d324:	ldr	r3, [r3, #8]
    d328:	add	r3, lr, r3
    d32c:	cmp	r3, r2
    d330:	addhi	r6, r6, #1
    d334:	movhi	r2, r0
    d338:	sub	r2, r2, r3
    d33c:	subs	ip, ip, #1
    d340:	bpl	d320 <sas7bdat_emit_header_and_meta_pages+0xb8>
    d344:	ldr	r9, [sp, #176]	; 0xb0
    d348:	ldr	r3, [r9, #16]
    d34c:	cmp	r3, #1
    d350:	moveq	r0, #0
    d354:	beq	d398 <sas7bdat_emit_header_and_meta_pages+0x130>
    d358:	ldr	r7, [r4]
    d35c:	mov	r0, r9
    d360:	bl	cea4 <sas7bdat_row_length>
    d364:	ldr	lr, [r7, #32]
    d368:	ldr	r8, [r7, #36]	; 0x24
    d36c:	ldr	ip, [r7, #40]	; 0x28
    d370:	ldr	r1, [r7, #44]	; 0x2c
    d374:	mov	r2, r0
    d378:	mov	r3, #0
    d37c:	subs	r0, lr, ip
    d380:	sbc	r1, r8, r1
    d384:	bl	25ad0 <__aeabi_ldivmod>
    d388:	sub	r3, r0, #1
    d38c:	ldr	r2, [r9, #80]	; 0x50
    d390:	add	r3, r3, r2
    d394:	sdiv	r0, r3, r0
    d398:	ldr	r3, [r4]
    d39c:	add	r0, r0, r6
    d3a0:	asr	r1, r0, #31
    d3a4:	strd	r0, [r3, #56]	; 0x38
    d3a8:	ldr	r6, [r4]
    d3ac:	mov	r2, #124	; 0x7c
    d3b0:	mov	r1, #0
    d3b4:	add	r0, sp, #232	; 0xe8
    d3b8:	bl	42a4 <memset@plt>
    d3bc:	ldr	r3, [r6, #4]
    d3c0:	cmp	r3, #0
    d3c4:	movne	r3, #51	; 0x33
    d3c8:	moveq	r3, #34	; 0x22
    d3cc:	strb	r3, [sp, #232]	; 0xe8
    d3d0:	mov	r3, #34	; 0x22
    d3d4:	strb	r3, [sp, #235]	; 0xeb
    d3d8:	bl	3ea8 <machine_is_little_endian@plt>
    d3dc:	adds	r0, r0, #0
    d3e0:	movne	r0, #1
    d3e4:	strb	r0, [sp, #237]	; 0xed
    d3e8:	mov	r3, #49	; 0x31
    d3ec:	strb	r3, [sp, #239]	; 0xef
    d3f0:	mov	r3, #20
    d3f4:	strb	r3, [sp, #270]	; 0x10e
    d3f8:	ldr	r1, [pc, #836]	; d744 <sas7bdat_emit_header_and_meta_pages+0x4dc>
    d3fc:	add	r1, pc, r1
    d400:	ldrd	r2, [r1]
    d404:	add	r0, sp, #284	; 0x11c
    d408:	strd	r2, [r0]
    d40c:	ldrd	r2, [r1, #12]
    d410:	add	r1, sp, #356	; 0x164
    d414:	strd	r2, [r1]
    d418:	ldr	r3, [pc, #808]	; d748 <sas7bdat_emit_header_and_meta_pages+0x4e0>
    d41c:	ldr	r3, [r5, r3]
    d420:	add	r4, sp, #200	; 0xc8
    d424:	ldr	r1, [r3]
    d428:	ldr	r2, [r3, #4]
    d42c:	str	r1, [sp, #200]	; 0xc8
    d430:	str	r2, [sp, #204]	; 0xcc
    d434:	ldr	r1, [r3, #8]
    d438:	ldr	r2, [r3, #12]
    d43c:	str	r1, [sp, #208]	; 0xd0
    d440:	str	r2, [sp, #212]	; 0xd4
    d444:	ldr	r1, [r3, #16]
    d448:	ldr	r2, [r3, #20]
    d44c:	str	r1, [sp, #216]	; 0xd8
    d450:	str	r2, [sp, #220]	; 0xdc
    d454:	ldr	r2, [r3, #24]
    d458:	ldr	r3, [r3, #28]
    d45c:	str	r2, [sp, #224]	; 0xe0
    d460:	str	r3, [sp, #228]	; 0xe4
    d464:	mov	r2, #156	; 0x9c
    d468:	add	r1, sp, #208	; 0xd0
    d46c:	mov	r0, sp
    d470:	bl	3f14 <memcpy@plt>
    d474:	ldm	r4, {r2, r3}
    d478:	mov	r1, r6
    d47c:	ldr	r4, [sp, #176]	; 0xb0
    d480:	mov	r0, r4
    d484:	bl	40b8 <sas_write_header@plt>
    d488:	subs	r3, r0, #0
    d48c:	str	r3, [sp, #180]	; 0xb4
    d490:	beq	d4bc <sas7bdat_emit_header_and_meta_pages+0x254>
    d494:	ldr	r0, [sp, #180]	; 0xb4
    d498:	add	sp, sp, #372	; 0x174
    d49c:	ldrd	r4, [sp]
    d4a0:	ldrd	r6, [sp, #8]
    d4a4:	ldrd	r8, [sp, #16]
    d4a8:	ldrd	sl, [sp, #24]
    d4ac:	add	sp, sp, #32
    d4b0:	pop	{pc}		; (ldr pc, [sp], #4)
    d4b4:	mov	r6, #1
    d4b8:	b	d344 <sas7bdat_emit_header_and_meta_pages+0xdc>
    d4bc:	ldr	r3, [r4, #300]	; 0x12c
    d4c0:	ldr	sl, [r3]
    d4c4:	ldr	r9, [r3, #4]
    d4c8:	ldr	r0, [sl, #32]
    d4cc:	bl	410c <malloc@plt>
    d4d0:	mov	fp, r0
    d4d4:	mov	r2, #0
    d4d8:	mov	r3, #0
    d4dc:	strd	r2, [sp, #160]	; 0xa0
    d4e0:	b	d68c <sas7bdat_emit_header_and_meta_pages+0x424>
    d4e4:	sub	r3, r6, r1
    d4e8:	str	r3, [sp, #184]	; 0xb8
    d4ec:	mov	r2, #0
    d4f0:	str	r2, [sp, #188]	; 0xbc
    d4f4:	str	r1, [sp, #192]	; 0xc0
    d4f8:	str	r2, [sp, #196]	; 0xc4
    d4fc:	str	r3, [r4]
    d500:	mov	r3, #0
    d504:	str	r3, [r4, #4]
    d508:	str	r1, [r4, #8]
    d50c:	str	r3, [r4, #12]
    d510:	ldr	r3, [r5, #12]
    d514:	cmp	r3, #0
    d518:	beq	d53c <sas7bdat_emit_header_and_meta_pages+0x2d4>
    d51c:	ldr	r3, [r5, #16]
    d520:	cmp	r3, #0
    d524:	moveq	r3, #0
    d528:	movne	r3, #4
    d52c:	strb	r3, [r4, #16]
    d530:	mov	r3, #1
    d534:	strb	r3, [r4, #17]
    d538:	b	d598 <sas7bdat_emit_header_and_meta_pages+0x330>
    d53c:	ldr	r0, [r5]
    d540:	bl	cb68 <sas7bdat_subheader_type>
    d544:	strb	r0, [r4, #17]
    d548:	cmp	r7, #-16777216	; 0xff000000
    d54c:	bcs	d55c <sas7bdat_emit_header_and_meta_pages+0x2f4>
    d550:	ldr	r3, [r5, #4]
    d554:	str	r7, [r3]
    d558:	b	d598 <sas7bdat_emit_header_and_meta_pages+0x330>
    d55c:	mov	r0, r7
    d560:	asr	r1, r7, #31
    d564:	strd	r0, [sp, #200]	; 0xc8
    d568:	ldr	r3, [r5, #4]
    d56c:	str	r7, [r3]
    d570:	ldr	r2, [sp, #204]	; 0xcc
    d574:	str	r2, [r3, #4]
    d578:	b	d598 <sas7bdat_emit_header_and_meta_pages+0x330>
    d57c:	ldr	r3, [r5, #16]
    d580:	cmp	r3, #0
    d584:	moveq	r3, #0
    d588:	movne	r3, #4
    d58c:	strb	r3, [r4, #8]
    d590:	mov	r3, #1
    d594:	strb	r3, [r4, #9]
    d598:	sub	r7, r8, fp
    d59c:	add	r7, r7, r4
    d5a0:	ldr	r2, [r5, #8]
    d5a4:	sub	r6, r6, r2
    d5a8:	ldr	r1, [r5, #4]
    d5ac:	add	r0, fp, r6
    d5b0:	bl	3f14 <memcpy@plt>
    d5b4:	ldr	r3, [sp, #160]	; 0xa0
    d5b8:	adds	r3, r3, #1
    d5bc:	str	r3, [sp, #160]	; 0xa0
    d5c0:	ldr	r3, [sp, #164]	; 0xa4
    d5c4:	adc	r3, r3, #0
    d5c8:	str	r3, [sp, #164]	; 0xa4
    d5cc:	ldr	r3, [sp, #172]	; 0xac
    d5d0:	add	r3, r3, #1
    d5d4:	sxth	r3, r3
    d5d8:	str	r3, [sp, #172]	; 0xac
    d5dc:	ldrd	r2, [r9]
    d5e0:	ldrd	r0, [sp, #160]	; 0xa0
    d5e4:	cmp	r0, r2
    d5e8:	sbcs	r3, r1, r3
    d5ec:	bge	d658 <sas7bdat_emit_header_and_meta_pages+0x3f0>
    d5f0:	ldr	r2, [r9, #16]
    d5f4:	ldr	r5, [r2, r0, lsl #2]
    d5f8:	ldr	r1, [r5, #8]
    d5fc:	add	r4, r4, r8
    d600:	add	r3, r8, r1
    d604:	sub	r7, r6, r7
    d608:	cmp	r3, r7
    d60c:	bhi	d658 <sas7bdat_emit_header_and_meta_pages+0x3f0>
    d610:	ldr	r7, [r5]
    d614:	ldr	r3, [sl, #4]
    d618:	cmp	r3, #0
    d61c:	bne	d4e4 <sas7bdat_emit_header_and_meta_pages+0x27c>
    d620:	sub	r3, r6, r1
    d624:	str	r3, [r4]
    d628:	str	r1, [r4, #4]
    d62c:	ldr	r3, [r5, #12]
    d630:	cmp	r3, #0
    d634:	bne	d57c <sas7bdat_emit_header_and_meta_pages+0x314>
    d638:	ldr	r0, [r5]
    d63c:	bl	cb68 <sas7bdat_subheader_type>
    d640:	strb	r0, [r4, #9]
    d644:	ldr	r3, [r5, #4]
    d648:	str	r7, [r3]
    d64c:	b	d598 <sas7bdat_emit_header_and_meta_pages+0x330>
    d650:	mov	r3, #0
    d654:	str	r3, [sp, #172]	; 0xac
    d658:	ldr	r3, [sl, #4]
    d65c:	cmp	r3, #0
    d660:	ldrh	r3, [sp, #172]	; 0xac
    d664:	strhne	r3, [fp, #34]	; 0x22
    d668:	strhne	r3, [fp, #36]	; 0x24
    d66c:	strheq	r3, [fp, #18]
    d670:	strheq	r3, [fp, #20]
    d674:	ldr	r2, [sl, #32]
    d678:	mov	r1, fp
    d67c:	ldr	r0, [sp, #176]	; 0xb0
    d680:	bl	4454 <readstat_write_bytes@plt>
    d684:	cmp	r0, #0
    d688:	bne	d720 <sas7bdat_emit_header_and_meta_pages+0x4b8>
    d68c:	ldrd	r2, [r9]
    d690:	ldrd	r0, [sp, #160]	; 0xa0
    d694:	cmp	r0, r2
    d698:	sbcs	r3, r1, r3
    d69c:	bge	d714 <sas7bdat_emit_header_and_meta_pages+0x4ac>
    d6a0:	ldr	r2, [sl, #32]
    d6a4:	mov	r1, #0
    d6a8:	mov	r0, fp
    d6ac:	bl	42a4 <memset@plt>
    d6b0:	ldr	r6, [sl, #32]
    d6b4:	ldr	r4, [sl, #40]	; 0x28
    d6b8:	ldr	r8, [sl, #48]	; 0x30
    d6bc:	add	r3, fp, r4
    d6c0:	mov	r2, #0
    d6c4:	strh	r2, [r3, #-8]
    d6c8:	ldrd	r0, [sp, #160]	; 0xa0
    d6cc:	ldr	r2, [r9, #16]
    d6d0:	ldr	r5, [r2, r0, lsl #2]
    d6d4:	ldr	ip, [r5, #8]
    d6d8:	add	r2, r8, ip
    d6dc:	sub	r3, r6, r4
    d6e0:	cmp	r2, r3
    d6e4:	bhi	d70c <sas7bdat_emit_header_and_meta_pages+0x4a4>
    d6e8:	ldrd	r2, [r9]
    d6ec:	cmp	r0, r2
    d6f0:	sbcs	r3, r1, r3
    d6f4:	bge	d650 <sas7bdat_emit_header_and_meta_pages+0x3e8>
    d6f8:	add	r4, fp, r4
    d6fc:	mov	r3, #0
    d700:	str	r3, [sp, #172]	; 0xac
    d704:	mov	r1, ip
    d708:	b	d610 <sas7bdat_emit_header_and_meta_pages+0x3a8>
    d70c:	mov	r3, #35	; 0x23
    d710:	str	r3, [sp, #180]	; 0xb4
    d714:	mov	r0, fp
    d718:	bl	3eb4 <free@plt>
    d71c:	b	d494 <sas7bdat_emit_header_and_meta_pages+0x22c>
    d720:	str	r0, [sp, #180]	; 0xb4
    d724:	b	d714 <sas7bdat_emit_header_and_meta_pages+0x4ac>
    d728:	mov	r3, #36	; 0x24
    d72c:	str	r3, [sp, #180]	; 0xb4
    d730:	b	d494 <sas7bdat_emit_header_and_meta_pages+0x22c>
    d734:	mov	r3, #35	; 0x23
    d738:	str	r3, [sp, #180]	; 0xb4
    d73c:	b	d494 <sas7bdat_emit_header_and_meta_pages+0x22c>
    d740:	.word	0x00038d6c
    d744:	.word	0x00019500
    d748:	.word	0x000002f4

0000d74c <sas7bdat_end_data>:
    d74c:	str	r4, [sp, #-8]!
    d750:	str	lr, [sp, #4]
    d754:	ldr	r3, [r0, #16]
    d758:	cmp	r3, #1
    d75c:	beq	d778 <sas7bdat_end_data+0x2c>
    d760:	ldr	r3, [r0, #300]	; 0x12c
    d764:	ldr	r1, [r3]
    d768:	bl	4478 <sas_fill_page@plt>
    d76c:	ldr	r4, [sp]
    d770:	add	sp, sp, #4
    d774:	pop	{pc}		; (ldr pc, [sp], #4)
    d778:	bl	d268 <sas7bdat_emit_header_and_meta_pages>
    d77c:	b	d76c <sas7bdat_end_data+0x20>

0000d780 <sas7bdat_begin_data>:
    d780:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d784:	strd	r6, [sp, #8]
    d788:	strd	r8, [sp, #16]
    d78c:	strd	sl, [sp, #24]
    d790:	str	lr, [sp, #32]
    d794:	sub	sp, sp, #84	; 0x54
    d798:	mov	fp, r0
    d79c:	mov	r1, #8
    d7a0:	mov	r0, #1
    d7a4:	bl	3d4c <calloc@plt>
    d7a8:	str	r0, [sp, #16]
    d7ac:	ldr	r1, [fp, #12]
    d7b0:	mov	r0, fp
    d7b4:	bl	434c <sas_header_info_init@plt>
    d7b8:	mov	r4, r0
    d7bc:	mov	r0, fp
    d7c0:	bl	cea4 <sas7bdat_row_length>
    d7c4:	mov	sl, r0
    d7c8:	ldr	r5, [r4, #40]	; 0x28
    d7cc:	mov	lr, r0
    d7d0:	b	d870 <sas7bdat_begin_data+0xf0>
    d7d4:	ldr	r1, [r4, #48]	; 0x30
    d7d8:	ldr	r0, [r4, #52]	; 0x34
    d7dc:	adds	r8, lr, r1
    d7e0:	adc	r9, r0, #0
    d7e4:	mov	r1, #0
    d7e8:	cmp	ip, r8
    d7ec:	sbcs	r1, r1, r9
    d7f0:	bge	d8a8 <sas7bdat_begin_data+0x128>
    d7f4:	b	d860 <sas7bdat_begin_data+0xe0>
    d7f8:	ldrd	r0, [r4, #48]	; 0x30
    d7fc:	strd	r0, [sp, #8]
    d800:	ldr	ip, [fp, #28]
    d804:	lsl	ip, ip, #3
    d808:	add	ip, ip, #20
    d80c:	adds	r0, r0, ip
    d810:	adc	r1, r1, #0
    d814:	ldrd	r6, [sp]
    d818:	cmp	r6, r0
    d81c:	sbcs	r1, r7, r1
    d820:	blt	d860 <sas7bdat_begin_data+0xe0>
    d824:	ldr	ip, [fp, #28]
    d828:	add	ip, ip, ip, lsl #1
    d82c:	lsl	ip, ip, #2
    d830:	add	ip, ip, #20
    d834:	b	d844 <sas7bdat_begin_data+0xc4>
    d838:	ldr	ip, [fp, #28]
    d83c:	lsl	ip, ip, #4
    d840:	add	ip, ip, #28
    d844:	ldrd	r6, [sp, #8]
    d848:	adds	r6, r6, ip
    d84c:	adc	r7, r7, #0
    d850:	ldrd	r0, [sp]
    d854:	cmp	r0, r6
    d858:	sbcs	r1, r1, r7
    d85c:	bge	d8ec <sas7bdat_begin_data+0x16c>
    d860:	adds	r3, r3, r3
    d864:	adc	r2, r2, r2
    d868:	str	r3, [r4, #32]
    d86c:	str	r2, [r4, #36]	; 0x24
    d870:	ldr	r3, [r4, #32]
    d874:	ldr	r2, [r4, #36]	; 0x24
    d878:	sub	ip, r3, r5
    d87c:	ldr	r0, [fp, #16]
    d880:	mov	r1, sl
    d884:	cmp	sl, ip
    d888:	movls	r1, #0
    d88c:	movhi	r1, #1
    d890:	cmp	r0, #0
    d894:	movne	r1, #0
    d898:	cmp	r1, #0
    d89c:	bne	d860 <sas7bdat_begin_data+0xe0>
    d8a0:	cmp	r0, #1
    d8a4:	beq	d7d4 <sas7bdat_begin_data+0x54>
    d8a8:	mov	r6, ip
    d8ac:	mov	r7, #0
    d8b0:	strd	r6, [sp]
    d8b4:	ldr	r1, [r4, #4]
    d8b8:	cmp	r1, #0
    d8bc:	beq	d7f8 <sas7bdat_begin_data+0x78>
    d8c0:	ldrd	r0, [r4, #48]	; 0x30
    d8c4:	strd	r0, [sp, #8]
    d8c8:	ldr	ip, [fp, #28]
    d8cc:	lsl	ip, ip, #3
    d8d0:	add	ip, ip, #28
    d8d4:	adds	r0, r0, ip
    d8d8:	adc	r1, r1, #0
    d8dc:	cmp	r6, r0
    d8e0:	sbcs	r1, r7, r1
    d8e4:	bge	d838 <sas7bdat_begin_data+0xb8>
    d8e8:	b	d860 <sas7bdat_begin_data+0xe0>
    d8ec:	ldr	r3, [sp, #16]
    d8f0:	str	r4, [r3]
    d8f4:	mov	r1, #16
    d8f8:	mov	r0, #1
    d8fc:	bl	3d4c <calloc@plt>
    d900:	mov	r9, r0
    d904:	mov	r2, #1
    d908:	mov	r3, #0
    d90c:	strd	r2, [r0]
    d910:	mov	r0, #4
    d914:	bl	410c <malloc@plt>
    d918:	mov	r6, r0
    d91c:	str	r0, [r9, #8]
    d920:	ldr	r2, [r4, #48]	; 0x30
    d924:	ldr	r5, [r4, #32]
    d928:	sub	r5, r5, #28
    d92c:	ldr	r3, [r4, #40]	; 0x28
    d930:	sub	r5, r5, r3
    d934:	ldr	r3, [r4, #4]
    d938:	cmp	r3, #0
    d93c:	movne	r3, #8
    d940:	moveq	r3, #4
    d944:	sub	r5, r5, r2
    d948:	sub	r5, r5, r3
    d94c:	mov	r1, #24
    d950:	mov	r0, #1
    d954:	bl	3d4c <calloc@plt>
    d958:	mov	r7, r0
    d95c:	mov	r0, r5
    d960:	bl	410c <malloc@plt>
    d964:	str	r0, [r7]
    d968:	str	r5, [r7, #4]
    d96c:	mov	r2, #0
    d970:	mov	r3, #0
    d974:	strd	r2, [r7, #16]
    d978:	str	r7, [r6]
    d97c:	mov	r1, #24
    d980:	mov	r0, #1
    d984:	bl	3d4c <calloc@plt>
    d988:	mov	sl, r0
    d98c:	ldr	r5, [fp, #28]
    d990:	add	r0, r5, #4
    d994:	mov	r2, r0
    d998:	asr	r3, r0, #31
    d99c:	strd	r2, [sl]
    d9a0:	mov	r1, #4
    d9a4:	bl	3d4c <calloc@plt>
    d9a8:	str	r0, [sl, #16]
    d9ac:	ldr	r3, [r4, #4]
    d9b0:	cmp	r3, #0
    d9b4:	lsl	r5, r5, #3
    d9b8:	addne	r5, r5, #28
    d9bc:	movne	r6, #8
    d9c0:	addeq	r5, r5, #20
    d9c4:	moveq	r6, #4
    d9c8:	mov	r1, r6
    d9cc:	mov	r0, r5
    d9d0:	bl	43b8 <sas_subheader_remainder@plt>
    d9d4:	mov	r7, r0
    d9d8:	mov	r1, r5
    d9dc:	mvn	r0, #0
    d9e0:	bl	cbc4 <sas7bdat_subheader_init>
    d9e4:	str	r0, [sp, #28]
    d9e8:	ldr	r3, [r0, #4]
    d9ec:	strh	r7, [r3, r6]
    d9f0:	add	r6, r6, #8
    d9f4:	ldr	r5, [r0, #4]
    d9f8:	add	r5, r5, r6
    d9fc:	ldr	r7, [fp, #28]
    da00:	cmp	r7, #0
    da04:	ble	da5c <sas7bdat_begin_data+0x2dc>
    da08:	mov	r6, #0
    da0c:	add	r8, sp, #72	; 0x48
    da10:	mov	r1, r6
    da14:	mov	r0, fp
    da18:	bl	437c <readstat_get_variable@plt>
    da1c:	bl	4364 <readstat_variable_get_name@plt>
    da20:	mov	r2, r0
    da24:	mov	r1, r9
    da28:	mov	r0, r8
    da2c:	bl	cce4 <sas7bdat_make_text_ref>
    da30:	ldrh	r3, [sp, #72]	; 0x48
    da34:	strh	r3, [r5]
    da38:	ldrh	r3, [sp, #74]	; 0x4a
    da3c:	strh	r3, [r5, #2]
    da40:	ldrh	r3, [sp, #76]	; 0x4c
    da44:	strh	r3, [r5, #4]
    da48:	add	r5, r5, #8
    da4c:	add	r6, r6, #1
    da50:	ldr	r7, [fp, #28]
    da54:	cmp	r6, r7
    da58:	blt	da10 <sas7bdat_begin_data+0x290>
    da5c:	ldr	r3, [r4, #4]
    da60:	cmp	r3, #0
    da64:	beq	dacc <sas7bdat_begin_data+0x34c>
    da68:	lsl	r7, r7, #4
    da6c:	add	r7, r7, #28
    da70:	mov	r5, #8
    da74:	mov	r1, r5
    da78:	mov	r0, r7
    da7c:	bl	43b8 <sas_subheader_remainder@plt>
    da80:	mov	r6, r0
    da84:	mov	r1, r7
    da88:	mvn	r0, #3
    da8c:	bl	cbc4 <sas7bdat_subheader_init>
    da90:	str	r0, [sp, #24]
    da94:	ldr	r3, [r0, #4]
    da98:	strh	r6, [r3, r5]
    da9c:	add	r5, r5, #8
    daa0:	ldr	r3, [r0, #4]
    daa4:	add	r5, r3, r5
    daa8:	mov	r2, #0
    daac:	mov	r3, #0
    dab0:	strd	r2, [sp, #72]	; 0x48
    dab4:	ldr	r3, [fp, #28]
    dab8:	cmp	r3, #0
    dabc:	ble	dba0 <sas7bdat_begin_data+0x420>
    dac0:	mov	r6, #0
    dac4:	str	r9, [sp]
    dac8:	b	db38 <sas7bdat_begin_data+0x3b8>
    dacc:	add	r7, r7, r7, lsl #1
    dad0:	lsl	r7, r7, #2
    dad4:	add	r7, r7, #20
    dad8:	mov	r5, #4
    dadc:	b	da74 <sas7bdat_begin_data+0x2f4>
    dae0:	ldr	r3, [sp, #76]	; 0x4c
    dae4:	ldr	r2, [sp, #72]	; 0x48
    dae8:	str	r2, [r5]
    daec:	str	r3, [r5, #4]
    daf0:	add	r5, r5, #8
    daf4:	mov	r3, r9
    daf8:	cmp	r9, #0
    dafc:	movne	r3, #1
    db00:	strbne	r3, [r5, #6]
    db04:	movne	r0, #8
    db08:	beq	db88 <sas7bdat_begin_data+0x408>
    db0c:	str	r0, [r5]
    db10:	strh	r7, [r5, #4]
    db14:	ldrd	r2, [sp, #72]	; 0x48
    db18:	adds	r8, r2, r0
    db1c:	adc	r9, r3, #0
    db20:	strd	r8, [sp, #72]	; 0x48
    db24:	add	r5, r5, #8
    db28:	add	r6, r6, #1
    db2c:	ldr	r3, [fp, #28]
    db30:	cmp	r6, r3
    db34:	bge	db9c <sas7bdat_begin_data+0x41c>
    db38:	mov	r1, r6
    db3c:	mov	r0, fp
    db40:	bl	437c <readstat_get_variable@plt>
    db44:	mov	r8, r0
    db48:	bl	4364 <readstat_variable_get_name@plt>
    db4c:	mov	r7, r0
    db50:	mov	r0, r8
    db54:	bl	41d8 <readstat_variable_get_type@plt>
    db58:	mov	r9, r0
    db5c:	mov	r0, r7
    db60:	bl	41fc <strlen@plt>
    db64:	cmp	r0, #9
    db68:	movcc	r7, #4
    db6c:	movcs	r7, #2048	; 0x800
    db70:	ldr	r3, [r4, #4]
    db74:	cmp	r3, #0
    db78:	bne	dae0 <sas7bdat_begin_data+0x360>
    db7c:	ldr	r3, [sp, #72]	; 0x48
    db80:	str	r3, [r5], #4
    db84:	b	daf4 <sas7bdat_begin_data+0x374>
    db88:	mov	r3, #2
    db8c:	strb	r3, [r5, #6]
    db90:	mov	r0, r8
    db94:	bl	42c8 <readstat_variable_get_storage_width@plt>
    db98:	b	db0c <sas7bdat_begin_data+0x38c>
    db9c:	ldr	r9, [sp]
    dba0:	ldr	r6, [sl, #16]
    dba4:	ldr	r3, [r4, #4]
    dba8:	cmp	r3, #0
    dbac:	movne	r1, #808	; 0x328
    dbb0:	moveq	r1, #480	; 0x1e0
    dbb4:	movw	r0, #63479	; 0xf7f7
    dbb8:	movt	r0, #63479	; 0xf7f7
    dbbc:	bl	cbc4 <sas7bdat_subheader_init>
    dbc0:	mov	r5, r0
    dbc4:	ldr	r3, [r4, #4]
    dbc8:	cmp	r3, #0
    dbcc:	beq	dcec <sas7bdat_begin_data+0x56c>
    dbd0:	mov	r0, fp
    dbd4:	bl	cea4 <sas7bdat_row_length>
    dbd8:	str	r0, [sp, #48]	; 0x30
    dbdc:	mov	r3, #0
    dbe0:	str	r3, [sp, #52]	; 0x34
    dbe4:	ldr	r2, [fp, #80]	; 0x50
    dbe8:	asr	r3, r2, #31
    dbec:	strd	r2, [sp, #56]	; 0x38
    dbf0:	ldr	r2, [fp, #28]
    dbf4:	asr	r3, r2, #31
    dbf8:	strd	r2, [sp, #64]	; 0x40
    dbfc:	ldrd	r2, [r4, #32]
    dc00:	strd	r2, [sp, #72]	; 0x48
    dc04:	ldr	r3, [r5, #4]
    dc08:	mov	r2, #0
    dc0c:	str	r0, [r3, #40]	; 0x28
    dc10:	str	r2, [r3, #44]	; 0x2c
    dc14:	ldr	r3, [r5, #4]
    dc18:	ldr	r2, [sp, #60]	; 0x3c
    dc1c:	ldr	r1, [sp, #56]	; 0x38
    dc20:	str	r1, [r3, #48]	; 0x30
    dc24:	str	r2, [r3, #52]	; 0x34
    dc28:	ldr	r3, [r5, #4]
    dc2c:	ldr	r2, [sp, #68]	; 0x44
    dc30:	ldr	r1, [sp, #64]	; 0x40
    dc34:	str	r1, [r3, #72]	; 0x48
    dc38:	str	r2, [r3, #76]	; 0x4c
    dc3c:	ldr	r3, [r5, #4]
    dc40:	ldr	r2, [sp, #76]	; 0x4c
    dc44:	ldr	r1, [sp, #72]	; 0x48
    dc48:	str	r1, [r3, #104]	; 0x68
    dc4c:	str	r2, [r3, #108]	; 0x6c
    dc50:	ldr	r1, [r5, #4]
    dc54:	mvn	r3, #0
    dc58:	str	r3, [r1, #128]	; 0x80
    dc5c:	str	r3, [r1, #132]	; 0x84
    dc60:	str	r3, [r1, #136]	; 0x88
    dc64:	str	r3, [r1, #140]	; 0x8c
    dc68:	str	r5, [r6]
    dc6c:	ldr	r5, [sl, #16]
    dc70:	ldr	r3, [r4, #4]
    dc74:	cmp	r3, #0
    dc78:	movne	r1, #24
    dc7c:	moveq	r1, #12
    dc80:	movw	r0, #63222	; 0xf6f6
    dc84:	movt	r0, #63222	; 0xf6f6
    dc88:	bl	cbc4 <sas7bdat_subheader_init>
    dc8c:	ldr	r3, [r4, #4]
    dc90:	cmp	r3, #0
    dc94:	bne	dd34 <sas7bdat_begin_data+0x5b4>
    dc98:	ldr	r3, [r0, #4]
    dc9c:	ldr	r2, [fp, #28]
    dca0:	str	r2, [r3, #4]
    dca4:	str	r0, [r5, #4]
    dca8:	ldr	r5, [fp, #28]
    dcac:	mov	r1, #4
    dcb0:	mov	r0, r5
    dcb4:	bl	3d4c <calloc@plt>
    dcb8:	str	r0, [sp]
    dcbc:	cmp	r5, #0
    dcc0:	ble	de64 <sas7bdat_begin_data+0x6e4>
    dcc4:	sub	r3, r0, #4
    dcc8:	str	r3, [sp, #8]
    dccc:	mov	r3, #0
    dcd0:	movw	r8, #64510	; 0xfbfe
    dcd4:	movt	r8, #65535	; 0xffff
    dcd8:	add	r2, sp, #72	; 0x48
    dcdc:	str	r2, [sp, #20]
    dce0:	str	r8, [sp, #40]	; 0x28
    dce4:	mov	r8, r3
    dce8:	b	ddb0 <sas7bdat_begin_data+0x630>
    dcec:	mov	r0, fp
    dcf0:	bl	cea4 <sas7bdat_row_length>
    dcf4:	ldr	ip, [fp, #80]	; 0x50
    dcf8:	ldr	r1, [fp, #28]
    dcfc:	ldr	r2, [r4, #32]
    dd00:	ldr	r3, [r5, #4]
    dd04:	str	r0, [r3, #20]
    dd08:	ldr	r3, [r5, #4]
    dd0c:	str	ip, [r3, #24]
    dd10:	ldr	r3, [r5, #4]
    dd14:	str	r1, [r3, #36]	; 0x24
    dd18:	ldr	r3, [r5, #4]
    dd1c:	str	r2, [r3, #52]	; 0x34
    dd20:	ldr	r3, [r5, #4]
    dd24:	mvn	r2, #0
    dd28:	str	r2, [r3, #64]	; 0x40
    dd2c:	str	r2, [r3, #68]	; 0x44
    dd30:	b	dc68 <sas7bdat_begin_data+0x4e8>
    dd34:	ldr	r2, [fp, #28]
    dd38:	asr	r3, r2, #31
    dd3c:	strd	r2, [sp, #72]	; 0x48
    dd40:	ldr	r3, [r0, #4]
    dd44:	ldr	r2, [sp, #76]	; 0x4c
    dd48:	ldr	r1, [sp, #72]	; 0x48
    dd4c:	str	r1, [r3, #8]
    dd50:	str	r2, [r3, #12]
    dd54:	b	dca4 <sas7bdat_begin_data+0x524>
    dd58:	mov	r2, r3
    dd5c:	mov	r1, r9
    dd60:	ldr	r0, [sp, #20]
    dd64:	bl	cce4 <sas7bdat_make_text_ref>
    dd68:	ldr	r3, [r5, #4]
    dd6c:	ldrh	r2, [sp, #72]	; 0x48
    dd70:	strh	r2, [r3, r6]
    dd74:	ldr	r3, [r5, #4]
    dd78:	add	r3, r3, r6
    dd7c:	ldrh	r2, [sp, #74]	; 0x4a
    dd80:	strh	r2, [r3, #2]
    dd84:	ldr	r3, [r5, #4]
    dd88:	add	r6, r3, r6
    dd8c:	ldrh	r3, [sp, #76]	; 0x4c
    dd90:	strh	r3, [r6, #4]
    dd94:	ldr	r3, [sp, #8]
    dd98:	str	r5, [r3, #4]!
    dd9c:	str	r3, [sp, #8]
    dda0:	add	r8, r8, #1
    dda4:	ldr	r3, [fp, #28]
    dda8:	cmp	r8, r3
    ddac:	bge	de64 <sas7bdat_begin_data+0x6e4>
    ddb0:	mov	r1, r8
    ddb4:	mov	r0, fp
    ddb8:	bl	437c <readstat_get_variable@plt>
    ddbc:	mov	r6, r0
    ddc0:	ldr	r3, [r4, #4]
    ddc4:	cmp	r3, #0
    ddc8:	movne	r1, #64	; 0x40
    ddcc:	moveq	r1, #52	; 0x34
    ddd0:	ldr	r0, [sp, #40]	; 0x28
    ddd4:	bl	cbc4 <sas7bdat_subheader_init>
    ddd8:	mov	r5, r0
    dddc:	mov	r0, r6
    dde0:	bl	3ed8 <readstat_variable_get_format@plt>
    dde4:	str	r0, [sp, #32]
    dde8:	mov	r0, r6
    ddec:	bl	4400 <readstat_variable_get_label@plt>
    ddf0:	str	r0, [sp, #36]	; 0x24
    ddf4:	ldr	r3, [r4, #4]
    ddf8:	cmp	r3, #0
    ddfc:	movne	r7, #46	; 0x2e
    de00:	moveq	r7, #34	; 0x22
    de04:	movne	r6, #52	; 0x34
    de08:	moveq	r6, #40	; 0x28
    de0c:	ldr	r3, [sp, #32]
    de10:	cmp	r3, #0
    de14:	beq	de54 <sas7bdat_begin_data+0x6d4>
    de18:	mov	r2, r3
    de1c:	mov	r1, r9
    de20:	ldr	r0, [sp, #20]
    de24:	bl	cce4 <sas7bdat_make_text_ref>
    de28:	ldr	r3, [r5, #4]
    de2c:	ldrh	r2, [sp, #72]	; 0x48
    de30:	strh	r2, [r3, r7]
    de34:	ldr	r3, [r5, #4]
    de38:	add	r3, r3, r7
    de3c:	ldrh	r2, [sp, #74]	; 0x4a
    de40:	strh	r2, [r3, #2]
    de44:	ldr	r3, [r5, #4]
    de48:	add	r7, r3, r7
    de4c:	ldrh	r3, [sp, #76]	; 0x4c
    de50:	strh	r3, [r7, #4]
    de54:	ldr	r3, [sp, #36]	; 0x24
    de58:	cmp	r3, #0
    de5c:	bne	dd58 <sas7bdat_begin_data+0x5d8>
    de60:	b	dd94 <sas7bdat_begin_data+0x614>
    de64:	ldr	r1, [sl]
    de68:	ldr	r3, [sl, #4]
    de6c:	ldr	r2, [r9]
    de70:	ldr	r0, [r9, #4]
    de74:	adds	r1, r1, r2
    de78:	adc	r3, r3, r0
    de7c:	str	r1, [sl]
    de80:	str	r3, [sl, #4]
    de84:	lsl	r1, r1, #2
    de88:	ldr	r0, [sl, #16]
    de8c:	bl	3fec <realloc@plt>
    de90:	str	r0, [sl, #16]
    de94:	ldrd	r2, [r9]
    de98:	cmp	r2, #1
    de9c:	sbcs	r3, r3, #0
    dea0:	blt	e0a0 <sas7bdat_begin_data+0x920>
    dea4:	mov	r2, #0
    dea8:	mov	r3, #0
    deac:	str	r4, [sp, #40]	; 0x28
    deb0:	str	sl, [sp, #8]
    deb4:	str	fp, [sp, #44]	; 0x2c
    deb8:	mov	sl, r2
    debc:	mov	fp, r3
    dec0:	lsl	r3, sl, #2
    dec4:	ldr	r2, [r9, #8]
    dec8:	ldr	r8, [r2, r3]
    decc:	add	r2, sl, #3
    ded0:	str	r2, [sp, #20]
    ded4:	add	r3, r3, #8
    ded8:	str	r3, [sp, #32]
    dedc:	ldr	r3, [sp, #8]
    dee0:	ldr	r3, [r3, #16]
    dee4:	str	r3, [sp, #36]	; 0x24
    dee8:	ldr	r3, [sp, #40]	; 0x28
    deec:	ldr	r3, [r3, #4]
    def0:	cmp	r3, #0
    def4:	moveq	r5, #4
    def8:	movne	r5, #8
    defc:	cmp	r8, #0
    df00:	ldrne	r6, [r8, #8]
    df04:	moveq	r6, #0
    df08:	add	r4, r5, #28
    df0c:	add	r6, r4, r6
    df10:	mov	r1, r6
    df14:	mvn	r0, #2
    df18:	bl	cbc4 <sas7bdat_subheader_init>
    df1c:	mov	r7, r0
    df20:	mov	r1, r5
    df24:	mov	r0, r6
    df28:	bl	43b8 <sas_subheader_remainder@plt>
    df2c:	ldr	r3, [r7, #4]
    df30:	strh	r0, [r3, r5]
    df34:	add	r5, r5, #12
    df38:	ldr	r2, [r7, #4]
    df3c:	add	r1, r2, r5
    df40:	movw	r3, #8224	; 0x2020
    df44:	bfi	r3, r3, #16, #16
    df48:	str	r3, [r2, r5]
    df4c:	str	r3, [r1, #4]
    df50:	ldr	r0, [r7, #4]
    df54:	ldr	r2, [r8, #8]
    df58:	ldr	r1, [r8]
    df5c:	add	r0, r0, r4
    df60:	bl	3f14 <memcpy@plt>
    df64:	ldr	r3, [sp, #36]	; 0x24
    df68:	ldr	r2, [sp, #32]
    df6c:	str	r7, [r3, r2]
    df70:	ldrd	r2, [r9]
    df74:	adds	sl, sl, #1
    df78:	adc	fp, fp, #0
    df7c:	cmp	sl, r2
    df80:	sbcs	r1, fp, r3
    df84:	blt	dec0 <sas7bdat_begin_data+0x740>
    df88:	ldr	sl, [sp, #8]
    df8c:	ldr	fp, [sp, #44]	; 0x2c
    df90:	cmp	r2, #1
    df94:	sbcs	r3, r3, #0
    df98:	blt	dfd4 <sas7bdat_begin_data+0x854>
    df9c:	mov	r4, #0
    dfa0:	mov	r5, #0
    dfa4:	ldr	r3, [r9, #8]
    dfa8:	ldr	r6, [r3, r4, lsl #2]
    dfac:	ldr	r0, [r6]
    dfb0:	bl	3eb4 <free@plt>
    dfb4:	mov	r0, r6
    dfb8:	bl	3eb4 <free@plt>
    dfbc:	adds	r4, r4, #1
    dfc0:	adc	r5, r5, #0
    dfc4:	ldrd	r2, [r9]
    dfc8:	cmp	r4, r2
    dfcc:	sbcs	r3, r5, r3
    dfd0:	blt	dfa4 <sas7bdat_begin_data+0x824>
    dfd4:	ldr	r0, [r9, #8]
    dfd8:	bl	3eb4 <free@plt>
    dfdc:	mov	r0, r9
    dfe0:	bl	3eb4 <free@plt>
    dfe4:	ldr	r1, [sp, #20]
    dfe8:	lsl	r3, r1, #2
    dfec:	ldr	r2, [sl, #16]
    dff0:	ldr	r0, [sp, #28]
    dff4:	str	r0, [r2, r1, lsl #2]
    dff8:	ldr	r2, [sl, #16]
    dffc:	add	r2, r2, r3
    e000:	ldr	r1, [sp, #24]
    e004:	str	r1, [r2, #4]
    e008:	ldr	r2, [fp, #28]
    e00c:	cmp	r2, #0
    e010:	ble	e048 <sas7bdat_begin_data+0x8c8>
    e014:	ldr	r2, [sp]
    e018:	sub	r1, r2, #4
    e01c:	sub	r3, r3, r2
    e020:	mov	r2, #0
    e024:	add	r3, r3, #12
    e028:	add	r0, r3, r1
    e02c:	ldr	ip, [sl, #16]
    e030:	ldr	lr, [r1, #4]!
    e034:	str	lr, [ip, r0]
    e038:	add	r2, r2, #1
    e03c:	ldr	r0, [fp, #28]
    e040:	cmp	r2, r0
    e044:	blt	e028 <sas7bdat_begin_data+0x8a8>
    e048:	ldr	r0, [sp]
    e04c:	bl	3eb4 <free@plt>
    e050:	ldrd	r4, [sl]
    e054:	strd	r4, [sl, #8]
    e058:	ldr	r1, [fp, #16]
    e05c:	cmp	r1, #1
    e060:	beq	e0ac <sas7bdat_begin_data+0x92c>
    e064:	ldr	r3, [sp, #16]
    e068:	str	sl, [r3, #4]
    e06c:	str	r3, [fp, #300]	; 0x12c
    e070:	ldr	r3, [fp, #16]
    e074:	cmp	r3, #0
    e078:	movne	r4, #0
    e07c:	beq	e0d0 <sas7bdat_begin_data+0x950>
    e080:	mov	r0, r4
    e084:	add	sp, sp, #84	; 0x54
    e088:	ldrd	r4, [sp]
    e08c:	ldrd	r6, [sp, #8]
    e090:	ldrd	r8, [sp, #16]
    e094:	ldrd	sl, [sp, #24]
    e098:	add	sp, sp, #32
    e09c:	pop	{pc}		; (ldr pc, [sp], #4)
    e0a0:	mov	r3, #2
    e0a4:	str	r3, [sp, #20]
    e0a8:	b	dfd4 <sas7bdat_begin_data+0x854>
    e0ac:	ldr	r1, [fp, #80]	; 0x50
    e0b0:	adds	r2, r4, r1
    e0b4:	adc	r3, r5, r1, asr #31
    e0b8:	strd	r2, [sl, #8]
    e0bc:	lsl	r1, r2, #2
    e0c0:	ldr	r0, [sl, #16]
    e0c4:	bl	3fec <realloc@plt>
    e0c8:	str	r0, [sl, #16]
    e0cc:	b	e064 <sas7bdat_begin_data+0x8e4>
    e0d0:	mov	r0, fp
    e0d4:	bl	d268 <sas7bdat_emit_header_and_meta_pages>
    e0d8:	subs	r4, r0, #0
    e0dc:	beq	e080 <sas7bdat_begin_data+0x900>
    e0e0:	ldr	r5, [fp, #300]	; 0x12c
    e0e4:	cmp	r5, #0
    e0e8:	beq	e080 <sas7bdat_begin_data+0x900>
    e0ec:	ldr	r0, [r5]
    e0f0:	bl	3eb4 <free@plt>
    e0f4:	ldr	r0, [r5, #4]
    e0f8:	bl	cc48 <sas7bdat_subheader_array_free>
    e0fc:	mov	r0, r5
    e100:	bl	3eb4 <free@plt>
    e104:	mov	r3, #0
    e108:	str	r3, [fp, #300]	; 0x12c
    e10c:	b	e080 <sas7bdat_begin_data+0x900>

0000e110 <readstat_begin_writing_sas7bdat>:
    e110:	str	r4, [sp, #-8]!
    e114:	str	lr, [sp, #4]
    e118:	ldr	r3, [pc, #224]	; e200 <readstat_begin_writing_sas7bdat+0xf0>
    e11c:	add	r3, pc, r3
    e120:	ldr	ip, [r0, #8]
    e124:	cmp	ip, #0
    e128:	moveq	ip, #9
    e12c:	streq	ip, [r0, #8]
    e130:	ldr	ip, [pc, #204]	; e204 <readstat_begin_writing_sas7bdat+0xf4>
    e134:	add	ip, pc, ip
    e138:	str	ip, [r0, #292]	; 0x124
    e13c:	ldr	ip, [pc, #196]	; e208 <readstat_begin_writing_sas7bdat+0xf8>
    e140:	add	ip, pc, ip
    e144:	str	ip, [r0, #236]	; 0xec
    e148:	ldr	ip, [pc, #188]	; e20c <readstat_begin_writing_sas7bdat+0xfc>
    e14c:	add	ip, pc, ip
    e150:	str	ip, [r0, #240]	; 0xf0
    e154:	ldr	ip, [pc, #180]	; e210 <readstat_begin_writing_sas7bdat+0x100>
    e158:	add	ip, pc, ip
    e15c:	str	ip, [r0, #244]	; 0xf4
    e160:	ldr	ip, [pc, #172]	; e214 <readstat_begin_writing_sas7bdat+0x104>
    e164:	add	ip, pc, ip
    e168:	str	ip, [r0, #248]	; 0xf8
    e16c:	ldr	ip, [pc, #164]	; e218 <readstat_begin_writing_sas7bdat+0x108>
    e170:	add	ip, pc, ip
    e174:	str	ip, [r0, #252]	; 0xfc
    e178:	ldr	ip, [pc, #156]	; e21c <readstat_begin_writing_sas7bdat+0x10c>
    e17c:	add	ip, pc, ip
    e180:	str	ip, [r0, #256]	; 0x100
    e184:	ldr	ip, [pc, #148]	; e220 <readstat_begin_writing_sas7bdat+0x110>
    e188:	add	ip, pc, ip
    e18c:	str	ip, [r0, #264]	; 0x108
    e190:	ldr	ip, [pc, #140]	; e224 <readstat_begin_writing_sas7bdat+0x114>
    e194:	add	ip, pc, ip
    e198:	str	ip, [r0, #268]	; 0x10c
    e19c:	ldr	ip, [pc, #132]	; e228 <readstat_begin_writing_sas7bdat+0x118>
    e1a0:	add	ip, pc, ip
    e1a4:	str	ip, [r0, #272]	; 0x110
    e1a8:	ldr	ip, [pc, #124]	; e22c <readstat_begin_writing_sas7bdat+0x11c>
    e1ac:	add	ip, pc, ip
    e1b0:	str	ip, [r0, #228]	; 0xe4
    e1b4:	ldr	ip, [pc, #116]	; e230 <readstat_begin_writing_sas7bdat+0x120>
    e1b8:	ldr	r3, [r3, ip]
    e1bc:	str	r3, [r0, #232]	; 0xe8
    e1c0:	ldr	r3, [pc, #108]	; e234 <readstat_begin_writing_sas7bdat+0x124>
    e1c4:	add	r3, pc, r3
    e1c8:	str	r3, [r0, #276]	; 0x114
    e1cc:	ldr	r3, [pc, #100]	; e238 <readstat_begin_writing_sas7bdat+0x128>
    e1d0:	add	r3, pc, r3
    e1d4:	str	r3, [r0, #284]	; 0x11c
    e1d8:	ldr	r3, [pc, #92]	; e23c <readstat_begin_writing_sas7bdat+0x12c>
    e1dc:	add	r3, pc, r3
    e1e0:	str	r3, [r0, #288]	; 0x120
    e1e4:	ldr	r3, [pc, #84]	; e240 <readstat_begin_writing_sas7bdat+0x130>
    e1e8:	add	r3, pc, r3
    e1ec:	str	r3, [r0, #280]	; 0x118
    e1f0:	bl	3f5c <readstat_begin_writing_file@plt>
    e1f4:	ldr	r4, [sp]
    e1f8:	add	sp, sp, #4
    e1fc:	pop	{pc}		; (ldr pc, [sp], #4)
    e200:	.word	0x00037edc
    e204:	.word	0xffffea50
    e208:	.word	0xfffff03c
    e20c:	.word	0xfffff05c
    e210:	.word	0xfffff07c
    e214:	.word	0xfffff09c
    e218:	.word	0xffffea28
    e21c:	.word	0xffffec80
    e220:	.word	0xffffecf8
    e224:	.word	0xfffff094
    e228:	.word	0xffffef7c
    e22c:	.word	0xffffe9c8
    e230:	.word	0x000002f0
    e234:	.word	0xfffff5b4
    e238:	.word	0xfffff574
    e23c:	.word	0xffffead0
    e240:	.word	0xffffed40

0000e244 <sas_rle_is_special_byte>:
    e244:	and	r3, r0, #223	; 0xdf
    e248:	cmp	r3, #0
    e24c:	cmpne	r0, #64	; 0x40
    e250:	moveq	r0, #1
    e254:	movne	r0, #0
    e258:	bx	lr

0000e25c <sas_rle_insert_run>:
    e25c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    e260:	strd	r6, [sp, #8]
    e264:	str	r8, [sp, #16]
    e268:	str	lr, [sp, #20]
    e26c:	mov	r7, r2
    e270:	mov	r4, r3
    e274:	add	r6, r0, r1
    e278:	cmp	r0, #0
    e27c:	beq	e2e0 <sas_rle_insert_run+0x84>
    e280:	mov	r5, r0
    e284:	mov	r8, r1
    e288:	mov	r0, r2
    e28c:	bl	e244 <sas_rle_is_special_byte>
    e290:	cmp	r0, #0
    e294:	beq	e3a0 <sas_rle_insert_run+0x144>
    e298:	cmp	r4, #17
    e29c:	bls	e350 <sas_rle_insert_run+0xf4>
    e2a0:	sub	r3, r4, #17
    e2a4:	lsr	r3, r3, #8
    e2a8:	sub	r4, r4, #17
    e2ac:	uxtb	r4, r4
    e2b0:	cmp	r7, #64	; 0x40
    e2b4:	beq	e310 <sas_rle_insert_run+0xb4>
    e2b8:	cmp	r7, #32
    e2bc:	beq	e33c <sas_rle_insert_run+0xe0>
    e2c0:	cmp	r7, #0
    e2c4:	movne	r0, r6
    e2c8:	bne	e320 <sas_rle_insert_run+0xc4>
    e2cc:	add	r0, r6, #1
    e2d0:	and	r3, r3, #15
    e2d4:	add	r3, r3, #112	; 0x70
    e2d8:	strb	r3, [r5, r8]
    e2dc:	b	e320 <sas_rle_insert_run+0xc4>
    e2e0:	mov	r0, r2
    e2e4:	bl	e244 <sas_rle_is_special_byte>
    e2e8:	cmp	r0, #0
    e2ec:	bne	e300 <sas_rle_insert_run+0xa4>
    e2f0:	cmp	r4, #18
    e2f4:	movhi	r0, #3
    e2f8:	movls	r0, #2
    e2fc:	b	e328 <sas_rle_insert_run+0xcc>
    e300:	cmp	r4, #17
    e304:	movhi	r0, #2
    e308:	movls	r0, #1
    e30c:	b	e328 <sas_rle_insert_run+0xcc>
    e310:	add	r0, r6, #1
    e314:	and	r3, r3, #15
    e318:	add	r3, r3, #80	; 0x50
    e31c:	strb	r3, [r5, r8]
    e320:	strb	r4, [r0], #1
    e324:	sub	r0, r0, r6
    e328:	ldrd	r4, [sp]
    e32c:	ldrd	r6, [sp, #8]
    e330:	ldr	r8, [sp, #16]
    e334:	add	sp, sp, #20
    e338:	pop	{pc}		; (ldr pc, [sp], #4)
    e33c:	add	r0, r6, #1
    e340:	and	r3, r3, #15
    e344:	add	r3, r3, #96	; 0x60
    e348:	strb	r3, [r5, r8]
    e34c:	b	e320 <sas_rle_insert_run+0xc4>
    e350:	cmp	r4, #1
    e354:	movls	r0, r6
    e358:	bls	e324 <sas_rle_insert_run+0xc8>
    e35c:	cmp	r7, #64	; 0x40
    e360:	addeq	r0, r6, #1
    e364:	subeq	r4, r4, #50	; 0x32
    e368:	strbeq	r4, [r5, r8]
    e36c:	beq	e324 <sas_rle_insert_run+0xc8>
    e370:	cmp	r7, #32
    e374:	addeq	r0, r6, #1
    e378:	subeq	r4, r4, #34	; 0x22
    e37c:	strbeq	r4, [r5, r8]
    e380:	beq	e324 <sas_rle_insert_run+0xc8>
    e384:	cmp	r7, #0
    e388:	movne	r0, r6
    e38c:	bne	e324 <sas_rle_insert_run+0xc8>
    e390:	add	r0, r6, #1
    e394:	sub	r4, r4, #18
    e398:	strb	r4, [r5, r8]
    e39c:	b	e324 <sas_rle_insert_run+0xc8>
    e3a0:	cmp	r4, #18
    e3a4:	bls	e3cc <sas_rle_insert_run+0x170>
    e3a8:	sub	r3, r4, #18
    e3ac:	ubfx	r3, r3, #8, #4
    e3b0:	add	r3, r3, #64	; 0x40
    e3b4:	strb	r3, [r5, r8]
    e3b8:	sub	r4, r4, #18
    e3bc:	strb	r4, [r6, #1]
    e3c0:	add	r0, r6, #3
    e3c4:	strb	r7, [r6, #2]
    e3c8:	b	e324 <sas_rle_insert_run+0xc8>
    e3cc:	cmp	r4, #2
    e3d0:	movls	r0, r6
    e3d4:	bls	e324 <sas_rle_insert_run+0xc8>
    e3d8:	sub	r4, r4, #67	; 0x43
    e3dc:	strb	r4, [r5, r8]
    e3e0:	add	r0, r6, #2
    e3e4:	strb	r7, [r6, #1]
    e3e8:	b	e324 <sas_rle_insert_run+0xc8>

0000e3ec <sas_rle_copy_run>:
    e3ec:	strd	r4, [sp, #-32]!	; 0xffffffe0
    e3f0:	strd	r6, [sp, #8]
    e3f4:	strd	r8, [sp, #16]
    e3f8:	str	sl, [sp, #24]
    e3fc:	str	lr, [sp, #28]
    e400:	mov	r5, r3
    e404:	add	r8, r0, r1
    e408:	cmp	r0, #0
    e40c:	beq	e4c0 <sas_rle_copy_run+0xd4>
    e410:	mov	r6, r2
    e414:	movw	r3, #4158	; 0x103e
    e418:	cmp	r5, r3
    e41c:	movls	r2, r8
    e420:	bls	e470 <sas_rle_copy_run+0x84>
    e424:	add	r4, r8, #2
    e428:	mov	sl, #15
    e42c:	mvn	r9, #0
    e430:	movw	r7, #4159	; 0x103f
    e434:	strb	sl, [r4, #-2]
    e438:	strb	r9, [r4, #-1]
    e43c:	mov	r2, r7
    e440:	mov	r1, r6
    e444:	mov	r0, r4
    e448:	bl	3f14 <memcpy@plt>
    e44c:	add	r2, r4, r7
    e450:	add	r6, r6, r7
    e454:	sub	r5, r5, #4096	; 0x1000
    e458:	sub	r5, r5, #63	; 0x3f
    e45c:	add	r4, r4, #4160	; 0x1040
    e460:	add	r4, r4, #1
    e464:	movw	r3, #4158	; 0x103e
    e468:	cmp	r5, r3
    e46c:	bhi	e434 <sas_rle_copy_run+0x48>
    e470:	cmp	r5, #64	; 0x40
    e474:	bls	e50c <sas_rle_copy_run+0x120>
    e478:	sub	r3, r5, #64	; 0x40
    e47c:	ubfx	r3, r3, #8, #4
    e480:	mov	r4, r2
    e484:	strb	r3, [r4], #2
    e488:	sub	r3, r5, #64	; 0x40
    e48c:	strb	r3, [r2, #1]
    e490:	mov	r2, r5
    e494:	mov	r1, r6
    e498:	mov	r0, r4
    e49c:	bl	3f14 <memcpy@plt>
    e4a0:	add	r5, r4, r5
    e4a4:	sub	r0, r5, r8
    e4a8:	ldrd	r4, [sp]
    e4ac:	ldrd	r6, [sp, #8]
    e4b0:	ldrd	r8, [sp, #16]
    e4b4:	ldr	sl, [sp, #24]
    e4b8:	add	sp, sp, #28
    e4bc:	pop	{pc}		; (ldr pc, [sp], #4)
    e4c0:	movw	r3, #4158	; 0x103e
    e4c4:	cmp	r5, r3
    e4c8:	bls	e504 <sas_rle_copy_run+0x118>
    e4cc:	mov	r3, #0
    e4d0:	movw	r1, #4161	; 0x1041
    e4d4:	movw	r2, #4158	; 0x103e
    e4d8:	add	r3, r3, r1
    e4dc:	sub	r5, r5, #4096	; 0x1000
    e4e0:	sub	r5, r5, #63	; 0x3f
    e4e4:	cmp	r5, r2
    e4e8:	bhi	e4d8 <sas_rle_copy_run+0xec>
    e4ec:	add	r0, r3, r5
    e4f0:	cmp	r5, #64	; 0x40
    e4f4:	addhi	r0, r0, #1
    e4f8:	cmp	r5, #0
    e4fc:	addne	r0, r0, #1
    e500:	b	e4a8 <sas_rle_copy_run+0xbc>
    e504:	mov	r3, #0
    e508:	b	e4ec <sas_rle_copy_run+0x100>
    e50c:	cmp	r5, #48	; 0x30
    e510:	bls	e524 <sas_rle_copy_run+0x138>
    e514:	mov	r4, r2
    e518:	add	r3, r5, #127	; 0x7f
    e51c:	strb	r3, [r4], #1
    e520:	b	e490 <sas_rle_copy_run+0xa4>
    e524:	cmp	r5, #32
    e528:	bls	e53c <sas_rle_copy_run+0x150>
    e52c:	mov	r4, r2
    e530:	add	r3, r5, #127	; 0x7f
    e534:	strb	r3, [r4], #1
    e538:	b	e490 <sas_rle_copy_run+0xa4>
    e53c:	cmp	r5, #16
    e540:	bls	e554 <sas_rle_copy_run+0x168>
    e544:	mov	r4, r2
    e548:	add	r3, r5, #127	; 0x7f
    e54c:	strb	r3, [r4], #1
    e550:	b	e490 <sas_rle_copy_run+0xa4>
    e554:	cmp	r5, #0
    e558:	mov	r4, r2
    e55c:	addne	r3, r5, #127	; 0x7f
    e560:	strbne	r3, [r4], #1
    e564:	b	e490 <sas_rle_copy_run+0xa4>

0000e568 <sas_rle_decompress>:
    e568:	strd	r4, [sp, #-32]!	; 0xffffffe0
    e56c:	strd	r6, [sp, #8]
    e570:	strd	r8, [sp, #16]
    e574:	str	sl, [sp, #24]
    e578:	str	lr, [sp, #28]
    e57c:	mov	r6, r0
    e580:	mov	r8, r1
    e584:	mov	r4, r2
    e588:	mov	r0, #0
    e58c:	add	r5, r2, r3
    e590:	ldr	r7, [pc, #480]	; e778 <sas_rle_decompress+0x210>
    e594:	add	r7, pc, r7
    e598:	mov	r9, r0
    e59c:	b	e5e0 <sas_rle_decompress+0x78>
    e5a0:	add	r1, r4, #2
    e5a4:	ldrb	r2, [r4, #1]
    e5a8:	add	r2, r2, #64	; 0x40
    e5ac:	add	r3, r2, r3, lsl #8
    e5b0:	mov	r2, r3
    e5b4:	add	sl, r3, r0
    e5b8:	cmp	sl, r8
    e5bc:	bhi	e770 <sas_rle_decompress+0x208>
    e5c0:	add	r4, r1, r3
    e5c4:	cmp	r4, r5
    e5c8:	bhi	e760 <sas_rle_decompress+0x1f8>
    e5cc:	cmp	r6, #0
    e5d0:	beq	e5dc <sas_rle_decompress+0x74>
    e5d4:	add	r0, r6, r0
    e5d8:	bl	3f14 <memcpy@plt>
    e5dc:	mov	r0, sl
    e5e0:	cmp	r5, r4
    e5e4:	bls	e748 <sas_rle_decompress+0x1e0>
    e5e8:	mov	r1, r4
    e5ec:	ldrb	r3, [r1], #1
    e5f0:	lsr	ip, r3, #4
    e5f4:	and	r3, r3, #15
    e5f8:	ldr	r2, [r7, ip, lsl #2]
    e5fc:	add	r2, r1, r2
    e600:	cmp	r5, r2
    e604:	bcc	e744 <sas_rle_decompress+0x1dc>
    e608:	cmp	ip, #15
    e60c:	addls	pc, pc, ip, lsl #2
    e610:	b	e73c <sas_rle_decompress+0x1d4>
    e614:	b	e5a0 <sas_rle_decompress+0x38>
    e618:	b	e73c <sas_rle_decompress+0x1d4>
    e61c:	b	e73c <sas_rle_decompress+0x1d4>
    e620:	b	e73c <sas_rle_decompress+0x1d4>
    e624:	b	e654 <sas_rle_decompress+0xec>
    e628:	b	e694 <sas_rle_decompress+0x12c>
    e62c:	b	e6ac <sas_rle_decompress+0x144>
    e630:	b	e6c4 <sas_rle_decompress+0x15c>
    e634:	b	e6dc <sas_rle_decompress+0x174>
    e638:	b	e6e4 <sas_rle_decompress+0x17c>
    e63c:	b	e6ec <sas_rle_decompress+0x184>
    e640:	b	e6f4 <sas_rle_decompress+0x18c>
    e644:	b	e6fc <sas_rle_decompress+0x194>
    e648:	b	e70c <sas_rle_decompress+0x1a4>
    e64c:	b	e71c <sas_rle_decompress+0x1b4>
    e650:	b	e72c <sas_rle_decompress+0x1c4>
    e654:	ldrb	r2, [r4, #1]
    e658:	add	r2, r2, #18
    e65c:	add	r3, r2, r3, lsl #8
    e660:	ldrb	r1, [r4, #2]
    e664:	add	r4, r4, #3
    e668:	mov	r2, r3
    e66c:	add	sl, r3, r0
    e670:	cmp	sl, r8
    e674:	bhi	e768 <sas_rle_decompress+0x200>
    e678:	cmp	r6, #0
    e67c:	moveq	r0, sl
    e680:	beq	e5e0 <sas_rle_decompress+0x78>
    e684:	add	r0, r6, r0
    e688:	bl	42a4 <memset@plt>
    e68c:	mov	r0, sl
    e690:	b	e5e0 <sas_rle_decompress+0x78>
    e694:	ldrb	r2, [r4, #1]
    e698:	add	r2, r2, #17
    e69c:	add	r3, r2, r3, lsl #8
    e6a0:	add	r4, r4, #2
    e6a4:	mov	r1, #64	; 0x40
    e6a8:	b	e668 <sas_rle_decompress+0x100>
    e6ac:	ldrb	r2, [r4, #1]
    e6b0:	add	r2, r2, #17
    e6b4:	add	r3, r2, r3, lsl #8
    e6b8:	add	r4, r4, #2
    e6bc:	mov	r1, #32
    e6c0:	b	e668 <sas_rle_decompress+0x100>
    e6c4:	ldrb	r2, [r4, #1]
    e6c8:	add	r2, r2, #17
    e6cc:	add	r3, r2, r3, lsl #8
    e6d0:	add	r4, r4, #2
    e6d4:	mov	r1, r9
    e6d8:	b	e668 <sas_rle_decompress+0x100>
    e6dc:	add	r3, r3, #1
    e6e0:	b	e5b0 <sas_rle_decompress+0x48>
    e6e4:	add	r3, r3, #17
    e6e8:	b	e5b0 <sas_rle_decompress+0x48>
    e6ec:	add	r3, r3, #33	; 0x21
    e6f0:	b	e5b0 <sas_rle_decompress+0x48>
    e6f4:	add	r3, r3, #49	; 0x31
    e6f8:	b	e5b0 <sas_rle_decompress+0x48>
    e6fc:	ldrb	r1, [r4, #1]
    e700:	add	r3, r3, #3
    e704:	add	r4, r4, #2
    e708:	b	e668 <sas_rle_decompress+0x100>
    e70c:	add	r3, r3, #2
    e710:	mov	r4, r1
    e714:	mov	r1, #64	; 0x40
    e718:	b	e668 <sas_rle_decompress+0x100>
    e71c:	add	r3, r3, #2
    e720:	mov	r4, r1
    e724:	mov	r1, #32
    e728:	b	e668 <sas_rle_decompress+0x100>
    e72c:	add	r3, r3, #2
    e730:	mov	r4, r1
    e734:	mov	r1, r9
    e738:	b	e668 <sas_rle_decompress+0x100>
    e73c:	mov	r4, r1
    e740:	b	e5e0 <sas_rle_decompress+0x78>
    e744:	mvn	r0, #0
    e748:	ldrd	r4, [sp]
    e74c:	ldrd	r6, [sp, #8]
    e750:	ldrd	r8, [sp, #16]
    e754:	ldr	sl, [sp, #24]
    e758:	add	sp, sp, #28
    e75c:	pop	{pc}		; (ldr pc, [sp], #4)
    e760:	mvn	r0, #0
    e764:	b	e748 <sas_rle_decompress+0x1e0>
    e768:	mvn	r0, #0
    e76c:	b	e748 <sas_rle_decompress+0x1e0>
    e770:	mvn	r0, #0
    e774:	b	e748 <sas_rle_decompress+0x1e0>
    e778:	.word	0x00018380

0000e77c <sas_rle_decompressed_len>:
    e77c:	str	r4, [sp, #-8]!
    e780:	str	lr, [sp, #4]
    e784:	mov	r3, r1
    e788:	mov	r2, r0
    e78c:	mov	r1, #0
    e790:	mov	r0, r1
    e794:	bl	4070 <sas_rle_decompress@plt>
    e798:	ldr	r4, [sp]
    e79c:	add	sp, sp, #4
    e7a0:	pop	{pc}		; (ldr pc, [sp], #4)

0000e7a4 <sas_rle_compress>:
    e7a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
    e7a8:	strd	r6, [sp, #8]
    e7ac:	strd	r8, [sp, #16]
    e7b0:	strd	sl, [sp, #24]
    e7b4:	str	lr, [sp, #32]
    e7b8:	sub	sp, sp, #20
    e7bc:	str	r0, [sp, #12]
    e7c0:	str	r2, [sp, #8]
    e7c4:	add	r8, r2, r3
    e7c8:	cmp	r2, r8
    e7cc:	movcs	r7, #0
    e7d0:	movcs	sl, r7
    e7d4:	movcs	fp, r7
    e7d8:	movcs	r6, r7
    e7dc:	bcs	e8a4 <sas_rle_compress+0x100>
    e7e0:	ldr	r4, [sp, #8]
    e7e4:	ldrb	r7, [r4], #1
    e7e8:	mov	sl, #0
    e7ec:	mov	fp, sl
    e7f0:	mov	r6, #1
    e7f4:	movw	r9, #4111	; 0x100f
    e7f8:	b	e81c <sas_rle_compress+0x78>
    e7fc:	cmp	r6, #2
    e800:	movls	r3, #0
    e804:	movhi	r3, #1
    e808:	cmp	r3, #0
    e80c:	addeq	fp, fp, r6
    e810:	moveq	r6, #1
    e814:	bne	e85c <sas_rle_compress+0xb8>
    e818:	mov	r7, r5
    e81c:	str	r4, [sp, #4]
    e820:	cmp	r8, r4
    e824:	beq	e8a4 <sas_rle_compress+0x100>
    e828:	ldrb	r5, [r4], #1
    e82c:	cmp	r6, r9
    e830:	cmpls	r5, r7
    e834:	addeq	r6, r6, #1
    e838:	beq	e818 <sas_rle_compress+0x74>
    e83c:	mov	r0, r7
    e840:	bl	e244 <sas_rle_is_special_byte>
    e844:	cmp	r0, #0
    e848:	beq	e7fc <sas_rle_compress+0x58>
    e84c:	cmp	r6, #1
    e850:	movls	r3, #0
    e854:	movhi	r3, #1
    e858:	b	e808 <sas_rle_compress+0x64>
    e85c:	mov	r3, fp
    e860:	ldr	r2, [sp, #8]
    e864:	mov	r1, sl
    e868:	ldr	fp, [sp, #12]
    e86c:	mov	r0, fp
    e870:	bl	e3ec <sas_rle_copy_run>
    e874:	add	sl, sl, r0
    e878:	mov	r3, r6
    e87c:	mov	r2, r7
    e880:	mov	r1, sl
    e884:	mov	r0, fp
    e888:	bl	e25c <sas_rle_insert_run>
    e88c:	add	sl, sl, r0
    e890:	ldr	r3, [sp, #4]
    e894:	str	r3, [sp, #8]
    e898:	mov	fp, #0
    e89c:	mov	r6, #1
    e8a0:	b	e818 <sas_rle_compress+0x74>
    e8a4:	mov	r0, r7
    e8a8:	bl	e244 <sas_rle_is_special_byte>
    e8ac:	cmp	r0, #0
    e8b0:	bne	e918 <sas_rle_compress+0x174>
    e8b4:	cmp	r6, #2
    e8b8:	movls	r3, #0
    e8bc:	movhi	r3, #1
    e8c0:	cmp	r3, #0
    e8c4:	beq	e928 <sas_rle_compress+0x184>
    e8c8:	mov	r3, fp
    e8cc:	ldr	r2, [sp, #8]
    e8d0:	mov	r1, sl
    e8d4:	ldr	r4, [sp, #12]
    e8d8:	mov	r0, r4
    e8dc:	bl	e3ec <sas_rle_copy_run>
    e8e0:	add	sl, r0, sl
    e8e4:	mov	r3, r6
    e8e8:	mov	r2, r7
    e8ec:	mov	r1, sl
    e8f0:	mov	r0, r4
    e8f4:	bl	e25c <sas_rle_insert_run>
    e8f8:	add	r0, sl, r0
    e8fc:	add	sp, sp, #20
    e900:	ldrd	r4, [sp]
    e904:	ldrd	r6, [sp, #8]
    e908:	ldrd	r8, [sp, #16]
    e90c:	ldrd	sl, [sp, #24]
    e910:	add	sp, sp, #32
    e914:	pop	{pc}		; (ldr pc, [sp], #4)
    e918:	cmp	r6, #1
    e91c:	movls	r3, #0
    e920:	movhi	r3, #1
    e924:	b	e8c0 <sas_rle_compress+0x11c>
    e928:	add	r3, r6, fp
    e92c:	ldr	r2, [sp, #8]
    e930:	mov	r1, sl
    e934:	ldr	r0, [sp, #12]
    e938:	bl	e3ec <sas_rle_copy_run>
    e93c:	add	r0, r0, sl
    e940:	b	e8fc <sas_rle_compress+0x158>

0000e944 <sas_rle_compressed_len>:
    e944:	str	r4, [sp, #-8]!
    e948:	str	lr, [sp, #4]
    e94c:	mov	r3, r1
    e950:	mov	r2, r0
    e954:	mov	r1, #0
    e958:	mov	r0, r1
    e95c:	bl	44d8 <sas_rle_compress@plt>
    e960:	ldr	r4, [sp]
    e964:	add	sp, sp, #4
    e968:	pop	{pc}		; (ldr pc, [sp], #4)

0000e96c <xport_namestr_bswap>:
    e96c:	str	r4, [sp, #-8]!
    e970:	str	lr, [sp, #4]
    e974:	mov	r4, r0
    e978:	bl	3ea8 <machine_is_little_endian@plt>
    e97c:	cmp	r0, #0
    e980:	bne	e990 <xport_namestr_bswap+0x24>
    e984:	ldr	r4, [sp]
    e988:	add	sp, sp, #4
    e98c:	pop	{pc}		; (ldr pc, [sp], #4)
    e990:	ldrh	r0, [r4]
    e994:	bl	3e9c <byteswap2@plt>
    e998:	strh	r0, [r4]
    e99c:	ldrh	r0, [r4, #2]
    e9a0:	bl	3e9c <byteswap2@plt>
    e9a4:	strh	r0, [r4, #2]
    e9a8:	ldrh	r0, [r4, #4]
    e9ac:	bl	3e9c <byteswap2@plt>
    e9b0:	strh	r0, [r4, #4]
    e9b4:	ldrh	r0, [r4, #6]
    e9b8:	bl	3e9c <byteswap2@plt>
    e9bc:	strh	r0, [r4, #6]
    e9c0:	ldrh	r0, [r4, #64]	; 0x40
    e9c4:	bl	3e9c <byteswap2@plt>
    e9c8:	strh	r0, [r4, #64]	; 0x40
    e9cc:	ldrh	r0, [r4, #66]	; 0x42
    e9d0:	bl	3e9c <byteswap2@plt>
    e9d4:	strh	r0, [r4, #66]	; 0x42
    e9d8:	ldrh	r0, [r4, #68]	; 0x44
    e9dc:	bl	3e9c <byteswap2@plt>
    e9e0:	strh	r0, [r4, #68]	; 0x44
    e9e4:	ldrh	r0, [r4, #80]	; 0x50
    e9e8:	bl	3e9c <byteswap2@plt>
    e9ec:	strh	r0, [r4, #80]	; 0x50
    e9f0:	ldrh	r0, [r4, #82]	; 0x52
    e9f4:	bl	3e9c <byteswap2@plt>
    e9f8:	strh	r0, [r4, #82]	; 0x52
    e9fc:	ldr	r0, [r4, #84]	; 0x54
    ea00:	bl	3d88 <byteswap4@plt>
    ea04:	str	r0, [r4, #84]	; 0x54
    ea08:	ldrh	r0, [r4, #120]	; 0x78
    ea0c:	bl	3e9c <byteswap2@plt>
    ea10:	strh	r0, [r4, #120]	; 0x78
    ea14:	b	e984 <xport_namestr_bswap+0x18>

0000ea18 <read_bytes>:
    ea18:	str	r4, [sp, #-8]!
    ea1c:	str	lr, [sp, #4]
    ea20:	mov	ip, r1
    ea24:	mov	r1, r2
    ea28:	ldr	r3, [r0, #52]	; 0x34
    ea2c:	ldr	r4, [r3, #12]
    ea30:	ldr	r2, [r3, #20]
    ea34:	mov	r0, ip
    ea38:	blx	r4
    ea3c:	ldr	r4, [sp]
    ea40:	add	sp, sp, #4
    ea44:	pop	{pc}		; (ldr pc, [sp], #4)

0000ea48 <xport_skip_rest_of_record>:
    ea48:	strd	r4, [sp, #-16]!
    ea4c:	str	r6, [sp, #8]
    ea50:	str	lr, [sp, #12]
    ea54:	ldr	r4, [r0, #52]	; 0x34
    ea58:	ldr	r3, [r4, #8]
    ea5c:	ldr	r2, [r4, #20]
    ea60:	mov	r1, #1
    ea64:	mov	r0, #0
    ea68:	blx	r3
    ea6c:	cmn	r0, #1
    ea70:	beq	eac8 <xport_skip_rest_of_record+0x80>
    ea74:	movw	r3, #26215	; 0x6667
    ea78:	movt	r3, #26214	; 0x6666
    ea7c:	smull	r3, r2, r3, r0
    ea80:	asr	r3, r0, #31
    ea84:	rsb	r3, r3, r2, asr #5
    ea88:	add	r3, r3, r3, lsl #2
    ea8c:	subs	r3, r0, r3, lsl #4
    ea90:	moveq	r0, #0
    ea94:	beq	eab8 <xport_skip_rest_of_record+0x70>
    ea98:	ldr	r5, [r4, #8]
    ea9c:	ldr	r2, [r4, #20]
    eaa0:	mov	r1, #1
    eaa4:	rsb	r0, r3, #80	; 0x50
    eaa8:	blx	r5
    eaac:	cmn	r0, #1
    eab0:	movne	r0, #0
    eab4:	moveq	r0, #15
    eab8:	ldrd	r4, [sp]
    eabc:	ldr	r6, [sp, #8]
    eac0:	add	sp, sp, #12
    eac4:	pop	{pc}		; (ldr pc, [sp], #4)
    eac8:	mov	r0, #15
    eacc:	b	eab8 <xport_skip_rest_of_record+0x70>

0000ead0 <xport_read_record>:
    ead0:	str	r4, [sp, #-8]!
    ead4:	str	lr, [sp, #4]
    ead8:	mov	r4, r1
    eadc:	mov	r2, #80	; 0x50
    eae0:	bl	ea18 <read_bytes>
    eae4:	cmp	r0, #79	; 0x4f
    eae8:	movgt	r0, #0
    eaec:	strbgt	r0, [r4, #80]	; 0x50
    eaf0:	movle	r0, #2
    eaf4:	ldr	r4, [sp]
    eaf8:	add	sp, sp, #4
    eafc:	pop	{pc}		; (ldr pc, [sp], #4)

0000eb00 <xport_read_header_record>:
    eb00:	strd	r4, [sp, #-12]!
    eb04:	str	lr, [sp, #8]
    eb08:	sub	sp, sp, #116	; 0x74
    eb0c:	mov	r4, r1
    eb10:	add	r1, sp, #28
    eb14:	bl	ead0 <xport_read_record>
    eb18:	subs	r5, r0, #0
    eb1c:	beq	eb34 <xport_read_header_record+0x34>
    eb20:	mov	r0, r5
    eb24:	add	sp, sp, #116	; 0x74
    eb28:	ldrd	r4, [sp]
    eb2c:	add	sp, sp, #8
    eb30:	pop	{pc}		; (ldr pc, [sp], #4)
    eb34:	mov	r2, #36	; 0x24
    eb38:	mov	r1, #0
    eb3c:	mov	r0, r4
    eb40:	bl	42a4 <memset@plt>
    eb44:	add	r3, r4, #32
    eb48:	str	r3, [sp, #16]
    eb4c:	add	r3, r4, #28
    eb50:	str	r3, [sp, #12]
    eb54:	add	r3, r4, #24
    eb58:	str	r3, [sp, #8]
    eb5c:	add	r3, r4, #20
    eb60:	str	r3, [sp, #4]
    eb64:	add	r3, r4, #16
    eb68:	str	r3, [sp]
    eb6c:	add	r3, r4, #12
    eb70:	mov	r2, r4
    eb74:	ldr	r1, [pc, #20]	; eb90 <xport_read_header_record+0x90>
    eb78:	add	r1, pc, r1
    eb7c:	add	r0, sp, #28
    eb80:	bl	428c <__isoc99_sscanf@plt>
    eb84:	cmp	r0, #1
    eb88:	movle	r5, #5
    eb8c:	b	eb20 <xport_read_header_record+0x20>
    eb90:	.word	0x00017ddc

0000eb94 <xport_expect_header_record>:
    eb94:	strd	r4, [sp, #-20]!	; 0xffffffec
    eb98:	strd	r6, [sp, #8]
    eb9c:	str	lr, [sp, #16]
    eba0:	sub	sp, sp, #44	; 0x2c
    eba4:	mov	r5, r0
    eba8:	mov	r6, r1
    ebac:	mov	r7, r2
    ebb0:	add	r1, sp, #4
    ebb4:	bl	eb00 <xport_read_header_record>
    ebb8:	subs	r4, r0, #0
    ebbc:	bne	ebd4 <xport_expect_header_record+0x40>
    ebc0:	ldr	r3, [r5, #380]	; 0x17c
    ebc4:	cmp	r3, #5
    ebc8:	beq	ebec <xport_expect_header_record+0x58>
    ebcc:	cmp	r3, #8
    ebd0:	beq	ec04 <xport_expect_header_record+0x70>
    ebd4:	mov	r0, r4
    ebd8:	add	sp, sp, #44	; 0x2c
    ebdc:	ldrd	r4, [sp]
    ebe0:	ldrd	r6, [sp, #8]
    ebe4:	add	sp, sp, #16
    ebe8:	pop	{pc}		; (ldr pc, [sp], #4)
    ebec:	mov	r1, r6
    ebf0:	add	r0, sp, #4
    ebf4:	bl	3df4 <strcmp@plt>
    ebf8:	cmp	r0, #0
    ebfc:	movne	r4, #5
    ec00:	b	ebd4 <xport_expect_header_record+0x40>
    ec04:	mov	r1, r7
    ec08:	add	r0, sp, #4
    ec0c:	bl	3df4 <strcmp@plt>
    ec10:	cmp	r0, #0
    ec14:	movne	r4, #5
    ec18:	b	ebd4 <xport_expect_header_record+0x40>

0000ec1c <xport_construct_format>:
    ec1c:	strd	r4, [sp, #-24]!	; 0xffffffe8
    ec20:	strd	r6, [sp, #8]
    ec24:	str	fp, [sp, #16]
    ec28:	str	lr, [sp, #20]
    ec2c:	add	fp, sp, #20
    ec30:	sub	sp, sp, #8
    ec34:	mov	r6, r0
    ec38:	mov	r7, r1
    ec3c:	lsl	r1, r3, #2
    ec40:	add	r0, r1, #8
    ec44:	bic	r0, r0, #7
    ec48:	sub	sp, sp, r0
    ec4c:	mov	r4, sp
    ec50:	mov	r0, #0
    ec54:	str	r0, [r4], #8
    ec58:	add	r1, r1, #1
    ec5c:	mov	r0, r4
    ec60:	bl	4238 <readstat_convert@plt>
    ec64:	subs	r5, r0, #0
    ec68:	bne	ecb0 <xport_construct_format+0x94>
    ec6c:	ldrb	r3, [sp, #8]
    ec70:	cmp	r3, #0
    ec74:	strbeq	r3, [r6]
    ec78:	beq	ecb0 <xport_construct_format+0x94>
    ec7c:	ldr	r3, [fp, #8]
    ec80:	cmp	r3, #0
    ec84:	bne	eccc <xport_construct_format+0xb0>
    ec88:	ldr	r3, [fp, #4]
    ec8c:	cmp	r3, #0
    ec90:	beq	ecf4 <xport_construct_format+0xd8>
    ec94:	str	r3, [sp]
    ec98:	mov	r3, r4
    ec9c:	ldr	r2, [pc, #108]	; ed10 <xport_construct_format+0xf4>
    eca0:	add	r2, pc, r2
    eca4:	mov	r1, r7
    eca8:	mov	r0, r6
    ecac:	bl	4280 <snprintf@plt>
    ecb0:	mov	r0, r5
    ecb4:	sub	sp, fp, #20
    ecb8:	ldrd	r4, [sp]
    ecbc:	ldrd	r6, [sp, #8]
    ecc0:	ldr	fp, [sp, #16]
    ecc4:	add	sp, sp, #20
    ecc8:	pop	{pc}		; (ldr pc, [sp], #4)
    eccc:	str	r3, [sp, #4]
    ecd0:	ldr	r3, [fp, #4]
    ecd4:	str	r3, [sp]
    ecd8:	mov	r3, r4
    ecdc:	ldr	r2, [pc, #48]	; ed14 <xport_construct_format+0xf8>
    ece0:	add	r2, pc, r2
    ece4:	mov	r1, r7
    ece8:	mov	r0, r6
    ecec:	bl	4280 <snprintf@plt>
    ecf0:	b	ecb0 <xport_construct_format+0x94>
    ecf4:	mov	r3, r4
    ecf8:	ldr	r2, [pc, #24]	; ed18 <xport_construct_format+0xfc>
    ecfc:	add	r2, pc, r2
    ed00:	mov	r1, r7
    ed04:	mov	r0, r6
    ed08:	bl	4280 <snprintf@plt>
    ed0c:	b	ecb0 <xport_construct_format+0x94>
    ed10:	.word	0x00017d04
    ed14:	.word	0x00017cbc
    ed18:	.word	0x000178f0

0000ed1c <xport_process_row>:
    ed1c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    ed20:	strd	r6, [sp, #8]
    ed24:	strd	r8, [sp, #16]
    ed28:	strd	sl, [sp, #24]
    ed2c:	str	lr, [sp, #32]
    ed30:	vpush	{d8}
    ed34:	sub	sp, sp, #60	; 0x3c
    ed38:	mov	r5, r0
    ed3c:	ldr	r3, [r0, #64]	; 0x40
    ed40:	cmp	r3, #0
    ed44:	ble	ef30 <xport_process_row+0x214>
    ed48:	mov	r9, r1
    ed4c:	mov	fp, #0
    ed50:	mov	r7, fp
    ed54:	mov	r4, fp
    ed58:	vldr	d8, [pc, #568]	; ef98 <xport_process_row+0x27c>
    ed5c:	add	r3, sp, #33	; 0x21
    ed60:	str	r3, [sp, #20]
    ed64:	b	ee8c <xport_process_row+0x170>
    ed68:	ldr	r1, [r6, #1596]	; 0x63c
    ed6c:	lsl	r1, r1, #2
    ed70:	add	r1, r1, #1
    ed74:	mov	r0, fp
    ed78:	bl	42e0 <readstat_realloc@plt>
    ed7c:	subs	fp, r0, #0
    ed80:	beq	ef20 <xport_process_row+0x204>
    ed84:	ldr	r3, [r6, #1596]	; 0x63c
    ed88:	lsl	r1, r3, #2
    ed8c:	ldr	r2, [r5, #48]	; 0x30
    ed90:	str	r2, [sp]
    ed94:	add	r2, r9, r7
    ed98:	add	r1, r1, #1
    ed9c:	mov	r0, fp
    eda0:	bl	4238 <readstat_convert@plt>
    eda4:	cmp	r0, #0
    eda8:	bne	ef8c <xport_process_row+0x270>
    edac:	str	fp, [sp, #40]	; 0x28
    edb0:	b	ee1c <xport_process_row+0x100>
    edb4:	bl	4148 <sas_validate_tag@plt>
    edb8:	cmp	r0, #0
    edbc:	bne	ede0 <xport_process_row+0xc4>
    edc0:	ldrb	r3, [sl]
    edc4:	cmp	r3, #46	; 0x2e
    edc8:	beq	ef08 <xport_process_row+0x1ec>
    edcc:	strb	r3, [sp, #52]	; 0x34
    edd0:	ldrb	r3, [sp, #53]	; 0x35
    edd4:	orr	r3, r3, #2
    edd8:	strb	r3, [sp, #53]	; 0x35
    eddc:	b	ee14 <xport_process_row+0xf8>
    ede0:	ldr	r2, [r6, #1596]	; 0x63c
    ede4:	ldr	r3, [sp, #16]
    ede8:	add	r1, r9, r3
    edec:	add	sl, sp, #32
    edf0:	mov	r0, sl
    edf4:	bl	3f14 <memcpy@plt>
    edf8:	mov	r3, #0
    edfc:	add	r2, sp, #24
    ee00:	mov	r1, #1
    ee04:	mov	r0, sl
    ee08:	bl	3ff8 <cnxptiee@plt>
    ee0c:	cmp	r0, #0
    ee10:	bne	ef18 <xport_process_row+0x1fc>
    ee14:	ldrd	r2, [sp, #24]
    ee18:	strd	r2, [sp, #40]	; 0x28
    ee1c:	ldr	r3, [r6, #1596]	; 0x63c
    ee20:	add	r7, r7, r3
    ee24:	ldr	sl, [r5, #16]
    ee28:	cmp	sl, #0
    ee2c:	beq	ee7c <xport_process_row+0x160>
    ee30:	ldr	r3, [r5, #376]	; 0x178
    ee34:	ldr	r3, [r3, r8]
    ee38:	ldr	r3, [r3, #2144]	; 0x860
    ee3c:	cmp	r3, #0
    ee40:	bne	ee7c <xport_process_row+0x160>
    ee44:	ldr	r3, [r5, #72]	; 0x48
    ee48:	cmp	r3, #0
    ee4c:	bne	ee7c <xport_process_row+0x160>
    ee50:	ldr	r3, [r5, #36]	; 0x24
    ee54:	str	r3, [sp, #8]
    ee58:	ldrd	r2, [sp, #48]	; 0x30
    ee5c:	strd	r2, [sp]
    ee60:	add	r3, sp, #40	; 0x28
    ee64:	ldm	r3, {r2, r3}
    ee68:	mov	r1, r6
    ee6c:	ldr	r0, [r5, #80]	; 0x50
    ee70:	blx	sl
    ee74:	cmp	r0, #0
    ee78:	bne	ef28 <xport_process_row+0x20c>
    ee7c:	add	r4, r4, #1
    ee80:	ldr	r3, [r5, #64]	; 0x40
    ee84:	cmp	r3, r4
    ee88:	ble	ef34 <xport_process_row+0x218>
    ee8c:	lsl	r8, r4, #2
    ee90:	ldr	r3, [r5, #376]	; 0x178
    ee94:	ldr	r6, [r3, r4, lsl #2]
    ee98:	mov	r0, #0
    ee9c:	mov	r1, #0
    eea0:	strd	r0, [sp, #40]	; 0x28
    eea4:	strd	r0, [sp, #48]	; 0x30
    eea8:	ldr	r3, [r6]
    eeac:	str	r3, [sp, #48]	; 0x30
    eeb0:	cmp	r3, #0
    eeb4:	beq	ed68 <xport_process_row+0x4c>
    eeb8:	vstr	d8, [sp, #24]
    eebc:	ldr	r2, [r6, #1596]	; 0x63c
    eec0:	sub	r3, r2, #3
    eec4:	cmp	r3, #5
    eec8:	bhi	ee14 <xport_process_row+0xf8>
    eecc:	mov	r0, #0
    eed0:	mov	r1, #0
    eed4:	strd	r0, [sp, #32]
    eed8:	str	r7, [sp, #16]
    eedc:	add	r1, r7, #1
    eee0:	sub	r2, r2, #1
    eee4:	add	r1, r9, r1
    eee8:	ldr	r0, [sp, #20]
    eeec:	bl	3f98 <memcmp@plt>
    eef0:	cmp	r0, #0
    eef4:	bne	ede0 <xport_process_row+0xc4>
    eef8:	add	sl, r9, r7
    eefc:	ldrb	r0, [r9, r7]
    ef00:	cmp	r0, #46	; 0x2e
    ef04:	bne	edb4 <xport_process_row+0x98>
    ef08:	ldrb	r3, [sp, #53]	; 0x35
    ef0c:	orr	r3, r3, #1
    ef10:	strb	r3, [sp, #53]	; 0x35
    ef14:	b	ee14 <xport_process_row+0xf8>
    ef18:	mov	sl, #16
    ef1c:	b	ef4c <xport_process_row+0x230>
    ef20:	mov	sl, #3
    ef24:	b	ef4c <xport_process_row+0x230>
    ef28:	mov	sl, #4
    ef2c:	b	ef4c <xport_process_row+0x230>
    ef30:	mov	fp, #0
    ef34:	ldr	r3, [r5, #72]	; 0x48
    ef38:	cmp	r3, #0
    ef3c:	beq	ef78 <xport_process_row+0x25c>
    ef40:	sub	r3, r3, #1
    ef44:	str	r3, [r5, #72]	; 0x48
    ef48:	mov	sl, #0
    ef4c:	mov	r0, fp
    ef50:	bl	3eb4 <free@plt>
    ef54:	mov	r0, sl
    ef58:	add	sp, sp, #60	; 0x3c
    ef5c:	vpop	{d8}
    ef60:	ldrd	r4, [sp]
    ef64:	ldrd	r6, [sp, #8]
    ef68:	ldrd	r8, [sp, #16]
    ef6c:	ldrd	sl, [sp, #24]
    ef70:	add	sp, sp, #32
    ef74:	pop	{pc}		; (ldr pc, [sp], #4)
    ef78:	ldr	r3, [r5, #80]	; 0x50
    ef7c:	add	r3, r3, #1
    ef80:	str	r3, [r5, #80]	; 0x50
    ef84:	mov	sl, #0
    ef88:	b	ef4c <xport_process_row+0x230>
    ef8c:	mov	sl, r0
    ef90:	b	ef4c <xport_process_row+0x230>
    ef94:	nop	{0}
    ef98:	.word	0x00000000
    ef9c:	.word	0x7ff80000

0000efa0 <readstat_parse_xport>:
    efa0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    efa4:	strd	r6, [sp, #8]
    efa8:	strd	r8, [sp, #16]
    efac:	strd	sl, [sp, #24]
    efb0:	str	lr, [sp, #32]
    efb4:	add	fp, sp, #32
    efb8:	sub	sp, sp, #268	; 0x10c
    efbc:	mov	r6, r0
    efc0:	mov	r8, r1
    efc4:	mov	r9, r2
    efc8:	ldr	r7, [pc, #3436]	; fd3c <readstat_parse_xport+0xd9c>
    efcc:	add	r7, pc, r7
    efd0:	ldr	r5, [r0, #32]
    efd4:	mov	r1, #384	; 0x180
    efd8:	mov	r0, #1
    efdc:	bl	3d4c <calloc@plt>
    efe0:	mov	r4, r0
    efe4:	ldrd	r2, [r6]
    efe8:	strd	r2, [r0]
    efec:	ldrd	r2, [r6, #8]
    eff0:	strd	r2, [r0, #8]
    eff4:	ldrd	r2, [r6, #16]
    eff8:	strd	r2, [r0, #16]
    effc:	ldrd	r2, [r6, #24]
    f000:	strd	r2, [r0, #24]
    f004:	ldr	r3, [r6, #36]	; 0x24
    f008:	str	r3, [r0, #40]	; 0x28
    f00c:	ldr	r3, [r6, #40]	; 0x28
    f010:	str	r3, [r0, #44]	; 0x2c
    f014:	str	r9, [r0, #36]	; 0x24
    f018:	str	r5, [r0, #52]	; 0x34
    f01c:	ldr	r3, [r6, #44]	; 0x2c
    f020:	str	r3, [r0, #68]	; 0x44
    f024:	ldr	r3, [r6, #48]	; 0x30
    f028:	cmp	r3, #0
    f02c:	strgt	r3, [r0, #72]	; 0x48
    f030:	ldr	r3, [r5]
    f034:	ldr	r1, [r5, #20]
    f038:	mov	r0, r8
    f03c:	blx	r3
    f040:	cmn	r0, #1
    f044:	moveq	r6, #1
    f048:	beq	fba0 <readstat_parse_xport+0xc00>
    f04c:	ldr	r3, [r5, #8]
    f050:	ldr	r2, [r5, #20]
    f054:	mov	r1, #2
    f058:	mov	r0, #0
    f05c:	blx	r3
    f060:	str	r0, [r4, #32]
    f064:	cmn	r0, #1
    f068:	beq	fb9c <readstat_parse_xport+0xbfc>
    f06c:	ldr	r3, [r5, #8]
    f070:	ldr	r2, [r5, #20]
    f074:	mov	r1, #0
    f078:	mov	r0, r1
    f07c:	blx	r3
    f080:	cmn	r0, #1
    f084:	beq	fbcc <readstat_parse_xport+0xc2c>
    f088:	ldr	r6, [r4, #40]	; 0x28
    f08c:	cmp	r6, #0
    f090:	beq	f0b4 <readstat_parse_xport+0x114>
    f094:	ldr	r8, [r4, #44]	; 0x2c
    f098:	cmp	r8, #0
    f09c:	beq	f0b4 <readstat_parse_xport+0x114>
    f0a0:	mov	r1, r8
    f0a4:	mov	r0, r6
    f0a8:	bl	3df4 <strcmp@plt>
    f0ac:	cmp	r0, #0
    f0b0:	bne	f438 <readstat_parse_xport+0x498>
    f0b4:	sub	r1, fp, #180	; 0xb4
    f0b8:	mov	r0, r4
    f0bc:	bl	eb00 <xport_read_header_record>
    f0c0:	subs	r6, r0, #0
    f0c4:	bne	fba0 <readstat_parse_xport+0xc00>
    f0c8:	ldr	r1, [pc, #3184]	; fd40 <readstat_parse_xport+0xda0>
    f0cc:	add	r1, pc, r1
    f0d0:	sub	r0, fp, #180	; 0xb4
    f0d4:	bl	3df4 <strcmp@plt>
    f0d8:	cmp	r0, #0
    f0dc:	moveq	r3, #5
    f0e0:	streq	r3, [r4, #380]	; 0x17c
    f0e4:	beq	f10c <readstat_parse_xport+0x16c>
    f0e8:	ldr	r1, [pc, #3156]	; fd44 <readstat_parse_xport+0xda4>
    f0ec:	add	r1, pc, r1
    f0f0:	sub	r0, fp, #180	; 0xb4
    f0f4:	bl	3df4 <strcmp@plt>
    f0f8:	cmp	r0, #0
    f0fc:	movne	r6, #24
    f100:	bne	fba0 <readstat_parse_xport+0xc00>
    f104:	mov	r3, #8
    f108:	str	r3, [r4, #380]	; 0x17c
    f10c:	ldr	r3, [r4, #52]	; 0x34
    f110:	ldr	r6, [r3, #8]
    f114:	ldr	r2, [r3, #20]
    f118:	mov	r1, #1
    f11c:	mov	r0, #80	; 0x50
    f120:	blx	r6
    f124:	cmn	r0, #1
    f128:	beq	fbe4 <readstat_parse_xport+0xc44>
    f12c:	mov	r2, #0
    f130:	str	r2, [fp, #-224]	; 0xffffff20
    f134:	str	r2, [fp, #-220]	; 0xffffff24
    f138:	str	r2, [fp, #-216]	; 0xffffff28
    f13c:	str	r2, [fp, #-212]	; 0xffffff2c
    f140:	str	r2, [fp, #-208]	; 0xffffff30
    f144:	str	r2, [fp, #-204]	; 0xffffff34
    f148:	str	r2, [fp, #-200]	; 0xffffff38
    f14c:	str	r2, [fp, #-196]	; 0xffffff3c
    f150:	str	r2, [fp, #-188]	; 0xffffff44
    f154:	str	r2, [fp, #-184]	; 0xffffff48
    f158:	mvn	r3, #0
    f15c:	str	r3, [fp, #-192]	; 0xffffff40
    f160:	sub	r1, fp, #180	; 0xb4
    f164:	mov	r0, r4
    f168:	bl	ead0 <xport_read_record>
    f16c:	subs	r6, r0, #0
    f170:	bne	fba0 <readstat_parse_xport+0xc00>
    f174:	sub	r3, fp, #224	; 0xe0
    f178:	str	r3, [sp, #12]
    f17c:	sub	r3, fp, #220	; 0xdc
    f180:	str	r3, [sp, #8]
    f184:	sub	r3, fp, #216	; 0xd8
    f188:	str	r3, [sp, #4]
    f18c:	sub	r3, fp, #204	; 0xcc
    f190:	str	r3, [sp]
    f194:	sub	r3, fp, #228	; 0xe4
    f198:	sub	r2, fp, #212	; 0xd4
    f19c:	ldr	r1, [pc, #2980]	; fd48 <readstat_parse_xport+0xda8>
    f1a0:	add	r1, pc, r1
    f1a4:	sub	r0, fp, #180	; 0xb4
    f1a8:	bl	428c <__isoc99_sscanf@plt>
    f1ac:	ldr	r3, [pc, #2968]	; fd4c <readstat_parse_xport+0xdac>
    f1b0:	ldr	r7, [r7, r3]
    f1b4:	mov	r6, #0
    f1b8:	sub	r8, fp, #228	; 0xe4
    f1bc:	mov	r1, r7
    f1c0:	mov	r0, r8
    f1c4:	bl	3df4 <strcmp@plt>
    f1c8:	cmp	r0, #0
    f1cc:	beq	f454 <readstat_parse_xport+0x4b4>
    f1d0:	add	r6, r6, #1
    f1d4:	add	r7, r7, #4
    f1d8:	cmp	r6, #12
    f1dc:	bne	f1bc <readstat_parse_xport+0x21c>
    f1e0:	ldr	r3, [fp, #-204]	; 0xffffff34
    f1e4:	cmp	r3, #59	; 0x3b
    f1e8:	addle	r3, r3, #100	; 0x64
    f1ec:	strle	r3, [fp, #-204]	; 0xffffff34
    f1f0:	sub	r0, fp, #224	; 0xe0
    f1f4:	bl	3e48 <mktime@plt>
    f1f8:	str	r0, [r4, #56]	; 0x38
    f1fc:	ldr	r2, [pc, #2892]	; fd50 <readstat_parse_xport+0xdb0>
    f200:	add	r2, pc, r2
    f204:	ldr	r1, [pc, #2888]	; fd54 <readstat_parse_xport+0xdb4>
    f208:	add	r1, pc, r1
    f20c:	mov	r0, r4
    f210:	bl	eb94 <xport_expect_header_record>
    f214:	subs	r6, r0, #0
    f218:	bne	fba0 <readstat_parse_xport+0xc00>
    f21c:	ldr	r2, [pc, #2868]	; fd58 <readstat_parse_xport+0xdb8>
    f220:	add	r2, pc, r2
    f224:	ldr	r1, [pc, #2864]	; fd5c <readstat_parse_xport+0xdbc>
    f228:	add	r1, pc, r1
    f22c:	mov	r0, r4
    f230:	bl	eb94 <xport_expect_header_record>
    f234:	subs	r6, r0, #0
    f238:	bne	fba0 <readstat_parse_xport+0xc00>
    f23c:	sub	r1, fp, #180	; 0xb4
    f240:	mov	r0, r4
    f244:	bl	ead0 <xport_read_record>
    f248:	subs	r6, r0, #0
    f24c:	bne	fba0 <readstat_parse_xport+0xc00>
    f250:	add	r7, r4, #245	; 0xf5
    f254:	ldr	r3, [r4, #380]	; 0x17c
    f258:	cmp	r3, #5
    f25c:	ldr	r3, [r4, #48]	; 0x30
    f260:	str	r3, [sp]
    f264:	moveq	r3, #8
    f268:	movne	r3, #32
    f26c:	sub	r2, fp, #172	; 0xac
    f270:	mov	r1, #129	; 0x81
    f274:	mov	r0, r7
    f278:	bl	4238 <readstat_convert@plt>
    f27c:	subs	r6, r0, #0
    f280:	bne	fba0 <readstat_parse_xport+0xc00>
    f284:	sub	r1, fp, #180	; 0xb4
    f288:	mov	r0, r4
    f28c:	bl	ead0 <xport_read_record>
    f290:	subs	r6, r0, #0
    f294:	bne	fba0 <readstat_parse_xport+0xc00>
    f298:	add	r8, r4, #84	; 0x54
    f29c:	ldr	r3, [r4, #48]	; 0x30
    f2a0:	str	r3, [sp]
    f2a4:	mov	r3, #40	; 0x28
    f2a8:	sub	r2, fp, #148	; 0x94
    f2ac:	mov	r1, #161	; 0xa1
    f2b0:	mov	r0, r8
    f2b4:	bl	4238 <readstat_convert@plt>
    f2b8:	subs	r6, r0, #0
    f2bc:	bne	fba0 <readstat_parse_xport+0xc00>
    f2c0:	sub	r1, fp, #224	; 0xe0
    f2c4:	mov	r0, r4
    f2c8:	bl	eb00 <xport_read_header_record>
    f2cc:	subs	r6, r0, #0
    f2d0:	bne	fba0 <readstat_parse_xport+0xc00>
    f2d4:	ldr	r3, [r4, #380]	; 0x17c
    f2d8:	cmp	r3, #5
    f2dc:	beq	f45c <readstat_parse_xport+0x4bc>
    f2e0:	cmp	r3, #8
    f2e4:	bne	f304 <readstat_parse_xport+0x364>
    f2e8:	ldr	r1, [pc, #2672]	; fd60 <readstat_parse_xport+0xdc0>
    f2ec:	add	r1, pc, r1
    f2f0:	sub	r0, fp, #224	; 0xe0
    f2f4:	bl	3df4 <strcmp@plt>
    f2f8:	cmp	r0, #0
    f2fc:	movne	r6, #5
    f300:	bne	fba0 <readstat_parse_xport+0xc00>
    f304:	ldr	r0, [fp, #-208]	; 0xffffff30
    f308:	str	r0, [r4, #64]	; 0x40
    f30c:	mov	r1, #4
    f310:	bl	3fbc <readstat_calloc@plt>
    f314:	str	r0, [r4, #376]	; 0x178
    f318:	cmp	r0, #0
    f31c:	beq	fd34 <readstat_parse_xport+0xd94>
    f320:	ldr	r9, [r4]
    f324:	cmp	r9, #0
    f328:	beq	f38c <readstat_parse_xport+0x3ec>
    f32c:	mov	r2, #0
    f330:	mov	r3, #0
    f334:	strd	r2, [fp, #-148]	; 0xffffff6c
    f338:	strd	r2, [fp, #-132]	; 0xffffff7c
    f33c:	mvn	r2, #0
    f340:	mvn	r3, #0
    f344:	strd	r2, [fp, #-180]	; 0xffffff4c
    f348:	ldr	r2, [r4, #64]	; 0x40
    f34c:	asr	r3, r2, #31
    f350:	strd	r2, [fp, #-172]	; 0xffffff54
    f354:	ldr	r3, [r4, #56]	; 0x38
    f358:	str	r3, [fp, #-164]	; 0xffffff5c
    f35c:	str	r3, [fp, #-160]	; 0xffffff60
    f360:	ldr	r2, [r4, #380]	; 0x17c
    f364:	asr	r3, r2, #31
    f368:	strd	r2, [fp, #-156]	; 0xffffff64
    f36c:	str	r7, [fp, #-140]	; 0xffffff74
    f370:	str	r8, [fp, #-136]	; 0xffffff78
    f374:	ldr	r1, [r4, #36]	; 0x24
    f378:	sub	r0, fp, #180	; 0xb4
    f37c:	blx	r9
    f380:	cmp	r0, #0
    f384:	movne	r6, #4
    f388:	bne	fba0 <readstat_parse_xport+0xc00>
    f38c:	ldr	r3, [r4, #64]	; 0x40
    f390:	cmp	r3, #0
    f394:	movgt	r8, #0
    f398:	subgt	r9, fp, #180	; 0xb4
    f39c:	movgt	sl, #140	; 0x8c
    f3a0:	bgt	f508 <readstat_parse_xport+0x568>
    f3a4:	mov	r0, r4
    f3a8:	bl	ea48 <xport_skip_rest_of_record>
    f3ac:	subs	r6, r0, #0
    f3b0:	bne	fba0 <readstat_parse_xport+0xc00>
    f3b4:	ldr	r3, [r4, #380]	; 0x17c
    f3b8:	cmp	r3, #5
    f3bc:	beq	f5c8 <readstat_parse_xport+0x628>
    f3c0:	sub	r1, fp, #180	; 0xb4
    f3c4:	mov	r0, r4
    f3c8:	bl	eb00 <xport_read_header_record>
    f3cc:	cmp	r0, #0
    f3d0:	bne	f774 <readstat_parse_xport+0x7d4>
    f3d4:	ldr	r1, [pc, #2440]	; fd64 <readstat_parse_xport+0xdc4>
    f3d8:	add	r1, pc, r1
    f3dc:	sub	r0, fp, #180	; 0xb4
    f3e0:	bl	3df4 <strcmp@plt>
    f3e4:	cmp	r0, #0
    f3e8:	beq	f5e8 <readstat_parse_xport+0x648>
    f3ec:	ldr	r1, [pc, #2420]	; fd68 <readstat_parse_xport+0xdc8>
    f3f0:	add	r1, pc, r1
    f3f4:	sub	r0, fp, #180	; 0xb4
    f3f8:	bl	3df4 <strcmp@plt>
    f3fc:	subs	sl, r0, #0
    f400:	beq	f608 <readstat_parse_xport+0x668>
    f404:	ldr	r1, [pc, #2400]	; fd6c <readstat_parse_xport+0xdcc>
    f408:	add	r1, pc, r1
    f40c:	sub	r0, fp, #180	; 0xb4
    f410:	bl	3df4 <strcmp@plt>
    f414:	subs	sl, r0, #0
    f418:	bne	f5e8 <readstat_parse_xport+0x648>
    f41c:	ldr	r3, [fp, #-168]	; 0xffffff58
    f420:	str	r3, [fp, #-244]	; 0xffffff0c
    f424:	sub	r3, fp, #224	; 0xe0
    f428:	str	r3, [fp, #-280]	; 0xfffffee8
    f42c:	str	r5, [fp, #-232]	; 0xffffff18
    f430:	str	r6, [fp, #-236]	; 0xffffff14
    f434:	b	f98c <readstat_parse_xport+0x9ec>
    f438:	mov	r1, r6
    f43c:	mov	r0, r8
    f440:	bl	4130 <iconv_open@plt>
    f444:	cmn	r0, #1
    f448:	beq	fbd4 <readstat_parse_xport+0xc34>
    f44c:	str	r0, [r4, #48]	; 0x30
    f450:	b	f0b4 <readstat_parse_xport+0x114>
    f454:	str	r6, [fp, #-208]	; 0xffffff30
    f458:	b	f1e0 <readstat_parse_xport+0x240>
    f45c:	ldr	r1, [pc, #2316]	; fd70 <readstat_parse_xport+0xdd0>
    f460:	add	r1, pc, r1
    f464:	sub	r0, fp, #224	; 0xe0
    f468:	bl	3df4 <strcmp@plt>
    f46c:	cmp	r0, #0
    f470:	beq	f304 <readstat_parse_xport+0x364>
    f474:	mov	r6, #5
    f478:	b	fba0 <readstat_parse_xport+0xc00>
    f47c:	ldr	r3, [r4, #48]	; 0x30
    f480:	str	r3, [sp]
    f484:	mov	r3, #8
    f488:	sub	r2, fp, #172	; 0xac
    f48c:	mov	r1, #300	; 0x12c
    f490:	add	r0, r0, r3
    f494:	bl	4238 <readstat_convert@plt>
    f498:	cmp	r0, #0
    f49c:	bne	f5b0 <readstat_parse_xport+0x610>
    f4a0:	ldr	r3, [r4, #48]	; 0x30
    f4a4:	str	r3, [sp]
    f4a8:	mov	r3, #40	; 0x28
    f4ac:	sub	r2, fp, #164	; 0xa4
    f4b0:	mov	r1, #1024	; 0x400
    f4b4:	add	r0, r7, #564	; 0x234
    f4b8:	bl	4238 <readstat_convert@plt>
    f4bc:	cmp	r0, #0
    f4c0:	bne	f5b8 <readstat_parse_xport+0x618>
    f4c4:	ldr	r3, [r7, #2140]	; 0x85c
    f4c8:	str	r3, [sp, #4]
    f4cc:	ldr	r3, [r7, #2136]	; 0x858
    f4d0:	str	r3, [sp]
    f4d4:	mov	r3, #8
    f4d8:	sub	r2, fp, #124	; 0x7c
    f4dc:	mov	r1, #256	; 0x100
    f4e0:	add	r0, r7, #308	; 0x134
    f4e4:	bl	ec1c <xport_construct_format>
    f4e8:	cmp	r0, #0
    f4ec:	bne	f5c0 <readstat_parse_xport+0x620>
    f4f0:	ldr	r3, [r4, #376]	; 0x178
    f4f4:	str	r7, [r3, r8, lsl #2]
    f4f8:	add	r8, r8, #1
    f4fc:	ldr	r3, [r4, #64]	; 0x40
    f500:	cmp	r8, r3
    f504:	bge	f3a4 <readstat_parse_xport+0x404>
    f508:	mov	r2, sl
    f50c:	mov	r1, r9
    f510:	mov	r0, r4
    f514:	bl	ea18 <read_bytes>
    f518:	cmp	r0, #139	; 0x8b
    f51c:	bls	f5a8 <readstat_parse_xport+0x608>
    f520:	mov	r0, r9
    f524:	bl	4088 <xport_namestr_bswap@plt>
    f528:	movw	r1, #2152	; 0x868
    f52c:	mov	r0, #1
    f530:	bl	3d4c <calloc@plt>
    f534:	mov	r7, r0
    f538:	str	r8, [r0, #4]
    f53c:	ldrh	r3, [fp, #-180]	; 0xffffff4c
    f540:	cmp	r3, #2
    f544:	moveq	r3, r6
    f548:	movne	r3, #5
    f54c:	str	r3, [r0]
    f550:	ldrh	r3, [fp, #-176]	; 0xffffff50
    f554:	str	r3, [r0, #1596]	; 0x63c
    f558:	ldrh	r3, [fp, #-116]	; 0xffffff8c
    f55c:	str	r3, [r0, #2136]	; 0x858
    f560:	ldrh	r3, [fp, #-114]	; 0xffffff8e
    f564:	str	r3, [r0, #2140]	; 0x85c
    f568:	ldrh	r3, [fp, #-112]	; 0xffffff90
    f56c:	cmp	r3, #0
    f570:	movne	r3, #3
    f574:	moveq	r3, #1
    f578:	str	r3, [r0, #2132]	; 0x854
    f57c:	ldr	r3, [r4, #380]	; 0x17c
    f580:	cmp	r3, #5
    f584:	beq	f47c <readstat_parse_xport+0x4dc>
    f588:	ldr	r3, [r4, #48]	; 0x30
    f58c:	str	r3, [sp]
    f590:	mov	r3, #32
    f594:	sub	r2, fp, #92	; 0x5c
    f598:	mov	r1, #300	; 0x12c
    f59c:	add	r0, r0, #8
    f5a0:	bl	4238 <readstat_convert@plt>
    f5a4:	b	f498 <readstat_parse_xport+0x4f8>
    f5a8:	mov	r6, #2
    f5ac:	b	fba0 <readstat_parse_xport+0xc00>
    f5b0:	mov	r6, r0
    f5b4:	b	fba0 <readstat_parse_xport+0xc00>
    f5b8:	mov	r6, r0
    f5bc:	b	fba0 <readstat_parse_xport+0xc00>
    f5c0:	mov	r6, r0
    f5c4:	b	fba0 <readstat_parse_xport+0xc00>
    f5c8:	ldr	r2, [pc, #1956]	; fd74 <readstat_parse_xport+0xdd4>
    f5cc:	add	r2, pc, r2
    f5d0:	ldr	r1, [pc, #1952]	; fd78 <readstat_parse_xport+0xdd8>
    f5d4:	add	r1, pc, r1
    f5d8:	mov	r0, r4
    f5dc:	bl	eb94 <xport_expect_header_record>
    f5e0:	cmp	r0, #0
    f5e4:	bne	fd24 <readstat_parse_xport+0xd84>
    f5e8:	mov	r3, #0
    f5ec:	str	r3, [r4, #76]	; 0x4c
    f5f0:	ldr	r3, [r4, #64]	; 0x40
    f5f4:	cmp	r3, #0
    f5f8:	ble	fba0 <readstat_parse_xport+0xc00>
    f5fc:	mov	r9, #0
    f600:	mov	r7, r9
    f604:	b	fae0 <readstat_parse_xport+0xb40>
    f608:	ldr	r3, [fp, #-168]	; 0xffffff58
    f60c:	str	r3, [fp, #-236]	; 0xffffff14
    f610:	sub	r3, fp, #224	; 0xe0
    f614:	str	r3, [fp, #-256]	; 0xffffff00
    f618:	b	f718 <readstat_parse_xport+0x778>
    f61c:	ldrh	r0, [fp, #-224]	; 0xffffff20
    f620:	bl	3e9c <byteswap2@plt>
    f624:	mov	r7, r0
    f628:	ldrh	r0, [fp, #-222]	; 0xffffff22
    f62c:	bl	3e9c <byteswap2@plt>
    f630:	mov	r9, r0
    f634:	ldrh	r0, [fp, #-220]	; 0xffffff24
    f638:	bl	3e9c <byteswap2@plt>
    f63c:	mov	r8, r0
    f640:	ldr	r2, [r4, #64]	; 0x40
    f644:	clz	r3, r7
    f648:	lsr	r3, r3, #5
    f64c:	cmp	r2, r7
    f650:	orrlt	r3, r3, #1
    f654:	cmp	r3, #0
    f658:	bne	f764 <readstat_parse_xport+0x7c4>
    f65c:	str	r9, [fp, #-240]	; 0xffffff10
    f660:	add	r3, r9, #8
    f664:	bic	r3, r3, #7
    f668:	sub	sp, sp, r3
    f66c:	add	r1, sp, #16
    f670:	str	r8, [fp, #-244]	; 0xffffff0c
    f674:	add	r3, r8, #8
    f678:	bic	r3, r3, #7
    f67c:	sub	sp, sp, r3
    f680:	add	r2, sp, #16
    f684:	str	r2, [fp, #-252]	; 0xffffff04
    f688:	sub	r7, r7, #-1073741823	; 0xc0000001
    f68c:	ldr	r3, [r4, #376]	; 0x178
    f690:	ldr	r7, [r3, r7, lsl #2]
    f694:	mov	r2, r9
    f698:	str	r1, [fp, #-248]	; 0xffffff08
    f69c:	mov	r0, r4
    f6a0:	bl	ea18 <read_bytes>
    f6a4:	cmp	r9, r0
    f6a8:	bne	f7cc <readstat_parse_xport+0x82c>
    f6ac:	mov	r2, r8
    f6b0:	ldr	r9, [fp, #-252]	; 0xffffff04
    f6b4:	mov	r1, r9
    f6b8:	mov	r0, r4
    f6bc:	bl	ea18 <read_bytes>
    f6c0:	cmp	r8, r0
    f6c4:	bne	f7d4 <readstat_parse_xport+0x834>
    f6c8:	ldr	r3, [r4, #48]	; 0x30
    f6cc:	str	r3, [sp]
    f6d0:	ldr	r3, [fp, #-240]	; 0xffffff10
    f6d4:	ldr	r2, [fp, #-248]	; 0xffffff08
    f6d8:	mov	r1, #300	; 0x12c
    f6dc:	add	r0, r7, #8
    f6e0:	bl	4238 <readstat_convert@plt>
    f6e4:	cmp	r0, #0
    f6e8:	bne	f768 <readstat_parse_xport+0x7c8>
    f6ec:	ldr	r3, [r4, #48]	; 0x30
    f6f0:	str	r3, [sp]
    f6f4:	ldr	r3, [fp, #-244]	; 0xffffff0c
    f6f8:	mov	r2, r9
    f6fc:	mov	r1, #1024	; 0x400
    f700:	add	r0, r7, #564	; 0x234
    f704:	bl	4238 <readstat_convert@plt>
    f708:	cmp	r0, #0
    f70c:	bne	f768 <readstat_parse_xport+0x7c8>
    f710:	ldr	sp, [fp, #-232]	; 0xffffff18
    f714:	add	sl, sl, #1
    f718:	ldr	r3, [fp, #-236]	; 0xffffff14
    f71c:	cmp	r3, sl
    f720:	ble	f7dc <readstat_parse_xport+0x83c>
    f724:	str	sp, [fp, #-232]	; 0xffffff18
    f728:	mov	r2, #6
    f72c:	ldr	r1, [fp, #-256]	; 0xffffff00
    f730:	mov	r0, r4
    f734:	bl	ea18 <read_bytes>
    f738:	cmp	r0, #6
    f73c:	bne	f75c <readstat_parse_xport+0x7bc>
    f740:	bl	3ea8 <machine_is_little_endian@plt>
    f744:	cmp	r0, #0
    f748:	ldrheq	r7, [fp, #-224]	; 0xffffff20
    f74c:	ldrheq	r9, [fp, #-222]	; 0xffffff22
    f750:	ldrheq	r8, [fp, #-220]	; 0xffffff24
    f754:	beq	f640 <readstat_parse_xport+0x6a0>
    f758:	b	f61c <readstat_parse_xport+0x67c>
    f75c:	mov	r0, #2
    f760:	b	f768 <readstat_parse_xport+0x7c8>
    f764:	mov	r0, #5
    f768:	ldr	sp, [fp, #-232]	; 0xffffff18
    f76c:	cmp	r0, #0
    f770:	beq	f5e8 <readstat_parse_xport+0x648>
    f774:	cmp	r0, #0
    f778:	bne	fbdc <readstat_parse_xport+0xc3c>
    f77c:	ldr	r0, [r4, #76]	; 0x4c
    f780:	cmp	r0, #0
    f784:	moveq	r6, r0
    f788:	beq	fba0 <readstat_parse_xport+0xc00>
    f78c:	ldr	r3, [r4, #16]
    f790:	cmp	r3, #0
    f794:	beq	fba0 <readstat_parse_xport+0xc00>
    f798:	bl	422c <readstat_malloc@plt>
    f79c:	mov	r7, r0
    f7a0:	ldr	r0, [r4, #76]	; 0x4c
    f7a4:	bl	422c <readstat_malloc@plt>
    f7a8:	mov	r9, r0
    f7ac:	cmp	r0, #0
    f7b0:	cmpne	r7, #0
    f7b4:	bne	fb28 <readstat_parse_xport+0xb88>
    f7b8:	cmp	r7, #0
    f7bc:	moveq	r6, #3
    f7c0:	beq	fb88 <readstat_parse_xport+0xbe8>
    f7c4:	mov	r6, #3
    f7c8:	b	fb80 <readstat_parse_xport+0xbe0>
    f7cc:	mov	r0, #2
    f7d0:	b	f768 <readstat_parse_xport+0x7c8>
    f7d4:	mov	r0, #2
    f7d8:	b	f768 <readstat_parse_xport+0x7c8>
    f7dc:	mov	r0, r4
    f7e0:	bl	ea48 <xport_skip_rest_of_record>
    f7e4:	cmp	r0, #0
    f7e8:	bne	f76c <readstat_parse_xport+0x7cc>
    f7ec:	ldr	r2, [pc, #1416]	; fd7c <readstat_parse_xport+0xddc>
    f7f0:	add	r2, pc, r2
    f7f4:	ldr	r1, [pc, #1412]	; fd80 <readstat_parse_xport+0xde0>
    f7f8:	add	r1, pc, r1
    f7fc:	mov	r0, r4
    f800:	bl	eb94 <xport_expect_header_record>
    f804:	b	f76c <readstat_parse_xport+0x7cc>
    f808:	ldrh	r7, [fp, #-224]	; 0xffffff20
    f80c:	ldrh	r9, [fp, #-222]	; 0xffffff22
    f810:	ldrh	r8, [fp, #-220]	; 0xffffff24
    f814:	ldrh	r6, [fp, #-218]	; 0xffffff26
    f818:	ldrh	r5, [fp, #-216]	; 0xffffff28
    f81c:	ldr	r2, [r4, #64]	; 0x40
    f820:	clz	r3, r7
    f824:	lsr	r3, r3, #5
    f828:	cmp	r2, r7
    f82c:	orrlt	r3, r3, #1
    f830:	cmp	r3, #0
    f834:	bne	fa10 <readstat_parse_xport+0xa70>
    f838:	str	r9, [fp, #-248]	; 0xffffff08
    f83c:	add	r3, r9, #8
    f840:	bic	r3, r3, #7
    f844:	sub	sp, sp, r3
    f848:	add	r0, sp, #16
    f84c:	str	r8, [fp, #-252]	; 0xffffff04
    f850:	add	r3, r8, #8
    f854:	bic	r3, r3, #7
    f858:	sub	sp, sp, r3
    f85c:	add	r2, sp, #16
    f860:	str	r2, [fp, #-268]	; 0xfffffef4
    f864:	str	r6, [fp, #-256]	; 0xffffff00
    f868:	add	r3, r6, #8
    f86c:	bic	r3, r3, #7
    f870:	sub	sp, sp, r3
    f874:	add	r1, sp, #16
    f878:	str	r1, [fp, #-272]	; 0xfffffef0
    f87c:	str	r5, [fp, #-260]	; 0xfffffefc
    f880:	add	r3, r5, #8
    f884:	bic	r3, r3, #7
    f888:	sub	sp, sp, r3
    f88c:	add	ip, sp, #16
    f890:	str	ip, [fp, #-276]	; 0xfffffeec
    f894:	sub	r7, r7, #-1073741823	; 0xc0000001
    f898:	ldr	r3, [r4, #376]	; 0x178
    f89c:	ldr	r7, [r3, r7, lsl #2]
    f8a0:	mov	r2, r9
    f8a4:	str	r0, [fp, #-264]	; 0xfffffef8
    f8a8:	mov	r1, r0
    f8ac:	mov	r0, r4
    f8b0:	bl	ea18 <read_bytes>
    f8b4:	cmp	r9, r0
    f8b8:	bne	fa24 <readstat_parse_xport+0xa84>
    f8bc:	mov	r2, r8
    f8c0:	ldr	r9, [fp, #-268]	; 0xfffffef4
    f8c4:	mov	r1, r9
    f8c8:	mov	r0, r4
    f8cc:	bl	ea18 <read_bytes>
    f8d0:	cmp	r8, r0
    f8d4:	bne	fa34 <readstat_parse_xport+0xa94>
    f8d8:	ldr	r2, [fp, #-256]	; 0xffffff00
    f8dc:	ldr	r1, [fp, #-272]	; 0xfffffef0
    f8e0:	mov	r0, r4
    f8e4:	bl	ea18 <read_bytes>
    f8e8:	cmp	r6, r0
    f8ec:	bne	fa44 <readstat_parse_xport+0xaa4>
    f8f0:	ldr	r8, [fp, #-260]	; 0xfffffefc
    f8f4:	mov	r2, r8
    f8f8:	ldr	r6, [fp, #-276]	; 0xfffffeec
    f8fc:	mov	r1, r6
    f900:	mov	r0, r4
    f904:	bl	ea18 <read_bytes>
    f908:	cmp	r5, r0
    f90c:	bne	fa54 <readstat_parse_xport+0xab4>
    f910:	ldr	r3, [r4, #48]	; 0x30
    f914:	str	r3, [sp]
    f918:	ldr	r3, [fp, #-248]	; 0xffffff08
    f91c:	ldr	r2, [fp, #-264]	; 0xfffffef8
    f920:	mov	r1, #300	; 0x12c
    f924:	add	r0, r7, #8
    f928:	bl	4238 <readstat_convert@plt>
    f92c:	cmp	r0, #0
    f930:	bne	fa64 <readstat_parse_xport+0xac4>
    f934:	ldr	r3, [r4, #48]	; 0x30
    f938:	str	r3, [sp]
    f93c:	mov	r3, r8
    f940:	mov	r2, r6
    f944:	mov	r1, #1024	; 0x400
    f948:	add	r0, r7, #564	; 0x234
    f94c:	bl	4238 <readstat_convert@plt>
    f950:	cmp	r0, #0
    f954:	bne	fa70 <readstat_parse_xport+0xad0>
    f958:	ldr	r3, [r7, #2140]	; 0x85c
    f95c:	str	r3, [sp, #4]
    f960:	ldr	r3, [r7, #2136]	; 0x858
    f964:	str	r3, [sp]
    f968:	ldr	r3, [fp, #-252]	; 0xffffff04
    f96c:	mov	r2, r9
    f970:	mov	r1, #256	; 0x100
    f974:	add	r0, r7, #308	; 0x134
    f978:	bl	ec1c <xport_construct_format>
    f97c:	cmp	r0, #0
    f980:	bne	fa7c <readstat_parse_xport+0xadc>
    f984:	ldr	sp, [fp, #-240]	; 0xffffff10
    f988:	add	sl, sl, #1
    f98c:	ldr	r3, [fp, #-244]	; 0xffffff0c
    f990:	cmp	r3, sl
    f994:	ble	fa88 <readstat_parse_xport+0xae8>
    f998:	str	sp, [fp, #-240]	; 0xffffff10
    f99c:	mov	r2, #10
    f9a0:	ldr	r1, [fp, #-280]	; 0xfffffee8
    f9a4:	mov	r0, r4
    f9a8:	bl	ea18 <read_bytes>
    f9ac:	cmp	r0, #10
    f9b0:	bne	fa00 <readstat_parse_xport+0xa60>
    f9b4:	bl	3ea8 <machine_is_little_endian@plt>
    f9b8:	cmp	r0, #0
    f9bc:	beq	f808 <readstat_parse_xport+0x868>
    f9c0:	ldrh	r0, [fp, #-224]	; 0xffffff20
    f9c4:	bl	3e9c <byteswap2@plt>
    f9c8:	mov	r7, r0
    f9cc:	ldrh	r0, [fp, #-222]	; 0xffffff22
    f9d0:	bl	3e9c <byteswap2@plt>
    f9d4:	mov	r9, r0
    f9d8:	ldrh	r0, [fp, #-220]	; 0xffffff24
    f9dc:	bl	3e9c <byteswap2@plt>
    f9e0:	mov	r8, r0
    f9e4:	ldrh	r0, [fp, #-218]	; 0xffffff26
    f9e8:	bl	3e9c <byteswap2@plt>
    f9ec:	mov	r6, r0
    f9f0:	ldrh	r0, [fp, #-216]	; 0xffffff28
    f9f4:	bl	3e9c <byteswap2@plt>
    f9f8:	mov	r5, r0
    f9fc:	b	f81c <readstat_parse_xport+0x87c>
    fa00:	ldr	r5, [fp, #-232]	; 0xffffff18
    fa04:	ldr	r6, [fp, #-236]	; 0xffffff14
    fa08:	mov	r0, #2
    fa0c:	b	fa1c <readstat_parse_xport+0xa7c>
    fa10:	ldr	r5, [fp, #-232]	; 0xffffff18
    fa14:	ldr	r6, [fp, #-236]	; 0xffffff14
    fa18:	mov	r0, #5
    fa1c:	ldr	sp, [fp, #-240]	; 0xffffff10
    fa20:	b	f76c <readstat_parse_xport+0x7cc>
    fa24:	ldr	r5, [fp, #-232]	; 0xffffff18
    fa28:	ldr	r6, [fp, #-236]	; 0xffffff14
    fa2c:	mov	r0, #2
    fa30:	b	fa1c <readstat_parse_xport+0xa7c>
    fa34:	ldr	r5, [fp, #-232]	; 0xffffff18
    fa38:	ldr	r6, [fp, #-236]	; 0xffffff14
    fa3c:	mov	r0, #2
    fa40:	b	fa1c <readstat_parse_xport+0xa7c>
    fa44:	ldr	r5, [fp, #-232]	; 0xffffff18
    fa48:	ldr	r6, [fp, #-236]	; 0xffffff14
    fa4c:	mov	r0, #2
    fa50:	b	fa1c <readstat_parse_xport+0xa7c>
    fa54:	ldr	r5, [fp, #-232]	; 0xffffff18
    fa58:	ldr	r6, [fp, #-236]	; 0xffffff14
    fa5c:	mov	r0, #2
    fa60:	b	fa1c <readstat_parse_xport+0xa7c>
    fa64:	ldr	r5, [fp, #-232]	; 0xffffff18
    fa68:	ldr	r6, [fp, #-236]	; 0xffffff14
    fa6c:	b	fa1c <readstat_parse_xport+0xa7c>
    fa70:	ldr	r5, [fp, #-232]	; 0xffffff18
    fa74:	ldr	r6, [fp, #-236]	; 0xffffff14
    fa78:	b	fa1c <readstat_parse_xport+0xa7c>
    fa7c:	ldr	r5, [fp, #-232]	; 0xffffff18
    fa80:	ldr	r6, [fp, #-236]	; 0xffffff14
    fa84:	b	fa1c <readstat_parse_xport+0xa7c>
    fa88:	ldr	r5, [fp, #-232]	; 0xffffff18
    fa8c:	ldr	r6, [fp, #-236]	; 0xffffff14
    fa90:	mov	r0, r4
    fa94:	bl	ea48 <xport_skip_rest_of_record>
    fa98:	cmp	r0, #0
    fa9c:	bne	f76c <readstat_parse_xport+0x7cc>
    faa0:	ldr	r2, [pc, #732]	; fd84 <readstat_parse_xport+0xde4>
    faa4:	add	r2, pc, r2
    faa8:	ldr	r1, [pc, #728]	; fd88 <readstat_parse_xport+0xde8>
    faac:	add	r1, pc, r1
    fab0:	mov	r0, r4
    fab4:	bl	eb94 <xport_expect_header_record>
    fab8:	b	f76c <readstat_parse_xport+0x7cc>
    fabc:	add	r9, r9, #1
    fac0:	ldr	r3, [r4, #76]	; 0x4c
    fac4:	ldr	r2, [r8, #1596]	; 0x63c
    fac8:	add	r3, r3, r2
    facc:	str	r3, [r4, #76]	; 0x4c
    fad0:	add	r7, r7, #1
    fad4:	ldr	r3, [r4, #64]	; 0x40
    fad8:	cmp	r7, r3
    fadc:	bge	f77c <readstat_parse_xport+0x7dc>
    fae0:	ldr	r3, [r4, #376]	; 0x178
    fae4:	ldr	r8, [r3, r7, lsl #2]
    fae8:	str	r9, [r8, #2148]	; 0x864
    faec:	ldr	sl, [r4, #8]
    faf0:	cmp	sl, #0
    faf4:	beq	fabc <readstat_parse_xport+0xb1c>
    faf8:	ldr	r3, [r4, #36]	; 0x24
    fafc:	add	r2, r8, #308	; 0x134
    fb00:	mov	r1, r8
    fb04:	mov	r0, r7
    fb08:	blx	sl
    fb0c:	cmp	r0, #1
    fb10:	beq	fd2c <readstat_parse_xport+0xd8c>
    fb14:	cmp	r0, #2
    fb18:	moveq	r3, #1
    fb1c:	streq	r3, [r8, #2144]	; 0x860
    fb20:	bne	fabc <readstat_parse_xport+0xb1c>
    fb24:	b	fac0 <readstat_parse_xport+0xb20>
    fb28:	ldr	r2, [r4, #76]	; 0x4c
    fb2c:	mov	r1, #32
    fb30:	bl	42a4 <memset@plt>
    fb34:	mov	r8, #0
    fb38:	b	fc68 <readstat_parse_xport+0xcc8>
    fb3c:	mov	r8, #0
    fb40:	b	fc68 <readstat_parse_xport+0xcc8>
    fb44:	subs	r8, r8, #1
    fb48:	beq	fcc8 <readstat_parse_xport+0xd28>
    fb4c:	ldr	r2, [r4, #76]	; 0x4c
    fb50:	mov	r1, r9
    fb54:	mov	r0, r4
    fb58:	bl	ed1c <xport_process_row>
    fb5c:	cmp	r0, #0
    fb60:	bne	fb7c <readstat_parse_xport+0xbdc>
    fb64:	ldr	r3, [r4, #68]	; 0x44
    fb68:	cmp	r3, #0
    fb6c:	ble	fb44 <readstat_parse_xport+0xba4>
    fb70:	ldr	r2, [r4, #80]	; 0x50
    fb74:	cmp	r3, r2
    fb78:	bne	fb44 <readstat_parse_xport+0xba4>
    fb7c:	mov	r6, r0
    fb80:	mov	r0, r7
    fb84:	bl	3eb4 <free@plt>
    fb88:	cmp	r9, #0
    fb8c:	beq	fba0 <readstat_parse_xport+0xc00>
    fb90:	mov	r0, r9
    fb94:	bl	3eb4 <free@plt>
    fb98:	b	fba0 <readstat_parse_xport+0xc00>
    fb9c:	mov	r6, #15
    fba0:	ldr	r3, [r5, #4]
    fba4:	ldr	r0, [r5, #20]
    fba8:	blx	r3
    fbac:	ldr	r3, [r4, #376]	; 0x178
    fbb0:	cmp	r3, #0
    fbb4:	beq	fc1c <readstat_parse_xport+0xc7c>
    fbb8:	ldr	r3, [r4, #64]	; 0x40
    fbbc:	cmp	r3, #0
    fbc0:	ble	fc14 <readstat_parse_xport+0xc74>
    fbc4:	mov	r5, #0
    fbc8:	b	fc00 <readstat_parse_xport+0xc60>
    fbcc:	mov	r6, #15
    fbd0:	b	fba0 <readstat_parse_xport+0xc00>
    fbd4:	mov	r6, #7
    fbd8:	b	fba0 <readstat_parse_xport+0xc00>
    fbdc:	mov	r6, r0
    fbe0:	b	fba0 <readstat_parse_xport+0xc00>
    fbe4:	mov	r6, #15
    fbe8:	b	fba0 <readstat_parse_xport+0xc00>
    fbec:	bl	3eb4 <free@plt>
    fbf0:	add	r5, r5, #1
    fbf4:	ldr	r3, [r4, #64]	; 0x40
    fbf8:	cmp	r5, r3
    fbfc:	bge	fc14 <readstat_parse_xport+0xc74>
    fc00:	ldr	r3, [r4, #376]	; 0x178
    fc04:	ldr	r0, [r3, r5, lsl #2]
    fc08:	cmp	r0, #0
    fc0c:	bne	fbec <readstat_parse_xport+0xc4c>
    fc10:	b	fbf0 <readstat_parse_xport+0xc50>
    fc14:	ldr	r0, [r4, #376]	; 0x178
    fc18:	bl	3eb4 <free@plt>
    fc1c:	ldr	r0, [r4, #48]	; 0x30
    fc20:	cmp	r0, #0
    fc24:	beq	fc2c <readstat_parse_xport+0xc8c>
    fc28:	bl	3dc4 <iconv_close@plt>
    fc2c:	mov	r0, r4
    fc30:	bl	3eb4 <free@plt>
    fc34:	mov	r0, r6
    fc38:	sub	sp, fp, #32
    fc3c:	ldrd	r4, [sp]
    fc40:	ldrd	r6, [sp, #8]
    fc44:	ldrd	r8, [sp, #16]
    fc48:	ldrd	sl, [sp, #24]
    fc4c:	add	sp, sp, #32
    fc50:	pop	{pc}		; (ldr pc, [sp], #4)
    fc54:	mov	r0, #2
    fc58:	b	fb7c <readstat_parse_xport+0xbdc>
    fc5c:	mov	r0, r6
    fc60:	b	fb7c <readstat_parse_xport+0xbdc>
    fc64:	add	r8, r8, #1
    fc68:	ldr	r2, [r4, #76]	; 0x4c
    fc6c:	mov	r1, r7
    fc70:	mov	r0, r4
    fc74:	bl	ea18 <read_bytes>
    fc78:	cmn	r0, #1
    fc7c:	beq	fc54 <readstat_parse_xport+0xcb4>
    fc80:	ldr	r3, [r4, #76]	; 0x4c
    fc84:	cmp	r3, r0
    fc88:	bhi	fc5c <readstat_parse_xport+0xcbc>
    fc8c:	cmp	r3, #0
    fc90:	beq	fc64 <readstat_parse_xport+0xcc4>
    fc94:	ldrb	r2, [r7]
    fc98:	cmp	r2, #32
    fc9c:	bne	fcc0 <readstat_parse_xport+0xd20>
    fca0:	mov	r2, r7
    fca4:	sub	r3, r3, #1
    fca8:	add	r3, r3, r7
    fcac:	cmp	r2, r3
    fcb0:	beq	fc64 <readstat_parse_xport+0xcc4>
    fcb4:	ldrb	r1, [r2, #1]!
    fcb8:	cmp	r1, #32
    fcbc:	beq	fcac <readstat_parse_xport+0xd0c>
    fcc0:	cmp	r8, #0
    fcc4:	bne	fb4c <readstat_parse_xport+0xbac>
    fcc8:	ldr	r2, [r4, #76]	; 0x4c
    fccc:	mov	r1, r7
    fcd0:	mov	r0, r4
    fcd4:	bl	ed1c <xport_process_row>
    fcd8:	cmp	r0, #0
    fcdc:	bne	fb7c <readstat_parse_xport+0xbdc>
    fce0:	ldr	r3, [r4, #52]	; 0x34
    fce4:	ldr	r8, [r3, #16]
    fce8:	ldr	r3, [r3, #20]
    fcec:	ldr	r2, [r4, #36]	; 0x24
    fcf0:	ldr	r1, [r4, #28]
    fcf4:	ldr	r0, [r4, #32]
    fcf8:	blx	r8
    fcfc:	cmp	r0, #0
    fd00:	bne	fb7c <readstat_parse_xport+0xbdc>
    fd04:	ldr	r3, [r4, #68]	; 0x44
    fd08:	cmp	r3, #0
    fd0c:	ble	fb3c <readstat_parse_xport+0xb9c>
    fd10:	ldr	r2, [r4, #80]	; 0x50
    fd14:	cmp	r3, r2
    fd18:	beq	fb7c <readstat_parse_xport+0xbdc>
    fd1c:	mov	r8, #0
    fd20:	b	fc68 <readstat_parse_xport+0xcc8>
    fd24:	mov	r6, r0
    fd28:	b	fba0 <readstat_parse_xport+0xc00>
    fd2c:	mov	r6, #4
    fd30:	b	fba0 <readstat_parse_xport+0xc00>
    fd34:	mov	r6, #3
    fd38:	b	fba0 <readstat_parse_xport+0xc00>
    fd3c:	.word	0x0003702c
    fd40:	.word	0x000178e0
    fd44:	.word	0x000178c8
    fd48:	.word	0x0001781c
    fd4c:	.word	0x000002dc
    fd50:	.word	0x000177d8
    fd54:	.word	0x000177d8
    fd58:	.word	0x000177c8
    fd5c:	.word	0x000177c8
    fd60:	.word	0x00017714
    fd64:	.word	0x00017630
    fd68:	.word	0x00017624
    fd6c:	.word	0x00017614
    fd70:	.word	0x00017598
    fd74:	.word	0x0001743c
    fd78:	.word	0x0001743c
    fd7c:	.word	0x00017218
    fd80:	.word	0x00017218
    fd84:	.word	0x00016f64
    fd88:	.word	0x00016f64

0000fd8c <copypad>:
    fd8c:	add	r1, r0, r1
    fd90:	cmp	r0, r1
    fd94:	bcs	fdd0 <copypad+0x44>
    fd98:	ldrb	r3, [r2]
    fd9c:	cmp	r3, #0
    fda0:	beq	fdbc <copypad+0x30>
    fda4:	strb	r3, [r0], #1
    fda8:	cmp	r1, r0
    fdac:	beq	fdd0 <copypad+0x44>
    fdb0:	ldrb	r3, [r2, #1]!
    fdb4:	cmp	r3, #0
    fdb8:	bne	fda4 <copypad+0x18>
    fdbc:	mov	r3, #32
    fdc0:	strb	r3, [r0], #1
    fdc4:	cmp	r1, r0
    fdc8:	bhi	fdc0 <copypad+0x34>
    fdcc:	bx	lr
    fdd0:	bx	lr

0000fdd4 <xport_variable_width>:
    fdd4:	cmp	r0, #0
    fdd8:	beq	fdf8 <xport_variable_width+0x24>
    fddc:	sub	r3, r1, #1
    fde0:	cmp	r3, #6
    fde4:	bhi	fe00 <xport_variable_width+0x2c>
    fde8:	cmp	r1, #3
    fdec:	movcs	r0, r1
    fdf0:	movcc	r0, #3
    fdf4:	bx	lr
    fdf8:	mov	r0, r1
    fdfc:	bx	lr
    fe00:	mov	r0, #8
    fe04:	bx	lr

0000fe08 <xport_write_missing_numeric>:
    fe08:	mov	r3, #46	; 0x2e
    fe0c:	strb	r3, [r0]
    fe10:	mov	r0, #0
    fe14:	bx	lr

0000fe18 <xport_write_row>:
    fe18:	push	{lr}		; (str lr, [sp, #-4]!)
    fe1c:	sub	sp, sp, #12
    fe20:	ldr	r3, [pc, #20]	; fe3c <xport_write_row+0x24>
    fe24:	add	r3, pc, r3
    fe28:	str	r3, [sp]
    fe2c:	mov	r3, #80	; 0x50
    fe30:	bl	4520 <readstat_write_bytes_as_lines@plt>
    fe34:	add	sp, sp, #12
    fe38:	pop	{pc}		; (ldr pc, [sp], #4)
    fe3c:	.word	0x00017074

0000fe40 <xport_finish_record>:
    fe40:	str	r4, [sp, #-8]!
    fe44:	str	lr, [sp, #4]
    fe48:	ldr	r3, [pc, #24]	; fe68 <xport_finish_record+0x28>
    fe4c:	add	r3, pc, r3
    fe50:	mov	r2, #80	; 0x50
    fe54:	mov	r1, #32
    fe58:	bl	44e4 <readstat_write_line_padding@plt>
    fe5c:	ldr	r4, [sp]
    fe60:	add	sp, sp, #4
    fe64:	pop	{pc}		; (ldr pc, [sp], #4)
    fe68:	.word	0x0001704c

0000fe6c <xport_end_data>:
    fe6c:	str	r4, [sp, #-8]!
    fe70:	str	lr, [sp, #4]
    fe74:	bl	fe40 <xport_finish_record>
    fe78:	ldr	r4, [sp]
    fe7c:	add	sp, sp, #4
    fe80:	pop	{pc}		; (ldr pc, [sp], #4)

0000fe84 <xport_write_missing_tagged>:
    fe84:	strd	r4, [sp, #-16]!
    fe88:	str	r6, [sp, #8]
    fe8c:	str	lr, [sp, #12]
    fe90:	mov	r5, r0
    fe94:	mov	r4, r2
    fe98:	mov	r0, r2
    fe9c:	bl	4148 <sas_validate_tag@plt>
    fea0:	cmp	r0, #0
    fea4:	strbeq	r4, [r5]
    fea8:	ldrd	r4, [sp]
    feac:	ldr	r6, [sp, #8]
    feb0:	add	sp, sp, #12
    feb4:	pop	{pc}		; (ldr pc, [sp], #4)

0000feb8 <xport_write_string>:
    feb8:	strd	r4, [sp, #-16]!
    febc:	str	r6, [sp, #8]
    fec0:	str	lr, [sp, #12]
    fec4:	mov	r6, r0
    fec8:	mov	r5, r1
    fecc:	mov	r4, r2
    fed0:	ldr	r2, [r1, #1596]	; 0x63c
    fed4:	mov	r1, #32
    fed8:	bl	42a4 <memset@plt>
    fedc:	cmp	r4, #0
    fee0:	moveq	r0, #0
    fee4:	beq	ff24 <xport_write_string+0x6c>
    fee8:	ldrb	r3, [r4]
    feec:	cmp	r3, #0
    fef0:	moveq	r0, #0
    fef4:	beq	ff24 <xport_write_string+0x6c>
    fef8:	mov	r0, r4
    fefc:	bl	41fc <strlen@plt>
    ff00:	ldr	r3, [r5, #1596]	; 0x63c
    ff04:	cmp	r3, r0
    ff08:	movcc	r0, #22
    ff0c:	bcc	ff24 <xport_write_string+0x6c>
    ff10:	mov	r2, r0
    ff14:	mov	r1, r4
    ff18:	mov	r0, r6
    ff1c:	bl	3f14 <memcpy@plt>
    ff20:	mov	r0, #0
    ff24:	ldrd	r4, [sp]
    ff28:	ldr	r6, [sp, #8]
    ff2c:	add	sp, sp, #12
    ff30:	pop	{pc}		; (ldr pc, [sp], #4)

0000ff34 <xport_write_double>:
    ff34:	strd	r4, [sp, #-12]!
    ff38:	str	lr, [sp, #8]
    ff3c:	sub	sp, sp, #20
    ff40:	mov	r4, r0
    ff44:	mov	r5, r1
    ff48:	vstr	d0, [sp]
    ff4c:	mov	r3, #1
    ff50:	add	r2, sp, #8
    ff54:	mov	r1, #0
    ff58:	mov	r0, sp
    ff5c:	bl	3ff8 <cnxptiee@plt>
    ff60:	cmp	r0, #0
    ff64:	movne	r0, #16
    ff68:	bne	ff80 <xport_write_double+0x4c>
    ff6c:	ldr	r2, [r5, #1596]	; 0x63c
    ff70:	add	r1, sp, #8
    ff74:	mov	r0, r4
    ff78:	bl	3f14 <memcpy@plt>
    ff7c:	mov	r0, #0
    ff80:	add	sp, sp, #20
    ff84:	ldrd	r4, [sp]
    ff88:	add	sp, sp, #8
    ff8c:	pop	{pc}		; (ldr pc, [sp], #4)

0000ff90 <xport_write_float>:
    ff90:	str	r4, [sp, #-8]!
    ff94:	str	lr, [sp, #4]
    ff98:	vcvt.f64.f32	d0, s0
    ff9c:	bl	ff34 <xport_write_double>
    ffa0:	ldr	r4, [sp]
    ffa4:	add	sp, sp, #4
    ffa8:	pop	{pc}		; (ldr pc, [sp], #4)

0000ffac <xport_write_int32>:
    ffac:	str	r4, [sp, #-8]!
    ffb0:	str	lr, [sp, #4]
    ffb4:	vmov	s15, r2
    ffb8:	vcvt.f64.s32	d0, s15
    ffbc:	bl	ff34 <xport_write_double>
    ffc0:	ldr	r4, [sp]
    ffc4:	add	sp, sp, #4
    ffc8:	pop	{pc}		; (ldr pc, [sp], #4)

0000ffcc <xport_write_int16>:
    ffcc:	str	r4, [sp, #-8]!
    ffd0:	str	lr, [sp, #4]
    ffd4:	vmov	s15, r2
    ffd8:	vcvt.f64.s32	d0, s15
    ffdc:	bl	ff34 <xport_write_double>
    ffe0:	ldr	r4, [sp]
    ffe4:	add	sp, sp, #4
    ffe8:	pop	{pc}		; (ldr pc, [sp], #4)

0000ffec <xport_write_int8>:
    ffec:	str	r4, [sp, #-8]!
    fff0:	str	lr, [sp, #4]
    fff4:	vmov	s15, r2
    fff8:	vcvt.f64.s32	d0, s15
    fffc:	bl	ff34 <xport_write_double>
   10000:	ldr	r4, [sp]
   10004:	add	sp, sp, #4
   10008:	pop	{pc}		; (ldr pc, [sp], #4)

0001000c <xport_metadata_ok>:
   1000c:	ldr	r3, [r0, #8]
   10010:	cmp	r3, #5
   10014:	cmpne	r3, #8
   10018:	bne	10070 <xport_metadata_ok+0x64>
   1001c:	ldrb	r2, [r0, #188]	; 0xbc
   10020:	cmp	r2, #0
   10024:	beq	10078 <xport_metadata_ok+0x6c>
   10028:	str	r4, [sp, #-8]!
   1002c:	str	lr, [sp, #4]
   10030:	cmp	r3, #8
   10034:	beq	10050 <xport_metadata_ok+0x44>
   10038:	cmp	r3, #5
   1003c:	movne	r0, #0
   10040:	beq	10060 <xport_metadata_ok+0x54>
   10044:	ldr	r4, [sp]
   10048:	add	sp, sp, #4
   1004c:	pop	{pc}		; (ldr pc, [sp], #4)
   10050:	mov	r1, #32
   10054:	add	r0, r0, #188	; 0xbc
   10058:	bl	3d40 <sas_validate_name@plt>
   1005c:	b	10044 <xport_metadata_ok+0x38>
   10060:	mov	r1, #8
   10064:	add	r0, r0, #188	; 0xbc
   10068:	bl	3d40 <sas_validate_name@plt>
   1006c:	b	10044 <xport_metadata_ok+0x38>
   10070:	mov	r0, #24
   10074:	bx	lr
   10078:	mov	r0, #0
   1007c:	bx	lr

00010080 <xport_write_missing_string>:
   10080:	str	r4, [sp, #-8]!
   10084:	str	lr, [sp, #4]
   10088:	ldr	r2, [r1, #1596]	; 0x63c
   1008c:	mov	r1, #32
   10090:	bl	42a4 <memset@plt>
   10094:	mov	r0, #0
   10098:	ldr	r4, [sp]
   1009c:	add	sp, sp, #4
   100a0:	pop	{pc}		; (ldr pc, [sp], #4)

000100a4 <xport_write_record>:
   100a4:	strd	r4, [sp, #-12]!
   100a8:	str	lr, [sp, #8]
   100ac:	sub	sp, sp, #12
   100b0:	mov	r5, r0
   100b4:	mov	r4, r1
   100b8:	mov	r0, r1
   100bc:	bl	41fc <strlen@plt>
   100c0:	ldr	r3, [pc, #60]	; 10104 <xport_write_record+0x60>
   100c4:	add	r3, pc, r3
   100c8:	str	r3, [sp]
   100cc:	mov	r3, #80	; 0x50
   100d0:	mov	r2, r0
   100d4:	mov	r1, r4
   100d8:	mov	r0, r5
   100dc:	bl	4520 <readstat_write_bytes_as_lines@plt>
   100e0:	cmp	r0, #0
   100e4:	beq	100f8 <xport_write_record+0x54>
   100e8:	add	sp, sp, #12
   100ec:	ldrd	r4, [sp]
   100f0:	add	sp, sp, #8
   100f4:	pop	{pc}		; (ldr pc, [sp], #4)
   100f8:	mov	r0, r5
   100fc:	bl	fe40 <xport_finish_record>
   10100:	b	100e8 <xport_write_record+0x44>
   10104:	.word	0x00016dd4

00010108 <xport_write_header_record>:
   10108:	strd	r4, [sp, #-12]!
   1010c:	str	lr, [sp, #8]
   10110:	sub	sp, sp, #116	; 0x74
   10114:	mov	r5, r0
   10118:	mov	r3, r1
   1011c:	ldr	r2, [r1, #32]
   10120:	str	r2, [sp, #20]
   10124:	ldr	r2, [r1, #28]
   10128:	str	r2, [sp, #16]
   1012c:	ldr	r2, [r1, #24]
   10130:	str	r2, [sp, #12]
   10134:	ldr	r2, [r1, #20]
   10138:	str	r2, [sp, #8]
   1013c:	ldr	r2, [r1, #16]
   10140:	str	r2, [sp, #4]
   10144:	ldr	r2, [r1, #12]
   10148:	str	r2, [sp]
   1014c:	ldr	r2, [pc, #44]	; 10180 <xport_write_header_record+0x78>
   10150:	add	r2, pc, r2
   10154:	mov	r1, #81	; 0x51
   10158:	add	r4, sp, #28
   1015c:	mov	r0, r4
   10160:	bl	4280 <snprintf@plt>
   10164:	mov	r1, r4
   10168:	mov	r0, r5
   1016c:	bl	100a4 <xport_write_record>
   10170:	add	sp, sp, #116	; 0x74
   10174:	ldrd	r4, [sp]
   10178:	add	sp, sp, #8
   1017c:	pop	{pc}		; (ldr pc, [sp], #4)
   10180:	.word	0x0001691c

00010184 <xport_write_variables>:
   10184:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10188:	strd	r6, [sp, #8]
   1018c:	strd	r8, [sp, #16]
   10190:	strd	sl, [sp, #24]
   10194:	str	lr, [sp, #32]
   10198:	sub	sp, sp, #220	; 0xdc
   1019c:	mov	r6, r0
   101a0:	ldr	r3, [r0, #28]
   101a4:	cmp	r3, #0
   101a8:	ble	103e0 <xport_write_variables+0x25c>
   101ac:	mov	r3, #0
   101b0:	mov	r5, r3
   101b4:	str	r3, [sp, #20]
   101b8:	mov	fp, r3
   101bc:	mov	r8, r3
   101c0:	add	r3, sp, #76	; 0x4c
   101c4:	str	r3, [sp, #8]
   101c8:	ldr	r9, [pc, #1336]	; 10708 <xport_write_variables+0x584>
   101cc:	add	r9, pc, r9
   101d0:	b	102e4 <xport_write_variables+0x160>
   101d4:	mov	r3, #0
   101d8:	str	r3, [sp, #24]
   101dc:	str	r3, [sp, #28]
   101e0:	add	r3, sp, #24
   101e4:	str	r3, [sp]
   101e8:	add	r3, sp, #28
   101ec:	add	r2, sp, #40	; 0x28
   101f0:	str	r2, [sp, #16]
   101f4:	ldr	r1, [pc, #1296]	; 1070c <xport_write_variables+0x588>
   101f8:	add	r1, pc, r1
   101fc:	add	r0, r4, #308	; 0x134
   10200:	bl	428c <__isoc99_sscanf@plt>
   10204:	ldr	r2, [sp, #16]
   10208:	mov	r1, #8
   1020c:	add	r0, sp, #132	; 0x84
   10210:	bl	fd8c <copypad>
   10214:	ldr	r3, [sp, #28]
   10218:	strh	r3, [sp, #140]	; 0x8c
   1021c:	ldr	r3, [sp, #24]
   10220:	strh	r3, [sp, #142]	; 0x8e
   10224:	ldr	r2, [sp, #16]
   10228:	mov	r1, #8
   1022c:	add	r0, sp, #148	; 0x94
   10230:	bl	fd8c <copypad>
   10234:	ldr	r3, [sp, #28]
   10238:	strh	r3, [sp, #156]	; 0x9c
   1023c:	ldr	r3, [sp, #24]
   10240:	strh	r3, [sp, #158]	; 0x9e
   10244:	ldr	r0, [sp, #16]
   10248:	bl	41fc <strlen@plt>
   1024c:	cmp	r0, #8
   10250:	movls	r3, #0
   10254:	strls	r3, [sp, #16]
   10258:	bls	10268 <xport_write_variables+0xe4>
   1025c:	mov	r3, #1
   10260:	str	r3, [sp, #16]
   10264:	str	r3, [sp, #20]
   10268:	ldr	r3, [r4, #2132]	; 0x854
   1026c:	cmp	r3, #3
   10270:	movne	r3, #0
   10274:	moveq	r3, #1
   10278:	strh	r3, [sp, #144]	; 0x90
   1027c:	ldr	r3, [r6, #8]
   10280:	cmp	r3, #8
   10284:	beq	103b4 <xport_write_variables+0x230>
   10288:	ldr	r3, [sp, #16]
   1028c:	cmp	r3, #0
   10290:	beq	10298 <xport_write_variables+0x114>
   10294:	add	fp, fp, #1
   10298:	ldr	r3, [sp, #12]
   1029c:	add	r8, r3, r7
   102a0:	ldr	r4, [sp, #8]
   102a4:	mov	r0, r4
   102a8:	bl	4088 <xport_namestr_bswap@plt>
   102ac:	ldr	r3, [pc, #1116]	; 10710 <xport_write_variables+0x58c>
   102b0:	add	r3, pc, r3
   102b4:	str	r3, [sp]
   102b8:	mov	r3, #80	; 0x50
   102bc:	mov	r2, #140	; 0x8c
   102c0:	mov	r1, r4
   102c4:	mov	r0, r6
   102c8:	bl	4520 <readstat_write_bytes_as_lines@plt>
   102cc:	cmp	r0, #0
   102d0:	bne	1041c <xport_write_variables+0x298>
   102d4:	add	r5, r5, #1
   102d8:	ldr	r3, [r6, #28]
   102dc:	cmp	r3, r5
   102e0:	ble	103ec <xport_write_variables+0x268>
   102e4:	mov	r1, r5
   102e8:	mov	r0, r6
   102ec:	bl	437c <readstat_get_variable@plt>
   102f0:	mov	r4, r0
   102f4:	ldr	r1, [r0, #1600]	; 0x640
   102f8:	ldr	r0, [r0]
   102fc:	bl	fdd4 <xport_variable_width>
   10300:	mov	r7, r0
   10304:	mov	r2, #140	; 0x8c
   10308:	mov	r1, #0
   1030c:	ldr	r0, [sp, #8]
   10310:	bl	42a4 <memset@plt>
   10314:	strh	r7, [sp, #80]	; 0x50
   10318:	add	r3, r5, #1
   1031c:	strh	r3, [sp, #82]	; 0x52
   10320:	ldrd	r2, [r9]
   10324:	strd	r2, [sp, #132]	; 0x84
   10328:	strd	r2, [sp, #148]	; 0x94
   1032c:	str	r8, [sp, #12]
   10330:	str	r8, [sp, #160]	; 0xa0
   10334:	mov	r0, r4
   10338:	bl	4544 <readstat_variable_get_type_class@plt>
   1033c:	cmp	r0, #0
   10340:	moveq	r3, #2
   10344:	movne	r3, #1
   10348:	strh	r3, [sp, #76]	; 0x4c
   1034c:	add	r8, r4, #8
   10350:	mov	r2, r8
   10354:	mov	r1, #8
   10358:	add	r0, sp, #84	; 0x54
   1035c:	bl	fd8c <copypad>
   10360:	add	sl, r4, #564	; 0x234
   10364:	mov	r2, sl
   10368:	mov	r1, #40	; 0x28
   1036c:	add	r0, sp, #92	; 0x5c
   10370:	bl	fd8c <copypad>
   10374:	ldrb	r3, [r4, #308]	; 0x134
   10378:	cmp	r3, #0
   1037c:	bne	101d4 <xport_write_variables+0x50>
   10380:	ldr	r3, [r4, #2136]	; 0x858
   10384:	cmp	r3, #0
   10388:	strhne	r3, [sp, #140]	; 0x8c
   1038c:	ldr	r3, [r4, #2132]	; 0x854
   10390:	cmp	r3, #3
   10394:	movne	r3, #0
   10398:	moveq	r3, #1
   1039c:	strh	r3, [sp, #144]	; 0x90
   103a0:	ldr	r3, [r6, #8]
   103a4:	cmp	r3, #8
   103a8:	bne	10298 <xport_write_variables+0x114>
   103ac:	mov	r3, #0
   103b0:	str	r3, [sp, #16]
   103b4:	mov	r2, r8
   103b8:	mov	r1, #32
   103bc:	add	r0, sp, #164	; 0xa4
   103c0:	bl	fd8c <copypad>
   103c4:	mov	r0, sl
   103c8:	bl	41fc <strlen@plt>
   103cc:	cmp	r0, #40	; 0x28
   103d0:	strhhi	r0, [sp, #196]	; 0xc4
   103d4:	bhi	10294 <xport_write_variables+0x110>
   103d8:	strh	r0, [sp, #196]	; 0xc4
   103dc:	b	10288 <xport_write_variables+0x104>
   103e0:	mov	r3, #0
   103e4:	str	r3, [sp, #20]
   103e8:	mov	fp, r3
   103ec:	mov	r0, r6
   103f0:	bl	fe40 <xport_finish_record>
   103f4:	cmp	r0, #0
   103f8:	bne	1041c <xport_write_variables+0x298>
   103fc:	ldr	r2, [r6, #8]
   10400:	cmp	r2, #8
   10404:	movne	r3, #0
   10408:	moveq	r3, #1
   1040c:	cmp	fp, #0
   10410:	moveq	r3, #0
   10414:	cmp	r3, #0
   10418:	bne	10438 <xport_write_variables+0x2b4>
   1041c:	add	sp, sp, #220	; 0xdc
   10420:	ldrd	r4, [sp]
   10424:	ldrd	r6, [sp, #8]
   10428:	ldrd	r8, [sp, #16]
   1042c:	ldrd	sl, [sp, #24]
   10430:	add	sp, sp, #32
   10434:	pop	{pc}		; (ldr pc, [sp], #4)
   10438:	mov	r1, #0
   1043c:	str	r1, [sp, #48]	; 0x30
   10440:	str	r1, [sp, #56]	; 0x38
   10444:	str	r1, [sp, #60]	; 0x3c
   10448:	str	r1, [sp, #64]	; 0x40
   1044c:	str	r1, [sp, #68]	; 0x44
   10450:	str	r1, [sp, #72]	; 0x48
   10454:	ldr	r3, [pc, #696]	; 10714 <xport_write_variables+0x590>
   10458:	add	r3, pc, r3
   1045c:	ldrd	r2, [r3, #12]
   10460:	strd	r2, [sp, #40]	; 0x28
   10464:	strb	r1, [sp, #48]	; 0x30
   10468:	str	fp, [sp, #52]	; 0x34
   1046c:	ldr	r3, [sp, #20]
   10470:	cmp	r3, r1
   10474:	bne	104dc <xport_write_variables+0x358>
   10478:	str	fp, [sp]
   1047c:	add	r3, sp, #40	; 0x28
   10480:	ldr	r2, [pc, #656]	; 10718 <xport_write_variables+0x594>
   10484:	add	r2, pc, r2
   10488:	mov	r1, #81	; 0x51
   1048c:	add	r4, sp, #76	; 0x4c
   10490:	mov	r0, r4
   10494:	bl	4280 <snprintf@plt>
   10498:	mov	r1, r4
   1049c:	mov	r0, r6
   104a0:	bl	100a4 <xport_write_record>
   104a4:	cmp	r0, #0
   104a8:	bne	1041c <xport_write_variables+0x298>
   104ac:	ldr	r3, [r6, #28]
   104b0:	cmp	r3, #0
   104b4:	ble	106fc <xport_write_variables+0x578>
   104b8:	mov	r4, #0
   104bc:	mov	sl, #0
   104c0:	mov	fp, #0
   104c4:	add	r3, sp, #28
   104c8:	str	r3, [sp, #12]
   104cc:	ldr	r3, [pc, #584]	; 1071c <xport_write_variables+0x598>
   104d0:	add	r3, pc, r3
   104d4:	str	r3, [sp, #16]
   104d8:	b	10664 <xport_write_variables+0x4e0>
   104dc:	ldr	r3, [pc, #572]	; 10720 <xport_write_variables+0x59c>
   104e0:	add	r3, pc, r3
   104e4:	ldrd	r2, [r3]
   104e8:	strd	r2, [sp, #40]	; 0x28
   104ec:	b	10478 <xport_write_variables+0x2f4>
   104f0:	mov	r3, #2
   104f4:	str	r3, [sp, #24]
   104f8:	mov	r3, #8
   104fc:	str	r3, [sp, #28]
   10500:	add	r3, sp, #24
   10504:	str	r3, [sp]
   10508:	ldr	r3, [sp, #12]
   1050c:	add	r2, sp, #76	; 0x4c
   10510:	ldr	r1, [sp, #16]
   10514:	add	r0, r5, #308	; 0x134
   10518:	bl	428c <__isoc99_sscanf@plt>
   1051c:	cmp	r0, #0
   10520:	ble	105cc <xport_write_variables+0x448>
   10524:	add	r0, sp, #76	; 0x4c
   10528:	bl	41fc <strlen@plt>
   1052c:	cmp	r0, #8
   10530:	ble	106ac <xport_write_variables+0x528>
   10534:	add	r3, r4, #1
   10538:	strh	r3, [sp, #28]
   1053c:	ldr	r3, [sp, #8]
   10540:	strh	r3, [sp, #30]
   10544:	uxth	r0, r0
   10548:	strh	r0, [sp, #32]
   1054c:	strh	r0, [sp, #34]	; 0x22
   10550:	strh	r9, [sp, #36]	; 0x24
   10554:	bl	3ea8 <machine_is_little_endian@plt>
   10558:	cmp	r0, #0
   1055c:	bne	105d4 <xport_write_variables+0x450>
   10560:	mov	r2, #10
   10564:	ldr	r1, [sp, #12]
   10568:	mov	r0, r6
   1056c:	bl	4454 <readstat_write_bytes@plt>
   10570:	cmp	r0, #0
   10574:	bne	1041c <xport_write_variables+0x298>
   10578:	mov	r1, r8
   1057c:	mov	r0, r6
   10580:	bl	4154 <readstat_write_string@plt>
   10584:	cmp	r0, #0
   10588:	bne	1041c <xport_write_variables+0x298>
   1058c:	add	r1, sp, #76	; 0x4c
   10590:	mov	r0, r6
   10594:	bl	4154 <readstat_write_string@plt>
   10598:	cmp	r0, #0
   1059c:	bne	1041c <xport_write_variables+0x298>
   105a0:	add	r1, sp, #76	; 0x4c
   105a4:	mov	r0, r6
   105a8:	bl	4154 <readstat_write_string@plt>
   105ac:	cmp	r0, #0
   105b0:	bne	1041c <xport_write_variables+0x298>
   105b4:	mov	r1, r7
   105b8:	mov	r0, r6
   105bc:	bl	4154 <readstat_write_string@plt>
   105c0:	cmp	r0, #0
   105c4:	beq	10654 <xport_write_variables+0x4d0>
   105c8:	b	1041c <xport_write_variables+0x298>
   105cc:	mov	r0, #11
   105d0:	b	1041c <xport_write_variables+0x298>
   105d4:	ldrh	r0, [sp, #28]
   105d8:	bl	3e9c <byteswap2@plt>
   105dc:	strh	r0, [sp, #28]
   105e0:	ldrh	r0, [sp, #30]
   105e4:	bl	3e9c <byteswap2@plt>
   105e8:	strh	r0, [sp, #30]
   105ec:	ldrh	r0, [sp, #32]
   105f0:	bl	3e9c <byteswap2@plt>
   105f4:	strh	r0, [sp, #32]
   105f8:	ldrh	r0, [sp, #34]	; 0x22
   105fc:	bl	3e9c <byteswap2@plt>
   10600:	strh	r0, [sp, #34]	; 0x22
   10604:	ldrh	r0, [sp, #36]	; 0x24
   10608:	bl	3e9c <byteswap2@plt>
   1060c:	strh	r0, [sp, #36]	; 0x24
   10610:	b	10560 <xport_write_variables+0x3dc>
   10614:	mov	r2, #6
   10618:	ldr	r1, [sp, #12]
   1061c:	mov	r0, r6
   10620:	bl	4454 <readstat_write_bytes@plt>
   10624:	cmp	r0, #0
   10628:	bne	1041c <xport_write_variables+0x298>
   1062c:	mov	r1, r8
   10630:	mov	r0, r6
   10634:	bl	4154 <readstat_write_string@plt>
   10638:	cmp	r0, #0
   1063c:	bne	1041c <xport_write_variables+0x298>
   10640:	mov	r1, r7
   10644:	mov	r0, r6
   10648:	bl	4154 <readstat_write_string@plt>
   1064c:	cmp	r0, #0
   10650:	bne	1041c <xport_write_variables+0x298>
   10654:	add	r4, r4, #1
   10658:	ldr	r3, [r6, #28]
   1065c:	cmp	r3, r4
   10660:	ble	106fc <xport_write_variables+0x578>
   10664:	mov	r1, r4
   10668:	mov	r0, r6
   1066c:	bl	437c <readstat_get_variable@plt>
   10670:	mov	r5, r0
   10674:	add	r7, r0, #564	; 0x234
   10678:	mov	r0, r7
   1067c:	bl	41fc <strlen@plt>
   10680:	mov	r9, r0
   10684:	add	r8, r5, #8
   10688:	mov	r0, r8
   1068c:	bl	41fc <strlen@plt>
   10690:	str	r0, [sp, #8]
   10694:	strd	sl, [sp, #76]	; 0x4c
   10698:	strd	sl, [sp, #84]	; 0x54
   1069c:	strd	sl, [sp, #92]	; 0x5c
   106a0:	ldrb	r3, [r5, #308]	; 0x134
   106a4:	cmp	r3, #0
   106a8:	bne	104f0 <xport_write_variables+0x36c>
   106ac:	cmp	r9, #40	; 0x28
   106b0:	bls	10654 <xport_write_variables+0x4d0>
   106b4:	add	r3, r4, #1
   106b8:	strh	r3, [sp, #28]
   106bc:	ldr	r3, [sp, #8]
   106c0:	strh	r3, [sp, #30]
   106c4:	strh	r9, [sp, #32]
   106c8:	bl	3ea8 <machine_is_little_endian@plt>
   106cc:	cmp	r0, #0
   106d0:	beq	10614 <xport_write_variables+0x490>
   106d4:	ldrh	r0, [sp, #28]
   106d8:	bl	3e9c <byteswap2@plt>
   106dc:	strh	r0, [sp, #28]
   106e0:	ldrh	r0, [sp, #30]
   106e4:	bl	3e9c <byteswap2@plt>
   106e8:	strh	r0, [sp, #30]
   106ec:	ldrh	r0, [sp, #32]
   106f0:	bl	3e9c <byteswap2@plt>
   106f4:	strh	r0, [sp, #32]
   106f8:	b	10614 <xport_write_variables+0x490>
   106fc:	mov	r0, r6
   10700:	bl	fe40 <xport_finish_record>
   10704:	b	1041c <xport_write_variables+0x298>
   10708:	.word	0x00016858
   1070c:	.word	0x000167a4
   10710:	.word	0x00016be8
   10714:	.word	0x000165cc
   10718:	.word	0x00016630
   1071c:	.word	0x000164cc
   10720:	.word	0x0001653c

00010724 <xport_begin_data>:
   10724:	strd	r4, [sp, #-20]!	; 0xffffffec
   10728:	strd	r6, [sp, #8]
   1072c:	str	lr, [sp, #16]
   10730:	sub	sp, sp, #132	; 0x84
   10734:	mov	r4, r0
   10738:	ldr	r5, [pc, #1264]	; 10c30 <xport_begin_data+0x50c>
   1073c:	add	r5, pc, r5
   10740:	ldr	r3, [r0, #20]
   10744:	str	r3, [sp, #24]
   10748:	add	r0, sp, #24
   1074c:	bl	4160 <localtime@plt>
   10750:	cmp	r0, #0
   10754:	moveq	r0, #39	; 0x27
   10758:	beq	10844 <xport_begin_data+0x120>
   1075c:	ldr	lr, [r0, #12]
   10760:	movw	r2, #34079	; 0x851f
   10764:	movt	r2, #20971	; 0x51eb
   10768:	umull	r1, r3, r2, lr
   1076c:	lsr	r3, r3, #5
   10770:	mov	r1, #100	; 0x64
   10774:	ldr	r6, [r0]
   10778:	umull	r7, ip, r2, r6
   1077c:	lsr	ip, ip, #5
   10780:	mls	ip, r1, ip, r6
   10784:	str	ip, [sp, #16]
   10788:	ldr	r6, [r0, #4]
   1078c:	umull	r7, ip, r2, r6
   10790:	lsr	ip, ip, #5
   10794:	mls	ip, r1, ip, r6
   10798:	str	ip, [sp, #12]
   1079c:	ldr	r6, [r0, #8]
   107a0:	umull	r7, ip, r2, r6
   107a4:	lsr	ip, ip, #5
   107a8:	mls	ip, r1, ip, r6
   107ac:	str	ip, [sp, #8]
   107b0:	ldr	ip, [r0, #20]
   107b4:	umull	r6, r2, r2, ip
   107b8:	lsr	r2, r2, #5
   107bc:	mls	r2, r1, r2, ip
   107c0:	str	r2, [sp, #4]
   107c4:	ldr	r0, [r0, #16]
   107c8:	ldr	r2, [pc, #1124]	; 10c34 <xport_begin_data+0x510>
   107cc:	ldr	r2, [r5, r2]
   107d0:	add	r2, r2, r0, lsl #2
   107d4:	str	r2, [sp]
   107d8:	mls	r3, r1, r3, lr
   107dc:	ldr	r2, [pc, #1108]	; 10c38 <xport_begin_data+0x514>
   107e0:	add	r2, pc, r2
   107e4:	mov	r1, #17
   107e8:	add	r0, sp, #108	; 0x6c
   107ec:	bl	4280 <snprintf@plt>
   107f0:	mov	r3, #0
   107f4:	str	r3, [sp, #32]
   107f8:	str	r3, [sp, #36]	; 0x24
   107fc:	str	r3, [sp, #40]	; 0x28
   10800:	str	r3, [sp, #44]	; 0x2c
   10804:	str	r3, [sp, #48]	; 0x30
   10808:	str	r3, [sp, #52]	; 0x34
   1080c:	str	r3, [sp, #56]	; 0x38
   10810:	ldr	r2, [pc, #1060]	; 10c3c <xport_begin_data+0x518>
   10814:	add	r2, pc, r2
   10818:	ldrd	r0, [r2, #24]
   1081c:	strd	r0, [sp, #24]
   10820:	strb	r3, [sp, #32]
   10824:	ldr	r3, [r4, #8]
   10828:	cmp	r3, #8
   1082c:	beq	10858 <xport_begin_data+0x134>
   10830:	add	r1, sp, #24
   10834:	mov	r0, r4
   10838:	bl	10108 <xport_write_header_record>
   1083c:	cmp	r0, #0
   10840:	beq	10874 <xport_begin_data+0x150>
   10844:	add	sp, sp, #132	; 0x84
   10848:	ldrd	r4, [sp]
   1084c:	ldrd	r6, [sp, #8]
   10850:	add	sp, sp, #16
   10854:	pop	{pc}		; (ldr pc, [sp], #4)
   10858:	ldr	r3, [pc, #992]	; 10c40 <xport_begin_data+0x51c>
   1085c:	add	r3, pc, r3
   10860:	ldr	r2, [r3]
   10864:	str	r2, [sp, #24]
   10868:	ldrh	r3, [r3, #4]
   1086c:	strh	r3, [sp, #28]
   10870:	b	10830 <xport_begin_data+0x10c>
   10874:	ldr	r3, [pc, #968]	; 10c44 <xport_begin_data+0x520>
   10878:	add	r3, pc, r3
   1087c:	add	r2, sp, #108	; 0x6c
   10880:	str	r2, [sp, #20]
   10884:	ldr	r2, [pc, #956]	; 10c48 <xport_begin_data+0x524>
   10888:	add	r2, pc, r2
   1088c:	str	r2, [sp, #16]
   10890:	ldr	r2, [pc, #948]	; 10c4c <xport_begin_data+0x528>
   10894:	add	r2, pc, r2
   10898:	str	r2, [sp, #12]
   1089c:	ldr	r2, [pc, #940]	; 10c50 <xport_begin_data+0x52c>
   108a0:	add	r2, pc, r2
   108a4:	str	r2, [sp, #8]
   108a8:	ldr	r2, [pc, #932]	; 10c54 <xport_begin_data+0x530>
   108ac:	add	r2, pc, r2
   108b0:	str	r2, [sp, #4]
   108b4:	str	r3, [sp]
   108b8:	ldr	r2, [pc, #920]	; 10c58 <xport_begin_data+0x534>
   108bc:	add	r2, pc, r2
   108c0:	mov	r1, #81	; 0x51
   108c4:	add	r5, sp, #24
   108c8:	mov	r0, r5
   108cc:	bl	4280 <snprintf@plt>
   108d0:	mov	r1, r5
   108d4:	mov	r0, r4
   108d8:	bl	100a4 <xport_write_record>
   108dc:	cmp	r0, #0
   108e0:	bne	10844 <xport_begin_data+0x120>
   108e4:	add	r1, sp, #108	; 0x6c
   108e8:	mov	r0, r4
   108ec:	bl	100a4 <xport_write_record>
   108f0:	cmp	r0, #0
   108f4:	bne	10844 <xport_begin_data+0x120>
   108f8:	mov	r0, #0
   108fc:	mov	r1, #0
   10900:	strd	r0, [sp, #32]
   10904:	strd	r0, [sp, #40]	; 0x28
   10908:	strd	r0, [sp, #48]	; 0x30
   1090c:	ldr	r3, [pc, #840]	; 10c5c <xport_begin_data+0x538>
   10910:	add	r3, pc, r3
   10914:	add	r2, r3, #36	; 0x24
   10918:	ldr	r3, [r3, #36]	; 0x24
   1091c:	str	r3, [sp, #24]
   10920:	ldrh	r1, [r2, #4]
   10924:	strh	r1, [sp, #28]
   10928:	ldrb	r2, [r2, #6]
   1092c:	strb	r2, [sp, #30]
   10930:	mov	r3, #0
   10934:	strh	r3, [sp, #31]
   10938:	mov	r3, #160	; 0xa0
   1093c:	str	r3, [sp, #48]	; 0x30
   10940:	mov	r3, #140	; 0x8c
   10944:	str	r3, [sp, #56]	; 0x38
   10948:	ldr	r3, [r4, #8]
   1094c:	cmp	r3, #8
   10950:	beq	10b50 <xport_begin_data+0x42c>
   10954:	add	r1, sp, #24
   10958:	mov	r0, r4
   1095c:	bl	10108 <xport_write_header_record>
   10960:	cmp	r0, #0
   10964:	bne	10844 <xport_begin_data+0x120>
   10968:	mov	r3, #0
   1096c:	str	r3, [sp, #32]
   10970:	str	r3, [sp, #36]	; 0x24
   10974:	str	r3, [sp, #40]	; 0x28
   10978:	str	r3, [sp, #44]	; 0x2c
   1097c:	str	r3, [sp, #48]	; 0x30
   10980:	str	r3, [sp, #52]	; 0x34
   10984:	str	r3, [sp, #56]	; 0x38
   10988:	ldr	r2, [pc, #720]	; 10c60 <xport_begin_data+0x53c>
   1098c:	add	r2, pc, r2
   10990:	ldrd	r0, [r2, #48]	; 0x30
   10994:	strd	r0, [sp, #24]
   10998:	strb	r3, [sp, #32]
   1099c:	ldr	r3, [r4, #8]
   109a0:	cmp	r3, #8
   109a4:	beq	10b74 <xport_begin_data+0x450>
   109a8:	add	r1, sp, #24
   109ac:	mov	r0, r4
   109b0:	bl	10108 <xport_write_header_record>
   109b4:	cmp	r0, #0
   109b8:	bne	10844 <xport_begin_data+0x120>
   109bc:	ldr	r3, [r4, #8]
   109c0:	cmp	r3, #8
   109c4:	beq	10b88 <xport_begin_data+0x464>
   109c8:	ldrb	r3, [r4, #188]	; 0xbc
   109cc:	cmp	r3, #0
   109d0:	addne	r3, r4, #188	; 0xbc
   109d4:	bne	109e0 <xport_begin_data+0x2bc>
   109d8:	ldr	r3, [pc, #644]	; 10c64 <xport_begin_data+0x540>
   109dc:	add	r3, pc, r3
   109e0:	add	r2, sp, #108	; 0x6c
   109e4:	str	r2, [sp, #20]
   109e8:	ldr	r2, [pc, #632]	; 10c68 <xport_begin_data+0x544>
   109ec:	add	r2, pc, r2
   109f0:	str	r2, [sp, #16]
   109f4:	ldr	r2, [pc, #624]	; 10c6c <xport_begin_data+0x548>
   109f8:	add	r2, pc, r2
   109fc:	str	r2, [sp, #12]
   10a00:	ldr	r2, [pc, #616]	; 10c70 <xport_begin_data+0x54c>
   10a04:	add	r2, pc, r2
   10a08:	str	r2, [sp, #8]
   10a0c:	ldr	r2, [pc, #608]	; 10c74 <xport_begin_data+0x550>
   10a10:	add	r2, pc, r2
   10a14:	str	r2, [sp, #4]
   10a18:	str	r3, [sp]
   10a1c:	ldr	r3, [pc, #596]	; 10c78 <xport_begin_data+0x554>
   10a20:	add	r3, pc, r3
   10a24:	ldr	r2, [pc, #592]	; 10c7c <xport_begin_data+0x558>
   10a28:	add	r2, pc, r2
   10a2c:	mov	r1, #81	; 0x51
   10a30:	add	r5, sp, #24
   10a34:	mov	r0, r5
   10a38:	bl	4280 <snprintf@plt>
   10a3c:	mov	r1, r5
   10a40:	mov	r0, r4
   10a44:	bl	100a4 <xport_write_record>
   10a48:	cmp	r0, #0
   10a4c:	bne	10844 <xport_begin_data+0x120>
   10a50:	ldr	r3, [pc, #552]	; 10c80 <xport_begin_data+0x55c>
   10a54:	add	r3, pc, r3
   10a58:	str	r3, [sp, #8]
   10a5c:	add	r2, r4, #88	; 0x58
   10a60:	str	r2, [sp, #4]
   10a64:	str	r3, [sp]
   10a68:	add	r3, sp, #108	; 0x6c
   10a6c:	ldr	r2, [pc, #528]	; 10c84 <xport_begin_data+0x560>
   10a70:	add	r2, pc, r2
   10a74:	mov	r1, #81	; 0x51
   10a78:	add	r5, sp, #24
   10a7c:	mov	r0, r5
   10a80:	bl	4280 <snprintf@plt>
   10a84:	mov	r1, r5
   10a88:	mov	r0, r4
   10a8c:	bl	100a4 <xport_write_record>
   10a90:	cmp	r0, #0
   10a94:	bne	10844 <xport_begin_data+0x120>
   10a98:	mov	r3, #0
   10a9c:	str	r3, [sp, #32]
   10aa0:	str	r3, [sp, #36]	; 0x24
   10aa4:	str	r3, [sp, #44]	; 0x2c
   10aa8:	str	r3, [sp, #48]	; 0x30
   10aac:	str	r3, [sp, #52]	; 0x34
   10ab0:	str	r3, [sp, #56]	; 0x38
   10ab4:	ldr	r2, [pc, #460]	; 10c88 <xport_begin_data+0x564>
   10ab8:	add	r2, pc, r2
   10abc:	ldrd	r0, [r2, #60]	; 0x3c
   10ac0:	strd	r0, [sp, #24]
   10ac4:	strb	r3, [sp, #32]
   10ac8:	ldr	r3, [r4, #28]
   10acc:	str	r3, [sp, #40]	; 0x28
   10ad0:	ldr	r3, [r4, #8]
   10ad4:	cmp	r3, #8
   10ad8:	beq	10c00 <xport_begin_data+0x4dc>
   10adc:	add	r1, sp, #24
   10ae0:	mov	r0, r4
   10ae4:	bl	10108 <xport_write_header_record>
   10ae8:	cmp	r0, #0
   10aec:	bne	10844 <xport_begin_data+0x120>
   10af0:	mov	r0, r4
   10af4:	bl	10184 <xport_write_variables>
   10af8:	cmp	r0, #0
   10afc:	bne	10844 <xport_begin_data+0x120>
   10b00:	mov	r3, #0
   10b04:	str	r3, [sp, #32]
   10b08:	str	r3, [sp, #36]	; 0x24
   10b0c:	str	r3, [sp, #40]	; 0x28
   10b10:	str	r3, [sp, #44]	; 0x2c
   10b14:	str	r3, [sp, #48]	; 0x30
   10b18:	str	r3, [sp, #52]	; 0x34
   10b1c:	str	r3, [sp, #56]	; 0x38
   10b20:	movw	r2, #16975	; 0x424f
   10b24:	movt	r2, #83	; 0x53
   10b28:	str	r2, [sp, #24]
   10b2c:	str	r3, [sp, #28]
   10b30:	strb	r3, [sp, #32]
   10b34:	ldr	r3, [r4, #8]
   10b38:	cmp	r3, #8
   10b3c:	beq	10c14 <xport_begin_data+0x4f0>
   10b40:	add	r1, sp, #24
   10b44:	mov	r0, r4
   10b48:	bl	10108 <xport_write_header_record>
   10b4c:	b	10844 <xport_begin_data+0x120>
   10b50:	ldr	r2, [pc, #308]	; 10c8c <xport_begin_data+0x568>
   10b54:	add	r2, pc, r2
   10b58:	ldr	r3, [r2]
   10b5c:	str	r3, [sp, #24]
   10b60:	ldrh	r1, [r2, #4]
   10b64:	strh	r1, [sp, #28]
   10b68:	ldrb	r2, [r2, #6]
   10b6c:	strb	r2, [sp, #30]
   10b70:	b	10954 <xport_begin_data+0x230>
   10b74:	ldr	r3, [pc, #276]	; 10c90 <xport_begin_data+0x56c>
   10b78:	add	r3, pc, r3
   10b7c:	ldrd	r2, [r3]
   10b80:	strd	r2, [sp, #24]
   10b84:	b	109a8 <xport_begin_data+0x284>
   10b88:	ldrb	r3, [r4, #188]	; 0xbc
   10b8c:	cmp	r3, #0
   10b90:	addne	r3, r4, #188	; 0xbc
   10b94:	bne	10ba0 <xport_begin_data+0x47c>
   10b98:	ldr	r3, [pc, #244]	; 10c94 <xport_begin_data+0x570>
   10b9c:	add	r3, pc, r3
   10ba0:	add	r2, sp, #108	; 0x6c
   10ba4:	str	r2, [sp, #16]
   10ba8:	ldr	r2, [pc, #232]	; 10c98 <xport_begin_data+0x574>
   10bac:	add	r2, pc, r2
   10bb0:	str	r2, [sp, #12]
   10bb4:	ldr	r2, [pc, #224]	; 10c9c <xport_begin_data+0x578>
   10bb8:	add	r2, pc, r2
   10bbc:	str	r2, [sp, #8]
   10bc0:	ldr	r2, [pc, #216]	; 10ca0 <xport_begin_data+0x57c>
   10bc4:	add	r2, pc, r2
   10bc8:	str	r2, [sp, #4]
   10bcc:	str	r3, [sp]
   10bd0:	ldr	r3, [pc, #204]	; 10ca4 <xport_begin_data+0x580>
   10bd4:	add	r3, pc, r3
   10bd8:	ldr	r2, [pc, #200]	; 10ca8 <xport_begin_data+0x584>
   10bdc:	add	r2, pc, r2
   10be0:	mov	r1, #81	; 0x51
   10be4:	add	r5, sp, #24
   10be8:	mov	r0, r5
   10bec:	bl	4280 <snprintf@plt>
   10bf0:	mov	r1, r5
   10bf4:	mov	r0, r4
   10bf8:	bl	100a4 <xport_write_record>
   10bfc:	b	10a48 <xport_begin_data+0x324>
   10c00:	ldr	r3, [pc, #164]	; 10cac <xport_begin_data+0x588>
   10c04:	add	r3, pc, r3
   10c08:	ldrd	r2, [r3]
   10c0c:	strd	r2, [sp, #24]
   10c10:	b	10adc <xport_begin_data+0x3b8>
   10c14:	ldr	r3, [pc, #148]	; 10cb0 <xport_begin_data+0x58c>
   10c18:	add	r3, pc, r3
   10c1c:	ldr	r2, [r3]
   10c20:	str	r2, [sp, #24]
   10c24:	ldrh	r3, [r3, #4]
   10c28:	strh	r3, [sp, #28]
   10c2c:	b	10b40 <xport_begin_data+0x41c>
   10c30:	.word	0x000358bc
   10c34:	.word	0x000002dc
   10c38:	.word	0x00016308
   10c3c:	.word	0x00016210
   10c40:	.word	0x00016158
   10c44:	.word	0x00016290
   10c48:	.word	0x00016610
   10c4c:	.word	0x000162a8
   10c50:	.word	0x000162a4
   10c54:	.word	0x000162a0
   10c58:	.word	0x00016250
   10c5c:	.word	0x00016114
   10c60:	.word	0x00016098
   10c64:	.word	0x00015cac
   10c68:	.word	0x000164ac
   10c6c:	.word	0x00016144
   10c70:	.word	0x00016140
   10c74:	.word	0x0001616c
   10c78:	.word	0x000160e8
   10c7c:	.word	0x000160e4
   10c80:	.word	0x00016444
   10c84:	.word	0x00016114
   10c88:	.word	0x00015f6c
   10c8c:	.word	0x00015e84
   10c90:	.word	0x00015e70
   10c94:	.word	0x00015aec
   10c98:	.word	0x00015f90
   10c9c:	.word	0x00015f8c
   10ca0:	.word	0x00015fb8
   10ca4:	.word	0x00015f34
   10ca8:	.word	0x00015f78
   10cac:	.word	0x00015dfc
   10cb0:	.word	0x00015df0

00010cb4 <readstat_begin_writing_xport>:
   10cb4:	str	r4, [sp, #-8]!
   10cb8:	str	lr, [sp, #4]
   10cbc:	ldr	r3, [pc, #212]	; 10d98 <readstat_begin_writing_xport+0xe4>
   10cc0:	add	r3, pc, r3
   10cc4:	ldr	ip, [r0, #8]
   10cc8:	cmp	ip, #0
   10ccc:	moveq	ip, #8
   10cd0:	streq	ip, [r0, #8]
   10cd4:	ldr	ip, [pc, #192]	; 10d9c <readstat_begin_writing_xport+0xe8>
   10cd8:	add	ip, pc, ip
   10cdc:	str	ip, [r0, #292]	; 0x124
   10ce0:	ldr	ip, [pc, #184]	; 10da0 <readstat_begin_writing_xport+0xec>
   10ce4:	add	ip, pc, ip
   10ce8:	str	ip, [r0, #236]	; 0xec
   10cec:	ldr	ip, [pc, #176]	; 10da4 <readstat_begin_writing_xport+0xf0>
   10cf0:	add	ip, pc, ip
   10cf4:	str	ip, [r0, #240]	; 0xf0
   10cf8:	ldr	ip, [pc, #168]	; 10da8 <readstat_begin_writing_xport+0xf4>
   10cfc:	add	ip, pc, ip
   10d00:	str	ip, [r0, #244]	; 0xf4
   10d04:	ldr	ip, [pc, #160]	; 10dac <readstat_begin_writing_xport+0xf8>
   10d08:	add	ip, pc, ip
   10d0c:	str	ip, [r0, #248]	; 0xf8
   10d10:	ldr	ip, [pc, #152]	; 10db0 <readstat_begin_writing_xport+0xfc>
   10d14:	add	ip, pc, ip
   10d18:	str	ip, [r0, #252]	; 0xfc
   10d1c:	ldr	ip, [pc, #144]	; 10db4 <readstat_begin_writing_xport+0x100>
   10d20:	add	ip, pc, ip
   10d24:	str	ip, [r0, #256]	; 0x100
   10d28:	ldr	ip, [pc, #136]	; 10db8 <readstat_begin_writing_xport+0x104>
   10d2c:	add	ip, pc, ip
   10d30:	str	ip, [r0, #264]	; 0x108
   10d34:	ldr	ip, [pc, #128]	; 10dbc <readstat_begin_writing_xport+0x108>
   10d38:	add	ip, pc, ip
   10d3c:	str	ip, [r0, #268]	; 0x10c
   10d40:	ldr	ip, [pc, #120]	; 10dc0 <readstat_begin_writing_xport+0x10c>
   10d44:	add	ip, pc, ip
   10d48:	str	ip, [r0, #272]	; 0x110
   10d4c:	ldr	ip, [pc, #112]	; 10dc4 <readstat_begin_writing_xport+0x110>
   10d50:	add	ip, pc, ip
   10d54:	str	ip, [r0, #228]	; 0xe4
   10d58:	ldr	ip, [pc, #104]	; 10dc8 <readstat_begin_writing_xport+0x114>
   10d5c:	ldr	r3, [r3, ip]
   10d60:	str	r3, [r0, #232]	; 0xe8
   10d64:	ldr	r3, [pc, #96]	; 10dcc <readstat_begin_writing_xport+0x118>
   10d68:	add	r3, pc, r3
   10d6c:	str	r3, [r0, #276]	; 0x114
   10d70:	ldr	r3, [pc, #88]	; 10dd0 <readstat_begin_writing_xport+0x11c>
   10d74:	add	r3, pc, r3
   10d78:	str	r3, [r0, #284]	; 0x11c
   10d7c:	ldr	r3, [pc, #80]	; 10dd4 <readstat_begin_writing_xport+0x120>
   10d80:	add	r3, pc, r3
   10d84:	str	r3, [r0, #280]	; 0x118
   10d88:	bl	3f5c <readstat_begin_writing_file@plt>
   10d8c:	ldr	r4, [sp]
   10d90:	add	sp, sp, #4
   10d94:	pop	{pc}		; (ldr pc, [sp], #4)
   10d98:	.word	0x00035338
   10d9c:	.word	0xfffff32c
   10da0:	.word	0xfffff300
   10da4:	.word	0xfffff2d4
   10da8:	.word	0xfffff2a8
   10dac:	.word	0xfffff280
   10db0:	.word	0xfffff218
   10db4:	.word	0xfffff190
   10db8:	.word	0xfffff34c
   10dbc:	.word	0xfffff0c8
   10dc0:	.word	0xfffff138
   10dc4:	.word	0xfffff07c
   10dc8:	.word	0x000002f0
   10dcc:	.word	0xfffff9b4
   10dd0:	.word	0xfffff0f0
   10dd4:	.word	0xfffff090

00010dd8 <por_ctx_init>:
   10dd8:	str	r4, [sp, #-8]!
   10ddc:	str	lr, [sp, #4]
   10de0:	mov	r1, #660	; 0x294
   10de4:	mov	r0, #1
   10de8:	bl	3d4c <calloc@plt>
   10dec:	mov	r4, r0
   10df0:	mov	r3, #32
   10df4:	strb	r3, [r0, #48]	; 0x30
   10df8:	mov	r3, #20
   10dfc:	str	r3, [r0, #608]	; 0x260
   10e00:	mov	r0, #1024	; 0x400
   10e04:	bl	4190 <ck_hash_table_init@plt>
   10e08:	str	r0, [r4, #656]	; 0x290
   10e0c:	mov	r0, r4
   10e10:	ldr	r4, [sp]
   10e14:	add	sp, sp, #4
   10e18:	pop	{pc}		; (ldr pc, [sp], #4)

00010e1c <por_ctx_free>:
   10e1c:	strd	r4, [sp, #-16]!
   10e20:	str	r6, [sp, #8]
   10e24:	str	lr, [sp, #12]
   10e28:	mov	r4, r0
   10e2c:	ldr	r0, [r0, #616]	; 0x268
   10e30:	cmp	r0, #0
   10e34:	beq	10e3c <por_ctx_free+0x20>
   10e38:	bl	3eb4 <free@plt>
   10e3c:	ldr	r3, [r4, #652]	; 0x28c
   10e40:	cmp	r3, #0
   10e44:	beq	10e98 <por_ctx_free+0x7c>
   10e48:	ldr	r3, [r4, #632]	; 0x278
   10e4c:	cmp	r3, #0
   10e50:	ble	10e90 <por_ctx_free+0x74>
   10e54:	mov	r5, #0
   10e58:	mov	r6, r5
   10e5c:	b	10e78 <por_ctx_free+0x5c>
   10e60:	bl	3eb4 <free@plt>
   10e64:	add	r6, r6, #1
   10e68:	add	r5, r5, #280	; 0x118
   10e6c:	ldr	r3, [r4, #632]	; 0x278
   10e70:	cmp	r3, r6
   10e74:	ble	10e90 <por_ctx_free+0x74>
   10e78:	ldr	r3, [r4, #652]	; 0x28c
   10e7c:	add	r3, r3, r5
   10e80:	ldr	r0, [r3, #264]	; 0x108
   10e84:	cmp	r0, #0
   10e88:	bne	10e60 <por_ctx_free+0x44>
   10e8c:	b	10e64 <por_ctx_free+0x48>
   10e90:	ldr	r0, [r4, #652]	; 0x28c
   10e94:	bl	3eb4 <free@plt>
   10e98:	ldr	r3, [r4, #648]	; 0x288
   10e9c:	cmp	r3, #0
   10ea0:	beq	10ee8 <por_ctx_free+0xcc>
   10ea4:	ldr	r3, [r4, #632]	; 0x278
   10ea8:	cmp	r3, #0
   10eac:	ble	10ee0 <por_ctx_free+0xc4>
   10eb0:	mov	r5, #0
   10eb4:	b	10ecc <por_ctx_free+0xb0>
   10eb8:	bl	3eb4 <free@plt>
   10ebc:	add	r5, r5, #1
   10ec0:	ldr	r3, [r4, #632]	; 0x278
   10ec4:	cmp	r3, r5
   10ec8:	ble	10ee0 <por_ctx_free+0xc4>
   10ecc:	ldr	r3, [r4, #648]	; 0x288
   10ed0:	ldr	r0, [r3, r5, lsl #2]
   10ed4:	cmp	r0, #0
   10ed8:	bne	10eb8 <por_ctx_free+0x9c>
   10edc:	b	10ebc <por_ctx_free+0xa0>
   10ee0:	ldr	r0, [r4, #648]	; 0x288
   10ee4:	bl	3eb4 <free@plt>
   10ee8:	ldr	r0, [r4, #656]	; 0x290
   10eec:	cmp	r0, #0
   10ef0:	beq	10ef8 <por_ctx_free+0xdc>
   10ef4:	bl	4244 <ck_hash_table_free@plt>
   10ef8:	ldr	r0, [r4, #612]	; 0x264
   10efc:	cmp	r0, #0
   10f00:	beq	10f08 <por_ctx_free+0xec>
   10f04:	bl	3dc4 <iconv_close@plt>
   10f08:	mov	r0, r4
   10f0c:	bl	3eb4 <free@plt>
   10f10:	ldrd	r4, [sp]
   10f14:	ldr	r6, [sp, #8]
   10f18:	add	sp, sp, #12
   10f1c:	pop	{pc}		; (ldr pc, [sp], #4)

00010f20 <por_utf8_encode>:
   10f20:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10f24:	strd	r6, [sp, #8]
   10f28:	strd	r8, [sp, #16]
   10f2c:	strd	sl, [sp, #24]
   10f30:	str	lr, [sp, #32]
   10f34:	sub	sp, sp, #12
   10f38:	ldr	sl, [sp, #48]	; 0x30
   10f3c:	cmp	r1, #0
   10f40:	beq	10ffc <por_utf8_encode+0xdc>
   10f44:	mov	r8, r3
   10f48:	mov	r9, r2
   10f4c:	sub	r5, r0, #1
   10f50:	add	r0, r0, r1
   10f54:	sub	r6, r0, #1
   10f58:	mov	r4, #0
   10f5c:	ldr	r3, [pc, #196]	; 11028 <por_utf8_encode+0x108>
   10f60:	add	r3, pc, r3
   10f64:	str	r3, [sp, #4]
   10f68:	mov	fp, #32
   10f6c:	b	10fac <por_utf8_encode+0x8c>
   10f70:	cmp	r2, #2048	; 0x800
   10f74:	bcs	10fec <por_utf8_encode+0xcc>
   10f78:	add	r3, r4, #2
   10f7c:	cmp	r3, r8
   10f80:	bhi	11008 <por_utf8_encode+0xe8>
   10f84:	add	r7, r9, r4
   10f88:	ldr	r1, [sp, #4]
   10f8c:	mov	r0, r7
   10f90:	bl	43e8 <sprintf@plt>
   10f94:	cmp	r0, #0
   10f98:	addgt	r4, r4, r0
   10f9c:	addle	r4, r4, #1
   10fa0:	strble	fp, [r7]
   10fa4:	cmp	r5, r6
   10fa8:	beq	11008 <por_utf8_encode+0xe8>
   10fac:	ldrb	r3, [r5, #1]!
   10fb0:	lsl	r3, r3, #1
   10fb4:	ldrh	r2, [sl, r3]
   10fb8:	cmp	r2, #0
   10fbc:	beq	10fe8 <por_utf8_encode+0xc8>
   10fc0:	cmp	r2, #31
   10fc4:	bls	11004 <por_utf8_encode+0xe4>
   10fc8:	cmp	r2, #127	; 0x7f
   10fcc:	bhi	10f70 <por_utf8_encode+0x50>
   10fd0:	add	r3, r4, #1
   10fd4:	cmp	r3, r8
   10fd8:	bhi	11008 <por_utf8_encode+0xe8>
   10fdc:	strb	r2, [r9, r4]
   10fe0:	mov	r4, r3
   10fe4:	b	10fa4 <por_utf8_encode+0x84>
   10fe8:	movw	r2, #65533	; 0xfffd
   10fec:	add	r3, r4, #3
   10ff0:	cmp	r3, r8
   10ff4:	bls	10f84 <por_utf8_encode+0x64>
   10ff8:	b	11008 <por_utf8_encode+0xe8>
   10ffc:	mov	r4, #0
   11000:	b	11008 <por_utf8_encode+0xe8>
   11004:	mvn	r4, #0
   11008:	mov	r0, r4
   1100c:	add	sp, sp, #12
   11010:	ldrd	r4, [sp]
   11014:	ldrd	r6, [sp, #8]
   11018:	ldrd	r8, [sp, #16]
   1101c:	ldrd	sl, [sp, #24]
   11020:	add	sp, sp, #32
   11024:	pop	{pc}		; (ldr pc, [sp], #4)
   11028:	.word	0x00015c44

0001102c <por_utf8_decode>:
   1102c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11030:	strd	r6, [sp, #8]
   11034:	strd	r8, [sp, #16]
   11038:	strd	sl, [sp, #24]
   1103c:	str	lr, [sp, #32]
   11040:	sub	sp, sp, #20
   11044:	mov	r9, r2
   11048:	ldr	r7, [sp, #56]	; 0x38
   1104c:	ldr	fp, [sp, #60]	; 0x3c
   11050:	mov	r2, #0
   11054:	str	r2, [sp, #12]
   11058:	str	r2, [sp, #8]
   1105c:	subs	r8, r3, #0
   11060:	beq	11114 <por_utf8_decode+0xe8>
   11064:	mov	r5, r0
   11068:	mov	r4, #1
   1106c:	add	sl, sp, #8
   11070:	add	r3, sp, #12
   11074:	str	r3, [sp]
   11078:	ldr	r3, [pc, #216]	; 11158 <por_utf8_decode+0x12c>
   1107c:	add	r3, pc, r3
   11080:	str	r3, [sp, #4]
   11084:	b	110e0 <por_utf8_decode+0xb4>
   11088:	mov	r3, sl
   1108c:	ldr	r2, [sp]
   11090:	ldr	r1, [sp, #4]
   11094:	mov	r0, r5
   11098:	bl	428c <__isoc99_sscanf@plt>
   1109c:	cmp	r0, #0
   110a0:	beq	11140 <por_utf8_decode+0x114>
   110a4:	ldr	r3, [sp, #12]
   110a8:	cmp	r3, fp
   110ac:	bcs	11148 <por_utf8_decode+0x11c>
   110b0:	ldrb	r3, [r7, r3]
   110b4:	cmp	r3, #0
   110b8:	beq	11150 <por_utf8_decode+0x124>
   110bc:	sub	r2, r9, #1
   110c0:	strb	r3, [r2, r4]
   110c4:	ldr	r3, [sp, #8]
   110c8:	add	r5, r5, r3
   110cc:	mov	r3, #0
   110d0:	str	r3, [sp, #8]
   110d4:	add	r4, r4, #1
   110d8:	cmp	r4, r8
   110dc:	bhi	11120 <por_utf8_decode+0xf4>
   110e0:	mov	r6, r4
   110e4:	ldrb	r2, [r5]
   110e8:	sub	r3, r2, #32
   110ec:	uxtb	r3, r3
   110f0:	cmp	r3, #94	; 0x5e
   110f4:	bhi	11088 <por_utf8_decode+0x5c>
   110f8:	ldrb	r3, [r7, r2]
   110fc:	cmp	r3, #0
   11100:	beq	1111c <por_utf8_decode+0xf0>
   11104:	sub	r2, r9, #1
   11108:	strb	r3, [r2, r4]
   1110c:	add	r5, r5, #1
   11110:	b	110cc <por_utf8_decode+0xa0>
   11114:	mov	r6, #0
   11118:	b	11120 <por_utf8_decode+0xf4>
   1111c:	mvn	r6, #0
   11120:	mov	r0, r6
   11124:	add	sp, sp, #20
   11128:	ldrd	r4, [sp]
   1112c:	ldrd	r6, [sp, #8]
   11130:	ldrd	r8, [sp, #16]
   11134:	ldrd	sl, [sp, #24]
   11138:	add	sp, sp, #32
   1113c:	pop	{pc}		; (ldr pc, [sp], #4)
   11140:	mvn	r6, #0
   11144:	b	11120 <por_utf8_decode+0xf4>
   11148:	mvn	r6, #0
   1114c:	b	11120 <por_utf8_decode+0xf4>
   11150:	mvn	r6, #0
   11154:	b	11120 <por_utf8_decode+0xf4>
   11158:	.word	0x00015b2c
   1115c:	.word	0x00000000

00011160 <readstat_por_parse_double>:
   11160:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11164:	strd	r6, [sp, #8]
   11168:	strd	r8, [sp, #16]
   1116c:	strd	sl, [sp, #24]
   11170:	str	lr, [sp, #32]
   11174:	vpush	{d8-d9}
   11178:	sub	sp, sp, #1072	; 0x430
   1117c:	sub	sp, sp, #4
   11180:	str	r0, [sp, #36]	; 0x24
   11184:	str	r1, [sp, #44]	; 0x2c
   11188:	str	r2, [sp, #32]
   1118c:	str	r3, [sp, #40]	; 0x28
   11190:	add	r6, r0, r1
   11194:	cmp	r0, r6
   11198:	beq	1150c <readstat_por_parse_double+0x3ac>
   1119c:	mov	r7, r0
   111a0:	mov	r3, #0
   111a4:	str	r3, [sp, #20]
   111a8:	str	r3, [sp, #16]
   111ac:	mov	r5, #1
   111b0:	vldr	d7, [pc, #984]	; 11590 <readstat_por_parse_double+0x430>
   111b4:	vmov.f64	d1, d7
   111b8:	vmov.f64	d3, d7
   111bc:	vmov.f64	d6, d7
   111c0:	vldr	d4, [pc, #976]	; 11598 <readstat_por_parse_double+0x438>
   111c4:	vmov.f64	d8, d7
   111c8:	ldr	r9, [pc, #984]	; 115a8 <readstat_por_parse_double+0x448>
   111cc:	add	r9, pc, r9
   111d0:	ldr	fp, [pc, #980]	; 115ac <readstat_por_parse_double+0x44c>
   111d4:	add	fp, pc, fp
   111d8:	ldr	sl, [pc, #976]	; 115b0 <readstat_por_parse_double+0x450>
   111dc:	add	sl, pc, sl
   111e0:	ldr	r3, [pc, #972]	; 115b4 <readstat_por_parse_double+0x454>
   111e4:	add	r3, pc, r3
   111e8:	str	r3, [sp, #24]
   111ec:	add	r3, r3, #216	; 0xd8
   111f0:	str	r3, [sp, #28]
   111f4:	vmov.f64	d2, d4
   111f8:	vmov.f64	d0, d7
   111fc:	b	112d4 <readstat_por_parse_double+0x174>
   11200:	sub	r1, r8, #1
   11204:	adds	r1, r4, r1
   11208:	bcs	11254 <readstat_por_parse_double+0xf4>
   1120c:	ldrb	ip, [r7]
   11210:	mov	r3, r4
   11214:	b	11220 <readstat_por_parse_double+0xc0>
   11218:	cmp	r3, r1
   1121c:	bhi	11254 <readstat_por_parse_double+0xf4>
   11220:	sub	r2, r1, r3
   11224:	add	r0, r3, r2, asr #1
   11228:	ldrb	r2, [r3, r2, asr #1]
   1122c:	cmp	ip, r2
   11230:	subcc	r1, r0, #1
   11234:	bcc	11218 <readstat_por_parse_double+0xb8>
   11238:	cmp	ip, r2
   1123c:	bls	11248 <readstat_por_parse_double+0xe8>
   11240:	add	r3, r0, #1
   11244:	b	11218 <readstat_por_parse_double+0xb8>
   11248:	sub	r0, r0, r4
   1124c:	add	lr, lr, r0
   11250:	b	112ac <readstat_por_parse_double+0x14c>
   11254:	add	r4, r4, r8
   11258:	add	lr, lr, r8
   1125c:	b	112f0 <readstat_por_parse_double+0x190>
   11260:	cmp	r2, r1
   11264:	bhi	112a8 <readstat_por_parse_double+0x148>
   11268:	sub	r3, r1, r2
   1126c:	asr	r3, r3, #1
   11270:	bic	r3, r3, #1
   11274:	add	r0, r2, r3
   11278:	ldrb	r3, [r2, r3]
   1127c:	cmp	r3, ip
   11280:	subhi	r1, r0, #2
   11284:	bhi	11260 <readstat_por_parse_double+0x100>
   11288:	ldrb	r3, [r0, #1]
   1128c:	cmp	r3, ip
   11290:	bcs	1129c <readstat_por_parse_double+0x13c>
   11294:	add	r2, r0, #2
   11298:	b	11260 <readstat_por_parse_double+0x100>
   1129c:	sub	r0, r0, r4
   112a0:	add	lr, lr, r0, asr #1
   112a4:	b	112ac <readstat_por_parse_double+0x14c>
   112a8:	add	lr, lr, r5
   112ac:	add	lr, sl, lr
   112b0:	ldrb	r5, [lr, #120]	; 0x78
   112b4:	ldrb	r2, [lr, #168]	; 0xa8
   112b8:	cmp	r2, #0
   112bc:	bne	1131c <readstat_por_parse_double+0x1bc>
   112c0:	cmp	r5, #0
   112c4:	beq	11574 <readstat_por_parse_double+0x414>
   112c8:	add	r7, r7, #1
   112cc:	cmp	r6, r7
   112d0:	beq	11504 <readstat_por_parse_double+0x3a4>
   112d4:	add	r3, r9, r5
   112d8:	ldrb	r4, [r3, #56]	; 0x38
   112dc:	add	r4, r9, r4
   112e0:	ldrb	lr, [r3, #72]	; 0x48
   112e4:	ldrb	r8, [r3, #88]	; 0x58
   112e8:	cmp	r8, #0
   112ec:	bne	11200 <readstat_por_parse_double+0xa0>
   112f0:	add	r5, fp, r5
   112f4:	ldrb	r5, [r5, #104]	; 0x68
   112f8:	cmp	r5, #0
   112fc:	ble	112ac <readstat_por_parse_double+0x14c>
   11300:	add	r1, r4, r5, lsl #1
   11304:	sub	r1, r1, #2
   11308:	cmp	r4, r1
   1130c:	bhi	112a8 <readstat_por_parse_double+0x148>
   11310:	ldrb	ip, [r7]
   11314:	mov	r2, r4
   11318:	b	11268 <readstat_por_parse_double+0x108>
   1131c:	add	r3, r2, #1
   11320:	ldr	r1, [sp, #28]
   11324:	add	r3, r1, r3
   11328:	ldr	r1, [sp, #24]
   1132c:	add	r2, r1, r2
   11330:	ldrb	r1, [r2, #216]	; 0xd8
   11334:	add	r1, r3, r1
   11338:	mov	r0, #1
   1133c:	cmp	r1, r3
   11340:	beq	112c0 <readstat_por_parse_double+0x160>
   11344:	ldrb	r2, [r3], #1
   11348:	cmp	r2, #10
   1134c:	addls	pc, pc, r2, lsl #2
   11350:	b	1133c <readstat_por_parse_double+0x1dc>
   11354:	b	11388 <readstat_por_parse_double+0x228>
   11358:	b	113dc <readstat_por_parse_double+0x27c>
   1135c:	b	11380 <readstat_por_parse_double+0x220>
   11360:	b	114fc <readstat_por_parse_double+0x39c>
   11364:	b	11434 <readstat_por_parse_double+0x2d4>
   11368:	b	1143c <readstat_por_parse_double+0x2dc>
   1136c:	b	11444 <readstat_por_parse_double+0x2e4>
   11370:	b	1144c <readstat_por_parse_double+0x2ec>
   11374:	b	11454 <readstat_por_parse_double+0x2f4>
   11378:	b	1145c <readstat_por_parse_double+0x2fc>
   1137c:	b	11464 <readstat_por_parse_double+0x304>
   11380:	vmov.f64	d7, d0
   11384:	b	1133c <readstat_por_parse_double+0x1dc>
   11388:	ldrb	r2, [r7]
   1138c:	sub	ip, r2, #48	; 0x30
   11390:	uxtb	ip, ip
   11394:	cmp	ip, #9
   11398:	bhi	113b4 <readstat_por_parse_double+0x254>
   1139c:	sub	r2, r2, #48	; 0x30
   113a0:	vmov	s11, r2
   113a4:	vcvt.f64.s32	d5, s11
   113a8:	vmla.f64	d5, d7, d2
   113ac:	vmov.f64	d7, d5
   113b0:	b	1133c <readstat_por_parse_double+0x1dc>
   113b4:	sub	ip, r2, #65	; 0x41
   113b8:	uxtb	ip, ip
   113bc:	cmp	ip, #19
   113c0:	bhi	1133c <readstat_por_parse_double+0x1dc>
   113c4:	sub	r2, r2, #55	; 0x37
   113c8:	vmov	s11, r2
   113cc:	vcvt.f64.s32	d5, s11
   113d0:	vmla.f64	d5, d7, d2
   113d4:	vmov.f64	d7, d5
   113d8:	b	1133c <readstat_por_parse_double+0x1dc>
   113dc:	ldrb	r2, [r7]
   113e0:	sub	ip, r2, #48	; 0x30
   113e4:	uxtb	ip, ip
   113e8:	cmp	ip, #9
   113ec:	bhi	1140c <readstat_por_parse_double+0x2ac>
   113f0:	sub	r2, r2, #48	; 0x30
   113f4:	vmov	s11, r2
   113f8:	vcvt.f64.s32	d5, s11
   113fc:	vdiv.f64	d9, d5, d4
   11400:	vadd.f64	d6, d6, d9
   11404:	vmul.f64	d4, d4, d2
   11408:	b	1133c <readstat_por_parse_double+0x1dc>
   1140c:	sub	ip, r2, #65	; 0x41
   11410:	uxtb	ip, ip
   11414:	cmp	ip, #19
   11418:	bhi	11404 <readstat_por_parse_double+0x2a4>
   1141c:	sub	r2, r2, #55	; 0x37
   11420:	vmov	s11, r2
   11424:	vcvt.f64.s32	d5, s11
   11428:	vdiv.f64	d9, d5, d4
   1142c:	vadd.f64	d6, d6, d9
   11430:	b	11404 <readstat_por_parse_double+0x2a4>
   11434:	str	r0, [sp, #16]
   11438:	b	1133c <readstat_por_parse_double+0x1dc>
   1143c:	vmov.f64	d3, d7
   11440:	b	1133c <readstat_por_parse_double+0x1dc>
   11444:	str	r0, [sp, #20]
   11448:	b	1133c <readstat_por_parse_double+0x1dc>
   1144c:	vmov.f64	d1, d7
   11450:	b	1133c <readstat_por_parse_double+0x1dc>
   11454:	str	r0, [sp, #16]
   11458:	b	1133c <readstat_por_parse_double+0x1dc>
   1145c:	vldr	d8, [pc, #316]	; 115a0 <readstat_por_parse_double+0x440>
   11460:	b	1133c <readstat_por_parse_double+0x1dc>
   11464:	add	r6, r7, #1
   11468:	vcmp.f64	d8, d8
   1146c:	vmrs	APSR_nzcv, fpscr
   11470:	movvc	r4, #1
   11474:	bvs	11534 <readstat_por_parse_double+0x3d4>
   11478:	vadd.f64	d8, d6, d3
   1147c:	ldr	r3, [sp, #20]
   11480:	cmp	r3, #0
   11484:	vnegne.f64	d1, d1
   11488:	vcmp.f64	d1, #0.0
   1148c:	vmrs	APSR_nzcv, fpscr
   11490:	bne	11524 <readstat_por_parse_double+0x3c4>
   11494:	ldr	r3, [sp, #16]
   11498:	cmp	r3, #0
   1149c:	vnegne.f64	d8, d8
   114a0:	cmp	r4, #0
   114a4:	bne	11534 <readstat_por_parse_double+0x3d4>
   114a8:	ldr	r7, [sp, #40]	; 0x28
   114ac:	cmp	r7, #0
   114b0:	mvneq	r0, #0
   114b4:	beq	11550 <readstat_por_parse_double+0x3f0>
   114b8:	str	r5, [sp, #8]
   114bc:	ldr	r3, [sp, #36]	; 0x24
   114c0:	str	r3, [sp, #4]
   114c4:	ldr	r2, [sp, #44]	; 0x2c
   114c8:	str	r2, [sp]
   114cc:	sub	r3, r6, r3
   114d0:	ldr	r2, [pc, #224]	; 115b8 <readstat_por_parse_double+0x458>
   114d4:	add	r2, pc, r2
   114d8:	mov	r1, #1024	; 0x400
   114dc:	add	r4, sp, #48	; 0x30
   114e0:	mov	r0, r4
   114e4:	bl	4280 <snprintf@plt>
   114e8:	ldr	r1, [sp, #1128]	; 0x468
   114ec:	mov	r0, r4
   114f0:	blx	r7
   114f4:	mvn	r0, #0
   114f8:	b	11550 <readstat_por_parse_double+0x3f0>
   114fc:	vldr	d6, [pc, #140]	; 11590 <readstat_por_parse_double+0x430>
   11500:	b	1133c <readstat_por_parse_double+0x1dc>
   11504:	mov	r6, r7
   11508:	b	11578 <readstat_por_parse_double+0x418>
   1150c:	mov	r4, #0
   11510:	str	r4, [sp, #16]
   11514:	mov	r5, #1
   11518:	vldr	d8, [pc, #112]	; 11590 <readstat_por_parse_double+0x430>
   1151c:	vmov.f64	d1, d8
   11520:	b	11488 <readstat_por_parse_double+0x328>
   11524:	vldr	d0, [pc, #108]	; 11598 <readstat_por_parse_double+0x438>
   11528:	bl	3f80 <pow@plt>
   1152c:	vmul.f64	d8, d8, d0
   11530:	b	11494 <readstat_por_parse_double+0x334>
   11534:	ldr	r3, [sp, #32]
   11538:	cmp	r3, #0
   1153c:	beq	11548 <readstat_por_parse_double+0x3e8>
   11540:	ldr	r3, [sp, #32]
   11544:	vstr	d8, [r3]
   11548:	ldr	r3, [sp, #36]	; 0x24
   1154c:	sub	r0, r6, r3
   11550:	add	sp, sp, #1072	; 0x430
   11554:	add	sp, sp, #4
   11558:	vpop	{d8-d9}
   1155c:	ldrd	r4, [sp]
   11560:	ldrd	r6, [sp, #8]
   11564:	ldrd	r8, [sp, #16]
   11568:	ldrd	sl, [sp, #24]
   1156c:	add	sp, sp, #32
   11570:	pop	{pc}		; (ldr pc, [sp], #4)
   11574:	mov	r6, r7
   11578:	vcmp.f64	d8, d8
   1157c:	vmrs	APSR_nzcv, fpscr
   11580:	movvc	r4, #0
   11584:	bvc	11478 <readstat_por_parse_double+0x318>
   11588:	b	114a8 <readstat_por_parse_double+0x348>
   1158c:	nop	{0}
	...
   1159c:	.word	0x403e0000
   115a0:	.word	0x00000000
   115a4:	.word	0x7ff80000
   115a8:	.word	0x000159e4
   115ac:	.word	0x000159dc
   115b0:	.word	0x000159d4
   115b4:	.word	0x000159cc
   115b8:	.word	0x000157d8
   115bc:	.word	0x00000000

000115c0 <read_bytes>:
   115c0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   115c4:	strd	r6, [sp, #8]
   115c8:	strd	r8, [sp, #16]
   115cc:	str	sl, [sp, #24]
   115d0:	str	lr, [sp, #28]
   115d4:	sub	sp, sp, #8
   115d8:	mov	r5, r0
   115dc:	mov	sl, r1
   115e0:	ldr	r6, [r0, #44]	; 0x2c
   115e4:	mov	r4, r1
   115e8:	add	r7, r1, r2
   115ec:	add	r9, sp, #7
   115f0:	mov	r8, #1
   115f4:	b	1160c <read_bytes+0x4c>
   115f8:	ldrb	r3, [r5, #48]	; 0x30
   115fc:	strb	r3, [r4], #1
   11600:	ldr	r3, [r5, #52]	; 0x34
   11604:	sub	r3, r3, #1
   11608:	str	r3, [r5, #52]	; 0x34
   1160c:	cmp	r4, r7
   11610:	bcs	116c0 <read_bytes+0x100>
   11614:	ldr	r3, [r5, #52]	; 0x34
   11618:	cmp	r3, #0
   1161c:	bne	115f8 <read_bytes+0x38>
   11620:	ldr	r3, [r6, #12]
   11624:	ldr	r2, [r6, #20]
   11628:	mov	r1, r8
   1162c:	mov	r0, r9
   11630:	blx	r3
   11634:	cmp	r0, #0
   11638:	beq	116c0 <read_bytes+0x100>
   1163c:	cmn	r0, #1
   11640:	beq	116c4 <read_bytes+0x104>
   11644:	ldrb	r3, [sp, #7]
   11648:	cmp	r3, #10
   1164c:	cmpne	r3, #13
   11650:	bne	116a0 <read_bytes+0xe0>
   11654:	cmp	r3, #13
   11658:	bne	11688 <read_bytes+0xc8>
   1165c:	ldr	r3, [r6, #12]
   11660:	ldr	r2, [r6, #20]
   11664:	mov	r1, r8
   11668:	mov	r0, r9
   1166c:	blx	r3
   11670:	add	r0, r0, #1
   11674:	cmp	r0, #1
   11678:	bls	116e0 <read_bytes+0x120>
   1167c:	ldrb	r3, [sp, #7]
   11680:	cmp	r3, #10
   11684:	bne	116e8 <read_bytes+0x128>
   11688:	ldr	r3, [r5, #40]	; 0x28
   1168c:	rsb	r3, r3, #80	; 0x50
   11690:	str	r3, [r5, #52]	; 0x34
   11694:	mov	r3, #0
   11698:	str	r3, [r5, #40]	; 0x28
   1169c:	b	1160c <read_bytes+0x4c>
   116a0:	ldr	r2, [r5, #40]	; 0x28
   116a4:	cmp	r2, #80	; 0x50
   116a8:	beq	116f0 <read_bytes+0x130>
   116ac:	strb	r3, [r4], #1
   116b0:	ldr	r3, [r5, #40]	; 0x28
   116b4:	add	r3, r3, #1
   116b8:	str	r3, [r5, #40]	; 0x28
   116bc:	b	1160c <read_bytes+0x4c>
   116c0:	sub	r0, r4, sl
   116c4:	add	sp, sp, #8
   116c8:	ldrd	r4, [sp]
   116cc:	ldrd	r6, [sp, #8]
   116d0:	ldrd	r8, [sp, #16]
   116d4:	ldr	sl, [sp, #24]
   116d8:	add	sp, sp, #28
   116dc:	pop	{pc}		; (ldr pc, [sp], #4)
   116e0:	mvn	r0, #0
   116e4:	b	116c4 <read_bytes+0x104>
   116e8:	mvn	r0, #0
   116ec:	b	116c4 <read_bytes+0x104>
   116f0:	mvn	r0, #0
   116f4:	b	116c4 <read_bytes+0x104>

000116f8 <read_double_with_peek>:
   116f8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   116fc:	strd	r6, [sp, #8]
   11700:	strd	r8, [sp, #16]
   11704:	str	sl, [sp, #24]
   11708:	str	lr, [sp, #28]
   1170c:	sub	sp, sp, #1456	; 0x5b0
   11710:	mov	r7, r0
   11714:	mov	sl, r1
   11718:	mov	r4, #0
   1171c:	mov	r5, #0
   11720:	movt	r5, #32760	; 0x7ff8
   11724:	add	r3, sp, #1440	; 0x5a0
   11728:	add	r3, r3, #8
   1172c:	strd	r4, [r3]
   11730:	strb	r2, [sp, #1348]	; 0x544
   11734:	mov	r2, #1
   11738:	add	r1, sp, #1344	; 0x540
   1173c:	add	r1, r1, #5
   11740:	bl	115c0 <read_bytes>
   11744:	cmp	r0, #1
   11748:	movne	r0, #5
   1174c:	bne	11950 <read_double_with_peek+0x258>
   11750:	ldrb	r3, [sp, #1348]	; 0x544
   11754:	add	r3, r7, r3, lsl #1
   11758:	ldrh	r3, [r3, #94]	; 0x5e
   1175c:	cmp	r3, #42	; 0x2a
   11760:	beq	11860 <read_double_with_peek+0x168>
   11764:	ldrb	r3, [sp, #1349]	; 0x545
   11768:	add	r3, r7, r3, lsl #1
   1176c:	ldrh	r3, [r3, #94]	; 0x5e
   11770:	cmp	r3, #47	; 0x2f
   11774:	moveq	r4, #2
   11778:	moveq	r5, #0
   1177c:	beq	117dc <read_double_with_peek+0xe4>
   11780:	add	r6, sp, #1344	; 0x540
   11784:	add	r6, r6, #6
   11788:	mov	r4, #2
   1178c:	mov	r5, #0
   11790:	mov	r8, #1
   11794:	mov	r9, r6
   11798:	mov	r2, r8
   1179c:	mov	r1, r6
   117a0:	mov	r0, r7
   117a4:	bl	115c0 <read_bytes>
   117a8:	cmp	r0, #1
   117ac:	bne	1194c <read_double_with_peek+0x254>
   117b0:	adds	r4, r4, #1
   117b4:	adc	r5, r5, #0
   117b8:	cmp	r5, #0
   117bc:	cmpeq	r4, #100	; 0x64
   117c0:	beq	1196c <read_double_with_peek+0x274>
   117c4:	add	r6, r6, #1
   117c8:	ldrb	r3, [r9]
   117cc:	add	r3, r7, r3, lsl #1
   117d0:	ldrh	r3, [r3, #94]	; 0x5e
   117d4:	cmp	r3, #47	; 0x2f
   117d8:	bne	11794 <read_double_with_peek+0x9c>
   117dc:	add	r3, r7, #94	; 0x5e
   117e0:	str	r3, [sp]
   117e4:	mov	r3, #300	; 0x12c
   117e8:	add	r2, sp, #1040	; 0x410
   117ec:	add	r2, r2, #8
   117f0:	mov	r1, r4
   117f4:	add	r0, sp, #1344	; 0x540
   117f8:	add	r0, r0, #4
   117fc:	bl	425c <por_utf8_encode@plt>
   11800:	mov	r6, r0
   11804:	mov	r8, r0
   11808:	asr	r9, r0, #31
   1180c:	cmn	r0, #1
   11810:	beq	11898 <read_double_with_peek+0x1a0>
   11814:	ldr	r3, [r7, #36]	; 0x24
   11818:	str	r3, [sp]
   1181c:	ldr	r3, [r7, #24]
   11820:	add	r2, sp, #1440	; 0x5a0
   11824:	add	r2, r2, #8
   11828:	mov	r1, r6
   1182c:	add	r0, sp, #1040	; 0x410
   11830:	add	r0, r0, #8
   11834:	bl	4250 <readstat_por_parse_double@plt>
   11838:	cmn	r0, #1
   1183c:	movne	r0, #0
   11840:	beq	118ec <read_double_with_peek+0x1f4>
   11844:	cmp	sl, #0
   11848:	beq	11950 <read_double_with_peek+0x258>
   1184c:	add	r3, sp, #1440	; 0x5a0
   11850:	add	r3, r3, #8
   11854:	ldrd	r2, [r3]
   11858:	strd	r2, [sl]
   1185c:	b	11950 <read_double_with_peek+0x258>
   11860:	ldrb	r3, [sp, #1349]	; 0x545
   11864:	add	r3, r7, r3, lsl #1
   11868:	ldrh	r3, [r3, #94]	; 0x5e
   1186c:	cmp	r3, #46	; 0x2e
   11870:	bne	11764 <read_double_with_peek+0x6c>
   11874:	cmp	sl, #0
   11878:	moveq	r0, #0
   1187c:	beq	11950 <read_double_with_peek+0x258>
   11880:	mov	r2, #0
   11884:	mov	r3, #0
   11888:	movt	r3, #32760	; 0x7ff8
   1188c:	strd	r2, [sl]
   11890:	mov	r0, #0
   11894:	b	11950 <read_double_with_peek+0x258>
   11898:	ldr	r3, [r7, #24]
   1189c:	cmp	r3, #0
   118a0:	moveq	r0, #16
   118a4:	beq	11844 <read_double_with_peek+0x14c>
   118a8:	add	r3, sp, #1344	; 0x540
   118ac:	add	r3, r3, #4
   118b0:	str	r3, [sp, #12]
   118b4:	str	r4, [sp, #8]
   118b8:	strd	r4, [sp]
   118bc:	ldr	r2, [pc, #176]	; 11974 <read_double_with_peek+0x27c>
   118c0:	add	r2, pc, r2
   118c4:	mov	r1, #1024	; 0x400
   118c8:	add	r4, sp, #24
   118cc:	mov	r0, r4
   118d0:	bl	4280 <snprintf@plt>
   118d4:	ldr	r3, [r7, #24]
   118d8:	ldr	r1, [r7, #36]	; 0x24
   118dc:	mov	r0, r4
   118e0:	blx	r3
   118e4:	mov	r0, #16
   118e8:	b	11844 <read_double_with_peek+0x14c>
   118ec:	ldr	r3, [r7, #24]
   118f0:	cmp	r3, #0
   118f4:	moveq	r0, #5
   118f8:	beq	11844 <read_double_with_peek+0x14c>
   118fc:	add	r3, sp, #1344	; 0x540
   11900:	add	r3, r3, #4
   11904:	str	r3, [sp, #16]
   11908:	add	r3, sp, #1040	; 0x410
   1190c:	add	r3, r3, #8
   11910:	str	r3, [sp, #12]
   11914:	str	r6, [sp, #8]
   11918:	strd	r8, [sp]
   1191c:	ldr	r2, [pc, #84]	; 11978 <read_double_with_peek+0x280>
   11920:	add	r2, pc, r2
   11924:	mov	r1, #1024	; 0x400
   11928:	add	r4, sp, #24
   1192c:	mov	r0, r4
   11930:	bl	4280 <snprintf@plt>
   11934:	ldr	r3, [r7, #24]
   11938:	ldr	r1, [r7, #36]	; 0x24
   1193c:	mov	r0, r4
   11940:	blx	r3
   11944:	mov	r0, #5
   11948:	b	11844 <read_double_with_peek+0x14c>
   1194c:	mov	r0, #5
   11950:	add	sp, sp, #1456	; 0x5b0
   11954:	ldrd	r4, [sp]
   11958:	ldrd	r6, [sp, #8]
   1195c:	ldrd	r8, [sp, #16]
   11960:	ldr	sl, [sp, #24]
   11964:	add	sp, sp, #28
   11968:	pop	{pc}		; (ldr pc, [sp], #4)
   1196c:	mov	r0, #5
   11970:	b	11950 <read_double_with_peek+0x258>
   11974:	.word	0x00015420
   11978:	.word	0x000153f4

0001197c <maybe_read_string>:
   1197c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   11980:	strd	r6, [sp, #8]
   11984:	strd	r8, [sp, #16]
   11988:	str	lr, [sp, #24]
   1198c:	sub	sp, sp, #1040	; 0x410
   11990:	sub	sp, sp, #12
   11994:	mov	r4, r0
   11998:	mov	r8, r1
   1199c:	mov	r9, r2
   119a0:	mov	r6, r3
   119a4:	mov	r2, #1
   119a8:	add	r1, sp, #15
   119ac:	bl	115c0 <read_bytes>
   119b0:	cmp	r0, #1
   119b4:	bne	11b00 <maybe_read_string+0x184>
   119b8:	ldrb	r2, [sp, #15]
   119bc:	add	r3, r4, r2, lsl #1
   119c0:	ldrh	r3, [r3, #94]	; 0x5e
   119c4:	cmp	r3, #90	; 0x5a
   119c8:	beq	11b30 <maybe_read_string+0x1b4>
   119cc:	add	r1, sp, #1040	; 0x410
   119d0:	mov	r0, r4
   119d4:	bl	116f8 <read_double_with_peek>
   119d8:	subs	r7, r0, #0
   119dc:	bne	11a80 <maybe_read_string+0x104>
   119e0:	add	r3, sp, #1040	; 0x410
   119e4:	vldr	d7, [r3]
   119e8:	vcmpe.f64	d7, #0.0
   119ec:	vmrs	APSR_nzcv, fpscr
   119f0:	movmi	r7, #5
   119f4:	bmi	11b10 <maybe_read_string+0x194>
   119f8:	vldr	d6, [pc, #312]	; 11b38 <maybe_read_string+0x1bc>
   119fc:	vcmpe.f64	d7, d6
   11a00:	vmrs	APSR_nzcv, fpscr
   11a04:	movgt	r7, #5
   11a08:	bgt	11b10 <maybe_read_string+0x194>
   11a0c:	vcmp.f64	d7, d7
   11a10:	vmrs	APSR_nzcv, fpscr
   11a14:	bvs	11af8 <maybe_read_string+0x17c>
   11a18:	vcvt.u32.f64	s15, d7
   11a1c:	vmov	r5, s15
   11a20:	ldr	r3, [r4, #620]	; 0x26c
   11a24:	cmp	r3, r5
   11a28:	bcc	11a88 <maybe_read_string+0x10c>
   11a2c:	mov	r2, r5
   11a30:	ldr	r1, [r4, #616]	; 0x268
   11a34:	mov	r0, r4
   11a38:	bl	115c0 <read_bytes>
   11a3c:	cmn	r0, #1
   11a40:	moveq	r7, #2
   11a44:	beq	11b10 <maybe_read_string+0x194>
   11a48:	add	r3, r4, #94	; 0x5e
   11a4c:	str	r3, [sp]
   11a50:	sub	r3, r9, #1
   11a54:	mov	r2, r8
   11a58:	mov	r1, r5
   11a5c:	ldr	r0, [r4, #616]	; 0x268
   11a60:	bl	425c <por_utf8_encode@plt>
   11a64:	cmn	r0, #1
   11a68:	beq	11aac <maybe_read_string+0x130>
   11a6c:	mov	r3, #0
   11a70:	strb	r3, [r8, r0]
   11a74:	cmp	r6, r3
   11a78:	strne	r3, [r6]
   11a7c:	b	11b10 <maybe_read_string+0x194>
   11a80:	mov	r0, #0
   11a84:	b	11b08 <maybe_read_string+0x18c>
   11a88:	vstr	s15, [r4, #620]	; 0x26c
   11a8c:	vmov	r1, s15
   11a90:	ldr	r0, [r4, #616]	; 0x268
   11a94:	bl	3fec <realloc@plt>
   11a98:	str	r0, [r4, #616]	; 0x268
   11a9c:	ldr	r2, [r4, #620]	; 0x26c
   11aa0:	mov	r1, #0
   11aa4:	bl	42a4 <memset@plt>
   11aa8:	b	11a2c <maybe_read_string+0xb0>
   11aac:	ldr	r3, [r4, #24]
   11ab0:	cmp	r3, #0
   11ab4:	moveq	r7, #16
   11ab8:	beq	11b10 <maybe_read_string+0x194>
   11abc:	ldr	r3, [r4, #616]	; 0x268
   11ac0:	str	r3, [sp]
   11ac4:	mov	r3, r5
   11ac8:	ldr	r2, [pc, #112]	; 11b40 <maybe_read_string+0x1c4>
   11acc:	add	r2, pc, r2
   11ad0:	mov	r1, #1024	; 0x400
   11ad4:	add	r5, sp, #16
   11ad8:	mov	r0, r5
   11adc:	bl	4280 <snprintf@plt>
   11ae0:	ldr	r3, [r4, #24]
   11ae4:	ldr	r1, [r4, #36]	; 0x24
   11ae8:	mov	r0, r5
   11aec:	blx	r3
   11af0:	mov	r7, #16
   11af4:	b	11b10 <maybe_read_string+0x194>
   11af8:	mov	r7, #5
   11afc:	b	11b10 <maybe_read_string+0x194>
   11b00:	mov	r0, #0
   11b04:	mov	r7, #5
   11b08:	cmp	r6, #0
   11b0c:	strne	r0, [r6]
   11b10:	mov	r0, r7
   11b14:	add	sp, sp, #1040	; 0x410
   11b18:	add	sp, sp, #12
   11b1c:	ldrd	r4, [sp]
   11b20:	ldrd	r6, [sp, #8]
   11b24:	ldrd	r8, [sp, #16]
   11b28:	add	sp, sp, #24
   11b2c:	pop	{pc}		; (ldr pc, [sp], #4)
   11b30:	mov	r7, #0
   11b34:	b	11b08 <maybe_read_string+0x18c>
   11b38:	.word	0x00000000
   11b3c:	.word	0x40d38800
   11b40:	.word	0x00015280

00011b44 <read_string>:
   11b44:	push	{lr}		; (str lr, [sp, #-4]!)
   11b48:	sub	sp, sp, #12
   11b4c:	mov	r3, #0
   11b50:	str	r3, [sp, #4]
   11b54:	add	r3, sp, #4
   11b58:	bl	1197c <maybe_read_string>
   11b5c:	cmp	r0, #0
   11b60:	bne	11b70 <read_string+0x2c>
   11b64:	ldr	r3, [sp, #4]
   11b68:	cmp	r3, #0
   11b6c:	movne	r0, #5
   11b70:	add	sp, sp, #12
   11b74:	pop	{pc}		; (ldr pc, [sp], #4)

00011b78 <read_double>:
   11b78:	strd	r4, [sp, #-12]!
   11b7c:	str	lr, [sp, #8]
   11b80:	sub	sp, sp, #12
   11b84:	mov	r4, r0
   11b88:	mov	r5, r1
   11b8c:	mov	r2, #1
   11b90:	add	r1, sp, #7
   11b94:	bl	115c0 <read_bytes>
   11b98:	cmp	r0, #1
   11b9c:	movne	r0, #5
   11ba0:	beq	11bb4 <read_double+0x3c>
   11ba4:	add	sp, sp, #12
   11ba8:	ldrd	r4, [sp]
   11bac:	add	sp, sp, #8
   11bb0:	pop	{pc}		; (ldr pc, [sp], #4)
   11bb4:	ldrb	r2, [sp, #7]
   11bb8:	mov	r1, r5
   11bbc:	mov	r0, r4
   11bc0:	bl	116f8 <read_double_with_peek>
   11bc4:	b	11ba4 <read_double+0x2c>

00011bc8 <read_integer_in_range>:
   11bc8:	str	r4, [sp, #-8]!
   11bcc:	str	lr, [sp, #4]
   11bd0:	sub	sp, sp, #16
   11bd4:	str	r1, [sp]
   11bd8:	str	r2, [sp, #4]
   11bdc:	mov	r4, r3
   11be0:	mov	r2, #0
   11be4:	mov	r3, #0
   11be8:	movt	r3, #32760	; 0x7ff8
   11bec:	strd	r2, [sp, #8]
   11bf0:	add	r1, sp, #8
   11bf4:	bl	11b78 <read_double>
   11bf8:	cmp	r0, #0
   11bfc:	bne	11c50 <read_integer_in_range+0x88>
   11c00:	vldr	d7, [sp, #8]
   11c04:	vcmp.f64	d7, d7
   11c08:	vmrs	APSR_nzcv, fpscr
   11c0c:	bvs	11c60 <read_integer_in_range+0x98>
   11c10:	vldr	s13, [sp]
   11c14:	vcvt.f64.s32	d6, s13
   11c18:	vcmpe.f64	d6, d7
   11c1c:	vmrs	APSR_nzcv, fpscr
   11c20:	movgt	r0, #5
   11c24:	bgt	11c50 <read_integer_in_range+0x88>
   11c28:	vldr	s13, [sp, #4]
   11c2c:	vcvt.f64.s32	d6, s13
   11c30:	vcmpe.f64	d6, d7
   11c34:	vmrs	APSR_nzcv, fpscr
   11c38:	movmi	r0, #5
   11c3c:	bmi	11c50 <read_integer_in_range+0x88>
   11c40:	cmp	r4, #0
   11c44:	beq	11c50 <read_integer_in_range+0x88>
   11c48:	vcvt.s32.f64	s14, d7
   11c4c:	vstr	s14, [r4]
   11c50:	add	sp, sp, #16
   11c54:	ldr	r4, [sp]
   11c58:	add	sp, sp, #4
   11c5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11c60:	mov	r0, #5
   11c64:	b	11c50 <read_integer_in_range+0x88>

00011c68 <read_version_and_timestamp>:
   11c68:	strd	r4, [sp, #-12]!
   11c6c:	str	lr, [sp, #8]
   11c70:	sub	sp, sp, #316	; 0x13c
   11c74:	mov	r5, r0
   11c78:	mov	r2, #0
   11c7c:	str	r2, [sp, #12]
   11c80:	str	r2, [sp, #16]
   11c84:	str	r2, [sp, #20]
   11c88:	str	r2, [sp, #24]
   11c8c:	str	r2, [sp, #28]
   11c90:	str	r2, [sp, #32]
   11c94:	str	r2, [sp, #36]	; 0x24
   11c98:	str	r2, [sp, #40]	; 0x28
   11c9c:	str	r2, [sp, #48]	; 0x30
   11ca0:	str	r2, [sp, #52]	; 0x34
   11ca4:	mvn	r3, #0
   11ca8:	str	r3, [sp, #44]	; 0x2c
   11cac:	mov	r2, #1
   11cb0:	add	r1, sp, #11
   11cb4:	bl	115c0 <read_bytes>
   11cb8:	cmp	r0, #1
   11cbc:	movne	r4, #2
   11cc0:	beq	11cd8 <read_version_and_timestamp+0x70>
   11cc4:	mov	r0, r4
   11cc8:	add	sp, sp, #316	; 0x13c
   11ccc:	ldrd	r4, [sp]
   11cd0:	add	sp, sp, #8
   11cd4:	pop	{pc}		; (ldr pc, [sp], #4)
   11cd8:	mov	r2, #256	; 0x100
   11cdc:	add	r1, sp, #56	; 0x38
   11ce0:	mov	r0, r5
   11ce4:	bl	11b44 <read_string>
   11ce8:	subs	r4, r0, #0
   11cec:	bne	11cc4 <read_version_and_timestamp+0x5c>
   11cf0:	add	r3, sp, #24
   11cf4:	str	r3, [sp]
   11cf8:	add	r3, sp, #28
   11cfc:	add	r2, sp, #32
   11d00:	ldr	r1, [pc, #152]	; 11da0 <read_version_and_timestamp+0x138>
   11d04:	add	r1, pc, r1
   11d08:	add	r0, sp, #56	; 0x38
   11d0c:	bl	428c <__isoc99_sscanf@plt>
   11d10:	cmp	r0, #3
   11d14:	movne	r4, #29
   11d18:	bne	11cc4 <read_version_and_timestamp+0x5c>
   11d1c:	mov	r2, #256	; 0x100
   11d20:	add	r1, sp, #56	; 0x38
   11d24:	mov	r0, r5
   11d28:	bl	11b44 <read_string>
   11d2c:	subs	r4, r0, #0
   11d30:	bne	11cc4 <read_version_and_timestamp+0x5c>
   11d34:	add	r3, sp, #12
   11d38:	str	r3, [sp]
   11d3c:	add	r3, sp, #16
   11d40:	add	r2, sp, #20
   11d44:	ldr	r1, [pc, #88]	; 11da4 <read_version_and_timestamp+0x13c>
   11d48:	add	r1, pc, r1
   11d4c:	add	r0, sp, #56	; 0x38
   11d50:	bl	428c <__isoc99_sscanf@plt>
   11d54:	cmp	r0, #3
   11d58:	movne	r4, #29
   11d5c:	bne	11cc4 <read_version_and_timestamp+0x5c>
   11d60:	ldr	r3, [sp, #32]
   11d64:	sub	r3, r3, #1888	; 0x760
   11d68:	sub	r3, r3, #12
   11d6c:	str	r3, [sp, #32]
   11d70:	ldr	r3, [sp, #28]
   11d74:	sub	r3, r3, #1
   11d78:	str	r3, [sp, #28]
   11d7c:	add	r0, sp, #12
   11d80:	bl	3e48 <mktime@plt>
   11d84:	str	r0, [r5, #56]	; 0x38
   11d88:	ldrb	r3, [sp, #11]
   11d8c:	add	r3, r5, r3, lsl #1
   11d90:	ldrh	r3, [r3, #94]	; 0x5e
   11d94:	sub	r3, r3, #65	; 0x41
   11d98:	str	r3, [r5, #60]	; 0x3c
   11d9c:	b	11cc4 <read_version_and_timestamp+0x5c>
   11da0:	.word	0x00015068
   11da4:	.word	0x00015034

00011da8 <handle_variables>:
   11da8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11dac:	strd	r6, [sp, #8]
   11db0:	strd	r8, [sp, #16]
   11db4:	strd	sl, [sp, #24]
   11db8:	str	lr, [sp, #32]
   11dbc:	sub	sp, sp, #268	; 0x10c
   11dc0:	mov	r5, r0
   11dc4:	ldr	r6, [r0, #632]	; 0x278
   11dc8:	cmp	r6, #0
   11dcc:	ble	11eb8 <handle_variables+0x110>
   11dd0:	mov	r7, #0
   11dd4:	mov	r9, r7
   11dd8:	mov	r4, r7
   11ddc:	ldr	r3, [pc, #352]	; 11f44 <handle_variables+0x19c>
   11de0:	add	r3, pc, r3
   11de4:	str	r3, [sp, #4]
   11de8:	add	sl, sp, #8
   11dec:	b	11e28 <handle_variables+0x80>
   11df0:	mov	r0, #4
   11df4:	add	sp, sp, #268	; 0x10c
   11df8:	ldrd	r4, [sp]
   11dfc:	ldrd	r6, [sp, #8]
   11e00:	ldrd	r8, [sp, #16]
   11e04:	ldrd	sl, [sp, #24]
   11e08:	add	sp, sp, #32
   11e0c:	pop	{pc}		; (ldr pc, [sp], #4)
   11e10:	add	r9, r9, #1
   11e14:	add	r4, r4, #1
   11e18:	ldr	r6, [r5, #632]	; 0x278
   11e1c:	add	r7, r7, #280	; 0x118
   11e20:	cmp	r6, r4
   11e24:	ble	11eb8 <handle_variables+0x110>
   11e28:	ldr	r6, [r5, #652]	; 0x28c
   11e2c:	add	r6, r6, r7
   11e30:	str	r4, [r6, #8]
   11e34:	lsl	fp, r4, #2
   11e38:	ldr	r8, [r5, #648]	; 0x288
   11e3c:	ldr	r2, [r5, #612]	; 0x264
   11e40:	mov	r1, r9
   11e44:	mov	r0, r6
   11e48:	bl	4274 <spss_init_variable_for_info@plt>
   11e4c:	str	r0, [r8, r4, lsl #2]
   11e50:	ldr	r3, [r6, #4]
   11e54:	ldr	r2, [sp, #4]
   11e58:	mov	r1, #256	; 0x100
   11e5c:	mov	r0, sl
   11e60:	bl	4280 <snprintf@plt>
   11e64:	ldr	r8, [r5, #8]
   11e68:	cmp	r8, #0
   11e6c:	beq	11e10 <handle_variables+0x68>
   11e70:	ldr	r3, [r5, #648]	; 0x288
   11e74:	ldr	r1, [r3, r4, lsl #2]
   11e78:	ldr	r3, [r6, #4]
   11e7c:	cmn	r3, #1
   11e80:	movne	r2, sl
   11e84:	moveq	r2, #0
   11e88:	ldr	r3, [r5, #36]	; 0x24
   11e8c:	mov	r0, r4
   11e90:	blx	r8
   11e94:	cmp	r0, #1
   11e98:	beq	11df0 <handle_variables+0x48>
   11e9c:	cmp	r0, #2
   11ea0:	bne	11e10 <handle_variables+0x68>
   11ea4:	ldr	r3, [r5, #648]	; 0x288
   11ea8:	ldr	r3, [r3, fp]
   11eac:	mov	r2, #1
   11eb0:	str	r2, [r3, #2144]	; 0x860
   11eb4:	b	11e14 <handle_variables+0x6c>
   11eb8:	ldr	sl, [r5, #12]
   11ebc:	cmp	sl, #0
   11ec0:	moveq	r0, #0
   11ec4:	beq	11df4 <handle_variables+0x4c>
   11ec8:	ldrb	r3, [r5, #64]	; 0x40
   11ecc:	cmp	r3, #0
   11ed0:	moveq	r0, #0
   11ed4:	beq	11df4 <handle_variables+0x4c>
   11ed8:	cmp	r6, #0
   11edc:	ble	11f3c <handle_variables+0x194>
   11ee0:	ldr	r7, [r5, #652]	; 0x28c
   11ee4:	add	r7, r7, #187	; 0xbb
   11ee8:	mov	r4, #0
   11eec:	add	r8, r5, #64	; 0x40
   11ef0:	mov	r1, r8
   11ef4:	mov	r0, r7
   11ef8:	bl	3df4 <strcmp@plt>
   11efc:	cmp	r0, #0
   11f00:	beq	11f1c <handle_variables+0x174>
   11f04:	add	r4, r4, #1
   11f08:	add	r7, r7, #280	; 0x118
   11f0c:	cmp	r4, r6
   11f10:	bne	11ef0 <handle_variables+0x148>
   11f14:	mov	r0, #0
   11f18:	b	11df4 <handle_variables+0x4c>
   11f1c:	ldr	r3, [r5, #648]	; 0x288
   11f20:	ldr	r1, [r5, #36]	; 0x24
   11f24:	ldr	r0, [r3, r4, lsl #2]
   11f28:	blx	sl
   11f2c:	cmp	r0, #0
   11f30:	moveq	r0, #0
   11f34:	movne	r0, #4
   11f38:	b	11df4 <handle_variables+0x4c>
   11f3c:	mov	r0, #0
   11f40:	b	11df4 <handle_variables+0x4c>
   11f44:	.word	0x00014fac

00011f48 <readstat_parse_por>:
   11f48:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11f4c:	strd	r6, [sp, #8]
   11f50:	strd	r8, [sp, #16]
   11f54:	strd	sl, [sp, #24]
   11f58:	str	lr, [sp, #32]
   11f5c:	vpush	{d8-d9}
   11f60:	sub	sp, sp, #4096	; 0x1000
   11f64:	sub	sp, sp, #44	; 0x2c
   11f68:	mov	r7, r0
   11f6c:	mov	r8, r1
   11f70:	mov	r9, r2
   11f74:	ldr	r6, [pc, #1740]	; 12648 <readstat_parse_por+0x700>
   11f78:	add	r6, pc, r6
   11f7c:	ldr	r5, [r0, #32]
   11f80:	bl	4490 <por_ctx_init@plt>
   11f84:	mov	r4, r0
   11f88:	ldrd	r2, [r7]
   11f8c:	strd	r2, [r0]
   11f90:	ldrd	r2, [r7, #8]
   11f94:	strd	r2, [r0, #8]
   11f98:	ldrd	r2, [r7, #16]
   11f9c:	strd	r2, [r0, #16]
   11fa0:	ldrd	r2, [r7, #24]
   11fa4:	strd	r2, [r0, #24]
   11fa8:	str	r9, [r0, #36]	; 0x24
   11fac:	str	r5, [r0, #44]	; 0x2c
   11fb0:	ldr	r3, [r7, #44]	; 0x2c
   11fb4:	str	r3, [r0, #640]	; 0x280
   11fb8:	ldr	r3, [r7, #48]	; 0x30
   11fbc:	cmp	r3, #0
   11fc0:	strgt	r3, [r0, #644]	; 0x284
   11fc4:	ldr	r7, [r7, #40]	; 0x28
   11fc8:	cmp	r7, #0
   11fcc:	beq	12000 <readstat_parse_por+0xb8>
   11fd0:	ldr	r1, [pc, #1652]	; 1264c <readstat_parse_por+0x704>
   11fd4:	add	r1, pc, r1
   11fd8:	mov	r0, r7
   11fdc:	bl	3df4 <strcmp@plt>
   11fe0:	cmp	r0, #0
   11fe4:	bne	120b4 <readstat_parse_por+0x16c>
   11fe8:	ldr	r3, [r4, #612]	; 0x264
   11fec:	cmn	r3, #1
   11ff0:	moveq	r3, #0
   11ff4:	streq	r3, [r4, #612]	; 0x264
   11ff8:	moveq	fp, #7
   11ffc:	beq	12078 <readstat_parse_por+0x130>
   12000:	ldr	r3, [r5]
   12004:	ldr	r1, [r5, #20]
   12008:	mov	r0, r8
   1200c:	blx	r3
   12010:	cmn	r0, #1
   12014:	moveq	fp, #1
   12018:	beq	12078 <readstat_parse_por+0x130>
   1201c:	ldr	r3, [r5, #8]
   12020:	ldr	r2, [r5, #20]
   12024:	mov	r1, #2
   12028:	mov	r0, #0
   1202c:	blx	r3
   12030:	str	r0, [r4, #32]
   12034:	cmn	r0, #1
   12038:	beq	12e24 <readstat_parse_por+0xedc>
   1203c:	ldr	r3, [r5, #8]
   12040:	ldr	r2, [r5, #20]
   12044:	mov	r1, #0
   12048:	mov	r0, r1
   1204c:	blx	r3
   12050:	cmn	r0, #1
   12054:	moveq	fp, #15
   12058:	beq	12078 <readstat_parse_por+0x130>
   1205c:	mov	r2, #200	; 0xc8
   12060:	add	r1, sp, #3680	; 0xe60
   12064:	mov	r0, r4
   12068:	bl	115c0 <read_bytes>
   1206c:	cmp	r0, #200	; 0xc8
   12070:	movne	fp, #2
   12074:	beq	120cc <readstat_parse_por+0x184>
   12078:	ldr	r3, [r5, #4]
   1207c:	ldr	r0, [r5, #20]
   12080:	blx	r3
   12084:	mov	r0, r4
   12088:	bl	3dac <por_ctx_free@plt>
   1208c:	mov	r0, fp
   12090:	add	sp, sp, #4096	; 0x1000
   12094:	add	sp, sp, #44	; 0x2c
   12098:	vpop	{d8-d9}
   1209c:	ldrd	r4, [sp]
   120a0:	ldrd	r6, [sp, #8]
   120a4:	ldrd	r8, [sp, #16]
   120a8:	ldrd	sl, [sp, #24]
   120ac:	add	sp, sp, #32
   120b0:	pop	{pc}		; (ldr pc, [sp], #4)
   120b4:	ldr	r1, [pc, #1428]	; 12650 <readstat_parse_por+0x708>
   120b8:	add	r1, pc, r1
   120bc:	mov	r0, r7
   120c0:	bl	4130 <iconv_open@plt>
   120c4:	str	r0, [r4, #612]	; 0x264
   120c8:	b	11fe8 <readstat_parse_por+0xa0>
   120cc:	add	sl, r4, #73	; 0x49
   120d0:	mov	r3, #0
   120d4:	str	r3, [sp]
   120d8:	mov	r3, #20
   120dc:	add	r2, sp, #3728	; 0xe90
   120e0:	add	r2, r2, #12
   120e4:	mov	r1, #21
   120e8:	mov	r0, sl
   120ec:	bl	4238 <readstat_convert@plt>
   120f0:	subs	fp, r0, #0
   120f4:	bne	12078 <readstat_parse_por+0x130>
   120f8:	mov	r2, #256	; 0x100
   120fc:	add	r1, sp, #3872	; 0xf20
   12100:	add	r1, r1, #8
   12104:	mov	r0, r4
   12108:	bl	115c0 <read_bytes>
   1210c:	cmp	r0, #256	; 0x100
   12110:	movne	fp, #2
   12114:	bne	12078 <readstat_parse_por+0x130>
   12118:	ldrb	r3, [sp, #4006]	; 0xfa6
   1211c:	strb	r3, [r4, #48]	; 0x30
   12120:	ldr	r3, [pc, #1324]	; 12654 <readstat_parse_por+0x70c>
   12124:	ldr	lr, [r6, r3]
   12128:	sub	r3, lr, #1
   1212c:	add	r2, sp, #3872	; 0xf20
   12130:	add	r2, r2, #8
   12134:	ldr	r1, [pc, #1308]	; 12658 <readstat_parse_por+0x710>
   12138:	ldr	r1, [r6, r1]
   1213c:	add	lr, lr, #255	; 0xff
   12140:	b	1216c <readstat_parse_por+0x224>
   12144:	ldrh	r0, [r1]
   12148:	cmp	r0, #0
   1214c:	beq	1215c <readstat_parse_por+0x214>
   12150:	ldrb	ip, [r2]
   12154:	add	ip, r4, ip, lsl #1
   12158:	strh	r0, [ip, #94]	; 0x5e
   1215c:	add	r2, r2, #1
   12160:	add	r1, r1, #2
   12164:	cmp	r3, lr
   12168:	beq	12188 <readstat_parse_por+0x240>
   1216c:	ldrsb	r0, [r3, #1]!
   12170:	cmp	r0, #0
   12174:	beq	12144 <readstat_parse_por+0x1fc>
   12178:	ldrb	ip, [r2]
   1217c:	add	ip, r4, ip, lsl #1
   12180:	strh	r0, [ip, #94]	; 0x5e
   12184:	b	1215c <readstat_parse_por+0x214>
   12188:	ldr	r3, [pc, #1224]	; 12658 <readstat_parse_por+0x710>
   1218c:	ldr	r3, [r6, r3]
   12190:	ldrh	r2, [r3, #128]	; 0x80
   12194:	ldrb	r3, [sp, #3944]	; 0xf68
   12198:	add	r3, r4, r3, lsl #1
   1219c:	strh	r2, [r3, #94]	; 0x5e
   121a0:	mov	r2, #8
   121a4:	add	r1, sp, #2640	; 0xa50
   121a8:	add	r1, r1, #8
   121ac:	mov	r0, r4
   121b0:	bl	115c0 <read_bytes>
   121b4:	cmp	r0, #8
   121b8:	movne	fp, #2
   121bc:	bne	12078 <readstat_parse_por+0x130>
   121c0:	add	r3, r4, #94	; 0x5e
   121c4:	str	r3, [sp]
   121c8:	mov	r3, #8
   121cc:	add	r0, sp, #2640	; 0xa50
   121d0:	add	r0, r0, #8
   121d4:	sub	r2, r0, #8
   121d8:	mov	r1, r3
   121dc:	bl	425c <por_utf8_encode@plt>
   121e0:	mov	r2, r0
   121e4:	cmn	r0, #1
   121e8:	beq	12254 <readstat_parse_por+0x30c>
   121ec:	add	r1, sp, #2640	; 0xa50
   121f0:	ldr	r0, [pc, #1124]	; 1265c <readstat_parse_por+0x714>
   121f4:	add	r0, pc, r0
   121f8:	bl	44fc <strncmp@plt>
   121fc:	subs	r3, r0, #0
   12200:	str	r3, [sp, #20]
   12204:	movne	fp, #5
   12208:	bne	12078 <readstat_parse_por+0x130>
   1220c:	mvn	r3, #0
   12210:	str	r3, [r4, #636]	; 0x27c
   12214:	mov	r0, r4
   12218:	bl	4004 <read_version_and_timestamp@plt>
   1221c:	subs	fp, r0, #0
   12220:	bne	12078 <readstat_parse_por+0x130>
   12224:	movw	r3, #16960	; 0x4240
   12228:	movt	r3, #15
   1222c:	str	r3, [sp, #24]
   12230:	ldr	r3, [pc, #1064]	; 12660 <readstat_parse_por+0x718>
   12234:	add	r3, pc, r3
   12238:	str	r3, [sp, #32]
   1223c:	mov	r3, #0
   12240:	str	r3, [sp, #28]
   12244:	str	r3, [sp, #36]	; 0x24
   12248:	vldr	d9, [pc, #1000]	; 12638 <readstat_parse_por+0x6f0>
   1224c:	vldr	d8, [pc, #1004]	; 12640 <readstat_parse_por+0x6f8>
   12250:	b	122c0 <readstat_parse_por+0x378>
   12254:	ldr	r3, [r4, #24]
   12258:	cmp	r3, #0
   1225c:	moveq	fp, #16
   12260:	beq	12078 <readstat_parse_por+0x130>
   12264:	add	r3, sp, #2640	; 0xa50
   12268:	add	r3, r3, #8
   1226c:	str	r3, [sp]
   12270:	mov	r3, #8
   12274:	ldr	r2, [pc, #1000]	; 12664 <readstat_parse_por+0x71c>
   12278:	add	r2, pc, r2
   1227c:	mov	r1, #1024	; 0x400
   12280:	add	r6, sp, #2656	; 0xa60
   12284:	mov	r0, r6
   12288:	bl	4280 <snprintf@plt>
   1228c:	ldr	r3, [r4, #24]
   12290:	ldr	r1, [r4, #36]	; 0x24
   12294:	mov	r0, r6
   12298:	blx	r3
   1229c:	mov	fp, #16
   122a0:	b	12078 <readstat_parse_por+0x130>
   122a4:	mov	r2, #256	; 0x100
   122a8:	add	r1, sp, #2384	; 0x950
   122ac:	mov	r0, r4
   122b0:	bl	11b44 <read_string>
   122b4:	mov	fp, r0
   122b8:	cmp	fp, #0
   122bc:	bne	12078 <readstat_parse_por+0x130>
   122c0:	mov	r2, #1
   122c4:	add	r1, sp, #1344	; 0x540
   122c8:	add	r1, r1, #8
   122cc:	mov	r0, r4
   122d0:	bl	115c0 <read_bytes>
   122d4:	cmp	r0, #1
   122d8:	bne	12ecc <readstat_parse_por+0xf84>
   122dc:	ldrb	r3, [sp, #1352]	; 0x548
   122e0:	add	r3, r4, r3, lsl #1
   122e4:	ldrh	r3, [r3, #94]	; 0x5e
   122e8:	sub	r3, r3, #49	; 0x31
   122ec:	cmp	r3, #21
   122f0:	addls	pc, pc, r3, lsl #2
   122f4:	b	12e2c <readstat_parse_por+0xee4>
   122f8:	b	122a4 <readstat_parse_por+0x35c>
   122fc:	b	122a4 <readstat_parse_por+0x35c>
   12300:	b	122a4 <readstat_parse_por+0x35c>
   12304:	b	12350 <readstat_parse_por+0x408>
   12308:	b	1242c <readstat_parse_por+0x4e4>
   1230c:	b	1245c <readstat_parse_por+0x514>
   12310:	b	12474 <readstat_parse_por+0x52c>
   12314:	b	125a8 <readstat_parse_por+0x660>
   12318:	b	1270c <readstat_parse_por+0x7c4>
   1231c:	b	12e2c <readstat_parse_por+0xee4>
   12320:	b	12e2c <readstat_parse_por+0xee4>
   12324:	b	12e2c <readstat_parse_por+0xee4>
   12328:	b	12e2c <readstat_parse_por+0xee4>
   1232c:	b	12e2c <readstat_parse_por+0xee4>
   12330:	b	12e2c <readstat_parse_por+0xee4>
   12334:	b	12e2c <readstat_parse_por+0xee4>
   12338:	b	12788 <readstat_parse_por+0x840>
   1233c:	b	12670 <readstat_parse_por+0x728>
   12340:	b	1280c <readstat_parse_por+0x8c4>
   12344:	b	128ac <readstat_parse_por+0x964>
   12348:	b	12a94 <readstat_parse_por+0xb4c>
   1234c:	b	12b28 <readstat_parse_por+0xbe0>
   12350:	ldr	r3, [r4, #632]	; 0x278
   12354:	cmp	r3, #0
   12358:	movne	fp, #5
   1235c:	bne	122b8 <readstat_parse_por+0x370>
   12360:	add	r3, sp, #328	; 0x148
   12364:	ldr	r2, [sp, #24]
   12368:	mov	r1, #0
   1236c:	mov	r0, r4
   12370:	bl	11bc8 <read_integer_in_range>
   12374:	subs	fp, r0, #0
   12378:	bne	122b8 <readstat_parse_por+0x370>
   1237c:	ldr	r0, [sp, #328]	; 0x148
   12380:	str	r0, [r4, #632]	; 0x278
   12384:	mov	r1, #4
   12388:	bl	3fbc <readstat_calloc@plt>
   1238c:	str	r0, [r4, #648]	; 0x288
   12390:	mov	r1, #280	; 0x118
   12394:	ldr	r0, [r4, #632]	; 0x278
   12398:	bl	3fbc <readstat_calloc@plt>
   1239c:	str	r0, [r4, #652]	; 0x28c
   123a0:	ldr	r3, [r4, #648]	; 0x288
   123a4:	cmp	r0, #0
   123a8:	cmpne	r3, #0
   123ac:	moveq	fp, #3
   123b0:	beq	122b8 <readstat_parse_por+0x370>
   123b4:	ldr	r6, [r4]
   123b8:	cmp	r6, #0
   123bc:	beq	122b8 <readstat_parse_por+0x370>
   123c0:	mov	r2, #0
   123c4:	str	r2, [sp, #1384]	; 0x568
   123c8:	str	r2, [sp, #1388]	; 0x56c
   123cc:	str	r2, [sp, #1392]	; 0x570
   123d0:	str	r2, [sp, #1396]	; 0x574
   123d4:	str	r2, [sp, #1400]	; 0x578
   123d8:	str	r2, [sp, #1404]	; 0x57c
   123dc:	add	r0, sp, #1344	; 0x540
   123e0:	add	r0, r0, #8
   123e4:	mvn	r2, #0
   123e8:	mvn	r3, #0
   123ec:	strd	r2, [r0]
   123f0:	ldr	r2, [r4, #632]	; 0x278
   123f4:	asr	r3, r2, #31
   123f8:	strd	r2, [r0, #8]
   123fc:	ldr	r3, [r4, #56]	; 0x38
   12400:	str	r3, [sp, #1368]	; 0x558
   12404:	str	r3, [sp, #1372]	; 0x55c
   12408:	ldr	r2, [r4, #60]	; 0x3c
   1240c:	asr	r3, r2, #31
   12410:	strd	r2, [r0, #24]
   12414:	str	sl, [sp, #1396]	; 0x574
   12418:	ldr	r1, [r4, #36]	; 0x24
   1241c:	blx	r6
   12420:	cmp	r0, #0
   12424:	movne	fp, #4
   12428:	b	122b8 <readstat_parse_por+0x370>
   1242c:	mov	r1, #0
   12430:	str	r1, [sp, #1352]	; 0x548
   12434:	add	r3, sp, #1344	; 0x540
   12438:	add	r3, r3, #8
   1243c:	mov	r2, #100	; 0x64
   12440:	mov	r0, r4
   12444:	bl	11bc8 <read_integer_in_range>
   12448:	subs	fp, r0, #0
   1244c:	bne	122b8 <readstat_parse_por+0x370>
   12450:	ldr	r3, [sp, #1352]	; 0x548
   12454:	str	r3, [r4, #608]	; 0x260
   12458:	b	122b8 <readstat_parse_por+0x370>
   1245c:	mov	r2, #9
   12460:	add	r1, r4, #64	; 0x40
   12464:	mov	r0, r4
   12468:	bl	11b44 <read_string>
   1246c:	mov	fp, r0
   12470:	b	122b8 <readstat_parse_por+0x370>
   12474:	ldr	r3, [r4, #636]	; 0x27c
   12478:	add	r3, r3, #1
   1247c:	str	r3, [r4, #636]	; 0x27c
   12480:	ldr	r2, [r4, #632]	; 0x278
   12484:	cmp	r3, r2
   12488:	moveq	fp, #5
   1248c:	beq	122b8 <readstat_parse_por+0x370>
   12490:	mov	r7, #280	; 0x118
   12494:	mul	r7, r7, r3
   12498:	ldr	r8, [r4, #652]	; 0x28c
   1249c:	add	r6, r8, r7
   124a0:	add	r3, r6, #24
   124a4:	str	r3, [sp, #1352]	; 0x548
   124a8:	add	r3, r6, #36	; 0x24
   124ac:	str	r3, [sp, #1356]	; 0x54c
   124b0:	mvn	r3, #0
   124b4:	str	r3, [r6, #4]
   124b8:	add	r3, sp, #328	; 0x148
   124bc:	ldr	r2, [sp, #24]
   124c0:	mov	r1, #0
   124c4:	mov	r0, r4
   124c8:	bl	11bc8 <read_integer_in_range>
   124cc:	subs	fp, r0, #0
   124d0:	bne	122b8 <readstat_parse_por+0x370>
   124d4:	ldr	r3, [sp, #328]	; 0x148
   124d8:	str	r3, [r6, #16]
   124dc:	cmp	r3, #0
   124e0:	moveq	fp, #5
   124e4:	str	fp, [r8, r7]
   124e8:	add	r7, r6, #187	; 0xbb
   124ec:	mov	r2, #9
   124f0:	mov	r1, r7
   124f4:	mov	r0, r4
   124f8:	bl	11b44 <read_string>
   124fc:	subs	fp, r0, #0
   12500:	bne	122b8 <readstat_parse_por+0x370>
   12504:	ldr	r2, [r4, #656]	; 0x290
   12508:	mov	r1, r6
   1250c:	mov	r0, r7
   12510:	bl	44f0 <ck_str_hash_insert@plt>
   12514:	add	r9, sp, #1344	; 0x540
   12518:	add	r9, r9, #8
   1251c:	ldr	r7, [sp, #20]
   12520:	add	r6, sp, #328	; 0x148
   12524:	ldr	r8, [r9], #4
   12528:	mov	r3, r6
   1252c:	mov	r2, #120	; 0x78
   12530:	mov	r1, #0
   12534:	mov	r0, r4
   12538:	bl	11bc8 <read_integer_in_range>
   1253c:	cmp	r0, #0
   12540:	bne	12e04 <readstat_parse_por+0xebc>
   12544:	ldr	r3, [sp, #328]	; 0x148
   12548:	str	r3, [r8]
   1254c:	mov	r3, r6
   12550:	movw	r2, #20000	; 0x4e20
   12554:	mov	r1, #0
   12558:	mov	r0, r4
   1255c:	bl	11bc8 <read_integer_in_range>
   12560:	cmp	r0, #0
   12564:	bne	12e0c <readstat_parse_por+0xec4>
   12568:	ldr	r3, [sp, #328]	; 0x148
   1256c:	str	r3, [r8, #4]
   12570:	mov	r3, r6
   12574:	mov	r2, #100	; 0x64
   12578:	mov	r1, #0
   1257c:	mov	r0, r4
   12580:	bl	11bc8 <read_integer_in_range>
   12584:	cmp	r0, #0
   12588:	bne	12e14 <readstat_parse_por+0xecc>
   1258c:	ldr	r3, [sp, #328]	; 0x148
   12590:	str	r3, [r8, #8]
   12594:	add	r7, r7, #1
   12598:	cmp	r7, #2
   1259c:	bne	12524 <readstat_parse_por+0x5dc>
   125a0:	mov	fp, r0
   125a4:	b	122b8 <readstat_parse_por+0x370>
   125a8:	ldr	r2, [r4, #636]	; 0x27c
   125ac:	cmp	r2, #0
   125b0:	blt	12e34 <readstat_parse_por+0xeec>
   125b4:	ldr	r3, [r4, #632]	; 0x278
   125b8:	cmp	r2, r3
   125bc:	bge	12e3c <readstat_parse_por+0xef4>
   125c0:	mov	r3, #280	; 0x118
   125c4:	mul	r3, r3, r2
   125c8:	ldr	r2, [r4, #652]	; 0x28c
   125cc:	add	r6, r2, r3
   125d0:	ldr	r3, [r2, r3]
   125d4:	cmp	r3, #5
   125d8:	beq	12618 <readstat_parse_por+0x6d0>
   125dc:	ldr	r3, [r6, #52]	; 0x34
   125e0:	add	r3, r3, r3, lsl #5
   125e4:	add	r1, r3, #88	; 0x58
   125e8:	mov	r2, #33	; 0x21
   125ec:	add	r1, r6, r1
   125f0:	mov	r0, r4
   125f4:	bl	11b44 <read_string>
   125f8:	subs	fp, r0, #0
   125fc:	bne	12078 <readstat_parse_por+0x130>
   12600:	ldr	r3, [r6, #52]	; 0x34
   12604:	cmp	r3, #2
   12608:	bgt	12e44 <readstat_parse_por+0xefc>
   1260c:	add	r3, r3, #1
   12610:	str	r3, [r6, #52]	; 0x34
   12614:	b	122c0 <readstat_parse_por+0x378>
   12618:	ldr	r1, [r6, #52]	; 0x34
   1261c:	add	r1, r1, #8
   12620:	add	r1, r6, r1, lsl #3
   12624:	mov	r0, r4
   12628:	bl	11b78 <read_double>
   1262c:	subs	fp, r0, #0
   12630:	beq	12600 <readstat_parse_por+0x6b8>
   12634:	b	12078 <readstat_parse_por+0x130>
   12638:	.word	0x00000000
   1263c:	.word	0x7ff00000
   12640:	.word	0x00000000
   12644:	.word	0xfff00000
   12648:	.word	0x00034080
   1264c:	.word	0x00014610
   12650:	.word	0x0001452c
   12654:	.word	0x00000304
   12658:	.word	0x000002f8
   1265c:	.word	0x00014bc8
   12660:	.word	0x00014b58
   12664:	.word	0x00014b20
   12668:	.word	0x000141a8
   1266c:	.word	0x00013f24
   12670:	ldr	r2, [r4, #636]	; 0x27c
   12674:	cmp	r2, #0
   12678:	blt	12e4c <readstat_parse_por+0xf04>
   1267c:	ldr	r3, [r4, #632]	; 0x278
   12680:	cmp	r2, r3
   12684:	beq	12e54 <readstat_parse_por+0xf0c>
   12688:	mov	r3, #280	; 0x118
   1268c:	mul	r3, r3, r2
   12690:	ldr	r2, [r4, #652]	; 0x28c
   12694:	add	r6, r2, r3
   12698:	mov	r1, #1
   1269c:	str	r1, [r6, #56]	; 0x38
   126a0:	mov	r1, #2
   126a4:	str	r1, [r6, #52]	; 0x34
   126a8:	ldr	r3, [r2, r3]
   126ac:	cmp	r3, #5
   126b0:	beq	126e4 <readstat_parse_por+0x79c>
   126b4:	mov	r2, #33	; 0x21
   126b8:	add	r1, r6, #88	; 0x58
   126bc:	mov	r0, r4
   126c0:	bl	11b44 <read_string>
   126c4:	subs	fp, r0, #0
   126c8:	bne	12078 <readstat_parse_por+0x130>
   126cc:	mov	r2, #33	; 0x21
   126d0:	add	r1, r6, #121	; 0x79
   126d4:	mov	r0, r4
   126d8:	bl	11b44 <read_string>
   126dc:	mov	fp, r0
   126e0:	b	122b8 <readstat_parse_por+0x370>
   126e4:	add	r1, r6, #64	; 0x40
   126e8:	mov	r0, r4
   126ec:	bl	11b78 <read_double>
   126f0:	subs	fp, r0, #0
   126f4:	bne	12078 <readstat_parse_por+0x130>
   126f8:	add	r1, r6, #72	; 0x48
   126fc:	mov	r0, r4
   12700:	bl	11b78 <read_double>
   12704:	mov	fp, r0
   12708:	b	122b8 <readstat_parse_por+0x370>
   1270c:	ldr	r2, [r4, #636]	; 0x27c
   12710:	cmp	r2, #0
   12714:	blt	12e5c <readstat_parse_por+0xf14>
   12718:	ldr	r3, [r4, #632]	; 0x278
   1271c:	cmp	r2, r3
   12720:	beq	12e64 <readstat_parse_por+0xf1c>
   12724:	mov	r3, #280	; 0x118
   12728:	mul	r3, r3, r2
   1272c:	ldr	r2, [r4, #652]	; 0x28c
   12730:	add	r1, r2, r3
   12734:	mov	r0, #1
   12738:	str	r0, [r1, #56]	; 0x38
   1273c:	mov	r0, #2
   12740:	str	r0, [r1, #52]	; 0x34
   12744:	ldr	r3, [r2, r3]
   12748:	cmp	r3, #5
   1274c:	beq	12770 <readstat_parse_por+0x828>
   12750:	mov	r3, #0
   12754:	strb	r3, [r1, #88]	; 0x58
   12758:	mov	r2, #33	; 0x21
   1275c:	add	r1, r1, #121	; 0x79
   12760:	mov	r0, r4
   12764:	bl	11b44 <read_string>
   12768:	mov	fp, r0
   1276c:	b	122b8 <readstat_parse_por+0x370>
   12770:	vstr	d8, [r1, #64]	; 0x40
   12774:	add	r1, r1, #72	; 0x48
   12778:	mov	r0, r4
   1277c:	bl	11b78 <read_double>
   12780:	mov	fp, r0
   12784:	b	122b8 <readstat_parse_por+0x370>
   12788:	ldr	r2, [r4, #636]	; 0x27c
   1278c:	cmp	r2, #0
   12790:	blt	12e6c <readstat_parse_por+0xf24>
   12794:	ldr	r3, [r4, #632]	; 0x278
   12798:	cmp	r2, r3
   1279c:	beq	12e74 <readstat_parse_por+0xf2c>
   127a0:	mov	r3, #280	; 0x118
   127a4:	mul	r3, r3, r2
   127a8:	ldr	r2, [r4, #652]	; 0x28c
   127ac:	add	r6, r2, r3
   127b0:	mov	r1, #1
   127b4:	str	r1, [r6, #56]	; 0x38
   127b8:	mov	r1, #2
   127bc:	str	r1, [r6, #52]	; 0x34
   127c0:	ldr	r3, [r2, r3]
   127c4:	cmp	r3, #5
   127c8:	beq	127f0 <readstat_parse_por+0x8a8>
   127cc:	mov	r2, #33	; 0x21
   127d0:	add	r1, r6, #88	; 0x58
   127d4:	mov	r0, r4
   127d8:	bl	11b44 <read_string>
   127dc:	subs	fp, r0, #0
   127e0:	bne	12078 <readstat_parse_por+0x130>
   127e4:	mov	r3, #0
   127e8:	strb	r3, [r6, #121]	; 0x79
   127ec:	b	122c0 <readstat_parse_por+0x378>
   127f0:	add	r1, r6, #64	; 0x40
   127f4:	mov	r0, r4
   127f8:	bl	11b78 <read_double>
   127fc:	subs	fp, r0, #0
   12800:	bne	12078 <readstat_parse_por+0x130>
   12804:	vstr	d9, [r6, #72]	; 0x48
   12808:	b	122c0 <readstat_parse_por+0x378>
   1280c:	ldr	r6, [r4, #636]	; 0x27c
   12810:	cmp	r6, #0
   12814:	movlt	fp, #5
   12818:	blt	122b8 <readstat_parse_por+0x370>
   1281c:	ldr	r3, [r4, #632]	; 0x278
   12820:	cmp	r6, r3
   12824:	moveq	fp, #5
   12828:	beq	122b8 <readstat_parse_por+0x370>
   1282c:	ldr	r7, [r4, #652]	; 0x28c
   12830:	mov	r2, #256	; 0x100
   12834:	add	r1, sp, #1344	; 0x540
   12838:	add	r1, r1, #8
   1283c:	mov	r0, r4
   12840:	bl	11b44 <read_string>
   12844:	subs	fp, r0, #0
   12848:	bne	122b8 <readstat_parse_por+0x370>
   1284c:	mov	r3, #280	; 0x118
   12850:	mla	r6, r3, r6, r7
   12854:	add	r7, sp, #1344	; 0x540
   12858:	add	r7, r7, #8
   1285c:	mov	r0, r7
   12860:	bl	41fc <strlen@plt>
   12864:	lsl	r1, r0, #2
   12868:	add	r1, r1, #1
   1286c:	ldr	r0, [r6, #264]	; 0x108
   12870:	bl	3fec <realloc@plt>
   12874:	mov	r8, r0
   12878:	str	r0, [r6, #264]	; 0x108
   1287c:	mov	r0, r7
   12880:	bl	41fc <strlen@plt>
   12884:	mov	r3, r0
   12888:	lsl	r1, r0, #2
   1288c:	ldr	r2, [r4, #612]	; 0x264
   12890:	str	r2, [sp]
   12894:	mov	r2, r7
   12898:	add	r1, r1, #1
   1289c:	mov	r0, r8
   128a0:	bl	4238 <readstat_convert@plt>
   128a4:	mov	fp, r0
   128a8:	b	122b8 <readstat_parse_por+0x370>
   128ac:	mov	r7, #0
   128b0:	add	r6, sp, #40	; 0x28
   128b4:	str	r7, [sp, #40]	; 0x28
   128b8:	str	r7, [sp, #44]	; 0x2c
   128bc:	ldr	r3, [r4, #624]	; 0x270
   128c0:	ldr	r2, [sp, #32]
   128c4:	mov	r1, #256	; 0x100
   128c8:	add	r0, sp, #328	; 0x148
   128cc:	bl	4280 <snprintf@plt>
   128d0:	mov	r3, r6
   128d4:	ldr	r2, [sp, #24]
   128d8:	mov	r1, r7
   128dc:	mov	r0, r4
   128e0:	bl	11bc8 <read_integer_in_range>
   128e4:	subs	fp, r0, #0
   128e8:	bne	122b8 <readstat_parse_por+0x370>
   128ec:	ldr	r3, [sp, #40]	; 0x28
   128f0:	cmp	r3, r7
   128f4:	ble	12958 <readstat_parse_por+0xa10>
   128f8:	ldr	r6, [sp, #20]
   128fc:	mov	r8, #5
   12900:	add	r7, sp, #72	; 0x48
   12904:	add	r9, sp, #40	; 0x28
   12908:	b	1291c <readstat_parse_por+0x9d4>
   1290c:	add	r6, r6, #1
   12910:	ldr	r3, [r9]
   12914:	cmp	r6, r3
   12918:	bge	1295c <readstat_parse_por+0xa14>
   1291c:	mov	r2, #256	; 0x100
   12920:	mov	r1, r7
   12924:	mov	r0, r4
   12928:	bl	11b44 <read_string>
   1292c:	cmp	r0, #0
   12930:	bne	12e1c <readstat_parse_por+0xed4>
   12934:	ldr	r1, [r4, #656]	; 0x290
   12938:	mov	r0, r7
   1293c:	bl	3fc8 <ck_str_hash_lookup@plt>
   12940:	cmp	r0, #0
   12944:	beq	1290c <readstat_parse_por+0x9c4>
   12948:	ldr	r8, [r0]
   1294c:	ldr	r3, [r4, #624]	; 0x270
   12950:	str	r3, [r0, #4]
   12954:	b	1290c <readstat_parse_por+0x9c4>
   12958:	mov	r8, #5
   1295c:	add	r3, sp, #44	; 0x2c
   12960:	ldr	r2, [sp, #24]
   12964:	mov	r1, #0
   12968:	mov	r0, r4
   1296c:	bl	11bc8 <read_integer_in_range>
   12970:	subs	fp, r0, #0
   12974:	bne	122b8 <readstat_parse_por+0x370>
   12978:	ldr	r3, [sp, #44]	; 0x2c
   1297c:	cmp	r3, #0
   12980:	ble	12a84 <readstat_parse_por+0xb3c>
   12984:	ldr	r7, [sp, #20]
   12988:	add	r6, sp, #56	; 0x38
   1298c:	ldr	r9, [sp, #36]	; 0x24
   12990:	b	12a18 <readstat_parse_por+0xad0>
   12994:	sub	r1, r6, #8
   12998:	mov	r0, r4
   1299c:	bl	11b78 <read_double>
   129a0:	cmp	r0, #0
   129a4:	bne	12a7c <readstat_parse_por+0xb34>
   129a8:	mov	r2, #256	; 0x100
   129ac:	add	r1, sp, #1344	; 0x540
   129b0:	add	r1, r1, #8
   129b4:	mov	r0, r4
   129b8:	bl	11b44 <read_string>
   129bc:	cmp	r0, #0
   129c0:	bne	12a7c <readstat_parse_por+0xb34>
   129c4:	ldrd	r2, [r6, #-8]
   129c8:	strd	r2, [r6]
   129cc:	ldr	r1, [r4, #20]
   129d0:	cmp	r1, #0
   129d4:	beq	12a08 <readstat_parse_por+0xac0>
   129d8:	ldr	r3, [r4, #36]	; 0x24
   129dc:	str	r3, [sp, #12]
   129e0:	add	r3, sp, #1344	; 0x540
   129e4:	add	r3, r3, #8
   129e8:	str	r3, [sp, #8]
   129ec:	ldrd	r2, [sp, #64]	; 0x40
   129f0:	strd	r2, [sp]
   129f4:	ldm	r6, {r2, r3}
   129f8:	add	r0, sp, #328	; 0x148
   129fc:	blx	r1
   12a00:	cmp	r0, #0
   12a04:	bne	12a78 <readstat_parse_por+0xb30>
   12a08:	add	r7, r7, #1
   12a0c:	ldr	r3, [sp, #44]	; 0x2c
   12a10:	cmp	r7, r3
   12a14:	bge	12a84 <readstat_parse_por+0xb3c>
   12a18:	ldr	r3, [sp, #28]
   12a1c:	str	r3, [r6]
   12a20:	str	r9, [r6, #4]
   12a24:	str	r3, [r6, #8]
   12a28:	str	r9, [r6, #12]
   12a2c:	str	r8, [sp, #64]	; 0x40
   12a30:	cmp	r8, #0
   12a34:	bne	12994 <readstat_parse_por+0xa4c>
   12a38:	mov	r2, #256	; 0x100
   12a3c:	add	r1, sp, #72	; 0x48
   12a40:	mov	r0, r4
   12a44:	bl	11b44 <read_string>
   12a48:	cmp	r0, #0
   12a4c:	bne	12a7c <readstat_parse_por+0xb34>
   12a50:	mov	r2, #256	; 0x100
   12a54:	add	r1, sp, #1344	; 0x540
   12a58:	add	r1, r1, #8
   12a5c:	mov	r0, r4
   12a60:	bl	11b44 <read_string>
   12a64:	cmp	r0, #0
   12a68:	bne	12a7c <readstat_parse_por+0xb34>
   12a6c:	add	r3, sp, #72	; 0x48
   12a70:	str	r3, [sp, #56]	; 0x38
   12a74:	b	129cc <readstat_parse_por+0xa84>
   12a78:	mov	r0, #4
   12a7c:	mov	fp, r0
   12a80:	b	122b8 <readstat_parse_por+0x370>
   12a84:	ldr	r3, [r4, #624]	; 0x270
   12a88:	add	r3, r3, #1
   12a8c:	str	r3, [r4, #624]	; 0x270
   12a90:	b	122b8 <readstat_parse_por+0x370>
   12a94:	mov	r1, #0
   12a98:	str	r1, [sp, #328]	; 0x148
   12a9c:	add	r3, sp, #328	; 0x148
   12aa0:	ldr	r2, [sp, #24]
   12aa4:	mov	r0, r4
   12aa8:	bl	11bc8 <read_integer_in_range>
   12aac:	subs	fp, r0, #0
   12ab0:	bne	122b8 <readstat_parse_por+0x370>
   12ab4:	ldr	r3, [sp, #328]	; 0x148
   12ab8:	cmp	r3, #0
   12abc:	ble	122b8 <readstat_parse_por+0x370>
   12ac0:	ldr	r6, [sp, #20]
   12ac4:	add	r7, sp, #1344	; 0x540
   12ac8:	add	r7, r7, #8
   12acc:	mov	r8, #256	; 0x100
   12ad0:	b	12ae4 <readstat_parse_por+0xb9c>
   12ad4:	add	r6, r6, #1
   12ad8:	ldr	r3, [sp, #328]	; 0x148
   12adc:	cmp	r6, r3
   12ae0:	bge	122b8 <readstat_parse_por+0x370>
   12ae4:	mov	r2, r8
   12ae8:	mov	r1, r7
   12aec:	mov	r0, r4
   12af0:	bl	11b44 <read_string>
   12af4:	subs	fp, r0, #0
   12af8:	bne	122b8 <readstat_parse_por+0x370>
   12afc:	ldr	r3, [r4, #4]
   12b00:	cmp	r3, #0
   12b04:	beq	12ad4 <readstat_parse_por+0xb8c>
   12b08:	ldr	r2, [r4, #36]	; 0x24
   12b0c:	mov	r1, r7
   12b10:	mov	r0, r6
   12b14:	blx	r3
   12b18:	cmp	r0, #0
   12b1c:	beq	12ad4 <readstat_parse_por+0xb8c>
   12b20:	mov	fp, #4
   12b24:	b	122b8 <readstat_parse_por+0x370>
   12b28:	ldr	r3, [r4, #632]	; 0x278
   12b2c:	sub	r3, r3, #1
   12b30:	ldr	r2, [r4, #636]	; 0x27c
   12b34:	cmp	r2, r3
   12b38:	movne	fp, #8
   12b3c:	bne	12078 <readstat_parse_por+0x130>
   12b40:	mov	r0, r4
   12b44:	bl	4538 <handle_variables@plt>
   12b48:	subs	fp, r0, #0
   12b4c:	bne	12078 <readstat_parse_por+0x130>
   12b50:	ldr	r3, [r4, #16]
   12b54:	cmp	r3, #0
   12b58:	beq	12078 <readstat_parse_por+0x130>
   12b5c:	ldr	r3, [r4, #632]	; 0x278
   12b60:	cmp	r3, #0
   12b64:	beq	12078 <readstat_parse_por+0x130>
   12b68:	mov	r3, #0
   12b6c:	str	r3, [sp, #48]	; 0x30
   12b70:	ldr	r3, [r4, #632]	; 0x278
   12b74:	cmp	r3, #0
   12b78:	ble	12da0 <readstat_parse_por+0xe58>
   12b7c:	mov	sl, fp
   12b80:	ldr	r6, [sp, #20]
   12b84:	add	r7, sp, #56	; 0x38
   12b88:	b	12d10 <readstat_parse_por+0xdc8>
   12b8c:	sub	r3, r7, #8
   12b90:	mov	r2, #256	; 0x100
   12b94:	add	r1, sp, #72	; 0x48
   12b98:	mov	r0, r4
   12b9c:	bl	1197c <maybe_read_string>
   12ba0:	cmp	r0, #0
   12ba4:	bne	12bf8 <readstat_parse_por+0xcb0>
   12ba8:	ldr	r3, [sp, #48]	; 0x30
   12bac:	cmp	r3, #0
   12bb0:	bne	12c48 <readstat_parse_por+0xd00>
   12bb4:	add	r8, sp, #72	; 0x48
   12bb8:	mov	r0, r8
   12bbc:	bl	41fc <strlen@plt>
   12bc0:	ldr	r3, [r4, #612]	; 0x264
   12bc4:	str	r3, [sp]
   12bc8:	mov	r3, r0
   12bcc:	mov	r2, r8
   12bd0:	movw	r1, #1025	; 0x401
   12bd4:	add	r0, sp, #1344	; 0x540
   12bd8:	add	r0, r0, #8
   12bdc:	bl	4238 <readstat_convert@plt>
   12be0:	cmp	r0, #0
   12be4:	bne	12d98 <readstat_parse_por+0xe50>
   12be8:	add	r3, sp, #1344	; 0x540
   12bec:	add	r3, r3, #8
   12bf0:	str	r3, [sp, #56]	; 0x38
   12bf4:	b	12d40 <readstat_parse_por+0xdf8>
   12bf8:	mov	r2, r8
   12bfc:	mov	r8, r0
   12c00:	ldr	r3, [r4, #24]
   12c04:	cmp	r3, #0
   12c08:	beq	12c58 <readstat_parse_por+0xd10>
   12c0c:	ldr	r3, [r4, #628]	; 0x274
   12c10:	add	r3, r3, #1
   12c14:	str	r3, [sp]
   12c18:	add	r3, r2, #187	; 0xbb
   12c1c:	ldr	r2, [pc, #-1468]	; 12668 <readstat_parse_por+0x720>
   12c20:	add	r2, pc, r2
   12c24:	mov	r1, #1024	; 0x400
   12c28:	add	r6, sp, #328	; 0x148
   12c2c:	mov	r0, r6
   12c30:	bl	4280 <snprintf@plt>
   12c34:	ldr	r3, [r4, #24]
   12c38:	ldr	r1, [r4, #36]	; 0x24
   12c3c:	mov	r0, r6
   12c40:	blx	r3
   12c44:	b	12c58 <readstat_parse_por+0xd10>
   12c48:	mov	r8, r0
   12c4c:	cmp	r6, #0
   12c50:	moveq	r8, r0
   12c54:	movne	r8, #5
   12c58:	mov	fp, r8
   12c5c:	b	12078 <readstat_parse_por+0x130>
   12c60:	mov	r2, #1
   12c64:	add	r1, sp, #328	; 0x148
   12c68:	mov	r0, r4
   12c6c:	bl	115c0 <read_bytes>
   12c70:	cmp	r0, #1
   12c74:	bne	12e7c <readstat_parse_por+0xf34>
   12c78:	ldrb	r2, [sp, #328]	; 0x148
   12c7c:	add	r3, r4, r2, lsl #1
   12c80:	ldrh	r3, [r3, #94]	; 0x5e
   12c84:	cmp	r3, #90	; 0x5a
   12c88:	beq	12cd8 <readstat_parse_por+0xd90>
   12c8c:	mov	r3, #0
   12c90:	str	r3, [sp, #48]	; 0x30
   12c94:	mov	r1, r7
   12c98:	mov	r0, r4
   12c9c:	bl	116f8 <read_double_with_peek>
   12ca0:	cmp	r0, #0
   12ca4:	bne	12cf0 <readstat_parse_por+0xda8>
   12ca8:	ldr	r3, [sp, #48]	; 0x30
   12cac:	cmp	r3, #0
   12cb0:	bne	12ce0 <readstat_parse_por+0xd98>
   12cb4:	vldr	d7, [r7]
   12cb8:	vcmp.f64	d7, d7
   12cbc:	vmrs	APSR_nzcv, fpscr
   12cc0:	movvs	r2, #1
   12cc4:	movvc	r2, #0
   12cc8:	ldrb	r3, [sp, #69]	; 0x45
   12ccc:	bfi	r3, r2, #0, #1
   12cd0:	strb	r3, [sp, #69]	; 0x45
   12cd4:	b	12d40 <readstat_parse_por+0xdf8>
   12cd8:	mov	r3, #1
   12cdc:	str	r3, [sp, #48]	; 0x30
   12ce0:	cmp	r6, #0
   12ce4:	moveq	r8, fp
   12ce8:	movne	r8, r9
   12cec:	b	12c58 <readstat_parse_por+0xd10>
   12cf0:	mov	r2, r8
   12cf4:	mov	r8, r0
   12cf8:	b	12e84 <readstat_parse_por+0xf3c>
   12cfc:	add	r6, r6, #1
   12d00:	add	sl, sl, #280	; 0x118
   12d04:	ldr	r3, [r4, #632]	; 0x278
   12d08:	cmp	r6, r3
   12d0c:	bge	12da0 <readstat_parse_por+0xe58>
   12d10:	ldr	r3, [r4, #652]	; 0x28c
   12d14:	add	r8, r3, sl
   12d18:	mov	r0, #0
   12d1c:	mov	r1, #0
   12d20:	strd	r0, [r7]
   12d24:	strd	r0, [r7, #8]
   12d28:	ldr	r9, [r3, sl]
   12d2c:	str	r9, [sp, #64]	; 0x40
   12d30:	cmp	r9, #0
   12d34:	beq	12b8c <readstat_parse_por+0xc44>
   12d38:	cmp	r9, #5
   12d3c:	beq	12c60 <readstat_parse_por+0xd18>
   12d40:	ldr	r8, [r4, #16]
   12d44:	cmp	r8, #0
   12d48:	beq	12cfc <readstat_parse_por+0xdb4>
   12d4c:	ldr	r3, [r4, #648]	; 0x288
   12d50:	ldr	r1, [r3, r6, lsl #2]
   12d54:	ldr	r3, [r1, #2144]	; 0x860
   12d58:	cmp	r3, #0
   12d5c:	bne	12cfc <readstat_parse_por+0xdb4>
   12d60:	ldr	r3, [r4, #644]	; 0x284
   12d64:	cmp	r3, #0
   12d68:	bne	12cfc <readstat_parse_por+0xdb4>
   12d6c:	ldr	r0, [r4, #628]	; 0x274
   12d70:	ldr	r3, [r4, #36]	; 0x24
   12d74:	str	r3, [sp, #8]
   12d78:	ldrd	r2, [sp, #64]	; 0x40
   12d7c:	strd	r2, [sp]
   12d80:	ldm	r7, {r2, r3}
   12d84:	blx	r8
   12d88:	cmp	r0, #0
   12d8c:	beq	12cfc <readstat_parse_por+0xdb4>
   12d90:	mov	r8, #4
   12d94:	b	12c58 <readstat_parse_por+0xd10>
   12d98:	mov	r8, r0
   12d9c:	b	12c58 <readstat_parse_por+0xd10>
   12da0:	ldr	r3, [r4, #644]	; 0x284
   12da4:	cmp	r3, #0
   12da8:	subne	r3, r3, #1
   12dac:	strne	r3, [r4, #644]	; 0x284
   12db0:	bne	12dc0 <readstat_parse_por+0xe78>
   12db4:	ldr	r3, [r4, #628]	; 0x274
   12db8:	add	r3, r3, #1
   12dbc:	str	r3, [r4, #628]	; 0x274
   12dc0:	ldr	r3, [r4, #44]	; 0x2c
   12dc4:	ldr	r6, [r3, #16]
   12dc8:	ldr	r3, [r3, #20]
   12dcc:	ldr	r2, [r4, #36]	; 0x24
   12dd0:	ldr	r1, [r4, #28]
   12dd4:	ldr	r0, [r4, #32]
   12dd8:	blx	r6
   12ddc:	cmp	r0, #0
   12de0:	bne	12dfc <readstat_parse_por+0xeb4>
   12de4:	ldr	r3, [r4, #640]	; 0x280
   12de8:	cmp	r3, #0
   12dec:	ble	12b68 <readstat_parse_por+0xc20>
   12df0:	ldr	r2, [r4, #628]	; 0x274
   12df4:	cmp	r3, r2
   12df8:	bne	12b68 <readstat_parse_por+0xc20>
   12dfc:	mov	fp, r0
   12e00:	b	12078 <readstat_parse_por+0x130>
   12e04:	mov	fp, r0
   12e08:	b	122b8 <readstat_parse_por+0x370>
   12e0c:	mov	fp, r0
   12e10:	b	122b8 <readstat_parse_por+0x370>
   12e14:	mov	fp, r0
   12e18:	b	122b8 <readstat_parse_por+0x370>
   12e1c:	mov	fp, r0
   12e20:	b	122b8 <readstat_parse_por+0x370>
   12e24:	mov	fp, #15
   12e28:	b	12078 <readstat_parse_por+0x130>
   12e2c:	mov	fp, #5
   12e30:	b	12078 <readstat_parse_por+0x130>
   12e34:	mov	fp, #5
   12e38:	b	12078 <readstat_parse_por+0x130>
   12e3c:	mov	fp, #5
   12e40:	b	12078 <readstat_parse_por+0x130>
   12e44:	mov	fp, #5
   12e48:	b	12078 <readstat_parse_por+0x130>
   12e4c:	mov	fp, #5
   12e50:	b	12078 <readstat_parse_por+0x130>
   12e54:	mov	fp, #5
   12e58:	b	12078 <readstat_parse_por+0x130>
   12e5c:	mov	fp, #5
   12e60:	b	12078 <readstat_parse_por+0x130>
   12e64:	mov	fp, #5
   12e68:	b	12078 <readstat_parse_por+0x130>
   12e6c:	mov	fp, #5
   12e70:	b	12078 <readstat_parse_por+0x130>
   12e74:	mov	fp, #5
   12e78:	b	12078 <readstat_parse_por+0x130>
   12e7c:	mov	r2, r8
   12e80:	mov	r8, r9
   12e84:	ldr	r3, [r4, #24]
   12e88:	cmp	r3, #0
   12e8c:	beq	12c58 <readstat_parse_por+0xd10>
   12e90:	ldr	r3, [r4, #628]	; 0x274
   12e94:	add	r3, r3, #1
   12e98:	str	r3, [sp]
   12e9c:	add	r3, r2, #187	; 0xbb
   12ea0:	ldr	r2, [pc, #-2108]	; 1266c <readstat_parse_por+0x724>
   12ea4:	add	r2, pc, r2
   12ea8:	mov	r1, #1024	; 0x400
   12eac:	add	r6, sp, #328	; 0x148
   12eb0:	mov	r0, r6
   12eb4:	bl	4280 <snprintf@plt>
   12eb8:	ldr	r3, [r4, #24]
   12ebc:	ldr	r1, [r4, #36]	; 0x24
   12ec0:	mov	r0, r6
   12ec4:	blx	r3
   12ec8:	b	12c58 <readstat_parse_por+0xd10>
   12ecc:	mov	fp, #5
   12ed0:	b	12078 <readstat_parse_por+0x130>
   12ed4:	andeq	r0, r0, r0

00012ed8 <por_write_base30_integer>:
   12ed8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   12edc:	strd	r6, [sp, #8]
   12ee0:	strd	r8, [sp, #16]
   12ee4:	str	sl, [sp, #24]
   12ee8:	str	lr, [sp, #28]
   12eec:	mov	r6, r2
   12ef0:	mov	r7, r3
   12ef4:	orrs	r3, r6, r7
   12ef8:	beq	12fd0 <por_write_base30_integer+0xf8>
   12efc:	mov	r8, r0
   12f00:	sub	r4, r0, #1
   12f04:	mov	r9, r4
   12f08:	mov	r5, #0
   12f0c:	b	12f1c <por_write_base30_integer+0x44>
   12f10:	mov	r5, sl
   12f14:	mov	r6, r0
   12f18:	mov	r7, r1
   12f1c:	mov	r2, #30
   12f20:	mov	r3, #0
   12f24:	mov	r0, r6
   12f28:	mov	r1, r7
   12f2c:	bl	25ba4 <__aeabi_uldivmod>
   12f30:	add	sl, r5, #1
   12f34:	cmp	r3, #0
   12f38:	cmpeq	r2, #9
   12f3c:	addls	r2, r2, #48	; 0x30
   12f40:	addhi	r2, r2, #55	; 0x37
   12f44:	uxtb	r2, r2
   12f48:	strb	r2, [r9, #1]!
   12f4c:	mov	r2, #30
   12f50:	mov	r3, #0
   12f54:	mov	r0, r6
   12f58:	mov	r1, r7
   12f5c:	bl	25ba4 <__aeabi_uldivmod>
   12f60:	cmp	r7, #0
   12f64:	cmpeq	r6, #29
   12f68:	bhi	12f10 <por_write_base30_integer+0x38>
   12f6c:	cmp	r5, #0
   12f70:	ble	12fb4 <por_write_base30_integer+0xdc>
   12f74:	mov	r1, r5
   12f78:	add	r5, r5, #1
   12f7c:	add	r5, r8, r5
   12f80:	add	r3, r4, #1
   12f84:	ldrb	r2, [r4, #1]
   12f88:	ldrb	r0, [r5, #-1]!
   12f8c:	strb	r0, [r4, #1]
   12f90:	strb	r2, [r5]
   12f94:	add	r4, r4, #2
   12f98:	sub	r2, r4, r8
   12f9c:	mov	r4, r3
   12fa0:	mvn	r3, r3
   12fa4:	add	r3, r3, r8
   12fa8:	add	r3, r3, r1
   12fac:	cmp	r3, r2
   12fb0:	bgt	12f80 <por_write_base30_integer+0xa8>
   12fb4:	mov	r0, sl
   12fb8:	ldrd	r4, [sp]
   12fbc:	ldrd	r6, [sp, #8]
   12fc0:	ldrd	r8, [sp, #16]
   12fc4:	ldr	sl, [sp, #24]
   12fc8:	add	sp, sp, #28
   12fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   12fd0:	mov	sl, #0
   12fd4:	b	12fb4 <por_write_base30_integer+0xdc>

00012fd8 <por_variable_width>:
   12fd8:	cmp	r0, #0
   12fdc:	addeq	r0, r1, #54	; 0x36
   12fe0:	movne	r0, #54	; 0x36
   12fe4:	bx	lr

00012fe8 <por_metadata_ok>:
   12fe8:	ldr	r0, [r0, #16]
   12fec:	cmp	r0, #0
   12ff0:	movne	r0, #6
   12ff4:	bx	lr

00012ff8 <por_write_string_n>:
   12ff8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12ffc:	strd	r6, [sp, #8]
   13000:	str	r8, [sp, #16]
   13004:	str	lr, [sp, #20]
   13008:	sub	sp, sp, #1040	; 0x410
   1300c:	mov	r7, r0
   13010:	mov	r6, r1
   13014:	mov	r8, r2
   13018:	mov	r5, r3
   1301c:	mov	r0, r3
   13020:	bl	410c <malloc@plt>
   13024:	mov	r4, r0
   13028:	ldr	r3, [r6, #4]
   1302c:	str	r3, [sp, #4]
   13030:	ldr	r3, [r6]
   13034:	str	r3, [sp]
   13038:	mov	r3, r5
   1303c:	mov	r2, r0
   13040:	mov	r1, r5
   13044:	mov	r0, r8
   13048:	bl	4394 <por_utf8_decode@plt>
   1304c:	cmn	r0, #1
   13050:	beq	130a4 <por_write_string_n+0xac>
   13054:	ldr	r3, [pc, #156]	; 130f8 <por_write_string_n+0x100>
   13058:	add	r3, pc, r3
   1305c:	str	r3, [sp]
   13060:	mov	r3, #80	; 0x50
   13064:	mov	r2, r0
   13068:	mov	r1, r4
   1306c:	mov	r0, r7
   13070:	bl	4520 <readstat_write_bytes_as_lines@plt>
   13074:	mov	r5, r0
   13078:	cmp	r4, #0
   1307c:	beq	13088 <por_write_string_n+0x90>
   13080:	mov	r0, r4
   13084:	bl	3eb4 <free@plt>
   13088:	mov	r0, r5
   1308c:	add	sp, sp, #1040	; 0x410
   13090:	ldrd	r4, [sp]
   13094:	ldrd	r6, [sp, #8]
   13098:	ldr	r8, [sp, #16]
   1309c:	add	sp, sp, #20
   130a0:	pop	{pc}		; (ldr pc, [sp], #4)
   130a4:	ldr	r3, [r7, #296]	; 0x128
   130a8:	cmp	r3, #0
   130ac:	moveq	r5, #16
   130b0:	beq	13078 <por_write_string_n+0x80>
   130b4:	str	r8, [sp, #12]
   130b8:	str	r5, [sp, #8]
   130bc:	str	r5, [sp]
   130c0:	mov	r3, #0
   130c4:	str	r3, [sp, #4]
   130c8:	ldr	r2, [pc, #44]	; 130fc <por_write_string_n+0x104>
   130cc:	add	r2, pc, r2
   130d0:	mov	r1, #1024	; 0x400
   130d4:	add	r5, sp, #16
   130d8:	mov	r0, r5
   130dc:	bl	4280 <snprintf@plt>
   130e0:	ldr	r3, [r7, #296]	; 0x128
   130e4:	ldr	r1, [r7, #304]	; 0x130
   130e8:	mov	r0, r5
   130ec:	blx	r3
   130f0:	mov	r5, #16
   130f4:	b	13078 <por_write_string_n+0x80>
   130f8:	.word	0x00013db4
   130fc:	.word	0x00013d14

00013100 <por_write_tag>:
   13100:	push	{lr}		; (str lr, [sp, #-4]!)
   13104:	sub	sp, sp, #12
   13108:	strb	r2, [sp, #4]
   1310c:	mov	r3, #0
   13110:	strb	r3, [sp, #5]
   13114:	mov	r3, #1
   13118:	add	r2, sp, #4
   1311c:	bl	12ff8 <por_write_string_n>
   13120:	add	sp, sp, #12
   13124:	pop	{pc}		; (ldr pc, [sp], #4)

00013128 <por_write_row>:
   13128:	strd	r4, [sp, #-16]!
   1312c:	str	r6, [sp, #8]
   13130:	str	lr, [sp, #12]
   13134:	cmp	r2, #0
   13138:	beq	1317c <por_write_row+0x54>
   1313c:	sub	ip, r1, #1
   13140:	mov	r5, r1
   13144:	sub	r2, r2, #1
   13148:	add	lr, r2, r1
   1314c:	mov	r3, #0
   13150:	b	1315c <por_write_row+0x34>
   13154:	cmp	ip, lr
   13158:	beq	13180 <por_write_row+0x58>
   1315c:	ldrb	r2, [ip, #1]!
   13160:	cmp	r2, #0
   13164:	beq	13154 <por_write_row+0x2c>
   13168:	sub	r4, ip, r5
   1316c:	cmp	r3, r4
   13170:	strbne	r2, [r1, r3]
   13174:	add	r3, r3, #1
   13178:	b	13154 <por_write_row+0x2c>
   1317c:	mov	r3, #0
   13180:	mov	r2, r1
   13184:	ldr	r1, [r0, #300]	; 0x12c
   13188:	bl	12ff8 <por_write_string_n>
   1318c:	ldrd	r4, [sp]
   13190:	ldr	r6, [sp, #8]
   13194:	add	sp, sp, #12
   13198:	pop	{pc}		; (ldr pc, [sp], #4)

0001319c <por_end_data>:
   1319c:	strd	r4, [sp, #-16]!
   131a0:	str	r6, [sp, #8]
   131a4:	str	lr, [sp, #12]
   131a8:	mov	r4, r0
   131ac:	mov	r2, #90	; 0x5a
   131b0:	ldr	r1, [r0, #300]	; 0x12c
   131b4:	bl	13100 <por_write_tag>
   131b8:	subs	r5, r0, #0
   131bc:	beq	131f0 <por_end_data+0x54>
   131c0:	ldr	r4, [r4, #300]	; 0x12c
   131c4:	ldr	r0, [r4]
   131c8:	cmp	r0, #0
   131cc:	beq	131d4 <por_end_data+0x38>
   131d0:	bl	3eb4 <free@plt>
   131d4:	mov	r0, r4
   131d8:	bl	3eb4 <free@plt>
   131dc:	mov	r0, r5
   131e0:	ldrd	r4, [sp]
   131e4:	ldr	r6, [sp, #8]
   131e8:	add	sp, sp, #12
   131ec:	pop	{pc}		; (ldr pc, [sp], #4)
   131f0:	ldr	r3, [pc, #24]	; 13210 <por_end_data+0x74>
   131f4:	add	r3, pc, r3
   131f8:	mov	r2, #80	; 0x50
   131fc:	mov	r1, #90	; 0x5a
   13200:	mov	r0, r4
   13204:	bl	44e4 <readstat_write_line_padding@plt>
   13208:	mov	r5, r0
   1320c:	b	131c0 <por_end_data+0x24>
   13210:	.word	0x00013c18

00013214 <por_write_double_to_buffer>:
   13214:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13218:	strd	r6, [sp, #8]
   1321c:	strd	r8, [sp, #16]
   13220:	strd	sl, [sp, #24]
   13224:	str	lr, [sp, #32]
   13228:	vpush	{d8-d9}
   1322c:	sub	sp, sp, #12
   13230:	mov	r6, r0
   13234:	vcmp.f64	d0, d0
   13238:	vmrs	APSR_nzcv, fpscr
   1323c:	bvs	132cc <por_write_double_to_buffer+0xb8>
   13240:	mov	sl, r1
   13244:	vmov.f64	d9, d0
   13248:	mov	r7, r2
   1324c:	vabs.f64	d0, d0
   13250:	vldr	d7, [pc, #640]	; 134d8 <por_write_double_to_buffer+0x2c4>
   13254:	vcmp.f64	d0, d7
   13258:	vmrs	APSR_nzcv, fpscr
   1325c:	ble	132e4 <por_write_double_to_buffer+0xd0>
   13260:	vcmpe.f64	d9, #0.0
   13264:	vmrs	APSR_nzcv, fpscr
   13268:	movmi	r3, #45	; 0x2d
   1326c:	strbmi	r3, [r0]
   13270:	movmi	r0, #1
   13274:	movpl	r0, #0
   13278:	mov	r3, r6
   1327c:	mov	r2, #49	; 0x31
   13280:	strb	r2, [r3, r0]!
   13284:	mov	r2, #43	; 0x2b
   13288:	strb	r2, [r3, #1]
   1328c:	mov	r2, #84	; 0x54
   13290:	strb	r2, [r3, #2]
   13294:	strb	r2, [r3, #3]
   13298:	add	r0, r0, #5
   1329c:	mov	r2, #47	; 0x2f
   132a0:	strb	r2, [r3, #4]
   132a4:	mov	r3, #0
   132a8:	strb	r3, [r6, r0]
   132ac:	add	sp, sp, #12
   132b0:	vpop	{d8-d9}
   132b4:	ldrd	r4, [sp]
   132b8:	ldrd	r6, [sp, #8]
   132bc:	ldrd	r8, [sp, #16]
   132c0:	ldrd	sl, [sp, #24]
   132c4:	add	sp, sp, #32
   132c8:	pop	{pc}		; (ldr pc, [sp], #4)
   132cc:	mov	r3, #42	; 0x2a
   132d0:	strb	r3, [r0]
   132d4:	mov	r3, #46	; 0x2e
   132d8:	strb	r3, [r0, #1]
   132dc:	mov	r0, #2
   132e0:	b	132a4 <por_write_double_to_buffer+0x90>
   132e4:	mov	r0, sp
   132e8:	bl	4178 <modf@plt>
   132ec:	vmov.f64	d8, d0
   132f0:	ldrd	r0, [sp]
   132f4:	bl	25bf0 <__aeabi_d2lz>
   132f8:	mov	r8, r0
   132fc:	mov	r9, r1
   13300:	vcmpe.f64	d9, #0.0
   13304:	vmrs	APSR_nzcv, fpscr
   13308:	movmi	r3, #45	; 0x2d
   1330c:	strbmi	r3, [r6]
   13310:	movmi	fp, #1
   13314:	movpl	fp, #0
   13318:	orrs	r3, r8, r9
   1331c:	beq	133c8 <por_write_double_to_buffer+0x1b4>
   13320:	vcmp.f64	d8, #0.0
   13324:	vmrs	APSR_nzcv, fpscr
   13328:	bne	133f0 <por_write_double_to_buffer+0x1dc>
   1332c:	mov	r2, #30
   13330:	mov	r3, #0
   13334:	bl	25ad0 <__aeabi_ldivmod>
   13338:	mov	r4, r2
   1333c:	mov	r5, r3
   13340:	orrs	r3, r4, r5
   13344:	movne	r4, #0
   13348:	movne	r5, #0
   1334c:	bne	13390 <por_write_double_to_buffer+0x17c>
   13350:	mov	r2, #30
   13354:	mov	r3, #0
   13358:	mov	r0, r8
   1335c:	mov	r1, r9
   13360:	bl	25ad0 <__aeabi_ldivmod>
   13364:	mov	r8, r0
   13368:	mov	r9, r1
   1336c:	adds	r4, r4, #1
   13370:	adc	r5, r5, #0
   13374:	orrs	r3, r8, r9
   13378:	beq	13390 <por_write_double_to_buffer+0x17c>
   1337c:	mov	r2, #30
   13380:	mov	r3, #0
   13384:	bl	25ad0 <__aeabi_ldivmod>
   13388:	orrs	r3, r2, r3
   1338c:	beq	13350 <por_write_double_to_buffer+0x13c>
   13390:	mov	r2, r8
   13394:	mov	r3, r9
   13398:	sub	r1, sl, fp
   1339c:	add	r0, r6, fp
   133a0:	bl	12ed8 <por_write_base30_integer>
   133a4:	add	r3, fp, r0
   133a8:	vcmp.f64	d8, #0.0
   133ac:	vmrs	APSR_nzcv, fpscr
   133b0:	movne	r8, r4
   133b4:	movne	r9, r5
   133b8:	bne	13400 <por_write_double_to_buffer+0x1ec>
   133bc:	mov	r8, r4
   133c0:	mov	r9, r5
   133c4:	b	13494 <por_write_double_to_buffer+0x280>
   133c8:	add	r3, fp, #1
   133cc:	mov	r2, #48	; 0x30
   133d0:	strb	r2, [r6, fp]
   133d4:	vcmp.f64	d8, #0.0
   133d8:	vmrs	APSR_nzcv, fpscr
   133dc:	bne	133fc <por_write_double_to_buffer+0x1e8>
   133e0:	add	r0, r3, #1
   133e4:	mov	r2, #47	; 0x2f
   133e8:	strb	r2, [r6, r3]
   133ec:	b	132a4 <por_write_double_to_buffer+0x90>
   133f0:	mov	r4, #0
   133f4:	mov	r5, #0
   133f8:	b	13390 <por_write_double_to_buffer+0x17c>
   133fc:	mov	r0, #0
   13400:	add	r1, r3, #1
   13404:	add	r4, r6, r3
   13408:	mov	r2, #46	; 0x2e
   1340c:	strb	r2, [r6, r3]
   13410:	cmp	r7, r0
   13414:	ble	134cc <por_write_double_to_buffer+0x2b8>
   13418:	vldr	d9, [pc, #192]	; 134e0 <por_write_double_to_buffer+0x2cc>
   1341c:	sub	r0, r0, r6
   13420:	sub	r5, r0, r3
   13424:	mov	r0, sp
   13428:	vmul.f64	d0, d8, d9
   1342c:	bl	4178 <modf@plt>
   13430:	vmov.f64	d8, d0
   13434:	ldrd	r0, [sp]
   13438:	bl	25bf0 <__aeabi_d2lz>
   1343c:	cmp	r0, #0
   13440:	sbcs	r3, r1, #0
   13444:	blt	134c4 <por_write_double_to_buffer+0x2b0>
   13448:	rsb	r3, r6, #2
   1344c:	add	r3, r3, r4
   13450:	cmp	r1, #0
   13454:	cmpeq	r0, #9
   13458:	addls	r0, r0, #48	; 0x30
   1345c:	addhi	r0, r0, #55	; 0x37
   13460:	uxtb	r0, r0
   13464:	add	r4, r4, #1
   13468:	mov	r1, r4
   1346c:	strb	r0, [r1], r5
   13470:	vcmp.f64	d8, #0.0
   13474:	vmrs	APSR_nzcv, fpscr
   13478:	movne	r2, #1
   1347c:	moveq	r2, #0
   13480:	cmp	r7, r1
   13484:	movle	r2, #0
   13488:	andgt	r2, r2, #1
   1348c:	cmp	r2, #0
   13490:	bne	13424 <por_write_double_to_buffer+0x210>
   13494:	orrs	r2, r8, r9
   13498:	beq	133e0 <por_write_double_to_buffer+0x1cc>
   1349c:	add	r4, r3, #1
   134a0:	mov	r2, #43	; 0x2b
   134a4:	strb	r2, [r6, r3]
   134a8:	mov	r2, r8
   134ac:	mov	r3, r9
   134b0:	sub	r1, sl, r4
   134b4:	add	r0, r6, r4
   134b8:	bl	12ed8 <por_write_base30_integer>
   134bc:	add	r3, r4, r0
   134c0:	b	133e0 <por_write_double_to_buffer+0x1cc>
   134c4:	mvn	r0, #0
   134c8:	b	132ac <por_write_double_to_buffer+0x98>
   134cc:	mov	r3, r1
   134d0:	b	13494 <por_write_double_to_buffer+0x280>
   134d4:	nop	{0}
   134d8:	.word	0xffffffff
   134dc:	.word	0x7fefffff
   134e0:	.word	0x00000000
   134e4:	.word	0x403e0000

000134e8 <por_write_double>:
   134e8:	strd	r4, [sp, #-12]!
   134ec:	str	lr, [sp, #8]
   134f0:	vpush	{d8}
   134f4:	sub	sp, sp, #1280	; 0x500
   134f8:	sub	sp, sp, #12
   134fc:	mov	r4, r0
   13500:	mov	r5, r1
   13504:	vmov.f64	d8, d0
   13508:	mov	r2, #50	; 0x32
   1350c:	mov	r1, #256	; 0x100
   13510:	add	r0, sp, #8
   13514:	bl	13214 <por_write_double_to_buffer>
   13518:	cmn	r0, #1
   1351c:	beq	1354c <por_write_double+0x64>
   13520:	mov	r3, r0
   13524:	add	r2, sp, #8
   13528:	mov	r1, r5
   1352c:	mov	r0, r4
   13530:	bl	12ff8 <por_write_string_n>
   13534:	add	sp, sp, #1280	; 0x500
   13538:	add	sp, sp, #12
   1353c:	vpop	{d8}
   13540:	ldrd	r4, [sp]
   13544:	add	sp, sp, #8
   13548:	pop	{pc}		; (ldr pc, [sp], #4)
   1354c:	ldr	r3, [r4, #296]	; 0x128
   13550:	cmp	r3, #0
   13554:	moveq	r0, #13
   13558:	beq	13534 <por_write_double+0x4c>
   1355c:	vstr	d8, [sp]
   13560:	ldr	r2, [pc, #40]	; 13590 <por_write_double+0xa8>
   13564:	add	r2, pc, r2
   13568:	mov	r1, #1024	; 0x400
   1356c:	add	r5, sp, #264	; 0x108
   13570:	mov	r0, r5
   13574:	bl	4280 <snprintf@plt>
   13578:	ldr	r3, [r4, #296]	; 0x128
   1357c:	ldr	r1, [r4, #304]	; 0x130
   13580:	mov	r0, r5
   13584:	blx	r3
   13588:	mov	r0, #13
   1358c:	b	13534 <por_write_double+0x4c>
   13590:	.word	0x000138ac

00013594 <por_write_string_field_n>:
   13594:	strd	r4, [sp, #-16]!
   13598:	str	r6, [sp, #8]
   1359c:	str	lr, [sp, #12]
   135a0:	sub	sp, sp, #8
   135a4:	mov	r4, r0
   135a8:	mov	r5, r1
   135ac:	mov	r6, r2
   135b0:	str	r3, [sp, #4]
   135b4:	vmov	s15, r3
   135b8:	vcvt.f64.u32	d0, s15
   135bc:	bl	134e8 <por_write_double>
   135c0:	cmp	r0, #0
   135c4:	beq	135dc <por_write_string_field_n+0x48>
   135c8:	add	sp, sp, #8
   135cc:	ldrd	r4, [sp]
   135d0:	ldr	r6, [sp, #8]
   135d4:	add	sp, sp, #12
   135d8:	pop	{pc}		; (ldr pc, [sp], #4)
   135dc:	ldr	r3, [sp, #4]
   135e0:	mov	r2, r6
   135e4:	mov	r1, r5
   135e8:	mov	r0, r4
   135ec:	bl	12ff8 <por_write_string_n>
   135f0:	b	135c8 <por_write_string_field_n+0x34>

000135f4 <por_write_string_field>:
   135f4:	strd	r4, [sp, #-16]!
   135f8:	str	r6, [sp, #8]
   135fc:	str	lr, [sp, #12]
   13600:	mov	r5, r0
   13604:	mov	r6, r1
   13608:	mov	r4, r2
   1360c:	mov	r0, r2
   13610:	bl	41fc <strlen@plt>
   13614:	mov	r3, r0
   13618:	mov	r2, r4
   1361c:	mov	r1, r6
   13620:	mov	r0, r5
   13624:	bl	13594 <por_write_string_field_n>
   13628:	ldrd	r4, [sp]
   1362c:	ldr	r6, [sp, #8]
   13630:	add	sp, sp, #12
   13634:	pop	{pc}		; (ldr pc, [sp], #4)

00013638 <por_emit_format>:
   13638:	strd	r4, [sp, #-16]!
   1363c:	str	r6, [sp, #8]
   13640:	str	lr, [sp, #12]
   13644:	mov	r5, r0
   13648:	mov	r6, r1
   1364c:	mov	r4, r2
   13650:	vldr	s15, [r2]
   13654:	vcvt.f64.s32	d0, s15
   13658:	bl	134e8 <por_write_double>
   1365c:	cmp	r0, #0
   13660:	beq	13674 <por_emit_format+0x3c>
   13664:	ldrd	r4, [sp]
   13668:	ldr	r6, [sp, #8]
   1366c:	add	sp, sp, #12
   13670:	pop	{pc}		; (ldr pc, [sp], #4)
   13674:	vldr	s15, [r4, #4]
   13678:	vcvt.f64.s32	d0, s15
   1367c:	mov	r1, r6
   13680:	mov	r0, r5
   13684:	bl	134e8 <por_write_double>
   13688:	cmp	r0, #0
   1368c:	bne	13664 <por_emit_format+0x2c>
   13690:	vldr	s0, [r4, #8]
   13694:	vcvt.f64.s32	d0, s0
   13698:	mov	r1, r6
   1369c:	mov	r0, r5
   136a0:	bl	134e8 <por_write_double>
   136a4:	b	13664 <por_emit_format+0x2c>

000136a8 <por_write_double_value>:
   136a8:	str	r4, [sp, #-8]!
   136ac:	str	lr, [sp, #4]
   136b0:	mov	r2, #50	; 0x32
   136b4:	mov	r1, #54	; 0x36
   136b8:	bl	13214 <por_write_double_to_buffer>
   136bc:	cmn	r0, #1
   136c0:	movne	r0, #0
   136c4:	moveq	r0, #13
   136c8:	ldr	r4, [sp]
   136cc:	add	sp, sp, #4
   136d0:	pop	{pc}		; (ldr pc, [sp], #4)

000136d4 <por_write_missing_number>:
   136d4:	str	r4, [sp, #-8]!
   136d8:	str	lr, [sp, #4]
   136dc:	vldr	d0, [pc, #12]	; 136f0 <por_write_missing_number+0x1c>
   136e0:	bl	136a8 <por_write_double_value>
   136e4:	ldr	r4, [sp]
   136e8:	add	sp, sp, #4
   136ec:	pop	{pc}		; (ldr pc, [sp], #4)
   136f0:	.word	0x00000000
   136f4:	.word	0x7ff80000

000136f8 <por_write_missing_string>:
   136f8:	str	r4, [sp, #-8]!
   136fc:	str	lr, [sp, #4]
   13700:	vldr	d0, [pc, #16]	; 13718 <por_write_missing_string+0x20>
   13704:	bl	136a8 <por_write_double_value>
   13708:	ldr	r4, [sp]
   1370c:	add	sp, sp, #4
   13710:	pop	{pc}		; (ldr pc, [sp], #4)
   13714:	nop	{0}
	...

00013720 <por_write_float_value>:
   13720:	str	r4, [sp, #-8]!
   13724:	str	lr, [sp, #4]
   13728:	vcvt.f64.f32	d0, s0
   1372c:	bl	136a8 <por_write_double_value>
   13730:	ldr	r4, [sp]
   13734:	add	sp, sp, #4
   13738:	pop	{pc}		; (ldr pc, [sp], #4)

0001373c <por_write_int32_value>:
   1373c:	str	r4, [sp, #-8]!
   13740:	str	lr, [sp, #4]
   13744:	vmov	s15, r2
   13748:	vcvt.f64.s32	d0, s15
   1374c:	bl	136a8 <por_write_double_value>
   13750:	ldr	r4, [sp]
   13754:	add	sp, sp, #4
   13758:	pop	{pc}		; (ldr pc, [sp], #4)

0001375c <por_write_int16_value>:
   1375c:	str	r4, [sp, #-8]!
   13760:	str	lr, [sp, #4]
   13764:	vmov	s15, r2
   13768:	vcvt.f64.s32	d0, s15
   1376c:	bl	136a8 <por_write_double_value>
   13770:	ldr	r4, [sp]
   13774:	add	sp, sp, #4
   13778:	pop	{pc}		; (ldr pc, [sp], #4)

0001377c <por_write_int8_value>:
   1377c:	str	r4, [sp, #-8]!
   13780:	str	lr, [sp, #4]
   13784:	vmov	s15, r2
   13788:	vcvt.f64.s32	d0, s15
   1378c:	bl	136a8 <por_write_double_value>
   13790:	ldr	r4, [sp]
   13794:	add	sp, sp, #4
   13798:	pop	{pc}		; (ldr pc, [sp], #4)

0001379c <por_variable_ok>:
   1379c:	str	r4, [sp, #-8]!
   137a0:	str	lr, [sp, #4]
   137a4:	bl	4364 <readstat_variable_get_name@plt>
   137a8:	mov	r4, r0
   137ac:	bl	41fc <strlen@plt>
   137b0:	sub	r0, r0, #1
   137b4:	cmp	r0, #7
   137b8:	movhi	r0, #28
   137bc:	bhi	13820 <por_variable_ok+0x84>
   137c0:	ldrb	ip, [r4]
   137c4:	cmp	ip, #0
   137c8:	beq	13844 <por_variable_ok+0xa8>
   137cc:	mov	r0, r4
   137d0:	mov	r3, ip
   137d4:	b	137e4 <por_variable_ok+0x48>
   137d8:	ldrb	r3, [r0, #1]!
   137dc:	cmp	r3, #0
   137e0:	beq	1382c <por_variable_ok+0x90>
   137e4:	sub	r2, r3, #48	; 0x30
   137e8:	uxtb	r2, r2
   137ec:	cmp	r2, #9
   137f0:	bls	137d8 <por_variable_ok+0x3c>
   137f4:	sub	r1, r3, #35	; 0x23
   137f8:	uxtb	r1, r1
   137fc:	sub	r2, r3, #64	; 0x40
   13800:	uxtb	r2, r2
   13804:	cmp	r2, #26
   13808:	cmphi	r1, #1
   1380c:	bls	137d8 <por_variable_ok+0x3c>
   13810:	cmp	r3, #46	; 0x2e
   13814:	cmpne	r3, #95	; 0x5f
   13818:	beq	137d8 <por_variable_ok+0x3c>
   1381c:	mov	r0, #26
   13820:	ldr	r4, [sp]
   13824:	add	sp, sp, #4
   13828:	pop	{pc}		; (ldr pc, [sp], #4)
   1382c:	sub	ip, ip, #64	; 0x40
   13830:	uxtb	ip, ip
   13834:	cmp	ip, #27
   13838:	movcc	r0, #0
   1383c:	movcs	r0, #25
   13840:	b	13820 <por_variable_ok+0x84>
   13844:	mov	r0, #25
   13848:	b	13820 <por_variable_ok+0x84>

0001384c <por_write_string_value>:
   1384c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13850:	strd	r6, [sp, #8]
   13854:	str	r8, [sp, #16]
   13858:	str	lr, [sp, #20]
   1385c:	mov	r6, r0
   13860:	mov	r7, r1
   13864:	mov	r5, r2
   13868:	mov	r0, r2
   1386c:	bl	41fc <strlen@plt>
   13870:	subs	r4, r0, #0
   13874:	bne	13884 <por_write_string_value+0x38>
   13878:	mov	r4, #1
   1387c:	ldr	r5, [pc, #92]	; 138e0 <por_write_string_value+0x94>
   13880:	add	r5, pc, r5
   13884:	mov	r0, r7
   13888:	bl	42c8 <readstat_variable_get_storage_width@plt>
   1388c:	cmp	r4, r0
   13890:	movcs	r4, r0
   13894:	mov	r2, #50	; 0x32
   13898:	vmov	s15, r4
   1389c:	vcvt.f64.u32	d0, s15
   138a0:	mov	r1, #54	; 0x36
   138a4:	mov	r0, r6
   138a8:	bl	13214 <por_write_double_to_buffer>
   138ac:	cmn	r0, #1
   138b0:	moveq	r0, #13
   138b4:	beq	138cc <por_write_string_value+0x80>
   138b8:	mov	r2, r4
   138bc:	mov	r1, r5
   138c0:	add	r0, r6, r0
   138c4:	bl	42bc <strncpy@plt>
   138c8:	mov	r0, #0
   138cc:	ldrd	r4, [sp]
   138d0:	ldrd	r6, [sp, #8]
   138d4:	ldr	r8, [sp, #16]
   138d8:	add	sp, sp, #20
   138dc:	pop	{pc}		; (ldr pc, [sp], #4)
   138e0:	.word	0x000135b0

000138e4 <por_emit_header>:
   138e4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   138e8:	strd	r6, [sp, #8]
   138ec:	str	r8, [sp, #16]
   138f0:	str	lr, [sp, #20]
   138f4:	sub	sp, sp, #464	; 0x1d0
   138f8:	mov	r5, r0
   138fc:	mov	r6, r1
   13900:	ldr	r7, [pc, #308]	; 13a3c <por_emit_header+0x158>
   13904:	add	r7, pc, r7
   13908:	add	r4, r0, #88	; 0x58
   1390c:	mov	r0, r4
   13910:	bl	41fc <strlen@plt>
   13914:	mov	r8, r0
   13918:	mov	r2, #200	; 0xc8
   1391c:	mov	r1, #48	; 0x30
   13920:	add	r0, sp, #264	; 0x108
   13924:	bl	42a4 <memset@plt>
   13928:	add	r0, sp, #304	; 0x130
   1392c:	ldr	r1, [pc, #268]	; 13a40 <por_emit_header+0x15c>
   13930:	add	r1, pc, r1
   13934:	ldrd	r2, [r1]
   13938:	strd	r2, [r0]
   1393c:	ldrd	r2, [r1, #8]
   13940:	strd	r2, [r0, #8]
   13944:	ldr	r3, [r1, #16]
   13948:	str	r3, [sp, #320]	; 0x140
   1394c:	mov	r2, #20
   13950:	mov	r1, r4
   13954:	add	r0, sp, #324	; 0x144
   13958:	bl	42bc <strncpy@plt>
   1395c:	cmp	r8, #19
   13960:	bls	13a04 <por_emit_header+0x120>
   13964:	ldr	r3, [pc, #216]	; 13a44 <por_emit_header+0x160>
   13968:	add	r3, pc, r3
   1396c:	str	r3, [sp]
   13970:	mov	r3, #80	; 0x50
   13974:	mov	r2, #200	; 0xc8
   13978:	add	r1, sp, #264	; 0x108
   1397c:	mov	r0, r5
   13980:	bl	4520 <readstat_write_bytes_as_lines@plt>
   13984:	mov	r2, #256	; 0x100
   13988:	mov	r1, #48	; 0x30
   1398c:	add	r4, sp, #8
   13990:	mov	r0, r4
   13994:	bl	42a4 <memset@plt>
   13998:	ldr	r3, [pc, #168]	; 13a48 <por_emit_header+0x164>
   1399c:	ldr	r1, [r7, r3]
   139a0:	sub	r3, r1, #1
   139a4:	mov	r0, r4
   139a8:	add	r1, r1, #255	; 0xff
   139ac:	ldrsb	r2, [r3, #1]!
   139b0:	cmp	r2, #0
   139b4:	strbne	r2, [r0]
   139b8:	add	r0, r0, #1
   139bc:	cmp	r3, r1
   139c0:	bne	139ac <por_emit_header+0xc8>
   139c4:	ldr	r3, [pc, #128]	; 13a4c <por_emit_header+0x168>
   139c8:	add	r3, pc, r3
   139cc:	str	r3, [sp]
   139d0:	mov	r3, #80	; 0x50
   139d4:	mov	r2, #256	; 0x100
   139d8:	add	r1, sp, #8
   139dc:	mov	r0, r5
   139e0:	bl	4520 <readstat_write_bytes_as_lines@plt>
   139e4:	cmp	r0, #0
   139e8:	beq	13a20 <por_emit_header+0x13c>
   139ec:	add	sp, sp, #464	; 0x1d0
   139f0:	ldrd	r4, [sp]
   139f4:	ldrd	r6, [sp, #8]
   139f8:	ldr	r8, [sp, #16]
   139fc:	add	sp, sp, #20
   13a00:	pop	{pc}		; (ldr pc, [sp], #4)
   13a04:	add	r3, sp, #464	; 0x1d0
   13a08:	add	r0, r3, r8
   13a0c:	rsb	r2, r8, #20
   13a10:	mov	r1, #32
   13a14:	sub	r0, r0, #140	; 0x8c
   13a18:	bl	42a4 <memset@plt>
   13a1c:	b	13964 <por_emit_header+0x80>
   13a20:	mov	r3, #8
   13a24:	ldr	r2, [pc, #36]	; 13a50 <por_emit_header+0x16c>
   13a28:	add	r2, pc, r2
   13a2c:	mov	r1, r6
   13a30:	mov	r0, r5
   13a34:	bl	12ff8 <por_write_string_n>
   13a38:	b	139ec <por_emit_header+0x108>
   13a3c:	.word	0x000326f4
   13a40:	.word	0x00013504
   13a44:	.word	0x000134a4
   13a48:	.word	0x00000304
   13a4c:	.word	0x00013444
   13a50:	.word	0x00013394

00013a54 <por_begin_data>:
   13a54:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13a58:	strd	r6, [sp, #8]
   13a5c:	strd	r8, [sp, #16]
   13a60:	strd	sl, [sp, #24]
   13a64:	str	lr, [sp, #32]
   13a68:	vpush	{d8-d11}
   13a6c:	sub	sp, sp, #76	; 0x4c
   13a70:	str	r0, [sp, #12]
   13a74:	ldr	r7, [pc, #1620]	; 140d0 <por_begin_data+0x67c>
   13a78:	add	r7, pc, r7
   13a7c:	mov	r1, #8
   13a80:	mov	r0, #1
   13a84:	bl	3d4c <calloc@plt>
   13a88:	mov	fp, r0
   13a8c:	ldr	r3, [pc, #1600]	; 140d4 <por_begin_data+0x680>
   13a90:	ldr	r5, [r7, r3]
   13a94:	sub	r6, r5, #2
   13a98:	add	r5, r5, #508	; 0x1fc
   13a9c:	add	r5, r5, #2
   13aa0:	mov	r3, r6
   13aa4:	mov	r0, #0
   13aa8:	ldrh	r2, [r3, #2]!
   13aac:	cmp	r2, r0
   13ab0:	movcs	r0, r2
   13ab4:	cmp	r5, r3
   13ab8:	bne	13aa8 <por_begin_data+0x54>
   13abc:	add	r4, r0, #1
   13ac0:	mov	r0, r4
   13ac4:	bl	410c <malloc@plt>
   13ac8:	str	r0, [fp]
   13acc:	str	r4, [fp, #4]
   13ad0:	ldr	r3, [pc, #1536]	; 140d8 <por_begin_data+0x684>
   13ad4:	ldr	r3, [r7, r3]
   13ad8:	sub	r3, r3, #1
   13adc:	b	13af8 <por_begin_data+0xa4>
   13ae0:	ldrsb	r2, [r3, #1]!
   13ae4:	cmp	r2, #0
   13ae8:	ldrne	r1, [fp]
   13aec:	strbne	r2, [r1, r2]
   13af0:	cmp	r5, r6
   13af4:	beq	13b14 <por_begin_data+0xc0>
   13af8:	ldrh	r2, [r6, #2]!
   13afc:	cmp	r2, #0
   13b00:	beq	13ae0 <por_begin_data+0x8c>
   13b04:	ldr	r1, [fp]
   13b08:	ldrb	r0, [r3, #1]
   13b0c:	strb	r0, [r1, r2]
   13b10:	b	13ae0 <por_begin_data+0x8c>
   13b14:	mov	r1, fp
   13b18:	ldr	r6, [sp, #12]
   13b1c:	mov	r0, r6
   13b20:	bl	138e4 <por_emit_header>
   13b24:	subs	r4, r0, #0
   13b28:	beq	13b48 <por_begin_data+0xf4>
   13b2c:	ldr	r0, [fp]
   13b30:	cmp	r0, #0
   13b34:	beq	13b3c <por_begin_data+0xe8>
   13b38:	bl	3eb4 <free@plt>
   13b3c:	mov	r0, fp
   13b40:	bl	3eb4 <free@plt>
   13b44:	b	14564 <por_begin_data+0xb10>
   13b48:	add	r0, r6, #20
   13b4c:	bl	4160 <localtime@plt>
   13b50:	subs	r5, r0, #0
   13b54:	beq	146ac <por_begin_data+0xc58>
   13b58:	mov	r2, #65	; 0x41
   13b5c:	mov	r1, fp
   13b60:	mov	r0, r6
   13b64:	bl	13100 <por_write_tag>
   13b68:	subs	r4, r0, #0
   13b6c:	bne	13b2c <por_begin_data+0xd8>
   13b70:	ldr	r0, [r5, #20]
   13b74:	add	r0, r0, #1888	; 0x760
   13b78:	add	r0, r0, #12
   13b7c:	movw	r2, #5977	; 0x1759
   13b80:	movt	r2, #53687	; 0xd1b7
   13b84:	umull	r2, r3, r2, r0
   13b88:	lsr	r3, r3, #13
   13b8c:	ldr	lr, [r5, #12]
   13b90:	movw	r2, #34079	; 0x851f
   13b94:	movt	r2, #20971	; 0x51eb
   13b98:	umull	ip, r1, r2, lr
   13b9c:	lsr	r1, r1, #5
   13ba0:	mov	ip, #100	; 0x64
   13ba4:	mls	r1, ip, r1, lr
   13ba8:	str	r1, [sp, #4]
   13bac:	ldr	r1, [r5, #16]
   13bb0:	add	r1, r1, #1
   13bb4:	umull	lr, r2, r2, r1
   13bb8:	lsr	r2, r2, #5
   13bbc:	mls	r2, ip, r2, r1
   13bc0:	str	r2, [sp]
   13bc4:	movw	r2, #10000	; 0x2710
   13bc8:	mls	r3, r2, r3, r0
   13bcc:	ldr	r2, [pc, #1288]	; 140dc <por_begin_data+0x688>
   13bd0:	add	r2, pc, r2
   13bd4:	mov	r1, #9
   13bd8:	add	r4, sp, #56	; 0x38
   13bdc:	mov	r0, r4
   13be0:	bl	4280 <snprintf@plt>
   13be4:	mov	r2, r4
   13be8:	mov	r1, fp
   13bec:	mov	r0, r6
   13bf0:	bl	135f4 <por_write_string_field>
   13bf4:	subs	r4, r0, #0
   13bf8:	bne	13b2c <por_begin_data+0xd8>
   13bfc:	ldr	ip, [r5, #8]
   13c00:	movw	r2, #34079	; 0x851f
   13c04:	movt	r2, #20971	; 0x51eb
   13c08:	umull	r3, r0, r2, ip
   13c0c:	lsr	r0, r0, #5
   13c10:	mov	r3, #100	; 0x64
   13c14:	ldr	lr, [r5]
   13c18:	umull	r4, r1, r2, lr
   13c1c:	lsr	r1, r1, #5
   13c20:	mls	r1, r3, r1, lr
   13c24:	str	r1, [sp, #4]
   13c28:	ldr	r1, [r5, #4]
   13c2c:	umull	lr, r2, r2, r1
   13c30:	lsr	r2, r2, #5
   13c34:	mls	r2, r3, r2, r1
   13c38:	str	r2, [sp]
   13c3c:	mls	r3, r3, r0, ip
   13c40:	ldr	r2, [pc, #1176]	; 140e0 <por_begin_data+0x68c>
   13c44:	add	r2, pc, r2
   13c48:	mov	r1, #7
   13c4c:	add	r4, sp, #40	; 0x28
   13c50:	mov	r0, r4
   13c54:	bl	4280 <snprintf@plt>
   13c58:	mov	r2, r4
   13c5c:	mov	r1, fp
   13c60:	mov	r0, r6
   13c64:	bl	135f4 <por_write_string_field>
   13c68:	subs	r4, r0, #0
   13c6c:	bne	13b2c <por_begin_data+0xd8>
   13c70:	mov	r2, #49	; 0x31
   13c74:	mov	r1, fp
   13c78:	mov	r0, r6
   13c7c:	bl	13100 <por_write_tag>
   13c80:	subs	r4, r0, #0
   13c84:	bne	13b2c <por_begin_data+0xd8>
   13c88:	ldr	r2, [pc, #1108]	; 140e4 <por_begin_data+0x690>
   13c8c:	add	r2, pc, r2
   13c90:	mov	r1, fp
   13c94:	mov	r0, r6
   13c98:	bl	135f4 <por_write_string_field>
   13c9c:	subs	r4, r0, #0
   13ca0:	bne	13b2c <por_begin_data+0xd8>
   13ca4:	mov	r2, #51	; 0x33
   13ca8:	mov	r1, fp
   13cac:	mov	r0, r6
   13cb0:	bl	13100 <por_write_tag>
   13cb4:	subs	r4, r0, #0
   13cb8:	bne	13b2c <por_begin_data+0xd8>
   13cbc:	ldr	r2, [pc, #1060]	; 140e8 <por_begin_data+0x694>
   13cc0:	add	r2, pc, r2
   13cc4:	mov	r1, fp
   13cc8:	mov	r0, r6
   13ccc:	bl	135f4 <por_write_string_field>
   13cd0:	subs	r4, r0, #0
   13cd4:	bne	13b2c <por_begin_data+0xd8>
   13cd8:	mov	r2, #52	; 0x34
   13cdc:	mov	r1, fp
   13ce0:	mov	r0, r6
   13ce4:	bl	13100 <por_write_tag>
   13ce8:	subs	r4, r0, #0
   13cec:	bne	13b2c <por_begin_data+0xd8>
   13cf0:	ldr	r2, [r6, #28]
   13cf4:	str	r2, [sp, #16]
   13cf8:	vmov	s15, r2
   13cfc:	vcvt.f64.s32	d0, s15
   13d00:	mov	r1, fp
   13d04:	mov	r0, r6
   13d08:	bl	134e8 <por_write_double>
   13d0c:	subs	r4, r0, #0
   13d10:	bne	13b2c <por_begin_data+0xd8>
   13d14:	mov	r2, #53	; 0x35
   13d18:	mov	r1, fp
   13d1c:	mov	r0, r6
   13d20:	bl	13100 <por_write_tag>
   13d24:	subs	r4, r0, #0
   13d28:	bne	13b2c <por_begin_data+0xd8>
   13d2c:	vldr	d0, [pc, #900]	; 140b8 <por_begin_data+0x664>
   13d30:	mov	r1, fp
   13d34:	mov	r0, r6
   13d38:	bl	134e8 <por_write_double>
   13d3c:	subs	r4, r0, #0
   13d40:	bne	13b2c <por_begin_data+0xd8>
   13d44:	mov	r0, r6
   13d48:	ldr	r3, [r6, #224]	; 0xe0
   13d4c:	cmp	r3, #0
   13d50:	beq	13d88 <por_begin_data+0x334>
   13d54:	mov	r2, #54	; 0x36
   13d58:	mov	r1, fp
   13d5c:	bl	13100 <por_write_tag>
   13d60:	subs	r4, r0, #0
   13d64:	bne	13b2c <por_begin_data+0xd8>
   13d68:	ldr	r0, [r6, #224]	; 0xe0
   13d6c:	bl	4364 <readstat_variable_get_name@plt>
   13d70:	mov	r2, r0
   13d74:	mov	r1, fp
   13d78:	mov	r0, r6
   13d7c:	bl	135f4 <por_write_string_field>
   13d80:	subs	r4, r0, #0
   13d84:	bne	13b2c <por_begin_data+0xd8>
   13d88:	ldr	r3, [sp, #12]
   13d8c:	ldr	r3, [r3, #28]
   13d90:	cmp	r3, #0
   13d94:	ble	1430c <por_begin_data+0x8b8>
   13d98:	mov	r3, #0
   13d9c:	str	r3, [sp, #20]
   13da0:	vldr	d11, [pc, #792]	; 140c0 <por_begin_data+0x66c>
   13da4:	vldr	d10, [pc, #796]	; 140c8 <por_begin_data+0x674>
   13da8:	str	fp, [sp, #16]
   13dac:	b	14214 <por_begin_data+0x7c0>
   13db0:	mov	r0, r7
   13db4:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   13db8:	subs	sl, r0, #0
   13dbc:	ble	14198 <por_begin_data+0x744>
   13dc0:	mov	r9, #0
   13dc4:	mov	r8, r9
   13dc8:	add	r6, sp, #40	; 0x28
   13dcc:	add	r5, sp, #56	; 0x38
   13dd0:	ldr	r4, [sp, #16]
   13dd4:	ldr	fp, [sp, #12]
   13dd8:	b	13e20 <por_begin_data+0x3cc>
   13ddc:	mov	r2, #57	; 0x39
   13de0:	mov	r1, r4
   13de4:	mov	r0, fp
   13de8:	bl	13100 <por_write_tag>
   13dec:	cmp	r0, #0
   13df0:	bne	145d0 <por_begin_data+0xb7c>
   13df4:	vmov.f64	d0, d9
   13df8:	mov	r1, r4
   13dfc:	mov	r0, fp
   13e00:	bl	134e8 <por_write_double>
   13e04:	cmp	r0, #0
   13e08:	bne	145dc <por_begin_data+0xb88>
   13e0c:	add	r9, r9, #2
   13e10:	add	r3, r8, #1
   13e14:	cmp	sl, r3
   13e18:	beq	13f0c <por_begin_data+0x4b8>
   13e1c:	mov	r8, r3
   13e20:	mov	r2, r8
   13e24:	mov	r1, r7
   13e28:	mov	r0, r6
   13e2c:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   13e30:	mov	r2, r8
   13e34:	mov	r1, r7
   13e38:	mov	r0, r5
   13e3c:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   13e40:	ldm	r6, {r0, r1, r2, r3}
   13e44:	bl	41b4 <readstat_double_value@plt>
   13e48:	vmov.f64	d8, d0
   13e4c:	ldm	r5, {r0, r1, r2, r3}
   13e50:	bl	41b4 <readstat_double_value@plt>
   13e54:	vmov.f64	d9, d0
   13e58:	vabs.f64	d7, d8
   13e5c:	vcmp.f64	d7, d10
   13e60:	vmrs	APSR_nzcv, fpscr
   13e64:	bgt	13ddc <por_begin_data+0x388>
   13e68:	vabs.f64	d7, d0
   13e6c:	vcmp.f64	d7, d10
   13e70:	vmrs	APSR_nzcv, fpscr
   13e74:	bgt	13ed4 <por_begin_data+0x480>
   13e78:	vcmp.f64	d8, d0
   13e7c:	vmrs	APSR_nzcv, fpscr
   13e80:	beq	13e10 <por_begin_data+0x3bc>
   13e84:	mov	r2, #66	; 0x42
   13e88:	mov	r1, r4
   13e8c:	mov	r0, fp
   13e90:	bl	13100 <por_write_tag>
   13e94:	cmp	r0, #0
   13e98:	bne	14600 <por_begin_data+0xbac>
   13e9c:	vmov.f64	d0, d8
   13ea0:	mov	r1, r4
   13ea4:	mov	r0, fp
   13ea8:	bl	134e8 <por_write_double>
   13eac:	cmp	r0, #0
   13eb0:	bne	1460c <por_begin_data+0xbb8>
   13eb4:	vmov.f64	d0, d9
   13eb8:	mov	r1, r4
   13ebc:	mov	r0, fp
   13ec0:	bl	134e8 <por_write_double>
   13ec4:	cmp	r0, #0
   13ec8:	bne	14618 <por_begin_data+0xbc4>
   13ecc:	add	r9, r9, #2
   13ed0:	b	13e10 <por_begin_data+0x3bc>
   13ed4:	mov	r2, #65	; 0x41
   13ed8:	mov	r1, r4
   13edc:	mov	r0, fp
   13ee0:	bl	13100 <por_write_tag>
   13ee4:	cmp	r0, #0
   13ee8:	bne	145e8 <por_begin_data+0xb94>
   13eec:	vmov.f64	d0, d8
   13ef0:	mov	r1, r4
   13ef4:	mov	r0, fp
   13ef8:	bl	134e8 <por_write_double>
   13efc:	cmp	r0, #0
   13f00:	bne	145f4 <por_begin_data+0xba0>
   13f04:	add	r9, r9, #2
   13f08:	b	13e10 <por_begin_data+0x3bc>
   13f0c:	mov	sl, #0
   13f10:	add	r6, sp, #40	; 0x28
   13f14:	add	r5, sp, #56	; 0x38
   13f18:	b	13f30 <por_begin_data+0x4dc>
   13f1c:	add	r9, r9, #1
   13f20:	add	r3, sl, #1
   13f24:	cmp	r8, sl
   13f28:	beq	13fd4 <por_begin_data+0x580>
   13f2c:	mov	sl, r3
   13f30:	mov	r2, sl
   13f34:	mov	r1, r7
   13f38:	mov	r0, r6
   13f3c:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   13f40:	mov	r2, sl
   13f44:	mov	r1, r7
   13f48:	mov	r0, r5
   13f4c:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   13f50:	ldm	r6, {r0, r1, r2, r3}
   13f54:	bl	41b4 <readstat_double_value@plt>
   13f58:	vmov.f64	d8, d0
   13f5c:	ldm	r5, {r0, r1, r2, r3}
   13f60:	bl	41b4 <readstat_double_value@plt>
   13f64:	vcmp.f64	d8, d0
   13f68:	vmrs	APSR_nzcv, fpscr
   13f6c:	bne	13f20 <por_begin_data+0x4cc>
   13f70:	vabs.f64	d7, d8
   13f74:	vcmp.f64	d7, d10
   13f78:	vmrs	APSR_nzcv, fpscr
   13f7c:	bgt	13f20 <por_begin_data+0x4cc>
   13f80:	vabs.f64	d0, d0
   13f84:	vcmp.f64	d0, d10
   13f88:	vmrs	APSR_nzcv, fpscr
   13f8c:	bgt	13f20 <por_begin_data+0x4cc>
   13f90:	mov	r2, #56	; 0x38
   13f94:	ldr	fp, [sp, #16]
   13f98:	mov	r1, fp
   13f9c:	ldr	r4, [sp, #12]
   13fa0:	mov	r0, r4
   13fa4:	bl	13100 <por_write_tag>
   13fa8:	cmp	r0, #0
   13fac:	bne	14624 <por_begin_data+0xbd0>
   13fb0:	vmov.f64	d0, d8
   13fb4:	mov	r1, fp
   13fb8:	mov	r0, r4
   13fbc:	bl	134e8 <por_write_double>
   13fc0:	cmp	r0, #0
   13fc4:	beq	13f1c <por_begin_data+0x4c8>
   13fc8:	ldr	fp, [sp, #16]
   13fcc:	mov	r4, r0
   13fd0:	b	13b2c <por_begin_data+0xd8>
   13fd4:	cmp	r9, #3
   13fd8:	ble	14198 <por_begin_data+0x744>
   13fdc:	ldr	fp, [sp, #16]
   13fe0:	b	141d8 <por_begin_data+0x784>
   13fe4:	add	r3, r8, #1
   13fe8:	cmp	fp, r3
   13fec:	beq	140a0 <por_begin_data+0x64c>
   13ff0:	mov	r8, r3
   13ff4:	mov	r2, r8
   13ff8:	mov	r1, r7
   13ffc:	mov	r0, r6
   14000:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   14004:	mov	r2, r8
   14008:	mov	r1, r7
   1400c:	mov	r0, r5
   14010:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   14014:	ldm	r6, {r0, r1, r2, r3}
   14018:	bl	3fa4 <readstat_string_value@plt>
   1401c:	mov	r9, r0
   14020:	ldm	r5, {r0, r1, r2, r3}
   14024:	bl	3fa4 <readstat_string_value@plt>
   14028:	mov	sl, r0
   1402c:	cmp	r9, #0
   14030:	cmpne	r0, #0
   14034:	beq	13fe4 <por_begin_data+0x590>
   14038:	mov	r1, r0
   1403c:	mov	r0, r9
   14040:	bl	3df4 <strcmp@plt>
   14044:	cmp	r0, #0
   14048:	beq	13fe4 <por_begin_data+0x590>
   1404c:	mov	r2, #66	; 0x42
   14050:	ldr	r1, [sp, #16]
   14054:	ldr	r0, [sp, #12]
   14058:	bl	13100 <por_write_tag>
   1405c:	cmp	r0, #0
   14060:	bne	14630 <por_begin_data+0xbdc>
   14064:	mov	r2, r9
   14068:	ldr	r1, [sp, #16]
   1406c:	ldr	r9, [sp, #12]
   14070:	mov	r0, r9
   14074:	bl	135f4 <por_write_string_field>
   14078:	cmp	r0, #0
   1407c:	bne	1463c <por_begin_data+0xbe8>
   14080:	mov	r2, sl
   14084:	ldr	r1, [sp, #16]
   14088:	mov	r0, r9
   1408c:	bl	135f4 <por_write_string_field>
   14090:	cmp	r0, #0
   14094:	bne	14648 <por_begin_data+0xbf4>
   14098:	add	r4, r4, #2
   1409c:	b	13fe4 <por_begin_data+0x590>
   140a0:	mov	r9, #0
   140a4:	add	r6, sp, #40	; 0x28
   140a8:	add	r5, sp, #56	; 0x38
   140ac:	mov	fp, #56	; 0x38
   140b0:	b	14100 <por_begin_data+0x6ac>
   140b4:	nop	{0}
   140b8:	.word	0x00000000
   140bc:	.word	0x40490000
	...
   140c8:	.word	0xffffffff
   140cc:	.word	0x7fefffff
   140d0:	.word	0x00032580
   140d4:	.word	0x000002f8
   140d8:	.word	0x00000304
   140dc:	.word	0x0001319c
   140e0:	.word	0x00013138
   140e4:	.word	0x000131c0
   140e8:	.word	0x00013198
   140ec:	add	r4, r4, #1
   140f0:	add	r3, r9, #1
   140f4:	cmp	r8, r9
   140f8:	beq	14190 <por_begin_data+0x73c>
   140fc:	mov	r9, r3
   14100:	mov	r2, r9
   14104:	mov	r1, r7
   14108:	mov	r0, r6
   1410c:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   14110:	mov	r2, r9
   14114:	mov	r1, r7
   14118:	mov	r0, r5
   1411c:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   14120:	ldm	r6, {r0, r1, r2, r3}
   14124:	bl	3fa4 <readstat_string_value@plt>
   14128:	mov	sl, r0
   1412c:	ldm	r5, {r0, r1, r2, r3}
   14130:	bl	3fa4 <readstat_string_value@plt>
   14134:	mov	r1, r0
   14138:	cmp	sl, #0
   1413c:	cmpne	r0, #0
   14140:	beq	140f0 <por_begin_data+0x69c>
   14144:	mov	r0, sl
   14148:	bl	3df4 <strcmp@plt>
   1414c:	cmp	r0, #0
   14150:	bne	140f0 <por_begin_data+0x69c>
   14154:	mov	r2, fp
   14158:	ldr	r1, [sp, #16]
   1415c:	ldr	r0, [sp, #12]
   14160:	bl	13100 <por_write_tag>
   14164:	cmp	r0, #0
   14168:	bne	14654 <por_begin_data+0xc00>
   1416c:	mov	r2, sl
   14170:	ldr	r1, [sp, #16]
   14174:	ldr	r0, [sp, #12]
   14178:	bl	135f4 <por_write_string_field>
   1417c:	cmp	r0, #0
   14180:	beq	140ec <por_begin_data+0x698>
   14184:	ldr	fp, [sp, #16]
   14188:	mov	r4, r0
   1418c:	b	13b2c <por_begin_data+0xd8>
   14190:	cmp	r4, #3
   14194:	bgt	141d4 <por_begin_data+0x780>
   14198:	mov	r0, r7
   1419c:	bl	4400 <readstat_variable_get_label@plt>
   141a0:	subs	r4, r0, #0
   141a4:	beq	141f8 <por_begin_data+0x7a4>
   141a8:	mov	r2, #67	; 0x43
   141ac:	ldr	r6, [sp, #16]
   141b0:	mov	r1, r6
   141b4:	ldr	r5, [sp, #12]
   141b8:	mov	r0, r5
   141bc:	bl	13100 <por_write_tag>
   141c0:	cmp	r0, #0
   141c4:	beq	141e0 <por_begin_data+0x78c>
   141c8:	ldr	fp, [sp, #16]
   141cc:	mov	r4, r0
   141d0:	b	13b2c <por_begin_data+0xd8>
   141d4:	ldr	fp, [sp, #16]
   141d8:	mov	r4, #31
   141dc:	b	13b2c <por_begin_data+0xd8>
   141e0:	mov	r2, r4
   141e4:	mov	r1, r6
   141e8:	mov	r0, r5
   141ec:	bl	135f4 <por_write_string_field>
   141f0:	cmp	r0, #0
   141f4:	bne	14660 <por_begin_data+0xc0c>
   141f8:	ldr	r3, [sp, #20]
   141fc:	add	r2, r3, #1
   14200:	str	r2, [sp, #20]
   14204:	ldr	r3, [sp, #12]
   14208:	ldr	r3, [r3, #28]
   1420c:	cmp	r2, r3
   14210:	bge	14308 <por_begin_data+0x8b4>
   14214:	ldr	r1, [sp, #20]
   14218:	ldr	r5, [sp, #12]
   1421c:	mov	r0, r5
   14220:	bl	437c <readstat_get_variable@plt>
   14224:	mov	r7, r0
   14228:	bl	4364 <readstat_variable_get_name@plt>
   1422c:	mov	r4, r0
   14230:	mov	r2, #55	; 0x37
   14234:	ldr	r1, [sp, #16]
   14238:	mov	r0, r5
   1423c:	bl	13100 <por_write_tag>
   14240:	cmp	r0, #0
   14244:	bne	14588 <por_begin_data+0xb34>
   14248:	ldr	r3, [r7]
   1424c:	cmp	r3, #0
   14250:	ldreq	r3, [r7, #1600]	; 0x640
   14254:	vmoveq	s15, r3
   14258:	vcvteq.f64.u32	d0, s15
   1425c:	vmovne.f64	d0, d11
   14260:	ldr	r6, [sp, #16]
   14264:	mov	r1, r6
   14268:	ldr	r5, [sp, #12]
   1426c:	mov	r0, r5
   14270:	bl	134e8 <por_write_double>
   14274:	cmp	r0, #0
   14278:	bne	14594 <por_begin_data+0xb40>
   1427c:	mov	r2, r4
   14280:	mov	r1, r6
   14284:	mov	r0, r5
   14288:	bl	135f4 <por_write_string_field>
   1428c:	cmp	r0, #0
   14290:	bne	145a0 <por_begin_data+0xb4c>
   14294:	add	r1, sp, #28
   14298:	mov	r0, r7
   1429c:	bl	40f4 <spss_format_for_variable@plt>
   142a0:	cmp	r0, #0
   142a4:	bne	145ac <por_begin_data+0xb58>
   142a8:	add	r2, sp, #28
   142ac:	mov	r1, r6
   142b0:	mov	r0, r5
   142b4:	bl	13638 <por_emit_format>
   142b8:	cmp	r0, #0
   142bc:	bne	145b8 <por_begin_data+0xb64>
   142c0:	add	r2, sp, #28
   142c4:	mov	r1, r6
   142c8:	mov	r0, r5
   142cc:	bl	13638 <por_emit_format>
   142d0:	cmp	r0, #0
   142d4:	bne	145c4 <por_begin_data+0xb70>
   142d8:	ldr	r3, [r7]
   142dc:	cmp	r3, #5
   142e0:	beq	13db0 <por_begin_data+0x35c>
   142e4:	mov	r0, r7
   142e8:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   142ec:	subs	fp, r0, #0
   142f0:	ble	14198 <por_begin_data+0x744>
   142f4:	mov	r4, #0
   142f8:	mov	r8, r4
   142fc:	add	r6, sp, #40	; 0x28
   14300:	add	r5, sp, #56	; 0x38
   14304:	b	13ff4 <por_begin_data+0x5a0>
   14308:	ldr	fp, [sp, #16]
   1430c:	ldr	r3, [sp, #12]
   14310:	ldr	r3, [r3, #40]	; 0x28
   14314:	cmp	r3, #0
   14318:	ble	144b0 <por_begin_data+0xa5c>
   1431c:	mov	r6, #0
   14320:	mov	sl, #68	; 0x44
   14324:	ldr	r8, [sp, #12]
   14328:	b	143d8 <por_begin_data+0x984>
   1432c:	ldr	r3, [r0, #20]
   14330:	ldr	r2, [r0, #16]
   14334:	mov	r1, fp
   14338:	mov	r0, r8
   1433c:	bl	13594 <por_write_string_field_n>
   14340:	cmp	r0, #0
   14344:	bne	1468c <por_begin_data+0xc38>
   14348:	ldr	r3, [r4, #28]
   1434c:	ldr	r2, [r4, #24]
   14350:	mov	r1, fp
   14354:	mov	r0, r8
   14358:	bl	13594 <por_write_string_field_n>
   1435c:	cmp	r0, #0
   14360:	bne	14694 <por_begin_data+0xc40>
   14364:	add	r7, r7, #1
   14368:	ldr	r3, [r5, #264]	; 0x108
   1436c:	cmp	r7, r3
   14370:	bge	143c8 <por_begin_data+0x974>
   14374:	mov	r1, r7
   14378:	mov	r0, r5
   1437c:	bl	44cc <readstat_get_value_label@plt>
   14380:	mov	r4, r0
   14384:	cmp	r9, #0
   14388:	beq	1432c <por_begin_data+0x8d8>
   1438c:	cmp	r9, #5
   14390:	beq	143b4 <por_begin_data+0x960>
   14394:	cmp	r9, #3
   14398:	bne	14348 <por_begin_data+0x8f4>
   1439c:	vldr	s15, [r0, #8]
   143a0:	vcvt.f64.s32	d0, s15
   143a4:	mov	r1, fp
   143a8:	mov	r0, r8
   143ac:	bl	134e8 <por_write_double>
   143b0:	b	14340 <por_begin_data+0x8ec>
   143b4:	vldr	d0, [r0]
   143b8:	mov	r1, fp
   143bc:	mov	r0, r8
   143c0:	bl	134e8 <por_write_double>
   143c4:	b	14340 <por_begin_data+0x8ec>
   143c8:	add	r6, r6, #1
   143cc:	ldr	r3, [r8, #40]	; 0x28
   143d0:	cmp	r6, r3
   143d4:	bge	144b0 <por_begin_data+0xa5c>
   143d8:	mov	r1, r6
   143dc:	mov	r0, r8
   143e0:	bl	4424 <readstat_get_label_set@plt>
   143e4:	mov	r5, r0
   143e8:	ldr	r3, [r0, #264]	; 0x108
   143ec:	cmp	r3, #0
   143f0:	beq	143c8 <por_begin_data+0x974>
   143f4:	ldr	r3, [r0, #276]	; 0x114
   143f8:	cmp	r3, #0
   143fc:	beq	143c8 <por_begin_data+0x974>
   14400:	ldr	r9, [r0]
   14404:	mov	r2, sl
   14408:	mov	r1, fp
   1440c:	mov	r0, r8
   14410:	bl	13100 <por_write_tag>
   14414:	cmp	r0, #0
   14418:	bne	1466c <por_begin_data+0xc18>
   1441c:	vldr	s15, [r5, #276]	; 0x114
   14420:	vcvt.f64.s32	d0, s15
   14424:	mov	r1, fp
   14428:	mov	r0, r8
   1442c:	bl	134e8 <por_write_double>
   14430:	cmp	r0, #0
   14434:	bne	14674 <por_begin_data+0xc20>
   14438:	ldr	r3, [r5, #276]	; 0x114
   1443c:	cmp	r3, #0
   14440:	ble	14480 <por_begin_data+0xa2c>
   14444:	mov	r7, #0
   14448:	mov	r1, r7
   1444c:	mov	r0, r5
   14450:	bl	4448 <readstat_get_label_set_variable@plt>
   14454:	bl	4364 <readstat_variable_get_name@plt>
   14458:	mov	r2, r0
   1445c:	mov	r1, fp
   14460:	mov	r0, r8
   14464:	bl	135f4 <por_write_string_field>
   14468:	cmp	r0, #0
   1446c:	bne	1467c <por_begin_data+0xc28>
   14470:	add	r7, r7, #1
   14474:	ldr	r3, [r5, #276]	; 0x114
   14478:	cmp	r7, r3
   1447c:	blt	14448 <por_begin_data+0x9f4>
   14480:	vldr	s15, [r5, #264]	; 0x108
   14484:	vcvt.f64.s32	d0, s15
   14488:	mov	r1, fp
   1448c:	mov	r0, r8
   14490:	bl	134e8 <por_write_double>
   14494:	cmp	r0, #0
   14498:	bne	14684 <por_begin_data+0xc30>
   1449c:	ldr	r3, [r5, #264]	; 0x108
   144a0:	cmp	r3, #0
   144a4:	ble	143c8 <por_begin_data+0x974>
   144a8:	mov	r7, #0
   144ac:	b	14374 <por_begin_data+0x920>
   144b0:	mov	r2, #69	; 0x45
   144b4:	mov	r1, fp
   144b8:	ldr	r6, [sp, #12]
   144bc:	mov	r0, r6
   144c0:	bl	13100 <por_write_tag>
   144c4:	subs	r4, r0, #0
   144c8:	bne	13b2c <por_begin_data+0xd8>
   144cc:	ldr	r3, [r6, #52]	; 0x34
   144d0:	str	r3, [sp, #16]
   144d4:	vmov	s15, r3
   144d8:	vcvt.f64.s32	d0, s15
   144dc:	mov	r1, fp
   144e0:	mov	r0, r6
   144e4:	bl	134e8 <por_write_double>
   144e8:	subs	r4, r0, #0
   144ec:	bne	13b2c <por_begin_data+0xd8>
   144f0:	ldr	r3, [r6, #52]	; 0x34
   144f4:	cmp	r3, #0
   144f8:	ble	14544 <por_begin_data+0xaf0>
   144fc:	mov	r5, #0
   14500:	ldr	r3, [r6, #48]	; 0x30
   14504:	ldr	r4, [r3, r5, lsl #2]
   14508:	mov	r0, r4
   1450c:	bl	41fc <strlen@plt>
   14510:	mov	r3, r0
   14514:	cmp	r0, #80	; 0x50
   14518:	bhi	146a4 <por_begin_data+0xc50>
   1451c:	mov	r2, r4
   14520:	mov	r1, fp
   14524:	mov	r0, r6
   14528:	bl	13594 <por_write_string_field_n>
   1452c:	cmp	r0, #0
   14530:	bne	1469c <por_begin_data+0xc48>
   14534:	add	r5, r5, #1
   14538:	ldr	r3, [r6, #52]	; 0x34
   1453c:	cmp	r5, r3
   14540:	blt	14500 <por_begin_data+0xaac>
   14544:	mov	r2, #70	; 0x46
   14548:	mov	r1, fp
   1454c:	ldr	r0, [sp, #12]
   14550:	bl	13100 <por_write_tag>
   14554:	subs	r4, r0, #0
   14558:	bne	13b2c <por_begin_data+0xd8>
   1455c:	ldr	r3, [sp, #12]
   14560:	str	fp, [r3, #300]	; 0x12c
   14564:	mov	r0, r4
   14568:	add	sp, sp, #76	; 0x4c
   1456c:	vpop	{d8-d11}
   14570:	ldrd	r4, [sp]
   14574:	ldrd	r6, [sp, #8]
   14578:	ldrd	r8, [sp, #16]
   1457c:	ldrd	sl, [sp, #24]
   14580:	add	sp, sp, #32
   14584:	pop	{pc}		; (ldr pc, [sp], #4)
   14588:	ldr	fp, [sp, #16]
   1458c:	mov	r4, r0
   14590:	b	13b2c <por_begin_data+0xd8>
   14594:	ldr	fp, [sp, #16]
   14598:	mov	r4, r0
   1459c:	b	13b2c <por_begin_data+0xd8>
   145a0:	ldr	fp, [sp, #16]
   145a4:	mov	r4, r0
   145a8:	b	13b2c <por_begin_data+0xd8>
   145ac:	ldr	fp, [sp, #16]
   145b0:	mov	r4, r0
   145b4:	b	13b2c <por_begin_data+0xd8>
   145b8:	ldr	fp, [sp, #16]
   145bc:	mov	r4, r0
   145c0:	b	13b2c <por_begin_data+0xd8>
   145c4:	ldr	fp, [sp, #16]
   145c8:	mov	r4, r0
   145cc:	b	13b2c <por_begin_data+0xd8>
   145d0:	mov	fp, r4
   145d4:	mov	r4, r0
   145d8:	b	13b2c <por_begin_data+0xd8>
   145dc:	mov	fp, r4
   145e0:	mov	r4, r0
   145e4:	b	13b2c <por_begin_data+0xd8>
   145e8:	mov	fp, r4
   145ec:	mov	r4, r0
   145f0:	b	13b2c <por_begin_data+0xd8>
   145f4:	mov	fp, r4
   145f8:	mov	r4, r0
   145fc:	b	13b2c <por_begin_data+0xd8>
   14600:	mov	fp, r4
   14604:	mov	r4, r0
   14608:	b	13b2c <por_begin_data+0xd8>
   1460c:	mov	fp, r4
   14610:	mov	r4, r0
   14614:	b	13b2c <por_begin_data+0xd8>
   14618:	mov	fp, r4
   1461c:	mov	r4, r0
   14620:	b	13b2c <por_begin_data+0xd8>
   14624:	ldr	fp, [sp, #16]
   14628:	mov	r4, r0
   1462c:	b	13b2c <por_begin_data+0xd8>
   14630:	ldr	fp, [sp, #16]
   14634:	mov	r4, r0
   14638:	b	13b2c <por_begin_data+0xd8>
   1463c:	ldr	fp, [sp, #16]
   14640:	mov	r4, r0
   14644:	b	13b2c <por_begin_data+0xd8>
   14648:	ldr	fp, [sp, #16]
   1464c:	mov	r4, r0
   14650:	b	13b2c <por_begin_data+0xd8>
   14654:	ldr	fp, [sp, #16]
   14658:	mov	r4, r0
   1465c:	b	13b2c <por_begin_data+0xd8>
   14660:	ldr	fp, [sp, #16]
   14664:	mov	r4, r0
   14668:	b	13b2c <por_begin_data+0xd8>
   1466c:	mov	r4, r0
   14670:	b	13b2c <por_begin_data+0xd8>
   14674:	mov	r4, r0
   14678:	b	13b2c <por_begin_data+0xd8>
   1467c:	mov	r4, r0
   14680:	b	13b2c <por_begin_data+0xd8>
   14684:	mov	r4, r0
   14688:	b	13b2c <por_begin_data+0xd8>
   1468c:	mov	r4, r0
   14690:	b	13b2c <por_begin_data+0xd8>
   14694:	mov	r4, r0
   14698:	b	13b2c <por_begin_data+0xd8>
   1469c:	mov	r4, r0
   146a0:	b	13b2c <por_begin_data+0xd8>
   146a4:	mov	r4, #32
   146a8:	b	13b2c <por_begin_data+0xd8>
   146ac:	mov	r4, #39	; 0x27
   146b0:	b	13b2c <por_begin_data+0xd8>

000146b4 <readstat_begin_writing_por>:
   146b4:	str	r4, [sp, #-8]!
   146b8:	str	lr, [sp, #4]
   146bc:	ldr	ip, [pc, #176]	; 14774 <readstat_begin_writing_por+0xc0>
   146c0:	add	ip, pc, ip
   146c4:	str	ip, [r0, #292]	; 0x124
   146c8:	ldr	ip, [pc, #168]	; 14778 <readstat_begin_writing_por+0xc4>
   146cc:	add	ip, pc, ip
   146d0:	str	ip, [r0, #228]	; 0xe4
   146d4:	ldr	ip, [pc, #160]	; 1477c <readstat_begin_writing_por+0xc8>
   146d8:	add	ip, pc, ip
   146dc:	str	ip, [r0, #232]	; 0xe8
   146e0:	ldr	ip, [pc, #152]	; 14780 <readstat_begin_writing_por+0xcc>
   146e4:	add	ip, pc, ip
   146e8:	str	ip, [r0, #236]	; 0xec
   146ec:	ldr	ip, [pc, #144]	; 14784 <readstat_begin_writing_por+0xd0>
   146f0:	add	ip, pc, ip
   146f4:	str	ip, [r0, #240]	; 0xf0
   146f8:	ldr	ip, [pc, #136]	; 14788 <readstat_begin_writing_por+0xd4>
   146fc:	add	ip, pc, ip
   14700:	str	ip, [r0, #244]	; 0xf4
   14704:	ldr	ip, [pc, #128]	; 1478c <readstat_begin_writing_por+0xd8>
   14708:	add	ip, pc, ip
   1470c:	str	ip, [r0, #248]	; 0xf8
   14710:	ldr	ip, [pc, #120]	; 14790 <readstat_begin_writing_por+0xdc>
   14714:	add	ip, pc, ip
   14718:	str	ip, [r0, #252]	; 0xfc
   1471c:	ldr	ip, [pc, #112]	; 14794 <readstat_begin_writing_por+0xe0>
   14720:	add	ip, pc, ip
   14724:	str	ip, [r0, #256]	; 0x100
   14728:	ldr	ip, [pc, #104]	; 14798 <readstat_begin_writing_por+0xe4>
   1472c:	add	ip, pc, ip
   14730:	str	ip, [r0, #264]	; 0x108
   14734:	ldr	ip, [pc, #96]	; 1479c <readstat_begin_writing_por+0xe8>
   14738:	add	ip, pc, ip
   1473c:	str	ip, [r0, #268]	; 0x10c
   14740:	ldr	ip, [pc, #88]	; 147a0 <readstat_begin_writing_por+0xec>
   14744:	add	ip, pc, ip
   14748:	str	ip, [r0, #276]	; 0x114
   1474c:	ldr	ip, [pc, #80]	; 147a4 <readstat_begin_writing_por+0xf0>
   14750:	add	ip, pc, ip
   14754:	str	ip, [r0, #280]	; 0x118
   14758:	ldr	ip, [pc, #72]	; 147a8 <readstat_begin_writing_por+0xf4>
   1475c:	add	ip, pc, ip
   14760:	str	ip, [r0, #284]	; 0x11c
   14764:	bl	3f5c <readstat_begin_writing_file@plt>
   14768:	ldr	r4, [sp]
   1476c:	add	sp, sp, #4
   14770:	pop	{pc}		; (ldr pc, [sp], #4)
   14774:	.word	0xffffe920
   14778:	.word	0xffffe904
   1477c:	.word	0xfffff0bc
   14780:	.word	0xfffff090
   14784:	.word	0xfffff064
   14788:	.word	0xfffff038
   1478c:	.word	0xfffff010
   14790:	.word	0xffffef8c
   14794:	.word	0xfffff124
   14798:	.word	0xffffefc4
   1479c:	.word	0xffffef94
   147a0:	.word	0xfffff308
   147a4:	.word	0xffffe9d0
   147a8:	.word	0xffffea38

000147ac <sav_ctx_free>:
   147ac:	strd	r4, [sp, #-16]!
   147b0:	str	r6, [sp, #8]
   147b4:	str	lr, [sp, #12]
   147b8:	mov	r4, r0
   147bc:	ldr	r3, [r0, #44]	; 0x2c
   147c0:	cmp	r3, #0
   147c4:	beq	147fc <sav_ctx_free+0x50>
   147c8:	ldr	r3, [r0, #340]	; 0x154
   147cc:	cmp	r3, #0
   147d0:	ble	147f4 <sav_ctx_free+0x48>
   147d4:	mov	r5, #0
   147d8:	ldr	r3, [r4, #44]	; 0x2c
   147dc:	ldr	r0, [r3, r5, lsl #2]
   147e0:	bl	4418 <spss_varinfo_free@plt>
   147e4:	add	r5, r5, #1
   147e8:	ldr	r3, [r4, #340]	; 0x154
   147ec:	cmp	r3, r5
   147f0:	bgt	147d8 <sav_ctx_free+0x2c>
   147f4:	ldr	r0, [r4, #44]	; 0x2c
   147f8:	bl	3eb4 <free@plt>
   147fc:	ldr	r3, [r4, #52]	; 0x34
   14800:	cmp	r3, #0
   14804:	beq	1484c <sav_ctx_free+0xa0>
   14808:	ldr	r3, [r4, #348]	; 0x15c
   1480c:	cmp	r3, #0
   14810:	ble	14844 <sav_ctx_free+0x98>
   14814:	mov	r5, #0
   14818:	b	14830 <sav_ctx_free+0x84>
   1481c:	bl	3eb4 <free@plt>
   14820:	add	r5, r5, #1
   14824:	ldr	r3, [r4, #348]	; 0x15c
   14828:	cmp	r3, r5
   1482c:	ble	14844 <sav_ctx_free+0x98>
   14830:	ldr	r3, [r4, #52]	; 0x34
   14834:	ldr	r0, [r3, r5, lsl #2]
   14838:	cmp	r0, #0
   1483c:	bne	1481c <sav_ctx_free+0x70>
   14840:	b	14820 <sav_ctx_free+0x74>
   14844:	ldr	r0, [r4, #52]	; 0x34
   14848:	bl	3eb4 <free@plt>
   1484c:	ldr	r0, [r4, #376]	; 0x178
   14850:	cmp	r0, #0
   14854:	beq	1485c <sav_ctx_free+0xb0>
   14858:	bl	3eb4 <free@plt>
   1485c:	ldr	r0, [r4, #384]	; 0x180
   14860:	cmp	r0, #0
   14864:	beq	1486c <sav_ctx_free+0xc0>
   14868:	bl	3eb4 <free@plt>
   1486c:	ldr	r0, [r4, #336]	; 0x150
   14870:	cmp	r0, #0
   14874:	beq	1487c <sav_ctx_free+0xd0>
   14878:	bl	3dc4 <iconv_close@plt>
   1487c:	ldr	r0, [r4, #328]	; 0x148
   14880:	cmp	r0, #0
   14884:	beq	1488c <sav_ctx_free+0xe0>
   14888:	bl	3eb4 <free@plt>
   1488c:	mov	r0, r4
   14890:	bl	3eb4 <free@plt>
   14894:	ldrd	r4, [sp]
   14898:	ldr	r6, [sp, #8]
   1489c:	add	sp, sp, #12
   148a0:	pop	{pc}		; (ldr pc, [sp], #4)

000148a4 <sav_ctx_init>:
   148a4:	strd	r4, [sp, #-16]!
   148a8:	str	r6, [sp, #8]
   148ac:	str	lr, [sp, #12]
   148b0:	mov	r5, r0
   148b4:	mov	r6, r1
   148b8:	mov	r1, #440	; 0x1b8
   148bc:	mov	r0, #1
   148c0:	bl	3fbc <readstat_calloc@plt>
   148c4:	subs	r4, r0, #0
   148c8:	beq	149fc <sav_ctx_init+0x158>
   148cc:	mov	r2, #4
   148d0:	ldr	r1, [pc, #444]	; 14a94 <sav_ctx_init+0x1f0>
   148d4:	add	r1, pc, r1
   148d8:	mov	r0, r5
   148dc:	bl	3f98 <memcmp@plt>
   148e0:	cmp	r0, #0
   148e4:	moveq	r3, #2
   148e8:	streq	r3, [r4, #424]	; 0x1a8
   148ec:	beq	14914 <sav_ctx_init+0x70>
   148f0:	mov	r2, #4
   148f4:	ldr	r1, [pc, #412]	; 14a98 <sav_ctx_init+0x1f4>
   148f8:	add	r1, pc, r1
   148fc:	mov	r0, r5
   14900:	bl	3f98 <memcmp@plt>
   14904:	cmp	r0, #0
   14908:	bne	14a10 <sav_ctx_init+0x16c>
   1490c:	mov	r3, #3
   14910:	str	r3, [r4, #424]	; 0x1a8
   14914:	ldr	r3, [r5, #64]	; 0x40
   14918:	sub	r3, r3, #2
   1491c:	cmp	r3, #1
   14920:	movls	r3, #0
   14924:	movhi	r3, #1
   14928:	ldrb	r2, [r4, #436]	; 0x1b4
   1492c:	bfi	r2, r3, #0, #1
   14930:	strb	r2, [r4, #436]	; 0x1b4
   14934:	bl	3ea8 <machine_is_little_endian@plt>
   14938:	ldrb	r3, [r4, #436]	; 0x1b4
   1493c:	and	r3, r3, #1
   14940:	cmp	r0, r3
   14944:	movne	r0, #1
   14948:	moveq	r0, #2
   1494c:	str	r0, [r4, #432]	; 0x1b0
   14950:	ldr	r0, [r5, #72]	; 0x48
   14954:	cmp	r0, #1
   14958:	bne	14a20 <sav_ctx_init+0x17c>
   1495c:	mov	r3, #1
   14960:	str	r3, [r4, #428]	; 0x1ac
   14964:	ldrb	r3, [r4, #436]	; 0x1b4
   14968:	tst	r3, #1
   1496c:	bne	14a54 <sav_ctx_init+0x1b0>
   14970:	ldr	r0, [r5, #80]	; 0x50
   14974:	str	r0, [r4, #352]	; 0x160
   14978:	ldrb	r3, [r4, #436]	; 0x1b4
   1497c:	tst	r3, #1
   14980:	bne	14a60 <sav_ctx_init+0x1bc>
   14984:	ldr	r0, [r5, #76]	; 0x4c
   14988:	str	r0, [r4, #372]	; 0x174
   1498c:	add	r3, r4, #400	; 0x190
   14990:	mvn	r0, #0
   14994:	mvn	r1, #1048576	; 0x100000
   14998:	strd	r0, [r3, #-8]
   1499c:	mvn	r0, #1
   149a0:	mvn	r1, #1048576	; 0x100000
   149a4:	strd	r0, [r3]
   149a8:	add	r3, r4, #416	; 0x1a0
   149ac:	mvn	r0, #0
   149b0:	movw	r1, #65535	; 0xffff
   149b4:	movt	r1, #32751	; 0x7fef
   149b8:	strd	r0, [r3, #-8]
   149bc:	ldrb	r3, [r4, #436]	; 0x1b4
   149c0:	tst	r3, #1
   149c4:	bne	14a6c <sav_ctx_init+0x1c8>
   149c8:	ldr	r2, [r5, #84]	; 0x54
   149cc:	ldr	r3, [r5, #88]	; 0x58
   149d0:	str	r2, [r4, #416]	; 0x1a0
   149d4:	str	r3, [r4, #420]	; 0x1a4
   149d8:	mov	r0, #512	; 0x200
   149dc:	str	r0, [r4, #48]	; 0x30
   149e0:	mov	r1, #4
   149e4:	bl	3fbc <readstat_calloc@plt>
   149e8:	mov	r5, r0
   149ec:	str	r0, [r4, #44]	; 0x2c
   149f0:	cmp	r0, #0
   149f4:	strne	r6, [r4, #36]	; 0x24
   149f8:	beq	14a84 <sav_ctx_init+0x1e0>
   149fc:	mov	r0, r4
   14a00:	ldrd	r4, [sp]
   14a04:	ldr	r6, [sp, #8]
   14a08:	add	sp, sp, #12
   14a0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a10:	mov	r0, r4
   14a14:	bl	3f08 <sav_ctx_free@plt>
   14a18:	mov	r4, #0
   14a1c:	b	149fc <sav_ctx_init+0x158>
   14a20:	bl	3d88 <byteswap4@plt>
   14a24:	cmp	r0, #1
   14a28:	beq	1495c <sav_ctx_init+0xb8>
   14a2c:	ldr	r0, [r5, #72]	; 0x48
   14a30:	cmp	r0, #2
   14a34:	bne	14a44 <sav_ctx_init+0x1a0>
   14a38:	mov	r3, #2
   14a3c:	str	r3, [r4, #428]	; 0x1ac
   14a40:	b	14964 <sav_ctx_init+0xc0>
   14a44:	bl	3d88 <byteswap4@plt>
   14a48:	cmp	r0, #2
   14a4c:	bne	14964 <sav_ctx_init+0xc0>
   14a50:	b	14a38 <sav_ctx_init+0x194>
   14a54:	ldr	r0, [r5, #80]	; 0x50
   14a58:	bl	3d88 <byteswap4@plt>
   14a5c:	b	14974 <sav_ctx_init+0xd0>
   14a60:	ldr	r0, [r5, #76]	; 0x4c
   14a64:	bl	3d88 <byteswap4@plt>
   14a68:	b	14988 <sav_ctx_init+0xe4>
   14a6c:	ldr	r2, [r5, #84]	; 0x54
   14a70:	ldr	r3, [r5, #88]	; 0x58
   14a74:	vmov	d0, r2, r3
   14a78:	bl	4508 <byteswap_double@plt>
   14a7c:	vmov	r2, r3, d0
   14a80:	b	149d0 <sav_ctx_init+0x12c>
   14a84:	mov	r0, r4
   14a88:	bl	3f08 <sav_ctx_free@plt>
   14a8c:	mov	r4, r5
   14a90:	b	149fc <sav_ctx_init+0x158>
   14a94:	.word	0x000125ac
   14a98:	.word	0x00012590
   14a9c:	.word	0x00000000

00014aa0 <sav_compressed_row_bound>:
   14aa0:	lsr	r3, r0, #3
   14aa4:	add	r3, r3, #8
   14aa8:	bic	r3, r3, #7
   14aac:	add	r0, r3, r0
   14ab0:	bx	lr

00014ab4 <sav_compress_row>:
   14ab4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14ab8:	strd	r6, [sp, #8]
   14abc:	strd	r8, [sp, #16]
   14ac0:	strd	sl, [sp, #24]
   14ac4:	str	lr, [sp, #32]
   14ac8:	vpush	{d8-d9}
   14acc:	sub	sp, sp, #28
   14ad0:	mov	fp, r0
   14ad4:	mov	r2, r3
   14ad8:	str	r3, [sp, #4]
   14adc:	mov	r3, #0
   14ae0:	str	r3, [r0]
   14ae4:	str	r3, [r0, #4]
   14ae8:	ldr	r3, [r2, #28]
   14aec:	cmp	r3, #0
   14af0:	ble	14cd8 <sav_compress_row+0x224>
   14af4:	mov	sl, r1
   14af8:	mov	r9, #0
   14afc:	mov	r8, r9
   14b00:	mov	r7, #8
   14b04:	vldr	d8, [pc, #532]	; 14d20 <sav_compress_row+0x26c>
   14b08:	vldr	d9, [pc, #536]	; 14d28 <sav_compress_row+0x274>
   14b0c:	str	r9, [sp]
   14b10:	b	14c64 <sav_compress_row+0x1b0>
   14b14:	ldr	r6, [r0, #1596]	; 0x63c
   14b18:	cmp	r6, #0
   14b1c:	beq	14c50 <sav_compress_row+0x19c>
   14b20:	ldr	r2, [sp]
   14b24:	mov	r4, r2
   14b28:	ldr	r3, [pc, #512]	; 14d30 <sav_compress_row+0x27c>
   14b2c:	add	r3, pc, r3
   14b30:	str	r3, [sp]
   14b34:	add	r6, r2, r6
   14b38:	b	14b74 <sav_compress_row+0xc0>
   14b3c:	mvn	r3, #2
   14b40:	strb	r3, [fp, r8]
   14b44:	add	r3, fp, r7
   14b48:	ldr	r1, [r5]
   14b4c:	ldr	r2, [r5, #4]
   14b50:	str	r1, [fp, r7]
   14b54:	str	r2, [r3, #4]
   14b58:	add	r7, r7, #8
   14b5c:	add	r8, r8, #1
   14b60:	tst	r8, #7
   14b64:	beq	14ba0 <sav_compress_row+0xec>
   14b68:	add	r4, r4, #8
   14b6c:	cmp	r4, r6
   14b70:	beq	14bbc <sav_compress_row+0x108>
   14b74:	add	r5, sl, r4
   14b78:	mov	r2, #8
   14b7c:	ldr	r1, [sp]
   14b80:	mov	r0, r5
   14b84:	bl	3f98 <memcmp@plt>
   14b88:	cmp	r0, #0
   14b8c:	bne	14b3c <sav_compress_row+0x88>
   14b90:	mvn	r3, #1
   14b94:	strb	r3, [fp, r8]
   14b98:	add	r8, r8, #1
   14b9c:	b	14b60 <sav_compress_row+0xac>
   14ba0:	add	r3, fp, r7
   14ba4:	mov	r2, #0
   14ba8:	str	r2, [fp, r7]
   14bac:	str	r2, [r3, #4]
   14bb0:	mov	r8, r7
   14bb4:	add	r7, r7, #8
   14bb8:	b	14b68 <sav_compress_row+0xb4>
   14bbc:	str	r4, [sp]
   14bc0:	b	14c50 <sav_compress_row+0x19c>
   14bc4:	ldr	r2, [r1]
   14bc8:	ldr	r3, [r1, #4]
   14bcc:	str	r2, [sp, #16]
   14bd0:	str	r3, [sp, #20]
   14bd4:	vldr	d7, [sp, #16]
   14bd8:	vcmpe.f64	d7, d8
   14bdc:	vmrs	APSR_nzcv, fpscr
   14be0:	ble	14c18 <sav_compress_row+0x164>
   14be4:	vcmpe.f64	d7, d9
   14be8:	vmrs	APSR_nzcv, fpscr
   14bec:	bpl	14c18 <sav_compress_row+0x164>
   14bf0:	vcvt.s32.f64	s13, d7
   14bf4:	vcvt.f64.s32	d5, s13
   14bf8:	vcmp.f64	d7, d5
   14bfc:	vmrs	APSR_nzcv, fpscr
   14c00:	bne	14c18 <sav_compress_row+0x164>
   14c04:	vmov	r3, s13
   14c08:	add	r3, r3, #100	; 0x64
   14c0c:	strb	r3, [fp, r8]
   14c10:	add	r8, r8, #1
   14c14:	b	14c3c <sav_compress_row+0x188>
   14c18:	mvn	r3, #2
   14c1c:	strb	r3, [fp, r8]
   14c20:	add	r3, fp, r7
   14c24:	ldr	r0, [r1]
   14c28:	ldr	r2, [r1, #4]
   14c2c:	str	r0, [fp, r7]
   14c30:	str	r2, [r3, #4]
   14c34:	add	r7, r7, #8
   14c38:	add	r8, r8, #1
   14c3c:	tst	r8, #7
   14c40:	beq	14cbc <sav_compress_row+0x208>
   14c44:	ldr	r3, [sp]
   14c48:	add	r3, r3, #8
   14c4c:	str	r3, [sp]
   14c50:	add	r9, r9, #1
   14c54:	ldr	r3, [sp, #4]
   14c58:	ldr	r3, [r3, #28]
   14c5c:	cmp	r3, r9
   14c60:	ble	14ce0 <sav_compress_row+0x22c>
   14c64:	mov	r1, r9
   14c68:	ldr	r0, [sp, #4]
   14c6c:	bl	437c <readstat_get_variable@plt>
   14c70:	ldr	r3, [r0]
   14c74:	cmp	r3, #0
   14c78:	beq	14b14 <sav_compress_row+0x60>
   14c7c:	ldr	r3, [sp]
   14c80:	add	r1, sl, r3
   14c84:	ldr	r2, [r1]
   14c88:	ldr	r3, [r1, #4]
   14c8c:	str	r2, [sp, #8]
   14c90:	str	r3, [sp, #12]
   14c94:	ldrd	r2, [sp, #8]
   14c98:	mvn	r4, #0
   14c9c:	mvn	r5, #1048576	; 0x100000
   14ca0:	cmp	r3, r5
   14ca4:	cmpeq	r2, r4
   14ca8:	bne	14bc4 <sav_compress_row+0x110>
   14cac:	mvn	r3, #0
   14cb0:	strb	r3, [fp, r8]
   14cb4:	add	r8, r8, #1
   14cb8:	b	14c3c <sav_compress_row+0x188>
   14cbc:	add	r2, fp, r7
   14cc0:	mov	r3, #0
   14cc4:	str	r3, [fp, r7]
   14cc8:	str	r3, [r2, #4]
   14ccc:	mov	r8, r7
   14cd0:	add	r7, r7, #8
   14cd4:	b	14c44 <sav_compress_row+0x190>
   14cd8:	mov	r8, #0
   14cdc:	mov	r7, #8
   14ce0:	ldr	r2, [sp, #4]
   14ce4:	ldr	r3, [r2, #84]	; 0x54
   14ce8:	add	r3, r3, #1
   14cec:	ldr	r2, [r2, #80]	; 0x50
   14cf0:	cmp	r3, r2
   14cf4:	mvneq	r3, #3
   14cf8:	strbeq	r3, [fp, r8]
   14cfc:	mov	r0, r7
   14d00:	add	sp, sp, #28
   14d04:	vpop	{d8-d9}
   14d08:	ldrd	r4, [sp]
   14d0c:	ldrd	r6, [sp, #8]
   14d10:	ldrd	r8, [sp, #16]
   14d14:	ldrd	sl, [sp, #24]
   14d18:	add	sp, sp, #32
   14d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   14d20:	.word	0x00000000
   14d24:	.word	0xc0590000
   14d28:	.word	0x00000000
   14d2c:	.word	0x40630000
   14d30:	.word	0x00012364

00014d34 <sav_decompress_row>:
   14d34:	strd	r4, [sp, #-16]!
   14d38:	str	r6, [sp, #8]
   14d3c:	str	lr, [sp, #12]
   14d40:	sub	sp, sp, #16
   14d44:	mov	r4, r0
   14d48:	ldr	r3, [r0, #44]	; 0x2c
   14d4c:	cmp	r3, #0
   14d50:	bne	14d80 <sav_decompress_row+0x4c>
   14d54:	ldrd	r0, [r0, #16]
   14d58:	strd	r0, [sp]
   14d5c:	ldr	r5, [r4, #40]	; 0x28
   14d60:	rsb	r5, r5, #8
   14d64:	cmp	r5, #8
   14d68:	beq	14d8c <sav_decompress_row+0x58>
   14d6c:	cmp	r5, #7
   14d70:	bgt	14d64 <sav_decompress_row+0x30>
   14d74:	add	r6, r5, #31
   14d78:	add	r6, r4, r6
   14d7c:	b	14eb0 <sav_decompress_row+0x17c>
   14d80:	ldrd	r0, [r0, #16]
   14d84:	bl	3d70 <byteswap8@plt>
   14d88:	b	14d58 <sav_decompress_row+0x24>
   14d8c:	ldr	r2, [r4, #4]
   14d90:	cmp	r2, #7
   14d94:	bls	14dc8 <sav_decompress_row+0x94>
   14d98:	mov	r1, r4
   14d9c:	ldr	r3, [r1], #32
   14da0:	ldr	ip, [r3]
   14da4:	ldr	r0, [r3, #4]
   14da8:	str	ip, [r4, #32]
   14dac:	str	r0, [r1, #4]
   14db0:	add	r3, r3, #8
   14db4:	str	r3, [r4]
   14db8:	sub	r2, r2, #8
   14dbc:	str	r2, [r4, #4]
   14dc0:	mov	r5, #0
   14dc4:	b	14d74 <sav_decompress_row+0x40>
   14dc8:	mov	r3, #0
   14dcc:	str	r3, [r4, #48]	; 0x30
   14dd0:	b	14dec <sav_decompress_row+0xb8>
   14dd4:	cmp	r3, #0
   14dd8:	beq	14e98 <sav_decompress_row+0x164>
   14ddc:	cmp	r3, #252	; 0xfc
   14de0:	bne	14f00 <sav_decompress_row+0x1cc>
   14de4:	mov	r3, #3
   14de8:	str	r3, [r4, #48]	; 0x30
   14dec:	rsb	r5, r5, #8
   14df0:	str	r5, [r4, #40]	; 0x28
   14df4:	add	sp, sp, #16
   14df8:	ldrd	r4, [sp]
   14dfc:	ldr	r6, [sp, #8]
   14e00:	add	sp, sp, #12
   14e04:	pop	{pc}		; (ldr pc, [sp], #4)
   14e08:	ldr	r3, [r4, #4]
   14e0c:	cmp	r3, #7
   14e10:	bls	14e60 <sav_decompress_row+0x12c>
   14e14:	ldr	r3, [r4, #8]
   14e18:	ldr	r2, [r4]
   14e1c:	ldr	r1, [r2]
   14e20:	ldr	r2, [r2, #4]
   14e24:	str	r1, [r3]
   14e28:	str	r2, [r3, #4]
   14e2c:	ldr	r3, [r4, #8]
   14e30:	add	r3, r3, #8
   14e34:	str	r3, [r4, #8]
   14e38:	ldr	r3, [r4, #12]
   14e3c:	sub	r3, r3, #8
   14e40:	str	r3, [r4, #12]
   14e44:	ldr	r3, [r4]
   14e48:	add	r3, r3, #8
   14e4c:	str	r3, [r4]
   14e50:	ldr	r3, [r4, #4]
   14e54:	sub	r3, r3, #8
   14e58:	str	r3, [r4, #4]
   14e5c:	b	14e98 <sav_decompress_row+0x164>
   14e60:	mov	r3, #0
   14e64:	str	r3, [r4, #48]	; 0x30
   14e68:	b	14dec <sav_decompress_row+0xb8>
   14e6c:	ldr	r2, [r4, #8]
   14e70:	movw	r3, #8224	; 0x2020
   14e74:	bfi	r3, r3, #16, #16
   14e78:	str	r3, [r2]
   14e7c:	str	r3, [r2, #4]
   14e80:	ldr	r3, [r4, #8]
   14e84:	add	r3, r3, #8
   14e88:	str	r3, [r4, #8]
   14e8c:	ldr	r3, [r4, #12]
   14e90:	sub	r3, r3, #8
   14e94:	str	r3, [r4, #12]
   14e98:	add	r5, r5, #1
   14e9c:	ldr	r3, [r4, #12]
   14ea0:	cmp	r3, #7
   14ea4:	bls	14f5c <sav_decompress_row+0x228>
   14ea8:	cmp	r5, #7
   14eac:	bgt	14d64 <sav_decompress_row+0x30>
   14eb0:	ldrb	r3, [r6, #1]!
   14eb4:	cmp	r3, #253	; 0xfd
   14eb8:	beq	14e08 <sav_decompress_row+0xd4>
   14ebc:	bls	14dd4 <sav_decompress_row+0xa0>
   14ec0:	cmp	r3, #254	; 0xfe
   14ec4:	beq	14e6c <sav_decompress_row+0x138>
   14ec8:	cmp	r3, #255	; 0xff
   14ecc:	bne	14f00 <sav_decompress_row+0x1cc>
   14ed0:	ldr	r3, [r4, #8]
   14ed4:	ldr	r2, [sp, #4]
   14ed8:	ldr	r1, [sp]
   14edc:	str	r1, [r3]
   14ee0:	str	r2, [r3, #4]
   14ee4:	ldr	r3, [r4, #8]
   14ee8:	add	r3, r3, #8
   14eec:	str	r3, [r4, #8]
   14ef0:	ldr	r3, [r4, #12]
   14ef4:	sub	r3, r3, #8
   14ef8:	str	r3, [r4, #12]
   14efc:	b	14e98 <sav_decompress_row+0x164>
   14f00:	vmov	s15, r3
   14f04:	vcvt.f64.s32	d0, s15
   14f08:	vldr	d7, [r4, #24]
   14f0c:	vsub.f64	d0, d0, d7
   14f10:	vstr	d0, [sp, #8]
   14f14:	ldr	r3, [r4, #44]	; 0x2c
   14f18:	cmp	r3, #0
   14f1c:	bne	14f54 <sav_decompress_row+0x220>
   14f20:	vstr	d0, [sp, #8]
   14f24:	ldr	r3, [r4, #8]
   14f28:	ldr	r2, [sp, #12]
   14f2c:	ldr	r1, [sp, #8]
   14f30:	str	r1, [r3]
   14f34:	str	r2, [r3, #4]
   14f38:	ldr	r3, [r4, #8]
   14f3c:	add	r3, r3, #8
   14f40:	str	r3, [r4, #8]
   14f44:	ldr	r3, [r4, #12]
   14f48:	sub	r3, r3, #8
   14f4c:	str	r3, [r4, #12]
   14f50:	b	14e98 <sav_decompress_row+0x164>
   14f54:	bl	4508 <byteswap_double@plt>
   14f58:	b	14f20 <sav_decompress_row+0x1ec>
   14f5c:	mov	r3, #2
   14f60:	str	r3, [r4, #48]	; 0x30
   14f64:	b	14dec <sav_decompress_row+0xb8>

00014f68 <count_vars>:
   14f68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14f6c:	strd	r6, [sp, #8]
   14f70:	str	r8, [sp, #16]
   14f74:	str	lr, [sp, #20]
   14f78:	ldr	r7, [r0, #340]	; 0x154
   14f7c:	cmp	r7, #0
   14f80:	ble	14fcc <count_vars+0x64>
   14f84:	ldr	r4, [r0, #44]	; 0x2c
   14f88:	add	r7, r4, r7, lsl #2
   14f8c:	mov	r6, #0
   14f90:	mov	r1, r6
   14f94:	b	14fa8 <count_vars+0x40>
   14f98:	add	r6, r6, #1
   14f9c:	mov	r1, r5
   14fa0:	cmp	r4, r7
   14fa4:	beq	14fd0 <count_vars+0x68>
   14fa8:	ldr	r5, [r4], #4
   14fac:	cmp	r1, #0
   14fb0:	beq	14f98 <count_vars+0x30>
   14fb4:	add	r1, r1, #187	; 0xbb
   14fb8:	add	r0, r5, #187	; 0xbb
   14fbc:	bl	3df4 <strcmp@plt>
   14fc0:	cmp	r0, #0
   14fc4:	beq	14f9c <count_vars+0x34>
   14fc8:	b	14f98 <count_vars+0x30>
   14fcc:	mov	r6, #0
   14fd0:	mov	r0, r6
   14fd4:	ldrd	r4, [sp]
   14fd8:	ldrd	r6, [sp, #8]
   14fdc:	ldr	r8, [sp, #16]
   14fe0:	add	sp, sp, #20
   14fe4:	pop	{pc}		; (ldr pc, [sp], #4)

00014fe8 <compare_varlookups>:
   14fe8:	str	r4, [sp, #-8]!
   14fec:	str	lr, [sp, #4]
   14ff0:	bl	3df4 <strcmp@plt>
   14ff4:	ldr	r4, [sp]
   14ff8:	add	sp, sp, #4
   14ffc:	pop	{pc}		; (ldr pc, [sp], #4)

00015000 <build_lookup_table>:
   15000:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15004:	strd	r6, [sp, #8]
   15008:	strd	r8, [sp, #16]
   1500c:	str	sl, [sp, #24]
   15010:	str	lr, [sp, #28]
   15014:	mov	r9, r0
   15018:	mov	r7, r1
   1501c:	add	r0, r0, r0, lsl #2
   15020:	lsl	r0, r0, #3
   15024:	bl	422c <readstat_malloc@plt>
   15028:	mov	r8, r0
   1502c:	ldr	r3, [r7, #340]	; 0x154
   15030:	cmp	r3, #0
   15034:	ble	150b4 <build_lookup_table+0xb4>
   15038:	mov	r1, #0
   1503c:	mov	r4, r1
   15040:	mov	r6, r1
   15044:	b	1508c <build_lookup_table+0x8c>
   15048:	add	r1, r6, r6, lsl #2
   1504c:	add	r2, r8, r1, lsl #3
   15050:	mov	r3, r5
   15054:	ldr	ip, [r3, #187]!	; 0xbb
   15058:	ldr	r0, [r3, #4]
   1505c:	str	ip, [r8, r1, lsl #3]
   15060:	str	r0, [r2, #4]
   15064:	ldrb	r3, [r3, #8]
   15068:	strb	r3, [r2, #8]
   1506c:	ldr	r3, [r5, #8]
   15070:	str	r3, [r2, #36]	; 0x24
   15074:	add	r6, r6, #1
   15078:	add	r4, r4, #1
   1507c:	mov	r1, r5
   15080:	ldr	r3, [r7, #340]	; 0x154
   15084:	cmp	r3, r4
   15088:	ble	150b4 <build_lookup_table+0xb4>
   1508c:	ldr	r3, [r7, #44]	; 0x2c
   15090:	ldr	r5, [r3, r4, lsl #2]
   15094:	cmp	r1, #0
   15098:	beq	15048 <build_lookup_table+0x48>
   1509c:	add	r1, r1, #187	; 0xbb
   150a0:	add	r0, r5, #187	; 0xbb
   150a4:	bl	3df4 <strcmp@plt>
   150a8:	cmp	r0, #0
   150ac:	beq	15078 <build_lookup_table+0x78>
   150b0:	b	15048 <build_lookup_table+0x48>
   150b4:	ldr	r3, [pc, #44]	; 150e8 <build_lookup_table+0xe8>
   150b8:	add	r3, pc, r3
   150bc:	mov	r2, #40	; 0x28
   150c0:	mov	r1, r9
   150c4:	mov	r0, r8
   150c8:	bl	443c <qsort@plt>
   150cc:	mov	r0, r8
   150d0:	ldrd	r4, [sp]
   150d4:	ldrd	r6, [sp, #8]
   150d8:	ldrd	r8, [sp, #16]
   150dc:	ldr	sl, [sp, #24]
   150e0:	add	sp, sp, #28
   150e4:	pop	{pc}		; (ldr pc, [sp], #4)
   150e8:	.word	0xffffff28

000150ec <sav_parse_long_variable_names_record>:
   150ec:	strd	r4, [sp, #-36]!	; 0xffffffdc
   150f0:	strd	r6, [sp, #8]
   150f4:	strd	r8, [sp, #16]
   150f8:	strd	sl, [sp, #24]
   150fc:	str	lr, [sp, #32]
   15100:	sub	sp, sp, #8320	; 0x2080
   15104:	sub	sp, sp, #36	; 0x24
   15108:	mov	r4, r0
   1510c:	str	r0, [sp, #72]	; 0x48
   15110:	mov	r6, r1
   15114:	str	r1, [sp, #76]	; 0x4c
   15118:	mov	r5, r2
   1511c:	str	r2, [sp, #52]	; 0x34
   15120:	mov	r0, r2
   15124:	bl	14f68 <count_vars>
   15128:	str	r0, [sp, #56]	; 0x38
   1512c:	add	r6, r4, r6
   15130:	str	r6, [sp, #36]	; 0x24
   15134:	mov	r1, r5
   15138:	bl	15000 <build_lookup_table>
   1513c:	mov	sl, r0
   15140:	cmp	r4, r6
   15144:	beq	15694 <sav_parse_long_variable_names_record+0x5a8>
   15148:	str	r4, [sp, #24]
   1514c:	mov	fp, #1
   15150:	mov	r3, #0
   15154:	str	r3, [sp, #32]
   15158:	str	r3, [sp, #28]
   1515c:	ldr	r3, [pc, #1412]	; 156e8 <sav_parse_long_variable_names_record+0x5fc>
   15160:	add	r3, pc, r3
   15164:	str	r3, [sp, #40]	; 0x28
   15168:	add	r3, r3, #496	; 0x1f0
   1516c:	str	r3, [sp, #44]	; 0x2c
   15170:	ldr	r3, [pc, #1396]	; 156ec <sav_parse_long_variable_names_record+0x600>
   15174:	add	r3, pc, r3
   15178:	str	r3, [sp, #48]	; 0x30
   1517c:	ldr	r3, [pc, #1388]	; 156f0 <sav_parse_long_variable_names_record+0x604>
   15180:	add	r3, pc, r3
   15184:	add	r3, r3, #1488	; 0x5d0
   15188:	add	r3, r3, #12
   1518c:	str	r3, [sp, #68]	; 0x44
   15190:	b	15288 <sav_parse_long_variable_names_record+0x19c>
   15194:	sub	r1, r5, #1
   15198:	adds	r1, lr, r1
   1519c:	bcs	151ec <sav_parse_long_variable_names_record+0x100>
   151a0:	ldr	r3, [sp, #24]
   151a4:	ldrb	ip, [r3]
   151a8:	mov	r3, lr
   151ac:	b	151b8 <sav_parse_long_variable_names_record+0xcc>
   151b0:	cmp	r1, r3
   151b4:	bcc	151ec <sav_parse_long_variable_names_record+0x100>
   151b8:	sub	r2, r1, r3
   151bc:	add	r0, r3, r2, asr #1
   151c0:	ldrb	r2, [r3, r2, asr #1]
   151c4:	cmp	ip, r2
   151c8:	subcc	r1, r0, #1
   151cc:	bcc	151b0 <sav_parse_long_variable_names_record+0xc4>
   151d0:	cmp	ip, r2
   151d4:	bls	151e0 <sav_parse_long_variable_names_record+0xf4>
   151d8:	add	r3, r0, #1
   151dc:	b	151b0 <sav_parse_long_variable_names_record+0xc4>
   151e0:	sub	r0, r0, lr
   151e4:	add	r4, r4, r0
   151e8:	b	15244 <sav_parse_long_variable_names_record+0x158>
   151ec:	add	lr, lr, r5
   151f0:	add	r4, r4, r5
   151f4:	b	152b4 <sav_parse_long_variable_names_record+0x1c8>
   151f8:	cmp	r2, r1
   151fc:	bhi	15240 <sav_parse_long_variable_names_record+0x154>
   15200:	sub	r3, r1, r2
   15204:	asr	r3, r3, #1
   15208:	bic	r3, r3, #1
   1520c:	add	r0, r2, r3
   15210:	ldrb	r3, [r2, r3]
   15214:	cmp	r3, ip
   15218:	subhi	r1, r0, #2
   1521c:	bhi	151f8 <sav_parse_long_variable_names_record+0x10c>
   15220:	ldrb	r3, [r0, #1]
   15224:	cmp	r3, ip
   15228:	bcs	15234 <sav_parse_long_variable_names_record+0x148>
   1522c:	add	r2, r0, #2
   15230:	b	151f8 <sav_parse_long_variable_names_record+0x10c>
   15234:	sub	r0, r0, lr
   15238:	add	r4, r4, r0, asr #1
   1523c:	b	15244 <sav_parse_long_variable_names_record+0x158>
   15240:	add	r4, r4, r5
   15244:	ldr	r3, [pc, #1192]	; 156f4 <sav_parse_long_variable_names_record+0x608>
   15248:	add	r3, pc, r3
   1524c:	add	r4, r3, r4
   15250:	ldrb	r2, [r4, #952]	; 0x3b8
   15254:	add	r3, r3, r2
   15258:	ldrb	fp, [r3, #1348]	; 0x544
   1525c:	ldrb	r3, [r3, #1424]	; 0x590
   15260:	cmp	r3, #0
   15264:	bne	152e8 <sav_parse_long_variable_names_record+0x1fc>
   15268:	cmp	fp, #0
   1526c:	beq	15628 <sav_parse_long_variable_names_record+0x53c>
   15270:	ldr	r3, [sp, #24]
   15274:	add	r3, r3, #1
   15278:	str	r3, [sp, #24]
   1527c:	ldr	r2, [sp, #36]	; 0x24
   15280:	cmp	r2, r3
   15284:	beq	156a4 <sav_parse_long_variable_names_record+0x5b8>
   15288:	lsl	r3, fp, #1
   1528c:	ldr	r2, [sp, #44]	; 0x2c
   15290:	ldrsh	lr, [r2, r3]
   15294:	ldr	r1, [sp, #40]	; 0x28
   15298:	add	lr, r1, lr
   1529c:	add	r2, r1, #648	; 0x288
   152a0:	ldrsh	r4, [r2, r3]
   152a4:	add	r3, r1, fp
   152a8:	ldrb	r5, [r3, #800]	; 0x320
   152ac:	cmp	r5, #0
   152b0:	bne	15194 <sav_parse_long_variable_names_record+0xa8>
   152b4:	ldr	r3, [sp, #48]	; 0x30
   152b8:	add	fp, r3, fp
   152bc:	ldrb	r5, [fp, #876]	; 0x36c
   152c0:	cmp	r5, #0
   152c4:	ble	15244 <sav_parse_long_variable_names_record+0x158>
   152c8:	add	r1, lr, r5, lsl #1
   152cc:	sub	r1, r1, #2
   152d0:	cmp	lr, r1
   152d4:	bhi	15240 <sav_parse_long_variable_names_record+0x154>
   152d8:	ldr	r3, [sp, #24]
   152dc:	ldrb	ip, [r3]
   152e0:	mov	r2, lr
   152e4:	b	15200 <sav_parse_long_variable_names_record+0x114>
   152e8:	ldr	r2, [sp, #68]	; 0x44
   152ec:	add	r9, r2, r3
   152f0:	add	r7, r9, #1
   152f4:	ldrb	r3, [r2, r3]
   152f8:	add	r3, r3, #1
   152fc:	add	r9, r9, r3
   15300:	ldr	r3, [pc, #1008]	; 156f8 <sav_parse_long_variable_names_record+0x60c>
   15304:	add	r3, pc, r3
   15308:	str	r3, [sp, #60]	; 0x3c
   1530c:	add	r3, sp, #80	; 0x50
   15310:	str	r3, [sp, #64]	; 0x40
   15314:	b	15320 <sav_parse_long_variable_names_record+0x234>
   15318:	ldr	r3, [sp, #24]
   1531c:	str	r3, [sp, #28]
   15320:	cmp	r9, r7
   15324:	beq	15268 <sav_parse_long_variable_names_record+0x17c>
   15328:	ldrb	r3, [r7], #1
   1532c:	cmp	r3, #6
   15330:	addls	pc, pc, r3, lsl #2
   15334:	b	15320 <sav_parse_long_variable_names_record+0x234>
   15338:	b	15354 <sav_parse_long_variable_names_record+0x268>
   1533c:	b	1542c <sav_parse_long_variable_names_record+0x340>
   15340:	b	1545c <sav_parse_long_variable_names_record+0x370>
   15344:	b	15318 <sav_parse_long_variable_names_record+0x22c>
   15348:	b	1548c <sav_parse_long_variable_names_record+0x3a0>
   1534c:	b	15318 <sav_parse_long_variable_names_record+0x22c>
   15350:	b	154a0 <sav_parse_long_variable_names_record+0x3b4>
   15354:	ldr	r8, [sp, #56]	; 0x38
   15358:	mov	r6, #0
   1535c:	add	r3, sp, #8320	; 0x2080
   15360:	add	r3, r3, #20
   15364:	str	r3, [sp, #20]
   15368:	cmp	r8, r6
   1536c:	bls	153ac <sav_parse_long_variable_names_record+0x2c0>
   15370:	add	r4, r6, r8
   15374:	lsr	r4, r4, #1
   15378:	add	r5, r4, r4, lsl #2
   1537c:	add	r5, sl, r5, lsl #3
   15380:	mov	r1, r5
   15384:	ldr	r0, [sp, #20]
   15388:	bl	3df4 <strcmp@plt>
   1538c:	cmp	r0, #0
   15390:	blt	153a0 <sav_parse_long_variable_names_record+0x2b4>
   15394:	ble	153ec <sav_parse_long_variable_names_record+0x300>
   15398:	add	r6, r4, #1
   1539c:	b	15368 <sav_parse_long_variable_names_record+0x27c>
   153a0:	mov	r8, r4
   153a4:	cmp	r6, r4
   153a8:	bcc	15370 <sav_parse_long_variable_names_record+0x284>
   153ac:	ldr	r4, [sp, #52]	; 0x34
   153b0:	ldr	r3, [r4, #24]
   153b4:	cmp	r3, #0
   153b8:	beq	15320 <sav_parse_long_variable_names_record+0x234>
   153bc:	add	r3, sp, #8320	; 0x2080
   153c0:	add	r3, r3, #20
   153c4:	ldr	r2, [sp, #60]	; 0x3c
   153c8:	mov	r1, #8192	; 0x2000
   153cc:	ldr	r5, [sp, #64]	; 0x40
   153d0:	mov	r0, r5
   153d4:	bl	4280 <snprintf@plt>
   153d8:	ldr	r3, [r4, #24]
   153dc:	ldr	r1, [r4, #40]	; 0x28
   153e0:	mov	r0, r5
   153e4:	blx	r3
   153e8:	b	15320 <sav_parse_long_variable_names_record+0x234>
   153ec:	cmp	r5, #0
   153f0:	beq	153ac <sav_parse_long_variable_names_record+0x2c0>
   153f4:	ldr	r2, [r5, #36]	; 0x24
   153f8:	ldr	r3, [sp, #52]	; 0x34
   153fc:	ldr	r3, [r3, #44]	; 0x2c
   15400:	ldr	r4, [r3, r2, lsl #2]
   15404:	ldr	r5, [sp, #32]
   15408:	mov	r2, r5
   1540c:	add	r1, sp, #8256	; 0x2040
   15410:	add	r1, r1, #16
   15414:	add	r0, r4, #196	; 0xc4
   15418:	bl	3f14 <memcpy@plt>
   1541c:	add	r4, r4, r5
   15420:	mov	r3, #0
   15424:	strb	r3, [r4, #196]	; 0xc4
   15428:	b	15320 <sav_parse_long_variable_names_record+0x234>
   1542c:	ldr	r4, [sp, #32]
   15430:	mov	r2, r4
   15434:	ldr	r1, [sp, #28]
   15438:	add	r0, sp, #8320	; 0x2080
   1543c:	add	r0, r0, #20
   15440:	bl	3f14 <memcpy@plt>
   15444:	mov	r2, #0
   15448:	add	r1, sp, #8320	; 0x2080
   1544c:	add	r1, r1, #32
   15450:	add	r3, r1, r4
   15454:	strb	r2, [r3, #-12]
   15458:	b	15320 <sav_parse_long_variable_names_record+0x234>
   1545c:	ldr	r4, [sp, #32]
   15460:	mov	r2, r4
   15464:	ldr	r1, [sp, #28]
   15468:	add	r0, sp, #8256	; 0x2040
   1546c:	add	r0, r0, #16
   15470:	bl	3f14 <memcpy@plt>
   15474:	mov	r2, #0
   15478:	add	r1, sp, #8320	; 0x2080
   1547c:	add	r1, r1, #32
   15480:	add	r3, r1, r4
   15484:	strb	r2, [r3, #-80]	; 0xffffffb0
   15488:	b	15320 <sav_parse_long_variable_names_record+0x234>
   1548c:	ldr	r3, [sp, #24]
   15490:	ldr	r2, [sp, #28]
   15494:	sub	r3, r3, r2
   15498:	str	r3, [sp, #32]
   1549c:	b	15320 <sav_parse_long_variable_names_record+0x234>
   154a0:	ldr	r3, [sp, #24]
   154a4:	ldr	r2, [sp, #28]
   154a8:	sub	r3, r3, r2
   154ac:	str	r3, [sp, #32]
   154b0:	b	15320 <sav_parse_long_variable_names_record+0x234>
   154b4:	mov	r7, r4
   154b8:	cmp	r4, r6
   154bc:	bhi	1559c <sav_parse_long_variable_names_record+0x4b0>
   154c0:	ldr	r5, [sp, #52]	; 0x34
   154c4:	ldr	r3, [r5, #24]
   154c8:	cmp	r3, #0
   154cc:	beq	15568 <sav_parse_long_variable_names_record+0x47c>
   154d0:	ldr	r3, [sp, #20]
   154d4:	ldr	r2, [sp, #24]
   154d8:	mov	r1, #8192	; 0x2000
   154dc:	add	r4, sp, #80	; 0x50
   154e0:	mov	r0, r4
   154e4:	bl	4280 <snprintf@plt>
   154e8:	ldr	r3, [r5, #24]
   154ec:	ldr	r1, [r5, #40]	; 0x28
   154f0:	mov	r0, r4
   154f4:	blx	r3
   154f8:	b	15568 <sav_parse_long_variable_names_record+0x47c>
   154fc:	cmp	r5, #0
   15500:	beq	154c0 <sav_parse_long_variable_names_record+0x3d4>
   15504:	ldr	r2, [r5, #36]	; 0x24
   15508:	ldr	r3, [sp, #52]	; 0x34
   1550c:	ldr	r3, [r3, #44]	; 0x2c
   15510:	ldr	r4, [r3, r2, lsl #2]
   15514:	ldr	r5, [sp, #32]
   15518:	mov	r2, r5
   1551c:	add	r1, sp, #8256	; 0x2040
   15520:	add	r1, r1, #16
   15524:	add	r0, r4, #196	; 0xc4
   15528:	bl	3f14 <memcpy@plt>
   1552c:	add	r4, r4, r5
   15530:	mov	r3, #0
   15534:	strb	r3, [r4, #196]	; 0xc4
   15538:	b	15568 <sav_parse_long_variable_names_record+0x47c>
   1553c:	ldr	r4, [sp, #32]
   15540:	mov	r2, r4
   15544:	ldr	r1, [sp, #28]
   15548:	add	r0, sp, #8256	; 0x2040
   1554c:	add	r0, r0, #16
   15550:	bl	3f14 <memcpy@plt>
   15554:	mov	r2, #0
   15558:	add	r1, sp, #8320	; 0x2080
   1555c:	add	r1, r1, #32
   15560:	add	r3, r1, r4
   15564:	strb	r2, [r3, #-80]	; 0xffffffb0
   15568:	cmp	r8, r9
   1556c:	beq	155e0 <sav_parse_long_variable_names_record+0x4f4>
   15570:	ldrb	r3, [r8], #1
   15574:	cmp	r3, #2
   15578:	beq	1553c <sav_parse_long_variable_names_record+0x450>
   1557c:	cmp	r3, #6
   15580:	beq	155cc <sav_parse_long_variable_names_record+0x4e0>
   15584:	cmp	r3, #0
   15588:	bne	15568 <sav_parse_long_variable_names_record+0x47c>
   1558c:	ldr	r7, [sp, #56]	; 0x38
   15590:	mov	r6, #0
   15594:	cmp	r7, r6
   15598:	bls	154c0 <sav_parse_long_variable_names_record+0x3d4>
   1559c:	add	r4, r6, r7
   155a0:	lsr	r4, r4, #1
   155a4:	add	r5, r4, r4, lsl #2
   155a8:	add	r5, sl, r5, lsl #3
   155ac:	mov	r1, r5
   155b0:	ldr	r0, [sp, #20]
   155b4:	bl	3df4 <strcmp@plt>
   155b8:	cmp	r0, #0
   155bc:	blt	154b4 <sav_parse_long_variable_names_record+0x3c8>
   155c0:	ble	154fc <sav_parse_long_variable_names_record+0x410>
   155c4:	add	r6, r4, #1
   155c8:	b	15594 <sav_parse_long_variable_names_record+0x4a8>
   155cc:	ldr	r3, [sp, #36]	; 0x24
   155d0:	ldr	r2, [sp, #28]
   155d4:	sub	r3, r3, r2
   155d8:	str	r3, [sp, #32]
   155dc:	b	15568 <sav_parse_long_variable_names_record+0x47c>
   155e0:	cmp	fp, #10
   155e4:	movgt	r4, #0
   155e8:	ble	15620 <sav_parse_long_variable_names_record+0x534>
   155ec:	cmp	sl, #0
   155f0:	beq	155fc <sav_parse_long_variable_names_record+0x510>
   155f4:	mov	r0, sl
   155f8:	bl	3eb4 <free@plt>
   155fc:	mov	r0, r4
   15600:	add	sp, sp, #8320	; 0x2080
   15604:	add	sp, sp, #36	; 0x24
   15608:	ldrd	r4, [sp]
   1560c:	ldrd	r6, [sp, #8]
   15610:	ldrd	r8, [sp, #16]
   15614:	ldrd	sl, [sp, #24]
   15618:	add	sp, sp, #32
   1561c:	pop	{pc}		; (ldr pc, [sp], #4)
   15620:	ldr	r3, [sp, #36]	; 0x24
   15624:	str	r3, [sp, #24]
   15628:	ldr	r5, [sp, #52]	; 0x34
   1562c:	ldr	r3, [r5, #24]
   15630:	cmp	r3, #0
   15634:	moveq	r4, #5
   15638:	beq	155ec <sav_parse_long_variable_names_record+0x500>
   1563c:	ldr	r2, [sp, #24]
   15640:	ldrb	r3, [r2]
   15644:	str	r3, [sp, #12]
   15648:	ldr	r1, [sp, #76]	; 0x4c
   1564c:	str	r1, [sp, #8]
   15650:	ldr	r0, [sp, #72]	; 0x48
   15654:	sub	r3, r2, r0
   15658:	str	r3, [sp, #4]
   1565c:	str	r0, [sp]
   15660:	mov	r3, r1
   15664:	ldr	r2, [pc, #144]	; 156fc <sav_parse_long_variable_names_record+0x610>
   15668:	add	r2, pc, r2
   1566c:	mov	r1, #8192	; 0x2000
   15670:	add	r4, sp, #80	; 0x50
   15674:	mov	r0, r4
   15678:	bl	4280 <snprintf@plt>
   1567c:	ldr	r3, [r5, #24]
   15680:	ldr	r1, [r5, #40]	; 0x28
   15684:	mov	r0, r4
   15688:	blx	r3
   1568c:	mov	r4, #5
   15690:	b	155ec <sav_parse_long_variable_names_record+0x500>
   15694:	mov	fp, #1
   15698:	mov	r3, #0
   1569c:	str	r3, [sp, #32]
   156a0:	str	r3, [sp, #28]
   156a4:	ldr	r3, [pc, #84]	; 15700 <sav_parse_long_variable_names_record+0x614>
   156a8:	add	r3, pc, r3
   156ac:	add	r2, r3, fp
   156b0:	ldrb	r2, [r2, #1512]	; 0x5e8
   156b4:	add	r8, r3, r2
   156b8:	add	r8, r8, #1488	; 0x5d0
   156bc:	add	r8, r8, #13
   156c0:	add	r3, r3, r2
   156c4:	ldrb	r9, [r3, #1500]	; 0x5dc
   156c8:	add	r9, r8, r9
   156cc:	add	r3, sp, #8320	; 0x2080
   156d0:	add	r3, r3, #20
   156d4:	str	r3, [sp, #20]
   156d8:	ldr	r3, [pc, #36]	; 15704 <sav_parse_long_variable_names_record+0x618>
   156dc:	add	r3, pc, r3
   156e0:	str	r3, [sp, #24]
   156e4:	b	15568 <sav_parse_long_variable_names_record+0x47c>
   156e8:	.word	0x00011d3c
   156ec:	.word	0x00011d28
   156f0:	.word	0x00011d1c
   156f4:	.word	0x00011c54
   156f8:	.word	0x00012308
   156fc:	.word	0x00011fb8
   15700:	.word	0x000117f4
   15704:	.word	0x00011f30

00015708 <sav_parse_very_long_string_record>:
   15708:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1570c:	strd	r6, [sp, #8]
   15710:	strd	r8, [sp, #16]
   15714:	strd	sl, [sp, #24]
   15718:	str	lr, [sp, #32]
   1571c:	sub	sp, sp, #124	; 0x7c
   15720:	mov	r4, r0
   15724:	str	r0, [sp, #72]	; 0x48
   15728:	mov	r5, r1
   1572c:	str	r1, [sp, #76]	; 0x4c
   15730:	mov	r6, r2
   15734:	str	r2, [sp, #52]	; 0x34
   15738:	mov	r0, r2
   1573c:	bl	14f68 <count_vars>
   15740:	mov	r7, r0
   15744:	str	r0, [sp, #48]	; 0x30
   15748:	add	r2, r5, #1024	; 0x400
   1574c:	str	r2, [sp, #68]	; 0x44
   15750:	add	r5, r4, r5
   15754:	str	r5, [sp, #36]	; 0x24
   15758:	mov	r0, r2
   1575c:	bl	422c <readstat_malloc@plt>
   15760:	str	r0, [sp, #64]	; 0x40
   15764:	mov	r1, r6
   15768:	mov	r0, r7
   1576c:	bl	15000 <build_lookup_table>
   15770:	mov	r9, r0
   15774:	cmp	r4, r5
   15778:	beq	15ad8 <sav_parse_very_long_string_record+0x3d0>
   1577c:	mov	fp, r4
   15780:	mov	r3, #1
   15784:	str	r3, [sp, #20]
   15788:	mov	r3, #0
   1578c:	str	r3, [sp, #32]
   15790:	str	r3, [sp, #24]
   15794:	str	r3, [sp, #28]
   15798:	ldr	r3, [pc, #928]	; 15b40 <sav_parse_very_long_string_record+0x438>
   1579c:	add	r3, pc, r3
   157a0:	str	r3, [sp, #40]	; 0x28
   157a4:	add	r3, r3, #1584	; 0x630
   157a8:	add	r3, r3, #4
   157ac:	str	r3, [sp, #44]	; 0x2c
   157b0:	ldr	r3, [pc, #908]	; 15b44 <sav_parse_very_long_string_record+0x43c>
   157b4:	add	r3, pc, r3
   157b8:	add	r3, r3, #1888	; 0x760
   157bc:	str	r3, [sp, #60]	; 0x3c
   157c0:	movw	r3, #52429	; 0xcccd
   157c4:	movt	r3, #52428	; 0xcccc
   157c8:	str	r3, [sp, #56]	; 0x38
   157cc:	b	158c0 <sav_parse_very_long_string_record+0x1b8>
   157d0:	sub	r1, r5, #1
   157d4:	adds	r1, lr, r1
   157d8:	bcs	15824 <sav_parse_very_long_string_record+0x11c>
   157dc:	ldrb	ip, [fp]
   157e0:	mov	r3, lr
   157e4:	b	157f0 <sav_parse_very_long_string_record+0xe8>
   157e8:	cmp	r3, r1
   157ec:	bhi	15824 <sav_parse_very_long_string_record+0x11c>
   157f0:	sub	r2, r1, r3
   157f4:	add	r0, r3, r2, asr #1
   157f8:	ldrb	r2, [r3, r2, asr #1]
   157fc:	cmp	ip, r2
   15800:	subcc	r1, r0, #1
   15804:	bcc	157e8 <sav_parse_very_long_string_record+0xe0>
   15808:	cmp	ip, r2
   1580c:	bls	15818 <sav_parse_very_long_string_record+0x110>
   15810:	add	r3, r0, #1
   15814:	b	157e8 <sav_parse_very_long_string_record+0xe0>
   15818:	sub	r0, r0, lr
   1581c:	add	r4, r4, r0
   15820:	b	1587c <sav_parse_very_long_string_record+0x174>
   15824:	add	lr, lr, r5
   15828:	add	r4, r4, r5
   1582c:	b	158e8 <sav_parse_very_long_string_record+0x1e0>
   15830:	cmp	r2, r1
   15834:	bhi	15878 <sav_parse_very_long_string_record+0x170>
   15838:	sub	r3, r1, r2
   1583c:	asr	r3, r3, #1
   15840:	bic	r3, r3, #1
   15844:	add	r0, r2, r3
   15848:	ldrb	r3, [r2, r3]
   1584c:	cmp	r3, ip
   15850:	subhi	r1, r0, #2
   15854:	bhi	15830 <sav_parse_very_long_string_record+0x128>
   15858:	ldrb	r3, [r0, #1]
   1585c:	cmp	r3, ip
   15860:	bcs	1586c <sav_parse_very_long_string_record+0x164>
   15864:	add	r2, r0, #2
   15868:	b	15830 <sav_parse_very_long_string_record+0x128>
   1586c:	sub	r0, r0, lr
   15870:	add	r4, r4, r0, asr #1
   15874:	b	1587c <sav_parse_very_long_string_record+0x174>
   15878:	add	r4, r4, r5
   1587c:	ldr	r3, [pc, #708]	; 15b48 <sav_parse_very_long_string_record+0x440>
   15880:	add	r3, pc, r3
   15884:	add	r4, r3, r4
   15888:	ldrb	r2, [r4, #1772]	; 0x6ec
   1588c:	add	r3, r3, r2
   15890:	ldrb	r2, [r3, #1856]	; 0x740
   15894:	str	r2, [sp, #20]
   15898:	ldrb	r3, [r3, #1872]	; 0x750
   1589c:	cmp	r3, #0
   158a0:	bne	15920 <sav_parse_very_long_string_record+0x218>
   158a4:	ldr	r3, [sp, #20]
   158a8:	cmp	r3, #0
   158ac:	beq	15adc <sav_parse_very_long_string_record+0x3d4>
   158b0:	add	fp, fp, #1
   158b4:	ldr	r3, [sp, #36]	; 0x24
   158b8:	cmp	r3, fp
   158bc:	beq	15a54 <sav_parse_very_long_string_record+0x34c>
   158c0:	ldr	r3, [sp, #40]	; 0x28
   158c4:	ldr	r2, [sp, #20]
   158c8:	add	r3, r3, r2
   158cc:	ldrb	lr, [r3, #1708]	; 0x6ac
   158d0:	ldr	r2, [sp, #44]	; 0x2c
   158d4:	add	lr, r2, lr
   158d8:	ldrb	r4, [r3, #1724]	; 0x6bc
   158dc:	ldrb	r5, [r3, #1740]	; 0x6cc
   158e0:	cmp	r5, #0
   158e4:	bne	157d0 <sav_parse_very_long_string_record+0xc8>
   158e8:	ldr	r3, [pc, #604]	; 15b4c <sav_parse_very_long_string_record+0x444>
   158ec:	add	r3, pc, r3
   158f0:	ldr	r2, [sp, #20]
   158f4:	add	r3, r3, r2
   158f8:	ldrb	r5, [r3, #1756]	; 0x6dc
   158fc:	cmp	r5, #0
   15900:	ble	1587c <sav_parse_very_long_string_record+0x174>
   15904:	add	r1, lr, r5, lsl #1
   15908:	sub	r1, r1, #2
   1590c:	cmp	lr, r1
   15910:	bhi	15878 <sav_parse_very_long_string_record+0x170>
   15914:	ldrb	ip, [fp]
   15918:	mov	r2, lr
   1591c:	b	15838 <sav_parse_very_long_string_record+0x130>
   15920:	ldr	r2, [sp, #60]	; 0x3c
   15924:	add	sl, r2, r3
   15928:	add	r8, sl, #1
   1592c:	ldrb	r3, [r2, r3]
   15930:	add	r3, r3, #1
   15934:	add	sl, sl, r3
   15938:	add	r3, sp, #84	; 0x54
   1593c:	str	r3, [sp, #16]
   15940:	b	159e4 <sav_parse_very_long_string_record+0x2dc>
   15944:	str	fp, [sp, #24]
   15948:	b	159e4 <sav_parse_very_long_string_record+0x2dc>
   1594c:	ldr	r7, [sp, #48]	; 0x30
   15950:	mov	r6, #0
   15954:	cmp	r6, r7
   15958:	bcs	159e4 <sav_parse_very_long_string_record+0x2dc>
   1595c:	add	r4, r6, r7
   15960:	lsr	r4, r4, #1
   15964:	add	r5, r4, r4, lsl #2
   15968:	add	r5, r9, r5, lsl #3
   1596c:	mov	r1, r5
   15970:	ldr	r0, [sp, #16]
   15974:	bl	3df4 <strcmp@plt>
   15978:	cmp	r0, #0
   1597c:	blt	1598c <sav_parse_very_long_string_record+0x284>
   15980:	ble	1599c <sav_parse_very_long_string_record+0x294>
   15984:	add	r6, r4, #1
   15988:	b	15954 <sav_parse_very_long_string_record+0x24c>
   1598c:	mov	r7, r4
   15990:	cmp	r6, r4
   15994:	bcc	1595c <sav_parse_very_long_string_record+0x254>
   15998:	b	159e4 <sav_parse_very_long_string_record+0x2dc>
   1599c:	cmp	r5, #0
   159a0:	beq	159e4 <sav_parse_very_long_string_record+0x2dc>
   159a4:	ldr	r2, [r5, #36]	; 0x24
   159a8:	ldr	r3, [sp, #52]	; 0x34
   159ac:	ldr	r3, [r3, #44]	; 0x2c
   159b0:	ldr	r3, [r3, r2, lsl #2]
   159b4:	ldr	r2, [sp, #28]
   159b8:	str	r2, [r3, #20]
   159bc:	b	159e4 <sav_parse_very_long_string_record+0x2dc>
   159c0:	ldr	r4, [sp, #32]
   159c4:	mov	r2, r4
   159c8:	ldr	r1, [sp, #24]
   159cc:	ldr	r0, [sp, #16]
   159d0:	bl	3f14 <memcpy@plt>
   159d4:	add	r2, sp, #120	; 0x78
   159d8:	add	r3, r2, r4
   159dc:	mov	r2, #0
   159e0:	strb	r2, [r3, #-36]	; 0xffffffdc
   159e4:	cmp	r8, sl
   159e8:	beq	158a4 <sav_parse_very_long_string_record+0x19c>
   159ec:	ldrb	r3, [r8], #1
   159f0:	cmp	r3, #5
   159f4:	addls	pc, pc, r3, lsl #2
   159f8:	b	159e4 <sav_parse_very_long_string_record+0x2dc>
   159fc:	b	1594c <sav_parse_very_long_string_record+0x244>
   15a00:	b	159c0 <sav_parse_very_long_string_record+0x2b8>
   15a04:	b	15a14 <sav_parse_very_long_string_record+0x30c>
   15a08:	b	15944 <sav_parse_very_long_string_record+0x23c>
   15a0c:	b	15abc <sav_parse_very_long_string_record+0x3b4>
   15a10:	b	15acc <sav_parse_very_long_string_record+0x3c4>
   15a14:	ldrb	r3, [fp]
   15a18:	cmp	r3, #0
   15a1c:	beq	159e4 <sav_parse_very_long_string_record+0x2dc>
   15a20:	sub	r3, r3, #48	; 0x30
   15a24:	uxtb	r3, r3
   15a28:	mvn	r2, r3
   15a2c:	ldr	r1, [sp, #56]	; 0x38
   15a30:	umull	r1, r2, r1, r2
   15a34:	ldr	r1, [sp, #28]
   15a38:	cmp	r1, r2, lsr #3
   15a3c:	bhi	15a50 <sav_parse_very_long_string_record+0x348>
   15a40:	add	r2, r1, r1, lsl #2
   15a44:	add	r3, r3, r2, lsl #1
   15a48:	str	r3, [sp, #28]
   15a4c:	b	159e4 <sav_parse_very_long_string_record+0x2dc>
   15a50:	add	fp, fp, #1
   15a54:	ldr	r3, [sp, #36]	; 0x24
   15a58:	subs	r3, fp, r3
   15a5c:	movne	r3, #1
   15a60:	ldr	r2, [sp, #20]
   15a64:	cmp	r2, #11
   15a68:	orrle	r3, r3, #1
   15a6c:	cmp	r3, #0
   15a70:	moveq	r4, #0
   15a74:	bne	15adc <sav_parse_very_long_string_record+0x3d4>
   15a78:	cmp	r9, #0
   15a7c:	beq	15a88 <sav_parse_very_long_string_record+0x380>
   15a80:	mov	r0, r9
   15a84:	bl	3eb4 <free@plt>
   15a88:	ldr	r3, [sp, #64]	; 0x40
   15a8c:	cmp	r3, #0
   15a90:	beq	15a9c <sav_parse_very_long_string_record+0x394>
   15a94:	mov	r0, r3
   15a98:	bl	3eb4 <free@plt>
   15a9c:	mov	r0, r4
   15aa0:	add	sp, sp, #124	; 0x7c
   15aa4:	ldrd	r4, [sp]
   15aa8:	ldrd	r6, [sp, #8]
   15aac:	ldrd	r8, [sp, #16]
   15ab0:	ldrd	sl, [sp, #24]
   15ab4:	add	sp, sp, #32
   15ab8:	pop	{pc}		; (ldr pc, [sp], #4)
   15abc:	ldr	r3, [sp, #24]
   15ac0:	sub	r3, fp, r3
   15ac4:	str	r3, [sp, #32]
   15ac8:	b	159e4 <sav_parse_very_long_string_record+0x2dc>
   15acc:	mov	r3, #0
   15ad0:	str	r3, [sp, #28]
   15ad4:	b	159e4 <sav_parse_very_long_string_record+0x2dc>
   15ad8:	ldr	fp, [sp, #36]	; 0x24
   15adc:	ldr	r4, [sp, #52]	; 0x34
   15ae0:	ldr	r3, [r4, #24]
   15ae4:	cmp	r3, #0
   15ae8:	moveq	r4, #5
   15aec:	beq	15a78 <sav_parse_very_long_string_record+0x370>
   15af0:	str	fp, [sp, #8]
   15af4:	ldr	r3, [sp, #36]	; 0x24
   15af8:	sub	r3, r3, fp
   15afc:	str	r3, [sp, #4]
   15b00:	ldr	r3, [sp, #76]	; 0x4c
   15b04:	str	r3, [sp]
   15b08:	ldr	r3, [sp, #72]	; 0x48
   15b0c:	sub	r3, fp, r3
   15b10:	ldr	r2, [pc, #56]	; 15b50 <sav_parse_very_long_string_record+0x448>
   15b14:	add	r2, pc, r2
   15b18:	ldr	r1, [sp, #68]	; 0x44
   15b1c:	ldr	r5, [sp, #64]	; 0x40
   15b20:	mov	r0, r5
   15b24:	bl	4280 <snprintf@plt>
   15b28:	ldr	r3, [r4, #24]
   15b2c:	ldr	r1, [r4, #40]	; 0x28
   15b30:	mov	r0, r5
   15b34:	blx	r3
   15b38:	mov	r4, #5
   15b3c:	b	15a78 <sav_parse_very_long_string_record+0x370>
   15b40:	.word	0x00011700
   15b44:	.word	0x000116e8
   15b48:	.word	0x0001161c
   15b4c:	.word	0x000115b0
   15b50:	.word	0x00011b4c

00015b54 <sav_parse_time>:
   15b54:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15b58:	strd	r6, [sp, #8]
   15b5c:	strd	r8, [sp, #16]
   15b60:	strd	sl, [sp, #24]
   15b64:	str	lr, [sp, #32]
   15b68:	sub	sp, sp, #8192	; 0x2000
   15b6c:	sub	sp, sp, #36	; 0x24
   15b70:	str	r0, [sp, #24]
   15b74:	str	r1, [sp, #28]
   15b78:	str	r3, [sp, #20]
   15b7c:	add	fp, r0, r1
   15b80:	cmp	r0, fp
   15b84:	beq	15e00 <sav_parse_time+0x2ac>
   15b88:	mov	r8, r0
   15b8c:	mov	r4, #0
   15b90:	mov	r7, #1
   15b94:	ldr	sl, [pc, #664]	; 15e34 <sav_parse_time+0x2e0>
   15b98:	add	sl, pc, sl
   15b9c:	ldr	r3, [pc, #660]	; 15e38 <sav_parse_time+0x2e4>
   15ba0:	add	r3, pc, r3
   15ba4:	str	r3, [sp, #12]
   15ba8:	ldr	r3, [pc, #652]	; 15e3c <sav_parse_time+0x2e8>
   15bac:	add	r3, pc, r3
   15bb0:	str	r3, [sp, #8]
   15bb4:	ldr	r3, [pc, #644]	; 15e40 <sav_parse_time+0x2ec>
   15bb8:	add	r3, pc, r3
   15bbc:	add	r3, r3, #144	; 0x90
   15bc0:	str	r3, [sp, #16]
   15bc4:	b	15ca0 <sav_parse_time+0x14c>
   15bc8:	sub	r0, r9, #1
   15bcc:	adds	r0, r6, r0
   15bd0:	bcs	15c1c <sav_parse_time+0xc8>
   15bd4:	ldrb	lr, [r8]
   15bd8:	mov	r3, r6
   15bdc:	b	15be8 <sav_parse_time+0x94>
   15be0:	cmp	r0, r3
   15be4:	bcc	15c1c <sav_parse_time+0xc8>
   15be8:	sub	r1, r0, r3
   15bec:	add	ip, r3, r1, asr #1
   15bf0:	ldrb	r1, [r3, r1, asr #1]
   15bf4:	cmp	lr, r1
   15bf8:	subcc	r0, ip, #1
   15bfc:	bcc	15be0 <sav_parse_time+0x8c>
   15c00:	cmp	lr, r1
   15c04:	bls	15c10 <sav_parse_time+0xbc>
   15c08:	add	r3, ip, #1
   15c0c:	b	15be0 <sav_parse_time+0x8c>
   15c10:	sub	ip, ip, r6
   15c14:	add	r5, r5, ip
   15c18:	b	15c74 <sav_parse_time+0x120>
   15c1c:	add	r6, r6, r9
   15c20:	add	r5, r5, r9
   15c24:	b	15cbc <sav_parse_time+0x168>
   15c28:	cmp	r0, r1
   15c2c:	bcc	15c70 <sav_parse_time+0x11c>
   15c30:	sub	r3, r0, r1
   15c34:	asr	r3, r3, #1
   15c38:	bic	r3, r3, #1
   15c3c:	add	ip, r1, r3
   15c40:	ldrb	r3, [r1, r3]
   15c44:	cmp	r3, lr
   15c48:	subhi	r0, ip, #2
   15c4c:	bhi	15c28 <sav_parse_time+0xd4>
   15c50:	ldrb	r3, [ip, #1]
   15c54:	cmp	r3, lr
   15c58:	bcs	15c64 <sav_parse_time+0x110>
   15c5c:	add	r1, ip, #2
   15c60:	b	15c28 <sav_parse_time+0xd4>
   15c64:	sub	ip, ip, r6
   15c68:	add	r5, r5, ip, asr #1
   15c6c:	b	15c74 <sav_parse_time+0x120>
   15c70:	add	r5, r5, r7
   15c74:	ldr	r3, [sp, #8]
   15c78:	add	r5, r3, r5
   15c7c:	ldrb	r7, [r5, #88]	; 0x58
   15c80:	ldrb	r1, [r5, #116]	; 0x74
   15c84:	cmp	r1, #0
   15c88:	bne	15cec <sav_parse_time+0x198>
   15c8c:	cmp	r7, #0
   15c90:	beq	15da8 <sav_parse_time+0x254>
   15c94:	add	r8, r8, #1
   15c98:	cmp	fp, r8
   15c9c:	beq	15e08 <sav_parse_time+0x2b4>
   15ca0:	add	r3, sl, r7
   15ca4:	ldrb	r6, [r3, #24]
   15ca8:	add	r6, sl, r6
   15cac:	ldrb	r5, [r3, #40]	; 0x28
   15cb0:	ldrb	r9, [r3, #56]	; 0x38
   15cb4:	cmp	r9, #0
   15cb8:	bne	15bc8 <sav_parse_time+0x74>
   15cbc:	ldr	r3, [sp, #12]
   15cc0:	add	r7, r3, r7
   15cc4:	ldrb	r7, [r7, #72]	; 0x48
   15cc8:	cmp	r7, #0
   15ccc:	ble	15c74 <sav_parse_time+0x120>
   15cd0:	add	r0, r6, r7, lsl #1
   15cd4:	sub	r0, r0, #2
   15cd8:	cmp	r6, r0
   15cdc:	bhi	15c70 <sav_parse_time+0x11c>
   15ce0:	ldrb	lr, [r8]
   15ce4:	mov	r1, r6
   15ce8:	b	15c30 <sav_parse_time+0xdc>
   15cec:	ldr	ip, [sp, #16]
   15cf0:	add	r0, ip, r1
   15cf4:	add	r3, r0, #1
   15cf8:	ldrb	r1, [ip, r1]
   15cfc:	add	r1, r1, #1
   15d00:	add	r0, r0, r1
   15d04:	b	15d20 <sav_parse_time+0x1cc>
   15d08:	mov	r4, #0
   15d0c:	b	15d20 <sav_parse_time+0x1cc>
   15d10:	add	r4, r4, r4, lsl #2
   15d14:	ldrb	r1, [r8]
   15d18:	sub	r1, r1, #48	; 0x30
   15d1c:	add	r4, r1, r4, lsl #1
   15d20:	cmp	r0, r3
   15d24:	beq	15c8c <sav_parse_time+0x138>
   15d28:	ldrb	r1, [r3], #1
   15d2c:	cmp	r1, #4
   15d30:	addls	pc, pc, r1, lsl #2
   15d34:	b	15d20 <sav_parse_time+0x1cc>
   15d38:	b	15d10 <sav_parse_time+0x1bc>
   15d3c:	b	15d08 <sav_parse_time+0x1b4>
   15d40:	b	15d4c <sav_parse_time+0x1f8>
   15d44:	b	15d58 <sav_parse_time+0x204>
   15d48:	b	15d60 <sav_parse_time+0x20c>
   15d4c:	ldrb	r4, [r8]
   15d50:	sub	r4, r4, #48	; 0x30
   15d54:	b	15d20 <sav_parse_time+0x1cc>
   15d58:	str	r4, [r2, #8]
   15d5c:	b	15d20 <sav_parse_time+0x1cc>
   15d60:	str	r4, [r2, #4]
   15d64:	b	15d20 <sav_parse_time+0x1cc>
   15d68:	ldrb	r1, [r3], #1
   15d6c:	cmp	r1, #5
   15d70:	streq	r4, [r2]
   15d74:	cmp	r0, r3
   15d78:	bne	15d68 <sav_parse_time+0x214>
   15d7c:	cmp	r7, #11
   15d80:	movgt	r0, #0
   15d84:	ble	15da8 <sav_parse_time+0x254>
   15d88:	add	sp, sp, #8192	; 0x2000
   15d8c:	add	sp, sp, #36	; 0x24
   15d90:	ldrd	r4, [sp]
   15d94:	ldrd	r6, [sp, #8]
   15d98:	ldrd	r8, [sp, #16]
   15d9c:	ldrd	sl, [sp, #24]
   15da0:	add	sp, sp, #32
   15da4:	pop	{pc}		; (ldr pc, [sp], #4)
   15da8:	ldr	r3, [sp, #20]
   15dac:	cmp	r3, #0
   15db0:	moveq	r0, #29
   15db4:	beq	15d88 <sav_parse_time+0x234>
   15db8:	mov	r5, r3
   15dbc:	ldr	r3, [sp, #28]
   15dc0:	ldr	r0, [sp, #24]
   15dc4:	str	r0, [sp, #4]
   15dc8:	str	r3, [sp]
   15dcc:	ldr	r2, [pc, #112]	; 15e44 <sav_parse_time+0x2f0>
   15dd0:	add	r2, pc, r2
   15dd4:	mov	r1, #8192	; 0x2000
   15dd8:	add	r4, sp, #32
   15ddc:	mov	r0, r4
   15de0:	bl	4280 <snprintf@plt>
   15de4:	add	r3, sp, #8256	; 0x2040
   15de8:	add	r3, r3, #8
   15dec:	ldr	r1, [r3]
   15df0:	mov	r0, r4
   15df4:	blx	r5
   15df8:	mov	r0, #29
   15dfc:	b	15d88 <sav_parse_time+0x234>
   15e00:	mov	r4, #0
   15e04:	mov	r7, #1
   15e08:	ldr	r3, [pc, #56]	; 15e48 <sav_parse_time+0x2f4>
   15e0c:	add	r3, pc, r3
   15e10:	add	ip, r3, #144	; 0x90
   15e14:	add	r3, r3, r7
   15e18:	ldrb	r1, [r3, #160]	; 0xa0
   15e1c:	add	r0, ip, r1
   15e20:	add	r3, r0, #1
   15e24:	ldrb	r1, [ip, r1]
   15e28:	add	r1, r1, #1
   15e2c:	add	r0, r0, r1
   15e30:	b	15d74 <sav_parse_time+0x220>
   15e34:	.word	0x00011af8
   15e38:	.word	0x00011af0
   15e3c:	.word	0x00011ae4
   15e40:	.word	0x00011ad8
   15e44:	.word	0x00011be0
   15e48:	.word	0x00011884

00015e4c <sav_parse_date>:
   15e4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15e50:	strd	r6, [sp, #8]
   15e54:	strd	r8, [sp, #16]
   15e58:	strd	sl, [sp, #24]
   15e5c:	str	lr, [sp, #32]
   15e60:	sub	sp, sp, #8192	; 0x2000
   15e64:	sub	sp, sp, #44	; 0x2c
   15e68:	str	r0, [sp, #32]
   15e6c:	str	r1, [sp, #36]	; 0x24
   15e70:	str	r3, [sp, #28]
   15e74:	add	fp, r0, r1
   15e78:	cmp	r0, fp
   15e7c:	beq	161c0 <sav_parse_date+0x374>
   15e80:	mov	ip, r0
   15e84:	mov	r3, #0
   15e88:	str	r3, [sp, #16]
   15e8c:	mov	r1, #1
   15e90:	ldr	sl, [pc, #908]	; 16224 <sav_parse_date+0x3d8>
   15e94:	add	sl, pc, sl
   15e98:	add	r3, sl, #176	; 0xb0
   15e9c:	str	r3, [sp, #8]
   15ea0:	ldr	r3, [pc, #896]	; 16228 <sav_parse_date+0x3dc>
   15ea4:	add	r3, pc, r3
   15ea8:	str	r3, [sp, #12]
   15eac:	ldr	r9, [pc, #888]	; 1622c <sav_parse_date+0x3e0>
   15eb0:	add	r9, pc, r9
   15eb4:	ldr	r3, [pc, #884]	; 16230 <sav_parse_date+0x3e4>
   15eb8:	add	r3, pc, r3
   15ebc:	str	r3, [sp, #20]
   15ec0:	add	r3, r3, #716	; 0x2cc
   15ec4:	str	r3, [sp, #24]
   15ec8:	b	15fa8 <sav_parse_date+0x15c>
   15ecc:	sub	lr, r8, #1
   15ed0:	adds	lr, r6, lr
   15ed4:	bcs	15f20 <sav_parse_date+0xd4>
   15ed8:	ldrb	r5, [ip]
   15edc:	mov	r3, r6
   15ee0:	b	15eec <sav_parse_date+0xa0>
   15ee4:	cmp	lr, r3
   15ee8:	bcc	15f20 <sav_parse_date+0xd4>
   15eec:	sub	r0, lr, r3
   15ef0:	add	r4, r3, r0, asr #1
   15ef4:	ldrb	r0, [r3, r0, asr #1]
   15ef8:	cmp	r5, r0
   15efc:	subcc	lr, r4, #1
   15f00:	bcc	15ee4 <sav_parse_date+0x98>
   15f04:	cmp	r5, r0
   15f08:	bls	15f14 <sav_parse_date+0xc8>
   15f0c:	add	r3, r4, #1
   15f10:	b	15ee4 <sav_parse_date+0x98>
   15f14:	sub	r4, r4, r6
   15f18:	add	r7, r7, r4
   15f1c:	b	15f78 <sav_parse_date+0x12c>
   15f20:	add	r6, r6, r8
   15f24:	add	r7, r7, r8
   15f28:	b	15fc8 <sav_parse_date+0x17c>
   15f2c:	cmp	r0, r1
   15f30:	bcc	15f74 <sav_parse_date+0x128>
   15f34:	sub	r3, r0, r1
   15f38:	asr	r3, r3, #1
   15f3c:	bic	r3, r3, #1
   15f40:	add	lr, r1, r3
   15f44:	ldrb	r3, [r1, r3]
   15f48:	cmp	r3, r4
   15f4c:	subhi	r0, lr, #2
   15f50:	bhi	15f2c <sav_parse_date+0xe0>
   15f54:	ldrb	r3, [lr, #1]
   15f58:	cmp	r3, r4
   15f5c:	bcs	15f68 <sav_parse_date+0x11c>
   15f60:	add	r1, lr, #2
   15f64:	b	15f2c <sav_parse_date+0xe0>
   15f68:	sub	r6, lr, r6
   15f6c:	add	r7, r7, r6, asr #1
   15f70:	b	15f78 <sav_parse_date+0x12c>
   15f74:	add	r7, r7, r5
   15f78:	add	r7, r9, r7
   15f7c:	ldrb	r3, [r7, #460]	; 0x1cc
   15f80:	add	r3, r9, r3
   15f84:	ldrb	r1, [r3, #596]	; 0x254
   15f88:	ldrb	r0, [r3, #656]	; 0x290
   15f8c:	cmp	r0, #0
   15f90:	bne	15ff8 <sav_parse_date+0x1ac>
   15f94:	cmp	r1, #0
   15f98:	beq	16168 <sav_parse_date+0x31c>
   15f9c:	add	ip, ip, #1
   15fa0:	cmp	fp, ip
   15fa4:	beq	161cc <sav_parse_date+0x380>
   15fa8:	add	r3, sl, r1
   15fac:	ldrb	r6, [r3, #268]	; 0x10c
   15fb0:	ldr	r0, [sp, #8]
   15fb4:	add	r6, r0, r6
   15fb8:	ldrb	r7, [r3, #316]	; 0x13c
   15fbc:	ldrb	r8, [r3, #364]	; 0x16c
   15fc0:	cmp	r8, #0
   15fc4:	bne	15ecc <sav_parse_date+0x80>
   15fc8:	ldr	r3, [sp, #12]
   15fcc:	add	r1, r3, r1
   15fd0:	ldrb	r5, [r1, #412]	; 0x19c
   15fd4:	cmp	r5, #0
   15fd8:	ble	15f78 <sav_parse_date+0x12c>
   15fdc:	add	r0, r6, r5, lsl #1
   15fe0:	sub	r0, r0, #2
   15fe4:	cmp	r6, r0
   15fe8:	bhi	15f74 <sav_parse_date+0x128>
   15fec:	ldrb	r4, [ip]
   15ff0:	mov	r1, r6
   15ff4:	b	15f34 <sav_parse_date+0xe8>
   15ff8:	add	r3, r0, #1
   15ffc:	ldr	lr, [sp, #24]
   16000:	add	r3, lr, r3
   16004:	ldr	lr, [sp, #20]
   16008:	add	r0, lr, r0
   1600c:	ldrb	r0, [r0, #716]	; 0x2cc
   16010:	add	r0, r3, r0
   16014:	mov	r7, #9
   16018:	mov	r6, #8
   1601c:	mov	r8, #5
   16020:	mov	r5, #4
   16024:	cmp	r3, r0
   16028:	beq	15f94 <sav_parse_date+0x148>
   1602c:	ldrb	lr, [r3], #1
   16030:	cmp	lr, #15
   16034:	addls	pc, pc, lr, lsl #2
   16038:	b	16024 <sav_parse_date+0x1d8>
   1603c:	b	16088 <sav_parse_date+0x23c>
   16040:	b	16024 <sav_parse_date+0x1d8>
   16044:	b	1607c <sav_parse_date+0x230>
   16048:	b	160b0 <sav_parse_date+0x264>
   1604c:	b	160bc <sav_parse_date+0x270>
   16050:	b	160c8 <sav_parse_date+0x27c>
   16054:	b	160d4 <sav_parse_date+0x288>
   16058:	b	160e0 <sav_parse_date+0x294>
   1605c:	b	160ec <sav_parse_date+0x2a0>
   16060:	b	160f4 <sav_parse_date+0x2a8>
   16064:	b	160fc <sav_parse_date+0x2b0>
   16068:	b	16108 <sav_parse_date+0x2bc>
   1606c:	b	16114 <sav_parse_date+0x2c8>
   16070:	b	1611c <sav_parse_date+0x2d0>
   16074:	b	16124 <sav_parse_date+0x2d8>
   16078:	b	16130 <sav_parse_date+0x2e4>
   1607c:	mov	lr, #0
   16080:	str	lr, [sp, #16]
   16084:	b	16024 <sav_parse_date+0x1d8>
   16088:	ldrb	lr, [ip]
   1608c:	sub	lr, lr, #48	; 0x30
   16090:	uxtb	lr, lr
   16094:	cmp	lr, #9
   16098:	bhi	16024 <sav_parse_date+0x1d8>
   1609c:	ldr	r4, [sp, #16]
   160a0:	add	r4, r4, r4, lsl #2
   160a4:	add	lr, lr, r4, lsl #1
   160a8:	str	lr, [sp, #16]
   160ac:	b	16024 <sav_parse_date+0x1d8>
   160b0:	ldr	lr, [sp, #16]
   160b4:	str	lr, [r2, #12]
   160b8:	b	16024 <sav_parse_date+0x1d8>
   160bc:	mov	lr, #0
   160c0:	str	lr, [r2, #16]
   160c4:	b	16024 <sav_parse_date+0x1d8>
   160c8:	mov	lr, #1
   160cc:	str	lr, [r2, #16]
   160d0:	b	16024 <sav_parse_date+0x1d8>
   160d4:	mov	lr, #2
   160d8:	str	lr, [r2, #16]
   160dc:	b	16024 <sav_parse_date+0x1d8>
   160e0:	mov	lr, #3
   160e4:	str	lr, [r2, #16]
   160e8:	b	16024 <sav_parse_date+0x1d8>
   160ec:	str	r5, [r2, #16]
   160f0:	b	16024 <sav_parse_date+0x1d8>
   160f4:	str	r8, [r2, #16]
   160f8:	b	16024 <sav_parse_date+0x1d8>
   160fc:	mov	lr, #6
   16100:	str	lr, [r2, #16]
   16104:	b	16024 <sav_parse_date+0x1d8>
   16108:	mov	lr, #7
   1610c:	str	lr, [r2, #16]
   16110:	b	16024 <sav_parse_date+0x1d8>
   16114:	str	r6, [r2, #16]
   16118:	b	16024 <sav_parse_date+0x1d8>
   1611c:	str	r7, [r2, #16]
   16120:	b	16024 <sav_parse_date+0x1d8>
   16124:	mov	lr, #10
   16128:	str	lr, [r2, #16]
   1612c:	b	16024 <sav_parse_date+0x1d8>
   16130:	mov	lr, #11
   16134:	str	lr, [r2, #16]
   16138:	b	16024 <sav_parse_date+0x1d8>
   1613c:	cmp	r1, #46	; 0x2e
   16140:	movgt	r0, #0
   16144:	ble	16168 <sav_parse_date+0x31c>
   16148:	add	sp, sp, #8192	; 0x2000
   1614c:	add	sp, sp, #44	; 0x2c
   16150:	ldrd	r4, [sp]
   16154:	ldrd	r6, [sp, #8]
   16158:	ldrd	r8, [sp, #16]
   1615c:	ldrd	sl, [sp, #24]
   16160:	add	sp, sp, #32
   16164:	pop	{pc}		; (ldr pc, [sp], #4)
   16168:	ldr	r3, [sp, #28]
   1616c:	cmp	r3, #0
   16170:	moveq	r0, #29
   16174:	beq	16148 <sav_parse_date+0x2fc>
   16178:	mov	r5, r3
   1617c:	ldr	r3, [sp, #36]	; 0x24
   16180:	ldr	r0, [sp, #32]
   16184:	str	r0, [sp, #4]
   16188:	str	r3, [sp]
   1618c:	ldr	r2, [pc, #160]	; 16234 <sav_parse_date+0x3e8>
   16190:	add	r2, pc, r2
   16194:	mov	r1, #8192	; 0x2000
   16198:	add	r4, sp, #40	; 0x28
   1619c:	mov	r0, r4
   161a0:	bl	4280 <snprintf@plt>
   161a4:	add	r3, sp, #8256	; 0x2040
   161a8:	add	r3, r3, #16
   161ac:	ldr	r1, [r3]
   161b0:	mov	r0, r4
   161b4:	blx	r5
   161b8:	mov	r0, #29
   161bc:	b	16148 <sav_parse_date+0x2fc>
   161c0:	mov	r3, #0
   161c4:	str	r3, [sp, #16]
   161c8:	mov	r1, #1
   161cc:	ldr	r0, [pc, #100]	; 16238 <sav_parse_date+0x3ec>
   161d0:	add	r0, pc, r0
   161d4:	add	r3, r0, r1
   161d8:	ldrb	ip, [r3, #752]	; 0x2f0
   161dc:	add	r3, r0, ip
   161e0:	add	r3, r3, #716	; 0x2cc
   161e4:	add	r3, r3, #1
   161e8:	add	r0, r0, ip
   161ec:	ldrb	ip, [r0, #716]	; 0x2cc
   161f0:	add	ip, r3, ip
   161f4:	ldr	r0, [sp, #16]
   161f8:	add	lr, r0, #100	; 0x64
   161fc:	cmp	ip, r3
   16200:	beq	1613c <sav_parse_date+0x2f0>
   16204:	ldrb	r0, [r3], #1
   16208:	cmp	r0, #1
   1620c:	bne	161fc <sav_parse_date+0x3b0>
   16210:	ldr	r0, [sp, #16]
   16214:	cmp	r0, #69	; 0x45
   16218:	movle	r0, lr
   1621c:	str	r0, [r2, #20]
   16220:	b	161fc <sav_parse_date+0x3b0>
   16224:	.word	0x000117fc
   16228:	.word	0x000117ec
   1622c:	.word	0x000117e0
   16230:	.word	0x000117d8
   16234:	.word	0x00011848
   16238:	.word	0x000114c0
   1623c:	.word	0x00000000

00016240 <sav_update_progress>:
   16240:	str	r4, [sp, #-8]!
   16244:	str	lr, [sp, #4]
   16248:	ldr	r3, [r0, #36]	; 0x24
   1624c:	ldr	r4, [r3, #16]
   16250:	ldr	r3, [r3, #20]
   16254:	ldr	r2, [r0, #40]	; 0x28
   16258:	ldr	r1, [r0, #28]
   1625c:	ldr	r0, [r0, #32]
   16260:	blx	r4
   16264:	ldr	r4, [sp]
   16268:	add	sp, sp, #4
   1626c:	pop	{pc}		; (ldr pc, [sp], #4)

00016270 <sav_skip_document_record>:
   16270:	strd	r4, [sp, #-12]!
   16274:	str	lr, [sp, #8]
   16278:	sub	sp, sp, #12
   1627c:	mov	r5, r0
   16280:	ldr	r4, [r0, #36]	; 0x24
   16284:	ldr	r3, [r4, #12]
   16288:	ldr	r2, [r4, #20]
   1628c:	mov	r1, #4
   16290:	add	r0, sp, r1
   16294:	blx	r3
   16298:	cmp	r0, #3
   1629c:	movls	r0, #2
   162a0:	bls	162d8 <sav_skip_document_record+0x68>
   162a4:	ldrb	r3, [r5, #436]	; 0x1b4
   162a8:	tst	r3, #1
   162ac:	bne	162e8 <sav_skip_document_record+0x78>
   162b0:	ldr	r0, [sp, #4]
   162b4:	add	r0, r0, r0, lsl #2
   162b8:	ldr	r3, [r4, #8]
   162bc:	ldr	r2, [r4, #20]
   162c0:	mov	r1, #1
   162c4:	lsl	r0, r0, #4
   162c8:	blx	r3
   162cc:	cmn	r0, #1
   162d0:	movne	r0, #0
   162d4:	moveq	r0, #15
   162d8:	add	sp, sp, #12
   162dc:	ldrd	r4, [sp]
   162e0:	add	sp, sp, #8
   162e4:	pop	{pc}		; (ldr pc, [sp], #4)
   162e8:	ldr	r0, [sp, #4]
   162ec:	bl	3d88 <byteswap4@plt>
   162f0:	str	r0, [sp, #4]
   162f4:	b	162b0 <sav_skip_document_record+0x40>

000162f8 <sav_read_pascal_string>:
   162f8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   162fc:	strd	r6, [sp, #8]
   16300:	strd	r8, [sp, #16]
   16304:	str	lr, [sp, #24]
   16308:	sub	sp, sp, #12
   1630c:	mov	r5, r2
   16310:	ldr	r2, [r2]
   16314:	add	r6, r2, r3
   16318:	add	r4, r2, #4
   1631c:	cmp	r4, r6
   16320:	bhi	16398 <sav_read_pascal_string+0xa0>
   16324:	mov	r7, r0
   16328:	mov	r8, r1
   1632c:	ldr	r0, [r2]
   16330:	ldr	r3, [sp, #40]	; 0x28
   16334:	ldrb	r3, [r3, #436]	; 0x1b4
   16338:	tst	r3, #1
   1633c:	bne	16390 <sav_read_pascal_string+0x98>
   16340:	add	r9, r4, r0
   16344:	cmp	r9, r6
   16348:	movhi	r0, #5
   1634c:	bhi	16374 <sav_read_pascal_string+0x7c>
   16350:	mov	r2, #0
   16354:	str	r2, [sp]
   16358:	mov	r3, r0
   1635c:	mov	r2, r4
   16360:	mov	r1, r8
   16364:	mov	r0, r7
   16368:	bl	4238 <readstat_convert@plt>
   1636c:	cmp	r0, #0
   16370:	moveq	r4, r9
   16374:	str	r4, [r5]
   16378:	add	sp, sp, #12
   1637c:	ldrd	r4, [sp]
   16380:	ldrd	r6, [sp, #8]
   16384:	ldrd	r8, [sp, #16]
   16388:	add	sp, sp, #24
   1638c:	pop	{pc}		; (ldr pc, [sp], #4)
   16390:	bl	3d88 <byteswap4@plt>
   16394:	b	16340 <sav_read_pascal_string+0x48>
   16398:	mov	r4, r2
   1639c:	mov	r0, #5
   163a0:	b	16374 <sav_read_pascal_string+0x7c>

000163a4 <sav_parse_records_pass1>:
   163a4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   163a8:	strd	r6, [sp, #8]
   163ac:	strd	r8, [sp, #16]
   163b0:	strd	sl, [sp, #24]
   163b4:	str	lr, [sp, #32]
   163b8:	sub	sp, sp, #5120	; 0x1400
   163bc:	sub	sp, sp, #60	; 0x3c
   163c0:	mov	r9, r0
   163c4:	ldr	r8, [r0, #36]	; 0x24
   163c8:	add	sl, sp, #56	; 0x38
   163cc:	sub	r3, sl, #48	; 0x30
   163d0:	str	r3, [sp]
   163d4:	add	r5, sp, #1072	; 0x430
   163d8:	add	r5, r5, #8
   163dc:	sub	r3, r5, #1056	; 0x420
   163e0:	str	r3, [sp, #4]
   163e4:	ldr	r3, [r8, #12]
   163e8:	ldr	r2, [r8, #20]
   163ec:	mov	r1, #4
   163f0:	ldr	r0, [sp]
   163f4:	blx	r3
   163f8:	cmp	r0, #3
   163fc:	bls	168cc <sav_parse_records_pass1+0x528>
   16400:	ldrb	r3, [r9, #436]	; 0x1b4
   16404:	tst	r3, #1
   16408:	bne	16458 <sav_parse_records_pass1+0xb4>
   1640c:	ldr	r4, [r5, #-1072]	; 0xfffffbd0
   16410:	cmp	r4, #6
   16414:	beq	166e0 <sav_parse_records_pass1+0x33c>
   16418:	bls	16468 <sav_parse_records_pass1+0xc4>
   1641c:	cmp	r4, #7
   16420:	beq	166f4 <sav_parse_records_pass1+0x350>
   16424:	movw	r3, #999	; 0x3e7
   16428:	cmp	r4, r3
   1642c:	movne	r4, #5
   16430:	moveq	r4, #0
   16434:	mov	r0, r4
   16438:	add	sp, sp, #5120	; 0x1400
   1643c:	add	sp, sp, #60	; 0x3c
   16440:	ldrd	r4, [sp]
   16444:	ldrd	r6, [sp, #8]
   16448:	ldrd	r8, [sp, #16]
   1644c:	ldrd	sl, [sp, #24]
   16450:	add	sp, sp, #32
   16454:	pop	{pc}		; (ldr pc, [sp], #4)
   16458:	ldr	r0, [r5, #-1072]	; 0xfffffbd0
   1645c:	bl	3d88 <byteswap4@plt>
   16460:	str	r0, [r5, #-1072]	; 0xfffffbd0
   16464:	b	1640c <sav_parse_records_pass1+0x68>
   16468:	cmp	r4, #2
   1646c:	beq	165bc <sav_parse_records_pass1+0x218>
   16470:	cmp	r4, #3
   16474:	bne	165b4 <sav_parse_records_pass1+0x210>
   16478:	ldr	r4, [r9, #36]	; 0x24
   1647c:	ldr	r3, [r4, #12]
   16480:	ldr	r2, [r4, #20]
   16484:	mov	r1, #4
   16488:	sub	r0, sl, #44	; 0x2c
   1648c:	blx	r3
   16490:	cmp	r0, #3
   16494:	bls	168ec <sav_parse_records_pass1+0x548>
   16498:	ldrb	r3, [r9, #436]	; 0x1b4
   1649c:	tst	r3, #1
   164a0:	bne	16698 <sav_parse_records_pass1+0x2f4>
   164a4:	ldr	r3, [r5, #-1068]	; 0xfffffbd4
   164a8:	cmp	r3, #0
   164ac:	beq	16530 <sav_parse_records_pass1+0x18c>
   164b0:	mov	r7, #0
   164b4:	mov	fp, #0
   164b8:	mov	r6, #1
   164bc:	strb	fp, [r5, #-1024]	; 0xfffffc00
   164c0:	ldr	r3, [r4, #8]
   164c4:	ldr	r2, [r4, #20]
   164c8:	mov	r1, r6
   164cc:	mov	r0, #8
   164d0:	blx	r3
   164d4:	cmn	r0, #1
   164d8:	beq	166a8 <sav_parse_records_pass1+0x304>
   164dc:	ldr	r3, [r4, #12]
   164e0:	ldr	r2, [r4, #20]
   164e4:	mov	r1, r6
   164e8:	mov	r0, sl
   164ec:	blx	r3
   164f0:	cmp	r0, #0
   164f4:	ble	166b0 <sav_parse_records_pass1+0x30c>
   164f8:	ldrb	r0, [r5, #-1024]	; 0xfffffc00
   164fc:	add	r0, r0, #8
   16500:	and	r0, r0, #504	; 0x1f8
   16504:	ldr	r3, [r4, #8]
   16508:	ldr	r2, [r4, #20]
   1650c:	mov	r1, r6
   16510:	sub	r0, r0, #1
   16514:	blx	r3
   16518:	cmn	r0, #1
   1651c:	beq	166b8 <sav_parse_records_pass1+0x314>
   16520:	add	r7, r7, #1
   16524:	ldr	r3, [r5, #-1068]	; 0xfffffbd4
   16528:	cmp	r7, r3
   1652c:	bcc	164bc <sav_parse_records_pass1+0x118>
   16530:	ldr	r3, [r4, #12]
   16534:	ldr	r2, [r4, #20]
   16538:	mov	r1, #4
   1653c:	sub	r0, sl, #32
   16540:	blx	r3
   16544:	cmp	r0, #3
   16548:	bls	168f4 <sav_parse_records_pass1+0x550>
   1654c:	ldrb	r3, [r9, #436]	; 0x1b4
   16550:	tst	r3, #1
   16554:	bne	166c0 <sav_parse_records_pass1+0x31c>
   16558:	ldr	r3, [r5, #-1056]	; 0xfffffbe0
   1655c:	cmp	r3, #4
   16560:	bne	168fc <sav_parse_records_pass1+0x558>
   16564:	ldr	r3, [r4, #12]
   16568:	ldr	r2, [r4, #20]
   1656c:	mov	r1, #4
   16570:	mov	r0, sl
   16574:	blx	r3
   16578:	cmp	r0, #3
   1657c:	bls	16904 <sav_parse_records_pass1+0x560>
   16580:	ldrb	r3, [r9, #436]	; 0x1b4
   16584:	tst	r3, #1
   16588:	bne	166d0 <sav_parse_records_pass1+0x32c>
   1658c:	ldr	r0, [r5, #-1024]	; 0xfffffc00
   16590:	ldr	r3, [r4, #8]
   16594:	ldr	r2, [r4, #20]
   16598:	mov	r1, #1
   1659c:	lsl	r0, r0, #2
   165a0:	blx	r3
   165a4:	cmn	r0, #1
   165a8:	bne	163e4 <sav_parse_records_pass1+0x40>
   165ac:	mov	r4, #15
   165b0:	b	16434 <sav_parse_records_pass1+0x90>
   165b4:	mov	r4, #5
   165b8:	b	16434 <sav_parse_records_pass1+0x90>
   165bc:	ldr	r6, [r9, #36]	; 0x24
   165c0:	ldr	r3, [r6, #12]
   165c4:	ldr	r2, [r6, #20]
   165c8:	mov	r1, #28
   165cc:	mov	r0, sl
   165d0:	blx	r3
   165d4:	cmp	r0, #27
   165d8:	bls	16434 <sav_parse_records_pass1+0x90>
   165dc:	ldr	r3, [r5, #-1020]	; 0xfffffc04
   165e0:	cmp	r3, #0
   165e4:	beq	16638 <sav_parse_records_pass1+0x294>
   165e8:	ldr	r3, [r6, #12]
   165ec:	ldr	r2, [r6, #20]
   165f0:	mov	r1, #4
   165f4:	sub	r0, sl, #32
   165f8:	blx	r3
   165fc:	cmp	r0, #3
   16600:	bls	16434 <sav_parse_records_pass1+0x90>
   16604:	ldrb	r3, [r9, #436]	; 0x1b4
   16608:	tst	r3, #1
   1660c:	bne	1667c <sav_parse_records_pass1+0x2d8>
   16610:	ldr	r0, [r5, #-1056]	; 0xfffffbe0
   16614:	str	r0, [r5, #-1056]	; 0xfffffbe0
   16618:	add	r0, r0, #3
   1661c:	ldr	r3, [r6, #8]
   16620:	ldr	r2, [r6, #20]
   16624:	mov	r1, #1
   16628:	bic	r0, r0, #3
   1662c:	blx	r3
   16630:	cmn	r0, #1
   16634:	beq	16688 <sav_parse_records_pass1+0x2e4>
   16638:	ldr	r0, [r5, #-1016]	; 0xfffffc08
   1663c:	cmp	r0, #0
   16640:	beq	163e4 <sav_parse_records_pass1+0x40>
   16644:	ldrb	r3, [r9, #436]	; 0x1b4
   16648:	tst	r3, #1
   1664c:	bne	16690 <sav_parse_records_pass1+0x2ec>
   16650:	cmp	r0, #0
   16654:	rsblt	r0, r0, #0
   16658:	ldr	r3, [r6, #8]
   1665c:	ldr	r2, [r6, #20]
   16660:	mov	r1, #1
   16664:	lsl	r0, r0, #3
   16668:	blx	r3
   1666c:	cmn	r0, #1
   16670:	bne	163e4 <sav_parse_records_pass1+0x40>
   16674:	mov	r4, #15
   16678:	b	16434 <sav_parse_records_pass1+0x90>
   1667c:	ldr	r0, [r5, #-1056]	; 0xfffffbe0
   16680:	bl	3d88 <byteswap4@plt>
   16684:	b	16614 <sav_parse_records_pass1+0x270>
   16688:	mov	r4, #15
   1668c:	b	16434 <sav_parse_records_pass1+0x90>
   16690:	bl	3d88 <byteswap4@plt>
   16694:	b	16650 <sav_parse_records_pass1+0x2ac>
   16698:	ldr	r0, [r5, #-1068]	; 0xfffffbd4
   1669c:	bl	3d88 <byteswap4@plt>
   166a0:	str	r0, [r5, #-1068]	; 0xfffffbd4
   166a4:	b	164a4 <sav_parse_records_pass1+0x100>
   166a8:	mov	r4, #15
   166ac:	b	16434 <sav_parse_records_pass1+0x90>
   166b0:	mov	r4, #2
   166b4:	b	16434 <sav_parse_records_pass1+0x90>
   166b8:	mov	r4, #15
   166bc:	b	16434 <sav_parse_records_pass1+0x90>
   166c0:	ldr	r0, [r5, #-1056]	; 0xfffffbe0
   166c4:	bl	3d88 <byteswap4@plt>
   166c8:	str	r0, [r5, #-1056]	; 0xfffffbe0
   166cc:	b	16558 <sav_parse_records_pass1+0x1b4>
   166d0:	ldr	r0, [r5, #-1024]	; 0xfffffc00
   166d4:	bl	3d88 <byteswap4@plt>
   166d8:	str	r0, [r5, #-1024]	; 0xfffffc00
   166dc:	b	1658c <sav_parse_records_pass1+0x1e8>
   166e0:	mov	r0, r9
   166e4:	bl	16270 <sav_skip_document_record>
   166e8:	subs	r4, r0, #0
   166ec:	beq	163e4 <sav_parse_records_pass1+0x40>
   166f0:	b	16434 <sav_parse_records_pass1+0x90>
   166f4:	ldr	r3, [r8, #12]
   166f8:	ldr	r2, [r8, #20]
   166fc:	mov	r1, #12
   16700:	sub	r0, sl, #44	; 0x2c
   16704:	blx	r3
   16708:	cmp	r0, #11
   1670c:	bls	168d4 <sav_parse_records_pass1+0x530>
   16710:	ldrb	r3, [r9, #436]	; 0x1b4
   16714:	tst	r3, #1
   16718:	bne	16758 <sav_parse_records_pass1+0x3b4>
   1671c:	ldr	r3, [r5, #-1064]	; 0xfffffbd8
   16720:	ldr	r6, [r5, #-1060]	; 0xfffffbdc
   16724:	mul	r6, r6, r3
   16728:	ldr	r3, [r5, #-1068]	; 0xfffffbd4
   1672c:	cmp	r3, #3
   16730:	beq	16778 <sav_parse_records_pass1+0x3d4>
   16734:	ldr	r3, [r8, #8]
   16738:	ldr	r2, [r8, #20]
   1673c:	mov	r1, #1
   16740:	mov	r0, r6
   16744:	blx	r3
   16748:	cmn	r0, #1
   1674c:	bne	163e4 <sav_parse_records_pass1+0x40>
   16750:	mov	r4, #15
   16754:	b	16434 <sav_parse_records_pass1+0x90>
   16758:	sub	r7, sl, #44	; 0x2c
   1675c:	mov	r6, #3
   16760:	ldr	r0, [r7]
   16764:	bl	3d88 <byteswap4@plt>
   16768:	str	r0, [r7], #4
   1676c:	subs	r6, r6, #1
   16770:	bne	16760 <sav_parse_records_pass1+0x3bc>
   16774:	b	1671c <sav_parse_records_pass1+0x378>
   16778:	cmp	r6, #4096	; 0x1000
   1677c:	bhi	168dc <sav_parse_records_pass1+0x538>
   16780:	ldr	r3, [r8, #12]
   16784:	ldr	r2, [r8, #20]
   16788:	mov	r1, r6
   1678c:	mov	r0, r5
   16790:	blx	r3
   16794:	cmp	r0, r6
   16798:	bcc	168e4 <sav_parse_records_pass1+0x540>
   1679c:	cmp	r6, #32
   167a0:	beq	167ac <sav_parse_records_pass1+0x408>
   167a4:	mov	r4, #5
   167a8:	b	16434 <sav_parse_records_pass1+0x90>
   167ac:	ldr	r6, [r9, #60]	; 0x3c
   167b0:	ldrd	r2, [r5]
   167b4:	ldr	r1, [sp, #4]
   167b8:	strd	r2, [r1]
   167bc:	ldrd	r2, [r5, #8]
   167c0:	strd	r2, [r1, #8]
   167c4:	ldrd	r2, [r5, #16]
   167c8:	strd	r2, [r1, #16]
   167cc:	ldrd	r2, [r5, #24]
   167d0:	strd	r2, [r1, #24]
   167d4:	ldrb	r3, [r9, #436]	; 0x1b4
   167d8:	tst	r3, #1
   167dc:	bne	16824 <sav_parse_records_pass1+0x480>
   167e0:	ldr	r1, [r9, #56]	; 0x38
   167e4:	cmp	r1, #0
   167e8:	beq	16834 <sav_parse_records_pass1+0x490>
   167ec:	cmp	r1, #0
   167f0:	cmpne	r6, #0
   167f4:	beq	163e4 <sav_parse_records_pass1+0x40>
   167f8:	mov	r0, r6
   167fc:	bl	4130 <iconv_open@plt>
   16800:	mov	r6, r0
   16804:	cmn	r0, #1
   16808:	beq	16434 <sav_parse_records_pass1+0x90>
   1680c:	ldr	r0, [r9, #336]	; 0x150
   16810:	cmp	r0, #0
   16814:	beq	1681c <sav_parse_records_pass1+0x478>
   16818:	bl	3dc4 <iconv_close@plt>
   1681c:	str	r6, [r9, #336]	; 0x150
   16820:	b	163e4 <sav_parse_records_pass1+0x40>
   16824:	ldr	r0, [r5, #-1028]	; 0xfffffbfc
   16828:	bl	3d88 <byteswap4@plt>
   1682c:	str	r0, [r5, #-1028]	; 0xfffffbfc
   16830:	b	167e0 <sav_parse_records_pass1+0x43c>
   16834:	ldr	r3, [r5, #-1028]	; 0xfffffbfc
   16838:	ldr	r2, [pc, #204]	; 1690c <sav_parse_records_pass1+0x568>
   1683c:	add	r2, pc, r2
   16840:	ldr	r2, [r2]
   16844:	cmp	r2, r3
   16848:	beq	168ac <sav_parse_records_pass1+0x508>
   1684c:	ldr	r1, [pc, #188]	; 16910 <sav_parse_records_pass1+0x56c>
   16850:	add	r1, pc, r1
   16854:	mov	r2, #1
   16858:	ldr	r0, [r1, #36]	; 0x24
   1685c:	cmp	r3, r0
   16860:	beq	168b0 <sav_parse_records_pass1+0x50c>
   16864:	add	r2, r2, #1
   16868:	add	r1, r1, #36	; 0x24
   1686c:	cmp	r2, #79	; 0x4f
   16870:	bne	16858 <sav_parse_records_pass1+0x4b4>
   16874:	ldr	r2, [r9, #24]
   16878:	cmp	r2, #0
   1687c:	beq	16434 <sav_parse_records_pass1+0x90>
   16880:	ldr	r2, [pc, #140]	; 16914 <sav_parse_records_pass1+0x570>
   16884:	add	r2, pc, r2
   16888:	mov	r1, #1024	; 0x400
   1688c:	add	r5, sp, #56	; 0x38
   16890:	mov	r0, r5
   16894:	bl	4280 <snprintf@plt>
   16898:	ldr	r3, [r9, #24]
   1689c:	ldr	r1, [r9, #40]	; 0x28
   168a0:	mov	r0, r5
   168a4:	blx	r3
   168a8:	b	16434 <sav_parse_records_pass1+0x90>
   168ac:	mov	r2, #0
   168b0:	add	r2, r2, r2, lsl #3
   168b4:	ldr	r1, [pc, #92]	; 16918 <sav_parse_records_pass1+0x574>
   168b8:	add	r1, pc, r1
   168bc:	add	r2, r1, r2, lsl #2
   168c0:	add	r1, r2, #4
   168c4:	str	r1, [r9, #56]	; 0x38
   168c8:	b	167ec <sav_parse_records_pass1+0x448>
   168cc:	mov	r4, #2
   168d0:	b	16434 <sav_parse_records_pass1+0x90>
   168d4:	mov	r4, #2
   168d8:	b	16434 <sav_parse_records_pass1+0x90>
   168dc:	mov	r4, #5
   168e0:	b	16434 <sav_parse_records_pass1+0x90>
   168e4:	mov	r4, #5
   168e8:	b	16434 <sav_parse_records_pass1+0x90>
   168ec:	mov	r4, #2
   168f0:	b	16434 <sav_parse_records_pass1+0x90>
   168f4:	mov	r4, #2
   168f8:	b	16434 <sav_parse_records_pass1+0x90>
   168fc:	mov	r4, #5
   16900:	b	16434 <sav_parse_records_pass1+0x90>
   16904:	mov	r4, #2
   16908:	b	16434 <sav_parse_records_pass1+0x90>
   1690c:	.word	0x00030724
   16910:	.word	0x00030710
   16914:	.word	0x0001117c
   16918:	.word	0x000306a8

0001691c <sav_read_compressed_data>:
   1691c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16920:	strd	r6, [sp, #8]
   16924:	strd	r8, [sp, #16]
   16928:	strd	sl, [sp, #24]
   1692c:	str	lr, [sp, #32]
   16930:	sub	sp, sp, #65536	; 0x10000
   16934:	sub	sp, sp, #76	; 0x4c
   16938:	mov	r7, r0
   1693c:	str	r1, [sp, #12]
   16940:	ldr	r3, [r0, #36]	; 0x24
   16944:	str	r3, [sp, #8]
   16948:	ldr	r8, [r0, #344]	; 0x158
   1694c:	lsl	r8, r8, #3
   16950:	add	r4, sp, #72	; 0x48
   16954:	mov	r2, #56	; 0x38
   16958:	mov	r1, #0
   1695c:	add	r0, sp, #16
   16960:	bl	42a4 <memset@plt>
   16964:	add	r3, r7, #400	; 0x190
   16968:	ldrd	r2, [r3, #-8]
   1696c:	strd	r2, [r4, #-40]	; 0xffffffd8
   16970:	add	r3, r7, #416	; 0x1a0
   16974:	ldrd	r2, [r3]
   16978:	strd	r2, [r4, #-32]	; 0xffffffe0
   1697c:	ldrb	r3, [r7, #436]	; 0x1b4
   16980:	and	r3, r3, #1
   16984:	str	r3, [r4, #-12]
   16988:	cmp	r8, #0
   1698c:	moveq	fp, #0
   16990:	bne	16a04 <sav_read_compressed_data+0xe8>
   16994:	mov	r6, #0
   16998:	add	r4, sp, #72	; 0x48
   1699c:	sub	r3, r4, #56	; 0x38
   169a0:	str	r3, [sp]
   169a4:	mov	r0, r7
   169a8:	bl	16240 <sav_update_progress>
   169ac:	subs	r5, r0, #0
   169b0:	bne	16aec <sav_read_compressed_data+0x1d0>
   169b4:	ldr	r2, [sp, #8]
   169b8:	ldr	r3, [r2, #12]
   169bc:	ldr	r2, [r2, #20]
   169c0:	mov	r1, #65536	; 0x10000
   169c4:	mov	r0, r4
   169c8:	blx	r3
   169cc:	mov	r9, r0
   169d0:	mov	sl, r0
   169d4:	add	r3, r0, #1
   169d8:	cmp	r3, #1
   169dc:	bls	16af4 <sav_read_compressed_data+0x1d8>
   169e0:	ands	r3, r0, #7
   169e4:	str	r3, [sp, #4]
   169e8:	bne	16afc <sav_read_compressed_data+0x1e0>
   169ec:	mov	r3, #1
   169f0:	str	r3, [r4, #-8]
   169f4:	mov	r5, #0
   169f8:	mov	r3, r6
   169fc:	ldr	r6, [sp, #12]
   16a00:	b	16a48 <sav_read_compressed_data+0x12c>
   16a04:	mov	r0, r8
   16a08:	bl	422c <readstat_malloc@plt>
   16a0c:	subs	fp, r0, #0
   16a10:	bne	16994 <sav_read_compressed_data+0x78>
   16a14:	mov	r3, #3
   16a18:	str	r3, [sp, #4]
   16a1c:	b	16ac0 <sav_read_compressed_data+0x1a4>
   16a20:	mov	r2, r7
   16a24:	mov	r1, r8
   16a28:	mov	r0, fp
   16a2c:	blx	r6
   16a30:	cmp	r0, #0
   16a34:	bne	16b04 <sav_read_compressed_data+0x1e8>
   16a38:	mov	r3, #0
   16a3c:	b	16a8c <sav_read_compressed_data+0x170>
   16a40:	cmp	r2, #0
   16a44:	beq	16ae4 <sav_read_compressed_data+0x1c8>
   16a48:	add	r2, r4, r5
   16a4c:	str	r2, [r4, #-56]	; 0xffffffc8
   16a50:	sub	r5, r9, r5
   16a54:	str	r5, [r4, #-52]	; 0xffffffcc
   16a58:	add	r2, fp, r3
   16a5c:	str	r2, [r4, #-48]	; 0xffffffd0
   16a60:	sub	r3, r8, r3
   16a64:	str	r3, [r4, #-44]	; 0xffffffd4
   16a68:	ldr	r0, [sp]
   16a6c:	bl	4214 <sav_decompress_row@plt>
   16a70:	ldr	r5, [r4, #-52]	; 0xffffffcc
   16a74:	sub	r5, sl, r5
   16a78:	ldr	r3, [r4, #-8]
   16a7c:	cmp	r3, #2
   16a80:	beq	16a20 <sav_read_compressed_data+0x104>
   16a84:	ldr	r3, [r4, #-44]	; 0xffffffd4
   16a88:	sub	r3, r8, r3
   16a8c:	ldr	r2, [r4, #-8]
   16a90:	cmp	r2, #3
   16a94:	beq	16ab0 <sav_read_compressed_data+0x194>
   16a98:	ldr	r1, [r7, #356]	; 0x164
   16a9c:	cmp	r1, #0
   16aa0:	ble	16a40 <sav_read_compressed_data+0x124>
   16aa4:	ldr	r0, [r7, #364]	; 0x16c
   16aa8:	cmp	r1, r0
   16aac:	bne	16a40 <sav_read_compressed_data+0x124>
   16ab0:	cmp	fp, #0
   16ab4:	beq	16ac0 <sav_read_compressed_data+0x1a4>
   16ab8:	mov	r0, fp
   16abc:	bl	3eb4 <free@plt>
   16ac0:	ldr	r0, [sp, #4]
   16ac4:	add	sp, sp, #65536	; 0x10000
   16ac8:	add	sp, sp, #76	; 0x4c
   16acc:	ldrd	r4, [sp]
   16ad0:	ldrd	r6, [sp, #8]
   16ad4:	ldrd	r8, [sp, #16]
   16ad8:	ldrd	sl, [sp, #24]
   16adc:	add	sp, sp, #32
   16ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ae4:	mov	r6, r3
   16ae8:	b	169a4 <sav_read_compressed_data+0x88>
   16aec:	str	r5, [sp, #4]
   16af0:	b	16ab0 <sav_read_compressed_data+0x194>
   16af4:	str	r5, [sp, #4]
   16af8:	b	16ab0 <sav_read_compressed_data+0x194>
   16afc:	str	r5, [sp, #4]
   16b00:	b	16ab0 <sav_read_compressed_data+0x194>
   16b04:	str	r0, [sp, #4]
   16b08:	b	16ab0 <sav_read_compressed_data+0x194>

00016b0c <sav_process_row>:
   16b0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16b10:	strd	r6, [sp, #8]
   16b14:	strd	r8, [sp, #16]
   16b18:	strd	sl, [sp, #24]
   16b1c:	str	lr, [sp, #32]
   16b20:	sub	sp, sp, #76	; 0x4c
   16b24:	ldr	r3, [r2, #360]	; 0x168
   16b28:	str	r3, [sp, #28]
   16b2c:	cmp	r3, #0
   16b30:	subne	r3, r3, #1
   16b34:	strne	r3, [r2, #360]	; 0x168
   16b38:	movne	r0, #0
   16b3c:	bne	16e90 <sav_process_row+0x384>
   16b40:	mov	r6, r2
   16b44:	cmp	r1, #0
   16b48:	beq	16e80 <sav_process_row+0x374>
   16b4c:	ldr	r3, [r2, #340]	; 0x154
   16b50:	cmp	r3, #0
   16b54:	ble	16e80 <sav_process_row+0x374>
   16b58:	ldr	r3, [r2, #44]	; 0x2c
   16b5c:	ldr	r2, [r3]
   16b60:	mov	r4, #0
   16b64:	mov	r5, #0
   16b68:	strd	r4, [sp, #48]	; 0x30
   16b6c:	strd	r4, [sp, #56]	; 0x38
   16b70:	ldr	r4, [r2]
   16b74:	str	r4, [sp, #56]	; 0x38
   16b78:	mov	sl, r0
   16b7c:	sub	r1, r1, #1
   16b80:	bic	r1, r1, #7
   16b84:	add	r5, r0, r1
   16b88:	ldr	fp, [sp, #28]
   16b8c:	mov	r8, fp
   16b90:	mov	r9, fp
   16b94:	str	fp, [sp, #24]
   16b98:	mov	r7, r2
   16b9c:	mov	r3, #0
   16ba0:	str	r3, [sp, #20]
   16ba4:	add	r3, r6, #400	; 0x190
   16ba8:	str	r3, [sp, #40]	; 0x28
   16bac:	add	r3, r6, #416	; 0x1a0
   16bb0:	str	r3, [sp, #44]	; 0x2c
   16bb4:	b	16cdc <sav_process_row+0x1d0>
   16bb8:	ldr	r1, [r6, #376]	; 0x178
   16bbc:	ldr	r0, [sp, #20]
   16bc0:	add	ip, r1, r0
   16bc4:	str	ip, [sp, #20]
   16bc8:	ldr	lr, [sl]
   16bcc:	ldr	ip, [sl, #4]
   16bd0:	str	lr, [r1, r0]
   16bd4:	ldr	r1, [sp, #20]
   16bd8:	str	ip, [r1, #4]
   16bdc:	str	r3, [sp, #20]
   16be0:	b	16cf8 <sav_process_row+0x1ec>
   16be4:	ldr	r3, [sp, #24]
   16be8:	add	r3, r3, #1
   16bec:	mov	r2, r3
   16bf0:	str	r3, [sp, #24]
   16bf4:	ldr	r3, [r7, #48]	; 0x30
   16bf8:	cmp	r3, r2
   16bfc:	ble	16c0c <sav_process_row+0x100>
   16c00:	ldr	r3, [sp, #20]
   16c04:	sub	r3, r3, #1
   16c08:	str	r3, [sp, #20]
   16c0c:	add	r8, r8, #1
   16c10:	ldr	fp, [sp, #28]
   16c14:	b	16d08 <sav_process_row+0x1fc>
   16c18:	ldr	r3, [r6, #336]	; 0x150
   16c1c:	str	r3, [sp]
   16c20:	ldr	r3, [sp, #20]
   16c24:	ldr	r2, [r6, #376]	; 0x178
   16c28:	ldr	r1, [r6, #388]	; 0x184
   16c2c:	ldr	r0, [r6, #384]	; 0x180
   16c30:	bl	4238 <readstat_convert@plt>
   16c34:	cmp	r0, #0
   16c38:	bne	16e90 <sav_process_row+0x384>
   16c3c:	ldr	r3, [r6, #384]	; 0x180
   16c40:	str	r3, [sp, #48]	; 0x30
   16c44:	ldr	r2, [r7, #8]
   16c48:	ldr	r3, [r6, #52]	; 0x34
   16c4c:	ldr	r1, [r3, r2, lsl #2]
   16c50:	ldr	r3, [r6, #40]	; 0x28
   16c54:	str	r3, [sp, #8]
   16c58:	ldrd	r2, [sp, #56]	; 0x38
   16c5c:	strd	r2, [sp]
   16c60:	add	r3, sp, #48	; 0x30
   16c64:	ldm	r3, {r2, r3}
   16c68:	ldr	r0, [r6, #364]	; 0x16c
   16c6c:	ldr	ip, [r6, #16]
   16c70:	blx	ip
   16c74:	cmp	r0, #0
   16c78:	beq	16d30 <sav_process_row+0x224>
   16c7c:	mov	r0, #4
   16c80:	b	16e90 <sav_process_row+0x384>
   16c84:	cmp	r4, #5
   16c88:	beq	16d48 <sav_process_row+0x23c>
   16c8c:	cmp	sl, r5
   16c90:	beq	16e80 <sav_process_row+0x374>
   16c94:	cmp	r9, r8
   16c98:	movge	r3, r9
   16c9c:	movlt	r3, r8
   16ca0:	ldr	r2, [r6, #340]	; 0x154
   16ca4:	cmp	r2, r3
   16ca8:	ble	16e80 <sav_process_row+0x374>
   16cac:	ldr	r3, [r6, #44]	; 0x2c
   16cb0:	ldr	r2, [r3, r8, lsl #2]
   16cb4:	ldr	r7, [r3, r9, lsl #2]
   16cb8:	mov	r0, #0
   16cbc:	mov	r1, #0
   16cc0:	strd	r0, [sp, #48]	; 0x30
   16cc4:	strd	r0, [sp, #56]	; 0x38
   16cc8:	ldr	r4, [r7]
   16ccc:	str	r4, [sp, #56]	; 0x38
   16cd0:	add	sl, sl, #8
   16cd4:	cmp	fp, #31
   16cd8:	bgt	16e78 <sav_process_row+0x36c>
   16cdc:	cmp	r4, #0
   16ce0:	bne	16c84 <sav_process_row+0x178>
   16ce4:	ldr	r3, [sp, #20]
   16ce8:	add	r3, r3, #8
   16cec:	ldr	r1, [r6, #380]	; 0x17c
   16cf0:	cmp	r3, r1
   16cf4:	bls	16bb8 <sav_process_row+0xac>
   16cf8:	add	fp, fp, #1
   16cfc:	ldr	r3, [r2, #16]
   16d00:	cmp	r3, fp
   16d04:	beq	16be4 <sav_process_row+0xd8>
   16d08:	ldr	r3, [r7, #48]	; 0x30
   16d0c:	ldr	r2, [sp, #24]
   16d10:	cmp	r3, r2
   16d14:	bne	16c8c <sav_process_row+0x180>
   16d18:	ldr	r2, [r7, #8]
   16d1c:	ldr	r3, [r6, #52]	; 0x34
   16d20:	ldr	r3, [r3, r2, lsl #2]
   16d24:	ldr	r3, [r3, #2144]	; 0x860
   16d28:	cmp	r3, #0
   16d2c:	beq	16c18 <sav_process_row+0x10c>
   16d30:	ldr	r3, [r7, #48]	; 0x30
   16d34:	add	r9, r9, r3
   16d38:	ldr	r3, [sp, #28]
   16d3c:	str	r3, [sp, #24]
   16d40:	str	r4, [sp, #20]
   16d44:	b	16c8c <sav_process_row+0x180>
   16d48:	ldr	r2, [r7, #8]
   16d4c:	ldr	r3, [r6, #52]	; 0x34
   16d50:	ldr	r3, [r3, r2, lsl #2]
   16d54:	ldr	r3, [r3, #2144]	; 0x860
   16d58:	cmp	r3, #0
   16d5c:	beq	16d70 <sav_process_row+0x264>
   16d60:	ldr	r3, [r7, #48]	; 0x30
   16d64:	add	r9, r9, r3
   16d68:	add	r8, r8, #1
   16d6c:	b	16c8c <sav_process_row+0x180>
   16d70:	ldr	r2, [sl]
   16d74:	ldr	r3, [sl, #4]
   16d78:	str	r2, [sp, #64]	; 0x40
   16d7c:	str	r3, [sp, #68]	; 0x44
   16d80:	ldrb	r3, [r6, #436]	; 0x1b4
   16d84:	tst	r3, #1
   16d88:	bne	16e28 <sav_process_row+0x31c>
   16d8c:	vldr	d7, [sp, #64]	; 0x40
   16d90:	vstr	d7, [sp, #32]
   16d94:	vstr	d7, [sp, #48]	; 0x30
   16d98:	ldrd	r0, [sp, #32]
   16d9c:	ldr	r3, [sp, #40]	; 0x28
   16da0:	ldrd	r2, [r3, #-8]
   16da4:	cmp	r1, r3
   16da8:	cmpeq	r0, r2
   16dac:	beq	16e38 <sav_process_row+0x32c>
   16db0:	ldr	r3, [sp, #40]	; 0x28
   16db4:	ldrd	r2, [r3]
   16db8:	cmp	r1, r3
   16dbc:	cmpeq	r0, r2
   16dc0:	beq	16e48 <sav_process_row+0x33c>
   16dc4:	ldr	r3, [sp, #44]	; 0x2c
   16dc8:	ldrd	r2, [r3, #-8]
   16dcc:	cmp	r1, r3
   16dd0:	cmpeq	r0, r2
   16dd4:	beq	16e58 <sav_process_row+0x34c>
   16dd8:	vldr	d7, [sp, #32]
   16ddc:	vcmp.f64	d7, d7
   16de0:	vmrs	APSR_nzcv, fpscr
   16de4:	bvs	16e68 <sav_process_row+0x35c>
   16de8:	ldr	r2, [r7, #8]
   16dec:	ldr	r3, [r6, #52]	; 0x34
   16df0:	ldr	r1, [r3, r2, lsl #2]
   16df4:	ldr	r3, [r6, #40]	; 0x28
   16df8:	str	r3, [sp, #8]
   16dfc:	ldrd	r2, [sp, #56]	; 0x38
   16e00:	strd	r2, [sp]
   16e04:	add	r3, sp, #48	; 0x30
   16e08:	ldm	r3, {r2, r3}
   16e0c:	ldr	r4, [r6, #16]
   16e10:	ldr	r0, [r6, #364]	; 0x16c
   16e14:	blx	r4
   16e18:	cmp	r0, #0
   16e1c:	beq	16d60 <sav_process_row+0x254>
   16e20:	mov	r0, #4
   16e24:	b	16e90 <sav_process_row+0x384>
   16e28:	vldr	d0, [sp, #64]	; 0x40
   16e2c:	bl	4508 <byteswap_double@plt>
   16e30:	vstr	d0, [sp, #64]	; 0x40
   16e34:	b	16d8c <sav_process_row+0x280>
   16e38:	ldrb	r3, [sp, #61]	; 0x3d
   16e3c:	orr	r3, r3, #1
   16e40:	strb	r3, [sp, #61]	; 0x3d
   16e44:	b	16db0 <sav_process_row+0x2a4>
   16e48:	ldrb	r3, [sp, #61]	; 0x3d
   16e4c:	orr	r3, r3, #1
   16e50:	strb	r3, [sp, #61]	; 0x3d
   16e54:	b	16dc4 <sav_process_row+0x2b8>
   16e58:	ldrb	r3, [sp, #61]	; 0x3d
   16e5c:	orr	r3, r3, #1
   16e60:	strb	r3, [sp, #61]	; 0x3d
   16e64:	b	16dd8 <sav_process_row+0x2cc>
   16e68:	ldrb	r3, [sp, #61]	; 0x3d
   16e6c:	orr	r3, r3, #1
   16e70:	strb	r3, [sp, #61]	; 0x3d
   16e74:	b	16de8 <sav_process_row+0x2dc>
   16e78:	mov	r0, #5
   16e7c:	b	16e90 <sav_process_row+0x384>
   16e80:	ldr	r3, [r6, #364]	; 0x16c
   16e84:	add	r3, r3, #1
   16e88:	str	r3, [r6, #364]	; 0x16c
   16e8c:	mov	r0, #0
   16e90:	add	sp, sp, #76	; 0x4c
   16e94:	ldrd	r4, [sp]
   16e98:	ldrd	r6, [sp, #8]
   16e9c:	ldrd	r8, [sp, #16]
   16ea0:	ldrd	sl, [sp, #24]
   16ea4:	add	sp, sp, #32
   16ea8:	pop	{pc}		; (ldr pc, [sp], #4)

00016eac <sav_parse_timestamp>:
   16eac:	strd	r4, [sp, #-16]!
   16eb0:	str	r6, [sp, #8]
   16eb4:	str	lr, [sp, #12]
   16eb8:	sub	sp, sp, #56	; 0x38
   16ebc:	mov	r4, r0
   16ec0:	mov	r6, r1
   16ec4:	mov	r3, #0
   16ec8:	str	r3, [sp, #12]
   16ecc:	add	r2, sp, #12
   16ed0:	str	r3, [r2, #4]
   16ed4:	str	r3, [r2, #8]
   16ed8:	str	r3, [r2, #12]
   16edc:	str	r3, [r2, #16]
   16ee0:	str	r3, [r2, #20]
   16ee4:	str	r3, [r2, #24]
   16ee8:	str	r3, [r2, #28]
   16eec:	str	r3, [r2, #36]	; 0x24
   16ef0:	str	r3, [r2, #40]	; 0x28
   16ef4:	mvn	r3, #0
   16ef8:	str	r3, [sp, #44]	; 0x2c
   16efc:	ldr	r3, [r0, #40]	; 0x28
   16f00:	str	r3, [sp]
   16f04:	ldr	r3, [r0, #24]
   16f08:	mov	r1, #8
   16f0c:	add	r0, r6, #101	; 0x65
   16f10:	bl	3ecc <sav_parse_time@plt>
   16f14:	subs	r5, r0, #0
   16f18:	beq	16f34 <sav_parse_timestamp+0x88>
   16f1c:	mov	r0, r5
   16f20:	add	sp, sp, #56	; 0x38
   16f24:	ldrd	r4, [sp]
   16f28:	ldr	r6, [sp, #8]
   16f2c:	add	sp, sp, #12
   16f30:	pop	{pc}		; (ldr pc, [sp], #4)
   16f34:	ldr	r3, [r4, #40]	; 0x28
   16f38:	str	r3, [sp]
   16f3c:	ldr	r3, [r4, #24]
   16f40:	add	r2, sp, #12
   16f44:	mov	r1, #9
   16f48:	add	r0, r6, #92	; 0x5c
   16f4c:	bl	407c <sav_parse_date@plt>
   16f50:	subs	r5, r0, #0
   16f54:	bne	16f1c <sav_parse_timestamp+0x70>
   16f58:	add	r0, sp, #12
   16f5c:	bl	3e48 <mktime@plt>
   16f60:	str	r0, [r4, #324]	; 0x144
   16f64:	b	16f1c <sav_parse_timestamp+0x70>

00016f68 <readstat_parse_sav>:
   16f68:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16f6c:	strd	r6, [sp, #8]
   16f70:	strd	r8, [sp, #16]
   16f74:	strd	sl, [sp, #24]
   16f78:	str	lr, [sp, #32]
   16f7c:	vpush	{d8-d11}
   16f80:	sub	sp, sp, #892	; 0x37c
   16f84:	mov	r4, r0
   16f88:	mov	r0, r1
   16f8c:	mov	r6, r2
   16f90:	ldr	sl, [r4, #32]
   16f94:	ldr	r3, [sl]
   16f98:	ldr	r1, [sl, #20]
   16f9c:	blx	r3
   16fa0:	cmn	r0, #1
   16fa4:	moveq	fp, #1
   16fa8:	beq	170d8 <readstat_parse_sav+0x170>
   16fac:	ldr	r3, [sl, #8]
   16fb0:	ldr	r2, [sl, #20]
   16fb4:	mov	r1, #2
   16fb8:	mov	r0, #0
   16fbc:	blx	r3
   16fc0:	mov	r5, r0
   16fc4:	cmn	r0, #1
   16fc8:	beq	18bc0 <readstat_parse_sav+0x1c58>
   16fcc:	ldr	r3, [sl, #8]
   16fd0:	ldr	r2, [sl, #20]
   16fd4:	mov	r1, #0
   16fd8:	mov	r0, r1
   16fdc:	blx	r3
   16fe0:	cmn	r0, #1
   16fe4:	beq	18bc8 <readstat_parse_sav+0x1c60>
   16fe8:	ldr	r3, [sl, #12]
   16fec:	ldr	r2, [sl, #20]
   16ff0:	mov	r1, #176	; 0xb0
   16ff4:	add	r0, sp, #712	; 0x2c8
   16ff8:	blx	r3
   16ffc:	cmp	r0, #175	; 0xaf
   17000:	movls	fp, #2
   17004:	bhi	17018 <readstat_parse_sav+0xb0>
   17008:	ldr	r3, [sl, #4]
   1700c:	ldr	r0, [sl, #20]
   17010:	blx	r3
   17014:	b	170d8 <readstat_parse_sav+0x170>
   17018:	mov	r1, sl
   1701c:	add	r0, sp, #712	; 0x2c8
   17020:	bl	404c <sav_ctx_init@plt>
   17024:	subs	r9, r0, #0
   17028:	beq	18bd0 <readstat_parse_sav+0x1c68>
   1702c:	ldrd	r2, [r4]
   17030:	strd	r2, [r9]
   17034:	ldrd	r2, [r4, #8]
   17038:	strd	r2, [r9, #8]
   1703c:	ldrd	r2, [r4, #16]
   17040:	strd	r2, [r9, #16]
   17044:	ldrd	r2, [r4, #24]
   17048:	strd	r2, [r9, #24]
   1704c:	ldr	r3, [r4, #36]	; 0x24
   17050:	str	r3, [r9, #56]	; 0x38
   17054:	ldr	r3, [r4, #40]	; 0x28
   17058:	str	r3, [r9, #60]	; 0x3c
   1705c:	str	r6, [r9, #40]	; 0x28
   17060:	str	r5, [r9, #32]
   17064:	ldr	r3, [r4, #48]	; 0x30
   17068:	cmp	r3, #0
   1706c:	strgt	r3, [r9, #360]	; 0x168
   17070:	ldr	r2, [r9, #352]	; 0x160
   17074:	cmn	r2, #1
   17078:	beq	1710c <readstat_parse_sav+0x1a4>
   1707c:	ldr	r3, [r9, #360]	; 0x168
   17080:	subs	r3, r2, r3
   17084:	bmi	170fc <readstat_parse_sav+0x194>
   17088:	str	r3, [r9, #356]	; 0x164
   1708c:	ldr	r2, [r4, #44]	; 0x2c
   17090:	cmp	r2, #0
   17094:	movle	r1, #0
   17098:	movgt	r1, #1
   1709c:	cmp	r2, r3
   170a0:	movge	r1, #0
   170a4:	cmp	r1, #0
   170a8:	movne	r3, r2
   170ac:	str	r3, [r9, #356]	; 0x164
   170b0:	add	r1, sp, #712	; 0x2c8
   170b4:	mov	r0, r9
   170b8:	bl	3de8 <sav_parse_timestamp@plt>
   170bc:	subs	fp, r0, #0
   170c0:	beq	1711c <readstat_parse_sav+0x1b4>
   170c4:	ldr	r3, [sl, #4]
   170c8:	ldr	r0, [sl, #20]
   170cc:	blx	r3
   170d0:	mov	r0, r9
   170d4:	bl	3f08 <sav_ctx_free@plt>
   170d8:	mov	r0, fp
   170dc:	add	sp, sp, #892	; 0x37c
   170e0:	vpop	{d8-d11}
   170e4:	ldrd	r4, [sp]
   170e8:	ldrd	r6, [sp, #8]
   170ec:	ldrd	r8, [sp, #16]
   170f0:	ldrd	sl, [sp, #24]
   170f4:	add	sp, sp, #32
   170f8:	pop	{pc}		; (ldr pc, [sp], #4)
   170fc:	str	r2, [r9, #360]	; 0x168
   17100:	mov	r3, #0
   17104:	str	r3, [r9, #356]	; 0x164
   17108:	b	170b0 <readstat_parse_sav+0x148>
   1710c:	ldr	r3, [r4, #44]	; 0x2c
   17110:	cmp	r3, #0
   17114:	strgt	r3, [r9, #356]	; 0x164
   17118:	b	170b0 <readstat_parse_sav+0x148>
   1711c:	mov	r0, r9
   17120:	bl	163a4 <sav_parse_records_pass1>
   17124:	subs	fp, r0, #0
   17128:	bne	170c4 <readstat_parse_sav+0x15c>
   1712c:	ldr	r3, [sl, #8]
   17130:	ldr	r2, [sl, #20]
   17134:	mov	r1, #0
   17138:	mov	r0, #176	; 0xb0
   1713c:	blx	r3
   17140:	cmn	r0, #1
   17144:	moveq	fp, #15
   17148:	beq	170c4 <readstat_parse_sav+0x15c>
   1714c:	mov	r0, r9
   17150:	bl	16240 <sav_update_progress>
   17154:	subs	fp, r0, #0
   17158:	bne	170c4 <readstat_parse_sav+0x15c>
   1715c:	ldr	r4, [r9, #36]	; 0x24
   17160:	mov	r0, #4096	; 0x1000
   17164:	bl	422c <readstat_malloc@plt>
   17168:	subs	r3, r0, #0
   1716c:	str	r3, [sp, #28]
   17170:	beq	18ba0 <readstat_parse_sav+0x1c38>
   17174:	mov	r3, #4096	; 0x1000
   17178:	str	r3, [sp, #40]	; 0x28
   1717c:	vldr	d11, [pc, #940]	; 17530 <readstat_parse_sav+0x5c8>
   17180:	vldr	d10, [pc, #944]	; 17538 <readstat_parse_sav+0x5d0>
   17184:	vldr	d9, [pc, #948]	; 17540 <readstat_parse_sav+0x5d8>
   17188:	vldr	d8, [pc, #952]	; 17548 <readstat_parse_sav+0x5e0>
   1718c:	str	sl, [sp, #24]
   17190:	str	fp, [sp, #20]
   17194:	mov	fp, r4
   17198:	ldr	r3, [fp, #12]
   1719c:	ldr	r2, [fp, #20]
   171a0:	mov	r1, #4
   171a4:	add	r0, sp, #68	; 0x44
   171a8:	blx	r3
   171ac:	cmp	r0, #3
   171b0:	bls	18644 <readstat_parse_sav+0x16dc>
   171b4:	ldrb	r3, [r9, #436]	; 0x1b4
   171b8:	tst	r3, #1
   171bc:	bne	17228 <readstat_parse_sav+0x2c0>
   171c0:	ldr	sl, [sp, #68]	; 0x44
   171c4:	cmp	sl, #6
   171c8:	beq	17d34 <readstat_parse_sav+0xdcc>
   171cc:	bls	17238 <readstat_parse_sav+0x2d0>
   171d0:	cmp	sl, #7
   171d4:	beq	17e28 <readstat_parse_sav+0xec0>
   171d8:	mov	r7, sl
   171dc:	ldr	sl, [sp, #24]
   171e0:	ldr	fp, [sp, #20]
   171e4:	movw	r3, #999	; 0x3e7
   171e8:	cmp	r7, r3
   171ec:	movne	r7, #5
   171f0:	bne	1735c <readstat_parse_sav+0x3f4>
   171f4:	ldr	r3, [r9, #36]	; 0x24
   171f8:	ldr	r4, [r3, #12]
   171fc:	ldr	r2, [r3, #20]
   17200:	mov	r1, #4
   17204:	add	r0, sp, #384	; 0x180
   17208:	blx	r4
   1720c:	cmp	r0, #3
   17210:	bls	18d58 <readstat_parse_sav+0x1df0>
   17214:	ldr	r3, [sp, #28]
   17218:	cmp	r3, #0
   1721c:	movne	r7, fp
   17220:	bne	17368 <readstat_parse_sav+0x400>
   17224:	b	17378 <readstat_parse_sav+0x410>
   17228:	ldr	r0, [sp, #68]	; 0x44
   1722c:	bl	3d88 <byteswap4@plt>
   17230:	str	r0, [sp, #68]	; 0x44
   17234:	b	171c0 <readstat_parse_sav+0x258>
   17238:	cmp	sl, #2
   1723c:	beq	1739c <readstat_parse_sav+0x434>
   17240:	cmp	sl, #3
   17244:	bne	17350 <readstat_parse_sav+0x3e8>
   17248:	ldr	r5, [r9, #36]	; 0x24
   1724c:	ldr	r3, [r5, #12]
   17250:	ldr	r2, [r5, #20]
   17254:	mov	r1, #4
   17258:	add	r0, sp, #72	; 0x48
   1725c:	blx	r3
   17260:	cmp	r0, #3
   17264:	bls	18c18 <readstat_parse_sav+0x1cb0>
   17268:	ldrb	r3, [r9, #436]	; 0x1b4
   1726c:	tst	r3, #1
   17270:	bne	178bc <readstat_parse_sav+0x954>
   17274:	ldr	r0, [sp, #72]	; 0x48
   17278:	cmp	r0, #0
   1727c:	moveq	r3, #0
   17280:	streq	r3, [sp, #44]	; 0x2c
   17284:	bne	178cc <readstat_parse_sav+0x964>
   17288:	ldr	r3, [r5, #12]
   1728c:	ldr	r2, [r5, #20]
   17290:	mov	r1, #4
   17294:	add	r0, sp, #88	; 0x58
   17298:	blx	r3
   1729c:	cmp	r0, #3
   172a0:	bls	18c48 <readstat_parse_sav+0x1ce0>
   172a4:	ldrb	r3, [r9, #436]	; 0x1b4
   172a8:	tst	r3, #1
   172ac:	bne	179e4 <readstat_parse_sav+0xa7c>
   172b0:	ldr	r3, [sp, #88]	; 0x58
   172b4:	cmp	r3, #4
   172b8:	bne	18c50 <readstat_parse_sav+0x1ce8>
   172bc:	ldr	r3, [r5, #12]
   172c0:	ldr	r2, [r5, #20]
   172c4:	mov	r1, #4
   172c8:	add	r0, sp, #76	; 0x4c
   172cc:	blx	r3
   172d0:	cmp	r0, #3
   172d4:	bls	18c58 <readstat_parse_sav+0x1cf0>
   172d8:	ldrb	r3, [r9, #436]	; 0x1b4
   172dc:	tst	r3, #1
   172e0:	bne	179f4 <readstat_parse_sav+0xa8c>
   172e4:	ldr	r0, [sp, #76]	; 0x4c
   172e8:	cmp	r0, #0
   172ec:	bne	17a04 <readstat_parse_sav+0xa9c>
   172f0:	ldr	r3, [r5, #12]
   172f4:	ldr	r2, [r5, #20]
   172f8:	mov	r1, #0
   172fc:	mov	r0, r1
   17300:	blx	r3
   17304:	ldr	r3, [sp, #76]	; 0x4c
   17308:	str	r3, [sp, #52]	; 0x34
   1730c:	cmp	r0, r3, lsl #2
   17310:	bcc	18e04 <readstat_parse_sav+0x1e9c>
   17314:	mov	r3, #0
   17318:	str	r3, [sp, #48]	; 0x30
   1731c:	ldr	r3, [sp, #52]	; 0x34
   17320:	cmp	r3, #0
   17324:	beq	17afc <readstat_parse_sav+0xb94>
   17328:	ldr	r3, [sp, #48]	; 0x30
   1732c:	sub	r3, r3, #4
   17330:	str	r3, [sp, #56]	; 0x38
   17334:	ldr	r3, [sp, #20]
   17338:	str	r3, [sp, #52]	; 0x34
   1733c:	mov	sl, #0
   17340:	str	r3, [sp, #60]	; 0x3c
   17344:	add	r3, sp, #384	; 0x180
   17348:	str	r3, [sp, #32]
   1734c:	b	17abc <readstat_parse_sav+0xb54>
   17350:	ldr	sl, [sp, #24]
   17354:	ldr	fp, [sp, #20]
   17358:	mov	r7, #5
   1735c:	ldr	r3, [sp, #28]
   17360:	cmp	r3, #0
   17364:	beq	18ba8 <readstat_parse_sav+0x1c40>
   17368:	ldr	r0, [sp, #28]
   1736c:	bl	3eb4 <free@plt>
   17370:	cmp	r7, #0
   17374:	bne	18bb0 <readstat_parse_sav+0x1c48>
   17378:	mov	r3, #0
   1737c:	str	r3, [r9, #348]	; 0x15c
   17380:	ldr	r3, [r9, #340]	; 0x154
   17384:	cmp	r3, #0
   17388:	ble	18714 <readstat_parse_sav+0x17ac>
   1738c:	mov	r1, #0
   17390:	movw	r0, #2081	; 0x821
   17394:	movt	r0, #8322	; 0x2082
   17398:	b	186e8 <readstat_parse_sav+0x1780>
   1739c:	ldr	r4, [r9, #36]	; 0x24
   173a0:	mov	r2, #0
   173a4:	str	r2, [sp, #384]	; 0x180
   173a8:	str	r2, [sp, #388]	; 0x184
   173ac:	str	r2, [sp, #392]	; 0x188
   173b0:	str	r2, [sp, #396]	; 0x18c
   173b4:	str	r2, [sp, #400]	; 0x190
   173b8:	str	r2, [sp, #404]	; 0x194
   173bc:	str	r2, [sp, #408]	; 0x198
   173c0:	ldr	r1, [r9, #48]	; 0x30
   173c4:	ldr	r3, [r9, #340]	; 0x154
   173c8:	cmp	r3, r1
   173cc:	beq	17460 <readstat_parse_sav+0x4f8>
   173d0:	ldr	r3, [r4, #12]
   173d4:	ldr	r2, [r4, #20]
   173d8:	mov	r1, #28
   173dc:	add	r0, sp, #384	; 0x180
   173e0:	blx	r3
   173e4:	cmp	r0, #27
   173e8:	bls	18ddc <readstat_parse_sav+0x1e74>
   173ec:	ldrb	r3, [r9, #436]	; 0x1b4
   173f0:	tst	r3, #1
   173f4:	bne	17490 <readstat_parse_sav+0x528>
   173f8:	ldr	r0, [sp, #396]	; 0x18c
   173fc:	str	r0, [sp, #396]	; 0x18c
   17400:	ldrb	r3, [r9, #436]	; 0x1b4
   17404:	tst	r3, #1
   17408:	bne	1749c <readstat_parse_sav+0x534>
   1740c:	ldr	r0, [sp, #400]	; 0x190
   17410:	str	r0, [sp, #400]	; 0x190
   17414:	ldrb	r3, [r9, #436]	; 0x1b4
   17418:	tst	r3, #1
   1741c:	bne	174a8 <readstat_parse_sav+0x540>
   17420:	ldr	r4, [sp, #384]	; 0x180
   17424:	cmp	r4, #0
   17428:	bge	174b8 <readstat_parse_sav+0x550>
   1742c:	ldr	r3, [r9, #340]	; 0x154
   17430:	cmp	r3, #0
   17434:	beq	18be4 <readstat_parse_sav+0x1c7c>
   17438:	ldr	r2, [r9, #344]	; 0x158
   1743c:	add	r2, r2, #1
   17440:	str	r2, [r9, #344]	; 0x158
   17444:	sub	r3, r3, #-1073741823	; 0xc0000001
   17448:	ldr	r2, [r9, #44]	; 0x2c
   1744c:	ldr	r2, [r2, r3, lsl #2]
   17450:	ldr	r3, [r2, #16]
   17454:	add	r3, r3, #1
   17458:	str	r3, [r2, #16]
   1745c:	b	17198 <readstat_parse_sav+0x230>
   17460:	lsl	r3, r1, #1
   17464:	str	r3, [r9, #48]	; 0x30
   17468:	lsl	r1, r1, #3
   1746c:	ldr	r0, [r9, #44]	; 0x2c
   17470:	bl	42e0 <readstat_realloc@plt>
   17474:	str	r0, [r9, #44]	; 0x2c
   17478:	cmp	r0, #0
   1747c:	bne	173d0 <readstat_parse_sav+0x468>
   17480:	ldr	sl, [sp, #24]
   17484:	ldr	fp, [sp, #20]
   17488:	mov	r7, #3
   1748c:	b	18de8 <readstat_parse_sav+0x1e80>
   17490:	ldr	r0, [sp, #396]	; 0x18c
   17494:	bl	3d88 <byteswap4@plt>
   17498:	b	173fc <readstat_parse_sav+0x494>
   1749c:	ldr	r0, [sp, #400]	; 0x190
   174a0:	bl	3d88 <byteswap4@plt>
   174a4:	b	17410 <readstat_parse_sav+0x4a8>
   174a8:	ldr	r0, [sp, #384]	; 0x180
   174ac:	bl	3d88 <byteswap4@plt>
   174b0:	mov	r4, r0
   174b4:	b	17424 <readstat_parse_sav+0x4bc>
   174b8:	mov	r1, #280	; 0x118
   174bc:	mov	r0, #1
   174c0:	bl	3fbc <readstat_calloc@plt>
   174c4:	subs	r8, r0, #0
   174c8:	beq	18dcc <readstat_parse_sav+0x1e64>
   174cc:	mov	r3, #1
   174d0:	str	r3, [r8, #16]
   174d4:	str	r3, [r8, #48]	; 0x30
   174d8:	ldr	r3, [r9, #340]	; 0x154
   174dc:	str	r3, [r8, #8]
   174e0:	ldr	r3, [r9, #344]	; 0x158
   174e4:	str	r3, [r8, #12]
   174e8:	mvn	r3, #0
   174ec:	str	r3, [r8, #4]
   174f0:	mov	r3, #0
   174f4:	str	r3, [sp]
   174f8:	mov	r3, #8
   174fc:	add	r2, sp, #404	; 0x194
   17500:	mov	r1, #9
   17504:	add	r0, r8, #187	; 0xbb
   17508:	bl	4238 <readstat_convert@plt>
   1750c:	cmp	r0, #0
   17510:	beq	17558 <readstat_parse_sav+0x5f0>
   17514:	ldr	sl, [sp, #24]
   17518:	mov	r5, r0
   1751c:	ldr	fp, [sp, #20]
   17520:	mov	r0, r8
   17524:	bl	4418 <spss_varinfo_free@plt>
   17528:	mov	r7, r5
   1752c:	b	1735c <readstat_parse_sav+0x3f4>
   17530:	.word	0x00000000
   17534:	.word	0x7ff80000
   17538:	.word	0x00000000
   1753c:	.word	0xfff00000
   17540:	.word	0x00000000
   17544:	.word	0x7ff00000
	...
   17550:	.word	0x0000f13c
   17554:	.word	0x0000ec90
   17558:	mov	r3, #0
   1755c:	str	r3, [sp]
   17560:	mov	r3, #8
   17564:	add	r2, sp, #404	; 0x194
   17568:	mov	r1, #65	; 0x41
   1756c:	add	r0, r8, #196	; 0xc4
   17570:	bl	4238 <readstat_convert@plt>
   17574:	cmp	r0, #0
   17578:	bne	18df4 <readstat_parse_sav+0x1e8c>
   1757c:	ldr	r3, [sp, #396]	; 0x18c
   17580:	uxtb	r2, r3
   17584:	str	r2, [r8, #32]
   17588:	ubfx	r2, r3, #8, #8
   1758c:	str	r2, [r8, #28]
   17590:	ubfx	r2, r3, #16, #8
   17594:	str	r2, [r8, #24]
   17598:	ldr	r3, [sp, #400]	; 0x190
   1759c:	uxtb	r1, r3
   175a0:	str	r1, [r8, #44]	; 0x2c
   175a4:	ubfx	r1, r3, #8, #8
   175a8:	str	r1, [r8, #40]	; 0x28
   175ac:	ubfx	r3, r3, #16, #8
   175b0:	str	r3, [r8, #36]	; 0x24
   175b4:	cmp	r2, #1
   175b8:	cmpne	r3, #1
   175bc:	moveq	r3, #1
   175c0:	movne	r3, #0
   175c4:	cmp	r4, #0
   175c8:	movle	r4, r3
   175cc:	orrgt	r4, r3, #1
   175d0:	cmp	r4, #0
   175d4:	moveq	r0, #5
   175d8:	str	r0, [r8]
   175dc:	ldr	r3, [sp, #388]	; 0x184
   175e0:	cmp	r3, #0
   175e4:	bne	176c4 <readstat_parse_sav+0x75c>
   175e8:	ldr	r0, [sp, #392]	; 0x188
   175ec:	cmp	r0, #0
   175f0:	beq	1769c <readstat_parse_sav+0x734>
   175f4:	ldrb	r3, [r9, #436]	; 0x1b4
   175f8:	tst	r3, #1
   175fc:	bne	177e0 <readstat_parse_sav+0x878>
   17600:	str	r0, [r8, #52]	; 0x34
   17604:	add	r3, r0, #3
   17608:	cmp	r3, #6
   1760c:	bhi	18bf4 <readstat_parse_sav+0x1c8c>
   17610:	cmp	r0, #0
   17614:	movge	r3, #0
   17618:	strge	r3, [r8, #56]	; 0x38
   1761c:	blt	177e8 <readstat_parse_sav+0x880>
   17620:	ldr	r3, [r8]
   17624:	cmp	r3, #5
   17628:	beq	17800 <readstat_parse_sav+0x898>
   1762c:	ldr	r5, [r9, #36]	; 0x24
   17630:	ldr	r3, [r8, #52]	; 0x34
   17634:	cmp	r3, #0
   17638:	ble	1769c <readstat_parse_sav+0x734>
   1763c:	add	r6, r8, #88	; 0x58
   17640:	mov	r4, #0
   17644:	add	r7, sp, #128	; 0x80
   17648:	ldr	r3, [r5, #12]
   1764c:	ldr	r2, [r5, #20]
   17650:	mov	r1, #8
   17654:	mov	r0, r7
   17658:	blx	r3
   1765c:	cmp	r0, #7
   17660:	bls	17788 <readstat_parse_sav+0x820>
   17664:	ldr	r3, [r9, #336]	; 0x150
   17668:	str	r3, [sp]
   1766c:	mov	r3, #8
   17670:	mov	r2, r7
   17674:	mov	r1, #33	; 0x21
   17678:	mov	r0, r6
   1767c:	bl	4238 <readstat_convert@plt>
   17680:	cmp	r0, #0
   17684:	bne	178b4 <readstat_parse_sav+0x94c>
   17688:	add	r4, r4, #1
   1768c:	add	r6, r6, #33	; 0x21
   17690:	ldr	r3, [r8, #52]	; 0x34
   17694:	cmp	r4, r3
   17698:	blt	17648 <readstat_parse_sav+0x6e0>
   1769c:	ldr	r2, [r9, #340]	; 0x154
   176a0:	ldr	r3, [r9, #44]	; 0x2c
   176a4:	str	r8, [r3, r2, lsl #2]
   176a8:	ldr	r3, [r9, #340]	; 0x154
   176ac:	add	r3, r3, #1
   176b0:	str	r3, [r9, #340]	; 0x154
   176b4:	ldr	r3, [r9, #344]	; 0x158
   176b8:	add	r3, r3, #1
   176bc:	str	r3, [r9, #344]	; 0x158
   176c0:	b	17198 <readstat_parse_sav+0x230>
   176c4:	ldr	r5, [r9, #36]	; 0x24
   176c8:	ldr	r3, [r5, #12]
   176cc:	ldr	r2, [r5, #20]
   176d0:	mov	r1, #4
   176d4:	add	r0, sp, #128	; 0x80
   176d8:	blx	r3
   176dc:	cmp	r0, #3
   176e0:	bls	17770 <readstat_parse_sav+0x808>
   176e4:	ldrb	r3, [r9, #436]	; 0x1b4
   176e8:	tst	r3, #1
   176ec:	ldreq	r0, [sp, #128]	; 0x80
   176f0:	bne	177a8 <readstat_parse_sav+0x840>
   176f4:	str	r0, [sp, #128]	; 0x80
   176f8:	cmp	r0, #0
   176fc:	beq	175e8 <readstat_parse_sav+0x680>
   17700:	add	r0, r0, #3
   17704:	bic	r6, r0, #3
   17708:	mov	r0, r6
   1770c:	bl	422c <readstat_malloc@plt>
   17710:	subs	r7, r0, #0
   17714:	beq	177d8 <readstat_parse_sav+0x870>
   17718:	ldr	r4, [sp, #128]	; 0x80
   1771c:	lsl	r4, r4, #2
   17720:	add	r4, r4, #1
   17724:	mov	r0, r4
   17728:	bl	422c <readstat_malloc@plt>
   1772c:	str	r0, [r8, #264]	; 0x108
   17730:	cmp	r0, #0
   17734:	moveq	r4, #3
   17738:	beq	1775c <readstat_parse_sav+0x7f4>
   1773c:	ldr	r3, [r5, #12]
   17740:	ldr	r2, [r5, #20]
   17744:	mov	r1, r6
   17748:	mov	r0, r7
   1774c:	blx	r3
   17750:	cmp	r6, r0
   17754:	movhi	r4, sl
   17758:	bls	177b4 <readstat_parse_sav+0x84c>
   1775c:	mov	r0, r7
   17760:	bl	3eb4 <free@plt>
   17764:	cmp	r4, #0
   17768:	movne	sl, r4
   1776c:	beq	175e8 <readstat_parse_sav+0x680>
   17770:	ldr	r0, [r8, #264]	; 0x108
   17774:	cmp	r0, #0
   17778:	beq	17788 <readstat_parse_sav+0x820>
   1777c:	bl	3eb4 <free@plt>
   17780:	mov	r3, #0
   17784:	str	r3, [r8, #264]	; 0x108
   17788:	mov	r0, r8
   1778c:	bl	4418 <spss_varinfo_free@plt>
   17790:	cmp	sl, #0
   17794:	beq	17198 <readstat_parse_sav+0x230>
   17798:	mov	r7, sl
   1779c:	ldr	sl, [sp, #24]
   177a0:	ldr	fp, [sp, #20]
   177a4:	b	1735c <readstat_parse_sav+0x3f4>
   177a8:	ldr	r0, [sp, #128]	; 0x80
   177ac:	bl	3d88 <byteswap4@plt>
   177b0:	b	176f4 <readstat_parse_sav+0x78c>
   177b4:	ldr	r3, [r9, #336]	; 0x150
   177b8:	str	r3, [sp]
   177bc:	ldr	r3, [sp, #128]	; 0x80
   177c0:	mov	r2, r7
   177c4:	mov	r1, r4
   177c8:	ldr	r0, [r8, #264]	; 0x108
   177cc:	bl	4238 <readstat_convert@plt>
   177d0:	mov	r4, r0
   177d4:	b	1775c <readstat_parse_sav+0x7f4>
   177d8:	mov	sl, #3
   177dc:	b	17770 <readstat_parse_sav+0x808>
   177e0:	bl	3d88 <byteswap4@plt>
   177e4:	b	17600 <readstat_parse_sav+0x698>
   177e8:	mov	r3, #1
   177ec:	str	r3, [r8, #56]	; 0x38
   177f0:	cmp	r0, #0
   177f4:	rsblt	r0, r0, #0
   177f8:	str	r0, [r8, #52]	; 0x34
   177fc:	b	17620 <readstat_parse_sav+0x6b8>
   17800:	ldr	r3, [r9, #36]	; 0x24
   17804:	ldr	r1, [r8, #52]	; 0x34
   17808:	ldr	r4, [r3, #12]
   1780c:	ldr	r2, [r3, #20]
   17810:	lsl	r1, r1, #3
   17814:	add	r0, r8, #64	; 0x40
   17818:	blx	r4
   1781c:	ldr	r3, [r8, #52]	; 0x34
   17820:	cmp	r0, r3, lsl #3
   17824:	bcc	18c08 <readstat_parse_sav+0x1ca0>
   17828:	add	r4, r8, #64	; 0x40
   1782c:	mov	r5, #0
   17830:	b	1788c <readstat_parse_sav+0x924>
   17834:	ldr	r2, [r4]
   17838:	ldr	r3, [r4, #4]
   1783c:	str	r2, [sp, #128]	; 0x80
   17840:	str	r3, [sp, #132]	; 0x84
   17844:	ldrd	r2, [sp, #128]	; 0x80
   17848:	add	r1, r9, #400	; 0x190
   1784c:	ldrd	r0, [r1, #-8]
   17850:	cmp	r1, r3
   17854:	cmpeq	r0, r2
   17858:	vstreq	d11, [r4]
   1785c:	add	r1, r9, #400	; 0x190
   17860:	ldrd	r0, [r1]
   17864:	cmp	r3, r1
   17868:	cmpeq	r2, r0
   1786c:	vstreq	d10, [r4]
   17870:	add	r1, r9, #416	; 0x1a0
   17874:	ldrd	r0, [r1, #-8]
   17878:	cmp	r3, r1
   1787c:	cmpeq	r2, r0
   17880:	vstreq	d9, [r4]
   17884:	add	r5, r5, #1
   17888:	add	r4, r4, #8
   1788c:	ldr	r3, [r8, #52]	; 0x34
   17890:	cmp	r5, r3
   17894:	bge	1769c <readstat_parse_sav+0x734>
   17898:	ldrb	r3, [r9, #436]	; 0x1b4
   1789c:	tst	r3, #1
   178a0:	beq	17834 <readstat_parse_sav+0x8cc>
   178a4:	vldr	d0, [r4]
   178a8:	bl	4508 <byteswap_double@plt>
   178ac:	vstr	d0, [r4]
   178b0:	b	17834 <readstat_parse_sav+0x8cc>
   178b4:	mov	sl, r0
   178b8:	b	17788 <readstat_parse_sav+0x820>
   178bc:	ldr	r0, [sp, #72]	; 0x48
   178c0:	bl	3d88 <byteswap4@plt>
   178c4:	str	r0, [sp, #72]	; 0x48
   178c8:	b	17274 <readstat_parse_sav+0x30c>
   178cc:	mov	r1, #72	; 0x48
   178d0:	bl	3fbc <readstat_calloc@plt>
   178d4:	subs	r3, r0, #0
   178d8:	mov	r7, r3
   178dc:	str	r3, [sp, #44]	; 0x2c
   178e0:	beq	18c24 <readstat_parse_sav+0x1cbc>
   178e4:	ldr	r3, [sp, #72]	; 0x48
   178e8:	cmp	r3, #0
   178ec:	beq	17288 <readstat_parse_sav+0x320>
   178f0:	mov	r8, #0
   178f4:	add	r3, sp, #384	; 0x180
   178f8:	str	r3, [sp, #32]
   178fc:	str	sl, [sp, #48]	; 0x30
   17900:	mov	r3, #0
   17904:	strb	r3, [sp, #384]	; 0x180
   17908:	ldr	r3, [r5, #12]
   1790c:	ldr	r2, [r5, #20]
   17910:	mov	r1, #8
   17914:	mov	r0, r7
   17918:	blx	r3
   1791c:	cmp	r0, #7
   17920:	ble	179c4 <readstat_parse_sav+0xa5c>
   17924:	ldr	r3, [r5, #12]
   17928:	ldr	r2, [r5, #20]
   1792c:	mov	r1, #1
   17930:	ldr	r0, [sp, #32]
   17934:	blx	r3
   17938:	cmp	r0, #0
   1793c:	ble	179cc <readstat_parse_sav+0xa64>
   17940:	ldrb	r4, [sp, #384]	; 0x180
   17944:	add	r4, r4, #8
   17948:	and	r4, r4, #504	; 0x1f8
   1794c:	sub	r4, r4, #1
   17950:	ldr	r3, [r5, #12]
   17954:	ldr	r2, [r5, #20]
   17958:	mov	r1, r4
   1795c:	add	r0, sp, #128	; 0x80
   17960:	blx	r3
   17964:	cmp	r4, r0
   17968:	bhi	179d4 <readstat_parse_sav+0xa6c>
   1796c:	lsl	r6, r4, #2
   17970:	add	r6, r6, #1
   17974:	mov	r0, r6
   17978:	bl	422c <readstat_malloc@plt>
   1797c:	str	r0, [r7, #64]	; 0x40
   17980:	cmp	r0, #0
   17984:	beq	18e0c <readstat_parse_sav+0x1ea4>
   17988:	ldr	r3, [r9, #336]	; 0x150
   1798c:	str	r3, [sp]
   17990:	mov	r3, r4
   17994:	add	r2, sp, #128	; 0x80
   17998:	mov	r1, r6
   1799c:	bl	4238 <readstat_convert@plt>
   179a0:	cmp	r0, #0
   179a4:	bne	179dc <readstat_parse_sav+0xa74>
   179a8:	add	r8, r8, #1
   179ac:	add	r7, r7, #72	; 0x48
   179b0:	ldr	r3, [sp, #72]	; 0x48
   179b4:	cmp	r8, r3
   179b8:	bcc	17900 <readstat_parse_sav+0x998>
   179bc:	ldr	sl, [sp, #48]	; 0x30
   179c0:	b	17288 <readstat_parse_sav+0x320>
   179c4:	mov	sl, #2
   179c8:	b	18c24 <readstat_parse_sav+0x1cbc>
   179cc:	mov	sl, #2
   179d0:	b	18c24 <readstat_parse_sav+0x1cbc>
   179d4:	mov	sl, #2
   179d8:	b	18c24 <readstat_parse_sav+0x1cbc>
   179dc:	mov	sl, r0
   179e0:	b	18c24 <readstat_parse_sav+0x1cbc>
   179e4:	ldr	r0, [sp, #88]	; 0x58
   179e8:	bl	3d88 <byteswap4@plt>
   179ec:	str	r0, [sp, #88]	; 0x58
   179f0:	b	172b0 <readstat_parse_sav+0x348>
   179f4:	ldr	r0, [sp, #76]	; 0x4c
   179f8:	bl	3d88 <byteswap4@plt>
   179fc:	str	r0, [sp, #76]	; 0x4c
   17a00:	b	172e4 <readstat_parse_sav+0x37c>
   17a04:	lsl	r0, r0, #2
   17a08:	bl	422c <readstat_malloc@plt>
   17a0c:	subs	r3, r0, #0
   17a10:	str	r3, [sp, #48]	; 0x30
   17a14:	beq	18c24 <readstat_parse_sav+0x1cbc>
   17a18:	ldr	r3, [r5, #12]
   17a1c:	ldr	r2, [r5, #20]
   17a20:	ldr	r1, [sp, #76]	; 0x4c
   17a24:	lsl	r1, r1, #2
   17a28:	ldr	r0, [sp, #48]	; 0x30
   17a2c:	blx	r3
   17a30:	ldr	r3, [sp, #76]	; 0x4c
   17a34:	str	r3, [sp, #52]	; 0x34
   17a38:	cmp	r0, r3, lsl #2
   17a3c:	movcc	sl, #2
   17a40:	bcc	17ccc <readstat_parse_sav+0xd64>
   17a44:	b	1731c <readstat_parse_sav+0x3b4>
   17a48:	bl	3d88 <byteswap4@plt>
   17a4c:	str	r0, [sp, #384]	; 0x180
   17a50:	b	17ad8 <readstat_parse_sav+0xb70>
   17a54:	mov	r6, r4
   17a58:	cmp	r6, r5
   17a5c:	bls	17aac <readstat_parse_sav+0xb44>
   17a60:	add	r4, r5, r6
   17a64:	lsr	r4, r4, #1
   17a68:	add	r7, r8, r4, lsl #2
   17a6c:	mov	r1, r7
   17a70:	ldr	r0, [sp, #32]
   17a74:	bl	4208 <spss_varinfo_compare@plt>
   17a78:	cmp	r0, #0
   17a7c:	blt	17a54 <readstat_parse_sav+0xaec>
   17a80:	ble	17a8c <readstat_parse_sav+0xb24>
   17a84:	add	r5, r4, #1
   17a88:	b	17a58 <readstat_parse_sav+0xaf0>
   17a8c:	cmp	r7, #0
   17a90:	beq	17aac <readstat_parse_sav+0xb44>
   17a94:	ldr	r3, [r7]
   17a98:	ldr	r2, [r9, #368]	; 0x170
   17a9c:	str	r2, [r3, #4]
   17aa0:	ldr	r3, [r7]
   17aa4:	ldr	r3, [r3]
   17aa8:	str	r3, [sp, #52]	; 0x34
   17aac:	add	sl, sl, #1
   17ab0:	ldr	r3, [sp, #76]	; 0x4c
   17ab4:	cmp	r3, sl
   17ab8:	bls	17afc <readstat_parse_sav+0xb94>
   17abc:	ldr	r3, [sp, #56]	; 0x38
   17ac0:	ldr	r0, [r3, #4]!
   17ac4:	str	r3, [sp, #56]	; 0x38
   17ac8:	str	r0, [sp, #384]	; 0x180
   17acc:	ldrb	r3, [r9, #436]	; 0x1b4
   17ad0:	tst	r3, #1
   17ad4:	bne	17a48 <readstat_parse_sav+0xae0>
   17ad8:	ldr	r3, [sp, #384]	; 0x180
   17adc:	sub	r3, r3, #1
   17ae0:	str	r3, [sp, #384]	; 0x180
   17ae4:	ldr	r8, [r9, #44]	; 0x2c
   17ae8:	ldr	r6, [r9, #340]	; 0x154
   17aec:	cmp	r6, #0
   17af0:	beq	17aac <readstat_parse_sav+0xb44>
   17af4:	ldr	r5, [sp, #60]	; 0x3c
   17af8:	b	17a60 <readstat_parse_sav+0xaf8>
   17afc:	ldr	sl, [sp, #72]	; 0x48
   17b00:	cmp	sl, #0
   17b04:	beq	18c60 <readstat_parse_sav+0x1cf8>
   17b08:	ldr	r8, [sp, #44]	; 0x2c
   17b0c:	mov	r7, r8
   17b10:	mov	r6, #0
   17b14:	ldr	r5, [sp, #52]	; 0x34
   17b18:	b	17bb0 <readstat_parse_sav+0xc48>
   17b1c:	ldr	r2, [r8]
   17b20:	ldr	r3, [r8, #4]
   17b24:	str	r2, [sp, #384]	; 0x180
   17b28:	str	r3, [sp, #388]	; 0x184
   17b2c:	ldrb	r3, [r9, #436]	; 0x1b4
   17b30:	tst	r3, #1
   17b34:	bne	17bf4 <readstat_parse_sav+0xc8c>
   17b38:	vldr	d7, [sp, #384]	; 0x180
   17b3c:	vstr	d7, [sp, #32]
   17b40:	vstr	d7, [r4, #48]	; 0x30
   17b44:	ldrd	r2, [sp, #32]
   17b48:	add	r1, r9, #400	; 0x190
   17b4c:	ldrd	r0, [r1, #-8]
   17b50:	cmp	r3, r1
   17b54:	cmpeq	r2, r0
   17b58:	beq	17c04 <readstat_parse_sav+0xc9c>
   17b5c:	add	r1, r9, #400	; 0x190
   17b60:	ldrd	r0, [r1]
   17b64:	cmp	r3, r1
   17b68:	cmpeq	r2, r0
   17b6c:	beq	17c14 <readstat_parse_sav+0xcac>
   17b70:	add	r1, r9, #416	; 0x1a0
   17b74:	ldrd	r0, [r1, #-8]
   17b78:	cmp	r3, r1
   17b7c:	cmpeq	r2, r0
   17b80:	beq	17c24 <readstat_parse_sav+0xcbc>
   17b84:	vldr	d7, [sp, #32]
   17b88:	vcmp.f64	d7, d7
   17b8c:	vmrs	APSR_nzcv, fpscr
   17b90:	ldrbvs	r3, [r4, #61]	; 0x3d
   17b94:	orrvs	r3, r3, #1
   17b98:	strbvs	r3, [r4, #61]	; 0x3d
   17b9c:	add	r6, r6, #1
   17ba0:	add	r8, r8, #72	; 0x48
   17ba4:	ldr	r3, [sp, #72]	; 0x48
   17ba8:	cmp	r3, r6
   17bac:	bls	17c34 <readstat_parse_sav+0xccc>
   17bb0:	mov	r4, r8
   17bb4:	vstr	d8, [sp, #384]	; 0x180
   17bb8:	str	r5, [r8, #56]	; 0x38
   17bbc:	cmp	r5, #5
   17bc0:	beq	17b1c <readstat_parse_sav+0xbb4>
   17bc4:	add	sl, r8, #8
   17bc8:	ldr	r3, [r9, #336]	; 0x150
   17bcc:	str	r3, [sp]
   17bd0:	mov	r3, #8
   17bd4:	mov	r2, r8
   17bd8:	mov	r1, #33	; 0x21
   17bdc:	mov	r0, sl
   17be0:	bl	4238 <readstat_convert@plt>
   17be4:	cmp	r0, #0
   17be8:	bne	17ce4 <readstat_parse_sav+0xd7c>
   17bec:	str	sl, [r8, #48]	; 0x30
   17bf0:	b	17b9c <readstat_parse_sav+0xc34>
   17bf4:	vldr	d0, [sp, #384]	; 0x180
   17bf8:	bl	4508 <byteswap_double@plt>
   17bfc:	vstr	d0, [sp, #384]	; 0x180
   17c00:	b	17b38 <readstat_parse_sav+0xbd0>
   17c04:	ldrb	r1, [r4, #61]	; 0x3d
   17c08:	orr	r1, r1, #1
   17c0c:	strb	r1, [r4, #61]	; 0x3d
   17c10:	b	17b5c <readstat_parse_sav+0xbf4>
   17c14:	ldrb	r1, [r4, #61]	; 0x3d
   17c18:	orr	r1, r1, #1
   17c1c:	strb	r1, [r4, #61]	; 0x3d
   17c20:	b	17b70 <readstat_parse_sav+0xc08>
   17c24:	ldrb	r3, [r4, #61]	; 0x3d
   17c28:	orr	r3, r3, #1
   17c2c:	strb	r3, [r4, #61]	; 0x3d
   17c30:	b	17b84 <readstat_parse_sav+0xc1c>
   17c34:	ldr	sl, [sp, #20]
   17c38:	ldr	r3, [r9, #20]
   17c3c:	cmp	r3, #0
   17c40:	beq	17cb4 <readstat_parse_sav+0xd4c>
   17c44:	ldr	r5, [sp, #72]	; 0x48
   17c48:	ldr	r3, [r9, #368]	; 0x170
   17c4c:	ldr	r2, [pc, #-1796]	; 17550 <readstat_parse_sav+0x5e8>
   17c50:	add	r2, pc, r2
   17c54:	mov	r1, #256	; 0x100
   17c58:	add	r0, sp, #384	; 0x180
   17c5c:	bl	4280 <snprintf@plt>
   17c60:	cmp	r5, #0
   17c64:	ble	17cb4 <readstat_parse_sav+0xd4c>
   17c68:	mov	r4, #0
   17c6c:	add	r6, sp, #384	; 0x180
   17c70:	ldr	r3, [r9, #40]	; 0x28
   17c74:	str	r3, [sp, #12]
   17c78:	ldr	r3, [r7, #64]	; 0x40
   17c7c:	str	r3, [sp, #8]
   17c80:	ldrd	r2, [r7, #56]	; 0x38
   17c84:	strd	r2, [sp]
   17c88:	add	r3, r7, #48	; 0x30
   17c8c:	ldm	r3, {r2, r3}
   17c90:	ldr	r1, [r9, #20]
   17c94:	mov	r0, r6
   17c98:	blx	r1
   17c9c:	cmp	r0, #0
   17ca0:	bne	17cb4 <readstat_parse_sav+0xd4c>
   17ca4:	add	r4, r4, #1
   17ca8:	add	r7, r7, #72	; 0x48
   17cac:	cmp	r5, r4
   17cb0:	bne	17c70 <readstat_parse_sav+0xd08>
   17cb4:	ldr	r3, [r9, #368]	; 0x170
   17cb8:	add	r3, r3, #1
   17cbc:	str	r3, [r9, #368]	; 0x170
   17cc0:	ldr	r3, [sp, #48]	; 0x30
   17cc4:	cmp	r3, #0
   17cc8:	beq	17cd4 <readstat_parse_sav+0xd6c>
   17ccc:	ldr	r0, [sp, #48]	; 0x30
   17cd0:	bl	3eb4 <free@plt>
   17cd4:	ldr	r3, [sp, #44]	; 0x2c
   17cd8:	cmp	r3, #0
   17cdc:	beq	17d1c <readstat_parse_sav+0xdb4>
   17ce0:	b	18c30 <readstat_parse_sav+0x1cc8>
   17ce4:	mov	sl, r0
   17ce8:	b	17c38 <readstat_parse_sav+0xcd0>
   17cec:	add	r4, r4, #1
   17cf0:	add	r5, r5, #72	; 0x48
   17cf4:	ldr	r3, [sp, #72]	; 0x48
   17cf8:	cmp	r3, r4
   17cfc:	bls	17d14 <readstat_parse_sav+0xdac>
   17d00:	ldr	r0, [r5, #64]	; 0x40
   17d04:	cmp	r0, #0
   17d08:	beq	17cec <readstat_parse_sav+0xd84>
   17d0c:	bl	3eb4 <free@plt>
   17d10:	b	17cec <readstat_parse_sav+0xd84>
   17d14:	ldr	r0, [sp, #44]	; 0x2c
   17d18:	bl	3eb4 <free@plt>
   17d1c:	cmp	sl, #0
   17d20:	beq	17198 <readstat_parse_sav+0x230>
   17d24:	mov	r7, sl
   17d28:	ldr	sl, [sp, #24]
   17d2c:	ldr	fp, [sp, #20]
   17d30:	b	1735c <readstat_parse_sav+0x3f4>
   17d34:	ldr	r3, [r9, #4]
   17d38:	cmp	r3, #0
   17d3c:	beq	17df8 <readstat_parse_sav+0xe90>
   17d40:	ldr	r5, [r9, #36]	; 0x24
   17d44:	ldr	r3, [r5, #12]
   17d48:	ldr	r2, [r5, #20]
   17d4c:	mov	r1, #4
   17d50:	add	r0, sp, #88	; 0x58
   17d54:	blx	r3
   17d58:	cmp	r0, #3
   17d5c:	bls	18c88 <readstat_parse_sav+0x1d20>
   17d60:	ldrb	r3, [r9, #436]	; 0x1b4
   17d64:	tst	r3, #1
   17d68:	bne	17e18 <readstat_parse_sav+0xeb0>
   17d6c:	ldr	r3, [sp, #88]	; 0x58
   17d70:	cmp	r3, #0
   17d74:	movne	r4, #0
   17d78:	addne	r7, sp, #128	; 0x80
   17d7c:	movne	r6, #80	; 0x50
   17d80:	addne	r8, sp, #384	; 0x180
   17d84:	beq	17198 <readstat_parse_sav+0x230>
   17d88:	ldr	r3, [r5, #12]
   17d8c:	ldr	r2, [r5, #20]
   17d90:	mov	r1, r6
   17d94:	mov	r0, r7
   17d98:	blx	r3
   17d9c:	cmp	r0, #79	; 0x4f
   17da0:	ble	18c98 <readstat_parse_sav+0x1d30>
   17da4:	ldr	r3, [r9, #336]	; 0x150
   17da8:	str	r3, [sp]
   17dac:	mov	r3, r6
   17db0:	mov	r2, r7
   17db4:	movw	r1, #321	; 0x141
   17db8:	mov	r0, r8
   17dbc:	bl	4238 <readstat_convert@plt>
   17dc0:	cmp	r0, #0
   17dc4:	bne	186a4 <readstat_parse_sav+0x173c>
   17dc8:	ldr	r3, [r9, #4]
   17dcc:	ldr	r2, [r9, #40]	; 0x28
   17dd0:	mov	r1, r8
   17dd4:	mov	r0, r4
   17dd8:	blx	r3
   17ddc:	cmp	r0, #0
   17de0:	bne	18ca8 <readstat_parse_sav+0x1d40>
   17de4:	add	r4, r4, #1
   17de8:	ldr	r3, [sp, #88]	; 0x58
   17dec:	cmp	r4, r3
   17df0:	bcc	17d88 <readstat_parse_sav+0xe20>
   17df4:	b	17198 <readstat_parse_sav+0x230>
   17df8:	mov	r0, r9
   17dfc:	bl	16270 <sav_skip_document_record>
   17e00:	subs	sl, r0, #0
   17e04:	beq	17198 <readstat_parse_sav+0x230>
   17e08:	mov	r7, sl
   17e0c:	ldr	sl, [sp, #24]
   17e10:	ldr	fp, [sp, #20]
   17e14:	b	1735c <readstat_parse_sav+0x3f4>
   17e18:	ldr	r0, [sp, #88]	; 0x58
   17e1c:	bl	3d88 <byteswap4@plt>
   17e20:	str	r0, [sp, #88]	; 0x58
   17e24:	b	17d6c <readstat_parse_sav+0xe04>
   17e28:	ldr	r3, [fp, #12]
   17e2c:	ldr	r2, [fp, #20]
   17e30:	mov	r1, #12
   17e34:	add	r0, sp, #76	; 0x4c
   17e38:	blx	r3
   17e3c:	cmp	r0, #11
   17e40:	bls	18654 <readstat_parse_sav+0x16ec>
   17e44:	ldrb	r3, [r9, #436]	; 0x1b4
   17e48:	tst	r3, #1
   17e4c:	bne	17eec <readstat_parse_sav+0xf84>
   17e50:	ldr	r6, [sp, #76]	; 0x4c
   17e54:	ldr	r5, [sp, #80]	; 0x50
   17e58:	ldr	r4, [sp, #84]	; 0x54
   17e5c:	mul	r8, r4, r5
   17e60:	ldr	r3, [sp, #40]	; 0x28
   17e64:	cmp	r8, r3
   17e68:	bhi	17f0c <readstat_parse_sav+0xfa4>
   17e6c:	cmp	r8, #0
   17e70:	beq	18674 <readstat_parse_sav+0x170c>
   17e74:	ldr	r3, [fp, #12]
   17e78:	ldr	r2, [fp, #20]
   17e7c:	mov	r1, r8
   17e80:	ldr	r0, [sp, #28]
   17e84:	blx	r3
   17e88:	cmp	r8, r0
   17e8c:	bhi	18684 <readstat_parse_sav+0x171c>
   17e90:	sub	r3, r6, #4
   17e94:	cmp	r3, #18
   17e98:	addls	pc, pc, r3, lsl #2
   17e9c:	b	17198 <readstat_parse_sav+0x230>
   17ea0:	b	17f2c <readstat_parse_sav+0xfc4>
   17ea4:	b	17198 <readstat_parse_sav+0x230>
   17ea8:	b	17198 <readstat_parse_sav+0x230>
   17eac:	b	17198 <readstat_parse_sav+0x230>
   17eb0:	b	17198 <readstat_parse_sav+0x230>
   17eb4:	b	17198 <readstat_parse_sav+0x230>
   17eb8:	b	17198 <readstat_parse_sav+0x230>
   17ebc:	b	17ff0 <readstat_parse_sav+0x1088>
   17ec0:	b	17198 <readstat_parse_sav+0x230>
   17ec4:	b	18078 <readstat_parse_sav+0x1110>
   17ec8:	b	180a0 <readstat_parse_sav+0x1138>
   17ecc:	b	17198 <readstat_parse_sav+0x230>
   17ed0:	b	17198 <readstat_parse_sav+0x230>
   17ed4:	b	17198 <readstat_parse_sav+0x230>
   17ed8:	b	17198 <readstat_parse_sav+0x230>
   17edc:	b	17198 <readstat_parse_sav+0x230>
   17ee0:	b	17198 <readstat_parse_sav+0x230>
   17ee4:	b	180c8 <readstat_parse_sav+0x1160>
   17ee8:	b	184b4 <readstat_parse_sav+0x154c>
   17eec:	add	r5, sp, #76	; 0x4c
   17ef0:	mov	r4, #3
   17ef4:	ldr	r0, [r5]
   17ef8:	bl	3d88 <byteswap4@plt>
   17efc:	str	r0, [r5], #4
   17f00:	subs	r4, r4, #1
   17f04:	bne	17ef4 <readstat_parse_sav+0xf8c>
   17f08:	b	17e50 <readstat_parse_sav+0xee8>
   17f0c:	mov	r1, r8
   17f10:	ldr	r0, [sp, #28]
   17f14:	bl	42e0 <readstat_realloc@plt>
   17f18:	subs	r3, r0, #0
   17f1c:	str	r3, [sp, #28]
   17f20:	beq	18664 <readstat_parse_sav+0x16fc>
   17f24:	str	r8, [sp, #40]	; 0x28
   17f28:	b	17e6c <readstat_parse_sav+0xf04>
   17f2c:	cmp	r4, #3
   17f30:	cmpeq	r5, #8
   17f34:	bne	18694 <readstat_parse_sav+0x172c>
   17f38:	ldr	r0, [sp, #28]
   17f3c:	ldr	r1, [r0]
   17f40:	ldr	r2, [r0, #4]
   17f44:	str	r1, [sp, #104]	; 0x68
   17f48:	str	r2, [sp, #108]	; 0x6c
   17f4c:	ldr	r1, [r0, #8]
   17f50:	ldr	r2, [r0, #12]
   17f54:	str	r1, [sp, #112]	; 0x70
   17f58:	str	r2, [sp, #116]	; 0x74
   17f5c:	ldr	r1, [r0, #16]
   17f60:	ldr	r2, [r0, #20]
   17f64:	str	r1, [sp, #120]	; 0x78
   17f68:	str	r2, [sp, #124]	; 0x7c
   17f6c:	ldrd	r0, [sp, #104]	; 0x68
   17f70:	ldrd	r4, [sp, #112]	; 0x70
   17f74:	ldrd	r6, [sp, #120]	; 0x78
   17f78:	ldrb	r3, [r9, #436]	; 0x1b4
   17f7c:	tst	r3, #1
   17f80:	bne	17fb8 <readstat_parse_sav+0x1050>
   17f84:	add	r3, r9, #400	; 0x190
   17f88:	strd	r0, [r3, #-8]
   17f8c:	ldrb	r3, [r9, #436]	; 0x1b4
   17f90:	tst	r3, #1
   17f94:	bne	17fc0 <readstat_parse_sav+0x1058>
   17f98:	add	r3, r9, #416	; 0x1a0
   17f9c:	strd	r4, [r3, #-8]
   17fa0:	ldrb	r3, [r9, #436]	; 0x1b4
   17fa4:	tst	r3, #1
   17fa8:	bne	17fd8 <readstat_parse_sav+0x1070>
   17fac:	add	r3, r9, #400	; 0x190
   17fb0:	strd	r6, [r3]
   17fb4:	b	17198 <readstat_parse_sav+0x230>
   17fb8:	bl	3d70 <byteswap8@plt>
   17fbc:	b	17f84 <readstat_parse_sav+0x101c>
   17fc0:	mov	r0, r4
   17fc4:	mov	r1, r5
   17fc8:	bl	3d70 <byteswap8@plt>
   17fcc:	mov	r4, r0
   17fd0:	mov	r5, r1
   17fd4:	b	17f98 <readstat_parse_sav+0x1030>
   17fd8:	mov	r0, r6
   17fdc:	mov	r1, r7
   17fe0:	bl	3d70 <byteswap8@plt>
   17fe4:	mov	r6, r0
   17fe8:	mov	r7, r1
   17fec:	b	17fac <readstat_parse_sav+0x1044>
   17ff0:	cmp	r5, #4
   17ff4:	beq	18008 <readstat_parse_sav+0x10a0>
   17ff8:	ldr	sl, [sp, #24]
   17ffc:	ldr	fp, [sp, #20]
   18000:	mov	r7, #5
   18004:	b	1735c <readstat_parse_sav+0x3f4>
   18008:	lsl	r1, r4, #2
   1800c:	ldr	r0, [r9, #328]	; 0x148
   18010:	bl	42e0 <readstat_realloc@plt>
   18014:	str	r0, [r9, #328]	; 0x148
   18018:	clz	r3, r0
   1801c:	lsr	r3, r3, #5
   18020:	cmp	r4, #0
   18024:	moveq	r3, #0
   18028:	cmp	r3, #0
   1802c:	bne	18d38 <readstat_parse_sav+0x1dd0>
   18030:	str	r4, [r9, #332]	; 0x14c
   18034:	cmp	r4, #0
   18038:	beq	17198 <readstat_parse_sav+0x230>
   1803c:	mov	r5, #0
   18040:	ldr	r6, [sp, #28]
   18044:	b	18064 <readstat_parse_sav+0x10fc>
   18048:	ldr	r0, [r6, r5, lsl #2]
   1804c:	bl	3d88 <byteswap4@plt>
   18050:	ldr	r3, [r9, #328]	; 0x148
   18054:	str	r0, [r3, r5, lsl #2]
   18058:	add	r5, r5, #1
   1805c:	cmp	r5, r4
   18060:	beq	17198 <readstat_parse_sav+0x230>
   18064:	ldrb	r3, [r9, #436]	; 0x1b4
   18068:	tst	r3, #1
   1806c:	bne	18048 <readstat_parse_sav+0x10e0>
   18070:	ldr	r0, [r6, r5, lsl #2]
   18074:	b	18050 <readstat_parse_sav+0x10e8>
   18078:	mov	r2, r9
   1807c:	mov	r1, r4
   18080:	ldr	r0, [sp, #28]
   18084:	bl	41f0 <sav_parse_long_variable_names_record@plt>
   18088:	subs	sl, r0, #0
   1808c:	beq	17198 <readstat_parse_sav+0x230>
   18090:	mov	r7, sl
   18094:	ldr	sl, [sp, #24]
   18098:	ldr	fp, [sp, #20]
   1809c:	b	1735c <readstat_parse_sav+0x3f4>
   180a0:	mov	r2, r9
   180a4:	mov	r1, r4
   180a8:	ldr	r0, [sp, #28]
   180ac:	bl	42d4 <sav_parse_very_long_string_record@plt>
   180b0:	subs	sl, r0, #0
   180b4:	beq	17198 <readstat_parse_sav+0x230>
   180b8:	mov	r7, sl
   180bc:	ldr	sl, [sp, #24]
   180c0:	ldr	fp, [sp, #20]
   180c4:	b	1735c <readstat_parse_sav+0x3f4>
   180c8:	ldr	r3, [r9, #20]
   180cc:	cmp	r3, #0
   180d0:	beq	17198 <readstat_parse_sav+0x230>
   180d4:	cmp	r5, #1
   180d8:	bne	18d48 <readstat_parse_sav+0x1de0>
   180dc:	ldr	r3, [sp, #28]
   180e0:	str	r3, [sp, #72]	; 0x48
   180e4:	add	r7, r3, r8
   180e8:	mov	r3, #0
   180ec:	str	r3, [sp, #48]	; 0x30
   180f0:	str	r3, [sp, #44]	; 0x2c
   180f4:	mov	r6, r3
   180f8:	ldr	r3, [pc, #-2988]	; 17554 <readstat_parse_sav+0x5ec>
   180fc:	add	r3, pc, r3
   18100:	str	r3, [sp, #60]	; 0x3c
   18104:	str	fp, [sp, #32]
   18108:	ldr	sl, [sp, #72]	; 0x48
   1810c:	cmp	r7, sl
   18110:	bls	1847c <readstat_parse_sav+0x1514>
   18114:	mov	r2, #256	; 0x100
   18118:	mov	r1, r6
   1811c:	add	r0, sp, #128	; 0x80
   18120:	bl	42a4 <memset@plt>
   18124:	str	r9, [sp]
   18128:	sub	r3, r7, sl
   1812c:	add	r2, sp, #72	; 0x48
   18130:	movw	r1, #257	; 0x101
   18134:	add	r0, sp, #384	; 0x180
   18138:	bl	162f8 <sav_read_pascal_string>
   1813c:	subs	sl, r0, #0
   18140:	bne	184ac <readstat_parse_sav+0x1544>
   18144:	ldr	fp, [r9, #340]	; 0x154
   18148:	cmp	fp, #0
   1814c:	beq	181ac <readstat_parse_sav+0x1244>
   18150:	ldr	r8, [r9, #44]	; 0x2c
   18154:	mov	r4, sl
   18158:	add	r3, sp, #384	; 0x180
   1815c:	str	r3, [sp, #52]	; 0x34
   18160:	ldr	r5, [r8, r4, lsl #2]
   18164:	add	r1, r5, #196	; 0xc4
   18168:	ldr	r0, [sp, #52]	; 0x34
   1816c:	bl	3df4 <strcmp@plt>
   18170:	cmp	r0, #0
   18174:	beq	1818c <readstat_parse_sav+0x1224>
   18178:	ldr	r3, [r5, #48]	; 0x30
   1817c:	add	r4, r4, r3
   18180:	cmp	r4, fp
   18184:	bcc	18160 <readstat_parse_sav+0x11f8>
   18188:	b	181ac <readstat_parse_sav+0x1244>
   1818c:	ldr	r3, [r9, #368]	; 0x170
   18190:	add	r2, r3, #1
   18194:	str	r2, [r9, #368]	; 0x170
   18198:	str	r3, [r5, #4]
   1819c:	ldr	r2, [sp, #60]	; 0x3c
   181a0:	mov	r1, #256	; 0x100
   181a4:	add	r0, sp, #128	; 0x80
   181a8:	bl	4280 <snprintf@plt>
   181ac:	ldrb	r3, [sp, #128]	; 0x80
   181b0:	cmp	r3, #0
   181b4:	beq	18494 <readstat_parse_sav+0x152c>
   181b8:	ldr	r3, [sp, #72]	; 0x48
   181bc:	add	r2, r3, #4
   181c0:	str	r2, [sp, #72]	; 0x48
   181c4:	add	r2, r3, #8
   181c8:	cmp	r7, r2
   181cc:	bcc	184a0 <readstat_parse_sav+0x1538>
   181d0:	ldr	fp, [r3, #4]
   181d4:	ldrb	r3, [r9, #436]	; 0x1b4
   181d8:	tst	r3, #1
   181dc:	bne	18218 <readstat_parse_sav+0x12b0>
   181e0:	ldr	r2, [sp, #72]	; 0x48
   181e4:	add	r3, r2, #4
   181e8:	str	r3, [sp, #72]	; 0x48
   181ec:	cmp	fp, #0
   181f0:	beq	18108 <readstat_parse_sav+0x11a0>
   181f4:	add	r2, r2, #8
   181f8:	cmp	r7, r2
   181fc:	bcc	18458 <readstat_parse_sav+0x14f0>
   18200:	add	r2, sp, #128	; 0x80
   18204:	str	r2, [sp, #52]	; 0x34
   18208:	add	r5, sp, #96	; 0x60
   1820c:	str	fp, [sp, #56]	; 0x38
   18210:	ldr	fp, [sp, #44]	; 0x2c
   18214:	b	18300 <readstat_parse_sav+0x1398>
   18218:	mov	r0, fp
   1821c:	bl	3d88 <byteswap4@plt>
   18220:	mov	fp, r0
   18224:	b	181e0 <readstat_parse_sav+0x1278>
   18228:	mov	r0, r4
   1822c:	bl	3d88 <byteswap4@plt>
   18230:	mov	r4, r0
   18234:	b	18310 <readstat_parse_sav+0x13a8>
   18238:	ldr	r3, [sp, #72]	; 0x48
   1823c:	add	r3, r3, #4
   18240:	str	r3, [sp, #72]	; 0x48
   18244:	lsl	r8, r4, #2
   18248:	add	r8, r8, #1
   1824c:	mov	r1, r8
   18250:	ldr	r0, [sp, #48]	; 0x30
   18254:	bl	42e0 <readstat_realloc@plt>
   18258:	cmp	r0, #0
   1825c:	str	r0, [sp, #48]	; 0x30
   18260:	beq	18428 <readstat_parse_sav+0x14c0>
   18264:	ldr	r2, [sp, #72]	; 0x48
   18268:	add	r3, r2, r4
   1826c:	cmp	r7, r3
   18270:	bcc	18438 <readstat_parse_sav+0x14d0>
   18274:	ldr	r3, [r9, #336]	; 0x150
   18278:	str	r3, [sp]
   1827c:	mov	r3, r4
   18280:	mov	r1, r8
   18284:	mov	r8, r0
   18288:	bl	4238 <readstat_convert@plt>
   1828c:	cmp	r0, #0
   18290:	bne	18470 <readstat_parse_sav+0x1508>
   18294:	ldr	r3, [sp, #72]	; 0x48
   18298:	add	r4, r3, r4
   1829c:	str	r4, [sp, #72]	; 0x48
   182a0:	str	r6, [sp, #92]	; 0x5c
   182a4:	str	r6, [sp, #96]	; 0x60
   182a8:	str	r6, [sp, #100]	; 0x64
   182ac:	str	fp, [sp, #88]	; 0x58
   182b0:	ldr	r3, [r9, #40]	; 0x28
   182b4:	str	r3, [sp, #12]
   182b8:	str	r8, [sp, #8]
   182bc:	ldrd	r2, [r5]
   182c0:	strd	r2, [sp]
   182c4:	add	r3, sp, #88	; 0x58
   182c8:	ldm	r3, {r2, r3}
   182cc:	ldr	r1, [r9, #20]
   182d0:	ldr	r0, [sp, #52]	; 0x34
   182d4:	blx	r1
   182d8:	cmp	r0, #0
   182dc:	bne	18448 <readstat_parse_sav+0x14e0>
   182e0:	add	sl, sl, #1
   182e4:	ldr	r3, [sp, #56]	; 0x38
   182e8:	cmp	sl, r3
   182ec:	beq	183a0 <readstat_parse_sav+0x1438>
   182f0:	ldr	r3, [sp, #72]	; 0x48
   182f4:	add	r2, r3, #4
   182f8:	cmp	r7, r2
   182fc:	bcc	183a8 <readstat_parse_sav+0x1440>
   18300:	ldr	r4, [r3]
   18304:	ldrb	r3, [r9, #436]	; 0x1b4
   18308:	tst	r3, #1
   1830c:	bne	18228 <readstat_parse_sav+0x12c0>
   18310:	ldr	r3, [sp, #72]	; 0x48
   18314:	add	r3, r3, #4
   18318:	str	r3, [sp, #72]	; 0x48
   1831c:	lsl	r8, r4, #2
   18320:	add	r8, r8, #1
   18324:	mov	r1, r8
   18328:	mov	r0, fp
   1832c:	bl	42e0 <readstat_realloc@plt>
   18330:	subs	fp, r0, #0
   18334:	beq	183b8 <readstat_parse_sav+0x1450>
   18338:	ldr	r2, [sp, #72]	; 0x48
   1833c:	add	r3, r2, r4
   18340:	cmp	r7, r3
   18344:	bcc	18408 <readstat_parse_sav+0x14a0>
   18348:	ldr	r3, [r9, #336]	; 0x150
   1834c:	str	r3, [sp]
   18350:	mov	r3, r4
   18354:	mov	r1, r8
   18358:	mov	r0, fp
   1835c:	bl	4238 <readstat_convert@plt>
   18360:	cmp	r0, #0
   18364:	bne	18464 <readstat_parse_sav+0x14fc>
   18368:	ldr	r3, [sp, #72]	; 0x48
   1836c:	add	r4, r3, r4
   18370:	str	r4, [sp, #72]	; 0x48
   18374:	add	r3, r4, #4
   18378:	cmp	r7, r3
   1837c:	bcc	18418 <readstat_parse_sav+0x14b0>
   18380:	ldr	r4, [r4]
   18384:	ldrb	r3, [r9, #436]	; 0x1b4
   18388:	tst	r3, #1
   1838c:	beq	18238 <readstat_parse_sav+0x12d0>
   18390:	mov	r0, r4
   18394:	bl	3d88 <byteswap4@plt>
   18398:	mov	r4, r0
   1839c:	b	18238 <readstat_parse_sav+0x12d0>
   183a0:	str	fp, [sp, #44]	; 0x2c
   183a4:	b	18108 <readstat_parse_sav+0x11a0>
   183a8:	str	fp, [sp, #44]	; 0x2c
   183ac:	ldr	fp, [sp, #32]
   183b0:	mov	r0, #5
   183b4:	b	183c4 <readstat_parse_sav+0x145c>
   183b8:	str	fp, [sp, #44]	; 0x2c
   183bc:	ldr	fp, [sp, #32]
   183c0:	mov	r0, #3
   183c4:	mov	sl, r0
   183c8:	ldr	r3, [sp, #44]	; 0x2c
   183cc:	cmp	r3, #0
   183d0:	beq	183dc <readstat_parse_sav+0x1474>
   183d4:	mov	r0, r3
   183d8:	bl	3eb4 <free@plt>
   183dc:	ldr	r3, [sp, #48]	; 0x30
   183e0:	cmp	r3, #0
   183e4:	beq	183f0 <readstat_parse_sav+0x1488>
   183e8:	mov	r0, r3
   183ec:	bl	3eb4 <free@plt>
   183f0:	cmp	sl, #0
   183f4:	beq	17198 <readstat_parse_sav+0x230>
   183f8:	mov	r7, sl
   183fc:	ldr	sl, [sp, #24]
   18400:	ldr	fp, [sp, #20]
   18404:	b	1735c <readstat_parse_sav+0x3f4>
   18408:	str	fp, [sp, #44]	; 0x2c
   1840c:	ldr	fp, [sp, #32]
   18410:	mov	r0, #5
   18414:	b	183c4 <readstat_parse_sav+0x145c>
   18418:	str	fp, [sp, #44]	; 0x2c
   1841c:	ldr	fp, [sp, #32]
   18420:	mov	r0, #5
   18424:	b	183c4 <readstat_parse_sav+0x145c>
   18428:	str	fp, [sp, #44]	; 0x2c
   1842c:	ldr	fp, [sp, #32]
   18430:	mov	r0, #3
   18434:	b	183c4 <readstat_parse_sav+0x145c>
   18438:	str	fp, [sp, #44]	; 0x2c
   1843c:	ldr	fp, [sp, #32]
   18440:	mov	r0, #5
   18444:	b	183c4 <readstat_parse_sav+0x145c>
   18448:	str	fp, [sp, #44]	; 0x2c
   1844c:	ldr	fp, [sp, #32]
   18450:	mov	r0, #4
   18454:	b	183c4 <readstat_parse_sav+0x145c>
   18458:	ldr	fp, [sp, #32]
   1845c:	mov	r0, #5
   18460:	b	183c4 <readstat_parse_sav+0x145c>
   18464:	str	fp, [sp, #44]	; 0x2c
   18468:	ldr	fp, [sp, #32]
   1846c:	b	183c4 <readstat_parse_sav+0x145c>
   18470:	str	fp, [sp, #44]	; 0x2c
   18474:	ldr	fp, [sp, #32]
   18478:	b	183c4 <readstat_parse_sav+0x145c>
   1847c:	ldr	fp, [sp, #32]
   18480:	ldr	r3, [sp, #20]
   18484:	cmp	r7, sl
   18488:	movne	r3, #5
   1848c:	mov	sl, r3
   18490:	b	183c8 <readstat_parse_sav+0x1460>
   18494:	ldr	fp, [sp, #32]
   18498:	mov	sl, #5
   1849c:	b	183c8 <readstat_parse_sav+0x1460>
   184a0:	ldr	fp, [sp, #32]
   184a4:	mov	sl, #5
   184a8:	b	183c8 <readstat_parse_sav+0x1460>
   184ac:	ldr	fp, [sp, #32]
   184b0:	b	183c8 <readstat_parse_sav+0x1460>
   184b4:	cmp	r5, #1
   184b8:	bne	18cb8 <readstat_parse_sav+0x1d50>
   184bc:	ldr	r3, [sp, #28]
   184c0:	str	r3, [sp, #128]	; 0x80
   184c4:	add	r8, r3, r8
   184c8:	add	r3, sp, #128	; 0x80
   184cc:	str	r3, [sp, #44]	; 0x2c
   184d0:	add	r3, sp, #384	; 0x180
   184d4:	str	r3, [sp, #32]
   184d8:	str	fp, [sp, #48]	; 0x30
   184dc:	b	1859c <readstat_parse_sav+0x1634>
   184e0:	str	r5, [r4, #52]	; 0x34
   184e4:	add	r3, fp, #5
   184e8:	cmp	r8, r3
   184ec:	bcc	18d08 <readstat_parse_sav+0x1da0>
   184f0:	ldr	fp, [fp, #1]
   184f4:	ldrb	r3, [r9, #436]	; 0x1b4
   184f8:	tst	r3, #1
   184fc:	bne	18580 <readstat_parse_sav+0x1618>
   18500:	ldr	r2, [sp, #128]	; 0x80
   18504:	add	r2, r2, #4
   18508:	str	r2, [sp, #128]	; 0x80
   1850c:	add	r3, r2, fp
   18510:	cmp	r8, r3
   18514:	bcc	18d18 <readstat_parse_sav+0x1db0>
   18518:	add	r7, r4, #88	; 0x58
   1851c:	add	r5, r5, r5, lsl #5
   18520:	add	r3, r5, #55	; 0x37
   18524:	add	r4, r4, r3
   18528:	mov	r5, #33	; 0x21
   1852c:	ldr	r3, [r9, #336]	; 0x150
   18530:	str	r3, [sp]
   18534:	mov	r3, fp
   18538:	mov	r1, r5
   1853c:	mov	r0, r7
   18540:	bl	4238 <readstat_convert@plt>
   18544:	cmp	r0, #0
   18548:	bne	186b4 <readstat_parse_sav+0x174c>
   1854c:	ldr	r2, [sp, #128]	; 0x80
   18550:	add	r2, r2, fp
   18554:	str	r2, [sp, #128]	; 0x80
   18558:	cmp	r7, r4
   1855c:	beq	18590 <readstat_parse_sav+0x1628>
   18560:	add	r7, r7, #33	; 0x21
   18564:	add	r3, r2, fp
   18568:	cmp	r8, r3
   1856c:	bcs	1852c <readstat_parse_sav+0x15c4>
   18570:	ldr	sl, [sp, #24]
   18574:	ldr	fp, [sp, #20]
   18578:	mov	r7, #5
   1857c:	b	1735c <readstat_parse_sav+0x3f4>
   18580:	mov	r0, fp
   18584:	bl	3d88 <byteswap4@plt>
   18588:	mov	fp, r0
   1858c:	b	18500 <readstat_parse_sav+0x1598>
   18590:	ldr	r3, [r9, #340]	; 0x154
   18594:	cmp	r3, r6
   18598:	beq	18d28 <readstat_parse_sav+0x1dc0>
   1859c:	ldr	r3, [sp, #128]	; 0x80
   185a0:	cmp	r8, r3
   185a4:	bls	1862c <readstat_parse_sav+0x16c4>
   185a8:	str	r9, [sp]
   185ac:	sub	r3, r8, r3
   185b0:	ldr	r2, [sp, #44]	; 0x2c
   185b4:	movw	r1, #257	; 0x101
   185b8:	ldr	r0, [sp, #32]
   185bc:	bl	162f8 <sav_read_pascal_string>
   185c0:	subs	r6, r0, #0
   185c4:	bne	18cc8 <readstat_parse_sav+0x1d60>
   185c8:	ldr	fp, [sp, #128]	; 0x80
   185cc:	cmp	r8, fp
   185d0:	beq	18cd8 <readstat_parse_sav+0x1d70>
   185d4:	add	r3, fp, #1
   185d8:	str	r3, [sp, #128]	; 0x80
   185dc:	ldrb	r5, [fp]
   185e0:	sub	r3, r5, #1
   185e4:	uxtb	r3, r3
   185e8:	cmp	r3, #2
   185ec:	bhi	18ce8 <readstat_parse_sav+0x1d80>
   185f0:	ldr	sl, [r9, #340]	; 0x154
   185f4:	cmp	sl, #0
   185f8:	beq	18cf8 <readstat_parse_sav+0x1d90>
   185fc:	ldr	r7, [r9, #44]	; 0x2c
   18600:	ldr	r4, [r7, r6, lsl #2]
   18604:	add	r1, r4, #196	; 0xc4
   18608:	ldr	r0, [sp, #32]
   1860c:	bl	3df4 <strcmp@plt>
   18610:	cmp	r0, #0
   18614:	beq	184e0 <readstat_parse_sav+0x1578>
   18618:	ldr	r3, [r4, #48]	; 0x30
   1861c:	add	r6, r6, r3
   18620:	cmp	r6, sl
   18624:	bcc	18600 <readstat_parse_sav+0x1698>
   18628:	b	18590 <readstat_parse_sav+0x1628>
   1862c:	ldr	fp, [sp, #48]	; 0x30
   18630:	beq	17198 <readstat_parse_sav+0x230>
   18634:	ldr	sl, [sp, #24]
   18638:	ldr	fp, [sp, #20]
   1863c:	mov	r7, #5
   18640:	b	1735c <readstat_parse_sav+0x3f4>
   18644:	ldr	sl, [sp, #24]
   18648:	ldr	fp, [sp, #20]
   1864c:	mov	r7, #2
   18650:	b	1735c <readstat_parse_sav+0x3f4>
   18654:	ldr	sl, [sp, #24]
   18658:	ldr	fp, [sp, #20]
   1865c:	mov	r7, #2
   18660:	b	1735c <readstat_parse_sav+0x3f4>
   18664:	ldr	sl, [sp, #24]
   18668:	ldr	fp, [sp, #20]
   1866c:	mov	r7, #3
   18670:	b	1735c <readstat_parse_sav+0x3f4>
   18674:	ldr	sl, [sp, #24]
   18678:	ldr	fp, [sp, #20]
   1867c:	mov	r7, #5
   18680:	b	1735c <readstat_parse_sav+0x3f4>
   18684:	ldr	sl, [sp, #24]
   18688:	ldr	fp, [sp, #20]
   1868c:	mov	r7, #5
   18690:	b	1735c <readstat_parse_sav+0x3f4>
   18694:	ldr	sl, [sp, #24]
   18698:	ldr	fp, [sp, #20]
   1869c:	mov	r7, #5
   186a0:	b	1735c <readstat_parse_sav+0x3f4>
   186a4:	ldr	sl, [sp, #24]
   186a8:	mov	r7, r0
   186ac:	ldr	fp, [sp, #20]
   186b0:	b	1735c <readstat_parse_sav+0x3f4>
   186b4:	ldr	sl, [sp, #24]
   186b8:	mov	r7, r0
   186bc:	ldr	fp, [sp, #20]
   186c0:	b	1735c <readstat_parse_sav+0x3f4>
   186c4:	ldr	r3, [r9, #348]	; 0x15c
   186c8:	add	ip, r3, #1
   186cc:	str	ip, [r9, #348]	; 0x15c
   186d0:	str	r3, [r2, #8]
   186d4:	ldr	r3, [r2, #48]	; 0x30
   186d8:	add	r1, r1, r3
   186dc:	ldr	r3, [r9, #340]	; 0x154
   186e0:	cmp	r1, r3
   186e4:	bge	18714 <readstat_parse_sav+0x17ac>
   186e8:	ldr	r3, [r9, #44]	; 0x2c
   186ec:	ldr	r2, [r3, r1, lsl #2]
   186f0:	ldr	r3, [r2, #20]
   186f4:	cmp	r3, #0
   186f8:	beq	186c4 <readstat_parse_sav+0x175c>
   186fc:	add	r3, r3, #251	; 0xfb
   18700:	lsr	r3, r3, #2
   18704:	umull	ip, r3, r0, r3
   18708:	lsr	r3, r3, #3
   1870c:	str	r3, [r2, #48]	; 0x30
   18710:	b	186c4 <readstat_parse_sav+0x175c>
   18714:	mov	r1, #4
   18718:	ldr	r0, [r9, #348]	; 0x15c
   1871c:	bl	3fbc <readstat_calloc@plt>
   18720:	str	r0, [r9, #52]	; 0x34
   18724:	ldr	r2, [r9, #348]	; 0x15c
   18728:	cmp	r2, #0
   1872c:	moveq	fp, #5
   18730:	beq	170c4 <readstat_parse_sav+0x15c>
   18734:	ldr	r3, [r9]
   18738:	cmp	r3, #0
   1873c:	beq	187f4 <readstat_parse_sav+0x188c>
   18740:	mov	r0, #0
   18744:	mov	r1, #0
   18748:	add	r3, sp, #424	; 0x1a8
   1874c:	strd	r0, [r3]
   18750:	strd	r0, [r3, #8]
   18754:	ldr	r3, [r9, #352]	; 0x160
   18758:	cmn	r3, #1
   1875c:	ldrne	r4, [r9, #356]	; 0x164
   18760:	asrne	r5, r4, #31
   18764:	mvneq	r4, #0
   18768:	mvneq	r5, #0
   1876c:	add	r1, sp, #392	; 0x188
   18770:	strd	r4, [r1, #-8]
   18774:	asr	r3, r2, #31
   18778:	strd	r2, [r1]
   1877c:	ldr	r3, [r9, #324]	; 0x144
   18780:	str	r3, [sp, #400]	; 0x190
   18784:	str	r3, [sp, #404]	; 0x194
   18788:	ldr	r2, [r9, #424]	; 0x1a8
   1878c:	asr	r3, r2, #31
   18790:	strd	r2, [r1, #16]
   18794:	ldr	r3, [r9, #428]	; 0x1ac
   18798:	str	r3, [sp, #416]	; 0x1a0
   1879c:	ldr	r3, [r9, #432]	; 0x1b0
   187a0:	str	r3, [sp, #420]	; 0x1a4
   187a4:	ldr	r3, [r9, #56]	; 0x38
   187a8:	str	r3, [sp, #432]	; 0x1b0
   187ac:	add	r4, r9, #64	; 0x40
   187b0:	ldr	r3, [r9, #336]	; 0x150
   187b4:	str	r3, [sp]
   187b8:	mov	r3, #64	; 0x40
   187bc:	add	r2, sp, #820	; 0x334
   187c0:	add	r2, r2, #1
   187c4:	movw	r1, #257	; 0x101
   187c8:	mov	r0, r4
   187cc:	bl	4238 <readstat_convert@plt>
   187d0:	cmp	r0, #0
   187d4:	bne	18850 <readstat_parse_sav+0x18e8>
   187d8:	str	r4, [sp, #428]	; 0x1ac
   187dc:	ldr	r3, [r9]
   187e0:	ldr	r1, [r9, #40]	; 0x28
   187e4:	add	r0, sp, #384	; 0x180
   187e8:	blx	r3
   187ec:	cmp	r0, #0
   187f0:	bne	1884c <readstat_parse_sav+0x18e4>
   187f4:	ldr	r3, [r9, #328]	; 0x148
   187f8:	cmp	r3, #0
   187fc:	beq	188bc <readstat_parse_sav+0x1954>
   18800:	ldr	r3, [r9, #332]	; 0x14c
   18804:	ldr	r8, [r9, #340]	; 0x154
   18808:	cmp	r3, r8, lsl #1
   1880c:	beq	18820 <readstat_parse_sav+0x18b8>
   18810:	add	r2, r8, r8, lsl #1
   18814:	cmp	r3, r2
   18818:	movne	fp, #5
   1881c:	bne	170c4 <readstat_parse_sav+0x15c>
   18820:	cmp	r8, #0
   18824:	ble	189a4 <readstat_parse_sav+0x1a3c>
   18828:	sdiv	r3, r3, r8
   1882c:	cmp	r3, #3
   18830:	movne	r8, #0
   18834:	moveq	r8, #1
   18838:	mov	r4, #0
   1883c:	add	r3, r8, #2
   18840:	str	sl, [sp, #20]
   18844:	mov	sl, r3
   18848:	b	1887c <readstat_parse_sav+0x1914>
   1884c:	mov	r0, #4
   18850:	mov	fp, r0
   18854:	b	170c4 <readstat_parse_sav+0x15c>
   18858:	ldr	r3, [r9, #328]	; 0x148
   1885c:	ldr	r0, [r3, r7, lsl #2]
   18860:	bl	4388 <spss_alignment_to_readstat_alignment@plt>
   18864:	str	r0, [r5, #272]	; 0x110
   18868:	ldr	r3, [r5, #48]	; 0x30
   1886c:	add	r4, r4, r3
   18870:	ldr	r3, [r9, #340]	; 0x154
   18874:	cmp	r4, r3
   18878:	bge	188b8 <readstat_parse_sav+0x1950>
   1887c:	ldr	r3, [r9, #44]	; 0x2c
   18880:	ldr	r5, [r3, r4, lsl #2]
   18884:	mul	r6, r4, sl
   18888:	add	r7, r6, #1
   1888c:	ldr	r3, [r9, #328]	; 0x148
   18890:	ldr	r0, [r3, r6, lsl #2]
   18894:	bl	43ac <spss_measure_to_readstat_measure@plt>
   18898:	str	r0, [r5, #268]	; 0x10c
   1889c:	cmp	r8, #0
   188a0:	beq	18858 <readstat_parse_sav+0x18f0>
   188a4:	ldr	r3, [r9, #328]	; 0x148
   188a8:	ldr	r3, [r3, r7, lsl #2]
   188ac:	str	r3, [r5, #276]	; 0x114
   188b0:	add	r7, r6, #2
   188b4:	b	18858 <readstat_parse_sav+0x18f0>
   188b8:	ldr	sl, [sp, #20]
   188bc:	ldr	r3, [r9, #8]
   188c0:	cmp	r3, #0
   188c4:	beq	189a4 <readstat_parse_sav+0x1a3c>
   188c8:	ldr	r3, [r9, #340]	; 0x154
   188cc:	cmp	r3, #0
   188d0:	ble	189a4 <readstat_parse_sav+0x1a3c>
   188d4:	mov	r6, #0
   188d8:	mov	r5, r6
   188dc:	ldr	r3, [pc, #1344]	; 18e24 <readstat_parse_sav+0x1ebc>
   188e0:	add	r3, pc, r3
   188e4:	str	r3, [sp, #20]
   188e8:	add	r7, sp, #384	; 0x180
   188ec:	str	sl, [sp, #24]
   188f0:	b	18928 <readstat_parse_sav+0x19c0>
   188f4:	ldr	sl, [sp, #24]
   188f8:	mov	fp, #4
   188fc:	b	170c4 <readstat_parse_sav+0x15c>
   18900:	ldr	r2, [r4, #8]
   18904:	ldr	r3, [r9, #52]	; 0x34
   18908:	ldr	r3, [r3, r2, lsl #2]
   1890c:	mov	r2, #1
   18910:	str	r2, [r3, #2144]	; 0x860
   18914:	ldr	r3, [r4, #48]	; 0x30
   18918:	add	r5, r5, r3
   1891c:	ldr	r3, [r9, #340]	; 0x154
   18920:	cmp	r5, r3
   18924:	bge	189a0 <readstat_parse_sav+0x1a38>
   18928:	ldr	r3, [r9, #44]	; 0x2c
   1892c:	ldr	r4, [r3, r5, lsl #2]
   18930:	ldr	sl, [r4, #8]
   18934:	ldr	r8, [r9, #52]	; 0x34
   18938:	ldr	r2, [r9, #336]	; 0x150
   1893c:	mov	r1, r6
   18940:	mov	r0, r4
   18944:	bl	4274 <spss_init_variable_for_info@plt>
   18948:	str	r0, [r8, sl, lsl #2]
   1894c:	ldr	r3, [r4, #4]
   18950:	ldr	r2, [sp, #20]
   18954:	mov	r1, #256	; 0x100
   18958:	mov	r0, r7
   1895c:	bl	4280 <snprintf@plt>
   18960:	ldr	r8, [r9, #8]
   18964:	ldr	r0, [r4, #8]
   18968:	ldr	r3, [r9, #52]	; 0x34
   1896c:	ldr	r1, [r3, r0, lsl #2]
   18970:	ldr	r3, [r4, #4]
   18974:	cmn	r3, #1
   18978:	movne	r2, r7
   1897c:	moveq	r2, #0
   18980:	ldr	r3, [r9, #40]	; 0x28
   18984:	blx	r8
   18988:	cmp	r0, #1
   1898c:	beq	188f4 <readstat_parse_sav+0x198c>
   18990:	cmp	r0, #2
   18994:	addne	r6, r6, #1
   18998:	bne	18914 <readstat_parse_sav+0x19ac>
   1899c:	b	18900 <readstat_parse_sav+0x1998>
   189a0:	ldr	sl, [sp, #24]
   189a4:	ldr	r4, [r9, #12]
   189a8:	cmp	r4, #0
   189ac:	beq	18a20 <readstat_parse_sav+0x1ab8>
   189b0:	ldr	r1, [r9, #372]	; 0x174
   189b4:	cmp	r1, #0
   189b8:	blt	18a20 <readstat_parse_sav+0x1ab8>
   189bc:	ldr	ip, [r9, #340]	; 0x154
   189c0:	cmp	ip, #0
   189c4:	ble	18da4 <readstat_parse_sav+0x1e3c>
   189c8:	ldr	r0, [r9, #44]	; 0x2c
   189cc:	ldr	r3, [r0]
   189d0:	sub	r1, r1, #1
   189d4:	ldr	r2, [r3, #12]
   189d8:	cmp	r1, r2
   189dc:	beq	18a04 <readstat_parse_sav+0x1a9c>
   189e0:	mov	r2, #0
   189e4:	ldr	r3, [r3, #48]	; 0x30
   189e8:	add	r2, r2, r3
   189ec:	cmp	r2, ip
   189f0:	bge	18db8 <readstat_parse_sav+0x1e50>
   189f4:	ldr	r3, [r0, r2, lsl #2]
   189f8:	ldr	lr, [r3, #12]
   189fc:	cmp	r1, lr
   18a00:	bne	189e4 <readstat_parse_sav+0x1a7c>
   18a04:	ldr	r2, [r3, #8]
   18a08:	ldr	r3, [r9, #52]	; 0x34
   18a0c:	ldr	r1, [r9, #40]	; 0x28
   18a10:	ldr	r0, [r3, r2, lsl #2]
   18a14:	blx	r4
   18a18:	cmp	r0, #0
   18a1c:	bne	18bb8 <readstat_parse_sav+0x1c50>
   18a20:	ldr	r3, [r9, #16]
   18a24:	cmp	r3, #0
   18a28:	beq	170c4 <readstat_parse_sav+0x15c>
   18a2c:	ldr	r0, [r9, #340]	; 0x154
   18a30:	cmp	r0, #0
   18a34:	ble	18afc <readstat_parse_sav+0x1b94>
   18a38:	ldr	ip, [r9, #44]	; 0x2c
   18a3c:	mov	r4, #256	; 0x100
   18a40:	mov	r3, #0
   18a44:	ldr	r2, [ip, r3, lsl #2]
   18a48:	ldr	r1, [r2, #20]
   18a4c:	cmp	r4, r1
   18a50:	movcc	r4, r1
   18a54:	ldr	r2, [r2, #48]	; 0x30
   18a58:	add	r3, r3, r2
   18a5c:	cmp	r0, r3
   18a60:	bgt	18a44 <readstat_parse_sav+0x1adc>
   18a64:	add	r0, r4, #7
   18a68:	str	r0, [r9, #380]	; 0x17c
   18a6c:	bl	422c <readstat_malloc@plt>
   18a70:	str	r0, [r9, #376]	; 0x178
   18a74:	add	r0, r4, #2
   18a78:	lsl	r0, r0, #2
   18a7c:	str	r0, [r9, #388]	; 0x184
   18a80:	bl	422c <readstat_malloc@plt>
   18a84:	str	r0, [r9, #384]	; 0x180
   18a88:	ldr	r3, [r9, #376]	; 0x178
   18a8c:	cmp	r0, #0
   18a90:	cmpne	r3, #0
   18a94:	moveq	fp, #3
   18a98:	beq	170c4 <readstat_parse_sav+0x15c>
   18a9c:	ldr	r3, [r9, #428]	; 0x1ac
   18aa0:	cmp	r3, #1
   18aa4:	beq	18b04 <readstat_parse_sav+0x1b9c>
   18aa8:	cmp	r3, #2
   18aac:	beq	18b1c <readstat_parse_sav+0x1bb4>
   18ab0:	ldr	r7, [r9, #36]	; 0x24
   18ab4:	ldr	r5, [r9, #344]	; 0x158
   18ab8:	lsl	r5, r5, #3
   18abc:	mov	r0, r5
   18ac0:	bl	422c <readstat_malloc@plt>
   18ac4:	mov	r6, r0
   18ac8:	ldr	r0, [r9, #360]	; 0x168
   18acc:	cmp	r0, #0
   18ad0:	beq	18b78 <readstat_parse_sav+0x1c10>
   18ad4:	ldr	r3, [r7, #8]
   18ad8:	ldr	r2, [r7, #20]
   18adc:	mov	r1, #1
   18ae0:	mul	r0, r5, r0
   18ae4:	blx	r3
   18ae8:	cmn	r0, #1
   18aec:	beq	18d60 <readstat_parse_sav+0x1df8>
   18af0:	mov	r3, #0
   18af4:	str	r3, [r9, #360]	; 0x168
   18af8:	b	18b78 <readstat_parse_sav+0x1c10>
   18afc:	mov	r4, #256	; 0x100
   18b00:	b	18a64 <readstat_parse_sav+0x1afc>
   18b04:	ldr	r1, [pc, #796]	; 18e28 <readstat_parse_sav+0x1ec0>
   18b08:	add	r1, pc, r1
   18b0c:	mov	r0, r9
   18b10:	bl	1691c <sav_read_compressed_data>
   18b14:	mov	r4, r0
   18b18:	b	18d78 <readstat_parse_sav+0x1e10>
   18b1c:	ldr	r1, [pc, #776]	; 18e2c <readstat_parse_sav+0x1ec4>
   18b20:	add	r1, pc, r1
   18b24:	mov	r0, r9
   18b28:	bl	44c0 <zsav_read_compressed_data@plt>
   18b2c:	mov	r4, r0
   18b30:	b	18d78 <readstat_parse_sav+0x1e10>
   18b34:	mov	r0, r9
   18b38:	bl	16240 <sav_update_progress>
   18b3c:	subs	r4, r0, #0
   18b40:	bne	18d64 <readstat_parse_sav+0x1dfc>
   18b44:	ldr	r3, [r7, #12]
   18b48:	ldr	r2, [r7, #20]
   18b4c:	mov	r1, r5
   18b50:	mov	r0, r6
   18b54:	blx	r3
   18b58:	cmp	r5, r0
   18b5c:	bne	18bd8 <readstat_parse_sav+0x1c70>
   18b60:	mov	r2, r9
   18b64:	mov	r1, r5
   18b68:	mov	r0, r6
   18b6c:	bl	16b0c <sav_process_row>
   18b70:	subs	r4, r0, #0
   18b74:	bne	18d64 <readstat_parse_sav+0x1dfc>
   18b78:	ldr	r3, [r9, #356]	; 0x164
   18b7c:	cmn	r3, #1
   18b80:	beq	18b34 <readstat_parse_sav+0x1bcc>
   18b84:	ldr	r2, [r9, #364]	; 0x16c
   18b88:	cmp	r3, r2
   18b8c:	bgt	18b34 <readstat_parse_sav+0x1bcc>
   18b90:	cmp	r6, #0
   18b94:	movne	r4, fp
   18b98:	bne	18d70 <readstat_parse_sav+0x1e08>
   18b9c:	b	18d84 <readstat_parse_sav+0x1e1c>
   18ba0:	mov	fp, #3
   18ba4:	b	170c4 <readstat_parse_sav+0x15c>
   18ba8:	mov	fp, r7
   18bac:	b	170c4 <readstat_parse_sav+0x15c>
   18bb0:	mov	fp, r7
   18bb4:	b	170c4 <readstat_parse_sav+0x15c>
   18bb8:	mov	fp, #4
   18bbc:	b	170c4 <readstat_parse_sav+0x15c>
   18bc0:	mov	fp, #15
   18bc4:	b	17008 <readstat_parse_sav+0xa0>
   18bc8:	mov	fp, #15
   18bcc:	b	17008 <readstat_parse_sav+0xa0>
   18bd0:	mov	fp, #5
   18bd4:	b	17008 <readstat_parse_sav+0xa0>
   18bd8:	cmp	r6, #0
   18bdc:	bne	18d70 <readstat_parse_sav+0x1e08>
   18be0:	b	18d84 <readstat_parse_sav+0x1e1c>
   18be4:	ldr	sl, [sp, #24]
   18be8:	ldr	fp, [sp, #20]
   18bec:	mov	r7, #5
   18bf0:	b	1735c <readstat_parse_sav+0x3f4>
   18bf4:	ldr	sl, [sp, #24]
   18bf8:	ldr	fp, [sp, #20]
   18bfc:	mov	r7, #5
   18c00:	mov	r5, r7
   18c04:	b	17520 <readstat_parse_sav+0x5b8>
   18c08:	mov	r7, sl
   18c0c:	ldr	sl, [sp, #24]
   18c10:	ldr	fp, [sp, #20]
   18c14:	b	18c00 <readstat_parse_sav+0x1c98>
   18c18:	mov	r3, #0
   18c1c:	str	r3, [sp, #44]	; 0x2c
   18c20:	mov	sl, #2
   18c24:	ldr	r3, [sp, #44]	; 0x2c
   18c28:	cmp	r3, #0
   18c2c:	beq	18e14 <readstat_parse_sav+0x1eac>
   18c30:	ldr	r3, [sp, #72]	; 0x48
   18c34:	cmp	r3, #0
   18c38:	beq	17d14 <readstat_parse_sav+0xdac>
   18c3c:	ldr	r5, [sp, #44]	; 0x2c
   18c40:	mov	r4, #0
   18c44:	b	17d00 <readstat_parse_sav+0xd98>
   18c48:	mov	sl, #2
   18c4c:	b	18c24 <readstat_parse_sav+0x1cbc>
   18c50:	mov	sl, #5
   18c54:	b	18c24 <readstat_parse_sav+0x1cbc>
   18c58:	mov	sl, #2
   18c5c:	b	18c24 <readstat_parse_sav+0x1cbc>
   18c60:	ldr	r3, [r9, #20]
   18c64:	cmp	r3, #0
   18c68:	beq	17cb4 <readstat_parse_sav+0xd4c>
   18c6c:	ldr	r3, [r9, #368]	; 0x170
   18c70:	ldr	r2, [pc, #440]	; 18e30 <readstat_parse_sav+0x1ec8>
   18c74:	add	r2, pc, r2
   18c78:	mov	r1, #256	; 0x100
   18c7c:	add	r0, sp, #384	; 0x180
   18c80:	bl	4280 <snprintf@plt>
   18c84:	b	17cb4 <readstat_parse_sav+0xd4c>
   18c88:	ldr	sl, [sp, #24]
   18c8c:	ldr	fp, [sp, #20]
   18c90:	mov	r7, #2
   18c94:	b	1735c <readstat_parse_sav+0x3f4>
   18c98:	ldr	sl, [sp, #24]
   18c9c:	ldr	fp, [sp, #20]
   18ca0:	mov	r7, #2
   18ca4:	b	1735c <readstat_parse_sav+0x3f4>
   18ca8:	ldr	sl, [sp, #24]
   18cac:	ldr	fp, [sp, #20]
   18cb0:	mov	r7, #4
   18cb4:	b	1735c <readstat_parse_sav+0x3f4>
   18cb8:	ldr	sl, [sp, #24]
   18cbc:	ldr	fp, [sp, #20]
   18cc0:	mov	r7, #5
   18cc4:	b	1735c <readstat_parse_sav+0x3f4>
   18cc8:	ldr	sl, [sp, #24]
   18ccc:	ldr	fp, [sp, #20]
   18cd0:	mov	r7, r6
   18cd4:	b	1735c <readstat_parse_sav+0x3f4>
   18cd8:	ldr	sl, [sp, #24]
   18cdc:	ldr	fp, [sp, #20]
   18ce0:	mov	r7, #5
   18ce4:	b	1735c <readstat_parse_sav+0x3f4>
   18ce8:	ldr	sl, [sp, #24]
   18cec:	ldr	fp, [sp, #20]
   18cf0:	mov	r7, #5
   18cf4:	b	1735c <readstat_parse_sav+0x3f4>
   18cf8:	ldr	sl, [sp, #24]
   18cfc:	ldr	fp, [sp, #20]
   18d00:	mov	r7, #5
   18d04:	b	1735c <readstat_parse_sav+0x3f4>
   18d08:	ldr	sl, [sp, #24]
   18d0c:	ldr	fp, [sp, #20]
   18d10:	mov	r7, #5
   18d14:	b	1735c <readstat_parse_sav+0x3f4>
   18d18:	ldr	sl, [sp, #24]
   18d1c:	ldr	fp, [sp, #20]
   18d20:	mov	r7, #5
   18d24:	b	1735c <readstat_parse_sav+0x3f4>
   18d28:	ldr	sl, [sp, #24]
   18d2c:	ldr	fp, [sp, #20]
   18d30:	mov	r7, #5
   18d34:	b	1735c <readstat_parse_sav+0x3f4>
   18d38:	ldr	sl, [sp, #24]
   18d3c:	ldr	fp, [sp, #20]
   18d40:	mov	r7, #3
   18d44:	b	1735c <readstat_parse_sav+0x3f4>
   18d48:	ldr	sl, [sp, #24]
   18d4c:	ldr	fp, [sp, #20]
   18d50:	mov	r7, #5
   18d54:	b	1735c <readstat_parse_sav+0x3f4>
   18d58:	mov	r7, #2
   18d5c:	b	1735c <readstat_parse_sav+0x3f4>
   18d60:	mov	r4, #15
   18d64:	cmp	r6, #0
   18d68:	moveq	fp, r4
   18d6c:	beq	170c4 <readstat_parse_sav+0x15c>
   18d70:	mov	r0, r6
   18d74:	bl	3eb4 <free@plt>
   18d78:	cmp	r4, #0
   18d7c:	movne	fp, r4
   18d80:	bne	170c4 <readstat_parse_sav+0x15c>
   18d84:	ldr	r3, [r9, #352]	; 0x160
   18d88:	cmn	r3, #1
   18d8c:	beq	170c4 <readstat_parse_sav+0x15c>
   18d90:	ldr	r2, [r9, #364]	; 0x16c
   18d94:	ldr	r3, [r9, #356]	; 0x164
   18d98:	cmp	r2, r3
   18d9c:	movne	fp, #9
   18da0:	b	170c4 <readstat_parse_sav+0x15c>
   18da4:	ldr	r3, [r9, #16]
   18da8:	cmp	r3, #0
   18dac:	movne	r4, #256	; 0x100
   18db0:	bne	18a64 <readstat_parse_sav+0x1afc>
   18db4:	b	170c4 <readstat_parse_sav+0x15c>
   18db8:	ldr	r3, [r9, #16]
   18dbc:	cmp	r3, #0
   18dc0:	ldrne	r0, [r9, #340]	; 0x154
   18dc4:	bne	18a38 <readstat_parse_sav+0x1ad0>
   18dc8:	b	170c4 <readstat_parse_sav+0x15c>
   18dcc:	ldr	sl, [sp, #24]
   18dd0:	ldr	fp, [sp, #20]
   18dd4:	mov	r7, #3
   18dd8:	b	18de8 <readstat_parse_sav+0x1e80>
   18ddc:	mov	r7, sl
   18de0:	ldr	sl, [sp, #24]
   18de4:	ldr	fp, [sp, #20]
   18de8:	mov	r0, #0
   18dec:	bl	4418 <spss_varinfo_free@plt>
   18df0:	b	1735c <readstat_parse_sav+0x3f4>
   18df4:	ldr	sl, [sp, #24]
   18df8:	mov	r5, r0
   18dfc:	ldr	fp, [sp, #20]
   18e00:	b	17520 <readstat_parse_sav+0x5b8>
   18e04:	mov	sl, #2
   18e08:	b	18c24 <readstat_parse_sav+0x1cbc>
   18e0c:	ldr	sl, [sp, #48]	; 0x30
   18e10:	b	18c24 <readstat_parse_sav+0x1cbc>
   18e14:	mov	r7, sl
   18e18:	ldr	sl, [sp, #24]
   18e1c:	ldr	fp, [sp, #20]
   18e20:	b	1735c <readstat_parse_sav+0x3f4>
   18e24:	.word	0x0000e4ac
   18e28:	.word	0xffffdffc
   18e2c:	.word	0xffffdfe4
   18e30:	.word	0x0000e118
   18e34:	.word	0x00000000

00018e38 <sav_variable_segments>:
   18e38:	cmp	r1, #255	; 0xff
   18e3c:	movls	r3, #0
   18e40:	movhi	r3, #1
   18e44:	cmp	r0, #0
   18e48:	moveq	r0, r3
   18e4c:	movne	r0, #0
   18e50:	cmp	r0, #0
   18e54:	bne	18e60 <sav_variable_segments+0x28>
   18e58:	mov	r0, #1
   18e5c:	bx	lr
   18e60:	add	r0, r1, #251	; 0xfb
   18e64:	lsr	r0, r0, #2
   18e68:	movw	r1, #2081	; 0x821
   18e6c:	movt	r1, #8322	; 0x2082
   18e70:	umull	r3, r0, r1, r0
   18e74:	lsr	r0, r0, #3
   18e78:	bx	lr

00018e7c <sav_variable_width>:
   18e7c:	cmp	r0, #0
   18e80:	bne	18edc <sav_variable_width+0x60>
   18e84:	cmp	r1, #255	; 0xff
   18e88:	bhi	18ea0 <sav_variable_width+0x24>
   18e8c:	cmp	r1, #0
   18e90:	beq	18ee4 <sav_variable_width+0x68>
   18e94:	add	r1, r1, #7
   18e98:	bic	r0, r1, #7
   18e9c:	bx	lr
   18ea0:	str	r4, [sp, #-8]!
   18ea4:	str	lr, [sp, #4]
   18ea8:	mov	r4, r1
   18eac:	bl	18e38 <sav_variable_segments>
   18eb0:	sub	r3, r0, r0, lsl #6
   18eb4:	add	r1, r4, #256	; 0x100
   18eb8:	add	r1, r1, #3
   18ebc:	add	r1, r1, r3, lsl #2
   18ec0:	bic	r1, r1, #7
   18ec4:	add	r0, r0, #16777216	; 0x1000000
   18ec8:	sub	r0, r0, #1
   18ecc:	add	r0, r1, r0, lsl #8
   18ed0:	ldr	r4, [sp]
   18ed4:	add	sp, sp, #4
   18ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   18edc:	mov	r0, #8
   18ee0:	bx	lr
   18ee4:	mov	r0, #8
   18ee8:	bx	lr

00018eec <sav_metadata_ok>:
   18eec:	ldr	r3, [r0, #8]
   18ef0:	cmp	r3, #2
   18ef4:	beq	18f0c <sav_metadata_ok+0x20>
   18ef8:	sub	r3, r3, #2
   18efc:	cmp	r3, #2
   18f00:	movcc	r0, #0
   18f04:	movcs	r0, #24
   18f08:	bx	lr
   18f0c:	ldr	r3, [r0, #16]
   18f10:	cmp	r3, #2
   18f14:	moveq	r0, #6
   18f18:	movne	r0, #0
   18f1c:	bx	lr

00018f20 <sav_write_compressed_row>:
   18f20:	strd	r4, [sp, #-16]!
   18f24:	str	r6, [sp, #8]
   18f28:	str	lr, [sp, #12]
   18f2c:	mov	r4, r0
   18f30:	ldr	r5, [r0, #300]	; 0x12c
   18f34:	mov	r3, r0
   18f38:	mov	r0, r5
   18f3c:	bl	4460 <sav_compress_row@plt>
   18f40:	mov	r2, r0
   18f44:	mov	r1, r5
   18f48:	mov	r0, r4
   18f4c:	bl	4454 <readstat_write_bytes@plt>
   18f50:	ldrd	r4, [sp]
   18f54:	ldr	r6, [sp, #8]
   18f58:	add	sp, sp, #12
   18f5c:	pop	{pc}		; (ldr pc, [sp], #4)

00018f60 <sav_emit_blank_variable_records>:
   18f60:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18f64:	strd	r6, [sp, #8]
   18f68:	strd	r8, [sp, #16]
   18f6c:	str	sl, [sp, #24]
   18f70:	str	lr, [sp, #28]
   18f74:	sub	sp, sp, #32
   18f78:	mov	sl, r0
   18f7c:	mov	r3, #2
   18f80:	str	r3, [sp, #28]
   18f84:	mov	r4, r1
   18f88:	mov	r8, #0
   18f8c:	mov	r9, #0
   18f90:	add	r7, pc, #136	; 0x88
   18f94:	ldrd	r6, [r7]
   18f98:	movw	r5, #7425	; 0x1d01
   18f9c:	movt	r5, #1
   18fa0:	cmp	r4, #0
   18fa4:	beq	19000 <sav_emit_blank_variable_records+0xa0>
   18fa8:	mov	r2, #4
   18fac:	add	r1, sp, #28
   18fb0:	mov	r0, sl
   18fb4:	bl	4454 <readstat_write_bytes@plt>
   18fb8:	cmp	r0, #0
   18fbc:	bne	18ffc <sav_emit_blank_variable_records+0x9c>
   18fc0:	strd	r8, [sp, #4]
   18fc4:	strd	r6, [sp, #20]
   18fc8:	mvn	r3, #0
   18fcc:	str	r3, [sp]
   18fd0:	str	r5, [sp, #16]
   18fd4:	str	r5, [sp, #12]
   18fd8:	mov	r2, #28
   18fdc:	mov	r1, sp
   18fe0:	mov	r0, sl
   18fe4:	bl	4454 <readstat_write_bytes@plt>
   18fe8:	sub	r4, r4, #1
   18fec:	cmp	r0, #0
   18ff0:	beq	18fa0 <sav_emit_blank_variable_records+0x40>
   18ff4:	mov	r4, r0
   18ff8:	b	19000 <sav_emit_blank_variable_records+0xa0>
   18ffc:	mov	r4, r0
   19000:	mov	r0, r4
   19004:	add	sp, sp, #32
   19008:	ldrd	r4, [sp]
   1900c:	ldrd	r6, [sp, #8]
   19010:	ldrd	r8, [sp, #16]
   19014:	ldr	sl, [sp, #24]
   19018:	add	sp, sp, #28
   1901c:	pop	{pc}		; (ldr pc, [sp], #4)
   19020:	.word	0x20202020
   19024:	.word	0x20202020

00019028 <sav_write_missing_string>:
   19028:	str	r4, [sp, #-8]!
   1902c:	str	lr, [sp, #4]
   19030:	ldr	r2, [r1, #1596]	; 0x63c
   19034:	mov	r1, #32
   19038:	bl	42a4 <memset@plt>
   1903c:	mov	r0, #0
   19040:	ldr	r4, [sp]
   19044:	add	sp, sp, #4
   19048:	pop	{pc}		; (ldr pc, [sp], #4)

0001904c <sav_write_missing_number>:
   1904c:	sub	sp, sp, #8
   19050:	mvn	r3, #0
   19054:	str	r3, [sp]
   19058:	mvn	r2, #1048576	; 0x100000
   1905c:	str	r2, [sp, #4]
   19060:	str	r3, [r0]
   19064:	str	r2, [r0, #4]
   19068:	mov	r0, #0
   1906c:	add	sp, sp, #8
   19070:	bx	lr

00019074 <sav_write_double>:
   19074:	sub	sp, sp, #8
   19078:	vstr	d0, [sp]
   1907c:	ldr	r3, [sp]
   19080:	str	r3, [r0]
   19084:	ldr	r3, [sp, #4]
   19088:	str	r3, [r0, #4]
   1908c:	mov	r0, #0
   19090:	add	sp, sp, #8
   19094:	bx	lr

00019098 <sav_write_float>:
   19098:	sub	sp, sp, #8
   1909c:	vcvt.f64.f32	d0, s0
   190a0:	vstr	d0, [sp]
   190a4:	ldr	r3, [sp]
   190a8:	str	r3, [r0]
   190ac:	ldr	r3, [sp, #4]
   190b0:	str	r3, [r0, #4]
   190b4:	mov	r0, #0
   190b8:	add	sp, sp, #8
   190bc:	bx	lr

000190c0 <sav_write_int32>:
   190c0:	sub	sp, sp, #8
   190c4:	vmov	s15, r2
   190c8:	vcvt.f64.s32	d7, s15
   190cc:	vstr	d7, [sp]
   190d0:	ldr	r3, [sp]
   190d4:	str	r3, [r0]
   190d8:	ldr	r3, [sp, #4]
   190dc:	str	r3, [r0, #4]
   190e0:	mov	r0, #0
   190e4:	add	sp, sp, #8
   190e8:	bx	lr

000190ec <sav_write_int16>:
   190ec:	sub	sp, sp, #8
   190f0:	vmov	s15, r2
   190f4:	vcvt.f64.s32	d7, s15
   190f8:	vstr	d7, [sp]
   190fc:	ldr	r3, [sp]
   19100:	str	r3, [r0]
   19104:	ldr	r3, [sp, #4]
   19108:	str	r3, [r0, #4]
   1910c:	mov	r0, #0
   19110:	add	sp, sp, #8
   19114:	bx	lr

00019118 <sav_write_int8>:
   19118:	sub	sp, sp, #8
   1911c:	vmov	s15, r2
   19120:	vcvt.f64.s32	d7, s15
   19124:	vstr	d7, [sp]
   19128:	ldr	r3, [sp]
   1912c:	str	r3, [r0]
   19130:	ldr	r3, [sp, #4]
   19134:	str	r3, [r0, #4]
   19138:	mov	r0, #0
   1913c:	add	sp, sp, #8
   19140:	bx	lr

00019144 <sav_format_variable_name>:
   19144:	str	r4, [sp, #-8]!
   19148:	str	lr, [sp, #4]
   1914c:	mov	r4, r0
   19150:	mov	r3, r2
   19154:	ldr	r2, [pc, #24]	; 19174 <sav_format_variable_name+0x30>
   19158:	add	r2, pc, r2
   1915c:	bl	4280 <snprintf@plt>
   19160:	mov	r0, r4
   19164:	bl	41fc <strlen@plt>
   19168:	ldr	r4, [sp]
   1916c:	add	sp, sp, #4
   19170:	pop	{pc}		; (ldr pc, [sp], #4)
   19174:	.word	0x0000d494

00019178 <sav_write_string>:
   19178:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1917c:	strd	r6, [sp, #8]
   19180:	strd	r8, [sp, #16]
   19184:	str	sl, [sp, #24]
   19188:	str	lr, [sp, #28]
   1918c:	mov	r7, r0
   19190:	mov	r4, r1
   19194:	mov	r6, r2
   19198:	ldr	r2, [r1, #1596]	; 0x63c
   1919c:	mov	r1, #32
   191a0:	bl	42a4 <memset@plt>
   191a4:	cmp	r6, #0
   191a8:	moveq	r0, #0
   191ac:	beq	19228 <sav_write_string+0xb0>
   191b0:	ldrb	r3, [r6]
   191b4:	cmp	r3, #0
   191b8:	moveq	r0, #0
   191bc:	beq	19228 <sav_write_string+0xb0>
   191c0:	mov	r0, r6
   191c4:	bl	41fc <strlen@plt>
   191c8:	mov	r8, r0
   191cc:	ldr	r3, [r4, #1596]	; 0x63c
   191d0:	cmp	r3, r0
   191d4:	movcc	r0, #22
   191d8:	bcc	19228 <sav_write_string+0xb0>
   191dc:	cmp	r8, #255	; 0xff
   191e0:	bls	19240 <sav_write_string+0xc8>
   191e4:	mov	r4, #0
   191e8:	mov	r5, r4
   191ec:	mov	r9, #255	; 0xff
   191f0:	mov	r2, r9
   191f4:	add	r1, r6, r4
   191f8:	add	r0, r7, r5
   191fc:	bl	3f14 <memcpy@plt>
   19200:	add	r5, r5, #256	; 0x100
   19204:	add	r4, r4, #255	; 0xff
   19208:	mov	r1, r4
   1920c:	sub	r2, r8, r4
   19210:	cmp	r2, #255	; 0xff
   19214:	bhi	191f0 <sav_write_string+0x78>
   19218:	add	r1, r6, r1
   1921c:	add	r0, r7, r5
   19220:	bl	3f14 <memcpy@plt>
   19224:	mov	r0, #0
   19228:	ldrd	r4, [sp]
   1922c:	ldrd	r6, [sp, #8]
   19230:	ldrd	r8, [sp, #16]
   19234:	ldr	sl, [sp, #24]
   19238:	add	sp, sp, #28
   1923c:	pop	{pc}		; (ldr pc, [sp], #4)
   19240:	mov	r2, r8
   19244:	mov	r5, #0
   19248:	mov	r1, r5
   1924c:	b	19218 <sav_write_string+0xa0>

00019250 <sav_variable_ok>:
   19250:	strd	r4, [sp, #-16]!
   19254:	str	r6, [sp, #8]
   19258:	str	lr, [sp, #12]
   1925c:	mov	r4, r0
   19260:	add	r5, r0, #8
   19264:	mov	r0, r5
   19268:	bl	41fc <strlen@plt>
   1926c:	cmp	r0, #64	; 0x40
   19270:	movhi	r0, #28
   19274:	bhi	194c4 <sav_variable_ok+0x274>
   19278:	cmp	r0, #0
   1927c:	beq	194dc <sav_variable_ok+0x28c>
   19280:	ldr	r1, [pc, #604]	; 194e4 <sav_variable_ok+0x294>
   19284:	add	r1, pc, r1
   19288:	mov	r0, r5
   1928c:	bl	3df4 <strcmp@plt>
   19290:	cmp	r0, #0
   19294:	beq	194d4 <sav_variable_ok+0x284>
   19298:	ldr	r1, [pc, #584]	; 194e8 <sav_variable_ok+0x298>
   1929c:	add	r1, pc, r1
   192a0:	mov	r0, r5
   192a4:	bl	3df4 <strcmp@plt>
   192a8:	cmp	r0, #0
   192ac:	moveq	r0, #27
   192b0:	beq	194c4 <sav_variable_ok+0x274>
   192b4:	ldr	r1, [pc, #560]	; 194ec <sav_variable_ok+0x29c>
   192b8:	add	r1, pc, r1
   192bc:	mov	r0, r5
   192c0:	bl	3df4 <strcmp@plt>
   192c4:	cmp	r0, #0
   192c8:	moveq	r0, #27
   192cc:	beq	194c4 <sav_variable_ok+0x274>
   192d0:	ldr	r1, [pc, #536]	; 194f0 <sav_variable_ok+0x2a0>
   192d4:	add	r1, pc, r1
   192d8:	mov	r0, r5
   192dc:	bl	3df4 <strcmp@plt>
   192e0:	cmp	r0, #0
   192e4:	moveq	r0, #27
   192e8:	beq	194c4 <sav_variable_ok+0x274>
   192ec:	ldr	r1, [pc, #512]	; 194f4 <sav_variable_ok+0x2a4>
   192f0:	add	r1, pc, r1
   192f4:	mov	r0, r5
   192f8:	bl	3df4 <strcmp@plt>
   192fc:	cmp	r0, #0
   19300:	moveq	r0, #27
   19304:	beq	194c4 <sav_variable_ok+0x274>
   19308:	ldr	r1, [pc, #488]	; 194f8 <sav_variable_ok+0x2a8>
   1930c:	add	r1, pc, r1
   19310:	mov	r0, r5
   19314:	bl	3df4 <strcmp@plt>
   19318:	cmp	r0, #0
   1931c:	moveq	r0, #27
   19320:	beq	194c4 <sav_variable_ok+0x274>
   19324:	ldr	r1, [pc, #464]	; 194fc <sav_variable_ok+0x2ac>
   19328:	add	r1, pc, r1
   1932c:	mov	r0, r5
   19330:	bl	3df4 <strcmp@plt>
   19334:	cmp	r0, #0
   19338:	moveq	r0, #27
   1933c:	beq	194c4 <sav_variable_ok+0x274>
   19340:	ldr	r1, [pc, #440]	; 19500 <sav_variable_ok+0x2b0>
   19344:	add	r1, pc, r1
   19348:	mov	r0, r5
   1934c:	bl	3df4 <strcmp@plt>
   19350:	cmp	r0, #0
   19354:	moveq	r0, #27
   19358:	beq	194c4 <sav_variable_ok+0x274>
   1935c:	ldr	r1, [pc, #416]	; 19504 <sav_variable_ok+0x2b4>
   19360:	add	r1, pc, r1
   19364:	mov	r0, r5
   19368:	bl	3df4 <strcmp@plt>
   1936c:	cmp	r0, #0
   19370:	moveq	r0, #27
   19374:	beq	194c4 <sav_variable_ok+0x274>
   19378:	ldr	r1, [pc, #392]	; 19508 <sav_variable_ok+0x2b8>
   1937c:	add	r1, pc, r1
   19380:	mov	r0, r5
   19384:	bl	3df4 <strcmp@plt>
   19388:	cmp	r0, #0
   1938c:	moveq	r0, #27
   19390:	beq	194c4 <sav_variable_ok+0x274>
   19394:	ldr	r1, [pc, #368]	; 1950c <sav_variable_ok+0x2bc>
   19398:	add	r1, pc, r1
   1939c:	mov	r0, r5
   193a0:	bl	3df4 <strcmp@plt>
   193a4:	cmp	r0, #0
   193a8:	moveq	r0, #27
   193ac:	beq	194c4 <sav_variable_ok+0x274>
   193b0:	ldr	r1, [pc, #344]	; 19510 <sav_variable_ok+0x2c0>
   193b4:	add	r1, pc, r1
   193b8:	mov	r0, r5
   193bc:	bl	3df4 <strcmp@plt>
   193c0:	cmp	r0, #0
   193c4:	moveq	r0, #27
   193c8:	beq	194c4 <sav_variable_ok+0x274>
   193cc:	ldr	r1, [pc, #320]	; 19514 <sav_variable_ok+0x2c4>
   193d0:	add	r1, pc, r1
   193d4:	mov	r0, r5
   193d8:	bl	3df4 <strcmp@plt>
   193dc:	cmp	r0, #0
   193e0:	beq	194b0 <sav_variable_ok+0x260>
   193e4:	ldrb	r0, [r4, #8]
   193e8:	cmp	r0, #0
   193ec:	beq	194c4 <sav_variable_ok+0x274>
   193f0:	cmp	r0, #32
   193f4:	beq	194b8 <sav_variable_ok+0x268>
   193f8:	add	r4, r4, #8
   193fc:	mov	r2, r0
   19400:	b	19418 <sav_variable_ok+0x1c8>
   19404:	ldrb	r2, [r4, #1]!
   19408:	cmp	r2, #0
   1940c:	beq	19480 <sav_variable_ok+0x230>
   19410:	cmp	r2, #32
   19414:	beq	194c0 <sav_variable_ok+0x270>
   19418:	sub	r3, r2, #64	; 0x40
   1941c:	uxtb	r3, r3
   19420:	cmp	r2, #46	; 0x2e
   19424:	cmpne	r3, #26
   19428:	movhi	r3, #1
   1942c:	movls	r3, #0
   19430:	cmp	r2, #95	; 0x5f
   19434:	moveq	r3, #0
   19438:	andne	r3, r3, #1
   1943c:	sub	r1, r2, #35	; 0x23
   19440:	uxtb	r1, r1
   19444:	cmp	r1, #1
   19448:	movls	r3, #0
   1944c:	andhi	r3, r3, #1
   19450:	cmp	r3, #0
   19454:	beq	19404 <sav_variable_ok+0x1b4>
   19458:	sub	r3, r2, #97	; 0x61
   1945c:	uxtb	r3, r3
   19460:	cmp	r3, #25
   19464:	bls	19404 <sav_variable_ok+0x1b4>
   19468:	sub	r2, r2, #48	; 0x30
   1946c:	uxtb	r2, r2
   19470:	cmp	r2, #9
   19474:	bls	19404 <sav_variable_ok+0x1b4>
   19478:	mov	r0, #26
   1947c:	b	194c4 <sav_variable_ok+0x274>
   19480:	sub	r3, r0, #64	; 0x40
   19484:	uxtb	r3, r3
   19488:	cmp	r0, #0
   1948c:	cmpne	r3, #26
   19490:	movls	r0, #0
   19494:	bls	194c4 <sav_variable_ok+0x274>
   19498:	sub	r0, r0, #97	; 0x61
   1949c:	uxtb	r0, r0
   194a0:	cmp	r0, #26
   194a4:	movcc	r0, #0
   194a8:	movcs	r0, #25
   194ac:	b	194c4 <sav_variable_ok+0x274>
   194b0:	mov	r0, #27
   194b4:	b	194c4 <sav_variable_ok+0x274>
   194b8:	mov	r0, #26
   194bc:	b	194c4 <sav_variable_ok+0x274>
   194c0:	mov	r0, #26
   194c4:	ldrd	r4, [sp]
   194c8:	ldr	r6, [sp, #8]
   194cc:	add	sp, sp, #12
   194d0:	pop	{pc}		; (ldr pc, [sp], #4)
   194d4:	mov	r0, #27
   194d8:	b	194c4 <sav_variable_ok+0x274>
   194dc:	mov	r0, #38	; 0x26
   194e0:	b	194c4 <sav_variable_ok+0x274>
   194e4:	.word	0x0000e870
   194e8:	.word	0x0000e824
   194ec:	.word	0x0000e80c
   194f0:	.word	0x0000e7f4
   194f4:	.word	0x0000e7dc
   194f8:	.word	0x0000e7c4
   194fc:	.word	0x0000e7ac
   19500:	.word	0x0000e794
   19504:	.word	0x0000e77c
   19508:	.word	0x0000e764
   1950c:	.word	0x0000e74c
   19510:	.word	0x0000e734
   19514:	.word	0x0000e71c

00019518 <readstat_label_set_number_short_variables>:
   19518:	strd	r4, [sp, #-16]!
   1951c:	str	r6, [sp, #8]
   19520:	str	lr, [sp, #12]
   19524:	ldr	r3, [r0, #276]	; 0x114
   19528:	cmp	r3, #0
   1952c:	ble	19578 <readstat_label_set_number_short_variables+0x60>
   19530:	mov	r5, r0
   19534:	mov	r4, #0
   19538:	mov	r6, r4
   1953c:	mov	r1, r4
   19540:	mov	r0, r5
   19544:	bl	4448 <readstat_get_label_set_variable@plt>
   19548:	ldr	r3, [r0, #1596]	; 0x63c
   1954c:	cmp	r3, #8
   19550:	addls	r6, r6, #1
   19554:	add	r4, r4, #1
   19558:	ldr	r3, [r5, #276]	; 0x114
   1955c:	cmp	r3, r4
   19560:	bgt	1953c <readstat_label_set_number_short_variables+0x24>
   19564:	mov	r0, r6
   19568:	ldrd	r4, [sp]
   1956c:	ldr	r6, [sp, #8]
   19570:	add	sp, sp, #12
   19574:	pop	{pc}		; (ldr pc, [sp], #4)
   19578:	mov	r6, #0
   1957c:	b	19564 <readstat_label_set_number_short_variables+0x4c>

00019580 <sav_begin_data>:
   19580:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19584:	strd	r6, [sp, #8]
   19588:	strd	r8, [sp, #16]
   1958c:	strd	sl, [sp, #24]
   19590:	str	lr, [sp, #32]
   19594:	sub	sp, sp, #404	; 0x194
   19598:	ldr	r3, [r0, #308]	; 0x134
   1959c:	cmp	r3, #0
   195a0:	moveq	fp, #14
   195a4:	beq	1a0a8 <sav_begin_data+0xb28>
   195a8:	mov	r9, r0
   195ac:	ldr	r4, [r0, #28]
   195b0:	mov	r1, #15
   195b4:	mov	r0, r4
   195b8:	bl	3d4c <calloc@plt>
   195bc:	mov	r5, r0
   195c0:	str	r0, [sp, #32]
   195c4:	mov	r0, r4
   195c8:	bl	4190 <ck_hash_table_init@plt>
   195cc:	str	r0, [sp, #12]
   195d0:	ldr	r3, [r9, #28]
   195d4:	cmp	r3, #0
   195d8:	ble	196cc <sav_begin_data+0x14c>
   195dc:	add	r6, r5, #9
   195e0:	mov	r5, #0
   195e4:	ldr	fp, [pc, #3452]	; 1a368 <sav_begin_data+0xde8>
   195e8:	add	fp, pc, fp
   195ec:	ldr	sl, [pc, #3448]	; 1a36c <sav_begin_data+0xdec>
   195f0:	add	sl, pc, sl
   195f4:	ldr	r3, [pc, #3444]	; 1a370 <sav_begin_data+0xdf0>
   195f8:	add	r3, pc, r3
   195fc:	str	r3, [sp, #20]
   19600:	b	19618 <sav_begin_data+0x98>
   19604:	add	r5, r5, #1
   19608:	add	r6, r6, #15
   1960c:	ldr	r3, [r9, #28]
   19610:	cmp	r5, r3
   19614:	bge	196cc <sav_begin_data+0x14c>
   19618:	mov	r1, r5
   1961c:	mov	r0, r9
   19620:	bl	437c <readstat_get_variable@plt>
   19624:	mov	r8, r0
   19628:	sub	r4, r6, #9
   1962c:	add	r3, r0, #8
   19630:	mov	r2, fp
   19634:	mov	r1, #9
   19638:	mov	r0, r4
   1963c:	bl	4280 <snprintf@plt>
   19640:	str	r6, [sp, #16]
   19644:	ldrb	r7, [r6, #-9]
   19648:	cmp	r7, #0
   1964c:	beq	19670 <sav_begin_data+0xf0>
   19650:	bl	4184 <__ctype_toupper_loc@plt>
   19654:	mov	r3, r4
   19658:	ldr	r2, [r0]
   1965c:	ldr	r2, [r2, r7, lsl #2]
   19660:	strb	r2, [r3]
   19664:	ldrb	r7, [r3, #1]!
   19668:	cmp	r7, #0
   1966c:	bne	19658 <sav_begin_data+0xd8>
   19670:	ldr	r1, [sp, #12]
   19674:	mov	r0, r4
   19678:	bl	3fc8 <ck_str_hash_lookup@plt>
   1967c:	cmp	r0, #0
   19680:	beq	19698 <sav_begin_data+0x118>
   19684:	add	r3, r5, #1
   19688:	mov	r2, sl
   1968c:	mov	r1, #9
   19690:	mov	r0, r4
   19694:	bl	4280 <snprintf@plt>
   19698:	ldr	r2, [sp, #12]
   1969c:	mov	r1, r8
   196a0:	mov	r0, r4
   196a4:	bl	44f0 <ck_str_hash_insert@plt>
   196a8:	ldr	r3, [r8, #1600]	; 0x640
   196ac:	cmp	r3, #255	; 0xff
   196b0:	bls	19604 <sav_begin_data+0x84>
   196b4:	mov	r3, r4
   196b8:	ldr	r2, [sp, #20]
   196bc:	mov	r1, #6
   196c0:	ldr	r0, [sp, #16]
   196c4:	bl	4280 <snprintf@plt>
   196c8:	b	19604 <sav_begin_data+0x84>
   196cc:	ldr	r0, [sp, #12]
   196d0:	bl	4244 <ck_hash_table_free@plt>
   196d4:	mov	r2, #176	; 0xb0
   196d8:	mov	r1, #0
   196dc:	add	r0, sp, #144	; 0x90
   196e0:	bl	42a4 <memset@plt>
   196e4:	ldr	r3, [r9, #20]
   196e8:	str	r3, [sp, #56]	; 0x38
   196ec:	add	r0, sp, #56	; 0x38
   196f0:	bl	4160 <localtime@plt>
   196f4:	ldr	ip, [pc, #3192]	; 1a374 <sav_begin_data+0xdf4>
   196f8:	add	ip, pc, ip
   196fc:	ldrd	r2, [ip]
   19700:	strd	r2, [sp, #96]	; 0x60
   19704:	ldrd	r2, [ip, #8]
   19708:	strd	r2, [sp, #104]	; 0x68
   1970c:	ldrd	r2, [ip, #16]
   19710:	strd	r2, [sp, #112]	; 0x70
   19714:	ldrd	r2, [ip, #24]
   19718:	strd	r2, [sp, #120]	; 0x78
   1971c:	ldrd	r2, [ip, #32]
   19720:	strd	r2, [sp, #128]	; 0x80
   19724:	ldrd	r2, [ip, #40]	; 0x28
   19728:	strd	r2, [sp, #136]	; 0x88
   1972c:	mov	r3, #0
   19730:	str	r3, [sp, #80]	; 0x50
   19734:	str	r3, [sp, #84]	; 0x54
   19738:	strh	r3, [sp, #88]	; 0x58
   1973c:	str	r3, [sp, #68]	; 0x44
   19740:	str	r3, [sp, #72]	; 0x48
   19744:	strb	r3, [sp, #76]	; 0x4c
   19748:	subs	r4, r0, #0
   1974c:	beq	1b408 <sav_begin_data+0x1e88>
   19750:	movw	r3, #17956	; 0x4624
   19754:	movt	r3, #12876	; 0x324c
   19758:	str	r3, [sp, #144]	; 0x90
   1975c:	ldr	r0, [r9, #16]
   19760:	cmp	r0, #2
   19764:	beq	1994c <sav_begin_data+0x3cc>
   19768:	movw	r3, #8224	; 0x2020
   1976c:	strh	r3, [sp, #206]	; 0xce
   19770:	ldr	r1, [pc, #3072]	; 1a378 <sav_begin_data+0xdf8>
   19774:	add	r1, pc, r1
   19778:	ldrd	r2, [r1]
   1977c:	strd	r2, [sp, #148]	; 0x94
   19780:	ldrd	r2, [r1, #8]
   19784:	strd	r2, [sp, #156]	; 0x9c
   19788:	ldrd	r2, [r1, #16]
   1978c:	strd	r2, [sp, #164]	; 0xa4
   19790:	ldrd	r2, [r1, #24]
   19794:	strd	r2, [sp, #172]	; 0xac
   19798:	ldrd	r2, [r1, #32]
   1979c:	strd	r2, [sp, #180]	; 0xb4
   197a0:	ldrd	r2, [r1, #40]	; 0x28
   197a4:	strd	r2, [sp, #188]	; 0xbc
   197a8:	ldrd	r2, [r1, #48]	; 0x30
   197ac:	strd	r2, [sp, #196]	; 0xc4
   197b0:	ldrh	r3, [r1, #56]	; 0x38
   197b4:	strh	r3, [sp, #204]	; 0xcc
   197b8:	ldrb	r3, [r1, #58]	; 0x3a
   197bc:	strb	r3, [sp, #206]	; 0xce
   197c0:	mov	r3, #2
   197c4:	str	r3, [sp, #208]	; 0xd0
   197c8:	ldr	r3, [r9, #76]	; 0x4c
   197cc:	lsr	r3, r3, #3
   197d0:	str	r3, [sp, #212]	; 0xd4
   197d4:	cmp	r0, #1
   197d8:	beq	199c8 <sav_begin_data+0x448>
   197dc:	ldr	r3, [r9, #224]	; 0xe0
   197e0:	cmp	r3, #0
   197e4:	moveq	r3, #0
   197e8:	beq	19804 <sav_begin_data+0x284>
   197ec:	ldr	r3, [r3, #1592]	; 0x638
   197f0:	add	r2, r3, #7
   197f4:	cmp	r3, #0
   197f8:	movlt	r3, r2
   197fc:	asr	r3, r3, #3
   19800:	add	r3, r3, #1
   19804:	str	r3, [sp, #220]	; 0xdc
   19808:	ldr	r3, [r9, #80]	; 0x50
   1980c:	str	r3, [sp, #224]	; 0xe0
   19810:	mov	r3, #0
   19814:	str	r3, [sp, #228]	; 0xe4
   19818:	movt	r3, #16473	; 0x4059
   1981c:	str	r3, [sp, #232]	; 0xe8
   19820:	ldr	r1, [r4, #12]
   19824:	movw	r5, #34079	; 0x851f
   19828:	movt	r5, #20971	; 0x51eb
   1982c:	umull	r2, r3, r5, r1
   19830:	lsr	r3, r3, #5
   19834:	mov	r6, #100	; 0x64
   19838:	add	r7, sp, #80	; 0x50
   1983c:	ldr	r0, [r4, #20]
   19840:	umull	ip, r2, r5, r0
   19844:	lsr	r2, r2, #5
   19848:	mls	r2, r6, r2, r0
   1984c:	str	r2, [sp, #4]
   19850:	ldr	r0, [r4, #16]
   19854:	add	r2, sp, #96	; 0x60
   19858:	add	r2, r2, r0, lsl #2
   1985c:	str	r2, [sp]
   19860:	mls	r3, r6, r3, r1
   19864:	ldr	r2, [pc, #2832]	; 1a37c <sav_begin_data+0xdfc>
   19868:	add	r2, pc, r2
   1986c:	mov	r1, #10
   19870:	mov	r0, r7
   19874:	bl	4280 <snprintf@plt>
   19878:	ldrd	r2, [r7]
   1987c:	strd	r2, [sp, #236]	; 0xec
   19880:	ldrb	r3, [r7, #8]
   19884:	strb	r3, [sp, #244]	; 0xf4
   19888:	ldr	r1, [r4, #8]
   1988c:	umull	r2, r3, r5, r1
   19890:	lsr	r3, r3, #5
   19894:	ldr	r0, [r4]
   19898:	umull	ip, r2, r5, r0
   1989c:	lsr	r2, r2, #5
   198a0:	mls	r2, r6, r2, r0
   198a4:	str	r2, [sp, #4]
   198a8:	ldr	r2, [r4, #4]
   198ac:	umull	r0, r5, r5, r2
   198b0:	lsr	r5, r5, #5
   198b4:	mls	r5, r6, r5, r2
   198b8:	str	r5, [sp]
   198bc:	mls	r3, r6, r3, r1
   198c0:	ldr	r2, [pc, #2744]	; 1a380 <sav_begin_data+0xe00>
   198c4:	add	r2, pc, r2
   198c8:	mov	r1, #9
   198cc:	add	r4, sp, #68	; 0x44
   198d0:	mov	r0, r4
   198d4:	bl	4280 <snprintf@plt>
   198d8:	ldr	r3, [r4, #4]
   198dc:	ldr	r2, [sp, #68]	; 0x44
   198e0:	str	r2, [sp, #245]	; 0xf5
   198e4:	str	r3, [sp, #249]	; 0xf9
   198e8:	mov	r2, #64	; 0x40
   198ec:	mov	r1, #32
   198f0:	add	r0, sp, #253	; 0xfd
   198f4:	bl	42a4 <memset@plt>
   198f8:	ldrb	r3, [r9, #88]	; 0x58
   198fc:	cmp	r3, #0
   19900:	bne	199d4 <sav_begin_data+0x454>
   19904:	mov	r2, #176	; 0xb0
   19908:	add	r1, sp, #144	; 0x90
   1990c:	mov	r0, r9
   19910:	bl	4454 <readstat_write_bytes@plt>
   19914:	subs	fp, r0, #0
   19918:	bne	1a0a0 <sav_begin_data+0xb20>
   1991c:	ldr	r3, [r9, #28]
   19920:	cmp	r3, #0
   19924:	ble	1b198 <sav_begin_data+0x1c18>
   19928:	ldr	r3, [sp, #32]
   1992c:	str	r3, [sp, #16]
   19930:	mov	r3, #0
   19934:	str	r3, [sp, #20]
   19938:	movw	r3, #36409	; 0x8e39
   1993c:	movt	r3, #14563	; 0x38e3
   19940:	str	r3, [sp, #36]	; 0x24
   19944:	str	r9, [sp, #12]
   19948:	b	1b060 <sav_begin_data+0x1ae0>
   1994c:	mov	r3, #51	; 0x33
   19950:	strb	r3, [sp, #147]	; 0x93
   19954:	movw	r3, #8224	; 0x2020
   19958:	strh	r3, [sp, #206]	; 0xce
   1995c:	ldr	r1, [pc, #2592]	; 1a384 <sav_begin_data+0xe04>
   19960:	add	r1, pc, r1
   19964:	ldrd	r2, [r1]
   19968:	strd	r2, [sp, #148]	; 0x94
   1996c:	ldrd	r2, [r1, #8]
   19970:	strd	r2, [sp, #156]	; 0x9c
   19974:	ldrd	r2, [r1, #16]
   19978:	strd	r2, [sp, #164]	; 0xa4
   1997c:	ldrd	r2, [r1, #24]
   19980:	strd	r2, [sp, #172]	; 0xac
   19984:	ldrd	r2, [r1, #32]
   19988:	strd	r2, [sp, #180]	; 0xb4
   1998c:	ldrd	r2, [r1, #40]	; 0x28
   19990:	strd	r2, [sp, #188]	; 0xbc
   19994:	ldrd	r2, [r1, #48]	; 0x30
   19998:	strd	r2, [sp, #196]	; 0xc4
   1999c:	ldrh	r3, [r1, #56]	; 0x38
   199a0:	strh	r3, [sp, #204]	; 0xcc
   199a4:	ldrb	r3, [r1, #58]	; 0x3a
   199a8:	strb	r3, [sp, #206]	; 0xce
   199ac:	mov	r2, #2
   199b0:	str	r2, [sp, #208]	; 0xd0
   199b4:	ldr	r3, [r9, #76]	; 0x4c
   199b8:	lsr	r3, r3, #3
   199bc:	str	r3, [sp, #212]	; 0xd4
   199c0:	str	r2, [sp, #216]	; 0xd8
   199c4:	b	197dc <sav_begin_data+0x25c>
   199c8:	mov	r3, #1
   199cc:	str	r3, [sp, #216]	; 0xd8
   199d0:	b	197dc <sav_begin_data+0x25c>
   199d4:	add	r4, r9, #88	; 0x58
   199d8:	mov	r0, r4
   199dc:	bl	41fc <strlen@plt>
   199e0:	cmp	r0, #64	; 0x40
   199e4:	movcc	r2, r0
   199e8:	movcs	r2, #64	; 0x40
   199ec:	mov	r1, r4
   199f0:	add	r0, sp, #253	; 0xfd
   199f4:	bl	3f14 <memcpy@plt>
   199f8:	b	19904 <sav_begin_data+0x384>
   199fc:	mov	r0, r4
   19a00:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   19a04:	subs	fp, r0, #0
   19a08:	ble	19b48 <sav_begin_data+0x5c8>
   19a0c:	mov	r5, fp
   19a10:	mov	r3, #0
   19a14:	str	r3, [sp, #24]
   19a18:	mov	sl, r3
   19a1c:	add	r7, sp, #80	; 0x50
   19a20:	add	r6, sp, #144	; 0x90
   19a24:	b	19a40 <sav_begin_data+0x4c0>
   19a28:	add	r5, r5, #1
   19a2c:	mov	r3, #1
   19a30:	str	r3, [sp, #24]
   19a34:	add	sl, sl, #1
   19a38:	cmp	fp, sl
   19a3c:	beq	19a88 <sav_begin_data+0x508>
   19a40:	mov	r2, sl
   19a44:	mov	r1, r4
   19a48:	mov	r0, r7
   19a4c:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   19a50:	mov	r2, sl
   19a54:	mov	r1, r4
   19a58:	mov	r0, r6
   19a5c:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19a60:	ldm	r7, {r0, r1, r2, r3}
   19a64:	bl	42b0 <spss_64bit_value@plt>
   19a68:	mov	r8, r0
   19a6c:	mov	r9, r1
   19a70:	ldm	r6, {r0, r1, r2, r3}
   19a74:	bl	42b0 <spss_64bit_value@plt>
   19a78:	cmp	r9, r1
   19a7c:	cmpeq	r8, r0
   19a80:	bne	19a28 <sav_begin_data+0x4a8>
   19a84:	b	19a34 <sav_begin_data+0x4b4>
   19a88:	ldr	r3, [sp, #24]
   19a8c:	cmp	r3, #0
   19a90:	rsbne	r5, r5, #0
   19a94:	eor	r3, r5, r5, asr #31
   19a98:	sub	r3, r3, r5, asr #31
   19a9c:	cmp	r3, #3
   19aa0:	ble	1b114 <sav_begin_data+0x1b94>
   19aa4:	mov	fp, #31
   19aa8:	b	1a0a0 <sav_begin_data+0xb20>
   19aac:	mov	r0, r4
   19ab0:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   19ab4:	subs	fp, r0, #0
   19ab8:	ble	19b50 <sav_begin_data+0x5d0>
   19abc:	mov	r5, fp
   19ac0:	mov	sl, #0
   19ac4:	mov	r8, sl
   19ac8:	add	r7, sp, #80	; 0x50
   19acc:	add	r6, sp, #144	; 0x90
   19ad0:	b	19ae0 <sav_begin_data+0x560>
   19ad4:	add	r8, r8, #1
   19ad8:	cmp	fp, r8
   19adc:	beq	19b3c <sav_begin_data+0x5bc>
   19ae0:	mov	r2, r8
   19ae4:	mov	r1, r4
   19ae8:	mov	r0, r7
   19aec:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   19af0:	mov	r2, r8
   19af4:	mov	r1, r4
   19af8:	mov	r0, r6
   19afc:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19b00:	ldm	r7, {r0, r1, r2, r3}
   19b04:	bl	3fa4 <readstat_string_value@plt>
   19b08:	mov	r9, r0
   19b0c:	ldm	r6, {r0, r1, r2, r3}
   19b10:	bl	3fa4 <readstat_string_value@plt>
   19b14:	mov	r1, r0
   19b18:	cmp	r9, #0
   19b1c:	cmpne	r0, #0
   19b20:	beq	19ad4 <sav_begin_data+0x554>
   19b24:	mov	r0, r9
   19b28:	bl	3df4 <strcmp@plt>
   19b2c:	cmp	r0, #0
   19b30:	addne	r5, r5, #1
   19b34:	movne	sl, #1
   19b38:	b	19ad4 <sav_begin_data+0x554>
   19b3c:	cmp	sl, #0
   19b40:	rsbne	r5, r5, #0
   19b44:	b	19a94 <sav_begin_data+0x514>
   19b48:	mov	r5, fp
   19b4c:	b	19a94 <sav_begin_data+0x514>
   19b50:	mov	r5, fp
   19b54:	b	19a94 <sav_begin_data+0x514>
   19b58:	ldr	r2, [sp, #28]
   19b5c:	add	r1, sp, #68	; 0x44
   19b60:	add	r0, sp, #116	; 0x74
   19b64:	bl	3f14 <memcpy@plt>
   19b68:	b	1b174 <sav_begin_data+0x1bf4>
   19b6c:	add	r5, r4, #564	; 0x234
   19b70:	mov	r0, r5
   19b74:	bl	41fc <strlen@plt>
   19b78:	cmp	r0, #0
   19b7c:	beq	19bec <sav_begin_data+0x66c>
   19b80:	cmp	r0, #256	; 0x100
   19b84:	strls	r0, [sp, #80]	; 0x50
   19b88:	movhi	r3, #256	; 0x100
   19b8c:	strhi	r3, [sp, #80]	; 0x50
   19b90:	mov	r2, #4
   19b94:	add	r1, sp, #80	; 0x50
   19b98:	ldr	r7, [sp, #12]
   19b9c:	mov	r0, r7
   19ba0:	bl	4454 <readstat_write_bytes@plt>
   19ba4:	cmp	r0, #0
   19ba8:	beq	19bb4 <sav_begin_data+0x634>
   19bac:	mov	fp, r0
   19bb0:	b	1a0a0 <sav_begin_data+0xb20>
   19bb4:	ldr	r6, [sp, #80]	; 0x50
   19bb8:	add	r6, r6, #3
   19bbc:	bic	r6, r6, #3
   19bc0:	mov	r2, r6
   19bc4:	mov	r1, r5
   19bc8:	add	r5, sp, #144	; 0x90
   19bcc:	mov	r0, r5
   19bd0:	bl	42bc <strncpy@plt>
   19bd4:	mov	r2, r6
   19bd8:	mov	r1, r5
   19bdc:	mov	r0, r7
   19be0:	bl	4454 <readstat_write_bytes@plt>
   19be4:	cmp	r0, #0
   19be8:	bne	19c64 <sav_begin_data+0x6e4>
   19bec:	ldr	r3, [r4]
   19bf0:	cmp	r3, #5
   19bf4:	beq	19c6c <sav_begin_data+0x6ec>
   19bf8:	mov	r0, r4
   19bfc:	bl	42c8 <readstat_variable_get_storage_width@plt>
   19c00:	cmp	r0, #8
   19c04:	bls	19dec <sav_begin_data+0x86c>
   19c08:	ldr	r1, [r4, #1596]	; 0x63c
   19c0c:	lsr	r1, r1, #3
   19c10:	sub	r1, r1, #1
   19c14:	cmp	r1, #31
   19c18:	movge	r1, #31
   19c1c:	ldr	r0, [sp, #12]
   19c20:	bl	18f60 <sav_emit_blank_variable_records>
   19c24:	cmp	r0, #0
   19c28:	bne	1af88 <sav_begin_data+0x1a08>
   19c2c:	ldr	r1, [r4, #1600]	; 0x640
   19c30:	ldr	r0, [r4]
   19c34:	bl	18e38 <sav_variable_segments>
   19c38:	mov	sl, r0
   19c3c:	cmp	r0, #1
   19c40:	ble	1b038 <sav_begin_data+0x1ab8>
   19c44:	sub	r9, r0, #1
   19c48:	rsb	r8, r9, r9, lsl #6
   19c4c:	lsl	r8, r8, #2
   19c50:	mov	r6, #1
   19c54:	ldr	r3, [pc, #1836]	; 1a388 <sav_begin_data+0xe08>
   19c58:	add	r3, pc, r3
   19c5c:	str	r3, [sp, #24]
   19c60:	b	19ff4 <sav_begin_data+0xa74>
   19c64:	mov	fp, r0
   19c68:	b	1a0a0 <sav_begin_data+0xb20>
   19c6c:	mov	r0, r4
   19c70:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   19c74:	subs	sl, r0, #0
   19c78:	ble	19c08 <sav_begin_data+0x688>
   19c7c:	mov	r9, #0
   19c80:	add	r8, sp, #80	; 0x50
   19c84:	add	r5, sp, #144	; 0x90
   19c88:	mov	r2, r9
   19c8c:	mov	r1, r4
   19c90:	mov	r0, r8
   19c94:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   19c98:	mov	r2, r9
   19c9c:	mov	r1, r4
   19ca0:	mov	r0, r5
   19ca4:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19ca8:	ldm	r8, {r0, r1, r2, r3}
   19cac:	bl	42b0 <spss_64bit_value@plt>
   19cb0:	mov	r6, r0
   19cb4:	mov	r7, r1
   19cb8:	ldm	r5, {r0, r1, r2, r3}
   19cbc:	bl	42b0 <spss_64bit_value@plt>
   19cc0:	cmp	r7, r1
   19cc4:	cmpeq	r6, r0
   19cc8:	bne	19cf4 <sav_begin_data+0x774>
   19ccc:	add	r9, r9, #1
   19cd0:	cmp	sl, r9
   19cd4:	bne	19c88 <sav_begin_data+0x708>
   19cd8:	mov	fp, #0
   19cdc:	mov	r9, #0
   19ce0:	add	r5, sp, #80	; 0x50
   19ce4:	add	r8, sp, #144	; 0x90
   19ce8:	add	r3, sp, #64	; 0x40
   19cec:	str	r3, [sp, #24]
   19cf0:	b	19d70 <sav_begin_data+0x7f0>
   19cf4:	add	r3, sp, #80	; 0x50
   19cf8:	ldm	r3, {r0, r1, r2, r3}
   19cfc:	bl	42b0 <spss_64bit_value@plt>
   19d00:	add	r3, sp, #48	; 0x30
   19d04:	strd	r0, [sp, #48]	; 0x30
   19d08:	mov	r2, #8
   19d0c:	mov	r1, r3
   19d10:	ldr	r5, [sp, #12]
   19d14:	mov	r0, r5
   19d18:	bl	4454 <readstat_write_bytes@plt>
   19d1c:	cmp	r0, #0
   19d20:	beq	19d34 <sav_begin_data+0x7b4>
   19d24:	cmp	r0, #0
   19d28:	beq	19c08 <sav_begin_data+0x688>
   19d2c:	mov	fp, r0
   19d30:	b	1a0a0 <sav_begin_data+0xb20>
   19d34:	add	r3, sp, #144	; 0x90
   19d38:	ldm	r3, {r0, r1, r2, r3}
   19d3c:	bl	42b0 <spss_64bit_value@plt>
   19d40:	strd	r0, [sp, #56]	; 0x38
   19d44:	mov	r2, #8
   19d48:	add	r1, sp, #56	; 0x38
   19d4c:	mov	r0, r5
   19d50:	bl	4454 <readstat_write_bytes@plt>
   19d54:	cmp	r0, #0
   19d58:	moveq	fp, #2
   19d5c:	beq	19cdc <sav_begin_data+0x75c>
   19d60:	b	19d24 <sav_begin_data+0x7a4>
   19d64:	add	r9, r9, #1
   19d68:	cmp	sl, r9
   19d6c:	beq	19c08 <sav_begin_data+0x688>
   19d70:	mov	r2, r9
   19d74:	mov	r1, r4
   19d78:	mov	r0, r5
   19d7c:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   19d80:	mov	r2, r9
   19d84:	mov	r1, r4
   19d88:	mov	r0, r8
   19d8c:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19d90:	ldm	r5, {r0, r1, r2, r3}
   19d94:	bl	42b0 <spss_64bit_value@plt>
   19d98:	mov	r6, r0
   19d9c:	mov	r7, r1
   19da0:	ldm	r8, {r0, r1, r2, r3}
   19da4:	bl	42b0 <spss_64bit_value@plt>
   19da8:	cmp	r7, r1
   19dac:	cmpeq	r6, r0
   19db0:	bne	19d64 <sav_begin_data+0x7e4>
   19db4:	ldm	r5, {r0, r1, r2, r3}
   19db8:	bl	42b0 <spss_64bit_value@plt>
   19dbc:	ldr	r3, [sp, #24]
   19dc0:	strd	r0, [r3, #-8]
   19dc4:	mov	r2, #8
   19dc8:	add	r1, sp, #56	; 0x38
   19dcc:	ldr	r0, [sp, #12]
   19dd0:	bl	4454 <readstat_write_bytes@plt>
   19dd4:	cmp	r0, #0
   19dd8:	bne	1af78 <sav_begin_data+0x19f8>
   19ddc:	add	fp, fp, #1
   19de0:	cmp	fp, #3
   19de4:	bne	19d64 <sav_begin_data+0x7e4>
   19de8:	b	19c08 <sav_begin_data+0x688>
   19dec:	mov	r0, r4
   19df0:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   19df4:	subs	r9, r0, #0
   19df8:	ble	19c08 <sav_begin_data+0x688>
   19dfc:	mov	r7, #0
   19e00:	add	r6, sp, #80	; 0x50
   19e04:	add	r5, sp, #144	; 0x90
   19e08:	b	19e18 <sav_begin_data+0x898>
   19e0c:	add	r7, r7, #1
   19e10:	cmp	r9, r7
   19e14:	beq	19eac <sav_begin_data+0x92c>
   19e18:	mov	r2, r7
   19e1c:	mov	r1, r4
   19e20:	mov	r0, r6
   19e24:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   19e28:	mov	r2, r7
   19e2c:	mov	r1, r4
   19e30:	mov	r0, r5
   19e34:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19e38:	ldm	r6, {r0, r1, r2, r3}
   19e3c:	bl	3fa4 <readstat_string_value@plt>
   19e40:	mov	r8, r0
   19e44:	ldm	r5, {r0, r1, r2, r3}
   19e48:	bl	3fa4 <readstat_string_value@plt>
   19e4c:	mov	sl, r0
   19e50:	cmp	r8, #0
   19e54:	cmpne	r0, #0
   19e58:	beq	19e0c <sav_begin_data+0x88c>
   19e5c:	mov	r1, r0
   19e60:	mov	r0, r8
   19e64:	bl	3df4 <strcmp@plt>
   19e68:	cmp	r0, #0
   19e6c:	beq	19e0c <sav_begin_data+0x88c>
   19e70:	mov	r2, #8
   19e74:	mov	r1, r8
   19e78:	ldr	r5, [sp, #12]
   19e7c:	mov	r0, r5
   19e80:	bl	4550 <readstat_write_space_padded_string@plt>
   19e84:	cmp	r0, #0
   19e88:	bne	19d24 <sav_begin_data+0x7a4>
   19e8c:	mov	r2, #8
   19e90:	mov	r1, sl
   19e94:	mov	r0, r5
   19e98:	bl	4550 <readstat_write_space_padded_string@plt>
   19e9c:	cmp	r0, #0
   19ea0:	moveq	sl, #2
   19ea4:	beq	19eb0 <sav_begin_data+0x930>
   19ea8:	b	19d24 <sav_begin_data+0x7a4>
   19eac:	mov	sl, #0
   19eb0:	mov	r6, #0
   19eb4:	add	r5, sp, #80	; 0x50
   19eb8:	add	r8, sp, #144	; 0x90
   19ebc:	mov	fp, #8
   19ec0:	b	19ed0 <sav_begin_data+0x950>
   19ec4:	add	r6, r6, #1
   19ec8:	cmp	r9, r6
   19ecc:	beq	19c08 <sav_begin_data+0x688>
   19ed0:	mov	r2, r6
   19ed4:	mov	r1, r4
   19ed8:	mov	r0, r5
   19edc:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   19ee0:	mov	r2, r6
   19ee4:	mov	r1, r4
   19ee8:	mov	r0, r8
   19eec:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   19ef0:	ldm	r5, {r0, r1, r2, r3}
   19ef4:	bl	3fa4 <readstat_string_value@plt>
   19ef8:	mov	r7, r0
   19efc:	ldm	r8, {r0, r1, r2, r3}
   19f00:	bl	3fa4 <readstat_string_value@plt>
   19f04:	mov	r1, r0
   19f08:	cmp	r7, #0
   19f0c:	cmpne	r0, #0
   19f10:	beq	19ec4 <sav_begin_data+0x944>
   19f14:	mov	r0, r7
   19f18:	bl	3df4 <strcmp@plt>
   19f1c:	cmp	r0, #0
   19f20:	bne	19ec4 <sav_begin_data+0x944>
   19f24:	mov	r2, fp
   19f28:	mov	r1, r7
   19f2c:	ldr	r0, [sp, #12]
   19f30:	bl	4550 <readstat_write_space_padded_string@plt>
   19f34:	cmp	r0, #0
   19f38:	bne	1af80 <sav_begin_data+0x1a00>
   19f3c:	add	sl, sl, #1
   19f40:	cmp	sl, #3
   19f44:	bne	19ec4 <sav_begin_data+0x944>
   19f48:	b	19c08 <sav_begin_data+0x688>
   19f4c:	str	r5, [sp, #144]	; 0x90
   19f50:	add	r1, sp, #96	; 0x60
   19f54:	mov	r0, r4
   19f58:	bl	40f4 <spss_format_for_variable@plt>
   19f5c:	str	r5, [sp, #100]	; 0x64
   19f60:	cmp	r0, #0
   19f64:	bne	1af90 <sav_begin_data+0x1a10>
   19f68:	ldr	r2, [sp, #96]	; 0x60
   19f6c:	ldr	r3, [sp, #104]	; 0x68
   19f70:	orr	r3, r3, r2, lsl #16
   19f74:	cmp	r5, #255	; 0xff
   19f78:	movlt	r2, r5
   19f7c:	movge	r2, #255	; 0xff
   19f80:	lsl	r2, r2, #8
   19f84:	uxth	r2, r2
   19f88:	orr	r3, r3, r2
   19f8c:	str	r3, [sp, #156]	; 0x9c
   19f90:	str	r3, [sp, #160]	; 0xa0
   19f94:	add	r3, pc, #964	; 0x3c4
   19f98:	ldrd	r2, [r3]
   19f9c:	strd	r2, [sp, #164]	; 0xa4
   19fa0:	cmp	r7, #7
   19fa4:	bls	1a0c8 <sav_begin_data+0xb48>
   19fa8:	mov	r2, #28
   19fac:	add	r1, sp, #144	; 0x90
   19fb0:	ldr	r7, [sp, #12]
   19fb4:	mov	r0, r7
   19fb8:	bl	4454 <readstat_write_bytes@plt>
   19fbc:	cmp	r0, #0
   19fc0:	bne	1af98 <sav_begin_data+0x1a18>
   19fc4:	add	r1, r5, #7
   19fc8:	lsr	r1, r1, #3
   19fcc:	sub	r1, r1, #1
   19fd0:	cmp	r1, #31
   19fd4:	movge	r1, #31
   19fd8:	mov	r0, r7
   19fdc:	bl	18f60 <sav_emit_blank_variable_records>
   19fe0:	cmp	r0, #0
   19fe4:	bne	1afa0 <sav_begin_data+0x1a20>
   19fe8:	add	r6, r6, #1
   19fec:	cmp	sl, r6
   19ff0:	beq	1b038 <sav_begin_data+0x1ab8>
   19ff4:	cmp	r6, r9
   19ff8:	ldreq	r5, [r4, #1600]	; 0x640
   19ffc:	subeq	r5, r5, r8
   1a000:	movne	r5, #255	; 0xff
   1a004:	mov	r3, #2
   1a008:	str	r3, [sp, #68]	; 0x44
   1a00c:	mov	r2, #0
   1a010:	str	r2, [sp, #144]	; 0x90
   1a014:	str	r2, [sp, #148]	; 0x94
   1a018:	str	r2, [sp, #152]	; 0x98
   1a01c:	str	r2, [sp, #156]	; 0x9c
   1a020:	str	r2, [sp, #160]	; 0xa0
   1a024:	str	r2, [sp, #164]	; 0xa4
   1a028:	str	r2, [sp, #168]	; 0xa8
   1a02c:	ldr	r3, [sp, #16]
   1a030:	add	r3, r3, #9
   1a034:	ldr	r2, [sp, #24]
   1a038:	mov	r1, #9
   1a03c:	add	r7, sp, #80	; 0x50
   1a040:	mov	r0, r7
   1a044:	bl	4280 <snprintf@plt>
   1a048:	mov	r0, r7
   1a04c:	bl	41fc <strlen@plt>
   1a050:	mov	r7, r0
   1a054:	ldr	r3, [sp, #36]	; 0x24
   1a058:	umull	r2, r3, r3, r6
   1a05c:	lsr	r3, r3, #3
   1a060:	add	r3, r3, r3, lsl #3
   1a064:	sub	r3, r6, r3, lsl #2
   1a068:	cmp	r3, #9
   1a06c:	add	fp, r0, #1
   1a070:	addle	r3, r3, #48	; 0x30
   1a074:	addgt	r3, r3, #55	; 0x37
   1a078:	add	r2, sp, #400	; 0x190
   1a07c:	add	r2, r2, r0
   1a080:	strb	r3, [r2, #-320]	; 0xfffffec0
   1a084:	mov	r2, #4
   1a088:	add	r1, sp, #68	; 0x44
   1a08c:	ldr	r0, [sp, #12]
   1a090:	bl	4454 <readstat_write_bytes@plt>
   1a094:	cmp	r0, #0
   1a098:	beq	19f4c <sav_begin_data+0x9cc>
   1a09c:	mov	fp, r0
   1a0a0:	ldr	r0, [sp, #32]
   1a0a4:	bl	3eb4 <free@plt>
   1a0a8:	mov	r0, fp
   1a0ac:	add	sp, sp, #404	; 0x194
   1a0b0:	ldrd	r4, [sp]
   1a0b4:	ldrd	r6, [sp, #8]
   1a0b8:	ldrd	r8, [sp, #16]
   1a0bc:	ldrd	sl, [sp, #24]
   1a0c0:	add	sp, sp, #32
   1a0c4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a0c8:	mov	r2, fp
   1a0cc:	add	r1, sp, #80	; 0x50
   1a0d0:	add	r0, sp, #164	; 0xa4
   1a0d4:	bl	3f14 <memcpy@plt>
   1a0d8:	b	19fa8 <sav_begin_data+0xa28>
   1a0dc:	mov	fp, r0
   1a0e0:	b	1a0a0 <sav_begin_data+0xb20>
   1a0e4:	cmp	r8, #5
   1a0e8:	beq	1a1cc <sav_begin_data+0xc4c>
   1a0ec:	cmp	r8, #3
   1a0f0:	beq	1a1e0 <sav_begin_data+0xc60>
   1a0f4:	mov	r2, #8
   1a0f8:	mov	r1, sl
   1a0fc:	mov	r0, r9
   1a100:	bl	4454 <readstat_write_bytes@plt>
   1a104:	ldr	r5, [r4, #24]
   1a108:	mov	r2, #120	; 0x78
   1a10c:	strb	r2, [sp, #56]	; 0x38
   1a110:	ldr	r3, [r4, #28]
   1a114:	cmp	r3, #119	; 0x77
   1a118:	movhi	r3, r2
   1a11c:	strb	r3, [sp, #56]	; 0x38
   1a120:	mov	r2, #1
   1a124:	add	r1, sp, #56	; 0x38
   1a128:	mov	r0, r9
   1a12c:	bl	4454 <readstat_write_bytes@plt>
   1a130:	cmp	r0, #0
   1a134:	bne	1afb0 <sav_begin_data+0x1a30>
   1a138:	mov	r2, #128	; 0x80
   1a13c:	mov	r1, #32
   1a140:	mov	r0, fp
   1a144:	bl	42a4 <memset@plt>
   1a148:	ldrb	r4, [sp, #56]	; 0x38
   1a14c:	mov	r2, r4
   1a150:	mov	r1, r5
   1a154:	mov	r0, fp
   1a158:	bl	3f14 <memcpy@plt>
   1a15c:	add	r2, r4, #8
   1a160:	bic	r2, r2, #7
   1a164:	sub	r2, r2, #1
   1a168:	mov	r1, fp
   1a16c:	mov	r0, r9
   1a170:	bl	4454 <readstat_write_bytes@plt>
   1a174:	cmp	r0, #0
   1a178:	bne	1afb8 <sav_begin_data+0x1a38>
   1a17c:	add	r7, r7, #1
   1a180:	ldr	r3, [sp, #68]	; 0x44
   1a184:	cmp	r7, r3
   1a188:	bge	1a1f8 <sav_begin_data+0xc78>
   1a18c:	mov	r1, r7
   1a190:	mov	r0, r6
   1a194:	bl	44cc <readstat_get_value_label@plt>
   1a198:	mov	r4, r0
   1a19c:	cmp	r8, #0
   1a1a0:	bne	1a0e4 <sav_begin_data+0xb64>
   1a1a4:	ldr	r2, [r0, #20]
   1a1a8:	add	r1, pc, #432	; 0x1b0
   1a1ac:	ldrd	r0, [r1]
   1a1b0:	strd	r0, [sl]
   1a1b4:	cmp	r2, #8
   1a1b8:	movcs	r2, #8
   1a1bc:	ldr	r1, [r4, #16]
   1a1c0:	mov	r0, sl
   1a1c4:	bl	3f14 <memcpy@plt>
   1a1c8:	b	1a0f4 <sav_begin_data+0xb74>
   1a1cc:	ldrd	r2, [r0]
   1a1d0:	strd	r2, [sp, #144]	; 0x90
   1a1d4:	ldrd	r2, [fp]
   1a1d8:	strd	r2, [sl]
   1a1dc:	b	1a0f4 <sav_begin_data+0xb74>
   1a1e0:	vldr	s15, [r0, #8]
   1a1e4:	vcvt.f64.s32	d7, s15
   1a1e8:	vstr	d7, [sp, #144]	; 0x90
   1a1ec:	ldrd	r2, [fp]
   1a1f0:	strd	r2, [sl]
   1a1f4:	b	1a0f4 <sav_begin_data+0xb74>
   1a1f8:	ldr	r5, [sp, #12]
   1a1fc:	mov	r4, #4
   1a200:	str	r4, [sp, #80]	; 0x50
   1a204:	mov	r0, r6
   1a208:	bl	19518 <readstat_label_set_number_short_variables>
   1a20c:	str	r0, [sp, #96]	; 0x60
   1a210:	mov	r2, r4
   1a214:	add	r1, sp, #80	; 0x50
   1a218:	mov	r0, r9
   1a21c:	bl	4454 <readstat_write_bytes@plt>
   1a220:	cmp	r0, #0
   1a224:	bne	1afc0 <sav_begin_data+0x1a40>
   1a228:	mov	r2, r4
   1a22c:	add	r1, sp, #96	; 0x60
   1a230:	mov	r0, r9
   1a234:	bl	4454 <readstat_write_bytes@plt>
   1a238:	cmp	r0, #0
   1a23c:	bne	1afc8 <sav_begin_data+0x1a48>
   1a240:	ldr	r3, [r6, #276]	; 0x114
   1a244:	cmp	r3, #0
   1a248:	ble	1a2c0 <sav_begin_data+0xd40>
   1a24c:	mov	r4, #0
   1a250:	add	r8, sp, #144	; 0x90
   1a254:	mov	r7, #4
   1a258:	b	1a26c <sav_begin_data+0xcec>
   1a25c:	add	r4, r4, #1
   1a260:	ldr	r3, [r6, #276]	; 0x114
   1a264:	cmp	r4, r3
   1a268:	bge	1a2c0 <sav_begin_data+0xd40>
   1a26c:	mov	r1, r4
   1a270:	mov	r0, r6
   1a274:	bl	4448 <readstat_get_label_set_variable@plt>
   1a278:	ldr	r3, [r0, #1596]	; 0x63c
   1a27c:	cmp	r3, #8
   1a280:	bhi	1a25c <sav_begin_data+0xcdc>
   1a284:	ldr	r3, [r0, #1592]	; 0x638
   1a288:	add	r2, r3, #7
   1a28c:	cmp	r3, #0
   1a290:	movlt	r3, r2
   1a294:	asr	r3, r3, #3
   1a298:	add	r3, r3, #1
   1a29c:	str	r3, [sp, #144]	; 0x90
   1a2a0:	mov	r2, r7
   1a2a4:	mov	r1, r8
   1a2a8:	mov	r0, r9
   1a2ac:	bl	4454 <readstat_write_bytes@plt>
   1a2b0:	cmp	r0, #0
   1a2b4:	beq	1a25c <sav_begin_data+0xcdc>
   1a2b8:	mov	fp, r0
   1a2bc:	b	1a0a0 <sav_begin_data+0xb20>
   1a2c0:	add	r5, r5, #1
   1a2c4:	ldr	r3, [r9, #40]	; 0x28
   1a2c8:	cmp	r5, r3
   1a2cc:	bge	1b1a8 <sav_begin_data+0x1c28>
   1a2d0:	mov	r1, r5
   1a2d4:	mov	r0, r9
   1a2d8:	bl	4424 <readstat_get_label_set@plt>
   1a2dc:	mov	r6, r0
   1a2e0:	bl	19518 <readstat_label_set_number_short_variables>
   1a2e4:	cmp	r0, #0
   1a2e8:	ble	1a2c0 <sav_begin_data+0xd40>
   1a2ec:	ldr	r8, [r6]
   1a2f0:	ldr	r3, [r6, #264]	; 0x108
   1a2f4:	str	r3, [sp, #68]	; 0x44
   1a2f8:	mov	r2, #0
   1a2fc:	str	r2, [sp, #80]	; 0x50
   1a300:	cmp	r3, r2
   1a304:	beq	1a2c0 <sav_begin_data+0xd40>
   1a308:	mov	r3, #3
   1a30c:	str	r3, [sp, #80]	; 0x50
   1a310:	mov	r2, #4
   1a314:	add	r1, sp, #80	; 0x50
   1a318:	mov	r0, r9
   1a31c:	bl	4454 <readstat_write_bytes@plt>
   1a320:	cmp	r0, #0
   1a324:	bne	1afa8 <sav_begin_data+0x1a28>
   1a328:	mov	r2, #4
   1a32c:	add	r1, sp, #68	; 0x44
   1a330:	mov	r0, r9
   1a334:	bl	4454 <readstat_write_bytes@plt>
   1a338:	cmp	r0, #0
   1a33c:	bne	1a0dc <sav_begin_data+0xb5c>
   1a340:	ldr	r3, [sp, #68]	; 0x44
   1a344:	cmp	r3, #0
   1a348:	movgt	r7, #0
   1a34c:	addgt	sl, sp, #96	; 0x60
   1a350:	addgt	fp, sp, #144	; 0x90
   1a354:	strgt	r5, [sp, #12]
   1a358:	bgt	1a18c <sav_begin_data+0xc0c>
   1a35c:	b	1a1fc <sav_begin_data+0xc7c>
   1a360:	.word	0x20202020
   1a364:	.word	0x20202020
   1a368:	.word	0x0000e510
   1a36c:	.word	0x0000e510
   1a370:	.word	0x0000e510
   1a374:	.word	0x0000e328
   1a378:	.word	0x0000e39c
   1a37c:	.word	0x0000e2e4
   1a380:	.word	0x0000d104
   1a384:	.word	0x0000e1b0
   1a388:	.word	0x0000c994
   1a38c:	.word	0x0000d5c0
   1a390:	.word	0x0000d500
   1a394:	.word	0x0000d614
   1a398:	.word	0x0000d300
   1a39c:	.word	0x0000d3e8
   1a3a0:	.word	0x0000d100
   1a3a4:	.word	0x0000cda4
   1a3a8:	mov	r2, #4
   1a3ac:	add	r1, sp, #96	; 0x60
   1a3b0:	mov	r0, r9
   1a3b4:	bl	4454 <readstat_write_bytes@plt>
   1a3b8:	subs	fp, r0, #0
   1a3bc:	bne	1a0a0 <sav_begin_data+0xb20>
   1a3c0:	mov	r2, #4
   1a3c4:	add	r1, sp, #144	; 0x90
   1a3c8:	mov	r0, r9
   1a3cc:	bl	4454 <readstat_write_bytes@plt>
   1a3d0:	subs	fp, r0, #0
   1a3d4:	bne	1a0a0 <sav_begin_data+0xb20>
   1a3d8:	ldr	r3, [r9, #52]	; 0x34
   1a3dc:	cmp	r3, #0
   1a3e0:	ble	1b1c0 <sav_begin_data+0x1c40>
   1a3e4:	mov	r5, #0
   1a3e8:	ldr	r3, [r9, #48]	; 0x30
   1a3ec:	ldr	r6, [r3, r5, lsl #2]
   1a3f0:	mov	r0, r6
   1a3f4:	bl	41fc <strlen@plt>
   1a3f8:	mov	r4, r0
   1a3fc:	cmp	r0, #80	; 0x50
   1a400:	bhi	1b030 <sav_begin_data+0x1ab0>
   1a404:	mov	r2, r0
   1a408:	mov	r1, r6
   1a40c:	mov	r0, r9
   1a410:	bl	4454 <readstat_write_bytes@plt>
   1a414:	cmp	r0, #0
   1a418:	bne	1afd0 <sav_begin_data+0x1a50>
   1a41c:	rsb	r1, r4, #80	; 0x50
   1a420:	mov	r0, r9
   1a424:	bl	3dd0 <readstat_write_spaces@plt>
   1a428:	cmp	r0, #0
   1a42c:	bne	1afd8 <sav_begin_data+0x1a58>
   1a430:	add	r5, r5, #1
   1a434:	ldr	r3, [r9, #52]	; 0x34
   1a438:	cmp	r5, r3
   1a43c:	blt	1a3e8 <sav_begin_data+0xe68>
   1a440:	b	1b1c0 <sav_begin_data+0x1c40>
   1a444:	mov	r5, #0
   1a448:	b	1b31c <sav_begin_data+0x1d9c>
   1a44c:	add	r8, r8, #1
   1a450:	ldr	r3, [r9, #28]
   1a454:	cmp	r8, r3
   1a458:	blt	1b354 <sav_begin_data+0x1dd4>
   1a45c:	ldr	r0, [pc, #-216]	; 1a38c <sav_begin_data+0xe0c>
   1a460:	add	r0, pc, r0
   1a464:	ldrd	r2, [r0, #64]	; 0x40
   1a468:	strd	r2, [sp, #144]	; 0x90
   1a46c:	ldrd	r2, [r0, #72]	; 0x48
   1a470:	strd	r2, [sp, #152]	; 0x98
   1a474:	ldr	r3, [r9, #28]
   1a478:	cmp	r3, #0
   1a47c:	ble	1a500 <sav_begin_data+0xf80>
   1a480:	ldr	r5, [sp, #32]
   1a484:	mov	r4, #0
   1a488:	add	r7, sp, #96	; 0x60
   1a48c:	mov	r6, #9
   1a490:	b	1a4a8 <sav_begin_data+0xf28>
   1a494:	add	r4, r4, #1
   1a498:	add	r5, r5, #15
   1a49c:	ldr	r3, [r9, #28]
   1a4a0:	cmp	r4, r3
   1a4a4:	bge	1a500 <sav_begin_data+0xf80>
   1a4a8:	mov	r1, r4
   1a4ac:	mov	r0, r9
   1a4b0:	bl	437c <readstat_get_variable@plt>
   1a4b4:	mov	sl, r0
   1a4b8:	mov	r2, r5
   1a4bc:	mov	r1, r6
   1a4c0:	mov	r0, r7
   1a4c4:	bl	19144 <sav_format_variable_name>
   1a4c8:	mov	r8, r0
   1a4cc:	add	r0, sl, #8
   1a4d0:	bl	41fc <strlen@plt>
   1a4d4:	cmp	r0, #0
   1a4d8:	cmpne	r8, #0
   1a4dc:	beq	1a494 <sav_begin_data+0xf14>
   1a4e0:	ldr	r3, [sp, #156]	; 0x9c
   1a4e4:	add	r3, r3, #2
   1a4e8:	add	r3, r3, r8
   1a4ec:	cmp	r0, #64	; 0x40
   1a4f0:	addls	r3, r3, r0
   1a4f4:	addhi	r3, r3, #64	; 0x40
   1a4f8:	str	r3, [sp, #156]	; 0x9c
   1a4fc:	b	1a494 <sav_begin_data+0xf14>
   1a500:	ldr	r3, [sp, #156]	; 0x9c
   1a504:	cmp	r3, #0
   1a508:	bgt	1a564 <sav_begin_data+0xfe4>
   1a50c:	mov	r3, #0
   1a510:	strb	r3, [sp, #68]	; 0x44
   1a514:	mov	r3, #9
   1a518:	strb	r3, [sp, #69]	; 0x45
   1a51c:	ldr	r0, [pc, #-404]	; 1a390 <sav_begin_data+0xe10>
   1a520:	add	r0, pc, r0
   1a524:	ldrd	r2, [r0, #80]	; 0x50
   1a528:	strd	r2, [sp, #144]	; 0x90
   1a52c:	ldrd	r2, [r0, #88]	; 0x58
   1a530:	strd	r2, [sp, #152]	; 0x98
   1a534:	ldr	r3, [r9, #28]
   1a538:	cmp	r3, #0
   1a53c:	ble	1a710 <sav_begin_data+0x1190>
   1a540:	mov	r4, #0
   1a544:	ldr	r8, [pc, #-440]	; 1a394 <sav_begin_data+0xe14>
   1a548:	add	r8, pc, r8
   1a54c:	movw	r7, #23237	; 0x5ac5
   1a550:	movt	r7, #2684	; 0xa7c
   1a554:	movw	r6, #34464	; 0x86a0
   1a558:	movt	r6, #1
   1a55c:	ldr	sl, [sp, #32]
   1a560:	b	1a690 <sav_begin_data+0x1110>
   1a564:	sub	r3, r3, #1
   1a568:	str	r3, [sp, #156]	; 0x9c
   1a56c:	mov	r2, #16
   1a570:	add	r1, sp, #144	; 0x90
   1a574:	mov	r0, r9
   1a578:	bl	4454 <readstat_write_bytes@plt>
   1a57c:	subs	fp, r0, #0
   1a580:	bne	1a0a0 <sav_begin_data+0xb20>
   1a584:	ldr	r3, [r9, #28]
   1a588:	cmp	r3, #0
   1a58c:	ble	1a50c <sav_begin_data+0xf8c>
   1a590:	ldr	r6, [sp, #32]
   1a594:	mov	sl, #1
   1a598:	mov	r5, #0
   1a59c:	add	r3, sp, #96	; 0x60
   1a5a0:	str	r3, [sp, #12]
   1a5a4:	mov	r8, #9
   1a5a8:	mov	r7, #61	; 0x3d
   1a5ac:	mov	fp, sl
   1a5b0:	b	1a610 <sav_begin_data+0x1090>
   1a5b4:	ldr	r1, [sp, #12]
   1a5b8:	mov	r0, r9
   1a5bc:	bl	4154 <readstat_write_string@plt>
   1a5c0:	cmp	r0, #0
   1a5c4:	bne	1aff0 <sav_begin_data+0x1a70>
   1a5c8:	mov	r2, #1
   1a5cc:	add	r1, sp, #68	; 0x44
   1a5d0:	mov	r0, r9
   1a5d4:	bl	4454 <readstat_write_bytes@plt>
   1a5d8:	cmp	r0, #0
   1a5dc:	bne	1aff8 <sav_begin_data+0x1a78>
   1a5e0:	mov	r2, sl
   1a5e4:	mov	r1, r4
   1a5e8:	mov	r0, r9
   1a5ec:	bl	4454 <readstat_write_bytes@plt>
   1a5f0:	cmp	r0, #0
   1a5f4:	bne	1b000 <sav_begin_data+0x1a80>
   1a5f8:	mov	fp, #0
   1a5fc:	add	r5, r5, #1
   1a600:	add	r6, r6, #15
   1a604:	ldr	r3, [r9, #28]
   1a608:	cmp	r5, r3
   1a60c:	bge	1a50c <sav_begin_data+0xf8c>
   1a610:	mov	r1, r5
   1a614:	mov	r0, r9
   1a618:	bl	437c <readstat_get_variable@plt>
   1a61c:	mov	r4, r0
   1a620:	mov	r2, r6
   1a624:	mov	r1, r8
   1a628:	ldr	r0, [sp, #12]
   1a62c:	bl	19144 <sav_format_variable_name>
   1a630:	add	r4, r4, #8
   1a634:	mov	r0, r4
   1a638:	bl	41fc <strlen@plt>
   1a63c:	strb	r7, [sp, #68]	; 0x44
   1a640:	strb	r8, [sp, #80]	; 0x50
   1a644:	cmp	r0, #0
   1a648:	beq	1a5fc <sav_begin_data+0x107c>
   1a64c:	cmp	r0, #64	; 0x40
   1a650:	movcc	sl, r0
   1a654:	movcs	sl, #64	; 0x40
   1a658:	cmp	fp, #0
   1a65c:	bne	1a5b4 <sav_begin_data+0x1034>
   1a660:	mov	r2, #1
   1a664:	add	r1, sp, #80	; 0x50
   1a668:	mov	r0, r9
   1a66c:	bl	4454 <readstat_write_bytes@plt>
   1a670:	cmp	r0, #0
   1a674:	beq	1a5b4 <sav_begin_data+0x1034>
   1a678:	mov	fp, r0
   1a67c:	b	1a0a0 <sav_begin_data+0xb20>
   1a680:	add	r4, r4, #1
   1a684:	ldr	r3, [r9, #28]
   1a688:	cmp	r4, r3
   1a68c:	bge	1a710 <sav_begin_data+0x1190>
   1a690:	mov	r1, r4
   1a694:	mov	r0, r9
   1a698:	bl	437c <readstat_get_variable@plt>
   1a69c:	mov	fp, r0
   1a6a0:	ldr	r3, [r0, #1600]	; 0x640
   1a6a4:	cmp	r3, #255	; 0xff
   1a6a8:	bls	1a680 <sav_begin_data+0x1100>
   1a6ac:	rsb	r2, r4, r4, lsl #4
   1a6b0:	add	r2, sl, r2
   1a6b4:	mov	r1, #9
   1a6b8:	add	r5, sp, #80	; 0x50
   1a6bc:	mov	r0, r5
   1a6c0:	bl	19144 <sav_format_variable_name>
   1a6c4:	ldr	r2, [fp, #1600]	; 0x640
   1a6c8:	lsr	r3, r2, #5
   1a6cc:	umull	r1, r3, r7, r3
   1a6d0:	lsr	r3, r3, #7
   1a6d4:	mls	r3, r6, r3, r2
   1a6d8:	str	r3, [sp]
   1a6dc:	mov	r3, r5
   1a6e0:	mov	r2, r8
   1a6e4:	mov	r1, #15
   1a6e8:	add	r5, sp, #96	; 0x60
   1a6ec:	mov	r0, r5
   1a6f0:	bl	4280 <snprintf@plt>
   1a6f4:	mov	r0, r5
   1a6f8:	bl	41fc <strlen@plt>
   1a6fc:	ldr	r3, [sp, #156]	; 0x9c
   1a700:	add	r3, r3, #2
   1a704:	add	r3, r3, r0
   1a708:	str	r3, [sp, #156]	; 0x9c
   1a70c:	b	1a680 <sav_begin_data+0x1100>
   1a710:	ldr	r3, [sp, #156]	; 0x9c
   1a714:	cmp	r3, #0
   1a718:	bne	1a748 <sav_begin_data+0x11c8>
   1a71c:	ldr	r0, [pc, #-908]	; 1a398 <sav_begin_data+0xe18>
   1a720:	add	r0, pc, r0
   1a724:	ldrd	r2, [r0, #96]	; 0x60
   1a728:	strd	r2, [sp, #144]	; 0x90
   1a72c:	ldrd	r2, [r0, #104]	; 0x68
   1a730:	strd	r2, [sp, #152]	; 0x98
   1a734:	ldr	r3, [r9, #40]	; 0x28
   1a738:	cmp	r3, #0
   1a73c:	ble	1a910 <sav_begin_data+0x1390>
   1a740:	mov	sl, #0
   1a744:	b	1a8dc <sav_begin_data+0x135c>
   1a748:	mov	r2, #16
   1a74c:	add	r1, sp, #144	; 0x90
   1a750:	mov	r0, r9
   1a754:	bl	4454 <readstat_write_bytes@plt>
   1a758:	subs	fp, r0, #0
   1a75c:	bne	1a0a0 <sav_begin_data+0xb20>
   1a760:	ldr	r3, [r9, #28]
   1a764:	cmp	r3, #0
   1a768:	ble	1a71c <sav_begin_data+0x119c>
   1a76c:	mov	r4, #0
   1a770:	ldr	r7, [pc, #-988]	; 1a39c <sav_begin_data+0xe1c>
   1a774:	add	r7, pc, r7
   1a778:	movw	r6, #23237	; 0x5ac5
   1a77c:	movt	r6, #2684	; 0xa7c
   1a780:	movw	r5, #34464	; 0x86a0
   1a784:	movt	r5, #1
   1a788:	ldr	sl, [sp, #32]
   1a78c:	b	1a7a0 <sav_begin_data+0x1220>
   1a790:	add	r4, r4, #1
   1a794:	ldr	r3, [r9, #28]
   1a798:	cmp	r4, r3
   1a79c:	bge	1a71c <sav_begin_data+0x119c>
   1a7a0:	mov	r1, r4
   1a7a4:	mov	r0, r9
   1a7a8:	bl	437c <readstat_get_variable@plt>
   1a7ac:	mov	fp, r0
   1a7b0:	ldr	r3, [r0, #1600]	; 0x640
   1a7b4:	cmp	r3, #255	; 0xff
   1a7b8:	bls	1a790 <sav_begin_data+0x1210>
   1a7bc:	rsb	r2, r4, r4, lsl #4
   1a7c0:	add	r2, sl, r2
   1a7c4:	mov	r1, #9
   1a7c8:	add	r8, sp, #80	; 0x50
   1a7cc:	mov	r0, r8
   1a7d0:	bl	19144 <sav_format_variable_name>
   1a7d4:	ldr	r2, [fp, #1600]	; 0x640
   1a7d8:	lsr	r3, r2, #5
   1a7dc:	umull	r1, r3, r6, r3
   1a7e0:	lsr	r3, r3, #7
   1a7e4:	mls	r3, r5, r3, r2
   1a7e8:	str	r3, [sp]
   1a7ec:	mov	r3, r8
   1a7f0:	mov	r2, r7
   1a7f4:	mov	r1, #15
   1a7f8:	add	r8, sp, #96	; 0x60
   1a7fc:	mov	r0, r8
   1a800:	bl	4280 <snprintf@plt>
   1a804:	mov	r1, r8
   1a808:	mov	r0, r9
   1a80c:	bl	4154 <readstat_write_string@plt>
   1a810:	cmp	r0, #0
   1a814:	bne	1b008 <sav_begin_data+0x1a88>
   1a818:	mov	r2, #2
   1a81c:	add	r1, sp, #68	; 0x44
   1a820:	mov	r0, r9
   1a824:	bl	4454 <readstat_write_bytes@plt>
   1a828:	cmp	r0, #0
   1a82c:	beq	1a790 <sav_begin_data+0x1210>
   1a830:	mov	fp, r0
   1a834:	b	1a0a0 <sav_begin_data+0xb20>
   1a838:	add	r7, r7, #1
   1a83c:	cmp	r7, fp
   1a840:	beq	1a8cc <sav_begin_data+0x134c>
   1a844:	mov	r1, r7
   1a848:	mov	r0, r6
   1a84c:	bl	4448 <readstat_get_label_set_variable@plt>
   1a850:	mov	r5, r0
   1a854:	add	r0, r0, #8
   1a858:	bl	41fc <strlen@plt>
   1a85c:	mov	r4, r0
   1a860:	mov	r0, r5
   1a864:	bl	42c8 <readstat_variable_get_storage_width@plt>
   1a868:	mov	r5, r0
   1a86c:	cmp	r0, #8
   1a870:	ble	1a838 <sav_begin_data+0x12b8>
   1a874:	ldr	r3, [sp, #156]	; 0x9c
   1a878:	add	r3, r4, r3
   1a87c:	add	r3, r3, #12
   1a880:	str	r3, [sp, #156]	; 0x9c
   1a884:	cmp	r8, #0
   1a888:	ble	1a838 <sav_begin_data+0x12b8>
   1a88c:	mov	r4, #0
   1a890:	mov	r1, r4
   1a894:	mov	r0, r6
   1a898:	bl	44cc <readstat_get_value_label@plt>
   1a89c:	ldr	r2, [r0, #28]
   1a8a0:	ldr	r3, [sp, #156]	; 0x9c
   1a8a4:	add	r3, r5, r3
   1a8a8:	add	r3, r3, #8
   1a8ac:	cmp	r2, #120	; 0x78
   1a8b0:	addle	r3, r3, r2
   1a8b4:	addgt	r3, r3, #120	; 0x78
   1a8b8:	str	r3, [sp, #156]	; 0x9c
   1a8bc:	add	r4, r4, #1
   1a8c0:	cmp	r8, r4
   1a8c4:	bne	1a890 <sav_begin_data+0x1310>
   1a8c8:	b	1a838 <sav_begin_data+0x12b8>
   1a8cc:	add	sl, sl, #1
   1a8d0:	ldr	r3, [r9, #40]	; 0x28
   1a8d4:	cmp	sl, r3
   1a8d8:	bge	1a910 <sav_begin_data+0x1390>
   1a8dc:	mov	r1, sl
   1a8e0:	mov	r0, r9
   1a8e4:	bl	4424 <readstat_get_label_set@plt>
   1a8e8:	mov	r6, r0
   1a8ec:	bl	19518 <readstat_label_set_number_short_variables>
   1a8f0:	ldr	fp, [r6, #276]	; 0x114
   1a8f4:	cmp	r0, fp
   1a8f8:	bge	1a8cc <sav_begin_data+0x134c>
   1a8fc:	ldr	r8, [r6, #264]	; 0x108
   1a900:	cmp	fp, #0
   1a904:	ble	1a8cc <sav_begin_data+0x134c>
   1a908:	mov	r7, #0
   1a90c:	b	1a844 <sav_begin_data+0x12c4>
   1a910:	ldr	r3, [sp, #156]	; 0x9c
   1a914:	cmp	r3, #0
   1a918:	bne	1a958 <sav_begin_data+0x13d8>
   1a91c:	ldr	r0, [pc, #-1412]	; 1a3a0 <sav_begin_data+0xe20>
   1a920:	add	r0, pc, r0
   1a924:	ldrd	r2, [r0, #112]	; 0x70
   1a928:	strd	r2, [sp, #144]	; 0x90
   1a92c:	ldrd	r2, [r0, #120]	; 0x78
   1a930:	strd	r2, [sp, #152]	; 0x98
   1a934:	ldr	r3, [r9, #28]
   1a938:	str	r3, [sp, #16]
   1a93c:	cmp	r3, #0
   1a940:	ble	1ac6c <sav_begin_data+0x16ec>
   1a944:	mov	fp, #0
   1a948:	add	sl, sp, #80	; 0x50
   1a94c:	add	r5, sp, #96	; 0x60
   1a950:	str	sl, [sp, #12]
   1a954:	b	1ac34 <sav_begin_data+0x16b4>
   1a958:	mov	r2, #16
   1a95c:	add	r1, sp, #144	; 0x90
   1a960:	mov	r0, r9
   1a964:	bl	4454 <readstat_write_bytes@plt>
   1a968:	subs	fp, r0, #0
   1a96c:	bne	1a0a0 <sav_begin_data+0xb20>
   1a970:	mov	r3, #0
   1a974:	str	r3, [sp, #12]
   1a978:	str	r3, [sp, #16]
   1a97c:	mov	sl, #120	; 0x78
   1a980:	str	fp, [sp, #24]
   1a984:	b	1ab3c <sav_begin_data+0x15bc>
   1a988:	mov	r2, #4
   1a98c:	add	r1, sp, #96	; 0x60
   1a990:	mov	r0, r9
   1a994:	bl	4454 <readstat_write_bytes@plt>
   1a998:	cmp	r0, #0
   1a99c:	bne	1aa40 <sav_begin_data+0x14c0>
   1a9a0:	ldr	r2, [sp, #96]	; 0x60
   1a9a4:	ldr	r1, [r4, #24]
   1a9a8:	mov	r0, r9
   1a9ac:	bl	4454 <readstat_write_bytes@plt>
   1a9b0:	cmp	r0, #0
   1a9b4:	bne	1aa40 <sav_begin_data+0x14c0>
   1a9b8:	add	r5, r5, #1
   1a9bc:	ldr	r3, [sp, #56]	; 0x38
   1a9c0:	cmp	r5, r3
   1a9c4:	bge	1aa58 <sav_begin_data+0x14d8>
   1a9c8:	mov	r1, r5
   1a9cc:	mov	r0, r7
   1a9d0:	bl	44cc <readstat_get_value_label@plt>
   1a9d4:	mov	r4, r0
   1a9d8:	ldr	r6, [r0, #20]
   1a9dc:	ldr	r3, [r0, #28]
   1a9e0:	cmp	r3, #120	; 0x78
   1a9e4:	movgt	r3, sl
   1a9e8:	str	r3, [sp, #96]	; 0x60
   1a9ec:	mov	r2, #4
   1a9f0:	ldr	r1, [sp, #20]
   1a9f4:	mov	r0, r9
   1a9f8:	bl	4454 <readstat_write_bytes@plt>
   1a9fc:	cmp	r0, #0
   1aa00:	bne	1aa40 <sav_begin_data+0x14c0>
   1aa04:	mov	r2, r6
   1aa08:	ldr	r1, [r4, #16]
   1aa0c:	mov	r0, r9
   1aa10:	bl	4454 <readstat_write_bytes@plt>
   1aa14:	cmp	r0, #0
   1aa18:	bne	1aa40 <sav_begin_data+0x14c0>
   1aa1c:	ldr	r2, [sp, #80]	; 0x50
   1aa20:	cmp	r6, r2
   1aa24:	bge	1a988 <sav_begin_data+0x1408>
   1aa28:	sub	r2, r2, r6
   1aa2c:	ldr	r1, [sp, #12]
   1aa30:	mov	r0, r9
   1aa34:	bl	4454 <readstat_write_bytes@plt>
   1aa38:	cmp	r0, #0
   1aa3c:	beq	1a988 <sav_begin_data+0x1408>
   1aa40:	mov	fp, r0
   1aa44:	ldr	r0, [sp, #12]
   1aa48:	bl	3eb4 <free@plt>
   1aa4c:	cmp	fp, #0
   1aa50:	bne	1a0a0 <sav_begin_data+0xb20>
   1aa54:	b	1a91c <sav_begin_data+0x139c>
   1aa58:	add	fp, fp, #1
   1aa5c:	cmp	fp, r8
   1aa60:	beq	1ab30 <sav_begin_data+0x15b0>
   1aa64:	mov	r1, fp
   1aa68:	mov	r0, r7
   1aa6c:	bl	4448 <readstat_get_label_set_variable@plt>
   1aa70:	mov	r5, r0
   1aa74:	add	r4, r0, #8
   1aa78:	mov	r0, r4
   1aa7c:	bl	41fc <strlen@plt>
   1aa80:	str	r0, [sp, #68]	; 0x44
   1aa84:	mov	r0, r5
   1aa88:	bl	42c8 <readstat_variable_get_storage_width@plt>
   1aa8c:	mov	r1, r0
   1aa90:	str	r0, [sp, #80]	; 0x50
   1aa94:	cmp	r0, #8
   1aa98:	ble	1aa58 <sav_begin_data+0x14d8>
   1aa9c:	ldr	r0, [sp, #12]
   1aaa0:	bl	3fec <realloc@plt>
   1aaa4:	str	r0, [sp, #12]
   1aaa8:	ldr	r2, [sp, #80]	; 0x50
   1aaac:	mov	r1, #32
   1aab0:	bl	42a4 <memset@plt>
   1aab4:	mov	r2, #4
   1aab8:	add	r1, sp, #68	; 0x44
   1aabc:	mov	r0, r9
   1aac0:	bl	4454 <readstat_write_bytes@plt>
   1aac4:	cmp	r0, #0
   1aac8:	bne	1aa40 <sav_begin_data+0x14c0>
   1aacc:	ldr	r2, [sp, #68]	; 0x44
   1aad0:	mov	r1, r4
   1aad4:	mov	r0, r9
   1aad8:	bl	4454 <readstat_write_bytes@plt>
   1aadc:	cmp	r0, #0
   1aae0:	bne	1aa40 <sav_begin_data+0x14c0>
   1aae4:	mov	r2, #4
   1aae8:	add	r1, sp, #80	; 0x50
   1aaec:	mov	r0, r9
   1aaf0:	bl	4454 <readstat_write_bytes@plt>
   1aaf4:	cmp	r0, #0
   1aaf8:	bne	1aa40 <sav_begin_data+0x14c0>
   1aafc:	mov	r2, #4
   1ab00:	add	r1, sp, #56	; 0x38
   1ab04:	mov	r0, r9
   1ab08:	bl	4454 <readstat_write_bytes@plt>
   1ab0c:	cmp	r0, #0
   1ab10:	bne	1aa40 <sav_begin_data+0x14c0>
   1ab14:	ldr	r3, [sp, #56]	; 0x38
   1ab18:	cmp	r3, #0
   1ab1c:	movgt	r5, #0
   1ab20:	addgt	r3, sp, #80	; 0x50
   1ab24:	strgt	r3, [sp, #20]
   1ab28:	bgt	1a9c8 <sav_begin_data+0x1448>
   1ab2c:	b	1aa58 <sav_begin_data+0x14d8>
   1ab30:	ldr	r3, [sp, #16]
   1ab34:	add	r3, r3, #1
   1ab38:	str	r3, [sp, #16]
   1ab3c:	ldr	r3, [r9, #40]	; 0x28
   1ab40:	ldr	r2, [sp, #16]
   1ab44:	cmp	r2, r3
   1ab48:	bge	1ab84 <sav_begin_data+0x1604>
   1ab4c:	ldr	r1, [sp, #16]
   1ab50:	mov	r0, r9
   1ab54:	bl	4424 <readstat_get_label_set@plt>
   1ab58:	mov	r7, r0
   1ab5c:	bl	19518 <readstat_label_set_number_short_variables>
   1ab60:	ldr	r8, [r7, #276]	; 0x114
   1ab64:	cmp	r0, r8
   1ab68:	bge	1ab30 <sav_begin_data+0x15b0>
   1ab6c:	ldr	r3, [r7, #264]	; 0x108
   1ab70:	str	r3, [sp, #56]	; 0x38
   1ab74:	cmp	r8, #0
   1ab78:	ble	1ab30 <sav_begin_data+0x15b0>
   1ab7c:	mov	fp, #0
   1ab80:	b	1aa64 <sav_begin_data+0x14e4>
   1ab84:	ldr	fp, [sp, #24]
   1ab88:	ldr	r3, [sp, #12]
   1ab8c:	cmp	r3, #0
   1ab90:	beq	1a91c <sav_begin_data+0x139c>
   1ab94:	b	1aa44 <sav_begin_data+0x14c4>
   1ab98:	add	r4, r4, #1
   1ab9c:	mov	r0, r6
   1aba0:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   1aba4:	cmp	r4, r0
   1aba8:	bge	1ac04 <sav_begin_data+0x1684>
   1abac:	mov	r2, r4
   1abb0:	mov	r1, r6
   1abb4:	ldr	r0, [sp, #12]
   1abb8:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   1abbc:	mov	r2, r4
   1abc0:	mov	r1, r6
   1abc4:	mov	r0, r5
   1abc8:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   1abcc:	ldm	sl, {r0, r1, r2, r3}
   1abd0:	bl	3fa4 <readstat_string_value@plt>
   1abd4:	mov	r7, r0
   1abd8:	ldm	r5, {r0, r1, r2, r3}
   1abdc:	bl	3fa4 <readstat_string_value@plt>
   1abe0:	mov	r1, r0
   1abe4:	cmp	r7, #0
   1abe8:	cmpne	r0, #0
   1abec:	beq	1ab98 <sav_begin_data+0x1618>
   1abf0:	mov	r0, r7
   1abf4:	bl	3df4 <strcmp@plt>
   1abf8:	cmp	r0, #0
   1abfc:	addeq	r8, r8, #1
   1ac00:	b	1ab98 <sav_begin_data+0x1618>
   1ac04:	cmp	r8, #0
   1ac08:	beq	1ac24 <sav_begin_data+0x16a4>
   1ac0c:	ldr	r3, [sp, #156]	; 0x9c
   1ac10:	ldr	r2, [sp, #20]
   1ac14:	add	r3, r2, r3
   1ac18:	add	r3, r3, #9
   1ac1c:	add	r8, r3, r8, lsl #3
   1ac20:	str	r8, [sp, #156]	; 0x9c
   1ac24:	add	fp, fp, #1
   1ac28:	ldr	r3, [sp, #16]
   1ac2c:	cmp	r3, fp
   1ac30:	beq	1ac6c <sav_begin_data+0x16ec>
   1ac34:	mov	r1, fp
   1ac38:	mov	r0, r9
   1ac3c:	bl	437c <readstat_get_variable@plt>
   1ac40:	mov	r6, r0
   1ac44:	add	r0, r0, #8
   1ac48:	bl	41fc <strlen@plt>
   1ac4c:	str	r0, [sp, #20]
   1ac50:	mov	r0, r6
   1ac54:	bl	42c8 <readstat_variable_get_storage_width@plt>
   1ac58:	cmp	r0, #8
   1ac5c:	movgt	r8, #0
   1ac60:	movgt	r4, r8
   1ac64:	ble	1ac24 <sav_begin_data+0x16a4>
   1ac68:	b	1ab9c <sav_begin_data+0x161c>
   1ac6c:	ldr	r3, [sp, #156]	; 0x9c
   1ac70:	cmp	r3, #0
   1ac74:	bne	1ad54 <sav_begin_data+0x17d4>
   1ac78:	ldr	r0, [pc, #-2268]	; 1a3a4 <sav_begin_data+0xe24>
   1ac7c:	add	r0, pc, r0
   1ac80:	add	r1, sp, #144	; 0x90
   1ac84:	ldrd	r2, [r0, #128]	; 0x80
   1ac88:	strd	r2, [r1]
   1ac8c:	ldrd	r2, [r0, #136]	; 0x88
   1ac90:	strd	r2, [r1, #8]
   1ac94:	mov	r4, #1
   1ac98:	mov	r5, #0
   1ac9c:	strd	r4, [sp, #80]	; 0x50
   1aca0:	ldr	r2, [r9, #80]	; 0x50
   1aca4:	asr	r3, r2, #31
   1aca8:	strd	r2, [sp, #96]	; 0x60
   1acac:	mov	r2, #16
   1acb0:	mov	r0, r9
   1acb4:	bl	4454 <readstat_write_bytes@plt>
   1acb8:	subs	fp, r0, #0
   1acbc:	bne	1a0a0 <sav_begin_data+0xb20>
   1acc0:	mov	r2, #8
   1acc4:	add	r1, sp, #80	; 0x50
   1acc8:	mov	r0, r9
   1accc:	bl	4454 <readstat_write_bytes@plt>
   1acd0:	subs	fp, r0, #0
   1acd4:	bne	1a0a0 <sav_begin_data+0xb20>
   1acd8:	mov	r2, #8
   1acdc:	add	r1, sp, #96	; 0x60
   1ace0:	mov	r0, r9
   1ace4:	bl	4454 <readstat_write_bytes@plt>
   1ace8:	subs	fp, r0, #0
   1acec:	bne	1a0a0 <sav_begin_data+0xb20>
   1acf0:	mov	r3, #0
   1acf4:	str	r3, [sp, #148]	; 0x94
   1acf8:	movw	r3, #999	; 0x3e7
   1acfc:	str	r3, [sp, #144]	; 0x90
   1ad00:	mov	r2, #8
   1ad04:	add	r1, sp, #144	; 0x90
   1ad08:	mov	r0, r9
   1ad0c:	bl	4454 <readstat_write_bytes@plt>
   1ad10:	mov	fp, r0
   1ad14:	ldr	r0, [sp, #32]
   1ad18:	bl	3eb4 <free@plt>
   1ad1c:	cmp	fp, #0
   1ad20:	bne	1a0a8 <sav_begin_data+0xb28>
   1ad24:	ldr	r0, [r9, #76]	; 0x4c
   1ad28:	bl	3fd4 <sav_compressed_row_bound@plt>
   1ad2c:	ldr	r3, [r9, #16]
   1ad30:	cmp	r3, #1
   1ad34:	beq	1af5c <sav_begin_data+0x19dc>
   1ad38:	cmp	r3, #2
   1ad3c:	bne	1a0a8 <sav_begin_data+0xb28>
   1ad40:	ldr	r2, [r9, #4]
   1ad44:	mov	r3, #0
   1ad48:	bl	40ac <zsav_ctx_init@plt>
   1ad4c:	str	r0, [r9, #300]	; 0x12c
   1ad50:	b	1a0a8 <sav_begin_data+0xb28>
   1ad54:	mov	r2, #16
   1ad58:	add	r1, sp, #144	; 0x90
   1ad5c:	mov	r0, r9
   1ad60:	bl	4454 <readstat_write_bytes@plt>
   1ad64:	subs	fp, r0, #0
   1ad68:	bne	1a0a0 <sav_begin_data+0xb20>
   1ad6c:	ldr	r3, [sp, #16]
   1ad70:	cmp	r3, #0
   1ad74:	ble	1ac78 <sav_begin_data+0x16f8>
   1ad78:	mov	sl, #0
   1ad7c:	add	r4, sp, #80	; 0x50
   1ad80:	str	r4, [sp, #12]
   1ad84:	b	1ae1c <sav_begin_data+0x189c>
   1ad88:	add	r6, r6, #1
   1ad8c:	mov	r0, r5
   1ad90:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   1ad94:	cmp	r6, r0
   1ad98:	bge	1ae00 <sav_begin_data+0x1880>
   1ad9c:	mov	r2, r6
   1ada0:	mov	r1, r5
   1ada4:	ldr	r0, [sp, #12]
   1ada8:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   1adac:	mov	r2, r6
   1adb0:	mov	r1, r5
   1adb4:	mov	r0, r7
   1adb8:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   1adbc:	ldm	r4, {r0, r1, r2, r3}
   1adc0:	bl	3fa4 <readstat_string_value@plt>
   1adc4:	mov	r8, r0
   1adc8:	ldm	r7, {r0, r1, r2, r3}
   1adcc:	bl	3fa4 <readstat_string_value@plt>
   1add0:	mov	r1, r0
   1add4:	cmp	r8, #0
   1add8:	cmpne	r0, #0
   1addc:	beq	1ad88 <sav_begin_data+0x1808>
   1ade0:	mov	r0, r8
   1ade4:	bl	3df4 <strcmp@plt>
   1ade8:	cmp	r0, #0
   1adec:	bne	1ad88 <sav_begin_data+0x1808>
   1adf0:	ldrb	r3, [sp, #48]	; 0x30
   1adf4:	add	r3, r3, #1
   1adf8:	strb	r3, [sp, #48]	; 0x30
   1adfc:	b	1ad88 <sav_begin_data+0x1808>
   1ae00:	ldrb	r3, [sp, #48]	; 0x30
   1ae04:	cmp	r3, #0
   1ae08:	bne	1ae60 <sav_begin_data+0x18e0>
   1ae0c:	add	sl, sl, #1
   1ae10:	ldr	r3, [sp, #16]
   1ae14:	cmp	r3, sl
   1ae18:	beq	1ac78 <sav_begin_data+0x16f8>
   1ae1c:	mov	r1, sl
   1ae20:	mov	r0, r9
   1ae24:	bl	437c <readstat_get_variable@plt>
   1ae28:	mov	r5, r0
   1ae2c:	add	fp, r0, #8
   1ae30:	mov	r0, fp
   1ae34:	bl	41fc <strlen@plt>
   1ae38:	str	r0, [sp, #56]	; 0x38
   1ae3c:	mov	r3, #0
   1ae40:	strb	r3, [sp, #48]	; 0x30
   1ae44:	mov	r0, r5
   1ae48:	bl	42c8 <readstat_variable_get_storage_width@plt>
   1ae4c:	cmp	r0, #8
   1ae50:	movgt	r6, #0
   1ae54:	addgt	r7, sp, #96	; 0x60
   1ae58:	ble	1ae0c <sav_begin_data+0x188c>
   1ae5c:	b	1ad8c <sav_begin_data+0x180c>
   1ae60:	mov	r2, #4
   1ae64:	add	r1, sp, #56	; 0x38
   1ae68:	mov	r0, r9
   1ae6c:	bl	4454 <readstat_write_bytes@plt>
   1ae70:	cmp	r0, #0
   1ae74:	bne	1b010 <sav_begin_data+0x1a90>
   1ae78:	ldr	r2, [sp, #56]	; 0x38
   1ae7c:	mov	r1, fp
   1ae80:	mov	r0, r9
   1ae84:	bl	4454 <readstat_write_bytes@plt>
   1ae88:	cmp	r0, #0
   1ae8c:	bne	1b018 <sav_begin_data+0x1a98>
   1ae90:	mov	r2, #1
   1ae94:	add	r1, sp, #48	; 0x30
   1ae98:	mov	r0, r9
   1ae9c:	bl	4454 <readstat_write_bytes@plt>
   1aea0:	cmp	r0, #0
   1aea4:	bne	1b020 <sav_begin_data+0x1aa0>
   1aea8:	mov	r3, #8
   1aeac:	str	r3, [sp, #68]	; 0x44
   1aeb0:	mov	r2, #4
   1aeb4:	add	r1, sp, #68	; 0x44
   1aeb8:	mov	r0, r9
   1aebc:	bl	4454 <readstat_write_bytes@plt>
   1aec0:	cmp	r0, #0
   1aec4:	bne	1b028 <sav_begin_data+0x1aa8>
   1aec8:	mov	r6, #0
   1aecc:	add	r7, sp, #96	; 0x60
   1aed0:	b	1aed8 <sav_begin_data+0x1958>
   1aed4:	add	r6, r6, #1
   1aed8:	mov	r0, r5
   1aedc:	bl	4304 <readstat_variable_get_missing_ranges_count@plt>
   1aee0:	cmp	r6, r0
   1aee4:	bge	1ae0c <sav_begin_data+0x188c>
   1aee8:	mov	r2, r6
   1aeec:	mov	r1, r5
   1aef0:	ldr	r0, [sp, #12]
   1aef4:	bl	3f38 <readstat_variable_get_missing_range_lo@plt>
   1aef8:	mov	r2, r6
   1aefc:	mov	r1, r5
   1af00:	mov	r0, r7
   1af04:	bl	4328 <readstat_variable_get_missing_range_hi@plt>
   1af08:	ldm	r4, {r0, r1, r2, r3}
   1af0c:	bl	3fa4 <readstat_string_value@plt>
   1af10:	mov	r8, r0
   1af14:	ldm	r7, {r0, r1, r2, r3}
   1af18:	bl	3fa4 <readstat_string_value@plt>
   1af1c:	mov	r1, r0
   1af20:	cmp	r8, #0
   1af24:	cmpne	r0, #0
   1af28:	beq	1aed4 <sav_begin_data+0x1954>
   1af2c:	mov	r0, r8
   1af30:	bl	3df4 <strcmp@plt>
   1af34:	cmp	r0, #0
   1af38:	bne	1aed4 <sav_begin_data+0x1954>
   1af3c:	ldr	r2, [sp, #68]	; 0x44
   1af40:	mov	r1, r8
   1af44:	mov	r0, r9
   1af48:	bl	4550 <readstat_write_space_padded_string@plt>
   1af4c:	cmp	r0, #0
   1af50:	beq	1aed4 <sav_begin_data+0x1954>
   1af54:	mov	fp, r0
   1af58:	b	1a0a0 <sav_begin_data+0xb20>
   1af5c:	bl	422c <readstat_malloc@plt>
   1af60:	str	r0, [r9, #300]	; 0x12c
   1af64:	b	1a0a8 <sav_begin_data+0xb28>
   1af68:	mov	fp, r0
   1af6c:	b	1a0a0 <sav_begin_data+0xb20>
   1af70:	mov	fp, r0
   1af74:	b	1a0a0 <sav_begin_data+0xb20>
   1af78:	mov	fp, r0
   1af7c:	b	1a0a0 <sav_begin_data+0xb20>
   1af80:	mov	fp, r0
   1af84:	b	1a0a0 <sav_begin_data+0xb20>
   1af88:	mov	fp, r0
   1af8c:	b	1a0a0 <sav_begin_data+0xb20>
   1af90:	mov	fp, r0
   1af94:	b	1a0a0 <sav_begin_data+0xb20>
   1af98:	mov	fp, r0
   1af9c:	b	1a0a0 <sav_begin_data+0xb20>
   1afa0:	mov	fp, r0
   1afa4:	b	1a0a0 <sav_begin_data+0xb20>
   1afa8:	mov	fp, r0
   1afac:	b	1a0a0 <sav_begin_data+0xb20>
   1afb0:	mov	fp, r0
   1afb4:	b	1a0a0 <sav_begin_data+0xb20>
   1afb8:	mov	fp, r0
   1afbc:	b	1a0a0 <sav_begin_data+0xb20>
   1afc0:	mov	fp, r0
   1afc4:	b	1a0a0 <sav_begin_data+0xb20>
   1afc8:	mov	fp, r0
   1afcc:	b	1a0a0 <sav_begin_data+0xb20>
   1afd0:	mov	fp, r0
   1afd4:	b	1a0a0 <sav_begin_data+0xb20>
   1afd8:	mov	fp, r0
   1afdc:	b	1a0a0 <sav_begin_data+0xb20>
   1afe0:	mov	fp, r0
   1afe4:	b	1a0a0 <sav_begin_data+0xb20>
   1afe8:	mov	fp, r0
   1afec:	b	1a0a0 <sav_begin_data+0xb20>
   1aff0:	mov	fp, r0
   1aff4:	b	1a0a0 <sav_begin_data+0xb20>
   1aff8:	mov	fp, r0
   1affc:	b	1a0a0 <sav_begin_data+0xb20>
   1b000:	mov	fp, r0
   1b004:	b	1a0a0 <sav_begin_data+0xb20>
   1b008:	mov	fp, r0
   1b00c:	b	1a0a0 <sav_begin_data+0xb20>
   1b010:	mov	fp, r0
   1b014:	b	1a0a0 <sav_begin_data+0xb20>
   1b018:	mov	fp, r0
   1b01c:	b	1a0a0 <sav_begin_data+0xb20>
   1b020:	mov	fp, r0
   1b024:	b	1a0a0 <sav_begin_data+0xb20>
   1b028:	mov	fp, r0
   1b02c:	b	1a0a0 <sav_begin_data+0xb20>
   1b030:	mov	fp, #32
   1b034:	b	1a0a0 <sav_begin_data+0xb20>
   1b038:	ldr	r3, [sp, #20]
   1b03c:	add	r2, r3, #1
   1b040:	str	r2, [sp, #20]
   1b044:	ldr	r3, [sp, #16]
   1b048:	add	r3, r3, #15
   1b04c:	str	r3, [sp, #16]
   1b050:	ldr	r3, [sp, #12]
   1b054:	ldr	r3, [r3, #28]
   1b058:	cmp	r2, r3
   1b05c:	bge	1b194 <sav_begin_data+0x1c14>
   1b060:	ldr	r1, [sp, #20]
   1b064:	ldr	r5, [sp, #12]
   1b068:	mov	r0, r5
   1b06c:	bl	437c <readstat_get_variable@plt>
   1b070:	mov	r4, r0
   1b074:	mov	r3, #2
   1b078:	str	r3, [sp, #44]	; 0x2c
   1b07c:	ldr	r2, [sp, #16]
   1b080:	mov	r1, #9
   1b084:	add	r0, sp, #68	; 0x44
   1b088:	bl	19144 <sav_format_variable_name>
   1b08c:	str	r0, [sp, #28]
   1b090:	mov	r2, #4
   1b094:	add	r1, sp, #44	; 0x2c
   1b098:	mov	r0, r5
   1b09c:	bl	4454 <readstat_write_bytes@plt>
   1b0a0:	cmp	r0, #0
   1b0a4:	bne	1af68 <sav_begin_data+0x19e8>
   1b0a8:	mov	r2, #0
   1b0ac:	str	r2, [sp, #96]	; 0x60
   1b0b0:	str	r2, [sp, #100]	; 0x64
   1b0b4:	str	r2, [sp, #104]	; 0x68
   1b0b8:	str	r2, [sp, #108]	; 0x6c
   1b0bc:	str	r2, [sp, #112]	; 0x70
   1b0c0:	str	r2, [sp, #116]	; 0x74
   1b0c4:	str	r2, [sp, #120]	; 0x78
   1b0c8:	ldr	r3, [r4]
   1b0cc:	cmp	r3, r2
   1b0d0:	bne	1b0e4 <sav_begin_data+0x1b64>
   1b0d4:	ldr	r3, [r4, #1600]	; 0x640
   1b0d8:	cmp	r3, #255	; 0xff
   1b0dc:	movcs	r3, #255	; 0xff
   1b0e0:	str	r3, [sp, #96]	; 0x60
   1b0e4:	ldrb	r3, [r4, #564]	; 0x234
   1b0e8:	adds	r3, r3, #0
   1b0ec:	movne	r3, #1
   1b0f0:	str	r3, [sp, #100]	; 0x64
   1b0f4:	ldr	r3, [r4]
   1b0f8:	cmp	r3, #5
   1b0fc:	beq	199fc <sav_begin_data+0x47c>
   1b100:	mov	r0, r4
   1b104:	bl	42c8 <readstat_variable_get_storage_width@plt>
   1b108:	cmp	r0, #8
   1b10c:	movhi	r5, #0
   1b110:	bls	19aac <sav_begin_data+0x52c>
   1b114:	str	r5, [sp, #104]	; 0x68
   1b118:	add	r1, sp, #144	; 0x90
   1b11c:	mov	r0, r4
   1b120:	bl	40f4 <spss_format_for_variable@plt>
   1b124:	cmp	r0, #0
   1b128:	bne	1af70 <sav_begin_data+0x19f0>
   1b12c:	ldr	r3, [sp, #148]	; 0x94
   1b130:	cmp	r3, #255	; 0xff
   1b134:	movge	r3, #255	; 0xff
   1b138:	lsl	r3, r3, #8
   1b13c:	uxth	r3, r3
   1b140:	ldr	r1, [sp, #144]	; 0x90
   1b144:	ldr	r2, [sp, #152]	; 0x98
   1b148:	orr	r2, r2, r1, lsl #16
   1b14c:	orr	r3, r3, r2
   1b150:	str	r3, [sp, #108]	; 0x6c
   1b154:	str	r3, [sp, #112]	; 0x70
   1b158:	add	r1, pc, #688	; 0x2b0
   1b15c:	ldrd	r0, [r1]
   1b160:	strd	r0, [sp, #116]	; 0x74
   1b164:	ldr	r3, [sp, #28]
   1b168:	sub	r3, r3, #1
   1b16c:	cmp	r3, #7
   1b170:	bls	19b58 <sav_begin_data+0x5d8>
   1b174:	mov	r2, #28
   1b178:	add	r1, sp, #96	; 0x60
   1b17c:	ldr	r0, [sp, #12]
   1b180:	bl	4454 <readstat_write_bytes@plt>
   1b184:	cmp	r0, #0
   1b188:	beq	19b6c <sav_begin_data+0x5ec>
   1b18c:	mov	fp, r0
   1b190:	b	1a0a0 <sav_begin_data+0xb20>
   1b194:	ldr	r9, [sp, #12]
   1b198:	ldr	r3, [r9, #40]	; 0x28
   1b19c:	cmp	r3, #0
   1b1a0:	movgt	r5, #0
   1b1a4:	bgt	1a2d0 <sav_begin_data+0xd50>
   1b1a8:	mov	r3, #6
   1b1ac:	str	r3, [sp, #96]	; 0x60
   1b1b0:	ldr	r3, [r9, #52]	; 0x34
   1b1b4:	str	r3, [sp, #144]	; 0x90
   1b1b8:	cmp	r3, #0
   1b1bc:	bne	1a3a8 <sav_begin_data+0xe28>
   1b1c0:	ldr	r0, [pc, #592]	; 1b418 <sav_begin_data+0x1e98>
   1b1c4:	add	r0, pc, r0
   1b1c8:	ldrd	r2, [r0, #144]	; 0x90
   1b1cc:	strd	r2, [sp, #96]	; 0x60
   1b1d0:	ldrd	r2, [r0, #152]	; 0x98
   1b1d4:	strd	r2, [sp, #104]	; 0x68
   1b1d8:	mov	r3, #20
   1b1dc:	str	r3, [sp, #144]	; 0x90
   1b1e0:	mov	r3, #0
   1b1e4:	str	r3, [sp, #148]	; 0x94
   1b1e8:	str	r3, [sp, #152]	; 0x98
   1b1ec:	mvn	r3, #0
   1b1f0:	str	r3, [sp, #156]	; 0x9c
   1b1f4:	mov	r3, #1
   1b1f8:	str	r3, [sp, #160]	; 0xa0
   1b1fc:	str	r3, [sp, #164]	; 0xa4
   1b200:	bl	3ea8 <machine_is_little_endian@plt>
   1b204:	cmp	r0, #0
   1b208:	movne	r3, #2
   1b20c:	moveq	r3, #1
   1b210:	str	r3, [sp, #168]	; 0xa8
   1b214:	movw	r3, #65001	; 0xfde9
   1b218:	str	r3, [sp, #172]	; 0xac
   1b21c:	mov	r2, #16
   1b220:	add	r1, sp, #96	; 0x60
   1b224:	mov	r0, r9
   1b228:	bl	4454 <readstat_write_bytes@plt>
   1b22c:	subs	fp, r0, #0
   1b230:	bne	1a0a0 <sav_begin_data+0xb20>
   1b234:	mov	r2, #32
   1b238:	add	r1, sp, #144	; 0x90
   1b23c:	mov	r0, r9
   1b240:	bl	4454 <readstat_write_bytes@plt>
   1b244:	subs	fp, r0, #0
   1b248:	bne	1a0a0 <sav_begin_data+0xb20>
   1b24c:	ldr	r0, [pc, #456]	; 1b41c <sav_begin_data+0x1e9c>
   1b250:	add	r0, pc, r0
   1b254:	add	r1, sp, #96	; 0x60
   1b258:	ldrd	r2, [r0, #48]	; 0x30
   1b25c:	strd	r2, [r1]
   1b260:	ldrd	r2, [r0, #56]	; 0x38
   1b264:	strd	r2, [r1, #8]
   1b268:	mov	r2, #16
   1b26c:	mov	r0, r9
   1b270:	bl	4454 <readstat_write_bytes@plt>
   1b274:	subs	fp, r0, #0
   1b278:	bne	1a0a0 <sav_begin_data+0xb20>
   1b27c:	mvn	r2, #0
   1b280:	mvn	r3, #1048576	; 0x100000
   1b284:	add	r1, sp, #144	; 0x90
   1b288:	strd	r2, [r1]
   1b28c:	mvn	r2, #0
   1b290:	movw	r3, #65535	; 0xffff
   1b294:	movt	r3, #32751	; 0x7fef
   1b298:	strd	r2, [r1, #8]
   1b29c:	mvn	r2, #1
   1b2a0:	mvn	r3, #1048576	; 0x100000
   1b2a4:	strd	r2, [r1, #16]
   1b2a8:	mov	r2, #24
   1b2ac:	mov	r0, r9
   1b2b0:	bl	4454 <readstat_write_bytes@plt>
   1b2b4:	subs	fp, r0, #0
   1b2b8:	bne	1a0a0 <sav_begin_data+0xb20>
   1b2bc:	mov	r3, #0
   1b2c0:	str	r3, [sp, #156]	; 0x9c
   1b2c4:	mov	r3, #7
   1b2c8:	str	r3, [sp, #144]	; 0x90
   1b2cc:	mov	r3, #11
   1b2d0:	str	r3, [sp, #148]	; 0x94
   1b2d4:	mov	r3, #4
   1b2d8:	str	r3, [sp, #152]	; 0x98
   1b2dc:	ldr	r3, [r9, #28]
   1b2e0:	cmp	r3, #0
   1b2e4:	ble	1a444 <sav_begin_data+0xec4>
   1b2e8:	mov	r5, #0
   1b2ec:	mov	r4, r5
   1b2f0:	mov	r1, r4
   1b2f4:	mov	r0, r9
   1b2f8:	bl	437c <readstat_get_variable@plt>
   1b2fc:	ldr	r1, [r0, #1600]	; 0x640
   1b300:	ldr	r0, [r0]
   1b304:	bl	18e38 <sav_variable_segments>
   1b308:	add	r5, r5, r0
   1b30c:	add	r4, r4, #1
   1b310:	ldr	r3, [r9, #28]
   1b314:	cmp	r4, r3
   1b318:	blt	1b2f0 <sav_begin_data+0x1d70>
   1b31c:	add	r5, r5, r5, lsl #1
   1b320:	str	r5, [sp, #156]	; 0x9c
   1b324:	mov	r2, #16
   1b328:	add	r1, sp, #144	; 0x90
   1b32c:	mov	r0, r9
   1b330:	bl	4454 <readstat_write_bytes@plt>
   1b334:	subs	fp, r0, #0
   1b338:	bne	1a0a0 <sav_begin_data+0xb20>
   1b33c:	ldr	r3, [r9, #28]
   1b340:	cmp	r3, #0
   1b344:	movgt	r8, #0
   1b348:	movgt	sl, #8
   1b34c:	addgt	r6, sp, #68	; 0x44
   1b350:	ble	1a45c <sav_begin_data+0xedc>
   1b354:	mov	r1, r8
   1b358:	mov	r0, r9
   1b35c:	bl	437c <readstat_get_variable@plt>
   1b360:	mov	r4, r0
   1b364:	bl	431c <readstat_variable_get_measure@plt>
   1b368:	bl	4064 <spss_measure_from_readstat_measure@plt>
   1b36c:	str	r0, [sp, #68]	; 0x44
   1b370:	mov	r0, r4
   1b374:	bl	4220 <readstat_variable_get_display_width@plt>
   1b378:	subs	r3, r0, #0
   1b37c:	movle	r3, sl
   1b380:	str	r3, [sp, #80]	; 0x50
   1b384:	mov	r0, r4
   1b388:	bl	4430 <readstat_variable_get_alignment@plt>
   1b38c:	bl	3e54 <spss_alignment_from_readstat_alignment@plt>
   1b390:	str	r0, [sp, #96]	; 0x60
   1b394:	ldr	r1, [r4, #1600]	; 0x640
   1b398:	ldr	r0, [r4]
   1b39c:	bl	18e38 <sav_variable_segments>
   1b3a0:	mov	r5, r0
   1b3a4:	mov	r4, #4
   1b3a8:	add	r7, sp, #80	; 0x50
   1b3ac:	cmp	r5, #0
   1b3b0:	beq	1a44c <sav_begin_data+0xecc>
   1b3b4:	mov	r2, r4
   1b3b8:	mov	r1, r6
   1b3bc:	mov	r0, r9
   1b3c0:	bl	4454 <readstat_write_bytes@plt>
   1b3c4:	cmp	r0, #0
   1b3c8:	bne	1afe0 <sav_begin_data+0x1a60>
   1b3cc:	mov	r2, r4
   1b3d0:	mov	r1, r7
   1b3d4:	mov	r0, r9
   1b3d8:	bl	4454 <readstat_write_bytes@plt>
   1b3dc:	cmp	r0, #0
   1b3e0:	bne	1afe8 <sav_begin_data+0x1a68>
   1b3e4:	mov	r2, r4
   1b3e8:	add	r1, sp, #96	; 0x60
   1b3ec:	mov	r0, r9
   1b3f0:	bl	4454 <readstat_write_bytes@plt>
   1b3f4:	sub	r5, r5, #1
   1b3f8:	cmp	r0, #0
   1b3fc:	beq	1b3ac <sav_begin_data+0x1e2c>
   1b400:	mov	fp, r0
   1b404:	b	1a0a0 <sav_begin_data+0xb20>
   1b408:	mov	fp, #39	; 0x27
   1b40c:	b	1a0a0 <sav_begin_data+0xb20>
   1b410:	.word	0x20202020
   1b414:	.word	0x20202020
   1b418:	.word	0x0000c85c
   1b41c:	.word	0x0000c7d0

0001b420 <readstat_begin_writing_sav>:
   1b420:	ldr	r3, [pc, #320]	; 1b568 <readstat_begin_writing_sav+0x148>
   1b424:	add	r3, pc, r3
   1b428:	ldr	ip, [pc, #316]	; 1b56c <readstat_begin_writing_sav+0x14c>
   1b42c:	add	ip, pc, ip
   1b430:	str	ip, [r0, #292]	; 0x124
   1b434:	ldr	ip, [pc, #308]	; 1b570 <readstat_begin_writing_sav+0x150>
   1b438:	add	ip, pc, ip
   1b43c:	str	ip, [r0, #228]	; 0xe4
   1b440:	ldr	ip, [pc, #300]	; 1b574 <readstat_begin_writing_sav+0x154>
   1b444:	add	ip, pc, ip
   1b448:	str	ip, [r0, #232]	; 0xe8
   1b44c:	ldr	ip, [pc, #292]	; 1b578 <readstat_begin_writing_sav+0x158>
   1b450:	add	ip, pc, ip
   1b454:	str	ip, [r0, #236]	; 0xec
   1b458:	ldr	ip, [pc, #284]	; 1b57c <readstat_begin_writing_sav+0x15c>
   1b45c:	add	ip, pc, ip
   1b460:	str	ip, [r0, #240]	; 0xf0
   1b464:	ldr	ip, [pc, #276]	; 1b580 <readstat_begin_writing_sav+0x160>
   1b468:	add	ip, pc, ip
   1b46c:	str	ip, [r0, #244]	; 0xf4
   1b470:	ldr	ip, [pc, #268]	; 1b584 <readstat_begin_writing_sav+0x164>
   1b474:	add	ip, pc, ip
   1b478:	str	ip, [r0, #248]	; 0xf8
   1b47c:	ldr	ip, [pc, #260]	; 1b588 <readstat_begin_writing_sav+0x168>
   1b480:	add	ip, pc, ip
   1b484:	str	ip, [r0, #252]	; 0xfc
   1b488:	ldr	ip, [pc, #252]	; 1b58c <readstat_begin_writing_sav+0x16c>
   1b48c:	add	ip, pc, ip
   1b490:	str	ip, [r0, #256]	; 0x100
   1b494:	ldr	ip, [pc, #244]	; 1b590 <readstat_begin_writing_sav+0x170>
   1b498:	add	ip, pc, ip
   1b49c:	str	ip, [r0, #264]	; 0x108
   1b4a0:	ldr	ip, [pc, #236]	; 1b594 <readstat_begin_writing_sav+0x174>
   1b4a4:	add	ip, pc, ip
   1b4a8:	str	ip, [r0, #268]	; 0x10c
   1b4ac:	ldr	ip, [pc, #228]	; 1b598 <readstat_begin_writing_sav+0x178>
   1b4b0:	add	ip, pc, ip
   1b4b4:	str	ip, [r0, #276]	; 0x114
   1b4b8:	ldr	ip, [r0, #8]
   1b4bc:	cmp	ip, #3
   1b4c0:	moveq	ip, #2
   1b4c4:	streq	ip, [r0, #16]
   1b4c8:	beq	1b538 <readstat_begin_writing_sav+0x118>
   1b4cc:	cmp	ip, #0
   1b4d0:	bne	1b4e8 <readstat_begin_writing_sav+0xc8>
   1b4d4:	ldr	ip, [r0, #16]
   1b4d8:	cmp	ip, #2
   1b4dc:	moveq	ip, #3
   1b4e0:	movne	ip, #2
   1b4e4:	str	ip, [r0, #8]
   1b4e8:	ldr	ip, [r0, #16]
   1b4ec:	cmp	ip, #1
   1b4f0:	beq	1b51c <readstat_begin_writing_sav+0xfc>
   1b4f4:	cmp	ip, #2
   1b4f8:	beq	1b538 <readstat_begin_writing_sav+0x118>
   1b4fc:	cmp	ip, #0
   1b500:	bne	1b560 <readstat_begin_writing_sav+0x140>
   1b504:	str	r4, [sp, #-8]!
   1b508:	str	lr, [sp, #4]
   1b50c:	bl	3f5c <readstat_begin_writing_file@plt>
   1b510:	ldr	r4, [sp]
   1b514:	add	sp, sp, #4
   1b518:	pop	{pc}		; (ldr pc, [sp], #4)
   1b51c:	ldr	ip, [pc, #120]	; 1b59c <readstat_begin_writing_sav+0x17c>
   1b520:	add	ip, pc, ip
   1b524:	str	ip, [r0, #280]	; 0x118
   1b528:	ldr	ip, [pc, #112]	; 1b5a0 <readstat_begin_writing_sav+0x180>
   1b52c:	ldr	r3, [r3, ip]
   1b530:	str	r3, [r0, #288]	; 0x120
   1b534:	b	1b504 <readstat_begin_writing_sav+0xe4>
   1b538:	ldr	ip, [pc, #100]	; 1b5a4 <readstat_begin_writing_sav+0x184>
   1b53c:	ldr	ip, [r3, ip]
   1b540:	str	ip, [r0, #280]	; 0x118
   1b544:	ldr	ip, [pc, #92]	; 1b5a8 <readstat_begin_writing_sav+0x188>
   1b548:	ldr	ip, [r3, ip]
   1b54c:	str	ip, [r0, #284]	; 0x11c
   1b550:	ldr	ip, [pc, #84]	; 1b5ac <readstat_begin_writing_sav+0x18c>
   1b554:	ldr	r3, [r3, ip]
   1b558:	str	r3, [r0, #288]	; 0x120
   1b55c:	b	1b504 <readstat_begin_writing_sav+0xe4>
   1b560:	mov	r0, #6
   1b564:	bx	lr
   1b568:	.word	0x0002abd4
   1b56c:	.word	0xffffdab8
   1b570:	.word	0xffffda3c
   1b574:	.word	0xffffde04
   1b578:	.word	0xffffdcc0
   1b57c:	.word	0xffffdc88
   1b580:	.word	0xffffdc50
   1b584:	.word	0xffffdc1c
   1b588:	.word	0xffffdbec
   1b58c:	.word	0xffffdce4
   1b590:	.word	0xffffdb88
   1b594:	.word	0xffffdba0
   1b598:	.word	0xffffe0c8
   1b59c:	.word	0xffffd9f8
   1b5a0:	.word	0x000002d8
   1b5a4:	.word	0x000002e4
   1b5a8:	.word	0x000002ec
   1b5ac:	.word	0x000002d4

0001b5b0 <spss_boxed_missing_value>:
   1b5b0:	sub	sp, sp, #16
   1b5b4:	ldr	r3, [r1]
   1b5b8:	cmp	r3, #5
   1b5bc:	beq	1b5f8 <spss_boxed_missing_value+0x48>
   1b5c0:	mov	ip, #0
   1b5c4:	str	ip, [sp, #4]
   1b5c8:	str	ip, [sp, #8]
   1b5cc:	str	ip, [sp, #12]
   1b5d0:	add	r2, r2, r2, lsl #5
   1b5d4:	add	r2, r2, #88	; 0x58
   1b5d8:	add	r2, r1, r2
   1b5dc:	str	r2, [sp]
   1b5e0:	ldrd	r2, [sp]
   1b5e4:	strd	r2, [r0]
   1b5e8:	ldrd	r2, [sp, #8]
   1b5ec:	strd	r2, [r0, #8]
   1b5f0:	add	sp, sp, #16
   1b5f4:	bx	lr
   1b5f8:	add	r2, r1, r2, lsl #3
   1b5fc:	vldr	d7, [r2, #64]	; 0x40
   1b600:	mov	r3, #0
   1b604:	str	r3, [sp, #12]
   1b608:	vstr	d7, [sp]
   1b60c:	mov	r3, #5
   1b610:	str	r3, [sp, #8]
   1b614:	vcmp.f64	d7, d7
   1b618:	vmrs	APSR_nzcv, fpscr
   1b61c:	movvs	r3, #1
   1b620:	movvc	r3, #0
   1b624:	strb	r3, [sp, #13]
   1b628:	ldrd	r2, [sp]
   1b62c:	strd	r2, [r0]
   1b630:	ldrd	r2, [sp, #8]
   1b634:	strd	r2, [r0, #8]
   1b638:	b	1b5f0 <spss_boxed_missing_value+0x40>

0001b63c <spss_format>:
   1b63c:	ldr	ip, [r2]
   1b640:	cmp	ip, #41	; 0x29
   1b644:	bhi	1b6f8 <spss_format+0xbc>
   1b648:	ldr	r3, [pc, #184]	; 1b708 <spss_format+0xcc>
   1b64c:	add	r3, pc, r3
   1b650:	ldrb	r3, [r3, ip, lsl #4]
   1b654:	cmp	r3, #0
   1b658:	beq	1b700 <spss_format+0xc4>
   1b65c:	str	r4, [sp, #-8]!
   1b660:	str	lr, [sp, #4]
   1b664:	sub	sp, sp, #8
   1b668:	ldr	r3, [pc, #156]	; 1b70c <spss_format+0xd0>
   1b66c:	add	r3, pc, r3
   1b670:	add	r3, r3, ip, lsl #4
   1b674:	ldr	r4, [r2, #8]
   1b678:	adds	lr, r4, #0
   1b67c:	movne	lr, #1
   1b680:	cmp	ip, #5
   1b684:	movne	ip, lr
   1b688:	orreq	ip, lr, #1
   1b68c:	cmp	ip, #0
   1b690:	beq	1b6c0 <spss_format+0x84>
   1b694:	str	r4, [sp, #4]
   1b698:	ldr	r2, [r2, #4]
   1b69c:	str	r2, [sp]
   1b6a0:	ldr	r2, [pc, #104]	; 1b710 <spss_format+0xd4>
   1b6a4:	add	r2, pc, r2
   1b6a8:	bl	4280 <snprintf@plt>
   1b6ac:	mov	r0, #1
   1b6b0:	add	sp, sp, #8
   1b6b4:	ldr	r4, [sp]
   1b6b8:	add	sp, sp, #4
   1b6bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6c0:	ldr	r2, [r2, #4]
   1b6c4:	cmp	r2, #0
   1b6c8:	beq	1b6e4 <spss_format+0xa8>
   1b6cc:	str	r2, [sp]
   1b6d0:	ldr	r2, [pc, #60]	; 1b714 <spss_format+0xd8>
   1b6d4:	add	r2, pc, r2
   1b6d8:	bl	4280 <snprintf@plt>
   1b6dc:	mov	r0, #1
   1b6e0:	b	1b6b0 <spss_format+0x74>
   1b6e4:	ldr	r2, [pc, #44]	; 1b718 <spss_format+0xdc>
   1b6e8:	add	r2, pc, r2
   1b6ec:	bl	4280 <snprintf@plt>
   1b6f0:	mov	r0, #1
   1b6f4:	b	1b6b0 <spss_format+0x74>
   1b6f8:	mov	r0, #0
   1b6fc:	bx	lr
   1b700:	mov	r0, #0
   1b704:	bx	lr
   1b708:	.word	0x0002c430
   1b70c:	.word	0x0002c410
   1b710:	.word	0x0000b2f8
   1b714:	.word	0x0000b2d0
   1b718:	.word	0x0000af04

0001b71c <spss_varinfo_compare>:
   1b71c:	ldr	r3, [r0]
   1b720:	ldr	r2, [r1]
   1b724:	ldr	r0, [r2, #12]
   1b728:	cmp	r0, r3
   1b72c:	bgt	1b740 <spss_varinfo_compare+0x24>
   1b730:	cmp	r0, r3
   1b734:	movge	r0, #0
   1b738:	movlt	r0, #1
   1b73c:	bx	lr
   1b740:	mvn	r0, #0
   1b744:	bx	lr

0001b748 <spss_varinfo_free>:
   1b748:	str	r4, [sp, #-8]!
   1b74c:	str	lr, [sp, #4]
   1b750:	subs	r4, r0, #0
   1b754:	beq	1b770 <spss_varinfo_free+0x28>
   1b758:	ldr	r0, [r4, #264]	; 0x108
   1b75c:	cmp	r0, #0
   1b760:	beq	1b768 <spss_varinfo_free+0x20>
   1b764:	bl	3eb4 <free@plt>
   1b768:	mov	r0, r4
   1b76c:	bl	3eb4 <free@plt>
   1b770:	ldr	r4, [sp]
   1b774:	add	sp, sp, #4
   1b778:	pop	{pc}		; (ldr pc, [sp], #4)

0001b77c <spss_64bit_value>:
   1b77c:	push	{lr}		; (str lr, [sp, #-4]!)
   1b780:	sub	sp, sp, #28
   1b784:	add	ip, sp, #8
   1b788:	stm	ip, {r0, r1, r2, r3}
   1b78c:	ldm	ip, {r0, r1, r2, r3}
   1b790:	bl	41b4 <readstat_double_value@plt>
   1b794:	vstr	d0, [sp]
   1b798:	vabs.f64	d6, d0
   1b79c:	vldr	d7, [pc, #76]	; 1b7f0 <spss_64bit_value+0x74>
   1b7a0:	vcmp.f64	d6, d7
   1b7a4:	vmrs	APSR_nzcv, fpscr
   1b7a8:	ble	1b7d0 <spss_64bit_value+0x54>
   1b7ac:	vcmpe.f64	d0, #0.0
   1b7b0:	vmrs	APSR_nzcv, fpscr
   1b7b4:	mvnmi	r0, #1
   1b7b8:	mvnmi	r1, #1048576	; 0x100000
   1b7bc:	bmi	1b7e8 <spss_64bit_value+0x6c>
   1b7c0:	mvn	r0, #0
   1b7c4:	movw	r1, #65535	; 0xffff
   1b7c8:	movt	r1, #32751	; 0x7fef
   1b7cc:	b	1b7e8 <spss_64bit_value+0x6c>
   1b7d0:	vldr	d7, [sp]
   1b7d4:	vcmp.f64	d7, d7
   1b7d8:	vmrs	APSR_nzcv, fpscr
   1b7dc:	ldrdvc	r0, [sp]
   1b7e0:	mvnvs	r0, #0
   1b7e4:	mvnvs	r1, #1048576	; 0x100000
   1b7e8:	add	sp, sp, #28
   1b7ec:	pop	{pc}		; (ldr pc, [sp], #4)
   1b7f0:	.word	0xffffffff
   1b7f4:	.word	0x7fefffff

0001b7f8 <spss_missingness_for_info>:
   1b7f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b7fc:	strd	r6, [sp, #8]
   1b800:	str	r8, [sp, #16]
   1b804:	str	lr, [sp, #20]
   1b808:	sub	sp, sp, #520	; 0x208
   1b80c:	mov	r8, r0
   1b810:	mov	r6, r1
   1b814:	mov	r2, #520	; 0x208
   1b818:	mov	r1, #0
   1b81c:	mov	r0, sp
   1b820:	bl	42a4 <memset@plt>
   1b824:	ldr	r5, [r6, #56]	; 0x38
   1b828:	cmp	r5, #0
   1b82c:	bne	1b8b4 <spss_missingness_for_info+0xbc>
   1b830:	ldr	r3, [r6, #52]	; 0x34
   1b834:	cmp	r3, #0
   1b838:	ble	1b888 <spss_missingness_for_info+0x90>
   1b83c:	str	r3, [sp, #512]	; 0x200
   1b840:	mov	r4, sp
   1b844:	mov	r7, #1
   1b848:	add	r3, sp, #520	; 0x208
   1b84c:	add	r0, r3, r7, lsl #4
   1b850:	mov	r2, r5
   1b854:	mov	r1, r6
   1b858:	sub	r0, r0, #520	; 0x208
   1b85c:	bl	1b5b0 <spss_boxed_missing_value>
   1b860:	ldrd	r2, [r4, #16]
   1b864:	strd	r2, [r4]
   1b868:	ldrd	r2, [r4, #24]
   1b86c:	strd	r2, [r4, #8]
   1b870:	add	r5, r5, #1
   1b874:	add	r7, r7, #2
   1b878:	add	r4, r4, #32
   1b87c:	ldr	r3, [r6, #52]	; 0x34
   1b880:	cmp	r3, r5
   1b884:	bgt	1b848 <spss_missingness_for_info+0x50>
   1b888:	mov	r2, #520	; 0x208
   1b88c:	mov	r1, sp
   1b890:	mov	r0, r8
   1b894:	bl	3f14 <memcpy@plt>
   1b898:	mov	r0, r8
   1b89c:	add	sp, sp, #520	; 0x208
   1b8a0:	ldrd	r4, [sp]
   1b8a4:	ldrd	r6, [sp, #8]
   1b8a8:	ldr	r8, [sp, #16]
   1b8ac:	add	sp, sp, #20
   1b8b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b8b4:	mov	r4, #1
   1b8b8:	str	r4, [sp, #512]	; 0x200
   1b8bc:	mov	r2, #0
   1b8c0:	mov	r1, r6
   1b8c4:	mov	r0, sp
   1b8c8:	bl	1b5b0 <spss_boxed_missing_value>
   1b8cc:	mov	r2, r4
   1b8d0:	mov	r1, r6
   1b8d4:	add	r0, sp, #16
   1b8d8:	bl	1b5b0 <spss_boxed_missing_value>
   1b8dc:	ldr	r3, [r6, #52]	; 0x34
   1b8e0:	cmp	r3, #3
   1b8e4:	bne	1b888 <spss_missingness_for_info+0x90>
   1b8e8:	mov	r2, #2
   1b8ec:	str	r2, [sp, #512]	; 0x200
   1b8f0:	add	r4, sp, #48	; 0x30
   1b8f4:	mov	r1, r6
   1b8f8:	mov	r0, r4
   1b8fc:	bl	1b5b0 <spss_boxed_missing_value>
   1b900:	ldrd	r2, [r4]
   1b904:	strd	r2, [sp, #32]
   1b908:	ldrd	r2, [r4, #8]
   1b90c:	strd	r2, [sp, #40]	; 0x28
   1b910:	b	1b888 <spss_missingness_for_info+0x90>

0001b914 <spss_init_variable_for_info>:
   1b914:	strd	r4, [sp, #-20]!	; 0xffffffec
   1b918:	strd	r6, [sp, #8]
   1b91c:	str	lr, [sp, #16]
   1b920:	sub	sp, sp, #532	; 0x214
   1b924:	mov	r4, r0
   1b928:	mov	r7, r1
   1b92c:	mov	r6, r2
   1b930:	movw	r1, #2152	; 0x868
   1b934:	mov	r0, #1
   1b938:	bl	3d4c <calloc@plt>
   1b93c:	mov	r5, r0
   1b940:	ldr	r3, [r4, #8]
   1b944:	str	r3, [r0, #4]
   1b948:	str	r7, [r0, #2148]	; 0x864
   1b94c:	ldr	r3, [r4]
   1b950:	str	r3, [r0]
   1b954:	ldr	r3, [r4, #20]
   1b958:	cmp	r3, #0
   1b95c:	ldreq	r3, [r4, #16]
   1b960:	lsleq	r3, r3, #3
   1b964:	str	r3, [r0, #1596]	; 0x63c
   1b968:	ldrb	r3, [r4, #196]	; 0xc4
   1b96c:	cmp	r3, #0
   1b970:	str	r6, [sp]
   1b974:	movne	r3, #65	; 0x41
   1b978:	addne	r2, r4, #196	; 0xc4
   1b97c:	moveq	r3, #9
   1b980:	addeq	r2, r4, #187	; 0xbb
   1b984:	mov	r1, #300	; 0x12c
   1b988:	add	r0, r0, #8
   1b98c:	bl	4238 <readstat_convert@plt>
   1b990:	ldr	r3, [r4, #264]	; 0x108
   1b994:	cmp	r3, #0
   1b998:	beq	1b9b0 <spss_init_variable_for_info+0x9c>
   1b99c:	ldr	r2, [pc, #112]	; 1ba14 <spss_init_variable_for_info+0x100>
   1b9a0:	add	r2, pc, r2
   1b9a4:	mov	r1, #1024	; 0x400
   1b9a8:	add	r0, r5, #564	; 0x234
   1b9ac:	bl	4280 <snprintf@plt>
   1b9b0:	add	r2, r4, #24
   1b9b4:	mov	r1, #256	; 0x100
   1b9b8:	add	r0, r5, #308	; 0x134
   1b9bc:	bl	440c <spss_format@plt>
   1b9c0:	mov	r1, r4
   1b9c4:	add	r6, sp, #8
   1b9c8:	mov	r0, r6
   1b9cc:	bl	452c <spss_missingness_for_info@plt>
   1b9d0:	mov	r2, #520	; 0x208
   1b9d4:	mov	r1, r6
   1b9d8:	add	r0, r5, #1600	; 0x640
   1b9dc:	add	r0, r0, #8
   1b9e0:	bl	3f14 <memcpy@plt>
   1b9e4:	ldr	r3, [r4, #268]	; 0x10c
   1b9e8:	str	r3, [r5, #2128]	; 0x850
   1b9ec:	ldr	r3, [r4, #276]	; 0x114
   1b9f0:	cmp	r3, #0
   1b9f4:	ldreq	r3, [r4, #28]
   1b9f8:	str	r3, [r5, #2136]	; 0x858
   1b9fc:	mov	r0, r5
   1ba00:	add	sp, sp, #532	; 0x214
   1ba04:	ldrd	r4, [sp]
   1ba08:	ldrd	r6, [sp, #8]
   1ba0c:	add	sp, sp, #16
   1ba10:	pop	{pc}		; (ldr pc, [sp], #4)
   1ba14:	.word	0x0000ac4c

0001ba18 <spss_measure_from_readstat_measure>:
   1ba18:	cmp	r0, #1
   1ba1c:	beq	1ba30 <spss_measure_from_readstat_measure+0x18>
   1ba20:	cmp	r0, #2
   1ba24:	beq	1ba30 <spss_measure_from_readstat_measure+0x18>
   1ba28:	cmp	r0, #3
   1ba2c:	movne	r0, #0
   1ba30:	bx	lr

0001ba34 <spss_measure_to_readstat_measure>:
   1ba34:	cmp	r0, #1
   1ba38:	beq	1ba4c <spss_measure_to_readstat_measure+0x18>
   1ba3c:	cmp	r0, #2
   1ba40:	beq	1ba4c <spss_measure_to_readstat_measure+0x18>
   1ba44:	cmp	r0, #3
   1ba48:	movne	r0, #0
   1ba4c:	bx	lr

0001ba50 <spss_alignment_from_readstat_alignment>:
   1ba50:	cmp	r0, #1
   1ba54:	beq	1ba70 <spss_alignment_from_readstat_alignment+0x20>
   1ba58:	cmp	r0, #2
   1ba5c:	beq	1ba74 <spss_alignment_from_readstat_alignment+0x24>
   1ba60:	cmp	r0, #3
   1ba64:	movne	r0, #0
   1ba68:	moveq	r0, #1
   1ba6c:	bx	lr
   1ba70:	mov	r0, #0
   1ba74:	bx	lr

0001ba78 <spss_alignment_to_readstat_alignment>:
   1ba78:	cmp	r0, #0
   1ba7c:	beq	1ba98 <spss_alignment_to_readstat_alignment+0x20>
   1ba80:	cmp	r0, #2
   1ba84:	beq	1ba9c <spss_alignment_to_readstat_alignment+0x24>
   1ba88:	cmp	r0, #1
   1ba8c:	movne	r0, #0
   1ba90:	moveq	r0, #3
   1ba94:	bx	lr
   1ba98:	mov	r0, #1
   1ba9c:	bx	lr

0001baa0 <spss_format_for_variable>:
   1baa0:	mov	r3, #0
   1baa4:	str	r3, [r1]
   1baa8:	str	r3, [r1, #4]
   1baac:	str	r3, [r1, #8]
   1bab0:	ldr	r3, [r0]
   1bab4:	cmp	r3, #0
   1bab8:	bne	1bae8 <spss_format_for_variable+0x48>
   1babc:	mov	r3, #1
   1bac0:	str	r3, [r1]
   1bac4:	ldr	r3, [r0, #2136]	; 0x858
   1bac8:	cmp	r3, #0
   1bacc:	strne	r3, [r1, #4]
   1bad0:	bne	1bb14 <spss_format_for_variable+0x74>
   1bad4:	ldr	r3, [r0, #1600]	; 0x640
   1bad8:	cmp	r3, #0
   1badc:	ldreq	r3, [r0, #1596]	; 0x63c
   1bae0:	str	r3, [r1, #4]
   1bae4:	b	1bb14 <spss_format_for_variable+0x74>
   1bae8:	mov	r3, #5
   1baec:	str	r3, [r1]
   1baf0:	ldr	r3, [r0, #2136]	; 0x858
   1baf4:	cmp	r3, #0
   1baf8:	moveq	r3, #8
   1bafc:	str	r3, [r1, #4]
   1bb00:	ldr	r3, [r0]
   1bb04:	sub	r3, r3, #4
   1bb08:	cmp	r3, #1
   1bb0c:	movls	r3, #2
   1bb10:	strls	r3, [r1, #8]
   1bb14:	ldrb	r3, [r0, #308]	; 0x134
   1bb18:	cmp	r3, #0
   1bb1c:	bne	1bb28 <spss_format_for_variable+0x88>
   1bb20:	mov	r0, #0
   1bb24:	bx	lr
   1bb28:	strd	r4, [sp, #-16]!
   1bb2c:	str	r6, [sp, #8]
   1bb30:	str	lr, [sp, #12]
   1bb34:	mov	r4, r1
   1bb38:	mov	r3, #0
   1bb3c:	str	r3, [r1, #8]
   1bb40:	add	r5, r0, #308	; 0x134
   1bb44:	mov	r0, r5
   1bb48:	bl	41fc <strlen@plt>
   1bb4c:	mov	r2, r4
   1bb50:	mov	r1, r0
   1bb54:	mov	r0, r5
   1bb58:	bl	3f20 <spss_parse_format@plt>
   1bb5c:	cmp	r0, #0
   1bb60:	movne	r0, #11
   1bb64:	ldrd	r4, [sp]
   1bb68:	ldr	r6, [sp, #8]
   1bb6c:	add	sp, sp, #12
   1bb70:	pop	{pc}		; (ldr pc, [sp], #4)

0001bb74 <spss_parse_format>:
   1bb74:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1bb78:	strd	r6, [sp, #8]
   1bb7c:	strd	r8, [sp, #16]
   1bb80:	strd	sl, [sp, #24]
   1bb84:	str	lr, [sp, #32]
   1bb88:	sub	sp, sp, #20
   1bb8c:	mov	r8, r2
   1bb90:	add	r3, r0, r1
   1bb94:	str	r3, [sp]
   1bb98:	cmp	r0, r3
   1bb9c:	beq	1c220 <spss_parse_format+0x6ac>
   1bba0:	mov	r3, #0
   1bba4:	str	r3, [sp, #12]
   1bba8:	mov	r2, #1
   1bbac:	ldr	r9, [pc, #1920]	; 1c334 <spss_parse_format+0x7c0>
   1bbb0:	add	r9, pc, r9
   1bbb4:	add	sl, r9, #288	; 0x120
   1bbb8:	ldr	r3, [pc, #1912]	; 1c338 <spss_parse_format+0x7c4>
   1bbbc:	add	r3, pc, r3
   1bbc0:	str	r3, [sp, #4]
   1bbc4:	ldr	fp, [pc, #1904]	; 1c33c <spss_parse_format+0x7c8>
   1bbc8:	add	fp, pc, fp
   1bbcc:	ldr	r3, [pc, #1900]	; 1c340 <spss_parse_format+0x7cc>
   1bbd0:	add	r3, pc, r3
   1bbd4:	add	r3, r3, #1568	; 0x620
   1bbd8:	add	r3, r3, #8
   1bbdc:	str	r3, [sp, #8]
   1bbe0:	b	1bcc4 <spss_parse_format+0x150>
   1bbe4:	sub	ip, r7, #1
   1bbe8:	adds	ip, r5, ip
   1bbec:	bcs	1bc38 <spss_parse_format+0xc4>
   1bbf0:	ldrb	r4, [r0]
   1bbf4:	mov	r3, r5
   1bbf8:	b	1bc04 <spss_parse_format+0x90>
   1bbfc:	cmp	ip, r3
   1bc00:	bcc	1bc38 <spss_parse_format+0xc4>
   1bc04:	sub	r1, ip, r3
   1bc08:	add	lr, r3, r1, asr #1
   1bc0c:	ldrb	r1, [r3, r1, asr #1]
   1bc10:	cmp	r4, r1
   1bc14:	subcc	ip, lr, #1
   1bc18:	bcc	1bbfc <spss_parse_format+0x88>
   1bc1c:	cmp	r4, r1
   1bc20:	bls	1bc2c <spss_parse_format+0xb8>
   1bc24:	add	r3, lr, #1
   1bc28:	b	1bbfc <spss_parse_format+0x88>
   1bc2c:	sub	lr, lr, r5
   1bc30:	add	r6, r6, lr
   1bc34:	b	1bc90 <spss_parse_format+0x11c>
   1bc38:	add	r5, r5, r7
   1bc3c:	add	r6, r6, r7
   1bc40:	b	1bce8 <spss_parse_format+0x174>
   1bc44:	cmp	r1, r2
   1bc48:	bcc	1bc8c <spss_parse_format+0x118>
   1bc4c:	sub	r3, r1, r2
   1bc50:	asr	r3, r3, #1
   1bc54:	bic	r3, r3, #1
   1bc58:	add	ip, r2, r3
   1bc5c:	ldrb	r3, [r2, r3]
   1bc60:	cmp	r3, lr
   1bc64:	subhi	r1, ip, #2
   1bc68:	bhi	1bc44 <spss_parse_format+0xd0>
   1bc6c:	ldrb	r3, [ip, #1]
   1bc70:	cmp	r3, lr
   1bc74:	bcs	1bc80 <spss_parse_format+0x10c>
   1bc78:	add	r2, ip, #2
   1bc7c:	b	1bc44 <spss_parse_format+0xd0>
   1bc80:	sub	r5, ip, r5
   1bc84:	add	r6, r6, r5, asr #1
   1bc88:	b	1bc90 <spss_parse_format+0x11c>
   1bc8c:	add	r6, r6, r4
   1bc90:	add	r6, fp, r6
   1bc94:	ldrb	r3, [r6, #936]	; 0x3a8
   1bc98:	add	r3, fp, r3
   1bc9c:	ldrb	r2, [r3, #1288]	; 0x508
   1bca0:	ldrb	ip, [r3, #1432]	; 0x598
   1bca4:	cmp	ip, #0
   1bca8:	bne	1bd18 <spss_parse_format+0x1a4>
   1bcac:	cmp	r2, #0
   1bcb0:	beq	1c218 <spss_parse_format+0x6a4>
   1bcb4:	add	r0, r0, #1
   1bcb8:	ldr	r3, [sp]
   1bcbc:	cmp	r3, r0
   1bcc0:	beq	1c22c <spss_parse_format+0x6b8>
   1bcc4:	lsl	r3, r2, #1
   1bcc8:	ldrsh	r5, [sl, r3]
   1bccc:	add	r5, r9, r5
   1bcd0:	add	r1, r9, #504	; 0x1f8
   1bcd4:	ldrsh	r6, [r1, r3]
   1bcd8:	add	r3, r9, r2
   1bcdc:	ldrb	r7, [r3, #720]	; 0x2d0
   1bce0:	cmp	r7, #0
   1bce4:	bne	1bbe4 <spss_parse_format+0x70>
   1bce8:	ldr	r3, [sp, #4]
   1bcec:	add	r2, r3, r2
   1bcf0:	ldrb	r4, [r2, #828]	; 0x33c
   1bcf4:	cmp	r4, #0
   1bcf8:	ble	1bc90 <spss_parse_format+0x11c>
   1bcfc:	add	r1, r5, r4, lsl #1
   1bd00:	sub	r1, r1, #2
   1bd04:	cmp	r5, r1
   1bd08:	bhi	1bc8c <spss_parse_format+0x118>
   1bd0c:	ldrb	lr, [r0]
   1bd10:	mov	r2, r5
   1bd14:	b	1bc4c <spss_parse_format+0xd8>
   1bd18:	ldr	r1, [sp, #8]
   1bd1c:	add	lr, r1, ip
   1bd20:	add	r3, lr, #1
   1bd24:	ldrb	r1, [r1, ip]
   1bd28:	add	r1, r1, #1
   1bd2c:	add	r1, lr, r1
   1bd30:	mov	ip, #10
   1bd34:	mov	r5, #38	; 0x26
   1bd38:	mov	r6, #37	; 0x25
   1bd3c:	mov	r7, #36	; 0x24
   1bd40:	cmp	r1, r3
   1bd44:	beq	1bcac <spss_parse_format+0x138>
   1bd48:	ldrb	lr, [r3], #1
   1bd4c:	cmp	lr, #40	; 0x28
   1bd50:	addls	pc, pc, lr, lsl #2
   1bd54:	b	1bd40 <spss_parse_format+0x1cc>
   1bd58:	b	1bdfc <spss_parse_format+0x288>
   1bd5c:	b	1be08 <spss_parse_format+0x294>
   1bd60:	b	1be28 <spss_parse_format+0x2b4>
   1bd64:	b	1bd40 <spss_parse_format+0x1cc>
   1bd68:	b	1be34 <spss_parse_format+0x2c0>
   1bd6c:	b	1be40 <spss_parse_format+0x2cc>
   1bd70:	b	1be4c <spss_parse_format+0x2d8>
   1bd74:	b	1be58 <spss_parse_format+0x2e4>
   1bd78:	b	1be64 <spss_parse_format+0x2f0>
   1bd7c:	b	1be70 <spss_parse_format+0x2fc>
   1bd80:	b	1be7c <spss_parse_format+0x308>
   1bd84:	b	1be88 <spss_parse_format+0x314>
   1bd88:	b	1be94 <spss_parse_format+0x320>
   1bd8c:	b	1bea0 <spss_parse_format+0x32c>
   1bd90:	b	1bea8 <spss_parse_format+0x334>
   1bd94:	b	1beb4 <spss_parse_format+0x340>
   1bd98:	b	1bec0 <spss_parse_format+0x34c>
   1bd9c:	b	1becc <spss_parse_format+0x358>
   1bda0:	b	1bed8 <spss_parse_format+0x364>
   1bda4:	b	1bee4 <spss_parse_format+0x370>
   1bda8:	b	1bef8 <spss_parse_format+0x384>
   1bdac:	b	1bf04 <spss_parse_format+0x390>
   1bdb0:	b	1bf18 <spss_parse_format+0x3a4>
   1bdb4:	b	1bf2c <spss_parse_format+0x3b8>
   1bdb8:	b	1bf3c <spss_parse_format+0x3c8>
   1bdbc:	b	1bf48 <spss_parse_format+0x3d4>
   1bdc0:	b	1bf5c <spss_parse_format+0x3e8>
   1bdc4:	b	1bf68 <spss_parse_format+0x3f4>
   1bdc8:	b	1bf74 <spss_parse_format+0x400>
   1bdcc:	b	1bf80 <spss_parse_format+0x40c>
   1bdd0:	b	1bf8c <spss_parse_format+0x418>
   1bdd4:	b	1bf98 <spss_parse_format+0x424>
   1bdd8:	b	1bfa8 <spss_parse_format+0x434>
   1bddc:	b	1bfb4 <spss_parse_format+0x440>
   1bde0:	b	1bfc0 <spss_parse_format+0x44c>
   1bde4:	b	1bfcc <spss_parse_format+0x458>
   1bde8:	b	1bfd8 <spss_parse_format+0x464>
   1bdec:	b	1bfe4 <spss_parse_format+0x470>
   1bdf0:	b	1bfec <spss_parse_format+0x478>
   1bdf4:	b	1bff4 <spss_parse_format+0x480>
   1bdf8:	b	1c000 <spss_parse_format+0x48c>
   1bdfc:	mov	lr, #0
   1be00:	str	lr, [sp, #12]
   1be04:	b	1bd40 <spss_parse_format+0x1cc>
   1be08:	ldr	lr, [sp, #12]
   1be0c:	add	lr, lr, lr, lsl #2
   1be10:	mov	r4, lr
   1be14:	ldrb	lr, [r0]
   1be18:	sub	lr, lr, #48	; 0x30
   1be1c:	add	lr, lr, r4, lsl #1
   1be20:	str	lr, [sp, #12]
   1be24:	b	1bd40 <spss_parse_format+0x1cc>
   1be28:	ldr	lr, [sp, #12]
   1be2c:	str	lr, [r8, #4]
   1be30:	b	1bd40 <spss_parse_format+0x1cc>
   1be34:	mov	lr, #1
   1be38:	str	lr, [r8]
   1be3c:	b	1bd40 <spss_parse_format+0x1cc>
   1be40:	mov	lr, #2
   1be44:	str	lr, [r8]
   1be48:	b	1bd40 <spss_parse_format+0x1cc>
   1be4c:	mov	lr, #3
   1be50:	str	lr, [r8]
   1be54:	b	1bd40 <spss_parse_format+0x1cc>
   1be58:	mov	lr, #4
   1be5c:	str	lr, [r8]
   1be60:	b	1bd40 <spss_parse_format+0x1cc>
   1be64:	mov	lr, #5
   1be68:	str	lr, [r8]
   1be6c:	b	1bd40 <spss_parse_format+0x1cc>
   1be70:	mov	lr, #6
   1be74:	str	lr, [r8]
   1be78:	b	1bd40 <spss_parse_format+0x1cc>
   1be7c:	mov	lr, #7
   1be80:	str	lr, [r8]
   1be84:	b	1bd40 <spss_parse_format+0x1cc>
   1be88:	mov	lr, #8
   1be8c:	str	lr, [r8]
   1be90:	b	1bd40 <spss_parse_format+0x1cc>
   1be94:	mov	lr, #9
   1be98:	str	lr, [r8]
   1be9c:	b	1bd40 <spss_parse_format+0x1cc>
   1bea0:	str	ip, [r8]
   1bea4:	b	1bd40 <spss_parse_format+0x1cc>
   1bea8:	mov	lr, #11
   1beac:	str	lr, [r8]
   1beb0:	b	1bd40 <spss_parse_format+0x1cc>
   1beb4:	mov	lr, #12
   1beb8:	str	lr, [r8]
   1bebc:	b	1bd40 <spss_parse_format+0x1cc>
   1bec0:	mov	lr, #15
   1bec4:	str	lr, [r8]
   1bec8:	b	1bd40 <spss_parse_format+0x1cc>
   1becc:	mov	lr, #16
   1bed0:	str	lr, [r8]
   1bed4:	b	1bd40 <spss_parse_format+0x1cc>
   1bed8:	mov	lr, #17
   1bedc:	str	lr, [r8]
   1bee0:	b	1bd40 <spss_parse_format+0x1cc>
   1bee4:	mov	lr, #20
   1bee8:	str	lr, [r8]
   1beec:	mov	lr, #11
   1bef0:	str	lr, [r8, #4]
   1bef4:	b	1bd40 <spss_parse_format+0x1cc>
   1bef8:	mov	lr, #21
   1befc:	str	lr, [r8]
   1bf00:	b	1bd40 <spss_parse_format+0x1cc>
   1bf04:	mov	lr, #22
   1bf08:	str	lr, [r8]
   1bf0c:	mov	lr, #20
   1bf10:	str	lr, [r8, #4]
   1bf14:	b	1bd40 <spss_parse_format+0x1cc>
   1bf18:	mov	lr, #41	; 0x29
   1bf1c:	str	lr, [r8]
   1bf20:	mov	lr, #19
   1bf24:	str	lr, [r8, #4]
   1bf28:	b	1bd40 <spss_parse_format+0x1cc>
   1bf2c:	mov	lr, #23
   1bf30:	str	lr, [r8]
   1bf34:	str	ip, [r8, #4]
   1bf38:	b	1bd40 <spss_parse_format+0x1cc>
   1bf3c:	mov	lr, #24
   1bf40:	str	lr, [r8]
   1bf44:	b	1bd40 <spss_parse_format+0x1cc>
   1bf48:	mov	lr, #25
   1bf4c:	str	lr, [r8]
   1bf50:	mov	lr, #23
   1bf54:	str	lr, [r8, #4]
   1bf58:	b	1bd40 <spss_parse_format+0x1cc>
   1bf5c:	mov	lr, #40	; 0x28
   1bf60:	str	lr, [r8]
   1bf64:	b	1bd40 <spss_parse_format+0x1cc>
   1bf68:	mov	lr, #26
   1bf6c:	str	lr, [r8]
   1bf70:	b	1bd40 <spss_parse_format+0x1cc>
   1bf74:	mov	lr, #27
   1bf78:	str	lr, [r8]
   1bf7c:	b	1bd40 <spss_parse_format+0x1cc>
   1bf80:	mov	lr, #28
   1bf84:	str	lr, [r8]
   1bf88:	b	1bd40 <spss_parse_format+0x1cc>
   1bf8c:	mov	lr, #29
   1bf90:	str	lr, [r8]
   1bf94:	b	1bd40 <spss_parse_format+0x1cc>
   1bf98:	mov	lr, #30
   1bf9c:	str	lr, [r8]
   1bfa0:	str	ip, [r8, #4]
   1bfa4:	b	1bd40 <spss_parse_format+0x1cc>
   1bfa8:	mov	lr, #31
   1bfac:	str	lr, [r8]
   1bfb0:	b	1bd40 <spss_parse_format+0x1cc>
   1bfb4:	mov	lr, #32
   1bfb8:	str	lr, [r8]
   1bfbc:	b	1bd40 <spss_parse_format+0x1cc>
   1bfc0:	mov	lr, #33	; 0x21
   1bfc4:	str	lr, [r8]
   1bfc8:	b	1bd40 <spss_parse_format+0x1cc>
   1bfcc:	mov	lr, #34	; 0x22
   1bfd0:	str	lr, [r8]
   1bfd4:	b	1bd40 <spss_parse_format+0x1cc>
   1bfd8:	mov	lr, #35	; 0x23
   1bfdc:	str	lr, [r8]
   1bfe0:	b	1bd40 <spss_parse_format+0x1cc>
   1bfe4:	str	r7, [r8]
   1bfe8:	b	1bd40 <spss_parse_format+0x1cc>
   1bfec:	str	r6, [r8]
   1bff0:	b	1bd40 <spss_parse_format+0x1cc>
   1bff4:	str	r5, [r8]
   1bff8:	str	ip, [r8, #4]
   1bffc:	b	1bd40 <spss_parse_format+0x1cc>
   1c000:	mov	lr, #39	; 0x27
   1c004:	str	lr, [r8]
   1c008:	str	ip, [r8, #4]
   1c00c:	b	1bd40 <spss_parse_format+0x1cc>
   1c010:	ldr	r3, [sp, #12]
   1c014:	str	r3, [r8, #4]
   1c018:	b	1c27c <spss_parse_format+0x708>
   1c01c:	ldr	r3, [sp, #12]
   1c020:	str	r3, [r8, #8]
   1c024:	b	1c27c <spss_parse_format+0x708>
   1c028:	mov	r3, #1
   1c02c:	str	r3, [r8]
   1c030:	b	1c27c <spss_parse_format+0x708>
   1c034:	mov	r3, #2
   1c038:	str	r3, [r8]
   1c03c:	b	1c27c <spss_parse_format+0x708>
   1c040:	mov	r3, #3
   1c044:	str	r3, [r8]
   1c048:	b	1c27c <spss_parse_format+0x708>
   1c04c:	mov	r3, #4
   1c050:	str	r3, [r8]
   1c054:	b	1c27c <spss_parse_format+0x708>
   1c058:	mov	r3, #5
   1c05c:	str	r3, [r8]
   1c060:	b	1c27c <spss_parse_format+0x708>
   1c064:	mov	r3, #6
   1c068:	str	r3, [r8]
   1c06c:	b	1c27c <spss_parse_format+0x708>
   1c070:	mov	r3, #7
   1c074:	str	r3, [r8]
   1c078:	b	1c27c <spss_parse_format+0x708>
   1c07c:	mov	r3, #8
   1c080:	str	r3, [r8]
   1c084:	b	1c27c <spss_parse_format+0x708>
   1c088:	mov	r3, #9
   1c08c:	str	r3, [r8]
   1c090:	b	1c27c <spss_parse_format+0x708>
   1c094:	str	ip, [r8]
   1c098:	b	1c27c <spss_parse_format+0x708>
   1c09c:	mov	r3, #11
   1c0a0:	str	r3, [r8]
   1c0a4:	b	1c27c <spss_parse_format+0x708>
   1c0a8:	mov	r3, #12
   1c0ac:	str	r3, [r8]
   1c0b0:	b	1c27c <spss_parse_format+0x708>
   1c0b4:	mov	r3, #15
   1c0b8:	str	r3, [r8]
   1c0bc:	b	1c27c <spss_parse_format+0x708>
   1c0c0:	mov	r3, #16
   1c0c4:	str	r3, [r8]
   1c0c8:	b	1c27c <spss_parse_format+0x708>
   1c0cc:	mov	r3, #17
   1c0d0:	str	r3, [r8]
   1c0d4:	b	1c27c <spss_parse_format+0x708>
   1c0d8:	mov	r3, #20
   1c0dc:	str	r3, [r8]
   1c0e0:	mov	r3, #11
   1c0e4:	str	r3, [r8, #4]
   1c0e8:	b	1c27c <spss_parse_format+0x708>
   1c0ec:	mov	r3, #21
   1c0f0:	str	r3, [r8]
   1c0f4:	b	1c27c <spss_parse_format+0x708>
   1c0f8:	mov	r3, #22
   1c0fc:	str	r3, [r8]
   1c100:	mov	r3, #20
   1c104:	str	r3, [r8, #4]
   1c108:	b	1c27c <spss_parse_format+0x708>
   1c10c:	mov	r3, #41	; 0x29
   1c110:	str	r3, [r8]
   1c114:	mov	r3, #19
   1c118:	str	r3, [r8, #4]
   1c11c:	b	1c27c <spss_parse_format+0x708>
   1c120:	mov	r3, #23
   1c124:	str	r3, [r8]
   1c128:	str	ip, [r8, #4]
   1c12c:	b	1c27c <spss_parse_format+0x708>
   1c130:	mov	r3, #24
   1c134:	str	r3, [r8]
   1c138:	b	1c27c <spss_parse_format+0x708>
   1c13c:	mov	r3, #25
   1c140:	str	r3, [r8]
   1c144:	mov	r3, #23
   1c148:	str	r3, [r8, #4]
   1c14c:	b	1c27c <spss_parse_format+0x708>
   1c150:	mov	r3, #40	; 0x28
   1c154:	str	r3, [r8]
   1c158:	b	1c27c <spss_parse_format+0x708>
   1c15c:	mov	r3, #26
   1c160:	str	r3, [r8]
   1c164:	b	1c27c <spss_parse_format+0x708>
   1c168:	mov	r3, #27
   1c16c:	str	r3, [r8]
   1c170:	b	1c27c <spss_parse_format+0x708>
   1c174:	mov	r3, #28
   1c178:	str	r3, [r8]
   1c17c:	b	1c27c <spss_parse_format+0x708>
   1c180:	mov	r3, #29
   1c184:	str	r3, [r8]
   1c188:	b	1c27c <spss_parse_format+0x708>
   1c18c:	mov	r3, #30
   1c190:	str	r3, [r8]
   1c194:	str	ip, [r8, #4]
   1c198:	b	1c27c <spss_parse_format+0x708>
   1c19c:	mov	r3, #31
   1c1a0:	str	r3, [r8]
   1c1a4:	b	1c27c <spss_parse_format+0x708>
   1c1a8:	str	sl, [r8]
   1c1ac:	b	1c27c <spss_parse_format+0x708>
   1c1b0:	str	lr, [r8]
   1c1b4:	b	1c27c <spss_parse_format+0x708>
   1c1b8:	str	r4, [r8]
   1c1bc:	b	1c27c <spss_parse_format+0x708>
   1c1c0:	str	r5, [r8]
   1c1c4:	b	1c27c <spss_parse_format+0x708>
   1c1c8:	str	r6, [r8]
   1c1cc:	b	1c27c <spss_parse_format+0x708>
   1c1d0:	str	r7, [r8]
   1c1d4:	b	1c27c <spss_parse_format+0x708>
   1c1d8:	str	fp, [r8]
   1c1dc:	str	ip, [r8, #4]
   1c1e0:	b	1c27c <spss_parse_format+0x708>
   1c1e4:	str	r9, [r8]
   1c1e8:	str	ip, [r8, #4]
   1c1ec:	b	1c27c <spss_parse_format+0x708>
   1c1f0:	cmp	r2, #67	; 0x43
   1c1f4:	movgt	r0, #0
   1c1f8:	movle	r0, #5
   1c1fc:	add	sp, sp, #20
   1c200:	ldrd	r4, [sp]
   1c204:	ldrd	r6, [sp, #8]
   1c208:	ldrd	r8, [sp, #16]
   1c20c:	ldrd	sl, [sp, #24]
   1c210:	add	sp, sp, #32
   1c214:	pop	{pc}		; (ldr pc, [sp], #4)
   1c218:	mov	r0, #5
   1c21c:	b	1c1fc <spss_parse_format+0x688>
   1c220:	mov	r3, #0
   1c224:	str	r3, [sp, #12]
   1c228:	mov	r2, #1
   1c22c:	ldr	r1, [pc, #272]	; 1c344 <spss_parse_format+0x7d0>
   1c230:	add	r1, pc, r1
   1c234:	add	r3, r1, #1568	; 0x620
   1c238:	add	r3, r3, #8
   1c23c:	add	r1, r1, r2
   1c240:	ldrb	ip, [r1, #1808]	; 0x710
   1c244:	add	r0, r3, ip
   1c248:	add	r1, r0, #1
   1c24c:	ldrb	r3, [r3, ip]
   1c250:	add	r3, r3, #1
   1c254:	add	r0, r0, r3
   1c258:	mov	r9, #39	; 0x27
   1c25c:	mov	ip, #10
   1c260:	mov	fp, #38	; 0x26
   1c264:	mov	r7, #37	; 0x25
   1c268:	mov	r6, #36	; 0x24
   1c26c:	mov	r5, #35	; 0x23
   1c270:	mov	r4, #34	; 0x22
   1c274:	mov	lr, #33	; 0x21
   1c278:	mov	sl, #32
   1c27c:	cmp	r0, r1
   1c280:	beq	1c1f0 <spss_parse_format+0x67c>
   1c284:	ldrb	r3, [r1], #1
   1c288:	sub	r3, r3, #2
   1c28c:	cmp	r3, #38	; 0x26
   1c290:	addls	pc, pc, r3, lsl #2
   1c294:	b	1c27c <spss_parse_format+0x708>
   1c298:	b	1c010 <spss_parse_format+0x49c>
   1c29c:	b	1c01c <spss_parse_format+0x4a8>
   1c2a0:	b	1c028 <spss_parse_format+0x4b4>
   1c2a4:	b	1c034 <spss_parse_format+0x4c0>
   1c2a8:	b	1c040 <spss_parse_format+0x4cc>
   1c2ac:	b	1c04c <spss_parse_format+0x4d8>
   1c2b0:	b	1c058 <spss_parse_format+0x4e4>
   1c2b4:	b	1c064 <spss_parse_format+0x4f0>
   1c2b8:	b	1c070 <spss_parse_format+0x4fc>
   1c2bc:	b	1c07c <spss_parse_format+0x508>
   1c2c0:	b	1c088 <spss_parse_format+0x514>
   1c2c4:	b	1c094 <spss_parse_format+0x520>
   1c2c8:	b	1c09c <spss_parse_format+0x528>
   1c2cc:	b	1c0a8 <spss_parse_format+0x534>
   1c2d0:	b	1c0b4 <spss_parse_format+0x540>
   1c2d4:	b	1c0c0 <spss_parse_format+0x54c>
   1c2d8:	b	1c0cc <spss_parse_format+0x558>
   1c2dc:	b	1c0d8 <spss_parse_format+0x564>
   1c2e0:	b	1c0ec <spss_parse_format+0x578>
   1c2e4:	b	1c0f8 <spss_parse_format+0x584>
   1c2e8:	b	1c10c <spss_parse_format+0x598>
   1c2ec:	b	1c120 <spss_parse_format+0x5ac>
   1c2f0:	b	1c130 <spss_parse_format+0x5bc>
   1c2f4:	b	1c13c <spss_parse_format+0x5c8>
   1c2f8:	b	1c150 <spss_parse_format+0x5dc>
   1c2fc:	b	1c15c <spss_parse_format+0x5e8>
   1c300:	b	1c168 <spss_parse_format+0x5f4>
   1c304:	b	1c174 <spss_parse_format+0x600>
   1c308:	b	1c180 <spss_parse_format+0x60c>
   1c30c:	b	1c18c <spss_parse_format+0x618>
   1c310:	b	1c19c <spss_parse_format+0x628>
   1c314:	b	1c1a8 <spss_parse_format+0x634>
   1c318:	b	1c1b0 <spss_parse_format+0x63c>
   1c31c:	b	1c1b8 <spss_parse_format+0x644>
   1c320:	b	1c1c0 <spss_parse_format+0x64c>
   1c324:	b	1c1c8 <spss_parse_format+0x654>
   1c328:	b	1c1d0 <spss_parse_format+0x65c>
   1c32c:	b	1c1d8 <spss_parse_format+0x664>
   1c330:	b	1c1e4 <spss_parse_format+0x670>
   1c334:	.word	0x0000bfb4
   1c338:	.word	0x0000bfa8
   1c33c:	.word	0x0000bf9c
   1c340:	.word	0x0000bf94
   1c344:	.word	0x0000b934

0001c348 <dta_ctx_alloc>:
   1c348:	str	r4, [sp, #-8]!
   1c34c:	str	lr, [sp, #4]
   1c350:	mov	r4, r0
   1c354:	mov	r1, #544	; 0x220
   1c358:	mov	r0, #1
   1c35c:	bl	3d4c <calloc@plt>
   1c360:	cmp	r0, #0
   1c364:	beq	1c374 <dta_ctx_alloc+0x2c>
   1c368:	str	r4, [r0, #280]	; 0x118
   1c36c:	mov	r3, #0
   1c370:	str	r3, [r0, #284]	; 0x11c
   1c374:	ldr	r4, [sp]
   1c378:	add	sp, sp, #4
   1c37c:	pop	{pc}		; (ldr pc, [sp], #4)

0001c380 <dta_ctx_init>:
   1c380:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1c384:	strd	r6, [sp, #8]
   1c388:	strd	r8, [sp, #16]
   1c38c:	str	sl, [sp, #24]
   1c390:	str	lr, [sp, #28]
   1c394:	mov	r9, r3
   1c398:	ldrb	r7, [sp, #32]
   1c39c:	ldrb	r5, [sp, #36]	; 0x24
   1c3a0:	sub	r3, r5, #104	; 0x68
   1c3a4:	uxtb	r3, r3
   1c3a8:	cmp	r3, #15
   1c3ac:	movhi	r0, #24
   1c3b0:	bhi	1c79c <dta_ctx_init+0x41c>
   1c3b4:	mov	r8, r2
   1c3b8:	mov	r6, r1
   1c3bc:	mov	r4, r0
   1c3c0:	bl	3ea8 <machine_is_little_endian@plt>
   1c3c4:	cmp	r0, #0
   1c3c8:	moveq	r3, #1
   1c3cc:	movne	r3, #2
   1c3d0:	subs	r3, r7, r3
   1c3d4:	movne	r3, #1
   1c3d8:	ldrb	r2, [r4, #192]	; 0xc0
   1c3dc:	bfi	r2, r3, #0, #1
   1c3e0:	strb	r2, [r4, #192]	; 0xc0
   1c3e4:	str	r5, [r4, #144]	; 0x90
   1c3e8:	cmp	r7, #2
   1c3ec:	moveq	r3, #1
   1c3f0:	movne	r3, #2
   1c3f4:	str	r3, [r4, #232]	; 0xe8
   1c3f8:	str	r6, [r4, #148]	; 0x94
   1c3fc:	strd	r8, [r4, #152]	; 0x98
   1c400:	cmp	r6, #0
   1c404:	bne	1c4b8 <dta_ctx_init+0x138>
   1c408:	ldrb	r3, [r4, #192]	; 0xc0
   1c40c:	bfc	r3, #1, #1
   1c410:	strb	r3, [r4, #192]	; 0xc0
   1c414:	cmp	r5, #104	; 0x68
   1c418:	movls	r3, #7
   1c41c:	strls	r3, [r4, #80]	; 0x50
   1c420:	bls	1c654 <dta_ctx_init+0x2d4>
   1c424:	cmp	r5, #113	; 0x71
   1c428:	bhi	1c4d8 <dta_ctx_init+0x158>
   1c42c:	mov	r3, #12
   1c430:	str	r3, [r4, #80]	; 0x50
   1c434:	cmp	r5, #110	; 0x6e
   1c438:	bls	1c654 <dta_ctx_init+0x2d4>
   1c43c:	mov	r3, #111	; 0x6f
   1c440:	strb	r3, [r4, #20]
   1c444:	cmp	r5, #109	; 0x6d
   1c448:	bhi	1c734 <dta_ctx_init+0x3b4>
   1c44c:	mov	r3, #2
   1c450:	str	r3, [r4, #92]	; 0x5c
   1c454:	mov	r3, #9
   1c458:	str	r3, [r4, #84]	; 0x54
   1c45c:	str	r3, [r4, #76]	; 0x4c
   1c460:	str	r3, [r4, #96]	; 0x60
   1c464:	cmp	r5, #107	; 0x6b
   1c468:	movls	r3, #32
   1c46c:	strls	r3, [r4, #88]	; 0x58
   1c470:	strls	r3, [r4, #4]
   1c474:	bhi	1c51c <dta_ctx_init+0x19c>
   1c478:	mov	r3, #18
   1c47c:	str	r3, [r4, #16]
   1c480:	mov	r3, #4
   1c484:	str	r3, [r4, #100]	; 0x64
   1c488:	mov	r3, #33	; 0x21
   1c48c:	str	r3, [r4, #104]	; 0x68
   1c490:	mov	r3, #3
   1c494:	str	r3, [r4, #108]	; 0x6c
   1c498:	mov	r3, #1
   1c49c:	str	r3, [r4, #24]
   1c4a0:	ldrb	r3, [r4, #192]	; 0xc0
   1c4a4:	bfc	r3, #2, #1
   1c4a8:	strb	r3, [r4, #192]	; 0xc0
   1c4ac:	cmp	r5, #112	; 0x70
   1c4b0:	bls	1c6b8 <dta_ctx_init+0x338>
   1c4b4:	b	1c5c8 <dta_ctx_init+0x248>
   1c4b8:	mov	r1, #4
   1c4bc:	mov	r0, r6
   1c4c0:	bl	3fbc <readstat_calloc@plt>
   1c4c4:	str	r0, [r4, #228]	; 0xe4
   1c4c8:	cmp	r0, #0
   1c4cc:	bne	1c408 <dta_ctx_init+0x88>
   1c4d0:	mov	r0, #3
   1c4d4:	b	1c79c <dta_ctx_init+0x41c>
   1c4d8:	cmp	r5, #117	; 0x75
   1c4dc:	bhi	1c548 <dta_ctx_init+0x1c8>
   1c4e0:	mov	r3, #49	; 0x31
   1c4e4:	str	r3, [r4, #80]	; 0x50
   1c4e8:	bne	1c43c <dta_ctx_init+0xbc>
   1c4ec:	mov	r3, #117	; 0x75
   1c4f0:	strb	r3, [r4, #20]
   1c4f4:	mov	r3, #1
   1c4f8:	str	r3, [r4, #8]
   1c4fc:	mov	r3, #4
   1c500:	str	r3, [r4, #112]	; 0x70
   1c504:	str	r3, [r4, #116]	; 0x74
   1c508:	str	r3, [r4, #92]	; 0x5c
   1c50c:	mov	r3, #33	; 0x21
   1c510:	str	r3, [r4, #84]	; 0x54
   1c514:	str	r3, [r4, #76]	; 0x4c
   1c518:	str	r3, [r4, #96]	; 0x60
   1c51c:	mov	r3, #81	; 0x51
   1c520:	str	r3, [r4, #88]	; 0x58
   1c524:	str	r3, [r4, #4]
   1c528:	mov	r3, #18
   1c52c:	str	r3, [r4, #16]
   1c530:	mov	r3, #4
   1c534:	str	r3, [r4, #100]	; 0x64
   1c538:	cmp	r5, #118	; 0x76
   1c53c:	movcc	r3, #33	; 0x21
   1c540:	movcs	r3, #129	; 0x81
   1c544:	b	1c5a0 <dta_ctx_init+0x220>
   1c548:	mov	r3, #57	; 0x39
   1c54c:	str	r3, [r4, #80]	; 0x50
   1c550:	mov	r3, #117	; 0x75
   1c554:	strb	r3, [r4, #20]
   1c558:	mov	r3, #2
   1c55c:	str	r3, [r4, #8]
   1c560:	str	r3, [r4, #112]	; 0x70
   1c564:	mov	r3, #6
   1c568:	str	r3, [r4, #116]	; 0x74
   1c56c:	mov	r3, #4
   1c570:	str	r3, [r4, #92]	; 0x5c
   1c574:	mov	r3, #129	; 0x81
   1c578:	str	r3, [r4, #84]	; 0x54
   1c57c:	str	r3, [r4, #76]	; 0x4c
   1c580:	str	r3, [r4, #96]	; 0x60
   1c584:	movw	r2, #321	; 0x141
   1c588:	str	r2, [r4, #88]	; 0x58
   1c58c:	str	r2, [r4, #4]
   1c590:	mov	r2, #18
   1c594:	str	r2, [r4, #16]
   1c598:	mov	r2, #4
   1c59c:	str	r2, [r4, #100]	; 0x64
   1c5a0:	str	r3, [r4, #104]	; 0x68
   1c5a4:	mov	r3, #3
   1c5a8:	str	r3, [r4, #108]	; 0x6c
   1c5ac:	cmp	r5, #116	; 0x74
   1c5b0:	bls	1c498 <dta_ctx_init+0x118>
   1c5b4:	mov	r3, #2
   1c5b8:	str	r3, [r4, #24]
   1c5bc:	ldrb	r3, [r4, #192]	; 0xc0
   1c5c0:	orr	r3, r3, #4
   1c5c4:	strb	r3, [r4, #192]	; 0xc0
   1c5c8:	mov	r3, #100	; 0x64
   1c5cc:	strb	r3, [r4, #193]	; 0xc1
   1c5d0:	movw	r3, #32740	; 0x7fe4
   1c5d4:	strh	r3, [r4, #194]	; 0xc2
   1c5d8:	mvn	r3, #-2147483621	; 0x8000001b
   1c5dc:	str	r3, [r4, #196]	; 0xc4
   1c5e0:	mvn	r3, #-2130706432	; 0x81000000
   1c5e4:	str	r3, [r4, #200]	; 0xc8
   1c5e8:	mvn	r2, #0
   1c5ec:	movw	r3, #65535	; 0xffff
   1c5f0:	movt	r3, #32735	; 0x7fdf
   1c5f4:	strd	r2, [r4, #208]	; 0xd0
   1c5f8:	ldrb	r3, [r4, #192]	; 0xc0
   1c5fc:	orr	r3, r3, #8
   1c600:	strb	r3, [r4, #192]	; 0xc0
   1c604:	ldr	r3, [sp, #44]	; 0x2c
   1c608:	cmp	r3, #0
   1c60c:	beq	1c71c <dta_ctx_init+0x39c>
   1c610:	ldr	r3, [sp, #40]	; 0x28
   1c614:	cmp	r3, #0
   1c618:	bne	1c700 <dta_ctx_init+0x380>
   1c61c:	cmp	r5, #117	; 0x75
   1c620:	bls	1c748 <dta_ctx_init+0x3c8>
   1c624:	ldr	r1, [pc, #592]	; 1c87c <dta_ctx_init+0x4fc>
   1c628:	add	r1, pc, r1
   1c62c:	ldr	r0, [sp, #44]	; 0x2c
   1c630:	bl	3df4 <strcmp@plt>
   1c634:	cmp	r0, #0
   1c638:	beq	1c710 <dta_ctx_init+0x390>
   1c63c:	ldr	r1, [pc, #572]	; 1c880 <dta_ctx_init+0x500>
   1c640:	add	r1, pc, r1
   1c644:	ldr	r0, [sp, #44]	; 0x2c
   1c648:	bl	4130 <iconv_open@plt>
   1c64c:	str	r0, [r4, #236]	; 0xec
   1c650:	b	1c710 <dta_ctx_init+0x390>
   1c654:	mov	r3, #0
   1c658:	strb	r3, [r4, #20]
   1c65c:	cmp	r5, #104	; 0x68
   1c660:	bhi	1c444 <dta_ctx_init+0xc4>
   1c664:	str	r3, [r4, #92]	; 0x5c
   1c668:	mov	r3, #9
   1c66c:	str	r3, [r4, #84]	; 0x54
   1c670:	str	r3, [r4, #76]	; 0x4c
   1c674:	str	r3, [r4, #96]	; 0x60
   1c678:	mov	r3, #32
   1c67c:	str	r3, [r4, #88]	; 0x58
   1c680:	str	r3, [r4, #4]
   1c684:	bhi	1c478 <dta_ctx_init+0xf8>
   1c688:	mov	r2, #0
   1c68c:	str	r2, [r4, #16]
   1c690:	mov	r3, #2
   1c694:	str	r3, [r4, #100]	; 0x64
   1c698:	mov	r1, #12
   1c69c:	str	r1, [r4, #104]	; 0x68
   1c6a0:	str	r3, [r4, #108]	; 0x6c
   1c6a4:	mov	r3, #1
   1c6a8:	str	r3, [r4, #24]
   1c6ac:	ldrb	r3, [r4, #192]	; 0xc0
   1c6b0:	bfi	r3, r2, #2, #1
   1c6b4:	strb	r3, [r4, #192]	; 0xc0
   1c6b8:	mov	r3, #126	; 0x7e
   1c6bc:	strb	r3, [r4, #193]	; 0xc1
   1c6c0:	movw	r3, #32766	; 0x7ffe
   1c6c4:	strh	r3, [r4, #194]	; 0xc2
   1c6c8:	mvn	r3, #-2147483647	; 0x80000001
   1c6cc:	str	r3, [r4, #196]	; 0xc4
   1c6d0:	mvn	r3, #-2130706432	; 0x81000000
   1c6d4:	str	r3, [r4, #200]	; 0xc8
   1c6d8:	mvn	r2, #0
   1c6dc:	movw	r3, #65535	; 0xffff
   1c6e0:	movt	r3, #32735	; 0x7fdf
   1c6e4:	strd	r2, [r4, #208]	; 0xd0
   1c6e8:	ldr	r3, [sp, #44]	; 0x2c
   1c6ec:	cmp	r3, #0
   1c6f0:	beq	1c764 <dta_ctx_init+0x3e4>
   1c6f4:	ldr	r3, [sp, #40]	; 0x28
   1c6f8:	cmp	r3, #0
   1c6fc:	beq	1c748 <dta_ctx_init+0x3c8>
   1c700:	ldr	r1, [sp, #40]	; 0x28
   1c704:	ldr	r0, [sp, #44]	; 0x2c
   1c708:	bl	4130 <iconv_open@plt>
   1c70c:	str	r0, [r4, #236]	; 0xec
   1c710:	ldr	r3, [r4, #236]	; 0xec
   1c714:	cmn	r3, #1
   1c718:	beq	1c7b4 <dta_ctx_init+0x434>
   1c71c:	cmp	r5, #118	; 0x76
   1c720:	bls	1c764 <dta_ctx_init+0x3e4>
   1c724:	ldr	r0, [r4, #148]	; 0x94
   1c728:	add	r0, r0, #1
   1c72c:	lsl	r0, r0, #2
   1c730:	b	1c770 <dta_ctx_init+0x3f0>
   1c734:	mov	r3, #4
   1c738:	str	r3, [r4, #92]	; 0x5c
   1c73c:	cmp	r5, #117	; 0x75
   1c740:	bls	1c50c <dta_ctx_init+0x18c>
   1c744:	b	1c574 <dta_ctx_init+0x1f4>
   1c748:	ldr	r1, [pc, #308]	; 1c884 <dta_ctx_init+0x504>
   1c74c:	add	r1, pc, r1
   1c750:	ldr	r0, [sp, #44]	; 0x2c
   1c754:	bl	4130 <iconv_open@plt>
   1c758:	str	r0, [r4, #236]	; 0xec
   1c75c:	cmn	r0, #1
   1c760:	beq	1c7b4 <dta_ctx_init+0x434>
   1c764:	ldr	r0, [r4, #148]	; 0x94
   1c768:	add	r0, r0, #1
   1c76c:	lsl	r0, r0, #1
   1c770:	str	r0, [r4, #48]	; 0x30
   1c774:	bl	422c <readstat_malloc@plt>
   1c778:	str	r0, [r4, #44]	; 0x2c
   1c77c:	cmp	r0, #0
   1c780:	beq	1c874 <dta_ctx_init+0x4f4>
   1c784:	ldr	r3, [r4, #148]	; 0x94
   1c788:	cmp	r3, #0
   1c78c:	bgt	1c7c4 <dta_ctx_init+0x444>
   1c790:	mov	r3, #1
   1c794:	str	r3, [r4, #284]	; 0x11c
   1c798:	mov	r0, #0
   1c79c:	ldrd	r4, [sp]
   1c7a0:	ldrd	r6, [sp, #8]
   1c7a4:	ldrd	r8, [sp, #16]
   1c7a8:	ldr	sl, [sp, #24]
   1c7ac:	add	sp, sp, #28
   1c7b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1c7b4:	mov	r3, #0
   1c7b8:	str	r3, [r4, #236]	; 0xec
   1c7bc:	mov	r0, #7
   1c7c0:	b	1c79c <dta_ctx_init+0x41c>
   1c7c4:	lsl	r0, r3, #1
   1c7c8:	str	r0, [r4, #32]
   1c7cc:	ldr	r2, [r4, #76]	; 0x4c
   1c7d0:	mul	r2, r3, r2
   1c7d4:	str	r2, [r4, #40]	; 0x28
   1c7d8:	ldr	r2, [r4, #80]	; 0x50
   1c7dc:	mul	r2, r3, r2
   1c7e0:	str	r2, [r4, #56]	; 0x38
   1c7e4:	ldr	r2, [r4, #84]	; 0x54
   1c7e8:	mul	r2, r3, r2
   1c7ec:	str	r2, [r4, #64]	; 0x40
   1c7f0:	ldr	r2, [r4, #88]	; 0x58
   1c7f4:	mul	r3, r3, r2
   1c7f8:	str	r3, [r4, #72]	; 0x48
   1c7fc:	bl	422c <readstat_malloc@plt>
   1c800:	str	r0, [r4, #28]
   1c804:	cmp	r0, #0
   1c808:	moveq	r0, #3
   1c80c:	beq	1c79c <dta_ctx_init+0x41c>
   1c810:	ldr	r0, [r4, #40]	; 0x28
   1c814:	bl	422c <readstat_malloc@plt>
   1c818:	str	r0, [r4, #36]	; 0x24
   1c81c:	cmp	r0, #0
   1c820:	moveq	r0, #3
   1c824:	beq	1c79c <dta_ctx_init+0x41c>
   1c828:	ldr	r0, [r4, #56]	; 0x38
   1c82c:	bl	422c <readstat_malloc@plt>
   1c830:	str	r0, [r4, #52]	; 0x34
   1c834:	cmp	r0, #0
   1c838:	moveq	r0, #3
   1c83c:	beq	1c79c <dta_ctx_init+0x41c>
   1c840:	ldr	r0, [r4, #64]	; 0x40
   1c844:	bl	422c <readstat_malloc@plt>
   1c848:	str	r0, [r4, #60]	; 0x3c
   1c84c:	cmp	r0, #0
   1c850:	moveq	r0, #3
   1c854:	beq	1c79c <dta_ctx_init+0x41c>
   1c858:	ldr	r0, [r4, #72]	; 0x48
   1c85c:	bl	422c <readstat_malloc@plt>
   1c860:	str	r0, [r4, #68]	; 0x44
   1c864:	cmp	r0, #0
   1c868:	bne	1c790 <dta_ctx_init+0x410>
   1c86c:	mov	r0, #3
   1c870:	b	1c79c <dta_ctx_init+0x41c>
   1c874:	mov	r0, #3
   1c878:	b	1c79c <dta_ctx_init+0x41c>
   1c87c:	.word	0x00009fbc
   1c880:	.word	0x00009fa4
   1c884:	.word	0x0000bb94

0001c888 <dta_ctx_free>:
   1c888:	strd	r4, [sp, #-16]!
   1c88c:	str	r6, [sp, #8]
   1c890:	str	lr, [sp, #12]
   1c894:	mov	r4, r0
   1c898:	ldr	r0, [r0, #28]
   1c89c:	cmp	r0, #0
   1c8a0:	beq	1c8a8 <dta_ctx_free+0x20>
   1c8a4:	bl	3eb4 <free@plt>
   1c8a8:	ldr	r0, [r4, #36]	; 0x24
   1c8ac:	cmp	r0, #0
   1c8b0:	beq	1c8b8 <dta_ctx_free+0x30>
   1c8b4:	bl	3eb4 <free@plt>
   1c8b8:	ldr	r0, [r4, #44]	; 0x2c
   1c8bc:	cmp	r0, #0
   1c8c0:	beq	1c8c8 <dta_ctx_free+0x40>
   1c8c4:	bl	3eb4 <free@plt>
   1c8c8:	ldr	r0, [r4, #52]	; 0x34
   1c8cc:	cmp	r0, #0
   1c8d0:	beq	1c8d8 <dta_ctx_free+0x50>
   1c8d4:	bl	3eb4 <free@plt>
   1c8d8:	ldr	r0, [r4, #60]	; 0x3c
   1c8dc:	cmp	r0, #0
   1c8e0:	beq	1c8e8 <dta_ctx_free+0x60>
   1c8e4:	bl	3eb4 <free@plt>
   1c8e8:	ldr	r0, [r4, #68]	; 0x44
   1c8ec:	cmp	r0, #0
   1c8f0:	beq	1c8f8 <dta_ctx_free+0x70>
   1c8f4:	bl	3eb4 <free@plt>
   1c8f8:	ldr	r0, [r4, #236]	; 0xec
   1c8fc:	cmp	r0, #0
   1c900:	beq	1c908 <dta_ctx_free+0x80>
   1c904:	bl	3dc4 <iconv_close@plt>
   1c908:	ldr	r0, [r4]
   1c90c:	cmp	r0, #0
   1c910:	beq	1c918 <dta_ctx_free+0x90>
   1c914:	bl	3eb4 <free@plt>
   1c918:	ldr	r3, [r4, #228]	; 0xe4
   1c91c:	cmp	r3, #0
   1c920:	beq	1c968 <dta_ctx_free+0xe0>
   1c924:	ldr	r3, [r4, #148]	; 0x94
   1c928:	cmp	r3, #0
   1c92c:	ble	1c960 <dta_ctx_free+0xd8>
   1c930:	mov	r5, #0
   1c934:	b	1c94c <dta_ctx_free+0xc4>
   1c938:	bl	3eb4 <free@plt>
   1c93c:	add	r5, r5, #1
   1c940:	ldr	r3, [r4, #148]	; 0x94
   1c944:	cmp	r3, r5
   1c948:	ble	1c960 <dta_ctx_free+0xd8>
   1c94c:	ldr	r3, [r4, #228]	; 0xe4
   1c950:	ldr	r0, [r3, r5, lsl #2]
   1c954:	cmp	r0, #0
   1c958:	bne	1c938 <dta_ctx_free+0xb0>
   1c95c:	b	1c93c <dta_ctx_free+0xb4>
   1c960:	ldr	r0, [r4, #228]	; 0xe4
   1c964:	bl	3eb4 <free@plt>
   1c968:	ldr	r3, [r4, #216]	; 0xd8
   1c96c:	cmp	r3, #0
   1c970:	beq	1c9a8 <dta_ctx_free+0x120>
   1c974:	ldr	r3, [r4, #220]	; 0xdc
   1c978:	cmp	r3, #0
   1c97c:	beq	1c9a0 <dta_ctx_free+0x118>
   1c980:	mov	r5, #0
   1c984:	ldr	r3, [r4, #216]	; 0xd8
   1c988:	ldr	r0, [r3, r5, lsl #2]
   1c98c:	bl	3eb4 <free@plt>
   1c990:	add	r5, r5, #1
   1c994:	ldr	r3, [r4, #220]	; 0xdc
   1c998:	cmp	r3, r5
   1c99c:	bhi	1c984 <dta_ctx_free+0xfc>
   1c9a0:	ldr	r0, [r4, #216]	; 0xd8
   1c9a4:	bl	3eb4 <free@plt>
   1c9a8:	mov	r0, r4
   1c9ac:	bl	3eb4 <free@plt>
   1c9b0:	ldrd	r4, [sp]
   1c9b4:	ldr	r6, [sp, #8]
   1c9b8:	add	sp, sp, #12
   1c9bc:	pop	{pc}		; (ldr pc, [sp], #4)

0001c9c0 <dta_type_info>:
   1c9c0:	ldrb	r1, [r1, #20]
   1c9c4:	cmp	r1, #111	; 0x6f
   1c9c8:	beq	1ca18 <dta_type_info+0x58>
   1c9cc:	cmp	r1, #117	; 0x75
   1c9d0:	beq	1ca8c <dta_type_info+0xcc>
   1c9d4:	cmp	r0, #126	; 0x7e
   1c9d8:	bhi	1cb48 <dta_type_info+0x188>
   1c9dc:	sub	r0, r0, #98	; 0x62
   1c9e0:	cmp	r0, #10
   1c9e4:	addls	pc, pc, r0, lsl #2
   1c9e8:	b	1cb38 <dta_type_info+0x178>
   1c9ec:	b	1cbb8 <dta_type_info+0x1f8>
   1c9f0:	b	1cb38 <dta_type_info+0x178>
   1c9f4:	b	1cb28 <dta_type_info+0x168>
   1c9f8:	b	1cb38 <dta_type_info+0x178>
   1c9fc:	b	1cb18 <dta_type_info+0x158>
   1ca00:	b	1cb38 <dta_type_info+0x178>
   1ca04:	b	1cb38 <dta_type_info+0x178>
   1ca08:	b	1caf8 <dta_type_info+0x138>
   1ca0c:	b	1cb38 <dta_type_info+0x178>
   1ca10:	b	1cb38 <dta_type_info+0x178>
   1ca14:	b	1cb08 <dta_type_info+0x148>
   1ca18:	sub	r1, r0, #251	; 0xfb
   1ca1c:	cmp	r1, #4
   1ca20:	addls	pc, pc, r1, lsl #2
   1ca24:	b	1ca7c <dta_type_info+0xbc>
   1ca28:	b	1cb68 <dta_type_info+0x1a8>
   1ca2c:	b	1ca3c <dta_type_info+0x7c>
   1ca30:	b	1ca4c <dta_type_info+0x8c>
   1ca34:	b	1ca5c <dta_type_info+0x9c>
   1ca38:	b	1ca6c <dta_type_info+0xac>
   1ca3c:	mov	ip, #2
   1ca40:	mov	r1, ip
   1ca44:	mov	r0, #0
   1ca48:	b	1cb54 <dta_type_info+0x194>
   1ca4c:	mov	ip, #3
   1ca50:	mov	r1, #4
   1ca54:	mov	r0, #0
   1ca58:	b	1cb54 <dta_type_info+0x194>
   1ca5c:	mov	ip, #4
   1ca60:	mov	r1, ip
   1ca64:	mov	r0, #0
   1ca68:	b	1cb54 <dta_type_info+0x194>
   1ca6c:	mov	ip, #5
   1ca70:	mov	r1, #8
   1ca74:	mov	r0, #0
   1ca78:	b	1cb54 <dta_type_info+0x194>
   1ca7c:	mov	r1, r0
   1ca80:	mov	ip, #0
   1ca84:	mov	r0, ip
   1ca88:	b	1cb54 <dta_type_info+0x194>
   1ca8c:	movw	r1, #65527	; 0xfff7
   1ca90:	cmp	r0, r1
   1ca94:	beq	1cb78 <dta_type_info+0x1b8>
   1ca98:	bls	1cac8 <dta_type_info+0x108>
   1ca9c:	movw	r1, #65529	; 0xfff9
   1caa0:	cmp	r0, r1
   1caa4:	beq	1cb98 <dta_type_info+0x1d8>
   1caa8:	bcc	1cba8 <dta_type_info+0x1e8>
   1caac:	movw	r1, #65530	; 0xfffa
   1cab0:	cmp	r0, r1
   1cab4:	moveq	ip, #1
   1cab8:	moveq	r1, ip
   1cabc:	moveq	r0, #0
   1cac0:	beq	1cb54 <dta_type_info+0x194>
   1cac4:	b	1cae8 <dta_type_info+0x128>
   1cac8:	cmp	r0, #32768	; 0x8000
   1cacc:	beq	1cb88 <dta_type_info+0x1c8>
   1cad0:	movw	r1, #65526	; 0xfff6
   1cad4:	cmp	r0, r1
   1cad8:	moveq	ip, #5
   1cadc:	moveq	r1, #8
   1cae0:	moveq	r0, #0
   1cae4:	beq	1cb54 <dta_type_info+0x194>
   1cae8:	mov	r1, r0
   1caec:	mov	ip, #0
   1caf0:	mov	r0, ip
   1caf4:	b	1cb54 <dta_type_info+0x194>
   1caf8:	mov	ip, #2
   1cafc:	mov	r1, ip
   1cb00:	mov	r0, #0
   1cb04:	b	1cb54 <dta_type_info+0x194>
   1cb08:	mov	ip, #3
   1cb0c:	mov	r1, #4
   1cb10:	mov	r0, #0
   1cb14:	b	1cb54 <dta_type_info+0x194>
   1cb18:	mov	ip, #4
   1cb1c:	mov	r1, ip
   1cb20:	mov	r0, #0
   1cb24:	b	1cb54 <dta_type_info+0x194>
   1cb28:	mov	ip, #5
   1cb2c:	mov	r1, #8
   1cb30:	mov	r0, #0
   1cb34:	b	1cb54 <dta_type_info+0x194>
   1cb38:	mov	ip, #0
   1cb3c:	mov	r1, ip
   1cb40:	mov	r0, #5
   1cb44:	b	1cb54 <dta_type_info+0x194>
   1cb48:	sub	r1, r0, #127	; 0x7f
   1cb4c:	mov	ip, #0
   1cb50:	mov	r0, ip
   1cb54:	cmp	r2, #0
   1cb58:	strne	r1, [r2]
   1cb5c:	cmp	r3, #0
   1cb60:	strne	ip, [r3]
   1cb64:	bx	lr
   1cb68:	mov	ip, #1
   1cb6c:	mov	r1, ip
   1cb70:	mov	r0, #0
   1cb74:	b	1cb54 <dta_type_info+0x194>
   1cb78:	mov	ip, #4
   1cb7c:	mov	r1, ip
   1cb80:	mov	r0, #0
   1cb84:	b	1cb54 <dta_type_info+0x194>
   1cb88:	mov	ip, #6
   1cb8c:	mov	r1, #8
   1cb90:	mov	r0, #0
   1cb94:	b	1cb54 <dta_type_info+0x194>
   1cb98:	mov	ip, #2
   1cb9c:	mov	r1, ip
   1cba0:	mov	r0, #0
   1cba4:	b	1cb54 <dta_type_info+0x194>
   1cba8:	mov	ip, #3
   1cbac:	mov	r1, #4
   1cbb0:	mov	r0, #0
   1cbb4:	b	1cb54 <dta_type_info+0x194>
   1cbb8:	mov	ip, #1
   1cbbc:	mov	r1, ip
   1cbc0:	mov	r0, #0
   1cbc4:	b	1cb54 <dta_type_info+0x194>

0001cbc8 <dta_parse_timestamp>:
   1cbc8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1cbcc:	strd	r6, [sp, #8]
   1cbd0:	strd	r8, [sp, #16]
   1cbd4:	strd	sl, [sp, #24]
   1cbd8:	str	lr, [sp, #32]
   1cbdc:	sub	sp, sp, #1056	; 0x420
   1cbe0:	sub	sp, sp, #4
   1cbe4:	str	r0, [sp, #24]
   1cbe8:	str	r1, [sp, #28]
   1cbec:	str	r3, [sp, #20]
   1cbf0:	add	r1, r0, r1
   1cbf4:	str	r1, [sp, #8]
   1cbf8:	cmp	r0, r1
   1cbfc:	beq	1cf34 <dta_parse_timestamp+0x36c>
   1cc00:	mov	ip, r0
   1cc04:	mov	fp, #0
   1cc08:	mov	r1, #1
   1cc0c:	ldr	r9, [pc, #852]	; 1cf68 <dta_parse_timestamp+0x3a0>
   1cc10:	add	r9, pc, r9
   1cc14:	ldr	r3, [pc, #848]	; 1cf6c <dta_parse_timestamp+0x3a4>
   1cc18:	add	r3, pc, r3
   1cc1c:	str	r3, [sp, #12]
   1cc20:	ldr	sl, [pc, #840]	; 1cf70 <dta_parse_timestamp+0x3a8>
   1cc24:	add	sl, pc, sl
   1cc28:	ldr	r3, [pc, #836]	; 1cf74 <dta_parse_timestamp+0x3ac>
   1cc2c:	add	r3, pc, r3
   1cc30:	add	r3, r3, #588	; 0x24c
   1cc34:	str	r3, [sp, #16]
   1cc38:	b	1cd1c <dta_parse_timestamp+0x154>
   1cc3c:	sub	lr, r8, #1
   1cc40:	adds	lr, r6, lr
   1cc44:	bcs	1cc90 <dta_parse_timestamp+0xc8>
   1cc48:	ldrb	r5, [ip]
   1cc4c:	mov	r3, r6
   1cc50:	b	1cc5c <dta_parse_timestamp+0x94>
   1cc54:	cmp	lr, r3
   1cc58:	bcc	1cc90 <dta_parse_timestamp+0xc8>
   1cc5c:	sub	r0, lr, r3
   1cc60:	add	r4, r3, r0, asr #1
   1cc64:	ldrb	r0, [r3, r0, asr #1]
   1cc68:	cmp	r5, r0
   1cc6c:	subcc	lr, r4, #1
   1cc70:	bcc	1cc54 <dta_parse_timestamp+0x8c>
   1cc74:	cmp	r5, r0
   1cc78:	bls	1cc84 <dta_parse_timestamp+0xbc>
   1cc7c:	add	r3, r4, #1
   1cc80:	b	1cc54 <dta_parse_timestamp+0x8c>
   1cc84:	sub	r4, r4, r6
   1cc88:	add	r7, r7, r4
   1cc8c:	b	1cce8 <dta_parse_timestamp+0x120>
   1cc90:	add	r6, r6, r8
   1cc94:	add	r7, r7, r8
   1cc98:	b	1cd38 <dta_parse_timestamp+0x170>
   1cc9c:	cmp	r0, r1
   1cca0:	bcc	1cce4 <dta_parse_timestamp+0x11c>
   1cca4:	sub	r3, r0, r1
   1cca8:	asr	r3, r3, #1
   1ccac:	bic	r3, r3, #1
   1ccb0:	add	lr, r1, r3
   1ccb4:	ldrb	r3, [r1, r3]
   1ccb8:	cmp	r3, r4
   1ccbc:	subhi	r0, lr, #2
   1ccc0:	bhi	1cc9c <dta_parse_timestamp+0xd4>
   1ccc4:	ldrb	r3, [lr, #1]
   1ccc8:	cmp	r3, r4
   1cccc:	bcs	1ccd8 <dta_parse_timestamp+0x110>
   1ccd0:	add	r1, lr, #2
   1ccd4:	b	1cc9c <dta_parse_timestamp+0xd4>
   1ccd8:	sub	r6, lr, r6
   1ccdc:	add	r7, r7, r6, asr #1
   1cce0:	b	1cce8 <dta_parse_timestamp+0x120>
   1cce4:	add	r7, r7, r5
   1cce8:	add	r7, sl, r7
   1ccec:	ldrb	r3, [r7, #312]	; 0x138
   1ccf0:	add	r3, sl, r3
   1ccf4:	ldrb	r1, [r3, #468]	; 0x1d4
   1ccf8:	ldrb	r0, [r3, #528]	; 0x210
   1ccfc:	cmp	r0, #0
   1cd00:	bne	1cd68 <dta_parse_timestamp+0x1a0>
   1cd04:	cmp	r1, #0
   1cd08:	beq	1cee8 <dta_parse_timestamp+0x320>
   1cd0c:	add	ip, ip, #1
   1cd10:	ldr	r3, [sp, #8]
   1cd14:	cmp	r3, ip
   1cd18:	beq	1cf3c <dta_parse_timestamp+0x374>
   1cd1c:	add	r3, r9, r1
   1cd20:	ldrb	r6, [r3, #120]	; 0x78
   1cd24:	add	r6, r9, r6
   1cd28:	ldrb	r7, [r3, #168]	; 0xa8
   1cd2c:	ldrb	r8, [r3, #216]	; 0xd8
   1cd30:	cmp	r8, #0
   1cd34:	bne	1cc3c <dta_parse_timestamp+0x74>
   1cd38:	ldr	r3, [sp, #12]
   1cd3c:	add	r1, r3, r1
   1cd40:	ldrb	r5, [r1, #264]	; 0x108
   1cd44:	cmp	r5, #0
   1cd48:	ble	1cce8 <dta_parse_timestamp+0x120>
   1cd4c:	add	r0, r6, r5, lsl #1
   1cd50:	sub	r0, r0, #2
   1cd54:	cmp	r6, r0
   1cd58:	bhi	1cce4 <dta_parse_timestamp+0x11c>
   1cd5c:	ldrb	r4, [ip]
   1cd60:	mov	r1, r6
   1cd64:	b	1cca4 <dta_parse_timestamp+0xdc>
   1cd68:	ldr	r4, [sp, #16]
   1cd6c:	add	lr, r4, r0
   1cd70:	add	r3, lr, #1
   1cd74:	ldrb	r0, [r4, r0]
   1cd78:	add	r0, r0, #1
   1cd7c:	add	lr, lr, r0
   1cd80:	mov	r8, #9
   1cd84:	mov	r7, #8
   1cd88:	mov	r6, #7
   1cd8c:	mov	r5, #4
   1cd90:	mov	r4, #3
   1cd94:	cmp	lr, r3
   1cd98:	beq	1cd04 <dta_parse_timestamp+0x13c>
   1cd9c:	ldrb	r0, [r3], #1
   1cda0:	cmp	r0, #16
   1cda4:	addls	pc, pc, r0, lsl #2
   1cda8:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1cdac:	b	1cdf8 <dta_parse_timestamp+0x230>
   1cdb0:	b	1cdf0 <dta_parse_timestamp+0x228>
   1cdb4:	b	1ce0c <dta_parse_timestamp+0x244>
   1cdb8:	b	1ce14 <dta_parse_timestamp+0x24c>
   1cdbc:	b	1ce20 <dta_parse_timestamp+0x258>
   1cdc0:	b	1ce2c <dta_parse_timestamp+0x264>
   1cdc4:	b	1ce38 <dta_parse_timestamp+0x270>
   1cdc8:	b	1ce40 <dta_parse_timestamp+0x278>
   1cdcc:	b	1ce48 <dta_parse_timestamp+0x280>
   1cdd0:	b	1ce54 <dta_parse_timestamp+0x28c>
   1cdd4:	b	1ce60 <dta_parse_timestamp+0x298>
   1cdd8:	b	1ce68 <dta_parse_timestamp+0x2a0>
   1cddc:	b	1ce70 <dta_parse_timestamp+0x2a8>
   1cde0:	b	1ce78 <dta_parse_timestamp+0x2b0>
   1cde4:	b	1ce84 <dta_parse_timestamp+0x2bc>
   1cde8:	b	1ce90 <dta_parse_timestamp+0x2c8>
   1cdec:	b	1cea0 <dta_parse_timestamp+0x2d8>
   1cdf0:	mov	fp, #0
   1cdf4:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1cdf8:	add	fp, fp, fp, lsl #2
   1cdfc:	ldrb	r0, [ip]
   1ce00:	sub	r0, r0, #48	; 0x30
   1ce04:	add	fp, r0, fp, lsl #1
   1ce08:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce0c:	str	fp, [r2, #12]
   1ce10:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce14:	mov	r0, #0
   1ce18:	str	r0, [r2, #16]
   1ce1c:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce20:	mov	r0, #1
   1ce24:	str	r0, [r2, #16]
   1ce28:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce2c:	mov	r0, #2
   1ce30:	str	r0, [r2, #16]
   1ce34:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce38:	str	r4, [r2, #16]
   1ce3c:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce40:	str	r5, [r2, #16]
   1ce44:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce48:	mov	r0, #5
   1ce4c:	str	r0, [r2, #16]
   1ce50:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce54:	mov	r0, #6
   1ce58:	str	r0, [r2, #16]
   1ce5c:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce60:	str	r6, [r2, #16]
   1ce64:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce68:	str	r7, [r2, #16]
   1ce6c:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce70:	str	r8, [r2, #16]
   1ce74:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce78:	mov	r0, #10
   1ce7c:	str	r0, [r2, #16]
   1ce80:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce84:	mov	r0, #11
   1ce88:	str	r0, [r2, #16]
   1ce8c:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1ce90:	sub	r0, fp, #1888	; 0x760
   1ce94:	sub	r0, r0, #12
   1ce98:	str	r0, [r2, #20]
   1ce9c:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1cea0:	str	fp, [r2, #8]
   1cea4:	b	1cd94 <dta_parse_timestamp+0x1cc>
   1cea8:	ldrb	r0, [r3], #1
   1ceac:	cmp	r0, #17
   1ceb0:	streq	fp, [r2, #4]
   1ceb4:	cmp	ip, r3
   1ceb8:	bne	1cea8 <dta_parse_timestamp+0x2e0>
   1cebc:	cmp	r1, #43	; 0x2b
   1cec0:	movgt	r0, #0
   1cec4:	ble	1cee8 <dta_parse_timestamp+0x320>
   1cec8:	add	sp, sp, #1056	; 0x420
   1cecc:	add	sp, sp, #4
   1ced0:	ldrd	r4, [sp]
   1ced4:	ldrd	r6, [sp, #8]
   1ced8:	ldrd	r8, [sp, #16]
   1cedc:	ldrd	sl, [sp, #24]
   1cee0:	add	sp, sp, #32
   1cee4:	pop	{pc}		; (ldr pc, [sp], #4)
   1cee8:	ldr	r3, [sp, #20]
   1ceec:	cmp	r3, #0
   1cef0:	beq	1cf2c <dta_parse_timestamp+0x364>
   1cef4:	mov	r5, r3
   1cef8:	ldr	r3, [sp, #28]
   1cefc:	ldr	r0, [sp, #24]
   1cf00:	str	r0, [sp, #4]
   1cf04:	str	r3, [sp]
   1cf08:	ldr	r2, [pc, #104]	; 1cf78 <dta_parse_timestamp+0x3b0>
   1cf0c:	add	r2, pc, r2
   1cf10:	mov	r1, #1024	; 0x400
   1cf14:	add	r4, sp, #32
   1cf18:	mov	r0, r4
   1cf1c:	bl	4280 <snprintf@plt>
   1cf20:	ldr	r1, [sp, #1096]	; 0x448
   1cf24:	mov	r0, r4
   1cf28:	blx	r5
   1cf2c:	mov	r0, #29
   1cf30:	b	1cec8 <dta_parse_timestamp+0x300>
   1cf34:	mov	fp, #0
   1cf38:	mov	r1, #1
   1cf3c:	ldr	r3, [pc, #56]	; 1cf7c <dta_parse_timestamp+0x3b4>
   1cf40:	add	r3, pc, r3
   1cf44:	add	lr, r3, #588	; 0x24c
   1cf48:	add	r3, r3, r1
   1cf4c:	ldrb	r0, [r3, #628]	; 0x274
   1cf50:	add	ip, lr, r0
   1cf54:	add	r3, ip, #1
   1cf58:	ldrb	r0, [lr, r0]
   1cf5c:	add	r0, r0, #1
   1cf60:	add	ip, ip, r0
   1cf64:	b	1ceb4 <dta_parse_timestamp+0x2ec>
   1cf68:	.word	0x0000b6e0
   1cf6c:	.word	0x0000b6d8
   1cf70:	.word	0x0000b6cc
   1cf74:	.word	0x0000b6c4
   1cf78:	.word	0x0000b688
   1cf7c:	.word	0x0000b3b0

0001cf80 <dta_update_progress>:
   1cf80:	str	r4, [sp, #-16]!
   1cf84:	strd	r6, [sp, #4]
   1cf88:	str	lr, [sp, #12]
   1cf8c:	vpush	{d8}
   1cf90:	mov	r4, r0
   1cf94:	ldrd	r6, [r0, #168]	; 0xa8
   1cf98:	cmp	r6, #1
   1cf9c:	sbcs	r3, r7, #0
   1cfa0:	blt	1cffc <dta_update_progress+0x7c>
   1cfa4:	ldrd	r0, [r0, #184]	; 0xb8
   1cfa8:	bl	25a70 <__aeabi_l2d>
   1cfac:	vmov	d8, r0, r1
   1cfb0:	mov	r0, r6
   1cfb4:	mov	r1, r7
   1cfb8:	bl	25a70 <__aeabi_l2d>
   1cfbc:	vmov	d7, r0, r1
   1cfc0:	vdiv.f64	d0, d8, d7
   1cfc4:	ldr	r3, [r4, #268]	; 0x10c
   1cfc8:	cmp	r3, #0
   1cfcc:	moveq	r0, #0
   1cfd0:	beq	1cfe8 <dta_update_progress+0x68>
   1cfd4:	ldr	r0, [r4, #276]	; 0x114
   1cfd8:	blx	r3
   1cfdc:	cmp	r0, #0
   1cfe0:	moveq	r0, #0
   1cfe4:	movne	r0, #4
   1cfe8:	vpop	{d8}
   1cfec:	ldr	r4, [sp]
   1cff0:	ldrd	r6, [sp, #4]
   1cff4:	add	sp, sp, #12
   1cff8:	pop	{pc}		; (ldr pc, [sp], #4)
   1cffc:	vldr	d0, [pc, #4]	; 1d008 <dta_update_progress+0x88>
   1d000:	b	1cfc4 <dta_update_progress+0x44>
   1d004:	nop	{0}
	...

0001d010 <dta_read_tag>:
   1d010:	ldr	r3, [r0, #284]	; 0x11c
   1d014:	cmp	r3, #0
   1d018:	beq	1d028 <dta_read_tag+0x18>
   1d01c:	ldrb	r3, [r0, #192]	; 0xc0
   1d020:	tst	r3, #4
   1d024:	beq	1d0a0 <dta_read_tag+0x90>
   1d028:	strd	r4, [sp, #-16]!
   1d02c:	str	r6, [sp, #8]
   1d030:	str	lr, [sp, #12]
   1d034:	sub	sp, sp, #256	; 0x100
   1d038:	mov	r5, r1
   1d03c:	mov	r4, r0
   1d040:	mov	r0, r1
   1d044:	bl	41fc <strlen@plt>
   1d048:	mov	r6, r0
   1d04c:	ldr	r3, [r4, #280]	; 0x118
   1d050:	ldr	r4, [r3, #12]
   1d054:	ldr	r2, [r3, #20]
   1d058:	mov	r1, r0
   1d05c:	mov	r0, sp
   1d060:	blx	r4
   1d064:	cmp	r0, r6
   1d068:	movne	r0, #2
   1d06c:	bne	1d08c <dta_read_tag+0x7c>
   1d070:	mov	r2, r6
   1d074:	mov	r1, r5
   1d078:	mov	r0, sp
   1d07c:	bl	44fc <strncmp@plt>
   1d080:	cmp	r0, #0
   1d084:	moveq	r0, #0
   1d088:	movne	r0, #5
   1d08c:	add	sp, sp, #256	; 0x100
   1d090:	ldrd	r4, [sp]
   1d094:	ldr	r6, [sp, #8]
   1d098:	add	sp, sp, #12
   1d09c:	pop	{pc}		; (ldr pc, [sp], #4)
   1d0a0:	mov	r0, #0
   1d0a4:	bx	lr

0001d0a8 <dta_read_chunk>:
   1d0a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1d0ac:	strd	r6, [sp, #8]
   1d0b0:	str	r8, [sp, #16]
   1d0b4:	str	lr, [sp, #20]
   1d0b8:	mov	r6, r0
   1d0bc:	mov	r7, r2
   1d0c0:	mov	r4, r3
   1d0c4:	ldr	r5, [r0, #280]	; 0x118
   1d0c8:	bl	1d010 <dta_read_tag>
   1d0cc:	cmp	r0, #0
   1d0d0:	bne	1d0f4 <dta_read_chunk+0x4c>
   1d0d4:	ldr	r3, [r5, #12]
   1d0d8:	ldr	r2, [r5, #20]
   1d0dc:	mov	r1, r4
   1d0e0:	mov	r0, r7
   1d0e4:	blx	r3
   1d0e8:	cmp	r0, r4
   1d0ec:	movne	r0, #2
   1d0f0:	beq	1d108 <dta_read_chunk+0x60>
   1d0f4:	ldrd	r4, [sp]
   1d0f8:	ldrd	r6, [sp, #8]
   1d0fc:	ldr	r8, [sp, #16]
   1d100:	add	sp, sp, #20
   1d104:	pop	{pc}		; (ldr pc, [sp], #4)
   1d108:	ldr	r1, [sp, #24]
   1d10c:	mov	r0, r6
   1d110:	bl	1d010 <dta_read_tag>
   1d114:	b	1d0f4 <dta_read_chunk+0x4c>

0001d118 <dta_interpret_int32_bytes>:
   1d118:	strd	r4, [sp, #-16]!
   1d11c:	str	r6, [sp, #8]
   1d120:	str	lr, [sp, #12]
   1d124:	mov	r4, r0
   1d128:	mov	r5, r1
   1d12c:	mov	r0, #0
   1d130:	mov	r1, #0
   1d134:	strd	r0, [r4]
   1d138:	strd	r0, [r4, #8]
   1d13c:	ldr	r0, [r2]
   1d140:	ldrb	r3, [r5, #192]	; 0xc0
   1d144:	tst	r3, #1
   1d148:	bne	1d194 <dta_interpret_int32_bytes+0x7c>
   1d14c:	ldrb	r3, [r5, #192]	; 0xc0
   1d150:	tst	r3, #2
   1d154:	bne	1d19c <dta_interpret_int32_bytes+0x84>
   1d158:	ldr	r3, [r5, #196]	; 0xc4
   1d15c:	cmp	r3, r0
   1d160:	bge	1d1a4 <dta_interpret_int32_bytes+0x8c>
   1d164:	ldrb	r3, [r5, #192]	; 0xc0
   1d168:	cmn	r0, #-2147483621	; 0x8000001b
   1d16c:	movle	r2, #0
   1d170:	movgt	r2, #1
   1d174:	ands	r2, r2, r3, lsr #3
   1d178:	addne	r3, r0, #123	; 0x7b
   1d17c:	uxtbne	r3, r3
   1d180:	movne	r1, #0
   1d184:	bne	1d1b0 <dta_interpret_int32_bytes+0x98>
   1d188:	mov	r1, #1
   1d18c:	mov	r3, #0
   1d190:	b	1d1b0 <dta_interpret_int32_bytes+0x98>
   1d194:	bl	3d88 <byteswap4@plt>
   1d198:	b	1d14c <dta_interpret_int32_bytes+0x34>
   1d19c:	bl	3ef0 <ones_to_twos_complement4@plt>
   1d1a0:	b	1d158 <dta_interpret_int32_bytes+0x40>
   1d1a4:	mov	r2, #0
   1d1a8:	mov	r1, r2
   1d1ac:	mov	r3, r2
   1d1b0:	str	r0, [r4]
   1d1b4:	mov	r0, #3
   1d1b8:	str	r0, [r4, #8]
   1d1bc:	strb	r3, [r4, #12]
   1d1c0:	ldrb	r3, [r4, #13]
   1d1c4:	bfi	r3, r1, #0, #1
   1d1c8:	bfi	r3, r2, #1, #1
   1d1cc:	strb	r3, [r4, #13]
   1d1d0:	mov	r0, r4
   1d1d4:	ldrd	r4, [sp]
   1d1d8:	ldr	r6, [sp, #8]
   1d1dc:	add	sp, sp, #12
   1d1e0:	pop	{pc}		; (ldr pc, [sp], #4)

0001d1e4 <dta_handle_row>:
   1d1e4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1d1e8:	strd	r6, [sp, #8]
   1d1ec:	strd	r8, [sp, #16]
   1d1f0:	strd	sl, [sp, #24]
   1d1f4:	str	lr, [sp, #32]
   1d1f8:	vpush	{d8-d9}
   1d1fc:	sub	sp, sp, #2256	; 0x8d0
   1d200:	sub	sp, sp, #4
   1d204:	ldr	r3, [r1, #148]	; 0x94
   1d208:	cmp	r3, #0
   1d20c:	ble	1daa4 <dta_handle_row+0x8c0>
   1d210:	mov	r4, r1
   1d214:	mov	r8, #0
   1d218:	mov	r5, r8
   1d21c:	mov	sl, #0
   1d220:	mov	fp, #0
   1d224:	add	r3, sp, #96	; 0x60
   1d228:	str	r3, [sp, #48]	; 0x30
   1d22c:	add	r3, sp, #92	; 0x5c
   1d230:	str	r3, [sp, #24]
   1d234:	vldr	d9, [pc, #996]	; 1d620 <dta_handle_row+0x43c>
   1d238:	mov	r3, #65280	; 0xff00
   1d23c:	movt	r3, #32799	; 0x801f
   1d240:	str	r3, [sp, #52]	; 0x34
   1d244:	vldr	s16, [pc, #988]	; 1d628 <dta_handle_row+0x444>
   1d248:	str	r0, [sp, #28]
   1d24c:	b	1d32c <dta_handle_row+0x148>
   1d250:	ldr	r3, [sp, #92]	; 0x5c
   1d254:	add	r8, r8, r3
   1d258:	b	1d31c <dta_handle_row+0x138>
   1d25c:	cmp	r3, #0
   1d260:	beq	1d2b4 <dta_handle_row+0xd0>
   1d264:	ldr	r9, [sp, #28]
   1d268:	ldrb	r1, [r9, r6]
   1d26c:	cmp	r1, #0
   1d270:	beq	1d2a8 <dta_handle_row+0xc4>
   1d274:	add	r2, r6, #1
   1d278:	add	r2, r9, r2
   1d27c:	add	r3, r3, r9
   1d280:	add	r0, r3, r6
   1d284:	add	ip, r9, r6
   1d288:	sub	r3, r2, ip
   1d28c:	cmp	r2, r0
   1d290:	beq	1d2b0 <dta_handle_row+0xcc>
   1d294:	ldrb	r1, [r2], #1
   1d298:	cmp	r1, #0
   1d29c:	bne	1d288 <dta_handle_row+0xa4>
   1d2a0:	str	r9, [sp, #28]
   1d2a4:	b	1d2b4 <dta_handle_row+0xd0>
   1d2a8:	mov	r3, r2
   1d2ac:	b	1d2b4 <dta_handle_row+0xd0>
   1d2b0:	str	r9, [sp, #28]
   1d2b4:	ldr	r2, [r4, #236]	; 0xec
   1d2b8:	str	r2, [sp]
   1d2bc:	ldr	r2, [sp, #28]
   1d2c0:	add	r2, r2, r6
   1d2c4:	mov	r1, #2048	; 0x800
   1d2c8:	add	r0, sp, #144	; 0x90
   1d2cc:	bl	4238 <readstat_convert@plt>
   1d2d0:	cmp	r0, #0
   1d2d4:	bne	1da90 <dta_handle_row+0x8ac>
   1d2d8:	add	r3, sp, #144	; 0x90
   1d2dc:	str	r3, [sp, #112]	; 0x70
   1d2e0:	ldr	r3, [r4, #228]	; 0xe4
   1d2e4:	ldr	r1, [r3, r7]
   1d2e8:	ldr	r3, [r4, #276]	; 0x114
   1d2ec:	str	r3, [sp, #8]
   1d2f0:	ldrd	r2, [sp, #120]	; 0x78
   1d2f4:	strd	r2, [sp]
   1d2f8:	add	r3, sp, #112	; 0x70
   1d2fc:	ldm	r3, {r2, r3}
   1d300:	ldr	r7, [r4, #256]	; 0x100
   1d304:	ldr	r0, [r4, #184]	; 0xb8
   1d308:	blx	r7
   1d30c:	cmp	r0, #0
   1d310:	bne	1da98 <dta_handle_row+0x8b4>
   1d314:	ldr	r8, [sp, #92]	; 0x5c
   1d318:	add	r8, r6, r8
   1d31c:	add	r5, r5, #1
   1d320:	ldr	r3, [r4, #148]	; 0x94
   1d324:	cmp	r3, r5
   1d328:	ble	1da68 <dta_handle_row+0x884>
   1d32c:	add	r3, sp, #112	; 0x70
   1d330:	strd	sl, [r3]
   1d334:	strd	sl, [r3, #8]!
   1d338:	ldr	ip, [r4, #28]
   1d33c:	lsl	r0, r5, #1
   1d340:	ldr	r2, [sp, #24]
   1d344:	mov	r1, r4
   1d348:	ldrh	r0, [ip, r0]
   1d34c:	bl	41e4 <dta_type_info@plt>
   1d350:	subs	r3, r0, #0
   1d354:	str	r3, [sp, #20]
   1d358:	bne	1da68 <dta_handle_row+0x884>
   1d35c:	lsl	r7, r5, #2
   1d360:	ldr	r3, [r4, #228]	; 0xe4
   1d364:	ldr	r3, [r3, r5, lsl #2]
   1d368:	ldr	r3, [r3, #2144]	; 0x860
   1d36c:	cmp	r3, #0
   1d370:	bne	1d250 <dta_handle_row+0x6c>
   1d374:	mov	r6, r8
   1d378:	ldr	r3, [sp, #92]	; 0x5c
   1d37c:	add	r8, r8, r3
   1d380:	ldr	r2, [r4, #160]	; 0xa0
   1d384:	cmp	r8, r2
   1d388:	bhi	1da60 <dta_handle_row+0x87c>
   1d38c:	ldr	r2, [sp, #120]	; 0x78
   1d390:	cmp	r2, #0
   1d394:	beq	1d25c <dta_handle_row+0x78>
   1d398:	cmp	r2, #6
   1d39c:	beq	1d464 <dta_handle_row+0x280>
   1d3a0:	cmp	r2, #1
   1d3a4:	beq	1d678 <dta_handle_row+0x494>
   1d3a8:	cmp	r2, #2
   1d3ac:	beq	1d774 <dta_handle_row+0x590>
   1d3b0:	cmp	r2, #3
   1d3b4:	beq	1d894 <dta_handle_row+0x6b0>
   1d3b8:	cmp	r2, #4
   1d3bc:	beq	1d8c4 <dta_handle_row+0x6e0>
   1d3c0:	cmp	r2, #5
   1d3c4:	bne	1d2e0 <dta_handle_row+0xfc>
   1d3c8:	strd	sl, [sp, #128]	; 0x80
   1d3cc:	strd	sl, [sp, #136]	; 0x88
   1d3d0:	ldr	r3, [sp, #48]	; 0x30
   1d3d4:	vstr	d9, [r3]
   1d3d8:	ldr	r3, [sp, #28]
   1d3dc:	add	r3, r3, r6
   1d3e0:	ldr	r2, [r3]
   1d3e4:	ldr	r3, [r3, #4]
   1d3e8:	str	r2, [sp, #104]	; 0x68
   1d3ec:	str	r3, [sp, #108]	; 0x6c
   1d3f0:	ldrb	r3, [r4, #192]	; 0xc0
   1d3f4:	tst	r3, #1
   1d3f8:	bne	1d9d4 <dta_handle_row+0x7f0>
   1d3fc:	ldrd	r0, [sp, #104]	; 0x68
   1d400:	ldrd	r2, [r4, #208]	; 0xd0
   1d404:	cmp	r2, r0
   1d408:	sbcs	r3, r3, r1
   1d40c:	bge	1d9e8 <dta_handle_row+0x804>
   1d410:	ldrb	ip, [r4, #192]	; 0xc0
   1d414:	ubfx	ip, ip, #3, #1
   1d418:	mov	r2, #0
   1d41c:	mov	r3, #0
   1d420:	movt	r3, #32736	; 0x7fe0
   1d424:	cmp	r2, r0
   1d428:	sbcs	r3, r3, r1
   1d42c:	movge	ip, #0
   1d430:	andlt	ip, ip, #1
   1d434:	cmp	ip, #0
   1d438:	moveq	r8, #1
   1d43c:	moveq	r1, #0
   1d440:	beq	1d9fc <dta_handle_row+0x818>
   1d444:	adds	r3, r0, #0
   1d448:	ldr	r3, [sp, #52]	; 0x34
   1d44c:	adc	r1, r1, r3
   1d450:	asr	r1, r1, #8
   1d454:	add	r1, r1, #97	; 0x61
   1d458:	uxtb	r1, r1
   1d45c:	mov	r8, #0
   1d460:	b	1d9fc <dta_handle_row+0x818>
   1d464:	ldr	r3, [sp, #28]
   1d468:	add	r3, r3, r6
   1d46c:	ldr	r2, [r4, #112]	; 0x70
   1d470:	cmp	r2, #2
   1d474:	beq	1d4e8 <dta_handle_row+0x304>
   1d478:	cmp	r2, #4
   1d47c:	strdne	sl, [sp, #32]
   1d480:	movne	r3, #0
   1d484:	strne	r3, [sp, #40]	; 0x28
   1d488:	beq	1d5ec <dta_handle_row+0x408>
   1d48c:	ldr	lr, [r4, #216]	; 0xd8
   1d490:	ldr	ip, [r4, #220]	; 0xdc
   1d494:	ldr	r1, [sp, #20]
   1d498:	ldr	r8, [sp, #40]	; 0x28
   1d49c:	strd	sl, [sp, #40]	; 0x28
   1d4a0:	ldr	r9, [sp, #28]
   1d4a4:	cmp	ip, r1
   1d4a8:	bls	1d654 <dta_handle_row+0x470>
   1d4ac:	add	r3, r1, ip
   1d4b0:	lsr	r3, r3, #1
   1d4b4:	add	r0, lr, r3, lsl #2
   1d4b8:	ldr	sl, [lr, r3, lsl #2]
   1d4bc:	ldrh	r2, [sl]
   1d4c0:	cmp	r8, r2
   1d4c4:	ldreq	r2, [sl, #8]
   1d4c8:	ldreq	sl, [sp, #32]
   1d4cc:	subeq	r2, sl, r2
   1d4d0:	subne	r2, r8, r2
   1d4d4:	cmp	r2, #0
   1d4d8:	blt	1d660 <dta_handle_row+0x47c>
   1d4dc:	ble	1dab0 <dta_handle_row+0x8cc>
   1d4e0:	add	r1, r3, #1
   1d4e4:	b	1d4a4 <dta_handle_row+0x2c0>
   1d4e8:	ldr	r2, [r4, #232]	; 0xe8
   1d4ec:	cmp	r2, #2
   1d4f0:	beq	1d564 <dta_handle_row+0x380>
   1d4f4:	ldrb	r2, [r3, #1]
   1d4f8:	ldr	r1, [sp, #28]
   1d4fc:	ldrb	r8, [r1, r6]
   1d500:	add	r8, r8, r2, lsl #8
   1d504:	uxth	r2, r8
   1d508:	str	r2, [sp, #40]	; 0x28
   1d50c:	ldrb	r0, [r3, #5]
   1d510:	lsl	ip, r0, #24
   1d514:	ldrb	r0, [r3, #6]
   1d518:	mov	r2, #0
   1d51c:	adds	r8, ip, r2
   1d520:	adc	ip, r2, r0
   1d524:	ldrb	r0, [r3, #7]
   1d528:	lsl	lr, r0, #8
   1d52c:	adds	r2, r8, r2
   1d530:	str	r2, [sp, #56]	; 0x38
   1d534:	adc	r2, ip, lr
   1d538:	str	r2, [sp, #60]	; 0x3c
   1d53c:	ldrb	r1, [r3, #3]
   1d540:	ldrb	r2, [r3, #2]
   1d544:	add	r2, r2, r1, lsl #8
   1d548:	ldrb	r3, [r3, #4]
   1d54c:	add	r3, r2, r3, lsl #16
   1d550:	ldrd	r0, [sp, #56]	; 0x38
   1d554:	adds	r0, r0, r3
   1d558:	adc	r1, r1, r3, asr #31
   1d55c:	strd	r0, [sp, #32]
   1d560:	b	1d48c <dta_handle_row+0x2a8>
   1d564:	ldr	r2, [sp, #28]
   1d568:	ldrb	r2, [r2, r6]
   1d56c:	ldrb	r8, [r3, #1]
   1d570:	add	r8, r8, r2, lsl #8
   1d574:	uxth	r2, r8
   1d578:	str	r2, [sp, #40]	; 0x28
   1d57c:	ldrb	r0, [r3, #2]
   1d580:	lsl	lr, r0, #8
   1d584:	mov	r2, #0
   1d588:	ldrb	r0, [r3, #3]
   1d58c:	adds	ip, r2, r2
   1d590:	adc	r2, lr, r0
   1d594:	ldrb	r0, [r3, #7]
   1d598:	mov	r1, #0
   1d59c:	adds	ip, ip, r0
   1d5a0:	adc	r2, r2, r1
   1d5a4:	ldrb	r0, [r3, #4]
   1d5a8:	lsl	lr, r0, #24
   1d5ac:	adds	r1, ip, lr
   1d5b0:	str	r1, [sp, #64]	; 0x40
   1d5b4:	mov	r1, #0
   1d5b8:	adc	r2, r2, r1
   1d5bc:	str	r2, [sp, #68]	; 0x44
   1d5c0:	ldrb	r2, [r3, #5]
   1d5c4:	lsl	r2, r2, #16
   1d5c8:	ldrd	r0, [sp, #64]	; 0x40
   1d5cc:	adds	r0, r0, r2
   1d5d0:	adc	r1, r1, r2, asr #31
   1d5d4:	ldrb	r3, [r3, #6]
   1d5d8:	lsl	r3, r3, #8
   1d5dc:	adds	r8, r0, r3
   1d5e0:	adc	r9, r1, r3, asr #31
   1d5e4:	strd	r8, [sp, #32]
   1d5e8:	b	1d48c <dta_handle_row+0x2a8>
   1d5ec:	ldr	r0, [r3]
   1d5f0:	ldr	r3, [r3, #4]
   1d5f4:	mov	r8, r3
   1d5f8:	ldrb	r3, [r4, #192]	; 0xc0
   1d5fc:	tst	r3, #1
   1d600:	uxtheq	r3, r0
   1d604:	streq	r3, [sp, #40]	; 0x28
   1d608:	bne	1d62c <dta_handle_row+0x448>
   1d60c:	mov	r2, r8
   1d610:	mov	r3, #0
   1d614:	strd	r2, [sp, #32]
   1d618:	b	1d48c <dta_handle_row+0x2a8>
   1d61c:	nop	{0}
   1d620:	.word	0x00000000
   1d624:	.word	0x7ff80000
   1d628:	.word	0x7fc00000
   1d62c:	bl	3d88 <byteswap4@plt>
   1d630:	uxth	r3, r0
   1d634:	str	r3, [sp, #40]	; 0x28
   1d638:	ldrb	r3, [r4, #192]	; 0xc0
   1d63c:	tst	r3, #1
   1d640:	beq	1d60c <dta_handle_row+0x428>
   1d644:	mov	r0, r8
   1d648:	bl	3d88 <byteswap4@plt>
   1d64c:	mov	r8, r0
   1d650:	b	1d60c <dta_handle_row+0x428>
   1d654:	ldrd	sl, [sp, #40]	; 0x28
   1d658:	str	r9, [sp, #28]
   1d65c:	b	1dac4 <dta_handle_row+0x8e0>
   1d660:	mov	ip, r3
   1d664:	cmp	r3, r1
   1d668:	bhi	1d4ac <dta_handle_row+0x2c8>
   1d66c:	ldrd	sl, [sp, #40]	; 0x28
   1d670:	str	r9, [sp, #28]
   1d674:	b	1dac4 <dta_handle_row+0x8e0>
   1d678:	strd	sl, [sp, #128]	; 0x80
   1d67c:	strd	sl, [sp, #136]	; 0x88
   1d680:	ldr	r3, [sp, #28]
   1d684:	ldrb	r0, [r3, r6]
   1d688:	ldrb	r3, [r4, #192]	; 0xc0
   1d68c:	tst	r3, #2
   1d690:	sxtbeq	r0, r0
   1d694:	bne	1d6e4 <dta_handle_row+0x500>
   1d698:	ldrsb	r3, [r4, #193]	; 0xc1
   1d69c:	cmp	r3, r0
   1d6a0:	bge	1d6f0 <dta_handle_row+0x50c>
   1d6a4:	ldrb	r3, [r4, #192]	; 0xc0
   1d6a8:	ubfx	r3, r3, #3, #1
   1d6ac:	cmp	r0, #101	; 0x65
   1d6b0:	movle	r3, #0
   1d6b4:	andgt	r3, r3, #1
   1d6b8:	str	r3, [sp, #40]	; 0x28
   1d6bc:	cmp	r3, #0
   1d6c0:	moveq	r8, #1
   1d6c4:	moveq	r3, #0
   1d6c8:	streq	r3, [sp, #32]
   1d6cc:	beq	1d700 <dta_handle_row+0x51c>
   1d6d0:	sub	r2, r0, #5
   1d6d4:	uxtb	r3, r2
   1d6d8:	str	r3, [sp, #32]
   1d6dc:	mov	r8, #0
   1d6e0:	b	1d700 <dta_handle_row+0x51c>
   1d6e4:	bl	4370 <ones_to_twos_complement1@plt>
   1d6e8:	sxtb	r0, r0
   1d6ec:	b	1d698 <dta_handle_row+0x4b4>
   1d6f0:	mov	r3, #0
   1d6f4:	str	r3, [sp, #40]	; 0x28
   1d6f8:	mov	r8, r3
   1d6fc:	str	r3, [sp, #32]
   1d700:	strb	r0, [sp, #128]	; 0x80
   1d704:	mov	ip, #1
   1d708:	str	ip, [sp, #136]	; 0x88
   1d70c:	ldr	r2, [sp, #32]
   1d710:	strb	r2, [sp, #140]	; 0x8c
   1d714:	ldrb	r1, [sp, #141]	; 0x8d
   1d718:	bfi	r1, r8, #0, #1
   1d71c:	ldr	r3, [sp, #40]	; 0x28
   1d720:	bfi	r1, r3, #1, #1
   1d724:	strb	r1, [sp, #141]	; 0x8d
   1d728:	add	r1, sp, #2192	; 0x890
   1d72c:	ldrd	r2, [sp, #128]	; 0x80
   1d730:	strd	r2, [r1]
   1d734:	ldrd	r2, [sp, #136]	; 0x88
   1d738:	strd	r2, [r1, #8]
   1d73c:	strb	r0, [sp, #2192]	; 0x890
   1d740:	str	ip, [sp, #2200]	; 0x898
   1d744:	ldr	r2, [sp, #32]
   1d748:	strb	r2, [sp, #2204]	; 0x89c
   1d74c:	ldrb	r2, [sp, #2205]	; 0x89d
   1d750:	bfi	r2, r8, #0, #1
   1d754:	ldr	r3, [sp, #40]	; 0x28
   1d758:	bfi	r2, r3, #1, #1
   1d75c:	strb	r2, [sp, #2205]	; 0x89d
   1d760:	ldrd	r2, [r1]
   1d764:	strd	r2, [sp, #112]	; 0x70
   1d768:	ldrd	r2, [r1, #8]
   1d76c:	strd	r2, [sp, #120]	; 0x78
   1d770:	b	1d2e0 <dta_handle_row+0xfc>
   1d774:	strd	sl, [sp, #128]	; 0x80
   1d778:	strd	sl, [sp, #136]	; 0x88
   1d77c:	ldr	r3, [sp, #28]
   1d780:	ldrh	r0, [r3, r6]
   1d784:	ldrb	r3, [r4, #192]	; 0xc0
   1d788:	tst	r3, #1
   1d78c:	bne	1d7f4 <dta_handle_row+0x610>
   1d790:	sxth	r3, r0
   1d794:	str	r3, [sp, #32]
   1d798:	ldrb	r3, [r4, #192]	; 0xc0
   1d79c:	tst	r3, #2
   1d7a0:	bne	1d804 <dta_handle_row+0x620>
   1d7a4:	ldrsh	r3, [r4, #194]	; 0xc2
   1d7a8:	ldr	r1, [sp, #32]
   1d7ac:	cmp	r3, r1
   1d7b0:	bge	1d814 <dta_handle_row+0x630>
   1d7b4:	ldrb	r3, [r4, #192]	; 0xc0
   1d7b8:	ubfx	r3, r3, #3, #1
   1d7bc:	movw	r2, #32741	; 0x7fe5
   1d7c0:	cmp	r1, r2
   1d7c4:	movle	r3, #0
   1d7c8:	andgt	r3, r3, #1
   1d7cc:	cmp	r3, #0
   1d7d0:	moveq	lr, #1
   1d7d4:	moveq	r2, #0
   1d7d8:	streq	r2, [sp, #40]	; 0x28
   1d7dc:	beq	1d820 <dta_handle_row+0x63c>
   1d7e0:	add	r1, r1, #123	; 0x7b
   1d7e4:	uxtb	r2, r1
   1d7e8:	str	r2, [sp, #40]	; 0x28
   1d7ec:	mov	lr, #0
   1d7f0:	b	1d820 <dta_handle_row+0x63c>
   1d7f4:	bl	3e9c <byteswap2@plt>
   1d7f8:	sxth	r3, r0
   1d7fc:	str	r3, [sp, #32]
   1d800:	b	1d798 <dta_handle_row+0x5b4>
   1d804:	ldr	r0, [sp, #32]
   1d808:	bl	3efc <ones_to_twos_complement2@plt>
   1d80c:	str	r0, [sp, #32]
   1d810:	b	1d7a4 <dta_handle_row+0x5c0>
   1d814:	mov	r3, #0
   1d818:	mov	lr, r3
   1d81c:	str	r3, [sp, #40]	; 0x28
   1d820:	ldr	r0, [sp, #32]
   1d824:	strh	r0, [sp, #128]	; 0x80
   1d828:	mov	r8, #2
   1d82c:	str	r8, [sp, #136]	; 0x88
   1d830:	ldr	r1, [sp, #40]	; 0x28
   1d834:	strb	r1, [sp, #140]	; 0x8c
   1d838:	ldrb	ip, [sp, #141]	; 0x8d
   1d83c:	bfi	ip, lr, #0, #1
   1d840:	bfi	ip, r3, #1, #1
   1d844:	strb	ip, [sp, #141]	; 0x8d
   1d848:	add	ip, sp, #2208	; 0x8a0
   1d84c:	ldrd	r0, [sp, #128]	; 0x80
   1d850:	strd	r0, [ip]
   1d854:	ldrd	r0, [sp, #136]	; 0x88
   1d858:	strd	r0, [ip, #8]
   1d85c:	ldr	r0, [sp, #32]
   1d860:	strh	r0, [ip]
   1d864:	str	r8, [sp, #2216]	; 0x8a8
   1d868:	ldr	r2, [sp, #40]	; 0x28
   1d86c:	strb	r2, [sp, #2220]	; 0x8ac
   1d870:	ldrb	r2, [sp, #2221]	; 0x8ad
   1d874:	bfi	r2, lr, #0, #1
   1d878:	bfi	r2, r3, #1, #1
   1d87c:	strb	r2, [sp, #2221]	; 0x8ad
   1d880:	ldrd	r2, [ip]
   1d884:	strd	r2, [sp, #112]	; 0x70
   1d888:	ldrd	r2, [ip, #8]
   1d88c:	strd	r2, [sp, #120]	; 0x78
   1d890:	b	1d2e0 <dta_handle_row+0xfc>
   1d894:	add	r8, sp, #80	; 0x50
   1d898:	add	r9, sp, #72	; 0x48
   1d89c:	ldr	r3, [sp, #28]
   1d8a0:	add	r2, r3, r6
   1d8a4:	mov	r1, r4
   1d8a8:	mov	r0, r9
   1d8ac:	bl	1d118 <dta_interpret_int32_bytes>
   1d8b0:	ldrd	r2, [r8, #-8]
   1d8b4:	strd	r2, [sp, #112]	; 0x70
   1d8b8:	ldrd	r2, [r9, #8]
   1d8bc:	strd	r2, [sp, #120]	; 0x78
   1d8c0:	b	1d2e0 <dta_handle_row+0xfc>
   1d8c4:	strd	sl, [sp, #128]	; 0x80
   1d8c8:	strd	sl, [sp, #136]	; 0x88
   1d8cc:	vstr	s16, [sp, #104]	; 0x68
   1d8d0:	ldr	r3, [sp, #28]
   1d8d4:	ldr	r0, [r3, r6]
   1d8d8:	ldrb	r3, [r4, #192]	; 0xc0
   1d8dc:	tst	r3, #1
   1d8e0:	bne	1d940 <dta_handle_row+0x75c>
   1d8e4:	ldr	r3, [r4, #200]	; 0xc8
   1d8e8:	cmp	r3, r0
   1d8ec:	bge	1d948 <dta_handle_row+0x764>
   1d8f0:	ldrb	r2, [r4, #192]	; 0xc0
   1d8f4:	ubfx	r2, r2, #3, #1
   1d8f8:	cmp	r0, #2130706432	; 0x7f000000
   1d8fc:	movle	r2, #0
   1d900:	andgt	r2, r2, #1
   1d904:	mov	r3, r2
   1d908:	str	r2, [sp, #32]
   1d90c:	cmp	r2, #0
   1d910:	moveq	r8, #1
   1d914:	moveq	r3, #0
   1d918:	streq	r3, [sp, #40]	; 0x28
   1d91c:	beq	1d95c <dta_handle_row+0x778>
   1d920:	add	r0, r0, #-2130706432	; 0x81000000
   1d924:	sub	r0, r0, #2048	; 0x800
   1d928:	asr	r3, r0, #11
   1d92c:	add	r3, r3, #97	; 0x61
   1d930:	uxtb	r3, r3
   1d934:	str	r3, [sp, #40]	; 0x28
   1d938:	mov	r8, #0
   1d93c:	b	1d95c <dta_handle_row+0x778>
   1d940:	bl	3d88 <byteswap4@plt>
   1d944:	b	1d8e4 <dta_handle_row+0x700>
   1d948:	str	r0, [sp, #104]	; 0x68
   1d94c:	mov	r3, #0
   1d950:	str	r3, [sp, #32]
   1d954:	mov	r8, r3
   1d958:	str	r3, [sp, #40]	; 0x28
   1d95c:	vldr	s15, [sp, #104]	; 0x68
   1d960:	vstr	s15, [sp, #128]	; 0x80
   1d964:	mov	lr, #4
   1d968:	str	lr, [sp, #136]	; 0x88
   1d96c:	ldr	r3, [sp, #40]	; 0x28
   1d970:	strb	r3, [sp, #140]	; 0x8c
   1d974:	ldrb	ip, [sp, #141]	; 0x8d
   1d978:	bfi	ip, r8, #0, #1
   1d97c:	ldr	r2, [sp, #32]
   1d980:	bfi	ip, r2, #1, #1
   1d984:	strb	ip, [sp, #141]	; 0x8d
   1d988:	add	ip, sp, #2224	; 0x8b0
   1d98c:	ldrd	r2, [sp, #128]	; 0x80
   1d990:	strd	r2, [ip]
   1d994:	ldrd	r2, [sp, #136]	; 0x88
   1d998:	strd	r2, [ip, #8]
   1d99c:	vstr	s15, [ip]
   1d9a0:	str	lr, [sp, #2232]	; 0x8b8
   1d9a4:	ldr	r3, [sp, #40]	; 0x28
   1d9a8:	strb	r3, [sp, #2236]	; 0x8bc
   1d9ac:	ldrb	r3, [sp, #2237]	; 0x8bd
   1d9b0:	bfi	r3, r8, #0, #1
   1d9b4:	ldr	r2, [sp, #32]
   1d9b8:	bfi	r3, r2, #1, #1
   1d9bc:	strb	r3, [sp, #2237]	; 0x8bd
   1d9c0:	ldrd	r2, [ip]
   1d9c4:	strd	r2, [sp, #112]	; 0x70
   1d9c8:	ldrd	r2, [ip, #8]
   1d9cc:	strd	r2, [sp, #120]	; 0x78
   1d9d0:	b	1d2e0 <dta_handle_row+0xfc>
   1d9d4:	add	r8, sp, #112	; 0x70
   1d9d8:	ldrd	r0, [sp, #104]	; 0x68
   1d9dc:	bl	3d70 <byteswap8@plt>
   1d9e0:	strd	r0, [r8, #-8]
   1d9e4:	b	1d3fc <dta_handle_row+0x218>
   1d9e8:	ldr	r3, [sp, #48]	; 0x30
   1d9ec:	strd	r0, [r3]
   1d9f0:	mov	ip, #0
   1d9f4:	mov	r8, ip
   1d9f8:	mov	r1, ip
   1d9fc:	ldr	r3, [sp, #48]	; 0x30
   1da00:	vldr	d7, [r3]
   1da04:	vstr	d7, [sp, #128]	; 0x80
   1da08:	mov	lr, #5
   1da0c:	str	lr, [sp, #136]	; 0x88
   1da10:	strb	r1, [sp, #140]	; 0x8c
   1da14:	ldrb	r2, [sp, #141]	; 0x8d
   1da18:	bfi	r2, r8, #0, #1
   1da1c:	bfi	r2, ip, #1, #1
   1da20:	strb	r2, [sp, #141]	; 0x8d
   1da24:	add	r0, sp, #2240	; 0x8c0
   1da28:	ldrd	r2, [sp, #136]	; 0x88
   1da2c:	strd	r2, [r0, #8]
   1da30:	vstr	d7, [r0]
   1da34:	str	lr, [sp, #2248]	; 0x8c8
   1da38:	strb	r1, [sp, #2252]	; 0x8cc
   1da3c:	ldrb	r3, [sp, #2253]	; 0x8cd
   1da40:	bfi	r3, r8, #0, #1
   1da44:	bfi	r3, ip, #1, #1
   1da48:	strb	r3, [sp, #2253]	; 0x8cd
   1da4c:	ldrd	r2, [r0]
   1da50:	strd	r2, [sp, #112]	; 0x70
   1da54:	ldrd	r2, [r0, #8]
   1da58:	strd	r2, [sp, #120]	; 0x78
   1da5c:	b	1d2e0 <dta_handle_row+0xfc>
   1da60:	mov	r3, #5
   1da64:	str	r3, [sp, #20]
   1da68:	ldr	r0, [sp, #20]
   1da6c:	add	sp, sp, #2256	; 0x8d0
   1da70:	add	sp, sp, #4
   1da74:	vpop	{d8-d9}
   1da78:	ldrd	r4, [sp]
   1da7c:	ldrd	r6, [sp, #8]
   1da80:	ldrd	r8, [sp, #16]
   1da84:	ldrd	sl, [sp, #24]
   1da88:	add	sp, sp, #32
   1da8c:	pop	{pc}		; (ldr pc, [sp], #4)
   1da90:	str	r0, [sp, #20]
   1da94:	b	1da68 <dta_handle_row+0x884>
   1da98:	mov	r3, #4
   1da9c:	str	r3, [sp, #20]
   1daa0:	b	1da68 <dta_handle_row+0x884>
   1daa4:	mov	r3, #0
   1daa8:	str	r3, [sp, #20]
   1daac:	b	1da68 <dta_handle_row+0x884>
   1dab0:	ldrd	sl, [sp, #40]	; 0x28
   1dab4:	str	r9, [sp, #28]
   1dab8:	ldr	r3, [r0]
   1dabc:	add	r3, r3, #24
   1dac0:	str	r3, [sp, #112]	; 0x70
   1dac4:	mov	r3, #0
   1dac8:	str	r3, [sp, #120]	; 0x78
   1dacc:	b	1d2e0 <dta_handle_row+0xfc>

0001dad0 <readstat_parse_dta>:
   1dad0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1dad4:	strd	r6, [sp, #8]
   1dad8:	strd	r8, [sp, #16]
   1dadc:	strd	sl, [sp, #24]
   1dae0:	str	lr, [sp, #32]
   1dae4:	sub	sp, sp, #260	; 0x104
   1dae8:	mov	r6, r0
   1daec:	mov	r7, r1
   1daf0:	mov	r9, r2
   1daf4:	ldr	r4, [r0, #32]
   1daf8:	mov	r0, r4
   1dafc:	bl	455c <dta_ctx_alloc@plt>
   1db00:	mov	r5, r0
   1db04:	ldr	r3, [r4]
   1db08:	ldr	r1, [r4, #20]
   1db0c:	mov	r0, r7
   1db10:	blx	r3
   1db14:	cmn	r0, #1
   1db18:	beq	1f5a0 <readstat_parse_dta+0x1ad0>
   1db1c:	ldr	r3, [r4, #12]
   1db20:	ldr	r2, [r4, #20]
   1db24:	mov	r1, #4
   1db28:	add	r0, sp, #252	; 0xfc
   1db2c:	blx	r3
   1db30:	cmp	r0, #4
   1db34:	bne	1f5a8 <readstat_parse_dta+0x1ad8>
   1db38:	ldr	r3, [r4, #8]
   1db3c:	ldr	r2, [r4, #20]
   1db40:	mov	r1, #2
   1db44:	mov	r0, #0
   1db48:	blx	r3
   1db4c:	mov	r8, r0
   1db50:	cmn	r0, #1
   1db54:	beq	1dc74 <readstat_parse_dta+0x1a4>
   1db58:	ldr	r3, [r4, #8]
   1db5c:	ldr	r2, [r4, #20]
   1db60:	mov	r1, #0
   1db64:	mov	r0, r1
   1db68:	blx	r3
   1db6c:	cmn	r0, #1
   1db70:	beq	1dce0 <readstat_parse_dta+0x210>
   1db74:	mov	r2, #4
   1db78:	ldr	r1, [pc, #3920]	; 1ead0 <readstat_parse_dta+0x1000>
   1db7c:	add	r1, pc, r1
   1db80:	add	r0, sp, #252	; 0xfc
   1db84:	bl	44fc <strncmp@plt>
   1db88:	cmp	r0, #0
   1db8c:	bne	1e190 <readstat_parse_dta+0x6c0>
   1db90:	ldr	r1, [pc, #3900]	; 1ead4 <readstat_parse_dta+0x1004>
   1db94:	add	r1, pc, r1
   1db98:	mov	r0, r5
   1db9c:	bl	1d010 <dta_read_tag>
   1dba0:	subs	r7, r0, #0
   1dba4:	bne	1f5ac <readstat_parse_dta+0x1adc>
   1dba8:	ldr	r1, [pc, #3880]	; 1ead8 <readstat_parse_dta+0x1008>
   1dbac:	add	r1, pc, r1
   1dbb0:	mov	r0, r5
   1dbb4:	bl	1d010 <dta_read_tag>
   1dbb8:	subs	r7, r0, #0
   1dbbc:	bne	1f5ac <readstat_parse_dta+0x1adc>
   1dbc0:	ldr	r3, [pc, #3860]	; 1eadc <readstat_parse_dta+0x100c>
   1dbc4:	add	r3, pc, r3
   1dbc8:	str	r3, [sp]
   1dbcc:	mov	r3, #3
   1dbd0:	add	r2, sp, #64	; 0x40
   1dbd4:	ldr	r1, [pc, #3844]	; 1eae0 <readstat_parse_dta+0x1010>
   1dbd8:	add	r1, pc, r1
   1dbdc:	mov	r0, r5
   1dbe0:	bl	1d0a8 <dta_read_chunk>
   1dbe4:	subs	r7, r0, #0
   1dbe8:	bne	1f5ac <readstat_parse_dta+0x1adc>
   1dbec:	ldrb	r3, [sp, #64]	; 0x40
   1dbf0:	str	r3, [sp, #20]
   1dbf4:	ldrb	r3, [sp, #65]	; 0x41
   1dbf8:	str	r3, [sp, #24]
   1dbfc:	ldrb	r3, [sp, #66]	; 0x42
   1dc00:	str	r3, [sp, #28]
   1dc04:	ldr	r3, [pc, #3800]	; 1eae4 <readstat_parse_dta+0x1014>
   1dc08:	add	r3, pc, r3
   1dc0c:	str	r3, [sp]
   1dc10:	mov	r3, #3
   1dc14:	add	r2, sp, #80	; 0x50
   1dc18:	ldr	r1, [pc, #3784]	; 1eae8 <readstat_parse_dta+0x1018>
   1dc1c:	add	r1, pc, r1
   1dc20:	mov	r0, r5
   1dc24:	bl	1d0a8 <dta_read_chunk>
   1dc28:	subs	r7, r0, #0
   1dc2c:	bne	1f5ac <readstat_parse_dta+0x1adc>
   1dc30:	mov	r2, #3
   1dc34:	ldr	r1, [pc, #3760]	; 1eaec <readstat_parse_dta+0x101c>
   1dc38:	add	r1, pc, r1
   1dc3c:	add	r0, sp, #80	; 0x50
   1dc40:	bl	44fc <strncmp@plt>
   1dc44:	cmp	r0, #0
   1dc48:	beq	1dd4c <readstat_parse_dta+0x27c>
   1dc4c:	mov	r2, #3
   1dc50:	ldr	r1, [pc, #3736]	; 1eaf0 <readstat_parse_dta+0x1020>
   1dc54:	add	r1, pc, r1
   1dc58:	add	r0, sp, #80	; 0x50
   1dc5c:	bl	44fc <strncmp@plt>
   1dc60:	cmp	r0, #0
   1dc64:	bne	1f83c <readstat_parse_dta+0x1d6c>
   1dc68:	mov	r3, #2
   1dc6c:	str	r3, [sp, #16]
   1dc70:	b	1dd54 <readstat_parse_dta+0x284>
   1dc74:	ldr	r2, [r5, #264]	; 0x108
   1dc78:	cmp	r2, #0
   1dc7c:	moveq	r7, #15
   1dc80:	beq	1e1b4 <readstat_parse_dta+0x6e4>
   1dc84:	add	r0, r5, #288	; 0x120
   1dc88:	ldr	r3, [pc, #3684]	; 1eaf4 <readstat_parse_dta+0x1024>
   1dc8c:	add	r3, pc, r3
   1dc90:	ldr	ip, [r3]
   1dc94:	ldr	r1, [r3, #4]
   1dc98:	str	ip, [r5, #288]	; 0x120
   1dc9c:	str	r1, [r0, #4]
   1dca0:	ldr	ip, [r3, #8]
   1dca4:	ldr	r1, [r3, #12]
   1dca8:	str	ip, [r0, #8]
   1dcac:	str	r1, [r0, #12]
   1dcb0:	ldr	ip, [r3, #16]
   1dcb4:	ldr	r1, [r3, #20]
   1dcb8:	str	ip, [r0, #16]
   1dcbc:	str	r1, [r0, #20]
   1dcc0:	ldr	r1, [r3, #24]
   1dcc4:	str	r1, [r0, #24]
   1dcc8:	ldrh	r3, [r3, #28]
   1dccc:	strh	r3, [r0, #28]
   1dcd0:	ldr	r1, [r5, #276]	; 0x114
   1dcd4:	blx	r2
   1dcd8:	mov	r7, #15
   1dcdc:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1dce0:	ldr	r2, [r5, #264]	; 0x108
   1dce4:	cmp	r2, #0
   1dce8:	moveq	r7, #15
   1dcec:	beq	1e1b4 <readstat_parse_dta+0x6e4>
   1dcf0:	add	r0, r5, #288	; 0x120
   1dcf4:	ldr	r3, [pc, #3580]	; 1eaf8 <readstat_parse_dta+0x1028>
   1dcf8:	add	r3, pc, r3
   1dcfc:	ldr	ip, [r3]
   1dd00:	ldr	r1, [r3, #4]
   1dd04:	str	ip, [r5, #288]	; 0x120
   1dd08:	str	r1, [r0, #4]
   1dd0c:	ldr	ip, [r3, #8]
   1dd10:	ldr	r1, [r3, #12]
   1dd14:	str	ip, [r0, #8]
   1dd18:	str	r1, [r0, #12]
   1dd1c:	ldr	ip, [r3, #16]
   1dd20:	ldr	r1, [r3, #20]
   1dd24:	str	ip, [r0, #16]
   1dd28:	str	r1, [r0, #20]
   1dd2c:	ldr	r1, [r3, #24]
   1dd30:	ldr	r3, [r3, #28]
   1dd34:	str	r1, [r0, #24]
   1dd38:	str	r3, [r0, #28]
   1dd3c:	ldr	r1, [r5, #276]	; 0x114
   1dd40:	blx	r2
   1dd44:	mov	r7, #15
   1dd48:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1dd4c:	mov	r3, #1
   1dd50:	str	r3, [sp, #16]
   1dd54:	ldr	r3, [sp, #20]
   1dd58:	sub	r3, r3, #48	; 0x30
   1dd5c:	add	r3, r3, r3, lsl #2
   1dd60:	add	r2, r3, r3, lsl #2
   1dd64:	ldr	r3, [sp, #28]
   1dd68:	sub	r3, r3, #48	; 0x30
   1dd6c:	add	r3, r3, r2, lsl #2
   1dd70:	ldr	r2, [sp, #24]
   1dd74:	sub	r2, r2, #48	; 0x30
   1dd78:	add	r2, r2, r2, lsl #2
   1dd7c:	add	r3, r3, r2, lsl #1
   1dd80:	uxtb	r7, r3
   1dd84:	str	r7, [sp, #20]
   1dd88:	ldr	r3, [sp, #16]
   1dd8c:	cmp	r3, #2
   1dd90:	movne	r3, #0
   1dd94:	moveq	r3, #1
   1dd98:	str	r3, [sp, #28]
   1dd9c:	bl	3ea8 <machine_is_little_endian@plt>
   1dda0:	str	r0, [sp, #40]	; 0x28
   1dda4:	cmp	r7, #118	; 0x76
   1dda8:	bls	1de48 <readstat_parse_dta+0x378>
   1ddac:	ldr	r3, [pc, #3400]	; 1eafc <readstat_parse_dta+0x102c>
   1ddb0:	add	r3, pc, r3
   1ddb4:	str	r3, [sp]
   1ddb8:	mov	r3, #4
   1ddbc:	add	r2, sp, #120	; 0x78
   1ddc0:	ldr	r1, [pc, #3384]	; 1eb00 <readstat_parse_dta+0x1030>
   1ddc4:	add	r1, pc, r1
   1ddc8:	mov	r0, r5
   1ddcc:	bl	1d0a8 <dta_read_chunk>
   1ddd0:	subs	r7, r0, #0
   1ddd4:	bne	1f5ac <readstat_parse_dta+0x1adc>
   1ddd8:	ldr	r3, [sp, #28]
   1dddc:	ldr	r2, [sp, #40]	; 0x28
   1dde0:	cmp	r3, r2
   1dde4:	bne	1de38 <readstat_parse_dta+0x368>
   1dde8:	ldr	r3, [sp, #120]	; 0x78
   1ddec:	str	r3, [sp, #24]
   1ddf0:	ldr	r3, [pc, #3340]	; 1eb04 <readstat_parse_dta+0x1034>
   1ddf4:	add	r3, pc, r3
   1ddf8:	str	r3, [sp]
   1ddfc:	mov	r3, #8
   1de00:	add	r2, sp, #120	; 0x78
   1de04:	ldr	r1, [pc, #3324]	; 1eb08 <readstat_parse_dta+0x1038>
   1de08:	add	r1, pc, r1
   1de0c:	mov	r0, r5
   1de10:	bl	1d0a8 <dta_read_chunk>
   1de14:	subs	r7, r0, #0
   1de18:	bne	1f5ac <readstat_parse_dta+0x1adc>
   1de1c:	ldr	r3, [sp, #28]
   1de20:	ldr	r2, [sp, #40]	; 0x28
   1de24:	cmp	r3, r2
   1de28:	bne	1e170 <readstat_parse_dta+0x6a0>
   1de2c:	ldr	r2, [sp, #120]	; 0x78
   1de30:	ldr	r3, [sp, #124]	; 0x7c
   1de34:	b	1dee0 <readstat_parse_dta+0x410>
   1de38:	ldr	r0, [sp, #120]	; 0x78
   1de3c:	bl	3d88 <byteswap4@plt>
   1de40:	str	r0, [sp, #24]
   1de44:	b	1ddf0 <readstat_parse_dta+0x320>
   1de48:	ldr	r3, [pc, #3260]	; 1eb0c <readstat_parse_dta+0x103c>
   1de4c:	add	r3, pc, r3
   1de50:	str	r3, [sp]
   1de54:	mov	r3, #2
   1de58:	add	r2, sp, #120	; 0x78
   1de5c:	ldr	r1, [pc, #3244]	; 1eb10 <readstat_parse_dta+0x1040>
   1de60:	add	r1, pc, r1
   1de64:	mov	r0, r5
   1de68:	bl	1d0a8 <dta_read_chunk>
   1de6c:	subs	r7, r0, #0
   1de70:	bne	1f5ac <readstat_parse_dta+0x1adc>
   1de74:	ldr	r3, [sp, #28]
   1de78:	ldr	r2, [sp, #40]	; 0x28
   1de7c:	cmp	r3, r2
   1de80:	bne	1e160 <readstat_parse_dta+0x690>
   1de84:	ldrh	r3, [sp, #120]	; 0x78
   1de88:	str	r3, [sp, #24]
   1de8c:	ldr	r3, [sp, #20]
   1de90:	cmp	r3, #118	; 0x76
   1de94:	beq	1ddf0 <readstat_parse_dta+0x320>
   1de98:	ldr	r3, [pc, #3188]	; 1eb14 <readstat_parse_dta+0x1044>
   1de9c:	add	r3, pc, r3
   1dea0:	str	r3, [sp]
   1dea4:	mov	r3, #4
   1dea8:	add	r2, sp, #120	; 0x78
   1deac:	ldr	r1, [pc, #3172]	; 1eb18 <readstat_parse_dta+0x1048>
   1deb0:	add	r1, pc, r1
   1deb4:	mov	r0, r5
   1deb8:	bl	1d0a8 <dta_read_chunk>
   1debc:	subs	r7, r0, #0
   1dec0:	bne	1f5ac <readstat_parse_dta+0x1adc>
   1dec4:	ldr	r3, [sp, #28]
   1dec8:	ldr	r2, [sp, #40]	; 0x28
   1decc:	cmp	r3, r2
   1ded0:	bne	1e184 <readstat_parse_dta+0x6b4>
   1ded4:	ldr	r0, [sp, #120]	; 0x78
   1ded8:	mov	r2, r0
   1dedc:	mov	r3, #0
   1dee0:	ldr	ip, [r6, #40]	; 0x28
   1dee4:	str	ip, [sp, #12]
   1dee8:	ldr	ip, [r6, #36]	; 0x24
   1deec:	str	ip, [sp, #8]
   1def0:	ldr	r1, [sp, #20]
   1def4:	str	r1, [sp, #4]
   1def8:	ldr	r1, [sp, #16]
   1defc:	str	r1, [sp]
   1df00:	ldr	r1, [sp, #24]
   1df04:	mov	r0, r5
   1df08:	bl	41cc <dta_ctx_init@plt>
   1df0c:	subs	r7, r0, #0
   1df10:	bne	1f5ac <readstat_parse_dta+0x1adc>
   1df14:	str	r9, [r5, #276]	; 0x114
   1df18:	str	r8, [r5, #272]	; 0x110
   1df1c:	add	r1, r5, #240	; 0xf0
   1df20:	ldrd	r2, [r6]
   1df24:	strd	r2, [r5, #240]	; 0xf0
   1df28:	ldrd	r2, [r6, #8]
   1df2c:	strd	r2, [r5, #248]	; 0xf8
   1df30:	ldrd	r2, [r6, #16]
   1df34:	strd	r2, [r1, #16]
   1df38:	ldrd	r2, [r6, #24]
   1df3c:	strd	r2, [r1, #24]
   1df40:	ldr	r2, [r6, #48]	; 0x30
   1df44:	cmp	r2, #0
   1df48:	asrgt	r3, r2, #31
   1df4c:	strdgt	r2, [r5, #176]	; 0xb0
   1df50:	ldr	r3, [r5, #152]	; 0x98
   1df54:	ldr	r1, [r5, #156]	; 0x9c
   1df58:	ldr	r2, [r5, #176]	; 0xb0
   1df5c:	ldr	r0, [r5, #180]	; 0xb4
   1df60:	subs	sl, r3, r2
   1df64:	sbc	fp, r1, r0
   1df68:	cmp	sl, #0
   1df6c:	sbcs	r2, fp, #0
   1df70:	blt	1e270 <readstat_parse_dta+0x7a0>
   1df74:	strd	sl, [r5, #168]	; 0xa8
   1df78:	ldr	r2, [r6, #44]	; 0x2c
   1df7c:	cmp	r2, #0
   1df80:	ble	1df94 <readstat_parse_dta+0x4c4>
   1df84:	asr	r3, r2, #31
   1df88:	cmp	r2, sl
   1df8c:	sbcs	r1, r3, fp
   1df90:	strdlt	r2, [r5, #168]	; 0xa8
   1df94:	mov	r0, r5
   1df98:	bl	1cf80 <dta_update_progress>
   1df9c:	subs	r7, r0, #0
   1dfa0:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1dfa4:	ldr	sl, [r5, #280]	; 0x118
   1dfa8:	mov	r3, #0
   1dfac:	strh	r3, [sp, #80]	; 0x50
   1dfb0:	strb	r3, [sp, #63]	; 0x3f
   1dfb4:	str	r3, [sp, #120]	; 0x78
   1dfb8:	str	r3, [sp, #124]	; 0x7c
   1dfbc:	str	r3, [sp, #128]	; 0x80
   1dfc0:	str	r3, [sp, #132]	; 0x84
   1dfc4:	str	r3, [sp, #136]	; 0x88
   1dfc8:	str	r3, [sp, #140]	; 0x8c
   1dfcc:	str	r3, [sp, #144]	; 0x90
   1dfd0:	str	r3, [sp, #148]	; 0x94
   1dfd4:	str	r3, [sp, #156]	; 0x9c
   1dfd8:	str	r3, [sp, #160]	; 0xa0
   1dfdc:	mvn	r3, #0
   1dfe0:	str	r3, [sp, #152]	; 0x98
   1dfe4:	ldrb	r3, [r5, #192]	; 0xc0
   1dfe8:	tst	r3, #4
   1dfec:	bne	1e284 <readstat_parse_dta+0x7b4>
   1dff0:	ldr	r3, [r5, #4]
   1dff4:	strh	r3, [sp, #80]	; 0x50
   1dff8:	ldrh	r0, [sp, #80]	; 0x50
   1dffc:	add	r0, r0, #1
   1e000:	bl	422c <readstat_malloc@plt>
   1e004:	subs	r8, r0, #0
   1e008:	beq	1f834 <readstat_parse_dta+0x1d64>
   1e00c:	ldr	r3, [sl, #12]
   1e010:	ldr	r2, [sl, #20]
   1e014:	ldrh	r1, [sp, #80]	; 0x50
   1e018:	mov	r0, r8
   1e01c:	blx	r3
   1e020:	ldrh	r3, [sp, #80]	; 0x50
   1e024:	cmp	r0, r3
   1e028:	bne	1f5e8 <readstat_parse_dta+0x1b18>
   1e02c:	ldrb	r2, [r5, #192]	; 0xc0
   1e030:	tst	r2, #4
   1e034:	movne	fp, #0
   1e038:	bne	1e058 <readstat_parse_dta+0x588>
   1e03c:	add	r2, r8, r3
   1e040:	ldrb	fp, [r2, #-1]
   1e044:	mov	r2, #0
   1e048:	strb	r2, [r8, r3]
   1e04c:	mov	r0, r8
   1e050:	bl	41fc <strlen@plt>
   1e054:	strh	r0, [sp, #80]	; 0x50
   1e058:	ldrh	r0, [sp, #80]	; 0x50
   1e05c:	lsl	r0, r0, #2
   1e060:	add	r0, r0, #1
   1e064:	bl	422c <readstat_malloc@plt>
   1e068:	mov	r6, r0
   1e06c:	str	r0, [r5]
   1e070:	cmp	r0, #0
   1e074:	moveq	r7, #3
   1e078:	beq	1f5f0 <readstat_parse_dta+0x1b20>
   1e07c:	ldrh	r3, [sp, #80]	; 0x50
   1e080:	lsl	r1, r3, #2
   1e084:	ldr	r2, [r5, #236]	; 0xec
   1e088:	str	r2, [sp]
   1e08c:	mov	r2, r8
   1e090:	add	r1, r1, #1
   1e094:	bl	4238 <readstat_convert@plt>
   1e098:	subs	r7, r0, #0
   1e09c:	movne	r6, #0
   1e0a0:	bne	1f5f0 <readstat_parse_dta+0x1b20>
   1e0a4:	ldrb	r3, [r5, #192]	; 0xc0
   1e0a8:	tst	r3, #4
   1e0ac:	bne	1e31c <readstat_parse_dta+0x84c>
   1e0b0:	ldr	r3, [r5, #16]
   1e0b4:	strb	r3, [sp, #63]	; 0x3f
   1e0b8:	ldrb	r0, [sp, #63]	; 0x3f
   1e0bc:	cmp	r0, #0
   1e0c0:	beq	1e394 <readstat_parse_dta+0x8c4>
   1e0c4:	bl	422c <readstat_malloc@plt>
   1e0c8:	mov	r6, r0
   1e0cc:	ldr	r3, [sl, #12]
   1e0d0:	ldr	r2, [sl, #20]
   1e0d4:	ldrb	r1, [sp, #63]	; 0x3f
   1e0d8:	blx	r3
   1e0dc:	ldrb	r3, [sp, #63]	; 0x3f
   1e0e0:	cmp	r0, r3
   1e0e4:	movne	r7, #2
   1e0e8:	bne	1f5f0 <readstat_parse_dta+0x1b20>
   1e0ec:	ldrb	r2, [r5, #192]	; 0xc0
   1e0f0:	tst	r2, #4
   1e0f4:	subeq	r3, r3, #1
   1e0f8:	strbeq	r3, [sp, #63]	; 0x3f
   1e0fc:	ldrb	r3, [r6]
   1e100:	cmp	r3, #0
   1e104:	beq	1e398 <readstat_parse_dta+0x8c8>
   1e108:	ldrb	r2, [sp, #63]	; 0x3f
   1e10c:	add	r3, r6, r2
   1e110:	ldrb	r1, [r3, #-1]
   1e114:	adds	r3, fp, #0
   1e118:	movne	r3, #1
   1e11c:	cmp	r1, #0
   1e120:	movne	r3, #0
   1e124:	cmp	r3, #0
   1e128:	bne	1e37c <readstat_parse_dta+0x8ac>
   1e12c:	ldr	r3, [r5, #264]	; 0x108
   1e130:	ldr	r2, [r5, #276]	; 0x114
   1e134:	str	r2, [sp]
   1e138:	add	r2, sp, #120	; 0x78
   1e13c:	ldrb	r1, [sp, #63]	; 0x3f
   1e140:	mov	r0, r6
   1e144:	bl	42ec <dta_parse_timestamp@plt>
   1e148:	subs	r7, r0, #0
   1e14c:	bne	1f5f0 <readstat_parse_dta+0x1b20>
   1e150:	add	r0, sp, #120	; 0x78
   1e154:	bl	3e48 <mktime@plt>
   1e158:	str	r0, [r5, #12]
   1e15c:	b	1e398 <readstat_parse_dta+0x8c8>
   1e160:	ldrh	r0, [sp, #120]	; 0x78
   1e164:	bl	3e9c <byteswap2@plt>
   1e168:	str	r0, [sp, #24]
   1e16c:	b	1de8c <readstat_parse_dta+0x3bc>
   1e170:	ldrd	r0, [sp, #120]	; 0x78
   1e174:	bl	3d70 <byteswap8@plt>
   1e178:	mov	r2, r0
   1e17c:	mov	r3, r1
   1e180:	b	1dee0 <readstat_parse_dta+0x410>
   1e184:	ldr	r0, [sp, #120]	; 0x78
   1e188:	bl	3d88 <byteswap4@plt>
   1e18c:	b	1ded8 <readstat_parse_dta+0x408>
   1e190:	ldr	r2, [r5, #280]	; 0x118
   1e194:	ldr	r3, [r2, #12]
   1e198:	ldr	r2, [r2, #20]
   1e19c:	mov	r1, #10
   1e1a0:	add	r0, sp, #120	; 0x78
   1e1a4:	blx	r3
   1e1a8:	cmp	r0, #10
   1e1ac:	movne	r7, #2
   1e1b0:	beq	1e1e8 <readstat_parse_dta+0x718>
   1e1b4:	ldr	r3, [r4, #4]
   1e1b8:	ldr	r0, [r4, #20]
   1e1bc:	blx	r3
   1e1c0:	mov	r0, r5
   1e1c4:	bl	3e6c <dta_ctx_free@plt>
   1e1c8:	mov	r0, r7
   1e1cc:	add	sp, sp, #260	; 0x104
   1e1d0:	ldrd	r4, [sp]
   1e1d4:	ldrd	r6, [sp, #8]
   1e1d8:	ldrd	r8, [sp, #16]
   1e1dc:	ldrd	sl, [sp, #24]
   1e1e0:	add	sp, sp, #32
   1e1e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1e1e8:	ldrb	r7, [sp, #121]	; 0x79
   1e1ec:	cmp	r7, #2
   1e1f0:	movne	r7, #0
   1e1f4:	moveq	r7, #1
   1e1f8:	bl	3ea8 <machine_is_little_endian@plt>
   1e1fc:	cmp	r7, r0
   1e200:	bne	1e254 <readstat_parse_dta+0x784>
   1e204:	ldr	r2, [sp, #126]	; 0x7e
   1e208:	str	r2, [sp, #126]	; 0x7e
   1e20c:	ldr	r3, [r6, #40]	; 0x28
   1e210:	str	r3, [sp, #12]
   1e214:	ldr	r3, [r6, #36]	; 0x24
   1e218:	str	r3, [sp, #8]
   1e21c:	ldrb	r3, [sp, #120]	; 0x78
   1e220:	str	r3, [sp, #4]
   1e224:	ldrb	r3, [sp, #121]	; 0x79
   1e228:	str	r3, [sp]
   1e22c:	mov	r3, #0
   1e230:	ldrh	r1, [sp, #124]	; 0x7c
   1e234:	mov	r0, r5
   1e238:	bl	41cc <dta_ctx_init@plt>
   1e23c:	subs	r7, r0, #0
   1e240:	beq	1df14 <readstat_parse_dta+0x444>
   1e244:	ldr	r3, [r4, #4]
   1e248:	ldr	r0, [r4, #20]
   1e24c:	blx	r3
   1e250:	b	1e1c0 <readstat_parse_dta+0x6f0>
   1e254:	ldrh	r0, [sp, #124]	; 0x7c
   1e258:	bl	3e9c <byteswap2@plt>
   1e25c:	strh	r0, [sp, #124]	; 0x7c
   1e260:	ldr	r0, [sp, #126]	; 0x7e
   1e264:	bl	3d88 <byteswap4@plt>
   1e268:	mov	r2, r0
   1e26c:	b	1e208 <readstat_parse_dta+0x738>
   1e270:	str	r3, [r5, #176]	; 0xb0
   1e274:	str	r1, [r5, #180]	; 0xb4
   1e278:	mov	sl, #0
   1e27c:	mov	fp, #0
   1e280:	b	1df74 <readstat_parse_dta+0x4a4>
   1e284:	ldr	r1, [pc, #2192]	; 1eb1c <readstat_parse_dta+0x104c>
   1e288:	add	r1, pc, r1
   1e28c:	mov	r0, r5
   1e290:	bl	1d010 <dta_read_tag>
   1e294:	subs	r7, r0, #0
   1e298:	bne	1f608 <readstat_parse_dta+0x1b38>
   1e29c:	ldr	r7, [r5, #8]
   1e2a0:	cmp	r7, #2
   1e2a4:	beq	1e2dc <readstat_parse_dta+0x80c>
   1e2a8:	cmp	r7, #1
   1e2ac:	bne	1dff8 <readstat_parse_dta+0x528>
   1e2b0:	ldr	r3, [sl, #12]
   1e2b4:	ldr	r2, [sl, #20]
   1e2b8:	mov	r1, #1
   1e2bc:	add	r0, sp, #64	; 0x40
   1e2c0:	blx	r3
   1e2c4:	cmp	r0, #1
   1e2c8:	movne	r7, #2
   1e2cc:	bne	1f608 <readstat_parse_dta+0x1b38>
   1e2d0:	ldrb	r3, [sp, #64]	; 0x40
   1e2d4:	strh	r3, [sp, #80]	; 0x50
   1e2d8:	b	1dff8 <readstat_parse_dta+0x528>
   1e2dc:	ldr	r3, [sl, #12]
   1e2e0:	ldr	r2, [sl, #20]
   1e2e4:	mov	r1, #2
   1e2e8:	add	r0, sp, #80	; 0x50
   1e2ec:	blx	r3
   1e2f0:	cmp	r0, #2
   1e2f4:	bne	1f608 <readstat_parse_dta+0x1b38>
   1e2f8:	ldrb	r3, [r5, #192]	; 0xc0
   1e2fc:	tst	r3, #1
   1e300:	bne	1e310 <readstat_parse_dta+0x840>
   1e304:	ldrh	r0, [sp, #80]	; 0x50
   1e308:	strh	r0, [sp, #80]	; 0x50
   1e30c:	b	1dff8 <readstat_parse_dta+0x528>
   1e310:	ldrh	r0, [sp, #80]	; 0x50
   1e314:	bl	3e9c <byteswap2@plt>
   1e318:	b	1e308 <readstat_parse_dta+0x838>
   1e31c:	ldr	r1, [pc, #2044]	; 1eb20 <readstat_parse_dta+0x1050>
   1e320:	add	r1, pc, r1
   1e324:	mov	r0, r5
   1e328:	bl	1d010 <dta_read_tag>
   1e32c:	subs	r7, r0, #0
   1e330:	movne	r6, #0
   1e334:	bne	1f5f0 <readstat_parse_dta+0x1b20>
   1e338:	ldr	r1, [pc, #2020]	; 1eb24 <readstat_parse_dta+0x1054>
   1e33c:	add	r1, pc, r1
   1e340:	mov	r0, r5
   1e344:	bl	1d010 <dta_read_tag>
   1e348:	subs	r7, r0, #0
   1e34c:	movne	r6, #0
   1e350:	bne	1f5f0 <readstat_parse_dta+0x1b20>
   1e354:	ldr	r3, [sl, #12]
   1e358:	ldr	r2, [sl, #20]
   1e35c:	mov	r1, #1
   1e360:	add	r0, sp, #63	; 0x3f
   1e364:	blx	r3
   1e368:	cmp	r0, #1
   1e36c:	beq	1e0b8 <readstat_parse_dta+0x5e8>
   1e370:	mov	r6, #0
   1e374:	mov	r7, #2
   1e378:	b	1f5f0 <readstat_parse_dta+0x1b20>
   1e37c:	sub	r2, r2, #1
   1e380:	mov	r1, r6
   1e384:	add	r0, r6, #1
   1e388:	bl	3e90 <memmove@plt>
   1e38c:	strb	fp, [r6]
   1e390:	b	1e12c <readstat_parse_dta+0x65c>
   1e394:	mov	r6, #0
   1e398:	ldr	r1, [pc, #1928]	; 1eb28 <readstat_parse_dta+0x1058>
   1e39c:	add	r1, pc, r1
   1e3a0:	mov	r0, r5
   1e3a4:	bl	1d010 <dta_read_tag>
   1e3a8:	mov	r7, r0
   1e3ac:	b	1f5f0 <readstat_parse_dta+0x1b20>
   1e3b0:	ldr	r3, [pc, #1908]	; 1eb2c <readstat_parse_dta+0x105c>
   1e3b4:	add	r3, pc, r3
   1e3b8:	str	r3, [sp]
   1e3bc:	mov	r3, #112	; 0x70
   1e3c0:	add	r2, sp, #120	; 0x78
   1e3c4:	ldr	r1, [pc, #1892]	; 1eb30 <readstat_parse_dta+0x1060>
   1e3c8:	add	r1, pc, r1
   1e3cc:	mov	r0, r5
   1e3d0:	bl	1d0a8 <dta_read_chunk>
   1e3d4:	cmp	r0, #0
   1e3d8:	movne	r7, #2
   1e3dc:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1e3e0:	ldrb	r3, [r5, #192]	; 0xc0
   1e3e4:	tst	r3, #1
   1e3e8:	bne	1e420 <readstat_parse_dta+0x950>
   1e3ec:	ldrd	r0, [sp, #192]	; 0xc0
   1e3f0:	strd	r0, [r5, #120]	; 0x78
   1e3f4:	ldrb	r3, [r5, #192]	; 0xc0
   1e3f8:	tst	r3, #1
   1e3fc:	bne	1e42c <readstat_parse_dta+0x95c>
   1e400:	ldrd	r0, [sp, #200]	; 0xc8
   1e404:	strd	r0, [r5, #128]	; 0x80
   1e408:	ldrb	r3, [r5, #192]	; 0xc0
   1e40c:	tst	r3, #1
   1e410:	bne	1e438 <readstat_parse_dta+0x968>
   1e414:	ldrd	r0, [sp, #208]	; 0xd0
   1e418:	strd	r0, [r5, #136]	; 0x88
   1e41c:	b	1f6cc <readstat_parse_dta+0x1bfc>
   1e420:	ldrd	r0, [sp, #192]	; 0xc0
   1e424:	bl	3d70 <byteswap8@plt>
   1e428:	b	1e3f0 <readstat_parse_dta+0x920>
   1e42c:	ldrd	r0, [sp, #200]	; 0xc8
   1e430:	bl	3d70 <byteswap8@plt>
   1e434:	b	1e404 <readstat_parse_dta+0x934>
   1e438:	ldrd	r0, [sp, #208]	; 0xd0
   1e43c:	bl	3d70 <byteswap8@plt>
   1e440:	b	1e418 <readstat_parse_dta+0x948>
   1e444:	ldr	r3, [r5, #148]	; 0x94
   1e448:	cmp	r3, #0
   1e44c:	ble	1f734 <readstat_parse_dta+0x1c64>
   1e450:	sub	r2, r8, #1
   1e454:	mov	r3, #0
   1e458:	ldr	r0, [r5, #28]
   1e45c:	lsl	r1, r3, #1
   1e460:	ldrb	ip, [r2, #1]!
   1e464:	strh	ip, [r0, r1]
   1e468:	add	r3, r3, #1
   1e46c:	ldr	r1, [r5, #148]	; 0x94
   1e470:	cmp	r3, r1
   1e474:	blt	1e458 <readstat_parse_dta+0x988>
   1e478:	b	1f734 <readstat_parse_dta+0x1c64>
   1e47c:	mov	r2, r6
   1e480:	mov	r1, r8
   1e484:	ldr	r0, [r5, #28]
   1e488:	bl	3f14 <memcpy@plt>
   1e48c:	ldrb	r3, [r5, #192]	; 0xc0
   1e490:	tst	r3, #1
   1e494:	beq	1f734 <readstat_parse_dta+0x1c64>
   1e498:	ldr	r3, [r5, #148]	; 0x94
   1e49c:	cmp	r3, #0
   1e4a0:	ble	1f734 <readstat_parse_dta+0x1c64>
   1e4a4:	mov	r6, #0
   1e4a8:	lsl	r7, r6, #1
   1e4ac:	ldr	r9, [r5, #28]
   1e4b0:	ldrh	r0, [r9, r7]
   1e4b4:	bl	3e9c <byteswap2@plt>
   1e4b8:	strh	r0, [r9, r7]
   1e4bc:	add	r6, r6, #1
   1e4c0:	ldr	r3, [r5, #148]	; 0x94
   1e4c4:	cmp	r6, r3
   1e4c8:	blt	1e4a8 <readstat_parse_dta+0x9d8>
   1e4cc:	b	1f734 <readstat_parse_dta+0x1c64>
   1e4d0:	ldr	r3, [r5, #48]	; 0x30
   1e4d4:	ldr	r2, [r5, #44]	; 0x2c
   1e4d8:	ldr	r1, [pc, #1620]	; 1eb34 <readstat_parse_dta+0x1064>
   1e4dc:	add	r1, pc, r1
   1e4e0:	str	r1, [sp]
   1e4e4:	ldr	r1, [pc, #1612]	; 1eb38 <readstat_parse_dta+0x1068>
   1e4e8:	add	r1, pc, r1
   1e4ec:	mov	r0, r5
   1e4f0:	bl	1d0a8 <dta_read_chunk>
   1e4f4:	subs	r7, r0, #0
   1e4f8:	bne	1f760 <readstat_parse_dta+0x1c90>
   1e4fc:	ldr	r3, [r5, #56]	; 0x38
   1e500:	ldr	r2, [r5, #52]	; 0x34
   1e504:	ldr	r1, [pc, #1584]	; 1eb3c <readstat_parse_dta+0x106c>
   1e508:	add	r1, pc, r1
   1e50c:	str	r1, [sp]
   1e510:	ldr	r1, [pc, #1576]	; 1eb40 <readstat_parse_dta+0x1070>
   1e514:	add	r1, pc, r1
   1e518:	mov	r0, r5
   1e51c:	bl	1d0a8 <dta_read_chunk>
   1e520:	subs	r7, r0, #0
   1e524:	bne	1f760 <readstat_parse_dta+0x1c90>
   1e528:	ldr	r3, [pc, #1556]	; 1eb44 <readstat_parse_dta+0x1074>
   1e52c:	add	r3, pc, r3
   1e530:	str	r3, [sp]
   1e534:	ldr	r3, [r5, #64]	; 0x40
   1e538:	ldr	r2, [r5, #60]	; 0x3c
   1e53c:	ldr	r1, [pc, #1540]	; 1eb48 <readstat_parse_dta+0x1078>
   1e540:	add	r1, pc, r1
   1e544:	mov	r0, r5
   1e548:	bl	1d0a8 <dta_read_chunk>
   1e54c:	subs	r7, r0, #0
   1e550:	bne	1f760 <readstat_parse_dta+0x1c90>
   1e554:	ldr	r3, [pc, #1520]	; 1eb4c <readstat_parse_dta+0x107c>
   1e558:	add	r3, pc, r3
   1e55c:	str	r3, [sp]
   1e560:	ldr	r3, [r5, #72]	; 0x48
   1e564:	ldr	r2, [r5, #68]	; 0x44
   1e568:	ldr	r1, [pc, #1504]	; 1eb50 <readstat_parse_dta+0x1080>
   1e56c:	add	r1, pc, r1
   1e570:	mov	r0, r5
   1e574:	bl	1d0a8 <dta_read_chunk>
   1e578:	mov	r7, r0
   1e57c:	cmp	r8, #0
   1e580:	beq	1f770 <readstat_parse_dta+0x1ca0>
   1e584:	b	1f768 <readstat_parse_dta+0x1c98>
   1e588:	ldrd	r2, [r5, #152]	; 0x98
   1e58c:	cmp	r2, #1
   1e590:	sbcs	r3, r3, #0
   1e594:	bge	1f7dc <readstat_parse_dta+0x1d0c>
   1e598:	b	1f7ec <readstat_parse_dta+0x1d1c>
   1e59c:	cmp	r3, #6
   1e5a0:	bne	1e5b0 <readstat_parse_dta+0xae0>
   1e5a4:	mov	r3, #0
   1e5a8:	str	r3, [sp, #80]	; 0x50
   1e5ac:	str	r3, [sp, #64]	; 0x40
   1e5b0:	ldr	sl, [sp, #80]	; 0x50
   1e5b4:	ldr	r8, [sp, #64]	; 0x40
   1e5b8:	ldr	r7, [r5, #228]	; 0xe4
   1e5bc:	movw	r1, #2152	; 0x868
   1e5c0:	mov	r0, #1
   1e5c4:	bl	3d4c <calloc@plt>
   1e5c8:	mov	r4, r0
   1e5cc:	str	sl, [r0]
   1e5d0:	str	r9, [r0, #4]
   1e5d4:	str	fp, [r0, #2148]	; 0x864
   1e5d8:	str	r8, [r0, #1596]	; 0x63c
   1e5dc:	ldr	r2, [r5, #76]	; 0x4c
   1e5e0:	ldr	r1, [r5, #36]	; 0x24
   1e5e4:	ldr	r3, [r5, #236]	; 0xec
   1e5e8:	str	r3, [sp]
   1e5ec:	mov	r3, r2
   1e5f0:	mla	r2, r6, r2, r1
   1e5f4:	mov	r1, #300	; 0x12c
   1e5f8:	add	r0, r0, #8
   1e5fc:	bl	4238 <readstat_convert@plt>
   1e600:	ldr	r3, [r5, #88]	; 0x58
   1e604:	mul	r1, r6, r3
   1e608:	ldr	r0, [r5, #68]	; 0x44
   1e60c:	add	r2, r0, r1
   1e610:	ldrb	r1, [r0, r1]
   1e614:	cmp	r1, #0
   1e618:	bne	1e6d8 <readstat_parse_dta+0xc08>
   1e61c:	ldr	r3, [r5, #80]	; 0x50
   1e620:	mul	r1, r6, r3
   1e624:	ldr	r0, [r5, #52]	; 0x34
   1e628:	add	r2, r0, r1
   1e62c:	ldrb	r1, [r0, r1]
   1e630:	cmp	r1, #0
   1e634:	bne	1e6f0 <readstat_parse_dta+0xc20>
   1e638:	str	r4, [r7, r6, lsl #2]
   1e63c:	ldr	r2, [r5, #84]	; 0x54
   1e640:	mul	r2, r2, r6
   1e644:	ldr	r1, [r5, #60]	; 0x3c
   1e648:	ldrb	r3, [r1, r2]
   1e64c:	cmp	r3, #0
   1e650:	ldr	r0, [r5, #228]	; 0xe4
   1e654:	ldr	r4, [r5, #248]	; 0xf8
   1e658:	ldr	r3, [r5, #276]	; 0x114
   1e65c:	addne	r2, r1, r2
   1e660:	moveq	r2, #0
   1e664:	ldr	r1, [r0, r6, lsl #2]
   1e668:	mov	r0, r9
   1e66c:	blx	r4
   1e670:	cmp	r0, #1
   1e674:	beq	1e7f8 <readstat_parse_dta+0xd28>
   1e678:	cmp	r0, #2
   1e67c:	addne	fp, fp, #1
   1e680:	beq	1e77c <readstat_parse_dta+0xcac>
   1e684:	add	r9, r9, #1
   1e688:	ldr	r3, [r5, #148]	; 0x94
   1e68c:	cmp	r9, r3
   1e690:	bge	1e790 <readstat_parse_dta+0xcc0>
   1e694:	mov	r6, r9
   1e698:	ldr	ip, [r5, #28]
   1e69c:	lsl	r0, r9, #1
   1e6a0:	ldr	r3, [sp, #16]
   1e6a4:	add	r2, sp, #64	; 0x40
   1e6a8:	mov	r1, r5
   1e6ac:	ldrh	r0, [ip, r0]
   1e6b0:	bl	41e4 <dta_type_info@plt>
   1e6b4:	cmp	r0, #0
   1e6b8:	bne	1f5dc <readstat_parse_dta+0x1b0c>
   1e6bc:	ldr	r3, [sp, #80]	; 0x50
   1e6c0:	cmp	r3, #0
   1e6c4:	bne	1e59c <readstat_parse_dta+0xacc>
   1e6c8:	ldr	r3, [sp, #64]	; 0x40
   1e6cc:	add	r3, r3, #1
   1e6d0:	str	r3, [sp, #64]	; 0x40
   1e6d4:	b	1e5b0 <readstat_parse_dta+0xae0>
   1e6d8:	ldr	r1, [r5, #236]	; 0xec
   1e6dc:	str	r1, [sp]
   1e6e0:	mov	r1, #1024	; 0x400
   1e6e4:	add	r0, r4, #564	; 0x234
   1e6e8:	bl	4238 <readstat_convert@plt>
   1e6ec:	b	1e61c <readstat_parse_dta+0xb4c>
   1e6f0:	add	r8, r4, #308	; 0x134
   1e6f4:	ldr	r1, [r5, #236]	; 0xec
   1e6f8:	str	r1, [sp]
   1e6fc:	mov	r1, #256	; 0x100
   1e700:	mov	r0, r8
   1e704:	bl	4238 <readstat_convert@plt>
   1e708:	ldrb	r3, [r4, #308]	; 0x134
   1e70c:	cmp	r3, #37	; 0x25
   1e710:	beq	1e738 <readstat_parse_dta+0xc68>
   1e714:	add	r2, sp, #120	; 0x78
   1e718:	ldr	r1, [sp, #20]
   1e71c:	mov	r0, r8
   1e720:	bl	428c <__isoc99_sscanf@plt>
   1e724:	cmp	r0, #1
   1e728:	bne	1e760 <readstat_parse_dta+0xc90>
   1e72c:	ldr	r3, [sp, #120]	; 0x78
   1e730:	str	r3, [r4, #2136]	; 0x858
   1e734:	b	1e638 <readstat_parse_dta+0xb68>
   1e738:	ldrb	r3, [r4, #309]	; 0x135
   1e73c:	cmp	r3, #45	; 0x2d
   1e740:	moveq	r3, #1
   1e744:	streq	r3, [r4, #2132]	; 0x854
   1e748:	beq	1e714 <readstat_parse_dta+0xc44>
   1e74c:	cmp	r3, #126	; 0x7e
   1e750:	moveq	r3, #2
   1e754:	movne	r3, #3
   1e758:	str	r3, [r4, #2132]	; 0x854
   1e75c:	b	1e714 <readstat_parse_dta+0xc44>
   1e760:	add	r2, sp, #120	; 0x78
   1e764:	ldr	r1, [sp, #24]
   1e768:	mov	r0, r8
   1e76c:	bl	428c <__isoc99_sscanf@plt>
   1e770:	cmp	r0, #1
   1e774:	bne	1e638 <readstat_parse_dta+0xb68>
   1e778:	b	1e72c <readstat_parse_dta+0xc5c>
   1e77c:	ldr	r3, [r5, #228]	; 0xe4
   1e780:	ldr	r3, [r3, r6, lsl #2]
   1e784:	mov	r2, #1
   1e788:	str	r2, [r3, #2144]	; 0x860
   1e78c:	b	1e684 <readstat_parse_dta+0xbb4>
   1e790:	ldr	r4, [sp, #28]
   1e794:	ldr	r3, [r5, #92]	; 0x5c
   1e798:	cmp	r3, #0
   1e79c:	beq	1ebdc <readstat_parse_dta+0x110c>
   1e7a0:	ldr	r6, [r5, #280]	; 0x118
   1e7a4:	ldrb	r3, [r5, #192]	; 0xc0
   1e7a8:	tst	r3, #4
   1e7ac:	beq	1e7bc <readstat_parse_dta+0xcec>
   1e7b0:	ldr	r3, [r5, #244]	; 0xf4
   1e7b4:	cmp	r3, #0
   1e7b8:	beq	1e804 <readstat_parse_dta+0xd34>
   1e7bc:	ldr	r1, [pc, #912]	; 1eb54 <readstat_parse_dta+0x1084>
   1e7c0:	add	r1, pc, r1
   1e7c4:	mov	r0, r5
   1e7c8:	bl	1d010 <dta_read_tag>
   1e7cc:	subs	r9, r0, #0
   1e7d0:	bne	1e864 <readstat_parse_dta+0xd94>
   1e7d4:	mov	r8, #0
   1e7d8:	ldr	sl, [pc, #888]	; 1eb58 <readstat_parse_dta+0x1088>
   1e7dc:	add	sl, pc, sl
   1e7e0:	ldr	fp, [pc, #884]	; 1eb5c <readstat_parse_dta+0x108c>
   1e7e4:	add	fp, pc, fp
   1e7e8:	ldr	r3, [pc, #880]	; 1eb60 <readstat_parse_dta+0x1090>
   1e7ec:	add	r3, pc, r3
   1e7f0:	str	r3, [sp, #16]
   1e7f4:	b	1e960 <readstat_parse_dta+0xe90>
   1e7f8:	ldr	r4, [sp, #28]
   1e7fc:	mov	r7, #4
   1e800:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1e804:	ldr	r3, [r6, #8]
   1e808:	ldr	r2, [r6, #20]
   1e80c:	mov	r1, #0
   1e810:	ldr	r0, [r5, #120]	; 0x78
   1e814:	blx	r3
   1e818:	cmn	r0, #1
   1e81c:	bne	1ebdc <readstat_parse_dta+0x110c>
   1e820:	ldr	r3, [r5, #264]	; 0x108
   1e824:	cmp	r3, #0
   1e828:	moveq	r9, #15
   1e82c:	beq	1e864 <readstat_parse_dta+0xd94>
   1e830:	add	r6, r5, #288	; 0x120
   1e834:	ldrd	r2, [r5, #120]	; 0x78
   1e838:	strd	r2, [sp]
   1e83c:	ldr	r2, [pc, #800]	; 1eb64 <readstat_parse_dta+0x1094>
   1e840:	add	r2, pc, r2
   1e844:	mov	r1, #256	; 0x100
   1e848:	mov	r0, r6
   1e84c:	bl	4280 <snprintf@plt>
   1e850:	ldr	r3, [r5, #264]	; 0x108
   1e854:	ldr	r1, [r5, #276]	; 0x114
   1e858:	mov	r0, r6
   1e85c:	blx	r3
   1e860:	mov	r9, #15
   1e864:	mov	r7, r9
   1e868:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1e86c:	ldr	r1, [pc, #756]	; 1eb68 <readstat_parse_dta+0x1098>
   1e870:	add	r1, pc, r1
   1e874:	mov	r0, r5
   1e878:	bl	1d010 <dta_read_tag>
   1e87c:	subs	r7, r0, #0
   1e880:	bne	1ebc4 <readstat_parse_dta+0x10f4>
   1e884:	cmp	r8, #0
   1e888:	beq	1ebdc <readstat_parse_dta+0x110c>
   1e88c:	mov	r7, r9
   1e890:	b	1ebcc <readstat_parse_dta+0x10fc>
   1e894:	mov	r7, #2
   1e898:	b	1ebc4 <readstat_parse_dta+0x10f4>
   1e89c:	mov	r7, #5
   1e8a0:	b	1ebc4 <readstat_parse_dta+0x10f4>
   1e8a4:	ldr	r3, [r6, #12]
   1e8a8:	ldr	r2, [r6, #20]
   1e8ac:	mov	r1, #1
   1e8b0:	add	r0, sp, #80	; 0x50
   1e8b4:	blx	r3
   1e8b8:	cmp	r0, #1
   1e8bc:	bne	1eac8 <readstat_parse_dta+0xff8>
   1e8c0:	ldr	r7, [r5, #92]	; 0x5c
   1e8c4:	cmp	r7, #2
   1e8c8:	beq	1e9c4 <readstat_parse_dta+0xef4>
   1e8cc:	ldr	r3, [r6, #12]
   1e8d0:	ldr	r2, [r6, #20]
   1e8d4:	mov	r1, #4
   1e8d8:	add	r0, sp, #120	; 0x78
   1e8dc:	blx	r3
   1e8e0:	cmp	r0, #4
   1e8e4:	bne	1ea00 <readstat_parse_dta+0xf30>
   1e8e8:	ldrb	r3, [r5, #192]	; 0xc0
   1e8ec:	tst	r3, #1
   1e8f0:	bne	1ea08 <readstat_parse_dta+0xf38>
   1e8f4:	ldr	r7, [sp, #120]	; 0x78
   1e8f8:	ldrb	r3, [sp, #80]	; 0x50
   1e8fc:	cmp	r7, #0
   1e900:	cmpeq	r3, #0
   1e904:	beq	1e884 <readstat_parse_dta+0xdb4>
   1e908:	cmp	r7, #1048576	; 0x100000
   1e90c:	cmpls	r3, #1
   1e910:	bne	1ebc0 <readstat_parse_dta+0x10f0>
   1e914:	ldr	r3, [r5, #244]	; 0xf4
   1e918:	cmp	r3, #0
   1e91c:	beq	1e92c <readstat_parse_dta+0xe5c>
   1e920:	ldr	r3, [r5, #96]	; 0x60
   1e924:	cmp	r7, r3, lsl #1
   1e928:	bcs	1ea18 <readstat_parse_dta+0xf48>
   1e92c:	ldr	r3, [r6, #8]
   1e930:	ldr	r2, [r6, #20]
   1e934:	mov	r1, #1
   1e938:	mov	r0, r7
   1e93c:	blx	r3
   1e940:	cmn	r0, #1
   1e944:	beq	1ed60 <readstat_parse_dta+0x1290>
   1e948:	ldr	r1, [pc, #540]	; 1eb6c <readstat_parse_dta+0x109c>
   1e94c:	add	r1, pc, r1
   1e950:	mov	r0, r5
   1e954:	bl	1d010 <dta_read_tag>
   1e958:	subs	r7, r0, #0
   1e95c:	bne	1ebc4 <readstat_parse_dta+0x10f4>
   1e960:	ldrb	r3, [r5, #192]	; 0xc0
   1e964:	tst	r3, #4
   1e968:	beq	1e8a4 <readstat_parse_dta+0xdd4>
   1e96c:	ldr	r3, [r6, #12]
   1e970:	ldr	r2, [r6, #20]
   1e974:	mov	r1, #4
   1e978:	add	r0, sp, #120	; 0x78
   1e97c:	blx	r3
   1e980:	cmp	r0, #4
   1e984:	bne	1e894 <readstat_parse_dta+0xdc4>
   1e988:	mov	r2, #4
   1e98c:	mov	r1, sl
   1e990:	add	r0, sp, #120	; 0x78
   1e994:	bl	3f98 <memcmp@plt>
   1e998:	cmp	r0, #0
   1e99c:	beq	1e86c <readstat_parse_dta+0xd9c>
   1e9a0:	mov	r2, #4
   1e9a4:	mov	r1, fp
   1e9a8:	add	r0, sp, #120	; 0x78
   1e9ac:	bl	3f98 <memcmp@plt>
   1e9b0:	cmp	r0, #0
   1e9b4:	bne	1e89c <readstat_parse_dta+0xdcc>
   1e9b8:	mov	r3, #1
   1e9bc:	strb	r3, [sp, #80]	; 0x50
   1e9c0:	b	1e8c0 <readstat_parse_dta+0xdf0>
   1e9c4:	ldr	r3, [r6, #12]
   1e9c8:	ldr	r2, [r6, #20]
   1e9cc:	mov	r1, #2
   1e9d0:	add	r0, sp, #120	; 0x78
   1e9d4:	blx	r3
   1e9d8:	cmp	r0, #2
   1e9dc:	bne	1ebc4 <readstat_parse_dta+0x10f4>
   1e9e0:	ldrb	r3, [r5, #192]	; 0xc0
   1e9e4:	tst	r3, #1
   1e9e8:	ldrheq	r7, [sp, #120]	; 0x78
   1e9ec:	beq	1e8f8 <readstat_parse_dta+0xe28>
   1e9f0:	ldrh	r0, [sp, #120]	; 0x78
   1e9f4:	bl	3e9c <byteswap2@plt>
   1e9f8:	mov	r7, r0
   1e9fc:	b	1e8f8 <readstat_parse_dta+0xe28>
   1ea00:	mov	r7, #2
   1ea04:	b	1ebc4 <readstat_parse_dta+0x10f4>
   1ea08:	ldr	r0, [sp, #120]	; 0x78
   1ea0c:	bl	3d88 <byteswap4@plt>
   1ea10:	mov	r7, r0
   1ea14:	b	1e8f8 <readstat_parse_dta+0xe28>
   1ea18:	add	r1, r7, #1
   1ea1c:	mov	r0, r8
   1ea20:	bl	42e0 <readstat_realloc@plt>
   1ea24:	subs	r8, r0, #0
   1ea28:	beq	1eab8 <readstat_parse_dta+0xfe8>
   1ea2c:	mov	r3, #0
   1ea30:	strb	r3, [r8, r7]
   1ea34:	ldr	r3, [r6, #12]
   1ea38:	ldr	r2, [r6, #20]
   1ea3c:	mov	r1, r7
   1ea40:	mov	r0, r8
   1ea44:	blx	r3
   1ea48:	cmp	r7, r0
   1ea4c:	bne	1eac0 <readstat_parse_dta+0xff0>
   1ea50:	mov	r3, #0
   1ea54:	str	r3, [sp, #120]	; 0x78
   1ea58:	mov	r2, #4
   1ea5c:	ldr	r1, [sp, #16]
   1ea60:	mov	r0, r8
   1ea64:	bl	44fc <strncmp@plt>
   1ea68:	cmp	r0, #0
   1ea6c:	bne	1e948 <readstat_parse_dta+0xe78>
   1ea70:	ldr	r0, [r5, #96]	; 0x60
   1ea74:	add	r2, sp, #120	; 0x78
   1ea78:	ldr	r1, [pc, #240]	; 1eb70 <readstat_parse_dta+0x10a0>
   1ea7c:	add	r1, pc, r1
   1ea80:	add	r0, r8, r0
   1ea84:	bl	428c <__isoc99_sscanf@plt>
   1ea88:	cmp	r0, #1
   1ea8c:	bne	1e948 <readstat_parse_dta+0xe78>
   1ea90:	ldr	r1, [r5, #96]	; 0x60
   1ea94:	ldr	r3, [r5, #244]	; 0xf4
   1ea98:	ldr	r2, [r5, #276]	; 0x114
   1ea9c:	add	r1, r8, r1, lsl #1
   1eaa0:	ldr	r0, [sp, #120]	; 0x78
   1eaa4:	blx	r3
   1eaa8:	cmp	r0, #0
   1eaac:	beq	1e948 <readstat_parse_dta+0xe78>
   1eab0:	mov	r7, #4
   1eab4:	b	1ebc4 <readstat_parse_dta+0x10f4>
   1eab8:	mov	r7, #3
   1eabc:	b	1ebc4 <readstat_parse_dta+0x10f4>
   1eac0:	mov	r7, #2
   1eac4:	b	1ebc4 <readstat_parse_dta+0x10f4>
   1eac8:	mov	r7, #2
   1eacc:	b	1ebc4 <readstat_parse_dta+0x10f4>
   1ead0:	.word	0x0000aa84
   1ead4:	.word	0x0000aa74
   1ead8:	.word	0x0000aa68
   1eadc:	.word	0x0000ad64
   1eae0:	.word	0x0000aa48
   1eae4:	.word	0x0000aa30
   1eae8:	.word	0x0000aa10
   1eaec:	.word	0x0000aa10
   1eaf0:	.word	0x0000a9f8
   1eaf4:	.word	0x0000a934
   1eaf8:	.word	0x0000a8e8
   1eafc:	.word	0x0000a8a4
   1eb00:	.word	0x0000a88c
   1eb04:	.word	0x0000a86c
   1eb08:	.word	0x0000a854
   1eb0c:	.word	0x0000a808
   1eb10:	.word	0x0000a7f0
   1eb14:	.word	0x0000a7c4
   1eb18:	.word	0x0000a7ac
   1eb1c:	.word	0x0000a3e0
   1eb20:	.word	0x0000a350
   1eb24:	.word	0x0000a340
   1eb28:	.word	0x0000a2ec
   1eb2c:	.word	0x0000a2f8
   1eb30:	.word	0x0000a2dc
   1eb34:	.word	0x0000a224
   1eb38:	.word	0x0000a20c
   1eb3c:	.word	0x0000a210
   1eb40:	.word	0x0000a1f8
   1eb44:	.word	0x0000a20c
   1eb48:	.word	0x0000a1e4
   1eb4c:	.word	0x0000a20c
   1eb50:	.word	0x0000a1e4
   1eb54:	.word	0x00009ff8
   1eb58:	.word	0x00009ff0
   1eb5c:	.word	0x00009ff0
   1eb60:	.word	0x00009ff0
   1eb64:	.word	0x00009f48
   1eb68:	.word	0x0000a0c8
   1eb6c:	.word	0x00009ea0
   1eb70:	.word	0x00009d68
   1eb74:	.word	0x00009bc4
   1eb78:	.word	0x00009a98
   1eb7c:	.word	0x00009a2c
   1eb80:	.word	0x00009a1c
   1eb84:	.word	0x000097ac
   1eb88:	.word	0x00009794
   1eb8c:	.word	0x000096b0
   1eb90:	.word	0x000096b8
   1eb94:	.word	0x00009084
   1eb98:	.word	0x00008fd0
   1eb9c:	.word	0x00008fa8
   1eba0:	.word	0x00008fa8
   1eba4:	.word	0x00008f90
   1eba8:	.word	0x00008f60
   1ebac:	.word	0x00008f5c
   1ebb0:	.word	0x00008fd8
   1ebb4:	.word	0x00008fe0
   1ebb8:	.word	0x00008fc0
   1ebbc:	.word	0x00008fbc
   1ebc0:	mov	r7, #32
   1ebc4:	cmp	r8, #0
   1ebc8:	beq	1ebd4 <readstat_parse_dta+0x1104>
   1ebcc:	mov	r0, r8
   1ebd0:	bl	3eb4 <free@plt>
   1ebd4:	cmp	r7, #0
   1ebd8:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1ebdc:	ldrb	r3, [r5, #192]	; 0xc0
   1ebe0:	tst	r3, #4
   1ebe4:	bne	1ed68 <readstat_parse_dta+0x1298>
   1ebe8:	ldr	r3, [r4, #8]
   1ebec:	ldr	r2, [r4, #20]
   1ebf0:	mov	r1, #1
   1ebf4:	mov	r0, #0
   1ebf8:	blx	r3
   1ebfc:	asr	r1, r0, #31
   1ec00:	strd	r0, [r5, #120]	; 0x78
   1ec04:	mvn	r2, #0
   1ec08:	mvn	r3, #0
   1ec0c:	cmp	r1, r3
   1ec10:	cmpeq	r0, r2
   1ec14:	beq	1f5cc <readstat_parse_dta+0x1afc>
   1ec18:	ldr	ip, [r5, #160]	; 0xa0
   1ec1c:	ldr	r2, [r5, #152]	; 0x98
   1ec20:	ldr	lr, [r5, #156]	; 0x9c
   1ec24:	umull	r6, r7, r2, ip
   1ec28:	mla	r7, ip, lr, r7
   1ec2c:	adds	r2, r6, r0
   1ec30:	adc	r3, r7, r1
   1ec34:	str	r2, [r5, #136]	; 0x88
   1ec38:	str	r3, [r5, #140]	; 0x8c
   1ec3c:	ldrb	r3, [r5, #192]	; 0xc0
   1ec40:	tst	r3, #4
   1ec44:	bne	1ed68 <readstat_parse_dta+0x1298>
   1ec48:	ldr	r3, [r5, #256]	; 0x100
   1ec4c:	cmp	r3, #0
   1ec50:	beq	1f880 <readstat_parse_dta+0x1db0>
   1ec54:	ldr	r3, [r5, #280]	; 0x118
   1ec58:	ldr	r6, [r3, #8]
   1ec5c:	ldr	r2, [r3, #20]
   1ec60:	mov	r1, #0
   1ec64:	ldr	r0, [r5, #120]	; 0x78
   1ec68:	blx	r6
   1ec6c:	cmn	r0, #1
   1ec70:	beq	1f0b8 <readstat_parse_dta+0x15e8>
   1ec74:	ldr	r1, [pc, #-264]	; 1eb74 <readstat_parse_dta+0x10a4>
   1ec78:	add	r1, pc, r1
   1ec7c:	mov	r0, r5
   1ec80:	bl	1d010 <dta_read_tag>
   1ec84:	subs	r7, r0, #0
   1ec88:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1ec8c:	mov	r0, r5
   1ec90:	bl	1cf80 <dta_update_progress>
   1ec94:	subs	r7, r0, #0
   1ec98:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1ec9c:	ldr	sl, [r5, #280]	; 0x118
   1eca0:	ldr	r0, [r5, #160]	; 0xa0
   1eca4:	cmp	r0, #0
   1eca8:	moveq	r6, #0
   1ecac:	bne	1f100 <readstat_parse_dta+0x1630>
   1ecb0:	ldrd	r8, [r5, #176]	; 0xb0
   1ecb4:	orrs	r3, r8, r9
   1ecb8:	beq	1ecdc <readstat_parse_dta+0x120c>
   1ecbc:	ldr	ip, [r5, #160]	; 0xa0
   1ecc0:	ldr	r3, [sl, #8]
   1ecc4:	ldr	r2, [sl, #20]
   1ecc8:	mov	r1, #1
   1eccc:	mul	r0, ip, r8
   1ecd0:	blx	r3
   1ecd4:	cmn	r0, #1
   1ecd8:	beq	1f844 <readstat_parse_dta+0x1d74>
   1ecdc:	mov	r8, #0
   1ece0:	mov	r9, #0
   1ece4:	ldrd	r2, [r5, #168]	; 0xa8
   1ece8:	cmp	r8, r2
   1ecec:	sbcs	r1, r9, r3
   1ecf0:	bge	1f114 <readstat_parse_dta+0x1644>
   1ecf4:	ldr	r3, [sl, #12]
   1ecf8:	ldr	r2, [sl, #20]
   1ecfc:	ldr	r1, [r5, #160]	; 0xa0
   1ed00:	mov	r0, r6
   1ed04:	blx	r3
   1ed08:	ldr	r3, [r5, #160]	; 0xa0
   1ed0c:	cmp	r0, r3
   1ed10:	bne	1f84c <readstat_parse_dta+0x1d7c>
   1ed14:	mov	r1, r5
   1ed18:	mov	r0, r6
   1ed1c:	bl	1d1e4 <dta_handle_row>
   1ed20:	cmp	r0, #0
   1ed24:	bne	1f8fc <readstat_parse_dta+0x1e2c>
   1ed28:	ldr	r3, [r5, #184]	; 0xb8
   1ed2c:	ldr	r2, [r5, #188]	; 0xbc
   1ed30:	adds	r3, r3, #1
   1ed34:	adc	r2, r2, #0
   1ed38:	str	r3, [r5, #184]	; 0xb8
   1ed3c:	str	r2, [r5, #188]	; 0xbc
   1ed40:	mov	r0, r5
   1ed44:	bl	1cf80 <dta_update_progress>
   1ed48:	adds	r8, r8, #1
   1ed4c:	adc	r9, r9, #0
   1ed50:	cmp	r0, #0
   1ed54:	beq	1ece4 <readstat_parse_dta+0x1214>
   1ed58:	mov	r7, r0
   1ed5c:	b	1f850 <readstat_parse_dta+0x1d80>
   1ed60:	mov	r7, #15
   1ed64:	b	1ebc4 <readstat_parse_dta+0x10f4>
   1ed68:	ldr	r6, [r5, #280]	; 0x118
   1ed6c:	ldr	r3, [r6, #8]
   1ed70:	ldr	r2, [r6, #20]
   1ed74:	mov	r1, #0
   1ed78:	ldr	r0, [r5, #128]	; 0x80
   1ed7c:	blx	r3
   1ed80:	cmn	r0, #1
   1ed84:	beq	1eda8 <readstat_parse_dta+0x12d8>
   1ed88:	ldr	r1, [pc, #-536]	; 1eb78 <readstat_parse_dta+0x10a8>
   1ed8c:	add	r1, pc, r1
   1ed90:	mov	r0, r5
   1ed94:	bl	1d010 <dta_read_tag>
   1ed98:	subs	r8, r0, #0
   1ed9c:	beq	1edf0 <readstat_parse_dta+0x1320>
   1eda0:	mov	r7, r8
   1eda4:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1eda8:	ldr	r3, [r5, #264]	; 0x108
   1edac:	cmp	r3, #0
   1edb0:	moveq	r8, #15
   1edb4:	beq	1eda0 <readstat_parse_dta+0x12d0>
   1edb8:	add	r6, r5, #288	; 0x120
   1edbc:	ldrd	r2, [r5, #128]	; 0x80
   1edc0:	strd	r2, [sp]
   1edc4:	ldr	r2, [pc, #-592]	; 1eb7c <readstat_parse_dta+0x10ac>
   1edc8:	add	r2, pc, r2
   1edcc:	mov	r1, #256	; 0x100
   1edd0:	mov	r0, r6
   1edd4:	bl	4280 <snprintf@plt>
   1edd8:	ldr	r3, [r5, #264]	; 0x108
   1eddc:	ldr	r1, [r5, #276]	; 0x114
   1ede0:	mov	r0, r6
   1ede4:	blx	r3
   1ede8:	mov	r8, #15
   1edec:	b	1eda0 <readstat_parse_dta+0x12d0>
   1edf0:	mov	r3, #100	; 0x64
   1edf4:	str	r3, [r5, #224]	; 0xe0
   1edf8:	mov	r0, #400	; 0x190
   1edfc:	bl	422c <readstat_malloc@plt>
   1ee00:	str	r0, [r5, #216]	; 0xd8
   1ee04:	add	sl, sp, #64	; 0x40
   1ee08:	mov	r9, #3
   1ee0c:	ldr	fp, [pc, #-660]	; 1eb80 <readstat_parse_dta+0x10b0>
   1ee10:	add	fp, pc, fp
   1ee14:	b	1ef8c <readstat_parse_dta+0x14bc>
   1ee18:	ldr	r3, [r5, #280]	; 0x118
   1ee1c:	ldr	r7, [r3, #12]
   1ee20:	ldr	r2, [r3, #20]
   1ee24:	mov	r1, #17
   1ee28:	add	r0, sp, #80	; 0x50
   1ee2c:	blx	r7
   1ee30:	cmp	r0, #17
   1ee34:	movne	r7, #2
   1ee38:	bne	1eee0 <readstat_parse_dta+0x1410>
   1ee3c:	ldrb	r3, [r5, #192]	; 0xc0
   1ee40:	tst	r3, #1
   1ee44:	ldrheq	r0, [sp, #80]	; 0x50
   1ee48:	bne	1ee90 <readstat_parse_dta+0x13c0>
   1ee4c:	strh	r0, [sp, #120]	; 0x78
   1ee50:	ldrb	r3, [r5, #192]	; 0xc0
   1ee54:	tst	r3, #1
   1ee58:	ldreq	r0, [sp, #84]	; 0x54
   1ee5c:	ldreq	r1, [sp, #88]	; 0x58
   1ee60:	bne	1eea0 <readstat_parse_dta+0x13d0>
   1ee64:	str	r0, [sp, #128]	; 0x80
   1ee68:	str	r1, [sp, #132]	; 0x84
   1ee6c:	ldrb	r3, [sp, #92]	; 0x5c
   1ee70:	strb	r3, [sp, #136]	; 0x88
   1ee74:	ldrb	r3, [r5, #192]	; 0xc0
   1ee78:	tst	r3, #1
   1ee7c:	ldreq	r0, [sp, #93]	; 0x5d
   1ee80:	bne	1eeb0 <readstat_parse_dta+0x13e0>
   1ee84:	str	r0, [sp, #140]	; 0x8c
   1ee88:	mov	r7, r8
   1ee8c:	b	1eee0 <readstat_parse_dta+0x1410>
   1ee90:	ldr	r0, [sp, #80]	; 0x50
   1ee94:	bl	3d88 <byteswap4@plt>
   1ee98:	uxth	r0, r0
   1ee9c:	b	1ee4c <readstat_parse_dta+0x137c>
   1eea0:	ldr	r0, [sp, #84]	; 0x54
   1eea4:	ldr	r1, [sp, #88]	; 0x58
   1eea8:	bl	3d70 <byteswap8@plt>
   1eeac:	b	1ee64 <readstat_parse_dta+0x1394>
   1eeb0:	ldr	r0, [sp, #93]	; 0x5d
   1eeb4:	bl	3d88 <byteswap4@plt>
   1eeb8:	b	1ee84 <readstat_parse_dta+0x13b4>
   1eebc:	ldr	r0, [sp, #80]	; 0x50
   1eec0:	bl	3d88 <byteswap4@plt>
   1eec4:	uxth	r0, r0
   1eec8:	b	1f000 <readstat_parse_dta+0x1530>
   1eecc:	ldr	r0, [sp, #84]	; 0x54
   1eed0:	bl	3d88 <byteswap4@plt>
   1eed4:	b	1f014 <readstat_parse_dta+0x1544>
   1eed8:	str	r0, [sp, #140]	; 0x8c
   1eedc:	mov	r7, r8
   1eee0:	cmp	r7, #0
   1eee4:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1eee8:	ldrb	r3, [sp, #136]	; 0x88
   1eeec:	cmp	r3, #130	; 0x82
   1eef0:	bne	1ef8c <readstat_parse_dta+0x14bc>
   1eef4:	ldr	r1, [r5, #224]	; 0xe0
   1eef8:	ldr	r3, [r5, #220]	; 0xdc
   1eefc:	cmp	r3, r1
   1ef00:	beq	1f044 <readstat_parse_dta+0x1574>
   1ef04:	ldr	r0, [sp, #140]	; 0x8c
   1ef08:	add	r0, r0, #32
   1ef0c:	bl	422c <readstat_malloc@plt>
   1ef10:	subs	r7, r0, #0
   1ef14:	beq	1f06c <readstat_parse_dta+0x159c>
   1ef18:	ldr	r2, [sp, #124]	; 0x7c
   1ef1c:	ldr	r1, [sp, #120]	; 0x78
   1ef20:	str	r1, [r7]
   1ef24:	str	r2, [r7, #4]
   1ef28:	ldr	r1, [sp, #128]	; 0x80
   1ef2c:	ldr	r2, [sp, #132]	; 0x84
   1ef30:	str	r1, [r7, #8]
   1ef34:	str	r2, [r7, #12]
   1ef38:	ldr	r1, [sp, #136]	; 0x88
   1ef3c:	ldr	r2, [sp, #140]	; 0x8c
   1ef40:	str	r1, [r7, #16]
   1ef44:	str	r2, [r7, #20]
   1ef48:	ldr	r2, [sp, #144]	; 0x90
   1ef4c:	ldr	r3, [sp, #148]	; 0x94
   1ef50:	str	r2, [r7, #24]
   1ef54:	str	r3, [r7, #28]
   1ef58:	ldr	r2, [r5, #216]	; 0xd8
   1ef5c:	ldr	r3, [r5, #220]	; 0xdc
   1ef60:	add	r1, r3, #1
   1ef64:	str	r1, [r5, #220]	; 0xdc
   1ef68:	str	r7, [r2, r3, lsl #2]
   1ef6c:	ldr	r3, [r6, #12]
   1ef70:	ldr	r2, [r6, #20]
   1ef74:	ldr	r1, [r7, #20]
   1ef78:	add	r0, r7, #24
   1ef7c:	blx	r3
   1ef80:	ldr	r3, [r7, #20]
   1ef84:	cmp	r0, r3
   1ef88:	bne	1f074 <readstat_parse_dta+0x15a4>
   1ef8c:	ldr	r3, [r6, #12]
   1ef90:	ldr	r2, [r6, #20]
   1ef94:	mov	r1, r9
   1ef98:	mov	r0, sl
   1ef9c:	blx	r3
   1efa0:	cmp	r0, #3
   1efa4:	bne	1f90c <readstat_parse_dta+0x1e3c>
   1efa8:	mov	r2, r9
   1efac:	mov	r1, fp
   1efb0:	mov	r0, sl
   1efb4:	bl	3f98 <memcmp@plt>
   1efb8:	cmp	r0, #0
   1efbc:	bne	1f07c <readstat_parse_dta+0x15ac>
   1efc0:	ldr	r3, [r5, #116]	; 0x74
   1efc4:	cmp	r3, #4
   1efc8:	bhi	1ee18 <readstat_parse_dta+0x1348>
   1efcc:	ldr	r3, [r5, #280]	; 0x118
   1efd0:	ldr	r7, [r3, #12]
   1efd4:	ldr	r2, [r3, #20]
   1efd8:	mov	r1, #13
   1efdc:	add	r0, sp, #80	; 0x50
   1efe0:	blx	r7
   1efe4:	cmp	r0, #13
   1efe8:	movne	r7, #2
   1efec:	bne	1eee0 <readstat_parse_dta+0x1410>
   1eff0:	ldrb	r3, [r5, #192]	; 0xc0
   1eff4:	tst	r3, #1
   1eff8:	ldrheq	r0, [sp, #80]	; 0x50
   1effc:	bne	1eebc <readstat_parse_dta+0x13ec>
   1f000:	strh	r0, [sp, #120]	; 0x78
   1f004:	ldrb	r3, [r5, #192]	; 0xc0
   1f008:	tst	r3, #1
   1f00c:	ldreq	r0, [sp, #84]	; 0x54
   1f010:	bne	1eecc <readstat_parse_dta+0x13fc>
   1f014:	str	r0, [sp, #128]	; 0x80
   1f018:	mov	r3, #0
   1f01c:	str	r3, [sp, #132]	; 0x84
   1f020:	ldrb	r3, [sp, #88]	; 0x58
   1f024:	strb	r3, [sp, #136]	; 0x88
   1f028:	ldrb	r3, [r5, #192]	; 0xc0
   1f02c:	tst	r3, #1
   1f030:	ldreq	r0, [sp, #89]	; 0x59
   1f034:	beq	1eed8 <readstat_parse_dta+0x1408>
   1f038:	ldr	r0, [sp, #89]	; 0x59
   1f03c:	bl	3d88 <byteswap4@plt>
   1f040:	b	1eed8 <readstat_parse_dta+0x1408>
   1f044:	lsl	r3, r1, #1
   1f048:	str	r3, [r5, #224]	; 0xe0
   1f04c:	lsl	r1, r1, #3
   1f050:	ldr	r0, [r5, #216]	; 0xd8
   1f054:	bl	42e0 <readstat_realloc@plt>
   1f058:	str	r0, [r5, #216]	; 0xd8
   1f05c:	cmp	r0, #0
   1f060:	bne	1ef04 <readstat_parse_dta+0x1434>
   1f064:	mov	r7, #3
   1f068:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f06c:	mov	r7, #3
   1f070:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f074:	mov	r7, #2
   1f078:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f07c:	mov	r2, #3
   1f080:	ldr	r1, [pc, #-1284]	; 1eb84 <readstat_parse_dta+0x10b4>
   1f084:	add	r1, pc, r1
   1f088:	add	r0, sp, #64	; 0x40
   1f08c:	bl	3f98 <memcmp@plt>
   1f090:	cmp	r0, #0
   1f094:	movne	r7, #5
   1f098:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1f09c:	ldr	r1, [pc, #-1308]	; 1eb88 <readstat_parse_dta+0x10b8>
   1f0a0:	add	r1, pc, r1
   1f0a4:	mov	r0, r5
   1f0a8:	bl	1d010 <dta_read_tag>
   1f0ac:	subs	r7, r0, #0
   1f0b0:	beq	1ec48 <readstat_parse_dta+0x1178>
   1f0b4:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f0b8:	ldr	r3, [r5, #264]	; 0x108
   1f0bc:	cmp	r3, #0
   1f0c0:	moveq	r7, #15
   1f0c4:	beq	1e1b4 <readstat_parse_dta+0x6e4>
   1f0c8:	add	r6, r5, #288	; 0x120
   1f0cc:	ldrd	r2, [r5, #120]	; 0x78
   1f0d0:	strd	r2, [sp]
   1f0d4:	ldr	r2, [pc, #-1360]	; 1eb8c <readstat_parse_dta+0x10bc>
   1f0d8:	add	r2, pc, r2
   1f0dc:	mov	r1, #256	; 0x100
   1f0e0:	mov	r0, r6
   1f0e4:	bl	4280 <snprintf@plt>
   1f0e8:	ldr	r3, [r5, #264]	; 0x108
   1f0ec:	ldr	r1, [r5, #276]	; 0x114
   1f0f0:	mov	r0, r6
   1f0f4:	blx	r3
   1f0f8:	mov	r7, #15
   1f0fc:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f100:	bl	422c <readstat_malloc@plt>
   1f104:	subs	r6, r0, #0
   1f108:	bne	1ecb0 <readstat_parse_dta+0x11e0>
   1f10c:	mov	r7, #3
   1f110:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f114:	ldr	r0, [r5, #152]	; 0x98
   1f118:	ldr	lr, [r5, #156]	; 0x9c
   1f11c:	ldr	r1, [r5, #176]	; 0xb0
   1f120:	ldr	ip, [r5, #180]	; 0xb4
   1f124:	subs	r1, r0, r1
   1f128:	str	r1, [sp, #32]
   1f12c:	sbc	r1, lr, ip
   1f130:	str	r1, [sp, #36]	; 0x24
   1f134:	ldrd	r0, [sp, #32]
   1f138:	cmp	r2, r0
   1f13c:	sbcs	ip, r3, r1
   1f140:	bge	1f168 <readstat_parse_dta+0x1698>
   1f144:	subs	r3, r0, r2
   1f148:	ldr	r0, [r5, #160]	; 0xa0
   1f14c:	ldr	r8, [sl, #8]
   1f150:	ldr	r2, [sl, #20]
   1f154:	mov	r1, #1
   1f158:	mul	r0, r0, r3
   1f15c:	blx	r8
   1f160:	cmn	r0, #1
   1f164:	beq	1f904 <readstat_parse_dta+0x1e34>
   1f168:	cmp	r6, #0
   1f16c:	bne	1f858 <readstat_parse_dta+0x1d88>
   1f170:	b	1f868 <readstat_parse_dta+0x1d98>
   1f174:	ldr	r3, [r5, #264]	; 0x108
   1f178:	cmp	r3, #0
   1f17c:	moveq	r7, #15
   1f180:	beq	1e1b4 <readstat_parse_dta+0x6e4>
   1f184:	add	r6, r5, #288	; 0x120
   1f188:	ldrd	r2, [r5, #136]	; 0x88
   1f18c:	strd	r2, [sp]
   1f190:	ldr	r2, [pc, #-1544]	; 1eb90 <readstat_parse_dta+0x10c0>
   1f194:	add	r2, pc, r2
   1f198:	mov	r1, #256	; 0x100
   1f19c:	mov	r0, r6
   1f1a0:	bl	4280 <snprintf@plt>
   1f1a4:	ldr	r3, [r5, #264]	; 0x108
   1f1a8:	ldr	r1, [r5, #276]	; 0x114
   1f1ac:	mov	r0, r6
   1f1b0:	blx	r3
   1f1b4:	mov	r7, #15
   1f1b8:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f1bc:	lsr	r6, r8, #3
   1f1c0:	ldr	r3, [sl, #12]
   1f1c4:	ldr	r2, [sl, #20]
   1f1c8:	ldr	r1, [r5, #104]	; 0x68
   1f1cc:	add	r0, sp, #120	; 0x78
   1f1d0:	blx	r3
   1f1d4:	ldr	r3, [r5, #104]	; 0x68
   1f1d8:	cmp	r0, r3
   1f1dc:	bcc	1f578 <readstat_parse_dta+0x1aa8>
   1f1e0:	ldr	r3, [sl, #8]
   1f1e4:	ldr	r2, [sl, #20]
   1f1e8:	mov	r1, #1
   1f1ec:	ldr	r0, [r5, #108]	; 0x6c
   1f1f0:	blx	r3
   1f1f4:	cmn	r0, #1
   1f1f8:	beq	1f580 <readstat_parse_dta+0x1ab0>
   1f1fc:	mov	r1, r8
   1f200:	mov	r0, fp
   1f204:	bl	42e0 <readstat_realloc@plt>
   1f208:	subs	fp, r0, #0
   1f20c:	beq	1f50c <readstat_parse_dta+0x1a3c>
   1f210:	ldr	r3, [sl, #12]
   1f214:	ldr	r2, [sl, #20]
   1f218:	mov	r1, r8
   1f21c:	mov	r0, fp
   1f220:	blx	r3
   1f224:	cmp	r8, r0
   1f228:	bhi	1f588 <readstat_parse_dta+0x1ab8>
   1f22c:	ldr	r3, [r5, #100]	; 0x64
   1f230:	cmp	r3, #2
   1f234:	beq	1f368 <readstat_parse_dta+0x1898>
   1f238:	cmp	r8, #8
   1f23c:	bhi	1f378 <readstat_parse_dta+0x18a8>
   1f240:	ldr	r3, [r5, #100]	; 0x64
   1f244:	cmp	r3, #2
   1f248:	bne	1f28c <readstat_parse_dta+0x17bc>
   1f24c:	ldr	r3, [sl, #12]
   1f250:	ldr	r2, [sl, #20]
   1f254:	mov	r1, #2
   1f258:	add	r0, sp, #120	; 0x78
   1f25c:	blx	r3
   1f260:	cmp	r0, #1
   1f264:	bls	1f560 <readstat_parse_dta+0x1a90>
   1f268:	ldrsh	r0, [sp, #120]	; 0x78
   1f26c:	ldrb	r3, [r5, #192]	; 0xc0
   1f270:	tst	r3, #1
   1f274:	moveq	r8, r0
   1f278:	beq	1f1bc <readstat_parse_dta+0x16ec>
   1f27c:	uxth	r0, r0
   1f280:	bl	3e9c <byteswap2@plt>
   1f284:	mov	r8, r0
   1f288:	b	1f1bc <readstat_parse_dta+0x16ec>
   1f28c:	ldr	r1, [sp, #44]	; 0x2c
   1f290:	mov	r0, r5
   1f294:	bl	1d010 <dta_read_tag>
   1f298:	subs	r6, r0, #0
   1f29c:	bne	1f568 <readstat_parse_dta+0x1a98>
   1f2a0:	ldr	r3, [sl, #12]
   1f2a4:	ldr	r2, [sl, #20]
   1f2a8:	mov	r1, #4
   1f2ac:	add	r0, sp, #120	; 0x78
   1f2b0:	blx	r3
   1f2b4:	cmp	r0, #3
   1f2b8:	bls	1f570 <readstat_parse_dta+0x1aa0>
   1f2bc:	ldr	r8, [sp, #120]	; 0x78
   1f2c0:	ldrb	r3, [r5, #192]	; 0xc0
   1f2c4:	tst	r3, #1
   1f2c8:	beq	1f1c0 <readstat_parse_dta+0x16f0>
   1f2cc:	mov	r0, r8
   1f2d0:	bl	3d88 <byteswap4@plt>
   1f2d4:	mov	r8, r0
   1f2d8:	b	1f1c0 <readstat_parse_dta+0x16f0>
   1f2dc:	add	r4, r4, #1
   1f2e0:	cmp	r4, r6
   1f2e4:	beq	1f240 <readstat_parse_dta+0x1770>
   1f2e8:	str	r8, [sp, #68]	; 0x44
   1f2ec:	str	r8, [sp, #76]	; 0x4c
   1f2f0:	str	r4, [sp, #64]	; 0x40
   1f2f4:	mov	r3, #3
   1f2f8:	str	r3, [sp, #72]	; 0x48
   1f2fc:	ldr	r3, [r5, #236]	; 0xec
   1f300:	str	r3, [sp]
   1f304:	mov	r3, #8
   1f308:	add	r2, fp, r4, lsl #3
   1f30c:	mov	r1, #33	; 0x21
   1f310:	mov	r0, r9
   1f314:	bl	4238 <readstat_convert@plt>
   1f318:	cmp	r0, #0
   1f31c:	bne	1f524 <readstat_parse_dta+0x1a54>
   1f320:	ldrb	r3, [sp, #80]	; 0x50
   1f324:	cmp	r3, #0
   1f328:	beq	1f2dc <readstat_parse_dta+0x180c>
   1f32c:	ldr	r3, [r5, #276]	; 0x114
   1f330:	str	r3, [sp, #12]
   1f334:	str	r9, [sp, #8]
   1f338:	ldrd	r2, [sp, #72]	; 0x48
   1f33c:	strd	r2, [sp]
   1f340:	add	r3, sp, #64	; 0x40
   1f344:	ldm	r3, {r2, r3}
   1f348:	ldr	r1, [r5, #260]	; 0x104
   1f34c:	add	r0, sp, #120	; 0x78
   1f350:	blx	r1
   1f354:	cmp	r0, #0
   1f358:	beq	1f2dc <readstat_parse_dta+0x180c>
   1f35c:	ldr	r4, [sp, #16]
   1f360:	mov	r0, #4
   1f364:	b	1f528 <readstat_parse_dta+0x1a58>
   1f368:	mov	r4, r7
   1f36c:	mov	r8, #0
   1f370:	add	r9, sp, #80	; 0x50
   1f374:	b	1f2e0 <readstat_parse_dta+0x1810>
   1f378:	ldr	r1, [sp, #48]	; 0x30
   1f37c:	mov	r0, r5
   1f380:	bl	1d010 <dta_read_tag>
   1f384:	cmp	r0, #0
   1f388:	bne	1f550 <readstat_parse_dta+0x1a80>
   1f38c:	ldr	r4, [fp]
   1f390:	ldr	r6, [fp, #4]
   1f394:	ldrb	r3, [r5, #192]	; 0xc0
   1f398:	tst	r3, #1
   1f39c:	bne	1f4cc <readstat_parse_dta+0x19fc>
   1f3a0:	sub	r8, r8, #8
   1f3a4:	cmp	r8, r6
   1f3a8:	bcc	1f590 <readstat_parse_dta+0x1ac0>
   1f3ac:	sub	r8, r8, r6
   1f3b0:	cmp	r4, r8, lsr #3
   1f3b4:	bhi	1f598 <readstat_parse_dta+0x1ac8>
   1f3b8:	add	r3, fp, #8
   1f3bc:	str	r3, [sp, #28]
   1f3c0:	add	r3, r4, #1
   1f3c4:	lsl	r3, r3, #3
   1f3c8:	str	r3, [sp, #40]	; 0x28
   1f3cc:	movw	r3, #32001	; 0x7d01
   1f3d0:	cmp	r6, r3
   1f3d4:	lslls	r3, r6, #2
   1f3d8:	addls	r3, r3, #1
   1f3dc:	ldrhi	r3, [sp, #52]	; 0x34
   1f3e0:	str	r3, [sp, #24]
   1f3e4:	ldr	r1, [sp, #24]
   1f3e8:	ldr	r0, [sp, #20]
   1f3ec:	bl	3fec <realloc@plt>
   1f3f0:	subs	r3, r0, #0
   1f3f4:	str	r3, [sp, #20]
   1f3f8:	beq	1f518 <readstat_parse_dta+0x1a48>
   1f3fc:	ldrb	r3, [r5, #192]	; 0xc0
   1f400:	tst	r3, #1
   1f404:	addne	r8, fp, #4
   1f408:	addne	r9, r8, r4, lsl #2
   1f40c:	bne	1f4f4 <readstat_parse_dta+0x1a24>
   1f410:	ldr	r8, [sp, #28]
   1f414:	lsl	r4, r4, #2
   1f418:	add	r3, fp, #8
   1f41c:	add	r3, r3, r4
   1f420:	str	r3, [sp, #28]
   1f424:	add	r9, sp, #80	; 0x50
   1f428:	add	r3, sp, #120	; 0x78
   1f42c:	str	r3, [sp, #32]
   1f430:	ldr	r3, [sp, #28]
   1f434:	cmp	r8, r3
   1f438:	beq	1f240 <readstat_parse_dta+0x1770>
   1f43c:	ldr	r3, [r8]
   1f440:	cmp	r6, r3
   1f444:	bls	1f500 <readstat_parse_dta+0x1a30>
   1f448:	add	r2, r8, r4
   1f44c:	mov	r1, r5
   1f450:	mov	r0, r9
   1f454:	bl	1d118 <dta_interpret_int32_bytes>
   1f458:	ldr	r2, [r8], #4
   1f45c:	sub	r3, r6, r2
   1f460:	ldr	r1, [sp, #40]	; 0x28
   1f464:	add	r2, r1, r2
   1f468:	ldr	r1, [r5, #236]	; 0xec
   1f46c:	str	r1, [sp]
   1f470:	cmp	r3, #32000	; 0x7d00
   1f474:	movcs	r3, #32000	; 0x7d00
   1f478:	add	r2, fp, r2
   1f47c:	ldr	r1, [sp, #24]
   1f480:	ldr	r0, [sp, #20]
   1f484:	bl	4238 <readstat_convert@plt>
   1f488:	cmp	r0, #0
   1f48c:	bne	1f558 <readstat_parse_dta+0x1a88>
   1f490:	ldr	r3, [r5, #276]	; 0x114
   1f494:	str	r3, [sp, #12]
   1f498:	ldr	r3, [sp, #20]
   1f49c:	str	r3, [sp, #8]
   1f4a0:	ldrd	r2, [sp, #88]	; 0x58
   1f4a4:	strd	r2, [sp]
   1f4a8:	ldm	r9, {r2, r3}
   1f4ac:	ldr	r1, [r5, #260]	; 0x104
   1f4b0:	ldr	r0, [sp, #32]
   1f4b4:	blx	r1
   1f4b8:	cmp	r0, #0
   1f4bc:	beq	1f430 <readstat_parse_dta+0x1960>
   1f4c0:	ldr	r4, [sp, #16]
   1f4c4:	mov	r0, #4
   1f4c8:	b	1f528 <readstat_parse_dta+0x1a58>
   1f4cc:	mov	r0, r4
   1f4d0:	bl	3d88 <byteswap4@plt>
   1f4d4:	mov	r4, r0
   1f4d8:	mov	r0, r6
   1f4dc:	bl	3d88 <byteswap4@plt>
   1f4e0:	mov	r6, r0
   1f4e4:	b	1f3a0 <readstat_parse_dta+0x18d0>
   1f4e8:	ldr	r0, [r8, #4]!
   1f4ec:	bl	3d88 <byteswap4@plt>
   1f4f0:	str	r0, [r8]
   1f4f4:	cmp	r8, r9
   1f4f8:	bne	1f4e8 <readstat_parse_dta+0x1a18>
   1f4fc:	b	1f410 <readstat_parse_dta+0x1940>
   1f500:	ldr	r4, [sp, #16]
   1f504:	mov	r0, #5
   1f508:	b	1f528 <readstat_parse_dta+0x1a58>
   1f50c:	ldr	r4, [sp, #16]
   1f510:	mov	r0, #3
   1f514:	b	1f528 <readstat_parse_dta+0x1a58>
   1f518:	ldr	r4, [sp, #16]
   1f51c:	mov	r0, #3
   1f520:	b	1f528 <readstat_parse_dta+0x1a58>
   1f524:	ldr	r4, [sp, #16]
   1f528:	mov	r7, r0
   1f52c:	cmp	fp, #0
   1f530:	beq	1f53c <readstat_parse_dta+0x1a6c>
   1f534:	mov	r0, fp
   1f538:	bl	3eb4 <free@plt>
   1f53c:	ldr	r0, [sp, #20]
   1f540:	cmp	r0, #0
   1f544:	beq	1e1b4 <readstat_parse_dta+0x6e4>
   1f548:	bl	3eb4 <free@plt>
   1f54c:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f550:	ldr	r4, [sp, #16]
   1f554:	b	1f528 <readstat_parse_dta+0x1a58>
   1f558:	ldr	r4, [sp, #16]
   1f55c:	b	1f528 <readstat_parse_dta+0x1a58>
   1f560:	ldr	r4, [sp, #16]
   1f564:	b	1f52c <readstat_parse_dta+0x1a5c>
   1f568:	ldr	r4, [sp, #16]
   1f56c:	b	1f52c <readstat_parse_dta+0x1a5c>
   1f570:	ldr	r4, [sp, #16]
   1f574:	b	1f52c <readstat_parse_dta+0x1a5c>
   1f578:	ldr	r4, [sp, #16]
   1f57c:	b	1f52c <readstat_parse_dta+0x1a5c>
   1f580:	ldr	r4, [sp, #16]
   1f584:	b	1f52c <readstat_parse_dta+0x1a5c>
   1f588:	ldr	r4, [sp, #16]
   1f58c:	b	1f52c <readstat_parse_dta+0x1a5c>
   1f590:	ldr	r4, [sp, #16]
   1f594:	b	1f52c <readstat_parse_dta+0x1a5c>
   1f598:	ldr	r4, [sp, #16]
   1f59c:	b	1f52c <readstat_parse_dta+0x1a5c>
   1f5a0:	mov	r7, #1
   1f5a4:	b	1f5ac <readstat_parse_dta+0x1adc>
   1f5a8:	mov	r7, #2
   1f5ac:	ldr	r3, [r4, #4]
   1f5b0:	ldr	r0, [r4, #20]
   1f5b4:	blx	r3
   1f5b8:	cmp	r5, #0
   1f5bc:	beq	1e1c8 <readstat_parse_dta+0x6f8>
   1f5c0:	b	1e1c0 <readstat_parse_dta+0x6f0>
   1f5c4:	mov	r7, #3
   1f5c8:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f5cc:	mov	r7, #15
   1f5d0:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f5d4:	mov	r7, r0
   1f5d8:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f5dc:	ldr	r4, [sp, #28]
   1f5e0:	mov	r7, r0
   1f5e4:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f5e8:	mov	r6, #0
   1f5ec:	mov	r7, #2
   1f5f0:	mov	r0, r8
   1f5f4:	bl	3eb4 <free@plt>
   1f5f8:	cmp	r6, #0
   1f5fc:	beq	1f608 <readstat_parse_dta+0x1b38>
   1f600:	mov	r0, r6
   1f604:	bl	3eb4 <free@plt>
   1f608:	cmp	r7, #0
   1f60c:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1f610:	ldr	r1, [pc, #-2692]	; 1eb94 <readstat_parse_dta+0x10c4>
   1f614:	add	r1, pc, r1
   1f618:	mov	r0, r5
   1f61c:	bl	1d010 <dta_read_tag>
   1f620:	subs	r7, r0, #0
   1f624:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1f628:	ldr	r2, [r5, #240]	; 0xf0
   1f62c:	cmp	r2, #0
   1f630:	beq	1f6c0 <readstat_parse_dta+0x1bf0>
   1f634:	mov	r0, #0
   1f638:	mov	r1, #0
   1f63c:	strd	r0, [sp, #136]	; 0x88
   1f640:	strd	r0, [sp, #144]	; 0x90
   1f644:	strd	r0, [sp, #152]	; 0x98
   1f648:	strd	r0, [sp, #160]	; 0xa0
   1f64c:	strd	r0, [sp, #168]	; 0xa8
   1f650:	ldrd	r0, [r5, #168]	; 0xa8
   1f654:	strd	r0, [sp, #120]	; 0x78
   1f658:	ldr	r0, [r5, #148]	; 0x94
   1f65c:	asr	r1, r0, #31
   1f660:	strd	r0, [sp, #128]	; 0x80
   1f664:	ldr	r3, [r5, #12]
   1f668:	str	r3, [sp, #136]	; 0x88
   1f66c:	str	r3, [sp, #140]	; 0x8c
   1f670:	ldr	r3, [r5, #144]	; 0x90
   1f674:	mov	r0, r3
   1f678:	asr	r1, r3, #31
   1f67c:	strd	r0, [sp, #144]	; 0x90
   1f680:	ldr	r1, [r5, #232]	; 0xe8
   1f684:	str	r1, [sp, #156]	; 0x9c
   1f688:	ldr	r1, [r5]
   1f68c:	str	r1, [sp, #164]	; 0xa4
   1f690:	cmp	r3, #117	; 0x75
   1f694:	movle	r3, #0
   1f698:	movgt	r3, #1
   1f69c:	ldrb	r1, [sp, #172]	; 0xac
   1f6a0:	bfi	r1, r3, #0, #1
   1f6a4:	strb	r1, [sp, #172]	; 0xac
   1f6a8:	mov	r1, r9
   1f6ac:	add	r0, sp, #120	; 0x78
   1f6b0:	blx	r2
   1f6b4:	cmp	r0, #0
   1f6b8:	movne	r7, #4
   1f6bc:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1f6c0:	ldrb	r3, [r5, #192]	; 0xc0
   1f6c4:	tst	r3, #4
   1f6c8:	bne	1e3b0 <readstat_parse_dta+0x8e0>
   1f6cc:	ldr	r3, [r5, #148]	; 0x94
   1f6d0:	ldr	r6, [r5, #24]
   1f6d4:	mul	r6, r6, r3
   1f6d8:	cmp	r3, #0
   1f6dc:	moveq	r8, #0
   1f6e0:	beq	1f6f4 <readstat_parse_dta+0x1c24>
   1f6e4:	mov	r0, r6
   1f6e8:	bl	422c <readstat_malloc@plt>
   1f6ec:	subs	r8, r0, #0
   1f6f0:	beq	1f5c4 <readstat_parse_dta+0x1af4>
   1f6f4:	ldr	r3, [pc, #-2916]	; 1eb98 <readstat_parse_dta+0x10c8>
   1f6f8:	add	r3, pc, r3
   1f6fc:	str	r3, [sp]
   1f700:	mov	r3, r6
   1f704:	mov	r2, r8
   1f708:	ldr	r1, [pc, #-2932]	; 1eb9c <readstat_parse_dta+0x10cc>
   1f70c:	add	r1, pc, r1
   1f710:	mov	r0, r5
   1f714:	bl	1d0a8 <dta_read_chunk>
   1f718:	subs	r7, r0, #0
   1f71c:	bne	1f760 <readstat_parse_dta+0x1c90>
   1f720:	ldr	r3, [r5, #24]
   1f724:	cmp	r3, #1
   1f728:	beq	1e444 <readstat_parse_dta+0x974>
   1f72c:	cmp	r3, #2
   1f730:	beq	1e47c <readstat_parse_dta+0x9ac>
   1f734:	ldr	r3, [r5, #40]	; 0x28
   1f738:	ldr	r2, [r5, #36]	; 0x24
   1f73c:	ldr	r1, [pc, #-2980]	; 1eba0 <readstat_parse_dta+0x10d0>
   1f740:	add	r1, pc, r1
   1f744:	str	r1, [sp]
   1f748:	ldr	r1, [pc, #-2988]	; 1eba4 <readstat_parse_dta+0x10d4>
   1f74c:	add	r1, pc, r1
   1f750:	mov	r0, r5
   1f754:	bl	1d0a8 <dta_read_chunk>
   1f758:	subs	r7, r0, #0
   1f75c:	beq	1e4d0 <readstat_parse_dta+0xa00>
   1f760:	cmp	r8, #0
   1f764:	beq	1e1b4 <readstat_parse_dta+0x6e4>
   1f768:	mov	r0, r8
   1f76c:	bl	3eb4 <free@plt>
   1f770:	cmp	r7, #0
   1f774:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1f778:	ldr	r3, [r5, #148]	; 0x94
   1f77c:	cmp	r3, #0
   1f780:	ble	1e588 <readstat_parse_dta+0xab8>
   1f784:	mov	r6, #0
   1f788:	add	r9, sp, #120	; 0x78
   1f78c:	mov	r8, r6
   1f790:	ldr	ip, [r5, #28]
   1f794:	lsl	r0, r6, #1
   1f798:	mov	r3, r8
   1f79c:	mov	r2, r9
   1f7a0:	mov	r1, r5
   1f7a4:	ldrh	r0, [ip, r0]
   1f7a8:	bl	41e4 <dta_type_info@plt>
   1f7ac:	cmp	r0, #0
   1f7b0:	bne	1f5d4 <readstat_parse_dta+0x1b04>
   1f7b4:	ldr	r3, [r5, #160]	; 0xa0
   1f7b8:	ldr	r2, [sp, #120]	; 0x78
   1f7bc:	add	r3, r3, r2
   1f7c0:	str	r3, [r5, #160]	; 0xa0
   1f7c4:	add	r6, r6, #1
   1f7c8:	ldr	r3, [r5, #148]	; 0x94
   1f7cc:	cmp	r3, r6
   1f7d0:	bgt	1f790 <readstat_parse_dta+0x1cc0>
   1f7d4:	cmp	r3, #0
   1f7d8:	ble	1e588 <readstat_parse_dta+0xab8>
   1f7dc:	ldr	r3, [r5, #160]	; 0xa0
   1f7e0:	cmp	r3, #0
   1f7e4:	moveq	r7, #5
   1f7e8:	beq	1e1b4 <readstat_parse_dta+0x6e4>
   1f7ec:	ldr	r3, [r5, #248]	; 0xf8
   1f7f0:	cmp	r3, #0
   1f7f4:	beq	1e794 <readstat_parse_dta+0xcc4>
   1f7f8:	ldr	r3, [r5, #148]	; 0x94
   1f7fc:	cmp	r3, #0
   1f800:	ble	1e794 <readstat_parse_dta+0xcc4>
   1f804:	mov	fp, #0
   1f808:	mov	r9, fp
   1f80c:	add	r3, sp, #80	; 0x50
   1f810:	str	r3, [sp, #16]
   1f814:	ldr	r3, [pc, #-3188]	; 1eba8 <readstat_parse_dta+0x10d8>
   1f818:	add	r3, pc, r3
   1f81c:	str	r3, [sp, #20]
   1f820:	ldr	r3, [pc, #-3196]	; 1ebac <readstat_parse_dta+0x10dc>
   1f824:	add	r3, pc, r3
   1f828:	str	r3, [sp, #24]
   1f82c:	str	r4, [sp, #28]
   1f830:	b	1e694 <readstat_parse_dta+0xbc4>
   1f834:	mov	r7, #3
   1f838:	b	1f608 <readstat_parse_dta+0x1b38>
   1f83c:	mov	r7, #5
   1f840:	b	1f5ac <readstat_parse_dta+0x1adc>
   1f844:	mov	r7, #15
   1f848:	b	1f850 <readstat_parse_dta+0x1d80>
   1f84c:	mov	r7, #2
   1f850:	cmp	r6, #0
   1f854:	beq	1e1b4 <readstat_parse_dta+0x6e4>
   1f858:	mov	r0, r6
   1f85c:	bl	3eb4 <free@plt>
   1f860:	cmp	r7, #0
   1f864:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1f868:	ldr	r1, [pc, #-3264]	; 1ebb0 <readstat_parse_dta+0x10e0>
   1f86c:	add	r1, pc, r1
   1f870:	mov	r0, r5
   1f874:	bl	1d010 <dta_read_tag>
   1f878:	subs	r7, r0, #0
   1f87c:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1f880:	ldr	sl, [r5, #280]	; 0x118
   1f884:	ldr	r3, [sl, #8]
   1f888:	ldr	r2, [sl, #20]
   1f88c:	mov	r1, #0
   1f890:	ldr	r0, [r5, #136]	; 0x88
   1f894:	blx	r3
   1f898:	cmn	r0, #1
   1f89c:	beq	1f174 <readstat_parse_dta+0x16a4>
   1f8a0:	ldr	r1, [pc, #-3316]	; 1ebb4 <readstat_parse_dta+0x10e4>
   1f8a4:	add	r1, pc, r1
   1f8a8:	mov	r0, r5
   1f8ac:	bl	1d010 <dta_read_tag>
   1f8b0:	subs	r7, r0, #0
   1f8b4:	bne	1e1b4 <readstat_parse_dta+0x6e4>
   1f8b8:	ldr	r3, [r5, #260]	; 0x104
   1f8bc:	cmp	r3, #0
   1f8c0:	beq	1e1b4 <readstat_parse_dta+0x6e4>
   1f8c4:	mov	r3, #0
   1f8c8:	str	r3, [sp, #20]
   1f8cc:	mov	fp, r3
   1f8d0:	ldr	r3, [pc, #-3360]	; 1ebb8 <readstat_parse_dta+0x10e8>
   1f8d4:	add	r3, pc, r3
   1f8d8:	str	r3, [sp, #44]	; 0x2c
   1f8dc:	ldr	r3, [pc, #-3368]	; 1ebbc <readstat_parse_dta+0x10ec>
   1f8e0:	add	r3, pc, r3
   1f8e4:	str	r3, [sp, #48]	; 0x30
   1f8e8:	movw	r3, #62465	; 0xf401
   1f8ec:	movt	r3, #1
   1f8f0:	str	r3, [sp, #52]	; 0x34
   1f8f4:	str	r4, [sp, #16]
   1f8f8:	b	1f240 <readstat_parse_dta+0x1770>
   1f8fc:	mov	r7, r0
   1f900:	b	1f850 <readstat_parse_dta+0x1d80>
   1f904:	mov	r7, #15
   1f908:	b	1f850 <readstat_parse_dta+0x1d80>
   1f90c:	mov	r7, #2
   1f910:	b	1e1b4 <readstat_parse_dta+0x6e4>
   1f914:	andeq	r0, r0, r0

0001f918 <dta_typecode_for_variable>:
   1f918:	cmp	r1, #111	; 0x6f
   1f91c:	beq	1f958 <dta_typecode_for_variable+0x40>
   1f920:	cmp	r1, #117	; 0x75
   1f924:	beq	1f9d0 <dta_typecode_for_variable+0xb8>
   1f928:	ldr	r1, [r0, #1596]	; 0x63c
   1f92c:	ldr	r3, [r0]
   1f930:	cmp	r3, #6
   1f934:	addls	pc, pc, r3, lsl #2
   1f938:	b	1fa94 <dta_typecode_for_variable+0x17c>
   1f93c:	b	1fa88 <dta_typecode_for_variable+0x170>
   1f940:	b	1fa50 <dta_typecode_for_variable+0x138>
   1f944:	b	1fa68 <dta_typecode_for_variable+0x150>
   1f948:	b	1fa70 <dta_typecode_for_variable+0x158>
   1f94c:	b	1fa78 <dta_typecode_for_variable+0x160>
   1f950:	b	1fa80 <dta_typecode_for_variable+0x168>
   1f954:	b	1fab4 <dta_typecode_for_variable+0x19c>
   1f958:	ldr	r1, [r0, #1596]	; 0x63c
   1f95c:	ldr	r3, [r0]
   1f960:	cmp	r3, #6
   1f964:	addls	pc, pc, r3, lsl #2
   1f968:	b	1f9c8 <dta_typecode_for_variable+0xb0>
   1f96c:	b	1f9c0 <dta_typecode_for_variable+0xa8>
   1f970:	b	1f988 <dta_typecode_for_variable+0x70>
   1f974:	b	1f9a0 <dta_typecode_for_variable+0x88>
   1f978:	b	1f9a8 <dta_typecode_for_variable+0x90>
   1f97c:	b	1f9b0 <dta_typecode_for_variable+0x98>
   1f980:	b	1f9b8 <dta_typecode_for_variable+0xa0>
   1f984:	b	1fa9c <dta_typecode_for_variable+0x184>
   1f988:	mov	r3, #251	; 0xfb
   1f98c:	cmp	r2, #0
   1f990:	beq	1faa4 <dta_typecode_for_variable+0x18c>
   1f994:	strh	r3, [r2]
   1f998:	mov	r0, #0
   1f99c:	bx	lr
   1f9a0:	mov	r3, #252	; 0xfc
   1f9a4:	b	1f98c <dta_typecode_for_variable+0x74>
   1f9a8:	mov	r3, #253	; 0xfd
   1f9ac:	b	1f98c <dta_typecode_for_variable+0x74>
   1f9b0:	mov	r3, #254	; 0xfe
   1f9b4:	b	1f98c <dta_typecode_for_variable+0x74>
   1f9b8:	mov	r3, #255	; 0xff
   1f9bc:	b	1f98c <dta_typecode_for_variable+0x74>
   1f9c0:	uxth	r3, r1
   1f9c4:	b	1f98c <dta_typecode_for_variable+0x74>
   1f9c8:	mov	r3, #0
   1f9cc:	b	1f98c <dta_typecode_for_variable+0x74>
   1f9d0:	ldr	r1, [r0, #1596]	; 0x63c
   1f9d4:	ldr	r3, [r0]
   1f9d8:	cmp	r3, #6
   1f9dc:	addls	pc, pc, r3, lsl #2
   1f9e0:	b	1fa48 <dta_typecode_for_variable+0x130>
   1f9e4:	b	1fa38 <dta_typecode_for_variable+0x120>
   1f9e8:	b	1fa00 <dta_typecode_for_variable+0xe8>
   1f9ec:	b	1fa18 <dta_typecode_for_variable+0x100>
   1f9f0:	b	1fa20 <dta_typecode_for_variable+0x108>
   1f9f4:	b	1fa28 <dta_typecode_for_variable+0x110>
   1f9f8:	b	1fa30 <dta_typecode_for_variable+0x118>
   1f9fc:	b	1fa40 <dta_typecode_for_variable+0x128>
   1fa00:	movw	r3, #65530	; 0xfffa
   1fa04:	cmp	r2, #0
   1fa08:	beq	1faac <dta_typecode_for_variable+0x194>
   1fa0c:	strh	r3, [r2]
   1fa10:	mov	r0, #0
   1fa14:	bx	lr
   1fa18:	movw	r3, #65529	; 0xfff9
   1fa1c:	b	1fa04 <dta_typecode_for_variable+0xec>
   1fa20:	movw	r3, #65528	; 0xfff8
   1fa24:	b	1fa04 <dta_typecode_for_variable+0xec>
   1fa28:	movw	r3, #65527	; 0xfff7
   1fa2c:	b	1fa04 <dta_typecode_for_variable+0xec>
   1fa30:	movw	r3, #65526	; 0xfff6
   1fa34:	b	1fa04 <dta_typecode_for_variable+0xec>
   1fa38:	uxth	r3, r1
   1fa3c:	b	1fa04 <dta_typecode_for_variable+0xec>
   1fa40:	mov	r3, #32768	; 0x8000
   1fa44:	b	1fa04 <dta_typecode_for_variable+0xec>
   1fa48:	mov	r3, #0
   1fa4c:	b	1fa04 <dta_typecode_for_variable+0xec>
   1fa50:	mov	r3, #98	; 0x62
   1fa54:	cmp	r2, #0
   1fa58:	beq	1fabc <dta_typecode_for_variable+0x1a4>
   1fa5c:	strh	r3, [r2]
   1fa60:	mov	r0, #0
   1fa64:	bx	lr
   1fa68:	mov	r3, #105	; 0x69
   1fa6c:	b	1fa54 <dta_typecode_for_variable+0x13c>
   1fa70:	mov	r3, #108	; 0x6c
   1fa74:	b	1fa54 <dta_typecode_for_variable+0x13c>
   1fa78:	mov	r3, #102	; 0x66
   1fa7c:	b	1fa54 <dta_typecode_for_variable+0x13c>
   1fa80:	mov	r3, #100	; 0x64
   1fa84:	b	1fa54 <dta_typecode_for_variable+0x13c>
   1fa88:	add	r3, r1, #127	; 0x7f
   1fa8c:	uxth	r3, r3
   1fa90:	b	1fa54 <dta_typecode_for_variable+0x13c>
   1fa94:	mov	r3, #0
   1fa98:	b	1fa54 <dta_typecode_for_variable+0x13c>
   1fa9c:	mov	r0, #33	; 0x21
   1faa0:	bx	lr
   1faa4:	mov	r0, #0
   1faa8:	bx	lr
   1faac:	mov	r0, #0
   1fab0:	bx	lr
   1fab4:	mov	r0, #33	; 0x21
   1fab8:	bx	lr
   1fabc:	mov	r0, #0
   1fac0:	bx	lr

0001fac4 <dta_compare_value_labels>:
   1fac4:	ldrb	r3, [r0, #12]
   1fac8:	cmp	r3, #0
   1facc:	beq	1fae4 <dta_compare_value_labels+0x20>
   1fad0:	ldrb	r0, [r1, #12]
   1fad4:	cmp	r0, #0
   1fad8:	beq	1fb00 <dta_compare_value_labels+0x3c>
   1fadc:	sub	r0, r3, r0
   1fae0:	bx	lr
   1fae4:	ldrb	r3, [r1, #12]
   1fae8:	cmp	r3, #0
   1faec:	bne	1fb08 <dta_compare_value_labels+0x44>
   1faf0:	ldr	r0, [r0, #8]
   1faf4:	ldr	r3, [r1, #8]
   1faf8:	sub	r0, r0, r3
   1fafc:	bx	lr
   1fb00:	mov	r0, #1
   1fb04:	bx	lr
   1fb08:	mvn	r0, #0
   1fb0c:	bx	lr

0001fb10 <dta_numeric_variable_width>:
   1fb10:	cmp	r0, #5
   1fb14:	beq	1fb3c <dta_numeric_variable_width+0x2c>
   1fb18:	sub	r3, r0, #3
   1fb1c:	cmp	r3, #1
   1fb20:	bls	1fb44 <dta_numeric_variable_width+0x34>
   1fb24:	cmp	r0, #2
   1fb28:	beq	1fb48 <dta_numeric_variable_width+0x38>
   1fb2c:	cmp	r0, #1
   1fb30:	movne	r0, #0
   1fb34:	moveq	r0, #1
   1fb38:	bx	lr
   1fb3c:	mov	r0, #8
   1fb40:	bx	lr
   1fb44:	mov	r0, #4
   1fb48:	bx	lr

0001fb4c <dta_111_variable_width>:
   1fb4c:	cmp	r0, #0
   1fb50:	beq	1fb6c <dta_111_variable_width+0x20>
   1fb54:	str	r4, [sp, #-8]!
   1fb58:	str	lr, [sp, #4]
   1fb5c:	bl	1fb10 <dta_numeric_variable_width>
   1fb60:	ldr	r4, [sp]
   1fb64:	add	sp, sp, #4
   1fb68:	pop	{pc}		; (ldr pc, [sp], #4)
   1fb6c:	sub	r3, r1, #1
   1fb70:	cmp	r3, #244	; 0xf4
   1fb74:	movcc	r0, r1
   1fb78:	movcs	r0, #244	; 0xf4
   1fb7c:	bx	lr

0001fb80 <dta_117_variable_width>:
   1fb80:	cmp	r0, #0
   1fb84:	beq	1fba8 <dta_117_variable_width+0x28>
   1fb88:	cmp	r0, #6
   1fb8c:	beq	1fbc0 <dta_117_variable_width+0x40>
   1fb90:	str	r4, [sp, #-8]!
   1fb94:	str	lr, [sp, #4]
   1fb98:	bl	1fb10 <dta_numeric_variable_width>
   1fb9c:	ldr	r4, [sp]
   1fba0:	add	sp, sp, #4
   1fba4:	pop	{pc}		; (ldr pc, [sp], #4)
   1fba8:	sub	r2, r1, #1
   1fbac:	movw	r3, #2044	; 0x7fc
   1fbb0:	movw	r0, #2045	; 0x7fd
   1fbb4:	cmp	r2, r3
   1fbb8:	movls	r0, r1
   1fbbc:	bx	lr
   1fbc0:	mov	r0, #8
   1fbc4:	bx	lr

0001fbc8 <dta_old_variable_width>:
   1fbc8:	cmp	r0, #0
   1fbcc:	beq	1fbe8 <dta_old_variable_width+0x20>
   1fbd0:	str	r4, [sp, #-8]!
   1fbd4:	str	lr, [sp, #4]
   1fbd8:	bl	1fb10 <dta_numeric_variable_width>
   1fbdc:	ldr	r4, [sp]
   1fbe0:	add	sp, sp, #4
   1fbe4:	pop	{pc}		; (ldr pc, [sp], #4)
   1fbe8:	sub	r3, r1, #1
   1fbec:	cmp	r3, #128	; 0x80
   1fbf0:	movcc	r0, r1
   1fbf4:	movcs	r0, #128	; 0x80
   1fbf8:	bx	lr

0001fbfc <dta_113_write_int8>:
   1fbfc:	cmp	r2, #100	; 0x64
   1fc00:	strble	r2, [r0]
   1fc04:	movle	r0, #0
   1fc08:	movgt	r0, #20
   1fc0c:	bx	lr

0001fc10 <dta_113_write_int16>:
   1fc10:	movw	r3, #32740	; 0x7fe4
   1fc14:	cmp	r2, r3
   1fc18:	strhle	r2, [r0]
   1fc1c:	movle	r0, #0
   1fc20:	movgt	r0, #20
   1fc24:	bx	lr

0001fc28 <dta_113_write_int32>:
   1fc28:	cmn	r2, #-2147483620	; 0x8000001c
   1fc2c:	strle	r2, [r0]
   1fc30:	movle	r0, #0
   1fc34:	movgt	r0, #20
   1fc38:	bx	lr

0001fc3c <dta_117_write_string_ref>:
   1fc3c:	cmp	r2, #0
   1fc40:	beq	1fc5c <dta_117_write_string_ref+0x20>
   1fc44:	ldr	r3, [r2, #8]
   1fc48:	ldr	r2, [r2]
   1fc4c:	str	r2, [r0]
   1fc50:	str	r3, [r0, #4]
   1fc54:	mov	r0, #0
   1fc58:	bx	lr
   1fc5c:	mov	r0, #34	; 0x22
   1fc60:	bx	lr

0001fc64 <dta_metadata_ok>:
   1fc64:	ldr	r3, [r0, #16]
   1fc68:	cmp	r3, #0
   1fc6c:	movne	r3, #6
   1fc70:	bne	1fc84 <dta_metadata_ok+0x20>
   1fc74:	ldr	r2, [r0, #8]
   1fc78:	sub	r2, r2, #104	; 0x68
   1fc7c:	cmp	r2, #16
   1fc80:	movcs	r3, #24
   1fc84:	mov	r0, r3
   1fc88:	bx	lr

0001fc8c <dta_module_ctx_free>:
   1fc8c:	str	r4, [sp, #-8]!
   1fc90:	str	lr, [sp, #4]
   1fc94:	bl	3e6c <dta_ctx_free@plt>
   1fc98:	ldr	r4, [sp]
   1fc9c:	add	sp, sp, #4
   1fca0:	pop	{pc}		; (ldr pc, [sp], #4)

0001fca4 <dta_write_tag>:
   1fca4:	ldrb	r3, [r1, #192]	; 0xc0
   1fca8:	tst	r3, #4
   1fcac:	bne	1fcb8 <dta_write_tag+0x14>
   1fcb0:	mov	r0, #0
   1fcb4:	bx	lr
   1fcb8:	str	r4, [sp, #-8]!
   1fcbc:	str	lr, [sp, #4]
   1fcc0:	mov	r1, r2
   1fcc4:	bl	4154 <readstat_write_string@plt>
   1fcc8:	ldr	r4, [sp]
   1fccc:	add	sp, sp, #4
   1fcd0:	pop	{pc}		; (ldr pc, [sp], #4)

0001fcd4 <dta_write_chunk>:
   1fcd4:	strd	r4, [sp, #-16]!
   1fcd8:	str	r6, [sp, #8]
   1fcdc:	str	lr, [sp, #12]
   1fce0:	mov	r4, r0
   1fce4:	mov	r6, r1
   1fce8:	mov	r5, r3
   1fcec:	bl	1fca4 <dta_write_tag>
   1fcf0:	cmp	r0, #0
   1fcf4:	beq	1fd08 <dta_write_chunk+0x34>
   1fcf8:	ldrd	r4, [sp]
   1fcfc:	ldr	r6, [sp, #8]
   1fd00:	add	sp, sp, #12
   1fd04:	pop	{pc}		; (ldr pc, [sp], #4)
   1fd08:	ldr	r2, [sp, #16]
   1fd0c:	mov	r1, r5
   1fd10:	mov	r0, r4
   1fd14:	bl	4454 <readstat_write_bytes@plt>
   1fd18:	cmp	r0, #0
   1fd1c:	bne	1fcf8 <dta_write_chunk+0x24>
   1fd20:	ldr	r2, [sp, #20]
   1fd24:	mov	r1, r6
   1fd28:	mov	r0, r4
   1fd2c:	bl	1fca4 <dta_write_tag>
   1fd30:	b	1fcf8 <dta_write_chunk+0x24>

0001fd34 <dta_end_data>:
   1fd34:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1fd38:	strd	r6, [sp, #8]
   1fd3c:	strd	r8, [sp, #16]
   1fd40:	strd	sl, [sp, #24]
   1fd44:	str	lr, [sp, #32]
   1fd48:	sub	sp, sp, #60	; 0x3c
   1fd4c:	ldr	r3, [r0, #308]	; 0x134
   1fd50:	cmp	r3, #0
   1fd54:	moveq	r6, #14
   1fd58:	beq	1fd7c <dta_end_data+0x48>
   1fd5c:	mov	r4, r0
   1fd60:	ldr	r5, [r0, #300]	; 0x12c
   1fd64:	ldr	r2, [pc, #1944]	; 20504 <dta_end_data+0x7d0>
   1fd68:	add	r2, pc, r2
   1fd6c:	mov	r1, r5
   1fd70:	bl	1fca4 <dta_write_tag>
   1fd74:	subs	r6, r0, #0
   1fd78:	beq	1fd9c <dta_end_data+0x68>
   1fd7c:	mov	r0, r6
   1fd80:	add	sp, sp, #60	; 0x3c
   1fd84:	ldrd	r4, [sp]
   1fd88:	ldrd	r6, [sp, #8]
   1fd8c:	ldrd	r8, [sp, #16]
   1fd90:	ldrd	sl, [sp, #24]
   1fd94:	add	sp, sp, #32
   1fd98:	pop	{pc}		; (ldr pc, [sp], #4)
   1fd9c:	ldrb	r3, [r5, #192]	; 0xc0
   1fda0:	tst	r3, #4
   1fda4:	bne	1ffcc <dta_end_data+0x298>
   1fda8:	ldr	r3, [r5, #100]	; 0x64
   1fdac:	cmp	r3, #2
   1fdb0:	beq	20120 <dta_end_data+0x3ec>
   1fdb4:	ldr	r1, [r5, #104]	; 0x68
   1fdb8:	ldr	r3, [r5, #108]	; 0x6c
   1fdbc:	add	r1, r1, r3
   1fdc0:	mov	r0, #1
   1fdc4:	bl	3d4c <calloc@plt>
   1fdc8:	str	r0, [sp, #4]
   1fdcc:	ldr	r2, [pc, #1844]	; 20508 <dta_end_data+0x7d4>
   1fdd0:	add	r2, pc, r2
   1fdd4:	mov	r1, r5
   1fdd8:	mov	r0, r4
   1fddc:	bl	1fca4 <dta_write_tag>
   1fde0:	subs	r6, r0, #0
   1fde4:	movne	sl, #0
   1fde8:	bne	1ff84 <dta_end_data+0x250>
   1fdec:	ldr	r3, [r4, #40]	; 0x28
   1fdf0:	cmp	r3, #0
   1fdf4:	ble	2044c <dta_end_data+0x718>
   1fdf8:	mov	sl, #0
   1fdfc:	mov	r8, sl
   1fe00:	str	sl, [sp, #8]
   1fe04:	ldr	r3, [pc, #1792]	; 2050c <dta_end_data+0x7d8>
   1fe08:	add	r3, pc, r3
   1fe0c:	str	r3, [sp, #12]
   1fe10:	ldr	r3, [pc, #1784]	; 20510 <dta_end_data+0x7dc>
   1fe14:	add	r3, pc, r3
   1fe18:	str	r3, [sp, #16]
   1fe1c:	ldr	r3, [pc, #1776]	; 20514 <dta_end_data+0x7e0>
   1fe20:	add	r3, pc, r3
   1fe24:	str	r3, [sp, #20]
   1fe28:	mov	r9, sl
   1fe2c:	ldr	r1, [sp, #8]
   1fe30:	mov	r0, r4
   1fe34:	bl	4424 <readstat_get_label_set@plt>
   1fe38:	str	r0, [sp]
   1fe3c:	ldr	r3, [r0, #264]	; 0x108
   1fe40:	str	r3, [sp, #28]
   1fe44:	mov	r2, #0
   1fe48:	str	r2, [sp, #32]
   1fe4c:	cmp	r3, r2
   1fe50:	ble	1fe88 <dta_end_data+0x154>
   1fe54:	mov	r6, r2
   1fe58:	mov	r1, r6
   1fe5c:	ldr	r0, [sp]
   1fe60:	bl	44cc <readstat_get_value_label@plt>
   1fe64:	ldr	r3, [sp, #32]
   1fe68:	add	r3, r3, #1
   1fe6c:	ldr	r2, [r0, #28]
   1fe70:	add	r3, r3, r2
   1fe74:	str	r3, [sp, #32]
   1fe78:	add	r6, r6, #1
   1fe7c:	ldr	r3, [sp, #28]
   1fe80:	cmp	r6, r3
   1fe84:	blt	1fe58 <dta_end_data+0x124>
   1fe88:	ldr	r2, [sp, #12]
   1fe8c:	mov	r1, r5
   1fe90:	mov	r0, r4
   1fe94:	bl	1fca4 <dta_write_tag>
   1fe98:	cmp	r0, #0
   1fe9c:	bne	20474 <dta_end_data+0x740>
   1fea0:	ldr	r3, [sp, #28]
   1fea4:	add	r2, r3, #1
   1fea8:	ldr	r3, [sp, #32]
   1feac:	add	r3, r3, r2, lsl #3
   1feb0:	str	r3, [sp, #36]	; 0x24
   1feb4:	mov	r2, #4
   1feb8:	add	r1, sp, #36	; 0x24
   1febc:	mov	r0, r4
   1fec0:	bl	4454 <readstat_write_bytes@plt>
   1fec4:	cmp	r0, #0
   1fec8:	bne	20480 <dta_end_data+0x74c>
   1fecc:	ldr	r6, [r5, #104]	; 0x68
   1fed0:	mov	r2, r6
   1fed4:	ldr	r3, [sp]
   1fed8:	add	r1, r3, #4
   1fedc:	ldr	r7, [sp, #4]
   1fee0:	mov	r0, r7
   1fee4:	bl	42bc <strncpy@plt>
   1fee8:	ldr	r2, [r5, #108]	; 0x6c
   1feec:	add	r2, r6, r2
   1fef0:	mov	r1, r7
   1fef4:	mov	r0, r4
   1fef8:	bl	4454 <readstat_write_bytes@plt>
   1fefc:	cmp	r0, #0
   1ff00:	bne	2048c <dta_end_data+0x758>
   1ff04:	ldr	r3, [sp, #32]
   1ff08:	cmp	r3, #0
   1ff0c:	bne	202a8 <dta_end_data+0x574>
   1ff10:	mov	r2, #4
   1ff14:	add	r1, sp, #32
   1ff18:	mov	r0, r4
   1ff1c:	bl	4454 <readstat_write_bytes@plt>
   1ff20:	cmp	r0, #0
   1ff24:	bne	20498 <dta_end_data+0x764>
   1ff28:	mov	r2, #4
   1ff2c:	add	r1, sp, #32
   1ff30:	mov	r0, r4
   1ff34:	bl	4454 <readstat_write_bytes@plt>
   1ff38:	cmp	r0, #0
   1ff3c:	bne	204a4 <dta_end_data+0x770>
   1ff40:	ldr	r2, [pc, #1488]	; 20518 <dta_end_data+0x7e4>
   1ff44:	add	r2, pc, r2
   1ff48:	mov	r1, r5
   1ff4c:	mov	r0, r4
   1ff50:	bl	1fca4 <dta_write_tag>
   1ff54:	cmp	r0, #0
   1ff58:	beq	20410 <dta_end_data+0x6dc>
   1ff5c:	mov	fp, r9
   1ff60:	mov	r6, r0
   1ff64:	cmp	r8, #0
   1ff68:	beq	1ff74 <dta_end_data+0x240>
   1ff6c:	mov	r0, r8
   1ff70:	bl	3eb4 <free@plt>
   1ff74:	cmp	fp, #0
   1ff78:	beq	1ff84 <dta_end_data+0x250>
   1ff7c:	mov	r0, fp
   1ff80:	bl	3eb4 <free@plt>
   1ff84:	cmp	sl, #0
   1ff88:	beq	1ff94 <dta_end_data+0x260>
   1ff8c:	mov	r0, sl
   1ff90:	bl	3eb4 <free@plt>
   1ff94:	ldr	r3, [sp, #4]
   1ff98:	cmp	r3, #0
   1ff9c:	beq	1ffa8 <dta_end_data+0x274>
   1ffa0:	mov	r0, r3
   1ffa4:	bl	3eb4 <free@plt>
   1ffa8:	cmp	r6, #0
   1ffac:	bne	1fd7c <dta_end_data+0x48>
   1ffb0:	ldr	r2, [pc, #1380]	; 2051c <dta_end_data+0x7e8>
   1ffb4:	add	r2, pc, r2
   1ffb8:	mov	r1, r5
   1ffbc:	mov	r0, r4
   1ffc0:	bl	1fca4 <dta_write_tag>
   1ffc4:	mov	r6, r0
   1ffc8:	b	1fd7c <dta_end_data+0x48>
   1ffcc:	ldr	r1, [pc, #1356]	; 20520 <dta_end_data+0x7ec>
   1ffd0:	add	r1, pc, r1
   1ffd4:	mov	r0, r4
   1ffd8:	bl	4154 <readstat_write_string@plt>
   1ffdc:	cmp	r0, #0
   1ffe0:	movne	r6, r0
   1ffe4:	bne	1fd7c <dta_end_data+0x48>
   1ffe8:	ldr	r3, [r4, #64]	; 0x40
   1ffec:	cmp	r3, #0
   1fff0:	ble	200c8 <dta_end_data+0x394>
   1fff4:	mov	r8, #0
   1fff8:	ldr	r9, [pc, #1316]	; 20524 <dta_end_data+0x7f0>
   1fffc:	add	r9, pc, r9
   20000:	mvn	fp, #125	; 0x7d
   20004:	add	sl, sp, #36	; 0x24
   20008:	b	20068 <dta_end_data+0x334>
   2000c:	ldr	r3, [r7]
   20010:	str	r3, [sp, #36]	; 0x24
   20014:	ldr	r3, [r7, #8]
   20018:	str	r3, [sp, #40]	; 0x28
   2001c:	strb	fp, [sp, #44]	; 0x2c
   20020:	ldr	r3, [r7, #16]
   20024:	str	r3, [sp, #45]	; 0x2d
   20028:	mov	r2, #13
   2002c:	mov	r1, sl
   20030:	mov	r0, r4
   20034:	bl	4454 <readstat_write_bytes@plt>
   20038:	cmp	r0, #0
   2003c:	bne	204f4 <dta_end_data+0x7c0>
   20040:	ldr	r2, [r7, #16]
   20044:	add	r1, r7, #20
   20048:	mov	r0, r4
   2004c:	bl	4454 <readstat_write_bytes@plt>
   20050:	cmp	r0, #0
   20054:	bne	204fc <dta_end_data+0x7c8>
   20058:	add	r8, r8, #1
   2005c:	ldr	r3, [r4, #64]	; 0x40
   20060:	cmp	r8, r3
   20064:	bge	200c8 <dta_end_data+0x394>
   20068:	ldr	r3, [r4, #60]	; 0x3c
   2006c:	ldr	r7, [r3, r8, lsl #2]
   20070:	mov	r1, r9
   20074:	mov	r0, r4
   20078:	bl	4154 <readstat_write_string@plt>
   2007c:	cmp	r0, #0
   20080:	bne	204ec <dta_end_data+0x7b8>
   20084:	ldr	r3, [r5, #116]	; 0x74
   20088:	cmp	r3, #4
   2008c:	bls	2000c <dta_end_data+0x2d8>
   20090:	ldr	r3, [r7]
   20094:	str	r3, [sp, #36]	; 0x24
   20098:	ldr	r3, [r7, #8]
   2009c:	str	r3, [sp, #40]	; 0x28
   200a0:	ldr	r3, [r7, #12]
   200a4:	str	r3, [sp, #44]	; 0x2c
   200a8:	strb	fp, [sp, #48]	; 0x30
   200ac:	ldr	r3, [r7, #16]
   200b0:	str	r3, [sp, #49]	; 0x31
   200b4:	mov	r2, #17
   200b8:	mov	r1, sl
   200bc:	mov	r0, r4
   200c0:	bl	4454 <readstat_write_bytes@plt>
   200c4:	b	20038 <dta_end_data+0x304>
   200c8:	ldr	r1, [pc, #1112]	; 20528 <dta_end_data+0x7f4>
   200cc:	add	r1, pc, r1
   200d0:	mov	r0, r4
   200d4:	bl	4154 <readstat_write_string@plt>
   200d8:	cmp	r0, #0
   200dc:	movne	r6, r0
   200e0:	bne	1fd7c <dta_end_data+0x48>
   200e4:	b	1fda8 <dta_end_data+0x74>
   200e8:	mov	r7, #0
   200ec:	b	201a0 <dta_end_data+0x46c>
   200f0:	mov	r6, #23
   200f4:	cmp	r9, #0
   200f8:	beq	1ffa8 <dta_end_data+0x274>
   200fc:	mov	r0, r9
   20100:	bl	3eb4 <free@plt>
   20104:	b	1ffa8 <dta_end_data+0x274>
   20108:	mov	r6, #20
   2010c:	b	200f4 <dta_end_data+0x3c0>
   20110:	mov	r6, r0
   20114:	b	200f4 <dta_end_data+0x3c0>
   20118:	mov	r6, r0
   2011c:	b	200f4 <dta_end_data+0x3c0>
   20120:	ldr	r3, [r4, #40]	; 0x28
   20124:	cmp	r3, #0
   20128:	ble	1ffa8 <dta_end_data+0x274>
   2012c:	mov	r9, #0
   20130:	mov	sl, r9
   20134:	add	r3, sp, #32
   20138:	str	r3, [sp]
   2013c:	add	fp, sp, #36	; 0x24
   20140:	mov	r1, sl
   20144:	mov	r0, r4
   20148:	bl	4424 <readstat_get_label_set@plt>
   2014c:	mov	r8, r0
   20150:	ldr	r3, [r0, #264]	; 0x108
   20154:	cmp	r3, #0
   20158:	ble	200e8 <dta_end_data+0x3b4>
   2015c:	mov	r7, #0
   20160:	mov	r6, r7
   20164:	mov	r1, r6
   20168:	mov	r0, r8
   2016c:	bl	44cc <readstat_get_value_label@plt>
   20170:	ldrb	r3, [r0, #12]
   20174:	cmp	r3, #0
   20178:	bne	200f0 <dta_end_data+0x3bc>
   2017c:	ldr	r3, [r0, #8]
   20180:	cmp	r3, #1024	; 0x400
   20184:	bhi	20108 <dta_end_data+0x3d4>
   20188:	cmp	r7, r3
   2018c:	movlt	r7, r3
   20190:	add	r6, r6, #1
   20194:	ldr	r3, [r8, #264]	; 0x108
   20198:	cmp	r6, r3
   2019c:	blt	20164 <dta_end_data+0x430>
   201a0:	add	r7, r7, #1
   201a4:	lsl	r7, r7, #3
   201a8:	strh	r7, [sp, #32]
   201ac:	mov	r2, #2
   201b0:	ldr	r1, [sp]
   201b4:	mov	r0, r4
   201b8:	bl	4454 <readstat_write_bytes@plt>
   201bc:	cmp	r0, #0
   201c0:	bne	20110 <dta_end_data+0x3dc>
   201c4:	mov	r3, #0
   201c8:	str	r3, [fp]
   201cc:	str	r3, [fp, #4]
   201d0:	str	r3, [fp, #8]
   201d4:	strh	r3, [fp, #12]
   201d8:	ldr	r6, [r5, #104]	; 0x68
   201dc:	mov	r2, r6
   201e0:	add	r1, r8, #4
   201e4:	mov	r0, fp
   201e8:	bl	42bc <strncpy@plt>
   201ec:	ldr	r2, [r5, #108]	; 0x6c
   201f0:	add	r2, r6, r2
   201f4:	mov	r1, fp
   201f8:	mov	r0, r4
   201fc:	bl	4454 <readstat_write_bytes@plt>
   20200:	cmp	r0, #0
   20204:	bne	20118 <dta_end_data+0x3e4>
   20208:	ldrsh	r6, [sp, #32]
   2020c:	mov	r1, r6
   20210:	mov	r0, r9
   20214:	bl	3fec <realloc@plt>
   20218:	mov	r9, r0
   2021c:	mov	r2, r6
   20220:	mov	r1, #0
   20224:	bl	42a4 <memset@plt>
   20228:	ldr	r3, [r8, #264]	; 0x108
   2022c:	cmp	r3, #0
   20230:	ble	20270 <dta_end_data+0x53c>
   20234:	mov	r6, #0
   20238:	mov	r1, r6
   2023c:	mov	r0, r8
   20240:	bl	44cc <readstat_get_value_label@plt>
   20244:	ldr	r2, [r0, #28]
   20248:	ldr	r3, [r0, #8]
   2024c:	cmp	r2, #8
   20250:	movcs	r2, #8
   20254:	ldr	r1, [r0, #24]
   20258:	add	r0, r9, r3, lsl #3
   2025c:	bl	3f14 <memcpy@plt>
   20260:	add	r6, r6, #1
   20264:	ldr	r3, [r8, #264]	; 0x108
   20268:	cmp	r6, r3
   2026c:	blt	20238 <dta_end_data+0x504>
   20270:	ldrsh	r2, [sp, #32]
   20274:	mov	r1, r9
   20278:	mov	r0, r4
   2027c:	bl	4454 <readstat_write_bytes@plt>
   20280:	cmp	r0, #0
   20284:	bne	202a0 <dta_end_data+0x56c>
   20288:	add	sl, sl, #1
   2028c:	ldr	r3, [r4, #40]	; 0x28
   20290:	cmp	sl, r3
   20294:	blt	20140 <dta_end_data+0x40c>
   20298:	mov	r6, r0
   2029c:	b	200fc <dta_end_data+0x3c8>
   202a0:	mov	r6, r0
   202a4:	b	200fc <dta_end_data+0x3c8>
   202a8:	ldr	r1, [sp, #28]
   202ac:	lsl	r1, r1, #2
   202b0:	mov	r0, r8
   202b4:	bl	3fec <realloc@plt>
   202b8:	mov	r8, r0
   202bc:	ldr	r1, [sp, #28]
   202c0:	lsl	r1, r1, #2
   202c4:	mov	r0, r9
   202c8:	bl	3fec <realloc@plt>
   202cc:	mov	r9, r0
   202d0:	ldr	r1, [sp, #32]
   202d4:	mov	r0, sl
   202d8:	bl	3fec <realloc@plt>
   202dc:	mov	sl, r0
   202e0:	ldr	r1, [sp, #16]
   202e4:	ldr	r0, [sp]
   202e8:	bl	3da0 <readstat_sort_label_set@plt>
   202ec:	ldr	r3, [sp, #28]
   202f0:	cmp	r3, #0
   202f4:	ble	20378 <dta_end_data+0x644>
   202f8:	mov	fp, #0
   202fc:	mov	r6, fp
   20300:	b	20338 <dta_end_data+0x604>
   20304:	ldr	r3, [r0, #8]
   20308:	str	r3, [r9, r6, lsl #2]
   2030c:	mov	r2, r7
   20310:	add	r0, sl, fp
   20314:	bl	3f14 <memcpy@plt>
   20318:	add	r7, r7, fp
   2031c:	add	fp, r7, #1
   20320:	mov	r3, #0
   20324:	strb	r3, [sl, r7]
   20328:	add	r6, r6, #1
   2032c:	ldr	r3, [sp, #28]
   20330:	cmp	r6, r3
   20334:	bge	20378 <dta_end_data+0x644>
   20338:	mov	r1, r6
   2033c:	ldr	r0, [sp]
   20340:	bl	44cc <readstat_get_value_label@plt>
   20344:	ldr	r1, [r0, #24]
   20348:	ldr	r7, [r0, #28]
   2034c:	str	fp, [r8, r6, lsl #2]
   20350:	ldrb	r3, [r0, #12]
   20354:	cmp	r3, #0
   20358:	beq	20304 <dta_end_data+0x5d0>
   2035c:	ldr	r0, [r4, #8]
   20360:	cmp	r0, #112	; 0x70
   20364:	ble	20440 <dta_end_data+0x70c>
   20368:	add	r3, r3, #-2147483648	; 0x80000000
   2036c:	sub	r3, r3, #123	; 0x7b
   20370:	str	r3, [r9, r6, lsl #2]
   20374:	b	2030c <dta_end_data+0x5d8>
   20378:	mov	r2, #4
   2037c:	add	r1, sp, #28
   20380:	mov	r0, r4
   20384:	bl	4454 <readstat_write_bytes@plt>
   20388:	cmp	r0, #0
   2038c:	bne	204b0 <dta_end_data+0x77c>
   20390:	mov	r2, #4
   20394:	add	r1, sp, #32
   20398:	mov	r0, r4
   2039c:	bl	4454 <readstat_write_bytes@plt>
   203a0:	cmp	r0, #0
   203a4:	bne	204bc <dta_end_data+0x788>
   203a8:	ldr	r2, [sp, #28]
   203ac:	lsl	r2, r2, #2
   203b0:	mov	r1, r8
   203b4:	mov	r0, r4
   203b8:	bl	4454 <readstat_write_bytes@plt>
   203bc:	cmp	r0, #0
   203c0:	bne	204c8 <dta_end_data+0x794>
   203c4:	ldr	r2, [sp, #28]
   203c8:	lsl	r2, r2, #2
   203cc:	mov	r1, r9
   203d0:	mov	r0, r4
   203d4:	bl	4454 <readstat_write_bytes@plt>
   203d8:	cmp	r0, #0
   203dc:	bne	204d4 <dta_end_data+0x7a0>
   203e0:	ldr	r2, [sp, #32]
   203e4:	mov	r1, sl
   203e8:	mov	r0, r4
   203ec:	bl	4454 <readstat_write_bytes@plt>
   203f0:	cmp	r0, #0
   203f4:	bne	204e0 <dta_end_data+0x7ac>
   203f8:	ldr	r2, [sp, #20]
   203fc:	mov	r1, r5
   20400:	mov	r0, r4
   20404:	bl	1fca4 <dta_write_tag>
   20408:	cmp	r0, #0
   2040c:	bne	20434 <dta_end_data+0x700>
   20410:	ldr	r3, [sp, #8]
   20414:	add	r3, r3, #1
   20418:	mov	r2, r3
   2041c:	str	r3, [sp, #8]
   20420:	ldr	r3, [r4, #40]	; 0x28
   20424:	cmp	r2, r3
   20428:	blt	1fe2c <dta_end_data+0xf8>
   2042c:	mov	fp, r9
   20430:	b	20458 <dta_end_data+0x724>
   20434:	mov	fp, r9
   20438:	mov	r6, r0
   2043c:	b	1ff64 <dta_end_data+0x230>
   20440:	mov	fp, r9
   20444:	mov	r6, #23
   20448:	b	1ff64 <dta_end_data+0x230>
   2044c:	mov	sl, #0
   20450:	mov	fp, sl
   20454:	mov	r8, sl
   20458:	ldr	r2, [pc, #204]	; 2052c <dta_end_data+0x7f8>
   2045c:	add	r2, pc, r2
   20460:	mov	r1, r5
   20464:	mov	r0, r4
   20468:	bl	1fca4 <dta_write_tag>
   2046c:	mov	r6, r0
   20470:	b	1ff64 <dta_end_data+0x230>
   20474:	mov	fp, r9
   20478:	mov	r6, r0
   2047c:	b	1ff64 <dta_end_data+0x230>
   20480:	mov	fp, r9
   20484:	mov	r6, r0
   20488:	b	1ff64 <dta_end_data+0x230>
   2048c:	mov	fp, r9
   20490:	mov	r6, r0
   20494:	b	1ff64 <dta_end_data+0x230>
   20498:	mov	fp, r9
   2049c:	mov	r6, r0
   204a0:	b	1ff64 <dta_end_data+0x230>
   204a4:	mov	fp, r9
   204a8:	mov	r6, r0
   204ac:	b	1ff64 <dta_end_data+0x230>
   204b0:	mov	fp, r9
   204b4:	mov	r6, r0
   204b8:	b	1ff64 <dta_end_data+0x230>
   204bc:	mov	fp, r9
   204c0:	mov	r6, r0
   204c4:	b	1ff64 <dta_end_data+0x230>
   204c8:	mov	fp, r9
   204cc:	mov	r6, r0
   204d0:	b	1ff64 <dta_end_data+0x230>
   204d4:	mov	fp, r9
   204d8:	mov	r6, r0
   204dc:	b	1ff64 <dta_end_data+0x230>
   204e0:	mov	fp, r9
   204e4:	mov	r6, r0
   204e8:	b	1ff64 <dta_end_data+0x230>
   204ec:	mov	r6, r0
   204f0:	b	1fd7c <dta_end_data+0x48>
   204f4:	mov	r6, r0
   204f8:	b	1fd7c <dta_end_data+0x48>
   204fc:	mov	r6, r0
   20500:	b	1fd7c <dta_end_data+0x48>
   20504:	.word	0x00008adc
   20508:	.word	0x00008ab4
   2050c:	.word	0x00008a8c
   20510:	.word	0xfffffca8
   20514:	.word	0x00008a7c
   20518:	.word	0x00008958
   2051c:	.word	0x0000893c
   20520:	.word	0x00008854
   20524:	.word	0x00008830
   20528:	.word	0x00008808
   2052c:	.word	0x00008484

00020530 <dta_118_write_string_ref>:
   20530:	cmp	r2, #0
   20534:	beq	205ac <dta_118_write_string_ref+0x7c>
   20538:	strd	r4, [sp, #-16]!
   2053c:	str	r6, [sp, #8]
   20540:	str	lr, [sp, #12]
   20544:	sub	sp, sp, #8
   20548:	mov	r4, r0
   2054c:	ldr	r3, [r2]
   20550:	ldr	r6, [r2, #8]
   20554:	ldr	r5, [r2, #12]
   20558:	str	r6, [sp]
   2055c:	str	r5, [sp, #4]
   20560:	strh	r3, [r0]
   20564:	bl	3ea8 <machine_is_little_endian@plt>
   20568:	cmp	r0, #0
   2056c:	bne	20584 <dta_118_write_string_ref+0x54>
   20570:	lsl	r5, r5, #16
   20574:	orr	r5, r5, r6, lsr #16
   20578:	lsl	r6, r6, #16
   2057c:	str	r6, [sp]
   20580:	str	r5, [sp, #4]
   20584:	ldr	r3, [sp]
   20588:	str	r3, [r4, #2]
   2058c:	ldrh	r3, [sp, #4]
   20590:	strh	r3, [r4, #6]
   20594:	mov	r0, #0
   20598:	add	sp, sp, #8
   2059c:	ldrd	r4, [sp]
   205a0:	ldr	r6, [sp, #8]
   205a4:	add	sp, sp, #12
   205a8:	pop	{pc}		; (ldr pc, [sp], #4)
   205ac:	mov	r0, #34	; 0x22
   205b0:	bx	lr

000205b4 <dta_emit_header_data_label>:
   205b4:	strd	r4, [sp, #-20]!	; 0xffffffec
   205b8:	strd	r6, [sp, #8]
   205bc:	str	lr, [sp, #16]
   205c0:	sub	sp, sp, #12
   205c4:	mov	r5, r0
   205c8:	mov	r6, r1
   205cc:	ldr	r2, [pc, #280]	; 206ec <dta_emit_header_data_label+0x138>
   205d0:	add	r2, pc, r2
   205d4:	bl	1fca4 <dta_write_tag>
   205d8:	subs	r4, r0, #0
   205dc:	bne	206d4 <dta_emit_header_data_label+0x120>
   205e0:	ldr	r3, [r6, #8]
   205e4:	cmp	r3, #0
   205e8:	beq	2067c <dta_emit_header_data_label+0xc8>
   205ec:	cmp	r3, #1
   205f0:	beq	2062c <dta_emit_header_data_label+0x78>
   205f4:	cmp	r3, #2
   205f8:	beq	20654 <dta_emit_header_data_label+0xa0>
   205fc:	add	r1, r5, #88	; 0x58
   20600:	mov	r0, r5
   20604:	bl	4154 <readstat_write_string@plt>
   20608:	subs	r4, r0, #0
   2060c:	bne	206d4 <dta_emit_header_data_label+0x120>
   20610:	ldr	r2, [pc, #216]	; 206f0 <dta_emit_header_data_label+0x13c>
   20614:	add	r2, pc, r2
   20618:	mov	r1, r6
   2061c:	mov	r0, r5
   20620:	bl	1fca4 <dta_write_tag>
   20624:	mov	r4, r0
   20628:	b	206d4 <dta_emit_header_data_label+0x120>
   2062c:	add	r0, r5, #88	; 0x58
   20630:	bl	41fc <strlen@plt>
   20634:	strb	r0, [sp, #6]
   20638:	mov	r2, #1
   2063c:	add	r1, sp, #6
   20640:	mov	r0, r5
   20644:	bl	4454 <readstat_write_bytes@plt>
   20648:	subs	r4, r0, #0
   2064c:	beq	205fc <dta_emit_header_data_label+0x48>
   20650:	b	206d4 <dta_emit_header_data_label+0x120>
   20654:	add	r0, r5, #88	; 0x58
   20658:	bl	41fc <strlen@plt>
   2065c:	strh	r0, [sp, #6]
   20660:	mov	r2, #2
   20664:	add	r1, sp, #6
   20668:	mov	r0, r5
   2066c:	bl	4454 <readstat_write_bytes@plt>
   20670:	subs	r4, r0, #0
   20674:	beq	205fc <dta_emit_header_data_label+0x48>
   20678:	b	206d4 <dta_emit_header_data_label+0x120>
   2067c:	ldr	r4, [r6, #4]
   20680:	mov	r1, r4
   20684:	mov	r0, #1
   20688:	bl	3d4c <calloc@plt>
   2068c:	mov	r7, r0
   20690:	mov	r2, r4
   20694:	add	r1, r5, #88	; 0x58
   20698:	bl	42bc <strncpy@plt>
   2069c:	mov	r2, r4
   206a0:	mov	r1, r7
   206a4:	mov	r0, r5
   206a8:	bl	4454 <readstat_write_bytes@plt>
   206ac:	subs	r4, r0, #0
   206b0:	bne	206cc <dta_emit_header_data_label+0x118>
   206b4:	ldr	r2, [pc, #56]	; 206f4 <dta_emit_header_data_label+0x140>
   206b8:	add	r2, pc, r2
   206bc:	mov	r1, r6
   206c0:	mov	r0, r5
   206c4:	bl	1fca4 <dta_write_tag>
   206c8:	mov	r4, r0
   206cc:	mov	r0, r7
   206d0:	bl	3eb4 <free@plt>
   206d4:	mov	r0, r4
   206d8:	add	sp, sp, #12
   206dc:	ldrd	r4, [sp]
   206e0:	ldrd	r6, [sp, #8]
   206e4:	add	sp, sp, #16
   206e8:	pop	{pc}		; (ldr pc, [sp], #4)
   206ec:	.word	0x00008098
   206f0:	.word	0x0000805c
   206f4:	.word	0x00007fb8

000206f8 <dta_measure_tag>:
   206f8:	ldrb	r3, [r0, #192]	; 0xc0
   206fc:	tst	r3, #4
   20700:	beq	20720 <dta_measure_tag+0x28>
   20704:	str	r4, [sp, #-8]!
   20708:	str	lr, [sp, #4]
   2070c:	mov	r0, r1
   20710:	bl	41fc <strlen@plt>
   20714:	ldr	r4, [sp]
   20718:	add	sp, sp, #4
   2071c:	pop	{pc}		; (ldr pc, [sp], #4)
   20720:	mov	r0, #0
   20724:	bx	lr

00020728 <dta_write_string>:
   20728:	strd	r4, [sp, #-16]!
   2072c:	str	r6, [sp, #8]
   20730:	str	lr, [sp, #12]
   20734:	mov	r6, r0
   20738:	ldr	r5, [r1, #1596]	; 0x63c
   2073c:	subs	r4, r2, #0
   20740:	beq	20750 <dta_write_string+0x28>
   20744:	ldrb	r3, [r4]
   20748:	cmp	r3, #0
   2074c:	bne	20774 <dta_write_string+0x4c>
   20750:	mov	r2, r5
   20754:	mov	r1, #0
   20758:	mov	r0, r6
   2075c:	bl	42a4 <memset@plt>
   20760:	mov	r0, #0
   20764:	ldrd	r4, [sp]
   20768:	ldr	r6, [sp, #8]
   2076c:	add	sp, sp, #12
   20770:	pop	{pc}		; (ldr pc, [sp], #4)
   20774:	mov	r0, r4
   20778:	bl	41fc <strlen@plt>
   2077c:	cmp	r5, r0
   20780:	movcc	r0, #22
   20784:	bcc	20764 <dta_write_string+0x3c>
   20788:	mov	r2, r5
   2078c:	mov	r1, r4
   20790:	mov	r0, r6
   20794:	bl	42bc <strncpy@plt>
   20798:	mov	r0, #0
   2079c:	b	20764 <dta_write_string+0x3c>

000207a0 <dta_emit_header_time_stamp>:
   207a0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   207a4:	strd	r6, [sp, #8]
   207a8:	str	r8, [sp, #16]
   207ac:	str	lr, [sp, #20]
   207b0:	sub	sp, sp, #72	; 0x48
   207b4:	ldr	r6, [r1, #16]
   207b8:	cmp	r6, #0
   207bc:	bne	207dc <dta_emit_header_time_stamp+0x3c>
   207c0:	mov	r0, r6
   207c4:	add	sp, sp, #72	; 0x48
   207c8:	ldrd	r4, [sp]
   207cc:	ldrd	r6, [sp, #8]
   207d0:	ldr	r8, [sp, #16]
   207d4:	add	sp, sp, #20
   207d8:	pop	{pc}		; (ldr pc, [sp], #4)
   207dc:	mov	r4, r1
   207e0:	mov	r5, r0
   207e4:	ldr	r3, [r0, #20]
   207e8:	str	r3, [sp, #68]	; 0x44
   207ec:	add	r0, sp, #68	; 0x44
   207f0:	bl	4160 <localtime@plt>
   207f4:	mov	r6, r0
   207f8:	ldr	r8, [r4, #16]
   207fc:	mov	r1, r8
   20800:	mov	r0, #1
   20804:	bl	3d4c <calloc@plt>
   20808:	mov	r7, r0
   2080c:	ldr	r1, [pc, #312]	; 2094c <dta_emit_header_time_stamp+0x1ac>
   20810:	add	r1, pc, r1
   20814:	add	r0, sp, #20
   20818:	ldrd	r2, [r1]
   2081c:	strd	r2, [sp, #20]
   20820:	ldrd	r2, [r1, #8]
   20824:	strd	r2, [sp, #28]
   20828:	ldrd	r2, [r1, #16]
   2082c:	strd	r2, [sp, #36]	; 0x24
   20830:	ldrd	r2, [r1, #24]
   20834:	strd	r2, [sp, #44]	; 0x2c
   20838:	ldrd	r2, [r1, #32]
   2083c:	strd	r2, [sp, #52]	; 0x34
   20840:	ldrd	r2, [r1, #40]	; 0x28
   20844:	strd	r2, [sp, #60]	; 0x3c
   20848:	cmp	r6, #0
   2084c:	moveq	r6, #39	; 0x27
   20850:	beq	20940 <dta_emit_header_time_stamp+0x1a0>
   20854:	cmp	r7, #0
   20858:	moveq	r6, #3
   2085c:	beq	20940 <dta_emit_header_time_stamp+0x1a0>
   20860:	ldr	r3, [r6, #12]
   20864:	ldr	r2, [r6, #4]
   20868:	str	r2, [sp, #12]
   2086c:	ldr	r2, [r6, #8]
   20870:	str	r2, [sp, #8]
   20874:	ldr	r2, [r6, #20]
   20878:	add	r2, r2, #1888	; 0x760
   2087c:	add	r2, r2, #12
   20880:	str	r2, [sp, #4]
   20884:	ldr	r1, [r6, #16]
   20888:	add	r2, r0, r1, lsl #2
   2088c:	str	r2, [sp]
   20890:	ldr	r2, [pc, #184]	; 20950 <dta_emit_header_time_stamp+0x1b0>
   20894:	add	r2, pc, r2
   20898:	mov	r1, r8
   2089c:	mov	r0, r7
   208a0:	bl	4280 <snprintf@plt>
   208a4:	uxtb	r0, r0
   208a8:	strb	r0, [sp, #19]
   208ac:	cmp	r0, #0
   208b0:	moveq	r6, #13
   208b4:	beq	20940 <dta_emit_header_time_stamp+0x1a0>
   208b8:	ldrb	r3, [r4, #192]	; 0xc0
   208bc:	tst	r3, #4
   208c0:	beq	2092c <dta_emit_header_time_stamp+0x18c>
   208c4:	ldr	r2, [pc, #136]	; 20954 <dta_emit_header_time_stamp+0x1b4>
   208c8:	add	r2, pc, r2
   208cc:	mov	r1, r4
   208d0:	mov	r0, r5
   208d4:	bl	1fca4 <dta_write_tag>
   208d8:	subs	r6, r0, #0
   208dc:	bne	20940 <dta_emit_header_time_stamp+0x1a0>
   208e0:	mov	r2, #1
   208e4:	add	r1, sp, #19
   208e8:	mov	r0, r5
   208ec:	bl	4454 <readstat_write_bytes@plt>
   208f0:	subs	r6, r0, #0
   208f4:	bne	20940 <dta_emit_header_time_stamp+0x1a0>
   208f8:	ldrb	r2, [sp, #19]
   208fc:	mov	r1, r7
   20900:	mov	r0, r5
   20904:	bl	4454 <readstat_write_bytes@plt>
   20908:	subs	r6, r0, #0
   2090c:	bne	20940 <dta_emit_header_time_stamp+0x1a0>
   20910:	ldr	r2, [pc, #64]	; 20958 <dta_emit_header_time_stamp+0x1b8>
   20914:	add	r2, pc, r2
   20918:	mov	r1, r4
   2091c:	mov	r0, r5
   20920:	bl	1fca4 <dta_write_tag>
   20924:	mov	r6, r0
   20928:	b	20940 <dta_emit_header_time_stamp+0x1a0>
   2092c:	ldr	r2, [r4, #16]
   20930:	mov	r1, r7
   20934:	mov	r0, r5
   20938:	bl	4454 <readstat_write_bytes@plt>
   2093c:	mov	r6, r0
   20940:	mov	r0, r7
   20944:	bl	3eb4 <free@plt>
   20948:	b	207c0 <dta_emit_header_time_stamp+0x20>
   2094c:	.word	0x00008094
   20950:	.word	0x0000806c
   20954:	.word	0x00007db4
   20958:	.word	0x00007d74

0002095c <dta_begin_data>:
   2095c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   20960:	strd	r6, [sp, #8]
   20964:	strd	r8, [sp, #16]
   20968:	strd	sl, [sp, #24]
   2096c:	str	lr, [sp, #32]
   20970:	add	fp, sp, #32
   20974:	sub	sp, sp, #188	; 0xbc
   20978:	ldr	r3, [r0, #308]	; 0x134
   2097c:	cmp	r3, #0
   20980:	moveq	r8, #14
   20984:	beq	21670 <dta_begin_data+0xd14>
   20988:	mov	r5, r0
   2098c:	mov	r0, #0
   20990:	bl	455c <dta_ctx_alloc@plt>
   20994:	mov	r4, r0
   20998:	ldr	r8, [r5, #28]
   2099c:	ldr	r6, [r5, #80]	; 0x50
   209a0:	asr	r7, r6, #31
   209a4:	bl	3ea8 <machine_is_little_endian@plt>
   209a8:	cmp	r0, #0
   209ac:	movne	r2, #2
   209b0:	moveq	r2, #1
   209b4:	mov	r3, #0
   209b8:	str	r3, [sp, #12]
   209bc:	str	r3, [sp, #8]
   209c0:	ldrb	r3, [r5, #8]
   209c4:	str	r3, [sp, #4]
   209c8:	str	r2, [sp]
   209cc:	mov	r2, r6
   209d0:	mov	r3, r7
   209d4:	mov	r1, r8
   209d8:	mov	r0, r4
   209dc:	bl	41cc <dta_ctx_init@plt>
   209e0:	subs	r8, r0, #0
   209e4:	beq	209f4 <dta_begin_data+0x98>
   209e8:	mov	r0, r4
   209ec:	bl	3e6c <dta_ctx_free@plt>
   209f0:	b	21670 <dta_begin_data+0xd14>
   209f4:	ldrb	r3, [r4, #192]	; 0xc0
   209f8:	tst	r3, #4
   209fc:	bne	20af4 <dta_begin_data+0x198>
   20a00:	mov	r2, #0
   20a04:	str	r2, [fp, #-164]	; 0xffffff5c
   20a08:	str	r2, [fp, #-160]	; 0xffffff60
   20a0c:	strh	r2, [fp, #-156]	; 0xffffff64
   20a10:	ldr	r3, [r5, #8]
   20a14:	strb	r3, [fp, #-164]	; 0xffffff5c
   20a18:	bl	3ea8 <machine_is_little_endian@plt>
   20a1c:	cmp	r0, #0
   20a20:	movne	r3, #2
   20a24:	moveq	r3, #1
   20a28:	strb	r3, [fp, #-163]	; 0xffffff5d
   20a2c:	mov	r3, #1
   20a30:	strb	r3, [fp, #-162]	; 0xffffff5e
   20a34:	mov	r3, #0
   20a38:	strb	r3, [fp, #-161]	; 0xffffff5f
   20a3c:	ldr	r3, [r5, #28]
   20a40:	strh	r3, [fp, #-160]	; 0xffffff60
   20a44:	ldr	r2, [r5, #80]	; 0x50
   20a48:	str	r2, [fp, #-158]	; 0xffffff62
   20a4c:	cmp	r3, #32768	; 0x8000
   20a50:	blt	20d14 <dta_begin_data+0x3b8>
   20a54:	ldrb	r3, [r4, #192]	; 0xc0
   20a58:	tst	r3, #4
   20a5c:	bne	20d50 <dta_begin_data+0x3f4>
   20a60:	ldr	r2, [pc, #3884]	; 21994 <dta_begin_data+0x1038>
   20a64:	add	r2, pc, r2
   20a68:	mov	r1, r4
   20a6c:	mov	r0, r5
   20a70:	bl	1fca4 <dta_write_tag>
   20a74:	subs	r8, r0, #0
   20a78:	bne	209e8 <dta_begin_data+0x8c>
   20a7c:	ldr	r3, [r4, #148]	; 0x94
   20a80:	cmp	r3, #0
   20a84:	ble	212e4 <dta_begin_data+0x988>
   20a88:	mov	r6, #0
   20a8c:	mov	r9, r6
   20a90:	sub	r7, fp, #164	; 0xa4
   20a94:	mov	r1, r6
   20a98:	mov	r0, r5
   20a9c:	bl	437c <readstat_get_variable@plt>
   20aa0:	strh	r9, [fp, #-164]	; 0xffffff5c
   20aa4:	mov	r2, r7
   20aa8:	ldrb	r1, [r4, #20]
   20aac:	bl	1f918 <dta_typecode_for_variable>
   20ab0:	cmp	r0, #0
   20ab4:	bne	2187c <dta_begin_data+0xf20>
   20ab8:	ldrh	r1, [fp, #-164]	; 0xffffff5c
   20abc:	ldr	r2, [r4, #28]
   20ac0:	lsl	r3, r6, #1
   20ac4:	strh	r1, [r2, r3]
   20ac8:	add	r6, r6, #1
   20acc:	ldr	r3, [r4, #148]	; 0x94
   20ad0:	cmp	r6, r3
   20ad4:	blt	20a94 <dta_begin_data+0x138>
   20ad8:	cmp	r3, #0
   20adc:	ble	212e4 <dta_begin_data+0x988>
   20ae0:	mov	r6, #0
   20ae4:	sub	r7, fp, #164	; 0xa4
   20ae8:	mov	sl, #2
   20aec:	mov	r9, #1
   20af0:	b	212ac <dta_begin_data+0x950>
   20af4:	ldr	r2, [pc, #3740]	; 21998 <dta_begin_data+0x103c>
   20af8:	add	r2, pc, r2
   20afc:	mov	r1, r4
   20b00:	mov	r0, r5
   20b04:	bl	1fca4 <dta_write_tag>
   20b08:	cmp	r0, #0
   20b0c:	beq	20b18 <dta_begin_data+0x1bc>
   20b10:	mov	r8, r0
   20b14:	b	209e8 <dta_begin_data+0x8c>
   20b18:	ldr	r2, [pc, #3708]	; 2199c <dta_begin_data+0x1040>
   20b1c:	add	r2, pc, r2
   20b20:	mov	r1, r4
   20b24:	mov	r0, r5
   20b28:	bl	1fca4 <dta_write_tag>
   20b2c:	cmp	r0, #0
   20b30:	bne	20b10 <dta_begin_data+0x1b4>
   20b34:	ldr	r3, [r5, #8]
   20b38:	ldr	r2, [pc, #3680]	; 219a0 <dta_begin_data+0x1044>
   20b3c:	add	r2, pc, r2
   20b40:	mov	r1, #128	; 0x80
   20b44:	sub	r6, fp, #164	; 0xa4
   20b48:	mov	r0, r6
   20b4c:	bl	4280 <snprintf@plt>
   20b50:	mov	r1, r6
   20b54:	mov	r0, r5
   20b58:	bl	4154 <readstat_write_string@plt>
   20b5c:	cmp	r0, #0
   20b60:	bne	20b10 <dta_begin_data+0x1b4>
   20b64:	bl	3ea8 <machine_is_little_endian@plt>
   20b68:	cmp	r0, #0
   20b6c:	bne	20c88 <dta_begin_data+0x32c>
   20b70:	ldr	r3, [pc, #3628]	; 219a4 <dta_begin_data+0x1048>
   20b74:	add	r3, pc, r3
   20b78:	ldr	r2, [pc, #3624]	; 219a8 <dta_begin_data+0x104c>
   20b7c:	add	r2, pc, r2
   20b80:	str	r2, [sp, #4]
   20b84:	mov	r2, #3
   20b88:	str	r2, [sp]
   20b8c:	ldr	r2, [pc, #3608]	; 219ac <dta_begin_data+0x1050>
   20b90:	add	r2, pc, r2
   20b94:	mov	r1, r4
   20b98:	mov	r0, r5
   20b9c:	bl	1fcd4 <dta_write_chunk>
   20ba0:	cmp	r0, #0
   20ba4:	bne	20b10 <dta_begin_data+0x1b4>
   20ba8:	ldr	r3, [r5, #8]
   20bac:	cmp	r3, #118	; 0x76
   20bb0:	ble	20c94 <dta_begin_data+0x338>
   20bb4:	ldr	r3, [r5, #28]
   20bb8:	str	r3, [fp, #-172]	; 0xffffff54
   20bbc:	ldr	r3, [pc, #3564]	; 219b0 <dta_begin_data+0x1054>
   20bc0:	add	r3, pc, r3
   20bc4:	str	r3, [sp, #4]
   20bc8:	mov	r3, #4
   20bcc:	str	r3, [sp]
   20bd0:	sub	r3, fp, #172	; 0xac
   20bd4:	ldr	r2, [pc, #3544]	; 219b4 <dta_begin_data+0x1058>
   20bd8:	add	r2, pc, r2
   20bdc:	mov	r1, r4
   20be0:	mov	r0, r5
   20be4:	bl	1fcd4 <dta_write_chunk>
   20be8:	cmp	r0, #0
   20bec:	bne	20b10 <dta_begin_data+0x1b4>
   20bf0:	ldr	r3, [r5, #8]
   20bf4:	cmp	r3, #117	; 0x75
   20bf8:	ble	20cd4 <dta_begin_data+0x378>
   20bfc:	ldr	r2, [r5, #80]	; 0x50
   20c00:	asr	r3, r2, #31
   20c04:	strd	r2, [fp, #-172]	; 0xffffff54
   20c08:	ldr	r3, [pc, #3496]	; 219b8 <dta_begin_data+0x105c>
   20c0c:	add	r3, pc, r3
   20c10:	str	r3, [sp, #4]
   20c14:	mov	r3, #8
   20c18:	str	r3, [sp]
   20c1c:	sub	r3, fp, #172	; 0xac
   20c20:	ldr	r2, [pc, #3476]	; 219bc <dta_begin_data+0x1060>
   20c24:	add	r2, pc, r2
   20c28:	mov	r1, r4
   20c2c:	mov	r0, r5
   20c30:	bl	1fcd4 <dta_write_chunk>
   20c34:	cmp	r0, #0
   20c38:	bne	20b10 <dta_begin_data+0x1b4>
   20c3c:	mov	r1, r4
   20c40:	mov	r0, r5
   20c44:	bl	205b4 <dta_emit_header_data_label>
   20c48:	cmp	r0, #0
   20c4c:	bne	20b10 <dta_begin_data+0x1b4>
   20c50:	mov	r1, r4
   20c54:	mov	r0, r5
   20c58:	bl	207a0 <dta_emit_header_time_stamp>
   20c5c:	cmp	r0, #0
   20c60:	bne	20b10 <dta_begin_data+0x1b4>
   20c64:	ldr	r2, [pc, #3412]	; 219c0 <dta_begin_data+0x1064>
   20c68:	add	r2, pc, r2
   20c6c:	mov	r1, r4
   20c70:	mov	r0, r5
   20c74:	bl	1fca4 <dta_write_tag>
   20c78:	cmp	r0, #0
   20c7c:	movne	r8, r0
   20c80:	bne	209e8 <dta_begin_data+0x8c>
   20c84:	b	20a54 <dta_begin_data+0xf8>
   20c88:	ldr	r3, [pc, #3380]	; 219c4 <dta_begin_data+0x1068>
   20c8c:	add	r3, pc, r3
   20c90:	b	20b78 <dta_begin_data+0x21c>
   20c94:	ldr	r3, [r5, #28]
   20c98:	strh	r3, [fp, #-172]	; 0xffffff54
   20c9c:	ldr	r3, [pc, #3364]	; 219c8 <dta_begin_data+0x106c>
   20ca0:	add	r3, pc, r3
   20ca4:	str	r3, [sp, #4]
   20ca8:	mov	r3, #2
   20cac:	str	r3, [sp]
   20cb0:	sub	r3, fp, #172	; 0xac
   20cb4:	ldr	r2, [pc, #3344]	; 219cc <dta_begin_data+0x1070>
   20cb8:	add	r2, pc, r2
   20cbc:	mov	r1, r4
   20cc0:	mov	r0, r5
   20cc4:	bl	1fcd4 <dta_write_chunk>
   20cc8:	cmp	r0, #0
   20ccc:	beq	20bf0 <dta_begin_data+0x294>
   20cd0:	b	20b10 <dta_begin_data+0x1b4>
   20cd4:	ldr	r3, [r5, #80]	; 0x50
   20cd8:	str	r3, [fp, #-172]	; 0xffffff54
   20cdc:	ldr	r3, [pc, #3308]	; 219d0 <dta_begin_data+0x1074>
   20ce0:	add	r3, pc, r3
   20ce4:	str	r3, [sp, #4]
   20ce8:	mov	r3, #4
   20cec:	str	r3, [sp]
   20cf0:	sub	r3, fp, #172	; 0xac
   20cf4:	ldr	r2, [pc, #3288]	; 219d4 <dta_begin_data+0x1078>
   20cf8:	add	r2, pc, r2
   20cfc:	mov	r1, r4
   20d00:	mov	r0, r5
   20d04:	bl	1fcd4 <dta_write_chunk>
   20d08:	cmp	r0, #0
   20d0c:	beq	20c3c <dta_begin_data+0x2e0>
   20d10:	b	20b10 <dta_begin_data+0x1b4>
   20d14:	mov	r2, #10
   20d18:	sub	r1, fp, #164	; 0xa4
   20d1c:	mov	r0, r5
   20d20:	bl	4454 <readstat_write_bytes@plt>
   20d24:	cmp	r0, #0
   20d28:	bne	20a54 <dta_begin_data+0xf8>
   20d2c:	mov	r1, r4
   20d30:	mov	r0, r5
   20d34:	bl	205b4 <dta_emit_header_data_label>
   20d38:	cmp	r0, #0
   20d3c:	bne	20a54 <dta_begin_data+0xf8>
   20d40:	mov	r1, r4
   20d44:	mov	r0, r5
   20d48:	bl	207a0 <dta_emit_header_time_stamp>
   20d4c:	b	20a54 <dta_begin_data+0xf8>
   20d50:	mov	r2, #0
   20d54:	mov	r3, #0
   20d58:	strd	r2, [fp, #-164]	; 0xffffff5c
   20d5c:	ldr	r6, [r5, #4]
   20d60:	mov	r7, #0
   20d64:	strd	r6, [fp, #-156]	; 0xffffff64
   20d68:	ldr	r1, [pc, #3176]	; 219d8 <dta_begin_data+0x107c>
   20d6c:	add	r1, pc, r1
   20d70:	mov	r0, r4
   20d74:	bl	206f8 <dta_measure_tag>
   20d78:	mov	r9, r0
   20d7c:	ldr	r1, [pc, #3160]	; 219dc <dta_begin_data+0x1080>
   20d80:	add	r1, pc, r1
   20d84:	mov	r0, r4
   20d88:	bl	206f8 <dta_measure_tag>
   20d8c:	add	r0, r9, r0
   20d90:	add	r0, r0, #112	; 0x70
   20d94:	adds	r2, r6, r0
   20d98:	adc	r3, r7, #0
   20d9c:	mov	r6, r2
   20da0:	mov	r7, r3
   20da4:	strd	r6, [fp, #-148]	; 0xffffff6c
   20da8:	ldr	r1, [pc, #3120]	; 219e0 <dta_begin_data+0x1084>
   20dac:	add	r1, pc, r1
   20db0:	mov	r0, r4
   20db4:	bl	206f8 <dta_measure_tag>
   20db8:	mov	sl, r0
   20dbc:	ldr	r3, [r4, #148]	; 0x94
   20dc0:	str	r3, [fp, #-192]	; 0xffffff40
   20dc4:	ldr	r9, [r4, #24]
   20dc8:	mul	r9, r9, r3
   20dcc:	ldr	r1, [pc, #3088]	; 219e4 <dta_begin_data+0x1088>
   20dd0:	add	r1, pc, r1
   20dd4:	mov	r0, r4
   20dd8:	bl	206f8 <dta_measure_tag>
   20ddc:	add	r0, sl, r0
   20de0:	add	r9, r0, r9
   20de4:	adds	r6, r6, r9
   20de8:	adc	r7, r7, #0
   20dec:	strd	r6, [fp, #-140]	; 0xffffff74
   20df0:	ldr	r1, [pc, #3056]	; 219e8 <dta_begin_data+0x108c>
   20df4:	add	r1, pc, r1
   20df8:	mov	r0, r4
   20dfc:	bl	206f8 <dta_measure_tag>
   20e00:	mov	r9, r0
   20e04:	ldr	r1, [pc, #3040]	; 219ec <dta_begin_data+0x1090>
   20e08:	add	r1, pc, r1
   20e0c:	mov	r0, r4
   20e10:	bl	206f8 <dta_measure_tag>
   20e14:	add	r0, r9, r0
   20e18:	ldr	r9, [r4, #40]	; 0x28
   20e1c:	add	r0, r0, r9
   20e20:	adds	r2, r6, r0
   20e24:	adc	r3, r7, #0
   20e28:	mov	r6, r2
   20e2c:	mov	r7, r3
   20e30:	strd	r6, [fp, #-132]	; 0xffffff7c
   20e34:	ldr	r1, [pc, #2996]	; 219f0 <dta_begin_data+0x1094>
   20e38:	add	r1, pc, r1
   20e3c:	mov	r0, r4
   20e40:	bl	206f8 <dta_measure_tag>
   20e44:	mov	r9, r0
   20e48:	ldr	r1, [pc, #2980]	; 219f4 <dta_begin_data+0x1098>
   20e4c:	add	r1, pc, r1
   20e50:	mov	r0, r4
   20e54:	bl	206f8 <dta_measure_tag>
   20e58:	add	r0, r9, r0
   20e5c:	ldr	r9, [r4, #48]	; 0x30
   20e60:	add	r0, r0, r9
   20e64:	adds	r6, r6, r0
   20e68:	adc	r7, r7, #0
   20e6c:	strd	r6, [fp, #-124]	; 0xffffff84
   20e70:	ldr	r1, [pc, #2944]	; 219f8 <dta_begin_data+0x109c>
   20e74:	add	r1, pc, r1
   20e78:	mov	r0, r4
   20e7c:	bl	206f8 <dta_measure_tag>
   20e80:	mov	r9, r0
   20e84:	ldr	r1, [pc, #2928]	; 219fc <dta_begin_data+0x10a0>
   20e88:	add	r1, pc, r1
   20e8c:	mov	r0, r4
   20e90:	bl	206f8 <dta_measure_tag>
   20e94:	add	r0, r9, r0
   20e98:	ldr	r9, [r4, #56]	; 0x38
   20e9c:	add	r0, r0, r9
   20ea0:	adds	r2, r6, r0
   20ea4:	adc	r3, r7, #0
   20ea8:	mov	r6, r2
   20eac:	mov	r7, r3
   20eb0:	strd	r6, [fp, #-116]	; 0xffffff8c
   20eb4:	ldr	r1, [pc, #2884]	; 21a00 <dta_begin_data+0x10a4>
   20eb8:	add	r1, pc, r1
   20ebc:	mov	r0, r4
   20ec0:	bl	206f8 <dta_measure_tag>
   20ec4:	mov	r9, r0
   20ec8:	ldr	r1, [pc, #2868]	; 21a04 <dta_begin_data+0x10a8>
   20ecc:	add	r1, pc, r1
   20ed0:	mov	r0, r4
   20ed4:	bl	206f8 <dta_measure_tag>
   20ed8:	add	r0, r9, r0
   20edc:	ldr	r9, [r4, #64]	; 0x40
   20ee0:	add	r0, r0, r9
   20ee4:	adds	r6, r6, r0
   20ee8:	adc	r7, r7, #0
   20eec:	strd	r6, [fp, #-108]	; 0xffffff94
   20ef0:	ldr	r1, [pc, #2832]	; 21a08 <dta_begin_data+0x10ac>
   20ef4:	add	r1, pc, r1
   20ef8:	mov	r0, r4
   20efc:	bl	206f8 <dta_measure_tag>
   20f00:	mov	r9, r0
   20f04:	ldr	r1, [pc, #2816]	; 21a0c <dta_begin_data+0x10b0>
   20f08:	add	r1, pc, r1
   20f0c:	mov	r0, r4
   20f10:	bl	206f8 <dta_measure_tag>
   20f14:	add	r0, r9, r0
   20f18:	ldr	r9, [r4, #72]	; 0x48
   20f1c:	add	r0, r0, r9
   20f20:	adds	r2, r6, r0
   20f24:	adc	r3, r7, #0
   20f28:	strd	r2, [fp, #-188]	; 0xffffff44
   20f2c:	strd	r2, [fp, #-100]	; 0xffffff9c
   20f30:	ldr	r9, [r5, #52]	; 0x34
   20f34:	cmp	r9, #0
   20f38:	ble	20ff4 <dta_begin_data+0x698>
   20f3c:	ldr	r1, [pc, #2764]	; 21a10 <dta_begin_data+0x10b4>
   20f40:	add	r1, pc, r1
   20f44:	mov	r0, r4
   20f48:	bl	206f8 <dta_measure_tag>
   20f4c:	ldr	sl, [r4, #92]	; 0x5c
   20f50:	add	sl, sl, #1
   20f54:	ldr	r3, [r4, #96]	; 0x60
   20f58:	add	sl, sl, r3, lsl #1
   20f5c:	add	sl, sl, r0
   20f60:	ldr	r1, [pc, #2732]	; 21a14 <dta_begin_data+0x10b8>
   20f64:	add	r1, pc, r1
   20f68:	mov	r0, r4
   20f6c:	bl	206f8 <dta_measure_tag>
   20f70:	ldr	r6, [r5, #48]	; 0x30
   20f74:	add	r9, r6, r9, lsl #2
   20f78:	mov	r7, r8
   20f7c:	add	sl, sl, r0
   20f80:	ldr	r0, [r6], #4
   20f84:	bl	41fc <strlen@plt>
   20f88:	add	r0, sl, r0
   20f8c:	add	r7, r7, r0
   20f90:	cmp	r6, r9
   20f94:	bne	20f80 <dta_begin_data+0x624>
   20f98:	ldr	r1, [pc, #2680]	; 21a18 <dta_begin_data+0x10bc>
   20f9c:	add	r1, pc, r1
   20fa0:	mov	r0, r4
   20fa4:	bl	206f8 <dta_measure_tag>
   20fa8:	add	r7, r7, r0
   20fac:	ldr	r1, [pc, #2664]	; 21a1c <dta_begin_data+0x10c0>
   20fb0:	add	r1, pc, r1
   20fb4:	mov	r0, r4
   20fb8:	bl	206f8 <dta_measure_tag>
   20fbc:	add	r7, r7, r0
   20fc0:	ldrd	r2, [fp, #-188]	; 0xffffff44
   20fc4:	adds	r2, r2, r7
   20fc8:	adc	r3, r3, #0
   20fcc:	strd	r2, [fp, #-188]	; 0xffffff44
   20fd0:	strd	r2, [fp, #-92]	; 0xffffffa4
   20fd4:	ldr	r3, [fp, #-192]	; 0xffffff40
   20fd8:	cmp	r3, #0
   20fdc:	ble	2105c <dta_begin_data+0x700>
   20fe0:	mov	r6, #0
   20fe4:	mov	r7, r6
   20fe8:	sub	sl, fp, #174	; 0xae
   20fec:	sub	r9, fp, #172	; 0xac
   20ff0:	b	2100c <dta_begin_data+0x6b0>
   20ff4:	mov	r7, r8
   20ff8:	b	20f98 <dta_begin_data+0x63c>
   20ffc:	add	r6, r6, #1
   21000:	ldr	r3, [r4, #148]	; 0x94
   21004:	cmp	r6, r3
   21008:	bge	2105c <dta_begin_data+0x700>
   2100c:	str	r7, [fp, #-172]	; 0xffffff54
   21010:	mov	r1, r6
   21014:	mov	r0, r5
   21018:	bl	437c <readstat_get_variable@plt>
   2101c:	strh	r7, [fp, #-174]	; 0xffffff52
   21020:	mov	r2, sl
   21024:	ldrb	r1, [r4, #20]
   21028:	bl	1f918 <dta_typecode_for_variable>
   2102c:	mov	r3, r7
   21030:	mov	r2, r9
   21034:	mov	r1, r4
   21038:	ldrh	r0, [fp, #-174]	; 0xffffff52
   2103c:	bl	41e4 <dta_type_info@plt>
   21040:	cmp	r0, #0
   21044:	bne	20ffc <dta_begin_data+0x6a0>
   21048:	ldr	r3, [r4, #160]	; 0xa0
   2104c:	ldr	r2, [fp, #-172]	; 0xffffff54
   21050:	add	r3, r3, r2
   21054:	str	r3, [r4, #160]	; 0xa0
   21058:	b	20ffc <dta_begin_data+0x6a0>
   2105c:	ldr	r1, [pc, #2492]	; 21a20 <dta_begin_data+0x10c4>
   21060:	add	r1, pc, r1
   21064:	mov	r0, r4
   21068:	bl	206f8 <dta_measure_tag>
   2106c:	mov	r6, r0
   21070:	ldr	r3, [r4, #152]	; 0x98
   21074:	ldr	r0, [r4, #160]	; 0xa0
   21078:	mul	r7, r0, r3
   2107c:	ldr	r1, [pc, #2464]	; 21a24 <dta_begin_data+0x10c8>
   21080:	add	r1, pc, r1
   21084:	mov	r0, r4
   21088:	bl	206f8 <dta_measure_tag>
   2108c:	add	r0, r6, r0
   21090:	add	r0, r0, r7
   21094:	ldrd	r6, [fp, #-188]	; 0xffffff44
   21098:	adds	r6, r6, r0
   2109c:	adc	r7, r7, #0
   210a0:	strd	r6, [fp, #-84]	; 0xffffffac
   210a4:	ldr	r1, [r5, #64]	; 0x40
   210a8:	cmp	r1, #0
   210ac:	ble	210dc <dta_begin_data+0x780>
   210b0:	ldr	ip, [r4, #116]	; 0x74
   210b4:	ldr	r3, [r5, #60]	; 0x3c
   210b8:	add	r1, r3, r1, lsl #2
   210bc:	ldr	r2, [r3], #4
   210c0:	cmp	ip, #4
   210c4:	addhi	r8, r8, #20
   210c8:	addls	r8, r8, #16
   210cc:	ldr	r2, [r2, #16]
   210d0:	add	r8, r8, r2
   210d4:	cmp	r3, r1
   210d8:	bne	210bc <dta_begin_data+0x760>
   210dc:	ldr	r1, [pc, #2372]	; 21a28 <dta_begin_data+0x10cc>
   210e0:	add	r1, pc, r1
   210e4:	mov	r0, r4
   210e8:	bl	206f8 <dta_measure_tag>
   210ec:	add	r8, r0, r8
   210f0:	ldr	r1, [pc, #2356]	; 21a2c <dta_begin_data+0x10d0>
   210f4:	add	r1, pc, r1
   210f8:	mov	r0, r4
   210fc:	bl	206f8 <dta_measure_tag>
   21100:	add	r8, r8, r0
   21104:	adds	r2, r6, r8
   21108:	adc	r3, r7, #0
   2110c:	strd	r2, [fp, #-204]	; 0xffffff34
   21110:	strd	r2, [fp, #-76]	; 0xffffffb4
   21114:	ldr	r1, [pc, #2324]	; 21a30 <dta_begin_data+0x10d4>
   21118:	add	r1, pc, r1
   2111c:	mov	r0, r4
   21120:	bl	206f8 <dta_measure_tag>
   21124:	mov	sl, r0
   21128:	ldr	r3, [r5, #40]	; 0x28
   2112c:	cmp	r3, #0
   21130:	ble	211f4 <dta_begin_data+0x898>
   21134:	mov	r9, #0
   21138:	ldr	r3, [pc, #2292]	; 21a34 <dta_begin_data+0x10d8>
   2113c:	add	r3, pc, r3
   21140:	str	r3, [fp, #-192]	; 0xffffff40
   21144:	ldr	r3, [pc, #2284]	; 21a38 <dta_begin_data+0x10dc>
   21148:	add	r3, pc, r3
   2114c:	str	r3, [fp, #-196]	; 0xffffff3c
   21150:	b	211a8 <dta_begin_data+0x84c>
   21154:	mov	r6, #0
   21158:	ldr	r1, [fp, #-192]	; 0xffffff40
   2115c:	mov	r0, r4
   21160:	bl	206f8 <dta_measure_tag>
   21164:	ldr	r3, [r4, #104]	; 0x68
   21168:	ldr	r2, [r4, #108]	; 0x6c
   2116c:	add	r3, r3, r2
   21170:	add	r3, r3, #4
   21174:	add	sl, r3, sl
   21178:	add	sl, sl, r0
   2117c:	ldr	r1, [fp, #-196]	; 0xffffff3c
   21180:	mov	r0, r4
   21184:	bl	206f8 <dta_measure_tag>
   21188:	add	r8, r8, #1
   2118c:	add	r6, r6, r8, lsl #3
   21190:	add	sl, r0, sl
   21194:	add	sl, r6, sl
   21198:	add	r9, r9, #1
   2119c:	ldr	r3, [r5, #40]	; 0x28
   211a0:	cmp	r9, r3
   211a4:	bge	211f4 <dta_begin_data+0x898>
   211a8:	mov	r1, r9
   211ac:	mov	r0, r5
   211b0:	bl	4424 <readstat_get_label_set@plt>
   211b4:	str	r0, [fp, #-188]	; 0xffffff44
   211b8:	ldr	r8, [r0, #264]	; 0x108
   211bc:	cmp	r8, #0
   211c0:	ble	21154 <dta_begin_data+0x7f8>
   211c4:	mov	r6, #0
   211c8:	mov	r7, r6
   211cc:	mov	r1, r7
   211d0:	ldr	r0, [fp, #-188]	; 0xffffff44
   211d4:	bl	44cc <readstat_get_value_label@plt>
   211d8:	add	r6, r6, #1
   211dc:	ldr	r3, [r0, #28]
   211e0:	add	r6, r6, r3
   211e4:	add	r7, r7, #1
   211e8:	cmp	r8, r7
   211ec:	bne	211cc <dta_begin_data+0x870>
   211f0:	b	21158 <dta_begin_data+0x7fc>
   211f4:	ldr	r1, [pc, #2112]	; 21a3c <dta_begin_data+0x10e0>
   211f8:	add	r1, pc, r1
   211fc:	mov	r0, r4
   21200:	bl	206f8 <dta_measure_tag>
   21204:	add	r0, r0, sl
   21208:	ldrd	r6, [fp, #-204]	; 0xffffff34
   2120c:	adds	r6, r6, r0
   21210:	adc	r7, r7, #0
   21214:	mov	r8, r6
   21218:	mov	r9, r7
   2121c:	strd	r8, [fp, #-68]	; 0xffffffbc
   21220:	ldr	r1, [pc, #2072]	; 21a40 <dta_begin_data+0x10e4>
   21224:	add	r1, pc, r1
   21228:	mov	r0, r4
   2122c:	bl	206f8 <dta_measure_tag>
   21230:	adds	r6, r6, r0
   21234:	adc	r7, r7, #0
   21238:	strd	r6, [fp, #-60]	; 0xffffffc4
   2123c:	ldr	r3, [pc, #2048]	; 21a44 <dta_begin_data+0x10e8>
   21240:	add	r3, pc, r3
   21244:	str	r3, [sp, #4]
   21248:	mov	r3, #112	; 0x70
   2124c:	str	r3, [sp]
   21250:	sub	r3, fp, #164	; 0xa4
   21254:	ldr	r2, [pc, #2028]	; 21a48 <dta_begin_data+0x10ec>
   21258:	add	r2, pc, r2
   2125c:	mov	r1, r4
   21260:	mov	r0, r5
   21264:	bl	1fcd4 <dta_write_chunk>
   21268:	subs	r8, r0, #0
   2126c:	bne	209e8 <dta_begin_data+0x8c>
   21270:	b	20a60 <dta_begin_data+0x104>
   21274:	ldr	r2, [r4, #28]
   21278:	lsl	r3, r6, #1
   2127c:	ldrh	r3, [r2, r3]
   21280:	strb	r3, [fp, #-164]	; 0xffffff5c
   21284:	mov	r2, r9
   21288:	mov	r1, r7
   2128c:	mov	r0, r5
   21290:	bl	4454 <readstat_write_bytes@plt>
   21294:	cmp	r0, #0
   21298:	bne	21884 <dta_begin_data+0xf28>
   2129c:	add	r6, r6, #1
   212a0:	ldr	r3, [r4, #148]	; 0x94
   212a4:	cmp	r6, r3
   212a8:	bge	212e4 <dta_begin_data+0x988>
   212ac:	ldr	r3, [r4, #24]
   212b0:	cmp	r3, #1
   212b4:	beq	21274 <dta_begin_data+0x918>
   212b8:	cmp	r3, #2
   212bc:	bne	2129c <dta_begin_data+0x940>
   212c0:	ldr	r2, [r4, #28]
   212c4:	lsl	r3, r6, #1
   212c8:	ldrh	r3, [r2, r3]
   212cc:	strh	r3, [fp, #-164]	; 0xffffff5c
   212d0:	mov	r2, sl
   212d4:	mov	r1, r7
   212d8:	mov	r0, r5
   212dc:	bl	4454 <readstat_write_bytes@plt>
   212e0:	b	21294 <dta_begin_data+0x938>
   212e4:	ldr	r2, [pc, #1888]	; 21a4c <dta_begin_data+0x10f0>
   212e8:	add	r2, pc, r2
   212ec:	mov	r1, r4
   212f0:	mov	r0, r5
   212f4:	bl	1fca4 <dta_write_tag>
   212f8:	subs	r8, r0, #0
   212fc:	bne	209e8 <dta_begin_data+0x8c>
   21300:	ldr	r2, [pc, #1864]	; 21a50 <dta_begin_data+0x10f4>
   21304:	add	r2, pc, r2
   21308:	mov	r1, r4
   2130c:	mov	r0, r5
   21310:	bl	1fca4 <dta_write_tag>
   21314:	subs	r8, r0, #0
   21318:	bne	209e8 <dta_begin_data+0x8c>
   2131c:	ldr	r3, [r4, #148]	; 0x94
   21320:	cmp	r3, #0
   21324:	ble	21360 <dta_begin_data+0xa04>
   21328:	mov	r6, #0
   2132c:	mov	r1, r6
   21330:	mov	r0, r5
   21334:	bl	437c <readstat_get_variable@plt>
   21338:	ldr	r3, [r4, #76]	; 0x4c
   2133c:	ldr	ip, [r4, #36]	; 0x24
   21340:	mov	r2, r3
   21344:	add	r1, r0, #8
   21348:	mla	r0, r3, r6, ip
   2134c:	bl	42bc <strncpy@plt>
   21350:	add	r6, r6, #1
   21354:	ldr	r3, [r4, #148]	; 0x94
   21358:	cmp	r6, r3
   2135c:	blt	2132c <dta_begin_data+0x9d0>
   21360:	ldr	r2, [r4, #40]	; 0x28
   21364:	ldr	r1, [r4, #36]	; 0x24
   21368:	mov	r0, r5
   2136c:	bl	4454 <readstat_write_bytes@plt>
   21370:	subs	r8, r0, #0
   21374:	bne	209e8 <dta_begin_data+0x8c>
   21378:	ldr	r2, [pc, #1748]	; 21a54 <dta_begin_data+0x10f8>
   2137c:	add	r2, pc, r2
   21380:	mov	r1, r4
   21384:	mov	r0, r5
   21388:	bl	1fca4 <dta_write_tag>
   2138c:	subs	r8, r0, #0
   21390:	bne	209e8 <dta_begin_data+0x8c>
   21394:	ldr	r2, [pc, #1724]	; 21a58 <dta_begin_data+0x10fc>
   21398:	add	r2, pc, r2
   2139c:	mov	r1, r4
   213a0:	mov	r0, r5
   213a4:	bl	1fca4 <dta_write_tag>
   213a8:	subs	r8, r0, #0
   213ac:	bne	209e8 <dta_begin_data+0x8c>
   213b0:	ldr	r2, [r4, #48]	; 0x30
   213b4:	mov	r1, #0
   213b8:	ldr	r0, [r4, #44]	; 0x2c
   213bc:	bl	42a4 <memset@plt>
   213c0:	ldr	r2, [r4, #48]	; 0x30
   213c4:	ldr	r1, [r4, #44]	; 0x2c
   213c8:	mov	r0, r5
   213cc:	bl	4454 <readstat_write_bytes@plt>
   213d0:	subs	r8, r0, #0
   213d4:	bne	209e8 <dta_begin_data+0x8c>
   213d8:	ldr	r2, [pc, #1660]	; 21a5c <dta_begin_data+0x1100>
   213dc:	add	r2, pc, r2
   213e0:	mov	r1, r4
   213e4:	mov	r0, r5
   213e8:	bl	1fca4 <dta_write_tag>
   213ec:	subs	r8, r0, #0
   213f0:	bne	209e8 <dta_begin_data+0x8c>
   213f4:	ldr	r2, [pc, #1636]	; 21a60 <dta_begin_data+0x1104>
   213f8:	add	r2, pc, r2
   213fc:	mov	r1, r4
   21400:	mov	r0, r5
   21404:	bl	1fca4 <dta_write_tag>
   21408:	subs	r8, r0, #0
   2140c:	bne	209e8 <dta_begin_data+0x8c>
   21410:	ldr	r3, [r4, #148]	; 0x94
   21414:	cmp	r3, #0
   21418:	ble	2149c <dta_begin_data+0xb40>
   2141c:	mov	r6, #0
   21420:	ldr	r3, [pc, #1596]	; 21a64 <dta_begin_data+0x1108>
   21424:	add	r3, pc, r3
   21428:	str	r3, [fp, #-188]	; 0xffffff44
   2142c:	ldr	sl, [pc, #1588]	; 21a68 <dta_begin_data+0x110c>
   21430:	add	sl, pc, sl
   21434:	ldr	r9, [pc, #1584]	; 21a6c <dta_begin_data+0x1110>
   21438:	add	r9, pc, r9
   2143c:	b	21908 <dta_begin_data+0xfac>
   21440:	ldr	r8, [r0, #2136]	; 0x858
   21444:	ldr	r0, [r0]
   21448:	bl	3e18 <readstat_type_class@plt>
   2144c:	cmp	r0, #0
   21450:	beq	218b8 <dta_begin_data+0xf5c>
   21454:	cmp	r8, #0
   21458:	beq	21940 <dta_begin_data+0xfe4>
   2145c:	ldr	r3, [r7, #2132]	; 0x854
   21460:	cmp	r3, #1
   21464:	beq	21490 <dta_begin_data+0xb34>
   21468:	ldr	r2, [pc, #1536]	; 21a70 <dta_begin_data+0x1114>
   2146c:	add	r2, pc, r2
   21470:	mov	r3, r8
   21474:	ldr	r1, [pc, #1528]	; 21a74 <dta_begin_data+0x1118>
   21478:	add	r1, pc, r1
   2147c:	sub	r0, fp, #164	; 0xa4
   21480:	bl	43e8 <sprintf@plt>
   21484:	b	218e0 <dta_begin_data+0xf84>
   21488:	mov	r8, #8
   2148c:	b	2145c <dta_begin_data+0xb00>
   21490:	ldr	r2, [pc, #1504]	; 21a78 <dta_begin_data+0x111c>
   21494:	add	r2, pc, r2
   21498:	b	21470 <dta_begin_data+0xb14>
   2149c:	ldr	r2, [r4, #56]	; 0x38
   214a0:	ldr	r1, [r4, #52]	; 0x34
   214a4:	mov	r0, r5
   214a8:	bl	4454 <readstat_write_bytes@plt>
   214ac:	subs	r8, r0, #0
   214b0:	bne	209e8 <dta_begin_data+0x8c>
   214b4:	ldr	r2, [pc, #1472]	; 21a7c <dta_begin_data+0x1120>
   214b8:	add	r2, pc, r2
   214bc:	mov	r1, r4
   214c0:	mov	r0, r5
   214c4:	bl	1fca4 <dta_write_tag>
   214c8:	subs	r8, r0, #0
   214cc:	bne	209e8 <dta_begin_data+0x8c>
   214d0:	ldr	r2, [pc, #1448]	; 21a80 <dta_begin_data+0x1124>
   214d4:	add	r2, pc, r2
   214d8:	mov	r1, r4
   214dc:	mov	r0, r5
   214e0:	bl	1fca4 <dta_write_tag>
   214e4:	subs	r8, r0, #0
   214e8:	bne	209e8 <dta_begin_data+0x8c>
   214ec:	ldr	r3, [r4, #148]	; 0x94
   214f0:	cmp	r3, #0
   214f4:	ble	21560 <dta_begin_data+0xc04>
   214f8:	mov	r6, #0
   214fc:	mov	r7, r6
   21500:	b	2152c <dta_begin_data+0xbd0>
   21504:	ldr	r3, [r4, #84]	; 0x54
   21508:	ldr	r0, [r4, #60]	; 0x3c
   2150c:	mov	r2, r3
   21510:	mov	r1, r7
   21514:	mla	r0, r3, r6, r0
   21518:	bl	42a4 <memset@plt>
   2151c:	add	r6, r6, #1
   21520:	ldr	r3, [r4, #148]	; 0x94
   21524:	cmp	r6, r3
   21528:	bge	21560 <dta_begin_data+0xc04>
   2152c:	mov	r1, r6
   21530:	mov	r0, r5
   21534:	bl	437c <readstat_get_variable@plt>
   21538:	ldr	r1, [r0, #1588]	; 0x634
   2153c:	cmp	r1, #0
   21540:	beq	21504 <dta_begin_data+0xba8>
   21544:	ldr	r3, [r4, #84]	; 0x54
   21548:	ldr	r0, [r4, #60]	; 0x3c
   2154c:	mov	r2, r3
   21550:	add	r1, r1, #4
   21554:	mla	r0, r3, r6, r0
   21558:	bl	42bc <strncpy@plt>
   2155c:	b	2151c <dta_begin_data+0xbc0>
   21560:	ldr	r2, [r4, #64]	; 0x40
   21564:	ldr	r1, [r4, #60]	; 0x3c
   21568:	mov	r0, r5
   2156c:	bl	4454 <readstat_write_bytes@plt>
   21570:	subs	r8, r0, #0
   21574:	bne	209e8 <dta_begin_data+0x8c>
   21578:	ldr	r2, [pc, #1284]	; 21a84 <dta_begin_data+0x1128>
   2157c:	add	r2, pc, r2
   21580:	mov	r1, r4
   21584:	mov	r0, r5
   21588:	bl	1fca4 <dta_write_tag>
   2158c:	subs	r8, r0, #0
   21590:	bne	209e8 <dta_begin_data+0x8c>
   21594:	ldr	r2, [pc, #1260]	; 21a88 <dta_begin_data+0x112c>
   21598:	add	r2, pc, r2
   2159c:	mov	r1, r4
   215a0:	mov	r0, r5
   215a4:	bl	1fca4 <dta_write_tag>
   215a8:	subs	r8, r0, #0
   215ac:	bne	209e8 <dta_begin_data+0x8c>
   215b0:	ldr	r3, [r4, #148]	; 0x94
   215b4:	cmp	r3, #0
   215b8:	ble	215f4 <dta_begin_data+0xc98>
   215bc:	mov	r6, #0
   215c0:	mov	r1, r6
   215c4:	mov	r0, r5
   215c8:	bl	437c <readstat_get_variable@plt>
   215cc:	ldr	r3, [r4, #88]	; 0x58
   215d0:	ldr	ip, [r4, #68]	; 0x44
   215d4:	mov	r2, r3
   215d8:	add	r1, r0, #564	; 0x234
   215dc:	mla	r0, r3, r6, ip
   215e0:	bl	42bc <strncpy@plt>
   215e4:	add	r6, r6, #1
   215e8:	ldr	r3, [r4, #148]	; 0x94
   215ec:	cmp	r6, r3
   215f0:	blt	215c0 <dta_begin_data+0xc64>
   215f4:	ldr	r2, [r4, #72]	; 0x48
   215f8:	ldr	r1, [r4, #68]	; 0x44
   215fc:	mov	r0, r5
   21600:	bl	4454 <readstat_write_bytes@plt>
   21604:	subs	r8, r0, #0
   21608:	bne	209e8 <dta_begin_data+0x8c>
   2160c:	ldr	r2, [pc, #1144]	; 21a8c <dta_begin_data+0x1130>
   21610:	add	r2, pc, r2
   21614:	mov	r1, r4
   21618:	mov	r0, r5
   2161c:	bl	1fca4 <dta_write_tag>
   21620:	subs	r8, r0, #0
   21624:	bne	209e8 <dta_begin_data+0x8c>
   21628:	str	sp, [fp, #-196]	; 0xffffff3c
   2162c:	ldr	r3, [r4, #96]	; 0x60
   21630:	add	r3, r3, #7
   21634:	bic	r3, r3, #7
   21638:	sub	sp, sp, r3
   2163c:	add	r7, sp, #16
   21640:	ldr	r3, [r4, #92]	; 0x5c
   21644:	cmp	r3, #0
   21648:	bne	21690 <dta_begin_data+0xd34>
   2164c:	ldr	sp, [fp, #-196]	; 0xffffff3c
   21650:	ldr	r2, [pc, #1080]	; 21a90 <dta_begin_data+0x1134>
   21654:	add	r2, pc, r2
   21658:	mov	r1, r4
   2165c:	mov	r0, r5
   21660:	bl	1fca4 <dta_write_tag>
   21664:	subs	r8, r0, #0
   21668:	streq	r4, [r5, #300]	; 0x12c
   2166c:	bne	209e8 <dta_begin_data+0x8c>
   21670:	mov	r0, r8
   21674:	sub	sp, fp, #32
   21678:	ldrd	r4, [sp]
   2167c:	ldrd	r6, [sp, #8]
   21680:	ldrd	r8, [sp, #16]
   21684:	ldrd	sl, [sp, #24]
   21688:	add	sp, sp, #32
   2168c:	pop	{pc}		; (ldr pc, [sp], #4)
   21690:	ldr	r2, [pc, #1020]	; 21a94 <dta_begin_data+0x1138>
   21694:	add	r2, pc, r2
   21698:	mov	r1, r4
   2169c:	mov	r0, r5
   216a0:	bl	1fca4 <dta_write_tag>
   216a4:	subs	r8, r0, #0
   216a8:	bne	21890 <dta_begin_data+0xf34>
   216ac:	mov	r6, #0
   216b0:	ldr	r3, [pc, #992]	; 21a98 <dta_begin_data+0x113c>
   216b4:	add	r3, pc, r3
   216b8:	str	r3, [fp, #-204]	; 0xffffff34
   216bc:	ldr	r3, [pc, #984]	; 21a9c <dta_begin_data+0x1140>
   216c0:	add	r3, pc, r3
   216c4:	str	r3, [fp, #-188]	; 0xffffff44
   216c8:	ldr	r3, [pc, #976]	; 21aa0 <dta_begin_data+0x1144>
   216cc:	add	r3, pc, r3
   216d0:	str	r3, [fp, #-192]	; 0xffffff40
   216d4:	b	217b0 <dta_begin_data+0xe54>
   216d8:	mov	r2, #1
   216dc:	strb	r2, [fp, #-164]	; 0xffffff5c
   216e0:	sub	r1, fp, #164	; 0xa4
   216e4:	mov	r0, r5
   216e8:	bl	4454 <readstat_write_bytes@plt>
   216ec:	cmp	r0, #0
   216f0:	bne	2188c <dta_begin_data+0xf30>
   216f4:	lsl	r9, r6, #2
   216f8:	ldr	r3, [r5, #48]	; 0x30
   216fc:	ldr	r0, [r3, r6, lsl #2]
   21700:	bl	41fc <strlen@plt>
   21704:	mov	r8, r0
   21708:	ldr	r3, [r4, #92]	; 0x5c
   2170c:	cmp	r3, #2
   21710:	beq	217dc <dta_begin_data+0xe80>
   21714:	cmp	r3, #4
   21718:	beq	2180c <dta_begin_data+0xeb0>
   2171c:	ldr	sl, [r4, #96]	; 0x60
   21720:	mov	r2, sl
   21724:	ldr	r1, [fp, #-188]	; 0xffffff44
   21728:	mov	r0, r7
   2172c:	bl	42bc <strncpy@plt>
   21730:	mov	r2, sl
   21734:	mov	r1, r7
   21738:	mov	r0, r5
   2173c:	bl	4454 <readstat_write_bytes@plt>
   21740:	cmp	r0, #0
   21744:	bne	21898 <dta_begin_data+0xf3c>
   21748:	add	r6, r6, #1
   2174c:	mov	r3, r6
   21750:	ldr	r2, [fp, #-192]	; 0xffffff40
   21754:	ldr	r1, [r4, #96]	; 0x60
   21758:	mov	r0, r7
   2175c:	bl	4280 <snprintf@plt>
   21760:	ldr	r2, [r4, #96]	; 0x60
   21764:	mov	r1, r7
   21768:	mov	r0, r5
   2176c:	bl	4454 <readstat_write_bytes@plt>
   21770:	cmp	r0, #0
   21774:	bne	218a0 <dta_begin_data+0xf44>
   21778:	ldr	r3, [r5, #48]	; 0x30
   2177c:	add	r2, r8, #1
   21780:	ldr	r1, [r3, r9]
   21784:	mov	r0, r5
   21788:	bl	4454 <readstat_write_bytes@plt>
   2178c:	cmp	r0, #0
   21790:	bne	218a8 <dta_begin_data+0xf4c>
   21794:	ldr	r2, [pc, #776]	; 21aa4 <dta_begin_data+0x1148>
   21798:	add	r2, pc, r2
   2179c:	mov	r1, r4
   217a0:	mov	r0, r5
   217a4:	bl	1fca4 <dta_write_tag>
   217a8:	cmp	r0, #0
   217ac:	bne	218b0 <dta_begin_data+0xf54>
   217b0:	ldr	r3, [r5, #52]	; 0x34
   217b4:	cmp	r6, r3
   217b8:	bge	21830 <dta_begin_data+0xed4>
   217bc:	ldrb	r3, [r4, #192]	; 0xc0
   217c0:	tst	r3, #4
   217c4:	beq	216d8 <dta_begin_data+0xd7c>
   217c8:	ldr	r2, [fp, #-204]	; 0xffffff34
   217cc:	mov	r1, r4
   217d0:	mov	r0, r5
   217d4:	bl	1fca4 <dta_write_tag>
   217d8:	b	216ec <dta_begin_data+0xd90>
   217dc:	ldr	r3, [r4, #96]	; 0x60
   217e0:	add	r3, r0, r3, lsl #1
   217e4:	add	r3, r3, #1
   217e8:	strh	r3, [fp, #-164]	; 0xffffff5c
   217ec:	mov	r2, #2
   217f0:	sub	r1, fp, #164	; 0xa4
   217f4:	mov	r0, r5
   217f8:	bl	4454 <readstat_write_bytes@plt>
   217fc:	cmp	r0, #0
   21800:	beq	2171c <dta_begin_data+0xdc0>
   21804:	mov	r8, r0
   21808:	b	21890 <dta_begin_data+0xf34>
   2180c:	ldr	r3, [r4, #96]	; 0x60
   21810:	add	r3, r0, r3, lsl #1
   21814:	add	r3, r3, #1
   21818:	str	r3, [fp, #-164]	; 0xffffff5c
   2181c:	mov	r2, #4
   21820:	sub	r1, fp, #164	; 0xa4
   21824:	mov	r0, r5
   21828:	bl	4454 <readstat_write_bytes@plt>
   2182c:	b	217fc <dta_begin_data+0xea0>
   21830:	ldrb	r3, [r4, #192]	; 0xc0
   21834:	tst	r3, #4
   21838:	beq	21864 <dta_begin_data+0xf08>
   2183c:	ldr	r2, [pc, #612]	; 21aa8 <dta_begin_data+0x114c>
   21840:	add	r2, pc, r2
   21844:	mov	r1, r4
   21848:	mov	r0, r5
   2184c:	bl	1fca4 <dta_write_tag>
   21850:	mov	r8, r0
   21854:	ldr	sp, [fp, #-196]	; 0xffffff3c
   21858:	cmp	r8, #0
   2185c:	bne	209e8 <dta_begin_data+0x8c>
   21860:	b	21650 <dta_begin_data+0xcf4>
   21864:	ldr	r1, [r4, #92]	; 0x5c
   21868:	add	r1, r1, #1
   2186c:	mov	r0, r5
   21870:	bl	4010 <readstat_write_zeros@plt>
   21874:	mov	r8, r0
   21878:	b	21854 <dta_begin_data+0xef8>
   2187c:	mov	r8, r0
   21880:	b	209e8 <dta_begin_data+0x8c>
   21884:	mov	r8, r0
   21888:	b	209e8 <dta_begin_data+0x8c>
   2188c:	mov	r8, r0
   21890:	ldr	sp, [fp, #-196]	; 0xffffff3c
   21894:	b	209e8 <dta_begin_data+0x8c>
   21898:	mov	r8, r0
   2189c:	b	21890 <dta_begin_data+0xf34>
   218a0:	mov	r8, r0
   218a4:	b	21890 <dta_begin_data+0xf34>
   218a8:	mov	r8, r0
   218ac:	b	21890 <dta_begin_data+0xf34>
   218b0:	mov	r8, r0
   218b4:	b	21890 <dta_begin_data+0xf34>
   218b8:	cmp	r8, #0
   218bc:	beq	21978 <dta_begin_data+0x101c>
   218c0:	ldr	r3, [r7, #2132]	; 0x854
   218c4:	cmp	r3, #1
   218c8:	moveq	r2, sl
   218cc:	movne	r2, r9
   218d0:	mov	r3, r8
   218d4:	ldr	r1, [fp, #-188]	; 0xffffff44
   218d8:	sub	r0, fp, #164	; 0xa4
   218dc:	bl	43e8 <sprintf@plt>
   218e0:	ldr	r3, [r4, #80]	; 0x50
   218e4:	ldr	r0, [r4, #52]	; 0x34
   218e8:	mov	r2, r3
   218ec:	sub	r1, fp, #164	; 0xa4
   218f0:	mla	r0, r3, r6, r0
   218f4:	bl	42bc <strncpy@plt>
   218f8:	add	r6, r6, #1
   218fc:	ldr	r3, [r4, #148]	; 0x94
   21900:	cmp	r6, r3
   21904:	bge	2149c <dta_begin_data+0xb40>
   21908:	mov	r1, r6
   2190c:	mov	r0, r5
   21910:	bl	437c <readstat_get_variable@plt>
   21914:	mov	r7, r0
   21918:	ldrb	r3, [r0, #308]	; 0x134
   2191c:	cmp	r3, #0
   21920:	beq	21440 <dta_begin_data+0xae4>
   21924:	ldr	r3, [r4, #80]	; 0x50
   21928:	ldr	r0, [r4, #52]	; 0x34
   2192c:	mov	r2, r3
   21930:	add	r1, r7, #308	; 0x134
   21934:	mla	r0, r3, r6, r0
   21938:	bl	42bc <strncpy@plt>
   2193c:	b	218f8 <dta_begin_data+0xf9c>
   21940:	ldr	r3, [r7]
   21944:	sub	r2, r3, #1
   21948:	cmp	r2, #1
   2194c:	movhi	r2, #103	; 0x67
   21950:	bls	21488 <dta_begin_data+0xb2c>
   21954:	cmp	r3, #3
   21958:	moveq	r8, #12
   2195c:	beq	2196c <dta_begin_data+0x1010>
   21960:	cmp	r3, #5
   21964:	moveq	r8, #10
   21968:	movne	r8, #9
   2196c:	cmp	r2, #103	; 0x67
   21970:	bne	218c0 <dta_begin_data+0xf64>
   21974:	b	2145c <dta_begin_data+0xb00>
   21978:	ldr	r3, [r7]
   2197c:	sub	r2, r3, #1
   21980:	cmp	r2, #1
   21984:	movhi	r2, #115	; 0x73
   21988:	bhi	21954 <dta_begin_data+0xff8>
   2198c:	mov	r8, #8
   21990:	b	218c0 <dta_begin_data+0xf64>
   21994:	.word	0x00007c50
   21998:	.word	0x00007b10
   2199c:	.word	0x00007af8
   219a0:	.word	0x00007de0
   219a4:	.word	0x00007ad4
   219a8:	.word	0x00007abc
   219ac:	.word	0x00007a9c
   219b0:	.word	0x00007a94
   219b4:	.word	0x00007a78
   219b8:	.word	0x00007a54
   219bc:	.word	0x00007a38
   219c0:	.word	0x00007a30
   219c4:	.word	0x000079c0
   219c8:	.word	0x000079b4
   219cc:	.word	0x00007998
   219d0:	.word	0x00007980
   219d4:	.word	0x00007964
   219d8:	.word	0x00007938
   219dc:	.word	0x0000792c
   219e0:	.word	0x00007908
   219e4:	.word	0x000078f8
   219e8:	.word	0x000078e8
   219ec:	.word	0x000078e0
   219f0:	.word	0x000078bc
   219f4:	.word	0x000078b4
   219f8:	.word	0x00007898
   219fc:	.word	0x00007890
   21a00:	.word	0x0000786c
   21a04:	.word	0x0000786c
   21a08:	.word	0x0000785c
   21a0c:	.word	0x0000785c
   21a10:	.word	0x00007894
   21a14:	.word	0x00007888
   21a18:	.word	0x0000781c
   21a1c:	.word	0x00007984
   21a20:	.word	0x000077dc
   21a24:	.word	0x000077c4
   21a28:	.word	0x00007744
   21a2c:	.word	0x000077e0
   21a30:	.word	0x0000776c
   21a34:	.word	0x00007758
   21a38:	.word	0x00007754
   21a3c:	.word	0x000076e8
   21a40:	.word	0x000076cc
   21a44:	.word	0x0000746c
   21a48:	.word	0x0000744c
   21a4c:	.word	0x000073e0
   21a50:	.word	0x000073d8
   21a54:	.word	0x0000736c
   21a58:	.word	0x0000735c
   21a5c:	.word	0x00007324
   21a60:	.word	0x00007314
   21a64:	.word	0x00007530
   21a68:	.word	0x000074e8
   21a6c:	.word	0x00005a60
   21a70:	.word	0x00005a2c
   21a74:	.word	0x000074d0
   21a78:	.word	0x00007484
   21a7c:	.word	0x00007260
   21a80:	.word	0x00007250
   21a84:	.word	0x000071bc
   21a88:	.word	0x000071b8
   21a8c:	.word	0x00007154
   21a90:	.word	0x000071e8
   21a94:	.word	0x00007124
   21a98:	.word	0x00007120
   21a9c:	.word	0x0000711c
   21aa0:	.word	0x00007118
   21aa4:	.word	0x00007054
   21aa8:	.word	0x000070f4

00021aac <dta_validate_name>:
   21aac:	strd	r4, [sp, #-12]!
   21ab0:	str	lr, [sp, #8]
   21ab4:	sub	sp, sp, #12
   21ab8:	mov	r4, r0
   21abc:	mov	r5, r2
   21ac0:	bl	41fc <strlen@plt>
   21ac4:	cmp	r0, r5
   21ac8:	movhi	r0, #28
   21acc:	bhi	21b28 <dta_validate_name+0x7c>
   21ad0:	ldrb	r1, [r4]
   21ad4:	cmp	r1, #0
   21ad8:	moveq	r0, #38	; 0x26
   21adc:	beq	21b28 <dta_validate_name+0x7c>
   21ae0:	mov	r0, r4
   21ae4:	mov	r3, r1
   21ae8:	b	21af8 <dta_validate_name+0x4c>
   21aec:	ldrb	r3, [r0, #1]!
   21af0:	cmp	r3, #0
   21af4:	beq	21b38 <dta_validate_name+0x8c>
   21af8:	cmp	r3, #95	; 0x5f
   21afc:	beq	21aec <dta_validate_name+0x40>
   21b00:	bic	r2, r3, #32
   21b04:	sub	r2, r2, #65	; 0x41
   21b08:	uxtb	r2, r2
   21b0c:	cmp	r2, #25
   21b10:	bls	21aec <dta_validate_name+0x40>
   21b14:	sub	r3, r3, #48	; 0x30
   21b18:	uxtb	r3, r3
   21b1c:	cmp	r3, #9
   21b20:	bls	21aec <dta_validate_name+0x40>
   21b24:	mov	r0, #26
   21b28:	add	sp, sp, #12
   21b2c:	ldrd	r4, [sp]
   21b30:	add	sp, sp, #8
   21b34:	pop	{pc}		; (ldr pc, [sp], #4)
   21b38:	cmp	r1, #95	; 0x5f
   21b3c:	beq	21b54 <dta_validate_name+0xa8>
   21b40:	bic	r1, r1, #32
   21b44:	sub	r1, r1, #65	; 0x41
   21b48:	uxtb	r1, r1
   21b4c:	cmp	r1, #25
   21b50:	bhi	21dac <dta_validate_name+0x300>
   21b54:	ldr	r1, [pc, #600]	; 21db4 <dta_validate_name+0x308>
   21b58:	add	r1, pc, r1
   21b5c:	mov	r0, r4
   21b60:	bl	3df4 <strcmp@plt>
   21b64:	cmp	r0, #0
   21b68:	beq	21da4 <dta_validate_name+0x2f8>
   21b6c:	ldr	r1, [pc, #580]	; 21db8 <dta_validate_name+0x30c>
   21b70:	add	r1, pc, r1
   21b74:	mov	r0, r4
   21b78:	bl	3df4 <strcmp@plt>
   21b7c:	cmp	r0, #0
   21b80:	moveq	r0, #27
   21b84:	beq	21b28 <dta_validate_name+0x7c>
   21b88:	ldr	r1, [pc, #556]	; 21dbc <dta_validate_name+0x310>
   21b8c:	add	r1, pc, r1
   21b90:	mov	r0, r4
   21b94:	bl	3df4 <strcmp@plt>
   21b98:	cmp	r0, #0
   21b9c:	moveq	r0, #27
   21ba0:	beq	21b28 <dta_validate_name+0x7c>
   21ba4:	ldr	r1, [pc, #532]	; 21dc0 <dta_validate_name+0x314>
   21ba8:	add	r1, pc, r1
   21bac:	mov	r0, r4
   21bb0:	bl	3df4 <strcmp@plt>
   21bb4:	cmp	r0, #0
   21bb8:	moveq	r0, #27
   21bbc:	beq	21b28 <dta_validate_name+0x7c>
   21bc0:	ldr	r1, [pc, #508]	; 21dc4 <dta_validate_name+0x318>
   21bc4:	add	r1, pc, r1
   21bc8:	mov	r0, r4
   21bcc:	bl	3df4 <strcmp@plt>
   21bd0:	cmp	r0, #0
   21bd4:	moveq	r0, #27
   21bd8:	beq	21b28 <dta_validate_name+0x7c>
   21bdc:	ldr	r1, [pc, #484]	; 21dc8 <dta_validate_name+0x31c>
   21be0:	add	r1, pc, r1
   21be4:	mov	r0, r4
   21be8:	bl	3df4 <strcmp@plt>
   21bec:	cmp	r0, #0
   21bf0:	moveq	r0, #27
   21bf4:	beq	21b28 <dta_validate_name+0x7c>
   21bf8:	ldr	r1, [pc, #460]	; 21dcc <dta_validate_name+0x320>
   21bfc:	add	r1, pc, r1
   21c00:	mov	r0, r4
   21c04:	bl	3df4 <strcmp@plt>
   21c08:	cmp	r0, #0
   21c0c:	moveq	r0, #27
   21c10:	beq	21b28 <dta_validate_name+0x7c>
   21c14:	ldr	r1, [pc, #436]	; 21dd0 <dta_validate_name+0x324>
   21c18:	add	r1, pc, r1
   21c1c:	mov	r0, r4
   21c20:	bl	3df4 <strcmp@plt>
   21c24:	cmp	r0, #0
   21c28:	moveq	r0, #27
   21c2c:	beq	21b28 <dta_validate_name+0x7c>
   21c30:	ldr	r1, [pc, #412]	; 21dd4 <dta_validate_name+0x328>
   21c34:	add	r1, pc, r1
   21c38:	mov	r0, r4
   21c3c:	bl	3df4 <strcmp@plt>
   21c40:	cmp	r0, #0
   21c44:	moveq	r0, #27
   21c48:	beq	21b28 <dta_validate_name+0x7c>
   21c4c:	ldr	r1, [pc, #388]	; 21dd8 <dta_validate_name+0x32c>
   21c50:	add	r1, pc, r1
   21c54:	mov	r0, r4
   21c58:	bl	3df4 <strcmp@plt>
   21c5c:	cmp	r0, #0
   21c60:	moveq	r0, #27
   21c64:	beq	21b28 <dta_validate_name+0x7c>
   21c68:	ldr	r1, [pc, #364]	; 21ddc <dta_validate_name+0x330>
   21c6c:	add	r1, pc, r1
   21c70:	mov	r0, r4
   21c74:	bl	3df4 <strcmp@plt>
   21c78:	cmp	r0, #0
   21c7c:	moveq	r0, #27
   21c80:	beq	21b28 <dta_validate_name+0x7c>
   21c84:	ldr	r1, [pc, #340]	; 21de0 <dta_validate_name+0x334>
   21c88:	add	r1, pc, r1
   21c8c:	mov	r0, r4
   21c90:	bl	3df4 <strcmp@plt>
   21c94:	cmp	r0, #0
   21c98:	moveq	r0, #27
   21c9c:	beq	21b28 <dta_validate_name+0x7c>
   21ca0:	ldr	r1, [pc, #316]	; 21de4 <dta_validate_name+0x338>
   21ca4:	add	r1, pc, r1
   21ca8:	mov	r0, r4
   21cac:	bl	3df4 <strcmp@plt>
   21cb0:	cmp	r0, #0
   21cb4:	moveq	r0, #27
   21cb8:	beq	21b28 <dta_validate_name+0x7c>
   21cbc:	ldr	r1, [pc, #292]	; 21de8 <dta_validate_name+0x33c>
   21cc0:	add	r1, pc, r1
   21cc4:	mov	r0, r4
   21cc8:	bl	3df4 <strcmp@plt>
   21ccc:	cmp	r0, #0
   21cd0:	moveq	r0, #27
   21cd4:	beq	21b28 <dta_validate_name+0x7c>
   21cd8:	ldr	r1, [pc, #268]	; 21dec <dta_validate_name+0x340>
   21cdc:	add	r1, pc, r1
   21ce0:	mov	r0, r4
   21ce4:	bl	3df4 <strcmp@plt>
   21ce8:	cmp	r0, #0
   21cec:	moveq	r0, #27
   21cf0:	beq	21b28 <dta_validate_name+0x7c>
   21cf4:	ldr	r1, [pc, #244]	; 21df0 <dta_validate_name+0x344>
   21cf8:	add	r1, pc, r1
   21cfc:	mov	r0, r4
   21d00:	bl	3df4 <strcmp@plt>
   21d04:	cmp	r0, #0
   21d08:	moveq	r0, #27
   21d0c:	beq	21b28 <dta_validate_name+0x7c>
   21d10:	ldr	r1, [pc, #220]	; 21df4 <dta_validate_name+0x348>
   21d14:	add	r1, pc, r1
   21d18:	mov	r0, r4
   21d1c:	bl	3df4 <strcmp@plt>
   21d20:	cmp	r0, #0
   21d24:	moveq	r0, #27
   21d28:	beq	21b28 <dta_validate_name+0x7c>
   21d2c:	ldr	r1, [pc, #196]	; 21df8 <dta_validate_name+0x34c>
   21d30:	add	r1, pc, r1
   21d34:	mov	r0, r4
   21d38:	bl	3df4 <strcmp@plt>
   21d3c:	cmp	r0, #0
   21d40:	moveq	r0, #27
   21d44:	beq	21b28 <dta_validate_name+0x7c>
   21d48:	ldr	r1, [pc, #172]	; 21dfc <dta_validate_name+0x350>
   21d4c:	add	r1, pc, r1
   21d50:	mov	r0, r4
   21d54:	bl	3df4 <strcmp@plt>
   21d58:	cmp	r0, #0
   21d5c:	moveq	r0, #27
   21d60:	beq	21b28 <dta_validate_name+0x7c>
   21d64:	ldr	r1, [pc, #148]	; 21e00 <dta_validate_name+0x354>
   21d68:	add	r1, pc, r1
   21d6c:	mov	r0, r4
   21d70:	bl	3df4 <strcmp@plt>
   21d74:	cmp	r0, #0
   21d78:	moveq	r0, #27
   21d7c:	beq	21b28 <dta_validate_name+0x7c>
   21d80:	add	r2, sp, #4
   21d84:	ldr	r1, [pc, #120]	; 21e04 <dta_validate_name+0x358>
   21d88:	add	r1, pc, r1
   21d8c:	mov	r0, r4
   21d90:	bl	428c <__isoc99_sscanf@plt>
   21d94:	cmp	r0, #1
   21d98:	movne	r0, #0
   21d9c:	moveq	r0, #27
   21da0:	b	21b28 <dta_validate_name+0x7c>
   21da4:	mov	r0, #27
   21da8:	b	21b28 <dta_validate_name+0x7c>
   21dac:	mov	r0, #25
   21db0:	b	21b28 <dta_validate_name+0x7c>
   21db4:	.word	0x00006e84
   21db8:	.word	0x00006dec
   21dbc:	.word	0x00006dd4
   21dc0:	.word	0x00006dc0
   21dc4:	.word	0x00006dac
   21dc8:	.word	0x00006d98
   21dcc:	.word	0x00006d84
   21dd0:	.word	0x00006d70
   21dd4:	.word	0x00006d58
   21dd8:	.word	0x00006d40
   21ddc:	.word	0x00006d28
   21de0:	.word	0x00006d14
   21de4:	.word	0x00006cfc
   21de8:	.word	0x00006ce4
   21dec:	.word	0x00006ccc
   21df0:	.word	0x00006cb8
   21df4:	.word	0x00006ca0
   21df8:	.word	0x00006c8c
   21dfc:	.word	0x00006c78
   21e00:	.word	0x00006c64
   21e04:	.word	0x00006c4c

00021e08 <dta_old_variable_ok>:
   21e08:	str	r4, [sp, #-8]!
   21e0c:	str	lr, [sp, #4]
   21e10:	bl	4364 <readstat_variable_get_name@plt>
   21e14:	mov	r2, #9
   21e18:	mov	r1, #0
   21e1c:	bl	21aac <dta_validate_name>
   21e20:	ldr	r4, [sp]
   21e24:	add	sp, sp, #4
   21e28:	pop	{pc}		; (ldr pc, [sp], #4)

00021e2c <dta_110_variable_ok>:
   21e2c:	str	r4, [sp, #-8]!
   21e30:	str	lr, [sp, #4]
   21e34:	bl	4364 <readstat_variable_get_name@plt>
   21e38:	mov	r2, #33	; 0x21
   21e3c:	mov	r1, #0
   21e40:	bl	21aac <dta_validate_name>
   21e44:	ldr	r4, [sp]
   21e48:	add	sp, sp, #4
   21e4c:	pop	{pc}		; (ldr pc, [sp], #4)

00021e50 <dta_118_variable_ok>:
   21e50:	str	r4, [sp, #-8]!
   21e54:	str	lr, [sp, #4]
   21e58:	bl	4364 <readstat_variable_get_name@plt>
   21e5c:	mov	r2, #129	; 0x81
   21e60:	mov	r1, #1
   21e64:	bl	21aac <dta_validate_name>
   21e68:	ldr	r4, [sp]
   21e6c:	add	sp, sp, #4
   21e70:	pop	{pc}		; (ldr pc, [sp], #4)

00021e74 <dta_write_missing_string>:
   21e74:	str	r4, [sp, #-8]!
   21e78:	str	lr, [sp, #4]
   21e7c:	ldr	r2, [r1, #1596]	; 0x63c
   21e80:	mov	r1, #0
   21e84:	bl	42a4 <memset@plt>
   21e88:	mov	r0, #0
   21e8c:	ldr	r4, [sp]
   21e90:	add	sp, sp, #4
   21e94:	pop	{pc}		; (ldr pc, [sp], #4)

00021e98 <dta_old_write_int32>:
   21e98:	cmn	r2, #-2147483647	; 0x80000001
   21e9c:	strne	r2, [r0]
   21ea0:	movne	r0, #0
   21ea4:	moveq	r0, #20
   21ea8:	bx	lr

00021eac <dta_old_write_int16>:
   21eac:	movw	r3, #32767	; 0x7fff
   21eb0:	cmp	r2, r3
   21eb4:	strhne	r2, [r0]
   21eb8:	movne	r0, #0
   21ebc:	moveq	r0, #20
   21ec0:	bx	lr

00021ec4 <dta_113_write_missing_numeric>:
   21ec4:	ldr	r3, [r1]
   21ec8:	cmp	r3, #1
   21ecc:	moveq	r3, #101	; 0x65
   21ed0:	strbeq	r3, [r0]
   21ed4:	beq	21f10 <dta_113_write_missing_numeric+0x4c>
   21ed8:	cmp	r3, #2
   21edc:	movweq	r3, #32741	; 0x7fe5
   21ee0:	strheq	r3, [r0]
   21ee4:	beq	21f10 <dta_113_write_missing_numeric+0x4c>
   21ee8:	cmp	r3, #3
   21eec:	mvneq	r3, #-2147483622	; 0x8000001a
   21ef0:	streq	r3, [r0]
   21ef4:	beq	21f10 <dta_113_write_missing_numeric+0x4c>
   21ef8:	cmp	r3, #4
   21efc:	moveq	r3, #2130706432	; 0x7f000000
   21f00:	streq	r3, [r0]
   21f04:	beq	21f10 <dta_113_write_missing_numeric+0x4c>
   21f08:	cmp	r3, #5
   21f0c:	beq	21f18 <dta_113_write_missing_numeric+0x54>
   21f10:	mov	r0, #0
   21f14:	bx	lr
   21f18:	sub	sp, sp, #8
   21f1c:	mov	r2, #0
   21f20:	mov	r3, #0
   21f24:	movt	r3, #32736	; 0x7fe0
   21f28:	strd	r2, [sp]
   21f2c:	mov	r3, #0
   21f30:	str	r3, [r0]
   21f34:	ldr	r3, [sp, #4]
   21f38:	str	r3, [r0, #4]
   21f3c:	mov	r0, #0
   21f40:	add	sp, sp, #8
   21f44:	bx	lr

00021f48 <dta_write_double>:
   21f48:	push	{lr}		; (str lr, [sp, #-4]!)
   21f4c:	sub	sp, sp, #20
   21f50:	mvn	r2, #0
   21f54:	movw	r3, #65535	; 0xffff
   21f58:	movt	r3, #32735	; 0x7fdf
   21f5c:	strd	r2, [sp, #8]
   21f60:	vldr	d7, [pc, #64]	; 21fa8 <dta_write_double+0x60>
   21f64:	vcmpe.f64	d0, d7
   21f68:	vmrs	APSR_nzcv, fpscr
   21f6c:	movgt	r0, #20
   21f70:	bgt	21f98 <dta_write_double+0x50>
   21f74:	vcmp.f64	d0, d0
   21f78:	vmrs	APSR_nzcv, fpscr
   21f7c:	bvs	21fa0 <dta_write_double+0x58>
   21f80:	vstr	d0, [sp]
   21f84:	ldr	r3, [sp]
   21f88:	str	r3, [r0]
   21f8c:	ldr	r3, [sp, #4]
   21f90:	str	r3, [r0, #4]
   21f94:	mov	r0, #0
   21f98:	add	sp, sp, #20
   21f9c:	pop	{pc}		; (ldr pc, [sp], #4)
   21fa0:	bl	21ec4 <dta_113_write_missing_numeric>
   21fa4:	b	21f98 <dta_write_double+0x50>
   21fa8:	.word	0xffffffff
   21fac:	.word	0x7fdfffff

00021fb0 <dta_write_float>:
   21fb0:	push	{lr}		; (str lr, [sp, #-4]!)
   21fb4:	sub	sp, sp, #12
   21fb8:	mvn	r3, #-2130706432	; 0x81000000
   21fbc:	str	r3, [sp, #4]
   21fc0:	vldr	s15, [pc, #52]	; 21ffc <dta_write_float+0x4c>
   21fc4:	vcmpe.f32	s0, s15
   21fc8:	vmrs	APSR_nzcv, fpscr
   21fcc:	movgt	r0, #20
   21fd0:	bgt	21fec <dta_write_float+0x3c>
   21fd4:	vcmp.f32	s0, s0
   21fd8:	vmrs	APSR_nzcv, fpscr
   21fdc:	vmovvc	r3, s0
   21fe0:	strvc	r3, [r0]
   21fe4:	movvc	r0, #0
   21fe8:	bvs	21ff4 <dta_write_float+0x44>
   21fec:	add	sp, sp, #12
   21ff0:	pop	{pc}		; (ldr pc, [sp], #4)
   21ff4:	bl	21ec4 <dta_113_write_missing_numeric>
   21ff8:	b	21fec <dta_write_float+0x3c>
   21ffc:	.word	0x7effffff

00022000 <dta_113_write_missing_tagged>:
   22000:	sub	r3, r2, #97	; 0x61
   22004:	uxtb	r3, r3
   22008:	cmp	r3, #25
   2200c:	bhi	220d0 <dta_113_write_missing_tagged+0xd0>
   22010:	ldr	r3, [r1]
   22014:	cmp	r3, #1
   22018:	beq	22044 <dta_113_write_missing_tagged+0x44>
   2201c:	cmp	r3, #2
   22020:	beq	22054 <dta_113_write_missing_tagged+0x54>
   22024:	cmp	r3, #3
   22028:	beq	22068 <dta_113_write_missing_tagged+0x68>
   2202c:	cmp	r3, #4
   22030:	beq	2207c <dta_113_write_missing_tagged+0x7c>
   22034:	cmp	r3, #5
   22038:	beq	22094 <dta_113_write_missing_tagged+0x94>
   2203c:	mov	r0, #23
   22040:	bx	lr
   22044:	add	r2, r2, #5
   22048:	strb	r2, [r0]
   2204c:	mov	r0, #0
   22050:	bx	lr
   22054:	add	r2, r2, #32512	; 0x7f00
   22058:	add	r2, r2, #133	; 0x85
   2205c:	strh	r2, [r0]
   22060:	mov	r0, #0
   22064:	bx	lr
   22068:	add	r2, r2, #-2147483648	; 0x80000000
   2206c:	sub	r2, r2, #123	; 0x7b
   22070:	str	r2, [r0]
   22074:	mov	r0, #0
   22078:	bx	lr
   2207c:	lsl	r2, r2, #11
   22080:	add	r2, r2, #2113929216	; 0x7e000000
   22084:	add	r2, r2, #16580608	; 0xfd0000
   22088:	str	r2, [r0]
   2208c:	mov	r0, #0
   22090:	bx	lr
   22094:	sub	sp, sp, #8
   22098:	sub	r2, r2, #97	; 0x61
   2209c:	mov	r3, #0
   220a0:	lsl	r1, r2, #8
   220a4:	mov	ip, #256	; 0x100
   220a8:	movt	ip, #32736	; 0x7fe0
   220ac:	adds	r2, r3, r3
   220b0:	adc	r1, r1, ip
   220b4:	str	r2, [sp]
   220b8:	str	r1, [sp, #4]
   220bc:	str	r2, [r0]
   220c0:	str	r1, [r0, #4]
   220c4:	mov	r0, r3
   220c8:	add	sp, sp, #8
   220cc:	bx	lr
   220d0:	mov	r0, #21
   220d4:	bx	lr

000220d8 <dta_old_write_missing_numeric>:
   220d8:	ldr	r3, [r1]
   220dc:	cmp	r3, #1
   220e0:	moveq	r3, #127	; 0x7f
   220e4:	strbeq	r3, [r0]
   220e8:	beq	22124 <dta_old_write_missing_numeric+0x4c>
   220ec:	cmp	r3, #2
   220f0:	movweq	r3, #32767	; 0x7fff
   220f4:	strheq	r3, [r0]
   220f8:	beq	22124 <dta_old_write_missing_numeric+0x4c>
   220fc:	cmp	r3, #3
   22100:	mvneq	r3, #-2147483648	; 0x80000000
   22104:	streq	r3, [r0]
   22108:	beq	22124 <dta_old_write_missing_numeric+0x4c>
   2210c:	cmp	r3, #4
   22110:	moveq	r3, #2130706432	; 0x7f000000
   22114:	streq	r3, [r0]
   22118:	beq	22124 <dta_old_write_missing_numeric+0x4c>
   2211c:	cmp	r3, #5
   22120:	beq	2212c <dta_old_write_missing_numeric+0x54>
   22124:	mov	r0, #0
   22128:	bx	lr
   2212c:	sub	sp, sp, #8
   22130:	mov	r2, #0
   22134:	mov	r3, #0
   22138:	movt	r3, #32736	; 0x7fe0
   2213c:	strd	r2, [sp]
   22140:	mov	r3, #0
   22144:	str	r3, [r0]
   22148:	ldr	r3, [sp, #4]
   2214c:	str	r3, [r0, #4]
   22150:	mov	r0, #0
   22154:	add	sp, sp, #8
   22158:	bx	lr

0002215c <dta_old_write_int8>:
   2215c:	cmp	r2, #127	; 0x7f
   22160:	strbne	r2, [r0]
   22164:	movne	r0, #0
   22168:	moveq	r0, #20
   2216c:	bx	lr

00022170 <readstat_begin_writing_dta>:
   22170:	str	r4, [sp, #-8]!
   22174:	str	lr, [sp, #4]
   22178:	ldr	r3, [pc, #408]	; 22318 <readstat_begin_writing_dta+0x1a8>
   2217c:	add	r3, pc, r3
   22180:	ldr	ip, [r0, #8]
   22184:	cmp	ip, #0
   22188:	moveq	ip, #118	; 0x76
   2218c:	streq	ip, [r0, #8]
   22190:	ldr	ip, [pc, #388]	; 2231c <readstat_begin_writing_dta+0x1ac>
   22194:	ldr	r3, [r3, ip]
   22198:	str	r3, [r0, #292]	; 0x124
   2219c:	ldr	r3, [r0, #8]
   221a0:	cmp	r3, #116	; 0x74
   221a4:	ble	22274 <readstat_begin_writing_dta+0x104>
   221a8:	ldr	ip, [pc, #368]	; 22320 <readstat_begin_writing_dta+0x1b0>
   221ac:	add	ip, pc, ip
   221b0:	str	ip, [r0, #228]	; 0xe4
   221b4:	cmp	r3, #117	; 0x75
   221b8:	ble	222f4 <readstat_begin_writing_dta+0x184>
   221bc:	ldr	r3, [pc, #352]	; 22324 <readstat_begin_writing_dta+0x1b4>
   221c0:	add	r3, pc, r3
   221c4:	str	r3, [r0, #232]	; 0xe8
   221c8:	ldr	r3, [pc, #344]	; 22328 <readstat_begin_writing_dta+0x1b8>
   221cc:	add	r3, pc, r3
   221d0:	str	r3, [r0, #260]	; 0x104
   221d4:	ldr	r3, [pc, #336]	; 2232c <readstat_begin_writing_dta+0x1bc>
   221d8:	add	r3, pc, r3
   221dc:	str	r3, [r0, #236]	; 0xec
   221e0:	ldr	r3, [pc, #328]	; 22330 <readstat_begin_writing_dta+0x1c0>
   221e4:	add	r3, pc, r3
   221e8:	str	r3, [r0, #240]	; 0xf0
   221ec:	ldr	r3, [pc, #320]	; 22334 <readstat_begin_writing_dta+0x1c4>
   221f0:	add	r3, pc, r3
   221f4:	str	r3, [r0, #244]	; 0xf4
   221f8:	ldr	r3, [pc, #312]	; 22338 <readstat_begin_writing_dta+0x1c8>
   221fc:	add	r3, pc, r3
   22200:	str	r3, [r0, #268]	; 0x10c
   22204:	ldr	r3, [pc, #304]	; 2233c <readstat_begin_writing_dta+0x1cc>
   22208:	add	r3, pc, r3
   2220c:	str	r3, [r0, #272]	; 0x110
   22210:	ldr	r3, [pc, #296]	; 22340 <readstat_begin_writing_dta+0x1d0>
   22214:	add	r3, pc, r3
   22218:	str	r3, [r0, #248]	; 0xf8
   2221c:	ldr	r3, [pc, #288]	; 22344 <readstat_begin_writing_dta+0x1d4>
   22220:	add	r3, pc, r3
   22224:	str	r3, [r0, #252]	; 0xfc
   22228:	ldr	r3, [pc, #280]	; 22348 <readstat_begin_writing_dta+0x1d8>
   2222c:	add	r3, pc, r3
   22230:	str	r3, [r0, #256]	; 0x100
   22234:	ldr	r3, [pc, #272]	; 2234c <readstat_begin_writing_dta+0x1dc>
   22238:	add	r3, pc, r3
   2223c:	str	r3, [r0, #264]	; 0x108
   22240:	ldr	r3, [pc, #264]	; 22350 <readstat_begin_writing_dta+0x1e0>
   22244:	add	r3, pc, r3
   22248:	str	r3, [r0, #276]	; 0x114
   2224c:	ldr	r3, [pc, #256]	; 22354 <readstat_begin_writing_dta+0x1e4>
   22250:	add	r3, pc, r3
   22254:	str	r3, [r0, #284]	; 0x11c
   22258:	ldr	r3, [pc, #248]	; 22358 <readstat_begin_writing_dta+0x1e8>
   2225c:	add	r3, pc, r3
   22260:	str	r3, [r0, #288]	; 0x120
   22264:	bl	3f5c <readstat_begin_writing_file@plt>
   22268:	ldr	r4, [sp]
   2226c:	add	sp, sp, #4
   22270:	pop	{pc}		; (ldr pc, [sp], #4)
   22274:	cmp	r3, #110	; 0x6e
   22278:	ble	222a0 <readstat_begin_writing_dta+0x130>
   2227c:	ldr	ip, [pc, #216]	; 2235c <readstat_begin_writing_dta+0x1ec>
   22280:	add	ip, pc, ip
   22284:	str	ip, [r0, #228]	; 0xe4
   22288:	ldr	ip, [pc, #208]	; 22360 <readstat_begin_writing_dta+0x1f0>
   2228c:	add	ip, pc, ip
   22290:	str	ip, [r0, #232]	; 0xe8
   22294:	cmp	r3, #112	; 0x70
   22298:	ble	222c0 <readstat_begin_writing_dta+0x150>
   2229c:	b	221d4 <readstat_begin_writing_dta+0x64>
   222a0:	ldr	ip, [pc, #188]	; 22364 <readstat_begin_writing_dta+0x1f4>
   222a4:	add	ip, pc, ip
   222a8:	str	ip, [r0, #228]	; 0xe4
   222ac:	cmp	r3, #110	; 0x6e
   222b0:	beq	22288 <readstat_begin_writing_dta+0x118>
   222b4:	ldr	r3, [pc, #172]	; 22368 <readstat_begin_writing_dta+0x1f8>
   222b8:	add	r3, pc, r3
   222bc:	str	r3, [r0, #232]	; 0xe8
   222c0:	ldr	r3, [pc, #164]	; 2236c <readstat_begin_writing_dta+0x1fc>
   222c4:	add	r3, pc, r3
   222c8:	str	r3, [r0, #236]	; 0xec
   222cc:	ldr	r3, [pc, #156]	; 22370 <readstat_begin_writing_dta+0x200>
   222d0:	add	r3, pc, r3
   222d4:	str	r3, [r0, #240]	; 0xf0
   222d8:	ldr	r3, [pc, #148]	; 22374 <readstat_begin_writing_dta+0x204>
   222dc:	add	r3, pc, r3
   222e0:	str	r3, [r0, #244]	; 0xf4
   222e4:	ldr	r3, [pc, #140]	; 22378 <readstat_begin_writing_dta+0x208>
   222e8:	add	r3, pc, r3
   222ec:	str	r3, [r0, #268]	; 0x10c
   222f0:	b	22210 <readstat_begin_writing_dta+0xa0>
   222f4:	ldr	ip, [pc, #128]	; 2237c <readstat_begin_writing_dta+0x20c>
   222f8:	add	ip, pc, ip
   222fc:	str	ip, [r0, #232]	; 0xe8
   22300:	cmp	r3, #117	; 0x75
   22304:	bne	221d4 <readstat_begin_writing_dta+0x64>
   22308:	ldr	r3, [pc, #112]	; 22380 <readstat_begin_writing_dta+0x210>
   2230c:	add	r3, pc, r3
   22310:	str	r3, [r0, #260]	; 0x104
   22314:	b	221d4 <readstat_begin_writing_dta+0x64>
   22318:	.word	0x00023e7c
   2231c:	.word	0x00000300
   22320:	.word	0xffffd9cc
   22324:	.word	0xfffffc88
   22328:	.word	0xffffe35c
   2232c:	.word	0xffffda1c
   22330:	.word	0xffffda24
   22334:	.word	0xffffda30
   22338:	.word	0xfffffcc0
   2233c:	.word	0xfffffdf0
   22340:	.word	0xfffffd94
   22344:	.word	0xfffffd20
   22348:	.word	0xffffe4f4
   2234c:	.word	0xfffffc34
   22350:	.word	0xffffe710
   22354:	.word	0xffffdadc
   22358:	.word	0xffffda28
   2235c:	.word	0xffffd8c4
   22360:	.word	0xfffffb98
   22364:	.word	0xffffd91c
   22368:	.word	0xfffffb48
   2236c:	.word	0xfffffe90
   22370:	.word	0xfffffbd4
   22374:	.word	0xfffffbb4
   22378:	.word	0xfffffde8
   2237c:	.word	0xfffffb2c
   22380:	.word	0xffffd928

00022384 <submit_value_label>:
   22384:	strd	r4, [sp, #-36]!	; 0xffffffdc
   22388:	strd	r6, [sp, #8]
   2238c:	strd	r8, [sp, #16]
   22390:	strd	sl, [sp, #24]
   22394:	str	lr, [sp, #32]
   22398:	sub	sp, sp, #44	; 0x2c
   2239c:	ldrd	r4, [sp, #80]	; 0x50
   223a0:	ldr	r8, [sp, #100]	; 0x64
   223a4:	ldr	r9, [sp, #104]	; 0x68
   223a8:	ldr	r7, [r0, #20]
   223ac:	cmp	r7, #0
   223b0:	moveq	r0, #0
   223b4:	beq	22424 <submit_value_label+0xa0>
   223b8:	str	r1, [sp, #20]
   223bc:	mov	r6, r0
   223c0:	cmp	r2, #2
   223c4:	beq	22440 <submit_value_label+0xbc>
   223c8:	cmp	r2, #3
   223cc:	moveq	r0, #0
   223d0:	beq	22424 <submit_value_label+0xa0>
   223d4:	mov	r0, #0
   223d8:	mov	r1, #0
   223dc:	strd	r0, [sp, #24]
   223e0:	strd	r0, [sp, #32]
   223e4:	cmp	r2, #0
   223e8:	bne	224c4 <submit_value_label+0x140>
   223ec:	mov	r3, #5
   223f0:	str	r3, [sp, #32]
   223f4:	vstr	d0, [sp, #24]
   223f8:	str	r9, [sp, #12]
   223fc:	str	r8, [sp, #8]
   22400:	ldrd	r2, [sp, #32]
   22404:	strd	r2, [sp]
   22408:	add	r3, sp, #24
   2240c:	ldm	r3, {r2, r3}
   22410:	ldr	r0, [sp, #20]
   22414:	blx	r7
   22418:	cmp	r0, #0
   2241c:	moveq	r0, #0
   22420:	movne	r0, #4
   22424:	add	sp, sp, #44	; 0x2c
   22428:	ldrd	r4, [sp]
   2242c:	ldrd	r6, [sp, #8]
   22430:	ldrd	r8, [sp, #16]
   22434:	ldrd	sl, [sp, #24]
   22438:	add	sp, sp, #32
   2243c:	pop	{pc}		; (ldr pc, [sp], #4)
   22440:	ldrd	r2, [sp, #88]	; 0x58
   22444:	cmp	r2, r4
   22448:	sbcs	r3, r3, r5
   2244c:	blt	224b4 <submit_value_label+0x130>
   22450:	mov	fp, #0
   22454:	mov	sl, #5
   22458:	add	r7, sp, #24
   2245c:	str	fp, [sp, #36]	; 0x24
   22460:	mov	r0, r4
   22464:	mov	r1, r5
   22468:	bl	25a70 <__aeabi_l2d>
   2246c:	strd	r0, [sp, #24]
   22470:	str	sl, [sp, #32]
   22474:	str	r9, [sp, #12]
   22478:	str	r8, [sp, #8]
   2247c:	ldrd	r2, [sp, #32]
   22480:	strd	r2, [sp]
   22484:	ldm	r7, {r2, r3}
   22488:	ldr	r1, [r6, #20]
   2248c:	ldr	r0, [sp, #20]
   22490:	blx	r1
   22494:	cmp	r0, #0
   22498:	bne	224bc <submit_value_label+0x138>
   2249c:	adds	r4, r4, #1
   224a0:	adc	r5, r5, #0
   224a4:	ldrd	r2, [sp, #88]	; 0x58
   224a8:	cmp	r2, r4
   224ac:	sbcs	r3, r3, r5
   224b0:	bge	2245c <submit_value_label+0xd8>
   224b4:	mov	r0, #0
   224b8:	b	22424 <submit_value_label+0xa0>
   224bc:	mov	r0, #4
   224c0:	b	22424 <submit_value_label+0xa0>
   224c4:	cmp	r2, #1
   224c8:	beq	224f0 <submit_value_label+0x16c>
   224cc:	cmn	r2, #1
   224d0:	bne	223f8 <submit_value_label+0x74>
   224d4:	mov	r3, #5
   224d8:	str	r3, [sp, #32]
   224dc:	mov	r2, #0
   224e0:	mov	r3, #0
   224e4:	movt	r3, #32760	; 0x7ff8
   224e8:	strd	r2, [sp, #24]
   224ec:	b	223f8 <submit_value_label+0x74>
   224f0:	ldr	r3, [sp, #96]	; 0x60
   224f4:	str	r3, [sp, #24]
   224f8:	b	223f8 <submit_value_label+0x74>

000224fc <submit_columns>:
   224fc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   22500:	strd	r6, [sp, #8]
   22504:	strd	r8, [sp, #16]
   22508:	strd	sl, [sp, #24]
   2250c:	str	lr, [sp, #32]
   22510:	sub	sp, sp, #12
   22514:	ldr	r4, [r1, #268]	; 0x10c
   22518:	cmp	r4, #0
   2251c:	ble	22610 <submit_columns+0x114>
   22520:	ldr	r3, [r1, #276]	; 0x114
   22524:	mov	ip, #2208	; 0x8a0
   22528:	mla	r4, ip, r4, r3
   2252c:	ldr	ip, [r3]
   22530:	ldr	lr, [r1, #256]	; 0x100
   22534:	cmp	ip, lr
   22538:	addge	ip, ip, #1
   2253c:	strge	ip, [r1, #256]	; 0x100
   22540:	add	r3, r3, #2208	; 0x8a0
   22544:	cmp	r4, r3
   22548:	bne	2252c <submit_columns+0x30>
   2254c:	ldr	r3, [r0, #8]
   22550:	cmp	r3, #0
   22554:	beq	22620 <submit_columns+0x124>
   22558:	str	r2, [sp, #4]
   2255c:	mov	r6, r1
   22560:	mov	sl, r0
   22564:	mov	r7, #0
   22568:	mov	r8, r7
   2256c:	mov	r5, r7
   22570:	movw	fp, #2168	; 0x878
   22574:	b	2258c <submit_columns+0x90>
   22578:	add	r5, r5, #1
   2257c:	add	r7, r7, #2208	; 0x8a0
   22580:	ldr	r3, [r6, #268]	; 0x10c
   22584:	cmp	r3, r5
   22588:	ble	225f0 <submit_columns+0xf4>
   2258c:	ldr	r4, [r6, #276]	; 0x114
   22590:	add	r4, r4, r7
   22594:	str	r5, [r4, #20]
   22598:	str	r8, [r4, #2164]	; 0x874
   2259c:	ldr	r3, [r4, #16]
   225a0:	cmp	r3, #0
   225a4:	ldreq	r3, [r4, #8]
   225a8:	streq	r3, [r4, #1612]	; 0x64c
   225ac:	ldr	r9, [sl, #8]
   225b0:	add	r1, r4, #16
   225b4:	ldrb	r3, [r4, #2168]	; 0x878
   225b8:	cmp	r3, #0
   225bc:	addne	r2, r4, fp
   225c0:	moveq	r2, #0
   225c4:	ldr	r3, [sp, #4]
   225c8:	mov	r0, r5
   225cc:	blx	r9
   225d0:	cmp	r0, #2
   225d4:	moveq	r3, #1
   225d8:	streq	r3, [r4, #12]
   225dc:	beq	22578 <submit_columns+0x7c>
   225e0:	cmp	r0, #1
   225e4:	beq	22618 <submit_columns+0x11c>
   225e8:	add	r8, r8, #1
   225ec:	b	22578 <submit_columns+0x7c>
   225f0:	mov	r0, #0
   225f4:	add	sp, sp, #12
   225f8:	ldrd	r4, [sp]
   225fc:	ldrd	r6, [sp, #8]
   22600:	ldrd	r8, [sp, #16]
   22604:	ldrd	sl, [sp, #24]
   22608:	add	sp, sp, #32
   2260c:	pop	{pc}		; (ldr pc, [sp], #4)
   22610:	mov	r0, #0
   22614:	b	225f4 <submit_columns+0xf8>
   22618:	mov	r0, #4
   2261c:	b	225f4 <submit_columns+0xf8>
   22620:	mov	r0, #0
   22624:	b	225f4 <submit_columns+0xf8>

00022628 <readstat_copy>:
   22628:	strd	r4, [sp, #-16]!
   2262c:	str	r6, [sp, #8]
   22630:	str	lr, [sp, #12]
   22634:	mov	r5, r0
   22638:	mov	r0, r2
   2263c:	mov	r4, r3
   22640:	cmp	r3, r1
   22644:	subcs	r4, r1, #1
   22648:	mov	r2, r4
   2264c:	mov	r1, r0
   22650:	mov	r0, r5
   22654:	bl	3f14 <memcpy@plt>
   22658:	mov	r3, #0
   2265c:	strb	r3, [r5, r4]
   22660:	ldrd	r4, [sp]
   22664:	ldr	r6, [sp, #8]
   22668:	add	sp, sp, #12
   2266c:	pop	{pc}		; (ldr pc, [sp], #4)

00022670 <readstat_copy_lower>:
   22670:	strd	r4, [sp, #-16]!
   22674:	str	r6, [sp, #8]
   22678:	str	lr, [sp, #12]
   2267c:	mov	r4, r0
   22680:	mov	r6, r1
   22684:	bl	3e60 <readstat_copy@plt>
   22688:	cmp	r6, #0
   2268c:	beq	226c8 <readstat_copy_lower+0x58>
   22690:	ldrb	r5, [r4]
   22694:	cmp	r5, #0
   22698:	beq	226c8 <readstat_copy_lower+0x58>
   2269c:	bl	416c <__ctype_tolower_loc@plt>
   226a0:	sub	r2, r6, #1
   226a4:	add	r2, r4, r2
   226a8:	ldr	r3, [r0]
   226ac:	ldr	r3, [r3, r5, lsl #2]
   226b0:	strb	r3, [r4]
   226b4:	cmp	r2, r4
   226b8:	beq	226c8 <readstat_copy_lower+0x58>
   226bc:	ldrb	r5, [r4, #1]!
   226c0:	cmp	r5, #0
   226c4:	bne	226a8 <readstat_copy_lower+0x38>
   226c8:	ldrd	r4, [sp]
   226cc:	ldr	r6, [sp, #8]
   226d0:	add	sp, sp, #12
   226d4:	pop	{pc}		; (ldr pc, [sp], #4)

000226d8 <readstat_copy_quoted>:
   226d8:	cmp	r3, r1
   226dc:	subcs	r3, r1, #1
   226e0:	cmp	r3, #0
   226e4:	beq	22770 <readstat_copy_quoted+0x98>
   226e8:	strd	r4, [sp, #-16]!
   226ec:	str	r6, [sp, #8]
   226f0:	str	lr, [sp, #12]
   226f4:	mov	r1, r2
   226f8:	add	r2, r2, r3
   226fc:	mov	r3, #0
   22700:	mov	ip, r3
   22704:	mov	r6, #1
   22708:	mov	r4, r3
   2270c:	mov	r5, #9
   22710:	b	22734 <readstat_copy_quoted+0x5c>
   22714:	ldrb	lr, [r1]
   22718:	cmp	lr, #92	; 0x5c
   2271c:	strbne	lr, [r0, r3]
   22720:	addne	r3, r3, #1
   22724:	moveq	ip, r6
   22728:	add	r1, r1, #1
   2272c:	cmp	r1, r2
   22730:	beq	22758 <readstat_copy_quoted+0x80>
   22734:	cmp	ip, #0
   22738:	beq	22714 <readstat_copy_quoted+0x3c>
   2273c:	ldrb	ip, [r1]
   22740:	cmp	ip, #116	; 0x74
   22744:	strbeq	r5, [r0, r3]
   22748:	strbne	ip, [r0, r3]
   2274c:	add	r3, r3, #1
   22750:	mov	ip, r4
   22754:	b	22728 <readstat_copy_quoted+0x50>
   22758:	mov	r2, #0
   2275c:	strb	r2, [r0, r3]
   22760:	ldrd	r4, [sp]
   22764:	ldr	r6, [sp, #8]
   22768:	add	sp, sp, #12
   2276c:	pop	{pc}		; (ldr pc, [sp], #4)
   22770:	mov	r2, #0
   22774:	strb	r2, [r0, r3]
   22778:	bx	lr
   2277c:	andeq	r0, r0, r0

00022780 <readstat_parse_sas_commands>:
   22780:	strd	r4, [sp, #-36]!	; 0xffffffdc
   22784:	strd	r6, [sp, #8]
   22788:	strd	r8, [sp, #16]
   2278c:	strd	sl, [sp, #24]
   22790:	str	lr, [sp, #32]
   22794:	vpush	{d8}
   22798:	sub	sp, sp, #2304	; 0x900
   2279c:	sub	sp, sp, #4
   227a0:	mov	r8, r0
   227a4:	mov	r0, r1
   227a8:	str	r2, [sp, #100]	; 0x64
   227ac:	str	r3, [sp, #124]	; 0x7c
   227b0:	ldr	r3, [r8, #32]
   227b4:	ldr	r2, [r3]
   227b8:	ldr	r1, [r3, #20]
   227bc:	blx	r2
   227c0:	cmn	r0, #1
   227c4:	beq	228d8 <readstat_parse_sas_commands+0x158>
   227c8:	ldr	r3, [r8, #32]
   227cc:	ldr	r4, [r3, #8]
   227d0:	ldr	r2, [r3, #20]
   227d4:	mov	r1, #2
   227d8:	mov	r0, #0
   227dc:	blx	r4
   227e0:	mov	r9, r0
   227e4:	cmn	r0, #1
   227e8:	beq	22f78 <readstat_parse_sas_commands+0x7f8>
   227ec:	ldr	r3, [r8, #32]
   227f0:	ldr	r5, [r3, #8]
   227f4:	ldr	r2, [r3, #20]
   227f8:	mov	r1, #0
   227fc:	mov	r0, r1
   22800:	blx	r5
   22804:	mov	r0, r9
   22808:	bl	410c <malloc@plt>
   2280c:	mov	r4, r0
   22810:	str	r0, [sp, #120]	; 0x78
   22814:	ldr	r3, [r8, #32]
   22818:	ldr	r5, [r3, #12]
   2281c:	ldr	r2, [r3, #20]
   22820:	mov	r1, r9
   22824:	blx	r5
   22828:	add	r9, r4, r9
   2282c:	mov	r1, #280	; 0x118
   22830:	mov	r0, #1
   22834:	bl	3d4c <calloc@plt>
   22838:	subs	r3, r0, #0
   2283c:	mov	r2, r3
   22840:	str	r3, [sp, #44]	; 0x2c
   22844:	beq	22f90 <readstat_parse_sas_commands+0x810>
   22848:	mov	r3, #1
   2284c:	str	r3, [r2, #256]	; 0x100
   22850:	cmp	r4, r9
   22854:	beq	23038 <readstat_parse_sas_commands+0x8b8>
   22858:	mov	r7, r4
   2285c:	str	r4, [sp, #116]	; 0x74
   22860:	mov	r3, #0
   22864:	str	r3, [sp, #64]	; 0x40
   22868:	str	r3, [sp, #76]	; 0x4c
   2286c:	str	r3, [sp, #72]	; 0x48
   22870:	str	r3, [sp, #48]	; 0x30
   22874:	mov	r2, #5
   22878:	str	r2, [sp, #68]	; 0x44
   2287c:	str	r3, [sp, #96]	; 0x60
   22880:	mov	sl, #0
   22884:	mov	fp, #0
   22888:	str	sl, [sp, #104]	; 0x68
   2288c:	str	fp, [sp, #108]	; 0x6c
   22890:	vldr	d8, [pc, #984]	; 22c70 <readstat_parse_sas_commands+0x4f0>
   22894:	movw	r6, #1094	; 0x446
   22898:	str	r3, [sp, #40]	; 0x28
   2289c:	str	r3, [sp, #36]	; 0x24
   228a0:	ldr	r3, [pc, #976]	; 22c78 <readstat_parse_sas_commands+0x4f8>
   228a4:	add	r3, pc, r3
   228a8:	str	r3, [sp, #52]	; 0x34
   228ac:	ldr	r2, [pc, #968]	; 22c7c <readstat_parse_sas_commands+0x4fc>
   228b0:	add	r2, pc, r2
   228b4:	str	r2, [sp, #56]	; 0x38
   228b8:	add	r3, r3, #2192	; 0x890
   228bc:	add	r3, r3, #4
   228c0:	str	r3, [sp, #60]	; 0x3c
   228c4:	ldr	r3, [pc, #948]	; 22c80 <readstat_parse_sas_commands+0x500>
   228c8:	add	r3, pc, r3
   228cc:	str	r8, [sp, #112]	; 0x70
   228d0:	mov	r8, r3
   228d4:	b	229dc <readstat_parse_sas_commands+0x25c>
   228d8:	ldr	r2, [sp, #124]	; 0x7c
   228dc:	cmp	r2, #0
   228e0:	beq	22f6c <readstat_parse_sas_commands+0x7ec>
   228e4:	mov	r3, #1
   228e8:	str	r3, [r2]
   228ec:	mov	r3, #0
   228f0:	str	r3, [sp, #44]	; 0x2c
   228f4:	b	22f2c <readstat_parse_sas_commands+0x7ac>
   228f8:	sub	r1, r5, #1
   228fc:	adds	r1, lr, r1
   22900:	bcs	2294c <readstat_parse_sas_commands+0x1cc>
   22904:	ldrb	ip, [r7]
   22908:	mov	r3, lr
   2290c:	b	22918 <readstat_parse_sas_commands+0x198>
   22910:	cmp	r3, r1
   22914:	bhi	2294c <readstat_parse_sas_commands+0x1cc>
   22918:	sub	r2, r1, r3
   2291c:	add	r0, r3, r2, asr #1
   22920:	ldrb	r2, [r3, r2, asr #1]
   22924:	cmp	ip, r2
   22928:	subcc	r1, r0, #1
   2292c:	bcc	22910 <readstat_parse_sas_commands+0x190>
   22930:	cmp	ip, r2
   22934:	bls	22940 <readstat_parse_sas_commands+0x1c0>
   22938:	add	r3, r0, #1
   2293c:	b	22910 <readstat_parse_sas_commands+0x190>
   22940:	sub	r0, r0, lr
   22944:	add	r4, r4, r0
   22948:	b	229a4 <readstat_parse_sas_commands+0x224>
   2294c:	add	lr, lr, r5
   22950:	add	r4, r4, r5
   22954:	b	22a08 <readstat_parse_sas_commands+0x288>
   22958:	cmp	r1, r2
   2295c:	bcc	229a0 <readstat_parse_sas_commands+0x220>
   22960:	sub	r3, r1, r2
   22964:	asr	r3, r3, #1
   22968:	bic	r3, r3, #1
   2296c:	add	r0, r2, r3
   22970:	ldrb	r3, [r2, r3]
   22974:	cmp	r3, ip
   22978:	subhi	r1, r0, #2
   2297c:	bhi	22958 <readstat_parse_sas_commands+0x1d8>
   22980:	ldrb	r3, [r0, #1]
   22984:	cmp	r3, ip
   22988:	bcs	22994 <readstat_parse_sas_commands+0x214>
   2298c:	add	r2, r0, #2
   22990:	b	22958 <readstat_parse_sas_commands+0x1d8>
   22994:	sub	r0, r0, lr
   22998:	add	r4, r4, r0, asr #1
   2299c:	b	229a4 <readstat_parse_sas_commands+0x224>
   229a0:	add	r4, r4, r6
   229a4:	lsl	r3, r4, #1
   229a8:	ldr	r2, [pc, #724]	; 22c84 <readstat_parse_sas_commands+0x504>
   229ac:	add	r2, pc, r2
   229b0:	ldrsh	r6, [r2, r3]
   229b4:	ldr	r3, [pc, #716]	; 22c88 <readstat_parse_sas_commands+0x508>
   229b8:	add	r3, pc, r3
   229bc:	ldrb	r2, [r3, r4]
   229c0:	cmp	r2, #0
   229c4:	bne	22a3c <readstat_parse_sas_commands+0x2bc>
   229c8:	cmp	r6, #0
   229cc:	beq	22f9c <readstat_parse_sas_commands+0x81c>
   229d0:	add	r7, r7, #1
   229d4:	cmp	r9, r7
   229d8:	beq	22ec4 <readstat_parse_sas_commands+0x744>
   229dc:	lsl	r3, r6, #1
   229e0:	ldr	r2, [sp, #52]	; 0x34
   229e4:	ldrsh	lr, [r2, r3]
   229e8:	ldr	r2, [sp, #56]	; 0x38
   229ec:	add	lr, lr, r2
   229f0:	ldr	r2, [sp, #60]	; 0x3c
   229f4:	ldrsh	r4, [r2, r3]
   229f8:	add	r3, r8, r6
   229fc:	ldrb	r5, [r3, #-3792]	; 0xfffff130
   22a00:	cmp	r5, #0
   22a04:	bne	228f8 <readstat_parse_sas_commands+0x178>
   22a08:	ldr	r3, [pc, #636]	; 22c8c <readstat_parse_sas_commands+0x50c>
   22a0c:	add	r3, pc, r3
   22a10:	add	r6, r3, r6
   22a14:	ldrb	r6, [r6, #-2692]	; 0xfffff57c
   22a18:	cmp	r6, #0
   22a1c:	ble	229a4 <readstat_parse_sas_commands+0x224>
   22a20:	add	r1, lr, r6, lsl #1
   22a24:	sub	r1, r1, #2
   22a28:	cmp	lr, r1
   22a2c:	bhi	229a0 <readstat_parse_sas_commands+0x220>
   22a30:	ldrb	ip, [r7]
   22a34:	mov	r2, lr
   22a38:	b	22960 <readstat_parse_sas_commands+0x1e0>
   22a3c:	ldr	r3, [pc, #588]	; 22c90 <readstat_parse_sas_commands+0x510>
   22a40:	add	r3, pc, r3
   22a44:	sub	r3, r3, #1584	; 0x630
   22a48:	sub	r3, r3, #8
   22a4c:	add	r1, r3, r2
   22a50:	add	r4, r1, #1
   22a54:	ldrb	r3, [r3, r2]
   22a58:	add	r3, r3, #1
   22a5c:	add	r5, r1, r3
   22a60:	ldr	r3, [pc, #556]	; 22c94 <readstat_parse_sas_commands+0x514>
   22a64:	add	r3, pc, r3
   22a68:	str	r3, [sp, #80]	; 0x50
   22a6c:	ldr	r3, [pc, #548]	; 22c98 <readstat_parse_sas_commands+0x518>
   22a70:	add	r3, pc, r3
   22a74:	str	r3, [sp, #84]	; 0x54
   22a78:	cmp	r5, r4
   22a7c:	beq	229c8 <readstat_parse_sas_commands+0x248>
   22a80:	ldrb	r3, [r4], #1
   22a84:	cmp	r3, #34	; 0x22
   22a88:	addls	pc, pc, r3, lsl #2
   22a8c:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22a90:	b	22b1c <readstat_parse_sas_commands+0x39c>
   22a94:	b	22b28 <readstat_parse_sas_commands+0x3a8>
   22a98:	b	22b64 <readstat_parse_sas_commands+0x3e4>
   22a9c:	b	22bbc <readstat_parse_sas_commands+0x43c>
   22aa0:	b	22bd0 <readstat_parse_sas_commands+0x450>
   22aa4:	b	22be0 <readstat_parse_sas_commands+0x460>
   22aa8:	b	22bec <readstat_parse_sas_commands+0x46c>
   22aac:	b	22bf8 <readstat_parse_sas_commands+0x478>
   22ab0:	b	22c10 <readstat_parse_sas_commands+0x490>
   22ab4:	b	22c28 <readstat_parse_sas_commands+0x4a8>
   22ab8:	b	22c40 <readstat_parse_sas_commands+0x4c0>
   22abc:	b	22c58 <readstat_parse_sas_commands+0x4d8>
   22ac0:	b	22ca8 <readstat_parse_sas_commands+0x528>
   22ac4:	b	22cec <readstat_parse_sas_commands+0x56c>
   22ac8:	b	22d1c <readstat_parse_sas_commands+0x59c>
   22acc:	b	22d34 <readstat_parse_sas_commands+0x5b4>
   22ad0:	b	22d58 <readstat_parse_sas_commands+0x5d8>
   22ad4:	b	22d80 <readstat_parse_sas_commands+0x600>
   22ad8:	b	22dd4 <readstat_parse_sas_commands+0x654>
   22adc:	b	22ddc <readstat_parse_sas_commands+0x65c>
   22ae0:	b	22dec <readstat_parse_sas_commands+0x66c>
   22ae4:	b	22df4 <readstat_parse_sas_commands+0x674>
   22ae8:	b	22e04 <readstat_parse_sas_commands+0x684>
   22aec:	b	22e18 <readstat_parse_sas_commands+0x698>
   22af0:	b	22e20 <readstat_parse_sas_commands+0x6a0>
   22af4:	b	22e30 <readstat_parse_sas_commands+0x6b0>
   22af8:	b	22e4c <readstat_parse_sas_commands+0x6cc>
   22afc:	b	22e68 <readstat_parse_sas_commands+0x6e8>
   22b00:	b	22e74 <readstat_parse_sas_commands+0x6f4>
   22b04:	b	22e80 <readstat_parse_sas_commands+0x700>
   22b08:	b	22e8c <readstat_parse_sas_commands+0x70c>
   22b0c:	b	22e98 <readstat_parse_sas_commands+0x718>
   22b10:	b	22ea4 <readstat_parse_sas_commands+0x724>
   22b14:	b	22eac <readstat_parse_sas_commands+0x72c>
   22b18:	b	22eb8 <readstat_parse_sas_commands+0x738>
   22b1c:	mov	sl, #0
   22b20:	mov	fp, sl
   22b24:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22b28:	lsl	r1, fp, #2
   22b2c:	lsl	r3, sl, #2
   22b30:	orr	r2, r1, sl, lsr #30
   22b34:	adds	r3, r3, sl
   22b38:	adc	r2, r2, fp
   22b3c:	adds	r3, r3, r3
   22b40:	str	r3, [sp, #88]	; 0x58
   22b44:	adc	r3, r2, r2
   22b48:	str	r3, [sp, #92]	; 0x5c
   22b4c:	ldrb	r3, [r7]
   22b50:	sub	r3, r3, #48	; 0x30
   22b54:	ldrd	sl, [sp, #88]	; 0x58
   22b58:	adds	sl, sl, r3
   22b5c:	adc	fp, fp, r3, asr #31
   22b60:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22b64:	ldrb	r3, [r7]
   22b68:	sub	r2, r3, #48	; 0x30
   22b6c:	uxtb	r2, r2
   22b70:	cmp	r2, #9
   22b74:	subls	r1, r3, #48	; 0x30
   22b78:	bls	22ba4 <readstat_parse_sas_commands+0x424>
   22b7c:	sub	r2, r3, #65	; 0x41
   22b80:	uxtb	r2, r2
   22b84:	cmp	r2, #5
   22b88:	subls	r1, r3, #55	; 0x37
   22b8c:	bls	22ba4 <readstat_parse_sas_commands+0x424>
   22b90:	sub	r2, r3, #97	; 0x61
   22b94:	uxtb	r2, r2
   22b98:	cmp	r2, #5
   22b9c:	subls	r1, r3, #87	; 0x57
   22ba0:	movhi	r1, #0
   22ba4:	lsl	r3, fp, #4
   22ba8:	orr	r3, r3, sl, lsr #28
   22bac:	lsl	r2, sl, #4
   22bb0:	adds	sl, r2, r1
   22bb4:	adc	fp, r3, r1, asr #31
   22bb8:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22bbc:	sub	r3, sl, #1
   22bc0:	str	r3, [sp, #76]	; 0x4c
   22bc4:	mov	r3, #1
   22bc8:	str	r3, [sp, #64]	; 0x40
   22bcc:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22bd0:	ldr	r3, [sp, #76]	; 0x4c
   22bd4:	sub	r3, sl, r3
   22bd8:	str	r3, [sp, #64]	; 0x40
   22bdc:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22be0:	mov	r3, #0
   22be4:	str	r3, [sp, #68]	; 0x44
   22be8:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22bec:	mov	r3, #5
   22bf0:	str	r3, [sp, #68]	; 0x44
   22bf4:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22bf8:	ldr	r3, [sp, #40]	; 0x28
   22bfc:	ldr	r2, [sp, #36]	; 0x24
   22c00:	mov	r1, #1024	; 0x400
   22c04:	add	r0, sp, #1152	; 0x480
   22c08:	bl	3e60 <readstat_copy@plt>
   22c0c:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22c10:	ldr	r3, [sp, #40]	; 0x28
   22c14:	ldr	r2, [sp, #36]	; 0x24
   22c18:	mov	r1, #32
   22c1c:	add	r0, sp, #2208	; 0x8a0
   22c20:	bl	3e60 <readstat_copy@plt>
   22c24:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22c28:	ldr	r3, [sp, #40]	; 0x28
   22c2c:	ldr	r2, [sp, #36]	; 0x24
   22c30:	mov	r1, #32
   22c34:	add	r0, sp, #2176	; 0x880
   22c38:	bl	3e60 <readstat_copy@plt>
   22c3c:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22c40:	ldr	r3, [sp, #40]	; 0x28
   22c44:	ldr	r2, [sp, #36]	; 0x24
   22c48:	mov	r1, #32
   22c4c:	add	r0, sp, #2240	; 0x8c0
   22c50:	bl	3e60 <readstat_copy@plt>
   22c54:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22c58:	ldr	r3, [sp, #40]	; 0x28
   22c5c:	ldr	r2, [sp, #36]	; 0x24
   22c60:	mov	r1, #32
   22c64:	add	r0, sp, #2272	; 0x8e0
   22c68:	bl	43dc <readstat_copy_lower@plt>
   22c6c:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22c70:	.word	0x00000000
   22c74:	.word	0x7ff80000
   22c78:	.word	0x00006140
   22c7c:	.word	0x0000c364
   22c80:	.word	0x00008114
   22c84:	.word	0x00009580
   22c88:	.word	0x00007f00
   22c8c:	.word	0x00007fd0
   22c90:	.word	0x00007f9c
   22c94:	.word	0x0000d728
   22c98:	.word	0x0000d728
   22c9c:	.word	0x00007b10
   22ca0:	.word	0x0000d240
   22ca4:	.word	0x0000d214
   22ca8:	ldr	r1, [sp, #80]	; 0x50
   22cac:	add	r0, sp, #2240	; 0x8c0
   22cb0:	bl	401c <strcasecmp@plt>
   22cb4:	cmp	r0, #0
   22cb8:	ldreq	r3, [sp, #44]	; 0x2c
   22cbc:	streq	sl, [r3, #264]	; 0x108
   22cc0:	ldr	r1, [sp, #84]	; 0x54
   22cc4:	add	r0, sp, #2240	; 0x8c0
   22cc8:	bl	401c <strcasecmp@plt>
   22ccc:	cmp	r0, #0
   22cd0:	bne	22a78 <readstat_parse_sas_commands+0x2f8>
   22cd4:	orrs	r3, sl, fp
   22cd8:	ldrbeq	r3, [sp, #1152]	; 0x480
   22cdc:	uxtbne	r3, sl
   22ce0:	ldr	r2, [sp, #44]	; 0x2c
   22ce4:	strb	r3, [r2, #272]	; 0x110
   22ce8:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22cec:	add	r1, sp, #2272	; 0x8e0
   22cf0:	ldr	r0, [sp, #44]	; 0x2c
   22cf4:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   22cf8:	ldr	r3, [sp, #68]	; 0x44
   22cfc:	str	r3, [r0, #16]
   22d00:	ldr	r3, [sp, #72]	; 0x48
   22d04:	str	r3, [r0]
   22d08:	ldr	r3, [sp, #76]	; 0x4c
   22d0c:	str	r3, [r0, #4]
   22d10:	ldr	r3, [sp, #64]	; 0x40
   22d14:	str	r3, [r0, #8]
   22d18:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22d1c:	add	r1, sp, #2272	; 0x8e0
   22d20:	ldr	r0, [sp, #44]	; 0x2c
   22d24:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   22d28:	ldr	r3, [sp, #64]	; 0x40
   22d2c:	str	r3, [r0, #8]
   22d30:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22d34:	add	r1, sp, #2272	; 0x8e0
   22d38:	ldr	r0, [sp, #44]	; 0x2c
   22d3c:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   22d40:	mov	r3, #1024	; 0x400
   22d44:	add	r2, sp, #1152	; 0x480
   22d48:	mov	r1, r3
   22d4c:	add	r0, r0, #580	; 0x244
   22d50:	bl	3e60 <readstat_copy@plt>
   22d54:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22d58:	add	r1, sp, #2272	; 0x8e0
   22d5c:	ldr	r0, [sp, #44]	; 0x2c
   22d60:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   22d64:	mov	r3, #32
   22d68:	add	r2, sp, #2208	; 0x8a0
   22d6c:	mov	r1, r3
   22d70:	add	r0, r0, #2160	; 0x870
   22d74:	add	r0, r0, #8
   22d78:	bl	3e60 <readstat_copy@plt>
   22d7c:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22d80:	ldr	r3, [sp, #100]	; 0x64
   22d84:	str	r3, [sp, #24]
   22d88:	add	r3, sp, #1152	; 0x480
   22d8c:	str	r3, [sp, #20]
   22d90:	add	r3, sp, #2176	; 0x880
   22d94:	str	r3, [sp, #16]
   22d98:	strd	sl, [sp, #8]
   22d9c:	ldr	r3, [sp, #104]	; 0x68
   22da0:	str	r3, [sp]
   22da4:	ldr	r3, [sp, #108]	; 0x6c
   22da8:	str	r3, [sp, #4]
   22dac:	vmov.f64	d0, d8
   22db0:	ldr	r2, [sp, #48]	; 0x30
   22db4:	add	r1, sp, #2208	; 0x8a0
   22db8:	ldr	r0, [sp, #112]	; 0x70
   22dbc:	bl	4040 <submit_value_label@plt>
   22dc0:	cmp	r0, #0
   22dc4:	beq	22a78 <readstat_parse_sas_commands+0x2f8>
   22dc8:	mov	r4, r0
   22dcc:	ldr	r8, [sp, #112]	; 0x70
   22dd0:	b	22ffc <readstat_parse_sas_commands+0x87c>
   22dd4:	str	r7, [sp, #36]	; 0x24
   22dd8:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22ddc:	ldr	r3, [sp, #36]	; 0x24
   22de0:	sub	r3, r7, r3
   22de4:	str	r3, [sp, #40]	; 0x28
   22de8:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22dec:	str	r7, [sp, #36]	; 0x24
   22df0:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22df4:	ldr	r3, [sp, #36]	; 0x24
   22df8:	sub	r3, r7, r3
   22dfc:	str	r3, [sp, #40]	; 0x28
   22e00:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22e04:	ldr	r3, [sp, #96]	; 0x60
   22e08:	add	r3, r3, #1
   22e0c:	str	r3, [sp, #96]	; 0x60
   22e10:	str	r7, [sp, #116]	; 0x74
   22e14:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22e18:	str	r7, [sp, #36]	; 0x24
   22e1c:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22e20:	ldr	r3, [sp, #36]	; 0x24
   22e24:	sub	r3, r7, r3
   22e28:	str	r3, [sp, #40]	; 0x28
   22e2c:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22e30:	rsbs	r0, sl, #0
   22e34:	rsc	r1, fp, #0
   22e38:	bl	25a5c <__aeabi_ul2d>
   22e3c:	vmov	d8, r0, r1
   22e40:	mov	r3, #0
   22e44:	str	r3, [sp, #48]	; 0x30
   22e48:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22e4c:	mov	r0, sl
   22e50:	mov	r1, fp
   22e54:	bl	25a5c <__aeabi_ul2d>
   22e58:	vmov	d8, r0, r1
   22e5c:	mov	r3, #0
   22e60:	str	r3, [sp, #48]	; 0x30
   22e64:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22e68:	str	sl, [sp, #104]	; 0x68
   22e6c:	str	fp, [sp, #108]	; 0x6c
   22e70:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22e74:	mov	r3, #2
   22e78:	str	r3, [sp, #48]	; 0x30
   22e7c:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22e80:	mov	r3, #1
   22e84:	str	r3, [sp, #48]	; 0x30
   22e88:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22e8c:	mov	r3, #1
   22e90:	str	r3, [sp, #48]	; 0x30
   22e94:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22e98:	mov	r3, #3
   22e9c:	str	r3, [sp, #48]	; 0x30
   22ea0:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22ea4:	str	sl, [sp, #64]	; 0x40
   22ea8:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22eac:	sub	r3, sl, #1
   22eb0:	str	r3, [sp, #72]	; 0x48
   22eb4:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22eb8:	mov	r3, #0
   22ebc:	str	r3, [sp, #72]	; 0x48
   22ec0:	b	22a78 <readstat_parse_sas_commands+0x2f8>
   22ec4:	ldr	r8, [sp, #112]	; 0x70
   22ec8:	ldr	r3, [pc, #-564]	; 22c9c <readstat_parse_sas_commands+0x51c>
   22ecc:	add	r3, pc, r3
   22ed0:	add	r2, r3, r6
   22ed4:	ldrb	r2, [r2, #-1392]	; 0xfffffa90
   22ed8:	add	r3, r3, r2
   22edc:	ldrb	r3, [r3, #-1592]	; 0xfffff9c8
   22ee0:	sub	r3, r3, #1
   22ee4:	cmn	r3, #1
   22ee8:	bne	22ee0 <readstat_parse_sas_commands+0x760>
   22eec:	movw	r3, #1093	; 0x445
   22ef0:	cmp	r6, r3
   22ef4:	ble	22f54 <readstat_parse_sas_commands+0x7d4>
   22ef8:	ldr	r2, [sp, #100]	; 0x64
   22efc:	ldr	r1, [sp, #44]	; 0x2c
   22f00:	mov	r0, r8
   22f04:	bl	3f2c <submit_columns@plt>
   22f08:	mov	r4, r0
   22f0c:	ldr	r3, [r8, #32]
   22f10:	ldr	r2, [r3, #4]
   22f14:	ldr	r0, [r3, #20]
   22f18:	blx	r2
   22f1c:	ldr	r0, [sp, #120]	; 0x78
   22f20:	bl	3eb4 <free@plt>
   22f24:	cmp	r4, #0
   22f28:	bne	23014 <readstat_parse_sas_commands+0x894>
   22f2c:	ldr	r0, [sp, #44]	; 0x2c
   22f30:	add	sp, sp, #2304	; 0x900
   22f34:	add	sp, sp, #4
   22f38:	vpop	{d8}
   22f3c:	ldrd	r4, [sp]
   22f40:	ldrd	r6, [sp, #8]
   22f44:	ldrd	r8, [sp, #16]
   22f48:	ldrd	sl, [sp, #24]
   22f4c:	add	sp, sp, #32
   22f50:	pop	{pc}		; (ldr pc, [sp], #4)
   22f54:	mov	r2, #66	; 0x42
   22f58:	ldr	r1, [pc, #-704]	; 22ca0 <readstat_parse_sas_commands+0x520>
   22f5c:	add	r1, pc, r1
   22f60:	add	r0, sp, #128	; 0x80
   22f64:	bl	3f14 <memcpy@plt>
   22f68:	b	22fdc <readstat_parse_sas_commands+0x85c>
   22f6c:	ldr	r3, [sp, #124]	; 0x7c
   22f70:	str	r3, [sp, #44]	; 0x2c
   22f74:	b	22f2c <readstat_parse_sas_commands+0x7ac>
   22f78:	mov	r3, #15
   22f7c:	mov	r4, r3
   22f80:	mov	r3, #0
   22f84:	str	r3, [sp, #120]	; 0x78
   22f88:	str	r3, [sp, #44]	; 0x2c
   22f8c:	b	22ffc <readstat_parse_sas_commands+0x87c>
   22f90:	mov	r3, #3
   22f94:	mov	r4, r3
   22f98:	b	22ffc <readstat_parse_sas_commands+0x87c>
   22f9c:	ldr	r8, [sp, #112]	; 0x70
   22fa0:	cmp	r7, r9
   22fa4:	beq	22f54 <readstat_parse_sas_commands+0x7d4>
   22fa8:	ldrb	r3, [r7]
   22fac:	str	r3, [sp, #4]
   22fb0:	ldr	r3, [sp, #116]	; 0x74
   22fb4:	sub	r3, r7, r3
   22fb8:	add	r3, r3, #1
   22fbc:	str	r3, [sp]
   22fc0:	ldr	r3, [sp, #96]	; 0x60
   22fc4:	add	r3, r3, #1
   22fc8:	ldr	r2, [pc, #-812]	; 22ca4 <readstat_parse_sas_commands+0x524>
   22fcc:	add	r2, pc, r2
   22fd0:	mov	r1, #1024	; 0x400
   22fd4:	add	r0, sp, #128	; 0x80
   22fd8:	bl	4280 <snprintf@plt>
   22fdc:	ldr	r3, [r8, #24]
   22fe0:	cmp	r3, #0
   22fe4:	beq	22ff4 <readstat_parse_sas_commands+0x874>
   22fe8:	ldr	r1, [sp, #100]	; 0x64
   22fec:	add	r0, sp, #128	; 0x80
   22ff0:	blx	r3
   22ff4:	mov	r3, #5
   22ff8:	mov	r4, r3
   22ffc:	ldr	r3, [r8, #32]
   23000:	ldr	r2, [r3, #4]
   23004:	ldr	r0, [r3, #20]
   23008:	blx	r2
   2300c:	ldr	r0, [sp, #120]	; 0x78
   23010:	bl	3eb4 <free@plt>
   23014:	ldr	r3, [sp, #124]	; 0x7c
   23018:	cmp	r3, #0
   2301c:	movne	r2, r4
   23020:	strne	r2, [r3]
   23024:	ldr	r0, [sp, #44]	; 0x2c
   23028:	bl	3fb0 <readstat_schema_free@plt>
   2302c:	mov	r3, #0
   23030:	str	r3, [sp, #44]	; 0x2c
   23034:	b	22f2c <readstat_parse_sas_commands+0x7ac>
   23038:	movw	r6, #1094	; 0x446
   2303c:	b	22ec8 <readstat_parse_sas_commands+0x748>

00023040 <readstat_parse_spss_commands>:
   23040:	strd	r4, [sp, #-36]!	; 0xffffffdc
   23044:	strd	r6, [sp, #8]
   23048:	strd	r8, [sp, #16]
   2304c:	strd	sl, [sp, #24]
   23050:	str	lr, [sp, #32]
   23054:	vpush	{d8}
   23058:	sub	sp, sp, #2288	; 0x8f0
   2305c:	sub	sp, sp, #12
   23060:	mov	ip, r0
   23064:	str	r0, [sp, #80]	; 0x50
   23068:	mov	r0, r1
   2306c:	str	r2, [sp, #116]	; 0x74
   23070:	str	r3, [sp, #148]	; 0x94
   23074:	ldr	r3, [ip, #32]
   23078:	ldr	r2, [r3]
   2307c:	ldr	r1, [r3, #20]
   23080:	blx	r2
   23084:	cmn	r0, #1
   23088:	beq	231b4 <readstat_parse_spss_commands+0x174>
   2308c:	ldr	r7, [sp, #80]	; 0x50
   23090:	ldr	r3, [r7, #32]
   23094:	ldr	r4, [r3, #8]
   23098:	ldr	r2, [r3, #20]
   2309c:	mov	r1, #2
   230a0:	mov	r0, #0
   230a4:	blx	r4
   230a8:	mov	r4, r0
   230ac:	cmn	r0, #1
   230b0:	beq	2383c <readstat_parse_spss_commands+0x7fc>
   230b4:	ldr	r3, [r7, #32]
   230b8:	ldr	r5, [r3, #8]
   230bc:	ldr	r2, [r3, #20]
   230c0:	mov	r1, #0
   230c4:	mov	r0, r1
   230c8:	blx	r5
   230cc:	mov	r0, r4
   230d0:	bl	410c <malloc@plt>
   230d4:	mov	r6, r0
   230d8:	str	r0, [sp, #140]	; 0x8c
   230dc:	ldr	r3, [r7, #32]
   230e0:	ldr	r5, [r3, #12]
   230e4:	ldr	r2, [r3, #20]
   230e8:	mov	r1, r4
   230ec:	blx	r5
   230f0:	add	r4, r6, r4
   230f4:	str	r4, [sp, #68]	; 0x44
   230f8:	mov	r1, #280	; 0x118
   230fc:	mov	r0, #1
   23100:	bl	3d4c <calloc@plt>
   23104:	subs	r3, r0, #0
   23108:	mov	r2, r3
   2310c:	str	r3, [sp, #40]	; 0x28
   23110:	beq	23850 <readstat_parse_spss_commands+0x810>
   23114:	mov	r3, #1
   23118:	str	r3, [r2, #256]	; 0x100
   2311c:	cmp	r6, r4
   23120:	beq	23960 <readstat_parse_spss_commands+0x920>
   23124:	str	r6, [sp, #144]	; 0x90
   23128:	mov	r7, #0
   2312c:	str	r7, [sp, #64]	; 0x40
   23130:	mov	r3, #5
   23134:	str	r3, [sp, #56]	; 0x38
   23138:	mov	sl, r7
   2313c:	str	r7, [sp, #88]	; 0x58
   23140:	str	r7, [sp, #112]	; 0x70
   23144:	str	r7, [sp, #84]	; 0x54
   23148:	vldr	d8, [pc, #1000]	; 23538 <readstat_parse_spss_commands+0x4f8>
   2314c:	mov	r2, #0
   23150:	mov	r3, #0
   23154:	strd	r2, [sp, #32]
   23158:	str	r2, [sp, #128]	; 0x80
   2315c:	str	r3, [sp, #132]	; 0x84
   23160:	str	r7, [sp, #124]	; 0x7c
   23164:	mov	r9, #628	; 0x274
   23168:	str	r7, [sp, #60]	; 0x3c
   2316c:	str	r7, [sp, #44]	; 0x2c
   23170:	ldr	r3, [pc, #968]	; 23540 <readstat_parse_spss_commands+0x500>
   23174:	add	r3, pc, r3
   23178:	str	r3, [sp, #72]	; 0x48
   2317c:	add	r3, r3, #3024	; 0xbd0
   23180:	add	r3, r3, #12
   23184:	str	r3, [sp, #76]	; 0x4c
   23188:	ldr	r8, [pc, #948]	; 23544 <readstat_parse_spss_commands+0x504>
   2318c:	add	r8, pc, r8
   23190:	ldr	r3, [pc, #944]	; 23548 <readstat_parse_spss_commands+0x508>
   23194:	add	r3, pc, r3
   23198:	add	r3, r3, #1920	; 0x780
   2319c:	add	r3, r3, #12
   231a0:	str	r3, [sp, #120]	; 0x78
   231a4:	mov	r3, r8
   231a8:	mov	r8, r6
   231ac:	mov	fp, r3
   231b0:	b	232c0 <readstat_parse_spss_commands+0x280>
   231b4:	ldr	r2, [sp, #148]	; 0x94
   231b8:	cmp	r2, #0
   231bc:	beq	23830 <readstat_parse_spss_commands+0x7f0>
   231c0:	mov	r3, #1
   231c4:	str	r3, [r2]
   231c8:	mov	r3, #0
   231cc:	str	r3, [sp, #40]	; 0x28
   231d0:	b	23938 <readstat_parse_spss_commands+0x8f8>
   231d4:	sub	r1, r5, #1
   231d8:	adds	r1, lr, r1
   231dc:	bcs	23228 <readstat_parse_spss_commands+0x1e8>
   231e0:	ldrb	ip, [r8]
   231e4:	mov	r3, lr
   231e8:	b	231f4 <readstat_parse_spss_commands+0x1b4>
   231ec:	cmp	r3, r1
   231f0:	bhi	23228 <readstat_parse_spss_commands+0x1e8>
   231f4:	sub	r2, r1, r3
   231f8:	add	r0, r3, r2, asr #1
   231fc:	ldrb	r2, [r3, r2, asr #1]
   23200:	cmp	ip, r2
   23204:	subcc	r1, r0, #1
   23208:	bcc	231ec <readstat_parse_spss_commands+0x1ac>
   2320c:	cmp	ip, r2
   23210:	bls	2321c <readstat_parse_spss_commands+0x1dc>
   23214:	add	r3, r0, #1
   23218:	b	231ec <readstat_parse_spss_commands+0x1ac>
   2321c:	sub	r0, r0, lr
   23220:	add	r4, r4, r0
   23224:	b	23280 <readstat_parse_spss_commands+0x240>
   23228:	add	lr, lr, r5
   2322c:	add	r4, r4, r5
   23230:	b	232f0 <readstat_parse_spss_commands+0x2b0>
   23234:	cmp	r1, r2
   23238:	bcc	2327c <readstat_parse_spss_commands+0x23c>
   2323c:	sub	r3, r1, r2
   23240:	asr	r3, r3, #1
   23244:	bic	r3, r3, #1
   23248:	add	r0, r2, r3
   2324c:	ldrb	r3, [r2, r3]
   23250:	cmp	r3, ip
   23254:	subhi	r1, r0, #2
   23258:	bhi	23234 <readstat_parse_spss_commands+0x1f4>
   2325c:	ldrb	r3, [r0, #1]
   23260:	cmp	r3, ip
   23264:	bcs	23270 <readstat_parse_spss_commands+0x230>
   23268:	add	r2, r0, #2
   2326c:	b	23234 <readstat_parse_spss_commands+0x1f4>
   23270:	sub	r0, r0, lr
   23274:	add	r4, r4, r0, asr #1
   23278:	b	23280 <readstat_parse_spss_commands+0x240>
   2327c:	add	r4, r4, r5
   23280:	lsl	r3, r4, #1
   23284:	ldr	r2, [pc, #704]	; 2354c <readstat_parse_spss_commands+0x50c>
   23288:	add	r2, pc, r2
   2328c:	ldrsh	r9, [r2, r3]
   23290:	ldr	r3, [pc, #696]	; 23550 <readstat_parse_spss_commands+0x510>
   23294:	add	r3, pc, r3
   23298:	add	r4, r3, r4
   2329c:	ldrb	r3, [r4, #-1356]	; 0xfffffab4
   232a0:	cmp	r3, #0
   232a4:	bne	23324 <readstat_parse_spss_commands+0x2e4>
   232a8:	cmp	r9, #0
   232ac:	beq	23858 <readstat_parse_spss_commands+0x818>
   232b0:	add	r8, r8, #1
   232b4:	ldr	r3, [sp, #68]	; 0x44
   232b8:	cmp	r3, r8
   232bc:	beq	2397c <readstat_parse_spss_commands+0x93c>
   232c0:	lsl	r2, r9, #1
   232c4:	ldr	r3, [sp, #76]	; 0x4c
   232c8:	ldrsh	lr, [r3, r2]
   232cc:	ldr	r3, [sp, #72]	; 0x48
   232d0:	add	lr, r3, lr
   232d4:	sub	r3, fp, #3872	; 0xf20
   232d8:	sub	r3, r3, #12
   232dc:	ldrsh	r4, [r3, r2]
   232e0:	add	r3, fp, r9
   232e4:	ldrb	r5, [r3, #-2620]	; 0xfffff5c4
   232e8:	cmp	r5, #0
   232ec:	bne	231d4 <readstat_parse_spss_commands+0x194>
   232f0:	ldr	r3, [pc, #604]	; 23554 <readstat_parse_spss_commands+0x514>
   232f4:	add	r3, pc, r3
   232f8:	add	r9, r3, r9
   232fc:	ldrb	r5, [r9, #-1988]	; 0xfffff83c
   23300:	cmp	r5, #0
   23304:	ble	23280 <readstat_parse_spss_commands+0x240>
   23308:	add	r1, lr, r5, lsl #1
   2330c:	sub	r1, r1, #2
   23310:	cmp	lr, r1
   23314:	bhi	2327c <readstat_parse_spss_commands+0x23c>
   23318:	ldrb	ip, [r8]
   2331c:	mov	r2, lr
   23320:	b	2323c <readstat_parse_spss_commands+0x1fc>
   23324:	ldr	r2, [sp, #120]	; 0x78
   23328:	add	r5, r2, r3
   2332c:	add	r4, r5, #1
   23330:	ldrb	r3, [r2, r3]
   23334:	add	r3, r3, #1
   23338:	add	r5, r5, r3
   2333c:	ldr	r3, [pc, #532]	; 23558 <readstat_parse_spss_commands+0x518>
   23340:	add	r3, pc, r3
   23344:	str	r3, [sp, #92]	; 0x5c
   23348:	ldr	r3, [pc, #524]	; 2355c <readstat_parse_spss_commands+0x51c>
   2334c:	add	r3, pc, r3
   23350:	str	r3, [sp, #96]	; 0x60
   23354:	ldr	r3, [pc, #516]	; 23560 <readstat_parse_spss_commands+0x520>
   23358:	add	r3, pc, r3
   2335c:	str	r3, [sp, #100]	; 0x64
   23360:	cmp	r4, r5
   23364:	beq	232a8 <readstat_parse_spss_commands+0x268>
   23368:	ldrb	r3, [r4], #1
   2336c:	cmp	r3, #35	; 0x23
   23370:	addls	pc, pc, r3, lsl #2
   23374:	b	23360 <readstat_parse_spss_commands+0x320>
   23378:	b	23408 <readstat_parse_spss_commands+0x3c8>
   2337c:	b	23418 <readstat_parse_spss_commands+0x3d8>
   23380:	b	23468 <readstat_parse_spss_commands+0x428>
   23384:	b	23480 <readstat_parse_spss_commands+0x440>
   23388:	b	23494 <readstat_parse_spss_commands+0x454>
   2338c:	b	234b0 <readstat_parse_spss_commands+0x470>
   23390:	b	234cc <readstat_parse_spss_commands+0x48c>
   23394:	b	234e8 <readstat_parse_spss_commands+0x4a8>
   23398:	b	23504 <readstat_parse_spss_commands+0x4c4>
   2339c:	b	23574 <readstat_parse_spss_commands+0x534>
   233a0:	b	235a0 <readstat_parse_spss_commands+0x560>
   233a4:	b	235a8 <readstat_parse_spss_commands+0x568>
   233a8:	b	235b4 <readstat_parse_spss_commands+0x574>
   233ac:	b	23604 <readstat_parse_spss_commands+0x5c4>
   233b0:	b	23678 <readstat_parse_spss_commands+0x638>
   233b4:	b	236ec <readstat_parse_spss_commands+0x6ac>
   233b8:	b	236f4 <readstat_parse_spss_commands+0x6b4>
   233bc:	b	23704 <readstat_parse_spss_commands+0x6c4>
   233c0:	b	2370c <readstat_parse_spss_commands+0x6cc>
   233c4:	b	2371c <readstat_parse_spss_commands+0x6dc>
   233c8:	b	23730 <readstat_parse_spss_commands+0x6f0>
   233cc:	b	23738 <readstat_parse_spss_commands+0x6f8>
   233d0:	b	23748 <readstat_parse_spss_commands+0x708>
   233d4:	b	23754 <readstat_parse_spss_commands+0x714>
   233d8:	b	23760 <readstat_parse_spss_commands+0x720>
   233dc:	b	2376c <readstat_parse_spss_commands+0x72c>
   233e0:	b	23778 <readstat_parse_spss_commands+0x738>
   233e4:	b	23784 <readstat_parse_spss_commands+0x744>
   233e8:	b	23794 <readstat_parse_spss_commands+0x754>
   233ec:	b	237a0 <readstat_parse_spss_commands+0x760>
   233f0:	b	237ac <readstat_parse_spss_commands+0x76c>
   233f4:	b	237b8 <readstat_parse_spss_commands+0x778>
   233f8:	b	237d8 <readstat_parse_spss_commands+0x798>
   233fc:	b	237f0 <readstat_parse_spss_commands+0x7b0>
   23400:	b	23800 <readstat_parse_spss_commands+0x7c0>
   23404:	b	2380c <readstat_parse_spss_commands+0x7cc>
   23408:	mov	r2, #0
   2340c:	mov	r3, #0
   23410:	strd	r2, [sp, #32]
   23414:	b	23360 <readstat_parse_spss_commands+0x320>
   23418:	ldr	r3, [sp, #36]	; 0x24
   2341c:	lsl	r1, r3, #2
   23420:	ldr	r3, [sp, #32]
   23424:	lsl	r3, r3, #2
   23428:	ldr	r2, [sp, #32]
   2342c:	orr	r2, r1, r2, lsr #30
   23430:	ldrd	r0, [sp, #32]
   23434:	adds	r3, r3, r0
   23438:	adc	r2, r2, r1
   2343c:	adds	r3, r3, r3
   23440:	str	r3, [sp, #104]	; 0x68
   23444:	adc	r3, r2, r2
   23448:	str	r3, [sp, #108]	; 0x6c
   2344c:	ldrb	r3, [r8]
   23450:	sub	r3, r3, #48	; 0x30
   23454:	ldrd	r0, [sp, #104]	; 0x68
   23458:	adds	r0, r0, r3
   2345c:	adc	r1, r1, r3, asr #31
   23460:	strd	r0, [sp, #32]
   23464:	b	23360 <readstat_parse_spss_commands+0x320>
   23468:	ldr	r3, [sp, #32]
   2346c:	sub	r3, r3, #1
   23470:	str	r3, [sp, #84]	; 0x54
   23474:	mov	r3, #1
   23478:	str	r3, [sp, #88]	; 0x58
   2347c:	b	23360 <readstat_parse_spss_commands+0x320>
   23480:	ldr	r3, [sp, #32]
   23484:	ldr	r2, [sp, #84]	; 0x54
   23488:	sub	r3, r3, r2
   2348c:	str	r3, [sp, #88]	; 0x58
   23490:	b	23360 <readstat_parse_spss_commands+0x320>
   23494:	ldr	r3, [sp, #60]	; 0x3c
   23498:	ldr	r2, [sp, #44]	; 0x2c
   2349c:	mov	r1, #1024	; 0x400
   234a0:	add	r0, sp, #1168	; 0x490
   234a4:	add	r0, r0, #8
   234a8:	bl	4028 <readstat_copy_quoted@plt>
   234ac:	b	23360 <readstat_parse_spss_commands+0x320>
   234b0:	ldr	r3, [sp, #60]	; 0x3c
   234b4:	ldr	r2, [sp, #44]	; 0x2c
   234b8:	mov	r1, #32
   234bc:	add	r0, sp, #2192	; 0x890
   234c0:	add	r0, r0, #8
   234c4:	bl	4028 <readstat_copy_quoted@plt>
   234c8:	b	23360 <readstat_parse_spss_commands+0x320>
   234cc:	ldr	r3, [sp, #60]	; 0x3c
   234d0:	ldr	r2, [sp, #44]	; 0x2c
   234d4:	mov	r1, #32
   234d8:	add	r0, sp, #2256	; 0x8d0
   234dc:	add	r0, r0, #8
   234e0:	bl	3e60 <readstat_copy@plt>
   234e4:	b	23360 <readstat_parse_spss_commands+0x320>
   234e8:	ldr	r3, [sp, #60]	; 0x3c
   234ec:	ldr	r2, [sp, #44]	; 0x2c
   234f0:	mov	r1, #32
   234f4:	add	r0, sp, #2224	; 0x8b0
   234f8:	add	r0, r0, #8
   234fc:	bl	3e60 <readstat_copy@plt>
   23500:	b	23360 <readstat_parse_spss_commands+0x320>
   23504:	add	r1, sp, #2256	; 0x8d0
   23508:	add	r1, r1, #8
   2350c:	ldr	r0, [sp, #40]	; 0x28
   23510:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   23514:	ldr	r3, [sp, #56]	; 0x38
   23518:	str	r3, [r0, #16]
   2351c:	ldr	r3, [sp, #112]	; 0x70
   23520:	str	r3, [r0]
   23524:	ldr	r3, [sp, #84]	; 0x54
   23528:	str	r3, [r0, #4]
   2352c:	ldr	r3, [sp, #88]	; 0x58
   23530:	str	r3, [r0, #8]
   23534:	b	23360 <readstat_parse_spss_commands+0x320>
   23538:	.word	0x00000000
   2353c:	.word	0x7ff80000
   23540:	.word	0x0000d0ac
   23544:	.word	0x0000f08c
   23548:	.word	0x0000f084
   2354c:	.word	0x0000fa38
   23550:	.word	0x0000ef84
   23554:	.word	0x0000ef24
   23558:	.word	0x00003a4c
   2355c:	.word	0x00003a40
   23560:	.word	0x00011314
   23564:	.word	0x0001109c
   23568:	.word	0x00010e64
   2356c:	.word	0x00010e3c
   23570:	.word	0x0000e898
   23574:	add	r1, sp, #2256	; 0x8d0
   23578:	add	r1, r1, #8
   2357c:	ldr	r0, [sp, #40]	; 0x28
   23580:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   23584:	mov	r3, #1024	; 0x400
   23588:	add	r2, sp, #1168	; 0x490
   2358c:	add	r2, r2, #8
   23590:	mov	r1, r3
   23594:	add	r0, r0, #580	; 0x244
   23598:	bl	3e60 <readstat_copy@plt>
   2359c:	b	23360 <readstat_parse_spss_commands+0x320>
   235a0:	mov	sl, #0
   235a4:	b	23360 <readstat_parse_spss_commands+0x320>
   235a8:	cmp	sl, #1024	; 0x400
   235ac:	addcc	sl, sl, #1
   235b0:	b	23360 <readstat_parse_spss_commands+0x320>
   235b4:	ldr	r1, [sp, #100]	; 0x64
   235b8:	add	r0, sp, #2224	; 0x8b0
   235bc:	add	r0, r0, #8
   235c0:	bl	401c <strcasecmp@plt>
   235c4:	cmp	r0, #0
   235c8:	bne	235d8 <readstat_parse_spss_commands+0x598>
   235cc:	ldr	r3, [sp, #40]	; 0x28
   235d0:	ldr	r2, [sp, #32]
   235d4:	str	r2, [r3, #264]	; 0x108
   235d8:	ldr	r1, [pc, #-124]	; 23564 <readstat_parse_spss_commands+0x524>
   235dc:	add	r1, pc, r1
   235e0:	add	r0, sp, #2224	; 0x8b0
   235e4:	add	r0, r0, #8
   235e8:	bl	401c <strcasecmp@plt>
   235ec:	cmp	r0, #0
   235f0:	bne	23360 <readstat_parse_spss_commands+0x320>
   235f4:	ldrb	r3, [sp, #1176]	; 0x498
   235f8:	ldr	r2, [sp, #40]	; 0x28
   235fc:	strb	r3, [r2, #272]	; 0x110
   23600:	b	23360 <readstat_parse_spss_commands+0x320>
   23604:	add	r3, r7, #1
   23608:	str	r3, [sp, #136]	; 0x88
   2360c:	mov	r3, r7
   23610:	ldr	r2, [sp, #96]	; 0x60
   23614:	mov	r1, #256	; 0x100
   23618:	add	r0, sp, #152	; 0x98
   2361c:	bl	4280 <snprintf@plt>
   23620:	cmp	sl, #0
   23624:	ble	23670 <readstat_parse_spss_commands+0x630>
   23628:	mov	r6, #0
   2362c:	add	r3, sp, #2256	; 0x8d0
   23630:	add	r3, r3, #8
   23634:	str	r3, [sp, #48]	; 0x30
   23638:	add	r3, sp, #152	; 0x98
   2363c:	str	r3, [sp, #52]	; 0x34
   23640:	movw	r7, #2168	; 0x878
   23644:	ldr	r1, [sp, #48]	; 0x30
   23648:	ldr	r0, [sp, #40]	; 0x28
   2364c:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   23650:	mov	r3, #256	; 0x100
   23654:	ldr	r2, [sp, #52]	; 0x34
   23658:	mov	r1, #32
   2365c:	add	r0, r0, r7
   23660:	bl	3e60 <readstat_copy@plt>
   23664:	add	r6, r6, #1
   23668:	cmp	sl, r6
   2366c:	bne	23644 <readstat_parse_spss_commands+0x604>
   23670:	ldr	r7, [sp, #136]	; 0x88
   23674:	b	23360 <readstat_parse_spss_commands+0x320>
   23678:	mov	r3, r7
   2367c:	ldr	r2, [sp, #92]	; 0x5c
   23680:	mov	r1, #256	; 0x100
   23684:	add	r6, sp, #152	; 0x98
   23688:	mov	r0, r6
   2368c:	bl	4280 <snprintf@plt>
   23690:	ldr	r3, [sp, #116]	; 0x74
   23694:	str	r3, [sp, #24]
   23698:	add	r3, sp, #1168	; 0x490
   2369c:	add	r3, r3, #8
   236a0:	str	r3, [sp, #20]
   236a4:	add	r3, sp, #2192	; 0x890
   236a8:	add	r3, r3, #8
   236ac:	str	r3, [sp, #16]
   236b0:	ldrd	r2, [sp, #32]
   236b4:	strd	r2, [sp, #8]
   236b8:	ldr	r3, [sp, #128]	; 0x80
   236bc:	str	r3, [sp]
   236c0:	ldr	r3, [sp, #132]	; 0x84
   236c4:	str	r3, [sp, #4]
   236c8:	vmov.f64	d0, d8
   236cc:	ldr	r2, [sp, #64]	; 0x40
   236d0:	mov	r1, r6
   236d4:	ldr	r0, [sp, #80]	; 0x50
   236d8:	bl	4040 <submit_value_label@plt>
   236dc:	cmp	r0, #0
   236e0:	beq	23360 <readstat_parse_spss_commands+0x320>
   236e4:	mov	r6, r0
   236e8:	b	238bc <readstat_parse_spss_commands+0x87c>
   236ec:	str	r8, [sp, #44]	; 0x2c
   236f0:	b	23360 <readstat_parse_spss_commands+0x320>
   236f4:	ldr	r3, [sp, #44]	; 0x2c
   236f8:	sub	r3, r8, r3
   236fc:	str	r3, [sp, #60]	; 0x3c
   23700:	b	23360 <readstat_parse_spss_commands+0x320>
   23704:	str	r8, [sp, #44]	; 0x2c
   23708:	b	23360 <readstat_parse_spss_commands+0x320>
   2370c:	ldr	r3, [sp, #44]	; 0x2c
   23710:	sub	r3, r8, r3
   23714:	str	r3, [sp, #60]	; 0x3c
   23718:	b	23360 <readstat_parse_spss_commands+0x320>
   2371c:	ldr	r3, [sp, #124]	; 0x7c
   23720:	add	r3, r3, #1
   23724:	str	r3, [sp, #124]	; 0x7c
   23728:	str	r8, [sp, #144]	; 0x90
   2372c:	b	23360 <readstat_parse_spss_commands+0x320>
   23730:	str	r8, [sp, #44]	; 0x2c
   23734:	b	23360 <readstat_parse_spss_commands+0x320>
   23738:	ldr	r3, [sp, #44]	; 0x2c
   2373c:	sub	r3, r8, r3
   23740:	str	r3, [sp, #60]	; 0x3c
   23744:	b	23360 <readstat_parse_spss_commands+0x320>
   23748:	mov	r3, #0
   2374c:	str	r3, [sp, #56]	; 0x38
   23750:	b	23360 <readstat_parse_spss_commands+0x320>
   23754:	mov	r3, #0
   23758:	str	r3, [sp, #56]	; 0x38
   2375c:	b	23360 <readstat_parse_spss_commands+0x320>
   23760:	mov	r3, #5
   23764:	str	r3, [sp, #56]	; 0x38
   23768:	b	23360 <readstat_parse_spss_commands+0x320>
   2376c:	mov	r3, #5
   23770:	str	r3, [sp, #56]	; 0x38
   23774:	b	23360 <readstat_parse_spss_commands+0x320>
   23778:	mov	r3, #0
   2377c:	str	r3, [sp, #56]	; 0x38
   23780:	b	23360 <readstat_parse_spss_commands+0x320>
   23784:	ldr	r3, [sp, #32]
   23788:	sub	r3, r3, #1
   2378c:	str	r3, [sp, #112]	; 0x70
   23790:	b	23360 <readstat_parse_spss_commands+0x320>
   23794:	mov	r3, #5
   23798:	str	r3, [sp, #56]	; 0x38
   2379c:	b	23360 <readstat_parse_spss_commands+0x320>
   237a0:	mov	r3, #5
   237a4:	str	r3, [sp, #56]	; 0x38
   237a8:	b	23360 <readstat_parse_spss_commands+0x320>
   237ac:	mvn	r3, #0
   237b0:	str	r3, [sp, #64]	; 0x40
   237b4:	b	23360 <readstat_parse_spss_commands+0x320>
   237b8:	ldrd	r0, [sp, #32]
   237bc:	rsbs	r0, r0, #0
   237c0:	rsc	r1, r1, #0
   237c4:	bl	25a5c <__aeabi_ul2d>
   237c8:	vmov	d8, r0, r1
   237cc:	mov	r3, #0
   237d0:	str	r3, [sp, #64]	; 0x40
   237d4:	b	23360 <readstat_parse_spss_commands+0x320>
   237d8:	ldrd	r0, [sp, #32]
   237dc:	bl	25a5c <__aeabi_ul2d>
   237e0:	vmov	d8, r0, r1
   237e4:	mov	r3, #0
   237e8:	str	r3, [sp, #64]	; 0x40
   237ec:	b	23360 <readstat_parse_spss_commands+0x320>
   237f0:	ldrd	r2, [sp, #32]
   237f4:	str	r2, [sp, #128]	; 0x80
   237f8:	str	r3, [sp, #132]	; 0x84
   237fc:	b	23360 <readstat_parse_spss_commands+0x320>
   23800:	mov	r3, #2
   23804:	str	r3, [sp, #64]	; 0x40
   23808:	b	23360 <readstat_parse_spss_commands+0x320>
   2380c:	mov	r3, #1
   23810:	str	r3, [sp, #64]	; 0x40
   23814:	b	23360 <readstat_parse_spss_commands+0x320>
   23818:	mov	r2, #67	; 0x43
   2381c:	ldr	r1, [pc, #-700]	; 23568 <readstat_parse_spss_commands+0x528>
   23820:	add	r1, pc, r1
   23824:	add	r0, sp, #152	; 0x98
   23828:	bl	3f14 <memcpy@plt>
   2382c:	b	2389c <readstat_parse_spss_commands+0x85c>
   23830:	ldr	r3, [sp, #148]	; 0x94
   23834:	str	r3, [sp, #40]	; 0x28
   23838:	b	23938 <readstat_parse_spss_commands+0x8f8>
   2383c:	mov	r6, #15
   23840:	mov	r3, #0
   23844:	str	r3, [sp, #140]	; 0x8c
   23848:	str	r3, [sp, #40]	; 0x28
   2384c:	b	238bc <readstat_parse_spss_commands+0x87c>
   23850:	mov	r6, #3
   23854:	b	238bc <readstat_parse_spss_commands+0x87c>
   23858:	mov	fp, r8
   2385c:	ldr	r3, [sp, #68]	; 0x44
   23860:	cmp	r8, r3
   23864:	beq	23818 <readstat_parse_spss_commands+0x7d8>
   23868:	ldrb	r3, [fp]
   2386c:	str	r3, [sp, #4]
   23870:	ldr	r3, [sp, #144]	; 0x90
   23874:	sub	r3, fp, r3
   23878:	add	r3, r3, #1
   2387c:	str	r3, [sp]
   23880:	ldr	r3, [sp, #124]	; 0x7c
   23884:	add	r3, r3, #1
   23888:	ldr	r2, [pc, #-804]	; 2356c <readstat_parse_spss_commands+0x52c>
   2388c:	add	r2, pc, r2
   23890:	mov	r1, #1024	; 0x400
   23894:	add	r0, sp, #152	; 0x98
   23898:	bl	4280 <snprintf@plt>
   2389c:	ldr	r3, [sp, #80]	; 0x50
   238a0:	ldr	r3, [r3, #24]
   238a4:	cmp	r3, #0
   238a8:	beq	238b8 <readstat_parse_spss_commands+0x878>
   238ac:	ldr	r1, [sp, #116]	; 0x74
   238b0:	add	r0, sp, #152	; 0x98
   238b4:	blx	r3
   238b8:	mov	r6, #5
   238bc:	ldr	r3, [sp, #80]	; 0x50
   238c0:	ldr	r3, [r3, #32]
   238c4:	ldr	r2, [r3, #4]
   238c8:	ldr	r0, [r3, #20]
   238cc:	blx	r2
   238d0:	ldr	r0, [sp, #140]	; 0x8c
   238d4:	bl	3eb4 <free@plt>
   238d8:	ldr	r3, [sp, #148]	; 0x94
   238dc:	cmp	r3, #0
   238e0:	strne	r6, [r3]
   238e4:	ldr	r0, [sp, #40]	; 0x28
   238e8:	bl	3fb0 <readstat_schema_free@plt>
   238ec:	mov	r3, #0
   238f0:	str	r3, [sp, #40]	; 0x28
   238f4:	b	23938 <readstat_parse_spss_commands+0x8f8>
   238f8:	cmp	r9, #628	; 0x274
   238fc:	blt	23818 <readstat_parse_spss_commands+0x7d8>
   23900:	ldr	r2, [sp, #116]	; 0x74
   23904:	ldr	r1, [sp, #40]	; 0x28
   23908:	ldr	r4, [sp, #80]	; 0x50
   2390c:	mov	r0, r4
   23910:	bl	3f2c <submit_columns@plt>
   23914:	mov	r6, r0
   23918:	ldr	r3, [r4, #32]
   2391c:	ldr	r2, [r3, #4]
   23920:	ldr	r0, [r3, #20]
   23924:	blx	r2
   23928:	ldr	r0, [sp, #140]	; 0x8c
   2392c:	bl	3eb4 <free@plt>
   23930:	cmp	r6, #0
   23934:	bne	238d8 <readstat_parse_spss_commands+0x898>
   23938:	ldr	r0, [sp, #40]	; 0x28
   2393c:	add	sp, sp, #2288	; 0x8f0
   23940:	add	sp, sp, #12
   23944:	vpop	{d8}
   23948:	ldrd	r4, [sp]
   2394c:	ldrd	r6, [sp, #8]
   23950:	ldrd	r8, [sp, #16]
   23954:	ldrd	sl, [sp, #24]
   23958:	add	sp, sp, #32
   2395c:	pop	{pc}		; (ldr pc, [sp], #4)
   23960:	mov	r3, #5
   23964:	str	r3, [sp, #56]	; 0x38
   23968:	mov	r3, #0
   2396c:	str	r3, [sp, #88]	; 0x58
   23970:	str	r3, [sp, #112]	; 0x70
   23974:	str	r3, [sp, #84]	; 0x54
   23978:	mov	r9, #628	; 0x274
   2397c:	ldr	r2, [pc, #-1044]	; 23570 <readstat_parse_spss_commands+0x530>
   23980:	add	r2, pc, r2
   23984:	add	r3, r2, #1920	; 0x780
   23988:	add	r3, r3, #12
   2398c:	add	r2, r2, r9
   23990:	ldrb	r2, [r2, #2096]	; 0x830
   23994:	add	r5, r3, r2
   23998:	add	r4, r5, #1
   2399c:	ldrb	r3, [r3, r2]
   239a0:	add	r3, r3, #1
   239a4:	add	r5, r5, r3
   239a8:	add	r6, sp, #2256	; 0x8d0
   239ac:	add	r6, r6, #8
   239b0:	cmp	r4, r5
   239b4:	beq	238f8 <readstat_parse_spss_commands+0x8b8>
   239b8:	ldrb	r3, [r4], #1
   239bc:	cmp	r3, #8
   239c0:	bne	239b0 <readstat_parse_spss_commands+0x970>
   239c4:	mov	r1, r6
   239c8:	ldr	r0, [sp, #40]	; 0x28
   239cc:	bl	40d0 <readstat_schema_find_or_create_entry@plt>
   239d0:	ldr	r3, [sp, #56]	; 0x38
   239d4:	str	r3, [r0, #16]
   239d8:	ldr	r3, [sp, #112]	; 0x70
   239dc:	str	r3, [r0]
   239e0:	ldr	r3, [sp, #84]	; 0x54
   239e4:	str	r3, [r0, #4]
   239e8:	ldr	r3, [sp, #88]	; 0x58
   239ec:	str	r3, [r0, #8]
   239f0:	b	239b0 <readstat_parse_spss_commands+0x970>

000239f4 <readstat_schema_free>:
   239f4:	str	r4, [sp, #-8]!
   239f8:	str	lr, [sp, #4]
   239fc:	subs	r4, r0, #0
   23a00:	beq	23a14 <readstat_schema_free+0x20>
   23a04:	ldr	r0, [r4, #276]	; 0x114
   23a08:	bl	3eb4 <free@plt>
   23a0c:	mov	r0, r4
   23a10:	bl	3eb4 <free@plt>
   23a14:	ldr	r4, [sp]
   23a18:	add	sp, sp, #4
   23a1c:	pop	{pc}		; (ldr pc, [sp], #4)

00023a20 <readstat_schema_find_or_create_entry>:
   23a20:	strd	r4, [sp, #-32]!	; 0xffffffe0
   23a24:	strd	r6, [sp, #8]
   23a28:	strd	r8, [sp, #16]
   23a2c:	str	sl, [sp, #24]
   23a30:	str	lr, [sp, #28]
   23a34:	mov	r9, r0
   23a38:	mov	r8, r1
   23a3c:	ldr	r7, [r0, #268]	; 0x10c
   23a40:	cmp	r7, #0
   23a44:	ble	23a78 <readstat_schema_find_or_create_entry+0x58>
   23a48:	ldr	r4, [r0, #276]	; 0x114
   23a4c:	mov	r5, #0
   23a50:	mov	r6, r4
   23a54:	mov	r1, r8
   23a58:	add	r0, r4, #24
   23a5c:	bl	3df4 <strcmp@plt>
   23a60:	cmp	r0, #0
   23a64:	beq	23adc <readstat_schema_find_or_create_entry+0xbc>
   23a68:	add	r5, r5, #1
   23a6c:	add	r4, r4, #2208	; 0x8a0
   23a70:	cmp	r5, r7
   23a74:	bne	23a50 <readstat_schema_find_or_create_entry+0x30>
   23a78:	mov	r4, #2208	; 0x8a0
   23a7c:	mla	r1, r7, r4, r4
   23a80:	ldr	r0, [r9, #276]	; 0x114
   23a84:	bl	3fec <realloc@plt>
   23a88:	str	r0, [r9, #276]	; 0x114
   23a8c:	ldr	r6, [r9, #268]	; 0x10c
   23a90:	mla	r6, r4, r6, r0
   23a94:	mov	r2, r4
   23a98:	mov	r1, #0
   23a9c:	mov	r0, r6
   23aa0:	bl	42a4 <memset@plt>
   23aa4:	mov	r0, r8
   23aa8:	bl	41fc <strlen@plt>
   23aac:	mov	r3, r0
   23ab0:	mov	r2, r8
   23ab4:	mov	r1, #300	; 0x12c
   23ab8:	add	r0, r6, #24
   23abc:	bl	3e60 <readstat_copy@plt>
   23ac0:	mov	r3, #46	; 0x2e
   23ac4:	strb	r3, [r6, #2200]	; 0x898
   23ac8:	ldr	r3, [r9, #268]	; 0x10c
   23acc:	add	r2, r3, #1
   23ad0:	str	r2, [r9, #268]	; 0x10c
   23ad4:	str	r3, [r6, #20]
   23ad8:	b	23ae4 <readstat_schema_find_or_create_entry+0xc4>
   23adc:	cmp	r4, #0
   23ae0:	beq	23a78 <readstat_schema_find_or_create_entry+0x58>
   23ae4:	mov	r0, r6
   23ae8:	ldrd	r4, [sp]
   23aec:	ldrd	r6, [sp, #8]
   23af0:	ldrd	r8, [sp, #16]
   23af4:	ldr	sl, [sp, #24]
   23af8:	add	sp, sp, #28
   23afc:	pop	{pc}		; (ldr pc, [sp], #4)

00023b00 <readstat_parse_stata_dictionary>:
   23b00:	strd	r4, [sp, #-36]!	; 0xffffffdc
   23b04:	strd	r6, [sp, #8]
   23b08:	strd	r8, [sp, #16]
   23b0c:	strd	sl, [sp, #24]
   23b10:	str	lr, [sp, #32]
   23b14:	sub	sp, sp, #3312	; 0xcf0
   23b18:	sub	sp, sp, #4
   23b1c:	mov	sl, r0
   23b20:	mov	r0, r1
   23b24:	str	r2, [sp, #64]	; 0x40
   23b28:	str	r3, [sp, #72]	; 0x48
   23b2c:	ldr	r3, [sl, #32]
   23b30:	ldr	r2, [r3]
   23b34:	ldr	r1, [r3, #20]
   23b38:	blx	r2
   23b3c:	cmn	r0, #1
   23b40:	beq	23c3c <readstat_parse_stata_dictionary+0x13c>
   23b44:	ldr	r3, [sl, #32]
   23b48:	ldr	r4, [r3, #8]
   23b4c:	ldr	r2, [r3, #20]
   23b50:	mov	r1, #2
   23b54:	mov	r0, #0
   23b58:	blx	r4
   23b5c:	mov	r4, r0
   23b60:	cmn	r0, #1
   23b64:	beq	240f8 <readstat_parse_stata_dictionary+0x5f8>
   23b68:	ldr	r3, [sl, #32]
   23b6c:	ldr	r5, [r3, #8]
   23b70:	ldr	r2, [r3, #20]
   23b74:	mov	r1, #0
   23b78:	mov	r0, r1
   23b7c:	blx	r5
   23b80:	mov	r0, r4
   23b84:	bl	410c <malloc@plt>
   23b88:	mov	r6, r0
   23b8c:	str	r0, [sp, #76]	; 0x4c
   23b90:	ldr	r3, [sl, #32]
   23b94:	ldr	r5, [r3, #12]
   23b98:	ldr	r2, [r3, #20]
   23b9c:	mov	r1, r4
   23ba0:	blx	r5
   23ba4:	add	r4, r6, r4
   23ba8:	str	r4, [sp, #24]
   23bac:	mov	r1, #280	; 0x118
   23bb0:	mov	r0, #1
   23bb4:	bl	3d4c <calloc@plt>
   23bb8:	subs	fp, r0, #0
   23bbc:	beq	24144 <readstat_parse_stata_dictionary+0x644>
   23bc0:	mov	r3, #1
   23bc4:	str	r3, [fp, #256]	; 0x100
   23bc8:	cmp	r6, r4
   23bcc:	beq	2409c <readstat_parse_stata_dictionary+0x59c>
   23bd0:	mov	r7, r6
   23bd4:	str	r6, [sp, #68]	; 0x44
   23bd8:	mov	r3, #0
   23bdc:	str	r3, [sp, #52]	; 0x34
   23be0:	str	r3, [sp, #40]	; 0x28
   23be4:	str	r3, [sp, #12]
   23be8:	mov	r9, r3
   23bec:	mov	r6, #1
   23bf0:	str	r3, [sp, #16]
   23bf4:	str	r3, [sp, #8]
   23bf8:	str	r3, [sp, #48]	; 0x30
   23bfc:	str	r3, [sp, #36]	; 0x24
   23c00:	ldr	r8, [pc, #1532]	; 24204 <readstat_parse_stata_dictionary+0x704>
   23c04:	add	r8, pc, r8
   23c08:	add	r3, r8, #1136	; 0x470
   23c0c:	add	r3, r3, #8
   23c10:	str	r3, [sp, #28]
   23c14:	ldr	r3, [pc, #1516]	; 24208 <readstat_parse_stata_dictionary+0x708>
   23c18:	add	r3, pc, r3
   23c1c:	str	r3, [sp, #32]
   23c20:	ldr	r3, [pc, #1508]	; 2420c <readstat_parse_stata_dictionary+0x70c>
   23c24:	add	r3, pc, r3
   23c28:	add	r3, r3, #3472	; 0xd90
   23c2c:	add	r3, r3, #12
   23c30:	str	r3, [sp, #56]	; 0x38
   23c34:	str	sl, [sp, #60]	; 0x3c
   23c38:	b	23d38 <readstat_parse_stata_dictionary+0x238>
   23c3c:	ldr	r2, [sp, #72]	; 0x48
   23c40:	cmp	r2, #0
   23c44:	beq	240f0 <readstat_parse_stata_dictionary+0x5f0>
   23c48:	mov	r3, #1
   23c4c:	str	r3, [r2]
   23c50:	mov	fp, #0
   23c54:	b	241e0 <readstat_parse_stata_dictionary+0x6e0>
   23c58:	sub	r1, r5, #1
   23c5c:	adds	r1, lr, r1
   23c60:	bcs	23cac <readstat_parse_stata_dictionary+0x1ac>
   23c64:	ldrb	ip, [r7]
   23c68:	mov	r3, lr
   23c6c:	b	23c78 <readstat_parse_stata_dictionary+0x178>
   23c70:	cmp	r1, r3
   23c74:	bcc	23cac <readstat_parse_stata_dictionary+0x1ac>
   23c78:	sub	r2, r1, r3
   23c7c:	add	r0, r3, r2, asr #1
   23c80:	ldrb	r2, [r3, r2, asr #1]
   23c84:	cmp	ip, r2
   23c88:	subcc	r1, r0, #1
   23c8c:	bcc	23c70 <readstat_parse_stata_dictionary+0x170>
   23c90:	cmp	ip, r2
   23c94:	bls	23ca0 <readstat_parse_stata_dictionary+0x1a0>
   23c98:	add	r3, r0, #1
   23c9c:	b	23c70 <readstat_parse_stata_dictionary+0x170>
   23ca0:	sub	r0, r0, lr
   23ca4:	add	r4, r4, r0
   23ca8:	b	23d04 <readstat_parse_stata_dictionary+0x204>
   23cac:	add	lr, lr, r5
   23cb0:	add	r4, r4, r5
   23cb4:	b	23d60 <readstat_parse_stata_dictionary+0x260>
   23cb8:	cmp	r2, r1
   23cbc:	bhi	23d00 <readstat_parse_stata_dictionary+0x200>
   23cc0:	sub	r3, r1, r2
   23cc4:	asr	r3, r3, #1
   23cc8:	bic	r3, r3, #1
   23ccc:	add	r0, r2, r3
   23cd0:	ldrb	r3, [r2, r3]
   23cd4:	cmp	r3, ip
   23cd8:	subhi	r1, r0, #2
   23cdc:	bhi	23cb8 <readstat_parse_stata_dictionary+0x1b8>
   23ce0:	ldrb	r3, [r0, #1]
   23ce4:	cmp	r3, ip
   23ce8:	bcs	23cf4 <readstat_parse_stata_dictionary+0x1f4>
   23cec:	add	r2, r0, #2
   23cf0:	b	23cb8 <readstat_parse_stata_dictionary+0x1b8>
   23cf4:	sub	r0, r0, lr
   23cf8:	add	r4, r4, r0, asr #1
   23cfc:	b	23d04 <readstat_parse_stata_dictionary+0x204>
   23d00:	add	r4, r4, r5
   23d04:	ldr	r3, [pc, #1284]	; 24210 <readstat_parse_stata_dictionary+0x710>
   23d08:	add	r3, pc, r3
   23d0c:	add	r4, r3, r4
   23d10:	ldrb	r6, [r4, #1780]	; 0x6f4
   23d14:	ldrb	r3, [r4, #2632]	; 0xa48
   23d18:	cmp	r3, #0
   23d1c:	bne	23d90 <readstat_parse_stata_dictionary+0x290>
   23d20:	cmp	r6, #0
   23d24:	beq	24158 <readstat_parse_stata_dictionary+0x658>
   23d28:	add	r7, r7, #1
   23d2c:	ldr	r3, [sp, #24]
   23d30:	cmp	r3, r7
   23d34:	beq	241bc <readstat_parse_stata_dictionary+0x6bc>
   23d38:	add	r3, r8, #828	; 0x33c
   23d3c:	lsl	r2, r6, #1
   23d40:	ldrsh	lr, [r3, r2]
   23d44:	add	lr, r8, lr
   23d48:	ldr	r3, [sp, #28]
   23d4c:	ldrsh	r4, [r3, r2]
   23d50:	add	r3, r8, r6
   23d54:	ldrb	r5, [r3, #1460]	; 0x5b4
   23d58:	cmp	r5, #0
   23d5c:	bne	23c58 <readstat_parse_stata_dictionary+0x158>
   23d60:	ldr	r3, [sp, #32]
   23d64:	add	r6, r3, r6
   23d68:	ldrb	r5, [r6, #1620]	; 0x654
   23d6c:	cmp	r5, #0
   23d70:	ble	23d04 <readstat_parse_stata_dictionary+0x204>
   23d74:	add	r1, lr, r5, lsl #1
   23d78:	sub	r1, r1, #2
   23d7c:	cmp	lr, r1
   23d80:	bhi	23d00 <readstat_parse_stata_dictionary+0x200>
   23d84:	ldrb	ip, [r7]
   23d88:	mov	r2, lr
   23d8c:	b	23cc0 <readstat_parse_stata_dictionary+0x1c0>
   23d90:	ldr	r2, [sp, #56]	; 0x38
   23d94:	add	r5, r2, r3
   23d98:	add	r4, r5, #1
   23d9c:	ldrb	r3, [r2, r3]
   23da0:	add	r3, r3, #1
   23da4:	add	r5, r5, r3
   23da8:	add	r3, sp, #1104	; 0x450
   23dac:	str	r3, [sp, #20]
   23db0:	add	r3, r3, #580	; 0x244
   23db4:	str	r3, [sp, #44]	; 0x2c
   23db8:	cmp	r4, r5
   23dbc:	beq	23d20 <readstat_parse_stata_dictionary+0x220>
   23dc0:	ldrb	r3, [r4], #1
   23dc4:	cmp	r3, #28
   23dc8:	addls	pc, pc, r3, lsl #2
   23dcc:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23dd0:	b	23e44 <readstat_parse_stata_dictionary+0x344>
   23dd4:	b	23e4c <readstat_parse_stata_dictionary+0x34c>
   23dd8:	b	23e60 <readstat_parse_stata_dictionary+0x360>
   23ddc:	b	23e8c <readstat_parse_stata_dictionary+0x38c>
   23de0:	b	23f3c <readstat_parse_stata_dictionary+0x43c>
   23de4:	b	23f54 <readstat_parse_stata_dictionary+0x454>
   23de8:	b	23f70 <readstat_parse_stata_dictionary+0x470>
   23dec:	b	23f88 <readstat_parse_stata_dictionary+0x488>
   23df0:	b	23f90 <readstat_parse_stata_dictionary+0x490>
   23df4:	b	23fa0 <readstat_parse_stata_dictionary+0x4a0>
   23df8:	b	23fa8 <readstat_parse_stata_dictionary+0x4a8>
   23dfc:	b	23fb8 <readstat_parse_stata_dictionary+0x4b8>
   23e00:	b	23fc0 <readstat_parse_stata_dictionary+0x4c0>
   23e04:	b	23fd0 <readstat_parse_stata_dictionary+0x4d0>
   23e08:	b	23fe4 <readstat_parse_stata_dictionary+0x4e4>
   23e0c:	b	23fec <readstat_parse_stata_dictionary+0x4ec>
   23e10:	b	23ff8 <readstat_parse_stata_dictionary+0x4f8>
   23e14:	b	24004 <readstat_parse_stata_dictionary+0x504>
   23e18:	b	24014 <readstat_parse_stata_dictionary+0x514>
   23e1c:	b	24028 <readstat_parse_stata_dictionary+0x528>
   23e20:	b	24030 <readstat_parse_stata_dictionary+0x530>
   23e24:	b	2403c <readstat_parse_stata_dictionary+0x53c>
   23e28:	b	24048 <readstat_parse_stata_dictionary+0x548>
   23e2c:	b	24054 <readstat_parse_stata_dictionary+0x554>
   23e30:	b	24060 <readstat_parse_stata_dictionary+0x560>
   23e34:	b	2406c <readstat_parse_stata_dictionary+0x56c>
   23e38:	b	24078 <readstat_parse_stata_dictionary+0x578>
   23e3c:	b	24088 <readstat_parse_stata_dictionary+0x588>
   23e40:	b	24090 <readstat_parse_stata_dictionary+0x590>
   23e44:	mov	r9, #0
   23e48:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23e4c:	add	r9, r9, r9, lsl #2
   23e50:	ldrb	r3, [r7]
   23e54:	sub	r3, r3, #48	; 0x30
   23e58:	add	r9, r3, r9, lsl #1
   23e5c:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23e60:	mov	r2, #2208	; 0x8a0
   23e64:	mov	r1, #0
   23e68:	ldr	r0, [sp, #20]
   23e6c:	bl	42a4 <memset@plt>
   23e70:	mov	r3, #46	; 0x2e
   23e74:	strb	r3, [sp, #3304]	; 0xce8
   23e78:	mov	r3, #5
   23e7c:	str	r3, [sp, #1120]	; 0x460
   23e80:	ldr	r3, [sp, #36]	; 0x24
   23e84:	str	r3, [sp, #1124]	; 0x464
   23e88:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23e8c:	ldr	r3, [sp, #12]
   23e90:	str	r3, [sp, #1104]	; 0x450
   23e94:	ldr	r2, [sp, #40]	; 0x28
   23e98:	str	r2, [sp, #1108]	; 0x454
   23e9c:	ldr	r3, [sp, #1112]	; 0x458
   23ea0:	add	r3, r2, r3
   23ea4:	str	r3, [sp, #40]	; 0x28
   23ea8:	ldr	r3, [sp, #60]	; 0x3c
   23eac:	ldr	sl, [r3, #8]
   23eb0:	cmp	sl, #0
   23eb4:	beq	23eec <readstat_parse_stata_dictionary+0x3ec>
   23eb8:	ldr	r3, [sp, #48]	; 0x30
   23ebc:	str	r3, [sp, #3268]	; 0xcc4
   23ec0:	ldr	r3, [sp, #64]	; 0x40
   23ec4:	mov	r2, #0
   23ec8:	add	r1, sp, #1120	; 0x460
   23ecc:	ldr	r0, [sp, #36]	; 0x24
   23ed0:	blx	sl
   23ed4:	cmp	r0, #1
   23ed8:	beq	2414c <readstat_parse_stata_dictionary+0x64c>
   23edc:	cmp	r0, #2
   23ee0:	moveq	r3, #1
   23ee4:	streq	r3, [sp, #1116]	; 0x45c
   23ee8:	beq	23ef8 <readstat_parse_stata_dictionary+0x3f8>
   23eec:	ldr	r3, [sp, #48]	; 0x30
   23ef0:	add	r3, r3, #1
   23ef4:	str	r3, [sp, #48]	; 0x30
   23ef8:	ldr	r1, [fp, #268]	; 0x10c
   23efc:	mov	sl, #2208	; 0x8a0
   23f00:	mla	r1, r1, sl, sl
   23f04:	ldr	r0, [fp, #276]	; 0x114
   23f08:	bl	3fec <realloc@plt>
   23f0c:	str	r0, [fp, #276]	; 0x114
   23f10:	ldr	r3, [fp, #268]	; 0x10c
   23f14:	add	r2, r3, #1
   23f18:	str	r2, [fp, #268]	; 0x10c
   23f1c:	mov	r2, sl
   23f20:	ldr	r1, [sp, #20]
   23f24:	mla	r0, sl, r3, r0
   23f28:	bl	3f14 <memcpy@plt>
   23f2c:	ldr	r3, [sp, #36]	; 0x24
   23f30:	add	r3, r3, #1
   23f34:	str	r3, [sp, #36]	; 0x24
   23f38:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23f3c:	ldr	r3, [sp, #16]
   23f40:	ldr	r2, [sp, #8]
   23f44:	mov	r1, #255	; 0xff
   23f48:	mov	r0, fp
   23f4c:	bl	3e60 <readstat_copy@plt>
   23f50:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23f54:	ldr	r3, [sp, #16]
   23f58:	ldr	r2, [sp, #8]
   23f5c:	mov	r1, #300	; 0x12c
   23f60:	ldr	r0, [sp, #20]
   23f64:	add	r0, r0, #24
   23f68:	bl	3e60 <readstat_copy@plt>
   23f6c:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23f70:	ldr	r3, [sp, #16]
   23f74:	ldr	r2, [sp, #8]
   23f78:	mov	r1, #1024	; 0x400
   23f7c:	ldr	r0, [sp, #44]	; 0x2c
   23f80:	bl	3e60 <readstat_copy@plt>
   23f84:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23f88:	str	r7, [sp, #8]
   23f8c:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23f90:	ldr	r3, [sp, #8]
   23f94:	sub	r3, r7, r3
   23f98:	str	r3, [sp, #16]
   23f9c:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23fa0:	str	r7, [sp, #8]
   23fa4:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23fa8:	ldr	r3, [sp, #8]
   23fac:	sub	r3, r7, r3
   23fb0:	str	r3, [sp, #16]
   23fb4:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23fb8:	str	r7, [sp, #8]
   23fbc:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23fc0:	ldr	r3, [sp, #8]
   23fc4:	sub	r3, r7, r3
   23fc8:	str	r3, [sp, #16]
   23fcc:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23fd0:	ldr	r3, [sp, #52]	; 0x34
   23fd4:	add	r3, r3, #1
   23fd8:	str	r3, [sp, #52]	; 0x34
   23fdc:	str	r7, [sp, #68]	; 0x44
   23fe0:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23fe4:	str	r9, [fp, #256]	; 0x100
   23fe8:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23fec:	sub	r3, r9, #1
   23ff0:	str	r3, [sp, #12]
   23ff4:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   23ff8:	sub	r3, r9, #1
   23ffc:	str	r3, [sp, #40]	; 0x28
   24000:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   24004:	ldr	r3, [sp, #12]
   24008:	add	r3, r3, #1
   2400c:	str	r3, [sp, #12]
   24010:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   24014:	sub	r3, r9, #1
   24018:	ldr	r2, [sp, #12]
   2401c:	add	r3, r2, r3
   24020:	str	r3, [sp, #12]
   24024:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   24028:	str	r9, [fp, #260]	; 0x104
   2402c:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   24030:	sub	r3, r9, #1
   24034:	str	r3, [fp, #264]	; 0x108
   24038:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   2403c:	mov	r3, #1
   24040:	str	r3, [sp, #1120]	; 0x460
   24044:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   24048:	mov	r3, #2
   2404c:	str	r3, [sp, #1120]	; 0x460
   24050:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   24054:	mov	r3, #3
   24058:	str	r3, [sp, #1120]	; 0x460
   2405c:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   24060:	mov	r3, #4
   24064:	str	r3, [sp, #1120]	; 0x460
   24068:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   2406c:	mov	r3, #5
   24070:	str	r3, [sp, #1120]	; 0x460
   24074:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   24078:	mov	r3, #0
   2407c:	str	r3, [sp, #1120]	; 0x460
   24080:	str	r9, [sp, #2716]	; 0xa9c
   24084:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   24088:	str	r9, [sp, #1112]	; 0x458
   2408c:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   24090:	mov	r3, #44	; 0x2c
   24094:	strb	r3, [sp, #3304]	; 0xce8
   24098:	b	23db8 <readstat_parse_stata_dictionary+0x2b8>
   2409c:	ldr	r0, [pc, #368]	; 24214 <readstat_parse_stata_dictionary+0x714>
   240a0:	add	r0, pc, r0
   240a4:	ldrd	r2, [r0]
   240a8:	strd	r2, [sp, #80]	; 0x50
   240ac:	ldrd	r2, [r0, #8]
   240b0:	strd	r2, [sp, #88]	; 0x58
   240b4:	ldrd	r2, [r0, #16]
   240b8:	strd	r2, [sp, #96]	; 0x60
   240bc:	ldrd	r2, [r0, #24]
   240c0:	strd	r2, [sp, #104]	; 0x68
   240c4:	ldrd	r2, [r0, #32]
   240c8:	strd	r2, [sp, #112]	; 0x70
   240cc:	ldrd	r2, [r0, #40]	; 0x28
   240d0:	strd	r2, [sp, #120]	; 0x78
   240d4:	ldrd	r2, [r0, #48]	; 0x30
   240d8:	strd	r2, [sp, #128]	; 0x80
   240dc:	ldrh	r3, [r0, #56]	; 0x38
   240e0:	strh	r3, [sp, #136]	; 0x88
   240e4:	ldrb	r3, [r0, #58]	; 0x3a
   240e8:	strb	r3, [sp, #138]	; 0x8a
   240ec:	b	2419c <readstat_parse_stata_dictionary+0x69c>
   240f0:	ldr	fp, [sp, #72]	; 0x48
   240f4:	b	241e0 <readstat_parse_stata_dictionary+0x6e0>
   240f8:	mov	r4, #15
   240fc:	mov	r3, #0
   24100:	str	r3, [sp, #76]	; 0x4c
   24104:	mov	fp, r3
   24108:	ldr	r3, [sl, #32]
   2410c:	ldr	r2, [r3, #4]
   24110:	ldr	r0, [r3, #20]
   24114:	blx	r2
   24118:	ldr	r0, [sp, #76]	; 0x4c
   2411c:	bl	3eb4 <free@plt>
   24120:	ldr	r3, [sp, #72]	; 0x48
   24124:	cmp	r3, #0
   24128:	beq	24134 <readstat_parse_stata_dictionary+0x634>
   2412c:	ldr	r3, [sp, #72]	; 0x48
   24130:	str	r4, [r3]
   24134:	mov	r0, fp
   24138:	bl	3fb0 <readstat_schema_free@plt>
   2413c:	mov	fp, #0
   24140:	b	241e0 <readstat_parse_stata_dictionary+0x6e0>
   24144:	mov	r4, #3
   24148:	b	24108 <readstat_parse_stata_dictionary+0x608>
   2414c:	ldr	sl, [sp, #60]	; 0x3c
   24150:	mov	r4, #4
   24154:	b	24108 <readstat_parse_stata_dictionary+0x608>
   24158:	ldr	sl, [sp, #60]	; 0x3c
   2415c:	ldr	r3, [sp, #24]
   24160:	cmp	r7, r3
   24164:	beq	2409c <readstat_parse_stata_dictionary+0x59c>
   24168:	ldrb	r3, [r7]
   2416c:	str	r3, [sp, #4]
   24170:	ldr	r3, [sp, #68]	; 0x44
   24174:	sub	r3, r7, r3
   24178:	add	r3, r3, #1
   2417c:	str	r3, [sp]
   24180:	ldr	r3, [sp, #52]	; 0x34
   24184:	add	r3, r3, #1
   24188:	ldr	r2, [pc, #136]	; 24218 <readstat_parse_stata_dictionary+0x718>
   2418c:	add	r2, pc, r2
   24190:	mov	r1, #1024	; 0x400
   24194:	add	r0, sp, #80	; 0x50
   24198:	bl	4280 <snprintf@plt>
   2419c:	ldr	r3, [sl, #24]
   241a0:	cmp	r3, #0
   241a4:	beq	241b4 <readstat_parse_stata_dictionary+0x6b4>
   241a8:	ldr	r1, [sp, #64]	; 0x40
   241ac:	add	r0, sp, #80	; 0x50
   241b0:	blx	r3
   241b4:	mov	r4, #5
   241b8:	b	24108 <readstat_parse_stata_dictionary+0x608>
   241bc:	ldr	sl, [sp, #60]	; 0x3c
   241c0:	cmp	r6, #155	; 0x9b
   241c4:	ble	2409c <readstat_parse_stata_dictionary+0x59c>
   241c8:	ldr	r3, [sl, #32]
   241cc:	ldr	r2, [r3, #4]
   241d0:	ldr	r0, [r3, #20]
   241d4:	blx	r2
   241d8:	ldr	r0, [sp, #76]	; 0x4c
   241dc:	bl	3eb4 <free@plt>
   241e0:	mov	r0, fp
   241e4:	add	sp, sp, #3312	; 0xcf0
   241e8:	add	sp, sp, #4
   241ec:	ldrd	r4, [sp]
   241f0:	ldrd	r6, [sp, #8]
   241f4:	ldrd	r8, [sp, #16]
   241f8:	ldrd	sl, [sp, #24]
   241fc:	add	sp, sp, #32
   24200:	pop	{pc}		; (ldr pc, [sp], #4)
   24204:	.word	0x00010b04
   24208:	.word	0x00010af0
   2420c:	.word	0x00010ae4
   24210:	.word	0x00010a00
   24214:	.word	0x0001147c
   24218:	.word	0x000113cc

0002421c <handle_value>:
   2421c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   24220:	strd	r6, [sp, #8]
   24224:	strd	r8, [sp, #16]
   24228:	strd	sl, [sp, #24]
   2422c:	str	lr, [sp, #32]
   24230:	add	fp, sp, #32
   24234:	sub	sp, sp, #44	; 0x2c
   24238:	mov	r7, r0
   2423c:	mov	sl, r1
   24240:	mov	r5, r2
   24244:	mov	r4, r3
   24248:	ldr	r3, [fp, #8]
   2424c:	lsl	r3, r3, #2
   24250:	add	r9, r3, #1
   24254:	add	r3, r3, #8
   24258:	bic	r3, r3, #7
   2425c:	sub	sp, sp, r3
   24260:	add	r6, r4, #16
   24264:	mov	r2, #0
   24268:	mov	r3, #0
   2426c:	strd	r2, [fp, #-52]	; 0xffffffcc
   24270:	strd	r2, [fp, #-44]	; 0xffffffd4
   24274:	ldr	r0, [r4, #16]
   24278:	str	r0, [fp, #-44]	; 0xffffffd4
   2427c:	bl	3e18 <readstat_type_class@plt>
   24280:	cmp	r0, #0
   24284:	beq	24330 <handle_value+0x114>
   24288:	mov	r3, #0
   2428c:	str	r3, [fp, #-56]	; 0xffffffc8
   24290:	ldr	r3, [r4, #16]
   24294:	cmp	r3, #5
   24298:	beq	2435c <handle_value+0x140>
   2429c:	cmp	r3, #4
   242a0:	beq	24370 <handle_value+0x154>
   242a4:	mov	r2, #10
   242a8:	sub	r1, fp, #56	; 0x38
   242ac:	ldr	r0, [fp, #4]
   242b0:	bl	3e24 <strtol@plt>
   242b4:	str	r0, [fp, #-52]	; 0xffffffcc
   242b8:	mov	r3, #3
   242bc:	str	r3, [fp, #-44]	; 0xffffffd4
   242c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   242c4:	ldr	r2, [fp, #4]
   242c8:	cmp	r3, r2
   242cc:	movne	r3, #0
   242d0:	moveq	r3, #1
   242d4:	ldrb	r2, [fp, #-39]	; 0xffffffd9
   242d8:	bfi	r2, r3, #0, #1
   242dc:	strb	r2, [fp, #-39]	; 0xffffffd9
   242e0:	ldr	r3, [fp, #12]
   242e4:	str	r3, [sp, #8]
   242e8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   242ec:	strd	r2, [sp]
   242f0:	sub	r3, fp, #52	; 0x34
   242f4:	ldm	r3, {r2, r3}
   242f8:	ldr	r4, [r7, #16]
   242fc:	mov	r1, r6
   24300:	mov	r0, r5
   24304:	blx	r4
   24308:	cmp	r0, #1
   2430c:	movne	r0, #0
   24310:	moveq	r0, #4
   24314:	sub	sp, fp, #32
   24318:	ldrd	r4, [sp]
   2431c:	ldrd	r6, [sp, #8]
   24320:	ldrd	r8, [sp, #16]
   24324:	ldrd	sl, [sp, #24]
   24328:	add	sp, sp, #32
   2432c:	pop	{pc}		; (ldr pc, [sp], #4)
   24330:	add	r8, sp, #16
   24334:	str	sl, [sp]
   24338:	ldr	r3, [fp, #8]
   2433c:	ldr	r2, [fp, #4]
   24340:	mov	r1, r9
   24344:	mov	r0, r8
   24348:	bl	4238 <readstat_convert@plt>
   2434c:	cmp	r0, #0
   24350:	streq	r8, [fp, #-52]	; 0xffffffcc
   24354:	beq	242e0 <handle_value+0xc4>
   24358:	b	24314 <handle_value+0xf8>
   2435c:	sub	r1, fp, #56	; 0x38
   24360:	ldr	r0, [fp, #4]
   24364:	bl	42f8 <strtod@plt>
   24368:	vstr	d0, [fp, #-52]	; 0xffffffcc
   2436c:	b	242c0 <handle_value+0xa4>
   24370:	sub	r1, fp, #56	; 0x38
   24374:	ldr	r0, [fp, #4]
   24378:	bl	40c4 <strtof@plt>
   2437c:	vstr	s0, [fp, #-52]	; 0xffffffcc
   24380:	b	242c0 <handle_value+0xa4>

00024384 <txt_parse_fixed_width>:
   24384:	strd	r4, [sp, #-36]!	; 0xffffffdc
   24388:	strd	r6, [sp, #8]
   2438c:	strd	r8, [sp, #16]
   24390:	strd	sl, [sp, #24]
   24394:	str	lr, [sp, #32]
   24398:	sub	sp, sp, #4096	; 0x1000
   2439c:	sub	sp, sp, #60	; 0x3c
   243a0:	mov	r9, r0
   243a4:	str	r1, [sp, #32]
   243a8:	str	r2, [sp, #36]	; 0x24
   243ac:	str	r3, [sp, #44]	; 0x2c
   243b0:	ldr	r7, [r1, #8]
   243b4:	ldr	sl, [r0, #32]
   243b8:	mov	r3, #0
   243bc:	str	r3, [sp, #28]
   243c0:	mov	fp, #2208	; 0x8a0
   243c4:	ldr	r3, [r7, #256]	; 0x100
   243c8:	cmp	r3, #0
   243cc:	ble	24594 <txt_parse_fixed_width+0x210>
   243d0:	ldr	r3, [sp, #44]	; 0x2c
   243d4:	sub	r3, r3, #4
   243d8:	str	r3, [sp, #24]
   243dc:	mov	r8, #0
   243e0:	mov	r4, r8
   243e4:	add	r3, sp, #56	; 0x38
   243e8:	str	r3, [sp, #20]
   243ec:	b	244e0 <txt_parse_fixed_width+0x15c>
   243f0:	add	r4, r4, #1
   243f4:	ldr	r3, [r7, #268]	; 0x10c
   243f8:	cmp	r3, r4
   243fc:	ble	244c4 <txt_parse_fixed_width+0x140>
   24400:	mul	r3, fp, r4
   24404:	ldr	r2, [r7, #276]	; 0x114
   24408:	add	r5, r2, r3
   2440c:	ldr	r3, [r2, r3]
   24410:	cmp	r3, r8
   24414:	bne	244c4 <txt_parse_fixed_width+0x140>
   24418:	ldr	r6, [r5, #8]
   2441c:	cmp	r6, #4096	; 0x1000
   24420:	bcs	243f0 <txt_parse_fixed_width+0x6c>
   24424:	ldr	r3, [r9, #16]
   24428:	cmp	r3, #0
   2442c:	beq	243f0 <txt_parse_fixed_width+0x6c>
   24430:	ldr	r3, [r5, #12]
   24434:	cmp	r3, #0
   24438:	bne	243f0 <txt_parse_fixed_width+0x6c>
   2443c:	ldr	r1, [r5, #4]
   24440:	mov	r2, r6
   24444:	add	r3, sp, #4160	; 0x1040
   24448:	add	r3, r3, #32
   2444c:	ldr	r3, [r3]
   24450:	add	r1, r3, r1
   24454:	ldr	r0, [sp, #20]
   24458:	bl	3f14 <memcpy@plt>
   2445c:	ldr	r3, [sp, #20]
   24460:	mov	r2, #0
   24464:	strb	r2, [r3, r6]
   24468:	ldr	r2, [sp, #36]	; 0x24
   2446c:	str	r2, [sp, #8]
   24470:	str	r6, [sp, #4]
   24474:	str	r3, [sp]
   24478:	mov	r3, r5
   2447c:	ldr	r2, [sp, #28]
   24480:	ldr	r1, [sp, #32]
   24484:	ldr	r1, [r1, #4]
   24488:	mov	r0, r9
   2448c:	bl	2421c <handle_value>
   24490:	cmp	r0, #0
   24494:	beq	243f0 <txt_parse_fixed_width+0x6c>
   24498:	ldr	r3, [sp, #32]
   2449c:	ldr	r2, [sp, #28]
   244a0:	str	r2, [r3]
   244a4:	add	sp, sp, #4096	; 0x1000
   244a8:	add	sp, sp, #60	; 0x3c
   244ac:	ldrd	r4, [sp]
   244b0:	ldrd	r6, [sp, #8]
   244b4:	ldrd	r8, [sp, #16]
   244b8:	ldrd	sl, [sp, #24]
   244bc:	add	sp, sp, #32
   244c0:	pop	{pc}		; (ldr pc, [sp], #4)
   244c4:	ldr	r3, [r7, #260]	; 0x104
   244c8:	cmp	r3, #0
   244cc:	beq	24540 <txt_parse_fixed_width+0x1bc>
   244d0:	add	r8, r8, #1
   244d4:	ldr	r3, [r7, #256]	; 0x100
   244d8:	cmp	r3, r8
   244dc:	ble	24594 <txt_parse_fixed_width+0x210>
   244e0:	ldr	r3, [sl, #12]
   244e4:	ldr	r2, [sl, #20]
   244e8:	ldr	r5, [sp, #24]
   244ec:	ldr	r1, [r5, #4]!
   244f0:	str	r5, [sp, #24]
   244f4:	add	r0, sp, #4160	; 0x1040
   244f8:	add	r0, r0, #32
   244fc:	ldr	r0, [r0]
   24500:	blx	r3
   24504:	cmp	r0, #0
   24508:	beq	245b8 <txt_parse_fixed_width+0x234>
   2450c:	ldr	r3, [r5]
   24510:	cmp	r3, r0
   24514:	bhi	245c0 <txt_parse_fixed_width+0x23c>
   24518:	ldr	r3, [r7, #268]	; 0x10c
   2451c:	cmp	r3, r4
   24520:	ble	244c4 <txt_parse_fixed_width+0x140>
   24524:	mul	r3, fp, r4
   24528:	ldr	r2, [r7, #276]	; 0x114
   2452c:	add	r5, r2, r3
   24530:	ldr	r3, [r2, r3]
   24534:	cmp	r3, r8
   24538:	beq	24418 <txt_parse_fixed_width+0x94>
   2453c:	b	244c4 <txt_parse_fixed_width+0x140>
   24540:	ldr	r2, [sp, #20]
   24544:	strb	r3, [r2, #-1]
   24548:	add	r5, sp, #55	; 0x37
   2454c:	mov	r6, #1
   24550:	str	r4, [sp, #40]	; 0x28
   24554:	mov	r4, r5
   24558:	mov	r5, r2
   2455c:	ldr	r3, [sl, #12]
   24560:	ldr	r2, [sl, #20]
   24564:	mov	r1, r6
   24568:	mov	r0, r4
   2456c:	blx	r3
   24570:	cmp	r0, #1
   24574:	bne	2458c <txt_parse_fixed_width+0x208>
   24578:	ldrb	r3, [r5, #-1]
   2457c:	cmp	r3, #10
   24580:	bne	2455c <txt_parse_fixed_width+0x1d8>
   24584:	ldr	r4, [sp, #40]	; 0x28
   24588:	b	244d0 <txt_parse_fixed_width+0x14c>
   2458c:	ldr	r4, [sp, #40]	; 0x28
   24590:	b	244d0 <txt_parse_fixed_width+0x14c>
   24594:	ldr	r3, [sp, #28]
   24598:	add	r3, r3, #1
   2459c:	mov	r2, r3
   245a0:	str	r3, [sp, #28]
   245a4:	ldr	r3, [r9, #44]	; 0x2c
   245a8:	cmp	r3, r2
   245ac:	bne	243c4 <txt_parse_fixed_width+0x40>
   245b0:	mov	r0, #0
   245b4:	b	24498 <txt_parse_fixed_width+0x114>
   245b8:	mov	r0, #0
   245bc:	b	24498 <txt_parse_fixed_width+0x114>
   245c0:	mov	r0, #2
   245c4:	b	24498 <txt_parse_fixed_width+0x114>

000245c8 <readstat_parse_txt>:
   245c8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   245cc:	strd	r6, [sp, #8]
   245d0:	strd	r8, [sp, #16]
   245d4:	strd	sl, [sp, #24]
   245d8:	str	lr, [sp, #32]
   245dc:	sub	sp, sp, #124	; 0x7c
   245e0:	str	r0, [sp, #16]
   245e4:	mov	r4, r1
   245e8:	mov	ip, r2
   245ec:	str	r2, [sp, #24]
   245f0:	str	r3, [sp, #32]
   245f4:	mov	r1, r0
   245f8:	ldr	r6, [r0, #32]
   245fc:	mov	r2, #0
   24600:	mov	r3, #0
   24604:	strd	r2, [sp, #108]	; 0x6c
   24608:	str	ip, [sp, #116]	; 0x74
   2460c:	ldr	r0, [r0, #40]	; 0x28
   24610:	cmp	r0, #0
   24614:	beq	24644 <readstat_parse_txt+0x7c>
   24618:	ldr	r1, [r1, #36]	; 0x24
   2461c:	cmp	r1, #0
   24620:	beq	24644 <readstat_parse_txt+0x7c>
   24624:	bl	4130 <iconv_open@plt>
   24628:	str	r0, [sp, #112]	; 0x70
   2462c:	cmn	r0, #1
   24630:	moveq	r3, #0
   24634:	streq	r3, [sp, #112]	; 0x70
   24638:	streq	r3, [sp, #28]
   2463c:	moveq	r4, #7
   24640:	beq	249f4 <readstat_parse_txt+0x42c>
   24644:	ldr	r3, [r6]
   24648:	ldr	r1, [r6, #20]
   2464c:	mov	r0, r4
   24650:	blx	r3
   24654:	cmn	r0, #1
   24658:	beq	249e8 <readstat_parse_txt+0x420>
   2465c:	ldr	r7, [sp, #24]
   24660:	ldr	r5, [r7, #256]	; 0x100
   24664:	lsl	r4, r5, #2
   24668:	mov	r0, r4
   2466c:	bl	410c <malloc@plt>
   24670:	subs	r3, r0, #0
   24674:	str	r3, [sp, #28]
   24678:	beq	24a10 <readstat_parse_txt+0x448>
   2467c:	cmp	r5, #0
   24680:	ble	24a78 <readstat_parse_txt+0x4b0>
   24684:	ldr	r1, [r7, #260]	; 0x104
   24688:	add	r2, r4, r3
   2468c:	str	r1, [r3], #4
   24690:	cmp	r3, r2
   24694:	bne	2468c <readstat_parse_txt+0xc4>
   24698:	ldr	r3, [sp, #24]
   2469c:	ldr	ip, [r3, #268]	; 0x10c
   246a0:	cmp	ip, #0
   246a4:	ble	246ec <readstat_parse_txt+0x124>
   246a8:	ldr	r3, [sp, #24]
   246ac:	ldr	r3, [r3, #276]	; 0x114
   246b0:	mov	r2, #2208	; 0x8a0
   246b4:	mla	ip, r2, ip, r3
   246b8:	ldr	lr, [sp, #28]
   246bc:	ldr	r1, [r3]
   246c0:	ldr	r2, [r3, #4]
   246c4:	ldr	r0, [r3, #8]
   246c8:	add	r2, r2, r0
   246cc:	ldr	r0, [lr, r1, lsl #2]
   246d0:	cmp	r0, r2
   246d4:	strcc	r2, [lr, r1, lsl #2]
   246d8:	add	r3, r3, #2208	; 0x8a0
   246dc:	cmp	r3, ip
   246e0:	bne	246bc <readstat_parse_txt+0xf4>
   246e4:	cmp	r5, #0
   246e8:	ble	2474c <readstat_parse_txt+0x184>
   246ec:	ldr	r2, [sp, #28]
   246f0:	mov	r3, r2
   246f4:	add	r4, r4, r2
   246f8:	mov	r0, #0
   246fc:	ldr	r2, [r3], #4
   24700:	cmp	r0, r2
   24704:	movcc	r0, r2
   24708:	cmp	r4, r3
   2470c:	bne	246fc <readstat_parse_txt+0x134>
   24710:	add	r0, r0, #2
   24714:	bl	410c <malloc@plt>
   24718:	subs	r3, r0, #0
   2471c:	str	r3, [sp, #40]	; 0x28
   24720:	beq	24a18 <readstat_parse_txt+0x450>
   24724:	ldr	r3, [sp, #24]
   24728:	ldr	r7, [r3, #264]	; 0x108
   2472c:	cmp	r7, #1
   24730:	ble	24790 <readstat_parse_txt+0x1c8>
   24734:	mov	r3, #0
   24738:	strb	r3, [sp, #48]	; 0x30
   2473c:	sub	r7, r7, #2
   24740:	add	r5, sp, #48	; 0x30
   24744:	mov	r4, #1
   24748:	b	24764 <readstat_parse_txt+0x19c>
   2474c:	mov	r0, #0
   24750:	b	24710 <readstat_parse_txt+0x148>
   24754:	sub	r3, r7, #1
   24758:	cmp	r7, #0
   2475c:	beq	24790 <readstat_parse_txt+0x1c8>
   24760:	mov	r7, r3
   24764:	ldr	r3, [r6, #12]
   24768:	ldr	r2, [r6, #20]
   2476c:	mov	r1, r4
   24770:	mov	r0, r5
   24774:	blx	r3
   24778:	cmp	r0, #1
   2477c:	bne	24754 <readstat_parse_txt+0x18c>
   24780:	ldrb	r3, [sp, #48]	; 0x30
   24784:	cmp	r3, #10
   24788:	bne	24764 <readstat_parse_txt+0x19c>
   2478c:	b	24754 <readstat_parse_txt+0x18c>
   24790:	ldr	r3, [sp, #24]
   24794:	ldrb	r3, [r3, #272]	; 0x110
   24798:	cmp	r3, #0
   2479c:	beq	24910 <readstat_parse_txt+0x348>
   247a0:	mov	r0, #4096	; 0x1000
   247a4:	bl	410c <malloc@plt>
   247a8:	mov	fp, r0
   247ac:	ldr	sl, [sp, #116]	; 0x74
   247b0:	ldr	r3, [sp, #16]
   247b4:	ldr	r7, [r3, #32]
   247b8:	mov	r9, #4096	; 0x1000
   247bc:	mov	r3, #0
   247c0:	str	r3, [sp, #36]	; 0x24
   247c4:	str	r6, [sp, #44]	; 0x2c
   247c8:	ldr	r3, [sl, #268]	; 0x10c
   247cc:	cmp	r3, #0
   247d0:	ble	248e8 <readstat_parse_txt+0x320>
   247d4:	mov	r8, #0
   247d8:	b	248c8 <readstat_parse_txt+0x300>
   247dc:	lsl	r9, r9, #1
   247e0:	mov	r1, r9
   247e4:	mov	r0, fp
   247e8:	bl	3fec <realloc@plt>
   247ec:	mov	fp, r0
   247f0:	add	r5, fp, r4
   247f4:	ldr	r3, [r7, #12]
   247f8:	ldr	r2, [r7, #20]
   247fc:	mov	r1, #1
   24800:	mov	r0, r5
   24804:	blx	r3
   24808:	cmp	r0, #1
   2480c:	bne	2482c <readstat_parse_txt+0x264>
   24810:	add	r4, r4, #1
   24814:	ldrb	r3, [r5]
   24818:	cmp	r6, r3
   2481c:	beq	24834 <readstat_parse_txt+0x26c>
   24820:	cmp	r4, r9
   24824:	bne	247f0 <readstat_parse_txt+0x228>
   24828:	b	247dc <readstat_parse_txt+0x214>
   2482c:	cmn	r0, #1
   24830:	beq	24a20 <readstat_parse_txt+0x458>
   24834:	cmp	r4, #0
   24838:	beq	24a5c <readstat_parse_txt+0x494>
   2483c:	cmn	r4, #1
   24840:	beq	24a2c <readstat_parse_txt+0x464>
   24844:	ldr	r3, [sp, #16]
   24848:	ldr	r3, [r3, #16]
   2484c:	cmp	r3, #0
   24850:	beq	248b8 <readstat_parse_txt+0x2f0>
   24854:	mov	r3, #2208	; 0x8a0
   24858:	ldr	r2, [sp, #20]
   2485c:	mla	r3, r3, r8, r2
   24860:	ldr	r2, [r3, #12]
   24864:	cmp	r2, #0
   24868:	bne	248b8 <readstat_parse_txt+0x2f0>
   2486c:	sub	r2, r4, #1
   24870:	cmp	r2, #0
   24874:	ble	24888 <readstat_parse_txt+0x2c0>
   24878:	add	r1, fp, r4
   2487c:	ldrb	r1, [r1, #-2]
   24880:	cmp	r1, #13
   24884:	subeq	r2, r4, #2
   24888:	mov	r1, #0
   2488c:	strb	r1, [fp, r2]
   24890:	ldr	r1, [sp, #32]
   24894:	str	r1, [sp, #8]
   24898:	str	r2, [sp, #4]
   2489c:	str	fp, [sp]
   248a0:	ldr	r2, [sp, #36]	; 0x24
   248a4:	ldr	r1, [sp, #112]	; 0x70
   248a8:	ldr	r0, [sp, #16]
   248ac:	bl	2421c <handle_value>
   248b0:	cmp	r0, #0
   248b4:	bne	24a50 <readstat_parse_txt+0x488>
   248b8:	add	r8, r8, #1
   248bc:	ldr	r3, [sl, #268]	; 0x10c
   248c0:	cmp	r3, r8
   248c4:	ble	248e8 <readstat_parse_txt+0x320>
   248c8:	ldr	r2, [sl, #276]	; 0x114
   248cc:	str	r2, [sp, #20]
   248d0:	sub	r3, r3, #1
   248d4:	cmp	r3, r8
   248d8:	ldrbne	r6, [sl, #272]	; 0x110
   248dc:	moveq	r6, #10
   248e0:	mov	r4, #0
   248e4:	b	247f0 <readstat_parse_txt+0x228>
   248e8:	ldr	r3, [sp, #36]	; 0x24
   248ec:	add	r2, r3, #1
   248f0:	str	r2, [sp, #36]	; 0x24
   248f4:	ldr	r3, [sp, #16]
   248f8:	ldr	r3, [r3, #44]	; 0x2c
   248fc:	cmp	r2, r3
   24900:	bne	247c8 <readstat_parse_txt+0x200>
   24904:	ldr	r6, [sp, #44]	; 0x2c
   24908:	str	r3, [sp, #36]	; 0x24
   2490c:	b	24a60 <readstat_parse_txt+0x498>
   24910:	ldr	r3, [sp, #40]	; 0x28
   24914:	str	r3, [sp]
   24918:	ldr	r3, [sp, #28]
   2491c:	ldr	r2, [sp, #32]
   24920:	add	r1, sp, #108	; 0x6c
   24924:	ldr	r0, [sp, #16]
   24928:	bl	24384 <txt_parse_fixed_width>
   2492c:	mov	r4, r0
   24930:	cmp	r4, #0
   24934:	bne	2499c <readstat_parse_txt+0x3d4>
   24938:	ldr	r3, [sp, #16]
   2493c:	ldr	r2, [r3]
   24940:	cmp	r2, #0
   24944:	moveq	r4, #0
   24948:	beq	2499c <readstat_parse_txt+0x3d4>
   2494c:	mov	r0, #0
   24950:	mov	r1, #0
   24954:	strd	r0, [sp, #64]	; 0x40
   24958:	strd	r0, [sp, #72]	; 0x48
   2495c:	strd	r0, [sp, #80]	; 0x50
   24960:	strd	r0, [sp, #88]	; 0x58
   24964:	strd	r0, [sp, #96]	; 0x60
   24968:	ldr	r0, [sp, #108]	; 0x6c
   2496c:	asr	r1, r0, #31
   24970:	strd	r0, [sp, #48]	; 0x30
   24974:	ldr	r3, [sp, #24]
   24978:	ldr	r0, [r3, #268]	; 0x10c
   2497c:	asr	r1, r0, #31
   24980:	strd	r0, [sp, #56]	; 0x38
   24984:	ldr	r1, [sp, #32]
   24988:	add	r0, sp, #48	; 0x30
   2498c:	blx	r2
   24990:	cmp	r0, #1
   24994:	movne	r4, #0
   24998:	moveq	r4, #4
   2499c:	ldr	r3, [r6, #4]
   249a0:	ldr	r0, [r6, #20]
   249a4:	blx	r3
   249a8:	ldr	r0, [sp, #40]	; 0x28
   249ac:	bl	3eb4 <free@plt>
   249b0:	ldr	r0, [sp, #28]
   249b4:	bl	3eb4 <free@plt>
   249b8:	ldr	r0, [sp, #112]	; 0x70
   249bc:	cmp	r0, #0
   249c0:	beq	249c8 <readstat_parse_txt+0x400>
   249c4:	bl	3dc4 <iconv_close@plt>
   249c8:	mov	r0, r4
   249cc:	add	sp, sp, #124	; 0x7c
   249d0:	ldrd	r4, [sp]
   249d4:	ldrd	r6, [sp, #8]
   249d8:	ldrd	r8, [sp, #16]
   249dc:	ldrd	sl, [sp, #24]
   249e0:	add	sp, sp, #32
   249e4:	pop	{pc}		; (ldr pc, [sp], #4)
   249e8:	mov	r3, #0
   249ec:	str	r3, [sp, #28]
   249f0:	mov	r4, #1
   249f4:	ldr	r3, [r6, #4]
   249f8:	ldr	r0, [r6, #20]
   249fc:	blx	r3
   24a00:	ldr	r3, [sp, #28]
   24a04:	cmp	r3, #0
   24a08:	beq	249b8 <readstat_parse_txt+0x3f0>
   24a0c:	b	249b0 <readstat_parse_txt+0x3e8>
   24a10:	mov	r4, #3
   24a14:	b	249f4 <readstat_parse_txt+0x42c>
   24a18:	mov	r4, #3
   24a1c:	b	249f4 <readstat_parse_txt+0x42c>
   24a20:	ldr	r6, [sp, #44]	; 0x2c
   24a24:	mov	r4, #2
   24a28:	b	24a34 <readstat_parse_txt+0x46c>
   24a2c:	ldr	r6, [sp, #44]	; 0x2c
   24a30:	mov	r4, #2
   24a34:	ldr	r3, [sp, #36]	; 0x24
   24a38:	str	r3, [sp, #108]	; 0x6c
   24a3c:	cmp	fp, #0
   24a40:	beq	2499c <readstat_parse_txt+0x3d4>
   24a44:	mov	r0, fp
   24a48:	bl	3eb4 <free@plt>
   24a4c:	b	24930 <readstat_parse_txt+0x368>
   24a50:	ldr	r6, [sp, #44]	; 0x2c
   24a54:	mov	r4, r0
   24a58:	b	24a34 <readstat_parse_txt+0x46c>
   24a5c:	ldr	r6, [sp, #44]	; 0x2c
   24a60:	ldr	r3, [sp, #36]	; 0x24
   24a64:	str	r3, [sp, #108]	; 0x6c
   24a68:	cmp	fp, #0
   24a6c:	movne	r4, #0
   24a70:	bne	24a44 <readstat_parse_txt+0x47c>
   24a74:	b	24938 <readstat_parse_txt+0x370>
   24a78:	ldr	r3, [sp, #24]
   24a7c:	ldr	ip, [r3, #268]	; 0x10c
   24a80:	cmp	ip, #0
   24a84:	movle	r0, #0
   24a88:	bgt	246a8 <readstat_parse_txt+0xe0>
   24a8c:	b	24710 <readstat_parse_txt+0x148>

00024a90 <zsav_ctx_init>:
   24a90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   24a94:	strd	r6, [sp, #8]
   24a98:	str	r8, [sp, #16]
   24a9c:	str	lr, [sp, #20]
   24aa0:	mov	r5, r0
   24aa4:	mov	r6, r2
   24aa8:	mov	r7, r3
   24aac:	mov	r1, #40	; 0x28
   24ab0:	mov	r0, #1
   24ab4:	bl	3d4c <calloc@plt>
   24ab8:	mov	r4, r0
   24abc:	mov	r0, r5
   24ac0:	bl	410c <malloc@plt>
   24ac4:	str	r0, [r4]
   24ac8:	mov	r0, #10
   24acc:	str	r0, [r4, #12]
   24ad0:	mov	r1, #4
   24ad4:	bl	3d4c <calloc@plt>
   24ad8:	str	r0, [r4, #4]
   24adc:	mov	r2, #61440	; 0xf000
   24ae0:	movt	r2, #63	; 0x3f
   24ae4:	mov	r3, #0
   24ae8:	strd	r2, [r4, #16]
   24aec:	strd	r6, [r4, #24]
   24af0:	mvn	r3, #0
   24af4:	str	r3, [r4, #32]
   24af8:	mov	r0, r4
   24afc:	ldrd	r4, [sp]
   24b00:	ldrd	r6, [sp, #8]
   24b04:	ldr	r8, [sp, #16]
   24b08:	add	sp, sp, #20
   24b0c:	pop	{pc}		; (ldr pc, [sp], #4)

00024b10 <zsav_ctx_free>:
   24b10:	strd	r4, [sp, #-16]!
   24b14:	str	r6, [sp, #8]
   24b18:	str	lr, [sp, #12]
   24b1c:	mov	r6, r0
   24b20:	ldr	r3, [r0, #8]
   24b24:	cmp	r3, #0
   24b28:	ble	24b60 <zsav_ctx_free+0x50>
   24b2c:	mov	r4, #0
   24b30:	ldr	r3, [r6, #4]
   24b34:	ldr	r5, [r3, r4, lsl #2]
   24b38:	add	r0, r5, #8
   24b3c:	bl	4310 <deflateEnd@plt>
   24b40:	ldr	r0, [r5, #64]	; 0x40
   24b44:	bl	3eb4 <free@plt>
   24b48:	mov	r0, r5
   24b4c:	bl	3eb4 <free@plt>
   24b50:	add	r4, r4, #1
   24b54:	ldr	r3, [r6, #8]
   24b58:	cmp	r3, r4
   24b5c:	bgt	24b30 <zsav_ctx_free+0x20>
   24b60:	ldr	r0, [r6, #4]
   24b64:	bl	3eb4 <free@plt>
   24b68:	ldr	r0, [r6]
   24b6c:	bl	3eb4 <free@plt>
   24b70:	mov	r0, r6
   24b74:	bl	3eb4 <free@plt>
   24b78:	ldrd	r4, [sp]
   24b7c:	ldr	r6, [sp, #8]
   24b80:	add	sp, sp, #12
   24b84:	pop	{pc}		; (ldr pc, [sp], #4)

00024b88 <zsav_add_block>:
   24b88:	strd	r4, [sp, #-16]!
   24b8c:	str	r6, [sp, #8]
   24b90:	str	lr, [sp, #12]
   24b94:	mov	r4, r0
   24b98:	ldr	r1, [r0, #12]
   24b9c:	ldr	r3, [r0, #8]
   24ba0:	cmp	r3, r1
   24ba4:	beq	24c14 <zsav_add_block+0x8c>
   24ba8:	mov	r1, #72	; 0x48
   24bac:	mov	r0, #1
   24bb0:	bl	3d4c <calloc@plt>
   24bb4:	mov	r5, r0
   24bb8:	ldr	r2, [r4, #4]
   24bbc:	ldr	r3, [r4, #8]
   24bc0:	add	r1, r3, #1
   24bc4:	str	r1, [r4, #8]
   24bc8:	str	r0, [r2, r3, lsl #2]
   24bcc:	add	r6, r0, #8
   24bd0:	mov	r3, #56	; 0x38
   24bd4:	ldr	r2, [pc, #84]	; 24c30 <zsav_add_block+0xa8>
   24bd8:	add	r2, pc, r2
   24bdc:	ldr	r1, [r4, #32]
   24be0:	mov	r0, r6
   24be4:	bl	4124 <deflateInit_@plt>
   24be8:	ldr	r1, [r4, #16]
   24bec:	mov	r0, r6
   24bf0:	bl	3e78 <deflateBound@plt>
   24bf4:	str	r0, [r5, #68]	; 0x44
   24bf8:	bl	410c <malloc@plt>
   24bfc:	str	r0, [r5, #64]	; 0x40
   24c00:	mov	r0, r5
   24c04:	ldrd	r4, [sp]
   24c08:	ldr	r6, [sp, #8]
   24c0c:	add	sp, sp, #12
   24c10:	pop	{pc}		; (ldr pc, [sp], #4)
   24c14:	lsl	r3, r1, #1
   24c18:	str	r3, [r0, #12]
   24c1c:	lsl	r1, r1, #3
   24c20:	ldr	r0, [r0, #4]
   24c24:	bl	3fec <realloc@plt>
   24c28:	str	r0, [r4, #4]
   24c2c:	b	24ba8 <zsav_add_block+0x20>
   24c30:	.word	0x000109b8

00024c34 <zsav_current_block>:
   24c34:	ldr	r3, [r0, #8]
   24c38:	cmp	r3, #0
   24c3c:	subne	r3, r3, #-1073741823	; 0xc0000001
   24c40:	ldrne	r2, [r0, #4]
   24c44:	ldrne	r0, [r2, r3, lsl #2]
   24c48:	moveq	r0, #0
   24c4c:	bx	lr

00024c50 <zsav_compress_row>:
   24c50:	strd	r4, [sp, #-36]!	; 0xffffffdc
   24c54:	strd	r6, [sp, #8]
   24c58:	strd	r8, [sp, #16]
   24c5c:	strd	sl, [sp, #24]
   24c60:	str	lr, [sp, #32]
   24c64:	sub	sp, sp, #12
   24c68:	mov	r9, r0
   24c6c:	mov	r8, r1
   24c70:	str	r2, [sp, #4]
   24c74:	mov	r5, r3
   24c78:	mov	r0, r3
   24c7c:	bl	40a0 <zsav_current_block@plt>
   24c80:	subs	r4, r0, #0
   24c84:	beq	24dbc <zsav_compress_row+0x16c>
   24c88:	str	r9, [r4, #8]
   24c8c:	str	r8, [r4, #12]
   24c90:	ldr	r1, [r4, #4]
   24c94:	ldr	r2, [r4, #64]	; 0x40
   24c98:	add	r2, r2, r1
   24c9c:	str	r2, [r4, #20]
   24ca0:	ldr	r3, [r4, #68]	; 0x44
   24ca4:	sub	r3, r3, r1
   24ca8:	str	r3, [r4, #24]
   24cac:	ldrd	sl, [r5, #16]
   24cb0:	ldr	ip, [r4]
   24cb4:	subs	r0, sl, ip
   24cb8:	sbc	r1, fp, ip, asr #31
   24cbc:	mov	r3, #0
   24cc0:	cmp	r0, r8
   24cc4:	sbcs	r3, r1, r3
   24cc8:	bge	24dcc <zsav_compress_row+0x17c>
   24ccc:	mov	r6, #0
   24cd0:	sub	sl, sl, ip
   24cd4:	str	sl, [r4, #12]
   24cd8:	ldr	r3, [r5, #16]
   24cdc:	sub	ip, r3, ip
   24ce0:	add	r6, r6, ip
   24ce4:	mov	r1, #4
   24ce8:	add	r0, r4, #8
   24cec:	bl	4034 <deflate@plt>
   24cf0:	cmp	r0, #1
   24cf4:	bne	24da0 <zsav_compress_row+0x150>
   24cf8:	ldr	r3, [r4, #68]	; 0x44
   24cfc:	ldr	r2, [r4, #24]
   24d00:	sub	r3, r3, r2
   24d04:	str	r3, [r4, #4]
   24d08:	ldr	r3, [r5, #16]
   24d0c:	ldr	r2, [r4, #12]
   24d10:	sub	r3, r3, r2
   24d14:	str	r3, [r4]
   24d18:	mov	r0, r5
   24d1c:	bl	4118 <zsav_add_block@plt>
   24d20:	mov	r4, r0
   24d24:	add	r3, r9, r6
   24d28:	str	r3, [r0, #8]
   24d2c:	sub	r7, r8, r6
   24d30:	str	r7, [r0, #12]
   24d34:	ldr	r3, [r0, #64]	; 0x40
   24d38:	str	r3, [r0, #20]
   24d3c:	ldr	r3, [r0, #68]	; 0x44
   24d40:	str	r3, [r0, #24]
   24d44:	ldrd	sl, [r5, #16]
   24d48:	ldr	ip, [r0]
   24d4c:	mov	r3, #0
   24d50:	subs	r0, sl, ip
   24d54:	sbc	r1, fp, ip, asr #31
   24d58:	cmp	r0, r7
   24d5c:	sbcs	r3, r1, r3
   24d60:	blt	24cd0 <zsav_compress_row+0x80>
   24d64:	ldr	r3, [sp, #4]
   24d68:	cmp	r3, #0
   24d6c:	moveq	r1, r3
   24d70:	movne	r1, #4
   24d74:	add	r0, r4, #8
   24d78:	bl	4034 <deflate@plt>
   24d7c:	ldr	r3, [r4, #68]	; 0x44
   24d80:	ldr	r2, [r4, #24]
   24d84:	sub	r3, r3, r2
   24d88:	str	r3, [r4, #4]
   24d8c:	ldr	r3, [r4]
   24d90:	ldr	r2, [r4, #12]
   24d94:	sub	r3, r3, r2
   24d98:	add	r7, r3, r7
   24d9c:	str	r7, [r4]
   24da0:	add	sp, sp, #12
   24da4:	ldrd	r4, [sp]
   24da8:	ldrd	r6, [sp, #8]
   24dac:	ldrd	r8, [sp, #16]
   24db0:	ldrd	sl, [sp, #24]
   24db4:	add	sp, sp, #32
   24db8:	pop	{pc}		; (ldr pc, [sp], #4)
   24dbc:	mov	r0, r5
   24dc0:	bl	4118 <zsav_add_block@plt>
   24dc4:	mov	r4, r0
   24dc8:	b	24c88 <zsav_compress_row+0x38>
   24dcc:	mov	r7, r8
   24dd0:	b	24d64 <zsav_compress_row+0x114>

00024dd4 <zsav_read_compressed_data>:
   24dd4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   24dd8:	strd	r6, [sp, #8]
   24ddc:	strd	r8, [sp, #16]
   24de0:	strd	sl, [sp, #24]
   24de4:	str	lr, [sp, #32]
   24de8:	sub	sp, sp, #148	; 0x94
   24dec:	mov	r5, r0
   24df0:	str	r1, [sp]
   24df4:	ldr	r8, [r0, #36]	; 0x24
   24df8:	ldr	r9, [r0, #344]	; 0x158
   24dfc:	mov	r1, #0
   24e00:	str	r1, [sp, #140]	; 0x8c
   24e04:	mov	r2, #56	; 0x38
   24e08:	add	r0, sp, #80	; 0x50
   24e0c:	bl	42a4 <memset@plt>
   24e10:	add	r3, r5, #400	; 0x190
   24e14:	ldrd	r2, [r3, #-8]
   24e18:	strd	r2, [sp, #96]	; 0x60
   24e1c:	add	r3, r5, #416	; 0x1a0
   24e20:	ldrd	r2, [r3]
   24e24:	strd	r2, [sp, #104]	; 0x68
   24e28:	ldrb	r3, [r5, #436]	; 0x1b4
   24e2c:	and	r3, r3, #1
   24e30:	str	r3, [sp, #124]	; 0x7c
   24e34:	ldr	r3, [r8, #12]
   24e38:	ldr	r2, [r8, #20]
   24e3c:	mov	r1, #24
   24e40:	add	r0, sp, #56	; 0x38
   24e44:	blx	r3
   24e48:	cmp	r0, #23
   24e4c:	bls	25298 <zsav_read_compressed_data+0x4c4>
   24e50:	ldrb	r3, [r5, #436]	; 0x1b4
   24e54:	tst	r3, #1
   24e58:	bne	24fb0 <zsav_read_compressed_data+0x1dc>
   24e5c:	ldrd	r0, [sp, #56]	; 0x38
   24e60:	strd	r0, [sp, #56]	; 0x38
   24e64:	ldrb	r3, [r5, #436]	; 0x1b4
   24e68:	tst	r3, #1
   24e6c:	bne	24fbc <zsav_read_compressed_data+0x1e8>
   24e70:	ldrd	r0, [sp, #64]	; 0x40
   24e74:	strd	r0, [sp, #64]	; 0x40
   24e78:	ldrb	r3, [r5, #436]	; 0x1b4
   24e7c:	tst	r3, #1
   24e80:	bne	24fc8 <zsav_read_compressed_data+0x1f4>
   24e84:	ldrd	r0, [sp, #72]	; 0x48
   24e88:	strd	r0, [sp, #72]	; 0x48
   24e8c:	ldrd	r6, [sp, #56]	; 0x38
   24e90:	ldr	r3, [r8, #8]
   24e94:	ldr	r2, [r8, #20]
   24e98:	mov	r1, #1
   24e9c:	mov	r0, #0
   24ea0:	blx	r3
   24ea4:	sub	r0, r0, #24
   24ea8:	mov	r1, #0
   24eac:	cmp	r7, r1
   24eb0:	cmpeq	r6, r0
   24eb4:	bne	252a8 <zsav_read_compressed_data+0x4d4>
   24eb8:	ldr	r4, [sp, #72]	; 0x48
   24ebc:	ldr	r7, [sp, #76]	; 0x4c
   24ec0:	ldr	r3, [r8, #8]
   24ec4:	ldr	r2, [r8, #20]
   24ec8:	mov	r1, #0
   24ecc:	ldr	r0, [sp, #64]	; 0x40
   24ed0:	blx	r3
   24ed4:	cmn	r0, #1
   24ed8:	beq	252cc <zsav_read_compressed_data+0x4f8>
   24edc:	ldr	r3, [r8, #12]
   24ee0:	ldr	r2, [r8, #20]
   24ee4:	mov	r1, #24
   24ee8:	add	r0, sp, #32
   24eec:	blx	r3
   24ef0:	cmp	r0, #23
   24ef4:	bls	252dc <zsav_read_compressed_data+0x508>
   24ef8:	ldrb	r3, [r5, #436]	; 0x1b4
   24efc:	tst	r3, #1
   24f00:	bne	24fd4 <zsav_read_compressed_data+0x200>
   24f04:	ldrd	r0, [sp, #32]
   24f08:	strd	r0, [sp, #32]
   24f0c:	ldrb	r3, [r5, #436]	; 0x1b4
   24f10:	tst	r3, #1
   24f14:	bne	24fe0 <zsav_read_compressed_data+0x20c>
   24f18:	ldrd	r0, [sp, #40]	; 0x28
   24f1c:	strd	r0, [sp, #40]	; 0x28
   24f20:	ldrb	r3, [r5, #436]	; 0x1b4
   24f24:	tst	r3, #1
   24f28:	bne	24fec <zsav_read_compressed_data+0x218>
   24f2c:	ldr	r0, [sp, #48]	; 0x30
   24f30:	str	r0, [sp, #48]	; 0x30
   24f34:	ldrb	r3, [r5, #436]	; 0x1b4
   24f38:	tst	r3, #1
   24f3c:	bne	24ff8 <zsav_read_compressed_data+0x224>
   24f40:	ldr	r6, [sp, #52]	; 0x34
   24f44:	mov	r2, #24
   24f48:	mov	r3, #0
   24f4c:	subs	r0, r4, #24
   24f50:	sbc	r1, r7, #0
   24f54:	bl	25ba4 <__aeabi_uldivmod>
   24f58:	mov	r7, r0
   24f5c:	str	r0, [sp, #20]
   24f60:	str	r6, [sp, #52]	; 0x34
   24f64:	cmp	r6, r0
   24f68:	bne	252ec <zsav_read_compressed_data+0x518>
   24f6c:	cmp	r0, #0
   24f70:	bne	25008 <zsav_read_compressed_data+0x234>
   24f74:	add	r4, r0, r0, lsl #1
   24f78:	lsl	r4, r4, #3
   24f7c:	ldr	r3, [r8, #12]
   24f80:	ldr	r2, [r8, #20]
   24f84:	mov	r1, r4
   24f88:	mov	r0, #0
   24f8c:	blx	r3
   24f90:	cmp	r4, r0
   24f94:	movls	r3, #0
   24f98:	strls	r3, [sp, #4]
   24f9c:	bls	250e4 <zsav_read_compressed_data+0x310>
   24fa0:	mov	r3, #0
   24fa4:	str	r3, [sp, #4]
   24fa8:	mov	r7, #2
   24fac:	b	252b4 <zsav_read_compressed_data+0x4e0>
   24fb0:	ldrd	r0, [sp, #56]	; 0x38
   24fb4:	bl	3d70 <byteswap8@plt>
   24fb8:	b	24e60 <zsav_read_compressed_data+0x8c>
   24fbc:	ldrd	r0, [sp, #64]	; 0x40
   24fc0:	bl	3d70 <byteswap8@plt>
   24fc4:	b	24e74 <zsav_read_compressed_data+0xa0>
   24fc8:	ldrd	r0, [sp, #72]	; 0x48
   24fcc:	bl	3d70 <byteswap8@plt>
   24fd0:	b	24e88 <zsav_read_compressed_data+0xb4>
   24fd4:	ldrd	r0, [sp, #32]
   24fd8:	bl	3d70 <byteswap8@plt>
   24fdc:	b	24f08 <zsav_read_compressed_data+0x134>
   24fe0:	ldrd	r0, [sp, #40]	; 0x28
   24fe4:	bl	3d70 <byteswap8@plt>
   24fe8:	b	24f1c <zsav_read_compressed_data+0x148>
   24fec:	ldr	r0, [sp, #48]	; 0x30
   24ff0:	bl	3d88 <byteswap4@plt>
   24ff4:	b	24f30 <zsav_read_compressed_data+0x15c>
   24ff8:	ldr	r0, [sp, #52]	; 0x34
   24ffc:	bl	3d88 <byteswap4@plt>
   25000:	mov	r6, r0
   25004:	b	24f44 <zsav_read_compressed_data+0x170>
   25008:	add	r0, r0, r0, lsl #1
   2500c:	lsl	r0, r0, #3
   25010:	bl	422c <readstat_malloc@plt>
   25014:	subs	r4, r0, #0
   25018:	str	r4, [sp, #4]
   2501c:	beq	252fc <zsav_read_compressed_data+0x528>
   25020:	add	sl, r7, r7, lsl #1
   25024:	lsl	sl, sl, #3
   25028:	ldr	r3, [r8, #12]
   2502c:	ldr	r2, [r8, #20]
   25030:	mov	r1, sl
   25034:	mov	r0, r4
   25038:	blx	r3
   2503c:	cmp	sl, r0
   25040:	bhi	25304 <zsav_read_compressed_data+0x530>
   25044:	cmp	r7, #0
   25048:	ble	250e4 <zsav_read_compressed_data+0x310>
   2504c:	add	sl, r4, sl
   25050:	b	25090 <zsav_read_compressed_data+0x2bc>
   25054:	ldrd	r0, [r4]
   25058:	bl	3d70 <byteswap8@plt>
   2505c:	b	250a0 <zsav_read_compressed_data+0x2cc>
   25060:	ldrd	r0, [r4, #8]
   25064:	bl	3d70 <byteswap8@plt>
   25068:	b	250b8 <zsav_read_compressed_data+0x2e4>
   2506c:	ldr	r0, [r6, #16]
   25070:	bl	3d88 <byteswap4@plt>
   25074:	b	250cc <zsav_read_compressed_data+0x2f8>
   25078:	ldr	r0, [r6, #20]
   2507c:	bl	3d88 <byteswap4@plt>
   25080:	str	r0, [r6, #20]
   25084:	add	r4, r4, #24
   25088:	cmp	r4, sl
   2508c:	beq	25314 <zsav_read_compressed_data+0x540>
   25090:	ldrb	r3, [r5, #436]	; 0x1b4
   25094:	tst	r3, #1
   25098:	bne	25054 <zsav_read_compressed_data+0x280>
   2509c:	ldrd	r0, [r4]
   250a0:	mov	r6, r4
   250a4:	strd	r0, [r4]
   250a8:	ldrb	r3, [r5, #436]	; 0x1b4
   250ac:	tst	r3, #1
   250b0:	bne	25060 <zsav_read_compressed_data+0x28c>
   250b4:	ldrd	r0, [r4, #8]
   250b8:	strd	r0, [r6, #8]
   250bc:	ldrb	r3, [r5, #436]	; 0x1b4
   250c0:	tst	r3, #1
   250c4:	bne	2506c <zsav_read_compressed_data+0x298>
   250c8:	ldr	r0, [r6, #16]
   250cc:	str	r0, [r6, #16]
   250d0:	ldrb	r3, [r5, #436]	; 0x1b4
   250d4:	tst	r3, #1
   250d8:	bne	25078 <zsav_read_compressed_data+0x2a4>
   250dc:	ldr	r0, [r6, #20]
   250e0:	b	25080 <zsav_read_compressed_data+0x2ac>
   250e4:	lsls	r9, r9, #3
   250e8:	bne	25100 <zsav_read_compressed_data+0x32c>
   250ec:	cmp	r7, #0
   250f0:	movne	sl, #0
   250f4:	bne	25320 <zsav_read_compressed_data+0x54c>
   250f8:	mov	r7, r9
   250fc:	b	252b4 <zsav_read_compressed_data+0x4e0>
   25100:	mov	r0, r9
   25104:	bl	422c <readstat_malloc@plt>
   25108:	subs	sl, r0, #0
   2510c:	beq	2530c <zsav_read_compressed_data+0x538>
   25110:	cmp	r7, #0
   25114:	bne	25320 <zsav_read_compressed_data+0x54c>
   25118:	mov	fp, #0
   2511c:	str	fp, [sp, #8]
   25120:	mov	r7, fp
   25124:	b	25230 <zsav_read_compressed_data+0x45c>
   25128:	ldr	r3, [sp, #28]
   2512c:	add	r3, r3, #1
   25130:	str	r3, [sp, #28]
   25134:	ldr	r2, [sp, #16]
   25138:	add	r2, r2, #24
   2513c:	str	r2, [sp, #16]
   25140:	ldr	r2, [sp, #20]
   25144:	cmp	r2, r3
   25148:	bne	25344 <zsav_read_compressed_data+0x570>
   2514c:	mov	r7, r0
   25150:	b	25228 <zsav_read_compressed_data+0x454>
   25154:	mov	r2, r5
   25158:	mov	r1, r9
   2515c:	mov	r0, sl
   25160:	blx	r7
   25164:	cmp	r0, #0
   25168:	bne	25290 <zsav_read_compressed_data+0x4bc>
   2516c:	ldr	r6, [sp, #12]
   25170:	b	251c8 <zsav_read_compressed_data+0x3f4>
   25174:	cmp	r0, #0
   25178:	beq	25128 <zsav_read_compressed_data+0x354>
   2517c:	add	r3, fp, r4
   25180:	str	r3, [sp, #80]	; 0x50
   25184:	ldr	r3, [sp, #140]	; 0x8c
   25188:	sub	r4, r3, r4
   2518c:	str	r4, [sp, #84]	; 0x54
   25190:	add	r3, sl, r6
   25194:	str	r3, [sp, #88]	; 0x58
   25198:	sub	r6, r9, r6
   2519c:	str	r6, [sp, #92]	; 0x5c
   251a0:	ldr	r0, [sp]
   251a4:	bl	4214 <sav_decompress_row@plt>
   251a8:	ldr	r4, [sp, #140]	; 0x8c
   251ac:	ldr	r3, [sp, #84]	; 0x54
   251b0:	sub	r4, r4, r3
   251b4:	ldr	r3, [sp, #128]	; 0x80
   251b8:	cmp	r3, #2
   251bc:	beq	25154 <zsav_read_compressed_data+0x380>
   251c0:	ldr	r6, [sp, #92]	; 0x5c
   251c4:	sub	r6, r9, r6
   251c8:	ldr	r0, [sp, #128]	; 0x80
   251cc:	cmp	r0, #3
   251d0:	beq	25224 <zsav_read_compressed_data+0x450>
   251d4:	ldr	r3, [r5, #356]	; 0x164
   251d8:	cmp	r3, #0
   251dc:	ble	25174 <zsav_read_compressed_data+0x3a0>
   251e0:	ldr	r2, [r5, #364]	; 0x16c
   251e4:	cmp	r3, r2
   251e8:	bne	25174 <zsav_read_compressed_data+0x3a0>
   251ec:	mov	r7, #0
   251f0:	b	25228 <zsav_read_compressed_data+0x454>
   251f4:	mov	r7, #15
   251f8:	b	25228 <zsav_read_compressed_data+0x454>
   251fc:	mov	r7, #3
   25200:	b	25228 <zsav_read_compressed_data+0x454>
   25204:	mov	r7, #2
   25208:	b	25228 <zsav_read_compressed_data+0x454>
   2520c:	mov	r7, #3
   25210:	b	25228 <zsav_read_compressed_data+0x454>
   25214:	mov	r7, #5
   25218:	b	25228 <zsav_read_compressed_data+0x454>
   2521c:	mov	r7, #5
   25220:	b	25228 <zsav_read_compressed_data+0x454>
   25224:	mov	r7, #0
   25228:	cmp	sl, #0
   2522c:	beq	25238 <zsav_read_compressed_data+0x464>
   25230:	mov	r0, sl
   25234:	bl	3eb4 <free@plt>
   25238:	ldr	r3, [sp, #4]
   2523c:	cmp	r3, #0
   25240:	beq	2524c <zsav_read_compressed_data+0x478>
   25244:	ldr	r0, [sp, #4]
   25248:	bl	3eb4 <free@plt>
   2524c:	ldr	r3, [sp, #8]
   25250:	cmp	r3, #0
   25254:	beq	25260 <zsav_read_compressed_data+0x48c>
   25258:	mov	r0, r3
   2525c:	bl	3eb4 <free@plt>
   25260:	cmp	fp, #0
   25264:	beq	25270 <zsav_read_compressed_data+0x49c>
   25268:	mov	r0, fp
   2526c:	bl	3eb4 <free@plt>
   25270:	mov	r0, r7
   25274:	add	sp, sp, #148	; 0x94
   25278:	ldrd	r4, [sp]
   2527c:	ldrd	r6, [sp, #8]
   25280:	ldrd	r8, [sp, #16]
   25284:	ldrd	sl, [sp, #24]
   25288:	add	sp, sp, #32
   2528c:	pop	{pc}		; (ldr pc, [sp], #4)
   25290:	mov	r7, r0
   25294:	b	25228 <zsav_read_compressed_data+0x454>
   25298:	mov	r3, #0
   2529c:	str	r3, [sp, #4]
   252a0:	mov	r7, #2
   252a4:	b	252b4 <zsav_read_compressed_data+0x4e0>
   252a8:	mov	r3, #0
   252ac:	str	r3, [sp, #4]
   252b0:	mov	r7, #5
   252b4:	ldr	fp, [sp, #4]
   252b8:	cmp	fp, #0
   252bc:	movne	fp, #0
   252c0:	strne	fp, [sp, #8]
   252c4:	bne	25244 <zsav_read_compressed_data+0x470>
   252c8:	b	25260 <zsav_read_compressed_data+0x48c>
   252cc:	mov	r3, #0
   252d0:	str	r3, [sp, #4]
   252d4:	mov	r7, #15
   252d8:	b	252b4 <zsav_read_compressed_data+0x4e0>
   252dc:	mov	r3, #0
   252e0:	str	r3, [sp, #4]
   252e4:	mov	r7, #2
   252e8:	b	252b4 <zsav_read_compressed_data+0x4e0>
   252ec:	mov	r3, #0
   252f0:	str	r3, [sp, #4]
   252f4:	mov	r7, #5
   252f8:	b	252b4 <zsav_read_compressed_data+0x4e0>
   252fc:	mov	r7, #3
   25300:	b	252b4 <zsav_read_compressed_data+0x4e0>
   25304:	mov	r7, #2
   25308:	b	252b4 <zsav_read_compressed_data+0x4e0>
   2530c:	mov	r7, #3
   25310:	b	252b4 <zsav_read_compressed_data+0x4e0>
   25314:	lsls	r9, r9, #3
   25318:	moveq	sl, #0
   2531c:	bne	25100 <zsav_read_compressed_data+0x32c>
   25320:	ldr	r3, [sp, #4]
   25324:	str	r3, [sp, #16]
   25328:	mov	r6, #0
   2532c:	str	r6, [sp, #28]
   25330:	mov	fp, r6
   25334:	str	r6, [sp, #8]
   25338:	add	r3, sp, #140	; 0x8c
   2533c:	str	r3, [sp, #24]
   25340:	ldr	r7, [sp]
   25344:	ldr	r0, [sp, #16]
   25348:	mov	r4, r0
   2534c:	ldr	r3, [r8, #8]
   25350:	ldr	r2, [r8, #20]
   25354:	mov	r1, #0
   25358:	ldr	r0, [r0, #8]
   2535c:	blx	r3
   25360:	cmn	r0, #1
   25364:	beq	251f4 <zsav_read_compressed_data+0x420>
   25368:	ldr	r0, [sp, #16]
   2536c:	ldr	r1, [r0, #20]
   25370:	ldr	r0, [sp, #8]
   25374:	bl	42e0 <readstat_realloc@plt>
   25378:	subs	r3, r0, #0
   2537c:	mov	r0, r3
   25380:	str	r3, [sp, #8]
   25384:	beq	251fc <zsav_read_compressed_data+0x428>
   25388:	ldr	r3, [r8, #12]
   2538c:	ldr	r2, [r8, #20]
   25390:	ldr	r1, [r4, #20]
   25394:	blx	r3
   25398:	ldr	r3, [r4, #20]
   2539c:	cmp	r0, r3
   253a0:	bne	25204 <zsav_read_compressed_data+0x430>
   253a4:	ldr	r1, [r4, #16]
   253a8:	str	r1, [sp, #140]	; 0x8c
   253ac:	mov	r0, fp
   253b0:	bl	42e0 <readstat_realloc@plt>
   253b4:	subs	fp, r0, #0
   253b8:	beq	2520c <zsav_read_compressed_data+0x438>
   253bc:	ldr	r3, [r4, #20]
   253c0:	ldr	r2, [sp, #8]
   253c4:	ldr	r1, [sp, #24]
   253c8:	mov	r0, fp
   253cc:	bl	3f8c <uncompress@plt>
   253d0:	cmp	r0, #0
   253d4:	bne	25214 <zsav_read_compressed_data+0x440>
   253d8:	ldr	r2, [r4, #16]
   253dc:	ldr	r3, [sp, #140]	; 0x8c
   253e0:	cmp	r2, r3
   253e4:	bne	2521c <zsav_read_compressed_data+0x448>
   253e8:	mov	r3, #1
   253ec:	str	r3, [sp, #128]	; 0x80
   253f0:	mov	r4, r0
   253f4:	add	r3, sp, #80	; 0x50
   253f8:	str	r3, [sp]
   253fc:	str	r0, [sp, #12]
   25400:	b	2517c <zsav_read_compressed_data+0x3a8>

00025404 <zsav_write_compressed_row>:
   25404:	strd	r4, [sp, #-16]!
   25408:	str	r6, [sp, #8]
   2540c:	str	lr, [sp, #12]
   25410:	mov	r4, r0
   25414:	ldr	r5, [r0, #300]	; 0x12c
   25418:	mov	r3, r0
   2541c:	ldr	r0, [r5]
   25420:	bl	4460 <sav_compress_row@plt>
   25424:	ldr	r2, [r4, #84]	; 0x54
   25428:	add	r2, r2, #1
   2542c:	ldr	r1, [r4, #80]	; 0x50
   25430:	mov	r3, r5
   25434:	cmp	r2, r1
   25438:	movne	r2, #0
   2543c:	moveq	r2, #1
   25440:	mov	r1, r0
   25444:	ldr	r0, [r5]
   25448:	bl	44b4 <zsav_compress_row@plt>
   2544c:	cmp	r0, #2
   25450:	movcc	r0, #0
   25454:	movcs	r0, #13
   25458:	ldrd	r4, [sp]
   2545c:	ldr	r6, [sp, #8]
   25460:	add	sp, sp, #12
   25464:	pop	{pc}		; (ldr pc, [sp], #4)

00025468 <zsav_end_data>:
   25468:	strd	r4, [sp, #-36]!	; 0xffffffdc
   2546c:	strd	r6, [sp, #8]
   25470:	strd	r8, [sp, #16]
   25474:	strd	sl, [sp, #24]
   25478:	str	lr, [sp, #32]
   2547c:	sub	sp, sp, #52	; 0x34
   25480:	mov	r5, r0
   25484:	ldr	r4, [r0, #300]	; 0x12c
   25488:	ldr	r3, [r4, #24]
   2548c:	ldr	r2, [r4, #28]
   25490:	str	r3, [sp, #24]
   25494:	str	r2, [sp, #28]
   25498:	adds	r3, r3, #24
   2549c:	adc	r2, r2, #0
   254a0:	str	r3, [sp, #32]
   254a4:	str	r2, [sp, #36]	; 0x24
   254a8:	ldr	r0, [r4, #8]
   254ac:	add	r2, r0, #1
   254b0:	add	r2, r2, r2, lsl #1
   254b4:	lsl	r2, r2, #3
   254b8:	asr	r3, r2, #31
   254bc:	strd	r2, [sp, #40]	; 0x28
   254c0:	cmp	r0, #0
   254c4:	ble	254f4 <zsav_end_data+0x8c>
   254c8:	mov	r1, #0
   254cc:	ldr	r3, [r4, #4]
   254d0:	ldr	r3, [r3, r1, lsl #2]
   254d4:	ldr	ip, [r3, #4]
   254d8:	ldrd	r2, [sp, #32]
   254dc:	adds	r6, r2, ip
   254e0:	adc	r7, r3, ip, asr #31
   254e4:	strd	r6, [sp, #32]
   254e8:	add	r1, r1, #1
   254ec:	cmp	r0, r1
   254f0:	bne	254cc <zsav_end_data+0x64>
   254f4:	mov	r2, #8
   254f8:	add	r1, sp, #24
   254fc:	mov	r0, r5
   25500:	bl	4454 <readstat_write_bytes@plt>
   25504:	cmp	r0, #0
   25508:	beq	25528 <zsav_end_data+0xc0>
   2550c:	add	sp, sp, #52	; 0x34
   25510:	ldrd	r4, [sp]
   25514:	ldrd	r6, [sp, #8]
   25518:	ldrd	r8, [sp, #16]
   2551c:	ldrd	sl, [sp, #24]
   25520:	add	sp, sp, #32
   25524:	pop	{pc}		; (ldr pc, [sp], #4)
   25528:	mov	r2, #8
   2552c:	add	r1, sp, #32
   25530:	mov	r0, r5
   25534:	bl	4454 <readstat_write_bytes@plt>
   25538:	cmp	r0, #0
   2553c:	bne	2550c <zsav_end_data+0xa4>
   25540:	mov	r2, #8
   25544:	add	r1, sp, #40	; 0x28
   25548:	mov	r0, r5
   2554c:	bl	4454 <readstat_write_bytes@plt>
   25550:	cmp	r0, #0
   25554:	bne	2550c <zsav_end_data+0xa4>
   25558:	ldr	r3, [r4, #8]
   2555c:	cmp	r3, #0
   25560:	ble	25598 <zsav_end_data+0x130>
   25564:	mov	r6, #0
   25568:	ldr	r3, [r4, #4]
   2556c:	ldr	r3, [r3, r6, lsl #2]
   25570:	ldr	r2, [r3, #4]
   25574:	ldr	r1, [r3, #64]	; 0x40
   25578:	mov	r0, r5
   2557c:	bl	4454 <readstat_write_bytes@plt>
   25580:	cmp	r0, #0
   25584:	bne	2550c <zsav_end_data+0xa4>
   25588:	add	r6, r6, #1
   2558c:	ldr	r3, [r4, #8]
   25590:	cmp	r6, r3
   25594:	blt	25568 <zsav_end_data+0x100>
   25598:	mvn	r2, #99	; 0x63
   2559c:	mvn	r3, #0
   255a0:	strd	r2, [sp, #16]
   255a4:	mov	r2, #0
   255a8:	mov	r3, #0
   255ac:	strd	r2, [sp, #24]
   255b0:	ldr	r3, [r4, #16]
   255b4:	str	r3, [sp]
   255b8:	ldr	r3, [r4, #8]
   255bc:	str	r3, [sp, #4]
   255c0:	mov	r2, #8
   255c4:	add	r1, sp, #16
   255c8:	mov	r0, r5
   255cc:	bl	4454 <readstat_write_bytes@plt>
   255d0:	cmp	r0, #0
   255d4:	bne	2550c <zsav_end_data+0xa4>
   255d8:	mov	r2, #8
   255dc:	add	r1, sp, #24
   255e0:	mov	r0, r5
   255e4:	bl	4454 <readstat_write_bytes@plt>
   255e8:	cmp	r0, #0
   255ec:	bne	2550c <zsav_end_data+0xa4>
   255f0:	mov	r2, #4
   255f4:	mov	r1, sp
   255f8:	mov	r0, r5
   255fc:	bl	4454 <readstat_write_bytes@plt>
   25600:	cmp	r0, #0
   25604:	bne	2550c <zsav_end_data+0xa4>
   25608:	mov	r2, #4
   2560c:	add	r1, sp, r2
   25610:	mov	r0, r5
   25614:	bl	4454 <readstat_write_bytes@plt>
   25618:	cmp	r0, #0
   2561c:	bne	2550c <zsav_end_data+0xa4>
   25620:	ldr	r3, [r4, #24]
   25624:	ldr	r2, [r4, #28]
   25628:	str	r3, [sp, #32]
   2562c:	str	r2, [sp, #36]	; 0x24
   25630:	adds	r3, r3, #24
   25634:	adc	r2, r2, #0
   25638:	str	r3, [sp, #40]	; 0x28
   2563c:	str	r2, [sp, #44]	; 0x2c
   25640:	ldr	r3, [r4, #8]
   25644:	cmp	r3, #0
   25648:	ble	2550c <zsav_end_data+0xa4>
   2564c:	mov	r6, #0
   25650:	add	r8, sp, #32
   25654:	mov	r7, #8
   25658:	add	r9, sp, #40	; 0x28
   2565c:	ldr	r3, [r4, #4]
   25660:	ldr	r3, [r3, r6, lsl #2]
   25664:	ldr	r2, [r3]
   25668:	str	r2, [sp, #8]
   2566c:	ldr	r3, [r3, #4]
   25670:	str	r3, [sp, #12]
   25674:	mov	r2, r7
   25678:	mov	r1, r8
   2567c:	mov	r0, r5
   25680:	bl	4454 <readstat_write_bytes@plt>
   25684:	cmp	r0, #0
   25688:	bne	2550c <zsav_end_data+0xa4>
   2568c:	mov	r2, r7
   25690:	mov	r1, r9
   25694:	mov	r0, r5
   25698:	bl	4454 <readstat_write_bytes@plt>
   2569c:	cmp	r0, #0
   256a0:	bne	2550c <zsav_end_data+0xa4>
   256a4:	mov	r2, #4
   256a8:	add	r1, sp, #8
   256ac:	mov	r0, r5
   256b0:	bl	4454 <readstat_write_bytes@plt>
   256b4:	cmp	r0, #0
   256b8:	bne	2550c <zsav_end_data+0xa4>
   256bc:	mov	r2, #4
   256c0:	add	r1, sp, #12
   256c4:	mov	r0, r5
   256c8:	bl	4454 <readstat_write_bytes@plt>
   256cc:	cmp	r0, #0
   256d0:	bne	2550c <zsav_end_data+0xa4>
   256d4:	ldr	r1, [sp, #8]
   256d8:	ldrd	r2, [sp, #32]
   256dc:	adds	sl, r2, r1
   256e0:	adc	fp, r3, r1, asr #31
   256e4:	strd	sl, [sp, #32]
   256e8:	ldr	r1, [sp, #12]
   256ec:	ldrd	r2, [sp, #40]	; 0x28
   256f0:	adds	sl, r2, r1
   256f4:	adc	fp, r3, r1, asr #31
   256f8:	strd	sl, [sp, #40]	; 0x28
   256fc:	add	r6, r6, #1
   25700:	ldr	r3, [r4, #8]
   25704:	cmp	r6, r3
   25708:	blt	2565c <zsav_end_data+0x1f4>
   2570c:	b	2550c <zsav_end_data+0xa4>

00025710 <__aeabi_drsub>:
   25710:	eor	r1, r1, #-2147483648	; 0x80000000
   25714:	b	2571c <__adddf3>

00025718 <__aeabi_dsub>:
   25718:	eor	r3, r3, #-2147483648	; 0x80000000

0002571c <__adddf3>:
   2571c:	push	{r4, r5, lr}
   25720:	lsl	r4, r1, #1
   25724:	lsl	r5, r3, #1
   25728:	teq	r4, r5
   2572c:	teqeq	r0, r2
   25730:	orrsne	ip, r4, r0
   25734:	orrsne	ip, r5, r2
   25738:	mvnsne	ip, r4, asr #21
   2573c:	mvnsne	ip, r5, asr #21
   25740:	beq	2592c <__adddf3+0x210>
   25744:	lsr	r4, r4, #21
   25748:	rsbs	r5, r4, r5, lsr #21
   2574c:	rsblt	r5, r5, #0
   25750:	ble	25770 <__adddf3+0x54>
   25754:	add	r4, r4, r5
   25758:	eor	r2, r0, r2
   2575c:	eor	r3, r1, r3
   25760:	eor	r0, r2, r0
   25764:	eor	r1, r3, r1
   25768:	eor	r2, r0, r2
   2576c:	eor	r3, r1, r3
   25770:	cmp	r5, #54	; 0x36
   25774:	pophi	{r4, r5, pc}
   25778:	tst	r1, #-2147483648	; 0x80000000
   2577c:	lsl	r1, r1, #12
   25780:	mov	ip, #1048576	; 0x100000
   25784:	orr	r1, ip, r1, lsr #12
   25788:	beq	25794 <__adddf3+0x78>
   2578c:	rsbs	r0, r0, #0
   25790:	rsc	r1, r1, #0
   25794:	tst	r3, #-2147483648	; 0x80000000
   25798:	lsl	r3, r3, #12
   2579c:	orr	r3, ip, r3, lsr #12
   257a0:	beq	257ac <__adddf3+0x90>
   257a4:	rsbs	r2, r2, #0
   257a8:	rsc	r3, r3, #0
   257ac:	teq	r4, r5
   257b0:	beq	25914 <__adddf3+0x1f8>
   257b4:	sub	r4, r4, #1
   257b8:	rsbs	lr, r5, #32
   257bc:	blt	257d8 <__adddf3+0xbc>
   257c0:	lsl	ip, r2, lr
   257c4:	adds	r0, r0, r2, lsr r5
   257c8:	adc	r1, r1, #0
   257cc:	adds	r0, r0, r3, lsl lr
   257d0:	adcs	r1, r1, r3, asr r5
   257d4:	b	257f4 <__adddf3+0xd8>
   257d8:	sub	r5, r5, #32
   257dc:	add	lr, lr, #32
   257e0:	cmp	r2, #1
   257e4:	lsl	ip, r3, lr
   257e8:	orrcs	ip, ip, #2
   257ec:	adds	r0, r0, r3, asr r5
   257f0:	adcs	r1, r1, r3, asr #31
   257f4:	and	r5, r1, #-2147483648	; 0x80000000
   257f8:	bpl	25808 <__adddf3+0xec>
   257fc:	rsbs	ip, ip, #0
   25800:	rscs	r0, r0, #0
   25804:	rsc	r1, r1, #0
   25808:	cmp	r1, #1048576	; 0x100000
   2580c:	bcc	2584c <__adddf3+0x130>
   25810:	cmp	r1, #2097152	; 0x200000
   25814:	bcc	25834 <__adddf3+0x118>
   25818:	lsrs	r1, r1, #1
   2581c:	rrxs	r0, r0
   25820:	rrx	ip, ip
   25824:	add	r4, r4, #1
   25828:	lsl	r2, r4, #21
   2582c:	cmn	r2, #4194304	; 0x400000
   25830:	bcs	2598c <__adddf3+0x270>
   25834:	cmp	ip, #-2147483648	; 0x80000000
   25838:	lsrseq	ip, r0, #1
   2583c:	adcs	r0, r0, #0
   25840:	adc	r1, r1, r4, lsl #20
   25844:	orr	r1, r1, r5
   25848:	pop	{r4, r5, pc}
   2584c:	lsls	ip, ip, #1
   25850:	adcs	r0, r0, r0
   25854:	adc	r1, r1, r1
   25858:	tst	r1, #1048576	; 0x100000
   2585c:	sub	r4, r4, #1
   25860:	bne	25834 <__adddf3+0x118>
   25864:	teq	r1, #0
   25868:	moveq	r1, r0
   2586c:	moveq	r0, #0
   25870:	clz	r3, r1
   25874:	addeq	r3, r3, #32
   25878:	sub	r3, r3, #11
   2587c:	subs	r2, r3, #32
   25880:	bge	258a4 <__adddf3+0x188>
   25884:	adds	r2, r2, #12
   25888:	ble	258a0 <__adddf3+0x184>
   2588c:	add	ip, r2, #20
   25890:	rsb	r2, r2, #12
   25894:	lsl	r0, r1, ip
   25898:	lsr	r1, r1, r2
   2589c:	b	258b4 <__adddf3+0x198>
   258a0:	add	r2, r2, #20
   258a4:	rsble	ip, r2, #32
   258a8:	lsl	r1, r1, r2
   258ac:	orrle	r1, r1, r0, lsr ip
   258b0:	lslle	r0, r0, r2
   258b4:	subs	r4, r4, r3
   258b8:	addge	r1, r1, r4, lsl #20
   258bc:	orrge	r1, r1, r5
   258c0:	popge	{r4, r5, pc}
   258c4:	mvn	r4, r4
   258c8:	subs	r4, r4, #31
   258cc:	bge	25908 <__adddf3+0x1ec>
   258d0:	adds	r4, r4, #12
   258d4:	bgt	258f0 <__adddf3+0x1d4>
   258d8:	add	r4, r4, #20
   258dc:	rsb	r2, r4, #32
   258e0:	lsr	r0, r0, r4
   258e4:	orr	r0, r0, r1, lsl r2
   258e8:	orr	r1, r5, r1, lsr r4
   258ec:	pop	{r4, r5, pc}
   258f0:	rsb	r4, r4, #12
   258f4:	rsb	r2, r4, #32
   258f8:	lsr	r0, r0, r2
   258fc:	orr	r0, r0, r1, lsl r4
   25900:	mov	r1, r5
   25904:	pop	{r4, r5, pc}
   25908:	lsr	r0, r1, r4
   2590c:	mov	r1, r5
   25910:	pop	{r4, r5, pc}
   25914:	teq	r4, #0
   25918:	eor	r3, r3, #1048576	; 0x100000
   2591c:	eoreq	r1, r1, #1048576	; 0x100000
   25920:	addeq	r4, r4, #1
   25924:	subne	r5, r5, #1
   25928:	b	257b4 <__adddf3+0x98>
   2592c:	mvns	ip, r4, asr #21
   25930:	mvnsne	ip, r5, asr #21
   25934:	beq	2599c <__adddf3+0x280>
   25938:	teq	r4, r5
   2593c:	teqeq	r0, r2
   25940:	beq	25954 <__adddf3+0x238>
   25944:	orrs	ip, r4, r0
   25948:	moveq	r1, r3
   2594c:	moveq	r0, r2
   25950:	pop	{r4, r5, pc}
   25954:	teq	r1, r3
   25958:	movne	r1, #0
   2595c:	movne	r0, #0
   25960:	popne	{r4, r5, pc}
   25964:	lsrs	ip, r4, #21
   25968:	bne	2597c <__adddf3+0x260>
   2596c:	lsls	r0, r0, #1
   25970:	adcs	r1, r1, r1
   25974:	orrcs	r1, r1, #-2147483648	; 0x80000000
   25978:	pop	{r4, r5, pc}
   2597c:	adds	r4, r4, #4194304	; 0x400000
   25980:	addcc	r1, r1, #1048576	; 0x100000
   25984:	popcc	{r4, r5, pc}
   25988:	and	r5, r1, #-2147483648	; 0x80000000
   2598c:	orr	r1, r5, #2130706432	; 0x7f000000
   25990:	orr	r1, r1, #15728640	; 0xf00000
   25994:	mov	r0, #0
   25998:	pop	{r4, r5, pc}
   2599c:	mvns	ip, r4, asr #21
   259a0:	movne	r1, r3
   259a4:	movne	r0, r2
   259a8:	mvnseq	ip, r5, asr #21
   259ac:	movne	r3, r1
   259b0:	movne	r2, r0
   259b4:	orrs	r4, r0, r1, lsl #12
   259b8:	orrseq	r5, r2, r3, lsl #12
   259bc:	teqeq	r1, r3
   259c0:	orrne	r1, r1, #524288	; 0x80000
   259c4:	pop	{r4, r5, pc}

000259c8 <__aeabi_ui2d>:
   259c8:	teq	r0, #0
   259cc:	moveq	r1, #0
   259d0:	bxeq	lr
   259d4:	push	{r4, r5, lr}
   259d8:	mov	r4, #1024	; 0x400
   259dc:	add	r4, r4, #50	; 0x32
   259e0:	mov	r5, #0
   259e4:	mov	r1, #0
   259e8:	b	25864 <__adddf3+0x148>

000259ec <__aeabi_i2d>:
   259ec:	teq	r0, #0
   259f0:	moveq	r1, #0
   259f4:	bxeq	lr
   259f8:	push	{r4, r5, lr}
   259fc:	mov	r4, #1024	; 0x400
   25a00:	add	r4, r4, #50	; 0x32
   25a04:	ands	r5, r0, #-2147483648	; 0x80000000
   25a08:	rsbmi	r0, r0, #0
   25a0c:	mov	r1, #0
   25a10:	b	25864 <__adddf3+0x148>

00025a14 <__aeabi_f2d>:
   25a14:	lsls	r2, r0, #1
   25a18:	asr	r1, r2, #3
   25a1c:	rrx	r1, r1
   25a20:	lsl	r0, r2, #28
   25a24:	andsne	r3, r2, #-16777216	; 0xff000000
   25a28:	teqne	r3, #-16777216	; 0xff000000
   25a2c:	eorne	r1, r1, #939524096	; 0x38000000
   25a30:	bxne	lr
   25a34:	bics	r2, r2, #-16777216	; 0xff000000
   25a38:	bxeq	lr
   25a3c:	teq	r3, #-16777216	; 0xff000000
   25a40:	orreq	r1, r1, #524288	; 0x80000
   25a44:	bxeq	lr
   25a48:	push	{r4, r5, lr}
   25a4c:	mov	r4, #896	; 0x380
   25a50:	and	r5, r1, #-2147483648	; 0x80000000
   25a54:	bic	r1, r1, #-2147483648	; 0x80000000
   25a58:	b	25864 <__adddf3+0x148>

00025a5c <__aeabi_ul2d>:
   25a5c:	orrs	r2, r0, r1
   25a60:	bxeq	lr
   25a64:	push	{r4, r5, lr}
   25a68:	mov	r5, #0
   25a6c:	b	25a8c <__aeabi_l2d+0x1c>

00025a70 <__aeabi_l2d>:
   25a70:	orrs	r2, r0, r1
   25a74:	bxeq	lr
   25a78:	push	{r4, r5, lr}
   25a7c:	ands	r5, r1, #-2147483648	; 0x80000000
   25a80:	bpl	25a8c <__aeabi_l2d+0x1c>
   25a84:	rsbs	r0, r0, #0
   25a88:	rsc	r1, r1, #0
   25a8c:	mov	r4, #1024	; 0x400
   25a90:	add	r4, r4, #50	; 0x32
   25a94:	lsrs	ip, r1, #22
   25a98:	beq	25808 <__adddf3+0xec>
   25a9c:	mov	r2, #3
   25aa0:	lsrs	ip, ip, #3
   25aa4:	addne	r2, r2, #3
   25aa8:	lsrs	ip, ip, #3
   25aac:	addne	r2, r2, #3
   25ab0:	add	r2, r2, ip, lsr #3
   25ab4:	rsb	r3, r2, #32
   25ab8:	lsl	ip, r0, r3
   25abc:	lsr	r0, r0, r2
   25ac0:	orr	r0, r0, r1, lsl r3
   25ac4:	lsr	r1, r1, r2
   25ac8:	add	r4, r4, r2
   25acc:	b	25808 <__adddf3+0xec>

00025ad0 <__aeabi_ldivmod>:
   25ad0:	cmp	r3, #0
   25ad4:	cmpeq	r2, #0
   25ad8:	bne	25afc <__aeabi_ldivmod+0x2c>
   25adc:	cmp	r1, #0
   25ae0:	movlt	r1, #-2147483648	; 0x80000000
   25ae4:	movlt	r0, #0
   25ae8:	blt	25af8 <__aeabi_ldivmod+0x28>
   25aec:	cmpeq	r0, #0
   25af0:	mvnne	r1, #-2147483648	; 0x80000000
   25af4:	mvnne	r0, #0
   25af8:	b	25be0 <__aeabi_idiv0>
   25afc:	sub	sp, sp, #8
   25b00:	push	{sp, lr}
   25b04:	cmp	r1, #0
   25b08:	blt	25b28 <__aeabi_ldivmod+0x58>
   25b0c:	cmp	r3, #0
   25b10:	blt	25b5c <__aeabi_ldivmod+0x8c>
   25b14:	bl	25c60 <__udivmoddi4>
   25b18:	ldr	lr, [sp, #4]
   25b1c:	add	sp, sp, #8
   25b20:	pop	{r2, r3}
   25b24:	bx	lr
   25b28:	rsbs	r0, r0, #0
   25b2c:	sbc	r1, r1, r1, lsl #1
   25b30:	cmp	r3, #0
   25b34:	blt	25b80 <__aeabi_ldivmod+0xb0>
   25b38:	bl	25c60 <__udivmoddi4>
   25b3c:	ldr	lr, [sp, #4]
   25b40:	add	sp, sp, #8
   25b44:	pop	{r2, r3}
   25b48:	rsbs	r0, r0, #0
   25b4c:	sbc	r1, r1, r1, lsl #1
   25b50:	rsbs	r2, r2, #0
   25b54:	sbc	r3, r3, r3, lsl #1
   25b58:	bx	lr
   25b5c:	rsbs	r2, r2, #0
   25b60:	sbc	r3, r3, r3, lsl #1
   25b64:	bl	25c60 <__udivmoddi4>
   25b68:	ldr	lr, [sp, #4]
   25b6c:	add	sp, sp, #8
   25b70:	pop	{r2, r3}
   25b74:	rsbs	r0, r0, #0
   25b78:	sbc	r1, r1, r1, lsl #1
   25b7c:	bx	lr
   25b80:	rsbs	r2, r2, #0
   25b84:	sbc	r3, r3, r3, lsl #1
   25b88:	bl	25c60 <__udivmoddi4>
   25b8c:	ldr	lr, [sp, #4]
   25b90:	add	sp, sp, #8
   25b94:	pop	{r2, r3}
   25b98:	rsbs	r2, r2, #0
   25b9c:	sbc	r3, r3, r3, lsl #1
   25ba0:	bx	lr

00025ba4 <__aeabi_uldivmod>:
   25ba4:	cmp	r3, #0
   25ba8:	cmpeq	r2, #0
   25bac:	bne	25bc4 <__aeabi_uldivmod+0x20>
   25bb0:	cmp	r1, #0
   25bb4:	cmpeq	r0, #0
   25bb8:	mvnne	r1, #0
   25bbc:	mvnne	r0, #0
   25bc0:	b	25be0 <__aeabi_idiv0>
   25bc4:	sub	sp, sp, #8
   25bc8:	push	{sp, lr}
   25bcc:	bl	25c60 <__udivmoddi4>
   25bd0:	ldr	lr, [sp, #4]
   25bd4:	add	sp, sp, #8
   25bd8:	pop	{r2, r3}
   25bdc:	bx	lr

00025be0 <__aeabi_idiv0>:
   25be0:	push	{r1, lr}
   25be4:	mov	r0, #8
   25be8:	bl	3d7c <raise@plt>
   25bec:	pop	{r1, pc}

00025bf0 <__aeabi_d2lz>:
   25bf0:	vmov	d7, r0, r1
   25bf4:	vcmpe.f64	d7, #0.0
   25bf8:	vmrs	APSR_nzcv, fpscr
   25bfc:	bmi	25c04 <__aeabi_d2lz+0x14>
   25c00:	b	25c20 <__aeabi_d2ulz>
   25c04:	push	{r4, lr}
   25c08:	eor	r1, r1, #-2147483648	; 0x80000000
   25c0c:	bl	25c20 <__aeabi_d2ulz>
   25c10:	rsbs	r0, r0, #0
   25c14:	rsc	r1, r1, #0
   25c18:	pop	{r4, pc}
   25c1c:	andeq	r0, r0, r0

00025c20 <__aeabi_d2ulz>:
   25c20:	vmov	d6, r0, r1
   25c24:	vldr	d7, [pc, #36]	; 25c50 <__aeabi_d2ulz+0x30>
   25c28:	vldr	d5, [pc, #40]	; 25c58 <__aeabi_d2ulz+0x38>
   25c2c:	vmul.f64	d7, d6, d7
   25c30:	vcvt.u32.f64	s14, d7
   25c34:	vcvt.f64.u32	d4, s14
   25c38:	vmov	r1, s14
   25c3c:	vmls.f64	d6, d4, d5
   25c40:	vcvt.u32.f64	s15, d6
   25c44:	vmov	r0, s15
   25c48:	bx	lr
   25c4c:	nop			; (mov r0, r0)
   25c50:	.word	0x00000000
   25c54:	.word	0x3df00000
   25c58:	.word	0x00000000
   25c5c:	.word	0x41f00000

00025c60 <__udivmoddi4>:
   25c60:	cmp	r1, r3
   25c64:	cmpeq	r0, r2
   25c68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25c6c:	mov	r4, r0
   25c70:	movcc	r0, #0
   25c74:	mov	r5, r1
   25c78:	ldr	lr, [sp, #36]	; 0x24
   25c7c:	movcc	r1, r0
   25c80:	bcc	25d7c <__udivmoddi4+0x11c>
   25c84:	cmp	r3, #0
   25c88:	clzeq	ip, r2
   25c8c:	clzne	ip, r3
   25c90:	addeq	ip, ip, #32
   25c94:	cmp	r5, #0
   25c98:	clzeq	r1, r4
   25c9c:	addeq	r1, r1, #32
   25ca0:	clzne	r1, r5
   25ca4:	sub	ip, ip, r1
   25ca8:	sub	sl, ip, #32
   25cac:	lsl	r9, r3, ip
   25cb0:	rsb	fp, ip, #32
   25cb4:	orr	r9, r9, r2, lsl sl
   25cb8:	orr	r9, r9, r2, lsr fp
   25cbc:	lsl	r8, r2, ip
   25cc0:	cmp	r5, r9
   25cc4:	cmpeq	r4, r8
   25cc8:	movcc	r0, #0
   25ccc:	movcc	r1, r0
   25cd0:	bcc	25cec <__udivmoddi4+0x8c>
   25cd4:	mov	r0, #1
   25cd8:	subs	r4, r4, r8
   25cdc:	lsl	r1, r0, sl
   25ce0:	orr	r1, r1, r0, lsr fp
   25ce4:	lsl	r0, r0, ip
   25ce8:	sbc	r5, r5, r9
   25cec:	cmp	ip, #0
   25cf0:	beq	25d7c <__udivmoddi4+0x11c>
   25cf4:	lsr	r6, r8, #1
   25cf8:	orr	r6, r6, r9, lsl #31
   25cfc:	lsr	r7, r9, #1
   25d00:	mov	r2, ip
   25d04:	b	25d28 <__udivmoddi4+0xc8>
   25d08:	subs	r3, r4, r6
   25d0c:	sbc	r8, r5, r7
   25d10:	adds	r3, r3, r3
   25d14:	adc	r8, r8, r8
   25d18:	adds	r4, r3, #1
   25d1c:	adc	r5, r8, #0
   25d20:	subs	r2, r2, #1
   25d24:	beq	25d44 <__udivmoddi4+0xe4>
   25d28:	cmp	r5, r7
   25d2c:	cmpeq	r4, r6
   25d30:	bcs	25d08 <__udivmoddi4+0xa8>
   25d34:	adds	r4, r4, r4
   25d38:	adc	r5, r5, r5
   25d3c:	subs	r2, r2, #1
   25d40:	bne	25d28 <__udivmoddi4+0xc8>
   25d44:	lsr	r3, r4, ip
   25d48:	orr	r3, r3, r5, lsl fp
   25d4c:	lsr	r2, r5, ip
   25d50:	orr	r3, r3, r5, lsr sl
   25d54:	adds	r0, r0, r4
   25d58:	mov	r4, r3
   25d5c:	lsl	r3, r2, ip
   25d60:	orr	r3, r3, r4, lsl sl
   25d64:	lsl	ip, r4, ip
   25d68:	orr	r3, r3, r4, lsr fp
   25d6c:	adc	r1, r1, r5
   25d70:	subs	r0, r0, ip
   25d74:	mov	r5, r2
   25d78:	sbc	r1, r1, r3
   25d7c:	cmp	lr, #0
   25d80:	strdne	r4, [lr]
   25d84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

Disassembly of section .fini:

00025d88 <_fini>:
   25d88:	push	{r3, lr}
   25d8c:	pop	{r3, pc}
