
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010e8c <.init>:
   10e8c:	push	{r3, lr}
   10e90:	bl	1114c <Mat_VarReadNextInfo@plt+0x48>
   10e94:	pop	{r3, pc}

Disassembly of section .plt:

00010e98 <Mat_VarGetNumberOfFields@plt-0x14>:
   10e98:	push	{lr}		; (str lr, [sp, #-4]!)
   10e9c:	ldr	lr, [pc, #4]	; 10ea8 <Mat_VarGetNumberOfFields@plt-0x4>
   10ea0:	add	lr, pc, lr
   10ea4:	ldr	pc, [lr, #8]!
   10ea8:	andeq	r4, r1, r8, asr r1

00010eac <Mat_VarGetNumberOfFields@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #20, 20	; 0x14000
   10eb4:	ldr	pc, [ip, #344]!	; 0x158

00010eb8 <Mat_SetVerbose@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #20, 20	; 0x14000
   10ec0:	ldr	pc, [ip, #336]!	; 0x150

00010ec4 <Mat_LogClose@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #20, 20	; 0x14000
   10ecc:	ldr	pc, [ip, #328]!	; 0x148

00010ed0 <Mat_VarReadNext@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #20, 20	; 0x14000
   10ed8:	ldr	pc, [ip, #320]!	; 0x140

00010edc <strcmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #20, 20	; 0x14000
   10ee4:	ldr	pc, [ip, #312]!	; 0x138

00010ee8 <Mat_Open@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #20, 20	; 0x14000
   10ef0:	ldr	pc, [ip, #304]!	; 0x130

00010ef4 <printf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #20, 20	; 0x14000
   10efc:	ldr	pc, [ip, #296]!	; 0x128

00010f00 <Mat_VarGetCells@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #20, 20	; 0x14000
   10f08:	ldr	pc, [ip, #288]!	; 0x120

00010f0c <Mat_VarGetCell@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #20, 20	; 0x14000
   10f14:	ldr	pc, [ip, #280]!	; 0x118

00010f18 <Mat_VarCreate@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #20, 20	; 0x14000
   10f20:	ldr	pc, [ip, #272]!	; 0x110

00010f24 <free@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #20, 20	; 0x14000
   10f2c:	ldr	pc, [ip, #264]!	; 0x108

00010f30 <Mat_Warning@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #20, 20	; 0x14000
   10f38:	ldr	pc, [ip, #256]!	; 0x100

00010f3c <Mat_VarReadDataLinear@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #20, 20	; 0x14000
   10f44:	ldr	pc, [ip, #248]!	; 0xf8

00010f48 <Mat_Message@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #20, 20	; 0x14000
   10f50:	ldr	pc, [ip, #240]!	; 0xf0

00010f54 <Mat_VarReadData@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #20, 20	; 0x14000
   10f5c:	ldr	pc, [ip, #232]!	; 0xe8

00010f60 <Mat_VarReadDataAll@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #20, 20	; 0x14000
   10f68:	ldr	pc, [ip, #224]!	; 0xe0

00010f6c <Mat_VarReadInfo@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #20, 20	; 0x14000
   10f74:	ldr	pc, [ip, #216]!	; 0xd8

00010f78 <fwrite@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #20, 20	; 0x14000
   10f80:	ldr	pc, [ip, #208]!	; 0xd0

00010f84 <Mat_VarGetStructFieldnames@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #20, 20	; 0x14000
   10f8c:	ldr	pc, [ip, #200]!	; 0xc8

00010f90 <getenv@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #20, 20	; 0x14000
   10f98:	ldr	pc, [ip, #192]!	; 0xc0

00010f9c <puts@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #20, 20	; 0x14000
   10fa4:	ldr	pc, [ip, #184]!	; 0xb8

00010fa8 <malloc@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #20, 20	; 0x14000
   10fb0:	ldr	pc, [ip, #176]!	; 0xb0

00010fb4 <log10@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #20, 20	; 0x14000
   10fbc:	ldr	pc, [ip, #168]!	; 0xa8

00010fc0 <__libc_start_main@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #20, 20	; 0x14000
   10fc8:	ldr	pc, [ip, #160]!	; 0xa0

00010fcc <__gmon_start__@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #20, 20	; 0x14000
   10fd4:	ldr	pc, [ip, #152]!	; 0x98

00010fd8 <exit@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #20, 20	; 0x14000
   10fe0:	ldr	pc, [ip, #144]!	; 0x90

00010fe4 <Mat_VarFree@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #20, 20	; 0x14000
   10fec:	ldr	pc, [ip, #136]!	; 0x88

00010ff0 <Mat_SizeOf@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #20, 20	; 0x14000
   10ff8:	ldr	pc, [ip, #128]!	; 0x80

00010ffc <strlen@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #20, 20	; 0x14000
   11004:	ldr	pc, [ip, #120]!	; 0x78

00011008 <strchr@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #20, 20	; 0x14000
   11010:	ldr	pc, [ip, #112]!	; 0x70

00011014 <warnx@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #20, 20	; 0x14000
   1101c:	ldr	pc, [ip, #104]!	; 0x68

00011020 <fprintf@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #20, 20	; 0x14000
   11028:	ldr	pc, [ip, #96]!	; 0x60

0001102c <Mat_GetLibraryVersion@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #20, 20	; 0x14000
   11034:	ldr	pc, [ip, #88]!	; 0x58

00011038 <Mat_VarPrint@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #20, 20	; 0x14000
   11040:	ldr	pc, [ip, #80]!	; 0x50

00011044 <memset@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #20, 20	; 0x14000
   1104c:	ldr	pc, [ip, #72]!	; 0x48

00011050 <putchar@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #20, 20	; 0x14000
   11058:	ldr	pc, [ip, #64]!	; 0x40

0001105c <Mat_Close@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #20, 20	; 0x14000
   11064:	ldr	pc, [ip, #56]!	; 0x38

00011068 <Mat_Critical@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #20, 20	; 0x14000
   11070:	ldr	pc, [ip, #48]!	; 0x30

00011074 <Mat_LogInitFunc@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #20, 20	; 0x14000
   1107c:	ldr	pc, [ip, #40]!	; 0x28

00011080 <Mat_VerbMessage@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #20, 20	; 0x14000
   11088:	ldr	pc, [ip, #32]!

0001108c <Mat_VarGetCellsLinear@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #20, 20	; 0x14000
   11094:	ldr	pc, [ip, #24]!

00011098 <sprintf@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #20, 20	; 0x14000
   110a0:	ldr	pc, [ip, #16]!

000110a4 <Mat_Help@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #20, 20	; 0x14000
   110ac:	ldr	pc, [ip, #8]!

000110b0 <atoi@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #20, 20	; 0x14000
   110b8:	ldr	pc, [ip, #0]!

000110bc <Mat_VarGetStructFieldByName@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #77824	; 0x13000
   110c4:	ldr	pc, [ip, #4088]!	; 0xff8

000110c8 <Mat_SizeOfClass@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #77824	; 0x13000
   110d0:	ldr	pc, [ip, #4080]!	; 0xff0

000110d4 <Mat_VarGetSize@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #77824	; 0x13000
   110dc:	ldr	pc, [ip, #4072]!	; 0xfe8

000110e0 <strncmp@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #77824	; 0x13000
   110e8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110ec <abort@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #77824	; 0x13000
   110f4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110f8 <Mat_VarDuplicate@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #77824	; 0x13000
   11100:	ldr	pc, [ip, #4048]!	; 0xfd0

00011104 <Mat_VarReadNextInfo@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #77824	; 0x13000
   1110c:	ldr	pc, [ip, #4040]!	; 0xfc8

Disassembly of section .text:

00011110 <getopt@@Base-0x1d80>:
   11110:	mov	fp, #0
   11114:	mov	lr, #0
   11118:	pop	{r1}		; (ldr r1, [sp], #4)
   1111c:	mov	r2, sp
   11120:	push	{r2}		; (str r2, [sp, #-4]!)
   11124:	push	{r0}		; (str r0, [sp, #-4]!)
   11128:	ldr	ip, [pc, #16]	; 11140 <Mat_VarReadNextInfo@plt+0x3c>
   1112c:	push	{ip}		; (str ip, [sp, #-4]!)
   11130:	ldr	r0, [pc, #12]	; 11144 <Mat_VarReadNextInfo@plt+0x40>
   11134:	ldr	r3, [pc, #12]	; 11148 <Mat_VarReadNextInfo@plt+0x44>
   11138:	bl	10fc0 <__libc_start_main@plt>
   1113c:	bl	110ec <abort@plt>
   11140:	andeq	r3, r1, r4, asr ip
   11144:	andeq	r1, r1, r0, lsl #4
   11148:	strdeq	r3, [r1], -r4
   1114c:	ldr	r3, [pc, #20]	; 11168 <Mat_VarReadNextInfo@plt+0x64>
   11150:	ldr	r2, [pc, #20]	; 1116c <Mat_VarReadNextInfo@plt+0x68>
   11154:	add	r3, pc, r3
   11158:	ldr	r2, [r3, r2]
   1115c:	cmp	r2, #0
   11160:	bxeq	lr
   11164:	b	10fcc <__gmon_start__@plt>
   11168:	andeq	r3, r1, r4, lsr #29
   1116c:	andeq	r0, r0, r0, ror #1
   11170:	ldr	r0, [pc, #24]	; 11190 <Mat_VarReadNextInfo@plt+0x8c>
   11174:	ldr	r3, [pc, #24]	; 11194 <Mat_VarReadNextInfo@plt+0x90>
   11178:	cmp	r3, r0
   1117c:	bxeq	lr
   11180:	ldr	r3, [pc, #16]	; 11198 <Mat_VarReadNextInfo@plt+0x94>
   11184:	cmp	r3, #0
   11188:	bxeq	lr
   1118c:	bx	r3
   11190:	andeq	r5, r2, ip, asr #3
   11194:	andeq	r5, r2, ip, asr #3
   11198:	andeq	r0, r0, r0
   1119c:	ldr	r0, [pc, #36]	; 111c8 <Mat_VarReadNextInfo@plt+0xc4>
   111a0:	ldr	r1, [pc, #36]	; 111cc <Mat_VarReadNextInfo@plt+0xc8>
   111a4:	sub	r1, r1, r0
   111a8:	asr	r1, r1, #2
   111ac:	add	r1, r1, r1, lsr #31
   111b0:	asrs	r1, r1, #1
   111b4:	bxeq	lr
   111b8:	ldr	r3, [pc, #16]	; 111d0 <Mat_VarReadNextInfo@plt+0xcc>
   111bc:	cmp	r3, #0
   111c0:	bxeq	lr
   111c4:	bx	r3
   111c8:	andeq	r5, r2, ip, asr #3
   111cc:	andeq	r5, r2, ip, asr #3
   111d0:	andeq	r0, r0, r0
   111d4:	push	{r4, lr}
   111d8:	ldr	r4, [pc, #24]	; 111f8 <Mat_VarReadNextInfo@plt+0xf4>
   111dc:	ldrb	r3, [r4]
   111e0:	cmp	r3, #0
   111e4:	popne	{r4, pc}
   111e8:	bl	11170 <Mat_VarReadNextInfo@plt+0x6c>
   111ec:	mov	r3, #1
   111f0:	strb	r3, [r4]
   111f4:	pop	{r4, pc}
   111f8:	ldrdeq	r5, [r2], -r4
   111fc:	b	1119c <Mat_VarReadNextInfo@plt+0x98>
   11200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11204:	add	fp, sp, #28
   11208:	sub	sp, sp, #20
   1120c:	mov	r5, r1
   11210:	mov	r6, r0
   11214:	add	r0, sp, #4
   11218:	add	r1, r0, #4
   1121c:	add	r2, r0, #8
   11220:	bl	1102c <Mat_GetLibraryVersion@plt>
   11224:	ldr	r0, [sp, #4]
   11228:	cmp	r0, #1
   1122c:	ldreq	r0, [sp, #8]
   11230:	cmpeq	r0, #5
   11234:	beq	11260 <Mat_VarReadNextInfo@plt+0x15c>
   11238:	movw	r0, #20944	; 0x51d0
   1123c:	movt	r0, #2
   11240:	ldr	r3, [r0]
   11244:	movw	r0, #15468	; 0x3c6c
   11248:	movt	r0, #1
   1124c:	mov	r4, #1
   11250:	mov	r1, #55	; 0x37
   11254:	mov	r2, #1
   11258:	bl	10f78 <fwrite@plt>
   1125c:	b	11654 <Mat_VarReadNextInfo@plt+0x550>
   11260:	ldr	r0, [sp, #12]
   11264:	cmp	r0, #15
   11268:	bne	11238 <Mat_VarReadNextInfo@plt+0x134>
   1126c:	movw	r0, #15460	; 0x3c64
   11270:	movt	r0, #1
   11274:	movw	r1, #5784	; 0x1698
   11278:	movt	r1, #1
   1127c:	bl	11074 <Mat_LogInitFunc@plt>
   11280:	movw	r1, #20952	; 0x51d8
   11284:	movt	r1, #2
   11288:	movw	r0, #5864	; 0x16e8
   1128c:	movt	r0, #1
   11290:	str	r0, [r1]
   11294:	mov	r8, #0
   11298:	movw	r4, #15996	; 0x3e7c
   1129c:	movt	r4, #1
   112a0:	movw	r7, #20728	; 0x50f8
   112a4:	movt	r7, #2
   112a8:	mov	r9, #1
   112ac:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   112b0:	movw	r0, #20960	; 0x51e0
   112b4:	movt	r0, #2
   112b8:	strb	r9, [r0]
   112bc:	str	r8, [sp]
   112c0:	mov	r0, r6
   112c4:	mov	r1, r5
   112c8:	mov	r2, r4
   112cc:	mov	r3, r7
   112d0:	bl	1366c <getopt_long@@Base>
   112d4:	mov	r1, r0
   112d8:	sub	r0, r0, #72	; 0x48
   112dc:	cmp	r0, #46	; 0x2e
   112e0:	bhi	113c8 <Mat_VarReadNextInfo@plt+0x2c4>
   112e4:	add	r2, pc, #0
   112e8:	ldr	pc, [r2, r0, lsl #2]
   112ec:	andeq	r1, r1, r0, ror #12
   112f0:	ldrdeq	r1, [r1], -r0
   112f4:	ldrdeq	r1, [r1], -r0
   112f8:	ldrdeq	r1, [r1], -r0
   112fc:	ldrdeq	r1, [r1], -r0
   11300:	ldrdeq	r1, [r1], -r0
   11304:	ldrdeq	r1, [r1], -r0
   11308:	ldrdeq	r1, [r1], -r0
   1130c:	ldrdeq	r1, [r1], -r0
   11310:	ldrdeq	r1, [r1], -r0
   11314:	ldrdeq	r1, [r1], -r0
   11318:	ldrdeq	r1, [r1], -r0
   1131c:	ldrdeq	r1, [r1], -r0
   11320:	ldrdeq	r1, [r1], -r0
   11324:	andeq	r1, r1, r4, ror r6
   11328:	ldrdeq	r1, [r1], -r0
   1132c:	ldrdeq	r1, [r1], -r0
   11330:	ldrdeq	r1, [r1], -r0
   11334:	ldrdeq	r1, [r1], -r0
   11338:	ldrdeq	r1, [r1], -r0
   1133c:	ldrdeq	r1, [r1], -r0
   11340:	ldrdeq	r1, [r1], -r0
   11344:	ldrdeq	r1, [r1], -r0
   11348:	ldrdeq	r1, [r1], -r0
   1134c:	ldrdeq	r1, [r1], -r0
   11350:	ldrdeq	r1, [r1], -r0
   11354:	ldrdeq	r1, [r1], -r0
   11358:	ldrdeq	r1, [r1], -r0
   1135c:	andeq	r1, r1, r8, lsr #7
   11360:	ldrdeq	r1, [r1], -r0
   11364:	andeq	r1, r1, r0, ror #7
   11368:	ldrdeq	r1, [r1], -r0
   1136c:			; <UNDEFINED> instruction: 0x000112b0
   11370:	ldrdeq	r1, [r1], -r0
   11374:	ldrdeq	r1, [r1], -r0
   11378:	ldrdeq	r1, [r1], -r0
   1137c:	ldrdeq	r1, [r1], -r0
   11380:	ldrdeq	r1, [r1], -r0
   11384:	ldrdeq	r1, [r1], -r0
   11388:	ldrdeq	r1, [r1], -r0
   1138c:	ldrdeq	r1, [r1], -r0
   11390:	ldrdeq	r1, [r1], -r0
   11394:	ldrdeq	r1, [r1], -r0
   11398:	ldrdeq	r1, [r1], -r0
   1139c:	ldrdeq	r1, [r1], -r0
   113a0:	ldrdeq	r1, [r1], -r0
   113a4:	andeq	r1, r1, r0, lsr #8
   113a8:	movw	r0, #20956	; 0x51dc
   113ac:	movt	r0, #2
   113b0:	strb	r9, [r0]
   113b4:	mov	r0, #1
   113b8:	movw	r1, #15524	; 0x3ca4
   113bc:	movt	r1, #1
   113c0:	bl	11080 <Mat_VerbMessage@plt>
   113c4:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   113c8:	cmn	r1, #1
   113cc:	beq	11458 <Mat_VarReadNextInfo@plt+0x354>
   113d0:	movw	r0, #15728	; 0x3d70
   113d4:	movt	r0, #1
   113d8:	bl	10ef4 <printf@plt>
   113dc:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   113e0:	movw	r0, #20976	; 0x51f0
   113e4:	movt	r0, #2
   113e8:	ldr	sl, [r0]
   113ec:	cmp	sl, #0
   113f0:	beq	11430 <Mat_VarReadNextInfo@plt+0x32c>
   113f4:	mov	r0, sl
   113f8:	movw	r1, #15539	; 0x3cb3
   113fc:	movt	r1, #1
   11400:	bl	10edc <strcmp@plt>
   11404:	cmp	r0, #0
   11408:	beq	11440 <Mat_VarReadNextInfo@plt+0x33c>
   1140c:	movw	r0, #15544	; 0x3cb8
   11410:	movt	r0, #1
   11414:	mov	r1, sl
   11418:	bl	10f30 <Mat_Warning@plt>
   1141c:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   11420:	mov	r0, #1
   11424:	mov	r1, #0
   11428:	bl	10eb8 <Mat_SetVerbose@plt>
   1142c:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   11430:	movw	r0, #15597	; 0x3ced
   11434:	movt	r0, #1
   11438:	bl	10f30 <Mat_Warning@plt>
   1143c:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   11440:	movw	r0, #20952	; 0x51d8
   11444:	movt	r0, #2
   11448:	movw	r1, #6544	; 0x1990
   1144c:	movt	r1, #1
   11450:	str	r1, [r0]
   11454:	b	112bc <Mat_VarReadNextInfo@plt+0x1b8>
   11458:	movw	r4, #20916	; 0x51b4
   1145c:	movt	r4, #2
   11460:	ldr	r0, [r4]
   11464:	cmp	r0, r6
   11468:	bge	1156c <Mat_VarReadNextInfo@plt+0x468>
   1146c:	ldr	r0, [r5, r0, lsl #2]
   11470:	mov	r1, #0
   11474:	bl	10ee8 <Mat_Open@plt>
   11478:	mov	r8, r0
   1147c:	ldr	r0, [r4]
   11480:	cmp	r8, #0
   11484:	beq	11580 <Mat_VarReadNextInfo@plt+0x47c>
   11488:	add	r1, r0, #1
   1148c:	str	r1, [r4]
   11490:	cmp	r1, r6
   11494:	bge	11598 <Mat_VarReadNextInfo@plt+0x494>
   11498:	mvn	r1, r0
   1149c:	add	r4, r1, r6
   114a0:	add	r0, r5, r0, lsl #2
   114a4:	add	sl, r0, #4
   114a8:	movw	r9, #15804	; 0x3dbc
   114ac:	movt	r9, #1
   114b0:	mov	r5, #0
   114b4:	b	114f8 <Mat_VarReadNextInfo@plt+0x3f4>
   114b8:	strb	r6, [r7]
   114bc:	mov	r0, r8
   114c0:	add	r1, sp, #16
   114c4:	mov	r2, r7
   114c8:	bl	11c48 <Mat_VarReadNextInfo@plt+0xb44>
   114cc:	movw	r0, #20952	; 0x51d8
   114d0:	movt	r0, #2
   114d4:	ldr	r1, [r0]
   114d8:	ldr	r6, [sp, #16]
   114dc:	mov	r0, r6
   114e0:	blx	r1
   114e4:	mov	r0, r6
   114e8:	bl	10fe4 <Mat_VarFree@plt>
   114ec:	add	sl, sl, #4
   114f0:	subs	r4, r4, #1
   114f4:	beq	11644 <Mat_VarReadNextInfo@plt+0x540>
   114f8:	ldr	r6, [sl]
   114fc:	mov	r0, r6
   11500:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   11504:	mov	r7, r0
   11508:	cmp	r0, r6
   1150c:	mov	r6, #0
   11510:	ldrbne	r6, [r7]
   11514:	strbne	r5, [r7]
   11518:	ldr	r1, [sl]
   1151c:	mov	r0, r8
   11520:	bl	10f6c <Mat_VarReadInfo@plt>
   11524:	str	r0, [sp, #16]
   11528:	cmp	r0, #0
   1152c:	beq	1155c <Mat_VarReadNextInfo@plt+0x458>
   11530:	mov	r1, r0
   11534:	movw	r0, #20956	; 0x51dc
   11538:	movt	r0, #2
   1153c:	ldrb	r0, [r0]
   11540:	cmp	r0, #1
   11544:	bne	114cc <Mat_VarReadNextInfo@plt+0x3c8>
   11548:	cmp	r6, #0
   1154c:	bne	114b8 <Mat_VarReadNextInfo@plt+0x3b4>
   11550:	mov	r0, r8
   11554:	bl	10f60 <Mat_VarReadDataAll@plt>
   11558:	b	114cc <Mat_VarReadNextInfo@plt+0x3c8>
   1155c:	ldr	r1, [sl]
   11560:	mov	r0, r9
   11564:	bl	10f30 <Mat_Warning@plt>
   11568:	b	114ec <Mat_VarReadNextInfo@plt+0x3e8>
   1156c:	movw	r0, #15751	; 0x3d87
   11570:	movt	r0, #1
   11574:	bl	11068 <Mat_Critical@plt>
   11578:	mov	r4, #1
   1157c:	b	11654 <Mat_VarReadNextInfo@plt+0x550>
   11580:	ldr	r1, [r5, r0, lsl #2]
   11584:	movw	r0, #15786	; 0x3daa
   11588:	movt	r0, #1
   1158c:	bl	11068 <Mat_Critical@plt>
   11590:	mov	r4, #1
   11594:	b	11654 <Mat_VarReadNextInfo@plt+0x550>
   11598:	movw	r0, #20956	; 0x51dc
   1159c:	movt	r0, #2
   115a0:	ldrb	r0, [r0]
   115a4:	cmp	r0, #0
   115a8:	beq	115f8 <Mat_VarReadNextInfo@plt+0x4f4>
   115ac:	mov	r0, r8
   115b0:	bl	10ed0 <Mat_VarReadNext@plt>
   115b4:	str	r0, [sp, #16]
   115b8:	cmp	r0, #0
   115bc:	beq	11644 <Mat_VarReadNextInfo@plt+0x540>
   115c0:	mov	r5, r0
   115c4:	movw	r4, #20952	; 0x51d8
   115c8:	movt	r4, #2
   115cc:	ldr	r1, [r4]
   115d0:	mov	r0, r5
   115d4:	blx	r1
   115d8:	mov	r0, r5
   115dc:	bl	10fe4 <Mat_VarFree@plt>
   115e0:	mov	r0, r8
   115e4:	bl	10ed0 <Mat_VarReadNext@plt>
   115e8:	mov	r5, r0
   115ec:	cmp	r0, #0
   115f0:	bne	115cc <Mat_VarReadNextInfo@plt+0x4c8>
   115f4:	b	11640 <Mat_VarReadNextInfo@plt+0x53c>
   115f8:	mov	r0, r8
   115fc:	bl	11104 <Mat_VarReadNextInfo@plt>
   11600:	str	r0, [sp, #16]
   11604:	cmp	r0, #0
   11608:	beq	11644 <Mat_VarReadNextInfo@plt+0x540>
   1160c:	mov	r5, r0
   11610:	movw	r4, #20952	; 0x51d8
   11614:	movt	r4, #2
   11618:	ldr	r1, [r4]
   1161c:	mov	r0, r5
   11620:	blx	r1
   11624:	mov	r0, r5
   11628:	bl	10fe4 <Mat_VarFree@plt>
   1162c:	mov	r0, r8
   11630:	bl	11104 <Mat_VarReadNextInfo@plt>
   11634:	mov	r5, r0
   11638:	cmp	r0, #0
   1163c:	bne	11618 <Mat_VarReadNextInfo@plt+0x514>
   11640:	str	r5, [sp, #16]
   11644:	mov	r0, r8
   11648:	bl	1105c <Mat_Close@plt>
   1164c:	bl	10ec4 <Mat_LogClose@plt>
   11650:	mov	r4, #0
   11654:	mov	r0, r4
   11658:	sub	sp, fp, #28
   1165c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11660:	movw	r0, #20840	; 0x5168
   11664:	movt	r0, #2
   11668:	bl	110a4 <Mat_Help@plt>
   1166c:	mov	r0, #0
   11670:	bl	10fd8 <exit@plt>
   11674:	movw	r0, #15635	; 0x3d13
   11678:	movt	r0, #1
   1167c:	movw	r1, #15460	; 0x3c64
   11680:	movt	r1, #1
   11684:	movw	r2, #15721	; 0x3d69
   11688:	movt	r2, #1
   1168c:	bl	10ef4 <printf@plt>
   11690:	mov	r0, #0
   11694:	bl	10fd8 <exit@plt>
   11698:	push	{r4, r5, r6, r7, fp, lr}
   1169c:	add	fp, sp, #16
   116a0:	mov	r4, r1
   116a4:	movw	r6, #20964	; 0x51e4
   116a8:	movt	r6, #2
   116ac:	ldr	r0, [r6]
   116b0:	cmp	r0, #1
   116b4:	blt	116dc <Mat_VarReadNextInfo@plt+0x5d8>
   116b8:	mov	r7, #0
   116bc:	movw	r5, #16138	; 0x3f0a
   116c0:	movt	r5, #1
   116c4:	mov	r0, r5
   116c8:	bl	10ef4 <printf@plt>
   116cc:	add	r7, r7, #1
   116d0:	ldr	r0, [r6]
   116d4:	cmp	r7, r0
   116d8:	blt	116c4 <Mat_VarReadNextInfo@plt+0x5c0>
   116dc:	mov	r0, r4
   116e0:	pop	{r4, r5, r6, r7, fp, lr}
   116e4:	b	10f9c <puts@plt>
   116e8:	push	{r4, r5, r6, r7, fp, lr}
   116ec:	add	fp, sp, #16
   116f0:	cmp	r0, #0
   116f4:	beq	1198c <Mat_VarReadNextInfo@plt+0x888>
   116f8:	mov	r4, r0
   116fc:	ldr	r0, [r0, #16]
   11700:	sub	r1, r0, #6
   11704:	cmp	r1, #10
   11708:	bcs	1172c <Mat_VarReadNextInfo@plt+0x628>
   1170c:	ldr	r0, [r4, #4]
   11710:	cmp	r0, #3
   11714:	beq	1182c <Mat_VarReadNextInfo@plt+0x728>
   11718:	cmp	r0, #2
   1171c:	popne	{r4, r5, r6, r7, fp, pc}
   11720:	mov	r0, r4
   11724:	pop	{r4, r5, r6, r7, fp, lr}
   11728:	b	123c4 <Mat_VarReadNextInfo@plt+0x12c0>
   1172c:	sub	r1, r0, #4
   11730:	cmp	r1, #2
   11734:	bcc	11838 <Mat_VarReadNextInfo@plt+0x734>
   11738:	cmp	r0, #1
   1173c:	beq	11850 <Mat_VarReadNextInfo@plt+0x74c>
   11740:	cmp	r0, #2
   11744:	bne	11908 <Mat_VarReadNextInfo@plt+0x804>
   11748:	ldr	r1, [r4, #36]	; 0x24
   1174c:	cmp	r1, #0
   11750:	beq	11760 <Mat_VarReadNextInfo@plt+0x65c>
   11754:	movw	r0, #15846	; 0x3de6
   11758:	movt	r0, #1
   1175c:	bl	10f48 <Mat_Message@plt>
   11760:	ldr	r1, [r4, #4]
   11764:	movw	r0, #15861	; 0x3df5
   11768:	movt	r0, #1
   1176c:	bl	10f48 <Mat_Message@plt>
   11770:	ldr	r0, [r4, #4]
   11774:	cmp	r0, #0
   11778:	beq	1198c <Mat_VarReadNextInfo@plt+0x888>
   1177c:	movw	r0, #15876	; 0x3e04
   11780:	movt	r0, #1
   11784:	bl	10f48 <Mat_Message@plt>
   11788:	mov	r0, r4
   1178c:	bl	10eac <Mat_VarGetNumberOfFields@plt>
   11790:	mov	r5, r0
   11794:	ldr	r1, [r4, #4]
   11798:	ldr	r0, [r4, #32]
   1179c:	ldr	r6, [r0]
   117a0:	cmp	r1, #2
   117a4:	blt	117c4 <Mat_VarReadNextInfo@plt+0x6c0>
   117a8:	ldr	r1, [r4, #4]
   117ac:	mov	r2, #1
   117b0:	ldr	r3, [r0, r2, lsl #2]
   117b4:	mul	r6, r3, r6
   117b8:	add	r2, r2, #1
   117bc:	cmp	r2, r1
   117c0:	blt	117b0 <Mat_VarReadNextInfo@plt+0x6ac>
   117c4:	cmp	r5, #1
   117c8:	blt	11918 <Mat_VarReadNextInfo@plt+0x814>
   117cc:	cmp	r6, #0
   117d0:	bne	11918 <Mat_VarReadNextInfo@plt+0x814>
   117d4:	mov	r0, r4
   117d8:	bl	10f84 <Mat_VarGetStructFieldnames@plt>
   117dc:	mov	r4, r0
   117e0:	movw	r0, #15898	; 0x3e1a
   117e4:	movt	r0, #1
   117e8:	mov	r1, r5
   117ec:	bl	10f48 <Mat_Message@plt>
   117f0:	movw	r7, #20964	; 0x51e4
   117f4:	movt	r7, #2
   117f8:	ldr	r0, [r7]
   117fc:	add	r0, r0, #1
   11800:	str	r0, [r7]
   11804:	cmp	r4, #0
   11808:	beq	11970 <Mat_VarReadNextInfo@plt+0x86c>
   1180c:	movw	r6, #15848	; 0x3de8
   11810:	movt	r6, #1
   11814:	ldr	r1, [r4], #4
   11818:	mov	r0, r6
   1181c:	bl	10f48 <Mat_Message@plt>
   11820:	subs	r5, r5, #1
   11824:	bne	11814 <Mat_VarReadNextInfo@plt+0x710>
   11828:	b	11970 <Mat_VarReadNextInfo@plt+0x86c>
   1182c:	mov	r0, r4
   11830:	pop	{r4, r5, r6, r7, fp, lr}
   11834:	b	12538 <Mat_VarReadNextInfo@plt+0x1434>
   11838:	movw	r0, #20956	; 0x51dc
   1183c:	movt	r0, #2
   11840:	ldrb	r1, [r0]
   11844:	mov	r0, r4
   11848:	pop	{r4, r5, r6, r7, fp, lr}
   1184c:	b	11038 <Mat_VarPrint@plt>
   11850:	ldr	r1, [r4, #36]	; 0x24
   11854:	cmp	r1, #0
   11858:	beq	11868 <Mat_VarReadNextInfo@plt+0x764>
   1185c:	movw	r0, #15846	; 0x3de6
   11860:	movt	r0, #1
   11864:	bl	10f48 <Mat_Message@plt>
   11868:	ldr	r1, [r4, #4]
   1186c:	movw	r0, #15861	; 0x3df5
   11870:	movt	r0, #1
   11874:	bl	10f48 <Mat_Message@plt>
   11878:	ldr	r1, [r4, #4]
   1187c:	cmp	r1, #0
   11880:	beq	1198c <Mat_VarReadNextInfo@plt+0x888>
   11884:	ldr	r0, [r4, #32]
   11888:	ldr	r5, [r0]
   1188c:	cmp	r1, #2
   11890:	blt	118ac <Mat_VarReadNextInfo@plt+0x7a8>
   11894:	add	r0, r0, #4
   11898:	sub	r1, r1, #1
   1189c:	ldr	r2, [r0], #4
   118a0:	mul	r5, r2, r5
   118a4:	subs	r1, r1, #1
   118a8:	bne	1189c <Mat_VarReadNextInfo@plt+0x798>
   118ac:	movw	r0, #15911	; 0x3e27
   118b0:	movt	r0, #1
   118b4:	bl	10f48 <Mat_Message@plt>
   118b8:	movw	r0, #15909	; 0x3e25
   118bc:	movt	r0, #1
   118c0:	bl	10f48 <Mat_Message@plt>
   118c4:	movw	r6, #20964	; 0x51e4
   118c8:	movt	r6, #2
   118cc:	ldr	r0, [r6]
   118d0:	add	r0, r0, #1
   118d4:	str	r0, [r6]
   118d8:	ldr	r4, [r4, #40]	; 0x28
   118dc:	cmp	r4, #0
   118e0:	cmpne	r5, #0
   118e4:	beq	118f8 <Mat_VarReadNextInfo@plt+0x7f4>
   118e8:	ldr	r0, [r4], #4
   118ec:	bl	116e8 <Mat_VarReadNextInfo@plt+0x5e4>
   118f0:	subs	r5, r5, #1
   118f4:	bne	118e8 <Mat_VarReadNextInfo@plt+0x7e4>
   118f8:	ldr	r0, [r6]
   118fc:	sub	r0, r0, #1
   11900:	str	r0, [r6]
   11904:	b	1197c <Mat_VarReadNextInfo@plt+0x878>
   11908:	movw	r0, #15934	; 0x3e3e
   1190c:	movt	r0, #1
   11910:	pop	{r4, r5, r6, r7, fp, lr}
   11914:	b	10f48 <Mat_Message@plt>
   11918:	cmp	r5, #1
   1191c:	blt	1198c <Mat_VarReadNextInfo@plt+0x888>
   11920:	cmp	r6, #0
   11924:	beq	1198c <Mat_VarReadNextInfo@plt+0x888>
   11928:	movw	r0, #15898	; 0x3e1a
   1192c:	movt	r0, #1
   11930:	mov	r1, r5
   11934:	bl	10f48 <Mat_Message@plt>
   11938:	movw	r7, #20964	; 0x51e4
   1193c:	movt	r7, #2
   11940:	ldr	r0, [r7]
   11944:	add	r0, r0, #1
   11948:	str	r0, [r7]
   1194c:	ldr	r4, [r4, #40]	; 0x28
   11950:	cmp	r4, #0
   11954:	mulne	r5, r6, r5
   11958:	cmpne	r5, #0
   1195c:	beq	11970 <Mat_VarReadNextInfo@plt+0x86c>
   11960:	ldr	r0, [r4], #4
   11964:	bl	116e8 <Mat_VarReadNextInfo@plt+0x5e4>
   11968:	subs	r5, r5, #1
   1196c:	bne	11960 <Mat_VarReadNextInfo@plt+0x85c>
   11970:	ldr	r0, [r7]
   11974:	sub	r0, r0, #1
   11978:	str	r0, [r7]
   1197c:	movw	r0, #17222	; 0x4346
   11980:	movt	r0, #1
   11984:	pop	{r4, r5, r6, r7, fp, lr}
   11988:	b	10f48 <Mat_Message@plt>
   1198c:	pop	{r4, r5, r6, r7, fp, pc}
   11990:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11994:	add	fp, sp, #24
   11998:	vpush	{d8-d9}
   1199c:	sub	sp, sp, #40	; 0x28
   119a0:	mov	r4, r0
   119a4:	vmov.i32	q8, #0	; 0x00000000
   119a8:	add	r8, sp, #8
   119ac:	mov	r0, r8
   119b0:	vst1.64	{d16-d17}, [r0]!
   119b4:	vst1.64	{d16-d17}, [r0]
   119b8:	movw	r5, #20968	; 0x51e8
   119bc:	movt	r5, #2
   119c0:	ldrb	r0, [r5]
   119c4:	cmp	r0, #0
   119c8:	bne	11a04 <Mat_VarReadNextInfo@plt+0x900>
   119cc:	movw	r0, #16094	; 0x3ede
   119d0:	movt	r0, #1
   119d4:	str	r0, [sp]
   119d8:	movw	r0, #16038	; 0x3ea6
   119dc:	movt	r0, #1
   119e0:	movw	r1, #16078	; 0x3ece
   119e4:	movt	r1, #1
   119e8:	movw	r2, #16083	; 0x3ed3
   119ec:	movt	r2, #1
   119f0:	movw	r3, #16088	; 0x3ed8
   119f4:	movt	r3, #1
   119f8:	bl	10ef4 <printf@plt>
   119fc:	mov	r0, #1
   11a00:	strb	r0, [r5]
   11a04:	ldr	r1, [r4, #36]	; 0x24
   11a08:	movw	r0, #16100	; 0x3ee4
   11a0c:	movt	r0, #1
   11a10:	bl	10ef4 <printf@plt>
   11a14:	ldr	r0, [r4, #4]
   11a18:	cmp	r0, #1
   11a1c:	blt	11ac4 <Mat_VarReadNextInfo@plt+0x9c0>
   11a20:	ldr	r0, [r4, #32]
   11a24:	ldr	r1, [r0]
   11a28:	movw	r0, #16106	; 0x3eea
   11a2c:	movt	r0, #1
   11a30:	bl	10ef4 <printf@plt>
   11a34:	ldr	r0, [r4, #4]
   11a38:	cmp	r0, #2
   11a3c:	blt	11ab0 <Mat_VarReadNextInfo@plt+0x9ac>
   11a40:	mov	r7, #1
   11a44:	mov	r6, #0
   11a48:	vldr	d8, [pc, #360]	; 11bb8 <Mat_VarReadNextInfo@plt+0xab4>
   11a4c:	vmov.f64	d9, #112	; 0x3f800000  1.0
   11a50:	movw	r5, #16111	; 0x3eef
   11a54:	movt	r5, #1
   11a58:	b	11a6c <Mat_VarReadNextInfo@plt+0x968>
   11a5c:	ldr	r0, [r4, #4]
   11a60:	add	r7, r7, #1
   11a64:	cmp	r7, r0
   11a68:	bge	11ab0 <Mat_VarReadNextInfo@plt+0x9ac>
   11a6c:	ldr	r0, [r4, #32]
   11a70:	add	r0, r0, r7, lsl #2
   11a74:	vldr	s0, [r0]
   11a78:	vcvt.f64.u32	d0, s0
   11a7c:	bl	10fb4 <log10@plt>
   11a80:	vrintp.f64	d16, d0
   11a84:	vadd.f64	d16, d16, d9
   11a88:	vcmpe.f64	d16, d8
   11a8c:	vmrs	APSR_nzcv, fpscr
   11a90:	bpl	11a5c <Mat_VarReadNextInfo@plt+0x958>
   11a94:	ldr	r0, [r4, #32]
   11a98:	ldr	r2, [r0, r7, lsl #2]
   11a9c:	add	r0, r8, r6
   11aa0:	mov	r1, r5
   11aa4:	bl	11098 <sprintf@plt>
   11aa8:	add	r6, r0, r6
   11aac:	b	11a5c <Mat_VarReadNextInfo@plt+0x958>
   11ab0:	movw	r0, #16116	; 0x3ef4
   11ab4:	movt	r0, #1
   11ab8:	add	r1, sp, #8
   11abc:	bl	10ef4 <printf@plt>
   11ac0:	b	11ad0 <Mat_VarReadNextInfo@plt+0x9cc>
   11ac4:	movw	r0, #16122	; 0x3efa
   11ac8:	movt	r0, #1
   11acc:	bl	10ef4 <printf@plt>
   11ad0:	mov	r0, r4
   11ad4:	bl	110d4 <Mat_VarGetSize@plt>
   11ad8:	mov	r1, r0
   11adc:	movw	r0, #20960	; 0x51e0
   11ae0:	movt	r0, #2
   11ae4:	ldrb	r0, [r0]
   11ae8:	cmp	r0, #1
   11aec:	bne	11b1c <Mat_VarReadNextInfo@plt+0xa18>
   11af0:	cmp	r1, #1073741825	; 0x40000001
   11af4:	bcc	11b50 <Mat_VarReadNextInfo@plt+0xa4c>
   11af8:	vldr	d16, [pc, #208]	; 11bd0 <Mat_VarReadNextInfo@plt+0xacc>
   11afc:	vmov	s0, r1
   11b00:	vcvt.f64.u32	d17, s0
   11b04:	vmul.f64	d16, d17, d16
   11b08:	vmov	r2, r3, d16
   11b0c:	movw	r0, #16143	; 0x3f0f
   11b10:	movt	r0, #1
   11b14:	bl	10ef4 <printf@plt>
   11b18:	b	11b28 <Mat_VarReadNextInfo@plt+0xa24>
   11b1c:	movw	r0, #16178	; 0x3f32
   11b20:	movt	r0, #1
   11b24:	bl	10ef4 <printf@plt>
   11b28:	ldr	r0, [r4, #16]
   11b2c:	movw	r1, #17444	; 0x4424
   11b30:	movt	r1, #1
   11b34:	ldr	r1, [r1, r0, lsl #2]
   11b38:	movw	r0, #16186	; 0x3f3a
   11b3c:	movt	r0, #1
   11b40:	bl	10ef4 <printf@plt>
   11b44:	sub	sp, fp, #40	; 0x28
   11b48:	vpop	{d8-d9}
   11b4c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11b50:	cmp	r1, #1048576	; 0x100000
   11b54:	bls	11b7c <Mat_VarReadNextInfo@plt+0xa78>
   11b58:	vldr	d16, [pc, #104]	; 11bc8 <Mat_VarReadNextInfo@plt+0xac4>
   11b5c:	vmov	s0, r1
   11b60:	vcvt.f64.u32	d17, s0
   11b64:	vmul.f64	d16, d17, d16
   11b68:	vmov	r2, r3, d16
   11b6c:	movw	r0, #16152	; 0x3f18
   11b70:	movt	r0, #1
   11b74:	bl	10ef4 <printf@plt>
   11b78:	b	11b28 <Mat_VarReadNextInfo@plt+0xa24>
   11b7c:	cmp	r1, #1024	; 0x400
   11b80:	bls	11ba8 <Mat_VarReadNextInfo@plt+0xaa4>
   11b84:	vldr	d16, [pc, #52]	; 11bc0 <Mat_VarReadNextInfo@plt+0xabc>
   11b88:	vmov	s0, r1
   11b8c:	vcvt.f64.u32	d17, s0
   11b90:	vmul.f64	d16, d17, d16
   11b94:	vmov	r2, r3, d16
   11b98:	movw	r0, #16161	; 0x3f21
   11b9c:	movt	r0, #1
   11ba0:	bl	10ef4 <printf@plt>
   11ba4:	b	11b28 <Mat_VarReadNextInfo@plt+0xa24>
   11ba8:	movw	r0, #16170	; 0x3f2a
   11bac:	movt	r0, #1
   11bb0:	b	11b24 <Mat_VarReadNextInfo@plt+0xa20>
   11bb4:	nop	{0}
   11bb8:	andeq	r0, r0, r0
   11bbc:	submi	r0, r0, r0
   11bc0:	andeq	r0, r0, r0
   11bc4:	svccc	0x00500000
   11bc8:	andeq	r0, r0, r0
   11bcc:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   11bd0:	andeq	r0, r0, r0
   11bd4:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   11bd8:	push	{r4, r5, r6, r7, fp, lr}
   11bdc:	add	fp, sp, #16
   11be0:	mov	r4, r0
   11be4:	mov	r5, #0
   11be8:	mov	r0, #40	; 0x28
   11bec:	mvn	r6, #0
   11bf0:	movw	r7, #16994	; 0x4262
   11bf4:	movt	r7, #1
   11bf8:	b	11c14 <Mat_VarReadNextInfo@plt+0xb10>
   11bfc:	cmp	r0, r5
   11c00:	movcc	r5, r0
   11c04:	ldrb	r0, [r7, -r6]
   11c08:	sub	r6, r6, #1
   11c0c:	cmn	r6, #6
   11c10:	beq	11c38 <Mat_VarReadNextInfo@plt+0xb34>
   11c14:	uxtb	r1, r0
   11c18:	mov	r0, r4
   11c1c:	bl	11008 <strchr@plt>
   11c20:	cmp	r0, #0
   11c24:	beq	11c04 <Mat_VarReadNextInfo@plt+0xb00>
   11c28:	cmp	r5, #0
   11c2c:	bne	11bfc <Mat_VarReadNextInfo@plt+0xaf8>
   11c30:	mov	r5, r0
   11c34:	b	11c04 <Mat_VarReadNextInfo@plt+0xb00>
   11c38:	cmp	r5, #0
   11c3c:	movne	r4, r5
   11c40:	mov	r0, r4
   11c44:	pop	{r4, r5, r6, r7, fp, pc}
   11c48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c4c:	add	fp, sp, #28
   11c50:	sub	sp, sp, #44	; 0x2c
   11c54:	str	r0, [sp, #16]
   11c58:	str	r1, [sp, #20]
   11c5c:	ldr	r0, [r1]
   11c60:	str	r0, [fp, #-32]	; 0xffffffe0
   11c64:	mov	r0, r2
   11c68:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   11c6c:	mov	sl, r0
   11c70:	ldrb	r6, [r0]
   11c74:	mov	r8, #1
   11c78:	b	11cb0 <Mat_VarReadNextInfo@plt+0xbac>
   11c7c:	movw	r0, #20944	; 0x51d0
   11c80:	movt	r0, #2
   11c84:	ldr	r0, [r0]
   11c88:	movw	r1, #17134	; 0x42ee
   11c8c:	movt	r1, #1
   11c90:	mov	r2, r4
   11c94:	bl	11020 <fprintf@plt>
   11c98:	cmp	r4, sl
   11c9c:	ldr	sl, [sp, #32]
   11ca0:	ldr	r4, [sp, #28]
   11ca4:	bne	12368 <Mat_VarReadNextInfo@plt+0x1264>
   11ca8:	cmp	r4, #0
   11cac:	bne	12368 <Mat_VarReadNextInfo@plt+0x1264>
   11cb0:	uxtb	r0, r6
   11cb4:	cmp	r0, #46	; 0x2e
   11cb8:	beq	11cdc <Mat_VarReadNextInfo@plt+0xbd8>
   11cbc:	cmp	r0, #123	; 0x7b
   11cc0:	beq	11d1c <Mat_VarReadNextInfo@plt+0xc18>
   11cc4:	cmp	r0, #40	; 0x28
   11cc8:	beq	120e4 <Mat_VarReadNextInfo@plt+0xfe0>
   11ccc:	mov	r4, #0
   11cd0:	cmp	r4, #0
   11cd4:	beq	11cb0 <Mat_VarReadNextInfo@plt+0xbac>
   11cd8:	b	12368 <Mat_VarReadNextInfo@plt+0x1264>
   11cdc:	add	r9, sl, #1
   11ce0:	ldr	r7, [fp, #-32]	; 0xffffffe0
   11ce4:	ldr	r0, [r7, #16]
   11ce8:	cmp	r0, #1
   11cec:	beq	11d6c <Mat_VarReadNextInfo@plt+0xc68>
   11cf0:	cmp	r0, #2
   11cf4:	bne	12204 <Mat_VarReadNextInfo@plt+0x1100>
   11cf8:	mov	r0, r9
   11cfc:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   11d00:	cmp	r0, r9
   11d04:	beq	11ef4 <Mat_VarReadNextInfo@plt+0xdf0>
   11d08:	ldrb	r6, [r0]
   11d0c:	mov	r5, #0
   11d10:	mov	sl, r0
   11d14:	strb	r5, [r0]
   11d18:	b	11f00 <Mat_VarReadNextInfo@plt+0xdfc>
   11d1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d20:	ldr	r0, [r0, #16]
   11d24:	cmp	r0, #1
   11d28:	bne	12224 <Mat_VarReadNextInfo@plt+0x1120>
   11d2c:	add	r0, sl, #1
   11d30:	mov	r1, #125	; 0x7d
   11d34:	bl	11008 <strchr@plt>
   11d38:	mov	r4, r0
   11d3c:	add	r0, r0, #1
   11d40:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   11d44:	ldrb	r1, [r0]
   11d48:	cmp	r1, #0
   11d4c:	str	r0, [sp, #32]
   11d50:	beq	11da0 <Mat_VarReadNextInfo@plt+0xc9c>
   11d54:	str	r1, [sp, #24]
   11d58:	mov	r2, #0
   11d5c:	mov	r1, #0
   11d60:	str	r1, [sp, #28]
   11d64:	strb	r2, [r0]
   11d68:	b	11db0 <Mat_VarReadNextInfo@plt+0xcac>
   11d6c:	ldr	r0, [r7]
   11d70:	ldr	r1, [r7, #12]
   11d74:	ldr	r2, [r7, #40]	; 0x28
   11d78:	str	r2, [sp, #36]	; 0x24
   11d7c:	udiv	sl, r0, r1
   11d80:	mov	r0, r9
   11d84:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   11d88:	cmp	r0, r9
   11d8c:	beq	11f48 <Mat_VarReadNextInfo@plt+0xe44>
   11d90:	ldrb	r6, [r0]
   11d94:	mov	r1, #0
   11d98:	strb	r1, [r0]
   11d9c:	b	11f50 <Mat_VarReadNextInfo@plt+0xe4c>
   11da0:	mov	r0, #123	; 0x7b
   11da4:	str	r0, [sp, #24]
   11da8:	mov	r0, #1
   11dac:	str	r0, [sp, #28]
   11db0:	mov	r0, sl
   11db4:	mov	r1, r4
   11db8:	bl	12910 <Mat_VarReadNextInfo@plt+0x180c>
   11dbc:	mov	r5, r0
   11dc0:	lsl	r6, r0, #2
   11dc4:	mov	r0, r6
   11dc8:	bl	10fa8 <malloc@plt>
   11dcc:	mov	r7, r0
   11dd0:	mov	r0, r6
   11dd4:	bl	10fa8 <malloc@plt>
   11dd8:	str	r0, [sp, #36]	; 0x24
   11ddc:	mov	r0, r6
   11de0:	bl	10fa8 <malloc@plt>
   11de4:	mov	r9, r0
   11de8:	cmp	r5, #1
   11dec:	blt	11e1c <Mat_VarReadNextInfo@plt+0xd18>
   11df0:	mov	r0, r7
   11df4:	mov	r1, #0
   11df8:	mov	r2, r6
   11dfc:	bl	11044 <memset@plt>
   11e00:	ldr	r0, [sp, #36]	; 0x24
   11e04:	mov	r1, r9
   11e08:	mov	r2, r5
   11e0c:	str	r8, [r0], #4
   11e10:	str	r8, [r1], #4
   11e14:	subs	r2, r2, #1
   11e18:	bne	11e0c <Mat_VarReadNextInfo@plt+0xd08>
   11e1c:	str	r9, [sp]
   11e20:	mov	r0, sl
   11e24:	mov	r1, r4
   11e28:	mov	sl, r7
   11e2c:	mov	r2, r7
   11e30:	ldr	r4, [sp, #36]	; 0x24
   11e34:	mov	r3, r4
   11e38:	bl	12938 <Mat_VarReadNextInfo@plt+0x1834>
   11e3c:	ldr	r7, [fp, #-32]	; 0xffffffe0
   11e40:	str	r7, [sp]
   11e44:	mov	r0, r5
   11e48:	mov	r1, sl
   11e4c:	mov	r2, r4
   11e50:	mov	r3, r9
   11e54:	bl	12b70 <Mat_VarReadNextInfo@plt+0x1a6c>
   11e58:	cmp	r0, #0
   11e5c:	beq	120a0 <Mat_VarReadNextInfo@plt+0xf9c>
   11e60:	mov	r6, r0
   11e64:	cmp	r5, #1
   11e68:	bne	11eb8 <Mat_VarReadNextInfo@plt+0xdb4>
   11e6c:	ldr	r3, [r9]
   11e70:	ldr	r0, [sp, #36]	; 0x24
   11e74:	ldr	r2, [r0]
   11e78:	ldr	r1, [sl]
   11e7c:	mov	r0, r7
   11e80:	bl	1108c <Mat_VarGetCellsLinear@plt>
   11e84:	mov	r4, r0
   11e88:	ldr	r0, [r7, #4]
   11e8c:	cmp	r0, #2
   11e90:	bne	11fdc <Mat_VarReadNextInfo@plt+0xed8>
   11e94:	ldr	r0, [r7, #32]
   11e98:	ldr	r1, [r0]
   11e9c:	cmp	r1, #1
   11ea0:	bne	11fcc <Mat_VarReadNextInfo@plt+0xec8>
   11ea4:	ldr	r1, [r9]
   11ea8:	str	r1, [r0, #4]
   11eac:	cmp	r4, #0
   11eb0:	bne	11ff4 <Mat_VarReadNextInfo@plt+0xef0>
   11eb4:	b	120bc <Mat_VarReadNextInfo@plt+0xfb8>
   11eb8:	mov	r0, r7
   11ebc:	mov	r1, sl
   11ec0:	ldr	r2, [sp, #36]	; 0x24
   11ec4:	mov	r3, r9
   11ec8:	bl	10f00 <Mat_VarGetCells@plt>
   11ecc:	mov	r4, r0
   11ed0:	cmp	r5, #1
   11ed4:	blt	11fec <Mat_VarReadNextInfo@plt+0xee8>
   11ed8:	ldr	r0, [r7, #32]
   11edc:	mov	r1, r9
   11ee0:	ldr	r2, [r1], #4
   11ee4:	str	r2, [r0], #4
   11ee8:	subs	r5, r5, #1
   11eec:	bne	11ee0 <Mat_VarReadNextInfo@plt+0xddc>
   11ef0:	b	11fec <Mat_VarReadNextInfo@plt+0xee8>
   11ef4:	mov	sl, r0
   11ef8:	mov	r6, #46	; 0x2e
   11efc:	mov	r5, #1
   11f00:	mov	r0, r7
   11f04:	mov	r1, r9
   11f08:	mov	r2, #0
   11f0c:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   11f10:	cmp	r0, #0
   11f14:	beq	12248 <Mat_VarReadNextInfo@plt+0x1144>
   11f18:	mov	r1, #1
   11f1c:	bl	110f8 <Mat_VarDuplicate@plt>
   11f20:	mov	r4, r0
   11f24:	mov	r0, r7
   11f28:	bl	10fe4 <Mat_VarFree@plt>
   11f2c:	cmp	r5, #0
   11f30:	bne	12308 <Mat_VarReadNextInfo@plt+0x1204>
   11f34:	str	r4, [fp, #-32]	; 0xffffffe0
   11f38:	mov	r4, #0
   11f3c:	cmp	r4, #0
   11f40:	beq	11cb0 <Mat_VarReadNextInfo@plt+0xbac>
   11f44:	b	12368 <Mat_VarReadNextInfo@plt+0x1264>
   11f48:	mov	r6, #46	; 0x2e
   11f4c:	mov	r1, #1
   11f50:	cmp	sl, #1
   11f54:	str	r0, [sp, #32]
   11f58:	str	r1, [sp, #28]
   11f5c:	mov	r4, #0
   11f60:	blt	11c98 <Mat_VarReadNextInfo@plt+0xb94>
   11f64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f68:	mov	r1, r4
   11f6c:	bl	10f0c <Mat_VarGetCell@plt>
   11f70:	cmp	r0, #0
   11f74:	beq	11c7c <Mat_VarReadNextInfo@plt+0xb78>
   11f78:	mov	r5, r0
   11f7c:	ldr	r0, [r0, #16]
   11f80:	cmp	r0, #2
   11f84:	bne	11c7c <Mat_VarReadNextInfo@plt+0xb78>
   11f88:	mov	r0, r5
   11f8c:	mov	r1, r9
   11f90:	mov	r2, #0
   11f94:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   11f98:	cmp	r0, #0
   11f9c:	beq	12078 <Mat_VarReadNextInfo@plt+0xf74>
   11fa0:	mov	r1, #1
   11fa4:	bl	110f8 <Mat_VarDuplicate@plt>
   11fa8:	mov	r7, r0
   11fac:	mov	r0, r5
   11fb0:	bl	10fe4 <Mat_VarFree@plt>
   11fb4:	ldr	r0, [sp, #36]	; 0x24
   11fb8:	str	r7, [r0, r4, lsl #2]
   11fbc:	add	r4, r4, #1
   11fc0:	cmp	r4, sl
   11fc4:	blt	11f64 <Mat_VarReadNextInfo@plt+0xe60>
   11fc8:	b	11c98 <Mat_VarReadNextInfo@plt+0xb94>
   11fcc:	ldr	r0, [r7, #32]
   11fd0:	ldr	r1, [r0, #4]
   11fd4:	cmp	r1, #1
   11fd8:	beq	11fe4 <Mat_VarReadNextInfo@plt+0xee0>
   11fdc:	str	r8, [r7, #4]
   11fe0:	ldr	r0, [r7, #32]
   11fe4:	ldr	r1, [r9]
   11fe8:	str	r1, [r0]
   11fec:	cmp	r4, #0
   11ff0:	beq	120bc <Mat_VarReadNextInfo@plt+0xfb8>
   11ff4:	cmp	r6, #1
   11ff8:	mov	r5, r4
   11ffc:	blt	12018 <Mat_VarReadNextInfo@plt+0xf14>
   12000:	ldr	r0, [r5]
   12004:	mov	r1, #1
   12008:	bl	110f8 <Mat_VarDuplicate@plt>
   1200c:	str	r0, [r5], #4
   12010:	subs	r6, r6, #1
   12014:	bne	12000 <Mat_VarReadNextInfo@plt+0xefc>
   12018:	ldr	r3, [r7, #4]
   1201c:	ldr	r1, [r7, #32]
   12020:	ldr	r0, [r7, #36]	; 0x24
   12024:	mov	r5, #1
   12028:	stm	sp, {r1, r4, r5}
   1202c:	mov	r1, #1
   12030:	mov	r2, #21
   12034:	bl	10f18 <Mat_VarCreate@plt>
   12038:	mov	r4, r0
   1203c:	mov	r0, r7
   12040:	bl	10fe4 <Mat_VarFree@plt>
   12044:	str	r4, [fp, #-32]	; 0xffffffe0
   12048:	ldr	r4, [sp, #28]
   1204c:	mov	r0, sl
   12050:	bl	10f24 <free@plt>
   12054:	ldr	r0, [sp, #36]	; 0x24
   12058:	bl	10f24 <free@plt>
   1205c:	mov	r0, r9
   12060:	bl	10f24 <free@plt>
   12064:	cmp	r5, #0
   12068:	ldr	r6, [sp, #24]
   1206c:	ldr	sl, [sp, #32]
   12070:	bne	11ca8 <Mat_VarReadNextInfo@plt+0xba4>
   12074:	b	12368 <Mat_VarReadNextInfo@plt+0x1264>
   12078:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1207c:	ldr	r3, [r0, #36]	; 0x24
   12080:	movw	r0, #20944	; 0x51d0
   12084:	movt	r0, #2
   12088:	ldr	r0, [r0]
   1208c:	movw	r1, #17095	; 0x42c7
   12090:	movt	r1, #1
   12094:	mov	r2, r9
   12098:	bl	11020 <fprintf@plt>
   1209c:	b	11c98 <Mat_VarReadNextInfo@plt+0xb94>
   120a0:	movw	r0, #20944	; 0x51d0
   120a4:	movt	r0, #2
   120a8:	ldr	r3, [r0]
   120ac:	movw	r0, #17256	; 0x4368
   120b0:	movt	r0, #1
   120b4:	mov	r1, #24
   120b8:	b	120d4 <Mat_VarReadNextInfo@plt+0xfd0>
   120bc:	movw	r0, #20944	; 0x51d0
   120c0:	movt	r0, #2
   120c4:	ldr	r3, [r0]
   120c8:	movw	r0, #17224	; 0x4348
   120cc:	movt	r0, #1
   120d0:	mov	r1, #31
   120d4:	mov	r2, #1
   120d8:	bl	10f78 <fwrite@plt>
   120dc:	mov	r5, #0
   120e0:	b	12048 <Mat_VarReadNextInfo@plt+0xf44>
   120e4:	add	r0, sl, #1
   120e8:	mov	r1, #41	; 0x29
   120ec:	bl	11008 <strchr@plt>
   120f0:	mov	r5, r0
   120f4:	add	r4, r0, #1
   120f8:	mov	r0, r4
   120fc:	bl	11bd8 <Mat_VarReadNextInfo@plt+0xad4>
   12100:	cmp	r0, r4
   12104:	bne	1237c <Mat_VarReadNextInfo@plt+0x1278>
   12108:	mov	r0, sl
   1210c:	mov	r1, r5
   12110:	bl	12910 <Mat_VarReadNextInfo@plt+0x180c>
   12114:	mov	r7, r0
   12118:	lsl	r6, r0, #2
   1211c:	mov	r0, r6
   12120:	bl	10fa8 <malloc@plt>
   12124:	mov	r8, r0
   12128:	mov	r0, r6
   1212c:	bl	10fa8 <malloc@plt>
   12130:	mov	r9, r0
   12134:	mov	r0, r6
   12138:	bl	10fa8 <malloc@plt>
   1213c:	mov	r4, r0
   12140:	cmp	r7, #1
   12144:	blt	12178 <Mat_VarReadNextInfo@plt+0x1074>
   12148:	mov	r0, r8
   1214c:	mov	r1, #0
   12150:	mov	r2, r6
   12154:	bl	11044 <memset@plt>
   12158:	mov	r0, #1
   1215c:	mov	r1, r9
   12160:	mov	r2, r4
   12164:	mov	r3, r7
   12168:	str	r0, [r1], #4
   1216c:	str	r0, [r2], #4
   12170:	subs	r3, r3, #1
   12174:	bne	12168 <Mat_VarReadNextInfo@plt+0x1064>
   12178:	str	r4, [sp]
   1217c:	mov	r0, sl
   12180:	mov	r1, r5
   12184:	mov	r2, r8
   12188:	mov	r3, r9
   1218c:	bl	12938 <Mat_VarReadNextInfo@plt+0x1834>
   12190:	ldr	r6, [fp, #-32]	; 0xffffffe0
   12194:	str	r6, [sp]
   12198:	mov	r0, r7
   1219c:	mov	r1, r8
   121a0:	mov	r2, r9
   121a4:	mov	r3, r4
   121a8:	bl	12b70 <Mat_VarReadNextInfo@plt+0x1a6c>
   121ac:	cmp	r0, #0
   121b0:	beq	12350 <Mat_VarReadNextInfo@plt+0x124c>
   121b4:	mov	r5, r0
   121b8:	ldr	r0, [r6, #16]
   121bc:	bl	110c8 <Mat_SizeOfClass@plt>
   121c0:	str	r0, [r6, #12]
   121c4:	mul	r0, r0, r5
   121c8:	str	r0, [r6]
   121cc:	ldr	r1, [r6, #20]
   121d0:	cmp	r1, #0
   121d4:	beq	1226c <Mat_VarReadNextInfo@plt+0x1168>
   121d8:	mov	r0, #8
   121dc:	bl	10fa8 <malloc@plt>
   121e0:	mov	r5, r0
   121e4:	str	r0, [r6, #40]	; 0x28
   121e8:	ldr	r0, [r6]
   121ec:	bl	10fa8 <malloc@plt>
   121f0:	str	r0, [r5]
   121f4:	ldr	r0, [r6]
   121f8:	bl	10fa8 <malloc@plt>
   121fc:	str	r0, [r5, #4]
   12200:	b	12274 <Mat_VarReadNextInfo@plt+0x1170>
   12204:	movw	r0, #20944	; 0x51d0
   12208:	movt	r0, #2
   1220c:	ldr	r0, [r0]
   12210:	movw	r1, #17167	; 0x430f
   12214:	movt	r1, #1
   12218:	mov	r2, r9
   1221c:	bl	11020 <fprintf@plt>
   12220:	b	12368 <Mat_VarReadNextInfo@plt+0x1264>
   12224:	movw	r0, #20944	; 0x51d0
   12228:	movt	r0, #2
   1222c:	ldr	r3, [r0]
   12230:	movw	r0, #17189	; 0x4325
   12234:	movt	r0, #1
   12238:	mov	r1, #34	; 0x22
   1223c:	mov	r2, #1
   12240:	bl	10f78 <fwrite@plt>
   12244:	b	12368 <Mat_VarReadNextInfo@plt+0x1264>
   12248:	ldr	r3, [r7, #36]	; 0x24
   1224c:	movw	r0, #20944	; 0x51d0
   12250:	movt	r0, #2
   12254:	ldr	r0, [r0]
   12258:	movw	r1, #17095	; 0x42c7
   1225c:	movt	r1, #1
   12260:	mov	r2, r9
   12264:	bl	11020 <fprintf@plt>
   12268:	b	12368 <Mat_VarReadNextInfo@plt+0x1264>
   1226c:	bl	10fa8 <malloc@plt>
   12270:	str	r0, [r6, #40]	; 0x28
   12274:	ldr	r2, [r6, #40]	; 0x28
   12278:	cmp	r2, #0
   1227c:	beq	123a0 <Mat_VarReadNextInfo@plt+0x129c>
   12280:	cmp	r7, #1
   12284:	bne	122cc <Mat_VarReadNextInfo@plt+0x11c8>
   12288:	ldr	r3, [r8]
   1228c:	ldr	r0, [r9]
   12290:	ldr	r1, [r4]
   12294:	stm	sp, {r0, r1}
   12298:	ldr	r0, [sp, #16]
   1229c:	mov	r1, r6
   122a0:	bl	10f3c <Mat_VarReadDataLinear@plt>
   122a4:	ldr	r0, [r6, #4]
   122a8:	cmp	r0, #2
   122ac:	bne	12338 <Mat_VarReadNextInfo@plt+0x1234>
   122b0:	ldr	r0, [r6, #32]
   122b4:	ldr	r1, [r0]
   122b8:	cmp	r1, #1
   122bc:	bne	1231c <Mat_VarReadNextInfo@plt+0x1218>
   122c0:	ldr	r1, [r4]
   122c4:	str	r1, [r0, #4]
   122c8:	b	12350 <Mat_VarReadNextInfo@plt+0x124c>
   122cc:	str	r9, [sp]
   122d0:	str	r4, [sp, #4]
   122d4:	ldr	r0, [sp, #16]
   122d8:	mov	r1, r6
   122dc:	mov	r3, r8
   122e0:	bl	10f54 <Mat_VarReadData@plt>
   122e4:	cmp	r7, #1
   122e8:	blt	12350 <Mat_VarReadNextInfo@plt+0x124c>
   122ec:	ldr	r0, [r6, #32]
   122f0:	mov	r1, r4
   122f4:	ldr	r2, [r1], #4
   122f8:	str	r2, [r0], #4
   122fc:	subs	r7, r7, #1
   12300:	bne	122f4 <Mat_VarReadNextInfo@plt+0x11f0>
   12304:	b	12350 <Mat_VarReadNextInfo@plt+0x124c>
   12308:	ldr	r0, [sp, #16]
   1230c:	mov	r1, r4
   12310:	bl	10f60 <Mat_VarReadDataAll@plt>
   12314:	str	r4, [fp, #-32]	; 0xffffffe0
   12318:	b	12368 <Mat_VarReadNextInfo@plt+0x1264>
   1231c:	ldr	r0, [r6, #32]
   12320:	ldr	r1, [r0, #4]
   12324:	cmp	r1, #1
   12328:	bne	12338 <Mat_VarReadNextInfo@plt+0x1234>
   1232c:	ldr	r1, [r4]
   12330:	str	r1, [r0]
   12334:	b	12350 <Mat_VarReadNextInfo@plt+0x124c>
   12338:	mov	r0, #2
   1233c:	str	r0, [r6, #4]
   12340:	ldr	r0, [r4]
   12344:	ldr	r1, [r6, #32]
   12348:	mov	r2, #1
   1234c:	stm	r1, {r0, r2}
   12350:	mov	r0, r8
   12354:	bl	10f24 <free@plt>
   12358:	mov	r0, r9
   1235c:	bl	10f24 <free@plt>
   12360:	mov	r0, r4
   12364:	bl	10f24 <free@plt>
   12368:	ldr	r0, [sp, #20]
   1236c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12370:	str	r1, [r0]
   12374:	sub	sp, fp, #28
   12378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1237c:	mov	r1, #0
   12380:	strb	r1, [r0]
   12384:	movw	r0, #20944	; 0x51d0
   12388:	movt	r0, #2
   1238c:	ldr	r3, [r0]
   12390:	movw	r0, #17000	; 0x4268
   12394:	movt	r0, #1
   12398:	mov	r1, #56	; 0x38
   1239c:	b	1223c <Mat_VarReadNextInfo@plt+0x1138>
   123a0:	movw	r0, #20944	; 0x51d0
   123a4:	movt	r0, #2
   123a8:	ldr	r3, [r0]
   123ac:	movw	r0, #17057	; 0x42a1
   123b0:	movt	r0, #1
   123b4:	mov	r1, #37	; 0x25
   123b8:	mov	r2, #1
   123bc:	bl	10f78 <fwrite@plt>
   123c0:	b	12350 <Mat_VarReadNextInfo@plt+0x124c>
   123c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123c8:	add	fp, sp, #28
   123cc:	sub	sp, sp, #12
   123d0:	mov	sl, r0
   123d4:	ldr	r0, [r0, #40]	; 0x28
   123d8:	cmp	r0, #0
   123dc:	beq	12530 <Mat_VarReadNextInfo@plt+0x142c>
   123e0:	ldr	r0, [sl, #8]
   123e4:	bl	10ff0 <Mat_SizeOf@plt>
   123e8:	str	r0, [sp, #4]
   123ec:	ldr	r0, [sl, #20]
   123f0:	cmp	r0, #0
   123f4:	beq	124ac <Mat_VarReadNextInfo@plt+0x13a8>
   123f8:	ldr	r0, [sl, #32]
   123fc:	ldr	r0, [r0]
   12400:	cmp	r0, #0
   12404:	beq	12530 <Mat_VarReadNextInfo@plt+0x142c>
   12408:	ldr	r0, [sl, #40]	; 0x28
   1240c:	ldr	r1, [r0]
   12410:	str	r1, [sp, #8]
   12414:	ldr	r6, [r0, #4]
   12418:	mov	r5, #0
   1241c:	movw	r7, #15944	; 0x3e48
   12420:	movt	r7, #1
   12424:	ldr	r4, [sp, #4]
   12428:	b	12448 <Mat_VarReadNextInfo@plt+0x1344>
   1242c:	mov	r0, #10
   12430:	bl	11050 <putchar@plt>
   12434:	add	r5, r5, #1
   12438:	ldr	r0, [sl, #32]
   1243c:	ldr	r0, [r0]
   12440:	cmp	r5, r0
   12444:	bcs	12530 <Mat_VarReadNextInfo@plt+0x142c>
   12448:	ldr	r0, [sl, #32]
   1244c:	ldr	r1, [r0, #4]
   12450:	cmp	r1, #0
   12454:	beq	1242c <Mat_VarReadNextInfo@plt+0x1328>
   12458:	mov	r8, #0
   1245c:	ldr	r0, [r0]
   12460:	mla	r9, r0, r8, r5
   12464:	ldr	r0, [sp, #8]
   12468:	mla	r1, r9, r4, r0
   1246c:	ldr	r0, [sl, #8]
   12470:	bl	12824 <Mat_VarReadNextInfo@plt+0x1720>
   12474:	movw	r0, #15940	; 0x3e44
   12478:	movt	r0, #1
   1247c:	bl	10ef4 <printf@plt>
   12480:	mla	r1, r9, r4, r6
   12484:	ldr	r0, [sl, #8]
   12488:	bl	12824 <Mat_VarReadNextInfo@plt+0x1720>
   1248c:	mov	r0, r7
   12490:	bl	10ef4 <printf@plt>
   12494:	add	r8, r8, #1
   12498:	ldr	r0, [sl, #32]
   1249c:	ldr	r1, [r0, #4]
   124a0:	cmp	r8, r1
   124a4:	bcc	1245c <Mat_VarReadNextInfo@plt+0x1358>
   124a8:	b	1242c <Mat_VarReadNextInfo@plt+0x1328>
   124ac:	ldr	r0, [sl, #32]
   124b0:	ldr	r0, [r0]
   124b4:	cmp	r0, #0
   124b8:	beq	12530 <Mat_VarReadNextInfo@plt+0x142c>
   124bc:	ldr	r8, [sl, #40]	; 0x28
   124c0:	mov	r7, #0
   124c4:	ldr	r5, [sp, #4]
   124c8:	b	124e8 <Mat_VarReadNextInfo@plt+0x13e4>
   124cc:	mov	r0, #10
   124d0:	bl	11050 <putchar@plt>
   124d4:	add	r7, r7, #1
   124d8:	ldr	r0, [sl, #32]
   124dc:	ldr	r0, [r0]
   124e0:	cmp	r7, r0
   124e4:	bcs	12530 <Mat_VarReadNextInfo@plt+0x142c>
   124e8:	ldr	r0, [sl, #32]
   124ec:	ldr	r1, [r0, #4]
   124f0:	cmp	r1, #0
   124f4:	beq	124cc <Mat_VarReadNextInfo@plt+0x13c8>
   124f8:	mov	r6, #0
   124fc:	ldr	r0, [r0]
   12500:	mla	r0, r0, r6, r7
   12504:	mla	r1, r0, r5, r8
   12508:	ldr	r0, [sl, #8]
   1250c:	bl	12824 <Mat_VarReadNextInfo@plt+0x1720>
   12510:	mov	r0, #32
   12514:	bl	11050 <putchar@plt>
   12518:	add	r6, r6, #1
   1251c:	ldr	r0, [sl, #32]
   12520:	ldr	r1, [r0, #4]
   12524:	cmp	r6, r1
   12528:	bcc	124fc <Mat_VarReadNextInfo@plt+0x13f8>
   1252c:	b	124cc <Mat_VarReadNextInfo@plt+0x13c8>
   12530:	sub	sp, fp, #28
   12534:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12538:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1253c:	add	fp, sp, #28
   12540:	sub	sp, sp, #20
   12544:	mov	r4, r0
   12548:	ldr	r0, [r0, #40]	; 0x28
   1254c:	cmp	r0, #0
   12550:	beq	1281c <Mat_VarReadNextInfo@plt+0x1718>
   12554:	ldr	r0, [r4, #8]
   12558:	bl	10ff0 <Mat_SizeOf@plt>
   1255c:	str	r0, [sp, #8]
   12560:	ldr	r0, [r4, #20]
   12564:	cmp	r0, #0
   12568:	beq	126e8 <Mat_VarReadNextInfo@plt+0x15e4>
   1256c:	ldr	r0, [r4, #32]
   12570:	ldr	r0, [r0, #8]
   12574:	cmp	r0, #0
   12578:	beq	1281c <Mat_VarReadNextInfo@plt+0x1718>
   1257c:	ldr	r0, [r4, #40]	; 0x28
   12580:	ldm	r0, {r7, r8}
   12584:	mov	r2, #0
   12588:	movw	r5, #20964	; 0x51e4
   1258c:	movt	r5, #2
   12590:	str	r7, [sp, #12]
   12594:	b	125c4 <Mat_VarReadNextInfo@plt+0x14c0>
   12598:	ldr	r0, [r5]
   1259c:	sub	r0, r0, #1
   125a0:	str	r0, [r5]
   125a4:	mov	r0, #10
   125a8:	bl	11050 <putchar@plt>
   125ac:	ldr	r2, [sp, #4]
   125b0:	add	r2, r2, #1
   125b4:	ldr	r0, [r4, #32]
   125b8:	ldr	r0, [r0, #8]
   125bc:	cmp	r2, r0
   125c0:	bcs	1281c <Mat_VarReadNextInfo@plt+0x1718>
   125c4:	ldr	r1, [r4, #36]	; 0x24
   125c8:	movw	r0, #15981	; 0x3e6d
   125cc:	movt	r0, #1
   125d0:	str	r2, [sp, #4]
   125d4:	bl	10f48 <Mat_Message@plt>
   125d8:	ldr	r0, [r5]
   125dc:	add	r0, r0, #1
   125e0:	str	r0, [r5]
   125e4:	ldr	r1, [r4, #32]
   125e8:	ldr	r1, [r1]
   125ec:	cmp	r1, #0
   125f0:	beq	12598 <Mat_VarReadNextInfo@plt+0x1494>
   125f4:	mov	r1, #0
   125f8:	str	r1, [sp, #16]
   125fc:	cmp	r0, #0
   12600:	movw	r7, #16138	; 0x3f0a
   12604:	movt	r7, #1
   12608:	beq	12628 <Mat_VarReadNextInfo@plt+0x1524>
   1260c:	mov	r6, #0
   12610:	mov	r0, r7
   12614:	bl	10ef4 <printf@plt>
   12618:	add	r6, r6, #1
   1261c:	ldr	r0, [r5]
   12620:	cmp	r6, r0
   12624:	bcc	12610 <Mat_VarReadNextInfo@plt+0x150c>
   12628:	ldr	r0, [r4, #32]
   1262c:	ldr	r1, [r0, #4]
   12630:	cmp	r1, #0
   12634:	ldmib	sp, {r3, r7}
   12638:	movw	r9, #15944	; 0x3e48
   1263c:	movt	r9, #1
   12640:	mov	r5, r4
   12644:	mov	r4, r9
   12648:	ldr	r9, [sp, #16]
   1264c:	beq	126b4 <Mat_VarReadNextInfo@plt+0x15b0>
   12650:	mov	sl, #0
   12654:	str	r9, [sp, #16]
   12658:	mla	r1, r3, r1, sl
   1265c:	ldr	r0, [r0]
   12660:	mla	r6, r1, r0, r9
   12664:	ldr	r0, [sp, #12]
   12668:	mla	r1, r6, r7, r0
   1266c:	ldr	r0, [r5, #8]
   12670:	mov	r9, r3
   12674:	bl	12824 <Mat_VarReadNextInfo@plt+0x1720>
   12678:	movw	r0, #15940	; 0x3e44
   1267c:	movt	r0, #1
   12680:	bl	10ef4 <printf@plt>
   12684:	mla	r1, r6, r7, r8
   12688:	ldr	r0, [r5, #8]
   1268c:	bl	12824 <Mat_VarReadNextInfo@plt+0x1720>
   12690:	mov	r0, r4
   12694:	bl	10ef4 <printf@plt>
   12698:	mov	r3, r9
   1269c:	ldr	r9, [sp, #16]
   126a0:	add	sl, sl, #1
   126a4:	ldr	r0, [r5, #32]
   126a8:	ldr	r1, [r0, #4]
   126ac:	cmp	sl, r1
   126b0:	bcc	12658 <Mat_VarReadNextInfo@plt+0x1554>
   126b4:	mov	r0, #10
   126b8:	mov	r4, r5
   126bc:	bl	11050 <putchar@plt>
   126c0:	add	r9, r9, #1
   126c4:	ldr	r0, [r5, #32]
   126c8:	ldr	r0, [r0]
   126cc:	cmp	r9, r0
   126d0:	movw	r5, #20964	; 0x51e4
   126d4:	movt	r5, #2
   126d8:	bcs	12598 <Mat_VarReadNextInfo@plt+0x1494>
   126dc:	str	r9, [sp, #16]
   126e0:	ldr	r0, [r5]
   126e4:	b	125fc <Mat_VarReadNextInfo@plt+0x14f8>
   126e8:	ldr	r0, [r4, #32]
   126ec:	ldr	r0, [r0, #8]
   126f0:	cmp	r0, #0
   126f4:	beq	1281c <Mat_VarReadNextInfo@plt+0x1718>
   126f8:	ldr	r7, [r4, #40]	; 0x28
   126fc:	mov	sl, #0
   12700:	movw	r5, #20964	; 0x51e4
   12704:	movt	r5, #2
   12708:	movw	r6, #16138	; 0x3f0a
   1270c:	movt	r6, #1
   12710:	b	1273c <Mat_VarReadNextInfo@plt+0x1638>
   12714:	ldr	r0, [r5]
   12718:	sub	r0, r0, #1
   1271c:	str	r0, [r5]
   12720:	mov	r0, #10
   12724:	bl	11050 <putchar@plt>
   12728:	add	sl, sl, #1
   1272c:	ldr	r0, [r4, #32]
   12730:	ldr	r0, [r0, #8]
   12734:	cmp	sl, r0
   12738:	bcs	1281c <Mat_VarReadNextInfo@plt+0x1718>
   1273c:	ldr	r1, [r4, #36]	; 0x24
   12740:	movw	r0, #15981	; 0x3e6d
   12744:	movt	r0, #1
   12748:	mov	r2, sl
   1274c:	bl	10f48 <Mat_Message@plt>
   12750:	ldr	r0, [r5]
   12754:	add	r0, r0, #1
   12758:	str	r0, [r5]
   1275c:	ldr	r1, [r4, #32]
   12760:	ldr	r1, [r1]
   12764:	cmp	r1, #0
   12768:	beq	12714 <Mat_VarReadNextInfo@plt+0x1610>
   1276c:	mov	r8, #0
   12770:	mov	r9, r7
   12774:	cmp	r0, #0
   12778:	beq	12798 <Mat_VarReadNextInfo@plt+0x1694>
   1277c:	mov	r7, #0
   12780:	mov	r0, r6
   12784:	bl	10ef4 <printf@plt>
   12788:	add	r7, r7, #1
   1278c:	ldr	r0, [r5]
   12790:	cmp	r7, r0
   12794:	bcc	12780 <Mat_VarReadNextInfo@plt+0x167c>
   12798:	mov	r6, r5
   1279c:	ldr	r0, [r4, #32]
   127a0:	ldr	r1, [r0, #4]
   127a4:	cmp	r1, #0
   127a8:	ldr	r5, [sp, #8]
   127ac:	mov	r7, r9
   127b0:	beq	127ec <Mat_VarReadNextInfo@plt+0x16e8>
   127b4:	mov	r9, #0
   127b8:	mla	r1, sl, r1, r9
   127bc:	ldr	r0, [r0]
   127c0:	mla	r0, r1, r0, r8
   127c4:	mla	r1, r0, r5, r7
   127c8:	ldr	r0, [r4, #8]
   127cc:	bl	12824 <Mat_VarReadNextInfo@plt+0x1720>
   127d0:	mov	r0, #32
   127d4:	bl	11050 <putchar@plt>
   127d8:	add	r9, r9, #1
   127dc:	ldr	r0, [r4, #32]
   127e0:	ldr	r1, [r0, #4]
   127e4:	cmp	r9, r1
   127e8:	bcc	127b8 <Mat_VarReadNextInfo@plt+0x16b4>
   127ec:	mov	r0, #10
   127f0:	bl	11050 <putchar@plt>
   127f4:	add	r8, r8, #1
   127f8:	ldr	r0, [r4, #32]
   127fc:	ldr	r0, [r0]
   12800:	cmp	r8, r0
   12804:	mov	r5, r6
   12808:	movw	r6, #16138	; 0x3f0a
   1280c:	movt	r6, #1
   12810:	bcs	12714 <Mat_VarReadNextInfo@plt+0x1610>
   12814:	ldr	r0, [r5]
   12818:	b	12770 <Mat_VarReadNextInfo@plt+0x166c>
   1281c:	sub	sp, fp, #28
   12820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12824:	sub	r0, r0, #1
   12828:	cmp	r0, #12
   1282c:	bxhi	lr
   12830:	add	r2, pc, #0
   12834:	ldr	pc, [r2, r0, lsl #2]
   12838:	andeq	r2, r1, ip, ror #16
   1283c:	andeq	r2, r1, ip, ror r8
   12840:	andeq	r2, r1, ip, lsl #17
   12844:	muleq	r1, ip, r8
   12848:	andeq	r2, r1, ip, lsr #17
   1284c:			; <UNDEFINED> instruction: 0x000128bc
   12850:	andeq	r2, r1, ip, asr #17
   12854:	andeq	r2, r1, ip, lsl #18
   12858:	ldrdeq	r2, [r1], -r8
   1285c:	andeq	r2, r1, ip, lsl #18
   12860:	andeq	r2, r1, ip, lsl #18
   12864:	andeq	r2, r1, ip, ror #17
   12868:	strdeq	r2, [r1], -ip
   1286c:	ldrsb	r1, [r1]
   12870:	movw	r0, #15971	; 0x3e63
   12874:	movt	r0, #1
   12878:	b	10ef4 <printf@plt>
   1287c:	ldrb	r1, [r1]
   12880:	movw	r0, #15976	; 0x3e68
   12884:	movt	r0, #1
   12888:	b	10ef4 <printf@plt>
   1288c:	ldrsh	r1, [r1]
   12890:	movw	r0, #15963	; 0x3e5b
   12894:	movt	r0, #1
   12898:	b	10ef4 <printf@plt>
   1289c:	ldrh	r1, [r1]
   128a0:	movw	r0, #15967	; 0x3e5f
   128a4:	movt	r0, #1
   128a8:	b	10ef4 <printf@plt>
   128ac:	ldr	r1, [r1]
   128b0:	movw	r0, #15873	; 0x3e01
   128b4:	movt	r0, #1
   128b8:	b	10ef4 <printf@plt>
   128bc:	ldr	r1, [r1]
   128c0:	movw	r0, #15960	; 0x3e58
   128c4:	movt	r0, #1
   128c8:	b	10ef4 <printf@plt>
   128cc:	vldr	s0, [r1]
   128d0:	vcvt.f64.f32	d16, s0
   128d4:	b	128dc <Mat_VarReadNextInfo@plt+0x17d8>
   128d8:	vldr	d16, [r1]
   128dc:	vmov	r2, r3, d16
   128e0:	movw	r0, #15947	; 0x3e4b
   128e4:	movt	r0, #1
   128e8:	b	10ef4 <printf@plt>
   128ec:	ldrd	r2, [r1]
   128f0:	movw	r0, #15950	; 0x3e4e
   128f4:	movt	r0, #1
   128f8:	b	10ef4 <printf@plt>
   128fc:	ldrd	r2, [r1]
   12900:	movw	r0, #15955	; 0x3e53
   12904:	movt	r0, #1
   12908:	b	10ef4 <printf@plt>
   1290c:	bx	lr
   12910:	add	r2, r0, #1
   12914:	mov	r0, #1
   12918:	cmp	r2, r1
   1291c:	bxeq	lr
   12920:	ldrb	r3, [r2], #1
   12924:	cmp	r3, #44	; 0x2c
   12928:	addeq	r0, r0, #1
   1292c:	cmp	r1, r2
   12930:	bne	12920 <Mat_VarReadNextInfo@plt+0x181c>
   12934:	bx	lr
   12938:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1293c:	add	fp, sp, #28
   12940:	sub	sp, sp, #12
   12944:	str	r3, [sp, #4]
   12948:	str	r2, [sp, #8]
   1294c:	mov	r6, r1
   12950:	mov	r7, r0
   12954:	add	r5, r0, #1
   12958:	movw	r4, #17281	; 0x4381
   1295c:	movt	r4, #1
   12960:	mov	r9, #0
   12964:	mov	sl, #0
   12968:	b	12998 <Mat_VarReadNextInfo@plt+0x1894>
   1296c:	mov	r0, r5
   12970:	bl	110b0 <atoi@plt>
   12974:	cmp	r9, #2
   12978:	cmpne	r9, #1
   1297c:	bne	12ab4 <Mat_VarReadNextInfo@plt+0x19b0>
   12980:	ldr	r1, [fp, #8]
   12984:	str	r0, [r1, sl, lsl #2]
   12988:	add	r5, r8, #2
   1298c:	add	r9, r9, #1
   12990:	cmp	r6, r7
   12994:	beq	12b68 <Mat_VarReadNextInfo@plt+0x1a64>
   12998:	mov	r8, r7
   1299c:	ldrb	r0, [r7, #1]!
   129a0:	cmp	r0, #57	; 0x39
   129a4:	bgt	129f8 <Mat_VarReadNextInfo@plt+0x18f4>
   129a8:	cmp	r0, #41	; 0x29
   129ac:	beq	12a08 <Mat_VarReadNextInfo@plt+0x1904>
   129b0:	cmp	r0, #44	; 0x2c
   129b4:	bne	12990 <Mat_VarReadNextInfo@plt+0x188c>
   129b8:	cmp	r9, #0
   129bc:	beq	12acc <Mat_VarReadNextInfo@plt+0x19c8>
   129c0:	cmp	r9, #1
   129c4:	beq	129d0 <Mat_VarReadNextInfo@plt+0x18cc>
   129c8:	cmp	r9, #2
   129cc:	bne	12b54 <Mat_VarReadNextInfo@plt+0x1a50>
   129d0:	mov	r0, #0
   129d4:	strb	r0, [r8, #1]
   129d8:	mov	r0, r5
   129dc:	mov	r1, r4
   129e0:	bl	10edc <strcmp@plt>
   129e4:	cmp	r0, #0
   129e8:	beq	12b08 <Mat_VarReadNextInfo@plt+0x1a04>
   129ec:	mov	r0, r5
   129f0:	bl	110b0 <atoi@plt>
   129f4:	b	12b4c <Mat_VarReadNextInfo@plt+0x1a48>
   129f8:	cmp	r0, #58	; 0x3a
   129fc:	beq	12a50 <Mat_VarReadNextInfo@plt+0x194c>
   12a00:	cmp	r0, #125	; 0x7d
   12a04:	bne	12990 <Mat_VarReadNextInfo@plt+0x188c>
   12a08:	mov	r0, #0
   12a0c:	strb	r0, [r8, #1]
   12a10:	mov	r0, r5
   12a14:	mov	r1, r4
   12a18:	bl	10edc <strcmp@plt>
   12a1c:	cmp	r0, #0
   12a20:	bne	1296c <Mat_VarReadNextInfo@plt+0x1868>
   12a24:	cmp	r9, #2
   12a28:	cmpne	r9, #1
   12a2c:	beq	12aa4 <Mat_VarReadNextInfo@plt+0x19a0>
   12a30:	cmp	r9, #0
   12a34:	bne	12b20 <Mat_VarReadNextInfo@plt+0x1a1c>
   12a38:	ldr	r0, [sp, #8]
   12a3c:	mvn	r1, #0
   12a40:	str	r1, [r0, sl, lsl #2]
   12a44:	ldr	r0, [fp, #8]
   12a48:	str	r1, [r0, sl, lsl #2]
   12a4c:	b	12988 <Mat_VarReadNextInfo@plt+0x1884>
   12a50:	mov	r0, #0
   12a54:	strb	r0, [r8, #1]
   12a58:	mov	r0, r5
   12a5c:	mov	r1, r4
   12a60:	bl	10edc <strcmp@plt>
   12a64:	cmp	r0, #0
   12a68:	beq	12a98 <Mat_VarReadNextInfo@plt+0x1994>
   12a6c:	mov	r0, r5
   12a70:	bl	110b0 <atoi@plt>
   12a74:	cmp	r9, #2
   12a78:	beq	12980 <Mat_VarReadNextInfo@plt+0x187c>
   12a7c:	cmp	r9, #1
   12a80:	beq	12b00 <Mat_VarReadNextInfo@plt+0x19fc>
   12a84:	cmp	r9, #0
   12a88:	bne	12b20 <Mat_VarReadNextInfo@plt+0x1a1c>
   12a8c:	sub	r0, r0, #1
   12a90:	ldr	r1, [sp, #8]
   12a94:	b	12984 <Mat_VarReadNextInfo@plt+0x1880>
   12a98:	cmp	r9, #2
   12a9c:	cmpne	r9, #1
   12aa0:	bne	12b10 <Mat_VarReadNextInfo@plt+0x1a0c>
   12aa4:	ldr	r0, [fp, #8]
   12aa8:	mvn	r1, #0
   12aac:	str	r1, [r0, sl, lsl #2]
   12ab0:	b	12988 <Mat_VarReadNextInfo@plt+0x1884>
   12ab4:	cmp	r9, #0
   12ab8:	bne	12b20 <Mat_VarReadNextInfo@plt+0x1a1c>
   12abc:	sub	r1, r0, #1
   12ac0:	ldr	r2, [sp, #8]
   12ac4:	str	r1, [r2, sl, lsl #2]
   12ac8:	b	12980 <Mat_VarReadNextInfo@plt+0x187c>
   12acc:	mov	r0, #0
   12ad0:	strb	r0, [r8, #1]
   12ad4:	mov	r0, r5
   12ad8:	mov	r1, r4
   12adc:	bl	10edc <strcmp@plt>
   12ae0:	cmp	r0, #0
   12ae4:	beq	12b40 <Mat_VarReadNextInfo@plt+0x1a3c>
   12ae8:	mov	r0, r5
   12aec:	bl	110b0 <atoi@plt>
   12af0:	sub	r1, r0, #1
   12af4:	ldr	r2, [sp, #8]
   12af8:	str	r1, [r2, sl, lsl #2]
   12afc:	b	12b4c <Mat_VarReadNextInfo@plt+0x1a48>
   12b00:	ldr	r1, [sp, #4]
   12b04:	b	12984 <Mat_VarReadNextInfo@plt+0x1880>
   12b08:	mvn	r0, #0
   12b0c:	b	12b4c <Mat_VarReadNextInfo@plt+0x1a48>
   12b10:	cmp	r9, #0
   12b14:	bne	12b20 <Mat_VarReadNextInfo@plt+0x1a1c>
   12b18:	ldr	r0, [sp, #8]
   12b1c:	b	12aa8 <Mat_VarReadNextInfo@plt+0x19a4>
   12b20:	movw	r0, #20944	; 0x51d0
   12b24:	movt	r0, #2
   12b28:	ldr	r0, [r0]
   12b2c:	add	r2, sl, #1
   12b30:	movw	r1, #17285	; 0x4385
   12b34:	movt	r1, #1
   12b38:	bl	11020 <fprintf@plt>
   12b3c:	b	12988 <Mat_VarReadNextInfo@plt+0x1884>
   12b40:	mvn	r0, #0
   12b44:	ldr	r1, [sp, #8]
   12b48:	str	r0, [r1, sl, lsl #2]
   12b4c:	ldr	r1, [fp, #8]
   12b50:	str	r0, [r1, sl, lsl #2]
   12b54:	add	r5, r8, #2
   12b58:	add	sl, sl, #1
   12b5c:	mov	r9, #0
   12b60:	cmp	r6, r7
   12b64:	bne	12998 <Mat_VarReadNextInfo@plt+0x1894>
   12b68:	sub	sp, fp, #28
   12b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b74:	add	fp, sp, #28
   12b78:	sub	sp, sp, #4
   12b7c:	ldr	ip, [fp, #8]
   12b80:	ldr	r7, [ip, #4]
   12b84:	mov	r9, #0
   12b88:	cmp	r0, #1
   12b8c:	cmpne	r7, r0
   12b90:	bne	12e84 <Mat_VarReadNextInfo@plt+0x1d80>
   12b94:	cmp	r0, #1
   12b98:	bne	12bc0 <Mat_VarReadNextInfo@plt+0x1abc>
   12b9c:	cmp	r7, #1
   12ba0:	blt	12ce4 <Mat_VarReadNextInfo@plt+0x1be0>
   12ba4:	ldr	r6, [ip, #32]
   12ba8:	mov	r0, #1
   12bac:	ldr	r5, [r6], #4
   12bb0:	mul	r0, r5, r0
   12bb4:	subs	r7, r7, #1
   12bb8:	bne	12bac <Mat_VarReadNextInfo@plt+0x1aa8>
   12bbc:	b	12ce8 <Mat_VarReadNextInfo@plt+0x1be4>
   12bc0:	blt	12d48 <Mat_VarReadNextInfo@plt+0x1c44>
   12bc4:	mov	lr, #0
   12bc8:	mov	r8, #1
   12bcc:	mov	r9, #1
   12bd0:	mov	r4, #0
   12bd4:	b	12bfc <Mat_VarReadNextInfo@plt+0x1af8>
   12bd8:	str	r5, [r3, r4, lsl #2]
   12bdc:	ldr	r5, [r1, r4, lsl #2]
   12be0:	cmn	r5, #1
   12be4:	strle	lr, [r1, r4, lsl #2]
   12be8:	ldr	r5, [r3, r4, lsl #2]
   12bec:	mul	r9, r5, r9
   12bf0:	add	r4, r4, #1
   12bf4:	cmp	r0, r4
   12bf8:	beq	12e84 <Mat_VarReadNextInfo@plt+0x1d80>
   12bfc:	ldr	r7, [r2, r4, lsl #2]
   12c00:	cmp	r7, #0
   12c04:	ble	12d78 <Mat_VarReadNextInfo@plt+0x1c74>
   12c08:	ldr	r6, [r3, r4, lsl #2]
   12c0c:	cmn	r6, #1
   12c10:	beq	12c58 <Mat_VarReadNextInfo@plt+0x1b54>
   12c14:	cmp	r6, #0
   12c18:	bmi	12c64 <Mat_VarReadNextInfo@plt+0x1b60>
   12c1c:	ldr	r5, [ip, #32]
   12c20:	ldr	r5, [r5, r4, lsl #2]
   12c24:	cmp	r6, r5
   12c28:	bhi	12df0 <Mat_VarReadNextInfo@plt+0x1cec>
   12c2c:	ldr	sl, [r1, r4, lsl #2]
   12c30:	cmp	sl, r5
   12c34:	bcs	12da0 <Mat_VarReadNextInfo@plt+0x1c9c>
   12c38:	cmp	r6, #1
   12c3c:	cmpge	sl, r6
   12c40:	bgt	12da0 <Mat_VarReadNextInfo@plt+0x1c9c>
   12c44:	add	r5, sl, #1
   12c48:	cmp	r6, r5
   12c4c:	bne	12c94 <Mat_VarReadNextInfo@plt+0x1b90>
   12c50:	str	r8, [r3, r4, lsl #2]
   12c54:	b	12be8 <Mat_VarReadNextInfo@plt+0x1ae4>
   12c58:	ldr	r5, [r1, r4, lsl #2]
   12c5c:	cmn	r5, #1
   12c60:	beq	12ccc <Mat_VarReadNextInfo@plt+0x1bc8>
   12c64:	ldr	r5, [ip, #32]
   12c68:	ldr	r5, [r5, r4, lsl #2]
   12c6c:	cmp	r7, #1
   12c70:	beq	12bd8 <Mat_VarReadNextInfo@plt+0x1ad4>
   12c74:	ldr	r6, [r1, r4, lsl #2]
   12c78:	mvn	r6, r6
   12c7c:	vmov	s0, r7
   12c80:	add	r5, r5, r6
   12c84:	vcvt.f64.s32	d16, s0
   12c88:	vmov	s0, r5
   12c8c:	vcvt.f64.u32	d17, s0
   12c90:	b	12cb4 <Mat_VarReadNextInfo@plt+0x1bb0>
   12c94:	cmp	r6, #1
   12c98:	blt	12be8 <Mat_VarReadNextInfo@plt+0x1ae4>
   12c9c:	mvn	r5, sl
   12ca0:	vmov	s0, r7
   12ca4:	add	r5, r6, r5
   12ca8:	vcvt.f64.s32	d16, s0
   12cac:	vmov	s0, r5
   12cb0:	vcvt.f64.s32	d17, s0
   12cb4:	vdiv.f64	d16, d17, d16
   12cb8:	vcvtm.s32.f64	s0, d16
   12cbc:	vmov	r5, s0
   12cc0:	add	r5, r5, #1
   12cc4:	str	r5, [r3, r4, lsl #2]
   12cc8:	b	12be8 <Mat_VarReadNextInfo@plt+0x1ae4>
   12ccc:	str	r8, [r3, r4, lsl #2]
   12cd0:	ldr	r5, [ip, #32]
   12cd4:	ldr	r5, [r5, r4, lsl #2]
   12cd8:	sub	r5, r5, #1
   12cdc:	str	r5, [r1, r4, lsl #2]
   12ce0:	b	12be8 <Mat_VarReadNextInfo@plt+0x1ae4>
   12ce4:	mov	r0, #1
   12ce8:	ldr	r7, [r2]
   12cec:	cmp	r7, #0
   12cf0:	ble	12e48 <Mat_VarReadNextInfo@plt+0x1d44>
   12cf4:	ldr	r6, [r3]
   12cf8:	cmp	r6, r0
   12cfc:	bgt	12e64 <Mat_VarReadNextInfo@plt+0x1d60>
   12d00:	ldr	r4, [r1]
   12d04:	cmp	r4, r0
   12d08:	bge	12dd4 <Mat_VarReadNextInfo@plt+0x1cd0>
   12d0c:	cmp	r6, #1
   12d10:	cmpge	r4, r6
   12d14:	bgt	12dd4 <Mat_VarReadNextInfo@plt+0x1cd0>
   12d18:	cmn	r6, #1
   12d1c:	beq	12d50 <Mat_VarReadNextInfo@plt+0x1c4c>
   12d20:	cmp	r6, #1
   12d24:	blt	12dcc <Mat_VarReadNextInfo@plt+0x1cc8>
   12d28:	mvn	r0, r4
   12d2c:	vmov	s0, r7
   12d30:	add	r0, r6, r0
   12d34:	vcvt.f64.s32	d16, s0
   12d38:	vmov	s0, r0
   12d3c:	vcvt.f64.s32	d17, s0
   12d40:	vdiv.f64	d16, d17, d16
   12d44:	b	12e30 <Mat_VarReadNextInfo@plt+0x1d2c>
   12d48:	mov	r9, #1
   12d4c:	b	12e84 <Mat_VarReadNextInfo@plt+0x1d80>
   12d50:	cmn	r4, #1
   12d54:	beq	12dbc <Mat_VarReadNextInfo@plt+0x1cb8>
   12d58:	str	r0, [r3]
   12d5c:	ldr	r6, [r1]
   12d60:	cmp	r7, #1
   12d64:	bne	12e14 <Mat_VarReadNextInfo@plt+0x1d10>
   12d68:	cmn	r6, #1
   12d6c:	bgt	12dcc <Mat_VarReadNextInfo@plt+0x1cc8>
   12d70:	mov	r0, #0
   12d74:	b	12dc8 <Mat_VarReadNextInfo@plt+0x1cc4>
   12d78:	movw	r0, #20944	; 0x51d0
   12d7c:	movt	r0, #2
   12d80:	ldr	r3, [r0]
   12d84:	movw	r0, #17311	; 0x439f
   12d88:	movt	r0, #1
   12d8c:	mov	r1, #23
   12d90:	mov	r2, #1
   12d94:	bl	10f78 <fwrite@plt>
   12d98:	mov	r9, #0
   12d9c:	b	12e84 <Mat_VarReadNextInfo@plt+0x1d80>
   12da0:	movw	r0, #20944	; 0x51d0
   12da4:	movt	r0, #2
   12da8:	ldr	r0, [r0]
   12dac:	add	r2, r4, #1
   12db0:	movw	r1, #17406	; 0x43fe
   12db4:	movt	r1, #1
   12db8:	b	12e08 <Mat_VarReadNextInfo@plt+0x1d04>
   12dbc:	mov	r2, #1
   12dc0:	str	r2, [r3]
   12dc4:	sub	r0, r0, #1
   12dc8:	str	r0, [r1]
   12dcc:	ldr	r9, [r3]
   12dd0:	b	12e84 <Mat_VarReadNextInfo@plt+0x1d80>
   12dd4:	movw	r0, #20944	; 0x51d0
   12dd8:	movt	r0, #2
   12ddc:	ldr	r3, [r0]
   12de0:	movw	r0, #17353	; 0x43c9
   12de4:	movt	r0, #1
   12de8:	mov	r1, #18
   12dec:	b	12e7c <Mat_VarReadNextInfo@plt+0x1d78>
   12df0:	movw	r0, #20944	; 0x51d0
   12df4:	movt	r0, #2
   12df8:	ldr	r0, [r0]
   12dfc:	add	r2, r4, #1
   12e00:	movw	r1, #17372	; 0x43dc
   12e04:	movt	r1, #1
   12e08:	bl	11020 <fprintf@plt>
   12e0c:	mov	r9, #0
   12e10:	b	12e84 <Mat_VarReadNextInfo@plt+0x1d80>
   12e14:	mvn	r1, r6
   12e18:	vldr	s0, [r2]
   12e1c:	add	r0, r0, r1
   12e20:	vmov	s2, r0
   12e24:	vcvt.f64.s32	d16, s2
   12e28:	vcvt.f64.s32	d17, s0
   12e2c:	vdiv.f64	d16, d16, d17
   12e30:	vcvtm.s32.f64	s0, d16
   12e34:	vmov	r0, s0
   12e38:	add	r0, r0, #1
   12e3c:	str	r0, [r3]
   12e40:	ldr	r9, [r3]
   12e44:	b	12e84 <Mat_VarReadNextInfo@plt+0x1d80>
   12e48:	movw	r0, #20944	; 0x51d0
   12e4c:	movt	r0, #2
   12e50:	ldr	r3, [r0]
   12e54:	movw	r0, #17311	; 0x439f
   12e58:	movt	r0, #1
   12e5c:	mov	r1, #23
   12e60:	b	12e7c <Mat_VarReadNextInfo@plt+0x1d78>
   12e64:	movw	r0, #20944	; 0x51d0
   12e68:	movt	r0, #2
   12e6c:	ldr	r3, [r0]
   12e70:	movw	r0, #17335	; 0x43b7
   12e74:	movt	r0, #1
   12e78:	mov	r1, #17
   12e7c:	mov	r2, #1
   12e80:	bl	10f78 <fwrite@plt>
   12e84:	mov	r0, r9
   12e88:	sub	sp, fp, #28
   12e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012e90 <getopt@@Base>:
   12e90:	push	{fp, lr}
   12e94:	mov	fp, sp
   12e98:	sub	sp, sp, #8
   12e9c:	mov	r3, #0
   12ea0:	str	r3, [sp]
   12ea4:	str	r3, [sp, #4]
   12ea8:	mov	r3, #0
   12eac:	bl	12eb8 <getopt@@Base+0x28>
   12eb0:	mov	sp, fp
   12eb4:	pop	{fp, pc}
   12eb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ebc:	add	fp, sp, #28
   12ec0:	sub	sp, sp, #36	; 0x24
   12ec4:	cmp	r2, #0
   12ec8:	beq	133f8 <getopt@@Base+0x568>
   12ecc:	mov	r8, r3
   12ed0:	mov	r5, r2
   12ed4:	str	r0, [sp, #24]
   12ed8:	str	r1, [sp, #28]
   12edc:	ldr	r7, [fp, #12]
   12ee0:	ldr	r0, [pc, #1700]	; 1358c <getopt@@Base+0x6fc>
   12ee4:	add	r0, pc, r0
   12ee8:	bl	10f90 <getenv@plt>
   12eec:	ldrb	r2, [r5]
   12ef0:	cmp	r2, #45	; 0x2d
   12ef4:	str	r0, [sp, #8]
   12ef8:	bne	12f08 <getopt@@Base+0x78>
   12efc:	orr	r7, r7, #2
   12f00:	add	r5, r5, #1
   12f04:	b	12f24 <getopt@@Base+0x94>
   12f08:	bic	r1, r7, #1
   12f0c:	cmp	r2, #43	; 0x2b
   12f10:	moveq	r7, r1
   12f14:	cmp	r0, #0
   12f18:	movne	r7, r1
   12f1c:	cmp	r2, #43	; 0x2b
   12f20:	addeq	r5, r5, #1
   12f24:	ldr	r3, [sp, #28]
   12f28:	ldr	r6, [sp, #24]
   12f2c:	ldr	r4, [pc, #1628]	; 13590 <getopt@@Base+0x700>
   12f30:	ldr	r4, [pc, r4]
   12f34:	ldr	r0, [r4]
   12f38:	cmp	r0, #0
   12f3c:	ldr	lr, [pc, #1616]	; 13594 <getopt@@Base+0x704>
   12f40:	add	lr, pc, lr
   12f44:	str	r5, [sp, #20]
   12f48:	str	r8, [sp, #16]
   12f4c:	beq	12f78 <getopt@@Base+0xe8>
   12f50:	ldr	r0, [pc, #1608]	; 135a0 <getopt@@Base+0x710>
   12f54:	ldr	r0, [pc, r0]
   12f58:	mov	r1, #0
   12f5c:	str	r1, [r0]
   12f60:	ldr	r0, [pc, #1596]	; 135a4 <getopt@@Base+0x714>
   12f64:	ldr	r0, [pc, r0]
   12f68:	ldr	r0, [r0]
   12f6c:	cmp	r0, #0
   12f70:	bne	12f9c <getopt@@Base+0x10c>
   12f74:	b	12fb0 <getopt@@Base+0x120>
   12f78:	mov	r0, #1
   12f7c:	str	r0, [r4]
   12f80:	ldr	r1, [pc, #1552]	; 13598 <getopt@@Base+0x708>
   12f84:	ldr	r1, [pc, r1]
   12f88:	str	r0, [r1]
   12f8c:	ldr	r0, [pc, #1544]	; 1359c <getopt@@Base+0x70c>
   12f90:	ldr	r0, [pc, r0]
   12f94:	mov	r1, #0
   12f98:	str	r1, [r0]
   12f9c:	mvn	r0, #0
   12fa0:	str	r0, [lr]
   12fa4:	ldr	r1, [pc, #1532]	; 135a8 <getopt@@Base+0x718>
   12fa8:	add	r1, pc, r1
   12fac:	str	r0, [r1]
   12fb0:	and	r0, r7, #1
   12fb4:	str	r0, [sp, #32]
   12fb8:	str	r7, [sp, #12]
   12fbc:	and	r8, r7, #2
   12fc0:	ldr	sl, [pc, #1508]	; 135ac <getopt@@Base+0x71c>
   12fc4:	ldr	sl, [pc, sl]
   12fc8:	ldr	r5, [pc, #1504]	; 135b0 <getopt@@Base+0x720>
   12fcc:	add	r5, pc, r5
   12fd0:	ldr	ip, [pc, #1500]	; 135b4 <getopt@@Base+0x724>
   12fd4:	add	ip, pc, ip
   12fd8:	b	12fec <getopt@@Base+0x15c>
   12fdc:	str	r2, [lr]
   12fe0:	ldr	r0, [r4]
   12fe4:	add	r0, r0, #1
   12fe8:	str	r0, [r4]
   12fec:	ldr	r0, [sl]
   12ff0:	cmp	r0, #0
   12ff4:	bne	1300c <getopt@@Base+0x17c>
   12ff8:	ldr	r0, [pc, #1464]	; 135b8 <getopt@@Base+0x728>
   12ffc:	ldr	r0, [pc, r0]
   13000:	ldrb	r0, [r0]
   13004:	cmp	r0, #0
   13008:	bne	13180 <getopt@@Base+0x2f0>
   1300c:	mov	r0, #0
   13010:	str	r0, [sl]
   13014:	ldr	r2, [r4]
   13018:	cmp	r2, r6
   1301c:	bge	130d0 <getopt@@Base+0x240>
   13020:	ldr	r0, [r3, r2, lsl #2]
   13024:	str	r0, [r5]
   13028:	ldrb	r1, [r0]
   1302c:	cmp	r1, #45	; 0x2d
   13030:	bne	13040 <getopt@@Base+0x1b0>
   13034:	ldrb	r1, [r0, #1]
   13038:	cmp	r1, #0
   1303c:	bne	1313c <getopt@@Base+0x2ac>
   13040:	str	ip, [r5]
   13044:	cmp	r8, #0
   13048:	bne	1311c <getopt@@Base+0x28c>
   1304c:	ldr	r0, [sp, #32]
   13050:	cmp	r0, #0
   13054:	beq	133f8 <getopt@@Base+0x568>
   13058:	ldr	r7, [pc, #1392]	; 135d0 <getopt@@Base+0x740>
   1305c:	ldr	r7, [pc, r7]
   13060:	cmn	r7, #1
   13064:	beq	12fdc <getopt@@Base+0x14c>
   13068:	ldr	r9, [pc, #1380]	; 135d4 <getopt@@Base+0x744>
   1306c:	ldr	r9, [pc, r9]
   13070:	cmn	r9, #1
   13074:	beq	12fe0 <getopt@@Base+0x150>
   13078:	mov	r0, r7
   1307c:	mov	r1, r9
   13080:	mov	r4, lr
   13084:	bl	136bc <getopt_long_only@@Base+0x28>
   13088:	mov	lr, r4
   1308c:	ldr	ip, [pc, #1348]	; 135d8 <getopt@@Base+0x748>
   13090:	add	ip, pc, ip
   13094:	ldr	r5, [pc, #1344]	; 135dc <getopt@@Base+0x74c>
   13098:	add	r5, pc, r5
   1309c:	ldr	r4, [pc, #1340]	; 135e0 <getopt@@Base+0x750>
   130a0:	ldr	r4, [pc, r4]
   130a4:	ldr	r6, [sp, #24]
   130a8:	ldr	r3, [sp, #28]
   130ac:	ldr	r0, [pc, #1328]	; 135e4 <getopt@@Base+0x754>
   130b0:	add	r0, pc, r0
   130b4:	mvn	r1, #0
   130b8:	str	r1, [r0]
   130bc:	sub	r0, r7, r9
   130c0:	ldr	r1, [r4]
   130c4:	add	r0, r0, r1
   130c8:	str	r0, [lr]
   130cc:	b	12fe0 <getopt@@Base+0x150>
   130d0:	str	ip, [r5]
   130d4:	ldr	r5, [pc, #1248]	; 135bc <getopt@@Base+0x72c>
   130d8:	ldr	r5, [pc, r5]
   130dc:	ldr	r6, [pc, #1244]	; 135c0 <getopt@@Base+0x730>
   130e0:	ldr	r6, [pc, r6]
   130e4:	cmn	r6, #1
   130e8:	beq	131f4 <getopt@@Base+0x364>
   130ec:	mov	r0, r5
   130f0:	mov	r1, r6
   130f4:	mov	r4, lr
   130f8:	bl	136bc <getopt_long_only@@Base+0x28>
   130fc:	mov	lr, r4
   13100:	ldr	r4, [pc, #1212]	; 135c4 <getopt@@Base+0x734>
   13104:	ldr	r4, [pc, r4]
   13108:	sub	r0, r5, r6
   1310c:	ldr	r1, [r4]
   13110:	add	r5, r0, r1
   13114:	str	r5, [r4]
   13118:	b	131fc <getopt@@Base+0x36c>
   1311c:	add	r0, r2, #1
   13120:	str	r0, [r4]
   13124:	ldr	r0, [r3, r2, lsl #2]
   13128:	ldr	r1, [pc, #1180]	; 135cc <getopt@@Base+0x73c>
   1312c:	ldr	r1, [pc, r1]
   13130:	str	r0, [r1]
   13134:	mov	r7, #1
   13138:	b	133fc <getopt@@Base+0x56c>
   1313c:	add	r7, r0, #1
   13140:	ldr	r8, [pc, #1184]	; 135e8 <getopt@@Base+0x758>
   13144:	ldr	r8, [pc, r8]
   13148:	cmn	r8, #1
   1314c:	beq	13168 <getopt@@Base+0x2d8>
   13150:	ldr	r6, [pc, #1172]	; 135ec <getopt@@Base+0x75c>
   13154:	ldr	r6, [pc, r6]
   13158:	cmn	r6, #1
   1315c:	ldreq	r6, [pc, #1164]	; 135f0 <getopt@@Base+0x760>
   13160:	addeq	r6, pc, r6
   13164:	streq	r2, [r6]
   13168:	str	r7, [r5]
   1316c:	cmp	r1, #45	; 0x2d
   13170:	bne	13180 <getopt@@Base+0x2f0>
   13174:	ldrb	r0, [r0, #2]
   13178:	cmp	r0, #0
   1317c:	beq	13214 <getopt@@Base+0x384>
   13180:	ldr	r9, [sp, #16]
   13184:	cmp	r9, #0
   13188:	ldr	r8, [sp, #20]
   1318c:	beq	132b8 <getopt@@Base+0x428>
   13190:	ldr	r0, [r4]
   13194:	ldr	r0, [r3, r0, lsl #2]
   13198:	ldr	r2, [pc, #1112]	; 135f8 <getopt@@Base+0x768>
   1319c:	ldr	r2, [pc, r2]
   131a0:	cmp	r2, r0
   131a4:	beq	132b8 <getopt@@Base+0x428>
   131a8:	ldrb	r1, [r2]
   131ac:	ldr	r0, [sp, #12]
   131b0:	tst	r0, #4
   131b4:	bne	131c0 <getopt@@Base+0x330>
   131b8:	cmp	r1, #45	; 0x2d
   131bc:	bne	132b8 <getopt@@Base+0x428>
   131c0:	ldr	r7, [pc, #1076]	; 135fc <getopt@@Base+0x76c>
   131c4:	add	r7, pc, r7
   131c8:	mov	r0, #0
   131cc:	str	r0, [r7]
   131d0:	cmp	r1, #58	; 0x3a
   131d4:	beq	1326c <getopt@@Base+0x3dc>
   131d8:	cmp	r1, #45	; 0x2d
   131dc:	bne	13258 <getopt@@Base+0x3c8>
   131e0:	mov	r1, #1
   131e4:	str	r1, [r7]
   131e8:	add	r1, r2, #1
   131ec:	str	r1, [r5]
   131f0:	b	1326c <getopt@@Base+0x3dc>
   131f4:	cmn	r5, #1
   131f8:	strne	r5, [r4]
   131fc:	mvn	r7, #0
   13200:	str	r7, [lr]
   13204:	ldr	r0, [pc, #956]	; 135c8 <getopt@@Base+0x738>
   13208:	add	r0, pc, r0
   1320c:	str	r7, [r0]
   13210:	b	133fc <getopt@@Base+0x56c>
   13214:	str	ip, [r5]
   13218:	add	r2, r2, #1
   1321c:	str	r2, [r4]
   13220:	ldr	r5, [pc, #972]	; 135f4 <getopt@@Base+0x764>
   13224:	ldr	r5, [pc, r5]
   13228:	cmn	r5, #1
   1322c:	beq	131fc <getopt@@Base+0x36c>
   13230:	mov	r0, r8
   13234:	mov	r1, r5
   13238:	mov	r6, lr
   1323c:	bl	136bc <getopt_long_only@@Base+0x28>
   13240:	mov	lr, r6
   13244:	sub	r0, r8, r5
   13248:	ldr	r1, [r4]
   1324c:	add	r0, r0, r1
   13250:	str	r0, [r4]
   13254:	b	131fc <getopt@@Base+0x36c>
   13258:	mov	r0, r8
   1325c:	bl	11008 <strchr@plt>
   13260:	ldr	r3, [sp, #28]
   13264:	cmp	r0, #0
   13268:	movwne	r0, #1
   1326c:	str	r0, [sp]
   13270:	ldr	r0, [sp, #12]
   13274:	str	r0, [sp, #4]
   13278:	mov	r0, r3
   1327c:	mov	r1, r8
   13280:	mov	r2, r9
   13284:	ldr	r3, [fp, #8]
   13288:	bl	1375c <getopt_long_only@@Base+0xc8>
   1328c:	mov	r7, r0
   13290:	cmn	r0, #1
   13294:	ldr	r4, [pc, #868]	; 13600 <getopt@@Base+0x770>
   13298:	ldr	r4, [pc, r4]
   1329c:	ldr	r5, [pc, #864]	; 13604 <getopt@@Base+0x774>
   132a0:	add	r5, pc, r5
   132a4:	ldr	r0, [pc, #860]	; 13608 <getopt@@Base+0x778>
   132a8:	add	r0, pc, r0
   132ac:	beq	132b8 <getopt@@Base+0x428>
   132b0:	str	r0, [r5]
   132b4:	b	133fc <getopt@@Base+0x56c>
   132b8:	ldr	r0, [pc, #844]	; 1360c <getopt@@Base+0x77c>
   132bc:	ldr	r0, [pc, r0]
   132c0:	add	r6, r0, #1
   132c4:	str	r6, [r5]
   132c8:	ldrb	r7, [r0]
   132cc:	cmp	r7, #58	; 0x3a
   132d0:	beq	13408 <getopt@@Base+0x578>
   132d4:	cmp	r7, #45	; 0x2d
   132d8:	bne	132e8 <getopt@@Base+0x458>
   132dc:	ldrb	r0, [r6]
   132e0:	cmp	r0, #0
   132e4:	bne	13420 <getopt@@Base+0x590>
   132e8:	mov	r0, r8
   132ec:	mov	r1, r7
   132f0:	bl	11008 <strchr@plt>
   132f4:	cmp	r0, #0
   132f8:	beq	133dc <getopt@@Base+0x54c>
   132fc:	cmp	r9, #0
   13300:	ldr	r4, [pc, #796]	; 13624 <getopt@@Base+0x794>
   13304:	ldr	r4, [pc, r4]
   13308:	beq	133a4 <getopt@@Base+0x514>
   1330c:	cmp	r7, #87	; 0x57
   13310:	bne	133a4 <getopt@@Base+0x514>
   13314:	ldrb	r1, [r0, #1]
   13318:	cmp	r1, #59	; 0x3b
   1331c:	bne	133a4 <getopt@@Base+0x514>
   13320:	ldrb	r0, [r6]
   13324:	cmp	r0, #0
   13328:	ldr	r0, [sp, #28]
   1332c:	ldr	r2, [sp, #24]
   13330:	bne	13358 <getopt@@Base+0x4c8>
   13334:	ldr	r1, [r4]
   13338:	add	r1, r1, #1
   1333c:	str	r1, [r4]
   13340:	cmp	r1, r2
   13344:	bge	134d4 <getopt@@Base+0x644>
   13348:	ldr	r1, [r0, r1, lsl #2]
   1334c:	ldr	r2, [pc, #744]	; 1363c <getopt@@Base+0x7ac>
   13350:	add	r2, pc, r2
   13354:	str	r1, [r2]
   13358:	ldr	r2, [pc, #736]	; 13640 <getopt@@Base+0x7b0>
   1335c:	add	r2, pc, r2
   13360:	mov	r1, #2
   13364:	str	r1, [r2]
   13368:	mov	r1, #0
   1336c:	str	r1, [sp]
   13370:	ldr	r1, [sp, #12]
   13374:	str	r1, [sp, #4]
   13378:	mov	r1, r8
   1337c:	mov	r2, r9
   13380:	ldr	r3, [fp, #8]
   13384:	bl	1375c <getopt_long_only@@Base+0xc8>
   13388:	ldr	r1, [pc, #692]	; 13644 <getopt@@Base+0x7b4>
   1338c:	add	r1, pc, r1
   13390:	ldr	r2, [pc, #688]	; 13648 <getopt@@Base+0x7b8>
   13394:	add	r2, pc, r2
   13398:	str	r2, [r1]
   1339c:	sub	sp, fp, #28
   133a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   133a4:	ldrb	r1, [r0, #1]
   133a8:	cmp	r1, #58	; 0x3a
   133ac:	ldr	r3, [sp, #28]
   133b0:	ldr	r1, [sp, #24]
   133b4:	bne	13478 <getopt@@Base+0x5e8>
   133b8:	ldr	ip, [pc, #652]	; 1364c <getopt@@Base+0x7bc>
   133bc:	ldr	ip, [pc, ip]
   133c0:	mov	r2, #0
   133c4:	str	r2, [ip]
   133c8:	ldrb	r2, [r6]
   133cc:	cmp	r2, #0
   133d0:	beq	13488 <getopt@@Base+0x5f8>
   133d4:	str	r6, [ip]
   133d8:	b	134b0 <getopt@@Base+0x620>
   133dc:	cmp	r7, #45	; 0x2d
   133e0:	ldr	r4, [pc, #552]	; 13610 <getopt@@Base+0x780>
   133e4:	ldr	r4, [pc, r4]
   133e8:	bne	13408 <getopt@@Base+0x578>
   133ec:	ldrb	r0, [r6]
   133f0:	cmp	r0, #0
   133f4:	bne	13420 <getopt@@Base+0x590>
   133f8:	mvn	r7, #0
   133fc:	mov	r0, r7
   13400:	sub	sp, fp, #28
   13404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13408:	ldrb	r0, [r6]
   1340c:	cmp	r0, #0
   13410:	bne	13420 <getopt@@Base+0x590>
   13414:	ldr	r0, [r4]
   13418:	add	r0, r0, #1
   1341c:	str	r0, [r4]
   13420:	ldr	r0, [pc, #492]	; 13614 <getopt@@Base+0x784>
   13424:	ldr	r0, [pc, r0]
   13428:	ldr	r0, [r0]
   1342c:	cmp	r0, #0
   13430:	beq	13464 <getopt@@Base+0x5d4>
   13434:	ldrb	r0, [r8]
   13438:	cmp	r0, #58	; 0x3a
   1343c:	beq	13464 <getopt@@Base+0x5d4>
   13440:	ldr	r1, [pc, #464]	; 13618 <getopt@@Base+0x788>
   13444:	add	r1, pc, r1
   13448:	ldr	r0, [pc, #460]	; 1361c <getopt@@Base+0x78c>
   1344c:	add	r0, pc, r0
   13450:	ldr	r2, [sp, #8]
   13454:	cmp	r2, #0
   13458:	movne	r0, r1
   1345c:	mov	r1, r7
   13460:	bl	11014 <warnx@plt>
   13464:	ldr	r0, [pc, #436]	; 13620 <getopt@@Base+0x790>
   13468:	ldr	r0, [pc, r0]
   1346c:	str	r7, [r0]
   13470:	mov	r7, #63	; 0x3f
   13474:	b	133fc <getopt@@Base+0x56c>
   13478:	ldrb	r0, [r6]
   1347c:	cmp	r0, #0
   13480:	bne	133fc <getopt@@Base+0x56c>
   13484:	b	134c4 <getopt@@Base+0x634>
   13488:	ldrb	r0, [r0, #2]
   1348c:	cmp	r0, #58	; 0x3a
   13490:	beq	134b0 <getopt@@Base+0x620>
   13494:	ldr	r0, [r4]
   13498:	add	r0, r0, #1
   1349c:	str	r0, [r4]
   134a0:	cmp	r0, r1
   134a4:	bge	1352c <getopt@@Base+0x69c>
   134a8:	ldr	r0, [r3, r0, lsl #2]
   134ac:	str	r0, [ip]
   134b0:	ldr	r0, [pc, #428]	; 13664 <getopt@@Base+0x7d4>
   134b4:	add	r0, pc, r0
   134b8:	ldr	r1, [pc, #424]	; 13668 <getopt@@Base+0x7d8>
   134bc:	add	r1, pc, r1
   134c0:	str	r1, [r0]
   134c4:	ldr	r0, [r4]
   134c8:	add	r0, r0, #1
   134cc:	str	r0, [r4]
   134d0:	b	133fc <getopt@@Base+0x56c>
   134d4:	ldr	r0, [pc, #332]	; 13628 <getopt@@Base+0x798>
   134d8:	add	r0, pc, r0
   134dc:	ldr	r1, [pc, #328]	; 1362c <getopt@@Base+0x79c>
   134e0:	add	r1, pc, r1
   134e4:	str	r1, [r0]
   134e8:	ldr	r0, [pc, #320]	; 13630 <getopt@@Base+0x7a0>
   134ec:	ldr	r0, [pc, r0]
   134f0:	ldr	r0, [r0]
   134f4:	cmp	r0, #0
   134f8:	beq	13518 <getopt@@Base+0x688>
   134fc:	ldrb	r0, [r8]
   13500:	cmp	r0, #58	; 0x3a
   13504:	beq	13518 <getopt@@Base+0x688>
   13508:	ldr	r0, [pc, #292]	; 13634 <getopt@@Base+0x7a4>
   1350c:	add	r0, pc, r0
   13510:	mov	r1, #87	; 0x57
   13514:	bl	11014 <warnx@plt>
   13518:	ldr	r0, [pc, #280]	; 13638 <getopt@@Base+0x7a8>
   1351c:	ldr	r0, [pc, r0]
   13520:	mov	r1, #87	; 0x57
   13524:	str	r1, [r0]
   13528:	b	1357c <getopt@@Base+0x6ec>
   1352c:	ldr	r0, [pc, #284]	; 13650 <getopt@@Base+0x7c0>
   13530:	add	r0, pc, r0
   13534:	ldr	r1, [pc, #280]	; 13654 <getopt@@Base+0x7c4>
   13538:	add	r1, pc, r1
   1353c:	str	r1, [r0]
   13540:	ldr	r0, [pc, #272]	; 13658 <getopt@@Base+0x7c8>
   13544:	ldr	r0, [pc, r0]
   13548:	ldr	r0, [r0]
   1354c:	cmp	r0, #0
   13550:	beq	13570 <getopt@@Base+0x6e0>
   13554:	ldrb	r0, [r8]
   13558:	cmp	r0, #58	; 0x3a
   1355c:	beq	13570 <getopt@@Base+0x6e0>
   13560:	ldr	r0, [pc, #244]	; 1365c <getopt@@Base+0x7cc>
   13564:	add	r0, pc, r0
   13568:	mov	r1, r7
   1356c:	bl	11014 <warnx@plt>
   13570:	ldr	r0, [pc, #232]	; 13660 <getopt@@Base+0x7d0>
   13574:	ldr	r0, [pc, r0]
   13578:	str	r7, [r0]
   1357c:	ldrb	r7, [r8]
   13580:	cmp	r7, #58	; 0x3a
   13584:	movwne	r7, #63	; 0x3f
   13588:	b	133fc <getopt@@Base+0x56c>
   1358c:	andeq	r1, r0, r0, lsl #11
   13590:	andeq	r2, r1, ip, lsr #3
   13594:	andeq	r2, r1, r8, ror r2
   13598:	andeq	r2, r1, ip, asr #2
   1359c:	andeq	r2, r1, r4, asr r1
   135a0:	muleq	r1, r0, r1
   135a4:	andeq	r2, r1, ip, ror #2
   135a8:	andeq	r2, r1, ip, lsl #4
   135ac:	andeq	r2, r1, ip, lsl #2
   135b0:	strdeq	r2, [r1], -r0
   135b4:	strdeq	r0, [r0], -r1
   135b8:	andeq	r2, r1, r0, asr #3
   135bc:	andeq	r2, r1, r0, ror #1
   135c0:	ldrdeq	r2, [r1], -r4
   135c4:	ldrdeq	r1, [r1], -r8
   135c8:	andeq	r1, r1, ip, lsr #31
   135cc:			; <UNDEFINED> instruction: 0x00011fb8
   135d0:	andeq	r2, r1, ip, asr r1
   135d4:	andeq	r2, r1, r8, asr #2
   135d8:	andeq	r0, r0, r5, lsr lr
   135dc:	andeq	r2, r1, r4, lsr #2
   135e0:	andeq	r2, r1, ip, lsr r0
   135e4:	andeq	r2, r1, r4, lsl #2
   135e8:	andeq	r2, r1, r4, ror r0
   135ec:	andeq	r2, r1, r0, rrx
   135f0:	andeq	r2, r1, r4, asr r0
   135f4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   135f8:	andeq	r2, r1, r0, lsr #32
   135fc:	strdeq	r1, [r1], -ip
   13600:	andeq	r1, r1, r4, asr #28
   13604:	andeq	r1, r1, ip, lsl pc
   13608:	andeq	r0, r0, sp, lsl ip
   1360c:	andeq	r1, r1, r0, lsl #30
   13610:	strdeq	r1, [r1], -r8
   13614:			; <UNDEFINED> instruction: 0x00011cb0
   13618:	andeq	r1, r0, r7, lsr r0
   1361c:	andeq	r1, r0, r4, asr #32
   13620:	andeq	r1, r1, r8, ror ip
   13624:	ldrdeq	r1, [r1], -r8
   13628:	andeq	r1, r1, r4, ror #25
   1362c:	andeq	r0, r0, r5, ror #19
   13630:	andeq	r1, r1, r8, ror #23
   13634:	muleq	r0, r9, pc	; <UNPREDICTABLE>
   13638:	andeq	r1, r1, r4, asr #23
   1363c:	andeq	r1, r1, ip, ror #28
   13640:	andeq	r1, r1, r4, ror #28
   13644:	andeq	r1, r1, r0, lsr lr
   13648:	andeq	r0, r0, r1, lsr fp
   1364c:	andeq	r1, r1, r8, lsr #26
   13650:	andeq	r1, r1, ip, lsl #25
   13654:	andeq	r0, r0, sp, lsl #19
   13658:	muleq	r1, r0, fp
   1365c:	andeq	r0, r0, r1, asr #30
   13660:	andeq	r1, r1, ip, ror #22
   13664:	andeq	r1, r1, r8, lsl #26
   13668:	andeq	r0, r0, r9, lsl #20

0001366c <getopt_long@@Base>:
   1366c:	push	{fp, lr}
   13670:	mov	fp, sp
   13674:	sub	sp, sp, #8
   13678:	mov	ip, #1
   1367c:	str	ip, [sp, #4]
   13680:	ldr	ip, [fp, #8]
   13684:	str	ip, [sp]
   13688:	bl	12eb8 <getopt@@Base+0x28>
   1368c:	mov	sp, fp
   13690:	pop	{fp, pc}

00013694 <getopt_long_only@@Base>:
   13694:	push	{fp, lr}
   13698:	mov	fp, sp
   1369c:	sub	sp, sp, #8
   136a0:	mov	ip, #5
   136a4:	str	ip, [sp, #4]
   136a8:	ldr	ip, [fp, #8]
   136ac:	str	ip, [sp]
   136b0:	bl	12eb8 <getopt@@Base+0x28>
   136b4:	mov	sp, fp
   136b8:	pop	{fp, pc}
   136bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136c0:	add	fp, sp, #28
   136c4:	sub	sp, sp, #4
   136c8:	mov	r4, r3
   136cc:	mov	r5, r2
   136d0:	mov	r8, r1
   136d4:	mov	r9, r0
   136d8:	sub	sl, r1, r0
   136dc:	sub	r6, r2, r1
   136e0:	mov	r0, sl
   136e4:	mov	r1, r6
   136e8:	bl	13bc4 <getopt_long_only@@Base+0x530>
   136ec:	cmp	r0, #1
   136f0:	blt	13754 <getopt_long_only@@Base+0xc0>
   136f4:	sub	r1, r5, r9
   136f8:	sdiv	ip, r1, r0
   136fc:	mov	lr, #0
   13700:	cmp	ip, #1
   13704:	bge	1371c <getopt_long_only@@Base+0x88>
   13708:	add	lr, lr, #1
   1370c:	cmp	lr, r0
   13710:	beq	13754 <getopt_long_only@@Base+0xc0>
   13714:	cmp	ip, #1
   13718:	blt	13708 <getopt_long_only@@Base+0x74>
   1371c:	add	r2, lr, r8
   13720:	mov	r1, ip
   13724:	mov	r3, r2
   13728:	cmp	r3, r8
   1372c:	mov	r7, r6
   13730:	rsbge	r7, sl, #0
   13734:	add	r3, r7, r3
   13738:	ldr	r7, [r4, r3, lsl #2]
   1373c:	ldr	r5, [r4, r2, lsl #2]
   13740:	str	r5, [r4, r3, lsl #2]
   13744:	str	r7, [r4, r2, lsl #2]
   13748:	subs	r1, r1, #1
   1374c:	bne	13728 <getopt_long_only@@Base+0x94>
   13750:	b	13708 <getopt_long_only@@Base+0x74>
   13754:	sub	sp, fp, #28
   13758:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1375c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13760:	add	fp, sp, #28
   13764:	sub	sp, sp, #36	; 0x24
   13768:	mov	r6, r2
   1376c:	mov	r5, r1
   13770:	ldr	r2, [pc, #1012]	; 13b6c <getopt_long_only@@Base+0x4d8>
   13774:	ldr	r2, [pc, r2]
   13778:	ldr	r4, [pc, #1008]	; 13b70 <getopt_long_only@@Base+0x4dc>
   1377c:	ldr	r4, [pc, r4]
   13780:	cmp	r2, #2
   13784:	str	r3, [sp, #16]
   13788:	str	r0, [sp, #4]
   1378c:	bhi	137a0 <getopt_long_only@@Base+0x10c>
   13790:	ldr	r1, [pc, #992]	; 13b78 <getopt_long_only@@Base+0x4e4>
   13794:	add	r1, pc, r1
   13798:	ldr	r9, [r1, r2, lsl #2]
   1379c:	b	137a8 <getopt_long_only@@Base+0x114>
   137a0:	ldr	r9, [pc, #972]	; 13b74 <getopt_long_only@@Base+0x4e0>
   137a4:	add	r9, pc, r9
   137a8:	ldr	r0, [pc, #972]	; 13b7c <getopt_long_only@@Base+0x4e8>
   137ac:	ldr	r0, [pc, r0]
   137b0:	ldr	r1, [r0]
   137b4:	str	r1, [sp, #24]
   137b8:	add	r2, r1, #1
   137bc:	str	r2, [sp]
   137c0:	str	r2, [r0]
   137c4:	mov	r0, r4
   137c8:	mov	r1, #61	; 0x3d
   137cc:	bl	11008 <strchr@plt>
   137d0:	cmp	r0, #0
   137d4:	beq	137e4 <getopt_long_only@@Base+0x150>
   137d8:	sub	r7, r0, r4
   137dc:	add	r0, r0, #1
   137e0:	b	137f4 <getopt_long_only@@Base+0x160>
   137e4:	mov	r0, r4
   137e8:	bl	10ffc <strlen@plt>
   137ec:	mov	r7, r0
   137f0:	mov	r0, #0
   137f4:	ldr	r1, [fp, #8]
   137f8:	ldr	r8, [r6]
   137fc:	cmp	r8, #0
   13800:	beq	139d8 <getopt_long_only@@Base+0x344>
   13804:	str	r0, [sp, #8]
   13808:	str	r9, [sp, #12]
   1380c:	str	r5, [sp, #20]
   13810:	ldr	r0, [fp, #12]
   13814:	cmp	r1, #0
   13818:	movwne	r1, #1
   1381c:	sub	r2, r7, #1
   13820:	clz	r2, r2
   13824:	lsr	r2, r2, #5
   13828:	and	r5, r1, r2
   1382c:	and	r0, r0, #4
   13830:	str	r0, [sp, #28]
   13834:	mvn	sl, #0
   13838:	mov	r0, #0
   1383c:	str	r0, [sp, #32]
   13840:	mov	r9, #0
   13844:	b	13864 <getopt_long_only@@Base+0x1d0>
   13848:	mov	r0, #1
   1384c:	str	r0, [sp, #32]
   13850:	add	r0, r6, r9, lsl #4
   13854:	ldr	r8, [r0, #16]
   13858:	add	r9, r9, #1
   1385c:	cmp	r8, #0
   13860:	beq	138ec <getopt_long_only@@Base+0x258>
   13864:	mov	r0, r4
   13868:	mov	r1, r8
   1386c:	mov	r2, r7
   13870:	bl	110e0 <strncmp@plt>
   13874:	cmp	r0, #0
   13878:	bne	13850 <getopt_long_only@@Base+0x1bc>
   1387c:	mov	r0, r8
   13880:	bl	10ffc <strlen@plt>
   13884:	cmp	r0, r7
   13888:	beq	13938 <getopt_long_only@@Base+0x2a4>
   1388c:	cmp	r5, #0
   13890:	bne	13850 <getopt_long_only@@Base+0x1bc>
   13894:	cmn	sl, #1
   13898:	beq	138e4 <getopt_long_only@@Base+0x250>
   1389c:	ldr	r0, [sp, #28]
   138a0:	cmp	r0, #0
   138a4:	bne	13848 <getopt_long_only@@Base+0x1b4>
   138a8:	add	r0, r6, sl, lsl #4
   138ac:	ldr	r2, [r0, #4]
   138b0:	add	r1, r6, r9, lsl #4
   138b4:	ldr	r3, [r1, #4]
   138b8:	cmp	r3, r2
   138bc:	bne	13848 <getopt_long_only@@Base+0x1b4>
   138c0:	ldr	r2, [r0, #8]
   138c4:	ldr	r3, [r1, #8]
   138c8:	cmp	r3, r2
   138cc:	bne	13848 <getopt_long_only@@Base+0x1b4>
   138d0:	ldr	r0, [r0, #12]
   138d4:	ldr	r1, [r1, #12]
   138d8:	cmp	r1, r0
   138dc:	bne	13848 <getopt_long_only@@Base+0x1b4>
   138e0:	b	13850 <getopt_long_only@@Base+0x1bc>
   138e4:	mov	sl, r9
   138e8:	b	13850 <getopt_long_only@@Base+0x1bc>
   138ec:	ldr	r0, [sp, #32]
   138f0:	cmp	r0, #0
   138f4:	beq	1394c <getopt_long_only@@Base+0x2b8>
   138f8:	ldr	r0, [pc, #640]	; 13b80 <getopt_long_only@@Base+0x4ec>
   138fc:	ldr	r0, [pc, r0]
   13900:	ldr	r0, [r0]
   13904:	cmp	r0, #0
   13908:	beq	13a30 <getopt_long_only@@Base+0x39c>
   1390c:	ldr	r0, [sp, #20]
   13910:	ldrb	r0, [r0]
   13914:	cmp	r0, #58	; 0x3a
   13918:	beq	13a30 <getopt_long_only@@Base+0x39c>
   1391c:	ldr	r0, [pc, #608]	; 13b84 <getopt_long_only@@Base+0x4f0>
   13920:	add	r0, pc, r0
   13924:	ldr	r1, [sp, #12]
   13928:	mov	r2, r7
   1392c:	mov	r3, r4
   13930:	bl	11014 <warnx@plt>
   13934:	b	13a30 <getopt_long_only@@Base+0x39c>
   13938:	mov	sl, r9
   1393c:	ldr	r5, [sp, #20]
   13940:	ldr	r9, [sp, #12]
   13944:	ldr	r2, [sp, #8]
   13948:	b	13964 <getopt_long_only@@Base+0x2d0>
   1394c:	cmn	sl, #1
   13950:	ldr	r5, [sp, #20]
   13954:	ldr	r9, [sp, #12]
   13958:	ldr	r2, [sp, #8]
   1395c:	ldr	r1, [fp, #8]
   13960:	beq	139d8 <getopt_long_only@@Base+0x344>
   13964:	add	r6, r6, sl, lsl #4
   13968:	mov	r0, r6
   1396c:	ldr	r1, [r0, #4]!
   13970:	cmp	r2, #0
   13974:	beq	13a4c <getopt_long_only@@Base+0x3b8>
   13978:	cmp	r1, #0
   1397c:	bne	13a4c <getopt_long_only@@Base+0x3b8>
   13980:	ldr	r0, [pc, #516]	; 13b8c <getopt_long_only@@Base+0x4f8>
   13984:	ldr	r0, [pc, r0]
   13988:	ldr	r0, [r0]
   1398c:	cmp	r0, #0
   13990:	beq	139b8 <getopt_long_only@@Base+0x324>
   13994:	ldrb	r0, [r5]
   13998:	cmp	r0, #58	; 0x3a
   1399c:	beq	139b8 <getopt_long_only@@Base+0x324>
   139a0:	ldr	r0, [pc, #488]	; 13b90 <getopt_long_only@@Base+0x4fc>
   139a4:	add	r0, pc, r0
   139a8:	mov	r1, r9
   139ac:	mov	r2, r7
   139b0:	mov	r3, r4
   139b4:	bl	11014 <warnx@plt>
   139b8:	ldr	r1, [r6, #8]
   139bc:	mov	r0, #0
   139c0:	cmp	r1, #0
   139c4:	ldreq	r0, [r6, #12]
   139c8:	ldr	r1, [pc, #452]	; 13b94 <getopt_long_only@@Base+0x500>
   139cc:	ldr	r1, [pc, r1]
   139d0:	str	r0, [r1]
   139d4:	b	13a40 <getopt_long_only@@Base+0x3ac>
   139d8:	cmp	r1, #0
   139dc:	beq	139fc <getopt_long_only@@Base+0x368>
   139e0:	ldr	r0, [pc, #464]	; 13bb8 <getopt_long_only@@Base+0x524>
   139e4:	ldr	r0, [pc, r0]
   139e8:	ldr	r1, [sp, #24]
   139ec:	str	r1, [r0]
   139f0:	mvn	r0, #0
   139f4:	sub	sp, fp, #28
   139f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139fc:	ldr	r0, [pc, #440]	; 13bbc <getopt_long_only@@Base+0x528>
   13a00:	ldr	r0, [pc, r0]
   13a04:	ldr	r0, [r0]
   13a08:	cmp	r0, #0
   13a0c:	beq	13a30 <getopt_long_only@@Base+0x39c>
   13a10:	ldrb	r0, [r5]
   13a14:	cmp	r0, #58	; 0x3a
   13a18:	beq	13a30 <getopt_long_only@@Base+0x39c>
   13a1c:	ldr	r0, [pc, #412]	; 13bc0 <getopt_long_only@@Base+0x52c>
   13a20:	add	r0, pc, r0
   13a24:	mov	r1, r9
   13a28:	mov	r2, r4
   13a2c:	bl	11014 <warnx@plt>
   13a30:	ldr	r0, [pc, #336]	; 13b88 <getopt_long_only@@Base+0x4f4>
   13a34:	ldr	r0, [pc, r0]
   13a38:	mov	r1, #0
   13a3c:	str	r1, [r0]
   13a40:	mov	r0, #63	; 0x3f
   13a44:	sub	sp, fp, #28
   13a48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a4c:	sub	r2, r1, #1
   13a50:	cmp	r2, #1
   13a54:	bhi	13aa8 <getopt_long_only@@Base+0x414>
   13a58:	ldr	r2, [sp, #8]
   13a5c:	cmp	r2, #0
   13a60:	beq	13a74 <getopt_long_only@@Base+0x3e0>
   13a64:	ldr	r1, [pc, #300]	; 13b98 <getopt_long_only@@Base+0x504>
   13a68:	ldr	r1, [pc, r1]
   13a6c:	str	r2, [r1]
   13a70:	b	13aa8 <getopt_long_only@@Base+0x414>
   13a74:	cmp	r1, #1
   13a78:	bne	13aa8 <getopt_long_only@@Base+0x414>
   13a7c:	ldr	r1, [sp, #24]
   13a80:	add	r1, r1, #2
   13a84:	ldr	r2, [pc, #272]	; 13b9c <getopt_long_only@@Base+0x508>
   13a88:	ldr	r2, [pc, r2]
   13a8c:	str	r1, [r2]
   13a90:	ldr	r1, [sp, #4]
   13a94:	ldr	r2, [sp]
   13a98:	ldr	r1, [r1, r2, lsl #2]
   13a9c:	ldr	r2, [pc, #252]	; 13ba0 <getopt_long_only@@Base+0x50c>
   13aa0:	ldr	r2, [pc, r2]
   13aa4:	str	r1, [r2]
   13aa8:	ldr	r0, [r0]
   13aac:	cmp	r0, #1
   13ab0:	bne	13b44 <getopt_long_only@@Base+0x4b0>
   13ab4:	ldr	r0, [pc, #232]	; 13ba4 <getopt_long_only@@Base+0x510>
   13ab8:	ldr	r0, [pc, r0]
   13abc:	ldr	r0, [r0]
   13ac0:	cmp	r0, #0
   13ac4:	bne	13b44 <getopt_long_only@@Base+0x4b0>
   13ac8:	ldr	r0, [pc, #216]	; 13ba8 <getopt_long_only@@Base+0x514>
   13acc:	ldr	r0, [pc, r0]
   13ad0:	ldr	r0, [r0]
   13ad4:	cmp	r0, #0
   13ad8:	beq	13afc <getopt_long_only@@Base+0x468>
   13adc:	ldrb	r0, [r5]
   13ae0:	cmp	r0, #58	; 0x3a
   13ae4:	beq	13afc <getopt_long_only@@Base+0x468>
   13ae8:	ldr	r0, [pc, #188]	; 13bac <getopt_long_only@@Base+0x518>
   13aec:	add	r0, pc, r0
   13af0:	mov	r1, r9
   13af4:	mov	r2, r4
   13af8:	bl	11014 <warnx@plt>
   13afc:	ldr	r1, [r6, #8]
   13b00:	mov	r0, #0
   13b04:	cmp	r1, #0
   13b08:	ldreq	r0, [r6, #12]
   13b0c:	ldr	r1, [pc, #156]	; 13bb0 <getopt_long_only@@Base+0x51c>
   13b10:	ldr	r1, [pc, r1]
   13b14:	str	r0, [r1]
   13b18:	ldr	r0, [pc, #148]	; 13bb4 <getopt_long_only@@Base+0x520>
   13b1c:	ldr	r0, [pc, r0]
   13b20:	mov	r1, r0
   13b24:	ldr	r0, [r0]
   13b28:	sub	r0, r0, #1
   13b2c:	str	r0, [r1]
   13b30:	ldrb	r0, [r5]
   13b34:	cmp	r0, #58	; 0x3a
   13b38:	movwne	r0, #63	; 0x3f
   13b3c:	sub	sp, fp, #28
   13b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b44:	ldr	r0, [sp, #16]
   13b48:	cmp	r0, #0
   13b4c:	strne	sl, [r0]
   13b50:	ldr	r1, [r6, #8]
   13b54:	ldr	r0, [r6, #12]
   13b58:	cmp	r1, #0
   13b5c:	strne	r0, [r1]
   13b60:	movne	r0, #0
   13b64:	sub	sp, fp, #28
   13b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b6c:	andeq	r1, r1, ip, asr #20
   13b70:	andeq	r1, r1, r0, asr #20
   13b74:	andeq	r0, r0, r1, lsr #14
   13b78:	andeq	r1, r1, r0, asr r7
   13b7c:	andeq	r1, r1, r0, lsr r9
   13b80:	ldrdeq	r1, [r1], -r8
   13b84:	andeq	r0, r0, r7, lsr #23
   13b88:	andeq	r1, r1, ip, lsr #13
   13b8c:	andeq	r1, r1, r0, asr r7
   13b90:	andeq	r0, r0, r0, asr #22
   13b94:	andeq	r1, r1, r4, lsl r7
   13b98:	andeq	r1, r1, ip, ror r6
   13b9c:	andeq	r1, r1, r4, asr r6
   13ba0:	andeq	r1, r1, r4, asr #12
   13ba4:	andeq	r1, r1, ip, lsr #12
   13ba8:	andeq	r1, r1, r8, lsl #12
   13bac:	andeq	r0, r0, r2, lsr #20
   13bb0:	ldrdeq	r1, [r1], -r0
   13bb4:	andeq	r1, r1, r0, asr #11
   13bb8:	strdeq	r1, [r1], -r8
   13bbc:	ldrdeq	r1, [r1], -r4
   13bc0:	andeq	r0, r0, r1, lsl fp
   13bc4:	sdiv	r2, r0, r1
   13bc8:	mls	r2, r2, r1, r0
   13bcc:	cmp	r2, #0
   13bd0:	moveq	r0, r1
   13bd4:	bxeq	lr
   13bd8:	mov	r0, r2
   13bdc:	sdiv	r2, r1, r2
   13be0:	mls	r2, r2, r0, r1
   13be4:	cmp	r2, #0
   13be8:	mov	r1, r0
   13bec:	bne	13bd8 <getopt_long_only@@Base+0x544>
   13bf0:	bx	lr
   13bf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13bf8:	mov	r7, r0
   13bfc:	ldr	r6, [pc, #72]	; 13c4c <getopt_long_only@@Base+0x5b8>
   13c00:	ldr	r5, [pc, #72]	; 13c50 <getopt_long_only@@Base+0x5bc>
   13c04:	add	r6, pc, r6
   13c08:	add	r5, pc, r5
   13c0c:	sub	r6, r6, r5
   13c10:	mov	r8, r1
   13c14:	mov	r9, r2
   13c18:	bl	10e8c <Mat_VarGetNumberOfFields@plt-0x20>
   13c1c:	asrs	r6, r6, #2
   13c20:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c24:	mov	r4, #0
   13c28:	add	r4, r4, #1
   13c2c:	ldr	r3, [r5], #4
   13c30:	mov	r2, r9
   13c34:	mov	r1, r8
   13c38:	mov	r0, r7
   13c3c:	blx	r3
   13c40:	cmp	r6, r4
   13c44:	bne	13c28 <getopt_long_only@@Base+0x594>
   13c48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13c4c:	ldrdeq	r1, [r1], -ip
   13c50:	ldrdeq	r1, [r1], -r4
   13c54:	bx	lr

Disassembly of section .fini:

00013c58 <.fini>:
   13c58:	push	{r3, lr}
   13c5c:	pop	{r3, pc}
