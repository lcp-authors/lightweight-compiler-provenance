
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010b14 <.init>:
   10b14:	push	{r3, lr}
   10b18:	bl	10de0 <_start@@Base+0x3c>
   10b1c:	pop	{r3, pc}

Disassembly of section .plt:

00010b20 <calloc@plt-0x14>:
   10b20:	push	{lr}		; (str lr, [sp, #-4]!)
   10b24:	ldr	lr, [pc, #4]	; 10b30 <calloc@plt-0x4>
   10b28:	add	lr, pc, lr
   10b2c:	ldr	pc, [lr, #8]!
   10b30:	ldrdeq	r1, [r1], -r0

00010b34 <calloc@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b40 <strcmp@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b4c <strtol@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b58 <printf@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b64 <fopen@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b70 <free@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b7c <fgets@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b88 <memcpy@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1176]!	; 0x498

00010b94 <realloc@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1168]!	; 0x490

00010ba0 <strcpy@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1160]!	; 0x488

00010bac <puts@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1152]!	; 0x480

00010bb8 <malloc@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1144]!	; 0x478

00010bc4 <__libc_start_main@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1136]!	; 0x470

00010bd0 <__gmon_start__@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1128]!	; 0x468

00010bdc <feof@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1120]!	; 0x460

00010be8 <strlen@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1112]!	; 0x458

00010bf4 <strchr@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #1104]!	; 0x450

00010c00 <fclose@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #69632	; 0x11000
   10c08:	ldr	pc, [ip, #1096]!	; 0x448

00010c0c <abort@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #69632	; 0x11000
   10c14:	ldr	pc, [ip, #1088]!	; 0x440

Disassembly of section .text:

00010c18 <main@@Base>:
   10c18:	movw	r1, #7020	; 0x1b6c
   10c1c:	movt	r1, #1
   10c20:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10c24:	movw	r0, #7024	; 0x1b70
   10c28:	movt	r0, #1
   10c2c:	strd	r6, [sp, #8]
   10c30:	strd	r8, [sp, #16]
   10c34:	strd	sl, [sp, #24]
   10c38:	str	lr, [sp, #32]
   10c3c:	sub	sp, sp, #4
   10c40:	bl	10b64 <fopen@plt>
   10c44:	mov	r8, r0
   10c48:	movw	r1, #7020	; 0x1b6c
   10c4c:	movt	r1, #1
   10c50:	movw	r0, #7036	; 0x1b7c
   10c54:	movt	r0, #1
   10c58:	bl	10b64 <fopen@plt>
   10c5c:	mov	r7, r0
   10c60:	movw	r1, #7020	; 0x1b6c
   10c64:	movt	r1, #1
   10c68:	movw	r0, #7048	; 0x1b88
   10c6c:	movt	r0, #1
   10c70:	bl	10b64 <fopen@plt>
   10c74:	mov	r6, r0
   10c78:	mov	r0, r8
   10c7c:	bl	110a0 <lerAtores@@Base>
   10c80:	mov	r4, r0
   10c84:	mov	r0, r7
   10c88:	bl	11124 <lerFilmes@@Base>
   10c8c:	mov	r5, r0
   10c90:	mov	r0, r6
   10c94:	bl	11124 <lerFilmes@@Base>
   10c98:	mov	r9, r0
   10c9c:	mov	r0, r4
   10ca0:	bl	11314 <vetor_tamanho@@Base>
   10ca4:	mov	r1, r0
   10ca8:	movw	r0, #7060	; 0x1b94
   10cac:	movt	r0, #1
   10cb0:	bl	10b58 <printf@plt>
   10cb4:	mov	r0, r4
   10cb8:	bl	10e94 <retira_duplicados@@Base>
   10cbc:	mov	r0, r4
   10cc0:	bl	11314 <vetor_tamanho@@Base>
   10cc4:	mov	r1, r0
   10cc8:	movw	r0, #7080	; 0x1ba8
   10ccc:	movt	r0, #1
   10cd0:	bl	10b58 <printf@plt>
   10cd4:	mov	r1, r9
   10cd8:	mov	r0, r5
   10cdc:	bl	10f38 <interseta@@Base>
   10ce0:	subs	fp, r0, #0
   10ce4:	beq	10d84 <main@@Base+0x16c>
   10ce8:	bl	11314 <vetor_tamanho@@Base>
   10cec:	mov	r1, r0
   10cf0:	movw	r0, #7108	; 0x1bc4
   10cf4:	movt	r0, #1
   10cf8:	bl	10b58 <printf@plt>
   10cfc:	mov	r1, #2000	; 0x7d0
   10d00:	mov	r0, r5
   10d04:	bl	11008 <anteriores@@Base>
   10d08:	subs	sl, r0, #0
   10d0c:	beq	10d94 <main@@Base+0x17c>
   10d10:	bl	11314 <vetor_tamanho@@Base>
   10d14:	mov	r1, r0
   10d18:	movw	r0, #7164	; 0x1bfc
   10d1c:	movt	r0, #1
   10d20:	bl	10b58 <printf@plt>
   10d24:	mov	r0, r4
   10d28:	bl	111e8 <vetor_apaga@@Base>
   10d2c:	mov	r0, fp
   10d30:	bl	111e8 <vetor_apaga@@Base>
   10d34:	mov	r0, sl
   10d38:	bl	111e8 <vetor_apaga@@Base>
   10d3c:	mov	r0, r5
   10d40:	bl	116d0 <lista_apaga@@Base>
   10d44:	mov	r0, r9
   10d48:	bl	116d0 <lista_apaga@@Base>
   10d4c:	mov	r0, r8
   10d50:	bl	10c00 <fclose@plt>
   10d54:	mov	r0, r7
   10d58:	bl	10c00 <fclose@plt>
   10d5c:	mov	r0, r6
   10d60:	bl	10c00 <fclose@plt>
   10d64:	mov	r0, #0
   10d68:	add	sp, sp, #4
   10d6c:	ldrd	r4, [sp]
   10d70:	ldrd	r6, [sp, #8]
   10d74:	ldrd	r8, [sp, #16]
   10d78:	ldrd	sl, [sp, #24]
   10d7c:	add	sp, sp, #32
   10d80:	pop	{pc}		; (ldr pc, [sp], #4)
   10d84:	movw	r0, #7140	; 0x1be4
   10d88:	movt	r0, #1
   10d8c:	bl	10bac <puts@plt>
   10d90:	b	10cfc <main@@Base+0xe4>
   10d94:	movw	r0, #7200	; 0x1c20
   10d98:	movt	r0, #1
   10d9c:	bl	10bac <puts@plt>
   10da0:	b	10d24 <main@@Base+0x10c>

00010da4 <_start@@Base>:
   10da4:	mov	fp, #0
   10da8:	mov	lr, #0
   10dac:	pop	{r1}		; (ldr r1, [sp], #4)
   10db0:	mov	r2, sp
   10db4:	push	{r2}		; (str r2, [sp, #-4]!)
   10db8:	push	{r0}		; (str r0, [sp, #-4]!)
   10dbc:	ldr	ip, [pc, #16]	; 10dd4 <_start@@Base+0x30>
   10dc0:	push	{ip}		; (str ip, [sp, #-4]!)
   10dc4:	ldr	r0, [pc, #12]	; 10dd8 <_start@@Base+0x34>
   10dc8:	ldr	r3, [pc, #12]	; 10ddc <_start@@Base+0x38>
   10dcc:	bl	10bc4 <__libc_start_main@plt>
   10dd0:	bl	10c0c <abort@plt>
   10dd4:	andeq	r1, r1, ip, asr fp
   10dd8:	andeq	r0, r1, r8, lsl ip
   10ddc:	strdeq	r1, [r1], -ip
   10de0:	ldr	r3, [pc, #20]	; 10dfc <_start@@Base+0x58>
   10de4:	ldr	r2, [pc, #20]	; 10e00 <_start@@Base+0x5c>
   10de8:	add	r3, pc, r3
   10dec:	ldr	r2, [r3, r2]
   10df0:	cmp	r2, #0
   10df4:	bxeq	lr
   10df8:	b	10bd0 <__gmon_start__@plt>
   10dfc:	andeq	r1, r1, r0, lsl r2
   10e00:	andeq	r0, r0, r8, asr r0
   10e04:	ldr	r0, [pc, #24]	; 10e24 <_start@@Base+0x80>
   10e08:	ldr	r3, [pc, #24]	; 10e28 <_start@@Base+0x84>
   10e0c:	cmp	r3, r0
   10e10:	bxeq	lr
   10e14:	ldr	r3, [pc, #16]	; 10e2c <_start@@Base+0x88>
   10e18:	cmp	r3, #0
   10e1c:	bxeq	lr
   10e20:	bx	r3
   10e24:	andeq	r2, r2, r4, rrx
   10e28:	andeq	r2, r2, r4, rrx
   10e2c:	andeq	r0, r0, r0
   10e30:	ldr	r0, [pc, #36]	; 10e5c <_start@@Base+0xb8>
   10e34:	ldr	r1, [pc, #36]	; 10e60 <_start@@Base+0xbc>
   10e38:	sub	r1, r1, r0
   10e3c:	asr	r1, r1, #2
   10e40:	add	r1, r1, r1, lsr #31
   10e44:	asrs	r1, r1, #1
   10e48:	bxeq	lr
   10e4c:	ldr	r3, [pc, #16]	; 10e64 <_start@@Base+0xc0>
   10e50:	cmp	r3, #0
   10e54:	bxeq	lr
   10e58:	bx	r3
   10e5c:	andeq	r2, r2, r4, rrx
   10e60:	andeq	r2, r2, r4, rrx
   10e64:	andeq	r0, r0, r0
   10e68:	push	{r4, lr}
   10e6c:	ldr	r4, [pc, #24]	; 10e8c <_start@@Base+0xe8>
   10e70:	ldrb	r3, [r4]
   10e74:	cmp	r3, #0
   10e78:	popne	{r4, pc}
   10e7c:	bl	10e04 <_start@@Base+0x60>
   10e80:	mov	r3, #1
   10e84:	strb	r3, [r4]
   10e88:	pop	{r4, pc}
   10e8c:	andeq	r2, r2, r4, rrx
   10e90:	b	10e30 <_start@@Base+0x8c>

00010e94 <retira_duplicados@@Base>:
   10e94:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10e98:	mov	r5, r0
   10e9c:	strd	r6, [sp, #8]
   10ea0:	mov	r7, #0
   10ea4:	str	r8, [sp, #16]
   10ea8:	str	lr, [sp, #20]
   10eac:	mov	r0, r5
   10eb0:	bl	11314 <vetor_tamanho@@Base>
   10eb4:	sub	r0, r0, #1
   10eb8:	cmp	r0, r7
   10ebc:	ble	10f24 <retira_duplicados@@Base+0x90>
   10ec0:	add	r8, r7, #1
   10ec4:	mov	r4, r8
   10ec8:	mov	r0, r5
   10ecc:	bl	11314 <vetor_tamanho@@Base>
   10ed0:	cmp	r0, r4
   10ed4:	mov	r1, r7
   10ed8:	mov	r0, r5
   10edc:	ble	10f1c <retira_duplicados@@Base+0x88>
   10ee0:	bl	11324 <vetor_elemento@@Base>
   10ee4:	mov	r6, r0
   10ee8:	mov	r1, r4
   10eec:	mov	r0, r5
   10ef0:	bl	11324 <vetor_elemento@@Base>
   10ef4:	mov	r1, r0
   10ef8:	mov	r0, r6
   10efc:	bl	10b40 <strcmp@plt>
   10f00:	cmp	r0, #0
   10f04:	addne	r4, r4, #1
   10f08:	bne	10ec8 <retira_duplicados@@Base+0x34>
   10f0c:	mov	r1, r4
   10f10:	mov	r0, r5
   10f14:	bl	11450 <vetor_remove@@Base>
   10f18:	b	10ec8 <retira_duplicados@@Base+0x34>
   10f1c:	mov	r7, r8
   10f20:	b	10eac <retira_duplicados@@Base+0x18>
   10f24:	ldrd	r4, [sp]
   10f28:	ldrd	r6, [sp, #8]
   10f2c:	ldr	r8, [sp, #16]
   10f30:	add	sp, sp, #20
   10f34:	pop	{pc}		; (ldr pc, [sp], #4)

00010f38 <interseta@@Base>:
   10f38:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10f3c:	strd	r6, [sp, #8]
   10f40:	mov	r6, r1
   10f44:	strd	r8, [sp, #16]
   10f48:	mov	r8, r0
   10f4c:	str	sl, [sp, #24]
   10f50:	str	lr, [sp, #28]
   10f54:	bl	111a8 <vetor_novo@@Base>
   10f58:	ldr	r4, [r8]
   10f5c:	mov	sl, r0
   10f60:	ldr	r3, [r8, #8]
   10f64:	cmp	r3, #0
   10f68:	cmple	r4, #0
   10f6c:	beq	10fec <interseta@@Base+0xb4>
   10f70:	mov	r9, #0
   10f74:	mov	r5, r9
   10f78:	b	10f90 <interseta@@Base+0x58>
   10f7c:	ldr	r4, [r4, #4]
   10f80:	ldr	r3, [r8, #8]
   10f84:	cmp	r3, r5
   10f88:	cmple	r4, #0
   10f8c:	beq	10fec <interseta@@Base+0xb4>
   10f90:	mov	r2, #0
   10f94:	mov	r0, r6
   10f98:	ldr	r1, [r4]
   10f9c:	bl	118e0 <lista_pesquisa@@Base>
   10fa0:	mov	r2, #0
   10fa4:	add	r5, r5, #1
   10fa8:	cmp	r0, r2
   10fac:	mov	r0, r6
   10fb0:	beq	10f7c <interseta@@Base+0x44>
   10fb4:	ldr	r7, [r4]
   10fb8:	mov	r1, r7
   10fbc:	bl	118e0 <lista_pesquisa@@Base>
   10fc0:	ldr	r1, [r0]
   10fc4:	mov	r0, r7
   10fc8:	bl	10b40 <strcmp@plt>
   10fcc:	cmp	r0, #0
   10fd0:	bne	10f7c <interseta@@Base+0x44>
   10fd4:	mov	r2, r9
   10fd8:	mov	r0, sl
   10fdc:	ldr	r1, [r4]
   10fe0:	add	r9, r9, #1
   10fe4:	bl	11358 <vetor_insere@@Base>
   10fe8:	b	10f7c <interseta@@Base+0x44>
   10fec:	mov	r0, sl
   10ff0:	ldrd	r4, [sp]
   10ff4:	ldrd	r6, [sp, #8]
   10ff8:	ldrd	r8, [sp, #16]
   10ffc:	ldr	sl, [sp, #24]
   11000:	add	sp, sp, #28
   11004:	pop	{pc}		; (ldr pc, [sp], #4)

00011008 <anteriores@@Base>:
   11008:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1100c:	mov	r4, r0
   11010:	strd	r6, [sp, #8]
   11014:	mov	r6, r1
   11018:	str	r8, [sp, #16]
   1101c:	str	lr, [sp, #20]
   11020:	bl	111a8 <vetor_novo@@Base>
   11024:	ldr	r4, [r4]
   11028:	mov	r7, r0
   1102c:	cmp	r4, #0
   11030:	beq	11068 <anteriores@@Base+0x60>
   11034:	ldr	r5, [r4]
   11038:	mov	r0, r5
   1103c:	bl	10be8 <strlen@plt>
   11040:	sub	r0, r0, #5
   11044:	mov	r2, #10
   11048:	add	r0, r5, r0
   1104c:	mov	r1, #0
   11050:	bl	10b4c <strtol@plt>
   11054:	cmp	r6, r0
   11058:	bgt	11080 <anteriores@@Base+0x78>
   1105c:	ldr	r4, [r4, #4]
   11060:	cmp	r4, #0
   11064:	bne	11034 <anteriores@@Base+0x2c>
   11068:	mov	r0, r7
   1106c:	ldrd	r4, [sp]
   11070:	ldrd	r6, [sp, #8]
   11074:	ldr	r8, [sp, #16]
   11078:	add	sp, sp, #20
   1107c:	pop	{pc}		; (ldr pc, [sp], #4)
   11080:	mov	r0, r7
   11084:	ldr	r1, [r4]
   11088:	ldr	r2, [r7]
   1108c:	bl	11358 <vetor_insere@@Base>
   11090:	ldr	r4, [r4, #4]
   11094:	cmp	r4, #0
   11098:	bne	11034 <anteriores@@Base+0x2c>
   1109c:	b	11068 <anteriores@@Base+0x60>

000110a0 <lerAtores@@Base>:
   110a0:	strd	r4, [sp, #-16]!
   110a4:	subs	r4, r0, #0
   110a8:	moveq	r5, r4
   110ac:	str	r6, [sp, #8]
   110b0:	str	lr, [sp, #12]
   110b4:	sub	sp, sp, #256	; 0x100
   110b8:	beq	1110c <lerAtores@@Base+0x6c>
   110bc:	bl	111a8 <vetor_novo@@Base>
   110c0:	mov	r5, r0
   110c4:	b	110f0 <lerAtores@@Base+0x50>
   110c8:	bl	10b7c <fgets@plt>
   110cc:	mov	r1, #10
   110d0:	mov	r0, sp
   110d4:	bl	10bf4 <strchr@plt>
   110d8:	subs	r3, r0, #0
   110dc:	mov	r1, sp
   110e0:	mov	r0, r5
   110e4:	strbne	r6, [r3]
   110e8:	ldr	r2, [r5]
   110ec:	bl	11358 <vetor_insere@@Base>
   110f0:	mov	r0, r4
   110f4:	bl	10bdc <feof@plt>
   110f8:	subs	r6, r0, #0
   110fc:	mov	r2, r4
   11100:	mov	r1, #255	; 0xff
   11104:	mov	r0, sp
   11108:	beq	110c8 <lerAtores@@Base+0x28>
   1110c:	mov	r0, r5
   11110:	add	sp, sp, #256	; 0x100
   11114:	ldrd	r4, [sp]
   11118:	ldr	r6, [sp, #8]
   1111c:	add	sp, sp, #12
   11120:	pop	{pc}		; (ldr pc, [sp], #4)

00011124 <lerFilmes@@Base>:
   11124:	strd	r4, [sp, #-16]!
   11128:	subs	r4, r0, #0
   1112c:	str	r6, [sp, #8]
   11130:	moveq	r6, r4
   11134:	str	lr, [sp, #12]
   11138:	sub	sp, sp, #256	; 0x100
   1113c:	beq	11190 <lerFilmes@@Base+0x6c>
   11140:	bl	11690 <lista_nova@@Base>
   11144:	mov	r6, r0
   11148:	b	11174 <lerFilmes@@Base+0x50>
   1114c:	bl	10b7c <fgets@plt>
   11150:	mov	r1, #10
   11154:	mov	r0, sp
   11158:	bl	10bf4 <strchr@plt>
   1115c:	subs	r3, r0, #0
   11160:	mov	r2, #0
   11164:	mov	r1, sp
   11168:	mov	r0, r6
   1116c:	strbne	r5, [r3]
   11170:	bl	11758 <lista_insere@@Base>
   11174:	mov	r0, r4
   11178:	bl	10bdc <feof@plt>
   1117c:	subs	r5, r0, #0
   11180:	mov	r2, r4
   11184:	mov	r1, #255	; 0xff
   11188:	mov	r0, sp
   1118c:	beq	1114c <lerFilmes@@Base+0x28>
   11190:	mov	r0, r6
   11194:	add	sp, sp, #256	; 0x100
   11198:	ldrd	r4, [sp]
   1119c:	ldr	r6, [sp, #8]
   111a0:	add	sp, sp, #12
   111a4:	pop	{pc}		; (ldr pc, [sp], #4)

000111a8 <vetor_novo@@Base>:
   111a8:	mov	r0, #12
   111ac:	strd	r4, [sp, #-16]!
   111b0:	str	r6, [sp, #8]
   111b4:	str	lr, [sp, #12]
   111b8:	bl	10bb8 <malloc@plt>
   111bc:	cmp	r0, #0
   111c0:	beq	111d8 <vetor_novo@@Base+0x30>
   111c4:	mov	r4, #0
   111c8:	mov	r5, #0
   111cc:	mov	r3, #0
   111d0:	strd	r4, [r0]
   111d4:	str	r3, [r0, #8]
   111d8:	ldrd	r4, [sp]
   111dc:	ldr	r6, [sp, #8]
   111e0:	add	sp, sp, #12
   111e4:	pop	{pc}		; (ldr pc, [sp], #4)

000111e8 <vetor_apaga@@Base>:
   111e8:	strd	r4, [sp, #-16]!
   111ec:	subs	r5, r0, #0
   111f0:	str	r6, [sp, #8]
   111f4:	str	lr, [sp, #12]
   111f8:	beq	11248 <vetor_apaga@@Base+0x60>
   111fc:	ldr	r3, [r5]
   11200:	cmp	r3, #0
   11204:	ble	11228 <vetor_apaga@@Base+0x40>
   11208:	mov	r4, #0
   1120c:	ldr	r3, [r5, #8]
   11210:	ldr	r0, [r3, r4, lsl #2]
   11214:	add	r4, r4, #1
   11218:	bl	10b70 <free@plt>
   1121c:	ldr	r3, [r5]
   11220:	cmp	r3, r4
   11224:	bgt	1120c <vetor_apaga@@Base+0x24>
   11228:	ldr	r0, [r5, #8]
   1122c:	bl	10b70 <free@plt>
   11230:	mov	r0, r5
   11234:	ldrd	r4, [sp]
   11238:	ldr	r6, [sp, #8]
   1123c:	ldr	lr, [sp, #12]
   11240:	add	sp, sp, #16
   11244:	b	10b70 <free@plt>
   11248:	ldrd	r4, [sp]
   1124c:	ldr	r6, [sp, #8]
   11250:	add	sp, sp, #12
   11254:	pop	{pc}		; (ldr pc, [sp], #4)

00011258 <vetor_atribui@@Base>:
   11258:	cmp	r0, #0
   1125c:	lsrne	r3, r1, #31
   11260:	moveq	r3, #1
   11264:	cmp	r3, #0
   11268:	bne	1130c <vetor_atribui@@Base+0xb4>
   1126c:	ldr	r3, [r0]
   11270:	cmp	r3, r1
   11274:	ble	1130c <vetor_atribui@@Base+0xb4>
   11278:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1127c:	mov	r5, r0
   11280:	mov	r0, r2
   11284:	mov	r4, r1
   11288:	strd	r6, [sp, #8]
   1128c:	mov	r6, r2
   11290:	strd	r8, [sp, #16]
   11294:	str	sl, [sp, #24]
   11298:	str	lr, [sp, #28]
   1129c:	bl	10be8 <strlen@plt>
   112a0:	ldr	r8, [r5, #8]
   112a4:	mov	r9, r0
   112a8:	ldr	r7, [r8, r4, lsl #2]
   112ac:	mov	r0, r7
   112b0:	bl	10be8 <strlen@plt>
   112b4:	cmp	r0, r9
   112b8:	bcc	112e4 <vetor_atribui@@Base+0x8c>
   112bc:	mov	r1, r6
   112c0:	mov	r0, r7
   112c4:	bl	10ba0 <strcpy@plt>
   112c8:	mov	r0, r4
   112cc:	ldrd	r4, [sp]
   112d0:	ldrd	r6, [sp, #8]
   112d4:	ldrd	r8, [sp, #16]
   112d8:	ldr	sl, [sp, #24]
   112dc:	add	sp, sp, #28
   112e0:	pop	{pc}		; (ldr pc, [sp], #4)
   112e4:	mov	r0, r7
   112e8:	add	r1, r9, #1
   112ec:	bl	10b94 <realloc@plt>
   112f0:	ldr	r3, [r5, #8]
   112f4:	str	r0, [r8, r4, lsl #2]
   112f8:	ldr	r7, [r3, r4, lsl #2]
   112fc:	cmp	r7, #0
   11300:	bne	112bc <vetor_atribui@@Base+0x64>
   11304:	mvn	r0, #0
   11308:	b	112cc <vetor_atribui@@Base+0x74>
   1130c:	mvn	r0, #0
   11310:	bx	lr

00011314 <vetor_tamanho@@Base>:
   11314:	cmp	r0, #0
   11318:	ldrne	r0, [r0]
   1131c:	mvneq	r0, #0
   11320:	bx	lr

00011324 <vetor_elemento@@Base>:
   11324:	cmp	r0, #0
   11328:	lsrne	r3, r1, #31
   1132c:	moveq	r3, #1
   11330:	cmp	r3, #0
   11334:	bne	11350 <vetor_elemento@@Base+0x2c>
   11338:	ldr	r2, [r0]
   1133c:	cmp	r2, r1
   11340:	ble	11350 <vetor_elemento@@Base+0x2c>
   11344:	ldr	r3, [r0, #8]
   11348:	ldr	r0, [r3, r1, lsl #2]
   1134c:	bx	lr
   11350:	mov	r0, #0
   11354:	bx	lr

00011358 <vetor_insere@@Base>:
   11358:	cmp	r0, #0
   1135c:	lsrne	r3, r2, #31
   11360:	moveq	r3, #1
   11364:	cmp	r3, #0
   11368:	bne	11448 <vetor_insere@@Base+0xf0>
   1136c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11370:	strd	r6, [sp, #8]
   11374:	ldr	r6, [r0]
   11378:	str	r8, [sp, #16]
   1137c:	str	lr, [sp, #20]
   11380:	cmp	r6, r2
   11384:	blt	11440 <vetor_insere@@Base+0xe8>
   11388:	ldmib	r0, {r3, r5}
   1138c:	mov	r7, r0
   11390:	mov	r8, r1
   11394:	mov	r4, r2
   11398:	cmp	r6, r3
   1139c:	beq	11408 <vetor_insere@@Base+0xb0>
   113a0:	cmp	r4, r6
   113a4:	addlt	r3, r5, r6, lsl #2
   113a8:	addlt	r2, r5, r4, lsl #2
   113ac:	bge	113c0 <vetor_insere@@Base+0x68>
   113b0:	ldr	ip, [r3, #-4]
   113b4:	str	ip, [r3], #-4
   113b8:	cmp	r2, r3
   113bc:	bne	113b0 <vetor_insere@@Base+0x58>
   113c0:	mov	r0, r8
   113c4:	bl	10be8 <strlen@plt>
   113c8:	add	r0, r0, #1
   113cc:	mov	r1, #1
   113d0:	bl	10b34 <calloc@plt>
   113d4:	cmp	r0, #0
   113d8:	str	r0, [r5, r4, lsl #2]
   113dc:	beq	11440 <vetor_insere@@Base+0xe8>
   113e0:	mov	r1, r8
   113e4:	bl	10ba0 <strcpy@plt>
   113e8:	add	r1, r6, #1
   113ec:	mov	r0, r4
   113f0:	str	r1, [r7]
   113f4:	ldrd	r4, [sp]
   113f8:	ldrd	r6, [sp, #8]
   113fc:	ldr	r8, [sp, #16]
   11400:	add	sp, sp, #20
   11404:	pop	{pc}		; (ldr pc, [sp], #4)
   11408:	cmp	r6, #0
   1140c:	mov	r0, r5
   11410:	lslne	r3, r6, #1
   11414:	moveq	r3, #1
   11418:	moveq	r1, #4
   1141c:	lslne	r1, r6, #3
   11420:	str	r3, [r7, #4]
   11424:	bl	10b94 <realloc@plt>
   11428:	cmp	r0, #0
   1142c:	mov	r5, r0
   11430:	str	r0, [r7, #8]
   11434:	beq	11440 <vetor_insere@@Base+0xe8>
   11438:	ldr	r6, [r7]
   1143c:	b	113a0 <vetor_insere@@Base+0x48>
   11440:	mvn	r0, #0
   11444:	b	113f4 <vetor_insere@@Base+0x9c>
   11448:	mvn	r0, #0
   1144c:	bx	lr

00011450 <vetor_remove@@Base>:
   11450:	cmp	r0, #0
   11454:	lsrne	r3, r1, #31
   11458:	moveq	r3, #1
   1145c:	cmp	r3, #0
   11460:	bne	114e0 <vetor_remove@@Base+0x90>
   11464:	ldr	r3, [r0]
   11468:	cmp	r3, r1
   1146c:	ble	114e0 <vetor_remove@@Base+0x90>
   11470:	ldr	r3, [r0, #8]
   11474:	strd	r4, [sp, #-16]!
   11478:	mov	r5, r0
   1147c:	mov	r4, r1
   11480:	ldr	r0, [r3, r1, lsl #2]
   11484:	str	r6, [sp, #8]
   11488:	lsl	r6, r1, #2
   1148c:	str	lr, [sp, #12]
   11490:	bl	10b70 <free@plt>
   11494:	ldr	r0, [r5]
   11498:	add	r1, r4, #1
   1149c:	cmp	r1, r0
   114a0:	bge	114c4 <vetor_remove@@Base+0x74>
   114a4:	ldr	r3, [r5, #8]
   114a8:	sub	r1, r3, #4
   114ac:	add	r3, r3, r6
   114b0:	add	r1, r1, r0, lsl #2
   114b4:	ldr	r2, [r3, #4]
   114b8:	str	r2, [r3], #4
   114bc:	cmp	r1, r3
   114c0:	bne	114b4 <vetor_remove@@Base+0x64>
   114c4:	sub	r3, r0, #1
   114c8:	ldr	r6, [sp, #8]
   114cc:	mov	r0, #0
   114d0:	str	r3, [r5]
   114d4:	ldrd	r4, [sp]
   114d8:	add	sp, sp, #12
   114dc:	pop	{pc}		; (ldr pc, [sp], #4)
   114e0:	mvn	r0, #0
   114e4:	bx	lr

000114e8 <vetor_pesquisa@@Base>:
   114e8:	cmp	r0, #0
   114ec:	strd	r4, [sp, #-24]!	; 0xffffffe8
   114f0:	strd	r6, [sp, #8]
   114f4:	str	r8, [sp, #16]
   114f8:	str	lr, [sp, #20]
   114fc:	beq	11558 <vetor_pesquisa@@Base+0x70>
   11500:	ldr	r7, [r0]
   11504:	cmp	r7, #0
   11508:	ble	11558 <vetor_pesquisa@@Base+0x70>
   1150c:	ldr	r5, [r0, #8]
   11510:	mov	r6, r1
   11514:	mov	r4, #0
   11518:	sub	r5, r5, #4
   1151c:	b	1152c <vetor_pesquisa@@Base+0x44>
   11520:	add	r4, r4, #1
   11524:	cmp	r7, r4
   11528:	beq	11558 <vetor_pesquisa@@Base+0x70>
   1152c:	mov	r1, r6
   11530:	ldr	r0, [r5, #4]!
   11534:	bl	10b40 <strcmp@plt>
   11538:	cmp	r0, #0
   1153c:	bne	11520 <vetor_pesquisa@@Base+0x38>
   11540:	mov	r0, r4
   11544:	ldrd	r4, [sp]
   11548:	ldrd	r6, [sp, #8]
   1154c:	ldr	r8, [sp, #16]
   11550:	add	sp, sp, #20
   11554:	pop	{pc}		; (ldr pc, [sp], #4)
   11558:	mvn	r4, #0
   1155c:	b	11540 <vetor_pesquisa@@Base+0x58>

00011560 <vetor_ordena@@Base>:
   11560:	cmp	r0, #0
   11564:	beq	11608 <vetor_ordena@@Base+0xa8>
   11568:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1156c:	strd	r6, [sp, #8]
   11570:	strd	sl, [sp, #24]
   11574:	ldr	sl, [r0]
   11578:	strd	r8, [sp, #16]
   1157c:	str	lr, [sp, #32]
   11580:	sub	sp, sp, #12
   11584:	cmp	sl, #1
   11588:	ble	115e8 <vetor_ordena@@Base+0x88>
   1158c:	ldr	r3, [r0, #8]
   11590:	mov	r8, #1
   11594:	mov	r9, r3
   11598:	str	r3, [sp, #4]
   1159c:	ldr	r7, [r9, #4]!
   115a0:	mov	r5, r8
   115a4:	mov	r4, r9
   115a8:	ldr	r6, [r4, #-4]
   115ac:	mov	r0, r7
   115b0:	mov	fp, r4
   115b4:	mov	r1, r6
   115b8:	bl	10b40 <strcmp@plt>
   115bc:	cmp	r0, #0
   115c0:	bge	115d8 <vetor_ordena@@Base+0x78>
   115c4:	subs	r5, r5, #1
   115c8:	str	r6, [r4]
   115cc:	sub	r4, fp, #4
   115d0:	bne	115a8 <vetor_ordena@@Base+0x48>
   115d4:	ldr	fp, [sp, #4]
   115d8:	add	r8, r8, #1
   115dc:	str	r7, [fp]
   115e0:	cmp	r8, sl
   115e4:	bne	1159c <vetor_ordena@@Base+0x3c>
   115e8:	mov	r0, #0
   115ec:	add	sp, sp, #12
   115f0:	ldrd	r4, [sp]
   115f4:	ldrd	r6, [sp, #8]
   115f8:	ldrd	r8, [sp, #16]
   115fc:	ldrd	sl, [sp, #24]
   11600:	add	sp, sp, #32
   11604:	pop	{pc}		; (ldr pc, [sp], #4)
   11608:	mvn	r0, #0
   1160c:	bx	lr

00011610 <novo_str@@Base>:
   11610:	strd	r4, [sp, #-16]!
   11614:	mov	r5, r0
   11618:	mov	r0, #12
   1161c:	str	r6, [sp, #8]
   11620:	str	lr, [sp, #12]
   11624:	bl	10bb8 <malloc@plt>
   11628:	subs	r4, r0, #0
   1162c:	beq	1166c <novo_str@@Base+0x5c>
   11630:	mov	r0, r5
   11634:	bl	10be8 <strlen@plt>
   11638:	add	r6, r0, #1
   1163c:	mov	r0, r6
   11640:	bl	10bb8 <malloc@plt>
   11644:	cmp	r0, #0
   11648:	mov	r3, r0
   1164c:	str	r0, [r4]
   11650:	beq	11680 <novo_str@@Base+0x70>
   11654:	mov	r2, r6
   11658:	mov	r1, r5
   1165c:	bl	10b88 <memcpy@plt>
   11660:	mov	r3, #0
   11664:	str	r3, [r4, #4]
   11668:	str	r3, [r4, #8]
   1166c:	mov	r0, r4
   11670:	ldrd	r4, [sp]
   11674:	ldr	r6, [sp, #8]
   11678:	add	sp, sp, #12
   1167c:	pop	{pc}		; (ldr pc, [sp], #4)
   11680:	mov	r0, r4
   11684:	mov	r4, r3
   11688:	bl	10b70 <free@plt>
   1168c:	b	1166c <novo_str@@Base+0x5c>

00011690 <lista_nova@@Base>:
   11690:	mov	r0, #12
   11694:	strd	r4, [sp, #-16]!
   11698:	str	r6, [sp, #8]
   1169c:	str	lr, [sp, #12]
   116a0:	bl	10bb8 <malloc@plt>
   116a4:	cmp	r0, #0
   116a8:	beq	116c0 <lista_nova@@Base+0x30>
   116ac:	mov	r4, #0
   116b0:	mov	r5, #0
   116b4:	mov	r3, #0
   116b8:	strd	r4, [r0]
   116bc:	str	r3, [r0, #8]
   116c0:	ldrd	r4, [sp]
   116c4:	ldr	r6, [sp, #8]
   116c8:	add	sp, sp, #12
   116cc:	pop	{pc}		; (ldr pc, [sp], #4)

000116d0 <lista_apaga@@Base>:
   116d0:	strd	r4, [sp, #-16]!
   116d4:	subs	r5, r0, #0
   116d8:	str	r6, [sp, #8]
   116dc:	str	lr, [sp, #12]
   116e0:	bne	116fc <lista_apaga@@Base+0x2c>
   116e4:	b	11720 <lista_apaga@@Base+0x50>
   116e8:	ldm	r4, {r0, r3}
   116ec:	str	r3, [r5]
   116f0:	bl	10b70 <free@plt>
   116f4:	mov	r0, r4
   116f8:	bl	10b70 <free@plt>
   116fc:	ldr	r4, [r5]
   11700:	cmp	r4, #0
   11704:	bne	116e8 <lista_apaga@@Base+0x18>
   11708:	mov	r0, r5
   1170c:	ldrd	r4, [sp]
   11710:	ldr	r6, [sp, #8]
   11714:	ldr	lr, [sp, #12]
   11718:	add	sp, sp, #16
   1171c:	b	10b70 <free@plt>
   11720:	ldrd	r4, [sp]
   11724:	ldr	r6, [sp, #8]
   11728:	add	sp, sp, #12
   1172c:	pop	{pc}		; (ldr pc, [sp], #4)

00011730 <lista_tamanho@@Base>:
   11730:	cmp	r0, #0
   11734:	ldrne	r0, [r0, #8]
   11738:	mvneq	r0, #0
   1173c:	bx	lr

00011740 <lista_inicio@@Base>:
   11740:	cmp	r0, #0
   11744:	ldrne	r0, [r0]
   11748:	bx	lr

0001174c <lista_fim@@Base>:
   1174c:	cmp	r0, #0
   11750:	ldrne	r0, [r0, #4]
   11754:	bx	lr

00011758 <lista_insere@@Base>:
   11758:	clz	r3, r1
   1175c:	cmp	r0, #0
   11760:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11764:	lsr	r3, r3, #5
   11768:	strd	r6, [sp, #8]
   1176c:	moveq	r7, #1
   11770:	strd	r8, [sp, #16]
   11774:	movne	r7, r3
   11778:	str	sl, [sp, #24]
   1177c:	cmp	r7, #0
   11780:	str	lr, [sp, #28]
   11784:	bne	11838 <lista_insere@@Base+0xe0>
   11788:	mov	r5, r0
   1178c:	mov	r0, #12
   11790:	mov	r8, r1
   11794:	mov	r6, r2
   11798:	bl	10bb8 <malloc@plt>
   1179c:	subs	r4, r0, #0
   117a0:	beq	11838 <lista_insere@@Base+0xe0>
   117a4:	mov	r0, r8
   117a8:	bl	10be8 <strlen@plt>
   117ac:	add	r9, r0, #1
   117b0:	mov	r0, r9
   117b4:	bl	10bb8 <malloc@plt>
   117b8:	cmp	r0, #0
   117bc:	mov	r3, r0
   117c0:	str	r0, [r4]
   117c4:	beq	1185c <lista_insere@@Base+0x104>
   117c8:	mov	r2, r9
   117cc:	mov	r1, r8
   117d0:	bl	10b88 <memcpy@plt>
   117d4:	cmp	r6, #0
   117d8:	str	r7, [r4, #4]
   117dc:	ldr	r3, [r5, #8]
   117e0:	str	r7, [r4, #8]
   117e4:	ldr	r2, [r5]
   117e8:	add	r3, r3, #1
   117ec:	str	r3, [r5, #8]
   117f0:	beq	11840 <lista_insere@@Base+0xe8>
   117f4:	cmp	r6, r2
   117f8:	streq	r6, [r4, #4]
   117fc:	streq	r4, [r6, #8]
   11800:	streq	r4, [r5]
   11804:	beq	1181c <lista_insere@@Base+0xc4>
   11808:	ldr	r3, [r6, #8]
   1180c:	str	r6, [r4, #4]
   11810:	str	r3, [r4, #8]
   11814:	str	r4, [r3, #4]
   11818:	str	r4, [r6, #8]
   1181c:	mov	r0, r4
   11820:	ldrd	r4, [sp]
   11824:	ldrd	r6, [sp, #8]
   11828:	ldrd	r8, [sp, #16]
   1182c:	ldr	sl, [sp, #24]
   11830:	add	sp, sp, #28
   11834:	pop	{pc}		; (ldr pc, [sp], #4)
   11838:	mov	r4, #0
   1183c:	b	1181c <lista_insere@@Base+0xc4>
   11840:	cmp	r2, #0
   11844:	ldrne	r3, [r5, #4]
   11848:	streq	r4, [r5]
   1184c:	strne	r3, [r4, #8]
   11850:	strne	r4, [r3, #4]
   11854:	str	r4, [r5, #4]
   11858:	b	1181c <lista_insere@@Base+0xc4>
   1185c:	mov	r0, r4
   11860:	mov	r4, r3
   11864:	bl	10b70 <free@plt>
   11868:	b	1181c <lista_insere@@Base+0xc4>

0001186c <lista_remove@@Base>:
   1186c:	cmp	r1, #0
   11870:	cmpne	r0, #0
   11874:	strd	r4, [sp, #-16]!
   11878:	moveq	r5, #0
   1187c:	str	r6, [sp, #8]
   11880:	str	lr, [sp, #12]
   11884:	beq	118cc <lista_remove@@Base+0x60>
   11888:	ldr	r3, [r0, #8]
   1188c:	mov	r4, r1
   11890:	ldr	r2, [r1, #8]
   11894:	ldr	r5, [r1, #4]
   11898:	sub	r3, r3, #1
   1189c:	cmp	r2, #0
   118a0:	str	r3, [r0, #8]
   118a4:	strne	r5, [r2, #4]
   118a8:	ldrne	r5, [r1, #4]
   118ac:	streq	r5, [r0]
   118b0:	cmp	r5, #0
   118b4:	streq	r2, [r0, #4]
   118b8:	strne	r2, [r5, #8]
   118bc:	ldr	r0, [r1]
   118c0:	bl	10b70 <free@plt>
   118c4:	mov	r0, r4
   118c8:	bl	10b70 <free@plt>
   118cc:	mov	r0, r5
   118d0:	ldrd	r4, [sp]
   118d4:	ldr	r6, [sp, #8]
   118d8:	add	sp, sp, #12
   118dc:	pop	{pc}		; (ldr pc, [sp], #4)

000118e0 <lista_pesquisa@@Base>:
   118e0:	strd	r4, [sp, #-16]!
   118e4:	clz	r4, r1
   118e8:	cmp	r0, #0
   118ec:	lsr	r4, r4, #5
   118f0:	moveq	r4, #1
   118f4:	str	r6, [sp, #8]
   118f8:	str	lr, [sp, #12]
   118fc:	cmp	r4, #0
   11900:	movne	r4, #0
   11904:	bne	1194c <lista_pesquisa@@Base+0x6c>
   11908:	cmp	r2, #1
   1190c:	bhi	1194c <lista_pesquisa@@Base+0x6c>
   11910:	cmp	r2, #0
   11914:	mov	r5, r1
   11918:	bne	11960 <lista_pesquisa@@Base+0x80>
   1191c:	ldr	r4, [r0]
   11920:	cmp	r4, #0
   11924:	bne	11938 <lista_pesquisa@@Base+0x58>
   11928:	b	1194c <lista_pesquisa@@Base+0x6c>
   1192c:	ldr	r4, [r4, #4]
   11930:	cmp	r4, #0
   11934:	beq	1194c <lista_pesquisa@@Base+0x6c>
   11938:	mov	r1, r5
   1193c:	ldr	r0, [r4]
   11940:	bl	10b40 <strcmp@plt>
   11944:	cmp	r0, #0
   11948:	bne	1192c <lista_pesquisa@@Base+0x4c>
   1194c:	mov	r0, r4
   11950:	ldrd	r4, [sp]
   11954:	ldr	r6, [sp, #8]
   11958:	add	sp, sp, #12
   1195c:	pop	{pc}		; (ldr pc, [sp], #4)
   11960:	ldr	r4, [r0, #4]
   11964:	cmp	r4, #0
   11968:	bne	1197c <lista_pesquisa@@Base+0x9c>
   1196c:	b	1194c <lista_pesquisa@@Base+0x6c>
   11970:	ldr	r4, [r4, #8]
   11974:	cmp	r4, #0
   11978:	beq	1194c <lista_pesquisa@@Base+0x6c>
   1197c:	mov	r1, r5
   11980:	ldr	r0, [r4]
   11984:	bl	10b40 <strcmp@plt>
   11988:	cmp	r0, #0
   1198c:	bne	11970 <lista_pesquisa@@Base+0x90>
   11990:	b	1194c <lista_pesquisa@@Base+0x6c>

00011994 <lista_ordena@@Base>:
   11994:	cmp	r0, #0
   11998:	beq	11a4c <lista_ordena@@Base+0xb8>
   1199c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   119a0:	strd	r6, [sp, #8]
   119a4:	strd	r8, [sp, #16]
   119a8:	ldr	r8, [r0]
   119ac:	str	sl, [sp, #24]
   119b0:	str	lr, [sp, #28]
   119b4:	ldr	r9, [r8, #4]
   119b8:	cmp	r9, #0
   119bc:	beq	11a44 <lista_ordena@@Base+0xb0>
   119c0:	ldr	sl, [r8]
   119c4:	mov	r7, r8
   119c8:	mov	r4, r9
   119cc:	mov	r5, sl
   119d0:	ldr	r6, [r4]
   119d4:	mov	r1, r5
   119d8:	mov	r0, r6
   119dc:	bl	10b40 <strcmp@plt>
   119e0:	cmp	r0, #0
   119e4:	movlt	r7, r4
   119e8:	ldr	r4, [r4, #4]
   119ec:	movlt	r5, r6
   119f0:	cmp	r4, #0
   119f4:	bne	119d0 <lista_ordena@@Base+0x3c>
   119f8:	cmp	r7, r8
   119fc:	ldr	r3, [r9, #4]
   11a00:	beq	11a20 <lista_ordena@@Base+0x8c>
   11a04:	cmp	r3, #0
   11a08:	str	r5, [r8]
   11a0c:	str	sl, [r7]
   11a10:	beq	11a28 <lista_ordena@@Base+0x94>
   11a14:	mov	r8, r9
   11a18:	mov	r9, r3
   11a1c:	b	119c0 <lista_ordena@@Base+0x2c>
   11a20:	cmp	r3, #0
   11a24:	bne	11a14 <lista_ordena@@Base+0x80>
   11a28:	mov	r0, r4
   11a2c:	ldrd	r4, [sp]
   11a30:	ldrd	r6, [sp, #8]
   11a34:	ldrd	r8, [sp, #16]
   11a38:	ldr	sl, [sp, #24]
   11a3c:	add	sp, sp, #28
   11a40:	pop	{pc}		; (ldr pc, [sp], #4)
   11a44:	mov	r0, r9
   11a48:	b	11a2c <lista_ordena@@Base+0x98>
   11a4c:	mvn	r0, #0
   11a50:	bx	lr

00011a54 <lista_inverte@@Base>:
   11a54:	strd	r4, [sp, #-12]!
   11a58:	subs	r5, r0, #0
   11a5c:	str	lr, [sp, #8]
   11a60:	beq	11af4 <lista_inverte@@Base+0xa0>
   11a64:	ldr	r4, [r5, #8]
   11a68:	cmp	r4, #1
   11a6c:	movle	r0, #0
   11a70:	ble	11ae0 <lista_inverte@@Base+0x8c>
   11a74:	ldr	r1, [r5]
   11a78:	cmp	r4, #2
   11a7c:	ldr	r3, [r1, #4]
   11a80:	beq	11aec <lista_inverte@@Base+0x98>
   11a84:	sub	r4, r4, #2
   11a88:	mov	ip, #0
   11a8c:	b	11a94 <lista_inverte@@Base+0x40>
   11a90:	mov	r3, r2
   11a94:	ldmib	r3, {r2, lr}
   11a98:	add	ip, ip, #1
   11a9c:	cmp	r4, ip
   11aa0:	str	r2, [lr, #4]
   11aa4:	str	lr, [r2, #8]
   11aa8:	str	r1, [r3, #4]
   11aac:	str	r3, [r1, #8]
   11ab0:	mov	r1, r3
   11ab4:	bne	11a90 <lista_inverte@@Base+0x3c>
   11ab8:	ldr	r2, [r5, #4]
   11abc:	mov	r1, #0
   11ac0:	mov	r0, r1
   11ac4:	ldr	ip, [r2, #8]
   11ac8:	str	ip, [r5, #4]
   11acc:	str	r1, [ip, #4]
   11ad0:	str	r3, [r2, #4]
   11ad4:	str	r1, [r2, #8]
   11ad8:	str	r2, [r3, #8]
   11adc:	str	r2, [r5]
   11ae0:	ldrd	r4, [sp]
   11ae4:	add	sp, sp, #8
   11ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   11aec:	mov	r3, r1
   11af0:	b	11ab8 <lista_inverte@@Base+0x64>
   11af4:	mvn	r0, #0
   11af8:	b	11ae0 <lista_inverte@@Base+0x8c>

00011afc <__libc_csu_init@@Base>:
   11afc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b00:	mov	r7, r0
   11b04:	ldr	r6, [pc, #72]	; 11b54 <__libc_csu_init@@Base+0x58>
   11b08:	ldr	r5, [pc, #72]	; 11b58 <__libc_csu_init@@Base+0x5c>
   11b0c:	add	r6, pc, r6
   11b10:	add	r5, pc, r5
   11b14:	sub	r6, r6, r5
   11b18:	mov	r8, r1
   11b1c:	mov	r9, r2
   11b20:	bl	10b14 <calloc@plt-0x20>
   11b24:	asrs	r6, r6, #2
   11b28:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b2c:	mov	r4, #0
   11b30:	add	r4, r4, #1
   11b34:	ldr	r3, [r5], #4
   11b38:	mov	r2, r9
   11b3c:	mov	r1, r8
   11b40:	mov	r0, r7
   11b44:	blx	r3
   11b48:	cmp	r6, r4
   11b4c:	bne	11b30 <__libc_csu_init@@Base+0x34>
   11b50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b54:	andeq	r0, r1, r0, lsl #8
   11b58:	strdeq	r0, [r1], -r8

00011b5c <__libc_csu_fini@@Base>:
   11b5c:	bx	lr

Disassembly of section .fini:

00011b60 <.fini>:
   11b60:	push	{r3, lr}
   11b64:	pop	{r3, pc}
