
../repos/charybdis/extensions/.libs/chm_sslonly_compat.so:     file format elf32-littlearm


Disassembly of section .init:

000003a0 <_init>:
 3a0:	push	{r3, lr}
 3a4:	bl	3f0 <call_weak_fn>
 3a8:	pop	{r3, pc}

Disassembly of section .plt:

000003ac <.plt>:
 3ac:	push	{lr}		; (str lr, [sp, #-4]!)
 3b0:	ldr	lr, [pc, #4]	; 3bc <.plt+0x10>
 3b4:	add	lr, pc, lr
 3b8:	ldr	pc, [lr, #8]!
 3bc:	.word	0x00010c44

000003c0 <__cxa_finalize@plt>:
 3c0:	add	ip, pc, #0, 12
 3c4:	add	ip, ip, #16, 20	; 0x10000
 3c8:	ldr	pc, [ip, #3140]!	; 0xc44

000003cc <chm_nosuch@plt>:
 3cc:	add	ip, pc, #0, 12
 3d0:	add	ip, ip, #16, 20	; 0x10000
 3d4:	ldr	pc, [ip, #3132]!	; 0xc3c

000003d8 <__gmon_start__@plt>:
 3d8:	add	ip, pc, #0, 12
 3dc:	add	ip, ip, #16, 20	; 0x10000
 3e0:	ldr	pc, [ip, #3124]!	; 0xc34

000003e4 <chm_ban@plt>:
 3e4:	add	ip, pc, #0, 12
 3e8:	add	ip, ip, #16, 20	; 0x10000
 3ec:	ldr	pc, [ip, #3116]!	; 0xc2c

Disassembly of section .text:

000003f0 <call_weak_fn>:
 3f0:	ldr	r3, [pc, #20]	; 40c <call_weak_fn+0x1c>
 3f4:	ldr	r2, [pc, #20]	; 410 <call_weak_fn+0x20>
 3f8:	add	r3, pc, r3
 3fc:	ldr	r2, [r3, r2]
 400:	cmp	r2, #0
 404:	bxeq	lr
 408:	b	3d8 <__gmon_start__@plt>
 40c:	.word	0x00010c00
 410:	.word	0x00000028

00000414 <deregister_tm_clones>:
 414:	ldr	r0, [pc, #44]	; 448 <deregister_tm_clones+0x34>
 418:	ldr	r3, [pc, #44]	; 44c <deregister_tm_clones+0x38>
 41c:	add	r0, pc, r0
 420:	add	r3, pc, r3
 424:	cmp	r3, r0
 428:	ldr	r3, [pc, #32]	; 450 <deregister_tm_clones+0x3c>
 42c:	add	r3, pc, r3
 430:	bxeq	lr
 434:	ldr	r2, [pc, #24]	; 454 <deregister_tm_clones+0x40>
 438:	ldr	r3, [r3, r2]
 43c:	cmp	r3, #0
 440:	bxeq	lr
 444:	bx	r3
 448:	.word	0x00010c3c
 44c:	.word	0x00010c38
 450:	.word	0x00010bcc
 454:	.word	0x00000020

00000458 <register_tm_clones>:
 458:	ldr	r0, [pc, #56]	; 498 <register_tm_clones+0x40>
 45c:	ldr	r3, [pc, #56]	; 49c <register_tm_clones+0x44>
 460:	add	r0, pc, r0
 464:	add	r3, pc, r3
 468:	sub	r1, r3, r0
 46c:	ldr	r3, [pc, #44]	; 4a0 <register_tm_clones+0x48>
 470:	asr	r1, r1, #2
 474:	add	r3, pc, r3
 478:	add	r1, r1, r1, lsr #31
 47c:	asrs	r1, r1, #1
 480:	bxeq	lr
 484:	ldr	r2, [pc, #24]	; 4a4 <register_tm_clones+0x4c>
 488:	ldr	r3, [r3, r2]
 48c:	cmp	r3, #0
 490:	bxeq	lr
 494:	bx	r3
 498:	.word	0x00010bf8
 49c:	.word	0x00010bf4
 4a0:	.word	0x00010b84
 4a4:	.word	0x00000030

000004a8 <__do_global_dtors_aux>:
 4a8:	ldr	r3, [pc, #76]	; 4fc <__do_global_dtors_aux+0x54>
 4ac:	ldr	r2, [pc, #76]	; 500 <__do_global_dtors_aux+0x58>
 4b0:	add	r3, pc, r3
 4b4:	add	r2, pc, r2
 4b8:	ldrb	r3, [r3]
 4bc:	cmp	r3, #0
 4c0:	bxne	lr
 4c4:	ldr	r3, [pc, #56]	; 504 <__do_global_dtors_aux+0x5c>
 4c8:	push	{r4, lr}
 4cc:	ldr	r3, [r2, r3]
 4d0:	cmp	r3, #0
 4d4:	beq	4e4 <__do_global_dtors_aux+0x3c>
 4d8:	ldr	r3, [pc, #40]	; 508 <__do_global_dtors_aux+0x60>
 4dc:	ldr	r0, [pc, r3]
 4e0:	bl	3c0 <__cxa_finalize@plt>
 4e4:	bl	414 <deregister_tm_clones>
 4e8:	ldr	r3, [pc, #28]	; 50c <__do_global_dtors_aux+0x64>
 4ec:	mov	r2, #1
 4f0:	add	r3, pc, r3
 4f4:	strb	r2, [r3]
 4f8:	pop	{r4, pc}
 4fc:	.word	0x00010ba8
 500:	.word	0x00010b44
 504:	.word	0x0000001c
 508:	.word	0x00010b50
 50c:	.word	0x00010b68

00000510 <frame_dummy>:
 510:	b	458 <register_tm_clones>

00000514 <_modinit>:
 514:	ldr	r3, [pc, #32]	; 53c <_modinit+0x28>
 518:	mov	r0, #0
 51c:	ldr	r2, [pc, #28]	; 540 <_modinit+0x2c>
 520:	add	r3, pc, r3
 524:	ldr	r3, [r3, r2]
 528:	ldr	r2, [pc, #20]	; 544 <_modinit+0x30>
 52c:	str	r0, [r3, #668]	; 0x29c
 530:	add	r2, pc, r2
 534:	str	r2, [r3, #664]	; 0x298
 538:	bx	lr
 53c:	.word	0x00010ad8
 540:	.word	0x0000002c
 544:	.word	0x00000044

00000548 <_moddeinit>:
 548:	ldr	r3, [pc, #32]	; 570 <_moddeinit+0x28>
 54c:	ldr	r2, [pc, #32]	; 574 <_moddeinit+0x2c>
 550:	ldr	r1, [pc, #32]	; 578 <_moddeinit+0x30>
 554:	add	r3, pc, r3
 558:	ldr	r2, [r3, r2]
 55c:	ldr	r3, [r3, r1]
 560:	str	r3, [r2, #664]	; 0x298
 564:	mov	r3, #0
 568:	str	r3, [r2, #668]	; 0x29c
 56c:	bx	lr
 570:	.word	0x00010aa4
 574:	.word	0x0000002c
 578:	.word	0x00000024

0000057c <chm_sslonly>:
 57c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
 580:	sub	sp, sp, #32
 584:	mov	r7, #0
 588:	mov	r5, r7
 58c:	mov	ip, r0
 590:	mov	r8, r1
 594:	mov	r9, r2
 598:	ldr	r4, [pc, #160]	; 640 <chm_sslonly+0xc4>
 59c:	str	r7, [sp, #24]
 5a0:	ldr	sl, [r0, #64]	; 0x40
 5a4:	ldr	lr, [sp, #72]	; 0x48
 5a8:	add	r4, pc, r4
 5ac:	ldr	r6, [sp, #76]	; 0x4c
 5b0:	str	r4, [sp, #28]
 5b4:	and	r4, sl, #8192	; 0x2000
 5b8:	orrs	r4, r4, r5
 5bc:	beq	604 <chm_sslonly+0x88>
 5c0:	ldrh	r4, [r0, #80]	; 0x50
 5c4:	cmp	r4, #64	; 0x40
 5c8:	bne	604 <chm_sslonly+0x88>
 5cc:	mov	r3, #268435456	; 0x10000000
 5d0:	str	lr, [sp, #8]
 5d4:	str	r6, [sp, #12]
 5d8:	str	r3, [sp, #20]
 5dc:	mov	r3, #98	; 0x62
 5e0:	str	r3, [sp, #16]
 5e4:	add	r3, sp, #28
 5e8:	str	r3, [sp, #4]
 5ec:	add	r3, sp, #24
 5f0:	str	r3, [sp]
 5f4:	mov	r3, #1
 5f8:	bl	3e4 <chm_ban@plt>
 5fc:	add	sp, sp, #32
 600:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
 604:	ldr	r2, [sp, #84]	; 0x54
 608:	mov	r1, r8
 60c:	mov	r0, ip
 610:	str	lr, [sp, #8]
 614:	str	r6, [sp, #12]
 618:	str	r2, [sp, #20]
 61c:	ldrb	r2, [sp, #80]	; 0x50
 620:	str	r2, [sp, #16]
 624:	ldr	r2, [sp, #68]	; 0x44
 628:	str	r2, [sp, #4]
 62c:	ldr	r2, [sp, #64]	; 0x40
 630:	str	r2, [sp]
 634:	mov	r2, r9
 638:	bl	3cc <chm_nosuch@plt>
 63c:	b	5fc <chm_sslonly+0x80>
 640:	.word	0x000000e1

Disassembly of section .fini:

00000644 <_fini>:
 644:	push	{r3, lr}
 648:	pop	{r3, pc}
