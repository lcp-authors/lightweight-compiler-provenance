
../repos/coreutils/src/readlink:     file format elf32-littlearm


Disassembly of section .init:

00010da4 <.init>:
   10da4:	push	{r3, lr}
   10da8:	bl	11074 <__mempcpy_chk@plt+0x4c>
   10dac:	pop	{r3, pc}

Disassembly of section .plt:

00010db0 <calloc@plt-0x14>:
   10db0:	push	{lr}		; (str lr, [sp, #-4]!)
   10db4:	ldr	lr, [pc, #4]	; 10dc0 <calloc@plt-0x4>
   10db8:	add	lr, pc, lr
   10dbc:	ldr	pc, [lr, #8]!
   10dc0:	andeq	r6, r1, r0, asr #4

00010dc4 <calloc@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #90112	; 0x16000
   10dcc:	ldr	pc, [ip, #576]!	; 0x240

00010dd0 <fputs_unlocked@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #90112	; 0x16000
   10dd8:	ldr	pc, [ip, #568]!	; 0x238

00010ddc <raise@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #90112	; 0x16000
   10de4:	ldr	pc, [ip, #560]!	; 0x230

00010de8 <strcmp@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #90112	; 0x16000
   10df0:	ldr	pc, [ip, #552]!	; 0x228

00010df4 <fflush@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #90112	; 0x16000
   10dfc:	ldr	pc, [ip, #544]!	; 0x220

00010e00 <memmove@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #90112	; 0x16000
   10e08:	ldr	pc, [ip, #536]!	; 0x218

00010e0c <free@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #90112	; 0x16000
   10e14:	ldr	pc, [ip, #528]!	; 0x210

00010e18 <faccessat@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #90112	; 0x16000
   10e20:	ldr	pc, [ip, #520]!	; 0x208

00010e24 <_exit@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #90112	; 0x16000
   10e2c:	ldr	pc, [ip, #512]!	; 0x200

00010e30 <memcpy@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #90112	; 0x16000
   10e38:	ldr	pc, [ip, #504]!	; 0x1f8

00010e3c <mbsinit@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #90112	; 0x16000
   10e44:	ldr	pc, [ip, #496]!	; 0x1f0

00010e48 <dcgettext@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #90112	; 0x16000
   10e50:	ldr	pc, [ip, #488]!	; 0x1e8

00010e54 <realloc@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #90112	; 0x16000
   10e5c:	ldr	pc, [ip, #480]!	; 0x1e0

00010e60 <textdomain@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #90112	; 0x16000
   10e68:	ldr	pc, [ip, #472]!	; 0x1d8

00010e6c <rawmemchr@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #90112	; 0x16000
   10e74:	ldr	pc, [ip, #464]!	; 0x1d0

00010e78 <iswprint@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #90112	; 0x16000
   10e80:	ldr	pc, [ip, #456]!	; 0x1c8

00010e84 <readlink@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #90112	; 0x16000
   10e8c:	ldr	pc, [ip, #448]!	; 0x1c0

00010e90 <lseek64@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #90112	; 0x16000
   10e98:	ldr	pc, [ip, #440]!	; 0x1b8

00010e9c <__ctype_get_mb_cur_max@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #90112	; 0x16000
   10ea4:	ldr	pc, [ip, #432]!	; 0x1b0

00010ea8 <__fpending@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #90112	; 0x16000
   10eb0:	ldr	pc, [ip, #424]!	; 0x1a8

00010eb4 <ferror_unlocked@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #90112	; 0x16000
   10ebc:	ldr	pc, [ip, #416]!	; 0x1a0

00010ec0 <mbrtowc@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #90112	; 0x16000
   10ec8:	ldr	pc, [ip, #408]!	; 0x198

00010ecc <error@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #90112	; 0x16000
   10ed4:	ldr	pc, [ip, #400]!	; 0x190

00010ed8 <malloc@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #90112	; 0x16000
   10ee0:	ldr	pc, [ip, #392]!	; 0x188

00010ee4 <__libc_start_main@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #90112	; 0x16000
   10eec:	ldr	pc, [ip, #384]!	; 0x180

00010ef0 <__freading@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #90112	; 0x16000
   10ef8:	ldr	pc, [ip, #376]!	; 0x178

00010efc <__gmon_start__@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #90112	; 0x16000
   10f04:	ldr	pc, [ip, #368]!	; 0x170

00010f08 <getopt_long@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #90112	; 0x16000
   10f10:	ldr	pc, [ip, #360]!	; 0x168

00010f14 <__ctype_b_loc@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #90112	; 0x16000
   10f1c:	ldr	pc, [ip, #352]!	; 0x160

00010f20 <getcwd@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #90112	; 0x16000
   10f28:	ldr	pc, [ip, #344]!	; 0x158

00010f2c <exit@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #90112	; 0x16000
   10f34:	ldr	pc, [ip, #336]!	; 0x150

00010f38 <bcmp@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #90112	; 0x16000
   10f40:	ldr	pc, [ip, #328]!	; 0x148

00010f44 <strlen@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #90112	; 0x16000
   10f4c:	ldr	pc, [ip, #320]!	; 0x140

00010f50 <__errno_location@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #90112	; 0x16000
   10f58:	ldr	pc, [ip, #312]!	; 0x138

00010f5c <__cxa_atexit@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #90112	; 0x16000
   10f64:	ldr	pc, [ip, #304]!	; 0x130

00010f68 <memset@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #90112	; 0x16000
   10f70:	ldr	pc, [ip, #296]!	; 0x128

00010f74 <__printf_chk@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #90112	; 0x16000
   10f7c:	ldr	pc, [ip, #288]!	; 0x120

00010f80 <fileno@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #90112	; 0x16000
   10f88:	ldr	pc, [ip, #280]!	; 0x118

00010f8c <__fprintf_chk@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #90112	; 0x16000
   10f94:	ldr	pc, [ip, #272]!	; 0x110

00010f98 <fclose@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #90112	; 0x16000
   10fa0:	ldr	pc, [ip, #264]!	; 0x108

00010fa4 <fseeko64@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #90112	; 0x16000
   10fac:	ldr	pc, [ip, #256]!	; 0x100

00010fb0 <setlocale@plt>:
   10fb0:	add	ip, pc, #0, 12
   10fb4:	add	ip, ip, #90112	; 0x16000
   10fb8:	ldr	pc, [ip, #248]!	; 0xf8

00010fbc <strrchr@plt>:
   10fbc:	add	ip, pc, #0, 12
   10fc0:	add	ip, ip, #90112	; 0x16000
   10fc4:	ldr	pc, [ip, #240]!	; 0xf0

00010fc8 <nl_langinfo@plt>:
   10fc8:	add	ip, pc, #0, 12
   10fcc:	add	ip, ip, #90112	; 0x16000
   10fd0:	ldr	pc, [ip, #232]!	; 0xe8

00010fd4 <bindtextdomain@plt>:
   10fd4:	add	ip, pc, #0, 12
   10fd8:	add	ip, ip, #90112	; 0x16000
   10fdc:	ldr	pc, [ip, #224]!	; 0xe0

00010fe0 <__xstat64@plt>:
   10fe0:	add	ip, pc, #0, 12
   10fe4:	add	ip, ip, #90112	; 0x16000
   10fe8:	ldr	pc, [ip, #216]!	; 0xd8

00010fec <fputs@plt>:
   10fec:	add	ip, pc, #0, 12
   10ff0:	add	ip, ip, #90112	; 0x16000
   10ff4:	ldr	pc, [ip, #208]!	; 0xd0

00010ff8 <strncmp@plt>:
   10ff8:	add	ip, pc, #0, 12
   10ffc:	add	ip, ip, #90112	; 0x16000
   11000:	ldr	pc, [ip, #200]!	; 0xc8

00011004 <abort@plt>:
   11004:	add	ip, pc, #0, 12
   11008:	add	ip, ip, #90112	; 0x16000
   1100c:	ldr	pc, [ip, #192]!	; 0xc0

00011010 <putchar_unlocked@plt>:
   11010:	add	ip, pc, #0, 12
   11014:	add	ip, ip, #90112	; 0x16000
   11018:	ldr	pc, [ip, #184]!	; 0xb8

0001101c <strspn@plt>:
   1101c:	add	ip, pc, #0, 12
   11020:	add	ip, ip, #90112	; 0x16000
   11024:	ldr	pc, [ip, #176]!	; 0xb0

00011028 <__mempcpy_chk@plt>:
   11028:	add	ip, pc, #0, 12
   1102c:	add	ip, ip, #90112	; 0x16000
   11030:	ldr	pc, [ip, #168]!	; 0xa8

Disassembly of section .text:

00011038 <.text>:
   11038:	mov	fp, #0
   1103c:	mov	lr, #0
   11040:	pop	{r1}		; (ldr r1, [sp], #4)
   11044:	mov	r2, sp
   11048:	push	{r2}		; (str r2, [sp, #-4]!)
   1104c:	push	{r0}		; (str r0, [sp, #-4]!)
   11050:	ldr	ip, [pc, #16]	; 11068 <__mempcpy_chk@plt+0x40>
   11054:	push	{ip}		; (str ip, [sp, #-4]!)
   11058:	ldr	r0, [pc, #12]	; 1106c <__mempcpy_chk@plt+0x44>
   1105c:	ldr	r3, [pc, #12]	; 11070 <__mempcpy_chk@plt+0x48>
   11060:	bl	10ee4 <__libc_start_main@plt>
   11064:	bl	11004 <abort@plt>
   11068:	andeq	r5, r1, r0, lsr #27
   1106c:	andeq	r1, r1, r4, lsl #7
   11070:	andeq	r5, r1, r0, asr #26
   11074:	ldr	r3, [pc, #20]	; 11090 <__mempcpy_chk@plt+0x68>
   11078:	ldr	r2, [pc, #20]	; 11094 <__mempcpy_chk@plt+0x6c>
   1107c:	add	r3, pc, r3
   11080:	ldr	r2, [r3, r2]
   11084:	cmp	r2, #0
   11088:	bxeq	lr
   1108c:	b	10efc <__gmon_start__@plt>
   11090:	andeq	r5, r1, ip, ror pc
   11094:	ldrdeq	r0, [r0], -ip
   11098:	ldr	r0, [pc, #24]	; 110b8 <__mempcpy_chk@plt+0x90>
   1109c:	ldr	r3, [pc, #24]	; 110bc <__mempcpy_chk@plt+0x94>
   110a0:	cmp	r3, r0
   110a4:	bxeq	lr
   110a8:	ldr	r3, [pc, #16]	; 110c0 <__mempcpy_chk@plt+0x98>
   110ac:	cmp	r3, #0
   110b0:	bxeq	lr
   110b4:	bx	r3
   110b8:	andeq	r7, r2, r0, lsr r1
   110bc:	andeq	r7, r2, r0, lsr r1
   110c0:	andeq	r0, r0, r0
   110c4:	ldr	r0, [pc, #36]	; 110f0 <__mempcpy_chk@plt+0xc8>
   110c8:	ldr	r1, [pc, #36]	; 110f4 <__mempcpy_chk@plt+0xcc>
   110cc:	sub	r1, r1, r0
   110d0:	asr	r1, r1, #2
   110d4:	add	r1, r1, r1, lsr #31
   110d8:	asrs	r1, r1, #1
   110dc:	bxeq	lr
   110e0:	ldr	r3, [pc, #16]	; 110f8 <__mempcpy_chk@plt+0xd0>
   110e4:	cmp	r3, #0
   110e8:	bxeq	lr
   110ec:	bx	r3
   110f0:	andeq	r7, r2, r0, lsr r1
   110f4:	andeq	r7, r2, r0, lsr r1
   110f8:	andeq	r0, r0, r0
   110fc:	push	{r4, lr}
   11100:	ldr	r4, [pc, #24]	; 11120 <__mempcpy_chk@plt+0xf8>
   11104:	ldrb	r3, [r4]
   11108:	cmp	r3, #0
   1110c:	popne	{r4, pc}
   11110:	bl	11098 <__mempcpy_chk@plt+0x70>
   11114:	mov	r3, #1
   11118:	strb	r3, [r4]
   1111c:	pop	{r4, pc}
   11120:	andeq	r7, r2, r8, asr #2
   11124:	b	110c4 <__mempcpy_chk@plt+0x9c>
   11128:	push	{fp, lr}
   1112c:	mov	fp, sp
   11130:	sub	sp, sp, #56	; 0x38
   11134:	mov	r8, r0
   11138:	cmp	r0, #0
   1113c:	bne	11344 <__mempcpy_chk@plt+0x31c>
   11140:	movw	r1, #24067	; 0x5e03
   11144:	mov	r0, #0
   11148:	mov	r2, #5
   1114c:	movt	r1, #1
   11150:	bl	10e48 <dcgettext@plt>
   11154:	mov	r1, r0
   11158:	movw	r0, #29012	; 0x7154
   1115c:	movt	r0, #2
   11160:	ldr	r2, [r0]
   11164:	mov	r0, #1
   11168:	bl	10f74 <__printf_chk@plt>
   1116c:	movw	r1, #24098	; 0x5e22
   11170:	mov	r0, #0
   11174:	mov	r2, #5
   11178:	movt	r1, #1
   1117c:	bl	10e48 <dcgettext@plt>
   11180:	movw	r9, #28996	; 0x7144
   11184:	movt	r9, #2
   11188:	ldr	r1, [r9]
   1118c:	bl	10dd0 <fputs_unlocked@plt>
   11190:	movw	r1, #24154	; 0x5e5a
   11194:	mov	r0, #0
   11198:	mov	r2, #5
   1119c:	movt	r1, #1
   111a0:	bl	10e48 <dcgettext@plt>
   111a4:	ldr	r1, [r9]
   111a8:	bl	10dd0 <fputs_unlocked@plt>
   111ac:	movw	r1, #24591	; 0x600f
   111b0:	mov	r0, #0
   111b4:	mov	r2, #5
   111b8:	movt	r1, #1
   111bc:	bl	10e48 <dcgettext@plt>
   111c0:	ldr	r1, [r9]
   111c4:	bl	10dd0 <fputs_unlocked@plt>
   111c8:	movw	r1, #25112	; 0x6218
   111cc:	mov	r0, #0
   111d0:	mov	r2, #5
   111d4:	movt	r1, #1
   111d8:	bl	10e48 <dcgettext@plt>
   111dc:	ldr	r1, [r9]
   111e0:	bl	10dd0 <fputs_unlocked@plt>
   111e4:	movw	r1, #25157	; 0x6245
   111e8:	mov	r0, #0
   111ec:	mov	r2, #5
   111f0:	movt	r1, #1
   111f4:	bl	10e48 <dcgettext@plt>
   111f8:	ldr	r1, [r9]
   111fc:	bl	10dd0 <fputs_unlocked@plt>
   11200:	movw	r0, #25944	; 0x6558
   11204:	mov	r6, sp
   11208:	movt	r0, #1
   1120c:	mov	r1, r6
   11210:	ldm	r0!, {r2, r3, r4, r5}
   11214:	stmia	r1!, {r2, r3, r4, r5}
   11218:	ldm	r0!, {r2, r3, r4, r5, r7}
   1121c:	stmia	r1!, {r2, r3, r4, r5, r7}
   11220:	ldm	r0, {r2, r3, r4, r5, r7}
   11224:	stm	r1, {r2, r3, r4, r5, r7}
   11228:	movw	r1, #25345	; 0x6301
   1122c:	movw	r5, #25211	; 0x627b
   11230:	movt	r1, #1
   11234:	movt	r5, #1
   11238:	mov	r0, r5
   1123c:	bl	10de8 <strcmp@plt>
   11240:	cmp	r0, #0
   11244:	ldrne	r1, [r6, #8]!
   11248:	cmpne	r1, #0
   1124c:	bne	11238 <__mempcpy_chk@plt+0x210>
   11250:	movw	r1, #25440	; 0x6360
   11254:	ldr	r6, [r6, #4]
   11258:	mov	r0, #0
   1125c:	mov	r2, #5
   11260:	movt	r1, #1
   11264:	bl	10e48 <dcgettext@plt>
   11268:	movw	r2, #25253	; 0x62a5
   1126c:	movw	r3, #25463	; 0x6377
   11270:	mov	r1, r0
   11274:	mov	r0, #1
   11278:	movt	r2, #1
   1127c:	movt	r3, #1
   11280:	bl	10f74 <__printf_chk@plt>
   11284:	cmp	r6, #0
   11288:	mov	r0, #5
   1128c:	mov	r1, #0
   11290:	moveq	r6, r5
   11294:	bl	10fb0 <setlocale@plt>
   11298:	cmp	r0, #0
   1129c:	beq	112d4 <__mempcpy_chk@plt+0x2ac>
   112a0:	movw	r1, #25503	; 0x639f
   112a4:	mov	r2, #3
   112a8:	movt	r1, #1
   112ac:	bl	10ff8 <strncmp@plt>
   112b0:	cmp	r0, #0
   112b4:	beq	112d4 <__mempcpy_chk@plt+0x2ac>
   112b8:	movw	r1, #25507	; 0x63a3
   112bc:	mov	r0, #0
   112c0:	mov	r2, #5
   112c4:	movt	r1, #1
   112c8:	bl	10e48 <dcgettext@plt>
   112cc:	ldr	r1, [r9]
   112d0:	bl	10dd0 <fputs_unlocked@plt>
   112d4:	movw	r1, #25578	; 0x63ea
   112d8:	mov	r0, #0
   112dc:	mov	r2, #5
   112e0:	movt	r1, #1
   112e4:	bl	10e48 <dcgettext@plt>
   112e8:	movw	r2, #25463	; 0x6377
   112ec:	mov	r1, r0
   112f0:	mov	r0, #1
   112f4:	mov	r3, r5
   112f8:	movt	r2, #1
   112fc:	bl	10f74 <__printf_chk@plt>
   11300:	movw	r1, #25605	; 0x6405
   11304:	mov	r0, #0
   11308:	mov	r2, #5
   1130c:	movt	r1, #1
   11310:	bl	10e48 <dcgettext@plt>
   11314:	mov	r1, r0
   11318:	movw	r0, #25373	; 0x631d
   1131c:	movw	r3, #24153	; 0x5e59
   11320:	cmp	r6, r5
   11324:	mov	r2, r6
   11328:	movt	r0, #1
   1132c:	movt	r3, #1
   11330:	moveq	r3, r0
   11334:	mov	r0, #1
   11338:	bl	10f74 <__printf_chk@plt>
   1133c:	mov	r0, r8
   11340:	bl	10f2c <exit@plt>
   11344:	movw	r0, #28992	; 0x7140
   11348:	movw	r1, #24028	; 0x5ddc
   1134c:	mov	r2, #5
   11350:	movt	r0, #2
   11354:	movt	r1, #1
   11358:	ldr	r5, [r0]
   1135c:	mov	r0, #0
   11360:	bl	10e48 <dcgettext@plt>
   11364:	mov	r2, r0
   11368:	movw	r0, #29012	; 0x7154
   1136c:	mov	r1, #1
   11370:	movt	r0, #2
   11374:	ldr	r3, [r0]
   11378:	mov	r0, r5
   1137c:	bl	10f8c <__fprintf_chk@plt>
   11380:	b	1133c <__mempcpy_chk@plt+0x314>
   11384:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11388:	add	fp, sp, #28
   1138c:	sub	sp, sp, #20
   11390:	mov	r5, r0
   11394:	ldr	r0, [r1]
   11398:	mov	r8, r1
   1139c:	bl	130ec <__mempcpy_chk@plt+0x20c4>
   113a0:	movw	r1, #24153	; 0x5e59
   113a4:	mov	r0, #6
   113a8:	movt	r1, #1
   113ac:	bl	10fb0 <setlocale@plt>
   113b0:	movw	r6, #25257	; 0x62a9
   113b4:	movw	r1, #25220	; 0x6284
   113b8:	movt	r6, #1
   113bc:	movt	r1, #1
   113c0:	mov	r0, r6
   113c4:	bl	10fd4 <bindtextdomain@plt>
   113c8:	mov	r0, r6
   113cc:	bl	10e60 <textdomain@plt>
   113d0:	movw	r0, #7924	; 0x1ef4
   113d4:	movt	r0, #1
   113d8:	bl	15da4 <__mempcpy_chk@plt+0x4d7c>
   113dc:	movw	r9, #25244	; 0x629c
   113e0:	movw	r7, #25768	; 0x64a8
   113e4:	mov	r0, #10
   113e8:	mvn	r6, #0
   113ec:	mov	r4, #0
   113f0:	mov	sl, #1
   113f4:	str	r0, [sp, #12]
   113f8:	movt	r9, #1
   113fc:	movt	r7, #1
   11400:	mov	r0, r5
   11404:	mov	r1, r8
   11408:	mov	r2, r9
   1140c:	mov	r3, r7
   11410:	str	r4, [sp]
   11414:	bl	10f08 <getopt_long@plt>
   11418:	cmp	r0, #100	; 0x64
   1141c:	ble	114d4 <__mempcpy_chk@plt+0x4ac>
   11420:	sub	r1, r0, #101	; 0x65
   11424:	cmp	r1, #14
   11428:	bhi	11480 <__mempcpy_chk@plt+0x458>
   1142c:	add	r0, pc, #0
   11430:	ldr	pc, [r0, r1, lsl #2]
   11434:	andeq	r1, r1, ip, lsr #9
   11438:			; <UNDEFINED> instruction: 0x000114b4
   1143c:			; <UNDEFINED> instruction: 0x000116b4
   11440:			; <UNDEFINED> instruction: 0x000116b4
   11444:			; <UNDEFINED> instruction: 0x000116b4
   11448:			; <UNDEFINED> instruction: 0x000116b4
   1144c:			; <UNDEFINED> instruction: 0x000116b4
   11450:			; <UNDEFINED> instruction: 0x000116b4
   11454:			; <UNDEFINED> instruction: 0x000114bc
   11458:	andeq	r1, r1, r4, asr #9
   1145c:			; <UNDEFINED> instruction: 0x000116b4
   11460:			; <UNDEFINED> instruction: 0x000116b4
   11464:	andeq	r1, r1, r0, ror r4
   11468:			; <UNDEFINED> instruction: 0x000116b4
   1146c:	andeq	r1, r1, r0, ror r4
   11470:	movw	r0, #29002	; 0x714a
   11474:	movt	r0, #2
   11478:	strb	r4, [r0]
   1147c:	b	11400 <__mempcpy_chk@plt+0x3d8>
   11480:	cmp	r0, #118	; 0x76
   11484:	bne	11498 <__mempcpy_chk@plt+0x470>
   11488:	movw	r0, #29002	; 0x714a
   1148c:	movt	r0, #2
   11490:	strb	sl, [r0]
   11494:	b	11400 <__mempcpy_chk@plt+0x3d8>
   11498:	cmp	r0, #122	; 0x7a
   1149c:	bne	116b4 <__mempcpy_chk@plt+0x68c>
   114a0:	mov	r0, #0
   114a4:	str	r0, [sp, #12]
   114a8:	b	11400 <__mempcpy_chk@plt+0x3d8>
   114ac:	mov	r6, #0
   114b0:	b	11400 <__mempcpy_chk@plt+0x3d8>
   114b4:	mov	r6, #1
   114b8:	b	11400 <__mempcpy_chk@plt+0x3d8>
   114bc:	mov	r6, #2
   114c0:	b	11400 <__mempcpy_chk@plt+0x3d8>
   114c4:	movw	r0, #29001	; 0x7149
   114c8:	movt	r0, #2
   114cc:	strb	sl, [r0]
   114d0:	b	11400 <__mempcpy_chk@plt+0x3d8>
   114d4:	cmn	r0, #1
   114d8:	bne	11630 <__mempcpy_chk@plt+0x608>
   114dc:	movw	sl, #28984	; 0x7138
   114e0:	movw	r4, #29001	; 0x7149
   114e4:	movt	sl, #2
   114e8:	movt	r4, #2
   114ec:	ldr	r0, [sl]
   114f0:	cmp	r0, r5
   114f4:	bge	11690 <__mempcpy_chk@plt+0x668>
   114f8:	sub	r1, r5, r0
   114fc:	cmp	r1, #2
   11500:	blt	11540 <__mempcpy_chk@plt+0x518>
   11504:	ldrb	r1, [r4]
   11508:	cmp	r1, #1
   1150c:	bne	11538 <__mempcpy_chk@plt+0x510>
   11510:	movw	r1, #25299	; 0x62d3
   11514:	mov	r0, #0
   11518:	mov	r2, #5
   1151c:	movt	r1, #1
   11520:	bl	10e48 <dcgettext@plt>
   11524:	mov	r2, r0
   11528:	mov	r0, #0
   1152c:	mov	r1, #0
   11530:	bl	10ecc <error@plt>
   11534:	ldr	r0, [sl]
   11538:	mov	r1, #0
   1153c:	strb	r1, [r4]
   11540:	mov	r1, #0
   11544:	cmp	r0, r5
   11548:	str	r1, [sp, #16]
   1154c:	bge	11624 <__mempcpy_chk@plt+0x5fc>
   11550:	mov	r1, #0
   11554:	str	r1, [sp, #16]
   11558:	ldr	r7, [r8, r0, lsl #2]
   1155c:	cmn	r6, #1
   11560:	mov	r0, r7
   11564:	beq	11574 <__mempcpy_chk@plt+0x54c>
   11568:	mov	r1, r6
   1156c:	bl	117f8 <__mempcpy_chk@plt+0x7d0>
   11570:	b	1157c <__mempcpy_chk@plt+0x554>
   11574:	mov	r1, #63	; 0x3f
   11578:	bl	116bc <__mempcpy_chk@plt+0x694>
   1157c:	mov	r9, r0
   11580:	cmp	r0, #0
   11584:	beq	115bc <__mempcpy_chk@plt+0x594>
   11588:	movw	r0, #28996	; 0x7144
   1158c:	movt	r0, #2
   11590:	ldr	r1, [r0]
   11594:	mov	r0, r9
   11598:	bl	10dd0 <fputs_unlocked@plt>
   1159c:	ldrb	r0, [r4]
   115a0:	cmp	r0, #0
   115a4:	bne	115b0 <__mempcpy_chk@plt+0x588>
   115a8:	ldr	r0, [sp, #12]
   115ac:	bl	11010 <putchar_unlocked@plt>
   115b0:	mov	r0, r9
   115b4:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   115b8:	b	11610 <__mempcpy_chk@plt+0x5e8>
   115bc:	movw	r0, #29002	; 0x714a
   115c0:	mov	r1, #1
   115c4:	movt	r0, #2
   115c8:	str	r1, [sp, #16]
   115cc:	ldrb	r0, [r0]
   115d0:	cmp	r0, #1
   115d4:	bne	11610 <__mempcpy_chk@plt+0x5e8>
   115d8:	bl	10f50 <__errno_location@plt>
   115dc:	ldr	r4, [r0]
   115e0:	mov	r0, #0
   115e4:	mov	r1, #3
   115e8:	mov	r2, r7
   115ec:	bl	14944 <__mempcpy_chk@plt+0x391c>
   115f0:	movw	r2, #26033	; 0x65b1
   115f4:	mov	r3, r0
   115f8:	mov	r1, r4
   115fc:	movw	r4, #29001	; 0x7149
   11600:	mov	r0, #0
   11604:	movt	r2, #1
   11608:	movt	r4, #2
   1160c:	bl	10ecc <error@plt>
   11610:	ldr	r0, [sl]
   11614:	add	r0, r0, #1
   11618:	cmp	r0, r5
   1161c:	str	r0, [sl]
   11620:	blt	11558 <__mempcpy_chk@plt+0x530>
   11624:	ldr	r0, [sp, #16]
   11628:	sub	sp, fp, #28
   1162c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11630:	cmn	r0, #3
   11634:	bne	11680 <__mempcpy_chk@plt+0x658>
   11638:	movw	r0, #28904	; 0x70e8
   1163c:	movw	r2, #25267	; 0x62b3
   11640:	mov	r1, #0
   11644:	movt	r0, #2
   11648:	movt	r2, #1
   1164c:	str	r1, [sp, #4]
   11650:	movw	r1, #25211	; 0x627b
   11654:	movt	r1, #1
   11658:	ldr	r3, [r0]
   1165c:	movw	r0, #28996	; 0x7144
   11660:	str	r2, [sp]
   11664:	movw	r2, #25253	; 0x62a5
   11668:	movt	r0, #2
   1166c:	movt	r2, #1
   11670:	ldr	r0, [r0]
   11674:	bl	15150 <__mempcpy_chk@plt+0x4128>
   11678:	mov	r0, #0
   1167c:	bl	10f2c <exit@plt>
   11680:	cmn	r0, #2
   11684:	bne	116b4 <__mempcpy_chk@plt+0x68c>
   11688:	mov	r0, #0
   1168c:	bl	11128 <__mempcpy_chk@plt+0x100>
   11690:	movw	r1, #25283	; 0x62c3
   11694:	mov	r0, #0
   11698:	mov	r2, #5
   1169c:	movt	r1, #1
   116a0:	bl	10e48 <dcgettext@plt>
   116a4:	mov	r2, r0
   116a8:	mov	r0, #0
   116ac:	mov	r1, #0
   116b0:	bl	10ecc <error@plt>
   116b4:	mov	r0, #1
   116b8:	bl	11128 <__mempcpy_chk@plt+0x100>
   116bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   116c0:	add	fp, sp, #24
   116c4:	sub	sp, sp, #128	; 0x80
   116c8:	mov	r4, r1
   116cc:	mov	r8, r0
   116d0:	cmp	r1, #0
   116d4:	beq	116e8 <__mempcpy_chk@plt+0x6c0>
   116d8:	cmp	r4, #1024	; 0x400
   116dc:	movw	r6, #1025	; 0x401
   116e0:	addls	r6, r4, #1
   116e4:	b	116ec <__mempcpy_chk@plt+0x6c4>
   116e8:	mov	r6, #128	; 0x80
   116ec:	mov	r9, sp
   116f0:	cmp	r4, #0
   116f4:	bne	11708 <__mempcpy_chk@plt+0x6e0>
   116f8:	mov	r5, #0
   116fc:	cmp	r6, #128	; 0x80
   11700:	mov	r7, r9
   11704:	beq	11720 <__mempcpy_chk@plt+0x6f8>
   11708:	mov	r0, r6
   1170c:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   11710:	mov	r7, r0
   11714:	cmp	r0, #0
   11718:	mov	r5, r0
   1171c:	beq	117b4 <__mempcpy_chk@plt+0x78c>
   11720:	mov	r0, r8
   11724:	mov	r1, r7
   11728:	mov	r2, r6
   1172c:	bl	10e84 <readlink@plt>
   11730:	cmn	r0, #1
   11734:	ble	1176c <__mempcpy_chk@plt+0x744>
   11738:	cmp	r0, r6
   1173c:	bcc	1177c <__mempcpy_chk@plt+0x754>
   11740:	mov	r0, r5
   11744:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   11748:	cmn	r6, #-1073741823	; 0xc0000001
   1174c:	bhi	11758 <__mempcpy_chk@plt+0x730>
   11750:	lsl	r0, r6, #1
   11754:	b	11764 <__mempcpy_chk@plt+0x73c>
   11758:	mvn	r0, #-2147483648	; 0x80000000
   1175c:	cmn	r6, #-2147483647	; 0x80000001
   11760:	bcs	117b4 <__mempcpy_chk@plt+0x78c>
   11764:	mov	r6, r0
   11768:	b	116f0 <__mempcpy_chk@plt+0x6c8>
   1176c:	mov	r0, r5
   11770:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   11774:	mov	r4, #0
   11778:	b	117ec <__mempcpy_chk@plt+0x7c4>
   1177c:	mov	r4, #0
   11780:	add	r8, r0, #1
   11784:	cmp	r5, #0
   11788:	strb	r4, [r7, r0]
   1178c:	beq	117c8 <__mempcpy_chk@plt+0x7a0>
   11790:	cmp	r8, r6
   11794:	bcs	117e8 <__mempcpy_chk@plt+0x7c0>
   11798:	mov	r0, r5
   1179c:	mov	r1, r8
   117a0:	bl	1574c <__mempcpy_chk@plt+0x4724>
   117a4:	cmp	r0, #0
   117a8:	mov	r4, r0
   117ac:	moveq	r4, r5
   117b0:	b	117ec <__mempcpy_chk@plt+0x7c4>
   117b4:	bl	10f50 <__errno_location@plt>
   117b8:	mov	r1, #12
   117bc:	mov	r4, #0
   117c0:	str	r1, [r0]
   117c4:	b	117ec <__mempcpy_chk@plt+0x7c4>
   117c8:	mov	r0, r8
   117cc:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   117d0:	cmp	r0, #0
   117d4:	beq	117ec <__mempcpy_chk@plt+0x7c4>
   117d8:	mov	r1, r7
   117dc:	mov	r2, r8
   117e0:	mov	r5, r0
   117e4:	bl	10e30 <memcpy@plt>
   117e8:	mov	r4, r5
   117ec:	mov	r0, r4
   117f0:	sub	sp, fp, #24
   117f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   117f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   117fc:	add	fp, sp, #28
   11800:	sub	sp, sp, #180	; 0xb4
   11804:	sub	sp, sp, #3072	; 0xc00
   11808:	and	r7, r1, #3
   1180c:	mov	r8, r0
   11810:	sub	r0, r7, #1
   11814:	tst	r7, r0
   11818:	bne	118a4 <__mempcpy_chk@plt+0x87c>
   1181c:	cmp	r8, #0
   11820:	beq	118a4 <__mempcpy_chk@plt+0x87c>
   11824:	ldrb	r0, [r8]
   11828:	cmp	r0, #0
   1182c:	beq	118c0 <__mempcpy_chk@plt+0x898>
   11830:	mov	r4, r1
   11834:	mov	r1, #1024	; 0x400
   11838:	sub	lr, fp, #1024	; 0x400
   1183c:	cmp	r0, #47	; 0x2f
   11840:	str	r1, [fp, #-1060]	; 0xfffffbdc
   11844:	str	r1, [sp, #52]	; 0x34
   11848:	str	r1, [sp, #1188]	; 0x4a4
   1184c:	add	r1, sp, #1184	; 0x4a0
   11850:	sub	r2, lr, #40	; 0x28
   11854:	add	r1, r1, #8
   11858:	add	r2, r2, #8
   1185c:	str	r1, [sp, #16]
   11860:	str	r1, [sp, #1184]	; 0x4a0
   11864:	add	r1, sp, #48	; 0x30
   11868:	str	r2, [sp, #12]
   1186c:	str	r2, [fp, #-1064]	; 0xfffffbd8
   11870:	add	r5, r1, #8
   11874:	mov	r0, r5
   11878:	str	r5, [sp, #48]	; 0x30
   1187c:	str	r5, [sp, #8]
   11880:	bne	118cc <__mempcpy_chk@plt+0x8a4>
   11884:	mov	r1, r8
   11888:	mov	r2, #0
   1188c:	mov	r3, #1024	; 0x400
   11890:	bl	11028 <__mempcpy_chk@plt>
   11894:	mov	r6, r0
   11898:	mov	r0, #47	; 0x2f
   1189c:	strb	r0, [r6], #1
   118a0:	b	118ec <__mempcpy_chk@plt+0x8c4>
   118a4:	bl	10f50 <__errno_location@plt>
   118a8:	mov	r1, #22
   118ac:	mov	r4, #0
   118b0:	str	r1, [r0]
   118b4:	mov	r0, r4
   118b8:	sub	sp, fp, #28
   118bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118c0:	bl	10f50 <__errno_location@plt>
   118c4:	mov	r1, #2
   118c8:	b	118ac <__mempcpy_chk@plt+0x884>
   118cc:	mov	r1, #1024	; 0x400
   118d0:	bl	10f20 <getcwd@plt>
   118d4:	cmp	r0, #0
   118d8:	beq	11df8 <__mempcpy_chk@plt+0xdd0>
   118dc:	mov	r0, r5
   118e0:	mov	r1, #0
   118e4:	bl	10e6c <rawmemchr@plt>
   118e8:	mov	r6, r0
   118ec:	ldrb	r0, [r8]
   118f0:	cmp	r0, #0
   118f4:	beq	11dbc <__mempcpy_chk@plt+0xd94>
   118f8:	and	r1, r4, #4
   118fc:	add	r9, sp, #48	; 0x30
   11900:	str	r7, [sp, #32]
   11904:	str	r1, [sp, #40]	; 0x28
   11908:	mov	r1, #0
   1190c:	str	r1, [sp, #24]
   11910:	mov	r1, #0
   11914:	str	r1, [sp, #36]	; 0x24
   11918:	mov	r1, #0
   1191c:	str	r1, [sp, #20]
   11920:	uxtb	r1, r0
   11924:	cmp	r1, #47	; 0x2f
   11928:	bne	11938 <__mempcpy_chk@plt+0x910>
   1192c:	ldrb	r0, [r8, #1]!
   11930:	cmp	r0, #47	; 0x2f
   11934:	beq	1192c <__mempcpy_chk@plt+0x904>
   11938:	mov	r1, r0
   1193c:	mov	sl, r8
   11940:	b	11948 <__mempcpy_chk@plt+0x920>
   11944:	ldrb	r1, [sl, #1]!
   11948:	uxtb	r1, r1
   1194c:	cmp	r1, #0
   11950:	cmpne	r1, #47	; 0x2f
   11954:	bne	11944 <__mempcpy_chk@plt+0x91c>
   11958:	sub	r2, sl, r8
   1195c:	cmp	r2, #1
   11960:	beq	11978 <__mempcpy_chk@plt+0x950>
   11964:	cmp	r2, #2
   11968:	beq	11988 <__mempcpy_chk@plt+0x960>
   1196c:	cmp	r2, #0
   11970:	bne	119d0 <__mempcpy_chk@plt+0x9a8>
   11974:	b	11dc4 <__mempcpy_chk@plt+0xd9c>
   11978:	uxtb	r0, r0
   1197c:	cmp	r0, #46	; 0x2e
   11980:	bne	119d0 <__mempcpy_chk@plt+0x9a8>
   11984:	b	11ac4 <__mempcpy_chk@plt+0xa9c>
   11988:	uxtb	r0, r0
   1198c:	cmp	r0, #46	; 0x2e
   11990:	bne	119d0 <__mempcpy_chk@plt+0x9a8>
   11994:	ldrb	r0, [r8, #1]
   11998:	cmp	r0, #46	; 0x2e
   1199c:	bne	119d0 <__mempcpy_chk@plt+0x9a8>
   119a0:	add	r0, r5, #1
   119a4:	cmp	r6, r0
   119a8:	bls	11ac4 <__mempcpy_chk@plt+0xa9c>
   119ac:	sub	r0, r6, #1
   119b0:	mov	r6, r0
   119b4:	cmp	r0, r5
   119b8:	bls	11ac4 <__mempcpy_chk@plt+0xa9c>
   119bc:	mov	r0, r6
   119c0:	ldrb	r1, [r0, #-1]!
   119c4:	cmp	r1, #47	; 0x2f
   119c8:	bne	119b0 <__mempcpy_chk@plt+0x988>
   119cc:	b	11ac4 <__mempcpy_chk@plt+0xa9c>
   119d0:	ldrb	r0, [r6, #-1]
   119d4:	add	r4, r2, #2
   119d8:	str	r2, [sp, #44]	; 0x2c
   119dc:	cmp	r0, #47	; 0x2f
   119e0:	movne	r0, #47	; 0x2f
   119e4:	strbne	r0, [r6], #1
   119e8:	ldr	r0, [sp, #52]	; 0x34
   119ec:	add	r0, r5, r0
   119f0:	sub	r0, r0, r6
   119f4:	cmp	r0, r4
   119f8:	bcs	11a30 <__mempcpy_chk@plt+0xa08>
   119fc:	mov	r0, r9
   11a00:	bl	14cf4 <__mempcpy_chk@plt+0x3ccc>
   11a04:	cmp	r0, #0
   11a08:	beq	11ebc <__mempcpy_chk@plt+0xe94>
   11a0c:	sub	r0, r6, r5
   11a10:	ldr	r5, [sp, #48]	; 0x30
   11a14:	ldr	r1, [sp, #52]	; 0x34
   11a18:	add	r6, r5, r0
   11a1c:	add	r0, r5, r1
   11a20:	sub	r0, r0, r6
   11a24:	cmp	r0, r4
   11a28:	bcc	119fc <__mempcpy_chk@plt+0x9d4>
   11a2c:	ldr	r2, [sp, #44]	; 0x2c
   11a30:	mov	r0, r6
   11a34:	mov	r1, r8
   11a38:	mvn	r3, #0
   11a3c:	bl	11028 <__mempcpy_chk@plt>
   11a40:	mov	r6, r0
   11a44:	mov	r0, #0
   11a48:	strb	r0, [r6]
   11a4c:	ldr	r0, [sp, #40]	; 0x28
   11a50:	cmp	r0, #0
   11a54:	bne	11ab8 <__mempcpy_chk@plt+0xa90>
   11a58:	ldr	r0, [sp, #1188]	; 0x4a4
   11a5c:	ldr	r7, [sp, #1184]	; 0x4a0
   11a60:	sub	r9, r0, #1
   11a64:	mov	r0, r5
   11a68:	mov	r1, r7
   11a6c:	mov	r2, r9
   11a70:	bl	10e84 <readlink@plt>
   11a74:	cmp	r0, r9
   11a78:	blt	11a90 <__mempcpy_chk@plt+0xa68>
   11a7c:	add	r0, sp, #1184	; 0x4a0
   11a80:	bl	14c88 <__mempcpy_chk@plt+0x3c60>
   11a84:	cmp	r0, #0
   11a88:	bne	11a58 <__mempcpy_chk@plt+0xa30>
   11a8c:	b	11ebc <__mempcpy_chk@plt+0xe94>
   11a90:	mov	r4, r0
   11a94:	cmp	r0, #0
   11a98:	add	r9, sp, #48	; 0x30
   11a9c:	bmi	11ab8 <__mempcpy_chk@plt+0xa90>
   11aa0:	ldr	r0, [sp, #24]
   11aa4:	cmp	r0, #19
   11aa8:	bgt	11b3c <__mempcpy_chk@plt+0xb14>
   11aac:	add	r0, r0, #1
   11ab0:	str	r0, [sp, #24]
   11ab4:	b	11ca4 <__mempcpy_chk@plt+0xc7c>
   11ab8:	ldr	r7, [sp, #32]
   11abc:	cmp	r7, #2
   11ac0:	bne	11ad8 <__mempcpy_chk@plt+0xab0>
   11ac4:	mov	r8, sl
   11ac8:	ldrb	r0, [r8]
   11acc:	cmp	r0, #0
   11ad0:	bne	11920 <__mempcpy_chk@plt+0x8f8>
   11ad4:	b	11dc4 <__mempcpy_chk@plt+0xd9c>
   11ad8:	ldrb	r0, [sl]
   11adc:	cmp	r0, #47	; 0x2f
   11ae0:	bne	11c0c <__mempcpy_chk@plt+0xbe4>
   11ae4:	mov	r2, sl
   11ae8:	mov	r1, r2
   11aec:	ldrb	r3, [r2, #1]!
   11af0:	cmp	r3, #47	; 0x2f
   11af4:	beq	11ae8 <__mempcpy_chk@plt+0xac0>
   11af8:	cmp	r3, #46	; 0x2e
   11afc:	bne	11c04 <__mempcpy_chk@plt+0xbdc>
   11b00:	add	r2, r1, #2
   11b04:	ldrb	r3, [r2]
   11b08:	cmp	r3, #47	; 0x2f
   11b0c:	beq	11ae8 <__mempcpy_chk@plt+0xac0>
   11b10:	cmp	r3, #0
   11b14:	beq	11b30 <__mempcpy_chk@plt+0xb08>
   11b18:	cmp	r3, #46	; 0x2e
   11b1c:	bne	11c0c <__mempcpy_chk@plt+0xbe4>
   11b20:	ldrb	r1, [r1, #3]
   11b24:	cmp	r1, #47	; 0x2f
   11b28:	cmpne	r1, #0
   11b2c:	bne	11c0c <__mempcpy_chk@plt+0xbe4>
   11b30:	mov	r0, #47	; 0x2f
   11b34:	strh	r0, [r6]
   11b38:	b	11c20 <__mempcpy_chk@plt+0xbf8>
   11b3c:	ldrb	r0, [r8]
   11b40:	add	lr, sp, #1024	; 0x400
   11b44:	add	r2, lr, #56	; 0x38
   11b48:	cmp	r0, #0
   11b4c:	beq	11ca4 <__mempcpy_chk@plt+0xc7c>
   11b50:	ldr	r9, [sp, #44]	; 0x2c
   11b54:	mov	r0, #0
   11b58:	movw	r1, #26015	; 0x659f
   11b5c:	movt	r1, #1
   11b60:	strb	r0, [r6, -r9]
   11b64:	ldrb	r0, [r5]
   11b68:	cmp	r0, #0
   11b6c:	mov	r0, r5
   11b70:	moveq	r0, r1
   11b74:	mov	r1, r2
   11b78:	bl	15dbc <__mempcpy_chk@plt+0x4d94>
   11b7c:	cmp	r0, #0
   11b80:	bne	11ecc <__mempcpy_chk@plt+0xea4>
   11b84:	rsb	r0, r9, #0
   11b88:	ldr	r9, [sp, #20]
   11b8c:	ldrb	r1, [r8]
   11b90:	cmp	r9, #0
   11b94:	strb	r1, [r6, r0]
   11b98:	bne	11bd0 <__mempcpy_chk@plt+0xba8>
   11b9c:	movw	r0, #12492	; 0x30cc
   11ba0:	movw	r2, #12332	; 0x302c
   11ba4:	movw	r3, #12388	; 0x3064
   11ba8:	mov	r1, #0
   11bac:	movt	r0, #1
   11bb0:	movt	r2, #1
   11bb4:	movt	r3, #1
   11bb8:	str	r0, [sp]
   11bbc:	mov	r0, #7
   11bc0:	bl	1255c <__mempcpy_chk@plt+0x1534>
   11bc4:	mov	r9, r0
   11bc8:	cmp	r0, #0
   11bcc:	beq	11ebc <__mempcpy_chk@plt+0xe94>
   11bd0:	add	lr, sp, #1024	; 0x400
   11bd4:	mov	r0, r9
   11bd8:	mov	r1, r8
   11bdc:	add	r2, lr, #56	; 0x38
   11be0:	bl	12058 <__mempcpy_chk@plt+0x1030>
   11be4:	cmp	r0, #0
   11be8:	str	r9, [sp, #20]
   11bec:	beq	11c90 <__mempcpy_chk@plt+0xc68>
   11bf0:	ldr	r7, [sp, #32]
   11bf4:	cmp	r7, #2
   11bf8:	bne	11ec0 <__mempcpy_chk@plt+0xe98>
   11bfc:	mov	r8, sl
   11c00:	b	11d78 <__mempcpy_chk@plt+0xd50>
   11c04:	cmp	r3, #0
   11c08:	beq	11b30 <__mempcpy_chk@plt+0xb08>
   11c0c:	ldr	r1, [sp, #40]	; 0x28
   11c10:	cmp	r1, #0
   11c14:	beq	11c40 <__mempcpy_chk@plt+0xc18>
   11c18:	cmp	r0, #0
   11c1c:	bne	11ac4 <__mempcpy_chk@plt+0xa9c>
   11c20:	mvn	r0, #99	; 0x63
   11c24:	mov	r1, r5
   11c28:	mov	r2, #0
   11c2c:	mov	r3, #512	; 0x200
   11c30:	bl	10e18 <faccessat@plt>
   11c34:	cmp	r0, #0
   11c38:	bne	11c50 <__mempcpy_chk@plt+0xc28>
   11c3c:	b	11ac4 <__mempcpy_chk@plt+0xa9c>
   11c40:	bl	10f50 <__errno_location@plt>
   11c44:	ldr	r0, [r0]
   11c48:	cmp	r0, #22
   11c4c:	beq	11ac4 <__mempcpy_chk@plt+0xa9c>
   11c50:	mov	r4, #1
   11c54:	cmp	r7, #1
   11c58:	bne	11de4 <__mempcpy_chk@plt+0xdbc>
   11c5c:	bl	10f50 <__errno_location@plt>
   11c60:	ldr	r0, [r0]
   11c64:	cmp	r0, #2
   11c68:	bne	11de4 <__mempcpy_chk@plt+0xdbc>
   11c6c:	movw	r1, #27151	; 0x6a0f
   11c70:	mov	r0, sl
   11c74:	movt	r1, #1
   11c78:	bl	1101c <strspn@plt>
   11c7c:	ldrb	r0, [sl, r0]
   11c80:	mov	r8, sl
   11c84:	cmp	r0, #0
   11c88:	beq	11ac8 <__mempcpy_chk@plt+0xaa0>
   11c8c:	b	11de4 <__mempcpy_chk@plt+0xdbc>
   11c90:	add	lr, sp, #1024	; 0x400
   11c94:	mov	r0, r9
   11c98:	mov	r1, r8
   11c9c:	add	r2, lr, #56	; 0x38
   11ca0:	bl	11fdc <__mempcpy_chk@plt+0xfb4>
   11ca4:	mov	r0, #0
   11ca8:	strb	r0, [r7, r4]
   11cac:	ldr	r0, [sp, #36]	; 0x24
   11cb0:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11cb4:	tst	r0, #1
   11cb8:	ldr	r0, [sp, #28]
   11cbc:	subne	r0, sl, r8
   11cc0:	str	r0, [sp, #28]
   11cc4:	mov	r0, sl
   11cc8:	bl	10f44 <strlen@plt>
   11ccc:	mvn	r1, r4
   11cd0:	cmp	r0, r1
   11cd4:	bhi	11ebc <__mempcpy_chk@plt+0xe94>
   11cd8:	str	r0, [sp, #44]	; 0x2c
   11cdc:	add	r9, r0, r4
   11ce0:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11ce4:	cmp	r0, r9
   11ce8:	bhi	11d10 <__mempcpy_chk@plt+0xce8>
   11cec:	sub	lr, fp, #1024	; 0x400
   11cf0:	sub	r0, lr, #40	; 0x28
   11cf4:	bl	14cf4 <__mempcpy_chk@plt+0x3ccc>
   11cf8:	cmp	r0, #0
   11cfc:	beq	11ebc <__mempcpy_chk@plt+0xe94>
   11d00:	ldr	r0, [fp, #-1060]	; 0xfffffbdc
   11d04:	cmp	r0, r9
   11d08:	bls	11cec <__mempcpy_chk@plt+0xcc4>
   11d0c:	ldr	r8, [fp, #-1064]	; 0xfffffbd8
   11d10:	ldr	r0, [sp, #36]	; 0x24
   11d14:	ldr	r1, [sp, #44]	; 0x2c
   11d18:	tst	r0, #1
   11d1c:	ldr	r0, [sp, #28]
   11d20:	add	r2, r1, #1
   11d24:	addne	sl, r8, r0
   11d28:	add	r0, r8, r4
   11d2c:	mov	r1, sl
   11d30:	bl	10e00 <memmove@plt>
   11d34:	mov	r0, r8
   11d38:	mov	r1, r7
   11d3c:	mov	r2, r4
   11d40:	bl	10e30 <memcpy@plt>
   11d44:	ldrb	r0, [r7]
   11d48:	cmp	r0, #47	; 0x2f
   11d4c:	bne	11d80 <__mempcpy_chk@plt+0xd58>
   11d50:	mov	r0, r5
   11d54:	mov	r1, r7
   11d58:	mov	r2, #0
   11d5c:	mvn	r3, #0
   11d60:	bl	11028 <__mempcpy_chk@plt>
   11d64:	mov	r6, r0
   11d68:	mov	r0, #47	; 0x2f
   11d6c:	strb	r0, [r6], #1
   11d70:	mov	r0, #1
   11d74:	str	r0, [sp, #36]	; 0x24
   11d78:	add	r9, sp, #48	; 0x30
   11d7c:	b	11ac8 <__mempcpy_chk@plt+0xaa0>
   11d80:	add	r0, r5, #1
   11d84:	mov	r1, #1
   11d88:	add	r9, sp, #48	; 0x30
   11d8c:	cmp	r6, r0
   11d90:	str	r1, [sp, #36]	; 0x24
   11d94:	bls	11ac8 <__mempcpy_chk@plt+0xaa0>
   11d98:	sub	r0, r6, #1
   11d9c:	mov	r6, r0
   11da0:	cmp	r0, r5
   11da4:	bls	11ac8 <__mempcpy_chk@plt+0xaa0>
   11da8:	mov	r0, r6
   11dac:	ldrb	r1, [r0, #-1]!
   11db0:	cmp	r1, #47	; 0x2f
   11db4:	bne	11d9c <__mempcpy_chk@plt+0xd74>
   11db8:	b	11ac8 <__mempcpy_chk@plt+0xaa0>
   11dbc:	mov	r0, #0
   11dc0:	str	r0, [sp, #20]
   11dc4:	add	r0, r5, #1
   11dc8:	cmp	r6, r0
   11dcc:	bls	11de0 <__mempcpy_chk@plt+0xdb8>
   11dd0:	mov	r0, r6
   11dd4:	ldrb	r1, [r0, #-1]!
   11dd8:	cmp	r1, #47	; 0x2f
   11ddc:	moveq	r6, r0
   11de0:	mov	r4, #0
   11de4:	ldr	r0, [sp, #20]
   11de8:	cmp	r0, #0
   11dec:	beq	11e50 <__mempcpy_chk@plt+0xe28>
   11df0:	bl	12888 <__mempcpy_chk@plt+0x1860>
   11df4:	b	11e50 <__mempcpy_chk@plt+0xe28>
   11df8:	bl	10f50 <__errno_location@plt>
   11dfc:	ldr	r5, [sp, #8]
   11e00:	mov	r6, r0
   11e04:	add	r9, sp, #48	; 0x30
   11e08:	ldr	r0, [r6]
   11e0c:	cmp	r0, #34	; 0x22
   11e10:	bne	11e40 <__mempcpy_chk@plt+0xe18>
   11e14:	mov	r0, r9
   11e18:	bl	14c88 <__mempcpy_chk@plt+0x3c60>
   11e1c:	cmp	r0, #0
   11e20:	beq	11ebc <__mempcpy_chk@plt+0xe94>
   11e24:	ldr	r5, [sp, #48]	; 0x30
   11e28:	ldr	r1, [sp, #52]	; 0x34
   11e2c:	mov	r0, r5
   11e30:	bl	10f20 <getcwd@plt>
   11e34:	cmp	r0, #0
   11e38:	beq	11e08 <__mempcpy_chk@plt+0xde0>
   11e3c:	b	118dc <__mempcpy_chk@plt+0x8b4>
   11e40:	cmp	r0, #12
   11e44:	beq	11ebc <__mempcpy_chk@plt+0xe94>
   11e48:	mov	r4, #1
   11e4c:	mov	r6, r5
   11e50:	ldr	r1, [sp, #12]
   11e54:	ldr	r0, [fp, #-1064]	; 0xfffffbd8
   11e58:	ldr	r7, [sp, #16]
   11e5c:	cmp	r0, r1
   11e60:	beq	11e68 <__mempcpy_chk@plt+0xe40>
   11e64:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   11e68:	ldr	r0, [sp, #1184]	; 0x4a0
   11e6c:	cmp	r0, r7
   11e70:	beq	11e78 <__mempcpy_chk@plt+0xe50>
   11e74:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   11e78:	cmp	r4, #0
   11e7c:	beq	11e9c <__mempcpy_chk@plt+0xe74>
   11e80:	ldr	r0, [sp, #48]	; 0x30
   11e84:	ldr	r1, [sp, #8]
   11e88:	mov	r4, #0
   11e8c:	cmp	r0, r1
   11e90:	beq	118b4 <__mempcpy_chk@plt+0x88c>
   11e94:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   11e98:	b	118b4 <__mempcpy_chk@plt+0x88c>
   11e9c:	mov	r0, #0
   11ea0:	strb	r0, [r6], -r5
   11ea4:	add	r0, sp, #48	; 0x30
   11ea8:	add	r1, r6, #1
   11eac:	bl	14c24 <__mempcpy_chk@plt+0x3bfc>
   11eb0:	mov	r4, r0
   11eb4:	cmp	r0, #0
   11eb8:	bne	118b4 <__mempcpy_chk@plt+0x88c>
   11ebc:	bl	15684 <__mempcpy_chk@plt+0x465c>
   11ec0:	bl	10f50 <__errno_location@plt>
   11ec4:	mov	r1, #40	; 0x28
   11ec8:	str	r1, [r0]
   11ecc:	mov	r4, #1
   11ed0:	b	11de4 <__mempcpy_chk@plt+0xdbc>
   11ed4:	movw	r1, #29004	; 0x714c
   11ed8:	movt	r1, #2
   11edc:	str	r0, [r1]
   11ee0:	bx	lr
   11ee4:	movw	r1, #29008	; 0x7150
   11ee8:	movt	r1, #2
   11eec:	strb	r0, [r1]
   11ef0:	bx	lr
   11ef4:	push	{r4, r5, r6, sl, fp, lr}
   11ef8:	add	fp, sp, #16
   11efc:	sub	sp, sp, #8
   11f00:	movw	r0, #28996	; 0x7144
   11f04:	movt	r0, #2
   11f08:	ldr	r0, [r0]
   11f0c:	bl	1579c <__mempcpy_chk@plt+0x4774>
   11f10:	cmp	r0, #0
   11f14:	beq	11f3c <__mempcpy_chk@plt+0xf14>
   11f18:	movw	r0, #29008	; 0x7150
   11f1c:	movt	r0, #2
   11f20:	ldrb	r0, [r0]
   11f24:	cmp	r0, #0
   11f28:	beq	11f5c <__mempcpy_chk@plt+0xf34>
   11f2c:	bl	10f50 <__errno_location@plt>
   11f30:	ldr	r0, [r0]
   11f34:	cmp	r0, #32
   11f38:	bne	11f5c <__mempcpy_chk@plt+0xf34>
   11f3c:	movw	r0, #28992	; 0x7140
   11f40:	movt	r0, #2
   11f44:	ldr	r0, [r0]
   11f48:	bl	1579c <__mempcpy_chk@plt+0x4774>
   11f4c:	cmp	r0, #0
   11f50:	subeq	sp, fp, #16
   11f54:	popeq	{r4, r5, r6, sl, fp, pc}
   11f58:	b	11fcc <__mempcpy_chk@plt+0xfa4>
   11f5c:	movw	r1, #26017	; 0x65a1
   11f60:	mov	r0, #0
   11f64:	mov	r2, #5
   11f68:	movt	r1, #1
   11f6c:	bl	10e48 <dcgettext@plt>
   11f70:	mov	r4, r0
   11f74:	movw	r0, #29004	; 0x714c
   11f78:	movt	r0, #2
   11f7c:	ldr	r6, [r0]
   11f80:	bl	10f50 <__errno_location@plt>
   11f84:	ldr	r5, [r0]
   11f88:	cmp	r6, #0
   11f8c:	bne	11fa8 <__mempcpy_chk@plt+0xf80>
   11f90:	movw	r2, #26033	; 0x65b1
   11f94:	mov	r0, #0
   11f98:	mov	r1, r5
   11f9c:	mov	r3, r4
   11fa0:	movt	r2, #1
   11fa4:	b	11fc8 <__mempcpy_chk@plt+0xfa0>
   11fa8:	mov	r0, r6
   11fac:	bl	14898 <__mempcpy_chk@plt+0x3870>
   11fb0:	movw	r2, #26029	; 0x65ad
   11fb4:	mov	r3, r0
   11fb8:	str	r4, [sp]
   11fbc:	mov	r0, #0
   11fc0:	mov	r1, r5
   11fc4:	movt	r2, #1
   11fc8:	bl	10ecc <error@plt>
   11fcc:	movw	r0, #28908	; 0x70ec
   11fd0:	movt	r0, #2
   11fd4:	ldr	r0, [r0]
   11fd8:	bl	10e24 <_exit@plt>
   11fdc:	push	{r4, r5, r6, r7, fp, lr}
   11fe0:	add	fp, sp, #16
   11fe4:	cmp	r0, #0
   11fe8:	beq	12050 <__mempcpy_chk@plt+0x1028>
   11fec:	mov	r5, r0
   11ff0:	mov	r0, #24
   11ff4:	mov	r6, r2
   11ff8:	mov	r7, r1
   11ffc:	bl	15258 <__mempcpy_chk@plt+0x4230>
   12000:	mov	r4, r0
   12004:	mov	r0, r7
   12008:	bl	1564c <__mempcpy_chk@plt+0x4624>
   1200c:	str	r0, [r4]
   12010:	ldrd	r0, [r6, #96]	; 0x60
   12014:	str	r0, [r4, #8]
   12018:	str	r1, [r4, #12]
   1201c:	ldrd	r0, [r6]
   12020:	str	r1, [r4, #20]
   12024:	str	r0, [r4, #16]
   12028:	mov	r0, r5
   1202c:	mov	r1, r4
   12030:	bl	12ed8 <__mempcpy_chk@plt+0x1eb0>
   12034:	cmp	r0, #0
   12038:	beq	12054 <__mempcpy_chk@plt+0x102c>
   1203c:	cmp	r0, r4
   12040:	beq	12050 <__mempcpy_chk@plt+0x1028>
   12044:	mov	r0, r4
   12048:	pop	{r4, r5, r6, r7, fp, lr}
   1204c:	b	130cc <__mempcpy_chk@plt+0x20a4>
   12050:	pop	{r4, r5, r6, r7, fp, pc}
   12054:	bl	15684 <__mempcpy_chk@plt+0x465c>
   12058:	cmp	r0, #0
   1205c:	moveq	r0, #0
   12060:	bxeq	lr
   12064:	push	{r4, r5, fp, lr}
   12068:	add	fp, sp, #8
   1206c:	sub	sp, sp, #24
   12070:	str	r1, [sp]
   12074:	mov	ip, sp
   12078:	mov	r1, sp
   1207c:	ldrd	r4, [r2, #96]	; 0x60
   12080:	add	r3, ip, #8
   12084:	add	ip, ip, #16
   12088:	strd	r4, [r3]
   1208c:	ldrd	r2, [r2]
   12090:	strd	r2, [ip]
   12094:	bl	122a8 <__mempcpy_chk@plt+0x1280>
   12098:	cmp	r0, #0
   1209c:	movwne	r0, #1
   120a0:	sub	sp, fp, #8
   120a4:	pop	{r4, r5, fp, pc}
   120a8:	push	{r4, r5, r6, sl, fp, lr}
   120ac:	add	fp, sp, #16
   120b0:	mov	r4, r0
   120b4:	bl	10f50 <__errno_location@plt>
   120b8:	ldr	r6, [r0]
   120bc:	mov	r5, r0
   120c0:	mov	r0, r4
   120c4:	bl	10e0c <free@plt>
   120c8:	str	r6, [r5]
   120cc:	pop	{r4, r5, r6, sl, fp, pc}
   120d0:	ldr	r0, [r0, #8]
   120d4:	bx	lr
   120d8:	ldr	r0, [r0, #12]
   120dc:	bx	lr
   120e0:	ldr	r0, [r0, #16]
   120e4:	bx	lr
   120e8:	ldm	r0, {r2, ip}
   120ec:	mov	r0, #0
   120f0:	cmp	r2, ip
   120f4:	bxcs	lr
   120f8:	mov	r0, #0
   120fc:	ldr	r1, [r2]
   12100:	cmp	r1, #0
   12104:	beq	12128 <__mempcpy_chk@plt+0x1100>
   12108:	mov	r3, #0
   1210c:	mov	r1, r2
   12110:	ldr	r1, [r1, #4]
   12114:	add	r3, r3, #1
   12118:	cmp	r1, #0
   1211c:	bne	12110 <__mempcpy_chk@plt+0x10e8>
   12120:	cmp	r3, r0
   12124:	movhi	r0, r3
   12128:	add	r2, r2, #8
   1212c:	cmp	r2, ip
   12130:	bcc	120fc <__mempcpy_chk@plt+0x10d4>
   12134:	bx	lr
   12138:	push	{fp, lr}
   1213c:	mov	fp, sp
   12140:	ldm	r0, {r3, ip}
   12144:	mov	lr, #0
   12148:	mov	r1, #0
   1214c:	cmp	r3, ip
   12150:	bcs	1218c <__mempcpy_chk@plt+0x1164>
   12154:	mov	r1, #0
   12158:	mov	lr, #0
   1215c:	ldr	r2, [r3]
   12160:	cmp	r2, #0
   12164:	beq	12180 <__mempcpy_chk@plt+0x1158>
   12168:	mov	r2, r3
   1216c:	ldr	r2, [r2, #4]
   12170:	add	r1, r1, #1
   12174:	cmp	r2, #0
   12178:	bne	1216c <__mempcpy_chk@plt+0x1144>
   1217c:	add	lr, lr, #1
   12180:	add	r3, r3, #8
   12184:	cmp	r3, ip
   12188:	bcc	1215c <__mempcpy_chk@plt+0x1134>
   1218c:	ldr	r2, [r0, #12]
   12190:	cmp	lr, r2
   12194:	bne	121ac <__mempcpy_chk@plt+0x1184>
   12198:	ldr	r2, [r0, #16]
   1219c:	mov	r0, #1
   121a0:	cmp	r1, r2
   121a4:	movne	r0, #0
   121a8:	pop	{fp, pc}
   121ac:	mov	r0, #0
   121b0:	pop	{fp, pc}
   121b4:	nop	{0}
   121b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   121bc:	add	fp, sp, #24
   121c0:	sub	sp, sp, #8
   121c4:	ldr	r6, [r0]
   121c8:	ldmib	r0, {r2, r7, r8}
   121cc:	ldr	r3, [r0, #16]
   121d0:	mov	r4, r1
   121d4:	mov	r5, #0
   121d8:	cmp	r6, r2
   121dc:	bcs	1221c <__mempcpy_chk@plt+0x11f4>
   121e0:	mov	r5, #0
   121e4:	ldr	r0, [r6]
   121e8:	cmp	r0, #0
   121ec:	beq	12210 <__mempcpy_chk@plt+0x11e8>
   121f0:	mov	r0, #0
   121f4:	mov	r1, r6
   121f8:	ldr	r1, [r1, #4]
   121fc:	add	r0, r0, #1
   12200:	cmp	r1, #0
   12204:	bne	121f8 <__mempcpy_chk@plt+0x11d0>
   12208:	cmp	r0, r5
   1220c:	movhi	r5, r0
   12210:	add	r6, r6, #8
   12214:	cmp	r6, r2
   12218:	bcc	121e4 <__mempcpy_chk@plt+0x11bc>
   1221c:	movw	r2, #26036	; 0x65b4
   12220:	mov	r0, r4
   12224:	mov	r1, #1
   12228:	movt	r2, #1
   1222c:	bl	10f8c <__fprintf_chk@plt>
   12230:	movw	r2, #26060	; 0x65cc
   12234:	mov	r0, r4
   12238:	mov	r1, #1
   1223c:	mov	r3, r7
   12240:	movt	r2, #1
   12244:	bl	10f8c <__fprintf_chk@plt>
   12248:	vmov	s0, r8
   1224c:	vldr	d16, [pc, #76]	; 122a0 <__mempcpy_chk@plt+0x1278>
   12250:	movw	r2, #26084	; 0x65e4
   12254:	mov	r0, r4
   12258:	mov	r1, #1
   1225c:	mov	r3, r8
   12260:	movt	r2, #1
   12264:	vcvt.f64.u32	d17, s0
   12268:	vmov	s0, r7
   1226c:	vcvt.f64.u32	d18, s0
   12270:	vmul.f64	d16, d17, d16
   12274:	vdiv.f64	d16, d16, d18
   12278:	vstr	d16, [sp]
   1227c:	bl	10f8c <__fprintf_chk@plt>
   12280:	movw	r2, #26117	; 0x6605
   12284:	mov	r0, r4
   12288:	mov	r1, #1
   1228c:	mov	r3, r5
   12290:	movt	r2, #1
   12294:	sub	sp, fp, #24
   12298:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1229c:	b	10f8c <__fprintf_chk@plt>
   122a0:	andeq	r0, r0, r0
   122a4:	subsmi	r0, r9, r0
   122a8:	push	{r4, r5, r6, r7, fp, lr}
   122ac:	add	fp, sp, #16
   122b0:	mov	r4, r1
   122b4:	ldr	r1, [r0, #8]
   122b8:	ldr	r2, [r0, #24]
   122bc:	mov	r5, r0
   122c0:	mov	r0, r4
   122c4:	blx	r2
   122c8:	ldr	r1, [r5, #8]
   122cc:	cmp	r0, r1
   122d0:	bcs	12330 <__mempcpy_chk@plt+0x1308>
   122d4:	ldr	r7, [r5]
   122d8:	mov	r6, #0
   122dc:	ldr	r1, [r7, r0, lsl #3]!
   122e0:	cmp	r1, #0
   122e4:	cmpne	r7, #0
   122e8:	bne	12318 <__mempcpy_chk@plt+0x12f0>
   122ec:	mov	r0, r6
   122f0:	pop	{r4, r5, r6, r7, fp, pc}
   122f4:	ldr	r2, [r5, #28]
   122f8:	mov	r0, r4
   122fc:	blx	r2
   12300:	cmp	r0, #0
   12304:	bne	12328 <__mempcpy_chk@plt+0x1300>
   12308:	ldr	r7, [r7, #4]
   1230c:	cmp	r7, #0
   12310:	beq	122ec <__mempcpy_chk@plt+0x12c4>
   12314:	ldr	r1, [r7]
   12318:	cmp	r1, r4
   1231c:	bne	122f4 <__mempcpy_chk@plt+0x12cc>
   12320:	mov	r6, r4
   12324:	b	122ec <__mempcpy_chk@plt+0x12c4>
   12328:	ldr	r6, [r7]
   1232c:	b	122ec <__mempcpy_chk@plt+0x12c4>
   12330:	bl	11004 <abort@plt>
   12334:	push	{fp, lr}
   12338:	mov	fp, sp
   1233c:	ldr	r1, [r0, #16]
   12340:	cmp	r1, #0
   12344:	beq	12364 <__mempcpy_chk@plt+0x133c>
   12348:	ldm	r0, {r1, r2}
   1234c:	cmp	r1, r2
   12350:	bcs	1236c <__mempcpy_chk@plt+0x1344>
   12354:	ldr	r0, [r1], #8
   12358:	cmp	r0, #0
   1235c:	beq	1234c <__mempcpy_chk@plt+0x1324>
   12360:	pop	{fp, pc}
   12364:	mov	r0, #0
   12368:	pop	{fp, pc}
   1236c:	bl	11004 <abort@plt>
   12370:	push	{r4, r5, fp, lr}
   12374:	add	fp, sp, #8
   12378:	mov	r5, r1
   1237c:	ldr	r1, [r0, #8]
   12380:	ldr	r2, [r0, #24]
   12384:	mov	r4, r0
   12388:	mov	r0, r5
   1238c:	blx	r2
   12390:	ldr	r1, [r4, #8]
   12394:	cmp	r0, r1
   12398:	bcs	123fc <__mempcpy_chk@plt+0x13d4>
   1239c:	ldr	r1, [r4]
   123a0:	add	r2, r1, r0, lsl #3
   123a4:	ldr	r3, [r2]
   123a8:	ldr	r2, [r2, #4]
   123ac:	cmp	r3, r5
   123b0:	beq	123c0 <__mempcpy_chk@plt+0x1398>
   123b4:	cmp	r2, #0
   123b8:	bne	123a4 <__mempcpy_chk@plt+0x137c>
   123bc:	b	123d0 <__mempcpy_chk@plt+0x13a8>
   123c0:	cmp	r2, #0
   123c4:	beq	123d0 <__mempcpy_chk@plt+0x13a8>
   123c8:	ldr	r0, [r2]
   123cc:	pop	{r4, r5, fp, pc}
   123d0:	ldr	r2, [r4, #4]
   123d4:	add	r0, r1, r0, lsl #3
   123d8:	add	r1, r0, #8
   123dc:	cmp	r1, r2
   123e0:	bcs	123f4 <__mempcpy_chk@plt+0x13cc>
   123e4:	ldr	r0, [r1], #8
   123e8:	cmp	r0, #0
   123ec:	beq	123dc <__mempcpy_chk@plt+0x13b4>
   123f0:	pop	{r4, r5, fp, pc}
   123f4:	mov	r0, #0
   123f8:	pop	{r4, r5, fp, pc}
   123fc:	bl	11004 <abort@plt>
   12400:	push	{r4, r5, fp, lr}
   12404:	add	fp, sp, #8
   12408:	ldm	r0, {r5, lr}
   1240c:	mov	ip, r0
   12410:	mov	r0, #0
   12414:	cmp	r5, lr
   12418:	popcs	{r4, r5, fp, pc}
   1241c:	mov	r0, #0
   12420:	ldr	r3, [r5]
   12424:	cmp	r3, #0
   12428:	cmpne	r5, #0
   1242c:	bne	12440 <__mempcpy_chk@plt+0x1418>
   12430:	add	r5, r5, #8
   12434:	cmp	r5, lr
   12438:	bcc	12420 <__mempcpy_chk@plt+0x13f8>
   1243c:	b	1246c <__mempcpy_chk@plt+0x1444>
   12440:	mov	r3, r5
   12444:	cmp	r0, r2
   12448:	bcs	1246c <__mempcpy_chk@plt+0x1444>
   1244c:	ldr	r4, [r3]
   12450:	str	r4, [r1, r0, lsl #2]
   12454:	add	r0, r0, #1
   12458:	ldr	r3, [r3, #4]
   1245c:	cmp	r3, #0
   12460:	bne	12444 <__mempcpy_chk@plt+0x141c>
   12464:	ldr	lr, [ip, #4]
   12468:	b	12430 <__mempcpy_chk@plt+0x1408>
   1246c:	pop	{r4, r5, fp, pc}
   12470:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12474:	add	fp, sp, #24
   12478:	mov	r5, r1
   1247c:	ldr	r4, [r0]
   12480:	ldr	r1, [r0, #4]
   12484:	mov	r6, #0
   12488:	cmp	r4, r1
   1248c:	bcs	12500 <__mempcpy_chk@plt+0x14d8>
   12490:	mov	r9, r2
   12494:	mov	r8, r0
   12498:	mov	r6, #0
   1249c:	ldr	r0, [r4]
   124a0:	cmp	r0, #0
   124a4:	cmpne	r4, #0
   124a8:	bne	124bc <__mempcpy_chk@plt+0x1494>
   124ac:	add	r4, r4, #8
   124b0:	cmp	r4, r1
   124b4:	bcc	1249c <__mempcpy_chk@plt+0x1474>
   124b8:	b	12500 <__mempcpy_chk@plt+0x14d8>
   124bc:	mov	r1, r9
   124c0:	blx	r5
   124c4:	cmp	r0, #0
   124c8:	beq	12500 <__mempcpy_chk@plt+0x14d8>
   124cc:	mov	r7, r4
   124d0:	ldr	r7, [r7, #4]
   124d4:	add	r6, r6, #1
   124d8:	cmp	r7, #0
   124dc:	beq	124f8 <__mempcpy_chk@plt+0x14d0>
   124e0:	ldr	r0, [r7]
   124e4:	mov	r1, r9
   124e8:	blx	r5
   124ec:	cmp	r0, #0
   124f0:	bne	124d0 <__mempcpy_chk@plt+0x14a8>
   124f4:	b	12500 <__mempcpy_chk@plt+0x14d8>
   124f8:	ldr	r1, [r8, #4]
   124fc:	b	124ac <__mempcpy_chk@plt+0x1484>
   12500:	mov	r0, r6
   12504:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12508:	ldrb	r2, [r0]
   1250c:	cmp	r2, #0
   12510:	moveq	r0, #0
   12514:	bxeq	lr
   12518:	add	r3, r0, #1
   1251c:	mov	r0, #0
   12520:	rsb	r0, r0, r0, lsl #5
   12524:	uxtab	r0, r0, r2
   12528:	udiv	r2, r0, r1
   1252c:	mls	r0, r2, r1, r0
   12530:	ldrb	r2, [r3], #1
   12534:	cmp	r2, #0
   12538:	bne	12520 <__mempcpy_chk@plt+0x14f8>
   1253c:	bx	lr
   12540:	movw	r1, #26144	; 0x6620
   12544:	movt	r1, #1
   12548:	vld1.32	{d16-d17}, [r1]!
   1254c:	ldr	r1, [r1]
   12550:	vst1.32	{d16-d17}, [r0]!
   12554:	str	r1, [r0]
   12558:	bx	lr
   1255c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12560:	add	fp, sp, #28
   12564:	sub	sp, sp, #4
   12568:	movw	sl, #9808	; 0x2650
   1256c:	cmp	r3, #0
   12570:	movw	r5, #9788	; 0x263c
   12574:	mov	r8, r0
   12578:	mov	r0, #40	; 0x28
   1257c:	mov	r7, r1
   12580:	movt	sl, #1
   12584:	movne	sl, r3
   12588:	cmp	r2, #0
   1258c:	movt	r5, #1
   12590:	movne	r5, r2
   12594:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   12598:	mov	r9, #0
   1259c:	cmp	r0, #0
   125a0:	beq	12630 <__mempcpy_chk@plt+0x1608>
   125a4:	movw	r6, #26144	; 0x6620
   125a8:	cmp	r7, #0
   125ac:	mov	r4, r0
   125b0:	movt	r6, #1
   125b4:	movne	r6, r7
   125b8:	str	r6, [r0, #20]
   125bc:	bl	12660 <__mempcpy_chk@plt+0x1638>
   125c0:	cmp	r0, #0
   125c4:	beq	12628 <__mempcpy_chk@plt+0x1600>
   125c8:	mov	r0, r8
   125cc:	mov	r1, r6
   125d0:	bl	1270c <__mempcpy_chk@plt+0x16e4>
   125d4:	cmp	r0, #0
   125d8:	str	r0, [r4, #8]
   125dc:	beq	12628 <__mempcpy_chk@plt+0x1600>
   125e0:	mov	r1, #8
   125e4:	bl	156c8 <__mempcpy_chk@plt+0x46a0>
   125e8:	cmp	r0, #0
   125ec:	str	r0, [r4]
   125f0:	beq	12628 <__mempcpy_chk@plt+0x1600>
   125f4:	ldr	r1, [fp, #8]
   125f8:	mov	r2, #0
   125fc:	str	r5, [r4, #24]
   12600:	str	sl, [r4, #28]
   12604:	mov	r9, r4
   12608:	str	r1, [r4, #32]
   1260c:	str	r2, [r4, #36]	; 0x24
   12610:	str	r2, [r4, #12]
   12614:	str	r2, [r4, #16]
   12618:	ldr	r1, [r4, #8]
   1261c:	add	r0, r0, r1, lsl #3
   12620:	str	r0, [r4, #4]
   12624:	b	12630 <__mempcpy_chk@plt+0x1608>
   12628:	mov	r0, r4
   1262c:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   12630:	mov	r0, r9
   12634:	sub	sp, fp, #28
   12638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1263c:	ror	r2, r0, #3
   12640:	udiv	r2, r2, r1
   12644:	mul	r1, r2, r1
   12648:	rsb	r0, r1, r0, ror #3
   1264c:	bx	lr
   12650:	sub	r0, r0, r1
   12654:	clz	r0, r0
   12658:	lsr	r0, r0, #5
   1265c:	bx	lr
   12660:	ldr	r3, [r0, #20]
   12664:	movw	r2, #26144	; 0x6620
   12668:	mov	r1, r0
   1266c:	mov	r0, #1
   12670:	movt	r2, #1
   12674:	cmp	r3, r2
   12678:	beq	126fc <__mempcpy_chk@plt+0x16d4>
   1267c:	vldr	s2, [pc, #124]	; 12700 <__mempcpy_chk@plt+0x16d8>
   12680:	vldr	s0, [r3, #8]
   12684:	vcmpe.f32	s0, s2
   12688:	vmrs	APSR_nzcv, fpscr
   1268c:	ble	126f4 <__mempcpy_chk@plt+0x16cc>
   12690:	vldr	s4, [pc, #108]	; 12704 <__mempcpy_chk@plt+0x16dc>
   12694:	vcmpe.f32	s0, s4
   12698:	vmrs	APSR_nzcv, fpscr
   1269c:	bpl	126f4 <__mempcpy_chk@plt+0x16cc>
   126a0:	vldr	s4, [pc, #96]	; 12708 <__mempcpy_chk@plt+0x16e0>
   126a4:	vldr	s6, [r3, #12]
   126a8:	vcmpe.f32	s6, s4
   126ac:	vmrs	APSR_nzcv, fpscr
   126b0:	ble	126f4 <__mempcpy_chk@plt+0x16cc>
   126b4:	vldr	s4, [r3]
   126b8:	vcmpe.f32	s4, #0.0
   126bc:	vmrs	APSR_nzcv, fpscr
   126c0:	blt	126f4 <__mempcpy_chk@plt+0x16cc>
   126c4:	vadd.f32	s2, s4, s2
   126c8:	vcmpe.f32	s2, s0
   126cc:	vmrs	APSR_nzcv, fpscr
   126d0:	bpl	126f4 <__mempcpy_chk@plt+0x16cc>
   126d4:	vldr	s0, [r3, #4]
   126d8:	vmov.f32	s4, #112	; 0x3f800000  1.0
   126dc:	vcmpe.f32	s0, s4
   126e0:	vmrs	APSR_nzcv, fpscr
   126e4:	bhi	126f4 <__mempcpy_chk@plt+0x16cc>
   126e8:	vcmpe.f32	s2, s0
   126ec:	vmrs	APSR_nzcv, fpscr
   126f0:	bxmi	lr
   126f4:	mov	r0, #0
   126f8:	str	r2, [r1, #20]
   126fc:	bx	lr
   12700:	stclcc	12, cr12, [ip, #820]	; 0x334
   12704:	svccc	0x00666666
   12708:	svccc	0x008ccccd
   1270c:	ldrb	r2, [r1, #16]
   12710:	cmp	r2, #0
   12714:	bne	12744 <__mempcpy_chk@plt+0x171c>
   12718:	vmov	s2, r0
   1271c:	vldr	s0, [r1, #8]
   12720:	vldr	s4, [pc, #156]	; 127c4 <__mempcpy_chk@plt+0x179c>
   12724:	mov	r0, #0
   12728:	vcvt.f32.u32	s2, s2
   1272c:	vdiv.f32	s2, s2, s0
   12730:	vcmpe.f32	s2, s4
   12734:	vcvt.u32.f32	s0, s2
   12738:	vmrs	APSR_nzcv, fpscr
   1273c:	bxge	lr
   12740:	vmov	r0, s0
   12744:	cmp	r0, #10
   12748:	movls	r0, #10
   1274c:	orr	r0, r0, #1
   12750:	cmn	r0, #1
   12754:	beq	127b0 <__mempcpy_chk@plt+0x1788>
   12758:	mov	r1, #3
   1275c:	cmp	r0, #10
   12760:	bcc	12798 <__mempcpy_chk@plt+0x1770>
   12764:	mov	r1, #3
   12768:	mov	ip, #9
   1276c:	mov	r2, #12
   12770:	udiv	r3, r0, r1
   12774:	mls	r3, r3, r1, r0
   12778:	cmp	r3, #0
   1277c:	beq	12798 <__mempcpy_chk@plt+0x1770>
   12780:	add	r3, ip, r2
   12784:	add	r2, r2, #8
   12788:	add	r1, r1, #2
   1278c:	add	ip, r3, #4
   12790:	cmp	ip, r0
   12794:	bcc	12770 <__mempcpy_chk@plt+0x1748>
   12798:	udiv	r2, r0, r1
   1279c:	mls	r1, r2, r1, r0
   127a0:	cmp	r1, #0
   127a4:	bne	127b8 <__mempcpy_chk@plt+0x1790>
   127a8:	add	r0, r0, #2
   127ac:	b	12750 <__mempcpy_chk@plt+0x1728>
   127b0:	mov	r0, #0
   127b4:	bx	lr
   127b8:	cmp	r0, #536870912	; 0x20000000
   127bc:	movcs	r0, #0
   127c0:	bx	lr
   127c4:	svcmi	0x00800000
   127c8:	push	{r4, r5, r6, r7, fp, lr}
   127cc:	add	fp, sp, #16
   127d0:	mov	r4, r0
   127d4:	ldr	r5, [r0]
   127d8:	ldr	r0, [r0, #4]
   127dc:	cmp	r5, r0
   127e0:	bcs	12878 <__mempcpy_chk@plt+0x1850>
   127e4:	mov	r6, #0
   127e8:	ldr	r1, [r5]
   127ec:	cmp	r1, #0
   127f0:	beq	1286c <__mempcpy_chk@plt+0x1844>
   127f4:	ldr	r1, [r4, #32]
   127f8:	ldr	r7, [r5, #4]
   127fc:	cmp	r1, #0
   12800:	mov	r0, r1
   12804:	movwne	r0, #1
   12808:	cmp	r7, #0
   1280c:	beq	12850 <__mempcpy_chk@plt+0x1828>
   12810:	tst	r0, #1
   12814:	beq	12824 <__mempcpy_chk@plt+0x17fc>
   12818:	ldr	r0, [r7]
   1281c:	blx	r1
   12820:	ldr	r1, [r4, #32]
   12824:	str	r6, [r7]
   12828:	cmp	r1, #0
   1282c:	ldr	r2, [r7, #4]
   12830:	ldr	r0, [r4, #36]	; 0x24
   12834:	str	r0, [r7, #4]
   12838:	mov	r0, r1
   1283c:	str	r7, [r4, #36]	; 0x24
   12840:	movwne	r0, #1
   12844:	cmp	r2, #0
   12848:	mov	r7, r2
   1284c:	bne	12810 <__mempcpy_chk@plt+0x17e8>
   12850:	cmp	r0, #0
   12854:	beq	12860 <__mempcpy_chk@plt+0x1838>
   12858:	ldr	r0, [r5]
   1285c:	blx	r1
   12860:	str	r6, [r5]
   12864:	str	r6, [r5, #4]
   12868:	ldr	r0, [r4, #4]
   1286c:	add	r5, r5, #8
   12870:	cmp	r5, r0
   12874:	bcc	127e8 <__mempcpy_chk@plt+0x17c0>
   12878:	mov	r0, #0
   1287c:	str	r0, [r4, #12]
   12880:	str	r0, [r4, #16]
   12884:	pop	{r4, r5, r6, r7, fp, pc}
   12888:	push	{r4, r5, r6, sl, fp, lr}
   1288c:	add	fp, sp, #16
   12890:	mov	r4, r0
   12894:	ldr	r0, [r0, #32]
   12898:	cmp	r0, #0
   1289c:	beq	12900 <__mempcpy_chk@plt+0x18d8>
   128a0:	ldr	r0, [r4, #16]
   128a4:	cmp	r0, #0
   128a8:	beq	12900 <__mempcpy_chk@plt+0x18d8>
   128ac:	ldr	r5, [r4]
   128b0:	ldr	r1, [r4, #4]
   128b4:	cmp	r5, r1
   128b8:	bcs	12900 <__mempcpy_chk@plt+0x18d8>
   128bc:	ldr	r0, [r5]
   128c0:	cmp	r0, #0
   128c4:	cmpne	r5, #0
   128c8:	beq	128f8 <__mempcpy_chk@plt+0x18d0>
   128cc:	ldr	r1, [r4, #32]
   128d0:	blx	r1
   128d4:	ldr	r6, [r5, #4]
   128d8:	cmp	r6, #0
   128dc:	beq	128f4 <__mempcpy_chk@plt+0x18cc>
   128e0:	ldr	r1, [r4, #32]
   128e4:	ldr	r0, [r6]
   128e8:	blx	r1
   128ec:	ldr	r6, [r6, #4]
   128f0:	b	128d8 <__mempcpy_chk@plt+0x18b0>
   128f4:	ldr	r1, [r4, #4]
   128f8:	add	r5, r5, #8
   128fc:	b	128b4 <__mempcpy_chk@plt+0x188c>
   12900:	ldr	r5, [r4]
   12904:	ldr	r1, [r4, #4]
   12908:	cmp	r5, r1
   1290c:	bcs	1293c <__mempcpy_chk@plt+0x1914>
   12910:	ldr	r0, [r5, #4]
   12914:	cmp	r0, #0
   12918:	beq	12934 <__mempcpy_chk@plt+0x190c>
   1291c:	ldr	r6, [r0, #4]
   12920:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   12924:	cmp	r6, #0
   12928:	mov	r0, r6
   1292c:	bne	1291c <__mempcpy_chk@plt+0x18f4>
   12930:	ldr	r1, [r4, #4]
   12934:	add	r5, r5, #8
   12938:	b	12908 <__mempcpy_chk@plt+0x18e0>
   1293c:	ldr	r0, [r4, #36]	; 0x24
   12940:	cmp	r0, #0
   12944:	beq	1295c <__mempcpy_chk@plt+0x1934>
   12948:	ldr	r5, [r0, #4]
   1294c:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   12950:	cmp	r5, #0
   12954:	mov	r0, r5
   12958:	bne	12948 <__mempcpy_chk@plt+0x1920>
   1295c:	ldr	r0, [r4]
   12960:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   12964:	mov	r0, r4
   12968:	pop	{r4, r5, r6, sl, fp, lr}
   1296c:	b	120a8 <__mempcpy_chk@plt+0x1080>
   12970:	push	{r4, r5, r6, r7, fp, lr}
   12974:	add	fp, sp, #16
   12978:	sub	sp, sp, #40	; 0x28
   1297c:	mov	r7, r0
   12980:	mov	r2, r1
   12984:	mov	r4, r0
   12988:	ldr	r1, [r7, #20]!
   1298c:	mov	r0, r2
   12990:	bl	1270c <__mempcpy_chk@plt+0x16e4>
   12994:	mov	r5, #0
   12998:	cmp	r0, #0
   1299c:	beq	12a30 <__mempcpy_chk@plt+0x1a08>
   129a0:	mov	r6, r0
   129a4:	ldr	r0, [r4, #8]
   129a8:	cmp	r6, r0
   129ac:	beq	12a2c <__mempcpy_chk@plt+0x1a04>
   129b0:	mov	r0, r6
   129b4:	mov	r1, #8
   129b8:	bl	156c8 <__mempcpy_chk@plt+0x46a0>
   129bc:	cmp	r0, #0
   129c0:	str	r0, [sp]
   129c4:	beq	12a30 <__mempcpy_chk@plt+0x1a08>
   129c8:	add	r0, r0, r6, lsl #3
   129cc:	mov	r1, #0
   129d0:	mov	r5, sp
   129d4:	mov	r2, #0
   129d8:	str	r1, [sp, #16]
   129dc:	str	r1, [sp, #12]
   129e0:	str	r6, [sp, #8]
   129e4:	mov	r1, r4
   129e8:	str	r0, [sp, #4]
   129ec:	add	r0, r5, #20
   129f0:	vld1.32	{d16-d17}, [r7]
   129f4:	vst1.32	{d16-d17}, [r0]
   129f8:	ldr	r0, [r4, #36]	; 0x24
   129fc:	str	r0, [sp, #36]	; 0x24
   12a00:	mov	r0, r5
   12a04:	bl	12a88 <__mempcpy_chk@plt+0x1a60>
   12a08:	cmp	r0, #0
   12a0c:	beq	12a3c <__mempcpy_chk@plt+0x1a14>
   12a10:	ldr	r0, [r4]
   12a14:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   12a18:	mov	r0, #36	; 0x24
   12a1c:	vld1.32	{d16-d17}, [r5], r0
   12a20:	vst1.32	{d16-d17}, [r4], r0
   12a24:	ldr	r0, [r5]
   12a28:	str	r0, [r4]
   12a2c:	mov	r5, #1
   12a30:	mov	r0, r5
   12a34:	sub	sp, fp, #16
   12a38:	pop	{r4, r5, r6, r7, fp, pc}
   12a3c:	ldr	r0, [sp, #36]	; 0x24
   12a40:	mov	r1, sp
   12a44:	mov	r2, #1
   12a48:	str	r0, [r4, #36]	; 0x24
   12a4c:	mov	r0, r4
   12a50:	bl	12a88 <__mempcpy_chk@plt+0x1a60>
   12a54:	cmp	r0, #0
   12a58:	beq	12a84 <__mempcpy_chk@plt+0x1a5c>
   12a5c:	mov	r1, sp
   12a60:	mov	r0, r4
   12a64:	mov	r2, #0
   12a68:	mov	r5, #0
   12a6c:	bl	12a88 <__mempcpy_chk@plt+0x1a60>
   12a70:	cmp	r0, #0
   12a74:	beq	12a84 <__mempcpy_chk@plt+0x1a5c>
   12a78:	ldr	r0, [sp]
   12a7c:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   12a80:	b	12a30 <__mempcpy_chk@plt+0x1a08>
   12a84:	bl	11004 <abort@plt>
   12a88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a8c:	add	fp, sp, #28
   12a90:	sub	sp, sp, #12
   12a94:	ldr	sl, [r1]
   12a98:	str	r1, [sp, #8]
   12a9c:	ldr	r1, [r1, #4]
   12aa0:	mov	r7, r0
   12aa4:	mov	r0, #1
   12aa8:	str	r2, [sp, #4]
   12aac:	cmp	sl, r1
   12ab0:	bcs	12c04 <__mempcpy_chk@plt+0x1bdc>
   12ab4:	add	r8, r7, #36	; 0x24
   12ab8:	mov	r9, #0
   12abc:	ldr	r4, [sl]
   12ac0:	cmp	r4, #0
   12ac4:	beq	12bec <__mempcpy_chk@plt+0x1bc4>
   12ac8:	ldr	r5, [sl, #4]
   12acc:	cmp	r5, #0
   12ad0:	beq	12b48 <__mempcpy_chk@plt+0x1b20>
   12ad4:	ldr	r1, [r7, #8]
   12ad8:	ldr	r4, [r5]
   12adc:	ldr	r2, [r7, #24]
   12ae0:	mov	r0, r4
   12ae4:	blx	r2
   12ae8:	ldr	r1, [r7, #8]
   12aec:	cmp	r0, r1
   12af0:	bcs	12c14 <__mempcpy_chk@plt+0x1bec>
   12af4:	ldr	r3, [r7]
   12af8:	ldr	r2, [r5, #4]
   12afc:	ldr	r6, [r3, r0, lsl #3]
   12b00:	cmp	r6, #0
   12b04:	beq	12b14 <__mempcpy_chk@plt+0x1aec>
   12b08:	add	r0, r3, r0, lsl #3
   12b0c:	add	r0, r0, #4
   12b10:	b	12b2c <__mempcpy_chk@plt+0x1b04>
   12b14:	str	r4, [r3, r0, lsl #3]
   12b18:	ldr	r0, [r7, #12]
   12b1c:	add	r0, r0, #1
   12b20:	str	r0, [r7, #12]
   12b24:	mov	r0, r8
   12b28:	str	r9, [r5]
   12b2c:	ldr	r3, [r0]
   12b30:	cmp	r2, #0
   12b34:	str	r3, [r5, #4]
   12b38:	str	r5, [r0]
   12b3c:	mov	r5, r2
   12b40:	bne	12ad8 <__mempcpy_chk@plt+0x1ab0>
   12b44:	ldr	r4, [sl]
   12b48:	ldr	r0, [sp, #4]
   12b4c:	str	r9, [sl, #4]
   12b50:	cmp	r0, #0
   12b54:	bne	12bec <__mempcpy_chk@plt+0x1bc4>
   12b58:	ldr	r1, [r7, #8]
   12b5c:	ldr	r2, [r7, #24]
   12b60:	mov	r0, r4
   12b64:	blx	r2
   12b68:	mov	r5, r0
   12b6c:	ldr	r0, [r7, #8]
   12b70:	cmp	r5, r0
   12b74:	bcs	12c14 <__mempcpy_chk@plt+0x1bec>
   12b78:	ldr	r6, [r7]
   12b7c:	ldr	r0, [r6, r5, lsl #3]
   12b80:	cmp	r0, #0
   12b84:	beq	12ba0 <__mempcpy_chk@plt+0x1b78>
   12b88:	ldr	r0, [r8]
   12b8c:	cmp	r0, #0
   12b90:	beq	12bb4 <__mempcpy_chk@plt+0x1b8c>
   12b94:	ldr	r1, [r0, #4]
   12b98:	str	r1, [r8]
   12b9c:	b	12bc4 <__mempcpy_chk@plt+0x1b9c>
   12ba0:	str	r4, [r6, r5, lsl #3]
   12ba4:	ldr	r0, [r7, #12]
   12ba8:	add	r0, r0, #1
   12bac:	str	r0, [r7, #12]
   12bb0:	b	12bd8 <__mempcpy_chk@plt+0x1bb0>
   12bb4:	mov	r0, #8
   12bb8:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   12bbc:	cmp	r0, #0
   12bc0:	beq	12c0c <__mempcpy_chk@plt+0x1be4>
   12bc4:	add	r1, r6, r5, lsl #3
   12bc8:	str	r4, [r0]
   12bcc:	ldr	r2, [r1, #4]
   12bd0:	str	r2, [r0, #4]
   12bd4:	str	r0, [r1, #4]
   12bd8:	ldr	r1, [sp, #8]
   12bdc:	str	r9, [sl]
   12be0:	ldr	r0, [r1, #12]
   12be4:	sub	r0, r0, #1
   12be8:	str	r0, [r1, #12]
   12bec:	ldr	r0, [sp, #8]
   12bf0:	add	sl, sl, #8
   12bf4:	ldr	r0, [r0, #4]
   12bf8:	cmp	sl, r0
   12bfc:	bcc	12abc <__mempcpy_chk@plt+0x1a94>
   12c00:	mov	r0, #1
   12c04:	sub	sp, fp, #28
   12c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c0c:	mov	r0, #0
   12c10:	b	12c04 <__mempcpy_chk@plt+0x1bdc>
   12c14:	bl	11004 <abort@plt>
   12c18:	push	{r4, r5, r6, r7, fp, lr}
   12c1c:	add	fp, sp, #16
   12c20:	sub	sp, sp, #8
   12c24:	cmp	r1, #0
   12c28:	beq	12da0 <__mempcpy_chk@plt+0x1d78>
   12c2c:	mov	r7, r2
   12c30:	add	r2, sp, #4
   12c34:	mov	r3, #0
   12c38:	mov	r5, r1
   12c3c:	mov	r4, r0
   12c40:	mov	r6, #0
   12c44:	bl	12da8 <__mempcpy_chk@plt+0x1d80>
   12c48:	cmp	r0, #0
   12c4c:	beq	12c5c <__mempcpy_chk@plt+0x1c34>
   12c50:	cmp	r7, #0
   12c54:	strne	r0, [r7]
   12c58:	b	12d8c <__mempcpy_chk@plt+0x1d64>
   12c5c:	vldr	s0, [r4, #8]
   12c60:	ldr	r0, [r4, #20]
   12c64:	vldr	s2, [r4, #12]
   12c68:	vldr	s4, [r0, #8]
   12c6c:	vcvt.f32.u32	s0, s0
   12c70:	vcvt.f32.u32	s2, s2
   12c74:	vmul.f32	s0, s4, s0
   12c78:	vcmpe.f32	s0, s2
   12c7c:	vmrs	APSR_nzcv, fpscr
   12c80:	bpl	12d14 <__mempcpy_chk@plt+0x1cec>
   12c84:	mov	r0, r4
   12c88:	bl	12660 <__mempcpy_chk@plt+0x1638>
   12c8c:	vldr	s0, [r4, #8]
   12c90:	ldr	r0, [r4, #20]
   12c94:	vldr	s4, [r4, #12]
   12c98:	vcvt.f32.u32	s2, s0
   12c9c:	vldr	s0, [r0, #8]
   12ca0:	vcvt.f32.u32	s4, s4
   12ca4:	vmul.f32	s6, s0, s2
   12ca8:	vcmpe.f32	s6, s4
   12cac:	vmrs	APSR_nzcv, fpscr
   12cb0:	bpl	12d14 <__mempcpy_chk@plt+0x1cec>
   12cb4:	vldr	s4, [r0, #12]
   12cb8:	ldrb	r0, [r0, #16]
   12cbc:	mvn	r6, #0
   12cc0:	cmp	r0, #0
   12cc4:	vmul.f32	s2, s4, s2
   12cc8:	vldr	s4, [pc, #212]	; 12da4 <__mempcpy_chk@plt+0x1d7c>
   12ccc:	vmul.f32	s0, s0, s2
   12cd0:	vseleq.f32	s0, s0, s2
   12cd4:	vcmpe.f32	s0, s4
   12cd8:	vmrs	APSR_nzcv, fpscr
   12cdc:	bge	12d8c <__mempcpy_chk@plt+0x1d64>
   12ce0:	vcvt.u32.f32	s0, s0
   12ce4:	mov	r0, r4
   12ce8:	vmov	r1, s0
   12cec:	bl	12970 <__mempcpy_chk@plt+0x1948>
   12cf0:	cmp	r0, #0
   12cf4:	beq	12d8c <__mempcpy_chk@plt+0x1d64>
   12cf8:	add	r2, sp, #4
   12cfc:	mov	r0, r4
   12d00:	mov	r1, r5
   12d04:	mov	r3, #0
   12d08:	bl	12da8 <__mempcpy_chk@plt+0x1d80>
   12d0c:	cmp	r0, #0
   12d10:	bne	12da0 <__mempcpy_chk@plt+0x1d78>
   12d14:	ldr	r6, [sp, #4]
   12d18:	ldr	r0, [r6]
   12d1c:	cmp	r0, #0
   12d20:	beq	12d3c <__mempcpy_chk@plt+0x1d14>
   12d24:	ldr	r0, [r4, #36]	; 0x24
   12d28:	cmp	r0, #0
   12d2c:	beq	12d5c <__mempcpy_chk@plt+0x1d34>
   12d30:	ldr	r1, [r0, #4]
   12d34:	str	r1, [r4, #36]	; 0x24
   12d38:	b	12d6c <__mempcpy_chk@plt+0x1d44>
   12d3c:	str	r5, [r6]
   12d40:	ldr	r0, [r4, #12]
   12d44:	ldr	r1, [r4, #16]
   12d48:	add	r0, r0, #1
   12d4c:	add	r1, r1, #1
   12d50:	str	r0, [r4, #12]
   12d54:	str	r1, [r4, #16]
   12d58:	b	12d88 <__mempcpy_chk@plt+0x1d60>
   12d5c:	mov	r0, #8
   12d60:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   12d64:	cmp	r0, #0
   12d68:	beq	12d98 <__mempcpy_chk@plt+0x1d70>
   12d6c:	str	r5, [r0]
   12d70:	ldr	r1, [r6, #4]
   12d74:	str	r1, [r0, #4]
   12d78:	str	r0, [r6, #4]
   12d7c:	ldr	r0, [r4, #16]
   12d80:	add	r0, r0, #1
   12d84:	str	r0, [r4, #16]
   12d88:	mov	r6, #1
   12d8c:	mov	r0, r6
   12d90:	sub	sp, fp, #16
   12d94:	pop	{r4, r5, r6, r7, fp, pc}
   12d98:	mvn	r6, #0
   12d9c:	b	12d8c <__mempcpy_chk@plt+0x1d64>
   12da0:	bl	11004 <abort@plt>
   12da4:	svcmi	0x00800000
   12da8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12dac:	add	fp, sp, #24
   12db0:	mov	r7, r2
   12db4:	mov	r4, r1
   12db8:	ldr	r1, [r0, #8]
   12dbc:	ldr	r2, [r0, #24]
   12dc0:	mov	r5, r0
   12dc4:	mov	r8, r3
   12dc8:	mov	r0, r4
   12dcc:	blx	r2
   12dd0:	ldr	r1, [r5, #8]
   12dd4:	cmp	r0, r1
   12dd8:	bcs	12ed4 <__mempcpy_chk@plt+0x1eac>
   12ddc:	ldr	r1, [r5]
   12de0:	add	r6, r1, r0, lsl #3
   12de4:	str	r6, [r7]
   12de8:	ldr	r1, [r1, r0, lsl #3]
   12dec:	cmp	r1, #0
   12df0:	beq	12e88 <__mempcpy_chk@plt+0x1e60>
   12df4:	cmp	r1, r4
   12df8:	beq	12e14 <__mempcpy_chk@plt+0x1dec>
   12dfc:	ldr	r2, [r5, #28]
   12e00:	mov	r0, r4
   12e04:	blx	r2
   12e08:	cmp	r0, #0
   12e0c:	beq	12e48 <__mempcpy_chk@plt+0x1e20>
   12e10:	ldr	r4, [r6]
   12e14:	cmp	r8, #0
   12e18:	beq	12e8c <__mempcpy_chk@plt+0x1e64>
   12e1c:	ldr	r0, [r6, #4]
   12e20:	cmp	r0, #0
   12e24:	beq	12e94 <__mempcpy_chk@plt+0x1e6c>
   12e28:	ldm	r0, {r1, r2}
   12e2c:	stm	r6, {r1, r2}
   12e30:	mov	r1, #0
   12e34:	str	r1, [r0]
   12e38:	ldr	r1, [r5, #36]	; 0x24
   12e3c:	str	r1, [r0, #4]
   12e40:	str	r0, [r5, #36]	; 0x24
   12e44:	b	12e8c <__mempcpy_chk@plt+0x1e64>
   12e48:	ldr	r0, [r6, #4]!
   12e4c:	cmp	r0, #0
   12e50:	beq	12e88 <__mempcpy_chk@plt+0x1e60>
   12e54:	ldr	r1, [r0]
   12e58:	cmp	r1, r4
   12e5c:	beq	12ea0 <__mempcpy_chk@plt+0x1e78>
   12e60:	ldr	r2, [r5, #28]
   12e64:	mov	r0, r4
   12e68:	blx	r2
   12e6c:	ldr	r1, [r6]
   12e70:	cmp	r0, #0
   12e74:	bne	12ea8 <__mempcpy_chk@plt+0x1e80>
   12e78:	ldr	r0, [r1, #4]!
   12e7c:	mov	r6, r1
   12e80:	cmp	r0, #0
   12e84:	bne	12e54 <__mempcpy_chk@plt+0x1e2c>
   12e88:	mov	r4, #0
   12e8c:	mov	r0, r4
   12e90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e94:	mov	r0, #0
   12e98:	str	r0, [r6]
   12e9c:	b	12e8c <__mempcpy_chk@plt+0x1e64>
   12ea0:	mov	r1, r0
   12ea4:	b	12eac <__mempcpy_chk@plt+0x1e84>
   12ea8:	ldr	r4, [r1]
   12eac:	cmp	r8, #0
   12eb0:	beq	12e8c <__mempcpy_chk@plt+0x1e64>
   12eb4:	ldr	r0, [r1, #4]
   12eb8:	str	r0, [r6]
   12ebc:	mov	r0, #0
   12ec0:	str	r0, [r1]
   12ec4:	ldr	r0, [r5, #36]	; 0x24
   12ec8:	str	r0, [r1, #4]
   12ecc:	str	r1, [r5, #36]	; 0x24
   12ed0:	b	12e8c <__mempcpy_chk@plt+0x1e64>
   12ed4:	bl	11004 <abort@plt>
   12ed8:	push	{r4, sl, fp, lr}
   12edc:	add	fp, sp, #8
   12ee0:	sub	sp, sp, #8
   12ee4:	add	r2, sp, #4
   12ee8:	mov	r4, r1
   12eec:	bl	12c18 <__mempcpy_chk@plt+0x1bf0>
   12ef0:	cmn	r0, #1
   12ef4:	beq	12f08 <__mempcpy_chk@plt+0x1ee0>
   12ef8:	ldr	r1, [sp, #4]
   12efc:	cmp	r0, #0
   12f00:	moveq	r4, r1
   12f04:	b	12f0c <__mempcpy_chk@plt+0x1ee4>
   12f08:	mov	r4, #0
   12f0c:	mov	r0, r4
   12f10:	sub	sp, fp, #8
   12f14:	pop	{r4, sl, fp, pc}
   12f18:	push	{r4, r5, r6, sl, fp, lr}
   12f1c:	add	fp, sp, #16
   12f20:	sub	sp, sp, #8
   12f24:	add	r2, sp, #4
   12f28:	mov	r3, #1
   12f2c:	mov	r4, r0
   12f30:	bl	12da8 <__mempcpy_chk@plt+0x1d80>
   12f34:	mov	r5, r0
   12f38:	cmp	r0, #0
   12f3c:	beq	1301c <__mempcpy_chk@plt+0x1ff4>
   12f40:	ldr	r0, [r4, #16]
   12f44:	sub	r0, r0, #1
   12f48:	str	r0, [r4, #16]
   12f4c:	ldr	r0, [sp, #4]
   12f50:	ldr	r0, [r0]
   12f54:	cmp	r0, #0
   12f58:	bne	1301c <__mempcpy_chk@plt+0x1ff4>
   12f5c:	ldr	r0, [r4, #12]
   12f60:	vldr	s0, [r4, #8]
   12f64:	sub	r0, r0, #1
   12f68:	str	r0, [r4, #12]
   12f6c:	vmov	s4, r0
   12f70:	ldr	r1, [r4, #20]
   12f74:	vldr	s2, [r1]
   12f78:	vcvt.f32.u32	s0, s0
   12f7c:	vcvt.f32.u32	s4, s4
   12f80:	vmul.f32	s0, s2, s0
   12f84:	vcmpe.f32	s0, s4
   12f88:	vmrs	APSR_nzcv, fpscr
   12f8c:	ble	1301c <__mempcpy_chk@plt+0x1ff4>
   12f90:	mov	r0, r4
   12f94:	bl	12660 <__mempcpy_chk@plt+0x1638>
   12f98:	vldr	s0, [r4, #8]
   12f9c:	ldr	r0, [r4, #20]
   12fa0:	vldr	s2, [r4, #12]
   12fa4:	vcvt.f32.u32	s0, s0
   12fa8:	vldr	s4, [r0]
   12fac:	vcvt.f32.u32	s2, s2
   12fb0:	vmul.f32	s4, s4, s0
   12fb4:	vcmpe.f32	s4, s2
   12fb8:	vmrs	APSR_nzcv, fpscr
   12fbc:	ble	1301c <__mempcpy_chk@plt+0x1ff4>
   12fc0:	vldr	s2, [r0, #4]
   12fc4:	ldrb	r1, [r0, #16]
   12fc8:	cmp	r1, #0
   12fcc:	vmul.f32	s0, s2, s0
   12fd0:	bne	12fdc <__mempcpy_chk@plt+0x1fb4>
   12fd4:	vldr	s2, [r0, #8]
   12fd8:	vmul.f32	s0, s0, s2
   12fdc:	vcvt.u32.f32	s0, s0
   12fe0:	mov	r0, r4
   12fe4:	vmov	r1, s0
   12fe8:	bl	12970 <__mempcpy_chk@plt+0x1948>
   12fec:	cmp	r0, #0
   12ff0:	bne	1301c <__mempcpy_chk@plt+0x1ff4>
   12ff4:	ldr	r0, [r4, #36]	; 0x24
   12ff8:	cmp	r0, #0
   12ffc:	beq	13014 <__mempcpy_chk@plt+0x1fec>
   13000:	ldr	r6, [r0, #4]
   13004:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   13008:	cmp	r6, #0
   1300c:	mov	r0, r6
   13010:	bne	13000 <__mempcpy_chk@plt+0x1fd8>
   13014:	mov	r0, #0
   13018:	str	r0, [r4, #36]	; 0x24
   1301c:	mov	r0, r5
   13020:	sub	sp, fp, #16
   13024:	pop	{r4, r5, r6, sl, fp, pc}
   13028:	b	12f18 <__mempcpy_chk@plt+0x1ef0>
   1302c:	push	{r4, r5, fp, lr}
   13030:	add	fp, sp, #8
   13034:	mov	r5, r0
   13038:	ldr	r0, [r0]
   1303c:	mov	r4, r1
   13040:	bl	159b8 <__mempcpy_chk@plt+0x4990>
   13044:	ldrd	r2, [r5, #8]
   13048:	eor	r0, r2, r0
   1304c:	mov	r1, r3
   13050:	mov	r2, r4
   13054:	mov	r3, #0
   13058:	bl	15bcc <__mempcpy_chk@plt+0x4ba4>
   1305c:	mov	r0, r2
   13060:	pop	{r4, r5, fp, pc}
   13064:	push	{r4, r5, fp, lr}
   13068:	add	fp, sp, #8
   1306c:	mov	lr, r1
   13070:	mov	r2, r0
   13074:	ldr	r3, [r2, #8]!
   13078:	ldr	ip, [lr, #8]!
   1307c:	ldr	r4, [r2, #4]
   13080:	eor	ip, r3, ip
   13084:	ldr	r3, [lr, #4]
   13088:	eor	r3, r4, r3
   1308c:	orrs	r3, ip, r3
   13090:	mov	ip, #0
   13094:	bne	130c4 <__mempcpy_chk@plt+0x209c>
   13098:	ldrd	r4, [lr, #8]
   1309c:	ldrd	r2, [r2, #8]
   130a0:	eor	r3, r3, r5
   130a4:	eor	r2, r2, r4
   130a8:	orrs	r2, r2, r3
   130ac:	bne	130c4 <__mempcpy_chk@plt+0x209c>
   130b0:	ldr	r1, [r1]
   130b4:	ldr	r0, [r0]
   130b8:	bl	10de8 <strcmp@plt>
   130bc:	clz	r0, r0
   130c0:	lsr	ip, r0, #5
   130c4:	mov	r0, ip
   130c8:	pop	{r4, r5, fp, pc}
   130cc:	push	{r4, sl, fp, lr}
   130d0:	add	fp, sp, #8
   130d4:	mov	r4, r0
   130d8:	ldr	r0, [r0]
   130dc:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   130e0:	mov	r0, r4
   130e4:	pop	{r4, sl, fp, lr}
   130e8:	b	120a8 <__mempcpy_chk@plt+0x1080>
   130ec:	push	{r4, r5, fp, lr}
   130f0:	add	fp, sp, #8
   130f4:	cmp	r0, #0
   130f8:	beq	1318c <__mempcpy_chk@plt+0x2164>
   130fc:	mov	r1, #47	; 0x2f
   13100:	mov	r4, r0
   13104:	bl	10fbc <strrchr@plt>
   13108:	cmp	r0, #0
   1310c:	mov	r5, r4
   13110:	addne	r5, r0, #1
   13114:	sub	r0, r5, r4
   13118:	cmp	r0, #7
   1311c:	blt	13170 <__mempcpy_chk@plt+0x2148>
   13120:	movw	r1, #26220	; 0x666c
   13124:	sub	r0, r5, #7
   13128:	mov	r2, #7
   1312c:	movt	r1, #1
   13130:	bl	10ff8 <strncmp@plt>
   13134:	cmp	r0, #0
   13138:	bne	13170 <__mempcpy_chk@plt+0x2148>
   1313c:	movw	r1, #26228	; 0x6674
   13140:	mov	r0, r5
   13144:	mov	r2, #3
   13148:	movt	r1, #1
   1314c:	bl	10ff8 <strncmp@plt>
   13150:	cmp	r0, #0
   13154:	beq	13160 <__mempcpy_chk@plt+0x2138>
   13158:	mov	r4, r5
   1315c:	b	13170 <__mempcpy_chk@plt+0x2148>
   13160:	movw	r0, #28976	; 0x7130
   13164:	add	r4, r5, #3
   13168:	movt	r0, #2
   1316c:	str	r4, [r0]
   13170:	movw	r0, #28980	; 0x7134
   13174:	movt	r0, #2
   13178:	str	r4, [r0]
   1317c:	movw	r0, #29012	; 0x7154
   13180:	movt	r0, #2
   13184:	str	r4, [r0]
   13188:	pop	{r4, r5, fp, pc}
   1318c:	movw	r0, #28992	; 0x7140
   13190:	movt	r0, #2
   13194:	ldr	r1, [r0]
   13198:	movw	r0, #26164	; 0x6634
   1319c:	movt	r0, #1
   131a0:	bl	10fec <fputs@plt>
   131a4:	bl	11004 <abort@plt>
   131a8:	push	{r4, r5, r6, sl, fp, lr}
   131ac:	add	fp, sp, #16
   131b0:	mov	r4, r0
   131b4:	movw	r0, #29016	; 0x7158
   131b8:	movt	r0, #2
   131bc:	cmp	r4, #0
   131c0:	moveq	r4, r0
   131c4:	bl	10f50 <__errno_location@plt>
   131c8:	ldr	r6, [r0]
   131cc:	mov	r5, r0
   131d0:	mov	r0, r4
   131d4:	mov	r1, #48	; 0x30
   131d8:	bl	155a8 <__mempcpy_chk@plt+0x4580>
   131dc:	str	r6, [r5]
   131e0:	pop	{r4, r5, r6, sl, fp, pc}
   131e4:	movw	r1, #29016	; 0x7158
   131e8:	cmp	r0, #0
   131ec:	movt	r1, #2
   131f0:	movne	r1, r0
   131f4:	ldr	r0, [r1]
   131f8:	bx	lr
   131fc:	movw	r2, #29016	; 0x7158
   13200:	cmp	r0, #0
   13204:	movt	r2, #2
   13208:	movne	r2, r0
   1320c:	str	r1, [r2]
   13210:	bx	lr
   13214:	movw	r3, #29016	; 0x7158
   13218:	cmp	r0, #0
   1321c:	and	r2, r2, #1
   13220:	movt	r3, #2
   13224:	movne	r3, r0
   13228:	ubfx	r0, r1, #5, #3
   1322c:	and	r1, r1, #31
   13230:	add	ip, r3, r0, lsl #2
   13234:	mov	r0, #1
   13238:	ldr	r3, [ip, #8]
   1323c:	and	r0, r0, r3, lsr r1
   13240:	eor	r2, r0, r2
   13244:	eor	r1, r3, r2, lsl r1
   13248:	str	r1, [ip, #8]
   1324c:	bx	lr
   13250:	movw	r2, #29016	; 0x7158
   13254:	cmp	r0, #0
   13258:	movt	r2, #2
   1325c:	movne	r2, r0
   13260:	ldr	r0, [r2, #4]
   13264:	str	r1, [r2, #4]
   13268:	bx	lr
   1326c:	push	{fp, lr}
   13270:	mov	fp, sp
   13274:	movw	r3, #29016	; 0x7158
   13278:	cmp	r0, #0
   1327c:	movt	r3, #2
   13280:	movne	r3, r0
   13284:	cmp	r1, #0
   13288:	mov	r0, #10
   1328c:	cmpne	r2, #0
   13290:	str	r0, [r3]
   13294:	bne	1329c <__mempcpy_chk@plt+0x2274>
   13298:	bl	11004 <abort@plt>
   1329c:	str	r1, [r3, #40]	; 0x28
   132a0:	str	r2, [r3, #44]	; 0x2c
   132a4:	pop	{fp, pc}
   132a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   132ac:	add	fp, sp, #28
   132b0:	sub	sp, sp, #20
   132b4:	mov	r7, r0
   132b8:	ldr	r0, [fp, #8]
   132bc:	movw	r5, #29016	; 0x7158
   132c0:	mov	r8, r3
   132c4:	mov	r9, r2
   132c8:	mov	sl, r1
   132cc:	movt	r5, #2
   132d0:	cmp	r0, #0
   132d4:	movne	r5, r0
   132d8:	bl	10f50 <__errno_location@plt>
   132dc:	ldr	r2, [r5, #40]	; 0x28
   132e0:	ldr	r3, [r5, #44]	; 0x2c
   132e4:	mov	r4, r0
   132e8:	ldm	r5, {r0, r1}
   132ec:	add	r5, r5, #8
   132f0:	ldr	r6, [r4]
   132f4:	stm	sp, {r0, r1, r5}
   132f8:	mov	r0, r7
   132fc:	mov	r1, sl
   13300:	str	r2, [sp, #12]
   13304:	str	r3, [sp, #16]
   13308:	mov	r2, r9
   1330c:	mov	r3, r8
   13310:	bl	13320 <__mempcpy_chk@plt+0x22f8>
   13314:	str	r6, [r4]
   13318:	sub	sp, fp, #28
   1331c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13320:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13324:	add	fp, sp, #28
   13328:	sub	sp, sp, #156	; 0x9c
   1332c:	mov	r5, r0
   13330:	add	r0, r2, #1
   13334:	mov	r6, r1
   13338:	mov	sl, r3
   1333c:	str	r2, [fp, #-80]	; 0xffffffb0
   13340:	str	r0, [sp, #72]	; 0x48
   13344:	ldr	r0, [fp, #12]
   13348:	and	r1, r0, #1
   1334c:	str	r1, [sp, #32]
   13350:	and	r1, r0, #4
   13354:	str	r1, [sp, #28]
   13358:	ubfx	r9, r0, #1, #1
   1335c:	bl	10e9c <__ctype_get_mb_cur_max@plt>
   13360:	str	r0, [sp, #40]	; 0x28
   13364:	ldr	r0, [fp, #24]
   13368:	ldr	r7, [fp, #8]
   1336c:	mov	r1, #0
   13370:	mov	lr, #0
   13374:	str	r5, [fp, #-84]	; 0xffffffac
   13378:	str	r1, [sp, #60]	; 0x3c
   1337c:	mov	r1, #1
   13380:	str	r1, [fp, #-48]	; 0xffffffd0
   13384:	str	r0, [sp, #80]	; 0x50
   13388:	ldr	r0, [fp, #20]
   1338c:	str	r0, [sp, #76]	; 0x4c
   13390:	mov	r0, #0
   13394:	str	r0, [sp, #56]	; 0x38
   13398:	mov	r0, #0
   1339c:	str	r0, [fp, #-88]	; 0xffffffa8
   133a0:	mov	r0, #0
   133a4:	str	r0, [fp, #-72]	; 0xffffffb8
   133a8:	mov	r0, #0
   133ac:	cmp	r7, #10
   133b0:	bhi	1438c <__mempcpy_chk@plt+0x3364>
   133b4:	add	r1, pc, #24
   133b8:	ldr	r4, [fp, #-80]	; 0xffffffb0
   133bc:	mov	ip, r6
   133c0:	mov	r8, #0
   133c4:	mov	r2, #1
   133c8:	mov	r6, #0
   133cc:	mov	r3, sl
   133d0:	ldr	pc, [r1, r7, lsl #2]
   133d4:	andeq	r3, r1, r0, asr #9
   133d8:	andeq	r3, r1, r4, lsl r5
   133dc:	ldrdeq	r3, [r1], -r4
   133e0:			; <UNDEFINED> instruction: 0x000134b8
   133e4:	andeq	r3, r1, r8, lsl #10
   133e8:	andeq	r3, r1, ip, lsr r5
   133ec:	andeq	r3, r1, r4, ror #9
   133f0:	andeq	r3, r1, r0, asr #11
   133f4:	andeq	r3, r1, r0, lsl #8
   133f8:	andeq	r3, r1, r0, lsl #8
   133fc:	andeq	r3, r1, r0, asr #8
   13400:	movw	r0, #26312	; 0x66c8
   13404:	mov	r1, r7
   13408:	mov	r6, r5
   1340c:	mov	r4, ip
   13410:	mov	r5, lr
   13414:	movt	r0, #1
   13418:	bl	14af0 <__mempcpy_chk@plt+0x3ac8>
   1341c:	str	r0, [sp, #76]	; 0x4c
   13420:	movw	r0, #26314	; 0x66ca
   13424:	mov	r1, r7
   13428:	movt	r0, #1
   1342c:	bl	14af0 <__mempcpy_chk@plt+0x3ac8>
   13430:	mov	lr, r5
   13434:	mov	r5, r6
   13438:	mov	ip, r4
   1343c:	str	r0, [sp, #80]	; 0x50
   13440:	mov	r8, #0
   13444:	tst	r9, #1
   13448:	str	lr, [sp, #44]	; 0x2c
   1344c:	bne	13484 <__mempcpy_chk@plt+0x245c>
   13450:	ldr	r0, [sp, #76]	; 0x4c
   13454:	ldrb	r0, [r0]
   13458:	cmp	r0, #0
   1345c:	beq	13484 <__mempcpy_chk@plt+0x245c>
   13460:	ldr	r1, [sp, #76]	; 0x4c
   13464:	mov	r8, #0
   13468:	add	r1, r1, #1
   1346c:	cmp	r8, ip
   13470:	strbcc	r0, [r5, r8]
   13474:	ldrb	r0, [r1, r8]
   13478:	add	r8, r8, #1
   1347c:	cmp	r0, #0
   13480:	bne	1346c <__mempcpy_chk@plt+0x2444>
   13484:	ldr	r6, [sp, #80]	; 0x50
   13488:	mov	r4, ip
   1348c:	mov	r0, r6
   13490:	bl	10f44 <strlen@plt>
   13494:	mov	ip, r4
   13498:	ldr	r4, [fp, #-80]	; 0xffffffb0
   1349c:	ldr	lr, [sp, #44]	; 0x2c
   134a0:	str	r6, [fp, #-88]	; 0xffffffa8
   134a4:	str	r0, [fp, #-72]	; 0xffffffb8
   134a8:	mov	r2, #1
   134ac:	mov	r6, r9
   134b0:	mov	r3, sl
   134b4:	b	135c0 <__mempcpy_chk@plt+0x2598>
   134b8:	mov	r0, #1
   134bc:	b	13514 <__mempcpy_chk@plt+0x24ec>
   134c0:	mov	r7, #0
   134c4:	mov	r8, #0
   134c8:	mov	r2, r0
   134cc:	mov	r6, #0
   134d0:	b	135c0 <__mempcpy_chk@plt+0x2598>
   134d4:	tst	r9, #1
   134d8:	bne	13514 <__mempcpy_chk@plt+0x24ec>
   134dc:	mov	r2, r0
   134e0:	b	1356c <__mempcpy_chk@plt+0x2544>
   134e4:	mov	r0, #1
   134e8:	mov	r8, #0
   134ec:	mov	r7, #5
   134f0:	mov	r2, #1
   134f4:	str	r0, [fp, #-72]	; 0xffffffb8
   134f8:	movw	r0, #26310	; 0x66c6
   134fc:	movt	r0, #1
   13500:	str	r0, [fp, #-88]	; 0xffffffa8
   13504:	b	13534 <__mempcpy_chk@plt+0x250c>
   13508:	mov	r2, #1
   1350c:	tst	r9, #1
   13510:	beq	1356c <__mempcpy_chk@plt+0x2544>
   13514:	mov	r1, #1
   13518:	mov	r8, #0
   1351c:	mov	r7, #2
   13520:	mov	r2, r0
   13524:	str	r1, [fp, #-72]	; 0xffffffb8
   13528:	movw	r1, #26314	; 0x66ca
   1352c:	movt	r1, #1
   13530:	str	r1, [fp, #-88]	; 0xffffffa8
   13534:	mov	r6, #1
   13538:	b	135c0 <__mempcpy_chk@plt+0x2598>
   1353c:	tst	r9, #1
   13540:	beq	13590 <__mempcpy_chk@plt+0x2568>
   13544:	mov	r0, #1
   13548:	mov	r8, #0
   1354c:	mov	r2, #1
   13550:	mov	r6, #1
   13554:	mov	r7, #5
   13558:	str	r0, [fp, #-72]	; 0xffffffb8
   1355c:	movw	r0, #26310	; 0x66c6
   13560:	movt	r0, #1
   13564:	str	r0, [fp, #-88]	; 0xffffffa8
   13568:	b	135c0 <__mempcpy_chk@plt+0x2598>
   1356c:	cmp	ip, #0
   13570:	mov	r8, #1
   13574:	mov	r6, #0
   13578:	mov	r7, #2
   1357c:	movne	r0, #39	; 0x27
   13580:	strbne	r0, [r5]
   13584:	movw	r0, #26314	; 0x66ca
   13588:	movt	r0, #1
   1358c:	b	135b4 <__mempcpy_chk@plt+0x258c>
   13590:	cmp	ip, #0
   13594:	mov	r8, #1
   13598:	mov	r2, #1
   1359c:	mov	r7, #5
   135a0:	mov	r6, #0
   135a4:	movne	r0, #34	; 0x22
   135a8:	strbne	r0, [r5]
   135ac:	movw	r0, #26310	; 0x66c6
   135b0:	movt	r0, #1
   135b4:	str	r0, [fp, #-88]	; 0xffffffa8
   135b8:	mov	r0, #1
   135bc:	str	r0, [fp, #-72]	; 0xffffffb8
   135c0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   135c4:	str	r7, [fp, #-68]	; 0xffffffbc
   135c8:	str	r6, [fp, #-76]	; 0xffffffb4
   135cc:	str	r2, [sp, #84]	; 0x54
   135d0:	cmp	r0, #0
   135d4:	movwne	r0, #1
   135d8:	and	r1, r0, r6
   135dc:	and	r1, r2, r1
   135e0:	str	r1, [sp, #48]	; 0x30
   135e4:	sub	r1, r7, #2
   135e8:	clz	r1, r1
   135ec:	lsr	r1, r1, #5
   135f0:	and	r1, r1, r6
   135f4:	str	r1, [sp, #64]	; 0x40
   135f8:	subs	r1, r7, #2
   135fc:	eor	r7, r6, #1
   13600:	movwne	r1, #1
   13604:	str	r7, [sp, #92]	; 0x5c
   13608:	orr	r7, r1, r7
   1360c:	and	r1, r1, r2
   13610:	and	r0, r0, r1
   13614:	str	r7, [sp, #68]	; 0x44
   13618:	mov	r7, #0
   1361c:	str	r0, [fp, #-60]	; 0xffffffc4
   13620:	orr	r0, r1, r6
   13624:	ldr	r1, [fp, #16]
   13628:	eor	r0, r0, #1
   1362c:	clz	r1, r1
   13630:	lsr	r1, r1, #5
   13634:	orr	r0, r1, r0
   13638:	str	r0, [fp, #-64]	; 0xffffffc0
   1363c:	eor	r0, r2, #1
   13640:	str	r0, [sp, #52]	; 0x34
   13644:	cmn	r3, #1
   13648:	beq	13658 <__mempcpy_chk@plt+0x2630>
   1364c:	cmp	r7, r3
   13650:	bne	13664 <__mempcpy_chk@plt+0x263c>
   13654:	b	141c0 <__mempcpy_chk@plt+0x3198>
   13658:	ldrb	r0, [r4, r7]
   1365c:	cmp	r0, #0
   13660:	beq	141c8 <__mempcpy_chk@plt+0x31a0>
   13664:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13668:	cmp	r0, #0
   1366c:	beq	136b4 <__mempcpy_chk@plt+0x268c>
   13670:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13674:	add	r5, r7, r0
   13678:	cmp	r0, #2
   1367c:	bcc	136c8 <__mempcpy_chk@plt+0x26a0>
   13680:	mov	r0, #0
   13684:	cmn	r3, #1
   13688:	str	r0, [fp, #-56]	; 0xffffffc8
   1368c:	bne	136d0 <__mempcpy_chk@plt+0x26a8>
   13690:	mov	r0, r4
   13694:	mov	r4, ip
   13698:	mov	r6, lr
   1369c:	bl	10f44 <strlen@plt>
   136a0:	mov	ip, r4
   136a4:	ldr	r4, [fp, #-80]	; 0xffffffb0
   136a8:	mov	lr, r6
   136ac:	mov	r3, r0
   136b0:	b	136d0 <__mempcpy_chk@plt+0x26a8>
   136b4:	mov	r0, #0
   136b8:	mov	sl, r3
   136bc:	str	r0, [fp, #-56]	; 0xffffffc8
   136c0:	mov	r0, #0
   136c4:	b	1373c <__mempcpy_chk@plt+0x2714>
   136c8:	mov	r0, #0
   136cc:	str	r0, [fp, #-56]	; 0xffffffc8
   136d0:	cmp	r5, r3
   136d4:	bls	136e8 <__mempcpy_chk@plt+0x26c0>
   136d8:	ldr	r5, [fp, #-84]	; 0xffffffac
   136dc:	mov	r0, #0
   136e0:	mov	sl, r3
   136e4:	b	1373c <__mempcpy_chk@plt+0x2714>
   136e8:	ldr	r1, [fp, #-88]	; 0xffffffa8
   136ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   136f0:	add	r0, r4, r7
   136f4:	mov	r5, lr
   136f8:	mov	r6, ip
   136fc:	mov	sl, r3
   13700:	bl	10f38 <bcmp@plt>
   13704:	ldr	r2, [sp, #92]	; 0x5c
   13708:	cmp	r0, #0
   1370c:	ldr	r3, [fp, #-84]	; 0xffffffac
   13710:	mov	r1, r0
   13714:	movwne	r1, #1
   13718:	orr	r1, r1, r2
   1371c:	tst	r1, #1
   13720:	beq	1424c <__mempcpy_chk@plt+0x3224>
   13724:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13728:	clz	r0, r0
   1372c:	mov	lr, r5
   13730:	mov	ip, r6
   13734:	mov	r5, r3
   13738:	lsr	r0, r0, #5
   1373c:	str	r0, [fp, #-52]	; 0xffffffcc
   13740:	ldrb	r6, [r4, r7]
   13744:	cmp	r6, #126	; 0x7e
   13748:	bhi	13c70 <__mempcpy_chk@plt+0x2c48>
   1374c:	add	r3, pc, #16
   13750:	mov	r9, #1
   13754:	mov	r2, #110	; 0x6e
   13758:	mov	r0, #97	; 0x61
   1375c:	mov	r1, #0
   13760:	ldr	pc, [r3, r6, lsl #2]
   13764:	ldrdeq	r3, [r1], -r4
   13768:	andeq	r3, r1, r0, ror ip
   1376c:	andeq	r3, r1, r0, ror ip
   13770:	andeq	r3, r1, r0, ror ip
   13774:	andeq	r3, r1, r0, ror ip
   13778:	andeq	r3, r1, r0, ror ip
   1377c:	andeq	r3, r1, r0, ror ip
   13780:	strdeq	r3, [r1], -r0
   13784:			; <UNDEFINED> instruction: 0x00013ab4
   13788:	andeq	r3, r1, ip, lsr #21
   1378c:	andeq	r3, r1, r0, asr #21
   13790:	ldrdeq	r3, [r1], -r8
   13794:	andeq	r3, r1, r4, lsr #21
   13798:			; <UNDEFINED> instruction: 0x00013abc
   1379c:	andeq	r3, r1, r0, ror ip
   137a0:	andeq	r3, r1, r0, ror ip
   137a4:	andeq	r3, r1, r0, ror ip
   137a8:	andeq	r3, r1, r0, ror ip
   137ac:	andeq	r3, r1, r0, ror ip
   137b0:	andeq	r3, r1, r0, ror ip
   137b4:	andeq	r3, r1, r0, ror ip
   137b8:	andeq	r3, r1, r0, ror ip
   137bc:	andeq	r3, r1, r0, ror ip
   137c0:	andeq	r3, r1, r0, ror ip
   137c4:	andeq	r3, r1, r0, ror ip
   137c8:	andeq	r3, r1, r0, ror ip
   137cc:	andeq	r3, r1, r0, ror ip
   137d0:	andeq	r3, r1, r0, ror ip
   137d4:	andeq	r3, r1, r0, ror ip
   137d8:	andeq	r3, r1, r0, ror ip
   137dc:	andeq	r3, r1, r0, ror ip
   137e0:	andeq	r3, r1, r0, ror ip
   137e4:	andeq	r3, r1, r4, asr sl
   137e8:	andeq	r3, r1, r8, asr sl
   137ec:	andeq	r3, r1, r8, asr sl
   137f0:	andeq	r3, r1, ip, lsr sl
   137f4:	andeq	r3, r1, r8, asr sl
   137f8:	andeq	r3, r1, r0, ror #18
   137fc:	andeq	r3, r1, r8, asr sl
   13800:	andeq	r3, r1, r0, ror #23
   13804:	andeq	r3, r1, r8, asr sl
   13808:	andeq	r3, r1, r8, asr sl
   1380c:	andeq	r3, r1, r8, asr sl
   13810:	andeq	r3, r1, r0, ror #18
   13814:	andeq	r3, r1, r0, ror #18
   13818:	andeq	r3, r1, r0, ror #18
   1381c:	andeq	r3, r1, r0, ror #18
   13820:	andeq	r3, r1, r0, ror #18
   13824:	andeq	r3, r1, r0, ror #18
   13828:	andeq	r3, r1, r0, ror #18
   1382c:	andeq	r3, r1, r0, ror #18
   13830:	andeq	r3, r1, r0, ror #18
   13834:	andeq	r3, r1, r0, ror #18
   13838:	andeq	r3, r1, r0, ror #18
   1383c:	andeq	r3, r1, r0, ror #18
   13840:	andeq	r3, r1, r0, ror #18
   13844:	andeq	r3, r1, r0, ror #18
   13848:	andeq	r3, r1, r0, ror #18
   1384c:	andeq	r3, r1, r0, ror #18
   13850:	andeq	r3, r1, r8, asr sl
   13854:	andeq	r3, r1, r8, asr sl
   13858:	andeq	r3, r1, r8, asr sl
   1385c:	andeq	r3, r1, r8, asr sl
   13860:	andeq	r3, r1, ip, lsr #23
   13864:	andeq	r3, r1, r0, ror ip
   13868:	andeq	r3, r1, r0, ror #18
   1386c:	andeq	r3, r1, r0, ror #18
   13870:	andeq	r3, r1, r0, ror #18
   13874:	andeq	r3, r1, r0, ror #18
   13878:	andeq	r3, r1, r0, ror #18
   1387c:	andeq	r3, r1, r0, ror #18
   13880:	andeq	r3, r1, r0, ror #18
   13884:	andeq	r3, r1, r0, ror #18
   13888:	andeq	r3, r1, r0, ror #18
   1388c:	andeq	r3, r1, r0, ror #18
   13890:	andeq	r3, r1, r0, ror #18
   13894:	andeq	r3, r1, r0, ror #18
   13898:	andeq	r3, r1, r0, ror #18
   1389c:	andeq	r3, r1, r0, ror #18
   138a0:	andeq	r3, r1, r0, ror #18
   138a4:	andeq	r3, r1, r0, ror #18
   138a8:	andeq	r3, r1, r0, ror #18
   138ac:	andeq	r3, r1, r0, ror #18
   138b0:	andeq	r3, r1, r0, ror #18
   138b4:	andeq	r3, r1, r0, ror #18
   138b8:	andeq	r3, r1, r0, ror #18
   138bc:	andeq	r3, r1, r0, ror #18
   138c0:	andeq	r3, r1, r0, ror #18
   138c4:	andeq	r3, r1, r0, ror #18
   138c8:	andeq	r3, r1, r0, ror #18
   138cc:	andeq	r3, r1, r0, ror #18
   138d0:	andeq	r3, r1, r8, asr sl
   138d4:	andeq	r3, r1, r0, lsl #21
   138d8:	andeq	r3, r1, r0, ror #18
   138dc:	andeq	r3, r1, r8, asr sl
   138e0:	andeq	r3, r1, r0, ror #18
   138e4:	andeq	r3, r1, r8, asr sl
   138e8:	andeq	r3, r1, r0, ror #18
   138ec:	andeq	r3, r1, r0, ror #18
   138f0:	andeq	r3, r1, r0, ror #18
   138f4:	andeq	r3, r1, r0, ror #18
   138f8:	andeq	r3, r1, r0, ror #18
   138fc:	andeq	r3, r1, r0, ror #18
   13900:	andeq	r3, r1, r0, ror #18
   13904:	andeq	r3, r1, r0, ror #18
   13908:	andeq	r3, r1, r0, ror #18
   1390c:	andeq	r3, r1, r0, ror #18
   13910:	andeq	r3, r1, r0, ror #18
   13914:	andeq	r3, r1, r0, ror #18
   13918:	andeq	r3, r1, r0, ror #18
   1391c:	andeq	r3, r1, r0, ror #18
   13920:	andeq	r3, r1, r0, ror #18
   13924:	andeq	r3, r1, r0, ror #18
   13928:	andeq	r3, r1, r0, ror #18
   1392c:	andeq	r3, r1, r0, ror #18
   13930:	andeq	r3, r1, r0, ror #18
   13934:	andeq	r3, r1, r0, ror #18
   13938:	andeq	r3, r1, r0, ror #18
   1393c:	andeq	r3, r1, r0, ror #18
   13940:	andeq	r3, r1, r0, ror #18
   13944:	andeq	r3, r1, r0, ror #18
   13948:	andeq	r3, r1, r0, ror #18
   1394c:	andeq	r3, r1, r0, ror #18
   13950:	andeq	r3, r1, r4, lsl sl
   13954:	andeq	r3, r1, r8, asr sl
   13958:	andeq	r3, r1, r4, lsl sl
   1395c:	andeq	r3, r1, ip, lsr sl
   13960:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13964:	tst	r0, #1
   13968:	bne	13994 <__mempcpy_chk@plt+0x296c>
   1396c:	ldr	r1, [fp, #16]
   13970:	ubfx	r0, r6, #5, #3
   13974:	mov	r2, #1
   13978:	ldr	r0, [r1, r0, lsl #2]
   1397c:	and	r1, r6, #31
   13980:	tst	r0, r2, lsl r1
   13984:	beq	13994 <__mempcpy_chk@plt+0x296c>
   13988:	mov	r0, r6
   1398c:	mov	r1, r9
   13990:	b	139a8 <__mempcpy_chk@plt+0x2980>
   13994:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13998:	mov	r1, r9
   1399c:	cmp	r0, #0
   139a0:	mov	r0, r6
   139a4:	beq	140f4 <__mempcpy_chk@plt+0x30cc>
   139a8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   139ac:	tst	r2, #1
   139b0:	bne	14290 <__mempcpy_chk@plt+0x3268>
   139b4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   139b8:	subs	r2, r2, #2
   139bc:	movwne	r2, #1
   139c0:	orr	r2, r2, lr
   139c4:	tst	r2, #1
   139c8:	bne	13a00 <__mempcpy_chk@plt+0x29d8>
   139cc:	cmp	r8, ip
   139d0:	mov	lr, #1
   139d4:	movcc	r2, #39	; 0x27
   139d8:	strbcc	r2, [r5, r8]
   139dc:	add	r2, r8, #1
   139e0:	cmp	r2, ip
   139e4:	movcc	r3, #36	; 0x24
   139e8:	strbcc	r3, [r5, r2]
   139ec:	add	r2, r8, #2
   139f0:	add	r8, r8, #3
   139f4:	cmp	r2, ip
   139f8:	movcc	r3, #39	; 0x27
   139fc:	strbcc	r3, [r5, r2]
   13a00:	cmp	r8, ip
   13a04:	movcc	r2, #92	; 0x5c
   13a08:	strbcc	r2, [r5, r8]
   13a0c:	add	r8, r8, #1
   13a10:	b	14134 <__mempcpy_chk@plt+0x310c>
   13a14:	cmp	sl, #1
   13a18:	beq	13a3c <__mempcpy_chk@plt+0x2a14>
   13a1c:	mov	r9, #0
   13a20:	cmn	sl, #1
   13a24:	bne	13a48 <__mempcpy_chk@plt+0x2a20>
   13a28:	ldrb	r0, [r4, #1]
   13a2c:	cmp	r0, #0
   13a30:	beq	13a3c <__mempcpy_chk@plt+0x2a14>
   13a34:	mvn	sl, #0
   13a38:	b	13a48 <__mempcpy_chk@plt+0x2a20>
   13a3c:	mov	r9, #0
   13a40:	cmp	r7, #0
   13a44:	beq	13a54 <__mempcpy_chk@plt+0x2a2c>
   13a48:	mov	r0, #0
   13a4c:	str	r0, [fp, #-56]	; 0xffffffc8
   13a50:	b	13960 <__mempcpy_chk@plt+0x2938>
   13a54:	mov	r1, #1
   13a58:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13a5c:	cmp	r0, #2
   13a60:	bne	13a78 <__mempcpy_chk@plt+0x2a50>
   13a64:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13a68:	mov	r9, r1
   13a6c:	tst	r0, #1
   13a70:	beq	13960 <__mempcpy_chk@plt+0x2938>
   13a74:	b	14290 <__mempcpy_chk@plt+0x3268>
   13a78:	mov	r9, r1
   13a7c:	b	13960 <__mempcpy_chk@plt+0x2938>
   13a80:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13a84:	cmp	r0, #2
   13a88:	bne	13ccc <__mempcpy_chk@plt+0x2ca4>
   13a8c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13a90:	tst	r0, #1
   13a94:	bne	14290 <__mempcpy_chk@plt+0x3268>
   13a98:	mov	r0, #0
   13a9c:	str	r0, [fp, #-56]	; 0xffffffc8
   13aa0:	b	13ce4 <__mempcpy_chk@plt+0x2cbc>
   13aa4:	mov	r0, #102	; 0x66
   13aa8:	b	13cf0 <__mempcpy_chk@plt+0x2cc8>
   13aac:	mov	r2, #116	; 0x74
   13ab0:	b	13ac0 <__mempcpy_chk@plt+0x2a98>
   13ab4:	mov	r0, #98	; 0x62
   13ab8:	b	13cf0 <__mempcpy_chk@plt+0x2cc8>
   13abc:	mov	r2, #114	; 0x72
   13ac0:	ldr	r0, [sp, #68]	; 0x44
   13ac4:	tst	r0, #1
   13ac8:	mov	r0, r2
   13acc:	bne	13cf0 <__mempcpy_chk@plt+0x2cc8>
   13ad0:	b	14290 <__mempcpy_chk@plt+0x3268>
   13ad4:	ldr	r0, [sp, #84]	; 0x54
   13ad8:	tst	r0, #1
   13adc:	beq	13d10 <__mempcpy_chk@plt+0x2ce8>
   13ae0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13ae4:	tst	r0, #1
   13ae8:	bne	1437c <__mempcpy_chk@plt+0x3354>
   13aec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13af0:	mov	r2, sl
   13af4:	subs	r0, r0, #2
   13af8:	movwne	r0, #1
   13afc:	orr	r0, r0, lr
   13b00:	tst	r0, #1
   13b04:	bne	13b3c <__mempcpy_chk@plt+0x2b14>
   13b08:	cmp	r8, ip
   13b0c:	mov	lr, #1
   13b10:	movcc	r0, #39	; 0x27
   13b14:	strbcc	r0, [r5, r8]
   13b18:	add	r0, r8, #1
   13b1c:	cmp	r0, ip
   13b20:	movcc	r1, #36	; 0x24
   13b24:	strbcc	r1, [r5, r0]
   13b28:	add	r0, r8, #2
   13b2c:	add	r8, r8, #3
   13b30:	cmp	r0, ip
   13b34:	movcc	r1, #39	; 0x27
   13b38:	strbcc	r1, [r5, r0]
   13b3c:	mov	r1, #1
   13b40:	cmp	r8, ip
   13b44:	mov	r9, #0
   13b48:	mov	r6, #48	; 0x30
   13b4c:	str	r1, [fp, #-56]	; 0xffffffc8
   13b50:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13b54:	movcc	r0, #92	; 0x5c
   13b58:	strbcc	r0, [r5, r8]
   13b5c:	add	r0, r8, #1
   13b60:	cmp	r1, #2
   13b64:	beq	13e6c <__mempcpy_chk@plt+0x2e44>
   13b68:	add	r1, r7, #1
   13b6c:	cmp	r1, r2
   13b70:	bcs	13e6c <__mempcpy_chk@plt+0x2e44>
   13b74:	ldrb	r1, [r4, r1]
   13b78:	sub	r1, r1, #48	; 0x30
   13b7c:	uxtb	r1, r1
   13b80:	cmp	r1, #9
   13b84:	bhi	13e6c <__mempcpy_chk@plt+0x2e44>
   13b88:	cmp	r0, ip
   13b8c:	movcc	r1, #48	; 0x30
   13b90:	strbcc	r1, [r5, r0]
   13b94:	add	r0, r8, #2
   13b98:	add	r8, r8, #3
   13b9c:	cmp	r0, ip
   13ba0:	movcc	r1, #48	; 0x30
   13ba4:	strbcc	r1, [r5, r0]
   13ba8:	b	13960 <__mempcpy_chk@plt+0x2938>
   13bac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13bb0:	mov	r6, #63	; 0x3f
   13bb4:	cmp	r0, #5
   13bb8:	beq	13e74 <__mempcpy_chk@plt+0x2e4c>
   13bbc:	mov	r1, #0
   13bc0:	cmp	r0, #2
   13bc4:	str	r1, [fp, #-56]	; 0xffffffc8
   13bc8:	bne	13f28 <__mempcpy_chk@plt+0x2f00>
   13bcc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13bd0:	mov	r9, #0
   13bd4:	b	13a6c <__mempcpy_chk@plt+0x2a44>
   13bd8:	mov	r0, #118	; 0x76
   13bdc:	b	13cf0 <__mempcpy_chk@plt+0x2cc8>
   13be0:	mov	r0, #1
   13be4:	mov	r6, #39	; 0x27
   13be8:	str	r0, [sp, #60]	; 0x3c
   13bec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13bf0:	cmp	r0, #2
   13bf4:	bne	13c68 <__mempcpy_chk@plt+0x2c40>
   13bf8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   13bfc:	tst	r0, #1
   13c00:	bne	14290 <__mempcpy_chk@plt+0x3268>
   13c04:	ldr	r2, [sp, #56]	; 0x38
   13c08:	clz	r1, ip
   13c0c:	mov	lr, #0
   13c10:	lsr	r1, r1, #5
   13c14:	cmp	r2, #0
   13c18:	mov	r0, r2
   13c1c:	movwne	r0, #1
   13c20:	orrs	r0, r0, r1
   13c24:	moveq	r2, ip
   13c28:	moveq	ip, r0
   13c2c:	cmp	r8, ip
   13c30:	str	r2, [sp, #56]	; 0x38
   13c34:	movcc	r0, #39	; 0x27
   13c38:	strbcc	r0, [r5, r8]
   13c3c:	add	r0, r8, #1
   13c40:	cmp	r0, ip
   13c44:	movcc	r1, #92	; 0x5c
   13c48:	strbcc	r1, [r5, r0]
   13c4c:	add	r0, r8, #2
   13c50:	add	r8, r8, #3
   13c54:	cmp	r0, ip
   13c58:	movcc	r1, #39	; 0x27
   13c5c:	strbcc	r1, [r5, r0]
   13c60:	mov	r0, #0
   13c64:	str	r0, [fp, #-56]	; 0xffffffc8
   13c68:	mov	r9, #1
   13c6c:	b	13960 <__mempcpy_chk@plt+0x2938>
   13c70:	ldr	r0, [sp, #40]	; 0x28
   13c74:	str	lr, [sp, #44]	; 0x2c
   13c78:	str	ip, [sp, #88]	; 0x58
   13c7c:	cmp	r0, #1
   13c80:	bne	13d30 <__mempcpy_chk@plt+0x2d08>
   13c84:	str	sl, [sp, #36]	; 0x24
   13c88:	bl	10f14 <__ctype_b_loc@plt>
   13c8c:	ldr	r0, [r0]
   13c90:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13c94:	mov	r1, #1
   13c98:	add	r0, r0, r6, lsl #1
   13c9c:	ldrb	r0, [r0, #1]
   13ca0:	ubfx	r9, r0, #6, #1
   13ca4:	ldr	r0, [sp, #52]	; 0x34
   13ca8:	ldr	lr, [sp, #44]	; 0x2c
   13cac:	cmp	r1, #1
   13cb0:	orr	r3, r9, r0
   13cb4:	bhi	13f30 <__mempcpy_chk@plt+0x2f08>
   13cb8:	tst	r3, #1
   13cbc:	beq	13f30 <__mempcpy_chk@plt+0x2f08>
   13cc0:	ldr	sl, [sp, #36]	; 0x24
   13cc4:	ldr	ip, [sp, #88]	; 0x58
   13cc8:	b	13960 <__mempcpy_chk@plt+0x2938>
   13ccc:	ldr	r1, [sp, #48]	; 0x30
   13cd0:	mov	r0, #0
   13cd4:	str	r0, [fp, #-56]	; 0xffffffc8
   13cd8:	mov	r0, #92	; 0x5c
   13cdc:	cmp	r1, #0
   13ce0:	beq	13cf0 <__mempcpy_chk@plt+0x2cc8>
   13ce4:	mov	r6, #92	; 0x5c
   13ce8:	mov	r9, #0
   13cec:	b	140f4 <__mempcpy_chk@plt+0x30cc>
   13cf0:	mov	r1, #0
   13cf4:	mov	r9, #0
   13cf8:	str	r1, [fp, #-56]	; 0xffffffc8
   13cfc:	ldr	r1, [sp, #84]	; 0x54
   13d00:	tst	r1, #1
   13d04:	mov	r1, #0
   13d08:	beq	13960 <__mempcpy_chk@plt+0x2938>
   13d0c:	b	139a8 <__mempcpy_chk@plt+0x2980>
   13d10:	ldr	r0, [sp, #32]
   13d14:	mov	r6, #0
   13d18:	mov	r9, #0
   13d1c:	cmp	r0, #0
   13d20:	mov	r0, #0
   13d24:	str	r0, [fp, #-56]	; 0xffffffc8
   13d28:	beq	13960 <__mempcpy_chk@plt+0x2938>
   13d2c:	b	1414c <__mempcpy_chk@plt+0x3124>
   13d30:	mov	r0, #0
   13d34:	cmn	sl, #1
   13d38:	sub	r3, fp, #40	; 0x28
   13d3c:	str	r0, [fp, #-36]	; 0xffffffdc
   13d40:	str	r0, [fp, #-40]	; 0xffffffd8
   13d44:	bne	13d5c <__mempcpy_chk@plt+0x2d34>
   13d48:	mov	r0, r4
   13d4c:	bl	10f44 <strlen@plt>
   13d50:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13d54:	sub	r3, fp, #40	; 0x28
   13d58:	mov	sl, r0
   13d5c:	ldr	r0, [sp, #72]	; 0x48
   13d60:	mov	r9, #1
   13d64:	mov	r1, #0
   13d68:	str	sl, [sp, #36]	; 0x24
   13d6c:	add	r0, r0, r7
   13d70:	str	r0, [sp, #20]
   13d74:	add	r0, r1, r7
   13d78:	str	r1, [sp, #24]
   13d7c:	add	r1, r4, r0
   13d80:	mov	r4, r0
   13d84:	sub	r2, sl, r0
   13d88:	sub	r0, fp, #44	; 0x2c
   13d8c:	bl	15a2c <__mempcpy_chk@plt+0x4a04>
   13d90:	cmp	r0, #0
   13d94:	beq	141a0 <__mempcpy_chk@plt+0x3178>
   13d98:	cmn	r0, #1
   13d9c:	beq	14158 <__mempcpy_chk@plt+0x3130>
   13da0:	ldr	r2, [sp, #36]	; 0x24
   13da4:	cmn	r0, #2
   13da8:	beq	14160 <__mempcpy_chk@plt+0x3138>
   13dac:	ldr	r2, [sp, #64]	; 0x40
   13db0:	ldr	ip, [sp, #88]	; 0x58
   13db4:	ldr	r4, [sp, #84]	; 0x54
   13db8:	ldr	lr, [fp, #-48]	; 0xffffffd0
   13dbc:	cmp	r0, #2
   13dc0:	mov	r1, #0
   13dc4:	movwcc	r1, #1
   13dc8:	eor	r2, r2, #1
   13dcc:	orrs	r1, r2, r1
   13dd0:	bne	13e20 <__mempcpy_chk@plt+0x2df8>
   13dd4:	ldr	r1, [sp, #24]
   13dd8:	ldr	r2, [sp, #20]
   13ddc:	add	r1, r2, r1
   13de0:	sub	r2, r0, #1
   13de4:	ldrb	r3, [r1]
   13de8:	sub	r5, r3, #94	; 0x5e
   13dec:	cmp	r5, #30
   13df0:	bhi	13e08 <__mempcpy_chk@plt+0x2de0>
   13df4:	mov	r4, #1
   13df8:	mov	sl, #1073741829	; 0x40000005
   13dfc:	tst	sl, r4, lsl r5
   13e00:	ldr	r4, [sp, #84]	; 0x54
   13e04:	bne	14268 <__mempcpy_chk@plt+0x3240>
   13e08:	sub	r3, r3, #91	; 0x5b
   13e0c:	cmp	r3, #2
   13e10:	bcc	14268 <__mempcpy_chk@plt+0x3240>
   13e14:	add	r1, r1, #1
   13e18:	subs	r2, r2, #1
   13e1c:	bne	13de4 <__mempcpy_chk@plt+0x2dbc>
   13e20:	ldr	r5, [sp, #24]
   13e24:	str	lr, [fp, #-48]	; 0xffffffd0
   13e28:	add	r5, r0, r5
   13e2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13e30:	bl	10e78 <iswprint@plt>
   13e34:	cmp	r0, #0
   13e38:	sub	r4, fp, #40	; 0x28
   13e3c:	movwne	r0, #1
   13e40:	and	r9, r9, r0
   13e44:	mov	r0, r4
   13e48:	bl	10e3c <mbsinit@plt>
   13e4c:	mov	r1, r5
   13e50:	mov	r3, r4
   13e54:	ldr	sl, [sp, #36]	; 0x24
   13e58:	ldr	r5, [fp, #-84]	; 0xffffffac
   13e5c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   13e60:	cmp	r0, #0
   13e64:	beq	13d74 <__mempcpy_chk@plt+0x2d4c>
   13e68:	b	13ca4 <__mempcpy_chk@plt+0x2c7c>
   13e6c:	mov	r8, r0
   13e70:	b	13960 <__mempcpy_chk@plt+0x2938>
   13e74:	mov	r0, #0
   13e78:	str	r0, [fp, #-56]	; 0xffffffc8
   13e7c:	ldr	r0, [sp, #28]
   13e80:	cmp	r0, #0
   13e84:	beq	13f28 <__mempcpy_chk@plt+0x2f00>
   13e88:	add	r0, r7, #2
   13e8c:	mov	r1, sl
   13e90:	cmp	r0, sl
   13e94:	bcs	13f28 <__mempcpy_chk@plt+0x2f00>
   13e98:	add	r1, r7, r4
   13e9c:	ldrb	r1, [r1, #1]
   13ea0:	cmp	r1, #63	; 0x3f
   13ea4:	bne	13f28 <__mempcpy_chk@plt+0x2f00>
   13ea8:	ldrb	r9, [r4, r0]
   13eac:	sub	r2, r9, #33	; 0x21
   13eb0:	cmp	r2, #29
   13eb4:	bhi	13f28 <__mempcpy_chk@plt+0x2f00>
   13eb8:	mov	r1, r4
   13ebc:	movw	r4, #20929	; 0x51c1
   13ec0:	mov	r3, #1
   13ec4:	movt	r4, #14336	; 0x3800
   13ec8:	tst	r4, r3, lsl r2
   13ecc:	beq	141b4 <__mempcpy_chk@plt+0x318c>
   13ed0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13ed4:	tst	r2, #1
   13ed8:	bne	14384 <__mempcpy_chk@plt+0x335c>
   13edc:	cmp	r8, ip
   13ee0:	mov	r4, r1
   13ee4:	mov	r7, r0
   13ee8:	mov	r6, r9
   13eec:	movcc	r2, #63	; 0x3f
   13ef0:	strbcc	r2, [r5, r8]
   13ef4:	add	r2, r8, #1
   13ef8:	cmp	r2, ip
   13efc:	movcc	r3, #34	; 0x22
   13f00:	strbcc	r3, [r5, r2]
   13f04:	add	r2, r8, #2
   13f08:	cmp	r2, ip
   13f0c:	movcc	r3, #34	; 0x22
   13f10:	strbcc	r3, [r5, r2]
   13f14:	add	r2, r8, #3
   13f18:	add	r8, r8, #4
   13f1c:	cmp	r2, ip
   13f20:	movcc	r3, #63	; 0x3f
   13f24:	strbcc	r3, [r5, r2]
   13f28:	mov	r9, #0
   13f2c:	b	13960 <__mempcpy_chk@plt+0x2938>
   13f30:	ldr	sl, [sp, #36]	; 0x24
   13f34:	add	r0, r1, r7
   13f38:	mov	r2, #0
   13f3c:	str	r3, [sp, #24]
   13f40:	str	r0, [fp, #-56]	; 0xffffffc8
   13f44:	tst	r3, #1
   13f48:	beq	13f74 <__mempcpy_chk@plt+0x2f4c>
   13f4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13f50:	tst	r0, #1
   13f54:	beq	1403c <__mempcpy_chk@plt+0x3014>
   13f58:	ldr	r1, [sp, #88]	; 0x58
   13f5c:	mov	r0, r3
   13f60:	cmp	r8, r1
   13f64:	movcc	r1, #92	; 0x5c
   13f68:	strbcc	r1, [r5, r8]
   13f6c:	add	r8, r8, #1
   13f70:	b	14040 <__mempcpy_chk@plt+0x3018>
   13f74:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13f78:	tst	r1, #1
   13f7c:	bne	1428c <__mempcpy_chk@plt+0x3264>
   13f80:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13f84:	subs	r2, r1, #2
   13f88:	movwne	r2, #1
   13f8c:	orr	r2, r2, lr
   13f90:	tst	r2, #1
   13f94:	bne	13fd8 <__mempcpy_chk@plt+0x2fb0>
   13f98:	ldr	r1, [sp, #88]	; 0x58
   13f9c:	add	r2, r8, #1
   13fa0:	mov	lr, #1
   13fa4:	cmp	r8, r1
   13fa8:	movcc	r1, #39	; 0x27
   13fac:	strbcc	r1, [r5, r8]
   13fb0:	ldr	r1, [sp, #88]	; 0x58
   13fb4:	cmp	r2, r1
   13fb8:	movcc	r1, #36	; 0x24
   13fbc:	strbcc	r1, [r5, r2]
   13fc0:	ldr	r1, [sp, #88]	; 0x58
   13fc4:	add	r2, r8, #2
   13fc8:	add	r8, r8, #3
   13fcc:	cmp	r2, r1
   13fd0:	movcc	r1, #39	; 0x27
   13fd4:	strbcc	r1, [r5, r2]
   13fd8:	ldr	r1, [sp, #88]	; 0x58
   13fdc:	add	r2, r8, #1
   13fe0:	mov	r0, r3
   13fe4:	cmp	r8, r1
   13fe8:	movcc	r1, #92	; 0x5c
   13fec:	strbcc	r1, [r5, r8]
   13ff0:	ldr	r1, [sp, #88]	; 0x58
   13ff4:	cmp	r2, r1
   13ff8:	bcs	1400c <__mempcpy_chk@plt+0x2fe4>
   13ffc:	uxtb	r3, r6
   14000:	mov	r1, #48	; 0x30
   14004:	orr	r3, r1, r3, lsr #6
   14008:	strb	r3, [r5, r2]
   1400c:	ldr	r1, [sp, #88]	; 0x58
   14010:	add	r2, r8, #2
   14014:	add	r8, r8, #3
   14018:	cmp	r2, r1
   1401c:	lsrcc	r3, r6, #3
   14020:	movcc	r1, #6
   14024:	bficc	r3, r1, #3, #29
   14028:	mov	r1, #6
   1402c:	bfi	r6, r1, #3, #29
   14030:	strbcc	r3, [r5, r2]
   14034:	mov	r2, #1
   14038:	b	14048 <__mempcpy_chk@plt+0x3020>
   1403c:	mov	r0, r3
   14040:	mov	r1, #0
   14044:	str	r1, [fp, #-52]	; 0xffffffcc
   14048:	mov	ip, r2
   1404c:	and	r1, r2, #1
   14050:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14054:	add	r3, r7, #1
   14058:	cmp	r2, r3
   1405c:	bls	140e4 <__mempcpy_chk@plt+0x30bc>
   14060:	cmp	r1, #0
   14064:	mvn	r5, lr
   14068:	movwne	r1, #1
   1406c:	orr	r5, r5, r1
   14070:	tst	r5, #1
   14074:	bne	140b8 <__mempcpy_chk@plt+0x3090>
   14078:	ldr	r1, [sp, #88]	; 0x58
   1407c:	ldr	r5, [fp, #-84]	; 0xffffffac
   14080:	mov	r2, r4
   14084:	ldr	r4, [sp, #88]	; 0x58
   14088:	ldr	r0, [sp, #24]
   1408c:	mov	lr, #0
   14090:	cmp	r8, r1
   14094:	movcc	r1, #39	; 0x27
   14098:	strbcc	r1, [r5, r8]
   1409c:	add	r1, r8, #1
   140a0:	add	r8, r8, #2
   140a4:	cmp	r1, r4
   140a8:	movcc	r4, #39	; 0x27
   140ac:	strbcc	r4, [r5, r1]
   140b0:	mov	r4, r2
   140b4:	b	140bc <__mempcpy_chk@plt+0x3094>
   140b8:	ldr	r5, [fp, #-84]	; 0xffffffac
   140bc:	ldr	r1, [sp, #88]	; 0x58
   140c0:	mov	r2, ip
   140c4:	cmp	r8, r1
   140c8:	ldr	r1, [sp, #72]	; 0x48
   140cc:	strbcc	r6, [r5, r8]
   140d0:	add	r8, r8, #1
   140d4:	ldrb	r6, [r1, r7]
   140d8:	mov	r7, r3
   140dc:	mov	r3, r0
   140e0:	b	13f44 <__mempcpy_chk@plt+0x2f1c>
   140e4:	ldr	ip, [sp, #88]	; 0x58
   140e8:	cmp	r1, #0
   140ec:	movwne	r1, #1
   140f0:	str	r1, [fp, #-56]	; 0xffffffc8
   140f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   140f8:	cmp	r0, #0
   140fc:	bne	1412c <__mempcpy_chk@plt+0x3104>
   14100:	tst	lr, #1
   14104:	beq	1412c <__mempcpy_chk@plt+0x3104>
   14108:	cmp	r8, ip
   1410c:	mov	lr, #0
   14110:	movcc	r0, #39	; 0x27
   14114:	strbcc	r0, [r5, r8]
   14118:	add	r0, r8, #1
   1411c:	add	r8, r8, #2
   14120:	cmp	r0, ip
   14124:	movcc	r1, #39	; 0x27
   14128:	strbcc	r1, [r5, r0]
   1412c:	mov	r1, r9
   14130:	mov	r0, r6
   14134:	cmp	r8, ip
   14138:	strbcc	r0, [r5, r8]
   1413c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14140:	add	r8, r8, #1
   14144:	and	r0, r0, r1
   14148:	str	r0, [fp, #-48]	; 0xffffffd0
   1414c:	mov	r3, sl
   14150:	add	r7, r7, #1
   14154:	b	13644 <__mempcpy_chk@plt+0x261c>
   14158:	mov	r9, #0
   1415c:	b	141a0 <__mempcpy_chk@plt+0x3178>
   14160:	mov	r9, #0
   14164:	cmp	r2, r4
   14168:	bls	141a0 <__mempcpy_chk@plt+0x3178>
   1416c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14170:	ldr	r1, [sp, #24]
   14174:	add	r0, r4, r7
   14178:	mov	r3, r1
   1417c:	ldrb	r1, [r0, r1]
   14180:	cmp	r1, #0
   14184:	beq	141ac <__mempcpy_chk@plt+0x3184>
   14188:	add	r3, r3, #1
   1418c:	add	r1, r7, r3
   14190:	cmp	r1, r2
   14194:	mov	r1, r3
   14198:	bcc	14178 <__mempcpy_chk@plt+0x3150>
   1419c:	b	13ca4 <__mempcpy_chk@plt+0x2c7c>
   141a0:	ldr	r4, [fp, #-80]	; 0xffffffb0
   141a4:	ldr	r1, [sp, #24]
   141a8:	b	13ca4 <__mempcpy_chk@plt+0x2c7c>
   141ac:	mov	r1, r3
   141b0:	b	13ca4 <__mempcpy_chk@plt+0x2c7c>
   141b4:	mov	r9, #0
   141b8:	mov	r4, r1
   141bc:	b	13960 <__mempcpy_chk@plt+0x2938>
   141c0:	mov	sl, r7
   141c4:	b	141cc <__mempcpy_chk@plt+0x31a4>
   141c8:	mvn	sl, #0
   141cc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   141d0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   141d4:	eor	r0, r1, #2
   141d8:	orr	r0, r0, r8
   141dc:	clz	r0, r0
   141e0:	lsr	r0, r0, #5
   141e4:	tst	r2, r0
   141e8:	bne	14290 <__mempcpy_chk@plt+0x3268>
   141ec:	subs	r0, r1, #2
   141f0:	movwne	r0, #1
   141f4:	orr	r0, r2, r0
   141f8:	tst	r0, #1
   141fc:	ldreq	r0, [sp, #60]	; 0x3c
   14200:	ldreq	r1, [fp, #-48]	; 0xffffffd0
   14204:	eoreq	r0, r0, #1
   14208:	tsteq	r0, #1
   1420c:	bne	14324 <__mempcpy_chk@plt+0x32fc>
   14210:	tst	r1, #1
   14214:	bne	142f0 <__mempcpy_chk@plt+0x32c8>
   14218:	ldr	r6, [sp, #56]	; 0x38
   1421c:	mov	r9, #0
   14220:	cmp	r6, #0
   14224:	beq	1431c <__mempcpy_chk@plt+0x32f4>
   14228:	ldr	r0, [sp, #84]	; 0x54
   1422c:	mov	r1, #0
   14230:	mov	r7, #2
   14234:	cmp	ip, #0
   14238:	str	r1, [fp, #-48]	; 0xffffffd0
   1423c:	mov	r1, #0
   14240:	str	r1, [fp, #-76]	; 0xffffffb4
   14244:	beq	133ac <__mempcpy_chk@plt+0x2384>
   14248:	b	14324 <__mempcpy_chk@plt+0x32fc>
   1424c:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14250:	ldr	r1, [fp, #12]
   14254:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14258:	mov	r5, r3
   1425c:	mov	ip, r6
   14260:	mov	r3, sl
   14264:	b	142b4 <__mempcpy_chk@plt+0x328c>
   14268:	tst	r4, #1
   1426c:	ldr	r5, [fp, #-84]	; 0xffffffac
   14270:	ldr	r4, [fp, #-80]	; 0xffffffb0
   14274:	ldr	r1, [fp, #12]
   14278:	ldr	r3, [sp, #36]	; 0x24
   1427c:	mov	r0, #2
   14280:	movwne	r0, #4
   14284:	mov	r2, r0
   14288:	b	142b4 <__mempcpy_chk@plt+0x328c>
   1428c:	ldr	ip, [sp, #88]	; 0x58
   14290:	ldr	r1, [sp, #84]	; 0x54
   14294:	mov	r0, #2
   14298:	tst	r1, #1
   1429c:	movwne	r0, #4
   142a0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   142a4:	ldr	r1, [fp, #12]
   142a8:	mov	r3, sl
   142ac:	cmp	r2, #2
   142b0:	moveq	r2, r0
   142b4:	mov	r0, #0
   142b8:	bic	r1, r1, #2
   142bc:	str	r2, [sp]
   142c0:	mov	r2, r4
   142c4:	str	r0, [sp, #8]
   142c8:	ldr	r0, [sp, #76]	; 0x4c
   142cc:	str	r1, [sp, #4]
   142d0:	mov	r1, ip
   142d4:	str	r0, [sp, #12]
   142d8:	ldr	r0, [sp, #80]	; 0x50
   142dc:	str	r0, [sp, #16]
   142e0:	mov	r0, r5
   142e4:	bl	13320 <__mempcpy_chk@plt+0x22f8>
   142e8:	mov	r8, r0
   142ec:	b	14370 <__mempcpy_chk@plt+0x3348>
   142f0:	mov	r0, #5
   142f4:	ldr	r1, [sp, #56]	; 0x38
   142f8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   142fc:	mov	r3, sl
   14300:	str	r0, [sp]
   14304:	ldr	r0, [fp, #12]
   14308:	str	r0, [sp, #4]
   1430c:	ldr	r0, [fp, #16]
   14310:	str	r0, [sp, #8]
   14314:	ldr	r0, [sp, #76]	; 0x4c
   14318:	b	142d4 <__mempcpy_chk@plt+0x32ac>
   1431c:	mov	r0, #0
   14320:	str	r0, [fp, #-76]	; 0xffffffb4
   14324:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14328:	cmp	r1, #0
   1432c:	beq	14364 <__mempcpy_chk@plt+0x333c>
   14330:	ldr	r0, [fp, #-76]	; 0xffffffb4
   14334:	tst	r0, #1
   14338:	bne	14364 <__mempcpy_chk@plt+0x333c>
   1433c:	ldrb	r0, [r1]
   14340:	cmp	r0, #0
   14344:	beq	14364 <__mempcpy_chk@plt+0x333c>
   14348:	add	r1, r1, #1
   1434c:	cmp	r8, ip
   14350:	strbcc	r0, [r5, r8]
   14354:	add	r8, r8, #1
   14358:	ldrb	r0, [r1], #1
   1435c:	cmp	r0, #0
   14360:	bne	1434c <__mempcpy_chk@plt+0x3324>
   14364:	cmp	r8, ip
   14368:	movcc	r0, #0
   1436c:	strbcc	r0, [r5, r8]
   14370:	mov	r0, r8
   14374:	sub	sp, fp, #28
   14378:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1437c:	mov	r0, #4
   14380:	b	142a0 <__mempcpy_chk@plt+0x3278>
   14384:	mov	r4, r1
   14388:	b	14290 <__mempcpy_chk@plt+0x3268>
   1438c:	bl	11004 <abort@plt>
   14390:	mov	r3, r2
   14394:	mov	r2, #0
   14398:	b	1439c <__mempcpy_chk@plt+0x3374>
   1439c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   143a0:	add	fp, sp, #28
   143a4:	sub	sp, sp, #36	; 0x24
   143a8:	movw	r8, #29016	; 0x7158
   143ac:	cmp	r3, #0
   143b0:	mov	r4, r2
   143b4:	str	r2, [sp, #24]
   143b8:	mov	r5, r1
   143bc:	mov	r6, r0
   143c0:	str	r0, [sp, #20]
   143c4:	movt	r8, #2
   143c8:	movne	r8, r3
   143cc:	bl	10f50 <__errno_location@plt>
   143d0:	str	r0, [sp, #28]
   143d4:	ldr	r1, [r8, #40]	; 0x28
   143d8:	ldr	r2, [r8, #44]	; 0x2c
   143dc:	ldr	r7, [r0]
   143e0:	cmp	r4, #0
   143e4:	add	sl, r8, #8
   143e8:	mov	r0, #0
   143ec:	ldm	r8, {r3, r9}
   143f0:	orreq	r9, r9, #1
   143f4:	stm	sp, {r3, r9, sl}
   143f8:	str	r1, [sp, #12]
   143fc:	str	r2, [sp, #16]
   14400:	mov	r1, #0
   14404:	mov	r2, r6
   14408:	mov	r3, r5
   1440c:	str	r7, [sp, #32]
   14410:	mov	r7, r5
   14414:	bl	13320 <__mempcpy_chk@plt+0x22f8>
   14418:	add	r4, r0, #1
   1441c:	mov	r5, r0
   14420:	mov	r0, r4
   14424:	bl	15288 <__mempcpy_chk@plt+0x4260>
   14428:	mov	r6, r0
   1442c:	ldr	r0, [r8]
   14430:	ldr	r2, [r8, #44]	; 0x2c
   14434:	ldr	r1, [r8, #40]	; 0x28
   14438:	mov	r3, r7
   1443c:	stm	sp, {r0, r9, sl}
   14440:	str	r2, [sp, #16]
   14444:	ldr	r2, [sp, #20]
   14448:	str	r1, [sp, #12]
   1444c:	mov	r0, r6
   14450:	mov	r1, r4
   14454:	bl	13320 <__mempcpy_chk@plt+0x22f8>
   14458:	ldr	r0, [sp, #24]
   1445c:	ldr	r1, [sp, #32]
   14460:	ldr	r2, [sp, #28]
   14464:	cmp	r0, #0
   14468:	str	r1, [r2]
   1446c:	strne	r5, [r0]
   14470:	mov	r0, r6
   14474:	sub	sp, fp, #28
   14478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1447c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14480:	add	fp, sp, #24
   14484:	movw	r5, #28916	; 0x70f4
   14488:	movw	r8, #28912	; 0x70f0
   1448c:	movt	r5, #2
   14490:	movt	r8, #2
   14494:	ldr	r0, [r5]
   14498:	ldr	r4, [r8]
   1449c:	cmp	r0, #2
   144a0:	blt	144cc <__mempcpy_chk@plt+0x34a4>
   144a4:	add	r7, r4, #12
   144a8:	mov	r6, #0
   144ac:	ldr	r0, [r7, r6, lsl #3]
   144b0:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   144b4:	ldr	r1, [r5]
   144b8:	add	r2, r6, #2
   144bc:	add	r0, r6, #1
   144c0:	mov	r6, r0
   144c4:	cmp	r2, r1
   144c8:	blt	144ac <__mempcpy_chk@plt+0x3484>
   144cc:	ldr	r0, [r4, #4]
   144d0:	movw	r9, #29064	; 0x7188
   144d4:	movw	r7, #28920	; 0x70f8
   144d8:	movt	r9, #2
   144dc:	movt	r7, #2
   144e0:	cmp	r0, r9
   144e4:	beq	144f4 <__mempcpy_chk@plt+0x34cc>
   144e8:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   144ec:	mov	r0, #256	; 0x100
   144f0:	stm	r7, {r0, r9}
   144f4:	cmp	r4, r7
   144f8:	beq	14508 <__mempcpy_chk@plt+0x34e0>
   144fc:	mov	r0, r4
   14500:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   14504:	str	r7, [r8]
   14508:	mov	r0, #1
   1450c:	str	r0, [r5]
   14510:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14514:	movw	r3, #29016	; 0x7158
   14518:	mvn	r2, #0
   1451c:	movt	r3, #2
   14520:	b	14524 <__mempcpy_chk@plt+0x34fc>
   14524:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14528:	add	fp, sp, #28
   1452c:	sub	sp, sp, #44	; 0x2c
   14530:	mov	r7, r3
   14534:	str	r2, [sp, #36]	; 0x24
   14538:	str	r1, [sp, #32]
   1453c:	mov	r5, r0
   14540:	bl	10f50 <__errno_location@plt>
   14544:	cmp	r5, #0
   14548:	bmi	146b8 <__mempcpy_chk@plt+0x3690>
   1454c:	cmn	r5, #-2147483647	; 0x80000001
   14550:	beq	146b8 <__mempcpy_chk@plt+0x3690>
   14554:	movw	r8, #28916	; 0x70f4
   14558:	movw	r4, #28912	; 0x70f0
   1455c:	str	r0, [sp, #28]
   14560:	ldr	r0, [r0]
   14564:	movt	r8, #2
   14568:	movt	r4, #2
   1456c:	ldr	r1, [r8]
   14570:	ldr	r6, [r4]
   14574:	str	r0, [sp, #24]
   14578:	cmp	r1, r5
   1457c:	ble	14588 <__mempcpy_chk@plt+0x3560>
   14580:	mov	sl, r6
   14584:	b	145f4 <__mempcpy_chk@plt+0x35cc>
   14588:	movw	r9, #28920	; 0x70f8
   1458c:	mov	r0, #8
   14590:	str	r1, [fp, #-32]	; 0xffffffe0
   14594:	sub	r1, r5, r1
   14598:	mvn	r3, #-2147483648	; 0x80000000
   1459c:	movt	r9, #2
   145a0:	str	r0, [sp]
   145a4:	add	r2, r1, #1
   145a8:	sub	r1, fp, #32
   145ac:	subs	r0, r6, r9
   145b0:	movne	r0, r6
   145b4:	bl	153b8 <__mempcpy_chk@plt+0x4390>
   145b8:	mov	sl, r0
   145bc:	cmp	r6, r9
   145c0:	str	r0, [r4]
   145c4:	bne	145d0 <__mempcpy_chk@plt+0x35a8>
   145c8:	ldrd	r0, [r9]
   145cc:	stm	sl, {r0, r1}
   145d0:	ldr	r1, [r8]
   145d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   145d8:	add	r0, sl, r1, lsl #3
   145dc:	sub	r1, r2, r1
   145e0:	lsl	r2, r1, #3
   145e4:	mov	r1, #0
   145e8:	bl	10f68 <memset@plt>
   145ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   145f0:	str	r0, [r8]
   145f4:	mov	r9, sl
   145f8:	ldm	r7, {r0, r1}
   145fc:	orr	r8, r1, #1
   14600:	add	r1, r7, #8
   14604:	ldr	r2, [r7, #40]	; 0x28
   14608:	ldr	r3, [r7, #44]	; 0x2c
   1460c:	ldr	r6, [r9, r5, lsl #3]!
   14610:	str	r1, [sp, #20]
   14614:	ldr	r4, [r9, #4]!
   14618:	stm	sp, {r0, r8}
   1461c:	add	r0, sp, #8
   14620:	stm	r0, {r1, r2, r3}
   14624:	ldr	r2, [sp, #32]
   14628:	ldr	r3, [sp, #36]	; 0x24
   1462c:	mov	r1, r6
   14630:	mov	r0, r4
   14634:	bl	13320 <__mempcpy_chk@plt+0x22f8>
   14638:	cmp	r6, r0
   1463c:	bhi	146a0 <__mempcpy_chk@plt+0x3678>
   14640:	add	r6, r0, #1
   14644:	movw	r0, #29064	; 0x7188
   14648:	movt	r0, #2
   1464c:	str	r6, [sl, r5, lsl #3]
   14650:	cmp	r4, r0
   14654:	beq	14660 <__mempcpy_chk@plt+0x3638>
   14658:	mov	r0, r4
   1465c:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   14660:	mov	r0, r6
   14664:	bl	15288 <__mempcpy_chk@plt+0x4260>
   14668:	str	r0, [r9]
   1466c:	mov	r4, r0
   14670:	add	r3, sp, #8
   14674:	ldr	r0, [r7]
   14678:	ldr	r1, [r7, #40]	; 0x28
   1467c:	ldr	r2, [r7, #44]	; 0x2c
   14680:	stm	sp, {r0, r8}
   14684:	ldr	r0, [sp, #20]
   14688:	stm	r3, {r0, r1, r2}
   1468c:	ldr	r2, [sp, #32]
   14690:	ldr	r3, [sp, #36]	; 0x24
   14694:	mov	r0, r4
   14698:	mov	r1, r6
   1469c:	bl	13320 <__mempcpy_chk@plt+0x22f8>
   146a0:	ldr	r0, [sp, #28]
   146a4:	ldr	r1, [sp, #24]
   146a8:	str	r1, [r0]
   146ac:	mov	r0, r4
   146b0:	sub	sp, fp, #28
   146b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   146b8:	bl	11004 <abort@plt>
   146bc:	movw	r3, #29016	; 0x7158
   146c0:	movt	r3, #2
   146c4:	b	14524 <__mempcpy_chk@plt+0x34fc>
   146c8:	movw	r3, #29016	; 0x7158
   146cc:	mov	r1, r0
   146d0:	mov	r0, #0
   146d4:	mvn	r2, #0
   146d8:	movt	r3, #2
   146dc:	b	14524 <__mempcpy_chk@plt+0x34fc>
   146e0:	movw	r3, #29016	; 0x7158
   146e4:	mov	r2, r1
   146e8:	mov	r1, r0
   146ec:	mov	r0, #0
   146f0:	movt	r3, #2
   146f4:	b	14524 <__mempcpy_chk@plt+0x34fc>
   146f8:	push	{fp, lr}
   146fc:	mov	fp, sp
   14700:	sub	sp, sp, #48	; 0x30
   14704:	vmov.i32	q8, #0	; 0x00000000
   14708:	mov	ip, #32
   1470c:	mov	r3, sp
   14710:	mov	lr, r2
   14714:	cmp	r1, #10
   14718:	add	r2, r3, #16
   1471c:	vst1.64	{d16-d17}, [r3], ip
   14720:	vst1.64	{d16-d17}, [r2]
   14724:	vst1.64	{d16-d17}, [r3]
   14728:	beq	14748 <__mempcpy_chk@plt+0x3720>
   1472c:	str	r1, [sp]
   14730:	mov	r3, sp
   14734:	mov	r1, lr
   14738:	mvn	r2, #0
   1473c:	bl	14524 <__mempcpy_chk@plt+0x34fc>
   14740:	mov	sp, fp
   14744:	pop	{fp, pc}
   14748:	bl	11004 <abort@plt>
   1474c:	push	{r4, sl, fp, lr}
   14750:	add	fp, sp, #8
   14754:	sub	sp, sp, #48	; 0x30
   14758:	vmov.i32	q8, #0	; 0x00000000
   1475c:	mov	ip, r3
   14760:	mov	r3, sp
   14764:	mov	lr, #32
   14768:	cmp	r1, #10
   1476c:	add	r4, r3, #16
   14770:	vst1.64	{d16-d17}, [r3], lr
   14774:	vst1.64	{d16-d17}, [r4]
   14778:	vst1.64	{d16-d17}, [r3]
   1477c:	beq	1479c <__mempcpy_chk@plt+0x3774>
   14780:	str	r1, [sp]
   14784:	mov	r1, r2
   14788:	mov	r3, sp
   1478c:	mov	r2, ip
   14790:	bl	14524 <__mempcpy_chk@plt+0x34fc>
   14794:	sub	sp, fp, #8
   14798:	pop	{r4, sl, fp, pc}
   1479c:	bl	11004 <abort@plt>
   147a0:	mov	r2, r1
   147a4:	mov	r1, r0
   147a8:	mov	r0, #0
   147ac:	b	146f8 <__mempcpy_chk@plt+0x36d0>
   147b0:	mov	r3, r2
   147b4:	mov	r2, r1
   147b8:	mov	r1, r0
   147bc:	mov	r0, #0
   147c0:	b	1474c <__mempcpy_chk@plt+0x3724>
   147c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   147c8:	add	fp, sp, #24
   147cc:	sub	sp, sp, #48	; 0x30
   147d0:	movw	r8, #29016	; 0x7158
   147d4:	mov	lr, r0
   147d8:	mov	r3, sp
   147dc:	mov	ip, r1
   147e0:	movt	r8, #2
   147e4:	mov	r1, r3
   147e8:	ldm	r8!, {r0, r4, r5, r6, r7, r9}
   147ec:	stmia	r1!, {r0, r4, r5, r6, r7, r9}
   147f0:	ldm	r8, {r0, r4, r5, r6, r7, r9}
   147f4:	stm	r1, {r0, r4, r5, r6, r7, r9}
   147f8:	ubfx	r0, r2, #5, #3
   147fc:	and	r2, r2, #31
   14800:	mov	r4, #1
   14804:	add	r0, r3, r0, lsl #2
   14808:	ldr	r1, [r0, #8]
   1480c:	bic	r4, r4, r1, lsr r2
   14810:	eor	r1, r1, r4, lsl r2
   14814:	mov	r2, ip
   14818:	str	r1, [r0, #8]
   1481c:	mov	r0, #0
   14820:	mov	r1, lr
   14824:	bl	14524 <__mempcpy_chk@plt+0x34fc>
   14828:	sub	sp, fp, #24
   1482c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14830:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14834:	add	fp, sp, #24
   14838:	sub	sp, sp, #48	; 0x30
   1483c:	movw	lr, #29016	; 0x7158
   14840:	mov	ip, r0
   14844:	mov	r3, sp
   14848:	movt	lr, #2
   1484c:	mov	r2, r3
   14850:	ldm	lr!, {r0, r4, r5, r6, r7, r8}
   14854:	stmia	r2!, {r0, r4, r5, r6, r7, r8}
   14858:	ldm	lr, {r0, r4, r5, r6, r7, r8}
   1485c:	stm	r2, {r0, r4, r5, r6, r7, r8}
   14860:	ubfx	r0, r1, #5, #3
   14864:	and	r1, r1, #31
   14868:	mov	r7, #1
   1486c:	add	r0, r3, r0, lsl #2
   14870:	ldr	r2, [r0, #8]
   14874:	bic	r7, r7, r2, lsr r1
   14878:	eor	r1, r2, r7, lsl r1
   1487c:	mvn	r2, #0
   14880:	str	r1, [r0, #8]
   14884:	mov	r0, #0
   14888:	mov	r1, ip
   1488c:	bl	14524 <__mempcpy_chk@plt+0x34fc>
   14890:	sub	sp, fp, #24
   14894:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14898:	push	{r4, r5, r6, r7, fp, lr}
   1489c:	add	fp, sp, #16
   148a0:	sub	sp, sp, #48	; 0x30
   148a4:	movw	lr, #29016	; 0x7158
   148a8:	mov	ip, r0
   148ac:	mov	r3, sp
   148b0:	movt	lr, #2
   148b4:	mov	r2, r3
   148b8:	ldm	lr!, {r0, r1, r4, r5, r6, r7}
   148bc:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   148c0:	ldm	lr, {r0, r1, r4, r5, r6, r7}
   148c4:	stm	r2, {r0, r1, r4, r5, r6, r7}
   148c8:	mov	r1, ip
   148cc:	mvn	r2, #0
   148d0:	ldr	r0, [sp, #12]
   148d4:	orr	r0, r0, #67108864	; 0x4000000
   148d8:	str	r0, [sp, #12]
   148dc:	mov	r0, #0
   148e0:	bl	14524 <__mempcpy_chk@plt+0x34fc>
   148e4:	sub	sp, fp, #16
   148e8:	pop	{r4, r5, r6, r7, fp, pc}
   148ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   148f0:	add	fp, sp, #24
   148f4:	sub	sp, sp, #48	; 0x30
   148f8:	movw	r8, #29016	; 0x7158
   148fc:	mov	ip, r1
   14900:	mov	lr, r0
   14904:	mov	r3, sp
   14908:	movt	r8, #2
   1490c:	mov	r2, r3
   14910:	ldm	r8!, {r0, r1, r4, r5, r6, r7}
   14914:	stmia	r2!, {r0, r1, r4, r5, r6, r7}
   14918:	ldm	r8, {r0, r1, r4, r5, r6, r7}
   1491c:	stm	r2, {r0, r1, r4, r5, r6, r7}
   14920:	mov	r1, lr
   14924:	mov	r2, ip
   14928:	ldr	r0, [sp, #12]
   1492c:	orr	r0, r0, #67108864	; 0x4000000
   14930:	str	r0, [sp, #12]
   14934:	mov	r0, #0
   14938:	bl	14524 <__mempcpy_chk@plt+0x34fc>
   1493c:	sub	sp, fp, #24
   14940:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14944:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14948:	add	fp, sp, #24
   1494c:	sub	sp, sp, #96	; 0x60
   14950:	vmov.i32	q8, #0	; 0x00000000
   14954:	mov	lr, sp
   14958:	mov	ip, r2
   1495c:	cmp	r1, #10
   14960:	add	r3, lr, #16
   14964:	mov	r2, lr
   14968:	vst1.64	{d16-d17}, [r3]
   1496c:	mov	r3, #28
   14970:	vst1.64	{d16-d17}, [r2], r3
   14974:	vst1.32	{d16-d17}, [r2]
   14978:	beq	149b8 <__mempcpy_chk@plt+0x3990>
   1497c:	str	r1, [sp, #48]	; 0x30
   14980:	add	r3, sp, #48	; 0x30
   14984:	ldm	lr!, {r2, r4, r5, r6, r7}
   14988:	add	r1, r3, #4
   1498c:	stmia	r1!, {r2, r4, r5, r6, r7}
   14990:	ldm	lr, {r2, r4, r5, r6, r7, r8}
   14994:	stm	r1, {r2, r4, r5, r6, r7, r8}
   14998:	mvn	r2, #0
   1499c:	ldr	r1, [sp, #60]	; 0x3c
   149a0:	orr	r1, r1, #67108864	; 0x4000000
   149a4:	str	r1, [sp, #60]	; 0x3c
   149a8:	mov	r1, ip
   149ac:	bl	14524 <__mempcpy_chk@plt+0x34fc>
   149b0:	sub	sp, fp, #24
   149b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   149b8:	bl	11004 <abort@plt>
   149bc:	push	{fp, lr}
   149c0:	mov	fp, sp
   149c4:	sub	sp, sp, #8
   149c8:	mvn	ip, #0
   149cc:	str	ip, [sp]
   149d0:	bl	149dc <__mempcpy_chk@plt+0x39b4>
   149d4:	mov	sp, fp
   149d8:	pop	{fp, pc}
   149dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   149e0:	add	fp, sp, #24
   149e4:	sub	sp, sp, #48	; 0x30
   149e8:	movw	ip, #29016	; 0x7158
   149ec:	mov	lr, r3
   149f0:	mov	r3, sp
   149f4:	cmp	r1, #0
   149f8:	movt	ip, #2
   149fc:	cmpne	r2, #0
   14a00:	ldm	ip!, {r4, r5, r6, r7, r8, r9}
   14a04:	stmia	r3!, {r4, r5, r6, r7, r8, r9}
   14a08:	ldm	ip, {r4, r5, r6, r7, r8, r9}
   14a0c:	stm	r3, {r4, r5, r6, r7, r8, r9}
   14a10:	mov	r3, #10
   14a14:	str	r3, [sp]
   14a18:	bne	14a20 <__mempcpy_chk@plt+0x39f8>
   14a1c:	bl	11004 <abort@plt>
   14a20:	ldr	ip, [fp, #8]
   14a24:	str	r2, [sp, #44]	; 0x2c
   14a28:	str	r1, [sp, #40]	; 0x28
   14a2c:	mov	r3, sp
   14a30:	mov	r1, lr
   14a34:	mov	r2, ip
   14a38:	bl	14524 <__mempcpy_chk@plt+0x34fc>
   14a3c:	sub	sp, fp, #24
   14a40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14a44:	push	{fp, lr}
   14a48:	mov	fp, sp
   14a4c:	sub	sp, sp, #8
   14a50:	mov	r3, r2
   14a54:	mov	r2, r1
   14a58:	mov	r1, r0
   14a5c:	mvn	r0, #0
   14a60:	str	r0, [sp]
   14a64:	mov	r0, #0
   14a68:	bl	149dc <__mempcpy_chk@plt+0x39b4>
   14a6c:	mov	sp, fp
   14a70:	pop	{fp, pc}
   14a74:	push	{fp, lr}
   14a78:	mov	fp, sp
   14a7c:	sub	sp, sp, #8
   14a80:	mov	ip, r2
   14a84:	mov	r2, r1
   14a88:	mov	r1, r0
   14a8c:	str	r3, [sp]
   14a90:	mov	r0, #0
   14a94:	mov	r3, ip
   14a98:	bl	149dc <__mempcpy_chk@plt+0x39b4>
   14a9c:	mov	sp, fp
   14aa0:	pop	{fp, pc}
   14aa4:	movw	r3, #28928	; 0x7100
   14aa8:	movt	r3, #2
   14aac:	b	14524 <__mempcpy_chk@plt+0x34fc>
   14ab0:	movw	r3, #28928	; 0x7100
   14ab4:	mov	r2, r1
   14ab8:	mov	r1, r0
   14abc:	mov	r0, #0
   14ac0:	movt	r3, #2
   14ac4:	b	14524 <__mempcpy_chk@plt+0x34fc>
   14ac8:	movw	r3, #28928	; 0x7100
   14acc:	mvn	r2, #0
   14ad0:	movt	r3, #2
   14ad4:	b	14524 <__mempcpy_chk@plt+0x34fc>
   14ad8:	movw	r3, #28928	; 0x7100
   14adc:	mov	r1, r0
   14ae0:	mov	r0, #0
   14ae4:	mvn	r2, #0
   14ae8:	movt	r3, #2
   14aec:	b	14524 <__mempcpy_chk@plt+0x34fc>
   14af0:	push	{r4, r5, fp, lr}
   14af4:	add	fp, sp, #8
   14af8:	mov	r5, r0
   14afc:	mov	r4, r1
   14b00:	mov	r0, #0
   14b04:	mov	r2, #5
   14b08:	mov	r1, r5
   14b0c:	bl	10e48 <dcgettext@plt>
   14b10:	cmp	r0, r5
   14b14:	popne	{r4, r5, fp, pc}
   14b18:	bl	159f4 <__mempcpy_chk@plt+0x49cc>
   14b1c:	ldrb	r1, [r0]
   14b20:	and	r1, r1, #223	; 0xdf
   14b24:	cmp	r1, #71	; 0x47
   14b28:	beq	14b90 <__mempcpy_chk@plt+0x3b68>
   14b2c:	cmp	r1, #85	; 0x55
   14b30:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14b34:	ldrb	r1, [r0, #1]
   14b38:	and	r1, r1, #223	; 0xdf
   14b3c:	cmp	r1, #84	; 0x54
   14b40:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14b44:	ldrb	r1, [r0, #2]
   14b48:	and	r1, r1, #223	; 0xdf
   14b4c:	cmp	r1, #70	; 0x46
   14b50:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14b54:	ldrb	r1, [r0, #3]
   14b58:	cmp	r1, #45	; 0x2d
   14b5c:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14b60:	ldrb	r1, [r0, #4]
   14b64:	cmp	r1, #56	; 0x38
   14b68:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14b6c:	ldrb	r0, [r0, #5]
   14b70:	cmp	r0, #0
   14b74:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14b78:	ldrb	r1, [r5]
   14b7c:	movw	r2, #26316	; 0x66cc
   14b80:	movw	r0, #26320	; 0x66d0
   14b84:	movt	r2, #1
   14b88:	movt	r0, #1
   14b8c:	b	14c18 <__mempcpy_chk@plt+0x3bf0>
   14b90:	ldrb	r1, [r0, #1]
   14b94:	and	r1, r1, #223	; 0xdf
   14b98:	cmp	r1, #66	; 0x42
   14b9c:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14ba0:	ldrb	r1, [r0, #2]
   14ba4:	cmp	r1, #49	; 0x31
   14ba8:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14bac:	ldrb	r1, [r0, #3]
   14bb0:	cmp	r1, #56	; 0x38
   14bb4:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14bb8:	ldrb	r1, [r0, #4]
   14bbc:	cmp	r1, #48	; 0x30
   14bc0:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14bc4:	ldrb	r1, [r0, #5]
   14bc8:	cmp	r1, #51	; 0x33
   14bcc:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14bd0:	ldrb	r1, [r0, #6]
   14bd4:	cmp	r1, #48	; 0x30
   14bd8:	bne	14be8 <__mempcpy_chk@plt+0x3bc0>
   14bdc:	ldrb	r0, [r0, #7]
   14be0:	cmp	r0, #0
   14be4:	beq	14c04 <__mempcpy_chk@plt+0x3bdc>
   14be8:	movw	r1, #26310	; 0x66c6
   14bec:	movw	r0, #26314	; 0x66ca
   14bf0:	cmp	r4, #9
   14bf4:	movt	r1, #1
   14bf8:	movt	r0, #1
   14bfc:	moveq	r0, r1
   14c00:	pop	{r4, r5, fp, pc}
   14c04:	ldrb	r1, [r5]
   14c08:	movw	r2, #26324	; 0x66d4
   14c0c:	movw	r0, #26328	; 0x66d8
   14c10:	movt	r2, #1
   14c14:	movt	r0, #1
   14c18:	cmp	r1, #96	; 0x60
   14c1c:	moveq	r0, r2
   14c20:	pop	{r4, r5, fp, pc}
   14c24:	push	{r4, r5, r6, sl, fp, lr}
   14c28:	add	fp, sp, #16
   14c2c:	ldr	r4, [r0], #8
   14c30:	mov	r5, r1
   14c34:	cmp	r4, r0
   14c38:	beq	14c58 <__mempcpy_chk@plt+0x3c30>
   14c3c:	mov	r0, r4
   14c40:	mov	r1, r5
   14c44:	bl	1574c <__mempcpy_chk@plt+0x4724>
   14c48:	cmp	r0, #0
   14c4c:	mov	r6, r0
   14c50:	moveq	r6, r4
   14c54:	b	14c80 <__mempcpy_chk@plt+0x3c58>
   14c58:	mov	r0, r5
   14c5c:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   14c60:	cmp	r0, #0
   14c64:	beq	14c7c <__mempcpy_chk@plt+0x3c54>
   14c68:	mov	r1, r4
   14c6c:	mov	r2, r5
   14c70:	mov	r6, r0
   14c74:	bl	10e30 <memcpy@plt>
   14c78:	b	14c80 <__mempcpy_chk@plt+0x3c58>
   14c7c:	mov	r6, #0
   14c80:	mov	r0, r6
   14c84:	pop	{r4, r5, r6, sl, fp, pc}
   14c88:	push	{r4, r5, r6, sl, fp, lr}
   14c8c:	add	fp, sp, #16
   14c90:	mov	r4, r0
   14c94:	add	r6, r0, #8
   14c98:	ldrd	r0, [r0]
   14c9c:	lsl	r5, r1, #1
   14ca0:	cmp	r0, r6
   14ca4:	beq	14cb0 <__mempcpy_chk@plt+0x3c88>
   14ca8:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   14cac:	ldr	r1, [r4, #4]
   14cb0:	cmp	r5, r1
   14cb4:	bcc	14cd8 <__mempcpy_chk@plt+0x3cb0>
   14cb8:	mov	r0, r5
   14cbc:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   14cc0:	cmp	r0, #0
   14cc4:	beq	14ce4 <__mempcpy_chk@plt+0x3cbc>
   14cc8:	str	r0, [r4]
   14ccc:	mov	r0, #1
   14cd0:	str	r5, [r4, #4]
   14cd4:	pop	{r4, r5, r6, sl, fp, pc}
   14cd8:	bl	10f50 <__errno_location@plt>
   14cdc:	mov	r1, #12
   14ce0:	str	r1, [r0]
   14ce4:	str	r6, [r4]
   14ce8:	mov	r0, #0
   14cec:	mov	r5, #1024	; 0x400
   14cf0:	b	14cd0 <__mempcpy_chk@plt+0x3ca8>
   14cf4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14cf8:	add	fp, sp, #24
   14cfc:	ldrd	r8, [r0]
   14d00:	add	r7, r0, #8
   14d04:	mov	r4, r0
   14d08:	lsl	r5, r9, #1
   14d0c:	cmp	r8, r7
   14d10:	beq	14d3c <__mempcpy_chk@plt+0x3d14>
   14d14:	cmp	r5, r9
   14d18:	bcc	14d74 <__mempcpy_chk@plt+0x3d4c>
   14d1c:	mov	r0, r8
   14d20:	mov	r1, r5
   14d24:	bl	1574c <__mempcpy_chk@plt+0x4724>
   14d28:	mov	r6, r0
   14d2c:	cmp	r0, #0
   14d30:	bne	14d5c <__mempcpy_chk@plt+0x3d34>
   14d34:	ldr	r8, [r4]
   14d38:	b	14d80 <__mempcpy_chk@plt+0x3d58>
   14d3c:	mov	r0, r5
   14d40:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   14d44:	cmp	r0, #0
   14d48:	beq	14d6c <__mempcpy_chk@plt+0x3d44>
   14d4c:	ldr	r2, [r4, #4]
   14d50:	mov	r1, r8
   14d54:	mov	r6, r0
   14d58:	bl	10e30 <memcpy@plt>
   14d5c:	mov	r0, #1
   14d60:	str	r6, [r4]
   14d64:	str	r5, [r4, #4]
   14d68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14d6c:	mov	r0, #0
   14d70:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14d74:	bl	10f50 <__errno_location@plt>
   14d78:	mov	r1, #12
   14d7c:	str	r1, [r0]
   14d80:	mov	r0, r8
   14d84:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   14d88:	str	r7, [r4]
   14d8c:	mov	r0, #0
   14d90:	mov	r5, #1024	; 0x400
   14d94:	b	14d64 <__mempcpy_chk@plt+0x3d3c>
   14d98:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14d9c:	add	fp, sp, #24
   14da0:	sub	sp, sp, #32
   14da4:	ldr	r6, [fp, #12]
   14da8:	ldr	r7, [fp, #8]
   14dac:	mov	r4, r2
   14db0:	mov	r8, r0
   14db4:	cmp	r1, #0
   14db8:	beq	14de0 <__mempcpy_chk@plt+0x3db8>
   14dbc:	movw	r2, #26416	; 0x6730
   14dc0:	mov	r5, r1
   14dc4:	str	r3, [sp, #4]
   14dc8:	str	r4, [sp]
   14dcc:	mov	r0, r8
   14dd0:	mov	r1, #1
   14dd4:	movt	r2, #1
   14dd8:	mov	r3, r5
   14ddc:	b	14df8 <__mempcpy_chk@plt+0x3dd0>
   14de0:	movw	r2, #26428	; 0x673c
   14de4:	str	r3, [sp]
   14de8:	mov	r0, r8
   14dec:	mov	r1, #1
   14df0:	mov	r3, r4
   14df4:	movt	r2, #1
   14df8:	bl	10f8c <__fprintf_chk@plt>
   14dfc:	movw	r1, #26435	; 0x6743
   14e00:	mov	r0, #0
   14e04:	mov	r2, #5
   14e08:	movt	r1, #1
   14e0c:	bl	10e48 <dcgettext@plt>
   14e10:	movw	r2, #27153	; 0x6a11
   14e14:	mov	r3, r0
   14e18:	movw	r0, #2022	; 0x7e6
   14e1c:	mov	r1, #1
   14e20:	movt	r2, #1
   14e24:	str	r0, [sp]
   14e28:	mov	r0, r8
   14e2c:	bl	10f8c <__fprintf_chk@plt>
   14e30:	movw	r4, #24152	; 0x5e58
   14e34:	mov	r1, r8
   14e38:	movt	r4, #1
   14e3c:	mov	r0, r4
   14e40:	bl	10dd0 <fputs_unlocked@plt>
   14e44:	movw	r1, #26439	; 0x6747
   14e48:	mov	r0, #0
   14e4c:	mov	r2, #5
   14e50:	movt	r1, #1
   14e54:	bl	10e48 <dcgettext@plt>
   14e58:	movw	r3, #26610	; 0x67f2
   14e5c:	mov	r2, r0
   14e60:	mov	r0, r8
   14e64:	mov	r1, #1
   14e68:	movt	r3, #1
   14e6c:	bl	10f8c <__fprintf_chk@plt>
   14e70:	mov	r0, r4
   14e74:	mov	r1, r8
   14e78:	bl	10dd0 <fputs_unlocked@plt>
   14e7c:	cmp	r6, #9
   14e80:	bhi	14ee4 <__mempcpy_chk@plt+0x3ebc>
   14e84:	add	r0, pc, #0
   14e88:	ldr	pc, [r0, r6, lsl #2]
   14e8c:	strheq	r5, [r1], -ip
   14e90:			; <UNDEFINED> instruction: 0x00014eb4
   14e94:	strdeq	r4, [r1], -r0
   14e98:	andeq	r4, r1, r8, lsl pc
   14e9c:	andeq	r4, r1, r0, asr #30
   14ea0:	andeq	r4, r1, r8, ror #30
   14ea4:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   14ea8:	andeq	r4, r1, r8, asr #31
   14eac:	andeq	r5, r1, r8, rrx
   14eb0:	andeq	r5, r1, r0, lsl r0
   14eb4:	movw	r1, #26644	; 0x6814
   14eb8:	mov	r0, #0
   14ebc:	mov	r2, #5
   14ec0:	movt	r1, #1
   14ec4:	bl	10e48 <dcgettext@plt>
   14ec8:	ldr	r3, [r7]
   14ecc:	mov	r2, r0
   14ed0:	mov	r0, r8
   14ed4:	mov	r1, #1
   14ed8:	sub	sp, fp, #24
   14edc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14ee0:	b	10f8c <__fprintf_chk@plt>
   14ee4:	movw	r1, #26963	; 0x6953
   14ee8:	movt	r1, #1
   14eec:	b	15018 <__mempcpy_chk@plt+0x3ff0>
   14ef0:	movw	r1, #26660	; 0x6824
   14ef4:	mov	r0, #0
   14ef8:	mov	r2, #5
   14efc:	movt	r1, #1
   14f00:	bl	10e48 <dcgettext@plt>
   14f04:	mov	r2, r0
   14f08:	ldr	r3, [r7]
   14f0c:	ldr	r0, [r7, #4]
   14f10:	str	r0, [sp]
   14f14:	b	15004 <__mempcpy_chk@plt+0x3fdc>
   14f18:	movw	r1, #26683	; 0x683b
   14f1c:	mov	r0, #0
   14f20:	mov	r2, #5
   14f24:	movt	r1, #1
   14f28:	bl	10e48 <dcgettext@plt>
   14f2c:	mov	r2, r0
   14f30:	ldr	r3, [r7]
   14f34:	ldmib	r7, {r0, r1}
   14f38:	stm	sp, {r0, r1}
   14f3c:	b	15004 <__mempcpy_chk@plt+0x3fdc>
   14f40:	movw	r1, #26711	; 0x6857
   14f44:	mov	r0, #0
   14f48:	mov	r2, #5
   14f4c:	movt	r1, #1
   14f50:	bl	10e48 <dcgettext@plt>
   14f54:	ldr	r3, [r7]
   14f58:	mov	r2, r0
   14f5c:	ldmib	r7, {r0, r1, r7}
   14f60:	stm	sp, {r0, r1, r7}
   14f64:	b	15004 <__mempcpy_chk@plt+0x3fdc>
   14f68:	movw	r1, #26743	; 0x6877
   14f6c:	mov	r0, #0
   14f70:	mov	r2, #5
   14f74:	movt	r1, #1
   14f78:	bl	10e48 <dcgettext@plt>
   14f7c:	ldr	r3, [r7]
   14f80:	mov	r2, r0
   14f84:	ldmib	r7, {r0, r1, r6, r7}
   14f88:	stm	sp, {r0, r1, r6, r7}
   14f8c:	b	15004 <__mempcpy_chk@plt+0x3fdc>
   14f90:	movw	r1, #26779	; 0x689b
   14f94:	mov	r0, #0
   14f98:	mov	r2, #5
   14f9c:	movt	r1, #1
   14fa0:	bl	10e48 <dcgettext@plt>
   14fa4:	mov	r2, r0
   14fa8:	ldr	r3, [r7]
   14fac:	ldmib	r7, {r0, r1, r6}
   14fb0:	ldr	r5, [r7, #16]
   14fb4:	ldr	r7, [r7, #20]
   14fb8:	stm	sp, {r0, r1, r6}
   14fbc:	str	r5, [sp, #12]
   14fc0:	str	r7, [sp, #16]
   14fc4:	b	15004 <__mempcpy_chk@plt+0x3fdc>
   14fc8:	movw	r1, #26819	; 0x68c3
   14fcc:	mov	r0, #0
   14fd0:	mov	r2, #5
   14fd4:	movt	r1, #1
   14fd8:	bl	10e48 <dcgettext@plt>
   14fdc:	mov	r2, r0
   14fe0:	ldr	r3, [r7]
   14fe4:	ldmib	r7, {r0, r1, r6}
   14fe8:	ldr	r5, [r7, #16]
   14fec:	ldr	r4, [r7, #20]
   14ff0:	ldr	r7, [r7, #24]
   14ff4:	stm	sp, {r0, r1, r6}
   14ff8:	str	r5, [sp, #12]
   14ffc:	str	r4, [sp, #16]
   15000:	str	r7, [sp, #20]
   15004:	mov	r0, r8
   15008:	mov	r1, #1
   1500c:	b	150b8 <__mempcpy_chk@plt+0x4090>
   15010:	movw	r1, #26911	; 0x691f
   15014:	movt	r1, #1
   15018:	mov	r0, #0
   1501c:	mov	r2, #5
   15020:	bl	10e48 <dcgettext@plt>
   15024:	mov	ip, r0
   15028:	ldr	r3, [r7]
   1502c:	ldr	r0, [r7, #4]
   15030:	ldr	r1, [r7, #8]
   15034:	ldr	r6, [r7, #12]
   15038:	ldr	r5, [r7, #16]
   1503c:	ldr	r4, [r7, #20]
   15040:	ldr	r2, [r7, #24]
   15044:	ldr	lr, [r7, #28]
   15048:	ldr	r7, [r7, #32]
   1504c:	stm	sp, {r0, r1, r6}
   15050:	str	r5, [sp, #12]
   15054:	str	r4, [sp, #16]
   15058:	str	r2, [sp, #20]
   1505c:	str	lr, [sp, #24]
   15060:	str	r7, [sp, #28]
   15064:	b	150ac <__mempcpy_chk@plt+0x4084>
   15068:	movw	r1, #26863	; 0x68ef
   1506c:	mov	r0, #0
   15070:	mov	r2, #5
   15074:	movt	r1, #1
   15078:	bl	10e48 <dcgettext@plt>
   1507c:	mov	ip, r0
   15080:	ldr	r3, [r7]
   15084:	ldmib	r7, {r0, r1, r6}
   15088:	ldr	r5, [r7, #16]
   1508c:	ldr	r4, [r7, #20]
   15090:	ldr	r2, [r7, #24]
   15094:	ldr	r7, [r7, #28]
   15098:	stm	sp, {r0, r1, r6}
   1509c:	str	r5, [sp, #12]
   150a0:	str	r4, [sp, #16]
   150a4:	str	r2, [sp, #20]
   150a8:	str	r7, [sp, #24]
   150ac:	mov	r0, r8
   150b0:	mov	r1, #1
   150b4:	mov	r2, ip
   150b8:	bl	10f8c <__fprintf_chk@plt>
   150bc:	sub	sp, fp, #24
   150c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   150c4:	push	{r4, sl, fp, lr}
   150c8:	add	fp, sp, #8
   150cc:	sub	sp, sp, #8
   150d0:	ldr	ip, [fp, #8]
   150d4:	mov	lr, #0
   150d8:	ldr	r4, [ip, lr, lsl #2]
   150dc:	add	lr, lr, #1
   150e0:	cmp	r4, #0
   150e4:	bne	150d8 <__mempcpy_chk@plt+0x40b0>
   150e8:	sub	r4, lr, #1
   150ec:	str	ip, [sp]
   150f0:	str	r4, [sp, #4]
   150f4:	bl	14d98 <__mempcpy_chk@plt+0x3d70>
   150f8:	sub	sp, fp, #8
   150fc:	pop	{r4, sl, fp, pc}
   15100:	push	{r4, r5, fp, lr}
   15104:	add	fp, sp, #8
   15108:	sub	sp, sp, #48	; 0x30
   1510c:	ldr	r4, [fp, #8]
   15110:	mov	ip, #0
   15114:	add	lr, sp, #8
   15118:	ldr	r5, [r4]
   1511c:	cmp	r5, #0
   15120:	str	r5, [lr, ip, lsl #2]
   15124:	beq	1513c <__mempcpy_chk@plt+0x4114>
   15128:	add	ip, ip, #1
   1512c:	add	r4, r4, #4
   15130:	cmp	ip, #10
   15134:	bne	15118 <__mempcpy_chk@plt+0x40f0>
   15138:	mov	ip, #10
   1513c:	str	lr, [sp]
   15140:	str	ip, [sp, #4]
   15144:	bl	14d98 <__mempcpy_chk@plt+0x3d70>
   15148:	sub	sp, fp, #8
   1514c:	pop	{r4, r5, fp, pc}
   15150:	push	{fp, lr}
   15154:	mov	fp, sp
   15158:	sub	sp, sp, #8
   1515c:	add	ip, fp, #8
   15160:	str	ip, [sp, #4]
   15164:	str	ip, [sp]
   15168:	bl	15100 <__mempcpy_chk@plt+0x40d8>
   1516c:	mov	sp, fp
   15170:	pop	{fp, pc}
   15174:	push	{fp, lr}
   15178:	mov	fp, sp
   1517c:	movw	r0, #28996	; 0x7144
   15180:	movt	r0, #2
   15184:	ldr	r1, [r0]
   15188:	movw	r0, #24152	; 0x5e58
   1518c:	movt	r0, #1
   15190:	bl	10dd0 <fputs_unlocked@plt>
   15194:	movw	r1, #27023	; 0x698f
   15198:	mov	r0, #0
   1519c:	mov	r2, #5
   151a0:	movt	r1, #1
   151a4:	bl	10e48 <dcgettext@plt>
   151a8:	movw	r2, #27043	; 0x69a3
   151ac:	mov	r1, r0
   151b0:	mov	r0, #1
   151b4:	movt	r2, #1
   151b8:	bl	10f74 <__printf_chk@plt>
   151bc:	movw	r1, #27065	; 0x69b9
   151c0:	mov	r0, #0
   151c4:	mov	r2, #5
   151c8:	movt	r1, #1
   151cc:	bl	10e48 <dcgettext@plt>
   151d0:	movw	r2, #25253	; 0x62a5
   151d4:	movw	r3, #25463	; 0x6377
   151d8:	mov	r1, r0
   151dc:	mov	r0, #1
   151e0:	movt	r2, #1
   151e4:	movt	r3, #1
   151e8:	bl	10f74 <__printf_chk@plt>
   151ec:	movw	r1, #27085	; 0x69cd
   151f0:	mov	r0, #0
   151f4:	mov	r2, #5
   151f8:	movt	r1, #1
   151fc:	bl	10e48 <dcgettext@plt>
   15200:	movw	r2, #27124	; 0x69f4
   15204:	mov	r1, r0
   15208:	mov	r0, #1
   1520c:	movt	r2, #1
   15210:	pop	{fp, lr}
   15214:	b	10f74 <__printf_chk@plt>
   15218:	b	1521c <__mempcpy_chk@plt+0x41f4>
   1521c:	push	{r4, r5, r6, sl, fp, lr}
   15220:	add	fp, sp, #16
   15224:	mov	r4, r2
   15228:	mov	r5, r1
   1522c:	mov	r6, r0
   15230:	bl	15a90 <__mempcpy_chk@plt+0x4a68>
   15234:	cmp	r0, #0
   15238:	popne	{r4, r5, r6, sl, fp, pc}
   1523c:	cmp	r6, #0
   15240:	beq	15254 <__mempcpy_chk@plt+0x422c>
   15244:	cmp	r5, #0
   15248:	cmpne	r4, #0
   1524c:	bne	15254 <__mempcpy_chk@plt+0x422c>
   15250:	pop	{r4, r5, r6, sl, fp, pc}
   15254:	bl	15684 <__mempcpy_chk@plt+0x465c>
   15258:	push	{fp, lr}
   1525c:	mov	fp, sp
   15260:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   15264:	cmp	r0, #0
   15268:	popne	{fp, pc}
   1526c:	bl	15684 <__mempcpy_chk@plt+0x465c>
   15270:	push	{fp, lr}
   15274:	mov	fp, sp
   15278:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   1527c:	cmp	r0, #0
   15280:	popne	{fp, pc}
   15284:	bl	15684 <__mempcpy_chk@plt+0x465c>
   15288:	push	{fp, lr}
   1528c:	mov	fp, sp
   15290:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   15294:	cmp	r0, #0
   15298:	popne	{fp, pc}
   1529c:	bl	15684 <__mempcpy_chk@plt+0x465c>
   152a0:	push	{r4, r5, fp, lr}
   152a4:	add	fp, sp, #8
   152a8:	mov	r4, r1
   152ac:	mov	r5, r0
   152b0:	bl	1574c <__mempcpy_chk@plt+0x4724>
   152b4:	cmp	r0, #0
   152b8:	popne	{r4, r5, fp, pc}
   152bc:	cmp	r5, #0
   152c0:	beq	152d0 <__mempcpy_chk@plt+0x42a8>
   152c4:	cmp	r4, #0
   152c8:	bne	152d0 <__mempcpy_chk@plt+0x42a8>
   152cc:	pop	{r4, r5, fp, pc}
   152d0:	bl	15684 <__mempcpy_chk@plt+0x465c>
   152d4:	push	{fp, lr}
   152d8:	mov	fp, sp
   152dc:	cmp	r1, #0
   152e0:	orreq	r1, r1, #1
   152e4:	bl	1574c <__mempcpy_chk@plt+0x4724>
   152e8:	cmp	r0, #0
   152ec:	popne	{fp, pc}
   152f0:	bl	15684 <__mempcpy_chk@plt+0x465c>
   152f4:	push	{fp, lr}
   152f8:	mov	fp, sp
   152fc:	clz	r3, r2
   15300:	lsr	ip, r3, #5
   15304:	clz	r3, r1
   15308:	lsr	r3, r3, #5
   1530c:	orrs	r3, r3, ip
   15310:	movwne	r1, #1
   15314:	movwne	r2, #1
   15318:	bl	15a90 <__mempcpy_chk@plt+0x4a68>
   1531c:	cmp	r0, #0
   15320:	popne	{fp, pc}
   15324:	bl	15684 <__mempcpy_chk@plt+0x465c>
   15328:	push	{fp, lr}
   1532c:	mov	fp, sp
   15330:	mov	r2, r1
   15334:	mov	r1, r0
   15338:	mov	r0, #0
   1533c:	bl	15a90 <__mempcpy_chk@plt+0x4a68>
   15340:	cmp	r0, #0
   15344:	popne	{fp, pc}
   15348:	bl	15684 <__mempcpy_chk@plt+0x465c>
   1534c:	mov	r2, r1
   15350:	mov	r1, r0
   15354:	mov	r0, #0
   15358:	b	152f4 <__mempcpy_chk@plt+0x42cc>
   1535c:	mov	r2, #1
   15360:	b	15364 <__mempcpy_chk@plt+0x433c>
   15364:	push	{r4, r5, fp, lr}
   15368:	add	fp, sp, #8
   1536c:	ldr	r5, [r1]
   15370:	mov	r4, r1
   15374:	cmp	r0, #0
   15378:	beq	15390 <__mempcpy_chk@plt+0x4368>
   1537c:	mov	r1, #1
   15380:	add	r1, r1, r5, lsr #1
   15384:	adds	r5, r5, r1
   15388:	bcc	153a8 <__mempcpy_chk@plt+0x4380>
   1538c:	bl	15684 <__mempcpy_chk@plt+0x465c>
   15390:	cmp	r5, #0
   15394:	bne	153a8 <__mempcpy_chk@plt+0x4380>
   15398:	mov	r1, #64	; 0x40
   1539c:	cmp	r2, #64	; 0x40
   153a0:	udiv	r5, r1, r2
   153a4:	addhi	r5, r5, #1
   153a8:	mov	r1, r5
   153ac:	bl	1521c <__mempcpy_chk@plt+0x41f4>
   153b0:	str	r5, [r4]
   153b4:	pop	{r4, r5, fp, pc}
   153b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   153bc:	add	fp, sp, #24
   153c0:	ldr	r6, [r1]
   153c4:	mov	r8, r1
   153c8:	ldr	r4, [fp, #8]
   153cc:	add	r1, r6, r6, asr #1
   153d0:	cmp	r1, r6
   153d4:	mvnvs	r1, #-2147483648	; 0x80000000
   153d8:	cmp	r1, r3
   153dc:	mov	r5, r1
   153e0:	movgt	r5, r3
   153e4:	cmn	r3, #1
   153e8:	movle	r5, r1
   153ec:	cmn	r4, #1
   153f0:	ble	15410 <__mempcpy_chk@plt+0x43e8>
   153f4:	cmp	r4, #0
   153f8:	beq	15464 <__mempcpy_chk@plt+0x443c>
   153fc:	cmn	r5, #1
   15400:	ble	15438 <__mempcpy_chk@plt+0x4410>
   15404:	mvn	r7, #-2147483648	; 0x80000000
   15408:	udiv	r1, r7, r4
   1540c:	b	1542c <__mempcpy_chk@plt+0x4404>
   15410:	cmn	r5, #1
   15414:	ble	15454 <__mempcpy_chk@plt+0x442c>
   15418:	cmn	r4, #1
   1541c:	beq	15464 <__mempcpy_chk@plt+0x443c>
   15420:	mov	r1, #-2147483648	; 0x80000000
   15424:	mvn	r7, #-2147483648	; 0x80000000
   15428:	sdiv	r1, r1, r4
   1542c:	cmp	r1, r5
   15430:	bge	15464 <__mempcpy_chk@plt+0x443c>
   15434:	b	15474 <__mempcpy_chk@plt+0x444c>
   15438:	beq	15464 <__mempcpy_chk@plt+0x443c>
   1543c:	mov	r1, #-2147483648	; 0x80000000
   15440:	mvn	r7, #-2147483648	; 0x80000000
   15444:	sdiv	r1, r1, r5
   15448:	cmp	r1, r4
   1544c:	bge	15464 <__mempcpy_chk@plt+0x443c>
   15450:	b	15474 <__mempcpy_chk@plt+0x444c>
   15454:	mvn	r7, #-2147483648	; 0x80000000
   15458:	sdiv	r1, r7, r4
   1545c:	cmp	r5, r1
   15460:	blt	15474 <__mempcpy_chk@plt+0x444c>
   15464:	mul	r1, r5, r4
   15468:	mov	r7, #64	; 0x40
   1546c:	cmp	r1, #63	; 0x3f
   15470:	bgt	1547c <__mempcpy_chk@plt+0x4454>
   15474:	sdiv	r5, r7, r4
   15478:	mul	r1, r5, r4
   1547c:	cmp	r0, #0
   15480:	moveq	r7, #0
   15484:	streq	r7, [r8]
   15488:	sub	r7, r5, r6
   1548c:	cmp	r7, r2
   15490:	bge	15534 <__mempcpy_chk@plt+0x450c>
   15494:	add	r5, r6, r2
   15498:	mov	r2, #0
   1549c:	mov	r1, #0
   154a0:	cmp	r5, r3
   154a4:	movwgt	r2, #1
   154a8:	cmn	r3, #1
   154ac:	movwgt	r1, #1
   154b0:	cmp	r5, r6
   154b4:	bvs	1551c <__mempcpy_chk@plt+0x44f4>
   154b8:	ands	r1, r1, r2
   154bc:	bne	1551c <__mempcpy_chk@plt+0x44f4>
   154c0:	cmn	r4, #1
   154c4:	ble	154e4 <__mempcpy_chk@plt+0x44bc>
   154c8:	cmp	r4, #0
   154cc:	beq	15530 <__mempcpy_chk@plt+0x4508>
   154d0:	cmn	r5, #1
   154d4:	ble	15508 <__mempcpy_chk@plt+0x44e0>
   154d8:	mvn	r1, #-2147483648	; 0x80000000
   154dc:	udiv	r1, r1, r4
   154e0:	b	154fc <__mempcpy_chk@plt+0x44d4>
   154e4:	cmn	r5, #1
   154e8:	ble	15520 <__mempcpy_chk@plt+0x44f8>
   154ec:	cmn	r4, #1
   154f0:	beq	15530 <__mempcpy_chk@plt+0x4508>
   154f4:	mov	r1, #-2147483648	; 0x80000000
   154f8:	sdiv	r1, r1, r4
   154fc:	cmp	r1, r5
   15500:	bge	15530 <__mempcpy_chk@plt+0x4508>
   15504:	b	1551c <__mempcpy_chk@plt+0x44f4>
   15508:	beq	15530 <__mempcpy_chk@plt+0x4508>
   1550c:	mov	r1, #-2147483648	; 0x80000000
   15510:	sdiv	r1, r1, r5
   15514:	cmp	r1, r4
   15518:	bge	15530 <__mempcpy_chk@plt+0x4508>
   1551c:	bl	15684 <__mempcpy_chk@plt+0x465c>
   15520:	mvn	r1, #-2147483648	; 0x80000000
   15524:	sdiv	r1, r1, r4
   15528:	cmp	r5, r1
   1552c:	blt	1551c <__mempcpy_chk@plt+0x44f4>
   15530:	mul	r1, r5, r4
   15534:	bl	152a0 <__mempcpy_chk@plt+0x4278>
   15538:	str	r5, [r8]
   1553c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15540:	push	{fp, lr}
   15544:	mov	fp, sp
   15548:	mov	r1, #1
   1554c:	bl	156c8 <__mempcpy_chk@plt+0x46a0>
   15550:	cmp	r0, #0
   15554:	popne	{fp, pc}
   15558:	bl	15684 <__mempcpy_chk@plt+0x465c>
   1555c:	push	{fp, lr}
   15560:	mov	fp, sp
   15564:	bl	156c8 <__mempcpy_chk@plt+0x46a0>
   15568:	cmp	r0, #0
   1556c:	popne	{fp, pc}
   15570:	bl	15684 <__mempcpy_chk@plt+0x465c>
   15574:	push	{fp, lr}
   15578:	mov	fp, sp
   1557c:	mov	r1, #1
   15580:	bl	156c8 <__mempcpy_chk@plt+0x46a0>
   15584:	cmp	r0, #0
   15588:	popne	{fp, pc}
   1558c:	bl	15684 <__mempcpy_chk@plt+0x465c>
   15590:	push	{fp, lr}
   15594:	mov	fp, sp
   15598:	bl	156c8 <__mempcpy_chk@plt+0x46a0>
   1559c:	cmp	r0, #0
   155a0:	popne	{fp, pc}
   155a4:	bl	15684 <__mempcpy_chk@plt+0x465c>
   155a8:	push	{r4, r5, fp, lr}
   155ac:	add	fp, sp, #8
   155b0:	mov	r5, r0
   155b4:	mov	r0, r1
   155b8:	mov	r4, r1
   155bc:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   155c0:	cmp	r0, #0
   155c4:	beq	155d8 <__mempcpy_chk@plt+0x45b0>
   155c8:	mov	r1, r5
   155cc:	mov	r2, r4
   155d0:	pop	{r4, r5, fp, lr}
   155d4:	b	10e30 <memcpy@plt>
   155d8:	bl	15684 <__mempcpy_chk@plt+0x465c>
   155dc:	push	{r4, r5, fp, lr}
   155e0:	add	fp, sp, #8
   155e4:	mov	r5, r0
   155e8:	mov	r0, r1
   155ec:	mov	r4, r1
   155f0:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   155f4:	cmp	r0, #0
   155f8:	beq	1560c <__mempcpy_chk@plt+0x45e4>
   155fc:	mov	r1, r5
   15600:	mov	r2, r4
   15604:	pop	{r4, r5, fp, lr}
   15608:	b	10e30 <memcpy@plt>
   1560c:	bl	15684 <__mempcpy_chk@plt+0x465c>
   15610:	push	{r4, r5, fp, lr}
   15614:	add	fp, sp, #8
   15618:	mov	r5, r0
   1561c:	add	r0, r1, #1
   15620:	mov	r4, r1
   15624:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   15628:	cmp	r0, #0
   1562c:	beq	15648 <__mempcpy_chk@plt+0x4620>
   15630:	mov	r1, #0
   15634:	mov	r2, r4
   15638:	strb	r1, [r0, r4]
   1563c:	mov	r1, r5
   15640:	pop	{r4, r5, fp, lr}
   15644:	b	10e30 <memcpy@plt>
   15648:	bl	15684 <__mempcpy_chk@plt+0x465c>
   1564c:	push	{r4, r5, fp, lr}
   15650:	add	fp, sp, #8
   15654:	mov	r4, r0
   15658:	bl	10f44 <strlen@plt>
   1565c:	add	r5, r0, #1
   15660:	mov	r0, r5
   15664:	bl	1571c <__mempcpy_chk@plt+0x46f4>
   15668:	cmp	r0, #0
   1566c:	beq	15680 <__mempcpy_chk@plt+0x4658>
   15670:	mov	r1, r4
   15674:	mov	r2, r5
   15678:	pop	{r4, r5, fp, lr}
   1567c:	b	10e30 <memcpy@plt>
   15680:	bl	15684 <__mempcpy_chk@plt+0x465c>
   15684:	push	{fp, lr}
   15688:	mov	fp, sp
   1568c:	movw	r0, #28908	; 0x70ec
   15690:	movw	r1, #27200	; 0x6a40
   15694:	mov	r2, #5
   15698:	movt	r0, #2
   1569c:	movt	r1, #1
   156a0:	ldr	r4, [r0]
   156a4:	mov	r0, #0
   156a8:	bl	10e48 <dcgettext@plt>
   156ac:	movw	r2, #26033	; 0x65b1
   156b0:	mov	r3, r0
   156b4:	mov	r0, r4
   156b8:	mov	r1, #0
   156bc:	movt	r2, #1
   156c0:	bl	10ecc <error@plt>
   156c4:	bl	11004 <abort@plt>
   156c8:	clz	r2, r1
   156cc:	clz	r3, r0
   156d0:	lsr	r2, r2, #5
   156d4:	lsr	r3, r3, #5
   156d8:	orrs	r2, r3, r2
   156dc:	movwne	r1, #1
   156e0:	movwne	r0, #1
   156e4:	cmp	r1, #0
   156e8:	beq	15718 <__mempcpy_chk@plt+0x46f0>
   156ec:	mvn	r2, #-2147483648	; 0x80000000
   156f0:	udiv	r2, r2, r1
   156f4:	cmp	r2, r0
   156f8:	bcs	15718 <__mempcpy_chk@plt+0x46f0>
   156fc:	push	{fp, lr}
   15700:	mov	fp, sp
   15704:	bl	10f50 <__errno_location@plt>
   15708:	mov	r1, #12
   1570c:	str	r1, [r0]
   15710:	mov	r0, #0
   15714:	pop	{fp, pc}
   15718:	b	10dc4 <calloc@plt>
   1571c:	cmp	r0, #0
   15720:	movweq	r0, #1
   15724:	cmn	r0, #1
   15728:	ble	15730 <__mempcpy_chk@plt+0x4708>
   1572c:	b	10ed8 <malloc@plt>
   15730:	push	{fp, lr}
   15734:	mov	fp, sp
   15738:	bl	10f50 <__errno_location@plt>
   1573c:	mov	r1, #12
   15740:	str	r1, [r0]
   15744:	mov	r0, #0
   15748:	pop	{fp, pc}
   1574c:	push	{fp, lr}
   15750:	mov	fp, sp
   15754:	cmp	r0, #0
   15758:	beq	15774 <__mempcpy_chk@plt+0x474c>
   1575c:	cmp	r1, #0
   15760:	beq	15780 <__mempcpy_chk@plt+0x4758>
   15764:	cmn	r1, #1
   15768:	ble	15788 <__mempcpy_chk@plt+0x4760>
   1576c:	pop	{fp, lr}
   15770:	b	10e54 <realloc@plt>
   15774:	mov	r0, r1
   15778:	pop	{fp, lr}
   1577c:	b	1571c <__mempcpy_chk@plt+0x46f4>
   15780:	bl	120a8 <__mempcpy_chk@plt+0x1080>
   15784:	b	15794 <__mempcpy_chk@plt+0x476c>
   15788:	bl	10f50 <__errno_location@plt>
   1578c:	mov	r1, #12
   15790:	str	r1, [r0]
   15794:	mov	r0, #0
   15798:	pop	{fp, pc}
   1579c:	push	{r4, r5, r6, sl, fp, lr}
   157a0:	add	fp, sp, #16
   157a4:	mov	r4, r0
   157a8:	bl	10ea8 <__fpending@plt>
   157ac:	mov	r5, r0
   157b0:	mov	r0, r4
   157b4:	bl	10eb4 <ferror_unlocked@plt>
   157b8:	mov	r6, r0
   157bc:	mov	r0, r4
   157c0:	bl	1581c <__mempcpy_chk@plt+0x47f4>
   157c4:	cmp	r6, #0
   157c8:	beq	157e8 <__mempcpy_chk@plt+0x47c0>
   157cc:	mvn	r4, #0
   157d0:	cmp	r0, #0
   157d4:	bne	15814 <__mempcpy_chk@plt+0x47ec>
   157d8:	bl	10f50 <__errno_location@plt>
   157dc:	mov	r1, #0
   157e0:	str	r1, [r0]
   157e4:	b	15814 <__mempcpy_chk@plt+0x47ec>
   157e8:	cmp	r0, #0
   157ec:	mov	r4, r0
   157f0:	mvnne	r4, #0
   157f4:	cmp	r5, #0
   157f8:	bne	15814 <__mempcpy_chk@plt+0x47ec>
   157fc:	cmp	r0, #0
   15800:	beq	15814 <__mempcpy_chk@plt+0x47ec>
   15804:	bl	10f50 <__errno_location@plt>
   15808:	ldr	r0, [r0]
   1580c:	subs	r4, r0, #9
   15810:	mvnne	r4, #0
   15814:	mov	r0, r4
   15818:	pop	{r4, r5, r6, sl, fp, pc}
   1581c:	push	{r4, r5, r6, sl, fp, lr}
   15820:	add	fp, sp, #16
   15824:	sub	sp, sp, #8
   15828:	mov	r4, r0
   1582c:	bl	10f80 <fileno@plt>
   15830:	cmn	r0, #1
   15834:	ble	158a8 <__mempcpy_chk@plt+0x4880>
   15838:	mov	r0, r4
   1583c:	bl	10ef0 <__freading@plt>
   15840:	cmp	r0, #0
   15844:	beq	15870 <__mempcpy_chk@plt+0x4848>
   15848:	mov	r0, r4
   1584c:	bl	10f80 <fileno@plt>
   15850:	mov	r1, #1
   15854:	mov	r2, #0
   15858:	mov	r3, #0
   1585c:	str	r1, [sp]
   15860:	bl	10e90 <lseek64@plt>
   15864:	and	r0, r0, r1
   15868:	cmn	r0, #1
   1586c:	beq	158a8 <__mempcpy_chk@plt+0x4880>
   15870:	mov	r0, r4
   15874:	bl	158b8 <__mempcpy_chk@plt+0x4890>
   15878:	cmp	r0, #0
   1587c:	beq	158a8 <__mempcpy_chk@plt+0x4880>
   15880:	bl	10f50 <__errno_location@plt>
   15884:	ldr	r6, [r0]
   15888:	mov	r5, r0
   1588c:	mov	r0, r4
   15890:	bl	10f98 <fclose@plt>
   15894:	cmp	r6, #0
   15898:	strne	r6, [r5]
   1589c:	mvnne	r0, #0
   158a0:	sub	sp, fp, #16
   158a4:	pop	{r4, r5, r6, sl, fp, pc}
   158a8:	mov	r0, r4
   158ac:	sub	sp, fp, #16
   158b0:	pop	{r4, r5, r6, sl, fp, lr}
   158b4:	b	10f98 <fclose@plt>
   158b8:	push	{r4, sl, fp, lr}
   158bc:	add	fp, sp, #8
   158c0:	sub	sp, sp, #8
   158c4:	mov	r4, r0
   158c8:	cmp	r0, #0
   158cc:	beq	15904 <__mempcpy_chk@plt+0x48dc>
   158d0:	mov	r0, r4
   158d4:	bl	10ef0 <__freading@plt>
   158d8:	cmp	r0, #0
   158dc:	beq	15904 <__mempcpy_chk@plt+0x48dc>
   158e0:	ldrb	r0, [r4, #1]
   158e4:	tst	r0, #1
   158e8:	beq	15904 <__mempcpy_chk@plt+0x48dc>
   158ec:	mov	r0, #1
   158f0:	mov	r2, #0
   158f4:	mov	r3, #0
   158f8:	str	r0, [sp]
   158fc:	mov	r0, r4
   15900:	bl	15914 <__mempcpy_chk@plt+0x48ec>
   15904:	mov	r0, r4
   15908:	sub	sp, fp, #8
   1590c:	pop	{r4, sl, fp, lr}
   15910:	b	10df4 <fflush@plt>
   15914:	push	{r4, r5, r6, r7, fp, lr}
   15918:	add	fp, sp, #16
   1591c:	sub	sp, sp, #8
   15920:	mov	r4, r0
   15924:	ldr	r0, [r0, #4]
   15928:	mov	r5, r3
   1592c:	mov	r6, r2
   15930:	ldr	r1, [r4, #8]
   15934:	cmp	r1, r0
   15938:	bne	15954 <__mempcpy_chk@plt+0x492c>
   1593c:	ldrd	r0, [r4, #16]
   15940:	cmp	r1, r0
   15944:	bne	15954 <__mempcpy_chk@plt+0x492c>
   15948:	ldr	r0, [r4, #36]	; 0x24
   1594c:	cmp	r0, #0
   15950:	beq	1596c <__mempcpy_chk@plt+0x4944>
   15954:	mov	r0, r4
   15958:	mov	r2, r6
   1595c:	mov	r3, r5
   15960:	sub	sp, fp, #16
   15964:	pop	{r4, r5, r6, r7, fp, lr}
   15968:	b	10fa4 <fseeko64@plt>
   1596c:	ldr	r7, [fp, #8]
   15970:	mov	r0, r4
   15974:	bl	10f80 <fileno@plt>
   15978:	mov	r2, r6
   1597c:	mov	r3, r5
   15980:	str	r7, [sp]
   15984:	bl	10e90 <lseek64@plt>
   15988:	and	r2, r0, r1
   1598c:	cmn	r2, #1
   15990:	beq	159ac <__mempcpy_chk@plt+0x4984>
   15994:	strd	r0, [r4, #80]	; 0x50
   15998:	ldr	r0, [r4]
   1599c:	bic	r0, r0, #16
   159a0:	str	r0, [r4]
   159a4:	mov	r0, #0
   159a8:	b	159b0 <__mempcpy_chk@plt+0x4988>
   159ac:	mvn	r0, #0
   159b0:	sub	sp, fp, #16
   159b4:	pop	{r4, r5, r6, r7, fp, pc}
   159b8:	ldrb	r2, [r0]
   159bc:	cmp	r2, #0
   159c0:	beq	159e4 <__mempcpy_chk@plt+0x49bc>
   159c4:	add	r3, r0, #1
   159c8:	mov	r0, #0
   159cc:	ror	r0, r0, #23
   159d0:	uxtab	r0, r0, r2
   159d4:	ldrb	r2, [r3], #1
   159d8:	cmp	r2, #0
   159dc:	bne	159cc <__mempcpy_chk@plt+0x49a4>
   159e0:	b	159e8 <__mempcpy_chk@plt+0x49c0>
   159e4:	mov	r0, #0
   159e8:	udiv	r2, r0, r1
   159ec:	mls	r0, r2, r1, r0
   159f0:	bx	lr
   159f4:	push	{fp, lr}
   159f8:	mov	fp, sp
   159fc:	mov	r0, #14
   15a00:	bl	10fc8 <nl_langinfo@plt>
   15a04:	movw	r1, #24153	; 0x5e59
   15a08:	cmp	r0, #0
   15a0c:	movt	r1, #1
   15a10:	movne	r1, r0
   15a14:	movw	r0, #27217	; 0x6a51
   15a18:	ldrb	r2, [r1]
   15a1c:	movt	r0, #1
   15a20:	cmp	r2, #0
   15a24:	movne	r0, r1
   15a28:	pop	{fp, pc}
   15a2c:	push	{r4, r5, r6, r7, fp, lr}
   15a30:	add	fp, sp, #16
   15a34:	sub	sp, sp, #8
   15a38:	cmp	r0, #0
   15a3c:	add	r5, sp, #4
   15a40:	mov	r7, r2
   15a44:	mov	r4, r1
   15a48:	movne	r5, r0
   15a4c:	mov	r0, r5
   15a50:	bl	10ec0 <mbrtowc@plt>
   15a54:	mov	r6, r0
   15a58:	cmp	r7, #0
   15a5c:	beq	15a84 <__mempcpy_chk@plt+0x4a5c>
   15a60:	cmn	r6, #2
   15a64:	bcc	15a84 <__mempcpy_chk@plt+0x4a5c>
   15a68:	mov	r0, #0
   15a6c:	bl	15acc <__mempcpy_chk@plt+0x4aa4>
   15a70:	cmp	r0, #0
   15a74:	bne	15a84 <__mempcpy_chk@plt+0x4a5c>
   15a78:	ldrb	r0, [r4]
   15a7c:	mov	r6, #1
   15a80:	str	r0, [r5]
   15a84:	mov	r0, r6
   15a88:	sub	sp, fp, #16
   15a8c:	pop	{r4, r5, r6, r7, fp, pc}
   15a90:	cmp	r2, #0
   15a94:	beq	15ac4 <__mempcpy_chk@plt+0x4a9c>
   15a98:	mvn	r3, #0
   15a9c:	udiv	r3, r3, r2
   15aa0:	cmp	r3, r1
   15aa4:	bcs	15ac4 <__mempcpy_chk@plt+0x4a9c>
   15aa8:	push	{fp, lr}
   15aac:	mov	fp, sp
   15ab0:	bl	10f50 <__errno_location@plt>
   15ab4:	mov	r1, #12
   15ab8:	str	r1, [r0]
   15abc:	mov	r0, #0
   15ac0:	pop	{fp, pc}
   15ac4:	mul	r1, r2, r1
   15ac8:	b	1574c <__mempcpy_chk@plt+0x4724>
   15acc:	push	{r4, sl, fp, lr}
   15ad0:	add	fp, sp, #8
   15ad4:	sub	sp, sp, #264	; 0x108
   15ad8:	add	r1, sp, #7
   15adc:	movw	r2, #257	; 0x101
   15ae0:	bl	15b38 <__mempcpy_chk@plt+0x4b10>
   15ae4:	mov	r4, #0
   15ae8:	cmp	r0, #0
   15aec:	bne	15b2c <__mempcpy_chk@plt+0x4b04>
   15af0:	movw	r1, #27223	; 0x6a57
   15af4:	add	r0, sp, #7
   15af8:	mov	r2, #2
   15afc:	movt	r1, #1
   15b00:	bl	10f38 <bcmp@plt>
   15b04:	cmp	r0, #0
   15b08:	beq	15b2c <__mempcpy_chk@plt+0x4b04>
   15b0c:	movw	r1, #27225	; 0x6a59
   15b10:	add	r0, sp, #7
   15b14:	mov	r2, #6
   15b18:	movt	r1, #1
   15b1c:	bl	10f38 <bcmp@plt>
   15b20:	cmp	r0, #0
   15b24:	mov	r4, r0
   15b28:	movwne	r4, #1
   15b2c:	mov	r0, r4
   15b30:	sub	sp, fp, #8
   15b34:	pop	{r4, sl, fp, pc}
   15b38:	push	{r4, r5, r6, r7, fp, lr}
   15b3c:	add	fp, sp, #16
   15b40:	mov	r4, r1
   15b44:	mov	r1, #0
   15b48:	mov	r6, r2
   15b4c:	bl	10fb0 <setlocale@plt>
   15b50:	cmp	r0, #0
   15b54:	beq	15b80 <__mempcpy_chk@plt+0x4b58>
   15b58:	mov	r7, r0
   15b5c:	bl	10f44 <strlen@plt>
   15b60:	cmp	r0, r6
   15b64:	bcs	15b94 <__mempcpy_chk@plt+0x4b6c>
   15b68:	add	r2, r0, #1
   15b6c:	mov	r0, r4
   15b70:	mov	r1, r7
   15b74:	bl	10e30 <memcpy@plt>
   15b78:	mov	r5, #0
   15b7c:	b	15bbc <__mempcpy_chk@plt+0x4b94>
   15b80:	cmp	r6, #0
   15b84:	mov	r5, #22
   15b88:	movne	r0, #0
   15b8c:	strbne	r0, [r4]
   15b90:	b	15bbc <__mempcpy_chk@plt+0x4b94>
   15b94:	mov	r5, #34	; 0x22
   15b98:	cmp	r6, #0
   15b9c:	beq	15bbc <__mempcpy_chk@plt+0x4b94>
   15ba0:	sub	r6, r6, #1
   15ba4:	mov	r0, r4
   15ba8:	mov	r1, r7
   15bac:	mov	r2, r6
   15bb0:	bl	10e30 <memcpy@plt>
   15bb4:	mov	r0, #0
   15bb8:	strb	r0, [r4, r6]
   15bbc:	mov	r0, r5
   15bc0:	pop	{r4, r5, r6, r7, fp, pc}
   15bc4:	mov	r1, #0
   15bc8:	b	10fb0 <setlocale@plt>
   15bcc:	cmp	r3, #0
   15bd0:	cmpeq	r2, #0
   15bd4:	bne	15bec <__mempcpy_chk@plt+0x4bc4>
   15bd8:	cmp	r1, #0
   15bdc:	cmpeq	r0, #0
   15be0:	mvnne	r1, #0
   15be4:	mvnne	r0, #0
   15be8:	b	15c08 <__mempcpy_chk@plt+0x4be0>
   15bec:	sub	sp, sp, #8
   15bf0:	push	{sp, lr}
   15bf4:	bl	15c18 <__mempcpy_chk@plt+0x4bf0>
   15bf8:	ldr	lr, [sp, #4]
   15bfc:	add	sp, sp, #8
   15c00:	pop	{r2, r3}
   15c04:	bx	lr
   15c08:	push	{r1, lr}
   15c0c:	mov	r0, #8
   15c10:	bl	10ddc <raise@plt>
   15c14:	pop	{r1, pc}
   15c18:	cmp	r1, r3
   15c1c:	cmpeq	r0, r2
   15c20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c24:	mov	r4, r0
   15c28:	movcc	r0, #0
   15c2c:	mov	r5, r1
   15c30:	ldr	lr, [sp, #36]	; 0x24
   15c34:	movcc	r1, r0
   15c38:	bcc	15d34 <__mempcpy_chk@plt+0x4d0c>
   15c3c:	cmp	r3, #0
   15c40:	clzeq	ip, r2
   15c44:	clzne	ip, r3
   15c48:	addeq	ip, ip, #32
   15c4c:	cmp	r5, #0
   15c50:	clzeq	r1, r4
   15c54:	addeq	r1, r1, #32
   15c58:	clzne	r1, r5
   15c5c:	sub	ip, ip, r1
   15c60:	sub	sl, ip, #32
   15c64:	lsl	r9, r3, ip
   15c68:	rsb	fp, ip, #32
   15c6c:	orr	r9, r9, r2, lsl sl
   15c70:	orr	r9, r9, r2, lsr fp
   15c74:	lsl	r8, r2, ip
   15c78:	cmp	r5, r9
   15c7c:	cmpeq	r4, r8
   15c80:	movcc	r0, #0
   15c84:	movcc	r1, r0
   15c88:	bcc	15ca4 <__mempcpy_chk@plt+0x4c7c>
   15c8c:	mov	r0, #1
   15c90:	subs	r4, r4, r8
   15c94:	lsl	r1, r0, sl
   15c98:	orr	r1, r1, r0, lsr fp
   15c9c:	lsl	r0, r0, ip
   15ca0:	sbc	r5, r5, r9
   15ca4:	cmp	ip, #0
   15ca8:	beq	15d34 <__mempcpy_chk@plt+0x4d0c>
   15cac:	lsr	r6, r8, #1
   15cb0:	orr	r6, r6, r9, lsl #31
   15cb4:	lsr	r7, r9, #1
   15cb8:	mov	r2, ip
   15cbc:	b	15ce0 <__mempcpy_chk@plt+0x4cb8>
   15cc0:	subs	r3, r4, r6
   15cc4:	sbc	r8, r5, r7
   15cc8:	adds	r3, r3, r3
   15ccc:	adc	r8, r8, r8
   15cd0:	adds	r4, r3, #1
   15cd4:	adc	r5, r8, #0
   15cd8:	subs	r2, r2, #1
   15cdc:	beq	15cfc <__mempcpy_chk@plt+0x4cd4>
   15ce0:	cmp	r5, r7
   15ce4:	cmpeq	r4, r6
   15ce8:	bcs	15cc0 <__mempcpy_chk@plt+0x4c98>
   15cec:	adds	r4, r4, r4
   15cf0:	adc	r5, r5, r5
   15cf4:	subs	r2, r2, #1
   15cf8:	bne	15ce0 <__mempcpy_chk@plt+0x4cb8>
   15cfc:	lsr	r3, r4, ip
   15d00:	orr	r3, r3, r5, lsl fp
   15d04:	lsr	r2, r5, ip
   15d08:	orr	r3, r3, r5, lsr sl
   15d0c:	adds	r0, r0, r4
   15d10:	mov	r4, r3
   15d14:	lsl	r3, r2, ip
   15d18:	orr	r3, r3, r4, lsl sl
   15d1c:	lsl	ip, r4, ip
   15d20:	orr	r3, r3, r4, lsr fp
   15d24:	adc	r1, r1, r5
   15d28:	subs	r0, r0, ip
   15d2c:	mov	r5, r2
   15d30:	sbc	r1, r1, r3
   15d34:	cmp	lr, #0
   15d38:	strdne	r4, [lr]
   15d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15d44:	mov	r7, r0
   15d48:	ldr	r6, [pc, #72]	; 15d98 <__mempcpy_chk@plt+0x4d70>
   15d4c:	ldr	r5, [pc, #72]	; 15d9c <__mempcpy_chk@plt+0x4d74>
   15d50:	add	r6, pc, r6
   15d54:	add	r5, pc, r5
   15d58:	sub	r6, r6, r5
   15d5c:	mov	r8, r1
   15d60:	mov	r9, r2
   15d64:	bl	10da4 <calloc@plt-0x20>
   15d68:	asrs	r6, r6, #2
   15d6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d70:	mov	r4, #0
   15d74:	add	r4, r4, #1
   15d78:	ldr	r3, [r5], #4
   15d7c:	mov	r2, r9
   15d80:	mov	r1, r8
   15d84:	mov	r0, r7
   15d88:	blx	r3
   15d8c:	cmp	r6, r4
   15d90:	bne	15d74 <__mempcpy_chk@plt+0x4d4c>
   15d94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15d98:			; <UNDEFINED> instruction: 0x000111b4
   15d9c:	andeq	r1, r1, ip, lsr #3
   15da0:	bx	lr
   15da4:	ldr	r3, [pc, #12]	; 15db8 <__mempcpy_chk@plt+0x4d90>
   15da8:	mov	r1, #0
   15dac:	add	r3, pc, r3
   15db0:	ldr	r2, [r3]
   15db4:	b	10f5c <__cxa_atexit@plt>
   15db8:	andeq	r1, r1, r0, lsr r3
   15dbc:	mov	r2, r1
   15dc0:	mov	r1, r0
   15dc4:	mov	r0, #3
   15dc8:	b	10fe0 <__xstat64@plt>

Disassembly of section .fini:

00015dcc <.fini>:
   15dcc:	push	{r3, lr}
   15dd0:	pop	{r3, pc}
