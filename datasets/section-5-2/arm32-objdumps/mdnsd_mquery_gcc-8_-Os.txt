
../repos/mdnsd/src/.libs/mquery:     file format elf32-littlearm


Disassembly of section .init:

000107d0 <.init>:
   107d0:	push	{r3, lr}
   107d4:	bl	10dc4 <close@plt+0x484>
   107d8:	pop	{r3, pc}

Disassembly of section .plt:

000107dc <mdnsd_new@plt-0x14>:
   107dc:	push	{lr}		; (str lr, [sp, #-4]!)
   107e0:	ldr	lr, [pc, #4]	; 107ec <mdnsd_new@plt-0x4>
   107e4:	add	lr, pc, lr
   107e8:	ldr	pc, [lr, #8]!
   107ec:	andeq	r1, r1, r4, lsl r8

000107f0 <mdnsd_new@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #69632	; 0x11000
   107f8:	ldr	pc, [ip, #2068]!	; 0x814

000107fc <setsockopt@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #69632	; 0x11000
   10804:	ldr	pc, [ip, #2060]!	; 0x80c

00010808 <printf@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #69632	; 0x11000
   10810:	ldr	pc, [ip, #2052]!	; 0x804

00010814 <time@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #69632	; 0x11000
   1081c:	ldr	pc, [ip, #2044]!	; 0x7fc

00010820 <inet_ntoa@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #69632	; 0x11000
   10828:	ldr	pc, [ip, #2036]!	; 0x7f4

0001082c <select@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #69632	; 0x11000
   10834:	ldr	pc, [ip, #2028]!	; 0x7ec

00010838 <recvfrom@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #69632	; 0x11000
   10840:	ldr	pc, [ip, #2020]!	; 0x7e4

00010844 <puts@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #69632	; 0x11000
   1084c:	ldr	pc, [ip, #2012]!	; 0x7dc

00010850 <__libc_start_main@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #69632	; 0x11000
   10858:	ldr	pc, [ip, #2004]!	; 0x7d4

0001085c <strerror@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #69632	; 0x11000
   10864:	ldr	pc, [ip, #1996]!	; 0x7cc

00010868 <__gmon_start__@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #69632	; 0x11000
   10870:	ldr	pc, [ip, #1988]!	; 0x7c4

00010874 <getopt@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #69632	; 0x11000
   1087c:	ldr	pc, [ip, #1980]!	; 0x7bc

00010880 <message_packet@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #69632	; 0x11000
   10888:	ldr	pc, [ip, #1972]!	; 0x7b4

0001088c <message_parse@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #69632	; 0x11000
   10894:	ldr	pc, [ip, #1964]!	; 0x7ac

00010898 <__errno_location@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #69632	; 0x11000
   108a0:	ldr	pc, [ip, #1956]!	; 0x7a4

000108a4 <bind@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #69632	; 0x11000
   108ac:	ldr	pc, [ip, #1948]!	; 0x79c

000108b0 <mdnsd_log@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1940]!	; 0x794

000108bc <memset@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1932]!	; 0x78c

000108c8 <sendto@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1924]!	; 0x784

000108d4 <mdnsd_sleep@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1916]!	; 0x77c

000108e0 <message_packet_len@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1908]!	; 0x774

000108ec <atoi@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1900]!	; 0x76c

000108f8 <mdnsd_in@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1892]!	; 0x764

00010904 <mdnsd_out@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1884]!	; 0x75c

00010910 <socket@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1876]!	; 0x754

0001091c <mdnsd_query@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1868]!	; 0x74c

00010928 <inet_addr@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1860]!	; 0x744

00010934 <abort@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1852]!	; 0x73c

00010940 <close@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1844]!	; 0x734

Disassembly of section .text:

0001094c <.text>:
   1094c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10950:	sub	sp, sp, #133120	; 0x20800
   10954:	ldr	r6, [pc, #1000]	; 10d44 <close@plt+0x404>
   10958:	ldr	r7, [pc, #1000]	; 10d48 <close@plt+0x408>
   1095c:	sub	sp, sp, #228	; 0xe4
   10960:	mov	r5, r0
   10964:	mov	r4, r1
   10968:	mov	r8, #12
   1096c:	mov	r2, r6
   10970:	mov	r1, r4
   10974:	mov	r0, r5
   10978:	bl	10874 <getopt@plt>
   1097c:	cmn	r0, #1
   10980:	bne	10aa4 <close@plt+0x164>
   10984:	ldr	r3, [pc, #960]	; 10d4c <close@plt+0x40c>
   10988:	mov	r1, #1000	; 0x3e8
   1098c:	mov	r0, #1
   10990:	ldr	r3, [r3]
   10994:	mov	sl, #1
   10998:	cmp	r5, r3
   1099c:	add	r7, sp, #56	; 0x38
   109a0:	ldrgt	r6, [r4, r3, lsl #2]
   109a4:	ldrle	r6, [pc, #932]	; 10d50 <close@plt+0x410>
   109a8:	bl	107f0 <mdnsd_new@plt>
   109ac:	mov	r2, #0
   109b0:	ldr	r1, [pc, #924]	; 10d54 <close@plt+0x414>
   109b4:	str	sl, [sp, #56]	; 0x38
   109b8:	mov	r5, r0
   109bc:	mov	r0, #2
   109c0:	bl	10910 <socket@plt>
   109c4:	subs	r4, r0, #0
   109c8:	blt	10a9c <close@plt+0x15c>
   109cc:	mov	r9, #4
   109d0:	str	r9, [sp]
   109d4:	mov	r3, r7
   109d8:	mov	r2, #15
   109dc:	mov	r1, sl
   109e0:	bl	107fc <setsockopt@plt>
   109e4:	cmp	r0, #0
   109e8:	beq	10a08 <close@plt+0xc8>
   109ec:	bl	10898 <__errno_location@plt>
   109f0:	ldr	r0, [r0]
   109f4:	bl	1085c <strerror@plt>
   109f8:	ldr	r1, [pc, #856]	; 10d58 <close@plt+0x418>
   109fc:	mov	r2, r0
   10a00:	mov	r0, r9
   10a04:	bl	108b0 <mdnsd_log@plt>
   10a08:	mov	r9, #4
   10a0c:	str	r9, [sp]
   10a10:	mov	r3, r7
   10a14:	mov	r2, #2
   10a18:	mov	r1, #1
   10a1c:	mov	r0, r4
   10a20:	bl	107fc <setsockopt@plt>
   10a24:	cmp	r0, #0
   10a28:	beq	10a48 <close@plt+0x108>
   10a2c:	bl	10898 <__errno_location@plt>
   10a30:	ldr	r0, [r0]
   10a34:	bl	1085c <strerror@plt>
   10a38:	ldr	r1, [pc, #796]	; 10d5c <close@plt+0x41c>
   10a3c:	mov	r2, r0
   10a40:	mov	r0, r9
   10a44:	bl	108b0 <mdnsd_log@plt>
   10a48:	add	r0, sp, #65536	; 0x10000
   10a4c:	mov	r2, #16
   10a50:	mov	r1, #0
   10a54:	add	r0, r0, #184	; 0xb8
   10a58:	bl	108bc <memset@plt>
   10a5c:	add	r3, sp, #67584	; 0x10800
   10a60:	add	r3, r3, #224	; 0xe0
   10a64:	sub	r3, r3, #2080	; 0x820
   10a68:	mov	r2, #2
   10a6c:	strh	r2, [r3, #-8]
   10a70:	ldr	r2, [pc, #744]	; 10d60 <close@plt+0x420>
   10a74:	add	r1, sp, #65536	; 0x10000
   10a78:	strh	r2, [r3, #-6]
   10a7c:	add	r1, r1, #184	; 0xb8
   10a80:	mov	r2, #16
   10a84:	mov	r0, r4
   10a88:	bl	108a4 <bind@plt>
   10a8c:	subs	r9, r0, #0
   10a90:	beq	10af4 <close@plt+0x1b4>
   10a94:	mov	r0, r4
   10a98:	bl	10940 <close@plt>
   10a9c:	mov	r4, #0
   10aa0:	b	10b44 <close@plt+0x204>
   10aa4:	cmp	r0, #104	; 0x68
   10aa8:	beq	10abc <close@plt+0x17c>
   10aac:	cmp	r0, #116	; 0x74
   10ab0:	beq	10ad4 <close@plt+0x194>
   10ab4:	cmp	r0, #63	; 0x3f
   10ab8:	bne	10ae4 <close@plt+0x1a4>
   10abc:	ldr	r0, [pc, #672]	; 10d64 <close@plt+0x424>
   10ac0:	bl	10844 <puts@plt>
   10ac4:	mov	r0, #0
   10ac8:	add	sp, sp, #133120	; 0x20800
   10acc:	add	sp, sp, #228	; 0xe4
   10ad0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ad4:	ldr	r0, [r7]
   10ad8:	bl	108ec <atoi@plt>
   10adc:	mov	r8, r0
   10ae0:	b	1096c <close@plt+0x2c>
   10ae4:	ldr	r0, [pc, #632]	; 10d64 <close@plt+0x424>
   10ae8:	bl	10844 <puts@plt>
   10aec:	mov	r0, #1
   10af0:	b	10ac8 <close@plt+0x188>
   10af4:	ldr	r0, [pc, #620]	; 10d68 <close@plt+0x428>
   10af8:	bl	10928 <inet_addr@plt>
   10afc:	mov	r3, #8
   10b00:	str	r3, [sp]
   10b04:	mov	r2, #35	; 0x23
   10b08:	add	r3, sp, #184	; 0xb8
   10b0c:	mov	r1, r9
   10b10:	str	r9, [sp, #188]	; 0xbc
   10b14:	str	r0, [sp, #184]	; 0xb8
   10b18:	mov	r0, r4
   10b1c:	bl	107fc <setsockopt@plt>
   10b20:	cmp	r0, #0
   10b24:	beq	10b44 <close@plt+0x204>
   10b28:	bl	10898 <__errno_location@plt>
   10b2c:	ldr	r0, [r0]
   10b30:	bl	1085c <strerror@plt>
   10b34:	ldr	r1, [pc, #560]	; 10d6c <close@plt+0x42c>
   10b38:	mov	r2, r0
   10b3c:	mov	r0, #4
   10b40:	bl	108b0 <mdnsd_log@plt>
   10b44:	mov	r2, r6
   10b48:	mov	r1, r8
   10b4c:	ldr	r0, [pc, #540]	; 10d70 <close@plt+0x430>
   10b50:	bl	10808 <printf@plt>
   10b54:	mov	r3, #0
   10b58:	str	r3, [sp]
   10b5c:	mov	r1, r6
   10b60:	ldr	r3, [pc, #524]	; 10d74 <close@plt+0x434>
   10b64:	mov	r2, r8
   10b68:	mov	r0, r5
   10b6c:	bl	1091c <mdnsd_query@plt>
   10b70:	mov	r6, #1
   10b74:	and	r3, r4, #31
   10b78:	asr	r9, r4, #5
   10b7c:	lsl	r6, r6, r3
   10b80:	mov	r0, r5
   10b84:	bl	108d4 <mdnsd_sleep@plt>
   10b88:	mov	r3, #0
   10b8c:	mov	r2, r3
   10b90:	str	r2, [r7, r3, lsl #2]
   10b94:	add	r3, r3, #1
   10b98:	cmp	r3, #32
   10b9c:	bne	10b90 <close@plt+0x250>
   10ba0:	add	r3, sp, #2272	; 0x8e0
   10ba4:	add	r8, r3, r9, lsl #2
   10ba8:	mov	r1, r7
   10bac:	ldr	r3, [r8, #-2216]	; 0xfffff758
   10bb0:	orr	r3, r3, r6
   10bb4:	str	r3, [r8, #-2216]	; 0xfffff758
   10bb8:	mov	r3, #0
   10bbc:	str	r0, [sp]
   10bc0:	mov	r2, r3
   10bc4:	add	r0, r4, #1
   10bc8:	bl	1082c <select@plt>
   10bcc:	ldr	r3, [r8, #-2216]	; 0xfffff758
   10bd0:	tst	r6, r3
   10bd4:	movne	r3, #16
   10bd8:	strne	r3, [sp, #20]
   10bdc:	bne	10ce8 <close@plt+0x3a8>
   10be0:	add	r1, sp, #65536	; 0x10000
   10be4:	add	r3, sp, #14
   10be8:	add	r2, sp, #16
   10bec:	add	r1, r1, #184	; 0xb8
   10bf0:	mov	r0, r5
   10bf4:	bl	10904 <mdnsd_out@plt>
   10bf8:	cmp	r0, #0
   10bfc:	beq	10b80 <close@plt+0x240>
   10c00:	add	r8, sp, #40	; 0x28
   10c04:	mov	sl, #16
   10c08:	mov	r1, #0
   10c0c:	mov	r2, sl
   10c10:	mov	r0, r8
   10c14:	bl	108bc <memset@plt>
   10c18:	add	r3, sp, #48	; 0x30
   10c1c:	mov	r2, #2
   10c20:	strh	r2, [r3, #-8]
   10c24:	add	r2, sp, sl
   10c28:	add	r0, sp, #65536	; 0x10000
   10c2c:	ldrh	r2, [r2, #-2]
   10c30:	add	r0, r0, #184	; 0xb8
   10c34:	strh	r2, [r3, #-6]
   10c38:	ldr	r3, [sp, #16]
   10c3c:	str	r3, [sp, #44]	; 0x2c
   10c40:	bl	10880 <message_packet@plt>
   10c44:	mov	fp, r0
   10c48:	add	r0, sp, #65536	; 0x10000
   10c4c:	add	r0, r0, #184	; 0xb8
   10c50:	bl	108e0 <message_packet_len@plt>
   10c54:	stm	sp, {r8, sl}
   10c58:	mov	r3, #0
   10c5c:	mov	r1, fp
   10c60:	mov	r2, r0
   10c64:	mov	r0, r4
   10c68:	bl	108c8 <sendto@plt>
   10c6c:	mov	r8, r0
   10c70:	add	r0, sp, #65536	; 0x10000
   10c74:	add	r0, r0, #184	; 0xb8
   10c78:	bl	108e0 <message_packet_len@plt>
   10c7c:	cmp	r8, r0
   10c80:	beq	10be0 <close@plt+0x2a0>
   10c84:	bl	10898 <__errno_location@plt>
   10c88:	ldr	r0, [r0]
   10c8c:	bl	1085c <strerror@plt>
   10c90:	mov	r1, r0
   10c94:	ldr	r0, [pc, #220]	; 10d78 <close@plt+0x438>
   10c98:	bl	10808 <printf@plt>
   10c9c:	b	10aec <close@plt+0x1ac>
   10ca0:	add	r0, sp, #65536	; 0x10000
   10ca4:	ldr	r2, [pc, #208]	; 10d7c <close@plt+0x43c>
   10ca8:	mov	r1, #0
   10cac:	add	r0, r0, #184	; 0xb8
   10cb0:	bl	108bc <memset@plt>
   10cb4:	add	r0, sp, #65536	; 0x10000
   10cb8:	add	r1, sp, #184	; 0xb8
   10cbc:	add	r0, r0, #184	; 0xb8
   10cc0:	bl	1088c <message_parse@plt>
   10cc4:	cmp	r0, #0
   10cc8:	bne	10cec <close@plt+0x3ac>
   10ccc:	add	r3, sp, #32
   10cd0:	add	r1, sp, #65536	; 0x10000
   10cd4:	ldrh	r3, [r3, #-6]
   10cd8:	ldr	r2, [sp, #28]
   10cdc:	add	r1, r1, #184	; 0xb8
   10ce0:	mov	r0, r5
   10ce4:	bl	108f8 <mdnsd_in@plt>
   10ce8:	add	r8, sp, #24
   10cec:	add	r3, sp, #20
   10cf0:	str	r3, [sp, #4]
   10cf4:	str	r8, [sp]
   10cf8:	mov	r3, #0
   10cfc:	ldr	r2, [pc, #124]	; 10d80 <close@plt+0x440>
   10d00:	add	r1, sp, #184	; 0xb8
   10d04:	mov	r0, r4
   10d08:	bl	10838 <recvfrom@plt>
   10d0c:	cmp	r0, #0
   10d10:	bgt	10ca0 <close@plt+0x360>
   10d14:	beq	10be0 <close@plt+0x2a0>
   10d18:	bl	10898 <__errno_location@plt>
   10d1c:	ldr	r8, [r0]
   10d20:	cmp	r8, #11
   10d24:	beq	10be0 <close@plt+0x2a0>
   10d28:	mov	r0, r8
   10d2c:	bl	1085c <strerror@plt>
   10d30:	mov	r1, r8
   10d34:	mov	r2, r0
   10d38:	ldr	r0, [pc, #68]	; 10d84 <close@plt+0x444>
   10d3c:	bl	10808 <printf@plt>
   10d40:	b	10aec <close@plt+0x1ac>
   10d44:	andeq	r1, r1, r4, lsr #1
   10d48:	muleq	r2, r8, r0
   10d4c:	muleq	r2, r0, r0
   10d50:	andeq	r1, r1, r2, rrx
   10d54:	andeq	r0, r0, r2, lsl #16
   10d58:	andeq	r1, r1, r9, lsr #1
   10d5c:	andeq	r1, r1, r9, asr #1
   10d60:			; <UNDEFINED> instruction: 0xffffe914
   10d64:	andeq	r1, r1, r0, lsl #1
   10d68:	andeq	r1, r1, r9, ror #1
   10d6c:	strdeq	r1, [r1], -r5
   10d70:	andeq	r1, r1, pc, lsl r1
   10d74:			; <UNDEFINED> instruction: 0x00010eb0
   10d78:	andeq	r1, r1, pc, asr r1
   10d7c:	andeq	r0, r1, r8, lsr #16
   10d80:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   10d84:	andeq	r1, r1, ip, lsr r1
   10d88:	mov	fp, #0
   10d8c:	mov	lr, #0
   10d90:	pop	{r1}		; (ldr r1, [sp], #4)
   10d94:	mov	r2, sp
   10d98:	push	{r2}		; (str r2, [sp, #-4]!)
   10d9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10da0:	ldr	ip, [pc, #16]	; 10db8 <close@plt+0x478>
   10da4:	push	{ip}		; (str ip, [sp, #-4]!)
   10da8:	ldr	r0, [pc, #12]	; 10dbc <close@plt+0x47c>
   10dac:	ldr	r3, [pc, #12]	; 10dc0 <close@plt+0x480>
   10db0:	bl	10850 <__libc_start_main@plt>
   10db4:	bl	10934 <abort@plt>
   10db8:	ldrdeq	r0, [r1], -r4
   10dbc:	andeq	r0, r1, ip, asr #18
   10dc0:	andeq	r0, r1, r4, ror pc
   10dc4:	ldr	r3, [pc, #20]	; 10de0 <close@plt+0x4a0>
   10dc8:	ldr	r2, [pc, #20]	; 10de4 <close@plt+0x4a4>
   10dcc:	add	r3, pc, r3
   10dd0:	ldr	r2, [r3, r2]
   10dd4:	cmp	r2, #0
   10dd8:	bxeq	lr
   10ddc:	b	10868 <__gmon_start__@plt>
   10de0:	andeq	r1, r1, ip, lsr #4
   10de4:	andeq	r0, r0, r0, lsl #1
   10de8:	ldr	r3, [pc, #28]	; 10e0c <close@plt+0x4cc>
   10dec:	ldr	r0, [pc, #28]	; 10e10 <close@plt+0x4d0>
   10df0:	sub	r3, r3, r0
   10df4:	cmp	r3, #6
   10df8:	bxls	lr
   10dfc:	ldr	r3, [pc, #16]	; 10e14 <close@plt+0x4d4>
   10e00:	cmp	r3, #0
   10e04:	bxeq	lr
   10e08:	bx	r3
   10e0c:	andeq	r2, r2, pc, lsl #1
   10e10:	andeq	r2, r2, ip, lsl #1
   10e14:	andeq	r0, r0, r0
   10e18:	ldr	r1, [pc, #36]	; 10e44 <close@plt+0x504>
   10e1c:	ldr	r0, [pc, #36]	; 10e48 <close@plt+0x508>
   10e20:	sub	r1, r1, r0
   10e24:	asr	r1, r1, #2
   10e28:	add	r1, r1, r1, lsr #31
   10e2c:	asrs	r1, r1, #1
   10e30:	bxeq	lr
   10e34:	ldr	r3, [pc, #16]	; 10e4c <close@plt+0x50c>
   10e38:	cmp	r3, #0
   10e3c:	bxeq	lr
   10e40:	bx	r3
   10e44:	andeq	r2, r2, ip, lsl #1
   10e48:	andeq	r2, r2, ip, lsl #1
   10e4c:	andeq	r0, r0, r0
   10e50:	push	{r4, lr}
   10e54:	ldr	r4, [pc, #24]	; 10e74 <close@plt+0x534>
   10e58:	ldrb	r3, [r4]
   10e5c:	cmp	r3, #0
   10e60:	popne	{r4, pc}
   10e64:	bl	10de8 <close@plt+0x4a8>
   10e68:	mov	r3, #1
   10e6c:	strb	r3, [r4]
   10e70:	pop	{r4, pc}
   10e74:	muleq	r2, ip, r0
   10e78:	ldr	r0, [pc, #40]	; 10ea8 <close@plt+0x568>
   10e7c:	ldr	r3, [r0]
   10e80:	cmp	r3, #0
   10e84:	bne	10e8c <close@plt+0x54c>
   10e88:	b	10e18 <close@plt+0x4d8>
   10e8c:	ldr	r3, [pc, #24]	; 10eac <close@plt+0x56c>
   10e90:	cmp	r3, #0
   10e94:	beq	10e88 <close@plt+0x548>
   10e98:	push	{r4, lr}
   10e9c:	blx	r3
   10ea0:	pop	{r4, lr}
   10ea4:	b	10e18 <close@plt+0x4d8>
   10ea8:	andeq	r1, r2, ip, lsl #30
   10eac:	andeq	r0, r0, r0
   10eb0:	push	{r0, r1, r4, r5, r6, lr}
   10eb4:	mov	r4, r0
   10eb8:	ldr	r5, [r0, #8]
   10ebc:	cmp	r5, #0
   10ec0:	beq	10ed0 <close@plt+0x590>
   10ec4:	mov	r0, #0
   10ec8:	bl	10814 <time@plt>
   10ecc:	sub	r5, r5, r0
   10ed0:	ldrh	r1, [r4, #4]
   10ed4:	cmp	r1, #12
   10ed8:	beq	10f18 <close@plt+0x5d8>
   10edc:	cmp	r1, #33	; 0x21
   10ee0:	beq	10f2c <close@plt+0x5ec>
   10ee4:	cmp	r1, #1
   10ee8:	bne	10f4c <close@plt+0x60c>
   10eec:	ldr	r0, [r4, #20]
   10ef0:	ldr	r6, [r4]
   10ef4:	bl	10820 <inet_ntoa@plt>
   10ef8:	mov	r2, r5
   10efc:	mov	r1, r6
   10f00:	mov	r3, r0
   10f04:	ldr	r0, [pc, #88]	; 10f64 <close@plt+0x624>
   10f08:	bl	10808 <printf@plt>
   10f0c:	mov	r0, #0
   10f10:	add	sp, sp, #8
   10f14:	pop	{r4, r5, r6, pc}
   10f18:	ldr	r3, [r4, #24]
   10f1c:	mov	r2, r5
   10f20:	ldr	r1, [r4]
   10f24:	ldr	r0, [pc, #60]	; 10f68 <close@plt+0x628>
   10f28:	b	10f08 <close@plt+0x5c8>
   10f2c:	ldrh	r3, [r4, #32]
   10f30:	ldr	r1, [r4]
   10f34:	ldr	r0, [pc, #48]	; 10f6c <close@plt+0x62c>
   10f38:	str	r3, [sp]
   10f3c:	ldr	r3, [r4, #24]
   10f40:	mov	r2, r5
   10f44:	bl	10808 <printf@plt>
   10f48:	b	10f0c <close@plt+0x5cc>
   10f4c:	ldrh	r3, [r4, #12]
   10f50:	ldr	r2, [r4]
   10f54:	ldr	r0, [pc, #20]	; 10f70 <close@plt+0x630>
   10f58:	str	r3, [sp]
   10f5c:	mov	r3, r5
   10f60:	b	10f44 <close@plt+0x604>
   10f64:	andeq	r0, r1, r4, ror #31
   10f68:	andeq	r1, r1, r2
   10f6c:	andeq	r1, r1, pc, lsl r0
   10f70:	andeq	r1, r1, pc, lsr r0
   10f74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10f78:	mov	r7, r0
   10f7c:	ldr	r6, [pc, #72]	; 10fcc <close@plt+0x68c>
   10f80:	ldr	r5, [pc, #72]	; 10fd0 <close@plt+0x690>
   10f84:	add	r6, pc, r6
   10f88:	add	r5, pc, r5
   10f8c:	sub	r6, r6, r5
   10f90:	mov	r8, r1
   10f94:	mov	r9, r2
   10f98:	bl	107d0 <mdnsd_new@plt-0x20>
   10f9c:	asrs	r6, r6, #2
   10fa0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10fa4:	mov	r4, #0
   10fa8:	add	r4, r4, #1
   10fac:	ldr	r3, [r5], #4
   10fb0:	mov	r2, r9
   10fb4:	mov	r1, r8
   10fb8:	mov	r0, r7
   10fbc:	blx	r3
   10fc0:	cmp	r6, r4
   10fc4:	bne	10fa8 <close@plt+0x668>
   10fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10fcc:	andeq	r0, r1, ip, ror pc
   10fd0:	andeq	r0, r1, r4, ror pc
   10fd4:	bx	lr

Disassembly of section .fini:

00010fd8 <.fini>:
   10fd8:	push	{r3, lr}
   10fdc:	pop	{r3, pc}
