
../repos/inetutils/telnetd/telnetd:     file format elf32-littlearm


Disassembly of section .init:

00011748 <.init>:
   11748:	push	{r3, lr}
   1174c:	bl	11cd8 <tcgetattr@plt+0xf0>
   11750:	pop	{r3, pc}

Disassembly of section .plt:

00011754 <calloc@plt-0x14>:
   11754:	push	{lr}		; (str lr, [sp, #-4]!)
   11758:	ldr	lr, [pc, #4]	; 11764 <calloc@plt-0x4>
   1175c:	add	lr, pc, lr
   11760:	ldr	pc, [lr, #8]!
   11764:	muleq	r2, ip, r8

00011768 <calloc@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #32, 20	; 0x20000
   11770:	ldr	pc, [ip, #2204]!	; 0x89c

00011774 <fputs_unlocked@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #32, 20	; 0x20000
   1177c:	ldr	pc, [ip, #2196]!	; 0x894

00011780 <raise@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #32, 20	; 0x20000
   11788:	ldr	pc, [ip, #2188]!	; 0x88c

0001178c <strcmp@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #32, 20	; 0x20000
   11794:	ldr	pc, [ip, #2180]!	; 0x884

00011798 <strtol@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #32, 20	; 0x20000
   117a0:	ldr	pc, [ip, #2172]!	; 0x87c

000117a4 <setsockopt@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #32, 20	; 0x20000
   117ac:	ldr	pc, [ip, #2164]!	; 0x874

000117b0 <printf@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #32, 20	; 0x20000
   117b8:	ldr	pc, [ip, #2156]!	; 0x86c

000117bc <read@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #32, 20	; 0x20000
   117c4:	ldr	pc, [ip, #2148]!	; 0x864

000117c8 <memmove@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #32, 20	; 0x20000
   117d0:	ldr	pc, [ip, #2140]!	; 0x85c

000117d4 <strchrnul@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #32, 20	; 0x20000
   117dc:	ldr	pc, [ip, #2132]!	; 0x854

000117e0 <free@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #32, 20	; 0x20000
   117e8:	ldr	pc, [ip, #2124]!	; 0x84c

000117ec <gai_strerror@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #32, 20	; 0x20000
   117f4:	ldr	pc, [ip, #2116]!	; 0x844

000117f8 <strndup@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #32, 20	; 0x20000
   11800:	ldr	pc, [ip, #2108]!	; 0x83c

00011804 <pututxline@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #32, 20	; 0x20000
   1180c:	ldr	pc, [ip, #2100]!	; 0x834

00011810 <memcpy@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #32, 20	; 0x20000
   11818:	ldr	pc, [ip, #2092]!	; 0x82c

0001181c <signal@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #32, 20	; 0x20000
   11824:	ldr	pc, [ip, #2084]!	; 0x824

00011828 <time@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #32, 20	; 0x20000
   11830:	ldr	pc, [ip, #2076]!	; 0x81c

00011834 <fwrite_unlocked@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #32, 20	; 0x20000
   1183c:	ldr	pc, [ip, #2068]!	; 0x814

00011840 <memcmp@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #32, 20	; 0x20000
   11848:	ldr	pc, [ip, #2060]!	; 0x80c

0001184c <select@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #32, 20	; 0x20000
   11854:	ldr	pc, [ip, #2052]!	; 0x804

00011858 <sleep@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #32, 20	; 0x20000
   11860:	ldr	pc, [ip, #2044]!	; 0x7fc

00011864 <uname@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #32, 20	; 0x20000
   1186c:	ldr	pc, [ip, #2036]!	; 0x7f4

00011870 <strdup@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #32, 20	; 0x20000
   11878:	ldr	pc, [ip, #2028]!	; 0x7ec

0001187c <setutxent@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #32, 20	; 0x20000
   11884:	ldr	pc, [ip, #2020]!	; 0x7e4

00011888 <realloc@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #32, 20	; 0x20000
   11890:	ldr	pc, [ip, #2012]!	; 0x7dc

00011894 <strcasecmp@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #32, 20	; 0x20000
   1189c:	ldr	pc, [ip, #2004]!	; 0x7d4

000118a0 <funlockfile@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #32, 20	; 0x20000
   118a8:	ldr	pc, [ip, #1996]!	; 0x7cc

000118ac <cfsetospeed@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #32, 20	; 0x20000
   118b4:	ldr	pc, [ip, #1988]!	; 0x7c4

000118b8 <sigaction@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #32, 20	; 0x20000
   118c0:	ldr	pc, [ip, #1980]!	; 0x7bc

000118c4 <fwrite@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #32, 20	; 0x20000
   118cc:	ldr	pc, [ip, #1972]!	; 0x7b4

000118d0 <strcat@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #32, 20	; 0x20000
   118d8:	ldr	pc, [ip, #1964]!	; 0x7ac

000118dc <ioctl@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #32, 20	; 0x20000
   118e4:	ldr	pc, [ip, #1956]!	; 0x7a4

000118e8 <waitpid@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #32, 20	; 0x20000
   118f0:	ldr	pc, [ip, #1948]!	; 0x79c

000118f4 <tcsetattr@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #32, 20	; 0x20000
   118fc:	ldr	pc, [ip, #1940]!	; 0x794

00011900 <gettimeofday@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #32, 20	; 0x20000
   11908:	ldr	pc, [ip, #1932]!	; 0x78c

0001190c <error@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #32, 20	; 0x20000
   11914:	ldr	pc, [ip, #1924]!	; 0x784

00011918 <gethostname@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #32, 20	; 0x20000
   11920:	ldr	pc, [ip, #1916]!	; 0x77c

00011924 <getenv@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #32, 20	; 0x20000
   1192c:	ldr	pc, [ip, #1908]!	; 0x774

00011930 <malloc@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #32, 20	; 0x20000
   11938:	ldr	pc, [ip, #1900]!	; 0x76c

0001193c <__libc_start_main@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #32, 20	; 0x20000
   11944:	ldr	pc, [ip, #1892]!	; 0x764

00011948 <strerror@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #32, 20	; 0x20000
   11950:	ldr	pc, [ip, #1884]!	; 0x75c

00011954 <strftime@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #32, 20	; 0x20000
   1195c:	ldr	pc, [ip, #1876]!	; 0x754

00011960 <localtime@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #32, 20	; 0x20000
   11968:	ldr	pc, [ip, #1868]!	; 0x74c

0001196c <__ctype_tolower_loc@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #32, 20	; 0x20000
   11974:	ldr	pc, [ip, #1860]!	; 0x744

00011978 <__gmon_start__@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #32, 20	; 0x20000
   11980:	ldr	pc, [ip, #1852]!	; 0x73c

00011984 <mempcpy@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #32, 20	; 0x20000
   1198c:	ldr	pc, [ip, #1844]!	; 0x734

00011990 <__ctype_b_loc@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #32, 20	; 0x20000
   11998:	ldr	pc, [ip, #1836]!	; 0x72c

0001199c <getpid@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #32, 20	; 0x20000
   119a4:	ldr	pc, [ip, #1828]!	; 0x724

000119a8 <exit@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #32, 20	; 0x20000
   119b0:	ldr	pc, [ip, #1820]!	; 0x71c

000119b4 <strtoul@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #32, 20	; 0x20000
   119bc:	ldr	pc, [ip, #1812]!	; 0x714

000119c0 <strlen@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #32, 20	; 0x20000
   119c8:	ldr	pc, [ip, #1804]!	; 0x70c

000119cc <strchr@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #32, 20	; 0x20000
   119d4:	ldr	pc, [ip, #1796]!	; 0x704

000119d8 <setenv@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #32, 20	; 0x20000
   119e0:	ldr	pc, [ip, #1788]!	; 0x6fc

000119e4 <fprintf@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #32, 20	; 0x20000
   119ec:	ldr	pc, [ip, #1780]!	; 0x6f4

000119f0 <cfsetispeed@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #32, 20	; 0x20000
   119f8:	ldr	pc, [ip, #1772]!	; 0x6ec

000119fc <chown@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #32, 20	; 0x20000
   11a04:	ldr	pc, [ip, #1764]!	; 0x6e4

00011a08 <execv@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #32, 20	; 0x20000
   11a10:	ldr	pc, [ip, #1756]!	; 0x6dc

00011a14 <__errno_location@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #32, 20	; 0x20000
   11a1c:	ldr	pc, [ip, #1748]!	; 0x6d4

00011a20 <snprintf@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #32, 20	; 0x20000
   11a28:	ldr	pc, [ip, #1740]!	; 0x6cc

00011a2c <strerror_r@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #32, 20	; 0x20000
   11a34:	ldr	pc, [ip, #1732]!	; 0x6c4

00011a38 <memset@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #32, 20	; 0x20000
   11a40:	ldr	pc, [ip, #1724]!	; 0x6bc

00011a44 <strncpy@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #32, 20	; 0x20000
   11a4c:	ldr	pc, [ip, #1716]!	; 0x6b4

00011a50 <write@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #32, 20	; 0x20000
   11a58:	ldr	pc, [ip, #1708]!	; 0x6ac

00011a5c <memchr@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #32, 20	; 0x20000
   11a64:	ldr	pc, [ip, #1700]!	; 0x6a4

00011a68 <fclose@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #32, 20	; 0x20000
   11a70:	ldr	pc, [ip, #1692]!	; 0x69c

00011a74 <getutxline@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #32, 20	; 0x20000
   11a7c:	ldr	pc, [ip, #1684]!	; 0x694

00011a80 <strtok@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #32, 20	; 0x20000
   11a88:	ldr	pc, [ip, #1676]!	; 0x68c

00011a8c <shutdown@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #32, 20	; 0x20000
   11a94:	ldr	pc, [ip, #1668]!	; 0x684

00011a98 <endutxent@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #32, 20	; 0x20000
   11aa0:	ldr	pc, [ip, #1660]!	; 0x67c

00011aa4 <__overflow@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #32, 20	; 0x20000
   11aac:	ldr	pc, [ip, #1652]!	; 0x674

00011ab0 <sigemptyset@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #32, 20	; 0x20000
   11ab8:	ldr	pc, [ip, #1644]!	; 0x66c

00011abc <getnameinfo@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #32, 20	; 0x20000
   11ac4:	ldr	pc, [ip, #1636]!	; 0x664

00011ac8 <strrchr@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #32, 20	; 0x20000
   11ad0:	ldr	pc, [ip, #1628]!	; 0x65c

00011ad4 <vfprintf@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #32, 20	; 0x20000
   11adc:	ldr	pc, [ip, #1620]!	; 0x654

00011ae0 <fputc@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #32, 20	; 0x20000
   11ae8:	ldr	pc, [ip, #1612]!	; 0x64c

00011aec <syslog@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #32, 20	; 0x20000
   11af4:	ldr	pc, [ip, #1604]!	; 0x644

00011af8 <updwtmpx@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #32, 20	; 0x20000
   11b00:	ldr	pc, [ip, #1596]!	; 0x63c

00011b04 <sprintf@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #32, 20	; 0x20000
   11b0c:	ldr	pc, [ip, #1588]!	; 0x634

00011b10 <openlog@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #32, 20	; 0x20000
   11b18:	ldr	pc, [ip, #1580]!	; 0x62c

00011b1c <flockfile@plt>:
   11b1c:	add	ip, pc, #0, 12
   11b20:	add	ip, ip, #32, 20	; 0x20000
   11b24:	ldr	pc, [ip, #1572]!	; 0x624

00011b28 <vsnprintf@plt>:
   11b28:	add	ip, pc, #0, 12
   11b2c:	add	ip, ip, #32, 20	; 0x20000
   11b30:	ldr	pc, [ip, #1564]!	; 0x61c

00011b34 <fopen64@plt>:
   11b34:	add	ip, pc, #0, 12
   11b38:	add	ip, ip, #32, 20	; 0x20000
   11b3c:	ldr	pc, [ip, #1556]!	; 0x614

00011b40 <qsort@plt>:
   11b40:	add	ip, pc, #0, 12
   11b44:	add	ip, ip, #32, 20	; 0x20000
   11b48:	ldr	pc, [ip, #1548]!	; 0x60c

00011b4c <getpeername@plt>:
   11b4c:	add	ip, pc, #0, 12
   11b50:	add	ip, ip, #32, 20	; 0x20000
   11b54:	ldr	pc, [ip, #1540]!	; 0x604

00011b58 <freeaddrinfo@plt>:
   11b58:	add	ip, pc, #0, 12
   11b5c:	add	ip, ip, #32, 20	; 0x20000
   11b60:	ldr	pc, [ip, #1532]!	; 0x5fc

00011b64 <getaddrinfo@plt>:
   11b64:	add	ip, pc, #0, 12
   11b68:	add	ip, ip, #32, 20	; 0x20000
   11b6c:	ldr	pc, [ip, #1524]!	; 0x5f4

00011b70 <umask@plt>:
   11b70:	add	ip, pc, #0, 12
   11b74:	add	ip, ip, #32, 20	; 0x20000
   11b78:	ldr	pc, [ip, #1516]!	; 0x5ec

00011b7c <chmod@plt>:
   11b7c:	add	ip, pc, #0, 12
   11b80:	add	ip, ip, #32, 20	; 0x20000
   11b84:	ldr	pc, [ip, #1508]!	; 0x5e4

00011b88 <tgetent@plt>:
   11b88:	add	ip, pc, #0, 12
   11b8c:	add	ip, ip, #32, 20	; 0x20000
   11b90:	ldr	pc, [ip, #1500]!	; 0x5dc

00011b94 <unsetenv@plt>:
   11b94:	add	ip, pc, #0, 12
   11b98:	add	ip, ip, #32, 20	; 0x20000
   11b9c:	ldr	pc, [ip, #1492]!	; 0x5d4

00011ba0 <strncmp@plt>:
   11ba0:	add	ip, pc, #0, 12
   11ba4:	add	ip, ip, #32, 20	; 0x20000
   11ba8:	ldr	pc, [ip, #1484]!	; 0x5cc

00011bac <abort@plt>:
   11bac:	add	ip, pc, #0, 12
   11bb0:	add	ip, ip, #32, 20	; 0x20000
   11bb4:	ldr	pc, [ip, #1476]!	; 0x5c4

00011bb8 <close@plt>:
   11bb8:	add	ip, pc, #0, 12
   11bbc:	add	ip, ip, #32, 20	; 0x20000
   11bc0:	ldr	pc, [ip, #1468]!	; 0x5bc

00011bc4 <send@plt>:
   11bc4:	add	ip, pc, #0, 12
   11bc8:	add	ip, ip, #32, 20	; 0x20000
   11bcc:	ldr	pc, [ip, #1460]!	; 0x5b4

00011bd0 <forkpty@plt>:
   11bd0:	add	ip, pc, #0, 12
   11bd4:	add	ip, ip, #32, 20	; 0x20000
   11bd8:	ldr	pc, [ip, #1452]!	; 0x5ac

00011bdc <__assert_fail@plt>:
   11bdc:	add	ip, pc, #0, 12
   11be0:	add	ip, ip, #32, 20	; 0x20000
   11be4:	ldr	pc, [ip, #1444]!	; 0x5a4

00011be8 <tcgetattr@plt>:
   11be8:	add	ip, pc, #0, 12
   11bec:	add	ip, ip, #32, 20	; 0x20000
   11bf0:	ldr	pc, [ip, #1436]!	; 0x59c

Disassembly of section .text:

00011bf4 <argp_parse@@Base-0x7768>:
   11bf4:	push	{r4, r5, r6, lr}
   11bf8:	mov	r5, r0
   11bfc:	sub	sp, sp, #16
   11c00:	ldr	r0, [r1]
   11c04:	mov	r6, r1
   11c08:	bl	1a678 <_obstack_memory_used@@Base+0x34>
   11c0c:	ldr	r3, [pc, #112]	; 11c84 <tcgetattr@plt+0x9c>
   11c10:	ldr	r2, [pc, #112]	; 11c88 <tcgetattr@plt+0xa0>
   11c14:	ldr	r1, [pc, #112]	; 11c8c <tcgetattr@plt+0xa4>
   11c18:	ldr	r0, [pc, #112]	; 11c90 <tcgetattr@plt+0xa8>
   11c1c:	str	r2, [r3]
   11c20:	bl	1a120 <argp_parse@@Base+0xdc4>
   11c24:	mov	r2, #24
   11c28:	mov	r1, #5
   11c2c:	ldr	r0, [pc, #92]	; 11c90 <tcgetattr@plt+0xa8>
   11c30:	bl	11b10 <openlog@plt>
   11c34:	mov	r4, #0
   11c38:	add	r0, sp, #12
   11c3c:	mov	r3, r4
   11c40:	str	r0, [sp]
   11c44:	mov	r2, r6
   11c48:	mov	r1, r5
   11c4c:	str	r4, [sp, #4]
   11c50:	ldr	r0, [pc, #60]	; 11c94 <tcgetattr@plt+0xac>
   11c54:	bl	1935c <argp_parse@@Base>
   11c58:	ldr	r3, [sp, #12]
   11c5c:	cmp	r5, r3
   11c60:	beq	11c74 <tcgetattr@plt+0x8c>
   11c64:	mov	r1, r4
   11c68:	ldr	r2, [pc, #40]	; 11c98 <tcgetattr@plt+0xb0>
   11c6c:	mov	r0, #1
   11c70:	bl	1190c <error@plt>
   11c74:	bl	128dc <tcgetattr@plt+0xcf4>
   11c78:	bl	12094 <tcgetattr@plt+0x4ac>
   11c7c:	add	sp, sp, #16
   11c80:	pop	{r4, r5, r6, pc}
   11c84:	andeq	sl, r3, r4, ror #28
   11c88:	andeq	pc, r1, r8, lsl #31
   11c8c:			; <UNDEFINED> instruction: 0x000324b4
   11c90:	andeq	pc, r1, r0, lsr #31
   11c94:	andeq	r2, r3, ip, lsr #3
   11c98:	andeq	pc, r1, r8, lsr #31
   11c9c:	mov	fp, #0
   11ca0:	mov	lr, #0
   11ca4:	pop	{r1}		; (ldr r1, [sp], #4)
   11ca8:	mov	r2, sp
   11cac:	push	{r2}		; (str r2, [sp, #-4]!)
   11cb0:	push	{r0}		; (str r0, [sp, #-4]!)
   11cb4:	ldr	ip, [pc, #16]	; 11ccc <tcgetattr@plt+0xe4>
   11cb8:	push	{ip}		; (str ip, [sp, #-4]!)
   11cbc:	ldr	r0, [pc, #12]	; 11cd0 <tcgetattr@plt+0xe8>
   11cc0:	ldr	r3, [pc, #12]	; 11cd4 <tcgetattr@plt+0xec>
   11cc4:	bl	1193c <__libc_start_main@plt>
   11cc8:	bl	11bac <abort@plt>
   11ccc:	andeq	pc, r1, r8, ror #26
   11cd0:	strdeq	r1, [r1], -r4
   11cd4:	andeq	pc, r1, r8, lsl #26
   11cd8:	ldr	r3, [pc, #20]	; 11cf4 <tcgetattr@plt+0x10c>
   11cdc:	ldr	r2, [pc, #20]	; 11cf8 <tcgetattr@plt+0x110>
   11ce0:	add	r3, pc, r3
   11ce4:	ldr	r2, [r3, r2]
   11ce8:	cmp	r2, #0
   11cec:	bxeq	lr
   11cf0:	b	11978 <__gmon_start__@plt>
   11cf4:	andeq	r0, r2, r8, lsl r3
   11cf8:	muleq	r0, r0, r1
   11cfc:	ldr	r3, [pc, #28]	; 11d20 <tcgetattr@plt+0x138>
   11d00:	ldr	r0, [pc, #28]	; 11d24 <tcgetattr@plt+0x13c>
   11d04:	sub	r3, r3, r0
   11d08:	cmp	r3, #6
   11d0c:	bxls	lr
   11d10:	ldr	r3, [pc, #16]	; 11d28 <tcgetattr@plt+0x140>
   11d14:	cmp	r3, #0
   11d18:	bxeq	lr
   11d1c:	bx	r3
   11d20:	strdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   11d24:	strdeq	r2, [r3], -ip
   11d28:	andeq	r0, r0, r0
   11d2c:	ldr	r1, [pc, #36]	; 11d58 <tcgetattr@plt+0x170>
   11d30:	ldr	r0, [pc, #36]	; 11d5c <tcgetattr@plt+0x174>
   11d34:	sub	r1, r1, r0
   11d38:	asr	r1, r1, #2
   11d3c:	add	r1, r1, r1, lsr #31
   11d40:	asrs	r1, r1, #1
   11d44:	bxeq	lr
   11d48:	ldr	r3, [pc, #16]	; 11d60 <tcgetattr@plt+0x178>
   11d4c:	cmp	r3, #0
   11d50:	bxeq	lr
   11d54:	bx	r3
   11d58:	strdeq	r2, [r3], -ip
   11d5c:	strdeq	r2, [r3], -ip
   11d60:	andeq	r0, r0, r0
   11d64:	push	{r4, lr}
   11d68:	ldr	r4, [pc, #24]	; 11d88 <tcgetattr@plt+0x1a0>
   11d6c:	ldrb	r3, [r4]
   11d70:	cmp	r3, #0
   11d74:	popne	{r4, pc}
   11d78:	bl	11cfc <tcgetattr@plt+0x114>
   11d7c:	mov	r3, #1
   11d80:	strb	r3, [r4]
   11d84:	pop	{r4, pc}
   11d88:	andeq	r2, r3, r8, lsl r5
   11d8c:	ldr	r0, [pc, #40]	; 11dbc <tcgetattr@plt+0x1d4>
   11d90:	ldr	r3, [r0]
   11d94:	cmp	r3, #0
   11d98:	bne	11da0 <tcgetattr@plt+0x1b8>
   11d9c:	b	11d2c <tcgetattr@plt+0x144>
   11da0:	ldr	r3, [pc, #24]	; 11dc0 <tcgetattr@plt+0x1d8>
   11da4:	cmp	r3, #0
   11da8:	beq	11d9c <tcgetattr@plt+0x1b4>
   11dac:	push	{r4, lr}
   11db0:	blx	r3
   11db4:	pop	{r4, lr}
   11db8:	b	11d2c <tcgetattr@plt+0x144>
   11dbc:	strdeq	r1, [r3], -ip
   11dc0:	andeq	r0, r0, r0
   11dc4:	ldr	r3, [pc, #8]	; 11dd4 <tcgetattr@plt+0x1ec>
   11dc8:	mov	r2, #1
   11dcc:	str	r2, [r3]
   11dd0:	bx	lr
   11dd4:	andeq	r2, r3, ip, lsl r5
   11dd8:	sub	r0, r0, #68	; 0x44
   11ddc:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11de0:	mov	r4, r1
   11de4:	cmp	r0, #42	; 0x2a
   11de8:	ldrls	pc, [pc, r0, lsl #2]
   11dec:	b	11fb8 <tcgetattr@plt+0x3d0>
   11df0:			; <UNDEFINED> instruction: 0x00011eb0
   11df4:	andeq	r1, r1, r4, asr pc
   11df8:			; <UNDEFINED> instruction: 0x00011fb8
   11dfc:			; <UNDEFINED> instruction: 0x00011fb8
   11e00:			; <UNDEFINED> instruction: 0x00011fb8
   11e04:			; <UNDEFINED> instruction: 0x00011fb8
   11e08:			; <UNDEFINED> instruction: 0x00011fb8
   11e0c:			; <UNDEFINED> instruction: 0x00011fb8
   11e10:			; <UNDEFINED> instruction: 0x00011fb8
   11e14:			; <UNDEFINED> instruction: 0x00011fb8
   11e18:			; <UNDEFINED> instruction: 0x00011fb8
   11e1c:			; <UNDEFINED> instruction: 0x00011fb8
   11e20:			; <UNDEFINED> instruction: 0x00011fb8
   11e24:			; <UNDEFINED> instruction: 0x00011fb8
   11e28:			; <UNDEFINED> instruction: 0x00011fb8
   11e2c:			; <UNDEFINED> instruction: 0x00011fb8
   11e30:			; <UNDEFINED> instruction: 0x00011fb8
   11e34:	andeq	r1, r1, r4, lsr #31
   11e38:			; <UNDEFINED> instruction: 0x00011fb8
   11e3c:			; <UNDEFINED> instruction: 0x00011fb8
   11e40:			; <UNDEFINED> instruction: 0x00011fb8
   11e44:			; <UNDEFINED> instruction: 0x00011fb8
   11e48:			; <UNDEFINED> instruction: 0x00011fb8
   11e4c:			; <UNDEFINED> instruction: 0x00011fb8
   11e50:			; <UNDEFINED> instruction: 0x00011fb8
   11e54:			; <UNDEFINED> instruction: 0x00011fb8
   11e58:			; <UNDEFINED> instruction: 0x00011fb8
   11e5c:			; <UNDEFINED> instruction: 0x00011fb8
   11e60:			; <UNDEFINED> instruction: 0x00011fb8
   11e64:			; <UNDEFINED> instruction: 0x00011fb8
   11e68:			; <UNDEFINED> instruction: 0x00011fb8
   11e6c:			; <UNDEFINED> instruction: 0x00011fb8
   11e70:			; <UNDEFINED> instruction: 0x00011fb8
   11e74:			; <UNDEFINED> instruction: 0x00011fb8
   11e78:			; <UNDEFINED> instruction: 0x00011fb8
   11e7c:			; <UNDEFINED> instruction: 0x00011fb8
   11e80:	andeq	r1, r1, r4, ror #30
   11e84:			; <UNDEFINED> instruction: 0x00011fb8
   11e88:			; <UNDEFINED> instruction: 0x00011fb8
   11e8c:			; <UNDEFINED> instruction: 0x00011fb8
   11e90:	andeq	r1, r1, r8, ror pc
   11e94:			; <UNDEFINED> instruction: 0x00011fb8
   11e98:	muleq	r1, ip, lr
   11e9c:	ldr	r2, [pc, #448]	; 12064 <tcgetattr@plt+0x47c>
   11ea0:	mov	r3, #0
   11ea4:	mov	r0, r3
   11ea8:	str	r3, [r2, #8]
   11eac:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11eb0:	cmp	r1, #0
   11eb4:	beq	12028 <tcgetattr@plt+0x440>
   11eb8:	mov	r0, r1
   11ebc:	ldr	r1, [pc, #420]	; 12068 <tcgetattr@plt+0x480>
   11ec0:	bl	11a80 <strtok@plt>
   11ec4:	subs	r4, r0, #0
   11ec8:	beq	11fe4 <tcgetattr@plt+0x3fc>
   11ecc:	ldr	r7, [pc, #408]	; 1206c <tcgetattr@plt+0x484>
   11ed0:	ldr	sl, [pc, #408]	; 12070 <tcgetattr@plt+0x488>
   11ed4:	ldr	r6, [pc, #408]	; 12074 <tcgetattr@plt+0x48c>
   11ed8:	ldr	r9, [pc, #408]	; 12078 <tcgetattr@plt+0x490>
   11edc:	mov	r1, r7
   11ee0:	mov	r0, r4
   11ee4:	bl	1178c <strcmp@plt>
   11ee8:	cmp	r0, #0
   11eec:	moveq	r3, #1
   11ef0:	streq	r3, [r9, #4]
   11ef4:	beq	11fd0 <tcgetattr@plt+0x3e8>
   11ef8:	mov	r1, #61	; 0x3d
   11efc:	mov	r0, r4
   11f00:	bl	119cc <strchr@plt>
   11f04:	subs	fp, r0, #0
   11f08:	beq	12000 <tcgetattr@plt+0x418>
   11f0c:	mov	r2, #0
   11f10:	add	r0, fp, #1
   11f14:	mov	r1, r2
   11f18:	bl	119b4 <strtoul@plt>
   11f1c:	sub	fp, fp, r4
   11f20:	mov	r8, r0
   11f24:	mov	r0, sl
   11f28:	mov	r5, #0
   11f2c:	mov	r2, fp
   11f30:	mov	r1, r4
   11f34:	bl	11ba0 <strncmp@plt>
   11f38:	cmp	r0, #0
   11f3c:	beq	11fc0 <tcgetattr@plt+0x3d8>
   11f40:	add	r5, r5, #1
   11f44:	cmp	r5, #6
   11f48:	beq	11fec <tcgetattr@plt+0x404>
   11f4c:	ldr	r0, [r6, r5, lsl #3]
   11f50:	b	11f2c <tcgetattr@plt+0x344>
   11f54:	ldr	r3, [pc, #264]	; 12064 <tcgetattr@plt+0x47c>
   11f58:	mov	r0, #0
   11f5c:	str	r1, [r3]
   11f60:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f64:	ldr	r2, [pc, #248]	; 12064 <tcgetattr@plt+0x47c>
   11f68:	mov	r3, #0
   11f6c:	mov	r0, r3
   11f70:	str	r3, [r2, #4]
   11f74:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f78:	cmp	r1, #0
   11f7c:	beq	12050 <tcgetattr@plt+0x468>
   11f80:	ldr	r1, [pc, #244]	; 1207c <tcgetattr@plt+0x494>
   11f84:	mov	r0, r4
   11f88:	bl	1178c <strcmp@plt>
   11f8c:	cmp	r0, #0
   11f90:	bne	12014 <tcgetattr@plt+0x42c>
   11f94:	ldr	r3, [pc, #228]	; 12080 <tcgetattr@plt+0x498>
   11f98:	mov	r2, #2
   11f9c:	str	r2, [r3]
   11fa0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fa4:	ldr	r3, [pc, #204]	; 12078 <tcgetattr@plt+0x490>
   11fa8:	mov	r2, #1
   11fac:	mov	r0, #0
   11fb0:	str	r2, [r3, #8]
   11fb4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fb8:	mov	r0, #7
   11fbc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fc0:	add	r5, r6, r5, lsl #3
   11fc4:	ldr	r2, [pc, #184]	; 12084 <tcgetattr@plt+0x49c>
   11fc8:	ldr	r3, [r5, #4]
   11fcc:	str	r8, [r2, r3, lsl #2]
   11fd0:	ldr	r1, [pc, #144]	; 12068 <tcgetattr@plt+0x480>
   11fd4:	mov	r0, #0
   11fd8:	bl	11a80 <strtok@plt>
   11fdc:	subs	r4, r0, #0
   11fe0:	bne	11edc <tcgetattr@plt+0x2f4>
   11fe4:	mov	r0, #0
   11fe8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fec:	mov	r2, r4
   11ff0:	ldr	r1, [pc, #144]	; 12088 <tcgetattr@plt+0x4a0>
   11ff4:	mov	r0, #5
   11ff8:	bl	11aec <syslog@plt>
   11ffc:	b	11fd0 <tcgetattr@plt+0x3e8>
   12000:	mov	r0, r4
   12004:	bl	119c0 <strlen@plt>
   12008:	mov	r8, #100	; 0x64
   1200c:	mov	fp, r0
   12010:	b	11f24 <tcgetattr@plt+0x33c>
   12014:	mov	r2, r4
   12018:	ldr	r1, [pc, #108]	; 1208c <tcgetattr@plt+0x4a4>
   1201c:	mov	r0, #5
   12020:	bl	11aec <syslog@plt>
   12024:	b	11fe4 <tcgetattr@plt+0x3fc>
   12028:	ldr	r3, [pc, #84]	; 12084 <tcgetattr@plt+0x49c>
   1202c:	mov	r2, #100	; 0x64
   12030:	mov	r0, r1
   12034:	str	r2, [r3]
   12038:	str	r2, [r3, #4]
   1203c:	str	r2, [r3, #8]
   12040:	str	r2, [r3, #12]
   12044:	str	r2, [r3, #16]
   12048:	str	r2, [r3, #20]
   1204c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12050:	ldr	r3, [pc, #56]	; 12090 <tcgetattr@plt+0x4a8>
   12054:	mov	r2, #1
   12058:	mov	r0, r1
   1205c:	str	r2, [r3]
   12060:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12064:	muleq	r3, ip, r1
   12068:			; <UNDEFINED> instruction: 0x0001fdb0
   1206c:			; <UNDEFINED> instruction: 0x0001fdb4
   12070:	andeq	pc, r1, r8, lsr #27
   12074:	andeq	pc, r1, r8, ror sp	; <UNPREDICTABLE>
   12078:	andeq	r2, r3, ip, lsl r5
   1207c:			; <UNDEFINED> instruction: 0x0001fdb8
   12080:	strdeq	sl, [r3], -ip
   12084:	andeq	sl, r3, r0, ror #13
   12088:	andeq	pc, r1, r8, ror #27
   1208c:	andeq	pc, r1, r4, asr #27
   12090:	strdeq	sl, [r3], -r8
   12094:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12098:	sub	sp, sp, #684	; 0x2ac
   1209c:	ldr	r6, [pc, #2016]	; 12884 <tcgetattr@plt+0xc9c>
   120a0:	bl	180a8 <tcgetattr@plt+0x64c0>
   120a4:	ldrb	r3, [r6, #3]
   120a8:	tst	r3, #1
   120ac:	beq	127ac <tcgetattr@plt+0xbc4>
   120b0:	mov	r1, #1
   120b4:	mov	r0, r1
   120b8:	bl	15d08 <tcgetattr@plt+0x4120>
   120bc:	ldrb	r3, [r6, #34]	; 0x22
   120c0:	ands	r3, r3, #4
   120c4:	beq	1278c <tcgetattr@plt+0xba4>
   120c8:	mov	r1, #1
   120cc:	mov	r0, #31
   120d0:	bl	15d08 <tcgetattr@plt+0x4120>
   120d4:	mov	r1, #1
   120d8:	mov	r0, #5
   120dc:	bl	15dac <tcgetattr@plt+0x41c4>
   120e0:	ldr	r2, [pc, #1952]	; 12888 <tcgetattr@plt+0xca0>
   120e4:	ldr	lr, [pc, #1952]	; 1288c <tcgetattr@plt+0xca4>
   120e8:	mov	r3, #1
   120ec:	mov	r1, r3
   120f0:	mvn	ip, #0
   120f4:	mov	r0, #33	; 0x21
   120f8:	str	r3, [lr]
   120fc:	str	ip, [r2]
   12100:	bl	15d08 <tcgetattr@plt+0x4120>
   12104:	ldrb	r3, [r6, #31]
   12108:	add	r2, r3, #4
   1210c:	tst	r2, #8
   12110:	beq	12128 <tcgetattr@plt+0x540>
   12114:	bl	144c8 <tcgetattr@plt+0x28e0>
   12118:	ldrb	r3, [r6, #31]
   1211c:	add	r2, r3, #4
   12120:	tst	r2, #8
   12124:	bne	12114 <tcgetattr@plt+0x52c>
   12128:	ldrb	r2, [r6, #1]
   1212c:	tst	r2, #8
   12130:	beq	1276c <tcgetattr@plt+0xb84>
   12134:	tst	r3, #4
   12138:	beq	12164 <tcgetattr@plt+0x57c>
   1213c:	add	r2, r2, #4
   12140:	tst	r2, #8
   12144:	beq	12164 <tcgetattr@plt+0x57c>
   12148:	bl	144c8 <tcgetattr@plt+0x28e0>
   1214c:	ldrb	r2, [r6, #1]
   12150:	add	r3, r2, #4
   12154:	tst	r3, #8
   12158:	bne	12148 <tcgetattr@plt+0x560>
   1215c:	tst	r2, #8
   12160:	beq	1276c <tcgetattr@plt+0xb84>
   12164:	ldr	r3, [pc, #1828]	; 12890 <tcgetattr@plt+0xca8>
   12168:	str	r3, [sp, #20]
   1216c:	ldr	r3, [r3]
   12170:	cmp	r3, #0
   12174:	ble	12180 <tcgetattr@plt+0x598>
   12178:	ldr	r0, [pc, #1812]	; 12894 <tcgetattr@plt+0xcac>
   1217c:	bl	14244 <tcgetattr@plt+0x265c>
   12180:	mov	r0, #1
   12184:	bl	162e4 <tcgetattr@plt+0x46fc>
   12188:	ldrb	r2, [r6, #1]
   1218c:	tst	r2, #1
   12190:	beq	1277c <tcgetattr@plt+0xb94>
   12194:	ldr	r3, [pc, #1788]	; 12898 <tcgetattr@plt+0xcb0>
   12198:	ldr	r3, [r3]
   1219c:	cmp	r3, #3
   121a0:	ble	12864 <tcgetattr@plt+0xc7c>
   121a4:	bl	17100 <tcgetattr@plt+0x5518>
   121a8:	ldr	r3, [pc, #1772]	; 1289c <tcgetattr@plt+0xcb4>
   121ac:	ldr	r3, [r3, #4]
   121b0:	cmp	r3, #0
   121b4:	bne	127bc <tcgetattr@plt+0xbd4>
   121b8:	bl	132b4 <tcgetattr@plt+0x16cc>
   121bc:	bl	177e8 <tcgetattr@plt+0x5c00>
   121c0:	ldr	r3, [sp, #20]
   121c4:	ldr	r3, [r3, #4]
   121c8:	cmp	r3, #0
   121cc:	ble	121d8 <tcgetattr@plt+0x5f0>
   121d0:	ldr	r0, [pc, #1736]	; 128a0 <tcgetattr@plt+0xcb8>
   121d4:	bl	14244 <tcgetattr@plt+0x265c>
   121d8:	ldr	r7, [pc, #1732]	; 128a4 <tcgetattr@plt+0xcbc>
   121dc:	ldr	r5, [pc, #1732]	; 128a8 <tcgetattr@plt+0xcc0>
   121e0:	ldr	r9, [pc, #1732]	; 128ac <tcgetattr@plt+0xcc4>
   121e4:	ldr	r3, [r7]
   121e8:	ldr	r2, [r5]
   121ec:	ldr	fp, [pc, #1724]	; 128b0 <tcgetattr@plt+0xcc8>
   121f0:	cmp	r3, r2
   121f4:	movlt	r3, r2
   121f8:	add	r4, sp, #156	; 0x9c
   121fc:	add	r3, r3, #1
   12200:	str	r3, [sp, #16]
   12204:	bl	13c5c <tcgetattr@plt+0x2074>
   12208:	cmp	r0, #0
   1220c:	blt	12528 <tcgetattr@plt+0x940>
   12210:	add	r3, sp, #28
   12214:	mov	r2, #0
   12218:	str	r2, [r3, #4]!
   1221c:	cmp	r4, r3
   12220:	bne	12218 <tcgetattr@plt+0x630>
   12224:	mov	r2, r4
   12228:	add	r3, sp, #284	; 0x11c
   1222c:	mov	r1, #0
   12230:	str	r1, [r2, #4]!
   12234:	cmp	r3, r2
   12238:	bne	12230 <tcgetattr@plt+0x648>
   1223c:	add	r1, sp, #412	; 0x19c
   12240:	mov	r2, #0
   12244:	str	r2, [r3, #4]!
   12248:	cmp	r1, r3
   1224c:	bne	12244 <tcgetattr@plt+0x65c>
   12250:	bl	13c6c <tcgetattr@plt+0x2084>
   12254:	cmp	r0, #0
   12258:	beq	125a8 <tcgetattr@plt+0x9c0>
   1225c:	ldr	r3, [r5]
   12260:	add	ip, sp, #680	; 0x2a8
   12264:	cmp	r3, #0
   12268:	add	r2, r3, #31
   1226c:	movge	r2, r3
   12270:	asr	r0, r3, #31
   12274:	asr	r2, r2, #5
   12278:	lsr	r0, r0, #27
   1227c:	add	r2, ip, r2, lsl #2
   12280:	add	r3, r3, r0
   12284:	and	r3, r3, #31
   12288:	ldr	ip, [r2, #-520]	; 0xfffffdf8
   1228c:	mov	r1, #1
   12290:	sub	r3, r3, r0
   12294:	orr	r3, ip, r1, lsl r3
   12298:	str	r3, [r2, #-520]	; 0xfffffdf8
   1229c:	bl	13d58 <tcgetattr@plt+0x2170>
   122a0:	cmp	r0, #0
   122a4:	beq	12558 <tcgetattr@plt+0x970>
   122a8:	ldr	r3, [r7]
   122ac:	add	ip, sp, #680	; 0x2a8
   122b0:	cmp	r3, #0
   122b4:	add	r2, r3, #31
   122b8:	movge	r2, r3
   122bc:	asr	r0, r3, #31
   122c0:	asr	r2, r2, #5
   122c4:	lsr	r0, r0, #27
   122c8:	add	r2, ip, r2, lsl #2
   122cc:	add	r3, r3, r0
   122d0:	and	r3, r3, #31
   122d4:	ldr	ip, [r2, #-520]	; 0xfffffdf8
   122d8:	mov	r1, #1
   122dc:	sub	r3, r3, r0
   122e0:	orr	r3, ip, r1, lsl r3
   122e4:	str	r3, [r2, #-520]	; 0xfffffdf8
   122e8:	ldr	r3, [r9]
   122ec:	cmp	r3, #0
   122f0:	bne	12334 <tcgetattr@plt+0x74c>
   122f4:	ldr	r3, [r5]
   122f8:	add	ip, sp, #680	; 0x2a8
   122fc:	cmp	r3, #0
   12300:	add	r2, r3, #31
   12304:	movge	r2, r3
   12308:	asr	r0, r3, #31
   1230c:	asr	r2, r2, #5
   12310:	lsr	r0, r0, #27
   12314:	add	r2, ip, r2, lsl #2
   12318:	add	r3, r3, r0
   1231c:	and	r3, r3, #31
   12320:	ldr	ip, [r2, #-392]	; 0xfffffe78
   12324:	mov	r1, #1
   12328:	sub	r3, r3, r0
   1232c:	orr	r3, ip, r1, lsl r3
   12330:	str	r3, [r2, #-392]	; 0xfffffe78
   12334:	mov	r3, #0
   12338:	str	r3, [sp]
   1233c:	add	r2, sp, #160	; 0xa0
   12340:	add	r3, sp, #288	; 0x120
   12344:	add	r1, sp, #32
   12348:	ldr	r0, [sp, #16]
   1234c:	bl	1184c <select@plt>
   12350:	cmp	r0, #0
   12354:	ble	125f8 <tcgetattr@plt+0xa10>
   12358:	ldr	r3, [r5]
   1235c:	add	ip, sp, #680	; 0x2a8
   12360:	cmp	r3, #0
   12364:	add	r2, r3, #31
   12368:	asr	r0, r3, #31
   1236c:	movge	r2, r3
   12370:	lsr	r0, r0, #27
   12374:	asr	r2, r2, #5
   12378:	add	r3, r3, r0
   1237c:	lsl	r2, r2, #2
   12380:	and	r3, r3, #31
   12384:	mov	r1, #1
   12388:	add	ip, ip, r2
   1238c:	sub	r3, r3, r0
   12390:	ldr	r0, [ip, #-392]	; 0xfffffe78
   12394:	lsl	r3, r1, r3
   12398:	tst	r3, r0
   1239c:	strne	r1, [r9]
   123a0:	add	r1, sp, #680	; 0x2a8
   123a4:	add	r2, r1, r2
   123a8:	ldr	r2, [r2, #-648]	; 0xfffffd78
   123ac:	tst	r3, r2
   123b0:	bne	1261c <tcgetattr@plt+0xa34>
   123b4:	ldr	r3, [r7]
   123b8:	add	r0, sp, #680	; 0x2a8
   123bc:	cmp	r3, #0
   123c0:	add	r2, r3, #31
   123c4:	movge	r2, r3
   123c8:	asr	r1, r3, #31
   123cc:	asr	r2, r2, #5
   123d0:	lsr	r1, r1, #27
   123d4:	add	r2, r0, r2, lsl #2
   123d8:	add	r3, r3, r1
   123dc:	and	r3, r3, #31
   123e0:	mov	r8, #1
   123e4:	ldr	r2, [r2, #-648]	; 0xfffffd78
   123e8:	sub	r3, r3, r1
   123ec:	ands	r3, r2, r8, lsl r3
   123f0:	bne	12624 <tcgetattr@plt+0xa3c>
   123f4:	mov	r8, #255	; 0xff
   123f8:	bl	13d48 <tcgetattr@plt+0x2160>
   123fc:	cmp	r0, #0
   12400:	ble	12468 <tcgetattr@plt+0x880>
   12404:	bl	13c8c <tcgetattr@plt+0x20a4>
   12408:	cmp	r0, #0
   1240c:	bne	12468 <tcgetattr@plt+0x880>
   12410:	bl	13d78 <tcgetattr@plt+0x2190>
   12414:	cmp	r0, #255	; 0xff
   12418:	mov	sl, r0
   1241c:	beq	12548 <tcgetattr@plt+0x960>
   12420:	bl	13c40 <tcgetattr@plt+0x2058>
   12424:	cmp	sl, #13
   12428:	bne	123f8 <tcgetattr@plt+0x810>
   1242c:	ldrb	r3, [r6]
   12430:	tst	r3, #1
   12434:	bne	123f8 <tcgetattr@plt+0x810>
   12438:	bl	13d48 <tcgetattr@plt+0x2160>
   1243c:	cmp	r0, #0
   12440:	mov	r0, #1
   12444:	ble	12454 <tcgetattr@plt+0x86c>
   12448:	bl	13d78 <tcgetattr@plt+0x2190>
   1244c:	cmp	r0, #10
   12450:	beq	12748 <tcgetattr@plt+0xb60>
   12454:	mov	r0, #0
   12458:	bl	13c40 <tcgetattr@plt+0x2058>
   1245c:	bl	13d48 <tcgetattr@plt+0x2160>
   12460:	cmp	r0, #0
   12464:	bgt	12404 <tcgetattr@plt+0x81c>
   12468:	ldr	r3, [r5]
   1246c:	add	ip, sp, #680	; 0x2a8
   12470:	cmp	r3, #0
   12474:	add	r2, r3, #31
   12478:	movge	r2, r3
   1247c:	asr	r0, r3, #31
   12480:	asr	r2, r2, #5
   12484:	lsr	r0, r0, #27
   12488:	add	r2, ip, r2, lsl #2
   1248c:	add	r3, r3, r0
   12490:	and	r3, r3, #31
   12494:	mov	r1, #1
   12498:	ldr	r2, [r2, #-520]	; 0xfffffdf8
   1249c:	sub	r3, r3, r0
   124a0:	ands	r3, r2, r1, lsl r3
   124a4:	bne	126f8 <tcgetattr@plt+0xb10>
   124a8:	bl	13c5c <tcgetattr@plt+0x2074>
   124ac:	cmp	r0, #0
   124b0:	ble	124b8 <tcgetattr@plt+0x8d0>
   124b4:	bl	17100 <tcgetattr@plt+0x5518>
   124b8:	ldr	r3, [r7]
   124bc:	add	ip, sp, #680	; 0x2a8
   124c0:	cmp	r3, #0
   124c4:	add	r2, r3, #31
   124c8:	movge	r2, r3
   124cc:	asr	r0, r3, #31
   124d0:	asr	r2, r2, #5
   124d4:	lsr	r0, r0, #27
   124d8:	add	r2, ip, r2, lsl #2
   124dc:	add	r3, r3, r0
   124e0:	and	r3, r3, #31
   124e4:	mov	r1, #1
   124e8:	ldr	r2, [r2, #-520]	; 0xfffffdf8
   124ec:	sub	r3, r3, r0
   124f0:	ands	r3, r2, r1, lsl r3
   124f4:	bne	126e4 <tcgetattr@plt+0xafc>
   124f8:	ldr	r3, [fp]
   124fc:	cmp	r3, #0
   12500:	beq	12204 <tcgetattr@plt+0x61c>
   12504:	bl	13c6c <tcgetattr@plt+0x2084>
   12508:	cmp	r0, #0
   1250c:	ble	12514 <tcgetattr@plt+0x92c>
   12510:	bl	142b4 <tcgetattr@plt+0x26cc>
   12514:	mov	r0, #17
   12518:	bl	12fdc <tcgetattr@plt+0x13f4>
   1251c:	bl	13c5c <tcgetattr@plt+0x2074>
   12520:	cmp	r0, #0
   12524:	bge	12210 <tcgetattr@plt+0x628>
   12528:	bl	13d48 <tcgetattr@plt+0x2160>
   1252c:	cmp	r0, #0
   12530:	bge	12210 <tcgetattr@plt+0x628>
   12534:	mov	r0, #0
   12538:	bl	12fdc <tcgetattr@plt+0x13f4>
   1253c:	mov	r0, #0
   12540:	add	sp, sp, #684	; 0x2ac
   12544:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12548:	bl	13c40 <tcgetattr@plt+0x2058>
   1254c:	mov	r0, r8
   12550:	bl	13c40 <tcgetattr@plt+0x2058>
   12554:	b	123f8 <tcgetattr@plt+0x810>
   12558:	bl	13c5c <tcgetattr@plt+0x2074>
   1255c:	cmp	r0, #0
   12560:	bgt	122a8 <tcgetattr@plt+0x6c0>
   12564:	ldr	r3, [r5]
   12568:	add	ip, sp, #680	; 0x2a8
   1256c:	cmp	r3, #0
   12570:	add	r2, r3, #31
   12574:	movge	r2, r3
   12578:	asr	r0, r3, #31
   1257c:	asr	r2, r2, #5
   12580:	lsr	r0, r0, #27
   12584:	add	r2, ip, r2, lsl #2
   12588:	add	r3, r3, r0
   1258c:	and	r3, r3, #31
   12590:	ldr	ip, [r2, #-648]	; 0xfffffd78
   12594:	mov	r1, #1
   12598:	sub	r3, r3, r0
   1259c:	orr	r3, ip, r1, lsl r3
   125a0:	str	r3, [r2, #-648]	; 0xfffffd78
   125a4:	b	122e8 <tcgetattr@plt+0x700>
   125a8:	bl	13d48 <tcgetattr@plt+0x2160>
   125ac:	cmp	r0, #0
   125b0:	bgt	1225c <tcgetattr@plt+0x674>
   125b4:	ldr	r3, [r7]
   125b8:	add	ip, sp, #680	; 0x2a8
   125bc:	cmp	r3, #0
   125c0:	add	r2, r3, #31
   125c4:	movge	r2, r3
   125c8:	asr	r0, r3, #31
   125cc:	asr	r2, r2, #5
   125d0:	lsr	r0, r0, #27
   125d4:	add	r2, ip, r2, lsl #2
   125d8:	add	r3, r3, r0
   125dc:	and	r3, r3, #31
   125e0:	ldr	ip, [r2, #-648]	; 0xfffffd78
   125e4:	mov	r1, #1
   125e8:	sub	r3, r3, r0
   125ec:	orr	r3, ip, r1, lsl r3
   125f0:	str	r3, [r2, #-648]	; 0xfffffd78
   125f4:	b	1229c <tcgetattr@plt+0x6b4>
   125f8:	cmn	r0, #1
   125fc:	bne	12610 <tcgetattr@plt+0xa28>
   12600:	bl	11a14 <__errno_location@plt>
   12604:	ldr	r3, [r0]
   12608:	cmp	r3, #4
   1260c:	beq	12204 <tcgetattr@plt+0x61c>
   12610:	mov	r0, #5
   12614:	bl	11858 <sleep@plt>
   12618:	b	12204 <tcgetattr@plt+0x61c>
   1261c:	bl	157e4 <tcgetattr@plt+0x3bfc>
   12620:	b	123b4 <tcgetattr@plt+0x7cc>
   12624:	bl	159ec <tcgetattr@plt+0x3e04>
   12628:	cmp	r0, #0
   1262c:	blt	12534 <tcgetattr@plt+0x94c>
   12630:	mov	r0, r8
   12634:	bl	13d78 <tcgetattr@plt+0x2190>
   12638:	tst	r0, #64	; 0x40
   1263c:	mov	r8, r0
   12640:	bne	12758 <tcgetattr@plt+0xb70>
   12644:	tst	r8, #2
   12648:	bne	1270c <tcgetattr@plt+0xb24>
   1264c:	ldrb	r3, [r6, #33]	; 0x21
   12650:	tst	r3, #4
   12654:	beq	126d8 <tcgetattr@plt+0xaf0>
   12658:	tst	r8, #48	; 0x30
   1265c:	beq	126d8 <tcgetattr@plt+0xaf0>
   12660:	ldr	r2, [pc, #548]	; 1288c <tcgetattr@plt+0xca4>
   12664:	lsr	r3, r8, #5
   12668:	and	r3, r3, #1
   1266c:	ldr	r2, [r2]
   12670:	cmp	r3, r2
   12674:	beq	126d8 <tcgetattr@plt+0xaf0>
   12678:	adds	r3, r2, #0
   1267c:	movne	r3, #1
   12680:	mov	ip, #240	; 0xf0
   12684:	mov	r2, #255	; 0xff
   12688:	mov	r1, #33	; 0x21
   1268c:	str	r3, [sp, #4]
   12690:	str	ip, [sp, #12]
   12694:	mov	r3, #250	; 0xfa
   12698:	str	r2, [sp, #8]
   1269c:	str	r1, [sp]
   126a0:	add	r0, sp, #24
   126a4:	ldr	r1, [pc, #520]	; 128b4 <tcgetattr@plt+0xccc>
   126a8:	bl	11b04 <sprintf@plt>
   126ac:	add	r0, sp, #24
   126b0:	mov	r1, #7
   126b4:	bl	14460 <tcgetattr@plt+0x2878>
   126b8:	ldr	r3, [sp, #20]
   126bc:	ldr	r3, [r3]
   126c0:	cmp	r3, #0
   126c4:	ble	126d8 <tcgetattr@plt+0xaf0>
   126c8:	add	r1, sp, #26
   126cc:	mov	r2, #5
   126d0:	mov	r0, #62	; 0x3e
   126d4:	bl	14a7c <tcgetattr@plt+0x2e94>
   126d8:	mov	r0, #0
   126dc:	bl	13d78 <tcgetattr@plt+0x2190>
   126e0:	b	123f4 <tcgetattr@plt+0x80c>
   126e4:	bl	13d58 <tcgetattr@plt+0x2170>
   126e8:	cmp	r0, #0
   126ec:	ble	124f8 <tcgetattr@plt+0x910>
   126f0:	bl	158c0 <tcgetattr@plt+0x3cd8>
   126f4:	b	124f8 <tcgetattr@plt+0x910>
   126f8:	bl	13c6c <tcgetattr@plt+0x2084>
   126fc:	cmp	r0, #0
   12700:	ble	124a8 <tcgetattr@plt+0x8c0>
   12704:	bl	142b4 <tcgetattr@plt+0x26cc>
   12708:	b	124a8 <tcgetattr@plt+0x8c0>
   1270c:	mov	r0, #0
   12710:	bl	13d78 <tcgetattr@plt+0x2190>
   12714:	bl	13f04 <tcgetattr@plt+0x231c>
   12718:	mov	r1, #2
   1271c:	ldr	r0, [pc, #404]	; 128b8 <tcgetattr@plt+0xcd0>
   12720:	bl	14460 <tcgetattr@plt+0x2878>
   12724:	bl	13c20 <tcgetattr@plt+0x2038>
   12728:	ldr	r3, [sp, #20]
   1272c:	ldr	r3, [r3]
   12730:	cmp	r3, #0
   12734:	ble	1264c <tcgetattr@plt+0xa64>
   12738:	mov	r1, #242	; 0xf2
   1273c:	ldr	r0, [pc, #376]	; 128bc <tcgetattr@plt+0xcd4>
   12740:	bl	14a1c <tcgetattr@plt+0x2e34>
   12744:	b	1264c <tcgetattr@plt+0xa64>
   12748:	mov	r0, #0
   1274c:	bl	13d78 <tcgetattr@plt+0x2190>
   12750:	bl	13c40 <tcgetattr@plt+0x2058>
   12754:	b	123f8 <tcgetattr@plt+0x810>
   12758:	mov	r0, #0
   1275c:	bl	13d78 <tcgetattr@plt+0x2190>
   12760:	bl	13304 <tcgetattr@plt+0x171c>
   12764:	bl	177e8 <tcgetattr@plt+0x5c00>
   12768:	b	12644 <tcgetattr@plt+0xa5c>
   1276c:	ldr	r3, [pc, #284]	; 12890 <tcgetattr@plt+0xca8>
   12770:	tst	r2, #1
   12774:	str	r3, [sp, #20]
   12778:	bne	12194 <tcgetattr@plt+0x5ac>
   1277c:	mov	r1, #1
   12780:	mov	r0, r1
   12784:	bl	15dac <tcgetattr@plt+0x41c4>
   12788:	b	12194 <tcgetattr@plt+0x5ac>
   1278c:	ldr	ip, [pc, #300]	; 128c0 <tcgetattr@plt+0xcd8>
   12790:	ldr	r2, [pc, #300]	; 128c4 <tcgetattr@plt+0xcdc>
   12794:	mov	r1, #1
   12798:	mov	r0, #34	; 0x22
   1279c:	str	r3, [ip]
   127a0:	str	r3, [r2]
   127a4:	bl	15d08 <tcgetattr@plt+0x4120>
   127a8:	b	120c8 <tcgetattr@plt+0x4e0>
   127ac:	mov	r1, #1
   127b0:	mov	r0, #3
   127b4:	bl	15dac <tcgetattr@plt+0x41c4>
   127b8:	b	120b0 <tcgetattr@plt+0x4c8>
   127bc:	add	r0, sp, #288	; 0x120
   127c0:	bl	11864 <uname@plt>
   127c4:	cmp	r0, #0
   127c8:	blt	12874 <tcgetattr@plt+0xc8c>
   127cc:	add	r0, sp, #288	; 0x120
   127d0:	add	r7, r0, #130	; 0x82
   127d4:	bl	119c0 <strlen@plt>
   127d8:	mov	r4, r0
   127dc:	mov	r0, r7
   127e0:	bl	119c0 <strlen@plt>
   127e4:	add	r0, r4, r0
   127e8:	add	r0, r0, #18
   127ec:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   127f0:	subs	r5, r0, #0
   127f4:	beq	12874 <tcgetattr@plt+0xc8c>
   127f8:	ldr	r2, [pc, #200]	; 128c8 <tcgetattr@plt+0xce0>
   127fc:	str	r7, [sp]
   12800:	str	r2, [sp, #4]
   12804:	add	r3, sp, #288	; 0x120
   12808:	ldr	r2, [pc, #188]	; 128cc <tcgetattr@plt+0xce4>
   1280c:	ldr	r1, [pc, #188]	; 128d0 <tcgetattr@plt+0xce8>
   12810:	bl	11b04 <sprintf@plt>
   12814:	mov	r0, r5
   12818:	bl	15aa4 <tcgetattr@plt+0x3ebc>
   1281c:	mov	r4, r0
   12820:	mov	r0, r5
   12824:	bl	1a1f4 <argp_parse@@Base+0xe98>
   12828:	ldr	r3, [sp, #20]
   1282c:	ldr	r3, [r3, #12]
   12830:	cmp	r3, #0
   12834:	ble	12844 <tcgetattr@plt+0xc5c>
   12838:	mov	r1, r4
   1283c:	ldr	r0, [pc, #144]	; 128d4 <tcgetattr@plt+0xcec>
   12840:	bl	14244 <tcgetattr@plt+0x265c>
   12844:	mov	r0, r4
   12848:	bl	119c0 <strlen@plt>
   1284c:	mov	r1, r0
   12850:	mov	r0, r4
   12854:	bl	13dc8 <tcgetattr@plt+0x21e0>
   12858:	mov	r0, r4
   1285c:	bl	1a1f4 <argp_parse@@Base+0xe98>
   12860:	b	121b8 <tcgetattr@plt+0x5d0>
   12864:	mov	r1, #1
   12868:	mov	r0, #6
   1286c:	bl	15d08 <tcgetattr@plt+0x4120>
   12870:	b	121a4 <tcgetattr@plt+0x5bc>
   12874:	ldr	r0, [pc, #92]	; 128d8 <tcgetattr@plt+0xcf0>
   12878:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   1287c:	mov	r5, r0
   12880:	b	12814 <tcgetattr@plt+0xc2c>
   12884:	andeq	sl, r3, r4, lsl #14
   12888:	andeq	sl, r3, r4, ror #23
   1288c:	ldrdeq	sl, [r3], -r4
   12890:	andeq	sl, r3, r0, ror #13
   12894:	andeq	pc, r1, r0, lsl #28
   12898:	strdeq	sl, [r3], -ip
   1289c:	muleq	r3, ip, r1
   128a0:	andeq	pc, r1, r0, lsr lr	; <UNPREDICTABLE>
   128a4:	ldrdeq	sl, [r3], -r0
   128a8:	andeq	sl, r3, ip, lsr #19
   128ac:	ldrdeq	sl, [r3], -ip
   128b0:	andeq	r2, r3, ip, lsl r5
   128b4:	andeq	pc, r1, r0, ror #28
   128b8:	andeq	r2, r3, r8, lsr #3
   128bc:	andeq	pc, r1, r0, asr lr	; <UNPREDICTABLE>
   128c0:			; <UNDEFINED> instruction: 0x0003a9b0
   128c4:	andeq	sl, r3, r8, lsl #18
   128c8:	andeq	pc, r1, r8, ror lr	; <UNPREDICTABLE>
   128cc:	andeq	pc, r1, r4, lsl #29
   128d0:	andeq	pc, r1, r8, lsl lr	; <UNPREDICTABLE>
   128d4:	andeq	pc, r1, r4, lsr #28
   128d8:	andeq	pc, r1, r0, ror lr	; <UNPREDICTABLE>
   128dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   128e0:	sub	sp, sp, #920	; 0x398
   128e4:	mov	r3, #128	; 0x80
   128e8:	add	r1, sp, #24
   128ec:	mov	r4, #1
   128f0:	add	r2, sp, #20
   128f4:	mov	r0, #0
   128f8:	str	r4, [sp, #16]
   128fc:	str	r3, [sp, #20]
   12900:	bl	11b4c <getpeername@plt>
   12904:	cmp	r0, #0
   12908:	blt	12cb8 <tcgetattr@plt+0x10d0>
   1290c:	mov	r3, #0
   12910:	str	r3, [sp, #4]
   12914:	str	r3, [sp]
   12918:	ldr	r1, [sp, #20]
   1291c:	mov	r3, #256	; 0x100
   12920:	str	r4, [sp, #8]
   12924:	add	r2, sp, #152	; 0x98
   12928:	add	r0, sp, #24
   1292c:	bl	11abc <getnameinfo@plt>
   12930:	subs	r3, r0, #0
   12934:	beq	12960 <tcgetattr@plt+0xd78>
   12938:	cmn	r3, #11
   1293c:	beq	12c7c <tcgetattr@plt+0x1094>
   12940:	bl	117ec <gai_strerror@plt>
   12944:	mov	r2, r0
   12948:	ldr	r1, [pc, #892]	; 12ccc <tcgetattr@plt+0x10e4>
   1294c:	mov	r0, #37	; 0x25
   12950:	bl	11aec <syslog@plt>
   12954:	ldr	r1, [pc, #884]	; 12cd0 <tcgetattr@plt+0x10e8>
   12958:	mov	r0, #0
   1295c:	bl	14068 <tcgetattr@plt+0x2480>
   12960:	ldr	r7, [pc, #876]	; 12cd4 <tcgetattr@plt+0x10ec>
   12964:	mov	r3, #0
   12968:	mov	r0, #8
   1296c:	add	r2, sp, #408	; 0x198
   12970:	str	r0, [sp, #8]
   12974:	str	r3, [sp, #4]
   12978:	str	r3, [sp]
   1297c:	ldr	r1, [sp, #20]
   12980:	mov	r3, #256	; 0x100
   12984:	add	r0, sp, #24
   12988:	bl	11abc <getnameinfo@plt>
   1298c:	ldr	r2, [r7, #8]
   12990:	cmp	r2, #0
   12994:	beq	12a90 <tcgetattr@plt+0xea8>
   12998:	cmp	r0, #0
   1299c:	beq	129cc <tcgetattr@plt+0xde4>
   129a0:	cmn	r0, #11
   129a4:	beq	12ca4 <tcgetattr@plt+0x10bc>
   129a8:	bl	117ec <gai_strerror@plt>
   129ac:	mov	r3, r0
   129b0:	ldr	r1, [pc, #800]	; 12cd8 <tcgetattr@plt+0x10f0>
   129b4:	mov	r0, #37	; 0x25
   129b8:	add	r2, sp, #152	; 0x98
   129bc:	bl	11aec <syslog@plt>
   129c0:	ldr	r1, [pc, #788]	; 12cdc <tcgetattr@plt+0x10f4>
   129c4:	mov	r0, #0
   129c8:	bl	14068 <tcgetattr@plt+0x2480>
   129cc:	add	r0, sp, #408	; 0x198
   129d0:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   129d4:	ldr	r6, [pc, #772]	; 12ce0 <tcgetattr@plt+0x10f8>
   129d8:	mov	r2, #0
   129dc:	add	r8, sp, #664	; 0x298
   129e0:	mov	r3, r8
   129e4:	mov	r1, r2
   129e8:	str	r0, [r6]
   129ec:	bl	11b64 <getaddrinfo@plt>
   129f0:	subs	r3, r0, #0
   129f4:	beq	12a24 <tcgetattr@plt+0xe3c>
   129f8:	cmn	r3, #11
   129fc:	beq	12c90 <tcgetattr@plt+0x10a8>
   12a00:	bl	117ec <gai_strerror@plt>
   12a04:	mov	r3, r0
   12a08:	ldr	r1, [pc, #724]	; 12ce4 <tcgetattr@plt+0x10fc>
   12a0c:	mov	r0, #37	; 0x25
   12a10:	ldr	r2, [r6]
   12a14:	bl	11aec <syslog@plt>
   12a18:	ldr	r1, [pc, #700]	; 12cdc <tcgetattr@plt+0x10f4>
   12a1c:	mov	r0, #0
   12a20:	bl	14068 <tcgetattr@plt+0x2480>
   12a24:	ldr	r4, [sp, #664]	; 0x298
   12a28:	cmp	r4, #0
   12a2c:	beq	12bd0 <tcgetattr@plt+0xfe8>
   12a30:	ldrh	r5, [sp, #24]
   12a34:	mov	sl, #16
   12a38:	mov	r9, #4
   12a3c:	b	12a4c <tcgetattr@plt+0xe64>
   12a40:	ldr	r4, [r4, #28]
   12a44:	cmp	r4, #0
   12a48:	beq	12bd0 <tcgetattr@plt+0xfe8>
   12a4c:	ldr	r3, [r4, #4]
   12a50:	cmp	r3, r5
   12a54:	bne	12a40 <tcgetattr@plt+0xe58>
   12a58:	cmp	r5, #2
   12a5c:	beq	12bf4 <tcgetattr@plt+0x100c>
   12a60:	cmp	r5, #10
   12a64:	bne	12a40 <tcgetattr@plt+0xe58>
   12a68:	ldr	r0, [r4, #20]
   12a6c:	mov	r2, sl
   12a70:	add	r0, r0, #8
   12a74:	add	r1, sp, #32
   12a78:	bl	11840 <memcmp@plt>
   12a7c:	cmp	r0, #0
   12a80:	bne	12a40 <tcgetattr@plt+0xe58>
   12a84:	ldr	r0, [sp, #664]	; 0x298
   12a88:	bl	11b58 <freeaddrinfo@plt>
   12a8c:	b	12aac <tcgetattr@plt+0xec4>
   12a90:	cmp	r0, #0
   12a94:	addeq	r0, sp, #408	; 0x198
   12a98:	addne	r0, sp, #152	; 0x98
   12a9c:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   12aa0:	ldr	r6, [pc, #568]	; 12ce0 <tcgetattr@plt+0x10f8>
   12aa4:	add	r8, sp, #664	; 0x298
   12aa8:	str	r0, [r6]
   12aac:	ldr	r3, [pc, #564]	; 12ce8 <tcgetattr@plt+0x1100>
   12ab0:	add	r4, sp, #16
   12ab4:	ldr	r3, [r3, #8]
   12ab8:	cmp	r3, #0
   12abc:	bne	12c14 <tcgetattr@plt+0x102c>
   12ac0:	ldr	r3, [r7, #4]
   12ac4:	cmp	r3, #0
   12ac8:	bne	12c48 <tcgetattr@plt+0x1060>
   12acc:	ldr	r5, [pc, #536]	; 12cec <tcgetattr@plt+0x1104>
   12ad0:	mov	r7, #0
   12ad4:	str	r7, [r5]
   12ad8:	bl	18abc <tcgetattr@plt+0x6ed4>
   12adc:	ldr	r3, [pc, #524]	; 12cf0 <tcgetattr@plt+0x1108>
   12ae0:	str	r0, [r3]
   12ae4:	bl	13bd0 <tcgetattr@plt+0x1fe8>
   12ae8:	ldr	r0, [pc, #516]	; 12cf4 <tcgetattr@plt+0x110c>
   12aec:	bl	11b94 <unsetenv@plt>
   12af0:	mov	r1, #256	; 0x100
   12af4:	mov	r0, r8
   12af8:	strb	r7, [sp, #664]	; 0x298
   12afc:	bl	146b8 <tcgetattr@plt+0x2ad0>
   12b00:	ldr	r1, [pc, #496]	; 12cf8 <tcgetattr@plt+0x1110>
   12b04:	ldr	r3, [pc, #496]	; 12cfc <tcgetattr@plt+0x1114>
   12b08:	mov	r2, #1
   12b0c:	ldr	r1, [r1]
   12b10:	cmp	r1, #0
   12b14:	moveq	r1, r3
   12b18:	mov	r7, r0
   12b1c:	ldr	r0, [pc, #476]	; 12d00 <tcgetattr@plt+0x1118>
   12b20:	bl	119d8 <setenv@plt>
   12b24:	ldrb	r3, [sp, #664]	; 0x298
   12b28:	cmp	r3, #0
   12b2c:	ldreq	r3, [pc, #464]	; 12d04 <tcgetattr@plt+0x111c>
   12b30:	beq	12b44 <tcgetattr@plt+0xf5c>
   12b34:	mov	r0, r8
   12b38:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   12b3c:	ldr	r3, [pc, #448]	; 12d04 <tcgetattr@plt+0x111c>
   12b40:	str	r0, [r3]
   12b44:	ldr	r2, [r3]
   12b48:	mov	r1, r7
   12b4c:	ldr	r0, [r6]
   12b50:	bl	12f00 <tcgetattr@plt+0x1318>
   12b54:	ldr	r6, [pc, #428]	; 12d08 <tcgetattr@plt+0x1120>
   12b58:	mov	r2, r4
   12b5c:	ldr	r1, [pc, #424]	; 12d0c <tcgetattr@plt+0x1124>
   12b60:	str	r0, [r6]
   12b64:	bl	1a2fc <argp_parse@@Base+0xfa0>
   12b68:	mov	r2, r4
   12b6c:	ldr	r0, [r6]
   12b70:	ldr	r1, [pc, #408]	; 12d10 <tcgetattr@plt+0x1128>
   12b74:	bl	1a2fc <argp_parse@@Base+0xfa0>
   12b78:	mov	r2, r4
   12b7c:	ldr	r1, [pc, #396]	; 12d10 <tcgetattr@plt+0x1128>
   12b80:	ldr	r0, [r5]
   12b84:	bl	1a2fc <argp_parse@@Base+0xfa0>
   12b88:	mov	r2, #4
   12b8c:	mov	r3, r4
   12b90:	ldr	r0, [r5]
   12b94:	mov	r1, #1
   12b98:	str	r2, [sp]
   12b9c:	mov	r2, #10
   12ba0:	bl	117a4 <setsockopt@plt>
   12ba4:	mov	r1, #1
   12ba8:	mov	r0, #20
   12bac:	bl	1181c <signal@plt>
   12bb0:	mov	r1, #1
   12bb4:	mov	r0, #22
   12bb8:	bl	1181c <signal@plt>
   12bbc:	ldr	r1, [pc, #336]	; 12d14 <tcgetattr@plt+0x112c>
   12bc0:	mov	r0, #17
   12bc4:	bl	18c18 <tcgetattr@plt+0x7030>
   12bc8:	add	sp, sp, #920	; 0x398
   12bcc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bd0:	add	r3, sp, #152	; 0x98
   12bd4:	ldr	r2, [r6]
   12bd8:	ldr	r1, [pc, #312]	; 12d18 <tcgetattr@plt+0x1130>
   12bdc:	mov	r0, #37	; 0x25
   12be0:	bl	11aec <syslog@plt>
   12be4:	ldr	r1, [pc, #240]	; 12cdc <tcgetattr@plt+0x10f4>
   12be8:	mov	r0, #0
   12bec:	bl	14068 <tcgetattr@plt+0x2480>
   12bf0:	b	12a84 <tcgetattr@plt+0xe9c>
   12bf4:	ldr	r0, [r4, #20]
   12bf8:	mov	r2, r9
   12bfc:	add	r0, r0, #4
   12c00:	add	r1, sp, #28
   12c04:	bl	11840 <memcmp@plt>
   12c08:	cmp	r0, #0
   12c0c:	bne	12a40 <tcgetattr@plt+0xe58>
   12c10:	b	12a84 <tcgetattr@plt+0xe9c>
   12c14:	mov	r5, #4
   12c18:	mov	r3, r4
   12c1c:	str	r5, [sp]
   12c20:	mov	r2, #9
   12c24:	mov	r1, #1
   12c28:	mov	r0, #0
   12c2c:	bl	117a4 <setsockopt@plt>
   12c30:	cmp	r0, #0
   12c34:	bge	12ac0 <tcgetattr@plt+0xed8>
   12c38:	mov	r0, r5
   12c3c:	ldr	r1, [pc, #216]	; 12d1c <tcgetattr@plt+0x1134>
   12c40:	bl	11aec <syslog@plt>
   12c44:	b	12ac0 <tcgetattr@plt+0xed8>
   12c48:	mov	r2, #1
   12c4c:	mov	r5, #4
   12c50:	str	r5, [sp]
   12c54:	mov	r1, r2
   12c58:	mov	r3, r4
   12c5c:	mov	r0, #0
   12c60:	bl	117a4 <setsockopt@plt>
   12c64:	cmp	r0, #0
   12c68:	bge	12acc <tcgetattr@plt+0xee4>
   12c6c:	mov	r0, r5
   12c70:	ldr	r1, [pc, #168]	; 12d20 <tcgetattr@plt+0x1138>
   12c74:	bl	11aec <syslog@plt>
   12c78:	b	12acc <tcgetattr@plt+0xee4>
   12c7c:	bl	11a14 <__errno_location@plt>
   12c80:	ldr	r0, [r0]
   12c84:	bl	11948 <strerror@plt>
   12c88:	mov	r2, r0
   12c8c:	b	12948 <tcgetattr@plt+0xd60>
   12c90:	bl	11a14 <__errno_location@plt>
   12c94:	ldr	r0, [r0]
   12c98:	bl	11948 <strerror@plt>
   12c9c:	mov	r3, r0
   12ca0:	b	12a08 <tcgetattr@plt+0xe20>
   12ca4:	bl	11a14 <__errno_location@plt>
   12ca8:	ldr	r0, [r0]
   12cac:	bl	11948 <strerror@plt>
   12cb0:	mov	r3, r0
   12cb4:	b	129b0 <tcgetattr@plt+0xdc8>
   12cb8:	mov	r0, #3
   12cbc:	ldr	r1, [pc, #96]	; 12d24 <tcgetattr@plt+0x113c>
   12cc0:	bl	11aec <syslog@plt>
   12cc4:	mov	r0, r4
   12cc8:	bl	119a8 <exit@plt>
   12ccc:	andeq	pc, r1, r0, lsr #29
   12cd0:			; <UNDEFINED> instruction: 0x0001feb8
   12cd4:	andeq	r2, r3, ip, lsl r5
   12cd8:	andeq	pc, r1, ip, asr #29
   12cdc:	andeq	pc, r1, r4, ror #29
   12ce0:	andeq	sl, r3, r0, ror #23
   12ce4:	strdeq	pc, [r1], -ip
   12ce8:	muleq	r3, ip, r1
   12cec:	andeq	sl, r3, ip, lsr #19
   12cf0:	andeq	sl, r3, r4, lsr #19
   12cf4:	andeq	pc, r1, ip, asr pc	; <UNPREDICTABLE>
   12cf8:	andeq	sl, r3, r0, lsl #14
   12cfc:	andeq	pc, r1, r8, lsl #29
   12d00:	andeq	pc, r1, r4, ror #30
   12d04:	andeq	sl, r3, r8, ror #23
   12d08:	ldrdeq	sl, [r3], -r0
   12d0c:	andeq	r5, r0, r0, lsr #8
   12d10:	andeq	r5, r0, r1, lsr #8
   12d14:	andeq	r1, r1, r4, asr #27
   12d18:	andeq	pc, r1, ip, ror #30
   12d1c:	andeq	pc, r1, r0, lsr #30
   12d20:	andeq	pc, r1, r0, asr #30
   12d24:	muleq	r1, r0, lr
   12d28:	push	{r4, r5, r6, lr}
   12d2c:	mov	r5, r1
   12d30:	ldr	r1, [pc, #28]	; 12d54 <tcgetattr@plt+0x116c>
   12d34:	mov	r4, r0
   12d38:	bl	18d24 <tcgetattr@plt+0x713c>
   12d3c:	mov	r3, r5
   12d40:	ldr	r1, [pc, #16]	; 12d58 <tcgetattr@plt+0x1170>
   12d44:	mov	r2, r0
   12d48:	add	r0, r4, #5
   12d4c:	pop	{r4, r5, r6, lr}
   12d50:	b	18c6c <tcgetattr@plt+0x7084>
   12d54:	muleq	r2, r8, r1
   12d58:	muleq	r2, ip, r1
   12d5c:	ldr	r3, [pc, #356]	; 12ec8 <tcgetattr@plt+0x12e0>
   12d60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12d64:	sub	sp, sp, #20
   12d68:	ldr	r3, [r3]
   12d6c:	str	r3, [sp, #4]
   12d70:	ldr	fp, [r3]
   12d74:	cmp	fp, #0
   12d78:	beq	12e10 <tcgetattr@plt+0x1228>
   12d7c:	ldr	r8, [pc, #328]	; 12ecc <tcgetattr@plt+0x12e4>
   12d80:	ldr	r7, [pc, #328]	; 12ed0 <tcgetattr@plt+0x12e8>
   12d84:	ldr	sl, [pc, #328]	; 12ed4 <tcgetattr@plt+0x12ec>
   12d88:	mov	r4, r3
   12d8c:	mov	r6, #3
   12d90:	mov	r5, #5
   12d94:	mov	r9, #8
   12d98:	mov	r2, r6
   12d9c:	mov	r1, r8
   12da0:	mov	r0, fp
   12da4:	bl	11ba0 <strncmp@plt>
   12da8:	mov	r2, r5
   12dac:	mov	r1, r7
   12db0:	cmp	r0, #0
   12db4:	mov	r0, fp
   12db8:	beq	12e04 <tcgetattr@plt+0x121c>
   12dbc:	bl	11ba0 <strncmp@plt>
   12dc0:	mov	r2, r9
   12dc4:	mov	r1, sl
   12dc8:	cmp	r0, #0
   12dcc:	mov	r0, fp
   12dd0:	beq	12e04 <tcgetattr@plt+0x121c>
   12dd4:	bl	11ba0 <strncmp@plt>
   12dd8:	mov	r2, #4
   12ddc:	ldr	r1, [pc, #244]	; 12ed8 <tcgetattr@plt+0x12f0>
   12de0:	cmp	r0, #0
   12de4:	mov	r0, fp
   12de8:	beq	12e04 <tcgetattr@plt+0x121c>
   12dec:	bl	11ba0 <strncmp@plt>
   12df0:	cmp	r0, #0
   12df4:	ldrne	r3, [sp, #4]
   12df8:	strne	fp, [r3]
   12dfc:	addne	r3, r3, #4
   12e00:	strne	r3, [sp, #4]
   12e04:	ldr	fp, [r4, #4]!
   12e08:	cmp	fp, #0
   12e0c:	bne	12d98 <tcgetattr@plt+0x11b0>
   12e10:	ldr	r3, [pc, #196]	; 12edc <tcgetattr@plt+0x12f4>
   12e14:	ldr	r1, [sp, #4]
   12e18:	mov	r2, #0
   12e1c:	str	r2, [r1]
   12e20:	ldr	r2, [r3]
   12e24:	cmp	r2, #4
   12e28:	beq	12ea4 <tcgetattr@plt+0x12bc>
   12e2c:	bic	r2, r2, #2
   12e30:	cmp	r2, #1
   12e34:	beq	12e94 <tcgetattr@plt+0x12ac>
   12e38:	ldr	r3, [pc, #160]	; 12ee0 <tcgetattr@plt+0x12f8>
   12e3c:	ldr	r5, [pc, #160]	; 12ee4 <tcgetattr@plt+0x12fc>
   12e40:	ldr	r0, [r3]
   12e44:	bl	15aa4 <tcgetattr@plt+0x3ebc>
   12e48:	subs	r4, r0, #0
   12e4c:	beq	12eb8 <tcgetattr@plt+0x12d0>
   12e50:	add	r3, sp, #12
   12e54:	add	r2, sp, #8
   12e58:	ldr	r1, [pc, #136]	; 12ee8 <tcgetattr@plt+0x1300>
   12e5c:	mov	r0, r4
   12e60:	bl	187dc <tcgetattr@plt+0x6bf4>
   12e64:	ldr	r1, [sp, #12]
   12e68:	ldr	r0, [r1]
   12e6c:	bl	11a08 <execv@plt>
   12e70:	mov	r2, r4
   12e74:	ldr	r1, [pc, #112]	; 12eec <tcgetattr@plt+0x1304>
   12e78:	mov	r0, #3
   12e7c:	bl	11aec <syslog@plt>
   12e80:	mov	r1, r4
   12e84:	ldr	r0, [r5]
   12e88:	bl	140b8 <tcgetattr@plt+0x24d0>
   12e8c:	add	sp, sp, #20
   12e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e94:	ldr	r1, [pc, #84]	; 12ef0 <tcgetattr@plt+0x1308>
   12e98:	ldr	r0, [pc, #84]	; 12ef4 <tcgetattr@plt+0x130c>
   12e9c:	bl	119d8 <setenv@plt>
   12ea0:	b	12e38 <tcgetattr@plt+0x1250>
   12ea4:	mov	r2, #1
   12ea8:	ldr	r1, [pc, #72]	; 12ef8 <tcgetattr@plt+0x1310>
   12eac:	ldr	r0, [pc, #64]	; 12ef4 <tcgetattr@plt+0x130c>
   12eb0:	bl	119d8 <setenv@plt>
   12eb4:	b	12e38 <tcgetattr@plt+0x1250>
   12eb8:	ldr	r1, [pc, #60]	; 12efc <tcgetattr@plt+0x1314>
   12ebc:	ldr	r0, [r5]
   12ec0:	bl	14068 <tcgetattr@plt+0x2480>
   12ec4:	b	12e50 <tcgetattr@plt+0x1268>
   12ec8:	andeq	r2, r3, r4, lsl #10
   12ecc:	andeq	r0, r2, r4, lsr #3
   12ed0:	andeq	r0, r2, r8, lsr #3
   12ed4:			; <UNDEFINED> instruction: 0x000201b0
   12ed8:			; <UNDEFINED> instruction: 0x000201bc
   12edc:	strdeq	sl, [r3], -ip
   12ee0:	muleq	r3, ip, r1
   12ee4:	andeq	sl, r3, ip, lsr #19
   12ee8:	andeq	r0, r2, r8, ror #11
   12eec:	andeq	r0, r2, r0, lsl #4
   12ef0:	ldrdeq	r0, [r2], -r8
   12ef4:	andeq	r0, r2, ip, asr #3
   12ef8:	andeq	r0, r2, r4, asr #3
   12efc:	andeq	r0, r2, r0, ror #3
   12f00:	push	{r4, r5, lr}
   12f04:	mov	r3, #0
   12f08:	sub	sp, sp, #12
   12f0c:	mov	r4, r0
   12f10:	mov	r5, r1
   12f14:	mov	r2, r3
   12f18:	ldr	r1, [pc, #168]	; 12fc8 <tcgetattr@plt+0x13e0>
   12f1c:	add	r0, sp, #4
   12f20:	bl	11bd0 <forkpty@plt>
   12f24:	cmp	r0, #0
   12f28:	blt	12f68 <tcgetattr@plt+0x1380>
   12f2c:	bne	12f5c <tcgetattr@plt+0x1374>
   12f30:	ldr	r3, [pc, #148]	; 12fcc <tcgetattr@plt+0x13e4>
   12f34:	ldr	r0, [r3]
   12f38:	cmp	r0, #2
   12f3c:	bgt	12fa0 <tcgetattr@plt+0x13b8>
   12f40:	mov	r1, r4
   12f44:	ldr	r0, [pc, #124]	; 12fc8 <tcgetattr@plt+0x13e0>
   12f48:	bl	12d28 <tcgetattr@plt+0x1140>
   12f4c:	mov	r1, r5
   12f50:	mov	r0, r4
   12f54:	ldr	r2, [pc, #108]	; 12fc8 <tcgetattr@plt+0x13e0>
   12f58:	bl	12d5c <tcgetattr@plt+0x1174>
   12f5c:	ldr	r0, [sp, #4]
   12f60:	add	sp, sp, #12
   12f64:	pop	{r4, r5, pc}
   12f68:	bl	11a14 <__errno_location@plt>
   12f6c:	ldr	r3, [r0]
   12f70:	cmp	r3, #2
   12f74:	beq	12fa8 <tcgetattr@plt+0x13c0>
   12f78:	ldr	r1, [pc, #80]	; 12fd0 <tcgetattr@plt+0x13e8>
   12f7c:	mov	r0, #3
   12f80:	bl	11aec <syslog@plt>
   12f84:	ldr	r3, [pc, #64]	; 12fcc <tcgetattr@plt+0x13e4>
   12f88:	ldr	r1, [pc, #68]	; 12fd4 <tcgetattr@plt+0x13ec>
   12f8c:	ldr	r0, [r3]
   12f90:	bl	14068 <tcgetattr@plt+0x2480>
   12f94:	ldr	r0, [sp, #4]
   12f98:	add	sp, sp, #12
   12f9c:	pop	{r4, r5, pc}
   12fa0:	bl	11bb8 <close@plt>
   12fa4:	b	12f40 <tcgetattr@plt+0x1358>
   12fa8:	ldr	r1, [pc, #40]	; 12fd8 <tcgetattr@plt+0x13f0>
   12fac:	mov	r0, #3
   12fb0:	bl	11aec <syslog@plt>
   12fb4:	ldr	r3, [pc, #16]	; 12fcc <tcgetattr@plt+0x13e4>
   12fb8:	ldr	r1, [pc, #24]	; 12fd8 <tcgetattr@plt+0x13f0>
   12fbc:	ldr	r0, [r3]
   12fc0:	bl	14068 <tcgetattr@plt+0x2480>
   12fc4:	b	12f5c <tcgetattr@plt+0x1374>
   12fc8:	andeq	sl, r3, r0, ror #19
   12fcc:	andeq	sl, r3, ip, lsr #19
   12fd0:	andeq	r0, r2, r4, lsl r2
   12fd4:	andeq	r0, r2, r0, lsr #4
   12fd8:	andeq	r0, r2, r8, lsl #4
   12fdc:	push	{lr}		; (str lr, [sp, #-4]!)
   12fe0:	sub	sp, sp, #12
   12fe4:	mov	r2, #1
   12fe8:	cmp	r0, #17
   12fec:	str	r2, [sp, #4]
   12ff0:	beq	1303c <tcgetattr@plt+0x1454>
   12ff4:	cmp	r0, #1
   12ff8:	moveq	r3, #0
   12ffc:	streq	r3, [sp, #4]
   13000:	ldr	r0, [pc, #96]	; 13068 <tcgetattr@plt+0x1480>
   13004:	bl	18d64 <tcgetattr@plt+0x717c>
   13008:	mov	r1, #420	; 0x1a4
   1300c:	ldr	r0, [pc, #88]	; 1306c <tcgetattr@plt+0x1484>
   13010:	bl	11b7c <chmod@plt>
   13014:	mov	r2, #0
   13018:	mov	r1, r2
   1301c:	ldr	r0, [pc, #72]	; 1306c <tcgetattr@plt+0x1484>
   13020:	bl	119fc <chown@plt>
   13024:	ldr	r3, [pc, #68]	; 13070 <tcgetattr@plt+0x1488>
   13028:	mov	r1, #2
   1302c:	ldr	r0, [r3]
   13030:	bl	11a8c <shutdown@plt>
   13034:	ldr	r0, [sp, #4]
   13038:	bl	119a8 <exit@plt>
   1303c:	add	r1, sp, #4
   13040:	mvn	r0, #0
   13044:	bl	118e8 <waitpid@plt>
   13048:	ldrb	r3, [sp, #5]
   1304c:	ldr	r1, [pc, #32]	; 13074 <tcgetattr@plt+0x148c>
   13050:	mov	r2, r0
   13054:	mov	r0, #6
   13058:	bl	11aec <syslog@plt>
   1305c:	ldrb	r3, [sp, #5]
   13060:	str	r3, [sp, #4]
   13064:	b	13000 <tcgetattr@plt+0x1418>
   13068:	andeq	sl, r3, r5, ror #19
   1306c:	andeq	sl, r3, r0, ror #19
   13070:	andeq	sl, r3, ip, lsr #19
   13074:	andeq	r0, r2, r8, lsr #4
   13078:	bx	lr
   1307c:	mov	r0, #0
   13080:	bx	lr
   13084:	ldr	r3, [pc, #8]	; 13094 <tcgetattr@plt+0x14ac>
   13088:	ldr	r0, [r3, #12]
   1308c:	and	r0, r0, #65536	; 0x10000
   13090:	bx	lr
   13094:	andeq	sl, r3, r8, lsr #24
   13098:	ldr	r2, [pc, #20]	; 130b4 <tcgetattr@plt+0x14cc>
   1309c:	cmp	r0, #0
   130a0:	ldr	r3, [r2, #12]
   130a4:	orrne	r3, r3, #65536	; 0x10000
   130a8:	biceq	r3, r3, #65536	; 0x10000
   130ac:	str	r3, [r2, #12]
   130b0:	bx	lr
   130b4:	andeq	sl, r3, r8, lsr #24
   130b8:	ldr	r3, [pc, #8]	; 130c8 <tcgetattr@plt+0x14e0>
   130bc:	ldr	r0, [r3, #12]
   130c0:	and	r0, r0, #8
   130c4:	bx	lr
   130c8:	andeq	sl, r3, r8, lsr #24
   130cc:	ldr	r3, [pc, #12]	; 130e0 <tcgetattr@plt+0x14f8>
   130d0:	ldr	r0, [r3]
   130d4:	lsr	r0, r0, #10
   130d8:	and	r0, r0, #1
   130dc:	bx	lr
   130e0:	andeq	sl, r3, r8, lsr #24
   130e4:	ldr	r3, [pc, #12]	; 130f8 <tcgetattr@plt+0x1510>
   130e8:	ldr	r0, [r3]
   130ec:	lsr	r0, r0, #11
   130f0:	and	r0, r0, #1
   130f4:	bx	lr
   130f8:	andeq	sl, r3, r8, lsr #24
   130fc:	ldr	r2, [pc, #20]	; 13118 <tcgetattr@plt+0x1530>
   13100:	cmp	r0, #0
   13104:	ldr	r3, [r2, #12]
   13108:	orrne	r3, r3, #8
   1310c:	biceq	r3, r3, #8
   13110:	str	r3, [r2, #12]
   13114:	bx	lr
   13118:	andeq	sl, r3, r8, lsr #24
   1311c:	ldr	r3, [pc, #16]	; 13134 <tcgetattr@plt+0x154c>
   13120:	ldr	r0, [r3, #12]
   13124:	lsr	r0, r0, #1
   13128:	eor	r0, r0, #1
   1312c:	and	r0, r0, #1
   13130:	bx	lr
   13134:	andeq	sl, r3, r8, lsr #24
   13138:	ldr	r2, [pc, #20]	; 13154 <tcgetattr@plt+0x156c>
   1313c:	cmp	r0, #0
   13140:	ldr	r3, [r2]
   13144:	bicne	r3, r3, #32
   13148:	orreq	r3, r3, #32
   1314c:	str	r3, [r2]
   13150:	bx	lr
   13154:	andeq	sl, r3, r8, lsr #24
   13158:	ldr	r2, [pc, #36]	; 13184 <tcgetattr@plt+0x159c>
   1315c:	cmp	r0, #0
   13160:	ldmib	r2, {r1, r3}
   13164:	bicne	r3, r3, #304	; 0x130
   13168:	biceq	r3, r3, #48	; 0x30
   1316c:	orrne	r3, r3, #48	; 0x30
   13170:	bicne	r1, r1, #1
   13174:	orreq	r3, r3, #288	; 0x120
   13178:	orreq	r1, r1, #1
   1317c:	stmib	r2, {r1, r3}
   13180:	bx	lr
   13184:	andeq	sl, r3, r8, lsr #24
   13188:	ldr	r3, [pc, #16]	; 131a0 <tcgetattr@plt+0x15b8>
   1318c:	ldr	r0, [r3]
   13190:	lsr	r0, r0, #5
   13194:	eor	r0, r0, #1
   13198:	and	r0, r0, #1
   1319c:	bx	lr
   131a0:	andeq	sl, r3, r8, lsr #24
   131a4:	ldr	r3, [pc, #12]	; 131b8 <tcgetattr@plt+0x15d0>
   131a8:	ldr	r0, [r3, #4]
   131ac:	mvn	r0, r0
   131b0:	and	r0, r0, #1
   131b4:	bx	lr
   131b8:	andeq	sl, r3, r8, lsr #24
   131bc:	ldr	r3, [pc, #8]	; 131cc <tcgetattr@plt+0x15e4>
   131c0:	ldr	r0, [r3, #12]
   131c4:	and	r0, r0, #2
   131c8:	bx	lr
   131cc:	andeq	sl, r3, r8, lsr #24
   131d0:	ldr	r3, [pc, #8]	; 131e0 <tcgetattr@plt+0x15f8>
   131d4:	ldr	r0, [r3, #12]
   131d8:	and	r0, r0, #1
   131dc:	bx	lr
   131e0:	andeq	sl, r3, r8, lsr #24
   131e4:	ldr	r2, [pc, #20]	; 13200 <tcgetattr@plt+0x1618>
   131e8:	cmp	r0, #0
   131ec:	ldr	r3, [r2, #12]
   131f0:	orrne	r3, r3, #2
   131f4:	biceq	r3, r3, #2
   131f8:	str	r3, [r2, #12]
   131fc:	bx	lr
   13200:	andeq	sl, r3, r8, lsr #24
   13204:	ldr	r2, [pc, #20]	; 13220 <tcgetattr@plt+0x1638>
   13208:	cmp	r0, #0
   1320c:	ldr	r3, [r2, #12]
   13210:	orrne	r3, r3, #1
   13214:	biceq	r3, r3, #1
   13218:	str	r3, [r2, #12]
   1321c:	bx	lr
   13220:	andeq	sl, r3, r8, lsr #24
   13224:	ldr	r3, [pc, #20]	; 13240 <tcgetattr@plt+0x1658>
   13228:	ldr	r0, [r3, #4]
   1322c:	and	r0, r0, #6144	; 0x1800
   13230:	sub	r0, r0, #6144	; 0x1800
   13234:	clz	r0, r0
   13238:	lsr	r0, r0, #5
   1323c:	bx	lr
   13240:	andeq	sl, r3, r8, lsr #24
   13244:	ldr	r2, [pc, #20]	; 13260 <tcgetattr@plt+0x1678>
   13248:	cmp	r0, #0
   1324c:	ldr	r3, [r2, #4]
   13250:	orrne	r3, r3, #6144	; 0x1800
   13254:	biceq	r3, r3, #6144	; 0x1800
   13258:	str	r3, [r2, #4]
   1325c:	bx	lr
   13260:	andeq	sl, r3, r8, lsr #24
   13264:	ldr	r3, [pc, #16]	; 1327c <tcgetattr@plt+0x1694>
   13268:	ldr	r0, [r3, #12]
   1326c:	lsr	r0, r0, #9
   13270:	eor	r0, r0, #1
   13274:	and	r0, r0, #1
   13278:	bx	lr
   1327c:	andeq	sl, r3, r8, lsr #24
   13280:	ldr	r2, [pc, #20]	; 1329c <tcgetattr@plt+0x16b4>
   13284:	cmp	r0, #0
   13288:	ldr	r3, [r2, #12]
   1328c:	bicne	r3, r3, #512	; 0x200
   13290:	orreq	r3, r3, #512	; 0x200
   13294:	str	r3, [r2, #12]
   13298:	bx	lr
   1329c:	andeq	sl, r3, r8, lsr #24
   132a0:	ldr	r3, [pc, #8]	; 132b0 <tcgetattr@plt+0x16c8>
   132a4:	ldr	r0, [r3]
   132a8:	and	r0, r0, #256	; 0x100
   132ac:	bx	lr
   132b0:	andeq	sl, r3, r8, lsr #24
   132b4:	ldr	r3, [pc, #60]	; 132f8 <tcgetattr@plt+0x1710>
   132b8:	push	{r4, lr}
   132bc:	ldr	r4, [pc, #56]	; 132fc <tcgetattr@plt+0x1714>
   132c0:	ldr	r0, [r3]
   132c4:	mov	r1, r4
   132c8:	bl	11be8 <tcgetattr@plt>
   132cc:	mov	ip, r4
   132d0:	ldr	lr, [pc, #40]	; 13300 <tcgetattr@plt+0x1718>
   132d4:	ldm	ip!, {r0, r1, r2, r3}
   132d8:	stmia	lr!, {r0, r1, r2, r3}
   132dc:	ldm	ip!, {r0, r1, r2, r3}
   132e0:	stmia	lr!, {r0, r1, r2, r3}
   132e4:	ldm	ip!, {r0, r1, r2, r3}
   132e8:	stmia	lr!, {r0, r1, r2, r3}
   132ec:	ldm	ip, {r0, r1, r2}
   132f0:	stm	lr, {r0, r1, r2}
   132f4:	pop	{r4, pc}
   132f8:	ldrdeq	sl, [r3], -r0
   132fc:	andeq	sl, r3, r8, lsr #24
   13300:	andeq	sl, r3, ip, ror #23
   13304:	push	{r4, r5, r6, lr}
   13308:	mov	r4, #0
   1330c:	mov	r6, r4
   13310:	ldr	r5, [pc, #76]	; 13364 <tcgetattr@plt+0x177c>
   13314:	b	13320 <tcgetattr@plt+0x1738>
   13318:	bl	13d78 <tcgetattr@plt+0x2190>
   1331c:	strb	r0, [r5], #1
   13320:	bl	13d48 <tcgetattr@plt+0x2160>
   13324:	cmp	r4, #60	; 0x3c
   13328:	cmpne	r0, #0
   1332c:	mov	r0, r6
   13330:	add	r4, r4, #1
   13334:	bgt	13318 <tcgetattr@plt+0x1730>
   13338:	ldr	lr, [pc, #36]	; 13364 <tcgetattr@plt+0x177c>
   1333c:	ldr	ip, [pc, #36]	; 13368 <tcgetattr@plt+0x1780>
   13340:	ldm	lr!, {r0, r1, r2, r3}
   13344:	stmia	ip!, {r0, r1, r2, r3}
   13348:	ldm	lr!, {r0, r1, r2, r3}
   1334c:	stmia	ip!, {r0, r1, r2, r3}
   13350:	ldm	lr!, {r0, r1, r2, r3}
   13354:	stmia	ip!, {r0, r1, r2, r3}
   13358:	ldm	lr, {r0, r1, r2}
   1335c:	stm	ip, {r0, r1, r2}
   13360:	pop	{r4, r5, r6, pc}
   13364:	andeq	sl, r3, r8, lsr #24
   13368:	andeq	sl, r3, ip, ror #23
   1336c:	push	{r4, lr}
   13370:	mov	r2, #60	; 0x3c
   13374:	ldr	r1, [pc, #36]	; 133a0 <tcgetattr@plt+0x17b8>
   13378:	ldr	r0, [pc, #36]	; 133a4 <tcgetattr@plt+0x17bc>
   1337c:	bl	11840 <memcmp@plt>
   13380:	cmp	r0, #0
   13384:	popeq	{r4, pc}
   13388:	ldr	r3, [pc, #24]	; 133a8 <tcgetattr@plt+0x17c0>
   1338c:	ldr	r2, [pc, #16]	; 133a4 <tcgetattr@plt+0x17bc>
   13390:	mov	r1, #0
   13394:	ldr	r0, [r3]
   13398:	pop	{r4, lr}
   1339c:	b	118f4 <tcsetattr@plt>
   133a0:	andeq	sl, r3, ip, ror #23
   133a4:	andeq	sl, r3, r8, lsr #24
   133a8:	ldrdeq	sl, [r3], -r0
   133ac:	sub	r0, r0, #1
   133b0:	cmp	r0, #17
   133b4:	ldrls	pc, [pc, r0, lsl #2]
   133b8:	b	13568 <tcgetattr@plt+0x1980>
   133bc:	andeq	r3, r1, r4, lsl #8
   133c0:	andeq	r3, r1, r4, lsl #8
   133c4:	andeq	r3, r1, r8, lsl r4
   133c8:	andeq	r3, r1, r0, lsr r4
   133cc:	andeq	r3, r1, r4, lsl #8
   133d0:	andeq	r3, r1, r4, lsl #8
   133d4:	andeq	r3, r1, r0, ror #8
   133d8:	andeq	r3, r1, r8, ror r4
   133dc:	muleq	r1, r0, r4
   133e0:	andeq	r3, r1, r8, lsr #9
   133e4:	andeq	r3, r1, r0, asr #9
   133e8:	ldrdeq	r3, [r1], -r8
   133ec:	strdeq	r3, [r1], -r0
   133f0:	andeq	r3, r1, r8, lsl #10
   133f4:	andeq	r3, r1, r0, lsr #10
   133f8:	andeq	r3, r1, r8, lsr r5
   133fc:	andeq	r3, r1, r0, asr r5
   13400:	andeq	r3, r1, r8, asr #8
   13404:	mov	r3, #0
   13408:	strb	r3, [r1]
   1340c:	mov	r0, #3
   13410:	str	r3, [r2]
   13414:	bx	lr
   13418:	ldr	r3, [pc, #348]	; 1357c <tcgetattr@plt+0x1994>
   1341c:	mov	r0, #98	; 0x62
   13420:	ldrb	ip, [r3, #17]!
   13424:	strb	ip, [r1]
   13428:	str	r3, [r2]
   1342c:	bx	lr
   13430:	ldr	r3, [pc, #324]	; 1357c <tcgetattr@plt+0x1994>
   13434:	mov	r0, #34	; 0x22
   13438:	ldrb	ip, [r3, #30]!
   1343c:	strb	ip, [r1]
   13440:	str	r3, [r2]
   13444:	bx	lr
   13448:	ldr	r3, [pc, #300]	; 1357c <tcgetattr@plt+0x1994>
   1344c:	mov	r0, #2
   13450:	ldrb	ip, [r3, #33]!	; 0x21
   13454:	strb	ip, [r1]
   13458:	str	r3, [r2]
   1345c:	bx	lr
   13460:	ldr	r3, [pc, #276]	; 1357c <tcgetattr@plt+0x1994>
   13464:	mov	r0, #98	; 0x62
   13468:	ldrb	ip, [r3, #18]!
   1346c:	strb	ip, [r1]
   13470:	str	r3, [r2]
   13474:	bx	lr
   13478:	ldr	r3, [pc, #252]	; 1357c <tcgetattr@plt+0x1994>
   1347c:	mov	r0, #2
   13480:	ldrb	ip, [r3, #21]!
   13484:	strb	ip, [r1]
   13488:	str	r3, [r2]
   1348c:	bx	lr
   13490:	ldr	r3, [pc, #228]	; 1357c <tcgetattr@plt+0x1994>
   13494:	mov	r0, #66	; 0x42
   13498:	ldrb	ip, [r3, #27]!
   1349c:	strb	ip, [r1]
   134a0:	str	r3, [r2]
   134a4:	bx	lr
   134a8:	ldr	r3, [pc, #204]	; 1357c <tcgetattr@plt+0x1994>
   134ac:	mov	r0, #2
   134b0:	ldrb	ip, [r3, #19]!
   134b4:	strb	ip, [r1]
   134b8:	str	r3, [r2]
   134bc:	bx	lr
   134c0:	ldr	r3, [pc, #180]	; 1357c <tcgetattr@plt+0x1994>
   134c4:	mov	r0, #2
   134c8:	ldrb	ip, [r3, #20]!
   134cc:	strb	ip, [r1]
   134d0:	str	r3, [r2]
   134d4:	bx	lr
   134d8:	ldr	r3, [pc, #156]	; 1357c <tcgetattr@plt+0x1994>
   134dc:	mov	r0, #2
   134e0:	ldrb	ip, [r3, #31]!
   134e4:	strb	ip, [r1]
   134e8:	str	r3, [r2]
   134ec:	bx	lr
   134f0:	ldr	r3, [pc, #132]	; 1357c <tcgetattr@plt+0x1994>
   134f4:	mov	r0, #2
   134f8:	ldrb	ip, [r3, #29]!
   134fc:	strb	ip, [r1]
   13500:	str	r3, [r2]
   13504:	bx	lr
   13508:	ldr	r3, [pc, #108]	; 1357c <tcgetattr@plt+0x1994>
   1350c:	mov	r0, #2
   13510:	ldrb	ip, [r3, #32]!
   13514:	strb	ip, [r1]
   13518:	str	r3, [r2]
   1351c:	bx	lr
   13520:	ldr	r3, [pc, #84]	; 1357c <tcgetattr@plt+0x1994>
   13524:	mov	r0, #2
   13528:	ldrb	ip, [r3, #25]!
   1352c:	strb	ip, [r1]
   13530:	str	r3, [r2]
   13534:	bx	lr
   13538:	ldr	r3, [pc, #60]	; 1357c <tcgetattr@plt+0x1994>
   1353c:	mov	r0, #2
   13540:	ldrb	ip, [r3, #26]!
   13544:	strb	ip, [r1]
   13548:	str	r3, [r2]
   1354c:	bx	lr
   13550:	ldr	r3, [pc, #36]	; 1357c <tcgetattr@plt+0x1994>
   13554:	mov	r0, #2
   13558:	ldrb	ip, [r3, #28]!
   1355c:	strb	ip, [r1]
   13560:	str	r3, [r2]
   13564:	bx	lr
   13568:	mov	r3, #0
   1356c:	strb	r3, [r1]
   13570:	mov	r0, r3
   13574:	str	r3, [r2]
   13578:	bx	lr
   1357c:	andeq	sl, r3, r8, lsr #24
   13580:	ldr	r2, [pc, #56]	; 135c0 <tcgetattr@plt+0x19d8>
   13584:	ldr	r3, [r2]
   13588:	cmn	r3, #1
   1358c:	beq	135b0 <tcgetattr@plt+0x19c8>
   13590:	cmp	r0, r3
   13594:	bgt	135a4 <tcgetattr@plt+0x19bc>
   13598:	b	135b4 <tcgetattr@plt+0x19cc>
   1359c:	cmp	r3, r0
   135a0:	bge	135b4 <tcgetattr@plt+0x19cc>
   135a4:	ldr	r3, [r2, #8]!
   135a8:	cmn	r3, #1
   135ac:	bne	1359c <tcgetattr@plt+0x19b4>
   135b0:	sub	r2, r2, #8
   135b4:	ldr	r1, [r2, #4]
   135b8:	ldr	r0, [pc, #4]	; 135c4 <tcgetattr@plt+0x19dc>
   135bc:	b	118ac <cfsetospeed@plt>
   135c0:	andeq	r2, r3, r0, ror r2
   135c4:	andeq	sl, r3, r8, lsr #24
   135c8:	ldr	r2, [pc, #56]	; 13608 <tcgetattr@plt+0x1a20>
   135cc:	ldr	r3, [r2]
   135d0:	cmn	r3, #1
   135d4:	beq	135f8 <tcgetattr@plt+0x1a10>
   135d8:	cmp	r0, r3
   135dc:	bgt	135ec <tcgetattr@plt+0x1a04>
   135e0:	b	135fc <tcgetattr@plt+0x1a14>
   135e4:	cmp	r3, r0
   135e8:	bge	135fc <tcgetattr@plt+0x1a14>
   135ec:	ldr	r3, [r2, #8]!
   135f0:	cmn	r3, #1
   135f4:	bne	135e4 <tcgetattr@plt+0x19fc>
   135f8:	sub	r2, r2, #8
   135fc:	ldr	r1, [r2, #4]
   13600:	ldr	r0, [pc, #4]	; 1360c <tcgetattr@plt+0x1a24>
   13604:	b	119f0 <cfsetispeed@plt>
   13608:	andeq	r2, r3, r0, ror r2
   1360c:	andeq	sl, r3, r8, lsr #24
   13610:	push	{r4, r5, r6, lr}
   13614:	mov	r0, #63	; 0x3f
   13618:	bl	11b70 <umask@plt>
   1361c:	ldr	r5, [pc, #56]	; 1365c <tcgetattr@plt+0x1a74>
   13620:	ldr	r4, [r5]
   13624:	cmp	r4, #0
   13628:	mov	r6, r0
   1362c:	beq	13644 <tcgetattr@plt+0x1a5c>
   13630:	mov	r0, r6
   13634:	bl	11b70 <umask@plt>
   13638:	clz	r0, r4
   1363c:	lsr	r0, r0, #5
   13640:	pop	{r4, r5, r6, pc}
   13644:	ldr	r1, [pc, #20]	; 13660 <tcgetattr@plt+0x1a78>
   13648:	ldr	r0, [pc, #20]	; 13664 <tcgetattr@plt+0x1a7c>
   1364c:	bl	11b34 <fopen64@plt>
   13650:	mov	r4, r0
   13654:	str	r0, [r5]
   13658:	b	13630 <tcgetattr@plt+0x1a48>
   1365c:	andeq	r2, r3, r8, lsr #10
   13660:	andeq	r0, r2, r8, asr #4
   13664:	andeq	r0, r2, ip, asr #4
   13668:	ldr	r3, [r1]
   1366c:	ldrb	r2, [r3]
   13670:	cmp	r2, #123	; 0x7b
   13674:	bxne	lr
   13678:	ldr	ip, [r0]
   1367c:	push	{lr}		; (str lr, [sp, #-4]!)
   13680:	mov	lr, ip
   13684:	b	136b4 <tcgetattr@plt+0x1acc>
   13688:	cmp	r2, #125	; 0x7d
   1368c:	bne	136a0 <tcgetattr@plt+0x1ab8>
   13690:	sub	ip, ip, #1
   13694:	cmp	lr, ip
   13698:	str	ip, [r0]
   1369c:	beq	136cc <tcgetattr@plt+0x1ae4>
   136a0:	add	r3, r3, #1
   136a4:	str	r3, [r1]
   136a8:	ldrb	r2, [r3]
   136ac:	cmp	r2, #0
   136b0:	beq	136c8 <tcgetattr@plt+0x1ae0>
   136b4:	cmp	r2, #123	; 0x7b
   136b8:	bne	13688 <tcgetattr@plt+0x1aa0>
   136bc:	add	ip, ip, #1
   136c0:	str	ip, [r0]
   136c4:	b	136a0 <tcgetattr@plt+0x1ab8>
   136c8:	pop	{pc}		; (ldr pc, [sp], #4)
   136cc:	add	r3, r3, #1
   136d0:	str	r3, [r1]
   136d4:	pop	{pc}		; (ldr pc, [sp], #4)
   136d8:	ldr	r3, [r0, #12]
   136dc:	mov	r1, r0
   136e0:	ldrb	r2, [r3]
   136e4:	cmp	r2, #123	; 0x7b
   136e8:	bne	13748 <tcgetattr@plt+0x1b60>
   136ec:	add	r0, r3, #1
   136f0:	str	r0, [r1, #12]
   136f4:	ldrb	r2, [r3, #1]
   136f8:	mov	r3, r0
   136fc:	cmp	r2, #125	; 0x7d
   13700:	cmpne	r2, #0
   13704:	beq	13720 <tcgetattr@plt+0x1b38>
   13708:	add	r3, r3, #1
   1370c:	str	r3, [r1, #12]
   13710:	ldrb	r2, [r3]
   13714:	cmp	r2, #0
   13718:	cmpne	r2, #125	; 0x7d
   1371c:	bne	13708 <tcgetattr@plt+0x1b20>
   13720:	cmp	r2, #0
   13724:	moveq	r3, #2
   13728:	addne	r3, r3, #1
   1372c:	movne	r2, #2
   13730:	streq	r0, [r1, #12]
   13734:	streq	r3, [r1]
   13738:	strne	r3, [r1, #12]
   1373c:	strne	r2, [r1]
   13740:	movne	r0, #0
   13744:	bx	lr
   13748:	add	r2, r3, #1
   1374c:	push	{lr}		; (str lr, [sp, #-4]!)
   13750:	sub	sp, sp, #76	; 0x4c
   13754:	str	r2, [r0, #12]
   13758:	ldrb	r3, [r3]
   1375c:	sub	r3, r3, #76	; 0x4c
   13760:	cmp	r3, #41	; 0x29
   13764:	ldrls	pc, [pc, r3, lsl #2]
   13768:	b	138e0 <tcgetattr@plt+0x1cf8>
   1376c:	andeq	r3, r1, r4, lsl r8
   13770:	andeq	r3, r1, r0, ror #17
   13774:	andeq	r3, r1, r0, ror #17
   13778:	andeq	r3, r1, r0, ror #17
   1377c:	andeq	r3, r1, r0, ror #17
   13780:	andeq	r3, r1, r0, ror #17
   13784:	andeq	r3, r1, r0, ror #17
   13788:	andeq	r3, r1, r0, ror #17
   1378c:	andeq	r3, r1, ip, asr r8
   13790:	andeq	r3, r1, r0, ror r8
   13794:	andeq	r3, r1, r0, ror #17
   13798:	andeq	r3, r1, r0, ror #17
   1379c:	andeq	r3, r1, r0, ror #17
   137a0:	andeq	r3, r1, r0, ror #17
   137a4:	andeq	r3, r1, r0, ror #17
   137a8:	andeq	r3, r1, r0, ror #17
   137ac:	andeq	r3, r1, r0, ror #17
   137b0:	andeq	r3, r1, r0, ror #17
   137b4:	andeq	r3, r1, r0, ror #17
   137b8:	andeq	r3, r1, r0, ror #17
   137bc:	andeq	r3, r1, r0, ror #17
   137c0:	andeq	r3, r1, r4, lsr #16
   137c4:	andeq	r3, r1, r0, ror #17
   137c8:	andeq	r3, r1, r0, ror #17
   137cc:	andeq	r3, r1, ip, lsr #16
   137d0:	andeq	r3, r1, r0, ror #17
   137d4:	andeq	r3, r1, r0, ror #17
   137d8:	andeq	r3, r1, r0, ror #17
   137dc:	muleq	r1, r0, r8
   137e0:	andeq	r3, r1, r0, ror #17
   137e4:	andeq	r3, r1, r0, ror #17
   137e8:	andeq	r3, r1, r0, ror #17
   137ec:	ldrdeq	r3, [r1], -r0
   137f0:	andeq	r3, r1, r0, ror #17
   137f4:	andeq	r3, r1, r0, ror #17
   137f8:	andeq	r3, r1, r0, ror #17
   137fc:	andeq	r3, r1, r0, ror #17
   13800:	andeq	r3, r1, r0, ror #17
   13804:	andeq	r3, r1, r0, ror #17
   13808:	andeq	r3, r1, r0, ror #17
   1380c:	andeq	r3, r1, r0, lsr #17
   13810:			; <UNDEFINED> instruction: 0x000138bc
   13814:	ldr	r0, [pc, #220]	; 138f8 <tcgetattr@plt+0x1d10>
   13818:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   1381c:	add	sp, sp, #76	; 0x4c
   13820:	pop	{pc}		; (ldr pc, [sp], #4)
   13824:	mov	r0, #0
   13828:	b	1381c <tcgetattr@plt+0x1c34>
   1382c:	add	r0, sp, #4
   13830:	bl	11828 <time@plt>
   13834:	add	r0, sp, #4
   13838:	bl	11960 <localtime@plt>
   1383c:	ldr	r2, [pc, #184]	; 138fc <tcgetattr@plt+0x1d14>
   13840:	mov	r1, #64	; 0x40
   13844:	mov	r3, r0
   13848:	add	r0, sp, #8
   1384c:	bl	11954 <strftime@plt>
   13850:	add	r0, sp, #8
   13854:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   13858:	b	1381c <tcgetattr@plt+0x1c34>
   1385c:	ldr	r3, [pc, #156]	; 13900 <tcgetattr@plt+0x1d18>
   13860:	ldr	r0, [r3]
   13864:	cmp	r0, #0
   13868:	bne	13818 <tcgetattr@plt+0x1c30>
   1386c:	b	1381c <tcgetattr@plt+0x1c34>
   13870:	ldr	r0, [pc, #140]	; 13904 <tcgetattr@plt+0x1d1c>
   13874:	bl	11924 <getenv@plt>
   13878:	cmp	r0, #0
   1387c:	beq	138f0 <tcgetattr@plt+0x1d08>
   13880:	ldr	r0, [pc, #124]	; 13904 <tcgetattr@plt+0x1d1c>
   13884:	bl	11924 <getenv@plt>
   13888:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   1388c:	b	1381c <tcgetattr@plt+0x1c34>
   13890:	ldr	r3, [pc, #112]	; 13908 <tcgetattr@plt+0x1d20>
   13894:	ldr	r0, [r3]
   13898:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   1389c:	b	1381c <tcgetattr@plt+0x1c34>
   138a0:	mov	r1, #47	; 0x2f
   138a4:	ldr	r0, [pc, #96]	; 1390c <tcgetattr@plt+0x1d24>
   138a8:	bl	119cc <strchr@plt>
   138ac:	cmp	r0, #0
   138b0:	beq	13814 <tcgetattr@plt+0x1c2c>
   138b4:	add	r0, r0, #1
   138b8:	b	13818 <tcgetattr@plt+0x1c30>
   138bc:	ldr	r3, [pc, #76]	; 13910 <tcgetattr@plt+0x1d28>
   138c0:	ldr	r0, [r3]
   138c4:	cmp	r0, #0
   138c8:	bne	13818 <tcgetattr@plt+0x1c30>
   138cc:	b	1381c <tcgetattr@plt+0x1c34>
   138d0:	ldr	r3, [pc, #60]	; 13914 <tcgetattr@plt+0x1d2c>
   138d4:	ldr	r0, [r3]
   138d8:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   138dc:	b	1381c <tcgetattr@plt+0x1c34>
   138e0:	mov	r3, #2
   138e4:	str	r3, [r0]
   138e8:	mov	r0, #0
   138ec:	b	1381c <tcgetattr@plt+0x1c34>
   138f0:	ldr	r0, [pc, #32]	; 13918 <tcgetattr@plt+0x1d30>
   138f4:	b	13818 <tcgetattr@plt+0x1c30>
   138f8:	andeq	sl, r3, r0, ror #19
   138fc:	andeq	r0, r2, r0, ror #4
   13900:	andeq	sl, r3, r0, lsl #14
   13904:	andeq	pc, r1, ip, asr pc	; <UNPREDICTABLE>
   13908:	andeq	sl, r3, r0, ror #23
   1390c:	andeq	sl, r3, r1, ror #19
   13910:	andeq	sl, r3, r8, ror #23
   13914:	andeq	sl, r3, r4, lsr #19
   13918:	andeq	r0, r2, r8, ror #11
   1391c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13920:	mov	r4, r0
   13924:	ldr	r3, [r0, #12]
   13928:	ldr	r5, [r0, #4]
   1392c:	add	r6, r0, #16
   13930:	ldrb	r2, [r3]
   13934:	mov	r7, #1
   13938:	add	r9, r0, #12
   1393c:	cmp	r2, #123	; 0x7b
   13940:	add	r8, r0, #4
   13944:	addeq	r3, r3, #1
   13948:	addeq	r2, r5, #1
   1394c:	streq	r3, [r0, #12]
   13950:	streq	r2, [r0, #4]
   13954:	ldr	r3, [r4]
   13958:	cmp	r3, #0
   1395c:	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13960:	ldr	r3, [r4, #12]
   13964:	mov	r1, r3
   13968:	ldrb	r2, [r3]
   1396c:	cmp	r2, #0
   13970:	cmpne	r2, #37	; 0x25
   13974:	bne	139d4 <tcgetattr@plt+0x1dec>
   13978:	b	13a2c <tcgetattr@plt+0x1e44>
   1397c:	cmp	r2, #125	; 0x7d
   13980:	beq	13a0c <tcgetattr@plt+0x1e24>
   13984:	cmp	r2, #92	; 0x5c
   13988:	addeq	r1, r1, #1
   1398c:	streq	r1, [r4, #12]
   13990:	ldr	r3, [r4, #28]
   13994:	ldr	r2, [r4, #32]
   13998:	cmp	r2, r3
   1399c:	beq	139f8 <tcgetattr@plt+0x1e10>
   139a0:	ldr	r2, [r4, #12]
   139a4:	add	r1, r3, #1
   139a8:	str	r1, [r4, #28]
   139ac:	ldrb	r2, [r2]
   139b0:	strb	r2, [r3]
   139b4:	ldr	r3, [r4, #12]
   139b8:	add	r1, r3, #1
   139bc:	str	r1, [r4, #12]
   139c0:	ldrb	r2, [r3, #1]
   139c4:	mov	r3, r1
   139c8:	cmp	r2, #0
   139cc:	cmpne	r2, #37	; 0x25
   139d0:	beq	13a2c <tcgetattr@plt+0x1e44>
   139d4:	cmp	r2, #123	; 0x7b
   139d8:	bne	1397c <tcgetattr@plt+0x1d94>
   139dc:	ldr	r3, [r4, #4]
   139e0:	ldr	r2, [r4, #32]
   139e4:	add	r3, r3, #1
   139e8:	str	r3, [r4, #4]
   139ec:	ldr	r3, [r4, #28]
   139f0:	cmp	r2, r3
   139f4:	bne	139a0 <tcgetattr@plt+0x1db8>
   139f8:	mov	r1, r7
   139fc:	mov	r0, r6
   13a00:	bl	1a484 <_obstack_newchunk@@Base>
   13a04:	ldr	r3, [r4, #28]
   13a08:	b	139a0 <tcgetattr@plt+0x1db8>
   13a0c:	ldr	r3, [r4, #4]
   13a10:	sub	r3, r3, #1
   13a14:	cmp	r5, r3
   13a18:	str	r3, [r4, #4]
   13a1c:	bne	13990 <tcgetattr@plt+0x1da8>
   13a20:	add	r1, r1, #1
   13a24:	str	r1, [r4, #12]
   13a28:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a2c:	cmp	r2, #0
   13a30:	beq	13b40 <tcgetattr@plt+0x1f58>
   13a34:	cmp	r2, #37	; 0x25
   13a38:	bne	13a48 <tcgetattr@plt+0x1e60>
   13a3c:	ldrb	r2, [r1, #1]
   13a40:	cmp	r2, #37	; 0x25
   13a44:	beq	13af8 <tcgetattr@plt+0x1f10>
   13a48:	add	r3, r1, #1
   13a4c:	str	r3, [r4, #12]
   13a50:	ldrb	r3, [r1, #1]
   13a54:	cmp	r3, #63	; 0x3f
   13a58:	beq	13aac <tcgetattr@plt+0x1ec4>
   13a5c:	mov	r0, r4
   13a60:	bl	136d8 <tcgetattr@plt+0x1af0>
   13a64:	subs	fp, r0, #0
   13a68:	beq	13aa0 <tcgetattr@plt+0x1eb8>
   13a6c:	bl	119c0 <strlen@plt>
   13a70:	ldr	r3, [r4, #32]
   13a74:	mov	sl, r0
   13a78:	ldr	r0, [r4, #28]
   13a7c:	sub	r3, r3, r0
   13a80:	cmp	sl, r3
   13a84:	bhi	13ae4 <tcgetattr@plt+0x1efc>
   13a88:	mov	r2, sl
   13a8c:	mov	r1, fp
   13a90:	bl	11810 <memcpy@plt>
   13a94:	ldr	r3, [r4, #28]
   13a98:	add	sl, r3, sl
   13a9c:	str	sl, [r4, #28]
   13aa0:	mov	r0, fp
   13aa4:	bl	1a1f4 <argp_parse@@Base+0xe98>
   13aa8:	b	13954 <tcgetattr@plt+0x1d6c>
   13aac:	add	r1, r1, #2
   13ab0:	str	r1, [r4, #12]
   13ab4:	mov	r0, r4
   13ab8:	bl	136d8 <tcgetattr@plt+0x1af0>
   13abc:	subs	sl, r0, #0
   13ac0:	beq	13b28 <tcgetattr@plt+0x1f40>
   13ac4:	mov	r0, r4
   13ac8:	bl	1391c <tcgetattr@plt+0x1d34>
   13acc:	mov	r1, r9
   13ad0:	mov	r0, r8
   13ad4:	bl	13668 <tcgetattr@plt+0x1a80>
   13ad8:	mov	r0, sl
   13adc:	bl	1a1f4 <argp_parse@@Base+0xe98>
   13ae0:	b	13954 <tcgetattr@plt+0x1d6c>
   13ae4:	mov	r0, r6
   13ae8:	mov	r1, sl
   13aec:	bl	1a484 <_obstack_newchunk@@Base>
   13af0:	ldr	r0, [r4, #28]
   13af4:	b	13a88 <tcgetattr@plt+0x1ea0>
   13af8:	ldr	r2, [r4, #28]
   13afc:	ldr	r1, [r4, #32]
   13b00:	cmp	r1, r2
   13b04:	beq	13b6c <tcgetattr@plt+0x1f84>
   13b08:	add	r1, r2, #1
   13b0c:	str	r1, [r4, #28]
   13b10:	ldrb	r3, [r3]
   13b14:	strb	r3, [r2]
   13b18:	ldr	r3, [r4, #12]
   13b1c:	add	r3, r3, #2
   13b20:	str	r3, [r4, #12]
   13b24:	b	13954 <tcgetattr@plt+0x1d6c>
   13b28:	mov	r0, r8
   13b2c:	mov	r1, r9
   13b30:	bl	13668 <tcgetattr@plt+0x1a80>
   13b34:	mov	r0, r4
   13b38:	bl	1391c <tcgetattr@plt+0x1d34>
   13b3c:	b	13ad8 <tcgetattr@plt+0x1ef0>
   13b40:	ldr	r2, [r4, #32]
   13b44:	ldr	r3, [r4, #28]
   13b48:	cmp	r2, r3
   13b4c:	beq	13b84 <tcgetattr@plt+0x1f9c>
   13b50:	add	r0, r3, #1
   13b54:	mov	r1, #0
   13b58:	mov	r2, #1
   13b5c:	str	r0, [r4, #28]
   13b60:	strb	r1, [r3]
   13b64:	str	r2, [r4]
   13b68:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13b6c:	mov	r1, r7
   13b70:	mov	r0, r6
   13b74:	bl	1a484 <_obstack_newchunk@@Base>
   13b78:	ldr	r2, [r4, #28]
   13b7c:	ldr	r3, [r4, #12]
   13b80:	b	13b08 <tcgetattr@plt+0x1f20>
   13b84:	mov	r1, #1
   13b88:	add	r0, r4, #16
   13b8c:	bl	1a484 <_obstack_newchunk@@Base>
   13b90:	ldr	r3, [r4, #28]
   13b94:	b	13b50 <tcgetattr@plt+0x1f68>
   13b98:	push	{r4, lr}
   13b9c:	mov	r2, r1
   13ba0:	ldr	r4, [pc, #36]	; 13bcc <tcgetattr@plt+0x1fe4>
   13ba4:	mov	r1, #1
   13ba8:	ldr	r3, [r4]
   13bac:	bl	118c4 <fwrite@plt>
   13bb0:	ldr	r0, [r4]
   13bb4:	cmp	r0, #0
   13bb8:	beq	13bc0 <tcgetattr@plt+0x1fd8>
   13bbc:	bl	11a68 <fclose@plt>
   13bc0:	mov	r3, #0
   13bc4:	str	r3, [r4]
   13bc8:	pop	{r4, pc}
   13bcc:	andeq	r2, r3, r8, lsr #10
   13bd0:	push	{r4, r5, lr}
   13bd4:	ldr	r2, [pc, #52]	; 13c10 <tcgetattr@plt+0x2028>
   13bd8:	ldr	r3, [pc, #52]	; 13c14 <tcgetattr@plt+0x202c>
   13bdc:	ldr	lr, [pc, #52]	; 13c18 <tcgetattr@plt+0x2030>
   13be0:	ldr	r1, [pc, #52]	; 13c1c <tcgetattr@plt+0x2034>
   13be4:	add	ip, lr, #8
   13be8:	add	r0, r2, #88	; 0x58
   13bec:	add	r5, r3, #168	; 0xa8
   13bf0:	add	r4, r1, #180	; 0xb4
   13bf4:	str	ip, [lr, #4]
   13bf8:	str	ip, [r2, #80]	; 0x50
   13bfc:	str	r0, [r2, #84]	; 0x54
   13c00:	str	r0, [r3, #160]	; 0xa0
   13c04:	str	r5, [r3, #164]	; 0xa4
   13c08:	str	r4, [r1, #176]	; 0xb0
   13c0c:	pop	{r4, r5, pc}
   13c10:	andeq	r4, r3, r0, lsr #10
   13c14:	andeq	r6, r3, r8, lsl r5
   13c18:	andeq	r2, r3, r8, lsr #10
   13c1c:	andeq	r8, r3, r0, lsl r5
   13c20:	ldr	r3, [pc, #16]	; 13c38 <tcgetattr@plt+0x2050>
   13c24:	ldr	r2, [pc, #16]	; 13c3c <tcgetattr@plt+0x2054>
   13c28:	ldr	r3, [r3, #160]	; 0xa0
   13c2c:	sub	r3, r3, #1
   13c30:	str	r3, [r2, #188]	; 0xbc
   13c34:	bx	lr
   13c38:	andeq	r6, r3, r8, lsl r5
   13c3c:	andeq	sl, r3, r8, lsl #10
   13c40:	ldr	r3, [pc, #16]	; 13c58 <tcgetattr@plt+0x2070>
   13c44:	ldr	r2, [r3, #160]	; 0xa0
   13c48:	add	r1, r2, #1
   13c4c:	strb	r0, [r2]
   13c50:	str	r1, [r3, #160]	; 0xa0
   13c54:	bx	lr
   13c58:	andeq	r6, r3, r8, lsl r5
   13c5c:	ldr	r3, [pc, #4]	; 13c68 <tcgetattr@plt+0x2080>
   13c60:	ldr	r0, [r3, #192]	; 0xc0
   13c64:	bx	lr
   13c68:	andeq	sl, r3, r8, lsl #10
   13c6c:	ldr	r2, [pc, #16]	; 13c84 <tcgetattr@plt+0x209c>
   13c70:	ldr	r3, [pc, #16]	; 13c88 <tcgetattr@plt+0x20a0>
   13c74:	ldr	r0, [r2, #160]	; 0xa0
   13c78:	ldr	r3, [r3, #84]	; 0x54
   13c7c:	sub	r0, r0, r3
   13c80:	bx	lr
   13c84:	andeq	r6, r3, r8, lsl r5
   13c88:	andeq	r4, r3, r0, lsr #10
   13c8c:	ldr	r3, [pc, #24]	; 13cac <tcgetattr@plt+0x20c4>
   13c90:	ldr	r0, [pc, #24]	; 13cb0 <tcgetattr@plt+0x20c8>
   13c94:	ldr	r3, [r3, #160]	; 0xa0
   13c98:	sub	r0, r0, r3
   13c9c:	cmp	r0, #1
   13ca0:	movgt	r0, #0
   13ca4:	movle	r0, #1
   13ca8:	bx	lr
   13cac:	andeq	r6, r3, r8, lsl r5
   13cb0:	andeq	r6, r3, r8, ror r5
   13cb4:	cmp	r0, #0
   13cb8:	bne	13cec <tcgetattr@plt+0x2104>
   13cbc:	ldr	r2, [pc, #56]	; 13cfc <tcgetattr@plt+0x2114>
   13cc0:	ldr	r3, [r2, #192]	; 0xc0
   13cc4:	cmp	r3, #0
   13cc8:	bxle	lr
   13ccc:	ldr	r1, [pc, #44]	; 13d00 <tcgetattr@plt+0x2118>
   13cd0:	sub	r3, r3, #1
   13cd4:	str	r3, [r2, #192]	; 0xc0
   13cd8:	ldr	r3, [r1, #164]	; 0xa4
   13cdc:	add	r2, r3, #1
   13ce0:	str	r2, [r1, #164]	; 0xa4
   13ce4:	ldrb	r0, [r3]
   13ce8:	bx	lr
   13cec:	ldr	r3, [pc, #12]	; 13d00 <tcgetattr@plt+0x2118>
   13cf0:	ldr	r3, [r3, #164]	; 0xa4
   13cf4:	ldrb	r0, [r3]
   13cf8:	bx	lr
   13cfc:	andeq	sl, r3, r8, lsl #10
   13d00:	andeq	r6, r3, r8, lsl r5
   13d04:	ldr	r3, [pc, #24]	; 13d24 <tcgetattr@plt+0x213c>
   13d08:	ldr	r0, [pc, #24]	; 13d28 <tcgetattr@plt+0x2140>
   13d0c:	ldr	r3, [r3, #80]	; 0x50
   13d10:	sub	r0, r0, r3
   13d14:	cmp	r0, #1
   13d18:	movgt	r0, #0
   13d1c:	movle	r0, #1
   13d20:	bx	lr
   13d24:	andeq	r4, r3, r0, lsr #10
   13d28:	andeq	r4, r3, r0, lsr r5
   13d2c:	ldr	r3, [pc, #16]	; 13d44 <tcgetattr@plt+0x215c>
   13d30:	ldr	r2, [r3, #80]	; 0x50
   13d34:	add	r1, r2, #1
   13d38:	strb	r0, [r2]
   13d3c:	str	r1, [r3, #80]	; 0x50
   13d40:	bx	lr
   13d44:	andeq	r4, r3, r0, lsr #10
   13d48:	ldr	r3, [pc, #4]	; 13d54 <tcgetattr@plt+0x216c>
   13d4c:	ldr	r0, [r3, #196]	; 0xc4
   13d50:	bx	lr
   13d54:	andeq	sl, r3, r8, lsl #10
   13d58:	ldr	r2, [pc, #16]	; 13d70 <tcgetattr@plt+0x2188>
   13d5c:	ldr	r3, [pc, #16]	; 13d74 <tcgetattr@plt+0x218c>
   13d60:	ldr	r0, [r2, #80]	; 0x50
   13d64:	ldr	r3, [r3, #4]
   13d68:	sub	r0, r0, r3
   13d6c:	bx	lr
   13d70:	andeq	r4, r3, r0, lsr #10
   13d74:	andeq	r2, r3, r8, lsr #10
   13d78:	cmp	r0, #0
   13d7c:	bne	13db0 <tcgetattr@plt+0x21c8>
   13d80:	ldr	r2, [pc, #56]	; 13dc0 <tcgetattr@plt+0x21d8>
   13d84:	ldr	r3, [r2, #196]	; 0xc4
   13d88:	cmp	r3, #0
   13d8c:	bxle	lr
   13d90:	ldr	r1, [pc, #44]	; 13dc4 <tcgetattr@plt+0x21dc>
   13d94:	sub	r3, r3, #1
   13d98:	str	r3, [r2, #196]	; 0xc4
   13d9c:	ldr	r3, [r1, #176]	; 0xb0
   13da0:	add	r2, r3, #1
   13da4:	str	r2, [r1, #176]	; 0xb0
   13da8:	ldrb	r0, [r3]
   13dac:	bx	lr
   13db0:	ldr	r3, [pc, #12]	; 13dc4 <tcgetattr@plt+0x21dc>
   13db4:	ldr	r3, [r3, #176]	; 0xb0
   13db8:	ldrb	r0, [r3]
   13dbc:	bx	lr
   13dc0:	andeq	sl, r3, r8, lsl #10
   13dc4:	andeq	r8, r3, r0, lsl r5
   13dc8:	ldr	r3, [pc, #64]	; 13e10 <tcgetattr@plt+0x2228>
   13dcc:	push	{r4, lr}
   13dd0:	add	r4, r3, #180	; 0xb4
   13dd4:	ldr	r3, [r3, #176]	; 0xb0
   13dd8:	add	r4, r4, #8192	; 0x2000
   13ddc:	sub	r4, r4, r3
   13de0:	cmp	r4, r1
   13de4:	movcs	r4, r1
   13de8:	mov	r2, r4
   13dec:	mov	r1, r0
   13df0:	mov	r0, r3
   13df4:	bl	11a44 <strncpy@plt>
   13df8:	ldr	r2, [pc, #20]	; 13e14 <tcgetattr@plt+0x222c>
   13dfc:	mov	r0, #0
   13e00:	ldr	r3, [r2, #196]	; 0xc4
   13e04:	add	r4, r3, r4
   13e08:	str	r4, [r2, #196]	; 0xc4
   13e0c:	pop	{r4, pc}
   13e10:	andeq	r8, r3, r0, lsl r5
   13e14:	andeq	sl, r3, r8, lsl #10
   13e18:	cmp	r0, r1
   13e1c:	bcs	13ea4 <tcgetattr@plt+0x22bc>
   13e20:	ldrb	r3, [r0]
   13e24:	cmp	r3, #255	; 0xff
   13e28:	beq	13e34 <tcgetattr@plt+0x224c>
   13e2c:	add	r0, r0, #1
   13e30:	bx	lr
   13e34:	add	r3, r0, #1
   13e38:	cmp	r1, r3
   13e3c:	bls	13ea4 <tcgetattr@plt+0x22bc>
   13e40:	ldrb	r3, [r0, #1]
   13e44:	cmp	r3, #250	; 0xfa
   13e48:	beq	13ebc <tcgetattr@plt+0x22d4>
   13e4c:	bcc	13eac <tcgetattr@plt+0x22c4>
   13e50:	cmp	r3, #254	; 0xfe
   13e54:	bhi	13eac <tcgetattr@plt+0x22c4>
   13e58:	add	r0, r0, #3
   13e5c:	cmp	r1, r0
   13e60:	movcc	r0, #0
   13e64:	bx	lr
   13e68:	cmp	r1, ip
   13e6c:	mov	r3, ip
   13e70:	beq	13ea4 <tcgetattr@plt+0x22bc>
   13e74:	ldrb	r2, [r3], #1
   13e78:	cmp	r1, r3
   13e7c:	sub	r2, r2, #255	; 0xff
   13e80:	clz	r2, r2
   13e84:	lsr	r2, r2, #5
   13e88:	movls	r2, #0
   13e8c:	cmp	r2, #0
   13e90:	bne	13ef0 <tcgetattr@plt+0x2308>
   13e94:	mov	ip, r3
   13e98:	cmp	r1, ip
   13e9c:	mov	r3, ip
   13ea0:	bne	13e74 <tcgetattr@plt+0x228c>
   13ea4:	mov	r0, #0
   13ea8:	bx	lr
   13eac:	add	r0, r0, #2
   13eb0:	cmp	r1, r0
   13eb4:	movcc	r0, #0
   13eb8:	bx	lr
   13ebc:	add	r0, r0, #2
   13ec0:	cmp	r1, r0
   13ec4:	bls	13ea4 <tcgetattr@plt+0x22bc>
   13ec8:	ldrb	r3, [r0]
   13ecc:	add	ip, r0, #1
   13ed0:	cmp	r1, ip
   13ed4:	sub	r3, r3, #255	; 0xff
   13ed8:	clz	r3, r3
   13edc:	lsr	r3, r3, #5
   13ee0:	movls	r3, #0
   13ee4:	cmp	r3, #0
   13ee8:	beq	13e68 <tcgetattr@plt+0x2280>
   13eec:	mov	ip, r0
   13ef0:	ldrb	r3, [ip, #1]
   13ef4:	add	r0, ip, #2
   13ef8:	cmp	r3, #240	; 0xf0
   13efc:	bne	13ec0 <tcgetattr@plt+0x22d8>
   13f00:	bx	lr
   13f04:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f08:	ldr	r7, [pc, #328]	; 14058 <tcgetattr@plt+0x2470>
   13f0c:	add	r8, r7, #88	; 0x58
   13f10:	mov	r4, r8
   13f14:	ldr	r6, [r7, #84]	; 0x54
   13f18:	b	13f20 <tcgetattr@plt+0x2338>
   13f1c:	mov	r4, r0
   13f20:	mov	r1, r6
   13f24:	mov	r0, r4
   13f28:	bl	13e18 <tcgetattr@plt+0x2230>
   13f2c:	cmp	r0, r6
   13f30:	movhi	r5, #0
   13f34:	movls	r5, #1
   13f38:	cmp	r0, #0
   13f3c:	moveq	r5, #0
   13f40:	cmp	r5, #0
   13f44:	bne	13f1c <tcgetattr@plt+0x2334>
   13f48:	cmp	r4, #0
   13f4c:	beq	14044 <tcgetattr@plt+0x245c>
   13f50:	ldr	r9, [pc, #260]	; 1405c <tcgetattr@plt+0x2474>
   13f54:	ldr	r6, [pc, #260]	; 14060 <tcgetattr@plt+0x2478>
   13f58:	ldr	sl, [r9, #160]	; 0xa0
   13f5c:	cmp	r4, sl
   13f60:	bcs	14010 <tcgetattr@plt+0x2428>
   13f64:	ldrb	r3, [r4]
   13f68:	cmp	r3, #255	; 0xff
   13f6c:	bne	14028 <tcgetattr@plt+0x2440>
   13f70:	add	r3, r4, #1
   13f74:	cmp	sl, r3
   13f78:	bls	14028 <tcgetattr@plt+0x2440>
   13f7c:	ldrb	r3, [r4, #1]
   13f80:	add	r3, r3, #9
   13f84:	uxtb	r3, r3
   13f88:	cmp	r3, #1
   13f8c:	bls	14028 <tcgetattr@plt+0x2440>
   13f90:	cmp	r4, sl
   13f94:	mov	r3, r4
   13f98:	bcc	13fd0 <tcgetattr@plt+0x23e8>
   13f9c:	b	14050 <tcgetattr@plt+0x2468>
   13fa0:	cmp	r3, sl
   13fa4:	bcs	1403c <tcgetattr@plt+0x2454>
   13fa8:	ldrb	r1, [r3]
   13fac:	cmp	r1, #255	; 0xff
   13fb0:	bne	1403c <tcgetattr@plt+0x2454>
   13fb4:	cmp	sl, r2
   13fb8:	bls	1403c <tcgetattr@plt+0x2454>
   13fbc:	ldrb	r2, [r3, #1]
   13fc0:	add	r2, r2, #9
   13fc4:	uxtb	r2, r2
   13fc8:	cmp	r2, #1
   13fcc:	bls	1403c <tcgetattr@plt+0x2454>
   13fd0:	mov	r0, r3
   13fd4:	mov	r1, sl
   13fd8:	bl	13e18 <tcgetattr@plt+0x2230>
   13fdc:	subs	r3, r0, #0
   13fe0:	add	r2, r3, #1
   13fe4:	bne	13fa0 <tcgetattr@plt+0x23b8>
   13fe8:	sub	fp, sl, r4
   13fec:	mov	r3, sl
   13ff0:	mov	r1, r4
   13ff4:	mov	r0, r6
   13ff8:	mov	r2, fp
   13ffc:	mov	r4, r3
   14000:	bl	117c8 <memmove@plt>
   14004:	add	r6, r6, fp
   14008:	cmp	r4, #0
   1400c:	bne	13f5c <tcgetattr@plt+0x2374>
   14010:	ldr	r3, [pc, #76]	; 14064 <tcgetattr@plt+0x247c>
   14014:	mov	r2, #0
   14018:	str	r8, [r7, #84]	; 0x54
   1401c:	str	r6, [r9, #160]	; 0xa0
   14020:	str	r2, [r3, #188]	; 0xbc
   14024:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14028:	mov	r0, r4
   1402c:	mov	r1, sl
   14030:	bl	13e18 <tcgetattr@plt+0x2230>
   14034:	mov	r4, r0
   14038:	b	14008 <tcgetattr@plt+0x2420>
   1403c:	sub	fp, r3, r4
   14040:	b	13ff0 <tcgetattr@plt+0x2408>
   14044:	ldr	r6, [pc, #20]	; 14060 <tcgetattr@plt+0x2478>
   14048:	ldr	r9, [pc, #12]	; 1405c <tcgetattr@plt+0x2474>
   1404c:	b	14010 <tcgetattr@plt+0x2428>
   14050:	mov	fp, r5
   14054:	b	13ff0 <tcgetattr@plt+0x2408>
   14058:	andeq	r4, r3, r0, lsr #10
   1405c:	andeq	r6, r3, r8, lsl r5
   14060:	andeq	r4, r3, r8, ror r5
   14064:	andeq	sl, r3, r8, lsl #10
   14068:	push	{lr}		; (str lr, [sp, #-4]!)
   1406c:	sub	sp, sp, #8192	; 0x2000
   14070:	sub	sp, sp, #4
   14074:	mov	r3, r1
   14078:	ldr	r2, [pc, #52]	; 140b4 <tcgetattr@plt+0x24cc>
   1407c:	mov	r1, #8192	; 0x2000
   14080:	mov	r4, r0
   14084:	mov	r0, sp
   14088:	bl	11a20 <snprintf@plt>
   1408c:	mov	r0, sp
   14090:	bl	119c0 <strlen@plt>
   14094:	mov	r1, sp
   14098:	mov	r2, r0
   1409c:	mov	r0, r4
   140a0:	bl	11a50 <write@plt>
   140a4:	mov	r0, #1
   140a8:	bl	11858 <sleep@plt>
   140ac:	mov	r0, #1
   140b0:	bl	119a8 <exit@plt>
   140b4:	andeq	r0, r2, r8, ror r2
   140b8:	push	{lr}		; (str lr, [sp, #-4]!)
   140bc:	sub	sp, sp, #8192	; 0x2000
   140c0:	sub	sp, sp, #12
   140c4:	mov	r5, r1
   140c8:	mov	r4, r0
   140cc:	bl	11a14 <__errno_location@plt>
   140d0:	ldr	r0, [r0]
   140d4:	bl	11948 <strerror@plt>
   140d8:	mov	r1, #8192	; 0x2000
   140dc:	mov	r3, r5
   140e0:	ldr	r2, [pc, #20]	; 140fc <tcgetattr@plt+0x2514>
   140e4:	str	r0, [sp]
   140e8:	add	r0, sp, #8
   140ec:	bl	11a20 <snprintf@plt>
   140f0:	add	r1, sp, #8
   140f4:	mov	r0, r4
   140f8:	bl	14068 <tcgetattr@plt+0x2480>
   140fc:	andeq	r0, r2, r8, lsl #5
   14100:	asr	r3, r0, #31
   14104:	push	{r4, r5, r6, r7, r8, r9, lr}
   14108:	lsr	r8, r3, #27
   1410c:	add	r3, r0, r8
   14110:	cmp	r0, #0
   14114:	add	r6, r0, #31
   14118:	and	r3, r3, #31
   1411c:	movge	r6, r0
   14120:	sub	r3, r3, r8
   14124:	mov	r8, #1
   14128:	sub	sp, sp, #140	; 0x8c
   1412c:	asr	r6, r6, #5
   14130:	lsl	r8, r8, r3
   14134:	ldr	r9, [pc, #140]	; 141c8 <tcgetattr@plt+0x25e0>
   14138:	add	r3, sp, #136	; 0x88
   1413c:	add	r6, r3, r6, lsl #2
   14140:	add	r7, r0, #1
   14144:	add	r5, sp, #132	; 0x84
   14148:	mov	r4, #0
   1414c:	add	r3, sp, #4
   14150:	str	r4, [r3, #4]!
   14154:	cmp	r5, r3
   14158:	bne	14150 <tcgetattr@plt+0x2568>
   1415c:	ldr	ip, [r6, #-128]	; 0xffffff80
   14160:	add	r3, sp, #8
   14164:	orr	ip, ip, r8
   14168:	str	r9, [sp]
   1416c:	mov	r2, r4
   14170:	mov	r1, #0
   14174:	mov	r0, r7
   14178:	str	ip, [r6, #-128]	; 0xffffff80
   1417c:	bl	1184c <select@plt>
   14180:	cmn	r0, #1
   14184:	bne	141a8 <tcgetattr@plt+0x25c0>
   14188:	bl	11a14 <__errno_location@plt>
   1418c:	ldr	r3, [r0]
   14190:	cmp	r3, #4
   14194:	beq	1414c <tcgetattr@plt+0x2564>
   14198:	ldr	r3, [pc, #44]	; 141cc <tcgetattr@plt+0x25e4>
   1419c:	ldr	r1, [pc, #44]	; 141d0 <tcgetattr@plt+0x25e8>
   141a0:	ldr	r0, [r3]
   141a4:	bl	140b8 <tcgetattr@plt+0x24d0>
   141a8:	cmp	r0, #0
   141ac:	blt	14198 <tcgetattr@plt+0x25b0>
   141b0:	ldr	r3, [r6, #-128]	; 0xffffff80
   141b4:	tst	r8, r3
   141b8:	movne	r0, #1
   141bc:	moveq	r0, #0
   141c0:	add	sp, sp, #140	; 0x8c
   141c4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   141c8:	ldrdeq	sl, [r3], -r0
   141cc:	ldrdeq	sl, [r3], -r0
   141d0:	muleq	r2, r0, r2
   141d4:	ldr	r3, [pc, #60]	; 14218 <tcgetattr@plt+0x2630>
   141d8:	ldr	r3, [r3]
   141dc:	cmp	r3, #0
   141e0:	beq	14210 <tcgetattr@plt+0x2628>
   141e4:	push	{lr}		; (str lr, [sp, #-4]!)
   141e8:	sub	sp, sp, #2048	; 0x800
   141ec:	sub	sp, sp, #4
   141f0:	mov	r1, r0
   141f4:	mov	r0, sp
   141f8:	bl	11b88 <tgetent@plt>
   141fc:	adds	r0, r0, #0
   14200:	movne	r0, #1
   14204:	add	sp, sp, #2048	; 0x800
   14208:	add	sp, sp, #4
   1420c:	pop	{pc}		; (ldr pc, [sp], #4)
   14210:	mov	r0, #1
   14214:	bx	lr
   14218:	andeq	sl, r3, r0, lsl #14
   1421c:	push	{r4, r5, r6, lr}
   14220:	mov	r4, r0
   14224:	mov	r5, r1
   14228:	bl	13610 <tcgetattr@plt+0x1a28>
   1422c:	cmp	r0, #0
   14230:	popne	{r4, r5, r6, pc}
   14234:	mov	r1, r5
   14238:	mov	r0, r4
   1423c:	pop	{r4, r5, r6, lr}
   14240:	b	13b98 <tcgetattr@plt+0x1fb0>
   14244:	push	{r0, r1, r2, r3}
   14248:	push	{r4, lr}
   1424c:	sub	sp, sp, #8
   14250:	bl	13610 <tcgetattr@plt+0x1a28>
   14254:	cmp	r0, #0
   14258:	beq	1426c <tcgetattr@plt+0x2684>
   1425c:	add	sp, sp, #8
   14260:	pop	{r4, lr}
   14264:	add	sp, sp, #16
   14268:	bx	lr
   1426c:	ldr	r4, [pc, #60]	; 142b0 <tcgetattr@plt+0x26c8>
   14270:	add	r3, sp, #20
   14274:	mov	r2, r3
   14278:	ldr	r0, [r4]
   1427c:	ldr	r1, [sp, #16]
   14280:	str	r3, [sp, #4]
   14284:	bl	11ad4 <vfprintf@plt>
   14288:	ldr	r0, [r4]
   1428c:	cmp	r0, #0
   14290:	beq	14298 <tcgetattr@plt+0x26b0>
   14294:	bl	11a68 <fclose@plt>
   14298:	mov	r3, #0
   1429c:	str	r3, [r4]
   142a0:	add	sp, sp, #8
   142a4:	pop	{r4, lr}
   142a8:	add	sp, sp, #16
   142ac:	bx	lr
   142b0:	andeq	r2, r3, r8, lsr #10
   142b4:	push	{r4, r5, r6, lr}
   142b8:	ldr	r5, [pc, #248]	; 143b8 <tcgetattr@plt+0x27d0>
   142bc:	ldr	r6, [pc, #248]	; 143bc <tcgetattr@plt+0x27d4>
   142c0:	ldr	r1, [r5, #84]	; 0x54
   142c4:	ldr	r4, [r6, #160]	; 0xa0
   142c8:	sub	r4, r4, r1
   142cc:	cmp	r4, #0
   142d0:	ble	14308 <tcgetattr@plt+0x2720>
   142d4:	ldr	r3, [pc, #228]	; 143c0 <tcgetattr@plt+0x27d8>
   142d8:	ldr	r2, [r3, #188]	; 0xbc
   142dc:	cmp	r2, #0
   142e0:	beq	142f4 <tcgetattr@plt+0x270c>
   142e4:	ldr	r3, [pc, #216]	; 143c4 <tcgetattr@plt+0x27dc>
   142e8:	ldr	r3, [r3]
   142ec:	cmp	r3, #0
   142f0:	bne	14364 <tcgetattr@plt+0x277c>
   142f4:	ldr	r3, [pc, #204]	; 143c8 <tcgetattr@plt+0x27e0>
   142f8:	mov	r2, r4
   142fc:	ldr	r0, [r3]
   14300:	bl	11a50 <write@plt>
   14304:	mov	r4, r0
   14308:	cmp	r4, #0
   1430c:	blt	14394 <tcgetattr@plt+0x27ac>
   14310:	ldr	r2, [pc, #168]	; 143c0 <tcgetattr@plt+0x27d8>
   14314:	ldr	r3, [r5, #84]	; 0x54
   14318:	ldr	r1, [r2, #188]	; 0xbc
   1431c:	add	r3, r3, r4
   14320:	cmp	r3, r1
   14324:	movcs	r1, #0
   14328:	strcs	r1, [r2, #188]	; 0xbc
   1432c:	ldr	r2, [r6, #160]	; 0xa0
   14330:	str	r3, [r5, #84]	; 0x54
   14334:	cmp	r3, r2
   14338:	ldreq	r3, [pc, #140]	; 143cc <tcgetattr@plt+0x27e4>
   1433c:	streq	r3, [r6, #160]	; 0xa0
   14340:	streq	r3, [r5, #84]	; 0x54
   14344:	ldr	r3, [pc, #132]	; 143d0 <tcgetattr@plt+0x27e8>
   14348:	ldr	r3, [r3, #4]
   1434c:	cmp	r3, #0
   14350:	pople	{r4, r5, r6, pc}
   14354:	mov	r1, r4
   14358:	ldr	r0, [pc, #116]	; 143d4 <tcgetattr@plt+0x27ec>
   1435c:	pop	{r4, r5, r6, lr}
   14360:	b	14244 <tcgetattr@plt+0x265c>
   14364:	ldr	r3, [pc, #92]	; 143c8 <tcgetattr@plt+0x27e0>
   14368:	sub	r2, r2, r1
   1436c:	cmp	r2, #1
   14370:	subgt	r2, r2, #1
   14374:	ldrgt	r0, [r3]
   14378:	ldrle	r0, [r3]
   1437c:	movgt	r3, #0
   14380:	movle	r3, #1
   14384:	bl	11bc4 <send@plt>
   14388:	mov	r4, r0
   1438c:	cmp	r4, #0
   14390:	bge	14310 <tcgetattr@plt+0x2728>
   14394:	bl	11a14 <__errno_location@plt>
   14398:	ldr	r0, [r0]
   1439c:	cmp	r0, #4
   143a0:	cmpne	r0, #11
   143a4:	moveq	r0, #1
   143a8:	movne	r0, #0
   143ac:	popeq	{r4, r5, r6, pc}
   143b0:	bl	12fdc <tcgetattr@plt+0x13f4>
   143b4:	b	14310 <tcgetattr@plt+0x2728>
   143b8:	andeq	r4, r3, r0, lsr #10
   143bc:	andeq	r6, r3, r8, lsl r5
   143c0:	andeq	sl, r3, r8, lsl #10
   143c4:	andeq	r2, r3, r0, lsr #9
   143c8:	andeq	sl, r3, ip, lsr #19
   143cc:	andeq	r4, r3, r8, ror r5
   143d0:	andeq	sl, r3, r0, ror #13
   143d4:	muleq	r2, r8, r2
   143d8:	push	{r0, r1, r2, r3}
   143dc:	push	{r4, r5, r6, lr}
   143e0:	sub	sp, sp, #8
   143e4:	add	r3, sp, #28
   143e8:	ldr	r0, [sp, #24]
   143ec:	str	r3, [sp, #4]
   143f0:	bl	119c0 <strlen@plt>
   143f4:	ldr	r5, [pc, #92]	; 14458 <tcgetattr@plt+0x2870>
   143f8:	ldr	r6, [pc, #92]	; 1445c <tcgetattr@plt+0x2874>
   143fc:	ldr	r3, [r5, #160]	; 0xa0
   14400:	sub	r4, r6, r3
   14404:	cmp	r4, r0
   14408:	cmpcs	r4, #2048	; 0x800
   1440c:	bcs	1441c <tcgetattr@plt+0x2834>
   14410:	bl	142b4 <tcgetattr@plt+0x26cc>
   14414:	ldr	r3, [r5, #160]	; 0xa0
   14418:	sub	r4, r6, r3
   1441c:	mov	r1, r4
   14420:	mov	r0, r3
   14424:	ldr	r2, [sp, #24]
   14428:	ldr	r3, [sp, #4]
   1442c:	bl	11b28 <vsnprintf@plt>
   14430:	ldr	r3, [r5, #160]	; 0xa0
   14434:	sub	r4, r4, #1
   14438:	cmp	r4, r0
   1443c:	addls	r4, r3, r4
   14440:	addhi	r4, r3, r0
   14444:	str	r4, [r5, #160]	; 0xa0
   14448:	add	sp, sp, #8
   1444c:	pop	{r4, r5, r6, lr}
   14450:	add	sp, sp, #16
   14454:	bx	lr
   14458:	andeq	r6, r3, r8, lsl r5
   1445c:	andeq	r6, r3, r8, ror r5
   14460:	push	{r4, r5, r6, r7, r8, lr}
   14464:	mov	r4, r1
   14468:	ldr	r5, [pc, #80]	; 144c0 <tcgetattr@plt+0x28d8>
   1446c:	ldr	r6, [pc, #80]	; 144c4 <tcgetattr@plt+0x28dc>
   14470:	mov	r7, r0
   14474:	ldr	r3, [r5, #160]	; 0xa0
   14478:	sub	r2, r6, r3
   1447c:	cmp	r2, r1
   14480:	bcc	144a4 <tcgetattr@plt+0x28bc>
   14484:	mov	r1, r7
   14488:	mov	r2, r4
   1448c:	mov	r0, r3
   14490:	bl	117c8 <memmove@plt>
   14494:	add	r3, r0, r4
   14498:	str	r3, [r5, #160]	; 0xa0
   1449c:	mov	r0, r4
   144a0:	pop	{r4, r5, r6, r7, r8, pc}
   144a4:	bl	142b4 <tcgetattr@plt+0x26cc>
   144a8:	ldr	r3, [r5, #160]	; 0xa0
   144ac:	sub	r6, r6, r3
   144b0:	cmp	r4, r6
   144b4:	bls	14484 <tcgetattr@plt+0x289c>
   144b8:	mvn	r0, #0
   144bc:	pop	{r4, r5, r6, r7, r8, pc}
   144c0:	andeq	r6, r3, r8, lsl r5
   144c4:	andeq	r6, r3, r8, ror r5
   144c8:	push	{r4, r5, r6, r7, r8, r9, lr}
   144cc:	sub	sp, sp, #140	; 0x8c
   144d0:	ldr	r5, [pc, #348]	; 14634 <tcgetattr@plt+0x2a4c>
   144d4:	ldr	r3, [r5, #4]
   144d8:	cmp	r3, #0
   144dc:	ble	144e8 <tcgetattr@plt+0x2900>
   144e0:	ldr	r0, [pc, #336]	; 14638 <tcgetattr@plt+0x2a50>
   144e4:	bl	14244 <tcgetattr@plt+0x265c>
   144e8:	ldr	r4, [pc, #332]	; 1463c <tcgetattr@plt+0x2a54>
   144ec:	ldr	r6, [pc, #332]	; 14640 <tcgetattr@plt+0x2a58>
   144f0:	ldr	r3, [r4, #160]	; 0xa0
   144f4:	ldr	r2, [r6, #84]	; 0x54
   144f8:	sub	r3, r3, r2
   144fc:	cmp	r3, #0
   14500:	ble	14508 <tcgetattr@plt+0x2920>
   14504:	bl	142b4 <tcgetattr@plt+0x26cc>
   14508:	add	r3, sp, #4
   1450c:	add	r1, sp, #132	; 0x84
   14510:	mov	r2, #0
   14514:	str	r2, [r3, #4]!
   14518:	cmp	r1, r3
   1451c:	bne	14514 <tcgetattr@plt+0x292c>
   14520:	ldr	r7, [pc, #284]	; 14644 <tcgetattr@plt+0x2a5c>
   14524:	str	r2, [sp]
   14528:	mov	r8, #1
   1452c:	ldr	r0, [r7]
   14530:	cmp	r0, #0
   14534:	add	r1, r0, #31
   14538:	movge	r1, r0
   1453c:	asr	r2, r0, #31
   14540:	asr	r1, r1, #5
   14544:	lsr	r3, r2, #27
   14548:	add	r2, sp, #136	; 0x88
   1454c:	add	r1, r2, r1, lsl #2
   14550:	add	r2, r0, r3
   14554:	and	r2, r2, #31
   14558:	ldr	ip, [r1, #-128]	; 0xffffff80
   1455c:	sub	r2, r2, r3
   14560:	mov	r3, #0
   14564:	orr	ip, ip, r8, lsl r2
   14568:	add	r0, r0, r8
   1456c:	str	ip, [r1, #-128]	; 0xffffff80
   14570:	mov	r2, r3
   14574:	add	r1, sp, #8
   14578:	bl	1184c <select@plt>
   1457c:	cmp	r0, r8
   14580:	mov	r9, r0
   14584:	bne	145f8 <tcgetattr@plt+0x2a10>
   14588:	ldr	r0, [r7]
   1458c:	mov	r2, #8192	; 0x2000
   14590:	ldr	r1, [pc, #176]	; 14648 <tcgetattr@plt+0x2a60>
   14594:	bl	117bc <read@plt>
   14598:	ldr	r7, [pc, #172]	; 1464c <tcgetattr@plt+0x2a64>
   1459c:	cmp	r0, #0
   145a0:	str	r0, [r7, #192]	; 0xc0
   145a4:	blt	14620 <tcgetattr@plt+0x2a38>
   145a8:	beq	1460c <tcgetattr@plt+0x2a24>
   145ac:	ldr	r3, [r5, #4]
   145b0:	cmp	r3, #0
   145b4:	ble	145c4 <tcgetattr@plt+0x29dc>
   145b8:	mov	r1, r0
   145bc:	ldr	r0, [pc, #140]	; 14650 <tcgetattr@plt+0x2a68>
   145c0:	bl	14244 <tcgetattr@plt+0x265c>
   145c4:	ldr	r3, [pc, #124]	; 14648 <tcgetattr@plt+0x2a60>
   145c8:	str	r3, [r4, #164]	; 0xa4
   145cc:	bl	17100 <tcgetattr@plt+0x5518>
   145d0:	ldr	r3, [r7, #192]	; 0xc0
   145d4:	cmp	r3, #0
   145d8:	ble	145f0 <tcgetattr@plt+0x2a08>
   145dc:	ldr	r2, [pc, #112]	; 14654 <tcgetattr@plt+0x2a6c>
   145e0:	add	r3, r2, #8
   145e4:	str	r3, [r2, #4]
   145e8:	str	r3, [r6, #80]	; 0x50
   145ec:	bl	17100 <tcgetattr@plt+0x5518>
   145f0:	add	sp, sp, #140	; 0x8c
   145f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   145f8:	mov	r0, #6
   145fc:	ldr	r1, [pc, #84]	; 14658 <tcgetattr@plt+0x2a70>
   14600:	bl	11aec <syslog@plt>
   14604:	mov	r0, r8
   14608:	bl	119a8 <exit@plt>
   1460c:	mov	r0, #6
   14610:	ldr	r1, [pc, #68]	; 1465c <tcgetattr@plt+0x2a74>
   14614:	bl	11aec <syslog@plt>
   14618:	mov	r0, r9
   1461c:	bl	119a8 <exit@plt>
   14620:	mov	r0, #6
   14624:	ldr	r1, [pc, #52]	; 14660 <tcgetattr@plt+0x2a78>
   14628:	bl	11aec <syslog@plt>
   1462c:	mov	r0, r9
   14630:	bl	119a8 <exit@plt>
   14634:	andeq	sl, r3, r0, ror #13
   14638:			; <UNDEFINED> instruction: 0x000202b0
   1463c:	andeq	r6, r3, r8, lsl r5
   14640:	andeq	r4, r3, r0, lsr #10
   14644:	andeq	sl, r3, ip, lsr #19
   14648:	andeq	r6, r3, r0, asr #11
   1464c:	andeq	sl, r3, r8, lsl #10
   14650:	andeq	r0, r2, r4, lsl #6
   14654:	andeq	r2, r3, r8, lsr #10
   14658:	andeq	r0, r2, r0, asr #5
   1465c:	andeq	r0, r2, ip, ror #5
   14660:	ldrdeq	r0, [r2], -r8
   14664:	push	{r4, lr}
   14668:	mov	r1, #6
   1466c:	ldr	r4, [pc, #60]	; 146b0 <tcgetattr@plt+0x2ac8>
   14670:	ldr	r0, [pc, #60]	; 146b4 <tcgetattr@plt+0x2acc>
   14674:	ldr	r3, [r4]
   14678:	add	r3, r3, #1
   1467c:	str	r3, [r4]
   14680:	str	r3, [r4, #36]	; 0x24
   14684:	bl	14460 <tcgetattr@plt+0x2878>
   14688:	ldr	r2, [r4, #16]
   1468c:	ldr	r3, [r4, #36]	; 0x24
   14690:	cmp	r2, r3
   14694:	popge	{r4, pc}
   14698:	bl	144c8 <tcgetattr@plt+0x28e0>
   1469c:	ldr	r2, [r4, #16]
   146a0:	ldr	r3, [r4, #36]	; 0x24
   146a4:	cmp	r2, r3
   146a8:	blt	14698 <tcgetattr@plt+0x2ab0>
   146ac:	pop	{r4, pc}
   146b0:			; <UNDEFINED> instruction: 0x0003a9b4
   146b4:	andeq	r2, r3, r0, lsl r3
   146b8:	push	{r4, r5, r6, r7, r8, lr}
   146bc:	mov	r1, #1
   146c0:	ldr	r5, [pc, #820]	; 149fc <tcgetattr@plt+0x2e14>
   146c4:	mov	r0, #24
   146c8:	ldr	r4, [pc, #816]	; 14a00 <tcgetattr@plt+0x2e18>
   146cc:	ldr	r3, [r5]
   146d0:	add	r3, r3, r1
   146d4:	str	r3, [r5]
   146d8:	str	r3, [r5, #36]	; 0x24
   146dc:	bl	15d08 <tcgetattr@plt+0x4120>
   146e0:	mov	r1, #1
   146e4:	mov	r0, #32
   146e8:	bl	15d08 <tcgetattr@plt+0x4120>
   146ec:	mov	r1, #1
   146f0:	mov	r0, #35	; 0x23
   146f4:	bl	15d08 <tcgetattr@plt+0x4120>
   146f8:	mov	r1, #1
   146fc:	mov	r0, #39	; 0x27
   14700:	bl	15d08 <tcgetattr@plt+0x4120>
   14704:	mov	r1, #1
   14708:	mov	r0, #36	; 0x24
   1470c:	bl	15d08 <tcgetattr@plt+0x4120>
   14710:	b	14718 <tcgetattr@plt+0x2b30>
   14714:	bl	144c8 <tcgetattr@plt+0x28e0>
   14718:	ldrb	r3, [r4, #24]
   1471c:	add	r3, r3, #4
   14720:	tst	r3, #8
   14724:	bne	14714 <tcgetattr@plt+0x2b2c>
   14728:	ldrb	r3, [r4, #32]
   1472c:	add	r2, r3, #4
   14730:	tst	r2, #8
   14734:	bne	14714 <tcgetattr@plt+0x2b2c>
   14738:	ldrb	r2, [r4, #35]	; 0x23
   1473c:	add	r1, r2, #4
   14740:	tst	r1, #8
   14744:	bne	14714 <tcgetattr@plt+0x2b2c>
   14748:	ldrb	r1, [r4, #39]	; 0x27
   1474c:	add	r1, r1, #4
   14750:	tst	r1, #8
   14754:	bne	14714 <tcgetattr@plt+0x2b2c>
   14758:	ldrb	r1, [r4, #36]	; 0x24
   1475c:	add	r1, r1, #4
   14760:	tst	r1, #8
   14764:	bne	14714 <tcgetattr@plt+0x2b2c>
   14768:	tst	r3, #4
   1476c:	bne	148e8 <tcgetattr@plt+0x2d00>
   14770:	tst	r2, #4
   14774:	bne	148d8 <tcgetattr@plt+0x2cf0>
   14778:	ldrb	r3, [r4, #39]	; 0x27
   1477c:	tst	r3, #4
   14780:	bne	148c8 <tcgetattr@plt+0x2ce0>
   14784:	ldrb	r3, [r4, #36]	; 0x24
   14788:	tst	r3, #4
   1478c:	bne	148fc <tcgetattr@plt+0x2d14>
   14790:	ldrb	r3, [r4, #24]
   14794:	tst	r3, #4
   14798:	bne	148b8 <tcgetattr@plt+0x2cd0>
   1479c:	ldrb	r3, [r4, #32]
   147a0:	tst	r3, #4
   147a4:	beq	147cc <tcgetattr@plt+0x2be4>
   147a8:	ldr	r2, [r5, #20]
   147ac:	ldr	r3, [r5, #36]	; 0x24
   147b0:	cmp	r2, r3
   147b4:	bge	147cc <tcgetattr@plt+0x2be4>
   147b8:	bl	144c8 <tcgetattr@plt+0x28e0>
   147bc:	ldr	r2, [r5, #20]
   147c0:	ldr	r3, [r5, #36]	; 0x24
   147c4:	cmp	r2, r3
   147c8:	blt	147b8 <tcgetattr@plt+0x2bd0>
   147cc:	ldrb	r3, [r4, #35]	; 0x23
   147d0:	tst	r3, #4
   147d4:	beq	147fc <tcgetattr@plt+0x2c14>
   147d8:	ldr	r2, [r5, #32]
   147dc:	ldr	r3, [r5, #36]	; 0x24
   147e0:	cmp	r2, r3
   147e4:	bge	147fc <tcgetattr@plt+0x2c14>
   147e8:	bl	144c8 <tcgetattr@plt+0x28e0>
   147ec:	ldr	r2, [r5, #32]
   147f0:	ldr	r3, [r5, #36]	; 0x24
   147f4:	cmp	r2, r3
   147f8:	blt	147e8 <tcgetattr@plt+0x2c00>
   147fc:	ldrb	r3, [r4, #39]	; 0x27
   14800:	tst	r3, #4
   14804:	beq	1482c <tcgetattr@plt+0x2c44>
   14808:	ldr	r2, [r5, #24]
   1480c:	ldr	r3, [r5, #36]	; 0x24
   14810:	cmp	r2, r3
   14814:	bge	1482c <tcgetattr@plt+0x2c44>
   14818:	bl	144c8 <tcgetattr@plt+0x28e0>
   1481c:	ldr	r2, [r5, #24]
   14820:	ldr	r3, [r5, #36]	; 0x24
   14824:	cmp	r2, r3
   14828:	blt	14818 <tcgetattr@plt+0x2c30>
   1482c:	ldrb	r3, [r4, #36]	; 0x24
   14830:	tst	r3, #4
   14834:	beq	1485c <tcgetattr@plt+0x2c74>
   14838:	ldr	r2, [r5, #28]
   1483c:	ldr	r3, [r5, #36]	; 0x24
   14840:	cmp	r2, r3
   14844:	bge	1485c <tcgetattr@plt+0x2c74>
   14848:	bl	144c8 <tcgetattr@plt+0x28e0>
   1484c:	ldr	r2, [r5, #28]
   14850:	ldr	r3, [r5, #36]	; 0x24
   14854:	cmp	r2, r3
   14858:	blt	14848 <tcgetattr@plt+0x2c60>
   1485c:	ldrb	r3, [r4, #24]
   14860:	tst	r3, #4
   14864:	beq	148b0 <tcgetattr@plt+0x2cc8>
   14868:	ldr	r2, [r5, #16]
   1486c:	ldr	r3, [r5, #36]	; 0x24
   14870:	cmp	r2, r3
   14874:	bge	1490c <tcgetattr@plt+0x2d24>
   14878:	bl	144c8 <tcgetattr@plt+0x28e0>
   1487c:	ldr	r2, [r5, #16]
   14880:	ldr	r3, [r5, #36]	; 0x24
   14884:	cmp	r2, r3
   14888:	blt	14878 <tcgetattr@plt+0x2c90>
   1488c:	ldrb	r3, [r4, #24]
   14890:	tst	r3, #4
   14894:	bne	1490c <tcgetattr@plt+0x2d24>
   14898:	mov	r5, #0
   1489c:	mov	r7, r5
   148a0:	mov	r0, r7
   148a4:	bl	1a1f4 <argp_parse@@Base+0xe98>
   148a8:	mov	r0, r5
   148ac:	bl	1a1f4 <argp_parse@@Base+0xe98>
   148b0:	mvn	r0, #0
   148b4:	pop	{r4, r5, r6, r7, r8, pc}
   148b8:	mov	r1, #6
   148bc:	ldr	r0, [pc, #320]	; 14a04 <tcgetattr@plt+0x2e1c>
   148c0:	bl	14460 <tcgetattr@plt+0x2878>
   148c4:	b	1479c <tcgetattr@plt+0x2bb4>
   148c8:	mov	r1, #6
   148cc:	ldr	r0, [pc, #308]	; 14a08 <tcgetattr@plt+0x2e20>
   148d0:	bl	14460 <tcgetattr@plt+0x2878>
   148d4:	b	14790 <tcgetattr@plt+0x2ba8>
   148d8:	mov	r1, #6
   148dc:	ldr	r0, [pc, #296]	; 14a0c <tcgetattr@plt+0x2e24>
   148e0:	bl	14460 <tcgetattr@plt+0x2878>
   148e4:	b	14778 <tcgetattr@plt+0x2b90>
   148e8:	mov	r1, #6
   148ec:	ldr	r0, [pc, #284]	; 14a10 <tcgetattr@plt+0x2e28>
   148f0:	bl	14460 <tcgetattr@plt+0x2878>
   148f4:	ldrb	r2, [r4, #35]	; 0x23
   148f8:	b	14770 <tcgetattr@plt+0x2b88>
   148fc:	mov	r1, #6
   14900:	ldr	r0, [pc, #268]	; 14a14 <tcgetattr@plt+0x2e2c>
   14904:	bl	14460 <tcgetattr@plt+0x2878>
   14908:	b	14790 <tcgetattr@plt+0x2ba8>
   1490c:	ldr	r6, [pc, #260]	; 14a18 <tcgetattr@plt+0x2e30>
   14910:	ldr	r0, [r6]
   14914:	bl	141d4 <tcgetattr@plt+0x25ec>
   14918:	subs	r5, r0, #0
   1491c:	bne	14898 <tcgetattr@plt+0x2cb0>
   14920:	bl	1a1f4 <argp_parse@@Base+0xe98>
   14924:	ldr	r0, [r6]
   14928:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   1492c:	mov	r7, r0
   14930:	b	14968 <tcgetattr@plt+0x2d80>
   14934:	ldr	r0, [r6]
   14938:	bl	141d4 <tcgetattr@plt+0x25ec>
   1493c:	cmp	r0, #0
   14940:	mov	r0, r5
   14944:	bne	148a0 <tcgetattr@plt+0x2cb8>
   14948:	ldr	r8, [r6]
   1494c:	mov	r1, r8
   14950:	bl	1178c <strcmp@plt>
   14954:	cmp	r0, #0
   14958:	beq	14990 <tcgetattr@plt+0x2da8>
   1495c:	ldrb	r3, [r4, #24]
   14960:	tst	r3, #4
   14964:	beq	149e4 <tcgetattr@plt+0x2dfc>
   14968:	mov	r0, r5
   1496c:	bl	1a1f4 <argp_parse@@Base+0xe98>
   14970:	ldr	r0, [r6]
   14974:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   14978:	ldrb	r3, [r4, #24]
   1497c:	tst	r3, #4
   14980:	mov	r5, r0
   14984:	beq	14934 <tcgetattr@plt+0x2d4c>
   14988:	bl	14664 <tcgetattr@plt+0x2a7c>
   1498c:	b	14934 <tcgetattr@plt+0x2d4c>
   14990:	mov	r1, r8
   14994:	mov	r0, r7
   14998:	bl	1178c <strcmp@plt>
   1499c:	cmp	r0, #0
   149a0:	beq	148a0 <tcgetattr@plt+0x2cb8>
   149a4:	ldrb	r3, [r4, #24]
   149a8:	tst	r3, #4
   149ac:	beq	149cc <tcgetattr@plt+0x2de4>
   149b0:	bl	14664 <tcgetattr@plt+0x2a7c>
   149b4:	ldr	r8, [r6]
   149b8:	mov	r0, r7
   149bc:	mov	r1, r8
   149c0:	bl	1178c <strcmp@plt>
   149c4:	cmp	r0, #0
   149c8:	beq	148a0 <tcgetattr@plt+0x2cb8>
   149cc:	mov	r0, r8
   149d0:	bl	1a1f4 <argp_parse@@Base+0xe98>
   149d4:	mov	r0, r7
   149d8:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   149dc:	str	r0, [r6]
   149e0:	b	148a0 <tcgetattr@plt+0x2cb8>
   149e4:	mov	r1, r8
   149e8:	mov	r0, r7
   149ec:	bl	1178c <strcmp@plt>
   149f0:	cmp	r0, #0
   149f4:	beq	148a0 <tcgetattr@plt+0x2cb8>
   149f8:	b	149cc <tcgetattr@plt+0x2de4>
   149fc:			; <UNDEFINED> instruction: 0x0003a9b4
   14a00:	andeq	sl, r3, r4, lsl #14
   14a04:	andeq	r2, r3, r0, lsl r3
   14a08:	andeq	r2, r3, r8, lsr #6
   14a0c:	andeq	r2, r3, r0, lsr #6
   14a10:	andeq	r2, r3, r8, lsl r3
   14a14:	andeq	r2, r3, r0, lsr r3
   14a18:	andeq	sl, r3, r0, lsl #14
   14a1c:	cmp	r1, #39	; 0x27
   14a20:	mov	r2, r1
   14a24:	bls	14a58 <tcgetattr@plt+0x2e70>
   14a28:	sub	r3, r1, #236	; 0xec
   14a2c:	cmp	r3, #19
   14a30:	bls	14a40 <tcgetattr@plt+0x2e58>
   14a34:	mov	r1, r0
   14a38:	ldr	r0, [pc, #48]	; 14a70 <tcgetattr@plt+0x2e88>
   14a3c:	b	14244 <tcgetattr@plt+0x265c>
   14a40:	ldr	r2, [pc, #44]	; 14a74 <tcgetattr@plt+0x2e8c>
   14a44:	mov	r1, r0
   14a48:	add	r3, r2, r3, lsl #2
   14a4c:	ldr	r0, [pc, #36]	; 14a78 <tcgetattr@plt+0x2e90>
   14a50:	ldr	r2, [r3, #204]	; 0xcc
   14a54:	b	14244 <tcgetattr@plt+0x265c>
   14a58:	ldr	r3, [pc, #20]	; 14a74 <tcgetattr@plt+0x2e8c>
   14a5c:	mov	r1, r0
   14a60:	add	r2, r3, r2, lsl #2
   14a64:	ldr	r0, [pc, #12]	; 14a78 <tcgetattr@plt+0x2e90>
   14a68:	ldr	r2, [r2, #40]	; 0x28
   14a6c:	b	14244 <tcgetattr@plt+0x265c>
   14a70:	andeq	r0, r2, r8, lsr #6
   14a74:	andeq	r2, r3, r0, lsl r3
   14a78:	andeq	r0, r2, r0, lsr #6
   14a7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14a80:	mov	r4, r1
   14a84:	ldrb	r3, [r1]
   14a88:	sub	sp, sp, #60	; 0x3c
   14a8c:	mov	r6, r0
   14a90:	cmp	r3, #37	; 0x25
   14a94:	mov	r5, r2
   14a98:	beq	14ba8 <tcgetattr@plt+0x2fc0>
   14a9c:	cmp	r3, #38	; 0x26
   14aa0:	beq	14b90 <tcgetattr@plt+0x2fa8>
   14aa4:	cmp	r6, #0
   14aa8:	beq	14ae8 <tcgetattr@plt+0x2f00>
   14aac:	ldr	r3, [pc, #2788]	; 15598 <tcgetattr@plt+0x39b0>
   14ab0:	cmp	r6, #60	; 0x3c
   14ab4:	ldr	r1, [pc, #2784]	; 1559c <tcgetattr@plt+0x39b4>
   14ab8:	ldr	r0, [pc, #2784]	; 155a0 <tcgetattr@plt+0x39b8>
   14abc:	moveq	r1, r3
   14ac0:	bl	14244 <tcgetattr@plt+0x265c>
   14ac4:	cmp	r5, #2
   14ac8:	ble	14ae4 <tcgetattr@plt+0x2efc>
   14acc:	add	r3, r4, r5
   14ad0:	ldrb	r8, [r3, #-2]
   14ad4:	ldrb	r7, [r3, #-1]
   14ad8:	cmp	r7, #240	; 0xf0
   14adc:	cmpeq	r8, #255	; 0xff
   14ae0:	bne	14e74 <tcgetattr@plt+0x328c>
   14ae4:	sub	r5, r5, #2
   14ae8:	cmp	r5, #0
   14aec:	ble	14f1c <tcgetattr@plt+0x3334>
   14af0:	ldrb	r1, [r4]
   14af4:	sub	r3, r1, #5
   14af8:	cmp	r3, #34	; 0x22
   14afc:	ldrls	pc, [pc, r3, lsl #2]
   14b00:	b	14ee0 <tcgetattr@plt+0x32f8>
   14b04:	andeq	r4, r1, ip, lsr #24
   14b08:	andeq	r4, r1, r0, ror #29
   14b0c:	andeq	r4, r1, r0, ror #29
   14b10:	andeq	r4, r1, r0, ror #29
   14b14:	andeq	r4, r1, r0, ror #29
   14b18:	andeq	r4, r1, r0, ror #29
   14b1c:	andeq	r4, r1, r0, ror #29
   14b20:	andeq	r4, r1, r0, ror #29
   14b24:	andeq	r4, r1, r0, ror #29
   14b28:	andeq	r4, r1, r0, ror #29
   14b2c:	andeq	r4, r1, r0, ror #29
   14b30:	andeq	r4, r1, r0, ror #29
   14b34:	andeq	r4, r1, r0, ror #29
   14b38:	andeq	r4, r1, r0, ror #29
   14b3c:	andeq	r4, r1, r0, ror #29
   14b40:	andeq	r4, r1, r0, ror #29
   14b44:	andeq	r4, r1, r0, ror #29
   14b48:	andeq	r4, r1, r0, ror #29
   14b4c:	andeq	r4, r1, r0, ror #29
   14b50:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b54:	andeq	r4, r1, r0, ror #29
   14b58:	andeq	r4, r1, r0, ror #29
   14b5c:	andeq	r4, r1, r0, ror #29
   14b60:	andeq	r4, r1, r0, ror #29
   14b64:	andeq	r4, r1, r0, ror #29
   14b68:	andeq	r4, r1, r0, ror #29
   14b6c:	andeq	r4, r1, r8, ror sp
   14b70:	andeq	r4, r1, ip, lsl lr
   14b74:	andeq	r4, r1, ip, ror ip
   14b78:	andeq	r4, r1, ip, lsr #25
   14b7c:	andeq	r4, r1, r0, lsr sp
   14b80:	andeq	r4, r1, ip, ror #26
   14b84:	andeq	r4, r1, r0, ror #29
   14b88:	andeq	r4, r1, r0, ror #29
   14b8c:	andeq	r4, r1, r4, asr #23
   14b90:	ldr	r3, [pc, #2572]	; 155a4 <tcgetattr@plt+0x39bc>
   14b94:	ldr	r3, [r3, #20]
   14b98:	cmp	r3, #0
   14b9c:	bgt	14aa4 <tcgetattr@plt+0x2ebc>
   14ba0:	add	sp, sp, #60	; 0x3c
   14ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ba8:	ldr	r3, [pc, #2548]	; 155a4 <tcgetattr@plt+0x39bc>
   14bac:	ldr	r3, [r3, #16]
   14bb0:	cmp	r3, #0
   14bb4:	ble	14ba0 <tcgetattr@plt+0x2fb8>
   14bb8:	cmp	r6, #0
   14bbc:	beq	14ae8 <tcgetattr@plt+0x2f00>
   14bc0:	b	14aac <tcgetattr@plt+0x2ec4>
   14bc4:	ldr	r0, [pc, #2524]	; 155a8 <tcgetattr@plt+0x39c0>
   14bc8:	bl	14244 <tcgetattr@plt+0x265c>
   14bcc:	ldrb	r3, [r4, #1]
   14bd0:	cmp	r3, #1
   14bd4:	beq	151c0 <tcgetattr@plt+0x35d8>
   14bd8:	bcc	151b4 <tcgetattr@plt+0x35cc>
   14bdc:	cmp	r3, #2
   14be0:	bne	14d54 <tcgetattr@plt+0x316c>
   14be4:	ldr	r0, [pc, #2496]	; 155ac <tcgetattr@plt+0x39c4>
   14be8:	bl	14244 <tcgetattr@plt+0x265c>
   14bec:	cmp	r5, #2
   14bf0:	ble	14d54 <tcgetattr@plt+0x316c>
   14bf4:	ldr	fp, [pc, #2484]	; 155b0 <tcgetattr@plt+0x39c8>
   14bf8:	ldr	r8, [pc, #2484]	; 155b4 <tcgetattr@plt+0x39cc>
   14bfc:	add	r5, r4, r5
   14c00:	add	sl, r4, #2
   14c04:	mov	r4, fp
   14c08:	mov	r9, sl
   14c0c:	ldrb	r7, [sl], #1
   14c10:	cmp	r7, #3
   14c14:	ldrls	pc, [pc, r7, lsl #2]
   14c18:	b	15148 <tcgetattr@plt+0x3560>
   14c1c:			; <UNDEFINED> instruction: 0x00014fb0
   14c20:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   14c24:	andeq	r4, r1, r8, lsl #31
   14c28:	andeq	r4, r1, r0, asr pc
   14c2c:	ldr	r0, [pc, #2436]	; 155b8 <tcgetattr@plt+0x39d0>
   14c30:	bl	14244 <tcgetattr@plt+0x265c>
   14c34:	ldrb	r1, [r4, #1]
   14c38:	cmp	r1, #0
   14c3c:	beq	15240 <tcgetattr@plt+0x3658>
   14c40:	cmp	r1, #1
   14c44:	beq	15120 <tcgetattr@plt+0x3538>
   14c48:	ldr	r0, [pc, #2412]	; 155bc <tcgetattr@plt+0x39d4>
   14c4c:	bl	14244 <tcgetattr@plt+0x265c>
   14c50:	cmp	r5, #2
   14c54:	ble	14d54 <tcgetattr@plt+0x316c>
   14c58:	ldr	r7, [pc, #2400]	; 155c0 <tcgetattr@plt+0x39d8>
   14c5c:	add	r5, r4, r5
   14c60:	add	r4, r4, #2
   14c64:	ldrb	r1, [r4], #1
   14c68:	mov	r0, r7
   14c6c:	bl	14244 <tcgetattr@plt+0x265c>
   14c70:	cmp	r5, r4
   14c74:	bne	14c64 <tcgetattr@plt+0x307c>
   14c78:	b	14d54 <tcgetattr@plt+0x316c>
   14c7c:	ldr	r0, [pc, #2368]	; 155c4 <tcgetattr@plt+0x39dc>
   14c80:	bl	14244 <tcgetattr@plt+0x265c>
   14c84:	cmp	r5, #1
   14c88:	beq	151a8 <tcgetattr@plt+0x35c0>
   14c8c:	ldrb	r1, [r4, #1]
   14c90:	cmp	r1, #3
   14c94:	ldrls	pc, [pc, r1, lsl #2]
   14c98:	b	1541c <tcgetattr@plt+0x3834>
   14c9c:	andeq	r5, r1, r4, lsl r1
   14ca0:	andeq	r5, r1, r8, lsl #2
   14ca4:	strdeq	r5, [r1], -ip
   14ca8:	andeq	r5, r1, r8, asr #1
   14cac:	ldr	r0, [pc, #2324]	; 155c8 <tcgetattr@plt+0x39e0>
   14cb0:	bl	14244 <tcgetattr@plt+0x265c>
   14cb4:	cmp	r5, #1
   14cb8:	beq	151a8 <tcgetattr@plt+0x35c0>
   14cbc:	ldrb	r1, [r4, #1]
   14cc0:	cmp	r1, #251	; 0xfb
   14cc4:	beq	15574 <tcgetattr@plt+0x398c>
   14cc8:	bls	14fc4 <tcgetattr@plt+0x33dc>
   14ccc:	cmp	r1, #253	; 0xfd
   14cd0:	beq	154a4 <tcgetattr@plt+0x38bc>
   14cd4:	bcc	15498 <tcgetattr@plt+0x38b0>
   14cd8:	cmp	r1, #254	; 0xfe
   14cdc:	bne	15464 <tcgetattr@plt+0x387c>
   14ce0:	ldr	r0, [pc, #2276]	; 155cc <tcgetattr@plt+0x39e4>
   14ce4:	bl	14244 <tcgetattr@plt+0x265c>
   14ce8:	cmp	r5, #2
   14cec:	beq	15428 <tcgetattr@plt+0x3840>
   14cf0:	ldrb	r1, [r4, #2]
   14cf4:	cmp	r1, #2
   14cf8:	bne	153e8 <tcgetattr@plt+0x3800>
   14cfc:	ldr	r0, [pc, #2252]	; 155d0 <tcgetattr@plt+0x39e8>
   14d00:	bl	14244 <tcgetattr@plt+0x265c>
   14d04:	cmp	r5, #3
   14d08:	beq	14d54 <tcgetattr@plt+0x316c>
   14d0c:	ldr	r7, [pc, #2240]	; 155d4 <tcgetattr@plt+0x39ec>
   14d10:	add	r5, r4, r5
   14d14:	add	r4, r4, #3
   14d18:	ldrb	r1, [r4], #1
   14d1c:	mov	r0, r7
   14d20:	bl	14244 <tcgetattr@plt+0x265c>
   14d24:	cmp	r5, r4
   14d28:	bne	14d18 <tcgetattr@plt+0x3130>
   14d2c:	b	14d54 <tcgetattr@plt+0x316c>
   14d30:	ldr	r0, [pc, #2208]	; 155d8 <tcgetattr@plt+0x39f0>
   14d34:	bl	14244 <tcgetattr@plt+0x265c>
   14d38:	ldrb	r2, [r4, #1]
   14d3c:	cmp	r2, #0
   14d40:	beq	14e08 <tcgetattr@plt+0x3220>
   14d44:	cmp	r2, #1
   14d48:	bne	14f28 <tcgetattr@plt+0x3340>
   14d4c:	ldr	r0, [pc, #2184]	; 155dc <tcgetattr@plt+0x39f4>
   14d50:	bl	14244 <tcgetattr@plt+0x265c>
   14d54:	cmp	r6, #0
   14d58:	beq	14ba0 <tcgetattr@plt+0x2fb8>
   14d5c:	ldr	r0, [pc, #2172]	; 155e0 <tcgetattr@plt+0x39f8>
   14d60:	bl	14244 <tcgetattr@plt+0x265c>
   14d64:	add	sp, sp, #60	; 0x3c
   14d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14d6c:	ldr	r0, [pc, #2160]	; 155e4 <tcgetattr@plt+0x39fc>
   14d70:	bl	14244 <tcgetattr@plt+0x265c>
   14d74:	b	14bcc <tcgetattr@plt+0x2fe4>
   14d78:	ldr	r0, [pc, #2152]	; 155e8 <tcgetattr@plt+0x3a00>
   14d7c:	bl	14244 <tcgetattr@plt+0x265c>
   14d80:	cmp	r5, #1
   14d84:	beq	151a8 <tcgetattr@plt+0x35c0>
   14d88:	cmp	r5, #2
   14d8c:	beq	153c0 <tcgetattr@plt+0x37d8>
   14d90:	ldrb	r3, [r4, #1]
   14d94:	ldrb	r2, [r4, #2]
   14d98:	ldr	r0, [pc, #2124]	; 155ec <tcgetattr@plt+0x3a04>
   14d9c:	mov	r1, r3
   14da0:	orr	r3, r2, r3, lsl #8
   14da4:	bl	14244 <tcgetattr@plt+0x265c>
   14da8:	cmp	r5, #4
   14dac:	beq	1512c <tcgetattr@plt+0x3544>
   14db0:	ldrb	r3, [r4, #3]
   14db4:	ldrb	r2, [r4, #4]
   14db8:	ldr	r0, [pc, #2092]	; 155ec <tcgetattr@plt+0x3a04>
   14dbc:	mov	r1, r3
   14dc0:	orr	r3, r2, r3, lsl #8
   14dc4:	bl	14244 <tcgetattr@plt+0x265c>
   14dc8:	cmp	r5, #5
   14dcc:	ble	14d54 <tcgetattr@plt+0x316c>
   14dd0:	ldr	r7, [pc, #2024]	; 155c0 <tcgetattr@plt+0x39d8>
   14dd4:	add	r5, r4, r5
   14dd8:	add	r4, r4, #5
   14ddc:	ldrb	r1, [r4], #1
   14de0:	mov	r0, r7
   14de4:	bl	14244 <tcgetattr@plt+0x265c>
   14de8:	cmp	r5, r4
   14dec:	bne	14ddc <tcgetattr@plt+0x31f4>
   14df0:	b	14d54 <tcgetattr@plt+0x316c>
   14df4:	ldr	r0, [pc, #2036]	; 155f0 <tcgetattr@plt+0x3a08>
   14df8:	bl	14244 <tcgetattr@plt+0x265c>
   14dfc:	ldrb	r2, [r4, #1]
   14e00:	cmp	r2, #0
   14e04:	bne	14d44 <tcgetattr@plt+0x315c>
   14e08:	add	r2, r4, #2
   14e0c:	sub	r1, r5, #2
   14e10:	ldr	r0, [pc, #2012]	; 155f4 <tcgetattr@plt+0x3a0c>
   14e14:	bl	14244 <tcgetattr@plt+0x265c>
   14e18:	b	14d54 <tcgetattr@plt+0x316c>
   14e1c:	ldr	r0, [pc, #2004]	; 155f8 <tcgetattr@plt+0x3a10>
   14e20:	bl	14244 <tcgetattr@plt+0x265c>
   14e24:	cmp	r5, #1
   14e28:	beq	151a8 <tcgetattr@plt+0x35c0>
   14e2c:	ldrb	r1, [r4, #1]
   14e30:	cmp	r1, #0
   14e34:	beq	15394 <tcgetattr@plt+0x37ac>
   14e38:	cmp	r1, #1
   14e3c:	beq	1513c <tcgetattr@plt+0x3554>
   14e40:	ldr	r0, [pc, #1908]	; 155bc <tcgetattr@plt+0x39d4>
   14e44:	bl	14244 <tcgetattr@plt+0x265c>
   14e48:	cmp	r5, #2
   14e4c:	beq	14d54 <tcgetattr@plt+0x316c>
   14e50:	ldr	r7, [pc, #1896]	; 155c0 <tcgetattr@plt+0x39d8>
   14e54:	add	r5, r4, r5
   14e58:	add	r4, r4, #2
   14e5c:	ldrb	r1, [r4], #1
   14e60:	mov	r0, r7
   14e64:	bl	14244 <tcgetattr@plt+0x265c>
   14e68:	cmp	r5, r4
   14e6c:	bne	14e5c <tcgetattr@plt+0x3274>
   14e70:	b	14d54 <tcgetattr@plt+0x316c>
   14e74:	ldr	r0, [pc, #1920]	; 155fc <tcgetattr@plt+0x3a14>
   14e78:	bl	14244 <tcgetattr@plt+0x265c>
   14e7c:	cmp	r8, #39	; 0x27
   14e80:	bls	150b0 <tcgetattr@plt+0x34c8>
   14e84:	sub	r3, r8, #236	; 0xec
   14e88:	cmp	r3, #19
   14e8c:	movhi	r1, r8
   14e90:	ldrls	r2, [pc, #1896]	; 15600 <tcgetattr@plt+0x3a18>
   14e94:	ldrls	r0, [pc, #1896]	; 15604 <tcgetattr@plt+0x3a1c>
   14e98:	addls	r3, r2, r3, lsl #2
   14e9c:	ldrhi	r0, [pc, #1892]	; 15608 <tcgetattr@plt+0x3a20>
   14ea0:	ldrls	r1, [r3, #204]	; 0xcc
   14ea4:	bl	14244 <tcgetattr@plt+0x265c>
   14ea8:	cmp	r7, #39	; 0x27
   14eac:	bls	153d0 <tcgetattr@plt+0x37e8>
   14eb0:	sub	r3, r7, #236	; 0xec
   14eb4:	cmp	r3, #19
   14eb8:	movhi	r1, r7
   14ebc:	ldrls	r2, [pc, #1852]	; 15600 <tcgetattr@plt+0x3a18>
   14ec0:	ldrls	r0, [pc, #1860]	; 1560c <tcgetattr@plt+0x3a24>
   14ec4:	addls	r3, r2, r3, lsl #2
   14ec8:	ldrhi	r0, [pc, #1856]	; 15610 <tcgetattr@plt+0x3a28>
   14ecc:	ldrls	r1, [r3, #204]	; 0xcc
   14ed0:	bl	14244 <tcgetattr@plt+0x265c>
   14ed4:	ldr	r0, [pc, #1848]	; 15614 <tcgetattr@plt+0x3a2c>
   14ed8:	bl	14244 <tcgetattr@plt+0x265c>
   14edc:	b	14ae4 <tcgetattr@plt+0x2efc>
   14ee0:	cmp	r1, #39	; 0x27
   14ee4:	bls	14f38 <tcgetattr@plt+0x3350>
   14ee8:	ldr	r0, [pc, #1832]	; 15618 <tcgetattr@plt+0x3a30>
   14eec:	bl	14244 <tcgetattr@plt+0x265c>
   14ef0:	cmp	r5, #1
   14ef4:	beq	14d54 <tcgetattr@plt+0x316c>
   14ef8:	ldr	r7, [pc, #1820]	; 1561c <tcgetattr@plt+0x3a34>
   14efc:	add	r5, r4, r5
   14f00:	add	r4, r4, #1
   14f04:	ldrb	r1, [r4], #1
   14f08:	mov	r0, r7
   14f0c:	bl	14244 <tcgetattr@plt+0x265c>
   14f10:	cmp	r4, r5
   14f14:	bne	14f04 <tcgetattr@plt+0x331c>
   14f18:	b	14d54 <tcgetattr@plt+0x316c>
   14f1c:	ldr	r0, [pc, #1788]	; 15620 <tcgetattr@plt+0x3a38>
   14f20:	bl	14244 <tcgetattr@plt+0x265c>
   14f24:	b	14ba0 <tcgetattr@plt+0x2fb8>
   14f28:	mov	r1, r2
   14f2c:	ldr	r0, [pc, #1776]	; 15624 <tcgetattr@plt+0x3a3c>
   14f30:	bl	14244 <tcgetattr@plt+0x265c>
   14f34:	b	14d54 <tcgetattr@plt+0x316c>
   14f38:	ldr	r3, [pc, #1728]	; 15600 <tcgetattr@plt+0x3a18>
   14f3c:	ldr	r0, [pc, #1764]	; 15628 <tcgetattr@plt+0x3a40>
   14f40:	add	r1, r3, r1, lsl #2
   14f44:	ldr	r1, [r1, #40]	; 0x28
   14f48:	bl	14244 <tcgetattr@plt+0x265c>
   14f4c:	b	14ef0 <tcgetattr@plt+0x3308>
   14f50:	mov	r1, fp
   14f54:	mov	r0, r8
   14f58:	bl	14244 <tcgetattr@plt+0x265c>
   14f5c:	mov	fp, r4
   14f60:	cmp	r5, sl
   14f64:	bne	14c08 <tcgetattr@plt+0x3020>
   14f68:	mov	r0, fp
   14f6c:	ldr	r1, [pc, #1720]	; 1562c <tcgetattr@plt+0x3a44>
   14f70:	bl	1178c <strcmp@plt>
   14f74:	cmp	r0, #0
   14f78:	bne	14d54 <tcgetattr@plt+0x316c>
   14f7c:	ldr	r0, [pc, #1708]	; 15630 <tcgetattr@plt+0x3a48>
   14f80:	bl	14244 <tcgetattr@plt+0x265c>
   14f84:	b	14d54 <tcgetattr@plt+0x316c>
   14f88:	mov	r1, fp
   14f8c:	ldr	r0, [pc, #1696]	; 15634 <tcgetattr@plt+0x3a4c>
   14f90:	bl	14244 <tcgetattr@plt+0x265c>
   14f94:	mov	fp, r4
   14f98:	b	14f60 <tcgetattr@plt+0x3378>
   14f9c:	mov	r1, fp
   14fa0:	ldr	r0, [pc, #1680]	; 15638 <tcgetattr@plt+0x3a50>
   14fa4:	bl	14244 <tcgetattr@plt+0x265c>
   14fa8:	mov	fp, r4
   14fac:	b	14f60 <tcgetattr@plt+0x3378>
   14fb0:	mov	r1, fp
   14fb4:	ldr	r0, [pc, #1664]	; 1563c <tcgetattr@plt+0x3a54>
   14fb8:	bl	14244 <tcgetattr@plt+0x265c>
   14fbc:	mov	fp, r4
   14fc0:	b	14f60 <tcgetattr@plt+0x3378>
   14fc4:	cmp	r1, #1
   14fc8:	beq	154b0 <tcgetattr@plt+0x38c8>
   14fcc:	cmp	r1, #3
   14fd0:	bne	15464 <tcgetattr@plt+0x387c>
   14fd4:	ldr	r0, [pc, #1636]	; 15640 <tcgetattr@plt+0x3a58>
   14fd8:	sub	sl, r5, #2
   14fdc:	bl	14244 <tcgetattr@plt+0x265c>
   14fe0:	cmp	sl, #2
   14fe4:	ble	15434 <tcgetattr@plt+0x384c>
   14fe8:	ldr	r9, [pc, #1472]	; 155b0 <tcgetattr@plt+0x39c8>
   14fec:	mov	r7, #2
   14ff0:	b	1501c <tcgetattr@plt+0x3434>
   14ff4:	add	fp, r7, #2
   14ff8:	ldr	r0, [pc, #1604]	; 15644 <tcgetattr@plt+0x3a5c>
   14ffc:	ldrb	r1, [r4, fp]
   15000:	bl	14244 <tcgetattr@plt+0x265c>
   15004:	ldrb	r3, [r4, fp]
   15008:	cmp	r3, #255	; 0xff
   1500c:	beq	151dc <tcgetattr@plt+0x35f4>
   15010:	add	r7, r7, #3
   15014:	cmp	r7, sl
   15018:	bge	15438 <tcgetattr@plt+0x3850>
   1501c:	ldrb	r1, [r4, r7]
   15020:	add	r8, r7, #1
   15024:	cmp	r1, #18
   15028:	ldrls	r3, [pc, #1488]	; 15600 <tcgetattr@plt+0x3a18>
   1502c:	ldrls	r0, [pc, #1556]	; 15648 <tcgetattr@plt+0x3a60>
   15030:	addls	r1, r3, r1, lsl #2
   15034:	ldrhi	r0, [pc, #1504]	; 1561c <tcgetattr@plt+0x3a34>
   15038:	ldrls	r1, [r1, #288]	; 0x120
   1503c:	bl	14244 <tcgetattr@plt+0x265c>
   15040:	ldrb	r3, [r4, r8]
   15044:	and	r3, r3, #3
   15048:	cmp	r3, #2
   1504c:	beq	153b4 <tcgetattr@plt+0x37cc>
   15050:	cmp	r3, #3
   15054:	beq	153a8 <tcgetattr@plt+0x37c0>
   15058:	cmp	r3, #1
   1505c:	ldrne	r0, [pc, #1512]	; 1564c <tcgetattr@plt+0x3a64>
   15060:	ldreq	r0, [pc, #1512]	; 15650 <tcgetattr@plt+0x3a68>
   15064:	bl	14244 <tcgetattr@plt+0x265c>
   15068:	ldrb	r0, [r4, r8]
   1506c:	ldr	r1, [pc, #1504]	; 15654 <tcgetattr@plt+0x3a6c>
   15070:	ldr	r2, [pc, #1504]	; 15658 <tcgetattr@plt+0x3a70>
   15074:	tst	r0, #128	; 0x80
   15078:	moveq	r1, r9
   1507c:	tst	r0, #64	; 0x40
   15080:	moveq	r2, r9
   15084:	tst	r0, #32
   15088:	ldr	r3, [pc, #1484]	; 1565c <tcgetattr@plt+0x3a74>
   1508c:	ldr	r0, [pc, #1484]	; 15660 <tcgetattr@plt+0x3a78>
   15090:	moveq	r3, r9
   15094:	bl	14244 <tcgetattr@plt+0x265c>
   15098:	ldrb	r1, [r4, r8]
   1509c:	tst	r1, #28
   150a0:	beq	14ff4 <tcgetattr@plt+0x340c>
   150a4:	ldr	r0, [pc, #1464]	; 15664 <tcgetattr@plt+0x3a7c>
   150a8:	bl	14244 <tcgetattr@plt+0x265c>
   150ac:	b	14ff4 <tcgetattr@plt+0x340c>
   150b0:	ldr	r3, [pc, #1352]	; 15600 <tcgetattr@plt+0x3a18>
   150b4:	ldr	r0, [pc, #1352]	; 15604 <tcgetattr@plt+0x3a1c>
   150b8:	add	r8, r3, r8, lsl #2
   150bc:	ldr	r1, [r8, #40]	; 0x28
   150c0:	bl	14244 <tcgetattr@plt+0x265c>
   150c4:	b	14ea8 <tcgetattr@plt+0x32c0>
   150c8:	ldr	r0, [pc, #1432]	; 15668 <tcgetattr@plt+0x3a80>
   150cc:	bl	14244 <tcgetattr@plt+0x265c>
   150d0:	cmp	r5, #2
   150d4:	beq	14d54 <tcgetattr@plt+0x316c>
   150d8:	ldr	r7, [pc, #1248]	; 155c0 <tcgetattr@plt+0x39d8>
   150dc:	add	r5, r4, r5
   150e0:	add	r4, r4, #2
   150e4:	ldrb	r1, [r4], #1
   150e8:	mov	r0, r7
   150ec:	bl	14244 <tcgetattr@plt+0x265c>
   150f0:	cmp	r5, r4
   150f4:	bne	150e4 <tcgetattr@plt+0x34fc>
   150f8:	b	14d54 <tcgetattr@plt+0x316c>
   150fc:	ldr	r0, [pc, #1384]	; 1566c <tcgetattr@plt+0x3a84>
   15100:	bl	14244 <tcgetattr@plt+0x265c>
   15104:	b	150d0 <tcgetattr@plt+0x34e8>
   15108:	ldr	r0, [pc, #1376]	; 15670 <tcgetattr@plt+0x3a88>
   1510c:	bl	14244 <tcgetattr@plt+0x265c>
   15110:	b	150d0 <tcgetattr@plt+0x34e8>
   15114:	ldr	r0, [pc, #1368]	; 15674 <tcgetattr@plt+0x3a8c>
   15118:	bl	14244 <tcgetattr@plt+0x265c>
   1511c:	b	150d0 <tcgetattr@plt+0x34e8>
   15120:	ldr	r0, [pc, #1360]	; 15678 <tcgetattr@plt+0x3a90>
   15124:	bl	14244 <tcgetattr@plt+0x265c>
   15128:	b	14c50 <tcgetattr@plt+0x3068>
   1512c:	ldrb	r1, [r4, #3]
   15130:	ldr	r0, [pc, #1160]	; 155c0 <tcgetattr@plt+0x39d8>
   15134:	bl	14244 <tcgetattr@plt+0x265c>
   15138:	b	14d54 <tcgetattr@plt+0x316c>
   1513c:	ldr	r0, [pc, #1332]	; 15678 <tcgetattr@plt+0x3a90>
   15140:	bl	14244 <tcgetattr@plt+0x265c>
   15144:	b	14e48 <tcgetattr@plt+0x3260>
   15148:	bl	11990 <__ctype_b_loc@plt>
   1514c:	lsl	r3, r7, #1
   15150:	subs	r2, r7, #34	; 0x22
   15154:	movne	r2, #1
   15158:	ldr	r1, [r0]
   1515c:	ldrh	r3, [r1, r3]
   15160:	ands	r3, r2, r3, lsr #14
   15164:	beq	15190 <tcgetattr@plt+0x35a8>
   15168:	ldrb	r3, [fp]
   1516c:	cmp	r3, #0
   15170:	beq	151cc <tcgetattr@plt+0x35e4>
   15174:	bl	13610 <tcgetattr@plt+0x1a28>
   15178:	cmp	r0, #0
   1517c:	bne	14f60 <tcgetattr@plt+0x3378>
   15180:	mov	r0, r9
   15184:	mov	r1, #1
   15188:	bl	13b98 <tcgetattr@plt+0x1fb0>
   1518c:	b	14f60 <tcgetattr@plt+0x3378>
   15190:	mov	r1, fp
   15194:	mov	r2, r7
   15198:	ldr	r0, [pc, #1244]	; 1567c <tcgetattr@plt+0x3a94>
   1519c:	bl	14244 <tcgetattr@plt+0x265c>
   151a0:	mov	fp, r4
   151a4:	b	14f60 <tcgetattr@plt+0x3378>
   151a8:	ldr	r0, [pc, #1232]	; 15680 <tcgetattr@plt+0x3a98>
   151ac:	bl	14244 <tcgetattr@plt+0x265c>
   151b0:	b	14d54 <tcgetattr@plt+0x316c>
   151b4:	ldr	r0, [pc, #1224]	; 15684 <tcgetattr@plt+0x3a9c>
   151b8:	bl	14244 <tcgetattr@plt+0x265c>
   151bc:	b	14bec <tcgetattr@plt+0x3004>
   151c0:	ldr	r0, [pc, #1216]	; 15688 <tcgetattr@plt+0x3aa0>
   151c4:	bl	14244 <tcgetattr@plt+0x265c>
   151c8:	b	14bec <tcgetattr@plt+0x3004>
   151cc:	ldr	r0, [pc, #1116]	; 15630 <tcgetattr@plt+0x3a48>
   151d0:	bl	14244 <tcgetattr@plt+0x265c>
   151d4:	ldr	fp, [pc, #1104]	; 1562c <tcgetattr@plt+0x3a44>
   151d8:	b	15174 <tcgetattr@plt+0x358c>
   151dc:	add	r3, r4, r7
   151e0:	ldrb	r3, [r3, #3]
   151e4:	sub	r3, r3, #255	; 0xff
   151e8:	clz	r3, r3
   151ec:	lsr	r3, r3, #5
   151f0:	cmp	r6, #60	; 0x3c
   151f4:	moveq	r2, #0
   151f8:	andne	r2, r3, #1
   151fc:	cmp	r2, #0
   15200:	beq	15228 <tcgetattr@plt+0x3640>
   15204:	add	r3, r4, r8
   15208:	mov	r7, r8
   1520c:	ldrb	r2, [r3, #2]
   15210:	cmp	r2, #255	; 0xff
   15214:	bne	15010 <tcgetattr@plt+0x3428>
   15218:	ldrb	r3, [r3, #3]
   1521c:	sub	r3, r3, #255	; 0xff
   15220:	clz	r3, r3
   15224:	lsr	r3, r3, #5
   15228:	cmp	r6, #0
   1522c:	movne	r3, #0
   15230:	andeq	r3, r3, #1
   15234:	cmp	r3, #0
   15238:	addne	r7, r7, #2
   1523c:	b	15010 <tcgetattr@plt+0x3428>
   15240:	ldr	r0, [pc, #1092]	; 1568c <tcgetattr@plt+0x3aa4>
   15244:	bl	14244 <tcgetattr@plt+0x265c>
   15248:	cmp	r5, #2
   1524c:	ble	14d54 <tcgetattr@plt+0x316c>
   15250:	ldr	r9, [pc, #1080]	; 15690 <tcgetattr@plt+0x3aa8>
   15254:	ldr	r8, [pc, #932]	; 15600 <tcgetattr@plt+0x3a18>
   15258:	mov	r7, #2
   1525c:	ldrb	r1, [r4, r7]
   15260:	add	fp, r4, r7
   15264:	sub	r3, r1, #250	; 0xfa
   15268:	cmp	r3, #4
   1526c:	ldrls	pc, [pc, r3, lsl #2]
   15270:	b	1533c <tcgetattr@plt+0x3754>
   15274:	ldrdeq	r5, [r1], -r0
   15278:	andeq	r5, r1, r8, asr #5
   1527c:	andeq	r5, r1, r0, asr #5
   15280:			; <UNDEFINED> instruction: 0x000152b8
   15284:	andeq	r5, r1, r8, lsl #5
   15288:	ldr	r1, [pc, #1028]	; 15694 <tcgetattr@plt+0x3aac>
   1528c:	ldrb	r2, [fp, #1]
   15290:	add	r7, r7, #2
   15294:	cmp	r2, #39	; 0x27
   15298:	addls	r2, r8, r2, lsl #2
   1529c:	ldrls	r0, [pc, #1012]	; 15698 <tcgetattr@plt+0x3ab0>
   152a0:	ldrls	r2, [r2, #40]	; 0x28
   152a4:	movhi	r0, r9
   152a8:	bl	14244 <tcgetattr@plt+0x265c>
   152ac:	cmp	r5, r7
   152b0:	bgt	1525c <tcgetattr@plt+0x3674>
   152b4:	b	14d54 <tcgetattr@plt+0x316c>
   152b8:	ldr	r1, [pc, #988]	; 1569c <tcgetattr@plt+0x3ab4>
   152bc:	b	1528c <tcgetattr@plt+0x36a4>
   152c0:	ldr	r1, [pc, #984]	; 156a0 <tcgetattr@plt+0x3ab8>
   152c4:	b	1528c <tcgetattr@plt+0x36a4>
   152c8:	ldr	r1, [pc, #980]	; 156a4 <tcgetattr@plt+0x3abc>
   152cc:	b	1528c <tcgetattr@plt+0x36a4>
   152d0:	add	sl, r7, #1
   152d4:	ldr	r0, [pc, #972]	; 156a8 <tcgetattr@plt+0x3ac0>
   152d8:	bl	14244 <tcgetattr@plt+0x265c>
   152dc:	cmp	r5, sl
   152e0:	ble	15374 <tcgetattr@plt+0x378c>
   152e4:	mov	r0, fp
   152e8:	mov	r2, sl
   152ec:	mov	r3, sl
   152f0:	b	15308 <tcgetattr@plt+0x3720>
   152f4:	add	r3, r7, #1
   152f8:	cmp	r5, r3
   152fc:	add	r2, r2, #1
   15300:	strb	r1, [r0, #1]!
   15304:	ble	1538c <tcgetattr@plt+0x37a4>
   15308:	ldrb	r1, [r4, r3]
   1530c:	mov	r7, r3
   15310:	cmp	r1, #240	; 0xf0
   15314:	bne	152f4 <tcgetattr@plt+0x370c>
   15318:	add	r7, r3, #1
   1531c:	cmp	r5, r7
   15320:	add	r1, r4, r3
   15324:	beq	1534c <tcgetattr@plt+0x3764>
   15328:	ldrb	r3, [r1, #1]
   1532c:	cmp	r3, #240	; 0xf0
   15330:	bne	15350 <tcgetattr@plt+0x3768>
   15334:	ldrb	r1, [r4, r7]
   15338:	b	152f4 <tcgetattr@plt+0x370c>
   1533c:	ldr	r0, [pc, #728]	; 1561c <tcgetattr@plt+0x3a34>
   15340:	bl	14244 <tcgetattr@plt+0x265c>
   15344:	add	r7, r7, #1
   15348:	b	152ac <tcgetattr@plt+0x36c4>
   1534c:	mov	r7, r5
   15350:	mov	r0, #0
   15354:	sub	r2, r2, sl
   15358:	add	r1, r4, sl
   1535c:	bl	14a7c <tcgetattr@plt+0x2e94>
   15360:	ldr	r0, [pc, #836]	; 156ac <tcgetattr@plt+0x3ac4>
   15364:	bl	14244 <tcgetattr@plt+0x265c>
   15368:	ldr	r0, [pc, #624]	; 155e0 <tcgetattr@plt+0x39f8>
   1536c:	bl	14244 <tcgetattr@plt+0x265c>
   15370:	b	152ac <tcgetattr@plt+0x36c4>
   15374:	mov	r2, #0
   15378:	mov	r0, r2
   1537c:	add	r1, r4, sl
   15380:	bl	14a7c <tcgetattr@plt+0x2e94>
   15384:	mov	r7, sl
   15388:	b	15368 <tcgetattr@plt+0x3780>
   1538c:	add	r7, r7, #2
   15390:	b	15350 <tcgetattr@plt+0x3768>
   15394:	add	r2, r4, #2
   15398:	sub	r1, r5, #2
   1539c:	ldr	r0, [pc, #780]	; 156b0 <tcgetattr@plt+0x3ac8>
   153a0:	bl	14244 <tcgetattr@plt+0x265c>
   153a4:	b	14d54 <tcgetattr@plt+0x316c>
   153a8:	ldr	r0, [pc, #772]	; 156b4 <tcgetattr@plt+0x3acc>
   153ac:	bl	14244 <tcgetattr@plt+0x265c>
   153b0:	b	15068 <tcgetattr@plt+0x3480>
   153b4:	ldr	r0, [pc, #764]	; 156b8 <tcgetattr@plt+0x3ad0>
   153b8:	bl	14244 <tcgetattr@plt+0x265c>
   153bc:	b	15068 <tcgetattr@plt+0x3480>
   153c0:	ldrb	r1, [r4, #1]
   153c4:	ldr	r0, [pc, #500]	; 155c0 <tcgetattr@plt+0x39d8>
   153c8:	bl	14244 <tcgetattr@plt+0x265c>
   153cc:	b	14d54 <tcgetattr@plt+0x316c>
   153d0:	ldr	r3, [pc, #552]	; 15600 <tcgetattr@plt+0x3a18>
   153d4:	ldr	r0, [pc, #560]	; 1560c <tcgetattr@plt+0x3a24>
   153d8:	add	r7, r3, r7, lsl #2
   153dc:	ldr	r1, [r7, #40]	; 0x28
   153e0:	bl	14244 <tcgetattr@plt+0x265c>
   153e4:	b	14ed4 <tcgetattr@plt+0x32ec>
   153e8:	ldr	r0, [pc, #552]	; 15618 <tcgetattr@plt+0x3a30>
   153ec:	bl	14244 <tcgetattr@plt+0x265c>
   153f0:	cmp	r5, #3
   153f4:	beq	14d54 <tcgetattr@plt+0x316c>
   153f8:	ldr	r7, [pc, #540]	; 1561c <tcgetattr@plt+0x3a34>
   153fc:	add	r5, r4, r5
   15400:	add	r4, r4, #3
   15404:	ldrb	r1, [r4], #1
   15408:	mov	r0, r7
   1540c:	bl	14244 <tcgetattr@plt+0x265c>
   15410:	cmp	r5, r4
   15414:	bne	15404 <tcgetattr@plt+0x381c>
   15418:	b	14d54 <tcgetattr@plt+0x316c>
   1541c:	ldr	r0, [pc, #408]	; 155bc <tcgetattr@plt+0x39d4>
   15420:	bl	14244 <tcgetattr@plt+0x265c>
   15424:	b	150d0 <tcgetattr@plt+0x34e8>
   15428:	ldr	r0, [pc, #652]	; 156bc <tcgetattr@plt+0x3ad4>
   1542c:	bl	14244 <tcgetattr@plt+0x265c>
   15430:	b	14d54 <tcgetattr@plt+0x316c>
   15434:	mov	r7, #2
   15438:	cmp	r5, r7
   1543c:	ble	14d54 <tcgetattr@plt+0x316c>
   15440:	ldr	r8, [pc, #376]	; 155c0 <tcgetattr@plt+0x39d8>
   15444:	add	r7, r4, r7
   15448:	add	r4, r4, r5
   1544c:	ldrb	r1, [r7], #1
   15450:	mov	r0, r8
   15454:	bl	14244 <tcgetattr@plt+0x265c>
   15458:	cmp	r7, r4
   1545c:	bne	1544c <tcgetattr@plt+0x3864>
   15460:	b	14d54 <tcgetattr@plt+0x316c>
   15464:	ldr	r0, [pc, #428]	; 15618 <tcgetattr@plt+0x3a30>
   15468:	bl	14244 <tcgetattr@plt+0x265c>
   1546c:	cmp	r5, #2
   15470:	beq	14d54 <tcgetattr@plt+0x316c>
   15474:	ldr	r7, [pc, #416]	; 1561c <tcgetattr@plt+0x3a34>
   15478:	add	r5, r4, r5
   1547c:	add	r4, r4, #2
   15480:	ldrb	r1, [r4], #1
   15484:	mov	r0, r7
   15488:	bl	14244 <tcgetattr@plt+0x265c>
   1548c:	cmp	r5, r4
   15490:	bne	15480 <tcgetattr@plt+0x3898>
   15494:	b	14d54 <tcgetattr@plt+0x316c>
   15498:	ldr	r0, [pc, #544]	; 156c0 <tcgetattr@plt+0x3ad8>
   1549c:	bl	14244 <tcgetattr@plt+0x265c>
   154a0:	b	14ce8 <tcgetattr@plt+0x3100>
   154a4:	ldr	r0, [pc, #536]	; 156c4 <tcgetattr@plt+0x3adc>
   154a8:	bl	14244 <tcgetattr@plt+0x265c>
   154ac:	b	14ce8 <tcgetattr@plt+0x3100>
   154b0:	ldr	r0, [pc, #528]	; 156c8 <tcgetattr@plt+0x3ae0>
   154b4:	bl	14244 <tcgetattr@plt+0x265c>
   154b8:	cmp	r5, #2
   154bc:	beq	15580 <tcgetattr@plt+0x3998>
   154c0:	ldrb	r1, [r4, #2]
   154c4:	ldr	r2, [pc, #228]	; 155b0 <tcgetattr@plt+0x39c8>
   154c8:	ldr	r3, [pc, #508]	; 156cc <tcgetattr@plt+0x3ae4>
   154cc:	tst	r1, #1
   154d0:	moveq	r3, r2
   154d4:	tst	r1, #2
   154d8:	ldr	lr, [pc, #496]	; 156d0 <tcgetattr@plt+0x3ae8>
   154dc:	moveq	lr, r2
   154e0:	tst	r1, #8
   154e4:	ldr	ip, [pc, #488]	; 156d4 <tcgetattr@plt+0x3aec>
   154e8:	moveq	ip, r2
   154ec:	tst	r1, #16
   154f0:	ldr	r0, [pc, #480]	; 156d8 <tcgetattr@plt+0x3af0>
   154f4:	moveq	r0, r2
   154f8:	tst	r1, #4
   154fc:	ldr	r1, [pc, #336]	; 15654 <tcgetattr@plt+0x3a6c>
   15500:	str	lr, [sp]
   15504:	movne	r2, r1
   15508:	str	ip, [sp, #4]
   1550c:	mov	r1, #36	; 0x24
   15510:	str	r0, [sp, #8]
   15514:	str	r2, [sp, #12]
   15518:	add	r0, sp, #20
   1551c:	ldr	r2, [pc, #440]	; 156dc <tcgetattr@plt+0x3af4>
   15520:	bl	11a20 <snprintf@plt>
   15524:	ldrb	r3, [sp, #20]
   15528:	ldr	r0, [pc, #220]	; 1560c <tcgetattr@plt+0x3a24>
   1552c:	cmp	r3, #0
   15530:	addne	r1, sp, #21
   15534:	ldreq	r1, [pc, #420]	; 156e0 <tcgetattr@plt+0x3af8>
   15538:	bl	14244 <tcgetattr@plt+0x265c>
   1553c:	ldrb	r1, [r4, #2]
   15540:	tst	r1, #248	; 0xf8
   15544:	bne	1558c <tcgetattr@plt+0x39a4>
   15548:	cmp	r5, #3
   1554c:	beq	14d54 <tcgetattr@plt+0x316c>
   15550:	ldr	r7, [pc, #396]	; 156e4 <tcgetattr@plt+0x3afc>
   15554:	add	r5, r4, r5
   15558:	add	r4, r4, #3
   1555c:	ldrb	r1, [r4], #1
   15560:	mov	r0, r7
   15564:	bl	14244 <tcgetattr@plt+0x265c>
   15568:	cmp	r5, r4
   1556c:	bne	1555c <tcgetattr@plt+0x3974>
   15570:	b	14d54 <tcgetattr@plt+0x316c>
   15574:	ldr	r0, [pc, #364]	; 156e8 <tcgetattr@plt+0x3b00>
   15578:	bl	14244 <tcgetattr@plt+0x265c>
   1557c:	b	14ce8 <tcgetattr@plt+0x3100>
   15580:	ldr	r0, [pc, #356]	; 156ec <tcgetattr@plt+0x3b04>
   15584:	bl	14244 <tcgetattr@plt+0x265c>
   15588:	b	14d54 <tcgetattr@plt+0x316c>
   1558c:	ldr	r0, [pc, #348]	; 156f0 <tcgetattr@plt+0x3b08>
   15590:	bl	14244 <tcgetattr@plt+0x265c>
   15594:	b	15548 <tcgetattr@plt+0x3960>
   15598:	andeq	r0, r2, r0, lsr r3
   1559c:	andeq	r0, r2, r8, lsr r3
   155a0:			; <UNDEFINED> instruction: 0x000203b0
   155a4:	andeq	sl, r3, r0, ror #13
   155a8:	andeq	r0, r2, r8, lsl #12
   155ac:	andeq	r0, r2, r0, lsr r6
   155b0:	andeq	r0, r2, r8, ror #11
   155b4:	andeq	r0, r2, r4, asr r6
   155b8:	andeq	r0, r2, r4, asr #11
   155bc:	andeq	r0, r2, r8, lsl #9
   155c0:	muleq	r2, r8, r4
   155c4:	andeq	r0, r2, r0, lsr #9
   155c8:	strdeq	r0, [r2], -r4
   155cc:	andeq	r0, r2, r4, lsl r5
   155d0:	andeq	r0, r2, ip, lsr #10
   155d4:	andeq	r0, r2, ip, lsr r5
   155d8:	strdeq	r0, [r2], -r4
   155dc:	andeq	r0, r2, r4, lsr #8
   155e0:	andeq	pc, r1, r4, lsl #29
   155e4:	andeq	r0, r2, r8, lsl r6
   155e8:	andeq	r0, r2, r0, ror #9
   155ec:	andeq	r0, r2, r8, ror #9
   155f0:	andeq	r0, r2, r8, lsl #8
   155f4:	andeq	r0, r2, r8, lsl r4
   155f8:	andeq	r0, r2, ip, asr #8
   155fc:	andeq	r0, r2, r4, asr #7
   15600:	andeq	r2, r3, r0, lsl r3
   15604:	ldrdeq	r0, [r2], -r4
   15608:	ldrdeq	r0, [r2], -r8
   1560c:	strdeq	pc, [r1], -ip
   15610:	ldrdeq	r0, [r2], -ip
   15614:	andeq	r0, r2, r0, ror #7
   15618:	andeq	r0, r2, r0, asr #10
   1561c:	andeq	r0, r2, r0, asr r5
   15620:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   15624:	andeq	r0, r2, ip, lsr #8
   15628:	andeq	r0, r2, r8, ror #12
   1562c:	andeq	r0, r2, ip, lsr #7
   15630:	andeq	r0, r2, r0, lsr #8
   15634:	andeq	r0, r2, ip, asr #12
   15638:	andeq	r0, r2, r0, asr #12
   1563c:	andeq	r0, r2, r8, lsr r6
   15640:	andeq	r0, r2, r4, asr r5
   15644:	muleq	r2, r0, r5
   15648:	andeq	r0, r2, r4, ror #22
   1564c:	andeq	r0, r2, r8, asr r5
   15650:	andeq	r0, r2, r4, ror #10
   15654:	andeq	r0, r2, r0, asr #6
   15658:	andeq	r0, r2, r8, asr #6
   1565c:	andeq	r0, r2, r4, asr r3
   15660:	andeq	r0, r2, ip, lsr #11
   15664:	andeq	r0, r2, r8, lsl #11
   15668:	ldrdeq	r0, [r2], -r0	; <UNPREDICTABLE>
   1566c:	andeq	r0, r2, r0, asr #9
   15670:			; <UNDEFINED> instruction: 0x000204bc
   15674:			; <UNDEFINED> instruction: 0x000204b4
   15678:	andeq	r0, r2, r0, lsl #9
   1567c:	andeq	r0, r2, r0, ror #12
   15680:	andeq	r0, r2, ip, asr r4
   15684:	andeq	r0, r2, r4, lsr #12
   15688:	andeq	r0, r2, r8, lsr #12
   1568c:	andeq	r0, r2, ip, asr #11
   15690:	andeq	r0, r2, r0, ror #11
   15694:	muleq	r2, r4, r3
   15698:	ldrdeq	r0, [r2], -r4
   1569c:	muleq	r2, r0, r3
   156a0:	andeq	r0, r2, r4, lsr #7
   156a4:	muleq	r2, ip, r3
   156a8:	andeq	r0, r2, ip, ror #11
   156ac:	andeq	r0, r2, r8, ror r6
   156b0:	andeq	r0, r2, r4, ror r4
   156b4:	andeq	r0, r2, ip, ror r5
   156b8:	andeq	r0, r2, r0, ror r5
   156bc:	andeq	r0, r2, ip, lsl r5
   156c0:	andeq	r0, r2, r8, lsl #10
   156c4:	andeq	r0, r2, r0, lsl r5
   156c8:	strdeq	r0, [r2], -r8
   156cc:	andeq	r0, r2, r0, ror #6
   156d0:	andeq	r0, r2, r8, ror #6
   156d4:	andeq	r0, r2, r4, ror r3
   156d8:	andeq	r0, r2, r0, lsl #7
   156dc:	andeq	r0, r2, r8, lsr #11
   156e0:	andeq	r0, r2, ip, lsl #7
   156e4:			; <UNDEFINED> instruction: 0x000205bc
   156e8:	andeq	r0, r2, r0, lsl #10
   156ec:	muleq	r2, r8, r5
   156f0:			; <UNDEFINED> instruction: 0x000205b4
   156f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156f8:	sub	sp, sp, #44	; 0x2c
   156fc:	subs	r5, r2, #0
   15700:	str	r0, [sp, #4]
   15704:	beq	157cc <tcgetattr@plt+0x3be4>
   15708:	ldr	r0, [pc, #196]	; 157d4 <tcgetattr@plt+0x3bec>
   1570c:	mov	fp, r1
   15710:	ldr	r1, [sp, #4]
   15714:	bl	14244 <tcgetattr@plt+0x265c>
   15718:	bl	11990 <__ctype_b_loc@plt>
   1571c:	ldr	r7, [pc, #180]	; 157d8 <tcgetattr@plt+0x3bf0>
   15720:	ldr	r9, [pc, #180]	; 157dc <tcgetattr@plt+0x3bf4>
   15724:	mov	r8, r0
   15728:	mov	sl, fp
   1572c:	add	r6, sp, #7
   15730:	mov	r4, #0
   15734:	b	15758 <tcgetattr@plt+0x3b70>
   15738:	subs	r5, r5, #1
   1573c:	movne	ip, #1
   15740:	moveq	ip, #0
   15744:	cmp	r4, #19
   15748:	movgt	ip, #0
   1574c:	andle	ip, ip, #1
   15750:	cmp	ip, #0
   15754:	beq	1579c <tcgetattr@plt+0x3bb4>
   15758:	ldrb	r1, [sl]
   1575c:	mov	r0, r7
   15760:	bl	14244 <tcgetattr@plt+0x265c>
   15764:	ldrb	r1, [sl], #1
   15768:	ldr	ip, [r8]
   1576c:	mov	fp, sl
   15770:	lsl	r0, r1, #1
   15774:	ldrh	r0, [ip, r0]
   15778:	tst	r0, #16384	; 0x4000
   1577c:	moveq	r1, #46	; 0x2e
   15780:	tst	r4, #1
   15784:	strb	r1, [r6, #1]!
   15788:	add	r4, r4, #1
   1578c:	beq	15738 <tcgetattr@plt+0x3b50>
   15790:	mov	r0, r9
   15794:	bl	14244 <tcgetattr@plt+0x265c>
   15798:	b	15738 <tcgetattr@plt+0x3b50>
   1579c:	add	r3, sp, #40	; 0x28
   157a0:	add	r4, r3, r4
   157a4:	add	r1, sp, #8
   157a8:	ldr	r0, [pc, #48]	; 157e0 <tcgetattr@plt+0x3bf8>
   157ac:	strb	ip, [r4, #-32]	; 0xffffffe0
   157b0:	bl	14244 <tcgetattr@plt+0x265c>
   157b4:	cmp	r5, #0
   157b8:	beq	157cc <tcgetattr@plt+0x3be4>
   157bc:	ldr	r1, [sp, #4]
   157c0:	ldr	r0, [pc, #12]	; 157d4 <tcgetattr@plt+0x3bec>
   157c4:	bl	14244 <tcgetattr@plt+0x265c>
   157c8:	b	15728 <tcgetattr@plt+0x3b40>
   157cc:	add	sp, sp, #44	; 0x2c
   157d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   157d4:	andeq	r0, r2, ip, ror r6
   157d8:	andeq	r0, r2, r4, lsl #13
   157dc:	andeq	r0, r2, ip, lsr #12
   157e0:	andeq	r0, r2, ip, lsl #13
   157e4:	push	{r4, r5, r6, r7, r8, lr}
   157e8:	mov	r2, #8192	; 0x2000
   157ec:	ldr	r3, [pc, #176]	; 158a4 <tcgetattr@plt+0x3cbc>
   157f0:	ldr	r5, [pc, #176]	; 158a8 <tcgetattr@plt+0x3cc0>
   157f4:	ldr	r6, [pc, #176]	; 158ac <tcgetattr@plt+0x3cc4>
   157f8:	add	r7, r5, #168	; 0xa8
   157fc:	mov	r1, r7
   15800:	ldr	r0, [r3]
   15804:	bl	117bc <read@plt>
   15808:	subs	r4, r0, #0
   1580c:	str	r0, [r6, #192]	; 0xc0
   15810:	blt	15868 <tcgetattr@plt+0x3c80>
   15814:	beq	15884 <tcgetattr@plt+0x3c9c>
   15818:	ble	15860 <tcgetattr@plt+0x3c78>
   1581c:	ldr	r8, [pc, #140]	; 158b0 <tcgetattr@plt+0x3cc8>
   15820:	str	r7, [r5, #164]	; 0xa4
   15824:	ldr	r3, [r8, #4]
   15828:	cmp	r3, #0
   1582c:	ble	15840 <tcgetattr@plt+0x3c58>
   15830:	mov	r1, r4
   15834:	ldr	r0, [pc, #120]	; 158b4 <tcgetattr@plt+0x3ccc>
   15838:	bl	14244 <tcgetattr@plt+0x265c>
   1583c:	ldr	r4, [r6, #192]	; 0xc0
   15840:	ldr	r3, [r8, #8]
   15844:	cmp	r3, #0
   15848:	ble	15860 <tcgetattr@plt+0x3c78>
   1584c:	mov	r2, r4
   15850:	ldr	r1, [r5, #164]	; 0xa4
   15854:	ldr	r0, [pc, #92]	; 158b8 <tcgetattr@plt+0x3cd0>
   15858:	bl	156f4 <tcgetattr@plt+0x3b0c>
   1585c:	ldr	r4, [r6, #192]	; 0xc0
   15860:	mov	r0, r4
   15864:	pop	{r4, r5, r6, r7, r8, pc}
   15868:	bl	11a14 <__errno_location@plt>
   1586c:	ldr	r3, [r0]
   15870:	cmp	r3, #11
   15874:	moveq	r4, #0
   15878:	streq	r4, [r6, #192]	; 0xc0
   1587c:	mov	r0, r4
   15880:	pop	{r4, r5, r6, r7, r8, pc}
   15884:	ldr	r1, [pc, #48]	; 158bc <tcgetattr@plt+0x3cd4>
   15888:	mov	r0, #6
   1588c:	bl	11aec <syslog@plt>
   15890:	mov	r0, r4
   15894:	bl	12fdc <tcgetattr@plt+0x13f4>
   15898:	ldr	r4, [r6, #192]	; 0xc0
   1589c:	mov	r0, r4
   158a0:	pop	{r4, r5, r6, r7, r8, pc}
   158a4:	andeq	sl, r3, ip, lsr #19
   158a8:	andeq	r6, r3, r8, lsl r5
   158ac:	andeq	sl, r3, r8, lsl #10
   158b0:	andeq	sl, r3, r0, ror #13
   158b4:	andeq	r0, r2, r8, lsr #13
   158b8:	andeq	r0, r2, r0, asr #13
   158bc:	muleq	r2, r4, r6
   158c0:	push	{r4, r5, r6, r7, r8, lr}
   158c4:	ldr	r6, [pc, #180]	; 15980 <tcgetattr@plt+0x3d98>
   158c8:	ldr	r7, [pc, #180]	; 15984 <tcgetattr@plt+0x3d9c>
   158cc:	ldr	r1, [r6, #4]
   158d0:	ldr	r4, [r7, #80]	; 0x50
   158d4:	sub	r4, r4, r1
   158d8:	cmp	r4, #0
   158dc:	ble	15930 <tcgetattr@plt+0x3d48>
   158e0:	ldr	r5, [pc, #160]	; 15988 <tcgetattr@plt+0x3da0>
   158e4:	ldr	r3, [r5, #4]
   158e8:	cmp	r3, #0
   158ec:	ble	15900 <tcgetattr@plt+0x3d18>
   158f0:	mov	r1, r4
   158f4:	ldr	r0, [pc, #144]	; 1598c <tcgetattr@plt+0x3da4>
   158f8:	bl	14244 <tcgetattr@plt+0x265c>
   158fc:	ldr	r1, [r6, #4]
   15900:	ldr	r3, [r5, #12]
   15904:	cmp	r3, #0
   15908:	ble	1591c <tcgetattr@plt+0x3d34>
   1590c:	mov	r2, r4
   15910:	ldr	r0, [pc, #120]	; 15990 <tcgetattr@plt+0x3da8>
   15914:	bl	156f4 <tcgetattr@plt+0x3b0c>
   15918:	ldr	r1, [r6, #4]
   1591c:	ldr	r3, [pc, #112]	; 15994 <tcgetattr@plt+0x3dac>
   15920:	mov	r2, r4
   15924:	ldr	r0, [r3]
   15928:	bl	11a50 <write@plt>
   1592c:	mov	r4, r0
   15930:	cmp	r4, #0
   15934:	blt	1595c <tcgetattr@plt+0x3d74>
   15938:	ldr	r3, [r6, #4]
   1593c:	ldr	r2, [r7, #80]	; 0x50
   15940:	add	r4, r3, r4
   15944:	cmp	r4, r2
   15948:	str	r4, [r6, #4]
   1594c:	ldreq	r3, [pc, #68]	; 15998 <tcgetattr@plt+0x3db0>
   15950:	streq	r3, [r7, #80]	; 0x50
   15954:	streq	r3, [r6, #4]
   15958:	pop	{r4, r5, r6, r7, r8, pc}
   1595c:	bl	11a14 <__errno_location@plt>
   15960:	ldr	r0, [r0]
   15964:	cmp	r0, #4
   15968:	cmpne	r0, #11
   1596c:	moveq	r0, #1
   15970:	movne	r0, #0
   15974:	popeq	{r4, r5, r6, r7, r8, pc}
   15978:	bl	12fdc <tcgetattr@plt+0x13f4>
   1597c:	b	15938 <tcgetattr@plt+0x3d50>
   15980:	andeq	r2, r3, r8, lsr #10
   15984:	andeq	r4, r3, r0, lsr #10
   15988:	andeq	sl, r3, r0, ror #13
   1598c:	andeq	r0, r2, r4, asr #13
   15990:	ldrdeq	r0, [r2], -ip
   15994:	ldrdeq	sl, [r3], -r0
   15998:	andeq	r2, r3, r0, lsr r5
   1599c:	push	{r4, r5, r6, lr}
   159a0:	mov	r4, r1
   159a4:	ldr	r5, [pc, #56]	; 159e4 <tcgetattr@plt+0x3dfc>
   159a8:	ldr	r2, [pc, #56]	; 159e8 <tcgetattr@plt+0x3e00>
   159ac:	mov	r6, r0
   159b0:	ldr	r3, [r5, #80]	; 0x50
   159b4:	sub	r2, r2, r3
   159b8:	cmp	r2, r1
   159bc:	bls	159c8 <tcgetattr@plt+0x3de0>
   159c0:	bl	158c0 <tcgetattr@plt+0x3cd8>
   159c4:	ldr	r3, [r5, #80]	; 0x50
   159c8:	mov	r0, r3
   159cc:	mov	r1, r6
   159d0:	mov	r2, r4
   159d4:	bl	11810 <memcpy@plt>
   159d8:	add	r3, r0, r4
   159dc:	str	r3, [r5, #80]	; 0x50
   159e0:	pop	{r4, r5, r6, pc}
   159e4:	andeq	r4, r3, r0, lsr #10
   159e8:	andeq	r4, r3, r0, lsr r5
   159ec:	ldr	r3, [pc, #148]	; 15a88 <tcgetattr@plt+0x3ea0>
   159f0:	push	{r4, r5, r6, r7, r8, lr}
   159f4:	mov	r2, #8192	; 0x2000
   159f8:	ldr	r1, [pc, #140]	; 15a8c <tcgetattr@plt+0x3ea4>
   159fc:	ldr	r0, [r3]
   15a00:	bl	117bc <read@plt>
   15a04:	ldr	r6, [pc, #132]	; 15a90 <tcgetattr@plt+0x3ea8>
   15a08:	subs	r4, r0, #0
   15a0c:	str	r0, [r6, #196]	; 0xc4
   15a10:	blt	15a68 <tcgetattr@plt+0x3e80>
   15a14:	ldr	r7, [pc, #120]	; 15a94 <tcgetattr@plt+0x3eac>
   15a18:	ldr	r5, [pc, #120]	; 15a98 <tcgetattr@plt+0x3eb0>
   15a1c:	ldr	r2, [r7, #4]
   15a20:	add	r3, r5, #180	; 0xb4
   15a24:	cmp	r2, #0
   15a28:	str	r3, [r5, #176]	; 0xb0
   15a2c:	ble	15a40 <tcgetattr@plt+0x3e58>
   15a30:	mov	r1, r4
   15a34:	ldr	r0, [pc, #96]	; 15a9c <tcgetattr@plt+0x3eb4>
   15a38:	bl	14244 <tcgetattr@plt+0x265c>
   15a3c:	ldr	r4, [r6, #196]	; 0xc4
   15a40:	ldr	r3, [r7, #12]
   15a44:	cmp	r3, #0
   15a48:	ble	15a60 <tcgetattr@plt+0x3e78>
   15a4c:	mov	r2, r4
   15a50:	ldr	r1, [r5, #176]	; 0xb0
   15a54:	ldr	r0, [pc, #68]	; 15aa0 <tcgetattr@plt+0x3eb8>
   15a58:	bl	156f4 <tcgetattr@plt+0x3b0c>
   15a5c:	ldr	r4, [r6, #196]	; 0xc4
   15a60:	mov	r0, r4
   15a64:	pop	{r4, r5, r6, r7, r8, pc}
   15a68:	bl	11a14 <__errno_location@plt>
   15a6c:	ldr	r3, [r0]
   15a70:	cmp	r3, #5
   15a74:	cmpne	r3, #11
   15a78:	moveq	r3, #0
   15a7c:	moveq	r4, r3
   15a80:	streq	r3, [r6, #196]	; 0xc4
   15a84:	b	15a14 <tcgetattr@plt+0x3e2c>
   15a88:	ldrdeq	sl, [r3], -r0
   15a8c:	andeq	r8, r3, r4, asr #11
   15a90:	andeq	sl, r3, r8, lsl #10
   15a94:	andeq	sl, r3, r0, ror #13
   15a98:	andeq	r8, r3, r0, lsl r5
   15a9c:	andeq	r0, r2, r0, ror #13
   15aa0:	ldrdeq	r0, [r2], -ip
   15aa4:	push	{r4, r5, lr}
   15aa8:	sub	sp, sp, #76	; 0x4c
   15aac:	ldr	r3, [pc, #216]	; 15b8c <tcgetattr@plt+0x3fa4>
   15ab0:	mov	r4, #0
   15ab4:	mov	r5, r0
   15ab8:	str	r3, [sp]
   15abc:	mov	r2, r4
   15ac0:	ldr	r3, [pc, #200]	; 15b90 <tcgetattr@plt+0x3fa8>
   15ac4:	mov	r1, r4
   15ac8:	add	r0, sp, #28
   15acc:	str	r5, [sp, #20]
   15ad0:	str	r5, [sp, #24]
   15ad4:	str	r4, [sp, #12]
   15ad8:	str	r4, [sp, #16]
   15adc:	bl	1a434 <_obstack_begin@@Base>
   15ae0:	add	r0, sp, #12
   15ae4:	bl	1391c <tcgetattr@plt+0x1d34>
   15ae8:	ldr	r3, [sp, #12]
   15aec:	cmp	r3, #1
   15af0:	bne	15b5c <tcgetattr@plt+0x3f74>
   15af4:	ldr	r3, [sp, #40]	; 0x28
   15af8:	ldr	r0, [sp, #36]	; 0x24
   15afc:	ldr	ip, [sp, #52]	; 0x34
   15b00:	cmp	r0, r3
   15b04:	ldr	r1, [sp, #44]	; 0x2c
   15b08:	ldrbeq	r2, [sp, #68]	; 0x44
   15b0c:	add	r3, r3, ip
   15b10:	bic	r3, r3, ip
   15b14:	orreq	r2, r2, #2
   15b18:	strbeq	r2, [sp, #68]	; 0x44
   15b1c:	ldr	r2, [sp, #32]
   15b20:	str	r3, [sp, #40]	; 0x28
   15b24:	sub	ip, r3, r2
   15b28:	sub	r2, r1, r2
   15b2c:	cmp	ip, r2
   15b30:	movhi	r3, r1
   15b34:	strhi	r1, [sp, #40]	; 0x28
   15b38:	str	r3, [sp, #36]	; 0x24
   15b3c:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   15b40:	mov	r4, r0
   15b44:	add	r0, sp, #28
   15b48:	mov	r1, #0
   15b4c:	bl	1a5d0 <_obstack_free@@Base>
   15b50:	mov	r0, r4
   15b54:	add	sp, sp, #76	; 0x4c
   15b58:	pop	{r4, r5, pc}
   15b5c:	mov	r2, r5
   15b60:	ldr	r1, [pc, #44]	; 15b94 <tcgetattr@plt+0x3fac>
   15b64:	mov	r0, #3
   15b68:	bl	11aec <syslog@plt>
   15b6c:	ldr	r2, [sp, #24]
   15b70:	ldr	r3, [pc, #32]	; 15b98 <tcgetattr@plt+0x3fb0>
   15b74:	cmp	r2, #0
   15b78:	ldr	r1, [pc, #28]	; 15b9c <tcgetattr@plt+0x3fb4>
   15b7c:	moveq	r2, r3
   15b80:	mov	r0, #3
   15b84:	bl	11aec <syslog@plt>
   15b88:	b	15b44 <tcgetattr@plt+0x3f5c>
   15b8c:	strdeq	sl, [r1], -r4
   15b90:	ldrdeq	fp, [r1], -ip
   15b94:	andeq	r0, r2, r0, lsl #14
   15b98:	strdeq	r0, [r2], -r8
   15b9c:	andeq	r0, r2, r8, lsl r7
   15ba0:	push	{r4, lr}
   15ba4:	bl	158c0 <tcgetattr@plt+0x3cd8>
   15ba8:	bl	132b4 <tcgetattr@plt+0x16cc>
   15bac:	ldr	r3, [pc, #20]	; 15bc8 <tcgetattr@plt+0x3fe0>
   15bb0:	pop	{r4, lr}
   15bb4:	ldr	r3, [r3, #60]	; 0x3c
   15bb8:	cmp	r3, #0
   15bbc:	moveq	r0, #28
   15bc0:	ldrbne	r0, [r3]
   15bc4:	b	13d2c <tcgetattr@plt+0x2144>
   15bc8:	andeq	sl, r3, ip, lsl #18
   15bcc:	push	{r4, lr}
   15bd0:	bl	132b4 <tcgetattr@plt+0x16cc>
   15bd4:	bl	13078 <tcgetattr@plt+0x1490>
   15bd8:	ldr	r3, [pc, #20]	; 15bf4 <tcgetattr@plt+0x400c>
   15bdc:	pop	{r4, lr}
   15be0:	ldr	r3, [r3, #68]	; 0x44
   15be4:	cmp	r3, #0
   15be8:	moveq	r0, #4
   15bec:	ldrbne	r0, [r3]
   15bf0:	b	13d2c <tcgetattr@plt+0x2144>
   15bf4:	andeq	sl, r3, ip, lsl #18
   15bf8:	mov	r2, #0
   15bfc:	mov	r1, #251	; 0xfb
   15c00:	mov	r0, #34	; 0x22
   15c04:	b	17c6c <tcgetattr@plt+0x6084>
   15c08:	push	{r4, lr}
   15c0c:	mov	r1, r0
   15c10:	mov	r4, r0
   15c14:	ldr	r0, [pc, #32]	; 15c3c <tcgetattr@plt+0x4054>
   15c18:	bl	143d8 <tcgetattr@plt+0x27f0>
   15c1c:	ldr	r3, [pc, #28]	; 15c40 <tcgetattr@plt+0x4058>
   15c20:	ldr	r3, [r3]
   15c24:	cmp	r3, #0
   15c28:	pople	{r4, pc}
   15c2c:	mov	r1, r4
   15c30:	ldr	r0, [pc, #12]	; 15c44 <tcgetattr@plt+0x405c>
   15c34:	pop	{r4, lr}
   15c38:	b	14a1c <tcgetattr@plt+0x2e34>
   15c3c:	andeq	r2, r3, r0, lsl #9
   15c40:	andeq	sl, r3, r0, ror #13
   15c44:	andeq	r0, r2, ip, lsr #18
   15c48:	push	{r4, lr}
   15c4c:	mov	r1, r0
   15c50:	mov	r4, r0
   15c54:	ldr	r0, [pc, #32]	; 15c7c <tcgetattr@plt+0x4094>
   15c58:	bl	143d8 <tcgetattr@plt+0x27f0>
   15c5c:	ldr	r3, [pc, #28]	; 15c80 <tcgetattr@plt+0x4098>
   15c60:	ldr	r3, [r3]
   15c64:	cmp	r3, #0
   15c68:	pople	{r4, pc}
   15c6c:	mov	r1, r4
   15c70:	ldr	r0, [pc, #12]	; 15c84 <tcgetattr@plt+0x409c>
   15c74:	pop	{r4, lr}
   15c78:	b	14a1c <tcgetattr@plt+0x2e34>
   15c7c:	andeq	r2, r3, r8, lsl #9
   15c80:	andeq	sl, r3, r0, ror #13
   15c84:	andeq	r0, r2, r8, lsr r9
   15c88:	push	{r4, lr}
   15c8c:	mov	r1, r0
   15c90:	mov	r4, r0
   15c94:	ldr	r0, [pc, #32]	; 15cbc <tcgetattr@plt+0x40d4>
   15c98:	bl	143d8 <tcgetattr@plt+0x27f0>
   15c9c:	ldr	r3, [pc, #28]	; 15cc0 <tcgetattr@plt+0x40d8>
   15ca0:	ldr	r3, [r3]
   15ca4:	cmp	r3, #0
   15ca8:	pople	{r4, pc}
   15cac:	mov	r1, r4
   15cb0:	ldr	r0, [pc, #12]	; 15cc4 <tcgetattr@plt+0x40dc>
   15cb4:	pop	{r4, lr}
   15cb8:	b	14a1c <tcgetattr@plt+0x2e34>
   15cbc:	muleq	r3, r0, r4
   15cc0:	andeq	sl, r3, r0, ror #13
   15cc4:	andeq	r0, r2, r8, asr #18
   15cc8:	push	{r4, lr}
   15ccc:	mov	r1, r0
   15cd0:	mov	r4, r0
   15cd4:	ldr	r0, [pc, #32]	; 15cfc <tcgetattr@plt+0x4114>
   15cd8:	bl	143d8 <tcgetattr@plt+0x27f0>
   15cdc:	ldr	r3, [pc, #28]	; 15d00 <tcgetattr@plt+0x4118>
   15ce0:	ldr	r3, [r3]
   15ce4:	cmp	r3, #0
   15ce8:	pople	{r4, pc}
   15cec:	mov	r1, r4
   15cf0:	ldr	r0, [pc, #12]	; 15d04 <tcgetattr@plt+0x411c>
   15cf4:	pop	{r4, lr}
   15cf8:	b	14a1c <tcgetattr@plt+0x2e34>
   15cfc:	muleq	r3, r8, r4
   15d00:	andeq	sl, r3, r0, ror #13
   15d04:	andeq	r0, r2, r8, asr r9
   15d08:	cmp	r1, #0
   15d0c:	beq	15d54 <tcgetattr@plt+0x416c>
   15d10:	ldr	r1, [pc, #64]	; 15d58 <tcgetattr@plt+0x4170>
   15d14:	ldr	ip, [pc, #64]	; 15d5c <tcgetattr@plt+0x4174>
   15d18:	ldrb	r2, [r1, r0]
   15d1c:	ldrb	r3, [ip, r0]
   15d20:	cmp	r2, #0
   15d24:	bne	15d30 <tcgetattr@plt+0x4148>
   15d28:	tst	r3, #4
   15d2c:	bxne	lr
   15d30:	tst	r3, #8
   15d34:	bxne	lr
   15d38:	cmp	r0, #6
   15d3c:	biceq	r3, r3, #8
   15d40:	orrne	r3, r3, #8
   15d44:	add	r2, r2, #1
   15d48:	strbeq	r3, [ip, #6]
   15d4c:	strbne	r3, [ip, r0]
   15d50:	strb	r2, [r1, r0]
   15d54:	b	15c08 <tcgetattr@plt+0x4020>
   15d58:	andeq	sl, r3, r8, lsl #16
   15d5c:	andeq	sl, r3, r4, lsl #14
   15d60:	cmp	r1, #0
   15d64:	beq	15da0 <tcgetattr@plt+0x41b8>
   15d68:	ldr	r1, [pc, #52]	; 15da4 <tcgetattr@plt+0x41bc>
   15d6c:	ldr	ip, [pc, #52]	; 15da8 <tcgetattr@plt+0x41c0>
   15d70:	ldrb	r2, [r1, r0]
   15d74:	ldrb	r3, [ip, r0]
   15d78:	cmp	r2, #0
   15d7c:	bne	15d88 <tcgetattr@plt+0x41a0>
   15d80:	tst	r3, #4
   15d84:	bxeq	lr
   15d88:	tst	r3, #8
   15d8c:	bxeq	lr
   15d90:	bic	r3, r3, #8
   15d94:	add	r2, r2, #1
   15d98:	strb	r3, [ip, r0]
   15d9c:	strb	r2, [r1, r0]
   15da0:	b	15c48 <tcgetattr@plt+0x4060>
   15da4:	andeq	sl, r3, r8, lsl #16
   15da8:	andeq	sl, r3, r4, lsl #14
   15dac:	cmp	r1, #0
   15db0:	beq	15dec <tcgetattr@plt+0x4204>
   15db4:	ldr	r1, [pc, #52]	; 15df0 <tcgetattr@plt+0x4208>
   15db8:	ldr	ip, [pc, #52]	; 15df4 <tcgetattr@plt+0x420c>
   15dbc:	ldrb	r2, [r1, r0]
   15dc0:	ldrb	r3, [ip, r0]
   15dc4:	cmp	r2, #0
   15dc8:	bne	15dd4 <tcgetattr@plt+0x41ec>
   15dcc:	tst	r3, #1
   15dd0:	bxne	lr
   15dd4:	tst	r3, #2
   15dd8:	bxne	lr
   15ddc:	orr	r3, r3, #2
   15de0:	add	r2, r2, #1
   15de4:	strb	r3, [ip, r0]
   15de8:	strb	r2, [r1, r0]
   15dec:	b	15c88 <tcgetattr@plt+0x40a0>
   15df0:	andeq	sl, r3, r0, ror #21
   15df4:	andeq	sl, r3, r4, lsl #14
   15df8:	ldr	r3, [pc, #660]	; 16094 <tcgetattr@plt+0x44ac>
   15dfc:	push	{r4, r5, r6, lr}
   15e00:	mov	r4, r0
   15e04:	ldr	r3, [r3]
   15e08:	cmp	r3, #0
   15e0c:	ble	15e1c <tcgetattr@plt+0x4234>
   15e10:	mov	r1, r0
   15e14:	ldr	r0, [pc, #636]	; 16098 <tcgetattr@plt+0x44b0>
   15e18:	bl	14a1c <tcgetattr@plt+0x2e34>
   15e1c:	ldr	r1, [pc, #632]	; 1609c <tcgetattr@plt+0x44b4>
   15e20:	ldrb	r2, [r1, r4]
   15e24:	cmp	r2, #0
   15e28:	bne	15ee8 <tcgetattr@plt+0x4300>
   15e2c:	ldr	r5, [pc, #620]	; 160a0 <tcgetattr@plt+0x44b8>
   15e30:	ldrb	r3, [r5, r4]
   15e34:	ands	ip, r3, #8
   15e38:	beq	15f2c <tcgetattr@plt+0x4344>
   15e3c:	cmp	r4, #39	; 0x27
   15e40:	ldrls	pc, [pc, r4, lsl #2]
   15e44:	b	15f9c <tcgetattr@plt+0x43b4>
   15e48:	andeq	r6, r1, ip, ror r0
   15e4c:			; <UNDEFINED> instruction: 0x00015fbc
   15e50:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e54:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e58:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e5c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e60:	andeq	r5, r1, ip, asr #31
   15e64:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e68:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e6c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e70:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e74:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e78:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e7c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e80:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e84:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e88:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e8c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e90:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e94:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e98:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15e9c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15ea0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15ea4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15ea8:	ldrdeq	r5, [r1], -ip
   15eac:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15eb0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15eb4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15eb8:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15ebc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15ec0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15ec4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15ec8:	strdeq	r5, [r1], -r4
   15ecc:	andeq	r6, r1, ip
   15ed0:	andeq	r5, r1, r8, ror pc
   15ed4:	andeq	r6, r1, r4, lsr r0
   15ed8:	andeq	r6, r1, ip, asr #32
   15edc:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15ee0:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15ee4:	andeq	r6, r1, r4, rrx
   15ee8:	sub	r3, r2, #1
   15eec:	ldr	r5, [pc, #428]	; 160a0 <tcgetattr@plt+0x44b8>
   15ef0:	uxtb	r3, r3
   15ef4:	cmp	r3, #0
   15ef8:	strb	r3, [r1, r4]
   15efc:	beq	15e30 <tcgetattr@plt+0x4248>
   15f00:	ldrb	r3, [r5, r4]
   15f04:	tst	r3, #4
   15f08:	bne	15f20 <tcgetattr@plt+0x4338>
   15f0c:	sub	r2, r2, #2
   15f10:	uxtb	r2, r2
   15f14:	cmp	r2, #0
   15f18:	strb	r2, [r1, r4]
   15f1c:	beq	15e30 <tcgetattr@plt+0x4248>
   15f20:	bic	r3, r3, #4
   15f24:	strb	r3, [r5, r4]
   15f28:	pop	{r4, r5, r6, pc}
   15f2c:	cmp	r4, #6
   15f30:	bne	15f20 <tcgetattr@plt+0x4338>
   15f34:	ldr	lr, [pc, #360]	; 160a4 <tcgetattr@plt+0x44bc>
   15f38:	ldr	r2, [lr]
   15f3c:	cmp	r2, #1
   15f40:	bgt	15f20 <tcgetattr@plt+0x4338>
   15f44:	mov	r2, ip
   15f48:	mov	r1, #252	; 0xfc
   15f4c:	mov	r0, #34	; 0x22
   15f50:	str	ip, [lr]
   15f54:	bl	17c6c <tcgetattr@plt+0x6084>
   15f58:	mov	r1, #1
   15f5c:	mov	r0, #3
   15f60:	bl	15dac <tcgetattr@plt+0x41c4>
   15f64:	mov	r1, #1
   15f68:	mov	r0, r1
   15f6c:	bl	15dac <tcgetattr@plt+0x41c4>
   15f70:	ldrb	r3, [r5, #6]
   15f74:	b	15f20 <tcgetattr@plt+0x4338>
   15f78:	ldr	r2, [pc, #292]	; 160a4 <tcgetattr@plt+0x44bc>
   15f7c:	ldr	r2, [r2]
   15f80:	cmp	r2, #4
   15f84:	bne	15f9c <tcgetattr@plt+0x43b4>
   15f88:	mov	r2, #0
   15f8c:	mov	r1, #252	; 0xfc
   15f90:	mov	r0, #34	; 0x22
   15f94:	bl	17c6c <tcgetattr@plt+0x6084>
   15f98:	ldrb	r3, [r5, #34]	; 0x22
   15f9c:	tst	r3, #4
   15fa0:	and	r3, r3, #247	; 0xf7
   15fa4:	strb	r3, [r5, r4]
   15fa8:	beq	15f20 <tcgetattr@plt+0x4338>
   15fac:	mov	r0, r4
   15fb0:	bl	15c48 <tcgetattr@plt+0x4060>
   15fb4:	ldrb	r3, [r5, r4]
   15fb8:	b	15f20 <tcgetattr@plt+0x4338>
   15fbc:	ldr	r2, [pc, #228]	; 160a8 <tcgetattr@plt+0x44c0>
   15fc0:	mov	r1, #1
   15fc4:	str	r1, [r2, #32]
   15fc8:	b	15f9c <tcgetattr@plt+0x43b4>
   15fcc:	ldrb	r3, [r5, #6]
   15fd0:	bic	r3, r3, #8
   15fd4:	strb	r3, [r5, #6]
   15fd8:	pop	{r4, r5, r6, pc}
   15fdc:	ldr	r1, [pc, #200]	; 160ac <tcgetattr@plt+0x44c4>
   15fe0:	ldr	r2, [r1]
   15fe4:	add	r2, r2, #1
   15fe8:	str	r2, [r1]
   15fec:	str	r2, [r1, #16]
   15ff0:	b	15f9c <tcgetattr@plt+0x43b4>
   15ff4:	ldr	r1, [pc, #176]	; 160ac <tcgetattr@plt+0x44c4>
   15ff8:	ldr	r2, [r1]
   15ffc:	add	r2, r2, #1
   16000:	str	r2, [r1]
   16004:	str	r2, [r1, #20]
   16008:	b	15f9c <tcgetattr@plt+0x43b4>
   1600c:	ldr	r0, [pc, #156]	; 160b0 <tcgetattr@plt+0x44c8>
   16010:	ldrb	r1, [r0, #120]	; 0x78
   16014:	ldrb	r2, [r0, #128]	; 0x80
   16018:	bic	r1, r1, #3
   1601c:	bic	r2, r2, #3
   16020:	orr	r1, r1, #1
   16024:	orr	r2, r2, #1
   16028:	strb	r1, [r0, #120]	; 0x78
   1602c:	strb	r2, [r0, #128]	; 0x80
   16030:	b	15f9c <tcgetattr@plt+0x43b4>
   16034:	ldr	r1, [pc, #112]	; 160ac <tcgetattr@plt+0x44c4>
   16038:	ldr	r2, [r1]
   1603c:	add	r2, r2, #1
   16040:	str	r2, [r1]
   16044:	str	r2, [r1, #32]
   16048:	b	15f9c <tcgetattr@plt+0x43b4>
   1604c:	ldr	r1, [pc, #88]	; 160ac <tcgetattr@plt+0x44c4>
   16050:	ldr	r2, [r1]
   16054:	add	r2, r2, #1
   16058:	str	r2, [r1]
   1605c:	str	r2, [r1, #28]
   16060:	b	15f9c <tcgetattr@plt+0x43b4>
   16064:	ldr	r1, [pc, #64]	; 160ac <tcgetattr@plt+0x44c4>
   16068:	ldr	r2, [r1]
   1606c:	add	r2, r2, #1
   16070:	str	r2, [r1]
   16074:	str	r2, [r1, #24]
   16078:	b	15f9c <tcgetattr@plt+0x43b4>
   1607c:	bl	132b4 <tcgetattr@plt+0x16cc>
   16080:	mov	r0, #0
   16084:	bl	13138 <tcgetattr@plt+0x1550>
   16088:	bl	1336c <tcgetattr@plt+0x1784>
   1608c:	ldrb	r3, [r5]
   16090:	b	15f9c <tcgetattr@plt+0x43b4>
   16094:	andeq	sl, r3, r0, ror #13
   16098:	andeq	r0, r2, r8, ror #18
   1609c:	andeq	sl, r3, r8, lsl #16
   160a0:	andeq	sl, r3, r4, lsl #14
   160a4:	strdeq	sl, [r3], -ip
   160a8:	andeq	r2, r3, r0, lsl #9
   160ac:			; <UNDEFINED> instruction: 0x0003a9b4
   160b0:	andeq	sl, r3, ip, lsl #18
   160b4:	ldr	r3, [pc, #452]	; 16280 <tcgetattr@plt+0x4698>
   160b8:	push	{r4, r5, r6, lr}
   160bc:	mov	r4, r0
   160c0:	ldr	r3, [r3]
   160c4:	cmp	r3, #0
   160c8:	ble	160d8 <tcgetattr@plt+0x44f0>
   160cc:	mov	r1, r0
   160d0:	ldr	r0, [pc, #428]	; 16284 <tcgetattr@plt+0x469c>
   160d4:	bl	14a1c <tcgetattr@plt+0x2e34>
   160d8:	ldr	r6, [pc, #424]	; 16288 <tcgetattr@plt+0x46a0>
   160dc:	ldrb	r2, [r6, r4]
   160e0:	cmp	r2, #0
   160e4:	bne	16150 <tcgetattr@plt+0x4568>
   160e8:	ldr	r5, [pc, #412]	; 1628c <tcgetattr@plt+0x46a4>
   160ec:	ldrb	r3, [r5, r4]
   160f0:	tst	r3, #2
   160f4:	bne	16188 <tcgetattr@plt+0x45a0>
   160f8:	cmp	r4, #18
   160fc:	ldrls	pc, [pc, r4, lsl #2]
   16100:	b	1620c <tcgetattr@plt+0x4624>
   16104:	andeq	r6, r1, r8, lsr #4
   16108:	andeq	r6, r1, r0, asr #4
   1610c:	andeq	r6, r1, ip, lsl #4
   16110:	muleq	r1, r4, r1
   16114:	andeq	r6, r1, ip, lsl #4
   16118:	andeq	r6, r1, r8, asr #3
   1611c:	andeq	r6, r1, r8, ror #4
   16120:	andeq	r6, r1, ip, lsl #4
   16124:	andeq	r6, r1, ip, lsl #4
   16128:	andeq	r6, r1, ip, lsl #4
   1612c:	andeq	r6, r1, ip, lsl #4
   16130:	andeq	r6, r1, ip, lsl #4
   16134:	andeq	r6, r1, ip, lsl #4
   16138:	andeq	r6, r1, ip, lsl #4
   1613c:	andeq	r6, r1, ip, lsl #4
   16140:	andeq	r6, r1, ip, lsl #4
   16144:	andeq	r6, r1, ip, lsl #4
   16148:	andeq	r6, r1, ip, lsl #4
   1614c:	andeq	r6, r1, r0, ror #3
   16150:	sub	r3, r2, #1
   16154:	ldr	r5, [pc, #304]	; 1628c <tcgetattr@plt+0x46a4>
   16158:	uxtb	r3, r3
   1615c:	cmp	r3, #0
   16160:	strb	r3, [r6, r4]
   16164:	beq	160ec <tcgetattr@plt+0x4504>
   16168:	ldrb	r3, [r5, r4]
   1616c:	tst	r3, #1
   16170:	beq	16188 <tcgetattr@plt+0x45a0>
   16174:	sub	r2, r2, #2
   16178:	uxtb	r2, r2
   1617c:	cmp	r2, #0
   16180:	strb	r2, [r6, r4]
   16184:	beq	160ec <tcgetattr@plt+0x4504>
   16188:	orr	r3, r3, #1
   1618c:	strb	r3, [r5, r4]
   16190:	pop	{r4, r5, r6, pc}
   16194:	ldr	r2, [pc, #244]	; 16290 <tcgetattr@plt+0x46a8>
   16198:	ldr	r2, [r2]
   1619c:	cmp	r2, #1
   161a0:	bne	161c8 <tcgetattr@plt+0x45e0>
   161a4:	mov	r2, #0
   161a8:	mov	r1, #252	; 0xfc
   161ac:	mov	r0, #34	; 0x22
   161b0:	bl	17c6c <tcgetattr@plt+0x6084>
   161b4:	ldr	r3, [pc, #216]	; 16294 <tcgetattr@plt+0x46ac>
   161b8:	ldr	r3, [r3]
   161bc:	cmp	r3, #0
   161c0:	bne	1620c <tcgetattr@plt+0x4624>
   161c4:	ldrb	r3, [r5, #3]
   161c8:	orr	r3, r3, #2
   161cc:	mov	r0, r4
   161d0:	strb	r3, [r5, r4]
   161d4:	bl	15c88 <tcgetattr@plt+0x40a0>
   161d8:	ldrb	r3, [r5, r4]
   161dc:	b	16188 <tcgetattr@plt+0x45a0>
   161e0:	ldrb	r3, [r5, #18]
   161e4:	mov	r0, #18
   161e8:	orr	r3, r3, #2
   161ec:	strb	r3, [r5, #18]
   161f0:	bl	15c88 <tcgetattr@plt+0x40a0>
   161f4:	ldrb	r3, [r5, #18]
   161f8:	orr	r3, r3, #1
   161fc:	strb	r3, [r5, #18]
   16200:	bl	142b4 <tcgetattr@plt+0x26cc>
   16204:	mov	r0, #1
   16208:	bl	12fdc <tcgetattr@plt+0x13f4>
   1620c:	ldrb	r3, [r6, r4]
   16210:	mov	r0, r4
   16214:	add	r3, r3, #1
   16218:	strb	r3, [r6, r4]
   1621c:	bl	15cc8 <tcgetattr@plt+0x40e0>
   16220:	ldrb	r3, [r5, r4]
   16224:	b	16188 <tcgetattr@plt+0x45a0>
   16228:	bl	132b4 <tcgetattr@plt+0x16cc>
   1622c:	mov	r0, #1
   16230:	bl	13158 <tcgetattr@plt+0x1570>
   16234:	bl	1336c <tcgetattr@plt+0x1784>
   16238:	ldrb	r3, [r5]
   1623c:	b	161c8 <tcgetattr@plt+0x45e0>
   16240:	ldr	r2, [pc, #72]	; 16290 <tcgetattr@plt+0x46a8>
   16244:	ldr	r2, [r2]
   16248:	cmp	r2, #0
   1624c:	bne	161c8 <tcgetattr@plt+0x45e0>
   16250:	bl	132b4 <tcgetattr@plt+0x16cc>
   16254:	mov	r0, #1
   16258:	bl	130fc <tcgetattr@plt+0x1514>
   1625c:	bl	1336c <tcgetattr@plt+0x1784>
   16260:	ldrb	r3, [r5, #1]
   16264:	b	161c8 <tcgetattr@plt+0x45e0>
   16268:	mov	r0, #6
   1626c:	bl	15c88 <tcgetattr@plt+0x40a0>
   16270:	ldrb	r3, [r5, #6]
   16274:	bic	r3, r3, #3
   16278:	strb	r3, [r5, #6]
   1627c:	pop	{r4, r5, r6, pc}
   16280:	andeq	sl, r3, r0, ror #13
   16284:	andeq	r0, r2, r8, ror r9
   16288:	andeq	sl, r3, r0, ror #21
   1628c:	andeq	sl, r3, r4, lsl #14
   16290:	strdeq	sl, [r3], -ip
   16294:			; <UNDEFINED> instruction: 0x0003a9b0
   16298:	cmp	r1, #0
   1629c:	beq	162d8 <tcgetattr@plt+0x46f0>
   162a0:	ldr	r1, [pc, #52]	; 162dc <tcgetattr@plt+0x46f4>
   162a4:	ldr	ip, [pc, #52]	; 162e0 <tcgetattr@plt+0x46f8>
   162a8:	ldrb	r2, [r1, r0]
   162ac:	ldrb	r3, [ip, r0]
   162b0:	cmp	r2, #0
   162b4:	bne	162c0 <tcgetattr@plt+0x46d8>
   162b8:	tst	r3, #1
   162bc:	bxeq	lr
   162c0:	tst	r3, #2
   162c4:	bxeq	lr
   162c8:	bic	r3, r3, #2
   162cc:	add	r2, r2, #1
   162d0:	strb	r3, [ip, r0]
   162d4:	strb	r2, [r1, r0]
   162d8:	b	15cc8 <tcgetattr@plt+0x40e0>
   162dc:	andeq	sl, r3, r0, ror #21
   162e0:	andeq	sl, r3, r4, lsl #14
   162e4:	ldr	r3, [pc, #644]	; 16570 <tcgetattr@plt+0x4988>
   162e8:	push	{r4, r5, r6, lr}
   162ec:	mov	r4, r0
   162f0:	ldr	r3, [r3]
   162f4:	cmp	r3, #0
   162f8:	ble	16308 <tcgetattr@plt+0x4720>
   162fc:	mov	r1, r0
   16300:	ldr	r0, [pc, #620]	; 16574 <tcgetattr@plt+0x498c>
   16304:	bl	14a1c <tcgetattr@plt+0x2e34>
   16308:	ldr	r1, [pc, #616]	; 16578 <tcgetattr@plt+0x4990>
   1630c:	ldrb	r2, [r1, r4]
   16310:	cmp	r2, #0
   16314:	bne	163d4 <tcgetattr@plt+0x47ec>
   16318:	ldr	r5, [pc, #604]	; 1657c <tcgetattr@plt+0x4994>
   1631c:	ldrb	r3, [r5, r4]
   16320:	tst	r3, #8
   16324:	bne	16418 <tcgetattr@plt+0x4830>
   16328:	cmp	r4, #39	; 0x27
   1632c:	ldrls	pc, [pc, r4, lsl #2]
   16330:	b	1649c <tcgetattr@plt+0x48b4>
   16334:	andeq	r6, r1, r4, ror #8
   16338:	muleq	r1, r0, r4
   1633c:	muleq	r1, ip, r4
   16340:	andeq	r6, r1, r8, ror r4
   16344:	muleq	r1, ip, r4
   16348:	muleq	r1, ip, r4
   1634c:	ldrdeq	r6, [r1], -r0
   16350:	muleq	r1, ip, r4
   16354:	muleq	r1, ip, r4
   16358:	muleq	r1, ip, r4
   1635c:	muleq	r1, ip, r4
   16360:	muleq	r1, ip, r4
   16364:	muleq	r1, ip, r4
   16368:	muleq	r1, ip, r4
   1636c:	muleq	r1, ip, r4
   16370:	muleq	r1, ip, r4
   16374:	muleq	r1, ip, r4
   16378:	muleq	r1, ip, r4
   1637c:	muleq	r1, ip, r4
   16380:	muleq	r1, ip, r4
   16384:	muleq	r1, ip, r4
   16388:	muleq	r1, ip, r4
   1638c:	muleq	r1, ip, r4
   16390:	muleq	r1, ip, r4
   16394:	andeq	r6, r1, r8, ror r4
   16398:	muleq	r1, ip, r4
   1639c:	muleq	r1, ip, r4
   163a0:	muleq	r1, ip, r4
   163a4:	muleq	r1, ip, r4
   163a8:	muleq	r1, ip, r4
   163ac:	muleq	r1, ip, r4
   163b0:	andeq	r6, r1, r8, ror r4
   163b4:	andeq	r6, r1, r8, ror r4
   163b8:	strdeq	r6, [r1], -r0
   163bc:	andeq	r6, r1, r8, lsl r5
   163c0:	andeq	r6, r1, r8, ror r4
   163c4:	andeq	r6, r1, r8, ror r4
   163c8:	muleq	r1, ip, r4
   163cc:	muleq	r1, ip, r4
   163d0:	andeq	r6, r1, r8, ror r4
   163d4:	sub	r3, r2, #1
   163d8:	ldr	r5, [pc, #412]	; 1657c <tcgetattr@plt+0x4994>
   163dc:	uxtb	r3, r3
   163e0:	cmp	r3, #0
   163e4:	strb	r3, [r1, r4]
   163e8:	beq	1631c <tcgetattr@plt+0x4734>
   163ec:	ldrb	r3, [r5, r4]
   163f0:	tst	r3, #4
   163f4:	beq	1640c <tcgetattr@plt+0x4824>
   163f8:	sub	r2, r2, #2
   163fc:	uxtb	r2, r2
   16400:	cmp	r2, #0
   16404:	strb	r2, [r1, r4]
   16408:	beq	1631c <tcgetattr@plt+0x4734>
   1640c:	orr	r3, r3, #4
   16410:	strb	r3, [r5, r4]
   16414:	pop	{r4, r5, r6, pc}
   16418:	cmp	r4, #33	; 0x21
   1641c:	beq	16450 <tcgetattr@plt+0x4868>
   16420:	cmp	r4, #34	; 0x22
   16424:	beq	164bc <tcgetattr@plt+0x48d4>
   16428:	cmp	r4, #1
   1642c:	bne	1640c <tcgetattr@plt+0x4824>
   16430:	ldr	r3, [pc, #328]	; 16580 <tcgetattr@plt+0x4998>
   16434:	mov	r2, #0
   16438:	mov	r1, r4
   1643c:	mov	r0, r4
   16440:	str	r2, [r3, #32]
   16444:	bl	15d60 <tcgetattr@plt+0x4178>
   16448:	ldrb	r3, [r5, #1]
   1644c:	b	1640c <tcgetattr@plt+0x4824>
   16450:	ldr	r2, [pc, #300]	; 16584 <tcgetattr@plt+0x499c>
   16454:	orr	r3, r3, #4
   16458:	strb	r3, [r5, r4]
   1645c:	pop	{r4, r5, r6, lr}
   16460:	bx	r2
   16464:	bl	132b4 <tcgetattr@plt+0x16cc>
   16468:	mov	r0, #1
   1646c:	bl	13138 <tcgetattr@plt+0x1550>
   16470:	bl	1336c <tcgetattr@plt+0x1784>
   16474:	ldrb	r3, [r5]
   16478:	orr	r3, r3, #8
   1647c:	mov	r0, r4
   16480:	strb	r3, [r5, r4]
   16484:	bl	15c08 <tcgetattr@plt+0x4020>
   16488:	ldrb	r3, [r5, r4]
   1648c:	b	1640c <tcgetattr@plt+0x4824>
   16490:	ldr	r3, [pc, #232]	; 16580 <tcgetattr@plt+0x4998>
   16494:	mov	r2, #0
   16498:	str	r2, [r3, #32]
   1649c:	mov	r3, #1
   164a0:	mov	r0, r4
   164a4:	strb	r3, [r1, r4]
   164a8:	bl	15c48 <tcgetattr@plt+0x4060>
   164ac:	ldrb	r3, [r5, r4]
   164b0:	orr	r3, r3, #4
   164b4:	strb	r3, [r5, r4]
   164b8:	pop	{r4, r5, r6, pc}
   164bc:	ldr	r1, [pc, #196]	; 16588 <tcgetattr@plt+0x49a0>
   164c0:	mov	r0, #4
   164c4:	ldr	r2, [pc, #192]	; 1658c <tcgetattr@plt+0x49a4>
   164c8:	str	r0, [r1]
   164cc:	b	16454 <tcgetattr@plt+0x486c>
   164d0:	ldr	ip, [pc, #176]	; 16588 <tcgetattr@plt+0x49a0>
   164d4:	ldr	r3, [ip]
   164d8:	cmp	r3, #0
   164dc:	ble	16548 <tcgetattr@plt+0x4960>
   164e0:	cmp	r3, #2
   164e4:	moveq	r3, #3
   164e8:	streq	r3, [ip]
   164ec:	pop	{r4, r5, r6, pc}
   164f0:	ldr	r0, [pc, #152]	; 16590 <tcgetattr@plt+0x49a8>
   164f4:	ldrb	r1, [r0, #120]	; 0x78
   164f8:	ldrb	r2, [r0, #128]	; 0x80
   164fc:	bic	r1, r1, #3
   16500:	bic	r2, r2, #3
   16504:	orr	r1, r1, #3
   16508:	orr	r2, r2, #3
   1650c:	strb	r1, [r0, #120]	; 0x78
   16510:	strb	r2, [r0, #128]	; 0x80
   16514:	b	16478 <tcgetattr@plt+0x4890>
   16518:	ldr	r2, [pc, #104]	; 16588 <tcgetattr@plt+0x49a0>
   1651c:	orr	r3, r3, #8
   16520:	mov	r1, #4
   16524:	mov	r0, #34	; 0x22
   16528:	strb	r3, [r5, #34]	; 0x22
   1652c:	str	r1, [r2]
   16530:	bl	15c08 <tcgetattr@plt+0x4020>
   16534:	ldrb	r3, [r5, #34]	; 0x22
   16538:	ldr	r2, [pc, #76]	; 1658c <tcgetattr@plt+0x49a4>
   1653c:	orr	r3, r3, #4
   16540:	strb	r3, [r5, #34]	; 0x22
   16544:	b	1645c <tcgetattr@plt+0x4874>
   16548:	mov	r4, #1
   1654c:	mov	r1, #251	; 0xfb
   16550:	mov	r0, #34	; 0x22
   16554:	mov	r2, #0
   16558:	str	r4, [ip]
   1655c:	bl	17c6c <tcgetattr@plt+0x6084>
   16560:	mov	r1, r4
   16564:	mov	r0, #3
   16568:	pop	{r4, r5, r6, lr}
   1656c:	b	16298 <tcgetattr@plt+0x46b0>
   16570:	andeq	sl, r3, r0, ror #13
   16574:	andeq	r0, r2, r4, lsl #19
   16578:	andeq	sl, r3, r8, lsl #16
   1657c:	andeq	sl, r3, r4, lsl #14
   16580:	andeq	r2, r3, r0, lsl #9
   16584:	andeq	r7, r1, r4, asr #14
   16588:	strdeq	sl, [r3], -ip
   1658c:	strdeq	r5, [r1], -r8
   16590:	andeq	sl, r3, ip, lsl #18
   16594:	ldr	r3, [pc, #296]	; 166c4 <tcgetattr@plt+0x4adc>
   16598:	push	{r4, r5, r6, lr}
   1659c:	mov	r4, r0
   165a0:	ldr	r3, [r3]
   165a4:	cmp	r3, #0
   165a8:	ble	165b8 <tcgetattr@plt+0x49d0>
   165ac:	mov	r1, r0
   165b0:	ldr	r0, [pc, #272]	; 166c8 <tcgetattr@plt+0x4ae0>
   165b4:	bl	14a1c <tcgetattr@plt+0x2e34>
   165b8:	ldr	r1, [pc, #268]	; 166cc <tcgetattr@plt+0x4ae4>
   165bc:	ldrb	r2, [r1, r4]
   165c0:	cmp	r2, #0
   165c4:	bne	1662c <tcgetattr@plt+0x4a44>
   165c8:	ldr	r5, [pc, #256]	; 166d0 <tcgetattr@plt+0x4ae8>
   165cc:	ldrb	r3, [r5, r4]
   165d0:	tst	r3, #2
   165d4:	beq	16620 <tcgetattr@plt+0x4a38>
   165d8:	cmp	r4, #1
   165dc:	beq	16698 <tcgetattr@plt+0x4ab0>
   165e0:	cmp	r4, #3
   165e4:	beq	16668 <tcgetattr@plt+0x4a80>
   165e8:	cmp	r4, #0
   165ec:	bne	16604 <tcgetattr@plt+0x4a1c>
   165f0:	bl	132b4 <tcgetattr@plt+0x16cc>
   165f4:	mov	r0, r4
   165f8:	bl	13158 <tcgetattr@plt+0x1570>
   165fc:	bl	1336c <tcgetattr@plt+0x1784>
   16600:	ldrb	r3, [r5]
   16604:	tst	r3, #1
   16608:	and	r3, r3, #253	; 0xfd
   1660c:	strb	r3, [r5, r4]
   16610:	beq	16620 <tcgetattr@plt+0x4a38>
   16614:	mov	r0, r4
   16618:	bl	15cc8 <tcgetattr@plt+0x40e0>
   1661c:	ldrb	r3, [r5, r4]
   16620:	bic	r3, r3, #1
   16624:	strb	r3, [r5, r4]
   16628:	pop	{r4, r5, r6, pc}
   1662c:	sub	r3, r2, #1
   16630:	ldr	r5, [pc, #152]	; 166d0 <tcgetattr@plt+0x4ae8>
   16634:	uxtb	r3, r3
   16638:	cmp	r3, #0
   1663c:	strb	r3, [r1, r4]
   16640:	beq	165cc <tcgetattr@plt+0x49e4>
   16644:	ldrb	r3, [r5, r4]
   16648:	tst	r3, #1
   1664c:	bne	16620 <tcgetattr@plt+0x4a38>
   16650:	sub	r2, r2, #2
   16654:	uxtb	r2, r2
   16658:	cmp	r2, #0
   1665c:	strb	r2, [r1, r4]
   16660:	bne	16620 <tcgetattr@plt+0x4a38>
   16664:	b	165cc <tcgetattr@plt+0x49e4>
   16668:	ldr	lr, [pc, #100]	; 166d4 <tcgetattr@plt+0x4aec>
   1666c:	ldr	ip, [lr]
   16670:	bic	ip, ip, #2
   16674:	cmp	ip, #1
   16678:	bne	16604 <tcgetattr@plt+0x4a1c>
   1667c:	mov	r2, #0
   16680:	mov	r1, #251	; 0xfb
   16684:	mov	r0, #34	; 0x22
   16688:	str	ip, [lr]
   1668c:	bl	17c6c <tcgetattr@plt+0x6084>
   16690:	ldrb	r3, [r5, #3]
   16694:	b	16604 <tcgetattr@plt+0x4a1c>
   16698:	ldr	r2, [pc, #52]	; 166d4 <tcgetattr@plt+0x4aec>
   1669c:	ldr	r2, [r2]
   166a0:	cmp	r2, #4
   166a4:	cmpne	r2, #1
   166a8:	beq	16604 <tcgetattr@plt+0x4a1c>
   166ac:	bl	132b4 <tcgetattr@plt+0x16cc>
   166b0:	mov	r0, #0
   166b4:	bl	130fc <tcgetattr@plt+0x1514>
   166b8:	bl	1336c <tcgetattr@plt+0x1784>
   166bc:	ldrb	r3, [r5, #1]
   166c0:	b	16604 <tcgetattr@plt+0x4a1c>
   166c4:	andeq	sl, r3, r0, ror #13
   166c8:	muleq	r2, r4, r9
   166cc:	andeq	sl, r3, r0, ror #21
   166d0:	andeq	sl, r3, r4, lsl #14
   166d4:	strdeq	sl, [r3], -ip
   166d8:	push	{r4, r5, r6, lr}
   166dc:	sub	sp, sp, #264	; 0x108
   166e0:	bl	142b4 <tcgetattr@plt+0x26cc>
   166e4:	ldr	ip, [pc, #920]	; 16a84 <tcgetattr@plt+0x4e9c>
   166e8:	mov	r1, #0
   166ec:	add	r3, sp, #12
   166f0:	mvn	r4, #4
   166f4:	mvn	r5, #2
   166f8:	mov	r2, r1
   166fc:	mvn	lr, #0
   16700:	mvn	r0, #5
   16704:	strb	r1, [sp, #11]
   16708:	mov	r1, #5
   1670c:	strb	lr, [sp, #8]
   16710:	strb	r0, [sp, #9]
   16714:	strb	r1, [sp, #10]
   16718:	ldrb	r1, [ip, #1]!
   1671c:	add	lr, r2, #1
   16720:	mov	r0, r3
   16724:	tst	r1, #2
   16728:	beq	1674c <tcgetattr@plt+0x4b64>
   1672c:	add	r6, sp, #264	; 0x108
   16730:	cmp	r3, r6
   16734:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   16738:	strb	r4, [r0], #1
   1673c:	cmp	r6, r0
   16740:	bls	16a44 <tcgetattr@plt+0x4e5c>
   16744:	strb	r2, [r3, #1]
   16748:	add	r3, r3, #2
   1674c:	tst	r1, #8
   16750:	mov	r0, r3
   16754:	beq	16778 <tcgetattr@plt+0x4b90>
   16758:	add	r1, sp, #264	; 0x108
   1675c:	cmp	r3, r1
   16760:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   16764:	strb	r5, [r0], #1
   16768:	cmp	r1, r0
   1676c:	bls	16a44 <tcgetattr@plt+0x4e5c>
   16770:	strb	r2, [r3, #1]
   16774:	add	r3, r3, #2
   16778:	uxtb	r2, lr
   1677c:	cmp	r2, #40	; 0x28
   16780:	bne	16718 <tcgetattr@plt+0x4b30>
   16784:	ldr	r2, [pc, #764]	; 16a88 <tcgetattr@plt+0x4ea0>
   16788:	ldrb	r1, [r2, #33]	; 0x21
   1678c:	tst	r1, #8
   16790:	beq	16870 <tcgetattr@plt+0x4c88>
   16794:	add	r1, sp, #264	; 0x108
   16798:	cmp	r3, r1
   1679c:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   167a0:	mov	r1, r3
   167a4:	mvn	r0, #5
   167a8:	strb	r0, [r1], #1
   167ac:	add	r0, sp, #264	; 0x108
   167b0:	cmp	r0, r1
   167b4:	bls	16a44 <tcgetattr@plt+0x4e5c>
   167b8:	ldr	r1, [pc, #716]	; 16a8c <tcgetattr@plt+0x4ea4>
   167bc:	mov	r0, #33	; 0x21
   167c0:	strb	r0, [r3, #1]
   167c4:	ldr	r0, [r1]
   167c8:	add	r1, r3, #2
   167cc:	cmp	r0, #0
   167d0:	bne	16a4c <tcgetattr@plt+0x4e64>
   167d4:	add	ip, sp, #264	; 0x108
   167d8:	cmp	r1, ip
   167dc:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   167e0:	add	r1, r3, #3
   167e4:	strb	r0, [r3, #2]
   167e8:	add	r3, sp, #264	; 0x108
   167ec:	cmp	r1, r3
   167f0:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   167f4:	ldr	r3, [pc, #660]	; 16a90 <tcgetattr@plt+0x4ea8>
   167f8:	mvn	r0, #15
   167fc:	strb	r0, [r1]
   16800:	ldr	r0, [r3]
   16804:	add	r3, r1, #1
   16808:	cmp	r0, #0
   1680c:	blt	16870 <tcgetattr@plt+0x4c88>
   16810:	add	ip, sp, #264	; 0x108
   16814:	cmp	r3, ip
   16818:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   1681c:	add	r3, r1, #2
   16820:	cmp	ip, r3
   16824:	mvn	r3, #5
   16828:	strb	r3, [r1, #1]
   1682c:	bls	16a44 <tcgetattr@plt+0x4e5c>
   16830:	mov	r3, #33	; 0x21
   16834:	cmp	r0, #0
   16838:	strb	r3, [r1, #2]
   1683c:	add	r3, r1, #3
   16840:	beq	16a68 <tcgetattr@plt+0x4e80>
   16844:	cmp	r3, ip
   16848:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   1684c:	add	r0, r1, #4
   16850:	mov	r3, #2
   16854:	strb	r3, [r1, #3]
   16858:	add	r3, sp, #264	; 0x108
   1685c:	cmp	r0, r3
   16860:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   16864:	add	r3, r0, #1
   16868:	mvn	r1, #15
   1686c:	strb	r1, [r0]
   16870:	ldrb	r2, [r2, #34]	; 0x22
   16874:	tst	r2, #8
   16878:	beq	169e0 <tcgetattr@plt+0x4df8>
   1687c:	add	r2, sp, #264	; 0x108
   16880:	cmp	r3, r2
   16884:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   16888:	mov	r2, r3
   1688c:	mvn	r1, #5
   16890:	strb	r1, [r2], #1
   16894:	add	r1, sp, #264	; 0x108
   16898:	cmp	r1, r2
   1689c:	bls	16a44 <tcgetattr@plt+0x4e5c>
   168a0:	add	r2, r3, #2
   168a4:	cmp	r1, r2
   168a8:	mov	r2, #34	; 0x22
   168ac:	strb	r2, [r3, #1]
   168b0:	bls	16a44 <tcgetattr@plt+0x4e5c>
   168b4:	add	r2, r3, #3
   168b8:	cmp	r1, r2
   168bc:	mov	r2, #1
   168c0:	strb	r2, [r3, #2]
   168c4:	bls	16a44 <tcgetattr@plt+0x4e5c>
   168c8:	ldr	r2, [pc, #452]	; 16a94 <tcgetattr@plt+0x4eac>
   168cc:	add	r4, r3, #4
   168d0:	ldr	r2, [r2]
   168d4:	cmp	r2, #255	; 0xff
   168d8:	cmpne	r2, #240	; 0xf0
   168dc:	uxtb	r2, r2
   168e0:	strb	r2, [r3, #3]
   168e4:	bne	168f8 <tcgetattr@plt+0x4d10>
   168e8:	cmp	r4, r1
   168ec:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   168f0:	add	r4, r3, #5
   168f4:	strb	r2, [r3, #4]
   168f8:	add	r3, sp, #264	; 0x108
   168fc:	cmp	r4, r3
   16900:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   16904:	mov	r3, r4
   16908:	mvn	r2, #15
   1690c:	strb	r2, [r3], #1
   16910:	add	r2, sp, #264	; 0x108
   16914:	cmp	r2, r3
   16918:	bls	16a44 <tcgetattr@plt+0x4e5c>
   1691c:	add	r3, r4, #2
   16920:	cmp	r2, r3
   16924:	mvn	r3, #5
   16928:	strb	r3, [r4, #1]
   1692c:	bls	16a44 <tcgetattr@plt+0x4e5c>
   16930:	add	r3, r4, #3
   16934:	cmp	r2, r3
   16938:	mov	r3, #34	; 0x22
   1693c:	strb	r3, [r4, #2]
   16940:	bls	16a44 <tcgetattr@plt+0x4e5c>
   16944:	mov	r3, #3
   16948:	strb	r3, [r4, #3]
   1694c:	mov	r0, #0
   16950:	bl	181c8 <tcgetattr@plt+0x65e0>
   16954:	bl	18154 <tcgetattr@plt+0x656c>
   16958:	add	r0, sp, #4
   1695c:	bl	18228 <tcgetattr@plt+0x6640>
   16960:	ldr	r3, [sp, #4]
   16964:	add	r4, r4, #4
   16968:	add	r0, r3, r0
   1696c:	cmp	r3, r0
   16970:	bcc	16998 <tcgetattr@plt+0x4db0>
   16974:	b	169c8 <tcgetattr@plt+0x4de0>
   16978:	add	ip, sp, #264	; 0x108
   1697c:	cmp	r1, ip
   16980:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   16984:	strb	r2, [r4, #1]
   16988:	add	r4, r4, #2
   1698c:	cmp	r3, r0
   16990:	str	r3, [sp, #4]
   16994:	beq	169c8 <tcgetattr@plt+0x4de0>
   16998:	add	r2, sp, #264	; 0x108
   1699c:	cmp	r4, r2
   169a0:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   169a4:	ldrb	r2, [r3]
   169a8:	add	r1, r4, #1
   169ac:	strb	r2, [r4]
   169b0:	ldrb	r2, [r3], #1
   169b4:	cmp	r2, #255	; 0xff
   169b8:	cmpne	r2, #240	; 0xf0
   169bc:	beq	16978 <tcgetattr@plt+0x4d90>
   169c0:	mov	r4, r1
   169c4:	b	1698c <tcgetattr@plt+0x4da4>
   169c8:	add	r3, sp, #264	; 0x108
   169cc:	cmp	r4, r3
   169d0:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   169d4:	add	r3, r4, #1
   169d8:	mvn	r2, #15
   169dc:	strb	r2, [r4]
   169e0:	add	r2, sp, #264	; 0x108
   169e4:	cmp	r3, r2
   169e8:	add	r0, sp, #8
   169ec:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   169f0:	mov	r2, r3
   169f4:	mvn	r1, #0
   169f8:	strb	r1, [r2], #1
   169fc:	add	r1, sp, #264	; 0x108
   16a00:	cmp	r1, r2
   16a04:	bls	16a44 <tcgetattr@plt+0x4e5c>
   16a08:	add	r4, r3, #2
   16a0c:	mvn	r2, #15
   16a10:	sub	r4, r4, r0
   16a14:	strb	r2, [r3, #1]
   16a18:	mov	r1, r4
   16a1c:	bl	14460 <tcgetattr@plt+0x2878>
   16a20:	bl	142b4 <tcgetattr@plt+0x26cc>
   16a24:	ldr	r3, [pc, #108]	; 16a98 <tcgetattr@plt+0x4eb0>
   16a28:	ldr	r3, [r3]
   16a2c:	cmp	r3, #0
   16a30:	ble	16a44 <tcgetattr@plt+0x4e5c>
   16a34:	sub	r2, r4, #2
   16a38:	add	r1, sp, #10
   16a3c:	mov	r0, #62	; 0x3e
   16a40:	bl	14a7c <tcgetattr@plt+0x2e94>
   16a44:	add	sp, sp, #264	; 0x108
   16a48:	pop	{r4, r5, r6, pc}
   16a4c:	add	r0, sp, #264	; 0x108
   16a50:	cmp	r1, r0
   16a54:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   16a58:	mov	r1, #1
   16a5c:	strb	r1, [r3, #2]
   16a60:	add	r1, r3, #3
   16a64:	b	167e8 <tcgetattr@plt+0x4c00>
   16a68:	add	r0, sp, #264	; 0x108
   16a6c:	cmp	r3, r0
   16a70:	bcs	16a44 <tcgetattr@plt+0x4e5c>
   16a74:	mov	r3, #3
   16a78:	add	r0, r1, #4
   16a7c:	strb	r3, [r1, #3]
   16a80:	b	16858 <tcgetattr@plt+0x4c70>
   16a84:	andeq	sl, r3, r3, lsl #14
   16a88:	andeq	sl, r3, r4, lsl #14
   16a8c:	ldrdeq	sl, [r3], -r4
   16a90:	andeq	sl, r3, r4, ror #23
   16a94:	andeq	sl, r3, r8, lsl #18
   16a98:	andeq	sl, r3, r0, ror #13
   16a9c:	ldr	r3, [pc, #1588]	; 170d8 <tcgetattr@plt+0x54f0>
   16aa0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16aa4:	sub	sp, sp, #8
   16aa8:	ldr	r3, [r3]
   16aac:	ldr	r4, [pc, #1576]	; 170dc <tcgetattr@plt+0x54f4>
   16ab0:	cmp	r3, #0
   16ab4:	ble	16ad4 <tcgetattr@plt+0x4eec>
   16ab8:	ldr	r3, [r4, #36]	; 0x24
   16abc:	ldr	r2, [r4, #40]	; 0x28
   16ac0:	mov	r0, #60	; 0x3c
   16ac4:	sub	r2, r2, r3
   16ac8:	mov	r1, r3
   16acc:	add	r2, r2, #2
   16ad0:	bl	14a7c <tcgetattr@plt+0x2e94>
   16ad4:	ldr	ip, [r4, #36]	; 0x24
   16ad8:	add	r2, ip, #1
   16adc:	str	r2, [r4, #36]	; 0x24
   16ae0:	ldrb	r5, [ip]
   16ae4:	sub	r3, r5, #5
   16ae8:	cmp	r3, #34	; 0x22
   16aec:	ldrls	pc, [pc, r3, lsl #2]
   16af0:	b	16ba0 <tcgetattr@plt+0x4fb8>
   16af4:	andeq	r6, r1, r0, lsl #24
   16af8:	andeq	r6, r1, r0, lsr #23
   16afc:	andeq	r6, r1, r0, lsr #23
   16b00:	andeq	r6, r1, r0, lsr #23
   16b04:	andeq	r6, r1, r0, lsr #23
   16b08:	andeq	r6, r1, r0, lsr #23
   16b0c:	andeq	r6, r1, r0, lsr #23
   16b10:	andeq	r6, r1, r0, lsr #23
   16b14:	andeq	r6, r1, r0, lsr #23
   16b18:	andeq	r6, r1, r0, lsr #23
   16b1c:	andeq	r6, r1, r0, lsr #23
   16b20:	andeq	r6, r1, r0, lsr #23
   16b24:	andeq	r6, r1, r0, lsr #23
   16b28:	andeq	r6, r1, r0, lsr #23
   16b2c:	andeq	r6, r1, r0, lsr #23
   16b30:	andeq	r6, r1, r0, lsr #23
   16b34:	andeq	r6, r1, r0, lsr #23
   16b38:	andeq	r6, r1, r0, lsr #23
   16b3c:	andeq	r6, r1, r0, lsr #23
   16b40:	andeq	r6, r1, ip, lsr ip
   16b44:	andeq	r6, r1, r0, lsr #23
   16b48:	andeq	r6, r1, r0, lsr #23
   16b4c:	andeq	r6, r1, r0, lsr #23
   16b50:	andeq	r6, r1, r0, lsr #23
   16b54:	andeq	r6, r1, r0, lsr #23
   16b58:	andeq	r6, r1, r0, lsr #23
   16b5c:	andeq	r6, r1, r4, lsr #26
   16b60:	muleq	r1, r8, sp
   16b64:	andeq	r6, r1, r0, lsr #23
   16b68:	andeq	r6, r1, r4, lsr lr
   16b6c:	andeq	r6, r1, r0, lsl #23
   16b70:	andeq	r6, r1, r8, lsr #23
   16b74:	andeq	r6, r1, r0, lsr #23
   16b78:	andeq	r6, r1, r0, lsr #23
   16b7c:	andeq	r6, r1, r8, lsr #23
   16b80:	ldr	r3, [r4, #40]	; 0x28
   16b84:	cmp	r2, r3
   16b88:	bcs	16ba0 <tcgetattr@plt+0x4fb8>
   16b8c:	add	r2, ip, #2
   16b90:	str	r2, [r4, #36]	; 0x24
   16b94:	ldrb	r1, [ip, #1]
   16b98:	cmp	r1, #0
   16b9c:	beq	16eec <tcgetattr@plt+0x5304>
   16ba0:	add	sp, sp, #8
   16ba4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16ba8:	ldr	lr, [r4, #40]	; 0x28
   16bac:	cmp	r2, lr
   16bb0:	bcs	16ba0 <tcgetattr@plt+0x4fb8>
   16bb4:	add	r3, ip, #2
   16bb8:	str	r3, [r4, #36]	; 0x24
   16bbc:	ldrb	r2, [ip, #1]
   16bc0:	cmp	r2, #0
   16bc4:	beq	16ec8 <tcgetattr@plt+0x52e0>
   16bc8:	cmp	r2, #2
   16bcc:	bne	16ba0 <tcgetattr@plt+0x4fb8>
   16bd0:	cmp	r5, #39	; 0x27
   16bd4:	bne	16bf0 <tcgetattr@plt+0x5008>
   16bd8:	b	16eb8 <tcgetattr@plt+0x52d0>
   16bdc:	str	r3, [r4, #36]	; 0x24
   16be0:	ldrb	r2, [r3, #-1]
   16be4:	and	r2, r2, #253	; 0xfd
   16be8:	cmp	r2, #1
   16bec:	beq	16f1c <tcgetattr@plt+0x5334>
   16bf0:	cmp	lr, r3
   16bf4:	add	r3, r3, #1
   16bf8:	bhi	16bdc <tcgetattr@plt+0x4ff4>
   16bfc:	b	16ba0 <tcgetattr@plt+0x4fb8>
   16c00:	ldr	r3, [r4, #40]	; 0x28
   16c04:	cmp	r2, r3
   16c08:	bcs	16ba0 <tcgetattr@plt+0x4fb8>
   16c0c:	add	r3, ip, #2
   16c10:	str	r3, [r4, #36]	; 0x24
   16c14:	ldrb	r3, [ip, #1]
   16c18:	cmp	r3, #1
   16c1c:	bne	16ba0 <tcgetattr@plt+0x4fb8>
   16c20:	ldr	r3, [pc, #1208]	; 170e0 <tcgetattr@plt+0x54f8>
   16c24:	ldrb	r3, [r3, #5]
   16c28:	tst	r3, #1
   16c2c:	beq	16ba0 <tcgetattr@plt+0x4fb8>
   16c30:	add	sp, sp, #8
   16c34:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16c38:	b	166d8 <tcgetattr@plt+0x4af0>
   16c3c:	ldr	r3, [pc, #1180]	; 170e0 <tcgetattr@plt+0x54f8>
   16c40:	ldrb	r3, [r3, #24]
   16c44:	tst	r3, #4
   16c48:	beq	16ba0 <tcgetattr@plt+0x4fb8>
   16c4c:	ldr	r1, [pc, #1168]	; 170e4 <tcgetattr@plt+0x54fc>
   16c50:	ldr	r0, [r4, #40]	; 0x28
   16c54:	ldr	r3, [r1]
   16c58:	cmp	r2, r0
   16c5c:	add	r3, r3, #1
   16c60:	str	r3, [r1]
   16c64:	str	r3, [r1, #16]
   16c68:	bcs	16ba0 <tcgetattr@plt+0x4fb8>
   16c6c:	add	r3, ip, #2
   16c70:	str	r3, [r4, #36]	; 0x24
   16c74:	ldrb	r5, [ip, #1]
   16c78:	cmp	r5, #0
   16c7c:	bne	16ba0 <tcgetattr@plt+0x4fb8>
   16c80:	ldr	r7, [pc, #1120]	; 170e8 <tcgetattr@plt+0x5500>
   16c84:	ldr	r0, [r7]
   16c88:	bl	1a1f4 <argp_parse@@Base+0xe98>
   16c8c:	ldr	r2, [pc, #1112]	; 170ec <tcgetattr@plt+0x5504>
   16c90:	ldr	r3, [pc, #1112]	; 170f0 <tcgetattr@plt+0x5508>
   16c94:	str	r2, [sp]
   16c98:	mov	r1, r5
   16c9c:	mov	r2, r5
   16ca0:	ldr	r0, [pc, #1100]	; 170f4 <tcgetattr@plt+0x550c>
   16ca4:	bl	1a434 <_obstack_begin@@Base>
   16ca8:	ldr	r6, [r4, #36]	; 0x24
   16cac:	ldr	r3, [r4, #40]	; 0x28
   16cb0:	ldr	r5, [pc, #1084]	; 170f4 <tcgetattr@plt+0x550c>
   16cb4:	cmp	r6, r3
   16cb8:	bcs	17000 <tcgetattr@plt+0x5418>
   16cbc:	bl	1196c <__ctype_tolower_loc@plt>
   16cc0:	mov	r9, r5
   16cc4:	mov	r8, #1
   16cc8:	mov	sl, r0
   16ccc:	b	16cec <tcgetattr@plt+0x5104>
   16cd0:	add	r2, r3, #1
   16cd4:	str	r2, [r5, #12]
   16cd8:	strb	r6, [r3]
   16cdc:	ldr	r6, [r4, #36]	; 0x24
   16ce0:	ldr	r3, [r4, #40]	; 0x28
   16ce4:	cmp	r6, r3
   16ce8:	bcs	17000 <tcgetattr@plt+0x5418>
   16cec:	add	r3, r6, #1
   16cf0:	str	r3, [r4, #36]	; 0x24
   16cf4:	ldrb	r0, [r6]
   16cf8:	ldr	r1, [sl]
   16cfc:	ldr	r3, [r5, #12]
   16d00:	ldr	r2, [r5, #16]
   16d04:	ldr	r6, [r1, r0, lsl #2]
   16d08:	cmp	r2, r3
   16d0c:	bne	16cd0 <tcgetattr@plt+0x50e8>
   16d10:	mov	r1, r8
   16d14:	mov	r0, r9
   16d18:	bl	1a484 <_obstack_newchunk@@Base>
   16d1c:	ldr	r3, [r5, #12]
   16d20:	b	16cd0 <tcgetattr@plt+0x50e8>
   16d24:	ldr	r3, [pc, #948]	; 170e0 <tcgetattr@plt+0x54f8>
   16d28:	ldrb	r3, [r3, #31]
   16d2c:	tst	r3, #4
   16d30:	beq	16ba0 <tcgetattr@plt+0x4fb8>
   16d34:	ldr	r3, [r4, #40]	; 0x28
   16d38:	cmp	r2, r3
   16d3c:	bcs	16ba0 <tcgetattr@plt+0x4fb8>
   16d40:	add	r2, ip, #2
   16d44:	cmp	r3, r2
   16d48:	str	r2, [r4, #36]	; 0x24
   16d4c:	bls	16ba0 <tcgetattr@plt+0x4fb8>
   16d50:	add	r2, ip, #3
   16d54:	cmp	r3, r2
   16d58:	ldrb	r1, [ip, #1]
   16d5c:	str	r2, [r4, #36]	; 0x24
   16d60:	bls	16ba0 <tcgetattr@plt+0x4fb8>
   16d64:	add	r2, ip, #4
   16d68:	cmp	r3, r2
   16d6c:	ldrb	r3, [ip, #2]
   16d70:	str	r2, [r4, #36]	; 0x24
   16d74:	bls	16ba0 <tcgetattr@plt+0x4fb8>
   16d78:	ldrb	r0, [ip, #3]
   16d7c:	ldrb	r2, [ip, #4]
   16d80:	add	ip, ip, #5
   16d84:	orr	r1, r3, r1, lsl #8
   16d88:	orr	r2, r2, r0, lsl #8
   16d8c:	str	ip, [r4, #36]	; 0x24
   16d90:	mov	r0, #31
   16d94:	b	16e98 <tcgetattr@plt+0x52b0>
   16d98:	ldr	r3, [pc, #832]	; 170e0 <tcgetattr@plt+0x54f8>
   16d9c:	ldrb	r3, [r3, #32]
   16da0:	tst	r3, #4
   16da4:	beq	16ba0 <tcgetattr@plt+0x4fb8>
   16da8:	ldr	r1, [pc, #820]	; 170e4 <tcgetattr@plt+0x54fc>
   16dac:	ldr	r0, [r4, #40]	; 0x28
   16db0:	ldr	r3, [r1]
   16db4:	cmp	r2, r0
   16db8:	add	r3, r3, #1
   16dbc:	str	r3, [r1]
   16dc0:	str	r3, [r1, #20]
   16dc4:	bcs	16ba0 <tcgetattr@plt+0x4fb8>
   16dc8:	add	r0, ip, #2
   16dcc:	str	r0, [r4, #36]	; 0x24
   16dd0:	ldrb	r1, [ip, #1]
   16dd4:	cmp	r1, #0
   16dd8:	bne	16ba0 <tcgetattr@plt+0x4fb8>
   16ddc:	mov	r2, #10
   16de0:	bl	11798 <strtol@plt>
   16de4:	ldr	r2, [r4, #40]	; 0x28
   16de8:	mov	r5, r0
   16dec:	ldr	r0, [r4, #36]	; 0x24
   16df0:	b	16dfc <tcgetattr@plt+0x5214>
   16df4:	cmp	r0, r2
   16df8:	bcs	16ba0 <tcgetattr@plt+0x4fb8>
   16dfc:	add	r0, r0, #1
   16e00:	str	r0, [r4, #36]	; 0x24
   16e04:	ldrb	r3, [r0, #-1]
   16e08:	cmp	r3, #44	; 0x2c
   16e0c:	bne	16df4 <tcgetattr@plt+0x520c>
   16e10:	cmp	r0, r2
   16e14:	bcs	16ba0 <tcgetattr@plt+0x4fb8>
   16e18:	mov	r2, #10
   16e1c:	mov	r1, #0
   16e20:	bl	11798 <strtol@plt>
   16e24:	mov	r1, r5
   16e28:	mov	r2, r0
   16e2c:	mov	r0, #32
   16e30:	b	16e98 <tcgetattr@plt+0x52b0>
   16e34:	ldr	r3, [pc, #676]	; 170e0 <tcgetattr@plt+0x54f8>
   16e38:	ldrb	r3, [r3, #34]	; 0x22
   16e3c:	tst	r3, #4
   16e40:	beq	16ba0 <tcgetattr@plt+0x4fb8>
   16e44:	ldr	r3, [r4, #40]	; 0x28
   16e48:	cmp	r2, r3
   16e4c:	bcs	16ba0 <tcgetattr@plt+0x4fb8>
   16e50:	add	r2, ip, #2
   16e54:	cmp	r3, r2
   16e58:	str	r2, [r4, #36]	; 0x24
   16e5c:	bls	16ba0 <tcgetattr@plt+0x4fb8>
   16e60:	ldrb	r0, [ip, #1]
   16e64:	cmp	r0, #3
   16e68:	beq	17098 <tcgetattr@plt+0x54b0>
   16e6c:	cmp	r0, #1
   16e70:	addne	ip, ip, #3
   16e74:	strne	ip, [r4, #36]	; 0x24
   16e78:	bne	16ba0 <tcgetattr@plt+0x4fb8>
   16e7c:	add	r3, ip, #3
   16e80:	str	r3, [r4, #36]	; 0x24
   16e84:	mov	r2, #0
   16e88:	ldr	r3, [pc, #616]	; 170f8 <tcgetattr@plt+0x5510>
   16e8c:	ldrb	ip, [ip, #2]
   16e90:	mov	r1, r2
   16e94:	str	ip, [r3]
   16e98:	add	sp, sp, #8
   16e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16ea0:	b	17c6c <tcgetattr@plt+0x6084>
   16ea4:	str	r3, [r4, #36]	; 0x24
   16ea8:	ldrb	r2, [r3, #-1]
   16eac:	cmp	r2, #3
   16eb0:	cmpne	r2, #0
   16eb4:	beq	16f1c <tcgetattr@plt+0x5334>
   16eb8:	cmp	r3, lr
   16ebc:	add	r3, r3, #1
   16ec0:	bcc	16ea4 <tcgetattr@plt+0x52bc>
   16ec4:	b	16ba0 <tcgetattr@plt+0x4fb8>
   16ec8:	ldr	r1, [pc, #532]	; 170e4 <tcgetattr@plt+0x54fc>
   16ecc:	cmp	r5, #36	; 0x24
   16ed0:	ldr	r2, [r1]
   16ed4:	add	r2, r2, #1
   16ed8:	str	r2, [r1]
   16edc:	streq	r2, [r1, #28]
   16ee0:	strne	r2, [r1, #24]
   16ee4:	bne	16bd0 <tcgetattr@plt+0x4fe8>
   16ee8:	b	16bf0 <tcgetattr@plt+0x5008>
   16eec:	ldr	lr, [pc, #496]	; 170e4 <tcgetattr@plt+0x54fc>
   16ef0:	mov	r2, #1
   16ef4:	ldr	r0, [pc, #512]	; 170fc <tcgetattr@plt+0x5514>
   16ef8:	ldr	ip, [lr]
   16efc:	add	ip, ip, r2
   16f00:	str	ip, [lr]
   16f04:	str	ip, [lr, #32]
   16f08:	strb	r1, [r3]
   16f0c:	ldr	r1, [r4, #36]	; 0x24
   16f10:	add	sp, sp, #8
   16f14:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   16f18:	b	119d8 <setenv@plt>
   16f1c:	cmp	r3, lr
   16f20:	bcs	16ba0 <tcgetattr@plt+0x4fb8>
   16f24:	mov	r1, #0
   16f28:	mov	r8, r1
   16f2c:	mov	r0, r3
   16f30:	mov	ip, r3
   16f34:	mov	r7, #1
   16f38:	add	r6, r3, #1
   16f3c:	str	r6, [r4, #36]	; 0x24
   16f40:	ldrb	r2, [r3]
   16f44:	cmp	r5, #36	; 0x24
   16f48:	mov	r9, r2
   16f4c:	beq	16fb4 <tcgetattr@plt+0x53cc>
   16f50:	cmp	r2, #3
   16f54:	ldrls	pc, [pc, r2, lsl #2]
   16f58:	b	16f84 <tcgetattr@plt+0x539c>
   16f5c:	ldrdeq	r6, [r1], -r8
   16f60:	andeq	r6, r1, r4, asr #31
   16f64:	andeq	r6, r1, ip, ror #30
   16f68:	ldrdeq	r6, [r1], -r8
   16f6c:	cmp	r6, lr
   16f70:	movcs	r3, r6
   16f74:	bcs	16f90 <tcgetattr@plt+0x53a8>
   16f78:	add	r2, r3, #2
   16f7c:	str	r2, [r4, #36]	; 0x24
   16f80:	ldrb	r9, [r3, #1]
   16f84:	strb	r9, [ip]
   16f88:	ldr	r3, [r4, #36]	; 0x24
   16f8c:	add	ip, ip, #1
   16f90:	ldr	lr, [r4, #40]	; 0x28
   16f94:	cmp	lr, r3
   16f98:	bhi	16f38 <tcgetattr@plt+0x5350>
   16f9c:	mov	r3, #0
   16fa0:	cmp	r1, #0
   16fa4:	strb	r3, [ip]
   16fa8:	beq	1708c <tcgetattr@plt+0x54a4>
   16fac:	mov	r2, #1
   16fb0:	b	16f10 <tcgetattr@plt+0x5328>
   16fb4:	cmp	r2, #1
   16fb8:	beq	16fd8 <tcgetattr@plt+0x53f0>
   16fbc:	cmp	r2, #0
   16fc0:	bne	16f50 <tcgetattr@plt+0x5368>
   16fc4:	strb	r8, [ip]
   16fc8:	ldr	ip, [r4, #36]	; 0x24
   16fcc:	mov	r3, ip
   16fd0:	mov	r1, ip
   16fd4:	b	16f90 <tcgetattr@plt+0x53a8>
   16fd8:	cmp	r1, #0
   16fdc:	strb	r8, [ip]
   16fe0:	beq	17084 <tcgetattr@plt+0x549c>
   16fe4:	mov	r2, r7
   16fe8:	bl	119d8 <setenv@plt>
   16fec:	ldr	ip, [r4, #36]	; 0x24
   16ff0:	mov	r1, r8
   16ff4:	mov	r3, ip
   16ff8:	mov	r0, ip
   16ffc:	b	16f90 <tcgetattr@plt+0x53a8>
   17000:	ldr	r3, [r5, #12]
   17004:	ldr	r2, [r5, #16]
   17008:	cmp	r2, r3
   1700c:	beq	170c4 <tcgetattr@plt+0x54dc>
   17010:	mov	r2, #0
   17014:	add	r1, r3, #1
   17018:	str	r1, [r5, #12]
   1701c:	strb	r2, [r3]
   17020:	ldr	r3, [r5, #12]
   17024:	ldr	r0, [r5, #8]
   17028:	ldr	ip, [r5, #24]
   1702c:	cmp	r0, r3
   17030:	ldr	r1, [r5, #16]
   17034:	ldrbeq	r2, [r5, #40]	; 0x28
   17038:	add	r3, r3, ip
   1703c:	bic	r3, r3, ip
   17040:	orreq	r2, r2, #2
   17044:	strbeq	r2, [r5, #40]	; 0x28
   17048:	ldr	r2, [r5, #4]
   1704c:	str	r3, [r5, #12]
   17050:	sub	ip, r3, r2
   17054:	sub	r2, r1, r2
   17058:	cmp	ip, r2
   1705c:	movhi	r3, r1
   17060:	strhi	r1, [r5, #12]
   17064:	str	r3, [r5, #8]
   17068:	bl	1b04c <_obstack_memory_used@@Base+0xa08>
   1706c:	mov	r1, #0
   17070:	str	r0, [r7]
   17074:	ldr	r0, [pc, #120]	; 170f4 <tcgetattr@plt+0x550c>
   17078:	add	sp, sp, #8
   1707c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   17080:	b	1a5d0 <_obstack_free@@Base>
   17084:	bl	11b94 <unsetenv@plt>
   17088:	b	16fec <tcgetattr@plt+0x5404>
   1708c:	add	sp, sp, #8
   17090:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   17094:	b	11b94 <unsetenv@plt>
   17098:	mov	r0, #1
   1709c:	bl	181c8 <tcgetattr@plt+0x65e0>
   170a0:	ldr	r3, [r4, #36]	; 0x24
   170a4:	ldr	r1, [r4, #40]	; 0x28
   170a8:	mov	r0, r3
   170ac:	sub	r1, r1, r3
   170b0:	bl	18594 <tcgetattr@plt+0x69ac>
   170b4:	mov	r0, #0
   170b8:	add	sp, sp, #8
   170bc:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   170c0:	b	18228 <tcgetattr@plt+0x6640>
   170c4:	mov	r1, #1
   170c8:	ldr	r0, [pc, #36]	; 170f4 <tcgetattr@plt+0x550c>
   170cc:	bl	1a484 <_obstack_newchunk@@Base>
   170d0:	ldr	r3, [r5, #12]
   170d4:	b	17010 <tcgetattr@plt+0x5428>
   170d8:	andeq	sl, r3, r0, ror #13
   170dc:	andeq	r2, r3, r0, lsl #9
   170e0:	andeq	sl, r3, r4, lsl #14
   170e4:			; <UNDEFINED> instruction: 0x0003a9b4
   170e8:	andeq	sl, r3, r0, lsl #14
   170ec:	strdeq	sl, [r1], -r4
   170f0:	ldrdeq	fp, [r1], -ip
   170f4:	ldrdeq	sl, [r3], -r8
   170f8:	ldrdeq	sl, [r3], -r8
   170fc:	andeq	r0, r2, r4, lsr #19
   17100:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17104:	ldr	r7, [pc, #1240]	; 175e4 <tcgetattr@plt+0x59fc>
   17108:	ldr	r5, [pc, #1240]	; 175e8 <tcgetattr@plt+0x5a00>
   1710c:	ldr	r6, [pc, #1240]	; 175ec <tcgetattr@plt+0x5a04>
   17110:	ldr	sl, [pc, #1240]	; 175f0 <tcgetattr@plt+0x5a08>
   17114:	ldr	r9, [pc, #1240]	; 175f4 <tcgetattr@plt+0x5a0c>
   17118:	sub	r8, r7, #512	; 0x200
   1711c:	bl	13c5c <tcgetattr@plt+0x2074>
   17120:	mov	r4, r0
   17124:	bl	13d04 <tcgetattr@plt+0x211c>
   17128:	cmp	r4, #0
   1712c:	movle	r3, #0
   17130:	movgt	r3, #1
   17134:	cmp	r0, #0
   17138:	movne	r3, #0
   1713c:	cmp	r3, #0
   17140:	beq	17300 <tcgetattr@plt+0x5718>
   17144:	mov	r0, #0
   17148:	bl	13cb4 <tcgetattr@plt+0x20cc>
   1714c:	ldr	r2, [r5, #44]	; 0x2c
   17150:	mov	r4, r0
   17154:	cmp	r2, #8
   17158:	ldrls	pc, [pc, r2, lsl #2]
   1715c:	b	172e0 <tcgetattr@plt+0x56f8>
   17160:	andeq	r7, r1, r4, asr r2
   17164:	andeq	r7, r1, r0, ror #3
   17168:	andeq	r7, r1, r0, asr #4
   1716c:			; <UNDEFINED> instruction: 0x000172b8
   17170:	andeq	r7, r1, r4, lsl #3
   17174:	andeq	r7, r1, r8, lsr #5
   17178:	muleq	r1, r8, r2
   1717c:	andeq	r7, r1, r8, lsl #5
   17180:	andeq	r7, r1, r8, ror r2
   17184:	cmp	r0, #240	; 0xf0
   17188:	ldr	r3, [r6, #36]	; 0x24
   1718c:	beq	17338 <tcgetattr@plt+0x5750>
   17190:	cmp	r0, #255	; 0xff
   17194:	beq	1757c <tcgetattr@plt+0x5994>
   17198:	cmp	r3, r7
   1719c:	bcs	171c8 <tcgetattr@plt+0x55e0>
   171a0:	mvn	r2, #0
   171a4:	add	r1, r3, #1
   171a8:	str	r1, [r6, #36]	; 0x24
   171ac:	strb	r2, [r3]
   171b0:	ldr	r3, [r6, #36]	; 0x24
   171b4:	cmp	r3, r7
   171b8:	addcc	r2, r3, #1
   171bc:	strcc	r2, [r6, #36]	; 0x24
   171c0:	strbcc	r0, [r3]
   171c4:	ldrcc	r3, [r6, #36]	; 0x24
   171c8:	sub	r3, r3, #2
   171cc:	str	r3, [r6, #40]	; 0x28
   171d0:	str	r8, [r6, #36]	; 0x24
   171d4:	bl	16a9c <tcgetattr@plt+0x4eb4>
   171d8:	mov	r3, #1
   171dc:	str	r3, [r5, #44]	; 0x2c
   171e0:	sub	r3, r4, #236	; 0xec
   171e4:	cmp	r3, #19
   171e8:	ldrls	pc, [pc, r3, lsl #2]
   171ec:	b	1728c <tcgetattr@plt+0x56a4>
   171f0:			; <UNDEFINED> instruction: 0x000173b8
   171f4:	andeq	r7, r1, ip, asr #7
   171f8:	andeq	r7, r1, r4, lsr #7
   171fc:	andeq	r7, r1, ip, lsr #7
   17200:	andeq	r7, r1, ip, lsl #5
   17204:	andeq	r7, r1, ip, lsl #5
   17208:	andeq	r7, r1, r4, ror #7
   1720c:	andeq	r7, r1, r8, lsl #7
   17210:	andeq	r7, r1, ip, lsr #8
   17214:	andeq	r7, r1, r4, ror #8
   17218:	andeq	r7, r1, r4, asr r5
   1721c:	andeq	r7, r1, r0, ror #9
   17220:	andeq	r7, r1, r0, ror #9
   17224:	andeq	r7, r1, ip, lsl #5
   17228:	andeq	r7, r1, r0, lsr #10
   1722c:	ldrdeq	r7, [r1], -r4
   17230:	andeq	r7, r1, r8, asr #10
   17234:	andeq	r7, r1, r0, lsr r5
   17238:	andeq	r7, r1, ip, lsr r5
   1723c:	andeq	r7, r1, r0, asr #7
   17240:	mov	r3, #0
   17244:	cmp	r0, #10
   17248:	cmpne	r0, #0
   1724c:	str	r3, [r5, #44]	; 0x2c
   17250:	beq	1711c <tcgetattr@plt+0x5534>
   17254:	cmp	r4, #255	; 0xff
   17258:	moveq	r3, #1
   1725c:	streq	r3, [r5, #44]	; 0x2c
   17260:	beq	1711c <tcgetattr@plt+0x5534>
   17264:	cmp	r4, #13
   17268:	beq	17304 <tcgetattr@plt+0x571c>
   1726c:	mov	r0, r4
   17270:	bl	13d2c <tcgetattr@plt+0x2144>
   17274:	b	1711c <tcgetattr@plt+0x5534>
   17278:	bl	16594 <tcgetattr@plt+0x49ac>
   1727c:	mov	r3, #0
   17280:	str	r3, [r5, #44]	; 0x2c
   17284:	b	1711c <tcgetattr@plt+0x5534>
   17288:	bl	160b4 <tcgetattr@plt+0x44cc>
   1728c:	mov	r3, #0
   17290:	str	r3, [r5, #44]	; 0x2c
   17294:	b	1711c <tcgetattr@plt+0x5534>
   17298:	bl	15df8 <tcgetattr@plt+0x4210>
   1729c:	mov	r3, #0
   172a0:	str	r3, [r5, #44]	; 0x2c
   172a4:	b	1711c <tcgetattr@plt+0x5534>
   172a8:	bl	162e4 <tcgetattr@plt+0x46fc>
   172ac:	mov	r3, #0
   172b0:	str	r3, [r5, #44]	; 0x2c
   172b4:	b	1711c <tcgetattr@plt+0x5534>
   172b8:	cmp	r0, #255	; 0xff
   172bc:	moveq	r3, #4
   172c0:	streq	r3, [r5, #44]	; 0x2c
   172c4:	beq	1711c <tcgetattr@plt+0x5534>
   172c8:	ldr	r3, [r6, #36]	; 0x24
   172cc:	cmp	r3, r7
   172d0:	addcc	r2, r3, #1
   172d4:	strcc	r2, [r6, #36]	; 0x24
   172d8:	strbcc	r0, [r3]
   172dc:	b	1711c <tcgetattr@plt+0x5534>
   172e0:	ldr	r1, [pc, #784]	; 175f8 <tcgetattr@plt+0x5a10>
   172e4:	mov	r0, #3
   172e8:	bl	11aec <syslog@plt>
   172ec:	ldr	r1, [r5, #44]	; 0x2c
   172f0:	ldr	r0, [pc, #768]	; 175f8 <tcgetattr@plt+0x5a10>
   172f4:	bl	117b0 <printf@plt>
   172f8:	mov	r0, #1
   172fc:	bl	119a8 <exit@plt>
   17300:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17304:	ldrb	r3, [r9]
   17308:	tst	r3, #4
   1730c:	bne	1726c <tcgetattr@plt+0x5684>
   17310:	mov	r0, #1
   17314:	bl	13cb4 <tcgetattr@plt+0x20cc>
   17318:	ldr	r3, [pc, #732]	; 175fc <tcgetattr@plt+0x5a14>
   1731c:	ldr	r3, [r3]
   17320:	cmp	r3, #0
   17324:	mov	fp, r0
   17328:	bne	1759c <tcgetattr@plt+0x59b4>
   1732c:	mov	r3, #2
   17330:	str	r3, [r5, #44]	; 0x2c
   17334:	b	1726c <tcgetattr@plt+0x5684>
   17338:	cmp	r3, r7
   1733c:	bcs	1736c <tcgetattr@plt+0x5784>
   17340:	add	r1, r3, #1
   17344:	mvn	r2, #0
   17348:	str	r1, [r6, #36]	; 0x24
   1734c:	strb	r2, [r3]
   17350:	ldr	r3, [r6, #36]	; 0x24
   17354:	cmp	r3, r7
   17358:	addcc	r1, r3, #1
   1735c:	mvncc	r2, #15
   17360:	strcc	r1, [r6, #36]	; 0x24
   17364:	strbcc	r2, [r3]
   17368:	ldrcc	r3, [r6, #36]	; 0x24
   1736c:	sub	r3, r3, #2
   17370:	str	r3, [r6, #40]	; 0x28
   17374:	str	r8, [r6, #36]	; 0x24
   17378:	bl	16a9c <tcgetattr@plt+0x4eb4>
   1737c:	mov	r3, #0
   17380:	str	r3, [r5, #44]	; 0x2c
   17384:	b	1711c <tcgetattr@plt+0x5534>
   17388:	ldr	r3, [pc, #624]	; 17600 <tcgetattr@plt+0x5a18>
   1738c:	ldr	r3, [r3]
   17390:	cmp	r3, #0
   17394:	ble	173a4 <tcgetattr@plt+0x57bc>
   17398:	mov	r1, #243	; 0xf3
   1739c:	ldr	r0, [pc, #608]	; 17604 <tcgetattr@plt+0x5a1c>
   173a0:	bl	14a1c <tcgetattr@plt+0x2e34>
   173a4:	bl	15ba0 <tcgetattr@plt+0x3fb8>
   173a8:	b	1728c <tcgetattr@plt+0x56a4>
   173ac:	ldrb	r3, [r9, #25]
   173b0:	tst	r3, #4
   173b4:	beq	1728c <tcgetattr@plt+0x56a4>
   173b8:	bl	15bcc <tcgetattr@plt+0x3fe4>
   173bc:	b	1728c <tcgetattr@plt+0x56a4>
   173c0:	mov	r0, #255	; 0xff
   173c4:	bl	13d2c <tcgetattr@plt+0x2144>
   173c8:	b	1728c <tcgetattr@plt+0x56a4>
   173cc:	bl	158c0 <tcgetattr@plt+0x3cd8>
   173d0:	ldr	r3, [sl, #76]	; 0x4c
   173d4:	cmp	r3, #0
   173d8:	beq	175dc <tcgetattr@plt+0x59f4>
   173dc:	ldrb	r0, [r3]
   173e0:	b	173c4 <tcgetattr@plt+0x57dc>
   173e4:	ldr	r3, [pc, #532]	; 17600 <tcgetattr@plt+0x5a18>
   173e8:	ldr	r3, [r3]
   173ec:	cmp	r3, #0
   173f0:	ble	17400 <tcgetattr@plt+0x5818>
   173f4:	mov	r1, #242	; 0xf2
   173f8:	ldr	r0, [pc, #516]	; 17604 <tcgetattr@plt+0x5a1c>
   173fc:	bl	14a1c <tcgetattr@plt+0x2e34>
   17400:	ldr	r3, [pc, #512]	; 17608 <tcgetattr@plt+0x5a20>
   17404:	ldr	r0, [r3]
   17408:	bl	14100 <tcgetattr@plt+0x2518>
   1740c:	ldr	r2, [pc, #504]	; 1760c <tcgetattr@plt+0x5a24>
   17410:	ldr	r1, [pc, #504]	; 17610 <tcgetattr@plt+0x5a28>
   17414:	ldr	r3, [r2]
   17418:	add	r3, r3, #1
   1741c:	str	r3, [r2]
   17420:	str	r3, [r2, #40]	; 0x28
   17424:	str	r0, [r1]
   17428:	b	1728c <tcgetattr@plt+0x56a4>
   1742c:	ldr	r3, [pc, #460]	; 17600 <tcgetattr@plt+0x5a18>
   17430:	ldr	r3, [r3]
   17434:	cmp	r3, #0
   17438:	ble	17448 <tcgetattr@plt+0x5860>
   1743c:	mov	r1, #244	; 0xf4
   17440:	ldr	r0, [pc, #444]	; 17604 <tcgetattr@plt+0x5a1c>
   17444:	bl	14a1c <tcgetattr@plt+0x2e34>
   17448:	bl	158c0 <tcgetattr@plt+0x3cd8>
   1744c:	bl	132b4 <tcgetattr@plt+0x16cc>
   17450:	ldr	r3, [sl, #28]
   17454:	cmp	r3, #0
   17458:	moveq	r0, #127	; 0x7f
   1745c:	bne	173dc <tcgetattr@plt+0x57f4>
   17460:	b	173c4 <tcgetattr@plt+0x57dc>
   17464:	ldr	r4, [pc, #404]	; 17600 <tcgetattr@plt+0x5a18>
   17468:	ldr	r3, [r4]
   1746c:	cmp	r3, #0
   17470:	ble	17480 <tcgetattr@plt+0x5898>
   17474:	mov	r1, #245	; 0xf5
   17478:	ldr	r0, [pc, #388]	; 17604 <tcgetattr@plt+0x5a1c>
   1747c:	bl	14a1c <tcgetattr@plt+0x2e34>
   17480:	bl	158c0 <tcgetattr@plt+0x3cd8>
   17484:	bl	132b4 <tcgetattr@plt+0x16cc>
   17488:	ldr	r3, [sl, #36]	; 0x24
   1748c:	cmp	r3, #0
   17490:	beq	174a0 <tcgetattr@plt+0x58b8>
   17494:	ldrb	r0, [r3]
   17498:	cmp	r0, #0
   1749c:	bne	175d4 <tcgetattr@plt+0x59ec>
   174a0:	bl	13f04 <tcgetattr@plt+0x231c>
   174a4:	mov	r2, #242	; 0xf2
   174a8:	mov	r1, #255	; 0xff
   174ac:	ldr	r0, [pc, #352]	; 17614 <tcgetattr@plt+0x5a2c>
   174b0:	bl	143d8 <tcgetattr@plt+0x27f0>
   174b4:	bl	13c20 <tcgetattr@plt+0x2038>
   174b8:	ldr	r3, [r4]
   174bc:	cmp	r3, #0
   174c0:	ble	1728c <tcgetattr@plt+0x56a4>
   174c4:	mov	r1, #242	; 0xf2
   174c8:	ldr	r0, [pc, #328]	; 17618 <tcgetattr@plt+0x5a30>
   174cc:	bl	14a1c <tcgetattr@plt+0x2e34>
   174d0:	b	1728c <tcgetattr@plt+0x56a4>
   174d4:	mov	r3, #5
   174d8:	str	r3, [r5, #44]	; 0x2c
   174dc:	b	1711c <tcgetattr@plt+0x5534>
   174e0:	ldr	r3, [pc, #280]	; 17600 <tcgetattr@plt+0x5a18>
   174e4:	ldr	r3, [r3]
   174e8:	cmp	r3, #0
   174ec:	ble	174fc <tcgetattr@plt+0x5914>
   174f0:	mov	r1, r4
   174f4:	ldr	r0, [pc, #264]	; 17604 <tcgetattr@plt+0x5a1c>
   174f8:	bl	14a1c <tcgetattr@plt+0x2e34>
   174fc:	bl	158c0 <tcgetattr@plt+0x3cd8>
   17500:	bl	132b4 <tcgetattr@plt+0x16cc>
   17504:	cmp	r4, #247	; 0xf7
   17508:	ldreq	r3, [sl, #84]	; 0x54
   1750c:	ldrne	r3, [sl, #92]	; 0x5c
   17510:	ldrb	r0, [r3]
   17514:	cmp	r0, #0
   17518:	beq	1728c <tcgetattr@plt+0x56a4>
   1751c:	b	173c4 <tcgetattr@plt+0x57dc>
   17520:	mov	r3, #3
   17524:	str	r8, [r6, #36]	; 0x24
   17528:	str	r3, [r5, #44]	; 0x2c
   1752c:	b	1711c <tcgetattr@plt+0x5534>
   17530:	mov	r3, #7
   17534:	str	r3, [r5, #44]	; 0x2c
   17538:	b	1711c <tcgetattr@plt+0x5534>
   1753c:	mov	r3, #8
   17540:	str	r3, [r5, #44]	; 0x2c
   17544:	b	1711c <tcgetattr@plt+0x5534>
   17548:	mov	r3, #6
   1754c:	str	r3, [r5, #44]	; 0x2c
   17550:	b	1711c <tcgetattr@plt+0x5534>
   17554:	ldr	r3, [pc, #164]	; 17600 <tcgetattr@plt+0x5a18>
   17558:	ldr	r3, [r3]
   1755c:	cmp	r3, #0
   17560:	ble	17570 <tcgetattr@plt+0x5988>
   17564:	mov	r1, #246	; 0xf6
   17568:	ldr	r0, [pc, #148]	; 17604 <tcgetattr@plt+0x5a1c>
   1756c:	bl	14a1c <tcgetattr@plt+0x2e34>
   17570:	ldr	r0, [pc, #164]	; 1761c <tcgetattr@plt+0x5a34>
   17574:	bl	143d8 <tcgetattr@plt+0x27f0>
   17578:	b	1728c <tcgetattr@plt+0x56a4>
   1757c:	cmp	r3, r7
   17580:	addcc	r1, r3, #1
   17584:	mvncc	r2, #0
   17588:	strcc	r1, [r6, #36]	; 0x24
   1758c:	strbcc	r2, [r3]
   17590:	mov	r3, #3
   17594:	str	r3, [r5, #44]	; 0x2c
   17598:	b	1711c <tcgetattr@plt+0x5534>
   1759c:	bl	13c5c <tcgetattr@plt+0x2074>
   175a0:	cmp	r0, #0
   175a4:	ble	1732c <tcgetattr@plt+0x5744>
   175a8:	cmp	fp, #10
   175ac:	beq	175c4 <tcgetattr@plt+0x59dc>
   175b0:	cmp	fp, #0
   175b4:	bne	1732c <tcgetattr@plt+0x5744>
   175b8:	bl	132a0 <tcgetattr@plt+0x16b8>
   175bc:	cmp	r0, #0
   175c0:	beq	1732c <tcgetattr@plt+0x5744>
   175c4:	mov	r0, #0
   175c8:	bl	13cb4 <tcgetattr@plt+0x20cc>
   175cc:	mov	r4, #10
   175d0:	b	1726c <tcgetattr@plt+0x5684>
   175d4:	bl	13d2c <tcgetattr@plt+0x2144>
   175d8:	b	174a0 <tcgetattr@plt+0x58b8>
   175dc:	mov	r0, #26
   175e0:	b	173c4 <tcgetattr@plt+0x57dc>
   175e4:	andeq	sl, r3, r4, ror #28
   175e8:	ldrdeq	sl, [r3], -r8
   175ec:	andeq	r2, r3, r0, lsl #9
   175f0:	andeq	sl, r3, ip, lsl #18
   175f4:	andeq	sl, r3, r4, lsl #14
   175f8:	andeq	r0, r2, r8, asr #19
   175fc:			; <UNDEFINED> instruction: 0x0003a9b0
   17600:	andeq	sl, r3, r0, ror #13
   17604:	andeq	r0, r2, ip, lsr #19
   17608:	andeq	sl, r3, ip, lsr #19
   1760c:			; <UNDEFINED> instruction: 0x0003a9b4
   17610:	ldrdeq	sl, [r3], -ip
   17614:	andeq	pc, r1, r8, ror #28
   17618:	andeq	pc, r1, r0, asr lr	; <UNPREDICTABLE>
   1761c:			; <UNDEFINED> instruction: 0x000209bc
   17620:	push	{r4, lr}
   17624:	sub	sp, sp, #24
   17628:	bl	130cc <tcgetattr@plt+0x14e4>
   1762c:	ldr	r4, [pc, #256]	; 17734 <tcgetattr@plt+0x5b4c>
   17630:	ldr	r3, [r4]
   17634:	cmp	r0, r3
   17638:	beq	176a8 <tcgetattr@plt+0x5ac0>
   1763c:	bl	130cc <tcgetattr@plt+0x14e4>
   17640:	mov	r2, #255	; 0xff
   17644:	mov	r1, #240	; 0xf0
   17648:	mov	r3, #33	; 0x21
   1764c:	str	r1, [sp, #12]
   17650:	str	r2, [sp, #8]
   17654:	str	r3, [sp]
   17658:	ldr	r1, [pc, #216]	; 17738 <tcgetattr@plt+0x5b50>
   1765c:	mov	r3, #250	; 0xfa
   17660:	mov	ip, r0
   17664:	adds	r0, r0, #0
   17668:	movne	r0, #1
   1766c:	str	r0, [sp, #4]
   17670:	str	ip, [r4]
   17674:	add	r0, sp, #16
   17678:	bl	11b04 <sprintf@plt>
   1767c:	add	r0, sp, #16
   17680:	mov	r1, #7
   17684:	bl	14460 <tcgetattr@plt+0x2878>
   17688:	ldr	r3, [pc, #172]	; 1773c <tcgetattr@plt+0x5b54>
   1768c:	ldr	r3, [r3]
   17690:	cmp	r3, #0
   17694:	ble	176a8 <tcgetattr@plt+0x5ac0>
   17698:	mov	r2, #5
   1769c:	add	r1, sp, #18
   176a0:	mov	r0, #62	; 0x3e
   176a4:	bl	14a7c <tcgetattr@plt+0x2e94>
   176a8:	bl	130e4 <tcgetattr@plt+0x14fc>
   176ac:	ldr	r4, [pc, #140]	; 17740 <tcgetattr@plt+0x5b58>
   176b0:	ldr	r3, [r4]
   176b4:	cmp	r0, r3
   176b8:	beq	1772c <tcgetattr@plt+0x5b44>
   176bc:	bl	130e4 <tcgetattr@plt+0x14fc>
   176c0:	mov	r2, #255	; 0xff
   176c4:	mov	r1, #240	; 0xf0
   176c8:	mov	r3, #33	; 0x21
   176cc:	str	r1, [sp, #12]
   176d0:	str	r2, [sp, #8]
   176d4:	str	r3, [sp]
   176d8:	ldr	r1, [pc, #88]	; 17738 <tcgetattr@plt+0x5b50>
   176dc:	mov	r3, #250	; 0xfa
   176e0:	cmp	r0, #0
   176e4:	mov	ip, r0
   176e8:	movne	r0, #2
   176ec:	moveq	r0, #3
   176f0:	str	r0, [sp, #4]
   176f4:	str	ip, [r4]
   176f8:	add	r0, sp, #16
   176fc:	bl	11b04 <sprintf@plt>
   17700:	add	r0, sp, #16
   17704:	mov	r1, #7
   17708:	bl	14460 <tcgetattr@plt+0x2878>
   1770c:	ldr	r3, [pc, #40]	; 1773c <tcgetattr@plt+0x5b54>
   17710:	ldr	r3, [r3]
   17714:	cmp	r3, #0
   17718:	ble	1772c <tcgetattr@plt+0x5b44>
   1771c:	mov	r2, #5
   17720:	add	r1, sp, #18
   17724:	mov	r0, #62	; 0x3e
   17728:	bl	14a7c <tcgetattr@plt+0x2e94>
   1772c:	add	sp, sp, #24
   17730:	pop	{r4, pc}
   17734:	ldrdeq	sl, [r3], -r4
   17738:	andeq	pc, r1, r0, ror #28
   1773c:	andeq	sl, r3, r0, ror #13
   17740:	andeq	sl, r3, r4, ror #23
   17744:	ldr	r3, [pc, #12]	; 17758 <tcgetattr@plt+0x5b70>
   17748:	ldrb	r3, [r3, #33]	; 0x21
   1774c:	tst	r3, #4
   17750:	bxeq	lr
   17754:	b	17620 <tcgetattr@plt+0x5a38>
   17758:	andeq	sl, r3, r4, lsl #14
   1775c:	push	{r4, lr}
   17760:	sub	sp, sp, #8
   17764:	ldr	r4, [pc, #108]	; 177d8 <tcgetattr@plt+0x5bf0>
   17768:	ldr	r1, [r4]
   1776c:	cmn	r1, #1
   17770:	beq	1778c <tcgetattr@plt+0x5ba4>
   17774:	ldr	r2, [r4, #4]
   17778:	mov	r0, #32
   1777c:	bl	17c6c <tcgetattr@plt+0x6084>
   17780:	mov	r3, #0
   17784:	str	r3, [r4, #4]
   17788:	str	r3, [r4]
   1778c:	ldr	r3, [pc, #72]	; 177dc <tcgetattr@plt+0x5bf4>
   17790:	ldr	ip, [r3]
   17794:	ldr	r3, [r3, #4]
   17798:	cmp	ip, #0
   1779c:	bne	177a8 <tcgetattr@plt+0x5bc0>
   177a0:	cmp	r3, #0
   177a4:	beq	177cc <tcgetattr@plt+0x5be4>
   177a8:	ldr	r2, [pc, #48]	; 177e0 <tcgetattr@plt+0x5bf8>
   177ac:	mov	lr, #0
   177b0:	ldr	r1, [pc, #44]	; 177e4 <tcgetattr@plt+0x5bfc>
   177b4:	ldr	r0, [r2]
   177b8:	mov	r2, sp
   177bc:	strh	ip, [sp, #2]
   177c0:	strh	r3, [sp]
   177c4:	str	lr, [sp, #4]
   177c8:	bl	1a2fc <argp_parse@@Base+0xfa0>
   177cc:	bl	18658 <tcgetattr@plt+0x6a70>
   177d0:	add	sp, sp, #8
   177d4:	pop	{r4, pc}
   177d8:	andeq	r2, r3, ip, lsr #9
   177dc:	andeq	sl, r3, r8, lsl #12
   177e0:	ldrdeq	sl, [r3], -r0
   177e4:	andeq	r5, r0, r4, lsl r4
   177e8:	push	{r4, r5, r6, r7, r8, r9, lr}
   177ec:	sub	sp, sp, #36	; 0x24
   177f0:	bl	13188 <tcgetattr@plt+0x15a0>
   177f4:	ldr	r5, [pc, #1096]	; 17c44 <tcgetattr@plt+0x605c>
   177f8:	cmp	r0, #0
   177fc:	beq	17910 <tcgetattr@plt+0x5d28>
   17800:	ldrb	r0, [r5]
   17804:	ands	r0, r0, #8
   17808:	beq	17ae4 <tcgetattr@plt+0x5efc>
   1780c:	bl	131a4 <tcgetattr@plt+0x15bc>
   17810:	cmp	r0, #0
   17814:	beq	178e8 <tcgetattr@plt+0x5d00>
   17818:	ldrb	r0, [r5]
   1781c:	ands	r0, r0, #2
   17820:	beq	17af0 <tcgetattr@plt+0x5f08>
   17824:	ldrb	r3, [r5, #33]	; 0x21
   17828:	tst	r3, #4
   1782c:	bne	17908 <tcgetattr@plt+0x5d20>
   17830:	bl	13084 <tcgetattr@plt+0x149c>
   17834:	ldr	r3, [pc, #1036]	; 17c48 <tcgetattr@plt+0x6060>
   17838:	ldr	r6, [pc, #1036]	; 17c4c <tcgetattr@plt+0x6064>
   1783c:	ldr	r3, [r3]
   17840:	cmp	r3, #0
   17844:	mov	r4, r0
   17848:	str	r0, [r6]
   1784c:	beq	17870 <tcgetattr@plt+0x5c88>
   17850:	ldr	r3, [pc, #1016]	; 17c50 <tcgetattr@plt+0x6068>
   17854:	ldr	r3, [r3]
   17858:	adds	r3, r3, #0
   1785c:	movne	r3, #1
   17860:	cmp	r0, #0
   17864:	movne	r3, #0
   17868:	cmp	r3, #0
   1786c:	bne	17afc <tcgetattr@plt+0x5f14>
   17870:	cmp	r4, #0
   17874:	bne	179a0 <tcgetattr@plt+0x5db8>
   17878:	ldr	r8, [pc, #980]	; 17c54 <tcgetattr@plt+0x606c>
   1787c:	ldr	r7, [pc, #972]	; 17c50 <tcgetattr@plt+0x6068>
   17880:	ldr	r3, [r7]
   17884:	cmp	r3, #0
   17888:	bne	17928 <tcgetattr@plt+0x5d40>
   1788c:	ldr	r1, [r8]
   17890:	cmp	r1, #4
   17894:	beq	179d4 <tcgetattr@plt+0x5dec>
   17898:	cmp	r1, #1
   1789c:	beq	17b28 <tcgetattr@plt+0x5f40>
   178a0:	ldr	r3, [r6]
   178a4:	cmp	r3, #0
   178a8:	beq	17984 <tcgetattr@plt+0x5d9c>
   178ac:	ldr	r7, [pc, #924]	; 17c50 <tcgetattr@plt+0x6068>
   178b0:	ldr	r2, [r7]
   178b4:	cmp	r2, #0
   178b8:	bne	17a3c <tcgetattr@plt+0x5e54>
   178bc:	cmp	r1, #1
   178c0:	beq	17bac <tcgetattr@plt+0x5fc4>
   178c4:	cmp	r1, #4
   178c8:	beq	17bbc <tcgetattr@plt+0x5fd4>
   178cc:	cmp	r4, #0
   178d0:	str	r3, [r7]
   178d4:	beq	17958 <tcgetattr@plt+0x5d70>
   178d8:	mov	r1, #1
   178dc:	mov	r0, r1
   178e0:	bl	15dac <tcgetattr@plt+0x41c4>
   178e4:	b	17958 <tcgetattr@plt+0x5d70>
   178e8:	ldrb	r3, [r5]
   178ec:	tst	r3, #2
   178f0:	beq	17824 <tcgetattr@plt+0x5c3c>
   178f4:	mov	r1, #1
   178f8:	bl	16298 <tcgetattr@plt+0x46b0>
   178fc:	ldrb	r3, [r5, #33]	; 0x21
   17900:	tst	r3, #4
   17904:	beq	17830 <tcgetattr@plt+0x5c48>
   17908:	bl	17620 <tcgetattr@plt+0x5a38>
   1790c:	b	17830 <tcgetattr@plt+0x5c48>
   17910:	ldrb	r3, [r5]
   17914:	tst	r3, #8
   17918:	beq	1780c <tcgetattr@plt+0x5c24>
   1791c:	mov	r1, #1
   17920:	bl	15d60 <tcgetattr@plt+0x4178>
   17924:	b	1780c <tcgetattr@plt+0x5c24>
   17928:	ldr	r3, [r8]
   1792c:	cmp	r3, #4
   17930:	beq	17b9c <tcgetattr@plt+0x5fb4>
   17934:	cmp	r3, #1
   17938:	beq	17b78 <tcgetattr@plt+0x5f90>
   1793c:	mov	r1, #1
   17940:	mov	r0, r1
   17944:	bl	15dac <tcgetattr@plt+0x41c4>
   17948:	ldr	r3, [r6]
   1794c:	str	r3, [r7]
   17950:	cmp	r4, #0
   17954:	bne	178d8 <tcgetattr@plt+0x5cf0>
   17958:	ldr	r3, [pc, #760]	; 17c58 <tcgetattr@plt+0x6070>
   1795c:	ldr	r2, [r3, #8]
   17960:	cmp	r2, #0
   17964:	bne	17974 <tcgetattr@plt+0x5d8c>
   17968:	mov	r2, #1
   1796c:	str	r2, [r3, #8]
   17970:	bl	1775c <tcgetattr@plt+0x5b74>
   17974:	bl	142b4 <tcgetattr@plt+0x26cc>
   17978:	bl	1336c <tcgetattr@plt+0x1784>
   1797c:	add	sp, sp, #36	; 0x24
   17980:	pop	{r4, r5, r6, r7, r8, r9, pc}
   17984:	cmp	r1, #3
   17988:	ble	17950 <tcgetattr@plt+0x5d68>
   1798c:	ldr	r3, [pc, #700]	; 17c50 <tcgetattr@plt+0x6068>
   17990:	ldr	r3, [r3]
   17994:	cmp	r3, #0
   17998:	beq	17950 <tcgetattr@plt+0x5d68>
   1799c:	b	17a44 <tcgetattr@plt+0x5e5c>
   179a0:	bl	130b8 <tcgetattr@plt+0x14d0>
   179a4:	cmp	r0, #0
   179a8:	moveq	r4, #1
   179ac:	bne	17b54 <tcgetattr@plt+0x5f6c>
   179b0:	ldr	r8, [pc, #668]	; 17c54 <tcgetattr@plt+0x606c>
   179b4:	ldr	r1, [r8]
   179b8:	cmp	r1, #3
   179bc:	beq	17b14 <tcgetattr@plt+0x5f2c>
   179c0:	ldr	r3, [r6]
   179c4:	cmp	r3, #0
   179c8:	beq	1787c <tcgetattr@plt+0x5c94>
   179cc:	cmp	r1, #4
   179d0:	bne	17898 <tcgetattr@plt+0x5cb0>
   179d4:	ldr	r9, [pc, #640]	; 17c5c <tcgetattr@plt+0x6074>
   179d8:	mov	r3, #0
   179dc:	str	r3, [r9]
   179e0:	bl	131bc <tcgetattr@plt+0x15d4>
   179e4:	cmp	r0, #0
   179e8:	ldrne	r3, [r9]
   179ec:	orrne	r3, r3, #1
   179f0:	strne	r3, [r9]
   179f4:	bl	131d0 <tcgetattr@plt+0x15e8>
   179f8:	cmp	r0, #0
   179fc:	ldrne	r3, [r9]
   17a00:	orrne	r3, r3, #2
   17a04:	strne	r3, [r9]
   17a08:	bl	13224 <tcgetattr@plt+0x163c>
   17a0c:	cmp	r0, #0
   17a10:	ldrne	r3, [r9]
   17a14:	orrne	r3, r3, #8
   17a18:	strne	r3, [r9]
   17a1c:	bl	13264 <tcgetattr@plt+0x167c>
   17a20:	cmp	r0, #0
   17a24:	beq	17b4c <tcgetattr@plt+0x5f64>
   17a28:	ldr	r3, [r9]
   17a2c:	ldr	r1, [r8]
   17a30:	orr	r3, r3, #16
   17a34:	str	r3, [r9]
   17a38:	b	178a0 <tcgetattr@plt+0x5cb8>
   17a3c:	cmp	r1, #3
   17a40:	ble	17950 <tcgetattr@plt+0x5d68>
   17a44:	ldrb	r3, [r5, #34]	; 0x22
   17a48:	tst	r3, #4
   17a4c:	beq	17950 <tcgetattr@plt+0x5d68>
   17a50:	ldr	r9, [pc, #516]	; 17c5c <tcgetattr@plt+0x6074>
   17a54:	ldr	r5, [pc, #516]	; 17c60 <tcgetattr@plt+0x6078>
   17a58:	ldr	r3, [r9]
   17a5c:	ldr	r2, [r5]
   17a60:	cmp	r3, r2
   17a64:	beq	17acc <tcgetattr@plt+0x5ee4>
   17a68:	mov	ip, #1
   17a6c:	mov	r1, #34	; 0x22
   17a70:	mov	lr, #240	; 0xf0
   17a74:	mov	r2, #255	; 0xff
   17a78:	stm	sp, {r1, ip}
   17a7c:	str	r3, [sp, #8]
   17a80:	str	lr, [sp, #16]
   17a84:	mov	r3, #250	; 0xfa
   17a88:	str	r2, [sp, #12]
   17a8c:	ldr	r1, [pc, #464]	; 17c64 <tcgetattr@plt+0x607c>
   17a90:	add	r0, sp, #24
   17a94:	bl	11b04 <sprintf@plt>
   17a98:	add	r0, sp, #24
   17a9c:	mov	r1, #8
   17aa0:	bl	14460 <tcgetattr@plt+0x2878>
   17aa4:	ldr	r3, [pc, #444]	; 17c68 <tcgetattr@plt+0x6080>
   17aa8:	ldr	r3, [r3]
   17aac:	cmp	r3, #0
   17ab0:	ble	17ac4 <tcgetattr@plt+0x5edc>
   17ab4:	mov	r2, #6
   17ab8:	add	r1, sp, #26
   17abc:	mov	r0, #62	; 0x3e
   17ac0:	bl	14a7c <tcgetattr@plt+0x2e94>
   17ac4:	ldr	r3, [r9]
   17ac8:	str	r3, [r5]
   17acc:	mov	r0, #0
   17ad0:	bl	181c8 <tcgetattr@plt+0x65e0>
   17ad4:	bl	184fc <tcgetattr@plt+0x6914>
   17ad8:	mov	r0, #0
   17adc:	bl	18228 <tcgetattr@plt+0x6640>
   17ae0:	b	17950 <tcgetattr@plt+0x5d68>
   17ae4:	mov	r1, #1
   17ae8:	bl	15d08 <tcgetattr@plt+0x4120>
   17aec:	b	1780c <tcgetattr@plt+0x5c24>
   17af0:	mov	r1, #1
   17af4:	bl	15dac <tcgetattr@plt+0x41c4>
   17af8:	b	17824 <tcgetattr@plt+0x5c3c>
   17afc:	mov	r3, #1
   17b00:	mov	r0, r3
   17b04:	str	r3, [r6]
   17b08:	bl	13098 <tcgetattr@plt+0x14b0>
   17b0c:	ldr	r4, [r6]
   17b10:	b	17870 <tcgetattr@plt+0x5c88>
   17b14:	ldr	r2, [r6]
   17b18:	mov	r3, #1
   17b1c:	cmp	r2, #0
   17b20:	str	r3, [r8]
   17b24:	beq	17b68 <tcgetattr@plt+0x5f80>
   17b28:	bl	131bc <tcgetattr@plt+0x15d4>
   17b2c:	cmp	r0, #0
   17b30:	beq	17b40 <tcgetattr@plt+0x5f58>
   17b34:	ldr	r3, [r6]
   17b38:	cmp	r3, #0
   17b3c:	bne	17b88 <tcgetattr@plt+0x5fa0>
   17b40:	mov	r1, #1
   17b44:	mov	r0, #3
   17b48:	bl	15dac <tcgetattr@plt+0x41c4>
   17b4c:	ldr	r1, [r8]
   17b50:	b	178a0 <tcgetattr@plt+0x5cb8>
   17b54:	mov	r1, #1
   17b58:	mov	r0, r1
   17b5c:	bl	16298 <tcgetattr@plt+0x46b0>
   17b60:	mov	r4, #0
   17b64:	b	179b0 <tcgetattr@plt+0x5dc8>
   17b68:	ldr	r7, [pc, #224]	; 17c50 <tcgetattr@plt+0x6068>
   17b6c:	ldr	r3, [r7]
   17b70:	cmp	r3, #0
   17b74:	beq	1788c <tcgetattr@plt+0x5ca4>
   17b78:	mov	r1, #1
   17b7c:	mov	r0, #3
   17b80:	bl	15dac <tcgetattr@plt+0x41c4>
   17b84:	b	1793c <tcgetattr@plt+0x5d54>
   17b88:	mov	r1, #1
   17b8c:	mov	r0, #3
   17b90:	bl	16298 <tcgetattr@plt+0x46b0>
   17b94:	ldr	r1, [r8]
   17b98:	b	178a0 <tcgetattr@plt+0x5cb8>
   17b9c:	mov	r1, #1
   17ba0:	mov	r0, #34	; 0x22
   17ba4:	bl	15d60 <tcgetattr@plt+0x4178>
   17ba8:	b	1793c <tcgetattr@plt+0x5d54>
   17bac:	mov	r0, #3
   17bb0:	bl	16298 <tcgetattr@plt+0x46b0>
   17bb4:	ldr	r3, [r6]
   17bb8:	b	178cc <tcgetattr@plt+0x5ce4>
   17bbc:	ldr	r9, [pc, #152]	; 17c5c <tcgetattr@plt+0x6074>
   17bc0:	mov	r1, #1
   17bc4:	mov	r0, #34	; 0x22
   17bc8:	bl	15d08 <tcgetattr@plt+0x4120>
   17bcc:	ldr	r0, [r9]
   17bd0:	mov	ip, #240	; 0xf0
   17bd4:	mov	r2, #255	; 0xff
   17bd8:	mov	r1, #1
   17bdc:	mov	r3, #34	; 0x22
   17be0:	str	r0, [sp, #8]
   17be4:	str	ip, [sp, #16]
   17be8:	str	r2, [sp, #12]
   17bec:	str	r1, [sp, #4]
   17bf0:	str	r3, [sp]
   17bf4:	ldr	r1, [pc, #104]	; 17c64 <tcgetattr@plt+0x607c>
   17bf8:	mov	r3, #250	; 0xfa
   17bfc:	add	r0, sp, #24
   17c00:	bl	11b04 <sprintf@plt>
   17c04:	add	r0, sp, #24
   17c08:	mov	r1, #8
   17c0c:	bl	14460 <tcgetattr@plt+0x2878>
   17c10:	ldr	r3, [pc, #80]	; 17c68 <tcgetattr@plt+0x6080>
   17c14:	ldr	r3, [r3]
   17c18:	cmp	r3, #0
   17c1c:	ble	17c30 <tcgetattr@plt+0x6048>
   17c20:	mov	r2, #6
   17c24:	add	r1, sp, #26
   17c28:	mov	r0, #62	; 0x3e
   17c2c:	bl	14a7c <tcgetattr@plt+0x2e94>
   17c30:	ldr	r2, [pc, #40]	; 17c60 <tcgetattr@plt+0x6078>
   17c34:	ldr	r1, [r9]
   17c38:	ldr	r3, [r6]
   17c3c:	str	r1, [r2]
   17c40:	b	178cc <tcgetattr@plt+0x5ce4>
   17c44:	andeq	sl, r3, r4, lsl #14
   17c48:	strdeq	sl, [r3], -r8
   17c4c:	andeq	sl, r3, r8, lsr #19
   17c50:			; <UNDEFINED> instruction: 0x0003a9b0
   17c54:	strdeq	sl, [r3], -ip
   17c58:	andeq	sl, r3, r8, lsl #12
   17c5c:	ldrdeq	sl, [r3], -r8
   17c60:	andeq	sl, r3, r8, lsl #18
   17c64:	andeq	r0, r2, r4, ror #19
   17c68:	andeq	sl, r3, r0, ror #13
   17c6c:	push	{r4, r5, r6, r7, r8, lr}
   17c70:	mov	r4, r0
   17c74:	sub	sp, sp, #32
   17c78:	mov	r5, r1
   17c7c:	mov	r6, r2
   17c80:	bl	132b4 <tcgetattr@plt+0x16cc>
   17c84:	sub	r0, r4, #1
   17c88:	cmp	r0, #33	; 0x21
   17c8c:	ldrls	pc, [pc, r0, lsl #2]
   17c90:	b	17d7c <tcgetattr@plt+0x6194>
   17c94:	andeq	r7, r1, ip, lsl sp
   17c98:	andeq	r7, r1, ip, ror sp
   17c9c:	andeq	r7, r1, ip, ror sp
   17ca0:	andeq	r7, r1, ip, ror sp
   17ca4:	andeq	r7, r1, ip, ror sp
   17ca8:	andeq	r7, r1, ip, ror sp
   17cac:	andeq	r7, r1, ip, ror sp
   17cb0:	andeq	r7, r1, ip, ror sp
   17cb4:	andeq	r7, r1, ip, ror sp
   17cb8:	andeq	r7, r1, ip, ror sp
   17cbc:	andeq	r7, r1, ip, ror sp
   17cc0:	andeq	r7, r1, ip, ror sp
   17cc4:	andeq	r7, r1, ip, ror sp
   17cc8:	andeq	r7, r1, ip, ror sp
   17ccc:	andeq	r7, r1, ip, ror sp
   17cd0:	andeq	r7, r1, ip, ror sp
   17cd4:	andeq	r7, r1, ip, ror sp
   17cd8:	andeq	r7, r1, ip, ror sp
   17cdc:	andeq	r7, r1, ip, ror sp
   17ce0:	andeq	r7, r1, ip, ror sp
   17ce4:	andeq	r7, r1, ip, ror sp
   17ce8:	andeq	r7, r1, ip, ror sp
   17cec:	andeq	r7, r1, ip, ror sp
   17cf0:	andeq	r7, r1, ip, ror sp
   17cf4:	andeq	r7, r1, ip, ror sp
   17cf8:	andeq	r7, r1, ip, ror sp
   17cfc:	andeq	r7, r1, ip, ror sp
   17d00:	andeq	r7, r1, ip, ror sp
   17d04:	andeq	r7, r1, ip, ror sp
   17d08:	andeq	r7, r1, ip, ror sp
   17d0c:	andeq	r7, r1, r0, lsr lr
   17d10:	strdeq	r7, [r1], -ip
   17d14:	andeq	r7, r1, ip, ror sp
   17d18:	andeq	r7, r1, r8, lsl #27
   17d1c:	ldr	r5, [pc, #756]	; 18018 <tcgetattr@plt+0x6430>
   17d20:	ldr	r7, [pc, #756]	; 1801c <tcgetattr@plt+0x6434>
   17d24:	ldr	r3, [r5]
   17d28:	ldr	r8, [r7]
   17d2c:	and	r4, r3, #27
   17d30:	cmp	r4, r8
   17d34:	str	r4, [r5]
   17d38:	beq	17d7c <tcgetattr@plt+0x6194>
   17d3c:	ands	r6, r3, #4
   17d40:	bne	17f10 <tcgetattr@plt+0x6328>
   17d44:	eor	r4, r4, r8
   17d48:	tst	r4, #1
   17d4c:	bne	17f00 <tcgetattr@plt+0x6318>
   17d50:	tst	r4, #2
   17d54:	bne	17ef0 <tcgetattr@plt+0x6308>
   17d58:	tst	r4, #8
   17d5c:	bne	17ee0 <tcgetattr@plt+0x62f8>
   17d60:	tst	r4, #16
   17d64:	bne	17ed0 <tcgetattr@plt+0x62e8>
   17d68:	bl	1336c <tcgetattr@plt+0x1784>
   17d6c:	cmp	r6, #0
   17d70:	beq	17e68 <tcgetattr@plt+0x6280>
   17d74:	ldr	r3, [r5]
   17d78:	str	r3, [r7]
   17d7c:	bl	142b4 <tcgetattr@plt+0x26cc>
   17d80:	add	sp, sp, #32
   17d84:	pop	{r4, r5, r6, r7, r8, pc}
   17d88:	ldr	r6, [pc, #656]	; 18020 <tcgetattr@plt+0x6438>
   17d8c:	ldr	r4, [pc, #656]	; 18024 <tcgetattr@plt+0x643c>
   17d90:	sub	r5, r5, #251	; 0xfb
   17d94:	ldr	r3, [r6]
   17d98:	clz	r5, r5
   17d9c:	lsr	r5, r5, #5
   17da0:	cmp	r5, r3
   17da4:	str	r5, [r4]
   17da8:	beq	17d7c <tcgetattr@plt+0x6194>
   17dac:	ldr	r8, [pc, #628]	; 18028 <tcgetattr@plt+0x6440>
   17db0:	ldr	r7, [r8]
   17db4:	cmp	r7, #1
   17db8:	beq	17f18 <tcgetattr@plt+0x6330>
   17dbc:	adds	r5, r5, #0
   17dc0:	movne	r5, #1
   17dc4:	cmp	r7, #4
   17dc8:	movne	r5, #0
   17dcc:	cmp	r5, #0
   17dd0:	bne	17f50 <tcgetattr@plt+0x6368>
   17dd4:	ldr	r0, [r4]
   17dd8:	bl	13098 <tcgetattr@plt+0x14b0>
   17ddc:	ldr	r3, [r4]
   17de0:	cmp	r3, #0
   17de4:	str	r3, [r6]
   17de8:	bne	17d7c <tcgetattr@plt+0x6194>
   17dec:	mov	r1, #1
   17df0:	mov	r0, r1
   17df4:	bl	15dac <tcgetattr@plt+0x41c4>
   17df8:	b	17d7c <tcgetattr@plt+0x6194>
   17dfc:	ldr	r2, [pc, #552]	; 1802c <tcgetattr@plt+0x6444>
   17e00:	ldr	r3, [pc, #552]	; 18030 <tcgetattr@plt+0x6448>
   17e04:	ldr	r2, [r2, #8]
   17e08:	str	r5, [r3]
   17e0c:	cmp	r2, #0
   17e10:	str	r6, [r3, #4]
   17e14:	beq	17d80 <tcgetattr@plt+0x6198>
   17e18:	mov	r0, r6
   17e1c:	bl	135c8 <tcgetattr@plt+0x19e0>
   17e20:	mov	r0, r5
   17e24:	bl	13580 <tcgetattr@plt+0x1998>
   17e28:	bl	1336c <tcgetattr@plt+0x1784>
   17e2c:	b	17d7c <tcgetattr@plt+0x6194>
   17e30:	ldr	r3, [pc, #500]	; 1802c <tcgetattr@plt+0x6444>
   17e34:	ldr	r2, [r3, #8]
   17e38:	str	r5, [r3]
   17e3c:	cmp	r2, #0
   17e40:	str	r6, [r3, #4]
   17e44:	beq	17d80 <tcgetattr@plt+0x6198>
   17e48:	ldr	r3, [pc, #484]	; 18034 <tcgetattr@plt+0x644c>
   17e4c:	add	r2, sp, #32
   17e50:	ldr	r1, [pc, #480]	; 18038 <tcgetattr@plt+0x6450>
   17e54:	strh	r6, [r2, #-8]!
   17e58:	ldr	r0, [r3]
   17e5c:	strh	r5, [sp, #26]
   17e60:	bl	1a2fc <argp_parse@@Base+0xfa0>
   17e64:	b	17d7c <tcgetattr@plt+0x6194>
   17e68:	ldr	r3, [r5]
   17e6c:	mov	ip, #1
   17e70:	mov	r1, #34	; 0x22
   17e74:	mov	lr, #240	; 0xf0
   17e78:	mov	r2, #255	; 0xff
   17e7c:	orr	r3, r3, #4
   17e80:	stm	sp, {r1, ip}
   17e84:	str	r3, [sp, #8]
   17e88:	str	lr, [sp, #16]
   17e8c:	mov	r3, #250	; 0xfa
   17e90:	str	r2, [sp, #12]
   17e94:	ldr	r1, [pc, #416]	; 1803c <tcgetattr@plt+0x6454>
   17e98:	add	r0, sp, #24
   17e9c:	bl	11b04 <sprintf@plt>
   17ea0:	add	r0, sp, #24
   17ea4:	mov	r1, #8
   17ea8:	bl	14460 <tcgetattr@plt+0x2878>
   17eac:	ldr	r3, [pc, #396]	; 18040 <tcgetattr@plt+0x6458>
   17eb0:	ldr	r3, [r3]
   17eb4:	cmp	r3, #0
   17eb8:	ble	17d74 <tcgetattr@plt+0x618c>
   17ebc:	mov	r2, #6
   17ec0:	add	r1, sp, #26
   17ec4:	mov	r0, #62	; 0x3e
   17ec8:	bl	14a7c <tcgetattr@plt+0x2e94>
   17ecc:	b	17d74 <tcgetattr@plt+0x618c>
   17ed0:	ldr	r0, [r5]
   17ed4:	and	r0, r0, #16
   17ed8:	bl	13280 <tcgetattr@plt+0x1698>
   17edc:	b	17d68 <tcgetattr@plt+0x6180>
   17ee0:	ldr	r0, [r5]
   17ee4:	and	r0, r0, #8
   17ee8:	bl	13244 <tcgetattr@plt+0x165c>
   17eec:	b	17d60 <tcgetattr@plt+0x6178>
   17ef0:	ldr	r0, [r5]
   17ef4:	and	r0, r0, #2
   17ef8:	bl	13204 <tcgetattr@plt+0x161c>
   17efc:	b	17d58 <tcgetattr@plt+0x6170>
   17f00:	ldr	r0, [r5]
   17f04:	and	r0, r0, #1
   17f08:	bl	131e4 <tcgetattr@plt+0x15fc>
   17f0c:	b	17d50 <tcgetattr@plt+0x6168>
   17f10:	bl	177e8 <tcgetattr@plt+0x5c00>
   17f14:	b	17d44 <tcgetattr@plt+0x615c>
   17f18:	ldr	r3, [pc, #292]	; 18044 <tcgetattr@plt+0x645c>
   17f1c:	ldr	r3, [r3]
   17f20:	cmp	r3, #0
   17f24:	beq	17dd4 <tcgetattr@plt+0x61ec>
   17f28:	bl	131bc <tcgetattr@plt+0x15d4>
   17f2c:	ldr	r3, [r6]
   17f30:	cmp	r0, #0
   17f34:	strne	r7, [r4]
   17f38:	ldreq	r7, [r4]
   17f3c:	cmp	r3, r7
   17f40:	beq	17d80 <tcgetattr@plt+0x6198>
   17f44:	mov	r5, r7
   17f48:	ldr	r7, [r8]
   17f4c:	b	17dbc <tcgetattr@plt+0x61d4>
   17f50:	ldr	r5, [pc, #192]	; 18018 <tcgetattr@plt+0x6430>
   17f54:	mov	r3, #0
   17f58:	str	r3, [r5]
   17f5c:	bl	131bc <tcgetattr@plt+0x15d4>
   17f60:	cmp	r0, #0
   17f64:	ldrne	r3, [r5]
   17f68:	orrne	r3, r3, #1
   17f6c:	strne	r3, [r5]
   17f70:	bl	131d0 <tcgetattr@plt+0x15e8>
   17f74:	cmp	r0, #0
   17f78:	ldrne	r3, [r5]
   17f7c:	orrne	r3, r3, #2
   17f80:	strne	r3, [r5]
   17f84:	bl	13224 <tcgetattr@plt+0x163c>
   17f88:	cmp	r0, #0
   17f8c:	ldrne	r3, [r5]
   17f90:	orrne	r3, r3, #8
   17f94:	strne	r3, [r5]
   17f98:	bl	13264 <tcgetattr@plt+0x167c>
   17f9c:	ldr	r3, [r5]
   17fa0:	mov	ip, #1
   17fa4:	mov	r1, #34	; 0x22
   17fa8:	mov	lr, #240	; 0xf0
   17fac:	mov	r2, #255	; 0xff
   17fb0:	cmp	r0, #0
   17fb4:	orrne	r3, r3, #16
   17fb8:	strne	r3, [r5]
   17fbc:	add	r0, sp, #24
   17fc0:	stm	sp, {r1, ip}
   17fc4:	str	r3, [sp, #8]
   17fc8:	str	lr, [sp, #16]
   17fcc:	mov	r3, #250	; 0xfa
   17fd0:	str	r2, [sp, #12]
   17fd4:	ldr	r1, [pc, #96]	; 1803c <tcgetattr@plt+0x6454>
   17fd8:	bl	11b04 <sprintf@plt>
   17fdc:	add	r0, sp, #24
   17fe0:	mov	r1, #8
   17fe4:	bl	14460 <tcgetattr@plt+0x2878>
   17fe8:	ldr	r3, [pc, #80]	; 18040 <tcgetattr@plt+0x6458>
   17fec:	ldr	r3, [r3]
   17ff0:	cmp	r3, #0
   17ff4:	ble	18008 <tcgetattr@plt+0x6420>
   17ff8:	mov	r2, #6
   17ffc:	add	r1, sp, #26
   18000:	mov	r0, #62	; 0x3e
   18004:	bl	14a7c <tcgetattr@plt+0x2e94>
   18008:	ldr	r3, [pc, #12]	; 1801c <tcgetattr@plt+0x6434>
   1800c:	ldr	r2, [r5]
   18010:	str	r2, [r3]
   18014:	b	17dd4 <tcgetattr@plt+0x61ec>
   18018:	ldrdeq	sl, [r3], -r8
   1801c:	andeq	sl, r3, r8, lsl #18
   18020:			; <UNDEFINED> instruction: 0x0003a9b0
   18024:	andeq	sl, r3, r8, lsr #19
   18028:	strdeq	sl, [r3], -ip
   1802c:	andeq	sl, r3, r8, lsl #12
   18030:	andeq	r2, r3, ip, lsr #9
   18034:	ldrdeq	sl, [r3], -r0
   18038:	andeq	r5, r0, r4, lsl r4
   1803c:	andeq	r0, r2, r4, ror #19
   18040:	andeq	sl, r3, r0, ror #13
   18044:	strdeq	sl, [r3], -r8
   18048:	ldr	r3, [pc, #4]	; 18054 <tcgetattr@plt+0x646c>
   1804c:	ldr	r0, [r3, #8]
   18050:	bx	lr
   18054:	andeq	sl, r3, r8, lsl #12
   18058:	ldr	r3, [pc, #64]	; 180a0 <tcgetattr@plt+0x64b8>
   1805c:	add	r0, r3, #144	; 0x90
   18060:	ldrb	r2, [r3, #9]
   18064:	add	r3, r3, #8
   18068:	cmp	r2, #0
   1806c:	strb	r2, [r3, #3]
   18070:	ldrbne	r1, [r3]
   18074:	strbeq	r2, [r3, #2]
   18078:	strbne	r1, [r3, #2]
   1807c:	ldr	r1, [r3, #4]
   18080:	cmp	r1, #0
   18084:	strbne	r2, [r1]
   18088:	cmp	r3, r0
   1808c:	bne	18060 <tcgetattr@plt+0x6478>
   18090:	ldr	r3, [pc, #12]	; 180a4 <tcgetattr@plt+0x64bc>
   18094:	mov	r2, #1
   18098:	str	r2, [r3]
   1809c:	bx	lr
   180a0:	andeq	sl, r3, ip, lsl #18
   180a4:	andeq	sl, r3, r4, lsl r6
   180a8:	push	{r4, r5, r6, lr}
   180ac:	bl	132b4 <tcgetattr@plt+0x16cc>
   180b0:	ldr	r4, [pc, #52]	; 180ec <tcgetattr@plt+0x6504>
   180b4:	mov	r5, #1
   180b8:	mov	r6, #0
   180bc:	add	r2, r4, #3
   180c0:	mov	r1, r4
   180c4:	mov	r0, r5
   180c8:	bl	133ac <tcgetattr@plt+0x17c4>
   180cc:	add	r5, r5, #1
   180d0:	cmp	r5, #19
   180d4:	strb	r6, [r4, #1]
   180d8:	strb	r6, [r4, #2]
   180dc:	add	r4, r4, #8
   180e0:	strb	r0, [r4, #-9]
   180e4:	bne	180bc <tcgetattr@plt+0x64d4>
   180e8:	pop	{r4, r5, r6, pc}
   180ec:	andeq	sl, r3, r5, lsl r9
   180f0:	ldr	ip, [pc, #88]	; 18150 <tcgetattr@plt+0x6568>
   180f4:	cmp	r0, #255	; 0xff
   180f8:	push	{lr}		; (str lr, [sp, #-4]!)
   180fc:	mvneq	lr, #0
   18100:	ldr	r3, [ip, #4]
   18104:	strb	r0, [r3]
   18108:	addeq	r0, r3, #2
   1810c:	addne	r0, r3, #1
   18110:	strbeq	lr, [r3, #1]
   18114:	cmp	r1, #255	; 0xff
   18118:	add	r3, r0, #1
   1811c:	strb	r1, [r0]
   18120:	addeq	r3, r0, #2
   18124:	mvneq	r1, #0
   18128:	strbeq	r1, [r0, #1]
   1812c:	cmp	r2, #255	; 0xff
   18130:	add	r1, r3, #1
   18134:	str	r1, [ip, #4]
   18138:	strb	r2, [r3]
   1813c:	addeq	r1, r3, #2
   18140:	mvneq	r2, #0
   18144:	streq	r1, [ip, #4]
   18148:	strbeq	r2, [r3, #1]
   1814c:	pop	{pc}		; (ldr pc, [sp], #4)
   18150:	andeq	sl, r3, r4, lsl r6
   18154:	push	{r4, r5, r6, lr}
   18158:	mov	r4, #1
   1815c:	ldr	r5, [pc, #96]	; 181c4 <tcgetattr@plt+0x65dc>
   18160:	mov	r6, #0
   18164:	b	18180 <tcgetattr@plt+0x6598>
   18168:	cmp	r3, #4
   1816c:	bls	181b0 <tcgetattr@plt+0x65c8>
   18170:	add	r4, r4, #1
   18174:	cmp	r4, #19
   18178:	add	r5, r5, #8
   1817c:	beq	181ac <tcgetattr@plt+0x65c4>
   18180:	ldrb	r1, [r5, #10]
   18184:	sub	r3, r4, #10
   18188:	tst	r1, #3
   1818c:	beq	18168 <tcgetattr@plt+0x6580>
   18190:	ldrb	r2, [r5, #11]
   18194:	uxtb	r0, r4
   18198:	add	r4, r4, #1
   1819c:	bl	180f0 <tcgetattr@plt+0x6508>
   181a0:	cmp	r4, #19
   181a4:	add	r5, r5, #8
   181a8:	bne	18180 <tcgetattr@plt+0x6598>
   181ac:	pop	{r4, r5, r6, pc}
   181b0:	orr	r1, r1, #3
   181b4:	mov	r2, r6
   181b8:	uxtb	r0, r4
   181bc:	bl	180f0 <tcgetattr@plt+0x6508>
   181c0:	b	18170 <tcgetattr@plt+0x6588>
   181c4:	andeq	sl, r3, ip, lsl #18
   181c8:	push	{r4, lr}
   181cc:	mov	r3, #0
   181d0:	ldr	r4, [pc, #64]	; 18218 <tcgetattr@plt+0x6630>
   181d4:	cmp	r0, #0
   181d8:	sub	sp, sp, #8
   181dc:	str	r3, [r4]
   181e0:	beq	181e8 <tcgetattr@plt+0x6600>
   181e4:	bl	132b4 <tcgetattr@plt+0x16cc>
   181e8:	mov	r2, #34	; 0x22
   181ec:	mov	r3, #3
   181f0:	ldr	r1, [pc, #36]	; 1821c <tcgetattr@plt+0x6634>
   181f4:	stm	sp, {r2, r3}
   181f8:	ldr	r0, [pc, #32]	; 18220 <tcgetattr@plt+0x6638>
   181fc:	mov	r3, #250	; 0xfa
   18200:	mov	r2, #255	; 0xff
   18204:	bl	11b04 <sprintf@plt>
   18208:	ldr	r3, [pc, #20]	; 18224 <tcgetattr@plt+0x663c>
   1820c:	str	r3, [r4, #4]
   18210:	add	sp, sp, #8
   18214:	pop	{r4, pc}
   18218:	andeq	sl, r3, r4, lsl r6
   1821c:	andeq	pc, r1, r4, ror #28
   18220:	andeq	sl, r3, ip, lsl r6
   18224:	andeq	sl, r3, r0, lsr #12
   18228:	push	{r4, r5, r6, r7, r8, lr}
   1822c:	mov	r6, r0
   18230:	ldr	r4, [pc, #184]	; 182f0 <tcgetattr@plt+0x6708>
   18234:	ldr	r3, [r4]
   18238:	cmp	r3, #0
   1823c:	bne	18290 <tcgetattr@plt+0x66a8>
   18240:	ldr	r3, [r4, #116]	; 0x74
   18244:	cmp	r3, #0
   18248:	beq	18258 <tcgetattr@plt+0x6670>
   1824c:	bl	18048 <tcgetattr@plt+0x6460>
   18250:	cmp	r0, #0
   18254:	beq	18288 <tcgetattr@plt+0x66a0>
   18258:	ldr	r5, [pc, #148]	; 182f4 <tcgetattr@plt+0x670c>
   1825c:	ldr	r0, [r4, #4]
   18260:	add	r3, r5, #4
   18264:	cmp	r0, r3
   18268:	bls	18288 <tcgetattr@plt+0x66a0>
   1826c:	cmp	r6, #0
   18270:	beq	18298 <tcgetattr@plt+0x66b0>
   18274:	mvn	r2, #3
   18278:	sub	r2, r2, r5
   1827c:	str	r3, [r6]
   18280:	add	r0, r0, r2
   18284:	pop	{r4, r5, r6, r7, r8, pc}
   18288:	mov	r0, #0
   1828c:	pop	{r4, r5, r6, r7, r8, pc}
   18290:	bl	1336c <tcgetattr@plt+0x1784>
   18294:	b	18240 <tcgetattr@plt+0x6658>
   18298:	mov	r2, #255	; 0xff
   1829c:	mov	r3, #240	; 0xf0
   182a0:	ldr	r1, [pc, #80]	; 182f8 <tcgetattr@plt+0x6710>
   182a4:	bl	11b04 <sprintf@plt>
   182a8:	ldr	r3, [r4, #4]
   182ac:	mov	r0, r5
   182b0:	add	r3, r3, #2
   182b4:	sub	r7, r3, r5
   182b8:	mov	r1, r7
   182bc:	str	r3, [r4, #4]
   182c0:	bl	14460 <tcgetattr@plt+0x2878>
   182c4:	bl	142b4 <tcgetattr@plt+0x26cc>
   182c8:	ldr	r3, [pc, #44]	; 182fc <tcgetattr@plt+0x6714>
   182cc:	ldr	r3, [r3]
   182d0:	cmp	r3, #0
   182d4:	ble	18288 <tcgetattr@plt+0x66a0>
   182d8:	sub	r2, r7, #2
   182dc:	add	r1, r5, #2
   182e0:	mov	r0, #62	; 0x3e
   182e4:	bl	14a7c <tcgetattr@plt+0x2e94>
   182e8:	mov	r0, r6
   182ec:	pop	{r4, r5, r6, r7, r8, pc}
   182f0:	andeq	sl, r3, r4, lsl r6
   182f4:	andeq	sl, r3, ip, lsl r6
   182f8:	andeq	pc, r1, r8, ror #28
   182fc:	andeq	sl, r3, r0, ror #13
   18300:	ldr	r3, [pc, #240]	; 183f8 <tcgetattr@plt+0x6810>
   18304:	mov	ip, r1
   18308:	push	{r4, r5, r6, lr}
   1830c:	ands	r4, ip, #3
   18310:	mov	lr, r0
   18314:	ldrb	r1, [r3, r0, lsl #3]
   18318:	beq	183e0 <tcgetattr@plt+0x67f8>
   1831c:	cmp	r4, #3
   18320:	and	r6, r1, #3
   18324:	beq	183b0 <tcgetattr@plt+0x67c8>
   18328:	add	r3, r3, r0, lsl #3
   1832c:	mov	r5, r2
   18330:	ldr	r1, [r3, #4]
   18334:	cmp	r1, #0
   18338:	beq	18360 <tcgetattr@plt+0x6778>
   1833c:	ldr	lr, [pc, #184]	; 183fc <tcgetattr@plt+0x6814>
   18340:	mov	r4, #1
   18344:	strb	r2, [r3, #3]
   18348:	str	r4, [lr]
   1834c:	strb	r2, [r1]
   18350:	strb	ip, [r3, #2]
   18354:	orr	r1, ip, #128	; 0x80
   18358:	pop	{r4, r5, r6, lr}
   1835c:	b	180f0 <tcgetattr@plt+0x6508>
   18360:	cmp	r6, #3
   18364:	strbeq	ip, [r3, #2]
   18368:	strbeq	r2, [r3, #3]
   1836c:	orreq	r1, ip, #128	; 0x80
   18370:	beq	183a0 <tcgetattr@plt+0x67b8>
   18374:	cmp	r4, #1
   18378:	cmpeq	r6, #1
   1837c:	andeq	r1, ip, #252	; 0xfc
   18380:	strbeq	r1, [r3, #2]
   18384:	beq	183a0 <tcgetattr@plt+0x67b8>
   18388:	cmp	r6, #1
   1838c:	bic	ip, ip, #3
   18390:	ldrbeq	r5, [r3, #1]
   18394:	orr	r1, ip, r6
   18398:	strb	r1, [r3, #2]
   1839c:	strbeq	r5, [r3, #3]
   183a0:	mov	r2, r5
   183a4:	mov	r0, lr
   183a8:	pop	{r4, r5, r6, lr}
   183ac:	b	180f0 <tcgetattr@plt+0x6508>
   183b0:	lsl	r2, r0, #3
   183b4:	add	r0, r3, r2
   183b8:	add	r3, r3, r2
   183bc:	cmp	r6, #3
   183c0:	ldrb	ip, [r3, #1]
   183c4:	moveq	r1, #0
   183c8:	strb	r1, [r0, #2]
   183cc:	strb	ip, [r3, #3]
   183d0:	mov	r0, lr
   183d4:	mov	r2, ip
   183d8:	pop	{r4, r5, r6, lr}
   183dc:	b	180f0 <tcgetattr@plt+0x6508>
   183e0:	add	r3, r3, r0, lsl #3
   183e4:	orr	r1, ip, #128	; 0x80
   183e8:	strb	ip, [r3, #2]
   183ec:	strb	r4, [r3, #3]
   183f0:	pop	{r4, r5, r6, lr}
   183f4:	b	180f0 <tcgetattr@plt+0x6508>
   183f8:	andeq	sl, r3, ip, lsl #18
   183fc:	andeq	sl, r3, r4, lsl r6
   18400:	cmp	r0, #18
   18404:	bls	18440 <tcgetattr@plt+0x6858>
   18408:	ldr	r1, [pc, #228]	; 184f4 <tcgetattr@plt+0x690c>
   1840c:	cmp	r0, #255	; 0xff
   18410:	ldr	r3, [r1, #4]
   18414:	add	r2, r3, #1
   18418:	strb	r0, [r3]
   1841c:	addeq	r2, r3, #2
   18420:	mvneq	r0, #0
   18424:	strbeq	r0, [r3, #1]
   18428:	mov	r3, r2
   1842c:	mov	r0, #0
   18430:	strb	r0, [r3], #2
   18434:	strb	r0, [r2, #1]
   18438:	str	r3, [r1, #4]
   1843c:	bx	lr
   18440:	cmp	r0, #0
   18444:	bne	18460 <tcgetattr@plt+0x6878>
   18448:	and	r1, r1, #3
   1844c:	cmp	r1, #3
   18450:	beq	18490 <tcgetattr@plt+0x68a8>
   18454:	cmp	r1, #2
   18458:	bxne	lr
   1845c:	b	18154 <tcgetattr@plt+0x656c>
   18460:	ldr	r3, [pc, #144]	; 184f8 <tcgetattr@plt+0x6910>
   18464:	push	{lr}		; (str lr, [sp, #-4]!)
   18468:	add	r3, r3, r0, lsl #3
   1846c:	and	ip, r1, #3
   18470:	ldrb	lr, [r3, #2]
   18474:	and	lr, lr, #3
   18478:	cmp	lr, ip
   1847c:	beq	184d8 <tcgetattr@plt+0x68f0>
   18480:	tst	r1, #128	; 0x80
   18484:	popne	{pc}		; (ldrne pc, [sp], #4)
   18488:	pop	{lr}		; (ldr lr, [sp], #4)
   1848c:	b	18300 <tcgetattr@plt+0x6718>
   18490:	ldr	r3, [pc, #96]	; 184f8 <tcgetattr@plt+0x6910>
   18494:	add	r0, r3, #144	; 0x90
   18498:	ldrb	r2, [r3, #9]
   1849c:	add	r3, r3, #8
   184a0:	cmp	r2, #0
   184a4:	strb	r2, [r3, #3]
   184a8:	ldrbne	r1, [r3]
   184ac:	strbeq	r2, [r3, #2]
   184b0:	strbne	r1, [r3, #2]
   184b4:	ldr	r1, [r3, #4]
   184b8:	cmp	r1, #0
   184bc:	strbne	r2, [r1]
   184c0:	cmp	r3, r0
   184c4:	bne	18498 <tcgetattr@plt+0x68b0>
   184c8:	ldr	r3, [pc, #36]	; 184f4 <tcgetattr@plt+0x690c>
   184cc:	mov	r2, #1
   184d0:	str	r2, [r3]
   184d4:	b	18154 <tcgetattr@plt+0x656c>
   184d8:	ldrb	r3, [r3, #3]
   184dc:	sub	r3, r3, r2
   184e0:	clz	r3, r3
   184e4:	lsr	r3, r3, #5
   184e8:	orrs	r3, r3, r1, lsr #7
   184ec:	beq	18480 <tcgetattr@plt+0x6898>
   184f0:	pop	{pc}		; (ldr pc, [sp], #4)
   184f4:	andeq	sl, r3, r4, lsl r6
   184f8:	andeq	sl, r3, ip, lsl #18
   184fc:	push	{r4, r5, r6, r7, r8, lr}
   18500:	mov	r6, #2
   18504:	ldr	r4, [pc, #132]	; 18590 <tcgetattr@plt+0x69a8>
   18508:	mov	r5, #1
   1850c:	mov	r7, #0
   18510:	b	18520 <tcgetattr@plt+0x6938>
   18514:	add	r5, r5, #1
   18518:	add	r6, r6, #1
   1851c:	add	r4, r4, #8
   18520:	cmp	r5, #8
   18524:	beq	18574 <tcgetattr@plt+0x698c>
   18528:	ldr	r3, [r4, #12]
   1852c:	cmp	r3, #0
   18530:	beq	18568 <tcgetattr@plt+0x6980>
   18534:	ldrb	r2, [r3]
   18538:	ldrb	r1, [r4, #11]
   1853c:	cmp	r1, r2
   18540:	beq	18568 <tcgetattr@plt+0x6980>
   18544:	strb	r2, [r4, #11]
   18548:	ldrb	r3, [r3]
   1854c:	uxtb	r0, r5
   18550:	cmp	r3, #0
   18554:	moveq	r1, r7
   18558:	ldrbne	r1, [r4, #8]
   1855c:	strbeq	r3, [r4, #10]
   18560:	strbne	r1, [r4, #10]
   18564:	bl	180f0 <tcgetattr@plt+0x6508>
   18568:	cmp	r6, #19
   1856c:	bne	18514 <tcgetattr@plt+0x692c>
   18570:	pop	{r4, r5, r6, r7, r8, pc}
   18574:	bl	1307c <tcgetattr@plt+0x1494>
   18578:	cmp	r0, #0
   1857c:	bne	18514 <tcgetattr@plt+0x692c>
   18580:	ldr	r3, [r4, #12]
   18584:	cmp	r3, #0
   18588:	bne	18534 <tcgetattr@plt+0x694c>
   1858c:	b	18514 <tcgetattr@plt+0x692c>
   18590:	andeq	sl, r3, ip, lsl #18
   18594:	push	{r4, r5, r6, lr}
   18598:	mov	r4, r0
   1859c:	mov	r5, r1
   185a0:	bl	18048 <tcgetattr@plt+0x6460>
   185a4:	cmp	r0, #0
   185a8:	beq	1861c <tcgetattr@plt+0x6a34>
   185ac:	add	r5, r4, r5
   185b0:	cmp	r4, r5
   185b4:	popcs	{r4, r5, r6, pc}
   185b8:	mov	r3, r4
   185bc:	ldrb	r0, [r3], #1
   185c0:	cmp	r5, r3
   185c4:	popls	{r4, r5, r6, pc}
   185c8:	add	r3, r4, #2
   185cc:	cmp	r5, r3
   185d0:	ldrb	r1, [r4, #1]
   185d4:	popls	{r4, r5, r6, pc}
   185d8:	add	r4, r4, #4
   185dc:	b	185fc <tcgetattr@plt+0x6a14>
   185e0:	cmp	r5, r4
   185e4:	ldrb	r0, [r4, #-1]
   185e8:	popls	{r4, r5, r6, pc}
   185ec:	cmp	r5, r1
   185f0:	ldrb	r1, [r3], #3
   185f4:	popls	{r4, r5, r6, pc}
   185f8:	mov	r4, r3
   185fc:	ldrb	r2, [r4, #-2]
   18600:	bl	18400 <tcgetattr@plt+0x6818>
   18604:	sub	r2, r4, #1
   18608:	cmp	r5, r2
   1860c:	mov	r3, r4
   18610:	add	r1, r4, #1
   18614:	bhi	185e0 <tcgetattr@plt+0x69f8>
   18618:	pop	{r4, r5, r6, pc}
   1861c:	ldr	r6, [pc, #48]	; 18654 <tcgetattr@plt+0x6a6c>
   18620:	ldr	r3, [r6, #116]	; 0x74
   18624:	cmp	r3, #0
   18628:	popne	{r4, r5, r6, pc}
   1862c:	mov	r0, r5
   18630:	str	r5, [r6, #120]	; 0x78
   18634:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   18638:	cmp	r0, #0
   1863c:	str	r0, [r6, #116]	; 0x74
   18640:	popeq	{r4, r5, r6, pc}
   18644:	mov	r2, r5
   18648:	mov	r1, r4
   1864c:	pop	{r4, r5, r6, lr}
   18650:	b	11810 <memcpy@plt>
   18654:	andeq	sl, r3, r4, lsl r6
   18658:	push	{r4, lr}
   1865c:	ldr	r4, [pc, #60]	; 186a0 <tcgetattr@plt+0x6ab8>
   18660:	ldr	r3, [r4, #116]	; 0x74
   18664:	cmp	r3, #0
   18668:	popeq	{r4, pc}
   1866c:	mov	r0, #1
   18670:	bl	181c8 <tcgetattr@plt+0x65e0>
   18674:	ldr	r1, [r4, #120]	; 0x78
   18678:	ldr	r0, [r4, #116]	; 0x74
   1867c:	bl	18594 <tcgetattr@plt+0x69ac>
   18680:	mov	r0, #0
   18684:	bl	18228 <tcgetattr@plt+0x6640>
   18688:	ldr	r0, [r4, #116]	; 0x74
   1868c:	bl	1a1f4 <argp_parse@@Base+0xe98>
   18690:	mov	r3, #0
   18694:	str	r3, [r4, #116]	; 0x74
   18698:	str	r3, [r4, #120]	; 0x78
   1869c:	pop	{r4, pc}
   186a0:	andeq	sl, r3, r4, lsl r6
   186a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   186a8:	ldr	r6, [sp, #36]	; 0x24
   186ac:	ldr	r7, [sp, #32]
   186b0:	ldr	r4, [r6]
   186b4:	cmp	r4, r0
   186b8:	addge	r8, r1, r4
   186bc:	bge	18708 <tcgetattr@plt+0x6b20>
   186c0:	ldrb	ip, [r1, r4]
   186c4:	add	r8, r1, r4
   186c8:	cmp	ip, #32
   186cc:	cmpne	ip, #9
   186d0:	bne	18708 <tcgetattr@plt+0x6b20>
   186d4:	add	ip, r4, #1
   186d8:	add	lr, r1, ip
   186dc:	b	186f4 <tcgetattr@plt+0x6b0c>
   186e0:	ldrb	r5, [lr], #1
   186e4:	add	ip, ip, #1
   186e8:	cmp	r5, #9
   186ec:	cmpne	r5, #32
   186f0:	bne	18708 <tcgetattr@plt+0x6b20>
   186f4:	cmp	r0, ip
   186f8:	mov	r8, lr
   186fc:	mov	r4, ip
   18700:	bne	186e0 <tcgetattr@plt+0x6af8>
   18704:	add	r8, r1, r0
   18708:	str	r4, [r3]
   1870c:	ldrb	r5, [r8]
   18710:	cmp	r5, #34	; 0x22
   18714:	beq	1875c <tcgetattr@plt+0x6b74>
   18718:	cmp	r5, #39	; 0x27
   1871c:	beq	1875c <tcgetattr@plt+0x6b74>
   18720:	cmp	r5, #34	; 0x22
   18724:	beq	18748 <tcgetattr@plt+0x6b60>
   18728:	mov	r9, r1
   1872c:	mov	sl, r0
   18730:	mov	r1, r5
   18734:	mov	r0, r2
   18738:	mov	r8, r2
   1873c:	bl	119cc <strchr@plt>
   18740:	cmp	r0, #0
   18744:	beq	18798 <tcgetattr@plt+0x6bb0>
   18748:	add	r9, r4, #1
   1874c:	str	r4, [r7]
   18750:	mov	r0, r9
   18754:	str	r9, [r6]
   18758:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1875c:	add	ip, r1, r4
   18760:	b	18774 <tcgetattr@plt+0x6b8c>
   18764:	ldrb	lr, [ip, #1]!
   18768:	cmp	lr, r5
   1876c:	beq	1878c <tcgetattr@plt+0x6ba4>
   18770:	mov	r4, r3
   18774:	add	r3, r4, #1
   18778:	cmp	r0, r3
   1877c:	bgt	18764 <tcgetattr@plt+0x6b7c>
   18780:	ldrb	r5, [r1, r3]
   18784:	mov	r4, r3
   18788:	b	18720 <tcgetattr@plt+0x6b38>
   1878c:	add	r9, r4, #2
   18790:	mov	r4, r3
   18794:	b	1874c <tcgetattr@plt+0x6b64>
   18798:	add	r5, r9, r4
   1879c:	b	187c8 <tcgetattr@plt+0x6be0>
   187a0:	ldrb	r3, [r5, #1]!
   187a4:	and	r2, r3, #253	; 0xfd
   187a8:	cmp	r2, #32
   187ac:	cmpne	r3, #9
   187b0:	mov	r1, r3
   187b4:	beq	1874c <tcgetattr@plt+0x6b64>
   187b8:	bl	119cc <strchr@plt>
   187bc:	cmp	r0, #0
   187c0:	bne	1874c <tcgetattr@plt+0x6b64>
   187c4:	mov	r4, r9
   187c8:	add	r9, r4, #1
   187cc:	cmp	sl, r9
   187d0:	mov	r0, r8
   187d4:	bgt	187a0 <tcgetattr@plt+0x6bb8>
   187d8:	b	1874c <tcgetattr@plt+0x6b64>
   187dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   187e0:	sub	sp, sp, #36	; 0x24
   187e4:	mov	r9, r3
   187e8:	mov	r8, r2
   187ec:	mov	sl, r1
   187f0:	mov	r7, r0
   187f4:	bl	119c0 <strlen@plt>
   187f8:	mov	r3, #0
   187fc:	str	r3, [r8]
   18800:	str	r3, [r9]
   18804:	subs	r5, r0, #0
   18808:	ble	1897c <tcgetattr@plt+0x6d94>
   1880c:	bl	11990 <__ctype_b_loc@plt>
   18810:	add	r2, r7, r5
   18814:	ldr	r1, [r0]
   18818:	b	18824 <tcgetattr@plt+0x6c3c>
   1881c:	subs	r5, r5, #1
   18820:	beq	1897c <tcgetattr@plt+0x6d94>
   18824:	ldrb	r3, [r2, #-1]!
   18828:	lsl	r3, r3, #1
   1882c:	ldrh	r3, [r1, r3]
   18830:	ands	r3, r3, #8192	; 0x2000
   18834:	bne	1881c <tcgetattr@plt+0x6c34>
   18838:	mov	r2, #1
   1883c:	str	r3, [sp, #28]
   18840:	str	r2, [r8]
   18844:	add	fp, sp, #28
   18848:	b	18858 <tcgetattr@plt+0x6c70>
   1884c:	ldr	r3, [r8]
   18850:	add	r3, r3, #1
   18854:	str	r3, [r8]
   18858:	add	r3, sp, #24
   1885c:	str	r3, [sp]
   18860:	str	fp, [sp, #4]
   18864:	add	r3, sp, #20
   18868:	mov	r2, sl
   1886c:	mov	r1, r7
   18870:	mov	r0, r5
   18874:	bl	186a4 <tcgetattr@plt+0x6abc>
   18878:	cmp	r0, r5
   1887c:	blt	1884c <tcgetattr@plt+0x6c64>
   18880:	ldr	r0, [r8]
   18884:	mov	r1, #4
   18888:	add	r0, r0, #1
   1888c:	bl	1b094 <_obstack_memory_used@@Base+0xa50>
   18890:	ldr	r3, [r8]
   18894:	mov	r6, #0
   18898:	cmp	r3, r6
   1889c:	str	r6, [sp, #28]
   188a0:	str	r0, [r9]
   188a4:	ble	189a0 <tcgetattr@plt+0x6db8>
   188a8:	str	r5, [sp, #12]
   188ac:	b	18918 <tcgetattr@plt+0x6d30>
   188b0:	cmp	r2, #39	; 0x27
   188b4:	ldr	r2, [sp, #24]
   188b8:	beq	1896c <tcgetattr@plt+0x6d84>
   188bc:	sub	r2, r2, r3
   188c0:	mov	r1, #1
   188c4:	add	r0, r2, #2
   188c8:	add	r4, r2, r1
   188cc:	ldr	r5, [r9]
   188d0:	bl	1b094 <_obstack_memory_used@@Base+0xa50>
   188d4:	ldr	r1, [r9]
   188d8:	mov	r2, r4
   188dc:	str	r0, [r5, r6, lsl #2]
   188e0:	ldr	r3, [r1, r6, lsl #2]
   188e4:	subs	r0, r3, #0
   188e8:	beq	1897c <tcgetattr@plt+0x6d94>
   188ec:	ldr	r1, [sp, #20]
   188f0:	add	r1, r7, r1
   188f4:	bl	11810 <memcpy@plt>
   188f8:	ldr	r3, [r9]
   188fc:	mov	r2, #0
   18900:	ldr	r3, [r3, r6, lsl #2]
   18904:	add	r6, r6, #1
   18908:	strb	r2, [r3, r4]
   1890c:	ldr	r3, [r8]
   18910:	cmp	r3, r6
   18914:	ble	18988 <tcgetattr@plt+0x6da0>
   18918:	add	r3, sp, #24
   1891c:	str	r3, [sp]
   18920:	mov	r2, sl
   18924:	add	r3, sp, #20
   18928:	str	fp, [sp, #4]
   1892c:	mov	r1, r7
   18930:	ldr	r0, [sp, #12]
   18934:	bl	186a4 <tcgetattr@plt+0x6abc>
   18938:	ldr	r3, [sp, #20]
   1893c:	ldrb	r2, [r7, r3]
   18940:	cmp	r2, #34	; 0x22
   18944:	bne	188b0 <tcgetattr@plt+0x6cc8>
   18948:	ldr	r2, [sp, #24]
   1894c:	ldrb	r1, [r7, r2]
   18950:	cmp	r1, #34	; 0x22
   18954:	bne	188bc <tcgetattr@plt+0x6cd4>
   18958:	add	r3, r3, #1
   1895c:	sub	r2, r2, #1
   18960:	str	r3, [sp, #20]
   18964:	str	r2, [sp, #24]
   18968:	b	188bc <tcgetattr@plt+0x6cd4>
   1896c:	ldrb	r1, [r7, r2]
   18970:	cmp	r1, #39	; 0x27
   18974:	bne	188bc <tcgetattr@plt+0x6cd4>
   18978:	b	18958 <tcgetattr@plt+0x6d70>
   1897c:	mov	r0, #1
   18980:	add	sp, sp, #36	; 0x24
   18984:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18988:	ldr	r3, [r9]
   1898c:	lsl	r6, r6, #2
   18990:	mov	r0, #0
   18994:	str	r0, [r3, r6]
   18998:	add	sp, sp, #36	; 0x24
   1899c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189a0:	mov	r3, r0
   189a4:	b	18990 <tcgetattr@plt+0x6da8>
   189a8:	push	{r4, r5, r6, lr}
   189ac:	subs	r4, r0, #1
   189b0:	mov	r6, r1
   189b4:	bmi	189d0 <tcgetattr@plt+0x6de8>
   189b8:	add	r5, r1, r0, lsl #2
   189bc:	sub	r4, r4, #1
   189c0:	ldr	r0, [r5, #-4]!
   189c4:	bl	1a1f4 <argp_parse@@Base+0xe98>
   189c8:	cmn	r4, #1
   189cc:	bne	189bc <tcgetattr@plt+0x6dd4>
   189d0:	mov	r0, r6
   189d4:	bl	1a1f4 <argp_parse@@Base+0xe98>
   189d8:	mov	r0, #1
   189dc:	pop	{r4, r5, r6, pc}
   189e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   189e4:	subs	sl, r2, #0
   189e8:	beq	18a74 <tcgetattr@plt+0x6e8c>
   189ec:	mov	r8, r0
   189f0:	mov	r0, #1
   189f4:	mov	r7, r1
   189f8:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   189fc:	subs	r4, r0, #0
   18a00:	beq	18a74 <tcgetattr@plt+0x6e8c>
   18a04:	mov	r6, #0
   18a08:	cmp	r8, #0
   18a0c:	strb	r6, [r4]
   18a10:	ble	18a8c <tcgetattr@plt+0x6ea4>
   18a14:	ldr	r9, [pc, #156]	; 18ab8 <tcgetattr@plt+0x6ed0>
   18a18:	sub	r7, r7, #4
   18a1c:	mov	r5, r6
   18a20:	b	18a50 <tcgetattr@plt+0x6e68>
   18a24:	cmp	r5, #0
   18a28:	add	r5, r5, #1
   18a2c:	beq	18a3c <tcgetattr@plt+0x6e54>
   18a30:	bl	119c0 <strlen@plt>
   18a34:	ldrh	r3, [r9]
   18a38:	strh	r3, [r4, r0]
   18a3c:	ldr	r1, [r7, #4]!
   18a40:	mov	r0, r4
   18a44:	bl	118d0 <strcat@plt>
   18a48:	cmp	r8, r5
   18a4c:	beq	18a7c <tcgetattr@plt+0x6e94>
   18a50:	ldr	r0, [r7, #4]
   18a54:	bl	119c0 <strlen@plt>
   18a58:	add	r0, r0, #2
   18a5c:	add	r6, r6, r0
   18a60:	mov	r1, r6
   18a64:	mov	r0, r4
   18a68:	bl	1b108 <_obstack_memory_used@@Base+0xac4>
   18a6c:	subs	r4, r0, #0
   18a70:	bne	18a24 <tcgetattr@plt+0x6e3c>
   18a74:	mov	r0, #1
   18a78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18a7c:	ldrb	r3, [r4]
   18a80:	cmp	r3, #0
   18a84:	movne	r5, #0
   18a88:	bne	18a9c <tcgetattr@plt+0x6eb4>
   18a8c:	mov	r0, #0
   18a90:	str	r4, [sl]
   18a94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18a98:	strb	r5, [r4, r0]
   18a9c:	mov	r0, r4
   18aa0:	bl	119c0 <strlen@plt>
   18aa4:	sub	r0, r0, #1
   18aa8:	ldrb	r3, [r4, r0]
   18aac:	cmp	r3, #32
   18ab0:	beq	18a98 <tcgetattr@plt+0x6eb0>
   18ab4:	b	18a8c <tcgetattr@plt+0x6ea4>
   18ab8:	andeq	r0, r2, ip, lsr #12
   18abc:	push	{r4, r5, r6, r7, r8, r9, lr}
   18ac0:	sub	sp, sp, #1088	; 0x440
   18ac4:	sub	sp, sp, #4
   18ac8:	bl	11a14 <__errno_location@plt>
   18acc:	mov	r4, #0
   18ad0:	mov	r6, r4
   18ad4:	mov	r7, r4
   18ad8:	mov	r8, r0
   18adc:	b	18b14 <tcgetattr@plt+0x6f2c>
   18ae0:	bl	11918 <gethostname@plt>
   18ae4:	mov	r6, r5
   18ae8:	mov	r2, r4
   18aec:	mov	r1, r7
   18af0:	subs	r9, r0, #0
   18af4:	mov	r0, r5
   18af8:	bne	18b08 <tcgetattr@plt+0x6f20>
   18afc:	bl	11a5c <memchr@plt>
   18b00:	cmp	r0, #0
   18b04:	beq	18b14 <tcgetattr@plt+0x6f2c>
   18b08:	ldr	r3, [r8]
   18b0c:	cmp	r3, #36	; 0x24
   18b10:	bne	18b54 <tcgetattr@plt+0x6f6c>
   18b14:	add	r4, r4, #256	; 0x100
   18b18:	mov	r1, r4
   18b1c:	str	r7, [r8]
   18b20:	mov	r0, r6
   18b24:	bl	1b108 <_obstack_memory_used@@Base+0xac4>
   18b28:	mov	r1, r4
   18b2c:	subs	r5, r0, #0
   18b30:	bne	18ae0 <tcgetattr@plt+0x6ef8>
   18b34:	mov	r3, #12
   18b38:	mov	r0, r6
   18b3c:	str	r3, [r8]
   18b40:	bl	1a1f4 <argp_parse@@Base+0xe98>
   18b44:	mov	r0, r5
   18b48:	add	sp, sp, #1088	; 0x440
   18b4c:	add	sp, sp, #4
   18b50:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18b54:	cmp	r3, #0
   18b58:	cmpne	r9, #0
   18b5c:	movne	r9, #1
   18b60:	moveq	r9, #0
   18b64:	bne	18c04 <tcgetattr@plt+0x701c>
   18b68:	mov	r2, #32
   18b6c:	mov	r1, r9
   18b70:	add	r0, sp, #28
   18b74:	bl	11a38 <memset@plt>
   18b78:	add	r3, sp, #24
   18b7c:	mov	ip, #2
   18b80:	add	r2, sp, #28
   18b84:	mov	r1, r9
   18b88:	mov	r0, r5
   18b8c:	str	ip, [sp, #32]
   18b90:	bl	11b64 <getaddrinfo@plt>
   18b94:	subs	r3, r0, #0
   18b98:	bne	18b44 <tcgetattr@plt+0x6f5c>
   18b9c:	ldr	r2, [sp, #24]
   18ba0:	add	r1, sp, #60	; 0x3c
   18ba4:	str	r1, [sp, #20]
   18ba8:	mov	ip, #8
   18bac:	ldr	r1, [r2, #16]
   18bb0:	ldr	r0, [r2, #20]
   18bb4:	str	r3, [sp, #4]
   18bb8:	str	r3, [sp]
   18bbc:	ldr	r2, [sp, #20]
   18bc0:	str	ip, [sp, #8]
   18bc4:	ldr	r3, [pc, #72]	; 18c14 <tcgetattr@plt+0x702c>
   18bc8:	bl	11abc <getnameinfo@plt>
   18bcc:	cmp	r0, #0
   18bd0:	beq	18bec <tcgetattr@plt+0x7004>
   18bd4:	ldr	r0, [sp, #24]
   18bd8:	bl	11b58 <freeaddrinfo@plt>
   18bdc:	mov	r0, r5
   18be0:	add	sp, sp, #1088	; 0x440
   18be4:	add	sp, sp, #4
   18be8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   18bec:	mov	r0, r5
   18bf0:	bl	1a1f4 <argp_parse@@Base+0xe98>
   18bf4:	ldr	r0, [sp, #20]
   18bf8:	bl	11870 <strdup@plt>
   18bfc:	mov	r5, r0
   18c00:	b	18bd4 <tcgetattr@plt+0x6fec>
   18c04:	mov	r0, r5
   18c08:	bl	1a1f4 <argp_parse@@Base+0xe98>
   18c0c:	mov	r5, #0
   18c10:	b	18b44 <tcgetattr@plt+0x6f5c>
   18c14:	andeq	r0, r0, r1, lsl #8
   18c18:	push	{r4, r5, lr}
   18c1c:	sub	sp, sp, #284	; 0x11c
   18c20:	mov	r5, r0
   18c24:	add	r0, sp, #4
   18c28:	mov	r4, r1
   18c2c:	bl	11ab0 <sigemptyset@plt>
   18c30:	add	r0, sp, #144	; 0x90
   18c34:	bl	11ab0 <sigemptyset@plt>
   18c38:	ldr	r3, [sp, #132]	; 0x84
   18c3c:	mov	r0, r5
   18c40:	orr	r3, r3, #268435456	; 0x10000000
   18c44:	mov	r1, sp
   18c48:	add	r2, sp, #140	; 0x8c
   18c4c:	str	r4, [sp]
   18c50:	str	r3, [sp, #132]	; 0x84
   18c54:	bl	118b8 <sigaction@plt>
   18c58:	cmp	r0, #0
   18c5c:	mvnlt	r0, #0
   18c60:	ldrge	r0, [sp, #140]	; 0x8c
   18c64:	add	sp, sp, #284	; 0x11c
   18c68:	pop	{r4, r5, pc}
   18c6c:	push	{r4, r5, r6, r7, lr}
   18c70:	sub	sp, sp, #396	; 0x18c
   18c74:	mov	r4, r0
   18c78:	mov	r6, r1
   18c7c:	mov	r7, r2
   18c80:	add	r0, sp, #8
   18c84:	mov	r2, #384	; 0x180
   18c88:	mov	r1, #0
   18c8c:	mov	r5, r3
   18c90:	bl	11a38 <memset@plt>
   18c94:	mov	r1, r7
   18c98:	mov	r2, #4
   18c9c:	add	r0, sp, #48	; 0x30
   18ca0:	bl	11a44 <strncpy@plt>
   18ca4:	mov	r1, r6
   18ca8:	mov	r2, #32
   18cac:	add	r0, sp, #52	; 0x34
   18cb0:	bl	11a44 <strncpy@plt>
   18cb4:	mov	r1, r5
   18cb8:	mov	r2, #256	; 0x100
   18cbc:	add	r0, sp, #84	; 0x54
   18cc0:	bl	11a44 <strncpy@plt>
   18cc4:	mov	r1, r4
   18cc8:	mov	r2, #32
   18ccc:	add	r0, sp, #16
   18cd0:	bl	11a44 <strncpy@plt>
   18cd4:	bl	1199c <getpid@plt>
   18cd8:	mov	r1, #0
   18cdc:	mov	r3, #6
   18ce0:	strh	r3, [sp, #8]
   18ce4:	str	r0, [sp, #12]
   18ce8:	mov	r0, sp
   18cec:	bl	11900 <gettimeofday@plt>
   18cf0:	ldm	sp, {r2, r3}
   18cf4:	str	r2, [sp, #348]	; 0x15c
   18cf8:	str	r3, [sp, #352]	; 0x160
   18cfc:	bl	1187c <setutxent@plt>
   18d00:	add	r0, sp, #8
   18d04:	bl	11804 <pututxline@plt>
   18d08:	add	r1, sp, #8
   18d0c:	ldr	r0, [pc, #12]	; 18d20 <tcgetattr@plt+0x7138>
   18d10:	bl	11af8 <updwtmpx@plt>
   18d14:	bl	11a98 <endutxent@plt>
   18d18:	add	sp, sp, #396	; 0x18c
   18d1c:	pop	{r4, r5, r6, r7, pc}
   18d20:	andeq	r0, r2, r4, lsl #20
   18d24:	push	{r4, r5, r6, lr}
   18d28:	mov	r2, #2
   18d2c:	ldr	r4, [pc, #44]	; 18d60 <tcgetattr@plt+0x7178>
   18d30:	mov	r5, r0
   18d34:	mov	r0, r4
   18d38:	bl	11a44 <strncpy@plt>
   18d3c:	mov	r0, r5
   18d40:	bl	119c0 <strlen@plt>
   18d44:	mov	r2, #2
   18d48:	sub	r1, r0, #2
   18d4c:	add	r1, r5, r1
   18d50:	add	r0, r4, r2
   18d54:	bl	11a44 <strncpy@plt>
   18d58:	mov	r0, r4
   18d5c:	pop	{r4, r5, r6, pc}
   18d60:	muleq	r3, r0, r6
   18d64:	push	{r4, r5, lr}
   18d68:	sub	sp, sp, #396	; 0x18c
   18d6c:	mov	r1, r0
   18d70:	mov	r2, #32
   18d74:	add	r0, sp, #16
   18d78:	bl	11a44 <strncpy@plt>
   18d7c:	bl	1187c <setutxent@plt>
   18d80:	add	r0, sp, #8
   18d84:	bl	11a74 <getutxline@plt>
   18d88:	subs	r4, r0, #0
   18d8c:	beq	18dec <tcgetattr@plt+0x7204>
   18d90:	mov	r5, #0
   18d94:	mov	r3, #8
   18d98:	strh	r3, [r4]
   18d9c:	mov	r1, r5
   18da0:	str	r5, [r4, #332]	; 0x14c
   18da4:	mov	r0, sp
   18da8:	bl	11900 <gettimeofday@plt>
   18dac:	ldm	sp, {r2, r3}
   18db0:	mov	r1, r5
   18db4:	add	r0, r4, #44	; 0x2c
   18db8:	str	r3, [r4, #344]	; 0x158
   18dbc:	str	r2, [r4, #340]	; 0x154
   18dc0:	mov	r2, #32
   18dc4:	bl	11a38 <memset@plt>
   18dc8:	mov	r1, r5
   18dcc:	mov	r2, #256	; 0x100
   18dd0:	add	r0, r4, #76	; 0x4c
   18dd4:	bl	11a38 <memset@plt>
   18dd8:	mov	r0, r4
   18ddc:	bl	11804 <pututxline@plt>
   18de0:	mov	r1, r4
   18de4:	ldr	r0, [pc, #12]	; 18df8 <tcgetattr@plt+0x7210>
   18de8:	bl	11af8 <updwtmpx@plt>
   18dec:	bl	11a98 <endutxent@plt>
   18df0:	add	sp, sp, #396	; 0x18c
   18df4:	pop	{r4, r5, pc}
   18df8:	andeq	r0, r2, r4, lsl #20
   18dfc:	ldr	r3, [r0]
   18e00:	push	{r4, r5, r6, lr}
   18e04:	cmp	r3, #0
   18e08:	ldr	r5, [r0, #16]
   18e0c:	beq	18e74 <tcgetattr@plt+0x728c>
   18e10:	ldr	r0, [r1, #8]
   18e14:	mov	r2, #0
   18e18:	add	r0, r0, #1
   18e1c:	str	r0, [r1, #8]
   18e20:	b	18e28 <tcgetattr@plt+0x7240>
   18e24:	add	r2, r2, #1
   18e28:	add	r3, r3, #24
   18e2c:	ldr	r0, [r3, #-20]	; 0xffffffec
   18e30:	cmp	r0, #0
   18e34:	bne	18e24 <tcgetattr@plt+0x723c>
   18e38:	ldr	r0, [r3, #-24]	; 0xffffffe8
   18e3c:	cmp	r0, #0
   18e40:	bne	18e24 <tcgetattr@plt+0x723c>
   18e44:	ldr	r0, [r3, #-8]
   18e48:	cmp	r0, #0
   18e4c:	bne	18e24 <tcgetattr@plt+0x723c>
   18e50:	ldr	r0, [r3, #-4]
   18e54:	cmp	r0, #0
   18e58:	bne	18e24 <tcgetattr@plt+0x723c>
   18e5c:	ldm	r1, {r0, r3}
   18e60:	add	ip, r2, r2, lsl #1
   18e64:	add	r0, r0, ip
   18e68:	add	r2, r3, r2
   18e6c:	stm	r1, {r0, r2}
   18e70:	b	18e88 <tcgetattr@plt+0x72a0>
   18e74:	ldr	r3, [r0, #4]
   18e78:	cmp	r3, #0
   18e7c:	ldrne	r3, [r1, #8]
   18e80:	addne	r3, r3, #1
   18e84:	strne	r3, [r1, #8]
   18e88:	cmp	r5, #0
   18e8c:	popeq	{r4, r5, r6, pc}
   18e90:	ldr	r0, [r5]
   18e94:	cmp	r0, #0
   18e98:	popeq	{r4, r5, r6, pc}
   18e9c:	mov	r4, r1
   18ea0:	mov	r1, r4
   18ea4:	bl	18dfc <tcgetattr@plt+0x7214>
   18ea8:	ldr	r3, [r4, #12]
   18eac:	ldr	r0, [r5, #16]!
   18eb0:	add	r3, r3, #1
   18eb4:	cmp	r0, #0
   18eb8:	str	r3, [r4, #12]
   18ebc:	bne	18ea0 <tcgetattr@plt+0x72b8>
   18ec0:	pop	{r4, r5, r6, pc}
   18ec4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ec8:	sub	sp, sp, #36	; 0x24
   18ecc:	ldr	sl, [r0]
   18ed0:	str	r0, [sp, #12]
   18ed4:	cmp	sl, #0
   18ed8:	str	r1, [sp, #16]
   18edc:	str	r2, [sp, #20]
   18ee0:	mov	r9, r3
   18ee4:	ldr	r8, [r0, #16]
   18ee8:	ldr	r7, [sp, #72]	; 0x48
   18eec:	beq	190b8 <tcgetattr@plt+0x74d0>
   18ef0:	add	fp, sl, #24
   18ef4:	str	r8, [sp, #28]
   18ef8:	str	r3, [sp, #24]
   18efc:	ldr	r4, [fp, #-20]	; 0xffffffec
   18f00:	sub	r1, fp, #24
   18f04:	cmp	r4, #0
   18f08:	bne	18f18 <tcgetattr@plt+0x7330>
   18f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f10:	cmp	r3, #0
   18f14:	beq	1908c <tcgetattr@plt+0x74a4>
   18f18:	ldr	r3, [fp, #-12]
   18f1c:	tst	r3, #4
   18f20:	moveq	sl, r1
   18f24:	moveq	r5, r3
   18f28:	ldrne	r5, [sl, #12]
   18f2c:	ands	r5, r5, #8
   18f30:	bne	19074 <tcgetattr@plt+0x748c>
   18f34:	tst	r3, #8
   18f38:	bne	18fb4 <tcgetattr@plt+0x73cc>
   18f3c:	sub	r3, r4, #1
   18f40:	cmp	r3, #254	; 0xfe
   18f44:	bhi	18fb4 <tcgetattr@plt+0x73cc>
   18f48:	bl	11990 <__ctype_b_loc@plt>
   18f4c:	lsl	r3, r4, #1
   18f50:	ldr	r1, [r0]
   18f54:	ldrh	r3, [r1, r3]
   18f58:	tst	r3, #16384	; 0x4000
   18f5c:	beq	18fb4 <tcgetattr@plt+0x73cc>
   18f60:	ldr	r3, [r7, #4]
   18f64:	add	r1, r3, #1
   18f68:	str	r1, [r7, #4]
   18f6c:	strb	r4, [r3]
   18f70:	ldr	r3, [sl, #8]
   18f74:	cmp	r3, #0
   18f78:	beq	18fa8 <tcgetattr@plt+0x73c0>
   18f7c:	ldr	r3, [r7, #4]
   18f80:	mov	r2, #58	; 0x3a
   18f84:	add	r1, r3, #1
   18f88:	str	r1, [r7, #4]
   18f8c:	strb	r2, [r3]
   18f90:	ldr	r3, [sl, #12]
   18f94:	tst	r3, #1
   18f98:	ldrne	r3, [r7, #4]
   18f9c:	addne	r1, r3, #1
   18fa0:	strne	r1, [r7, #4]
   18fa4:	strbne	r2, [r3]
   18fa8:	ldr	r3, [r7, #4]
   18fac:	mov	r2, #0
   18fb0:	strb	r2, [r3]
   18fb4:	ldr	r4, [fp, #-24]	; 0xffffffe8
   18fb8:	cmp	r4, #0
   18fbc:	beq	19074 <tcgetattr@plt+0x748c>
   18fc0:	ldr	r8, [r7]
   18fc4:	ldr	r6, [r8, #8]
   18fc8:	ldr	r0, [r6]
   18fcc:	cmp	r0, #0
   18fd0:	beq	18ff4 <tcgetattr@plt+0x740c>
   18fd4:	mov	r9, r6
   18fd8:	mov	r1, r4
   18fdc:	bl	1178c <strcmp@plt>
   18fe0:	cmp	r0, #0
   18fe4:	beq	1907c <tcgetattr@plt+0x7494>
   18fe8:	ldr	r0, [r9, #16]!
   18fec:	cmp	r0, #0
   18ff0:	bne	18fd8 <tcgetattr@plt+0x73f0>
   18ff4:	ldr	r3, [sl, #8]
   18ff8:	ldr	r1, [r7, #8]
   18ffc:	cmp	r3, #0
   19000:	str	r4, [r1]
   19004:	beq	19018 <tcgetattr@plt+0x7430>
   19008:	ldr	r3, [sl, #12]
   1900c:	tst	r3, #1
   19010:	moveq	r5, #1
   19014:	movne	r5, #2
   19018:	str	r5, [r1, #4]
   1901c:	ldr	ip, [fp, #-20]	; 0xffffffec
   19020:	mov	r3, #0
   19024:	cmp	ip, r3
   19028:	str	r3, [r1, #8]
   1902c:	ldr	r2, [sp, #24]
   19030:	ldr	r3, [r8, #48]	; 0x30
   19034:	ldreq	ip, [sl, #4]
   19038:	sub	r3, r2, r3
   1903c:	bic	ip, ip, #-16777216	; 0xff000000
   19040:	asr	r3, r3, #2
   19044:	add	lr, r1, #16
   19048:	rsb	r0, r3, r3, lsl #3
   1904c:	add	r0, r0, r0, lsl #6
   19050:	add	r0, r3, r0, lsl #3
   19054:	rsb	r0, r0, r0, lsl #15
   19058:	add	r3, r3, r0, lsl #3
   1905c:	add	r3, r3, #1
   19060:	add	r3, ip, r3, lsl #24
   19064:	str	r3, [r1, #12]
   19068:	mov	r3, #0
   1906c:	str	lr, [r7, #8]
   19070:	str	r3, [r1, #16]
   19074:	add	fp, fp, #24
   19078:	b	18efc <tcgetattr@plt+0x7314>
   1907c:	sub	r6, r9, r6
   19080:	cmn	r6, #15
   19084:	bge	19074 <tcgetattr@plt+0x748c>
   19088:	b	18ff4 <tcgetattr@plt+0x740c>
   1908c:	ldr	r3, [fp, #-8]
   19090:	cmp	r3, #0
   19094:	bne	18f18 <tcgetattr@plt+0x7330>
   19098:	ldr	r3, [fp, #-4]
   1909c:	cmp	r3, #0
   190a0:	bne	18f18 <tcgetattr@plt+0x7330>
   190a4:	ldr	r3, [sp, #12]
   190a8:	ldr	r8, [sp, #28]
   190ac:	ldr	r9, [sp, #24]
   190b0:	ldr	r3, [r3, #4]
   190b4:	b	190d0 <tcgetattr@plt+0x74e8>
   190b8:	ldr	r3, [sp, #12]
   190bc:	ldr	r3, [r3, #4]
   190c0:	cmp	r3, #0
   190c4:	moveq	r0, r9
   190c8:	moveq	r9, r3
   190cc:	beq	19140 <tcgetattr@plt+0x7558>
   190d0:	ldr	r2, [r7, #4]
   190d4:	ldr	r1, [sp, #12]
   190d8:	str	r3, [r9]
   190dc:	cmp	r8, #0
   190e0:	stmib	r9, {r1, r2}
   190e4:	ldr	r2, [sp, #16]
   190e8:	mov	r3, #0
   190ec:	str	r2, [r9, #16]
   190f0:	ldr	r2, [sp, #20]
   190f4:	str	r3, [r9, #12]
   190f8:	str	r2, [r9, #20]
   190fc:	str	r3, [r9, #24]
   19100:	str	r3, [r9, #32]
   19104:	str	r3, [r9, #28]
   19108:	beq	1913c <tcgetattr@plt+0x7554>
   1910c:	ldr	r2, [r8]
   19110:	cmp	r2, r3
   19114:	beq	19188 <tcgetattr@plt+0x75a0>
   19118:	add	r3, r3, #1
   1911c:	ldr	r2, [r8, r3, lsl #4]
   19120:	cmp	r2, #0
   19124:	bne	19118 <tcgetattr@plt+0x7530>
   19128:	lsl	r3, r3, #2
   1912c:	ldr	r2, [r7, #12]
   19130:	add	r3, r2, r3
   19134:	str	r2, [r9, #28]
   19138:	str	r3, [r7, #12]
   1913c:	add	r0, r9, #36	; 0x24
   19140:	cmp	r8, #0
   19144:	beq	19180 <tcgetattr@plt+0x7598>
   19148:	ldr	r1, [r8]
   1914c:	cmp	r1, #0
   19150:	beq	19180 <tcgetattr@plt+0x7598>
   19154:	mov	r2, #0
   19158:	add	r4, r2, #1
   1915c:	mov	r3, r0
   19160:	str	r7, [sp]
   19164:	mov	r0, r1
   19168:	mov	r1, r9
   1916c:	bl	18ec4 <tcgetattr@plt+0x72dc>
   19170:	ldr	r1, [r8, r4, lsl #4]
   19174:	mov	r2, r4
   19178:	cmp	r1, #0
   1917c:	bne	19158 <tcgetattr@plt+0x7570>
   19180:	add	sp, sp, #36	; 0x24
   19184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19188:	mov	r3, r2
   1918c:	b	1912c <tcgetattr@plt+0x7544>
   19190:	cmp	r0, #86	; 0x56
   19194:	beq	191a0 <tcgetattr@plt+0x75b8>
   19198:	mov	r0, #7
   1919c:	bx	lr
   191a0:	ldr	r3, [pc, #104]	; 19210 <tcgetattr@plt+0x7628>
   191a4:	push	{r4, lr}
   191a8:	mov	r4, r2
   191ac:	ldr	r3, [r3]
   191b0:	cmp	r3, #0
   191b4:	beq	191d8 <tcgetattr@plt+0x75f0>
   191b8:	mov	r1, r2
   191bc:	ldr	r0, [r2, #48]	; 0x30
   191c0:	blx	r3
   191c4:	ldr	r0, [r4, #16]
   191c8:	ands	r0, r0, #32
   191cc:	beq	1920c <tcgetattr@plt+0x7624>
   191d0:	mov	r0, #0
   191d4:	pop	{r4, pc}
   191d8:	ldr	r3, [pc, #52]	; 19214 <tcgetattr@plt+0x762c>
   191dc:	ldr	r2, [r3]
   191e0:	cmp	r2, #0
   191e4:	beq	191f8 <tcgetattr@plt+0x7610>
   191e8:	ldr	r1, [pc, #40]	; 19218 <tcgetattr@plt+0x7630>
   191ec:	ldr	r0, [r4, #48]	; 0x30
   191f0:	bl	119e4 <fprintf@plt>
   191f4:	b	191c4 <tcgetattr@plt+0x75dc>
   191f8:	ldr	r2, [pc, #28]	; 1921c <tcgetattr@plt+0x7634>
   191fc:	ldr	r1, [pc, #28]	; 19220 <tcgetattr@plt+0x7638>
   19200:	mov	r0, r4
   19204:	bl	1e360 <argp_error@@Base>
   19208:	b	191c4 <tcgetattr@plt+0x75dc>
   1920c:	bl	119a8 <exit@plt>
   19210:	muleq	r3, ip, r6
   19214:	andeq	sl, r3, r8, ror #28
   19218:	ldrdeq	r0, [r2], -r4
   1921c:	andeq	r0, r2, ip, lsr #22
   19220:	strdeq	pc, [r1], -ip
   19224:	cmn	r0, #3
   19228:	push	{r4, r5, lr}
   1922c:	mov	r4, r2
   19230:	sub	sp, sp, #12
   19234:	beq	19318 <tcgetattr@plt+0x7730>
   19238:	ble	192a8 <tcgetattr@plt+0x76c0>
   1923c:	cmn	r0, #2
   19240:	beq	19268 <tcgetattr@plt+0x7680>
   19244:	cmp	r0, #63	; 0x3f
   19248:	bne	1930c <tcgetattr@plt+0x7724>
   1924c:	mov	r0, r4
   19250:	ldr	r2, [pc, #236]	; 19344 <tcgetattr@plt+0x775c>
   19254:	ldr	r1, [r4, #48]	; 0x30
   19258:	bl	1e2b0 <argp_state_help@@Base>
   1925c:	mov	r0, #0
   19260:	add	sp, sp, #12
   19264:	pop	{r4, r5, pc}
   19268:	ldr	r3, [pc, #216]	; 19348 <tcgetattr@plt+0x7760>
   1926c:	mov	r0, r1
   19270:	str	r1, [sp, #4]
   19274:	str	r1, [r3]
   19278:	bl	1a148 <argp_parse@@Base+0xdec>
   1927c:	ldr	r3, [r4, #16]
   19280:	ldr	r2, [pc, #196]	; 1934c <tcgetattr@plt+0x7764>
   19284:	and	r3, r3, #3
   19288:	cmp	r3, #1
   1928c:	ldr	r1, [sp, #4]
   19290:	str	r0, [r4, #40]	; 0x28
   19294:	str	r0, [r2]
   19298:	beq	19334 <tcgetattr@plt+0x774c>
   1929c:	mov	r0, #0
   192a0:	add	sp, sp, #12
   192a4:	pop	{r4, r5, pc}
   192a8:	cmn	r0, #4
   192ac:	bne	1930c <tcgetattr@plt+0x7724>
   192b0:	cmp	r1, #0
   192b4:	ldr	r0, [pc, #148]	; 19350 <tcgetattr@plt+0x7768>
   192b8:	mov	r2, #10
   192bc:	movne	r0, r1
   192c0:	mov	r1, #0
   192c4:	bl	11798 <strtol@plt>
   192c8:	ldr	r4, [pc, #132]	; 19354 <tcgetattr@plt+0x776c>
   192cc:	str	r0, [r4]
   192d0:	ldr	r3, [r4]
   192d4:	cmp	r3, #0
   192d8:	sub	r3, r3, #1
   192dc:	str	r3, [r4]
   192e0:	ble	1929c <tcgetattr@plt+0x76b4>
   192e4:	mov	r5, #1
   192e8:	mov	r0, r5
   192ec:	bl	11858 <sleep@plt>
   192f0:	ldr	r3, [r4]
   192f4:	cmp	r3, #0
   192f8:	sub	r3, r3, #1
   192fc:	str	r3, [r4]
   19300:	bgt	192e8 <tcgetattr@plt+0x7700>
   19304:	mov	r0, #0
   19308:	b	192a0 <tcgetattr@plt+0x76b8>
   1930c:	mov	r0, #7
   19310:	add	sp, sp, #12
   19314:	pop	{r4, r5, pc}
   19318:	mov	r0, r4
   1931c:	ldr	r2, [pc, #52]	; 19358 <tcgetattr@plt+0x7770>
   19320:	ldr	r1, [r4, #48]	; 0x30
   19324:	bl	1e2b0 <argp_state_help@@Base>
   19328:	mov	r0, #0
   1932c:	add	sp, sp, #12
   19330:	pop	{r4, r5, pc}
   19334:	ldr	r3, [r4, #8]
   19338:	mov	r0, #0
   1933c:	str	r1, [r3]
   19340:	b	19260 <tcgetattr@plt+0x7678>
   19344:	andeq	r0, r0, sl, ror r2
   19348:	andeq	r2, r3, r8, lsl #10
   1934c:	andeq	r2, r3, r0, lsl #10
   19350:	andeq	r0, r2, r0, asr fp
   19354:	muleq	r3, r8, r6
   19358:	andeq	r0, r0, r1, lsl #4

0001935c <argp_parse@@Base>:
   1935c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19360:	add	fp, sp, #32
   19364:	tst	r3, #1
   19368:	sub	sp, sp, #228	; 0xe4
   1936c:	mov	r6, r3
   19370:	mov	r7, r0
   19374:	str	r1, [fp, #-240]	; 0xffffff10
   19378:	str	r2, [fp, #-232]	; 0xffffff18
   1937c:	bne	193a8 <argp_parse@@Base+0x4c>
   19380:	ldr	r3, [pc, #3260]	; 1a044 <argp_parse@@Base+0xce8>
   19384:	ldr	r4, [pc, #3260]	; 1a048 <argp_parse@@Base+0xcec>
   19388:	ldr	r2, [r3]
   1938c:	cmp	r2, #0
   19390:	ldreq	r2, [fp, #-232]	; 0xffffff18
   19394:	ldreq	r2, [r2]
   19398:	streq	r2, [r3]
   1939c:	ldr	r3, [r4]
   193a0:	cmp	r3, #0
   193a4:	beq	19a48 <argp_parse@@Base+0x6ec>
   193a8:	ands	r3, r6, #16
   193ac:	beq	19950 <argp_parse@@Base+0x5f4>
   193b0:	sub	r4, fp, #196	; 0xc4
   193b4:	mov	r0, r4
   193b8:	mov	r2, #36	; 0x24
   193bc:	mov	r1, #0
   193c0:	bl	11a38 <memset@plt>
   193c4:	ands	r3, r6, #4
   193c8:	str	r3, [fp, #-244]	; 0xffffff0c
   193cc:	mov	r3, #0
   193d0:	moveq	r0, #1
   193d4:	movne	r0, #0
   193d8:	cmp	r7, r3
   193dc:	str	r3, [fp, #-224]	; 0xffffff20
   193e0:	str	r3, [fp, #-220]	; 0xffffff24
   193e4:	str	r3, [fp, #-216]	; 0xffffff28
   193e8:	str	r0, [fp, #-228]	; 0xffffff1c
   193ec:	beq	19854 <argp_parse@@Base+0x4f8>
   193f0:	mov	r0, r7
   193f4:	sub	r1, fp, #228	; 0xe4
   193f8:	bl	18dfc <tcgetattr@plt+0x7214>
   193fc:	ldr	r5, [fp, #-220]	; 0xffffff24
   19400:	ldr	r9, [fp, #-216]	; 0xffffff28
   19404:	add	r5, r5, #1
   19408:	ldr	r3, [fp, #-224]	; 0xffffff20
   1940c:	add	r5, r5, r5, lsl #3
   19410:	lsl	r2, r9, #2
   19414:	lsl	r5, r5, #2
   19418:	add	r3, r3, #1
   1941c:	add	sl, r2, r5
   19420:	ldr	r0, [fp, #-228]	; 0xffffff1c
   19424:	add	r9, sl, r3, lsl #4
   19428:	str	r2, [fp, #-236]	; 0xffffff14
   1942c:	add	r0, r9, r0
   19430:	add	r0, r0, #1
   19434:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   19438:	cmp	r0, #0
   1943c:	mov	r8, r0
   19440:	str	r0, [fp, #-40]	; 0xffffffd8
   19444:	moveq	r5, #12
   19448:	beq	19848 <argp_parse@@Base+0x4ec>
   1944c:	mov	r3, #1
   19450:	str	r3, [fp, #-196]	; 0xffffff3c
   19454:	str	r3, [fp, #-192]	; 0xffffff40
   19458:	ldm	r4!, {r0, r1, r2, r3}
   1945c:	sub	ip, fp, #148	; 0x94
   19460:	add	r5, r8, r5
   19464:	str	r5, [fp, #-104]	; 0xffffff98
   19468:	stmia	ip!, {r0, r1, r2, r3}
   1946c:	add	r3, r8, sl
   19470:	mov	lr, r3
   19474:	ldm	r4!, {r0, r1, r2, r3}
   19478:	add	sl, r8, r9
   1947c:	str	lr, [fp, #-248]	; 0xffffff08
   19480:	str	lr, [fp, #-152]	; 0xffffff68
   19484:	ldr	lr, [r4]
   19488:	stmia	ip!, {r0, r1, r2, r3}
   1948c:	mov	r0, r5
   19490:	ldr	r2, [fp, #-236]	; 0xffffff14
   19494:	mov	r1, #0
   19498:	str	lr, [ip]
   1949c:	str	r8, [fp, #-112]	; 0xffffff90
   194a0:	str	sl, [fp, #-156]	; 0xffffff64
   194a4:	bl	11a38 <memset@plt>
   194a8:	ldr	lr, [fp, #-248]	; 0xffffff08
   194ac:	sub	r4, fp, #160	; 0xa0
   194b0:	tst	r6, #8
   194b4:	str	lr, [fp, #-204]	; 0xffffff34
   194b8:	str	sl, [fp, #-208]	; 0xffffff30
   194bc:	str	r5, [fp, #-200]	; 0xffffff38
   194c0:	str	r4, [fp, #-212]	; 0xffffff2c
   194c4:	bne	19868 <argp_parse@@Base+0x50c>
   194c8:	ldr	r3, [fp, #-244]	; 0xffffff0c
   194cc:	cmp	r3, #0
   194d0:	addne	r3, sl, #1
   194d4:	movne	r2, #43	; 0x2b
   194d8:	strbne	r2, [sl]
   194dc:	movne	sl, r3
   194e0:	strne	r3, [fp, #-208]	; 0xffffff30
   194e4:	mov	r2, #0
   194e8:	strb	r2, [sl]
   194ec:	ldr	r3, [fp, #-204]	; 0xffffff34
   194f0:	cmp	r7, r2
   194f4:	str	r2, [r3]
   194f8:	str	r7, [fp, #-160]	; 0xffffff60
   194fc:	beq	19a10 <argp_parse@@Base+0x6b4>
   19500:	sub	r1, fp, #212	; 0xd4
   19504:	mov	r0, r7
   19508:	str	r1, [sp]
   1950c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19510:	mov	r1, r2
   19514:	bl	18ec4 <tcgetattr@plt+0x72dc>
   19518:	ldr	r7, [fp, #-160]	; 0xffffff60
   1951c:	ldr	r5, [fp, #-112]	; 0xffffff90
   19520:	mov	r8, r0
   19524:	str	r0, [fp, #-108]	; 0xffffff94
   19528:	mov	r2, #56	; 0x38
   1952c:	mov	r1, #0
   19530:	sub	r0, fp, #96	; 0x60
   19534:	bl	11a38 <memset@plt>
   19538:	ldr	r2, [pc, #2828]	; 1a04c <argp_parse@@Base+0xcf0>
   1953c:	ldr	r3, [pc, #2828]	; 1a050 <argp_parse@@Base+0xcf4>
   19540:	ldr	r0, [fp, #-240]	; 0xffffff10
   19544:	ldr	r1, [r2]
   19548:	str	r0, [fp, #-92]	; 0xffffffa4
   1954c:	ldr	r2, [r3]
   19550:	ldr	r0, [fp, #-232]	; 0xffffff18
   19554:	mov	r3, #1
   19558:	cmp	r5, r8
   1955c:	str	r7, [fp, #-96]	; 0xffffffa0
   19560:	str	r0, [fp, #-88]	; 0xffffffa8
   19564:	str	r6, [fp, #-80]	; 0xffffffb0
   19568:	str	r4, [fp, #-44]	; 0xffffffd4
   1956c:	str	r1, [fp, #-52]	; 0xffffffcc
   19570:	str	r2, [fp, #-48]	; 0xffffffd0
   19574:	str	r3, [fp, #-100]	; 0xffffff9c
   19578:	bcc	1987c <argp_parse@@Base+0x520>
   1957c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19580:	tst	r3, #2
   19584:	bne	19a20 <argp_parse@@Base+0x6c4>
   19588:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1958c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   19590:	mov	r2, #1
   19594:	str	r2, [fp, #-144]	; 0xffffff70
   19598:	ldr	r2, [fp, #-232]	; 0xffffff18
   1959c:	cmp	r2, r3
   195a0:	beq	19f20 <argp_parse@@Base+0xbc4>
   195a4:	ldr	r3, [pc, #2716]	; 1a048 <argp_parse@@Base+0xcec>
   195a8:	ldr	r3, [r3]
   195ac:	str	r3, [fp, #-56]	; 0xffffffc8
   195b0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   195b4:	ldr	r5, [fp, #-84]	; 0xffffffac
   195b8:	ldr	sl, [pc, #2708]	; 1a054 <argp_parse@@Base+0xcf8>
   195bc:	mov	r0, r4
   195c0:	mov	r6, #0
   195c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   195c8:	cmp	r3, #0
   195cc:	beq	19a5c <argp_parse@@Base+0x700>
   195d0:	cmp	r3, r5
   195d4:	strgt	r6, [fp, #-72]	; 0xffffffb8
   195d8:	bgt	19a5c <argp_parse@@Base+0x700>
   195dc:	cmp	r5, r0
   195e0:	blt	19df8 <argp_parse@@Base+0xa9c>
   195e4:	cmp	r5, r0
   195e8:	bne	19e04 <argp_parse@@Base+0xaa8>
   195ec:	ldr	r3, [fp, #-112]	; 0xffffff90
   195f0:	ldr	ip, [fp, #-108]	; 0xffffff94
   195f4:	cmp	r3, ip
   195f8:	bcs	19fe8 <argp_parse@@Base+0xc8c>
   195fc:	mov	r5, #0
   19600:	add	r4, r3, #36	; 0x24
   19604:	mov	r7, r5
   19608:	ldr	r6, [pc, #2632]	; 1a058 <argp_parse@@Base+0xcfc>
   1960c:	mov	r0, r5
   19610:	b	19658 <argp_parse@@Base+0x2fc>
   19614:	ldr	ip, [r4, #-4]
   19618:	str	ip, [fp, #-60]	; 0xffffffc4
   1961c:	ldr	ip, [r4, #-12]
   19620:	str	ip, [fp, #-68]	; 0xffffffbc
   19624:	ldr	ip, [r4, #-8]
   19628:	str	r3, [fp, #-76]	; 0xffffffb4
   1962c:	str	ip, [fp, #-64]	; 0xffffffc0
   19630:	blx	r5
   19634:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19638:	str	r3, [r4, #-4]
   1963c:	ldr	ip, [fp, #-108]	; 0xffffff94
   19640:	cmp	ip, r4
   19644:	bls	19f90 <argp_parse@@Base+0xc34>
   19648:	cmp	r0, #7
   1964c:	cmpne	r0, #0
   19650:	bne	19f6c <argp_parse@@Base+0xc10>
   19654:	add	r4, r4, #36	; 0x24
   19658:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1965c:	cmp	r3, #0
   19660:	bne	19640 <argp_parse@@Base+0x2e4>
   19664:	ldr	r5, [r4, #-36]	; 0xffffffdc
   19668:	sub	r2, fp, #96	; 0x60
   1966c:	cmp	r5, #0
   19670:	mov	r1, r7
   19674:	mov	r0, r6
   19678:	bne	19614 <argp_parse@@Base+0x2b8>
   1967c:	cmp	ip, r4
   19680:	mov	r0, #7
   19684:	bhi	19654 <argp_parse@@Base+0x2f8>
   19688:	ldr	r3, [fp, #-112]	; 0xffffff90
   1968c:	sub	r4, ip, #36	; 0x24
   19690:	cmp	r4, r3
   19694:	movcs	r5, #7
   19698:	bcc	19720 <argp_parse@@Base+0x3c4>
   1969c:	cmp	r5, #7
   196a0:	cmpne	r5, #0
   196a4:	bne	19f80 <argp_parse@@Base+0xc24>
   196a8:	sub	r4, r4, #36	; 0x24
   196ac:	mov	r7, #0
   196b0:	ldr	r6, [pc, #2468]	; 1a05c <argp_parse@@Base+0xd00>
   196b4:	b	19700 <argp_parse@@Base+0x3a4>
   196b8:	ldr	r3, [r4, #68]	; 0x44
   196bc:	ldr	ip, [r4, #48]	; 0x30
   196c0:	str	r3, [fp, #-60]	; 0xffffffc4
   196c4:	ldr	r3, [r4, #60]	; 0x3c
   196c8:	str	r3, [fp, #-68]	; 0xffffffbc
   196cc:	ldr	r3, [r4, #64]	; 0x40
   196d0:	str	ip, [fp, #-76]	; 0xffffffb4
   196d4:	str	r3, [fp, #-64]	; 0xffffffc0
   196d8:	blx	r5
   196dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   196e0:	str	r3, [r4, #68]	; 0x44
   196e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   196e8:	cmp	r4, r3
   196ec:	bcc	19fe0 <argp_parse@@Base+0xc84>
   196f0:	cmp	r0, #7
   196f4:	cmpne	r0, #0
   196f8:	bne	19f50 <argp_parse@@Base+0xbf4>
   196fc:	sub	r4, r4, #36	; 0x24
   19700:	ldr	r5, [r4, #36]	; 0x24
   19704:	sub	r2, fp, #96	; 0x60
   19708:	cmp	r5, #0
   1970c:	mov	r1, r7
   19710:	mov	r0, r6
   19714:	bne	196b8 <argp_parse@@Base+0x35c>
   19718:	cmp	r4, r3
   1971c:	bcs	196fc <argp_parse@@Base+0x3a0>
   19720:	ldr	r2, [fp, #4]
   19724:	cmp	r2, #0
   19728:	beq	19744 <argp_parse@@Base+0x3e8>
   1972c:	mov	r5, #0
   19730:	ldr	r1, [fp, #4]
   19734:	ldr	r2, [fp, #-84]	; 0xffffffac
   19738:	str	r2, [r1]
   1973c:	cmp	r5, #0
   19740:	bne	19f60 <argp_parse@@Base+0xc04>
   19744:	ldr	ip, [fp, #-108]	; 0xffffff94
   19748:	b	19e1c <argp_parse@@Base+0xac0>
   1974c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19750:	mov	r5, r0
   19754:	ldr	ip, [fp, #-108]	; 0xffffff94
   19758:	cmp	ip, r3
   1975c:	bls	19f18 <argp_parse@@Base+0xbbc>
   19760:	ldr	r7, [pc, #2296]	; 1a060 <argp_parse@@Base+0xd04>
   19764:	add	r4, r3, #36	; 0x24
   19768:	mov	r8, #0
   1976c:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19770:	sub	r2, fp, #96	; 0x60
   19774:	cmp	r3, #0
   19778:	mov	r1, r8
   1977c:	mov	r0, r7
   19780:	mov	r6, r4
   19784:	beq	197b8 <argp_parse@@Base+0x45c>
   19788:	ldr	ip, [r4, #-4]
   1978c:	ldr	lr, [r4, #-24]	; 0xffffffe8
   19790:	str	ip, [fp, #-60]	; 0xffffffc4
   19794:	ldr	ip, [r4, #-12]
   19798:	str	ip, [fp, #-68]	; 0xffffffbc
   1979c:	ldr	ip, [r4, #-8]
   197a0:	str	lr, [fp, #-76]	; 0xffffffb4
   197a4:	str	ip, [fp, #-64]	; 0xffffffc0
   197a8:	blx	r3
   197ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   197b0:	str	r3, [r4, #-4]
   197b4:	ldr	ip, [fp, #-108]	; 0xffffff94
   197b8:	cmp	ip, r6
   197bc:	add	r4, r4, #36	; 0x24
   197c0:	bhi	1976c <argp_parse@@Base+0x410>
   197c4:	ldr	r3, [fp, #-112]	; 0xffffff90
   197c8:	sub	ip, ip, #36	; 0x24
   197cc:	cmp	r3, ip
   197d0:	bhi	19838 <argp_parse@@Base+0x4dc>
   197d4:	ldr	r8, [pc, #2184]	; 1a064 <argp_parse@@Base+0xd08>
   197d8:	sub	r4, ip, #36	; 0x24
   197dc:	mov	r9, #0
   197e0:	ldr	r6, [r4, #36]	; 0x24
   197e4:	sub	r2, fp, #96	; 0x60
   197e8:	cmp	r6, #0
   197ec:	mov	r1, r9
   197f0:	mov	r0, r8
   197f4:	mov	r7, r4
   197f8:	beq	1982c <argp_parse@@Base+0x4d0>
   197fc:	ldr	r3, [r4, #68]	; 0x44
   19800:	ldr	ip, [r4, #48]	; 0x30
   19804:	str	r3, [fp, #-60]	; 0xffffffc4
   19808:	ldr	r3, [r4, #60]	; 0x3c
   1980c:	str	r3, [fp, #-68]	; 0xffffffbc
   19810:	ldr	r3, [r4, #64]	; 0x40
   19814:	str	ip, [fp, #-76]	; 0xffffffb4
   19818:	str	r3, [fp, #-64]	; 0xffffffc0
   1981c:	blx	r6
   19820:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19824:	str	r3, [r4, #68]	; 0x44
   19828:	ldr	r3, [fp, #-112]	; 0xffffff90
   1982c:	cmp	r3, r7
   19830:	sub	r4, r4, #36	; 0x24
   19834:	bls	197e0 <argp_parse@@Base+0x484>
   19838:	cmp	r5, #7
   1983c:	moveq	r5, #22
   19840:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19844:	bl	1a1f4 <argp_parse@@Base+0xe98>
   19848:	mov	r0, r5
   1984c:	sub	sp, fp, #32
   19850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19854:	mov	sl, #36	; 0x24
   19858:	mov	r5, sl
   1985c:	mov	r9, #52	; 0x34
   19860:	str	r7, [fp, #-236]	; 0xffffff14
   19864:	b	1942c <argp_parse@@Base+0xd0>
   19868:	add	sl, sl, #1
   1986c:	mov	r3, #45	; 0x2d
   19870:	str	sl, [fp, #-208]	; 0xffffff30
   19874:	strb	r3, [r8, r9]
   19878:	b	194e4 <argp_parse@@Base+0x188>
   1987c:	ldr	r3, [fp, #8]
   19880:	add	r4, r5, #36	; 0x24
   19884:	str	r3, [r5, #24]
   19888:	mov	r7, #0
   1988c:	ldr	r6, [pc, #2004]	; 1a068 <argp_parse@@Base+0xd0c>
   19890:	b	198e8 <argp_parse@@Base+0x58c>
   19894:	ldr	r2, [r4, #-4]
   19898:	ldr	r0, [r4, #-24]	; 0xffffffe8
   1989c:	str	r2, [fp, #-60]	; 0xffffffc4
   198a0:	ldr	r1, [r4, #-12]
   198a4:	sub	r2, fp, #96	; 0x60
   198a8:	str	r1, [fp, #-68]	; 0xffffffbc
   198ac:	ldr	ip, [r4, #-8]
   198b0:	mov	r1, r7
   198b4:	str	r0, [fp, #-76]	; 0xffffffb4
   198b8:	str	ip, [fp, #-64]	; 0xffffffc0
   198bc:	mov	r0, r6
   198c0:	blx	r3
   198c4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   198c8:	str	r3, [r4, #-4]
   198cc:	ldr	r3, [fp, #-108]	; 0xffffff94
   198d0:	cmp	r3, r4
   198d4:	bls	1a004 <argp_parse@@Base+0xca8>
   198d8:	cmp	r0, #7
   198dc:	cmpne	r0, #0
   198e0:	bne	19a00 <argp_parse@@Base+0x6a4>
   198e4:	add	r4, r4, #36	; 0x24
   198e8:	ldr	r3, [r4, #-20]	; 0xffffffec
   198ec:	cmp	r3, #0
   198f0:	ldrne	r3, [r3, #28]
   198f4:	ldrne	r2, [r4, #-16]
   198f8:	ldrne	r3, [r3, r2, lsl #2]
   198fc:	strne	r3, [r4, #-12]
   19900:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19904:	cmp	r3, #0
   19908:	bne	19894 <argp_parse@@Base+0x538>
   1990c:	ldr	r3, [r4, #-32]	; 0xffffffe0
   19910:	ldr	r3, [r3, #16]
   19914:	cmp	r3, #0
   19918:	beq	19940 <argp_parse@@Base+0x5e4>
   1991c:	ldr	r3, [r3]
   19920:	cmp	r3, #0
   19924:	beq	19940 <argp_parse@@Base+0x5e4>
   19928:	ldr	r3, [r4, #-8]
   1992c:	ldr	r2, [r4, #-12]
   19930:	str	r2, [r3]
   19934:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19938:	cmp	r3, #0
   1993c:	bne	19894 <argp_parse@@Base+0x538>
   19940:	ldr	r3, [fp, #-108]	; 0xffffff94
   19944:	cmp	r3, r4
   19948:	bhi	198e4 <argp_parse@@Base+0x588>
   1994c:	b	1957c <argp_parse@@Base+0x220>
   19950:	sub	sp, sp, #72	; 0x48
   19954:	add	r4, sp, #8
   19958:	sub	sp, sp, #40	; 0x28
   1995c:	add	r5, sp, #8
   19960:	mov	r1, r3
   19964:	mov	r0, r4
   19968:	mov	r2, #64	; 0x40
   1996c:	str	r3, [r5]
   19970:	str	r3, [r5, #4]
   19974:	str	r3, [r5, #8]
   19978:	str	r3, [r5, #12]
   1997c:	str	r3, [r5, #20]
   19980:	str	r3, [r5, #24]
   19984:	str	r4, [r5, #16]
   19988:	bl	11a38 <memset@plt>
   1998c:	ldr	r3, [pc, #1752]	; 1a06c <argp_parse@@Base+0xd10>
   19990:	cmp	r7, #0
   19994:	strne	r7, [r4]
   19998:	ldr	r3, [r3]
   1999c:	addne	r4, r4, #16
   199a0:	ldr	r2, [pc, #1736]	; 1a070 <argp_parse@@Base+0xd14>
   199a4:	cmp	r3, #0
   199a8:	str	r2, [r4]
   199ac:	beq	19f38 <argp_parse@@Base+0xbdc>
   199b0:	ldr	r2, [pc, #1724]	; 1a074 <argp_parse@@Base+0xd18>
   199b4:	add	r3, r4, #32
   199b8:	str	r2, [r4, #16]
   199bc:	mov	r8, #0
   199c0:	sub	r4, fp, #196	; 0xc4
   199c4:	str	r8, [r3]
   199c8:	mov	r1, r8
   199cc:	mov	r0, r4
   199d0:	mov	r2, #36	; 0x24
   199d4:	bl	11a38 <memset@plt>
   199d8:	ands	r3, r6, #4
   199dc:	str	r3, [fp, #-244]	; 0xffffff0c
   199e0:	moveq	r3, #1
   199e4:	movne	r3, r8
   199e8:	mov	r7, r5
   199ec:	str	r8, [fp, #-224]	; 0xffffff20
   199f0:	str	r8, [fp, #-220]	; 0xffffff24
   199f4:	str	r8, [fp, #-216]	; 0xffffff28
   199f8:	str	r3, [fp, #-228]	; 0xffffff1c
   199fc:	b	193f0 <argp_parse@@Base+0x94>
   19a00:	mov	r5, r0
   19a04:	mov	r0, r5
   19a08:	sub	sp, fp, #32
   19a0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19a10:	ldr	r5, [fp, #-112]	; 0xffffff90
   19a14:	mov	r8, r5
   19a18:	str	r5, [fp, #-108]	; 0xffffff94
   19a1c:	b	19528 <argp_parse@@Base+0x1cc>
   19a20:	tst	r3, #1
   19a24:	mov	r3, #0
   19a28:	str	r3, [fp, #-144]	; 0xffffff70
   19a2c:	ldr	r4, [fp, #-92]	; 0xffffffa4
   19a30:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19a34:	subne	r3, r3, #4
   19a38:	addne	r4, r4, #1
   19a3c:	strne	r3, [fp, #-88]	; 0xffffffa8
   19a40:	strne	r4, [fp, #-92]	; 0xffffffa4
   19a44:	b	19598 <argp_parse@@Base+0x23c>
   19a48:	ldr	r3, [fp, #-232]	; 0xffffff18
   19a4c:	ldr	r0, [r3]
   19a50:	bl	1a148 <argp_parse@@Base+0xdec>
   19a54:	str	r0, [r4]
   19a58:	b	193a8 <argp_parse@@Base+0x4c>
   19a5c:	cmp	r2, #0
   19a60:	beq	195dc <argp_parse@@Base+0x280>
   19a64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19a68:	str	r5, [fp, #-148]	; 0xffffff6c
   19a6c:	ands	ip, r3, #64	; 0x40
   19a70:	mvn	r3, #0
   19a74:	str	r3, [fp, #-140]	; 0xffffff74
   19a78:	ldr	r2, [fp, #-156]	; 0xffffff64
   19a7c:	ldr	r3, [fp, #-152]	; 0xffffff68
   19a80:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19a84:	beq	19da4 <argp_parse@@Base+0xa48>
   19a88:	sub	ip, fp, #148	; 0x94
   19a8c:	stm	sp, {r6, ip}
   19a90:	bl	1a2c8 <argp_parse@@Base+0xf6c>
   19a94:	ldr	r5, [fp, #-148]	; 0xffffff6c
   19a98:	str	r5, [fp, #-84]	; 0xffffffac
   19a9c:	mov	r7, r0
   19aa0:	cmn	r7, #1
   19aa4:	beq	19dc4 <argp_parse@@Base+0xa68>
   19aa8:	cmp	r7, #63	; 0x3f
   19aac:	beq	19ec8 <argp_parse@@Base+0xb6c>
   19ab0:	cmp	r7, #1
   19ab4:	beq	19c0c <argp_parse@@Base+0x8b0>
   19ab8:	asrs	r8, r7, #24
   19abc:	bne	19b68 <argp_parse@@Base+0x80c>
   19ac0:	mov	r1, r7
   19ac4:	ldr	r0, [fp, #-156]	; 0xffffff64
   19ac8:	bl	119cc <strchr@plt>
   19acc:	cmp	r0, #0
   19ad0:	beq	19bd8 <argp_parse@@Base+0x87c>
   19ad4:	ldr	r4, [fp, #-112]	; 0xffffff90
   19ad8:	ldr	r2, [fp, #-108]	; 0xffffff94
   19adc:	cmp	r4, r2
   19ae0:	bcc	19af4 <argp_parse@@Base+0x798>
   19ae4:	b	19bd8 <argp_parse@@Base+0x87c>
   19ae8:	add	r4, r4, #36	; 0x24
   19aec:	cmp	r4, r2
   19af0:	bcs	19bd8 <argp_parse@@Base+0x87c>
   19af4:	ldr	r3, [r4, #8]
   19af8:	cmp	r0, r3
   19afc:	bcs	19ae8 <argp_parse@@Base+0x78c>
   19b00:	ldr	r3, [r4]
   19b04:	cmp	r3, #0
   19b08:	beq	19bd8 <argp_parse@@Base+0x87c>
   19b0c:	ldr	r2, [r4, #32]
   19b10:	ldr	r0, [r4, #28]
   19b14:	ldr	ip, [r4, #24]
   19b18:	str	r2, [fp, #-60]	; 0xffffffc4
   19b1c:	ldr	r2, [r4, #12]
   19b20:	ldr	r1, [fp, #-136]	; 0xffffff78
   19b24:	str	r0, [fp, #-64]	; 0xffffffc0
   19b28:	str	r2, [fp, #-76]	; 0xffffffb4
   19b2c:	str	ip, [fp, #-68]	; 0xffffffbc
   19b30:	sub	r2, fp, #96	; 0x60
   19b34:	mov	r0, r7
   19b38:	blx	r3
   19b3c:	mov	r8, r6
   19b40:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19b44:	str	r3, [r4, #32]
   19b48:	cmp	r0, #7
   19b4c:	beq	19bd0 <argp_parse@@Base+0x874>
   19b50:	cmp	r0, #0
   19b54:	bne	1974c <argp_parse@@Base+0x3f0>
   19b58:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19b5c:	ldr	r5, [fp, #-84]	; 0xffffffac
   19b60:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19b64:	b	195c4 <argp_parse@@Base+0x268>
   19b68:	add	r3, r8, r8, lsl #3
   19b6c:	ldr	r2, [fp, #-112]	; 0xffffff90
   19b70:	lsl	r3, r3, #2
   19b74:	sub	r3, r3, #36	; 0x24
   19b78:	add	r4, r2, r3
   19b7c:	ldr	r5, [r2, r3]
   19b80:	ands	r3, r7, #8388608	; 0x800000
   19b84:	movne	r3, #-16777216	; 0xff000000
   19b88:	cmp	r5, #0
   19b8c:	beq	19d5c <argp_parse@@Base+0xa00>
   19b90:	ldr	r0, [r4, #32]
   19b94:	ldr	r2, [r4, #24]
   19b98:	str	r0, [fp, #-60]	; 0xffffffc4
   19b9c:	ldr	r0, [r4, #28]
   19ba0:	str	r2, [fp, #-68]	; 0xffffffbc
   19ba4:	ldr	r2, [r4, #12]
   19ba8:	str	r0, [fp, #-64]	; 0xffffffc0
   19bac:	bic	r0, r7, #-16777216	; 0xff000000
   19bb0:	str	r2, [fp, #-76]	; 0xffffffb4
   19bb4:	orr	r0, r0, r3
   19bb8:	ldr	r1, [fp, #-136]	; 0xffffff78
   19bbc:	sub	r2, fp, #96	; 0x60
   19bc0:	blx	r5
   19bc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19bc8:	str	r3, [r4, #32]
   19bcc:	b	19b48 <argp_parse@@Base+0x7ec>
   19bd0:	cmp	r8, #0
   19bd4:	bne	19d5c <argp_parse@@Base+0xa00>
   19bd8:	mov	r2, r7
   19bdc:	ldr	r3, [pc, #1172]	; 1a078 <argp_parse@@Base+0xd1c>
   19be0:	ldr	r1, [pc, #1172]	; 1a07c <argp_parse@@Base+0xd20>
   19be4:	sub	r0, fp, #96	; 0x60
   19be8:	bl	1e360 <argp_error@@Base>
   19bec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19bf0:	mov	r2, #260	; 0x104
   19bf4:	sub	r0, fp, #96	; 0x60
   19bf8:	bl	1e2b0 <argp_state_help@@Base>
   19bfc:	mov	r5, #7
   19c00:	ldr	r3, [fp, #-112]	; 0xffffff90
   19c04:	ldr	ip, [fp, #-108]	; 0xffffff94
   19c08:	b	19758 <argp_parse@@Base+0x3fc>
   19c0c:	ldr	r7, [fp, #-136]	; 0xffffff78
   19c10:	ldr	r3, [fp, #-112]	; 0xffffff90
   19c14:	ldr	ip, [fp, #-108]	; 0xffffff94
   19c18:	sub	r8, r5, #1
   19c1c:	cmp	r3, ip
   19c20:	str	r8, [fp, #-84]	; 0xffffffac
   19c24:	bcs	19d50 <argp_parse@@Base+0x9f4>
   19c28:	mov	lr, r8
   19c2c:	add	r4, r3, #36	; 0x24
   19c30:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19c34:	add	r5, lr, #1
   19c38:	cmp	r3, #0
   19c3c:	str	r5, [fp, #-84]	; 0xffffffac
   19c40:	sub	r2, fp, #96	; 0x60
   19c44:	mov	r1, r7
   19c48:	mov	r0, r6
   19c4c:	sub	r5, r4, #36	; 0x24
   19c50:	mov	r9, r4
   19c54:	streq	lr, [fp, #-84]	; 0xffffffac
   19c58:	beq	19d44 <argp_parse@@Base+0x9e8>
   19c5c:	ldr	ip, [r4, #-4]
   19c60:	ldr	lr, [r4, #-24]	; 0xffffffe8
   19c64:	str	ip, [fp, #-60]	; 0xffffffc4
   19c68:	ldr	ip, [r4, #-12]
   19c6c:	str	ip, [fp, #-68]	; 0xffffffbc
   19c70:	ldr	ip, [r4, #-8]
   19c74:	str	lr, [fp, #-76]	; 0xffffffb4
   19c78:	str	ip, [fp, #-64]	; 0xffffffc0
   19c7c:	blx	r3
   19c80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19c84:	str	r3, [r4, #-4]
   19c88:	cmp	r0, #7
   19c8c:	beq	19cc8 <argp_parse@@Base+0x96c>
   19c90:	cmp	r0, #0
   19c94:	bne	1974c <argp_parse@@Base+0x3f0>
   19c98:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19c9c:	ldr	r5, [fp, #-84]	; 0xffffffac
   19ca0:	cmp	r8, r5
   19ca4:	sublt	r8, r5, r8
   19ca8:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   19cac:	movge	r3, #1
   19cb0:	addlt	r8, r3, r8
   19cb4:	strlt	r8, [r4, #-24]	; 0xffffffe8
   19cb8:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   19cbc:	strge	r3, [fp, #-100]	; 0xffffff9c
   19cc0:	movge	r2, r3
   19cc4:	b	195c4 <argp_parse@@Base+0x268>
   19cc8:	ldr	lr, [fp, #-84]	; 0xffffffac
   19ccc:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19cd0:	sub	lr, lr, #1
   19cd4:	cmp	r3, #0
   19cd8:	str	lr, [fp, #-84]	; 0xffffffac
   19cdc:	beq	19d40 <argp_parse@@Base+0x9e4>
   19ce0:	add	r0, r5, #24
   19ce4:	ldr	r2, [r5, #12]
   19ce8:	ldm	r0, {r0, r1, ip}
   19cec:	str	r2, [fp, #-76]	; 0xffffffb4
   19cf0:	sub	r2, fp, #96	; 0x60
   19cf4:	str	ip, [fp, #-60]	; 0xffffffc4
   19cf8:	str	r0, [fp, #-68]	; 0xffffffbc
   19cfc:	str	r1, [fp, #-64]	; 0xffffffc0
   19d00:	mov	r0, sl
   19d04:	mov	r1, r6
   19d08:	blx	r3
   19d0c:	ldr	ip, [fp, #-108]	; 0xffffff94
   19d10:	ldr	r2, [fp, #-60]	; 0xffffffc4
   19d14:	cmp	r4, ip
   19d18:	movcs	r1, #0
   19d1c:	movcc	r1, #1
   19d20:	mov	r3, r4
   19d24:	str	r2, [r5, #32]
   19d28:	cmp	r0, #7
   19d2c:	movne	r1, #0
   19d30:	cmp	r1, #0
   19d34:	beq	1a01c <argp_parse@@Base+0xcc0>
   19d38:	ldr	lr, [fp, #-84]	; 0xffffffac
   19d3c:	b	19c2c <argp_parse@@Base+0x8d0>
   19d40:	ldr	ip, [fp, #-108]	; 0xffffff94
   19d44:	cmp	r9, ip
   19d48:	add	r4, r4, #36	; 0x24
   19d4c:	bcc	19c30 <argp_parse@@Base+0x8d4>
   19d50:	ldr	r5, [fp, #-84]	; 0xffffffac
   19d54:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19d58:	b	195e4 <argp_parse@@Base+0x288>
   19d5c:	ldr	r3, [fp, #-152]	; 0xffffff68
   19d60:	ldr	r2, [r3, #12]
   19d64:	cmp	r2, r7
   19d68:	bne	19d80 <argp_parse@@Base+0xa24>
   19d6c:	b	19eb4 <argp_parse@@Base+0xb58>
   19d70:	add	r3, r3, #16
   19d74:	ldr	r2, [r3, #12]
   19d78:	cmp	r2, r7
   19d7c:	beq	19eb4 <argp_parse@@Base+0xb58>
   19d80:	ldr	r2, [r3]
   19d84:	cmp	r2, #0
   19d88:	bne	19d70 <argp_parse@@Base+0xa14>
   19d8c:	ldr	r2, [pc, #748]	; 1a080 <argp_parse@@Base+0xd24>
   19d90:	ldr	r3, [pc, #736]	; 1a078 <argp_parse@@Base+0xd1c>
   19d94:	ldr	r1, [pc, #744]	; 1a084 <argp_parse@@Base+0xd28>
   19d98:	sub	r0, fp, #96	; 0x60
   19d9c:	bl	1e360 <argp_error@@Base>
   19da0:	b	19bec <argp_parse@@Base+0x890>
   19da4:	sub	lr, fp, #148	; 0x94
   19da8:	stm	sp, {ip, lr}
   19dac:	bl	1a274 <argp_parse@@Base+0xf18>
   19db0:	ldr	r5, [fp, #-148]	; 0xffffff6c
   19db4:	str	r5, [fp, #-84]	; 0xffffffac
   19db8:	mov	r7, r0
   19dbc:	cmn	r7, #1
   19dc0:	bne	19aa8 <argp_parse@@Base+0x74c>
   19dc4:	cmp	r5, #1
   19dc8:	str	r6, [fp, #-100]	; 0xffffff9c
   19dcc:	ble	19dec <argp_parse@@Base+0xa90>
   19dd0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   19dd4:	sub	r3, r5, #-1073741823	; 0xc0000001
   19dd8:	ldr	r1, [pc, #680]	; 1a088 <argp_parse@@Base+0xd2c>
   19ddc:	ldr	r0, [r2, r3, lsl #2]
   19de0:	bl	1178c <strcmp@plt>
   19de4:	cmp	r0, #0
   19de8:	streq	r5, [fp, #-72]	; 0xffffffb8
   19dec:	ldr	r0, [fp, #-92]	; 0xffffffa4
   19df0:	cmp	r5, r0
   19df4:	bge	195e4 <argp_parse@@Base+0x288>
   19df8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19dfc:	tst	r3, #4
   19e00:	beq	19ed8 <argp_parse@@Base+0xb7c>
   19e04:	ldr	r3, [fp, #4]
   19e08:	cmp	r3, #0
   19e0c:	beq	19fb0 <argp_parse@@Base+0xc54>
   19e10:	str	r5, [r3]
   19e14:	ldr	ip, [fp, #-108]	; 0xffffff94
   19e18:	ldr	r3, [fp, #-112]	; 0xffffff90
   19e1c:	sub	r2, ip, #36	; 0x24
   19e20:	cmp	r3, r2
   19e24:	bhi	19f0c <argp_parse@@Base+0xbb0>
   19e28:	ldr	r6, [pc, #604]	; 1a08c <argp_parse@@Base+0xd30>
   19e2c:	sub	r4, ip, #72	; 0x48
   19e30:	mov	r7, #0
   19e34:	ldr	r5, [r4, #36]	; 0x24
   19e38:	sub	r2, fp, #96	; 0x60
   19e3c:	cmp	r5, #0
   19e40:	mov	r1, r7
   19e44:	mov	r0, r6
   19e48:	beq	19ea4 <argp_parse@@Base+0xb48>
   19e4c:	ldr	r3, [r4, #68]	; 0x44
   19e50:	ldr	ip, [r4, #48]	; 0x30
   19e54:	str	r3, [fp, #-60]	; 0xffffffc4
   19e58:	ldr	r3, [r4, #60]	; 0x3c
   19e5c:	str	r3, [fp, #-68]	; 0xffffffbc
   19e60:	ldr	r3, [r4, #64]	; 0x40
   19e64:	str	ip, [fp, #-76]	; 0xffffffb4
   19e68:	str	r3, [fp, #-64]	; 0xffffffc0
   19e6c:	blx	r5
   19e70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19e74:	str	r3, [r4, #68]	; 0x44
   19e78:	ldr	r3, [fp, #-112]	; 0xffffff90
   19e7c:	cmp	r4, r3
   19e80:	bcc	19eec <argp_parse@@Base+0xb90>
   19e84:	cmp	r0, #7
   19e88:	cmpne	r0, #0
   19e8c:	sub	r4, r4, #36	; 0x24
   19e90:	beq	19e34 <argp_parse@@Base+0xad8>
   19e94:	ldr	ip, [fp, #-108]	; 0xffffff94
   19e98:	mov	r5, r0
   19e9c:	sub	ip, ip, #36	; 0x24
   19ea0:	b	197cc <argp_parse@@Base+0x470>
   19ea4:	cmp	r4, r3
   19ea8:	bcc	19ef8 <argp_parse@@Base+0xb9c>
   19eac:	sub	r4, r4, #36	; 0x24
   19eb0:	b	19e34 <argp_parse@@Base+0xad8>
   19eb4:	ldr	r2, [r3]
   19eb8:	ldr	r3, [pc, #448]	; 1a080 <argp_parse@@Base+0xd24>
   19ebc:	cmp	r2, #0
   19ec0:	moveq	r2, r3
   19ec4:	b	19d90 <argp_parse@@Base+0xa34>
   19ec8:	ldr	r3, [fp, #-140]	; 0xffffff74
   19ecc:	cmn	r3, #1
   19ed0:	bne	19bec <argp_parse@@Base+0x890>
   19ed4:	b	19ac0 <argp_parse@@Base+0x764>
   19ed8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19edc:	ldr	r7, [r3, r5, lsl #2]
   19ee0:	add	r5, r5, #1
   19ee4:	str	r7, [fp, #-136]	; 0xffffff78
   19ee8:	b	19c10 <argp_parse@@Base+0x8b4>
   19eec:	cmp	r0, #7
   19ef0:	mov	r5, r0
   19ef4:	bne	19f14 <argp_parse@@Base+0xbb8>
   19ef8:	ldr	ip, [fp, #-108]	; 0xffffff94
   19efc:	sub	ip, ip, #36	; 0x24
   19f00:	cmp	ip, r3
   19f04:	movcs	r5, #0
   19f08:	bcs	197d4 <argp_parse@@Base+0x478>
   19f0c:	mov	r5, #0
   19f10:	b	19840 <argp_parse@@Base+0x4e4>
   19f14:	ldr	ip, [fp, #-108]	; 0xffffff94
   19f18:	sub	ip, ip, #36	; 0x24
   19f1c:	b	197cc <argp_parse@@Base+0x470>
   19f20:	ldr	r0, [r2]
   19f24:	cmp	r0, #0
   19f28:	beq	195a4 <argp_parse@@Base+0x248>
   19f2c:	bl	1a148 <argp_parse@@Base+0xdec>
   19f30:	str	r0, [fp, #-56]	; 0xffffffc8
   19f34:	b	195b0 <argp_parse@@Base+0x254>
   19f38:	ldr	r3, [pc, #336]	; 1a090 <argp_parse@@Base+0xd34>
   19f3c:	ldr	r3, [r3]
   19f40:	cmp	r3, #0
   19f44:	addeq	r3, r4, #16
   19f48:	bne	199b0 <argp_parse@@Base+0x654>
   19f4c:	b	199bc <argp_parse@@Base+0x660>
   19f50:	mov	r5, r0
   19f54:	ldr	r2, [fp, #4]
   19f58:	cmp	r2, #0
   19f5c:	bne	19730 <argp_parse@@Base+0x3d4>
   19f60:	cmp	r5, #7
   19f64:	bne	19754 <argp_parse@@Base+0x3f8>
   19f68:	b	19bec <argp_parse@@Base+0x890>
   19f6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19f70:	sub	ip, ip, #36	; 0x24
   19f74:	cmp	r3, ip
   19f78:	mov	r5, r0
   19f7c:	bls	19f54 <argp_parse@@Base+0xbf8>
   19f80:	ldr	r2, [fp, #4]
   19f84:	cmp	r2, #0
   19f88:	bne	19730 <argp_parse@@Base+0x3d4>
   19f8c:	b	1973c <argp_parse@@Base+0x3e0>
   19f90:	ldr	r3, [fp, #-112]	; 0xffffff90
   19f94:	sub	r4, ip, #36	; 0x24
   19f98:	cmp	r4, r3
   19f9c:	mov	r5, r0
   19fa0:	bcs	1969c <argp_parse@@Base+0x340>
   19fa4:	cmp	r5, #7
   19fa8:	beq	19720 <argp_parse@@Base+0x3c4>
   19fac:	b	19f80 <argp_parse@@Base+0xc24>
   19fb0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19fb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19fb8:	tst	r3, #2
   19fbc:	bne	19bf0 <argp_parse@@Base+0x894>
   19fc0:	cmp	r1, #0
   19fc4:	beq	19bf0 <argp_parse@@Base+0x894>
   19fc8:	mov	r0, r1
   19fcc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19fd0:	ldr	r1, [pc, #188]	; 1a094 <argp_parse@@Base+0xd38>
   19fd4:	bl	119e4 <fprintf@plt>
   19fd8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19fdc:	b	19bf0 <argp_parse@@Base+0x894>
   19fe0:	mov	r5, r0
   19fe4:	b	19fa4 <argp_parse@@Base+0xc48>
   19fe8:	sub	r4, ip, #36	; 0x24
   19fec:	cmp	r3, r4
   19ff0:	bls	196a8 <argp_parse@@Base+0x34c>
   19ff4:	ldr	r2, [fp, #4]
   19ff8:	cmp	r2, #0
   19ffc:	bne	1972c <argp_parse@@Base+0x3d0>
   1a000:	b	19e1c <argp_parse@@Base+0xac0>
   1a004:	cmp	r0, #7
   1a008:	mov	r5, r0
   1a00c:	beq	1957c <argp_parse@@Base+0x220>
   1a010:	cmp	r0, #0
   1a014:	beq	1957c <argp_parse@@Base+0x220>
   1a018:	b	19848 <argp_parse@@Base+0x4ec>
   1a01c:	cmp	r0, #0
   1a020:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   1a024:	moveq	r5, r0
   1a028:	streq	r0, [fp, #-84]	; 0xffffffac
   1a02c:	beq	19ca0 <argp_parse@@Base+0x944>
   1a030:	cmp	r0, #7
   1a034:	mov	r5, r0
   1a038:	beq	19d50 <argp_parse@@Base+0x9f4>
   1a03c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a040:	b	19758 <argp_parse@@Base+0x3fc>
   1a044:	andeq	r2, r3, r8, lsl #10
   1a048:	andeq	r2, r3, r0, lsl #10
   1a04c:	andeq	r2, r3, r0, lsl r5
   1a050:	andeq	r2, r3, r4, lsl r5
   1a054:	tsteq	r0, r6
   1a058:	tsteq	r0, r2
   1a05c:	tsteq	r0, r1
   1a060:	tsteq	r0, r5
   1a064:	tsteq	r0, r7
   1a068:	tsteq	r0, r3
   1a06c:	andeq	sl, r3, r8, ror #28
   1a070:	andeq	r0, r2, r4, lsl sl
   1a074:	andeq	r0, r2, r0, lsr sl
   1a078:	andeq	r0, r2, ip, asr #20
   1a07c:	andeq	r0, r2, r0, ror #22
   1a080:	andeq	r0, r2, r8, asr fp
   1a084:	andeq	r0, r2, r8, ror #22
   1a088:	andeq	r0, r2, ip, asr fp
   1a08c:	tsteq	r0, r4
   1a090:	muleq	r3, ip, r6
   1a094:	andeq	r0, r2, r4, ror fp
   1a098:	cmp	r1, #0
   1a09c:	beq	1a0dc <argp_parse@@Base+0xd80>
   1a0a0:	ldr	r2, [r1, #52]	; 0x34
   1a0a4:	ldr	r3, [r2, #48]	; 0x30
   1a0a8:	ldr	r1, [r2, #52]	; 0x34
   1a0ac:	cmp	r3, r1
   1a0b0:	bcs	1a0dc <argp_parse@@Base+0xd80>
   1a0b4:	ldr	r2, [r3, #4]
   1a0b8:	cmp	r0, r2
   1a0bc:	bne	1a0d0 <argp_parse@@Base+0xd74>
   1a0c0:	b	1a0e4 <argp_parse@@Base+0xd88>
   1a0c4:	ldr	r2, [r3, #4]
   1a0c8:	cmp	r2, r0
   1a0cc:	beq	1a0e4 <argp_parse@@Base+0xd88>
   1a0d0:	add	r3, r3, #36	; 0x24
   1a0d4:	cmp	r3, r1
   1a0d8:	bcc	1a0c4 <argp_parse@@Base+0xd68>
   1a0dc:	mov	r0, #0
   1a0e0:	bx	lr
   1a0e4:	ldr	r0, [r3, #24]
   1a0e8:	bx	lr
   1a0ec:	ldr	ip, [pc, #32]	; 1a114 <argp_parse@@Base+0xdb8>
   1a0f0:	push	{lr}		; (str lr, [sp, #-4]!)
   1a0f4:	sub	sp, sp, #12
   1a0f8:	ldm	ip, {r1, ip}
   1a0fc:	ldr	r3, [pc, #20]	; 1a118 <argp_parse@@Base+0xdbc>
   1a100:	ldr	r2, [pc, #20]	; 1a11c <argp_parse@@Base+0xdc0>
   1a104:	str	ip, [sp]
   1a108:	bl	1a9d4 <_obstack_memory_used@@Base+0x390>
   1a10c:	add	sp, sp, #12
   1a110:	pop	{pc}		; (ldr pc, [sp], #4)
   1a114:	andeq	sl, r3, r0, lsr #13
   1a118:	andeq	r0, r2, r4, asr ip
   1a11c:	andeq	r0, r2, r4, ror #24
   1a120:	ldr	r3, [pc, #20]	; 1a13c <argp_parse@@Base+0xde0>
   1a124:	ldr	r2, [pc, #20]	; 1a140 <argp_parse@@Base+0xde4>
   1a128:	ldr	ip, [pc, #20]	; 1a144 <argp_parse@@Base+0xde8>
   1a12c:	str	r0, [r3]
   1a130:	str	ip, [r2]
   1a134:	str	r1, [r3, #4]
   1a138:	bx	lr
   1a13c:	andeq	sl, r3, r0, lsr #13
   1a140:	muleq	r3, ip, r6
   1a144:	andeq	sl, r1, ip, ror #1
   1a148:	ldrb	r3, [r0]
   1a14c:	cmp	r3, #47	; 0x2f
   1a150:	bne	1a160 <argp_parse@@Base+0xe04>
   1a154:	ldrb	r3, [r0, #1]!
   1a158:	cmp	r3, #47	; 0x2f
   1a15c:	beq	1a154 <argp_parse@@Base+0xdf8>
   1a160:	cmp	r3, #0
   1a164:	bxeq	lr
   1a168:	mov	r2, #0
   1a16c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a170:	mov	ip, r2
   1a174:	mov	r1, r0
   1a178:	mov	lr, #1
   1a17c:	cmp	r3, #47	; 0x2f
   1a180:	moveq	r2, lr
   1a184:	beq	1a194 <argp_parse@@Base+0xe38>
   1a188:	cmp	r2, #0
   1a18c:	movne	r0, r1
   1a190:	movne	r2, ip
   1a194:	ldrb	r3, [r1, #1]!
   1a198:	cmp	r3, #0
   1a19c:	bne	1a17c <argp_parse@@Base+0xe20>
   1a1a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1a1a4:	push	{r4, lr}
   1a1a8:	mov	r4, r0
   1a1ac:	bl	119c0 <strlen@plt>
   1a1b0:	cmp	r0, #1
   1a1b4:	popls	{r4, pc}
   1a1b8:	sub	r3, r0, #1
   1a1bc:	add	r2, r4, r3
   1a1c0:	ldrb	r1, [r4, r3]
   1a1c4:	cmp	r1, #47	; 0x2f
   1a1c8:	popne	{r4, pc}
   1a1cc:	cmp	r3, #1
   1a1d0:	beq	1a1e4 <argp_parse@@Base+0xe88>
   1a1d4:	ldrb	r1, [r2, #-1]!
   1a1d8:	sub	r0, r3, #1
   1a1dc:	cmp	r1, #47	; 0x2f
   1a1e0:	beq	1a1ec <argp_parse@@Base+0xe90>
   1a1e4:	mov	r0, r3
   1a1e8:	pop	{r4, pc}
   1a1ec:	mov	r3, r0
   1a1f0:	b	1a1cc <argp_parse@@Base+0xe70>
   1a1f4:	push	{r4, r5, lr}
   1a1f8:	sub	sp, sp, #12
   1a1fc:	mov	r5, r0
   1a200:	bl	11a14 <__errno_location@plt>
   1a204:	mov	r2, #0
   1a208:	mov	r4, r0
   1a20c:	ldr	r3, [r0]
   1a210:	str	r2, [r4]
   1a214:	mov	r0, r5
   1a218:	str	r3, [sp]
   1a21c:	str	r3, [sp, #4]
   1a220:	bl	117e0 <free@plt>
   1a224:	ldr	r3, [r4]
   1a228:	add	r2, sp, #8
   1a22c:	cmp	r3, #0
   1a230:	moveq	r3, #4
   1a234:	movne	r3, #0
   1a238:	add	r3, r2, r3
   1a23c:	ldr	r3, [r3, #-8]
   1a240:	str	r3, [r4]
   1a244:	add	sp, sp, #12
   1a248:	pop	{r4, r5, pc}
   1a24c:	push	{lr}		; (str lr, [sp, #-4]!)
   1a250:	sub	sp, sp, #20
   1a254:	mov	ip, #0
   1a258:	ldr	lr, [sp, #24]
   1a25c:	str	ip, [sp, #8]
   1a260:	str	lr, [sp]
   1a264:	str	ip, [sp, #4]
   1a268:	bl	1f004 <argp_error@@Base+0xca4>
   1a26c:	add	sp, sp, #20
   1a270:	pop	{pc}		; (ldr pc, [sp], #4)
   1a274:	push	{r4, lr}
   1a278:	sub	sp, sp, #16
   1a27c:	mov	ip, #0
   1a280:	ldr	r4, [sp, #24]
   1a284:	ldr	lr, [sp, #28]
   1a288:	str	r4, [sp]
   1a28c:	str	lr, [sp, #8]
   1a290:	str	ip, [sp, #12]
   1a294:	str	ip, [sp, #4]
   1a298:	bl	1eaa4 <argp_error@@Base+0x744>
   1a29c:	add	sp, sp, #16
   1a2a0:	pop	{r4, pc}
   1a2a4:	push	{r4, lr}
   1a2a8:	sub	sp, sp, #16
   1a2ac:	mov	lr, #0
   1a2b0:	ldr	r4, [sp, #24]
   1a2b4:	mov	ip, #1
   1a2b8:	stm	sp, {r4, ip, lr}
   1a2bc:	bl	1f004 <argp_error@@Base+0xca4>
   1a2c0:	add	sp, sp, #16
   1a2c4:	pop	{r4, pc}
   1a2c8:	push	{r4, r5, lr}
   1a2cc:	sub	sp, sp, #20
   1a2d0:	mov	lr, #0
   1a2d4:	ldr	r5, [sp, #32]
   1a2d8:	ldr	r4, [sp, #36]	; 0x24
   1a2dc:	mov	ip, #1
   1a2e0:	str	r5, [sp]
   1a2e4:	str	r4, [sp, #8]
   1a2e8:	str	lr, [sp, #12]
   1a2ec:	str	ip, [sp, #4]
   1a2f0:	bl	1eaa4 <argp_error@@Base+0x744>
   1a2f4:	add	sp, sp, #20
   1a2f8:	pop	{r4, r5, pc}
   1a2fc:	push	{r1, r2, r3}
   1a300:	push	{lr}		; (str lr, [sp, #-4]!)
   1a304:	sub	sp, sp, #8
   1a308:	add	r3, sp, #16
   1a30c:	ldr	r2, [sp, #16]
   1a310:	ldr	r1, [sp, #12]
   1a314:	str	r3, [sp, #4]
   1a318:	bl	118dc <ioctl@plt>
   1a31c:	add	sp, sp, #8
   1a320:	pop	{lr}		; (ldr lr, [sp], #4)
   1a324:	add	sp, sp, #12
   1a328:	bx	lr
   1a32c:	ldr	r3, [pc, #28]	; 1a350 <argp_parse@@Base+0xff4>
   1a330:	push	{r4, lr}
   1a334:	ldr	r0, [r3]
   1a338:	ldr	r2, [pc, #20]	; 1a354 <argp_parse@@Base+0xff8>
   1a33c:	ldr	r1, [pc, #20]	; 1a358 <argp_parse@@Base+0xffc>
   1a340:	bl	119e4 <fprintf@plt>
   1a344:	ldr	r3, [pc, #16]	; 1a35c <argp_parse@@Base+0x1000>
   1a348:	ldr	r0, [r3]
   1a34c:	bl	119a8 <exit@plt>
   1a350:	andeq	r2, r3, r0, lsl r5
   1a354:	andeq	r0, r2, r4, ror ip
   1a358:	ldrdeq	r0, [r2], -r4
   1a35c:	andeq	r2, r3, r8, ror #9
   1a360:	ldrb	r3, [r0, #40]	; 0x28
   1a364:	tst	r3, #1
   1a368:	ldr	r3, [r0, #28]
   1a36c:	bne	1a378 <argp_parse@@Base+0x101c>
   1a370:	mov	r0, r1
   1a374:	bx	r3
   1a378:	ldr	r0, [r0, #36]	; 0x24
   1a37c:	bx	r3
   1a380:	ldrb	r3, [r0, #40]	; 0x28
   1a384:	tst	r3, #1
   1a388:	ldr	r3, [r0, #32]
   1a38c:	bne	1a398 <argp_parse@@Base+0x103c>
   1a390:	mov	r0, r1
   1a394:	bx	r3
   1a398:	ldr	r0, [r0, #36]	; 0x24
   1a39c:	bx	r3
   1a3a0:	push	{r4, r5, r6, lr}
   1a3a4:	subs	r5, r2, #0
   1a3a8:	ldr	r3, [pc, #124]	; 1a42c <argp_parse@@Base+0x10d0>
   1a3ac:	subne	r6, r5, #1
   1a3b0:	moveq	r6, #7
   1a3b4:	moveq	r5, #8
   1a3b8:	cmp	r1, #0
   1a3bc:	moveq	r1, r3
   1a3c0:	str	r6, [r0, #24]
   1a3c4:	str	r1, [r0]
   1a3c8:	mov	r4, r0
   1a3cc:	bl	1a360 <argp_parse@@Base+0x1004>
   1a3d0:	cmp	r0, #0
   1a3d4:	str	r0, [r4, #4]
   1a3d8:	beq	1a420 <argp_parse@@Base+0x10c4>
   1a3dc:	ldr	r3, [r4]
   1a3e0:	add	r2, r0, #8
   1a3e4:	rsb	r5, r5, #0
   1a3e8:	add	r2, r2, r6
   1a3ec:	add	r3, r0, r3
   1a3f0:	and	r2, r2, r5
   1a3f4:	mov	r1, #0
   1a3f8:	str	r2, [r4, #8]
   1a3fc:	str	r2, [r4, #12]
   1a400:	str	r3, [r0]
   1a404:	str	r3, [r4, #16]
   1a408:	str	r1, [r0, #4]
   1a40c:	ldrb	r3, [r4, #40]	; 0x28
   1a410:	mov	r0, #1
   1a414:	and	r3, r3, #249	; 0xf9
   1a418:	strb	r3, [r4, #40]	; 0x28
   1a41c:	pop	{r4, r5, r6, pc}
   1a420:	ldr	r3, [pc, #8]	; 1a430 <argp_parse@@Base+0x10d4>
   1a424:	ldr	r3, [r3]
   1a428:	blx	r3
   1a42c:	andeq	r0, r0, r8, ror #31
   1a430:			; <UNDEFINED> instruction: 0x000324bc

0001a434 <_obstack_begin@@Base>:
   1a434:	push	{r4, lr}
   1a438:	ldrb	lr, [r0, #40]	; 0x28
   1a43c:	ldr	r4, [sp, #8]
   1a440:	str	r3, [r0, #28]
   1a444:	bic	lr, lr, #1
   1a448:	str	r4, [r0, #32]
   1a44c:	strb	lr, [r0, #40]	; 0x28
   1a450:	pop	{r4, lr}
   1a454:	b	1a3a0 <argp_parse@@Base+0x1044>

0001a458 <_obstack_begin_1@@Base>:
   1a458:	push	{r4, r5, lr}
   1a45c:	ldrb	lr, [r0, #40]	; 0x28
   1a460:	ldr	r5, [sp, #12]
   1a464:	ldr	r4, [sp, #16]
   1a468:	orr	lr, lr, #1
   1a46c:	str	r3, [r0, #28]
   1a470:	str	r5, [r0, #32]
   1a474:	str	r4, [r0, #36]	; 0x24
   1a478:	strb	lr, [r0, #40]	; 0x28
   1a47c:	pop	{r4, r5, lr}
   1a480:	b	1a3a0 <argp_parse@@Base+0x1044>

0001a484 <_obstack_newchunk@@Base>:
   1a484:	ldr	r2, [r0, #8]
   1a488:	push	{r4, r5, r6, r7, r8, lr}
   1a48c:	ldr	r6, [r0, #12]
   1a490:	ldr	r3, [r0, #24]
   1a494:	sub	r6, r6, r2
   1a498:	add	r1, r6, r1
   1a49c:	adds	r3, r1, r3
   1a4a0:	movcc	r2, #1
   1a4a4:	movcs	r2, #0
   1a4a8:	cmp	r6, r1
   1a4ac:	movhi	r1, #0
   1a4b0:	andls	r1, r2, #1
   1a4b4:	cmp	r1, #0
   1a4b8:	bne	1a4c8 <_obstack_newchunk@@Base+0x44>
   1a4bc:	ldr	r3, [pc, #204]	; 1a590 <_obstack_newchunk@@Base+0x10c>
   1a4c0:	ldr	r3, [r3]
   1a4c4:	blx	r3
   1a4c8:	ldr	r5, [r0]
   1a4cc:	add	r1, r3, r6, lsr #3
   1a4d0:	cmp	r3, r5
   1a4d4:	movcc	r3, r5
   1a4d8:	add	r1, r1, #100	; 0x64
   1a4dc:	cmp	r3, r1
   1a4e0:	movcs	r5, r3
   1a4e4:	movcc	r5, r1
   1a4e8:	mov	r1, r5
   1a4ec:	mov	r4, r0
   1a4f0:	ldr	r7, [r0, #4]
   1a4f4:	bl	1a360 <argp_parse@@Base+0x1004>
   1a4f8:	subs	r8, r0, #0
   1a4fc:	beq	1a4bc <_obstack_newchunk@@Base+0x38>
   1a500:	ldr	r2, [r4, #24]
   1a504:	mov	r3, r8
   1a508:	add	r1, r8, r5
   1a50c:	str	r8, [r4, #4]
   1a510:	str	r7, [r8, #4]
   1a514:	str	r1, [r4, #16]
   1a518:	str	r1, [r3], #8
   1a51c:	add	r3, r3, r2
   1a520:	bic	r5, r3, r2
   1a524:	mov	r0, r5
   1a528:	mov	r2, r6
   1a52c:	ldr	r1, [r4, #8]
   1a530:	bl	11810 <memcpy@plt>
   1a534:	ldrb	r3, [r4, #40]	; 0x28
   1a538:	tst	r3, #2
   1a53c:	bne	1a55c <_obstack_newchunk@@Base+0xd8>
   1a540:	ldr	r2, [r4, #24]
   1a544:	add	r3, r7, #8
   1a548:	add	r3, r3, r2
   1a54c:	ldr	r1, [r4, #8]
   1a550:	bic	r3, r3, r2
   1a554:	cmp	r1, r3
   1a558:	beq	1a578 <_obstack_newchunk@@Base+0xf4>
   1a55c:	ldrb	r3, [r4, #40]	; 0x28
   1a560:	add	r2, r5, r6
   1a564:	str	r2, [r4, #12]
   1a568:	bic	r3, r3, #2
   1a56c:	str	r5, [r4, #8]
   1a570:	strb	r3, [r4, #40]	; 0x28
   1a574:	pop	{r4, r5, r6, r7, r8, pc}
   1a578:	ldr	r3, [r7, #4]
   1a57c:	mov	r1, r7
   1a580:	str	r3, [r8, #4]
   1a584:	mov	r0, r4
   1a588:	bl	1a380 <argp_parse@@Base+0x1024>
   1a58c:	b	1a55c <_obstack_newchunk@@Base+0xd8>
   1a590:			; <UNDEFINED> instruction: 0x000324bc

0001a594 <_obstack_allocated_p@@Base>:
   1a594:	ldr	r0, [r0, #4]
   1a598:	cmp	r0, #0
   1a59c:	bne	1a5b0 <_obstack_allocated_p@@Base+0x1c>
   1a5a0:	b	1a5cc <_obstack_allocated_p@@Base+0x38>
   1a5a4:	ldr	r0, [r0, #4]
   1a5a8:	cmp	r0, #0
   1a5ac:	bxeq	lr
   1a5b0:	cmp	r1, r0
   1a5b4:	bls	1a5a4 <_obstack_allocated_p@@Base+0x10>
   1a5b8:	ldr	r3, [r0]
   1a5bc:	cmp	r1, r3
   1a5c0:	bhi	1a5a4 <_obstack_allocated_p@@Base+0x10>
   1a5c4:	mov	r0, #1
   1a5c8:	bx	lr
   1a5cc:	bx	lr

0001a5d0 <_obstack_free@@Base>:
   1a5d0:	push	{r4, r5, r6, lr}
   1a5d4:	mov	r6, r1
   1a5d8:	ldr	r4, [r0, #4]
   1a5dc:	cmp	r4, #0
   1a5e0:	movne	r5, r0
   1a5e4:	beq	1a620 <_obstack_free@@Base+0x50>
   1a5e8:	cmp	r6, r4
   1a5ec:	bls	1a5fc <_obstack_free@@Base+0x2c>
   1a5f0:	ldr	r2, [r4]
   1a5f4:	cmp	r6, r2
   1a5f8:	bls	1a62c <_obstack_free@@Base+0x5c>
   1a5fc:	mov	r1, r4
   1a600:	mov	r0, r5
   1a604:	ldr	r4, [r4, #4]
   1a608:	bl	1a380 <argp_parse@@Base+0x1024>
   1a60c:	ldrb	r2, [r5, #40]	; 0x28
   1a610:	cmp	r4, #0
   1a614:	orr	r2, r2, #2
   1a618:	strb	r2, [r5, #40]	; 0x28
   1a61c:	bne	1a5e8 <_obstack_free@@Base+0x18>
   1a620:	cmp	r6, #0
   1a624:	bne	1a640 <_obstack_free@@Base+0x70>
   1a628:	pop	{r4, r5, r6, pc}
   1a62c:	str	r6, [r5, #12]
   1a630:	str	r6, [r5, #8]
   1a634:	str	r2, [r5, #16]
   1a638:	str	r4, [r5, #4]
   1a63c:	pop	{r4, r5, r6, pc}
   1a640:	bl	11bac <abort@plt>

0001a644 <_obstack_memory_used@@Base>:
   1a644:	ldr	r3, [r0, #4]
   1a648:	cmp	r3, #0
   1a64c:	beq	1a670 <_obstack_memory_used@@Base+0x2c>
   1a650:	mov	r0, #0
   1a654:	ldr	r2, [r3]
   1a658:	sub	r2, r2, r3
   1a65c:	ldr	r3, [r3, #4]
   1a660:	add	r0, r0, r2
   1a664:	cmp	r3, #0
   1a668:	bne	1a654 <_obstack_memory_used@@Base+0x10>
   1a66c:	bx	lr
   1a670:	mov	r0, r3
   1a674:	bx	lr
   1a678:	push	{r4, r5, r6, lr}
   1a67c:	subs	r4, r0, #0
   1a680:	beq	1a6f4 <_obstack_memory_used@@Base+0xb0>
   1a684:	mov	r1, #47	; 0x2f
   1a688:	bl	11ac8 <strrchr@plt>
   1a68c:	subs	r5, r0, #0
   1a690:	beq	1a6e0 <_obstack_memory_used@@Base+0x9c>
   1a694:	add	r6, r5, #1
   1a698:	sub	r3, r6, r4
   1a69c:	cmp	r3, #6
   1a6a0:	ble	1a6e0 <_obstack_memory_used@@Base+0x9c>
   1a6a4:	mov	r2, #7
   1a6a8:	ldr	r1, [pc, #96]	; 1a710 <_obstack_memory_used@@Base+0xcc>
   1a6ac:	sub	r0, r5, #6
   1a6b0:	bl	11ba0 <strncmp@plt>
   1a6b4:	cmp	r0, #0
   1a6b8:	bne	1a6e0 <_obstack_memory_used@@Base+0x9c>
   1a6bc:	mov	r2, #3
   1a6c0:	ldr	r1, [pc, #76]	; 1a714 <_obstack_memory_used@@Base+0xd0>
   1a6c4:	mov	r0, r6
   1a6c8:	bl	11ba0 <strncmp@plt>
   1a6cc:	cmp	r0, #0
   1a6d0:	movne	r4, r6
   1a6d4:	ldreq	r3, [pc, #60]	; 1a718 <_obstack_memory_used@@Base+0xd4>
   1a6d8:	addeq	r4, r5, #4
   1a6dc:	streq	r4, [r3]
   1a6e0:	ldr	r2, [pc, #52]	; 1a71c <_obstack_memory_used@@Base+0xd8>
   1a6e4:	ldr	r3, [pc, #52]	; 1a720 <_obstack_memory_used@@Base+0xdc>
   1a6e8:	str	r4, [r2]
   1a6ec:	str	r4, [r3]
   1a6f0:	pop	{r4, r5, r6, pc}
   1a6f4:	ldr	r3, [pc, #40]	; 1a724 <_obstack_memory_used@@Base+0xe0>
   1a6f8:	mov	r2, #55	; 0x37
   1a6fc:	mov	r1, #1
   1a700:	ldr	r3, [r3]
   1a704:	ldr	r0, [pc, #28]	; 1a728 <_obstack_memory_used@@Base+0xe4>
   1a708:	bl	118c4 <fwrite@plt>
   1a70c:	bl	11bac <abort@plt>
   1a710:	andeq	r0, r2, r0, asr #25
   1a714:	andeq	r0, r2, r8, asr #25
   1a718:	andeq	r2, r3, r0, lsl #10
   1a71c:	andeq	sl, r3, r8, lsr #13
   1a720:	andeq	r2, r3, r8, lsl #10
   1a724:	andeq	r2, r3, r0, lsl r5
   1a728:	andeq	r0, r2, r8, lsl #25
   1a72c:	push	{r4, r5, r6, r7, lr}
   1a730:	sub	sp, sp, #36	; 0x24
   1a734:	cmp	r1, #0
   1a738:	mov	r4, r0
   1a73c:	ldr	r5, [sp, #56]	; 0x38
   1a740:	ldr	r6, [sp, #60]	; 0x3c
   1a744:	beq	1a984 <_obstack_memory_used@@Base+0x340>
   1a748:	str	r3, [sp]
   1a74c:	mov	r3, r2
   1a750:	mov	r2, r1
   1a754:	ldr	r1, [pc, #564]	; 1a990 <_obstack_memory_used@@Base+0x34c>
   1a758:	bl	119e4 <fprintf@plt>
   1a75c:	ldr	r3, [pc, #560]	; 1a994 <_obstack_memory_used@@Base+0x350>
   1a760:	ldr	r2, [pc, #560]	; 1a998 <_obstack_memory_used@@Base+0x354>
   1a764:	ldr	r1, [pc, #560]	; 1a99c <_obstack_memory_used@@Base+0x358>
   1a768:	mov	r0, r4
   1a76c:	bl	119e4 <fprintf@plt>
   1a770:	mov	r1, r4
   1a774:	mov	r0, #10
   1a778:	bl	11ae0 <fputc@plt>
   1a77c:	ldr	r1, [pc, #540]	; 1a9a0 <_obstack_memory_used@@Base+0x35c>
   1a780:	ldr	r2, [pc, #540]	; 1a9a4 <_obstack_memory_used@@Base+0x360>
   1a784:	mov	r0, r4
   1a788:	bl	119e4 <fprintf@plt>
   1a78c:	mov	r1, r4
   1a790:	mov	r0, #10
   1a794:	bl	11ae0 <fputc@plt>
   1a798:	cmp	r6, #9
   1a79c:	ldrls	pc, [pc, r6, lsl #2]
   1a7a0:	b	1a7cc <_obstack_memory_used@@Base+0x188>
   1a7a4:	andeq	sl, r1, ip, lsl #16
   1a7a8:	andeq	sl, r1, r8, asr r8
   1a7ac:	andeq	sl, r1, r0, ror r8
   1a7b0:	andeq	sl, r1, r8, lsl #17
   1a7b4:	andeq	sl, r1, r8, lsr #17
   1a7b8:	ldrdeq	sl, [r1], -r0
   1a7bc:	strdeq	sl, [r1], -r0
   1a7c0:	andeq	sl, r1, r8, lsl r9
   1a7c4:	andeq	sl, r1, r8, asr #18
   1a7c8:	andeq	sl, r1, r4, lsl r8
   1a7cc:	ldr	ip, [r5, #32]
   1a7d0:	ldr	r1, [r5, #28]
   1a7d4:	ldm	r5, {r2, r3}
   1a7d8:	ldr	r7, [r5, #24]
   1a7dc:	ldr	r6, [r5, #20]
   1a7e0:	str	ip, [sp, #24]
   1a7e4:	ldr	lr, [r5, #16]
   1a7e8:	str	r1, [sp, #20]
   1a7ec:	ldr	r1, [r5, #8]
   1a7f0:	ldr	ip, [r5, #12]
   1a7f4:	mov	r0, r4
   1a7f8:	str	r7, [sp, #16]
   1a7fc:	stm	sp, {r1, ip, lr}
   1a800:	str	r6, [sp, #12]
   1a804:	ldr	r1, [pc, #412]	; 1a9a8 <_obstack_memory_used@@Base+0x364>
   1a808:	bl	119e4 <fprintf@plt>
   1a80c:	add	sp, sp, #36	; 0x24
   1a810:	pop	{r4, r5, r6, r7, pc}
   1a814:	ldr	ip, [r5, #32]
   1a818:	ldr	r1, [r5, #28]
   1a81c:	ldm	r5, {r2, r3}
   1a820:	ldr	r7, [r5, #24]
   1a824:	ldr	r6, [r5, #20]
   1a828:	str	ip, [sp, #24]
   1a82c:	ldr	lr, [r5, #16]
   1a830:	str	r1, [sp, #20]
   1a834:	ldr	r1, [r5, #8]
   1a838:	ldr	ip, [r5, #12]
   1a83c:	mov	r0, r4
   1a840:	str	r7, [sp, #16]
   1a844:	stm	sp, {r1, ip, lr}
   1a848:	str	r6, [sp, #12]
   1a84c:	ldr	r1, [pc, #344]	; 1a9ac <_obstack_memory_used@@Base+0x368>
   1a850:	bl	119e4 <fprintf@plt>
   1a854:	b	1a80c <_obstack_memory_used@@Base+0x1c8>
   1a858:	ldr	r2, [r5]
   1a85c:	mov	r0, r4
   1a860:	ldr	r1, [pc, #328]	; 1a9b0 <_obstack_memory_used@@Base+0x36c>
   1a864:	add	sp, sp, #36	; 0x24
   1a868:	pop	{r4, r5, r6, r7, lr}
   1a86c:	b	119e4 <fprintf@plt>
   1a870:	mov	r0, r4
   1a874:	ldm	r5, {r2, r3}
   1a878:	ldr	r1, [pc, #308]	; 1a9b4 <_obstack_memory_used@@Base+0x370>
   1a87c:	add	sp, sp, #36	; 0x24
   1a880:	pop	{r4, r5, r6, r7, lr}
   1a884:	b	119e4 <fprintf@plt>
   1a888:	ldr	r1, [r5, #8]
   1a88c:	ldm	r5, {r2, r3}
   1a890:	mov	r0, r4
   1a894:	str	r1, [sp, #56]	; 0x38
   1a898:	ldr	r1, [pc, #280]	; 1a9b8 <_obstack_memory_used@@Base+0x374>
   1a89c:	add	sp, sp, #36	; 0x24
   1a8a0:	pop	{r4, r5, r6, r7, lr}
   1a8a4:	b	119e4 <fprintf@plt>
   1a8a8:	ldr	r1, [r5, #8]
   1a8ac:	ldr	ip, [r5, #12]
   1a8b0:	ldm	r5, {r2, r3}
   1a8b4:	mov	r0, r4
   1a8b8:	str	r1, [sp, #56]	; 0x38
   1a8bc:	str	ip, [sp, #60]	; 0x3c
   1a8c0:	ldr	r1, [pc, #244]	; 1a9bc <_obstack_memory_used@@Base+0x378>
   1a8c4:	add	sp, sp, #36	; 0x24
   1a8c8:	pop	{r4, r5, r6, r7, lr}
   1a8cc:	b	119e4 <fprintf@plt>
   1a8d0:	add	r1, r5, #8
   1a8d4:	ldm	r5, {r2, r3}
   1a8d8:	ldm	r1, {r1, ip, lr}
   1a8dc:	mov	r0, r4
   1a8e0:	stm	sp, {r1, ip, lr}
   1a8e4:	ldr	r1, [pc, #212]	; 1a9c0 <_obstack_memory_used@@Base+0x37c>
   1a8e8:	bl	119e4 <fprintf@plt>
   1a8ec:	b	1a80c <_obstack_memory_used@@Base+0x1c8>
   1a8f0:	add	r1, r5, #8
   1a8f4:	ldr	r6, [r5, #20]
   1a8f8:	ldm	r1, {r1, ip, lr}
   1a8fc:	mov	r0, r4
   1a900:	ldm	r5, {r2, r3}
   1a904:	str	r6, [sp, #12]
   1a908:	stm	sp, {r1, ip, lr}
   1a90c:	ldr	r1, [pc, #176]	; 1a9c4 <_obstack_memory_used@@Base+0x380>
   1a910:	bl	119e4 <fprintf@plt>
   1a914:	b	1a80c <_obstack_memory_used@@Base+0x1c8>
   1a918:	add	r1, r5, #8
   1a91c:	ldr	r7, [r5, #24]
   1a920:	ldm	r1, {r1, ip, lr}
   1a924:	mov	r0, r4
   1a928:	ldr	r6, [r5, #20]
   1a92c:	ldm	r5, {r2, r3}
   1a930:	stm	sp, {r1, ip, lr}
   1a934:	str	r7, [sp, #16]
   1a938:	str	r6, [sp, #12]
   1a93c:	ldr	r1, [pc, #132]	; 1a9c8 <_obstack_memory_used@@Base+0x384>
   1a940:	bl	119e4 <fprintf@plt>
   1a944:	b	1a80c <_obstack_memory_used@@Base+0x1c8>
   1a948:	ldr	r1, [r5, #28]
   1a94c:	ldm	r5, {r2, r3}
   1a950:	ldr	r7, [r5, #24]
   1a954:	ldr	r6, [r5, #20]
   1a958:	ldr	lr, [r5, #16]
   1a95c:	str	r1, [sp, #20]
   1a960:	ldr	r1, [r5, #8]
   1a964:	ldr	ip, [r5, #12]
   1a968:	mov	r0, r4
   1a96c:	str	r7, [sp, #16]
   1a970:	stm	sp, {r1, ip, lr}
   1a974:	str	r6, [sp, #12]
   1a978:	ldr	r1, [pc, #76]	; 1a9cc <_obstack_memory_used@@Base+0x388>
   1a97c:	bl	119e4 <fprintf@plt>
   1a980:	b	1a80c <_obstack_memory_used@@Base+0x1c8>
   1a984:	ldr	r1, [pc, #68]	; 1a9d0 <_obstack_memory_used@@Base+0x38c>
   1a988:	bl	119e4 <fprintf@plt>
   1a98c:	b	1a75c <_obstack_memory_used@@Base+0x118>
   1a990:	andeq	r0, r2, ip, asr #25
   1a994:	andeq	r0, r0, r6, ror #15
   1a998:	andeq	r0, r2, r0, ror #25
   1a99c:	andeq	r0, r2, r0, ror #31
   1a9a0:	andeq	r0, r2, r8, lsl #26
   1a9a4:	andeq	r0, r2, r4, ror #25
   1a9a8:	strdeq	r0, [r2], -r4
   1a9ac:	andeq	r0, r2, r0, asr #29
   1a9b0:			; <UNDEFINED> instruction: 0x00020db4
   1a9b4:	andeq	r0, r2, r4, asr #27
   1a9b8:	ldrdeq	r0, [r2], -ip
   1a9bc:	strdeq	r0, [r2], -r8
   1a9c0:	andeq	r0, r2, r8, lsl lr
   1a9c4:	andeq	r0, r2, ip, lsr lr
   1a9c8:	andeq	r0, r2, r4, ror #28
   1a9cc:	muleq	r2, r0, lr
   1a9d0:	ldrdeq	r0, [r2], -r8
   1a9d4:	push	{r4, r5, lr}
   1a9d8:	sub	sp, sp, #12
   1a9dc:	ldr	r5, [sp, #24]
   1a9e0:	ldr	ip, [r5]
   1a9e4:	cmp	ip, #0
   1a9e8:	beq	1aa04 <_obstack_memory_used@@Base+0x3c0>
   1a9ec:	mov	lr, r5
   1a9f0:	mov	ip, #0
   1a9f4:	ldr	r4, [lr, #4]!
   1a9f8:	add	ip, ip, #1
   1a9fc:	cmp	r4, #0
   1aa00:	bne	1a9f4 <_obstack_memory_used@@Base+0x3b0>
   1aa04:	stm	sp, {r5, ip}
   1aa08:	bl	1a72c <_obstack_memory_used@@Base+0xe8>
   1aa0c:	add	sp, sp, #12
   1aa10:	pop	{r4, r5, pc}
   1aa14:	push	{r4, r5, lr}
   1aa18:	sub	sp, sp, #52	; 0x34
   1aa1c:	add	r5, sp, #4
   1aa20:	ldr	r4, [sp, #64]	; 0x40
   1aa24:	mov	ip, #0
   1aa28:	sub	r4, r4, #4
   1aa2c:	ldr	lr, [r4, #4]!
   1aa30:	cmp	lr, #0
   1aa34:	str	lr, [r5, #4]!
   1aa38:	beq	1aa48 <_obstack_memory_used@@Base+0x404>
   1aa3c:	add	ip, ip, #1
   1aa40:	cmp	ip, #10
   1aa44:	bne	1aa2c <_obstack_memory_used@@Base+0x3e8>
   1aa48:	add	lr, sp, #8
   1aa4c:	str	ip, [sp, #4]
   1aa50:	str	lr, [sp]
   1aa54:	bl	1a72c <_obstack_memory_used@@Base+0xe8>
   1aa58:	add	sp, sp, #52	; 0x34
   1aa5c:	pop	{r4, r5, pc}
   1aa60:	push	{r3}		; (str r3, [sp, #-4]!)
   1aa64:	push	{r4, lr}
   1aa68:	sub	sp, sp, #60	; 0x3c
   1aa6c:	add	lr, sp, #56	; 0x38
   1aa70:	add	r3, sp, #72	; 0x48
   1aa74:	str	r3, [lr, #-44]!	; 0xffffffd4
   1aa78:	add	r4, sp, #68	; 0x44
   1aa7c:	mov	r3, #0
   1aa80:	ldr	ip, [r4, #4]!
   1aa84:	cmp	ip, #0
   1aa88:	str	ip, [lr, #4]!
   1aa8c:	beq	1aa9c <_obstack_memory_used@@Base+0x458>
   1aa90:	add	r3, r3, #1
   1aa94:	cmp	r3, #10
   1aa98:	bne	1aa80 <_obstack_memory_used@@Base+0x43c>
   1aa9c:	add	ip, sp, #16
   1aaa0:	str	r3, [sp, #4]
   1aaa4:	str	ip, [sp]
   1aaa8:	ldr	r3, [sp, #68]	; 0x44
   1aaac:	bl	1a72c <_obstack_memory_used@@Base+0xe8>
   1aab0:	add	sp, sp, #60	; 0x3c
   1aab4:	pop	{r4, lr}
   1aab8:	add	sp, sp, #4
   1aabc:	bx	lr
   1aac0:	ldr	r3, [pc, #56]	; 1ab00 <_obstack_memory_used@@Base+0x4bc>
   1aac4:	push	{r4, lr}
   1aac8:	mov	r0, #10
   1aacc:	ldr	r1, [r3]
   1aad0:	bl	11ae0 <fputc@plt>
   1aad4:	ldr	r1, [pc, #40]	; 1ab04 <_obstack_memory_used@@Base+0x4c0>
   1aad8:	ldr	r0, [pc, #40]	; 1ab08 <_obstack_memory_used@@Base+0x4c4>
   1aadc:	bl	117b0 <printf@plt>
   1aae0:	ldr	r1, [pc, #36]	; 1ab0c <_obstack_memory_used@@Base+0x4c8>
   1aae4:	ldr	r2, [pc, #36]	; 1ab10 <_obstack_memory_used@@Base+0x4cc>
   1aae8:	ldr	r0, [pc, #36]	; 1ab14 <_obstack_memory_used@@Base+0x4d0>
   1aaec:	bl	117b0 <printf@plt>
   1aaf0:	ldr	r1, [pc, #32]	; 1ab18 <_obstack_memory_used@@Base+0x4d4>
   1aaf4:	ldr	r0, [pc, #32]	; 1ab1c <_obstack_memory_used@@Base+0x4d8>
   1aaf8:	pop	{r4, lr}
   1aafc:	b	117b0 <printf@plt>
   1ab00:	andeq	r2, r3, r4, lsl r5
   1ab04:	andeq	r0, r2, r0, lsr pc
   1ab08:	andeq	r0, r2, r8, asr #30
   1ab0c:	andeq	r0, r2, r4, ror #24
   1ab10:	andeq	r0, r2, ip, asr pc
   1ab14:	andeq	r0, r2, r4, lsl #31
   1ab18:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   1ab1c:			; <UNDEFINED> instruction: 0x00020fb8
   1ab20:	push	{r4, lr}
   1ab24:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1ab28:	cmp	r0, #0
   1ab2c:	popne	{r4, pc}
   1ab30:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1ab34:	push	{r4, lr}
   1ab38:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1ab3c:	cmp	r0, #0
   1ab40:	popne	{r4, pc}
   1ab44:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1ab48:	push	{r4, lr}
   1ab4c:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1ab50:	cmp	r0, #0
   1ab54:	popne	{r4, pc}
   1ab58:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1ab5c:	push	{r4, r5, r6, lr}
   1ab60:	mov	r5, r0
   1ab64:	mov	r4, r1
   1ab68:	bl	1b108 <_obstack_memory_used@@Base+0xac4>
   1ab6c:	cmp	r0, #0
   1ab70:	popne	{r4, r5, r6, pc}
   1ab74:	adds	r4, r4, #0
   1ab78:	movne	r4, #1
   1ab7c:	cmp	r5, #0
   1ab80:	orreq	r4, r4, #1
   1ab84:	cmp	r4, #0
   1ab88:	popeq	{r4, r5, r6, pc}
   1ab8c:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1ab90:	push	{r4, lr}
   1ab94:	cmp	r1, #0
   1ab98:	orreq	r1, r1, #1
   1ab9c:	bl	1b108 <_obstack_memory_used@@Base+0xac4>
   1aba0:	cmp	r0, #0
   1aba4:	popne	{r4, pc}
   1aba8:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1abac:	push	{r4, r5, r6, lr}
   1abb0:	mov	r6, r0
   1abb4:	mov	r5, r1
   1abb8:	mov	r4, r2
   1abbc:	bl	1f098 <argp_error@@Base+0xd38>
   1abc0:	cmp	r0, #0
   1abc4:	popne	{r4, r5, r6, pc}
   1abc8:	cmp	r6, #0
   1abcc:	beq	1abdc <_obstack_memory_used@@Base+0x598>
   1abd0:	cmp	r5, #0
   1abd4:	cmpne	r4, #0
   1abd8:	popeq	{r4, r5, r6, pc}
   1abdc:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1abe0:	b	1abac <_obstack_memory_used@@Base+0x568>
   1abe4:	cmp	r2, #0
   1abe8:	cmpne	r1, #0
   1abec:	moveq	r2, #1
   1abf0:	moveq	r1, r2
   1abf4:	push	{r4, lr}
   1abf8:	bl	1f098 <argp_error@@Base+0xd38>
   1abfc:	cmp	r0, #0
   1ac00:	popne	{r4, pc}
   1ac04:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1ac08:	mov	r2, r1
   1ac0c:	mov	r1, r0
   1ac10:	mov	r0, #0
   1ac14:	b	1abac <_obstack_memory_used@@Base+0x568>
   1ac18:	mov	r2, r1
   1ac1c:	mov	r1, r0
   1ac20:	mov	r0, #0
   1ac24:	b	1abe4 <_obstack_memory_used@@Base+0x5a0>
   1ac28:	push	{r4, r5, r6, lr}
   1ac2c:	subs	r6, r0, #0
   1ac30:	sub	sp, sp, #8
   1ac34:	mov	r5, r1
   1ac38:	ldr	r4, [r1]
   1ac3c:	beq	1ac78 <_obstack_memory_used@@Base+0x634>
   1ac40:	lsr	r1, r4, #1
   1ac44:	add	r3, r1, #1
   1ac48:	mvn	r3, r3
   1ac4c:	cmp	r4, r3
   1ac50:	bhi	1ac74 <_obstack_memory_used@@Base+0x630>
   1ac54:	add	r4, r4, #1
   1ac58:	add	r4, r4, r1
   1ac5c:	mov	r0, r6
   1ac60:	mov	r1, r4
   1ac64:	bl	1abac <_obstack_memory_used@@Base+0x568>
   1ac68:	str	r4, [r5]
   1ac6c:	add	sp, sp, #8
   1ac70:	pop	{r4, r5, r6, pc}
   1ac74:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1ac78:	cmp	r4, #0
   1ac7c:	bne	1ac5c <_obstack_memory_used@@Base+0x618>
   1ac80:	mov	r1, r2
   1ac84:	mov	r0, #64	; 0x40
   1ac88:	str	r2, [sp, #4]
   1ac8c:	bl	1f8ac <argp_error@@Base+0x154c>
   1ac90:	ldr	r2, [sp, #4]
   1ac94:	cmp	r0, #0
   1ac98:	movne	r4, r0
   1ac9c:	addeq	r4, r0, #1
   1aca0:	b	1ac5c <_obstack_memory_used@@Base+0x618>
   1aca4:	mov	r2, #1
   1aca8:	b	1ac28 <_obstack_memory_used@@Base+0x5e4>
   1acac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1acb0:	sub	sp, sp, #12
   1acb4:	ldr	r6, [r1]
   1acb8:	mov	sl, r1
   1acbc:	mov	r9, r0
   1acc0:	asrs	r4, r6, #1
   1acc4:	mov	r5, r2
   1acc8:	mov	fp, r3
   1accc:	ldr	r7, [sp, #48]	; 0x30
   1acd0:	bmi	1ae3c <_obstack_memory_used@@Base+0x7f8>
   1acd4:	mvn	r3, #-2147483648	; 0x80000000
   1acd8:	sub	r3, r3, r4
   1acdc:	cmp	r6, r3
   1ace0:	movle	r3, #0
   1ace4:	movgt	r3, #1
   1ace8:	mvn	r8, fp
   1acec:	cmp	r3, #0
   1acf0:	addeq	r4, r4, r6
   1acf4:	mvnne	r4, #-2147483648	; 0x80000000
   1acf8:	lsr	r8, r8, #31
   1acfc:	cmp	fp, r4
   1ad00:	movge	r3, #0
   1ad04:	andlt	r3, r8, #1
   1ad08:	cmp	r3, #0
   1ad0c:	beq	1adf4 <_obstack_memory_used@@Base+0x7b0>
   1ad10:	cmp	r7, #0
   1ad14:	blt	1aec4 <_obstack_memory_used@@Base+0x880>
   1ad18:	bne	1aebc <_obstack_memory_used@@Base+0x878>
   1ad1c:	mov	r2, #64	; 0x40
   1ad20:	mov	r1, r7
   1ad24:	mov	r0, r2
   1ad28:	str	r2, [sp, #4]
   1ad2c:	bl	1fab8 <argp_error@@Base+0x1758>
   1ad30:	ldr	r2, [sp, #4]
   1ad34:	mov	r1, r7
   1ad38:	mov	r4, r0
   1ad3c:	mov	r0, r2
   1ad40:	bl	1fcd8 <argp_error@@Base+0x1978>
   1ad44:	ldr	r2, [sp, #4]
   1ad48:	sub	r1, r2, r1
   1ad4c:	cmp	r9, #0
   1ad50:	sub	r3, r4, r6
   1ad54:	streq	r9, [sl]
   1ad58:	cmp	r3, r5
   1ad5c:	bge	1ade0 <_obstack_memory_used@@Base+0x79c>
   1ad60:	cmp	r5, #0
   1ad64:	blt	1ae50 <_obstack_memory_used@@Base+0x80c>
   1ad68:	cmp	r6, #0
   1ad6c:	blt	1ad8c <_obstack_memory_used@@Base+0x748>
   1ad70:	mvn	r3, #-2147483648	; 0x80000000
   1ad74:	sub	r3, r3, r5
   1ad78:	cmp	r6, r3
   1ad7c:	movle	r3, #0
   1ad80:	movgt	r3, #1
   1ad84:	cmp	r3, #0
   1ad88:	bne	1af4c <_obstack_memory_used@@Base+0x908>
   1ad8c:	add	r5, r6, r5
   1ad90:	cmp	fp, r5
   1ad94:	movge	r8, #0
   1ad98:	andlt	r8, r8, #1
   1ad9c:	cmp	r8, #0
   1ada0:	mov	r4, r5
   1ada4:	bne	1af4c <_obstack_memory_used@@Base+0x908>
   1ada8:	cmp	r7, #0
   1adac:	blt	1ae64 <_obstack_memory_used@@Base+0x820>
   1adb0:	beq	1addc <_obstack_memory_used@@Base+0x798>
   1adb4:	cmp	r5, #0
   1adb8:	blt	1af0c <_obstack_memory_used@@Base+0x8c8>
   1adbc:	mov	r1, r7
   1adc0:	mvn	r0, #-2147483648	; 0x80000000
   1adc4:	bl	1fab8 <argp_error@@Base+0x1758>
   1adc8:	cmp	r5, r0
   1adcc:	movle	r0, #0
   1add0:	movgt	r0, #1
   1add4:	cmp	r0, #0
   1add8:	bne	1af4c <_obstack_memory_used@@Base+0x908>
   1addc:	mul	r1, r5, r7
   1ade0:	mov	r0, r9
   1ade4:	bl	1ab5c <_obstack_memory_used@@Base+0x518>
   1ade8:	str	r4, [sl]
   1adec:	add	sp, sp, #12
   1adf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1adf4:	cmp	r7, #0
   1adf8:	blt	1ae90 <_obstack_memory_used@@Base+0x84c>
   1adfc:	beq	1ad1c <_obstack_memory_used@@Base+0x6d8>
   1ae00:	cmp	r4, #0
   1ae04:	blt	1aecc <_obstack_memory_used@@Base+0x888>
   1ae08:	mov	r1, r7
   1ae0c:	mvn	r0, #-2147483648	; 0x80000000
   1ae10:	bl	1fab8 <argp_error@@Base+0x1758>
   1ae14:	cmp	r0, r4
   1ae18:	movge	r0, #0
   1ae1c:	movlt	r0, #1
   1ae20:	cmp	r0, #0
   1ae24:	mvnne	r2, #-2147483648	; 0x80000000
   1ae28:	bne	1ad20 <_obstack_memory_used@@Base+0x6dc>
   1ae2c:	mul	r1, r7, r4
   1ae30:	cmp	r1, #63	; 0x3f
   1ae34:	bgt	1ad4c <_obstack_memory_used@@Base+0x708>
   1ae38:	b	1ad1c <_obstack_memory_used@@Base+0x6d8>
   1ae3c:	rsb	r3, r4, #-2147483648	; 0x80000000
   1ae40:	cmp	r6, r3
   1ae44:	movge	r3, #0
   1ae48:	movlt	r3, #1
   1ae4c:	b	1ace8 <_obstack_memory_used@@Base+0x6a4>
   1ae50:	rsb	r3, r5, #-2147483648	; 0x80000000
   1ae54:	cmp	r6, r3
   1ae58:	movge	r3, #0
   1ae5c:	movlt	r3, #1
   1ae60:	b	1ad84 <_obstack_memory_used@@Base+0x740>
   1ae64:	cmp	r5, #0
   1ae68:	blt	1aef0 <_obstack_memory_used@@Base+0x8ac>
   1ae6c:	cmn	r7, #1
   1ae70:	beq	1addc <_obstack_memory_used@@Base+0x798>
   1ae74:	mov	r1, r7
   1ae78:	mov	r0, #-2147483648	; 0x80000000
   1ae7c:	bl	1fab8 <argp_error@@Base+0x1758>
   1ae80:	cmp	r5, r0
   1ae84:	movle	r0, #0
   1ae88:	movgt	r0, #1
   1ae8c:	b	1add4 <_obstack_memory_used@@Base+0x790>
   1ae90:	cmp	r4, #0
   1ae94:	blt	1af30 <_obstack_memory_used@@Base+0x8ec>
   1ae98:	cmn	r7, #1
   1ae9c:	beq	1ae2c <_obstack_memory_used@@Base+0x7e8>
   1aea0:	mov	r1, r7
   1aea4:	mov	r0, #-2147483648	; 0x80000000
   1aea8:	bl	1fab8 <argp_error@@Base+0x1758>
   1aeac:	cmp	r0, r4
   1aeb0:	movge	r0, #0
   1aeb4:	movlt	r0, #1
   1aeb8:	b	1ae20 <_obstack_memory_used@@Base+0x7dc>
   1aebc:	mov	r4, fp
   1aec0:	b	1ae08 <_obstack_memory_used@@Base+0x7c4>
   1aec4:	mov	r4, fp
   1aec8:	b	1ae98 <_obstack_memory_used@@Base+0x854>
   1aecc:	cmn	r4, #1
   1aed0:	beq	1ae2c <_obstack_memory_used@@Base+0x7e8>
   1aed4:	mov	r1, r4
   1aed8:	mov	r0, #-2147483648	; 0x80000000
   1aedc:	bl	1fab8 <argp_error@@Base+0x1758>
   1aee0:	cmp	r7, r0
   1aee4:	movle	r0, #0
   1aee8:	movgt	r0, #1
   1aeec:	b	1ae20 <_obstack_memory_used@@Base+0x7dc>
   1aef0:	mov	r1, r7
   1aef4:	mvn	r0, #-2147483648	; 0x80000000
   1aef8:	bl	1fab8 <argp_error@@Base+0x1758>
   1aefc:	cmp	r5, r0
   1af00:	movge	r0, #0
   1af04:	movlt	r0, #1
   1af08:	b	1add4 <_obstack_memory_used@@Base+0x790>
   1af0c:	cmn	r5, #1
   1af10:	beq	1addc <_obstack_memory_used@@Base+0x798>
   1af14:	mov	r1, r5
   1af18:	mov	r0, #-2147483648	; 0x80000000
   1af1c:	bl	1fab8 <argp_error@@Base+0x1758>
   1af20:	cmp	r7, r0
   1af24:	movle	r0, #0
   1af28:	movgt	r0, #1
   1af2c:	b	1add4 <_obstack_memory_used@@Base+0x790>
   1af30:	mov	r1, r7
   1af34:	mvn	r0, #-2147483648	; 0x80000000
   1af38:	bl	1fab8 <argp_error@@Base+0x1758>
   1af3c:	cmp	r0, r4
   1af40:	movle	r0, #0
   1af44:	movgt	r0, #1
   1af48:	b	1ae20 <_obstack_memory_used@@Base+0x7dc>
   1af4c:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1af50:	push	{r4, lr}
   1af54:	mov	r1, #1
   1af58:	bl	1b094 <_obstack_memory_used@@Base+0xa50>
   1af5c:	cmp	r0, #0
   1af60:	popne	{r4, pc}
   1af64:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1af68:	push	{r4, lr}
   1af6c:	mov	r1, #1
   1af70:	bl	1b094 <_obstack_memory_used@@Base+0xa50>
   1af74:	cmp	r0, #0
   1af78:	popne	{r4, pc}
   1af7c:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1af80:	push	{r4, lr}
   1af84:	bl	1b094 <_obstack_memory_used@@Base+0xa50>
   1af88:	cmp	r0, #0
   1af8c:	popne	{r4, pc}
   1af90:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1af94:	push	{r4, lr}
   1af98:	bl	1b094 <_obstack_memory_used@@Base+0xa50>
   1af9c:	cmp	r0, #0
   1afa0:	popne	{r4, pc}
   1afa4:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1afa8:	push	{r4, r5, r6, lr}
   1afac:	mov	r6, r0
   1afb0:	mov	r0, r1
   1afb4:	mov	r4, r1
   1afb8:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1afbc:	subs	r5, r0, #0
   1afc0:	beq	1afd8 <_obstack_memory_used@@Base+0x994>
   1afc4:	mov	r2, r4
   1afc8:	mov	r1, r6
   1afcc:	bl	11810 <memcpy@plt>
   1afd0:	mov	r0, r5
   1afd4:	pop	{r4, r5, r6, pc}
   1afd8:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1afdc:	push	{r4, r5, r6, lr}
   1afe0:	mov	r6, r0
   1afe4:	mov	r0, r1
   1afe8:	mov	r4, r1
   1afec:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1aff0:	subs	r5, r0, #0
   1aff4:	beq	1b00c <_obstack_memory_used@@Base+0x9c8>
   1aff8:	mov	r2, r4
   1affc:	mov	r1, r6
   1b000:	bl	11810 <memcpy@plt>
   1b004:	mov	r0, r5
   1b008:	pop	{r4, r5, r6, pc}
   1b00c:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1b010:	push	{r4, r5, r6, lr}
   1b014:	mov	r6, r0
   1b018:	add	r0, r1, #1
   1b01c:	mov	r4, r1
   1b020:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1b024:	subs	r5, r0, #0
   1b028:	beq	1b048 <_obstack_memory_used@@Base+0xa04>
   1b02c:	mov	r3, #0
   1b030:	mov	r1, r6
   1b034:	strb	r3, [r5, r4]
   1b038:	mov	r2, r4
   1b03c:	bl	11810 <memcpy@plt>
   1b040:	mov	r0, r5
   1b044:	pop	{r4, r5, r6, pc}
   1b048:	bl	1b068 <_obstack_memory_used@@Base+0xa24>
   1b04c:	push	{r4, lr}
   1b050:	mov	r4, r0
   1b054:	bl	119c0 <strlen@plt>
   1b058:	add	r1, r0, #1
   1b05c:	mov	r0, r4
   1b060:	pop	{r4, lr}
   1b064:	b	1afa8 <_obstack_memory_used@@Base+0x964>
   1b068:	ldr	r1, [pc, #24]	; 1b088 <_obstack_memory_used@@Base+0xa44>
   1b06c:	push	{r4, lr}
   1b070:	ldr	r0, [r1]
   1b074:	ldr	r3, [pc, #16]	; 1b08c <_obstack_memory_used@@Base+0xa48>
   1b078:	ldr	r2, [pc, #16]	; 1b090 <_obstack_memory_used@@Base+0xa4c>
   1b07c:	mov	r1, #0
   1b080:	bl	1190c <error@plt>
   1b084:	bl	11bac <abort@plt>
   1b088:	andeq	r2, r3, r8, ror #9
   1b08c:	andeq	r0, r2, r4, ror ip
   1b090:	strdeq	pc, [r1], -ip
   1b094:	cmp	r1, #0
   1b098:	cmpne	r0, #0
   1b09c:	moveq	r1, #1
   1b0a0:	moveq	r0, r1
   1b0a4:	umull	r2, r3, r0, r1
   1b0a8:	adds	r3, r3, #0
   1b0ac:	movne	r3, #1
   1b0b0:	cmp	r2, #0
   1b0b4:	blt	1b0c4 <_obstack_memory_used@@Base+0xa80>
   1b0b8:	cmp	r3, #0
   1b0bc:	bne	1b0c4 <_obstack_memory_used@@Base+0xa80>
   1b0c0:	b	11768 <calloc@plt>
   1b0c4:	push	{r4, lr}
   1b0c8:	bl	11a14 <__errno_location@plt>
   1b0cc:	mov	r3, #12
   1b0d0:	str	r3, [r0]
   1b0d4:	mov	r0, #0
   1b0d8:	pop	{r4, pc}
   1b0dc:	cmp	r0, #0
   1b0e0:	moveq	r0, #1
   1b0e4:	cmp	r0, #0
   1b0e8:	blt	1b0f0 <_obstack_memory_used@@Base+0xaac>
   1b0ec:	b	11930 <malloc@plt>
   1b0f0:	push	{r4, lr}
   1b0f4:	bl	11a14 <__errno_location@plt>
   1b0f8:	mov	r3, #12
   1b0fc:	str	r3, [r0]
   1b100:	mov	r0, #0
   1b104:	pop	{r4, pc}
   1b108:	cmp	r0, #0
   1b10c:	beq	1b130 <_obstack_memory_used@@Base+0xaec>
   1b110:	cmp	r1, #0
   1b114:	push	{lr}		; (str lr, [sp, #-4]!)
   1b118:	sub	sp, sp, #12
   1b11c:	beq	1b138 <_obstack_memory_used@@Base+0xaf4>
   1b120:	blt	1b150 <_obstack_memory_used@@Base+0xb0c>
   1b124:	add	sp, sp, #12
   1b128:	pop	{lr}		; (ldr lr, [sp], #4)
   1b12c:	b	11888 <realloc@plt>
   1b130:	mov	r0, r1
   1b134:	b	1b0dc <_obstack_memory_used@@Base+0xa98>
   1b138:	str	r1, [sp, #4]
   1b13c:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1b140:	ldr	r3, [sp, #4]
   1b144:	mov	r0, r3
   1b148:	add	sp, sp, #12
   1b14c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b150:	bl	11a14 <__errno_location@plt>
   1b154:	mov	r2, #12
   1b158:	mov	r3, #0
   1b15c:	str	r2, [r0]
   1b160:	b	1b144 <_obstack_memory_used@@Base+0xb00>
   1b164:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b168:	sub	sp, sp, #20
   1b16c:	ldr	r5, [r0, #4]
   1b170:	ldr	r4, [r0]
   1b174:	cmp	r5, #0
   1b178:	ldr	r7, [r0, #8]
   1b17c:	beq	1b254 <_obstack_memory_used@@Base+0xc10>
   1b180:	stmib	sp, {r1, r2, r3}
   1b184:	mov	r6, #1
   1b188:	str	r4, [sp]
   1b18c:	mov	r8, #0
   1b190:	b	1b1b0 <_obstack_memory_used@@Base+0xb6c>
   1b194:	mov	r3, r6
   1b198:	subs	r5, r5, #1
   1b19c:	moveq	r3, #0
   1b1a0:	andne	r3, r3, #1
   1b1a4:	cmp	r3, #0
   1b1a8:	add	r4, r4, #24
   1b1ac:	beq	1b21c <_obstack_memory_used@@Base+0xbd8>
   1b1b0:	ldr	fp, [r4, #12]
   1b1b4:	ands	r9, fp, #8
   1b1b8:	movne	r3, r6
   1b1bc:	movne	r9, r8
   1b1c0:	bne	1b198 <_obstack_memory_used@@Base+0xb54>
   1b1c4:	ldr	sl, [r4, #4]
   1b1c8:	sub	r3, sl, #1
   1b1cc:	cmp	r3, #254	; 0xfe
   1b1d0:	bhi	1b194 <_obstack_memory_used@@Base+0xb50>
   1b1d4:	bl	11990 <__ctype_b_loc@plt>
   1b1d8:	lsl	r3, sl, #1
   1b1dc:	ldr	r1, [r0]
   1b1e0:	ldrh	r3, [r1, r3]
   1b1e4:	tst	r3, #16384	; 0x4000
   1b1e8:	beq	1b194 <_obstack_memory_used@@Base+0xb50>
   1b1ec:	ldrb	r3, [r7]
   1b1f0:	cmp	r3, sl
   1b1f4:	bne	1b194 <_obstack_memory_used@@Base+0xb50>
   1b1f8:	ldr	r3, [sp]
   1b1fc:	tst	fp, #4
   1b200:	moveq	r3, r4
   1b204:	tst	fp, #2
   1b208:	str	r3, [sp]
   1b20c:	movne	r3, r6
   1b210:	beq	1b22c <_obstack_memory_used@@Base+0xbe8>
   1b214:	add	r7, r7, #1
   1b218:	b	1b198 <_obstack_memory_used@@Base+0xb54>
   1b21c:	mov	sl, r9
   1b220:	mov	r0, sl
   1b224:	add	sp, sp, #20
   1b228:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b22c:	ldr	r3, [sp, #12]
   1b230:	ldr	r2, [sp, #8]
   1b234:	ldr	r1, [sp]
   1b238:	mov	r0, r4
   1b23c:	ldr	ip, [sp, #4]
   1b240:	blx	ip
   1b244:	clz	r3, r0
   1b248:	mov	r9, r0
   1b24c:	lsr	r3, r3, #5
   1b250:	b	1b214 <_obstack_memory_used@@Base+0xbd0>
   1b254:	mov	sl, r5
   1b258:	b	1b220 <_obstack_memory_used@@Base+0xbdc>
   1b25c:	push	{r4, r5, r6, lr}
   1b260:	ldr	r4, [r0, #12]
   1b264:	ands	r4, r4, #8
   1b268:	movne	r4, #0
   1b26c:	bne	1b298 <_obstack_memory_used@@Base+0xc54>
   1b270:	ldr	r5, [r0, #4]
   1b274:	sub	r3, r5, #1
   1b278:	cmp	r3, #254	; 0xfe
   1b27c:	bhi	1b298 <_obstack_memory_used@@Base+0xc54>
   1b280:	bl	11990 <__ctype_b_loc@plt>
   1b284:	lsl	r3, r5, #1
   1b288:	ldr	r2, [r0]
   1b28c:	ldrh	r3, [r2, r3]
   1b290:	tst	r3, #16384	; 0x4000
   1b294:	movne	r4, r5
   1b298:	mov	r0, r4
   1b29c:	pop	{r4, r5, r6, pc}
   1b2a0:	push	{r4, lr}
   1b2a4:	mov	r4, r0
   1b2a8:	bl	11990 <__ctype_b_loc@plt>
   1b2ac:	ldr	r2, [r4]
   1b2b0:	ldr	lr, [r0]
   1b2b4:	b	1b2bc <_obstack_memory_used@@Base+0xc78>
   1b2b8:	str	r2, [r4]
   1b2bc:	ldrb	r1, [r2]
   1b2c0:	mov	r3, r2
   1b2c4:	add	r2, r2, #1
   1b2c8:	lsl	r0, r1, #1
   1b2cc:	ldrh	ip, [lr, r0]
   1b2d0:	tst	ip, #8192	; 0x2000
   1b2d4:	bne	1b2b8 <_obstack_memory_used@@Base+0xc74>
   1b2d8:	subs	r0, r1, #45	; 0x2d
   1b2dc:	movne	r0, #1
   1b2e0:	cmp	r1, #0
   1b2e4:	popeq	{r4, pc}
   1b2e8:	tst	ip, #8
   1b2ec:	popne	{r4, pc}
   1b2f0:	add	r3, r3, #1
   1b2f4:	str	r3, [r4]
   1b2f8:	ldrb	r2, [r3]
   1b2fc:	cmp	r2, #0
   1b300:	lsl	r2, r2, #1
   1b304:	popeq	{r4, pc}
   1b308:	ldrh	r2, [lr, r2]
   1b30c:	tst	r2, #8
   1b310:	beq	1b2f0 <_obstack_memory_used@@Base+0xcac>
   1b314:	pop	{r4, pc}
   1b318:	push	{r4, r5, r6, lr}
   1b31c:	mov	r5, r0
   1b320:	ldr	r0, [r0, #12]
   1b324:	cmp	r0, #0
   1b328:	beq	1b33c <_obstack_memory_used@@Base+0xcf8>
   1b32c:	ldr	r4, [r0, #24]
   1b330:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1b334:	subs	r0, r4, #0
   1b338:	bne	1b32c <_obstack_memory_used@@Base+0xce8>
   1b33c:	ldr	r3, [r5, #4]
   1b340:	cmp	r3, #0
   1b344:	beq	1b358 <_obstack_memory_used@@Base+0xd14>
   1b348:	ldr	r0, [r5]
   1b34c:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1b350:	ldr	r0, [r5, #8]
   1b354:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1b358:	mov	r0, r5
   1b35c:	pop	{r4, r5, r6, lr}
   1b360:	b	1a1f4 <argp_parse@@Base+0xe98>
   1b364:	push	{r4, r5, r6, r7, r8, lr}
   1b368:	mov	r5, r1
   1b36c:	ldr	r3, [r0, #28]
   1b370:	ldr	r1, [r0, #24]
   1b374:	ldr	r2, [r0, #16]
   1b378:	sub	r3, r3, r1
   1b37c:	cmp	r3, r2
   1b380:	mov	r4, r0
   1b384:	bhi	1b3f0 <_obstack_memory_used@@Base+0xdac>
   1b388:	ldr	r1, [r4, #20]
   1b38c:	mov	r6, #32
   1b390:	cmp	r1, #0
   1b394:	subge	r5, r5, r1
   1b398:	mov	r7, #1
   1b39c:	cmp	r5, #0
   1b3a0:	sub	r5, r5, #1
   1b3a4:	ble	1b3d0 <_obstack_memory_used@@Base+0xd8c>
   1b3a8:	ldr	r3, [r4, #28]
   1b3ac:	ldr	r2, [r4, #32]
   1b3b0:	cmp	r3, r2
   1b3b4:	bcs	1b3d4 <_obstack_memory_used@@Base+0xd90>
   1b3b8:	add	r2, r3, #1
   1b3bc:	cmp	r5, #0
   1b3c0:	str	r2, [r4, #28]
   1b3c4:	sub	r5, r5, #1
   1b3c8:	strb	r6, [r3]
   1b3cc:	bgt	1b3a8 <_obstack_memory_used@@Base+0xd64>
   1b3d0:	pop	{r4, r5, r6, r7, r8, pc}
   1b3d4:	mov	r1, r7
   1b3d8:	mov	r0, r4
   1b3dc:	bl	1f7f0 <argp_error@@Base+0x1490>
   1b3e0:	cmp	r0, #0
   1b3e4:	beq	1b39c <_obstack_memory_used@@Base+0xd58>
   1b3e8:	ldr	r3, [r4, #28]
   1b3ec:	b	1b3b8 <_obstack_memory_used@@Base+0xd74>
   1b3f0:	bl	1f160 <argp_error@@Base+0xe00>
   1b3f4:	b	1b388 <_obstack_memory_used@@Base+0xd44>
   1b3f8:	push	{r4, r5, r6, lr}
   1b3fc:	subs	r4, r2, #0
   1b400:	popeq	{r4, r5, r6, pc}
   1b404:	ldr	ip, [r4, #20]
   1b408:	cmp	ip, #0
   1b40c:	popeq	{r4, r5, r6, pc}
   1b410:	mov	r6, r1
   1b414:	mov	r5, r0
   1b418:	mov	r1, r3
   1b41c:	mov	r0, r4
   1b420:	bl	1a098 <argp_parse@@Base+0xd3c>
   1b424:	ldr	r3, [r4, #20]
   1b428:	mov	r1, r5
   1b42c:	mov	r2, r0
   1b430:	mov	r0, r6
   1b434:	pop	{r4, r5, r6, lr}
   1b438:	bx	r3
   1b43c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b440:	mov	r5, r2
   1b444:	sub	sp, sp, #12
   1b448:	mov	r2, r1
   1b44c:	ldr	r3, [r5, #16]
   1b450:	ldr	r1, [pc, #488]	; 1b640 <_obstack_memory_used@@Base+0xffc>
   1b454:	mov	r8, r0
   1b458:	bl	1b3f8 <_obstack_memory_used@@Base+0xdb4>
   1b45c:	subs	r6, r0, #0
   1b460:	beq	1b56c <_obstack_memory_used@@Base+0xf28>
   1b464:	ldrb	r3, [r6]
   1b468:	cmp	r3, #0
   1b46c:	beq	1b560 <_obstack_memory_used@@Base+0xf1c>
   1b470:	ldr	r3, [r5, #8]
   1b474:	ldr	r3, [r3]
   1b478:	cmp	r3, #0
   1b47c:	beq	1b4a4 <_obstack_memory_used@@Base+0xe60>
   1b480:	ldr	r4, [r5, #4]
   1b484:	ldr	r3, [r4, #28]
   1b488:	ldr	r2, [r4, #32]
   1b48c:	cmp	r3, r2
   1b490:	bcs	1b624 <_obstack_memory_used@@Base+0xfe0>
   1b494:	add	r1, r3, #1
   1b498:	mov	r2, #10
   1b49c:	str	r1, [r4, #28]
   1b4a0:	strb	r2, [r3]
   1b4a4:	ldr	sl, [pc, #408]	; 1b644 <_obstack_memory_used@@Base+0x1000>
   1b4a8:	ldr	r0, [r5, #4]
   1b4ac:	ldr	r1, [sl, #24]
   1b4b0:	bl	1b364 <_obstack_memory_used@@Base+0xd20>
   1b4b4:	ldr	r4, [r5, #4]
   1b4b8:	ldr	r9, [sl, #24]
   1b4bc:	ldr	r7, [r4, #28]
   1b4c0:	ldr	r3, [r4, #24]
   1b4c4:	ldr	r2, [r4, #16]
   1b4c8:	sub	r3, r7, r3
   1b4cc:	cmp	r3, r2
   1b4d0:	strls	r9, [r4, #4]
   1b4d4:	movls	fp, r4
   1b4d8:	bhi	1b5a8 <_obstack_memory_used@@Base+0xf64>
   1b4dc:	str	r9, [fp, #12]
   1b4e0:	mov	r0, r6
   1b4e4:	bl	119c0 <strlen@plt>
   1b4e8:	subs	r9, r0, #0
   1b4ec:	beq	1b524 <_obstack_memory_used@@Base+0xee0>
   1b4f0:	ldr	r2, [r4, #32]
   1b4f4:	add	r3, r7, r9
   1b4f8:	cmp	r2, r3
   1b4fc:	bcc	1b58c <_obstack_memory_used@@Base+0xf48>
   1b500:	mov	r2, r9
   1b504:	mov	r0, r7
   1b508:	mov	r1, r6
   1b50c:	bl	11810 <memcpy@plt>
   1b510:	ldr	r3, [r4, #28]
   1b514:	add	r9, r3, r9
   1b518:	str	r9, [r4, #28]
   1b51c:	ldr	r4, [r5, #4]
   1b520:	ldr	r7, [r4, #28]
   1b524:	ldr	r3, [r4, #24]
   1b528:	ldr	r2, [r4, #16]
   1b52c:	sub	r3, r7, r3
   1b530:	cmp	r3, r2
   1b534:	movls	r9, r4
   1b538:	bhi	1b5f4 <_obstack_memory_used@@Base+0xfb0>
   1b53c:	ldr	r2, [r9, #32]
   1b540:	mov	r3, #0
   1b544:	cmp	r2, r7
   1b548:	str	r3, [r4, #4]
   1b54c:	bls	1b608 <_obstack_memory_used@@Base+0xfc4>
   1b550:	add	r2, r7, #1
   1b554:	mov	r3, #10
   1b558:	str	r2, [r9, #28]
   1b55c:	strb	r3, [r7]
   1b560:	ldr	r3, [r5, #8]
   1b564:	mov	r2, #1
   1b568:	str	r2, [r3, #4]
   1b56c:	cmp	r8, r6
   1b570:	beq	1b584 <_obstack_memory_used@@Base+0xf40>
   1b574:	mov	r0, r6
   1b578:	add	sp, sp, #12
   1b57c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b580:	b	1a1f4 <argp_parse@@Base+0xe98>
   1b584:	add	sp, sp, #12
   1b588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b58c:	mov	r1, r9
   1b590:	mov	r0, r4
   1b594:	bl	1f7f0 <argp_error@@Base+0x1490>
   1b598:	cmp	r0, #0
   1b59c:	beq	1b51c <_obstack_memory_used@@Base+0xed8>
   1b5a0:	ldr	r7, [r4, #28]
   1b5a4:	b	1b500 <_obstack_memory_used@@Base+0xebc>
   1b5a8:	mov	r0, r4
   1b5ac:	str	r9, [sp, #4]
   1b5b0:	bl	1f160 <argp_error@@Base+0xe00>
   1b5b4:	ldr	fp, [r5, #4]
   1b5b8:	ldr	r3, [sp, #4]
   1b5bc:	ldr	r9, [sl, #24]
   1b5c0:	ldr	r7, [fp, #28]
   1b5c4:	ldr	r2, [fp, #24]
   1b5c8:	ldr	r1, [fp, #16]
   1b5cc:	sub	r2, r7, r2
   1b5d0:	cmp	r2, r1
   1b5d4:	str	r3, [r4, #4]
   1b5d8:	movls	r4, fp
   1b5dc:	bls	1b4dc <_obstack_memory_used@@Base+0xe98>
   1b5e0:	mov	r0, fp
   1b5e4:	bl	1f160 <argp_error@@Base+0xe00>
   1b5e8:	ldr	r4, [r5, #4]
   1b5ec:	ldr	r7, [r4, #28]
   1b5f0:	b	1b4dc <_obstack_memory_used@@Base+0xe98>
   1b5f4:	mov	r0, r4
   1b5f8:	bl	1f160 <argp_error@@Base+0xe00>
   1b5fc:	ldr	r9, [r5, #4]
   1b600:	ldr	r7, [r9, #28]
   1b604:	b	1b53c <_obstack_memory_used@@Base+0xef8>
   1b608:	mov	r1, #1
   1b60c:	mov	r0, r9
   1b610:	bl	1f7f0 <argp_error@@Base+0x1490>
   1b614:	cmp	r0, #0
   1b618:	beq	1b560 <_obstack_memory_used@@Base+0xf1c>
   1b61c:	ldr	r7, [r9, #28]
   1b620:	b	1b550 <_obstack_memory_used@@Base+0xf0c>
   1b624:	mov	r1, #1
   1b628:	mov	r0, r4
   1b62c:	bl	1f7f0 <argp_error@@Base+0x1490>
   1b630:	cmp	r0, #0
   1b634:	beq	1b4a4 <_obstack_memory_used@@Base+0xe60>
   1b638:	ldr	r3, [r4, #28]
   1b63c:	b	1b494 <_obstack_memory_used@@Base+0xe50>
   1b640:	andeq	r0, r0, #3
   1b644:	andeq	r2, r3, r0, asr #9
   1b648:	ldr	r3, [r1, #12]
   1b64c:	push	{r4, r5, r6, r7, r8, lr}
   1b650:	cmp	r3, #0
   1b654:	mov	r4, r1
   1b658:	mov	r6, r0
   1b65c:	beq	1b744 <_obstack_memory_used@@Base+0x1100>
   1b660:	ldr	r3, [r1, #8]
   1b664:	ldr	r2, [r1]
   1b668:	ldr	r7, [r3]
   1b66c:	ldr	r3, [r3, #4]
   1b670:	ldr	r5, [r2, #16]
   1b674:	cmp	r3, #0
   1b678:	cmpne	r7, #0
   1b67c:	beq	1b6b4 <_obstack_memory_used@@Base+0x1070>
   1b680:	ldr	r2, [r2, #12]
   1b684:	ldr	r3, [r7, #12]
   1b688:	cmp	r2, r3
   1b68c:	beq	1b6b4 <_obstack_memory_used@@Base+0x1070>
   1b690:	ldr	r8, [r1, #4]
   1b694:	ldr	r3, [r8, #28]
   1b698:	ldr	r2, [r8, #32]
   1b69c:	cmp	r3, r2
   1b6a0:	bcs	1b7d4 <_obstack_memory_used@@Base+0x1190>
   1b6a4:	add	r1, r3, #1
   1b6a8:	mov	r2, #10
   1b6ac:	str	r1, [r8, #28]
   1b6b0:	strb	r2, [r3]
   1b6b4:	cmp	r5, #0
   1b6b8:	beq	1b7a0 <_obstack_memory_used@@Base+0x115c>
   1b6bc:	ldr	r0, [r5]
   1b6c0:	cmp	r0, #0
   1b6c4:	beq	1b7a0 <_obstack_memory_used@@Base+0x115c>
   1b6c8:	ldrb	r3, [r0]
   1b6cc:	cmp	r3, #0
   1b6d0:	beq	1b7a0 <_obstack_memory_used@@Base+0x115c>
   1b6d4:	cmp	r7, #0
   1b6d8:	beq	1b708 <_obstack_memory_used@@Base+0x10c4>
   1b6dc:	ldr	r3, [r7, #16]
   1b6e0:	cmp	r5, r3
   1b6e4:	beq	1b7a0 <_obstack_memory_used@@Base+0x115c>
   1b6e8:	cmp	r3, #0
   1b6ec:	beq	1b708 <_obstack_memory_used@@Base+0x10c4>
   1b6f0:	ldr	r3, [r3, #12]
   1b6f4:	cmp	r3, #0
   1b6f8:	cmpne	r5, r3
   1b6fc:	bne	1b6f0 <_obstack_memory_used@@Base+0x10ac>
   1b700:	cmp	r5, r3
   1b704:	beq	1b7a0 <_obstack_memory_used@@Base+0x115c>
   1b708:	ldr	r3, [r4, #4]
   1b70c:	ldr	r1, [r5, #16]
   1b710:	mov	r2, r4
   1b714:	ldr	r7, [r3, #12]
   1b718:	bl	1b43c <_obstack_memory_used@@Base+0xdf8>
   1b71c:	ldr	r5, [r4, #4]
   1b720:	mov	r0, r5
   1b724:	ldr	r3, [r5, #28]
   1b728:	ldr	r1, [r5, #24]
   1b72c:	ldr	r2, [r5, #16]
   1b730:	sub	r3, r3, r1
   1b734:	cmp	r3, r2
   1b738:	bhi	1b7c8 <_obstack_memory_used@@Base+0x1184>
   1b73c:	str	r7, [r5, #12]
   1b740:	b	1b7a4 <_obstack_memory_used@@Base+0x1160>
   1b744:	ldr	r5, [r1, #4]
   1b748:	ldr	r3, [r5, #28]
   1b74c:	ldr	r1, [r5, #32]
   1b750:	add	r2, r3, #2
   1b754:	cmp	r1, r2
   1b758:	bcc	1b784 <_obstack_memory_used@@Base+0x1140>
   1b75c:	ldr	r2, [pc, #140]	; 1b7f0 <_obstack_memory_used@@Base+0x11ac>
   1b760:	mov	r1, r6
   1b764:	ldrh	r2, [r2]
   1b768:	strh	r2, [r3]
   1b76c:	ldr	r3, [r5, #28]
   1b770:	ldr	r0, [r4, #4]
   1b774:	add	r3, r3, #2
   1b778:	str	r3, [r5, #28]
   1b77c:	pop	{r4, r5, r6, r7, r8, lr}
   1b780:	b	1b364 <_obstack_memory_used@@Base+0xd20>
   1b784:	mov	r1, #2
   1b788:	mov	r0, r5
   1b78c:	bl	1f7f0 <argp_error@@Base+0x1490>
   1b790:	cmp	r0, #0
   1b794:	beq	1b7b8 <_obstack_memory_used@@Base+0x1174>
   1b798:	ldr	r3, [r5, #28]
   1b79c:	b	1b75c <_obstack_memory_used@@Base+0x1118>
   1b7a0:	ldr	r0, [r4, #4]
   1b7a4:	mov	r3, #0
   1b7a8:	str	r3, [r4, #12]
   1b7ac:	mov	r1, r6
   1b7b0:	pop	{r4, r5, r6, r7, r8, lr}
   1b7b4:	b	1b364 <_obstack_memory_used@@Base+0xd20>
   1b7b8:	ldr	r0, [r4, #4]
   1b7bc:	mov	r1, r6
   1b7c0:	pop	{r4, r5, r6, r7, r8, lr}
   1b7c4:	b	1b364 <_obstack_memory_used@@Base+0xd20>
   1b7c8:	bl	1f160 <argp_error@@Base+0xe00>
   1b7cc:	ldr	r0, [r4, #4]
   1b7d0:	b	1b73c <_obstack_memory_used@@Base+0x10f8>
   1b7d4:	mov	r1, #1
   1b7d8:	mov	r0, r8
   1b7dc:	bl	1f7f0 <argp_error@@Base+0x1490>
   1b7e0:	cmp	r0, #0
   1b7e4:	beq	1b6b4 <_obstack_memory_used@@Base+0x1070>
   1b7e8:	ldr	r3, [r8, #28]
   1b7ec:	b	1b6a4 <_obstack_memory_used@@Base+0x1060>
   1b7f0:	strheq	r1, [r2], -r8
   1b7f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7f8:	mov	r7, r3
   1b7fc:	ldr	sl, [r0, #12]
   1b800:	sub	sp, sp, #36	; 0x24
   1b804:	ldr	r3, [r0, #16]
   1b808:	cmp	sl, #0
   1b80c:	mov	fp, r0
   1b810:	mov	r6, r2
   1b814:	str	r3, [sp, #16]
   1b818:	mov	r9, r1
   1b81c:	ldr	r8, [sp, #72]	; 0x48
   1b820:	ldr	r5, [sp, #76]	; 0x4c
   1b824:	beq	1bbf4 <_obstack_memory_used@@Base+0x15b0>
   1b828:	mov	r1, #11
   1b82c:	mov	r0, sl
   1b830:	bl	119cc <strchr@plt>
   1b834:	cmp	r6, #0
   1b838:	bne	1bb10 <_obstack_memory_used@@Base+0x14cc>
   1b83c:	cmp	r0, #0
   1b840:	ldr	r3, [fp, #20]
   1b844:	beq	1bd4c <_obstack_memory_used@@Base+0x1708>
   1b848:	cmp	r3, #0
   1b84c:	sub	r4, r0, sl
   1b850:	beq	1bce4 <_obstack_memory_used@@Base+0x16a0>
   1b854:	cmp	r4, #0
   1b858:	beq	1bc84 <_obstack_memory_used@@Base+0x1640>
   1b85c:	mov	r0, sl
   1b860:	mov	r1, r4
   1b864:	bl	117f8 <strndup@plt>
   1b868:	mov	r3, #1
   1b86c:	str	r3, [sp, #24]
   1b870:	mov	sl, r0
   1b874:	adds	r3, r0, #0
   1b878:	movne	r3, #1
   1b87c:	str	r3, [sp, #20]
   1b880:	mov	r1, r9
   1b884:	mov	r0, fp
   1b888:	bl	1a098 <argp_parse@@Base+0xd3c>
   1b88c:	ldr	r3, [fp, #20]
   1b890:	str	r0, [sp, #12]
   1b894:	ldr	r0, [pc, #1272]	; 1bd94 <_obstack_memory_used@@Base+0x1750>
   1b898:	ldr	r2, [sp, #12]
   1b89c:	mov	r1, sl
   1b8a0:	blx	r3
   1b8a4:	subs	r3, r0, #0
   1b8a8:	beq	1bc34 <_obstack_memory_used@@Base+0x15f0>
   1b8ac:	cmp	r7, #0
   1b8b0:	beq	1b8d4 <_obstack_memory_used@@Base+0x1290>
   1b8b4:	ldr	r2, [r5, #28]
   1b8b8:	ldr	r1, [r5, #32]
   1b8bc:	cmp	r2, r1
   1b8c0:	bcs	1bc3c <_obstack_memory_used@@Base+0x15f8>
   1b8c4:	add	r0, r2, #1
   1b8c8:	mov	r1, #10
   1b8cc:	str	r0, [r5, #28]
   1b8d0:	strb	r1, [r2]
   1b8d4:	ldr	r2, [sp, #24]
   1b8d8:	cmp	r3, sl
   1b8dc:	movne	r2, #0
   1b8e0:	andeq	r2, r2, #1
   1b8e4:	cmp	r2, #0
   1b8e8:	beq	1bb54 <_obstack_memory_used@@Base+0x1510>
   1b8ec:	ldr	r0, [r5, #28]
   1b8f0:	ldr	r1, [r5, #32]
   1b8f4:	add	r2, r0, r4
   1b8f8:	cmp	r1, r2
   1b8fc:	bcs	1bbb4 <_obstack_memory_used@@Base+0x1570>
   1b900:	mov	r1, r4
   1b904:	mov	r0, r5
   1b908:	str	r3, [sp, #24]
   1b90c:	bl	1f7f0 <argp_error@@Base+0x1490>
   1b910:	ldr	r3, [sp, #24]
   1b914:	cmp	r0, #0
   1b918:	bne	1bbb0 <_obstack_memory_used@@Base+0x156c>
   1b91c:	ldr	r4, [r5, #28]
   1b920:	ldr	r1, [r5, #24]
   1b924:	ldr	r2, [r5, #16]
   1b928:	sub	r4, r4, r1
   1b92c:	cmp	r4, r2
   1b930:	bhi	1bbd8 <_obstack_memory_used@@Base+0x1594>
   1b934:	ldr	r2, [r5, #20]
   1b938:	ldr	r1, [r5, #4]
   1b93c:	bic	r2, r2, r2, asr #31
   1b940:	cmp	r1, r2
   1b944:	bcs	1b968 <_obstack_memory_used@@Base+0x1324>
   1b948:	ldr	r2, [r5, #28]
   1b94c:	ldr	r1, [r5, #32]
   1b950:	cmp	r2, r1
   1b954:	bcs	1bc60 <_obstack_memory_used@@Base+0x161c>
   1b958:	add	r0, r2, #1
   1b95c:	mov	r1, #10
   1b960:	str	r0, [r5, #28]
   1b964:	strb	r1, [r2]
   1b968:	cmp	r3, sl
   1b96c:	moveq	r4, #1
   1b970:	beq	1b980 <_obstack_memory_used@@Base+0x133c>
   1b974:	mov	r0, r3
   1b978:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1b97c:	mov	r4, #1
   1b980:	ldr	r3, [sp, #20]
   1b984:	cmp	r3, #0
   1b988:	beq	1b9a0 <_obstack_memory_used@@Base+0x135c>
   1b98c:	ldr	r3, [fp, #20]
   1b990:	cmp	r3, #0
   1b994:	beq	1ba84 <_obstack_memory_used@@Base+0x1440>
   1b998:	mov	r0, sl
   1b99c:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1b9a0:	cmp	r6, #0
   1b9a4:	beq	1ba84 <_obstack_memory_used@@Base+0x1440>
   1b9a8:	ldr	r3, [fp, #20]
   1b9ac:	cmp	r3, #0
   1b9b0:	beq	1ba84 <_obstack_memory_used@@Base+0x1440>
   1b9b4:	ldr	r2, [sp, #12]
   1b9b8:	mov	r1, #0
   1b9bc:	ldr	r0, [pc, #980]	; 1bd98 <_obstack_memory_used@@Base+0x1754>
   1b9c0:	blx	r3
   1b9c4:	subs	sl, r0, #0
   1b9c8:	beq	1ba84 <_obstack_memory_used@@Base+0x1440>
   1b9cc:	orrs	r3, r7, r4
   1b9d0:	beq	1b9f4 <_obstack_memory_used@@Base+0x13b0>
   1b9d4:	ldr	r3, [r5, #28]
   1b9d8:	ldr	r2, [r5, #32]
   1b9dc:	cmp	r3, r2
   1b9e0:	bcs	1bd1c <_obstack_memory_used@@Base+0x16d8>
   1b9e4:	add	r1, r3, #1
   1b9e8:	mov	r2, #10
   1b9ec:	str	r1, [r5, #28]
   1b9f0:	strb	r2, [r3]
   1b9f4:	mov	r0, sl
   1b9f8:	bl	119c0 <strlen@plt>
   1b9fc:	subs	r4, r0, #0
   1ba00:	beq	1ba2c <_obstack_memory_used@@Base+0x13e8>
   1ba04:	ldr	r0, [r5, #28]
   1ba08:	ldr	r2, [r5, #32]
   1ba0c:	add	r3, r0, r4
   1ba10:	cmp	r2, r3
   1ba14:	bcs	1bc94 <_obstack_memory_used@@Base+0x1650>
   1ba18:	mov	r1, r4
   1ba1c:	mov	r0, r5
   1ba20:	bl	1f7f0 <argp_error@@Base+0x1490>
   1ba24:	cmp	r0, #0
   1ba28:	bne	1bc90 <_obstack_memory_used@@Base+0x164c>
   1ba2c:	mov	r0, sl
   1ba30:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1ba34:	ldr	r3, [r5, #28]
   1ba38:	ldr	r1, [r5, #24]
   1ba3c:	ldr	r2, [r5, #16]
   1ba40:	sub	r3, r3, r1
   1ba44:	cmp	r3, r2
   1ba48:	bhi	1bcb0 <_obstack_memory_used@@Base+0x166c>
   1ba4c:	ldr	r3, [r5, #20]
   1ba50:	ldr	r2, [r5, #4]
   1ba54:	bic	r3, r3, r3, asr #31
   1ba58:	cmp	r2, r3
   1ba5c:	bcs	1bbec <_obstack_memory_used@@Base+0x15a8>
   1ba60:	ldr	r3, [r5, #28]
   1ba64:	ldr	r2, [r5, #32]
   1ba68:	cmp	r3, r2
   1ba6c:	bcs	1bd00 <_obstack_memory_used@@Base+0x16bc>
   1ba70:	mov	r4, #1
   1ba74:	add	r2, r3, r4
   1ba78:	str	r2, [r5, #28]
   1ba7c:	mov	r2, #10
   1ba80:	strb	r2, [r3]
   1ba84:	ldr	fp, [sp, #16]
   1ba88:	cmp	fp, #0
   1ba8c:	beq	1bb04 <_obstack_memory_used@@Base+0x14c0>
   1ba90:	ldr	r3, [fp]
   1ba94:	cmp	r3, #0
   1ba98:	beq	1bb04 <_obstack_memory_used@@Base+0x14c0>
   1ba9c:	eor	r2, r4, #1
   1baa0:	and	r2, r2, #1
   1baa4:	clz	sl, r8
   1baa8:	lsr	sl, sl, #5
   1baac:	orrs	r2, sl, r2
   1bab0:	bne	1bacc <_obstack_memory_used@@Base+0x1488>
   1bab4:	b	1bd38 <_obstack_memory_used@@Base+0x16f4>
   1bab8:	cmp	r4, #0
   1babc:	movne	r2, sl
   1bac0:	orreq	r2, sl, #1
   1bac4:	cmp	r2, #0
   1bac8:	beq	1bb04 <_obstack_memory_used@@Base+0x14c0>
   1bacc:	orrs	r2, r7, r4
   1bad0:	mov	r0, r3
   1bad4:	str	r5, [sp, #4]
   1bad8:	movne	r3, #1
   1badc:	moveq	r3, #0
   1bae0:	str	r8, [sp]
   1bae4:	mov	r2, r6
   1bae8:	mov	r1, r9
   1baec:	bl	1b7f4 <_obstack_memory_used@@Base+0x11b0>
   1baf0:	ldr	r3, [fp, #16]
   1baf4:	add	fp, fp, #16
   1baf8:	cmp	r3, #0
   1bafc:	orr	r4, r4, r0
   1bb00:	bne	1bab8 <_obstack_memory_used@@Base+0x1474>
   1bb04:	mov	r0, r4
   1bb08:	add	sp, sp, #36	; 0x24
   1bb0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bb10:	cmp	r0, #0
   1bb14:	addne	sl, r0, #1
   1bb18:	beq	1bcdc <_obstack_memory_used@@Base+0x1698>
   1bb1c:	ldr	r3, [fp, #20]
   1bb20:	cmp	r3, #0
   1bb24:	beq	1bcbc <_obstack_memory_used@@Base+0x1678>
   1bb28:	mov	r3, #0
   1bb2c:	mov	r1, r9
   1bb30:	mov	r0, fp
   1bb34:	mov	r4, r3
   1bb38:	str	r3, [sp, #20]
   1bb3c:	bl	1a098 <argp_parse@@Base+0xd3c>
   1bb40:	str	r4, [sp, #24]
   1bb44:	ldr	r3, [fp, #20]
   1bb48:	str	r0, [sp, #12]
   1bb4c:	ldr	r0, [pc, #584]	; 1bd9c <_obstack_memory_used@@Base+0x1758>
   1bb50:	b	1b898 <_obstack_memory_used@@Base+0x1254>
   1bb54:	mov	r0, r3
   1bb58:	str	r3, [sp, #24]
   1bb5c:	bl	119c0 <strlen@plt>
   1bb60:	ldr	r3, [sp, #24]
   1bb64:	subs	r4, r0, #0
   1bb68:	beq	1b91c <_obstack_memory_used@@Base+0x12d8>
   1bb6c:	ldr	r0, [r5, #28]
   1bb70:	ldr	r1, [r5, #32]
   1bb74:	add	r2, r0, r4
   1bb78:	cmp	r1, r2
   1bb7c:	bcs	1bba0 <_obstack_memory_used@@Base+0x155c>
   1bb80:	mov	r1, r4
   1bb84:	mov	r0, r5
   1bb88:	str	r3, [sp, #24]
   1bb8c:	bl	1f7f0 <argp_error@@Base+0x1490>
   1bb90:	ldr	r3, [sp, #24]
   1bb94:	cmp	r0, #0
   1bb98:	beq	1b91c <_obstack_memory_used@@Base+0x12d8>
   1bb9c:	ldr	r0, [r5, #28]
   1bba0:	mov	r2, r4
   1bba4:	mov	r1, r3
   1bba8:	str	r3, [sp, #24]
   1bbac:	b	1bbc0 <_obstack_memory_used@@Base+0x157c>
   1bbb0:	ldr	r0, [r5, #28]
   1bbb4:	mov	r2, r4
   1bbb8:	mov	r1, sl
   1bbbc:	str	r3, [sp, #24]
   1bbc0:	bl	11810 <memcpy@plt>
   1bbc4:	ldr	r2, [r5, #28]
   1bbc8:	ldr	r3, [sp, #24]
   1bbcc:	add	r4, r2, r4
   1bbd0:	str	r4, [r5, #28]
   1bbd4:	b	1b920 <_obstack_memory_used@@Base+0x12dc>
   1bbd8:	mov	r0, r5
   1bbdc:	str	r3, [sp, #24]
   1bbe0:	bl	1f160 <argp_error@@Base+0xe00>
   1bbe4:	ldr	r3, [sp, #24]
   1bbe8:	b	1b934 <_obstack_memory_used@@Base+0x12f0>
   1bbec:	mov	r4, #1
   1bbf0:	b	1ba84 <_obstack_memory_used@@Base+0x1440>
   1bbf4:	ldr	r4, [r0, #20]
   1bbf8:	cmp	r4, #0
   1bbfc:	beq	1bd44 <_obstack_memory_used@@Base+0x1700>
   1bc00:	bl	1a098 <argp_parse@@Base+0xd3c>
   1bc04:	cmp	r6, #0
   1bc08:	ldr	r3, [fp, #20]
   1bc0c:	strne	sl, [sp, #20]
   1bc10:	strne	sl, [sp, #24]
   1bc14:	movne	r4, sl
   1bc18:	streq	r6, [sp, #20]
   1bc1c:	streq	r6, [sp, #24]
   1bc20:	moveq	r4, r6
   1bc24:	str	r0, [sp, #12]
   1bc28:	ldrne	r0, [pc, #364]	; 1bd9c <_obstack_memory_used@@Base+0x1758>
   1bc2c:	ldreq	r0, [pc, #352]	; 1bd94 <_obstack_memory_used@@Base+0x1750>
   1bc30:	b	1b898 <_obstack_memory_used@@Base+0x1254>
   1bc34:	mov	r4, r3
   1bc38:	b	1b980 <_obstack_memory_used@@Base+0x133c>
   1bc3c:	mov	r1, #1
   1bc40:	mov	r0, r5
   1bc44:	str	r3, [sp, #28]
   1bc48:	bl	1f7f0 <argp_error@@Base+0x1490>
   1bc4c:	ldr	r3, [sp, #28]
   1bc50:	cmp	r0, #0
   1bc54:	beq	1b8d4 <_obstack_memory_used@@Base+0x1290>
   1bc58:	ldr	r2, [r5, #28]
   1bc5c:	b	1b8c4 <_obstack_memory_used@@Base+0x1280>
   1bc60:	mov	r1, #1
   1bc64:	mov	r0, r5
   1bc68:	str	r3, [sp, #24]
   1bc6c:	bl	1f7f0 <argp_error@@Base+0x1490>
   1bc70:	ldr	r3, [sp, #24]
   1bc74:	cmp	r0, #0
   1bc78:	beq	1b968 <_obstack_memory_used@@Base+0x1324>
   1bc7c:	ldr	r2, [r5, #28]
   1bc80:	b	1b958 <_obstack_memory_used@@Base+0x1314>
   1bc84:	str	r4, [sp, #20]
   1bc88:	str	r4, [sp, #24]
   1bc8c:	b	1b880 <_obstack_memory_used@@Base+0x123c>
   1bc90:	ldr	r0, [r5, #28]
   1bc94:	mov	r2, r4
   1bc98:	mov	r1, sl
   1bc9c:	bl	11810 <memcpy@plt>
   1bca0:	ldr	r3, [r5, #28]
   1bca4:	add	r4, r3, r4
   1bca8:	str	r4, [r5, #28]
   1bcac:	b	1ba2c <_obstack_memory_used@@Base+0x13e8>
   1bcb0:	mov	r0, r5
   1bcb4:	bl	1f160 <argp_error@@Base+0xe00>
   1bcb8:	b	1ba4c <_obstack_memory_used@@Base+0x1408>
   1bcbc:	cmp	sl, #0
   1bcc0:	beq	1bd40 <_obstack_memory_used@@Base+0x16fc>
   1bcc4:	str	r3, [sp, #20]
   1bcc8:	str	r3, [sp, #24]
   1bccc:	mov	r4, r3
   1bcd0:	str	r3, [sp, #12]
   1bcd4:	mov	r3, sl
   1bcd8:	b	1b8ac <_obstack_memory_used@@Base+0x1268>
   1bcdc:	mov	sl, r0
   1bce0:	b	1bb1c <_obstack_memory_used@@Base+0x14d8>
   1bce4:	adds	r3, r4, #0
   1bce8:	movne	r3, #1
   1bcec:	str	r3, [sp, #24]
   1bcf0:	str	r3, [sp, #20]
   1bcf4:	str	r6, [sp, #12]
   1bcf8:	mov	r3, sl
   1bcfc:	b	1b8ac <_obstack_memory_used@@Base+0x1268>
   1bd00:	mov	r1, #1
   1bd04:	mov	r0, r5
   1bd08:	bl	1f7f0 <argp_error@@Base+0x1490>
   1bd0c:	cmp	r0, #0
   1bd10:	beq	1bbec <_obstack_memory_used@@Base+0x15a8>
   1bd14:	ldr	r3, [r5, #28]
   1bd18:	b	1ba70 <_obstack_memory_used@@Base+0x142c>
   1bd1c:	mov	r1, #1
   1bd20:	mov	r0, r5
   1bd24:	bl	1f7f0 <argp_error@@Base+0x1490>
   1bd28:	cmp	r0, #0
   1bd2c:	beq	1b9f4 <_obstack_memory_used@@Base+0x13b0>
   1bd30:	ldr	r3, [r5, #28]
   1bd34:	b	1b9e4 <_obstack_memory_used@@Base+0x13a0>
   1bd38:	mov	r4, #1
   1bd3c:	b	1bb04 <_obstack_memory_used@@Base+0x14c0>
   1bd40:	mov	r4, sl
   1bd44:	str	r4, [sp, #12]
   1bd48:	b	1b9a0 <_obstack_memory_used@@Base+0x135c>
   1bd4c:	cmp	r3, #0
   1bd50:	beq	1bd7c <_obstack_memory_used@@Base+0x1738>
   1bd54:	mov	r1, r9
   1bd58:	mov	r0, fp
   1bd5c:	bl	1a098 <argp_parse@@Base+0xd3c>
   1bd60:	mov	r4, r6
   1bd64:	ldr	r3, [fp, #20]
   1bd68:	str	r6, [sp, #20]
   1bd6c:	str	r6, [sp, #24]
   1bd70:	str	r0, [sp, #12]
   1bd74:	ldr	r0, [pc, #24]	; 1bd94 <_obstack_memory_used@@Base+0x1750>
   1bd78:	b	1b898 <_obstack_memory_used@@Base+0x1254>
   1bd7c:	mov	r3, sl
   1bd80:	str	r6, [sp, #20]
   1bd84:	str	r6, [sp, #24]
   1bd88:	mov	r4, r6
   1bd8c:	str	r6, [sp, #12]
   1bd90:	b	1b8ac <_obstack_memory_used@@Base+0x1268>
   1bd94:	andeq	r0, r0, #1
   1bd98:	andeq	r0, r0, #4
   1bd9c:	andeq	r0, r0, #2
   1bda0:	ldr	r3, [r0, #12]
   1bda4:	ldr	r2, [r1, #12]
   1bda8:	push	{r4, r5, r6, lr}
   1bdac:	cmp	r3, r2
   1bdb0:	beq	1be00 <_obstack_memory_used@@Base+0x17bc>
   1bdb4:	mov	r5, r1
   1bdb8:	mov	r4, r0
   1bdbc:	mov	r1, r2
   1bdc0:	mov	r0, r3
   1bdc4:	bl	1bda0 <_obstack_memory_used@@Base+0x175c>
   1bdc8:	cmp	r0, #0
   1bdcc:	popne	{r4, r5, r6, pc}
   1bdd0:	ldr	r3, [r5, #8]
   1bdd4:	ldr	r0, [r4, #8]
   1bdd8:	mvn	r2, r3
   1bddc:	lsr	r2, r2, #31
   1bde0:	cmp	r2, r0, lsr #31
   1bde4:	subne	r0, r0, r3
   1bde8:	subeq	r0, r3, r0
   1bdec:	cmp	r0, #0
   1bdf0:	ldreq	r3, [r5, #4]
   1bdf4:	ldreq	r0, [r4, #4]
   1bdf8:	subeq	r0, r3, r0
   1bdfc:	pop	{r4, r5, r6, pc}
   1be00:	ldr	r3, [r1, #8]
   1be04:	ldr	r2, [r0, #8]
   1be08:	mvn	ip, r3
   1be0c:	ldr	lr, [r1, #4]
   1be10:	lsr	ip, ip, #31
   1be14:	cmp	ip, r2, lsr #31
   1be18:	ldr	r1, [r0, #4]
   1be1c:	subne	r0, r2, r3
   1be20:	subeq	r0, r3, r2
   1be24:	cmp	r0, #0
   1be28:	subeq	r0, lr, r1
   1be2c:	pop	{r4, r5, r6, pc}
   1be30:	push	{r4, r5, r6, r7, r8, r9, lr}
   1be34:	sub	sp, sp, #12
   1be38:	ldr	lr, [r0, #16]
   1be3c:	cmp	lr, #0
   1be40:	movne	r2, lr
   1be44:	bne	1be50 <_obstack_memory_used@@Base+0x180c>
   1be48:	b	1c114 <_obstack_memory_used@@Base+0x1ad0>
   1be4c:	mov	r2, r3
   1be50:	ldr	r3, [r2, #12]
   1be54:	cmp	r3, #0
   1be58:	bne	1be4c <_obstack_memory_used@@Base+0x1808>
   1be5c:	ldr	ip, [r1, #16]
   1be60:	ldr	r4, [r2, #8]
   1be64:	cmp	ip, #0
   1be68:	movne	r2, ip
   1be6c:	bne	1be78 <_obstack_memory_used@@Base+0x1834>
   1be70:	b	1c128 <_obstack_memory_used@@Base+0x1ae4>
   1be74:	mov	r2, r3
   1be78:	ldr	r3, [r2, #12]
   1be7c:	cmp	r3, #0
   1be80:	bne	1be74 <_obstack_memory_used@@Base+0x1830>
   1be84:	ldr	r3, [r2, #8]
   1be88:	mvn	r2, r3
   1be8c:	lsr	r2, r2, #31
   1be90:	cmp	r2, r4, lsr #31
   1be94:	subne	r4, r4, r3
   1be98:	subeq	r4, r3, r4
   1be9c:	cmp	r4, #0
   1bea0:	bne	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1bea4:	adds	r4, ip, #0
   1bea8:	movne	r4, #1
   1beac:	cmp	lr, #0
   1beb0:	rsbeq	r4, r4, #0
   1beb4:	rsbne	r4, r4, #1
   1beb8:	cmp	r4, #0
   1bebc:	bne	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1bec0:	cmp	lr, #0
   1bec4:	mov	r5, r1
   1bec8:	mov	r6, r0
   1becc:	beq	1bf24 <_obstack_memory_used@@Base+0x18e0>
   1bed0:	ldr	r0, [lr, #20]
   1bed4:	ldr	r2, [ip, #20]
   1bed8:	cmp	r0, r2
   1bedc:	ble	1c0e8 <_obstack_memory_used@@Base+0x1aa4>
   1bee0:	mov	r0, lr
   1bee4:	ldr	r0, [r0, #12]
   1bee8:	ldr	r3, [r0, #20]
   1beec:	cmp	r2, r3
   1bef0:	blt	1bee4 <_obstack_memory_used@@Base+0x18a0>
   1bef4:	mov	r1, ip
   1bef8:	bl	1bda0 <_obstack_memory_used@@Base+0x175c>
   1befc:	cmp	r0, #0
   1bf00:	movne	r4, r0
   1bf04:	moveq	r4, #1
   1bf08:	mov	r0, r4
   1bf0c:	add	sp, sp, #12
   1bf10:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1bf14:	mov	r0, lr
   1bf18:	bl	1bda0 <_obstack_memory_used@@Base+0x175c>
   1bf1c:	subs	r4, r0, #0
   1bf20:	bne	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1bf24:	ldr	r4, [r5, #12]
   1bf28:	ldr	r3, [r6, #12]
   1bf2c:	mvn	r2, r4
   1bf30:	lsr	r2, r2, #31
   1bf34:	cmp	r2, r3, lsr #31
   1bf38:	subne	r4, r3, r4
   1bf3c:	subeq	r4, r4, r3
   1bf40:	cmp	r4, #0
   1bf44:	bne	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1bf48:	ldr	r2, [r6, #4]
   1bf4c:	ldr	lr, [r6]
   1bf50:	cmp	r2, #0
   1bf54:	beq	1bf80 <_obstack_memory_used@@Base+0x193c>
   1bf58:	add	r3, lr, #24
   1bf5c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1bf60:	cmp	r1, #0
   1bf64:	beq	1bf74 <_obstack_memory_used@@Base+0x1930>
   1bf68:	ldr	r0, [r3, #-12]
   1bf6c:	tst	r0, #2
   1bf70:	beq	1c130 <_obstack_memory_used@@Base+0x1aec>
   1bf74:	subs	r2, r2, #1
   1bf78:	add	r3, r3, #24
   1bf7c:	bne	1bf5c <_obstack_memory_used@@Base+0x1918>
   1bf80:	ldr	r2, [r5, #4]
   1bf84:	mov	ip, #0
   1bf88:	cmp	r2, ip
   1bf8c:	str	ip, [sp]
   1bf90:	ldr	r3, [r5]
   1bf94:	beq	1c1a0 <_obstack_memory_used@@Base+0x1b5c>
   1bf98:	add	r3, r3, #24
   1bf9c:	ldr	r1, [r3, #-24]	; 0xffffffe8
   1bfa0:	cmp	r1, #0
   1bfa4:	beq	1bfb4 <_obstack_memory_used@@Base+0x1970>
   1bfa8:	ldr	r0, [r3, #-12]
   1bfac:	tst	r0, #2
   1bfb0:	beq	1bfc4 <_obstack_memory_used@@Base+0x1980>
   1bfb4:	subs	r2, r2, #1
   1bfb8:	add	r3, r3, #24
   1bfbc:	bne	1bf9c <_obstack_memory_used@@Base+0x1958>
   1bfc0:	mov	r1, r2
   1bfc4:	ldr	r3, [lr, #12]
   1bfc8:	str	r1, [sp, #4]
   1bfcc:	ands	r3, ip, r3, lsr #3
   1bfd0:	beq	1c198 <_obstack_memory_used@@Base+0x1b54>
   1bfd4:	mov	r0, sp
   1bfd8:	bl	1b2a0 <_obstack_memory_used@@Base+0xc5c>
   1bfdc:	ldr	r3, [r5]
   1bfe0:	cmp	r0, #0
   1bfe4:	bne	1c184 <_obstack_memory_used@@Base+0x1b40>
   1bfe8:	ldr	r3, [r3, #12]
   1bfec:	tst	r3, #8
   1bff0:	beq	1c018 <_obstack_memory_used@@Base+0x19d4>
   1bff4:	ldr	r3, [sp, #4]
   1bff8:	cmp	r3, #0
   1bffc:	beq	1c018 <_obstack_memory_used@@Base+0x19d4>
   1c000:	add	r0, sp, #4
   1c004:	bl	1b2a0 <_obstack_memory_used@@Base+0xc5c>
   1c008:	cmp	r0, #0
   1c00c:	subne	r4, r4, #1
   1c010:	cmp	r4, #0
   1c014:	bne	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1c018:	ldr	r2, [r6, #20]
   1c01c:	mov	r0, r6
   1c020:	mov	r3, #0
   1c024:	ldr	r2, [r2, #24]
   1c028:	ldr	r1, [pc, #408]	; 1c1c8 <_obstack_memory_used@@Base+0x1b84>
   1c02c:	bl	1b164 <_obstack_memory_used@@Base+0xb20>
   1c030:	ldr	r2, [r5, #20]
   1c034:	mov	r3, #0
   1c038:	ldr	r1, [pc, #392]	; 1c1c8 <_obstack_memory_used@@Base+0x1b84>
   1c03c:	ldr	r2, [r2, #24]
   1c040:	uxtb	r6, r0
   1c044:	mov	r0, r5
   1c048:	bl	1b164 <_obstack_memory_used@@Base+0xb20>
   1c04c:	cmp	r6, #0
   1c050:	lslne	r4, r6, #2
   1c054:	movne	r7, r6
   1c058:	uxtb	r5, r0
   1c05c:	beq	1c168 <_obstack_memory_used@@Base+0x1b24>
   1c060:	cmp	r5, #0
   1c064:	lslne	r9, r5, #2
   1c068:	movne	r8, r5
   1c06c:	beq	1c14c <_obstack_memory_used@@Base+0x1b08>
   1c070:	bl	1196c <__ctype_tolower_loc@plt>
   1c074:	ldr	r3, [r0]
   1c078:	ldr	r4, [r3, r4]
   1c07c:	ldr	r3, [r3, r9]
   1c080:	subs	r4, r4, r3
   1c084:	bne	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1c088:	subs	r4, r8, r7
   1c08c:	bne	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1c090:	adds	r4, r5, #0
   1c094:	movne	r4, #1
   1c098:	cmp	r6, #0
   1c09c:	rsbeq	r4, r4, #0
   1c0a0:	rsbne	r4, r4, #1
   1c0a4:	cmp	r4, #0
   1c0a8:	bne	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1c0ac:	cmp	r6, #0
   1c0b0:	bne	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1c0b4:	ldm	sp, {r0, r1}
   1c0b8:	adds	r4, r1, #0
   1c0bc:	movne	r4, #1
   1c0c0:	cmp	r0, #0
   1c0c4:	rsbeq	r4, r4, #0
   1c0c8:	rsbne	r4, r4, #1
   1c0cc:	cmp	r4, #0
   1c0d0:	bne	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1c0d4:	cmp	r0, #0
   1c0d8:	beq	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1c0dc:	bl	11894 <strcasecmp@plt>
   1c0e0:	mov	r4, r0
   1c0e4:	b	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1c0e8:	mov	r1, ip
   1c0ec:	bge	1bf14 <_obstack_memory_used@@Base+0x18d0>
   1c0f0:	ldr	r1, [r1, #12]
   1c0f4:	ldr	r3, [r1, #20]
   1c0f8:	cmp	r0, r3
   1c0fc:	blt	1c0f0 <_obstack_memory_used@@Base+0x1aac>
   1c100:	mov	r0, lr
   1c104:	bl	1bda0 <_obstack_memory_used@@Base+0x175c>
   1c108:	subs	r4, r0, #0
   1c10c:	mvneq	r4, #0
   1c110:	b	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1c114:	ldr	ip, [r1, #16]
   1c118:	ldr	r4, [r0, #12]
   1c11c:	cmp	ip, #0
   1c120:	movne	r2, ip
   1c124:	bne	1be78 <_obstack_memory_used@@Base+0x1834>
   1c128:	ldr	r3, [r1, #12]
   1c12c:	b	1be88 <_obstack_memory_used@@Base+0x1844>
   1c130:	ldr	r2, [r5, #4]
   1c134:	str	r1, [sp]
   1c138:	cmp	r2, #0
   1c13c:	ldr	r3, [r5]
   1c140:	beq	1c1a8 <_obstack_memory_used@@Base+0x1b64>
   1c144:	mov	ip, #1
   1c148:	b	1bf98 <_obstack_memory_used@@Base+0x1954>
   1c14c:	ldr	r3, [sp, #4]
   1c150:	cmp	r3, #0
   1c154:	moveq	r9, r5
   1c158:	ldrbne	r8, [r3]
   1c15c:	moveq	r8, r5
   1c160:	lslne	r9, r8, #2
   1c164:	b	1c070 <_obstack_memory_used@@Base+0x1a2c>
   1c168:	ldr	r3, [sp]
   1c16c:	cmp	r3, #0
   1c170:	moveq	r4, r6
   1c174:	ldrbne	r7, [r3]
   1c178:	moveq	r7, r6
   1c17c:	lslne	r4, r7, #2
   1c180:	b	1c060 <_obstack_memory_used@@Base+0x1a1c>
   1c184:	ldr	r3, [r3, #12]
   1c188:	tst	r3, #8
   1c18c:	bne	1c1b4 <_obstack_memory_used@@Base+0x1b70>
   1c190:	mov	r4, #1
   1c194:	b	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1c198:	ldr	r3, [r5]
   1c19c:	b	1bfe8 <_obstack_memory_used@@Base+0x19a4>
   1c1a0:	str	r2, [sp, #4]
   1c1a4:	b	1c018 <_obstack_memory_used@@Base+0x19d4>
   1c1a8:	mov	r1, r2
   1c1ac:	mov	ip, #1
   1c1b0:	b	1bfc4 <_obstack_memory_used@@Base+0x1980>
   1c1b4:	ldr	r3, [sp, #4]
   1c1b8:	mov	r4, #1
   1c1bc:	cmp	r3, #0
   1c1c0:	bne	1c000 <_obstack_memory_used@@Base+0x19bc>
   1c1c4:	b	1bf08 <_obstack_memory_used@@Base+0x18c4>
   1c1c8:	andeq	fp, r1, ip, asr r2
   1c1cc:	ldr	r3, [r0, #28]
   1c1d0:	ldr	r2, [r0, #24]
   1c1d4:	push	{r4, r5, r6, lr}
   1c1d8:	mov	r5, r1
   1c1dc:	ldr	r1, [r0, #16]
   1c1e0:	sub	r2, r3, r2
   1c1e4:	cmp	r2, r1
   1c1e8:	mov	r4, r0
   1c1ec:	movls	r2, r3
   1c1f0:	bhi	1c24c <_obstack_memory_used@@Base+0x1c08>
   1c1f4:	ldr	r1, [r4, #20]
   1c1f8:	ldr	r0, [r4, #8]
   1c1fc:	cmp	r1, #0
   1c200:	addge	r5, r5, r1
   1c204:	cmp	r5, r0
   1c208:	bcc	1c22c <_obstack_memory_used@@Base+0x1be8>
   1c20c:	ldr	r1, [r4, #32]
   1c210:	cmp	r1, r3
   1c214:	bls	1c25c <_obstack_memory_used@@Base+0x1c18>
   1c218:	add	r1, r2, #1
   1c21c:	mov	r3, #10
   1c220:	str	r1, [r4, #28]
   1c224:	strb	r3, [r2]
   1c228:	pop	{r4, r5, r6, pc}
   1c22c:	ldr	r2, [r4, #32]
   1c230:	cmp	r2, r3
   1c234:	bls	1c278 <_obstack_memory_used@@Base+0x1c34>
   1c238:	add	r1, r3, #1
   1c23c:	mov	r2, #32
   1c240:	str	r1, [r4, #28]
   1c244:	strb	r2, [r3]
   1c248:	pop	{r4, r5, r6, pc}
   1c24c:	bl	1f160 <argp_error@@Base+0xe00>
   1c250:	ldr	r3, [r4, #28]
   1c254:	mov	r2, r3
   1c258:	b	1c1f4 <_obstack_memory_used@@Base+0x1bb0>
   1c25c:	mov	r1, #1
   1c260:	mov	r0, r4
   1c264:	bl	1f7f0 <argp_error@@Base+0x1490>
   1c268:	cmp	r0, #0
   1c26c:	popeq	{r4, r5, r6, pc}
   1c270:	ldr	r2, [r4, #28]
   1c274:	b	1c218 <_obstack_memory_used@@Base+0x1bd4>
   1c278:	mov	r1, #1
   1c27c:	mov	r0, r4
   1c280:	bl	1f7f0 <argp_error@@Base+0x1490>
   1c284:	cmp	r0, #0
   1c288:	popeq	{r4, r5, r6, pc}
   1c28c:	ldr	r3, [r4, #28]
   1c290:	b	1c238 <_obstack_memory_used@@Base+0x1bf4>
   1c294:	push	{r4, r5, r6, lr}
   1c298:	ldr	r5, [r0, #8]
   1c29c:	ldr	r2, [r0, #12]
   1c2a0:	ldr	ip, [r1, #12]
   1c2a4:	cmp	r5, #0
   1c2a8:	orr	r2, r2, ip
   1c2ac:	beq	1c314 <_obstack_memory_used@@Base+0x1cd0>
   1c2b0:	tst	r2, #16
   1c2b4:	bne	1c2f0 <_obstack_memory_used@@Base+0x1cac>
   1c2b8:	tst	r2, #1
   1c2bc:	mov	r6, r3
   1c2c0:	mov	r4, r0
   1c2c4:	bne	1c2f8 <_obstack_memory_used@@Base+0x1cb4>
   1c2c8:	mov	r0, r5
   1c2cc:	bl	119c0 <strlen@plt>
   1c2d0:	add	r1, r0, #6
   1c2d4:	mov	r0, r6
   1c2d8:	bl	1c1cc <_obstack_memory_used@@Base+0x1b88>
   1c2dc:	mov	r3, r5
   1c2e0:	ldr	r2, [r4, #4]
   1c2e4:	mov	r0, r6
   1c2e8:	ldr	r1, [pc, #56]	; 1c328 <_obstack_memory_used@@Base+0x1ce4>
   1c2ec:	bl	1f810 <argp_error@@Base+0x14b0>
   1c2f0:	mov	r0, #0
   1c2f4:	pop	{r4, r5, r6, pc}
   1c2f8:	ldr	r2, [r0, #4]
   1c2fc:	mov	r3, r5
   1c300:	mov	r0, r6
   1c304:	ldr	r1, [pc, #32]	; 1c32c <_obstack_memory_used@@Base+0x1ce8>
   1c308:	bl	1f810 <argp_error@@Base+0x14b0>
   1c30c:	mov	r0, #0
   1c310:	pop	{r4, r5, r6, pc}
   1c314:	ldr	r5, [r1, #8]
   1c318:	cmp	r5, #0
   1c31c:	bne	1c2b0 <_obstack_memory_used@@Base+0x1c6c>
   1c320:	mov	r0, #0
   1c324:	pop	{r4, r5, r6, pc}
   1c328:	andeq	r1, r2, r8, asr #1
   1c32c:	strheq	r1, [r2], -ip
   1c330:	mov	ip, r0
   1c334:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c338:	mov	r8, r2
   1c33c:	sub	sp, sp, #28
   1c340:	mov	r2, ip
   1c344:	ldr	ip, [ip, #16]
   1c348:	mov	r9, r1
   1c34c:	ldr	r1, [r0, #8]
   1c350:	str	ip, [sp, #8]
   1c354:	ldr	ip, [r8]
   1c358:	str	r1, [sp, #16]
   1c35c:	mov	r0, r1
   1c360:	mov	r4, r3
   1c364:	ldr	r1, [pc, #456]	; 1c534 <_obstack_memory_used@@Base+0x1ef0>
   1c368:	mov	r3, r9
   1c36c:	mov	r5, ip
   1c370:	str	ip, [sp, #20]
   1c374:	ldr	r6, [sp, #64]	; 0x40
   1c378:	bl	1b3f8 <_obstack_memory_used@@Base+0xdb4>
   1c37c:	subs	r3, r0, #0
   1c380:	str	r3, [sp, #12]
   1c384:	beq	1c4e0 <_obstack_memory_used@@Base+0x1e9c>
   1c388:	mov	r1, #10
   1c38c:	bl	117d4 <strchrnul@plt>
   1c390:	ldrb	sl, [r0]
   1c394:	mov	r7, r0
   1c398:	cmp	sl, #0
   1c39c:	bne	1c49c <_obstack_memory_used@@Base+0x1e58>
   1c3a0:	ldr	r5, [sp, #12]
   1c3a4:	add	r1, r7, #1
   1c3a8:	sub	r1, r1, r5
   1c3ac:	mov	r0, r6
   1c3b0:	bl	1c1cc <_obstack_memory_used@@Base+0x1b88>
   1c3b4:	ldr	r0, [r6, #28]
   1c3b8:	sub	fp, r7, r5
   1c3bc:	ldr	r1, [r6, #32]
   1c3c0:	add	r2, r0, fp
   1c3c4:	cmp	r1, r2
   1c3c8:	bcs	1c3e4 <_obstack_memory_used@@Base+0x1da0>
   1c3cc:	mov	r1, fp
   1c3d0:	mov	r0, r6
   1c3d4:	bl	1f7f0 <argp_error@@Base+0x1490>
   1c3d8:	cmp	r0, #0
   1c3dc:	beq	1c3fc <_obstack_memory_used@@Base+0x1db8>
   1c3e0:	ldr	r0, [r6, #28]
   1c3e4:	mov	r2, fp
   1c3e8:	mov	r1, r5
   1c3ec:	bl	11810 <memcpy@plt>
   1c3f0:	ldr	r3, [r6, #28]
   1c3f4:	add	fp, r3, fp
   1c3f8:	str	fp, [r6, #28]
   1c3fc:	ldr	r3, [sp, #16]
   1c400:	ldr	r2, [sp, #12]
   1c404:	cmp	r3, r2
   1c408:	beq	1c414 <_obstack_memory_used@@Base+0x1dd0>
   1c40c:	mov	r0, r2
   1c410:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1c414:	ldr	r3, [sp, #8]
   1c418:	cmp	r3, #0
   1c41c:	beq	1c460 <_obstack_memory_used@@Base+0x1e1c>
   1c420:	ldr	r2, [r3]
   1c424:	cmp	r2, #0
   1c428:	beq	1c460 <_obstack_memory_used@@Base+0x1e1c>
   1c42c:	ldr	r5, [sp, #8]
   1c430:	mov	r3, r4
   1c434:	mov	r0, r2
   1c438:	str	r6, [sp]
   1c43c:	mov	r2, r8
   1c440:	mov	r1, r9
   1c444:	bl	1c330 <_obstack_memory_used@@Base+0x1cec>
   1c448:	ldr	r2, [r5, #16]!
   1c44c:	cmp	r2, #0
   1c450:	clz	r3, r0
   1c454:	lsr	r3, r3, #5
   1c458:	bne	1c434 <_obstack_memory_used@@Base+0x1df0>
   1c45c:	mov	r4, r3
   1c460:	cmp	r4, #0
   1c464:	moveq	sl, #0
   1c468:	andne	sl, sl, #1
   1c46c:	cmp	sl, #0
   1c470:	beq	1c500 <_obstack_memory_used@@Base+0x1ebc>
   1c474:	ldrb	r0, [r7]
   1c478:	cmp	r0, #0
   1c47c:	bne	1c510 <_obstack_memory_used@@Base+0x1ecc>
   1c480:	ldr	r3, [sp, #20]
   1c484:	ldrb	r4, [r3]
   1c488:	cmp	r4, #0
   1c48c:	moveq	r0, r4
   1c490:	strbne	r0, [r3]
   1c494:	add	sp, sp, #28
   1c498:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c49c:	ldrb	sl, [r5]
   1c4a0:	cmp	sl, #0
   1c4a4:	beq	1c52c <_obstack_memory_used@@Base+0x1ee8>
   1c4a8:	mov	fp, #0
   1c4ac:	add	r5, r0, #1
   1c4b0:	add	fp, fp, #1
   1c4b4:	mov	r0, r5
   1c4b8:	mov	r1, #10
   1c4bc:	bl	117d4 <strchrnul@plt>
   1c4c0:	cmp	fp, sl
   1c4c4:	bne	1c4ac <_obstack_memory_used@@Base+0x1e68>
   1c4c8:	mov	r7, r0
   1c4cc:	ldr	r2, [r8]
   1c4d0:	mov	sl, #1
   1c4d4:	add	r2, r2, sl
   1c4d8:	str	r2, [r8]
   1c4dc:	b	1c3a4 <_obstack_memory_used@@Base+0x1d60>
   1c4e0:	ldr	r3, [sp, #8]
   1c4e4:	cmp	r3, #0
   1c4e8:	beq	1c500 <_obstack_memory_used@@Base+0x1ebc>
   1c4ec:	ldr	r2, [r3]
   1c4f0:	cmp	r2, #0
   1c4f4:	ldrne	r7, [sp, #12]
   1c4f8:	movne	sl, r7
   1c4fc:	bne	1c42c <_obstack_memory_used@@Base+0x1de8>
   1c500:	clz	r0, r4
   1c504:	lsr	r0, r0, #5
   1c508:	add	sp, sp, #28
   1c50c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c510:	ldr	r2, [sp, #20]
   1c514:	mov	r0, #1
   1c518:	ldrb	r3, [r2]
   1c51c:	add	r3, r3, r0
   1c520:	strb	r3, [r2]
   1c524:	add	sp, sp, #28
   1c528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c52c:	ldr	r5, [sp, #12]
   1c530:	b	1c4cc <_obstack_memory_used@@Base+0x1e88>
   1c534:	andeq	r0, r0, #6
   1c538:	ldr	r2, [r0, #8]
   1c53c:	cmp	r2, #0
   1c540:	beq	1c54c <_obstack_memory_used@@Base+0x1f08>
   1c544:	mov	r0, #0
   1c548:	bx	lr
   1c54c:	ldr	r2, [r1, #8]
   1c550:	cmp	r2, #0
   1c554:	bne	1c544 <_obstack_memory_used@@Base+0x1f00>
   1c558:	ldr	r1, [r1, #12]
   1c55c:	ldr	r2, [r0, #12]
   1c560:	orr	r2, r2, r1
   1c564:	tst	r2, #16
   1c568:	ldreq	r2, [r3]
   1c56c:	ldreq	r1, [r0, #4]
   1c570:	addeq	r0, r2, #1
   1c574:	streq	r0, [r3]
   1c578:	strbeq	r1, [r2]
   1c57c:	b	1c544 <_obstack_memory_used@@Base+0x1f00>
   1c580:	mov	r3, r0
   1c584:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c588:	sub	sp, sp, #52	; 0x34
   1c58c:	ldr	r2, [r3, #16]
   1c590:	str	r0, [sp, #24]
   1c594:	mov	r0, #16
   1c598:	ldr	r4, [r3]
   1c59c:	str	r1, [sp, #28]
   1c5a0:	str	r2, [sp, #8]
   1c5a4:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1c5a8:	subs	r3, r0, #0
   1c5ac:	str	r3, [sp, #20]
   1c5b0:	beq	1cc14 <_obstack_memory_used@@Base+0x25d0>
   1c5b4:	ldr	r2, [sp, #20]
   1c5b8:	mov	r3, #0
   1c5bc:	cmp	r4, #0
   1c5c0:	str	r3, [r2, #4]
   1c5c4:	str	r3, [r2, #12]
   1c5c8:	beq	1c7cc <_obstack_memory_used@@Base+0x2188>
   1c5cc:	ldr	r5, [r4, #12]
   1c5d0:	ands	r5, r5, #4
   1c5d4:	bne	1cc28 <_obstack_memory_used@@Base+0x25e4>
   1c5d8:	add	r6, r4, #24
   1c5dc:	mov	r9, r5
   1c5e0:	mov	sl, r5
   1c5e4:	mov	fp, r2
   1c5e8:	b	1c62c <_obstack_memory_used@@Base+0x1fe8>
   1c5ec:	ldr	r3, [r6, #-12]
   1c5f0:	tst	r3, #4
   1c5f4:	addeq	r9, r9, #1
   1c5f8:	streq	r9, [fp, #4]
   1c5fc:	tst	r3, #8
   1c600:	bne	1c628 <_obstack_memory_used@@Base+0x1fe4>
   1c604:	sub	r3, r8, #1
   1c608:	cmp	r3, #254	; 0xfe
   1c60c:	bhi	1c628 <_obstack_memory_used@@Base+0x1fe4>
   1c610:	bl	11990 <__ctype_b_loc@plt>
   1c614:	lsl	r8, r8, #1
   1c618:	ldr	r3, [r0]
   1c61c:	ldrh	r3, [r3, r8]
   1c620:	tst	r3, #16384	; 0x4000
   1c624:	addne	sl, sl, #1
   1c628:	add	r6, r6, #24
   1c62c:	ldr	r8, [r6, #-20]	; 0xffffffec
   1c630:	cmp	r8, #0
   1c634:	bne	1c5ec <_obstack_memory_used@@Base+0x1fa8>
   1c638:	ldr	r3, [r6, #-24]	; 0xffffffe8
   1c63c:	cmp	r3, #0
   1c640:	bne	1c5ec <_obstack_memory_used@@Base+0x1fa8>
   1c644:	ldr	r3, [r6, #-8]
   1c648:	cmp	r3, #0
   1c64c:	bne	1c5ec <_obstack_memory_used@@Base+0x1fa8>
   1c650:	ldr	r7, [r6, #-4]
   1c654:	cmp	r7, #0
   1c658:	bne	1c5ec <_obstack_memory_used@@Base+0x1fa8>
   1c65c:	rsb	r9, r9, r9, lsl #3
   1c660:	lsl	r0, r9, #2
   1c664:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1c668:	ldr	r6, [sp, #20]
   1c66c:	str	r0, [r6]
   1c670:	add	r0, sl, #1
   1c674:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1c678:	ldr	r8, [r6]
   1c67c:	mov	r3, r6
   1c680:	cmp	r0, #0
   1c684:	cmpne	r8, #0
   1c688:	mov	sl, r0
   1c68c:	str	r0, [r3, #8]
   1c690:	beq	1cbd8 <_obstack_memory_used@@Base+0x2594>
   1c694:	ldr	r2, [sp, #20]
   1c698:	ldr	r3, [pc, #1436]	; 1cc3c <_obstack_memory_used@@Base+0x25f8>
   1c69c:	ldr	r2, [r2, #4]
   1c6a0:	cmp	r2, r3
   1c6a4:	bhi	1cbc4 <_obstack_memory_used@@Base+0x2580>
   1c6a8:	add	r8, r8, #28
   1c6ac:	mov	r2, r8
   1c6b0:	ldr	r3, [r4, #4]
   1c6b4:	mov	r8, sl
   1c6b8:	mov	r9, r2
   1c6bc:	cmp	r3, #0
   1c6c0:	bne	1c6d0 <_obstack_memory_used@@Base+0x208c>
   1c6c4:	ldr	r2, [r4]
   1c6c8:	cmp	r2, #0
   1c6cc:	beq	1cb7c <_obstack_memory_used@@Base+0x2538>
   1c6d0:	str	r7, [r9, #-24]	; 0xffffffe8
   1c6d4:	ldr	r6, [r4, #20]
   1c6d8:	str	r4, [r9, #-28]	; 0xffffffe4
   1c6dc:	cmp	r6, #0
   1c6e0:	str	sl, [r9, #-20]	; 0xffffffec
   1c6e4:	bne	1c6fc <_obstack_memory_used@@Base+0x20b8>
   1c6e8:	ldr	r2, [r4]
   1c6ec:	cmp	r2, #0
   1c6f0:	cmpeq	r3, #0
   1c6f4:	movne	r6, r5
   1c6f8:	beq	1cba0 <_obstack_memory_used@@Base+0x255c>
   1c6fc:	ldr	r1, [sp, #28]
   1c700:	str	r6, [r9, #-16]
   1c704:	mov	r5, r4
   1c708:	ldr	r2, [r4, #12]
   1c70c:	mov	r3, r7
   1c710:	str	r1, [r9, #-12]
   1c714:	ldr	r1, [sp, #24]
   1c718:	str	r1, [r9, #-8]
   1c71c:	add	r3, r3, #1
   1c720:	tst	r2, #8
   1c724:	str	r3, [r9, #-24]	; 0xffffffe8
   1c728:	bne	1c794 <_obstack_memory_used@@Base+0x2150>
   1c72c:	ldr	fp, [r4, #4]
   1c730:	sub	r3, fp, #1
   1c734:	cmp	r3, #254	; 0xfe
   1c738:	bhi	1c794 <_obstack_memory_used@@Base+0x2150>
   1c73c:	bl	11990 <__ctype_b_loc@plt>
   1c740:	lsl	r3, fp, #1
   1c744:	ldr	r2, [r0]
   1c748:	ldrh	r3, [r2, r3]
   1c74c:	tst	r3, #16384	; 0x4000
   1c750:	beq	1c794 <_obstack_memory_used@@Base+0x2150>
   1c754:	cmp	r8, sl
   1c758:	uxtb	r1, fp
   1c75c:	bcs	1c78c <_obstack_memory_used@@Base+0x2148>
   1c760:	ldrb	r3, [r8]
   1c764:	cmp	r3, r1
   1c768:	movne	r3, r8
   1c76c:	subne	r0, sl, #1
   1c770:	bne	1c784 <_obstack_memory_used@@Base+0x2140>
   1c774:	b	1c794 <_obstack_memory_used@@Base+0x2150>
   1c778:	ldrb	r2, [r3, #1]!
   1c77c:	cmp	r2, r1
   1c780:	beq	1c794 <_obstack_memory_used@@Base+0x2150>
   1c784:	cmp	r0, r3
   1c788:	bne	1c778 <_obstack_memory_used@@Base+0x2134>
   1c78c:	strb	r1, [sl]
   1c790:	add	sl, sl, #1
   1c794:	ldr	r3, [r5, #28]
   1c798:	add	r4, r4, #24
   1c79c:	cmp	r3, #0
   1c7a0:	bne	1c7b0 <_obstack_memory_used@@Base+0x216c>
   1c7a4:	ldr	r2, [r5, #24]
   1c7a8:	cmp	r2, #0
   1c7ac:	beq	1cb58 <_obstack_memory_used@@Base+0x2514>
   1c7b0:	ldr	r2, [r5, #36]	; 0x24
   1c7b4:	tst	r2, #4
   1c7b8:	beq	1cb70 <_obstack_memory_used@@Base+0x252c>
   1c7bc:	ldr	r3, [r9, #-24]	; 0xffffffe8
   1c7c0:	mov	r5, r4
   1c7c4:	b	1c71c <_obstack_memory_used@@Base+0x20d8>
   1c7c8:	strb	r3, [sl]
   1c7cc:	ldr	r3, [sp, #8]
   1c7d0:	cmp	r3, #0
   1c7d4:	beq	1c910 <_obstack_memory_used@@Base+0x22cc>
   1c7d8:	ldr	r3, [r3]
   1c7dc:	cmp	r3, #0
   1c7e0:	beq	1c910 <_obstack_memory_used@@Base+0x22cc>
   1c7e4:	ldr	r3, [sp, #20]
   1c7e8:	add	r3, r3, #12
   1c7ec:	str	r3, [sp, #44]	; 0x2c
   1c7f0:	ldr	r3, [sp, #8]
   1c7f4:	ldr	r5, [r3, #12]
   1c7f8:	cmp	r5, #0
   1c7fc:	ldrne	r6, [r3, #8]
   1c800:	bne	1c814 <_obstack_memory_used@@Base+0x21d0>
   1c804:	ldr	r3, [sp, #8]
   1c808:	ldr	r6, [r3, #8]
   1c80c:	cmp	r6, #0
   1c810:	beq	1cb38 <_obstack_memory_used@@Base+0x24f4>
   1c814:	ldr	r7, [sp, #24]
   1c818:	ldr	r2, [sp, #8]
   1c81c:	mov	r0, #28
   1c820:	ldr	r3, [r7, #16]
   1c824:	sub	r3, r2, r3
   1c828:	asr	r4, r3, #4
   1c82c:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1c830:	subs	r1, r0, #0
   1c834:	beq	1c874 <_obstack_memory_used@@Base+0x2230>
   1c838:	ldr	r3, [sp, #28]
   1c83c:	ldr	r0, [sp, #20]
   1c840:	cmp	r3, #0
   1c844:	str	r3, [r1, #12]
   1c848:	ldrne	r3, [r3, #20]
   1c84c:	ldr	r2, [r0, #12]
   1c850:	addne	r3, r3, #1
   1c854:	moveq	r3, #0
   1c858:	str	r5, [r1, #8]
   1c85c:	str	r6, [r1]
   1c860:	str	r4, [r1, #4]
   1c864:	str	r7, [r1, #16]
   1c868:	str	r3, [r1, #20]
   1c86c:	str	r2, [r1, #24]
   1c870:	str	r1, [r0, #12]
   1c874:	ldr	r3, [sp, #8]
   1c878:	ldr	r0, [r3]
   1c87c:	bl	1c580 <_obstack_memory_used@@Base+0x1f3c>
   1c880:	ldr	r3, [sp, #20]
   1c884:	ldr	r2, [r3, #12]
   1c888:	cmp	r2, #0
   1c88c:	str	r0, [sp, #16]
   1c890:	bne	1c89c <_obstack_memory_used@@Base+0x2258>
   1c894:	b	1cb40 <_obstack_memory_used@@Base+0x24fc>
   1c898:	mov	r2, r3
   1c89c:	ldr	r3, [r2, #24]
   1c8a0:	cmp	r3, #0
   1c8a4:	bne	1c898 <_obstack_memory_used@@Base+0x2254>
   1c8a8:	add	r2, r2, #24
   1c8ac:	ldr	r0, [sp, #16]
   1c8b0:	mov	ip, r0
   1c8b4:	ldr	r3, [r0, #4]
   1c8b8:	ldr	r1, [r0, #12]
   1c8bc:	cmp	r3, #0
   1c8c0:	str	r1, [r2]
   1c8c4:	mov	r2, #0
   1c8c8:	str	r2, [r0, #12]
   1c8cc:	beq	1c8f4 <_obstack_memory_used@@Base+0x22b0>
   1c8d0:	ldr	lr, [sp, #20]
   1c8d4:	ldr	r2, [lr, #4]
   1c8d8:	cmp	r2, #0
   1c8dc:	bne	1c91c <_obstack_memory_used@@Base+0x22d8>
   1c8e0:	ldr	r0, [r0]
   1c8e4:	ldr	r1, [ip, #8]
   1c8e8:	stm	lr, {r0, r3}
   1c8ec:	str	r1, [lr, #8]
   1c8f0:	str	r2, [ip, #4]
   1c8f4:	ldr	r0, [sp, #16]
   1c8f8:	bl	1b318 <_obstack_memory_used@@Base+0xcd4>
   1c8fc:	ldr	r2, [sp, #8]
   1c900:	ldr	r3, [r2, #16]!
   1c904:	cmp	r3, #0
   1c908:	str	r2, [sp, #8]
   1c90c:	bne	1c7f0 <_obstack_memory_used@@Base+0x21ac>
   1c910:	ldr	r0, [sp, #20]
   1c914:	add	sp, sp, #52	; 0x34
   1c918:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c91c:	add	r3, r3, r2
   1c920:	str	r3, [sp, #36]	; 0x24
   1c924:	rsb	r0, r3, r3, lsl #3
   1c928:	lsl	r0, r0, #2
   1c92c:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1c930:	ldr	r3, [sp, #20]
   1c934:	mov	r4, r0
   1c938:	str	r0, [sp, #32]
   1c93c:	ldr	r0, [r3, #8]
   1c940:	bl	119c0 <strlen@plt>
   1c944:	ldr	r3, [sp, #16]
   1c948:	mov	r8, r0
   1c94c:	ldr	r0, [r3, #8]
   1c950:	bl	119c0 <strlen@plt>
   1c954:	add	r0, r8, r0
   1c958:	add	r0, r0, #1
   1c95c:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1c960:	cmp	r4, #0
   1c964:	cmpne	r0, #0
   1c968:	mov	r7, r0
   1c96c:	beq	1cbec <_obstack_memory_used@@Base+0x25a8>
   1c970:	ldr	r3, [sp, #36]	; 0x24
   1c974:	ldr	r2, [pc, #704]	; 1cc3c <_obstack_memory_used@@Base+0x25f8>
   1c978:	cmp	r3, r2
   1c97c:	bhi	1cc00 <_obstack_memory_used@@Base+0x25bc>
   1c980:	ldr	r5, [sp, #20]
   1c984:	ldr	r9, [sp, #32]
   1c988:	ldm	r5, {r3, r4}
   1c98c:	mov	r0, r9
   1c990:	rsb	r6, r4, r4, lsl #3
   1c994:	mov	r1, r3
   1c998:	lsl	r6, r6, #2
   1c99c:	mov	r2, r6
   1c9a0:	str	r3, [sp, #40]	; 0x28
   1c9a4:	bl	11984 <mempcpy@plt>
   1c9a8:	ldr	r3, [sp, #16]
   1c9ac:	ldr	r1, [r3, #4]
   1c9b0:	mov	ip, r1
   1c9b4:	str	r1, [sp, #4]
   1c9b8:	rsb	r2, ip, ip, lsl #3
   1c9bc:	ldr	r1, [r3]
   1c9c0:	lsl	r2, r2, #2
   1c9c4:	bl	11810 <memcpy@plt>
   1c9c8:	ldr	r5, [r5, #8]
   1c9cc:	mov	r2, r8
   1c9d0:	mov	r1, r5
   1c9d4:	mov	r0, r7
   1c9d8:	bl	11810 <memcpy@plt>
   1c9dc:	cmp	r4, #0
   1c9e0:	beq	1cb50 <_obstack_memory_used@@Base+0x250c>
   1c9e4:	mov	r2, r9
   1c9e8:	ldr	r3, [r2, #8]
   1c9ec:	subs	r4, r4, #1
   1c9f0:	sub	r3, r3, r5
   1c9f4:	add	r3, r7, r3
   1c9f8:	str	r3, [r2, #8]
   1c9fc:	add	r2, r2, #28
   1ca00:	bne	1c9e8 <_obstack_memory_used@@Base+0x23a4>
   1ca04:	ldr	r3, [sp, #32]
   1ca08:	add	r1, r3, r6
   1ca0c:	ldr	r3, [sp, #4]
   1ca10:	ldr	r2, [sp, #16]
   1ca14:	cmp	r3, #0
   1ca18:	add	r3, r7, r8
   1ca1c:	str	r3, [sp, #12]
   1ca20:	ldr	sl, [r2, #8]
   1ca24:	beq	1cb48 <_obstack_memory_used@@Base+0x2504>
   1ca28:	sub	r8, r3, #1
   1ca2c:	add	fp, r1, #28
   1ca30:	mov	r9, r3
   1ca34:	mov	r3, r8
   1ca38:	mov	r8, fp
   1ca3c:	mov	fp, sl
   1ca40:	mov	sl, r3
   1ca44:	ldr	r5, [r8, #-24]	; 0xffffffe8
   1ca48:	str	r9, [r8, #-20]	; 0xffffffec
   1ca4c:	cmp	r5, #0
   1ca50:	ldr	r4, [r8, #-28]	; 0xffffffe4
   1ca54:	bne	1ca68 <_obstack_memory_used@@Base+0x2424>
   1ca58:	b	1caf4 <_obstack_memory_used@@Base+0x24b0>
   1ca5c:	subs	r5, r5, #1
   1ca60:	add	r4, r4, #24
   1ca64:	beq	1caf4 <_obstack_memory_used@@Base+0x24b0>
   1ca68:	ldr	r3, [r4, #12]
   1ca6c:	tst	r3, #8
   1ca70:	bne	1ca5c <_obstack_memory_used@@Base+0x2418>
   1ca74:	ldr	r6, [r4, #4]
   1ca78:	sub	r3, r6, #1
   1ca7c:	cmp	r3, #254	; 0xfe
   1ca80:	bhi	1ca5c <_obstack_memory_used@@Base+0x2418>
   1ca84:	bl	11990 <__ctype_b_loc@plt>
   1ca88:	lsl	r3, r6, #1
   1ca8c:	ldr	r2, [r0]
   1ca90:	ldrh	r3, [r2, r3]
   1ca94:	tst	r3, #16384	; 0x4000
   1ca98:	beq	1ca5c <_obstack_memory_used@@Base+0x2418>
   1ca9c:	ldrb	r1, [fp]
   1caa0:	cmp	r1, r6
   1caa4:	bne	1ca5c <_obstack_memory_used@@Base+0x2418>
   1caa8:	ldr	r3, [sp, #12]
   1caac:	cmp	r7, r3
   1cab0:	bcs	1cadc <_obstack_memory_used@@Base+0x2498>
   1cab4:	ldrb	r3, [r7]
   1cab8:	cmp	r3, r1
   1cabc:	movne	r3, r7
   1cac0:	bne	1cad4 <_obstack_memory_used@@Base+0x2490>
   1cac4:	b	1cae4 <_obstack_memory_used@@Base+0x24a0>
   1cac8:	ldrb	r2, [r3, #1]!
   1cacc:	cmp	r2, r1
   1cad0:	beq	1cae4 <_obstack_memory_used@@Base+0x24a0>
   1cad4:	cmp	sl, r3
   1cad8:	bne	1cac8 <_obstack_memory_used@@Base+0x2484>
   1cadc:	strb	r1, [r9]
   1cae0:	add	r9, r9, #1
   1cae4:	subs	r5, r5, #1
   1cae8:	add	fp, fp, #1
   1caec:	add	r4, r4, #24
   1caf0:	bne	1ca68 <_obstack_memory_used@@Base+0x2424>
   1caf4:	ldr	r3, [sp, #4]
   1caf8:	add	r8, r8, #28
   1cafc:	subs	r3, r3, #1
   1cb00:	str	r3, [sp, #4]
   1cb04:	bne	1ca44 <_obstack_memory_used@@Base+0x2400>
   1cb08:	mov	r3, #0
   1cb0c:	strb	r3, [r9]
   1cb10:	ldr	r0, [sp, #40]	; 0x28
   1cb14:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1cb18:	ldr	r4, [sp, #20]
   1cb1c:	ldr	r0, [r4, #8]
   1cb20:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1cb24:	ldr	r2, [sp, #32]
   1cb28:	str	r2, [r4]
   1cb2c:	ldr	r2, [sp, #36]	; 0x24
   1cb30:	stmib	r4, {r2, r7}
   1cb34:	b	1c8f4 <_obstack_memory_used@@Base+0x22b0>
   1cb38:	ldr	r1, [sp, #28]
   1cb3c:	b	1c874 <_obstack_memory_used@@Base+0x2230>
   1cb40:	ldr	r2, [sp, #44]	; 0x2c
   1cb44:	b	1c8ac <_obstack_memory_used@@Base+0x2268>
   1cb48:	ldr	r9, [sp, #12]
   1cb4c:	b	1cb08 <_obstack_memory_used@@Base+0x24c4>
   1cb50:	ldr	r1, [sp, #32]
   1cb54:	b	1ca0c <_obstack_memory_used@@Base+0x23c8>
   1cb58:	ldr	r2, [r5, #40]	; 0x28
   1cb5c:	cmp	r2, #0
   1cb60:	bne	1c7b0 <_obstack_memory_used@@Base+0x216c>
   1cb64:	ldr	r2, [r5, #44]	; 0x2c
   1cb68:	cmp	r2, #0
   1cb6c:	bne	1c7b0 <_obstack_memory_used@@Base+0x216c>
   1cb70:	add	r9, r9, #28
   1cb74:	mov	r5, r6
   1cb78:	b	1c6bc <_obstack_memory_used@@Base+0x2078>
   1cb7c:	ldr	r2, [r4, #16]
   1cb80:	cmp	r2, #0
   1cb84:	beq	1cba8 <_obstack_memory_used@@Base+0x2564>
   1cb88:	str	r3, [r9, #-24]	; 0xffffffe8
   1cb8c:	ldr	r6, [r4, #20]
   1cb90:	str	r4, [r9, #-28]	; 0xffffffe4
   1cb94:	cmp	r6, #0
   1cb98:	str	sl, [r9, #-20]	; 0xffffffec
   1cb9c:	bne	1c6fc <_obstack_memory_used@@Base+0x20b8>
   1cba0:	add	r6, r5, #1
   1cba4:	b	1c6fc <_obstack_memory_used@@Base+0x20b8>
   1cba8:	ldr	r6, [r4, #20]
   1cbac:	cmp	r6, #0
   1cbb0:	beq	1c7c8 <_obstack_memory_used@@Base+0x2184>
   1cbb4:	str	r4, [r9, #-28]	; 0xffffffe4
   1cbb8:	str	r3, [r9, #-24]	; 0xffffffe8
   1cbbc:	str	sl, [r9, #-20]	; 0xffffffec
   1cbc0:	b	1c6fc <_obstack_memory_used@@Base+0x20b8>
   1cbc4:	ldr	r3, [pc, #116]	; 1cc40 <_obstack_memory_used@@Base+0x25fc>
   1cbc8:	mov	r2, #476	; 0x1dc
   1cbcc:	ldr	r1, [pc, #112]	; 1cc44 <_obstack_memory_used@@Base+0x2600>
   1cbd0:	ldr	r0, [pc, #112]	; 1cc48 <_obstack_memory_used@@Base+0x2604>
   1cbd4:	bl	11bdc <__assert_fail@plt>
   1cbd8:	ldr	r3, [pc, #96]	; 1cc40 <_obstack_memory_used@@Base+0x25fc>
   1cbdc:	ldr	r2, [pc, #104]	; 1cc4c <_obstack_memory_used@@Base+0x2608>
   1cbe0:	ldr	r1, [pc, #92]	; 1cc44 <_obstack_memory_used@@Base+0x2600>
   1cbe4:	ldr	r0, [pc, #100]	; 1cc50 <_obstack_memory_used@@Base+0x260c>
   1cbe8:	bl	11bdc <__assert_fail@plt>
   1cbec:	ldr	r3, [pc, #96]	; 1cc54 <_obstack_memory_used@@Base+0x2610>
   1cbf0:	ldr	r2, [pc, #96]	; 1cc58 <_obstack_memory_used@@Base+0x2614>
   1cbf4:	ldr	r1, [pc, #72]	; 1cc44 <_obstack_memory_used@@Base+0x2600>
   1cbf8:	ldr	r0, [pc, #92]	; 1cc5c <_obstack_memory_used@@Base+0x2618>
   1cbfc:	bl	11bdc <__assert_fail@plt>
   1cc00:	ldr	r3, [pc, #76]	; 1cc54 <_obstack_memory_used@@Base+0x2610>
   1cc04:	mov	r2, #972	; 0x3cc
   1cc08:	ldr	r1, [pc, #52]	; 1cc44 <_obstack_memory_used@@Base+0x2600>
   1cc0c:	ldr	r0, [pc, #76]	; 1cc60 <_obstack_memory_used@@Base+0x261c>
   1cc10:	bl	11bdc <__assert_fail@plt>
   1cc14:	ldr	r3, [pc, #36]	; 1cc40 <_obstack_memory_used@@Base+0x25fc>
   1cc18:	ldr	r2, [pc, #68]	; 1cc64 <_obstack_memory_used@@Base+0x2620>
   1cc1c:	ldr	r1, [pc, #32]	; 1cc44 <_obstack_memory_used@@Base+0x2600>
   1cc20:	ldr	r0, [pc, #64]	; 1cc68 <_obstack_memory_used@@Base+0x2624>
   1cc24:	bl	11bdc <__assert_fail@plt>
   1cc28:	ldr	r3, [pc, #16]	; 1cc40 <_obstack_memory_used@@Base+0x25fc>
   1cc2c:	mov	r2, #460	; 0x1cc
   1cc30:	ldr	r1, [pc, #12]	; 1cc44 <_obstack_memory_used@@Base+0x2600>
   1cc34:	ldr	r0, [pc, #48]	; 1cc6c <_obstack_memory_used@@Base+0x2628>
   1cc38:	bl	11bdc <__assert_fail@plt>
   1cc3c:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   1cc40:	andeq	r1, r2, r0, lsl r0
   1cc44:	ldrdeq	r1, [r2], -r4
   1cc48:	andeq	r1, r2, r8, lsl r1
   1cc4c:	ldrdeq	r0, [r0], -sl
   1cc50:	strdeq	r1, [r2], -r4
   1cc54:	andeq	r1, r2, ip, lsl r0
   1cc58:	andeq	r0, r0, sl, asr #7
   1cc5c:	andeq	r1, r2, r4, asr r1
   1cc60:	andeq	r1, r2, r0, ror r1
   1cc64:	andeq	r0, r0, r2, asr #3
   1cc68:	andeq	r1, r2, r0, ror #1
   1cc6c:	andeq	r1, r2, r4, ror #1
   1cc70:	cmp	r1, #0
   1cc74:	push	{r4, r5, r6, r7, r8, lr}
   1cc78:	beq	1ccf0 <_obstack_memory_used@@Base+0x26ac>
   1cc7c:	sub	r7, r1, #1
   1cc80:	mov	r8, r2
   1cc84:	mov	r6, r0
   1cc88:	ldm	r6, {r4, r5}
   1cc8c:	cmp	r5, #0
   1cc90:	sub	r5, r5, #1
   1cc94:	beq	1ccd4 <_obstack_memory_used@@Base+0x2690>
   1cc98:	add	r4, r4, #24
   1cc9c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1cca0:	mov	r1, r8
   1cca4:	subs	r0, r3, #0
   1cca8:	sub	r5, r5, #1
   1ccac:	beq	1ccc8 <_obstack_memory_used@@Base+0x2684>
   1ccb0:	ldr	r3, [r4, #-12]
   1ccb4:	tst	r3, #2
   1ccb8:	bne	1ccc8 <_obstack_memory_used@@Base+0x2684>
   1ccbc:	bl	1178c <strcmp@plt>
   1ccc0:	cmp	r0, #0
   1ccc4:	beq	1cce8 <_obstack_memory_used@@Base+0x26a4>
   1ccc8:	cmn	r5, #1
   1cccc:	add	r4, r4, #24
   1ccd0:	bne	1cc9c <_obstack_memory_used@@Base+0x2658>
   1ccd4:	sub	r7, r7, #1
   1ccd8:	cmn	r7, #1
   1ccdc:	add	r6, r6, #28
   1cce0:	bne	1cc88 <_obstack_memory_used@@Base+0x2644>
   1cce4:	mov	r6, #0
   1cce8:	mov	r0, r6
   1ccec:	pop	{r4, r5, r6, r7, r8, pc}
   1ccf0:	mov	r6, r1
   1ccf4:	b	1cce8 <_obstack_memory_used@@Base+0x26a4>
   1ccf8:	push	{r4, r5, r6, lr}
   1ccfc:	subs	r4, r0, #0
   1cd00:	mov	r5, r1
   1cd04:	beq	1cd18 <_obstack_memory_used@@Base+0x26d4>
   1cd08:	mov	r1, #10
   1cd0c:	bl	119cc <strchr@plt>
   1cd10:	adds	r4, r0, #0
   1cd14:	movne	r4, #1
   1cd18:	cmp	r5, #0
   1cd1c:	beq	1cd48 <_obstack_memory_used@@Base+0x2704>
   1cd20:	ldr	r3, [r5]
   1cd24:	cmp	r3, #0
   1cd28:	beq	1cd48 <_obstack_memory_used@@Base+0x2704>
   1cd2c:	ldr	r1, [r3, #16]
   1cd30:	ldr	r0, [r3, #8]
   1cd34:	bl	1ccf8 <_obstack_memory_used@@Base+0x26b4>
   1cd38:	ldr	r3, [r5, #16]!
   1cd3c:	cmp	r3, #0
   1cd40:	add	r4, r4, r0
   1cd44:	bne	1cd2c <_obstack_memory_used@@Base+0x26e8>
   1cd48:	mov	r0, r4
   1cd4c:	pop	{r4, r5, r6, pc}
   1cd50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cd54:	add	fp, sp, #32
   1cd58:	sub	sp, sp, #12
   1cd5c:	ldr	r5, [r0, #4]
   1cd60:	cmp	r5, #0
   1cd64:	bne	1cd70 <_obstack_memory_used@@Base+0x272c>
   1cd68:	sub	sp, fp, #32
   1cd6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd70:	mov	r6, r0
   1cd74:	ldr	r0, [r0, #8]
   1cd78:	mov	r9, r1
   1cd7c:	bl	119c0 <strlen@plt>
   1cd80:	ldr	r8, [pc, #360]	; 1cef0 <_obstack_memory_used@@Base+0x28ac>
   1cd84:	ldr	r4, [r6]
   1cd88:	sub	r7, fp, #36	; 0x24
   1cd8c:	add	r3, r0, #15
   1cd90:	bic	r3, r3, #7
   1cd94:	sub	sp, sp, r3
   1cd98:	mov	sl, sp
   1cd9c:	str	sp, [r7, #-4]!
   1cda0:	ldr	r2, [r4, #20]
   1cda4:	mov	r0, r4
   1cda8:	mov	r3, r7
   1cdac:	mov	r1, r8
   1cdb0:	ldr	r2, [r2, #24]
   1cdb4:	bl	1b164 <_obstack_memory_used@@Base+0xb20>
   1cdb8:	subs	r5, r5, #1
   1cdbc:	add	r4, r4, #28
   1cdc0:	bne	1cda0 <_obstack_memory_used@@Base+0x275c>
   1cdc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cdc8:	cmp	sl, r3
   1cdcc:	bcc	1ced0 <_obstack_memory_used@@Base+0x288c>
   1cdd0:	ldm	r6, {r4, r5}
   1cdd4:	cmp	r5, #0
   1cdd8:	beq	1cd68 <_obstack_memory_used@@Base+0x2724>
   1cddc:	ldr	r7, [pc, #272]	; 1cef4 <_obstack_memory_used@@Base+0x28b0>
   1cde0:	ldr	r2, [r4, #20]
   1cde4:	mov	r0, r4
   1cde8:	mov	r3, r9
   1cdec:	mov	r1, r7
   1cdf0:	ldr	r2, [r2, #24]
   1cdf4:	bl	1b164 <_obstack_memory_used@@Base+0xb20>
   1cdf8:	subs	r5, r5, #1
   1cdfc:	add	r4, r4, #28
   1ce00:	bne	1cde0 <_obstack_memory_used@@Base+0x279c>
   1ce04:	ldm	r6, {r7, r8}
   1ce08:	cmp	r8, #0
   1ce0c:	beq	1cd68 <_obstack_memory_used@@Base+0x2724>
   1ce10:	ldr	sl, [pc, #224]	; 1cef8 <_obstack_memory_used@@Base+0x28b4>
   1ce14:	add	r7, r7, #28
   1ce18:	ldr	r5, [r7, #-24]	; 0xffffffe8
   1ce1c:	ldr	r4, [r7, #-28]	; 0xffffffe4
   1ce20:	cmp	r5, #0
   1ce24:	movne	r6, r4
   1ce28:	bne	1ce3c <_obstack_memory_used@@Base+0x27f8>
   1ce2c:	b	1ce98 <_obstack_memory_used@@Base+0x2854>
   1ce30:	subs	r5, r5, #1
   1ce34:	add	r4, r4, #24
   1ce38:	beq	1ce98 <_obstack_memory_used@@Base+0x2854>
   1ce3c:	ldr	r2, [r4]
   1ce40:	cmp	r2, #0
   1ce44:	beq	1ce30 <_obstack_memory_used@@Base+0x27ec>
   1ce48:	ldr	r1, [r4, #12]
   1ce4c:	tst	r1, #4
   1ce50:	moveq	r6, r4
   1ce54:	tst	r1, #2
   1ce58:	bne	1ce30 <_obstack_memory_used@@Base+0x27ec>
   1ce5c:	ldr	r3, [r4, #8]
   1ce60:	ldr	r0, [r6, #12]
   1ce64:	cmp	r3, #0
   1ce68:	orr	r1, r1, r0
   1ce6c:	beq	1ceac <_obstack_memory_used@@Base+0x2868>
   1ce70:	tst	r1, #16
   1ce74:	bne	1ce30 <_obstack_memory_used@@Base+0x27ec>
   1ce78:	tst	r1, #1
   1ce7c:	moveq	r1, sl
   1ce80:	ldrne	r1, [pc, #116]	; 1cefc <_obstack_memory_used@@Base+0x28b8>
   1ce84:	mov	r0, r9
   1ce88:	bl	1f810 <argp_error@@Base+0x14b0>
   1ce8c:	subs	r5, r5, #1
   1ce90:	add	r4, r4, #24
   1ce94:	bne	1ce3c <_obstack_memory_used@@Base+0x27f8>
   1ce98:	subs	r8, r8, #1
   1ce9c:	add	r7, r7, #28
   1cea0:	bne	1ce18 <_obstack_memory_used@@Base+0x27d4>
   1cea4:	sub	sp, fp, #32
   1cea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ceac:	tst	r1, #16
   1ceb0:	bne	1ce30 <_obstack_memory_used@@Base+0x27ec>
   1ceb4:	ldr	r3, [r6, #8]
   1ceb8:	cmp	r3, #0
   1cebc:	bne	1ce78 <_obstack_memory_used@@Base+0x2834>
   1cec0:	ldr	r1, [pc, #56]	; 1cf00 <_obstack_memory_used@@Base+0x28bc>
   1cec4:	mov	r0, r9
   1cec8:	bl	1f810 <argp_error@@Base+0x14b0>
   1cecc:	b	1ce30 <_obstack_memory_used@@Base+0x27ec>
   1ced0:	add	r1, r3, #1
   1ced4:	str	r1, [fp, #-40]	; 0xffffffd8
   1ced8:	mov	r2, sl
   1cedc:	ldr	r1, [pc, #32]	; 1cf04 <_obstack_memory_used@@Base+0x28c0>
   1cee0:	strb	r5, [r3]
   1cee4:	mov	r0, r9
   1cee8:	bl	1f810 <argp_error@@Base+0x14b0>
   1ceec:	b	1cdd0 <_obstack_memory_used@@Base+0x278c>
   1cef0:	andeq	ip, r1, r8, lsr r5
   1cef4:	muleq	r1, r4, r2
   1cef8:			; <UNDEFINED> instruction: 0x000211bc
   1cefc:	andeq	r1, r2, ip, lsr #3
   1cf00:	andeq	r1, r2, r8, asr #3
   1cf04:	andeq	r1, r2, r4, lsr #3

0001cf08 <argp_failure@@Base>:
   1cf08:	push	{r3}		; (str r3, [sp, #-4]!)
   1cf0c:	push	{r4, r5, r6, r7, lr}
   1cf10:	subs	r5, r0, #0
   1cf14:	sub	sp, sp, #200	; 0xc8
   1cf18:	mov	r7, r1
   1cf1c:	mov	r6, r2
   1cf20:	beq	1d070 <argp_failure@@Base+0x168>
   1cf24:	ldr	r3, [r5, #16]
   1cf28:	tst	r3, #2
   1cf2c:	bne	1d060 <argp_failure@@Base+0x158>
   1cf30:	ldr	r4, [r5, #44]	; 0x2c
   1cf34:	cmp	r4, #0
   1cf38:	beq	1d060 <argp_failure@@Base+0x158>
   1cf3c:	mov	r0, r4
   1cf40:	bl	11b1c <flockfile@plt>
   1cf44:	ldr	r0, [r5, #40]	; 0x28
   1cf48:	mov	r1, r4
   1cf4c:	bl	11774 <fputs_unlocked@plt>
   1cf50:	ldr	r3, [sp, #220]	; 0xdc
   1cf54:	cmp	r3, #0
   1cf58:	beq	1cfb4 <argp_failure@@Base+0xac>
   1cf5c:	ldr	r3, [r4, #20]
   1cf60:	ldr	r1, [r4, #24]
   1cf64:	add	r2, sp, #224	; 0xe0
   1cf68:	cmp	r3, r1
   1cf6c:	str	r2, [sp]
   1cf70:	addcc	r1, r3, #1
   1cf74:	movcc	r2, #58	; 0x3a
   1cf78:	strcc	r1, [r4, #20]
   1cf7c:	strbcc	r2, [r3]
   1cf80:	bcs	1d0bc <argp_failure@@Base+0x1b4>
   1cf84:	ldr	r3, [r4, #20]
   1cf88:	ldr	r2, [r4, #24]
   1cf8c:	cmp	r3, r2
   1cf90:	addcc	r1, r3, #1
   1cf94:	movcc	r2, #32
   1cf98:	strcc	r1, [r4, #20]
   1cf9c:	strbcc	r2, [r3]
   1cfa0:	bcs	1d0ac <argp_failure@@Base+0x1a4>
   1cfa4:	ldr	r2, [sp]
   1cfa8:	ldr	r1, [sp, #220]	; 0xdc
   1cfac:	mov	r0, r4
   1cfb0:	bl	11ad4 <vfprintf@plt>
   1cfb4:	cmp	r6, #0
   1cfb8:	beq	1d01c <argp_failure@@Base+0x114>
   1cfbc:	ldr	r3, [r4, #20]
   1cfc0:	ldr	r2, [r4, #24]
   1cfc4:	cmp	r3, r2
   1cfc8:	addcc	r1, r3, #1
   1cfcc:	movcc	r2, #58	; 0x3a
   1cfd0:	strcc	r1, [r4, #20]
   1cfd4:	strbcc	r2, [r3]
   1cfd8:	bcs	1d0dc <argp_failure@@Base+0x1d4>
   1cfdc:	ldr	r3, [r4, #20]
   1cfe0:	ldr	r2, [r4, #24]
   1cfe4:	cmp	r3, r2
   1cfe8:	addcc	r1, r3, #1
   1cfec:	movcc	r2, #32
   1cff0:	strcc	r1, [r4, #20]
   1cff4:	strbcc	r2, [r3]
   1cff8:	bcs	1d0cc <argp_failure@@Base+0x1c4>
   1cffc:	mov	r2, #200	; 0xc8
   1d000:	mov	r1, sp
   1d004:	mov	r0, r6
   1d008:	bl	11a2c <strerror_r@plt>
   1d00c:	cmp	r0, #0
   1d010:	beq	1d0ec <argp_failure@@Base+0x1e4>
   1d014:	mov	r1, r4
   1d018:	bl	11774 <fputs_unlocked@plt>
   1d01c:	ldr	r3, [r4, #20]
   1d020:	ldr	r2, [r4, #24]
   1d024:	cmp	r3, r2
   1d028:	addcc	r1, r3, #1
   1d02c:	movcc	r2, #10
   1d030:	strcc	r1, [r4, #20]
   1d034:	strbcc	r2, [r3]
   1d038:	bcs	1d094 <argp_failure@@Base+0x18c>
   1d03c:	mov	r0, r4
   1d040:	bl	118a0 <funlockfile@plt>
   1d044:	cmp	r7, #0
   1d048:	beq	1d060 <argp_failure@@Base+0x158>
   1d04c:	cmp	r5, #0
   1d050:	beq	1d0a4 <argp_failure@@Base+0x19c>
   1d054:	ldr	r3, [r5, #16]
   1d058:	tst	r3, #32
   1d05c:	beq	1d0a4 <argp_failure@@Base+0x19c>
   1d060:	add	sp, sp, #200	; 0xc8
   1d064:	pop	{r4, r5, r6, r7, lr}
   1d068:	add	sp, sp, #4
   1d06c:	bx	lr
   1d070:	ldr	r3, [pc, #140]	; 1d104 <argp_failure@@Base+0x1fc>
   1d074:	ldr	r4, [r3]
   1d078:	cmp	r4, #0
   1d07c:	beq	1d060 <argp_failure@@Base+0x158>
   1d080:	mov	r0, r4
   1d084:	bl	11b1c <flockfile@plt>
   1d088:	ldr	r3, [pc, #120]	; 1d108 <argp_failure@@Base+0x200>
   1d08c:	ldr	r0, [r3]
   1d090:	b	1cf48 <argp_failure@@Base+0x40>
   1d094:	mov	r1, #10
   1d098:	mov	r0, r4
   1d09c:	bl	11aa4 <__overflow@plt>
   1d0a0:	b	1d03c <argp_failure@@Base+0x134>
   1d0a4:	mov	r0, r7
   1d0a8:	bl	119a8 <exit@plt>
   1d0ac:	mov	r1, #32
   1d0b0:	mov	r0, r4
   1d0b4:	bl	11aa4 <__overflow@plt>
   1d0b8:	b	1cfa4 <argp_failure@@Base+0x9c>
   1d0bc:	mov	r1, #58	; 0x3a
   1d0c0:	mov	r0, r4
   1d0c4:	bl	11aa4 <__overflow@plt>
   1d0c8:	b	1cf84 <argp_failure@@Base+0x7c>
   1d0cc:	mov	r1, #32
   1d0d0:	mov	r0, r4
   1d0d4:	bl	11aa4 <__overflow@plt>
   1d0d8:	b	1cffc <argp_failure@@Base+0xf4>
   1d0dc:	mov	r1, #58	; 0x3a
   1d0e0:	mov	r0, r4
   1d0e4:	bl	11aa4 <__overflow@plt>
   1d0e8:	b	1cfdc <argp_failure@@Base+0xd4>
   1d0ec:	mov	r0, r6
   1d0f0:	bl	11948 <strerror@plt>
   1d0f4:	ldr	r3, [pc, #16]	; 1d10c <argp_failure@@Base+0x204>
   1d0f8:	cmp	r0, #0
   1d0fc:	moveq	r0, r3
   1d100:	b	1d014 <argp_failure@@Base+0x10c>
   1d104:	andeq	r2, r3, r0, lsl r5
   1d108:	andeq	r2, r3, r0, lsl #10
   1d10c:	ldrdeq	r1, [r2], -r0
   1d110:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d114:	add	fp, sp, #32
   1d118:	cmp	r2, #0
   1d11c:	sub	sp, sp, #116	; 0x74
   1d120:	str	r2, [fp, #-132]	; 0xffffff7c
   1d124:	str	r0, [fp, #-112]	; 0xffffff90
   1d128:	str	r1, [fp, #-104]	; 0xffffff98
   1d12c:	str	r3, [fp, #-96]	; 0xffffffa0
   1d130:	beq	1d1e8 <argp_failure@@Base+0x2e0>
   1d134:	ldr	sl, [pc, #4064]	; 1e11c <argp_failure@@Base+0x1214>
   1d138:	mov	r0, r2
   1d13c:	bl	11b1c <flockfile@plt>
   1d140:	ldr	r3, [sl, #36]	; 0x24
   1d144:	cmp	r3, #0
   1d148:	str	r3, [fp, #-108]	; 0xffffff94
   1d14c:	beq	1d698 <argp_failure@@Base+0x790>
   1d150:	mov	r3, #0
   1d154:	mov	r1, r3
   1d158:	ldr	r2, [sl, #32]
   1d15c:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1d160:	bl	1f0e4 <argp_error@@Base+0xd84>
   1d164:	subs	r9, r0, #0
   1d168:	beq	1e1dc <argp_failure@@Base+0x12d4>
   1d16c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d170:	ands	r3, r3, #11
   1d174:	streq	r3, [fp, #-136]	; 0xffffff78
   1d178:	bne	1daf4 <argp_failure@@Base+0xbec>
   1d17c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d180:	ands	r4, r3, #3
   1d184:	bne	1d8e8 <argp_failure@@Base+0x9e0>
   1d188:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d18c:	tst	r3, #16
   1d190:	bne	1d8c4 <argp_failure@@Base+0x9bc>
   1d194:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d198:	tst	r3, #4
   1d19c:	bne	1d8a8 <argp_failure@@Base+0x9a0>
   1d1a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d1a4:	tst	r3, #8
   1d1a8:	bne	1d23c <argp_failure@@Base+0x334>
   1d1ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d1b0:	tst	r3, #32
   1d1b4:	bne	1d670 <argp_failure@@Base+0x768>
   1d1b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d1bc:	tst	r3, #64	; 0x40
   1d1c0:	bne	1d1f0 <argp_failure@@Base+0x2e8>
   1d1c4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1d1c8:	bl	118a0 <funlockfile@plt>
   1d1cc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d1d0:	cmp	r3, #0
   1d1d4:	beq	1d1e0 <argp_failure@@Base+0x2d8>
   1d1d8:	mov	r0, r3
   1d1dc:	bl	1b318 <_obstack_memory_used@@Base+0xcd4>
   1d1e0:	mov	r0, r9
   1d1e4:	bl	1f6d0 <argp_error@@Base+0x1370>
   1d1e8:	sub	sp, fp, #32
   1d1ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d1f0:	ldr	r5, [pc, #3880]	; 1e120 <argp_failure@@Base+0x1218>
   1d1f4:	ldr	r2, [r5]
   1d1f8:	cmp	r2, #0
   1d1fc:	beq	1d1c4 <argp_failure@@Base+0x2bc>
   1d200:	cmp	r4, #0
   1d204:	beq	1d22c <argp_failure@@Base+0x324>
   1d208:	ldr	r3, [r9, #28]
   1d20c:	ldr	r2, [r9, #32]
   1d210:	cmp	r3, r2
   1d214:	bcs	1e1c0 <argp_failure@@Base+0x12b8>
   1d218:	add	r1, r3, #1
   1d21c:	mov	r2, #10
   1d220:	str	r1, [r9, #28]
   1d224:	strb	r2, [r3]
   1d228:	ldr	r2, [r5]
   1d22c:	ldr	r1, [pc, #3824]	; 1e124 <argp_failure@@Base+0x121c>
   1d230:	mov	r0, r9
   1d234:	bl	1f810 <argp_error@@Base+0x14b0>
   1d238:	b	1d1c4 <argp_failure@@Base+0x2bc>
   1d23c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d240:	ldr	r3, [r3, #4]
   1d244:	cmp	r3, #0
   1d248:	str	r3, [fp, #-108]	; 0xffffff94
   1d24c:	beq	1d1ac <argp_failure@@Base+0x2a4>
   1d250:	cmp	r4, #0
   1d254:	beq	1e070 <argp_failure@@Base+0x1168>
   1d258:	ldr	r3, [r9, #28]
   1d25c:	ldr	r2, [r9, #32]
   1d260:	cmp	r3, r2
   1d264:	bcs	1e214 <argp_failure@@Base+0x130c>
   1d268:	add	r1, r3, #1
   1d26c:	mov	r2, #10
   1d270:	str	r1, [r9, #28]
   1d274:	strb	r2, [r3]
   1d278:	ldr	r3, [fp, #-136]	; 0xffffff78
   1d27c:	ldr	r2, [fp, #-136]	; 0xffffff78
   1d280:	ldr	r3, [r3, #4]
   1d284:	ldr	r8, [r2]
   1d288:	str	r3, [fp, #-108]	; 0xffffff94
   1d28c:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d290:	cmp	r3, #0
   1d294:	mov	r3, #0
   1d298:	str	r3, [fp, #-88]	; 0xffffffa8
   1d29c:	str	r3, [fp, #-84]	; 0xffffffac
   1d2a0:	str	r3, [fp, #-80]	; 0xffffffb0
   1d2a4:	beq	1d660 <argp_failure@@Base+0x758>
   1d2a8:	str	sl, [fp, #-100]	; 0xffffff9c
   1d2ac:	ldr	lr, [r9, #28]
   1d2b0:	ldr	r3, [r9, #24]
   1d2b4:	ldr	r5, [r9, #16]
   1d2b8:	sub	lr, lr, r3
   1d2bc:	cmp	lr, r5
   1d2c0:	ldr	r6, [r8]
   1d2c4:	ldr	sl, [r8, #8]
   1d2c8:	bhi	1ddc8 <argp_failure@@Base+0xec0>
   1d2cc:	ldr	r1, [r9, #4]
   1d2d0:	ldr	r7, [r6, #12]
   1d2d4:	str	r1, [fp, #-116]	; 0xffffff8c
   1d2d8:	ldr	r1, [r9, #12]
   1d2dc:	mov	r3, #0
   1d2e0:	str	r1, [fp, #-120]	; 0xffffff88
   1d2e4:	sub	r1, fp, #88	; 0x58
   1d2e8:	str	r3, [r9, #4]
   1d2ec:	and	r2, r7, #8
   1d2f0:	str	r1, [fp, #-68]	; 0xffffffbc
   1d2f4:	ldr	r1, [fp, #-104]	; 0xffffff98
   1d2f8:	mov	r0, #1
   1d2fc:	cmp	r2, r3
   1d300:	mov	r4, r2
   1d304:	str	r0, [fp, #-64]	; 0xffffffc0
   1d308:	str	r8, [fp, #-76]	; 0xffffffb4
   1d30c:	str	r9, [fp, #-72]	; 0xffffffb8
   1d310:	str	r1, [fp, #-60]	; 0xffffffc4
   1d314:	bne	1dc54 <argp_failure@@Base+0xd4c>
   1d318:	ldr	ip, [r8, #4]
   1d31c:	cmp	ip, r3
   1d320:	beq	1d34c <argp_failure@@Base+0x444>
   1d324:	add	r0, r6, #24
   1d328:	ldr	r3, [r0, #-24]	; 0xffffffe8
   1d32c:	cmp	r3, #0
   1d330:	beq	1d340 <argp_failure@@Base+0x438>
   1d334:	ldr	r3, [r0, #-12]
   1d338:	tst	r3, #2
   1d33c:	beq	1dc50 <argp_failure@@Base+0xd48>
   1d340:	subs	ip, ip, #1
   1d344:	add	r0, r0, #24
   1d348:	bne	1d328 <argp_failure@@Base+0x420>
   1d34c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1d350:	cmp	lr, r5
   1d354:	str	r2, [fp, #-128]	; 0xffffff80
   1d358:	ldr	r5, [r3, #8]
   1d35c:	bhi	1dc68 <argp_failure@@Base+0xd60>
   1d360:	str	r5, [r9, #12]
   1d364:	ldr	r5, [r8, #4]
   1d368:	cmp	r5, #0
   1d36c:	beq	1d3f0 <argp_failure@@Base+0x4e8>
   1d370:	mov	r4, r6
   1d374:	str	r8, [fp, #-124]	; 0xffffff84
   1d378:	b	1d390 <argp_failure@@Base+0x488>
   1d37c:	subs	r5, r5, #1
   1d380:	add	r4, r4, #24
   1d384:	beq	1d3e4 <argp_failure@@Base+0x4dc>
   1d388:	ldr	r7, [r4, #12]
   1d38c:	and	r2, r7, #8
   1d390:	cmp	r2, #0
   1d394:	bne	1d37c <argp_failure@@Base+0x474>
   1d398:	ldr	r8, [r4, #4]
   1d39c:	sub	r2, r8, #1
   1d3a0:	cmp	r2, #254	; 0xfe
   1d3a4:	bhi	1d37c <argp_failure@@Base+0x474>
   1d3a8:	bl	11990 <__ctype_b_loc@plt>
   1d3ac:	lsl	r2, r8, #1
   1d3b0:	ldr	r1, [r0]
   1d3b4:	ldrh	r2, [r1, r2]
   1d3b8:	tst	r2, #16384	; 0x4000
   1d3bc:	beq	1d37c <argp_failure@@Base+0x474>
   1d3c0:	ldrb	r2, [sl]
   1d3c4:	cmp	r8, r2
   1d3c8:	bne	1d37c <argp_failure@@Base+0x474>
   1d3cc:	tst	r7, #2
   1d3d0:	beq	1dd14 <argp_failure@@Base+0xe0c>
   1d3d4:	subs	r5, r5, #1
   1d3d8:	add	sl, sl, #1
   1d3dc:	add	r4, r4, #24
   1d3e0:	bne	1d388 <argp_failure@@Base+0x480>
   1d3e4:	ldr	r4, [r6, #12]
   1d3e8:	ldr	r8, [fp, #-124]	; 0xffffff84
   1d3ec:	and	r4, r4, #8
   1d3f0:	ldr	r3, [r9, #28]
   1d3f4:	ldr	r1, [r9, #24]
   1d3f8:	cmp	r4, #0
   1d3fc:	ldr	r2, [r9, #16]
   1d400:	sub	r3, r3, r1
   1d404:	beq	1dc80 <argp_failure@@Base+0xd78>
   1d408:	cmp	r3, r2
   1d40c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1d410:	ldr	r4, [r3, #16]
   1d414:	bhi	1df48 <argp_failure@@Base+0x1040>
   1d418:	str	r4, [r9, #12]
   1d41c:	ldr	r5, [r8, #4]
   1d420:	cmp	r5, #0
   1d424:	addne	r4, r6, #24
   1d428:	bne	1d43c <argp_failure@@Base+0x534>
   1d42c:	b	1d4cc <argp_failure@@Base+0x5c4>
   1d430:	subs	r5, r5, #1
   1d434:	add	r4, r4, #24
   1d438:	beq	1d4cc <argp_failure@@Base+0x5c4>
   1d43c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1d440:	cmp	r3, #0
   1d444:	beq	1d430 <argp_failure@@Base+0x528>
   1d448:	ldr	r3, [r4, #-12]
   1d44c:	tst	r3, #2
   1d450:	bne	1d430 <argp_failure@@Base+0x528>
   1d454:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1d458:	sub	r1, fp, #76	; 0x4c
   1d45c:	ldr	r0, [r3, #16]
   1d460:	bl	1b648 <_obstack_memory_used@@Base+0x1004>
   1d464:	ldr	sl, [r4, #-24]	; 0xffffffe8
   1d468:	mov	r0, sl
   1d46c:	bl	119c0 <strlen@plt>
   1d470:	subs	r7, r0, #0
   1d474:	beq	1d430 <argp_failure@@Base+0x528>
   1d478:	ldr	r2, [r9, #28]
   1d47c:	ldr	lr, [r9, #32]
   1d480:	add	ip, r2, r7
   1d484:	cmp	lr, ip
   1d488:	mov	r1, r7
   1d48c:	mov	r0, r9
   1d490:	bcs	1d4a4 <argp_failure@@Base+0x59c>
   1d494:	bl	1f7f0 <argp_error@@Base+0x1490>
   1d498:	cmp	r0, #0
   1d49c:	beq	1d430 <argp_failure@@Base+0x528>
   1d4a0:	ldr	r2, [r9, #28]
   1d4a4:	mov	r0, r2
   1d4a8:	mov	r1, sl
   1d4ac:	mov	r2, r7
   1d4b0:	bl	11810 <memcpy@plt>
   1d4b4:	ldr	r2, [r9, #28]
   1d4b8:	subs	r5, r5, #1
   1d4bc:	add	r3, r2, r7
   1d4c0:	str	r3, [r9, #28]
   1d4c4:	add	r4, r4, #24
   1d4c8:	bne	1d43c <argp_failure@@Base+0x534>
   1d4cc:	ldr	r3, [r9, #28]
   1d4d0:	ldr	r1, [r9, #24]
   1d4d4:	ldr	r2, [r9, #16]
   1d4d8:	sub	r3, r3, r1
   1d4dc:	cmp	r3, r2
   1d4e0:	bhi	1defc <argp_failure@@Base+0xff4>
   1d4e4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1d4e8:	mov	r3, #0
   1d4ec:	cmp	r2, r3
   1d4f0:	str	r3, [r9, #4]
   1d4f4:	beq	1dde4 <argp_failure@@Base+0xedc>
   1d4f8:	ldr	r3, [r6, #12]
   1d4fc:	tst	r3, #8
   1d500:	bne	1d52c <argp_failure@@Base+0x624>
   1d504:	ldr	r4, [r6, #4]
   1d508:	sub	r3, r4, #1
   1d50c:	cmp	r3, #254	; 0xfe
   1d510:	bhi	1d52c <argp_failure@@Base+0x624>
   1d514:	bl	11990 <__ctype_b_loc@plt>
   1d518:	lsl	r4, r4, #1
   1d51c:	ldr	r3, [r0]
   1d520:	ldrh	r3, [r3, r4]
   1d524:	tst	r3, #16384	; 0x4000
   1d528:	bne	1d538 <argp_failure@@Base+0x630>
   1d52c:	ldr	r3, [r6]
   1d530:	cmp	r3, #0
   1d534:	beq	1e1ac <argp_failure@@Base+0x12a4>
   1d538:	ldr	r3, [r9, #28]
   1d53c:	ldr	r1, [r9, #24]
   1d540:	ldr	r2, [r9, #16]
   1d544:	sub	r3, r3, r1
   1d548:	cmp	r3, r2
   1d54c:	bhi	1dd94 <argp_failure@@Base+0xe8c>
   1d550:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1d554:	str	r3, [r9, #4]
   1d558:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d55c:	add	r8, r8, #28
   1d560:	subs	r3, r3, #1
   1d564:	str	r3, [fp, #-108]	; 0xffffff94
   1d568:	ldr	r3, [fp, #-120]	; 0xffffff88
   1d56c:	str	r3, [r9, #12]
   1d570:	bne	1d2ac <argp_failure@@Base+0x3a4>
   1d574:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d578:	ldr	sl, [fp, #-100]	; 0xffffff9c
   1d57c:	cmp	r3, #0
   1d580:	beq	1d660 <argp_failure@@Base+0x758>
   1d584:	ldr	r3, [sl, #4]
   1d588:	cmp	r3, #0
   1d58c:	beq	1d660 <argp_failure@@Base+0x758>
   1d590:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d594:	ldr	r1, [pc, #2956]	; 1e128 <argp_failure@@Base+0x1220>
   1d598:	cmp	r3, #0
   1d59c:	ldr	r0, [pc, #2952]	; 1e12c <argp_failure@@Base+0x1224>
   1d5a0:	ldrne	r2, [r3]
   1d5a4:	ldreq	r2, [fp, #-104]	; 0xffffff98
   1d5a8:	ldr	r3, [fp, #-104]	; 0xffffff98
   1d5ac:	bl	1b3f8 <_obstack_memory_used@@Base+0xdb4>
   1d5b0:	subs	r4, r0, #0
   1d5b4:	beq	1d660 <argp_failure@@Base+0x758>
   1d5b8:	ldrb	r3, [r4]
   1d5bc:	cmp	r3, #0
   1d5c0:	beq	1d654 <argp_failure@@Base+0x74c>
   1d5c4:	ldr	r3, [r9, #28]
   1d5c8:	ldr	r2, [r9, #32]
   1d5cc:	cmp	r3, r2
   1d5d0:	bcs	1e270 <argp_failure@@Base+0x1368>
   1d5d4:	add	r1, r3, #1
   1d5d8:	mov	r2, #10
   1d5dc:	str	r1, [r9, #28]
   1d5e0:	strb	r2, [r3]
   1d5e4:	mov	r0, r4
   1d5e8:	bl	119c0 <strlen@plt>
   1d5ec:	subs	r5, r0, #0
   1d5f0:	beq	1e24c <argp_failure@@Base+0x1344>
   1d5f4:	ldr	r0, [r9, #28]
   1d5f8:	ldr	r2, [r9, #32]
   1d5fc:	add	r3, r0, r5
   1d600:	cmp	r2, r3
   1d604:	bcs	1d620 <argp_failure@@Base+0x718>
   1d608:	mov	r1, r5
   1d60c:	mov	r0, r9
   1d610:	bl	1f7f0 <argp_error@@Base+0x1490>
   1d614:	cmp	r0, #0
   1d618:	beq	1e24c <argp_failure@@Base+0x1344>
   1d61c:	ldr	r0, [r9, #28]
   1d620:	mov	r2, r5
   1d624:	mov	r1, r4
   1d628:	bl	11810 <memcpy@plt>
   1d62c:	ldr	r3, [r9, #28]
   1d630:	add	r3, r3, r5
   1d634:	str	r3, [r9, #28]
   1d638:	ldr	r2, [r9, #32]
   1d63c:	cmp	r2, r3
   1d640:	bls	1e254 <argp_failure@@Base+0x134c>
   1d644:	add	r1, r3, #1
   1d648:	mov	r2, #10
   1d64c:	str	r1, [r9, #28]
   1d650:	strb	r2, [r3]
   1d654:	ldr	r3, [pc, #2768]	; 1e12c <argp_failure@@Base+0x1224>
   1d658:	cmp	r4, r3
   1d65c:	bne	1e1a0 <argp_failure@@Base+0x1298>
   1d660:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d664:	mov	r4, #1
   1d668:	tst	r3, #32
   1d66c:	beq	1d1b8 <argp_failure@@Base+0x2b0>
   1d670:	mov	r3, #0
   1d674:	str	r3, [sp]
   1d678:	str	r9, [sp, #4]
   1d67c:	mov	r3, r4
   1d680:	ldr	r1, [fp, #-104]	; 0xffffff98
   1d684:	ldr	r0, [fp, #-112]	; 0xffffff90
   1d688:	mov	r2, #1
   1d68c:	bl	1b7f4 <_obstack_memory_used@@Base+0x11b0>
   1d690:	orr	r4, r4, r0
   1d694:	b	1d1b8 <argp_failure@@Base+0x2b0>
   1d698:	ldr	r0, [pc, #2704]	; 1e130 <argp_failure@@Base+0x1228>
   1d69c:	bl	11924 <getenv@plt>
   1d6a0:	mov	lr, sl
   1d6a4:	sub	r3, fp, #76	; 0x4c
   1d6a8:	mov	ip, r3
   1d6ac:	str	r3, [fp, #-100]	; 0xffffff9c
   1d6b0:	mov	r6, r0
   1d6b4:	ldm	lr!, {r0, r1, r2, r3}
   1d6b8:	cmp	r6, #0
   1d6bc:	stmia	ip!, {r0, r1, r2, r3}
   1d6c0:	ldm	lr!, {r0, r1, r2, r3}
   1d6c4:	stmia	ip!, {r0, r1, r2, r3}
   1d6c8:	ldm	lr, {r0, r1}
   1d6cc:	stm	ip, {r0, r1}
   1d6d0:	beq	1d150 <argp_failure@@Base+0x248>
   1d6d4:	ldrb	r9, [r6]
   1d6d8:	ldr	r8, [pc, #2644]	; 1e134 <argp_failure@@Base+0x122c>
   1d6dc:	cmp	r9, #0
   1d6e0:	beq	1d834 <argp_failure@@Base+0x92c>
   1d6e4:	bl	11990 <__ctype_b_loc@plt>
   1d6e8:	mov	r5, r0
   1d6ec:	ldr	r1, [r0]
   1d6f0:	b	1d6f8 <argp_failure@@Base+0x7f0>
   1d6f4:	ldrb	r9, [r6, #1]!
   1d6f8:	lsl	r3, r9, #1
   1d6fc:	ldrh	r3, [r1, r3]
   1d700:	tst	r3, #8192	; 0x2000
   1d704:	bne	1d6f4 <argp_failure@@Base+0x7ec>
   1d708:	ands	r2, r3, #1024	; 0x400
   1d70c:	beq	1d82c <argp_failure@@Base+0x924>
   1d710:	cmp	r9, #95	; 0x5f
   1d714:	cmpne	r9, #45	; 0x2d
   1d718:	lsl	r3, r3, #28
   1d71c:	moveq	r7, #1
   1d720:	movne	r7, #0
   1d724:	orrs	r3, r7, r3, lsr #31
   1d728:	beq	1dfe8 <argp_failure@@Base+0x10e0>
   1d72c:	mov	r4, r6
   1d730:	ldrb	r3, [r4, #1]!
   1d734:	cmp	r3, #95	; 0x5f
   1d738:	cmpne	r3, #45	; 0x2d
   1d73c:	lsl	r2, r3, #1
   1d740:	moveq	r0, #1
   1d744:	ldrh	r2, [r1, r2]
   1d748:	movne	r0, #0
   1d74c:	lsl	ip, r2, #28
   1d750:	orrs	r0, r0, ip, lsr #31
   1d754:	bne	1d730 <argp_failure@@Base+0x828>
   1d758:	tst	r2, #8192	; 0x2000
   1d75c:	sub	r7, r4, r6
   1d760:	beq	1d778 <argp_failure@@Base+0x870>
   1d764:	ldrb	r3, [r4, #1]!
   1d768:	lsl	r2, r3, #1
   1d76c:	ldrh	r2, [r1, r2]
   1d770:	tst	r2, #8192	; 0x2000
   1d774:	bne	1d764 <argp_failure@@Base+0x85c>
   1d778:	cmp	r3, #44	; 0x2c
   1d77c:	cmpne	r3, #0
   1d780:	beq	1d894 <argp_failure@@Base+0x98c>
   1d784:	cmp	r3, #61	; 0x3d
   1d788:	beq	1dbf0 <argp_failure@@Base+0xce8>
   1d78c:	ldrb	r3, [r4]
   1d790:	lsl	r3, r3, #1
   1d794:	ldrh	r3, [r1, r3]
   1d798:	tst	r3, #2048	; 0x800
   1d79c:	bne	1db90 <argp_failure@@Base+0xc88>
   1d7a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d7a4:	mov	r9, r3
   1d7a8:	str	r3, [fp, #-116]	; 0xffffff8c
   1d7ac:	ldr	r5, [pc, #2436]	; 1e138 <argp_failure@@Base+0x1230>
   1d7b0:	b	1d7c0 <argp_failure@@Base+0x8b8>
   1d7b4:	add	r5, r5, #16
   1d7b8:	cmp	r5, r8
   1d7bc:	beq	1e050 <argp_failure@@Base+0x1148>
   1d7c0:	mov	r0, r5
   1d7c4:	bl	119c0 <strlen@plt>
   1d7c8:	cmp	r0, r7
   1d7cc:	bne	1d7b4 <argp_failure@@Base+0x8ac>
   1d7d0:	mov	r2, r7
   1d7d4:	mov	r1, r5
   1d7d8:	mov	r0, r6
   1d7dc:	bl	11ba0 <strncmp@plt>
   1d7e0:	cmp	r0, #0
   1d7e4:	bne	1d7b4 <argp_failure@@Base+0x8ac>
   1d7e8:	cmp	r9, #0
   1d7ec:	beq	1d7fc <argp_failure@@Base+0x8f4>
   1d7f0:	ldrb	r1, [r5, #14]
   1d7f4:	cmp	r1, #0
   1d7f8:	beq	1e230 <argp_failure@@Base+0x1328>
   1d7fc:	ldrb	r3, [r5, #15]
   1d800:	sub	r2, fp, #36	; 0x24
   1d804:	add	r3, r2, r3
   1d808:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1d80c:	str	r2, [r3, #-40]	; 0xffffffd8
   1d810:	cmp	r5, r8
   1d814:	beq	1e050 <argp_failure@@Base+0x1148>
   1d818:	ldrb	r9, [r4]
   1d81c:	cmp	r9, #44	; 0x2c
   1d820:	beq	1df30 <argp_failure@@Base+0x1028>
   1d824:	mov	r6, r4
   1d828:	b	1d6dc <argp_failure@@Base+0x7d4>
   1d82c:	cmp	r9, #0
   1d830:	bne	1e188 <argp_failure@@Base+0x1280>
   1d834:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1d838:	ldr	r1, [pc, #2296]	; 1e138 <argp_failure@@Base+0x1230>
   1d83c:	add	r3, r1, #16
   1d840:	cmp	r3, r8
   1d844:	mov	r1, r3
   1d848:	beq	1df8c <argp_failure@@Base+0x1084>
   1d84c:	ldrb	r2, [r3, #14]
   1d850:	cmp	r2, #0
   1d854:	bne	1d83c <argp_failure@@Base+0x934>
   1d858:	ldrb	r0, [r3, #15]
   1d85c:	sub	ip, fp, #36	; 0x24
   1d860:	cmp	r0, #32
   1d864:	add	ip, ip, r0
   1d868:	beq	1d83c <argp_failure@@Base+0x934>
   1d86c:	ldr	r0, [ip, #-40]	; 0xffffffd8
   1d870:	cmp	r0, lr
   1d874:	blt	1d83c <argp_failure@@Base+0x934>
   1d878:	ldr	r1, [pc, #2236]	; 1e13c <argp_failure@@Base+0x1234>
   1d87c:	ldr	r0, [fp, #-104]	; 0xffffff98
   1d880:	stm	sp, {r1, r3}
   1d884:	ldr	r3, [pc, #2228]	; 1e140 <argp_failure@@Base+0x1238>
   1d888:	mov	r1, r2
   1d88c:	bl	1cf08 <argp_failure@@Base>
   1d890:	b	1d150 <argp_failure@@Base+0x248>
   1d894:	cmp	r9, #110	; 0x6e
   1d898:	beq	1dc20 <argp_failure@@Base+0xd18>
   1d89c:	mov	r9, #1
   1d8a0:	str	r9, [fp, #-116]	; 0xffffff8c
   1d8a4:	b	1d7ac <argp_failure@@Base+0x8a4>
   1d8a8:	ldr	r3, [fp, #4]
   1d8ac:	ldr	r1, [pc, #2192]	; 1e144 <argp_failure@@Base+0x123c>
   1d8b0:	mov	r2, r3
   1d8b4:	mov	r0, r9
   1d8b8:	bl	1f810 <argp_error@@Base+0x14b0>
   1d8bc:	mov	r4, #1
   1d8c0:	b	1d1a0 <argp_failure@@Base+0x298>
   1d8c4:	mov	r2, #1
   1d8c8:	mov	r3, #0
   1d8cc:	stm	sp, {r2, r9}
   1d8d0:	ldr	r1, [fp, #-104]	; 0xffffff98
   1d8d4:	mov	r2, r3
   1d8d8:	ldr	r0, [fp, #-112]	; 0xffffff90
   1d8dc:	bl	1b7f4 <_obstack_memory_used@@Base+0x11b0>
   1d8e0:	orr	r4, r4, r0
   1d8e4:	b	1d194 <argp_failure@@Base+0x28c>
   1d8e8:	ldr	r3, [fp, #-112]	; 0xffffff90
   1d8ec:	mov	r4, #1
   1d8f0:	mov	r6, r4
   1d8f4:	ldr	r1, [r3, #16]
   1d8f8:	ldr	r0, [r3, #8]
   1d8fc:	bl	1ccf8 <_obstack_memory_used@@Base+0x26b4>
   1d900:	mov	r1, #0
   1d904:	add	r3, r0, #14
   1d908:	bic	r3, r3, #7
   1d90c:	sub	sp, sp, r3
   1d910:	add	r7, sp, #8
   1d914:	mov	r2, r0
   1d918:	mov	r0, r7
   1d91c:	bl	11a38 <memset@plt>
   1d920:	sub	r3, fp, #76	; 0x4c
   1d924:	str	r3, [fp, #-100]	; 0xffffff9c
   1d928:	ldr	r8, [fp, #-136]	; 0xffffff78
   1d92c:	str	r7, [fp, #-108]	; 0xffffff94
   1d930:	b	1da4c <argp_failure@@Base+0xb44>
   1d934:	cmp	r4, #0
   1d938:	ldr	r3, [fp, #-108]	; 0xffffff94
   1d93c:	ldr	r5, [r9, #12]
   1d940:	ldrne	r2, [pc, #2048]	; 1e148 <argp_failure@@Base+0x1240>
   1d944:	str	r7, [r9, #12]
   1d948:	ldreq	r2, [pc, #2044]	; 1e14c <argp_failure@@Base+0x1244>
   1d94c:	str	r3, [fp, #-76]	; 0xffffffb4
   1d950:	ldr	r1, [pc, #2040]	; 1e150 <argp_failure@@Base+0x1248>
   1d954:	ldr	r3, [fp, #4]
   1d958:	mov	r0, r9
   1d95c:	bl	1f810 <argp_error@@Base+0x14b0>
   1d960:	ldr	r3, [r9, #28]
   1d964:	ldr	r1, [r9, #24]
   1d968:	ldr	r2, [r9, #16]
   1d96c:	sub	r3, r3, r1
   1d970:	cmp	r3, r2
   1d974:	ldr	r7, [sl, #28]
   1d978:	bhi	1dae0 <argp_failure@@Base+0xbd8>
   1d97c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1d980:	ldr	r4, [r9, #4]
   1d984:	tst	r3, #2
   1d988:	str	r7, [r9, #4]
   1d98c:	beq	1dac4 <argp_failure@@Base+0xbbc>
   1d990:	ldr	r3, [r8, #4]
   1d994:	cmp	r3, #0
   1d998:	beq	1d9e8 <argp_failure@@Base+0xae0>
   1d99c:	ldr	ip, [r9, #28]
   1d9a0:	ldr	r2, [r9, #32]
   1d9a4:	add	r3, ip, #12
   1d9a8:	cmp	r2, r3
   1d9ac:	bcs	1d9c8 <argp_failure@@Base+0xac0>
   1d9b0:	mov	r1, #12
   1d9b4:	mov	r0, r9
   1d9b8:	bl	1f7f0 <argp_error@@Base+0x1490>
   1d9bc:	cmp	r0, #0
   1d9c0:	beq	1d9e8 <argp_failure@@Base+0xae0>
   1d9c4:	ldr	ip, [r9, #28]
   1d9c8:	ldr	r3, [pc, #1924]	; 1e154 <argp_failure@@Base+0x124c>
   1d9cc:	ldm	r3!, {r0, r1, r2}
   1d9d0:	str	r0, [ip]
   1d9d4:	str	r1, [ip, #4]
   1d9d8:	str	r2, [ip, #8]
   1d9dc:	ldr	r3, [r9, #28]
   1d9e0:	add	r3, r3, #12
   1d9e4:	str	r3, [r9, #28]
   1d9e8:	mov	r3, r6
   1d9ec:	ldr	r1, [fp, #-104]	; 0xffffff98
   1d9f0:	str	r9, [sp]
   1d9f4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1d9f8:	ldr	r0, [fp, #-112]	; 0xffffff90
   1d9fc:	bl	1c330 <_obstack_memory_used@@Base+0x1cec>
   1da00:	ldr	r3, [r9, #28]
   1da04:	ldr	r1, [r9, #24]
   1da08:	sub	r1, r3, r1
   1da0c:	mov	r7, r0
   1da10:	ldr	r0, [r9, #16]
   1da14:	cmp	r1, r0
   1da18:	strls	r5, [r9, #12]
   1da1c:	bhi	1da90 <argp_failure@@Base+0xb88>
   1da20:	ldr	r1, [r9, #32]
   1da24:	str	r4, [r9, #4]
   1da28:	cmp	r1, r3
   1da2c:	bls	1da74 <argp_failure@@Base+0xb6c>
   1da30:	add	r1, r3, #1
   1da34:	mov	r2, #10
   1da38:	str	r1, [r9, #28]
   1da3c:	strb	r2, [r3]
   1da40:	cmp	r7, #0
   1da44:	mov	r4, #0
   1da48:	beq	1daec <argp_failure@@Base+0xbe4>
   1da4c:	ldr	r3, [r9, #28]
   1da50:	ldr	r1, [r9, #24]
   1da54:	ldr	r2, [r9, #16]
   1da58:	sub	r3, r3, r1
   1da5c:	cmp	r3, r2
   1da60:	ldr	r7, [sl, #28]
   1da64:	bls	1d934 <argp_failure@@Base+0xa2c>
   1da68:	mov	r0, r9
   1da6c:	bl	1f160 <argp_error@@Base+0xe00>
   1da70:	b	1d934 <argp_failure@@Base+0xa2c>
   1da74:	mov	r1, r6
   1da78:	mov	r0, r9
   1da7c:	bl	1f7f0 <argp_error@@Base+0x1490>
   1da80:	cmp	r0, #0
   1da84:	beq	1da40 <argp_failure@@Base+0xb38>
   1da88:	ldr	r3, [r9, #28]
   1da8c:	b	1da30 <argp_failure@@Base+0xb28>
   1da90:	mov	r0, r9
   1da94:	bl	1f160 <argp_error@@Base+0xe00>
   1da98:	ldr	r3, [r9, #28]
   1da9c:	ldr	r1, [r9, #24]
   1daa0:	ldr	r0, [r9, #16]
   1daa4:	sub	r1, r3, r1
   1daa8:	cmp	r1, r0
   1daac:	str	r5, [r9, #12]
   1dab0:	bls	1da20 <argp_failure@@Base+0xb18>
   1dab4:	mov	r0, r9
   1dab8:	bl	1f160 <argp_error@@Base+0xe00>
   1dabc:	ldr	r3, [r9, #28]
   1dac0:	b	1da20 <argp_failure@@Base+0xb18>
   1dac4:	mov	r1, r9
   1dac8:	mov	r0, r8
   1dacc:	bl	1cd50 <_obstack_memory_used@@Base+0x270c>
   1dad0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1dad4:	orr	r3, r3, #2
   1dad8:	str	r3, [fp, #-96]	; 0xffffffa0
   1dadc:	b	1d9e8 <argp_failure@@Base+0xae0>
   1dae0:	mov	r0, r9
   1dae4:	bl	1f160 <argp_error@@Base+0xe00>
   1dae8:	b	1d97c <argp_failure@@Base+0xa74>
   1daec:	mov	r4, #1
   1daf0:	b	1d188 <argp_failure@@Base+0x280>
   1daf4:	mov	r1, #0
   1daf8:	ldr	r0, [fp, #-112]	; 0xffffff90
   1dafc:	bl	1c580 <_obstack_memory_used@@Base+0x1f3c>
   1db00:	ldr	r2, [pc, #1616]	; 1e158 <argp_failure@@Base+0x1250>
   1db04:	ldr	r4, [r0, #4]
   1db08:	ldr	r5, [r0]
   1db0c:	mov	r1, r4
   1db10:	mov	r6, r0
   1db14:	str	r0, [fp, #-136]	; 0xffffff78
   1db18:	mov	r0, r5
   1db1c:	bl	1cc70 <_obstack_memory_used@@Base+0x262c>
   1db20:	ldr	r2, [pc, #1588]	; 1e15c <argp_failure@@Base+0x1254>
   1db24:	cmp	r0, #0
   1db28:	mvnne	r3, #0
   1db2c:	strne	r3, [r0, #12]
   1db30:	movne	r3, r6
   1db34:	mov	r0, r5
   1db38:	ldrne	r4, [r3, #4]
   1db3c:	mov	r1, r4
   1db40:	bl	1cc70 <_obstack_memory_used@@Base+0x262c>
   1db44:	cmp	r0, #0
   1db48:	mvnne	r3, #0
   1db4c:	strne	r3, [r0, #12]
   1db50:	ldrne	r3, [fp, #-136]	; 0xffffff78
   1db54:	ldrne	r4, [r3, #4]
   1db58:	cmp	r4, #0
   1db5c:	beq	1d17c <argp_failure@@Base+0x274>
   1db60:	mov	r3, r5
   1db64:	mov	r1, #0
   1db68:	str	r1, [r3, #24]
   1db6c:	add	r1, r1, #1
   1db70:	cmp	r1, r4
   1db74:	add	r3, r3, #28
   1db78:	bne	1db68 <argp_failure@@Base+0xc60>
   1db7c:	mov	r0, r5
   1db80:	ldr	r3, [pc, #1496]	; 1e160 <argp_failure@@Base+0x1258>
   1db84:	mov	r2, #28
   1db88:	bl	11b40 <qsort@plt>
   1db8c:	b	1d17c <argp_failure@@Base+0x274>
   1db90:	mov	r2, #10
   1db94:	mov	r1, #0
   1db98:	mov	r0, r4
   1db9c:	bl	11798 <strtol@plt>
   1dba0:	ldrb	r3, [r4]
   1dba4:	ldr	r2, [r5]
   1dba8:	lsl	r3, r3, #1
   1dbac:	ldrh	r3, [r2, r3]
   1dbb0:	tst	r3, #2048	; 0x800
   1dbb4:	str	r0, [fp, #-116]	; 0xffffff8c
   1dbb8:	beq	1dbe0 <argp_failure@@Base+0xcd8>
   1dbbc:	ldrb	r3, [r4, #1]!
   1dbc0:	lsl	r3, r3, #1
   1dbc4:	ldrh	r3, [r2, r3]
   1dbc8:	tst	r3, #2048	; 0x800
   1dbcc:	bne	1dbbc <argp_failure@@Base+0xcb4>
   1dbd0:	b	1dbe0 <argp_failure@@Base+0xcd8>
   1dbd4:	ldrb	r3, [r4, #1]!
   1dbd8:	lsl	r3, r3, #1
   1dbdc:	ldrh	r3, [r2, r3]
   1dbe0:	tst	r3, #8192	; 0x2000
   1dbe4:	bne	1dbd4 <argp_failure@@Base+0xccc>
   1dbe8:	ldr	r9, [fp, #-108]	; 0xffffff94
   1dbec:	b	1d7ac <argp_failure@@Base+0x8a4>
   1dbf0:	ldrb	r3, [r4, #1]
   1dbf4:	add	r4, r4, #1
   1dbf8:	lsl	r3, r3, #1
   1dbfc:	ldrh	r3, [r1, r3]
   1dc00:	tst	r3, #8192	; 0x2000
   1dc04:	beq	1d798 <argp_failure@@Base+0x890>
   1dc08:	ldrb	r3, [r4, #1]!
   1dc0c:	lsl	r3, r3, #1
   1dc10:	ldrh	r3, [r1, r3]
   1dc14:	tst	r3, #8192	; 0x2000
   1dc18:	bne	1dc08 <argp_failure@@Base+0xd00>
   1dc1c:	b	1d798 <argp_failure@@Base+0x890>
   1dc20:	ldrb	r3, [r6, #1]
   1dc24:	cmp	r3, #111	; 0x6f
   1dc28:	bne	1d89c <argp_failure@@Base+0x994>
   1dc2c:	ldrb	r3, [r6, #2]
   1dc30:	cmp	r3, #45	; 0x2d
   1dc34:	bne	1d89c <argp_failure@@Base+0x994>
   1dc38:	ldr	r3, [fp, #-108]	; 0xffffff94
   1dc3c:	add	r6, r6, #3
   1dc40:	sub	r7, r7, #3
   1dc44:	str	r3, [fp, #-116]	; 0xffffff8c
   1dc48:	mov	r9, #1
   1dc4c:	b	1d7ac <argp_failure@@Base+0x8a4>
   1dc50:	mov	r3, #1
   1dc54:	str	r3, [fp, #-128]	; 0xffffff80
   1dc58:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1dc5c:	cmp	lr, r5
   1dc60:	ldr	r5, [r3, #8]
   1dc64:	bls	1d360 <argp_failure@@Base+0x458>
   1dc68:	mov	r0, r9
   1dc6c:	bl	1f160 <argp_error@@Base+0xe00>
   1dc70:	ldr	r7, [r6, #12]
   1dc74:	and	r2, r7, #8
   1dc78:	mov	r4, r2
   1dc7c:	b	1d360 <argp_failure@@Base+0x458>
   1dc80:	cmp	r3, r2
   1dc84:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1dc88:	ldr	r4, [r3, #12]
   1dc8c:	bhi	1df3c <argp_failure@@Base+0x1034>
   1dc90:	str	r4, [r9, #12]
   1dc94:	ldr	r5, [r8, #4]
   1dc98:	cmp	r5, #0
   1dc9c:	beq	1d4cc <argp_failure@@Base+0x5c4>
   1dca0:	add	r4, r6, #24
   1dca4:	ldr	r7, [fp, #-100]	; 0xffffff9c
   1dca8:	b	1dcb8 <argp_failure@@Base+0xdb0>
   1dcac:	subs	r5, r5, #1
   1dcb0:	add	r4, r4, #24
   1dcb4:	beq	1d4cc <argp_failure@@Base+0x5c4>
   1dcb8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1dcbc:	cmp	r3, #0
   1dcc0:	beq	1dcac <argp_failure@@Base+0xda4>
   1dcc4:	ldr	r3, [r4, #-12]
   1dcc8:	tst	r3, #2
   1dccc:	bne	1dcac <argp_failure@@Base+0xda4>
   1dcd0:	sub	r1, fp, #76	; 0x4c
   1dcd4:	ldr	r0, [r7, #12]
   1dcd8:	bl	1b648 <_obstack_memory_used@@Base+0x1004>
   1dcdc:	ldr	r2, [r4, #-24]	; 0xffffffe8
   1dce0:	ldr	r1, [pc, #1148]	; 1e164 <argp_failure@@Base+0x125c>
   1dce4:	mov	r0, r9
   1dce8:	bl	1f810 <argp_error@@Base+0x14b0>
   1dcec:	ldr	r3, [r6, #8]
   1dcf0:	ldr	r1, [pc, #1136]	; 1e168 <argp_failure@@Base+0x1260>
   1dcf4:	subs	r2, r3, #0
   1dcf8:	mov	r0, r9
   1dcfc:	beq	1dcac <argp_failure@@Base+0xda4>
   1dd00:	ldr	ip, [r6, #12]
   1dd04:	tst	ip, #1
   1dd08:	ldrne	r1, [pc, #1116]	; 1e16c <argp_failure@@Base+0x1264>
   1dd0c:	bl	1f810 <argp_error@@Base+0x14b0>
   1dd10:	b	1dcac <argp_failure@@Base+0xda4>
   1dd14:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1dd18:	sub	r1, fp, #76	; 0x4c
   1dd1c:	ldr	r0, [r3, #8]
   1dd20:	bl	1b648 <_obstack_memory_used@@Base+0x1004>
   1dd24:	ldr	r3, [r9, #28]
   1dd28:	ldr	r2, [r9, #32]
   1dd2c:	cmp	r3, r2
   1dd30:	bcs	1df70 <argp_failure@@Base+0x1068>
   1dd34:	add	r2, r3, #1
   1dd38:	str	r2, [r9, #28]
   1dd3c:	mov	r2, #45	; 0x2d
   1dd40:	strb	r2, [r3]
   1dd44:	ldr	r3, [r9, #28]
   1dd48:	ldr	r2, [r9, #32]
   1dd4c:	ldrb	r7, [sl]
   1dd50:	cmp	r3, r2
   1dd54:	bcs	1df54 <argp_failure@@Base+0x104c>
   1dd58:	add	r2, r3, #1
   1dd5c:	str	r2, [r9, #28]
   1dd60:	strb	r7, [r3]
   1dd64:	ldr	r3, [fp, #-128]	; 0xffffff80
   1dd68:	cmp	r3, #0
   1dd6c:	beq	1df08 <argp_failure@@Base+0x1000>
   1dd70:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1dd74:	ldr	r3, [r3]
   1dd78:	cmp	r3, #0
   1dd7c:	bne	1df08 <argp_failure@@Base+0x1000>
   1dd80:	ldr	r3, [r6, #8]
   1dd84:	cmp	r3, #0
   1dd88:	movne	r3, #1
   1dd8c:	strne	r3, [fp, #-80]	; 0xffffffb0
   1dd90:	b	1d3d4 <argp_failure@@Base+0x4cc>
   1dd94:	mov	r0, r9
   1dd98:	bl	1f160 <argp_error@@Base+0xe00>
   1dd9c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   1dda0:	ldr	r3, [r9, #28]
   1dda4:	ldr	r1, [r9, #24]
   1dda8:	str	r2, [r9, #4]
   1ddac:	ldr	r2, [r9, #16]
   1ddb0:	sub	r3, r3, r1
   1ddb4:	cmp	r3, r2
   1ddb8:	bls	1d558 <argp_failure@@Base+0x650>
   1ddbc:	mov	r0, r9
   1ddc0:	bl	1f160 <argp_error@@Base+0xe00>
   1ddc4:	b	1d558 <argp_failure@@Base+0x650>
   1ddc8:	mov	r0, r9
   1ddcc:	bl	1f160 <argp_error@@Base+0xe00>
   1ddd0:	ldr	lr, [r9, #28]
   1ddd4:	ldr	r2, [r9, #24]
   1ddd8:	ldr	r5, [r9, #16]
   1dddc:	sub	lr, lr, r2
   1dde0:	b	1d2cc <argp_failure@@Base+0x3c4>
   1dde4:	ldr	r4, [r6, #16]
   1dde8:	ldr	r1, [r6, #4]
   1ddec:	mov	r0, r4
   1ddf0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ddf4:	ldr	r2, [r8, #20]
   1ddf8:	bl	1b3f8 <_obstack_memory_used@@Base+0xdb4>
   1ddfc:	subs	r5, r0, #0
   1de00:	beq	1deb8 <argp_failure@@Base+0xfb0>
   1de04:	ldrb	r3, [r5]
   1de08:	cmp	r3, #0
   1de0c:	beq	1dea8 <argp_failure@@Base+0xfa0>
   1de10:	ldr	r3, [r9, #28]
   1de14:	ldr	r1, [r9, #24]
   1de18:	ldr	r2, [r9, #16]
   1de1c:	sub	r3, r3, r1
   1de20:	cmp	r3, r2
   1de24:	bhi	1e0a8 <argp_failure@@Base+0x11a0>
   1de28:	ldr	r7, [r9, #20]
   1de2c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1de30:	bic	r7, r7, r7, asr #31
   1de34:	ldr	r6, [r3, #20]
   1de38:	mov	r3, r6
   1de3c:	str	r6, [r9, #4]
   1de40:	add	r2, r6, #3
   1de44:	cmp	r2, r7
   1de48:	str	r3, [r9, #12]
   1de4c:	bcs	1dff8 <argp_failure@@Base+0x10f0>
   1de50:	ldr	r3, [r9, #28]
   1de54:	ldr	r2, [r9, #32]
   1de58:	cmp	r3, r2
   1de5c:	bcs	1e1f8 <argp_failure@@Base+0x12f0>
   1de60:	add	r1, r3, #1
   1de64:	mov	r2, #10
   1de68:	str	r1, [r9, #28]
   1de6c:	strb	r2, [r3]
   1de70:	mov	r0, r5
   1de74:	bl	119c0 <strlen@plt>
   1de78:	subs	r6, r0, #0
   1de7c:	beq	1dea8 <argp_failure@@Base+0xfa0>
   1de80:	ldr	r0, [r9, #28]
   1de84:	ldr	r2, [r9, #32]
   1de88:	add	r3, r0, r6
   1de8c:	cmp	r2, r3
   1de90:	bcs	1e08c <argp_failure@@Base+0x1184>
   1de94:	mov	r1, r6
   1de98:	mov	r0, r9
   1de9c:	bl	1f7f0 <argp_error@@Base+0x1490>
   1dea0:	cmp	r0, #0
   1dea4:	bne	1e088 <argp_failure@@Base+0x1180>
   1dea8:	cmp	r4, r5
   1deac:	beq	1deb8 <argp_failure@@Base+0xfb0>
   1deb0:	mov	r0, r5
   1deb4:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1deb8:	ldr	r3, [r9, #28]
   1debc:	ldr	r2, [r9, #24]
   1dec0:	ldr	r1, [r9, #16]
   1dec4:	sub	r2, r3, r2
   1dec8:	cmp	r2, r1
   1decc:	bhi	1dfd8 <argp_failure@@Base+0x10d0>
   1ded0:	ldr	r1, [r9, #32]
   1ded4:	mov	r2, #0
   1ded8:	cmp	r1, r3
   1dedc:	str	r2, [r9, #4]
   1dee0:	bls	1dfbc <argp_failure@@Base+0x10b4>
   1dee4:	add	r1, r3, #1
   1dee8:	mov	r2, #10
   1deec:	str	r1, [r9, #28]
   1def0:	strb	r2, [r3]
   1def4:	str	r8, [fp, #-88]	; 0xffffffa8
   1def8:	b	1d538 <argp_failure@@Base+0x630>
   1defc:	mov	r0, r9
   1df00:	bl	1f160 <argp_error@@Base+0xe00>
   1df04:	b	1d4e4 <argp_failure@@Base+0x5dc>
   1df08:	ldr	r2, [r6, #8]
   1df0c:	cmp	r2, #0
   1df10:	beq	1d3d4 <argp_failure@@Base+0x4cc>
   1df14:	ldr	r3, [r6, #12]
   1df18:	mov	r0, r9
   1df1c:	tst	r3, #1
   1df20:	ldrne	r1, [pc, #584]	; 1e170 <argp_failure@@Base+0x1268>
   1df24:	ldreq	r1, [pc, #584]	; 1e174 <argp_failure@@Base+0x126c>
   1df28:	bl	1f810 <argp_error@@Base+0x14b0>
   1df2c:	b	1d3d4 <argp_failure@@Base+0x4cc>
   1df30:	ldrb	r9, [r4, #1]
   1df34:	add	r4, r4, #1
   1df38:	b	1d824 <argp_failure@@Base+0x91c>
   1df3c:	mov	r0, r9
   1df40:	bl	1f160 <argp_error@@Base+0xe00>
   1df44:	b	1dc90 <argp_failure@@Base+0xd88>
   1df48:	mov	r0, r9
   1df4c:	bl	1f160 <argp_error@@Base+0xe00>
   1df50:	b	1d418 <argp_failure@@Base+0x510>
   1df54:	mov	r1, #1
   1df58:	mov	r0, r9
   1df5c:	bl	1f7f0 <argp_error@@Base+0x1490>
   1df60:	cmp	r0, #0
   1df64:	beq	1dd64 <argp_failure@@Base+0xe5c>
   1df68:	ldr	r3, [r9, #28]
   1df6c:	b	1dd58 <argp_failure@@Base+0xe50>
   1df70:	mov	r1, #1
   1df74:	mov	r0, r9
   1df78:	bl	1f7f0 <argp_error@@Base+0x1490>
   1df7c:	cmp	r0, #0
   1df80:	beq	1dd44 <argp_failure@@Base+0xe3c>
   1df84:	ldr	r3, [r9, #28]
   1df88:	b	1dd34 <argp_failure@@Base+0xe2c>
   1df8c:	ldr	lr, [fp, #-100]	; 0xffffff9c
   1df90:	ldr	sl, [pc, #388]	; 1e11c <argp_failure@@Base+0x1214>
   1df94:	mov	r4, #1
   1df98:	ldm	lr!, {r0, r1, r2, r3}
   1df9c:	mov	ip, sl
   1dfa0:	stmia	ip!, {r0, r1, r2, r3}
   1dfa4:	ldm	lr!, {r0, r1, r2, r3}
   1dfa8:	stmia	ip!, {r0, r1, r2, r3}
   1dfac:	ldm	lr, {r0, r1}
   1dfb0:	stm	ip, {r0, r1}
   1dfb4:	str	r4, [sl, #36]	; 0x24
   1dfb8:	b	1d150 <argp_failure@@Base+0x248>
   1dfbc:	mov	r1, #1
   1dfc0:	mov	r0, r9
   1dfc4:	bl	1f7f0 <argp_error@@Base+0x1490>
   1dfc8:	cmp	r0, #0
   1dfcc:	beq	1def4 <argp_failure@@Base+0xfec>
   1dfd0:	ldr	r3, [r9, #28]
   1dfd4:	b	1dee4 <argp_failure@@Base+0xfdc>
   1dfd8:	mov	r0, r9
   1dfdc:	bl	1f160 <argp_error@@Base+0xe00>
   1dfe0:	ldr	r3, [r9, #28]
   1dfe4:	b	1ded0 <argp_failure@@Base+0xfc8>
   1dfe8:	mov	r7, r3
   1dfec:	mov	r4, r6
   1dff0:	mov	r3, r9
   1dff4:	b	1d778 <argp_failure@@Base+0x870>
   1dff8:	cmp	r6, r7
   1dffc:	bhi	1e1e8 <argp_failure@@Base+0x12e0>
   1e000:	ldr	r3, [r9, #28]
   1e004:	ldr	r1, [r9, #32]
   1e008:	add	r2, r3, #3
   1e00c:	cmp	r1, r2
   1e010:	bcs	1e02c <argp_failure@@Base+0x1124>
   1e014:	mov	r1, #3
   1e018:	mov	r0, r9
   1e01c:	bl	1f7f0 <argp_error@@Base+0x1490>
   1e020:	cmp	r0, #0
   1e024:	beq	1de70 <argp_failure@@Base+0xf68>
   1e028:	ldr	r3, [r9, #28]
   1e02c:	ldr	r2, [pc, #324]	; 1e178 <argp_failure@@Base+0x1270>
   1e030:	ldrh	r1, [r2]
   1e034:	ldrb	r2, [r2, #2]
   1e038:	strh	r1, [r3]
   1e03c:	strb	r2, [r3, #2]
   1e040:	ldr	r3, [r9, #28]
   1e044:	add	r3, r3, #3
   1e048:	str	r3, [r9, #28]
   1e04c:	b	1de70 <argp_failure@@Base+0xf68>
   1e050:	mov	r2, #0
   1e054:	str	r6, [sp, #4]
   1e058:	str	r7, [sp]
   1e05c:	ldr	r3, [pc, #280]	; 1e17c <argp_failure@@Base+0x1274>
   1e060:	mov	r1, r2
   1e064:	ldr	r0, [fp, #-104]	; 0xffffff98
   1e068:	bl	1cf08 <argp_failure@@Base>
   1e06c:	b	1d818 <argp_failure@@Base+0x910>
   1e070:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e074:	ldr	r8, [r3]
   1e078:	str	r4, [fp, #-88]	; 0xffffffa8
   1e07c:	str	r4, [fp, #-84]	; 0xffffffac
   1e080:	str	r4, [fp, #-80]	; 0xffffffb0
   1e084:	b	1d2a8 <argp_failure@@Base+0x3a0>
   1e088:	ldr	r0, [r9, #28]
   1e08c:	mov	r2, r6
   1e090:	mov	r1, r5
   1e094:	bl	11810 <memcpy@plt>
   1e098:	ldr	r3, [r9, #28]
   1e09c:	add	r6, r3, r6
   1e0a0:	str	r6, [r9, #28]
   1e0a4:	b	1dea8 <argp_failure@@Base+0xfa0>
   1e0a8:	mov	r0, r9
   1e0ac:	bl	1f160 <argp_error@@Base+0xe00>
   1e0b0:	ldr	r3, [r9, #28]
   1e0b4:	ldr	r1, [r9, #24]
   1e0b8:	ldr	r2, [r9, #16]
   1e0bc:	ldr	r7, [r9, #20]
   1e0c0:	ldr	sl, [fp, #-100]	; 0xffffff9c
   1e0c4:	sub	r3, r3, r1
   1e0c8:	cmp	r3, r2
   1e0cc:	ldr	r6, [sl, #20]
   1e0d0:	bic	r7, r7, r7, asr #31
   1e0d4:	bls	1de38 <argp_failure@@Base+0xf30>
   1e0d8:	mov	r0, r9
   1e0dc:	bl	1f160 <argp_error@@Base+0xe00>
   1e0e0:	ldr	r3, [r9, #28]
   1e0e4:	ldr	r1, [r9, #24]
   1e0e8:	ldr	r2, [r9, #16]
   1e0ec:	sub	r3, r3, r1
   1e0f0:	cmp	r3, r2
   1e0f4:	ldr	r3, [sl, #20]
   1e0f8:	str	r6, [r9, #4]
   1e0fc:	movls	r6, r3
   1e100:	bls	1de40 <argp_failure@@Base+0xf38>
   1e104:	mov	r0, r9
   1e108:	str	r3, [fp, #-124]	; 0xffffff84
   1e10c:	bl	1f160 <argp_error@@Base+0xe00>
   1e110:	ldr	r6, [sl, #20]
   1e114:	ldr	r3, [fp, #-124]	; 0xffffff84
   1e118:	b	1de40 <argp_failure@@Base+0xf38>
   1e11c:	andeq	r2, r3, r0, asr #9
   1e120:	andeq	sl, r3, r4, ror #28
   1e124:	andeq	r1, r2, r0, lsr #7
   1e128:	andeq	r0, r0, #5
   1e12c:	andeq	r1, r2, ip, lsr #6
   1e130:	andeq	r1, r2, r8, ror #3
   1e134:	strheq	r1, [r2], -r8
   1e138:	andeq	r1, r2, r8, lsr #32
   1e13c:	andeq	r1, r2, r4, lsr #5
   1e140:	andeq	r1, r2, r0, ror r2
   1e144:	ldrdeq	r1, [r2], -r4
   1e148:	andeq	r1, r2, ip, lsr #5
   1e14c:			; <UNDEFINED> instruction: 0x000212bc
   1e150:			; <UNDEFINED> instruction: 0x000212b4
   1e154:	andeq	r1, r2, r4, asr #5
   1e158:			; <UNDEFINED> instruction: 0x00020bb4
   1e15c:	muleq	r2, r4, fp
   1e160:	andeq	fp, r1, r0, lsr lr
   1e164:	andeq	r1, r2, r4, lsl r3
   1e168:	andeq	r1, r2, r4, lsr #6
   1e16c:	andeq	r1, r2, ip, lsl r3
   1e170:	andeq	r1, r2, ip, lsl #6
   1e174:	andeq	r0, r2, r4, ror #22
   1e178:	andeq	r1, r2, r8, lsr #6
   1e17c:	andeq	r1, r2, r8, lsr #4
   1e180:	andeq	r1, r2, r0, asr r2
   1e184:	strdeq	r1, [r2], -r8
   1e188:	str	r6, [sp]
   1e18c:	ldr	r3, [pc, #-20]	; 1e180 <argp_failure@@Base+0x1278>
   1e190:	mov	r1, r2
   1e194:	ldr	r0, [fp, #-104]	; 0xffffff98
   1e198:	bl	1cf08 <argp_failure@@Base>
   1e19c:	b	1d834 <argp_failure@@Base+0x92c>
   1e1a0:	mov	r0, r4
   1e1a4:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1e1a8:	b	1d660 <argp_failure@@Base+0x758>
   1e1ac:	ldr	r0, [r6, #16]
   1e1b0:	sub	r2, fp, #76	; 0x4c
   1e1b4:	ldr	r1, [r8, #20]
   1e1b8:	bl	1b43c <_obstack_memory_used@@Base+0xdf8>
   1e1bc:	b	1def4 <argp_failure@@Base+0xfec>
   1e1c0:	mov	r1, #1
   1e1c4:	mov	r0, r9
   1e1c8:	bl	1f7f0 <argp_error@@Base+0x1490>
   1e1cc:	cmp	r0, #0
   1e1d0:	beq	1d228 <argp_failure@@Base+0x320>
   1e1d4:	ldr	r3, [r9, #28]
   1e1d8:	b	1d218 <argp_failure@@Base+0x310>
   1e1dc:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1e1e0:	bl	118a0 <funlockfile@plt>
   1e1e4:	b	1d1e8 <argp_failure@@Base+0x2e0>
   1e1e8:	mov	r1, r6
   1e1ec:	mov	r0, r9
   1e1f0:	bl	1b364 <_obstack_memory_used@@Base+0xd20>
   1e1f4:	b	1de70 <argp_failure@@Base+0xf68>
   1e1f8:	mov	r1, #1
   1e1fc:	mov	r0, r9
   1e200:	bl	1f7f0 <argp_error@@Base+0x1490>
   1e204:	cmp	r0, #0
   1e208:	beq	1de70 <argp_failure@@Base+0xf68>
   1e20c:	ldr	r3, [r9, #28]
   1e210:	b	1de60 <argp_failure@@Base+0xf58>
   1e214:	mov	r1, #1
   1e218:	mov	r0, r9
   1e21c:	bl	1f7f0 <argp_error@@Base+0x1490>
   1e220:	cmp	r0, #0
   1e224:	beq	1d278 <argp_failure@@Base+0x370>
   1e228:	ldr	r3, [r9, #28]
   1e22c:	b	1d268 <argp_failure@@Base+0x360>
   1e230:	str	r6, [sp, #4]
   1e234:	str	r7, [sp]
   1e238:	ldr	r3, [pc, #-188]	; 1e184 <argp_failure@@Base+0x127c>
   1e23c:	mov	r2, #0
   1e240:	ldr	r0, [fp, #-104]	; 0xffffff98
   1e244:	bl	1cf08 <argp_failure@@Base>
   1e248:	b	1d810 <argp_failure@@Base+0x908>
   1e24c:	ldr	r3, [r9, #28]
   1e250:	b	1d638 <argp_failure@@Base+0x730>
   1e254:	mov	r1, #1
   1e258:	mov	r0, r9
   1e25c:	bl	1f7f0 <argp_error@@Base+0x1490>
   1e260:	cmp	r0, #0
   1e264:	beq	1d654 <argp_failure@@Base+0x74c>
   1e268:	ldr	r3, [r9, #28]
   1e26c:	b	1d644 <argp_failure@@Base+0x73c>
   1e270:	mov	r1, #1
   1e274:	mov	r0, r9
   1e278:	bl	1f7f0 <argp_error@@Base+0x1490>
   1e27c:	cmp	r0, #0
   1e280:	beq	1d5e4 <argp_failure@@Base+0x6dc>
   1e284:	ldr	r3, [r9, #28]
   1e288:	b	1d5d4 <argp_failure@@Base+0x6cc>

0001e28c <argp_help@@Base>:
   1e28c:	push	{lr}		; (str lr, [sp, #-4]!)
   1e290:	sub	sp, sp, #12
   1e294:	str	r3, [sp]
   1e298:	mov	r3, r2
   1e29c:	mov	r2, r1
   1e2a0:	mov	r1, #0
   1e2a4:	bl	1d110 <argp_failure@@Base+0x208>
   1e2a8:	add	sp, sp, #12
   1e2ac:	pop	{pc}		; (ldr pc, [sp], #4)

0001e2b0 <argp_state_help@@Base>:
   1e2b0:	push	{r4, r5, lr}
   1e2b4:	subs	r4, r0, #0
   1e2b8:	sub	sp, sp, #12
   1e2bc:	mov	r5, r2
   1e2c0:	beq	1e320 <argp_state_help@@Base+0x70>
   1e2c4:	ldr	r3, [r4, #16]
   1e2c8:	tst	r3, #2
   1e2cc:	bne	1e318 <argp_state_help@@Base+0x68>
   1e2d0:	cmp	r1, #0
   1e2d4:	beq	1e318 <argp_state_help@@Base+0x68>
   1e2d8:	tst	r3, #64	; 0x40
   1e2dc:	ldr	r3, [r4, #40]	; 0x28
   1e2e0:	orrne	r5, r5, #128	; 0x80
   1e2e4:	ldr	r0, [r4]
   1e2e8:	mov	r2, r1
   1e2ec:	str	r3, [sp]
   1e2f0:	mov	r1, r4
   1e2f4:	mov	r3, r5
   1e2f8:	bl	1d110 <argp_failure@@Base+0x208>
   1e2fc:	ldr	r3, [r4, #16]
   1e300:	tst	r3, #32
   1e304:	bne	1e318 <argp_state_help@@Base+0x68>
   1e308:	ands	r0, r5, #256	; 0x100
   1e30c:	bne	1e34c <argp_state_help@@Base+0x9c>
   1e310:	tst	r5, #512	; 0x200
   1e314:	bne	1e348 <argp_state_help@@Base+0x98>
   1e318:	add	sp, sp, #12
   1e31c:	pop	{r4, r5, pc}
   1e320:	cmp	r1, #0
   1e324:	beq	1e318 <argp_state_help@@Base+0x68>
   1e328:	ldr	r3, [pc, #40]	; 1e358 <argp_state_help@@Base+0xa8>
   1e32c:	mov	r2, r1
   1e330:	mov	r1, r4
   1e334:	ldr	ip, [r3]
   1e338:	mov	r3, r5
   1e33c:	str	ip, [sp]
   1e340:	bl	1d110 <argp_failure@@Base+0x208>
   1e344:	b	1e308 <argp_state_help@@Base+0x58>
   1e348:	bl	119a8 <exit@plt>
   1e34c:	ldr	r3, [pc, #8]	; 1e35c <argp_state_help@@Base+0xac>
   1e350:	ldr	r0, [r3]
   1e354:	bl	119a8 <exit@plt>
   1e358:	andeq	r2, r3, r0, lsl #10
   1e35c:	strdeq	r2, [r3], -r8

0001e360 <argp_error@@Base>:
   1e360:	push	{r1, r2, r3}
   1e364:	push	{r4, r5, lr}
   1e368:	subs	r5, r0, #0
   1e36c:	sub	sp, sp, #8
   1e370:	beq	1e440 <argp_error@@Base+0xe0>
   1e374:	ldr	r3, [r5, #16]
   1e378:	tst	r3, #2
   1e37c:	bne	1e430 <argp_error@@Base+0xd0>
   1e380:	ldr	r4, [r5, #44]	; 0x2c
   1e384:	cmp	r4, #0
   1e388:	beq	1e430 <argp_error@@Base+0xd0>
   1e38c:	mov	r0, r4
   1e390:	bl	11b1c <flockfile@plt>
   1e394:	ldr	r0, [r5, #40]	; 0x28
   1e398:	add	r3, sp, #24
   1e39c:	str	r3, [sp, #4]
   1e3a0:	mov	r1, r4
   1e3a4:	bl	11774 <fputs_unlocked@plt>
   1e3a8:	ldr	r3, [r4, #20]
   1e3ac:	ldr	r2, [r4, #24]
   1e3b0:	cmp	r3, r2
   1e3b4:	addcc	r1, r3, #1
   1e3b8:	movcc	r2, #58	; 0x3a
   1e3bc:	strcc	r1, [r4, #20]
   1e3c0:	strbcc	r2, [r3]
   1e3c4:	bcs	1e48c <argp_error@@Base+0x12c>
   1e3c8:	ldr	r3, [r4, #20]
   1e3cc:	ldr	r2, [r4, #24]
   1e3d0:	cmp	r3, r2
   1e3d4:	addcc	r1, r3, #1
   1e3d8:	movcc	r2, #32
   1e3dc:	strcc	r1, [r4, #20]
   1e3e0:	strbcc	r2, [r3]
   1e3e4:	bcs	1e47c <argp_error@@Base+0x11c>
   1e3e8:	ldr	r1, [sp, #20]
   1e3ec:	ldr	r2, [sp, #4]
   1e3f0:	mov	r0, r4
   1e3f4:	bl	11ad4 <vfprintf@plt>
   1e3f8:	ldr	r3, [r4, #20]
   1e3fc:	ldr	r2, [r4, #24]
   1e400:	cmp	r3, r2
   1e404:	addcc	r1, r3, #1
   1e408:	movcc	r2, #10
   1e40c:	strcc	r1, [r4, #20]
   1e410:	strbcc	r2, [r3]
   1e414:	bcs	1e46c <argp_error@@Base+0x10c>
   1e418:	mov	r0, r5
   1e41c:	mov	r2, #260	; 0x104
   1e420:	mov	r1, r4
   1e424:	bl	1e2b0 <argp_state_help@@Base>
   1e428:	mov	r0, r4
   1e42c:	bl	118a0 <funlockfile@plt>
   1e430:	add	sp, sp, #8
   1e434:	pop	{r4, r5, lr}
   1e438:	add	sp, sp, #12
   1e43c:	bx	lr
   1e440:	ldr	r3, [pc, #84]	; 1e49c <argp_error@@Base+0x13c>
   1e444:	ldr	r4, [r3]
   1e448:	cmp	r4, #0
   1e44c:	beq	1e430 <argp_error@@Base+0xd0>
   1e450:	mov	r0, r4
   1e454:	bl	11b1c <flockfile@plt>
   1e458:	ldr	r2, [pc, #64]	; 1e4a0 <argp_error@@Base+0x140>
   1e45c:	add	r3, sp, #24
   1e460:	str	r3, [sp, #4]
   1e464:	ldr	r0, [r2]
   1e468:	b	1e3a0 <argp_error@@Base+0x40>
   1e46c:	mov	r1, #10
   1e470:	mov	r0, r4
   1e474:	bl	11aa4 <__overflow@plt>
   1e478:	b	1e418 <argp_error@@Base+0xb8>
   1e47c:	mov	r1, #32
   1e480:	mov	r0, r4
   1e484:	bl	11aa4 <__overflow@plt>
   1e488:	b	1e3e8 <argp_error@@Base+0x88>
   1e48c:	mov	r1, #58	; 0x3a
   1e490:	mov	r0, r4
   1e494:	bl	11aa4 <__overflow@plt>
   1e498:	b	1e3c8 <argp_error@@Base+0x68>
   1e49c:	andeq	r2, r3, r0, lsl r5
   1e4a0:	andeq	r2, r3, r0, lsl #10
   1e4a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e4a8:	ldr	r4, [r1, #32]
   1e4ac:	ldr	r8, [r1, #28]
   1e4b0:	ldr	r7, [r1]
   1e4b4:	add	r6, r0, r4, lsl #2
   1e4b8:	mov	r2, r8
   1e4bc:	mov	r5, r7
   1e4c0:	cmp	r5, r4
   1e4c4:	movle	r3, #0
   1e4c8:	movgt	r3, #1
   1e4cc:	cmp	r2, r4
   1e4d0:	movge	r3, #0
   1e4d4:	cmp	r3, #0
   1e4d8:	beq	1e54c <argp_error@@Base+0x1ec>
   1e4dc:	sub	r3, r5, r4
   1e4e0:	sub	sl, r4, r2
   1e4e4:	cmp	r3, sl
   1e4e8:	ble	1e51c <argp_error@@Base+0x1bc>
   1e4ec:	sub	r5, r5, sl
   1e4f0:	add	sl, sl, r2
   1e4f4:	add	ip, r0, r5, lsl #2
   1e4f8:	add	sl, r0, sl, lsl #2
   1e4fc:	add	r3, r0, r2, lsl #2
   1e500:	ldr	r9, [ip]
   1e504:	ldr	lr, [r3]
   1e508:	str	r9, [r3], #4
   1e50c:	cmp	sl, r3
   1e510:	str	lr, [ip], #4
   1e514:	bne	1e500 <argp_error@@Base+0x1a0>
   1e518:	b	1e4c0 <argp_error@@Base+0x160>
   1e51c:	add	sl, r3, r2
   1e520:	add	r3, r0, r2, lsl #2
   1e524:	add	r9, r0, sl, lsl #2
   1e528:	mov	r2, r6
   1e52c:	ldr	lr, [r2]
   1e530:	ldr	ip, [r3]
   1e534:	str	lr, [r3], #4
   1e538:	cmp	r3, r9
   1e53c:	str	ip, [r2], #4
   1e540:	bne	1e52c <argp_error@@Base+0x1cc>
   1e544:	mov	r2, sl
   1e548:	b	1e4c0 <argp_error@@Base+0x160>
   1e54c:	sub	r4, r7, r4
   1e550:	add	r8, r4, r8
   1e554:	str	r8, [r1, #28]
   1e558:	str	r7, [r1, #32]
   1e55c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e564:	sub	sp, sp, #44	; 0x2c
   1e568:	str	r1, [sp, #20]
   1e56c:	ldr	r1, [sp, #88]	; 0x58
   1e570:	str	r0, [sp, #24]
   1e574:	str	r2, [sp, #28]
   1e578:	ldr	r8, [r1, #20]
   1e57c:	str	r3, [sp, #12]
   1e580:	mov	r7, r8
   1e584:	ldrb	r5, [r8]
   1e588:	cmp	r5, #61	; 0x3d
   1e58c:	cmpne	r5, #0
   1e590:	movne	r5, #1
   1e594:	moveq	r5, #0
   1e598:	beq	1e5b0 <argp_error@@Base+0x250>
   1e59c:	ldrb	r3, [r7, #1]!
   1e5a0:	cmp	r3, #0
   1e5a4:	cmpne	r3, #61	; 0x3d
   1e5a8:	bne	1e59c <argp_error@@Base+0x23c>
   1e5ac:	sub	r5, r7, r8
   1e5b0:	ldr	r3, [sp, #12]
   1e5b4:	ldr	sl, [r3]
   1e5b8:	cmp	sl, #0
   1e5bc:	beq	1e870 <argp_error@@Base+0x510>
   1e5c0:	mov	fp, r3
   1e5c4:	mov	r4, sl
   1e5c8:	mov	r6, #0
   1e5cc:	mov	r2, r5
   1e5d0:	mov	r1, r8
   1e5d4:	mov	r0, r4
   1e5d8:	bl	11ba0 <strncmp@plt>
   1e5dc:	mov	r9, fp
   1e5e0:	cmp	r0, #0
   1e5e4:	mov	r0, r4
   1e5e8:	bne	1e5f8 <argp_error@@Base+0x298>
   1e5ec:	bl	119c0 <strlen@plt>
   1e5f0:	cmp	r0, r5
   1e5f4:	beq	1e684 <argp_error@@Base+0x324>
   1e5f8:	ldr	r4, [fp, #16]!
   1e5fc:	add	r6, r6, #1
   1e600:	cmp	r4, #0
   1e604:	bne	1e5cc <argp_error@@Base+0x26c>
   1e608:	ldr	r3, [sp, #12]
   1e60c:	ldr	fp, [sp, #88]	; 0x58
   1e610:	mov	r0, sl
   1e614:	mov	r1, r8
   1e618:	mov	r9, r4
   1e61c:	mov	sl, r4
   1e620:	mov	r8, r3
   1e624:	mvn	r2, #0
   1e628:	str	r4, [sp, #36]	; 0x24
   1e62c:	str	r4, [sp, #16]
   1e630:	str	r2, [sp, #32]
   1e634:	mov	r2, r5
   1e638:	bl	11ba0 <strncmp@plt>
   1e63c:	cmp	r0, #0
   1e640:	bne	1e660 <argp_error@@Base+0x300>
   1e644:	cmp	r9, #0
   1e648:	beq	1e8e0 <argp_error@@Base+0x580>
   1e64c:	ldr	r3, [sp, #84]	; 0x54
   1e650:	cmp	r3, #0
   1e654:	beq	1e728 <argp_error@@Base+0x3c8>
   1e658:	cmp	r4, #0
   1e65c:	beq	1e75c <argp_error@@Base+0x3fc>
   1e660:	ldr	r0, [r8, #16]!
   1e664:	add	sl, sl, #1
   1e668:	cmp	r0, #0
   1e66c:	beq	1e790 <argp_error@@Base+0x430>
   1e670:	ldr	r1, [fp, #20]
   1e674:	b	1e634 <argp_error@@Base+0x2d4>
   1e678:	cmp	r9, #0
   1e67c:	beq	1e870 <argp_error@@Base+0x510>
   1e680:	ldr	r6, [sp, #32]
   1e684:	ldr	r3, [sp, #88]	; 0x58
   1e688:	ldr	r0, [sp, #88]	; 0x58
   1e68c:	mov	r1, #0
   1e690:	ldr	r2, [r3]
   1e694:	str	r1, [r0, #20]
   1e698:	add	r3, r2, #1
   1e69c:	str	r3, [r0]
   1e6a0:	ldrb	r1, [r7]
   1e6a4:	cmp	r1, #0
   1e6a8:	bne	1e6e8 <argp_error@@Base+0x388>
   1e6ac:	ldr	r1, [r9, #4]
   1e6b0:	cmp	r1, #1
   1e6b4:	beq	1e8ec <argp_error@@Base+0x58c>
   1e6b8:	ldr	r3, [sp, #80]	; 0x50
   1e6bc:	ldr	r2, [r9, #8]
   1e6c0:	cmp	r3, #0
   1e6c4:	strne	r6, [r3]
   1e6c8:	cmp	r2, #0
   1e6cc:	movne	r3, #0
   1e6d0:	ldreq	r3, [r9, #12]
   1e6d4:	ldrne	r1, [r9, #12]
   1e6d8:	strne	r1, [r2]
   1e6dc:	mov	r0, r3
   1e6e0:	add	sp, sp, #44	; 0x2c
   1e6e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e6e8:	ldr	r3, [r9, #4]
   1e6ec:	cmp	r3, #0
   1e6f0:	movne	r3, r0
   1e6f4:	addne	r7, r7, #1
   1e6f8:	strne	r7, [r3, #12]
   1e6fc:	bne	1e6b8 <argp_error@@Base+0x358>
   1e700:	ldr	r3, [sp, #92]	; 0x5c
   1e704:	cmp	r3, #0
   1e708:	bne	1e838 <argp_error@@Base+0x4d8>
   1e70c:	ldr	r1, [sp, #88]	; 0x58
   1e710:	ldr	r2, [r9, #12]
   1e714:	mov	r3, #63	; 0x3f
   1e718:	str	r2, [r1, #8]
   1e71c:	mov	r0, r3
   1e720:	add	sp, sp, #44	; 0x2c
   1e724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e728:	ldr	r2, [r9, #4]
   1e72c:	ldr	r3, [r8, #4]
   1e730:	cmp	r2, r3
   1e734:	bne	1e658 <argp_error@@Base+0x2f8>
   1e738:	ldr	r2, [r9, #8]
   1e73c:	ldr	r3, [r8, #8]
   1e740:	cmp	r2, r3
   1e744:	bne	1e658 <argp_error@@Base+0x2f8>
   1e748:	ldr	r2, [r9, #12]
   1e74c:	ldr	r3, [r8, #12]
   1e750:	cmp	r2, r3
   1e754:	bne	1e658 <argp_error@@Base+0x2f8>
   1e758:	b	1e660 <argp_error@@Base+0x300>
   1e75c:	ldr	r3, [sp, #92]	; 0x5c
   1e760:	cmp	r3, #0
   1e764:	ldr	r3, [sp, #16]
   1e768:	beq	1e828 <argp_error@@Base+0x4c8>
   1e76c:	cmp	r3, #0
   1e770:	beq	1ea44 <argp_error@@Base+0x6e4>
   1e774:	ldr	r3, [sp, #16]
   1e778:	ldr	r0, [r8, #16]!
   1e77c:	mov	r2, #1
   1e780:	cmp	r0, #0
   1e784:	strb	r2, [r3, sl]
   1e788:	add	sl, sl, #1
   1e78c:	bne	1e670 <argp_error@@Base+0x310>
   1e790:	ldr	r3, [sp, #16]
   1e794:	cmp	r3, #0
   1e798:	cmpeq	r4, #0
   1e79c:	beq	1e678 <argp_error@@Base+0x318>
   1e7a0:	ldr	r3, [sp, #92]	; 0x5c
   1e7a4:	cmp	r3, #0
   1e7a8:	beq	1e928 <argp_error@@Base+0x5c8>
   1e7ac:	cmp	r4, #0
   1e7b0:	bne	1e9b0 <argp_error@@Base+0x650>
   1e7b4:	ldr	r5, [pc, #716]	; 1ea88 <argp_error@@Base+0x728>
   1e7b8:	ldr	r8, [sp, #16]
   1e7bc:	ldr	r7, [pc, #712]	; 1ea8c <argp_error@@Base+0x72c>
   1e7c0:	ldr	r0, [r5]
   1e7c4:	bl	11b1c <flockfile@plt>
   1e7c8:	ldr	r3, [sp, #20]
   1e7cc:	ldr	r0, [r5]
   1e7d0:	ldr	r1, [pc, #696]	; 1ea90 <argp_error@@Base+0x730>
   1e7d4:	ldr	r2, [r3]
   1e7d8:	ldr	r3, [sp, #88]	; 0x58
   1e7dc:	add	r6, r8, r6
   1e7e0:	ldr	r3, [r3, #20]
   1e7e4:	str	r3, [sp]
   1e7e8:	ldr	r3, [sp, #96]	; 0x60
   1e7ec:	bl	119e4 <fprintf@plt>
   1e7f0:	ldr	r9, [sp, #12]
   1e7f4:	b	1e804 <argp_error@@Base+0x4a4>
   1e7f8:	cmp	r8, r6
   1e7fc:	add	r4, r4, #1
   1e800:	beq	1e914 <argp_error@@Base+0x5b4>
   1e804:	ldrb	r3, [r8], #1
   1e808:	cmp	r3, #0
   1e80c:	beq	1e7f8 <argp_error@@Base+0x498>
   1e810:	ldr	r3, [r9, r4, lsl #4]
   1e814:	ldr	r2, [sp, #96]	; 0x60
   1e818:	mov	r1, r7
   1e81c:	ldr	r0, [r5]
   1e820:	bl	119e4 <fprintf@plt>
   1e824:	b	1e7f8 <argp_error@@Base+0x498>
   1e828:	cmp	r3, #0
   1e82c:	mov	r4, #1
   1e830:	bne	1e774 <argp_error@@Base+0x414>
   1e834:	b	1e660 <argp_error@@Base+0x300>
   1e838:	ldr	r3, [sp, #20]
   1e83c:	ldr	r1, [pc, #580]	; 1ea88 <argp_error@@Base+0x728>
   1e840:	ldr	r2, [r3]
   1e844:	ldr	r3, [r9]
   1e848:	ldr	r0, [r1]
   1e84c:	str	r3, [sp]
   1e850:	ldr	r1, [pc, #572]	; 1ea94 <argp_error@@Base+0x734>
   1e854:	ldr	r3, [sp, #96]	; 0x60
   1e858:	bl	119e4 <fprintf@plt>
   1e85c:	ldr	r1, [sp, #88]	; 0x58
   1e860:	ldr	r2, [r9, #12]
   1e864:	mov	r3, #63	; 0x3f
   1e868:	str	r2, [r1, #8]
   1e86c:	b	1e71c <argp_error@@Base+0x3bc>
   1e870:	ldr	r3, [sp, #84]	; 0x54
   1e874:	cmp	r3, #0
   1e878:	bne	1ea04 <argp_error@@Base+0x6a4>
   1e87c:	ldr	r3, [sp, #92]	; 0x5c
   1e880:	cmp	r3, #0
   1e884:	beq	1e8b0 <argp_error@@Base+0x550>
   1e888:	ldr	r3, [sp, #20]
   1e88c:	ldr	r1, [pc, #500]	; 1ea88 <argp_error@@Base+0x728>
   1e890:	ldr	r2, [r3]
   1e894:	ldr	r3, [sp, #88]	; 0x58
   1e898:	ldr	r0, [r1]
   1e89c:	ldr	r1, [pc, #500]	; 1ea98 <argp_error@@Base+0x738>
   1e8a0:	ldr	r3, [r3, #20]
   1e8a4:	str	r3, [sp]
   1e8a8:	ldr	r3, [sp, #96]	; 0x60
   1e8ac:	bl	119e4 <fprintf@plt>
   1e8b0:	ldr	r3, [sp, #88]	; 0x58
   1e8b4:	ldr	r1, [sp, #88]	; 0x58
   1e8b8:	mov	r2, #0
   1e8bc:	ldr	r3, [r3]
   1e8c0:	str	r2, [r1, #20]
   1e8c4:	add	r3, r3, #1
   1e8c8:	str	r3, [r1]
   1e8cc:	mov	r3, #63	; 0x3f
   1e8d0:	mov	r0, r3
   1e8d4:	str	r2, [r1, #8]
   1e8d8:	add	sp, sp, #44	; 0x2c
   1e8dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8e0:	str	sl, [sp, #32]
   1e8e4:	mov	r9, r8
   1e8e8:	b	1e660 <argp_error@@Base+0x300>
   1e8ec:	ldr	r1, [sp, #24]
   1e8f0:	cmp	r3, r1
   1e8f4:	bge	1e980 <argp_error@@Base+0x620>
   1e8f8:	ldr	r1, [sp, #20]
   1e8fc:	add	r2, r2, #2
   1e900:	ldr	r3, [r1, r3, lsl #2]
   1e904:	ldr	r1, [sp, #88]	; 0x58
   1e908:	str	r3, [r1, #12]
   1e90c:	str	r2, [r1]
   1e910:	b	1e6b8 <argp_error@@Base+0x358>
   1e914:	ldr	r1, [r5]
   1e918:	mov	r0, #10
   1e91c:	bl	11ae0 <fputc@plt>
   1e920:	ldr	r0, [r5]
   1e924:	bl	118a0 <funlockfile@plt>
   1e928:	ldr	r3, [sp, #36]	; 0x24
   1e92c:	cmp	r3, #0
   1e930:	beq	1e93c <argp_error@@Base+0x5dc>
   1e934:	ldr	r0, [sp, #16]
   1e938:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1e93c:	ldr	r3, [sp, #88]	; 0x58
   1e940:	ldr	r4, [r3, #20]
   1e944:	mov	r0, r4
   1e948:	bl	119c0 <strlen@plt>
   1e94c:	ldr	r3, [sp, #88]	; 0x58
   1e950:	ldr	r1, [sp, #88]	; 0x58
   1e954:	mov	r2, #0
   1e958:	ldr	r3, [r3]
   1e95c:	str	r2, [r1, #8]
   1e960:	add	r3, r3, #1
   1e964:	str	r3, [r1]
   1e968:	mov	r3, #63	; 0x3f
   1e96c:	add	r0, r4, r0
   1e970:	str	r0, [r1, #20]
   1e974:	mov	r0, r3
   1e978:	add	sp, sp, #44	; 0x2c
   1e97c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e980:	ldr	r3, [sp, #92]	; 0x5c
   1e984:	cmp	r3, #0
   1e988:	bne	1e9dc <argp_error@@Base+0x67c>
   1e98c:	ldr	r2, [sp, #88]	; 0x58
   1e990:	ldr	r3, [r9, #12]
   1e994:	str	r3, [r2, #8]
   1e998:	ldr	r3, [sp, #28]
   1e99c:	ldrb	r3, [r3]
   1e9a0:	cmp	r3, #58	; 0x3a
   1e9a4:	movne	r3, #63	; 0x3f
   1e9a8:	moveq	r3, #58	; 0x3a
   1e9ac:	b	1e6dc <argp_error@@Base+0x37c>
   1e9b0:	ldr	r3, [sp, #20]
   1e9b4:	ldr	r1, [pc, #204]	; 1ea88 <argp_error@@Base+0x728>
   1e9b8:	ldr	r2, [r3]
   1e9bc:	ldr	r3, [sp, #88]	; 0x58
   1e9c0:	ldr	r0, [r1]
   1e9c4:	ldr	r1, [pc, #208]	; 1ea9c <argp_error@@Base+0x73c>
   1e9c8:	ldr	r3, [r3, #20]
   1e9cc:	str	r3, [sp]
   1e9d0:	ldr	r3, [sp, #96]	; 0x60
   1e9d4:	bl	119e4 <fprintf@plt>
   1e9d8:	b	1e928 <argp_error@@Base+0x5c8>
   1e9dc:	ldr	r3, [sp, #20]
   1e9e0:	ldr	r1, [pc, #160]	; 1ea88 <argp_error@@Base+0x728>
   1e9e4:	ldr	r2, [r3]
   1e9e8:	ldr	r3, [r9]
   1e9ec:	ldr	r0, [r1]
   1e9f0:	str	r3, [sp]
   1e9f4:	ldr	r1, [pc, #164]	; 1eaa0 <argp_error@@Base+0x740>
   1e9f8:	ldr	r3, [sp, #96]	; 0x60
   1e9fc:	bl	119e4 <fprintf@plt>
   1ea00:	b	1e98c <argp_error@@Base+0x62c>
   1ea04:	ldr	r3, [sp, #88]	; 0x58
   1ea08:	ldr	r2, [sp, #20]
   1ea0c:	ldr	r3, [r3]
   1ea10:	ldr	r3, [r2, r3, lsl #2]
   1ea14:	ldrb	r3, [r3, #1]
   1ea18:	cmp	r3, #45	; 0x2d
   1ea1c:	beq	1e87c <argp_error@@Base+0x51c>
   1ea20:	ldr	r3, [sp, #88]	; 0x58
   1ea24:	ldr	r0, [sp, #28]
   1ea28:	ldr	r3, [r3, #20]
   1ea2c:	ldrb	r1, [r3]
   1ea30:	bl	119cc <strchr@plt>
   1ea34:	cmp	r0, #0
   1ea38:	beq	1e87c <argp_error@@Base+0x51c>
   1ea3c:	mvn	r3, #0
   1ea40:	b	1e6dc <argp_error@@Base+0x37c>
   1ea44:	mov	r0, r6
   1ea48:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1ea4c:	subs	r3, r0, #0
   1ea50:	str	r3, [sp, #16]
   1ea54:	beq	1ea80 <argp_error@@Base+0x720>
   1ea58:	mov	r2, r6
   1ea5c:	mov	r1, #0
   1ea60:	bl	11a38 <memset@plt>
   1ea64:	mov	r3, #1
   1ea68:	str	r3, [sp, #36]	; 0x24
   1ea6c:	ldr	r2, [sp, #32]
   1ea70:	ldr	r3, [sp, #16]
   1ea74:	mov	r1, #1
   1ea78:	strb	r1, [r3, r2]
   1ea7c:	b	1e774 <argp_error@@Base+0x414>
   1ea80:	mov	r4, #1
   1ea84:	b	1e660 <argp_error@@Base+0x300>
   1ea88:	andeq	r2, r3, r0, lsl r5
   1ea8c:	andeq	r1, r2, r4, lsl #8
   1ea90:	ldrdeq	r1, [r2], -r4
   1ea94:	andeq	r1, r2, ip, lsr #8
   1ea98:	andeq	r1, r2, ip, lsl #8
   1ea9c:			; <UNDEFINED> instruction: 0x000213b4
   1eaa0:	andeq	r1, r2, ip, asr r4
   1eaa4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eaa8:	sub	sp, sp, #36	; 0x24
   1eaac:	subs	r6, r0, #0
   1eab0:	ldr	r4, [sp, #80]	; 0x50
   1eab4:	ldr	r8, [r4, #4]
   1eab8:	ble	1ec94 <argp_error@@Base+0x934>
   1eabc:	mov	sl, r3
   1eac0:	ldr	r3, [r4]
   1eac4:	mov	r7, r2
   1eac8:	mov	r2, #0
   1eacc:	cmp	r3, r2
   1ead0:	mov	r9, r1
   1ead4:	str	r2, [r4, #12]
   1ead8:	beq	1ed1c <argp_error@@Base+0x9bc>
   1eadc:	ldr	r2, [r4, #16]
   1eae0:	cmp	r2, #0
   1eae4:	bne	1eca0 <argp_error@@Base+0x940>
   1eae8:	mov	r5, #0
   1eaec:	str	r3, [r4, #32]
   1eaf0:	str	r3, [r4, #28]
   1eaf4:	str	r5, [r4, #20]
   1eaf8:	ldrb	r3, [r7]
   1eafc:	cmp	r3, #45	; 0x2d
   1eb00:	moveq	r3, #2
   1eb04:	addeq	r7, r7, #1
   1eb08:	streq	r3, [r4, #24]
   1eb0c:	beq	1eb34 <argp_error@@Base+0x7d4>
   1eb10:	cmp	r3, #43	; 0x2b
   1eb14:	streq	r5, [r4, #24]
   1eb18:	addeq	r7, r7, #1
   1eb1c:	beq	1eb34 <argp_error@@Base+0x7d4>
   1eb20:	ldr	r3, [sp, #84]	; 0x54
   1eb24:	cmp	r3, #0
   1eb28:	beq	1edbc <argp_error@@Base+0xa5c>
   1eb2c:	mov	r3, #0
   1eb30:	str	r3, [r4, #24]
   1eb34:	mov	r3, #1
   1eb38:	str	r3, [r4, #16]
   1eb3c:	ldrb	r3, [r7]
   1eb40:	cmp	r3, #58	; 0x3a
   1eb44:	moveq	r8, #0
   1eb48:	cmp	r5, #0
   1eb4c:	beq	1ec00 <argp_error@@Base+0x8a0>
   1eb50:	ldrb	r3, [r5]
   1eb54:	cmp	r3, #0
   1eb58:	beq	1ec00 <argp_error@@Base+0x8a0>
   1eb5c:	add	r3, r5, #1
   1eb60:	str	r3, [r4, #20]
   1eb64:	ldrb	fp, [r5]
   1eb68:	mov	r0, r7
   1eb6c:	str	r3, [sp, #28]
   1eb70:	mov	r1, fp
   1eb74:	bl	119cc <strchr@plt>
   1eb78:	ldrb	r1, [r5, #1]
   1eb7c:	ldr	r3, [sp, #28]
   1eb80:	cmp	r1, #0
   1eb84:	ldreq	r1, [r4]
   1eb88:	addeq	r1, r1, #1
   1eb8c:	streq	r1, [r4]
   1eb90:	sub	r1, fp, #58	; 0x3a
   1eb94:	mov	r2, r0
   1eb98:	cmp	r2, #0
   1eb9c:	cmpne	r1, #1
   1eba0:	mov	r0, fp
   1eba4:	bls	1ecec <argp_error@@Base+0x98c>
   1eba8:	ldrb	r1, [r2]
   1ebac:	cmp	r1, #87	; 0x57
   1ebb0:	ldrb	r1, [r2, #1]
   1ebb4:	beq	1ee40 <argp_error@@Base+0xae0>
   1ebb8:	cmp	r1, #58	; 0x3a
   1ebbc:	bne	1ece4 <argp_error@@Base+0x984>
   1ebc0:	ldrb	r2, [r2, #2]
   1ebc4:	cmp	r2, #58	; 0x3a
   1ebc8:	ldrb	r2, [r5, #1]
   1ebcc:	beq	1eec8 <argp_error@@Base+0xb68>
   1ebd0:	cmp	r2, #0
   1ebd4:	bne	1eed4 <argp_error@@Base+0xb74>
   1ebd8:	ldr	r3, [r4]
   1ebdc:	cmp	r6, r3
   1ebe0:	beq	1ef74 <argp_error@@Base+0xc14>
   1ebe4:	ldr	r2, [r9, r3, lsl #2]
   1ebe8:	add	r3, r3, #1
   1ebec:	str	r2, [r4, #12]
   1ebf0:	str	r3, [r4]
   1ebf4:	mov	r3, #0
   1ebf8:	str	r3, [r4, #20]
   1ebfc:	b	1ece4 <argp_error@@Base+0x984>
   1ec00:	ldr	fp, [r4]
   1ec04:	ldr	r3, [r4, #32]
   1ec08:	cmp	r3, fp
   1ec0c:	ldr	r3, [r4, #28]
   1ec10:	strgt	fp, [r4, #32]
   1ec14:	cmp	fp, r3
   1ec18:	ldr	r3, [r4, #24]
   1ec1c:	strlt	fp, [r4, #28]
   1ec20:	cmp	r3, #1
   1ec24:	beq	1ed2c <argp_error@@Base+0x9cc>
   1ec28:	cmp	r6, fp
   1ec2c:	beq	1eda4 <argp_error@@Base+0xa44>
   1ec30:	ldr	r3, [pc, #944]	; 1efe8 <argp_error@@Base+0xc88>
   1ec34:	ldr	r5, [r9, fp, lsl #2]
   1ec38:	mov	r1, r3
   1ec3c:	mov	r0, r5
   1ec40:	str	r3, [sp, #28]
   1ec44:	bl	1178c <strcmp@plt>
   1ec48:	ldr	r3, [sp, #28]
   1ec4c:	cmp	r0, #0
   1ec50:	bne	1ecbc <argp_error@@Base+0x95c>
   1ec54:	ldr	r3, [r4, #28]
   1ec58:	ldr	r2, [r4, #32]
   1ec5c:	add	fp, fp, #1
   1ec60:	cmp	r3, r2
   1ec64:	str	fp, [r4]
   1ec68:	beq	1ee34 <argp_error@@Base+0xad4>
   1ec6c:	cmp	fp, r2
   1ec70:	beq	1ec84 <argp_error@@Base+0x924>
   1ec74:	mov	r0, r9
   1ec78:	mov	r1, r4
   1ec7c:	bl	1e4a4 <argp_error@@Base+0x144>
   1ec80:	ldr	r3, [r4, #28]
   1ec84:	cmp	r3, r6
   1ec88:	str	r6, [r4]
   1ec8c:	str	r6, [r4, #32]
   1ec90:	strne	r3, [r4]
   1ec94:	mvn	r0, #0
   1ec98:	add	sp, sp, #36	; 0x24
   1ec9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eca0:	ldrb	r3, [r7]
   1eca4:	ldr	r5, [r4, #20]
   1eca8:	sub	r2, r3, #43	; 0x2b
   1ecac:	tst	r2, #253	; 0xfd
   1ecb0:	ldrbeq	r3, [r7, #1]
   1ecb4:	addeq	r7, r7, #1
   1ecb8:	b	1eb40 <argp_error@@Base+0x7e0>
   1ecbc:	ldrb	r2, [r5]
   1ecc0:	cmp	r2, #45	; 0x2d
   1ecc4:	beq	1ede8 <argp_error@@Base+0xa88>
   1ecc8:	ldr	r3, [r4, #24]
   1eccc:	cmp	r3, #0
   1ecd0:	beq	1ec94 <argp_error@@Base+0x934>
   1ecd4:	mov	r0, #1
   1ecd8:	add	fp, fp, #1
   1ecdc:	str	fp, [r4]
   1ece0:	str	r5, [r4, #12]
   1ece4:	add	sp, sp, #36	; 0x24
   1ece8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ecec:	cmp	r8, #0
   1ecf0:	beq	1ed0c <argp_error@@Base+0x9ac>
   1ecf4:	ldr	r1, [pc, #752]	; 1efec <argp_error@@Base+0xc8c>
   1ecf8:	ldr	r2, [r9]
   1ecfc:	mov	r3, fp
   1ed00:	ldr	r0, [r1]
   1ed04:	ldr	r1, [pc, #740]	; 1eff0 <argp_error@@Base+0xc90>
   1ed08:	bl	119e4 <fprintf@plt>
   1ed0c:	mov	r0, #63	; 0x3f
   1ed10:	str	fp, [r4, #8]
   1ed14:	add	sp, sp, #36	; 0x24
   1ed18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ed1c:	mov	r2, #1
   1ed20:	mov	r3, r2
   1ed24:	str	r2, [r4]
   1ed28:	b	1eae8 <argp_error@@Base+0x788>
   1ed2c:	ldr	r2, [r4, #28]
   1ed30:	ldr	r3, [r4, #32]
   1ed34:	cmp	r2, r3
   1ed38:	beq	1eeb8 <argp_error@@Base+0xb58>
   1ed3c:	cmp	fp, r3
   1ed40:	beq	1ed54 <argp_error@@Base+0x9f4>
   1ed44:	mov	r1, r4
   1ed48:	mov	r0, r9
   1ed4c:	bl	1e4a4 <argp_error@@Base+0x144>
   1ed50:	ldr	r3, [r4]
   1ed54:	cmp	r6, r3
   1ed58:	movle	fp, r3
   1ed5c:	ble	1ed98 <argp_error@@Base+0xa38>
   1ed60:	add	r1, r9, r3, lsl #2
   1ed64:	b	1ed78 <argp_error@@Base+0xa18>
   1ed68:	add	r3, r3, #1
   1ed6c:	cmp	r6, r3
   1ed70:	str	r3, [r4]
   1ed74:	beq	1eddc <argp_error@@Base+0xa7c>
   1ed78:	ldr	r2, [r1], #4
   1ed7c:	ldrb	r0, [r2]
   1ed80:	cmp	r0, #45	; 0x2d
   1ed84:	bne	1ed68 <argp_error@@Base+0xa08>
   1ed88:	ldrb	r2, [r2, #1]
   1ed8c:	cmp	r2, #0
   1ed90:	beq	1ed68 <argp_error@@Base+0xa08>
   1ed94:	ldr	fp, [r4]
   1ed98:	str	r3, [r4, #32]
   1ed9c:	cmp	r6, fp
   1eda0:	bne	1ec30 <argp_error@@Base+0x8d0>
   1eda4:	ldr	r3, [r4, #28]
   1eda8:	ldr	r6, [r4, #32]
   1edac:	mvn	r0, #0
   1edb0:	cmp	r3, r6
   1edb4:	strne	r3, [r4]
   1edb8:	b	1ec98 <argp_error@@Base+0x938>
   1edbc:	ldr	r0, [pc, #560]	; 1eff4 <argp_error@@Base+0xc94>
   1edc0:	bl	11924 <getenv@plt>
   1edc4:	ldr	r5, [r4, #20]
   1edc8:	cmp	r0, #0
   1edcc:	bne	1eb2c <argp_error@@Base+0x7cc>
   1edd0:	mov	r3, #1
   1edd4:	str	r3, [r4, #24]
   1edd8:	b	1eb34 <argp_error@@Base+0x7d4>
   1eddc:	mov	fp, r6
   1ede0:	str	r3, [r4, #32]
   1ede4:	b	1ed9c <argp_error@@Base+0xa3c>
   1ede8:	ldrb	r1, [r5, #1]
   1edec:	cmp	r1, #0
   1edf0:	beq	1ecc8 <argp_error@@Base+0x968>
   1edf4:	cmp	sl, #0
   1edf8:	beq	1ee2c <argp_error@@Base+0xacc>
   1edfc:	cmp	r1, #45	; 0x2d
   1ee00:	beq	1ef38 <argp_error@@Base+0xbd8>
   1ee04:	ldr	r3, [sp, #76]	; 0x4c
   1ee08:	cmp	r3, #0
   1ee0c:	beq	1ee2c <argp_error@@Base+0xacc>
   1ee10:	ldrb	r3, [r5, #2]
   1ee14:	cmp	r3, #0
   1ee18:	bne	1eee8 <argp_error@@Base+0xb88>
   1ee1c:	mov	r0, r7
   1ee20:	bl	119cc <strchr@plt>
   1ee24:	cmp	r0, #0
   1ee28:	beq	1eee8 <argp_error@@Base+0xb88>
   1ee2c:	add	r5, r5, #1
   1ee30:	b	1eb5c <argp_error@@Base+0x7fc>
   1ee34:	mov	r3, fp
   1ee38:	str	fp, [r4, #28]
   1ee3c:	b	1ec84 <argp_error@@Base+0x924>
   1ee40:	cmp	sl, #0
   1ee44:	sub	ip, r1, #59	; 0x3b
   1ee48:	clz	ip, ip
   1ee4c:	lsr	ip, ip, #5
   1ee50:	moveq	ip, #0
   1ee54:	cmp	ip, #0
   1ee58:	beq	1ebb8 <argp_error@@Base+0x858>
   1ee5c:	ldrb	r2, [r5, #1]
   1ee60:	cmp	r2, #0
   1ee64:	bne	1ee78 <argp_error@@Base+0xb18>
   1ee68:	ldr	r3, [r4]
   1ee6c:	cmp	r6, r3
   1ee70:	ldrne	r3, [r9, r3, lsl #2]
   1ee74:	beq	1ef94 <argp_error@@Base+0xc34>
   1ee78:	str	r3, [r4, #20]
   1ee7c:	ldr	lr, [pc, #372]	; 1eff8 <argp_error@@Base+0xc98>
   1ee80:	ldr	r3, [sp, #72]	; 0x48
   1ee84:	mov	ip, #0
   1ee88:	str	r3, [sp]
   1ee8c:	str	r8, [sp, #12]
   1ee90:	str	r4, [sp, #8]
   1ee94:	str	lr, [sp, #16]
   1ee98:	mov	r3, sl
   1ee9c:	str	ip, [r4, #12]
   1eea0:	mov	r2, r7
   1eea4:	mov	r1, r9
   1eea8:	mov	r0, r6
   1eeac:	str	ip, [sp, #4]
   1eeb0:	bl	1e560 <argp_error@@Base+0x200>
   1eeb4:	b	1ece4 <argp_error@@Base+0x984>
   1eeb8:	cmp	fp, r3
   1eebc:	movne	r3, fp
   1eec0:	strne	fp, [r4, #28]
   1eec4:	b	1ed54 <argp_error@@Base+0x9f4>
   1eec8:	cmp	r2, #0
   1eecc:	streq	r2, [r4, #12]
   1eed0:	beq	1ebf4 <argp_error@@Base+0x894>
   1eed4:	ldr	r2, [r4]
   1eed8:	str	r3, [r4, #12]
   1eedc:	add	r3, r2, #1
   1eee0:	str	r3, [r4]
   1eee4:	b	1ebf4 <argp_error@@Base+0x894>
   1eee8:	ldr	r2, [sp, #76]	; 0x4c
   1eeec:	add	r5, r5, #1
   1eef0:	str	r5, [r4, #20]
   1eef4:	ldr	r3, [pc, #256]	; 1effc <argp_error@@Base+0xc9c>
   1eef8:	str	r2, [sp, #4]
   1eefc:	ldr	r2, [sp, #72]	; 0x48
   1ef00:	str	r3, [sp, #16]
   1ef04:	str	r2, [sp]
   1ef08:	str	r8, [sp, #12]
   1ef0c:	str	r4, [sp, #8]
   1ef10:	mov	r3, sl
   1ef14:	mov	r2, r7
   1ef18:	mov	r1, r9
   1ef1c:	mov	r0, r6
   1ef20:	bl	1e560 <argp_error@@Base+0x200>
   1ef24:	cmn	r0, #1
   1ef28:	bne	1ece4 <argp_error@@Base+0x984>
   1ef2c:	ldr	r3, [r4]
   1ef30:	ldr	r5, [r9, r3, lsl #2]
   1ef34:	b	1ee2c <argp_error@@Base+0xacc>
   1ef38:	add	r5, r5, #2
   1ef3c:	str	r5, [r4, #20]
   1ef40:	str	r3, [sp, #16]
   1ef44:	ldr	r3, [sp, #76]	; 0x4c
   1ef48:	str	r8, [sp, #12]
   1ef4c:	str	r3, [sp, #4]
   1ef50:	ldr	r3, [sp, #72]	; 0x48
   1ef54:	str	r4, [sp, #8]
   1ef58:	str	r3, [sp]
   1ef5c:	mov	r2, r7
   1ef60:	mov	r3, sl
   1ef64:	mov	r1, r9
   1ef68:	mov	r0, r6
   1ef6c:	bl	1e560 <argp_error@@Base+0x200>
   1ef70:	b	1ece4 <argp_error@@Base+0x984>
   1ef74:	cmp	r8, #0
   1ef78:	bne	1efcc <argp_error@@Base+0xc6c>
   1ef7c:	str	fp, [r4, #8]
   1ef80:	ldrb	r0, [r7]
   1ef84:	cmp	r0, #58	; 0x3a
   1ef88:	movne	r0, #63	; 0x3f
   1ef8c:	moveq	r0, #58	; 0x3a
   1ef90:	b	1ebf4 <argp_error@@Base+0x894>
   1ef94:	cmp	r8, #0
   1ef98:	beq	1efb4 <argp_error@@Base+0xc54>
   1ef9c:	ldr	r1, [pc, #72]	; 1efec <argp_error@@Base+0xc8c>
   1efa0:	ldr	r2, [r9]
   1efa4:	mov	r3, fp
   1efa8:	ldr	r0, [r1]
   1efac:	ldr	r1, [pc, #76]	; 1f000 <argp_error@@Base+0xca0>
   1efb0:	bl	119e4 <fprintf@plt>
   1efb4:	str	fp, [r4, #8]
   1efb8:	ldrb	r0, [r7]
   1efbc:	cmp	r0, #58	; 0x3a
   1efc0:	movne	r0, #63	; 0x3f
   1efc4:	moveq	r0, #58	; 0x3a
   1efc8:	b	1ece4 <argp_error@@Base+0x984>
   1efcc:	ldr	r1, [pc, #24]	; 1efec <argp_error@@Base+0xc8c>
   1efd0:	ldr	r2, [r9]
   1efd4:	mov	r3, fp
   1efd8:	ldr	r0, [r1]
   1efdc:	ldr	r1, [pc, #28]	; 1f000 <argp_error@@Base+0xca0>
   1efe0:	bl	119e4 <fprintf@plt>
   1efe4:	b	1ef7c <argp_error@@Base+0xc1c>
   1efe8:	andeq	r0, r2, ip, asr fp
   1efec:	andeq	r2, r3, r0, lsl r5
   1eff0:	muleq	r2, r8, r4
   1eff4:	andeq	r1, r2, r4, lsl #9
   1eff8:	andeq	r1, r2, r0, ror #9
   1effc:	muleq	r2, r4, r4
   1f000:			; <UNDEFINED> instruction: 0x000214b4
   1f004:	push	{r4, r5, r6, lr}
   1f008:	sub	sp, sp, #16
   1f00c:	ldr	r5, [pc, #84]	; 1f068 <argp_error@@Base+0xd08>
   1f010:	ldr	ip, [sp, #32]
   1f014:	ldr	r4, [pc, #80]	; 1f06c <argp_error@@Base+0xd0c>
   1f018:	str	ip, [sp]
   1f01c:	ldr	ip, [sp, #40]	; 0x28
   1f020:	ldr	r6, [sp, #36]	; 0x24
   1f024:	ldr	lr, [r5]
   1f028:	str	ip, [sp, #12]
   1f02c:	ldr	ip, [r5, #4]
   1f030:	str	r4, [sp, #8]
   1f034:	str	r6, [sp, #4]
   1f038:	str	ip, [r4, #4]
   1f03c:	str	lr, [r4]
   1f040:	bl	1eaa4 <argp_error@@Base+0x744>
   1f044:	ldr	r3, [pc, #36]	; 1f070 <argp_error@@Base+0xd10>
   1f048:	ldr	ip, [r4]
   1f04c:	ldr	r1, [r4, #8]
   1f050:	ldr	r2, [r4, #12]
   1f054:	str	ip, [r5]
   1f058:	str	r1, [r5, #8]
   1f05c:	str	r2, [r3]
   1f060:	add	sp, sp, #16
   1f064:	pop	{r4, r5, r6, pc}
   1f068:	andeq	r2, r3, ip, ror #9
   1f06c:	andeq	sl, r3, ip, lsr #13
   1f070:	andeq	sl, r3, ip, ror #28
   1f074:	push	{lr}		; (str lr, [sp, #-4]!)
   1f078:	mov	r3, #0
   1f07c:	sub	sp, sp, #20
   1f080:	mov	ip, #1
   1f084:	str	r3, [sp]
   1f088:	stmib	sp, {r3, ip}
   1f08c:	bl	1f004 <argp_error@@Base+0xca4>
   1f090:	add	sp, sp, #20
   1f094:	pop	{pc}		; (ldr pc, [sp], #4)
   1f098:	push	{r4, r5, r6, lr}
   1f09c:	subs	r4, r2, #0
   1f0a0:	mov	r6, r0
   1f0a4:	mov	r5, r1
   1f0a8:	beq	1f0d4 <argp_error@@Base+0xd74>
   1f0ac:	mov	r1, r4
   1f0b0:	mvn	r0, #0
   1f0b4:	bl	1f8ac <argp_error@@Base+0x154c>
   1f0b8:	cmp	r0, r5
   1f0bc:	bcs	1f0d4 <argp_error@@Base+0xd74>
   1f0c0:	bl	11a14 <__errno_location@plt>
   1f0c4:	mov	r3, #12
   1f0c8:	str	r3, [r0]
   1f0cc:	mov	r0, #0
   1f0d0:	pop	{r4, r5, r6, pc}
   1f0d4:	mul	r1, r5, r4
   1f0d8:	mov	r0, r6
   1f0dc:	pop	{r4, r5, r6, lr}
   1f0e0:	b	1b108 <_obstack_memory_used@@Base+0xac4>
   1f0e4:	push	{r4, r5, r6, r7, r8, lr}
   1f0e8:	mov	r8, r0
   1f0ec:	mov	r0, #36	; 0x24
   1f0f0:	mov	r7, r1
   1f0f4:	mov	r6, r2
   1f0f8:	mov	r5, r3
   1f0fc:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1f100:	subs	r4, r0, #0
   1f104:	beq	1f148 <argp_error@@Base+0xde8>
   1f108:	mov	r0, #0
   1f10c:	str	r5, [r4, #12]
   1f110:	str	r0, [r4, #20]
   1f114:	str	r0, [r4, #16]
   1f118:	str	r8, [r4]
   1f11c:	str	r7, [r4, #4]
   1f120:	str	r6, [r4, #8]
   1f124:	mov	r0, #200	; 0xc8
   1f128:	bl	1b0dc <_obstack_memory_used@@Base+0xa98>
   1f12c:	cmp	r0, #0
   1f130:	addne	r3, r0, #200	; 0xc8
   1f134:	mov	r5, r0
   1f138:	str	r0, [r4, #24]
   1f13c:	strne	r0, [r4, #28]
   1f140:	strne	r3, [r4, #32]
   1f144:	beq	1f150 <argp_error@@Base+0xdf0>
   1f148:	mov	r0, r4
   1f14c:	pop	{r4, r5, r6, r7, r8, pc}
   1f150:	mov	r0, r4
   1f154:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1f158:	mov	r4, r5
   1f15c:	b	1f148 <argp_error@@Base+0xde8>
   1f160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f164:	mov	r7, r0
   1f168:	ldr	r6, [r0, #24]
   1f16c:	ldr	r3, [r0, #16]
   1f170:	ldr	fp, [r0, #28]
   1f174:	sub	sp, sp, #12
   1f178:	add	r6, r6, r3
   1f17c:	mov	r9, #32
   1f180:	cmp	r6, fp
   1f184:	bcs	1f260 <argp_error@@Base+0xf00>
   1f188:	ldr	r8, [r7, #20]
   1f18c:	cmp	r8, #0
   1f190:	bne	1f200 <argp_error@@Base+0xea0>
   1f194:	ldr	r4, [r7, #4]
   1f198:	cmp	r4, #0
   1f19c:	beq	1f4a4 <argp_error@@Base+0x1144>
   1f1a0:	ldr	r2, [r7, #32]
   1f1a4:	add	r3, fp, r4
   1f1a8:	cmp	r2, r3
   1f1ac:	bls	1f1c0 <argp_error@@Base+0xe60>
   1f1b0:	b	1f5ec <argp_error@@Base+0x128c>
   1f1b4:	add	r8, r8, #1
   1f1b8:	cmp	r4, r8
   1f1bc:	beq	1f1f4 <argp_error@@Base+0xe94>
   1f1c0:	ldr	r0, [r7]
   1f1c4:	ldr	r3, [r0, #20]
   1f1c8:	ldr	r2, [r0, #24]
   1f1cc:	add	r1, r3, #1
   1f1d0:	cmp	r3, r2
   1f1d4:	strcc	r1, [r0, #20]
   1f1d8:	strbcc	r9, [r3]
   1f1dc:	bcc	1f1b4 <argp_error@@Base+0xe54>
   1f1e0:	mov	r1, r9
   1f1e4:	add	r8, r8, #1
   1f1e8:	bl	11aa4 <__overflow@plt>
   1f1ec:	cmp	r4, r8
   1f1f0:	bne	1f1c0 <argp_error@@Base+0xe60>
   1f1f4:	ldr	fp, [r7, #28]
   1f1f8:	mov	r8, r4
   1f1fc:	str	r4, [r7, #20]
   1f200:	sub	sl, fp, r6
   1f204:	mov	r2, sl
   1f208:	mov	r1, #10
   1f20c:	mov	r0, r6
   1f210:	bl	11a5c <memchr@plt>
   1f214:	cmp	r8, #0
   1f218:	movlt	r8, #0
   1f21c:	movlt	r3, r8
   1f220:	str	r6, [sp]
   1f224:	mov	r4, r0
   1f228:	strlt	r3, [r7, #20]
   1f22c:	cmp	r4, #0
   1f230:	beq	1f4c8 <argp_error@@Base+0x1168>
   1f234:	sub	r2, r4, r6
   1f238:	ldr	r3, [r7, #8]
   1f23c:	add	r2, r2, r8
   1f240:	cmp	r2, r3
   1f244:	bge	1f274 <argp_error@@Base+0xf14>
   1f248:	ldr	fp, [r7, #28]
   1f24c:	add	r6, r4, #1
   1f250:	mov	r3, #0
   1f254:	cmp	r6, fp
   1f258:	str	r3, [r7, #20]
   1f25c:	bcc	1f188 <argp_error@@Base+0xe28>
   1f260:	ldr	r3, [r7, #24]
   1f264:	sub	r3, fp, r3
   1f268:	str	r3, [r7, #16]
   1f26c:	add	sp, sp, #12
   1f270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f274:	ldr	r2, [r7, #12]
   1f278:	sub	r5, r3, #1
   1f27c:	cmp	r2, #0
   1f280:	str	r2, [sp, #4]
   1f284:	blt	1f580 <argp_error@@Base+0x1220>
   1f288:	add	r5, r5, #1
   1f28c:	sub	r8, r5, r8
   1f290:	adds	r8, r6, r8
   1f294:	bcs	1f500 <argp_error@@Base+0x11a0>
   1f298:	bl	11990 <__ctype_b_loc@plt>
   1f29c:	mov	r3, r8
   1f2a0:	ldr	r0, [r0]
   1f2a4:	b	1f2b0 <argp_error@@Base+0xf50>
   1f2a8:	cmp	r3, r6
   1f2ac:	bcc	1f504 <argp_error@@Base+0x11a4>
   1f2b0:	mov	r1, r3
   1f2b4:	sub	r3, r3, #1
   1f2b8:	ldrb	r2, [r1]
   1f2bc:	mov	r5, r3
   1f2c0:	lsl	r2, r2, #1
   1f2c4:	ldrh	r2, [r0, r2]
   1f2c8:	tst	r2, #1
   1f2cc:	beq	1f2a8 <argp_error@@Base+0xf48>
   1f2d0:	add	r5, r1, #1
   1f2d4:	cmp	r5, r6
   1f2d8:	bls	1f518 <argp_error@@Base+0x11b8>
   1f2dc:	cmp	r1, r6
   1f2e0:	bcc	1f510 <argp_error@@Base+0x11b0>
   1f2e4:	mov	r1, r3
   1f2e8:	sub	r8, r6, #1
   1f2ec:	b	1f308 <argp_error@@Base+0xfa8>
   1f2f0:	ldrb	r3, [r1]
   1f2f4:	sub	r1, r1, #1
   1f2f8:	lsl	r3, r3, #1
   1f2fc:	ldrh	r3, [r0, r3]
   1f300:	tst	r3, #1
   1f304:	beq	1f630 <argp_error@@Base+0x12d0>
   1f308:	cmp	r8, r1
   1f30c:	mov	r2, r1
   1f310:	bne	1f2f0 <argp_error@@Base+0xf90>
   1f314:	add	r8, r8, #1
   1f318:	add	r3, sl, #1
   1f31c:	add	r3, r6, r3
   1f320:	cmp	r5, r3
   1f324:	beq	1f40c <argp_error@@Base+0x10ac>
   1f328:	add	r3, r8, #1
   1f32c:	ldr	r1, [sp, #4]
   1f330:	sub	r2, r5, r3
   1f334:	cmp	r2, r1
   1f338:	bge	1f428 <argp_error@@Base+0x10c8>
   1f33c:	cmp	r5, fp
   1f340:	bcs	1f420 <argp_error@@Base+0x10c0>
   1f344:	ldr	r3, [r7, #32]
   1f348:	ldr	r2, [sp, #4]
   1f34c:	sub	r3, r3, fp
   1f350:	add	r0, r2, #1
   1f354:	cmp	r3, r0
   1f358:	bgt	1f660 <argp_error@@Base+0x1300>
   1f35c:	ldr	r0, [r7, #24]
   1f360:	cmp	r8, r0
   1f364:	bls	1f378 <argp_error@@Base+0x1018>
   1f368:	sub	r2, r8, r0
   1f36c:	ldr	r3, [r7]
   1f370:	mov	r1, #1
   1f374:	bl	11834 <fwrite_unlocked@plt>
   1f378:	ldr	r0, [r7]
   1f37c:	ldr	r2, [r0, #24]
   1f380:	ldr	r3, [r0, #20]
   1f384:	cmp	r3, r2
   1f388:	addcc	r2, r3, #1
   1f38c:	strcc	r2, [r0, #20]
   1f390:	movcc	r2, #10
   1f394:	strbcc	r2, [r3]
   1f398:	bcs	1f6a0 <argp_error@@Base+0x1340>
   1f39c:	ldr	r6, [r7, #24]
   1f3a0:	ldr	r3, [sp]
   1f3a4:	sub	r2, r5, r6
   1f3a8:	sub	r3, r3, r6
   1f3ac:	add	sl, sl, r3
   1f3b0:	mov	fp, r2
   1f3b4:	mov	r4, r6
   1f3b8:	ldr	r3, [r7, #12]
   1f3bc:	cmp	r3, r2
   1f3c0:	bgt	1f448 <argp_error@@Base+0x10e8>
   1f3c4:	cmp	r3, #0
   1f3c8:	movgt	r2, r6
   1f3cc:	ble	1f3e8 <argp_error@@Base+0x1088>
   1f3d0:	strb	r9, [r2], #1
   1f3d4:	ldr	r3, [r7, #12]
   1f3d8:	sub	r1, r2, r6
   1f3dc:	cmp	r3, r1
   1f3e0:	bgt	1f3d0 <argp_error@@Base+0x1070>
   1f3e4:	mov	r6, r2
   1f3e8:	cmp	r6, r5
   1f3ec:	bcc	1f5d0 <argp_error@@Base+0x1270>
   1f3f0:	sub	fp, sl, fp
   1f3f4:	cmp	r3, #0
   1f3f8:	add	fp, r6, fp
   1f3fc:	mvneq	r3, #0
   1f400:	str	fp, [r7, #28]
   1f404:	str	r3, [r7, #20]
   1f408:	b	1f180 <argp_error@@Base+0xe20>
   1f40c:	ldr	r3, [r7, #32]
   1f410:	ldr	r2, [sp, #4]
   1f414:	sub	r3, r3, r8
   1f418:	cmp	r3, r2
   1f41c:	ble	1f33c <argp_error@@Base+0xfdc>
   1f420:	add	r3, r8, #1
   1f424:	sub	r2, r5, r3
   1f428:	sub	fp, r5, r6
   1f42c:	mov	r4, r6
   1f430:	mov	r6, r3
   1f434:	mov	r3, #10
   1f438:	strb	r3, [r8]
   1f43c:	ldr	r3, [r7, #12]
   1f440:	cmp	r3, r2
   1f444:	ble	1f3c4 <argp_error@@Base+0x1064>
   1f448:	add	r2, sl, #1
   1f44c:	add	r2, r4, r2
   1f450:	cmp	r5, r2
   1f454:	beq	1f64c <argp_error@@Base+0x12ec>
   1f458:	cmp	r3, #0
   1f45c:	movgt	r8, #0
   1f460:	bgt	1f478 <argp_error@@Base+0x1118>
   1f464:	b	1f3e8 <argp_error@@Base+0x1088>
   1f468:	ldr	r3, [r7, #12]
   1f46c:	add	r8, r8, #1
   1f470:	cmp	r3, r8
   1f474:	ble	1f3e8 <argp_error@@Base+0x1088>
   1f478:	ldr	r0, [r7]
   1f47c:	ldr	r3, [r0, #20]
   1f480:	ldr	r2, [r0, #24]
   1f484:	add	r1, r3, #1
   1f488:	cmp	r3, r2
   1f48c:	strcc	r1, [r0, #20]
   1f490:	strbcc	r9, [r3]
   1f494:	bcc	1f468 <argp_error@@Base+0x1108>
   1f498:	mov	r1, r9
   1f49c:	bl	11aa4 <__overflow@plt>
   1f4a0:	b	1f468 <argp_error@@Base+0x1108>
   1f4a4:	sub	sl, fp, r6
   1f4a8:	mov	r2, sl
   1f4ac:	mov	r1, #10
   1f4b0:	mov	r0, r6
   1f4b4:	bl	11a5c <memchr@plt>
   1f4b8:	str	r6, [sp]
   1f4bc:	mov	r4, r0
   1f4c0:	cmp	r4, #0
   1f4c4:	bne	1f234 <argp_error@@Base+0xed4>
   1f4c8:	ldr	r5, [r7, #8]
   1f4cc:	add	r3, r8, sl
   1f4d0:	cmp	r3, r5
   1f4d4:	bcc	1f6c4 <argp_error@@Base+0x1364>
   1f4d8:	ldr	r2, [r7, #12]
   1f4dc:	sub	r5, r5, #1
   1f4e0:	cmp	r2, #0
   1f4e4:	str	r2, [sp, #4]
   1f4e8:	blt	1f6b0 <argp_error@@Base+0x1350>
   1f4ec:	add	r5, r5, #1
   1f4f0:	sub	r8, r5, r8
   1f4f4:	adds	r8, r6, r8
   1f4f8:	mov	r4, fp
   1f4fc:	bcc	1f298 <argp_error@@Base+0xf38>
   1f500:	mov	r5, r8
   1f504:	add	r5, r5, #1
   1f508:	cmp	r5, r6
   1f50c:	bls	1f518 <argp_error@@Base+0x11b8>
   1f510:	mov	r8, r5
   1f514:	b	1f318 <argp_error@@Base+0xfb8>
   1f518:	cmp	r8, r4
   1f51c:	bcs	1f554 <argp_error@@Base+0x11f4>
   1f520:	add	r5, r8, #1
   1f524:	b	1f548 <argp_error@@Base+0x11e8>
   1f528:	bl	11990 <__ctype_b_loc@plt>
   1f52c:	ldrb	r3, [r5]
   1f530:	add	r5, r5, #1
   1f534:	lsl	r3, r3, #1
   1f538:	ldr	r2, [r0]
   1f53c:	ldrh	r3, [r2, r3]
   1f540:	tst	r3, #1
   1f544:	bne	1f564 <argp_error@@Base+0x1204>
   1f548:	cmp	r5, r4
   1f54c:	mov	r8, r5
   1f550:	bne	1f528 <argp_error@@Base+0x11c8>
   1f554:	cmp	r8, r4
   1f558:	beq	1f638 <argp_error@@Base+0x12d8>
   1f55c:	bl	11990 <__ctype_b_loc@plt>
   1f560:	ldr	r2, [r0]
   1f564:	mov	r5, r8
   1f568:	ldrb	r3, [r5, #1]!
   1f56c:	lsl	r3, r3, #1
   1f570:	ldrh	r3, [r2, r3]
   1f574:	tst	r3, #1
   1f578:	bne	1f568 <argp_error@@Base+0x1208>
   1f57c:	b	1f318 <argp_error@@Base+0xfb8>
   1f580:	cmp	r4, fp
   1f584:	str	r3, [sp]
   1f588:	bcs	1f6ac <argp_error@@Base+0x134c>
   1f58c:	sub	r0, r5, r8
   1f590:	sub	r2, fp, r4
   1f594:	add	r0, r6, r0
   1f598:	mov	r1, r4
   1f59c:	bl	117c8 <memmove@plt>
   1f5a0:	ldr	r2, [r7, #20]
   1f5a4:	ldr	fp, [r7, #28]
   1f5a8:	sub	r5, r5, r2
   1f5ac:	add	r5, r6, r5
   1f5b0:	mov	r3, #0
   1f5b4:	sub	r4, r5, r4
   1f5b8:	str	r3, [r7, #20]
   1f5bc:	ldr	r3, [sp]
   1f5c0:	sub	fp, fp, r4
   1f5c4:	add	r6, r6, r3
   1f5c8:	str	fp, [r7, #28]
   1f5cc:	b	1f180 <argp_error@@Base+0xe20>
   1f5d0:	add	r2, r4, sl
   1f5d4:	sub	r2, r2, r5
   1f5d8:	mov	r1, r5
   1f5dc:	mov	r0, r6
   1f5e0:	bl	117c8 <memmove@plt>
   1f5e4:	ldr	r3, [r7, #12]
   1f5e8:	b	1f3f0 <argp_error@@Base+0x1090>
   1f5ec:	add	r5, r6, r4
   1f5f0:	sub	r2, fp, r6
   1f5f4:	mov	r1, r6
   1f5f8:	mov	r0, r5
   1f5fc:	bl	117c8 <memmove@plt>
   1f600:	ldr	r3, [r7, #28]
   1f604:	mov	r0, r6
   1f608:	add	r3, r3, r4
   1f60c:	str	r3, [r7, #28]
   1f610:	mov	r2, r4
   1f614:	mov	r1, r9
   1f618:	bl	11a38 <memset@plt>
   1f61c:	mov	r6, r5
   1f620:	ldr	fp, [r7, #28]
   1f624:	mov	r8, r4
   1f628:	str	r4, [r7, #20]
   1f62c:	b	1f200 <argp_error@@Base+0xea0>
   1f630:	add	r8, r2, #1
   1f634:	b	1f318 <argp_error@@Base+0xfb8>
   1f638:	mov	r3, #0
   1f63c:	str	r3, [r7, #20]
   1f640:	add	r6, r8, #1
   1f644:	ldr	fp, [r7, #28]
   1f648:	b	1f180 <argp_error@@Base+0xe20>
   1f64c:	ldr	r2, [r7, #32]
   1f650:	sub	r2, r2, r5
   1f654:	cmp	r3, r2
   1f658:	ble	1f3c4 <argp_error@@Base+0x1064>
   1f65c:	b	1f458 <argp_error@@Base+0x10f8>
   1f660:	sub	fp, fp, r5
   1f664:	mov	r2, fp
   1f668:	mov	r1, r5
   1f66c:	add	r0, r8, r0
   1f670:	bl	117c8 <memmove@plt>
   1f674:	ldr	r2, [r7, #12]
   1f678:	mov	r3, #10
   1f67c:	add	r5, r2, #1
   1f680:	add	r5, r8, r5
   1f684:	add	fp, r5, fp
   1f688:	sub	sl, fp, r6
   1f68c:	mov	r4, r6
   1f690:	sub	fp, r5, r6
   1f694:	strb	r3, [r8]
   1f698:	add	r6, r8, #1
   1f69c:	b	1f3b8 <argp_error@@Base+0x1058>
   1f6a0:	mov	r1, #10
   1f6a4:	bl	11aa4 <__overflow@plt>
   1f6a8:	b	1f39c <argp_error@@Base+0x103c>
   1f6ac:	add	r3, r8, sl
   1f6b0:	sub	r5, r5, r3
   1f6b4:	add	fp, fp, r5
   1f6b8:	str	fp, [r7, #28]
   1f6bc:	str	r3, [r7, #20]
   1f6c0:	b	1f260 <argp_error@@Base+0xf00>
   1f6c4:	str	r3, [r7, #20]
   1f6c8:	ldr	fp, [r7, #28]
   1f6cc:	b	1f260 <argp_error@@Base+0xf00>
   1f6d0:	push	{r4, lr}
   1f6d4:	mov	r4, r0
   1f6d8:	bl	1f160 <argp_error@@Base+0xe00>
   1f6dc:	ldr	r2, [r4, #28]
   1f6e0:	ldr	r0, [r4, #24]
   1f6e4:	cmp	r2, r0
   1f6e8:	bls	1f700 <argp_error@@Base+0x13a0>
   1f6ec:	sub	r2, r2, r0
   1f6f0:	ldr	r3, [r4]
   1f6f4:	mov	r1, #1
   1f6f8:	bl	11834 <fwrite_unlocked@plt>
   1f6fc:	ldr	r0, [r4, #24]
   1f700:	bl	1a1f4 <argp_parse@@Base+0xe98>
   1f704:	mov	r0, r4
   1f708:	pop	{r4, lr}
   1f70c:	b	1a1f4 <argp_parse@@Base+0xe98>
   1f710:	push	{r4, r5, r6, lr}
   1f714:	mov	r4, r0
   1f718:	mov	r5, r1
   1f71c:	bl	1f160 <argp_error@@Base+0xe00>
   1f720:	ldr	r3, [r4, #24]
   1f724:	ldr	r2, [r4, #28]
   1f728:	mov	r0, r3
   1f72c:	sub	r2, r2, r3
   1f730:	mov	r1, #1
   1f734:	ldr	r3, [r4]
   1f738:	bl	11834 <fwrite_unlocked@plt>
   1f73c:	ldr	r2, [r4, #28]
   1f740:	ldr	r3, [r4, #24]
   1f744:	sub	r1, r2, r3
   1f748:	cmp	r0, r1
   1f74c:	bne	1f790 <argp_error@@Base+0x1430>
   1f750:	ldr	r1, [r4, #32]
   1f754:	mov	r2, #0
   1f758:	sub	r1, r1, r3
   1f75c:	cmp	r1, r5
   1f760:	str	r3, [r4, #28]
   1f764:	str	r2, [r4, #16]
   1f768:	movcs	r3, #1
   1f76c:	bcs	1f788 <argp_error@@Base+0x1428>
   1f770:	adds	r5, r1, r5
   1f774:	bcc	1f7c0 <argp_error@@Base+0x1460>
   1f778:	bl	11a14 <__errno_location@plt>
   1f77c:	mov	r3, #0
   1f780:	mov	r2, #12
   1f784:	str	r2, [r0]
   1f788:	mov	r0, r3
   1f78c:	pop	{r4, r5, r6, pc}
   1f790:	ldr	r1, [r4, #16]
   1f794:	sub	r2, r2, r0
   1f798:	sub	r1, r1, r0
   1f79c:	str	r2, [r4, #28]
   1f7a0:	str	r1, [r4, #16]
   1f7a4:	sub	r2, r2, r3
   1f7a8:	add	r1, r3, r0
   1f7ac:	mov	r0, r3
   1f7b0:	bl	117c8 <memmove@plt>
   1f7b4:	mov	r3, #0
   1f7b8:	mov	r0, r3
   1f7bc:	pop	{r4, r5, r6, pc}
   1f7c0:	mov	r0, r3
   1f7c4:	mov	r1, r5
   1f7c8:	bl	1b108 <_obstack_memory_used@@Base+0xac4>
   1f7cc:	cmp	r0, #0
   1f7d0:	beq	1f778 <argp_error@@Base+0x1418>
   1f7d4:	add	r1, r0, r5
   1f7d8:	mov	r3, #1
   1f7dc:	str	r0, [r4, #24]
   1f7e0:	str	r0, [r4, #28]
   1f7e4:	str	r1, [r4, #32]
   1f7e8:	mov	r0, r3
   1f7ec:	pop	{r4, r5, r6, pc}
   1f7f0:	ldr	r3, [r0, #32]
   1f7f4:	ldr	r2, [r0, #28]
   1f7f8:	sub	r3, r3, r2
   1f7fc:	cmp	r3, r1
   1f800:	bcc	1f80c <argp_error@@Base+0x14ac>
   1f804:	mov	r0, #1
   1f808:	bx	lr
   1f80c:	b	1f710 <argp_error@@Base+0x13b0>
   1f810:	push	{r1, r2, r3}
   1f814:	mov	r1, #150	; 0x96
   1f818:	push	{r4, r5, r6, r7, lr}
   1f81c:	sub	sp, sp, #8
   1f820:	mov	r5, r0
   1f824:	ldr	r7, [sp, #28]
   1f828:	add	r6, sp, #32
   1f82c:	ldr	r3, [r5, #32]
   1f830:	ldr	r0, [r5, #28]
   1f834:	sub	r2, r3, r0
   1f838:	cmp	r1, r2
   1f83c:	bhi	1f880 <argp_error@@Base+0x1520>
   1f840:	sub	r4, r3, r0
   1f844:	mov	r1, r4
   1f848:	mov	r3, r6
   1f84c:	mov	r2, r7
   1f850:	str	r6, [sp, #4]
   1f854:	bl	11b28 <vsnprintf@plt>
   1f858:	cmp	r4, r0
   1f85c:	addls	r1, r0, #1
   1f860:	bls	1f82c <argp_error@@Base+0x14cc>
   1f864:	ldr	r3, [r5, #28]
   1f868:	add	r3, r3, r0
   1f86c:	str	r3, [r5, #28]
   1f870:	add	sp, sp, #8
   1f874:	pop	{r4, r5, r6, r7, lr}
   1f878:	add	sp, sp, #12
   1f87c:	bx	lr
   1f880:	mov	r0, r5
   1f884:	bl	1f710 <argp_error@@Base+0x13b0>
   1f888:	cmp	r0, #0
   1f88c:	ldrne	r3, [r5, #32]
   1f890:	ldrne	r0, [r5, #28]
   1f894:	bne	1f840 <argp_error@@Base+0x14e0>
   1f898:	mvn	r0, #0
   1f89c:	add	sp, sp, #8
   1f8a0:	pop	{r4, r5, r6, r7, lr}
   1f8a4:	add	sp, sp, #12
   1f8a8:	bx	lr
   1f8ac:	subs	r2, r1, #1
   1f8b0:	bxeq	lr
   1f8b4:	bcc	1fa8c <argp_error@@Base+0x172c>
   1f8b8:	cmp	r0, r1
   1f8bc:	bls	1fa70 <argp_error@@Base+0x1710>
   1f8c0:	tst	r1, r2
   1f8c4:	beq	1fa7c <argp_error@@Base+0x171c>
   1f8c8:	clz	r3, r0
   1f8cc:	clz	r2, r1
   1f8d0:	sub	r3, r2, r3
   1f8d4:	rsbs	r3, r3, #31
   1f8d8:	addne	r3, r3, r3, lsl #1
   1f8dc:	mov	r2, #0
   1f8e0:	addne	pc, pc, r3, lsl #2
   1f8e4:	nop			; (mov r0, r0)
   1f8e8:	cmp	r0, r1, lsl #31
   1f8ec:	adc	r2, r2, r2
   1f8f0:	subcs	r0, r0, r1, lsl #31
   1f8f4:	cmp	r0, r1, lsl #30
   1f8f8:	adc	r2, r2, r2
   1f8fc:	subcs	r0, r0, r1, lsl #30
   1f900:	cmp	r0, r1, lsl #29
   1f904:	adc	r2, r2, r2
   1f908:	subcs	r0, r0, r1, lsl #29
   1f90c:	cmp	r0, r1, lsl #28
   1f910:	adc	r2, r2, r2
   1f914:	subcs	r0, r0, r1, lsl #28
   1f918:	cmp	r0, r1, lsl #27
   1f91c:	adc	r2, r2, r2
   1f920:	subcs	r0, r0, r1, lsl #27
   1f924:	cmp	r0, r1, lsl #26
   1f928:	adc	r2, r2, r2
   1f92c:	subcs	r0, r0, r1, lsl #26
   1f930:	cmp	r0, r1, lsl #25
   1f934:	adc	r2, r2, r2
   1f938:	subcs	r0, r0, r1, lsl #25
   1f93c:	cmp	r0, r1, lsl #24
   1f940:	adc	r2, r2, r2
   1f944:	subcs	r0, r0, r1, lsl #24
   1f948:	cmp	r0, r1, lsl #23
   1f94c:	adc	r2, r2, r2
   1f950:	subcs	r0, r0, r1, lsl #23
   1f954:	cmp	r0, r1, lsl #22
   1f958:	adc	r2, r2, r2
   1f95c:	subcs	r0, r0, r1, lsl #22
   1f960:	cmp	r0, r1, lsl #21
   1f964:	adc	r2, r2, r2
   1f968:	subcs	r0, r0, r1, lsl #21
   1f96c:	cmp	r0, r1, lsl #20
   1f970:	adc	r2, r2, r2
   1f974:	subcs	r0, r0, r1, lsl #20
   1f978:	cmp	r0, r1, lsl #19
   1f97c:	adc	r2, r2, r2
   1f980:	subcs	r0, r0, r1, lsl #19
   1f984:	cmp	r0, r1, lsl #18
   1f988:	adc	r2, r2, r2
   1f98c:	subcs	r0, r0, r1, lsl #18
   1f990:	cmp	r0, r1, lsl #17
   1f994:	adc	r2, r2, r2
   1f998:	subcs	r0, r0, r1, lsl #17
   1f99c:	cmp	r0, r1, lsl #16
   1f9a0:	adc	r2, r2, r2
   1f9a4:	subcs	r0, r0, r1, lsl #16
   1f9a8:	cmp	r0, r1, lsl #15
   1f9ac:	adc	r2, r2, r2
   1f9b0:	subcs	r0, r0, r1, lsl #15
   1f9b4:	cmp	r0, r1, lsl #14
   1f9b8:	adc	r2, r2, r2
   1f9bc:	subcs	r0, r0, r1, lsl #14
   1f9c0:	cmp	r0, r1, lsl #13
   1f9c4:	adc	r2, r2, r2
   1f9c8:	subcs	r0, r0, r1, lsl #13
   1f9cc:	cmp	r0, r1, lsl #12
   1f9d0:	adc	r2, r2, r2
   1f9d4:	subcs	r0, r0, r1, lsl #12
   1f9d8:	cmp	r0, r1, lsl #11
   1f9dc:	adc	r2, r2, r2
   1f9e0:	subcs	r0, r0, r1, lsl #11
   1f9e4:	cmp	r0, r1, lsl #10
   1f9e8:	adc	r2, r2, r2
   1f9ec:	subcs	r0, r0, r1, lsl #10
   1f9f0:	cmp	r0, r1, lsl #9
   1f9f4:	adc	r2, r2, r2
   1f9f8:	subcs	r0, r0, r1, lsl #9
   1f9fc:	cmp	r0, r1, lsl #8
   1fa00:	adc	r2, r2, r2
   1fa04:	subcs	r0, r0, r1, lsl #8
   1fa08:	cmp	r0, r1, lsl #7
   1fa0c:	adc	r2, r2, r2
   1fa10:	subcs	r0, r0, r1, lsl #7
   1fa14:	cmp	r0, r1, lsl #6
   1fa18:	adc	r2, r2, r2
   1fa1c:	subcs	r0, r0, r1, lsl #6
   1fa20:	cmp	r0, r1, lsl #5
   1fa24:	adc	r2, r2, r2
   1fa28:	subcs	r0, r0, r1, lsl #5
   1fa2c:	cmp	r0, r1, lsl #4
   1fa30:	adc	r2, r2, r2
   1fa34:	subcs	r0, r0, r1, lsl #4
   1fa38:	cmp	r0, r1, lsl #3
   1fa3c:	adc	r2, r2, r2
   1fa40:	subcs	r0, r0, r1, lsl #3
   1fa44:	cmp	r0, r1, lsl #2
   1fa48:	adc	r2, r2, r2
   1fa4c:	subcs	r0, r0, r1, lsl #2
   1fa50:	cmp	r0, r1, lsl #1
   1fa54:	adc	r2, r2, r2
   1fa58:	subcs	r0, r0, r1, lsl #1
   1fa5c:	cmp	r0, r1
   1fa60:	adc	r2, r2, r2
   1fa64:	subcs	r0, r0, r1
   1fa68:	mov	r0, r2
   1fa6c:	bx	lr
   1fa70:	moveq	r0, #1
   1fa74:	movne	r0, #0
   1fa78:	bx	lr
   1fa7c:	clz	r2, r1
   1fa80:	rsb	r2, r2, #31
   1fa84:	lsr	r0, r0, r2
   1fa88:	bx	lr
   1fa8c:	cmp	r0, #0
   1fa90:	mvnne	r0, #0
   1fa94:	b	1fcf8 <argp_error@@Base+0x1998>
   1fa98:	cmp	r1, #0
   1fa9c:	beq	1fa8c <argp_error@@Base+0x172c>
   1faa0:	push	{r0, r1, lr}
   1faa4:	bl	1f8ac <argp_error@@Base+0x154c>
   1faa8:	pop	{r1, r2, lr}
   1faac:	mul	r3, r2, r0
   1fab0:	sub	r1, r1, r3
   1fab4:	bx	lr
   1fab8:	cmp	r1, #0
   1fabc:	beq	1fcc8 <argp_error@@Base+0x1968>
   1fac0:	eor	ip, r0, r1
   1fac4:	rsbmi	r1, r1, #0
   1fac8:	subs	r2, r1, #1
   1facc:	beq	1fc94 <argp_error@@Base+0x1934>
   1fad0:	movs	r3, r0
   1fad4:	rsbmi	r3, r0, #0
   1fad8:	cmp	r3, r1
   1fadc:	bls	1fca0 <argp_error@@Base+0x1940>
   1fae0:	tst	r1, r2
   1fae4:	beq	1fcb0 <argp_error@@Base+0x1950>
   1fae8:	clz	r2, r3
   1faec:	clz	r0, r1
   1faf0:	sub	r2, r0, r2
   1faf4:	rsbs	r2, r2, #31
   1faf8:	addne	r2, r2, r2, lsl #1
   1fafc:	mov	r0, #0
   1fb00:	addne	pc, pc, r2, lsl #2
   1fb04:	nop			; (mov r0, r0)
   1fb08:	cmp	r3, r1, lsl #31
   1fb0c:	adc	r0, r0, r0
   1fb10:	subcs	r3, r3, r1, lsl #31
   1fb14:	cmp	r3, r1, lsl #30
   1fb18:	adc	r0, r0, r0
   1fb1c:	subcs	r3, r3, r1, lsl #30
   1fb20:	cmp	r3, r1, lsl #29
   1fb24:	adc	r0, r0, r0
   1fb28:	subcs	r3, r3, r1, lsl #29
   1fb2c:	cmp	r3, r1, lsl #28
   1fb30:	adc	r0, r0, r0
   1fb34:	subcs	r3, r3, r1, lsl #28
   1fb38:	cmp	r3, r1, lsl #27
   1fb3c:	adc	r0, r0, r0
   1fb40:	subcs	r3, r3, r1, lsl #27
   1fb44:	cmp	r3, r1, lsl #26
   1fb48:	adc	r0, r0, r0
   1fb4c:	subcs	r3, r3, r1, lsl #26
   1fb50:	cmp	r3, r1, lsl #25
   1fb54:	adc	r0, r0, r0
   1fb58:	subcs	r3, r3, r1, lsl #25
   1fb5c:	cmp	r3, r1, lsl #24
   1fb60:	adc	r0, r0, r0
   1fb64:	subcs	r3, r3, r1, lsl #24
   1fb68:	cmp	r3, r1, lsl #23
   1fb6c:	adc	r0, r0, r0
   1fb70:	subcs	r3, r3, r1, lsl #23
   1fb74:	cmp	r3, r1, lsl #22
   1fb78:	adc	r0, r0, r0
   1fb7c:	subcs	r3, r3, r1, lsl #22
   1fb80:	cmp	r3, r1, lsl #21
   1fb84:	adc	r0, r0, r0
   1fb88:	subcs	r3, r3, r1, lsl #21
   1fb8c:	cmp	r3, r1, lsl #20
   1fb90:	adc	r0, r0, r0
   1fb94:	subcs	r3, r3, r1, lsl #20
   1fb98:	cmp	r3, r1, lsl #19
   1fb9c:	adc	r0, r0, r0
   1fba0:	subcs	r3, r3, r1, lsl #19
   1fba4:	cmp	r3, r1, lsl #18
   1fba8:	adc	r0, r0, r0
   1fbac:	subcs	r3, r3, r1, lsl #18
   1fbb0:	cmp	r3, r1, lsl #17
   1fbb4:	adc	r0, r0, r0
   1fbb8:	subcs	r3, r3, r1, lsl #17
   1fbbc:	cmp	r3, r1, lsl #16
   1fbc0:	adc	r0, r0, r0
   1fbc4:	subcs	r3, r3, r1, lsl #16
   1fbc8:	cmp	r3, r1, lsl #15
   1fbcc:	adc	r0, r0, r0
   1fbd0:	subcs	r3, r3, r1, lsl #15
   1fbd4:	cmp	r3, r1, lsl #14
   1fbd8:	adc	r0, r0, r0
   1fbdc:	subcs	r3, r3, r1, lsl #14
   1fbe0:	cmp	r3, r1, lsl #13
   1fbe4:	adc	r0, r0, r0
   1fbe8:	subcs	r3, r3, r1, lsl #13
   1fbec:	cmp	r3, r1, lsl #12
   1fbf0:	adc	r0, r0, r0
   1fbf4:	subcs	r3, r3, r1, lsl #12
   1fbf8:	cmp	r3, r1, lsl #11
   1fbfc:	adc	r0, r0, r0
   1fc00:	subcs	r3, r3, r1, lsl #11
   1fc04:	cmp	r3, r1, lsl #10
   1fc08:	adc	r0, r0, r0
   1fc0c:	subcs	r3, r3, r1, lsl #10
   1fc10:	cmp	r3, r1, lsl #9
   1fc14:	adc	r0, r0, r0
   1fc18:	subcs	r3, r3, r1, lsl #9
   1fc1c:	cmp	r3, r1, lsl #8
   1fc20:	adc	r0, r0, r0
   1fc24:	subcs	r3, r3, r1, lsl #8
   1fc28:	cmp	r3, r1, lsl #7
   1fc2c:	adc	r0, r0, r0
   1fc30:	subcs	r3, r3, r1, lsl #7
   1fc34:	cmp	r3, r1, lsl #6
   1fc38:	adc	r0, r0, r0
   1fc3c:	subcs	r3, r3, r1, lsl #6
   1fc40:	cmp	r3, r1, lsl #5
   1fc44:	adc	r0, r0, r0
   1fc48:	subcs	r3, r3, r1, lsl #5
   1fc4c:	cmp	r3, r1, lsl #4
   1fc50:	adc	r0, r0, r0
   1fc54:	subcs	r3, r3, r1, lsl #4
   1fc58:	cmp	r3, r1, lsl #3
   1fc5c:	adc	r0, r0, r0
   1fc60:	subcs	r3, r3, r1, lsl #3
   1fc64:	cmp	r3, r1, lsl #2
   1fc68:	adc	r0, r0, r0
   1fc6c:	subcs	r3, r3, r1, lsl #2
   1fc70:	cmp	r3, r1, lsl #1
   1fc74:	adc	r0, r0, r0
   1fc78:	subcs	r3, r3, r1, lsl #1
   1fc7c:	cmp	r3, r1
   1fc80:	adc	r0, r0, r0
   1fc84:	subcs	r3, r3, r1
   1fc88:	cmp	ip, #0
   1fc8c:	rsbmi	r0, r0, #0
   1fc90:	bx	lr
   1fc94:	teq	ip, r0
   1fc98:	rsbmi	r0, r0, #0
   1fc9c:	bx	lr
   1fca0:	movcc	r0, #0
   1fca4:	asreq	r0, ip, #31
   1fca8:	orreq	r0, r0, #1
   1fcac:	bx	lr
   1fcb0:	clz	r2, r1
   1fcb4:	rsb	r2, r2, #31
   1fcb8:	cmp	ip, #0
   1fcbc:	lsr	r0, r3, r2
   1fcc0:	rsbmi	r0, r0, #0
   1fcc4:	bx	lr
   1fcc8:	cmp	r0, #0
   1fccc:	mvngt	r0, #-2147483648	; 0x80000000
   1fcd0:	movlt	r0, #-2147483648	; 0x80000000
   1fcd4:	b	1fcf8 <argp_error@@Base+0x1998>
   1fcd8:	cmp	r1, #0
   1fcdc:	beq	1fcc8 <argp_error@@Base+0x1968>
   1fce0:	push	{r0, r1, lr}
   1fce4:	bl	1fac0 <argp_error@@Base+0x1760>
   1fce8:	pop	{r1, r2, lr}
   1fcec:	mul	r3, r2, r0
   1fcf0:	sub	r1, r1, r3
   1fcf4:	bx	lr
   1fcf8:	push	{r1, lr}
   1fcfc:	mov	r0, #8
   1fd00:	bl	11780 <raise@plt>
   1fd04:	pop	{r1, pc}
   1fd08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1fd0c:	mov	r7, r0
   1fd10:	ldr	r6, [pc, #72]	; 1fd60 <argp_error@@Base+0x1a00>
   1fd14:	ldr	r5, [pc, #72]	; 1fd64 <argp_error@@Base+0x1a04>
   1fd18:	add	r6, pc, r6
   1fd1c:	add	r5, pc, r5
   1fd20:	sub	r6, r6, r5
   1fd24:	mov	r8, r1
   1fd28:	mov	r9, r2
   1fd2c:	bl	11748 <calloc@plt-0x20>
   1fd30:	asrs	r6, r6, #2
   1fd34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fd38:	mov	r4, #0
   1fd3c:	add	r4, r4, #1
   1fd40:	ldr	r3, [r5], #4
   1fd44:	mov	r2, r9
   1fd48:	mov	r1, r8
   1fd4c:	mov	r0, r7
   1fd50:	blx	r3
   1fd54:	cmp	r6, r4
   1fd58:	bne	1fd3c <argp_error@@Base+0x19dc>
   1fd5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1fd60:	ldrdeq	r2, [r1], -r8
   1fd64:	ldrdeq	r2, [r1], -r0
   1fd68:	bx	lr

Disassembly of section .fini:

0001fd6c <.fini>:
   1fd6c:	push	{r3, lr}
   1fd70:	pop	{r3, pc}
