
../repos/charybdis/extensions/.libs/helpops.so:     file format elf32-littlearm


Disassembly of section .init:

000007a0 <_init>:
 7a0:	push	{r3, lr}
 7a4:	bl	874 <call_weak_fn>
 7a8:	pop	{r3, pc}

Disassembly of section .plt:

000007ac <.plt>:
 7ac:	push	{lr}		; (str lr, [sp, #-4]!)
 7b0:	ldr	lr, [pc, #4]	; 7bc <.plt+0x10>
 7b4:	add	lr, pc, lr
 7b8:	ldr	pc, [lr, #8]!
 7bc:	.word	0x00011844

000007c0 <__cxa_finalize@plt>:
 7c0:	add	ip, pc, #0, 12
 7c4:	add	ip, ip, #69632	; 0x11000
 7c8:	ldr	pc, [ip, #2116]!	; 0x844

000007cc <sendto_one@plt>:
 7cc:	add	ip, pc, #0, 12
 7d0:	add	ip, ip, #69632	; 0x11000
 7d4:	ldr	pc, [ip, #2108]!	; 0x83c

000007d8 <user_mode@plt>:
 7d8:	add	ip, pc, #0, 12
 7dc:	add	ip, ip, #69632	; 0x11000
 7e0:	ldr	pc, [ip, #2100]!	; 0x834

000007e4 <sendto_realops_snomask@plt>:
 7e4:	add	ip, pc, #0, 12
 7e8:	add	ip, ip, #69632	; 0x11000
 7ec:	ldr	pc, [ip, #2092]!	; 0x82c

000007f0 <find_umode_slot@plt>:
 7f0:	add	ip, pc, #0, 12
 7f4:	add	ip, ip, #69632	; 0x11000
 7f8:	ldr	pc, [ip, #2084]!	; 0x824

000007fc <rb_free_rb_dlink_node@plt>:
 7fc:	add	ip, pc, #0, 12
 800:	add	ip, ip, #69632	; 0x11000
 804:	ldr	pc, [ip, #2076]!	; 0x81c

00000808 <__gmon_start__@plt>:
 808:	add	ip, pc, #0, 12
 80c:	add	ip, ip, #69632	; 0x11000
 810:	ldr	pc, [ip, #2068]!	; 0x814

00000814 <rb_make_rb_dlink_node@plt>:
 814:	add	ip, pc, #0, 12
 818:	add	ip, ip, #69632	; 0x11000
 81c:	ldr	pc, [ip, #2060]!	; 0x80c

00000820 <sendto_one_numeric@plt>:
 820:	add	ip, pc, #0, 12
 824:	add	ip, ip, #69632	; 0x11000
 828:	ldr	pc, [ip, #2052]!	; 0x804

0000082c <find_person@plt>:
 82c:	add	ip, pc, #0, 12
 830:	add	ip, ip, #69632	; 0x11000
 834:	ldr	pc, [ip, #2044]!	; 0x7fc

00000838 <sendto_one_notice@plt>:
 838:	add	ip, pc, #0, 12
 83c:	add	ip, ip, #69632	; 0x11000
 840:	ldr	pc, [ip, #2036]!	; 0x7f4

00000844 <find_named_person@plt>:
 844:	add	ip, pc, #0, 12
 848:	add	ip, ip, #69632	; 0x11000
 84c:	ldr	pc, [ip, #2028]!	; 0x7ec

00000850 <privilegeset_in_set@plt>:
 850:	add	ip, pc, #0, 12
 854:	add	ip, ip, #69632	; 0x11000
 858:	ldr	pc, [ip, #2020]!	; 0x7e4

0000085c <__assert_fail@plt>:
 85c:	add	ip, pc, #0, 12
 860:	add	ip, ip, #69632	; 0x11000
 864:	ldr	pc, [ip, #2012]!	; 0x7dc

00000868 <construct_umodebuf@plt>:
 868:	add	ip, pc, #0, 12
 86c:	add	ip, ip, #69632	; 0x11000
 870:	ldr	pc, [ip, #2004]!	; 0x7d4

Disassembly of section .text:

00000874 <call_weak_fn>:
     874:	ldr	r3, [pc, #20]	; 890 <call_weak_fn+0x1c>
     878:	ldr	r2, [pc, #20]	; 894 <call_weak_fn+0x20>
     87c:	add	r3, pc, r3
     880:	ldr	r2, [r3, r2]
     884:	cmp	r2, #0
     888:	bxeq	lr
     88c:	b	808 <__gmon_start__@plt>
     890:	.word	0x0001177c
     894:	.word	0x00000054

00000898 <deregister_tm_clones>:
     898:	ldr	r0, [pc, #44]	; 8cc <deregister_tm_clones+0x34>
     89c:	ldr	r3, [pc, #44]	; 8d0 <deregister_tm_clones+0x38>
     8a0:	add	r0, pc, r0
     8a4:	add	r3, pc, r3
     8a8:	cmp	r3, r0
     8ac:	ldr	r3, [pc, #32]	; 8d4 <deregister_tm_clones+0x3c>
     8b0:	add	r3, pc, r3
     8b4:	bxeq	lr
     8b8:	ldr	r2, [pc, #24]	; 8d8 <deregister_tm_clones+0x40>
     8bc:	ldr	r3, [r3, r2]
     8c0:	cmp	r3, #0
     8c4:	bxeq	lr
     8c8:	bx	r3
     8cc:	.word	0x00011888
     8d0:	.word	0x00011884
     8d4:	.word	0x00011748
     8d8:	.word	0x0000004c

000008dc <register_tm_clones>:
     8dc:	ldr	r0, [pc, #56]	; 91c <register_tm_clones+0x40>
     8e0:	ldr	r3, [pc, #56]	; 920 <register_tm_clones+0x44>
     8e4:	add	r0, pc, r0
     8e8:	add	r3, pc, r3
     8ec:	sub	r1, r3, r0
     8f0:	ldr	r3, [pc, #44]	; 924 <register_tm_clones+0x48>
     8f4:	asr	r1, r1, #2
     8f8:	add	r3, pc, r3
     8fc:	add	r1, r1, r1, lsr #31
     900:	asrs	r1, r1, #1
     904:	bxeq	lr
     908:	ldr	r2, [pc, #24]	; 928 <register_tm_clones+0x4c>
     90c:	ldr	r3, [r3, r2]
     910:	cmp	r3, #0
     914:	bxeq	lr
     918:	bx	r3
     91c:	.word	0x00011844
     920:	.word	0x00011840
     924:	.word	0x00011700
     928:	.word	0x0000005c

0000092c <__do_global_dtors_aux>:
     92c:	ldr	r3, [pc, #76]	; 980 <__do_global_dtors_aux+0x54>
     930:	ldr	r2, [pc, #76]	; 984 <__do_global_dtors_aux+0x58>
     934:	add	r3, pc, r3
     938:	add	r2, pc, r2
     93c:	ldrb	r3, [r3]
     940:	cmp	r3, #0
     944:	bxne	lr
     948:	ldr	r3, [pc, #56]	; 988 <__do_global_dtors_aux+0x5c>
     94c:	push	{r4, lr}
     950:	ldr	r3, [r2, r3]
     954:	cmp	r3, #0
     958:	beq	968 <__do_global_dtors_aux+0x3c>
     95c:	ldr	r3, [pc, #40]	; 98c <__do_global_dtors_aux+0x60>
     960:	ldr	r0, [pc, r3]
     964:	bl	7c0 <__cxa_finalize@plt>
     968:	bl	898 <deregister_tm_clones>
     96c:	ldr	r3, [pc, #28]	; 990 <__do_global_dtors_aux+0x64>
     970:	mov	r2, #1
     974:	add	r3, pc, r3
     978:	strb	r2, [r3]
     97c:	pop	{r4, pc}
     980:	.word	0x000117f4
     984:	.word	0x000116c0
     988:	.word	0x00000048
     98c:	.word	0x000116fc
     990:	.word	0x000117b4

00000994 <frame_dummy>:
     994:	b	8dc <register_tm_clones>

00000998 <h_hdl_stats_request>:
     998:	push	{r4, r5, r6, r7, fp, lr}
     99c:	add	fp, sp, #16
     9a0:	sub	sp, sp, #8
     9a4:	mov	r4, r0
     9a8:	ldr	r0, [r0, #8]
     9ac:	cmp	r0, #112	; 0x70
     9b0:	bne	a40 <h_hdl_stats_request+0xa8>
     9b4:	ldr	r7, [pc, #140]	; a48 <h_hdl_stats_request+0xb0>
     9b8:	mov	r5, #0
     9bc:	ldr	r7, [pc, r7]
     9c0:	cmp	r7, #0
     9c4:	beq	a20 <h_hdl_stats_request+0x88>
     9c8:	ldr	r6, [pc, #124]	; a4c <h_hdl_stats_request+0xb4>
     9cc:	add	r6, pc, r6
     9d0:	b	9e0 <h_hdl_stats_request+0x48>
     9d4:	ldr	r7, [r7, #8]
     9d8:	cmp	r7, #0
     9dc:	beq	a20 <h_hdl_stats_request+0x88>
     9e0:	ldr	r1, [r7]
     9e4:	ldr	r0, [r1, #24]
     9e8:	ldr	r0, [r0, #24]
     9ec:	cmp	r0, #0
     9f0:	bne	9d4 <h_hdl_stats_request+0x3c>
     9f4:	ldr	r0, [r4]
     9f8:	add	r2, r1, #163	; 0xa3
     9fc:	add	r3, r1, #152	; 0x98
     a00:	str	r3, [sp]
     a04:	str	r2, [sp, #4]
     a08:	add	r3, r1, #88	; 0x58
     a0c:	mov	r1, #249	; 0xf9
     a10:	mov	r2, r6
     a14:	bl	820 <sendto_one_numeric@plt>
     a18:	add	r5, r5, #1
     a1c:	b	9d4 <h_hdl_stats_request+0x3c>
     a20:	ldr	r0, [r4]
     a24:	ldr	r2, [pc, #36]	; a50 <h_hdl_stats_request+0xb8>
     a28:	mov	r1, #249	; 0xf9
     a2c:	mov	r3, r5
     a30:	add	r2, pc, r2
     a34:	bl	820 <sendto_one_numeric@plt>
     a38:	mov	r0, #1
     a3c:	str	r0, [r4, #12]
     a40:	sub	sp, fp, #16
     a44:	pop	{r4, r5, r6, r7, fp, pc}
     a48:	.word	0x00011770
     a4c:	.word	0x00000b64
     a50:	.word	0x00000b0e

00000a54 <h_hdl_new_remote_user>:
     a54:	push	{r4, sl, fp, lr}
     a58:	add	fp, sp, #8
     a5c:	mov	r4, r0
     a60:	ldr	r0, [r0, #56]	; 0x38
     a64:	ldr	r1, [pc, #184]	; b24 <h_hdl_new_remote_user+0xd0>
     a68:	ldr	r1, [pc, r1]
     a6c:	ldr	r1, [r1, #288]	; 0x120
     a70:	tst	r1, r0
     a74:	popeq	{r4, sl, fp, pc}
     a78:	ldr	r0, [pc, #168]	; b28 <h_hdl_new_remote_user+0xd4>
     a7c:	ldr	r0, [pc, r0]
     a80:	cmp	r0, #0
     a84:	beq	aa0 <h_hdl_new_remote_user+0x4c>
     a88:	ldr	r1, [r0]
     a8c:	cmp	r1, r4
     a90:	beq	b00 <h_hdl_new_remote_user+0xac>
     a94:	ldr	r0, [r0, #8]
     a98:	cmp	r0, #0
     a9c:	bne	a88 <h_hdl_new_remote_user+0x34>
     aa0:	bl	814 <rb_make_rb_dlink_node@plt>
     aa4:	cmp	r0, #0
     aa8:	beq	b04 <h_hdl_new_remote_user+0xb0>
     aac:	mov	r1, #0
     ab0:	str	r1, [r0, #4]
     ab4:	str	r4, [r0]
     ab8:	ldr	r2, [pc, #108]	; b2c <h_hdl_new_remote_user+0xd8>
     abc:	ldr	r2, [pc, r2]
     ac0:	str	r2, [r0, #8]
     ac4:	cmp	r2, #0
     ac8:	ldr	r1, [pc, #96]	; b30 <h_hdl_new_remote_user+0xdc>
     acc:	add	r1, pc, r1
     ad0:	beq	ae0 <h_hdl_new_remote_user+0x8c>
     ad4:	add	r2, r2, #4
     ad8:	str	r0, [r2]
     adc:	b	af0 <h_hdl_new_remote_user+0x9c>
     ae0:	mov	r2, r1
     ae4:	ldr	r3, [r2, #4]!
     ae8:	cmp	r3, #0
     aec:	streq	r0, [r2]
     af0:	str	r0, [r1]
     af4:	ldr	r0, [r1, #8]
     af8:	add	r0, r0, #1
     afc:	str	r0, [r1, #8]
     b00:	pop	{r4, sl, fp, pc}
     b04:	ldr	r0, [pc, #40]	; b34 <h_hdl_new_remote_user+0xe0>
     b08:	ldr	r1, [pc, #40]	; b38 <h_hdl_new_remote_user+0xe4>
     b0c:	ldr	r3, [pc, #40]	; b3c <h_hdl_new_remote_user+0xe8>
     b10:	mov	r2, #144	; 0x90
     b14:	add	r0, pc, r0
     b18:	add	r1, pc, r1
     b1c:	add	r3, pc, r3
     b20:	bl	85c <__assert_fail@plt>
     b24:	.word	0x000115e0
     b28:	.word	0x000116b0
     b2c:	.word	0x00011670
     b30:	.word	0x00011660
     b34:	.word	0x00000aa2
     b38:	.word	0x00000a3a
     b3c:	.word	0x00000a5f

00000b40 <h_hdl_client_exit>:
     b40:	ldr	r0, [r0, #4]
     b44:	b	1318 <recurse_client_exit>

00000b48 <h_hdl_umode_changed>:
     b48:	push	{r4, r5, r6, sl, fp, lr}
     b4c:	add	fp, sp, #16
     b50:	sub	sp, sp, #8
     b54:	ldr	r4, [r0]
     b58:	ldr	r0, [r0, #4]
     b5c:	ldr	r1, [r4, #56]	; 0x38
     b60:	ldr	r6, [pc, #620]	; dd4 <h_hdl_umode_changed+0x28c>
     b64:	ldr	r6, [pc, r6]
     b68:	eor	r0, r1, r0
     b6c:	ldr	r2, [r6, #288]	; 0x120
     b70:	and	r5, r0, r2
     b74:	tst	r2, r1
     b78:	beq	c28 <h_hdl_umode_changed+0xe0>
     b7c:	ldrb	r0, [r4, #65]	; 0x41
     b80:	tst	r0, #32
     b84:	beq	bc0 <h_hdl_umode_changed+0x78>
     b88:	ldrh	r0, [r4, #80]	; 0x50
     b8c:	cmp	r0, #64	; 0x40
     b90:	bne	bc0 <h_hdl_umode_changed+0x78>
     b94:	ldr	r0, [r4, #24]
     b98:	cmp	r0, #0
     b9c:	beq	cf4 <h_hdl_umode_changed+0x1ac>
     ba0:	ldr	r0, [r0, #36]	; 0x24
     ba4:	cmp	r0, #0
     ba8:	beq	cf4 <h_hdl_umode_changed+0x1ac>
     bac:	ldr	r1, [pc, #548]	; dd8 <h_hdl_umode_changed+0x290>
     bb0:	add	r1, pc, r1
     bb4:	bl	850 <privilegeset_in_set@plt>
     bb8:	cmp	r0, #0
     bbc:	beq	cec <h_hdl_umode_changed+0x1a4>
     bc0:	cmp	r5, #0
     bc4:	beq	d74 <h_hdl_umode_changed+0x22c>
     bc8:	ldr	r0, [pc, #544]	; df0 <h_hdl_umode_changed+0x2a8>
     bcc:	ldr	r0, [pc, r0]
     bd0:	cmp	r0, #0
     bd4:	beq	bf0 <h_hdl_umode_changed+0xa8>
     bd8:	ldr	r1, [r0]
     bdc:	cmp	r1, r4
     be0:	beq	d74 <h_hdl_umode_changed+0x22c>
     be4:	ldr	r0, [r0, #8]
     be8:	cmp	r0, #0
     bec:	bne	bd8 <h_hdl_umode_changed+0x90>
     bf0:	bl	814 <rb_make_rb_dlink_node@plt>
     bf4:	cmp	r0, #0
     bf8:	beq	d94 <h_hdl_umode_changed+0x24c>
     bfc:	mov	r1, #0
     c00:	str	r1, [r0, #4]
     c04:	str	r4, [r0]
     c08:	ldr	r1, [pc, #484]	; df4 <h_hdl_umode_changed+0x2ac>
     c0c:	ldr	r1, [pc, r1]
     c10:	cmp	r1, #0
     c14:	str	r1, [r0, #8]
     c18:	beq	c74 <h_hdl_umode_changed+0x12c>
     c1c:	add	r1, r1, #4
     c20:	str	r0, [r1]
     c24:	b	c88 <h_hdl_umode_changed+0x140>
     c28:	cmp	r5, #0
     c2c:	beq	d74 <h_hdl_umode_changed+0x22c>
     c30:	cmp	r4, #0
     c34:	beq	db4 <h_hdl_umode_changed+0x26c>
     c38:	ldr	r1, [pc, #448]	; e00 <h_hdl_umode_changed+0x2b8>
     c3c:	ldr	r1, [pc, r1]
     c40:	cmp	r1, #0
     c44:	beq	d74 <h_hdl_umode_changed+0x22c>
     c48:	ldr	r2, [r1]
     c4c:	mov	r0, r1
     c50:	ldr	r1, [r1, #8]
     c54:	cmp	r2, r4
     c58:	bne	c40 <h_hdl_umode_changed+0xf8>
     c5c:	ldr	r2, [r0, #4]
     c60:	cmp	r1, #0
     c64:	beq	ca4 <h_hdl_umode_changed+0x15c>
     c68:	str	r2, [r1, #4]
     c6c:	ldr	r2, [r0, #4]
     c70:	b	cb0 <h_hdl_umode_changed+0x168>
     c74:	ldr	r1, [pc, #380]	; df8 <h_hdl_umode_changed+0x2b0>
     c78:	add	r1, pc, r1
     c7c:	ldr	r2, [r1, #4]!
     c80:	cmp	r2, #0
     c84:	streq	r0, [r1]
     c88:	ldr	r1, [pc, #364]	; dfc <h_hdl_umode_changed+0x2b4>
     c8c:	add	r1, pc, r1
     c90:	str	r0, [r1]
     c94:	ldr	r0, [r1, #8]
     c98:	add	r0, r0, #1
     c9c:	str	r0, [r1, #8]
     ca0:	b	d74 <h_hdl_umode_changed+0x22c>
     ca4:	ldr	r3, [pc, #344]	; e04 <h_hdl_umode_changed+0x2bc>
     ca8:	add	r3, pc, r3
     cac:	str	r2, [r3, #4]
     cb0:	ldr	r6, [pc, #336]	; e08 <h_hdl_umode_changed+0x2c0>
     cb4:	cmp	r2, #0
     cb8:	add	r6, pc, r6
     cbc:	mov	r3, r6
     cc0:	addne	r3, r2, #8
     cc4:	str	r1, [r3]
     cc8:	mov	r1, #0
     ccc:	str	r1, [r0, #4]
     cd0:	str	r1, [r0, #8]
     cd4:	ldr	r1, [r6, #8]
     cd8:	sub	r1, r1, #1
     cdc:	str	r1, [r6, #8]
     ce0:	sub	sp, fp, #16
     ce4:	pop	{r4, r5, r6, sl, fp, lr}
     ce8:	b	7fc <rb_free_rb_dlink_node@plt>
     cec:	ldr	r1, [r4, #56]	; 0x38
     cf0:	ldr	r2, [r6, #288]	; 0x120
     cf4:	ldr	r0, [pc, #224]	; ddc <h_hdl_umode_changed+0x294>
     cf8:	bic	r1, r1, r2
     cfc:	add	r3, r4, #88	; 0x58
     d00:	str	r1, [r4, #56]	; 0x38
     d04:	add	r0, pc, r0
     d08:	str	r0, [sp]
     d0c:	ldr	r0, [pc, #204]	; de0 <h_hdl_umode_changed+0x298>
     d10:	ldr	r0, [pc, r0]
     d14:	ldr	r1, [pc, #200]	; de4 <h_hdl_umode_changed+0x29c>
     d18:	add	r2, r0, #88	; 0x58
     d1c:	add	r1, pc, r1
     d20:	mov	r0, r4
     d24:	bl	7cc <sendto_one@plt>
     d28:	cmp	r5, #0
     d2c:	bne	d74 <h_hdl_umode_changed+0x22c>
     d30:	ldr	r1, [pc, #176]	; de8 <h_hdl_umode_changed+0x2a0>
     d34:	ldr	r1, [pc, r1]
     d38:	cmp	r1, #0
     d3c:	beq	d74 <h_hdl_umode_changed+0x22c>
     d40:	ldr	r2, [r1]
     d44:	mov	r0, r1
     d48:	ldr	r1, [r1, #8]
     d4c:	cmp	r2, r4
     d50:	bne	d38 <h_hdl_umode_changed+0x1f0>
     d54:	ldr	r3, [r0, #4]
     d58:	ldr	r6, [pc, #140]	; dec <h_hdl_umode_changed+0x2a4>
     d5c:	cmp	r1, #0
     d60:	add	r6, pc, r6
     d64:	beq	d7c <h_hdl_umode_changed+0x234>
     d68:	str	r3, [r1, #4]
     d6c:	ldr	r3, [r0, #4]
     d70:	b	d80 <h_hdl_umode_changed+0x238>
     d74:	sub	sp, fp, #16
     d78:	pop	{r4, r5, r6, sl, fp, pc}
     d7c:	str	r3, [r6, #4]
     d80:	cmp	r3, #0
     d84:	mov	r2, r6
     d88:	addne	r2, r3, #8
     d8c:	str	r1, [r2]
     d90:	b	cc8 <h_hdl_umode_changed+0x180>
     d94:	ldr	r0, [pc, #112]	; e0c <h_hdl_umode_changed+0x2c4>
     d98:	ldr	r1, [pc, #112]	; e10 <h_hdl_umode_changed+0x2c8>
     d9c:	ldr	r3, [pc, #112]	; e14 <h_hdl_umode_changed+0x2cc>
     da0:	mov	r2, #144	; 0x90
     da4:	add	r0, pc, r0
     da8:	add	r1, pc, r1
     dac:	add	r3, pc, r3
     db0:	bl	85c <__assert_fail@plt>
     db4:	ldr	r0, [pc, #92]	; e18 <h_hdl_umode_changed+0x2d0>
     db8:	ldr	r1, [pc, #92]	; e1c <h_hdl_umode_changed+0x2d4>
     dbc:	ldr	r3, [pc, #92]	; e20 <h_hdl_umode_changed+0x2d8>
     dc0:	mov	r2, #288	; 0x120
     dc4:	add	r0, pc, r0
     dc8:	add	r1, pc, r1
     dcc:	add	r3, pc, r3
     dd0:	bl	85c <__assert_fail@plt>
     dd4:	.word	0x000114e4
     dd8:	.word	0x00000a41
     ddc:	.word	0x000008ed
     de0:	.word	0x00011348
     de4:	.word	0x0000077c
     de8:	.word	0x000113f8
     dec:	.word	0x000113cc
     df0:	.word	0x00011560
     df4:	.word	0x00011520
     df8:	.word	0x000114b4
     dfc:	.word	0x000114a0
     e00:	.word	0x000114f0
     e04:	.word	0x00011484
     e08:	.word	0x00011474
     e0c:	.word	0x00000812
     e10:	.word	0x000007aa
     e14:	.word	0x000007cf
     e18:	.word	0x000007aa
     e1c:	.word	0x0000078a
     e20:	.word	0x000007f4

00000e24 <h_hdl_whois>:
     e24:	ldr	r1, [pc, #76]	; e78 <h_hdl_whois+0x54>
     e28:	ldr	r1, [pc, r1]
     e2c:	ldr	r2, [r1, #288]	; 0x120
     e30:	ldr	r1, [r0, #4]
     e34:	ldr	r3, [r1, #56]	; 0x38
     e38:	tst	r2, r3
     e3c:	bxeq	lr
     e40:	ldr	r2, [r1, #24]
     e44:	ldr	r0, [r0]
     e48:	ldr	r2, [r2, #24]
     e4c:	cmp	r2, #0
     e50:	beq	e64 <h_hdl_whois+0x40>
     e54:	ldrb	r2, [r2]
     e58:	cmp	r2, #0
     e5c:	beq	e64 <h_hdl_whois+0x40>
     e60:	bx	lr
     e64:	ldr	r2, [pc, #16]	; e7c <h_hdl_whois+0x58>
     e68:	add	r3, r1, #88	; 0x58
     e6c:	movw	r1, #310	; 0x136
     e70:	add	r2, pc, r2
     e74:	b	820 <sendto_one_numeric@plt>
     e78:	.word	0x00011220
     e7c:	.word	0x00000792

00000e80 <me_dehelper>:
     e80:	push	{r4, r5, r6, sl, fp, lr}
     e84:	add	fp, sp, #16
     e88:	sub	sp, sp, #24
     e8c:	ldr	r6, [fp, #8]
     e90:	mov	r5, r2
     e94:	ldr	r0, [r6, #4]
     e98:	bl	82c <find_person@plt>
     e9c:	cmp	r0, #0
     ea0:	beq	f48 <me_dehelper+0xc8>
     ea4:	mov	r4, r0
     ea8:	ldrb	r0, [r0, #65]	; 0x41
     eac:	tst	r0, #32
     eb0:	beq	f40 <me_dehelper+0xc0>
     eb4:	ldrh	r0, [r4, #80]	; 0x50
     eb8:	cmp	r0, #64	; 0x40
     ebc:	bne	f40 <me_dehelper+0xc0>
     ec0:	ldr	r0, [r4, #56]	; 0x38
     ec4:	ldr	r1, [pc, #156]	; f68 <me_dehelper+0xe8>
     ec8:	ldr	r1, [pc, r1]
     ecc:	ldr	r1, [r1, #288]	; 0x120
     ed0:	tst	r1, r0
     ed4:	beq	f40 <me_dehelper+0xc0>
     ed8:	add	r6, r4, #88	; 0x58
     edc:	add	r5, r5, #88	; 0x58
     ee0:	mov	r0, #256	; 0x100
     ee4:	mov	r1, #256	; 0x100
     ee8:	str	r6, [sp]
     eec:	mov	r3, r5
     ef0:	ldr	r2, [pc, #116]	; f6c <me_dehelper+0xec>
     ef4:	add	r2, pc, r2
     ef8:	bl	7e4 <sendto_realops_snomask@plt>
     efc:	ldr	r1, [pc, #108]	; f70 <me_dehelper+0xf0>
     f00:	mov	r0, r4
     f04:	mov	r2, r5
     f08:	add	r1, pc, r1
     f0c:	bl	838 <sendto_one_notice@plt>
     f10:	mov	r0, #0
     f14:	add	r3, sp, #8
     f18:	mov	r1, r4
     f1c:	mov	r2, #3
     f20:	str	r0, [sp, #20]
     f24:	ldr	r0, [pc, #72]	; f74 <me_dehelper+0xf4>
     f28:	add	r0, pc, r0
     f2c:	str	r0, [sp, #16]
     f30:	mov	r0, r4
     f34:	str	r6, [sp, #8]
     f38:	str	r6, [sp, #12]
     f3c:	bl	7d8 <user_mode@plt>
     f40:	sub	sp, fp, #16
     f44:	pop	{r4, r5, r6, sl, fp, pc}
     f48:	ldr	r3, [r6, #4]
     f4c:	ldr	r2, [pc, #36]	; f78 <me_dehelper+0xf8>
     f50:	mov	r0, r5
     f54:	movw	r1, #401	; 0x191
     f58:	add	r2, pc, r2
     f5c:	sub	sp, fp, #16
     f60:	pop	{r4, r5, r6, sl, fp, lr}
     f64:	b	820 <sendto_one_numeric@plt>
     f68:	.word	0x00011180
     f6c:	.word	0x000005fd
     f70:	.word	0x00000604
     f74:	.word	0x00000605
     f78:	.word	0x00000567

00000f7c <mo_dehelper>:
     f7c:	push	{r4, r5, r6, sl, fp, lr}
     f80:	add	fp, sp, #16
     f84:	sub	sp, sp, #24
     f88:	ldr	r0, [r2, #24]
     f8c:	mov	r4, r2
     f90:	cmp	r0, #0
     f94:	beq	1070 <mo_dehelper+0xf4>
     f98:	ldr	r0, [r0, #36]	; 0x24
     f9c:	cmp	r0, #0
     fa0:	beq	1070 <mo_dehelper+0xf4>
     fa4:	ldr	r6, [fp, #8]
     fa8:	ldr	r1, [pc, #344]	; 1108 <mo_dehelper+0x18c>
     fac:	add	r1, pc, r1
     fb0:	bl	850 <privilegeset_in_set@plt>
     fb4:	cmp	r0, #0
     fb8:	beq	1070 <mo_dehelper+0xf4>
     fbc:	ldr	r0, [r6, #4]
     fc0:	bl	844 <find_named_person@plt>
     fc4:	cmp	r0, #0
     fc8:	beq	10e8 <mo_dehelper+0x16c>
     fcc:	mov	r5, r0
     fd0:	ldrb	r0, [r0, #65]	; 0x41
     fd4:	tst	r0, #32
     fd8:	beq	10a4 <mo_dehelper+0x128>
     fdc:	ldrh	r0, [r5, #80]	; 0x50
     fe0:	cmp	r0, #64	; 0x40
     fe4:	bne	10a4 <mo_dehelper+0x128>
     fe8:	ldr	r0, [r5, #56]	; 0x38
     fec:	ldr	r1, [pc, #292]	; 1118 <mo_dehelper+0x19c>
     ff0:	ldr	r1, [pc, r1]
     ff4:	ldr	r1, [r1, #288]	; 0x120
     ff8:	tst	r1, r0
     ffc:	beq	1068 <mo_dehelper+0xec>
    1000:	add	r6, r5, #88	; 0x58
    1004:	add	r4, r4, #88	; 0x58
    1008:	mov	r0, #256	; 0x100
    100c:	mov	r1, #256	; 0x100
    1010:	str	r6, [sp]
    1014:	mov	r3, r4
    1018:	ldr	r2, [pc, #252]	; 111c <mo_dehelper+0x1a0>
    101c:	add	r2, pc, r2
    1020:	bl	7e4 <sendto_realops_snomask@plt>
    1024:	ldr	r1, [pc, #244]	; 1120 <mo_dehelper+0x1a4>
    1028:	mov	r0, r5
    102c:	mov	r2, r4
    1030:	add	r1, pc, r1
    1034:	bl	838 <sendto_one_notice@plt>
    1038:	mov	r0, #0
    103c:	add	r3, sp, #8
    1040:	mov	r1, r5
    1044:	mov	r2, #3
    1048:	str	r0, [sp, #20]
    104c:	ldr	r0, [pc, #208]	; 1124 <mo_dehelper+0x1a8>
    1050:	add	r0, pc, r0
    1054:	str	r0, [sp, #16]
    1058:	mov	r0, r5
    105c:	str	r6, [sp, #8]
    1060:	str	r6, [sp, #12]
    1064:	bl	7d8 <user_mode@plt>
    1068:	sub	sp, fp, #16
    106c:	pop	{r4, r5, r6, sl, fp, pc}
    1070:	ldr	r0, [pc, #148]	; 110c <mo_dehelper+0x190>
    1074:	add	r3, r4, #88	; 0x58
    1078:	add	r0, pc, r0
    107c:	str	r0, [sp]
    1080:	ldr	r0, [pc, #136]	; 1110 <mo_dehelper+0x194>
    1084:	ldr	r0, [pc, r0]
    1088:	ldr	r1, [pc, #132]	; 1114 <mo_dehelper+0x198>
    108c:	add	r2, r0, #88	; 0x58
    1090:	add	r1, pc, r1
    1094:	mov	r0, r4
    1098:	bl	7cc <sendto_one@plt>
    109c:	sub	sp, fp, #16
    10a0:	pop	{r4, r5, r6, sl, fp, pc}
    10a4:	mov	r0, r5
    10a8:	ldrb	r2, [r4, #396]!	; 0x18c
    10ac:	ldrb	r1, [r0, #396]!	; 0x18c
    10b0:	cmp	r1, #0
    10b4:	ldr	r1, [r5, #32]
    10b8:	addeq	r0, r5, #88	; 0x58
    10bc:	cmp	r2, #0
    10c0:	str	r0, [sp]
    10c4:	subeq	r4, r4, #308	; 0x134
    10c8:	mov	r0, r5
    10cc:	mov	r2, r4
    10d0:	add	r3, r1, #88	; 0x58
    10d4:	ldr	r1, [pc, #76]	; 1128 <mo_dehelper+0x1ac>
    10d8:	add	r1, pc, r1
    10dc:	bl	7cc <sendto_one@plt>
    10e0:	sub	sp, fp, #16
    10e4:	pop	{r4, r5, r6, sl, fp, pc}
    10e8:	ldr	r3, [r6, #4]
    10ec:	ldr	r2, [pc, #56]	; 112c <mo_dehelper+0x1b0>
    10f0:	mov	r0, r4
    10f4:	movw	r1, #401	; 0x191
    10f8:	add	r2, pc, r2
    10fc:	sub	sp, fp, #16
    1100:	pop	{r4, r5, r6, sl, fp, lr}
    1104:	b	820 <sendto_one_numeric@plt>
    1108:	.word	0x000004de
    110c:	.word	0x00000417
    1110:	.word	0x00010fd4
    1114:	.word	0x00000408
    1118:	.word	0x00011058
    111c:	.word	0x000004d5
    1120:	.word	0x000004dc
    1124:	.word	0x000004dd
    1128:	.word	0x00000400
    112c:	.word	0x000003c7

00001130 <_modinit>:
    1130:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    1134:	add	fp, sp, #24
    1138:	bl	7f0 <find_umode_slot@plt>
    113c:	ldr	r4, [pc, #276]	; 1258 <_modinit+0x128>
    1140:	ldr	r4, [pc, r4]
    1144:	str	r0, [r4, #288]	; 0x120
    1148:	bl	868 <construct_umodebuf@plt>
    114c:	ldr	r0, [pc, #264]	; 125c <_modinit+0x12c>
    1150:	ldr	r0, [pc, r0]
    1154:	ldr	r5, [r0]
    1158:	cmp	r5, #0
    115c:	beq	1230 <_modinit+0x100>
    1160:	ldr	r7, [pc, #248]	; 1260 <_modinit+0x130>
    1164:	mov	r8, #0
    1168:	add	r7, pc, r7
    116c:	ldr	r6, [r5]
    1170:	ldrh	r0, [r6, #80]	; 0x50
    1174:	cmp	r0, #64	; 0x40
    1178:	bne	1198 <_modinit+0x68>
    117c:	b	11b4 <_modinit+0x84>
    1180:	add	r1, r1, #4
    1184:	str	r0, [r1]
    1188:	str	r0, [r7]
    118c:	ldr	r0, [r7, #8]
    1190:	add	r0, r0, #1
    1194:	str	r0, [r7, #8]
    1198:	ldr	r5, [r5, #8]
    119c:	cmp	r5, #0
    11a0:	beq	1230 <_modinit+0x100>
    11a4:	ldr	r6, [r5]
    11a8:	ldrh	r0, [r6, #80]	; 0x50
    11ac:	cmp	r0, #64	; 0x40
    11b0:	bne	1198 <_modinit+0x68>
    11b4:	ldr	r0, [r6, #24]
    11b8:	cmp	r0, #0
    11bc:	beq	1198 <_modinit+0x68>
    11c0:	ldr	r0, [r6, #56]	; 0x38
    11c4:	ldr	r1, [r4, #288]	; 0x120
    11c8:	tst	r1, r0
    11cc:	beq	1198 <_modinit+0x68>
    11d0:	ldr	r0, [pc, #140]	; 1264 <_modinit+0x134>
    11d4:	ldr	r0, [pc, r0]
    11d8:	cmp	r0, #0
    11dc:	beq	11f8 <_modinit+0xc8>
    11e0:	ldr	r1, [r0]
    11e4:	cmp	r1, r6
    11e8:	beq	1198 <_modinit+0x68>
    11ec:	ldr	r0, [r0, #8]
    11f0:	cmp	r0, #0
    11f4:	bne	11e0 <_modinit+0xb0>
    11f8:	bl	814 <rb_make_rb_dlink_node@plt>
    11fc:	cmp	r0, #0
    1200:	beq	1238 <_modinit+0x108>
    1204:	stm	r0, {r6, r8}
    1208:	ldr	r1, [pc, #88]	; 1268 <_modinit+0x138>
    120c:	ldr	r1, [pc, r1]
    1210:	cmp	r1, #0
    1214:	str	r1, [r0, #8]
    1218:	bne	1180 <_modinit+0x50>
    121c:	mov	r1, r7
    1220:	ldr	r2, [r1, #4]!
    1224:	cmp	r2, #0
    1228:	streq	r0, [r1]
    122c:	b	1188 <_modinit+0x58>
    1230:	mov	r0, #0
    1234:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    1238:	ldr	r0, [pc, #44]	; 126c <_modinit+0x13c>
    123c:	ldr	r1, [pc, #44]	; 1270 <_modinit+0x140>
    1240:	ldr	r3, [pc, #44]	; 1274 <_modinit+0x144>
    1244:	mov	r2, #144	; 0x90
    1248:	add	r0, pc, r0
    124c:	add	r1, pc, r1
    1250:	add	r3, pc, r3
    1254:	bl	85c <__assert_fail@plt>
    1258:	.word	0x00010f08
    125c:	.word	0x00010f00
    1260:	.word	0x00010fc4
    1264:	.word	0x00010f58
    1268:	.word	0x00010f20
    126c:	.word	0x0000036e
    1270:	.word	0x00000306
    1274:	.word	0x0000032b

00001278 <_moddeinit>:
    1278:	push	{r4, r5, r6, sl, fp, lr}
    127c:	add	fp, sp, #16
    1280:	ldr	r0, [pc, #132]	; 130c <_moddeinit+0x94>
    1284:	mov	r4, #0
    1288:	ldr	r0, [pc, r0]
    128c:	str	r4, [r0, #288]	; 0x120
    1290:	bl	868 <construct_umodebuf@plt>
    1294:	ldr	r0, [pc, #116]	; 1310 <_moddeinit+0x98>
    1298:	ldr	r0, [pc, r0]
    129c:	cmp	r0, #0
    12a0:	beq	1308 <_moddeinit+0x90>
    12a4:	ldr	r5, [pc, #104]	; 1314 <_moddeinit+0x9c>
    12a8:	add	r5, pc, r5
    12ac:	ldmib	r0, {r1, r6}
    12b0:	cmp	r6, #0
    12b4:	bne	12fc <_moddeinit+0x84>
    12b8:	str	r1, [r5, #4]
    12bc:	cmp	r1, #0
    12c0:	mov	r2, r5
    12c4:	addne	r2, r1, #8
    12c8:	str	r6, [r2]
    12cc:	str	r4, [r0, #4]
    12d0:	str	r4, [r0, #8]
    12d4:	ldr	r1, [r5, #8]
    12d8:	sub	r1, r1, #1
    12dc:	str	r1, [r5, #8]
    12e0:	bl	7fc <rb_free_rb_dlink_node@plt>
    12e4:	cmp	r6, #0
    12e8:	mov	r0, r6
    12ec:	beq	1308 <_moddeinit+0x90>
    12f0:	ldmib	r0, {r1, r6}
    12f4:	cmp	r6, #0
    12f8:	beq	12b8 <_moddeinit+0x40>
    12fc:	str	r1, [r6, #4]
    1300:	ldr	r1, [r0, #4]
    1304:	b	12bc <_moddeinit+0x44>
    1308:	pop	{r4, r5, r6, sl, fp, pc}
    130c:	.word	0x00010dc0
    1310:	.word	0x00010e94
    1314:	.word	0x00010e84

00001318 <recurse_client_exit>:
    1318:	push	{r4, r5, fp, lr}
    131c:	add	fp, sp, #8
    1320:	mov	r4, r0
    1324:	ldrh	r0, [r0, #80]	; 0x50
    1328:	cmp	r0, #32
    132c:	beq	13a0 <recurse_client_exit+0x88>
    1330:	cmp	r0, #64	; 0x40
    1334:	bne	13e8 <recurse_client_exit+0xd0>
    1338:	ldr	r0, [r4, #24]
    133c:	cmp	r0, #0
    1340:	beq	13e8 <recurse_client_exit+0xd0>
    1344:	ldr	r0, [r4, #56]	; 0x38
    1348:	ldr	r1, [pc, #208]	; 1420 <recurse_client_exit+0x108>
    134c:	ldr	r1, [pc, r1]
    1350:	ldr	r1, [r1, #288]	; 0x120
    1354:	tst	r1, r0
    1358:	popeq	{r4, r5, fp, pc}
    135c:	ldr	r1, [pc, #192]	; 1424 <recurse_client_exit+0x10c>
    1360:	ldr	r1, [pc, r1]
    1364:	cmp	r1, #0
    1368:	beq	13e8 <recurse_client_exit+0xd0>
    136c:	ldr	r2, [r1]
    1370:	mov	r0, r1
    1374:	ldr	r1, [r1, #8]
    1378:	cmp	r2, r4
    137c:	bne	1364 <recurse_client_exit+0x4c>
    1380:	ldr	r3, [r0, #4]
    1384:	ldr	r5, [pc, #156]	; 1428 <recurse_client_exit+0x110>
    1388:	cmp	r1, #0
    138c:	add	r5, pc, r5
    1390:	beq	13ec <recurse_client_exit+0xd4>
    1394:	str	r3, [r1, #4]
    1398:	ldr	r3, [r0, #4]
    139c:	b	13f0 <recurse_client_exit+0xd8>
    13a0:	ldr	r0, [r4, #28]
    13a4:	ldr	r5, [r0, #48]	; 0x30
    13a8:	cmp	r5, #0
    13ac:	beq	13c8 <recurse_client_exit+0xb0>
    13b0:	ldr	r0, [r5]
    13b4:	bl	1318 <recurse_client_exit>
    13b8:	ldr	r5, [r5, #8]
    13bc:	cmp	r5, #0
    13c0:	bne	13b0 <recurse_client_exit+0x98>
    13c4:	ldr	r0, [r4, #28]
    13c8:	ldr	r4, [r0, #36]	; 0x24
    13cc:	cmp	r4, #0
    13d0:	beq	13e8 <recurse_client_exit+0xd0>
    13d4:	ldr	r0, [r4]
    13d8:	bl	1318 <recurse_client_exit>
    13dc:	ldr	r4, [r4, #8]
    13e0:	cmp	r4, #0
    13e4:	bne	13d4 <recurse_client_exit+0xbc>
    13e8:	pop	{r4, r5, fp, pc}
    13ec:	str	r3, [r5, #4]
    13f0:	cmp	r3, #0
    13f4:	mov	r2, r5
    13f8:	addne	r2, r3, #8
    13fc:	str	r1, [r2]
    1400:	mov	r1, #0
    1404:	str	r1, [r0, #4]
    1408:	str	r1, [r0, #8]
    140c:	ldr	r1, [r5, #8]
    1410:	sub	r1, r1, #1
    1414:	str	r1, [r5, #8]
    1418:	pop	{r4, r5, fp, lr}
    141c:	b	7fc <rb_free_rb_dlink_node@plt>
    1420:	.word	0x00010cfc
    1424:	.word	0x00010dcc
    1428:	.word	0x00010da0

Disassembly of section .fini:

0000142c <_fini>:
    142c:	push	{r3, lr}
    1430:	pop	{r3, pc}
