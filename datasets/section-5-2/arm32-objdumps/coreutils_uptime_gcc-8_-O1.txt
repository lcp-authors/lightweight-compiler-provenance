
../repos/coreutils/src/uptime:     file format elf32-littlearm


Disassembly of section .init:

00010f70 <.init>:
   10f70:	push	{r3, lr}
   10f74:	bl	11314 <dcngettext@plt+0x48>
   10f78:	pop	{r3, pc}

Disassembly of section .plt:

00010f7c <calloc@plt-0x14>:
   10f7c:	push	{lr}		; (str lr, [sp, #-4]!)
   10f80:	ldr	lr, [pc, #4]	; 10f8c <calloc@plt-0x4>
   10f84:	add	lr, pc, lr
   10f88:	ldr	pc, [lr, #8]!
   10f8c:	andeq	r8, r1, r4, ror r0

00010f90 <calloc@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #24, 20	; 0x18000
   10f98:	ldr	pc, [ip, #116]!	; 0x74

00010f9c <fputs_unlocked@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #24, 20	; 0x18000
   10fa4:	ldr	pc, [ip, #108]!	; 0x6c

00010fa8 <raise@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #24, 20	; 0x18000
   10fb0:	ldr	pc, [ip, #100]!	; 0x64

00010fb4 <gmtime_r@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #24, 20	; 0x18000
   10fbc:	ldr	pc, [ip, #92]!	; 0x5c

00010fc0 <strcmp@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #24, 20	; 0x18000
   10fc8:	ldr	pc, [ip, #84]!	; 0x54

00010fcc <mktime@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #24, 20	; 0x18000
   10fd4:	ldr	pc, [ip, #76]!	; 0x4c

00010fd8 <fflush@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #24, 20	; 0x18000
   10fe0:	ldr	pc, [ip, #68]!	; 0x44

00010fe4 <utmpxname@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #24, 20	; 0x18000
   10fec:	ldr	pc, [ip, #60]!	; 0x3c

00010ff0 <free@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #24, 20	; 0x18000
   10ff8:	ldr	pc, [ip, #52]!	; 0x34

00010ffc <_exit@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #24, 20	; 0x18000
   11004:	ldr	pc, [ip, #44]!	; 0x2c

00011008 <memcpy@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #24, 20	; 0x18000
   11010:	ldr	pc, [ip, #36]!	; 0x24

00011014 <mbsinit@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #24, 20	; 0x18000
   1101c:	ldr	pc, [ip, #28]!

00011020 <time@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #24, 20	; 0x18000
   11028:	ldr	pc, [ip, #20]!

0001102c <memcmp@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #24, 20	; 0x18000
   11034:	ldr	pc, [ip, #12]!

00011038 <fputc_unlocked@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #24, 20	; 0x18000
   11040:	ldr	pc, [ip, #4]!

00011044 <dcgettext@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #94208	; 0x17000
   1104c:	ldr	pc, [ip, #4092]!	; 0xffc

00011050 <setutxent@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #94208	; 0x17000
   11058:	ldr	pc, [ip, #4084]!	; 0xff4

0001105c <realloc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #94208	; 0x17000
   11064:	ldr	pc, [ip, #4076]!	; 0xfec

00011068 <localtime_r@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #94208	; 0x17000
   11070:	ldr	pc, [ip, #4068]!	; 0xfe4

00011074 <textdomain@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #94208	; 0x17000
   1107c:	ldr	pc, [ip, #4060]!	; 0xfdc

00011080 <iswprint@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #94208	; 0x17000
   11088:	ldr	pc, [ip, #4052]!	; 0xfd4

0001108c <tzset@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #94208	; 0x17000
   11094:	ldr	pc, [ip, #4044]!	; 0xfcc

00011098 <fwrite@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #94208	; 0x17000
   110a0:	ldr	pc, [ip, #4036]!	; 0xfc4

000110a4 <lseek64@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #94208	; 0x17000
   110ac:	ldr	pc, [ip, #4028]!	; 0xfbc

000110b0 <__ctype_get_mb_cur_max@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #94208	; 0x17000
   110b8:	ldr	pc, [ip, #4020]!	; 0xfb4

000110bc <__fpending@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #94208	; 0x17000
   110c4:	ldr	pc, [ip, #4012]!	; 0xfac

000110c8 <mbrtowc@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #94208	; 0x17000
   110d0:	ldr	pc, [ip, #4004]!	; 0xfa4

000110d4 <error@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #94208	; 0x17000
   110dc:	ldr	pc, [ip, #3996]!	; 0xf9c

000110e0 <getenv@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #94208	; 0x17000
   110e8:	ldr	pc, [ip, #3988]!	; 0xf94

000110ec <malloc@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #94208	; 0x17000
   110f4:	ldr	pc, [ip, #3980]!	; 0xf8c

000110f8 <__libc_start_main@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #94208	; 0x17000
   11100:	ldr	pc, [ip, #3972]!	; 0xf84

00011104 <strftime@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #94208	; 0x17000
   1110c:	ldr	pc, [ip, #3964]!	; 0xf7c

00011110 <__freading@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #94208	; 0x17000
   11118:	ldr	pc, [ip, #3956]!	; 0xf74

0001111c <localtime@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #94208	; 0x17000
   11124:	ldr	pc, [ip, #3948]!	; 0xf6c

00011128 <__ctype_tolower_loc@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #94208	; 0x17000
   11130:	ldr	pc, [ip, #3940]!	; 0xf64

00011134 <__ctype_toupper_loc@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #94208	; 0x17000
   1113c:	ldr	pc, [ip, #3932]!	; 0xf5c

00011140 <__gmon_start__@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #94208	; 0x17000
   11148:	ldr	pc, [ip, #3924]!	; 0xf54

0001114c <getopt_long@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #94208	; 0x17000
   11154:	ldr	pc, [ip, #3916]!	; 0xf4c

00011158 <kill@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #94208	; 0x17000
   11160:	ldr	pc, [ip, #3908]!	; 0xf44

00011164 <__ctype_b_loc@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #94208	; 0x17000
   1116c:	ldr	pc, [ip, #3900]!	; 0xf3c

00011170 <exit@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #94208	; 0x17000
   11178:	ldr	pc, [ip, #3892]!	; 0xf34

0001117c <strlen@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #94208	; 0x17000
   11184:	ldr	pc, [ip, #3884]!	; 0xf2c

00011188 <setenv@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #94208	; 0x17000
   11190:	ldr	pc, [ip, #3876]!	; 0xf24

00011194 <__errno_location@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #94208	; 0x17000
   1119c:	ldr	pc, [ip, #3868]!	; 0xf1c

000111a0 <__cxa_atexit@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #94208	; 0x17000
   111a8:	ldr	pc, [ip, #3860]!	; 0xf14

000111ac <memset@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #94208	; 0x17000
   111b4:	ldr	pc, [ip, #3852]!	; 0xf0c

000111b8 <strncpy@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #94208	; 0x17000
   111c0:	ldr	pc, [ip, #3844]!	; 0xf04

000111c4 <__printf_chk@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #94208	; 0x17000
   111cc:	ldr	pc, [ip, #3836]!	; 0xefc

000111d0 <fileno@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #94208	; 0x17000
   111d8:	ldr	pc, [ip, #3828]!	; 0xef4

000111dc <__fprintf_chk@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #94208	; 0x17000
   111e4:	ldr	pc, [ip, #3820]!	; 0xeec

000111e8 <fclose@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #94208	; 0x17000
   111f0:	ldr	pc, [ip, #3812]!	; 0xee4

000111f4 <fseeko64@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #94208	; 0x17000
   111fc:	ldr	pc, [ip, #3804]!	; 0xedc

00011200 <getloadavg@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #94208	; 0x17000
   11208:	ldr	pc, [ip, #3796]!	; 0xed4

0001120c <strtod_l@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #94208	; 0x17000
   11214:	ldr	pc, [ip, #3788]!	; 0xecc

00011218 <endutxent@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #94208	; 0x17000
   11220:	ldr	pc, [ip, #3780]!	; 0xec4

00011224 <__overflow@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #94208	; 0x17000
   1122c:	ldr	pc, [ip, #3772]!	; 0xebc

00011230 <setlocale@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #94208	; 0x17000
   11238:	ldr	pc, [ip, #3764]!	; 0xeb4

0001123c <strrchr@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #94208	; 0x17000
   11244:	ldr	pc, [ip, #3756]!	; 0xeac

00011248 <nl_langinfo@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #94208	; 0x17000
   11250:	ldr	pc, [ip, #3748]!	; 0xea4

00011254 <fputc@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #94208	; 0x17000
   1125c:	ldr	pc, [ip, #3740]!	; 0xe9c

00011260 <newlocale@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #94208	; 0x17000
   11268:	ldr	pc, [ip, #3732]!	; 0xe94

0001126c <timegm@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #94208	; 0x17000
   11274:	ldr	pc, [ip, #3724]!	; 0xe8c

00011278 <fopen64@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #94208	; 0x17000
   11280:	ldr	pc, [ip, #3716]!	; 0xe84

00011284 <fgets_unlocked@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #94208	; 0x17000
   1128c:	ldr	pc, [ip, #3708]!	; 0xe7c

00011290 <bindtextdomain@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #94208	; 0x17000
   11298:	ldr	pc, [ip, #3700]!	; 0xe74

0001129c <unsetenv@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #94208	; 0x17000
   112a4:	ldr	pc, [ip, #3692]!	; 0xe6c

000112a8 <strncmp@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #94208	; 0x17000
   112b0:	ldr	pc, [ip, #3684]!	; 0xe64

000112b4 <abort@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #94208	; 0x17000
   112bc:	ldr	pc, [ip, #3676]!	; 0xe5c

000112c0 <getutxent@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #94208	; 0x17000
   112c8:	ldr	pc, [ip, #3668]!	; 0xe54

000112cc <dcngettext@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #94208	; 0x17000
   112d4:	ldr	pc, [ip, #3660]!	; 0xe4c

Disassembly of section .text:

000112d8 <.text>:
   112d8:	mov	fp, #0
   112dc:	mov	lr, #0
   112e0:	pop	{r1}		; (ldr r1, [sp], #4)
   112e4:	mov	r2, sp
   112e8:	push	{r2}		; (str r2, [sp, #-4]!)
   112ec:	push	{r0}		; (str r0, [sp, #-4]!)
   112f0:	ldr	ip, [pc, #16]	; 11308 <dcngettext@plt+0x3c>
   112f4:	push	{ip}		; (str ip, [sp, #-4]!)
   112f8:	ldr	r0, [pc, #12]	; 1130c <dcngettext@plt+0x40>
   112fc:	ldr	r3, [pc, #12]	; 11310 <dcngettext@plt+0x44>
   11300:	bl	110f8 <__libc_start_main@plt>
   11304:	bl	112b4 <abort@plt>
   11308:	strdeq	r7, [r1], -r0
   1130c:			; <UNDEFINED> instruction: 0x00011cbc
   11310:	muleq	r1, r0, r9
   11314:	ldr	r3, [pc, #20]	; 11330 <dcngettext@plt+0x64>
   11318:	ldr	r2, [pc, #20]	; 11334 <dcngettext@plt+0x68>
   1131c:	add	r3, pc, r3
   11320:	ldr	r2, [r3, r2]
   11324:	cmp	r2, #0
   11328:	bxeq	lr
   1132c:	b	11140 <__gmon_start__@plt>
   11330:	ldrdeq	r7, [r1], -ip
   11334:	andeq	r0, r0, r4, lsr #2
   11338:	ldr	r0, [pc, #24]	; 11358 <dcngettext@plt+0x8c>
   1133c:	ldr	r3, [pc, #24]	; 1135c <dcngettext@plt+0x90>
   11340:	cmp	r3, r0
   11344:	bxeq	lr
   11348:	ldr	r3, [pc, #16]	; 11360 <dcngettext@plt+0x94>
   1134c:	cmp	r3, #0
   11350:	bxeq	lr
   11354:	bx	r3
   11358:	andeq	r9, r2, r8, ror r1
   1135c:	andeq	r9, r2, r8, ror r1
   11360:	andeq	r0, r0, r0
   11364:	ldr	r0, [pc, #36]	; 11390 <dcngettext@plt+0xc4>
   11368:	ldr	r1, [pc, #36]	; 11394 <dcngettext@plt+0xc8>
   1136c:	sub	r1, r1, r0
   11370:	asr	r1, r1, #2
   11374:	add	r1, r1, r1, lsr #31
   11378:	asrs	r1, r1, #1
   1137c:	bxeq	lr
   11380:	ldr	r3, [pc, #16]	; 11398 <dcngettext@plt+0xcc>
   11384:	cmp	r3, #0
   11388:	bxeq	lr
   1138c:	bx	r3
   11390:	andeq	r9, r2, r8, ror r1
   11394:	andeq	r9, r2, r8, ror r1
   11398:	andeq	r0, r0, r0
   1139c:	push	{r4, lr}
   113a0:	ldr	r4, [pc, #24]	; 113c0 <dcngettext@plt+0xf4>
   113a4:	ldrb	r3, [r4]
   113a8:	cmp	r3, #0
   113ac:	popne	{r4, pc}
   113b0:	bl	11338 <dcngettext@plt+0x6c>
   113b4:	mov	r3, #1
   113b8:	strb	r3, [r4]
   113bc:	pop	{r4, pc}
   113c0:	muleq	r2, r4, r1
   113c4:	b	11364 <dcngettext@plt+0x98>
   113c8:	push	{lr}		; (str lr, [sp, #-4]!)
   113cc:	sub	sp, sp, #60	; 0x3c
   113d0:	subs	r4, r0, #0
   113d4:	beq	1141c <dcngettext@plt+0x150>
   113d8:	movw	r3, #37256	; 0x9188
   113dc:	movt	r3, #2
   113e0:	ldr	r5, [r3]
   113e4:	mov	r2, #5
   113e8:	movw	r1, #31320	; 0x7a58
   113ec:	movt	r1, #1
   113f0:	mov	r0, #0
   113f4:	bl	11044 <dcgettext@plt>
   113f8:	movw	r3, #37284	; 0x91a4
   113fc:	movt	r3, #2
   11400:	ldr	r3, [r3]
   11404:	mov	r2, r0
   11408:	mov	r1, #1
   1140c:	mov	r0, r5
   11410:	bl	111dc <__fprintf_chk@plt>
   11414:	mov	r0, r4
   11418:	bl	11170 <exit@plt>
   1141c:	mov	r2, #5
   11420:	movw	r1, #31360	; 0x7a80
   11424:	movt	r1, #1
   11428:	mov	r0, #0
   1142c:	bl	11044 <dcgettext@plt>
   11430:	movw	r3, #37284	; 0x91a4
   11434:	movt	r3, #2
   11438:	ldr	r2, [r3]
   1143c:	mov	r1, r0
   11440:	mov	r0, #1
   11444:	bl	111c4 <__printf_chk@plt>
   11448:	mov	r2, #5
   1144c:	movw	r1, #31392	; 0x7aa0
   11450:	movt	r1, #1
   11454:	mov	r0, #0
   11458:	bl	11044 <dcgettext@plt>
   1145c:	mov	r1, r0
   11460:	mov	r0, #1
   11464:	bl	111c4 <__printf_chk@plt>
   11468:	mov	r2, #5
   1146c:	movw	r1, #31580	; 0x7b5c
   11470:	movt	r1, #1
   11474:	mov	r0, #0
   11478:	bl	11044 <dcgettext@plt>
   1147c:	mov	r1, r0
   11480:	mov	r0, #1
   11484:	bl	111c4 <__printf_chk@plt>
   11488:	mov	r2, #5
   1148c:	movw	r1, #31664	; 0x7bb0
   11490:	movt	r1, #1
   11494:	mov	r0, #0
   11498:	bl	11044 <dcgettext@plt>
   1149c:	movw	r3, #31724	; 0x7bec
   114a0:	movt	r3, #1
   114a4:	movw	r2, #31740	; 0x7bfc
   114a8:	movt	r2, #1
   114ac:	mov	r1, r0
   114b0:	mov	r0, #1
   114b4:	bl	111c4 <__printf_chk@plt>
   114b8:	mov	r2, #5
   114bc:	movw	r1, #31756	; 0x7c0c
   114c0:	movt	r1, #1
   114c4:	mov	r0, #0
   114c8:	bl	11044 <dcgettext@plt>
   114cc:	movw	r5, #37260	; 0x918c
   114d0:	movt	r5, #2
   114d4:	ldr	r1, [r5]
   114d8:	bl	10f9c <fputs_unlocked@plt>
   114dc:	mov	r2, #5
   114e0:	movw	r1, #31804	; 0x7c3c
   114e4:	movt	r1, #1
   114e8:	mov	r0, #0
   114ec:	bl	11044 <dcgettext@plt>
   114f0:	ldr	r1, [r5]
   114f4:	bl	10f9c <fputs_unlocked@plt>
   114f8:	movw	r0, #31256	; 0x7a18
   114fc:	movt	r0, #1
   11500:	ldr	r1, [r0]
   11504:	ldr	r3, [r0, #4]
   11508:	str	r1, [sp]
   1150c:	str	r3, [sp, #4]
   11510:	ldrd	r2, [r0, #8]
   11514:	strd	r2, [sp, #8]
   11518:	ldrd	r2, [r0, #16]
   1151c:	strd	r2, [sp, #16]
   11520:	ldrd	r2, [r0, #24]
   11524:	strd	r2, [sp, #24]
   11528:	ldrd	r2, [r0, #32]
   1152c:	strd	r2, [sp, #32]
   11530:	ldrd	r2, [r0, #40]	; 0x28
   11534:	strd	r2, [sp, #40]	; 0x28
   11538:	ldrd	r2, [r0, #48]	; 0x30
   1153c:	strd	r2, [sp, #48]	; 0x30
   11540:	cmp	r1, #0
   11544:	moveq	r5, sp
   11548:	beq	11574 <dcngettext@plt+0x2a8>
   1154c:	mov	r5, sp
   11550:	movw	r6, #31312	; 0x7a50
   11554:	movt	r6, #1
   11558:	mov	r0, r6
   1155c:	bl	10fc0 <strcmp@plt>
   11560:	cmp	r0, #0
   11564:	beq	11574 <dcngettext@plt+0x2a8>
   11568:	ldr	r1, [r5, #8]!
   1156c:	cmp	r1, #0
   11570:	bne	11558 <dcngettext@plt+0x28c>
   11574:	ldr	r5, [r5, #4]
   11578:	cmp	r5, #0
   1157c:	beq	116d8 <dcngettext@plt+0x40c>
   11580:	mov	r2, #5
   11584:	movw	r1, #31860	; 0x7c74
   11588:	movt	r1, #1
   1158c:	mov	r0, #0
   11590:	bl	11044 <dcgettext@plt>
   11594:	movw	r3, #31884	; 0x7c8c
   11598:	movt	r3, #1
   1159c:	movw	r2, #31924	; 0x7cb4
   115a0:	movt	r2, #1
   115a4:	mov	r1, r0
   115a8:	mov	r0, #1
   115ac:	bl	111c4 <__printf_chk@plt>
   115b0:	mov	r1, #0
   115b4:	mov	r0, #5
   115b8:	bl	11230 <setlocale@plt>
   115bc:	cmp	r0, #0
   115c0:	beq	115dc <dcngettext@plt+0x310>
   115c4:	mov	r2, #3
   115c8:	movw	r1, #31940	; 0x7cc4
   115cc:	movt	r1, #1
   115d0:	bl	112a8 <strncmp@plt>
   115d4:	cmp	r0, #0
   115d8:	bne	11658 <dcngettext@plt+0x38c>
   115dc:	mov	r2, #5
   115e0:	movw	r1, #32016	; 0x7d10
   115e4:	movt	r1, #1
   115e8:	mov	r0, #0
   115ec:	bl	11044 <dcgettext@plt>
   115f0:	movw	r6, #31312	; 0x7a50
   115f4:	movt	r6, #1
   115f8:	mov	r3, r6
   115fc:	movw	r2, #31884	; 0x7c8c
   11600:	movt	r2, #1
   11604:	mov	r1, r0
   11608:	mov	r0, #1
   1160c:	bl	111c4 <__printf_chk@plt>
   11610:	mov	r2, #5
   11614:	movw	r1, #32044	; 0x7d2c
   11618:	movt	r1, #1
   1161c:	mov	r0, #0
   11620:	bl	11044 <dcgettext@plt>
   11624:	mov	r1, r0
   11628:	movw	r2, #32408	; 0x7e98
   1162c:	movt	r2, #1
   11630:	movw	r3, #31800	; 0x7c38
   11634:	movt	r3, #1
   11638:	cmp	r5, r6
   1163c:	moveq	r3, r2
   11640:	mov	r2, r5
   11644:	mov	r0, #1
   11648:	bl	111c4 <__printf_chk@plt>
   1164c:	b	11414 <dcngettext@plt+0x148>
   11650:	movw	r5, #31312	; 0x7a50
   11654:	movt	r5, #1
   11658:	mov	r2, #5
   1165c:	movw	r1, #31944	; 0x7cc8
   11660:	movt	r1, #1
   11664:	mov	r0, #0
   11668:	bl	11044 <dcgettext@plt>
   1166c:	movw	r3, #37260	; 0x918c
   11670:	movt	r3, #2
   11674:	ldr	r1, [r3]
   11678:	bl	10f9c <fputs_unlocked@plt>
   1167c:	b	115dc <dcngettext@plt+0x310>
   11680:	mov	r2, #5
   11684:	movw	r1, #32016	; 0x7d10
   11688:	movt	r1, #1
   1168c:	mov	r0, #0
   11690:	bl	11044 <dcgettext@plt>
   11694:	movw	r5, #31312	; 0x7a50
   11698:	movt	r5, #1
   1169c:	mov	r3, r5
   116a0:	movw	r2, #31884	; 0x7c8c
   116a4:	movt	r2, #1
   116a8:	mov	r1, r0
   116ac:	mov	r0, #1
   116b0:	bl	111c4 <__printf_chk@plt>
   116b4:	mov	r2, #5
   116b8:	movw	r1, #32044	; 0x7d2c
   116bc:	movt	r1, #1
   116c0:	mov	r0, #0
   116c4:	bl	11044 <dcgettext@plt>
   116c8:	mov	r1, r0
   116cc:	movw	r3, #32408	; 0x7e98
   116d0:	movt	r3, #1
   116d4:	b	11640 <dcngettext@plt+0x374>
   116d8:	mov	r2, #5
   116dc:	movw	r1, #31860	; 0x7c74
   116e0:	movt	r1, #1
   116e4:	mov	r0, #0
   116e8:	bl	11044 <dcgettext@plt>
   116ec:	movw	r3, #31884	; 0x7c8c
   116f0:	movt	r3, #1
   116f4:	movw	r2, #31924	; 0x7cb4
   116f8:	movt	r2, #1
   116fc:	mov	r1, r0
   11700:	mov	r0, #1
   11704:	bl	111c4 <__printf_chk@plt>
   11708:	mov	r1, #0
   1170c:	mov	r0, #5
   11710:	bl	11230 <setlocale@plt>
   11714:	cmp	r0, #0
   11718:	beq	11680 <dcngettext@plt+0x3b4>
   1171c:	mov	r2, #3
   11720:	movw	r1, #31940	; 0x7cc4
   11724:	movt	r1, #1
   11728:	bl	112a8 <strncmp@plt>
   1172c:	cmp	r0, #0
   11730:	bne	11650 <dcngettext@plt+0x384>
   11734:	mov	r2, #5
   11738:	movw	r1, #32016	; 0x7d10
   1173c:	movt	r1, #1
   11740:	mov	r0, #0
   11744:	bl	11044 <dcgettext@plt>
   11748:	movw	r5, #31312	; 0x7a50
   1174c:	movt	r5, #1
   11750:	mov	r3, r5
   11754:	movw	r2, #31884	; 0x7c8c
   11758:	movt	r2, #1
   1175c:	mov	r1, r0
   11760:	mov	r0, #1
   11764:	bl	111c4 <__printf_chk@plt>
   11768:	mov	r2, #5
   1176c:	movw	r1, #32044	; 0x7d2c
   11770:	movt	r1, #1
   11774:	mov	r0, #0
   11778:	bl	11044 <dcgettext@plt>
   1177c:	mov	r1, r0
   11780:	movw	r3, #32408	; 0x7e98
   11784:	movt	r3, #1
   11788:	b	11640 <dcngettext@plt+0x374>
   1178c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11790:	strd	r6, [sp, #8]
   11794:	strd	r8, [sp, #16]
   11798:	str	sl, [sp, #24]
   1179c:	str	lr, [sp, #28]
   117a0:	sub	sp, sp, #8192	; 0x2000
   117a4:	sub	sp, sp, #48	; 0x30
   117a8:	mov	r6, r0
   117ac:	mov	r4, r1
   117b0:	movw	r1, #32096	; 0x7d60
   117b4:	movt	r1, #1
   117b8:	movw	r0, #32100	; 0x7d64
   117bc:	movt	r0, #1
   117c0:	bl	11278 <fopen64@plt>
   117c4:	subs	r7, r0, #0
   117c8:	beq	11c30 <dcngettext@plt+0x964>
   117cc:	add	r5, sp, #16
   117d0:	mov	r2, r7
   117d4:	mov	r1, #8192	; 0x2000
   117d8:	mov	r0, r5
   117dc:	bl	11284 <fgets_unlocked@plt>
   117e0:	cmp	r5, r0
   117e4:	movne	r5, #0
   117e8:	beq	11820 <dcngettext@plt+0x554>
   117ec:	mov	r0, r7
   117f0:	bl	11fd0 <dcngettext@plt+0xd04>
   117f4:	sub	r3, r6, #1
   117f8:	cmp	r6, #0
   117fc:	bne	11c40 <dcngettext@plt+0x974>
   11800:	mov	r0, #0
   11804:	bl	11020 <time@plt>
   11808:	add	r3, sp, #8192	; 0x2000
   1180c:	add	r3, r3, #44	; 0x2c
   11810:	str	r0, [r3]
   11814:	cmp	r5, #0
   11818:	bne	118d4 <dcngettext@plt+0x608>
   1181c:	b	11bfc <dcngettext@plt+0x930>
   11820:	add	r3, sp, #48	; 0x30
   11824:	add	r5, sp, #16
   11828:	sub	r1, r3, #36	; 0x24
   1182c:	mov	r0, r5
   11830:	bl	11e00 <dcngettext@plt+0xb34>
   11834:	ldr	r3, [sp, #12]
   11838:	cmp	r3, r5
   1183c:	moveq	r5, #0
   11840:	beq	117ec <dcngettext@plt+0x520>
   11844:	vcmpe.f64	d0, #0.0
   11848:	vmrs	APSR_nzcv, fpscr
   1184c:	mvnlt	r5, #0
   11850:	blt	117ec <dcngettext@plt+0x520>
   11854:	vldr	d7, [pc, #972]	; 11c28 <dcngettext@plt+0x95c>
   11858:	vcmpe.f64	d0, d7
   1185c:	vmrs	APSR_nzcv, fpscr
   11860:	vcvtmi.s32.f64	s15, d0
   11864:	vmovmi	r5, s15
   11868:	mvnpl	r5, #0
   1186c:	b	117ec <dcngettext@plt+0x520>
   11870:	ldrsh	r2, [r4]
   11874:	cmp	r2, #2
   11878:	ldreq	r7, [r4, #340]	; 0x154
   1187c:	add	r4, r4, #384	; 0x180
   11880:	sub	r3, r3, #1
   11884:	cmn	r3, #1
   11888:	beq	118ac <dcngettext@plt+0x5e0>
   1188c:	ldrb	r2, [r4, #44]	; 0x2c
   11890:	cmp	r2, #0
   11894:	beq	11870 <dcngettext@plt+0x5a4>
   11898:	ldrsh	r2, [r4]
   1189c:	cmp	r2, #7
   118a0:	addeq	r6, r6, #1
   118a4:	bne	11870 <dcngettext@plt+0x5a4>
   118a8:	b	1187c <dcngettext@plt+0x5b0>
   118ac:	mov	r0, #0
   118b0:	bl	11020 <time@plt>
   118b4:	add	r3, sp, #8192	; 0x2000
   118b8:	add	r3, r3, #44	; 0x2c
   118bc:	str	r0, [r3]
   118c0:	cmp	r5, #0
   118c4:	bne	118d4 <dcngettext@plt+0x608>
   118c8:	cmp	r7, #0
   118cc:	subne	r5, r0, r7
   118d0:	beq	11bfc <dcngettext@plt+0x930>
   118d4:	movw	r7, #17671	; 0x4507
   118d8:	movt	r7, #49710	; 0xc22e
   118dc:	smull	r3, r7, r7, r5
   118e0:	add	r7, r7, r5
   118e4:	asr	r3, r5, #31
   118e8:	rsb	r7, r3, r7, asr #16
   118ec:	movw	r2, #44672	; 0xae80
   118f0:	movt	r2, #65534	; 0xfffe
   118f4:	mla	r3, r2, r7, r5
   118f8:	movw	r8, #46021	; 0xb3c5
   118fc:	movt	r8, #37282	; 0x91a2
   11900:	smull	r2, r8, r8, r3
   11904:	add	r8, r8, r3
   11908:	asr	r2, r3, #31
   1190c:	rsb	r8, r2, r8, asr #11
   11910:	movw	r2, #61936	; 0xf1f0
   11914:	movt	r2, #65535	; 0xffff
   11918:	mla	r2, r2, r8, r3
   1191c:	movw	r4, #34953	; 0x8889
   11920:	movt	r4, #34952	; 0x8888
   11924:	smull	r3, r4, r4, r2
   11928:	add	r4, r4, r2
   1192c:	asr	r2, r2, #31
   11930:	rsb	r4, r2, r4, asr #5
   11934:	add	r0, sp, #8192	; 0x2000
   11938:	add	r0, r0, #44	; 0x2c
   1193c:	bl	1111c <localtime@plt>
   11940:	subs	r9, r0, #0
   11944:	beq	11a74 <dcngettext@plt+0x7a8>
   11948:	movw	r3, #37260	; 0x918c
   1194c:	movt	r3, #2
   11950:	ldr	sl, [r3]
   11954:	mov	r2, #5
   11958:	movw	r1, #32140	; 0x7d8c
   1195c:	movt	r1, #1
   11960:	mov	r0, #0
   11964:	bl	11044 <dcgettext@plt>
   11968:	mov	r3, #0
   1196c:	str	r3, [sp]
   11970:	mov	r2, r9
   11974:	mov	r1, r0
   11978:	mov	r0, sl
   1197c:	bl	13c9c <dcngettext@plt+0x29d0>
   11980:	cmn	r5, #1
   11984:	beq	11a98 <dcngettext@plt+0x7cc>
   11988:	movw	r3, #20863	; 0x517f
   1198c:	movt	r3, #1
   11990:	cmp	r5, r3
   11994:	ble	11abc <dcngettext@plt+0x7f0>
   11998:	mov	r0, r7
   1199c:	asr	r1, r7, #31
   119a0:	mvn	r2, #0
   119a4:	mov	r3, #0
   119a8:	cmp	r1, r3
   119ac:	cmpeq	r7, r2
   119b0:	movls	r3, r7
   119b4:	bls	119d0 <dcngettext@plt+0x704>
   119b8:	movw	r2, #16960	; 0x4240
   119bc:	movt	r2, #15
   119c0:	mov	r3, #0
   119c4:	bl	1781c <dcngettext@plt+0x6550>
   119c8:	add	r3, r2, #999424	; 0xf4000
   119cc:	add	r3, r3, #576	; 0x240
   119d0:	mov	r2, #5
   119d4:	str	r2, [sp]
   119d8:	movw	r2, #32188	; 0x7dbc
   119dc:	movt	r2, #1
   119e0:	movw	r1, #32212	; 0x7dd4
   119e4:	movt	r1, #1
   119e8:	mov	r0, #0
   119ec:	bl	112cc <dcngettext@plt>
   119f0:	str	r4, [sp]
   119f4:	mov	r3, r8
   119f8:	mov	r2, r7
   119fc:	mov	r1, r0
   11a00:	mov	r0, #1
   11a04:	bl	111c4 <__printf_chk@plt>
   11a08:	mov	r3, #5
   11a0c:	str	r3, [sp]
   11a10:	mov	r3, r6
   11a14:	movw	r2, #32252	; 0x7dfc
   11a18:	movt	r2, #1
   11a1c:	movw	r1, #32264	; 0x7e08
   11a20:	movt	r1, #1
   11a24:	mov	r0, #0
   11a28:	bl	112cc <dcngettext@plt>
   11a2c:	mov	r2, r6
   11a30:	mov	r1, r0
   11a34:	mov	r0, #1
   11a38:	bl	111c4 <__printf_chk@plt>
   11a3c:	mov	r1, #3
   11a40:	add	r0, sp, #8192	; 0x2000
   11a44:	add	r0, r0, #16
   11a48:	bl	11200 <getloadavg@plt>
   11a4c:	mov	r4, r0
   11a50:	cmn	r0, #1
   11a54:	beq	11ae8 <dcngettext@plt+0x81c>
   11a58:	cmp	r0, #0
   11a5c:	bgt	11b20 <dcngettext@plt+0x854>
   11a60:	cmp	r4, #1
   11a64:	bgt	11b50 <dcngettext@plt+0x884>
   11a68:	cmp	r4, #1
   11a6c:	bne	11bbc <dcngettext@plt+0x8f0>
   11a70:	b	11b90 <dcngettext@plt+0x8c4>
   11a74:	mov	r2, #5
   11a78:	movw	r1, #32152	; 0x7d98
   11a7c:	movt	r1, #1
   11a80:	mov	r0, #0
   11a84:	bl	11044 <dcgettext@plt>
   11a88:	mov	r1, r0
   11a8c:	mov	r0, #1
   11a90:	bl	111c4 <__printf_chk@plt>
   11a94:	b	11980 <dcngettext@plt+0x6b4>
   11a98:	mov	r2, #5
   11a9c:	movw	r1, #32164	; 0x7da4
   11aa0:	movt	r1, #1
   11aa4:	mov	r0, #0
   11aa8:	bl	11044 <dcgettext@plt>
   11aac:	mov	r1, r0
   11ab0:	mov	r0, #1
   11ab4:	bl	111c4 <__printf_chk@plt>
   11ab8:	b	11a08 <dcngettext@plt+0x73c>
   11abc:	mov	r2, #5
   11ac0:	movw	r1, #32236	; 0x7dec
   11ac4:	movt	r1, #1
   11ac8:	mov	r0, #0
   11acc:	bl	11044 <dcgettext@plt>
   11ad0:	mov	r3, r4
   11ad4:	mov	r2, r8
   11ad8:	mov	r1, r0
   11adc:	mov	r0, #1
   11ae0:	bl	111c4 <__printf_chk@plt>
   11ae4:	b	11a08 <dcngettext@plt+0x73c>
   11ae8:	movw	r3, #37260	; 0x918c
   11aec:	movt	r3, #2
   11af0:	ldr	r0, [r3]
   11af4:	ldr	r3, [r0, #20]
   11af8:	ldr	r2, [r0, #24]
   11afc:	cmp	r3, r2
   11b00:	addcc	r2, r3, #1
   11b04:	strcc	r2, [r0, #20]
   11b08:	movcc	r2, #10
   11b0c:	strbcc	r2, [r3]
   11b10:	bcc	11bbc <dcngettext@plt+0x8f0>
   11b14:	mov	r1, #10
   11b18:	bl	11224 <__overflow@plt>
   11b1c:	b	11bbc <dcngettext@plt+0x8f0>
   11b20:	mov	r2, #5
   11b24:	movw	r1, #32276	; 0x7e14
   11b28:	movt	r1, #1
   11b2c:	mov	r0, #0
   11b30:	bl	11044 <dcgettext@plt>
   11b34:	add	r3, sp, #8192	; 0x2000
   11b38:	add	r3, r3, #16
   11b3c:	ldrd	r2, [r3]
   11b40:	mov	r1, r0
   11b44:	mov	r0, #1
   11b48:	bl	111c4 <__printf_chk@plt>
   11b4c:	b	11a60 <dcngettext@plt+0x794>
   11b50:	add	r3, sp, #8192	; 0x2000
   11b54:	add	r3, r3, #24
   11b58:	ldrd	r2, [r3]
   11b5c:	movw	r1, #32300	; 0x7e2c
   11b60:	movt	r1, #1
   11b64:	mov	r0, #1
   11b68:	bl	111c4 <__printf_chk@plt>
   11b6c:	cmp	r4, #2
   11b70:	ble	11b90 <dcngettext@plt+0x8c4>
   11b74:	add	r3, sp, #8192	; 0x2000
   11b78:	add	r3, r3, #32
   11b7c:	ldrd	r2, [r3]
   11b80:	movw	r1, #32300	; 0x7e2c
   11b84:	movt	r1, #1
   11b88:	mov	r0, #1
   11b8c:	bl	111c4 <__printf_chk@plt>
   11b90:	movw	r3, #37260	; 0x918c
   11b94:	movt	r3, #2
   11b98:	ldr	r0, [r3]
   11b9c:	ldr	r3, [r0, #20]
   11ba0:	ldr	r2, [r0, #24]
   11ba4:	cmp	r3, r2
   11ba8:	addcc	r2, r3, #1
   11bac:	strcc	r2, [r0, #20]
   11bb0:	movcc	r2, #10
   11bb4:	strbcc	r2, [r3]
   11bb8:	bcs	11bdc <dcngettext@plt+0x910>
   11bbc:	add	sp, sp, #8192	; 0x2000
   11bc0:	add	sp, sp, #48	; 0x30
   11bc4:	ldrd	r4, [sp]
   11bc8:	ldrd	r6, [sp, #8]
   11bcc:	ldrd	r8, [sp, #16]
   11bd0:	ldr	sl, [sp, #24]
   11bd4:	add	sp, sp, #28
   11bd8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bdc:	mov	r1, #10
   11be0:	bl	11224 <__overflow@plt>
   11be4:	b	11bbc <dcngettext@plt+0x8f0>
   11be8:	mov	r0, #0
   11bec:	bl	11020 <time@plt>
   11bf0:	add	r3, sp, #8192	; 0x2000
   11bf4:	add	r3, r3, #44	; 0x2c
   11bf8:	str	r0, [r3]
   11bfc:	bl	11194 <__errno_location@plt>
   11c00:	ldr	r4, [r0]
   11c04:	mov	r2, #5
   11c08:	movw	r1, #32116	; 0x7d74
   11c0c:	movt	r1, #1
   11c10:	mov	r0, #0
   11c14:	bl	11044 <dcgettext@plt>
   11c18:	mov	r2, r0
   11c1c:	mov	r1, r4
   11c20:	mov	r0, #1
   11c24:	bl	110d4 <error@plt>
   11c28:			; <UNDEFINED> instruction: 0xffc00000
   11c2c:	ldrshmi	pc, [pc, #255]	; 11d33 <dcngettext@plt+0xa67>	; <UNPREDICTABLE>
   11c30:	sub	r3, r6, #1
   11c34:	cmp	r6, #0
   11c38:	movne	r5, #0
   11c3c:	beq	11be8 <dcngettext@plt+0x91c>
   11c40:	mov	r7, #0
   11c44:	mov	r6, r7
   11c48:	b	1188c <dcngettext@plt+0x5c0>
   11c4c:	push	{lr}		; (str lr, [sp, #-4]!)
   11c50:	sub	sp, sp, #12
   11c54:	mov	r4, r0
   11c58:	mov	r3, #0
   11c5c:	str	r3, [sp]
   11c60:	mov	r3, r1
   11c64:	mov	r2, sp
   11c68:	add	r1, sp, #4
   11c6c:	bl	16300 <dcngettext@plt+0x5034>
   11c70:	cmp	r0, #0
   11c74:	bne	11c8c <dcngettext@plt+0x9c0>
   11c78:	ldr	r1, [sp]
   11c7c:	ldr	r0, [sp, #4]
   11c80:	bl	1178c <dcngettext@plt+0x4c0>
   11c84:	mov	r0, #0
   11c88:	bl	11170 <exit@plt>
   11c8c:	bl	11194 <__errno_location@plt>
   11c90:	ldr	r5, [r0]
   11c94:	mov	r2, r4
   11c98:	mov	r1, #3
   11c9c:	mov	r0, #0
   11ca0:	bl	16088 <dcngettext@plt+0x4dbc>
   11ca4:	mov	r3, r0
   11ca8:	movw	r2, #32544	; 0x7f20
   11cac:	movt	r2, #1
   11cb0:	mov	r1, r5
   11cb4:	mov	r0, #1
   11cb8:	bl	110d4 <error@plt>
   11cbc:	push	{lr}		; (str lr, [sp, #-4]!)
   11cc0:	sub	sp, sp, #36	; 0x24
   11cc4:	mov	r4, r0
   11cc8:	mov	r6, r1
   11ccc:	ldr	r0, [r1]
   11cd0:	bl	13f58 <dcngettext@plt+0x2c8c>
   11cd4:	movw	r1, #31800	; 0x7c38
   11cd8:	movt	r1, #1
   11cdc:	mov	r0, #6
   11ce0:	bl	11230 <setlocale@plt>
   11ce4:	movw	r5, #31928	; 0x7cb8
   11ce8:	movt	r5, #1
   11cec:	movw	r1, #32308	; 0x7e34
   11cf0:	movt	r1, #1
   11cf4:	mov	r0, r5
   11cf8:	bl	11290 <bindtextdomain@plt>
   11cfc:	mov	r0, r5
   11d00:	bl	11074 <textdomain@plt>
   11d04:	movw	r0, #7872	; 0x1ec0
   11d08:	movt	r0, #1
   11d0c:	bl	179f4 <dcngettext@plt+0x6728>
   11d10:	mov	r3, #0
   11d14:	str	r3, [sp, #24]
   11d18:	movw	r3, #32332	; 0x7e4c
   11d1c:	movt	r3, #1
   11d20:	str	r3, [sp, #20]
   11d24:	movw	r3, #32344	; 0x7e58
   11d28:	movt	r3, #1
   11d2c:	str	r3, [sp, #16]
   11d30:	movw	r3, #32360	; 0x7e68
   11d34:	movt	r3, #1
   11d38:	str	r3, [sp, #12]
   11d3c:	movw	r3, #5064	; 0x13c8
   11d40:	movt	r3, #1
   11d44:	str	r3, [sp, #8]
   11d48:	mov	r3, #1
   11d4c:	str	r3, [sp, #4]
   11d50:	movw	r3, #37168	; 0x9130
   11d54:	movt	r3, #2
   11d58:	ldr	r3, [r3]
   11d5c:	str	r3, [sp]
   11d60:	movw	r3, #31924	; 0x7cb4
   11d64:	movt	r3, #1
   11d68:	movw	r2, #31312	; 0x7a50
   11d6c:	movt	r2, #1
   11d70:	mov	r1, r6
   11d74:	mov	r0, r4
   11d78:	bl	13e70 <dcngettext@plt+0x2ba4>
   11d7c:	movw	r3, #37248	; 0x9180
   11d80:	movt	r3, #2
   11d84:	ldr	r3, [r3]
   11d88:	subs	r4, r4, r3
   11d8c:	beq	11de4 <dcngettext@plt+0xb18>
   11d90:	cmp	r4, #1
   11d94:	beq	11df4 <dcngettext@plt+0xb28>
   11d98:	mov	r2, #5
   11d9c:	movw	r1, #32380	; 0x7e7c
   11da0:	movt	r1, #1
   11da4:	mov	r0, #0
   11da8:	bl	11044 <dcgettext@plt>
   11dac:	mov	r4, r0
   11db0:	movw	r3, #37248	; 0x9180
   11db4:	movt	r3, #2
   11db8:	ldr	r3, [r3]
   11dbc:	add	r3, r3, #1
   11dc0:	ldr	r0, [r6, r3, lsl #2]
   11dc4:	bl	16254 <dcngettext@plt+0x4f88>
   11dc8:	mov	r3, r0
   11dcc:	mov	r2, r4
   11dd0:	mov	r1, #0
   11dd4:	mov	r0, r1
   11dd8:	bl	110d4 <error@plt>
   11ddc:	mov	r0, #1
   11de0:	bl	113c8 <dcngettext@plt+0xfc>
   11de4:	mov	r1, #1
   11de8:	movw	r0, #31740	; 0x7bfc
   11dec:	movt	r0, #1
   11df0:	bl	11c4c <dcngettext@plt+0x980>
   11df4:	mov	r1, #0
   11df8:	ldr	r0, [r6, r3, lsl #2]
   11dfc:	bl	11c4c <dcngettext@plt+0x980>
   11e00:	strd	r4, [sp, #-16]!
   11e04:	str	r6, [sp, #8]
   11e08:	str	lr, [sp, #12]
   11e0c:	mov	r5, r0
   11e10:	mov	r4, r1
   11e14:	movw	r3, #37272	; 0x9198
   11e18:	movt	r3, #2
   11e1c:	ldr	r3, [r3]
   11e20:	cmp	r3, #0
   11e24:	beq	11e58 <dcngettext@plt+0xb8c>
   11e28:	movw	r3, #37272	; 0x9198
   11e2c:	movt	r3, #2
   11e30:	ldr	r2, [r3]
   11e34:	cmp	r2, #0
   11e38:	beq	11e7c <dcngettext@plt+0xbb0>
   11e3c:	mov	r1, r4
   11e40:	mov	r0, r5
   11e44:	bl	1120c <strtod_l@plt>
   11e48:	ldrd	r4, [sp]
   11e4c:	ldr	r6, [sp, #8]
   11e50:	add	sp, sp, #12
   11e54:	pop	{pc}		; (ldr pc, [sp], #4)
   11e58:	mov	r2, #0
   11e5c:	movw	r1, #32524	; 0x7f0c
   11e60:	movt	r1, #1
   11e64:	movw	r0, #8127	; 0x1fbf
   11e68:	bl	11260 <newlocale@plt>
   11e6c:	movw	r3, #37272	; 0x9198
   11e70:	movt	r3, #2
   11e74:	str	r0, [r3]
   11e78:	b	11e28 <dcngettext@plt+0xb5c>
   11e7c:	cmp	r4, #0
   11e80:	beq	11e90 <dcngettext@plt+0xbc4>
   11e84:	str	r5, [r4]
   11e88:	vldr	d0, [pc, #8]	; 11e98 <dcngettext@plt+0xbcc>
   11e8c:	b	11e48 <dcngettext@plt+0xb7c>
   11e90:	vldr	d0, [pc]	; 11e98 <dcngettext@plt+0xbcc>
   11e94:	b	11e48 <dcngettext@plt+0xb7c>
	...
   11ea0:	movw	r3, #37276	; 0x919c
   11ea4:	movt	r3, #2
   11ea8:	str	r0, [r3]
   11eac:	bx	lr
   11eb0:	movw	r3, #37276	; 0x919c
   11eb4:	movt	r3, #2
   11eb8:	strb	r0, [r3, #4]
   11ebc:	bx	lr
   11ec0:	strd	r4, [sp, #-16]!
   11ec4:	str	r6, [sp, #8]
   11ec8:	str	lr, [sp, #12]
   11ecc:	sub	sp, sp, #8
   11ed0:	movw	r3, #37260	; 0x918c
   11ed4:	movt	r3, #2
   11ed8:	ldr	r0, [r3]
   11edc:	bl	17524 <dcngettext@plt+0x6258>
   11ee0:	cmp	r0, #0
   11ee4:	beq	11f0c <dcngettext@plt+0xc40>
   11ee8:	movw	r3, #37276	; 0x919c
   11eec:	movt	r3, #2
   11ef0:	ldrb	r3, [r3, #4]
   11ef4:	cmp	r3, #0
   11ef8:	beq	11f38 <dcngettext@plt+0xc6c>
   11efc:	bl	11194 <__errno_location@plt>
   11f00:	ldr	r3, [r0]
   11f04:	cmp	r3, #32
   11f08:	bne	11f38 <dcngettext@plt+0xc6c>
   11f0c:	movw	r3, #37256	; 0x9188
   11f10:	movt	r3, #2
   11f14:	ldr	r0, [r3]
   11f18:	bl	17524 <dcngettext@plt+0x6258>
   11f1c:	cmp	r0, #0
   11f20:	bne	11fc0 <dcngettext@plt+0xcf4>
   11f24:	add	sp, sp, #8
   11f28:	ldrd	r4, [sp]
   11f2c:	ldr	r6, [sp, #8]
   11f30:	add	sp, sp, #12
   11f34:	pop	{pc}		; (ldr pc, [sp], #4)
   11f38:	mov	r2, #5
   11f3c:	movw	r1, #32528	; 0x7f10
   11f40:	movt	r1, #1
   11f44:	mov	r0, #0
   11f48:	bl	11044 <dcgettext@plt>
   11f4c:	mov	r4, r0
   11f50:	movw	r3, #37276	; 0x919c
   11f54:	movt	r3, #2
   11f58:	ldr	r5, [r3]
   11f5c:	cmp	r5, #0
   11f60:	beq	11fa0 <dcngettext@plt+0xcd4>
   11f64:	bl	11194 <__errno_location@plt>
   11f68:	ldr	r6, [r0]
   11f6c:	mov	r0, r5
   11f70:	bl	16050 <dcngettext@plt+0x4d84>
   11f74:	str	r4, [sp]
   11f78:	mov	r3, r0
   11f7c:	movw	r2, #32540	; 0x7f1c
   11f80:	movt	r2, #1
   11f84:	mov	r1, r6
   11f88:	mov	r0, #0
   11f8c:	bl	110d4 <error@plt>
   11f90:	movw	r3, #37172	; 0x9134
   11f94:	movt	r3, #2
   11f98:	ldr	r0, [r3]
   11f9c:	bl	10ffc <_exit@plt>
   11fa0:	bl	11194 <__errno_location@plt>
   11fa4:	mov	r3, r4
   11fa8:	movw	r2, #32544	; 0x7f20
   11fac:	movt	r2, #1
   11fb0:	ldr	r1, [r0]
   11fb4:	mov	r0, #0
   11fb8:	bl	110d4 <error@plt>
   11fbc:	b	11f90 <dcngettext@plt+0xcc4>
   11fc0:	movw	r3, #37172	; 0x9134
   11fc4:	movt	r3, #2
   11fc8:	ldr	r0, [r3]
   11fcc:	bl	10ffc <_exit@plt>
   11fd0:	strd	r4, [sp, #-16]!
   11fd4:	str	r6, [sp, #8]
   11fd8:	str	lr, [sp, #12]
   11fdc:	sub	sp, sp, #8
   11fe0:	mov	r4, r0
   11fe4:	bl	111d0 <fileno@plt>
   11fe8:	cmp	r0, #0
   11fec:	blt	12064 <dcngettext@plt+0xd98>
   11ff0:	mov	r0, r4
   11ff4:	bl	11110 <__freading@plt>
   11ff8:	cmp	r0, #0
   11ffc:	beq	12030 <dcngettext@plt+0xd64>
   12000:	mov	r0, r4
   12004:	bl	111d0 <fileno@plt>
   12008:	mov	r3, #1
   1200c:	str	r3, [sp]
   12010:	mov	r2, #0
   12014:	mov	r3, #0
   12018:	bl	110a4 <lseek64@plt>
   1201c:	mvn	r2, #0
   12020:	mvn	r3, #0
   12024:	cmp	r1, r3
   12028:	cmpeq	r0, r2
   1202c:	beq	12070 <dcngettext@plt+0xda4>
   12030:	mov	r0, r4
   12034:	bl	1208c <dcngettext@plt+0xdc0>
   12038:	cmp	r0, #0
   1203c:	beq	12070 <dcngettext@plt+0xda4>
   12040:	bl	11194 <__errno_location@plt>
   12044:	mov	r5, r0
   12048:	ldr	r6, [r0]
   1204c:	mov	r0, r4
   12050:	bl	111e8 <fclose@plt>
   12054:	cmp	r6, #0
   12058:	strne	r6, [r5]
   1205c:	mvnne	r0, #0
   12060:	b	12078 <dcngettext@plt+0xdac>
   12064:	mov	r0, r4
   12068:	bl	111e8 <fclose@plt>
   1206c:	b	12078 <dcngettext@plt+0xdac>
   12070:	mov	r0, r4
   12074:	bl	111e8 <fclose@plt>
   12078:	add	sp, sp, #8
   1207c:	ldrd	r4, [sp]
   12080:	ldr	r6, [sp, #8]
   12084:	add	sp, sp, #12
   12088:	pop	{pc}		; (ldr pc, [sp], #4)
   1208c:	str	r4, [sp, #-8]!
   12090:	str	lr, [sp, #4]
   12094:	sub	sp, sp, #8
   12098:	subs	r4, r0, #0
   1209c:	beq	120b0 <dcngettext@plt+0xde4>
   120a0:	mov	r0, r4
   120a4:	bl	11110 <__freading@plt>
   120a8:	cmp	r0, #0
   120ac:	bne	120c8 <dcngettext@plt+0xdfc>
   120b0:	mov	r0, r4
   120b4:	bl	10fd8 <fflush@plt>
   120b8:	add	sp, sp, #8
   120bc:	ldr	r4, [sp]
   120c0:	add	sp, sp, #4
   120c4:	pop	{pc}		; (ldr pc, [sp], #4)
   120c8:	ldr	r3, [r4]
   120cc:	tst	r3, #256	; 0x100
   120d0:	bne	120e0 <dcngettext@plt+0xe14>
   120d4:	mov	r0, r4
   120d8:	bl	10fd8 <fflush@plt>
   120dc:	b	120b8 <dcngettext@plt+0xdec>
   120e0:	mov	r3, #1
   120e4:	str	r3, [sp]
   120e8:	mov	r2, #0
   120ec:	mov	r3, #0
   120f0:	mov	r0, r4
   120f4:	bl	13cdc <dcngettext@plt+0x2a10>
   120f8:	b	120d4 <dcngettext@plt+0xe08>
   120fc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12100:	strd	r6, [sp, #8]
   12104:	str	r8, [sp, #16]
   12108:	str	lr, [sp, #20]
   1210c:	subs	r5, r2, #0
   12110:	beq	12144 <dcngettext@plt+0xe78>
   12114:	mov	r6, r0
   12118:	mov	r4, r1
   1211c:	bl	11128 <__ctype_tolower_loc@plt>
   12120:	mov	r7, r0
   12124:	add	r5, r4, r5
   12128:	ldrb	r2, [r4], #1
   1212c:	ldr	r3, [r7]
   12130:	mov	r1, r6
   12134:	ldr	r0, [r3, r2, lsl #2]
   12138:	bl	11254 <fputc@plt>
   1213c:	cmp	r5, r4
   12140:	bne	12128 <dcngettext@plt+0xe5c>
   12144:	ldrd	r4, [sp]
   12148:	ldrd	r6, [sp, #8]
   1214c:	ldr	r8, [sp, #16]
   12150:	add	sp, sp, #20
   12154:	pop	{pc}		; (ldr pc, [sp], #4)
   12158:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1215c:	strd	r6, [sp, #8]
   12160:	str	r8, [sp, #16]
   12164:	str	lr, [sp, #20]
   12168:	subs	r5, r2, #0
   1216c:	beq	121a0 <dcngettext@plt+0xed4>
   12170:	mov	r6, r0
   12174:	mov	r4, r1
   12178:	bl	11134 <__ctype_toupper_loc@plt>
   1217c:	mov	r7, r0
   12180:	add	r5, r4, r5
   12184:	ldrb	r2, [r4], #1
   12188:	ldr	r3, [r7]
   1218c:	mov	r1, r6
   12190:	ldr	r0, [r3, r2, lsl #2]
   12194:	bl	11254 <fputc@plt>
   12198:	cmp	r5, r4
   1219c:	bne	12184 <dcngettext@plt+0xeb8>
   121a0:	ldrd	r4, [sp]
   121a4:	ldrd	r6, [sp, #8]
   121a8:	ldr	r8, [sp, #16]
   121ac:	add	sp, sp, #20
   121b0:	pop	{pc}		; (ldr pc, [sp], #4)
   121b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   121b8:	strd	r6, [sp, #8]
   121bc:	strd	r8, [sp, #16]
   121c0:	strd	sl, [sp, #24]
   121c4:	str	lr, [sp, #32]
   121c8:	sub	sp, sp, #1120	; 0x460
   121cc:	sub	sp, sp, #12
   121d0:	str	r0, [sp, #24]
   121d4:	mov	r6, r1
   121d8:	mov	r4, r2
   121dc:	str	r2, [sp, #40]	; 0x28
   121e0:	str	r3, [sp, #32]
   121e4:	ldr	sl, [sp, #1172]	; 0x494
   121e8:	bl	11194 <__errno_location@plt>
   121ec:	str	r0, [sp, #28]
   121f0:	ldr	r3, [r0]
   121f4:	str	r3, [sp, #44]	; 0x2c
   121f8:	ldr	r9, [r4, #8]
   121fc:	ldr	r2, [r4, #40]	; 0x28
   12200:	movw	r3, #31800	; 0x7c38
   12204:	movt	r3, #1
   12208:	cmp	r2, #0
   1220c:	moveq	r2, r3
   12210:	str	r2, [sp, #48]	; 0x30
   12214:	cmp	r9, #12
   12218:	subgt	r9, r9, #12
   1221c:	bgt	12228 <dcngettext@plt+0xf5c>
   12220:	cmp	r9, #0
   12224:	moveq	r9, #12
   12228:	ldrb	r3, [r6]
   1222c:	cmp	r3, #0
   12230:	beq	13abc <dcngettext@plt+0x27f0>
   12234:	mov	r7, #0
   12238:	movw	r2, #46021	; 0xb3c5
   1223c:	movt	r2, #37282	; 0x91a2
   12240:	str	r2, [sp, #68]	; 0x44
   12244:	movw	r2, #34953	; 0x8889
   12248:	movt	r2, #34952	; 0x8888
   1224c:	str	r2, [sp, #72]	; 0x48
   12250:	movw	r2, #34079	; 0x851f
   12254:	movt	r2, #20971	; 0x51eb
   12258:	str	r2, [sp, #56]	; 0x38
   1225c:	movw	fp, #9363	; 0x2493
   12260:	movt	fp, #37449	; 0x9249
   12264:	movw	r8, #26215	; 0x6667
   12268:	movt	r8, #26214	; 0x6666
   1226c:	str	r9, [sp, #64]	; 0x40
   12270:	str	fp, [sp, #52]	; 0x34
   12274:	str	r8, [sp, #60]	; 0x3c
   12278:	b	122b8 <dcngettext@plt+0xfec>
   1227c:	ldr	r3, [sp, #24]
   12280:	cmp	r3, #0
   12284:	beq	1229c <dcngettext@plt+0xfd0>
   12288:	cmp	sl, #1
   1228c:	bhi	12310 <dcngettext@plt+0x1044>
   12290:	ldr	r1, [sp, #24]
   12294:	ldrb	r0, [r6]
   12298:	bl	11254 <fputc@plt>
   1229c:	add	r7, r7, r5
   122a0:	mov	r4, r6
   122a4:	add	r6, r4, #1
   122a8:	ldrb	r3, [r4, #1]
   122ac:	mvn	sl, #0
   122b0:	cmp	r3, #0
   122b4:	beq	13ac0 <dcngettext@plt+0x27f4>
   122b8:	cmp	r3, #37	; 0x25
   122bc:	beq	1244c <dcngettext@plt+0x1180>
   122c0:	bic	sl, sl, sl, asr #31
   122c4:	cmp	sl, #1
   122c8:	movcs	r5, sl
   122cc:	movcc	r5, #1
   122d0:	mvn	r3, r7
   122d4:	cmp	r3, r5
   122d8:	bhi	1227c <dcngettext@plt+0xfb0>
   122dc:	mov	r3, #34	; 0x22
   122e0:	ldr	r2, [sp, #28]
   122e4:	str	r3, [r2]
   122e8:	mov	r7, #0
   122ec:	mov	r0, r7
   122f0:	add	sp, sp, #1120	; 0x460
   122f4:	add	sp, sp, #12
   122f8:	ldrd	r4, [sp]
   122fc:	ldrd	r6, [sp, #8]
   12300:	ldrd	r8, [sp, #16]
   12304:	ldrd	sl, [sp, #24]
   12308:	add	sp, sp, #32
   1230c:	pop	{pc}		; (ldr pc, [sp], #4)
   12310:	sub	sl, sl, #1
   12314:	mov	r4, #0
   12318:	mov	r8, #32
   1231c:	ldr	r1, [sp, #24]
   12320:	mov	r0, r8
   12324:	bl	11254 <fputc@plt>
   12328:	add	r4, r4, #1
   1232c:	cmp	sl, r4
   12330:	bne	1231c <dcngettext@plt+0x1050>
   12334:	b	12290 <dcngettext@plt+0xfc4>
   12338:	str	r2, [sp, #36]	; 0x24
   1233c:	b	12344 <dcngettext@plt+0x1078>
   12340:	mov	r5, r1
   12344:	ldrb	r2, [r4, #1]!
   12348:	sub	r3, r2, #35	; 0x23
   1234c:	cmp	r3, #60	; 0x3c
   12350:	ldrls	pc, [pc, r3, lsl #2]
   12354:	b	12474 <dcngettext@plt+0x11a8>
   12358:	andeq	r2, r1, r0, asr #6
   1235c:	andeq	r2, r1, r4, ror r4
   12360:	andeq	r2, r1, r4, ror r4
   12364:	andeq	r2, r1, r4, ror r4
   12368:	andeq	r2, r1, r4, ror r4
   1236c:	andeq	r2, r1, r4, ror r4
   12370:	andeq	r2, r1, r4, ror r4
   12374:	andeq	r2, r1, r4, ror r4
   12378:	andeq	r2, r1, r8, lsr r3
   1237c:	andeq	r2, r1, r4, ror r4
   12380:	andeq	r2, r1, r8, lsr r3
   12384:	andeq	r2, r1, r4, ror r4
   12388:	andeq	r2, r1, r4, ror r4
   1238c:	andeq	r2, r1, r8, lsr r3
   12390:	andeq	r2, r1, r4, ror r4
   12394:	andeq	r2, r1, r4, ror r4
   12398:	andeq	r2, r1, r4, ror r4
   1239c:	andeq	r2, r1, r4, ror r4
   123a0:	andeq	r2, r1, r4, ror r4
   123a4:	andeq	r2, r1, r4, ror r4
   123a8:	andeq	r2, r1, r4, ror r4
   123ac:	andeq	r2, r1, r4, ror r4
   123b0:	andeq	r2, r1, r4, ror r4
   123b4:	andeq	r2, r1, r4, ror r4
   123b8:	andeq	r2, r1, r4, ror r4
   123bc:	andeq	r2, r1, r4, ror r4
   123c0:	andeq	r2, r1, r4, ror r4
   123c4:	andeq	r2, r1, r4, ror r4
   123c8:	andeq	r2, r1, r4, ror r4
   123cc:	andeq	r2, r1, r4, ror r4
   123d0:	andeq	r2, r1, r4, ror r4
   123d4:	andeq	r2, r1, r4, ror r4
   123d8:	andeq	r2, r1, r4, ror r4
   123dc:	andeq	r2, r1, r4, ror r4
   123e0:	andeq	r2, r1, r4, ror r4
   123e4:	andeq	r2, r1, r4, ror r4
   123e8:	andeq	r2, r1, r4, ror r4
   123ec:	andeq	r2, r1, r4, ror r4
   123f0:	andeq	r2, r1, r4, ror r4
   123f4:	andeq	r2, r1, r4, ror r4
   123f8:	andeq	r2, r1, r4, ror r4
   123fc:	andeq	r2, r1, r4, ror r4
   12400:	andeq	r2, r1, r4, ror r4
   12404:	andeq	r2, r1, r4, ror r4
   12408:	andeq	r2, r1, r4, ror r4
   1240c:	andeq	r2, r1, r4, ror r4
   12410:	andeq	r2, r1, r4, ror r4
   12414:	andeq	r2, r1, r4, ror r4
   12418:	andeq	r2, r1, r4, ror r4
   1241c:	andeq	r2, r1, r4, ror r4
   12420:	andeq	r2, r1, r4, ror r4
   12424:	andeq	r2, r1, r4, ror r4
   12428:	andeq	r2, r1, r4, ror r4
   1242c:	andeq	r2, r1, r4, ror r4
   12430:	andeq	r2, r1, r4, ror r4
   12434:	andeq	r2, r1, r4, ror r4
   12438:	andeq	r2, r1, r4, ror r4
   1243c:	andeq	r2, r1, r4, ror r4
   12440:	andeq	r2, r1, r4, ror r4
   12444:	andeq	r2, r1, r8, ror #8
   12448:	andeq	r2, r1, r8, lsr r3
   1244c:	ldr	r3, [sp, #32]
   12450:	str	r3, [sp, #76]	; 0x4c
   12454:	mov	r4, r6
   12458:	mov	r5, #0
   1245c:	str	r5, [sp, #36]	; 0x24
   12460:	mov	r1, #1
   12464:	b	12344 <dcngettext@plt+0x1078>
   12468:	mov	r3, #1
   1246c:	str	r3, [sp, #76]	; 0x4c
   12470:	b	12344 <dcngettext@plt+0x1078>
   12474:	sub	r2, r2, #48	; 0x30
   12478:	cmp	r2, #9
   1247c:	bls	12698 <dcngettext@plt+0x13cc>
   12480:	ldrb	r9, [r4]
   12484:	cmp	r9, #69	; 0x45
   12488:	beq	126ec <dcngettext@plt+0x1420>
   1248c:	cmp	r9, #79	; 0x4f
   12490:	movne	r9, #0
   12494:	beq	126ec <dcngettext@plt+0x1420>
   12498:	ldrb	r3, [r4]
   1249c:	mov	r1, r3
   124a0:	cmp	r3, #122	; 0x7a
   124a4:	ldrls	pc, [pc, r3, lsl #2]
   124a8:	b	12738 <dcngettext@plt+0x146c>
   124ac:	andeq	r2, r1, r4, lsr r7
   124b0:	andeq	r2, r1, r8, lsr r7
   124b4:	andeq	r2, r1, r8, lsr r7
   124b8:	andeq	r2, r1, r8, lsr r7
   124bc:	andeq	r2, r1, r8, lsr r7
   124c0:	andeq	r2, r1, r8, lsr r7
   124c4:	andeq	r2, r1, r8, lsr r7
   124c8:	andeq	r2, r1, r8, lsr r7
   124cc:	andeq	r2, r1, r8, lsr r7
   124d0:	andeq	r2, r1, r8, lsr r7
   124d4:	andeq	r2, r1, r8, lsr r7
   124d8:	andeq	r2, r1, r8, lsr r7
   124dc:	andeq	r2, r1, r8, lsr r7
   124e0:	andeq	r2, r1, r8, lsr r7
   124e4:	andeq	r2, r1, r8, lsr r7
   124e8:	andeq	r2, r1, r8, lsr r7
   124ec:	andeq	r2, r1, r8, lsr r7
   124f0:	andeq	r2, r1, r8, lsr r7
   124f4:	andeq	r2, r1, r8, lsr r7
   124f8:	andeq	r2, r1, r8, lsr r7
   124fc:	andeq	r2, r1, r8, lsr r7
   12500:	andeq	r2, r1, r8, lsr r7
   12504:	andeq	r2, r1, r8, lsr r7
   12508:	andeq	r2, r1, r8, lsr r7
   1250c:	andeq	r2, r1, r8, lsr r7
   12510:	andeq	r2, r1, r8, lsr r7
   12514:	andeq	r2, r1, r8, lsr r7
   12518:	andeq	r2, r1, r8, lsr r7
   1251c:	andeq	r2, r1, r8, lsr r7
   12520:	andeq	r2, r1, r8, lsr r7
   12524:	andeq	r2, r1, r8, lsr r7
   12528:	andeq	r2, r1, r8, lsr r7
   1252c:	andeq	r2, r1, r8, lsr r7
   12530:	andeq	r2, r1, r8, lsr r7
   12534:	andeq	r2, r1, r8, lsr r7
   12538:	andeq	r2, r1, r8, lsr r7
   1253c:	andeq	r2, r1, r8, lsr r7
   12540:	andeq	r2, r1, r8, lsr #14
   12544:	andeq	r2, r1, r8, lsr r7
   12548:	andeq	r2, r1, r8, lsr r7
   1254c:	andeq	r2, r1, r8, lsr r7
   12550:	andeq	r2, r1, r8, lsr r7
   12554:	andeq	r2, r1, r8, lsr r7
   12558:	andeq	r2, r1, r8, lsr r7
   1255c:	andeq	r2, r1, r8, lsr r7
   12560:	andeq	r2, r1, r8, lsr r7
   12564:	andeq	r2, r1, r8, lsr r7
   12568:	andeq	r2, r1, r8, lsr r7
   1256c:	andeq	r2, r1, r8, lsr r7
   12570:	andeq	r2, r1, r8, lsr r7
   12574:	andeq	r2, r1, r8, lsr r7
   12578:	andeq	r2, r1, r8, lsr r7
   1257c:	andeq	r2, r1, r8, lsr r7
   12580:	andeq	r2, r1, r8, lsr r7
   12584:	andeq	r2, r1, r8, lsr r7
   12588:	andeq	r2, r1, r8, lsr r7
   1258c:	andeq	r2, r1, r8, lsr r7
   12590:	andeq	r2, r1, r8, lsr r7
   12594:	andeq	r2, r1, r4, lsl #14
   12598:	andeq	r2, r1, r8, lsr r7
   1259c:	andeq	r2, r1, r8, lsr r7
   125a0:	andeq	r2, r1, r8, lsr r7
   125a4:	andeq	r2, r1, r8, lsr r7
   125a8:	andeq	r2, r1, r8, lsr r7
   125ac:	andeq	r2, r1, r8, lsr r7
   125b0:	ldrdeq	r2, [r1], -ip
   125b4:	andeq	r2, r1, ip, lsl r9
   125b8:	andeq	r2, r1, ip, lsl fp
   125bc:			; <UNDEFINED> instruction: 0x00012bb8
   125c0:	andeq	r2, r1, r8, lsr r7
   125c4:			; <UNDEFINED> instruction: 0x00012ebc
   125c8:	andeq	r3, r1, r8, asr #9
   125cc:	strdeq	r2, [r1], -r0
   125d0:	andeq	r2, r1, r8, lsl #30
   125d4:	andeq	r2, r1, r8, lsr r7
   125d8:	andeq	r2, r1, r8, lsr r7
   125dc:	andeq	r2, r1, r8, lsr r7
   125e0:	andeq	r2, r1, r0, ror pc
   125e4:			; <UNDEFINED> instruction: 0x00012fb8
   125e8:	andeq	r2, r1, r8, lsr r7
   125ec:	andeq	r3, r1, r0, lsr r2
   125f0:	andeq	r2, r1, r8, lsr r7
   125f4:	andeq	r2, r1, r4, asr r9
   125f8:			; <UNDEFINED> instruction: 0x000132b0
   125fc:	strdeq	r2, [r1], -r4
   12600:	muleq	r1, r0, r4
   12604:	andeq	r3, r1, r8, asr #9
   12608:	strdeq	r3, [r1], -ip
   1260c:	andeq	r3, r1, r4, lsl #7
   12610:	andeq	r3, r1, r8, ror #14
   12614:	strdeq	r3, [r1], -r8
   12618:	andeq	r2, r1, r8, lsr r7
   1261c:	andeq	r2, r1, r8, lsr r7
   12620:	andeq	r2, r1, r8, lsr r7
   12624:	andeq	r2, r1, r8, lsr r7
   12628:	andeq	r2, r1, r8, lsr r7
   1262c:	andeq	r2, r1, r8, lsr r7
   12630:	andeq	r2, r1, r4, lsr #17
   12634:	strdeq	r2, [r1], -ip
   12638:	andeq	r2, r1, r0, asr #18
   1263c:	ldrdeq	r2, [r1], -r0
   12640:	andeq	r2, r1, r8, ror #23
   12644:	andeq	r2, r1, r8, lsr r7
   12648:	andeq	r3, r1, r8, asr #9
   1264c:	strdeq	r2, [r1], -ip
   12650:	andeq	r2, r1, r8, lsr r7
   12654:	andeq	r2, r1, r0, asr #30
   12658:	andeq	r2, r1, ip, lsl pc
   1265c:	andeq	r2, r1, r0, lsr pc
   12660:	andeq	r2, r1, r8, lsl #31
   12664:	andeq	r3, r1, ip, ror #2
   12668:	andeq	r2, r1, r8, lsr r7
   1266c:	andeq	r3, r1, r8, lsr r2
   12670:	andeq	r3, r1, r8, ror r2
   12674:	andeq	r2, r1, r4, lsl #21
   12678:	andeq	r3, r1, r8, asr #5
   1267c:	muleq	r1, r8, r3
   12680:	andeq	r3, r1, ip, asr r4
   12684:	andeq	r2, r1, r8, lsr r7
   12688:	andeq	r3, r1, r0, asr r7
   1268c:	andeq	r2, r1, r4, lsr #23
   12690:	andeq	r3, r1, r4, lsr #15
   12694:	andeq	r3, r1, ip, asr #18
   12698:	mov	sl, #0
   1269c:	mov	r2, #10
   126a0:	b	126b4 <dcngettext@plt+0x13e8>
   126a4:	ldrb	r3, [r4, #1]!
   126a8:	sub	r3, r3, #48	; 0x30
   126ac:	cmp	r3, #9
   126b0:	bhi	12480 <dcngettext@plt+0x11b4>
   126b4:	smull	r0, r1, sl, r2
   126b8:	asr	r3, r0, #31
   126bc:	mov	sl, r0
   126c0:	cmp	r3, r1
   126c4:	mvnne	sl, #-2147483648	; 0x80000000
   126c8:	bne	126a4 <dcngettext@plt+0x13d8>
   126cc:	ldrb	r3, [r4]
   126d0:	sub	r3, r3, #48	; 0x30
   126d4:	adds	sl, sl, r3
   126d8:	movvs	r3, #1
   126dc:	movvc	r3, #0
   126e0:	cmp	r3, #0
   126e4:	mvnne	sl, #-2147483648	; 0x80000000
   126e8:	b	126a4 <dcngettext@plt+0x13d8>
   126ec:	add	r4, r4, #1
   126f0:	b	12498 <dcngettext@plt+0x11cc>
   126f4:	mvn	r9, #0
   126f8:	movw	r8, #32548	; 0x7f24
   126fc:	movt	r8, #1
   12700:	b	12960 <dcngettext@plt+0x1694>
   12704:	add	r2, r4, #1
   12708:	ldrb	r3, [r4, #1]
   1270c:	cmp	r3, #58	; 0x3a
   12710:	movne	lr, #1
   12714:	beq	1392c <dcngettext@plt+0x2660>
   12718:	cmp	r3, #122	; 0x7a
   1271c:	moveq	r4, r2
   12720:	bne	12738 <dcngettext@plt+0x146c>
   12724:	b	13950 <dcngettext@plt+0x2684>
   12728:	sub	r3, r4, #1
   1272c:	cmp	r6, r3
   12730:	beq	127e0 <dcngettext@plt+0x1514>
   12734:	sub	r4, r4, #1
   12738:	sub	r5, r4, r6
   1273c:	add	r5, r5, #1
   12740:	ldr	r2, [sp, #36]	; 0x24
   12744:	mvn	r3, sl
   12748:	lsr	r3, r3, #31
   1274c:	cmp	r2, #45	; 0x2d
   12750:	moveq	r3, #0
   12754:	cmp	r3, #0
   12758:	moveq	sl, #0
   1275c:	mov	r8, sl
   12760:	cmp	sl, r5
   12764:	movcc	sl, r5
   12768:	mvn	r3, r7
   1276c:	cmp	r3, sl
   12770:	bls	13a70 <dcngettext@plt+0x27a4>
   12774:	ldr	r3, [sp, #24]
   12778:	cmp	r3, #0
   1277c:	beq	127d8 <dcngettext@plt+0x150c>
   12780:	cmp	r8, r5
   12784:	bls	127bc <dcngettext@plt+0x14f0>
   12788:	sub	r8, r8, r5
   1278c:	ldr	r3, [sp, #36]	; 0x24
   12790:	cmp	r3, #43	; 0x2b
   12794:	cmpne	r3, #48	; 0x30
   12798:	bne	13a80 <dcngettext@plt+0x27b4>
   1279c:	mov	r9, #0
   127a0:	mov	fp, #48	; 0x30
   127a4:	ldr	r1, [sp, #24]
   127a8:	mov	r0, fp
   127ac:	bl	11254 <fputc@plt>
   127b0:	add	r9, r9, #1
   127b4:	cmp	r8, r9
   127b8:	bne	127a4 <dcngettext@plt+0x14d8>
   127bc:	ldr	r3, [sp, #76]	; 0x4c
   127c0:	cmp	r3, #0
   127c4:	beq	13aa4 <dcngettext@plt+0x27d8>
   127c8:	mov	r2, r5
   127cc:	mov	r1, r6
   127d0:	ldr	r0, [sp, #24]
   127d4:	bl	12158 <dcngettext@plt+0xe8c>
   127d8:	add	r7, r7, sl
   127dc:	b	122a4 <dcngettext@plt+0xfd8>
   127e0:	ldr	r2, [sp, #36]	; 0x24
   127e4:	mvn	r3, sl
   127e8:	lsr	r3, r3, #31
   127ec:	cmp	r2, #45	; 0x2d
   127f0:	moveq	r3, #0
   127f4:	cmp	r3, #0
   127f8:	moveq	sl, #0
   127fc:	mov	r5, sl
   12800:	cmp	sl, #1
   12804:	movcc	sl, #1
   12808:	mvn	r3, r7
   1280c:	cmp	r3, sl
   12810:	bls	12870 <dcngettext@plt+0x15a4>
   12814:	ldr	r3, [sp, #24]
   12818:	cmp	r3, #0
   1281c:	beq	12868 <dcngettext@plt+0x159c>
   12820:	cmp	r5, #1
   12824:	bls	1285c <dcngettext@plt+0x1590>
   12828:	sub	r5, r5, #1
   1282c:	ldr	r3, [sp, #36]	; 0x24
   12830:	cmp	r3, #43	; 0x2b
   12834:	cmpne	r3, #48	; 0x30
   12838:	bne	12880 <dcngettext@plt+0x15b4>
   1283c:	mov	r6, #0
   12840:	mov	r8, #48	; 0x30
   12844:	ldr	r1, [sp, #24]
   12848:	mov	r0, r8
   1284c:	bl	11254 <fputc@plt>
   12850:	add	r6, r6, #1
   12854:	cmp	r5, r6
   12858:	bne	12844 <dcngettext@plt+0x1578>
   1285c:	ldr	r1, [sp, #24]
   12860:	ldrb	r0, [r4]
   12864:	bl	11254 <fputc@plt>
   12868:	add	r7, r7, sl
   1286c:	b	122a4 <dcngettext@plt+0xfd8>
   12870:	mov	r3, #34	; 0x22
   12874:	ldr	r2, [sp, #28]
   12878:	str	r3, [r2]
   1287c:	b	122e8 <dcngettext@plt+0x101c>
   12880:	mov	r6, #0
   12884:	mov	r8, #32
   12888:	ldr	r1, [sp, #24]
   1288c:	mov	r0, r8
   12890:	bl	11254 <fputc@plt>
   12894:	add	r6, r6, #1
   12898:	cmp	r5, r6
   1289c:	bne	12888 <dcngettext@plt+0x15bc>
   128a0:	b	1285c <dcngettext@plt+0x1590>
   128a4:	cmp	r9, #0
   128a8:	bne	12738 <dcngettext@plt+0x146c>
   128ac:	ldr	r3, [sp, #76]	; 0x4c
   128b0:	cmp	r5, #0
   128b4:	movne	r3, r5
   128b8:	str	r3, [sp, #76]	; 0x4c
   128bc:	mov	r1, #97	; 0x61
   128c0:	mov	r3, #32
   128c4:	strb	r3, [sp, #88]	; 0x58
   128c8:	mov	r3, #37	; 0x25
   128cc:	strb	r3, [sp, #89]	; 0x59
   128d0:	mov	fp, #0
   128d4:	add	r3, sp, #90	; 0x5a
   128d8:	b	12c4c <dcngettext@plt+0x1980>
   128dc:	cmp	r9, #0
   128e0:	bne	12738 <dcngettext@plt+0x146c>
   128e4:	ldr	r3, [sp, #76]	; 0x4c
   128e8:	cmp	r5, #0
   128ec:	movne	r3, r5
   128f0:	str	r3, [sp, #76]	; 0x4c
   128f4:	mov	r1, #65	; 0x41
   128f8:	b	128c0 <dcngettext@plt+0x15f4>
   128fc:	ldr	r3, [sp, #76]	; 0x4c
   12900:	cmp	r5, #0
   12904:	movne	r3, r5
   12908:	str	r3, [sp, #76]	; 0x4c
   1290c:	cmp	r9, #69	; 0x45
   12910:	movne	fp, #0
   12914:	bne	13258 <dcngettext@plt+0x1f8c>
   12918:	b	12738 <dcngettext@plt+0x146c>
   1291c:	cmp	r9, #69	; 0x45
   12920:	beq	12738 <dcngettext@plt+0x146c>
   12924:	ldr	r3, [sp, #76]	; 0x4c
   12928:	cmp	r5, #0
   1292c:	movne	r3, r5
   12930:	str	r3, [sp, #76]	; 0x4c
   12934:	mov	r1, #66	; 0x42
   12938:	mov	fp, #0
   1293c:	b	13258 <dcngettext@plt+0x1f8c>
   12940:	cmp	r9, #79	; 0x4f
   12944:	beq	12738 <dcngettext@plt+0x146c>
   12948:	mov	r1, #99	; 0x63
   1294c:	mov	fp, #0
   12950:	b	13258 <dcngettext@plt+0x1f8c>
   12954:	mvn	r9, #0
   12958:	movw	r8, #32572	; 0x7f3c
   1295c:	movt	r8, #1
   12960:	ldr	r3, [sp, #1184]	; 0x4a0
   12964:	str	r3, [sp, #16]
   12968:	ldr	r3, [sp, #1180]	; 0x49c
   1296c:	str	r3, [sp, #12]
   12970:	ldr	r3, [sp, #1176]	; 0x498
   12974:	str	r3, [sp, #8]
   12978:	str	r9, [sp, #4]
   1297c:	ldr	r5, [sp, #36]	; 0x24
   12980:	str	r5, [sp]
   12984:	ldr	r3, [sp, #76]	; 0x4c
   12988:	ldr	r2, [sp, #40]	; 0x28
   1298c:	mov	r1, r8
   12990:	mov	r0, #0
   12994:	bl	121b4 <dcngettext@plt+0xee8>
   12998:	mvn	r3, sl
   1299c:	lsr	r3, r3, #31
   129a0:	cmp	r5, #45	; 0x2d
   129a4:	moveq	r3, #0
   129a8:	cmp	r3, #0
   129ac:	moveq	sl, #0
   129b0:	mov	r5, sl
   129b4:	cmp	sl, r0
   129b8:	movcc	sl, r0
   129bc:	mvn	r3, r7
   129c0:	cmp	r3, sl
   129c4:	bls	12a50 <dcngettext@plt+0x1784>
   129c8:	ldr	r3, [sp, #24]
   129cc:	cmp	r3, #0
   129d0:	beq	12a48 <dcngettext@plt+0x177c>
   129d4:	cmp	r5, r0
   129d8:	bls	12a10 <dcngettext@plt+0x1744>
   129dc:	sub	r5, r5, r0
   129e0:	ldr	r3, [sp, #36]	; 0x24
   129e4:	cmp	r3, #43	; 0x2b
   129e8:	cmpne	r3, #48	; 0x30
   129ec:	bne	12a60 <dcngettext@plt+0x1794>
   129f0:	mov	r6, #0
   129f4:	mov	fp, #48	; 0x30
   129f8:	ldr	r1, [sp, #24]
   129fc:	mov	r0, fp
   12a00:	bl	11254 <fputc@plt>
   12a04:	add	r6, r6, #1
   12a08:	cmp	r5, r6
   12a0c:	bne	129f8 <dcngettext@plt+0x172c>
   12a10:	ldr	r3, [sp, #1184]	; 0x4a0
   12a14:	str	r3, [sp, #16]
   12a18:	ldr	r3, [sp, #1180]	; 0x49c
   12a1c:	str	r3, [sp, #12]
   12a20:	ldr	r3, [sp, #1176]	; 0x498
   12a24:	str	r3, [sp, #8]
   12a28:	str	r9, [sp, #4]
   12a2c:	ldr	r3, [sp, #36]	; 0x24
   12a30:	str	r3, [sp]
   12a34:	ldr	r3, [sp, #76]	; 0x4c
   12a38:	ldr	r2, [sp, #40]	; 0x28
   12a3c:	mov	r1, r8
   12a40:	ldr	r0, [sp, #24]
   12a44:	bl	121b4 <dcngettext@plt+0xee8>
   12a48:	add	r7, r7, sl
   12a4c:	b	122a4 <dcngettext@plt+0xfd8>
   12a50:	mov	r3, #34	; 0x22
   12a54:	ldr	r2, [sp, #28]
   12a58:	str	r3, [r2]
   12a5c:	b	122e8 <dcngettext@plt+0x101c>
   12a60:	mov	r6, #0
   12a64:	mov	fp, #32
   12a68:	ldr	r1, [sp, #24]
   12a6c:	mov	r0, fp
   12a70:	bl	11254 <fputc@plt>
   12a74:	add	r6, r6, #1
   12a78:	cmp	r5, r6
   12a7c:	bne	12a68 <dcngettext@plt+0x179c>
   12a80:	b	12a10 <dcngettext@plt+0x1744>
   12a84:	mov	fp, #0
   12a88:	b	13258 <dcngettext@plt+0x1f8c>
   12a8c:	mov	r3, #34	; 0x22
   12a90:	ldr	r2, [sp, #28]
   12a94:	str	r3, [r2]
   12a98:	b	122e8 <dcngettext@plt+0x101c>
   12a9c:	cmp	r6, #0
   12aa0:	beq	12ac4 <dcngettext@plt+0x17f8>
   12aa4:	mov	r8, #0
   12aa8:	mov	r9, #48	; 0x30
   12aac:	ldr	r1, [sp, #24]
   12ab0:	mov	r0, r9
   12ab4:	bl	11254 <fputc@plt>
   12ab8:	add	r8, r8, #1
   12abc:	cmp	r6, r8
   12ac0:	bne	12aac <dcngettext@plt+0x17e0>
   12ac4:	cmp	fp, #0
   12ac8:	bne	12af0 <dcngettext@plt+0x1824>
   12acc:	ldr	r3, [sp, #76]	; 0x4c
   12ad0:	cmp	r3, #0
   12ad4:	beq	12b04 <dcngettext@plt+0x1838>
   12ad8:	mov	r2, r5
   12adc:	add	r1, sp, #105	; 0x69
   12ae0:	ldr	r0, [sp, #24]
   12ae4:	bl	12158 <dcngettext@plt+0xe8c>
   12ae8:	add	r7, r7, sl
   12aec:	b	122a4 <dcngettext@plt+0xfd8>
   12af0:	mov	r2, r5
   12af4:	add	r1, sp, #105	; 0x69
   12af8:	ldr	r0, [sp, #24]
   12afc:	bl	120fc <dcngettext@plt+0xe30>
   12b00:	b	12ae8 <dcngettext@plt+0x181c>
   12b04:	ldr	r3, [sp, #24]
   12b08:	mov	r2, #1
   12b0c:	mov	r1, r5
   12b10:	add	r0, sp, #105	; 0x69
   12b14:	bl	11098 <fwrite@plt>
   12b18:	b	12ae8 <dcngettext@plt+0x181c>
   12b1c:	cmp	r9, #69	; 0x45
   12b20:	beq	13ad0 <dcngettext@plt+0x2804>
   12b24:	ldr	r3, [sp, #40]	; 0x28
   12b28:	ldr	r2, [r3, #20]
   12b2c:	movw	r8, #63636	; 0xf894
   12b30:	movt	r8, #65535	; 0xffff
   12b34:	cmp	r2, r8
   12b38:	movge	r8, #0
   12b3c:	movlt	r8, #1
   12b40:	add	r3, r2, #1888	; 0x760
   12b44:	add	r3, r3, #12
   12b48:	movw	r0, #1899	; 0x76b
   12b4c:	cmp	r3, r0
   12b50:	mvnls	r3, #98	; 0x62
   12b54:	movhi	r3, #0
   12b58:	add	r3, r3, r2
   12b5c:	ldr	r2, [sp, #56]	; 0x38
   12b60:	smull	r0, r2, r2, r3
   12b64:	asr	r3, r3, #31
   12b68:	rsb	r3, r3, r2, asr #5
   12b6c:	add	r3, r3, #19
   12b70:	mov	fp, #2
   12b74:	ldr	r0, [sp, #36]	; 0x24
   12b78:	mov	r2, r0
   12b7c:	ldr	ip, [sp, #1168]	; 0x490
   12b80:	cmp	r0, #0
   12b84:	moveq	r2, ip
   12b88:	str	r2, [sp, #36]	; 0x24
   12b8c:	cmp	r2, #43	; 0x2b
   12b90:	movne	r2, #0
   12b94:	beq	12d00 <dcngettext@plt+0x1a34>
   12b98:	str	r2, [sp, #80]	; 0x50
   12b9c:	mov	r0, #0
   12ba0:	b	12c18 <dcngettext@plt+0x194c>
   12ba4:	cmp	r9, #79	; 0x4f
   12ba8:	beq	12738 <dcngettext@plt+0x146c>
   12bac:	mov	r1, #120	; 0x78
   12bb0:	mov	fp, #0
   12bb4:	b	13258 <dcngettext@plt+0x1f8c>
   12bb8:	cmp	r9, #0
   12bbc:	bne	12738 <dcngettext@plt+0x146c>
   12bc0:	mvn	r9, #0
   12bc4:	movw	r8, #32580	; 0x7f44
   12bc8:	movt	r8, #1
   12bcc:	b	12960 <dcngettext@plt+0x1694>
   12bd0:	cmp	r9, #69	; 0x45
   12bd4:	beq	12738 <dcngettext@plt+0x146c>
   12bd8:	ldr	r3, [sp, #40]	; 0x28
   12bdc:	ldr	r3, [r3, #12]
   12be0:	mov	fp, #2
   12be4:	b	12c0c <dcngettext@plt+0x1940>
   12be8:	cmp	r9, #69	; 0x45
   12bec:	beq	12738 <dcngettext@plt+0x146c>
   12bf0:	ldr	r3, [sp, #40]	; 0x28
   12bf4:	ldr	r3, [r3, #12]
   12bf8:	ldr	r2, [sp, #36]	; 0x24
   12bfc:	cmp	r2, #0
   12c00:	mov	fp, #2
   12c04:	moveq	r2, #95	; 0x5f
   12c08:	streq	r2, [sp, #36]	; 0x24
   12c0c:	lsr	r8, r3, #31
   12c10:	mov	r0, #0
   12c14:	str	r0, [sp, #80]	; 0x50
   12c18:	eor	r2, r8, #1
   12c1c:	cmp	r9, #79	; 0x4f
   12c20:	movne	r2, #0
   12c24:	andeq	r2, r2, #1
   12c28:	cmp	r2, #0
   12c2c:	beq	12d24 <dcngettext@plt+0x1a58>
   12c30:	mov	r3, #32
   12c34:	strb	r3, [sp, #88]	; 0x58
   12c38:	mov	r3, #37	; 0x25
   12c3c:	strb	r3, [sp, #89]	; 0x59
   12c40:	mov	fp, #0
   12c44:	strb	r9, [sp, #90]	; 0x5a
   12c48:	add	r3, sp, #91	; 0x5b
   12c4c:	strb	r1, [r3]
   12c50:	mov	r2, #0
   12c54:	strb	r2, [r3, #1]
   12c58:	ldr	r3, [sp, #40]	; 0x28
   12c5c:	add	r2, sp, #88	; 0x58
   12c60:	mov	r1, #1024	; 0x400
   12c64:	add	r0, sp, #104	; 0x68
   12c68:	bl	11104 <strftime@plt>
   12c6c:	cmp	r0, #0
   12c70:	beq	122a4 <dcngettext@plt+0xfd8>
   12c74:	sub	r5, r0, #1
   12c78:	ldr	r2, [sp, #36]	; 0x24
   12c7c:	mvn	r3, sl
   12c80:	lsr	r3, r3, #31
   12c84:	cmp	r2, #45	; 0x2d
   12c88:	moveq	r3, #0
   12c8c:	cmp	r3, #0
   12c90:	moveq	sl, #0
   12c94:	mov	r6, sl
   12c98:	cmp	sl, r5
   12c9c:	movcc	sl, r5
   12ca0:	mvn	r3, r7
   12ca4:	cmp	r3, sl
   12ca8:	bls	12a8c <dcngettext@plt+0x17c0>
   12cac:	ldr	r3, [sp, #24]
   12cb0:	cmp	r3, #0
   12cb4:	beq	12ae8 <dcngettext@plt+0x181c>
   12cb8:	cmp	r6, r5
   12cbc:	bls	12ac4 <dcngettext@plt+0x17f8>
   12cc0:	sub	r6, r6, r5
   12cc4:	ldr	r3, [sp, #36]	; 0x24
   12cc8:	cmp	r3, #43	; 0x2b
   12ccc:	cmpne	r3, #48	; 0x30
   12cd0:	beq	12a9c <dcngettext@plt+0x17d0>
   12cd4:	cmp	r6, #0
   12cd8:	movne	r8, #0
   12cdc:	movne	r9, #32
   12ce0:	beq	12ac4 <dcngettext@plt+0x17f8>
   12ce4:	ldr	r1, [sp, #24]
   12ce8:	mov	r0, r9
   12cec:	bl	11254 <fputc@plt>
   12cf0:	add	r8, r8, #1
   12cf4:	cmp	r6, r8
   12cf8:	bne	12ce4 <dcngettext@plt+0x1a18>
   12cfc:	b	12ac4 <dcngettext@plt+0x17f8>
   12d00:	cmp	fp, #2
   12d04:	movw	r2, #9999	; 0x270f
   12d08:	moveq	r2, #99	; 0x63
   12d0c:	cmp	r3, r2
   12d10:	movls	r2, #0
   12d14:	movhi	r2, #1
   12d18:	cmp	fp, sl
   12d1c:	orrlt	r2, r2, #1
   12d20:	b	12b98 <dcngettext@plt+0x18cc>
   12d24:	cmp	r8, #0
   12d28:	rsbne	r3, r3, #0
   12d2c:	add	r5, sp, #102	; 0x66
   12d30:	mov	r6, #58	; 0x3a
   12d34:	movw	lr, #52429	; 0xcccd
   12d38:	movt	lr, #52428	; 0xcccc
   12d3c:	b	12d44 <dcngettext@plt+0x1a78>
   12d40:	mov	r3, r1
   12d44:	tst	r0, #1
   12d48:	subne	ip, r5, #1
   12d4c:	strbne	r6, [r5, #-1]
   12d50:	moveq	ip, r5
   12d54:	sub	r5, ip, #1
   12d58:	umull	r2, r1, lr, r3
   12d5c:	lsr	r1, r1, #3
   12d60:	add	r2, r1, r1, lsl #2
   12d64:	sub	r2, r3, r2, lsl #1
   12d68:	add	r2, r2, #48	; 0x30
   12d6c:	strb	r2, [ip, #-1]
   12d70:	asrs	r0, r0, #1
   12d74:	movne	r2, #1
   12d78:	moveq	r2, #0
   12d7c:	cmp	r3, #9
   12d80:	movls	r3, r2
   12d84:	orrhi	r3, r2, #1
   12d88:	cmp	r3, #0
   12d8c:	bne	12d40 <dcngettext@plt+0x1a74>
   12d90:	ldr	r3, [sp, #36]	; 0x24
   12d94:	cmp	r3, #0
   12d98:	moveq	r3, #48	; 0x30
   12d9c:	str	r3, [sp, #36]	; 0x24
   12da0:	cmp	sl, #0
   12da4:	movlt	sl, fp
   12da8:	cmp	r8, #0
   12dac:	bne	13ae8 <dcngettext@plt+0x281c>
   12db0:	ldr	r3, [sp, #80]	; 0x50
   12db4:	cmp	r3, #0
   12db8:	bne	13bdc <dcngettext@plt+0x2910>
   12dbc:	add	r8, sp, #102	; 0x66
   12dc0:	sub	fp, r8, r5
   12dc4:	ldr	r3, [sp, #36]	; 0x24
   12dc8:	subs	r3, r3, #45	; 0x2d
   12dcc:	movne	r3, #1
   12dd0:	sub	r6, sl, fp
   12dd4:	cmp	r6, #0
   12dd8:	movle	r6, #0
   12ddc:	andgt	r6, r3, #1
   12de0:	cmp	r6, #0
   12de4:	moveq	r6, r3
   12de8:	b	13b58 <dcngettext@plt+0x288c>
   12dec:	ldr	r3, [sp, #24]
   12df0:	cmp	r3, #0
   12df4:	bne	12e04 <dcngettext@plt+0x1b38>
   12df8:	add	r7, r7, r8
   12dfc:	sub	sl, sl, r8
   12e00:	b	13b30 <dcngettext@plt+0x2864>
   12e04:	cmp	r8, #0
   12e08:	beq	12df8 <dcngettext@plt+0x1b2c>
   12e0c:	mov	r9, #0
   12e10:	str	r4, [sp, #84]	; 0x54
   12e14:	mov	r4, r8
   12e18:	ldr	r1, [sp, #24]
   12e1c:	mov	r0, #32
   12e20:	bl	11254 <fputc@plt>
   12e24:	add	r9, r9, #1
   12e28:	cmp	r9, r4
   12e2c:	bne	12e18 <dcngettext@plt+0x1b4c>
   12e30:	ldr	r4, [sp, #84]	; 0x54
   12e34:	b	12df8 <dcngettext@plt+0x1b2c>
   12e38:	mov	r3, #34	; 0x22
   12e3c:	ldr	r2, [sp, #28]
   12e40:	str	r3, [r2]
   12e44:	b	122e8 <dcngettext@plt+0x101c>
   12e48:	mov	r3, #34	; 0x22
   12e4c:	ldr	r2, [sp, #28]
   12e50:	str	r3, [r2]
   12e54:	b	122e8 <dcngettext@plt+0x101c>
   12e58:	cmp	r6, #0
   12e5c:	beq	12e80 <dcngettext@plt+0x1bb4>
   12e60:	mov	r9, #0
   12e64:	mov	fp, #48	; 0x30
   12e68:	ldr	r1, [sp, #24]
   12e6c:	mov	r0, fp
   12e70:	bl	11254 <fputc@plt>
   12e74:	add	r9, r9, #1
   12e78:	cmp	r6, r9
   12e7c:	bne	12e68 <dcngettext@plt+0x1b9c>
   12e80:	ldr	r3, [sp, #76]	; 0x4c
   12e84:	cmp	r3, #0
   12e88:	beq	12ea4 <dcngettext@plt+0x1bd8>
   12e8c:	mov	r2, r8
   12e90:	mov	r1, r5
   12e94:	ldr	r0, [sp, #24]
   12e98:	bl	12158 <dcngettext@plt+0xe8c>
   12e9c:	add	r7, r7, sl
   12ea0:	b	122a4 <dcngettext@plt+0xfd8>
   12ea4:	ldr	r3, [sp, #24]
   12ea8:	mov	r2, #1
   12eac:	mov	r1, r8
   12eb0:	mov	r0, r5
   12eb4:	bl	11098 <fwrite@plt>
   12eb8:	b	12e9c <dcngettext@plt+0x1bd0>
   12ebc:	cmp	r9, #0
   12ec0:	bne	12738 <dcngettext@plt+0x146c>
   12ec4:	ldr	r3, [sp, #36]	; 0x24
   12ec8:	cmp	r3, #0
   12ecc:	lsreq	r3, sl, #31
   12ed0:	movne	r3, #0
   12ed4:	cmp	r3, #0
   12ed8:	bne	13c24 <dcngettext@plt+0x2958>
   12edc:	sub	r9, sl, #6
   12ee0:	bic	r9, r9, r9, asr #31
   12ee4:	movw	r8, #32560	; 0x7f30
   12ee8:	movt	r8, #1
   12eec:	b	12960 <dcngettext@plt+0x1694>
   12ef0:	cmp	r9, #69	; 0x45
   12ef4:	beq	12738 <dcngettext@plt+0x146c>
   12ef8:	ldr	r3, [sp, #40]	; 0x28
   12efc:	ldr	r3, [r3, #8]
   12f00:	mov	fp, #2
   12f04:	b	12c0c <dcngettext@plt+0x1940>
   12f08:	cmp	r9, #69	; 0x45
   12f0c:	beq	12738 <dcngettext@plt+0x146c>
   12f10:	ldr	r3, [sp, #64]	; 0x40
   12f14:	mov	fp, #2
   12f18:	b	12c0c <dcngettext@plt+0x1940>
   12f1c:	cmp	r9, #69	; 0x45
   12f20:	beq	12738 <dcngettext@plt+0x146c>
   12f24:	ldr	r3, [sp, #40]	; 0x28
   12f28:	ldr	r3, [r3, #8]
   12f2c:	b	12bf8 <dcngettext@plt+0x192c>
   12f30:	cmp	r9, #69	; 0x45
   12f34:	beq	12738 <dcngettext@plt+0x146c>
   12f38:	ldr	r3, [sp, #64]	; 0x40
   12f3c:	b	12bf8 <dcngettext@plt+0x192c>
   12f40:	cmp	r9, #69	; 0x45
   12f44:	beq	12738 <dcngettext@plt+0x146c>
   12f48:	ldr	r3, [sp, #40]	; 0x28
   12f4c:	ldr	r3, [r3, #28]
   12f50:	cmn	r3, #1
   12f54:	movge	r8, #0
   12f58:	movlt	r8, #1
   12f5c:	add	r3, r3, #1
   12f60:	mov	r0, #0
   12f64:	str	r0, [sp, #80]	; 0x50
   12f68:	mov	fp, #3
   12f6c:	b	12c18 <dcngettext@plt+0x194c>
   12f70:	cmp	r9, #69	; 0x45
   12f74:	beq	12738 <dcngettext@plt+0x146c>
   12f78:	ldr	r3, [sp, #40]	; 0x28
   12f7c:	ldr	r3, [r3, #4]
   12f80:	mov	fp, #2
   12f84:	b	12c0c <dcngettext@plt+0x1940>
   12f88:	cmp	r9, #69	; 0x45
   12f8c:	beq	12738 <dcngettext@plt+0x146c>
   12f90:	ldr	r3, [sp, #40]	; 0x28
   12f94:	ldr	r3, [r3, #16]
   12f98:	cmn	r3, #1
   12f9c:	movge	r8, #0
   12fa0:	movlt	r8, #1
   12fa4:	add	r3, r3, #1
   12fa8:	mov	r0, #0
   12fac:	str	r0, [sp, #80]	; 0x50
   12fb0:	mov	fp, #2
   12fb4:	b	12c18 <dcngettext@plt+0x194c>
   12fb8:	cmp	r9, #69	; 0x45
   12fbc:	beq	12738 <dcngettext@plt+0x146c>
   12fc0:	cmp	sl, #0
   12fc4:	movle	sl, #9
   12fc8:	ldr	r3, [sp, #1184]	; 0x4a0
   12fcc:	mov	r5, #9
   12fd0:	ldr	r0, [sp, #60]	; 0x3c
   12fd4:	b	12fe8 <dcngettext@plt+0x1d1c>
   12fd8:	sub	r5, r5, #1
   12fdc:	smull	r1, r2, r0, r3
   12fe0:	asr	r3, r3, #31
   12fe4:	rsb	r3, r3, r2, asr #2
   12fe8:	cmp	r5, sl
   12fec:	bgt	12fd8 <dcngettext@plt+0x1d0c>
   12ff0:	cmp	r5, #1
   12ff4:	ble	13014 <dcngettext@plt+0x1d48>
   12ff8:	smull	r1, r2, r0, r3
   12ffc:	asr	r1, r3, #31
   13000:	rsb	r2, r1, r2, asr #2
   13004:	add	r2, r2, r2, lsl #2
   13008:	cmp	r3, r2, lsl #1
   1300c:	beq	12fd8 <dcngettext@plt+0x1d0c>
   13010:	b	1301c <dcngettext@plt+0x1d50>
   13014:	cmp	r5, #1
   13018:	bne	13068 <dcngettext@plt+0x1d9c>
   1301c:	add	r2, sp, #1120	; 0x460
   13020:	add	r2, r2, #8
   13024:	add	r1, r2, r5
   13028:	sub	r1, r1, #1040	; 0x410
   1302c:	sub	r1, r1, #1
   13030:	rsb	r0, r2, #1040	; 0x410
   13034:	add	r0, r0, #1
   13038:	ldr	lr, [sp, #60]	; 0x3c
   1303c:	smull	r2, ip, lr, r3
   13040:	asr	r2, r3, #31
   13044:	rsb	r2, r2, ip, asr #2
   13048:	add	ip, r2, r2, lsl #2
   1304c:	sub	r3, r3, ip, lsl #1
   13050:	add	r3, r3, #48	; 0x30
   13054:	strb	r3, [r1], #-1
   13058:	mov	r3, r2
   1305c:	add	r2, r0, r1
   13060:	cmp	r2, #0
   13064:	bgt	1303c <dcngettext@plt+0x1d70>
   13068:	ldr	r3, [sp, #36]	; 0x24
   1306c:	cmp	r3, #0
   13070:	moveq	r3, #48	; 0x30
   13074:	str	r3, [sp, #36]	; 0x24
   13078:	mov	r6, r5
   1307c:	mvn	r3, r7
   13080:	cmp	r3, r5
   13084:	bls	13110 <dcngettext@plt+0x1e44>
   13088:	ldr	r0, [sp, #24]
   1308c:	cmp	r0, #0
   13090:	beq	130ac <dcngettext@plt+0x1de0>
   13094:	ldr	r3, [sp, #76]	; 0x4c
   13098:	cmp	r3, #0
   1309c:	beq	13120 <dcngettext@plt+0x1e54>
   130a0:	mov	r2, r5
   130a4:	add	r1, sp, #88	; 0x58
   130a8:	bl	12158 <dcngettext@plt+0xe8c>
   130ac:	add	r7, r6, r7
   130b0:	ldr	r3, [sp, #36]	; 0x24
   130b4:	cmp	r3, #45	; 0x2d
   130b8:	beq	13c78 <dcngettext@plt+0x29ac>
   130bc:	sub	r5, sl, r5
   130c0:	mvn	r3, r7
   130c4:	cmp	r3, r5
   130c8:	bls	13138 <dcngettext@plt+0x1e6c>
   130cc:	ldr	r3, [sp, #24]
   130d0:	cmp	r5, #0
   130d4:	cmpne	r3, #0
   130d8:	beq	13c84 <dcngettext@plt+0x29b8>
   130dc:	ldr	r3, [sp, #36]	; 0x24
   130e0:	cmp	r3, #43	; 0x2b
   130e4:	cmpne	r3, #48	; 0x30
   130e8:	bne	13148 <dcngettext@plt+0x1e7c>
   130ec:	mov	r6, #0
   130f0:	mov	r8, #48	; 0x30
   130f4:	ldr	r1, [sp, #24]
   130f8:	mov	r0, r8
   130fc:	bl	11254 <fputc@plt>
   13100:	add	r6, r6, #1
   13104:	cmp	r5, r6
   13108:	bhi	130f4 <dcngettext@plt+0x1e28>
   1310c:	b	13c84 <dcngettext@plt+0x29b8>
   13110:	mov	r3, #34	; 0x22
   13114:	ldr	r2, [sp, #28]
   13118:	str	r3, [r2]
   1311c:	b	122e8 <dcngettext@plt+0x101c>
   13120:	ldr	r3, [sp, #24]
   13124:	mov	r2, #1
   13128:	mov	r1, r5
   1312c:	add	r0, sp, #88	; 0x58
   13130:	bl	11098 <fwrite@plt>
   13134:	b	130ac <dcngettext@plt+0x1de0>
   13138:	mov	r3, #34	; 0x22
   1313c:	ldr	r2, [sp, #28]
   13140:	str	r3, [r2]
   13144:	b	122e8 <dcngettext@plt+0x101c>
   13148:	mov	r6, #0
   1314c:	mov	r8, #32
   13150:	ldr	r1, [sp, #24]
   13154:	mov	r0, r8
   13158:	bl	11254 <fputc@plt>
   1315c:	add	r6, r6, #1
   13160:	cmp	r5, r6
   13164:	bhi	13150 <dcngettext@plt+0x1e84>
   13168:	b	13c84 <dcngettext@plt+0x29b8>
   1316c:	ldr	r2, [sp, #36]	; 0x24
   13170:	mvn	r3, sl
   13174:	lsr	r3, r3, #31
   13178:	cmp	r2, #45	; 0x2d
   1317c:	moveq	r3, #0
   13180:	cmp	r3, #0
   13184:	moveq	sl, #0
   13188:	mov	r5, sl
   1318c:	cmp	sl, #1
   13190:	movcc	sl, #1
   13194:	mvn	r3, r7
   13198:	cmp	r3, sl
   1319c:	bls	131fc <dcngettext@plt+0x1f30>
   131a0:	ldr	r3, [sp, #24]
   131a4:	cmp	r3, #0
   131a8:	beq	131f4 <dcngettext@plt+0x1f28>
   131ac:	cmp	r5, #1
   131b0:	bls	131e8 <dcngettext@plt+0x1f1c>
   131b4:	sub	r5, r5, #1
   131b8:	ldr	r3, [sp, #36]	; 0x24
   131bc:	cmp	r3, #43	; 0x2b
   131c0:	cmpne	r3, #48	; 0x30
   131c4:	bne	1320c <dcngettext@plt+0x1f40>
   131c8:	mov	r6, #0
   131cc:	mov	r8, #48	; 0x30
   131d0:	ldr	r1, [sp, #24]
   131d4:	mov	r0, r8
   131d8:	bl	11254 <fputc@plt>
   131dc:	add	r6, r6, #1
   131e0:	cmp	r5, r6
   131e4:	bne	131d0 <dcngettext@plt+0x1f04>
   131e8:	ldr	r1, [sp, #24]
   131ec:	mov	r0, #10
   131f0:	bl	11254 <fputc@plt>
   131f4:	add	r7, r7, sl
   131f8:	b	122a4 <dcngettext@plt+0xfd8>
   131fc:	mov	r3, #34	; 0x22
   13200:	ldr	r2, [sp, #28]
   13204:	str	r3, [r2]
   13208:	b	122e8 <dcngettext@plt+0x101c>
   1320c:	mov	r6, #0
   13210:	mov	r8, #32
   13214:	ldr	r1, [sp, #24]
   13218:	mov	r0, r8
   1321c:	bl	11254 <fputc@plt>
   13220:	add	r6, r6, #1
   13224:	cmp	r5, r6
   13228:	bne	13214 <dcngettext@plt+0x1f48>
   1322c:	b	131e8 <dcngettext@plt+0x1f1c>
   13230:	mov	fp, #1
   13234:	b	1323c <dcngettext@plt+0x1f70>
   13238:	mov	fp, #0
   1323c:	cmp	r5, #0
   13240:	movne	fp, r5
   13244:	mov	r1, #112	; 0x70
   13248:	cmp	r5, #0
   1324c:	ldr	r3, [sp, #76]	; 0x4c
   13250:	movne	r3, #0
   13254:	str	r3, [sp, #76]	; 0x4c
   13258:	mov	r3, #32
   1325c:	strb	r3, [sp, #88]	; 0x58
   13260:	mov	r3, #37	; 0x25
   13264:	strb	r3, [sp, #89]	; 0x59
   13268:	cmp	r9, #0
   1326c:	addeq	r3, sp, #90	; 0x5a
   13270:	beq	12c4c <dcngettext@plt+0x1980>
   13274:	b	12c44 <dcngettext@plt+0x1978>
   13278:	ldr	r3, [sp, #40]	; 0x28
   1327c:	ldr	r2, [r3, #16]
   13280:	cmp	r9, #79	; 0x4f
   13284:	moveq	r1, #113	; 0x71
   13288:	beq	12c30 <dcngettext@plt+0x1964>
   1328c:	mov	r3, #11
   13290:	mul	r3, r3, r2
   13294:	asr	r3, r3, #5
   13298:	add	r3, r3, #1
   1329c:	mov	r0, #0
   132a0:	str	r0, [sp, #80]	; 0x50
   132a4:	mov	r8, r0
   132a8:	mov	fp, #1
   132ac:	b	12d2c <dcngettext@plt+0x1a60>
   132b0:	cmp	r9, #69	; 0x45
   132b4:	beq	12738 <dcngettext@plt+0x146c>
   132b8:	ldr	r3, [sp, #40]	; 0x28
   132bc:	ldr	r3, [r3]
   132c0:	mov	fp, #2
   132c4:	b	12c0c <dcngettext@plt+0x1940>
   132c8:	ldr	r1, [sp, #40]	; 0x28
   132cc:	ldrd	r2, [r1]
   132d0:	strd	r2, [sp, #104]	; 0x68
   132d4:	ldrd	r2, [r1, #8]
   132d8:	strd	r2, [sp, #112]	; 0x70
   132dc:	ldrd	r2, [r1, #16]
   132e0:	strd	r2, [sp, #120]	; 0x78
   132e4:	ldrd	r2, [r1, #24]
   132e8:	strd	r2, [sp, #128]	; 0x80
   132ec:	ldrd	r2, [r1, #32]
   132f0:	strd	r2, [sp, #136]	; 0x88
   132f4:	ldr	r3, [r1, #40]	; 0x28
   132f8:	str	r3, [sp, #144]	; 0x90
   132fc:	mvn	r3, #0
   13300:	str	r3, [sp, #132]	; 0x84
   13304:	add	r1, sp, #104	; 0x68
   13308:	ldr	r0, [sp, #1180]	; 0x49c
   1330c:	bl	16874 <dcngettext@plt+0x55a8>
   13310:	ldr	r3, [sp, #132]	; 0x84
   13314:	cmp	r3, #0
   13318:	blt	13374 <dcngettext@plt+0x20a8>
   1331c:	lsr	r8, r0, #31
   13320:	mov	r2, r0
   13324:	add	r5, sp, #102	; 0x66
   13328:	ldr	ip, [sp, #60]	; 0x3c
   1332c:	smull	r3, r1, ip, r2
   13330:	asr	r1, r1, #2
   13334:	asr	lr, r2, #31
   13338:	sub	r3, r1, lr
   1333c:	add	r3, r3, r3, lsl #2
   13340:	sub	r3, r2, r3, lsl #1
   13344:	sub	r2, r1, lr
   13348:	cmp	r0, #0
   1334c:	rsblt	r3, r3, #48	; 0x30
   13350:	addge	r3, r3, #48	; 0x30
   13354:	uxtb	r3, r3
   13358:	strb	r3, [r5, #-1]!
   1335c:	cmp	r2, #0
   13360:	bne	1332c <dcngettext@plt+0x2060>
   13364:	mov	r3, #0
   13368:	str	r3, [sp, #80]	; 0x50
   1336c:	mov	fp, #1
   13370:	b	12d90 <dcngettext@plt+0x1ac4>
   13374:	mov	r3, #75	; 0x4b
   13378:	ldr	r2, [sp, #28]
   1337c:	str	r3, [r2]
   13380:	b	122e8 <dcngettext@plt+0x101c>
   13384:	cmp	r9, #79	; 0x4f
   13388:	beq	12738 <dcngettext@plt+0x146c>
   1338c:	mov	r1, #88	; 0x58
   13390:	mov	fp, #0
   13394:	b	13258 <dcngettext@plt+0x1f8c>
   13398:	ldr	r2, [sp, #36]	; 0x24
   1339c:	mvn	r3, sl
   133a0:	lsr	r3, r3, #31
   133a4:	cmp	r2, #45	; 0x2d
   133a8:	moveq	r3, #0
   133ac:	cmp	r3, #0
   133b0:	moveq	sl, #0
   133b4:	mov	r5, sl
   133b8:	cmp	sl, #1
   133bc:	movcc	sl, #1
   133c0:	mvn	r3, r7
   133c4:	cmp	r3, sl
   133c8:	bls	13428 <dcngettext@plt+0x215c>
   133cc:	ldr	r3, [sp, #24]
   133d0:	cmp	r3, #0
   133d4:	beq	13420 <dcngettext@plt+0x2154>
   133d8:	cmp	r5, #1
   133dc:	bls	13414 <dcngettext@plt+0x2148>
   133e0:	sub	r5, r5, #1
   133e4:	ldr	r3, [sp, #36]	; 0x24
   133e8:	cmp	r3, #43	; 0x2b
   133ec:	cmpne	r3, #48	; 0x30
   133f0:	bne	13438 <dcngettext@plt+0x216c>
   133f4:	mov	r6, #0
   133f8:	mov	r8, #48	; 0x30
   133fc:	ldr	r1, [sp, #24]
   13400:	mov	r0, r8
   13404:	bl	11254 <fputc@plt>
   13408:	add	r6, r6, #1
   1340c:	cmp	r5, r6
   13410:	bne	133fc <dcngettext@plt+0x2130>
   13414:	ldr	r1, [sp, #24]
   13418:	mov	r0, #9
   1341c:	bl	11254 <fputc@plt>
   13420:	add	r7, r7, sl
   13424:	b	122a4 <dcngettext@plt+0xfd8>
   13428:	mov	r3, #34	; 0x22
   1342c:	ldr	r2, [sp, #28]
   13430:	str	r3, [r2]
   13434:	b	122e8 <dcngettext@plt+0x101c>
   13438:	mov	r6, #0
   1343c:	mov	r8, #32
   13440:	ldr	r1, [sp, #24]
   13444:	mov	r0, r8
   13448:	bl	11254 <fputc@plt>
   1344c:	add	r6, r6, #1
   13450:	cmp	r5, r6
   13454:	bne	13440 <dcngettext@plt+0x2174>
   13458:	b	13414 <dcngettext@plt+0x2148>
   1345c:	ldr	r3, [sp, #40]	; 0x28
   13460:	ldr	r3, [r3, #24]
   13464:	add	r3, r3, #6
   13468:	ldr	r2, [sp, #52]	; 0x34
   1346c:	smull	r0, r2, r2, r3
   13470:	add	r0, r2, r3
   13474:	asr	r2, r3, #31
   13478:	rsb	r2, r2, r0, asr #2
   1347c:	rsb	r2, r2, r2, lsl #3
   13480:	sub	r3, r3, r2
   13484:	add	r3, r3, #1
   13488:	mov	fp, #1
   1348c:	b	12c0c <dcngettext@plt+0x1940>
   13490:	cmp	r9, #69	; 0x45
   13494:	beq	12738 <dcngettext@plt+0x146c>
   13498:	ldr	r2, [sp, #40]	; 0x28
   1349c:	ldr	r3, [r2, #28]
   134a0:	ldr	r2, [r2, #24]
   134a4:	sub	r3, r3, r2
   134a8:	add	r3, r3, #7
   134ac:	ldr	r2, [sp, #52]	; 0x34
   134b0:	smull	r0, r2, r2, r3
   134b4:	add	r2, r2, r3
   134b8:	asr	r3, r3, #31
   134bc:	rsb	r3, r3, r2, asr #2
   134c0:	mov	fp, #2
   134c4:	b	12c0c <dcngettext@plt+0x1940>
   134c8:	cmp	r9, #69	; 0x45
   134cc:	beq	12738 <dcngettext@plt+0x146c>
   134d0:	ldr	r2, [sp, #40]	; 0x28
   134d4:	ldr	r5, [r2, #20]
   134d8:	cmp	r5, #0
   134dc:	movlt	r0, #300	; 0x12c
   134e0:	mvnge	r0, #99	; 0x63
   134e4:	add	r0, r5, r0
   134e8:	ldr	r6, [r2, #28]
   134ec:	ldr	fp, [r2, #24]
   134f0:	sub	r2, r6, fp
   134f4:	add	r2, r2, #380	; 0x17c
   134f8:	add	r2, r2, #2
   134fc:	ldr	ip, [sp, #52]	; 0x34
   13500:	smull	ip, lr, ip, r2
   13504:	add	lr, lr, r2
   13508:	asr	ip, r2, #31
   1350c:	rsb	ip, ip, lr, asr #2
   13510:	rsb	ip, ip, ip, lsl #3
   13514:	sub	ip, r2, ip
   13518:	sub	r8, r6, ip
   1351c:	adds	r8, r8, #3
   13520:	bmi	13624 <dcngettext@plt+0x2358>
   13524:	tst	r0, #3
   13528:	movne	r2, #0
   1352c:	bne	13568 <dcngettext@plt+0x229c>
   13530:	ldr	r2, [sp, #56]	; 0x38
   13534:	smull	ip, r2, r2, r0
   13538:	asr	ip, r0, #31
   1353c:	rsb	r2, ip, r2, asr #5
   13540:	mov	ip, #100	; 0x64
   13544:	mls	r2, ip, r2, r0
   13548:	cmp	r2, #0
   1354c:	movne	r2, #1
   13550:	bne	13568 <dcngettext@plt+0x229c>
   13554:	mov	ip, #400	; 0x190
   13558:	sdiv	r2, r0, ip
   1355c:	mls	r2, ip, r2, r0
   13560:	clz	r2, r2
   13564:	lsr	r2, r2, #5
   13568:	add	r2, r2, #364	; 0x16c
   1356c:	add	r2, r2, #1
   13570:	sub	r2, r6, r2
   13574:	sub	r0, r2, fp
   13578:	add	r0, r0, #380	; 0x17c
   1357c:	add	r0, r0, #2
   13580:	ldr	ip, [sp, #52]	; 0x34
   13584:	smull	ip, lr, ip, r0
   13588:	add	lr, lr, r0
   1358c:	asr	ip, r0, #31
   13590:	rsb	ip, ip, lr, asr #2
   13594:	rsb	ip, ip, ip, lsl #3
   13598:	sub	ip, r0, ip
   1359c:	sub	lr, r2, ip
   135a0:	add	lr, lr, #3
   135a4:	cmp	lr, #0
   135a8:	movge	r8, lr
   135ac:	mvn	lr, lr
   135b0:	lsr	lr, lr, #31
   135b4:	cmp	r3, #71	; 0x47
   135b8:	beq	136b0 <dcngettext@plt+0x23e4>
   135bc:	cmp	r3, #103	; 0x67
   135c0:	bne	136dc <dcngettext@plt+0x2410>
   135c4:	ldr	ip, [sp, #56]	; 0x38
   135c8:	smull	r2, r3, ip, r5
   135cc:	asr	r2, r5, #31
   135d0:	rsb	r2, r2, r3, asr #5
   135d4:	mov	r0, #100	; 0x64
   135d8:	mls	r2, r0, r2, r5
   135dc:	add	r2, r2, lr
   135e0:	smull	r3, ip, ip, r2
   135e4:	asr	r3, r2, #31
   135e8:	rsb	r3, r3, ip, asr #5
   135ec:	mls	r3, r0, r3, r2
   135f0:	cmp	r3, #0
   135f4:	movge	r8, #0
   135f8:	movge	fp, #2
   135fc:	bge	12b74 <dcngettext@plt+0x18a8>
   13600:	movw	r2, #63636	; 0xf894
   13604:	movt	r2, #65535	; 0xffff
   13608:	sub	r2, r2, lr
   1360c:	cmp	r2, r5
   13610:	rsbgt	r3, r3, #0
   13614:	addle	r3, r3, #100	; 0x64
   13618:	mov	r8, #0
   1361c:	mov	fp, #2
   13620:	b	12b74 <dcngettext@plt+0x18a8>
   13624:	sub	r0, r0, #1
   13628:	tst	r0, #3
   1362c:	movne	r2, #0
   13630:	bne	1366c <dcngettext@plt+0x23a0>
   13634:	ldr	r2, [sp, #56]	; 0x38
   13638:	smull	ip, r2, r2, r0
   1363c:	asr	ip, r0, #31
   13640:	rsb	r2, ip, r2, asr #5
   13644:	mov	ip, #100	; 0x64
   13648:	mls	r2, ip, r2, r0
   1364c:	cmp	r2, #0
   13650:	movne	r2, #1
   13654:	bne	1366c <dcngettext@plt+0x23a0>
   13658:	mov	ip, #400	; 0x190
   1365c:	sdiv	r2, r0, ip
   13660:	mls	r2, ip, r2, r0
   13664:	clz	r2, r2
   13668:	lsr	r2, r2, #5
   1366c:	add	r2, r2, #364	; 0x16c
   13670:	add	r2, r2, #1
   13674:	add	r2, r2, r6
   13678:	sub	r0, r2, fp
   1367c:	add	r0, r0, #380	; 0x17c
   13680:	add	r0, r0, #2
   13684:	ldr	ip, [sp, #52]	; 0x34
   13688:	smull	ip, lr, ip, r0
   1368c:	add	lr, lr, r0
   13690:	asr	ip, r0, #31
   13694:	rsb	ip, ip, lr, asr #2
   13698:	rsb	ip, ip, ip, lsl #3
   1369c:	sub	r0, r0, ip
   136a0:	sub	r0, r2, r0
   136a4:	add	r8, r0, #3
   136a8:	mvn	lr, #0
   136ac:	b	135b4 <dcngettext@plt+0x22e8>
   136b0:	movw	r3, #63636	; 0xf894
   136b4:	movt	r3, #65535	; 0xffff
   136b8:	sub	r3, r3, lr
   136bc:	cmp	r5, r3
   136c0:	movge	r8, #0
   136c4:	movlt	r8, #1
   136c8:	add	r3, r5, #1888	; 0x760
   136cc:	add	r3, r3, #12
   136d0:	add	r3, r3, lr
   136d4:	mov	fp, #4
   136d8:	b	12b74 <dcngettext@plt+0x18a8>
   136dc:	ldr	r3, [sp, #52]	; 0x34
   136e0:	smull	r2, r3, r3, r8
   136e4:	add	r2, r3, r8
   136e8:	asr	r3, r8, #31
   136ec:	rsb	r3, r3, r2, asr #2
   136f0:	add	r3, r3, #1
   136f4:	mov	fp, #2
   136f8:	b	12c0c <dcngettext@plt+0x1940>
   136fc:	cmp	r9, #69	; 0x45
   13700:	beq	12738 <dcngettext@plt+0x146c>
   13704:	ldr	ip, [sp, #40]	; 0x28
   13708:	ldr	r3, [ip, #24]
   1370c:	add	r3, r3, #6
   13710:	ldr	lr, [sp, #52]	; 0x34
   13714:	smull	r0, r2, lr, r3
   13718:	add	r0, r2, r3
   1371c:	asr	r2, r3, #31
   13720:	rsb	r2, r2, r0, asr #2
   13724:	rsb	r2, r2, r2, lsl #3
   13728:	sub	r2, r3, r2
   1372c:	ldr	r3, [ip, #28]
   13730:	sub	r3, r3, r2
   13734:	add	r3, r3, #7
   13738:	smull	r0, r2, lr, r3
   1373c:	add	r2, r2, r3
   13740:	asr	r3, r3, #31
   13744:	rsb	r3, r3, r2, asr #2
   13748:	mov	fp, #2
   1374c:	b	12c0c <dcngettext@plt+0x1940>
   13750:	cmp	r9, #69	; 0x45
   13754:	beq	12738 <dcngettext@plt+0x146c>
   13758:	ldr	r3, [sp, #40]	; 0x28
   1375c:	ldr	r3, [r3, #24]
   13760:	mov	fp, #1
   13764:	b	12c0c <dcngettext@plt+0x1940>
   13768:	cmp	r9, #69	; 0x45
   1376c:	beq	13ad8 <dcngettext@plt+0x280c>
   13770:	cmp	r9, #79	; 0x4f
   13774:	beq	12738 <dcngettext@plt+0x146c>
   13778:	ldr	r3, [sp, #40]	; 0x28
   1377c:	ldr	r3, [r3, #20]
   13780:	movw	r8, #63636	; 0xf894
   13784:	movt	r8, #65535	; 0xffff
   13788:	cmp	r3, r8
   1378c:	movge	r8, #0
   13790:	movlt	r8, #1
   13794:	add	r3, r3, #1888	; 0x760
   13798:	add	r3, r3, #12
   1379c:	mov	fp, #4
   137a0:	b	12b74 <dcngettext@plt+0x18a8>
   137a4:	cmp	r9, #69	; 0x45
   137a8:	beq	13ae0 <dcngettext@plt+0x2814>
   137ac:	ldr	r3, [sp, #40]	; 0x28
   137b0:	ldr	r2, [r3, #20]
   137b4:	ldr	r3, [sp, #56]	; 0x38
   137b8:	smull	r3, r0, r3, r2
   137bc:	asr	r3, r2, #31
   137c0:	rsb	r3, r3, r0, asr #5
   137c4:	mov	r0, #100	; 0x64
   137c8:	mls	r3, r0, r3, r2
   137cc:	cmp	r3, #0
   137d0:	blt	137e0 <dcngettext@plt+0x2514>
   137d4:	mov	r8, #0
   137d8:	mov	fp, #2
   137dc:	b	12b74 <dcngettext@plt+0x18a8>
   137e0:	movw	r0, #63636	; 0xf894
   137e4:	movt	r0, #65535	; 0xffff
   137e8:	cmp	r2, r0
   137ec:	rsblt	r3, r3, #0
   137f0:	addge	r3, r3, #100	; 0x64
   137f4:	b	137d4 <dcngettext@plt+0x2508>
   137f8:	cmp	r5, #0
   137fc:	ldr	r3, [sp, #76]	; 0x4c
   13800:	movne	r3, #0
   13804:	str	r3, [sp, #76]	; 0x4c
   13808:	ldr	r0, [sp, #48]	; 0x30
   1380c:	bl	1117c <strlen@plt>
   13810:	mov	r9, r0
   13814:	ldr	r2, [sp, #36]	; 0x24
   13818:	mvn	r3, sl
   1381c:	lsr	r3, r3, #31
   13820:	cmp	r2, #45	; 0x2d
   13824:	moveq	r3, #0
   13828:	cmp	r3, #0
   1382c:	moveq	sl, #0
   13830:	mov	r6, sl
   13834:	cmp	sl, r0
   13838:	movcc	sl, r0
   1383c:	mvn	r3, r7
   13840:	cmp	r3, sl
   13844:	bls	1389c <dcngettext@plt+0x25d0>
   13848:	ldr	r3, [sp, #24]
   1384c:	cmp	r3, #0
   13850:	beq	138f8 <dcngettext@plt+0x262c>
   13854:	cmp	r6, r0
   13858:	bls	138d4 <dcngettext@plt+0x2608>
   1385c:	sub	r6, r6, r0
   13860:	ldr	r3, [sp, #36]	; 0x24
   13864:	cmp	r3, #43	; 0x2b
   13868:	cmpne	r3, #48	; 0x30
   1386c:	beq	138ac <dcngettext@plt+0x25e0>
   13870:	cmp	r6, #0
   13874:	movne	r8, #0
   13878:	movne	fp, #32
   1387c:	beq	138d4 <dcngettext@plt+0x2608>
   13880:	ldr	r1, [sp, #24]
   13884:	mov	r0, fp
   13888:	bl	11254 <fputc@plt>
   1388c:	add	r8, r8, #1
   13890:	cmp	r6, r8
   13894:	bne	13880 <dcngettext@plt+0x25b4>
   13898:	b	138d4 <dcngettext@plt+0x2608>
   1389c:	mov	r3, #34	; 0x22
   138a0:	ldr	r2, [sp, #28]
   138a4:	str	r3, [r2]
   138a8:	b	122e8 <dcngettext@plt+0x101c>
   138ac:	cmp	r6, #0
   138b0:	beq	138d4 <dcngettext@plt+0x2608>
   138b4:	mov	r8, #0
   138b8:	mov	fp, #48	; 0x30
   138bc:	ldr	r1, [sp, #24]
   138c0:	mov	r0, fp
   138c4:	bl	11254 <fputc@plt>
   138c8:	add	r8, r8, #1
   138cc:	cmp	r6, r8
   138d0:	bne	138bc <dcngettext@plt+0x25f0>
   138d4:	cmp	r5, #0
   138d8:	bne	13900 <dcngettext@plt+0x2634>
   138dc:	ldr	r3, [sp, #76]	; 0x4c
   138e0:	cmp	r3, #0
   138e4:	beq	13914 <dcngettext@plt+0x2648>
   138e8:	mov	r2, r9
   138ec:	ldr	r1, [sp, #48]	; 0x30
   138f0:	ldr	r0, [sp, #24]
   138f4:	bl	12158 <dcngettext@plt+0xe8c>
   138f8:	add	r7, r7, sl
   138fc:	b	122a4 <dcngettext@plt+0xfd8>
   13900:	mov	r2, r9
   13904:	ldr	r1, [sp, #48]	; 0x30
   13908:	ldr	r0, [sp, #24]
   1390c:	bl	120fc <dcngettext@plt+0xe30>
   13910:	b	138f8 <dcngettext@plt+0x262c>
   13914:	ldr	r3, [sp, #24]
   13918:	mov	r2, #1
   1391c:	mov	r1, r9
   13920:	ldr	r0, [sp, #48]	; 0x30
   13924:	bl	11098 <fwrite@plt>
   13928:	b	138f8 <dcngettext@plt+0x262c>
   1392c:	add	r0, r4, #2
   13930:	mov	lr, #1
   13934:	add	lr, lr, #1
   13938:	mov	r2, r0
   1393c:	ldrb	r3, [r0], #1
   13940:	cmp	r3, #58	; 0x3a
   13944:	bne	12718 <dcngettext@plt+0x144c>
   13948:	b	13934 <dcngettext@plt+0x2668>
   1394c:	mov	lr, #0
   13950:	ldr	r2, [sp, #40]	; 0x28
   13954:	ldr	r3, [r2, #32]
   13958:	cmp	r3, #0
   1395c:	blt	122a4 <dcngettext@plt+0xfd8>
   13960:	ldr	r2, [r2, #36]	; 0x24
   13964:	cmp	r2, #0
   13968:	movlt	r8, #1
   1396c:	blt	1398c <dcngettext@plt+0x26c0>
   13970:	movne	r8, #0
   13974:	bne	1398c <dcngettext@plt+0x26c0>
   13978:	ldr	r3, [sp, #48]	; 0x30
   1397c:	ldrb	r8, [r3]
   13980:	cmp	r8, #45	; 0x2d
   13984:	movne	r8, #0
   13988:	moveq	r8, #1
   1398c:	ldr	r3, [sp, #68]	; 0x44
   13990:	smull	r0, r3, r3, r2
   13994:	add	r3, r3, r2
   13998:	asr	r0, r2, #31
   1399c:	rsb	r5, r0, r3, asr #11
   139a0:	ldr	ip, [sp, #72]	; 0x48
   139a4:	smull	fp, r3, ip, r2
   139a8:	add	r3, r3, r2
   139ac:	rsb	r3, r0, r3, asr #5
   139b0:	smull	ip, r0, ip, r3
   139b4:	add	r0, r0, r3
   139b8:	asr	ip, r3, #31
   139bc:	rsb	r0, ip, r0, asr #5
   139c0:	rsb	r0, r0, r0, lsl #4
   139c4:	sub	r0, r3, r0, lsl #2
   139c8:	rsb	r3, r3, r3, lsl #4
   139cc:	sub	r3, r2, r3, lsl #2
   139d0:	cmp	lr, #3
   139d4:	ldrls	pc, [pc, lr, lsl #2]
   139d8:	b	12738 <dcngettext@plt+0x146c>
   139dc:	andeq	r3, r1, ip, ror #19
   139e0:	andeq	r3, r1, r8, lsl #20
   139e4:	andeq	r3, r1, r4, lsr #20
   139e8:	andeq	r3, r1, ip, asr #20
   139ec:	mov	r3, #100	; 0x64
   139f0:	mla	r3, r3, r5, r0
   139f4:	mov	r0, #0
   139f8:	mov	r2, #1
   139fc:	str	r2, [sp, #80]	; 0x50
   13a00:	mov	fp, #5
   13a04:	b	12c18 <dcngettext@plt+0x194c>
   13a08:	mov	r3, #100	; 0x64
   13a0c:	mla	r3, r3, r5, r0
   13a10:	mov	r0, #4
   13a14:	mov	r2, #1
   13a18:	str	r2, [sp, #80]	; 0x50
   13a1c:	mov	fp, #6
   13a20:	b	12c18 <dcngettext@plt+0x194c>
   13a24:	mov	r2, #100	; 0x64
   13a28:	mul	r0, r2, r0
   13a2c:	movw	r2, #10000	; 0x2710
   13a30:	mla	r5, r2, r5, r0
   13a34:	add	r3, r5, r3
   13a38:	mov	r0, #20
   13a3c:	mov	r2, #1
   13a40:	str	r2, [sp, #80]	; 0x50
   13a44:	mov	fp, #9
   13a48:	b	12c18 <dcngettext@plt+0x194c>
   13a4c:	cmp	r3, #0
   13a50:	bne	13a24 <dcngettext@plt+0x2758>
   13a54:	cmp	r0, #0
   13a58:	bne	13a08 <dcngettext@plt+0x273c>
   13a5c:	mov	r3, r5
   13a60:	mov	r2, #1
   13a64:	str	r2, [sp, #80]	; 0x50
   13a68:	mov	fp, #3
   13a6c:	b	12c18 <dcngettext@plt+0x194c>
   13a70:	mov	r3, #34	; 0x22
   13a74:	ldr	r2, [sp, #28]
   13a78:	str	r3, [r2]
   13a7c:	b	122e8 <dcngettext@plt+0x101c>
   13a80:	mov	r9, #0
   13a84:	mov	fp, #32
   13a88:	ldr	r1, [sp, #24]
   13a8c:	mov	r0, fp
   13a90:	bl	11254 <fputc@plt>
   13a94:	add	r9, r9, #1
   13a98:	cmp	r8, r9
   13a9c:	bne	13a88 <dcngettext@plt+0x27bc>
   13aa0:	b	127bc <dcngettext@plt+0x14f0>
   13aa4:	ldr	r3, [sp, #24]
   13aa8:	mov	r2, #1
   13aac:	mov	r1, r5
   13ab0:	mov	r0, r6
   13ab4:	bl	11098 <fwrite@plt>
   13ab8:	b	127d8 <dcngettext@plt+0x150c>
   13abc:	mov	r7, #0
   13ac0:	ldr	r3, [sp, #28]
   13ac4:	ldr	r2, [sp, #44]	; 0x2c
   13ac8:	str	r2, [r3]
   13acc:	b	122ec <dcngettext@plt+0x1020>
   13ad0:	mov	r1, #67	; 0x43
   13ad4:	b	12c30 <dcngettext@plt+0x1964>
   13ad8:	mov	r1, #89	; 0x59
   13adc:	b	12c30 <dcngettext@plt+0x1964>
   13ae0:	mov	r1, #121	; 0x79
   13ae4:	b	12c30 <dcngettext@plt+0x1964>
   13ae8:	add	r8, sp, #102	; 0x66
   13aec:	sub	fp, r8, r5
   13af0:	sub	r8, sl, #1
   13af4:	sub	r8, r8, fp
   13af8:	ldr	r3, [sp, #36]	; 0x24
   13afc:	subs	r6, r3, #45	; 0x2d
   13b00:	movne	r6, #1
   13b04:	cmp	r8, #0
   13b08:	movle	r3, #0
   13b0c:	andgt	r3, r6, #1
   13b10:	cmp	r3, #0
   13b14:	bne	13c8c <dcngettext@plt+0x29c0>
   13b18:	mov	r8, #0
   13b1c:	mov	r3, #45	; 0x2d
   13b20:	str	r3, [sp, #80]	; 0x50
   13b24:	ldr	r3, [sp, #36]	; 0x24
   13b28:	cmp	r3, #95	; 0x5f
   13b2c:	beq	12dec <dcngettext@plt+0x1b20>
   13b30:	cmn	r7, #3
   13b34:	bhi	12e38 <dcngettext@plt+0x1b6c>
   13b38:	ldr	r3, [sp, #24]
   13b3c:	cmp	r3, #0
   13b40:	beq	13b50 <dcngettext@plt+0x2884>
   13b44:	mov	r1, r3
   13b48:	ldr	r0, [sp, #80]	; 0x50
   13b4c:	bl	11254 <fputc@plt>
   13b50:	add	r7, r7, #1
   13b54:	sub	sl, sl, #1
   13b58:	mov	r8, fp
   13b5c:	cmp	sl, #0
   13b60:	movlt	r6, #0
   13b64:	andge	r6, r6, #1
   13b68:	cmp	r6, #0
   13b6c:	moveq	sl, #0
   13b70:	mov	r6, sl
   13b74:	cmp	sl, fp
   13b78:	movcc	sl, fp
   13b7c:	mvn	r3, r7
   13b80:	cmp	r3, sl
   13b84:	bls	12e48 <dcngettext@plt+0x1b7c>
   13b88:	ldr	r3, [sp, #24]
   13b8c:	cmp	r3, #0
   13b90:	beq	12e9c <dcngettext@plt+0x1bd0>
   13b94:	cmp	r6, fp
   13b98:	bls	12e80 <dcngettext@plt+0x1bb4>
   13b9c:	sub	r6, r6, fp
   13ba0:	ldr	r3, [sp, #36]	; 0x24
   13ba4:	cmp	r3, #43	; 0x2b
   13ba8:	cmpne	r3, #48	; 0x30
   13bac:	beq	12e58 <dcngettext@plt+0x1b8c>
   13bb0:	cmp	r6, #0
   13bb4:	movne	r9, #0
   13bb8:	movne	fp, #32
   13bbc:	beq	12e80 <dcngettext@plt+0x1bb4>
   13bc0:	ldr	r1, [sp, #24]
   13bc4:	mov	r0, fp
   13bc8:	bl	11254 <fputc@plt>
   13bcc:	add	r9, r9, #1
   13bd0:	cmp	r6, r9
   13bd4:	bne	13bc0 <dcngettext@plt+0x28f4>
   13bd8:	b	12e80 <dcngettext@plt+0x1bb4>
   13bdc:	add	r8, sp, #102	; 0x66
   13be0:	sub	fp, r8, r5
   13be4:	sub	r8, sl, #1
   13be8:	sub	r8, r8, fp
   13bec:	ldr	r3, [sp, #36]	; 0x24
   13bf0:	subs	r3, r3, #45	; 0x2d
   13bf4:	movne	r3, #1
   13bf8:	cmp	r8, #0
   13bfc:	movle	r6, #0
   13c00:	andgt	r6, r3, #1
   13c04:	cmp	r6, #0
   13c08:	movne	r3, #43	; 0x2b
   13c0c:	strne	r3, [sp, #80]	; 0x50
   13c10:	bne	13b24 <dcngettext@plt+0x2858>
   13c14:	mov	r2, #43	; 0x2b
   13c18:	str	r2, [sp, #80]	; 0x50
   13c1c:	mov	r8, #0
   13c20:	b	13c94 <dcngettext@plt+0x29c8>
   13c24:	movw	r8, #32560	; 0x7f30
   13c28:	movt	r8, #1
   13c2c:	ldr	r3, [sp, #1184]	; 0x4a0
   13c30:	str	r3, [sp, #16]
   13c34:	ldr	r3, [sp, #1180]	; 0x49c
   13c38:	str	r3, [sp, #12]
   13c3c:	ldr	r3, [sp, #1176]	; 0x498
   13c40:	str	r3, [sp, #8]
   13c44:	mov	r6, #4
   13c48:	str	r6, [sp, #4]
   13c4c:	mov	fp, #43	; 0x2b
   13c50:	str	fp, [sp]
   13c54:	ldr	r3, [sp, #76]	; 0x4c
   13c58:	ldr	r2, [sp, #40]	; 0x28
   13c5c:	mov	r1, r8
   13c60:	mov	r0, #0
   13c64:	bl	121b4 <dcngettext@plt+0xee8>
   13c68:	mov	sl, r9
   13c6c:	mov	r9, r6
   13c70:	str	fp, [sp, #36]	; 0x24
   13c74:	b	129b0 <dcngettext@plt+0x16e4>
   13c78:	cmn	r7, #1
   13c7c:	beq	13138 <dcngettext@plt+0x1e6c>
   13c80:	mov	r5, #0
   13c84:	add	r7, r7, r5
   13c88:	b	122a4 <dcngettext@plt+0xfd8>
   13c8c:	mov	r2, #45	; 0x2d
   13c90:	str	r2, [sp, #80]	; 0x50
   13c94:	mov	r6, r3
   13c98:	b	13b24 <dcngettext@plt+0x2858>
   13c9c:	push	{lr}		; (str lr, [sp, #-4]!)
   13ca0:	sub	sp, sp, #36	; 0x24
   13ca4:	mov	ip, #0
   13ca8:	strb	ip, [sp, #31]
   13cac:	ldr	lr, [sp, #40]	; 0x28
   13cb0:	str	lr, [sp, #16]
   13cb4:	str	r3, [sp, #12]
   13cb8:	add	r3, sp, #31
   13cbc:	str	r3, [sp, #8]
   13cc0:	mvn	r3, #0
   13cc4:	str	r3, [sp, #4]
   13cc8:	str	ip, [sp]
   13ccc:	mov	r3, ip
   13cd0:	bl	121b4 <dcngettext@plt+0xee8>
   13cd4:	add	sp, sp, #36	; 0x24
   13cd8:	pop	{pc}		; (ldr pc, [sp], #4)
   13cdc:	str	r4, [sp, #-16]!
   13ce0:	strd	r6, [sp, #4]
   13ce4:	str	lr, [sp, #12]
   13ce8:	sub	sp, sp, #8
   13cec:	mov	r4, r0
   13cf0:	mov	r6, r2
   13cf4:	mov	r7, r3
   13cf8:	ldr	r2, [r0, #8]
   13cfc:	ldr	r3, [r0, #4]
   13d00:	cmp	r2, r3
   13d04:	beq	13d34 <dcngettext@plt+0x2a68>
   13d08:	ldr	r3, [sp, #24]
   13d0c:	str	r3, [sp]
   13d10:	mov	r2, r6
   13d14:	mov	r3, r7
   13d18:	mov	r0, r4
   13d1c:	bl	111f4 <fseeko64@plt>
   13d20:	add	sp, sp, #8
   13d24:	ldr	r4, [sp]
   13d28:	ldrd	r6, [sp, #4]
   13d2c:	add	sp, sp, #12
   13d30:	pop	{pc}		; (ldr pc, [sp], #4)
   13d34:	ldr	r2, [r0, #20]
   13d38:	ldr	r3, [r0, #16]
   13d3c:	cmp	r2, r3
   13d40:	bne	13d08 <dcngettext@plt+0x2a3c>
   13d44:	ldr	r3, [r0, #36]	; 0x24
   13d48:	cmp	r3, #0
   13d4c:	bne	13d08 <dcngettext@plt+0x2a3c>
   13d50:	bl	111d0 <fileno@plt>
   13d54:	ldr	r3, [sp, #24]
   13d58:	str	r3, [sp]
   13d5c:	mov	r2, r6
   13d60:	mov	r3, r7
   13d64:	bl	110a4 <lseek64@plt>
   13d68:	mvn	r2, #0
   13d6c:	mvn	r3, #0
   13d70:	cmp	r1, r3
   13d74:	cmpeq	r0, r2
   13d78:	beq	13d94 <dcngettext@plt+0x2ac8>
   13d7c:	ldr	r3, [r4]
   13d80:	bic	r3, r3, #16
   13d84:	str	r3, [r4]
   13d88:	strd	r0, [r4, #80]	; 0x50
   13d8c:	mov	r0, #0
   13d90:	b	13d20 <dcngettext@plt+0x2a54>
   13d94:	mvn	r0, #0
   13d98:	b	13d20 <dcngettext@plt+0x2a54>
   13d9c:	strd	r4, [sp, #-16]!
   13da0:	str	r6, [sp, #8]
   13da4:	str	lr, [sp, #12]
   13da8:	sub	sp, sp, #16
   13dac:	movw	ip, #37264	; 0x9190
   13db0:	movt	ip, #2
   13db4:	ldr	r4, [ip]
   13db8:	mov	lr, #0
   13dbc:	str	lr, [ip]
   13dc0:	cmp	r0, #2
   13dc4:	beq	13df8 <dcngettext@plt+0x2b2c>
   13dc8:	movw	r3, #37264	; 0x9190
   13dcc:	movt	r3, #2
   13dd0:	str	r4, [r3]
   13dd4:	movw	r3, #37248	; 0x9180
   13dd8:	movt	r3, #2
   13ddc:	mov	r2, #0
   13de0:	str	r2, [r3]
   13de4:	add	sp, sp, #16
   13de8:	ldrd	r4, [sp]
   13dec:	ldr	r6, [sp, #8]
   13df0:	add	sp, sp, #12
   13df4:	pop	{pc}		; (ldr pc, [sp], #4)
   13df8:	mov	r6, r3
   13dfc:	mov	r5, r2
   13e00:	str	lr, [sp]
   13e04:	movw	r3, #32592	; 0x7f50
   13e08:	movt	r3, #1
   13e0c:	movw	r2, #32640	; 0x7f80
   13e10:	movt	r2, #1
   13e14:	bl	1114c <getopt_long@plt>
   13e18:	cmn	r0, #1
   13e1c:	beq	13dc8 <dcngettext@plt+0x2afc>
   13e20:	cmp	r0, #104	; 0x68
   13e24:	beq	13e60 <dcngettext@plt+0x2b94>
   13e28:	cmp	r0, #118	; 0x76
   13e2c:	bne	13dc8 <dcngettext@plt+0x2afc>
   13e30:	add	r3, sp, #40	; 0x28
   13e34:	str	r3, [sp, #12]
   13e38:	movw	r0, #37260	; 0x918c
   13e3c:	movt	r0, #2
   13e40:	str	r3, [sp]
   13e44:	ldr	r3, [sp, #32]
   13e48:	mov	r2, r6
   13e4c:	mov	r1, r5
   13e50:	ldr	r0, [r0]
   13e54:	bl	16e14 <dcngettext@plt+0x5b48>
   13e58:	mov	r0, #0
   13e5c:	bl	11170 <exit@plt>
   13e60:	mov	r0, #0
   13e64:	ldr	r3, [sp, #36]	; 0x24
   13e68:	blx	r3
   13e6c:	b	13dc8 <dcngettext@plt+0x2afc>
   13e70:	strd	r4, [sp, #-16]!
   13e74:	str	r6, [sp, #8]
   13e78:	str	lr, [sp, #12]
   13e7c:	sub	sp, sp, #16
   13e80:	mov	r5, r2
   13e84:	mov	r6, r3
   13e88:	movw	r3, #37264	; 0x9190
   13e8c:	movt	r3, #2
   13e90:	ldr	r4, [r3]
   13e94:	mov	r2, #1
   13e98:	str	r2, [r3]
   13e9c:	movw	r2, #31800	; 0x7c38
   13ea0:	movt	r2, #1
   13ea4:	movw	ip, #32640	; 0x7f80
   13ea8:	movt	ip, #1
   13eac:	mov	r3, #0
   13eb0:	str	r3, [sp]
   13eb4:	movw	r3, #32592	; 0x7f50
   13eb8:	movt	r3, #1
   13ebc:	ldrb	lr, [sp, #36]	; 0x24
   13ec0:	cmp	lr, #0
   13ec4:	moveq	r2, ip
   13ec8:	bl	1114c <getopt_long@plt>
   13ecc:	cmn	r0, #1
   13ed0:	beq	13f08 <dcngettext@plt+0x2c3c>
   13ed4:	cmp	r0, #104	; 0x68
   13ed8:	beq	13efc <dcngettext@plt+0x2c30>
   13edc:	cmp	r0, #118	; 0x76
   13ee0:	beq	13f28 <dcngettext@plt+0x2c5c>
   13ee4:	movw	r3, #37172	; 0x9134
   13ee8:	movt	r3, #2
   13eec:	ldr	r0, [r3]
   13ef0:	ldr	r3, [sp, #40]	; 0x28
   13ef4:	blx	r3
   13ef8:	b	13f08 <dcngettext@plt+0x2c3c>
   13efc:	mov	r0, #0
   13f00:	ldr	r3, [sp, #40]	; 0x28
   13f04:	blx	r3
   13f08:	movw	r3, #37264	; 0x9190
   13f0c:	movt	r3, #2
   13f10:	str	r4, [r3]
   13f14:	add	sp, sp, #16
   13f18:	ldrd	r4, [sp]
   13f1c:	ldr	r6, [sp, #8]
   13f20:	add	sp, sp, #12
   13f24:	pop	{pc}		; (ldr pc, [sp], #4)
   13f28:	add	r3, sp, #44	; 0x2c
   13f2c:	str	r3, [sp, #12]
   13f30:	movw	r0, #37260	; 0x918c
   13f34:	movt	r0, #2
   13f38:	str	r3, [sp]
   13f3c:	ldr	r3, [sp, #32]
   13f40:	mov	r2, r6
   13f44:	mov	r1, r5
   13f48:	ldr	r0, [r0]
   13f4c:	bl	16e14 <dcngettext@plt+0x5b48>
   13f50:	mov	r0, #0
   13f54:	bl	11170 <exit@plt>
   13f58:	strd	r4, [sp, #-16]!
   13f5c:	str	r6, [sp, #8]
   13f60:	str	lr, [sp, #12]
   13f64:	subs	r4, r0, #0
   13f68:	beq	14004 <dcngettext@plt+0x2d38>
   13f6c:	mov	r1, #47	; 0x2f
   13f70:	mov	r0, r4
   13f74:	bl	1123c <strrchr@plt>
   13f78:	subs	r5, r0, #0
   13f7c:	beq	13fdc <dcngettext@plt+0x2d10>
   13f80:	add	r6, r5, #1
   13f84:	sub	r3, r6, r4
   13f88:	cmp	r3, #6
   13f8c:	ble	13fdc <dcngettext@plt+0x2d10>
   13f90:	mov	r2, #7
   13f94:	movw	r1, #32716	; 0x7fcc
   13f98:	movt	r1, #1
   13f9c:	sub	r0, r5, #6
   13fa0:	bl	112a8 <strncmp@plt>
   13fa4:	cmp	r0, #0
   13fa8:	bne	13fdc <dcngettext@plt+0x2d10>
   13fac:	mov	r2, #3
   13fb0:	movw	r1, #32724	; 0x7fd4
   13fb4:	movt	r1, #1
   13fb8:	mov	r0, r6
   13fbc:	bl	112a8 <strncmp@plt>
   13fc0:	cmp	r0, #0
   13fc4:	movne	r4, r6
   13fc8:	bne	13fdc <dcngettext@plt+0x2d10>
   13fcc:	add	r4, r5, #4
   13fd0:	movw	r3, #37240	; 0x9178
   13fd4:	movt	r3, #2
   13fd8:	str	r4, [r3]
   13fdc:	movw	r3, #37284	; 0x91a4
   13fe0:	movt	r3, #2
   13fe4:	str	r4, [r3]
   13fe8:	movw	r3, #37244	; 0x917c
   13fec:	movt	r3, #2
   13ff0:	str	r4, [r3]
   13ff4:	ldrd	r4, [sp]
   13ff8:	ldr	r6, [sp, #8]
   13ffc:	add	sp, sp, #12
   14000:	pop	{pc}		; (ldr pc, [sp], #4)
   14004:	movw	r3, #37256	; 0x9188
   14008:	movt	r3, #2
   1400c:	ldr	r3, [r3]
   14010:	mov	r2, #55	; 0x37
   14014:	mov	r1, #1
   14018:	movw	r0, #32660	; 0x7f94
   1401c:	movt	r0, #1
   14020:	bl	11098 <fwrite@plt>
   14024:	bl	112b4 <abort@plt>
   14028:	mov	r2, #0
   1402c:	mov	r3, #0
   14030:	strd	r2, [r0]
   14034:	strd	r2, [r0, #8]
   14038:	strd	r2, [r0, #16]
   1403c:	strd	r2, [r0, #24]
   14040:	strd	r2, [r0, #32]
   14044:	strd	r2, [r0, #40]	; 0x28
   14048:	cmp	r1, #10
   1404c:	beq	14058 <dcngettext@plt+0x2d8c>
   14050:	str	r1, [r0]
   14054:	bx	lr
   14058:	str	r4, [sp, #-8]!
   1405c:	str	lr, [sp, #4]
   14060:	bl	112b4 <abort@plt>
   14064:	strd	r4, [sp, #-16]!
   14068:	str	r6, [sp, #8]
   1406c:	str	lr, [sp, #12]
   14070:	mov	r5, r0
   14074:	mov	r6, r1
   14078:	mov	r2, #5
   1407c:	mov	r1, r0
   14080:	mov	r0, #0
   14084:	bl	11044 <dcgettext@plt>
   14088:	mov	r4, r0
   1408c:	cmp	r5, r0
   14090:	beq	140a8 <dcngettext@plt+0x2ddc>
   14094:	mov	r0, r4
   14098:	ldrd	r4, [sp]
   1409c:	ldr	r6, [sp, #8]
   140a0:	add	sp, sp, #12
   140a4:	pop	{pc}		; (ldr pc, [sp], #4)
   140a8:	bl	17610 <dcngettext@plt+0x6344>
   140ac:	ldrb	r3, [r0]
   140b0:	bic	r3, r3, #32
   140b4:	cmp	r3, #85	; 0x55
   140b8:	bne	1413c <dcngettext@plt+0x2e70>
   140bc:	ldrb	r3, [r0, #1]
   140c0:	bic	r3, r3, #32
   140c4:	cmp	r3, #84	; 0x54
   140c8:	bne	14100 <dcngettext@plt+0x2e34>
   140cc:	ldrb	r3, [r0, #2]
   140d0:	bic	r3, r3, #32
   140d4:	cmp	r3, #70	; 0x46
   140d8:	bne	14100 <dcngettext@plt+0x2e34>
   140dc:	ldrb	r3, [r0, #3]
   140e0:	cmp	r3, #45	; 0x2d
   140e4:	bne	14100 <dcngettext@plt+0x2e34>
   140e8:	ldrb	r3, [r0, #4]
   140ec:	cmp	r3, #56	; 0x38
   140f0:	bne	14100 <dcngettext@plt+0x2e34>
   140f4:	ldrb	r3, [r0, #5]
   140f8:	cmp	r3, #0
   140fc:	beq	1411c <dcngettext@plt+0x2e50>
   14100:	movw	r4, #32812	; 0x802c
   14104:	movt	r4, #1
   14108:	movw	r3, #32832	; 0x8040
   1410c:	movt	r3, #1
   14110:	cmp	r6, #9
   14114:	movne	r4, r3
   14118:	b	14094 <dcngettext@plt+0x2dc8>
   1411c:	ldrb	r2, [r4]
   14120:	movw	r4, #32828	; 0x803c
   14124:	movt	r4, #1
   14128:	movw	r3, #32816	; 0x8030
   1412c:	movt	r3, #1
   14130:	cmp	r2, #96	; 0x60
   14134:	movne	r4, r3
   14138:	b	14094 <dcngettext@plt+0x2dc8>
   1413c:	cmp	r3, #71	; 0x47
   14140:	bne	14100 <dcngettext@plt+0x2e34>
   14144:	ldrb	r3, [r0, #1]
   14148:	bic	r3, r3, #32
   1414c:	cmp	r3, #66	; 0x42
   14150:	bne	14100 <dcngettext@plt+0x2e34>
   14154:	ldrb	r3, [r0, #2]
   14158:	cmp	r3, #49	; 0x31
   1415c:	bne	14100 <dcngettext@plt+0x2e34>
   14160:	ldrb	r3, [r0, #3]
   14164:	cmp	r3, #56	; 0x38
   14168:	bne	14100 <dcngettext@plt+0x2e34>
   1416c:	ldrb	r3, [r0, #4]
   14170:	cmp	r3, #48	; 0x30
   14174:	bne	14100 <dcngettext@plt+0x2e34>
   14178:	ldrb	r3, [r0, #5]
   1417c:	cmp	r3, #51	; 0x33
   14180:	bne	14100 <dcngettext@plt+0x2e34>
   14184:	ldrb	r3, [r0, #6]
   14188:	cmp	r3, #48	; 0x30
   1418c:	bne	14100 <dcngettext@plt+0x2e34>
   14190:	ldrb	r3, [r0, #7]
   14194:	cmp	r3, #0
   14198:	bne	14100 <dcngettext@plt+0x2e34>
   1419c:	ldrb	r2, [r4]
   141a0:	movw	r4, #32824	; 0x8038
   141a4:	movt	r4, #1
   141a8:	movw	r3, #32820	; 0x8034
   141ac:	movt	r3, #1
   141b0:	cmp	r2, #96	; 0x60
   141b4:	movne	r4, r3
   141b8:	b	14094 <dcngettext@plt+0x2dc8>
   141bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   141c0:	strd	r6, [sp, #8]
   141c4:	strd	r8, [sp, #16]
   141c8:	strd	sl, [sp, #24]
   141cc:	str	lr, [sp, #32]
   141d0:	sub	sp, sp, #116	; 0x74
   141d4:	str	r0, [sp, #64]	; 0x40
   141d8:	mov	r8, r1
   141dc:	str	r2, [sp, #48]	; 0x30
   141e0:	str	r3, [sp, #24]
   141e4:	ldr	r7, [sp, #152]	; 0x98
   141e8:	bl	110b0 <__ctype_get_mb_cur_max@plt>
   141ec:	str	r0, [sp, #76]	; 0x4c
   141f0:	ldr	r3, [sp, #156]	; 0x9c
   141f4:	ubfx	r3, r3, #1, #1
   141f8:	str	r3, [sp, #32]
   141fc:	mov	r3, #1
   14200:	str	r3, [sp, #40]	; 0x28
   14204:	mov	r3, #0
   14208:	str	r3, [sp, #68]	; 0x44
   1420c:	str	r3, [sp, #36]	; 0x24
   14210:	str	r3, [sp, #28]
   14214:	str	r3, [sp, #52]	; 0x34
   14218:	str	r3, [sp, #60]	; 0x3c
   1421c:	str	r3, [sp, #72]	; 0x48
   14220:	movw	r3, #32836	; 0x8044
   14224:	movt	r3, #1
   14228:	str	r3, [sp, #80]	; 0x50
   1422c:	mov	r9, r8
   14230:	mov	sl, r7
   14234:	cmp	sl, #10
   14238:	ldrls	pc, [pc, sl, lsl #2]
   1423c:	b	14400 <dcngettext@plt+0x3134>
   14240:	andeq	r4, r1, r0, lsr #5
   14244:	andeq	r4, r1, r4, ror r2
   14248:	ldrdeq	r4, [r1], -r8
   1424c:	andeq	r4, r1, ip, ror #4
   14250:	andeq	r4, r1, ip, lsl #7
   14254:			; <UNDEFINED> instruction: 0x000142b0
   14258:	andeq	r5, r1, ip, ror r6
   1425c:	andeq	r4, r1, r4, lsl #8
   14260:	andeq	r4, r1, ip, ror #5
   14264:	andeq	r4, r1, ip, ror #5
   14268:	andeq	r4, r1, ip, ror #5
   1426c:	mov	r3, #1
   14270:	str	r3, [sp, #28]
   14274:	mov	r3, #1
   14278:	str	r3, [sp, #32]
   1427c:	str	r3, [sp, #52]	; 0x34
   14280:	movw	r3, #32832	; 0x8040
   14284:	movt	r3, #1
   14288:	str	r3, [sp, #60]	; 0x3c
   1428c:	mov	fp, #0
   14290:	mov	sl, #2
   14294:	mov	r6, #0
   14298:	ldr	r8, [sp, #64]	; 0x40
   1429c:	b	14b14 <dcngettext@plt+0x3848>
   142a0:	mov	fp, sl
   142a4:	mov	r3, #0
   142a8:	str	r3, [sp, #32]
   142ac:	b	14294 <dcngettext@plt+0x2fc8>
   142b0:	ldr	r3, [sp, #32]
   142b4:	cmp	r3, #0
   142b8:	bne	14418 <dcngettext@plt+0x314c>
   142bc:	cmp	r9, #0
   142c0:	beq	1443c <dcngettext@plt+0x3170>
   142c4:	mov	r3, #34	; 0x22
   142c8:	ldr	r2, [sp, #64]	; 0x40
   142cc:	strb	r3, [r2]
   142d0:	mov	fp, #1
   142d4:	str	fp, [sp, #28]
   142d8:	str	fp, [sp, #52]	; 0x34
   142dc:	movw	r3, #32812	; 0x802c
   142e0:	movt	r3, #1
   142e4:	str	r3, [sp, #60]	; 0x3c
   142e8:	b	14294 <dcngettext@plt+0x2fc8>
   142ec:	cmp	sl, #10
   142f0:	bne	14324 <dcngettext@plt+0x3058>
   142f4:	ldr	r3, [sp, #32]
   142f8:	cmp	r3, #0
   142fc:	movne	fp, #0
   14300:	beq	1434c <dcngettext@plt+0x3080>
   14304:	ldr	r0, [sp, #168]	; 0xa8
   14308:	bl	1117c <strlen@plt>
   1430c:	str	r0, [sp, #52]	; 0x34
   14310:	ldr	r3, [sp, #168]	; 0xa8
   14314:	str	r3, [sp, #60]	; 0x3c
   14318:	mov	r3, #1
   1431c:	str	r3, [sp, #28]
   14320:	b	14294 <dcngettext@plt+0x2fc8>
   14324:	mov	r1, sl
   14328:	ldr	r0, [sp, #80]	; 0x50
   1432c:	bl	14064 <dcngettext@plt+0x2d98>
   14330:	str	r0, [sp, #164]	; 0xa4
   14334:	mov	r1, sl
   14338:	movw	r0, #32832	; 0x8040
   1433c:	movt	r0, #1
   14340:	bl	14064 <dcngettext@plt+0x2d98>
   14344:	str	r0, [sp, #168]	; 0xa8
   14348:	b	142f4 <dcngettext@plt+0x3028>
   1434c:	ldr	r3, [sp, #164]	; 0xa4
   14350:	ldrb	r3, [r3]
   14354:	cmp	r3, #0
   14358:	beq	14384 <dcngettext@plt+0x30b8>
   1435c:	ldr	r2, [sp, #164]	; 0xa4
   14360:	mov	fp, #0
   14364:	ldr	r1, [sp, #64]	; 0x40
   14368:	cmp	r9, fp
   1436c:	strbhi	r3, [r1, fp]
   14370:	add	fp, fp, #1
   14374:	ldrb	r3, [r2, #1]!
   14378:	cmp	r3, #0
   1437c:	bne	14368 <dcngettext@plt+0x309c>
   14380:	b	14304 <dcngettext@plt+0x3038>
   14384:	mov	fp, #0
   14388:	b	14304 <dcngettext@plt+0x3038>
   1438c:	ldr	r3, [sp, #32]
   14390:	cmp	r3, #0
   14394:	bne	14274 <dcngettext@plt+0x2fa8>
   14398:	mov	r3, #1
   1439c:	str	r3, [sp, #28]
   143a0:	cmp	r9, #0
   143a4:	beq	14458 <dcngettext@plt+0x318c>
   143a8:	mov	r3, #39	; 0x27
   143ac:	ldr	r2, [sp, #64]	; 0x40
   143b0:	strb	r3, [r2]
   143b4:	mov	r3, #0
   143b8:	str	r3, [sp, #32]
   143bc:	mov	fp, #1
   143c0:	str	fp, [sp, #52]	; 0x34
   143c4:	movw	r3, #32832	; 0x8040
   143c8:	movt	r3, #1
   143cc:	str	r3, [sp, #60]	; 0x3c
   143d0:	mov	sl, #2
   143d4:	b	14294 <dcngettext@plt+0x2fc8>
   143d8:	ldr	r3, [sp, #32]
   143dc:	cmp	r3, #0
   143e0:	beq	143a0 <dcngettext@plt+0x30d4>
   143e4:	mov	r3, #1
   143e8:	str	r3, [sp, #52]	; 0x34
   143ec:	movw	r3, #32832	; 0x8040
   143f0:	movt	r3, #1
   143f4:	str	r3, [sp, #60]	; 0x3c
   143f8:	mov	fp, #0
   143fc:	b	14294 <dcngettext@plt+0x2fc8>
   14400:	bl	112b4 <abort@plt>
   14404:	mov	fp, #0
   14408:	str	fp, [sp, #32]
   1440c:	mov	r3, #1
   14410:	str	r3, [sp, #28]
   14414:	b	14294 <dcngettext@plt+0x2fc8>
   14418:	ldr	r3, [sp, #32]
   1441c:	str	r3, [sp, #28]
   14420:	mov	r3, #1
   14424:	str	r3, [sp, #52]	; 0x34
   14428:	movw	r3, #32812	; 0x802c
   1442c:	movt	r3, #1
   14430:	str	r3, [sp, #60]	; 0x3c
   14434:	mov	fp, #0
   14438:	b	14294 <dcngettext@plt+0x2fc8>
   1443c:	mov	fp, #1
   14440:	str	fp, [sp, #28]
   14444:	str	fp, [sp, #52]	; 0x34
   14448:	movw	r3, #32812	; 0x802c
   1444c:	movt	r3, #1
   14450:	str	r3, [sp, #60]	; 0x3c
   14454:	b	14294 <dcngettext@plt+0x2fc8>
   14458:	mov	r3, #0
   1445c:	str	r3, [sp, #32]
   14460:	mov	fp, #1
   14464:	str	fp, [sp, #52]	; 0x34
   14468:	movw	r3, #32832	; 0x8040
   1446c:	movt	r3, #1
   14470:	str	r3, [sp, #60]	; 0x3c
   14474:	mov	sl, #2
   14478:	b	14294 <dcngettext@plt+0x2fc8>
   1447c:	mov	r3, r2
   14480:	add	r4, r6, r2
   14484:	ldr	r2, [sp, #24]
   14488:	cmp	r3, #1
   1448c:	movls	r3, #0
   14490:	movhi	r3, #1
   14494:	cmn	r2, #1
   14498:	movne	r3, #0
   1449c:	cmp	r3, #0
   144a0:	beq	144b0 <dcngettext@plt+0x31e4>
   144a4:	ldr	r0, [sp, #48]	; 0x30
   144a8:	bl	1117c <strlen@plt>
   144ac:	str	r0, [sp, #24]
   144b0:	ldr	r3, [sp, #24]
   144b4:	cmp	r4, r3
   144b8:	bhi	156a4 <dcngettext@plt+0x43d8>
   144bc:	ldr	r3, [sp, #48]	; 0x30
   144c0:	add	r4, r3, r6
   144c4:	ldr	r2, [sp, #52]	; 0x34
   144c8:	ldr	r1, [sp, #60]	; 0x3c
   144cc:	mov	r0, r4
   144d0:	bl	1102c <memcmp@plt>
   144d4:	cmp	r0, #0
   144d8:	bne	156a4 <dcngettext@plt+0x43d8>
   144dc:	ldr	r3, [sp, #32]
   144e0:	cmp	r3, #0
   144e4:	bne	146f4 <dcngettext@plt+0x3428>
   144e8:	ldrb	r4, [r4]
   144ec:	cmp	r4, #126	; 0x7e
   144f0:	ldrls	pc, [pc, r4, lsl #2]
   144f4:	b	14fa8 <dcngettext@plt+0x3cdc>
   144f8:	andeq	r4, r1, r8, lsr r7
   144fc:	andeq	r4, r1, r8, lsr #31
   14500:	andeq	r4, r1, r8, lsr #31
   14504:	andeq	r4, r1, r8, lsr #31
   14508:	andeq	r4, r1, r8, lsr #31
   1450c:	andeq	r4, r1, r8, lsr #31
   14510:	andeq	r4, r1, r8, lsr #31
   14514:	andeq	r4, r1, r0, asr lr
   14518:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1451c:	andeq	r4, r1, r8, ror sp
   14520:	andeq	r4, r1, r4, lsr #28
   14524:	andeq	r4, r1, ip, lsl #27
   14528:	andeq	r4, r1, r8, ror #19
   1452c:	strdeq	r4, [r1], -ip
   14530:	andeq	r4, r1, r8, lsr #31
   14534:	andeq	r4, r1, r8, lsr #31
   14538:	andeq	r4, r1, r8, lsr #31
   1453c:	andeq	r4, r1, r8, lsr #31
   14540:	andeq	r4, r1, r8, lsr #31
   14544:	andeq	r4, r1, r8, lsr #31
   14548:	andeq	r4, r1, r8, lsr #31
   1454c:	andeq	r4, r1, r8, lsr #31
   14550:	andeq	r4, r1, r8, lsr #31
   14554:	andeq	r4, r1, r8, lsr #31
   14558:	andeq	r4, r1, r8, lsr #31
   1455c:	andeq	r4, r1, r8, lsr #31
   14560:	andeq	r4, r1, r8, lsr #31
   14564:	andeq	r4, r1, r8, lsr #31
   14568:	andeq	r4, r1, r8, lsr #31
   1456c:	andeq	r4, r1, r8, lsr #31
   14570:	andeq	r4, r1, r8, lsr #31
   14574:	andeq	r4, r1, r8, lsr #31
   14578:	andeq	r4, r1, r4, asr #29
   1457c:	andeq	r4, r1, r8, ror #29
   14580:	andeq	r4, r1, r8, ror #29
   14584:	andeq	r4, r1, r0, lsl #29
   14588:	andeq	r4, r1, r8, ror #29
   1458c:	andeq	r5, r1, r8, lsl #8
   14590:	andeq	r4, r1, r8, ror #29
   14594:	andeq	r4, r1, r8, lsl #30
   14598:	andeq	r4, r1, r8, ror #29
   1459c:	andeq	r4, r1, r8, ror #29
   145a0:	andeq	r4, r1, r8, ror #29
   145a4:	andeq	r5, r1, r8, lsl #8
   145a8:	andeq	r5, r1, r8, lsl #8
   145ac:	andeq	r5, r1, r8, lsl #8
   145b0:	andeq	r5, r1, r8, lsl #8
   145b4:	andeq	r5, r1, r8, lsl #8
   145b8:	andeq	r5, r1, r8, lsl #8
   145bc:	andeq	r5, r1, r8, lsl #8
   145c0:	andeq	r5, r1, r8, lsl #8
   145c4:	andeq	r5, r1, r8, lsl #8
   145c8:	andeq	r5, r1, r8, lsl #8
   145cc:	andeq	r5, r1, r8, lsl #8
   145d0:	andeq	r5, r1, r8, lsl #8
   145d4:	andeq	r5, r1, r8, lsl #8
   145d8:	andeq	r5, r1, r8, lsl #8
   145dc:	andeq	r5, r1, r8, lsl #8
   145e0:	andeq	r5, r1, r8, lsl #8
   145e4:	andeq	r4, r1, r8, ror #29
   145e8:	andeq	r4, r1, r8, ror #29
   145ec:	andeq	r4, r1, r8, ror #29
   145f0:	andeq	r4, r1, r8, ror #29
   145f4:	andeq	r4, r1, r8, ror #16
   145f8:	andeq	r4, r1, r8, lsr #31
   145fc:	andeq	r5, r1, r8, lsl #8
   14600:	andeq	r5, r1, r8, lsl #8
   14604:	andeq	r5, r1, r8, lsl #8
   14608:	andeq	r5, r1, r8, lsl #8
   1460c:	andeq	r5, r1, r8, lsl #8
   14610:	andeq	r5, r1, r8, lsl #8
   14614:	andeq	r5, r1, r8, lsl #8
   14618:	andeq	r5, r1, r8, lsl #8
   1461c:	andeq	r5, r1, r8, lsl #8
   14620:	andeq	r5, r1, r8, lsl #8
   14624:	andeq	r5, r1, r8, lsl #8
   14628:	andeq	r5, r1, r8, lsl #8
   1462c:	andeq	r5, r1, r8, lsl #8
   14630:	andeq	r5, r1, r8, lsl #8
   14634:	andeq	r5, r1, r8, lsl #8
   14638:	andeq	r5, r1, r8, lsl #8
   1463c:	andeq	r5, r1, r8, lsl #8
   14640:	andeq	r5, r1, r8, lsl #8
   14644:	andeq	r5, r1, r8, lsl #8
   14648:	andeq	r5, r1, r8, lsl #8
   1464c:	andeq	r5, r1, r8, lsl #8
   14650:	andeq	r5, r1, r8, lsl #8
   14654:	andeq	r5, r1, r8, lsl #8
   14658:	andeq	r5, r1, r8, lsl #8
   1465c:	andeq	r5, r1, r8, lsl #8
   14660:	andeq	r5, r1, r8, lsl #8
   14664:	andeq	r4, r1, r8, ror #29
   14668:	andeq	r4, r1, r0, lsr #27
   1466c:	andeq	r5, r1, r8, lsl #8
   14670:	andeq	r4, r1, r8, ror #29
   14674:	andeq	r5, r1, r8, lsl #8
   14678:	andeq	r4, r1, r8, ror #29
   1467c:	andeq	r5, r1, r8, lsl #8
   14680:	andeq	r5, r1, r8, lsl #8
   14684:	andeq	r5, r1, r8, lsl #8
   14688:	andeq	r5, r1, r8, lsl #8
   1468c:	andeq	r5, r1, r8, lsl #8
   14690:	andeq	r5, r1, r8, lsl #8
   14694:	andeq	r5, r1, r8, lsl #8
   14698:	andeq	r5, r1, r8, lsl #8
   1469c:	andeq	r5, r1, r8, lsl #8
   146a0:	andeq	r5, r1, r8, lsl #8
   146a4:	andeq	r5, r1, r8, lsl #8
   146a8:	andeq	r5, r1, r8, lsl #8
   146ac:	andeq	r5, r1, r8, lsl #8
   146b0:	andeq	r5, r1, r8, lsl #8
   146b4:	andeq	r5, r1, r8, lsl #8
   146b8:	andeq	r5, r1, r8, lsl #8
   146bc:	andeq	r5, r1, r8, lsl #8
   146c0:	andeq	r5, r1, r8, lsl #8
   146c4:	andeq	r5, r1, r8, lsl #8
   146c8:	andeq	r5, r1, r8, lsl #8
   146cc:	andeq	r5, r1, r8, lsl #8
   146d0:	andeq	r5, r1, r8, lsl #8
   146d4:	andeq	r5, r1, r8, lsl #8
   146d8:	andeq	r5, r1, r8, lsl #8
   146dc:	andeq	r5, r1, r8, lsl #8
   146e0:	andeq	r5, r1, r8, lsl #8
   146e4:	andeq	r4, r1, r0, ror #28
   146e8:	andeq	r4, r1, r8, ror #29
   146ec:	andeq	r4, r1, r0, ror #28
   146f0:	andeq	r4, r1, r0, lsl #29
   146f4:	mov	r8, r9
   146f8:	mov	r7, sl
   146fc:	b	155fc <dcngettext@plt+0x4330>
   14700:	ldr	r3, [sp, #28]
   14704:	cmp	r3, #0
   14708:	bne	14728 <dcngettext@plt+0x345c>
   1470c:	ldr	r3, [sp, #156]	; 0x9c
   14710:	tst	r3, #1
   14714:	bne	14b10 <dcngettext@plt+0x3844>
   14718:	ldr	r3, [sp, #28]
   1471c:	str	r3, [sp, #44]	; 0x2c
   14720:	mov	r5, r3
   14724:	b	14a30 <dcngettext@plt+0x3764>
   14728:	ldr	r3, [sp, #32]
   1472c:	cmp	r3, #0
   14730:	bne	155ac <dcngettext@plt+0x42e0>
   14734:	str	r3, [sp, #44]	; 0x2c
   14738:	ldr	r3, [sp, #36]	; 0x24
   1473c:	eor	r3, r3, #1
   14740:	cmp	sl, #2
   14744:	movne	r3, #0
   14748:	andeq	r3, r3, #1
   1474c:	cmp	r3, #0
   14750:	beq	147a8 <dcngettext@plt+0x34dc>
   14754:	cmp	r9, fp
   14758:	movhi	r2, #39	; 0x27
   1475c:	strbhi	r2, [r8, fp]
   14760:	add	r2, fp, #1
   14764:	cmp	r9, r2
   14768:	movhi	r1, #36	; 0x24
   1476c:	strbhi	r1, [r8, r2]
   14770:	add	r2, fp, #2
   14774:	cmp	r9, r2
   14778:	movhi	r1, #39	; 0x27
   1477c:	strbhi	r1, [r8, r2]
   14780:	add	r2, fp, #3
   14784:	cmp	r9, r2
   14788:	bls	15668 <dcngettext@plt+0x439c>
   1478c:	mov	r1, #92	; 0x5c
   14790:	strb	r1, [r8, r2]
   14794:	add	fp, fp, #4
   14798:	str	r3, [sp, #36]	; 0x24
   1479c:	mov	r5, #0
   147a0:	mov	r4, #48	; 0x30
   147a4:	b	14a7c <dcngettext@plt+0x37b0>
   147a8:	cmp	r9, fp
   147ac:	bhi	147d4 <dcngettext@plt+0x3508>
   147b0:	add	r1, fp, #1
   147b4:	ldr	r2, [sp, #56]	; 0x38
   147b8:	cmp	r2, #0
   147bc:	bne	147fc <dcngettext@plt+0x3530>
   147c0:	mov	r3, r5
   147c4:	ldr	r5, [sp, #56]	; 0x38
   147c8:	mov	fp, r1
   147cc:	mov	r4, #48	; 0x30
   147d0:	b	14a30 <dcngettext@plt+0x3764>
   147d4:	mov	r2, #92	; 0x5c
   147d8:	strb	r2, [r8, fp]
   147dc:	add	r1, fp, #1
   147e0:	ldr	r2, [sp, #56]	; 0x38
   147e4:	cmp	r2, #0
   147e8:	moveq	r3, r5
   147ec:	moveq	r5, r2
   147f0:	moveq	fp, r1
   147f4:	moveq	r4, #48	; 0x30
   147f8:	beq	14a7c <dcngettext@plt+0x37b0>
   147fc:	add	r2, r6, #1
   14800:	ldr	r0, [sp, #24]
   14804:	cmp	r2, r0
   14808:	bcs	14824 <dcngettext@plt+0x3558>
   1480c:	ldr	r0, [sp, #48]	; 0x30
   14810:	ldrb	r2, [r0, r2]
   14814:	sub	r2, r2, #48	; 0x30
   14818:	uxtb	r2, r2
   1481c:	cmp	r2, #9
   14820:	bls	1483c <dcngettext@plt+0x3570>
   14824:	mov	r2, r3
   14828:	mov	r3, r5
   1482c:	mov	r5, r2
   14830:	mov	fp, r1
   14834:	mov	r4, #48	; 0x30
   14838:	b	14a54 <dcngettext@plt+0x3788>
   1483c:	cmp	r9, r1
   14840:	movhi	r2, #48	; 0x30
   14844:	strbhi	r2, [r8, r1]
   14848:	add	r2, fp, #2
   1484c:	cmp	r9, r2
   14850:	movhi	r1, #48	; 0x30
   14854:	strbhi	r1, [r8, r2]
   14858:	add	r1, fp, #3
   1485c:	b	14824 <dcngettext@plt+0x3558>
   14860:	mov	r3, #0
   14864:	str	r3, [sp, #44]	; 0x2c
   14868:	cmp	sl, #2
   1486c:	beq	14888 <dcngettext@plt+0x35bc>
   14870:	cmp	sl, #5
   14874:	beq	148a0 <dcngettext@plt+0x35d4>
   14878:	mov	r5, #0
   1487c:	mov	r3, r5
   14880:	mov	r4, #63	; 0x3f
   14884:	b	14a30 <dcngettext@plt+0x3764>
   14888:	ldr	r3, [sp, #32]
   1488c:	cmp	r3, #0
   14890:	bne	155b8 <dcngettext@plt+0x42ec>
   14894:	mov	r5, r3
   14898:	mov	r4, #63	; 0x3f
   1489c:	b	14f98 <dcngettext@plt+0x3ccc>
   148a0:	ldr	r3, [sp, #156]	; 0x9c
   148a4:	tst	r3, #4
   148a8:	beq	153d0 <dcngettext@plt+0x4104>
   148ac:	add	r2, r6, #2
   148b0:	ldr	r3, [sp, #24]
   148b4:	cmp	r2, r3
   148b8:	bcs	153e0 <dcngettext@plt+0x4114>
   148bc:	ldr	r3, [sp, #48]	; 0x30
   148c0:	add	r3, r3, r6
   148c4:	ldrb	r4, [r3, #1]
   148c8:	cmp	r4, #63	; 0x3f
   148cc:	movne	r5, #0
   148d0:	movne	r3, r5
   148d4:	movne	r4, #63	; 0x3f
   148d8:	bne	14a30 <dcngettext@plt+0x3764>
   148dc:	ldr	r3, [sp, #48]	; 0x30
   148e0:	ldrb	r1, [r3, r2]
   148e4:	sub	r3, r1, #33	; 0x21
   148e8:	cmp	r3, #29
   148ec:	ldrls	pc, [pc, r3, lsl #2]
   148f0:	b	153f0 <dcngettext@plt+0x4124>
   148f4:	andeq	r4, r1, ip, ror #18
   148f8:	strdeq	r5, [r1], -r0
   148fc:	strdeq	r5, [r1], -r0
   14900:	strdeq	r5, [r1], -r0
   14904:	strdeq	r5, [r1], -r0
   14908:	strdeq	r5, [r1], -r0
   1490c:	andeq	r4, r1, ip, ror #18
   14910:	andeq	r4, r1, ip, ror #18
   14914:	andeq	r4, r1, ip, ror #18
   14918:	strdeq	r5, [r1], -r0
   1491c:	strdeq	r5, [r1], -r0
   14920:	strdeq	r5, [r1], -r0
   14924:	andeq	r4, r1, ip, ror #18
   14928:	strdeq	r5, [r1], -r0
   1492c:	andeq	r4, r1, ip, ror #18
   14930:	strdeq	r5, [r1], -r0
   14934:	strdeq	r5, [r1], -r0
   14938:	strdeq	r5, [r1], -r0
   1493c:	strdeq	r5, [r1], -r0
   14940:	strdeq	r5, [r1], -r0
   14944:	strdeq	r5, [r1], -r0
   14948:	strdeq	r5, [r1], -r0
   1494c:	strdeq	r5, [r1], -r0
   14950:	strdeq	r5, [r1], -r0
   14954:	strdeq	r5, [r1], -r0
   14958:	strdeq	r5, [r1], -r0
   1495c:	strdeq	r5, [r1], -r0
   14960:	andeq	r4, r1, ip, ror #18
   14964:	andeq	r4, r1, ip, ror #18
   14968:	andeq	r4, r1, ip, ror #18
   1496c:	ldr	r3, [sp, #32]
   14970:	cmp	r3, #0
   14974:	bne	1565c <dcngettext@plt+0x4390>
   14978:	cmp	r9, fp
   1497c:	movhi	r3, #63	; 0x3f
   14980:	strbhi	r3, [r8, fp]
   14984:	add	r3, fp, #1
   14988:	cmp	r9, r3
   1498c:	movhi	r0, #34	; 0x22
   14990:	strbhi	r0, [r8, r3]
   14994:	add	r3, fp, #2
   14998:	cmp	r9, r3
   1499c:	movhi	r0, #34	; 0x22
   149a0:	strbhi	r0, [r8, r3]
   149a4:	add	r3, fp, #3
   149a8:	cmp	r9, r3
   149ac:	movhi	r0, #63	; 0x3f
   149b0:	strbhi	r0, [r8, r3]
   149b4:	add	fp, fp, #4
   149b8:	ldr	r3, [sp, #32]
   149bc:	mov	r5, r3
   149c0:	mov	r4, r1
   149c4:	mov	r6, r2
   149c8:	b	14a30 <dcngettext@plt+0x3764>
   149cc:	mov	r3, #0
   149d0:	str	r3, [sp, #44]	; 0x2c
   149d4:	mov	r4, #8
   149d8:	mov	r3, #98	; 0x62
   149dc:	b	14a1c <dcngettext@plt+0x3750>
   149e0:	mov	r3, #0
   149e4:	str	r3, [sp, #44]	; 0x2c
   149e8:	mov	r4, #12
   149ec:	mov	r3, #102	; 0x66
   149f0:	b	14a1c <dcngettext@plt+0x3750>
   149f4:	mov	r3, #0
   149f8:	str	r3, [sp, #44]	; 0x2c
   149fc:	mov	r4, #13
   14a00:	mov	r3, #114	; 0x72
   14a04:	ldr	r2, [sp, #32]
   14a08:	cmp	sl, #2
   14a0c:	movne	r2, #0
   14a10:	andeq	r2, r2, #1
   14a14:	cmp	r2, #0
   14a18:	bne	14e3c <dcngettext@plt+0x3b70>
   14a1c:	ldr	r2, [sp, #28]
   14a20:	cmp	r2, #0
   14a24:	bne	15424 <dcngettext@plt+0x4158>
   14a28:	mov	r5, r2
   14a2c:	mov	r3, r2
   14a30:	ldr	r2, [sp, #28]
   14a34:	eor	r2, r2, #1
   14a38:	cmp	sl, #2
   14a3c:	orreq	r2, r2, #1
   14a40:	eor	r2, r2, #1
   14a44:	ldr	r1, [sp, #32]
   14a48:	orr	r2, r1, r2
   14a4c:	tst	r2, #255	; 0xff
   14a50:	beq	14a7c <dcngettext@plt+0x37b0>
   14a54:	ldr	r2, [sp, #160]	; 0xa0
   14a58:	cmp	r2, #0
   14a5c:	beq	14a7c <dcngettext@plt+0x37b0>
   14a60:	ubfx	r1, r4, #5, #8
   14a64:	and	r2, r4, #31
   14a68:	ldr	r0, [sp, #160]	; 0xa0
   14a6c:	ldr	r1, [r0, r1, lsl #2]
   14a70:	lsr	r2, r1, r2
   14a74:	tst	r2, #1
   14a78:	bne	14a88 <dcngettext@plt+0x37bc>
   14a7c:	ldr	r2, [sp, #44]	; 0x2c
   14a80:	cmp	r2, #0
   14a84:	beq	14ddc <dcngettext@plt+0x3b10>
   14a88:	ldr	r3, [sp, #32]
   14a8c:	cmp	r3, #0
   14a90:	bne	155dc <dcngettext@plt+0x4310>
   14a94:	ldr	r3, [sp, #36]	; 0x24
   14a98:	eor	r3, r3, #1
   14a9c:	cmp	sl, #2
   14aa0:	movne	r3, #0
   14aa4:	andeq	r3, r3, #1
   14aa8:	cmp	r3, #0
   14aac:	beq	14ae4 <dcngettext@plt+0x3818>
   14ab0:	cmp	r9, fp
   14ab4:	movhi	r2, #39	; 0x27
   14ab8:	strbhi	r2, [r8, fp]
   14abc:	add	r2, fp, #1
   14ac0:	cmp	r9, r2
   14ac4:	movhi	r1, #36	; 0x24
   14ac8:	strbhi	r1, [r8, r2]
   14acc:	add	r2, fp, #2
   14ad0:	cmp	r9, r2
   14ad4:	movhi	r1, #39	; 0x27
   14ad8:	strbhi	r1, [r8, r2]
   14adc:	add	fp, fp, #3
   14ae0:	str	r3, [sp, #36]	; 0x24
   14ae4:	cmp	r9, fp
   14ae8:	movhi	r3, #92	; 0x5c
   14aec:	strbhi	r3, [r8, fp]
   14af0:	add	fp, fp, #1
   14af4:	cmp	fp, r9
   14af8:	strbcc	r4, [r8, fp]
   14afc:	add	fp, fp, #1
   14b00:	cmp	r5, #0
   14b04:	ldr	r3, [sp, #40]	; 0x28
   14b08:	moveq	r3, r5
   14b0c:	str	r3, [sp, #40]	; 0x28
   14b10:	add	r6, r6, #1
   14b14:	ldr	r3, [sp, #24]
   14b18:	cmn	r3, #1
   14b1c:	beq	1544c <dcngettext@plt+0x4180>
   14b20:	ldr	r3, [sp, #24]
   14b24:	subs	r5, r3, r6
   14b28:	movne	r5, #1
   14b2c:	cmp	r5, #0
   14b30:	beq	15460 <dcngettext@plt+0x4194>
   14b34:	ldr	r3, [sp, #28]
   14b38:	cmp	sl, #2
   14b3c:	moveq	r3, #0
   14b40:	andne	r3, r3, #1
   14b44:	str	r3, [sp, #56]	; 0x38
   14b48:	ldr	r2, [sp, #52]	; 0x34
   14b4c:	adds	r7, r2, #0
   14b50:	movne	r7, #1
   14b54:	ands	r3, r3, r7
   14b58:	str	r3, [sp, #44]	; 0x2c
   14b5c:	bne	1447c <dcngettext@plt+0x31b0>
   14b60:	ldr	r3, [sp, #48]	; 0x30
   14b64:	ldrb	r4, [r3, r6]
   14b68:	cmp	r4, #126	; 0x7e
   14b6c:	ldrls	pc, [pc, r4, lsl #2]
   14b70:	b	14fa8 <dcngettext@plt+0x3cdc>
   14b74:	andeq	r4, r1, r0, lsl #14
   14b78:	andeq	r4, r1, r8, lsr #31
   14b7c:	andeq	r4, r1, r8, lsr #31
   14b80:	andeq	r4, r1, r8, lsr #31
   14b84:	andeq	r4, r1, r8, lsr #31
   14b88:	andeq	r4, r1, r8, lsr #31
   14b8c:	andeq	r4, r1, r8, lsr #31
   14b90:	andeq	r4, r1, r8, asr #28
   14b94:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14b98:	andeq	r4, r1, r8, ror sp
   14b9c:	andeq	r4, r1, ip, lsl lr
   14ba0:	andeq	r4, r1, ip, lsl #27
   14ba4:	andeq	r4, r1, r8, ror #19
   14ba8:	strdeq	r4, [r1], -ip
   14bac:	andeq	r4, r1, r8, lsr #31
   14bb0:	andeq	r4, r1, r8, lsr #31
   14bb4:	andeq	r4, r1, r8, lsr #31
   14bb8:	andeq	r4, r1, r8, lsr #31
   14bbc:	andeq	r4, r1, r8, lsr #31
   14bc0:	andeq	r4, r1, r8, lsr #31
   14bc4:	andeq	r4, r1, r8, lsr #31
   14bc8:	andeq	r4, r1, r8, lsr #31
   14bcc:	andeq	r4, r1, r8, lsr #31
   14bd0:	andeq	r4, r1, r8, lsr #31
   14bd4:	andeq	r4, r1, r8, lsr #31
   14bd8:	andeq	r4, r1, r8, lsr #31
   14bdc:	andeq	r4, r1, r8, lsr #31
   14be0:	andeq	r4, r1, r8, lsr #31
   14be4:	andeq	r4, r1, r8, lsr #31
   14be8:	andeq	r4, r1, r8, lsr #31
   14bec:	andeq	r4, r1, r8, lsr #31
   14bf0:	andeq	r4, r1, r8, lsr #31
   14bf4:	andeq	r4, r1, r4, asr #29
   14bf8:	andeq	r4, r1, r0, asr #29
   14bfc:	andeq	r4, r1, r0, asr #29
   14c00:	andeq	r4, r1, r0, lsl #29
   14c04:	andeq	r4, r1, r0, asr #29
   14c08:	andeq	r5, r1, r8, asr #7
   14c0c:	andeq	r4, r1, r0, asr #29
   14c10:	andeq	r4, r1, r8, lsl #30
   14c14:	andeq	r4, r1, r0, asr #29
   14c18:	andeq	r4, r1, r0, asr #29
   14c1c:	andeq	r4, r1, r0, asr #29
   14c20:	andeq	r5, r1, r8, asr #7
   14c24:	andeq	r5, r1, r8, asr #7
   14c28:	andeq	r5, r1, r8, asr #7
   14c2c:	andeq	r5, r1, r8, asr #7
   14c30:	andeq	r5, r1, r8, asr #7
   14c34:	andeq	r5, r1, r8, asr #7
   14c38:	andeq	r5, r1, r8, asr #7
   14c3c:	andeq	r5, r1, r8, asr #7
   14c40:	andeq	r5, r1, r8, asr #7
   14c44:	andeq	r5, r1, r8, asr #7
   14c48:	andeq	r5, r1, r8, asr #7
   14c4c:	andeq	r5, r1, r8, asr #7
   14c50:	andeq	r5, r1, r8, asr #7
   14c54:	andeq	r5, r1, r8, asr #7
   14c58:	andeq	r5, r1, r8, asr #7
   14c5c:	andeq	r5, r1, r8, asr #7
   14c60:	andeq	r4, r1, r0, asr #29
   14c64:	andeq	r4, r1, r0, asr #29
   14c68:	andeq	r4, r1, r0, asr #29
   14c6c:	andeq	r4, r1, r0, asr #29
   14c70:	andeq	r4, r1, r8, ror #16
   14c74:	andeq	r4, r1, r8, lsr #31
   14c78:	andeq	r5, r1, r8, asr #7
   14c7c:	andeq	r5, r1, r8, asr #7
   14c80:	andeq	r5, r1, r8, asr #7
   14c84:	andeq	r5, r1, r8, asr #7
   14c88:	andeq	r5, r1, r8, asr #7
   14c8c:	andeq	r5, r1, r8, asr #7
   14c90:	andeq	r5, r1, r8, asr #7
   14c94:	andeq	r5, r1, r8, asr #7
   14c98:	andeq	r5, r1, r8, asr #7
   14c9c:	andeq	r5, r1, r8, asr #7
   14ca0:	andeq	r5, r1, r8, asr #7
   14ca4:	andeq	r5, r1, r8, asr #7
   14ca8:	andeq	r5, r1, r8, asr #7
   14cac:	andeq	r5, r1, r8, asr #7
   14cb0:	andeq	r5, r1, r8, asr #7
   14cb4:	andeq	r5, r1, r8, asr #7
   14cb8:	andeq	r5, r1, r8, asr #7
   14cbc:	andeq	r5, r1, r8, asr #7
   14cc0:	andeq	r5, r1, r8, asr #7
   14cc4:	andeq	r5, r1, r8, asr #7
   14cc8:	andeq	r5, r1, r8, asr #7
   14ccc:	andeq	r5, r1, r8, asr #7
   14cd0:	andeq	r5, r1, r8, asr #7
   14cd4:	andeq	r5, r1, r8, asr #7
   14cd8:	andeq	r5, r1, r8, asr #7
   14cdc:	andeq	r5, r1, r8, asr #7
   14ce0:	andeq	r4, r1, r0, asr #29
   14ce4:	andeq	r4, r1, r0, lsr #27
   14ce8:	andeq	r5, r1, r8, asr #7
   14cec:	andeq	r4, r1, r0, asr #29
   14cf0:	andeq	r5, r1, r8, asr #7
   14cf4:	andeq	r4, r1, r0, asr #29
   14cf8:	andeq	r5, r1, r8, asr #7
   14cfc:	andeq	r5, r1, r8, asr #7
   14d00:	andeq	r5, r1, r8, asr #7
   14d04:	andeq	r5, r1, r8, asr #7
   14d08:	andeq	r5, r1, r8, asr #7
   14d0c:	andeq	r5, r1, r8, asr #7
   14d10:	andeq	r5, r1, r8, asr #7
   14d14:	andeq	r5, r1, r8, asr #7
   14d18:	andeq	r5, r1, r8, asr #7
   14d1c:	andeq	r5, r1, r8, asr #7
   14d20:	andeq	r5, r1, r8, asr #7
   14d24:	andeq	r5, r1, r8, asr #7
   14d28:	andeq	r5, r1, r8, asr #7
   14d2c:	andeq	r5, r1, r8, asr #7
   14d30:	andeq	r5, r1, r8, asr #7
   14d34:	andeq	r5, r1, r8, asr #7
   14d38:	andeq	r5, r1, r8, asr #7
   14d3c:	andeq	r5, r1, r8, asr #7
   14d40:	andeq	r5, r1, r8, asr #7
   14d44:	andeq	r5, r1, r8, asr #7
   14d48:	andeq	r5, r1, r8, asr #7
   14d4c:	andeq	r5, r1, r8, asr #7
   14d50:	andeq	r5, r1, r8, asr #7
   14d54:	andeq	r5, r1, r8, asr #7
   14d58:	andeq	r5, r1, r8, asr #7
   14d5c:	andeq	r5, r1, r8, asr #7
   14d60:	andeq	r4, r1, r0, ror #28
   14d64:	andeq	r4, r1, r0, asr #29
   14d68:	andeq	r4, r1, r0, ror #28
   14d6c:	andeq	r4, r1, r0, lsl #29
   14d70:	mov	r3, #0
   14d74:	str	r3, [sp, #44]	; 0x2c
   14d78:	mov	r4, #9
   14d7c:	mov	r3, #116	; 0x74
   14d80:	b	14a04 <dcngettext@plt+0x3738>
   14d84:	mov	r3, #0
   14d88:	str	r3, [sp, #44]	; 0x2c
   14d8c:	mov	r4, #11
   14d90:	mov	r3, #118	; 0x76
   14d94:	b	14a1c <dcngettext@plt+0x3750>
   14d98:	mov	r3, #0
   14d9c:	str	r3, [sp, #44]	; 0x2c
   14da0:	cmp	sl, #2
   14da4:	beq	14dc8 <dcngettext@plt+0x3afc>
   14da8:	ldr	r3, [sp, #28]
   14dac:	ldr	r2, [sp, #32]
   14db0:	and	r3, r3, r2
   14db4:	tst	r7, r3
   14db8:	bne	1543c <dcngettext@plt+0x4170>
   14dbc:	mov	r4, #92	; 0x5c
   14dc0:	mov	r3, r4
   14dc4:	b	14a1c <dcngettext@plt+0x3750>
   14dc8:	ldr	r3, [sp, #32]
   14dcc:	cmp	r3, #0
   14dd0:	bne	155c4 <dcngettext@plt+0x42f8>
   14dd4:	mov	r5, r3
   14dd8:	mov	r4, #92	; 0x5c
   14ddc:	eor	r3, r3, #1
   14de0:	ldr	r2, [sp, #36]	; 0x24
   14de4:	and	r3, r3, r2
   14de8:	tst	r3, #255	; 0xff
   14dec:	beq	14af4 <dcngettext@plt+0x3828>
   14df0:	cmp	r9, fp
   14df4:	movhi	r3, #39	; 0x27
   14df8:	strbhi	r3, [r8, fp]
   14dfc:	add	r3, fp, #1
   14e00:	cmp	r9, r3
   14e04:	movhi	r2, #39	; 0x27
   14e08:	strbhi	r2, [r8, r3]
   14e0c:	add	fp, fp, #2
   14e10:	mov	r3, #0
   14e14:	str	r3, [sp, #36]	; 0x24
   14e18:	b	14af4 <dcngettext@plt+0x3828>
   14e1c:	mov	r3, #110	; 0x6e
   14e20:	b	14a04 <dcngettext@plt+0x3738>
   14e24:	mov	r3, #110	; 0x6e
   14e28:	b	14a04 <dcngettext@plt+0x3738>
   14e2c:	mov	r3, #0
   14e30:	str	r3, [sp, #44]	; 0x2c
   14e34:	mov	r3, #110	; 0x6e
   14e38:	b	14a04 <dcngettext@plt+0x3738>
   14e3c:	mov	r8, r9
   14e40:	mov	r7, #2
   14e44:	b	155e4 <dcngettext@plt+0x4318>
   14e48:	mov	r3, #97	; 0x61
   14e4c:	b	14a1c <dcngettext@plt+0x3750>
   14e50:	mov	r3, #97	; 0x61
   14e54:	b	14a1c <dcngettext@plt+0x3750>
   14e58:	mov	r3, #0
   14e5c:	str	r3, [sp, #44]	; 0x2c
   14e60:	ldr	r3, [sp, #24]
   14e64:	cmn	r3, #1
   14e68:	beq	14e94 <dcngettext@plt+0x3bc8>
   14e6c:	ldr	r3, [sp, #24]
   14e70:	subs	r3, r3, #1
   14e74:	movne	r3, #1
   14e78:	cmp	r3, #0
   14e7c:	bne	153fc <dcngettext@plt+0x4130>
   14e80:	cmp	r6, #0
   14e84:	beq	14ec4 <dcngettext@plt+0x3bf8>
   14e88:	mov	r5, #0
   14e8c:	mov	r3, r5
   14e90:	b	14a30 <dcngettext@plt+0x3764>
   14e94:	ldr	r3, [sp, #48]	; 0x30
   14e98:	ldrb	r3, [r3, #1]
   14e9c:	adds	r3, r3, #0
   14ea0:	movne	r3, #1
   14ea4:	b	14e78 <dcngettext@plt+0x3bac>
   14ea8:	mov	r3, #0
   14eac:	str	r3, [sp, #44]	; 0x2c
   14eb0:	b	14e80 <dcngettext@plt+0x3bb4>
   14eb4:	mov	r3, #0
   14eb8:	str	r3, [sp, #44]	; 0x2c
   14ebc:	b	14ec4 <dcngettext@plt+0x3bf8>
   14ec0:	ldr	r5, [sp, #44]	; 0x2c
   14ec4:	ldr	r3, [sp, #32]
   14ec8:	cmp	sl, #2
   14ecc:	movne	r3, #0
   14ed0:	andeq	r3, r3, #1
   14ed4:	cmp	r3, #0
   14ed8:	beq	14a30 <dcngettext@plt+0x3764>
   14edc:	mov	r8, r9
   14ee0:	mov	r7, #2
   14ee4:	b	155e4 <dcngettext@plt+0x4318>
   14ee8:	ldr	r5, [sp, #32]
   14eec:	b	14ec4 <dcngettext@plt+0x3bf8>
   14ef0:	mov	r3, #0
   14ef4:	str	r3, [sp, #44]	; 0x2c
   14ef8:	mov	r5, r3
   14efc:	b	14ec4 <dcngettext@plt+0x3bf8>
   14f00:	mov	r3, #0
   14f04:	str	r3, [sp, #44]	; 0x2c
   14f08:	cmp	sl, #2
   14f0c:	strne	r5, [sp, #68]	; 0x44
   14f10:	movne	r3, #0
   14f14:	movne	r4, #39	; 0x27
   14f18:	bne	14a30 <dcngettext@plt+0x3764>
   14f1c:	ldr	r3, [sp, #32]
   14f20:	cmp	r3, #0
   14f24:	bne	155d0 <dcngettext@plt+0x4304>
   14f28:	ldr	r3, [sp, #72]	; 0x48
   14f2c:	clz	r3, r3
   14f30:	lsr	r3, r3, #5
   14f34:	cmp	r9, #0
   14f38:	moveq	r3, #0
   14f3c:	cmp	r3, #0
   14f40:	movne	r3, #0
   14f44:	bne	14f6c <dcngettext@plt+0x3ca0>
   14f48:	cmp	r9, fp
   14f4c:	movhi	r3, #39	; 0x27
   14f50:	strbhi	r3, [r8, fp]
   14f54:	add	r3, fp, #1
   14f58:	cmp	r9, r3
   14f5c:	movhi	r2, #92	; 0x5c
   14f60:	strbhi	r2, [r8, r3]
   14f64:	mov	r3, r9
   14f68:	ldr	r9, [sp, #72]	; 0x48
   14f6c:	add	r2, fp, #2
   14f70:	cmp	r2, r3
   14f74:	movcc	r1, #39	; 0x27
   14f78:	strbcc	r1, [r8, r2]
   14f7c:	add	fp, fp, #3
   14f80:	str	r5, [sp, #68]	; 0x44
   14f84:	ldr	r2, [sp, #32]
   14f88:	str	r2, [sp, #36]	; 0x24
   14f8c:	str	r9, [sp, #72]	; 0x48
   14f90:	mov	r9, r3
   14f94:	mov	r4, #39	; 0x27
   14f98:	mov	r3, #0
   14f9c:	b	14a7c <dcngettext@plt+0x37b0>
   14fa0:	mov	r3, #0
   14fa4:	str	r3, [sp, #44]	; 0x2c
   14fa8:	ldr	r7, [sp, #76]	; 0x4c
   14fac:	cmp	r7, #1
   14fb0:	bne	14fe8 <dcngettext@plt+0x3d1c>
   14fb4:	bl	11164 <__ctype_b_loc@plt>
   14fb8:	ldr	r2, [r0]
   14fbc:	lsl	r3, r4, #1
   14fc0:	ldrh	r5, [r2, r3]
   14fc4:	ubfx	r5, r5, #14, #1
   14fc8:	mov	ip, r7
   14fcc:	eor	r3, r5, #1
   14fd0:	ldr	r2, [sp, #28]
   14fd4:	and	r3, r3, r2
   14fd8:	ands	r3, r3, #255	; 0xff
   14fdc:	beq	14a30 <dcngettext@plt+0x3764>
   14fe0:	mov	r5, #0
   14fe4:	b	15244 <dcngettext@plt+0x3f78>
   14fe8:	mov	r2, #0
   14fec:	mov	r3, #0
   14ff0:	strd	r2, [sp, #104]	; 0x68
   14ff4:	ldr	r3, [sp, #24]
   14ff8:	cmn	r3, #1
   14ffc:	beq	15020 <dcngettext@plt+0x3d54>
   15000:	mov	r3, #0
   15004:	str	r4, [sp, #88]	; 0x58
   15008:	str	fp, [sp, #92]	; 0x5c
   1500c:	str	r8, [sp, #56]	; 0x38
   15010:	mov	r8, r3
   15014:	str	r9, [sp, #84]	; 0x54
   15018:	ldr	r9, [sp, #48]	; 0x30
   1501c:	b	1516c <dcngettext@plt+0x3ea0>
   15020:	ldr	r0, [sp, #48]	; 0x30
   15024:	bl	1117c <strlen@plt>
   15028:	str	r0, [sp, #24]
   1502c:	b	15000 <dcngettext@plt+0x3d34>
   15030:	mov	r1, fp
   15034:	ldr	r4, [sp, #88]	; 0x58
   15038:	mov	r2, r8
   1503c:	mov	ip, r8
   15040:	ldr	fp, [sp, #92]	; 0x5c
   15044:	ldr	r8, [sp, #56]	; 0x38
   15048:	ldr	r9, [sp, #84]	; 0x54
   1504c:	ldr	r0, [sp, #24]
   15050:	cmp	r7, r0
   15054:	bcs	1520c <dcngettext@plt+0x3f40>
   15058:	ldrb	r3, [r1]
   1505c:	cmp	r3, #0
   15060:	beq	15214 <dcngettext@plt+0x3f48>
   15064:	mov	r3, r1
   15068:	add	r2, r2, #1
   1506c:	add	r1, r6, r2
   15070:	cmp	r0, r1
   15074:	bls	1521c <dcngettext@plt+0x3f50>
   15078:	ldrb	r1, [r3, #1]!
   1507c:	cmp	r1, #0
   15080:	bne	15068 <dcngettext@plt+0x3d9c>
   15084:	mov	ip, r2
   15088:	mov	r5, #0
   1508c:	b	1523c <dcngettext@plt+0x3f70>
   15090:	ldr	r3, [sp, #56]	; 0x38
   15094:	str	r3, [sp, #64]	; 0x40
   15098:	ldr	r8, [sp, #84]	; 0x54
   1509c:	mov	r7, #2
   150a0:	b	155e4 <dcngettext@plt+0x4318>
   150a4:	cmp	r2, r7
   150a8:	beq	15148 <dcngettext@plt+0x3e7c>
   150ac:	ldrb	r3, [r2], #1
   150b0:	sub	r3, r3, #91	; 0x5b
   150b4:	cmp	r3, #33	; 0x21
   150b8:	ldrls	pc, [pc, r3, lsl #2]
   150bc:	b	150a4 <dcngettext@plt+0x3dd8>
   150c0:	muleq	r1, r0, r0
   150c4:	muleq	r1, r0, r0
   150c8:	andeq	r5, r1, r4, lsr #1
   150cc:	muleq	r1, r0, r0
   150d0:	andeq	r5, r1, r4, lsr #1
   150d4:	muleq	r1, r0, r0
   150d8:	andeq	r5, r1, r4, lsr #1
   150dc:	andeq	r5, r1, r4, lsr #1
   150e0:	andeq	r5, r1, r4, lsr #1
   150e4:	andeq	r5, r1, r4, lsr #1
   150e8:	andeq	r5, r1, r4, lsr #1
   150ec:	andeq	r5, r1, r4, lsr #1
   150f0:	andeq	r5, r1, r4, lsr #1
   150f4:	andeq	r5, r1, r4, lsr #1
   150f8:	andeq	r5, r1, r4, lsr #1
   150fc:	andeq	r5, r1, r4, lsr #1
   15100:	andeq	r5, r1, r4, lsr #1
   15104:	andeq	r5, r1, r4, lsr #1
   15108:	andeq	r5, r1, r4, lsr #1
   1510c:	andeq	r5, r1, r4, lsr #1
   15110:	andeq	r5, r1, r4, lsr #1
   15114:	andeq	r5, r1, r4, lsr #1
   15118:	andeq	r5, r1, r4, lsr #1
   1511c:	andeq	r5, r1, r4, lsr #1
   15120:	andeq	r5, r1, r4, lsr #1
   15124:	andeq	r5, r1, r4, lsr #1
   15128:	andeq	r5, r1, r4, lsr #1
   1512c:	andeq	r5, r1, r4, lsr #1
   15130:	andeq	r5, r1, r4, lsr #1
   15134:	andeq	r5, r1, r4, lsr #1
   15138:	andeq	r5, r1, r4, lsr #1
   1513c:	andeq	r5, r1, r4, lsr #1
   15140:	andeq	r5, r1, r4, lsr #1
   15144:	muleq	r1, r0, r0
   15148:	ldr	r0, [sp, #100]	; 0x64
   1514c:	bl	11080 <iswprint@plt>
   15150:	cmp	r0, #0
   15154:	moveq	r5, #0
   15158:	add	r8, r8, r4
   1515c:	add	r0, sp, #104	; 0x68
   15160:	bl	11014 <mbsinit@plt>
   15164:	cmp	r0, #0
   15168:	bne	151d8 <dcngettext@plt+0x3f0c>
   1516c:	add	r7, r6, r8
   15170:	add	fp, r9, r7
   15174:	add	r3, sp, #104	; 0x68
   15178:	ldr	r2, [sp, #24]
   1517c:	sub	r2, r2, r7
   15180:	mov	r1, fp
   15184:	add	r0, sp, #100	; 0x64
   15188:	bl	17654 <dcngettext@plt+0x6388>
   1518c:	subs	r4, r0, #0
   15190:	beq	15228 <dcngettext@plt+0x3f5c>
   15194:	cmn	r4, #1
   15198:	beq	151f0 <dcngettext@plt+0x3f24>
   1519c:	cmn	r4, #2
   151a0:	beq	15030 <dcngettext@plt+0x3d64>
   151a4:	ldr	r3, [sp, #32]
   151a8:	cmp	sl, #2
   151ac:	movne	r3, #0
   151b0:	andeq	r3, r3, #1
   151b4:	cmp	r3, #0
   151b8:	beq	15148 <dcngettext@plt+0x3e7c>
   151bc:	cmp	r4, #1
   151c0:	bls	15148 <dcngettext@plt+0x3e7c>
   151c4:	add	r2, r7, #1
   151c8:	add	r2, r9, r2
   151cc:	add	r3, r9, r4
   151d0:	add	r7, r3, r7
   151d4:	b	150ac <dcngettext@plt+0x3de0>
   151d8:	ldr	r4, [sp, #88]	; 0x58
   151dc:	mov	ip, r8
   151e0:	ldr	fp, [sp, #92]	; 0x5c
   151e4:	ldr	r8, [sp, #56]	; 0x38
   151e8:	ldr	r9, [sp, #84]	; 0x54
   151ec:	b	1523c <dcngettext@plt+0x3f70>
   151f0:	ldr	r4, [sp, #88]	; 0x58
   151f4:	mov	ip, r8
   151f8:	ldr	fp, [sp, #92]	; 0x5c
   151fc:	ldr	r8, [sp, #56]	; 0x38
   15200:	ldr	r9, [sp, #84]	; 0x54
   15204:	mov	r5, #0
   15208:	b	1523c <dcngettext@plt+0x3f70>
   1520c:	mov	r5, #0
   15210:	b	1523c <dcngettext@plt+0x3f70>
   15214:	mov	r5, #0
   15218:	b	1523c <dcngettext@plt+0x3f70>
   1521c:	mov	ip, r2
   15220:	mov	r5, #0
   15224:	b	1523c <dcngettext@plt+0x3f70>
   15228:	ldr	r4, [sp, #88]	; 0x58
   1522c:	mov	ip, r8
   15230:	ldr	fp, [sp, #92]	; 0x5c
   15234:	ldr	r8, [sp, #56]	; 0x38
   15238:	ldr	r9, [sp, #84]	; 0x54
   1523c:	cmp	ip, #1
   15240:	bls	14fcc <dcngettext@plt+0x3d00>
   15244:	add	lr, r6, ip
   15248:	ldr	r3, [sp, #48]	; 0x30
   1524c:	add	r1, r3, r6
   15250:	mov	r3, #0
   15254:	eor	r0, r5, #1
   15258:	ldr	r2, [sp, #28]
   1525c:	and	r0, r0, r2
   15260:	uxtb	r0, r0
   15264:	str	r0, [sp, #56]	; 0x38
   15268:	mov	r7, #92	; 0x5c
   1526c:	ldr	ip, [sp, #36]	; 0x24
   15270:	str	r5, [sp, #84]	; 0x54
   15274:	ldr	r2, [sp, #44]	; 0x2c
   15278:	b	152e8 <dcngettext@plt+0x401c>
   1527c:	cmp	r2, #0
   15280:	beq	15290 <dcngettext@plt+0x3fc4>
   15284:	cmp	r9, fp
   15288:	strbhi	r7, [r8, fp]
   1528c:	add	fp, fp, #1
   15290:	add	r5, r6, #1
   15294:	cmp	r5, lr
   15298:	bcs	153a4 <dcngettext@plt+0x40d8>
   1529c:	eor	r2, r3, #1
   152a0:	and	r2, r2, ip
   152a4:	ands	r2, r2, #255	; 0xff
   152a8:	beq	153c0 <dcngettext@plt+0x40f4>
   152ac:	cmp	r9, fp
   152b0:	movhi	r2, #39	; 0x27
   152b4:	strbhi	r2, [r8, fp]
   152b8:	add	r2, fp, #1
   152bc:	cmp	r9, r2
   152c0:	movhi	ip, #39	; 0x27
   152c4:	strbhi	ip, [r8, r2]
   152c8:	add	fp, fp, #2
   152cc:	ldr	ip, [sp, #56]	; 0x38
   152d0:	mov	r2, ip
   152d4:	mov	r6, r5
   152d8:	cmp	r9, fp
   152dc:	strbhi	r4, [r8, fp]
   152e0:	add	fp, fp, #1
   152e4:	ldrb	r4, [r1, #1]!
   152e8:	cmp	r0, #0
   152ec:	beq	1527c <dcngettext@plt+0x3fb0>
   152f0:	ldr	r3, [sp, #32]
   152f4:	cmp	r3, #0
   152f8:	bne	1558c <dcngettext@plt+0x42c0>
   152fc:	eor	r3, ip, #1
   15300:	cmp	sl, #2
   15304:	movne	r3, #0
   15308:	andeq	r3, r3, #1
   1530c:	cmp	r3, #0
   15310:	beq	15348 <dcngettext@plt+0x407c>
   15314:	cmp	r9, fp
   15318:	movhi	ip, #39	; 0x27
   1531c:	strbhi	ip, [r8, fp]
   15320:	add	ip, fp, #1
   15324:	cmp	r9, ip
   15328:	movhi	r5, #36	; 0x24
   1532c:	strbhi	r5, [r8, ip]
   15330:	add	ip, fp, #2
   15334:	cmp	r9, ip
   15338:	movhi	r5, #39	; 0x27
   1533c:	strbhi	r5, [r8, ip]
   15340:	add	fp, fp, #3
   15344:	mov	ip, r3
   15348:	cmp	r9, fp
   1534c:	strbhi	r7, [r8, fp]
   15350:	add	r3, fp, #1
   15354:	cmp	r9, r3
   15358:	bls	15368 <dcngettext@plt+0x409c>
   1535c:	lsr	r5, r4, #6
   15360:	add	r5, r5, #48	; 0x30
   15364:	strb	r5, [r8, r3]
   15368:	add	r3, fp, #2
   1536c:	cmp	r9, r3
   15370:	bls	15380 <dcngettext@plt+0x40b4>
   15374:	ubfx	r5, r4, #3, #3
   15378:	add	r5, r5, #48	; 0x30
   1537c:	strb	r5, [r8, r3]
   15380:	add	fp, fp, #3
   15384:	and	r4, r4, #7
   15388:	add	r4, r4, #48	; 0x30
   1538c:	add	r5, r6, #1
   15390:	cmp	r5, lr
   15394:	bcs	153b0 <dcngettext@plt+0x40e4>
   15398:	ldr	r3, [sp, #56]	; 0x38
   1539c:	mov	r6, r5
   153a0:	b	152d8 <dcngettext@plt+0x400c>
   153a4:	str	ip, [sp, #36]	; 0x24
   153a8:	ldr	r5, [sp, #84]	; 0x54
   153ac:	b	14ddc <dcngettext@plt+0x3b10>
   153b0:	str	ip, [sp, #36]	; 0x24
   153b4:	ldr	r5, [sp, #84]	; 0x54
   153b8:	mov	r3, r0
   153bc:	b	14ddc <dcngettext@plt+0x3b10>
   153c0:	mov	r6, r5
   153c4:	b	152d8 <dcngettext@plt+0x400c>
   153c8:	ldr	r3, [sp, #44]	; 0x2c
   153cc:	b	14a30 <dcngettext@plt+0x3764>
   153d0:	mov	r5, #0
   153d4:	mov	r3, r5
   153d8:	mov	r4, #63	; 0x3f
   153dc:	b	14a30 <dcngettext@plt+0x3764>
   153e0:	mov	r5, #0
   153e4:	mov	r3, r5
   153e8:	mov	r4, #63	; 0x3f
   153ec:	b	14a30 <dcngettext@plt+0x3764>
   153f0:	mov	r5, #0
   153f4:	mov	r3, r5
   153f8:	b	14a30 <dcngettext@plt+0x3764>
   153fc:	mov	r5, #0
   15400:	mov	r3, r5
   15404:	b	14a30 <dcngettext@plt+0x3764>
   15408:	ldr	r5, [sp, #44]	; 0x2c
   1540c:	ldr	r3, [sp, #32]
   15410:	b	14a30 <dcngettext@plt+0x3764>
   15414:	ldr	r5, [sp, #44]	; 0x2c
   15418:	mov	r3, #0
   1541c:	str	r3, [sp, #44]	; 0x2c
   15420:	b	14a30 <dcngettext@plt+0x3764>
   15424:	mov	r4, r3
   15428:	mov	r5, #0
   1542c:	b	14a88 <dcngettext@plt+0x37bc>
   15430:	mov	r5, #0
   15434:	mov	r4, #97	; 0x61
   15438:	b	14a88 <dcngettext@plt+0x37bc>
   1543c:	mov	r5, #0
   15440:	mov	r3, r5
   15444:	mov	r4, #92	; 0x5c
   15448:	b	14ddc <dcngettext@plt+0x3b10>
   1544c:	ldr	r3, [sp, #48]	; 0x30
   15450:	ldrb	r5, [r3, r6]
   15454:	adds	r5, r5, #0
   15458:	movne	r5, #1
   1545c:	b	14b2c <dcngettext@plt+0x3860>
   15460:	cmp	sl, #2
   15464:	movne	r3, #0
   15468:	moveq	r3, #1
   1546c:	ldr	r1, [sp, #32]
   15470:	cmp	fp, #0
   15474:	andeq	r2, r3, r1
   15478:	movne	r2, #0
   1547c:	cmp	r2, #0
   15480:	bne	155a0 <dcngettext@plt+0x42d4>
   15484:	eor	r2, r1, #1
   15488:	uxtb	r2, r2
   1548c:	and	r3, r3, r2
   15490:	ldr	r1, [sp, #68]	; 0x44
   15494:	ands	r3, r1, r3
   15498:	beq	1552c <dcngettext@plt+0x4260>
   1549c:	ldr	r2, [sp, #40]	; 0x28
   154a0:	cmp	r2, #0
   154a4:	bne	154dc <dcngettext@plt+0x4210>
   154a8:	ldr	r2, [sp, #72]	; 0x48
   154ac:	adds	r2, r2, #0
   154b0:	movne	r2, #1
   154b4:	cmp	r9, #0
   154b8:	movne	r2, #0
   154bc:	str	r2, [sp, #68]	; 0x44
   154c0:	mov	sl, #2
   154c4:	ldr	r1, [sp, #40]	; 0x28
   154c8:	str	r1, [sp, #32]
   154cc:	cmp	r2, #0
   154d0:	beq	15520 <dcngettext@plt+0x4254>
   154d4:	ldr	r9, [sp, #72]	; 0x48
   154d8:	b	14234 <dcngettext@plt+0x2f68>
   154dc:	ldr	r3, [sp, #168]	; 0xa8
   154e0:	str	r3, [sp, #16]
   154e4:	ldr	r3, [sp, #164]	; 0xa4
   154e8:	str	r3, [sp, #12]
   154ec:	ldr	r3, [sp, #160]	; 0xa0
   154f0:	str	r3, [sp, #8]
   154f4:	ldr	r3, [sp, #156]	; 0x9c
   154f8:	str	r3, [sp, #4]
   154fc:	mov	r3, #5
   15500:	str	r3, [sp]
   15504:	ldr	r3, [sp, #24]
   15508:	ldr	r2, [sp, #48]	; 0x30
   1550c:	ldr	r1, [sp, #72]	; 0x48
   15510:	ldr	r0, [sp, #64]	; 0x40
   15514:	bl	141bc <dcngettext@plt+0x2ef0>
   15518:	mov	fp, r0
   1551c:	b	1563c <dcngettext@plt+0x4370>
   15520:	mov	r8, r9
   15524:	mov	r2, r3
   15528:	b	15530 <dcngettext@plt+0x4264>
   1552c:	mov	r8, r9
   15530:	ldr	r3, [sp, #60]	; 0x3c
   15534:	cmp	r3, #0
   15538:	moveq	r2, #0
   1553c:	andne	r2, r2, #1
   15540:	cmp	r2, #0
   15544:	beq	15574 <dcngettext@plt+0x42a8>
   15548:	mov	r2, r3
   1554c:	ldrb	r3, [r3]
   15550:	cmp	r3, #0
   15554:	beq	15574 <dcngettext@plt+0x42a8>
   15558:	ldr	r1, [sp, #64]	; 0x40
   1555c:	cmp	r8, fp
   15560:	strbhi	r3, [r1, fp]
   15564:	add	fp, fp, #1
   15568:	ldrb	r3, [r2, #1]!
   1556c:	cmp	r3, #0
   15570:	bne	1555c <dcngettext@plt+0x4290>
   15574:	cmp	r8, fp
   15578:	bls	1563c <dcngettext@plt+0x4370>
   1557c:	mov	r3, #0
   15580:	ldr	r2, [sp, #64]	; 0x40
   15584:	strb	r3, [r2, fp]
   15588:	b	1563c <dcngettext@plt+0x4370>
   1558c:	mov	r8, r9
   15590:	mov	r7, sl
   15594:	ldr	r3, [sp, #32]
   15598:	str	r3, [sp, #28]
   1559c:	b	155e4 <dcngettext@plt+0x4318>
   155a0:	mov	r8, r9
   155a4:	mov	r7, #2
   155a8:	b	155e4 <dcngettext@plt+0x4318>
   155ac:	mov	r8, r9
   155b0:	mov	r7, sl
   155b4:	b	155e4 <dcngettext@plt+0x4318>
   155b8:	mov	r8, r9
   155bc:	mov	r7, sl
   155c0:	b	155e4 <dcngettext@plt+0x4318>
   155c4:	mov	r8, r9
   155c8:	mov	r7, sl
   155cc:	b	155e4 <dcngettext@plt+0x4318>
   155d0:	mov	r8, r9
   155d4:	mov	r7, sl
   155d8:	b	155e4 <dcngettext@plt+0x4318>
   155dc:	mov	r8, r9
   155e0:	mov	r7, sl
   155e4:	ldr	r3, [sp, #28]
   155e8:	cmp	r7, #2
   155ec:	movne	r3, #0
   155f0:	andeq	r3, r3, #1
   155f4:	cmp	r3, #0
   155f8:	movne	r7, #4
   155fc:	ldr	r3, [sp, #168]	; 0xa8
   15600:	str	r3, [sp, #16]
   15604:	ldr	r3, [sp, #164]	; 0xa4
   15608:	str	r3, [sp, #12]
   1560c:	mov	r3, #0
   15610:	str	r3, [sp, #8]
   15614:	ldr	r3, [sp, #156]	; 0x9c
   15618:	bic	r3, r3, #2
   1561c:	str	r3, [sp, #4]
   15620:	str	r7, [sp]
   15624:	ldr	r3, [sp, #24]
   15628:	ldr	r2, [sp, #48]	; 0x30
   1562c:	mov	r1, r8
   15630:	ldr	r0, [sp, #64]	; 0x40
   15634:	bl	141bc <dcngettext@plt+0x2ef0>
   15638:	mov	fp, r0
   1563c:	mov	r0, fp
   15640:	add	sp, sp, #116	; 0x74
   15644:	ldrd	r4, [sp]
   15648:	ldrd	r6, [sp, #8]
   1564c:	ldrd	r8, [sp, #16]
   15650:	ldrd	sl, [sp, #24]
   15654:	add	sp, sp, #32
   15658:	pop	{pc}		; (ldr pc, [sp], #4)
   1565c:	mov	r8, r9
   15660:	mov	r7, sl
   15664:	b	155fc <dcngettext@plt+0x4330>
   15668:	add	fp, fp, #4
   1566c:	str	r3, [sp, #36]	; 0x24
   15670:	mov	r5, #0
   15674:	mov	r4, #48	; 0x30
   15678:	b	14a30 <dcngettext@plt+0x3764>
   1567c:	mov	r3, #1
   15680:	str	r3, [sp, #32]
   15684:	str	r3, [sp, #28]
   15688:	str	r3, [sp, #52]	; 0x34
   1568c:	movw	r3, #32812	; 0x802c
   15690:	movt	r3, #1
   15694:	str	r3, [sp, #60]	; 0x3c
   15698:	mov	fp, #0
   1569c:	mov	sl, #5
   156a0:	b	14294 <dcngettext@plt+0x2fc8>
   156a4:	ldr	r3, [sp, #48]	; 0x30
   156a8:	ldrb	r4, [r3, r6]
   156ac:	cmp	r4, #126	; 0x7e
   156b0:	ldrls	pc, [pc, r4, lsl #2]
   156b4:	b	14fa0 <dcngettext@plt+0x3cd4>
   156b8:	andeq	r4, r1, r8, lsr #14
   156bc:	andeq	r4, r1, r0, lsr #31
   156c0:	andeq	r4, r1, r0, lsr #31
   156c4:	andeq	r4, r1, r0, lsr #31
   156c8:	andeq	r4, r1, r0, lsr #31
   156cc:	andeq	r4, r1, r0, lsr #31
   156d0:	andeq	r4, r1, r0, lsr #31
   156d4:	andeq	r5, r1, r0, lsr r4
   156d8:	andeq	r4, r1, ip, asr #19
   156dc:	andeq	r4, r1, r0, ror sp
   156e0:	andeq	r4, r1, ip, lsr #28
   156e4:	andeq	r4, r1, r4, lsl #27
   156e8:	andeq	r4, r1, r0, ror #19
   156ec:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   156f0:	andeq	r4, r1, r0, lsr #31
   156f4:	andeq	r4, r1, r0, lsr #31
   156f8:	andeq	r4, r1, r0, lsr #31
   156fc:	andeq	r4, r1, r0, lsr #31
   15700:	andeq	r4, r1, r0, lsr #31
   15704:	andeq	r4, r1, r0, lsr #31
   15708:	andeq	r4, r1, r0, lsr #31
   1570c:	andeq	r4, r1, r0, lsr #31
   15710:	andeq	r4, r1, r0, lsr #31
   15714:	andeq	r4, r1, r0, lsr #31
   15718:	andeq	r4, r1, r0, lsr #31
   1571c:	andeq	r4, r1, r0, lsr #31
   15720:	andeq	r4, r1, r0, lsr #31
   15724:	andeq	r4, r1, r0, lsr #31
   15728:	andeq	r4, r1, r0, lsr #31
   1572c:	andeq	r4, r1, r0, lsr #31
   15730:	andeq	r4, r1, r0, lsr #31
   15734:	andeq	r4, r1, r0, lsr #31
   15738:			; <UNDEFINED> instruction: 0x00014eb4
   1573c:	strdeq	r4, [r1], -r0
   15740:	strdeq	r4, [r1], -r0
   15744:	andeq	r4, r1, r8, lsr #29
   15748:	strdeq	r4, [r1], -r0
   1574c:	andeq	r5, r1, r4, lsl r4
   15750:	strdeq	r4, [r1], -r0
   15754:	andeq	r4, r1, r0, lsl #30
   15758:	strdeq	r4, [r1], -r0
   1575c:	strdeq	r4, [r1], -r0
   15760:	strdeq	r4, [r1], -r0
   15764:	andeq	r5, r1, r4, lsl r4
   15768:	andeq	r5, r1, r4, lsl r4
   1576c:	andeq	r5, r1, r4, lsl r4
   15770:	andeq	r5, r1, r4, lsl r4
   15774:	andeq	r5, r1, r4, lsl r4
   15778:	andeq	r5, r1, r4, lsl r4
   1577c:	andeq	r5, r1, r4, lsl r4
   15780:	andeq	r5, r1, r4, lsl r4
   15784:	andeq	r5, r1, r4, lsl r4
   15788:	andeq	r5, r1, r4, lsl r4
   1578c:	andeq	r5, r1, r4, lsl r4
   15790:	andeq	r5, r1, r4, lsl r4
   15794:	andeq	r5, r1, r4, lsl r4
   15798:	andeq	r5, r1, r4, lsl r4
   1579c:	andeq	r5, r1, r4, lsl r4
   157a0:	andeq	r5, r1, r4, lsl r4
   157a4:	strdeq	r4, [r1], -r0
   157a8:	strdeq	r4, [r1], -r0
   157ac:	strdeq	r4, [r1], -r0
   157b0:	strdeq	r4, [r1], -r0
   157b4:	andeq	r4, r1, r0, ror #16
   157b8:	andeq	r4, r1, r0, lsr #31
   157bc:	andeq	r5, r1, r4, lsl r4
   157c0:	andeq	r5, r1, r4, lsl r4
   157c4:	andeq	r5, r1, r4, lsl r4
   157c8:	andeq	r5, r1, r4, lsl r4
   157cc:	andeq	r5, r1, r4, lsl r4
   157d0:	andeq	r5, r1, r4, lsl r4
   157d4:	andeq	r5, r1, r4, lsl r4
   157d8:	andeq	r5, r1, r4, lsl r4
   157dc:	andeq	r5, r1, r4, lsl r4
   157e0:	andeq	r5, r1, r4, lsl r4
   157e4:	andeq	r5, r1, r4, lsl r4
   157e8:	andeq	r5, r1, r4, lsl r4
   157ec:	andeq	r5, r1, r4, lsl r4
   157f0:	andeq	r5, r1, r4, lsl r4
   157f4:	andeq	r5, r1, r4, lsl r4
   157f8:	andeq	r5, r1, r4, lsl r4
   157fc:	andeq	r5, r1, r4, lsl r4
   15800:	andeq	r5, r1, r4, lsl r4
   15804:	andeq	r5, r1, r4, lsl r4
   15808:	andeq	r5, r1, r4, lsl r4
   1580c:	andeq	r5, r1, r4, lsl r4
   15810:	andeq	r5, r1, r4, lsl r4
   15814:	andeq	r5, r1, r4, lsl r4
   15818:	andeq	r5, r1, r4, lsl r4
   1581c:	andeq	r5, r1, r4, lsl r4
   15820:	andeq	r5, r1, r4, lsl r4
   15824:	strdeq	r4, [r1], -r0
   15828:	muleq	r1, r8, sp
   1582c:	andeq	r5, r1, r4, lsl r4
   15830:	strdeq	r4, [r1], -r0
   15834:	andeq	r5, r1, r4, lsl r4
   15838:	strdeq	r4, [r1], -r0
   1583c:	andeq	r5, r1, r4, lsl r4
   15840:	andeq	r5, r1, r4, lsl r4
   15844:	andeq	r5, r1, r4, lsl r4
   15848:	andeq	r5, r1, r4, lsl r4
   1584c:	andeq	r5, r1, r4, lsl r4
   15850:	andeq	r5, r1, r4, lsl r4
   15854:	andeq	r5, r1, r4, lsl r4
   15858:	andeq	r5, r1, r4, lsl r4
   1585c:	andeq	r5, r1, r4, lsl r4
   15860:	andeq	r5, r1, r4, lsl r4
   15864:	andeq	r5, r1, r4, lsl r4
   15868:	andeq	r5, r1, r4, lsl r4
   1586c:	andeq	r5, r1, r4, lsl r4
   15870:	andeq	r5, r1, r4, lsl r4
   15874:	andeq	r5, r1, r4, lsl r4
   15878:	andeq	r5, r1, r4, lsl r4
   1587c:	andeq	r5, r1, r4, lsl r4
   15880:	andeq	r5, r1, r4, lsl r4
   15884:	andeq	r5, r1, r4, lsl r4
   15888:	andeq	r5, r1, r4, lsl r4
   1588c:	andeq	r5, r1, r4, lsl r4
   15890:	andeq	r5, r1, r4, lsl r4
   15894:	andeq	r5, r1, r4, lsl r4
   15898:	andeq	r5, r1, r4, lsl r4
   1589c:	andeq	r5, r1, r4, lsl r4
   158a0:	andeq	r5, r1, r4, lsl r4
   158a4:	andeq	r4, r1, r8, asr lr
   158a8:	strdeq	r4, [r1], -r0
   158ac:	andeq	r4, r1, r8, asr lr
   158b0:	andeq	r4, r1, r8, lsr #29
   158b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   158b8:	strd	r6, [sp, #8]
   158bc:	strd	r8, [sp, #16]
   158c0:	strd	sl, [sp, #24]
   158c4:	str	lr, [sp, #32]
   158c8:	sub	sp, sp, #52	; 0x34
   158cc:	mov	r5, r0
   158d0:	str	r1, [sp, #24]
   158d4:	str	r2, [sp, #28]
   158d8:	mov	r4, r3
   158dc:	bl	11194 <__errno_location@plt>
   158e0:	str	r0, [sp, #32]
   158e4:	ldr	r3, [r0]
   158e8:	str	r3, [sp, #36]	; 0x24
   158ec:	movw	r3, #37176	; 0x9138
   158f0:	movt	r3, #2
   158f4:	ldr	r6, [r3]
   158f8:	cmn	r5, #-2147483647	; 0x80000001
   158fc:	movne	r3, #0
   15900:	moveq	r3, #1
   15904:	orrs	r3, r3, r5, lsr #31
   15908:	bne	15a6c <dcngettext@plt+0x47a0>
   1590c:	movw	r3, #37176	; 0x9138
   15910:	movt	r3, #2
   15914:	ldr	r2, [r3, #4]
   15918:	cmp	r2, r5
   1591c:	bgt	1598c <dcngettext@plt+0x46c0>
   15920:	str	r2, [sp, #44]	; 0x2c
   15924:	add	r3, r3, #8
   15928:	cmp	r6, r3
   1592c:	beq	15a70 <dcngettext@plt+0x47a4>
   15930:	sub	r2, r5, r2
   15934:	mov	r3, #8
   15938:	str	r3, [sp]
   1593c:	mvn	r3, #-2147483648	; 0x80000000
   15940:	add	r2, r2, #1
   15944:	add	r1, sp, #44	; 0x2c
   15948:	mov	r0, r6
   1594c:	bl	1718c <dcngettext@plt+0x5ec0>
   15950:	mov	r6, r0
   15954:	movw	r3, #37176	; 0x9138
   15958:	movt	r3, #2
   1595c:	str	r0, [r3]
   15960:	movw	r7, #37176	; 0x9138
   15964:	movt	r7, #2
   15968:	ldr	r0, [r7, #4]
   1596c:	ldr	r2, [sp, #44]	; 0x2c
   15970:	sub	r2, r2, r0
   15974:	lsl	r2, r2, #3
   15978:	mov	r1, #0
   1597c:	add	r0, r6, r0, lsl #3
   15980:	bl	111ac <memset@plt>
   15984:	ldr	r3, [sp, #44]	; 0x2c
   15988:	str	r3, [r7, #4]
   1598c:	add	fp, r6, r5, lsl #3
   15990:	ldr	r8, [r6, r5, lsl #3]
   15994:	ldr	r7, [fp, #4]
   15998:	ldr	r3, [r4, #4]
   1599c:	orr	r9, r3, #1
   159a0:	add	sl, r4, #8
   159a4:	ldr	r3, [r4, #44]	; 0x2c
   159a8:	str	r3, [sp, #16]
   159ac:	ldr	r3, [r4, #40]	; 0x28
   159b0:	str	r3, [sp, #12]
   159b4:	str	sl, [sp, #8]
   159b8:	str	r9, [sp, #4]
   159bc:	ldr	r3, [r4]
   159c0:	str	r3, [sp]
   159c4:	ldr	r3, [sp, #28]
   159c8:	ldr	r2, [sp, #24]
   159cc:	mov	r1, r8
   159d0:	mov	r0, r7
   159d4:	bl	141bc <dcngettext@plt+0x2ef0>
   159d8:	cmp	r8, r0
   159dc:	bhi	15a40 <dcngettext@plt+0x4774>
   159e0:	add	r8, r0, #1
   159e4:	str	r8, [r6, r5, lsl #3]
   159e8:	movw	r3, #37288	; 0x91a8
   159ec:	movt	r3, #2
   159f0:	cmp	r7, r3
   159f4:	beq	15a00 <dcngettext@plt+0x4734>
   159f8:	mov	r0, r7
   159fc:	bl	175b0 <dcngettext@plt+0x62e4>
   15a00:	mov	r0, r8
   15a04:	bl	16f88 <dcngettext@plt+0x5cbc>
   15a08:	mov	r7, r0
   15a0c:	str	r0, [fp, #4]
   15a10:	ldr	r3, [r4, #44]	; 0x2c
   15a14:	str	r3, [sp, #16]
   15a18:	ldr	r3, [r4, #40]	; 0x28
   15a1c:	str	r3, [sp, #12]
   15a20:	str	sl, [sp, #8]
   15a24:	str	r9, [sp, #4]
   15a28:	ldr	r3, [r4]
   15a2c:	str	r3, [sp]
   15a30:	ldr	r3, [sp, #28]
   15a34:	ldr	r2, [sp, #24]
   15a38:	mov	r1, r8
   15a3c:	bl	141bc <dcngettext@plt+0x2ef0>
   15a40:	ldr	r3, [sp, #32]
   15a44:	ldr	r2, [sp, #36]	; 0x24
   15a48:	str	r2, [r3]
   15a4c:	mov	r0, r7
   15a50:	add	sp, sp, #52	; 0x34
   15a54:	ldrd	r4, [sp]
   15a58:	ldrd	r6, [sp, #8]
   15a5c:	ldrd	r8, [sp, #16]
   15a60:	ldrd	sl, [sp, #24]
   15a64:	add	sp, sp, #32
   15a68:	pop	{pc}		; (ldr pc, [sp], #4)
   15a6c:	bl	112b4 <abort@plt>
   15a70:	sub	r2, r5, r2
   15a74:	mov	r3, #8
   15a78:	str	r3, [sp]
   15a7c:	mvn	r3, #-2147483648	; 0x80000000
   15a80:	add	r2, r2, #1
   15a84:	add	r1, sp, #44	; 0x2c
   15a88:	mov	r0, #0
   15a8c:	bl	1718c <dcngettext@plt+0x5ec0>
   15a90:	mov	r6, r0
   15a94:	movw	r3, #37176	; 0x9138
   15a98:	movt	r3, #2
   15a9c:	str	r0, [r3]
   15aa0:	ldrd	r2, [r3, #8]
   15aa4:	strd	r2, [r0]
   15aa8:	b	15960 <dcngettext@plt+0x4694>
   15aac:	strd	r4, [sp, #-16]!
   15ab0:	str	r6, [sp, #8]
   15ab4:	str	lr, [sp, #12]
   15ab8:	mov	r4, r0
   15abc:	bl	11194 <__errno_location@plt>
   15ac0:	mov	r5, r0
   15ac4:	ldr	r6, [r0]
   15ac8:	cmp	r4, #0
   15acc:	ldr	r3, [pc, #32]	; 15af4 <dcngettext@plt+0x4828>
   15ad0:	moveq	r4, r3
   15ad4:	mov	r1, #48	; 0x30
   15ad8:	mov	r0, r4
   15adc:	bl	172fc <dcngettext@plt+0x6030>
   15ae0:	str	r6, [r5]
   15ae4:	ldrd	r4, [sp]
   15ae8:	ldr	r6, [sp, #8]
   15aec:	add	sp, sp, #12
   15af0:	pop	{pc}		; (ldr pc, [sp], #4)
   15af4:	andeq	r9, r2, r8, lsr #5
   15af8:	subs	r3, r0, #0
   15afc:	ldr	r2, [pc, #8]	; 15b0c <dcngettext@plt+0x4840>
   15b00:	moveq	r3, r2
   15b04:	ldr	r0, [r3]
   15b08:	bx	lr
   15b0c:	andeq	r9, r2, r8, lsr #5
   15b10:	subs	r3, r0, #0
   15b14:	ldr	r2, [pc, #8]	; 15b24 <dcngettext@plt+0x4858>
   15b18:	moveq	r3, r2
   15b1c:	str	r1, [r3]
   15b20:	bx	lr
   15b24:	andeq	r9, r2, r8, lsr #5
   15b28:	push	{lr}		; (str lr, [sp, #-4]!)
   15b2c:	subs	r3, r0, #0
   15b30:	ldr	r0, [pc, #44]	; 15b64 <dcngettext@plt+0x4898>
   15b34:	moveq	r3, r0
   15b38:	add	r3, r3, #8
   15b3c:	lsr	lr, r1, #5
   15b40:	and	r1, r1, #31
   15b44:	ldr	ip, [r3, lr, lsl #2]
   15b48:	lsr	r0, ip, r1
   15b4c:	eor	r2, r2, r0
   15b50:	and	r2, r2, #1
   15b54:	eor	r1, ip, r2, lsl r1
   15b58:	str	r1, [r3, lr, lsl #2]
   15b5c:	and	r0, r0, #1
   15b60:	pop	{pc}		; (ldr pc, [sp], #4)
   15b64:	andeq	r9, r2, r8, lsr #5
   15b68:	subs	r3, r0, #0
   15b6c:	ldr	r2, [pc, #12]	; 15b80 <dcngettext@plt+0x48b4>
   15b70:	moveq	r3, r2
   15b74:	ldr	r0, [r3, #4]
   15b78:	str	r1, [r3, #4]
   15b7c:	bx	lr
   15b80:	andeq	r9, r2, r8, lsr #5
   15b84:	subs	r3, r0, #0
   15b88:	ldr	r0, [pc, #44]	; 15bbc <dcngettext@plt+0x48f0>
   15b8c:	moveq	r3, r0
   15b90:	mov	r0, #10
   15b94:	str	r0, [r3]
   15b98:	cmp	r2, #0
   15b9c:	cmpne	r1, #0
   15ba0:	beq	15bb0 <dcngettext@plt+0x48e4>
   15ba4:	str	r1, [r3, #40]	; 0x28
   15ba8:	str	r2, [r3, #44]	; 0x2c
   15bac:	bx	lr
   15bb0:	str	r4, [sp, #-8]!
   15bb4:	str	lr, [sp, #4]
   15bb8:	bl	112b4 <abort@plt>
   15bbc:	andeq	r9, r2, r8, lsr #5
   15bc0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15bc4:	strd	r6, [sp, #8]
   15bc8:	strd	r8, [sp, #16]
   15bcc:	str	sl, [sp, #24]
   15bd0:	str	lr, [sp, #28]
   15bd4:	sub	sp, sp, #24
   15bd8:	mov	r7, r0
   15bdc:	mov	r8, r1
   15be0:	mov	r9, r2
   15be4:	mov	sl, r3
   15be8:	ldr	r4, [sp, #56]	; 0x38
   15bec:	cmp	r4, #0
   15bf0:	ldr	r3, [pc, #104]	; 15c60 <dcngettext@plt+0x4994>
   15bf4:	moveq	r4, r3
   15bf8:	bl	11194 <__errno_location@plt>
   15bfc:	mov	r5, r0
   15c00:	ldr	r6, [r0]
   15c04:	ldr	r3, [r4, #44]	; 0x2c
   15c08:	str	r3, [sp, #16]
   15c0c:	ldr	r3, [r4, #40]	; 0x28
   15c10:	str	r3, [sp, #12]
   15c14:	add	r3, r4, #8
   15c18:	str	r3, [sp, #8]
   15c1c:	ldr	r3, [r4, #4]
   15c20:	str	r3, [sp, #4]
   15c24:	ldr	r3, [r4]
   15c28:	str	r3, [sp]
   15c2c:	mov	r3, sl
   15c30:	mov	r2, r9
   15c34:	mov	r1, r8
   15c38:	mov	r0, r7
   15c3c:	bl	141bc <dcngettext@plt+0x2ef0>
   15c40:	str	r6, [r5]
   15c44:	add	sp, sp, #24
   15c48:	ldrd	r4, [sp]
   15c4c:	ldrd	r6, [sp, #8]
   15c50:	ldrd	r8, [sp, #16]
   15c54:	ldr	sl, [sp, #24]
   15c58:	add	sp, sp, #28
   15c5c:	pop	{pc}		; (ldr pc, [sp], #4)
   15c60:	andeq	r9, r2, r8, lsr #5
   15c64:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15c68:	strd	r6, [sp, #8]
   15c6c:	strd	r8, [sp, #16]
   15c70:	strd	sl, [sp, #24]
   15c74:	str	lr, [sp, #32]
   15c78:	sub	sp, sp, #44	; 0x2c
   15c7c:	mov	r8, r0
   15c80:	mov	sl, r1
   15c84:	mov	r6, r2
   15c88:	subs	r4, r3, #0
   15c8c:	ldr	r3, [pc, #200]	; 15d5c <dcngettext@plt+0x4a90>
   15c90:	moveq	r4, r3
   15c94:	bl	11194 <__errno_location@plt>
   15c98:	mov	r7, r0
   15c9c:	ldr	fp, [r0]
   15ca0:	ldr	r5, [r4, #4]
   15ca4:	cmp	r6, #0
   15ca8:	orreq	r5, r5, #1
   15cac:	add	r9, r4, #8
   15cb0:	ldr	r3, [r4, #44]	; 0x2c
   15cb4:	str	r3, [sp, #16]
   15cb8:	ldr	r3, [r4, #40]	; 0x28
   15cbc:	str	r3, [sp, #12]
   15cc0:	str	r9, [sp, #8]
   15cc4:	str	r5, [sp, #4]
   15cc8:	ldr	r3, [r4]
   15ccc:	str	r3, [sp]
   15cd0:	str	sl, [sp, #36]	; 0x24
   15cd4:	mov	r3, sl
   15cd8:	str	r8, [sp, #32]
   15cdc:	mov	r2, r8
   15ce0:	mov	r1, #0
   15ce4:	mov	r0, r1
   15ce8:	bl	141bc <dcngettext@plt+0x2ef0>
   15cec:	mov	sl, r0
   15cf0:	add	r8, r0, #1
   15cf4:	mov	r0, r8
   15cf8:	bl	16f88 <dcngettext@plt+0x5cbc>
   15cfc:	str	r0, [sp, #28]
   15d00:	ldr	r3, [r4, #44]	; 0x2c
   15d04:	str	r3, [sp, #16]
   15d08:	ldr	r3, [r4, #40]	; 0x28
   15d0c:	str	r3, [sp, #12]
   15d10:	str	r9, [sp, #8]
   15d14:	str	r5, [sp, #4]
   15d18:	ldr	r3, [r4]
   15d1c:	str	r3, [sp]
   15d20:	ldr	r3, [sp, #36]	; 0x24
   15d24:	ldr	r2, [sp, #32]
   15d28:	mov	r1, r8
   15d2c:	bl	141bc <dcngettext@plt+0x2ef0>
   15d30:	str	fp, [r7]
   15d34:	cmp	r6, #0
   15d38:	strne	sl, [r6]
   15d3c:	ldr	r0, [sp, #28]
   15d40:	add	sp, sp, #44	; 0x2c
   15d44:	ldrd	r4, [sp]
   15d48:	ldrd	r6, [sp, #8]
   15d4c:	ldrd	r8, [sp, #16]
   15d50:	ldrd	sl, [sp, #24]
   15d54:	add	sp, sp, #32
   15d58:	pop	{pc}		; (ldr pc, [sp], #4)
   15d5c:	andeq	r9, r2, r8, lsr #5
   15d60:	str	r4, [sp, #-8]!
   15d64:	str	lr, [sp, #4]
   15d68:	mov	r3, r2
   15d6c:	mov	r2, #0
   15d70:	bl	15c64 <dcngettext@plt+0x4998>
   15d74:	ldr	r4, [sp]
   15d78:	add	sp, sp, #4
   15d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   15d80:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15d84:	strd	r6, [sp, #8]
   15d88:	str	r8, [sp, #16]
   15d8c:	str	lr, [sp, #20]
   15d90:	movw	r3, #37176	; 0x9138
   15d94:	movt	r3, #2
   15d98:	ldr	r7, [r3]
   15d9c:	ldr	r3, [r3, #4]
   15da0:	cmp	r3, #1
   15da4:	ble	15dd0 <dcngettext@plt+0x4b04>
   15da8:	mov	r4, #1
   15dac:	add	r6, r7, #4
   15db0:	movw	r5, #37176	; 0x9138
   15db4:	movt	r5, #2
   15db8:	ldr	r0, [r6, r4, lsl #3]
   15dbc:	bl	175b0 <dcngettext@plt+0x62e4>
   15dc0:	add	r4, r4, #1
   15dc4:	ldr	r3, [r5, #4]
   15dc8:	cmp	r3, r4
   15dcc:	bgt	15db8 <dcngettext@plt+0x4aec>
   15dd0:	ldr	r0, [r7, #4]
   15dd4:	movw	r3, #37288	; 0x91a8
   15dd8:	movt	r3, #2
   15ddc:	cmp	r0, r3
   15de0:	beq	15e04 <dcngettext@plt+0x4b38>
   15de4:	bl	175b0 <dcngettext@plt+0x62e4>
   15de8:	movw	r3, #37176	; 0x9138
   15dec:	movt	r3, #2
   15df0:	mov	r2, #256	; 0x100
   15df4:	str	r2, [r3, #8]
   15df8:	movw	r2, #37288	; 0x91a8
   15dfc:	movt	r2, #2
   15e00:	str	r2, [r3, #12]
   15e04:	ldr	r3, [pc, #64]	; 15e4c <dcngettext@plt+0x4b80>
   15e08:	cmp	r7, r3
   15e0c:	beq	15e28 <dcngettext@plt+0x4b5c>
   15e10:	mov	r0, r7
   15e14:	bl	175b0 <dcngettext@plt+0x62e4>
   15e18:	movw	r3, #37176	; 0x9138
   15e1c:	movt	r3, #2
   15e20:	add	r2, r3, #8
   15e24:	str	r2, [r3]
   15e28:	movw	r3, #37176	; 0x9138
   15e2c:	movt	r3, #2
   15e30:	mov	r2, #1
   15e34:	str	r2, [r3, #4]
   15e38:	ldrd	r4, [sp]
   15e3c:	ldrd	r6, [sp, #8]
   15e40:	ldr	r8, [sp, #16]
   15e44:	add	sp, sp, #20
   15e48:	pop	{pc}		; (ldr pc, [sp], #4)
   15e4c:	andeq	r9, r2, r0, asr #2
   15e50:	str	r4, [sp, #-8]!
   15e54:	str	lr, [sp, #4]
   15e58:	ldr	r3, [pc, #16]	; 15e70 <dcngettext@plt+0x4ba4>
   15e5c:	mvn	r2, #0
   15e60:	bl	158b4 <dcngettext@plt+0x45e8>
   15e64:	ldr	r4, [sp]
   15e68:	add	sp, sp, #4
   15e6c:	pop	{pc}		; (ldr pc, [sp], #4)
   15e70:	andeq	r9, r2, r8, lsr #5
   15e74:	str	r4, [sp, #-8]!
   15e78:	str	lr, [sp, #4]
   15e7c:	ldr	r3, [pc, #12]	; 15e90 <dcngettext@plt+0x4bc4>
   15e80:	bl	158b4 <dcngettext@plt+0x45e8>
   15e84:	ldr	r4, [sp]
   15e88:	add	sp, sp, #4
   15e8c:	pop	{pc}		; (ldr pc, [sp], #4)
   15e90:	andeq	r9, r2, r8, lsr #5
   15e94:	str	r4, [sp, #-8]!
   15e98:	str	lr, [sp, #4]
   15e9c:	mov	r1, r0
   15ea0:	mov	r0, #0
   15ea4:	bl	15e50 <dcngettext@plt+0x4b84>
   15ea8:	ldr	r4, [sp]
   15eac:	add	sp, sp, #4
   15eb0:	pop	{pc}		; (ldr pc, [sp], #4)
   15eb4:	str	r4, [sp, #-8]!
   15eb8:	str	lr, [sp, #4]
   15ebc:	mov	r2, r1
   15ec0:	mov	r1, r0
   15ec4:	mov	r0, #0
   15ec8:	bl	15e74 <dcngettext@plt+0x4ba8>
   15ecc:	ldr	r4, [sp]
   15ed0:	add	sp, sp, #4
   15ed4:	pop	{pc}		; (ldr pc, [sp], #4)
   15ed8:	strd	r4, [sp, #-12]!
   15edc:	str	lr, [sp, #8]
   15ee0:	sub	sp, sp, #52	; 0x34
   15ee4:	mov	r4, r0
   15ee8:	mov	r5, r2
   15eec:	mov	r0, sp
   15ef0:	bl	14028 <dcngettext@plt+0x2d5c>
   15ef4:	mov	r3, sp
   15ef8:	mvn	r2, #0
   15efc:	mov	r1, r5
   15f00:	mov	r0, r4
   15f04:	bl	158b4 <dcngettext@plt+0x45e8>
   15f08:	add	sp, sp, #52	; 0x34
   15f0c:	ldrd	r4, [sp]
   15f10:	add	sp, sp, #8
   15f14:	pop	{pc}		; (ldr pc, [sp], #4)
   15f18:	strd	r4, [sp, #-16]!
   15f1c:	str	r6, [sp, #8]
   15f20:	str	lr, [sp, #12]
   15f24:	sub	sp, sp, #48	; 0x30
   15f28:	mov	r4, r0
   15f2c:	mov	r5, r2
   15f30:	mov	r6, r3
   15f34:	mov	r0, sp
   15f38:	bl	14028 <dcngettext@plt+0x2d5c>
   15f3c:	mov	r3, sp
   15f40:	mov	r2, r6
   15f44:	mov	r1, r5
   15f48:	mov	r0, r4
   15f4c:	bl	158b4 <dcngettext@plt+0x45e8>
   15f50:	add	sp, sp, #48	; 0x30
   15f54:	ldrd	r4, [sp]
   15f58:	ldr	r6, [sp, #8]
   15f5c:	add	sp, sp, #12
   15f60:	pop	{pc}		; (ldr pc, [sp], #4)
   15f64:	str	r4, [sp, #-8]!
   15f68:	str	lr, [sp, #4]
   15f6c:	mov	r2, r1
   15f70:	mov	r1, r0
   15f74:	mov	r0, #0
   15f78:	bl	15ed8 <dcngettext@plt+0x4c0c>
   15f7c:	ldr	r4, [sp]
   15f80:	add	sp, sp, #4
   15f84:	pop	{pc}		; (ldr pc, [sp], #4)
   15f88:	str	r4, [sp, #-8]!
   15f8c:	str	lr, [sp, #4]
   15f90:	mov	r3, r2
   15f94:	mov	r2, r1
   15f98:	mov	r1, r0
   15f9c:	mov	r0, #0
   15fa0:	bl	15f18 <dcngettext@plt+0x4c4c>
   15fa4:	ldr	r4, [sp]
   15fa8:	add	sp, sp, #4
   15fac:	pop	{pc}		; (ldr pc, [sp], #4)
   15fb0:	strd	r4, [sp, #-12]!
   15fb4:	str	lr, [sp, #8]
   15fb8:	sub	sp, sp, #52	; 0x34
   15fbc:	mov	r4, r0
   15fc0:	mov	r5, r1
   15fc4:	mov	r1, r2
   15fc8:	ldr	r0, [pc, #92]	; 1602c <dcngettext@plt+0x4d60>
   15fcc:	ldrd	r2, [r0]
   15fd0:	strd	r2, [sp]
   15fd4:	ldrd	r2, [r0, #8]
   15fd8:	strd	r2, [sp, #8]
   15fdc:	ldrd	r2, [r0, #16]
   15fe0:	strd	r2, [sp, #16]
   15fe4:	ldrd	r2, [r0, #24]
   15fe8:	strd	r2, [sp, #24]
   15fec:	ldrd	r2, [r0, #32]
   15ff0:	strd	r2, [sp, #32]
   15ff4:	ldrd	r2, [r0, #40]	; 0x28
   15ff8:	strd	r2, [sp, #40]	; 0x28
   15ffc:	mov	r2, #1
   16000:	mov	r0, sp
   16004:	bl	15b28 <dcngettext@plt+0x485c>
   16008:	mov	r3, sp
   1600c:	mov	r2, r5
   16010:	mov	r1, r4
   16014:	mov	r0, #0
   16018:	bl	158b4 <dcngettext@plt+0x45e8>
   1601c:	add	sp, sp, #52	; 0x34
   16020:	ldrd	r4, [sp]
   16024:	add	sp, sp, #8
   16028:	pop	{pc}		; (ldr pc, [sp], #4)
   1602c:	andeq	r9, r2, r8, lsr #5
   16030:	str	r4, [sp, #-8]!
   16034:	str	lr, [sp, #4]
   16038:	mov	r2, r1
   1603c:	mvn	r1, #0
   16040:	bl	15fb0 <dcngettext@plt+0x4ce4>
   16044:	ldr	r4, [sp]
   16048:	add	sp, sp, #4
   1604c:	pop	{pc}		; (ldr pc, [sp], #4)
   16050:	str	r4, [sp, #-8]!
   16054:	str	lr, [sp, #4]
   16058:	mov	r1, #58	; 0x3a
   1605c:	bl	16030 <dcngettext@plt+0x4d64>
   16060:	ldr	r4, [sp]
   16064:	add	sp, sp, #4
   16068:	pop	{pc}		; (ldr pc, [sp], #4)
   1606c:	str	r4, [sp, #-8]!
   16070:	str	lr, [sp, #4]
   16074:	mov	r2, #58	; 0x3a
   16078:	bl	15fb0 <dcngettext@plt+0x4ce4>
   1607c:	ldr	r4, [sp]
   16080:	add	sp, sp, #4
   16084:	pop	{pc}		; (ldr pc, [sp], #4)
   16088:	strd	r4, [sp, #-12]!
   1608c:	str	lr, [sp, #8]
   16090:	sub	sp, sp, #100	; 0x64
   16094:	mov	r4, r0
   16098:	mov	r5, r2
   1609c:	mov	r0, sp
   160a0:	bl	14028 <dcngettext@plt+0x2d5c>
   160a4:	ldrd	r2, [sp]
   160a8:	strd	r2, [sp, #48]	; 0x30
   160ac:	ldrd	r2, [sp, #8]
   160b0:	strd	r2, [sp, #56]	; 0x38
   160b4:	ldrd	r2, [sp, #16]
   160b8:	strd	r2, [sp, #64]	; 0x40
   160bc:	ldrd	r2, [sp, #24]
   160c0:	strd	r2, [sp, #72]	; 0x48
   160c4:	ldrd	r2, [sp, #32]
   160c8:	strd	r2, [sp, #80]	; 0x50
   160cc:	ldrd	r2, [sp, #40]	; 0x28
   160d0:	strd	r2, [sp, #88]	; 0x58
   160d4:	mov	r2, #1
   160d8:	mov	r1, #58	; 0x3a
   160dc:	add	r0, sp, #48	; 0x30
   160e0:	bl	15b28 <dcngettext@plt+0x485c>
   160e4:	add	r3, sp, #48	; 0x30
   160e8:	mvn	r2, #0
   160ec:	mov	r1, r5
   160f0:	mov	r0, r4
   160f4:	bl	158b4 <dcngettext@plt+0x45e8>
   160f8:	add	sp, sp, #100	; 0x64
   160fc:	ldrd	r4, [sp]
   16100:	add	sp, sp, #8
   16104:	pop	{pc}		; (ldr pc, [sp], #4)
   16108:	strd	r4, [sp, #-20]!	; 0xffffffec
   1610c:	strd	r6, [sp, #8]
   16110:	str	lr, [sp, #16]
   16114:	sub	sp, sp, #52	; 0x34
   16118:	mov	r4, r0
   1611c:	mov	r5, r3
   16120:	ldr	r3, [pc, #92]	; 16184 <dcngettext@plt+0x4eb8>
   16124:	ldrd	r6, [r3]
   16128:	strd	r6, [sp]
   1612c:	ldrd	r6, [r3, #8]
   16130:	strd	r6, [sp, #8]
   16134:	ldrd	r6, [r3, #16]
   16138:	strd	r6, [sp, #16]
   1613c:	ldrd	r6, [r3, #24]
   16140:	strd	r6, [sp, #24]
   16144:	ldrd	r6, [r3, #32]
   16148:	strd	r6, [sp, #32]
   1614c:	ldrd	r6, [r3, #40]	; 0x28
   16150:	strd	r6, [sp, #40]	; 0x28
   16154:	mov	r0, sp
   16158:	bl	15b84 <dcngettext@plt+0x48b8>
   1615c:	mov	r3, sp
   16160:	ldr	r2, [sp, #72]	; 0x48
   16164:	mov	r1, r5
   16168:	mov	r0, r4
   1616c:	bl	158b4 <dcngettext@plt+0x45e8>
   16170:	add	sp, sp, #52	; 0x34
   16174:	ldrd	r4, [sp]
   16178:	ldrd	r6, [sp, #8]
   1617c:	add	sp, sp, #16
   16180:	pop	{pc}		; (ldr pc, [sp], #4)
   16184:	andeq	r9, r2, r8, lsr #5
   16188:	push	{lr}		; (str lr, [sp, #-4]!)
   1618c:	sub	sp, sp, #12
   16190:	mvn	ip, #0
   16194:	str	ip, [sp]
   16198:	bl	16108 <dcngettext@plt+0x4e3c>
   1619c:	add	sp, sp, #12
   161a0:	pop	{pc}		; (ldr pc, [sp], #4)
   161a4:	str	r4, [sp, #-8]!
   161a8:	str	lr, [sp, #4]
   161ac:	mov	r3, r2
   161b0:	mov	r2, r1
   161b4:	mov	r1, r0
   161b8:	mov	r0, #0
   161bc:	bl	16188 <dcngettext@plt+0x4ebc>
   161c0:	ldr	r4, [sp]
   161c4:	add	sp, sp, #4
   161c8:	pop	{pc}		; (ldr pc, [sp], #4)
   161cc:	push	{lr}		; (str lr, [sp, #-4]!)
   161d0:	sub	sp, sp, #12
   161d4:	str	r3, [sp]
   161d8:	mov	r3, r2
   161dc:	mov	r2, r1
   161e0:	mov	r1, r0
   161e4:	mov	r0, #0
   161e8:	bl	16108 <dcngettext@plt+0x4e3c>
   161ec:	add	sp, sp, #12
   161f0:	pop	{pc}		; (ldr pc, [sp], #4)
   161f4:	str	r4, [sp, #-8]!
   161f8:	str	lr, [sp, #4]
   161fc:	ldr	r3, [pc, #12]	; 16210 <dcngettext@plt+0x4f44>
   16200:	bl	158b4 <dcngettext@plt+0x45e8>
   16204:	ldr	r4, [sp]
   16208:	add	sp, sp, #4
   1620c:	pop	{pc}		; (ldr pc, [sp], #4)
   16210:	andeq	r9, r2, r8, asr #2
   16214:	str	r4, [sp, #-8]!
   16218:	str	lr, [sp, #4]
   1621c:	mov	r2, r1
   16220:	mov	r1, r0
   16224:	mov	r0, #0
   16228:	bl	161f4 <dcngettext@plt+0x4f28>
   1622c:	ldr	r4, [sp]
   16230:	add	sp, sp, #4
   16234:	pop	{pc}		; (ldr pc, [sp], #4)
   16238:	str	r4, [sp, #-8]!
   1623c:	str	lr, [sp, #4]
   16240:	mvn	r2, #0
   16244:	bl	161f4 <dcngettext@plt+0x4f28>
   16248:	ldr	r4, [sp]
   1624c:	add	sp, sp, #4
   16250:	pop	{pc}		; (ldr pc, [sp], #4)
   16254:	str	r4, [sp, #-8]!
   16258:	str	lr, [sp, #4]
   1625c:	mov	r1, r0
   16260:	mov	r0, #0
   16264:	bl	16238 <dcngettext@plt+0x4f6c>
   16268:	ldr	r4, [sp]
   1626c:	add	sp, sp, #4
   16270:	pop	{pc}		; (ldr pc, [sp], #4)
   16274:	strd	r4, [sp, #-16]!
   16278:	str	r6, [sp, #8]
   1627c:	str	lr, [sp, #12]
   16280:	mov	r5, r0
   16284:	mov	r0, #33	; 0x21
   16288:	bl	16f40 <dcngettext@plt+0x5c74>
   1628c:	mov	r4, r0
   16290:	mov	r2, #32
   16294:	add	r1, r5, #44	; 0x2c
   16298:	bl	111b8 <strncpy@plt>
   1629c:	mov	r3, #0
   162a0:	strb	r3, [r4, #32]
   162a4:	mov	r0, r4
   162a8:	bl	1117c <strlen@plt>
   162ac:	add	r0, r4, r0
   162b0:	cmp	r4, r0
   162b4:	bcs	162c4 <dcngettext@plt+0x4ff8>
   162b8:	ldrb	r3, [r0, #-1]
   162bc:	cmp	r3, #32
   162c0:	beq	162d8 <dcngettext@plt+0x500c>
   162c4:	mov	r0, r4
   162c8:	ldrd	r4, [sp]
   162cc:	ldr	r6, [sp, #8]
   162d0:	add	sp, sp, #12
   162d4:	pop	{pc}		; (ldr pc, [sp], #4)
   162d8:	sub	r0, r0, #1
   162dc:	mov	r1, r4
   162e0:	mov	r2, #0
   162e4:	strb	r2, [r0]
   162e8:	cmp	r0, r1
   162ec:	beq	162c4 <dcngettext@plt+0x4ff8>
   162f0:	ldrb	r3, [r0, #-1]!
   162f4:	cmp	r3, #32
   162f8:	bne	162c4 <dcngettext@plt+0x4ff8>
   162fc:	b	162e4 <dcngettext@plt+0x5018>
   16300:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16304:	strd	r6, [sp, #8]
   16308:	strd	r8, [sp, #16]
   1630c:	strd	sl, [sp, #24]
   16310:	str	lr, [sp, #32]
   16314:	sub	sp, sp, #28
   16318:	mov	fp, r1
   1631c:	str	r2, [sp, #12]
   16320:	mov	r7, r3
   16324:	mov	r8, #0
   16328:	str	r8, [sp, #20]
   1632c:	bl	10fe4 <utmpxname@plt>
   16330:	bl	11050 <setutxent@plt>
   16334:	mov	r6, r8
   16338:	and	r5, r7, #2
   1633c:	and	r7, r7, #1
   16340:	mov	r9, r6
   16344:	mov	sl, #0
   16348:	b	16380 <dcngettext@plt+0x50b4>
   1634c:	cmp	r7, #0
   16350:	beq	163ac <dcngettext@plt+0x50e0>
   16354:	ldr	r0, [r4, #4]
   16358:	cmp	r0, #0
   1635c:	ble	163ac <dcngettext@plt+0x50e0>
   16360:	mov	r1, sl
   16364:	bl	11158 <kill@plt>
   16368:	cmp	r0, #0
   1636c:	bge	163ac <dcngettext@plt+0x50e0>
   16370:	bl	11194 <__errno_location@plt>
   16374:	ldr	r3, [r0]
   16378:	cmp	r3, #3
   1637c:	bne	163ac <dcngettext@plt+0x50e0>
   16380:	bl	112c0 <getutxent@plt>
   16384:	subs	r4, r0, #0
   16388:	beq	163f8 <dcngettext@plt+0x512c>
   1638c:	ldrb	r3, [r4, #44]	; 0x2c
   16390:	cmp	r3, #0
   16394:	beq	163a4 <dcngettext@plt+0x50d8>
   16398:	ldrsh	r3, [r4]
   1639c:	cmp	r3, #7
   163a0:	beq	1634c <dcngettext@plt+0x5080>
   163a4:	cmp	r5, #0
   163a8:	bne	16380 <dcngettext@plt+0x50b4>
   163ac:	ldr	r3, [sp, #20]
   163b0:	cmp	r3, r9
   163b4:	beq	163d4 <dcngettext@plt+0x5108>
   163b8:	add	r0, r6, r6, lsl #1
   163bc:	mov	r2, #384	; 0x180
   163c0:	mov	r1, r4
   163c4:	add	r0, r8, r0, lsl #7
   163c8:	bl	11008 <memcpy@plt>
   163cc:	add	r6, r6, #1
   163d0:	b	16340 <dcngettext@plt+0x5074>
   163d4:	mov	r3, #384	; 0x180
   163d8:	str	r3, [sp]
   163dc:	mvn	r3, #0
   163e0:	mov	r2, #1
   163e4:	add	r1, sp, #20
   163e8:	mov	r0, r8
   163ec:	bl	1718c <dcngettext@plt+0x5ec0>
   163f0:	mov	r8, r0
   163f4:	b	163b8 <dcngettext@plt+0x50ec>
   163f8:	bl	11218 <endutxent@plt>
   163fc:	str	r6, [fp]
   16400:	ldr	r3, [sp, #12]
   16404:	str	r8, [r3]
   16408:	mov	r0, #0
   1640c:	add	sp, sp, #28
   16410:	ldrd	r4, [sp]
   16414:	ldrd	r6, [sp, #8]
   16418:	ldrd	r8, [sp, #16]
   1641c:	ldrd	sl, [sp, #24]
   16420:	add	sp, sp, #32
   16424:	pop	{pc}		; (ldr pc, [sp], #4)
   16428:	str	r4, [sp, #-8]!
   1642c:	str	lr, [sp, #4]
   16430:	subs	r1, r0, #0
   16434:	beq	16454 <dcngettext@plt+0x5188>
   16438:	mov	r2, #1
   1643c:	movw	r0, #32944	; 0x80b0
   16440:	movt	r0, #1
   16444:	bl	11188 <setenv@plt>
   16448:	ldr	r4, [sp]
   1644c:	add	sp, sp, #4
   16450:	pop	{pc}		; (ldr pc, [sp], #4)
   16454:	movw	r0, #32944	; 0x80b0
   16458:	movt	r0, #1
   1645c:	bl	1129c <unsetenv@plt>
   16460:	b	16448 <dcngettext@plt+0x517c>
   16464:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16468:	strd	r6, [sp, #8]
   1646c:	str	r8, [sp, #16]
   16470:	str	lr, [sp, #20]
   16474:	subs	r6, r0, #0
   16478:	beq	164ec <dcngettext@plt+0x5220>
   1647c:	mov	r0, r6
   16480:	bl	1117c <strlen@plt>
   16484:	add	r5, r0, #1
   16488:	cmp	r5, #58	; 0x3a
   1648c:	movcs	r0, r5
   16490:	movcc	r0, #58	; 0x3a
   16494:	add	r0, r0, #9
   16498:	bic	r0, r0, #3
   1649c:	bl	1748c <dcngettext@plt+0x61c0>
   164a0:	subs	r4, r0, #0
   164a4:	beq	164d4 <dcngettext@plt+0x5208>
   164a8:	mov	r8, #0
   164ac:	str	r8, [r4]
   164b0:	mov	r3, #1
   164b4:	strb	r3, [r4, #4]
   164b8:	mov	r7, r4
   164bc:	strb	r8, [r7, #5]!
   164c0:	mov	r2, r5
   164c4:	mov	r1, r6
   164c8:	mov	r0, r7
   164cc:	bl	11008 <memcpy@plt>
   164d0:	strb	r8, [r7, r5]
   164d4:	mov	r0, r4
   164d8:	ldrd	r4, [sp]
   164dc:	ldrd	r6, [sp, #8]
   164e0:	ldr	r8, [sp, #16]
   164e4:	add	sp, sp, #20
   164e8:	pop	{pc}		; (ldr pc, [sp], #4)
   164ec:	mov	r0, #64	; 0x40
   164f0:	bl	1748c <dcngettext@plt+0x61c0>
   164f4:	subs	r4, r0, #0
   164f8:	beq	164d4 <dcngettext@plt+0x5208>
   164fc:	mov	r3, #0
   16500:	str	r3, [r4]
   16504:	strb	r3, [r4, #4]
   16508:	strb	r3, [r4, #5]
   1650c:	b	164d4 <dcngettext@plt+0x5208>
   16510:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16514:	strd	r6, [sp, #8]
   16518:	str	r8, [sp, #16]
   1651c:	str	lr, [sp, #20]
   16520:	ldr	r6, [r1, #40]	; 0x28
   16524:	cmp	r6, #0
   16528:	moveq	r0, #1
   1652c:	beq	16570 <dcngettext@plt+0x52a4>
   16530:	mov	r5, r0
   16534:	mov	r7, r1
   16538:	cmp	r1, r6
   1653c:	bhi	16550 <dcngettext@plt+0x5284>
   16540:	add	r3, r1, #44	; 0x2c
   16544:	cmp	r6, r3
   16548:	movcc	r0, #1
   1654c:	bcc	16570 <dcngettext@plt+0x52a4>
   16550:	ldrb	r3, [r6]
   16554:	cmp	r3, #0
   16558:	addne	r4, r5, #5
   1655c:	bne	165d4 <dcngettext@plt+0x5308>
   16560:	movw	r4, #31800	; 0x7c38
   16564:	movt	r4, #1
   16568:	str	r4, [r7, #40]	; 0x28
   1656c:	mov	r0, #1
   16570:	ldrd	r4, [sp]
   16574:	ldrd	r6, [sp, #8]
   16578:	ldr	r8, [sp, #16]
   1657c:	add	sp, sp, #20
   16580:	pop	{pc}		; (ldr pc, [sp], #4)
   16584:	mov	r0, r6
   16588:	bl	16464 <dcngettext@plt+0x5198>
   1658c:	str	r0, [r5]
   16590:	cmp	r0, #0
   16594:	moveq	r0, #0
   16598:	beq	16570 <dcngettext@plt+0x52a4>
   1659c:	mov	r3, #0
   165a0:	strb	r3, [r0, #4]
   165a4:	add	r4, r0, #5
   165a8:	b	16568 <dcngettext@plt+0x529c>
   165ac:	mov	r0, r4
   165b0:	bl	1117c <strlen@plt>
   165b4:	add	r0, r0, #1
   165b8:	ldrb	r3, [r4, r0]!
   165bc:	cmp	r3, #0
   165c0:	bne	165d4 <dcngettext@plt+0x5308>
   165c4:	ldr	r3, [r5]
   165c8:	cmp	r3, #0
   165cc:	addne	r4, r3, #5
   165d0:	movne	r5, r3
   165d4:	mov	r1, r6
   165d8:	mov	r0, r4
   165dc:	bl	10fc0 <strcmp@plt>
   165e0:	cmp	r0, #0
   165e4:	beq	16568 <dcngettext@plt+0x529c>
   165e8:	ldrb	r3, [r4]
   165ec:	cmp	r3, #0
   165f0:	bne	165ac <dcngettext@plt+0x52e0>
   165f4:	add	r3, r5, #5
   165f8:	cmp	r4, r3
   165fc:	bne	1660c <dcngettext@plt+0x5340>
   16600:	ldrb	r3, [r5, #4]
   16604:	cmp	r3, #0
   16608:	bne	165ac <dcngettext@plt+0x52e0>
   1660c:	mov	r0, r6
   16610:	bl	1117c <strlen@plt>
   16614:	add	r8, r0, #1
   16618:	add	r3, r5, #64	; 0x40
   1661c:	sub	r3, r3, r4
   16620:	cmp	r3, r8
   16624:	ble	16584 <dcngettext@plt+0x52b8>
   16628:	mov	r2, r8
   1662c:	mov	r1, r6
   16630:	mov	r0, r4
   16634:	bl	11008 <memcpy@plt>
   16638:	mov	r3, #0
   1663c:	strb	r3, [r4, r8]
   16640:	b	16568 <dcngettext@plt+0x529c>
   16644:	cmp	r0, #1
   16648:	bxeq	lr
   1664c:	cmp	r0, #0
   16650:	bxeq	lr
   16654:	str	r4, [sp, #-8]!
   16658:	str	lr, [sp, #4]
   1665c:	ldr	r4, [r0]
   16660:	bl	175b0 <dcngettext@plt+0x62e4>
   16664:	mov	r0, r4
   16668:	cmp	r4, #0
   1666c:	bne	1665c <dcngettext@plt+0x5390>
   16670:	ldr	r4, [sp]
   16674:	add	sp, sp, #4
   16678:	pop	{pc}		; (ldr pc, [sp], #4)
   1667c:	strd	r4, [sp, #-16]!
   16680:	str	r6, [sp, #8]
   16684:	str	lr, [sp, #12]
   16688:	mov	r4, r0
   1668c:	movw	r0, #32944	; 0x80b0
   16690:	movt	r0, #1
   16694:	bl	110e0 <getenv@plt>
   16698:	subs	r5, r0, #0
   1669c:	beq	166e4 <dcngettext@plt+0x5418>
   166a0:	ldrb	r3, [r4, #4]
   166a4:	cmp	r3, #0
   166a8:	moveq	r0, #0
   166ac:	beq	166c4 <dcngettext@plt+0x53f8>
   166b0:	mov	r1, r5
   166b4:	add	r0, r4, #5
   166b8:	bl	10fc0 <strcmp@plt>
   166bc:	clz	r0, r0
   166c0:	lsr	r0, r0, #5
   166c4:	cmp	r0, #0
   166c8:	movne	r5, #1
   166cc:	beq	166f4 <dcngettext@plt+0x5428>
   166d0:	mov	r0, r5
   166d4:	ldrd	r4, [sp]
   166d8:	ldr	r6, [sp, #8]
   166dc:	add	sp, sp, #12
   166e0:	pop	{pc}		; (ldr pc, [sp], #4)
   166e4:	ldrb	r0, [r4, #4]
   166e8:	clz	r0, r0
   166ec:	lsr	r0, r0, #5
   166f0:	b	166c4 <dcngettext@plt+0x53f8>
   166f4:	mov	r0, r5
   166f8:	bl	16464 <dcngettext@plt+0x5198>
   166fc:	subs	r5, r0, #0
   16700:	beq	166d0 <dcngettext@plt+0x5404>
   16704:	ldrb	r3, [r4, #4]
   16708:	cmp	r3, #0
   1670c:	addne	r0, r4, #5
   16710:	moveq	r0, #0
   16714:	bl	16428 <dcngettext@plt+0x515c>
   16718:	cmp	r0, #0
   1671c:	beq	16740 <dcngettext@plt+0x5474>
   16720:	bl	11194 <__errno_location@plt>
   16724:	mov	r4, r0
   16728:	ldr	r6, [r0]
   1672c:	mov	r0, r5
   16730:	bl	16644 <dcngettext@plt+0x5378>
   16734:	str	r6, [r4]
   16738:	mov	r5, #0
   1673c:	b	166d0 <dcngettext@plt+0x5404>
   16740:	bl	1108c <tzset@plt>
   16744:	b	166d0 <dcngettext@plt+0x5404>
   16748:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1674c:	strd	r6, [sp, #8]
   16750:	str	r8, [sp, #16]
   16754:	str	lr, [sp, #20]
   16758:	cmp	r0, #1
   1675c:	moveq	r5, #1
   16760:	beq	167a4 <dcngettext@plt+0x54d8>
   16764:	mov	r4, r0
   16768:	bl	11194 <__errno_location@plt>
   1676c:	mov	r6, r0
   16770:	ldr	r7, [r0]
   16774:	ldrb	r3, [r4, #4]
   16778:	cmp	r3, #0
   1677c:	addne	r0, r4, #5
   16780:	moveq	r0, #0
   16784:	bl	16428 <dcngettext@plt+0x515c>
   16788:	cmp	r0, #0
   1678c:	beq	167bc <dcngettext@plt+0x54f0>
   16790:	ldr	r7, [r6]
   16794:	mov	r5, #0
   16798:	mov	r0, r4
   1679c:	bl	16644 <dcngettext@plt+0x5378>
   167a0:	str	r7, [r6]
   167a4:	mov	r0, r5
   167a8:	ldrd	r4, [sp]
   167ac:	ldrd	r6, [sp, #8]
   167b0:	ldr	r8, [sp, #16]
   167b4:	add	sp, sp, #20
   167b8:	pop	{pc}		; (ldr pc, [sp], #4)
   167bc:	bl	1108c <tzset@plt>
   167c0:	mov	r5, #1
   167c4:	b	16798 <dcngettext@plt+0x54cc>
   167c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   167cc:	strd	r6, [sp, #8]
   167d0:	str	r8, [sp, #16]
   167d4:	str	lr, [sp, #20]
   167d8:	mov	r6, r1
   167dc:	mov	r4, r2
   167e0:	subs	r5, r0, #0
   167e4:	beq	16850 <dcngettext@plt+0x5584>
   167e8:	mov	r0, r5
   167ec:	bl	1667c <dcngettext@plt+0x53b0>
   167f0:	subs	r7, r0, #0
   167f4:	moveq	r4, r7
   167f8:	beq	16838 <dcngettext@plt+0x556c>
   167fc:	mov	r1, r4
   16800:	mov	r0, r6
   16804:	bl	11068 <localtime_r@plt>
   16808:	subs	r6, r0, #0
   1680c:	beq	16864 <dcngettext@plt+0x5598>
   16810:	mov	r1, r4
   16814:	mov	r0, r5
   16818:	bl	16510 <dcngettext@plt+0x5244>
   1681c:	mov	r5, r0
   16820:	mov	r0, r7
   16824:	bl	16748 <dcngettext@plt+0x547c>
   16828:	and	r0, r0, r5
   1682c:	uxtb	r0, r0
   16830:	cmp	r0, #0
   16834:	moveq	r4, #0
   16838:	mov	r0, r4
   1683c:	ldrd	r4, [sp]
   16840:	ldrd	r6, [sp, #8]
   16844:	ldr	r8, [sp, #16]
   16848:	add	sp, sp, #20
   1684c:	pop	{pc}		; (ldr pc, [sp], #4)
   16850:	mov	r1, r2
   16854:	mov	r0, r6
   16858:	bl	10fb4 <gmtime_r@plt>
   1685c:	mov	r4, r0
   16860:	b	16838 <dcngettext@plt+0x556c>
   16864:	mov	r0, r7
   16868:	bl	16748 <dcngettext@plt+0x547c>
   1686c:	mov	r4, r6
   16870:	b	16838 <dcngettext@plt+0x556c>
   16874:	strd	r4, [sp, #-20]!	; 0xffffffec
   16878:	strd	r6, [sp, #8]
   1687c:	str	lr, [sp, #16]
   16880:	sub	sp, sp, #52	; 0x34
   16884:	mov	r4, r1
   16888:	subs	r5, r0, #0
   1688c:	beq	16908 <dcngettext@plt+0x563c>
   16890:	mov	r0, r5
   16894:	bl	1667c <dcngettext@plt+0x53b0>
   16898:	subs	r7, r0, #0
   1689c:	beq	16984 <dcngettext@plt+0x56b8>
   168a0:	ldr	r3, [r4]
   168a4:	str	r3, [sp, #4]
   168a8:	ldr	r3, [r4, #4]
   168ac:	str	r3, [sp, #8]
   168b0:	ldr	r3, [r4, #8]
   168b4:	str	r3, [sp, #12]
   168b8:	ldr	r3, [r4, #12]
   168bc:	str	r3, [sp, #16]
   168c0:	ldr	r3, [r4, #16]
   168c4:	str	r3, [sp, #20]
   168c8:	ldr	r3, [r4, #20]
   168cc:	str	r3, [sp, #24]
   168d0:	mvn	r3, #0
   168d4:	str	r3, [sp, #32]
   168d8:	ldr	r3, [r4, #32]
   168dc:	str	r3, [sp, #36]	; 0x24
   168e0:	add	r0, sp, #4
   168e4:	bl	10fcc <mktime@plt>
   168e8:	mov	r6, r0
   168ec:	ldr	r3, [sp, #32]
   168f0:	cmp	r3, #0
   168f4:	bge	16918 <dcngettext@plt+0x564c>
   168f8:	mov	r0, r7
   168fc:	bl	16748 <dcngettext@plt+0x547c>
   16900:	mvn	r6, #0
   16904:	b	1696c <dcngettext@plt+0x56a0>
   16908:	mov	r0, r1
   1690c:	bl	1126c <timegm@plt>
   16910:	mov	r6, r0
   16914:	b	1696c <dcngettext@plt+0x56a0>
   16918:	add	r1, sp, #4
   1691c:	mov	r0, r5
   16920:	bl	16510 <dcngettext@plt+0x5244>
   16924:	mov	r5, r0
   16928:	mov	r0, r7
   1692c:	bl	16748 <dcngettext@plt+0x547c>
   16930:	and	r0, r0, r5
   16934:	tst	r0, #255	; 0xff
   16938:	beq	16900 <dcngettext@plt+0x5634>
   1693c:	ldrd	r2, [sp, #4]
   16940:	strd	r2, [r4]
   16944:	ldrd	r2, [sp, #12]
   16948:	strd	r2, [r4, #8]
   1694c:	ldrd	r2, [sp, #20]
   16950:	strd	r2, [r4, #16]
   16954:	ldrd	r2, [sp, #28]
   16958:	strd	r2, [r4, #24]
   1695c:	ldrd	r2, [sp, #36]	; 0x24
   16960:	strd	r2, [r4, #32]
   16964:	ldr	r3, [sp, #44]	; 0x2c
   16968:	str	r3, [r4, #40]	; 0x28
   1696c:	mov	r0, r6
   16970:	add	sp, sp, #52	; 0x34
   16974:	ldrd	r4, [sp]
   16978:	ldrd	r6, [sp, #8]
   1697c:	add	sp, sp, #16
   16980:	pop	{pc}		; (ldr pc, [sp], #4)
   16984:	mvn	r6, #0
   16988:	b	1696c <dcngettext@plt+0x56a0>
   1698c:	strd	r4, [sp, #-16]!
   16990:	str	r6, [sp, #8]
   16994:	str	lr, [sp, #12]
   16998:	sub	sp, sp, #32
   1699c:	mov	r4, r0
   169a0:	ldr	r5, [sp, #48]	; 0x30
   169a4:	ldr	r6, [sp, #52]	; 0x34
   169a8:	cmp	r1, #0
   169ac:	beq	16a78 <dcngettext@plt+0x57ac>
   169b0:	str	r3, [sp, #4]
   169b4:	str	r2, [sp]
   169b8:	mov	r3, r1
   169bc:	movw	r2, #32948	; 0x80b4
   169c0:	movt	r2, #1
   169c4:	mov	r1, #1
   169c8:	bl	111dc <__fprintf_chk@plt>
   169cc:	mov	r2, #5
   169d0:	movw	r1, #32968	; 0x80c8
   169d4:	movt	r1, #1
   169d8:	mov	r0, #0
   169dc:	bl	11044 <dcgettext@plt>
   169e0:	movw	r3, #2022	; 0x7e6
   169e4:	str	r3, [sp]
   169e8:	mov	r3, r0
   169ec:	movw	r2, #33696	; 0x83a0
   169f0:	movt	r2, #1
   169f4:	mov	r1, #1
   169f8:	mov	r0, r4
   169fc:	bl	111dc <__fprintf_chk@plt>
   16a00:	mov	r1, r4
   16a04:	mov	r0, #10
   16a08:	bl	11038 <fputc_unlocked@plt>
   16a0c:	mov	r2, #5
   16a10:	movw	r1, #32972	; 0x80cc
   16a14:	movt	r1, #1
   16a18:	mov	r0, #0
   16a1c:	bl	11044 <dcgettext@plt>
   16a20:	movw	r3, #33144	; 0x8178
   16a24:	movt	r3, #1
   16a28:	mov	r2, r0
   16a2c:	mov	r1, #1
   16a30:	mov	r0, r4
   16a34:	bl	111dc <__fprintf_chk@plt>
   16a38:	mov	r1, r4
   16a3c:	mov	r0, #10
   16a40:	bl	11038 <fputc_unlocked@plt>
   16a44:	cmp	r6, #9
   16a48:	ldrls	pc, [pc, r6, lsl #2]
   16a4c:	b	16d50 <dcngettext@plt+0x5a84>
   16a50:			; <UNDEFINED> instruction: 0x00016abc
   16a54:	muleq	r1, r4, sl
   16a58:	ldrdeq	r6, [r1], -r0
   16a5c:	andeq	r6, r1, r4, lsl #22
   16a60:	andeq	r6, r1, r0, asr #22
   16a64:	andeq	r6, r1, r4, lsl #23
   16a68:	ldrdeq	r6, [r1], -r0
   16a6c:	andeq	r6, r1, r4, lsr #24
   16a70:	andeq	r6, r1, r0, lsl #25
   16a74:	andeq	r6, r1, r4, ror #25
   16a78:	str	r3, [sp]
   16a7c:	mov	r3, r2
   16a80:	movw	r2, #32960	; 0x80c0
   16a84:	movt	r2, #1
   16a88:	mov	r1, #1
   16a8c:	bl	111dc <__fprintf_chk@plt>
   16a90:	b	169cc <dcngettext@plt+0x5700>
   16a94:	mov	r2, #5
   16a98:	movw	r1, #33180	; 0x819c
   16a9c:	movt	r1, #1
   16aa0:	mov	r0, #0
   16aa4:	bl	11044 <dcgettext@plt>
   16aa8:	ldr	r3, [r5]
   16aac:	mov	r2, r0
   16ab0:	mov	r1, #1
   16ab4:	mov	r0, r4
   16ab8:	bl	111dc <__fprintf_chk@plt>
   16abc:	add	sp, sp, #32
   16ac0:	ldrd	r4, [sp]
   16ac4:	ldr	r6, [sp, #8]
   16ac8:	add	sp, sp, #12
   16acc:	pop	{pc}		; (ldr pc, [sp], #4)
   16ad0:	mov	r2, #5
   16ad4:	movw	r1, #33196	; 0x81ac
   16ad8:	movt	r1, #1
   16adc:	mov	r0, #0
   16ae0:	bl	11044 <dcgettext@plt>
   16ae4:	ldr	r3, [r5, #4]
   16ae8:	str	r3, [sp]
   16aec:	ldr	r3, [r5]
   16af0:	mov	r2, r0
   16af4:	mov	r1, #1
   16af8:	mov	r0, r4
   16afc:	bl	111dc <__fprintf_chk@plt>
   16b00:	b	16abc <dcngettext@plt+0x57f0>
   16b04:	mov	r2, #5
   16b08:	movw	r1, #33220	; 0x81c4
   16b0c:	movt	r1, #1
   16b10:	mov	r0, #0
   16b14:	bl	11044 <dcgettext@plt>
   16b18:	ldr	r3, [r5, #8]
   16b1c:	str	r3, [sp, #4]
   16b20:	ldr	r3, [r5, #4]
   16b24:	str	r3, [sp]
   16b28:	ldr	r3, [r5]
   16b2c:	mov	r2, r0
   16b30:	mov	r1, #1
   16b34:	mov	r0, r4
   16b38:	bl	111dc <__fprintf_chk@plt>
   16b3c:	b	16abc <dcngettext@plt+0x57f0>
   16b40:	mov	r2, #5
   16b44:	movw	r1, #33248	; 0x81e0
   16b48:	movt	r1, #1
   16b4c:	mov	r0, #0
   16b50:	bl	11044 <dcgettext@plt>
   16b54:	ldr	r3, [r5, #12]
   16b58:	str	r3, [sp, #8]
   16b5c:	ldr	r3, [r5, #8]
   16b60:	str	r3, [sp, #4]
   16b64:	ldr	r3, [r5, #4]
   16b68:	str	r3, [sp]
   16b6c:	ldr	r3, [r5]
   16b70:	mov	r2, r0
   16b74:	mov	r1, #1
   16b78:	mov	r0, r4
   16b7c:	bl	111dc <__fprintf_chk@plt>
   16b80:	b	16abc <dcngettext@plt+0x57f0>
   16b84:	mov	r2, #5
   16b88:	movw	r1, #33280	; 0x8200
   16b8c:	movt	r1, #1
   16b90:	mov	r0, #0
   16b94:	bl	11044 <dcgettext@plt>
   16b98:	ldr	r3, [r5, #16]
   16b9c:	str	r3, [sp, #12]
   16ba0:	ldr	r3, [r5, #12]
   16ba4:	str	r3, [sp, #8]
   16ba8:	ldr	r3, [r5, #8]
   16bac:	str	r3, [sp, #4]
   16bb0:	ldr	r3, [r5, #4]
   16bb4:	str	r3, [sp]
   16bb8:	ldr	r3, [r5]
   16bbc:	mov	r2, r0
   16bc0:	mov	r1, #1
   16bc4:	mov	r0, r4
   16bc8:	bl	111dc <__fprintf_chk@plt>
   16bcc:	b	16abc <dcngettext@plt+0x57f0>
   16bd0:	mov	r2, #5
   16bd4:	movw	r1, #33316	; 0x8224
   16bd8:	movt	r1, #1
   16bdc:	mov	r0, #0
   16be0:	bl	11044 <dcgettext@plt>
   16be4:	ldr	r3, [r5, #20]
   16be8:	str	r3, [sp, #16]
   16bec:	ldr	r3, [r5, #16]
   16bf0:	str	r3, [sp, #12]
   16bf4:	ldr	r3, [r5, #12]
   16bf8:	str	r3, [sp, #8]
   16bfc:	ldr	r3, [r5, #8]
   16c00:	str	r3, [sp, #4]
   16c04:	ldr	r3, [r5, #4]
   16c08:	str	r3, [sp]
   16c0c:	ldr	r3, [r5]
   16c10:	mov	r2, r0
   16c14:	mov	r1, #1
   16c18:	mov	r0, r4
   16c1c:	bl	111dc <__fprintf_chk@plt>
   16c20:	b	16abc <dcngettext@plt+0x57f0>
   16c24:	mov	r2, #5
   16c28:	movw	r1, #33356	; 0x824c
   16c2c:	movt	r1, #1
   16c30:	mov	r0, #0
   16c34:	bl	11044 <dcgettext@plt>
   16c38:	ldr	r3, [r5, #24]
   16c3c:	str	r3, [sp, #20]
   16c40:	ldr	r3, [r5, #20]
   16c44:	str	r3, [sp, #16]
   16c48:	ldr	r3, [r5, #16]
   16c4c:	str	r3, [sp, #12]
   16c50:	ldr	r3, [r5, #12]
   16c54:	str	r3, [sp, #8]
   16c58:	ldr	r3, [r5, #8]
   16c5c:	str	r3, [sp, #4]
   16c60:	ldr	r3, [r5, #4]
   16c64:	str	r3, [sp]
   16c68:	ldr	r3, [r5]
   16c6c:	mov	r2, r0
   16c70:	mov	r1, #1
   16c74:	mov	r0, r4
   16c78:	bl	111dc <__fprintf_chk@plt>
   16c7c:	b	16abc <dcngettext@plt+0x57f0>
   16c80:	mov	r2, #5
   16c84:	movw	r1, #33400	; 0x8278
   16c88:	movt	r1, #1
   16c8c:	mov	r0, #0
   16c90:	bl	11044 <dcgettext@plt>
   16c94:	ldr	r3, [r5, #28]
   16c98:	str	r3, [sp, #24]
   16c9c:	ldr	r3, [r5, #24]
   16ca0:	str	r3, [sp, #20]
   16ca4:	ldr	r3, [r5, #20]
   16ca8:	str	r3, [sp, #16]
   16cac:	ldr	r3, [r5, #16]
   16cb0:	str	r3, [sp, #12]
   16cb4:	ldr	r3, [r5, #12]
   16cb8:	str	r3, [sp, #8]
   16cbc:	ldr	r3, [r5, #8]
   16cc0:	str	r3, [sp, #4]
   16cc4:	ldr	r3, [r5, #4]
   16cc8:	str	r3, [sp]
   16ccc:	ldr	r3, [r5]
   16cd0:	mov	r2, r0
   16cd4:	mov	r1, #1
   16cd8:	mov	r0, r4
   16cdc:	bl	111dc <__fprintf_chk@plt>
   16ce0:	b	16abc <dcngettext@plt+0x57f0>
   16ce4:	mov	r2, #5
   16ce8:	movw	r1, #33448	; 0x82a8
   16cec:	movt	r1, #1
   16cf0:	mov	r0, #0
   16cf4:	bl	11044 <dcgettext@plt>
   16cf8:	ldr	r3, [r5, #32]
   16cfc:	str	r3, [sp, #28]
   16d00:	ldr	r3, [r5, #28]
   16d04:	str	r3, [sp, #24]
   16d08:	ldr	r3, [r5, #24]
   16d0c:	str	r3, [sp, #20]
   16d10:	ldr	r3, [r5, #20]
   16d14:	str	r3, [sp, #16]
   16d18:	ldr	r3, [r5, #16]
   16d1c:	str	r3, [sp, #12]
   16d20:	ldr	r3, [r5, #12]
   16d24:	str	r3, [sp, #8]
   16d28:	ldr	r3, [r5, #8]
   16d2c:	str	r3, [sp, #4]
   16d30:	ldr	r3, [r5, #4]
   16d34:	str	r3, [sp]
   16d38:	ldr	r3, [r5]
   16d3c:	mov	r2, r0
   16d40:	mov	r1, #1
   16d44:	mov	r0, r4
   16d48:	bl	111dc <__fprintf_chk@plt>
   16d4c:	b	16abc <dcngettext@plt+0x57f0>
   16d50:	mov	r2, #5
   16d54:	movw	r1, #33500	; 0x82dc
   16d58:	movt	r1, #1
   16d5c:	mov	r0, #0
   16d60:	bl	11044 <dcgettext@plt>
   16d64:	ldr	r3, [r5, #32]
   16d68:	str	r3, [sp, #28]
   16d6c:	ldr	r3, [r5, #28]
   16d70:	str	r3, [sp, #24]
   16d74:	ldr	r3, [r5, #24]
   16d78:	str	r3, [sp, #20]
   16d7c:	ldr	r3, [r5, #20]
   16d80:	str	r3, [sp, #16]
   16d84:	ldr	r3, [r5, #16]
   16d88:	str	r3, [sp, #12]
   16d8c:	ldr	r3, [r5, #12]
   16d90:	str	r3, [sp, #8]
   16d94:	ldr	r3, [r5, #8]
   16d98:	str	r3, [sp, #4]
   16d9c:	ldr	r3, [r5, #4]
   16da0:	str	r3, [sp]
   16da4:	ldr	r3, [r5]
   16da8:	mov	r2, r0
   16dac:	mov	r1, #1
   16db0:	mov	r0, r4
   16db4:	bl	111dc <__fprintf_chk@plt>
   16db8:	b	16abc <dcngettext@plt+0x57f0>
   16dbc:	strd	r4, [sp, #-12]!
   16dc0:	str	lr, [sp, #8]
   16dc4:	sub	sp, sp, #12
   16dc8:	ldr	r5, [sp, #24]
   16dcc:	ldr	ip, [r5]
   16dd0:	cmp	ip, #0
   16dd4:	beq	16e0c <dcngettext@plt+0x5b40>
   16dd8:	mov	lr, r5
   16ddc:	mov	ip, #0
   16de0:	add	ip, ip, #1
   16de4:	ldr	r4, [lr, #4]!
   16de8:	cmp	r4, #0
   16dec:	bne	16de0 <dcngettext@plt+0x5b14>
   16df0:	str	ip, [sp, #4]
   16df4:	str	r5, [sp]
   16df8:	bl	1698c <dcngettext@plt+0x56c0>
   16dfc:	add	sp, sp, #12
   16e00:	ldrd	r4, [sp]
   16e04:	add	sp, sp, #8
   16e08:	pop	{pc}		; (ldr pc, [sp], #4)
   16e0c:	mov	ip, #0
   16e10:	b	16df0 <dcngettext@plt+0x5b24>
   16e14:	strd	r4, [sp, #-12]!
   16e18:	str	lr, [sp, #8]
   16e1c:	sub	sp, sp, #52	; 0x34
   16e20:	ldr	r5, [sp, #64]	; 0x40
   16e24:	add	r4, sp, #8
   16e28:	mov	ip, #0
   16e2c:	ldr	lr, [r5], #4
   16e30:	str	lr, [r4], #4
   16e34:	cmp	lr, #0
   16e38:	beq	16e48 <dcngettext@plt+0x5b7c>
   16e3c:	add	ip, ip, #1
   16e40:	cmp	ip, #10
   16e44:	bne	16e2c <dcngettext@plt+0x5b60>
   16e48:	str	ip, [sp, #4]
   16e4c:	add	ip, sp, #8
   16e50:	str	ip, [sp]
   16e54:	bl	1698c <dcngettext@plt+0x56c0>
   16e58:	add	sp, sp, #52	; 0x34
   16e5c:	ldrd	r4, [sp]
   16e60:	add	sp, sp, #8
   16e64:	pop	{pc}		; (ldr pc, [sp], #4)
   16e68:	push	{r3}		; (str r3, [sp, #-4]!)
   16e6c:	push	{lr}		; (str lr, [sp, #-4]!)
   16e70:	sub	sp, sp, #16
   16e74:	add	r3, sp, #24
   16e78:	str	r3, [sp, #12]
   16e7c:	str	r3, [sp]
   16e80:	ldr	r3, [sp, #20]
   16e84:	bl	16e14 <dcngettext@plt+0x5b48>
   16e88:	add	sp, sp, #16
   16e8c:	pop	{lr}		; (ldr lr, [sp], #4)
   16e90:	add	sp, sp, #4
   16e94:	bx	lr
   16e98:	str	r4, [sp, #-8]!
   16e9c:	str	lr, [sp, #4]
   16ea0:	movw	r3, #37260	; 0x918c
   16ea4:	movt	r3, #2
   16ea8:	ldr	r1, [r3]
   16eac:	mov	r0, #10
   16eb0:	bl	11038 <fputc_unlocked@plt>
   16eb4:	mov	r2, #5
   16eb8:	movw	r1, #33560	; 0x8318
   16ebc:	movt	r1, #1
   16ec0:	mov	r0, #0
   16ec4:	bl	11044 <dcgettext@plt>
   16ec8:	movw	r2, #33580	; 0x832c
   16ecc:	movt	r2, #1
   16ed0:	mov	r1, r0
   16ed4:	mov	r0, #1
   16ed8:	bl	111c4 <__printf_chk@plt>
   16edc:	mov	r2, #5
   16ee0:	movw	r1, #33604	; 0x8344
   16ee4:	movt	r1, #1
   16ee8:	mov	r0, #0
   16eec:	bl	11044 <dcgettext@plt>
   16ef0:	movw	r3, #31884	; 0x7c8c
   16ef4:	movt	r3, #1
   16ef8:	movw	r2, #31924	; 0x7cb4
   16efc:	movt	r2, #1
   16f00:	mov	r1, r0
   16f04:	mov	r0, #1
   16f08:	bl	111c4 <__printf_chk@plt>
   16f0c:	mov	r2, #5
   16f10:	movw	r1, #33624	; 0x8358
   16f14:	movt	r1, #1
   16f18:	mov	r0, #0
   16f1c:	bl	11044 <dcgettext@plt>
   16f20:	movw	r2, #33664	; 0x8380
   16f24:	movt	r2, #1
   16f28:	mov	r1, r0
   16f2c:	mov	r0, #1
   16f30:	bl	111c4 <__printf_chk@plt>
   16f34:	ldr	r4, [sp]
   16f38:	add	sp, sp, #4
   16f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   16f40:	str	r4, [sp, #-8]!
   16f44:	str	lr, [sp, #4]
   16f48:	bl	1748c <dcngettext@plt+0x61c0>
   16f4c:	cmp	r0, #0
   16f50:	beq	16f60 <dcngettext@plt+0x5c94>
   16f54:	ldr	r4, [sp]
   16f58:	add	sp, sp, #4
   16f5c:	pop	{pc}		; (ldr pc, [sp], #4)
   16f60:	bl	173d4 <dcngettext@plt+0x6108>
   16f64:	str	r4, [sp, #-8]!
   16f68:	str	lr, [sp, #4]
   16f6c:	bl	1748c <dcngettext@plt+0x61c0>
   16f70:	cmp	r0, #0
   16f74:	beq	16f84 <dcngettext@plt+0x5cb8>
   16f78:	ldr	r4, [sp]
   16f7c:	add	sp, sp, #4
   16f80:	pop	{pc}		; (ldr pc, [sp], #4)
   16f84:	bl	173d4 <dcngettext@plt+0x6108>
   16f88:	str	r4, [sp, #-8]!
   16f8c:	str	lr, [sp, #4]
   16f90:	bl	16f40 <dcngettext@plt+0x5c74>
   16f94:	ldr	r4, [sp]
   16f98:	add	sp, sp, #4
   16f9c:	pop	{pc}		; (ldr pc, [sp], #4)
   16fa0:	strd	r4, [sp, #-16]!
   16fa4:	str	r6, [sp, #8]
   16fa8:	str	lr, [sp, #12]
   16fac:	mov	r5, r0
   16fb0:	mov	r4, r1
   16fb4:	bl	174c8 <dcngettext@plt+0x61fc>
   16fb8:	cmp	r0, #0
   16fbc:	beq	16fd0 <dcngettext@plt+0x5d04>
   16fc0:	ldrd	r4, [sp]
   16fc4:	ldr	r6, [sp, #8]
   16fc8:	add	sp, sp, #12
   16fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   16fd0:	adds	r4, r4, #0
   16fd4:	movne	r4, #1
   16fd8:	cmp	r5, #0
   16fdc:	moveq	r4, #1
   16fe0:	cmp	r4, #0
   16fe4:	beq	16fc0 <dcngettext@plt+0x5cf4>
   16fe8:	bl	173d4 <dcngettext@plt+0x6108>
   16fec:	str	r4, [sp, #-8]!
   16ff0:	str	lr, [sp, #4]
   16ff4:	cmp	r1, #0
   16ff8:	orreq	r1, r1, #1
   16ffc:	bl	174c8 <dcngettext@plt+0x61fc>
   17000:	cmp	r0, #0
   17004:	beq	17014 <dcngettext@plt+0x5d48>
   17008:	ldr	r4, [sp]
   1700c:	add	sp, sp, #4
   17010:	pop	{pc}		; (ldr pc, [sp], #4)
   17014:	bl	173d4 <dcngettext@plt+0x6108>
   17018:	strd	r4, [sp, #-16]!
   1701c:	str	r6, [sp, #8]
   17020:	str	lr, [sp, #12]
   17024:	mov	r4, r0
   17028:	mov	r6, r1
   1702c:	mov	r5, r2
   17030:	bl	176c4 <dcngettext@plt+0x63f8>
   17034:	cmp	r0, #0
   17038:	beq	1704c <dcngettext@plt+0x5d80>
   1703c:	ldrd	r4, [sp]
   17040:	ldr	r6, [sp, #8]
   17044:	add	sp, sp, #12
   17048:	pop	{pc}		; (ldr pc, [sp], #4)
   1704c:	cmp	r4, #0
   17050:	beq	17060 <dcngettext@plt+0x5d94>
   17054:	cmp	r6, #0
   17058:	cmpne	r5, #0
   1705c:	beq	1703c <dcngettext@plt+0x5d70>
   17060:	bl	173d4 <dcngettext@plt+0x6108>
   17064:	str	r4, [sp, #-8]!
   17068:	str	lr, [sp, #4]
   1706c:	bl	17018 <dcngettext@plt+0x5d4c>
   17070:	ldr	r4, [sp]
   17074:	add	sp, sp, #4
   17078:	pop	{pc}		; (ldr pc, [sp], #4)
   1707c:	str	r4, [sp, #-8]!
   17080:	str	lr, [sp, #4]
   17084:	mov	ip, r1
   17088:	mov	r3, r2
   1708c:	cmp	r2, #0
   17090:	cmpne	r1, #0
   17094:	moveq	r3, #1
   17098:	moveq	ip, r3
   1709c:	mov	r2, r3
   170a0:	mov	r1, ip
   170a4:	bl	176c4 <dcngettext@plt+0x63f8>
   170a8:	cmp	r0, #0
   170ac:	beq	170bc <dcngettext@plt+0x5df0>
   170b0:	ldr	r4, [sp]
   170b4:	add	sp, sp, #4
   170b8:	pop	{pc}		; (ldr pc, [sp], #4)
   170bc:	bl	173d4 <dcngettext@plt+0x6108>
   170c0:	str	r4, [sp, #-8]!
   170c4:	str	lr, [sp, #4]
   170c8:	mov	r2, r1
   170cc:	mov	r1, r0
   170d0:	mov	r0, #0
   170d4:	bl	17018 <dcngettext@plt+0x5d4c>
   170d8:	ldr	r4, [sp]
   170dc:	add	sp, sp, #4
   170e0:	pop	{pc}		; (ldr pc, [sp], #4)
   170e4:	str	r4, [sp, #-8]!
   170e8:	str	lr, [sp, #4]
   170ec:	mov	r2, r1
   170f0:	mov	r1, r0
   170f4:	mov	r0, #0
   170f8:	bl	1707c <dcngettext@plt+0x5db0>
   170fc:	ldr	r4, [sp]
   17100:	add	sp, sp, #4
   17104:	pop	{pc}		; (ldr pc, [sp], #4)
   17108:	strd	r4, [sp, #-16]!
   1710c:	str	r6, [sp, #8]
   17110:	str	lr, [sp, #12]
   17114:	mov	r5, r1
   17118:	ldr	r4, [r1]
   1711c:	cmp	r0, #0
   17120:	beq	17150 <dcngettext@plt+0x5e84>
   17124:	lsr	r3, r4, #1
   17128:	add	r3, r3, #1
   1712c:	adds	r4, r4, r3
   17130:	bcs	1716c <dcngettext@plt+0x5ea0>
   17134:	mov	r1, r4
   17138:	bl	17018 <dcngettext@plt+0x5d4c>
   1713c:	str	r4, [r5]
   17140:	ldrd	r4, [sp]
   17144:	ldr	r6, [sp, #8]
   17148:	add	sp, sp, #12
   1714c:	pop	{pc}		; (ldr pc, [sp], #4)
   17150:	cmp	r4, #0
   17154:	bne	17134 <dcngettext@plt+0x5e68>
   17158:	mov	r4, #64	; 0x40
   1715c:	udiv	r4, r4, r2
   17160:	cmp	r2, #64	; 0x40
   17164:	addhi	r4, r4, #1
   17168:	b	17134 <dcngettext@plt+0x5e68>
   1716c:	bl	173d4 <dcngettext@plt+0x6108>
   17170:	str	r4, [sp, #-8]!
   17174:	str	lr, [sp, #4]
   17178:	mov	r2, #1
   1717c:	bl	17108 <dcngettext@plt+0x5e3c>
   17180:	ldr	r4, [sp]
   17184:	add	sp, sp, #4
   17188:	pop	{pc}		; (ldr pc, [sp], #4)
   1718c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17190:	strd	r6, [sp, #8]
   17194:	str	r8, [sp, #16]
   17198:	str	lr, [sp, #20]
   1719c:	mov	r5, r1
   171a0:	ldr	lr, [sp, #24]
   171a4:	ldr	ip, [r1]
   171a8:	asr	r4, ip, #1
   171ac:	adds	r4, ip, r4
   171b0:	movvs	r1, #1
   171b4:	movvc	r1, #0
   171b8:	cmp	r1, #0
   171bc:	mvnne	r4, #-2147483648	; 0x80000000
   171c0:	mvn	r8, r3
   171c4:	lsr	r8, r8, #31
   171c8:	cmp	r3, r4
   171cc:	movge	r1, #0
   171d0:	andlt	r1, r8, #1
   171d4:	cmp	r1, #0
   171d8:	movne	r4, r3
   171dc:	smull	r6, r7, r4, lr
   171e0:	asr	r1, r6, #31
   171e4:	cmp	r1, r7
   171e8:	bne	17200 <dcngettext@plt+0x5f34>
   171ec:	mov	r1, r6
   171f0:	cmp	r6, #63	; 0x3f
   171f4:	movle	r1, #64	; 0x40
   171f8:	ble	17204 <dcngettext@plt+0x5f38>
   171fc:	b	17210 <dcngettext@plt+0x5f44>
   17200:	mvn	r1, #-2147483648	; 0x80000000
   17204:	sdiv	r4, r1, lr
   17208:	mls	r6, lr, r4, r1
   1720c:	sub	r1, r1, r6
   17210:	cmp	r0, #0
   17214:	moveq	r6, #0
   17218:	streq	r6, [r5]
   1721c:	sub	r6, r4, ip
   17220:	cmp	r6, r2
   17224:	bge	1725c <dcngettext@plt+0x5f90>
   17228:	adds	r2, ip, r2
   1722c:	mov	r4, r2
   17230:	bvs	17278 <dcngettext@plt+0x5fac>
   17234:	cmp	r2, r3
   17238:	movle	r3, #0
   1723c:	andgt	r3, r8, #1
   17240:	cmp	r3, #0
   17244:	bne	17278 <dcngettext@plt+0x5fac>
   17248:	smull	r2, r3, r2, lr
   1724c:	asr	ip, r2, #31
   17250:	mov	r1, r2
   17254:	cmp	ip, r3
   17258:	bne	17278 <dcngettext@plt+0x5fac>
   1725c:	bl	16fa0 <dcngettext@plt+0x5cd4>
   17260:	str	r4, [r5]
   17264:	ldrd	r4, [sp]
   17268:	ldrd	r6, [sp, #8]
   1726c:	ldr	r8, [sp, #16]
   17270:	add	sp, sp, #20
   17274:	pop	{pc}		; (ldr pc, [sp], #4)
   17278:	bl	173d4 <dcngettext@plt+0x6108>
   1727c:	str	r4, [sp, #-8]!
   17280:	str	lr, [sp, #4]
   17284:	bl	17418 <dcngettext@plt+0x614c>
   17288:	cmp	r0, #0
   1728c:	beq	1729c <dcngettext@plt+0x5fd0>
   17290:	ldr	r4, [sp]
   17294:	add	sp, sp, #4
   17298:	pop	{pc}		; (ldr pc, [sp], #4)
   1729c:	bl	173d4 <dcngettext@plt+0x6108>
   172a0:	str	r4, [sp, #-8]!
   172a4:	str	lr, [sp, #4]
   172a8:	mov	r1, #1
   172ac:	bl	1727c <dcngettext@plt+0x5fb0>
   172b0:	ldr	r4, [sp]
   172b4:	add	sp, sp, #4
   172b8:	pop	{pc}		; (ldr pc, [sp], #4)
   172bc:	str	r4, [sp, #-8]!
   172c0:	str	lr, [sp, #4]
   172c4:	bl	17418 <dcngettext@plt+0x614c>
   172c8:	cmp	r0, #0
   172cc:	beq	172dc <dcngettext@plt+0x6010>
   172d0:	ldr	r4, [sp]
   172d4:	add	sp, sp, #4
   172d8:	pop	{pc}		; (ldr pc, [sp], #4)
   172dc:	bl	173d4 <dcngettext@plt+0x6108>
   172e0:	str	r4, [sp, #-8]!
   172e4:	str	lr, [sp, #4]
   172e8:	mov	r1, #1
   172ec:	bl	172bc <dcngettext@plt+0x5ff0>
   172f0:	ldr	r4, [sp]
   172f4:	add	sp, sp, #4
   172f8:	pop	{pc}		; (ldr pc, [sp], #4)
   172fc:	strd	r4, [sp, #-16]!
   17300:	str	r6, [sp, #8]
   17304:	str	lr, [sp, #12]
   17308:	mov	r5, r0
   1730c:	mov	r4, r1
   17310:	mov	r0, r1
   17314:	bl	16f40 <dcngettext@plt+0x5c74>
   17318:	mov	r2, r4
   1731c:	mov	r1, r5
   17320:	bl	11008 <memcpy@plt>
   17324:	ldrd	r4, [sp]
   17328:	ldr	r6, [sp, #8]
   1732c:	add	sp, sp, #12
   17330:	pop	{pc}		; (ldr pc, [sp], #4)
   17334:	strd	r4, [sp, #-16]!
   17338:	str	r6, [sp, #8]
   1733c:	str	lr, [sp, #12]
   17340:	mov	r5, r0
   17344:	mov	r4, r1
   17348:	mov	r0, r1
   1734c:	bl	16f64 <dcngettext@plt+0x5c98>
   17350:	mov	r2, r4
   17354:	mov	r1, r5
   17358:	bl	11008 <memcpy@plt>
   1735c:	ldrd	r4, [sp]
   17360:	ldr	r6, [sp, #8]
   17364:	add	sp, sp, #12
   17368:	pop	{pc}		; (ldr pc, [sp], #4)
   1736c:	strd	r4, [sp, #-16]!
   17370:	str	r6, [sp, #8]
   17374:	str	lr, [sp, #12]
   17378:	mov	r5, r0
   1737c:	mov	r4, r1
   17380:	add	r0, r1, #1
   17384:	bl	16f64 <dcngettext@plt+0x5c98>
   17388:	mov	r2, #0
   1738c:	strb	r2, [r0, r4]
   17390:	mov	r2, r4
   17394:	mov	r1, r5
   17398:	bl	11008 <memcpy@plt>
   1739c:	ldrd	r4, [sp]
   173a0:	ldr	r6, [sp, #8]
   173a4:	add	sp, sp, #12
   173a8:	pop	{pc}		; (ldr pc, [sp], #4)
   173ac:	str	r4, [sp, #-8]!
   173b0:	str	lr, [sp, #4]
   173b4:	mov	r4, r0
   173b8:	bl	1117c <strlen@plt>
   173bc:	add	r1, r0, #1
   173c0:	mov	r0, r4
   173c4:	bl	172fc <dcngettext@plt+0x6030>
   173c8:	ldr	r4, [sp]
   173cc:	add	sp, sp, #4
   173d0:	pop	{pc}		; (ldr pc, [sp], #4)
   173d4:	str	r4, [sp, #-8]!
   173d8:	str	lr, [sp, #4]
   173dc:	movw	r3, #37172	; 0x9134
   173e0:	movt	r3, #2
   173e4:	ldr	r4, [r3]
   173e8:	mov	r2, #5
   173ec:	movw	r1, #33744	; 0x83d0
   173f0:	movt	r1, #1
   173f4:	mov	r0, #0
   173f8:	bl	11044 <dcgettext@plt>
   173fc:	mov	r3, r0
   17400:	movw	r2, #32544	; 0x7f20
   17404:	movt	r2, #1
   17408:	mov	r1, #0
   1740c:	mov	r0, r4
   17410:	bl	110d4 <error@plt>
   17414:	bl	112b4 <abort@plt>
   17418:	strd	r4, [sp, #-16]!
   1741c:	str	r6, [sp, #8]
   17420:	str	lr, [sp, #12]
   17424:	cmp	r1, #0
   17428:	cmpne	r0, #0
   1742c:	beq	17468 <dcngettext@plt+0x619c>
   17430:	mov	r2, r0
   17434:	mov	r3, r1
   17438:	umull	r4, r5, r0, r1
   1743c:	adds	r1, r5, #0
   17440:	movne	r1, #1
   17444:	cmp	r4, #0
   17448:	movlt	r1, #1
   1744c:	cmp	r1, #0
   17450:	beq	17470 <dcngettext@plt+0x61a4>
   17454:	bl	11194 <__errno_location@plt>
   17458:	mov	r3, #12
   1745c:	str	r3, [r0]
   17460:	mov	r0, #0
   17464:	b	1747c <dcngettext@plt+0x61b0>
   17468:	mov	r3, #1
   1746c:	mov	r2, r3
   17470:	mov	r1, r3
   17474:	mov	r0, r2
   17478:	bl	10f90 <calloc@plt>
   1747c:	ldrd	r4, [sp]
   17480:	ldr	r6, [sp, #8]
   17484:	add	sp, sp, #12
   17488:	pop	{pc}		; (ldr pc, [sp], #4)
   1748c:	str	r4, [sp, #-8]!
   17490:	str	lr, [sp, #4]
   17494:	cmp	r0, #0
   17498:	beq	174b4 <dcngettext@plt+0x61e8>
   1749c:	bge	174b8 <dcngettext@plt+0x61ec>
   174a0:	bl	11194 <__errno_location@plt>
   174a4:	mov	r3, #12
   174a8:	str	r3, [r0]
   174ac:	mov	r0, #0
   174b0:	b	174bc <dcngettext@plt+0x61f0>
   174b4:	mov	r0, #1
   174b8:	bl	110ec <malloc@plt>
   174bc:	ldr	r4, [sp]
   174c0:	add	sp, sp, #4
   174c4:	pop	{pc}		; (ldr pc, [sp], #4)
   174c8:	str	r4, [sp, #-8]!
   174cc:	str	lr, [sp, #4]
   174d0:	cmp	r0, #0
   174d4:	beq	174f8 <dcngettext@plt+0x622c>
   174d8:	cmp	r1, #0
   174dc:	beq	17504 <dcngettext@plt+0x6238>
   174e0:	cmp	r1, #0
   174e4:	blt	17510 <dcngettext@plt+0x6244>
   174e8:	bl	1105c <realloc@plt>
   174ec:	ldr	r4, [sp]
   174f0:	add	sp, sp, #4
   174f4:	pop	{pc}		; (ldr pc, [sp], #4)
   174f8:	mov	r0, r1
   174fc:	bl	1748c <dcngettext@plt+0x61c0>
   17500:	b	174ec <dcngettext@plt+0x6220>
   17504:	bl	175b0 <dcngettext@plt+0x62e4>
   17508:	mov	r0, #0
   1750c:	b	174ec <dcngettext@plt+0x6220>
   17510:	bl	11194 <__errno_location@plt>
   17514:	mov	r3, #12
   17518:	str	r3, [r0]
   1751c:	mov	r0, #0
   17520:	b	174ec <dcngettext@plt+0x6220>
   17524:	strd	r4, [sp, #-16]!
   17528:	str	r6, [sp, #8]
   1752c:	str	lr, [sp, #12]
   17530:	mov	r5, r0
   17534:	bl	110bc <__fpending@plt>
   17538:	mov	r6, r0
   1753c:	ldr	r4, [r5]
   17540:	and	r4, r4, #32
   17544:	mov	r0, r5
   17548:	bl	11fd0 <dcngettext@plt+0xd04>
   1754c:	cmp	r4, #0
   17550:	bne	17584 <dcngettext@plt+0x62b8>
   17554:	cmp	r0, #0
   17558:	beq	17574 <dcngettext@plt+0x62a8>
   1755c:	cmp	r6, #0
   17560:	bne	175a0 <dcngettext@plt+0x62d4>
   17564:	bl	11194 <__errno_location@plt>
   17568:	ldr	r0, [r0]
   1756c:	subs	r0, r0, #9
   17570:	mvnne	r0, #0
   17574:	ldrd	r4, [sp]
   17578:	ldr	r6, [sp, #8]
   1757c:	add	sp, sp, #12
   17580:	pop	{pc}		; (ldr pc, [sp], #4)
   17584:	cmp	r0, #0
   17588:	bne	175a8 <dcngettext@plt+0x62dc>
   1758c:	bl	11194 <__errno_location@plt>
   17590:	mov	r3, #0
   17594:	str	r3, [r0]
   17598:	mvn	r0, #0
   1759c:	b	17574 <dcngettext@plt+0x62a8>
   175a0:	mvn	r0, #0
   175a4:	b	17574 <dcngettext@plt+0x62a8>
   175a8:	mvn	r0, #0
   175ac:	b	17574 <dcngettext@plt+0x62a8>
   175b0:	strd	r4, [sp, #-12]!
   175b4:	str	lr, [sp, #8]
   175b8:	sub	sp, sp, #12
   175bc:	mov	r5, r0
   175c0:	bl	11194 <__errno_location@plt>
   175c4:	mov	r4, r0
   175c8:	ldr	r3, [r0]
   175cc:	str	r3, [sp]
   175d0:	str	r3, [sp, #4]
   175d4:	mov	r3, #0
   175d8:	str	r3, [r0]
   175dc:	mov	r0, r5
   175e0:	bl	10ff0 <free@plt>
   175e4:	ldr	r3, [r4]
   175e8:	clz	r3, r3
   175ec:	lsr	r3, r3, #5
   175f0:	add	r2, sp, #8
   175f4:	add	r3, r2, r3, lsl #2
   175f8:	ldr	r3, [r3, #-8]
   175fc:	str	r3, [r4]
   17600:	add	sp, sp, #12
   17604:	ldrd	r4, [sp]
   17608:	add	sp, sp, #8
   1760c:	pop	{pc}		; (ldr pc, [sp], #4)
   17610:	str	r4, [sp, #-8]!
   17614:	str	lr, [sp, #4]
   17618:	mov	r0, #14
   1761c:	bl	11248 <nl_langinfo@plt>
   17620:	cmp	r0, #0
   17624:	beq	17648 <dcngettext@plt+0x637c>
   17628:	ldrb	r2, [r0]
   1762c:	movw	r3, #33764	; 0x83e4
   17630:	movt	r3, #1
   17634:	cmp	r2, #0
   17638:	moveq	r0, r3
   1763c:	ldr	r4, [sp]
   17640:	add	sp, sp, #4
   17644:	pop	{pc}		; (ldr pc, [sp], #4)
   17648:	movw	r0, #33764	; 0x83e4
   1764c:	movt	r0, #1
   17650:	b	1763c <dcngettext@plt+0x6370>
   17654:	strd	r4, [sp, #-20]!	; 0xffffffec
   17658:	strd	r6, [sp, #8]
   1765c:	str	lr, [sp, #16]
   17660:	sub	sp, sp, #12
   17664:	mov	r7, r1
   17668:	mov	r5, r2
   1766c:	subs	r6, r0, #0
   17670:	addeq	r6, sp, #4
   17674:	mov	r0, r6
   17678:	bl	110c8 <mbrtowc@plt>
   1767c:	mov	r4, r0
   17680:	cmp	r5, #0
   17684:	cmnne	r0, #3
   17688:	bhi	176a4 <dcngettext@plt+0x63d8>
   1768c:	mov	r0, r4
   17690:	add	sp, sp, #12
   17694:	ldrd	r4, [sp]
   17698:	ldrd	r6, [sp, #8]
   1769c:	add	sp, sp, #16
   176a0:	pop	{pc}		; (ldr pc, [sp], #4)
   176a4:	mov	r0, #0
   176a8:	bl	17700 <dcngettext@plt+0x6434>
   176ac:	cmp	r0, #0
   176b0:	bne	1768c <dcngettext@plt+0x63c0>
   176b4:	ldrb	r3, [r7]
   176b8:	str	r3, [r6]
   176bc:	mov	r4, #1
   176c0:	b	1768c <dcngettext@plt+0x63c0>
   176c4:	str	r4, [sp, #-8]!
   176c8:	str	lr, [sp, #4]
   176cc:	umull	r2, r3, r1, r2
   176d0:	cmp	r3, #0
   176d4:	bne	176ec <dcngettext@plt+0x6420>
   176d8:	mov	r1, r2
   176dc:	bl	174c8 <dcngettext@plt+0x61fc>
   176e0:	ldr	r4, [sp]
   176e4:	add	sp, sp, #4
   176e8:	pop	{pc}		; (ldr pc, [sp], #4)
   176ec:	bl	11194 <__errno_location@plt>
   176f0:	mov	r3, #12
   176f4:	str	r3, [r0]
   176f8:	mov	r0, #0
   176fc:	b	176e0 <dcngettext@plt+0x6414>
   17700:	push	{lr}		; (str lr, [sp, #-4]!)
   17704:	sub	sp, sp, #268	; 0x10c
   17708:	movw	r2, #257	; 0x101
   1770c:	add	r1, sp, #4
   17710:	bl	1775c <dcngettext@plt+0x6490>
   17714:	cmp	r0, #0
   17718:	movne	r0, #0
   1771c:	bne	17754 <dcngettext@plt+0x6488>
   17720:	movw	r1, #32524	; 0x7f0c
   17724:	movt	r1, #1
   17728:	add	r0, sp, #4
   1772c:	bl	10fc0 <strcmp@plt>
   17730:	cmp	r0, #0
   17734:	beq	17750 <dcngettext@plt+0x6484>
   17738:	movw	r1, #33772	; 0x83ec
   1773c:	movt	r1, #1
   17740:	add	r0, sp, #4
   17744:	bl	10fc0 <strcmp@plt>
   17748:	adds	r0, r0, #0
   1774c:	movne	r0, #1
   17750:	and	r0, r0, #1
   17754:	add	sp, sp, #268	; 0x10c
   17758:	pop	{pc}		; (ldr pc, [sp], #4)
   1775c:	strd	r4, [sp, #-16]!
   17760:	str	r6, [sp, #8]
   17764:	str	lr, [sp, #12]
   17768:	mov	r6, r1
   1776c:	mov	r4, r2
   17770:	mov	r1, #0
   17774:	bl	11230 <setlocale@plt>
   17778:	subs	r5, r0, #0
   1777c:	beq	177c0 <dcngettext@plt+0x64f4>
   17780:	mov	r0, r5
   17784:	bl	1117c <strlen@plt>
   17788:	cmp	r4, r0
   1778c:	bhi	177dc <dcngettext@plt+0x6510>
   17790:	cmp	r4, #0
   17794:	moveq	r0, #34	; 0x22
   17798:	beq	177f0 <dcngettext@plt+0x6524>
   1779c:	sub	r4, r4, #1
   177a0:	mov	r2, r4
   177a4:	mov	r1, r5
   177a8:	mov	r0, r6
   177ac:	bl	11008 <memcpy@plt>
   177b0:	mov	r3, #0
   177b4:	strb	r3, [r6, r4]
   177b8:	mov	r0, #34	; 0x22
   177bc:	b	177f0 <dcngettext@plt+0x6524>
   177c0:	cmp	r4, #0
   177c4:	moveq	r0, #22
   177c8:	beq	177f0 <dcngettext@plt+0x6524>
   177cc:	mov	r3, #0
   177d0:	strb	r3, [r6]
   177d4:	mov	r0, #22
   177d8:	b	177f0 <dcngettext@plt+0x6524>
   177dc:	add	r2, r0, #1
   177e0:	mov	r1, r5
   177e4:	mov	r0, r6
   177e8:	bl	11008 <memcpy@plt>
   177ec:	mov	r0, #0
   177f0:	ldrd	r4, [sp]
   177f4:	ldr	r6, [sp, #8]
   177f8:	add	sp, sp, #12
   177fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17800:	str	r4, [sp, #-8]!
   17804:	str	lr, [sp, #4]
   17808:	mov	r1, #0
   1780c:	bl	11230 <setlocale@plt>
   17810:	ldr	r4, [sp]
   17814:	add	sp, sp, #4
   17818:	pop	{pc}		; (ldr pc, [sp], #4)
   1781c:	cmp	r3, #0
   17820:	cmpeq	r2, #0
   17824:	bne	1783c <dcngettext@plt+0x6570>
   17828:	cmp	r1, #0
   1782c:	cmpeq	r0, #0
   17830:	mvnne	r1, #0
   17834:	mvnne	r0, #0
   17838:	b	17858 <dcngettext@plt+0x658c>
   1783c:	sub	sp, sp, #8
   17840:	push	{sp, lr}
   17844:	bl	17868 <dcngettext@plt+0x659c>
   17848:	ldr	lr, [sp, #4]
   1784c:	add	sp, sp, #8
   17850:	pop	{r2, r3}
   17854:	bx	lr
   17858:	push	{r1, lr}
   1785c:	mov	r0, #8
   17860:	bl	10fa8 <raise@plt>
   17864:	pop	{r1, pc}
   17868:	cmp	r1, r3
   1786c:	cmpeq	r0, r2
   17870:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17874:	mov	r4, r0
   17878:	movcc	r0, #0
   1787c:	mov	r5, r1
   17880:	ldr	lr, [sp, #36]	; 0x24
   17884:	movcc	r1, r0
   17888:	bcc	17984 <dcngettext@plt+0x66b8>
   1788c:	cmp	r3, #0
   17890:	clzeq	ip, r2
   17894:	clzne	ip, r3
   17898:	addeq	ip, ip, #32
   1789c:	cmp	r5, #0
   178a0:	clzeq	r1, r4
   178a4:	addeq	r1, r1, #32
   178a8:	clzne	r1, r5
   178ac:	sub	ip, ip, r1
   178b0:	sub	sl, ip, #32
   178b4:	lsl	r9, r3, ip
   178b8:	rsb	fp, ip, #32
   178bc:	orr	r9, r9, r2, lsl sl
   178c0:	orr	r9, r9, r2, lsr fp
   178c4:	lsl	r8, r2, ip
   178c8:	cmp	r5, r9
   178cc:	cmpeq	r4, r8
   178d0:	movcc	r0, #0
   178d4:	movcc	r1, r0
   178d8:	bcc	178f4 <dcngettext@plt+0x6628>
   178dc:	mov	r0, #1
   178e0:	subs	r4, r4, r8
   178e4:	lsl	r1, r0, sl
   178e8:	orr	r1, r1, r0, lsr fp
   178ec:	lsl	r0, r0, ip
   178f0:	sbc	r5, r5, r9
   178f4:	cmp	ip, #0
   178f8:	beq	17984 <dcngettext@plt+0x66b8>
   178fc:	lsr	r6, r8, #1
   17900:	orr	r6, r6, r9, lsl #31
   17904:	lsr	r7, r9, #1
   17908:	mov	r2, ip
   1790c:	b	17930 <dcngettext@plt+0x6664>
   17910:	subs	r3, r4, r6
   17914:	sbc	r8, r5, r7
   17918:	adds	r3, r3, r3
   1791c:	adc	r8, r8, r8
   17920:	adds	r4, r3, #1
   17924:	adc	r5, r8, #0
   17928:	subs	r2, r2, #1
   1792c:	beq	1794c <dcngettext@plt+0x6680>
   17930:	cmp	r5, r7
   17934:	cmpeq	r4, r6
   17938:	bcs	17910 <dcngettext@plt+0x6644>
   1793c:	adds	r4, r4, r4
   17940:	adc	r5, r5, r5
   17944:	subs	r2, r2, #1
   17948:	bne	17930 <dcngettext@plt+0x6664>
   1794c:	lsr	r3, r4, ip
   17950:	orr	r3, r3, r5, lsl fp
   17954:	lsr	r2, r5, ip
   17958:	orr	r3, r3, r5, lsr sl
   1795c:	adds	r0, r0, r4
   17960:	mov	r4, r3
   17964:	lsl	r3, r2, ip
   17968:	orr	r3, r3, r4, lsl sl
   1796c:	lsl	ip, r4, ip
   17970:	orr	r3, r3, r4, lsr fp
   17974:	adc	r1, r1, r5
   17978:	subs	r0, r0, ip
   1797c:	mov	r5, r2
   17980:	sbc	r1, r1, r3
   17984:	cmp	lr, #0
   17988:	strdne	r4, [lr]
   1798c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17990:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17994:	mov	r7, r0
   17998:	ldr	r6, [pc, #72]	; 179e8 <dcngettext@plt+0x671c>
   1799c:	ldr	r5, [pc, #72]	; 179ec <dcngettext@plt+0x6720>
   179a0:	add	r6, pc, r6
   179a4:	add	r5, pc, r5
   179a8:	sub	r6, r6, r5
   179ac:	mov	r8, r1
   179b0:	mov	r9, r2
   179b4:	bl	10f70 <calloc@plt-0x20>
   179b8:	asrs	r6, r6, #2
   179bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   179c0:	mov	r4, #0
   179c4:	add	r4, r4, #1
   179c8:	ldr	r3, [r5], #4
   179cc:	mov	r2, r9
   179d0:	mov	r1, r8
   179d4:	mov	r0, r7
   179d8:	blx	r3
   179dc:	cmp	r6, r4
   179e0:	bne	179c4 <dcngettext@plt+0x66f8>
   179e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   179e8:	andeq	r1, r1, ip, ror #10
   179ec:	andeq	r1, r1, r4, ror #10
   179f0:	bx	lr
   179f4:	ldr	r3, [pc, #12]	; 17a08 <dcngettext@plt+0x673c>
   179f8:	mov	r1, #0
   179fc:	add	r3, pc, r3
   17a00:	ldr	r2, [r3]
   17a04:	b	111a0 <__cxa_atexit@plt>
   17a08:	andeq	r1, r1, r8, lsr #14

Disassembly of section .fini:

00017a0c <.fini>:
   17a0c:	push	{r3, lr}
   17a10:	pop	{r3, pc}
