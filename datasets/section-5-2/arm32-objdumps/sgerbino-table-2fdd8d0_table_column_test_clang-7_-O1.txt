
../repos/sgerbino-table-2fdd8d0/bin/table_column_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r3, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #77824	; 0x13000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #77824	; 0x13000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #77824	; 0x13000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #77824	; 0x13000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #77824	; 0x13000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #77824	; 0x13000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #77824	; 0x13000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #77824	; 0x13000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #77824	; 0x13000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #77824	; 0x13000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #77824	; 0x13000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #77824	; 0x13000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	andeq	r4, r1, r0, lsl #22
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r4, r1, r0, lsr #21
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r5, r2, r8, asr #32
   11fa4:	andeq	r5, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r5, r2, r8, asr #32
   11fdc:	andeq	r5, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r5, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{r4, r5, r6, r7, fp, lr}
   12014:	add	fp, sp, #16
   12018:	sub	sp, sp, #56	; 0x38
   1201c:	mov	r7, sp
   12020:	mov	r0, r7
   12024:	bl	12110 <table_init@@Base>
   12028:	movw	r1, #19220	; 0x4b14
   1202c:	movt	r1, #1
   12030:	mov	r4, #0
   12034:	mov	r0, r7
   12038:	mov	r2, #0
   1203c:	bl	12bcc <table_add_column@@Base>
   12040:	mov	r6, r0
   12044:	movw	r1, #19286	; 0x4b56
   12048:	movt	r1, #1
   1204c:	mov	r0, r7
   12050:	mov	r2, #21
   12054:	bl	12bcc <table_add_column@@Base>
   12058:	mov	r5, r0
   1205c:	mov	r0, r7
   12060:	bl	12b40 <table_get_column_length@@Base>
   12064:	cmp	r0, #2
   12068:	beq	1207c <main@@Base+0x6c>
   1206c:	movw	r0, #19223	; 0x4b17
   12070:	movt	r0, #1
   12074:	bl	11e9c <printf@plt>
   12078:	mvn	r4, #0
   1207c:	mov	r0, sp
   12080:	mov	r1, r6
   12084:	bl	12ba4 <table_get_column_name@@Base>
   12088:	movw	r1, #19220	; 0x4b14
   1208c:	movt	r1, #1
   12090:	bl	11e90 <strcmp@plt>
   12094:	cmp	r0, #0
   12098:	beq	120ac <main@@Base+0x9c>
   1209c:	movw	r0, #19260	; 0x4b3c
   120a0:	movt	r0, #1
   120a4:	bl	11e9c <printf@plt>
   120a8:	mvn	r4, #0
   120ac:	mov	r0, sp
   120b0:	mov	r1, r5
   120b4:	bl	12ba4 <table_get_column_name@@Base>
   120b8:	movw	r1, #19286	; 0x4b56
   120bc:	movt	r1, #1
   120c0:	bl	11e90 <strcmp@plt>
   120c4:	cmp	r0, #0
   120c8:	beq	120dc <main@@Base+0xcc>
   120cc:	movw	r0, #19260	; 0x4b3c
   120d0:	movt	r0, #1
   120d4:	bl	11e9c <printf@plt>
   120d8:	mvn	r4, #0
   120dc:	mov	r0, sp
   120e0:	bl	12150 <table_destroy@@Base>
   120e4:	mov	r0, r4
   120e8:	sub	sp, fp, #16
   120ec:	pop	{r4, r5, r6, r7, fp, pc}

000120f0 <table_new@@Base>:
   120f0:	push	{r4, sl, fp, lr}
   120f4:	add	fp, sp, #8
   120f8:	mov	r0, #56	; 0x38
   120fc:	bl	11ecc <malloc@plt>
   12100:	mov	r4, r0
   12104:	bl	12110 <table_init@@Base>
   12108:	mov	r0, r4
   1210c:	pop	{r4, sl, fp, pc}

00012110 <table_init@@Base>:
   12110:	push	{r4, sl, fp, lr}
   12114:	add	fp, sp, #8
   12118:	mov	r4, r0
   1211c:	bl	12190 <table_destroy@@Base+0x40>
   12120:	mov	r0, r4
   12124:	bl	121a8 <table_destroy@@Base+0x58>
   12128:	mov	r0, r4
   1212c:	pop	{r4, sl, fp, lr}
   12130:	b	121c4 <table_destroy@@Base+0x74>

00012134 <table_delete@@Base>:
   12134:	push	{r4, sl, fp, lr}
   12138:	add	fp, sp, #8
   1213c:	mov	r4, r0
   12140:	bl	12150 <table_destroy@@Base>
   12144:	mov	r0, r4
   12148:	pop	{r4, sl, fp, lr}
   1214c:	b	11ea8 <free@plt>

00012150 <table_destroy@@Base>:
   12150:	cmp	r0, #0
   12154:	bxeq	lr
   12158:	push	{r4, sl, fp, lr}
   1215c:	add	fp, sp, #8
   12160:	mov	r4, r0
   12164:	mvn	r1, #0
   12168:	mvn	r2, #0
   1216c:	mov	r3, #64	; 0x40
   12170:	bl	12a4c <table_notify@@Base>
   12174:	mov	r0, r4
   12178:	bl	121e4 <table_destroy@@Base+0x94>
   1217c:	mov	r0, r4
   12180:	bl	12230 <table_destroy@@Base+0xe0>
   12184:	mov	r0, r4
   12188:	pop	{r4, sl, fp, lr}
   1218c:	b	1227c <table_destroy@@Base+0x12c>
   12190:	mov	r1, #0
   12194:	mov	r2, #10
   12198:	str	r1, [r0]
   1219c:	stmib	r0, {r1, r2}
   121a0:	str	r1, [r0, #12]
   121a4:	bx	lr
   121a8:	mov	r1, #0
   121ac:	mov	r2, #20
   121b0:	str	r1, [r0, #16]
   121b4:	str	r1, [r0, #20]
   121b8:	str	r2, [r0, #24]
   121bc:	str	r1, [r0, #28]
   121c0:	bx	lr
   121c4:	mov	r1, #0
   121c8:	vmov.i32	q8, #0	; 0x00000000
   121cc:	mov	r2, #10
   121d0:	str	r2, [r0, #48]	; 0x30
   121d4:	str	r1, [r0, #52]	; 0x34
   121d8:	add	r0, r0, #32
   121dc:	vst1.32	{d16-d17}, [r0]
   121e0:	bx	lr
   121e4:	push	{r4, r5, r6, sl, fp, lr}
   121e8:	add	fp, sp, #16
   121ec:	mov	r4, r0
   121f0:	bl	13864 <table_get_row_length@@Base>
   121f4:	cmp	r0, #1
   121f8:	blt	1221c <table_destroy@@Base+0xcc>
   121fc:	mov	r5, r0
   12200:	mov	r6, #0
   12204:	mov	r0, r4
   12208:	mov	r1, r6
   1220c:	bl	13800 <table_row_destroy@@Base>
   12210:	add	r6, r6, #1
   12214:	cmp	r5, r6
   12218:	bne	12204 <table_destroy@@Base+0xb4>
   1221c:	ldr	r0, [r4, #16]
   12220:	cmp	r0, #0
   12224:	popeq	{r4, r5, r6, sl, fp, pc}
   12228:	pop	{r4, r5, r6, sl, fp, lr}
   1222c:	b	11ea8 <free@plt>
   12230:	push	{r4, r5, r6, sl, fp, lr}
   12234:	add	fp, sp, #16
   12238:	mov	r4, r0
   1223c:	bl	12b40 <table_get_column_length@@Base>
   12240:	cmp	r0, #1
   12244:	blt	12268 <table_destroy@@Base+0x118>
   12248:	mov	r5, r0
   1224c:	mov	r6, #0
   12250:	mov	r0, r4
   12254:	mov	r1, r6
   12258:	bl	12b20 <table_column_destroy@@Base>
   1225c:	add	r6, r6, #1
   12260:	cmp	r5, r6
   12264:	bne	12250 <table_destroy@@Base+0x100>
   12268:	ldr	r0, [r4]
   1226c:	cmp	r0, #0
   12270:	popeq	{r4, r5, r6, sl, fp, pc}
   12274:	pop	{r4, r5, r6, sl, fp, lr}
   12278:	b	11ea8 <free@plt>
   1227c:	push	{r4, sl, fp, lr}
   12280:	add	fp, sp, #8
   12284:	mov	r4, r0
   12288:	ldr	r0, [r0, #36]	; 0x24
   1228c:	cmp	r0, #0
   12290:	beq	12298 <table_destroy@@Base+0x148>
   12294:	bl	11ea8 <free@plt>
   12298:	ldr	r0, [r4, #40]	; 0x28
   1229c:	cmp	r0, #0
   122a0:	beq	122a8 <table_destroy@@Base+0x158>
   122a4:	bl	11ea8 <free@plt>
   122a8:	ldr	r0, [r4, #44]	; 0x2c
   122ac:	cmp	r0, #0
   122b0:	popeq	{r4, sl, fp, pc}
   122b4:	pop	{r4, sl, fp, lr}
   122b8:	b	11ea8 <free@plt>

000122bc <table_dupe@@Base>:
   122bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122c0:	add	fp, sp, #28
   122c4:	sub	sp, sp, #12
   122c8:	mov	r4, r0
   122cc:	bl	13864 <table_get_row_length@@Base>
   122d0:	mov	r8, r0
   122d4:	mov	r0, r4
   122d8:	bl	12b40 <table_get_column_length@@Base>
   122dc:	mov	r6, r0
   122e0:	bl	120f0 <table_new@@Base>
   122e4:	mov	sl, r0
   122e8:	cmp	r6, #1
   122ec:	blt	1232c <table_dupe@@Base+0x70>
   122f0:	mov	r5, #0
   122f4:	mov	r0, r4
   122f8:	mov	r1, r5
   122fc:	bl	12ba4 <table_get_column_name@@Base>
   12300:	mov	r7, r0
   12304:	mov	r0, r4
   12308:	mov	r1, r5
   1230c:	bl	12bb8 <table_get_column_data_type@@Base>
   12310:	mov	r2, r0
   12314:	mov	r0, sl
   12318:	mov	r1, r7
   1231c:	bl	12bcc <table_add_column@@Base>
   12320:	add	r5, r5, #1
   12324:	cmp	r6, r5
   12328:	bne	122f4 <table_dupe@@Base+0x38>
   1232c:	cmp	r8, #1
   12330:	blt	12798 <table_dupe@@Base+0x4dc>
   12334:	mov	r5, #0
   12338:	add	r9, sp, #8
   1233c:	mov	r0, sl
   12340:	bl	1386c <table_add_row@@Base>
   12344:	cmp	r6, #1
   12348:	blt	1278c <table_dupe@@Base+0x4d0>
   1234c:	mov	r7, #0
   12350:	mov	r0, r4
   12354:	mov	r1, r7
   12358:	bl	12bb8 <table_get_column_data_type@@Base>
   1235c:	cmp	r0, #23
   12360:	bhi	12780 <table_dupe@@Base+0x4c4>
   12364:	add	r1, pc, #0
   12368:	ldr	pc, [r1, r0, lsl #2]
   1236c:	andeq	r2, r1, ip, asr #7
   12370:	strdeq	r2, [r1], -r4
   12374:	andeq	r2, r1, ip, lsl r4
   12378:	andeq	r2, r1, r4, asr #8
   1237c:	andeq	r2, r1, ip, ror #8
   12380:	muleq	r1, r4, r4
   12384:			; <UNDEFINED> instruction: 0x000124bc
   12388:	andeq	r2, r1, r4, ror #9
   1238c:	andeq	r2, r1, ip, lsl #10
   12390:	andeq	r2, r1, r4, lsr r5
   12394:	andeq	r2, r1, ip, asr r5
   12398:	andeq	r2, r1, r4, lsl #11
   1239c:	andeq	r2, r1, ip, lsr #11
   123a0:	ldrdeq	r2, [r1], -r4
   123a4:	strdeq	r2, [r1], -ip
   123a8:	andeq	r2, r1, r4, lsr #12
   123ac:	andeq	r2, r1, ip, asr #12
   123b0:	andeq	r2, r1, r0, ror r6
   123b4:	muleq	r1, r4, r6
   123b8:			; <UNDEFINED> instruction: 0x000126b8
   123bc:	andeq	r2, r1, r0, ror #13
   123c0:	andeq	r2, r1, r8, lsl #14
   123c4:	andeq	r2, r1, r0, lsr r7
   123c8:	andeq	r2, r1, r8, asr r7
   123cc:	mov	r0, r4
   123d0:	mov	r1, r5
   123d4:	mov	r2, r7
   123d8:	bl	13620 <table_get_int@@Base>
   123dc:	mov	r3, r0
   123e0:	mov	r0, sl
   123e4:	mov	r1, r5
   123e8:	mov	r2, r7
   123ec:	bl	13ccc <table_set_int@@Base>
   123f0:	b	12780 <table_dupe@@Base+0x4c4>
   123f4:	mov	r0, r4
   123f8:	mov	r1, r5
   123fc:	mov	r2, r7
   12400:	bl	13634 <table_get_uint@@Base>
   12404:	mov	r3, r0
   12408:	mov	r0, sl
   1240c:	mov	r1, r5
   12410:	mov	r2, r7
   12414:	bl	13cf4 <table_set_uint@@Base>
   12418:	b	12780 <table_dupe@@Base+0x4c4>
   1241c:	mov	r0, r4
   12420:	mov	r1, r5
   12424:	mov	r2, r7
   12428:	bl	13648 <table_get_int8@@Base>
   1242c:	mov	r3, r0
   12430:	mov	r0, sl
   12434:	mov	r1, r5
   12438:	mov	r2, r7
   1243c:	bl	13d1c <table_set_int8@@Base>
   12440:	b	12780 <table_dupe@@Base+0x4c4>
   12444:	mov	r0, r4
   12448:	mov	r1, r5
   1244c:	mov	r2, r7
   12450:	bl	1365c <table_get_uint8@@Base>
   12454:	mov	r3, r0
   12458:	mov	r0, sl
   1245c:	mov	r1, r5
   12460:	mov	r2, r7
   12464:	bl	13d44 <table_set_uint8@@Base>
   12468:	b	12780 <table_dupe@@Base+0x4c4>
   1246c:	mov	r0, r4
   12470:	mov	r1, r5
   12474:	mov	r2, r7
   12478:	bl	13670 <table_get_int16@@Base>
   1247c:	mov	r3, r0
   12480:	mov	r0, sl
   12484:	mov	r1, r5
   12488:	mov	r2, r7
   1248c:	bl	13d6c <table_set_int16@@Base>
   12490:	b	12780 <table_dupe@@Base+0x4c4>
   12494:	mov	r0, r4
   12498:	mov	r1, r5
   1249c:	mov	r2, r7
   124a0:	bl	13684 <table_get_uint16@@Base>
   124a4:	mov	r3, r0
   124a8:	mov	r0, sl
   124ac:	mov	r1, r5
   124b0:	mov	r2, r7
   124b4:	bl	13d94 <table_set_uint16@@Base>
   124b8:	b	12780 <table_dupe@@Base+0x4c4>
   124bc:	mov	r0, r4
   124c0:	mov	r1, r5
   124c4:	mov	r2, r7
   124c8:	bl	13698 <table_get_int32@@Base>
   124cc:	mov	r3, r0
   124d0:	mov	r0, sl
   124d4:	mov	r1, r5
   124d8:	mov	r2, r7
   124dc:	bl	13dbc <table_set_int32@@Base>
   124e0:	b	12780 <table_dupe@@Base+0x4c4>
   124e4:	mov	r0, r4
   124e8:	mov	r1, r5
   124ec:	mov	r2, r7
   124f0:	bl	136ac <table_get_uint32@@Base>
   124f4:	mov	r3, r0
   124f8:	mov	r0, sl
   124fc:	mov	r1, r5
   12500:	mov	r2, r7
   12504:	bl	13de4 <table_set_uint32@@Base>
   12508:	b	12780 <table_dupe@@Base+0x4c4>
   1250c:	mov	r0, r4
   12510:	mov	r1, r5
   12514:	mov	r2, r7
   12518:	bl	136c0 <table_get_int64@@Base>
   1251c:	stm	sp, {r0, r1}
   12520:	mov	r0, sl
   12524:	mov	r1, r5
   12528:	mov	r2, r7
   1252c:	bl	13e0c <table_set_int64@@Base>
   12530:	b	12780 <table_dupe@@Base+0x4c4>
   12534:	mov	r0, r4
   12538:	mov	r1, r5
   1253c:	mov	r2, r7
   12540:	bl	136d4 <table_get_uint64@@Base>
   12544:	stm	sp, {r0, r1}
   12548:	mov	r0, sl
   1254c:	mov	r1, r5
   12550:	mov	r2, r7
   12554:	bl	13e40 <table_set_uint64@@Base>
   12558:	b	12780 <table_dupe@@Base+0x4c4>
   1255c:	mov	r0, r4
   12560:	mov	r1, r5
   12564:	mov	r2, r7
   12568:	bl	136e8 <table_get_short@@Base>
   1256c:	mov	r3, r0
   12570:	mov	r0, sl
   12574:	mov	r1, r5
   12578:	mov	r2, r7
   1257c:	bl	13e74 <table_set_short@@Base>
   12580:	b	12780 <table_dupe@@Base+0x4c4>
   12584:	mov	r0, r4
   12588:	mov	r1, r5
   1258c:	mov	r2, r7
   12590:	bl	136fc <table_get_ushort@@Base>
   12594:	mov	r3, r0
   12598:	mov	r0, sl
   1259c:	mov	r1, r5
   125a0:	mov	r2, r7
   125a4:	bl	13e9c <table_set_ushort@@Base>
   125a8:	b	12780 <table_dupe@@Base+0x4c4>
   125ac:	mov	r0, r4
   125b0:	mov	r1, r5
   125b4:	mov	r2, r7
   125b8:	bl	13710 <table_get_long@@Base>
   125bc:	mov	r3, r0
   125c0:	mov	r0, sl
   125c4:	mov	r1, r5
   125c8:	mov	r2, r7
   125cc:	bl	13ec4 <table_set_long@@Base>
   125d0:	b	12780 <table_dupe@@Base+0x4c4>
   125d4:	mov	r0, r4
   125d8:	mov	r1, r5
   125dc:	mov	r2, r7
   125e0:	bl	13724 <table_get_ulong@@Base>
   125e4:	mov	r3, r0
   125e8:	mov	r0, sl
   125ec:	mov	r1, r5
   125f0:	mov	r2, r7
   125f4:	bl	13eec <table_set_ulong@@Base>
   125f8:	b	12780 <table_dupe@@Base+0x4c4>
   125fc:	mov	r0, r4
   12600:	mov	r1, r5
   12604:	mov	r2, r7
   12608:	bl	13738 <table_get_llong@@Base>
   1260c:	stm	sp, {r0, r1}
   12610:	mov	r0, sl
   12614:	mov	r1, r5
   12618:	mov	r2, r7
   1261c:	bl	13f14 <table_set_llong@@Base>
   12620:	b	12780 <table_dupe@@Base+0x4c4>
   12624:	mov	r0, r4
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	1374c <table_get_ullong@@Base>
   12634:	stm	sp, {r0, r1}
   12638:	mov	r0, sl
   1263c:	mov	r1, r5
   12640:	mov	r2, r7
   12644:	bl	13f48 <table_set_ullong@@Base>
   12648:	b	12780 <table_dupe@@Base+0x4c4>
   1264c:	mov	r0, r4
   12650:	mov	r1, r5
   12654:	mov	r2, r7
   12658:	bl	13760 <table_get_float@@Base>
   1265c:	mov	r0, sl
   12660:	mov	r1, r5
   12664:	mov	r2, r7
   12668:	bl	13f7c <table_set_float@@Base>
   1266c:	b	12780 <table_dupe@@Base+0x4c4>
   12670:	mov	r0, r4
   12674:	mov	r1, r5
   12678:	mov	r2, r7
   1267c:	bl	13774 <table_get_double@@Base>
   12680:	mov	r0, sl
   12684:	mov	r1, r5
   12688:	mov	r2, r7
   1268c:	bl	13fa4 <table_set_double@@Base>
   12690:	b	12780 <table_dupe@@Base+0x4c4>
   12694:	mov	r0, r4
   12698:	mov	r1, r5
   1269c:	mov	r2, r7
   126a0:	bl	13788 <table_get_ldouble@@Base>
   126a4:	mov	r0, sl
   126a8:	mov	r1, r5
   126ac:	mov	r2, r7
   126b0:	bl	13fcc <table_set_ldouble@@Base>
   126b4:	b	12780 <table_dupe@@Base+0x4c4>
   126b8:	mov	r0, r4
   126bc:	mov	r1, r5
   126c0:	mov	r2, r7
   126c4:	bl	1379c <table_get_char@@Base>
   126c8:	mov	r3, r0
   126cc:	mov	r0, sl
   126d0:	mov	r1, r5
   126d4:	mov	r2, r7
   126d8:	bl	14014 <table_set_char@@Base>
   126dc:	b	12780 <table_dupe@@Base+0x4c4>
   126e0:	mov	r0, r4
   126e4:	mov	r1, r5
   126e8:	mov	r2, r7
   126ec:	bl	137b0 <table_get_uchar@@Base>
   126f0:	mov	r3, r0
   126f4:	mov	r0, sl
   126f8:	mov	r1, r5
   126fc:	mov	r2, r7
   12700:	bl	1403c <table_set_uchar@@Base>
   12704:	b	12780 <table_dupe@@Base+0x4c4>
   12708:	mov	r0, r4
   1270c:	mov	r1, r5
   12710:	mov	r2, r7
   12714:	bl	137c4 <table_get_string@@Base>
   12718:	mov	r3, r0
   1271c:	mov	r0, sl
   12720:	mov	r1, r5
   12724:	mov	r2, r7
   12728:	bl	13ff4 <table_set_string@@Base>
   1272c:	b	12780 <table_dupe@@Base+0x4c4>
   12730:	mov	r0, r4
   12734:	mov	r1, r5
   12738:	mov	r2, r7
   1273c:	bl	1360c <table_get_bool@@Base>
   12740:	mov	r3, r0
   12744:	mov	r0, sl
   12748:	mov	r1, r5
   1274c:	mov	r2, r7
   12750:	bl	13ca4 <table_set_bool@@Base>
   12754:	b	12780 <table_dupe@@Base+0x4c4>
   12758:	mov	r0, r4
   1275c:	mov	r1, r5
   12760:	mov	r2, r7
   12764:	bl	137c8 <table_get_ptr@@Base>
   12768:	str	r0, [sp, #8]
   1276c:	mov	r0, sl
   12770:	mov	r1, r5
   12774:	mov	r2, r7
   12778:	mov	r3, r9
   1277c:	bl	14064 <table_set_ptr@@Base>
   12780:	add	r7, r7, #1
   12784:	cmp	r6, r7
   12788:	bne	12350 <table_dupe@@Base+0x94>
   1278c:	add	r5, r5, #1
   12790:	cmp	r5, r8
   12794:	bne	1233c <table_dupe@@Base+0x80>
   12798:	mov	r0, sl
   1279c:	sub	sp, fp, #28
   127a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000127a4 <table_get_major_version@@Base>:
   127a4:	mov	r0, #0
   127a8:	bx	lr

000127ac <table_get_minor_version@@Base>:
   127ac:	mov	r0, #0
   127b0:	bx	lr

000127b4 <table_get_patch_version@@Base>:
   127b4:	mov	r0, #0
   127b8:	bx	lr

000127bc <table_get_version@@Base>:
   127bc:	movw	r0, #19440	; 0x4bf0
   127c0:	movt	r0, #1
   127c4:	bx	lr

000127c8 <table_get_callback_length@@Base>:
   127c8:	ldr	r0, [r0, #32]
   127cc:	bx	lr

000127d0 <table_register_callback@@Base>:
   127d0:	push	{r4, r5, r6, r7, fp, lr}
   127d4:	add	fp, sp, #16
   127d8:	sub	sp, sp, #8
   127dc:	mov	r5, r3
   127e0:	mov	r6, r2
   127e4:	mov	r7, r1
   127e8:	mov	r4, r0
   127ec:	bl	12864 <table_register_callback@@Base+0x94>
   127f0:	cmp	r0, #1
   127f4:	blt	12810 <table_register_callback@@Base+0x40>
   127f8:	ldr	r1, [r4, #44]	; 0x2c
   127fc:	ldr	r2, [r1, r0, lsl #2]
   12800:	orr	r2, r2, r5
   12804:	str	r2, [r1, r0, lsl #2]
   12808:	sub	sp, fp, #16
   1280c:	pop	{r4, r5, r6, r7, fp, pc}
   12810:	ldr	r0, [r4, #32]
   12814:	ldr	r1, [r4, #48]	; 0x30
   12818:	udiv	r2, r0, r1
   1281c:	mls	r0, r2, r1, r0
   12820:	cmp	r0, #0
   12824:	bne	12830 <table_register_callback@@Base+0x60>
   12828:	mov	r0, r4
   1282c:	bl	128bc <table_register_callback@@Base+0xec>
   12830:	mov	r0, r4
   12834:	bl	127c8 <table_get_callback_length@@Base>
   12838:	mov	r1, r0
   1283c:	str	r5, [sp]
   12840:	mov	r0, r4
   12844:	mov	r2, r7
   12848:	mov	r3, r6
   1284c:	bl	12914 <table_register_callback@@Base+0x144>
   12850:	ldr	r0, [r4, #32]
   12854:	add	r0, r0, #1
   12858:	str	r0, [r4, #32]
   1285c:	sub	sp, fp, #16
   12860:	pop	{r4, r5, r6, r7, fp, pc}
   12864:	push	{r4, sl, fp, lr}
   12868:	add	fp, sp, #8
   1286c:	mov	ip, r0
   12870:	ldr	r3, [r0, #32]
   12874:	mvn	r0, #0
   12878:	cmp	r3, #1
   1287c:	poplt	{r4, sl, fp, pc}
   12880:	ldr	lr, [ip, #36]	; 0x24
   12884:	mov	r3, #0
   12888:	ldr	r4, [lr, r3, lsl #2]
   1288c:	cmp	r4, r1
   12890:	bne	128a8 <table_register_callback@@Base+0xd8>
   12894:	ldr	r4, [ip, #40]	; 0x28
   12898:	ldr	r4, [r4, r3, lsl #2]
   1289c:	cmp	r4, r2
   128a0:	moveq	r0, r3
   128a4:	popeq	{r4, sl, fp, pc}
   128a8:	add	r3, r3, #1
   128ac:	ldr	r4, [ip, #32]
   128b0:	cmp	r3, r4
   128b4:	blt	12888 <table_register_callback@@Base+0xb8>
   128b8:	pop	{r4, sl, fp, pc}
   128bc:	push	{r4, sl, fp, lr}
   128c0:	add	fp, sp, #8
   128c4:	mov	r4, r0
   128c8:	ldr	r0, [r0, #36]	; 0x24
   128cc:	ldr	r1, [r4, #48]	; 0x30
   128d0:	ldr	r2, [r4, #52]	; 0x34
   128d4:	add	r1, r2, r1
   128d8:	str	r1, [r4, #52]	; 0x34
   128dc:	lsl	r1, r1, #2
   128e0:	bl	11eb4 <realloc@plt>
   128e4:	str	r0, [r4, #36]	; 0x24
   128e8:	ldr	r0, [r4, #40]	; 0x28
   128ec:	ldr	r1, [r4, #52]	; 0x34
   128f0:	lsl	r1, r1, #2
   128f4:	bl	11eb4 <realloc@plt>
   128f8:	str	r0, [r4, #40]	; 0x28
   128fc:	ldr	r0, [r4, #44]	; 0x2c
   12900:	ldr	r1, [r4, #52]	; 0x34
   12904:	lsl	r1, r1, #2
   12908:	bl	11eb4 <realloc@plt>
   1290c:	str	r0, [r4, #44]	; 0x2c
   12910:	pop	{r4, sl, fp, pc}
   12914:	ldr	ip, [r0, #36]	; 0x24
   12918:	str	r2, [ip, r1, lsl #2]
   1291c:	ldr	r2, [r0, #40]	; 0x28
   12920:	str	r3, [r2, r1, lsl #2]
   12924:	ldr	r0, [r0, #44]	; 0x2c
   12928:	ldr	r2, [sp]
   1292c:	str	r2, [r0, r1, lsl #2]
   12930:	bx	lr

00012934 <table_unregister_callback@@Base>:
   12934:	push	{r4, sl, fp, lr}
   12938:	add	fp, sp, #8
   1293c:	mov	r4, r0
   12940:	bl	12864 <table_register_callback@@Base+0x94>
   12944:	cmn	r0, #1
   12948:	popeq	{r4, sl, fp, pc}
   1294c:	ldr	r1, [r4, #32]
   12950:	sub	r2, r1, #1
   12954:	cmp	r0, r2
   12958:	bge	129a0 <table_unregister_callback@@Base+0x6c>
   1295c:	mov	r1, #4
   12960:	add	r1, r1, r0, lsl #2
   12964:	ldr	r2, [r4, #36]	; 0x24
   12968:	ldr	r3, [r2, r1]!
   1296c:	str	r3, [r2, #-4]
   12970:	ldr	r2, [r4, #40]	; 0x28
   12974:	ldr	r3, [r2, r1]!
   12978:	str	r3, [r2, #-4]
   1297c:	ldr	r2, [r4, #44]	; 0x2c
   12980:	ldr	r3, [r2, r1]!
   12984:	str	r3, [r2, #-4]
   12988:	add	r1, r1, #4
   1298c:	add	r0, r0, #1
   12990:	ldr	r2, [r4, #32]
   12994:	sub	r2, r2, #1
   12998:	cmp	r0, r2
   1299c:	blt	12964 <table_unregister_callback@@Base+0x30>
   129a0:	str	r2, [r4, #32]
   129a4:	ldr	r0, [r4, #48]	; 0x30
   129a8:	udiv	r1, r2, r0
   129ac:	mls	r0, r1, r0, r2
   129b0:	cmp	r0, #0
   129b4:	beq	129bc <table_unregister_callback@@Base+0x88>
   129b8:	pop	{r4, sl, fp, pc}
   129bc:	mov	r0, r4
   129c0:	pop	{r4, sl, fp, lr}
   129c4:	b	129c8 <table_unregister_callback@@Base+0x94>
   129c8:	push	{r4, sl, fp, lr}
   129cc:	add	fp, sp, #8
   129d0:	mov	r4, r0
   129d4:	ldr	r0, [r0, #36]	; 0x24
   129d8:	ldr	r1, [r4, #48]	; 0x30
   129dc:	ldr	r2, [r4, #52]	; 0x34
   129e0:	subs	r1, r2, r1
   129e4:	str	r1, [r4, #52]	; 0x34
   129e8:	beq	12a24 <table_unregister_callback@@Base+0xf0>
   129ec:	lsl	r1, r1, #2
   129f0:	bl	11eb4 <realloc@plt>
   129f4:	str	r0, [r4, #36]	; 0x24
   129f8:	ldr	r0, [r4, #40]	; 0x28
   129fc:	ldr	r1, [r4, #52]	; 0x34
   12a00:	lsl	r1, r1, #2
   12a04:	bl	11eb4 <realloc@plt>
   12a08:	str	r0, [r4, #40]	; 0x28
   12a0c:	ldr	r0, [r4, #44]	; 0x2c
   12a10:	ldr	r1, [r4, #52]	; 0x34
   12a14:	lsl	r1, r1, #2
   12a18:	bl	11eb4 <realloc@plt>
   12a1c:	str	r0, [r4, #44]	; 0x2c
   12a20:	pop	{r4, sl, fp, pc}
   12a24:	bl	11ea8 <free@plt>
   12a28:	ldr	r0, [r4, #40]	; 0x28
   12a2c:	bl	11ea8 <free@plt>
   12a30:	ldr	r0, [r4, #44]	; 0x2c
   12a34:	bl	11ea8 <free@plt>
   12a38:	mov	r0, #0
   12a3c:	str	r0, [r4, #36]	; 0x24
   12a40:	str	r0, [r4, #40]	; 0x28
   12a44:	str	r0, [r4, #44]	; 0x2c
   12a48:	pop	{r4, sl, fp, pc}

00012a4c <table_notify@@Base>:
   12a4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a50:	add	fp, sp, #24
   12a54:	sub	sp, sp, #8
   12a58:	mov	r7, r0
   12a5c:	ldr	r0, [r0, #32]
   12a60:	cmp	r0, #1
   12a64:	blt	12ac0 <table_notify@@Base+0x74>
   12a68:	mov	r4, r3
   12a6c:	mov	r8, r2
   12a70:	mov	r9, r1
   12a74:	mov	r5, #0
   12a78:	ldr	r0, [r7, #44]	; 0x2c
   12a7c:	ldr	r0, [r0, r5, lsl #2]
   12a80:	tst	r0, r4
   12a84:	beq	12ab0 <table_notify@@Base+0x64>
   12a88:	ldr	r0, [r7, #36]	; 0x24
   12a8c:	ldr	r1, [r7, #40]	; 0x28
   12a90:	ldr	r6, [r0, r5, lsl #2]
   12a94:	ldr	r0, [r1, r5, lsl #2]
   12a98:	str	r0, [sp]
   12a9c:	mov	r0, r7
   12aa0:	mov	r1, r9
   12aa4:	mov	r2, r8
   12aa8:	mov	r3, r4
   12aac:	blx	r6
   12ab0:	ldr	r0, [r7, #32]
   12ab4:	add	r5, r5, #1
   12ab8:	cmp	r5, r0
   12abc:	blt	12a78 <table_notify@@Base+0x2c>
   12ac0:	sub	sp, fp, #24
   12ac4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012ac8 <table_column_init@@Base>:
   12ac8:	push	{r4, r5, r6, r7, fp, lr}
   12acc:	add	fp, sp, #16
   12ad0:	mov	r4, r3
   12ad4:	mov	r5, r2
   12ad8:	bl	12b10 <table_get_col_ptr@@Base>
   12adc:	mov	r6, r0
   12ae0:	mov	r0, r5
   12ae4:	bl	11ef0 <strlen@plt>
   12ae8:	add	r0, r0, #1
   12aec:	bl	11ecc <malloc@plt>
   12af0:	str	r0, [r6]
   12af4:	ldr	r7, [fp, #8]
   12af8:	cmp	r0, #0
   12afc:	beq	12b08 <table_column_init@@Base+0x40>
   12b00:	mov	r1, r5
   12b04:	bl	11ec0 <strcpy@plt>
   12b08:	stmib	r6, {r4, r7}
   12b0c:	pop	{r4, r5, r6, r7, fp, pc}

00012b10 <table_get_col_ptr@@Base>:
   12b10:	ldr	r0, [r0]
   12b14:	add	r1, r1, r1, lsl #1
   12b18:	add	r0, r0, r1, lsl #2
   12b1c:	bx	lr

00012b20 <table_column_destroy@@Base>:
   12b20:	push	{fp, lr}
   12b24:	mov	fp, sp
   12b28:	bl	12b10 <table_get_col_ptr@@Base>
   12b2c:	ldr	r0, [r0]
   12b30:	cmp	r0, #0
   12b34:	popeq	{fp, pc}
   12b38:	pop	{fp, lr}
   12b3c:	b	11ea8 <free@plt>

00012b40 <table_get_column_length@@Base>:
   12b40:	ldr	r0, [r0, #4]
   12b44:	bx	lr

00012b48 <table_get_column@@Base>:
   12b48:	push	{r4, r5, r6, r7, fp, lr}
   12b4c:	add	fp, sp, #16
   12b50:	mov	r6, r1
   12b54:	mov	r7, r0
   12b58:	bl	12b40 <table_get_column_length@@Base>
   12b5c:	mov	r4, r0
   12b60:	mov	r5, #0
   12b64:	cmp	r0, #1
   12b68:	blt	12b94 <table_get_column@@Base+0x4c>
   12b6c:	mov	r0, r7
   12b70:	mov	r1, r5
   12b74:	bl	12ba4 <table_get_column_name@@Base>
   12b78:	mov	r1, r6
   12b7c:	bl	11e90 <strcmp@plt>
   12b80:	cmp	r0, #0
   12b84:	beq	12b94 <table_get_column@@Base+0x4c>
   12b88:	add	r5, r5, #1
   12b8c:	cmp	r5, r4
   12b90:	blt	12b6c <table_get_column@@Base+0x24>
   12b94:	cmp	r5, r4
   12b98:	mvneq	r5, #0
   12b9c:	mov	r0, r5
   12ba0:	pop	{r4, r5, r6, r7, fp, pc}

00012ba4 <table_get_column_name@@Base>:
   12ba4:	push	{fp, lr}
   12ba8:	mov	fp, sp
   12bac:	bl	12b10 <table_get_col_ptr@@Base>
   12bb0:	ldr	r0, [r0]
   12bb4:	pop	{fp, pc}

00012bb8 <table_get_column_data_type@@Base>:
   12bb8:	push	{fp, lr}
   12bbc:	mov	fp, sp
   12bc0:	bl	12b10 <table_get_col_ptr@@Base>
   12bc4:	ldr	r0, [r0, #4]
   12bc8:	pop	{fp, pc}

00012bcc <table_add_column@@Base>:
   12bcc:	push	{r4, r5, r6, sl, fp, lr}
   12bd0:	add	fp, sp, #16
   12bd4:	mov	r5, r2
   12bd8:	mov	r6, r1
   12bdc:	mov	r4, r0
   12be0:	bl	12b40 <table_get_column_length@@Base>
   12be4:	ldr	r1, [r4, #8]
   12be8:	udiv	r2, r0, r1
   12bec:	mls	r0, r2, r1, r0
   12bf0:	cmp	r0, #0
   12bf4:	bne	12c00 <table_add_column@@Base+0x34>
   12bf8:	mov	r0, r4
   12bfc:	bl	12c3c <table_add_column@@Base+0x70>
   12c00:	mov	r0, r4
   12c04:	mov	r1, r6
   12c08:	mov	r2, r5
   12c0c:	bl	12cb8 <table_add_column@@Base+0xec>
   12c10:	mov	r0, r4
   12c14:	bl	12b40 <table_get_column_length@@Base>
   12c18:	mov	r2, r0
   12c1c:	mov	r0, r4
   12c20:	mvn	r1, #0
   12c24:	mov	r3, #8
   12c28:	bl	12a4c <table_notify@@Base>
   12c2c:	ldr	r0, [r4, #4]
   12c30:	add	r1, r0, #1
   12c34:	str	r1, [r4, #4]
   12c38:	pop	{r4, r5, r6, sl, fp, pc}
   12c3c:	push	{r4, r5, r6, r7, fp, lr}
   12c40:	add	fp, sp, #16
   12c44:	mov	r4, r0
   12c48:	ldr	r0, [r0]
   12c4c:	ldr	r1, [r4, #8]
   12c50:	ldr	r2, [r4, #12]
   12c54:	add	r1, r2, r1
   12c58:	str	r1, [r4, #12]
   12c5c:	add	r1, r1, r1, lsl #1
   12c60:	lsl	r1, r1, #2
   12c64:	bl	11eb4 <realloc@plt>
   12c68:	str	r0, [r4]
   12c6c:	mov	r0, r4
   12c70:	bl	13864 <table_get_row_length@@Base>
   12c74:	cmp	r0, #1
   12c78:	poplt	{r4, r5, r6, r7, fp, pc}
   12c7c:	mov	r5, r0
   12c80:	mov	r6, #0
   12c84:	mov	r0, r4
   12c88:	mov	r1, r6
   12c8c:	bl	137f4 <table_get_row_ptr@@Base>
   12c90:	mov	r7, r0
   12c94:	ldr	r0, [r0]
   12c98:	ldr	r1, [r4, #12]
   12c9c:	lsl	r1, r1, #2
   12ca0:	bl	11eb4 <realloc@plt>
   12ca4:	str	r0, [r7]
   12ca8:	add	r6, r6, #1
   12cac:	cmp	r5, r6
   12cb0:	bne	12c84 <table_add_column@@Base+0xb8>
   12cb4:	pop	{r4, r5, r6, r7, fp, pc}
   12cb8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12cbc:	add	fp, sp, #24
   12cc0:	sub	sp, sp, #8
   12cc4:	mov	r7, r2
   12cc8:	mov	r8, r1
   12ccc:	mov	r4, r0
   12cd0:	bl	13864 <table_get_row_length@@Base>
   12cd4:	mov	r5, r0
   12cd8:	mov	r0, r4
   12cdc:	bl	12b40 <table_get_column_length@@Base>
   12ce0:	mov	r6, r0
   12ce4:	mov	r0, r7
   12ce8:	bl	135e0 <table_get_default_compare_function_for_data_type@@Base>
   12cec:	str	r0, [sp]
   12cf0:	mov	r0, r4
   12cf4:	mov	r1, r6
   12cf8:	mov	r2, r8
   12cfc:	mov	r3, r7
   12d00:	bl	12ac8 <table_column_init@@Base>
   12d04:	cmp	r5, #1
   12d08:	blt	12d2c <table_add_column@@Base+0x160>
   12d0c:	mov	r7, #0
   12d10:	mov	r0, r4
   12d14:	mov	r1, r7
   12d18:	mov	r2, r6
   12d1c:	bl	14084 <table_cell_init@@Base>
   12d20:	add	r7, r7, #1
   12d24:	cmp	r5, r7
   12d28:	bne	12d10 <table_add_column@@Base+0x144>
   12d2c:	sub	sp, fp, #24
   12d30:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012d34 <table_remove_column@@Base>:
   12d34:	push	{r4, r5, fp, lr}
   12d38:	add	fp, sp, #8
   12d3c:	mov	r4, r1
   12d40:	mov	r5, r0
   12d44:	bl	12d94 <table_remove_column@@Base+0x60>
   12d48:	ldr	r0, [r5, #4]
   12d4c:	sub	r0, r0, #1
   12d50:	str	r0, [r5, #4]
   12d54:	mov	r0, r5
   12d58:	bl	12b40 <table_get_column_length@@Base>
   12d5c:	ldr	r1, [r5, #8]
   12d60:	udiv	r2, r0, r1
   12d64:	mls	r0, r2, r1, r0
   12d68:	cmp	r0, #0
   12d6c:	bne	12d78 <table_remove_column@@Base+0x44>
   12d70:	mov	r0, r5
   12d74:	bl	12e58 <table_remove_column@@Base+0x124>
   12d78:	mov	r0, r5
   12d7c:	mvn	r1, #0
   12d80:	mov	r2, r4
   12d84:	mov	r3, #16
   12d88:	bl	12a4c <table_notify@@Base>
   12d8c:	mov	r0, #0
   12d90:	pop	{r4, r5, fp, pc}
   12d94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12d98:	add	fp, sp, #24
   12d9c:	mov	r4, r1
   12da0:	mov	r5, r0
   12da4:	bl	12b20 <table_column_destroy@@Base>
   12da8:	mov	r0, r5
   12dac:	bl	12b40 <table_get_column_length@@Base>
   12db0:	sub	r6, r0, #1
   12db4:	cmp	r6, r4
   12db8:	ble	12dec <table_remove_column@@Base+0xb8>
   12dbc:	sub	r0, r6, r4
   12dc0:	add	r1, r4, r4, lsl #1
   12dc4:	lsl	r1, r1, #2
   12dc8:	ldr	r2, [r5]
   12dcc:	add	r2, r2, r1
   12dd0:	vldr	d16, [r2, #12]
   12dd4:	ldr	r3, [r2, #20]
   12dd8:	str	r3, [r2, #8]
   12ddc:	vstr	d16, [r2]
   12de0:	subs	r0, r0, #1
   12de4:	add	r1, r1, #12
   12de8:	bne	12dc8 <table_remove_column@@Base+0x94>
   12dec:	mov	r0, r5
   12df0:	bl	13864 <table_get_row_length@@Base>
   12df4:	cmp	r0, #1
   12df8:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   12dfc:	mov	r8, r0
   12e00:	mov	r7, #0
   12e04:	mov	r0, r5
   12e08:	mov	r1, r7
   12e0c:	mov	r2, r4
   12e10:	bl	140b8 <table_cell_destroy@@Base>
   12e14:	mov	r0, r5
   12e18:	mov	r1, r7
   12e1c:	bl	137f4 <table_get_row_ptr@@Base>
   12e20:	cmp	r6, r4
   12e24:	ble	12e48 <table_remove_column@@Base+0x114>
   12e28:	mov	r1, r4
   12e2c:	ldr	r2, [r0]
   12e30:	add	r3, r2, r1, lsl #2
   12e34:	ldr	r3, [r3, #4]
   12e38:	str	r3, [r2, r1, lsl #2]
   12e3c:	add	r1, r1, #1
   12e40:	cmp	r6, r1
   12e44:	bne	12e2c <table_remove_column@@Base+0xf8>
   12e48:	add	r7, r7, #1
   12e4c:	cmp	r7, r8
   12e50:	bne	12e04 <table_remove_column@@Base+0xd0>
   12e54:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12e58:	push	{r4, r5, r6, r7, fp, lr}
   12e5c:	add	fp, sp, #16
   12e60:	mov	r4, r0
   12e64:	ldr	r0, [r0]
   12e68:	ldr	r1, [r4, #8]
   12e6c:	ldr	r2, [r4, #12]
   12e70:	sub	r1, r2, r1
   12e74:	str	r1, [r4, #12]
   12e78:	add	r1, r1, r1, lsl #1
   12e7c:	lsl	r1, r1, #2
   12e80:	bl	11eb4 <realloc@plt>
   12e84:	str	r0, [r4]
   12e88:	mov	r0, r4
   12e8c:	bl	13864 <table_get_row_length@@Base>
   12e90:	cmp	r0, #1
   12e94:	poplt	{r4, r5, r6, r7, fp, pc}
   12e98:	mov	r5, r0
   12e9c:	mov	r6, #0
   12ea0:	mov	r0, r4
   12ea4:	mov	r1, r6
   12ea8:	bl	137f4 <table_get_row_ptr@@Base>
   12eac:	mov	r7, r0
   12eb0:	ldr	r0, [r0]
   12eb4:	ldr	r1, [r4, #12]
   12eb8:	lsl	r1, r1, #2
   12ebc:	bl	11eb4 <realloc@plt>
   12ec0:	str	r0, [r7]
   12ec4:	add	r6, r6, #1
   12ec8:	cmp	r5, r6
   12ecc:	bne	12ea0 <table_remove_column@@Base+0x16c>
   12ed0:	pop	{r4, r5, r6, r7, fp, pc}

00012ed4 <table_get_column_compare_function@@Base>:
   12ed4:	push	{fp, lr}
   12ed8:	mov	fp, sp
   12edc:	bl	12b10 <table_get_col_ptr@@Base>
   12ee0:	ldr	r0, [r0, #8]
   12ee4:	pop	{fp, pc}

00012ee8 <table_set_column_compare_function@@Base>:
   12ee8:	push	{r4, sl, fp, lr}
   12eec:	add	fp, sp, #8
   12ef0:	mov	r4, r2
   12ef4:	bl	12b10 <table_get_col_ptr@@Base>
   12ef8:	str	r4, [r0, #8]
   12efc:	pop	{r4, sl, fp, pc}

00012f00 <table_compare_bool@@Base>:
   12f00:	cmp	r0, #0
   12f04:	beq	12f38 <table_compare_bool@@Base+0x38>
   12f08:	cmp	r1, #0
   12f0c:	moveq	r1, #1
   12f10:	moveq	r0, r1
   12f14:	bxeq	lr
   12f18:	ldrb	r2, [r1]
   12f1c:	ldrb	r0, [r0]
   12f20:	mov	r1, #0
   12f24:	cmp	r0, r2
   12f28:	mvncc	r1, #0
   12f2c:	movwhi	r1, #1
   12f30:	mov	r0, r1
   12f34:	bx	lr
   12f38:	cmp	r1, #0
   12f3c:	mvnne	r1, #0
   12f40:	mov	r0, r1
   12f44:	bx	lr

00012f48 <table_compare_int@@Base>:
   12f48:	cmp	r0, #0
   12f4c:	beq	12f80 <table_compare_int@@Base+0x38>
   12f50:	cmp	r1, #0
   12f54:	moveq	r1, #1
   12f58:	moveq	r0, r1
   12f5c:	bxeq	lr
   12f60:	ldr	r2, [r1]
   12f64:	ldr	r0, [r0]
   12f68:	mov	r1, #0
   12f6c:	cmp	r0, r2
   12f70:	mvnlt	r1, #0
   12f74:	movwgt	r1, #1
   12f78:	mov	r0, r1
   12f7c:	bx	lr
   12f80:	cmp	r1, #0
   12f84:	mvnne	r1, #0
   12f88:	mov	r0, r1
   12f8c:	bx	lr

00012f90 <table_compare_uint@@Base>:
   12f90:	cmp	r0, #0
   12f94:	beq	12fc8 <table_compare_uint@@Base+0x38>
   12f98:	cmp	r1, #0
   12f9c:	moveq	r1, #1
   12fa0:	moveq	r0, r1
   12fa4:	bxeq	lr
   12fa8:	ldr	r2, [r1]
   12fac:	ldr	r0, [r0]
   12fb0:	mov	r1, #0
   12fb4:	cmp	r0, r2
   12fb8:	mvncc	r1, #0
   12fbc:	movwhi	r1, #1
   12fc0:	mov	r0, r1
   12fc4:	bx	lr
   12fc8:	cmp	r1, #0
   12fcc:	mvnne	r1, #0
   12fd0:	mov	r0, r1
   12fd4:	bx	lr

00012fd8 <table_compare_int8@@Base>:
   12fd8:	cmp	r0, #0
   12fdc:	beq	13010 <table_compare_int8@@Base+0x38>
   12fe0:	cmp	r1, #0
   12fe4:	moveq	r1, #1
   12fe8:	moveq	r0, r1
   12fec:	bxeq	lr
   12ff0:	ldrsb	r2, [r1]
   12ff4:	ldrsb	r0, [r0]
   12ff8:	mov	r1, #0
   12ffc:	cmp	r0, r2
   13000:	mvnlt	r1, #0
   13004:	movwgt	r1, #1
   13008:	mov	r0, r1
   1300c:	bx	lr
   13010:	cmp	r1, #0
   13014:	mvnne	r1, #0
   13018:	mov	r0, r1
   1301c:	bx	lr

00013020 <table_compare_uint8@@Base>:
   13020:	cmp	r0, #0
   13024:	beq	13058 <table_compare_uint8@@Base+0x38>
   13028:	cmp	r1, #0
   1302c:	moveq	r1, #1
   13030:	moveq	r0, r1
   13034:	bxeq	lr
   13038:	ldrb	r2, [r1]
   1303c:	ldrb	r0, [r0]
   13040:	mov	r1, #0
   13044:	cmp	r0, r2
   13048:	mvncc	r1, #0
   1304c:	movwhi	r1, #1
   13050:	mov	r0, r1
   13054:	bx	lr
   13058:	cmp	r1, #0
   1305c:	mvnne	r1, #0
   13060:	mov	r0, r1
   13064:	bx	lr

00013068 <table_compare_int16@@Base>:
   13068:	cmp	r0, #0
   1306c:	beq	130a0 <table_compare_int16@@Base+0x38>
   13070:	cmp	r1, #0
   13074:	moveq	r1, #1
   13078:	moveq	r0, r1
   1307c:	bxeq	lr
   13080:	ldrsh	r2, [r1]
   13084:	ldrsh	r0, [r0]
   13088:	mov	r1, #0
   1308c:	cmp	r0, r2
   13090:	mvnlt	r1, #0
   13094:	movwgt	r1, #1
   13098:	mov	r0, r1
   1309c:	bx	lr
   130a0:	cmp	r1, #0
   130a4:	mvnne	r1, #0
   130a8:	mov	r0, r1
   130ac:	bx	lr

000130b0 <table_compare_uint16@@Base>:
   130b0:	cmp	r0, #0
   130b4:	beq	130e8 <table_compare_uint16@@Base+0x38>
   130b8:	cmp	r1, #0
   130bc:	moveq	r1, #1
   130c0:	moveq	r0, r1
   130c4:	bxeq	lr
   130c8:	ldrh	r2, [r1]
   130cc:	ldrh	r0, [r0]
   130d0:	mov	r1, #0
   130d4:	cmp	r0, r2
   130d8:	mvncc	r1, #0
   130dc:	movwhi	r1, #1
   130e0:	mov	r0, r1
   130e4:	bx	lr
   130e8:	cmp	r1, #0
   130ec:	mvnne	r1, #0
   130f0:	mov	r0, r1
   130f4:	bx	lr

000130f8 <table_compare_int32@@Base>:
   130f8:	cmp	r0, #0
   130fc:	beq	13130 <table_compare_int32@@Base+0x38>
   13100:	cmp	r1, #0
   13104:	moveq	r1, #1
   13108:	moveq	r0, r1
   1310c:	bxeq	lr
   13110:	ldr	r2, [r1]
   13114:	ldr	r0, [r0]
   13118:	mov	r1, #0
   1311c:	cmp	r0, r2
   13120:	mvnlt	r1, #0
   13124:	movwgt	r1, #1
   13128:	mov	r0, r1
   1312c:	bx	lr
   13130:	cmp	r1, #0
   13134:	mvnne	r1, #0
   13138:	mov	r0, r1
   1313c:	bx	lr

00013140 <table_compare_uint32@@Base>:
   13140:	cmp	r0, #0
   13144:	beq	13178 <table_compare_uint32@@Base+0x38>
   13148:	cmp	r1, #0
   1314c:	moveq	r1, #1
   13150:	moveq	r0, r1
   13154:	bxeq	lr
   13158:	ldr	r2, [r1]
   1315c:	ldr	r0, [r0]
   13160:	mov	r1, #0
   13164:	cmp	r0, r2
   13168:	mvncc	r1, #0
   1316c:	movwhi	r1, #1
   13170:	mov	r0, r1
   13174:	bx	lr
   13178:	cmp	r1, #0
   1317c:	mvnne	r1, #0
   13180:	mov	r0, r1
   13184:	bx	lr

00013188 <table_compare_int64@@Base>:
   13188:	cmp	r0, #0
   1318c:	beq	131e0 <table_compare_int64@@Base+0x58>
   13190:	cmp	r1, #0
   13194:	moveq	r1, #1
   13198:	moveq	r0, r1
   1319c:	bxeq	lr
   131a0:	push	{r5, r7, fp, lr}
   131a4:	add	fp, sp, #8
   131a8:	ldm	r1, {r2, r7}
   131ac:	ldm	r0, {r0, r5}
   131b0:	mov	r1, #0
   131b4:	subs	r3, r0, r2
   131b8:	sbcs	r3, r5, r7
   131bc:	movwlt	r1, #1
   131c0:	cmp	r1, #0
   131c4:	mvnne	r1, #0
   131c8:	subs	r0, r2, r0
   131cc:	sbcs	r0, r7, r5
   131d0:	movwlt	r1, #1
   131d4:	pop	{r5, r7, fp, lr}
   131d8:	mov	r0, r1
   131dc:	bx	lr
   131e0:	cmp	r1, #0
   131e4:	mvnne	r1, #0
   131e8:	mov	r0, r1
   131ec:	bx	lr

000131f0 <table_compare_uint64@@Base>:
   131f0:	cmp	r0, #0
   131f4:	beq	13248 <table_compare_uint64@@Base+0x58>
   131f8:	cmp	r1, #0
   131fc:	moveq	r1, #1
   13200:	moveq	r0, r1
   13204:	bxeq	lr
   13208:	push	{r5, r7, fp, lr}
   1320c:	add	fp, sp, #8
   13210:	ldm	r1, {r2, r7}
   13214:	ldm	r0, {r0, r5}
   13218:	mov	r1, #0
   1321c:	subs	r3, r0, r2
   13220:	sbcs	r3, r5, r7
   13224:	movwcc	r1, #1
   13228:	cmp	r1, #0
   1322c:	mvnne	r1, #0
   13230:	subs	r0, r2, r0
   13234:	sbcs	r0, r7, r5
   13238:	movwcc	r1, #1
   1323c:	pop	{r5, r7, fp, lr}
   13240:	mov	r0, r1
   13244:	bx	lr
   13248:	cmp	r1, #0
   1324c:	mvnne	r1, #0
   13250:	mov	r0, r1
   13254:	bx	lr

00013258 <table_compare_short@@Base>:
   13258:	cmp	r0, #0
   1325c:	beq	13290 <table_compare_short@@Base+0x38>
   13260:	cmp	r1, #0
   13264:	moveq	r1, #1
   13268:	moveq	r0, r1
   1326c:	bxeq	lr
   13270:	ldrsh	r2, [r1]
   13274:	ldrsh	r0, [r0]
   13278:	mov	r1, #0
   1327c:	cmp	r0, r2
   13280:	mvnlt	r1, #0
   13284:	movwgt	r1, #1
   13288:	mov	r0, r1
   1328c:	bx	lr
   13290:	cmp	r1, #0
   13294:	mvnne	r1, #0
   13298:	mov	r0, r1
   1329c:	bx	lr

000132a0 <table_compare_ushort@@Base>:
   132a0:	cmp	r0, #0
   132a4:	beq	132d8 <table_compare_ushort@@Base+0x38>
   132a8:	cmp	r1, #0
   132ac:	moveq	r1, #1
   132b0:	moveq	r0, r1
   132b4:	bxeq	lr
   132b8:	ldrh	r2, [r1]
   132bc:	ldrh	r0, [r0]
   132c0:	mov	r1, #0
   132c4:	cmp	r0, r2
   132c8:	mvncc	r1, #0
   132cc:	movwhi	r1, #1
   132d0:	mov	r0, r1
   132d4:	bx	lr
   132d8:	cmp	r1, #0
   132dc:	mvnne	r1, #0
   132e0:	mov	r0, r1
   132e4:	bx	lr

000132e8 <table_compare_long@@Base>:
   132e8:	cmp	r0, #0
   132ec:	beq	13320 <table_compare_long@@Base+0x38>
   132f0:	cmp	r1, #0
   132f4:	moveq	r1, #1
   132f8:	moveq	r0, r1
   132fc:	bxeq	lr
   13300:	ldr	r2, [r1]
   13304:	ldr	r0, [r0]
   13308:	mov	r1, #0
   1330c:	cmp	r0, r2
   13310:	mvnlt	r1, #0
   13314:	movwgt	r1, #1
   13318:	mov	r0, r1
   1331c:	bx	lr
   13320:	cmp	r1, #0
   13324:	mvnne	r1, #0
   13328:	mov	r0, r1
   1332c:	bx	lr

00013330 <table_compare_ulong@@Base>:
   13330:	cmp	r0, #0
   13334:	beq	13368 <table_compare_ulong@@Base+0x38>
   13338:	cmp	r1, #0
   1333c:	moveq	r1, #1
   13340:	moveq	r0, r1
   13344:	bxeq	lr
   13348:	ldr	r2, [r1]
   1334c:	ldr	r0, [r0]
   13350:	mov	r1, #0
   13354:	cmp	r0, r2
   13358:	mvncc	r1, #0
   1335c:	movwhi	r1, #1
   13360:	mov	r0, r1
   13364:	bx	lr
   13368:	cmp	r1, #0
   1336c:	mvnne	r1, #0
   13370:	mov	r0, r1
   13374:	bx	lr

00013378 <table_compare_llong@@Base>:
   13378:	cmp	r0, #0
   1337c:	beq	133d0 <table_compare_llong@@Base+0x58>
   13380:	cmp	r1, #0
   13384:	moveq	r1, #1
   13388:	moveq	r0, r1
   1338c:	bxeq	lr
   13390:	push	{r5, r7, fp, lr}
   13394:	add	fp, sp, #8
   13398:	ldm	r1, {r2, r7}
   1339c:	ldm	r0, {r0, r5}
   133a0:	mov	r1, #0
   133a4:	subs	r3, r0, r2
   133a8:	sbcs	r3, r5, r7
   133ac:	movwlt	r1, #1
   133b0:	cmp	r1, #0
   133b4:	mvnne	r1, #0
   133b8:	subs	r0, r2, r0
   133bc:	sbcs	r0, r7, r5
   133c0:	movwlt	r1, #1
   133c4:	pop	{r5, r7, fp, lr}
   133c8:	mov	r0, r1
   133cc:	bx	lr
   133d0:	cmp	r1, #0
   133d4:	mvnne	r1, #0
   133d8:	mov	r0, r1
   133dc:	bx	lr

000133e0 <table_compare_ullong@@Base>:
   133e0:	cmp	r0, #0
   133e4:	beq	13418 <table_compare_ullong@@Base+0x38>
   133e8:	cmp	r1, #0
   133ec:	moveq	r1, #1
   133f0:	moveq	r0, r1
   133f4:	bxeq	lr
   133f8:	ldr	r2, [r1]
   133fc:	ldr	r0, [r0]
   13400:	mov	r1, #0
   13404:	cmp	r0, r2
   13408:	mvncc	r1, #0
   1340c:	movwhi	r1, #1
   13410:	mov	r0, r1
   13414:	bx	lr
   13418:	cmp	r1, #0
   1341c:	mvnne	r1, #0
   13420:	mov	r0, r1
   13424:	bx	lr

00013428 <table_compare_float@@Base>:
   13428:	cmp	r0, #0
   1342c:	beq	13464 <table_compare_float@@Base+0x3c>
   13430:	cmp	r1, #0
   13434:	moveq	r1, #1
   13438:	moveq	r0, r1
   1343c:	bxeq	lr
   13440:	vldr	s0, [r1]
   13444:	vldr	s2, [r0]
   13448:	mov	r1, #0
   1344c:	vcmpe.f32	s2, s0
   13450:	vmrs	APSR_nzcv, fpscr
   13454:	mvnmi	r1, #0
   13458:	movwgt	r1, #1
   1345c:	mov	r0, r1
   13460:	bx	lr
   13464:	cmp	r1, #0
   13468:	mvnne	r1, #0
   1346c:	mov	r0, r1
   13470:	bx	lr

00013474 <table_compare_double@@Base>:
   13474:	cmp	r0, #0
   13478:	beq	134b0 <table_compare_double@@Base+0x3c>
   1347c:	cmp	r1, #0
   13480:	moveq	r1, #1
   13484:	moveq	r0, r1
   13488:	bxeq	lr
   1348c:	vldr	d16, [r1]
   13490:	vldr	d17, [r0]
   13494:	mov	r1, #0
   13498:	vcmpe.f64	d17, d16
   1349c:	vmrs	APSR_nzcv, fpscr
   134a0:	mvnmi	r1, #0
   134a4:	movwgt	r1, #1
   134a8:	mov	r0, r1
   134ac:	bx	lr
   134b0:	cmp	r1, #0
   134b4:	mvnne	r1, #0
   134b8:	mov	r0, r1
   134bc:	bx	lr

000134c0 <table_compare_ldouble@@Base>:
   134c0:	cmp	r0, #0
   134c4:	beq	134fc <table_compare_ldouble@@Base+0x3c>
   134c8:	cmp	r1, #0
   134cc:	moveq	r1, #1
   134d0:	moveq	r0, r1
   134d4:	bxeq	lr
   134d8:	vldr	d16, [r1]
   134dc:	vldr	d17, [r0]
   134e0:	mov	r1, #0
   134e4:	vcmpe.f64	d17, d16
   134e8:	vmrs	APSR_nzcv, fpscr
   134ec:	mvnmi	r1, #0
   134f0:	movwgt	r1, #1
   134f4:	mov	r0, r1
   134f8:	bx	lr
   134fc:	cmp	r1, #0
   13500:	mvnne	r1, #0
   13504:	mov	r0, r1
   13508:	bx	lr

0001350c <table_compare_char@@Base>:
   1350c:	cmp	r0, #0
   13510:	beq	13544 <table_compare_char@@Base+0x38>
   13514:	cmp	r1, #0
   13518:	moveq	r1, #1
   1351c:	moveq	r0, r1
   13520:	bxeq	lr
   13524:	ldrb	r2, [r1]
   13528:	ldrb	r0, [r0]
   1352c:	mov	r1, #0
   13530:	cmp	r0, r2
   13534:	mvncc	r1, #0
   13538:	movwhi	r1, #1
   1353c:	mov	r0, r1
   13540:	bx	lr
   13544:	cmp	r1, #0
   13548:	mvnne	r1, #0
   1354c:	mov	r0, r1
   13550:	bx	lr

00013554 <table_compare_uchar@@Base>:
   13554:	cmp	r0, #0
   13558:	beq	1358c <table_compare_uchar@@Base+0x38>
   1355c:	cmp	r1, #0
   13560:	moveq	r1, #1
   13564:	moveq	r0, r1
   13568:	bxeq	lr
   1356c:	ldrb	r2, [r1]
   13570:	ldrb	r0, [r0]
   13574:	mov	r1, #0
   13578:	cmp	r0, r2
   1357c:	mvncc	r1, #0
   13580:	movwhi	r1, #1
   13584:	mov	r0, r1
   13588:	bx	lr
   1358c:	cmp	r1, #0
   13590:	mvnne	r1, #0
   13594:	mov	r0, r1
   13598:	bx	lr

0001359c <table_compare_string@@Base>:
   1359c:	cmp	r0, #0
   135a0:	beq	135b8 <table_compare_string@@Base+0x1c>
   135a4:	cmp	r1, #0
   135a8:	moveq	r1, #1
   135ac:	moveq	r0, r1
   135b0:	bxeq	lr
   135b4:	b	11e90 <strcmp@plt>
   135b8:	cmp	r1, #0
   135bc:	mvnne	r1, #0
   135c0:	mov	r0, r1
   135c4:	bx	lr

000135c8 <table_compare_ptr@@Base>:
   135c8:	mov	r2, #0
   135cc:	cmp	r0, r1
   135d0:	mvncc	r2, #0
   135d4:	movwhi	r2, #1
   135d8:	mov	r0, r2
   135dc:	bx	lr

000135e0 <table_get_default_compare_function_for_data_type@@Base>:
   135e0:	cmp	r0, #23
   135e4:	movhi	r0, #0
   135e8:	movwls	r1, #19296	; 0x4b60
   135ec:	movtls	r1, #1
   135f0:	ldrls	r0, [r1, r0, lsl #2]
   135f4:	bx	lr

000135f8 <table_get@@Base>:
   135f8:	push	{fp, lr}
   135fc:	mov	fp, sp
   13600:	bl	1409c <table_get_cell_ptr@@Base>
   13604:	ldr	r0, [r0]
   13608:	pop	{fp, pc}

0001360c <table_get_bool@@Base>:
   1360c:	push	{fp, lr}
   13610:	mov	fp, sp
   13614:	bl	135f8 <table_get@@Base>
   13618:	ldrb	r0, [r0]
   1361c:	pop	{fp, pc}

00013620 <table_get_int@@Base>:
   13620:	push	{fp, lr}
   13624:	mov	fp, sp
   13628:	bl	135f8 <table_get@@Base>
   1362c:	ldr	r0, [r0]
   13630:	pop	{fp, pc}

00013634 <table_get_uint@@Base>:
   13634:	push	{fp, lr}
   13638:	mov	fp, sp
   1363c:	bl	135f8 <table_get@@Base>
   13640:	ldr	r0, [r0]
   13644:	pop	{fp, pc}

00013648 <table_get_int8@@Base>:
   13648:	push	{fp, lr}
   1364c:	mov	fp, sp
   13650:	bl	135f8 <table_get@@Base>
   13654:	ldrsb	r0, [r0]
   13658:	pop	{fp, pc}

0001365c <table_get_uint8@@Base>:
   1365c:	push	{fp, lr}
   13660:	mov	fp, sp
   13664:	bl	135f8 <table_get@@Base>
   13668:	ldrb	r0, [r0]
   1366c:	pop	{fp, pc}

00013670 <table_get_int16@@Base>:
   13670:	push	{fp, lr}
   13674:	mov	fp, sp
   13678:	bl	135f8 <table_get@@Base>
   1367c:	ldrsh	r0, [r0]
   13680:	pop	{fp, pc}

00013684 <table_get_uint16@@Base>:
   13684:	push	{fp, lr}
   13688:	mov	fp, sp
   1368c:	bl	135f8 <table_get@@Base>
   13690:	ldrh	r0, [r0]
   13694:	pop	{fp, pc}

00013698 <table_get_int32@@Base>:
   13698:	push	{fp, lr}
   1369c:	mov	fp, sp
   136a0:	bl	135f8 <table_get@@Base>
   136a4:	ldr	r0, [r0]
   136a8:	pop	{fp, pc}

000136ac <table_get_uint32@@Base>:
   136ac:	push	{fp, lr}
   136b0:	mov	fp, sp
   136b4:	bl	135f8 <table_get@@Base>
   136b8:	ldr	r0, [r0]
   136bc:	pop	{fp, pc}

000136c0 <table_get_int64@@Base>:
   136c0:	push	{fp, lr}
   136c4:	mov	fp, sp
   136c8:	bl	135f8 <table_get@@Base>
   136cc:	ldrd	r0, [r0]
   136d0:	pop	{fp, pc}

000136d4 <table_get_uint64@@Base>:
   136d4:	push	{fp, lr}
   136d8:	mov	fp, sp
   136dc:	bl	135f8 <table_get@@Base>
   136e0:	ldrd	r0, [r0]
   136e4:	pop	{fp, pc}

000136e8 <table_get_short@@Base>:
   136e8:	push	{fp, lr}
   136ec:	mov	fp, sp
   136f0:	bl	135f8 <table_get@@Base>
   136f4:	ldrsh	r0, [r0]
   136f8:	pop	{fp, pc}

000136fc <table_get_ushort@@Base>:
   136fc:	push	{fp, lr}
   13700:	mov	fp, sp
   13704:	bl	135f8 <table_get@@Base>
   13708:	ldrh	r0, [r0]
   1370c:	pop	{fp, pc}

00013710 <table_get_long@@Base>:
   13710:	push	{fp, lr}
   13714:	mov	fp, sp
   13718:	bl	135f8 <table_get@@Base>
   1371c:	ldr	r0, [r0]
   13720:	pop	{fp, pc}

00013724 <table_get_ulong@@Base>:
   13724:	push	{fp, lr}
   13728:	mov	fp, sp
   1372c:	bl	135f8 <table_get@@Base>
   13730:	ldr	r0, [r0]
   13734:	pop	{fp, pc}

00013738 <table_get_llong@@Base>:
   13738:	push	{fp, lr}
   1373c:	mov	fp, sp
   13740:	bl	135f8 <table_get@@Base>
   13744:	ldrd	r0, [r0]
   13748:	pop	{fp, pc}

0001374c <table_get_ullong@@Base>:
   1374c:	push	{fp, lr}
   13750:	mov	fp, sp
   13754:	bl	135f8 <table_get@@Base>
   13758:	ldrd	r0, [r0]
   1375c:	pop	{fp, pc}

00013760 <table_get_float@@Base>:
   13760:	push	{fp, lr}
   13764:	mov	fp, sp
   13768:	bl	135f8 <table_get@@Base>
   1376c:	vldr	s0, [r0]
   13770:	pop	{fp, pc}

00013774 <table_get_double@@Base>:
   13774:	push	{fp, lr}
   13778:	mov	fp, sp
   1377c:	bl	135f8 <table_get@@Base>
   13780:	vldr	d0, [r0]
   13784:	pop	{fp, pc}

00013788 <table_get_ldouble@@Base>:
   13788:	push	{fp, lr}
   1378c:	mov	fp, sp
   13790:	bl	135f8 <table_get@@Base>
   13794:	vldr	d0, [r0]
   13798:	pop	{fp, pc}

0001379c <table_get_char@@Base>:
   1379c:	push	{fp, lr}
   137a0:	mov	fp, sp
   137a4:	bl	135f8 <table_get@@Base>
   137a8:	ldrb	r0, [r0]
   137ac:	pop	{fp, pc}

000137b0 <table_get_uchar@@Base>:
   137b0:	push	{fp, lr}
   137b4:	mov	fp, sp
   137b8:	bl	135f8 <table_get@@Base>
   137bc:	ldrb	r0, [r0]
   137c0:	pop	{fp, pc}

000137c4 <table_get_string@@Base>:
   137c4:	b	135f8 <table_get@@Base>

000137c8 <table_get_ptr@@Base>:
   137c8:	b	135f8 <table_get@@Base>

000137cc <table_row_init@@Base>:
   137cc:	push	{r4, r5, fp, lr}
   137d0:	add	fp, sp, #8
   137d4:	mov	r4, r0
   137d8:	bl	137f4 <table_get_row_ptr@@Base>
   137dc:	mov	r5, r0
   137e0:	ldr	r0, [r4, #12]
   137e4:	lsl	r0, r0, #2
   137e8:	bl	11ecc <malloc@plt>
   137ec:	str	r0, [r5]
   137f0:	pop	{r4, r5, fp, pc}

000137f4 <table_get_row_ptr@@Base>:
   137f4:	ldr	r0, [r0, #16]
   137f8:	add	r0, r0, r1, lsl #2
   137fc:	bx	lr

00013800 <table_row_destroy@@Base>:
   13800:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13804:	add	fp, sp, #24
   13808:	mov	r4, r1
   1380c:	mov	r5, r0
   13810:	bl	12b40 <table_get_column_length@@Base>
   13814:	mov	r6, r0
   13818:	mov	r0, r5
   1381c:	mov	r1, r4
   13820:	bl	137f4 <table_get_row_ptr@@Base>
   13824:	mov	r8, r0
   13828:	cmp	r6, #1
   1382c:	blt	13850 <table_row_destroy@@Base+0x50>
   13830:	mov	r7, #0
   13834:	mov	r0, r5
   13838:	mov	r1, r4
   1383c:	mov	r2, r7
   13840:	bl	140b8 <table_cell_destroy@@Base>
   13844:	add	r7, r7, #1
   13848:	cmp	r6, r7
   1384c:	bne	13834 <table_row_destroy@@Base+0x34>
   13850:	ldr	r0, [r8]
   13854:	cmp	r0, #0
   13858:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1385c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13860:	b	11ea8 <free@plt>

00013864 <table_get_row_length@@Base>:
   13864:	ldr	r0, [r0, #20]
   13868:	bx	lr

0001386c <table_add_row@@Base>:
   1386c:	push	{r4, sl, fp, lr}
   13870:	add	fp, sp, #8
   13874:	mov	r4, r0
   13878:	bl	13864 <table_get_row_length@@Base>
   1387c:	ldr	r1, [r4, #24]
   13880:	udiv	r2, r0, r1
   13884:	mls	r0, r2, r1, r0
   13888:	cmp	r0, #0
   1388c:	bne	13898 <table_add_row@@Base+0x2c>
   13890:	mov	r0, r4
   13894:	bl	138cc <table_add_row@@Base+0x60>
   13898:	mov	r0, r4
   1389c:	bl	138fc <table_add_row@@Base+0x90>
   138a0:	mov	r0, r4
   138a4:	bl	13864 <table_get_row_length@@Base>
   138a8:	mov	r1, r0
   138ac:	mov	r0, r4
   138b0:	mvn	r2, #0
   138b4:	mov	r3, #2
   138b8:	bl	12a4c <table_notify@@Base>
   138bc:	ldr	r0, [r4, #20]
   138c0:	add	r1, r0, #1
   138c4:	str	r1, [r4, #20]
   138c8:	pop	{r4, sl, fp, pc}
   138cc:	push	{r4, sl, fp, lr}
   138d0:	add	fp, sp, #8
   138d4:	mov	r4, r0
   138d8:	ldr	r0, [r0, #16]
   138dc:	ldr	r1, [r4, #24]
   138e0:	ldr	r2, [r4, #28]
   138e4:	add	r1, r2, r1
   138e8:	str	r1, [r4, #28]
   138ec:	lsl	r1, r1, #2
   138f0:	bl	11eb4 <realloc@plt>
   138f4:	str	r0, [r4, #16]
   138f8:	pop	{r4, sl, fp, pc}
   138fc:	push	{r4, r5, r6, r7, fp, lr}
   13900:	add	fp, sp, #16
   13904:	mov	r4, r0
   13908:	bl	13864 <table_get_row_length@@Base>
   1390c:	mov	r5, r0
   13910:	mov	r0, r4
   13914:	bl	12b40 <table_get_column_length@@Base>
   13918:	mov	r6, r0
   1391c:	mov	r0, r4
   13920:	mov	r1, r5
   13924:	bl	137cc <table_row_init@@Base>
   13928:	cmp	r6, #1
   1392c:	poplt	{r4, r5, r6, r7, fp, pc}
   13930:	mov	r7, #0
   13934:	mov	r0, r4
   13938:	mov	r1, r5
   1393c:	mov	r2, r7
   13940:	bl	14084 <table_cell_init@@Base>
   13944:	add	r7, r7, #1
   13948:	cmp	r6, r7
   1394c:	bne	13934 <table_add_row@@Base+0xc8>
   13950:	pop	{r4, r5, r6, r7, fp, pc}

00013954 <table_remove_row@@Base>:
   13954:	push	{r4, r5, fp, lr}
   13958:	add	fp, sp, #8
   1395c:	mov	r4, r1
   13960:	mov	r5, r0
   13964:	bl	139b4 <table_remove_row@@Base+0x60>
   13968:	ldr	r0, [r5, #20]
   1396c:	sub	r0, r0, #1
   13970:	str	r0, [r5, #20]
   13974:	mov	r0, r5
   13978:	bl	13864 <table_get_row_length@@Base>
   1397c:	ldr	r1, [r5, #24]
   13980:	udiv	r2, r0, r1
   13984:	mls	r0, r2, r1, r0
   13988:	cmp	r0, #0
   1398c:	bne	13998 <table_remove_row@@Base+0x44>
   13990:	mov	r0, r5
   13994:	bl	13a6c <table_remove_row@@Base+0x118>
   13998:	mov	r0, r5
   1399c:	mov	r1, r4
   139a0:	mvn	r2, #0
   139a4:	mov	r3, #4
   139a8:	bl	12a4c <table_notify@@Base>
   139ac:	mov	r0, #0
   139b0:	pop	{r4, r5, fp, pc}
   139b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139b8:	add	fp, sp, #24
   139bc:	mov	r4, r1
   139c0:	mov	r5, r0
   139c4:	bl	13864 <table_get_row_length@@Base>
   139c8:	mov	r8, r0
   139cc:	mov	r0, r5
   139d0:	bl	12b40 <table_get_column_length@@Base>
   139d4:	cmp	r0, #1
   139d8:	blt	13a24 <table_remove_row@@Base+0xd0>
   139dc:	mov	r7, r0
   139e0:	mov	r6, #0
   139e4:	mov	r0, r5
   139e8:	mov	r1, r6
   139ec:	bl	12bb8 <table_get_column_data_type@@Base>
   139f0:	cmp	r0, #23
   139f4:	beq	13a18 <table_remove_row@@Base+0xc4>
   139f8:	mov	r0, r5
   139fc:	mov	r1, r4
   13a00:	mov	r2, r6
   13a04:	bl	1409c <table_get_cell_ptr@@Base>
   13a08:	ldr	r0, [r0]
   13a0c:	cmp	r0, #0
   13a10:	beq	13a18 <table_remove_row@@Base+0xc4>
   13a14:	bl	11ea8 <free@plt>
   13a18:	add	r6, r6, #1
   13a1c:	cmp	r7, r6
   13a20:	bne	139e4 <table_remove_row@@Base+0x90>
   13a24:	mov	r0, r5
   13a28:	mov	r1, r4
   13a2c:	bl	137f4 <table_get_row_ptr@@Base>
   13a30:	ldr	r0, [r0]
   13a34:	cmp	r0, #0
   13a38:	beq	13a40 <table_remove_row@@Base+0xec>
   13a3c:	bl	11ea8 <free@plt>
   13a40:	sub	r0, r8, #1
   13a44:	cmp	r0, r4
   13a48:	pople	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a4c:	ldr	r1, [r5, #16]
   13a50:	add	r2, r1, r4, lsl #2
   13a54:	ldr	r2, [r2, #4]
   13a58:	str	r2, [r1, r4, lsl #2]
   13a5c:	add	r4, r4, #1
   13a60:	cmp	r0, r4
   13a64:	bne	13a4c <table_remove_row@@Base+0xf8>
   13a68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13a6c:	push	{r4, sl, fp, lr}
   13a70:	add	fp, sp, #8
   13a74:	mov	r4, r0
   13a78:	ldr	r0, [r0, #16]
   13a7c:	ldr	r1, [r4, #24]
   13a80:	ldr	r2, [r4, #28]
   13a84:	sub	r1, r2, r1
   13a88:	str	r1, [r4, #28]
   13a8c:	lsl	r1, r1, #2
   13a90:	bl	11eb4 <realloc@plt>
   13a94:	str	r0, [r4, #16]
   13a98:	pop	{r4, sl, fp, pc}

00013a9c <table_set_row_ptr@@Base>:
   13a9c:	ldr	r2, [r2]
   13aa0:	ldr	r0, [r0, #16]
   13aa4:	str	r2, [r0, r1, lsl #2]
   13aa8:	bx	lr

00013aac <table_set@@Base>:
   13aac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ab0:	add	fp, sp, #24
   13ab4:	mov	r8, r3
   13ab8:	mov	r4, r2
   13abc:	mov	r9, r1
   13ac0:	mov	r6, r0
   13ac4:	bl	1409c <table_get_cell_ptr@@Base>
   13ac8:	mov	r5, r0
   13acc:	mov	r0, r6
   13ad0:	mov	r1, r4
   13ad4:	bl	12b10 <table_get_col_ptr@@Base>
   13ad8:	mvn	r7, #0
   13adc:	ldr	r1, [fp, #8]
   13ae0:	cmp	r1, #23
   13ae4:	bhi	13c9c <table_set@@Base+0x1f0>
   13ae8:	add	r2, pc, #0
   13aec:	ldr	pc, [r2, r1, lsl #2]
   13af0:	andeq	r3, r1, r0, asr fp
   13af4:	andeq	r3, r1, r0, asr fp
   13af8:	andeq	r3, r1, r8, asr #23
   13afc:	andeq	r3, r1, r8, asr #23
   13b00:	andeq	r3, r1, r0, lsl #24
   13b04:	andeq	r3, r1, r0, lsl #24
   13b08:	andeq	r3, r1, r0, asr fp
   13b0c:	andeq	r3, r1, r0, asr fp
   13b10:	andeq	r3, r1, r8, lsl #23
   13b14:	andeq	r3, r1, r8, lsl #23
   13b18:	andeq	r3, r1, r0, lsl #24
   13b1c:	andeq	r3, r1, r0, lsl #24
   13b20:	andeq	r3, r1, r0, asr fp
   13b24:	andeq	r3, r1, r0, asr fp
   13b28:	andeq	r3, r1, r8, lsl #23
   13b2c:	andeq	r3, r1, r8, lsl #23
   13b30:	andeq	r3, r1, r0, asr fp
   13b34:	andeq	r3, r1, r8, lsl #23
   13b38:	andeq	r3, r1, r8, lsl #23
   13b3c:	andeq	r3, r1, r8, asr #23
   13b40:	andeq	r3, r1, r8, asr #23
   13b44:	andeq	r3, r1, r8, lsr ip
   13b48:	andeq	r3, r1, r8, asr #23
   13b4c:	andeq	r3, r1, r4, ror ip
   13b50:	ldr	r0, [r0, #4]
   13b54:	cmp	r0, r1
   13b58:	bne	13c9c <table_set@@Base+0x1f0>
   13b5c:	ldr	r0, [r5]
   13b60:	cmp	r0, #0
   13b64:	bne	13b7c <table_set@@Base+0xd0>
   13b68:	mov	r0, #4
   13b6c:	bl	11ecc <malloc@plt>
   13b70:	str	r0, [r5]
   13b74:	cmp	r0, #0
   13b78:	beq	13c9c <table_set@@Base+0x1f0>
   13b7c:	ldr	r1, [r8]
   13b80:	str	r1, [r0]
   13b84:	b	13c84 <table_set@@Base+0x1d8>
   13b88:	ldr	r0, [r0, #4]
   13b8c:	cmp	r0, r1
   13b90:	bne	13c9c <table_set@@Base+0x1f0>
   13b94:	ldr	r0, [r5]
   13b98:	cmp	r0, #0
   13b9c:	bne	13bb4 <table_set@@Base+0x108>
   13ba0:	mov	r0, #8
   13ba4:	bl	11ecc <malloc@plt>
   13ba8:	str	r0, [r5]
   13bac:	cmp	r0, #0
   13bb0:	beq	13c9c <table_set@@Base+0x1f0>
   13bb4:	ldr	r1, [r8]
   13bb8:	ldr	r2, [r8, #4]
   13bbc:	str	r2, [r0, #4]
   13bc0:	str	r1, [r0]
   13bc4:	b	13c84 <table_set@@Base+0x1d8>
   13bc8:	ldr	r0, [r0, #4]
   13bcc:	cmp	r0, r1
   13bd0:	bne	13c9c <table_set@@Base+0x1f0>
   13bd4:	ldr	r0, [r5]
   13bd8:	cmp	r0, #0
   13bdc:	bne	13bf4 <table_set@@Base+0x148>
   13be0:	mov	r0, #1
   13be4:	bl	11ecc <malloc@plt>
   13be8:	str	r0, [r5]
   13bec:	cmp	r0, #0
   13bf0:	beq	13c9c <table_set@@Base+0x1f0>
   13bf4:	ldrb	r1, [r8]
   13bf8:	strb	r1, [r0]
   13bfc:	b	13c84 <table_set@@Base+0x1d8>
   13c00:	ldr	r0, [r0, #4]
   13c04:	cmp	r0, r1
   13c08:	bne	13c9c <table_set@@Base+0x1f0>
   13c0c:	ldr	r0, [r5]
   13c10:	cmp	r0, #0
   13c14:	bne	13c2c <table_set@@Base+0x180>
   13c18:	mov	r0, #2
   13c1c:	bl	11ecc <malloc@plt>
   13c20:	str	r0, [r5]
   13c24:	cmp	r0, #0
   13c28:	beq	13c9c <table_set@@Base+0x1f0>
   13c2c:	ldrh	r1, [r8]
   13c30:	strh	r1, [r0]
   13c34:	b	13c84 <table_set@@Base+0x1d8>
   13c38:	ldr	r0, [r0, #4]
   13c3c:	cmp	r0, r1
   13c40:	bne	13c9c <table_set@@Base+0x1f0>
   13c44:	mov	r0, r8
   13c48:	bl	11ef0 <strlen@plt>
   13c4c:	ldr	r2, [r5]
   13c50:	add	r1, r0, #1
   13c54:	mov	r0, r2
   13c58:	bl	11eb4 <realloc@plt>
   13c5c:	str	r0, [r5]
   13c60:	cmp	r0, #0
   13c64:	beq	13c9c <table_set@@Base+0x1f0>
   13c68:	mov	r1, r8
   13c6c:	bl	11ec0 <strcpy@plt>
   13c70:	b	13c84 <table_set@@Base+0x1d8>
   13c74:	ldr	r0, [r0, #4]
   13c78:	cmp	r0, r1
   13c7c:	bne	13c9c <table_set@@Base+0x1f0>
   13c80:	str	r8, [r5]
   13c84:	mov	r0, r6
   13c88:	mov	r1, r9
   13c8c:	mov	r2, r4
   13c90:	mov	r3, #1
   13c94:	bl	12a4c <table_notify@@Base>
   13c98:	mov	r7, #0
   13c9c:	mov	r0, r7
   13ca0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ca4 <table_set_bool@@Base>:
   13ca4:	push	{fp, lr}
   13ca8:	mov	fp, sp
   13cac:	sub	sp, sp, #8
   13cb0:	strb	r3, [fp, #-1]
   13cb4:	mov	r3, #22
   13cb8:	str	r3, [sp]
   13cbc:	sub	r3, fp, #1
   13cc0:	bl	13aac <table_set@@Base>
   13cc4:	mov	sp, fp
   13cc8:	pop	{fp, pc}

00013ccc <table_set_int@@Base>:
   13ccc:	push	{fp, lr}
   13cd0:	mov	fp, sp
   13cd4:	sub	sp, sp, #8
   13cd8:	str	r3, [sp, #4]
   13cdc:	mov	r3, #0
   13ce0:	str	r3, [sp]
   13ce4:	add	r3, sp, #4
   13ce8:	bl	13aac <table_set@@Base>
   13cec:	mov	sp, fp
   13cf0:	pop	{fp, pc}

00013cf4 <table_set_uint@@Base>:
   13cf4:	push	{fp, lr}
   13cf8:	mov	fp, sp
   13cfc:	sub	sp, sp, #8
   13d00:	str	r3, [sp, #4]
   13d04:	mov	r3, #1
   13d08:	str	r3, [sp]
   13d0c:	add	r3, sp, #4
   13d10:	bl	13aac <table_set@@Base>
   13d14:	mov	sp, fp
   13d18:	pop	{fp, pc}

00013d1c <table_set_int8@@Base>:
   13d1c:	push	{fp, lr}
   13d20:	mov	fp, sp
   13d24:	sub	sp, sp, #8
   13d28:	strb	r3, [fp, #-1]
   13d2c:	mov	r3, #2
   13d30:	str	r3, [sp]
   13d34:	sub	r3, fp, #1
   13d38:	bl	13aac <table_set@@Base>
   13d3c:	mov	sp, fp
   13d40:	pop	{fp, pc}

00013d44 <table_set_uint8@@Base>:
   13d44:	push	{fp, lr}
   13d48:	mov	fp, sp
   13d4c:	sub	sp, sp, #8
   13d50:	strb	r3, [fp, #-1]
   13d54:	mov	r3, #3
   13d58:	str	r3, [sp]
   13d5c:	sub	r3, fp, #1
   13d60:	bl	13aac <table_set@@Base>
   13d64:	mov	sp, fp
   13d68:	pop	{fp, pc}

00013d6c <table_set_int16@@Base>:
   13d6c:	push	{fp, lr}
   13d70:	mov	fp, sp
   13d74:	sub	sp, sp, #8
   13d78:	strh	r3, [fp, #-2]
   13d7c:	mov	r3, #4
   13d80:	str	r3, [sp]
   13d84:	sub	r3, fp, #2
   13d88:	bl	13aac <table_set@@Base>
   13d8c:	mov	sp, fp
   13d90:	pop	{fp, pc}

00013d94 <table_set_uint16@@Base>:
   13d94:	push	{fp, lr}
   13d98:	mov	fp, sp
   13d9c:	sub	sp, sp, #8
   13da0:	strh	r3, [fp, #-2]
   13da4:	mov	r3, #5
   13da8:	str	r3, [sp]
   13dac:	sub	r3, fp, #2
   13db0:	bl	13aac <table_set@@Base>
   13db4:	mov	sp, fp
   13db8:	pop	{fp, pc}

00013dbc <table_set_int32@@Base>:
   13dbc:	push	{fp, lr}
   13dc0:	mov	fp, sp
   13dc4:	sub	sp, sp, #8
   13dc8:	str	r3, [sp, #4]
   13dcc:	mov	r3, #6
   13dd0:	str	r3, [sp]
   13dd4:	add	r3, sp, #4
   13dd8:	bl	13aac <table_set@@Base>
   13ddc:	mov	sp, fp
   13de0:	pop	{fp, pc}

00013de4 <table_set_uint32@@Base>:
   13de4:	push	{fp, lr}
   13de8:	mov	fp, sp
   13dec:	sub	sp, sp, #8
   13df0:	str	r3, [sp, #4]
   13df4:	mov	r3, #7
   13df8:	str	r3, [sp]
   13dfc:	add	r3, sp, #4
   13e00:	bl	13aac <table_set@@Base>
   13e04:	mov	sp, fp
   13e08:	pop	{fp, pc}

00013e0c <table_set_int64@@Base>:
   13e0c:	push	{fp, lr}
   13e10:	mov	fp, sp
   13e14:	sub	sp, sp, #16
   13e18:	ldr	r3, [fp, #12]
   13e1c:	str	r3, [sp, #12]
   13e20:	ldr	r3, [fp, #8]
   13e24:	str	r3, [sp, #8]
   13e28:	mov	r3, #8
   13e2c:	str	r3, [sp]
   13e30:	add	r3, sp, #8
   13e34:	bl	13aac <table_set@@Base>
   13e38:	mov	sp, fp
   13e3c:	pop	{fp, pc}

00013e40 <table_set_uint64@@Base>:
   13e40:	push	{fp, lr}
   13e44:	mov	fp, sp
   13e48:	sub	sp, sp, #16
   13e4c:	ldr	r3, [fp, #12]
   13e50:	str	r3, [sp, #12]
   13e54:	ldr	r3, [fp, #8]
   13e58:	str	r3, [sp, #8]
   13e5c:	mov	r3, #9
   13e60:	str	r3, [sp]
   13e64:	add	r3, sp, #8
   13e68:	bl	13aac <table_set@@Base>
   13e6c:	mov	sp, fp
   13e70:	pop	{fp, pc}

00013e74 <table_set_short@@Base>:
   13e74:	push	{fp, lr}
   13e78:	mov	fp, sp
   13e7c:	sub	sp, sp, #8
   13e80:	strh	r3, [fp, #-2]
   13e84:	mov	r3, #10
   13e88:	str	r3, [sp]
   13e8c:	sub	r3, fp, #2
   13e90:	bl	13aac <table_set@@Base>
   13e94:	mov	sp, fp
   13e98:	pop	{fp, pc}

00013e9c <table_set_ushort@@Base>:
   13e9c:	push	{fp, lr}
   13ea0:	mov	fp, sp
   13ea4:	sub	sp, sp, #8
   13ea8:	strh	r3, [fp, #-2]
   13eac:	mov	r3, #11
   13eb0:	str	r3, [sp]
   13eb4:	sub	r3, fp, #2
   13eb8:	bl	13aac <table_set@@Base>
   13ebc:	mov	sp, fp
   13ec0:	pop	{fp, pc}

00013ec4 <table_set_long@@Base>:
   13ec4:	push	{fp, lr}
   13ec8:	mov	fp, sp
   13ecc:	sub	sp, sp, #8
   13ed0:	str	r3, [sp, #4]
   13ed4:	mov	r3, #12
   13ed8:	str	r3, [sp]
   13edc:	add	r3, sp, #4
   13ee0:	bl	13aac <table_set@@Base>
   13ee4:	mov	sp, fp
   13ee8:	pop	{fp, pc}

00013eec <table_set_ulong@@Base>:
   13eec:	push	{fp, lr}
   13ef0:	mov	fp, sp
   13ef4:	sub	sp, sp, #8
   13ef8:	str	r3, [sp, #4]
   13efc:	mov	r3, #13
   13f00:	str	r3, [sp]
   13f04:	add	r3, sp, #4
   13f08:	bl	13aac <table_set@@Base>
   13f0c:	mov	sp, fp
   13f10:	pop	{fp, pc}

00013f14 <table_set_llong@@Base>:
   13f14:	push	{fp, lr}
   13f18:	mov	fp, sp
   13f1c:	sub	sp, sp, #16
   13f20:	ldr	r3, [fp, #12]
   13f24:	str	r3, [sp, #12]
   13f28:	ldr	r3, [fp, #8]
   13f2c:	str	r3, [sp, #8]
   13f30:	mov	r3, #14
   13f34:	str	r3, [sp]
   13f38:	add	r3, sp, #8
   13f3c:	bl	13aac <table_set@@Base>
   13f40:	mov	sp, fp
   13f44:	pop	{fp, pc}

00013f48 <table_set_ullong@@Base>:
   13f48:	push	{fp, lr}
   13f4c:	mov	fp, sp
   13f50:	sub	sp, sp, #16
   13f54:	ldr	r3, [fp, #12]
   13f58:	str	r3, [sp, #12]
   13f5c:	ldr	r3, [fp, #8]
   13f60:	str	r3, [sp, #8]
   13f64:	mov	r3, #15
   13f68:	str	r3, [sp]
   13f6c:	add	r3, sp, #8
   13f70:	bl	13aac <table_set@@Base>
   13f74:	mov	sp, fp
   13f78:	pop	{fp, pc}

00013f7c <table_set_float@@Base>:
   13f7c:	push	{fp, lr}
   13f80:	mov	fp, sp
   13f84:	sub	sp, sp, #8
   13f88:	vstr	s0, [sp, #4]
   13f8c:	mov	r3, #16
   13f90:	str	r3, [sp]
   13f94:	add	r3, sp, #4
   13f98:	bl	13aac <table_set@@Base>
   13f9c:	mov	sp, fp
   13fa0:	pop	{fp, pc}

00013fa4 <table_set_double@@Base>:
   13fa4:	push	{fp, lr}
   13fa8:	mov	fp, sp
   13fac:	sub	sp, sp, #16
   13fb0:	vstr	d0, [sp, #8]
   13fb4:	mov	r3, #17
   13fb8:	str	r3, [sp]
   13fbc:	add	r3, sp, #8
   13fc0:	bl	13aac <table_set@@Base>
   13fc4:	mov	sp, fp
   13fc8:	pop	{fp, pc}

00013fcc <table_set_ldouble@@Base>:
   13fcc:	push	{fp, lr}
   13fd0:	mov	fp, sp
   13fd4:	sub	sp, sp, #16
   13fd8:	vstr	d0, [sp, #8]
   13fdc:	mov	r3, #18
   13fe0:	str	r3, [sp]
   13fe4:	add	r3, sp, #8
   13fe8:	bl	13aac <table_set@@Base>
   13fec:	mov	sp, fp
   13ff0:	pop	{fp, pc}

00013ff4 <table_set_string@@Base>:
   13ff4:	push	{fp, lr}
   13ff8:	mov	fp, sp
   13ffc:	sub	sp, sp, #8
   14000:	mov	ip, #21
   14004:	str	ip, [sp]
   14008:	bl	13aac <table_set@@Base>
   1400c:	mov	sp, fp
   14010:	pop	{fp, pc}

00014014 <table_set_char@@Base>:
   14014:	push	{fp, lr}
   14018:	mov	fp, sp
   1401c:	sub	sp, sp, #8
   14020:	strb	r3, [fp, #-1]
   14024:	mov	r3, #19
   14028:	str	r3, [sp]
   1402c:	sub	r3, fp, #1
   14030:	bl	13aac <table_set@@Base>
   14034:	mov	sp, fp
   14038:	pop	{fp, pc}

0001403c <table_set_uchar@@Base>:
   1403c:	push	{fp, lr}
   14040:	mov	fp, sp
   14044:	sub	sp, sp, #8
   14048:	strb	r3, [fp, #-1]
   1404c:	mov	r3, #20
   14050:	str	r3, [sp]
   14054:	sub	r3, fp, #1
   14058:	bl	13aac <table_set@@Base>
   1405c:	mov	sp, fp
   14060:	pop	{fp, pc}

00014064 <table_set_ptr@@Base>:
   14064:	push	{fp, lr}
   14068:	mov	fp, sp
   1406c:	sub	sp, sp, #8
   14070:	mov	ip, #23
   14074:	str	ip, [sp]
   14078:	bl	13aac <table_set@@Base>
   1407c:	mov	sp, fp
   14080:	pop	{fp, pc}

00014084 <table_cell_init@@Base>:
   14084:	push	{fp, lr}
   14088:	mov	fp, sp
   1408c:	bl	1409c <table_get_cell_ptr@@Base>
   14090:	mov	r1, #0
   14094:	str	r1, [r0]
   14098:	pop	{fp, pc}

0001409c <table_get_cell_ptr@@Base>:
   1409c:	push	{r4, sl, fp, lr}
   140a0:	add	fp, sp, #8
   140a4:	mov	r4, r2
   140a8:	bl	137f4 <table_get_row_ptr@@Base>
   140ac:	ldr	r0, [r0]
   140b0:	add	r0, r0, r4, lsl #2
   140b4:	pop	{r4, sl, fp, pc}

000140b8 <table_cell_destroy@@Base>:
   140b8:	push	{r4, r5, r6, sl, fp, lr}
   140bc:	add	fp, sp, #16
   140c0:	mov	r4, r2
   140c4:	mov	r5, r1
   140c8:	mov	r6, r0
   140cc:	mov	r1, r2
   140d0:	bl	12bb8 <table_get_column_data_type@@Base>
   140d4:	cmp	r0, #23
   140d8:	popeq	{r4, r5, r6, sl, fp, pc}
   140dc:	mov	r0, r6
   140e0:	mov	r1, r5
   140e4:	mov	r2, r4
   140e8:	bl	1409c <table_get_cell_ptr@@Base>
   140ec:	ldr	r0, [r0]
   140f0:	cmp	r0, #0
   140f4:	beq	14100 <table_cell_destroy@@Base+0x48>
   140f8:	pop	{r4, r5, r6, sl, fp, lr}
   140fc:	b	11ea8 <free@plt>
   14100:	pop	{r4, r5, r6, sl, fp, pc}

00014104 <table_cell_to_buffer@@Base>:
   14104:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14108:	add	fp, sp, #24
   1410c:	sub	sp, sp, #8
   14110:	mov	r5, r3
   14114:	mov	r6, r2
   14118:	mov	r7, r1
   1411c:	mov	r4, r0
   14120:	mov	r1, r2
   14124:	bl	12bb8 <table_get_column_data_type@@Base>
   14128:	cmp	r0, #23
   1412c:	bhi	1441c <table_cell_to_buffer@@Base+0x318>
   14130:	ldr	r8, [fp, #8]
   14134:	add	r1, pc, #0
   14138:	ldr	pc, [r1, r0, lsl #2]
   1413c:	muleq	r1, ip, r1
   14140:			; <UNDEFINED> instruction: 0x000141b0
   14144:	andeq	r4, r1, r4, asr #3
   14148:	ldrdeq	r4, [r1], -r8
   1414c:	andeq	r4, r1, ip, ror #3
   14150:	andeq	r4, r1, r0, lsl #4
   14154:	andeq	r4, r1, r4, lsl r2
   14158:	andeq	r4, r1, r8, lsr #4
   1415c:	andeq	r4, r1, r8, asr #4
   14160:	andeq	r4, r1, ip, asr r2
   14164:	andeq	r4, r1, r0, ror r2
   14168:	muleq	r1, r0, r2
   1416c:			; <UNDEFINED> instruction: 0x000142b0
   14170:	ldrdeq	r4, [r1], -r0
   14174:	strdeq	r4, [r1], -r0
   14178:	andeq	r4, r1, r0, lsl r3
   1417c:	andeq	r4, r1, r0, lsr r3
   14180:	andeq	r4, r1, r4, asr r3
   14184:	andeq	r4, r1, r4, ror r3
   14188:	andeq	r4, r1, r0, lsr #7
   1418c:			; <UNDEFINED> instruction: 0x000143b4
   14190:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14194:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14198:	andeq	r4, r1, r8, lsr #8
   1419c:	mov	r0, r4
   141a0:	mov	r1, r7
   141a4:	mov	r2, r6
   141a8:	bl	13620 <table_get_int@@Base>
   141ac:	b	14404 <table_cell_to_buffer@@Base+0x300>
   141b0:	mov	r0, r4
   141b4:	mov	r1, r7
   141b8:	mov	r2, r6
   141bc:	bl	13634 <table_get_uint@@Base>
   141c0:	b	14238 <table_cell_to_buffer@@Base+0x134>
   141c4:	mov	r0, r4
   141c8:	mov	r1, r7
   141cc:	mov	r2, r6
   141d0:	bl	13648 <table_get_int8@@Base>
   141d4:	b	14404 <table_cell_to_buffer@@Base+0x300>
   141d8:	mov	r0, r4
   141dc:	mov	r1, r7
   141e0:	mov	r2, r6
   141e4:	bl	1365c <table_get_uint8@@Base>
   141e8:	b	14238 <table_cell_to_buffer@@Base+0x134>
   141ec:	mov	r0, r4
   141f0:	mov	r1, r7
   141f4:	mov	r2, r6
   141f8:	bl	13670 <table_get_int16@@Base>
   141fc:	b	14404 <table_cell_to_buffer@@Base+0x300>
   14200:	mov	r0, r4
   14204:	mov	r1, r7
   14208:	mov	r2, r6
   1420c:	bl	13684 <table_get_uint16@@Base>
   14210:	b	14238 <table_cell_to_buffer@@Base+0x134>
   14214:	mov	r0, r4
   14218:	mov	r1, r7
   1421c:	mov	r2, r6
   14220:	bl	13698 <table_get_int32@@Base>
   14224:	b	14404 <table_cell_to_buffer@@Base+0x300>
   14228:	mov	r0, r4
   1422c:	mov	r1, r7
   14230:	mov	r2, r6
   14234:	bl	136ac <table_get_uint32@@Base>
   14238:	mov	r3, r0
   1423c:	movw	r2, #19395	; 0x4bc3
   14240:	movt	r2, #1
   14244:	b	14410 <table_cell_to_buffer@@Base+0x30c>
   14248:	mov	r0, r4
   1424c:	mov	r1, r7
   14250:	mov	r2, r6
   14254:	bl	136c0 <table_get_int64@@Base>
   14258:	b	14300 <table_cell_to_buffer@@Base+0x1fc>
   1425c:	mov	r0, r4
   14260:	mov	r1, r7
   14264:	mov	r2, r6
   14268:	bl	136d4 <table_get_uint64@@Base>
   1426c:	b	14320 <table_cell_to_buffer@@Base+0x21c>
   14270:	mov	r0, r4
   14274:	mov	r1, r7
   14278:	mov	r2, r6
   1427c:	bl	136e8 <table_get_short@@Base>
   14280:	mov	r3, r0
   14284:	movw	r2, #19408	; 0x4bd0
   14288:	movt	r2, #1
   1428c:	b	14410 <table_cell_to_buffer@@Base+0x30c>
   14290:	mov	r0, r4
   14294:	mov	r1, r7
   14298:	mov	r2, r6
   1429c:	bl	136fc <table_get_ushort@@Base>
   142a0:	mov	r3, r0
   142a4:	movw	r2, #19412	; 0x4bd4
   142a8:	movt	r2, #1
   142ac:	b	14410 <table_cell_to_buffer@@Base+0x30c>
   142b0:	mov	r0, r4
   142b4:	mov	r1, r7
   142b8:	mov	r2, r6
   142bc:	bl	13710 <table_get_long@@Base>
   142c0:	mov	r3, r0
   142c4:	movw	r2, #19416	; 0x4bd8
   142c8:	movt	r2, #1
   142cc:	b	14410 <table_cell_to_buffer@@Base+0x30c>
   142d0:	mov	r0, r4
   142d4:	mov	r1, r7
   142d8:	mov	r2, r6
   142dc:	bl	13724 <table_get_ulong@@Base>
   142e0:	mov	r3, r0
   142e4:	movw	r2, #19420	; 0x4bdc
   142e8:	movt	r2, #1
   142ec:	b	14410 <table_cell_to_buffer@@Base+0x30c>
   142f0:	mov	r0, r4
   142f4:	mov	r1, r7
   142f8:	mov	r2, r6
   142fc:	bl	13738 <table_get_llong@@Base>
   14300:	stm	sp, {r0, r1}
   14304:	movw	r2, #19398	; 0x4bc6
   14308:	movt	r2, #1
   1430c:	b	14390 <table_cell_to_buffer@@Base+0x28c>
   14310:	mov	r0, r4
   14314:	mov	r1, r7
   14318:	mov	r2, r6
   1431c:	bl	1374c <table_get_ullong@@Base>
   14320:	stm	sp, {r0, r1}
   14324:	movw	r2, #19403	; 0x4bcb
   14328:	movt	r2, #1
   1432c:	b	14390 <table_cell_to_buffer@@Base+0x28c>
   14330:	mov	r0, r4
   14334:	mov	r1, r7
   14338:	mov	r2, r6
   1433c:	bl	13760 <table_get_float@@Base>
   14340:	vcvt.f64.f32	d16, s0
   14344:	vstr	d16, [sp]
   14348:	movw	r2, #19427	; 0x4be3
   1434c:	movt	r2, #1
   14350:	b	14390 <table_cell_to_buffer@@Base+0x28c>
   14354:	mov	r0, r4
   14358:	mov	r1, r7
   1435c:	mov	r2, r6
   14360:	bl	13774 <table_get_double@@Base>
   14364:	vstr	d0, [sp]
   14368:	movw	r2, #19430	; 0x4be6
   1436c:	movt	r2, #1
   14370:	b	14390 <table_cell_to_buffer@@Base+0x28c>
   14374:	mov	r0, r4
   14378:	mov	r1, r7
   1437c:	mov	r2, r6
   14380:	bl	13788 <table_get_ldouble@@Base>
   14384:	vstr	d0, [sp]
   14388:	movw	r2, #19434	; 0x4bea
   1438c:	movt	r2, #1
   14390:	mov	r0, r5
   14394:	mov	r1, r8
   14398:	bl	11efc <snprintf@plt>
   1439c:	b	1441c <table_cell_to_buffer@@Base+0x318>
   143a0:	mov	r0, r4
   143a4:	mov	r1, r7
   143a8:	mov	r2, r6
   143ac:	bl	1379c <table_get_char@@Base>
   143b0:	b	143c4 <table_cell_to_buffer@@Base+0x2c0>
   143b4:	mov	r0, r4
   143b8:	mov	r1, r7
   143bc:	mov	r2, r6
   143c0:	bl	137b0 <table_get_uchar@@Base>
   143c4:	mov	r3, r0
   143c8:	movw	r2, #19438	; 0x4bee
   143cc:	movt	r2, #1
   143d0:	b	14410 <table_cell_to_buffer@@Base+0x30c>
   143d4:	mov	r0, r4
   143d8:	mov	r1, r7
   143dc:	mov	r2, r6
   143e0:	bl	137c4 <table_get_string@@Base>
   143e4:	mov	r3, r0
   143e8:	movw	r2, #19424	; 0x4be0
   143ec:	movt	r2, #1
   143f0:	b	14410 <table_cell_to_buffer@@Base+0x30c>
   143f4:	mov	r0, r4
   143f8:	mov	r1, r7
   143fc:	mov	r2, r6
   14400:	bl	1360c <table_get_bool@@Base>
   14404:	mov	r3, r0
   14408:	movw	r2, #19392	; 0x4bc0
   1440c:	movt	r2, #1
   14410:	mov	r0, r5
   14414:	mov	r1, r8
   14418:	bl	11efc <snprintf@plt>
   1441c:	mov	r0, #0
   14420:	sub	sp, fp, #24
   14424:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14428:	mov	r0, r4
   1442c:	mov	r1, r7
   14430:	mov	r2, r6
   14434:	bl	137c8 <table_get_ptr@@Base>
   14438:	mov	r3, r0
   1443c:	movw	r2, #19441	; 0x4bf1
   14440:	movt	r2, #1
   14444:	b	14410 <table_cell_to_buffer@@Base+0x30c>

00014448 <table_cell_from_buffer@@Base>:
   14448:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1444c:	add	fp, sp, #24
   14450:	sub	sp, sp, #264	; 0x108
   14454:	mov	r7, r3
   14458:	mov	r4, r2
   1445c:	mov	r5, r1
   14460:	mov	r6, r0
   14464:	mov	r1, r2
   14468:	bl	12bb8 <table_get_column_data_type@@Base>
   1446c:	cmp	r0, #23
   14470:	bhi	14a44 <table_cell_from_buffer@@Base+0x5fc>
   14474:	add	r1, pc, #0
   14478:	ldr	pc, [r1, r0, lsl #2]
   1447c:	ldrdeq	r4, [r1], -ip
   14480:	andeq	r4, r1, r4, lsl r5
   14484:	andeq	r4, r1, ip, asr #10
   14488:	andeq	r4, r1, r4, lsl #11
   1448c:			; <UNDEFINED> instruction: 0x000145bc
   14490:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14494:	andeq	r4, r1, ip, lsr #12
   14498:	andeq	r4, r1, r4, ror #12
   1449c:	muleq	r1, ip, r6
   144a0:	ldrdeq	r4, [r1], -ip
   144a4:	andeq	r4, r1, ip, lsl r7
   144a8:	andeq	r4, r1, r4, asr r7
   144ac:	andeq	r4, r1, ip, lsl #15
   144b0:	andeq	r4, r1, r4, asr #15
   144b4:	strdeq	r4, [r1], -ip
   144b8:	andeq	r4, r1, ip, lsr r8
   144bc:	andeq	r4, r1, ip, ror r8
   144c0:			; <UNDEFINED> instruction: 0x000148b4
   144c4:	andeq	r4, r1, ip, ror #17
   144c8:	andeq	r4, r1, r4, lsr #18
   144cc:	andeq	r4, r1, ip, asr r9
   144d0:	muleq	r1, r4, r9
   144d4:	andeq	r4, r1, ip, asr #19
   144d8:	andeq	r4, r1, r0, lsl sl
   144dc:	movw	r1, #19392	; 0x4bc0
   144e0:	movt	r1, #1
   144e4:	add	r2, sp, #8
   144e8:	mov	r0, r7
   144ec:	bl	11f08 <__isoc99_sscanf@plt>
   144f0:	mvn	r7, #0
   144f4:	cmp	r0, #1
   144f8:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   144fc:	ldr	r3, [sp, #8]
   14500:	mov	r0, r6
   14504:	mov	r1, r5
   14508:	mov	r2, r4
   1450c:	bl	13ccc <table_set_int@@Base>
   14510:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   14514:	movw	r1, #19395	; 0x4bc3
   14518:	movt	r1, #1
   1451c:	add	r2, sp, #8
   14520:	mov	r0, r7
   14524:	bl	11f08 <__isoc99_sscanf@plt>
   14528:	mvn	r7, #0
   1452c:	cmp	r0, #1
   14530:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   14534:	ldr	r3, [sp, #8]
   14538:	mov	r0, r6
   1453c:	mov	r1, r5
   14540:	mov	r2, r4
   14544:	bl	13cf4 <table_set_uint@@Base>
   14548:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   1454c:	movw	r1, #19444	; 0x4bf4
   14550:	movt	r1, #1
   14554:	add	r2, sp, #8
   14558:	mov	r0, r7
   1455c:	bl	11f08 <__isoc99_sscanf@plt>
   14560:	mvn	r7, #0
   14564:	cmp	r0, #1
   14568:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   1456c:	ldrsb	r3, [sp, #8]
   14570:	mov	r0, r6
   14574:	mov	r1, r5
   14578:	mov	r2, r4
   1457c:	bl	13d1c <table_set_int8@@Base>
   14580:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   14584:	movw	r1, #19449	; 0x4bf9
   14588:	movt	r1, #1
   1458c:	add	r2, sp, #8
   14590:	mov	r0, r7
   14594:	bl	11f08 <__isoc99_sscanf@plt>
   14598:	mvn	r7, #0
   1459c:	cmp	r0, #1
   145a0:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   145a4:	ldrb	r3, [sp, #8]
   145a8:	mov	r0, r6
   145ac:	mov	r1, r5
   145b0:	mov	r2, r4
   145b4:	bl	13d44 <table_set_uint8@@Base>
   145b8:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   145bc:	movw	r1, #19408	; 0x4bd0
   145c0:	movt	r1, #1
   145c4:	add	r2, sp, #8
   145c8:	mov	r0, r7
   145cc:	bl	11f08 <__isoc99_sscanf@plt>
   145d0:	mvn	r7, #0
   145d4:	cmp	r0, #1
   145d8:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   145dc:	ldrsh	r3, [sp, #8]
   145e0:	mov	r0, r6
   145e4:	mov	r1, r5
   145e8:	mov	r2, r4
   145ec:	bl	13d6c <table_set_int16@@Base>
   145f0:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   145f4:	movw	r1, #19412	; 0x4bd4
   145f8:	movt	r1, #1
   145fc:	add	r2, sp, #8
   14600:	mov	r0, r7
   14604:	bl	11f08 <__isoc99_sscanf@plt>
   14608:	mvn	r7, #0
   1460c:	cmp	r0, #1
   14610:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   14614:	ldrh	r3, [sp, #8]
   14618:	mov	r0, r6
   1461c:	mov	r1, r5
   14620:	mov	r2, r4
   14624:	bl	13d94 <table_set_uint16@@Base>
   14628:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   1462c:	movw	r1, #19392	; 0x4bc0
   14630:	movt	r1, #1
   14634:	add	r2, sp, #8
   14638:	mov	r0, r7
   1463c:	bl	11f08 <__isoc99_sscanf@plt>
   14640:	mvn	r7, #0
   14644:	cmp	r0, #1
   14648:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   1464c:	ldr	r3, [sp, #8]
   14650:	mov	r0, r6
   14654:	mov	r1, r5
   14658:	mov	r2, r4
   1465c:	bl	13dbc <table_set_int32@@Base>
   14660:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   14664:	movw	r1, #19395	; 0x4bc3
   14668:	movt	r1, #1
   1466c:	add	r2, sp, #8
   14670:	mov	r0, r7
   14674:	bl	11f08 <__isoc99_sscanf@plt>
   14678:	mvn	r7, #0
   1467c:	cmp	r0, #1
   14680:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   14684:	ldr	r3, [sp, #8]
   14688:	mov	r0, r6
   1468c:	mov	r1, r5
   14690:	mov	r2, r4
   14694:	bl	13de4 <table_set_uint32@@Base>
   14698:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   1469c:	movw	r1, #19398	; 0x4bc6
   146a0:	movt	r1, #1
   146a4:	add	r2, sp, #8
   146a8:	mov	r0, r7
   146ac:	bl	11f08 <__isoc99_sscanf@plt>
   146b0:	mvn	r7, #0
   146b4:	cmp	r0, #1
   146b8:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   146bc:	ldr	r0, [sp, #8]
   146c0:	ldr	r1, [sp, #12]
   146c4:	stm	sp, {r0, r1}
   146c8:	mov	r0, r6
   146cc:	mov	r1, r5
   146d0:	mov	r2, r4
   146d4:	bl	13e0c <table_set_int64@@Base>
   146d8:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   146dc:	movw	r1, #19403	; 0x4bcb
   146e0:	movt	r1, #1
   146e4:	add	r2, sp, #8
   146e8:	mov	r0, r7
   146ec:	bl	11f08 <__isoc99_sscanf@plt>
   146f0:	mvn	r7, #0
   146f4:	cmp	r0, #1
   146f8:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   146fc:	ldr	r0, [sp, #8]
   14700:	ldr	r1, [sp, #12]
   14704:	stm	sp, {r0, r1}
   14708:	mov	r0, r6
   1470c:	mov	r1, r5
   14710:	mov	r2, r4
   14714:	bl	13e40 <table_set_uint64@@Base>
   14718:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   1471c:	movw	r1, #19408	; 0x4bd0
   14720:	movt	r1, #1
   14724:	add	r2, sp, #8
   14728:	mov	r0, r7
   1472c:	bl	11f08 <__isoc99_sscanf@plt>
   14730:	mvn	r7, #0
   14734:	cmp	r0, #1
   14738:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   1473c:	ldrsh	r3, [sp, #8]
   14740:	mov	r0, r6
   14744:	mov	r1, r5
   14748:	mov	r2, r4
   1474c:	bl	13e74 <table_set_short@@Base>
   14750:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   14754:	movw	r1, #19412	; 0x4bd4
   14758:	movt	r1, #1
   1475c:	add	r2, sp, #8
   14760:	mov	r0, r7
   14764:	bl	11f08 <__isoc99_sscanf@plt>
   14768:	mvn	r7, #0
   1476c:	cmp	r0, #1
   14770:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   14774:	ldrh	r3, [sp, #8]
   14778:	mov	r0, r6
   1477c:	mov	r1, r5
   14780:	mov	r2, r4
   14784:	bl	13e9c <table_set_ushort@@Base>
   14788:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   1478c:	movw	r1, #19416	; 0x4bd8
   14790:	movt	r1, #1
   14794:	add	r2, sp, #8
   14798:	mov	r0, r7
   1479c:	bl	11f08 <__isoc99_sscanf@plt>
   147a0:	mvn	r7, #0
   147a4:	cmp	r0, #1
   147a8:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   147ac:	ldr	r3, [sp, #8]
   147b0:	mov	r0, r6
   147b4:	mov	r1, r5
   147b8:	mov	r2, r4
   147bc:	bl	13ec4 <table_set_long@@Base>
   147c0:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   147c4:	movw	r1, #19420	; 0x4bdc
   147c8:	movt	r1, #1
   147cc:	add	r2, sp, #8
   147d0:	mov	r0, r7
   147d4:	bl	11f08 <__isoc99_sscanf@plt>
   147d8:	mvn	r7, #0
   147dc:	cmp	r0, #1
   147e0:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   147e4:	ldr	r3, [sp, #8]
   147e8:	mov	r0, r6
   147ec:	mov	r1, r5
   147f0:	mov	r2, r4
   147f4:	bl	13eec <table_set_ulong@@Base>
   147f8:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   147fc:	movw	r1, #19398	; 0x4bc6
   14800:	movt	r1, #1
   14804:	add	r2, sp, #8
   14808:	mov	r0, r7
   1480c:	bl	11f08 <__isoc99_sscanf@plt>
   14810:	mvn	r7, #0
   14814:	cmp	r0, #1
   14818:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   1481c:	ldr	r0, [sp, #8]
   14820:	ldr	r1, [sp, #12]
   14824:	stm	sp, {r0, r1}
   14828:	mov	r0, r6
   1482c:	mov	r1, r5
   14830:	mov	r2, r4
   14834:	bl	13f14 <table_set_llong@@Base>
   14838:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   1483c:	movw	r1, #19403	; 0x4bcb
   14840:	movt	r1, #1
   14844:	add	r2, sp, #8
   14848:	mov	r0, r7
   1484c:	bl	11f08 <__isoc99_sscanf@plt>
   14850:	mvn	r7, #0
   14854:	cmp	r0, #1
   14858:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   1485c:	ldr	r0, [sp, #8]
   14860:	ldr	r1, [sp, #12]
   14864:	stm	sp, {r0, r1}
   14868:	mov	r0, r6
   1486c:	mov	r1, r5
   14870:	mov	r2, r4
   14874:	bl	13f48 <table_set_ullong@@Base>
   14878:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   1487c:	movw	r1, #19427	; 0x4be3
   14880:	movt	r1, #1
   14884:	add	r2, sp, #8
   14888:	mov	r0, r7
   1488c:	bl	11f08 <__isoc99_sscanf@plt>
   14890:	mvn	r7, #0
   14894:	cmp	r0, #1
   14898:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   1489c:	vldr	s0, [sp, #8]
   148a0:	mov	r0, r6
   148a4:	mov	r1, r5
   148a8:	mov	r2, r4
   148ac:	bl	13f7c <table_set_float@@Base>
   148b0:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   148b4:	movw	r1, #19430	; 0x4be6
   148b8:	movt	r1, #1
   148bc:	add	r2, sp, #8
   148c0:	mov	r0, r7
   148c4:	bl	11f08 <__isoc99_sscanf@plt>
   148c8:	mvn	r7, #0
   148cc:	cmp	r0, #1
   148d0:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   148d4:	vldr	d0, [sp, #8]
   148d8:	mov	r0, r6
   148dc:	mov	r1, r5
   148e0:	mov	r2, r4
   148e4:	bl	13fa4 <table_set_double@@Base>
   148e8:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   148ec:	movw	r1, #19434	; 0x4bea
   148f0:	movt	r1, #1
   148f4:	add	r2, sp, #8
   148f8:	mov	r0, r7
   148fc:	bl	11f08 <__isoc99_sscanf@plt>
   14900:	mvn	r7, #0
   14904:	cmp	r0, #1
   14908:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   1490c:	vldr	d0, [sp, #8]
   14910:	mov	r0, r6
   14914:	mov	r1, r5
   14918:	mov	r2, r4
   1491c:	bl	13fcc <table_set_ldouble@@Base>
   14920:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   14924:	movw	r1, #19438	; 0x4bee
   14928:	movt	r1, #1
   1492c:	add	r2, sp, #8
   14930:	mov	r0, r7
   14934:	bl	11f08 <__isoc99_sscanf@plt>
   14938:	mvn	r7, #0
   1493c:	cmp	r0, #1
   14940:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   14944:	ldrb	r3, [sp, #8]
   14948:	mov	r0, r6
   1494c:	mov	r1, r5
   14950:	mov	r2, r4
   14954:	bl	14014 <table_set_char@@Base>
   14958:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   1495c:	movw	r1, #19438	; 0x4bee
   14960:	movt	r1, #1
   14964:	add	r2, sp, #8
   14968:	mov	r0, r7
   1496c:	bl	11f08 <__isoc99_sscanf@plt>
   14970:	mvn	r7, #0
   14974:	cmp	r0, #1
   14978:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   1497c:	ldrb	r3, [sp, #8]
   14980:	mov	r0, r6
   14984:	mov	r1, r5
   14988:	mov	r2, r4
   1498c:	bl	1403c <table_set_uchar@@Base>
   14990:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   14994:	movw	r1, #19424	; 0x4be0
   14998:	movt	r1, #1
   1499c:	add	r2, sp, #8
   149a0:	mov	r0, r7
   149a4:	bl	11f08 <__isoc99_sscanf@plt>
   149a8:	mvn	r7, #0
   149ac:	cmp	r0, #1
   149b0:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   149b4:	add	r3, sp, #8
   149b8:	mov	r0, r6
   149bc:	mov	r1, r5
   149c0:	mov	r2, r4
   149c4:	bl	13ff4 <table_set_string@@Base>
   149c8:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   149cc:	movw	r1, #19392	; 0x4bc0
   149d0:	movt	r1, #1
   149d4:	add	r2, sp, #8
   149d8:	mov	r0, r7
   149dc:	bl	11f08 <__isoc99_sscanf@plt>
   149e0:	mvn	r7, #0
   149e4:	cmp	r0, #1
   149e8:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   149ec:	ldr	r0, [sp, #8]
   149f0:	cmp	r0, #0
   149f4:	beq	14a54 <table_cell_from_buffer@@Base+0x60c>
   149f8:	mov	r0, r6
   149fc:	mov	r1, r5
   14a00:	mov	r2, r4
   14a04:	mov	r3, #1
   14a08:	bl	13ca4 <table_set_bool@@Base>
   14a0c:	b	14a44 <table_cell_from_buffer@@Base+0x5fc>
   14a10:	movw	r1, #19441	; 0x4bf1
   14a14:	movt	r1, #1
   14a18:	add	r2, sp, #8
   14a1c:	mov	r0, r7
   14a20:	bl	11f08 <__isoc99_sscanf@plt>
   14a24:	mvn	r7, #0
   14a28:	cmp	r0, #1
   14a2c:	bne	14a48 <table_cell_from_buffer@@Base+0x600>
   14a30:	ldr	r3, [sp, #8]
   14a34:	mov	r0, r6
   14a38:	mov	r1, r5
   14a3c:	mov	r2, r4
   14a40:	bl	14064 <table_set_ptr@@Base>
   14a44:	mov	r7, #0
   14a48:	mov	r0, r7
   14a4c:	sub	sp, fp, #24
   14a50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14a54:	mov	r7, #0
   14a58:	mov	r0, r6
   14a5c:	mov	r1, r5
   14a60:	mov	r2, r4
   14a64:	mov	r3, #0
   14a68:	bl	13ca4 <table_set_bool@@Base>
   14a6c:	b	14a48 <table_cell_from_buffer@@Base+0x600>

00014a70 <table_cell_nullify@@Base>:
   14a70:	push	{r4, sl, fp, lr}
   14a74:	add	fp, sp, #8
   14a78:	bl	1409c <table_get_cell_ptr@@Base>
   14a7c:	mov	r4, r0
   14a80:	ldr	r0, [r0]
   14a84:	cmp	r0, #0
   14a88:	beq	14a98 <table_cell_nullify@@Base+0x28>
   14a8c:	bl	11ea8 <free@plt>
   14a90:	mov	r0, #0
   14a94:	str	r0, [r4]
   14a98:	mov	r0, #0
   14a9c:	pop	{r4, sl, fp, pc}

00014aa0 <__libc_csu_init@@Base>:
   14aa0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14aa4:	mov	r7, r0
   14aa8:	ldr	r6, [pc, #72]	; 14af8 <__libc_csu_init@@Base+0x58>
   14aac:	ldr	r5, [pc, #72]	; 14afc <__libc_csu_init@@Base+0x5c>
   14ab0:	add	r6, pc, r6
   14ab4:	add	r5, pc, r5
   14ab8:	sub	r6, r6, r5
   14abc:	mov	r8, r1
   14ac0:	mov	r9, r2
   14ac4:	bl	11e70 <strcmp@plt-0x20>
   14ac8:	asrs	r6, r6, #2
   14acc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14ad0:	mov	r4, #0
   14ad4:	add	r4, r4, #1
   14ad8:	ldr	r3, [r5], #4
   14adc:	mov	r2, r9
   14ae0:	mov	r1, r8
   14ae4:	mov	r0, r7
   14ae8:	blx	r3
   14aec:	cmp	r6, r4
   14af0:	bne	14ad4 <__libc_csu_init@@Base+0x34>
   14af4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14af8:	andeq	r0, r1, r4, asr r4
   14afc:	andeq	r0, r1, ip, asr #8

00014b00 <__libc_csu_fini@@Base>:
   14b00:	bx	lr

Disassembly of section .fini:

00014b04 <.fini>:
   14b04:	push	{r3, lr}
   14b08:	pop	{r3, pc}
