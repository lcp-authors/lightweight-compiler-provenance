
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

00010a8c <.init>:
   10a8c:	push	{r3, lr}
   10a90:	bl	10c74 <getc@plt+0x48>
   10a94:	pop	{r3, pc}

Disassembly of section .plt:

00010a98 <calloc@plt-0x14>:
   10a98:	push	{lr}		; (str lr, [sp, #-4]!)
   10a9c:	ldr	lr, [pc, #4]	; 10aa8 <calloc@plt-0x4>
   10aa0:	add	lr, pc, lr
   10aa4:	ldr	pc, [lr, #8]!
   10aa8:	andeq	r3, r1, r8, asr r5

00010aac <calloc@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #77824	; 0x13000
   10ab4:	ldr	pc, [ip, #1368]!	; 0x558

00010ab8 <strcmp@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #77824	; 0x13000
   10ac0:	ldr	pc, [ip, #1360]!	; 0x550

00010ac4 <printf@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #77824	; 0x13000
   10acc:	ldr	pc, [ip, #1352]!	; 0x548

00010ad0 <fopen@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #77824	; 0x13000
   10ad8:	ldr	pc, [ip, #1344]!	; 0x540

00010adc <free@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #77824	; 0x13000
   10ae4:	ldr	pc, [ip, #1336]!	; 0x538

00010ae8 <utf8proc_get_property@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #77824	; 0x13000
   10af0:	ldr	pc, [ip, #1328]!	; 0x530

00010af4 <fgets@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #77824	; 0x13000
   10afc:	ldr	pc, [ip, #1320]!	; 0x528

00010b00 <utf8proc_encode_char@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #77824	; 0x13000
   10b08:	ldr	pc, [ip, #1312]!	; 0x520

00010b0c <strdup@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #77824	; 0x13000
   10b14:	ldr	pc, [ip, #1304]!	; 0x518

00010b18 <rewind@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #77824	; 0x13000
   10b20:	ldr	pc, [ip, #1296]!	; 0x510

00010b24 <unlink@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #77824	; 0x13000
   10b2c:	ldr	pc, [ip, #1288]!	; 0x508

00010b30 <utf8proc_tolower@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #77824	; 0x13000
   10b38:	ldr	pc, [ip, #1280]!	; 0x500

00010b3c <__xstat@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #77824	; 0x13000
   10b44:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b48 <fwrite@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #77824	; 0x13000
   10b50:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b54 <fread@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #77824	; 0x13000
   10b5c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b60 <utf8proc_iterate@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #77824	; 0x13000
   10b68:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b6c <__libc_start_main@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #77824	; 0x13000
   10b74:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b78 <__sysv_signal@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #77824	; 0x13000
   10b80:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b84 <__gmon_start__@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #77824	; 0x13000
   10b8c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b90 <getpid@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #77824	; 0x13000
   10b98:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b9c <exit@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #77824	; 0x13000
   10ba4:	ldr	pc, [ip, #1208]!	; 0x4b8

00010ba8 <utf8proc_category@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #77824	; 0x13000
   10bb0:	ldr	pc, [ip, #1200]!	; 0x4b0

00010bb4 <strlen@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #77824	; 0x13000
   10bbc:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bc0 <fprintf@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #77824	; 0x13000
   10bc8:	ldr	pc, [ip, #1184]!	; 0x4a0

00010bcc <sqrt@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #77824	; 0x13000
   10bd4:	ldr	pc, [ip, #1176]!	; 0x498

00010bd8 <__isoc99_sscanf@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #77824	; 0x13000
   10be0:	ldr	pc, [ip, #1168]!	; 0x490

00010be4 <fclose@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #77824	; 0x13000
   10bec:	ldr	pc, [ip, #1160]!	; 0x488

00010bf0 <sprintf@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #77824	; 0x13000
   10bf8:	ldr	pc, [ip, #1152]!	; 0x480

00010bfc <utf8proc_errmsg@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #77824	; 0x13000
   10c04:	ldr	pc, [ip, #1144]!	; 0x478

00010c08 <fputs@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #77824	; 0x13000
   10c10:	ldr	pc, [ip, #1136]!	; 0x470

00010c14 <strncmp@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #77824	; 0x13000
   10c1c:	ldr	pc, [ip, #1128]!	; 0x468

00010c20 <abort@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #77824	; 0x13000
   10c28:	ldr	pc, [ip, #1120]!	; 0x460

00010c2c <getc@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #77824	; 0x13000
   10c34:	ldr	pc, [ip, #1112]!	; 0x458

Disassembly of section .text:

00010c38 <error@@Base-0x1758>:
   10c38:	mov	fp, #0
   10c3c:	mov	lr, #0
   10c40:	pop	{r1}		; (ldr r1, [sp], #4)
   10c44:	mov	r2, sp
   10c48:	push	{r2}		; (str r2, [sp, #-4]!)
   10c4c:	push	{r0}		; (str r0, [sp, #-4]!)
   10c50:	ldr	ip, [pc, #16]	; 10c68 <getc@plt+0x3c>
   10c54:	push	{ip}		; (str ip, [sp, #-4]!)
   10c58:	ldr	r0, [pc, #12]	; 10c6c <getc@plt+0x40>
   10c5c:	ldr	r3, [pc, #12]	; 10c70 <getc@plt+0x44>
   10c60:	bl	10b6c <__libc_start_main@plt>
   10c64:	bl	10c20 <abort@plt>
   10c68:	andeq	r2, r1, r8, lsr pc
   10c6c:	andeq	r0, r1, r0, lsr lr
   10c70:	ldrdeq	r2, [r1], -r8
   10c74:	ldr	r3, [pc, #20]	; 10c90 <getc@plt+0x64>
   10c78:	ldr	r2, [pc, #20]	; 10c94 <getc@plt+0x68>
   10c7c:	add	r3, pc, r3
   10c80:	ldr	r2, [r3, r2]
   10c84:	cmp	r2, #0
   10c88:	bxeq	lr
   10c8c:	b	10b84 <__gmon_start__@plt>
   10c90:	andeq	r3, r1, ip, ror r3
   10c94:	muleq	r0, r0, r0
   10c98:	ldr	r0, [pc, #24]	; 10cb8 <getc@plt+0x8c>
   10c9c:	ldr	r3, [pc, #24]	; 10cbc <getc@plt+0x90>
   10ca0:	cmp	r3, r0
   10ca4:	bxeq	lr
   10ca8:	ldr	r3, [pc, #16]	; 10cc0 <getc@plt+0x94>
   10cac:	cmp	r3, #0
   10cb0:	bxeq	lr
   10cb4:	bx	r3
   10cb8:	andeq	r4, r2, r4, lsr #1
   10cbc:	andeq	r4, r2, r4, lsr #1
   10cc0:	andeq	r0, r0, r0
   10cc4:	ldr	r0, [pc, #36]	; 10cf0 <getc@plt+0xc4>
   10cc8:	ldr	r1, [pc, #36]	; 10cf4 <getc@plt+0xc8>
   10ccc:	sub	r1, r1, r0
   10cd0:	asr	r1, r1, #2
   10cd4:	add	r1, r1, r1, lsr #31
   10cd8:	asrs	r1, r1, #1
   10cdc:	bxeq	lr
   10ce0:	ldr	r3, [pc, #16]	; 10cf8 <getc@plt+0xcc>
   10ce4:	cmp	r3, #0
   10ce8:	bxeq	lr
   10cec:	bx	r3
   10cf0:	andeq	r4, r2, r4, lsr #1
   10cf4:	andeq	r4, r2, r4, lsr #1
   10cf8:	andeq	r0, r0, r0
   10cfc:	push	{r4, lr}
   10d00:	ldr	r4, [pc, #24]	; 10d20 <getc@plt+0xf4>
   10d04:	ldrb	r3, [r4]
   10d08:	cmp	r3, #0
   10d0c:	popne	{r4, pc}
   10d10:	bl	10c98 <getc@plt+0x6c>
   10d14:	mov	r3, #1
   10d18:	strb	r3, [r4]
   10d1c:	pop	{r4, pc}
   10d20:	strheq	r4, [r2], -r8
   10d24:	b	10cc4 <getc@plt+0x98>
   10d28:	push	{r4, r5, r6, sl, fp, lr}
   10d2c:	add	fp, sp, #16
   10d30:	mov	r1, r0
   10d34:	movw	r4, #17712	; 0x4530
   10d38:	movt	r4, #19
   10d3c:	ldm	r4, {r5, r6}
   10d40:	mov	r0, r4
   10d44:	bl	10f94 <getc@plt+0x368>
   10d48:	ldm	r4, {r0, r2}
   10d4c:	sub	r1, r0, r5
   10d50:	sub	r2, r2, r6
   10d54:	movw	r0, #27888	; 0x6cf0
   10d58:	movt	r0, #155	; 0x9b
   10d5c:	pop	{r4, r5, r6, sl, fp, lr}
   10d60:	b	11978 <getc@plt+0xd4c>
   10d64:	nop	{0}
   10d68:	push	{r4, sl, fp, lr}
   10d6c:	add	fp, sp, #8
   10d70:	sub	sp, sp, #32
   10d74:	movw	r4, #27888	; 0x6cf0
   10d78:	movt	r4, #155	; 0x9b
   10d7c:	sub	r1, fp, #16
   10d80:	add	r2, sp, #16
   10d84:	mov	r0, r4
   10d88:	bl	119c8 <getc@plt+0xd9c>
   10d8c:	ldr	r1, [r4, #12]
   10d90:	movw	r0, #12120	; 0x2f58
   10d94:	movt	r0, #1
   10d98:	bl	10ac4 <printf@plt>
   10d9c:	movw	r4, #17712	; 0x4530
   10da0:	movt	r4, #19
   10da4:	ldr	r1, [r4]
   10da8:	movw	r0, #12142	; 0x2f6e
   10dac:	movt	r0, #1
   10db0:	bl	10ac4 <printf@plt>
   10db4:	ldr	r1, [r4, #4]
   10db8:	movw	r0, #12162	; 0x2f82
   10dbc:	movt	r0, #1
   10dc0:	bl	10ac4 <printf@plt>
   10dc4:	ldm	r4, {r0, r1}
   10dc8:	sub	r1, r0, r1
   10dcc:	vldr	d16, [pc, #84]	; 10e28 <getc@plt+0x1fc>
   10dd0:	vmov	s0, r1
   10dd4:	vmov	s2, r0
   10dd8:	vcvt.f64.s32	d17, s0
   10ddc:	vcvt.f64.s32	d18, s2
   10de0:	vmul.f64	d16, d17, d16
   10de4:	vdiv.f64	d16, d16, d18
   10de8:	vmov	r2, r3, d16
   10dec:	movw	r0, #12178	; 0x2f92
   10df0:	movt	r0, #1
   10df4:	bl	10ac4 <printf@plt>
   10df8:	vldr	d16, [fp, #-16]
   10dfc:	vldr	d17, [sp, #16]
   10e00:	movw	r0, #12219	; 0x2fbb
   10e04:	movt	r0, #1
   10e08:	str	r0, [sp, #8]
   10e0c:	vstr	d17, [sp]
   10e10:	vmov	r2, r3, d16
   10e14:	movw	r0, #12198	; 0x2fa6
   10e18:	movt	r0, #1
   10e1c:	bl	10ac4 <printf@plt>
   10e20:	sub	sp, fp, #8
   10e24:	pop	{r4, sl, fp, pc}
   10e28:	andeq	r0, r0, r0
   10e2c:	subsmi	r0, r9, r0
   10e30:	push	{fp, lr}
   10e34:	mov	fp, sp
   10e38:	sub	sp, sp, #8
   10e3c:	mov	r4, r1
   10e40:	str	r0, [sp, #4]
   10e44:	add	r0, sp, #4
   10e48:	movw	r2, #12268	; 0x2fec
   10e4c:	movt	r2, #1
   10e50:	mov	r3, #0
   10e54:	bl	12210 <getc@plt+0x15e4>
   10e58:	ldr	r0, [sp, #4]
   10e5c:	cmp	r0, #2
   10e60:	blt	10e94 <getc@plt+0x268>
   10e64:	ldr	r0, [sp, #4]
   10e68:	cmp	r0, #1
   10e6c:	blt	10e8c <getc@plt+0x260>
   10e70:	mov	r5, #0
   10e74:	ldr	r0, [r4, r5, lsl #2]
   10e78:	bl	10d28 <getc@plt+0xfc>
   10e7c:	add	r5, r5, #1
   10e80:	ldr	r0, [sp, #4]
   10e84:	cmp	r5, r0
   10e88:	blt	10e74 <getc@plt+0x248>
   10e8c:	bl	10d68 <getc@plt+0x13c>
   10e90:	bl	12350 <getc@plt+0x1724>
   10e94:	movw	r0, #12318	; 0x301e
   10e98:	movt	r0, #1
   10e9c:	bl	12390 <error@@Base>
   10ea0:	push	{r4, r5, r6, r7, fp, lr}
   10ea4:	add	fp, sp, #16
   10ea8:	mov	r4, r3
   10eac:	mov	r5, r2
   10eb0:	mov	r6, r1
   10eb4:	mov	r7, r0
   10eb8:	mov	r0, r1
   10ebc:	bl	11e48 <getc@plt+0x121c>
   10ec0:	add	r0, r7, r0, lsl #3
   10ec4:	add	r0, r0, #68	; 0x44
   10ec8:	mov	r1, r5
   10ecc:	mov	r2, r4
   10ed0:	bl	10f04 <getc@plt+0x2d8>
   10ed4:	movw	r0, #2116	; 0x844
   10ed8:	add	r0, r7, r0
   10edc:	mov	r1, r5
   10ee0:	mov	r2, r4
   10ee4:	bl	10f04 <getc@plt+0x2d8>
   10ee8:	add	r0, r7, r6, lsl #3
   10eec:	movw	r1, #10180	; 0x27c4
   10ef0:	add	r0, r0, r1
   10ef4:	mov	r1, r5
   10ef8:	mov	r2, r4
   10efc:	pop	{r4, r5, r6, r7, fp, lr}
   10f00:	b	10f04 <getc@plt+0x2d8>
   10f04:	ldm	r0, {r3, ip}
   10f08:	add	r1, r3, r1
   10f0c:	add	r2, ip, r2
   10f10:	stm	r0, {r1, r2}
   10f14:	bx	lr
   10f18:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f1c:	add	fp, sp, #24
   10f20:	mov	r8, r3
   10f24:	mov	r5, r2
   10f28:	mov	r7, r1
   10f2c:	movw	r1, #2124	; 0x84c
   10f30:	add	r6, r0, r1
   10f34:	mov	r0, r6
   10f38:	mov	r1, r7
   10f3c:	bl	11c30 <getc@plt+0x1004>
   10f40:	cmp	r0, #0
   10f44:	beq	10f64 <getc@plt+0x338>
   10f48:	ldr	r1, [r0, #12]
   10f4c:	ldr	r2, [r0, #16]
   10f50:	add	r1, r1, r5
   10f54:	add	r2, r2, r8
   10f58:	str	r1, [r0, #12]
   10f5c:	str	r2, [r0, #16]
   10f60:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10f64:	mov	r0, #1
   10f68:	mov	r1, #20
   10f6c:	bl	11ff0 <getc@plt+0x13c4>
   10f70:	mov	r4, r0
   10f74:	mov	r0, r7
   10f78:	bl	10b0c <strdup@plt>
   10f7c:	add	r1, r4, #8
   10f80:	stm	r1, {r0, r5, r8}
   10f84:	mov	r0, r6
   10f88:	mov	r1, r4
   10f8c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f90:	b	11cd8 <getc@plt+0x10ac>
   10f94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f98:	add	fp, sp, #28
   10f9c:	sub	sp, sp, #20
   10fa0:	mov	r7, r1
   10fa4:	mov	sl, r0
   10fa8:	movw	r1, #15761	; 0x3d91
   10fac:	movt	r1, #1
   10fb0:	mov	r0, r7
   10fb4:	bl	1208c <getc@plt+0x1460>
   10fb8:	mov	r5, r0
   10fbc:	bl	11298 <getc@plt+0x66c>
   10fc0:	cmp	r0, #0
   10fc4:	beq	1127c <getc@plt+0x650>
   10fc8:	movw	r0, #16569	; 0x40b9
   10fcc:	movt	r0, #2
   10fd0:	movw	r1, #12341	; 0x3035
   10fd4:	movt	r1, #1
   10fd8:	mov	r2, #40	; 0x28
   10fdc:	bl	10c14 <strncmp@plt>
   10fe0:	cmp	r0, #0
   10fe4:	bne	1127c <getc@plt+0x650>
   10fe8:	mov	r0, r5
   10fec:	bl	11298 <getc@plt+0x66c>
   10ff0:	cmp	r0, #0
   10ff4:	beq	1127c <getc@plt+0x650>
   10ff8:	movw	r9, #16569	; 0x40b9
   10ffc:	movt	r9, #2
   11000:	movw	r1, #15696	; 0x3d50
   11004:	movt	r1, #1
   11008:	mov	r0, r9
   1100c:	bl	10ab8 <strcmp@plt>
   11010:	cmp	r0, #0
   11014:	bne	1127c <getc@plt+0x650>
   11018:	add	r1, sp, #16
   1101c:	mov	r0, r5
   11020:	mov	r2, sl
   11024:	bl	112c0 <getc@plt+0x694>
   11028:	cmp	r0, #0
   1102c:	beq	1127c <getc@plt+0x650>
   11030:	add	r2, sl, #4
   11034:	add	r1, sp, #12
   11038:	mov	r0, r5
   1103c:	bl	112c0 <getc@plt+0x694>
   11040:	cmp	r0, #0
   11044:	beq	1127c <getc@plt+0x650>
   11048:	mov	r0, r5
   1104c:	bl	11298 <getc@plt+0x66c>
   11050:	cmp	r0, #0
   11054:	beq	1127c <getc@plt+0x650>
   11058:	mov	r0, r5
   1105c:	bl	11298 <getc@plt+0x66c>
   11060:	cmp	r0, #0
   11064:	beq	1127c <getc@plt+0x650>
   11068:	add	r2, sl, #8
   1106c:	add	r1, sp, #8
   11070:	mov	r0, r5
   11074:	bl	112c0 <getc@plt+0x694>
   11078:	cmp	r0, #0
   1107c:	beq	1127c <getc@plt+0x650>
   11080:	add	r2, sl, #12
   11084:	add	r1, sp, #8
   11088:	mov	r0, r5
   1108c:	bl	112c0 <getc@plt+0x694>
   11090:	cmp	r0, #0
   11094:	beq	1127c <getc@plt+0x650>
   11098:	add	r2, sl, #16
   1109c:	add	r1, sp, #8
   110a0:	mov	r0, r5
   110a4:	bl	112c0 <getc@plt+0x694>
   110a8:	cmp	r0, #0
   110ac:	beq	1127c <getc@plt+0x650>
   110b0:	mov	r0, r5
   110b4:	bl	11298 <getc@plt+0x66c>
   110b8:	cmp	r0, #0
   110bc:	beq	1127c <getc@plt+0x650>
   110c0:	mov	r0, r5
   110c4:	bl	11298 <getc@plt+0x66c>
   110c8:	cmp	r0, #0
   110cc:	beq	1127c <getc@plt+0x650>
   110d0:	mov	r0, r5
   110d4:	bl	11298 <getc@plt+0x66c>
   110d8:	cmp	r0, #0
   110dc:	beq	1127c <getc@plt+0x650>
   110e0:	mov	r0, r5
   110e4:	bl	11298 <getc@plt+0x66c>
   110e8:	cmp	r0, #0
   110ec:	beq	1127c <getc@plt+0x650>
   110f0:	add	r1, sl, #20
   110f4:	mov	r0, r5
   110f8:	bl	1131c <getc@plt+0x6f0>
   110fc:	cmp	r0, #0
   11100:	beq	1127c <getc@plt+0x650>
   11104:	add	r1, sl, #36	; 0x24
   11108:	mov	r0, r5
   1110c:	bl	1131c <getc@plt+0x6f0>
   11110:	cmp	r0, #0
   11114:	beq	1127c <getc@plt+0x650>
   11118:	add	r1, sl, #52	; 0x34
   1111c:	mov	r0, r5
   11120:	bl	1131c <getc@plt+0x6f0>
   11124:	cmp	r0, #0
   11128:	beq	1127c <getc@plt+0x650>
   1112c:	mov	r0, r5
   11130:	bl	11298 <getc@plt+0x66c>
   11134:	cmp	r0, #0
   11138:	beq	1127c <getc@plt+0x650>
   1113c:	mov	r0, r5
   11140:	bl	11298 <getc@plt+0x66c>
   11144:	cmp	r0, #0
   11148:	ldrbne	r0, [r9]
   1114c:	cmpne	r0, #10
   11150:	bne	1113c <getc@plt+0x510>
   11154:	ldr	r0, [sp, #12]
   11158:	cmp	r0, #1
   1115c:	blt	111c0 <getc@plt+0x594>
   11160:	mov	r0, r5
   11164:	bl	11298 <getc@plt+0x66c>
   11168:	cmp	r0, #0
   1116c:	beq	111c0 <getc@plt+0x594>
   11170:	add	r1, sp, #8
   11174:	add	r2, sp, #4
   11178:	mov	r0, r5
   1117c:	bl	113a8 <getc@plt+0x77c>
   11180:	cmp	r0, #0
   11184:	beq	111c0 <getc@plt+0x594>
   11188:	add	r7, r9, #20
   1118c:	add	r4, sp, #8
   11190:	add	r6, sp, #4
   11194:	ldr	r3, [sp, #4]
   11198:	ldr	r2, [sp, #8]
   1119c:	mov	r0, sl
   111a0:	mov	r1, r7
   111a4:	bl	10f18 <getc@plt+0x2ec>
   111a8:	mov	r0, r5
   111ac:	mov	r1, r4
   111b0:	mov	r2, r6
   111b4:	bl	113a8 <getc@plt+0x77c>
   111b8:	cmp	r0, #0
   111bc:	bne	11194 <getc@plt+0x568>
   111c0:	ldr	r0, [sp, #16]
   111c4:	cmp	r0, #1
   111c8:	blt	1126c <getc@plt+0x640>
   111cc:	mov	r0, r5
   111d0:	bl	11298 <getc@plt+0x66c>
   111d4:	cmp	r0, #0
   111d8:	beq	1126c <getc@plt+0x640>
   111dc:	add	r1, sp, #8
   111e0:	add	r2, sp, #4
   111e4:	mov	r0, r5
   111e8:	bl	113a8 <getc@plt+0x77c>
   111ec:	cmp	r0, #0
   111f0:	beq	1126c <getc@plt+0x640>
   111f4:	add	r8, sp, #8
   111f8:	add	r7, sp, #4
   111fc:	add	r6, r9, #31
   11200:	mov	r4, sp
   11204:	ldrb	r0, [r9, #31]
   11208:	cmp	r0, #92	; 0x5c
   1120c:	beq	11224 <getc@plt+0x5f8>
   11210:	cmp	r0, #125	; 0x7d
   11214:	bne	11230 <getc@plt+0x604>
   11218:	ldrb	r0, [r9, #30]
   1121c:	str	r0, [sp]
   11220:	b	11244 <getc@plt+0x618>
   11224:	mov	r0, #10
   11228:	str	r0, [sp]
   1122c:	b	11244 <getc@plt+0x618>
   11230:	mov	r0, r6
   11234:	movw	r1, #12384	; 0x3060
   11238:	movt	r1, #1
   1123c:	mov	r2, r4
   11240:	bl	10bd8 <__isoc99_sscanf@plt>
   11244:	ldr	r2, [sp, #8]
   11248:	ldm	sp, {r1, r3}
   1124c:	mov	r0, sl
   11250:	bl	10ea0 <getc@plt+0x274>
   11254:	mov	r0, r5
   11258:	mov	r1, r8
   1125c:	mov	r2, r7
   11260:	bl	113a8 <getc@plt+0x77c>
   11264:	cmp	r0, #0
   11268:	bne	11204 <getc@plt+0x5d8>
   1126c:	mov	r0, r5
   11270:	bl	12104 <getc@plt+0x14d8>
   11274:	sub	sp, fp, #28
   11278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1127c:	movw	r1, #12406	; 0x3076
   11280:	movt	r1, #1
   11284:	cmp	r7, #0
   11288:	movne	r1, r7
   1128c:	movw	r0, #12388	; 0x3064
   11290:	movt	r0, #1
   11294:	bl	123d0 <error@@Base+0x40>
   11298:	push	{fp, lr}
   1129c:	mov	fp, sp
   112a0:	mov	r2, r0
   112a4:	movw	r0, #16569	; 0x40b9
   112a8:	movt	r0, #2
   112ac:	mov	r1, #99	; 0x63
   112b0:	bl	10af4 <fgets@plt>
   112b4:	cmp	r0, #0
   112b8:	movwne	r0, #1
   112bc:	pop	{fp, pc}
   112c0:	push	{r4, r5, r6, sl, fp, lr}
   112c4:	add	fp, sp, #16
   112c8:	mov	r4, r2
   112cc:	mov	r5, r1
   112d0:	bl	11298 <getc@plt+0x66c>
   112d4:	mov	r6, #0
   112d8:	cmp	r0, #0
   112dc:	beq	11314 <getc@plt+0x6e8>
   112e0:	movw	r0, #16569	; 0x40b9
   112e4:	movt	r0, #2
   112e8:	movw	r1, #12681	; 0x3189
   112ec:	movt	r1, #1
   112f0:	mov	r2, r5
   112f4:	bl	10bd8 <__isoc99_sscanf@plt>
   112f8:	cmp	r0, #1
   112fc:	bne	11314 <getc@plt+0x6e8>
   11300:	ldr	r0, [r5]
   11304:	ldr	r1, [r4]
   11308:	add	r0, r1, r0
   1130c:	str	r0, [r4]
   11310:	mov	r6, #1
   11314:	mov	r0, r6
   11318:	pop	{r4, r5, r6, sl, fp, pc}
   1131c:	push	{r4, r5, fp, lr}
   11320:	add	fp, sp, #8
   11324:	sub	sp, sp, #24
   11328:	mov	r4, r1
   1132c:	bl	11298 <getc@plt+0x66c>
   11330:	mov	r5, #0
   11334:	cmp	r0, #0
   11338:	beq	1139c <getc@plt+0x770>
   1133c:	add	r2, sp, #8
   11340:	add	r0, r2, #12
   11344:	add	r1, r2, #8
   11348:	str	r1, [sp]
   1134c:	str	r0, [sp, #4]
   11350:	add	r3, r2, #4
   11354:	movw	r0, #16569	; 0x40b9
   11358:	movt	r0, #2
   1135c:	movw	r1, #12669	; 0x317d
   11360:	movt	r1, #1
   11364:	bl	10bd8 <__isoc99_sscanf@plt>
   11368:	cmp	r0, #4
   1136c:	bne	1139c <getc@plt+0x770>
   11370:	ldm	r4, {r0, r1, r2, r3}
   11374:	ldr	r5, [sp, #8]
   11378:	add	r0, r0, r5
   1137c:	ldr	r5, [sp, #12]
   11380:	add	r1, r1, r5
   11384:	ldr	r5, [sp, #16]
   11388:	add	r2, r2, r5
   1138c:	ldr	r5, [sp, #20]
   11390:	add	r3, r3, r5
   11394:	stm	r4, {r0, r1, r2, r3}
   11398:	mov	r5, #1
   1139c:	mov	r0, r5
   113a0:	sub	sp, fp, #8
   113a4:	pop	{r4, r5, fp, pc}
   113a8:	push	{r4, r5, fp, lr}
   113ac:	add	fp, sp, #8
   113b0:	mov	r4, r2
   113b4:	mov	r5, r1
   113b8:	bl	11298 <getc@plt+0x66c>
   113bc:	cmp	r0, #0
   113c0:	moveq	r0, #0
   113c4:	popeq	{r4, r5, fp, pc}
   113c8:	movw	r0, #16569	; 0x40b9
   113cc:	movt	r0, #2
   113d0:	movw	r1, #12677	; 0x3185
   113d4:	movt	r1, #1
   113d8:	mov	r2, r5
   113dc:	mov	r3, r4
   113e0:	bl	10bd8 <__isoc99_sscanf@plt>
   113e4:	sub	r0, r0, #2
   113e8:	clz	r0, r0
   113ec:	lsr	r0, r0, #5
   113f0:	pop	{r4, r5, fp, pc}
   113f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   113f8:	add	fp, sp, #24
   113fc:	mov	r2, r1
   11400:	mov	r8, r0
   11404:	movw	r1, #13281	; 0x33e1
   11408:	movt	r1, #1
   1140c:	mov	r0, r2
   11410:	bl	1208c <getc@plt+0x1460>
   11414:	mov	r4, r0
   11418:	movw	r1, #12412	; 0x307c
   1141c:	movt	r1, #1
   11420:	movw	r2, #12341	; 0x3035
   11424:	movt	r2, #1
   11428:	movw	r3, #15696	; 0x3d50
   1142c:	movt	r3, #1
   11430:	bl	10bc0 <fprintf@plt>
   11434:	ldr	r1, [r8]
   11438:	movw	r2, #13011	; 0x32d3
   1143c:	movt	r2, #1
   11440:	mov	r0, r4
   11444:	bl	116b4 <getc@plt+0xa88>
   11448:	ldr	r1, [r8, #4]
   1144c:	movw	r2, #12417	; 0x3081
   11450:	movt	r2, #1
   11454:	mov	r0, r4
   11458:	bl	116b4 <getc@plt+0xa88>
   1145c:	ldr	r2, [r8]
   11460:	ldr	r0, [r8, #4]
   11464:	sub	r1, r2, r0
   11468:	mov	r0, r4
   1146c:	bl	116c8 <getc@plt+0xa9c>
   11470:	movw	r1, #12424	; 0x3088
   11474:	movt	r1, #1
   11478:	mov	r0, r4
   1147c:	bl	10bc0 <fprintf@plt>
   11480:	ldr	r1, [r8, #8]
   11484:	movw	r2, #12439	; 0x3097
   11488:	movt	r2, #1
   1148c:	mov	r0, r4
   11490:	bl	116b4 <getc@plt+0xa88>
   11494:	ldr	r1, [r8, #12]
   11498:	movw	r2, #12457	; 0x30a9
   1149c:	movt	r2, #1
   114a0:	mov	r0, r4
   114a4:	bl	116b4 <getc@plt+0xa88>
   114a8:	ldr	r1, [r8, #16]
   114ac:	movw	r2, #12473	; 0x30b9
   114b0:	movt	r2, #1
   114b4:	mov	r0, r4
   114b8:	bl	116b4 <getc@plt+0xa88>
   114bc:	ldr	r2, [r8]
   114c0:	ldr	r0, [r8, #8]
   114c4:	ldr	r1, [r8, #12]
   114c8:	add	r1, r1, r0
   114cc:	mov	r0, r4
   114d0:	bl	116c8 <getc@plt+0xa9c>
   114d4:	movw	r1, #12485	; 0x30c5
   114d8:	movt	r1, #1
   114dc:	mov	r0, r4
   114e0:	bl	10bc0 <fprintf@plt>
   114e4:	ldr	r2, [r8]
   114e8:	ldr	r0, [r8, #48]	; 0x30
   114ec:	sub	r1, r2, r0
   114f0:	mov	r0, r4
   114f4:	bl	116c8 <getc@plt+0xa9c>
   114f8:	movw	r1, #12508	; 0x30dc
   114fc:	movt	r1, #1
   11500:	mov	r0, r4
   11504:	bl	10bc0 <fprintf@plt>
   11508:	movw	r0, #12539	; 0x30fb
   1150c:	movt	r0, #1
   11510:	mov	r1, #37	; 0x25
   11514:	mov	r2, #1
   11518:	mov	r3, r4
   1151c:	bl	10b48 <fwrite@plt>
   11520:	add	r1, r8, #20
   11524:	movw	r2, #12577	; 0x3121
   11528:	movt	r2, #1
   1152c:	mov	r0, r4
   11530:	bl	11728 <getc@plt+0xafc>
   11534:	add	r1, r8, #36	; 0x24
   11538:	movw	r2, #12584	; 0x3128
   1153c:	movt	r2, #1
   11540:	mov	r0, r4
   11544:	bl	11728 <getc@plt+0xafc>
   11548:	add	r1, r8, #52	; 0x34
   1154c:	movw	r2, #12593	; 0x3131
   11550:	movt	r2, #1
   11554:	mov	r0, r4
   11558:	bl	11728 <getc@plt+0xafc>
   1155c:	movw	r1, #12599	; 0x3137
   11560:	movt	r1, #1
   11564:	mov	r0, r4
   11568:	bl	10bc0 <fprintf@plt>
   1156c:	add	r6, r8, #68	; 0x44
   11570:	mvn	r7, #255	; 0xff
   11574:	ldr	r0, [r6]
   11578:	cmp	r0, #1
   1157c:	blt	1159c <getc@plt+0x970>
   11580:	add	r0, r7, #256	; 0x100
   11584:	bl	11e78 <getc@plt+0x124c>
   11588:	mov	r2, r0
   1158c:	mov	r0, r4
   11590:	mov	r1, r6
   11594:	mov	r3, #0
   11598:	bl	11760 <getc@plt+0xb34>
   1159c:	add	r6, r6, #8
   115a0:	adds	r7, r7, #1
   115a4:	bne	11574 <getc@plt+0x948>
   115a8:	movw	r0, #2116	; 0x844
   115ac:	add	r1, r8, r0
   115b0:	movw	r2, #12593	; 0x3131
   115b4:	movt	r2, #1
   115b8:	mov	r0, r4
   115bc:	mov	r3, #0
   115c0:	bl	11760 <getc@plt+0xb34>
   115c4:	ldr	r0, [r8, #4]
   115c8:	cmp	r0, #1
   115cc:	blt	11644 <getc@plt+0xa18>
   115d0:	movw	r0, #2124	; 0x84c
   115d4:	add	r0, r8, r0
   115d8:	bl	11d84 <getc@plt+0x1158>
   115dc:	mov	r0, #10176	; 0x27c0
   115e0:	mov	r6, r8
   115e4:	ldr	r0, [r6, r0]!
   115e8:	mov	r7, r6
   115ec:	ldr	r1, [r7, #-4]!
   115f0:	movw	r2, #6120	; 0x17e8
   115f4:	movt	r2, #1
   115f8:	bl	1184c <getc@plt+0xc20>
   115fc:	movw	r0, #12629	; 0x3155
   11600:	movt	r0, #1
   11604:	mov	r1, #39	; 0x27
   11608:	mov	r2, #1
   1160c:	mov	r3, r4
   11610:	bl	10b48 <fwrite@plt>
   11614:	ldr	r0, [r6]
   11618:	cmp	r0, #1
   1161c:	blt	11644 <getc@plt+0xa18>
   11620:	mov	r5, #0
   11624:	ldr	r0, [r7]
   11628:	ldr	r1, [r0, r5, lsl #2]
   1162c:	mov	r0, r4
   11630:	bl	1181c <getc@plt+0xbf0>
   11634:	add	r5, r5, #1
   11638:	ldr	r0, [r6]
   1163c:	cmp	r5, r0
   11640:	blt	11624 <getc@plt+0x9f8>
   11644:	ldr	r0, [r8]
   11648:	cmp	r0, #1
   1164c:	blt	116a8 <getc@plt+0xa7c>
   11650:	movw	r1, #12599	; 0x3137
   11654:	movt	r1, #1
   11658:	mov	r0, r4
   1165c:	bl	10bc0 <fprintf@plt>
   11660:	movw	r0, #10180	; 0x27c4
   11664:	add	r6, r8, r0
   11668:	mov	r7, #0
   1166c:	movw	r8, #65535	; 0xffff
   11670:	movt	r8, #16
   11674:	mov	r5, #0
   11678:	ldr	r0, [r6, r5, lsl #3]
   1167c:	cmp	r0, #1
   11680:	blt	11698 <getc@plt+0xa6c>
   11684:	add	r1, r6, r7
   11688:	mov	r0, r4
   1168c:	mov	r2, #0
   11690:	mov	r3, r5
   11694:	bl	11760 <getc@plt+0xb34>
   11698:	add	r7, r7, #8
   1169c:	add	r5, r5, #1
   116a0:	cmp	r5, r8
   116a4:	bne	11678 <getc@plt+0xa4c>
   116a8:	mov	r0, r4
   116ac:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   116b0:	b	12104 <getc@plt+0x14d8>
   116b4:	mov	r3, r2
   116b8:	mov	r2, r1
   116bc:	movw	r1, #12715	; 0x31ab
   116c0:	movt	r1, #1
   116c4:	b	10bc0 <fprintf@plt>
   116c8:	mov	ip, r0
   116cc:	cmp	r2, #0
   116d0:	beq	11704 <getc@plt+0xad8>
   116d4:	vldr	d16, [pc, #68]	; 11720 <getc@plt+0xaf4>
   116d8:	vmov	s0, r1
   116dc:	vcvt.f64.s32	d17, s0
   116e0:	vmov	s0, r2
   116e4:	vcvt.f64.s32	d18, s0
   116e8:	vmul.f64	d16, d17, d16
   116ec:	vdiv.f64	d16, d16, d18
   116f0:	vmov	r2, r3, d16
   116f4:	movw	r1, #12694	; 0x3196
   116f8:	movt	r1, #1
   116fc:	mov	r0, ip
   11700:	b	10bc0 <fprintf@plt>
   11704:	movw	r0, #12685	; 0x318d
   11708:	movt	r0, #1
   1170c:	mov	r1, #8
   11710:	mov	r2, #1
   11714:	mov	r3, ip
   11718:	b	10b48 <fwrite@plt>
   1171c:	nop	{0}
   11720:	andeq	r0, r0, r0
   11724:	subsmi	r0, r9, r0
   11728:	push	{fp, lr}
   1172c:	mov	fp, sp
   11730:	sub	sp, sp, #16
   11734:	ldr	ip, [r1]
   11738:	ldmib	r1, {r3, lr}
   1173c:	ldr	r1, [r1, #12]
   11740:	str	lr, [sp]
   11744:	stmib	sp, {r1, r2}
   11748:	movw	r1, #12700	; 0x319c
   1174c:	movt	r1, #1
   11750:	mov	r2, ip
   11754:	bl	10bc0 <fprintf@plt>
   11758:	mov	sp, fp
   1175c:	pop	{fp, pc}
   11760:	push	{r4, r5, r6, r7, fp, lr}
   11764:	add	fp, sp, #16
   11768:	sub	sp, sp, #16
   1176c:	mov	r5, r3
   11770:	mov	r6, r2
   11774:	mov	r7, r1
   11778:	mov	r4, r0
   1177c:	ldm	r1, {r2, r3}
   11780:	movw	r1, #12726	; 0x31b6
   11784:	movt	r1, #1
   11788:	bl	10bc0 <fprintf@plt>
   1178c:	ldr	r2, [r7]
   11790:	ldr	r0, [r7, #4]
   11794:	sub	r1, r2, r0
   11798:	mov	r0, r4
   1179c:	bl	116c8 <getc@plt+0xa9c>
   117a0:	cmp	r6, #0
   117a4:	beq	117b4 <getc@plt+0xb88>
   117a8:	movw	r1, #12719	; 0x31af
   117ac:	movt	r1, #1
   117b0:	b	117d4 <getc@plt+0xba8>
   117b4:	add	r6, sp, #7
   117b8:	mov	r0, #0
   117bc:	mov	r1, r5
   117c0:	mov	r2, r6
   117c4:	mov	r3, #1
   117c8:	bl	12a40 <error@@Base+0x6b0>
   117cc:	movw	r1, #12737	; 0x31c1
   117d0:	movt	r1, #1
   117d4:	mov	r0, r4
   117d8:	mov	r2, r6
   117dc:	bl	10bc0 <fprintf@plt>
   117e0:	sub	sp, fp, #16
   117e4:	pop	{r4, r5, r6, r7, fp, pc}
   117e8:	ldr	r2, [r1, #12]
   117ec:	ldr	r3, [r0, #12]
   117f0:	cmp	r2, r3
   117f4:	bne	11814 <getc@plt+0xbe8>
   117f8:	ldr	r2, [r1, #16]
   117fc:	ldr	r3, [r0, #16]
   11800:	cmp	r2, r3
   11804:	bne	11814 <getc@plt+0xbe8>
   11808:	ldr	r1, [r1, #8]
   1180c:	ldr	r0, [r0, #8]
   11810:	b	12010 <getc@plt+0x13e4>
   11814:	sub	r0, r2, r3
   11818:	bx	lr
   1181c:	push	{fp, lr}
   11820:	mov	fp, sp
   11824:	sub	sp, sp, #8
   11828:	ldr	ip, [r1, #8]
   1182c:	ldr	r2, [r1, #12]
   11830:	ldr	r3, [r1, #16]
   11834:	str	ip, [sp]
   11838:	movw	r1, #12746	; 0x31ca
   1183c:	movt	r1, #1
   11840:	bl	10bc0 <fprintf@plt>
   11844:	mov	sp, fp
   11848:	pop	{fp, pc}
   1184c:	cmp	r0, #2
   11850:	bxlt	lr
   11854:	movw	r3, #16676	; 0x4124
   11858:	movt	r3, #2
   1185c:	str	r2, [r3]
   11860:	movw	r2, #16672	; 0x4120
   11864:	movt	r2, #2
   11868:	str	r1, [r2]
   1186c:	sub	r1, r0, #1
   11870:	mov	r0, #0
   11874:	b	11878 <getc@plt+0xc4c>
   11878:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1187c:	add	fp, sp, #28
   11880:	sub	sp, sp, #4
   11884:	mov	r8, r1
   11888:	mov	r9, r0
   1188c:	movw	r7, #16672	; 0x4120
   11890:	movt	r7, #2
   11894:	movw	sl, #16676	; 0x4124
   11898:	movt	sl, #2
   1189c:	b	118c8 <getc@plt+0xc9c>
   118a0:	ldr	r0, [r7]
   118a4:	str	r6, [r0, r4, lsl #2]
   118a8:	sub	r1, r4, #1
   118ac:	cmp	r1, r9
   118b0:	movgt	r0, r9
   118b4:	blgt	11878 <getc@plt+0xc4c>
   118b8:	add	r9, r5, #1
   118bc:	cmp	r9, r8
   118c0:	subge	sp, fp, #28
   118c4:	popge	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   118c8:	ldr	r0, [r7]
   118cc:	ldr	r6, [r0, r9, lsl #2]
   118d0:	cmp	r9, r8
   118d4:	mov	r4, r8
   118d8:	mov	r5, r9
   118dc:	bge	118a0 <getc@plt+0xc74>
   118e0:	mov	r5, r9
   118e4:	mov	r4, r8
   118e8:	cmp	r5, r4
   118ec:	blt	11900 <getc@plt+0xcd4>
   118f0:	b	1191c <getc@plt+0xcf0>
   118f4:	sub	r4, r4, #1
   118f8:	cmp	r5, r4
   118fc:	bge	1191c <getc@plt+0xcf0>
   11900:	ldr	r0, [r7]
   11904:	ldr	r1, [r0, r4, lsl #2]
   11908:	ldr	r2, [sl]
   1190c:	mov	r0, r6
   11910:	blx	r2
   11914:	cmn	r0, #1
   11918:	ble	118f4 <getc@plt+0xcc8>
   1191c:	cmp	r5, r4
   11920:	beq	11934 <getc@plt+0xd08>
   11924:	ldr	r0, [r7]
   11928:	ldr	r1, [r0, r4, lsl #2]
   1192c:	str	r1, [r0, r5, lsl #2]
   11930:	add	r5, r5, #1
   11934:	cmp	r5, r4
   11938:	bge	11958 <getc@plt+0xd2c>
   1193c:	ldr	r0, [r7]
   11940:	ldr	r1, [r0, r5, lsl #2]
   11944:	ldr	r2, [sl]
   11948:	mov	r0, r6
   1194c:	blx	r2
   11950:	cmp	r0, #1
   11954:	bge	11930 <getc@plt+0xd04>
   11958:	cmp	r5, r4
   1195c:	ldrne	r0, [r7]
   11960:	ldrne	r1, [r0, r5, lsl #2]
   11964:	strne	r1, [r0, r4, lsl #2]
   11968:	subne	r4, r4, #1
   1196c:	cmp	r5, r4
   11970:	blt	118f8 <getc@plt+0xccc>
   11974:	b	118a0 <getc@plt+0xc74>
   11978:	push	{r4, r5, r6, sl, fp, lr}
   1197c:	add	fp, sp, #16
   11980:	mov	r5, r2
   11984:	mov	r6, r1
   11988:	mov	r4, r0
   1198c:	mov	r0, #1
   11990:	mov	r1, #32
   11994:	bl	11ff0 <getc@plt+0x13c4>
   11998:	mov	r1, r0
   1199c:	str	r6, [r1, #8]
   119a0:	str	r5, [r1, #12]
   119a4:	ldr	r0, [r4, #24]
   119a8:	ldr	r3, [r4, #28]
   119ac:	add	r3, r3, r5
   119b0:	add	r2, r0, r6
   119b4:	strd	r2, [r4, #24]
   119b8:	mov	r0, r4
   119bc:	pop	{r4, r5, r6, sl, fp, lr}
   119c0:	b	12d98 <error@@Base+0xa08>
   119c4:	nop	{0}
   119c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119cc:	add	fp, sp, #28
   119d0:	sub	sp, sp, #4
   119d4:	vpush	{d8-d12}
   119d8:	mov	sl, r2
   119dc:	mov	r6, r1
   119e0:	mov	r5, r0
   119e4:	bl	11b80 <getc@plt+0xf54>
   119e8:	cmp	r0, #0
   119ec:	beq	11b64 <getc@plt+0xf38>
   119f0:	ldr	r7, [r5, #12]
   119f4:	ldrd	r8, [r5, #24]
   119f8:	mov	r0, r8
   119fc:	mov	r1, r9
   11a00:	bl	11bc0 <getc@plt+0xf94>
   11a04:	vmov	s2, r7
   11a08:	vcvt.f64.s32	d8, s2
   11a0c:	vmov.i32	d9, #0	; 0x00000000
   11a10:	vmul.f64	d10, d0, d8
   11a14:	vstr	d0, [r5, #32]
   11a18:	ldr	r4, [r5]
   11a1c:	cmp	r4, #0
   11a20:	vmov.i32	d11, #0	; 0x00000000
   11a24:	beq	11a68 <getc@plt+0xe3c>
   11a28:	sub	r0, r7, #1
   11a2c:	vmov.i32	d11, #0	; 0x00000000
   11a30:	vmov	s0, r0
   11a34:	vcvt.f64.s32	d12, s0
   11a38:	ldrd	r0, [r4, #8]
   11a3c:	sub	r0, r8, r0
   11a40:	sub	r1, r9, r1
   11a44:	bl	11bc0 <getc@plt+0xf94>
   11a48:	vmov.f64	d16, d10
   11a4c:	vmls.f64	d16, d0, d12
   11a50:	vadd.f64	d11, d11, d0
   11a54:	vstr	d0, [r4, #16]
   11a58:	vstr	d16, [r4, #24]
   11a5c:	ldr	r4, [r4, #4]
   11a60:	cmp	r4, #0
   11a64:	bne	11a38 <getc@plt+0xe0c>
   11a68:	sub	r0, r7, #1
   11a6c:	vmov	s0, r0
   11a70:	vcvt.f64.s32	d16, s0
   11a74:	vmul.f64	d17, d11, d16
   11a78:	vdiv.f64	d17, d17, d8
   11a7c:	vsub.f64	d17, d10, d17
   11a80:	vstr	d17, [r5, #40]	; 0x28
   11a84:	ldr	r0, [r5]
   11a88:	cmp	r0, #0
   11a8c:	beq	11aac <getc@plt+0xe80>
   11a90:	vmov.i32	d9, #0	; 0x00000000
   11a94:	vldr	d18, [r0, #24]
   11a98:	ldr	r0, [r0, #4]
   11a9c:	vsub.f64	d18, d18, d17
   11aa0:	vmla.f64	d9, d18, d18
   11aa4:	cmp	r0, #0
   11aa8:	bne	11a94 <getc@plt+0xe68>
   11aac:	vdiv.f64	d16, d9, d16
   11ab0:	vdiv.f64	d16, d16, d8
   11ab4:	vsqrt.f64	d0, d16
   11ab8:	vcmpe.f64	d0, d0
   11abc:	vmrs	APSR_nzcv, fpscr
   11ac0:	bvc	11acc <getc@plt+0xea0>
   11ac4:	vmov.f64	d0, d16
   11ac8:	bl	10bcc <sqrt@plt>
   11acc:	vldr	d16, [pc, #156]	; 11b70 <getc@plt+0xf44>
   11ad0:	vldr	d17, [r5, #40]	; 0x28
   11ad4:	vldr	d18, [pc, #156]	; 11b78 <getc@plt+0xf4c>
   11ad8:	vmul.f64	d16, d0, d16
   11adc:	vmov.i32	d19, #0	; 0x00000000
   11ae0:	vsub.f64	d17, d17, d16
   11ae4:	vcmpe.f64	d17, d18
   11ae8:	vmrs	APSR_nzcv, fpscr
   11aec:	vselgt.f64	d20, d18, d19
   11af0:	vcmpe.f64	d17, #0.0
   11af4:	vmrs	APSR_nzcv, fpscr
   11af8:	vmov.f64	d21, d18
   11afc:	vmovmi.f64	d21, d20
   11b00:	vcmpe.f64	d17, d18
   11b04:	vmrs	APSR_nzcv, fpscr
   11b08:	vselgt.f64	d20, d21, d17
   11b0c:	vcmpe.f64	d17, #0.0
   11b10:	vmrs	APSR_nzcv, fpscr
   11b14:	vmovmi.f64	d20, d21
   11b18:	vstr	d20, [r6]
   11b1c:	vldr	d17, [r5, #40]	; 0x28
   11b20:	vadd.f64	d16, d16, d17
   11b24:	vcmpe.f64	d16, d18
   11b28:	vmrs	APSR_nzcv, fpscr
   11b2c:	vselgt.f64	d17, d18, d19
   11b30:	vcmpe.f64	d16, #0.0
   11b34:	vmrs	APSR_nzcv, fpscr
   11b38:	vcmpe.f64	d16, d18
   11b3c:	vmovmi.f64	d18, d17
   11b40:	vmrs	APSR_nzcv, fpscr
   11b44:	vselgt.f64	d17, d18, d16
   11b48:	vcmpe.f64	d16, #0.0
   11b4c:	vmrs	APSR_nzcv, fpscr
   11b50:	vmovmi.f64	d17, d18
   11b54:	vstr	d17, [sl]
   11b58:	vpop	{d8-d12}
   11b5c:	add	sp, sp, #4
   11b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b64:	movw	r0, #12761	; 0x31d9
   11b68:	movt	r0, #1
   11b6c:	bl	12390 <error@@Base>
   11b70:			; <UNDEFINED> instruction: 0xf5c28f5c
   11b74:	svccc	0x00ff5c28
   11b78:	andeq	r0, r0, r0
   11b7c:	subsmi	r0, r9, r0
   11b80:	ldr	r0, [r0]
   11b84:	cmp	r0, #0
   11b88:	moveq	r0, #0
   11b8c:	bxeq	lr
   11b90:	mov	r1, #0
   11b94:	ldr	r2, [r0, #4]
   11b98:	ldr	r0, [r0, #8]
   11b9c:	cmp	r0, #0
   11ba0:	addgt	r1, r1, #1
   11ba4:	cmp	r2, #0
   11ba8:	mov	r0, r2
   11bac:	bne	11b94 <getc@plt+0xf68>
   11bb0:	mov	r0, #0
   11bb4:	cmp	r1, #1
   11bb8:	movwhi	r0, #1
   11bbc:	bx	lr
   11bc0:	sub	r1, r0, r1
   11bc4:	vldr	d16, [pc, #28]	; 11be8 <getc@plt+0xfbc>
   11bc8:	vmov	s0, r1
   11bcc:	vmov	s2, r0
   11bd0:	vcvt.f64.s32	d17, s0
   11bd4:	vcvt.f64.s32	d18, s2
   11bd8:	vmul.f64	d16, d17, d16
   11bdc:	vdiv.f64	d0, d16, d18
   11be0:	bx	lr
   11be4:	nop	{0}
   11be8:	andeq	r0, r0, r0
   11bec:	subsmi	r0, r9, r0
   11bf0:	push	{r4, r5, r6, sl, fp, lr}
   11bf4:	add	fp, sp, #16
   11bf8:	mov	r4, r0
   11bfc:	movw	r6, #503	; 0x1f7
   11c00:	mov	r5, r0
   11c04:	mov	r0, r5
   11c08:	bl	12d3c <error@@Base+0x9ac>
   11c0c:	subs	r6, r6, #1
   11c10:	add	r5, r5, #16
   11c14:	bne	11c04 <getc@plt+0xfd8>
   11c18:	movw	r0, #8052	; 0x1f74
   11c1c:	mov	r1, #0
   11c20:	str	r1, [r4, r0]
   11c24:	movw	r0, #8048	; 0x1f70
   11c28:	str	r1, [r4, r0]
   11c2c:	pop	{r4, r5, r6, sl, fp, pc}
   11c30:	push	{r4, r5, r6, sl, fp, lr}
   11c34:	add	fp, sp, #16
   11c38:	mov	r5, r1
   11c3c:	mov	r4, r0
   11c40:	mov	r0, r1
   11c44:	bl	11c8c <getc@plt+0x1060>
   11c48:	ldr	r6, [r4, r0, lsl #4]
   11c4c:	mov	r4, #0
   11c50:	cmp	r6, #0
   11c54:	bne	11c6c <getc@plt+0x1040>
   11c58:	mov	r0, r4
   11c5c:	pop	{r4, r5, r6, sl, fp, pc}
   11c60:	ldr	r6, [r6, #4]
   11c64:	cmp	r6, #0
   11c68:	beq	11c58 <getc@plt+0x102c>
   11c6c:	ldr	r1, [r6, #8]
   11c70:	mov	r0, r5
   11c74:	bl	10ab8 <strcmp@plt>
   11c78:	cmp	r0, #0
   11c7c:	bne	11c60 <getc@plt+0x1034>
   11c80:	mov	r4, r6
   11c84:	mov	r0, r4
   11c88:	pop	{r4, r5, r6, sl, fp, pc}
   11c8c:	ldrb	r1, [r0]
   11c90:	cmp	r1, #0
   11c94:	moveq	r0, #0
   11c98:	sxtheq	r0, r0
   11c9c:	bxeq	lr
   11ca0:	add	r2, r0, #1
   11ca4:	mov	r0, #0
   11ca8:	uxtab	r0, r0, r1
   11cac:	ldrb	r1, [r2], #1
   11cb0:	cmp	r1, #0
   11cb4:	bne	11ca8 <getc@plt+0x107c>
   11cb8:	movw	r1, #20065	; 0x4e61
   11cbc:	movt	r1, #33354	; 0x824a
   11cc0:	umull	r1, r2, r0, r1
   11cc4:	lsr	r1, r2, #8
   11cc8:	movw	r2, #503	; 0x1f7
   11ccc:	mls	r0, r1, r2, r0
   11cd0:	sxth	r0, r0
   11cd4:	bx	lr
   11cd8:	push	{r4, r5, fp, lr}
   11cdc:	add	fp, sp, #8
   11ce0:	mov	r4, r1
   11ce4:	mov	r5, r0
   11ce8:	ldr	r0, [r1, #8]
   11cec:	bl	11c8c <getc@plt+0x1060>
   11cf0:	add	r0, r5, r0, lsl #4
   11cf4:	mov	r1, r4
   11cf8:	bl	12d48 <error@@Base+0x9b8>
   11cfc:	mov	r0, r5
   11d00:	bl	11d18 <getc@plt+0x10ec>
   11d04:	movw	r0, #8052	; 0x1f74
   11d08:	ldr	r0, [r5, r0]!
   11d0c:	add	r0, r0, #1
   11d10:	str	r0, [r5]
   11d14:	pop	{r4, r5, fp, pc}
   11d18:	push	{r4, sl, fp, lr}
   11d1c:	add	fp, sp, #8
   11d20:	mov	r4, r0
   11d24:	movw	r0, #8048	; 0x1f70
   11d28:	ldr	r0, [r4, r0]!
   11d2c:	cmp	r0, #0
   11d30:	popeq	{r4, sl, fp, pc}
   11d34:	bl	10adc <free@plt>
   11d38:	mov	r0, #0
   11d3c:	str	r0, [r4]
   11d40:	pop	{r4, sl, fp, pc}
   11d44:	push	{r4, r5, fp, lr}
   11d48:	add	fp, sp, #8
   11d4c:	mov	r4, r1
   11d50:	mov	r5, r0
   11d54:	ldr	r0, [r1, #8]
   11d58:	bl	11c8c <getc@plt+0x1060>
   11d5c:	add	r0, r5, r0, lsl #4
   11d60:	mov	r1, r4
   11d64:	bl	12dc0 <error@@Base+0xa30>
   11d68:	mov	r0, r5
   11d6c:	bl	11d18 <getc@plt+0x10ec>
   11d70:	movw	r0, #8052	; 0x1f74
   11d74:	ldr	r0, [r5, r0]!
   11d78:	sub	r0, r0, #1
   11d7c:	str	r0, [r5]
   11d80:	pop	{r4, r5, fp, pc}
   11d84:	push	{r4, r5, fp, lr}
   11d88:	add	fp, sp, #8
   11d8c:	mov	r4, r0
   11d90:	movw	r0, #8048	; 0x1f70
   11d94:	mov	r5, r4
   11d98:	ldr	r0, [r5, r0]!
   11d9c:	cmp	r0, #0
   11da0:	bne	11dfc <getc@plt+0x11d0>
   11da4:	movw	r0, #8052	; 0x1f74
   11da8:	ldr	r0, [r4, r0]
   11dac:	cmp	r0, #0
   11db0:	popeq	{r4, r5, fp, pc}
   11db4:	mov	r1, #4
   11db8:	bl	11ff0 <getc@plt+0x13c4>
   11dbc:	str	r0, [r5]
   11dc0:	mov	r0, #0
   11dc4:	movw	ip, #503	; 0x1f7
   11dc8:	mov	r2, #0
   11dcc:	ldr	r3, [r4, r2, lsl #4]
   11dd0:	cmp	r3, #0
   11dd4:	beq	11df0 <getc@plt+0x11c4>
   11dd8:	ldr	r1, [r5]
   11ddc:	str	r3, [r1, r0, lsl #2]
   11de0:	add	r0, r0, #1
   11de4:	ldr	r3, [r3, #4]
   11de8:	cmp	r3, #0
   11dec:	bne	11dd8 <getc@plt+0x11ac>
   11df0:	add	r2, r2, #1
   11df4:	cmp	r2, ip
   11df8:	bne	11dcc <getc@plt+0x11a0>
   11dfc:	pop	{r4, r5, fp, pc}
   11e00:	push	{r4, r5, r6, r7, fp, lr}
   11e04:	add	fp, sp, #16
   11e08:	mov	r5, r1
   11e0c:	mov	r4, r0
   11e10:	mov	r6, #0
   11e14:	movw	r7, #8048	; 0x1f70
   11e18:	add	r0, r4, r6
   11e1c:	mov	r1, r5
   11e20:	bl	12e98 <error@@Base+0xb08>
   11e24:	add	r6, r6, #16
   11e28:	cmp	r6, r7
   11e2c:	bne	11e18 <getc@plt+0x11ec>
   11e30:	mov	r0, r4
   11e34:	bl	11d18 <getc@plt+0x10ec>
   11e38:	movw	r0, #8052	; 0x1f74
   11e3c:	mov	r1, #0
   11e40:	str	r1, [r4, r0]
   11e44:	pop	{r4, r5, r6, r7, fp, pc}
   11e48:	push	{r4, sl, fp, lr}
   11e4c:	add	fp, sp, #8
   11e50:	mov	r4, r0
   11e54:	movw	r0, #16680	; 0x4128
   11e58:	movt	r0, #2
   11e5c:	ldrh	r0, [r0]
   11e60:	cmp	r0, #0
   11e64:	bleq	11ec0 <getc@plt+0x1294>
   11e68:	movw	r0, #16682	; 0x412a
   11e6c:	movt	r0, #2
   11e70:	ldrb	r0, [r0, r4]
   11e74:	pop	{r4, sl, fp, pc}
   11e78:	push	{r4, r5, fp, lr}
   11e7c:	add	fp, sp, #8
   11e80:	mov	r4, r0
   11e84:	movw	r5, #16680	; 0x4128
   11e88:	movt	r5, #2
   11e8c:	ldrh	r0, [r5]
   11e90:	cmp	r0, #0
   11e94:	bleq	11ec0 <getc@plt+0x1294>
   11e98:	ldrsh	r1, [r5]
   11e9c:	uxtb	r0, r4
   11ea0:	cmp	r0, r1
   11ea4:	movwlt	r1, #16684	; 0x412c
   11ea8:	movtlt	r1, #19
   11eac:	ldrlt	r0, [r1, r0, lsl #2]
   11eb0:	poplt	{r4, r5, fp, pc}
   11eb4:	movw	r0, #12785	; 0x31f1
   11eb8:	movt	r0, #1
   11ebc:	bl	12390 <error@@Base>
   11ec0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ec4:	add	fp, sp, #28
   11ec8:	sub	sp, sp, #4
   11ecc:	mov	r5, #0
   11ed0:	movw	r3, #16680	; 0x4128
   11ed4:	movt	r3, #2
   11ed8:	movw	r4, #14296	; 0x37d8
   11edc:	movt	r4, #1
   11ee0:	movw	sl, #16684	; 0x412c
   11ee4:	movt	sl, #19
   11ee8:	movw	r7, #16682	; 0x412a
   11eec:	movt	r7, #2
   11ef0:	b	11f04 <getc@plt+0x12d8>
   11ef4:	add	r5, r5, #1
   11ef8:	cmp	r5, #91	; 0x5b
   11efc:	subcs	sp, fp, #28
   11f00:	popcs	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f04:	ldrsh	r8, [r3]
   11f08:	cmp	r8, #1
   11f0c:	blt	11f70 <getc@plt+0x1344>
   11f10:	add	r0, r5, r5, lsl #1
   11f14:	add	r0, r4, r0, lsl #2
   11f18:	ldr	r4, [r0, #8]
   11f1c:	ldrsh	r9, [r3]
   11f20:	ldr	r1, [sl]
   11f24:	mov	r0, r4
   11f28:	bl	10ab8 <strcmp@plt>
   11f2c:	cmp	r0, #0
   11f30:	mov	r6, #0
   11f34:	mov	r0, r8
   11f38:	beq	11f78 <getc@plt+0x134c>
   11f3c:	uxth	r8, r9
   11f40:	mov	r1, #1
   11f44:	mov	r6, r1
   11f48:	cmp	r1, r9
   11f4c:	bge	11f68 <getc@plt+0x133c>
   11f50:	ldr	r1, [sl, r6, lsl #2]
   11f54:	mov	r0, r4
   11f58:	bl	10ab8 <strcmp@plt>
   11f5c:	add	r1, r6, #1
   11f60:	cmp	r0, #0
   11f64:	bne	11f44 <getc@plt+0x1318>
   11f68:	mov	r0, r9
   11f6c:	b	11f78 <getc@plt+0x134c>
   11f70:	mov	r6, #0
   11f74:	mov	r0, r8
   11f78:	cmp	r6, r0
   11f7c:	movw	r3, #16680	; 0x4128
   11f80:	movt	r3, #2
   11f84:	movw	r4, #14296	; 0x37d8
   11f88:	movt	r4, #1
   11f8c:	bne	11fb4 <getc@plt+0x1388>
   11f90:	uxth	r0, r8
   11f94:	cmp	r0, #256	; 0x100
   11f98:	beq	11fe4 <getc@plt+0x13b8>
   11f9c:	add	r0, r8, #1
   11fa0:	strh	r0, [r3]
   11fa4:	add	r0, r5, r5, lsl #1
   11fa8:	add	r0, r4, r0, lsl #2
   11fac:	ldr	r0, [r0, #8]
   11fb0:	str	r0, [sl, r6, lsl #2]
   11fb4:	add	r0, r5, r5, lsl #1
   11fb8:	mov	r1, r4
   11fbc:	ldr	r0, [r1, r0, lsl #2]!
   11fc0:	ldr	r2, [r1, #4]!
   11fc4:	cmp	r0, r2
   11fc8:	bhi	11ef4 <getc@plt+0x12c8>
   11fcc:	ldr	r1, [r1]
   11fd0:	strb	r6, [r7, r0]
   11fd4:	add	r0, r0, #1
   11fd8:	cmp	r0, r1
   11fdc:	bls	11fd0 <getc@plt+0x13a4>
   11fe0:	b	11ef4 <getc@plt+0x12c8>
   11fe4:	movw	r0, #12809	; 0x3209
   11fe8:	movt	r0, #1
   11fec:	bl	12390 <error@@Base>
   11ff0:	push	{fp, lr}
   11ff4:	mov	fp, sp
   11ff8:	bl	10aac <calloc@plt>
   11ffc:	cmp	r0, #0
   12000:	popne	{fp, pc}
   12004:	movw	r0, #15388	; 0x3c1c
   12008:	movt	r0, #1
   1200c:	bl	12390 <error@@Base>
   12010:	push	{r4, r5, r6, sl, fp, lr}
   12014:	add	fp, sp, #16
   12018:	mov	r2, r0
   1201c:	ldrb	ip, [r1]
   12020:	ldrb	r3, [r0]
   12024:	mov	r0, #0
   12028:	cmp	r3, #0
   1202c:	beq	12064 <getc@plt+0x1438>
   12030:	add	lr, r1, #1
   12034:	add	r6, r2, #1
   12038:	mov	r2, #0
   1203c:	uxtb	r4, ip
   12040:	uxtb	r5, r3
   12044:	cmp	r5, r4
   12048:	bne	12074 <getc@plt+0x1448>
   1204c:	ldrb	ip, [lr, r2]
   12050:	ldrb	r3, [r6, r2]
   12054:	add	r2, r2, #1
   12058:	cmp	r3, #0
   1205c:	bne	1203c <getc@plt+0x1410>
   12060:	b	12068 <getc@plt+0x143c>
   12064:	mov	r2, #0
   12068:	cmp	ip, #0
   1206c:	popeq	{r4, r5, r6, sl, fp, pc}
   12070:	mov	r3, #0
   12074:	ldrb	r1, [r1, r2]
   12078:	uxtb	r2, r3
   1207c:	mov	r0, #1
   12080:	cmp	r2, r1
   12084:	mvncc	r0, #0
   12088:	pop	{r4, r5, r6, sl, fp, pc}
   1208c:	push	{r4, r5, fp, lr}
   12090:	add	fp, sp, #8
   12094:	mov	r5, r1
   12098:	cmp	r0, #0
   1209c:	beq	120d0 <getc@plt+0x14a4>
   120a0:	mov	r4, r0
   120a4:	mov	r1, r5
   120a8:	bl	10ad0 <fopen@plt>
   120ac:	cmp	r0, #0
   120b0:	popne	{r4, r5, fp, pc}
   120b4:	ldrb	r0, [r5]
   120b8:	cmp	r0, #119	; 0x77
   120bc:	bne	120f4 <getc@plt+0x14c8>
   120c0:	movw	r0, #15414	; 0x3c36
   120c4:	movt	r0, #1
   120c8:	mov	r1, r4
   120cc:	bl	123d0 <error@@Base+0x40>
   120d0:	ldrb	r0, [r5]
   120d4:	movw	r1, #16560	; 0x40b0
   120d8:	movt	r1, #2
   120dc:	movw	r2, #16564	; 0x40b4
   120e0:	movt	r2, #2
   120e4:	cmp	r0, #114	; 0x72
   120e8:	moveq	r2, r1
   120ec:	ldr	r0, [r2]
   120f0:	pop	{r4, r5, fp, pc}
   120f4:	movw	r0, #15436	; 0x3c4c
   120f8:	movt	r0, #1
   120fc:	mov	r1, r4
   12100:	bl	123d0 <error@@Base+0x40>
   12104:	movw	r1, #16560	; 0x40b0
   12108:	movt	r1, #2
   1210c:	ldr	r1, [r1]
   12110:	cmp	r1, r0
   12114:	movwne	r1, #16564	; 0x40b4
   12118:	movtne	r1, #2
   1211c:	ldrne	r1, [r1]
   12120:	cmpne	r1, r0
   12124:	bxeq	lr
   12128:	b	10be4 <fclose@plt>
   1212c:	push	{fp, lr}
   12130:	mov	fp, sp
   12134:	sub	sp, sp, #88	; 0x58
   12138:	mov	r1, sp
   1213c:	bl	12f3c <error@@Base+0xbac>
   12140:	clz	r0, r0
   12144:	lsr	r0, r0, #5
   12148:	mov	sp, fp
   1214c:	pop	{fp, pc}
   12150:	push	{r4, sl, fp, lr}
   12154:	add	fp, sp, #8
   12158:	movw	r0, #17708	; 0x452c
   1215c:	movt	r0, #19
   12160:	ldrh	r1, [r0]
   12164:	add	r1, r1, #1
   12168:	strh	r1, [r0]
   1216c:	sxth	r0, r1
   12170:	bl	12184 <getc@plt+0x1558>
   12174:	mov	r4, r0
   12178:	bl	10b24 <unlink@plt>
   1217c:	mov	r0, r4
   12180:	pop	{r4, sl, fp, pc}
   12184:	push	{r4, r5, fp, lr}
   12188:	add	fp, sp, #8
   1218c:	sub	sp, sp, #104	; 0x68
   12190:	mov	r4, r0
   12194:	movw	r0, #27940	; 0x6d24
   12198:	movt	r0, #155	; 0x9b
   1219c:	ldr	r5, [r0]
   121a0:	bl	10b90 <getpid@plt>
   121a4:	mov	r3, r0
   121a8:	sxth	r0, r4
   121ac:	str	r0, [sp]
   121b0:	add	r4, sp, #4
   121b4:	movw	r1, #15477	; 0x3c75
   121b8:	movt	r1, #1
   121bc:	mov	r0, r4
   121c0:	mov	r2, r5
   121c4:	bl	10bf0 <sprintf@plt>
   121c8:	mov	r0, r4
   121cc:	bl	10b0c <strdup@plt>
   121d0:	sub	sp, fp, #8
   121d4:	pop	{r4, r5, fp, pc}
   121d8:	push	{r4, sl, fp, lr}
   121dc:	add	fp, sp, #8
   121e0:	mov	r4, r0
   121e4:	bl	10bb4 <strlen@plt>
   121e8:	sub	r0, r0, #1
   121ec:	sxth	r0, r0
   121f0:	cmp	r0, #0
   121f4:	blt	12204 <getc@plt+0x15d8>
   121f8:	ldrb	r1, [r4, r0]
   121fc:	cmp	r1, #47	; 0x2f
   12200:	bne	121e8 <getc@plt+0x15bc>
   12204:	add	r0, r4, r0
   12208:	add	r0, r0, #1
   1220c:	pop	{r4, sl, fp, pc}
   12210:	push	{r4, r5, r6, r7, fp, lr}
   12214:	add	fp, sp, #16
   12218:	mov	r4, r3
   1221c:	mov	r5, r2
   12220:	mov	r6, r1
   12224:	mov	r7, r0
   12228:	ldr	r0, [r1]
   1222c:	bl	121d8 <getc@plt+0x15ac>
   12230:	movw	r1, #27940	; 0x6d24
   12234:	movt	r1, #155	; 0x9b
   12238:	str	r0, [r1]
   1223c:	bl	12458 <error@@Base+0xc8>
   12240:	mov	r0, r7
   12244:	mov	r1, r6
   12248:	mov	r2, r5
   1224c:	mov	r3, r4
   12250:	pop	{r4, r5, r6, r7, fp, lr}
   12254:	b	12258 <getc@plt+0x162c>
   12258:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1225c:	add	fp, sp, #28
   12260:	sub	sp, sp, #12
   12264:	stmib	sp, {r2, r3}
   12268:	mov	r7, r1
   1226c:	mov	r5, r0
   12270:	ldr	r0, [r0]
   12274:	cmp	r0, #1
   12278:	bne	12290 <getc@plt+0x1664>
   1227c:	movw	r0, #16540	; 0x409c
   12280:	movt	r0, #2
   12284:	ldrb	r0, [r0]
   12288:	cmp	r0, #0
   1228c:	bne	12348 <getc@plt+0x171c>
   12290:	ldr	r9, [r5]
   12294:	mov	r6, #0
   12298:	cmp	r9, #2
   1229c:	blt	12338 <getc@plt+0x170c>
   122a0:	mov	sl, #1
   122a4:	mov	r6, #0
   122a8:	mov	r8, #1
   122ac:	ldr	r4, [r7, sl, lsl #2]
   122b0:	ldrb	r0, [r4]
   122b4:	cmp	r0, #45	; 0x2d
   122b8:	bne	12314 <getc@plt+0x16e8>
   122bc:	ldrb	r0, [r4, #1]
   122c0:	cmp	r0, #0
   122c4:	beq	12314 <getc@plt+0x16e8>
   122c8:	mov	r0, r4
   122cc:	bl	10bb4 <strlen@plt>
   122d0:	mov	r2, r0
   122d4:	movw	r0, #15506	; 0x3c92
   122d8:	movt	r0, #1
   122dc:	mov	r1, r4
   122e0:	bl	10c14 <strncmp@plt>
   122e4:	cmp	r0, #0
   122e8:	beq	12348 <getc@plt+0x171c>
   122ec:	add	r0, sl, #1
   122f0:	mov	r1, #0
   122f4:	cmp	r0, r9
   122f8:	ldrlt	r1, [r7, r0, lsl #2]
   122fc:	mov	r0, r4
   12300:	ldr	r2, [sp, #8]
   12304:	bl	12504 <error@@Base+0x174>
   12308:	cmp	r0, #0
   1230c:	addne	r8, r8, #1
   12310:	b	12324 <getc@plt+0x16f8>
   12314:	ldr	r0, [r7, sl, lsl #2]
   12318:	sxth	r1, r6
   1231c:	str	r0, [r7, r1, lsl #2]
   12320:	add	r6, r6, #1
   12324:	ldr	r9, [r5]
   12328:	add	r8, r8, #1
   1232c:	sxth	sl, r8
   12330:	cmp	r9, sl
   12334:	bgt	122ac <getc@plt+0x1680>
   12338:	sxth	r0, r6
   1233c:	str	r0, [r5]
   12340:	sub	sp, fp, #28
   12344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12348:	ldr	r0, [sp, #4]
   1234c:	bl	124b4 <error@@Base+0x124>
   12350:	push	{fp, lr}
   12354:	mov	fp, sp
   12358:	mov	r0, #0
   1235c:	bl	12360 <getc@plt+0x1734>
   12360:	push	{fp, lr}
   12364:	mov	fp, sp
   12368:	mov	r4, r0
   1236c:	movw	r0, #27944	; 0x6d28
   12370:	movt	r0, #155	; 0x9b
   12374:	ldr	r0, [r0]
   12378:	cmp	r0, #0
   1237c:	beq	12384 <getc@plt+0x1758>
   12380:	blx	r0
   12384:	bl	125f4 <error@@Base+0x264>
   12388:	mov	r0, r4
   1238c:	bl	10b9c <exit@plt>

00012390 <error@@Base>:
   12390:	push	{fp, lr}
   12394:	mov	fp, sp
   12398:	mov	r3, r0
   1239c:	movw	r0, #27940	; 0x6d24
   123a0:	movt	r0, #155	; 0x9b
   123a4:	ldr	r2, [r0]
   123a8:	movw	r0, #16552	; 0x40a8
   123ac:	movt	r0, #2
   123b0:	ldr	r0, [r0]
   123b4:	movw	r1, #15456	; 0x3c60
   123b8:	movt	r1, #1
   123bc:	bl	10bc0 <fprintf@plt>
   123c0:	movw	r0, #16544	; 0x40a0
   123c4:	movt	r0, #2
   123c8:	ldr	r0, [r0]
   123cc:	bl	12360 <getc@plt+0x1734>
   123d0:	push	{fp, lr}
   123d4:	mov	fp, sp
   123d8:	sub	sp, sp, #8
   123dc:	mov	r3, r0
   123e0:	movw	r0, #27940	; 0x6d24
   123e4:	movt	r0, #155	; 0x9b
   123e8:	ldr	r2, [r0]
   123ec:	movw	r0, #16552	; 0x40a8
   123f0:	movt	r0, #2
   123f4:	ldr	r0, [r0]
   123f8:	str	r1, [sp]
   123fc:	movw	r1, #15464	; 0x3c68
   12400:	movt	r1, #1
   12404:	bl	10bc0 <fprintf@plt>
   12408:	movw	r0, #16544	; 0x40a0
   1240c:	movt	r0, #2
   12410:	ldr	r0, [r0]
   12414:	bl	12360 <getc@plt+0x1734>
   12418:	push	{fp, lr}
   1241c:	mov	fp, sp
   12420:	sub	sp, sp, #8
   12424:	mov	r3, r0
   12428:	movw	r0, #27940	; 0x6d24
   1242c:	movt	r0, #155	; 0x9b
   12430:	ldr	r2, [r0]
   12434:	movw	r0, #16552	; 0x40a8
   12438:	movt	r0, #2
   1243c:	ldr	r0, [r0]
   12440:	str	r1, [sp]
   12444:	movw	r1, #15464	; 0x3c68
   12448:	movt	r1, #1
   1244c:	bl	10bc0 <fprintf@plt>
   12450:	mov	sp, fp
   12454:	pop	{fp, pc}
   12458:	push	{r4, sl, fp, lr}
   1245c:	add	fp, sp, #8
   12460:	movw	r4, #9348	; 0x2484
   12464:	movt	r4, #1
   12468:	mov	r0, #2
   1246c:	mov	r1, r4
   12470:	bl	10b78 <__sysv_signal@plt>
   12474:	mov	r0, #15
   12478:	mov	r1, r4
   1247c:	pop	{r4, sl, fp, lr}
   12480:	b	10b78 <__sysv_signal@plt>
   12484:	movw	r0, #17710	; 0x452e
   12488:	movt	r0, #19
   1248c:	ldrb	r1, [r0]
   12490:	cmp	r1, #1
   12494:	bxeq	lr
   12498:	push	{fp, lr}
   1249c:	mov	fp, sp
   124a0:	mov	r1, #1
   124a4:	strb	r1, [r0]
   124a8:	movw	r0, #15491	; 0x3c83
   124ac:	movt	r0, #1
   124b0:	bl	12390 <error@@Base>
   124b4:	push	{fp, lr}
   124b8:	mov	fp, sp
   124bc:	mov	r3, r0
   124c0:	movw	r0, #27936	; 0x6d20
   124c4:	movt	r0, #155	; 0x9b
   124c8:	ldr	r0, [r0]
   124cc:	cmp	r0, #0
   124d0:	bne	124fc <error@@Base+0x16c>
   124d4:	movw	r0, #27940	; 0x6d24
   124d8:	movt	r0, #155	; 0x9b
   124dc:	ldr	r2, [r0]
   124e0:	movw	r0, #16552	; 0x40a8
   124e4:	movt	r0, #2
   124e8:	ldr	r0, [r0]
   124ec:	movw	r1, #15512	; 0x3c98
   124f0:	movt	r1, #1
   124f4:	bl	10bc0 <fprintf@plt>
   124f8:	bl	12350 <getc@plt+0x1724>
   124fc:	blx	r0
   12500:	bl	12350 <getc@plt+0x1724>
   12504:	push	{r4, sl, fp, lr}
   12508:	add	fp, sp, #8
   1250c:	mov	ip, r0
   12510:	cmp	r2, #0
   12514:	ldrbne	r0, [r2]
   12518:	cmpne	r0, #0
   1251c:	bne	12530 <error@@Base+0x1a0>
   12520:	movw	r0, #15527	; 0x3ca7
   12524:	movt	r0, #1
   12528:	mov	r1, ip
   1252c:	bl	123d0 <error@@Base+0x40>
   12530:	ldrb	lr, [ip, #1]
   12534:	mov	r3, #0
   12538:	cmp	lr, r0
   1253c:	beq	12564 <error@@Base+0x1d4>
   12540:	mov	r0, #1
   12544:	sxth	r3, r0
   12548:	add	r4, r3, r3, lsl #1
   1254c:	ldrb	r4, [r2, r4, lsl #2]
   12550:	cmp	r4, #0
   12554:	beq	12520 <error@@Base+0x190>
   12558:	add	r0, r0, #1
   1255c:	cmp	lr, r4
   12560:	bne	12544 <error@@Base+0x1b4>
   12564:	add	r0, r3, r3, lsl #1
   12568:	add	r3, r2, r0, lsl #2
   1256c:	ldr	r0, [r3, #4]
   12570:	cmp	r0, #0
   12574:	beq	125b4 <error@@Base+0x224>
   12578:	mov	r2, ip
   1257c:	ldrb	lr, [r2, #2]!
   12580:	cmp	r1, #0
   12584:	cmpeq	lr, #0
   12588:	beq	125b4 <error@@Base+0x224>
   1258c:	ldr	r3, [r0]
   12590:	cmp	r3, #0
   12594:	bne	125e4 <error@@Base+0x254>
   12598:	cmp	lr, #0
   1259c:	movne	r1, r2
   125a0:	str	r1, [r0]
   125a4:	ldrb	r0, [r2]
   125a8:	clz	r0, r0
   125ac:	lsr	r0, r0, #5
   125b0:	pop	{r4, sl, fp, pc}
   125b4:	ldr	r0, [r3, #8]
   125b8:	cmp	r0, #0
   125bc:	beq	12520 <error@@Base+0x190>
   125c0:	ldrb	r1, [ip, #2]
   125c4:	cmp	r1, #0
   125c8:	bne	12520 <error@@Base+0x190>
   125cc:	ldrb	r1, [r0]
   125d0:	cmp	r1, #0
   125d4:	moveq	r1, #1
   125d8:	strbeq	r1, [r0]
   125dc:	moveq	r0, #0
   125e0:	popeq	{r4, sl, fp, pc}
   125e4:	movw	r0, #15542	; 0x3cb6
   125e8:	movt	r0, #1
   125ec:	mov	r1, ip
   125f0:	bl	123d0 <error@@Base+0x40>
   125f4:	push	{r4, r5, r6, sl, fp, lr}
   125f8:	add	fp, sp, #16
   125fc:	movw	r5, #17708	; 0x452c
   12600:	movt	r5, #19
   12604:	ldrsh	r0, [r5]
   12608:	cmp	r0, #1
   1260c:	poplt	{r4, r5, r6, sl, fp, pc}
   12610:	mov	r6, #1
   12614:	sxth	r0, r6
   12618:	bl	12184 <getc@plt+0x1558>
   1261c:	mov	r4, r0
   12620:	bl	10b24 <unlink@plt>
   12624:	mov	r0, r4
   12628:	bl	10adc <free@plt>
   1262c:	add	r0, r6, #1
   12630:	sxth	r6, r0
   12634:	ldrsh	r0, [r5]
   12638:	cmp	r6, r0
   1263c:	ble	12614 <error@@Base+0x284>
   12640:	pop	{r4, r5, r6, sl, fp, pc}
   12644:	push	{r4, r5, r6, sl, fp, lr}
   12648:	add	fp, sp, #16
   1264c:	mov	r4, r2
   12650:	mov	r5, r1
   12654:	mov	r6, r0
   12658:	mov	r0, #1
   1265c:	mov	r1, #16
   12660:	bl	11ff0 <getc@plt+0x13c4>
   12664:	mov	r1, r0
   12668:	strb	r5, [r0, #8]
   1266c:	str	r4, [r0, #12]
   12670:	mov	r0, r6
   12674:	pop	{r4, r5, r6, sl, fp, lr}
   12678:	b	12d98 <error@@Base+0xa08>
   1267c:	push	{r4, r5, r6, r7, fp, lr}
   12680:	add	fp, sp, #16
   12684:	mov	r5, r2
   12688:	mov	r2, r1
   1268c:	mov	r4, r0
   12690:	cmp	r1, #0
   12694:	bne	126a4 <error@@Base+0x314>
   12698:	ldrb	r0, [r5]
   1269c:	cmp	r0, #0
   126a0:	bne	1273c <error@@Base+0x3ac>
   126a4:	ldr	r7, [r4, #4]
   126a8:	movw	r1, #15761	; 0x3d91
   126ac:	movt	r1, #1
   126b0:	mov	r0, r2
   126b4:	bl	1208c <getc@plt+0x1460>
   126b8:	mov	r6, r0
   126bc:	ldrb	r0, [r5]
   126c0:	cmp	r0, #0
   126c4:	beq	126d4 <error@@Base+0x344>
   126c8:	mov	r0, r6
   126cc:	bl	12750 <error@@Base+0x3c0>
   126d0:	strb	r0, [r5, #11]
   126d4:	ldrb	r2, [r5, #1]
   126d8:	ldr	r3, [r5, #4]
   126dc:	cmp	r3, #0
   126e0:	movweq	r3, #94	; 0x5e
   126e4:	mov	r0, r6
   126e8:	mov	r1, r4
   126ec:	bl	127fc <error@@Base+0x46c>
   126f0:	mov	r0, r6
   126f4:	bl	12104 <getc@plt+0x14d8>
   126f8:	ldrb	r0, [r5, #9]
   126fc:	cmp	r0, #0
   12700:	beq	1271c <error@@Base+0x38c>
   12704:	cmp	r7, #0
   12708:	mov	r0, r4
   1270c:	addne	r0, r7, #4
   12710:	ldr	r1, [r0]
   12714:	mov	r0, r4
   12718:	bl	12904 <error@@Base+0x574>
   1271c:	ldrb	r0, [r5, #10]
   12720:	cmp	r0, #0
   12724:	popeq	{r4, r5, r6, r7, fp, pc}
   12728:	cmp	r7, #0
   1272c:	addne	r4, r7, #4
   12730:	ldr	r0, [r4]
   12734:	pop	{r4, r5, r6, r7, fp, lr}
   12738:	b	129ec <error@@Base+0x65c>
   1273c:	movw	r0, #15559	; 0x3cc7
   12740:	movt	r0, #1
   12744:	movw	r1, #15575	; 0x3cd7
   12748:	movt	r1, #1
   1274c:	bl	123d0 <error@@Base+0x40>
   12750:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12754:	add	fp, sp, #24
   12758:	sub	sp, sp, #104	; 0x68
   1275c:	mov	r4, r0
   12760:	add	r0, sp, #4
   12764:	mov	r1, #99	; 0x63
   12768:	mov	r2, r4
   1276c:	bl	10af4 <fgets@plt>
   12770:	cmp	r0, #0
   12774:	beq	12794 <error@@Base+0x404>
   12778:	add	r0, sp, #4
   1277c:	movw	r1, #15627	; 0x3d0b
   12780:	movt	r1, #1
   12784:	mov	r2, #51	; 0x33
   12788:	bl	10c14 <strncmp@plt>
   1278c:	cmp	r0, #0
   12790:	beq	127ac <error@@Base+0x41c>
   12794:	mov	r0, r4
   12798:	bl	10b18 <rewind@plt>
   1279c:	mov	r7, #0
   127a0:	mov	r0, r7
   127a4:	sub	sp, fp, #24
   127a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   127ac:	mov	r6, #0
   127b0:	add	r5, sp, #4
   127b4:	movw	r8, #15683	; 0x3d43
   127b8:	movt	r8, #1
   127bc:	mov	r7, #1
   127c0:	mov	r0, r5
   127c4:	mov	r1, #99	; 0x63
   127c8:	mov	r2, r4
   127cc:	bl	10af4 <fgets@plt>
   127d0:	cmp	r0, #0
   127d4:	beq	127a0 <error@@Base+0x410>
   127d8:	mov	r0, r5
   127dc:	mov	r1, r8
   127e0:	bl	10ab8 <strcmp@plt>
   127e4:	cmp	r0, #0
   127e8:	addeq	r6, r6, #1
   127ec:	sxth	r6, r6
   127f0:	cmp	r6, #2
   127f4:	blt	127c0 <error@@Base+0x430>
   127f8:	b	127a0 <error@@Base+0x410>
   127fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12800:	add	fp, sp, #28
   12804:	sub	sp, sp, #20
   12808:	str	r3, [sp, #8]
   1280c:	mov	r5, r2
   12810:	str	r1, [sp, #4]
   12814:	mov	r9, r0
   12818:	bl	10c2c <getc@plt>
   1281c:	cmn	r0, #1
   12820:	beq	128dc <error@@Base+0x54c>
   12824:	uxtb	r8, r5
   12828:	add	r4, sp, #16
   1282c:	add	r1, r4, #1
   12830:	str	r1, [sp]
   12834:	mov	r7, #0
   12838:	movw	r6, #15872	; 0x3e00
   1283c:	movt	r6, #2
   12840:	add	r1, r6, r0
   12844:	ldrsb	sl, [r1]
   12848:	cmp	sl, #0
   1284c:	ble	128e4 <error@@Base+0x554>
   12850:	strb	r0, [sp, #16]
   12854:	cmp	sl, #1
   12858:	beq	12884 <error@@Base+0x4f4>
   1285c:	mov	r5, r8
   12860:	sub	r8, sl, #1
   12864:	ldr	r0, [sp]
   12868:	mov	r1, #1
   1286c:	mov	r2, r8
   12870:	mov	r3, r9
   12874:	bl	10b54 <fread@plt>
   12878:	cmp	r0, r8
   1287c:	mov	r8, r5
   12880:	bne	128f8 <error@@Base+0x568>
   12884:	mov	r0, r4
   12888:	mov	r1, #4
   1288c:	add	r2, sp, #12
   12890:	bl	10b60 <utf8proc_iterate@plt>
   12894:	cmp	r0, sl
   12898:	bne	128f0 <error@@Base+0x560>
   1289c:	ldr	r2, [sp, #12]
   128a0:	cmp	r8, #0
   128a4:	beq	128b8 <error@@Base+0x528>
   128a8:	mov	r5, #1
   128ac:	ldr	r0, [sp, #8]
   128b0:	cmp	r2, r0
   128b4:	beq	128c8 <error@@Base+0x538>
   128b8:	ldr	r0, [sp, #4]
   128bc:	mov	r1, r7
   128c0:	bl	12644 <error@@Base+0x2b4>
   128c4:	mov	r5, #0
   128c8:	mov	r0, r9
   128cc:	bl	10c2c <getc@plt>
   128d0:	cmn	r0, #1
   128d4:	mov	r7, r5
   128d8:	bne	12840 <error@@Base+0x4b0>
   128dc:	sub	sp, fp, #28
   128e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   128e4:	movw	r0, #15739	; 0x3d7b
   128e8:	movt	r0, #1
   128ec:	bl	12390 <error@@Base>
   128f0:	bl	10bfc <utf8proc_errmsg@plt>
   128f4:	bl	12390 <error@@Base>
   128f8:	movw	r0, #15763	; 0x3d93
   128fc:	movt	r0, #1
   12900:	bl	12390 <error@@Base>
   12904:	push	{r4, r5, r6, r7, fp, lr}
   12908:	add	fp, sp, #16
   1290c:	cmp	r1, #0
   12910:	popeq	{r4, r5, r6, r7, fp, pc}
   12914:	mov	r5, r1
   12918:	mov	r4, r0
   1291c:	mov	r6, #32
   12920:	mov	r7, r1
   12924:	ldr	r0, [r7, #12]
   12928:	bl	12cc8 <error@@Base+0x938>
   1292c:	cmp	r0, #0
   12930:	strne	r6, [r7, #12]
   12934:	ldr	r7, [r7, #4]
   12938:	cmp	r7, #0
   1293c:	bne	12924 <error@@Base+0x594>
   12940:	mov	r6, #0
   12944:	b	12958 <error@@Base+0x5c8>
   12948:	mov	r0, #1
   1294c:	cmp	r1, #32
   12950:	beq	12980 <error@@Base+0x5f0>
   12954:	b	129c0 <error@@Base+0x630>
   12958:	ldr	r7, [r5, #4]
   1295c:	ldr	r1, [r5, #12]
   12960:	cmp	r1, #32
   12964:	bne	129ac <error@@Base+0x61c>
   12968:	tst	r6, #255	; 0xff
   1296c:	beq	12980 <error@@Base+0x5f0>
   12970:	cmp	r7, #0
   12974:	ldrne	r1, [r7, #12]
   12978:	cmpne	r1, #10
   1297c:	bne	12948 <error@@Base+0x5b8>
   12980:	tst	r6, #255	; 0xff
   12984:	cmpne	r7, #0
   12988:	beq	129c8 <error@@Base+0x638>
   1298c:	ldr	r0, [r7, #12]
   12990:	cmp	r0, #32
   12994:	bne	129c8 <error@@Base+0x638>
   12998:	ldrb	r0, [r5, #8]
   1299c:	ldrb	r1, [r7, #8]
   129a0:	orr	r0, r1, r0
   129a4:	strb	r0, [r7, #8]
   129a8:	b	129c8 <error@@Base+0x638>
   129ac:	subs	r0, r1, #10
   129b0:	movwne	r0, #1
   129b4:	tst	r6, #255	; 0xff
   129b8:	cmpeq	r1, #10
   129bc:	beq	129c8 <error@@Base+0x638>
   129c0:	mov	r6, r0
   129c4:	b	129dc <error@@Base+0x64c>
   129c8:	mov	r0, r4
   129cc:	mov	r1, r5
   129d0:	bl	12dc0 <error@@Base+0xa30>
   129d4:	mov	r0, r5
   129d8:	bl	10adc <free@plt>
   129dc:	cmp	r7, #0
   129e0:	mov	r5, r7
   129e4:	bne	12958 <error@@Base+0x5c8>
   129e8:	pop	{r4, r5, r6, r7, fp, pc}
   129ec:	push	{r4, sl, fp, lr}
   129f0:	add	fp, sp, #8
   129f4:	cmp	r0, #0
   129f8:	popeq	{r4, sl, fp, pc}
   129fc:	mov	r4, r0
   12a00:	ldr	r0, [r4, #12]
   12a04:	bl	10b30 <utf8proc_tolower@plt>
   12a08:	str	r0, [r4, #12]
   12a0c:	ldr	r4, [r4, #4]
   12a10:	cmp	r4, #0
   12a14:	bne	12a00 <error@@Base+0x670>
   12a18:	pop	{r4, sl, fp, pc}
   12a1c:	push	{fp, lr}
   12a20:	mov	fp, sp
   12a24:	bl	10b00 <utf8proc_encode_char@plt>
   12a28:	cmp	r0, #0
   12a2c:	sxtbgt	r0, r0
   12a30:	popgt	{fp, pc}
   12a34:	movw	r0, #15585	; 0x3ce1
   12a38:	movt	r0, #1
   12a3c:	bl	12390 <error@@Base>
   12a40:	push	{r4, r5, r6, r7, fp, lr}
   12a44:	add	fp, sp, #16
   12a48:	mov	r7, r3
   12a4c:	mov	r4, r2
   12a50:	mov	r5, r1
   12a54:	tst	r0, #255	; 0xff
   12a58:	beq	12a98 <error@@Base+0x708>
   12a5c:	mov	r0, #94	; 0x5e
   12a60:	mov	r1, r4
   12a64:	bl	12a1c <error@@Base+0x68c>
   12a68:	mov	r6, r0
   12a6c:	cmp	r5, #10
   12a70:	bne	12aa4 <error@@Base+0x714>
   12a74:	movw	r0, #12437	; 0x3095
   12a78:	movt	r0, #1
   12a7c:	movw	r1, #15608	; 0x3cf8
   12a80:	movt	r1, #1
   12a84:	tst	r7, #255	; 0xff
   12a88:	moveq	r1, r0
   12a8c:	add	r0, r4, r6
   12a90:	pop	{r4, r5, r6, r7, fp, lr}
   12a94:	b	10bf0 <sprintf@plt>
   12a98:	mov	r6, #0
   12a9c:	cmp	r5, #10
   12aa0:	beq	12a74 <error@@Base+0x6e4>
   12aa4:	mov	r0, r5
   12aa8:	bl	12b1c <error@@Base+0x78c>
   12aac:	cmp	r0, #0
   12ab0:	beq	12af0 <error@@Base+0x760>
   12ab4:	mov	r0, r5
   12ab8:	bl	12b5c <error@@Base+0x7cc>
   12abc:	cmp	r0, #0
   12ac0:	beq	12ad4 <error@@Base+0x744>
   12ac4:	add	r1, r4, r6
   12ac8:	movw	r0, #9676	; 0x25cc
   12acc:	bl	12a1c <error@@Base+0x68c>
   12ad0:	add	r6, r6, r0
   12ad4:	add	r1, r4, r6
   12ad8:	mov	r0, r5
   12adc:	bl	12a1c <error@@Base+0x68c>
   12ae0:	add	r0, r6, r0
   12ae4:	mov	r1, #0
   12ae8:	strb	r1, [r4, r0]
   12aec:	pop	{r4, r5, r6, r7, fp, pc}
   12af0:	add	r0, r4, r6
   12af4:	cmp	r5, #255	; 0xff
   12af8:	bhi	12b08 <error@@Base+0x778>
   12afc:	movw	r1, #15613	; 0x3cfd
   12b00:	movt	r1, #1
   12b04:	b	12b10 <error@@Base+0x780>
   12b08:	movw	r1, #15620	; 0x3d04
   12b0c:	movt	r1, #1
   12b10:	mov	r2, r5
   12b14:	pop	{r4, r5, r6, r7, fp, lr}
   12b18:	b	10bf0 <sprintf@plt>
   12b1c:	push	{r4, sl, fp, lr}
   12b20:	add	fp, sp, #8
   12b24:	mov	r4, r0
   12b28:	bl	10ae8 <utf8proc_get_property@plt>
   12b2c:	mov	r1, r0
   12b30:	mov	r0, #1
   12b34:	cmp	r4, #32
   12b38:	popeq	{r4, sl, fp, pc}
   12b3c:	ldrsh	r1, [r1]
   12b40:	sub	r2, r1, #1
   12b44:	cmp	r2, #22
   12b48:	bcs	12b50 <error@@Base+0x7c0>
   12b4c:	pop	{r4, sl, fp, pc}
   12b50:	cmp	r1, #29
   12b54:	movne	r0, #0
   12b58:	pop	{r4, sl, fp, pc}
   12b5c:	push	{fp, lr}
   12b60:	mov	fp, sp
   12b64:	bl	10ba8 <utf8proc_category@plt>
   12b68:	sub	r1, r0, #6
   12b6c:	mov	r0, #0
   12b70:	cmp	r1, #3
   12b74:	movwcc	r0, #1
   12b78:	pop	{fp, pc}
   12b7c:	push	{r4, r5, r6, r7, fp, lr}
   12b80:	add	fp, sp, #16
   12b84:	sub	sp, sp, #16
   12b88:	mov	r6, r2
   12b8c:	mov	r2, r1
   12b90:	mov	r5, r0
   12b94:	movw	r1, #13281	; 0x33e1
   12b98:	movt	r1, #1
   12b9c:	mov	r0, r2
   12ba0:	bl	1208c <getc@plt+0x1460>
   12ba4:	mov	r4, r0
   12ba8:	cmp	r6, #0
   12bac:	beq	12c00 <error@@Base+0x870>
   12bb0:	movw	r0, #15627	; 0x3d0b
   12bb4:	movt	r0, #1
   12bb8:	mov	r1, #55	; 0x37
   12bbc:	mov	r2, #1
   12bc0:	mov	r3, r4
   12bc4:	bl	10b48 <fwrite@plt>
   12bc8:	movw	r7, #15683	; 0x3d43
   12bcc:	movt	r7, #1
   12bd0:	mov	r0, r7
   12bd4:	mov	r1, #55	; 0x37
   12bd8:	mov	r2, #1
   12bdc:	mov	r3, r4
   12be0:	bl	10b48 <fwrite@plt>
   12be4:	mov	r0, r4
   12be8:	blx	r6
   12bec:	mov	r0, r7
   12bf0:	mov	r1, #55	; 0x37
   12bf4:	mov	r2, #1
   12bf8:	mov	r3, r4
   12bfc:	bl	10b48 <fwrite@plt>
   12c00:	ldr	r6, [r5]
   12c04:	cmp	r6, #0
   12c08:	beq	12c3c <error@@Base+0x8ac>
   12c0c:	add	r5, sp, #7
   12c10:	ldr	r1, [r6, #12]
   12c14:	ldrb	r0, [r6, #8]
   12c18:	mov	r2, r5
   12c1c:	mov	r3, #0
   12c20:	bl	12a40 <error@@Base+0x6b0>
   12c24:	mov	r0, r5
   12c28:	mov	r1, r4
   12c2c:	bl	10c08 <fputs@plt>
   12c30:	ldr	r6, [r6, #4]
   12c34:	cmp	r6, #0
   12c38:	bne	12c10 <error@@Base+0x880>
   12c3c:	mov	r0, r4
   12c40:	bl	12104 <getc@plt+0x14d8>
   12c44:	sub	sp, fp, #16
   12c48:	pop	{r4, r5, r6, r7, fp, pc}
   12c4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12c50:	add	fp, sp, #24
   12c54:	sub	sp, sp, #8
   12c58:	mov	r6, r0
   12c5c:	mov	r0, #0
   12c60:	str	r0, [sp, #4]
   12c64:	ldrb	r0, [r1]
   12c68:	mov	r8, #1
   12c6c:	cmp	r0, #0
   12c70:	beq	12cbc <error@@Base+0x92c>
   12c74:	mov	r5, r1
   12c78:	add	r7, sp, #4
   12c7c:	mov	r0, r5
   12c80:	mvn	r1, #0
   12c84:	mov	r2, r7
   12c88:	bl	10b60 <utf8proc_iterate@plt>
   12c8c:	cmp	r0, #1
   12c90:	blt	12cb8 <error@@Base+0x928>
   12c94:	mov	r4, r0
   12c98:	ldr	r2, [sp, #4]
   12c9c:	mov	r0, r6
   12ca0:	mov	r1, #0
   12ca4:	bl	12644 <error@@Base+0x2b4>
   12ca8:	ldrb	r0, [r5, r4]!
   12cac:	cmp	r0, #0
   12cb0:	bne	12c7c <error@@Base+0x8ec>
   12cb4:	b	12cbc <error@@Base+0x92c>
   12cb8:	mov	r8, #0
   12cbc:	mov	r0, r8
   12cc0:	sub	sp, fp, #24
   12cc4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12cc8:	push	{r4, sl, fp, lr}
   12ccc:	add	fp, sp, #8
   12cd0:	mov	r4, r0
   12cd4:	bl	10ae8 <utf8proc_get_property@plt>
   12cd8:	cmp	r4, #10
   12cdc:	ble	12cf8 <error@@Base+0x968>
   12ce0:	sub	r1, r4, #11
   12ce4:	cmp	r1, #3
   12ce8:	bcc	12d14 <error@@Base+0x984>
   12cec:	cmp	r4, #160	; 0xa0
   12cf0:	beq	12d14 <error@@Base+0x984>
   12cf4:	b	12d20 <error@@Base+0x990>
   12cf8:	cmp	r4, #9
   12cfc:	beq	12d14 <error@@Base+0x984>
   12d00:	mov	r1, #0
   12d04:	cmp	r4, #10
   12d08:	bne	12d20 <error@@Base+0x990>
   12d0c:	mov	r0, r1
   12d10:	pop	{r4, sl, fp, pc}
   12d14:	mov	r1, #1
   12d18:	mov	r0, r1
   12d1c:	pop	{r4, sl, fp, pc}
   12d20:	ldrsh	r0, [r0]
   12d24:	sub	r0, r0, #23
   12d28:	mov	r1, #0
   12d2c:	cmp	r0, #3
   12d30:	movwcc	r1, #1
   12d34:	mov	r0, r1
   12d38:	pop	{r4, sl, fp, pc}
   12d3c:	vmov.i32	q8, #0	; 0x00000000
   12d40:	vst1.32	{d16-d17}, [r0]
   12d44:	bx	lr
   12d48:	mov	r2, r1
   12d4c:	ldr	r3, [r0]
   12d50:	mov	r1, #0
   12d54:	b	12d58 <error@@Base+0x9c8>
   12d58:	push	{r4, sl, fp, lr}
   12d5c:	add	fp, sp, #8
   12d60:	mov	r4, r0
   12d64:	stm	r2, {r1, r3}
   12d68:	cmp	r1, #0
   12d6c:	addne	r0, r1, #4
   12d70:	str	r2, [r0]
   12d74:	cmp	r3, #0
   12d78:	addeq	r3, r4, #4
   12d7c:	str	r2, [r3]
   12d80:	mov	r0, r4
   12d84:	bl	12e14 <error@@Base+0xa84>
   12d88:	ldr	r0, [r4, #12]
   12d8c:	add	r0, r0, #1
   12d90:	str	r0, [r4, #12]
   12d94:	pop	{r4, sl, fp, pc}
   12d98:	mov	r2, r1
   12d9c:	ldr	r1, [r0, #4]
   12da0:	mov	r3, #0
   12da4:	b	12d58 <error@@Base+0x9c8>
   12da8:	mov	r3, r2
   12dac:	mov	r2, r1
   12db0:	ldr	r1, [r3]
   12db4:	b	12d58 <error@@Base+0x9c8>
   12db8:	ldr	r3, [r1, #4]
   12dbc:	b	12d58 <error@@Base+0x9c8>
   12dc0:	push	{r4, sl, fp, lr}
   12dc4:	add	fp, sp, #8
   12dc8:	mov	r4, r0
   12dcc:	ldm	r1, {r0, r2}
   12dd0:	cmp	r0, #0
   12dd4:	mov	r3, r4
   12dd8:	addne	r3, r0, #4
   12ddc:	str	r2, [r3]
   12de0:	ldm	r1, {r0, r2}
   12de4:	cmp	r2, #0
   12de8:	addeq	r2, r4, #4
   12dec:	str	r0, [r2]
   12df0:	mov	r0, #0
   12df4:	str	r0, [r1]
   12df8:	str	r0, [r1, #4]
   12dfc:	mov	r0, r4
   12e00:	bl	12e14 <error@@Base+0xa84>
   12e04:	ldr	r0, [r4, #12]
   12e08:	sub	r0, r0, #1
   12e0c:	str	r0, [r4, #12]
   12e10:	pop	{r4, sl, fp, pc}
   12e14:	push	{r4, sl, fp, lr}
   12e18:	add	fp, sp, #8
   12e1c:	mov	r4, r0
   12e20:	ldr	r0, [r0, #8]
   12e24:	cmp	r0, #0
   12e28:	popeq	{r4, sl, fp, pc}
   12e2c:	bl	10adc <free@plt>
   12e30:	mov	r0, #0
   12e34:	str	r0, [r4, #8]
   12e38:	pop	{r4, sl, fp, pc}
   12e3c:	push	{r4, sl, fp, lr}
   12e40:	add	fp, sp, #8
   12e44:	mov	r4, r0
   12e48:	ldr	r0, [r0, #8]
   12e4c:	cmp	r0, #0
   12e50:	bne	12e94 <error@@Base+0xb04>
   12e54:	ldr	r0, [r4, #12]
   12e58:	cmp	r0, #0
   12e5c:	beq	12e94 <error@@Base+0xb04>
   12e60:	mov	r1, #4
   12e64:	bl	11ff0 <getc@plt+0x13c4>
   12e68:	str	r0, [r4, #8]
   12e6c:	ldr	r0, [r4]
   12e70:	cmp	r0, #0
   12e74:	popeq	{r4, sl, fp, pc}
   12e78:	mov	r1, #0
   12e7c:	ldr	r2, [r4, #8]
   12e80:	str	r0, [r2, r1]
   12e84:	add	r1, r1, #4
   12e88:	ldr	r0, [r0, #4]
   12e8c:	cmp	r0, #0
   12e90:	bne	12e7c <error@@Base+0xaec>
   12e94:	pop	{r4, sl, fp, pc}
   12e98:	push	{r4, r5, r6, sl, fp, lr}
   12e9c:	add	fp, sp, #16
   12ea0:	ldr	r6, [r0]
   12ea4:	cmp	r6, #0
   12ea8:	popeq	{r4, r5, r6, sl, fp, pc}
   12eac:	mov	r4, r1
   12eb0:	mov	r5, r0
   12eb4:	mov	r0, r5
   12eb8:	mov	r1, r6
   12ebc:	bl	12dc0 <error@@Base+0xa30>
   12ec0:	mov	r0, r6
   12ec4:	blx	r4
   12ec8:	ldr	r6, [r5]
   12ecc:	cmp	r6, #0
   12ed0:	bne	12eb4 <error@@Base+0xb24>
   12ed4:	pop	{r4, r5, r6, sl, fp, pc}
   12ed8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12edc:	mov	r7, r0
   12ee0:	ldr	r6, [pc, #72]	; 12f30 <error@@Base+0xba0>
   12ee4:	ldr	r5, [pc, #72]	; 12f34 <error@@Base+0xba4>
   12ee8:	add	r6, pc, r6
   12eec:	add	r5, pc, r5
   12ef0:	sub	r6, r6, r5
   12ef4:	mov	r8, r1
   12ef8:	mov	r9, r2
   12efc:	bl	10a8c <calloc@plt-0x20>
   12f00:	asrs	r6, r6, #2
   12f04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f08:	mov	r4, #0
   12f0c:	add	r4, r4, #1
   12f10:	ldr	r3, [r5], #4
   12f14:	mov	r2, r9
   12f18:	mov	r1, r8
   12f1c:	mov	r0, r7
   12f20:	blx	r3
   12f24:	cmp	r6, r4
   12f28:	bne	12f0c <error@@Base+0xb7c>
   12f2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12f30:	andeq	r0, r1, ip, lsl #30
   12f34:	andeq	r0, r1, r4, lsl #30
   12f38:	bx	lr
   12f3c:	mov	r2, r1
   12f40:	mov	r1, r0
   12f44:	mov	r0, #3
   12f48:	b	10b3c <__xstat@plt>

Disassembly of section .fini:

00012f4c <.fini>:
   12f4c:	push	{r3, lr}
   12f50:	pop	{r3, pc}
